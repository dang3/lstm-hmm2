push
add
lea
sub
movl
pop
add
es
or
mov
shrb
pop
xor
mov
fadds
inc
or
test
shlb
pop
add
pop
ret
push
mov
lahf
stos
push
mov
movsl
inc
rorb
push
fiadds
sub
lods
cld
aas
lahf
data16
xor
push
mov
rep
stc
enter
inc
fsub
ret
mov
pop
sbb
mov
test
xchg
adc
jle
jno
cld
adc
sub
sbb
push
push
loop
fdivrs
mov
adc
and
les
adc
push
push
rorl
mov
popf
push
adc
lcall
add
je
cmp
fisttpl
xchg
push
mov
cmp
push
add
out
in
sbb
loopne
lea
mulb
out
mov
in
fisubrl
js
imulb
js
push
push
adc
je
enter
push
push
adc
jmp
loopne
sarb
add
add
push
mov
jecxz
test
call
mov
rcll
jae
clc
push
xchg
inc
outsl
clc
and
je
adc
mov
filds
in
inc
lock
cwtl
cltd
sbb
inc
loopne
fs
push
adcl
fldcw
jg
xor
push
adc
cli
or
je
call
cwtl
test
rolb
mov
je
xor
mov
mov
adc
adc
nop
add
jne
push
jno
and
mov
and
ret
out
and
pusha
sarb
negl
cmp
xor
movsb
adc
adc
adc
sbb
xchg
sub
cmp
adc
dec
mov
test
xchg
inc
cmp
cmp
ret
mov
sub
sar
lret
or
daa
mov
add
add
mov
nop
and
test
jl
ljmp
mov
mov
fs
sub
mov
ja
add
inc
push
inc
adc
push
push
jmp
sbb
xchg
jl
sbb
daa
mov
inc
push
sbb
xchg
push
clc
adc
mov
incl
nop
lods
inc
int3
rorl
cli
loop
cltd
into
popa
inc
inc
adc
adc
xchg
dec
movsl
pop
test
lcall
or
push
add
rorb
test
mov
jne
test
jmp
push
and
fs
mov
push
lock
ffreep
aam
lcall
mov
adc
iret
mov
clc
je
mov
push
call
lock
jp
xchg
dec
imul
add
push
arpl
adc
pop
cmpb
sbb
cmp
lock
sbb
push
mov
xchg
jno
test
dec
mov
and
mov
jo
sub
nop
loopne
xchg
sti
or
test
in
jmp
adc
inc
mov
xor
ret
sub
mov
mov
and
das
les
and
xor
sbb
and
mov
dec
test
fisubrs
cmp
sbb
cmpsl
dec
loope
inc
ds
rcll
scas
inc
pop
repz
scas
push
jmp
mov
lds
or
xorb
jmp
push
xchg
cmp
je
mov
loope
in
es
xor
pusha
hlt
sub
sub
pop
in
sbb
mov
call
sub
dec
movsl
call
dec
xor
std
mov
sub
push
xor
cmc
push
sub
pop
push
jne
push
inc
nop
dec
add
outsb
xchg
inc
mov
add
dec
enter
xor
cmp
push
push
sbb
es
sbb
orb
mov
adc
adc
inc
inc
pop
xor
incl
push
movsl
lcall
jnp
cmpb
jno
les
mov
lds
les
shl
int3
add
xchg
xor
mov
roll
push
xor
push
xor
push
in
fwait
sbb
cmp
enter
pop
and
cli
and
add
push
xor
sub
fsts
lahf
mov
add
adc
scas
xchg
dec
pusha
sub
pop
sbb
dec
xor
and
xor
xor
or
movsb
adc
dec
and
rorb
lcall
hlt
add
jl
sub
mov
fs
adc
fists
shlb
inc
das
shlb
sub
daa
add
into
mov
data16
xor
push
adc
push
pop
arpl
or
and
test
out
dec
xor
dec
out
jno
cwtl
inc
push
sub
pusha
xor
stos
add
rclb
adc
test
shl
lret
rcrb
xchg
xor
add
push
push
and
lea
lods
inc
div
add
inc
rcl
loopne
mov
or
lods
and
lea
or
inc
jae
jns
dec
mov
sub
sbb
add
test
cmpsl
add
and
lea
fmulp
mov
ficoms
mov
nop
cmp
rolb
nop
and
and
add
dec
lret
adc
scas
xchg
in
fbld
and
sbb
inc
mov
flds
mov
xor
es
xor
push
push
mov
enter
mov
mov
jbe
xor
push
mov
adc
mov
cmp
jl
in
mov
dec
jbe
popa
push
push
mov
or
adc
jmp
sahf
push
inc
and
and
paddusb
xor
cwtl
xor
lock
rorl
bound
push
in
push
pop
adc
and
out
and
mov
mov
sub
push
adc
shrl
insl
mov
mov
jno
pushf
or
rolb
insb
es
jae
leave
pop
xorb
inc
dec
push
and
mov
push
push
adc
xchg
ret
or
daa
inc
test
mov
xor
dec
lods
popl
jno
sbb
sarl
ss
xor
dec
jo
xchg
adc
sub
testl
xchg
or
xor
or
add
cs
inc
cli
cmp
insl
subl
add
iret
jo
mov
jmp
aam
cwtl
push
push
inc
js
mov
aam
or
inc
nop
adc
dec
jg
cwtl
mov
loopne
dec
lds
mov
jp
add
les
push
jo,pn
scas
sbb
test
das
setne
mov
daa
adc
call
mov
cld
call
adc
imul
or
dec
mov
out
enter
jl
mov
loope
test
pop
out
inc
jb
inc
nop
push
adc
test
and
gs
sub
and
adc
loop
adc
lock
or
mov
and
and
rclb
fs
aaa
sbb
and
jne
and
pushf
and
xchg
inc
add
pushf
jo
inc
xchg
sbb
mov
push
xchg
add
xchg
xchg
xchg
sbb
dec
cmp
mov
xchg
in
sbb
dec
int3
dec
adc
lods
repnz
test
in
mov
mov
sbb
and
repnz
enter
aaa
add
jne
mov
jmp
sub
lret
or
clc
and
sbb
inc
loop
sub
rorb
push
mov
mov
and
mov
js
mov
mov
fmuls
xor
adc
xor
push
lret
les
pop
push
inc
sti
into
and
xor
mov
jle
movsb
push
push
enter
les
sub
mov
sub
xor
das
lock
call
cmp
je
xchg
enter
push
jne
cmp
pop
dec
mov
adc
xchg
mov
mov
test
hlt
popa
sbb
mov
and
xor
mov
test
aaa
jmp
mov
push
jno
mov
sub
dec
insb
inc
out
sub
jl
xchg
sub
sarb
adc
push
push
mov
mov
mov
mov
shll
dec
mov
mov
and
adc
sbb
mov
xchg
adc
or
dec
pop
lods
lds
je
enter
stc
or
mov
sub
fiaddl
popa
mov
js
movsb
int3
push
push
mov
insl
pop
adc
fsubrl
imul
push
fimuls
sub
enter
cmp
sti
cwtl
xor
es
dec
push
cli
pop
sub
insb
mov
push
xor
fsubrs
enter
mov
xor
andb
dec
mov
xor
add
and
adc
xchg
cld
cs
xchg
mov
fcoml
movsb
iret
test
jmp
cwtl
jb
nop
mov
xchg
pop
adc
mov
jge
pushf
rcll
or
dec
les
push
xchg
mov
cmp
xchg
cwtl
jb
add
cs
mov
jo
push
xchg
xchg
nop
lcall
pop
inc
xchg
and
lret
rcrb
xchg
mov
and
jmp
popf
mov
push
mov
jle
jno
jge
cmp
adc
lods
pop
sahf
and
and
inc
nop
add
movsb
adc
movsl
xchg
or
repnz
out
or
adcl
push
or
cmp
or
mov
sbbb
xor
adc
mov
cld
test
mov
and
fistpl
rcll
add
cmp
dec
dec
in
xor
inc
icebp
mov
icebp
dec
clc
mov
mov
mov
xchg
push
inc
aas
inc
pop
leave
ret
push
test
sbb
gs
pop
test
mov
jns
sbb
push
inc
fnstsw
dec
and
jb
ret
mov
sbb
sub
xor
dec
fs
test
psadbw
or
inc
mov
or
sti
sbb
add
adc
jl
inc
push
and
jnp
xor
mov
sbb
ret
mov
out
pop
inc
and
outsb
adc
cmp
cs
lods
xor
adc
mov
xor
add
dec
out
jecxz
in
add
out
pusha
dec
fs
pop
sub
pop
push
enter
aaa
fwait
addr16
jns
push
sub
mov
pushl
lea
shll
sbb
icebp
addb
inc
and
flds
push
sbb
or
movsl
pop
pop
mov
sti
push
pop
cld
sub
xchg
pop
ss
inc
popf
add
shrb
sub
push
movsl
push
lcall
inc
cmp
adc
cli
rclb
clc
lret
outsl
xchg
mov
scas
stos
ds
inc
push
in
call
adc
cmp
or
aad
jg
call
mov
mov
jno
test
das
lds
jmp
mov
sbb
jmp
mov
pop
popa
popa
call
mov
ret
rcl
jecxz
push
mov
imul
imul
push
test
negl
or
cmp
mov
cmp
jg
xchg
pop
add
imul
adc
call
test
xor
adc
lret
and
js
and
cld
push
fcoms
negb
adc
mov
rcll
cli
clc
cltd
movsbl
lahf
adc
paddb
mov
test
in
adc
ret
je
insl
ljmp
mov
xchg
cmp
xchg
stos
in
mov
and
inc
in
xchg
cmp
mov
test
mov
cmp
mov
xchg
push
sub
xor
adc
mov
mov
lods
jb
push
push
adc
cld
inc
mov
sbb
stos
imul
sbb
and
mov
aad
inc
adc
xchg
sub
mov
jno
call
push
xor
in
add
and
lret
bound
mov
pop
loop
es
enter
mov
test
dec
push
les
xchg
sahf
xchg
cmpsl
jno
pop
cld
es
pop
push
pop
sub
aad
inc
or
enter
cmp
dec
faddl
sbb
push
icebp
cltd
xchg
mov
or
push
xor
sub
mov
cli
int3
xchg
js
mov
or
outsb
aaa
lds
sti
ss
adc
push
int3
pop
xchg
hlt
ss
inc
jle
movsb
inc
push
jl
sub
inc
jo
sbb
iret
inc
mov
test
and
xor
push
sbb
test
xorb
addr16
mov
loop
bound
or
sub
mov
or
jmp
and
bound
pop
push
mov
mov
loop
ret
or
or
cld
hlt
inc
hlt
lahf
sbb
inc
add
mov
mov
std
nop
sub
push
and
push
adc
adc
push
aam
cs
jp
mov
dec
gs
bound
movsb
mov
adc
out
cld
xor
lea
add
sub
je
or
xor
dec
sbb
push
loopne
fcomps
rolb
pop
add
jne
push
sub
je
push
in
jo
rolb
gs
pop
subb
mov
jle
or
andb
mov
call
jae
cmp
and
push
bound
and
dec
enter
test
jl
out
test
es
dec
test
jmp
mov
mov
pop
sarl
xchg
les
sub
and
jne
adc
mov
xchg
and
push
mov
cmp
dec
xor
shll
cld
sbb
jp
pop
dec
jae
fiaddl
jbe
and
pop
xor
add
cmpb
cltd
xor
xor
xchg
adc
sub
fldl
loopne
ds
std
fildll
fmull
test
dec
fstl
xor
and
dec
jo
rcrb
cmp
sub
outsl
imul
mov
daa
rep
lahf
dec
add
call
or
movsl
leave
sti
xchg
pop
sbb
pop
enter
jle
jbe
dec
adc
mov
add
push
pop
jmp
xchg
pop
add
inc
cli
jp
repz
out
xchg
mov
nop
and
and
out
or
push
mov
mov
scas
in
jbe
push
jmp
add
add
movsl
dec
ret
cli
and
enter
mov
out
out
pop
stc
add
add
icebp
push
add
lidtl
in
in
lret
icebp
cs
xor
movaps
lret
cmp
push
xor
movsb
jns
xor
out
jbe
sub
inc
mov
in
int3
orb
push
call
inc
cmp
jecxz
in
mov
aam
and
xchg
mov
pop
repnz
in
adc
or
cmp
mov
repnz
in
add
xchg
and
pop
mov
pop
or
jmp
mov
or
subb
sub
cmp
xchg
mov
pcmpgtb
ja
or
decl
adc
inc
lea
pop
repnz
popa
adc
jmp
lahf
fsts
jmp
and
pusha
push
pop
inc
mov
mov
imul
ficoms
bound
adc
pop
outsb
mov
adc
rcrl
sub
cmp
je
dec
add
add
and
jmp
mov
push
mov
push
add
enter
sub
push
add
push
mov
lds
adc
mov
addr16
outsb
jno
call
add
xor
cld
aas
dec
sahf
or
push
adc
xor
scas
xor
jecxz
and
jne
lds
lock
out
xlat
orb
inc
xchg
movsl
add
mov
loop
xchg
sbb
push
scas
or
or
lds
loop
in
loopne
push
in
cmp
addr16
cmp
push
jne
pop
les
mov
int3
mov
das
out
imul
out
lcall
sbb
xor
cli
jne
lods
sbb
dec
sbb
popa
sbb
cli
arpl
or
mov
in
xchg
or
or
dec
add
enter
jl
bound
cmc
dec
cmpl
hlt
pop
fdivr
clc
popa
mov
adc
daa
sub
sbb
mov
les
repnz
inc
loopne
jae
inc
aas
xchg
and
and
mov
and
sbb
or
call
ret
and
sbb
in
jo
popf
into
mov
sub
sub
cmp
mov
cltd
dec
or
pop
sbbl
into
adc
mov
mov
inc
mov
inc
pop
push
sub
rclb
and
and
rol
xchg
sbb
mov
push
test
sub
and
pop
test
stc
inc
test
cmp
sub
es
ja
push
or
ret
sbb
ret
sbb
adc
jae
fcmovbe
push
xchg
fs
cld
inc
and
das
loop
add
sbb
hlt
xchg
xchg
ss
inc
xor
fnstsw
xor
pop
sti
outsl
inc
lret
call
cmovns
and
and
lods
xor
sub
pushf
jae
pushf
push
cmp
jne
dec
sahf
cld
clc
mov
mov
sbb
sbb
xchg
imul
inc
nop
cmp
clc
jne
pop
add
push
les
cmpb
jae
push
push
jnp
sbb
mov
mov
sbb
lods
adc
imul
aam
inc
jle
mov
jbe
push
sbb
decb
sub
jge
cmp
pop
rorb
push
or
sub
adc
cmc
adc
sub
cmp
dec
push
cs
jge
fisttpll
dec
add
lea
enter
call
leave
outsb
xchg
dec
jmp
ret
sahf
addl
pop
and
push
and
shrl
lock
push
aaa
imulb
imul
sub
mov
add
sbb
adc
jne
adc
push
adc
pop
dec
mov
sbb
addl
call
jmp
jg
fistps
pop
lret
or
pop
pop
ja
xchg
jmp
add
jmp
cmp
dec
and
add
mov
cwtl
mov
lods
add
inc
stos
mov
xor
add
mov
mov
mov
sbbb
inc
fs
fs
mov
or
les
addl
pop
push
xchg
push
sub
std
sbb
inc
lods
lods
mov
and
and
sbb
daa
iret
jbe
mov
test
sub
mov
fdivs
incl
into
push
lea
es
sub
push
jns
fisubs
aaa
or
xchg
stc
mov
or
test
ds
add
pop
sbb
pop
lea
xchg
pushf
addr16
and
add
lock
sbb
jge
pop
adc
jns
push
lea
lock
fbstp
orl
gs
xchg
sbb
cmpl
call
sub
add
xchg
imul
sub
into
das
dec
sbb
ss
push
adc
push
fbstp
sti
xchg
loop
push
std
inc
dec
dec
hlt
sub
pop
fwait
sahf
test
mov
inc
pop
test
pop
loop
mov
shlb
mov
int3
lods
subps
lds
sbb
pop
aam
xchg
mov
lret
or
add
or
ret
lds
mov
and
pusha
add
testb
jne
pop
orb
andl
rolb
fadds
jge
jp
mov
or
test
add
insl
decb
enter
sub
mov
lea
sbb
shlb
xor
pxor
mov
jo
dec
adc
data16
push
addr16
sbb
and
xor
pusha
xor
sbb
call
xchg
loopne
les
lea
pop
sbb
jg
and
js
sbb
cwtl
inc
clc
xchg
mov
icebp
loope
xor
cmp
aam
stos
xor
pop
adc
and
es
stos
arpl
in
sbb
jnp
lds
sub
jmp
adc
sub
cmp
pop
xor
sub
mov
and
je
mov
lds
push
imul
mov
je
and
cmc
filds
push
jl
jbe
insl
and
shrl
adc
and
mov
sub
cmp
in
sub
lods
mov
dec
lods
inc
mov
sub
dec
and
ret
ds
mov
popf
popa
sbbb
mov
std
dec
scas
adc
push
adc
pop
xchg
cs
sub
adc
in
xor
dec
and
data16
jecxz
dec
dec
inc
and
push
push
sub
adc
pop
xor
fdivrs
sbb
bound
dec
repz
mov
mov
cmp
sbb
inc
mov
shrb
scas
inc
mov
mov
dec
push
mov
in
sub
and
mov
das
lret
push
call
xchg
data16
adc
dec
nop
sarl
outsl
nop
sbb
rclb
xchg
addr16
xchg
inc
mov
cltd
jge
xor
adc
sbb
add
add
sub
and
or
push
adc
int
pop
xor
push
jns
adc
shlb
xor
scas
mov
leave
or
stc
clc
xor
daa
test
fs
or
in
js
mov
cmp
pop
and
xor
fiadds
outsb
mov
loopne
push
lea
xor
add
xchg
push
add
push
loop
push
outsl
sub
push
rolb
sbb
push
xchg
dec
les
je
mov
insl
ljmp
sbb
xor
lock
push
int3
lock
shrb
sub
jmp
sub
dec
inc
adc
jmp
rcrl
pop
dec
mov
push
jmp
mov
and
ljmp
in
and
pop
pop
pop
jmp
roll
push
dec
sarb
in
aas
cltd
or
cmp
sub
lock
fmuls
xorb
dec
or
inc
adc
xor
mov
and
xor
mov
test
xchg
add
jne
cmpsl
adc
fld
push
mov
mov
mov
and
sbb
mov
fwait
inc
sbb
mov
xor
mov
lret
dec
es
push
les
int3
lock
into
push
pop
xchg
mov
push
xchg
dec
fstl
xor
into
mov
push
or
add
repnz
sub
stc
lods
ja
jae
pushf
loop
cltd
cli
movsl
orb
dec
stos
xor
dec
in
in
into
push
lock
adc
adc
mov
test
sub
pop
xor
jne
nop
xor
add
pop
push
add
cmp
sub
mov
and
jmp
pop
xchg
in
cmp
and
inc
push
lods
in
adc
cmp
xlat
pop
scas
imul
dec
insb
sub
sub
adc
ljmp
je
popf
gs
add
add
mov
mov
add
push
inc
push
inc
push
and
xchg
mov
popa
jmp
or
or
test
adc
push
mov
fs
inc
adc
popf
inc
or
fstpt
cli
mov
and
hlt
fcoms
adc
add
mov
and
ljmp
inc
mov
mov
mov
mull
inc
enter
add
notb
mov
lds
adc
lock
stos
or
push
in
push
dec
lret
push
jbe
lret
and
clc
mov
and
outsl
dec
jp
pop
pop
je
mov
inc
add
mov
push
out
cmp
orb
movsb
or
rorb
test
je
andb
mov
sbb
mov
jmp
pop
loop
adc
adc
push
lahf
mov
test
sub
in
push
or
sub
gs
clc
lahf
push
mov
push
lods
push
test
sub
imulb
loop
fstps
xor
wrmsr
mov
cmp
xor
outsb
imul
rolb
popf
aas
lcall
pop
xor
mov
cltd
adc
jb
and
and
leave
repnz
dec
mov
jnp
jmp
dec
into
mov
out
mov
mov
push
mov
andl
cld
xorb
sub
mov
imul
lret
push
aam
inc
add
arpl
jns
mov
mov
add
cmp
add
mov
push
mov
ljmp
add
inc
and
rorl
sarl
jae
inc
addr16
jecxz
adc
ret
dec
xor
and
dec
add
lahf
push
loop
ret
cmpsb
sub
sbb
aaa
add
fistl
mov
push
out
adc
or
push
push
jo,pn
daa
inc
sub
ss
lds
in
fistl
mov
dec
repnz
mov
or
je
mov
std
or
add
dec
mov
dec
les
and
es
test
pop
xchg
cmpsl
mov
dec
int3
dec
int3
dec
adc
popa
daa
cmp
pop
fstpl
push
gs
xchg
xchg
add
lock
fcmovnb
or
push
lock
push
fmull
inc
outsb
sub
mov
ret
clc
cmp
push
cltd
idivl
inc
xchg
xchg
jl
mov
mov
fdivrs
and
loop
imul
lret
sbb
sbb
ret
test
inc
or
clc
insb
mov
jle
push
add
cmp
repnz
loope
xor
dec
movsl
jne
scas
dec
push
sbb
xchg
push
sub
pop
cli
mov
shll
pop
mov
or
imul
dec
push
cmp
je
adc
mov
mov
inc
inc
or
shlb
movsl
movsb
push
add
sub
test
pop
cli
sbb
push
aad
or
cmp
mov
cmp
or
adc
mov
or
mov
das
inc
dec
je
jp
dec
adc
into
lret
add
adc
adc
lods
cli
lods
push
pop
push
call
adc
loope
xchg
jmp
jle
test
sbb
or
sbbb
jle
add
jbe
je
sub
jo
test
pop
xor
mov
and
cltd
lea
or
orl
or
fcoml
movsl
aam
dec
js
out
and
or
fcoms
test
hlt
mov
pop
sbb
add
sub
in
in
loopne
pop
in
cmpsl
push
outsb
mov
dec
jp
mov
cmp
sub
hlt
inc
xchg
lea
and
and
shll
jmp
mov
and
and
ret
jmp
icebp
and
xor
xchg
lock
loop
je
mov
data16
sbb
lret
jmp
call
or
enter
enter
jp
add
je
jmp
fdivrs
loop
ja
inc
sub
xor
sbb
pop
shl
xor
mov
xchg
sti
mov
fnstsw
cmpsl
inc
mov
and
jecxz
adc
xchg
mov
sahf
mov
jbe
mov
hlt
cmp
or
add
jns
aas
in
movsl
inc
jle
outsl
jge
sti
pusha
and
cmp
pop
jb
xor
xchg
xor
mov
frstor
int
mulb
adc
enter
or
inc
xchg
gs
lahf
clc
pusha
fstps
inc
popf
sub
fldenv
gs
or
enter
repnz
add
fimuls
call
cwtl
imul
or
rcrb
mov
push
sub
jae
mov
aaa
fs
adc
cmp
dec
mov
push
cwtl
sbb
cmp
push
inc
inc
mov
fdivrs
push
inc
adc
jecxz
hlt
ret
aad
xor
push
outsb
pop
addb
sarb
inc
push
fs
andb
sbb
loop
pushf
ret
inc
push
mov
add
inc
fucompp
xchg
arpl
and
or
push
sti
dec
dec
mov
mov
add
test
jge
pop
pushl
inc
fsubs
movsb
xor
aas
nop
mov
cmp
jne
lds
mov
mov
stc
mov
daa
lret
or
sti
pop
dec
lret
bound
scas
cmp
and
add
adc
jg
mulb
jne
les
jmp
dec
push
mov
repz
add
push
xor
cltd
ja
pop
xchg
mov
xor
addl
xchg
and
addb
xor
push
lahf
inc
mov
mov
sbb
fcoms
fsubl
sbb
mov
cmp
cmp
xor
adc
cmp
test
pop
jle
or
popf
cwtl
enter
flds
jg
pusha
adc
sbb
cmp
popa
loopne,pt
in
movl
les
inc
and
jo
ljmp
or
cld
jle
xchg
aam
adc
adc
ret
or
aam
pop
add
adcb
inc
movsb
dec
pop
test
add
or
xor
cmc
lock
je
xor
movsb
pushf
pop
and
mov
jns
xchg
push
outsb
les
fbld
xor
popf
je
loop
ljmp
jo
add
and
stos
or
sbb
and
sbb
je
pop
and
loop
sbb
jnp
mov
mov
test
xchg
push
cltd
ljmp
sub
cmpsb
mov
jg
pop
jno
add
xor
sub
sbb
mov
add
pop
lahf
and
push
imul
test
add
mov
cmp
lret
out
dec
rsqrtps
add
ret
xor
es
push
dec
loop
push
dec
and
pop
adc
jb
add
sbb
into
adc
xchg
mov
je
and
std
or
lea
dec
or
sub
mov
inc
xor
adc
call
mov
pop
and
xor
or
adc
jo
and
nop
dec
cmp
sub
sbb
push
rcrb
mov
inc
sbb
sub
mov
shll
es
into
sti
sbb
pop
enter
push
push
inc
movsl
sbb
popf
pop
out
dec
ficoms
inc
dec
sbb
push
pop
pop
mov
out
cmpsb
into
ljmp
mov
clc
or
add
jp
mulps
push
jno
inc
out
xchg
das
push
xchg
sbb
loopne
mov
movsl
cmp
jbe
out
cmpl
sbb
nop
mov
mov
add
cmp
stos
or
mov
or
and
clc
inc
push
lods
sbb
mov
int
dec
jno
and
or
jecxz
push
add
dec
dec
into
mov
and
outsl
divb
in
lret
sbb
and
cmpb
popf
push
insb
lds
scas
xor
je
dec
pop
leave
mov
mov
insl
push
mov
xlat
mov
lahf
repnz
adc
sbb
xor
dec
je
cmp
pop
push
gs
fsubrs
fisubl
int
mov
mov
ljmp
or
inc
mov
add
adc
and
out
inc
lock
inc
mov
pop
divb
data16
or
and
cmpsl
pop
lods
mov
and
mov
movsb
lds
mov
jb
jg
arpl
push
inc
jg
or
clc
push
jle
fstl
and
adc
add
mov
int3
ss
adc
or
xchg
imulb
jmp
mov
dec
outsl
dec
push
mov
das
das
inc
mov
je
sub
lods
xchg
pusha
scas
lods
mov
ljmp
mov
cmc
add
dec
jecxz
test
push
lock
mov
cmp
dec
jae
push
pop
outsb
insl
nop
jmp
xlat
xor
mov
test
fwait
pop
mov
adc
sub
shll
push
cltd
mov
pushl
std
adc
push
dec
call
loop
bound
outsb
add
mov
xor
jne
movl
pop
cltd
push
xchg
dec
and
add
xor
xorl
xor
addr16
inc
push
rolb
pusha
xor
add
or
mov
push
mov
adc
xchg
loopne
add
lods
adc
xor
pop
mov
pushf
enter
fs
jns
add
test
jnp
mov
lds
pop
lods
enter
mov
xor
sub
xchg
mov
xor
insl
mov
adc
dec
mov
mov
fs
add
aam
and
and
stos
dec
and
aam
xor
sbb
mov
mov
inc
sub
xorb
outsb
xchg
push
or
add
test
fmulp
inc
call
adc
and
cltd
loopne
pushf
mov
shrl
popf
lea
stc
nop
inc
imul
mov
inc
test
call
and
push
xor
add
and
mov
mov
pop
fstps
dec
mov
dec
daa
push
mov
mov
popf
daa
or
xor
inc
or
lock
push
jecxz
aad
mov
dec
xchg
mov
xor
pop
pop
cmp
test
mov
les
dec
cmp
xchg
add
dec
loop
mov
adc
mov
mov
mov
aaa
and
scas
mov
enter
mov
push
xor
or
rcrl
dec
sub
fsubrs
data16
and
mov
les
push
rol
push
dec
push
cmp
dec
dec
fdivrs
or
push
push
call
jmp
mov
dec
xchg
adc
mov
in
push
adc
cvtpi2ps
rolb
out
xchg
push
push
xorl
dec
add
adc
mov
mov
add
inc
dec
call
add
lcall
cmp
test
xchg
js
or
aam
sbb
pop
dec
push
inc
lcall
test
jmp
repnz
ljmp
ds
ds
sbb
int
push
cld
inc
cld
or
testl
mov
or
inc
cmp
or
cmp
test
popa
lahf
aas
lea
or
jo
cmc
inc
and
add
pop
mov
js
jecxz
pop
xchg
movsb
and
and
xchg
add
xor
fwait
mov
inc
sbb
push
push
xchg
lods
or
in
mul
jl
test
test
sub
push
stos
sub
xchg
mov
cwtl
xchg
mov
push
adc
mov
and
orb
cmp
adc
mov
adc
sbb
fisttps
cmp
jge
pop
jecxz
cld
ret
push
xchg
adc
add
mov
inc
bnd
movsb
mov
inc
ljmp
lods
cmpsb
popf
cmp
adc
adc
and
push
jl
ds
lcall
shrl
js
or
dec
insb
dec
sbb
je
and
lret
aam
sub
je
push
push
or
cmp
je
sbb
xor
packsswb
mov
in
sub
adc
enter
jb
jle,pt
cmp
leave
adc
push
cmp
or
cmp
dec
and
jne
dec
push
hlt
jb
sub
loop
lret
add
call
sub
sbb
pop
ret
push
xchg
bound
ds
inc
xchg
imul
fldl
jne
or
dec
add
xchg
sub
int
lea
add
xor
pop
cmp
cld
popf
mov
push
push
lods
mov
xor
mov
call
cmpb
pop
shll
test
and
sub
pop
sbb
and
out
xor
bound
sbb
or
cmpsb
cmp
ret
mov
lret
les
addr16
xchg
sbb
xor
and
and
xor
negb
jne
pop
and
sbb
dec
test
dec
fstpl
stc
cld
or
std
and
add
push
push
fs
test
aas
imul
or
push
push
nop
inc
push
sbb
pushl
add
aaa
pop
int3
icebp
rcrl
repz
push
aas
xor
mov
lods
mov
dec
or
rcll
and
mov
js
sub
or
xchg
pop
cs
cmpsl
lock
mov
test
bound
push
clc
popl
fs
xor
mov
mov
or
xchg
jl
or
and
gs
mov
adc
cltd
sub
js
and
fs
cmp
jns
adc
push
sbb
test
push
pop
ret
xchg
mov
cld
push
xchg
repz
daa
jmp
sub
lock
cmp
mov
nop
add
xor
mov
add
push
pushl
adc
mov
cmp
push
push
dec
push
mov
sub
rol
sbb
xor
sti
or
push
inc
dec
je
mov
xchg
jge
aam
clc
cmp
scas
mov
or
std
sbbb
out
add
loopne
cli
or
sbb
add
push
and
into
stos
aas
leave
sub
and
mov
fadds
dec
repnz
loope
jne
or
sub
test
aas
sbb
aaa
mov
enter
cs
add
or
stc
push
lret
pusha
lea
test
push
fs
mov
cmp
sub
test
movsb
dec
rcrl
dec
push
sbb
inc
or
jbe
xor
in
jl
ds
jae
cmc
fsts
or
sub
adc
mov
jb
dec
xor
je
or
and
pop
clc
js
adc
push
cmp
dec
jo
je
sti
xchg
jecxz
or
dec
mov
mov
add
adc
mov
ret
ret
jmp
and
push
push
pop
ja
push
xlat
and
mov
inc
cld
in
cld
movsb
and
sub
call
clc
sub
inc
outsl
cs
sbb
push
or
adc
push
enter
adc
test
sub
pop
mov
jno
adc
add
lret
jg
mov
adc
adc
mov
dec
sti
or
or
jecxz
push
adc
sbbb
out
add
push
and
addr16
mov
sub
inc
sub
subl
or
push
jno
push
mov
sbb
adc
sbb
stc
or
sar
loope
das
in
fucomi
or
enter
enter
pop
daa
imul
sbb
and
inc
leave
fisubs
sub
pop
repz
and
sub
xchg
stc
mov
mov
jbe
gs
jns
or
mov
fs
add
dec
and
jo
test
mov
cmc
pop
jmp
into
test
sub
in
enter
push
cmc
xor
int3
jne
sub
push
aam
xchg
pushf
push
in
ds
inc
pop
loop
cs
adc
loop
dec
inc
ds
aad
inc
lods
fsubs
inc
mov
or
xchg
aas
push
lock
test
cmp
sbb
je
mov
pop
or
adc
push
sbb
sbb
test
enter
mov
adc
adc
xor
lahf
lret
and
aam
test
jo
xorb
adc
adc
or
cmc
enter
rorb
enter
push
fcoms
leave
xor
outsb
cmc
sub
sbb
mov
dec
mov
imul
cs
enter
jne
xor
sub
clc
mov
xor
jno
test
test
fldt
push
mov
std
test
jo
and
pop
and
sbb
sbb
xor
push
dec
sbb
mov
es
mov
leave
arpl
pop
xor
jmp
dec
or
inc
jns
or
sahf
cmp
sbb
jle
lea
dec
das
ficoml
mov
enter
jl
stos
loopne
and
nop
mov
and
push
fnstenv
ret
lods
out
inc
add
test
inc
dec
or
pop
pop
pop
inc
add
rol
lock
fistl
cmpsb
add
jl
push
lods
cmc
int
xor
test
xor
cmp
testb
adc
inc
pop
call
lret
sub
mov
cmp
mov
adc
jmp
ror
dec
lret
push
push
movsl
mov
pop
loopne
lds
movsb
bound
jle
push
inc
add
push
xor
int3
adc
or
inc
push
into
inc
and
inc
dec
rolb
roll
rolb
roll
aam
cmp
inc
daa
inc
sub
inc
pop
fadds
flds
fiaddl
fildl
faddl
fldl
fiadds
filds
loopne
push
loope
add
inc
push
jecxz
and
add
cmp
adc
or
ljmp
xor
out
inc
dec
lock
cmp
inc
adc
inc
inc
repz
pop
hlt
inc
aaa
cmc
inc
sbb
inc
push
clc
inc
sub
int3
sbb
adc
das
pop
mov
test
and
mov
enter
xlat
xor
and
std
xchg
sub
test
es
push
add
shll
test
fnstsw
jne
add
mov
mov
pop
or
jb
and
or
sbb
idivb
test
inc
cmp
xor
jb
clc
cmpsl
leave
sub
sbb
xchg
cmp
and
push
mov
add
or
and
inc
push
gs
subl
test
push
and
jb
nop
lock
mov
jbe
inc
and
dec
dec
mov
test
repz
and
fistpll
push
mov
mov
int3
jmp
xor
inc
cmp
movsb
cmp
cmp
mov
pop
stos
xchg
sti
out
add
fs
xchg
dec
adc
inc
popf
outsb
stos
call
jne
test
fwait
gs
mov
imul
and
je
cs
jmp
and
lock
inc
mov
or
std
inc
lret
jmp
cltd
daa
jbe
loop
adc
aas
inc
or
push
adc
dec
mov
movsl
inc
jae
in
mov
push
sbb
psubusb
sti
mov
dec
inc
out
push
sub
xor
xor
push
dec
sbb
xor
adc
out
adc
lock
loopne
sbb
pop
mov
push
and
clc
in
sbb
xchg
adc
mov
xchg
sti
pop
mov
sbb
fs
enter
xor
push
push
inc
fisubs
sbb
cmp
xchg
pop
and
lret
lea
loopne
call
or
jne
cmp
lds
inc
ret
icebp
dec
cmp
adc
push
jl
jo
or
cmp
add
cmc
cwtl
xchg
ret
sub
mov
call
negb
and
push
add
add
rorb
loop
jg
aam
fwait
outsl
xor
jnp
cmp
in
imul
enter
push
mov
adc
cmp
xlat
test
xor
orb
lds
and
cmp
jne
push
pop
pop
jmp
movsbl
mov
es
stc
adc
adc
pop
jbe
push
movsb
stc
mov
or
daa
push
adc
mov
xor
roll
test
enter
pusha
imul
push
mov
cs
cltd
test
idivb
fmulp
pusha
cli
mov
and
fs
push
movsb
adc
xchg
mov
xchg
cmp
and
test
jl
aaa
push
pop
add
daa
lahf
rcrb
xchg
adc
xchg
les
push
movsb
inc
out
lods
push
les
jmp
sbbl
jg
mov
sbb
loopne
xchg
enter
inc
adc
out
popf
pusha
xchg
je
pop
mov
jge
cld
cmp
adc
push
mov
adc
fwait
sub
xlat
xor
or
dec
fsubrs
hlt
sub
out
loopne
daa
dec
sub
xchg
sbb
adc
adc
mov
dec
mov
cltd
popa
dec
push
push
cmpsb
sbb
adc
stc
lahf
add
push
cld
or
adc
sub
and
push
jo
adc
xchg
lahf
xchg
jmp
add
and
testl
or
and
cwtl
stos
dec
lcall
es
in
or
dec
decb
pop
and
ret
push
insb
popa
or
and
mov
stos
movsl
aaa
push
jmp
fisttpll
push
movsl
pop
mov
fsqrt
push
les
xor
pop
mov
cmp
adcb
dec
mov
and
insb
mov
xor
lds
xor
mov
outsl
cltd
hlt
cmpsl
sub
popa
push
add
pop
fsubrl
add
jne
push
inc
push
popa
enter
xor
dec
rcrb
enter
clc
mov
loopne
dec
mov
pop
mov
shl
and
or
inc
inc
and
mov
fsub
loop
inc
and
dec
push
mov
xor
int3
lcall
inc
mov
cmp
bound
jb
clc
test
in
hlt
out
push
mov
push
cwtl
cmpb
push
mov
loope
or
mov
repnz
pusha
stc
mov
add
test
push
dec
ljmp
cmp
movsl
scas
add
call
sub
cltd
push
pusha
icebp
or
dec
jecxz
jns
or
cmp
cmp
bound
orl
addl
and
push
or
mov
es
cmp
or
lods
mov
shrb
movl
sub
adc
mov
das
jmp
jecxz
xchg
add
gs
and
dec
sbb
xorb
mov
ljmp
xchg
repz
insb
std
adc
xchg
or
and
adc
or
push
fcomps
cli
mov
mov
popf
dec
pop
mov
lea
nop
sub
mov
sbb
repz
pop
push
push
mov
and
inc
mov
fists
lret
dec
dec
rclb
push
out
jbe
cmp
sbb
cmp
mov
test
mov
pop
movsb
add
mov
stos
xchg
bound
pop
icebp
imul
jge
sbbb
xor
orb
aad
sbb
and
adc
call
mov
cltd
mov
sub
push
sbb
dec
push
push
xor
inc
dec
in
mov
dec
sbb
mov
jo
or
add
push
push
int3
lock
cmp
push
and
stc
out
nop
push
mov
cld
addr16
or
ficompl
psrld
mov
sbb
mov
lods
leave
cli
push
es
adc
insb
mov
push
loopne
cltd
leave
push
mov
xor
pop
adc
jo
lret
outsl
add
jmp
adc
pop
aas
in
mov
cmp
inc
stos
cmp
sbb
sbb
stc
pop
mov
bound
mov
xor
xchg
push
test
xor
ds
add
xchg
add
and
jbe
sbb
sbb
pop
sub
fs
inc
int3
and
xor
sbb
pusha
and
adc
shll
inc
inc
xor
add
ss
or
dec
movsl
imul
cli
popa
mov
and
rcrb
cmp
jg
jl
pusha
in
les
jmp
scas
jb
or
push
sbb
ret
sbb
repnz
add
push
dec
bound
movsl
insl
inc
or
sbb
out
xchg
cmc
pop
or
jbe
dec
push
outsl
pop
xchg
mov
inc
aam
xorb
cmp
dec
push
cmpsb
xor
sub
test
xchg
loope
in
inc
arpl
push
or
sub
dec
call
push
xchg
adc
sub
mov
xor
xchg
negb
add
mov
add
scas
sub
dec
mov
xor
shrl
add
icebp
cmp
mov
push
or
inc
cli
lods
xchg
adc
jle
bound
ljmp
dec
cmp
jae
and
pop
xor
lock
adc
shrl
pop
into
xor
arpl
mov
insl
or
push
dec
sub
adc
push
cli
pop
jp
xor
or
mov
cmpsl
inc
int3
adc
test
add
push
pop
mov
or
sti
jae
and
sahf
jbe
imul
jg
jp
daa
insl
mov
or
je
cmp
emms
dec
andl
adc
adc
or
push
sub
dec
or
adc
aaa
mov
push
ja
add
xchg
pop
adc
xchg
pop
mov
je
dec
mov
inc
jmp
mov
push
push
mov
pop
mov
xor
adc
mov
inc
xor
inc
inc
xor
cltd
sub
sbb
dec
adc
jb
in
sbbb
add
repnz
pop
pop
mov
add
bound
push
test
cmp
inc
loop
mov
stos
pushl
dec
adc
lods
adc
or
scas
fidivrl
or
or
adcb
test
sbb
sub
inc
jg
aaa
jecxz
dec
push
out
inc
cs
inc
jge
xlat
dec
xchg
scas
adc
pop
jmp
or
out
movsb
stos
jnp
mov
xor
and
xchg
loope
rorb
mov
popa
insb
shl
adc
and
sub
call
shlb
and
push
stc
mov
or
mov
clc
inc
enter
pop
push
and
mov
test
adc
or
mov
push
xor
add
xchg
mov
sbb
cmp
pop
jne
pusha
call
cmp
jo
sub
push
xchg
or
decb
sbb
icebp
aaa
sub
pop
mov
xchg
dec
mov
pusha
sub
pop
or
mov
dec
or
jle
mov
add
adc
inc
cmp
lret
sub
mov
inc
xchg
xchg
xchg
cmp
and
cmp
dec
fdivs
clc
dec
mov
and
aaa
and
or
cmc
jo
mov
add
mov
inc
enter
inc
add
ret
or
dec
push
lock
pop
push
cltd
idiv
test
jo
movb
inc
jmp
dec
popa
gs
mov
or
std
jmp
andb
push
js
inc
inc
xor
lock
sub
cltd
or
push
sbb
sgdtl
mov
in
pushf
test
xchg
and
nop
enter
enter
out
nop
push
lock
inc
clc
cld
sub
adc
lock
lods
sbb
or
sbb
sarb
or
call
push
push
cwtl
add
mov
mov
dec
insb
loope
cmpsl
les
and
hlt
nop
cltd
fisubs
outsb
xchg
pop
imul
pop
pushf
xchg
adc
mov
outsb
repz
pop
xor
sub
xor
lock
enter
push
adc
repnz
add
call
inc
int3
ja
or
mov
xor
es
add
push
lods
adc
xorl
mov
adc
mov
or
lea
push
pop
cmp
mov
scas
push
xchg
jecxz
rorb
call
mov
adc
mov
mov
lret
pop
dec
shll
pop
insb
mov
mov
inc
dec
xor
mov
jmp
sub
in
test
js
fwait
xchg
fisubrs
mov
adc
and
dec
push
imul
in
sub
sti
adc
fisttpll
shll
movsb
les
pop
adc
adc
jmp
inc
out
dec
or
mov
mul
xlat
push
cmp
clc
push
stos
adc
cmp
loop
pusha
mov
push
cmp
inc
divb
adc
test
ss
divl
adc
pop
push
fwait
xor
jne
mov
dec
notb
push
pop
add
mov
out
mov
imul
xor
inc
or
shll
mov
push
add
sub
fs
sbb
add
mov
movsb
nop
loop
inc
mov
lcall
and
jge
out
and
lcall
pop
aaa
sub
decb
and
je
fdiv
rcrl
adc
lahf
rclb
je
cli
add
and
mov
push
push
sbb
pushf
add
pushf
inc
cmpsl
and
cwtl
fs
push
xorb
popf
add
pop
pop
xor
stos
mov
pop
imulb
push
xor
xor
in
xor
push
in
push
push
adc
daa
rcrb
lret
inc
and
pop
daa
lds
mov
sarl
clc
outsl
test
dec
jns
mov
addl
push
xor
push
mov
dec
sbb
mov
fcmovne
adc
xor
das
xor
out
bound
movsl
imul
xor
adc
pop
cmpb
adc
in
adc
inc
cs
cmp
mov
push
pop
into
push
sbb
sbb
int
nop
pop
leave
sub
mov
jl
out
lea
pop
or
push
adc
and
dec
addr16
lods
or
bound
mov
fwait
bound
es
push
lret
pop
mov
push
rorl
pushf
dec
add
cmc
and
pop
mov
lods
mov
je
out
adc
popa
test
std
aas
test
shrb
int3
lcall
jecxz
fs
nop
push
or
mov
sub
cld
or
mov
sbb
cli
adc
nop
outsl
nop
push
lret
mov
and
rcrb
push
cmp
mov
push
bnd
daa
xchg
mov
test
inc
sbb
fwait
je
pop
call
push
xchg
dec
add
shlb
mov
push
icebp
cld
adc
pushf
cld
and
jmp
int
fnsave
inc
dec
and
or
out
push
lret
or
push
adc
es
insb
sub
lahf
push
push
jg
popf
xchg
mov
jmp
mov
test
imul
adc
mov
lahf
push
mov
xchg
call
dec
xor
cwtl
bound
ss
loopne
fs
or
push
jg
mov
add
jl
lock
call
push
adc
lcall
scas
inc
lret
sub
aaa
sbb
adc
push
mov
xorl
shr
or
xor
fcoml
add
cmpw
jne
push
test
adc
or
jae
lret
adc
pusha
push
mov
lods
inc
push
pop
les
and
xor
mov
xchg
mov
cld
push
popa
stos
xchg
jbe
xor
and
pop
lods
xchg
ret
std
jne
in
aad
shlb
pop
mov
orl
in
call
and
dec
sbb
sub
sbb
and
dec
out
sub
sbb
jb
lods
popf
fimuls
call
repnz
daa
fs
xchg
mov
jo
lock
ror
xor
mov
addb
cmc
sub
sbb
xchg
jmp
and
mov
bound
insl
mov
xchg
pop
inc
and
push
sarb
jg
ficoml
imul
inc
push
mov
jmp
pusha
jo
inc
sbb
test
clc
dec
xor
sarb
enter
test
push
and
adc
aam
pop
int3
sub
outsl
mov
es
hlt
push
dec
rorl
inc
stos
cmpsb
pop
es
call
sbb
xor
call
adc
add
int3
cmp
jg
and
enter
clc
outsl
test
movsb
pushf
and
fdivl
adc
jl
or
call
inc
mov
insb
or
xor
inc
inc
sbb
jg
aad
cmp
aas
add
inc
mov
imul
ds
pop
movsb
pop
jb
dec
add
cmc
pushf
push
test
pop
dec
mov
les
sarb
mov
movsb
and
cmp
xchg
jns
rcll
je
je
mov
ds
dec
in
iret
mov
cld
and
cmp
jne
nop
jb
in
add
fs
dec
insb
xlat
mov
jo
andl
pop
push
push
inc
and
call
mov
in
cmpsb
imul
xor
call
inc
dec
fs
pop
jae
mov
nop
popf
xor
push
sbb
cmpsl
loope
xchg
push
xor
mov
xor
cmp
jecxz
xchg
push
divl
inc
pop
sbb
dec
mov
push
mov
mov
pop
jmp
cmp
addr16
or
lea
inc
loope
mov
test
add
push
dec
xchg
loope
or
leave
push
pushl
mov
loope
movsb
inc
adc
out
mov
clc
shl
jmp
adcl
rcll
cld
pop
int
cmpsb
cwtl
mov
ljmp
xchg
push
jb
test
in
mov
pop
mov
inc
add
test
mull
scas
stos
cmc
mov
and
leave
xor
movsb
fmuls
lock
add
adc
pusha
stc
jns
xor
cli
and
clc
xchg
jge
jle
jbe
inc
jecxz
mov
jb
dec
xor
std
in
mov
jo
add
sbb
xchg
addl
arpl
push
sub
xchg
mov
push
sbb
sbb
pop
adc
aaa
jle
jnp
inc
push
mov
clc
dec
xchg
in
daa
push
je
inc
jmp
lods
jecxz
movsb
pop
jmp
in
jmp
xchg
adc
mov
shr
or
dec
sbb
hlt
cmp
inc
cwtl
scas
push
mov
mov
pop
leave
repnz
mov
add
ficompl
push
pushf
into
push
iret
mov
sbb
je
dec
push
mov
sub
into
das
push
rolb
stc
inc
cmpsl
and
int
divb
mov
push
inc
adc
fs
or
movsl
cmpsl
push
or
dec
xchg
fildll
and
pop
xchg
mov
jne
jle
pop
dec
aad
xor
xor
mov
add
add
mov
imul
call
mov
outsl
aad
scas
addb
jl
ja
notb
xlat
into
pop
mov
lods
cmp
mov
add
and
push
in
mov
add
lock
xor
push
call
mov
stos
lods
add
mov
sbb
sub
or
and
shlb
cmp
mov
mov
jge
out
lods
mov
push
sbb
push
mov
dec
repz
outsl
lock
cmp
pop
dec
lods
loope
int3
mov
leave
enter
scas
dec
push
mov
pop
jmp
or
sub
sub
sbb
push
fsubrl
rcr
mov
inc
mov
movsl
and
gs
add
mov
mov
fldl
outsl
mov
jl
ror
fs
mul
nop
pop
andps
outsb
xor
inc
dec
jg
or
xchg
iret
add
cmp
sub
fadd
jae
adc
lods
enter
test
add
insl
pop
sub
sub
lea
add
cmp
je
inc
orl
add
lea
jae
and
or
xchg
inc
jae
mov
adc
and
push
push
adc
jmp
ljmp
add
xchg
mov
repnz
jbe
inc
add
cmp
loopne
add
jb
jmp
dec
ret
sbb
or
mov
xor
aaa
jb
push
mov
mov
add
xchg
push
addr16
jnp
loope
test
pop
call
sbb
mov
ds
xor
or
mov
mov
dec
mov
adc
fmuls
cmc
inc
xor
enter
test
pop
or
inc
adc
push
cwtl
sub
mov
jmp
or
xchg
sbb
dec
and
push
xchg
cmp
adc
sahf
loope
xor
dec
push
inc
jo
aaa
fs
cmp
mov
adc
loop
nop
movsb
daa
ret
mov
incb
lcall
pop
fsubrl
pop
adc
daa
xchg
shr
adc
ret
adc
dec
mov
add
push
mov
test
push
out
faddl
call
pop
pextrw
xor
sbb
hlt
xor
xor
loopne
out
xchg
adc
push
pop
cmp
xor
cmp
xchg
lret
cli
loopne
invd
push
dec
and
mov
adc
adc
or
push
inc
and
pop
adc
mov
push
mov
dec
dec
inc
jp
add
xor
sbb
fcmovb
push
push
inc
and
mov
out
and
xor
das
pop
pop
cltd
pop
js
dec
call
xchg
movsb
sub
test
stc
add
lea
sti
and
adc
adc
in
sar
jne
push
sbb
lret
popf
cmc
sbb
jl
lods
push
push
jge
enter
lret
jmp
test
and
pop
xchg
pop
mov
xor
jne
ret
push
scas
mov
fs
cmp
popa
jle
bnd
xchg
jnp
daa
hlt
nop
imul
loop
in
jmp
fstps
mov
fdivs
mov
push
adc
sbbb
jecxz
push
add
mov
adc
adc
or
dec
xor
jge
and
int3
mov
jbe
lock
and
or
jmp
cmp
je
dec
inc
loopne
ds
push
clc
add
in
cld
mov
dec
inc
cmp
jae
adc
push
sub
sbb
dec
push
mov
inc
cmp
push
call
pop
popf
and
lock
movsl
sbb
and
adc
jnp
sub
lods
add
mov
pop
orb
adc
fsts
or
out
popf
int
xor
test
lods
push
xchg
mov
lahf
lods
jo
je
inc
mov
push
push
test
jg
test
stc
xchg
cmp
xor
fidivrs
popf
enter
clc
push
and
mov
push
push
cmpsl
add
fcompl
leave
dec
and
mov
push
cmp
add
or
mov
cmp
cmp
mov
push
jne
and
sub
lret
les
pop
adc
or
or
jb
popa
sti
inc
jae
sub
inc
sbb
cmpsb
mov
mov
push
jge
fucompp
dec
xchg
adc
xlat
adc
cltd
push
outsl
sbb
mov
cmp
mov
jg
push
mov
adc
push
bound
mov
in
pop
inc
xchg
enter
ds
enter
push
cmp
jb
ljmp
inc
sbb
insb
fcoml
std
pop
mov
sub
lret
ljmp
add
aas
les
and
xchg
int3
lds
cmp
pop
xchg
and
inc
add
add
iret
jne
push
sbb
adc
xor
cwtl
sbb
cmp
pop
xor
xor
inc
inc
mov
aam
adc
call
stc
jb
jmp
inc
cltd
inc
jle
cmp
dec
or
icebp
jmp
mov
jmp
mov
adc
jle
movsb
mov
gs
sbb
push
push
lahf
sbb
xchg
daa
imul
mull
mov
lods
mov
xor
sub
in
and
fldl
mov
inc
cmp
xchg
xchg
jmp
mov
test
push
xchg
inc
and
notl
sub
inc
sub
int
cmp
and
sbb
sbb
imul
call
mov
sbb
sub
fists
mov
inc
push
pop
bound
call
pop
in
cmp
xor
mov
sbb
inc
arpl
mov
lods
stc
adc
mov
pop
inc
mov
push
sar
cmp
inc
call
or
push
cmp
or
xor
stos
in
mov
push
sub
mov
cwtl
pushf
or
sbb
jmp
adc
and
inc
jl
adc
mov
inc
and
inc
add
je
rclb
cld
and
call
out
sbb
pop
dec
and
hlt
adc
arpl
out
dec
push
sub
les
mov
in
push
out
xor
add
add
cmp
je
jae
add
push
or
loopne
divb
pop
test
cltd
cmp
punpcklwd
mov
ja
roll
mov
cmp
enter
mov
jne
and
sbb
mov
mov
test
addl
cs
das
lock
pop
test
and
push
inc
call
lock
jb
pop
push
push
in
ficoms
or
je
xchg
jbe
or
adc
or
sub
nop
adc
cli
daa
rolb
sub
pop
aam
cmpsb
mov
jg
mov
movsl
pop
sti
add
mov
popf
cmp
pop
or
ja
data16
adc
push
pop
nop
add
cmp
mov
cltd
cmpsb
mov
test
xchg
js
cmpsl
les
add
bound
or
por
mov
adc
div
push
les
call
out
sub
outsl
enter
mov
push
mov
ja
mov
pop
cmp
popa
mov
rorl
push
ja
dec
push
es
popf
jmp
fs
pusha
aam
int
jnp
ret
mov
mov
cmp
movsb
int
add
xchg
inc
test
lea
leave
adc
xchg
jns
dec
and
add
aad
pop
stos
push
cmp
mov
adc
sbb
shl
dec
call
xchg
lahf
rcrl
cli
add
push
pop
cld
push
xchg
loope
adc
in
xchg
push
loop
xor
lcall
dec
dec
js
xchg
xor
lock
mov
and
dec
std
dec
outsl
push
add
test
in
sub
loope
or
inc
push
sti
xchg
mov
inc
xor
inc
push
or
pop
pop
xchg
out
push
xchg
adc
jne
stc
dec
xor
enter
call
lret
enter
aas
cmp
mov
adc
inc
xchg
sbb
and
and
iret
mov
jbe
push
lcall
mov
call
fwait
or
pushw
adc
je
fsubrp
add
daa
rorb
inc
dec
push
xchg
fwait
inc
or
cmpsb
inc
sub
jns
push
adc
mov
pop
lds
js
int
cli
addr16
sub
push
push
into
gs
inc
xchg
les
mov
popf
sbb
and
push
rcrb
popa
loope
xchg
and
adc
fdiv
mov
or
xchg
and
std
cmpsl
sbb
or
ja
idivb
lock
inc
or
push
adc
dec
repnz
insl
or
add
and
adc
aam
adc
jns
sub
adc
daa
mov
je
push
inc
nop
jo
nop
add
and
leave
push
mov
jl
xchg
lods
loope
dec
cmp
sub
cmp
in
adc
pop
adc
insb
and
or
mov
jmp
adc
jbe
push
sti
inc
adc
arpl
std
lea
std
pusha
dec
lea
adc
enter
cmpsb
adc
je
mov
and
ljmp
mov
sbb
push
push
cmp
dec
arpl
movsb
mov
rcll
pop
or
push
push
aaa
les
sub
or
inc
adc
adc
xchg
pop
xchg
adc
test
or
dec
jno
or
and
es
sbb
push
push
push
cmpsb
push
adc
xor
cltd
inc
or
movsb
pop
adc
inc
insb
stos
iret
jl
les
lret
cmp
dec
cmp
xor
fxch
xor
nop
sbb
mov
leave
pushf
or
or
sub
pop
xor
popa
call
adc
jmp
sbb
shll
cld
push
push
xchg
add
femms
xchg
popl
pop
fisttps
cmc
pop
fs
imul
xchg
je
inc
adcb
push
pusha
sti
lea
or
insb
push
dec
sti
xchg
les
jge
ds
fmull
out
inc
push
neg
cmc
mov
jl
in
ss
lahf
sarb
gs
mov
int3
push
bsf
popa
cmp
leave
repnz
out
sub
mov
push
call
push
or
mov
subb
inc
call
gs
add
fsubl
mov
pop
lcall
std
xor
inc
sbb
mov
mov
je
xchg
jo
daa
sub
pop
add
mov
adc
lock
inc
jl
and
and
or
insb
shll
data16
pop
sub
lret
lret
loop
or
fwait
adc
pop
loop
leave
pop
in
and
popf
in
pop
pop
call
and
ljmp
mov
adc
or
mov
imul
pop
outsb
cwtl
aas
repz
movsl
in
pushf
mov
out
cmp
pop
inc
insb
pop
inc
bound
les
or
out
out
xchg
cli
fdiv
sub
xor
fcomp
int3
imul
mov
push
push
push
mov
enter
loope
pop
jns
lds
push
and
pop
stc
outsb
mov
mov
outsb
enter
stc
cmp
adc
dec
fs
mov
push
mov
lret
rcrl
lods
aam
add
and
sub
jp
insl
inc
in
inc
pop
lahf
mov
in
xchg
out
dec
test
and
adc
jg
ja
icebp
jl
or
ja
jle
test
add
dec
dec
stos
add
mov
sbb
push
dec
inc
enter
sbb
xorl
js
jecxz
and
sub
xchg
test
sbb
movsb
sub
mov
ret
shlb
sub
and
adc
or
xchg
shll
xchg
sub
mov
fidivl
inc
adc
push
sub
sub
push
sub
adc
daa
je
xchg
push
xchg
fcmovnb
sub
mov
insl
dec
sub
dec
stos
push
push
push
or
call
and
imul
bound
mov
loop
push
mov
pusha
mov
dec
enter
jne
mov
adc
cmpsl
xorl
nop
or
pop
inc
or
sbb
pop
test
mov
mov
pop
vmovapd
mov
push
or
adc
pop
fnstcw
and
lahf
imul
pop
dec
mov
mov
lock
mov
imul
sub
stos
punpckhwd
adc
mov
in
or
std
cmp
sbb
mov
xor
sub
les
cmp
mov
sub
mov
push
push
aas
leave
pop
scas
jnp
call
outsl
add
adc
bound
loope
adc
daa
pop
mov
mov
testb
dec
out
aad
data16
or
push
xor
insb
aad
enter
add
movsl
jne
imulb
dec
aam
in
dec
imulb
fs
pop
xchg
mov
mov
mov
fmull
sub
pop
jb
and
xchg
cmc
xchg
int
gs
lret
sub
stos
js
dec
dec
es
inc
daa
inc
jbe
inc
xor
xor
lahf
mov
jns
mov
push
jle
adcl
dec
fcompl
mov
push
lea
sub
popa
cmp
inc
jge
adc
movsb
xchg
sub
push
adc
mov
lods
test
or
mov
js
dec
in
xchg
les
dec
sbb
pop
mov
jp
inc
mov
or
adc
movl
sub
push
add
and
adc
adc
add
inc
sub
fs
xor
mov
cvtps2pd
sub
int
and
jne
adc
insb
inc
adc
and
jnp
mov
pop
xchg
jbe
dec
xchg
xchg
push
xor
inc
xchg
or
loope
pop
inc
and
dec
test
jmp
sbb
inc
in
aam
mov
adc
add
lahf
cmp
inc
mov
leave
inc
and
inc
push
decb
or
ljmp
add
sbb
mov
xchg
adcl
cwtl
shrl
cmpl
mov
decb
aad
mov
loopne
xchg
call
xchg
push
dec
push
loop
sub
push
aad
jno
xor
jg
in
std
daa
push
lock
adc
sbb
cmp
sbb
out
sbb
je
inc
push
adc
jae
mov
xorb
xor
and
xchg
daa
adc
sbb
sbb
and
cmp
adc
xor
jae
fs
adc
and
mov
sbb
push
sub
adc
inc
or
dec
dec
cli
and
add
mov
in
sub
push
daa
das
sbb
jecxz
shr
adc
fsubrl
test
cmp
adc
push
push
cli
sub
adc
or
bound
enter
cmp
call
or
sbb
add
and
lock
mov
adc
jne
call
insb
mov
or
jo
ficoms
xchg
or
mov
js
mov
jae
sbb
mov
adc
mov
pop
jmp
jb
in
cmp
adc
push
bound
mov
les
xchg
mov
in
int3
je
hlt
sbb
sbb
inc
adc
or
mov
hlt
cld
iret
int3
adc
arpl
and
lds
dec
push
cld
cmp
or
les
cmp
dec
inc
pushf
arpl
les
xor
sbb
test
or
insb
int3
sbb
loopne
push
fadds
xchg
out
mov
sub
lahf
insb
arpl
cld
sbb
add
aas
mov
in
sbb
sub
xchg
mov
mov
out
and
adc
cmp
fs
sbb
pop
dec
lock
mov
jne
xchg
or
push
jae
and
jl
dec
pop
pop
bound
mov
inc
xor
push
js
sub
sahf
es
adc
test
jae
and
xchg
lock
or
nop
mov
out
movsl
add
push
nop
mov
enter
mov
gs
sbb
sbb
aaa
mov
or
pop
adc
sbb
cwtl
jne
inc
and
mov
sub
shlb
movsb
jne
testl
sbb
push
enter
xor
xchg
and
jne
je
jl
lock
lock
inc
xchg
pop
dec
add
nop
sbb
sbb
cs
inc
bound
xchg
clc
je
ror
int3
xor
daa
fmull
movsb
or
daa
adc
fbld
stc
out
cwtl
lods
stos
mov
xor
mov
xor
or
loope
les
nop
loope
js
aad
cwtl
movsl
cmp
dec
or
fs
mov
movsb
sbb
cltd
sub
or
lea
adc
adc
adc
adc
and
adc
lock
inc
jne
push
pop
or
inc
mov
sti
sbb
pushf
iret
shlb
clc
dec
jno
sbb
jno
inc
adc
sub
inc
sub
inc
pop
je
dec
push
or
xchg
sbb
jo
xchg
or
bound
inc
sub
mov
xor
or
and
inc
add
jae
cmp
xorl
and
xchg
adc
and
add
cld
jb
push
loopne
mov
push
xor
sub
repz
rorl
enter
cmpsb
test
and
das
mov
sbb
aas
cs
sbb
mov
int3
arpl
movsb
je
cmp
jg
jne
or
or
push
loop
adc
pop
xchg
and
bound
cmpsl
or
xor
inc
jne
lods
mov
fs
les
movsb
or
je
loopne
jo
lret
sbb
sub
insb
mov
lock
arpl
cwtl
arpl
test
push
loop
jae
in
loop
xor
jo
test
jbe
adc
cmp
and
sub
adc
push
inc
or
adc
mov
sbb
cmp
sbb
dec
in
xor
nop
dec
test
xchg
mov
push
cmc
js
mov
or
sub
pop
in
hlt
jge
mov
je
sub
sub
sub
mov
sbb
mov
xor
testl
rorb
sbb
sbb
adc
test
xchg
fdivl
enter
xor
fcoms
xchg
lock
mov
iret
pushf
mov
xor
inc
cmp
cmp
sbb
push
jl
and
adc
inc
xchg
dec
mov
push
pop
pop
stos
sub
imul
push
adc
enter
shll
pop
adc
adc
call
dec
fs
push
xor
in
int3
xor
nop
popf
cmpsl
test
in
cmp
xchg
mov
adc
lock
into
or
fcomi
adc
cmp
push
and
nop
cmpsl
lods
add
add
xor
jae
mov
in
out
jno
or
dec
or
test
adc
or
and
sbb
sbb
adcb
cmc
test
test
and
cwtl
xor
in
ja
jno
or
test
xor
cmp
and
sbb
call
or
inc
nop
inc
out
sbb
mov
xor
cmp
fs
push
xor
or
fstpl
mov
cmp
shrb
cmpb
mov
push
call
shr
movsb
stc
out
or
jns
testb
sub
push
aam
or
or
sub
andb
call
mov
and
adc
mov
cmp
and
loope
notl
outsl
lds
fdiv
rolb
dec
cli
xor
clc
das
aaa
fimuls
pop
fs
mov
inc
push
hlt
mov
jo
jge
add
jae
shrl
mov
popf
js
add
mov
cmp
je
add
inc
xchg
fiadds
inc
cmp
jl
sbb
rclb
sub
mov
xchg
cmp
add
mov
mov
xor
dec
or
pop
sti
in
mov
cmovae
cmp
jl
out
add
pop
pop
orb
out
inc
jge
in
sub
and
shrl
adc
inc
mov
lea
in
pop
pop
jp
fistpll
adc
adc
add
std
dec
cld
sbb
cmp
jle
pop
mov
xor
cmp
add
pop
jl
xlat
sarl
subl
ret
and
ds
or
adc
aad
sbb
repz
icebp
out
sahf
cld
fcmovb
pop
jl
add
hlt
out
sti
adc
out
call
or
incb
popf
jle
dec
int3
inc
sahf
jg
aam
shll
pop
adc
pop
clc
push
sahf
in
inc
andl
stos
test
lret
into
xor
jle
add
add
lcall
cltd
sub
lea
and
mov
in
mov
dec
push
roll
mov
dec
jmp
mov
pop
mov
push
mov
loope
repz
push
out
sahf
pop
sbb
and
mov
orb
jg
or
adc
inc
mov
mov
shlb
or
and
and
adcb
dec
jbe
cmp
cmp
pop
repz
std
in
fxch
shr
mov
daa
sub
xchg
loop
push
sub
sbb
rclb
adc
push
dec
insb
mov
xor
adc
mov
xor
add
out
je
pusha
push
pop
out
push
addb
pop
pop
add
fdiv
pop
sub
jmp
sub
push
dec
imul
leave
sbb
push
adc
addr16
push
loop
mov
sbb
or
push
test
or
decb
sbb
mov
test
lds
jae
leave
je
adcb
mov
in
dec
mov
out
lret
adc
fs
mov
clc
lock
repz
in
mov
mov
sbb
or
mov
xchg
loopne
dec
ss
cmpsl
out
or
fisubrs
dec
in
loope
mov
push
push
stos
lea
sti
shlb
mov
xchg
sarl
lds
insb
xchg
push
mov
pop
daa
popa
icebp
jl
leave
push
lcall
test
stc
push
jnp
pop
and
je
jge
outsl
pop
inc
push
add
push
dec
cmp
in
push
pop
sbb
xor
push
je
pushf
mov
imul
pop
std
dec
scas
lds
sahf
lcall
push
mov
mov
mov
notb
imul
das
jbe
and
inc
push
sbb
sbb
inc
out
pop
lods
push
xchg
add
and
cmc
dec
dec
in
mov
ljmp
std
ret
push
jge
mov
mov
push
mov
js
dec
pop
aam
pop
cltd
fmuls
shll
out
gs
sub
adc
in
movsl
and
mov
out
or
xlat
sub
aad
stos
int
push
scas
test
push
jns
daa
subl
jb
and
int3
xor
inc
imul
mov
movsb
call
jl
es
xor
hlt
and
cmpl
in
add
cmp
fildl
sbb
adc
pusha
xchg
add
test
pushl
test
subl
pop
mov
or
adc
lea
rcll
xchg
aas
lret
scas
int
add
ja
sahf
out
or
je
jl
add
lcall
push
repz
dec
jb
or
add
add
pop
xor
push
push
jg
popf
pop
xor
in
jmp
push
sbb
push
fs
or
pop
adc
or
dec
int3
daa
sbb
push
dec
pop
pop
popf
pop
adc
push
rorl
movsb
adc
test
add
ja
je
mov
in
jmp
fldcw
push
and
or
xor
pop
mov
or
dec
int
mov
adc
and
inc
and
sub
sbb
out
je
scas
sbb
pushf
adc
mov
pop
jge
inc
pop
jbe
movsb
inc
and
in
pop
hlt
mov
ja
je
lea
ds
adc
cmp
xor
clc
and
bound
punpckhbw
sub
ss
test
pop
jle
inc
call
les
mov
stc
hlt
inc
arpl
push
and
add
sbb
jecxz
mov
adc
or
in
push
in
mov
ret
or
mov
dec
rcll
or
mov
push
add
push
or
adc
and
adc
data16
adc
hlt
xchg
enter
adcb
fwait
loop
imul
fnsave
push
faddl
enter
outsl
mov
in
mov
fwait
lahf
mov
out
sbb
and
mov
xor
cmc
sbb
mov
xorb
or
inc
enter
das
and
pop
push
xor
mov
lahf
or
mov
and
xchg
faddl
mov
scas
adc
popf
bound
cmp
push
sub
and
sub
and
adc
jl
clc
inc
mov
xchg
or
fs
mov
pop
sub
loop
leave
test
data16
sahf
mov
sarb
fdivrs
hlt
lods
dec
add
sub
push
call
adc
adc
lahf
add
jbe
push
or
cmp
insb
inc
and
sbb
push
test
dec
sbb
daa
cld
js
ljmp
xchg
pop
xor
pop
mov
mov
and
sbb
ret
pop
and
add
add
fucomp
push
cmp
push
mov
sub
loopne
testb
mov
or
orb
add
mov
jb
push
pushl
lds
pop
out
sbbl
fstpl
xchg
push
adc
loopne
pop
xchg
dec
add
jg
push
leave
mov
xor
call
hlt
andl
call
jge
data16
outsb
mov
jl
pushf
hlt
mov
cmp
into
cmp
push
js
inc
adc
push
dec
pop
test
hlt
adc
aas
add
idivl
or
push
push
sbb
loop
push
adc
repnz
adc
popf
fcomps
or
fstpl
mov
fnstenv
inc
mov
adc
mov
dec
scas
sub
and
nop
xchg
push
pop
loop
adc
rorl
cmp
cld
shl
or
imulb
adc
nop
cmp
shr
sti
bound
jg
xor
pop
sub
lock
nop
icebp
dec
and
test
lcall
or
insl
int3
adc
push
or
pop
mov
jbe
adc
dec
mov
mov
clc
xor
sysenter
push
enter
push
in
or
mov
inc
sub
push
ret
sbb
aas
mov
shr
sub
stos
dec
cli
xor
fimuls
mov
jo
mov
mov
sub
je
es
mov
sub
add
adc
add
inc
cmc
pop
xchg
es
cmc
jmp
gs
cmp
push
mov
xor
push
inc
leave
adc
push
inc
daa
mov
inc
dec
xor
sbb
adc
jge
js
and
aam
mov
and
outsb
xchg
mov
jecxz
xchg
gs
fmull
xchg
lret
leave
push
in
pop
adc
lea
xor
pop
mov
sub
or
xchg
cmp
pop
adc
out
cld
jae
stos
xchg
imul
out
adc
in
mov
jle
push
and
mov
adc
or
fcmovnu
cmp
push
add
adcb
pop
xor
add
jo
push
inc
jl
mov
nop
mov
inc
push
lods
loope
ret
xchg
mov
jo
cltd
xor
sub
inc
repz
enter
mov
outsl
push
mov
int3
xor
in
and
fcoml
add
mov
aam
pop
aas
or
loopne
les
fsubs
test
mov
adc
icebp
push
sub
adc
nop
int3
enter
dec
sub
push
mov
cmp
mov
sbb
jge
adc
sub
pop
xchg
int
loop
xchg
push
inc
xor
je
mov
and
inc
mov
jp
aad
xchg
sub
pushf
fs
sub
stos
inc
xor
lods
sbb
or
rolb
mov
in
aaa
push
icebp
das
dec
push
and
enter
add
inc
out
jo
adcl
adc
or
inc
mov
leave
push
and
dec
sub
mov
pushf
and
movsl
xor
fmuls
xor
std
out
and
push
out
sbb
xor
mov
aad
fcomps
xor
cmp
clc
xor
fsts
jl
insb
inc
je
dec
cmpb
cmp
mov
cmp
and
adc
xchg
mov
into
fmuls
inc
leave
test
adc
jbe
imul
cltd
inc
nop
or
mov
or
outsb
test
sar
jb
sub
sub
mov
jge
push
xchg
je
or
das
xor
and
fs
cmp
sbb
pop
mov
stc
xlat
and
xor
mov
xlat
mov
inc
or
mov
jnp
pop
je
dec
push
add
or
xor
and
push
jne
sbb
mov
jmp
and
adc
leave
inc
sub
mov
mov
ret
stos
push
pop
int3
jl
ret
jo
out
sbb
jne
push
dec
dec
inc
or
ja
outsb
in
out
ja
and
unpcklps
lds
daa
sub
push
dec
test
jne
mov
dec
jne
sysret
inc
enter
in
and
sub
popf
notb
pop
pop
or
loopne
js
push
sbb
hlt
inc
imul
jb
or
push
mov
psubb
dec
fistpll
xor
push
mov
adc
pop
pop
push
push
adc
loop
adc
mov
xor
xchg
mov
adc
inc
hlt
call
popa
cmp
aas
xchg
shl
mov
push
mov
add
mov
adc
jno
mov
daa
jl
sub
leave
pop
sub
inc
xchg
test
popf
cmp
jno
mov
push
icebp
cmp
sub
mov
or
cwtl
or
mov
xchg
les
stc
mov
sbb
scas
notb
xor
ds
dec
aas
xor
cmp
sbb
and
testl
stc
and
or
cmp
add
cli
stc
jne
scas
mov
loope
ret
or
test
les
call
scas
repz
pushf
pop
insb
dec
dec
sub
dec
mov
nop
xchg
or
iret
test
popf
inc
sub
push
sbb
or
pop
inc
sub
or
inc
pop
dec
dec
into
outsb
sub
call
js
out
jecxz
sti
flds
sbb
lret
bound
push
dec
inc
xchg
dec
call
mov
adc
push
lds
and
xchg
cmp
xchg
mov
adc
pusha
insb
add
cmp
jbe
lea
add
mov
sbb
adc
mov
adc
mov
jle
cmp
inc
xchg
stc
push
movsb
addr16
pop
add
ret
andl
mov
or
loop
mov
pop
movd
jmp
lea
push
add
mov
add
jno
add
negb
add
and
test
je
xchg
adc
add
or
ja
cmp
pop
aas
jg
call
mov
ficoms
or
or
jle
enter
cmp
sub
mov
cmp
adc
lock
mov
movsl
inc
clc
dec
scas
mov
call
sub
dec
pop
jmp
cmp
mov
loopne
movsb
je
fsts
jne
mov
xor
movsb
fdivrp
icebp
adc
mov
ret
sub
push
add
cs
cmp
push
mov
sub
or
pop
fcomp
mov
sbb
sbb
mov
negb
repnz
adc
loop
and
aad
mov
adc
das
cld
jmp
mov
cwtl
push
pusha
das
xlat
into
leave
dec
jecxz
mov
inc
mov
pop
jge
sub
test
aaa
jle
cmpsb
std
popa
xchg
push
mov
cld
decb
sti
and
movsl
push
dec
add
push
inc
into
mov
bound
shll
inc
sub
lock
ljmp
adc
xchg
mov
int3
je
addl
scas
lret
lea
fdivrl
adc
add
aam
iret
jp
pop
icebp
fsubr
cmc
sbb
aaa
dec
mov
test
rol
sub
mov
lods
fidivs
push
sbb
mov
fmulp
adc
fsubr
rol
dec
test
loopne
adc
push
sbb
inc
mov
pushf
fsub
cmp
call
cltd
mov
inc
push
fidivrs
adc
adc
icebp
or
inc
sbb
aas
lods
adc
jne
icebp
and
dec
sbb
imul
mov
jl
imul
push
push
pop
ljmp
dec
dec
ds
sub
stc
and
pop
jne
mov
fcoms
dec
aad
pop
scas
test
mov
cmp
inc
xor
jg
scas
adc
iret
mov
xchg
test
scas
scas
insl
mov
sbb
and
imul
out
add
shl
dec
dec
fisttpl
jp
inc
je
sub
push
or
je
rolb
mov
insl
fs
test
jmp
ret
dec
jne
mov
ljmp
rorl
aam
mov
mov
mov
inc
lods
push
cmpsl
fstp
out
sbb
sbb
je
inc
mov
fidivrs
push
xor
cmp
jg
psubsb
mov
scas
dec
lods
sbb
sub
and
bound
pop
mov
mov
sub
dec
mov
mov
inc
sbb
sbb
and
pushl
push
dec
je
adc
mov
jl
jmp
and
pop
push
and
push
rcrl
dec
push
sarb
leave
xchg
dec
das
mov
cmp
es
or
clc
leave
inc
inc
mov
fmul
add
add
js
sbb
xor
push
push
das
mov
xor
push
push
and
adc
push
sbb
lods
cli
push
call
inc
cmovne
mov
dec
lahf
xchg
inc
lds
cmp
inc
adc
sub
lds
push
push
test
loop
and
sbb
push
jne
ret
jmp
jp
dec
rolb
cwtl
std
adc
inc
and
dec
stos
mov
hlt
mov
call
push
dec
adc
lcall
add
call
sub
lock
divb
inc
std
and
mov
iret
mov
sbb
and
aam
pop
aaa
pusha
adc
xor
in
push
xchg
lods
cmp
add
sarb
push
or
movsb
insb
insl
daa
jl
lret
icebp
ljmp
iret
or
xchg
jne
stc
jmp
lods
add
call
test
jg
jns
jecxz
mov
sbb
pop
in
packuswb
repnz
push
cli
push
movsl
cmp
adcb
dec
rol
notl
push
inc
push
dec
clc
push
xlat
lods
and
call
cmpsl
jp
push
hlt
call
in
xchg
pop
cld
mov
adc
or
jo
xchg
sbb
mov
mov
lret
mov
std
test
pop
jle
and
sarb
in
inc
in
xchg
fs
pop
sbb
mov
fidivrs
cmp
adc
lods
pusha
pop
stc
mov
fisttpll
xchg
jb
bound
adcl
enter
pop
and
loope
mov
xchg
les
mov
popf
and
mov
adc
loope
add
push
jne
mov
insl
adc
jb
fs
je
push
out
data16
add
mov
xor
push
add
push
and
sub
je
das
xchg
inc
jecxz
call
pusha
mov
dec
call
test
mov
lds
mov
lock
and
lahf
dec
sbb
frstor
mov
jl
jmp
adc
rclb
adc
mov
fnstcw
inc
test
sbb
sbb
adc
ljmp
shlb
jl
push
jns
pop
xor
and
push
test
cli
sub
sbb
dec
and
enter
pop
pop
outsl
sub
jo
movsl
pop
in
adc
mov
pop
clc
push
pop
std
mov
fwait
nop
adc
ret
inc
lret
jne
inc
sbb
xchg
rorb
and
or
or
stos
adc
scas
xor
stos
push
xchg
psubd
push
and
orb
inc
test
sti
add
push
shll
es
in
addl
inc
mov
dec
imul
call
aas
add
and
rclb
push
nop
inc
push
add
popa
mov
andl
cmp
jb
movsl
mov
add
mov
les
sub
sub
inc
adc
and
push
mov
int3
xor
xchg
addr16
in
adcl
jl
je
or
rcrb
push
mov
scas
sub
sub
je
call
and
imul
and
test
xor
pop
fs
and
push
mov
pop
in
mov
shlb
adc
mov
cwtl
mov
mov
mov
add
push
push
movsb
stos
adc
js
scas
inc
pcmpeqb
add
fmuls
adc
lret
pop
sbb
push
shr
sub
aas
mov
cmp
push
ficoms
or
mov
push
fwait
jne
cmpl
jle
mov
or
sarl
push
push
cmpsb
ja
movsb
push
or
into
cmp
dec
or
add
lods
js
and
stc
add
jne
xor
fnstcw
add
inc
jnp
inc
ds
inc
push
xchg
sub
sub
dec
hlt
hlt
es
dec
orb
aas
aaa
and
push
leave
sbb
push
lret
frstor
lods
mov
mov
jecxz
sub
ret
bound
cmp
push
fisubl
cmp
imul
adc
xchg
jns
dec
push
mov
inc
sti
int3
push
and
or
or
and
inc
fs
insl
ret
inc
adc
cmp
dec
mov
mov
push
popf
xchg
pop
loopne
and
xchg
sbb
aad
pop
push
xchg
rclb
jg
das
test
jge
mov
stos
call
mov
aas
mov
rcrl
clc
jp
sbb
mov
cs
or
mov
loopne
sub
sub
jns
lahf
push
push
ret
inc
adc
pop
xor
jmp
fisttpll
push
and
add
mov
cmpb
mov
push
or
push
jl
ja
xchg
and
je
push
fbstp
filds
dec
and
iret
jmp
lea
sbb
test
mov
mov
push
or
jmp
std
push
movsb
fs
scas
repz
and
add
jo
jg
bound
add
pusha
mov
cmc
sub
or
gs
and
repnz
in
aam
cmp
adc
sbb
xor
push
xchg
push
mov
inc
jne
in
pop
int3
xor
add
shl
fimuls
sub
push
adc
lock
test
mov
iret
call
mov
bnd
jne
out
xor
test
addb
sub
xchg
leave
test
roll
inc
mov
sbb
add
shrl
mov
mov
mov
cmp
mov
mov
jle
pushf
mov
cmpsl
dec
and
outsl
or
and
ret
les
aam
adc
push
je
adc
mov
sbb
xor
enter
pop
cmpsl
ror
pop
cmc
xchg
pop
xchg
stc
jne
sbb
lret
stos
sub
mov
out
je
inc
mov
and
insl
xchg
or
xlat
fs
push
push
sbb
pop
or
adc
hlt
and
mov
inc
or
push
dec
or
das
and
addr16
loopne
stos
lret
and
sbb
dec
bound
dec
jne
xor
repz
mov
outsb
and
push
js
and
aad
addl
jl
jmp
jmp
xchg
insb
lds
scas
mov
and
adc
mov
dec
mov
sub
repnz
cmp
daa
inc
jg
sub
jg
xchg
inc
cld
xchg
sbb
sbb
ret
data16
pop
test
call
xor
or
xchg
push
lock
gs
push
dec
and
push
faddl
inc
pop
fsubrl
adc
jbe
ror
cmpsl
inc
and
push
jg
mull
filds
adc
pop
test
loop,pn
fs
xchg
adc
lea
orb
pop
sbb
pusha
cmp
adc
mov
push
pop
add
dec
test
jmp
push
mov
inc
sub
lea
sub
sbb
mov
sti
ret
dec
cmc
xchg
xchg
pop
ret
dec
mov
cmp
add
jo
mov
movb
mov
in
testl
sarl
cmp
aas
or
clc
push
dec
test
sub
add
cmpb
fidivl
pop
inc
push
push
movsb
rcrl
stos
sub
jecxz
sub
or
fimull
and
adc
xchg
push
cmp
icebp
in
fdivrs
test
xor
push
jp
push
call
loopne
hlt
mov
push
dec
xor
push
dec
or
jmp
inc
scas
inc
mov
xchg
test
and
pop
enter
subl
insb
xorb
enter
mov
loop
cld
repz
lahf
push
call
jmp
jbe
or
test
das
push
mov
xchg
sub
lods
sahf
es
and
sbb
jmp
jge
fs
mov
in
xlat
inc
or
imul
xlat
ljmp
leave
stos
je
push
adc
rep
es
js
push
pop
int3
push
mov
and
mov
push
mov
or
sbb
adc
dec
dec
sub
or
sbb
inc
outsl
mov
or
sub
scas
pop
aam
sbb
jae
mov
aam
and
not
movsb
std
cli
and
xor
jne
call
xor
clc
jo
cltd
xchg
aas
push
jmp
add
movb
cmp
or
icebp
push
sub
adc
cmovle
xchg
cltd
test
rcll
ret
and
push
jle
push
adc
orps
jmp
xor
and
dec
adc
je
adc
and
ret
pop
cs
pop
xchg
test
fildll
addr16
les
fmull
adc
jle
in
xchg
xchg
push
sti
xchg
out
cmp
or
outsb
rcrb
sub
adc
mov
or
test
xor
aad
cmpsb
and
and
mov
jl
cmp
je
add
xchg
mov
pop
adc
mov
sub
inc
outsl
dec
mov
and
sub
rorb
sub
sbb
imulb
and
daa
xor
fs
inc
fldcw
inc
decb
push
ret
jl
adc
jns
lret
inc
add
and
dec
std
pop
mov
out
dec
inc
js
mov
mov
cwtl
or
aam
je
and
mov
add
and
pop
xchg
mov
pop
sbb
inc
lods
adc
mov
test
jge,pn
call
or
popf
sub
loop
in
test
push
pop
lods
adc
push
sti
inc
xor
xchg
andl
pushl
outsl
or
stos
push
sbb
cmpsl
imulb
pop
sub
js
and
clc
inc
push
and
adc
data16
inc
or
hlt
dec
clc
mov
cli
mov
sbbb
sub
clc
jns
test
add
push
fs
push
adc
push
push
or
inc
outsb
cwtl
or
in
push
insl
cli
lret
sub
rolb
fcompl
cli
mov
jp
jnp
and
rcrb
jne
pop
pop
je
incl
dec
inc
xor
call
in
sti
sbb
xchg
xchg
xchg
callw
lahf
incb
xor
ss
ret
jno
mov
fidivl
sub
insb
es
pop
mull
sarl
sbb
jmp
xchg
fildll
daa
mov
cmp
mov
and
into
dec
repnz
pop
mov
cmpb
mov
add
dec
dec
jle
push
mov
push
mov
clc
push
push
xor
pop
imul
sub
fldenv
dec
inc
outsl
imul
aas
add
shrl
pop
test
mov
setne
cmpsb
push
inc
ds
int3
xchg
and
jmp
insb
pusha
push
adcb
clc
pop
inc
mov
mov
mov
jmp
mov
inc
xor
cmp
sti
test
push
call
sbb
test
rcrb
cmp
inc
shl
push
fdivrs
add
dec
leave
lods
xor
pop
test
lds
inc
ljmp
dec
sbb
push
test
or
orb
cwtl
data16
mov
sub
dec
cmp
mov
cmp
push
fisttps
push
jge
adc
iret
ret
push
or
mov
adc
jne
sbb
hlt
jno
mov
adc
enter
push
and
sbb
mov
sub
cmc
xor
je
adc
mov
jl
jmp
pop
jno
xchg
cli
xor
mov
add
mov
movsb
movnti
add
xor
pop
je
cmp
xchg
xchg
shr
or
rdtsc
mov
adc
icebp
xor
push
sub
in
fnstcw
roll
cmp
lea
mov
xchg
jo
pop
loope
push
pop
cltd
je
inc
push
inc
outsl
jmp
inc
or
jmp
inc
sub
sbb
push
pop
repnz
call
adc
inc
and
sub
push
scas
push
cmp
test
cmp
jo
mov
fmuls
or
mov
shll
pusha
adc
mov
mov
test
shl
movsb
adc
push
shl
jl
xchg
mov
dec
jmp
adc
push
or
jno
into
jo
adc
pusha
mov
xchg
out
push
call
mov
fwait
inc
cmpsb
stc
push
and
inc
aam
mov
adc
jb
sti
mov
nop
rcll
call
es
sub
mov
ds
adc
jl
nop
or
jle
push
push
sub
inc
gs
mov
lahf
ror
and
push
adc
and
cmp
sbb
add
in
xchg
and
clc
mov
dec
imul
push
mov
repnz
rolb
scas
nop
mov
into
xchg
ljmp
lock
in
adc
jmp
mov
imul
or
dec
int3
mov
lods
mov
pop
and
or
call
pop
out
inc
int3
dec
sbb
jmp
test
cmp
and
dec
hlt
xchg
add
add
cmpsb
in
or
mov
aad
test
dec
push
inc
pop
jb
cmc
adc
jmp
nop
add
mov
adc
and
sbb
and
and
pop
loope
in
dec
adc
inc
test
sub
and
mov
sbb
add
or
lret
or
test
les
dec
and
adc
or
and
les
mov
adc
adc
or
repz
dec
and
roll
mov
mov
jmp
addl
push
push
jmp
enter
dec
sub
add
inc
mov
cwtl
add
and
adc
sbb
adc
fidivs
adc
mov
inc
inc
xor
adc
or
or
adc
or
test
or
idivl
push
adc
hlt
inc
cmp
popa
punpckhbw
or
inc
lret
and
push
lods
push
mov
subl
inc
push
and
pusha
jbe
inc
jns
jo
add
sarb
ret
adc
xor
or
hlt
dec
test
and
les
cld
std
adc
or
push
dec
shll
mov
nop
cmp
xor
inc
sub
xor
xor
adc
inc
cmp
or
dec
adc
movl
scas
adc
sub
enter
or
mov
xor
lea
and
dec
adc
mov
enter
ja
test
dec
sub
xchg
and
jne
fs
mov
adc
hlt
sub
xchg
icebp
mov
stos
popf
adc
test
push
adc
and
js
rcrb
xchg
and
fmull
test
nop
ret
inc
xchg
sub
inc
inc
and
adc
test
dec
js
imul
popf
popa
fs
aas
or
sbb
add
jl
inc
adc
loope
inc
enter
mov
jmp
lds
sub
adc
inc
shrl
lods
mov
sbb
mov
mov
subb
jecxz
insl
test
pop
sub
xchg
and
jmp
test
sbb
xchg
and
xchg
xor
adc
sub
xchg
jp
lds
sbb
or
adc
xchg
dec
inc
inc
sub
add
sbb
jl
inc
movsb
xor
xchg
test
and
inc
mov
push
jno
push
xchg
mov
lahf
xchg
mov
dec
fs
or
jmp
inc
adc
xchg
mov
mov
xor
into
aas
inc
enter
inc
mov
lret
xor
mov
and
pushf
mov
test
enter
and
and
popa
pop
jle
xor
jl
test
and
push
inc
fisubs
mov
cmp
les
call
ret
push
jno
pop
jge
and
push
mov
shrl
sbb
jbe
insl
cmpsl
rcrl
adc
lds
jo
cld
je
sbb
gs
in
or
popa
jnp
cmp
fimuls
sbb
or
push
and
ss
mov
sbb
mov
jmp
jecxz
sbb
jg
sub
jo
pop
xchg
and
push
inc
les
inc
cmp
roll
adc
and
fs
ja
inc
mov
mov
mov
mov
lret
dec
adc
test
enter
sbb
mov
xor
inc
sbb
inc
xor
test
add
jmp
sub
inc
enter
cmp
adc
mov
inc
cmpsb
sub
mov
inc
addl
and
inc
and
popa
mov
cmp
test
and
push
inc
mov
loopne
sbb
lahf
cmp
orb
ret
mov
or
test
and
push
inc
mov
lods
adc
mov
inc
xchg
enter
adcl
or
inc
and
adc
fs
ss
mov
pop
scas
pop
inc
add
mov
inc
or
ljmp
mov
int3
adc
mov
cmp
mov
inc
lods
enter
and
add
mov
xorb
cmpsl
dec
or
or
je
or
add
mov
aaa
jb
arpl
repz
mov
sub
xchg
mov
push
jne
pop
mov
dec
sti
out
or
int3
lods
repz
and
stos
popf
xchg
popf
inc
sbb
cwtl
dec
sti
fcompl
inc
fcmove
sti
jbe
sti
daa
fcomp
xchg
inc
xchg
mov
lock
sub
jmp
xorl
hlt
adc
adc
insb
and
push
inc
dec
scas
aaa
push
fwait
dec
pop
mov
fs
and
and
test
aaa
sub
outsb
or
call
test
and
xchg
sub
inc
xchg
jmp
aad
orl
fisubs
xchg
lcall
sub
xor
mov
fwait
lahf
imul
mov
iret
aam
push
mov
test
adc
lods
sbb
or
test
lock
sbb
sbb
dec
mov
test
or
orb
and
aad
into
cmp
adc
ret
ljmp
cltd
mov
adc
in
ljmp
xchg
hlt
fmuls
popa
icebp
pop
or
stos
or
hlt
xor
cmp
or
sub
inc
push
jne
in
and
inc
or
call
cli
dec
lds
pop
test
dec
sbb
push
mov
adc
mov
test
and
pop
xchg
js
and
int3
xchg
inc
fdivrl
add
add
popf
inc
mov
adc
test
test
jmp
lods
adc
cs
insl
adc
call
sub
enter
sub
add
popf
inc
push
and
sti
adc
mov
push
pop
jmp
sbb
aam
sbb
aas
cmpsl
test
jmp
adc
mov
and
add
clc
adc
ret
xchg
inc
popf
out
cmpsb
lcall
push
jb
mov
cwtl
sarb
xchg
cmp
es
hlt
mov
cmpsl
push
cltd
daa
and
mov
mov
mulb
andb
jo
test
push
cli
rolb
dec
mov
mov
cmp
cmp
scas
in
mov
mov
sbb
ficompl
enter
test
mov
movsl
mov
and
dec
popf
iret
mov
xor
xchg
cmp
lock
loope
and
xchg
test
and
push
inc
adc
add
and
sbb
xor
xor
shll
inc
and
or
inc
or
cltd
and
inc
xchg
adc
mov
adc
pop
enter
sub
mov
and
add
adc
mov
inc
xchg
sub
mov
or
inc
add
pop
bound
imul
mov
jle
push
test
enter
and
and
push
adc
sbb
test
divb
adc
or
push
nop
fmuls
mov
and
mov
lcall
xorl
test
and
inc
je
dec
adc
mov
sbb
push
test
enter
daa
js
into
sbb
mov
loop
mov
sbb
lock
push
inc
or
movsb
lea
mov
popa
sbb
lods
or
call
inc
pop
and
adc
push
cmp
pop
or
mov
mov
sub
mov
and
bound
adc
and
or
in
fldl
sub
adc
cmp
inc
ror
dec
in
and
mov
movsl
pop
sbb
test
enter
nop
and
sub
inc
adc
xor
pusha
mov
cmp
adcb
movsb
and
push
inc
imul
addr16
cmp
sbb
add
inc
inc
and
push
mov
and
and
xchg
adc
inc
sbb
test
clc
or
xor
xchg
test
and
inc
fstl
jl
and
push
fcompl
pop
mov
push
or
pop
cmp
sbb
inc
xchg
and
mov
push
mov
or
inc
mov
cmp
and
sub
inc
add
mov
cmp
mov
xchg
popa
enter
sub
inc
add
lock
xchg
mov
je
xchg
repnz
xchg
scas
sub
xchg
adc
xchg
ss
lcall
decb
xchg
mov
jmp
popa
mov
stos
sub
test
scas
inc
imul
imul
leave
hlt
loope
mov
jge
jecxz
repz
data16
data16
add
xchg
hlt
sbb
mov
xor
sbb
fs
cltd
and
sbb
inc
pop
mov
pop
pop
gs
enter
repz
adc
test
mov
or
pop
dec
imul
sub
mov
addl
into
movsl
lahf
mov
fldl
dec
add
sahf
ss
out
xchg
xchg
adc
mov
mov
sbb
pop
stos
or
fwait
dec
mov
fnstenv
leave
sub
inc
mov
pusha
jnp
xor
and
out
sahf
cmpsl
das
sahf
popf
push
jne
loope
lcall
in
test
shlb
mov
inc
lahf
mov
jl
push
jecxz
arpl
popf
push
pop
stos
dec
inc
repz
xchg
push
and
ss
es
adc
add
and
negb
idiv
and
sbb
and
daa
xchg
lret
cmp
test
insb
xchg
adc
adc
pushf
mov
incb
int3
mov
sahf
add
mov
out
clc
ret
popf
pushf
dec
test
sub
or
xchg
scas
xorl
nop
mov
or
add
fldenv
inc
call
pop
push
lahf
movsl
sbb
mov
jmp
mov
mov
adcl
dec
push
stos
cltd
into
or
bound
clc
adc
pop
cld
adc
sub
sub
lods
or
vandnps
call
and
mov
cmp
sbb
jecxz
aam
inc
nop
xor
cmp
xchg
xchg
pop
enter
mov
stc
dec
aas
ljmp
and
pop
cmp
pop
mov
xor
add
test
lods
xchg
adc
mov
or
or
fmulp
js
jns
cs
pushf
nop
std
call
in
dec
js
or
sub
add
xchg
jg
push
hlt
add
jmp
fs
mov
test
out
stc
scas
push
push
and
and
fs
push
sub
or
scas
push
mov
xor
mov
outsb
pop
push
cmpsb
sti
inc
push
push
or
cltd
sbb
inc
push
in
outsb
or
cld
adc
call
inc
cmp
loop
std
and
xor
xor
incl
in
adc
add
scas
into
aaa
adc
daa
dec
and
loope
xor
mov
aam
mov
aas
xadd
data16
dec
mov
pop
jmp
or
ds
mov
push
mov
inc
mov
inc
cwtl
mov
or
pusha
aam
push
mov
je
or
arpl
or
dec
out
outsb
inc
push
popf
call
add
push
adc
test
test
or
popl
jl
lds
and
stos
movsl
add
push
cli
dec
pop
pop
sub
push
xor
fsubs
jae
push
pop
dec
or
cmp
adc
shll
lea
pop
enter
mov
dec
or
or
sub
aaa
dec
js
add
sub
or
push
push
adc
rcr
pop
adc
es
cmp
xchg
imul
enter
imul
out
push
inc
sub
push
jne
or
or
mov
jge
je
pop
aas
and
rcrl
adc
jo
adc
icebp
adc
mov
jecxz
dec
gs
aam
inc
sub
fwait
sbb
adc
jbe
fs
mov
push
sahf
adc
lret
or
mov
adc
test
push
test
das
add
xor
movsb
sub
daa
data16
push
sub
sarb
inc
adc
les
mov
xor
and
mov
pop
shll
sbbl
mov
iret
jl
int
insb
rcll
and
clc
leave
push
les
lcall
test
and
dec
xchg
inc
test
or
daa
adc
in
data16
xor
mov
jmp
call
sub
jne
push
icebp
fistpll
cld
outsl
call
popf
repnz
popf
test
lea
pop
cs
fmuls
aam
push
neg
adc
xchg
test
mov
or
loopne
test
sar
and
movups
cld
call
push
imul
jl
xchg
sub
aaa
add
cmp
rcrl
enter
dec
dec
sub
adc
mov
dec
ja
lea
or
add
lea
add
int
or
lea
xchg
jns
cmpsl
subb
orb
jge
icebp
mov
movsb
movnti
hlt
add
sub
cli
push
ffreep
enter
cwtl
test
mov
inc
call
lea
repnz
mov
xor
inc
out
xor
pop
pop
mov
inc
dec
push
rclb
adc
lods
in
lods
pop
inc
sub
push
xchg
mov
ljmp
mov
test
fildl
imull
sbb
sti
sub
push
cmpsb
aad
shrb
and
xchg
fwait
stos
jns
adc
arpl
or
mov
adc
adc
lret
adc
dec
add
cmp
mov
mov
cmpsl
jle
mov
pop
cld
dec
test
daa
lods
arpl
sbb
stc
and
bound
lea
adc
jnp
inc
sti
cmp
mov
repnz
fcoms
call
fs
cli
pushf
cmp
inc
aas
lock
sti
jno
cmp
loope
stc
and
adc
cs
mov
lahf
aaa
roll
inc
or
imul
stos
mov
or
cli
inc
sbb
insl
mov
adc
and
test
adc
push
hlt
outsl
aam
aas
pop
cli
call
aaa
cs
bound
adc
stc
mov
cwtl
popf
and
dec
mov
sub
add
adc
sbb
cs
mov
repnz
dec
pop
adc
sbb
mov
inc
inc
mov
push
out
and
mov
dec
push
les
push
or
adc
call
cmp
sbb
inc
inc
lret
test
ret
sbb
repnz
cmp
test
pusha
movsb
jg
sbb
cmp
xchg
adc
sbb
pop
cli
sub
sub
aas
mov
cld
sub
or
call
lret
sahf
test
mov
dec
push
cs
jmp
push
adc
stos
sub
xchg
mov
or
clc
adc
sub
fs
inc
mov
mov
mov
adcb
icebp
fldenv
sbb
mov
inc
clc
sub
adc
mov
dec
xor
daa
push
nop
dec
cli
mov
adc
push
call
aam
xchg
mull
bound
and
adc
inc
or
mov
inc
inc
fidivrl
mov
aas
mov
xchg
inc
pop
ret
out
jmp
daa
lods
cwtl
push
pop
mov
cmpsb
add
jns
movsl
das
or
sub
xor
inc
aas
mov
adc
inc
pop
add
and
sub
test
push
pop
sub
pop
cld
sub
push
add
cmp
mov
test
push
in
dec
ds
pop
lods
lods
inc
out
mov
out
jnp
mov
loop
fimull
pop
and
sub
cld
ljmp
clc
call
sub
icebp
in
add
pusha
and
push
lods
pop
adc
mov
icebp
fmul
mov
sti
and
sbb
push
ds
cmp
mov
in
xor
inc
cmp
lds
push
cltd
and
movswl
in
in
mov
mov
mov
hlt
je
pop
mov
imul
js
dec
outsb
mov
xor
lods
pop
mov
jae
sub
aad
xchg
inc
stc
inc
jb
push
fldenv
ja
xchg
sbb
arpl
dec
arpl
or
mov
in
in
push
pop
mov
pop
push
leave
sbb
ja
jns
jl
inc
test
sub
add
and
dec
sbb
push
or
int3
sbb
adc
adc
jne
icebp
roll
add
in
jg
sub
push
mov
dec
das
xor
bound
in
push
icebp
sub
push
pop
add
mov
dec
adcb
and
dec
dec
test
sub
pushf
jle
in
push
push
push
and
je
mov
lds
or
das
xchg
push
imul
inc
inc
xchg
mov
lret
cli
fs
out
and
mov
adc
mov
data16
inc
mov
popf
or
pushf
inc
repnz
pop
cmp
inc
daa
lock
aas
inc
push
pop
dec
pop
fs
aas
mov
sub
push
pusha
or
mov
mov
jp
rorb
les
cmpsb
out
jns
test
outsb
nop
out
pop
cmpsl
or
test
push
mov
sub
add
pushf
shl
and
ret
jle
and
outsl
jp
out
add
inc
push
xor
inc
jmp
sub
sbb
lea
cmp
loope
cmp
cmp
aaa
lock
inc
les
mov
xor
jne
mov
mov
bound
pop
adc
push
xchg
adc
dec
insb
sbb
pop
xor
lahf
mov
mov
lcall
ret
test
imul
push
mov
push
mov
lahf
mov
inc
pop
jns
lds
jno
push
ds
xchg
mov
jge
mov
out
cmp
dec
stos
push
cltd
xchg
add
adc
pop
xor
sahf
push
and
xchg
cmp
push
inc
sub
push
adc
push
jecxz
imul
scas
loop
sub
sbb
inc
icebp
cmp
dec
mov
push
cwtl
jge
and
les
mov
cmc
mov
test
dec
mov
sti
arpl
enter
mov
enter
or
test
jl
push
or
jae
dec
sti
sbb
andb
mov
dec
cmpxchg
push
and
adc
popf
or
push
adc
nop
push
mov
jnp
inc
push
sub
add
and
aaa
sbb
cmpsb
bound
lds
jnp
mov
negb
cmp
test
popf
mov
aaa
dec
mov
sub
and
xor
fcoml
dec
call
dec
aam
pop
mov
ret
xor
or
pop
sbb
loope
mov
and
into
daa
sub
inc
jp
or
jl
insb
aas
shll
adc
mov
std
andb
ljmp
bound
rclb
andl
pop
mov
jnp
hlt
aas
shrb
or
push
sub
mov
jo
mov
mov
push
and
loop
jne
jns
jg
push
push
jno
dec
mov
mov
adc
xchg
push
andb
jg
mov
in
push
sub
sarb
rorl
cmp
cmp
mov
xor
sub
dec
mov
call
imul
test
arpl
push
test
xchg
stc
pop
push
dec
pushf
loop
mov
mov
test
mov
jne
add
mov
xor
jb
inc
xor
adc
sbb
sbb
and
arpl
xchg
leave
aad
mov
popa
sub
dec
in
ret
nop
mov
lret
dec
and
mov
inc
push
ret
out
push
mov
pop
dec
js
jns
enter
into
jge
or
mov
push
mov
xchg
nop
enter
xchg
adc
jne
adc
pop
insb
adc
sub
sbb
pop
mov
imul
sub
mov
dec
xor
rcrb
cmp
xchg
out
bound
cltd
xchg
test
sti
adc
lcall
stc
push
pop
pop
int
loope
push
xor
dec
js
inc
cwtl
and
imull
in
or
or
mov
mov
test
mov
and
rorb
mov
sbb
mov
cmp
adc
popf
aad
sub
data16
adc
inc
pushf
or
jmp
scas
adc
and
test
iret
jg
shr
fnstenv
pop
mov
jno
inc
sbb
dec
test
pushf
cmp
add
ret
mov
scas
mov
jno
mov
loope
jo
movsl
sbb
jmp
ficoml
push
sbb
daa
adc
and
mov
sub
or
lods
add
lods
inc
rclb
cwtl
xchg
sbb
dec
pop
fwait
mov
in
sub
or
jecxz
cmp
fstps
jle
dec
fs
sbb
mov
popa
test
sbb
out
addl
cltd
movsl
enter
loop
adc
clc
dec
subb
pop
push
aad
dec
jp
les
stc
inc
mov
and
sbb
push
fs
fldz
aam
mov
in
out
mov
test
cmc
imul
and
subb
push
nop
inc
add
or
sub
popa
psubsb
mov
jl
xchg
inc
jle
adc
jle
js
adc
push
test
ds
add
dec
push
xor
push
push
mov
mov
adc
cld
xor
daa
repz
mov
in
inc
pop
aad
or
xchg
mov
in
sub
mov
inc
dec
cld
push
pop
add
rolb
xor
js
dec
mov
push
mov
mov
inc
inc
push
stos
mov
lods
pop
dec
inc
enter
jmp
mov
jb
sahf
repnz
push
call
dec
inc
subl
jmp
stos
mov
iret
lret
jbe
mov
or
adc
inc
or
and
pop
vmread
dec
pushf
jg
push
and
cmp
push
cld
cmp
shlb
pop
es
push
cmpsb
test
and
jnp
gs
cmpsb
xor
nop
inc
hlt
adc
xchg
lds
mov
movswl
mov
mov
xor
jb
out
push
fnstcw
imul
and
mov
xor
lcall
xchg
sub
mov
sarl
jno
xchg
jo
ret
jne
fldl2t
push
xor
pop
mov
lock
jg
push
fsubrl
or
test
js
or
jge
mov
popf
mov
xor
call
cmp
dec
test
cmp
cmp
fbld
xorl
insb
and
rolb
inc
sbbb
jmp
adc
les
xchg
mov
mov
jo
adc
aad
xchg
mov
xchg
inc
sbb
mov
xor
cltd
and
test
or
sbb
mov
jae
stos
fcoml
ret
mov
test
mov
sahf
dec
add
cmp
jne
fdivs
sub
mov
mov
sbb
pop
mov
dec
mov
idivl
add
sub
in
xor
arpl
lock
adc
adc
lods
jmp
bound
adc
push
inc
aaa
cltd
test
mov
adc
in
daa
pop
lea
xor
pop
inc
and
adc
stos
add
cmp
jne
out
lcall
repnz
pop
push
aaa
push
jne
ds
push
test
popf
mov
push
sub
dec
xchg
mov
cmp
mov
xchg
inc
sbb
push
clc
sub
movntps
aas
sub
mov
mov
xor
sub
hlt
ja
inc
arpl
pop
mov
adc
mov
inc
jns
push
pop
cmovb
ficomps
xor
mov
xchg
out
mov
mov
ja
sbb
push
sahf
pop
sub
outsb
jne
pop
and
dec
or
daa
cmp
inc
sub
popf
sub
mov
aam
out
sbb
daa
fnsave
test
data16
add
pop
push
jp
dec
loopne
xchg
push
in
in
mov
jns
adc
jge
inc
fdivr
ret
sbb
addb
adc
call
jno
in
sub
add
das
mov
mov
jl
mov
les
inc
jo
je
push
std
xor
call
adc
pop
mov
dec
pop
add
lods
inc
fsubrs
jbe
neg
out
xchg
xlat
pop
sbb
mov
in
loopne
int
lahf
pop
in
popf
mov
or
bound
clc
push
rcrb
jl
std
je
xor
dec
mov
add
xchg
xor
inc
repnz
mov
jge
jo
hlt
cli
push
je
add
out
mov
push
jecxz
das
jmp
jge
gs
xor
cmp
ret
es
je
orb
mov
cmp
xor
sub
jbe
ja
lods
and
lds
test
xor
add
cmpb
in
pop
ljmp
mov
cld
testb
inc
jne
clc
push
jmp
inc
loope
xchg
repz
cmc
add
xchg
stos
cmp
dec
inc
jl
xchg
add
repz
hlt
mov
and
testb
jbe
pop
fdivl
das
pop
jbe
js
iret
insl
jno
inc
scas
in
das
cwtl
loopne
push
mov
push
outsl
adc
negl
inc
nop
mov
fisttpl
inc
mov
lods
push
sub
je
lret
clc
pop
adc
sub
mov
test
enter
dec
aas
adc
les
dec
jb
and
and
xchg
inc
in
clc
lods
push
pop
das
fidivs
add
and
sti
push
jg
mov
aam
mov
or
or
pop
rcrb
inc
pop
sub
addr16
jge
xchg
daa
lea
jle
outsb
cli
xor
push
adc
sar
cmc
test
dec
sbb
dec
pop
das
idivb
daa
xchg
jbe
inc
sbb
jp
cmp
and
imul
push
xchg
movsl
inc
nop
les
or
jg
mov
movsb
pop
jmp
pop
call
sub
sub
adcb
cli
lea
nop
cmp
mov
adc
push
rcrl
mov
jmp
xor
sub
ds
add
pop
xchg
pop
mov
and
mov
mov
adcb
cmp
push
jae
andl
rorb
push
call
pop
je
jns
sbb
cld
test
lret
jmp
xchg
sbb
shrb
sahf
bound
and
inc
les
clc
test
inc
jmp
mov
adc
or
jno
mov
cmpsb
pop
scas
repz
cmp
scas
call
fcoml
cwtl
sti
xchg
mov
and
das
outsl
sbb
inc
push
fwait
inc
inc
and
xchg
sti
inc
adc
comiss
xchg
jns
add
xchg
jo
movsb
js
and
data16
stos
cmp
call
mov
jp
int
and
popf
js
subb
stos
jmp
cld
outsl
lods
mov
test
fs
mov
sbb
test
sbb
test
popf
jl
sti
xchg
xor
mov
sbb
pop
sbb
and
push
sub
dec
adc
mov
outsl
mov
inc
clc
sti
cmp
xor
call
jno
add
inc
ja
dec
mov
enter
pop
sbb
aas
and
lahf
stos
fdivr
pop
pop
andb
fisttpl
jmp
jbe
outsb
mov
lahf
add
int3
and
inc
dec
mov
shll
adc
cmp
xor
lea
addl
pop
into
dec
incl
repz
push
adc
and
lret
cmp
and
xor
mov
cmp
inc
jbe
leave
imul
test
and
and
dec
daa
in
xor
in
add
jbe
inc
mov
cmp
add
xchg
jmp
mov
adc
scas
xor
add
dec
and
lock
jmp
inc
inc
or
and
mov
jns
outsb
jne
lods
les
jmp
inc
sbb
add
inc
adc
xorl
mov
sti
adc
sbb
jl
pop
or
insb
movb
pop
lea
jmp
mov
xchg
pop
daa
pop
pusha
les
sbb
cli
adc
cli
sahf
sub
unpckhps
lds
push
or
out
or
jae
and
inc
adc
jp
pushf
sub
clc
cli
sbb
lea
movsl
cltd
push
sub
or
call
sbb
and
adc
mov
in
push
lret
jne
gs
ss
mov
adc
in
fwait
js
negl
mov
xchg
cmp
repz
pop
shrb
jae
mov
xor
movd
xor
sub
push
xor
and
push
sub
jl
lahf
xorb
and
enter
cmp
lea
sub
sub
inc
pushf
jb
inc
dec
dec
mov
push
jmp
adc
push
or
and
lahf
flds
stos
daa
sarl
jle
or
jmp
dec
and
insl
push
mov
repz
and
inc
mov
nop
addr16
pop
or
mov
cmpsl
nop
dec
xchg
xor
jne
scas
cwtl
lea
mov
stos
pop
rcrl
pushf
bound
call
call
mov
decb
mov
xor
jo
xlat
popa
call
stos
push
jle
outsl
cmp
or
aam
ret
scas
xchg
sarl
push
and
inc
dec
mov
push
push
movsl
in
or
jo
les
xor
adc
cmp
adc
cld
sbb
rol
adc
xor
test
xlat
push
movsb
in
inc
aaa
shlb
call
les
pop
sbb
cmp
jno
and
enter
xchg
and
mov
mov
and
mov
jne
mov
add
int
aam
jecxz
add
stos
cltd
adc
mov
and
dec
jp
test
jno
gs
pop
inc
mov
mov
insl
popa
sti
pop
pop
jne
sbb
mov
int3
inc
inc
mov
rcrl
mov
jmp
cmc
stos
loop
adc
dec
std
fucomi
scas
push
xchg
sbb
aad
jle
cmp
inc
cli
or
popa
jne
push
inc
rcrb
push
jbe
jbe
mov
cmpl
push
test
lret
push
push
sub
cmp
dec
out
mov
addl
gs
and
mov
adc
sub
pop
ljmp
les
arpl
outsb
cld
xchg
xchg
mov
sub
xchg
inc
adc
es
pop
push
enter
les
inc
cmp
or
add
jle
adc
dec
enter
mov
cmp
adc
mov
jmp
call
jmp
xor
or
cmp
cmp
fcompl
stc
push
inc
adc
inc
mov
aas
dec
pop
and
push
push
inc
lods
and
xor
mov
leave
jne
mov
mov
mov
ljmp
mulb
jmp
pushf
mov
push
mov
icebp
clc
cmp
enter
ret
into
pop
mov
int
sti
cmp
lock
movsb
test
mov
loopne
and
fs
push
fbstp
adc
inc
movsb
dec
rorb
cltd
sbb
lods
gs
push
shr
jle
ja
test
push
jbe
push
dec
rcrb
cmp
cwtl
mov
mov
aad
sub
lock
ss
adc
jle
ljmp
ret
jmp
sub
loopne
and
mov
jae
or
cld
call
cmp
dec
out
inc
adc
pop
popa
mov
fdivs
test
and
fadds
std
mov
dec
mov
or
mov
scas
leave
mov
sbb
inc
cmpsl
sbb
dec
adc
les
add
call
mov
add
shrb
mov
mov
test
mov
dec
adc
pop
pop
pop
lds
mov
pop
orl
pushf
xor
je
or
adc
push
dec
pop
and
mov
fimull
daa
ffree
pop
sub
cmpsl
jne
int3
adc
inc
sbb
pusha
and
jmp
sbb
push
xor
jno
inc
ret
popa
test
popa
jg
call
xchg
shrb
pusha
dec
mov
xor
dec
std
daa
les
jg
movsb
push
bound
xor
and
clc
fwait
sub
outsb
cld
jne
xor
xorb
clc
add
cltd
rcl
jae
popf
gs
jl
and
je
inc
cmp
sub
lock
sarb
xor
jnp
pop
inc
sbb
adc
add
push
and
inc
mov
lock
jmp
scas
push
mov
cmp
aad
out
sti
mov
lds
push
mov
dec
rcl
jne
mov
cmp
out
cmpsb
push
jns
mov
in
push
lods
lcall
inc
mov
lods
cwtl
jp
ds
push
inc
fmuls
inc
dec
out
leave
sbb
fucom
daa
jg
mov
adc
call
and
inc
inc
pop
and
push
push
rol
xor
les
cltd
mov
xor
aam
call
and
mov
lret
gs
out
sbb
ret
in
int3
push
pusha
lds
mov
jg
sarl
pusha
push
cbtw
mov
or
icebp
sti
sbb
and
sahf
lock
mov
clc
push
or
aam
xor
cmp
incb
je
lcall
cltd
addl
pop
mov
xchg
mov
hlt
mov
sub
aas
inc
rorb
stc
push
xchg
pop
cld
dec
xchg
test
cmp
mov
mov
cld
adc
cwtl
or
sbb
icebp
call
mov
mov
sbb
push
std
sub
push
stos
pop
jb
fcoml
xlat
in
push
data16
and
in
cltd
popf
or
and
pop
adc
fmull
mov
xorl
ss
sub
mov
mov
adcb
sbb
sbb
push
mov
push
test
mov
push
inc
je
outsb
jbe
and
movsl
les
add
jmp
cmp
or
xchg
in
call
call
testb
jmp
aad
adc
cmp
enter
mov
cmp
idivb
and
int
testw
jne
or
test
adc
aas
lds
and
sub
fisttps
lods
dec
dec
and
test
or
xor
or
push
inc
mov
mov
mov
jmp
mov
lods
cld
cld
pop
lock
cs
dec
adc
and
movsl
sub
je
jmp
cwtl
mov
popa
adcb
ret
sarl
jmp
insl
ljmp
xorl
xchg
xchg
and
jb
js
in
jp
mov
push
das
pop
cli
aam
fcmovb
insb
inc
std
mov
lcall
mov
push
xor
sarl
inc
pop
sub
adc
pop
sub
int3
jno
mov
ss
ja
mov
loopne
lcall
repz
in
std
or
add
decb
loopne
out
xor
dec
push
repnz
adc
lods
xchg
shl
or
add
hlt
push
clc
call
mov
xchg
int3
lcall
mov
mov
loope
ds
andb
mov
mull
add
pop
jecxz
add
fsubl
inc
jecxz
push
or
sub
dec
stos
dec
mov
lret
push
faddl
and
lods
stos
xchg
int3
lahf
mov
enter
and
and
push
mov
bound
in
mov
adc
sti
mov
jne
sahf
lret
mov
sub
test
jp
cmpsl
mov
repnz
jmp
sub
push
mov
or
rorl
dec
stc
repnz
repz
sbb
popl
adc
xor
or
add
push
call
testb
cmp
jle
call
mov
je
enter
inc
cmp
jl
jg
bound
and
out
clc
sahf
inc
push
pop
enter
sbb
adcb
adc
cmp
xor
mov
adc
xor
jp
jge
test
test
add
pop
sti
fstl
in
adc
pop
inc
cmp
jl
add
ret
das
scas
fldenv
xchg
xchg
or
pop
lcall
xor
mov
ret
inc
push
jecxz
std
rcll
pop
enter
cmp
repz
push
test
pop
inc
nop
push
notl
lret
mov
or
jnp
repnz
cmp
test
pop
data16
push
or
mov
lcall
jo
or
mov
mov
insl
xor
cld
xchg
inc
dec
jle
pop
addr16
cmpsl
jne
mov
pusha
mov
xchg
repnz
push
mov
push
or
adc
xchg
pushf
movsb
mov
add
jne
and
loope
push
xchg
adc
push
xchg
test
push
aas
add
arpl
lods
sub
pop
daa
add
jne
mov
xor
adc
mov
inc
add
nop
push
mov
and
and
pop
add
dec
les
push
fmull
cmp
mov
push
jg
pop
sbb
xor
pop
es
jbe
jecxz
dec
jne
test
out
push
insb
adc
push
mov
and
cwtl
sbb
push
or
imul
jns
mov
jge
add
lea
fimuls
call
fcomps
in
sub
mov
rcl
dec
pop
or
dec
mov
adc
cmp
lret
jmp
xchg
out
mov
adc
in
add
dec
sbb
outsb
ret
shll
inc
mov
adc
sbbl
cs
jp
mov
sbb
jl
push
xlat
std
push
push
pop
pop
je
mov
lret
dec
dec
aam
sub
cwtl
and
mov
fmuls
mov
xchg
inc
or
test
push
int
xchg
inc
loopne
insb
scas
mov
xor
dec
lahf
mov
mov
lods
add
rcrb
dec
xchg
xor
test
repz
and
int3
push
jl
inc
movl
popf
push
push
and
and
sbb
sbb
sahf
pop
push
push
mov
loopew
dec
xbegin
mov
pop
sbb
cmp
mov
hlt
jne
sub
or
jmp
push
out
leave
cli
mov
mov
mov
test
push
call
in
call
push
xor
cmp
cwtl
loope
in
iret
test
xchg
clc
push
fsubrl
cltd
test
or
pop
call
add
imul
pusha
mov
ljmp
lea
xchg
das
addb
xchg
enter
ljmp
dec
mov
mov
push
push
mov
pop
and
pop
je
push
pop
adc
push
jp
sbb
add
in
lret
cmp
push
jo
pop
mov
rcrb
inc
push
rcrl
pusha
or
sbb
xchg
in
ljmp
sbb
ret
mov
faddp
mov
leave
inc
push
xor
cltd
pop
mov
cld
mov
xor
les
jl
adc
and
push
add
push
lods
out
es
lds
mov
test
aad
pop
cld
adc
pop
jae
adc
mov
and
lock
jno
push
xor
daa
ss
jp
icebp
or
adc
popf
xor
fsubrl
stc
lea
inc
adc
or
icebp
fsts
cltd
jmp
fs
mov
cmp
cwtl
divb
addw
inc
and
jne
lahf
push
stos
xor
test
loop
jg
cmp
xchg
enter
call
loopne
dec
xchg
enter
cli
add
sub
inc
cmp
inc
clc
mov
dec
scas
and
mov
or
inc
mov
xor
push
nop
insl
aam
test
push
jl
mov
dec
pop
jno
dec
test
jl
test
test
xchg
fildl
fcomp
adc
or
inc
dec
mov
adc
dec
rcrb
loopne
and
inc
mov
cmp
sbb
or
icebp
xor
or
out
push
and
jmp
and
dec
mov
xchg
clc
cmp
ljmp
fs
and
and
loop
dec
outsl
out
and
xlat
inc
ss
and
pop
xchg
in
add
clc
mov
inc
test
stos
daa
aas
rol
loopne
jb
mov
cmp
sub
sahf
cld
mov
inc
jge
mov
mov
and
loopne
adcb
pop
and
and
js
pop
inc
add
mov
jns
arpl
add
pop
shll
adc
pop
dec
sub
jl
add
sbb
out
pop
mov
lds
dec
nop
bound
mov
lcall
mov
and
pop
pop
ss
and
pop
aaa
push
sahf
adc
or
mov
inc
xor
push
and
jb
dec
sbb
lea
or
movsl
aad
mov
xchg
sbb
adc
in
leave
popl
mov
sub
outsb
push
xchg
test
xlat
cmp
cmp
adc
fisttpll
mov
sub
xor
iret
sub
and
adc
push
jbe
mov
dec
dec
mov
xor
adc
or
inc
or
insb
lea
xchg
push
add
push
sub
je
jae
outsl
sub
aad
mov
and
subl
push
xlat
nop
or
or
add
xchg
loope
in
or
call
fs
or
or
add
popf
push
mov
call
pop
popf
pop
xchg
xlat
mov
ret
push
mov
add
scas
xor
fisttps
std
mov
xchg
mov
fistpl
test
pop
jno
testl
or
and
ja
inc
add
xor
inc
rorb
lret
mov
cs
call
int
and
lcall
ficomps
inc
aas
push
ret
hlt
sub
add
and
push
daa
ljmp
inc
loopne
inc
repnz
das
or
adc
adc
push
pop
xor
jl
push
test
fxch
stc
into
cmp
jne
cmp
lods
sbb
sub
dec
loopne
inc
icebp
test
sbb
xor
add
lods
push
mov
mov
les
or
int3
push
fmull
ficoml
movl
mov
ja
test
movsb
jmp
repz
repnz
adc
xchg
aam
out
call
mov
mov
jle
lods
sbb
jmp
xchg
ds
cmp
and
hlt
or
cld
jno
cmpsl
fstps
lcall
push
push
rorl
cmp
push
push
scas
aam
or
bound
push
mov
inc
jbe
mov
or
je
movb
inc
mov
sarl
and
push
adc
inc
sub
data16
cwtl
sub
lods
push
insl
je
push
popf
add
filds
repz
sub
ja
pop
push
mov
push
cwtl
jne
mov
inc
xor
jle
inc
jbe
out
dec
test
fimuls
enter
cmp
arpl
jae
push
mov
add
xchg
dec
sub
sub
std
jecxz
push
es
ret
or
pop
cmp
or
push
add
mov
out
cmp
pusha
push
pop
jne
movsb
adc
gs
add
cmp
jbe
dec
mov
mov
adc
lock
cmpsb
clc
push
fwait
or
dec
xchg
lret
xchg
jg
test
dec
iret
jg
or
fildl
mov
or
sbb
fnstenv
mov
jmp
lock
ret
sti
inc
cmp
fadds
add
adc
dec
inc
nop
mov
push
das
outsb
ja
idivb
cwtl
roll
pop
push
push
aam
das
fists
and
xor
addr16
enter
popa
cmp
mov
aaa
adc
inc
js
push
pop
or
lock
mov
add
sub
push
mov
adc
mov
xchg
push
jmp
pop
sbb
push
push
adc
cmc
inc
mov
in
add
pusha
dec
push
rcrl
les
adc
and
push
shlb
pop
dec
xor
jnp
test
push
dec
pop
cmp
mov
nop
sub
adc
call
ja
ljmp
inc
push
xor
adc
sar
insb
xor
ret
mov
fcoms
xor
cvttps2pi
pop
pop
pop
sub
lock
add
aaa
inc
mov
cmc
jo
jae
ljmp
addb
xor
or
stos
pop
add
inc
ret
test
cmp
aam
rorl
push
or
mov
adc
xorl
sub
daa
xor
lds
or
ljmp
mov
xor
repz
test
jbe
mov
xor
or
xor
cmpl
in
into
mov
push
push
mov
mov
int
or
cwtl
cmp
xor
movsb
and
or
mov
in
or
aaa
pop
push
add
adc
lret
mov
loopne
adc
jb
test
sub
enter
and
jmp
xchg
xchg
mov
pop
dec
inc
fstl
pop
pop
xor
out
and
and
push
cs
aam
xchg
and
push
push
pop
daa
adc
sub
data16
push
adc
testl
int3
dec
xor
cmpsb
cmp
xchg
std
jg
out
mov
leave
clc
aad
push
mov
or
mov
je
movsl
sysret
adc
adc
insb
and
or
adc
pop
xchg
dec
fs
or
adc
jmp
arpl
add
cld
aam
mov
aad
and
loope
mov
or
clc
cmp
cli
lock
sbb
pop
xchg
dec
scas
movsb
add
cld
cs
cmp
inc
les
les
scas
adc
lea
lods
aad
and
add
mov
cmc
push
and
outsb
pop
cli
adc
push
mov
adc
imul
add
jle
das
xor
bound
inc
push
lds
cld
lea
mov
xor
xor
loopne
cmp
je
sbb
pop
sub
dec
push
shll
push
sub
push
sbb
and
mov
jle
les
mov
adc
sbb
popf
jo
mov
rcrl
movsb
sbb
insb
and
and
je
loop
mov
sbbb
push
jle
enter
sub
xchg
dec
mov
and
or
call
dec
cld
pop
and
sub
fwait
sub
dec
pop
pop
pop
cmovae
mov
push
xlat
cmpsl
jne
jb
dec
xchg
mov
test
testb
leave
jge
inc
adc
cmp
je
fcomip
inc
out
sbb
jb
or
mov
data16
mov
cmp
sbb
adc
repnz
cmc
push
movsl
cmp
jp
movsb
pop
pusha
or
fiaddl
sub
inc
xlat
bound
sub
int3
pop
sbb
dec
repz
push
xchg
mov
jo
loope
in
mov
pop
stos
je
scas
mov
jp
call
sub
push
jecxz,pt
add
in
xchg
loop
daa
jo
jo
xor
lods
jne
loopne
adc
and
outsb
cmp
inc
enter
push
push
and
pop
mov
dec
stos
lret
cs
stos
cwtl
das
mov
mov
loopne
inc
adc
mov
adc
add
dec
jmp
lock
xchg
mov
into
xor
aam
fcoms
or
add
jno
ret
rclb
ficoms
popf
nop
clc
mov
add
dec
rorb
mov
adc
arpl
test
fsubr
gs
loope
scas
aas
cltd
aas
int3
pushf
inc
aas
and
rcr
push
daa
mov
stos
lods
pushf
call
cmp
jo
xchg
ja
inc
loopne
or
xchg
pusha
enter
gs
lahf
aaa
clc
inc
mov
inc
ljmp
popf
dec
stos
fistpl
cwtl
pop
cld
cmp
stos
sbbb
and
sub
inc
loop
mov
out
xchg
bound
or
ret
jnp
imul
adcb
push
push
push
xchg
push
or
xchg
push
push
pop
mov
ja
mov
mov
mov
out
push
test
sub
div
cwtl
sbb
xor
pop
cmc
pop
ret
push
or
sbb
fsubs
stc
xchg
inc
repz
out
loope
bound
lock
cmp
shl
cmpsl
call
pop
dec
dec
iret
pop
fbstp
int3
scas
cmp
iret
loop
js
sbb
cld
stos
jmp
pop
jmp
mov
fcoms
xor
movsl
cmp
mov
pop
loopne
cwtl
test
jmp
arpl
pop
lahf
pop
pop
mov
cmp
pop
mov
pop
call
lret
add
rcrb
aaa
push
out
sub
push
sbb
push
xchg
sbb
pop
xchg
cmp
add
pushl
jb
add
ficomps
clc
add
xor
xor
push
push
sbb
add
jb
sbbl
dec
and
cmp
ja
adc
inc
sbb
test
mov
and
inc
and
sbb
push
and
adc
test
jae
lea
roll
ret
and
push
dec
call
mov
shrb
xor
repnz
pop
popa
out
stc
cmp
or
popf
cmp
or
addr16
push
add
test
pop
and
insb
xor
jo
cmp
outsw
or
imul
and
pop
mov
add
adc
sbb
test
mov
orb
adc
xchg
xor
addr16
lods
adc
adc
cmpsb
xor
xchg
xor
icebp
bnd
sbb
sbb
mov
add
lea
push
cmpsl
pop
daa
cmp
dec
shlb
incb
in
cwtl
clc
lahf
iret
xchg
aaa
fs
and
xor
lret
aaa
add
xchg
out
outsb
mov
inc
std
and
pop
scas
pop
xor
lcall
mov
adc
mov
xchg
cltd
inc
sbb
xor
insb
jb
ja
adc
or
jbe
mov
clc
fdivl
pop
mov
and
adc
stos
loop
daa
push
idivl
inc
in
dec
pop
stc
std
adc
cli
cs
jl
rcl
xchg
push
jmp
sti
inc
sub
cmp
inc
cmp
xchg
cmp
shr
or
cmc
xchg
and
mov
lea
push
enter
fwait
sub
cmp
and
mov
add
xor
aad
xchg
daa
rcll
sahf
cld
dec
fsubr
sub
dec
mov
mov
jae
mov
dec
push
push
inc
cmp
jb
popa
testb
adc
jge
daa
xchg
mov
and
movsb
orb
test
jge
das
or
inc
rcrb
xor
das
inc
fsts
pop
push
enter
test
lret
dec
inc
aaa
cs
mov
xor
ret
stc
test
std
imul
popa
and
push
mov
cmp
arpl
arpl
scas
pop
jns
les
xchg
cmp
sar
add
test
mov
loopne
pop
ret
and
sbb
xor
push
nop
xchg
xchg
addr16
aam
sub
mov
xchg
or
test
mov
sbb
jnp
sahf
jne
push
out
push
mov
cmp
push
mov
fadds
xor
xchg
pop
jno
popa
xchg
push
inc
outsb
push
cwtl
sub
ficoms
and
mov
jle
push
cmp
mov
and
je
cltd
xlat
adc
nop
or
dec
sub
cmp
stos
imul
sbb
lods
add
pop
ret
or
lret
cmp
inc
scas
fisttpll
fisubs
je
gs
ss
or
out
push
or
adc
clc
inc
xor
pop
jmp
push
fsts
jle
imul
sbb
mov
lds
jmp
scas
xor
sub
ljmp
inc
in
call
test
outsb
test
jae
adc
fsubs
mov
pop
cltd
and
adcb
cmp
mov
test
and
hlt
dec
out
out
out
adc
mov
in
mov
mov
pushf
or
push
es
cli
or
and
dec
movsl
push
mov
lea
ljmp
data16
in
std
lods
mov
sub
add
inc
inc
xor
mov
mov
and
shll
or
mov
and
dec
inc
mov
lock
cs
les
sti
lret
mov
and
out
inc
dec
xchg
in
sar
adc
inc
dec
insb
scas
adc
adc
push
mov
in
outsl
mov
fs
std
and
mov
xor
mov
xchg
icebp
pop
push
and
out
inc
or
mov
sub
and
xchg
pop
out
enter
test
xchg
and
test
xlat
sub
mov
lock
jno
nop
add
in
arpl
in
and
xor
or
inc
pushf
adc
cmp
xchg
fimull
nop
jmp
pop
pop
unpcklps
jns,pt
fistl
fs
sub
pop
addr16
mov
push
cwtl
fimull
mov
hlt
inc
pop
icebp
lea
ret
mov
pop
jno
cmpsb
les
daa
clc
jne
lock
sbb
das
sarl
or
adc
mov
mov
jg
adc
or
imul
bound
push
pop
incb
int3
pop
add
enter
outsl
mov
sub
daa
fmuls
push
pop
pop
repz
jle
push
sarb
cli
add
leave
adc
int
inc
fdivrp
cmp
aam
or
int3
cmp
jg
mov
imul
adc
imul
sub
cmpb
pop
mov
lock
in
mov
fists
xor
adc
gs
jnp
mov
mov
mov
sub
push
nop
in
adc
out
ja
ss
mov
aas
insl
sub
mov
popf
filds
lret
aad
cmp
xchg
adc
cld
call
fnstcw
or
movsl
mov
mov
dec
adc
jmp
inc
jecxz
pop
shrb
push
mov
dec
fidivrl
mov
imul
cld
inc
pusha
cs
mov
jno
mov
sbb
pop
cmp
jge
rorb
push
mov
pop
xchg
bound
and
cmp
add
adc
shlb
xor
sub
orl
adc
shlb
push
orb
push
inc
push
and
fs
cmp
mov
adc
insb
and
lods
lret
cmp
inc
shl
adc
mov
add
push
adc
jg
in
addb
mov
push
dec
jmp
cmp
cmp
lahf
pushf
jge
xlat
xchg
and
daa
adc
push
xor
add
xor
mov
call
cmp
sub
jae
add
jmp
push
mov
fildll
cld
das
cmpsw
daa
lea
movsb
insb
inc
and
enter
lods
cmpsb
ret
adc
push
inc
mov
subb
sub
stos
push
jne
popf
call
xchg
insb
add
idivb
push
lcall
and
inc
push
adc
repz
mov
cmp
sbb
sub
xor
insl
mov
sub
sub
and
and
aaa
sbb
decb
pop
mov
mov
xor
and
cmp
jle
jns
hlt
inc
mov
push
ljmp
jne
int
cmp
je
sbb
sub
dec
push
mov
xlat
xchg
ret
fcoms
and
push
enter
xor
lea
frstor
push
adc
vpsubusb
lahf
inc
out
sarl
cmpsl
and
add
mov
shrb
xchg
push
mov
cmp
jle
cmp
je,pt
mov
call
add
cld
dec
adc
inc
fcompl
iret
mov
dec
add
into
lock
push
and
add
add
rorl
ss
and
xor
icebp
dec
adc
inc
lods
and
pop
ret
mov
xchg
mov
cmp
je
roll
test
dec
fdivrp
loope
jle
stc
adc
popa
sbb
sbb
and
adc
sbb
sbb
ret
arpl
pop
std
scas
repz
notl
adc
xor
mov
mov
or
fnstenv
or
xchg
out
in
mov
adc
lret
pop
push
xchg
adc
inc
adc
std
mov
nop
jl
mov
mulb
out
mov
mov
clc
and
nop
cmp
xchg
pop
push
fbld
stc
and
into
adc
movsb
test
cmp
cmp
fldcw
shlb
cmpxchg
adc
hlt
lret
push
call
pop
xor
mov
imul
enter
jbe
ret
cwtl
xor
enter
ds
cmp
rolb
lcall
ljmp
cmpsl
cltd
adc
nop
xor
cmpsl
test
cmc
scas
lcall
cmp
cs
clc
test
ja
jbe
fstl
jo
pop
scas
push
cltd
test
movsl
and
call
ljmp
jmp
xchg
in
out
sub
add
punpckhwd
cmc
xchg
arpl
mulb
andl
rclb
ffree
mov
bound
cmp
popf
sub
fmul
movsb
inc
cli
sub
cmpsl
push
test
mov
movsb
cld
pop
push
sbb
rcl
inc
push
push
pop
xchg
or
pop
outsl
mov
and
pop
mov
or
mov
daa
or
adc
shl
dec
cmp
ljmp
adc
sbb
cmp
lods
in
test
or
lea
inc
inc
push
or
or
leave
adc
xor
inc
lds
mov
or
lock
adc
sbb
std
or
dec
pop
decl
xchg
inc
add
or
jge
clc
pop
cmpb
hlt
or
outsl
inc
or
push
or
jae
mov
sbb
xchg
sub
cmp
mov
add
cmp
jge
cmp
pop
je
stc
cmp
push
arpl
cmpsl
mov
cmp
jl
call
test
xor
jmp
sti
ds
push
incl
push
lret
xor
dec
rol
lock
push
decl
popa
inc
leave
ja
inc
bound
aas
push
push
sub
dec
add
sbb
or
jmp
fcoms
pop
and
ljmp
add
sbb
push
adc
sbb
push
repnz
pusha
hlt
ja
pop
jno
jne
pop
cmp
je
inc
mov
adc
sub
mov
icebp
adc
jb
add
sbb
clc
or
stc
sbb
jb
int3
xchg
add
mov
mov
data16
adc
dec
add
lea
jmp
das
and
incb
lods
and
sub
imul
jae
dec
in
sub
add
jp
dec
insl
cmpl
mov
dec
push
or
pop
adc
pop
jecxz
adc
mov
cmp
push
xlat
or
or
or
xchg
pop
inc
adc
arpl
adc
enter
sub
je
xor
mov
or
sub
adc
mov
push
stos
roll
fstps
mov
daa
jmp
pop
add
loopne
push
je
call
mov
inc
ja
pop
inc
in
insb
mov
shll
cmpsb
pop
dec
inc
int3
xor
test
mov
test
push
clc
jmp
sbb
push
iret
sub
fildl
stc
dec
nop
das
or
xor
je
inc
pop
or
outsl
mov
imul
adc
es
or
mov
sbb
xor
mov
iret
addr16
stc
loop
adc
cmpsb
jecxz
loop
daa
xchg
pop
push
mov
loopne
or
dec
push
aaa
and
mov
sub
push
adc
iret
add
fcmovne
mov
and
and
inc
xchg
popf
add
sub
push
mov
cmc
push
fs
sub
fiaddl
in
adc
xchg
call
xor
in
adc
pop
test
dec
jge
adc
or
adc
dec
in
jns
inc
add
inc
push
inc
inc
or
inc
or
mov
imul
xor
or
mov
adc
add
mov
xchg
mov
xchg
cmp
jbe
push
orl
dec
push
xorl
mov
je
adc
les
inc
js
std
or
mov
push
std
xchg
inc
or
sahf
stos
inc
and
adc
clc
and
call
push
loope
mov
adc
rcl
cld
je
sbb
or
lea
dec
adc
or
push
dec
daa
push
nop
inc
xor
fwait
add
je
dec
out
test
lods
in
xlat
repnz
jbe
rcrl
push
adc
adc
sti
jmp
jmp
int
hlt
jae
imul
sbb
jae
js
cmp
add
mov
jl
sub
out
test
pop
xchg
dec
jns
or
pop
xchg
inc
test
pop
clc
sar
inc
das
lret
or
or
sbb
add
add
and
enter
pop
sub
aam
dec
sub
add
mov
add
icebp
imul
lea
enter
aam
mov
adc
pop
xchg
adc
sbb
and
and
dec
xchg
test
shlb
or
pop
shrb
xchg
sbb
add
and
push
enter
mov
xor
test
inc
sbb
xor
push
in
inc
push
cli
add
push
lret
stc
fisubl
adc
dec
jl
or
xchg
dec
inc
leave
adc
and
clc
out
jns
in
popa
lock
xorl
adc
inc
ss
sub
loop
pop
inc
cmpsb
dec
cmpsb
jmp
jge
inc
pop
adc
ret
adc
imul
and
cmp
int
clc
jne
jb
xorl
imul
stos
orb
add
push
cld
cmp
inc
mov
dec
and
fs
repnz
sub
adcl
jne
add
mov
inc
adc
dec
add
inc
rcrb
push
pop
mov
adc
mov
jbe
or
mov
leave
pusha
mov
dec
in
sbb
jl
and
sub
xchg
and
adc
xchg
ret
dec
cld
int
icebp
sti
push
test
dec
lods
sbb
push
cmp
rcll
jp
adc
jl
movsb
imul
das
push
push
or
pop
dec
clc
outsl
and
adc
lds
push
pop
imul
int3
cmp
push
adc
mov
mov
jmp
mov
mov
les
iret
inc
add
mov
jns
stos
unpcklps
add
mov
jmp
mov
mov
ret
pop
lar
push
fwait
push
cmpsb
pop
sub
lods
inc
int3
mov
daa
cld
inc
inc
fstpt
cs
jmp
loop
pop
push
sub
cmp
inc
les
jge
pushf
mov
outsl
xor
adcb
test
icebp
shlb
push
sub
xor
cmp
mov
loope
add
and
jne
aam
and
xor
sub
js
pop
mov
xchg
mov
sub
sub
mov
pusha
insl
je
leave
mov
jmp
mov
loope
repnz
mov
sbb
add
add
push
stc
vorps
sub
dec
lds
dec
xchg
ret
mov
pop
add
arpl
inc
out
cltd
mov
xlat
popf
mov
stc
loopne
dec
shrl
call
dec
outsl
and
jns
dec
pop
inc
mov
push
add
nop
int3
xchg
sti
and
jns
insb
int
add
inc
adc
push
add
in
push
mov
mov
dec
mov
stos
jmp
mov
jmp
jne
das
jne
or
and
sbb
mov
mov
icebp
pop
xor
emms
test
jns
dec
mov
mov
xchg
cmp
pop
and
pusha
add
inc
or
inc
xchg
jns
sbb
mov
test
jp
add
out
mov
add
pop
cmp
sub
xor
stos
push
push
lret
or
add
xchg
jmp
adc
adc
xor
orb
lret
lods
inc
jno
sbb
adc
mov
icebp
jl
rcll
ficoml
adc
adc
push
shll
fadds
or
sub
cltd
insl
ss
iret
clc
cs
jno
push
cmp
mov
aaa
fisubl
pushf
loopne
pop
jge
inc
lcall
cmp
inc
push
mulb
mov
ja
xchg
shr
inc
inc
dec
movsl
jo
mov
insb
in
xchg
testb
push
mov
xchg
inc
dec
push
lods
xchg
dec
add
lret
shll
jne
imulb
test
rorb
je
xchg
in
mov
nop
iret
jl
mov
pusha
stos
psraw
mov
jno
movsb
mov
imul
inc
cs
xchg
mov
xchg
push
lds
mov
add
pop
js
add
jbe
xchg
jl
ffree
and
nop
inc
jb
hlt
fs
cmp
jne
mov
xchg
mov
dec
mov
inc
sub
inc
adc
negb
jae
call
sbb
xchg
and
outsl
mov
dec
jns
loop
inc
push
jecxz
adc
repnz
ss
adc
jmp
sub
sub
insl
js
sub
sub
aas
jnp
lock
adc
lret
push
test
mov
xchg
shr
xchg
sbb
mov
mov
adc
sbb
inc
add
out
data16
cmp
jnp
push
fildl
xchg
dec
jp
xchg
sbb
rolb
or
add
jne
dec
dec
scas
lds
or
test
add
in
pusha
rorl
mov
sub
inc
mov
mov
loopne
in
imul
out
int
jo
mov
clc
cmp
adc
pop
mov
or
sbb
popf
loop
sbb
es
test
mov
loopne
inc
push
add
push
mov
push
test
fdivr
bound
aam
push
es
dec
xchg
mov
dec
pop
sub
mov
xor
or
pushf
dec
testb
push
fcompl
xchg
clc
xchg
mov
jl
addr16
adc
or
pop
dec
adc
sahf
dec
jl
cli
dec
popf
hlt
xor
or
and
or
push
out
ja
xchg
cmp
xchg
dec
xor
and
int
cmp
divl
jmp
adc
mov
jb
jmp
into
enter
in
loopne
push
push
mov
gs
sub
and
jbe
adc
dec
xor
or
cmp
leave
and
in
pop
je
inc
and
xchg
call
sbb
mov
pop
clc
ret
icebp
je
sub
sbb
and
pop
ficoml
sbb
mov
dec
push
jo
andb
je
pop
stos
lret
lret
mov
mov
rorb
mov
out
int3
in
inc
dec
dec
aas
inc
and
inc
sbb
sub
loop
and
adc
pop
mov
jne
cmpb
out
push
and
in
dec
pop
mov
test
or
or
cmpsl
inc
aaa
inc
divb
or
xor
leave
fsts
and
sub
jmp
pop
sub
sub
adc
dec
mov
jmp
cmovs
push
or
lcall
cwtl
test
inc
daa
mov
in
xor
rcrl
and
jmp
ss
clc
jl
xchg
movsl
fsubl
cmpsb
and
cmc
push
daa
inc
clc
or
rcrl
push
dec
addl
sub
sbb
pusha
xor
inc
jns
adc
mov
imul
inc
std
and
sqrtps
inc
xchg
mov
xor
mov
jo
xbegin
or
test
or
sbb
mov
inc
mov
jno
dec
or
cmp
jge
popa
mov
jne
inc
out
nop
sbb
call
in
push
fs
and
rorl
xchg
or
mov
iret
and
or
pop
adc
and
insl
inc
sbb
mov
sub
inc
call
jmp
sub
and
lods
xchg
lods
xor
adc
jnp
sub
outsl
dec
lods
dec
pusha
iret
dec
std
and
mov
and
cmp
pop
rolb
sbb
int
das
sbb
or
jbe
addb
sub
jno
ja
xchg
or
push
adc
pop
jmp
les
pop
ss
stc
dec
jo
or
sahf
cli
mov
inc
lods
je
adc
shl
inc
cmp
das
cmpsb
sub
movsl
jp
and
push
shrl
popa
call
adc
sub
and
jno
adc
sar
fisubrs
aaa
sub
dec
les
xor
or
ret
in
dec
add
cmp
call
xor
mov
xchg
imul
iret
lret
xchg
mov
enter
mov
ds
or
pop
and
jmp
adc
inc
lds
mov
inc
movsb
sahf
dec
ror
fs
sbb
ljmp
dec
jge
cmp
mov
lods
pushf
inc
mov
mov
fadd
and
rorb
nop
gs
ljmp
not
inc
dec
mov
daa
movsb
pop
or
push
ret
jmp
pushf
loop,pn
das
mov
or
lea
push
test
jae
repz
mov
add
dec
add
inc
adc
jnp
xor
add
insb
popa
add
and
mov
inc
das
adc
push
js
nop
pop
and
jnp
loop
decb
jne
jne
inc
add
outsb
stc
loop
inc
movsl
loopne
jbe
sbb
or
push
pop
xor
fadds
cli
mov
inc
loop
mov
pop
mov
xchg
mov
push
pop
cmpsb
mov
ret
jl
inc
dec
cltd
xor
jle
adc
lcall
xchg
fbld
mov
push
sub
js
adc
push
xor
pop
inc
xchg
cs
shl
mov
les
ret
test
pop
dec
mov
or
jb
neg
test
lret
rorl
jne
mov
ja
jns
movups
or
add
rep
ja
dec
dec
mov
jg
ret
or
push
dec
push
push
xor
xor
shlb
cmp
jp
call
js
push
and
cltd
fsubl
sub
les
mov
sub
mov
or
test
cwtl
cltd
aas
nop
adc
mov
sub
or
or
and
mov
pop
inc
repz
insb
scas
adc
int3
push
sub
mov
mov
inc
lret
sbb
inc
jecxz
xor
insb
or
dec
push
xchg
dec
and
inc
or
jmp
mov
pop
dec
xchg
lock
hlt
pop
dec
xchg
clc
je
cld
pop
inc
lea
enter
lock
clc
or
or
adc
sub
pop
cs
xchg
sahf
sbb
mov
xchg
mov
sub
je
xor
jl
movsb
pushf
andb
or
icebp
and
data16
adc
mov
inc
sub
cmp
push
fmull
cmp
lods
dec
mov
mov
cwtl
and
movsb
jno
xchg
push
out
xor
xchg
sub
sub
dec
pushf
lods
push
out
lods
out
movsb
scas
nop
inc
pop
pop
pop
inc
pop
mov
sbbb
and
dec
cld
cltd
add
pop
rolb
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
sarb
and
or
pop
mov
mov
jp
adc
cmpsb
mov
fidivs
mov
sub
sub
in
test
loope
add
sub
enter
call
lods
pushl
aam
ret
fsubr
push
jns
push
int3
or
adc
jo
mov
leave
push
jbe
push
mov
inc
fcmovb
dec
pop
roll
fadd
inc
or
pop
jno
push
mov
xor
test
push
fs
aam
fs
jmp
mov
xchg
fsubrs
sqrtps
ljmp
mov
orl
adc
int
add
mov
adc
push
mov
mov
jae
mov
test
adc
add
lock
movsb
movhps
add
mov
add
xor
xor
ljmp
xchg
xorl
xor
outsb
and
sbb
fistl
imul
int
inc
cli
push
push
sub
ret
adc
dec
std
pop
cld
sbb
adcb
adc
movb
ds
xchg
dec
sub
xchg
dec
push
inc
add
call
dec
call
jp
jg
and
movsl
mov
loope
mov
pop
dec
lods
dec
adc
gs
push
add
call
mov
fdivr
arpl
xchg
dec
and
sbb
adc
inc
or
es
and
dec
inc
mov
jg
loop
mov
adc
and
call
hlt
xchg
enter
mov
jg
stc
test
test
mov
dec
push
xchg
daa
lock
lock
into
or
add
xor
pop
mov
inc
mov
outsl
aam
dec
inc
hlt
stc
pop
inc
push
inc
cmpb
sub
lahf
sbb
xchg
pushf
mov
and
cmpsl
das
out
call
sub
jbe
bound
sbb
pop
outsb
clc
jo
inc
fnstsw
mul
inc
je
dec
jge
cmpsl
xchg
clc
jmp
jnp
es
or
and
out
addb
push
aaa
std
lock
or
call
loopne
inc
xchg
lea
call
test
mov
mov
mov
jg
nop
inc
inc
add
jns
jno
loope
adc
adc
mov
mov
inc
aam
mov
xor
fdivl
push
mov
outsl
lahf
and
add
hlt
fstcw
jge
aaa
es
or
fistpll
jae
sbb
jge
or
sub
xchg
pop
lock
in
xor
bt
das
test
outsb
pop
in
cli
es
pop
cmp
dec
inc
ja
dec
fdivrl
xchg
fucom
and
jbe
rcl
xchg
inc
add
sbb
sub
dec
leave
arpl
mov
xor
ret
or
pop
pop
xchg
inc
xor
std
sub
mov
mov
clc
ljmp
int3
jne
mov
call
das
rorb
loope
std
sub
jns
xor
popf
hlt
cmpsb
rclb
shlb
push
adc
fistps
shl
dec
hlt
inc
dec
sbb
xchg
inc
sub
adc
xor
or
adc
push
push
adc
nop
mov
pop
or
sbbl
adc
icebp
nop
int
add
xchg
test
and
sub
sbb
mov
cs
subl
loop
sbb
call
call
test
mov
push
in
sbb
stos
test
xchg
jmp
pop
repnz
ja
gs
int3
insl
clc
movsl
fcoml
fdivs
mov
int3
add
pop
or
cmpsb
lret
push
aam
inc
imul
and
xchg
mov
adc
pop
xor
imul
hlt
mov
adc
imul
add
inc
jp
lret
push
push
fs
push
inc
adc
shrb
or
mov
and
daa
mov
fcmove
mov
mov
pusha
inc
imul
fstps
push
pop
iret
inc
mov
cmpsl
insb
loopne
clc
jo
or
adc
sarb
xor
xchg
fnstcw
sbb
adc
add
cmp
add
lods
or
or
mov
adc
test
sub
fbld
daa
loopne
inc
mov
add
cmp
ja
test
mov
mov
or
add
jbe
or
push
hlt
sub
movsb
mov
enter
push
xchg
sub
jl
push
or
mov
lret
test
sub
subl
mov
mov
jmp
fisttps
nop
cmp
rcr
mov
shll
mov
push
jne
push
int3
cld
inc
outsl
jmp
adc
ret
fs
lds
push
pop
mov
inc
cli
or
add
jne
adc
cmp
pop
mov
js
xor
mov
movl
or
pop
mov
cmpsl
test
mov
cmc
fwait
sub
mov
adc
push
ret
mov
test
inc
mov
sub
aas
lods
les
or
lret
loope
mov
sbb
cld
int3
jmp
in
fsubl
dec
int3
movsl
inc
nop
jbe
sbb
or
push
sub
push
mov
xor
mov
es
or
fstps
jo
mov
lea
pop
fs
or
and
dec
mov
adc
rcrb
in
sub
jg
insl
add
aaa
cs
mov
pop
sub
je
das
or
or
sahf
jge
je
sbb
dec
into
dec
das
sub
out
and
in
test
ror
shll
daa
pop
orl
jne
loopne
ror
lcall
jbe
cwtl
lods
es
pop
sbb
add
sub
mov
pop
jbe
mov
cmp
jae
push
mov
fwait
pushf
adc
mov
sbb
adc
aas
lret
roll
lahf
sbb
mov
loopne
stc
add
mov
dec
pop
xor
push
cmpleps
xchg
jnp,pn
test
call
pop
xor
xor
and
pop
in
dec
fidivl
sbb
mov
add
mov
sub
mov
inc
test
call
or
xor
test
cmc
cmp
mov
sub
gs
scas
sbb
pop
add
add
cli
cltd
fildl
lock
shlb
sub
and
sub
adc
adc
jne
nop
xor
ljmp
call
adc
xchg
push
xor
mov
push
out
adc
push
jns
je
or
add
rolb
or
adc
push
or
lret
jmp
or
and
add
jo
mov
adc
clc
mov
hlt
or
call
mov
xchg
jge
cmp
cmp
nop
jg
fcoml
inc
in
mov
dec
pop
cld
aas
out
adc
push
push
imul
pop
lea
js
fwait
cmp
shlb
push
inc
popa
daa
inc
cmp
call
cmp
inc
leave
and
loope
add
xchg
cmpsl
setg
iret
je
rol
decl
mov
lock
outsb
in
or
jne
jmp
sub
dec
inc
sub
pop
add
pop
jmp
xor
nop
nop
shll
mov
adc
adc
or
scas
cmp
cmp
cmp
je
xor
sub
or
xchg
mov
ret
pop
mov
push
cmp
adc
ret
cmp
add
xor
lds
ret
popa
cmp
and
jecxz
loop
inc
into
sbb
mov
out
out
ss
hlt
nop
cmp
loopne
jl
leave
mov
mov
inc
mov
inc
arpl
sub
or
add
lret
rcll
pusha
adc
test
push
sub
rclb
mov
dec
inc
ret
pop
mov
icebp
mov
mov
mov
pop
inc
or
mov
sbb
xchg
mov
aad
sahf
or
mov
and
and
lahf
or
fld
pop
jo
jmp
mov
push
inc
sarb
inc
dec
and
push
jmp
xor
lret
outsb
dec
mov
dec
add
dec
cmova
xchg
push
rorl
rorb
push
push
mov
movsb
xor
jnp
mov
push
sbb
mov
mov
push
cwtl
addb
adc
dec
nop
lods
and
leave
incl
repnz
inc
neg
dec
mov
or
adc
sbb
std
adc
fld
cld
xchg
out
pusha
inc
je
imul
push
adc
out
outsl
jmp
xor
je
xchg
dec
sub
add
and
add
and
and
and
popf
ja
daa
mov
insb
fnstenv
pop
cli
and
xchg
and
sub
mov
test
sbb
out
push
push
inc
cmc
fwait
lods
or
loop
andb
scas
mov
test
mov
mov
inc
repz
jl
rolb
pop
sub
xchg
insl
cmp
dec
xchg
inc
inc
ret
ljmp
addr16
or
xchg
stc
cmp
mov
movsb
jge
push
mov
adc
mov
int3
jl,pt
pop
lods
sub
fsubrl
in
aam
dec
icebp
ljmp
loop
adc
lret
nop
or
add
loopne
inc
imul
jbe
rcrb
dec
push
scas
lods
mov
fistpl
jmp
hlt
test
or
add
and
ss
fnstenv
je
sbb
loope
fsubr
mov
inc
lods
xchg
lret
adc
fstl
je
or
dec
shll
jbe
outsb
pop
mov
cld
call
in
das
out
pop
popl
imul
rorl
lea
mulb
lds
push
xor
movsb
push
hlt
sub
neg
stos
add
aas
leave
lds
inc
mov
push
and
rcll
aad
lods
sbb
adc
sub
dec
mov
sarb
stos
dec
or
dec
cmp
add
pop
enter
xor
cltd
jnp
jnp
xchg
test
fdivs
jle
jmp
dec
ljmp
jb
jo
lock
jmp
out
ja
pop
in
inc
shl
arpl
jl
dec
les
xor
lret
mov
mov
jp
movsl
adc
lods
daa
inc
mov
repnz
and
jmp
icebp
sub
ds
sub
ja
xor
dec
pop
dec
jbe
repnz
jb
cmp
ja
and
imul
jmp
or
fs
dec
lods
xchg
adc
xchg
adc
mov
xchg
cwtl
pop
jge
cmpsb
je
jmp
push
cmpl
stos
sbb
daa
out
add
icebp
cmpsl
mov
movl
cmc
imul
popl
aas
bound
jne
add
aaa
clc
cmp
and
inc
adc
pusha
shlb
movsb
jo
sar
cmpsb
or
and
ss
shl
mov
fs
in
and
outsl
aam
shll
xchg
pop
xchg
xchg
mov
stc
dec
dec
fidivs
or
or
push
into
cwtl
fistl
push
in
lret
xchg
loop
ret
push
mov
js
idivl
xor
shll
int
or
mov
mov
push
iret
push
mov
imul
es
add
inc
lcall
push
movsb
and
fwait
clc
rorb
mov
fcoms
push
stos
push
dec
mov
or
roll
sub
fcoms
push
ret
shl
push
adc
or
and
add
divl
lret
push
rolb
xor
jb
jle
pop
movb
loope
jno
daa
sbb
adc
inc
pop
dec
or
xor
mov
ja
ljmp
ss
hlt
push
out
push
fcoml
daa
sbbb
sbb
daa
adc
sbb
jmp
pop
xor
pop
std
mov
dec
popa
orb
xor
inc
and
cmp
and
mov
adc
cmp
inc
or
cmc
pop
sub
adcl
cmp
add
sub
loopne
mov
gs
data16
shll
fucomip
mov
pusha
imul
lea
sbb
mov
dec
pop
xchg
xor
lock
cmp
shlb
aas
xor
fucomp
sub
xchg
mov
and
sub
jg
mov
adc
jle
movsl
sbb
in
icebp
add
adc
or
test
cmp
and
add
mov
in
and
adc
mov
in
cmp
xlat
xor
loop
incl
or
or
push
jmp
leave
and
mov
mov
out
or
dec
or
mov
jb
rep
ret
xchg
lods
pop
lock
cli
sub
xor
dec
and
sub
pop
mov
pop
je
inc
mov
pop
shlb
fs
sub
or
xor
cmp
or
mov
mov
push
xor
or
push
jecxz,pn
call
popf
xor
mov
sub
and
and
sub
stc
and
push
out
aas
int
aas
fisubs
and
pushf
sbb
movsb
seto
int3
mov
pusha
and
popf
and
dec
scas
cmp
jg
std
adc
js
adc
lods
sbb
in
imul
scas
push
lods
das
dec
pop
adc
mov
pop
loop
arpl
daa
cmpl
push
imul
mov
add
jae
stos
in
loopne
call
mul
fisubl
call
pop
add
scas
adc
fcomi
fldcw
iret
in
push
xchg
xchg
add
dec
pop
dec
test
add
push
mov
out
inc
or
pop
ljmp
jb
pusha
imul
jne
adc
sub
dec
fsubr
push
fimuls
scas
jae
mov
sbb
movsl
movsl
xchg
scas
mov
dec
and
lock
jmp
lock
in
jmp
pusha
add
and
popa
mov
cltd
push
pushf
add
jmp
inc
mov
cmp
xchg
mov
aas
and
adc
test
sbb
and
sub
mov
push
shll
push
ret
mov
xor
punpckldq
adc
out
sub
and
les
cmp
aad
sahf
or
nop
or
std
mov
or
pusha
sbb
lods
scas
inc
arpl
in
xchg
and
push
adc
popa
dec
xor
nop
daa
pop
lcall
mov
movb
or
or
adc
sub
enter
mov
clc
push
data16
xor
add
or
imul
out
mov
mov
fcmove
cmp
fldcw
mov
lcall
and
mov
outsl
inc
in
cmp
push
movsbl
sbb
or
inc
inc
or
cmp
cmp
daa
jns
add
mov
ret
repnz
shr
and
enter
or
and
loope
and
push
fisttps
fcomps
jle
sub
or
loope
rcrl
jle
xor
xor
lret
mov
mov
xchg
enter
xor
add
pop
and
adc
call
pop
in
in
mov
das
push
add
ffree
push
push
cmc
dec
sbb
sub
adc
push
icebp
lcall
mov
push
add
adc
jmp
pusha
fmuls
leave
jne
hlt
div
mov
pop
mov
adc
out
shll
cmp
push
ja
xchg
mov
xor
test
aam
mov
push
outsl
mov
adc
and
inc
or
xchg
enter
or
dec
insb
or
les
jbe
sub
adc
fadds
lahf
orb
roll
mov
push
andl
in
lods
sbb
sbb
adc
adc
adc
sbb
jmp
mov
and
and
sbb
dec
mov
pop
pop
mov
movl
fbstp
pop
inc
jo
lock
lods
loope
data16
and
movsb
daa
loop
cmp
jl
in
inc
movsb
pop
fiaddl
stc
jp
or
inc
mov
add
cmp
add
leave
jg
dec
pop
mov
push
fs
jle
ret
cltd
adc
adc
jge
jge
xlat
lds
mov
shll
mov
je
push
mov
inc
dec
xlat
mov
mov
jl
mov
pop
push
imul
addb
adc
mov
jmp
xchg
cmpsl
mov
fnstsw
or
dec
xchg
jne
xchg
repnz
call
jmp
mov
push
push
adc
int
pop
mov
cmp
dec
je
arpl
push
dec
mov
or
push
xchg
lods
sbb
inc
call
mov
imul
test
popf
sbb
jecxz
xchg
fcmovbe
mov
hlt
inc
or
sarb
jle
mov
cmp
pcmpeqw
inc
dec
fistpl
cmp
pop
inc
cmovle
outsb
push
jns
cmp
xchg
loope
cmp
call
pop
ret
popl
loopne
push
inc
sub
cmpsl
jle
sbb
push
cmp
adc
cmc
mov
mov
or
rcrb
push
push
std
les
lret
out
sbb
push
adc
loop
push
cmp
int
mov
mov
dec
or
mov
mov
cld
jne
push
dec
mov
mov
sub
cmp
inc
adc
sbb
pop
xlat
adc
cmp
dec
imul
inc
or
inc
stos
and
nop
adc
or
cmp
mov
dec
add
sub
adc
rorl
jl
mov
or
adc
pop
in
jle
dec
mov
dec
lcall
inc
das
xor
call
xchg
movsb
xchg
js
scas
cmpsl
pushaw
sub
pop
jecxz
push
jns
or
add
cmp
mov
mov
add
inc
push
pop
out
push
sub
mov
mov
mov
lods
xchg
lock
pop
push
iret
cld
cmpsb
ret
cmp
adc
jmp
sub
inc
rolb
cmp
jmp
jmp
mov
movsl
jl
fistl
push
or
jmp
push
push
add
loope
imul
je
dec
fiaddl
xchg
scas
sub
ficoms
in
xor
pop
mov
jae
xor
jb
push
pop
mov
shr
and
lock
sahf
inc
dec
add
cmp
dec
hlt
mov
mov
jnp
mov
daa
jmp
mov
mov
lods
mov
jmp
cmp
xor
push
mov
je
or
cmpl
enter
daa
jg
xorb
jns
stos
dec
sbb
sbb
push
cmp
inc
push
into
bound
dec
sub
sbb
jg
in
adc
movsl
sub
sub
sahf
lcall
pusha
lock
cld
jmp
pop
jge
adc
inc
or
inc
lods
adc
adc
lods
sub
sbb
xor
negb
xchg
out
jg
shrb
pop
lahf
mov
jnp
dec
cltd
adc
push
push
or
mov
lods
pusha
test
lcall
rclb
jl
test
es
scas
bound
jmp
pop
lcall
sub
imul
mov
push
test
push
xor
adc
inc
sbb
movl
std
xor
fistl
int
xchg
add
inc
mov
xor
xchg
mov
imul
cmp
mov
scas
stc
faddl
push
cli
add
dec
push
dec
es
test
jno
add
mov
and
test
add
pop
pop
sub
sub
push
or
fstps
jb
rol
or
xor
popf
repz
imul
fistpl
jmp
roll
lock
fistps
xchg
mov
jo
fwait
fwait
xchg
clc
sub
insl
std
push
mov
cld
xor
adc
test
inc
stos
inc
shll
adc
jl
push
sub
xor
ret
jp
test
std
mov
scas
or
pop
ret
loope
movzbw
adc
adc
fiaddl
in
inc
mov
inc
mov
ljmp
push
fmuls
mov
pop
adc
jo
push
mov
xlat
popa
lea
cmp
and
push
or
js
jmp
lock
cs
aaa
or
int
into
jl
aaa
cs
cmpsb
xor
mov
push
sub
mov
jl
mov
je
inc
cs
adc
hlt
aam
jmp
nop
add
lods
popf
and
dec
and
mov
adc
call
sub
pop
aaa
gs
push
bound
push
adc
cmp
dec
bound
jp
or
mov
inc
call
cli
adc
adc
stc
and
push
es
leave
and
ja
fidivrs
push
and
xor
lods
sbb
lret
push
adc
mov
or
push
movsl
pop
insb
hlt
ret
add
pusha
add
sbb
ret
dec
inc
out
adc
cmp
lea
add
lods
sub
or
hlt
scas
les
cmp
or
inc
adc
cmp
jle
mov
fists
jne
and
shll
loopne
xor
cmovb
xor
nop
or
adc
cmp
decl
dec
fstpl
push
or
test
inc
xchg
xchg
add
sub
cmp
adc
popf
add
jmp
and
insl
fisttpll
push
lret
mov
mov
or
cmp
xlat
pop
sbb
dec
lret
xchg
inc
mov
mov
fnstcw
add
in
mov
dec
in
adc
or
repnz
mov
add
xor
gs
mov
in
mov
jns
add
das
xchg
push
hlt
jmp
adc
or
jne
cmpsb
leave
inc
cwtl
repnz
and
fs
jmp
xchg
mov
and
shrl
fisubrl
lcall
stos
aam
dec
pop
repnz
fcmovb
push
xchg
cs
out
fs
fsts
adc
cld
adc
cmp
mov
fadd
adc
arpl
or
cmp
push
ljmp
call
push
dec
leave
sub
jge
addr16
movl
sbb
add
sub
cmp
std
je,pt
mov
in
xor
inc
mov
push
jmp
xchg
push
xchg
cld
cmpsl
fsubs
pop
iret
xchg
mov
add
mov
in
xor
sub
inc
mov
cmpb
mov
dec
sub
adc
mov
fs
and
mov
int
dec
jle
cmpsb
jecxz
dec
fsin
xchg
cwtl
testl
xor
add
cmpsb
mov
rcrl
aam
add
je
dec
or
rorl
ficoms
push
gs
rolb
jbe
insl
sbb
into
outsb
dec
cld
and
mov
cmp
inc
jo
and
xchg
shll
mov
push
imul
push
adc
dec
adc
adc
and
lahf
adc
sbb
mov
pop
out
mov
jns
jne,pn
xchg
jns
add
ret
add
mov
or
mov
push
jmp
cmp
sub
xorb
leave
hlt
aas
add
mov
lods
adc
sahf
and
and
add
jne
adc
inc
sbb
push
mov
lds
call
jo
adc
jp
jbe
pop
or
push
je
inc
test
cwtl
je
movsb
dec
jl
gs
jo
outsb
mov
mov
or
xchg
mov
cmpsl
mov
add
adc
or
mov
cli
cmp
push
sbb
pushf
int
lret
or
sbb
push
add
loope
jle
iret
dec
adc
outsb
cld
push
popf
mov
das
in
mov
lea
or
nop
loopne
mov
arpl
aas
push
mov
or
rolb
push
mov
iret
xchg
pushf
mov
cld
insl
sub
mov
ljmp
adc
in
dec
push
mov
fwait
dec
mov
outsb
mov
in
mov
sbbl
adc
and
xchg
gs
cwtl
add
lock
mov
push
lods
sbb
daa
cmp
call
or
cmc
les
es
xor
pop
sub
mov
lahf
shlb
pop
mov
mov
or
lret
mov
inc
and
pop
dec
leave
push
les
pop
imul
push
and
mov
inc
je
or
enter
enter
test
jns
sub
mov
das
loop
lea
daa
adc
cmp
or
sub
pushf
xchg
scas
sbb
xchg
cwtl
nop
pop
push
add
adc
mov
adc
jmp
sub
pop
cs
mov
sbb
jo
mov
pop
loope
mov
imul
cmc
cmp
rcll
and
add
call
adc
inc
adc
mov
xchg
mov
pop
aad
mov
mov
cmp
pop
mov
jae
and
mov
cmp
and
pop
lcall
js
jmp
scas
cmp
push
popf
fldenv
pop
dec
lock
jbe
inc
or
ja
nop
xchg
inc
clc
cmpsl
movsb
cmpsb
js
scas
sub
scas
cmp
mov
inc
cmp
ja
inc
mov
bound
adc
fcmove
shrl
mov
sub
out
std
xchg
add
cli
cmp
repz
out
and
dec
add
add
mov
mov
inc
jl
xchg
sti
js
jl
enter
add
mov
cmp
movsb
stos
push
test
mov
mov
mov
dec
stc
test
pusha
je
push
bnd
ljmp
add
mov
nop
insb
adc
inc
xchg
je
jle
sub
stos
inc
sbbb
daa
xor
push
mov
xchg
or
lods
xchg
loopne
or
bound
call
push
movb
mov
jge
dec
xor
fbld
add
cmp
inc
sbb
sbb
repz
adc
stos
enter
pop
scas
sub
ljmp
mov
push
les
push
and
push
and
xor
test
inc
imul
pop
daa
cmp
js
popa
lea
fbstp
sub
aam
adc
push
push
pusha
pop
cltd
cmc
lock
adc
mov
mov
push
jbe
xchg
add
mov
and
cmpb
arpl
loope
xor
add
jne
stos
inc
push
fsts
dec
jmp
dec
or
cmpsb
cmc
or
mov
call
inc
push
push
xor
dec
cmp
jne
push
data16
and
sbb
sub
push
test
xor
mov
adc
out
mov
inc
dec
push
add
cmpsl
shrl
ss
push
inc
dec
mov
push
push
pop
cmp
cmc
popa
dec
sub
pop
sarl
dec
xchg
sbb
leave
or
outsb
mov
jecxz
inc
inc
dec
xor
insb
sub
sub
push
sub
iret
pop
inc
call
sub
cmpsb
inc
jno
sub
mov
xor
push
dec
hlt
xorl
mov
push
and
sbb
push
iret
mov
mov
aam
daa
mov
jno
mov
adc
cmp
adc
or
pxor
jmp
jge
xor
mov
xchg
push
mov
or
and
add
repnz
mov
add
mov
in
mov
mov
lret
data16
adc
maskmovq
negl
or
inc
jbe
fs
and
jg
xchg
shlb
add
mov
roll
push
push
xchg
mov
out
sbb
xchg
xchg
inc
or
dec
mov
push
mov
push
inc
sub
jnp
pop
cmpsb
and
jo
int3
xor
aam
test
enter
push
js
pop
adc
xchg
pop
fbld
inc
inc
push
movsl
jp
inc
loopne
pop
mov
movsb
or
sbb
outsl
inc
fcoms
stc
or
or
inc
and
cmp
enter
dec
fbld
dec
inc
in
cltd
push
inc
push
int3
fwait
cmp
or
push
js
test
and
es
sub
and
adc
mov
shlb
xor
or
js
nop
ss
ret
adc
hlt
out
and
fmull
sbb
and
hlt
inc
out
jnp
ret
cld
nop
mov
adc
call
inc
outsl
fimuls
les
mov
loopne
dec
cmp
pop
leave
bound
idiv
sbb
ja
mov
loop
orb
jns
adc
scas
jne
mov
or
ds
inc
cmpsl
lahf
dec
jmp
pop
cwtl
mov
add
and
imul
in
cmp
cmpb
xor
imul
xchg
adc
ljmp
mov
mov
shl
add
aaa
in
cmc
data16
push
movsl
in
hlt
clc
mov
adc
cmp
push
push
in
sub
in
popa
clc
jmp
pop
cld
mov
or
mov
push
add
lret
bound
dec
jae
jg
int
jmp
push
mov
loop
mov
xor
sbb
dec
xchg
testb
adc
rorl
loope
xchg
loope
add
orb
add
pushf
leave
fisubl
data16
push
sbbl
clc
push
inc
orb
add
mov
sub
and
frstor
nop
les
cltd
sub
push
gs
and
push
cltd
mov
inc
cmp
pop
adc
cmp
shll
fnop
loopne
jmp
out
aam
ret
pop
mov
cltd
or
cmc
mov
push
sbb
jge
mov
inc
sbb
icebp
xchg
jge
in
inc
pop
pop
inc
imul
xchg
and
xchg
sbb
sbb
and
iret
js
sbb
std
mov
ljmp
idiv
inc
dec
ds
in
sub
aaa
cmpsl
add
sbb
in
nop
dec
mov
ficoml
nop
cmp
call
cmc
adc
xor
push
test
movsb
into
inc
sbb
mov
mov
out
xchg
and
adc
mov
stc
lods
test
and
inc
cmpsl
jle
push
and
ficomps
lret
fwait
push
sub
cwtl
or
inc
cmpsb
xchg
cmp
mov
jp
xchg
or
add
leave
mov
xchg
mov
inc
push
js
mov
test
mov
mov
mov
cld
pop
in
adc
push
pop
imul
mov
adc
or
enter
shll
and
and
sub
pop
cld
inc
mov
adc
jae
out
or
daa
shl
xor
jge
lock
cmp
dec
test
inc
out
and
setne
testb
lret
and
mov
test
xor
decb
or
scas
adc
adc
or
les
mov
inc
or
leave
add
jmp
adc
add
xor
adc
mov
ljmp
or
enter
add
sub
push
jo
mov
cld
into
fcmovnbe
sbb
fstpt
lock
mov
out
push
jbe
mov
dec
dec
push
sub
cmp
leave
push
rolb
fsubl
jae
in
out
jo
test
dec
mov
push
mov
nop
fwait
sub
add
inc
mov
subb
mov
and
add
adc
scas
push
ror
jmp
imul
or
mov
not
les
or
sub
jno
mov
mov
subps
add
jo
dec
mov
leave
jne
dec
cmc
inc
pop
add
lret
subb
mov
and
imul
adc
push
dec
adc
pop
adc
das
cltd
and
clc
add
xchg
mov
jg
lcall
dec
in
xor
sub
hlt
nop
pusha
int3
jbe
adc
jae
repz
cltd
adc
lea
push
cmp
jmp
sbb
pop
xchg
fwait
sbbb
aam
mov
inc
jb
xchg
sbb
adc
add
aam
sbb
or
push
sbb
in
jb
adc
or
adc
mov
xchg
jno
in
jmp
push
pop
cmpsl
call
xchg
sbb
add
in
subl
sbb
xchg
xchg
out
sub
mov
push
sbb
mov
dec
test
push
cmp
mull
mov
add
rorl
mov
jp
push
pop
sbb
mov
or
and
enter
pop
mov
xor
inc
shll
mov
enter
xor
or
or
mov
call
js
movsl
pop
push
sbb
inc
or
mov
rcrb
or
mov
pushw
dec
pop
or
add
xchg
dec
out
mov
cmc
jg
mov
and
mov
cmpsb
mov
fdivl
addb
cmp
add
test
sub
adc
and
add
cltd
add
inc
mov
cmp
test
pusha
adc
lods
nop
lcall
dec
out
mov
sub
nop
inc
rcrb
xor
rclb
dec
or
ret
inc
in
sub
push
dec
pop
ret
stos
dec
jne
sarb
cs
mov
push
sub
nop
mov
adc
xchg
movsb
jae
inc
xchg
insl
add
lods
aam
adc
popf
lret
loopne
and
cmp
mov
mov
add
adc
fimull
adc
and
xor
cmc
push
jg
xor
rcrb
jae
xchg
lods
mov
xor
or
xlat
mov
dec
or
inc
jno
jmp
xchg
sub
mov
fcmovnu
aam
sub
dec
fistl
pop
mov
sub
xchg
xchg
icebp
inc
push
xchg
ret
rclb
shrl
in
mov
adc
jo
loop
jne
insb
push
inc
push
aas
mov
sbb
fbld
adc
adc
lcall
outsl
pop
ret
testb
dec
mov
push
or
mov
xchg
and
mov
sub
pop
cmpl
clc
mov
xchg
enter
and
mov
loopne
xor
dec
cmp
xor
add
or
pop
ret
outsl
dec
pop
push
cs
jmp
inc
imul
lea
xchg
add
mov
loopne
dec
loop,pn
sbb
cmp
pcmpgtb
jl
fs
jle
mov
loope
out
fistps
rcl
add
pushf
or
sub
sar
add
add
stos
pop
andl
push
pushf
push
movsl
mov
xchg
js
jno
adc
decb
xchg
lahf
pusha
inc
loopne
and
or
nop
inc
frstor
ftst
loopne
xchg
xchg
fstps
jno
fldenv
pop
xchg
shr
jl
adcb
call
nop
lock
and
int
push
inc
lea
xchg
les
cmp
mov
or
ja
enter
push
or
xchg
inc
xor
add
dec
mov
dec
mov
ljmp
mov
dec
sbb
or
mov
adc
test
or
jmp
pop
cld
sbb
jg
sub
sub
sub
push
jbe
or
push
mov
aaa
ficoms
xor
adc
insl
sbb
and
fsubr
mov
adc
pop
es
dec
cld
ljmp
jno
mov
unpckhps
cmp
ret
xlat
imull
aad
or
adc
lock
pop
jge
inc
cs
jne
dec
lock
or
adc
jl
test
cmp
enter
mov
cmp
mov
xchg
pusha
cld
push
push
mov
add
aas
inc
adc
popf
mov
into
push
daa
enter
cmpsb
daa
inc
or
sbbl
cmp
mov
cmp
fisubrl
aad
and
les
movl
scas
xor
aam
je
cmc
jmp
das
dec
mov
shl
jl
push
stos
dec
push
pusha
pop
sub
aam
hlt
cmp
jp
ret
dec
dec
jle
imul
dec
or
lcall
jb
popa
shll
xchg
add
adc
inc
adc
cs
lds
fs
mov
sub
add
out
aad
push
sub
aaa
jae
test
ja
push
adc
dec
subb
add
mov
movl
adc
jmp
xchg
lods
inc
xor
inc
outsb
fmull
je
test
pop
aam
clc
dec
sti
in
cltd
outsb
xchg
or
sbb
sbb
jbe
movsl
in
ds
sub
push
ds
jbe
xchg
add
jp
pop
mov
inc
or
sar
imul
mov
mov
int3
sti
subl
push
imul
out
adc
xchg
adc
in
inc
out
and
shrb
xchg
sub
mov
pop
clc
jg
cmp
clc
adc
add
push
adc
in
ja
push
mov
icebp
jno
or
fadds
cmp
fsub
jle
dec
mov
lods
jmp
mov
push
out
mov
inc
loopne
loope
sarb
jmp
and
loop
mov
mov
frstor
addr16
leave
dec
push
rep
jns
or
adc
fsubs
lods
add
inc
add
in
sub
in
fs
push
mov
scas
nop
xlat
pop
or
dec
mov
imul
or
sahf
outsb
and
inc
pop
cmp
dec
push
sub
out
dec
int
aas
ret
mov
cmp
test
pop
repnz
xor
enter
xchg
shl
clc
pop
xchg
sub
enter
data16
mov
fs
in
jnp
testl
test
sbb
out
dec
subb
cld
xor
cld
inc
fmuls
shrl
movsl
iret
clc
and
pop
cmp
repz
stos
dec
repz
dec
pop
clc
and
mov
xchg
enter
and
ja
pop
stos
rcr
pop
dec
test
pop
pop
ret
add
pop
test
or
mov
decl
or
mov
jmp
pop
hlt
xchg
fldt
addr16
mov
adc
repnz
shll
je
dec
fcomp
test
negb
jmp
mov
sbb
mov
mov
pop
fs
testl
lret
sub
push
xor
in
push
and
call
mov
adc
cmp
in
mov
inc
pop
sub
pop
push
stos
jb
je
orb
add
xchg
scas
cld
fdivrs
dec
mov
or
incl
std
lea
cmp
add
xor
xchg
inc
mov
orb
data16
das
enter
or
aam
gs
test
movsb
mov
adc
add
sub
xor
inc
in
cmp
xchg
stc
or
adcb
mov
adc
and
cld
jne
bound
aad
sub
jl
sub
and
xchg
inc
rcrb
mov
lea
out
mov
inc
sarb
xchg
inc
or
lock
enter
sbb
push
lea
sub
mov
xchg
mov
lcall
push
ss
push
pop
adc
daa
or
jle
cwtl
cli
inc
icebp
add
aam
push
dec
or
daa
mov
push
and
dec
out
das
into
enter
pop
push
mov
stos
adc
imul
imul
or
jg
repnz
or
inc
shl
lcall
shr
and
or
nop
test
or
xor
xchg
sbb
fs
cmp
test
pop
add
jmp
pop
dec
aam
inc
notl
out
add
jo
xchg
arpl
fnstsw
repnz
subb
fsubrl
stos
je
lea
mov
andb
cmpsb
and
cmp
es
sub
and
sub
and
cmc
mov
add
call
testb
outsb
lock
inc
pushf
cmp
push
xor
cmp
dec
pop
inc
or
push
test
gs
mov
stc
loope
sub
arpl
insl
jmp
sub
cmc
and
add
push
and
mov
mov
inc
nop
hlt
mov
leave
in
shlb
pop
repz
dec
mov
add
jmp
jo
je
in
dec
xor
or
mov
sbb
cs
les
or
sbb
rolb
adc
stos
movsb
dec
repnz
lret
mov
pop
popf
push
ss
icebp
test
sbb
pop
cwtl
inc
sar
push
call
gs
pop
cmp
adc
mov
jbe
sbb
xchg
jmp
mov
pop
inc
mov
shrl
dec
xchg
mov
mov
or
mov
or
shlb
inc
out
inc
adc
or
sub
jns
lods
inc
adcb
push
sahf
mov
ret
sahf
mov
and
jmp
sar
cmpsb
xor
and
and
mov
hlt
mov
mov
imulb
lahf
pusha
clc
hlt
xor
lea
cmp
sbb
xor
pop
push
lods
jp
lahf
in
mov
adc
lods
push
pop
mov
fs
dec
xlat
jmp
imul
mov
mov
aaa
lret
pop
sub
je
push
lcall
push
push
es
jo
xchg
sub
pop
push
lcall
pop
adc
sbb
adc
and
pop
mov
push
jmp
pop
adc
lret
push
adc
add
aaa
adc
aad
shrb
dec
clc
test
loope
cs
in
xchg
or
or
cwtl
mov
xchg
mov
dec
wrmsr
jne
gs
call
sbb
pop
inc
lret
sbb
and
sub
andb
and
jne
dec
mov
not
and
lret
stc
sub
lea
mov
daa
xchg
cwtl
dec
sbb
dec
push
loop
pop
jle
and
lret
push
mov
dec
pop
sbb
jmp
inc
pusha
or
adc
pop
imul
decb
xchg
mov
jecxz
or
repnz
inc
movsbl
cwtl
fists
mov
in
jle
pusha
pop
movsl
js
jmp
mov
out
mov
rcll
adc
dec
and
pushf
push
dec
add
sbb
cmc
addr16
andl
pop
cltd
cmpb
and
cmpsb
mov
inc
rorb
mov
movsl
aam
jbe
dec
shlb
outsb
or
ss
sbb
cmp
jl
mov
jg
int3
adc
mov
js
xchg
jge
pop
daa
jo
push
call
jp
adc
or
xor
mov
hlt
insb
fiaddl
add
pop
ja
sub
test
mov
sti
imul
pop
lea
and
or
je
mov
out
sub
and
xor
mov
xchg
inc
in
ret
shll
mov
adc
inc
xchg
fimuls
test
jno
imul
and
fwait
or
add
or
jbe
xor
js
mov
and
adc
inc
lea
test
and
lret
jmp
jmp
push
mov
add
dec
xchg
adc
and
cmp
jmp
push
sub
xor
or
mov
stos
loop
push
cmpl
repnz
stos
les
xlat
ret
or
lea
sbb
scas
or
inc
aas
mov
into
daa
lea
cmpsb
addr16
int3
jbe
dec
or
out
jl
test
addb
sbb
and
dec
aas
ret
inc
push
cs
ja
jl
cmp
loope
int
adc
mov
mov
and
inc
dec
add
ds
adc
cmp
push
or
cmp
mov
mov
adc
and
and
shr
filds
test
in
push
sub
inc
movsb
or
push
xor
push
mov
testl
and
pushf
and
pop
push
push
jle
mov
adc
add
je
lea
inc
or
xor
cli
in
pop
in
and
fadds
fs
lods
mov
pop
mov
es
cmp
push
test
push
push
mov
cmp
or
add
movsb
xor
mov
data16
push
mov
add
or
popf
jge
and
pusha
cld
xchg
pushl
cwtl
mov
imul
adc
aas
orl
mov
in
movsl
pop
pop
int3
movsb
push
insb
xchg
lea
dec
ss
push
add
jge
nop
xor
and
dec
cmp
ds
pop
insb
cmp
les
sub
push
repz
sub
filds
mov
je
jnp
leave
bound
inc
cld
lcall
ror
test
mov
dec
dec
jno
cmp
in
add
pop
test
adc
and
inc
or
and
sub
adc
or
aam
push
mov
lds
and
clc
bound
insl
mov
xchg
jmp
and
sub
nop
and
loop
or
pusha
dec
and
inc
pop
adc
or
cmp
pop
int3
les
jmp
xchg
mov
aad
movsl
out
adc
lea
mov
or
push
pop
jmp
dec
adc
addr16
stos
mov
inc
mov
dec
shl
les
adc
pop
and
stos
mov
xchg
mov
lcall
movsl
ret
ljmp
jo
xchg
insb
sub
gs
jns
xchg
sub
mov
adc
sarb
int3
int3
mov
jmp
icebp
leave
inc
mov
or
cmovb
jbe
out
push
push
shlb
pop
or
in
jecxz
pop
repnz
sbb
xor
push
mov
rol
and
add
and
push
call
les
incl
mov
push
rol
xchg
sbb
or
cmp
mov
jmp
sbb
inc
push
push
xor
rcrb
dec
push
pop
push
pop
and
push
inc
sbb
in
add
movsl
inc
shlb
sbb
adc
xchg
inc
adc
inc
mov
jg
xor
or
sub
mov
shl
sub
adc
cwtl
sub
inc
add
push
sbb
inc
sbb
push
out
push
popf
mov
pop
push
adc
in
and
adc
popf
int
rorl
or
or
pop
lahf
push
aas
and
pop
xlat
mov
insl
sub
subb
ror
leave
ja
cmc
cmpsb
lret
push
push
insb
movhps
xchg
add
inc
mov
shlb
push
sub
push
xchg
and
mov
movsl
jecxz
sub
cmp
and
dec
add
rolb
mov
ja
lcall
push
jb
stos
mov
sub
add
sub
lods
and
xor
out
fsubrl
sbb
xor
push
mov
mov
test
in
je
add
add
adc
aad
sub
xor
xor
sub
sub
inc
inc
add
movsb
sbb
dec
xor
or
faddl
lock
test
test
mov
std
mov
dec
repz
xchg
sbb
push
call
adc
push
inc
gs
enter
mov
aas
or
call
test
pop
movsb
int
mov
lcall
sub
lcall
test
mov
sub
mov
test
mov
fisttpll
pop
pop
sub
repz
test
loop
lods
adc
pop
mov
js
call
jmp
mov
popf
cs
pop
xchg
and
dec
je
clc
mov
or
and
xor
and
inc
push
mov
inc
sbb
mov
adc
sbb
mov
dec
sbb
ds
xor
add
add
testb
or
pop
fs
or
mov
add
repz
or
cmovae
in
sbb
pop
or
push
cmpb
add
mov
sbb
add
and
arpl
or
add
mov
std
add
cmp
scas
clc
xchg
or
or
or
xchg
jns
jp
in
and
add
out
xchg
jl,pt
push
xor
dec
jge
lahf
sbb
dec
jge
lahf
icebp
adc
mull
das
jb
stos
ljmp
adc
add
or
les
in
adc
pop
loopne
jle
and
sub
mov
mov
adc
cmp
jl
pop
test
xor
out
fnstsw
cmp
or
adc
add
and
push
or
test
mov
jo
inc
mov
mov
call
lcall
sub
adc
mov
popa
pop
xlat
mov
xorl
lds
lret
das
popa
stc
mov
cltd
sti
and
xor
pushf
pop
xor
add
call
jmp
in
call
test
mov
test
movl
movl
dec
push
adc
adc
shrb
clc
dec
mov
push
out
data16
das
and
sub
je
and
and
xor
inc
orb
xchg
and
lods
mov
add
mov
test
cltd
inc
out
mov
test
icebp
gs
pop
mov
and
cmpl
insb
jl
sbb
push
jnp
and
and
iret
jo
push
in
cmp
add
imul
sahf
loopne
ror
inc
jae
or
mov
mov
and
aas
lea
dec
and
dec
std
push
cmpsb
and
sar
xor
frndint
jle
push
dec
mov
repz
sub
je
fisubl
and
dec
or
pop
sub
pop
xor
adc
push
lret
or
rclb
fdivl
add
ja
xchg
xchg
jle
pop
enter
pop
or
add
clc
jle
push
fs
mov
mov
mov
mov
fsubl
mov
outsb
sbb
in
les
movsb
xabort
test
jl
mov
mov
xor
pop
sbb
test
push
sbbb
les
int3
hlt
jmp
mov
enter
sbb
pusha
in
shrb
and
ret
cwtl
fs
cmp
inc
sbb
sbb
shlb
arpl
cmp
inc
or
sub
push
jp
sbb
pop
cld
jl
or
fcoml
or
xchg
and
push
out
decb
xchg
fiadds
jmp
jae
and
insb
mov
push
popf
test
push
gs
mov
sub
inc
xchg
and
xor
or
xchg
cld
dec
mov
inc
enter
or
add
push
leave
jbe
jb
mov
in
mov
mov
push
pop
das
and
cltd
inc
adc
mov
ljmp
push
and
ficompl
rolb
rcr
fwait
test
dec
loope
or
arpl
dec
and
fstps
leave
inc
fistl
dec
fstpl
jl
stos
imul
adc
shrl
push
xor
or
call
mov
jne
add
daa
hlt
clc
stos
mov
test
pop
jge
shll
mov
push
dec
dec
adc
add
and
in
sub
and
hlt
out
xchg
mov
ja
xor
je
orl
inc
cs
test
or
add
bound
fildll
xchg
xor
test
cld
ss
inc
pop
mov
les
pop
sub
dec
aas
xor
push
sbb
add
cmc
and
hlt
and
adc
and
add
adc
call
xchg
jbe
sbb
and
loop
into
mov
out
hlt
fsts
adc
arpl
add
roll
shrb
fs
inc
call
lea
mov
je
les
ljmp
notb
cmp
push
leave
or
stc
xchg
jl
shr
fsubs
or
cmpl
cltd
shr
pop
push
and
call
gs
add
dec
or
dec
adc
xor
cmpb
repz
xor
les
or
scas
xchg
pop
mov
or
or
sbb
and
or
aas
jae
sub
or
push
out
inc
inc
js
dec
inc
mov
insb
scas
xor
dec
and
push
cli
das
shrb
enter
mov
shrl
gs
xchg
or
hlt
xor
dec
jmp
sahf
loope
sub
sti
pop
mov
inc
flds
cmp
add
test
nop
and
inc
or
loop
enter
cmp
pop
cmp
xor
je
orl
sbb
jmp
or
enter
cmpsl
adc
sbb
dec
stos
or
push
add
adc
inc
fsubs
cmp
fldl
push
pop
cmc
popf
iret
dec
ss
jmp
inc
shlb
aam
cwtl
enter
mov
mov
jle
pop
inc
cwtl
or
mov
or
in
or
mov
lods
inc
inc
shlb
addb
test
sub
cmp
xor
add
and
dec
fwait
iret
sbb
xlat
mov
fs
xchg
push
scas
leave
and
or
sub
push
cmp
mov
jno
xor
lock
cmp
push
call
into
pop
mov
lock
inc
mov
popf
or
cli
dec
leave
mov
mov
push
sbb
std
jmp
sbb
or
push
cmpsl
push
dec
xor
mov
and
mov
xlat
cld
jae
les
jmp
enter
fs
aam
mov
enter
xchg
xchg
dec
xor
or
aas
ss
je
into
mov
add
test
push
mov
ret
add
adc
ljmp
adc
sar
mov
dec
mov
adc
jge
and
xchg
scas
xlat
mov
sbb
rcrb
rorb
fs
dec
and
pop
bound
add
hlt
and
imul
sub
or
pop
xor
notl
and
add
jle
dec
add
por
lret
ds
cmpsb
jg
pop
xor
xor
add
mov
pop
jmp
xchg
aam
xor
imul
xchg
add
cs
insl
leave
inc
stos
jmp
notl
sub
add
sbb
add
add
mov
mov
mov
pop
jecxz
add
add
jbe
push
mov
stos
adc
inc
shl
or
xor
cli
jae
dec
hlt
call
lock
sti
sbb
inc
cld
sarl
mov
rclb
mov
das
data16
jmp
add
mov
loop
ja
jo
ret
in
and
clc
mov
ret
repnz
shl
push
xor
leave
jge
push
adc
jne
xor
scas
int3
inc
popa
movsb
push
inc
dec
add
sub
clc
mov
add
inc
clc
lds
nop
arpl
loop
lahf
test
or
sbb
and
mov
rcrb
and
mov
pop
sub
mov
rcrb
popa
ret
xor
mov
mov
jg
test
dec
clc
rclb
xor
jne
mov
daa
hlt
shlb
subb
add
and
jge
xor
lods
cmpl
out
jp
or
in
ja
push
sub
push
jns
mov
adc
fidivl
or
adc
test
and
imul
pusha
mov
cmp
aas
fnclex
dec
and
fld
cmc
push
movsl
in
push
imul
icebp
lret
dec
ljmp
push
mov
sub
sub
or
fwait
push
mov
adc
popl
mov
xchg
pop
mov
add
or
out
sub
dec
inc
and
and
adcl
loope
or
adc
sahf
subl
outsb
andb
ss
and
pop
jle
push
lods
sbb
dec
push
jns
leave
into
lock
jnp
jmp
out
pop
push
std
mov
push
cmpsb
add
inc
pop
xor
jmp
jo
push
push
jmp
or
sub
and
jle
pop
dec
pop
pop
gs
mov
mov
sub
inc
fidivrl
leave
push
pop
sbb
sub
fists
mov
jnp
cmp
mov
jle
push
dec
daa
icebp
mov
mov
jle
aas
xor
dec
leave
and
xor
jl
push
or
or
and
jne
movsb
push
xchg
loope
bound
push
dec
jne
cli
inc
mov
cli
popf
js
js
dec
cmp
stc
jne
or
jmp
push
gs
adc
jg
jg
test
or
pop
mov
daa
fcomps
pop
jo
mov
repnz
sbb
and
push
push
stos
inc
mov
in
adcl
pop
cwtl
cmpsl
push
fisubrs
call
push
test
dec
adc
dec
scas
xlat
movsb
pop
aam
adc
push
int
push
xchg
jl
call
push
popa
js
sub
jg
cmp
add
add
lahf
ret
mov
outsb
xchg
or
orl
pop
sbb
fmul
pop
in
push
mov
fnop
cltd
adc
cmp
add
xchg
xor
call
in
cmp
cmp
pop
das
adc
mov
sysexit
js
sahf
push
jae
bound
adc
addl
xchg
loop
lock
popf
hlt
aam
cli
push
sbb
and
daa
ret
mov
negb
sti
push
cli
addr16
bound
inc
mov
pop
fwait
pop
scas
icebp
aam
lods
clc
das
fs
cmp
idiv
movsb
sahf
sbb
add
js
data16
add
push
lahf
popa
pop
inc
jnp
add
and
jb
jo
lock
mov
dec
dec
adc
lret
xchg
and
rcrl
xchg
mov
cmp
hlt
xchg
stos
mov
outsl
adc
lret
sbb
sub
or
mov
jne
push
cwtl
fsubrp
jno
test
dec
xor
push
daa
push
int
test
cld
fistpl
lds
fnstsw
jle
lahf
adc
stos
mov
leave
jmp
imul
sub
dec
data16
mov
mov
dec
mov
push
dec
xor
pop
lods
dec
clc
shl
inc
jns
push
pop
sub
or
cmpsb
nop
sbb
fdivrs
dec
mov
jmp
fs
cmpsb
jne
push
push
push
data16
jmp
push
imulb
mov
enter
xchg
fs
int3
mov
lea
push
mov
xchg
push
enter
mov
mov
setl
mov
dec
rclb
fcmove
inc
sbb
xchg
cmp
notb
sbb
sbb
repnz
ds
xchg
rcl
cltd
xchg
out
fmull
pushf
jo
movb
pop
xchg
xchg
in
mov
jns
xor
push
arpl
adc
popa
xor
data16
dec
sbb
and
lahf
dec
jmp
testl
mov
mov
out
je
mov
add
nop
mov
or
cmp
add
or
call
imul
in
lcall
lahf
push
lock
push
push
add
sub
sub
mov
cmc
cmpl
loopne
dec
cltd
mov
adc
sbb
inc
dec
jae
cs
lret
pop
data16
bound
leave
std
adc
and
jne
sub
mov
mov
inc
or
or
sub
push
in
cld
es
stos
mov
jmp
jl
pop
adc
cmp
sbb
fcoms
ds
rcll
cmp
jge
cli
pop
jp
sbb
iret
insb
and
sbb
outsb
shlb
pop
loop
jge
adc
push
insb
jo
notb
lret
mov
lods
xchg
xchg
mov
inc
and
shrb
inc
pop
jle
adc
call
jmp
sub
pop
rcrb
mov
out
sub
and
call
xor
sub
call
xchg
or
adc
dec
cld
rolb
div
rolb
cli
fistpll
mov
or
mov
lret
pop
push
inc
inc
push
in
das
movsb
pop
xchg
mov
repnz
insl
cmp
xchg
insl
ret
jns
pcmpgtb
outsl
jo
call
jle
xchg
pop
stos
in
add
add
cmp
xchg
fsub
jno
push
push
cltd
push
adc
ds
sub
gs
add
sbb
fdivs
sbb
jmp
push
mov
icebp
dec
jp
and
in
sbb
cmp
and
sub
dec
ror
sahf
ffree
xor
or
jne
cmp
adc
sub
sub
clc
je
pusha
ror
mov
pushl
cmp
or
jns
cmp
sar
fs
xor
push
stos
out
icebp
or
loop
imul
xor
ljmp
ret
jmp
lahf
call
dec
in
adc
jmp
iret
adc
cld
sub
xor
rclb
xchg
jmp
into
loopne
test
push
data16
in
inc
push
mov
sub
xlat
daa
xor
test
daa
or
movsb
jns
sbb
imul
pushf
mull
fwait
jnp
cmp
addr16
insl
xor
and
daa
stc
push
pop
cmp
and
sbb
clc
addb
shll
das
cmp
sahf
adc
test
sub
out
jle
xchg
xor
pop
xchg
or
xchg
pop
or
mov
pop
xchg
push
dec
test
pop
aam
dec
daa
int3
jge
inc
test
pusha
lahf
mov
pop
in
call
push
pop
or
adc
mov
sub
imul
cld
mov
fmull
xchg
js
in
push
pop
lods
stc
das
cmp
add
rcrb
mov
ss
push
sub
xchg
popf
repz
sbb
and
mov
mov
aam
in
scas
adc
jmp
mov
or
addl
in
sahf
dec
pushf
sub
insl
lea
and
mov
push
inc
or
xor
sbb
dec
or
xor
pop
stc
mov
sub
mov
ffree
xlat
inc
lock
pop
xchg
loopne
out
shrb
pop
inc
jo
mov
rorb
ficomps
in
fs
repz
push
or
dec
inc
or
fildl
cmp
adc
mov
aam
mov
and
push
shlb
outsb
out
fsub
shlb
jmp
push
in
in
into
lea
jg
pop
dec
cld
call
adc
mov
push
mov
xor
shll
call
mov
mov
push
dec
jb
add
ret
inc
cmc
dec
pusha
sbb
ret
xor
cli
lret
xchg
sub
hlt
test
es
jb
das
or
sub
mov
adc
sbb
add
cs
pop
pop
push
ja
repz
jmp
stos
loop
adc
add
adc
mov
pop
popf
out
inc
push
sub
add
dec
and
pop
jb
push
imul
incb
lock
notb
cmp
outsl
movsb
sub
sarl
test
adc
lahf
fcmove
aad
test
dec
sbb
dec
stos
jp
push
xor
mov
sub
movsb
xchg
gs
std
jb
sub
mov
int
dec
loope
xor
jl
adc
xchg
xor
mov
adc
icebp
out
or
addb
cmc
push
jnp
popa
inc
pushf
enter
mov
and
dec
add
dec
adc
das
mov
cs
std
rclb
test
jp
subl
push
dec
xor
shlb
xor
mov
or
jns
adc
fidivrs
mov
jmp
xchg
leave
movsb
add
popf
daa
jnp
mov
repz
lea
push
jne
nop
sub
add
jae
rorb
ja
fs
or
add
and
pop
jg
rorb
sub
mov
push
xchg
notb
lds
les
insl
cmp
cmp
loop
rolb
jecxz
pop
popa
sub
cmp
cs
sbb
pop
push
pop
leave
ret
cmp
inc
add
pusha
subl
sbb
mov
dec
pusha
jb
adc
scas
inc
pop
loope
push
int
jl
pop
das
rclb
test
invd
outsl
mov
push
popf
into
je
mov
pop
clc
orl
push
es
adc
adc
loope
int3
and
test
xor
jl
or
jle
mov
dec
rcrb
lea
mov
pop
cld
push
jne
bound
or
jle
sti
aam
xor
inc
imul
nop
sub
clc
add
cmp
clc
out
imul
fdivs
mov
sarb
std
push
push
lds
add
addr16
add
mov
test
jge
add
adc
call
call
rorb
and
lea
mov
inc
or
dec
mov
jb
mov
pop
adc
add
cltd
jmp
jnp
ja
mov
adc
cmp
enter
cmp
sahf
loope
outsb
sub
pop
add
inc
adc
call
add
in
mov
mov
rol
xor
inc
xchg
sti
jbe
cltd
mov
imul
jle
out
hlt
test
clc
fistps
std
lea
ljmp
cli
pop
shlb
lods
inc
das
xchg
in
adc
pop
pop
xchg
lea
dec
or
cwtl
mov
pusha
pop
push
mov
mov
push
pop
mov
sub
mov
mov
jne
mov
push
or
or
or
xchg
cwtl
mov
daa
pop
test
test
jnp
jns
das
add
push
push
fisubs
or
adc
cltd
and
and
enter
adcb
push
test
enter
push
movsb
arpl
test
jne
xor
je
push
cwtl
xchg
rclb
mov
dec
mov
push
outsb
dec
jbe
adc
outsl
lea
adc
push
orl
adc
mov
add
add
or
test
xchg
mov
outsb
mov
aam
mov
fcoml
adc
pop
out
lea
das
subb
jns
or
loop
call
mov
dec
push
dec
call
cmp
mov
mov
test
mov
push
test
insb
dec
pop
push
sub
lock
movsl
lock
popa
out
hlt
jp
mov
pop
xchg
add
xchg
xchg
push
inc
inc
call
clc
pop
push
dec
inc
pusha
call
movl
inc
repnz
inc
xchg
push
gs
add
fcoms
shll
call
scas
lock
mov
sub
pop
test
rclb
das
shr
int3
mov
xor
add
adc
pop
lahf
adc
clc
jae
xor
aaa
pop
dec
gs
mov
hlt
outsb
mov
sub
push
fdivrs
leave
arpl
and
push
pop
bound
es
jno
lahf
out
pop
shrl
fldl
testl
sbb
and
xor
and
push
imul
lret
or
adc
add
pusha
lahf
mov
aas
or
xchg
push
aam
aaa
sub
nop
and
aas
sub
push
cmp
ret
ja
mov
push
arpl
shl
leave
cmc
out
dec
je
in
int
sub
addr16
jge
xchg
mov
xor
outsl
push
mov
jl
movsl
stos
fwait
mov
enter
les
aaa
jge
xchg
and
add
decb
pushf
cwtl
or
jns
int
or
jge
mov
pop
imul
in
flds
adc
test
adc
adc
sbb
jg
jmp
inc
push
mov
mov
sub
popa
inc
jne
jle
push
inc
add
inc
mov
mov
lcall
data16
adc
jne
adc
out
cltd
mov
repz
or
adc
in
rcll
in
inc
test
mov
mov
ja
sub
pop
xor
cltd
sbb
xchg
cmp
mov
fidivrl
push
push
test
cmc
sub
es
nop
jo
in
xor
add
loop
xor
outsl
ja
stos
adc
test
pop
inc
jmp
adc
and
jno
or
inc
sbb
in
jge
mov
adc
sbb
mov
test
mov
lds
cld
mov
dec
jo
xchg
pop
xchg
cmp
dec
add
addr16
icebp
lea
shl
pushf
pop
mov
mov
sti
pushf
push
lcall
in
movsb
xor
das
add
sub
sahf
out
out
pop
or
cmp
addr16
insl
stc
jmp
outsb
lds
lea
fs
jo
mov
xchg
jb
fcoml
lds
sub
lods
int3
push
jne
and
stos
mov
push
frstor
add
imul
int
push
pusha
inc
sub
popf
sbbb
psadbw
xchg
dec
inc
daa
inc
or
or
test
pop
inc
sub
sbb
or
push
or
sub
pop
iret
push
add
cmp
fmul
inc
lea
loopne
xlat
hlt
mov
lds
jne
int3
dec
ds
mov
or
jae
dec
and
outsb
inc
mov
arpl
adc
int3
sub
push
mov
cli
pusha
shlb
push
out
and
scas
aaa
cmpl
clc
aam
shll
cmpsl
pushf
lret
shl
xor
sub
or
sub
leave
test
add
inc
fcoms
cltd
out
add
pusha
movsb
adc
push
sub
ja
aas
sbb
mov
sub
mov
in
lds
push
dec
aaa
das
inc
rorl
push
fists
push
mov
and
out
dec
lahf
jns
aam
sub
pushf
test
add
jne
rolb
lea
rclb
mov
xchg
in
cmp
push
push
les
mov
dec
out
fwait
call
cwtl
cmp
jnp
add
movl
sub
ss
lea
mov
jl
ret
dec
adc
and
orl
enter
andb
xchg
sbb
enter
cli
add
lea
adc
call
sarb
mov
inc
or
adc
inc
aas
sub
or
mov
xchg
scas
popf
and
outsl
scas
mov
rsm
xchg
popf
add
enter
divb
adc
lret
imul
push
pop
dec
out
xor
sub
and
xchg
ret
cli
ja
cwtl
cmpsl
insb
mov
popa
cmp
aas
enter
mov
fs
roll
outsl
push
dec
jmp
nop
popf
jns
sub
cmc
fisubrs
imul
aam
test
out
arpl
int3
fnstsw
xor
mov
mov
pop
stos
sub
lret
aas
popa
outsb
je
popf
or
jnp
sbb
push
sub
jmp
mov
mov
adc
sub
test
or
add
push
sbb
cwtl
lds
addb
ljmp
push
sbb
mov
mov
mov
test
xchg
cmc
jb
dec
in
and
in
cmpb
fistpl
adc
rolb
jmp
cmpsl
and
test
adc
mov
jno
adc
test
inc
rclb
test
es
sub
fldcw
lock
mov
dec
mov
orb
xchg
cs
pop
std
pop
gs
popa
lcall
popf
es
jmp
les
mov
in
pop
lcall
call
xchg
sbb
outsb
test
cltd
out
fisubrs
jne
outsl
pop
pop
sub
pop
xor
mov
and
push
and
push
adc
sarl
xchg
jnp
je
push
maskmovq
testl
lock
sbb
int3
and
inc
sub
adc
jg
repz
sar
rorb
add
adc
stc
ret
add
jmp
in
and
xchg
into
fisubrl
add
push
dec
stos
or
and
test
xor
or
xor
lock
adc
xchg
repnz
test
sub
or
push
jo
mov
or
test
xor
and
dec
rorb
mov
pop
setb
stos
or
je
mov
mov
ja
xchg
adc
pop
int
sbb
outsl
or
xchg
and
dec
mov
adc
pop
in
adc
xchg
loope
sbb
stos
jmp
jmp
hlt
push
insl
xchg
mov
mov
dec
add
sbb
fsubs
or
int
negb
or
or
sub
cmp
je
dec
rcll
int3
mov
mov
notb
shll
add
pop
dec
std
mov
xor
mov
mov
pop
xchg
sub
mov
or
xor
mov
mov
jb
jmp
pop
in
dec
or
loope
and
fistl
sub
and
clc
cmp
pop
jne
lods
pop
adc
mov
ds
xchg
xchg
push
clc
jle
or
outsl
and
inc
inc
bound
wrmsr
test
pop
in
dec
add
jmp
or
and
fimull
out
add
notb
adc
daa
xchg
sti
adc
subb
leave
push
mov
in
and
std
test
rolb
mov
mov
je
mov
push
push
aam
dec
cwtl
aas
mov
test
or
cmpsl
sahf
test
push
andb
sbb
insb
adc
push
pop
aam
and
sub
cmp
sbb
inc
fs
xor
sbb
dec
and
and
adc
lcall
repz
add
dec
stos
adc
xchg
aam
adc
mov
jo
test
sbb
addr16
shrb
jle
sbb
xchg
and
pop
fcmovbe
outsl
lret
cmp
xchg
lea
or
jmp
cwtl
mov
sub
inc
dec
dec
aam
shll
inc
out
inc
push
rolb
push
or
lock
lcall
xchg
lock
test
sbb
roll
or
and
in
outsl
jecxz
in
mov
push
movsb
in
cmp
and
sub
push
xchg
xor
pop
mov
adc
rcl
adc
inc
out
pop
inc
or
stos
pop
mov
and
pop
and
fcoms
rolb
iret
inc
jne
mov
push
je
insb
ds
ds
cltd
arpl
andb
push
jmp
gs
and
mov
push
jge
jmp
sbb
fcoml
lea
xor
mov
push
std
push
scas
jmp
imul
daa
sub
adc
lea
test
and
sbb
sub
push
ret
or
add
sbb
out
push
mov
push
push
adc
pushf
loop
jns
dec
push
inc
xchg
xchg
mov
dec
bound
shl
enter
add
icebp
xor
and
or
stos
aam
out
into
rcll
test
cmpsl
dec
and
add
repnz
jb
aaa
nop
in
test
add
xchg
jp
frstor
pop
add
mov
push
or
cmp
dec
xchg
jmp
mov
xchg
pop
movsb
mov
lea
and
ss
mov
push
in
pop
push
insb
adcl
ljmp
test
sbb
lock
lea
mov
cmp
out
push
gs
jne
mov
rcll
jmp
les
cmp
sub
lock
push
push
loopne
dec
loopne
fwait
movsl
jl
push
shr
inc
jns
or
aas
mov
sarb
jae
and
shrl
dec
jo
popa
jo
mov
cs
sub
dec
inc
sub
lock
and
or
and
pop
jmp
mov
repz
shlb
pop
lds
fwait
es
jbe
cmp
cmp
push
lods
into
mov
andb
lret
mov
xor
popf
jns
fiadds
in
aaa
push
or
or
add
cwtl
sbb
sbb
mov
dec
jge
daa
stc
outsb
push
test
jmp
and
int3
cmp
adc
mov
jg
xchg
fsubr
pushf
or
mov
xor
sti
mov
inc
or
pushf
dec
inc
xchg
cmpsl
and
pop
add
mov
xchg
or
pop
movsb
add
or
ja
and
arpl
adc
and
pusha
addb
xorl
sub
std
mov
or
push
cmp
push
out
sbb
push
or
add
mov
cmpsb
outsb
pushf
ss
fcoms
test
mov
adcl
loop
or
fstl
out
xor
loope
pop
pop
das
adc
adc
xchg
je
push
adc
scas
jmp
sub
ja
scas
dec
fiadds
push
adc
ljmp
lret
adc
test
call
push
cmp
push
aaa
mov
fbstp
shll
nop
loopne
dec
or
or
adc
repz
addl
sub
push
and
enter
arpl
mov
jne
sub
xchg
adcl
push
mov
pop
test
rcrl
xor
sub
mov
pop
mov
push
adc
mov
fdivr
bound
inc
dec
shrl
add
imul
sbb
in
adc
push
sbb
jle
jne
or
or
aad
sbb
cmpsl
jns
shr
add
fisttps
shrb
jle
rclb
and
in
inc
adc
clc
add
out
xchg
mov
and
cwtl
aam
lock
in
test
fstps
push
and
jo
mov
jns
inc
inc
mov
adc
add
jecxz
jae
lcall
sbb
cwtl
add
call
push
pop
or
aam
scas
or
out
mov
sub
xor
mov
ljmp
or
xor
adc
push
sbb
sub
jp
mov
lock
mov
and
loope
pop
push
push
sti
nop
or
xchg
aad
dec
pushl
push
or
cltd
v4fnmaddss
repnz
adc
inc
inc
ja
add
leave
add
or
sbb
pop
pop
sub
pop
insl
mov
std
mov
orl
in
mov
loope
je
cmpsb
mov
inc
push
push
push
fwait
call
dec
std
fisttpll
stc
sbb
mov
pop
int3
dec
stos
adc
pop
lock
scas
adc
popa
les
std
scas
repnz
mov
push
xchg
pop
clc
shr
adc
pop
mov
daa
movsl
stos
cmp
inc
fcoms
lods
inc
xchg
dec
movsl
rorl
sub
jnp
int
aas
repz
cmp
movsb
cli
out
push
jp
jb
or
je
sti
sub
or
cld
jo
jle
mov
cmc
adc
rorl
scas
xorl
stos
adc
ljmp
clc
or
std
lcall
sti
hlt
leave
fucomip
sub
push
arpl
push
and
and
shrb
or
je
stc
xchg
hlt
jmp
cmp
outsl
xor
cmp
and
inc
int
inc
fwait
or
adc
shlb
movsl
das
mov
push
add
jnp
xor
sbb
xchg
pop
mov
addr16
pop
pop
test
sub
lret
test
xor
xchg
mov
inc
and
out
std
mov
push
inc
pushf
lods
cmp
push
jne
sbb
add
movsb
pcmpgtd
scas
movsl
stos
ds
adc
cmp
imul
jne
lahf
lods
fisttpll
ret
cmc
outsb
push
mov
xchg
mov
sti
push
push
xor
fstpt
inc
pop
inc
push
ljmp
jne
sub
rcrb
sbb
scas
dec
cli
cltd
mov
sub
fst
mov
xlat
xor
push
xchg
cmp
mov
or
jne
xor
loopne
ret
mov
dec
sarb
decb
jecxz
lea
dec
movsl
add
outsb
lds
out
stos
nop
test
jl
dec
push
adc
add
inc
in
in
cli
mov
adc
mov
cmpl
daa
inc
push
or
sbb
add
jne
hlt
movl
fstps
or
mov
or
scas
adc
and
mov
ja
mov
fistpll
movsb
push
bound
sbb
cld
sbb
inc
xchg
pusha
je
fs
dec
sub
je
ret
lret
les
insl
daa
pop
daa
or
xor
popa
je
xor
jl
adc
jmp
mov
or
cs
jmp
and
es
int
nop
and
jbe
push
daa
cmp
stos
pop
negb
push
jb
adc
mov
and
leave
cld
subb
arpl
and
or
xchg
sbb
jnp
and
jl
mov
mov
orb
add
sbb
pop
bound
push
pop
loopne
push
mov
and
test
jmp
and
rclb
push
in
stos
daa
mov
lods
repz
movsb
jae
sbb
jmp
call
xchg
lret
out
into
inc
sub
stos
and
mov
mov
clc
push
mov
and
push
push
xchg
xchg
inc
inc
lods
fsubp
rcll
adc
mov
xor
or
inc
mov
or
sub
add
xor
das
sti
or
pop
lcall
call
cmp
pop
cmp
add
std
push
sarb
adc
push
cmc
ds
add
popa
clc
add
jne
lods
inc
jmp
inc
push
and
aad
jnp
mov
notb
nop
dec
mov
mov
flds
xor
add
add
inc
add
test
lock
popa
mov
in
repnz
pushf
mov
sbb
push
mov
jne
rorb
mov
sub
mov
push
mov
dec
jb
sbb
sub
test
or
js
repz
dec
pop
dec
enter
and
sbb
call
sub
pop
mov
lods
cmpsb
xchg
cmp
jl
enter
add
jmp
in
cmp
xchg
and
adc
or
dec
add
push
daa
adc
sbb
insl
lahf
push
inc
cmpsl
push
jo
lahf
add
or
jnp
lea
xor
imul
daa
push
cld
xor
xor
inc
repz
mov
mov
xchg
mov
sub
lcall
incl
pop
sbb
and
mov
in
push
push
inc
add
dec
test
xorl
inc
or
push
push
imul
add
mov
mov
dec
adc
push
fstl
lret
xchg
lock
or
cmpsb
jp
jne
fnstsw
xor
aas
add
push
mov
out
call
and
add
inc
insl
sub
add
ficomps
inc
jno
mov
sbb
outsl
dec
pop
lods
stos
filds
add
xchg
movsl
mov
sbb
and
adc
mov
add
ss
jl
mov
repz
sbb
xchg
fs
int
icebp
add
addr16
in
adcl
jns
xchg
pop
sbb
dec
pop
in
inc
xorb
adc
mov
subb
add
cmp
or
fadds
dec
xchg
adc
in
mov
ja
lcall
test
inc
xor
mov
sbb
inc
add
repnz
or
sbb
pop
jb
pop
imul
mov
mov
jg
cmpl
fidivrl
in
add
push
dec
in
mov
dec
or
fld
add
ficoml
adc
dec
pop
xchg
enter
stc
mov
mov
ficompl
mov
pop
cmp
push
mov
inc
sbb
movsl
add
jmp
jnp
pop
cmp
push
adc
subb
sub
sub
jg
adc
cmp
les
sub
testl
adc
sub
addl
outsb
pop
int3
test
dec
loope
cmpsl
fldenv
add
jl
adc
fs
ret
ja
pop
mov
ja
stos
sahf
push
xchg
sub
push
out
rcrb
mov
adc
xchg
inc
or
lret
stc
inc
cmpb
in
mov
push
pop
ret
xchg
in
inc
sahf
mov
push
lea
and
or
mov
repz
and
inc
fimuls
mov
adc
jmp
rcl
xchg
call
xlat
mov
test
cmp
test
inc
stos
and
clc
mov
sub
push
cmp
lahf
arpl
xchg
ljmp
aas
pusha
out
push
shr
xor
test
cmc
lret
stc
ret
push
mov
xchg
pop
pop
icebp
xor
sub
hlt
mov
add
push
jge
orb
add
andb
and
jo
popf
adc
jmp
mov
das
ja
mov
xor
imul
adc
and
aad
stos
rcr
movsb
jp
int
jp
mov
call
mov
add
jae
pop
inc
cmp
add
and
sbb
inc
es
out
adc
rorb
cmpsb
xor
jmp
aas
or
mov
lret
aas
es
sbb
inc
mov
jg
push
call
mov
je
cmp
stc
jle
jae
push
dec
push
aas
scas
sub
push
sahf
andl
sub
mov
das
mov
jle
scas
pushf
outsl
call
dec
adc
jns
leave
jne
lcall
push
push
jmp
add
adc
hlt
lret
cmp
xchg
push
pop
dec
mov
sub
daa
xchg
and
notb
rclb
xchg
add
sarl
lock
das
gs
mov
fdiv
clc
push
negl
inc
out
and
push
inc
imul
xor
mov
jnp
aad
lret
pusha
add
lret
in
rclb
lcall
mov
dec
nop
cmp
fcoms
test
and
ds
dec
mov
fsubrl
ja
or
inc
sub
loope
push
ret
aam
sub
fsubr
xchg
divb
inc
int3
aaa
push
or
loopne
mulb
loopne
rorl
loopne
push
decb
subl
jmp
mov
cltd
cmp
xor
dec
and
pushf
insb
pop
hlt
dec
add
in
xor
dec
xor
dec
push
mov
in
xor
and
sbb
enter
stc
jle
pusha
xchg
scas
jb
clc
jbe
jmp
fs
lahf
xchg
sbb
daa
jne
pop
push
fistl
sub
lahf
and
pop
jmp
out
repz
sbb
xchg
jecxz
enter
pusha
lcall
fbld
mov
icebp
add
cmp
aas
stc
add
push
loopne
jno
test
pop
lock
inc
dec
dec
andb
cmp
sub
fadds
push
cld
mov
sbb
and
dec
cmp
sbbb
sbb
mov
cmpsl
add
cmp
lock
or
pop
lcall
jno
xchg
sbb
sub
cmp
sub
daa
adc
push
inc
or
pop
dec
cmp
jmp
jecxz
jle
mov
xor
pop
cmp
jl
pop
mov
or
add
push
aas
push
xor
dec
mov
pop
loop
daa
testb
push
jns
stos
xchg
and
pusha
push
int
lcall
rcll
cmp
mov
inc
out
add
inc
and
imul
add
dec
jmp
enter
inc
aam
add
sub
call
or
add
hlt
add
sub
adc
pop
sbb
sbb
sbb
ljmp
inc
push
test
dec
mov
enter
xor
mov
popa
sbb
test
jne
fdivl
cmp
jg
cmp
fildll
add
shl
leave
cmp
loope
jae
iret
imul
cmpl
pop
dec
xchg
stos
cmpl
jae
lret
dec
sub
jl
ficoms
inc
fcompl
lret
mov
cmp
ja
mov
xchg
inc
mov
push
mov
jmp
int
lahf
jmp
mov
mov
cmpsb
jp
test
mov
subb
mov
push
fisttps
mov
mov
push
mov
add
shr
pop
add
aaa
xchg
push
cmpsb
pop
push
sbb
loopne
adc
adc
aas
or
and
addl
xor
jge
lea
outsb
out
outsb
fadds
jnp
hlt
jae
push
sub
cmp
inc
mov
in
mov
cs
mov
repz
sbb
ror
movsl
jnp
mov
cmp
cmpsb
cmp
inc
pop
test
mov
xchg
outsb
xlat
mov
test
push
test
xchg
or
jae
dec
push
sbb
popa
movl
inc
pop
and
scas
js
cs
sbb
adc
cmp
mov
or
les
rolb
or
sub
adc
add
int3
mov
xor
xor
icebp
enter
cld
popa
imul
dec
inc
mov
pop
stos
mov
jmp
mov
gs
push
jbe
mov
mov
xchg
xchg
mov
add
popf
pop
sti
xor
movups
adc
dec
or
pop
ficomps
or
fucomip
mov
add
adc
mov
lds
lea
sbb
shrd
and
and
cltd
adc
add
adc
pop
mov
cli
push
imul
mov
sbb
add
mov
push
mov
rol
test
and
cmc
gs
push
add
cmp
cmc
scas
push
mov
gs
push
sub
add
pop
and
add
pop
jmp
and
adcb
repnz
andb
loopne
scas
and
pop
xchg
mov
sbb
inc
or
dec
push
cwtl
sbb
ljmp
nop
sub
call
adc
adc
xor
rcrb
rorl
stos
xchg
inc
mov
shrl
adc
scas
lret
in
push
push
dec
lock
shll
sbb
cmp
cwtl
fsubs
shl
pop
sbb
xor
sub
inc
or
nop
cmp
or
call
or
push
pop
mov
lds
fcmovne
lcall
cmp
add
mov
xchg
adc
and
xchg
push
xchg
cmp
inc
jp
mov
inc
and
sub
jecxz
lret
jg
rolb
pop
je
pop
mov
cld
mov
testb
push
pop
call
add
lahf
pop
shlb
xchg
jne
pop
inc
rorb
cmc
jns
or
xor
repz
pop
cmp
scas
ror
pop
repnz
and
jg
or
xchg
jg
cmp
and
inc
lea
jmp
jno
jmp
or
cmp
mov
and
jb
push
sub
xchg
je
out
gs
stos
and
mov
adc
add
jg
or
fsubs
sub
xchg
mov
jl,pt
cmp
lods
test
outsb
mov
adc
daa
adc
scas
lret
test
incl
mov
lods
jp
fucomip
sbbb
xchg
hlt
ret
sbb
in
mov
mov
in
jmp
sbb
mov
push
cmp
std
jb
xchg
xchg
imul
xchg
insb
sbbb
push
jno
xchg
test
jecxz
mov
fcos
jecxz
mov
jns
inc
insb
and
pop
cmp
jmp
push
clc
cli
fiadds
daa
or
lcall
das
lea
mov
sub
rorl
lds
mov
sub
imul
add
in
jp
mov
je
xor
mov
add
mov
or
int
fsubr
xlat
in
or
dec
xor
test
sub
push
cli
lahf
call
xor
test
mov
jne
mov
movsl
mov
or
xor
xchg
shlb
xor
adc
fisubrs
dec
les
jne
lcall
test
push
jmp
and
push
in
pop
jmp
lock
cmpsl
add
and
stc
cmp
in
xor
and
cld
cmpps
out
inc
or
xchg
mov
xchg
insl
dec
jns
cltd
mov
imul
mov
pop
pushf
popf
mov
push
pop
add
call
sbb
xchg
mov
mov
cs
push
adc
ja
jp
lds
les
pop
stos
push
aas
in
js
xchg
nop
lock
or
dec
adc
mov
or
cs
push
stc
inc
inc
push
lahf
call
dec
lret
add
stos
cs
mov
add
sub
adc
mov
and
cmp
mov
adc
dec
add
inc
jnp
shlb
les
inc
or
es
aas
cmovo
fwait
pop
inc
subl
lock
subl
or
mov
pop
inc
jmp
jno
in
xchg
movsb
pop
inc
dec
inc
and
adc
pop
and
test
push
inc
inc
lea
fs
cmp
test
and
jns
mov
push
testb
xor
hlt
add
pop
cmpsl
pop
jno
dec
push
dec
rcll
mov
adc
ljmp
push
adc
add
je
mov
or
push
sub
xchg
call
inc
rorb
jg
cmp
cmpsl
fisubs
dec
repnz
mov
testb
daa
call
mov
cmp
jne
xchg
inc
mov
ja
and
pop
out
int
xor
outsl
cmpsl
push
dec
mov
popf
test
xchg
sub
pop
test
mov
mov
outsl
loop
jg
outsb
jno
jg
adc
adc
xor
mov
sti
cmp
lahf
mul
lds
jle
cld
mov
inc
adc
std
jecxz
jmp
push
insl
push
mov
cwtl
push
call
call
lea
jbe
mov
ljmp
add
lock
stos
enter
and
in
lea
xchg
inc
push
lods
jne
insb
dec
jo
outsb
add
pop
xchg
cmp
cltd
xchg
ljmp
cmpsl
xor
outsb
cwtl
dec
roll
xacquire
out
mov
movl
xor
mov
test
cmc
adc
xchg
pop
pop
cmpl
inc
sbb
lods
pop
xchg
out
push
pop
das
shl
inc
test
frstor
call
sbb
jbe
adc
mov
or
and
nop
cmp
js
sti
cmp
call
dec
dec
mov
pop
mov
call
imul
adc
clc
mov
xchg
mov
fsubr
sahf
pop
add
test
xor
in
add
inc
cmp
and
es
and
je
and
leave
jo
mov
mov
nop
das
sub
inc
mov
pop
aam
push
pop
sbb
xor
or
scas
inc
push
mov
sub
ljmp
inc
pop
mov
fdivr
pop
dec
sub
push
leave
mov
push
lahf
arpl
stos
cmpsb
insl
mov
dec
pop
cmpsl
adc
mov
into
push
ret
push
xor
mov
xorb
in
jmp
xchg
cmpsb
popa
inc
or
dec
hlt
filds
sub
and
push
gs
and
outsl
aad
jne
and
adc
jae
cli
dec
lds
loop
push
andl
mov
fmul
lock
mov
jp
kmovw
mov
icebp
lds
lods
mov
push
pop
inc
add
mov
push
sub
stos
mov
pop
mov
sti
nop
inc
jo
pop
push
repnz
int3
mov
and
cmpsl
and
sbb
and
hlt
je
mov
mov
clc
sub
mov
dec
daa
movsb
cltd
dec
in
mov
repnz
movl
xchg
cmc
cli
push
xor
loop
push
fisubrs
frstor
sub
sub
adc
dec
push
mov
loop
in
int
mov
xor
and
decl
sbb
hlt
adc
mov
stos
push
push
push
fucomip
sub
shlb
mov
dec
and
decl
or
sub
in
sar
sub
repnz
and
out
add
push
push
clc
in
out
mov
mov
or
dec
mov
push
test
dec
call
jge
lods
jg
dec
xlat
xchg
add
out
mov
es
add
mov
lahf
insl
jns
movsl
cltd
lret
iret
subb
call
daa
sub
jae
push
lock
and
fdivp
sbbl
aam
push
jmp
scas
enter
hlt
add
dec
dec
or
and
aas
mov
xchg
xor
insb
push
or
or
mov
data16
in
les
call
mov
xchg
adc
and
addr16
and
mov
add
cltd
jae
pop
jnp
xor
jns
and
pop
das
pusha
mov
ret
lea
add
mov
pusha
mov
aaa
adc
mov
jg
les
mov
cmp
jmp
jge
lods
xchg
pusha
mov
cmp
adc
sbb
popf
fs
call
or
lea
sti
adc
mov
jmp
mov
lret
mov
mov
arpl
dec
dec
and
lea
aad
mov
mov
push
push
xchg
fstpl
push
and
fidivl
and
jge
pusha
xor
cmp
je
mov
rcr
scas
aam
push
loopne
jne
andl
adc
pop
sbbb
push
xchg
dec
shll
push
jne
jnp
adc
sub
add
cmp
sbb
or
movsb
add
shll
xchg
dec
adc
inc
loopne
cmp
mov
push
mov
add
xlat
pop
loop
sbb
push
sub
xchg
inc
les
ret
xchg
push
imul
mov
rcl
pop
fidivs
push
mov
lods
pop
cmp
sub
mov
xlat
jmp
loopne
pop
mov
jl
inc
aad
or
mov
pusha
cmp
xchg
sub
cmp
lahf
inc
mov
sbb
inc
test
test
sbb
mov
out
inc
or
lret
ljmp
inc
out
xchg
inc
stos
and
dec
or
lret
dec
dec
and
jmp
sbb
inc
jns
and
or
jecxz
pop
jmp
mov
and
xor
add
js
sbb
push
inc
xor
je
out
push
xchg
aam
xor
xchg
or
inc
jle
mov
push
inc
dec
and
cld
lea
inc
inc
jae
jnp
cmp
cmp
or
and
loopne
adc
arpl
pop
test
cmp
xor
dec
pop
push
call
xor
sbb
or
in
or
inc
pop
out
sbb
lods
outsl
or
xchg
jnp
jbe
xor
jmp
mov
mov
inc
and
xor
pop
imull
mov
sub
sbb
dec
or
mov
ret
scas
fisubl
xchg
or
xor
xchg
aaa
out
and
sub
cmpsl
mov
sub
inc
cmp
push
addb
push
sbb
popf
jne
rcll
mov
jae
mov
pop
or
adc
call
je
test
clc
jmp
adc
pop
xor
subl
and
loopne
in
xchg
xor
mul
adc
jecxz
nop
shrl
xchg
inc
call
imul
popa
lods
int
adc
aad
dec
daa
pop
lock
jmp
je
icebp
mov
lret
push
xor
mov
jbe
int3
fdivr
dec
add
jbe
lods
sub
out
pop
add
lea
sub
dec
sti
arpl
jns
add
push
test
mov
call
or
mov
push
mov
vunpckhps
mov
lret
push
sub
pop
and
mov
out
into
inc
pop
mov
pop
adc
loop
cmc
xchg
pusha
mov
pop
pop
lods
cld
jo
fidivs
sbb
ret
xchg
mov
push
jge
add
push
stos
sub
aas
cmp
adc
nop
in
or
aad
mov
mov
sbb
push
or
jbe
stos
and
push
movsl
ret
test
jmp
dec
push
xor
adc
enter
testb
lock
dec
mov
lock
gs
lods
aad
clc
repnz
pop
jb
lods
mov
xchg
in
jae
pop
bound
add
adc
xor
add
or
jl
push
testl
mov
adc
xchg
stos
xchg
fldenv
inc
orb
fisubs
mov
push
cld
popf
adc
xor
push
push
leave
mov
and
repnz
rclb
pop
je
push
and
mov
dec
imul
loope
or
adc
sub
sub
pop
in
or
scas
jnp
mov
add
push
or
rolb
and
add
or
mov
ljmp
cmp
inc
add
inc
mov
loope
pusha
cmp
push
push
sbb
repnz
pop
push
mov
mov
stc
xchg
cltd
flds
add
sbb
and
imul
orb
xchg
fwait
xchg
mov
inc
popa
pop
adc
mov
add
prefetchwt1
adc
adc
sub
adc
add
dec
adcb
or
outsb
and
adc
and
jmp
enter
test
scas
mov
dec
js
inc
test
push
jo
loop
sbb
jl
popf
mov
std
add
push
aaa
push
push
sub
or
daa
arpl
adc
fwait
jnp
imul
mov
jns
push
add
add
lods
add
or
jne
ret
mov
adc
adc
lret
sub
inc
leave
in
push
push
call
xchg
stos
and
mov
mov
inc
push
mov
mov
fldenv
xor
es
add
movsl
push
pusha
dec
clc
test
hlt
jae
cltd
push
xor
adc
sbb
push
enter
sarl
sub
ret
fcoml
jmp
xchg
sub
mov
rorb
enter
jns
loopne
ja
fs
and
sub
cmpsl
push
mov
push
jmp
or
sbb
inc
adc
or
call
dec
stos
testb
sbb
fs
jns
adc
pop
mov
inc
call
or
loope
pop
pop
push
xchg
mov
movsb
rcrb
add
jo
mov
mov
xor
push
fucom
xchg
inc
lock
mov
sbb
sbb
cld
cmc
pop
pusha
jmp
cld
dec
lock
popa
xchg
cld
mov
sbb
mov
xor
pop
mov
repz
in
orl
loopne
in
mov
cmp
or
int3
lret
mov
sbb
mov
stc
cltd
adc
or
adc
jo
xchg
pop
aad
push
add
add
addb
add
iret
shrb
mov
and
pop
adc
inc
shlb
dec
lods
pop
shlb
add
mov
mov
loope
outsb
mov
push
pop
pop
out
cmp
sbb
pop
push
sbb
ss
push
mov
cltd
push
add
and
mov
mov
adc
and
and
or
adc
pop
fs
xor
or
dec
sbb
dec
cmc
lods
ret
xor
out
js
mov
test
in
cmp
dec
std
ret
xor
add
mov
lds
mov
pop
xchg
dec
cld
mov
xchg
mov
jne
aad
xchg
or
int
xor
jae
jmp
pop
mov
and
daa
inc
lret
in
sbb
stos
push
jp
sbb
jp
loope
and
inc
jne
adc
sbb
push
pop
jnp
std
and
xlat
pop
mov
dec
fcomp
pop
loopne
pusha
inc
cwtl
daa
push
es
rcl
mov
clc
cmc
xor
adc
inc
enter
int
xchg
cmp
cs
test
jle
or
in
cmp
gs
cmpsb
mov
rcrl
shlb
les
scas
fmuls
leave
stc
sub
stc
test
inc
sbb
and
lret
adc
lahf
enter
imul
orb
mov
adc
cs
mov
inc
mov
pop
je
div
pop
xchg
lretw
xor
fsubrs
aam
inc
xor
xlat
gs
sbb
cmp
jb
cs
push
fld
cmp
adc
ror
sbb
mov
out
mov
or
push
mov
lea
cmpsl
pop
push
mov
repnz
jno
mov
or
xor
xor
pop
bnd
bound
push
out
enter
add
mov
lock
fsave
cld
fwait
xchg
add
push
pop
pop
leave
push
inc
and
and
mov
push
fstcw
inc
jmp
scas
xor
and
jle
ret
mov
adc
push
stos
mov
jo
daa
mov
jb
mov
hlt
mov
cli
ds
pop
fninit
or
std
xor
and
int
add
clc
and
dec
lcall
mov
add
adc
pop
lea
mov
stos
lea
jp
lret
dec
adc
mov
cmp
and
or
or
dec
dec
sti
xor
push
jo
jg
xor
adc
push
movups
and
xor
adc
daa
pop
mov
clc
dec
pop
pushl
mov
jmp
int3
dec
add
cltd
and
mov
or
or
add
add
sbb
clc
scas
jo
lahf
call
xchg
cs
sbb
sub
mov
cwtd
sbb
and
enter
inc
movsl
jg
jnp
push
fmul
std
ficoms
mov
mov
enter
sub
inc
inc
add
add
fs
ja
cmpsb
or
es
adc
cmp
lahf
icebp
jmp
add
cmpsb
cli
sbb
and
mov
lods
xchg
and
or
data16
test
sbb
ds
add
adc
or
push
mov
push
push
repz
int
cmp
mov
out
fbld
adcl
or
or
jbe
lods
and
jecxz
cmpb
loopne
loopne
outsb
mov
in
pop
out
rcrl
dec
out
int
aad
inc
dec
and
mov
lea
inc
adc
jmp
fistpll
xchg
jmp
pop
xchg
mov
nop
enter
lcall
push
daa
sub
das
pop
lock
int
mov
ljmp
cmp
movsl
inc
or
fistps
call
not
gs
shlb
movsl
lds
cmp
in
iret
jmp
aad
mov
dec
loopne
mov
adc
lret
in
in
inc
pop
ds
sub
dec
sbb
pop
adc
or
dec
gs
inc
inc
and
ret
mov
adc
mov
shl
push
pushf
jae
push
lods
shrb
xor
clc
mov
push
enter
sbb
pop
mov
add
cld
push
xchg
dec
test
mov
ds
mov
jp,pt
cmp
mov
mov
js
call
fisubl
in
lcall
dec
gs
xchg
and
lods
ja
dec
hlt
mov
inc
leave
or
movsl
and
and
jmp
lret
add
inc
call
xchg
cmp
rorl
mov
or
ret
adc
pop
test
adc
rcrb
jg
jmp
fnstenv
rolb
or
outsb
dec
cld
in
fisttps
and
jnp
shrl
imul
jmp
shrl
movsl
push
push
adc
jmp
in
adc
pop
decb
in
adc
dec
add
leave
lds
std
cli
arpl
jbe
push
push
dec
rorb
leave
je
test
push
add
bound
push
push
or
inc
cmp
std
pop
aad
shlb
in
mov
push
les
sub
cmp
jo
or
push
cmp
ja
es
mov
sub
movsb
adc
cmp
lret
jge
sub
sub
jmp
jl
loopnew
xchg
inc
dec
es
mov
xchg
sub
jge
jg
es
adc
push
adc
repz
into
mov
pop
dec
arpl
leave
call
inc
fnstcw
dec
test
in
in
push
sub
inc
add
ja
dec
lock
or
sbb
inc
mov
jp,pt
inc
mov
in
dec
ret
push
inc
mov
jmp
adc
les
adc
xor
in
loopne
das
push
xchg
mov
push
pop
andl
pop
push
xchg
jo
xchg
out
push
sub
xchg
push
lock
hlt
popa
clc
push
sub
loop
ljmp
xor
xchg
lods
outsl
ja
or
xchg
or
insb
sbb
pop
call
xchg
rorb
adcb
push
movsl
sbb
out
jle
addl
mov
sar
xchg
out
and
sar
mov
fsubl
outsb
shl
jno
xchg
or
and
and
out
xor
xorb
jns
jle
lcall
mov
jno
dec
inc
mov
mov
sub
push
jmp
jecxz
inc
dec
jl
cmp
jle
fidivl
fsubl
cmp
push
jns
inc
call
adc
xchg
mov
push
fs
and
mov
cmpsb
sbb
out
scas
mov
xlat
stos
gs
adc
lock
mov
lea
and
xchg
lcall
add
inc
sbb
aaa
or
push
or
sub
sub
jbe
test
inc
ficompl
mov
push
lcall
push
xchg
cmp
test
and
jns
lret
or
push
push
andl
stc
out
enter
sub
push
or
add
mov
adc
push
in
insb
mov
sti
and
das
sub
rolb
lret
and
cmp
pop
les
daa
pop
aad
and
lods
ficoml
mov
mov
in
add
cli
mov
leave
sbb
or
dec
popa
cmp
dec
sahf
push
cli
in
dec
ret
bound
rorl
lock
adc
pop
dec
lahf
aas
loope,pt
mov
mov
pop
xchg
dec
cmp
das
in
rclb
dec
xchg
cmp
mov
xchg
sub
rolb
inc
imul
jmp
pop
insb
std
stos
popf
rcr
lods
fsubl
rcll
pop
mov
das
or
ffree
add
lret
xorb
data16
mov
adc
negb
or
subl
sub
jecxz
push
mov
loope
mov
xchg
mov
mov
imul
mov
add
adc
and
and
scas
in
loopne
cmp
jg
out
mov
fnop
repnz
std
cmp
lock
sub
inc
orl
jmp
mov
cs
adc
cmp
das
push
xchg
lea
out
cmp
test
xchg
mov
pop
inc
cmc
icebp
and
movsb
aaa
mov
out
je
mov
call
pop
add
les
decl
dec
rorl
adc
jo
mov
gs
xor
and
subl
and
out
stc
push
push
cwtl
mov
leave
cmp
jmp
dec
aad
outsl
xor
jle
sub
cmp
lds
enter
xor
and
loopne
repnz
ret
repz
sbb
xor
mov
pop
dec
mov
push
pop
fucom
aas
lret
lret
xchg
push
mov
jecxz
imul
je
mov
movsb
mov
aas
add
les
in
cwtl
lea
nop
adc
cltd
mov
xchg
or
inc
das
xor
and
ds
lret
xor
and
xlat
lcall
shrl
orl
adc
jmp
insl
add
pop
and
xchg
xchg
or
adc
mov
xor
inc
push
fildl
sub
push
push
iret
xchg
call
mov
xor
clc
mov
loope
and
mov
lods
push
mov
shll
jns
mov
divb
xchg
imul
mov
ret
sub
dec
inc
and
cmp
or
mov
xor
movsl
std
das
repz
xchg
sub
das
pop
and
push
mov
lods
push
cmp
fistps
cmp
jne
rcrl
ljmp
and
rorb
fcomip
pop
sbb
xor
dec
stos
bound
and
cltd
jae
shl
inc
mov
jecxz
dec
sbb
outsl
repnz
pusha
cmpsb
ret
sbb
jo,pn
mov
xor
std
sub
jle
inc
loop
push
icebp
lods
test
or
mov
out
cmpsl
push
pusha
cltd
std
mov
je
push
and
inc
ficoms
xchg
mov
and
adc
sbb
or
aam
or
xorb
pop
sti
and
jmp
cs
rcrb
mov
sub
xor
push
sbb
mov
and
xchg
jle
cmp
lods
imul
jle
outsb
cmpsb
ror
inc
insb
jg
add
loop
adc
xor
sub
add
mov
sarl
fstps
jge
and
adc
sbb
adc
and
lret
mov
sub
xor
xchg
movsb
adc
inc
cmp
xchg
pop
sub
jg
loope
adc
add
cli
enter
xor
push
testb
lret
in
adc
mov
leave
dec
call
pop
jne
sbb
dec
jl
data16
or
lret
cmp
mov
fdivrs
jbe
lea
xchg
lcall
xchg
or
jb
mov
das
or
inc
cwtl
adc
leave
lahf
add
sar
add
mov
enter
xchg
sbb
pop
ret
push
sub
imul
push
add
mov
sub
sbb
pop
ret
clc
add
dec
pop
add
xchg
inc
push
add
xchg
or
mov
in
scas
mov
jle
sbb
pop
mov
loop
jb
mov
in
jb
dec
xchg
xchg
scas
xchg
mov
sub
xchg
je
xchg
popf
mov
and
test
sub
dec
rorl
in
jge
test
inc
ds
hlt
and
loope
dec
scas
adc
pop
cmpl
adc
rclb
sub
pop
sub
and
mov
daa
add
add
shll
sub
inc
jl
dec
inc
sub
jl
and
repz
pop
mov
out
shlb
dec
aam
incl
mov
and
in
ljmp
mov
push
fsts
cli
xor
xchg
jns
push
mov
in
mov
add
sub
mov
pop
outsb
mov
mov
xor
ss
mov
push
mov
int
jns,pt
jns
xchg
and
sbb
bound
or
xor
lcall
bound
ret
dec
xor
push
add
and
jp
iret
sbb
loopne
xor
imul
xor
dec
or
mov
jns
add
sbb
ss
out
pusha
sub
jb
adc
sub
xchg
pop
nop
and
sub
sub
jbe
in
or
xor
and
jns
add
cmp
or
sbb
xor
cli
pop
and
inc
inc
and
jns
add
mov
inc
enter
inc
inc
mov
repnz
push
jno
pop
pop
inc
dec
dec
mov
repnz
add
jb
pop
nop
push
and
add
inc
pop
loop
psllw
les
pusha
dec
mov
repnz
jb
pop
nop
push
mov
dec
test
jo
cmp
sub
and
and
jns
add
jmp
test
jl
cmp
stos
xor
push
dec
and
aas
cmp
inc
jb
pop
nop
mov
inc
in
das
and
pop
inc
xchg
and
inc
repnz
sbb
sbb
inc
pop
loop
sbb
sbb
test
mov
and
and
js
and
lock
repnz
sub
dec
jg
sbb
in
mov
sub
nop
dec
pop
addl
fdivrs
inc
cmpsl
xor
sbb
pop
sarb
xorb
and
hlt
mov
mov
data16
mov
lret
mov
add
insb
xor
test
cwtl
enter
mov
add
insb
inc
andl
fsubl
inc
enter
mov
add
insb
push
adcl
mov
adc
mov
pusha
add
mov
inc
fs
lea
insb
or
ss
je
lea
jl
rclw
inc
mov
ds
orb
mov
push
sbb
nop
mov
out
mov
inc
cwtl
adc
mov
pushf
sbb
mov
adc
or
lea
mov
mov
pushf
mov
cmp
push
add
push
pop
pop
es
mov
pop
rclb
shlb
sbb
fcompl
clc
test
cmp
xor
push
xchg
cmp
push
cmpsb
and
jno
adc
xor
mov
inc
or
sbb
pop
mov
js
cmp
adc
fs
je
push
mov
pop
std
push
lret
or
adcl
adc
mov
and
mov
xchg
addr16
push
adc
adc
adc
cmp
dec
xor
sub
sub
adc
adc
or
jl
or
mov
nop
hlt
lret
enter
xlat
mov
jmp
add
add
adc
xchg
mov
pushf
or
cmpsl
sub
inc
sbbl
out
or
push
lea
int
bound
mov
add
in
add
add
cmp
cmp
addl
cmpsb
cmp
daa
jo
cli
icebp
adc
xchg
push
imul
das
xor
and
imul
add
jl
sub
sub
and
mov
xchg
fldcw
cmp
popf
notl
fs
jbe
push
popf
nop
out
jne
and
pusha
cmp
dec
sbb
enter
or
push
lods
mov
repz
test
push
jmp
jno
mov
dec
or
jb
or
jno
mov
sub
cld
cltd
push
mov
inc
sub
lea
lahf
lea
mov
add
mov
add
xor
push
push
add
sbb
loop
test
add
call
loop
push
cmp
mov
adc
ja
pop
nop
adc
push
nop
pop
mov
cmp
in
sub
inc
inc
add
jp
ret
push
stos
in
push
and
push
sub
pop
pop
sub
sbb
sub
adc
enter
sub
jo
sub
icebp
enter
sub
mov
repnz
pop
nop
jb,pn
jnp
test
das
or
aad
inc
icebp
arpl
jg
cmc
cmpsb
add
jbe
ret
push
ljmp
scas
clc
inc
scas
xchg
xor
and
and
repz
mov
repnz
test
les
or
sub
ljmp
test
imul
loop
pop
push
loope
call
mov
sbb
or
push
inc
add
nop
lret
mov
xor
push
rclb
movsb
in
outsb
xchg
sbbb
push
push
lods
bound
inc
rcrb
scas
sub
cmpl
mov
call
mov
jmp
lea
insb
push
les
repz
mov
add
call
adc
jae
push
sbb
mov
or
fs
xchg
jnp
sbb
sub
js
stc
into
mov
mov
xchg
call
cltd
sub
inc
or
imul
mov
out
jno
rorb
enter
cvtpi2ps
jne
xor
mov
rcrb
repz
jnp
mov
pushf
stc
xchg
jbe
enter
in
fsubl
dec
jp
mov
mov
jmp
gs
movsb
gs
mov
dec
and
gs
mov
and
pop
lea
jae
inc
inc
rolb
ljmp
mov
jmp
xchg
inc
adc
sub
unpcklps
ret
inc
dec
inc
lds
mov
mov
ja
test
testb
scas
add
loope
das
lods
insb
fs
mov
pop
or
jp
push
adc
pop
dec
sbb
fdivrs
movsb
push
sahf
sub
and
and
or
lds
push
mov
push
test
dec
push
add
adc
nop
gs
mov
jle
mov
imul
rcrb
ror
push
and
add
or
push
push
add
stos
add
jmp
repz
inc
sub
bt
jae
mov
lret
pop
leave
ret
inc
pop
and
out
repz
push
cmp
in
pusha
repnz
nop
cmpsb
jne
adc
mov
mov
cmp
inc
inc
push
mov
or
call
int3
in
sbb
sbb
mov
sub
or
push
repnz
add
cltd
xor
pop
mov
pushf
aaa
cwtl
out
shl
enter
mov
and
gs
dec
and
aaa
imul
or
mov
inc
jmp
mov
and
adc
inc
sbb
or
std
inc
pop
push
gs
xor
xlat
mov
jle,pt
mov
loop
add
add
lds
inc
subl
jl
dec
sbb
dec
jmp
mov
sbb
dec
movsb
or
jl
leave
fists
cmp
fcompl
sub
aad
sbbl
int3
aas
aas
dec
dec
adc
or
cmpsl
and
push
add
les
or
adc
mov
pusha
clc
das
clc
add
cmp
push
dec
pop
stos
mov
shll
popf
lret
adc
shll
mov
lock
into
xrelease
sbb
rorb
mov
jbe
pop
hlt
in
xchg
cmp
rol
and
leave
mov
mulb
cmp
mov
lret
sbb
and
push
inc
cmp
jb
adc
jb
or
xor
mov
std
nop
out
xchg
imul
lods
jge
movsl
sbb
outsb
adc
roll
adcl
loopne
xchg
pusha
dec
or
jl
adc
test
lea
xchg
inc
xor
movsl
sahf
sbb
lock
or
adc
adc
push
movsl
mov
xor
icebp
and
popa
clc
lods
shrl
fsubrs
and
inc
mov
mov
lods
push
add
inc
add
push
and
cmp
push
pop
ret
mov
daa
sub
dec
mov
mov
xchg
std
xchg
dec
sub
jmp
mov
push
mov
les
adc
lods
cwtl
mov
sbb
add
mov
mov
add
jl
jo
xor
gs
cmp
push
add
xchg
mov
cli
push
seto
fidivrl
sbb
xchg
pop
scas
and
call
mov
int3
lods
mov
xlat
movsb
out
test
cmp
sarl
out
subl
stos
add
jnp
adc
gs
out
push
inc
push
adc
loop
mov
jg
dec
out
xor
and
dec
mov
and
add
fwait
xor
stos
mov
cmp
loope
mov
jb
das
adc
in
test
xchg
cmp
inc
add
add
add
test
cmpsb
or
int
push
dec
imul
add
sbb
in
pop
into
shrb
or
add
bound
pop
inc
test
or
mov
inc
scas
dec
xchg
test
xor
test
mov
pushw
sbbl
pop
and
xchg
lfs
aas
stos
dec
mov
repnz
jb
mov
mov
nop
add
jae
jno
jo
xor
and
push
push
sbb
inc
test
bound
add
cli
inc
test
mov
sbb
rcrl
stos
in
in
dec
out
jnp
leave
mov
push
test
adc
inc
mov
pop
sub
cmp
repnz
push
xor
mull
fprem
outsl
mov
cmp
mov
cmp
xchg
or
outsb
mov
cld
sahf
gs
ficoms
jg
push
jmp
popf
shlb
out
enter
push
mov
rorl
pop
pop
daa
fnsave
shrb
push
jno
dec
cmc
sub
or
push
int
das
test
inc
cmp
push
test
fsubs
je
shll
pop
sub
js
movsb
sbb
lock
inc
mov
lock
loop
leave
pop
hlt
jo
or
test
outsb
dec
pop
lea
movsb
inc
xchg
xor
xlat
fiadds
cmpl
or
lods
pop
mov
in
push
or
mov
sbb
sbb
inc
mov
jg
add
in
and
leave
dec
sub
or
xchg
rcl
jbe
test
fcompl
cwtl
or
mov
cmp
cmp
xor
pop
loop
cmc
inc
pop
imul
inc
ds
ds
add
sub
and
fmull
adc
push
and
in
inc
xor
ret
adc
and
sub
xchg
xor
or
pusha
cwtl
adc
repnz
imul
cli
add
lret
jmp
fisttpl
add
clc
imul
inc
ja
fimull
cmp
mov
repnz
ret
mov
or
mov
adc
mov
mov
std
mov
shlb
loopne
popa
jl
sbb
cli
data16
mov
mov
jne
movsl
add
sbb
jg
test
push
add
inc
enter
hlt
inc
je
sub
test
js
dec
clc
mov
adc
adc
add
jp
sbb
icebp
lcall
shlb
mov
and
dec
pop
jnp
lock
push
mov
ret
xchg
or
xchg
std
fcoms
loopne
dec
repnz
mov
ret
hlt
scas
sahf
xor
lret
push
pop
dec
add
lcall
cli
jno
data16
outsl
xor
mov
idivb
or
adc
pusha
dec
sti
xor
leave
insl
jnp
xchg
aaa
mov
fnstcw
pop
sbb
dec
push
movsl
inc
push
jbe
push
adc
xchg
aaa
sbb
inc
or
call
popf
adc
mov
xchg
pop
ret
lods
loope
push
test
sub
or
mov
jne
popf
jb
adc
les
sti
mov
addr16
call
loope
pop
in
adc
push
leave
adc
inc
adc
cs
add
push
mov
add
js
jmp
addb
sbb
or
mov
aaa
mov
test
inc
mov
shl
jne
mov
sbb
add
inc
adc
inc
pop
test
sbb
pop
xorb
les
outsl
and
pop
jne
imul
mov
xchg
jg
xchg
push
adc
xor
adc
adc
push
pop
test
or
iret
inc
and
xchg
aam
rclb
push
mov
stc
inc
jae
or
add
shld
shl
ret
mov
mov
loope
cmpsl
loop
adc
pop
inc
and
xor
cld
inc
mov
pop
out
pop
inc
or
inc
jae
std
orb
push
pop
xchg
cmp
sti
push
push
divl
inc
pusha
arpl
mov
dec
mov
ret
jns
out
imulb
adc
mov
pop
lea
fs
cwtl
popf
jne
mov
cmpsl
out
mov
dec
add
sub
test
xor
mov
je
test
out
mov
adc
mov
je
aaa
in
cltd
jmp
dec
push
pop
adc
call
xchg
cmp
add
addr16
lcall
and
pop
into
xor
nop
dec
xor
daa
clc
add
jns
xchg
jl
les
movsl
cmp
push
das
movsb
mov
stos
out
add
add
scas
mov
mov
adc
cmp
ja
sub
or
iret
xchg
dec
stc
psrlw
jmp
mov
mov
jl
adc
mov
push
adc
jmp
scas
mov
movsb
out
mov
inc
jb
push
cmpsb
test
test
xor
hlt
jge
stos
hlt
jge
ds
sub
mov
mov
std
jge
cmp
call
ss
in
dec
sbb
shll
mov
pop
out
jmp
and
mov
rorb
out
movsb
je
test
jb
inc
and
pop
repnz
roll
fs
add
shl
xlat
inc
jl
sub
cmp
idiv
test
ret
add
test
je
jl
dec
sbb
lahf
shl
mov
aam
outsb
xor
out
cld
sbb
cld
daa
pop
iret
nop
cmpsl
cwtl
into
lock
mov
xor
pop
lret
mov
sbb
leave
lret
and
pusha
jmp
mov
shr
ret
test
cli
fcompl
mov
sbb
or
mov
xchg
test
sbbl
pop
xchg
sbb
imull
mov
push
dec
jge
out
jge
adc
xchg
add
sbb
push
xorl
jp
push
je
rolb
mov
cmp
out
sub
dec
mov
je
sub
adc
push
sbb
and
in
push
out
loop
or
inc
jo
test
loope
inc
or
jo
das
mov
sub
test
push
movb
loope
and
pop
out
imul
aad
popa
mov
push
cmp
mov
pop
cmovbe
enter
fdivp
stc
addl
push
push
lret
rcrb
aam
jne
cmp
inc
xchg
subb
mov
fs
inc
jmp
mov
jne
dec
or
fnstcw
cmp
mov
testl
out
adc
std
lahf
push
inc
add
cmp
cmp
pusha
pop
sbb
lret
aam
imul
shl
and
in
pop
jno
inc
lcall
daa
adc
movsb
scas
in
adc
adc
call
mov
repz
inc
scas
in
fadds
and
inc
xchg
fadds
mov
clc
push
cwtl
xlat
mov
hlt
pop
scas
jl
push
adc
nop
xor
jmp
lret
xlat
cmp
xor
and
sbb
push
inc
cld
mov
sarl
cs
sub
dec
push
fmull
jne
mov
dec
mov
adc
adc
int
xchg
cmpsl
or
test
jne
push
or
jmp
adc
dec
cltd
inc
adc
jp
mov
adc
test
pushl
push
cwtl
sbb
or
dec
sbb
mov
repnz
pop
cs
call
jno
inc
out
addr16
test
inc
add
clc
nop
out
sub
adc
fildll
out
xchg
test
inc
and
cmpsb
cmp
pop
sarb
ret
fnstcw
cmp
add
enter
mov
stc
jg
aaa
or
je
cwtl
lahf
jg
cmpsb
or
je
xorl
sidtl
or
daa
inc
mov
and
push
push
pop
adc
call
add
mov
or
add
and
mov
fadds
add
scas
mov
xor
in
lock
xor
or
pushf
shll
cmp
and
jb
jne
jle
neg
xchg
sbb
and
lret
jp
maxps
pop
mov
mov
and
das
and
sub
dec
insl
insb
mov
xchg
push
mov
loope,pn
adc
imul
bnd
dec
cli
fstps
jb
iret
dec
jo
jmp
enter
stc
jle
lea
mov
je
sub
adc
push
jnp
out
sbb
sub
add
mov
push
sub
daa
bound
push
inc
push
mov
sbb
imul
call
cmpsb
enter
in
pop
outsb
rcrb
push
and
loope
jo
out
mov
pusha
xlat
push
dec
out
mov
mov
pop
incl
cmp
add
call
cmp
in
loopne
lret
or
inc
adc
sahf
add
mov
sub
test
ss
les
sbb
lds
dec
push
jle
push
pop
xchg
mov
mov
mov
ret
enter
pop
movsb
stc
xchg
mov
lds
aad
sub
cmp
popf
movsl
jg
cmp
ljmp
jnp
inc
or
mov
or
lds
cmp
add
push
cmp
lock
jg
mov
add
fsubl
xchg
add
and
adc
int
mov
mov
nop
or
into
or
push
sbbl
add
movsb
sub
cmc
hlt
mov
lock
adc
and
sub
dec
adc
lret
cmc
icebp
cmp
stos
in
jecxz
lods
add
fs
fdivr
cmp
lock
mov
es
imull
cmp
mov
insb
push
adc
out
push
movsl
pushl
mov
das
xor
xchg
add
nop
lret
lret
jno
xchg
psubb
fisubl
xor
out
shrb
dec
xor
out
out
ret
mov
jno
cli
jno
jg
aad
sbb
call
mov
imul
or
gs
call
stc
int3
test
shl
ljmp
nop
add
and
push
clc
subb
push
cmc
pop
hlt
xchg
shll
add
jecxz
inc
imul
andl
test
adcb
and
xchg
data16
dec
outsl
inc
inc
pushl
cltd
ja
adc
adc
or
jmp
cmp
movsb
mov
imul
rorl
inc
outsl
sar
ja
jl
mov
mov
mov
leave
imul
insl
xchg
outsl
mov
mov
xchg
loop
mov
je
lcall
enter
ljmp
loop
jle
jmp
sbb
push
adc
jle
data16
sbb
xchg
xchg
js
jmp
popf
push
arpl
sbb
push
push
push
jmp
pop
push
push
movsl
dec
or
mov
or
mov
inc
lds
mov
xor
nop
mov
lods
cmp
push
xchg
sti
fsubl
shlb
xchg
mov
lea
push
cli
cli
cmc
dec
mov
push
mov
rorl
or
stos
aas
mov
or
aam
les
sahf
addb
mov
xor
dec
inc
jmp
jbe
les
adc
mov
nop
add
cld
repz
jne
or
cmpl
pop
bound
and
sub
or
xor
inc
shll
mov
movq
cwtl
dec
in
sbb
push
cmpb
add
push
or
stc
and
daa
cli
fucomp
or
add
push
imul
mov
and
mov
sub
or
add
cmp
mov
mov
inc
sbb
unpcklps
hlt
stos
imul
and
roll
inc
bswap
sub
imul
or
repz
jmp
and
mov
dec
sbb
rorl
int3
pushl
test
mov
decl
push
add
out
hlt
jb
sbb
jae
pop
mov
adc
cwtl
fucomip
xor
lods
cwtl
jg
xchg
mov
jnp
cmpsb
ja
and
bound
insb
or
sbb
pop
clc
loop
sbb
popf
subl
sbb
mulb
or
jmp
sti
rcll
les
lods
xor
in
push
adc
bound
jne
cli
jg
or
call
iret
nop
clc
push
dec
and
fwait
daa
pop
mov
sub
data16
xor
mov
sub
je
mov
jb
dec
imul
inc
loopne
jnp
xor
clc
outsl
icebp
rcrl
dec
incb
push
sbb
xor
sub
xor
dec
mov
sub
jmp
and
xchg
pusha
stc
push
and
adc
test
sbb
test
xchg
mov
inc
pushf
mov
sbb
push
mov
xchg
pop
pop
sbb
scas
jo
sub
adc
stc
mov
test
mov
mov
or
push
inc
and
jne
cs
pop
jb
xor
in
mov
ret
xlat
cmp
test
inc
add
pop
aaa
push
dec
out
jo
dec
mov
push
hlt
test
enter
push
addb
xor
imul
mov
mov
inc
sub
test
or
cmp
jge
push
adc
insb
jle
jl
push
mov
mov
pop
fcompl
cld
xchg
push
stc
ficompl
in
or
jmp
jne
ret
dec
xor
mov
push
and
sbb
out
ss
sbb
pop
pop
xchg
das
and
lahf
inc
cmp
push
test
loop
mov
sbb
and
sbb
xchg
hlt
filds
add
dec
stos
pop
dec
mov
xor
or
shlb
jbe
xchg
loope
cmp
xchg
dec
call
xor
pop
adc
lea
push
leave
xor
lcall
cltd
mov
sub
js
add
xlat
or
es
mov
inc
push
imul
packuswb
xor
push
aam
rcrb
inc
popf
and
and
scas
notb
jne
pop
pop
sub
icebp
ds
cmp
xor
cwtl
lock
stos
leave
jl
rcr
cmp
lahf
and
dec
mov
dec
xchg
decb
or
and
push
inc
add
push
mov
jmp
and
sub
jg
in
fidivs
cmpsl
push
push
mov
push
sub
lea
je
jge
mov
add
pop
cltd
es
cmpl
inc
push
sahf
bound
push
mov
daa
and
je
fcmovu
stos
push
mov
inc
loopne
fs
rolb
add
push
add
pop
or
mov
sbb
adcb
sbb
mov
test
mov
cmp
add
icebp
in
cltd
inc
sub
and
xchg
sub
pop
jno
lcall
flds
push
stos
push
and
jo
inc
pop
icebp
jo
adc
push
or
mov
test
mov
push
xchg
mov
stos
add
cmp
adc
ljmp
pushf
adc
xlat
test
lcall
adc
loope
int3
xchg
or
mov
mov
mov
mov
mov
mov
mov
sbb
mov
ja
or
dec
fbstp
xchg
mov
mov
sbb
mov
adc
xchg
cli
test
sbb
inc
add
adc
pop
and
cmp
and
xor
pop
inc
sub
test
inc
aas
add
dec
adc
es
sbb
ljmp
inc
dec
subl
xor
stc
pop
cmp
inc
inc
push
daa
push
jge
jb
adc
jp
lods
and
mov
xchg
mov
dec
lret
mov
shlb
jbe
and
push
inc
enter
sbb
push
push
adcl
or
jo
out
xor
sub
and
add
pop
lahf
or
mov
dec
clc
dec
lcall
sar
mov
scas
or
inc
out
shr
dec
mov
add
lahf
js
push
fldenv
jo
add
enter
rorb
sub
ret
and
test
stc
out
sbb
mov
enter
out
shl
neg
xchg
popa
bound
and
shlb
xor
movsb
jg
data16
xchg
push
lods
andb
add
dec
push
outsl
enter
sbb
inc
inc
push
aam
mov
jo
jg
pop
sbb
int3
push
cmp
and
imul
push
stos
add
adc
or
shlb
fisubrl
adc
gs
and
sub
jae
pop
push
jno
enter
add
pop
stos
fldt
mov
fdivrs
bound
xor
dec
push
jle
and
enter
dec
sbbb
cmp
out
mov
out
dec
ret
es
inc
int3
sarl
add
in
mov
dec
sbb
cmpsb
or
push
in
ret
out
mov
sbb
movsl
jmp
adc
les
rcr
std
aas
mov
fdivrs
add
jne
cli
pop
inc
bound
cmp
jg
jae
adc
cmp
jae
incb
cmpsl
mov
adc
je
inc
mov
add
inc
mov
jmp
pop
mov
jp
cmp
xor
fists
adc
es
xchg
sub
mov
dec
add
sub
pop
aaa
test
add
mov
ja
jo
xor
shll
push
cmp
xor
cmc
and
je
call
push
loope
or
xchg
jecxz
mov
outsb
mov
pop
into
test
dec
push
in
adc
xor
les
push
jbe
aaa
cld
or
sub
cmp
add
in
and
push
scas
adc
pop
lea
mov
or
mov
mov
test
sub
add
in
test
jae
xor
pop
adc
lock
nop
sbb
sub
movb
or
adc
mov
mov
std
insb
mov
mov
pop
pop
int3
fisubrl
in
jo
dec
cmp
sub
sbb
mov
mov
mov
cmp
xor
mov
sbb
xchg
pushf
aaa
mov
push
adc
addr16
push
outsl
or
test
in
xor
test
add
mov
in
mov
test
js
int3
fdivl
xor
push
sti
xor
mov
cs
bound
inc
cmp
mov
dec
pusha
scas
adc
mov
dec
outsb
in
mov
jnp
mov
test
faddl
dec
dec
mov
int3
mov
call
push
adc
xchg
pushf
push
inc
inc
movsl
xor
inc
push
enter
mov
ret
dec
ds
push
or
push
jno
add
and
hlt
add
jno
js
pop
inc
add
sbb
xchg
or
cmp
inc
lret
adc
in
addr16
outsb
pop
stc
rolb
mov
testb
mov
cmp
xchg
in
mov
dec
xor
ss
adc
adc
test
std
and
xchg
jg
push
mov
stc
inc
cmpsl
adc
xchg
or
push
pop
aaa
cltd
test
stos
mov
sbb
cltd
xor
les
cmp
call
pushf
fadd
lds
push
push
sub
mov
test
clc
test
movsb
sahf
popa
outsb
push
pop
nop
test
adc
mov
ds
rorb
test
mov
test
jmp
sti
negb
rolb
mov
jb
loop
mov
sahf
outsl
jle
loope
xchg
outsb
xor
mov
jge
jp
popf
or
pop
jmp
or
add
pop
cmp
andb
adc
jns
jle
outsb
sahf
xlat
or
jno
mov
push
push
jg
xor
cmpsl
xor
aaa
in
inc
pushf
add
dec
adc
fwait
movsb
cli
clc
mov
pop
mov
or
ud0
inc
and
dec
dec
jno
test
in
jbe
mov
sub
mov
sti
jecxz
bound
add
ja
cs
mov
xor
xchg
in
dec
sbb
adc
fisttps
roll
push
add
mov
and
add
ja
inc
cmp
push
sub
sbb
jg
enter
pop
es
loope
loopne
daa
scas
jae
cmp
gs
sbb
mov
or
in
fyl2x
or
push
enter
popa
jmp
dec
and
mov
repz
add
sbb
and
mov
sbb
arpl
or
nop
add
adc
jmp
push
push
push
pop
push
push
pop
dec
or
inc
mov
inc
inc
or
test
test
or
jo
ret
cltd
inc
adc
popa
or
add
mov
neg
sub
les
cmpsb
sub
enter
sub
xchg
mov
stos
add
or
out
adc
pushf
pop
sub
sbb
sbb
cltd
push
or
add
jle
add
sub
adc
sbb
lcall
sbb
or
add
jecxz
cmp
mov
fldl
jg
push
daa
sub
mov
push
sub
into
pop
dec
sub
adc
std
push
arpl
jge
mov
outsl
mov
xor
jp,pn
pop
shl
sbb
fcompl
mov
and
inc
mov
add
fs
popa
jmp
mov
mov
es
jns
stos
add
cmp
hlt
test
movlps
mov
push
sub
mov
stos
adc
movsb
push
cs
xor
fwait
jmp
xor
mov
test
fistps
shll
push
sub
sbb
test
add
and
add
inc
add
or
daa
xor
mov
repz
pop
jle
add
adc
or
pop
leave
or
push
sub
inc
add
mov
add
pop
loope
or
or
or
or
adc
adc
adc
dec
or
adc
ds
mov
cld
xor
xrelease
dec
mov
outsb
cltd
ljmp
aad
pusha
imul
fs
aad
jo
out
sub
jae
gs
lock
sub
sub
in
mov
sbb
or
pop
xchg
loop
data16
mov
sbb
jmp
dec
and
imull
mov
mov
or
xchg
xor
jnp
aam
jbe
je
mov
push
test
jno
mov
inc
ja
dec
push
clc
mov
add
lret
rcll
adc
fs
clc
cltd
gs
push
mov
jb
cmc
int
adc
stos
ja
push
test
mov
pop
sbb
xchg
xchg
inc
in
pop
das
mov
xchg
dec
loope
pop
icebp
or
adc
ret
fcompl
stc
shlb
adcb
dec
add
mov
data16
lds
mov
cmp
inc
mov
add
jg
les
lea
mov
or
inc
jmp
ds
cmp
jl
call
lahf
adc
popa
inc
jmp
push
xchg
inc
add
and
pop
jmp
loop
push
push
inc
insb
push
dec
push
jns
jmp
add
jae
stos
daa
int3
or
dec
jno
aam
ljmp
and
jne
pop
cmp
mov
test
mov
das
dec
mov
or
push
mov
stos
xor
add
clc
jo
mov
add
sbb
punpcklbw
int
jl
xchg
sarl
or
xchg
rcll
aaa
push
xor
sbb
mov
lock
push
shlb
fsubrp
loope
cmpsl
int
fstpl
movsb
mov
inc
out
adc
repnz
mov
out
ficoml
pop
mov
jnp
mov
jnp
cmp
lods
loope
dec
pop
xchg
stos
pushf
pop
daa
and
push
jmp
mov
pop
dec
aaa
push
shl
inc
fsts
insb
xchg
rol
inc
stos
addr16
pop
sub
or
nop
or
mov
out
add
adc
adc
cld
mov
out
cli
imul
xchg
or
clc
add
mov
xchg
and
sbb
mov
mov
mov
jb
xchg
mov
jb
jmp
daa
jmp
jg
cwtl
mov
arpl
sub
dec
cltd
adc
stos
xor
or
add
add
aas
add
add
add
or
or
mov
or
mov
dec
fwait
scas
pop
xchg
adc
sbb
shll
lea
push
push
mov
and
mov
dec
scas
adc
xorl
xrelease
repnz
add
ret
popa
shr
cmovns
cs
aaa
pop
dec
adc
push
add
imul
into
pop
in
dec
loope
jge
cmp
pop
lret
call
loopne
pop
push
arpl
mov
mov
inc
jo
jno
testb
xor
and
mov
mov
test
stc
outsb
mov
add
into
fistpl
xlat
in
repnz
pop
sbb
mov
dec
adc
xchg
adc
add
push
xchg
pushw
movsb
push
inc
pop
pop
push
loope
or
mov
test
xchg
push
xor
add
loopne
out
jmp
lea
dec
lea
add
gs
dec
rclb
pop
xchg
in
push
adc
decb
das
dec
repnz
xor
and
mov
xchg
push
test
cmp
je
movsl
lods
shll
add
pop
loope
push
movsb
mov
pop
push
shlb
fistpll
lock
push
iret
pusha
inc
pusha
loop
loop
loop
inc
fildl
pop
sbb
jge
adc
mov
and
cld
adc
test
or
push
out
fwait
and
icebp
jge
out
dec
outsb
adc
mov
and
xor
inc
shlb
aam
out
xchg
aas
repz
aas
inc
and
outsl
aam
mov
test
xor
fs
gs
les
jmp
sbb
mov
enter
sbb
xchg
lahf
jno
inc
int3
jbe
jle
ja
pop
insl
imul
fsubl
add
jle
inc
lahf
lock
xlat
sbb
mov
ds
movsl
xchg
mov
and
inc
sub
cli
add
adc
adc
xchg
pop
popa
sbb
dec
push
inc
mov
xor
sub
jge
pop
pop
ja
pusha
in
loopne
jmp
jge
lea
enter
mov
mov
mov
lea
in
pop
arpl
mov
cmp
cmp
jb
sbb
add
adc
les
dec
arpl
xor
adc
flds
fsts
fdivp
std
add
aad
jg
mov
jmp
sub
add
lods
or
lret
mov
xchg
push
or
mov
popf
mov
push
push
push
sbb
push
lahf
dec
mov
mov
adc
ret
insb
xor
aad
adc
jbe
add
cs
adc
dec
fisubl
ja
sub
cmc
mov
iret
add
cmp
das
jmp
nop
lds
mov
mov
adc
pop
sub
fidivs
sbbl
shr
lea
ljmp
icebp
in
or
mov
cwtl
and
xchg
fstpt
mov
and
mov
js
push
aas
clc
cmp
shlb
out
mov
mov
push
pop
iret
push
mov
in
or
adc
sub
call
cs
sti
push
in
out
and
enter
das
scas
adc
pop
test
or
incl
jl
or
loopne
imul
push
mov
adc
clc
push
xor
push
adc
push
push
dec
jle
jno
inc
pop
lret
clc
xchg
or
mov
arpl
cmp
adc
jl
test
pop
mov
jl
subb
mov
std
jg
lds
xor
jmp
dec
pop
jge
push
mov
push
shrl
pop
int3
ret
jmp
jge
add
ficompl
sbb
sub
inc
mov
outsb
ds
inc
stos
push
cmc
dec
jo
pop
mov
push
stc
push
les
or
aam
push
sub
in
jecxz
decl
movsl
call
inc
mov
pop
dec
sbb
arpl
push
dec
mov
call
dec
inc
call
insb
push
adc
xchg
into
dec
repz
addr16
and
pop
dec
fyl2xp1
das
xchg
add
add
loopne
cmp
sub
xor
cmp
js
sub
xor
rorl
pop
ja
and
inc
mov
aas
rcrb
mov
lea
out
sbb
adc
xor
jae
icebp
cmp
iret
lret
mov
insl
aaa
call
cmpl
push
jns
dec
cmp
push
jge
data16
lea
int3
add
jne
enter
ret
jle
dec
cmp
dec
cmp
mov
push
shlb
push
aam
flds
xchg
dec
test
popf
or
out
pop
mov
jle
lcall
jge
shl
out
movsb
xchg
clc
mov
or
pusha
mov
int3
mov
cltd
or
cli
inc
pop
jl
and
faddl
cmp
inc
les
lea
in
rolb
push
mov
call
fwait
jo
inc
in
aaa
fisubrs
lds
xor
pop
xchg
mov
cwtl
fcoms
adc
jl
jecxz
in
hlt
movb
jg
xor
jmp
ds
xchg
push
mov
cmp
ljmp
lcall
hlt
incl
pop
sbb
rorl
inc
int3
outsb
cltd
sarl
xchg
jae
jmp
and
adc
jg
bound
sbb
inc
jge
sub
adc
mov
xchg
jmp
jmp
insb
scas
mov
fwait
in
sub
movsl
dec
xchg
repnz
push
insl
cld
and
mov
or
popa
lahf
out
sti
and
outsl
cmp
je
and
cmp
es
es
pop
push
or
imulb
mov
std
divb
jp
repnz
inc
popf
mov
jl
add
xor
xchg
stc
aas
shrb
fists
jmp
call
lock
hlt
xchg
ror
aam
popf
sbb
push
sbb
call
xlat
subb
fwait
adc
stos
std
out
or
mov
dec
ljmp
mov
je
jbe
daa
push
mov
pop
iret
fs
jge
stc
stc
add
jmp
mov
nop
cld
dec
ljmp
dec
sti
and
inc
pop
in
repnz
and
nop
hlt
daa
out
inc
repnz
lea
push
mov
out
inc
jmp
jno
jns
dec
lahf
cmp
stos
xor
mov
notl
xchg
add
fcoms
outsb
jo
loope
sbb
pop
mov
mov
xor
idiv
mov
mov
movsl
call
adc
lahf
pop
xchg
mov
adc
jecxz
xchg
mov
cmp
mov
cmp
fnstcw
cmpsb
fs
lahf
inc
dec
adc
push
pop
cltd
inc
daa
daa
push
jg
sub
jne
popf
push
repz
jmp
scas
sbb
sbb
inc
xlat
int
push
rolb
and
add
icebp
xor
rdmsr
push
dec
push
daa
push
pop
and
pop
xor
or
jg
cli
or
jbe
push
addr16
int
and
xchg
and
mov
mov
push
fs
mov
les
adc
sbb
dec
mov
lods
sbb
jae
add
jp
incl
mov
add
push
shr
mov
outsb
and
sbb
pop
mov
xor
sti
xor
push
mov
rolb
les
test
fwait
mov
rolb
pop
push
or
mov
jmp
lds
mov
xchg
imul
test
jg
sub
and
fdivs
scas
mov
out
adc
scas
cmpsb
mov
loope
sbb
push
inc
adc
cmp
mov
push
jmp
xor
out
sub
jle
or
pop
fidivs
mov
popl
xchg
das
sub
or
test
rcrb
mov
adc
das
lret
push
sub
int3
insl
xor
pop
add
lcall
pop
mov
xor
dec
sbb
sbb
sub
leave
push
pop
jl
adc
sub
dec
or
dec
icebp
mov
jmp
inc
jp
or
ds
jl
xchg
adc
cmp
jge
imul
in
jle
fdivrs
test
test
xor
repz
inc
pop
mov
iret
stos
push
aas
or
and
fisubl
push
mov
int3
xor
mov
roll
sbb
outsb
nop
xor
lret
xchg
mov
dec
je
jle
push
mov
cmp
inc
xor
test
jl
adc
dec
pop
xor
xor
cmp
sarl
xchg
fstp
adc
scas
arpl
inc
jns
divl
mov
bnd
out
pop
push
cmpb
mov
ret
mov
repnz
adc
jbe
push
push
xor
imul
pop
adc
sbb
je
mov
inc
sahf
xchg
cli
mov
xchg
loopne
cmpsl
adc
and
je
fcomp
movsl
sbb
add
das
roll
inc
fwait
nop
and
add
loopne
mov
aam
icebp
enter
leave
lods
dec
push
dec
push
out
push
popf
ljmp
cmp
mov
cmpsl
jge
fstp
ss
stc
jp
cmp
pop
fstpl
pop
mov
into
cmp
sbb
cmp
push
call
mov
popa
mov
insl
out
lret
pop
push
fs
call
popf
push
mov
dec
add
stos
jno
inc
aaa
and
aas
jl
pop
push
cmc
jno
push
call
push
arpl
and
lahf
ljmp
add
push
lock
and
mov
and
xchg
pop
push
dec
call
mov
mov
std
jnp
sub
mov
aam
pop
and
mov
adc
sub
iret
xor
push
xchg
add
mov
push
inc
shl
push
js
add
and
scas
pushf
jmp
lahf
jbe
loop
or
dec
or
jae
xchg
movsb
mov
scas
and
inc
orb
fbld
imul
mov
inc
inc
add
and
inc
out
pop
ss
and
loop
jg
push
in
xchg
xor
rcrl
decb
mov
cmp
push
mov
push
sti
lahf
xor
mov
xchg
cmpsl
lock
in
mov
mov
loope
add
jecxz
pop
stos
inc
cmpsb
arpl
pop
loopne
push
aam
jmp
mov
cmp
lock
lcall
repnz
into
push
push
das
push
movsb
aas
ljmp
adc
cmpsb
dec
call
xchg
dec
push
adc
add
jmp
sub
xor
mov
mov
idivl
lods
lret
sub
addr16
leave
pop
out
mov
mov
push
add
jns
aaa
xor
out
dec
mov
sbb
ss
lods
xchg
inc
js
push
outsl
dec
mov
ss
mov
ret
dec
out
lret
bound
and
push
lods
dec
lods
test
jl
sti
repz
mov
push
mov
inc
imul
pop
adc
jbe
jmp
addr16
xchg
jg
nop
cld
leave
out
decl
jp
push
jl
call
inc
sub
leave
std
inc
movsb
mov
cs
into
rcl
orb
cmp
xor
push
xchg
push
jl
inc
jmp
xchg
adc
insb
inc
arpl
xchg
js
jp
lahf
inc
add
cwtl
nop
test
ret
jp
and
cmp
lods
fcomp
add
xlat
fdivr
ljmp
push
or
call
mov
mov
or
imul
pusha
repnz
pop
in
mov
call
imul
dec
inc
inc
out
call
cmp
test
adc
cmpsl
lods
jl
pop
stos
test
enter
je
push
dec
and
push
sbb
pop
test
out
fs
dec
mov
sarb
test
xor
lods
dec
ficoms
sub
push
cld
mul
or
orb
and
test
sub
mov
sbb
mov
xchg
adc
loopne
pop
or
inc
jge
stos
cld
call
rcll
daa
rorb
mov
adc
enter
xchg
adc
movsl
dec
scas
lds
push
push
orb
subb
mov
aas
xchg
lcall
push
nop
sub
inc
fldcw
sub
mov
or
decb
inc
mov
inc
xchg
adc
or
adc
cld
cmp
call
push
adc
pop
xlat
or
jae
inc
sub
es
dec
call
mov
or
jne
jp
leave
in
or
push
adc
nop
pop
mov
and
test
jmp
or
add
xchg
and
adc
or
or
sub
test
cld
movsl
inc
clc
dec
push
hlt
fs
sbb
or
push
push
dec
push
sbb
and
and
sub
nop
xor
cmp
inc
sbb
xchg
and
push
enter
xor
fs
xchg
and
je
js
jl
sbbb
or
xchg
and
fs
xor
xchg
and
fs
or
xchg
and
nop
aam
fsubs
loopne
in
call
lock
hlt
rolb
clc
movsl
or
pop
push
and
enter
enter
xor
sbb
xchg
and
sub
sub
xor
xor
cmp
xchg
and
enter
xor
or
xchg
and
enter
xor
or
xchg
and
nop
xor
inc
mov
enter
xor
inc
shlb
nop
enter
shlb
aam
fmuls
inc
add
or
cld
fs
push
hlt
fs
sbb
or
xchg
and
nop
fmul
aam
shlb
int3
sbb
or
mov
xchg
nop
mov
mov
lds
pop
xchg
adc
sbb
hlt
adc
adc
popf
pop
popa
loope
pop
sub
mov
sub
cmp
sbb
in
and
lret
pop
dec
shrl
mov
loop
fidivrs
test
adc
aad
mov
mov
pop
aam
sbb
repz
ljmp
or
inc
call
mov
pop
call
call
push
jnp
mov
hlt
out
fnstsw
outsl
movsl
loop
mov
pusha
cmp
je
mov
sbb
push
mov
bound
rcl
push
loop
or
gs
dec
mov
dec
sub
int
push
inc
mov
sub
nop
jmp
daa
jge
test
xor
ret
add
test
fistl
not
xor
sahf
mov
pop
pop
stc
out
int
das
jmp
mov
out
mov
xchg
in
outsl
sti
cmp
lcall
xlat
jae
dec
jo
in
in
push
lret
daa
fbld
jge
dec
xchg
imul
inc
push
popf
jns
xchg
push
outsb
pop
movsb
xchg
jmp
inc
sub
ret
cmp
cmp
dec
adc
mov
inc
iret
aaa
sbb
test
rcr
mov
es
scas
popa
add
pop
outsl
test
jo
xor
nop
shlb
xchg
pop
push
movsb
add
adc
inc
mov
mov
pushw
and
xchg
xchg
inc
xchg
in
lahf
and
leave
mov
shlb
pop
xor
das
call
mov
or
testl
xchg
xor
push
dec
rcrb
lahf
cmp
mov
mov
xor
inc
and
adc
and
push
push
mov
shlb
loopne
movsl
xchg
jg
rcrl
in
jl
movsl
mull
pop
pop
inc
shrb
in
das
clc
insl
frstor
jmp
mov
xlat
lds
sbb
cli
pop
jg
fs
movsl
xchg
cmp
sub
adc
popf
hlt
pusha
je
fidivs
pop
in
mov
xchg
push
subb
jbe
shlb
mov
jmp
jge
push
callw
popf
add
cwtl
lock
push
sub
mov
cmc
dec
fisubl
pop
out
fbld
cltd
sbb
sub
loopne
jecxz
movsl
loopne
loopne
pop
xor
cmc
push
add
loop
into
mov
jns
or
aad
add
shlb
push
xor
in
jae
jge
push
hlt
mov
xor
testb
cmp
inc
jae
in
repnz
ffreep
jo
pop
movsl
mov
mov
xchg
mov
int
aaa
dec
pop
popf
sti
dec
cmp
lock
andb
aam
movsl
inc
push
dec
cmpsb
dec
mov
vpsrlq
mov
fidivrl
mov
mov
int
stc
ds
jne
or
cmp
pushl
enter
mov
int
jp
out
popl
or
push
xor
jne
bound
aam
and
jmp
xor
aam
fdivrl
adc
inc
loop
mov
pop
lcall
imul
jmp
sub
jne
or
and
pop
clc
leave
sub
rcrb
pop
sbb
xor
mov
leave
lea
cmp
sub
sbb
push
adc
push
fs
and
cmpb
mov
sbb
push
roll
pop
adc
mov
mov
flds
mov
ret
jbe
pop
xchg
mov
and
dec
test
push
adc
gs
in
pop
mov
adc
fcmovu
test
adc
cmp
sub
sbb
idiv
inc
fmuls
fldl
xchg
adc
mov
or
shlb
and
pop
add
add
add
add
add
inc
arpl
add
rolb
push
and
popf
dec
jnp
push
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
ret
es
notb
fstpl
ljmp
popa
jno
mov
push
push
add
cltd
or
loope
mov
push
cmp
pop
ja
popa
push
out
mov
sbb
insl
call
jo
movsl
arpl
mov
xor
fdivrl
jns
push
aad
rcr
xchg
sub
or
sub
sbb
mov
repnz
mov
dec
jno
repz
inc
mov
sbb
pop
in
insl
push
mov
hlt
movl
test
add
std
in
leave
add
fldcw
arpl
cmp
or
cmp
imul
jno
mov
cmp
aam
dec
std
test
or
insb
add
mov
mov
xor
filds
inc
iret
or
roll
stos
lods
xor
cmp
xlat
add
push
popa
sarb
and
les
add
shld
sub
add
or
and
jmp
outsl
das
adc
dec
push
sarl
inc
fdivl
add
add
adc
out
mov
mov
push
movsl
in
lahf
xor
mov
pop
js
stc
rorb
add
push
loope
add
insl
or
add
hlt
cmp
lahf
bound
sbb
xor
dec
loope
repnz
ds
push
cmpb
sbb
hlt
or
adcb
cmc
fnstenv
mov
ljmp
mov
add
sub
rorl
pop
popa
mov
into
nop
sub
mov
aam
add
fadds
shll
push
imul
inc
mov
sarb
sub
add
add
or
jno
push
and
daa
adc
or
leave
and
mov
outsl
orb
mov
add
push
stc
ficomps
leave
sbb
shlb
add
cmp
shrb
cmp
mov
insb
mov
mov
lcall
add
ljmp
fildl
push
fdivl
adc
arpl
test
fs
add
push
or
clc
iret
push
in
popf
decl
xchg
daa
scas
orb
sahf
push
pop
jge
orb
shlb
repnz
inc
push
imul
lret
addb
ss
sbb
lock
add
loopne
rorl
adc
dec
ffree
mov
mov
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
mov
add
ss
fadds
xlat
int
sub
push
mov
jp,pn
mov
dec
popa
les
add
push
sub
aaa
mov
or
filds
add
sub
aas
inc
insb
imul
imul
inc
push
jo
fs
adc
fistpl
outsb
inc
and
aas
inc
stc
and
jbe
fdivl
jecxz
arpl
dec
add
fs
cmp
je
jo
cs
add
push
imul
gs
jns
mov
loopne
sbbb
push
imul
popf
mov
xchg
and
mov
ss
push
lret
cmp
bound
icebp
popa
jo
push
fs
pop
inc
jb
jp
add
sub
inc
adc
inc
imul
mov
pop
dec
fldl
adc
popa
dec
sbb
add
xchg
jl
cltd
sub
pop
push
es
dec
dec
adc
xor
pop
insb
cmpsl
dec
repz
dec
mov
pop
push
sub
sbb
or
sub
push
inc
jns
mov
mov
dec
push
inc
push
mov
push
rclb
sub
push
push
loope
add
dec
jae
adc
push
cwtl
mov
outsb
iret
leave
inc
push
inc
push
insb
and
pusha
jae
lahf
pop
aas
jnp
jb
loopne
mov
jbe
ror
cli
test
std
dec
ret
aam
lods
adc
pop
outsb
adc
sbb
aad
test
addl
inc
hlt
addl
or
sub
scas
sub
les
xor
lret
mov
gs
push
sub
dec
push
icebp
push
inc
inc
xchg
inc
sub
mov
cmp
pop
pushfw
dec
movsb
faddl
in
mov
fs
lret
xor
sub
test
jp
sub
xchg
xchg
xchg
gs
jmp
cmp
sub
popa
jmp
sub
inc
test
movsb
inc
data16
jp
mov
and
sub
rclb
add
or
ja
je
in
jne
pushl
jmp
mov
loop
push
cs
lcall
dec
inc
inc
push
inc
out
call
and
in
dec
out
mov
hlt
dec
cs
insb
fdivr
cmpsb
inc
aaa
aaa
dec
mov
cmpl
xor
int
cmp
sbb
dec
lea
dec
ret
jo
xchg
sub
inc
imul
mov
bound
or
fs
punpcklwd
fstps
imul
xchg
out
leave
sbb
in
sub
inc
sub
pop
loop
and
dec
enter
cmp
and
xor
adc
adc
sub
idivb
mov
and
mov
ss
mov
jne
xchg
jne
lcall
push
ja
leave
addr16
pop
jae
test
dec
and
rcl
outsb
sub
bound
and
cld
push
outsb
sbb
in
dec
adc
mov
sub
xchg
cmp
jae
jb
xchg
fs
fnstenv
inc
add
lock
movl
cmp
das
fsubl
test
dec
cmp
jbe
dec
jne
mov
shrb
insl
and
sub
nop
push
rol
push
pop
aas
pop
sub
pop
xor
dec
les
adc
pop
sub
mov
fiaddl
leave
jne
and
sbb
xor
nop
aad
jae
push
xor
lods
lds
sub
push
lea
sub
inc
in
imul
inc
das
imul
nop
outsb
and
sbb
or
sbb
dec
adc
bound
inc
pusha
aas
push
xor
cmpsb
rclb
adcl
aas
dec
dec
shll
push
ss
test
pop
hlt
lcall
and
adc
or
sbb
arpl
xor
fs
push
arpl
or
mov
xchg
ja
inc
sub
mov
gs
mov
xchg
jns
test
shlb
pop
sub
jecxz
add
inc
imul
and
add
fsts
adc
sbb
push
mov
dec
and
jne
cmpsl
adc
inc
sbb
mov
js
jo
cmp
xchg
sub
or
mov
push
mov
sti
xor
cmc
mov
or
es
jne
nop
xchg
xchg
fs
push
dec
push
adc
aaa
xchg
sbb
call
lods
pop
outsb
or
into
sub
jo
add
jp
jp
test
popa
addr16
test
and
nop
jae
ret
lds
inc
fs
and
mov
andl
inc
mov
bound
xor
jge
data16
enter
mov
add
add
adc
add
add
add
jo
mov
sub
sbb
pop
or
aaa
xor
push
ds
and
xchg
pop
jne
pusha
push
cmpb
faddl
cmp
sbb
out
orb
test
outsb
mov
or
add
sub
jge
test
pop
cmp
jne
push
add
bound
sbb
outsb
or
adc
mov
rcrb
mov
int3
sub
push
adc
push
and
aas
data16
pushf
test
rclb
adc
xor
adc
aad
adc
ss
adc
xor
xor
pop
cmp
fimull
xor
dec
lods
mov
or
xor
dec
or
sbb
sub
jae
xlat
ljmp
mov
es
push
dec
inc
push
dec
gs
xor
jae
sub
jecxz
sub
and
dec
jo
outsb
out
adc
rorb
adc
dec
adc
fisttpl
sbb
dec
sub
scas
sbb
inc
dec
xor
adc
inc
or
adc
add
dec
inc
cmpb
mov
adc
loope
or
dec
pop
mov
pop
or
sub
out
pop
movl
lea
and
mov
push
or
pop
out
icebp
gs
adc
loope
daa
addl
sbb
lcall
cmp
add
ljmp
cmpsb
mov
je
lods
in
pushf
mov
mov
adc
xchg
adc
inc
xchg
scas
xor
xchg
mov
aas
mov
cltd
mov
jo
test
cmp
jge
or
pop
inc
or
pop
and
stos
jmp
push
fwait
cltd
inc
push
mov
dec
jno
movsb
adc
dec
inc
addps
or
or
add
xor
cmp
sub
adc
push
popa
xchg
ret
jns
dec
sbb
push
cmp
sbb
je
pop
or
dec
sub
inc
mov
sub
cmp
push
shl
inc
cmp
je
jbe
push
push
and
test
fsubrp
push
or
xor
pusha
in
jecxz
xor
mov
pop
in
into
push
mov
jb
jnp
and
mov
xor
jno
test
and
aaa
repnz
loop
shrd
push
mov
xchg
sbb
push
push
mov
out
stos
fidivrl
repz
lahf
push
movsb
cmp
imul
inc
cmp
jae
push
mov
sub
mov
outsb
insb
cmp
daa
cmp
dec
cmp
push
mov
mov
dec
cmp
mov
iret
hlt
fcomp
inc
mov
xchg
daa
cmp
pop
leave
dec
push
fwait
cmp
adc
adc
push
fs
inc
sub
inc
sbbb
cmpl
gs
push
call
divb
scas
mov
call
push
popa
cld
inc
dec
outsb
lret
add
inc
or
or
pushl
orb
gs
dec
rorb
jbe
repz
mov
jp
repz
push
pop
daa
inc
das
hlt
rcrl
in
or
or
cmpb
push
mov
cmpsb
cld
jnp
repz
or
jne
mov
inc
arpl
xchg
adc
inc
vsubsd
out
push
lods
dec
add
arpl
mov
cmp
jp
insb
mov
mov
es
ds
push
mov
inc
ret
lret
xor
jne
insl
mov
mov
xor
dec
and
push
insl
jp
mov
jne
sbb
adc
jno
xor
lds
push
ret
xchg
sbb
push
or
and
mov
xchg
pushf
cltd
js
outsl
pop
dec
mov
stos
jl
test
iret
test
sbbb
arpl
dec
mov
adc
aam
sbb
add
pop
and
sub
inc
test
push
cmpsb
jbe
dec
sahf
and
les
adc
ret
lahf
loope
cmpb
es
dec
bound
and
inc
xorb
or
mov
fbld
ljmp
mov
outsl
das
pushf
sahf
mov
nop
sbb
mov
jp
sbb
nop
xor
push
or
sbb
xor
nop
call
sbb
push
cmp
inc
and
lahf
mov
mov
ret
mov
dec
pushf
pop
push
fsubp
xor
sub
adc
int
rcll
xchg
rorb
cmp
mov
xor
dec
mov
es
and
insl
pop
rclb
mov
xor
push
fs
repz
cmp
cltd
lods
call
mov
dec
mov
pop
xchg
mov
push
mov
arpl
and
adc
pushf
jl
adc
mov
adc
bound
mov
adc
jmp
jecxz
dec
jecxz
inc
dec
ret
jp
jb
outsb
cs
jns
sbb
adc
movsb
push
imul
sub
loop
aas
dec
sub
xor
fnstsw
add
les
pop
sbb
insb
mov
call
push
out
addr16
xor
push
push
dec
xchg
jb
inc
xor
lret
enter
dec
lahf
test
imul
fs
sbb
pusha
movsb
sbb
sub
lcall
jb
pop
dec
outsb
cli
bound
push
mov
frstor
sbb
add
dec
lcall
dec
js
aad
je
outsb
mov
mov
addr16
mov
pop
lock
xchg
adc
lock
call
or
sub
add
jbe
push
je
rorl
push
call
adc
and
or
inc
jo
push
or
and
orb
inc
push
push
jmp
jge
dec
mov
dec
xor
les
xor
and
xchg
mov
push
dec
inc
sub
push
dec
sbb
and
inc
lret
xchg
insl
push
jae
inc
add
scas
add
sahf
lock
stc
outsb
cmp
inc
adc
pop
lret
mov
or
jge
or
mov
and
adc
adc
and
xchg
mov
mov
or
and
rcl
pusha
inc
pop
add
adc
inc
xchg
jno
inc
inc
inc
add
sbb
cli
and
fs
test
les
mov
jne
dec
ret
adc
fwait
or
cmp
cmp
xor
inc
and
and
das
jo
movsb
or
cmp
in
ret
rolb
or
sub
sub
in
adc
ss
ja,pn
cmpsl
scas
adc
icebp
andb
xor
xchg
or
das
dec
add
arpl
gs
fprem
mulb
xor
push
xor
dec
sbb
xor
mov
call
adc
int
mov
cmp
inc
mov
daa
dec
loope
sbb
nop
inc
inc
push
fisttpll
rclb
mov
cwtl
and
xor
xchg
adc
test
dec
dec
jns
bound
pop
sbb
adc
xchg
jno
add
and
pop
push
fdivrs
cmp
stos
jo
int
pusha
inc
icebp
bound
add
arpl
loopne
push
mov
and
and
and
dec
or
add
test
sub
xor
jns
push
movsb
clc
mov
or
sbb
add
dec
sub
add
pusha
adc
push
and
push
js
rolb
adc
push
in
jge
inc
fcomps
cld
in
inc
or
out
inc
adc
or
adc
movsb
inc
add
dec
or
nop
pop
adc
imul
jb
push
inc
clc
add
rol
test
and
push
xchg
adc
jno
or
inc
add
push
xchg
dec
mov
add
stc
push
or
test
adc
nop
xchg
fadd
add
xchg
outsb
or
imul
rclb
insb
inc
add
movsl
lods
adc
dec
mov
loopne
gs
push
in
add
rcrb
xchg
cmp
pop
mov
shrl
and
add
add
add
ret
add
xor
sbb
inc
sub
push
sarb
sbb
xorb
xor
or
lock
jb
add
cltd
adc
jg
rclb
mov
add
add
imul
pop
mov
adc
adc
pusha
add
cmp
inc
in
std
inc
inc
add
xor
push
inc
jo
xor
std
int3
inc
fs
add
sub
rclb
int
sbb
dec
jl
adc
add
push
int3
icebp
and
dec
into
adc
scas
outsb
jb
or
sub
orl
loopne
inc
add
add
inc
dec
xor
sub
add
jno
xchg
sub
sbb
add
or
int3
add
loope
inc
add
fcomps
ret
pop
les
int
sub
cmpsb
and
je
stos
adc
movsl
pop
and
xchg
stos
hlt
or
pusha
or
nop
adc
and
xchg
xor
enter
mov
sbb
cs
bound
inc
add
data16
adc
adc
sbb
shrb
sbb
sbb
cwtl
xchg
orb
test
mov
xor
and
rolb
loopne
inc
adc
or
add
clc
adc
repnz
lds
add
orb
dec
cltd
adc
mov
adc
test
pusha
outsb
inc
sbb
fimull
push
or
sub
or
xchg
sub
or
xor
push
dec
movsb
js
mov
and
in
sub
pop
faddl
fs
xor
xorl
idiv
jo
jo
push
arpl
and
sub
add
sbb
cli
adc
dec
roll
jns
sbb
push
jg
add
mov
push
mov
or
dec
and
pop
push
rclb
jae
jo
dec
gs
mov
adc
sub
pop
xchg
push
dec
adc
pop
jmp
insb
dec
pop
push
add
imul
sub
sub
jmp
pop
dec
rdpmc
leave
mov
xorb
pop
loop
jmp
call
out
or
std
cmp
xchg
mov
test
icebp
xchg
mov
xor
sub
clc
stos
stos
lcall
int
adc
sbb
sbb
jne
or
push
or
add
push
lea
inc
icebp
out
cwtl
ljmp
push
repz
lret
sbbl
hlt
add
cltd
adc
test
adc
mov
jnp
fs
fstpl
or
lds
aad
leave
adc
jbe
arpl
add
cwtl
or
out
test
jmp
test
xchg
popf
arpl
adc
movsl
out
pop
mov
lcall
insb
stos
push
pop
rcr
xor
pop
rolb
mov
pop
push
xchg
loopne
fnstenv
add
adc
fcoms
aas
insb
pushf
push
xor
mov
add
xlat
xchg
add
sub
pushf
cmp
add
push
je
mov
jne
pusha
xor
jle
pop
pop
and
inc
jge
xchg
inc
repz
fwait
or
xchg
push
out
aas
bound
xlat
lea
cli
cmpsb
rcrb
repz
shrb
lahf
aam
sbb
pop
popf
fdivrl
adc
adc
lahf
push
pop
dec
js
pop
lds
movsl
filds
repz
jl
outsl
cltd
adc
arpl
nop
sbb
in
dec
repz
and
add
xchg
lret
iret
data16
gs
aad
repz
enter
jle
sub
fwait
int3
sub
sub
sahf
jp
stos
pop
adc
fiaddl
into
pop
imul
lcall
pop
mov
adc
iret
mov
fcos
pop
fbstp
fmulp
jg
xchg
and
jp
lret
fucomi
mov
test
mov
xor
jbe
add
cld
in
leave
jmp
idiv
fdivr
cmp
cltd
fimull
in
repz
adc
loope
cmpsb
aaa
sub
dec
iret
sti
sahf
pushl
xor
mov
pop
push
repnz
and
lock
jp
loope
cli
xchg
jl
jmp
idiv
mov
and
test
push
dec
inc
jb
test
incl
bound
push
inc
and
push
xorps
dec
push
cli
jbe
inc
cmp
dec
or
xor
dec
repnz
cmc
mov
xor
outsl
ja
xor
jb
cwtl
or
out
clc
jne
rcrl
xor
push
dec
dec
xor
xor
pop
xor
outsl
cs
es
and
out
fists
test
mov
pop
das
cmp
cmp
dec
add
or
inc
aam
cmp
push
loop
xchg
add
orb
xchg
mov
dec
outsb
inc
push
jo
insb
jae
ljmp
sbb
adc
cmp
adc
push
fisubrl
xchg
dec
add
inc
cltd
and
dec
or
pushf
push
cmp
std
lret
adc
dec
jo
inc
inc
addl
in
sbb
add
addr16
dec
loop
pop
movsb
loopne
jne
push
push
add
pop
rcll
mov
push
bound
mov
adc
or
outsl
xchg
js
xor
push
aas
add
cmp
mov
add
divl
sbb
fimuls
daa
lahf
add
push
add
inc
sar
or
adc
jne
aam
or
push
pushf
inc
insb
and
adc
pop
lfs
push
je
int3
mov
leave
pop
flds
push
dec
int3
inc
int3
lret
add
inc
inc
xor
sub
add
or
rclb
fwait
test
rorb
cs
fwait
cwtl
fadds
or
scas
movsb
les
mov
adc
jp
test
adc
mov
lcall
adc
fscale
sbb
xchg
and
inc
push
arpl
adc
mov
inc
mov
js
test
add
and
adc
and
das
fdivr
incb
xor
lret
or
and
mov
mov
inc
das
adc
popa
add
mov
psubusb
orb
add
jo
test
cs
adcb
cmp
jns
or
inc
add
lcall
adc
in
add
pop
push
and
jb
sbb
gs
jbe
popa
jge
movl
jbe
jb
lahf
sbb
stc
in
or
cs
js
ljmp
inc
xor
mov
jo
cs
test
cmp
adc
inc
fs
andl
xchg
push
fldt
rcll
insb
add
cmp
sbb
xchg
cmp
nop
jo
sub
addr16
push
pop
arpl
out
dec
jo
outsb
push
cmp
mov
lret
adc
jne
nop
xor
adc
ss
adc
xor
pop
pop
mov
fs
inc
sub
push
sbb
add
in
sbb
jmp
mov
popa
imul
push
add
mov
in
dec
scas
out
rcrl
lea
pop
add
nop
inc
xchg
add
sub
js
lock
imul
rclb
pop
xor
dec
sub
or
dec
jne
push
inc
cmpsl
fistpll
cmc
add
ljmp
sbb
out
mov
incb
dec
dec
add
push
add
push
push
push
pop
pop
pop
add
arpl
addr16
insb
insl
outsb
outsl
jo
jno
add
ja
jns
push
xor
xor
xor
ss
cmp
sub
test
pusha
scas
mov
call
push
arpl
negl
mov
lock
pop
push
aad
dec
adc
cli
xchg
inc
and
jmp
pop
adc
cltd
call
mov
ret
push
mov
mov
mov
pop
xor
push
int3
add
lcall
push
or
sahf
and
les
pop
pop
pop
and
call
inc
and
lea
pop
addl
addl
xchg
push
lock
mov
add
adc
jl
cltd
shlb
int3
mov
leave
mov
mov
cli
filds
repz
je
inc
jmp
nop
jle
fs
pop
or
pusha
mov
mov
clc
add
stc
cmp
sbb
or
clc
cmpsl
cli
cmpsl
pop
lahf
outsl
add
negb
adc
std
add
mov
sbb
pop
outsb
push
loop
mov
inc
add
lcall
cmp
push
add
dec
sbb
jecxz
dec
divb
loopne
xor
xchg
cld
jge
add
je
ror
clc
jmp
sbb
jl
dec
jne
dec
fiaddl
data16
and
sbb
mov
fnstsw
popa
ret
pop
and
add
fdivr
call
jl
out
xchg
dec
or
jo,pn
cltd
lods
je
enter
ret
and
jne
inc
inc
pop
jns
jmp
xor
ret
pop
xorl
test
pop
pop
jo
lods
subb
or
jl
or
pop
xor
mulb
jmp
xchg
out
into
inc
jb
cwtl
decb
out
out
testb
and
cltd
stc
xchg
add
jb
mov
pop
sub
add
popa
push
das
mov
dec
or
idivb
nop
xor
leave
pop
sub
fldz
and
pop
add
shrl
pop
jmp
loop
inc
je
and
xchg
inc
jle
push
lahf
cmp
das
jp
add
loope
sti
loope
fwait
loopne
mov
nopl
add
out
call
jno
shrb
ds
cmpsb
mov
inc
imull
js
lock
mov
mov
xchg
mov
adc
pop
add
mov
iret
je
add
xor
nop
popf
fs
add
mov
fldl
jbe
pop
shrl
mov
mov
xorb
xchg
ss
or
repz
je
xchg
imul
or
mov
shrb
cmp
call
insb
push
push
pop
sub
addb
lret
fnstcw
add
out
loope
add
btr
sub
add
push
push
and
cmp
dec
arpl
ret
sbb
mov
pop
xor
lock
loop
pop
jecxz
je
rcrb
add
xchg
aaa
sar
stc
ss
rcll
mov
xchg
sub
pop
mov
loopne
cmpl
iret
or
bound
sbb
and
mov
das
jmp
add
push
shlb
or
or
mov
loopne
dec
mov
test
lret
pop
dec
add
sub
sbb
mov
sbb
dec
push
xor
sub
xor
add
sub
sbb
pop
test
push
jno
int
xor
mov
inc
xor
inc
jo
enter
jo
roll
add
js
inc
mov
pushf
pop
adcl
jne
into
aas
pushf
imul
pushf
push
mov
cmp
adc
mov
and
adc
add
inc
sub
xchg
rcrb
mov
mov
pop
fstps
repnz
sbb
pop
sbb
mov
repnz
adc
jb
mov
jl
js
icebp
sbb
inc
dec
lahf
lea
xor
jl
or
cmp
lahf
cmp
sub
movsb
dec
cmc
or
and
adc
and
cmpsb
aas
orl
addr16
fs
push
pop
or
cltd
jge
sbb
or
sub
stos
cmp
jmp
or
adc
nop
push
mov
dec
inc
dec
mov
lret
out
xchg
sub
sbb
add
pusha
in
out
jp
icebp
or
enter
pop
cmp
jle
xor
por
xchg
jecxz
rol
test
jno
inc
push
xor
cmp
aaa
add
ret
and
enter
push
xchg
stc
dec
mov
fcompl
sbb
fists
add
popl
je
add
stos
insb
mov
addr16
bound
aaa
push
add
inc
mov
jmp
pop
loope
jl
push
cwtl
sbb
enter
ds
cmp
push
add
cmpsb
push
fs
mov
push
push
mov
mov
cmp
or
pop
mov
lock
or
adc
mov
insb
shlb
jge
loopne
sbb
addr16
nop
adc
mov
sti
mov
inc
mov
inc
sbb
add
cmp
mov
pop
insb
inc
aas
popf
adc
xchg
mov
dec
jno
push
dec
movsb
outsb
ss
or
out
insb
lcall
outsb
inc
sbb
inc
mov
fstl
idivb
in
dec
push
shrb
loope
outsl
call
dec
push
inc
leave
cmp
adcb
cmp
inc
js
xor
outsl
test
fidivrl
xor
mov
shrb
fcomps
mov
leave
rcr
ds
xor
aaa
pop
inc
xor
pop
das
popa
pop
add
and
push
add
and
stos
xchg
add
fs
lret
gs
in
add
push
test
addr16
stc
inc
add
add
mov
push
add
add
sub
push
imul
xchg
add
insb
add
add
push
or
lds
sub
idivb
xchg
xor
xchg
lret
cmpb
mov
jbe
add
xorb
shr
lock
push
into
inc
in
jbe
fs
shl
iret
add
mov
leave
sbb
scas
mov
loope
aad
xor
xchg
lds
lret
cmc
add
push
movsb
std
arpl
or
in
jecxz
inc
lcall
cmp
je
mov
xlat
jb
pop
aaa
nop
scas
mov
mov
aad
rclb
add
xchg
jnp
mov
push
loopne
lcall
popf
mov
js
sbb
sub
push
mov
cmp
mov
push
push
push
mulb
add
popf
mov
outsl
and
scas
out
insb
je
push
outsb
lahf
or
nop
stc
into
and
pushf
lea
rorb
ss
shl
sbb
mov
ljmp
lock
das
int
shrl
inc
int3
je
daa
add
adc
mov
jb
cmc
loopne
imul
xchg
mov
xchg
or
add
or
test
fdivl
sbbb
mov
addl
mov
cmp
fcomps
insl
popf
add
cli
fisubs
insl
jmp
jbe
in
inc
push
inc
inc
and
loop
fs
in
rclb
sbb
jmp
or
or
arpl
fidivl
or
or
clc
outsl
push
insl
xor
in
inc
scas
or
adc
inc
jmp
xor
cmpsl
scas
jno
mov
xor
inc
xor
test
add
dec
repnz
xor
loope
or
js
dec
sbb
add
or
mov
mov
rorb
or
js,pt
inc
adc
cmpsl
or
scas
lock
jo
push
or
sbb
popa
jns
clc
cmovno
sub
push
dec
inc
ret
or
pop
or
push
dec
js
call
imul
mov
addl
jns
push
mov
imul
or
and
outsb
xor
lds
or
jecxz
adc
in
xor
insl
bound
jp
sub
cmp
stos
je
or
popl
repnz
push
adc
cmp
addr16
mov
je
into
mov
pop
jnp
add
xchg
imul
aas
addb
in
and
into
push
popa
xchg
xrelease
inc
adc
aas
leave
mov
lret
addr16
out
xor
mov
mov
xorb
in
or
in
push
add
mov
sbb
push
arpl
mov
dec
sbb
push
outsl
xor
inc
cpuid
imul
mov
jb
outsb
sbb
gs
jns
or
jns
out
out
mov
cmp
push
adc
pop
cmp
popa
jae
nop
test
cmp
adc
mov
sbb
push
loopne
jne
mov
mov
sub
xor
pop
dec
pop
jge
ds
xchg
imul
inc
pop
mov
pop
inc
xchg
push
insb
inc
push
adc
popf
fdivrs
inc
imul
movsl
cmp
stos
add
add
je
xlat
sub
mov
fstpl
mov
sub
and
mov
sbb
xchg
lret
sub
jo
push
push
pop
mov
adc
ret
sbb
nop
xlat
cmc
xor
je
mov
add
bound
xor
sub
jg
dec
stc
dec
push
xchg
inc
pop
xchg
out
mov
jb
pop
int3
xchg
lret
push
push
js
imul
dec
cmp
xchg
xor
mov
jae
insl
bound
adc
adc
imul
int3
ss
sub
dec
sbb
movsb
sub
sub
cli
loope
dec
dec
or
mov
mov
mov
push
sub
or
cmp
popa
orb
mov
in
mov
xchg
inc
mov
outsb
adc
daa
inc
cmc
adc
daa
sbbl
jo
push
pop
test
js
jl
xchg
addb
movsb
or
add
push
push
dec
inc
pop
pop
xor
test
and
out
xor
or
xchg
cmp
adcb
out
cmp
inc
inc
push
sbb
push
inc
je
xchg
mov
mov
mov
rclb
call
adc
sbb
test
mov
inc
add
ds
clc
sub
jmp
dec
and
lods
sbb
ror
mov
sub
sbb
and
pop
jl
mov
adc
sub
sbb
call
test
in
dec
loopne
lock
dec
mov
icebp
insb
cltd
and
xor
sarb
and
in
inc
cld
push
icebp
push
and
push
enter
rclb
add
and
cmp
push
and
xor
enter
out
or
mov
data16
or
push
jl
enter
and
loop
lock
dec
cmp
loop
and
dec
jl
mov
sbb
mov
adc
and
icebp
inc
and
icebp
push
and
sub
or
mov
inc
cld
sbb
repnz
xchg
test
and
or
mov
inc
fdiv
mov
pop
and
and
repz
sbb
and
push
mov
sbb
stc
push
sbb
adc
or
dec
push
xchg
xchg
mov
and
and
cmc
fs
inc
dec
push
mov
pop
data16
inc
cmpsb
pop
push
push
insb
jbe
or
xchg
jne
cmpl
cmpsl
xor
ja
cmc
repnz
stos
enter
inc
jge
mov
sub
push
pop
inc
mov
sub
inc
jne
sub
jg
jns
insl
lahf
mov
inc
push
insb
popa
imul
addr16
adc
bound
mov
aam
fsubr
test
orb
and
jb
outsl
add
jae
les
dec
or
sub
shlb
push
dec
pop
push
cmp
outsb
ret
je
sbb
insl
stos
ja
pusha
xor
jb
imul
sti
ljmp
xor
xor
sbb
dec
outsl
jl
xchg
loope
dec
xchg
or
dec
imul
fistl
stos
mov
xchg
insb
cwtl
xchg
cli
leave
inc
adc
in
jb
outsl
dec
insb
sbb
and
ret
push
xchg
mov
fcomip
sti
jl
jae
push
mov
adc
imul
loope
arpl
gs
and
lds
push
orb
clc
xor
outsb
or
ljmp
inc
inc
test
mov
push
push
testb
xor
loop
shlb
inc
push
in
xor
pop
xor
push
lret
es
cmpsl
and
push
outsl
xchg
jge
xchg
into
and
inc
ljmp
inc
cmp
inc
pop
sbb
jne
out
pop
inc
dec
or
jns
arpl
in
ret
dec
addr16
xchg
dec
addr16
xchg
inc
cmp
cmp
mov
adc
xor
dec
xchg
push
out
dec
xlat
mov
outsl
adc
push
adc
movsl
push
sub
insb
push
push
shlb
xor
xor
pop
repnz
jecxz
lea
sub
das
mov
push
or
and
sbb
push
scas
pop
adcb
imul
push
push
dec
lea
and
nop
dec
pop
insl
lcall
xchg
dec
or
inc
loop
aam
pop
es
movsl
test
push
cmp
mov
xor
adc
pop
dec
daa
mov
inc
outsl
dec
fwait
cmp
scas
dec
outsb
inc
push
jb
int
push
cmp
test
ficoml
push
dec
test
bound
addr16
inc
jae
cwtl
inc
sbb
push
scas
je
je
imul
cmp
jb
iret
stos
imul
pop
lea
adc
push
das
imul
jne
je
cmp
jb
test
mov
scas
addl
gs
jns
inc
aaa
mov
test
dec
push
mov
adc
xchg
push
aad
push
sbb
scas
and
xlat
movsb
insb
cmp
in
xor
addr16
mov
push
shrb
cmp
fcompl
push
sub
sub
shl
setg
or
dec
mov
pop
and
mov
test
orb
sahf
jg
dec
and
dec
inc
jne
xor
cs
jge
cmp
sahf
mov
push
lea
xor
mov
jns
jle
xor
lock
inc
add
dec
push
dec
dec
test
repz
or
data16
dec
mov
stos
jbe
pop
adc
pop
cmp
push
popf
xchg
aas
jg
cltd
push
push
imul
or
inc
in
sub
adc
stos
and
push
aaa
inc
es
dec
pop
mov
cmp
inc
pop
inc
sbb
insb
jns
mov
push
sub
jecxz
mov
jns
imul
stos
adc
sub
jg
jno
mov
inc
cwtl
addr16
jge
sbb
push
in
std
shlb
lods
repnz
and
je
pusha
leave
sub
pop
bound
pop
dec
std
fs
cmp
push
push
dec
into
push
cwtl
pop
fsubrs
cmp
sbb
dec
cwtl
in
je
ja
subb
mov
daa
xor
bound
sahf
xchg
push
inc
mov
or
xchg
aad
mov
dec
je
test
mov
sbb
xchg
xchg
icebp
ds
ret
cs
arpl
cmp
icebp
jbe
popa
js
xchg
in
pop
xor
add
jne
sub
pop
push
dec
sub
jg
jae
push
int
imul
js
xor
sbbl
and
inc
iret
and
inc
or
pop
cmp
fisubl
leave
sahf
aas
arpl
and
hlt
push
insl
test
arpl
inc
aaa
sub
jb
loope
lcall
fadds
stc
sub
push
inc
mov
aas
mov
jmp
pop
aad
lock
sbb
mov
out
sub
imul
sub
xchg
imul
cmc
or
aam
xor
or
mov
jae
xor
adc
test
adc
push
fidivl
add
gs
sbb
mov
sti
imul
dec
rcrb
jae
insl
popa
sub
xor
adc
aaa
pop
mov
mov
lds
mov
dec
sub
or
dec
cmp
and
jbe
dec
or
das
jo
fisttps
int
div
jns
mov
or
repz
push
insl
dec
push
leave
pop
sahf
pushf
cmp
mov
inc
xchg
mov
or
or
jae
lods
in
arpl
and
je
les
mov
call
in
aam
sub
push
jo
xlat
add
push
inc
pusha
mov
cmp
test
addr16
dec
sub
and
test
clc
inc
push
in
cmc
nop
and
out
mov
xor
mov
dec
push
test
sub
or
rcll
xor
fs
mov
adc
idivb
lea
or
inc
mov
inc
ficomps
xor
dec
push
movsb
cmp
imul
cmpl
nop
and
dec
cmp
inc
fs
je
std
push
aad
aas
adc
cmp
mov
or
dec
inc
dec
mov
mov
ficomps
decb
repnz
pop
shlb
jle
pop
je
inc
sub
or
pop
test
popa
jbe
cmpsl
es
jbe
inc
cmp
cwtl
jbe
or
enter
lcall
and
dec
insl
inc
popa
pop
jp
dec
mov
cmp
mov
mov
inc
nop
bound
push
push
movsb
mov
dec
push
inc
jno
push
je
inc
pop
jns
xor
jbe
call
inc
xchg
mov
jp
dec
data16
inc
sbb
push
lods
mov
and
aas
mov
sub
push
fdivrl
call
adc
push
sub
popf
sub
mov
cwtl
sbb
sbb
test
inc
loopne
mov
xor
dec
test
push
sbb
push
jbe
daa
cmpl
jmp
sbb
repz
lcall
sub
push
mov
and
cmp
das
dec
in
dec
jo
cmp
cs
fs
sub
xchg
mov
out
sub
or
ljmp
gs
je
clc
outsb
and
movsb
jbe
inc
and
jae
and
pop
das
imul
cs
es
jne
sub
insl
jmp
das
mov
pop
mov
dec
scas
mov
dec
push
xor
enter
popf
sbb
roll
add
jge
push
mov
push
add
jge
pop
adc
sub
push
sbb
lret
cld
xorb
pop
rclb
test
add
push
add
mov
sbb
inc
stos
jns
inc
imul
outsb
jns
shll
or
ja
push
jbe
pop
or
int3
lock
adc
inc
push
sub
xor
push
in
or
push
push
daa
inc
dec
xor
jns
shrb
inc
orl
xor
push
inc
nop
sbb
xor
lods
mov
adcl
add
aaa
and
das
xchg
mov
arpl
imull
es
sub
push
int
inc
or
xor
mov
inc
mov
mov
push
and
rcr
dec
sti
pop
xchg
shrb
xor
and
out
sub
in
insb
inc
push
sub
and
pop
sub
xchg
imul
or
js
lods
insb
push
add
inc
dec
insb
or
data16
insb
dec
cmp
xchg
dec
cwtl
outsl
inc
mov
cs
pop
xor
mov
jns
mov
mov
pushf
dec
in
mov
sbb
jne
stos
addr16
sbb
push
inc
popa
mov
inc
outsl
aad
adcb
dec
sub
xchg
mov
pop
cmp
xchg
fisubrs
out
sub
movsl
pop
or
adc
xchg
fxch
pop
xchg
sbb
mov
lods
and
jae
cmp
push
ja
dec
imul
cmp
fstpt
fwait
dec
ja
inc
jns
daa
dec
adc
xchg
loope
ja
das
mov
inc
popa
dec
test
insl
jns
inc
pop
push
push
sbb
outsb
insb
sub
jle
arpl
insl
sub
lret
adc
addl
jo
adc
test
pop
lret
out
movsl
xchg
cwtl
and
inc
fidivrs
cmpsb
jg
cmp
loopne
pop
inc
jbe
pop
sbb
push
and
mov
imul
loope
xor
dec
inc
xchg
mov
pop
fwait
out
es
cmc
enter
or
dec
sub
lock
mov
push
xchg
add
daa
sbb
es
jns
das
insb
mov
mov
fisubl
xor
jp
jo
push
daa
dec
push
or
stos
inc
cmp
sbb
dec
dec
insb
adc
inc
and
aas
fdivrs
cmp
adc
adc
inc
dec
fstpl
adc
jo
sub
inc
inc
inc
and
dec
push
inc
outsb
arpl
sub
inc
stc
sbb
xor
test
cwtl
mov
js
mov
push
jl
xchg
inc
and
dec
clc
inc
fs
push
jb
iret
inc
ds
stos
jp
int3
push
push
scas
enter
inc
dec
push
push
inc
jns
jno
dec
push
sub
mov
inc
jmp
inc
inc
xchg
push
jae
test
mov
jp
and
jecxz,pn
jecxz
sbb
or
and
das
lcall
sub
push
mov
or
hlt
call
out
push
in
xor
stos
cmpsb
test
cmpsl
xchg
lods
adc
inc
scas
lahf
mov
cmp
mov
sub
das
test
pop
sbb
cmpsb
pop
lods
mov
sub
in
imul
push
mov
std
ret
xor
stos
pop
into
adc
mov
mov
imul
in
imul
jge
popa
or
outsl
mov
sbb
fbld
pop
or
adc
dec
fsubr
and
insl
lahf
arpl
cmp
push
nop
or
sahf
and
pop
push
fisttps
dec
outsl
divb
imul
dec
adc
push
mov
dec
sub
inc
xor
jo
push
and
jo
cmc
ret
std
push
mov
inc
sub
inc
jo
xchg
xchg
clc
sbb
insl
inc
ficoml
cmp
mov
dec
shll
dec
inc
dec
lret
push
lcall
pop
jp
mov
push
pushf
dec
inc
clc
mov
pusha
mov
rorl
or
cmp
mov
push
xor
sbb
pop
inc
push
sub
pop
mov
jo
adc
xor
sub
xchg
add
ds
pop
xchg
mov
fiaddl
push
sub
jae
jge
movsl
pop
xor
je
or
sub
jne
jge
movsl
pop
xor
jbe
or
sub
ja
jge
movsl
pop
daa
jns
mov
cmp
sub
xchg
add
xor
pop
flds
jp
adc
xor
xor
xor
ficomps
rclb
dec
cmovs
mov
add
inc
sub
add
hlt
sub
flds
and
cmp
and
ret
dec
add
add
xchg
aaa
add
add
ret
dec
add
push
xchg
add
cmp
add
test
fwait
add
add
inc
cmp
pop
loope
mov
add
inc
xor
or
out
pop
pop
pop
xchg
add
clc
xor
dec
add
xchg
sbb
and
inc
into
push
jnp
adc
push
and
or
add
push
or
or
xchg
pop
je
xor
mov
or
imul
or
or
sub
adc
fistl
xchg
add
fldl
jge
xlat
shl
popa
inc
pop
pop
cltd
add
aam
or
jle
mov
add
push
or
addr16
or
push
dec
or
or
add
or
or
jmp
dec
add
or
lods
adc
fisubs
mov
mov
adc
or
pop
ljmp
inc
adc
or
inc
or
mov
mov
outsb
or
movsl
or
add
or
or
adc
adc
xor
or
mov
aas
enter
mov
adc
dec
pop
lods
pop
lods
lock
cmp
sub
add
sub
sub
xchg
push
push
test
popw
add
jecxz
pop
dec
dec
imul
pop
iret
mov
jmp
dec
dec
jle
lods
pop
mov
xor
fs
addr16
rolb
lods
pop
jmp
inc
in
in
add
pop
lods
rcr
jg
lods
pop
mov
xchg
push
fiaddl
lret
xor
and
iret
mov
push
pop
pop
sub
mov
sub
nop
adc
dec
stos
fdivl
pop
push
pushf
jl
ret
jae
xchg
sub
insl
mov
imul
sub
pop
pusha
jae
popf
loope
popa
mov
bound
ficoms
arpl
ficoms
gs
loope
cmp
adc
addr16
loope
push
imul
inc
popa
std
les
and
and
cmp
pop
dec
sub
mov
notb
sub
pop
sahf
dec
fs
clc
add
sub
adc
mov
inc
sbb
pop
rcll
fcompl
imul
insb
xor
aas
mov
xor
inc
loop
pop
pop
cmp
iret
push
insb
lock
outsb
dec
jae
in
xchg
int3
sub
imul
dec
xchg
js
insl
mov
out
mov
mov
inc
push
jecxz
lock
js
mov
je
lods
les
cltd
adc
sbb
mov
cli
push
dec
push
push
lods
rcrl
orl
cmpsl
nop
repz
sbb
shll
adc
int
mov
dec
mov
stos
fidivl
std
test
push
negb
sub
addb
mov
push
push
dec
jae
mov
add
loope
adc
shl
aas
inc
insb
jbe
bound
sbb
mov
mov
mov
movsb
je
in
push
or
mov
adc
stc
outsb
jle
dec
adc
pop
sbb
xchg
push
dec
pop
inc
sbb
jo
stc
cmp
bnd
jo
and
xchg
hlt
inc
fwait
push
push
adc
iret
and
mov
push
out
cld
push
cmp
aad
test
dec
adc
out
popf
test
adc
rolb
or
imul
test
lds
ss
fs
push
ds
jb
jae
cmp
push
inc
dec
adc
inc
adc
movsb
nop
adc
jge
dec
adc
testb
bts
setns
fs
cmp
inc
xchg
jne
adc
jae
lret
push
inc
push
in
cmpsl
loop,pn
test
adc
jbe
js
dec
and
test
addr16
lods
inc
ja
push
inc
or
dec
inc
lea
add
imul
mov
fisttpll
mov
dec
add
fmuls
pop
jle
mov
push
xor
xchg
out
cmc
dec
loopne
inc
sbb
and
cmp
pop
cltd
mov
sub
in
dec
cmc
or
pop
shlb
and
xor
cli
inc
mov
int
in
insb
dec
or
pop
popa
jae
add
adc
jecxz
ds
test
hlt
sub
mov
mov
outsl
sub
pop
jle
xor
mov
xchg
mov
mov
jae
rclb
pop
pop
adc
or
dec
pop
jp
and
rorb
lret
loopne
adc
adc
push
test
or
push
mov
push
bound
push
test
adc
imul
xchg
loopne
ja
or
dec
popa
dec
mov
fsubrl
sub
fimull
mov
jecxz
push
mov
adc
inc
enter
jp
inc
inc
insb
adc
insb
lods
cmp
lret
sub
loope
pop
movaps
xor
dec
insl
jp
jecxz
das
xor
add
sub
mov
and
xchg
dec
sbb
adc
rolb
push
fwait
mov
and
add
je
xchg
int3
je
leave
mov
lret
inc
xor
pop
adc
rcrb
push
test
test
xor
leave
mov
arpl
mov
or
mov
sbb
jmp
pop
push
outsb
mov
fnsave
mov
sbb
int
push
lds
sbb
int3
fldl
pop
lea
mov
dec
shl
sub
ss
repnz
push
das
push
xchg
icebp
or
jno
addr16
adc
inc
push
and
cmp
push
and
xchg
push
or
inc
jns
and
dec
dec
outsl
pop
push
data16
or
adc
push
dec
les
lods
imul
inc
pushl
dec
js
test
int
inc
js
inc
ja
push
mov
push
test
arpl
popa
push
sbb
jo
xor
sbb
outsl
pop
xor
scas
cmpsl
cmp
dec
mov
fbld
loopne
sahf
enter
jge
lods
cmp
dec
stc
or
mov
xor
xor
inc
mov
adc
push
mov
data16
xor
mov
sbb
dec
pop
jp
xor
dec
jo
fidivl
and
in
test
xor
js
jmp
loope
and
cmpsl
mov
rclb
gs
inc
in
leave
cs
les
stos
jmp
and
mov
popa
sub
pusha
scas
or
jo
and
ret
cmp
xor
pushw
test
clc
addr16
rcrl
mov
push
lods
lea
fisttpl
std
mov
push
in
dec
rcrb
push
adc
or
pusha
inc
push
and
nop
adc
xchg
lods
and
mov
xor
gs
imul
es
push
call
leave
adc
xchg
push
popa
lea
rorl
movsb
jno
push
push
mov
repnz
daa
sbb
cs
lahf
sbb
roll
inc
fwait
or
outsl
mov
cld
mov
outsl
pop
dec
stc
in
test
adc
pop
sti
adc
mov
cmp
pop
xor
or
and
jbe
dec
push
pushf
out
mov
lret
cmp
mov
jne
dec
jle
dec
pop
sarb
sbb
dec
jns
push
jg
lret
andb
fwait
push
aas
pop
inc
call
cmpsl
rol
mov
xchg
notb
test
mov
insb
jp
rclb
jo
adc
mov
mov
mov
js
stos
mov
insl
cmpsl
movsl
xchg
stc
or
jg
push
insb
xchg
mov
or
imull
sbb
dec
icebp
inc
sub
aam
lods
cmovs
sarb
mov
mov
sub
outsl
adc
leave
inc
push
push
call
insl
adc
sahf
mov
dec
jo
je
push
rcrl
add
push
dec
lcall
imul
jge
inc
repz
sahf
and
in
je
lods
xchg
pusha
outsb
mov
jae
mov
pop
arpl
je
xor
xchg
pop
mov
cwtl
test
sbb
arpl
out
outsl
adc
pop
mov
mov
movsb
and
int
cmp
sub
pushf
xchg
sub
push
ficompl
fisttps
jmp
adc
stc
es
push
dec
cs
or
cwtl
orl
insl
daa
lods
scas
lret
jne
or
stos
dec
lock
dec
arpl
je
enter
ds
adc
call
mov
push
jbe
in
or
jno
testb
mov
mov
mov
push
rcrb
mov
sub
int3
pop
and
jae
xchg
test
lret
lcall
and
mov
in
lcall
inc
mov
adc
pop
pop
fiadds
rol
adc
enter
adc
xor
cli
and
or
jmp
fistpll
jecxz
jns
js
pop
push
mov
pop
loopne
sub
dec
in
mov
sbb
dec
push
pop
inc
fwait
and
sbb
in
sub
add
inc
fimuls
imul
ljmp
test
push
and
popf
nop
ja
jne
mov
lock
addr16
aam
xchg
mov
lods
pop
cmpsb
fstl
and
ljmp
pop
movsl
enter
xchg
inc
lret
fidivl
cmp
mov
xor
into
jb
push
outsb
adc
cmp
adc
sbb
leave
je
mov
out
xor
xlat
test
pop
xchg
or
rcrl
push
add
mov
cs
or
lahf
push
jmp
pop
lods
dec
jae
xchg
bound
js
test
subb
popa
ror
call
fisttpl
sbb
jbe
mov
int
dec
imulb
test
mov
das
jno
movsb
cmp
cld
flds
bound
es
push
fidivrl
jo
movsb
out
xchg
adc
jbe
sub
dec
sub
outsb
jmp
fildl
mov
cmp
mov
imul
fwait
shrl
int3
or
add
xor
setbe
push
cs
aam
lcall
or
test
out
roll
mov
out
push
jno
or
pop
pop
push
jb
movsb
or
outsl
cld
mov
push
jns
mov
insl
imul
arpl
sub
sbb
jge
insb
nop
mov
stos
sbb
ret
push
test
dec
dec
aas
lcall
push
in
into
mov
sub
cmp
pop
aam
mov
shll
das
lret
adc
sub
xor
icebp
inc
inc
mov
jbe
movsb
dec
sub
dec
std
push
stos
fs
aam
pop
push
mov
mov
lret
ja
dec
jns
insb
xor
arpl
lea
sbb
jge
xor
inc
dec
push
push
dec
xlat
mov
mov
cmovno
xchg
mov
mov
sub
lret
loopne
add
xor
pop
xchg
movsl
andl
jne
insl
rorb
bound
sbb
xor
test
pop
push
dec
dec
inc
mov
pop
jle
cld
fmul
and
jge
push
push
sub
fidivl
and
dec
and
lea
jne
hlt
ss
fsts
or
dec
and
dec
push
inc
xchg
mov
and
dec
fcoml
add
inc
adc
sub
cmp
dec
dec
pop
xchg
pusha
and
mov
mov
and
inc
hlt
sarl
or
sbb
xchg
xor
inc
inc
dec
pop
mov
and
dec
xchg
xchg
mov
rorb
dec
hlt
mov
and
shll
push
inc
fs
mov
pushf
and
dec
mov
shlb
inc
in
mov
adc
cmp
sbb
dec
cmp
adc
dec
mov
lods
mov
and
dec
call
cmp
adc
shll
push
inc
pusha
jo
jl
mov
dec
movsb
xchg
mov
mov
in
cld
and
je
mov
or
inc
cmp
and
dec
pusha
xchg
jo
addb
lods
adc
in
lock
cld
add
cmp
xor
cmp
dec
dec
pop
xchg
push
nop
mov
rclb
sarl
adc
dec
xor
inc
push
mov
and
dec
mov
lods
mov
and
dec
clc
lea
xchg
xchg
or
xor
cli
and
dec
pop
xchg
jo
test
mov
dec
int3
xchg
fsubs
in
hlt
cld
mov
inc
sbbl
pop
mov
jo
jl
mov
xchg
mov
enter
loopne
lock
adc
or
sbb
mov
dec
and
dec
fs
je
addb
test
mov
rorb
fsubs
in
lock
mov
inc
adcl
cmp
adc
test
xchg
lods
and
inc
in
mov
sbbl
dec
xchg
push
and
orb
dec
mov
inc
loopne
mov
adc
cld
or
and
xor
mov
and
dec
mov
lods
mov
and
dec
hlt
mov
sbb
cmp
dec
xchg
pop
and
je
mov
mov
mov
in
hlt
adc
add
and
dec
sub
cmp
dec
inc
push
mov
andb
movsb
xchg
mov
in
addb
dec
sbb
cmp
mov
and
dec
adcb
mov
les
fsubl
dec
clc
mov
adc
and
sub
pop
adc
test
xchg
test
mov
loopne
lock
or
sbb
mov
dec
and
dec
insb
xchg
js
test
mov
dec
fcoms
dec
orl
mov
push
dec
xchg
xchg
movsb
and
call
dec
add
dec
sub
dec
pop
mov
je
jl
mov
mov
loopne
hlt
inc
add
or
and
xor
and
dec
fs
je
mov
mov
adc
and
dec
call
dec
adc
xor
inc
xchg
push
and
je
adcb
and
dec
test
mov
les
mov
adc
and
dec
add
dec
and
xor
mov
pusha
and
dec
js
test
mov
mov
dec
aam
loopne
call
add
sbb
xor
fs
mov
dec
mov
inc
ror
fcoms
loopne
in
dec
clc
mov
adc
and
mov
pop
loop
pusha
push
and
dec
pushf
xchg
lods
and
adc
and
push
je
mov
pop
and
or
and
test
movsb
dec
lods
xchg
mov
rolb
in
lock
inc
or
adc
and
xor
mov
and
dec
test
lods
mov
and
dec
in
xchg
clc
adc
and
inc
and
cmp
call
inc
insb
mov
mov
rclb
clc
mov
fstl
xchg
cmp
dec
call
fs
dec
test
lods
mov
and
dec
lock
inc
xor
dec
adc
fs
je
andb
inc
mov
enter
call
push
and
inc
sub
mov
dec
push
xchg
pop
and
jl
mov
cwtl
and
dec
rclb
cld
mov
fsts
and
dec
push
xchg
and
jl
mov
mov
inc
in
mov
dec
dec
mov
inc
pop
ljmp
push
in
pop
prefetcht1
cmp
clc
push
adc
push
push
adc
push
xchg
push
jecxz
jecxz
and
inc
insl
and
dec
push
lods
sbb
lock
loopne
dec
dec
cmp
sbb
arpl
dec
int
sbb
jae
push
cmpsb
sub
lea
jne
ret
pop
push
dec
cli
inc
jmp
mov
push
daa
sub
adc
xor
lock
push
push
ret
sbb
stos
sbb
push
xchg
dec
xchg
cmp
pop
test
and
ljmp
lods
test
jle
pop
pop
or
rorb
sub
sub
jae
push
dec
push
cmp
enter
cmp
rorl
inc
or
mov
or
dec
inc
and
xchg
mov
or
xchg
dec
cmpsl
and
sbb
sbb
push
dec
test
mov
or
mov
xor
insb
xchg
push
jle
jne
xchg
cwtl
in
adc
inc
lds
push
test
push
in
and
or
cmpsl
call
adcb
xlat
ficompl
pop
adc
inc
cmp
push
lcall
sbb
push
sub
inc
inc
or
test
mov
loopnew
js
test
cmp
push
xor
lock
xchg
imul
aam
les
xchg
cmp
add
inc
inc
pop
std
xchg
inc
out
push
dec
sahf
cwtl
pop
test
jl
sbb
inc
xchg
inc
or
inc
int3
mov
sbb
test
pushf
movsb
inc
repnz
dec
lret
stos
or
or
ljmp
dec
and
pushf
adc
nop
int3
sub
je
out
mov
ja
iret
inc
xor
xor
inc
aam
push
ror
or
inc
sbb
and
pop
mov
sub
inc
xor
rolb
push
sbb
jo
dec
cltd
nop
enter
inc
mov
or
cld
and
adc
push
sbb
sub
adc
inc
lods
pop
mov
jb
or
dec
sub
push
push
adc
adc
pop
test
out
aam
js
in
xchg
adc
mov
nop
dec
xor
movsb
inc
ficoml
mov
jno
adc
pop
xor
popf
rcll
sub
cmp
and
sbb
mov
cmp
inc
roll
and
insb
popa
ja
xor
xchg
dec
gs
jb
inc
popf
imulb
add
xchg
sub
and
push
shrl
adc
and
cld
sbb
mov
outsb
aam
sub
push
cli
inc
cmpsb
sub
jo
push
xchg
imul
popa
scas
xor
push
movsb
aaa
and
and
jp
sbbb
lods
je
test
movsl
repz
rcrb
pop
nop
or
pop
mov
lea
mov
and
push
pop
push
sbb
sub
adc
outsb
dec
push
fsts
and
xor
psubsb
push
sbb
adc
dec
dec
inc
loop
popa
dec
ss
in
mov
mov
xchg
cmpsb
push
divl
push
test
dec
push
mov
sbb
dec
dec
mov
inc
sub
mov
and
or
sbb
xchg
dec
rclb
push
or
dec
cmp
push
js
push
and
rcll
addr16
test
cmpsb
jbe
sbb
inc
cmc
dec
lea
xchg
call
cld
leave
psrad
inc
lret
sub
pop
nop
push
ljmp
sbb
mov
and
sbb
and
sbb
inc
pop
xchg
cmp
nop
sub
dec
or
inc
dec
xchg
inc
push
dec
in
sbb
sbb
lds
cmp
icebp
inc
and
dec
xchg
push
mov
push
dec
dec
jecxz
test
mov
and
into
mov
fsubrl
or
sbb
dec
or
les
arpl
mov
mov
mov
sbb
pop
push
pop
inc
cmp
and
je
decb
stc
dec
sbb
out
pop
and
ret
or
dec
push
or
sub
cmpsl
sbb
orl
sub
dec
mov
or
insb
lahf
xor
clc
pop
dec
push
push
push
sub
fstpl
and
cmp
sub
adc
orb
sbb
jb
rclb
or
inc
enter
push
lret
lods
imul
sbb
movsb
fists
test
push
sbb
push
xchg
and
dec
leave
inc
cmp
jmp
sarb
xor
les
pusha
les
test
gs
xchg
dec
sbb
imul
lret
in
dec
lds
roll
shlb
ljmp
push
adc
popf
or
hlt
dec
loopne
push
std
pop
adc
movsl
dec
sub
ja
shll
sub
stos
dec
mov
xchg
xor
cmp
lahf
cmp
ds
dec
mov
pop
inc
adc
sub
dec
inc
les
fwait
cmp
dec
pop
out
aam
popf
movsb
push
or
outsl
mov
push
inc
into
jle
xchg
outsl
dec
cmp
push
insl
sbb
push
dec
int3
and
clc
jp
adc
mov
push
movsb
xor
movsb
pause
fistpll
icebp
in
or
mov
cmp
out
xchg
dec
int
xor
or
dec
add
iret
dec
jb
xlat
outsl
sbb
xchg
dec
adc
and
and
dec
or
xchg
inc
adc
ret
lcall
inc
or
inc
lret
jle
sbb
movsb
pop
lods
div
push
xor
sub
inc
popa
imul
fmuls
push
jo
mov
add
sahf
jge,pt
dec
orb
repnz
shrb
and
xor
test
repz
pop
movsb
cmp
jp
sbb
sbb
inc
in
sbb
in
sbb
ret
mov
sti
and
aas
inc
dec
pop
inc
dec
dec
inc
sub
out
or
stos
sbb
dec
leave
adc
out
push
dec
sahf
adc
and
fistpll
add
or
or
mov
into
sub
push
push
pop
and
push
xor
xor
sbb
mov
sub
mov
movsl
sbb
sub
xor
cmc
pop
dec
and
push
push
mov
ret
xor
jp
movsl
inc
and
mov
xor
test
push
mov
sbb
enter
and
jae
sbb
xor
inc
inc
sbb
cli
dec
repz
and
and
or
mov
mov
push
sbb
inc
adc
mov
lret
sub
dec
imul
pushf
popa
xor
dec
cltd
sbb
cmp
sub
call
pushf
in
sbb
rclb
cli
jo
mov
xchg
xor
cli
lret
mov
xor
aaa
mov
mov
shrb
sti
push
cltd
cmp
fstpt
ds
inc
adc
dec
sbb
and
jl
xchg
sub
jmp
or
fcmovnb
imul
das
xchg
dec
sbb
iret
test
int3
outsl
rsqrtps
ret
push
mov
insl
sbb
push
add
imul
aas
adc
pop
test
sub
dec
xchg
jg
lcall
dec
cmpsb
sbb
sahf
cmp
jbe
fisubl
ljmp
pop
inc
inc
fnstcw
daa
insb
push
into
outsb
clc
push
nop
fisubs
cmpsl
push
jmp
negl
sub
dec
cmp
adc
adc
xchg
mov
pop
loopne
xchg
sbb
ficomps
jb
dec
mov
jns
insl
sbb
sub
repz
mov
dec
and
fs
adc
or
inc
pop
xchg
push
sub
mov
and
adc
aaa
ss
xor
sub
push
push
adc
adc
hlt
shrl
and
xor
or
and
xor
xor
je
push
jl
cmp
push
nop
sbb
orb
adc
inc
inc
or
in
ja
fsubr
out
imul
push
adc
sub
sub
push
inc
dec
shlb
jae
sbb
sbb
and
dec
adc
push
cwtl
mov
mov
dec
and
ljmp
es
ja
iret
gs
inc
jne
ret
mov
xor
inc
addr16
and
xor
sbb
daa
movsl
insb
inc
les
lods
cmp
xlat
imul
cs
les
sub
rcll
push
inc
dec
sub
ret
inc
je
daa
fisubrs
inc
or
fwait
sub
outsl
xchg
push
adc
push
push
jb
push
aam
imul
test
dec
rorb
jbe
sbb
xor
push
dec
mov
sub
dec
dec
inc
shlb
sbb
add
or
jnp
inc
movsl
and
xor
push
dec
movsl
movsl
or
push
push
mov
push
mov
inc
adc
adc
test
adc
xchg
in
jbe,pt
sbb
imul
les
insb
and
inc
fdiv
pop
or
lods
jb
dec
xor
cmp
xchg
mov
sbb
jp
sbb
dec
aam
in
pop
scas
fcoml
loopne
call
jp
pop
fs
push
out
mov
or
in
push
aas
dec
popf
movsl
xor
sbb
inc
mov
clc
sahf
and
stos
cs
jnp
sub
inc
mov
jg
sti
mov
aaa
dec
push
or
arpl
cwtl
sbb
test
pop
adc
adc
push
sbb
or
movsl
mov
mov
push
jecxz
adc
in
push
mov
mov
pop
xor
xor
lret
dec
or
adc
and
lahf
mov
mov
or
movsl
mov
adc
jge
test
out
push
jge
add
push
cltd
repnz
or
push
adc
dec
xchg
shlb
outsb
or
and
push
push
fldenv
les
push
hlt
imul
orb
and
sbb
xchg
jle
inc
dec
or
dec
dec
cld
int3
sbb
mov
mov
push
sub
inc
sub
jno
push
inc
push
sub
xor
cmp
mov
dec
sbb
xchg
jbe
dec
test
and
inc
push
xor
dec
lret
or
inc
or
push
push
sbb
test
in
loope
sbb
mov
dec
mov
mov
sbb
jge
scas
sub
cmc
inc
in
pop
push
dec
sub
mov
imul
sahf
scas
mov
lea
test
or
adc
pop
xor
pop
fisubl
loop
xor
push
dec
sti
jno
or
or
shl
jae
sbb
xor
push
inc
xor
dec
push
sub
dec
std
dec
inc
ljmp
cmpsl
mov
icebp
push
hlt
pop
pop
and
inc
ficompl
adc
enter
leave
push
pop
aad
sbb
xor
aas
rcrb
loopne
ss
xor
sahf
jle
jp
xchg
test
push
xor
push
xor
fbld
movsb
aam
pop
and
jno
sbb
push
in
xor
push
mov
push
push
adc
cmp
push
mov
in
lahf
sbb
xchg
fs
pop
popf
push
sbb
outsl
je
mov
setg
pop
push
inc
inc
test
sbb
pop
inc
sub
orb
test
xchg
sub
out
push
adc
sbb
pop
jnp
and
mov
sub
mov
inc
movsl
pusha
movsl
in
and
sbb
pop
push
push
les
test
cmp
and
inc
adc
push
dec
xor
mulb
jb
insb
iret
cmc
xor
dec
hlt
inc
mov
jl
inc
cmpsl
fsubrl
out
or
add
inc
leave
pop
aas
fistpl
cmp
pop
push
test
push
fwait
sub
cmp
fadd
pop
inc
clc
xchg
mov
xchg
lods
cmpsb
cmp
cmp
xchg
and
xor
lods
push
shll
mov
lds
pop
lods
gs
jnp
stos
cmp
cmp
cs
popf
cmc
outsb
push
in
mov
mov
mov
std
fcmovbe
test
gs
fs
sti
push
loop
aaa
inc
push
insl
cli
arpl
lret
push
pop
mov
std
push
popa
insb
mov
outsl
push
outsb
ljmp
sub
push
sbb
ljmp
cmp
xor
inc
xchg
xor
or
jecxz
xor
inc
pushf
dec
push
xor
sub
nop
cmp
aam
leave
cld
adc
push
nop
mov
cmp
insb
jmp
xor
cmp
pop
mov
inc
pop
adc
das
xchg
inc
sbb
cmp
mov
lods
cs
push
sub
mov
pop
nop
inc
cld
and
in
aas
and
es
sub
sub
das
cld
pop
xchg
cmp
daa
bswap
pusha
jle
jle
and
mov
popa
jle
cmp
mov
jle
inc
repnz
nop
and
es
and
stc
sub
inc
das
repnz
pop
nop
cmp
daa
aas
and
jle
enter
cs
rcrb
inc
xchg
and
and
es
sub
sub
das
xchg
pop
aas
and
daa
jle
pusha
bnd
nop
and
cs
test
mov
pop
nop
and
mov
pusha
and
fsubrs
insb
loope
inc
in
sbb
and
and
and
stc
and
enter
push
icebp
test
les
aas
and
and
adc
mov
sbb
add
pop
add
pop
sbb
mov
sbb
or
sbb
jne
sub
cmp
sbb
push
dec
mov
cwtl
sbb
popa
jns
mov
pop
lret
sbb
dec
adc
xor
xor
mov
decl
test
cmp
lret
or
mov
push
mov
push
aaa
cmp
mov
mov
aam
imul
xor
cli
je
cmp
inc
arpl
xor
adc
sbb
imul
mov
les
jo
sub
bound
or
xchg
in
cs
and
mov
and
stos
sub
scas
push
adc
fisubs
dec
stos
js
jp
mov
jo
push
data16
shlb
sbb
xor
push
xor
add
cmp
inc
rorb
xchg
mov
pop
ja
ljmp
mov
in
pop
jo
ror
das
jno
mov
inc
sub
inc
sub
jl
insb
pop
sbb
add
cmc
push
out
fwait
sub
mov
cmp
jl
cmp
mov
or
dec
jae
movsb
lock
movsb
lods
mov
or
xchg
aam
loopne
call
add
or
adc
sbb
and
mov
adc
dec
dec
push
xchg
pop
inc
add
cmp
dec
xor
and
jl
mov
and
dec
mov
inc
fsub
mov
adc
and
dec
lock
hlt
and
and
inc
or
mov
adc
cmp
xchg
dec
and
pop
pusha
mov
dec
jo
js
addb
pushf
adc
mov
aam
fcoml
loopne
in
lock
cld
adc
imul
mov
adc
and
pop
mov
pop
adc
dec
jo
je
js
jl
mov
cwtl
xchg
mov
mov
and
dec
rclb
in
mov
adc
or
or
or
adc
mov
xor
pop
mov
pusha
adc
insb
dec
jo
js
addb
movsb
adc
xchg
int3
and
inc
in
mov
adc
xor
inc
adc
xor
cmp
pop
mov
pop
adc
push
and
mov
movsb
dec
mov
mov
adc
jb
outsl
sub
cs
dec
push
gs
aas
test
sbb
insl
inc
inc
jbe
ret
add
mov
push
dec
mov
sub
and
stos
fidivrs
xchg
adc
sub
data16
les
out
int
sub
test
sub
lods
pop
loopne
cld
jae
and
dec
daa
dec
mov
jg
jno
lods
sub
sbb
fistl
mov
ljmp
mov
test
sub
inc
sahf
test
xchg
or
or
cmp
add
dec
and
or
mov
push
aaa
or
cmp
sbb
xor
xor
push
xor
jecxz
xor
fs
in
cmp
mov
xchg
sub
out
insl
push
or
pop
clc
cwtl
leave
insb
js
orl
cmp
xchg
fs
and
scas
mov
fs
dec
jno
sub
je
dec
lods
jo
adc
cld
jecxz
inc
imul
mov
adc
dec
shrb
outsl
loop
cmp
or
jae
xchg
or
pop
movups
mov
xor
pop
or
cmp
adc
js
xor
je
cwtl
das
jno
fs
jae
nop
bound
xchg
mov
bound
mov
or
int3
lds
aam
push
jno
mov
push
fwait
movsl
or
inc
jae
pop
or
out
sub
outsb
movsl
and
dec
test
repz
and
mov
outsl
dec
fsubp
nop
outsl
ss
jge
imul
test
sbb
movsl
pop
fsubs
js
pop
mov
or
lcall
sub
jo
test
xor
jne
mov
dec
je
sub
mov
outsl
sbb
call
lods
loopne
or
push
scas
xor
or
dec
movsb
scas
int
lcall
sub
push
or
dec
xor
jo
xor
es
inc
daa
outsl
jmp
out
dec
add
push
gs
imul
sub
mov
popa
jno
xchg
imul
cmpsb
lock
imul
push
and
scas
cltd
and
mov
bound
sbb
cs
sbb
or
pushf
test
jne
jmp
xor
pop
dec
test
shrl
push
jecxz,pn
shll
inc
push
das
cmp
es
jnp
movsb
scas
repnz
shll
jmp
push
mov
outsb
fstps
rcll
arpl
cmc
test
xchg
nop
test
sub
repnz
sbb
negl
repnz
mov
pop
lea
xor
pop
mov
in
stos
mov
pop
xor
cltd
lods
jl
nop
or
and
add
cmpsl
pop
outsb
adc
stos
sub
mov
inc
push
in
shrl
pushf
and
loope
dec
stc
roll
loopne
inc
cmpsl
sub
cmp
xor
xor
test
imul
push
dec
xor
mov
pop
in
and
mov
jge
inc
dec
cmp
add
push
je
cmp
pop
test
mov
xchg
jno
dec
outsl
xor
lods
addr16
dec
adc
xor
sub
adc
or
das
fildll
repz
sbb
dec
roll
xor
push
into
je
int
push
and
rorl
out
pop
mov
jbe
ja
mov
mov
push
mov
adc
dec
ljmp
cmpsb
jl
add
cmc
mov
inc
cltd
in
mov
insb
cmc
outsb
daa
xor
out
xor
movsl
dec
jnp
xor
pop
inc
mov
dec
decl
faddl
xchg
scas
jb
js
push
fs
inc
dec
inc
dec
cwtl
ss
clc
sbb
aas
mov
pushf
dec
mov
fs
mov
nop
jl
and
jns
mov
pop
leave
jle
mov
inc
cmp
dec
sub
sub
push
sub
and
mov
dec
cltd
jo
scas
sub
pop
sbb
push
sub
sub
mov
inc
push
jmp
movsb
push
inc
jl
shr
push
lds
sub
mov
xchg
stos
ss
lea
xchg
dec
mov
adc
mov
adc
insl
inc
gs
lahf
sub
daa
adc
leave
fs
push
and
jge
cmp
sub
or
mov
adc
in
mov
mov
fimuls
push
ljmp
lret
adc
inc
sbb
std
cmp
pop
sbb
or
push
icebp
xchg
sub
pop
mov
mov
int
jbe,pt
adc
or
pop
and
push
or
pop
add
push
movsl
push
movsb
dec
and
sbb
scas
rclb
in
mov
fmull
icebp
and
cmp
aam
mov
rcrb
push
sub
fildl
pop
jo
test
test
scas
push
fsubrs
add
sbb
and
ja
cmp
clc
xor
inc
sub
adc
sub
or
or
pushl
jo
sub
lret
inc
dec
loope
mulb
jns
mov
and
sub
push
xchg
jo
test
cld
std
or
cmc
xorb
je
movsl
sbb
fcompl
aam
mov
and
sub
or
inc
xor
xlat
sar
cmp
fabs
adc
sub
and
jns
dec
pop
aas
lock
lods
pop
jl
xchg
sbb
cmp
out
mov
pushf
mov
and
mov
sbb
mov
mov
jp
mov
roll
jnp
sub
and
stos
sbb
sbb
inc
jg
lods
xor
imul
sti
adc
hlt
mov
mov
xor
or
jl
xor
xorb
scas
adc
inc
mov
out
and
push
jo
mov
pushl
mov
xor
or
bound
int3
and
mov
dec
jb
ss
fsubs
dec
iret
cld
sub
cmp
jne
push
sbb
push
pop
push
inc
and
lods
add
sbb
gs
dec
sti
movsl
mov
lods
jmp
adc
xchg
aam
and
lds
mov
or
fs
aam
stos
cmp
nop
je
mov
adc
add
pop
outsw
adc
insb
jge
xor
adc
repz
sub
es
dec
outsl
jbe
dec
cltd
mov
fstpl
sbb
push
call
xchg
xchg
insb
div
xchg
and
lret
inc
das
cs
mov
xchg
je
xchg
clc
test
lcall
push
push
cmp
push
push
loopne
jne
fdivl
mov
fs
out
cmpsb
push
loope
sbb
mov
loope
push
enter
fimuls
inc
or
dec
test
push
adc
push
fs
cli
popa
movsl
cld
in
push
sub
xchg
cs
jmp
ffreep
adc
adc
outsl
xchg
fimuls
loop
mov
ljmp
mov
insb
mov
fldt
enter
cltd
test
mov
inc
mov
sarb
pop
popf
mov
int
or
mov
sub
in
and
inc
xor
mov
jns
mov
popa
pop
shrb
jmp
mov
xchg
insl
push
jg
imul
mov
dec
sub
stc
push
cld
push
lahf
pop
mov
je
jb
std
hlt
xchg
mov
int3
xchg
xor
test
enter
mov
push
adc
and
scas
and
mov
arpl
or
or
adc
imul
jns
ficoml
mov
mov
cmpsl
inc
je
in
mov
inc
lcall
xchg
push
outsl
xor
iret
adc
inc
shl
mov
dec
insb
in
rcll
enter
sub
jns
push
dec
mov
jae
push
daa
push
popa
stos
pop
adc
cmpb
fimull
pop
stc
adc
xchg
imul
rorb
dec
into
call
dec
mov
clc
mov
daa
inc
cwtl
leave
jno
cli
sbb
xorb
or
adc
daa
fisubs
cmp
jo
push
jmp
fisubl
mov
jns
jmp
mov
pop
cld
dec
daa
cs
and
scas
pusha
popf
sti
ret
imul
jge
sbb
sub
pop
rcl
mov
repnz
orl
pushf
inc
cld
int
lcall
cmp
or
push
jae
mov
je
dec
pop
int3
xor
out
je
cmp
jmp
adc
mov
and
pop
rolb
xchg
dec
dec
in
pop
xchg
ljmp
sbb
sub
sbb
push
mov
mov
add
cmp
js
mov
loop
gs
movsl
push
jle
pop
clc
daa
jnp
mov
cwtl
mov
sub
push
push
mov
sti
xor
adc
adc
dec
adc
push
xor
mov
cmp
mov
pop
dec
daa
in
xchg
push
mov
xchg
mov
std
jge
ficoml
cmp
fsubs
push
jbe
sbb
add
push
in
ret
push
dec
gs
mov
negl
aas
dec
mov
pop
push
adc
fs
je
outsl
cmp
sub
je
stos
cmpsb
pop
push
or
or
les
div
mov
lcall
pop
xchg
cmpsb
rcrb
mov
jb
add
ret
movsl
mov
movsl
xchg
cmpsb
mov
xor
push
jbe
gs
outsb
nop
mov
popf
jp
sub
out
push
push
loop
mov
or
mov
sub
call
xor
jne
sub
jecxz
xchg
call
dec
movsl
out
mov
inc
clc
in
and
roll
inc
and
mov
hlt
movsb
cs
inc
cmc
mov
imul
lahf
mov
mov
stos
in
or
push
test
jmp
test
adc
arpl
cmp
or
or
outsb
cmp
movsb
cmp
and
clc
ficompl
nop
push
test
push
cld
push
push
inc
test
fisttpl
pusha
cmpsb
inc
fstpt
in
and
mull
mov
mov
push
rorb
dec
mov
lock
xchg
xchg
adc
orl
mov
ja
shl
sub
jge
nop
test
fcomps
fidivrl
aas
push
outsb
ror
or
fisubrs
jae
lds
shll
lods
jae
test
mov
and
mov
push
test
sub
push
gs
in
jp
xchg
repnz
ja
push
cs
xchg
scas
sub
pop
xor
xor
mov
dec
sub
in
dec
adc
xchg
scas
jns
mov
and
dec
sub
adc
in
cmpsl
ficompl
jl
dec
dec
xor
sub
mov
push
sub
pop
js
clc
test
cmp
je
addr16
mov
or
cmp
pushf
cmp
jo
add
shl
call
push
scas
jo
pop
add
sub
sub
std
jns
push
mov
lds
inc
mov
fimuls
adc
popf
cmc
inc
mov
icebp
ja
fcom
lret
enter
outsl
and
mov
adc
test
lods
pop
fwait
cmp
sub
xor
and
cmp
into
ficoml
push
lock
ss
movsl
sbb
sbb
push
subl
adc
and
inc
fisubrl
jno
lods
jbe
call
imul
fnstenv
popa
jns
and
insb
ds
cs
sbb
push
mov
sub
jle
in
jmp
test
imul
cmpsb
pushf
push
cmp
pop
jl
je
shl
or
jne
test
fst
insl
lods
insl
xor
fs
daa
stos
loopne
xchg
push
sti
push
sub
sub
outsl
testl
lret
call
cs
and
aad
fidivrs
das
or
and
jl
cld
dec
sub
pop
js
mov
adc
icebp
dec
push
sub
sbb
outsb
in
cli
nop
mov
jo
or
sub
adc
inc
sbb
push
or
mov
or
negl
sub
sub
cli
sub
test
xchg
jl
ficompl
sub
xor
pop
xchg
outsl
das
xor
dec
push
pusha
and
pop
push
mov
das
adc
sbb
xchg
cmp
and
repnz
inc
sub
sub
push
xchg
push
or
sub
xchg
es
js
popf
or
xchg
rcrb
icebp
fnstsw
lods
notl
lret
icebp
dec
out
sahf
out
out
mov
clc
push
pop
mov
lcall
xchg
lds
mov
jle
das
jae
jl
adc
in
rcl
sub
scas
adc
cld
sub
sub
fildl
daa
arpl
pop
das
or
dec
data16
pop
inc
ljmp
push
inc
or
pop
mov
sub
fists
sbb
sarb
dec
push
sahf
bound
inc
cwtl
mov
mov
xor
dec
out
cmp
mov
push
mov
jmp
xor
movsb
adc
lea
or
mov
dec
xchg
rcr
movl
pushl
insl
nop
add
aas
xchg
xlat
push
lret
leave
push
cmp
out
sub
jae
sbb
xlat
dec
inc
jb
clc
data16
lretw
fistps
in
idivb
push
mov
loop
popa
pop
cmp
imul
dec
stc
push
or
leave
or
insb
push
xchg
or
fmuls
aam
adc
in
lcall
jne
xchg
jl
add
xchg
in
lahf
pop
cmpsl
mov
pop
dec
outsl
out
sarl
sbb
jne
xchg
stos
or
outsb
in
clc
cmp
cmp
jmp
lcall
pushf
leave
inc
push
add
mov
adc
jns
mov
sahf
sub
jmp
xchg
iret
jle
push
adc
pop
and
test
mov
and
xchg
sahf
les
daa
addr16
daa
push
xchg
and
mov
movsb
cmpsb
adc
arpl
aaa
jl
xchg
inc
js
stc
xchg
stc
cs
test
cmpsb
push
sar
fnsave
das
test
xchg
or
jo
pop
lret
sub
pop
outsb
dec
aam
sub
jmp
push
aam
jl,pn
sub
movsl
push
mov
jnp
mov
stos
sbb
sub
push
sub
scas
in
scas
pop
dec
and
sub
sub
out
jmp
pop
or
outsl
cltd
push
xchg
inc
dec
push
cs
push
mov
jecxz
pop
push
test
sub
mov
push
jecxz
push
out
insl
outsl
adc
sub
jnp
std
xor
pop
loope
dec
cmp
repz
inc
pop
mov
xor
mov
cmpsb
inc
loopne
repz
inc
sub
dec
sti
cs
inc
inc
sahf
cmpsl
fsts
mull
xchg
je
mov
pop
mulb
xchg
jae
loopne
mov
xchg
jp
push
sbb
mov
test
push
or
push
inc
cli
clc
xlat
fsubr
jl
fwait
imul
jb
dec
mov
test
in
inc
push
mov
jnp
scas
shrl
adc
outsl
jae
mov
pop
sub
arpl
or
insb
mov
andb
nop
xchg
cwtl
and
mov
dec
fcoms
clc
shrl
sbb
xor
mov
push
and
dec
pusha
xchg
push
mov
movsb
dec
mov
mov
aam
fcoml
in
lock
clc
mov
loope
pop
mov
dec
cmp
push
pop
mov
and
dec
test
movsb
and
dec
les
in
mov
adc
mov
leave
inc
xchg
or
and
inc
xor
mov
dec
and
dec
pop
xchg
push
mov
test
mov
inc
fsubr
mov
adc
add
adc
and
xor
mov
dec
push
xchg
pop
and
js
adcb
and
dec
pushf
xchg
test
mov
mov
aam
fmull
xchg
in
and
ss
loope
inc
sbb
mov
xor
cmp
mov
pop
adc
dec
js
andb
inc
xchg
pushf
mov
rclb
loopne
call
inc
add
jmp
sbb
and
sub
mov
call
inc
pop
mov
and
dec
mov
mov
rclb
call
mov
or
sub
mov
dec
and
dec
pop
xchg
and
jl
mov
xchg
and
dec
test
mov
mov
rclb
fsubl
dec
lock
cld
adc
and
inc
sbb
xor
cmp
dec
dec
push
xchg
pop
and
js
adcb
and
dec
pushf
xchg
movsb
and
adc
and
dec
fcoml
hlt
cld
mov
mov
loope
sbb
and
sub
xor
inc
and
push
pop
mov
and
dec
jl
andb
inc
nop
cwtl
mov
dec
mov
inc
aam
mov
adc
and
push
add
mov
or
inc
xor
mov
push
and
dec
push
inc
mov
mov
loop
ror
aam
fsubl
dec
lock
clc
sbb
leave
movsb
pop
or
sub
xor
cmp
inc
dec
mov
and
dec
insb
xchg
je
addb
cwtl
adc
xchg
mov
aam
fcoml
in
lock
cld
mov
mov
inc
and
mov
cmp
shll
dec
inc
push
pusha
mov
jo
jl
test
pushf
lods
mov
int3
xchg
aam
faddl
mov
pop
add
or
sbb
and
sub
mov
call
inc
fs
mov
andb
nop
xchg
pushf
and
adc
and
dec
loopne
lock
aaa
add
rorl
or
and
dec
xor
cmp
dec
inc
push
pop
mov
insb
and
dec
test
mov
mov
xchg
aam
faddl
mov
adc
and
xchg
and
sub
mov
push
and
dec
fs
insb
and
mov
mov
mov
inc
aam
mov
adc
and
dec
clc
mov
adc
sbb
sub
xor
inc
xchg
dec
and
pop
mov
and
dec
mov
lods
mov
mov
dec
fcoml
hlt
sarl
or
mov
cmp
shll
dec
inc
push
pusha
mov
jo
jl
test
pushf
test
mov
mov
xchg
shlb
fadds
mov
adc
sub
adc
dec
sbb
sub
xor
inc
dec
mov
and
dec
je
andb
inc
xchg
pushf
mov
les
fsub
mov
adc
and
inc
add
fxch
or
and
sub
mov
dec
and
dec
pusha
xchg
insb
and
mov
mov
and
adc
and
dec
clc
mov
sbb
sub
xor
cmp
mov
and
dec
fs
insb
and
test
pushf
dec
movsb
xchg
lods
and
adc
and
dec
cld
mov
adc
and
inc
and
mov
adc
das
shll
dec
inc
pop
pusha
mov
je
jl
test
pushf
movsb
mov
les
fsub
mov
adc
sub
mov
sbb
and
sub
xor
cmp
adc
dec
pusha
xchg
push
test
pushf
dec
movsb
xchg
mov
mov
mov
aam
fsubl
in
lock
mov
and
dec
sub
dec
push
mov
fs
dec
je
jl
test
mov
mov
inc
rcr
mov
adc
cs
adc
sbb
and
mov
call
inc
pusha
push
and
dec
nop
xchg
cwtl
and
adc
and
dec
in
in
and
loopne
orl
dec
sub
cmp
mov
pop
and
dec
jo
jl
test
mov
rclb
loopne
in
adc
sub
mov
and
dec
xor
adc
pusha
dec
push
inc
orb
dec
mov
sarb
adc
and
dec
lock
cld
sbb
fldenv
or
inc
and
xor
cmp
dec
dec
push
xchg
pop
and
push
andb
xchg
xchg
mov
mov
and
dec
fcoms
lock
mov
adc
add
and
dec
sub
inc
dec
mov
and
dec
fs
insb
and
test
movsb
dec
lods
xchg
mov
mov
fcoml
in
in
dec
cld
lea
loope
or
and
inc
sub
mov
dec
push
xchg
pop
and
jo
mov
dec
test
mov
mov
aam
loopne
in
dec
hlt
xchg
cld
adc
and
adc
mov
sub
cmp
xchg
dec
and
pusha
push
and
dec
mov
pushf
test
mov
mov
inc
aam
mov
adc
and
dec
cld
lea
and
inc
sub
mov
dec
dec
xchg
push
and
insb
mov
and
dec
nop
xchg
cwtl
and
rclb
and
dec
loopne
call
ror
or
dec
sbb
and
sub
xor
mov
push
and
dec
pusha
xchg
push
js
adcb
and
dec
mov
inc
mov
shlb
dec
call
loopne
fyl2x
or
adc
and
dec
xor
dec
push
mov
and
dec
jl
mov
xchg
inc
pushf
lods
mov
rclb
in
hlt
mov
adc
add
adc
sbb
xor
mov
dec
dec
xchg
pop
and
push
test
dec
cwtl
xchg
movsb
and
enter
fsubs
loopne
call
or
mov
or
and
sub
xor
cmp
adc
dec
pop
xchg
push
orb
dec
test
mov
mov
aam
loopne
call
jo
rclb
mov
and
xor
xchg
inc
and
pop
pusha
mov
and
dec
mov
mov
mov
adc
and
dec
call
loopne
orl
dec
and
xor
cmp
cli
and
dec
pop
xchg
and
jl
test
mov
dec
mov
inc
mov
aam
fmull
xchg
lock
and
xchg
or
sbb
and
mov
cmp
shll
push
inc
pop
mov
and
dec
test
pushf
movsb
mov
dec
int3
mov
adc
and
inc
add
or
adc
sbb
and
mov
cmp
dec
dec
push
xchg
pop
and
jl
test
mov
dec
pushf
xchg
movsb
and
int3
adc
and
dec
in
xchg
cld
sbb
shll
xchg
cmp
dec
inc
push
pusha
mov
and
dec
test
mov
mov
xchg
aam
faddl
mov
pop
push
xlat
fxch
or
xchg
sbb
and
mov
dec
and
dec
pop
xchg
and
orb
dec
movsb
xchg
lods
and
adc
and
dec
in
in
and
inc
cld
add
fdiv
or
sbb
and
dec
xor
cmp
mov
and
dec
mov
shlb
popa
jp
imul
sbb
fcmovnu
insl
inc
outsl
fs
xchg
jae
pop
mov
outsl
bound
gs
fisttpll
out
std
push
or
outsb
out
push
mov
popa
jbe
sbb
arpl
push
or
imul
jl
mov
arpl
lods
pop
sbb
outsb
lea
push
and
or
insb
test
repz
jae
stos
and
xor
inc
adc
inc
or
and
jae
sub
xchg
jecxz
shll
and
test
fdiv
int
or
test
jb
imul
mov
int
push
lret
dec
sub
popa
dec
xor
jns
je
loop,pn
js
jne
ljmp
dec
or
rclb
test
adc
adc
scas
shll
fwait
adc
out
lock
mov
mov
outsl
js
fbstp
mov
sbb
lds
fs
adc
pop
jbe
or
jmp
ss
sbb
scas
ja
xchg
xchg
inc
sbb
cmp
into
test
gs
sub
cmp
insb
mov
das
pop
rolb
or
push
sbb
pop
push
mov
imul
xchg
call
or
xor
xor
pop
popf
test
or
jno
lret
ja
or
inc
sbb
or
pop
pop
sbb
imul
adc
push
fadds
jne
sub
les
cmc
mov
sub
lret
xchg
xchg
insb
adc
xchg
sahf
and
and
dec
adc
adc
lods
outsb
push
popa
adc
repz
and
push
data16
stos
je
xchg
outsb
scas
adc
or
or
aam
bound
sbb
and
outsl
arpl
je
inc
jns
xchg
pop
inc
out
daa
dec
adc
sub
adcb
xchg
ret
dec
jne
les
sub
mov
jns
jns
xchg
cs
jo
mov
shl
or
or
adc
imul
xchg
ja
and
dec
or
inc
or
stos
or
xor
adc
sub
out
push
xor
sub
les
fmull
adc
test
mov
push
mov
in
sbb
aam
mov
lods
aaa
adc
push
data16
sbb
dec
sub
bound
jp
aas
sub
and
popa
xchg
insb
lods
adc
sub
xchg
and
insl
adc
sbb
or
das
leave
xchg
enter
ss
sub
and
imul
jae
xchg
sub
insl
sbb
imul
or
fs
les
gs
mov
pop
sub
inc
lods
or
or
repz
pop
imul
inc
jae
or
sub
mov
das
popa
jl
dec
or
imul
jns
and
jne
pop
mov
adc
sbb
lds
adc
aam
jbe
mov
test
or
out
je
js
mov
jb
inc
sub
jge
mov
lret
enter
loop
xchg
jecxz
adc
mov
or
sub
aam
sbb
xor
rcrl
shll
icebp
dec
or
lods
insb
jne
or
sti
out
das
movsb
and
xchg
jae
cmp
fstpt
test
or
jns
pop
sbb
jae
adc
pop
adc
gs
adc
push
adc
ljmp
addl
push
lods
inc
and
push
dec
loopnew
xchg
add
lret
sbb
cld
gs
lcall
xchg
mov
jo
mov
adc
daa
cltd
or
sbb
push
jns
adc
or
imul
ljmp
call
or
imul
orl
sub
and
enter
sub
sbb
ljmp
sbb
shlb
arpl
mov
jo
nop
sbb
or
idivb
div
test
arpl
movsb
cmp
sbb
pop
movsb
fcmovnu
adc
pop
jl
bound
inc
mov
bound
fldt
or
fs
or
adc
orl
rorb
dec
sub
sub
xor
lods
adc
outsb
mov
pop
repz
cmp
fs
rclb
push
into
fidivrl
jge
xlat
leavew
mov
sbb
ret
push
std
outsb
ret
xorb
or
and
jle
mov
and
sbb
aam
pop
stos
adc
cmp
jbe
out
int3
cltd
test
daa
inc
insl
sub
sbb
xchg
push
push
orb
mov
cmpsl
jle
cmp
and
decb
jae
ds
xchg
inc
cmpsl
adc
notb
mov
adc
ja
inc
js
gs
ja
outsl
inc
adc
dec
xchg
push
out
aad
dec
add
daa
inc
test
int
xchg
sbb
xlat
cltd
int3
mov
pusha
push
adc
outsl
adc
mov
das
loop
cmpsb
sub
push
cmp
mov
mov
adc
imul
mov
mov
jp
or
xchg
or
adc
ficoml
rorl
adc
bound
push
dec
and
rcll
xchg
daa
outsb
push
scas
adc
or
icebp
jmp
outsl
mov
loope
jp
stos
cmp
xchg
dec
adc
sub
xchg
sub
sbb
gs
adc
je
or
mov
shr
or
dec
movsb
mov
data16
mov
je
or
shll
insb
outsl
ficompl
jecxz
inc
mov
jp
int3
aad
lds
dec
decb
je
adc
fcmovnu
xor
ja
and
cmc
dec
punpckldq
mov
loop
mov
or
outsb
sub
ja
adc
leave
sbb
sbb
data16
outsl
repz
sbb
sub
cmp
mov
jl
dec
xor
fs
mov
jp
mov
lcall
leave
sbb
push
scas
cmp
fsubs
aaa
cmp
in
inc
xchg
jno
mov
adc
loopne
adc
add
fwait
mov
and
dec
lods
les
mov
mov
iret
jg
xchg
fisubrl
daa
or
xchg
clc
or
or
push
in
adc
mov
mov
mov
daa
or
adc
ficoml
imul
or
fwait
mov
mov
sbb
imul
cmp
inc
sbb
scas
mov
xor
jae
sub
clc
add
pop
insb
imul
data16
ficoml
push
inc
cld
aaa
sbb
adc
idivb
imul
or
mov
dec
mov
cmp
sbb
jecxz
sub
mov
or
subl
shlb
sbb
and
jns
pop
nop
sbb
aaa
test
inc
mov
dec
ficoml
insb
dec
lret
adc
inc
inc
fldenv
xchg
loopne
sbb
pop
sub
pop
or
adc
fcomps
mov
arpl
or
fsts
outsl
jns
js
gs
call
mov
es
adc
popa
adc
xor
adc
repnz
imul
mov
jo
gs
repz
popa
xor
adc
fs
mov
bound
and
push
or
xchg
xor
shrb
push
or
imul
adc
or
pop
in
xchg
sbb
std
aas
sub
sbb
cs
mov
dec
ret
pop
lods
cmpsb
sbb
insl
adc
movsb
adc
dec
fistpl
and
fs
add
jmp
dec
imul
mov
or
and
sub
adc
andb
int3
mov
adc
cli
push
shlb
and
test
leave
adc
inc
stc
ja
imul
jb
adc
adc
stc
es
sbb
dec
lcall
jmp
icebp
test
mov
adc
mov
inc
ja
xchg
dec
je
pop
outsl
or
inc
jp
mov
jl
das
and
daa
xor
data16
dec
test
jecxz
mov
and
in
adcb
fstl
stos
sbb
jns
xor
push
adc
or
ja
out
push
sub
in
adc
pop
mov
add
arpl
imul
sbb
sarl
outsb
movsb
push
int
repz
pop
mov
adc
dec
test
adc
test
push
std
insb
xchg
mov
shlb
or
jns
jp
cmp
bound
adc
fdivrs
movsb
adc
sub
adc
or
je
arpl
ficomps
dec
adc
sub
adc
push
jne
je
push
cmc
xchg
out
jo
jl
sub
fcmovbe
sbb
jae
data16
movsb
sub
add
or
in
data16
jns
inc
sbb
dec
popa
jno
pop
and
mov
or
fimuls
adc
jmp
jo
notb
repz
jecxz
or
jmp
jns
insb
or
mov
outsl
adc
mov
lahf
daa
sbb
orl
ret
mov
into
jae
mov
adc
adc
cmp
push
sub
and
or
test
addr16
sbb
mov
fwait
mov
jns
or
mov
dec
lods
jb
adc
jo
xor
mov
notb
and
mov
or
mov
pop
or
jecxz
orb
stos
and
or
insl
mov
aas
sbb
fs
test
mov
ret
movsb
pop
or
or
or
cs
movsb
sbb
test
jae
or
out
arpl
pushf
inc
movsl
inc
push
adc
daa
xor
sub
or
inc
mov
jo
hlt
jb
imul
sub
inc
mov
rclb
ss
clc
fs
mov
fs
pop
xor
or
je
xchg
es
adc
sahf
aaa
out
mov
stos
sti
mov
pop
jl
push
dec
sub
stos
sbb
cmc
cs
shl
mov
insl
test
and
imul
outsl
mov
inc
adc
inc
mov
or
rcll
cmp
int
cmpsl
adc
nop
int3
adc
jbe
mov
jge
add
loope
cmp
lcall
jp
bound
xor
je
adc
daa
cmc
lea
inc
adc
outsl
movsl
adc
ret
jns
sub
outsl
and
mov
hlt
push
repnz
adc
fadd
test
cmc
inc
add
incb
adc
xor
adc
int
sub
gs
or
std
xchg
adc
xchg
insb
cmp
repz
adc
out
and
adc
lock
jns
adc
xchg
std
mov
imul
sar
jno
cmp
sbb
adc
jae
pop
sub
mov
mov
mov
das
outsb
xor
in
cmp
pop
jnp
movsb
or
insl
or
adc
inc
out
dec
jbe
or
jmp
dec
jo
frstor
mov
cld
push
mov
xor
sbb
test
inc
cmpsb
loop
cmpsl
dec
jbe
leave
sub
rcrb
cmp
sbb
iret
or
push
xor
ja
imul
pop
addr16
inc
and
pop
or
in
arpl
jp
imul
or
sbb
adc
imul
dec
jbe
sbb
addr16
or
pop
mov
or
jg
es
outsb
or
fnstcw
notb
bound
or
mov
shll
or
adc
adc
fistl
mov
insl
adc
adc
inc
rclb
hlt
enter
nop
repnz
lods
ficompl
jns
mov
xchg
out
or
bound
adc
imul
cmp
and
mov
int3
xchg
sub
adc
or
xchg
negb
in
mov
inc
lcall
mov
or
jb
and
cmp
scas
popa
mov
sub
jne
enter
jnp
adc
popf
mov
push
mov
adc
arpl
push
ficoml
repz
pop
sub
adc
ljmp
cmpsl
imul
int3
fisubs
inc
and
jp
push
or
sbb
sub
sub
adc
cmp
pop
sub
arpl
dec
adc
pusha
or
inc
xchg
inc
fsts
xor
in
bound
cwtl
fistpl
fwait
std
sbb
push
shrl
xchg
adc
test
pop
outsl
sbb
xor
adcl
in
cmp
imul
rorb
adc
cmc
jae
sbb
lret
push
popa
push
jp
jne
or
jb
xorb
inc
shrl
jl
adc
out
fcom
sbb
push
icebp
cmp
pop
mov
pop
xchg
dec
and
xchg
and
cs
or
and
into
in
adc
std
cmpsb
jo
or
ja
or
jae
int3
adc
cwtl
data16
mov
filds
rclb
rcr
adc
mov
fs
cmp
mov
adc
dec
dec
adc
loopne
test
cltd
push
cmp
or
xchg
mov
or
dec
rorb
gs
push
mov
or
orb
insb
and
lret
sbb
adc
lock
popa
and
or
inc
or
out
cmpsl
je
stos
test
insl
sbb
and
movl
jno
adc
push
nop
cmp
sub
pop
jno
ds
insb
inc
adc
adc
sub
xchg
insb
ss
sahf
jl
ficompl
jnp
xor
gs
mov
stos
adc
and
shld
out
icebp
fnsave
mov
push
xchg
and
or
and
jecxz
push
faddl
push
sbb
xor
insb
rclb
jo
push
or
push
aad
sbb
je
outsl
sub
cs
lret
je
xorl
outsl
aad
int3
fbld
into
addr16
ficompl
dec
pop
sub
lods
mov
lret
rcrl
ss
adc
adc
lret
mov
insb
mov
ja
or
cmp
jns
test
les
or
mov
sbb
sbb
shrl
jns
adc
in
adc
inc
or
pop
or
sbb
cwtl
insl
lods
dec
lret
or
lcall
aaa
or
adc
aad
lcall
adc
enter
in
mov
sbb
pop
jo
adc
hlt
js
push
fiadds
int
mov
jb
leave
sti
adc
or
push
outsb
adc
or
imulb
or
mov
fidivrs
outsl
adc
adc
or
lret
mov
cmc
popf
cmp
or
lret
sbb
sub
sub
icebp
jp
clc
fisubs
xor
inc
aam
jne
daa
mov
cmp
inc
or
imul
mov
or
push
xchg
jo
lret
jle
sbb
nop
adc
sub
jne
sub
jns
jmp
sub
xchg
mov
and
push
lcall
push
adc
pop
adc
movsl
sub
adc
adc
es
adc
and
sub
cmp
dec
gs
and
dec
pushf
cmp
and
setle
sub
sbb
mov
sub
mov
fs
jns
daa
dec
lds
add
hlt
adc
mov
imul
mov
insb
data16
pop
push
xchg
je
int3
sbb
leave
adc
or
push
sbb
inc
or
insl
xchg
mov
pop
xchg
jp
sub
adc
mov
adc
jge
dec
adc
pushf
adc
dec
sbb
or
jge
mov
insl
and
xchg
mov
adc
xor
inc
outsb
and
xchg
aam
dec
inc
mov
imul
or
imul
clc
orb
cmp
jo
mov
je
mov
inc
push
icebp
lock
and
pop
dec
mov
mov
ja
js
jmp
adc
outsl
mov
add
sub
stos
popa
inc
or
adc
aaa
inc
test
nop
xchg
adc
push
pop
mov
dec
adc
add
mov
and
or
xchg
sub
inc
jns
data16
ror
or
jae
jns
lahf
mov
or
scas
adc
xchg
mov
sbb
jl
or
pop
xchg
inc
fs
push
cs
push
adc
cmp
bound
iret
adc
aad
and
aad
jecxz
adc
ficoml
dec
add
mov
sbb
lret
ss
jb
lcall
popa
daa
jl
pop
sarl
and
in
cmp
inc
mov
call
dec
mov
jb
imul
adc
mov
repnz
insb
mov
jbe
pushf
nop
sub
or
test
dec
mov
cmp
push
jo
gs
or
jo
adc
imul
cmp
dec
out
jns
jp
add
push
iret
imul
addr16
xchg
dec
lea
adc
sub
or
daa
lds
nop
stos
ljmp
adc
loopne
jne
dec
adc
or
mov
mov
dec
lea
mov
push
adc
or
push
sbb
sbb
enter
xor
and
sbb
inc
stc
jle
mov
fs
and
jp
pushw
mov
mov
push
pop
pop
and
fidivrs
and
mov
dec
rcrb
movl
js
outsl
or
adc
out
loop
xchg
outsl
and
jae
fbstp
popf
lea
repz
adc
lcall
lock
push
ficoml
insl
or
dec
ret
or
ja
pop
and
outsl
sbb
loopne
adc
adc
or
push
or
fstsw
lret
jbe
mov
loop
mov
inc
adc
stos
pop
popa
mov
jl
dec
outsl
pop
in
bound
push
lods
imul
and
add
xor
pop
js
xor
push
jns
or
fsts
mov
int
xor
or
jmp
adc
fistl
int
test
mov
dec
adc
sbb
dec
adc
adc
insb
and
add
bound
pushf
lcall
and
cmpsl
pop
cld
cltd
sbb
insb
cltd
adc
adc
mov
rclb
dec
outsl
mov
push
lret
or
jl
or
es
inc
xchg
mov
adc
std
aaa
flds
jmp
push
push
insb
pop
in
jp
sbb
xchg
dec
xchg
or
adc
bound
adc
and
lods
int3
push
jp
aam
push
leave
arpl
push
mov
imul
push
mov
pop
adc
int
inc
fildll
pop
cmc
push
pop
push
mov
adc
push
pop
sub
jo
sbb
sub
sbb
ljmp
cmp
push
sub
fistl
loop
or
test
int3
xor
jae
adc
or
mov
push
icebp
insb
dec
dec
add
mov
or
dec
xchg
jb
movsb
xchg
mov
sub
cmpsb
jecxz
cmc
daa
push
test
mov
scas
les
push
adc
jmp
adc
add
insb
popa
sbb
xor
push
push
mov
js
mov
insl
inc
or
insb
adc
subl
aam
insb
adc
shrb
js
adc
or
outsb
test
in
das
jb
stos
mov
in
cli
dec
es
inc
xchg
xlat
adc
lret
js
push
lret
and
jecxz
sub
add
clc
and
scas
adc
mov
jb
fsts
je
and
pop
fwait
mov
or
mov
jne
scas
adc
add
bound
lea
add
adc
xchg
cmpsb
adc
adc
and
jo
or
jb
sub
sub
jp
outsb
jns
repnz
imul
mov
bound
js
imul
dec
int
jecxz
bound
in
jns
push
cmpsl
jmp
int3
add
add
adc
inc
jl
cmp
inc
cmp
inc
xor
pop
inc
push
cmp
xor
add
cmp
and
call
jg
in
das
notl
sbb
sti
mov
mov
add
push
or
pusha
adc
push
aaa
inc
or
incb
push
sarb
pop
loope
je
mov
cmp
and
mov
inc
call
lods
loop
sbb
jle
and
sub
aad
sub
ret
lcall
xchg
scas
push
pop
shrb
fs
inc
shrl
xchg
out
cltd
cmpsl
aas
lods
add
xlat
xchg
mov
fwait
cs
js
jmp
sbb
jns
mov
cmp
cmp
arpl
shl
jno
and
movsl
cld
push
cmp
mulb
loop
nop
test
or
or
jae
lods
push
mov
mov
mulb
lcall
cmp
pop
aaa
movsb
cmp
dec
aaa
xchg
xor
or
xchg
ss
cmp
mov
jb
cmp
and
jb
jle
jae
adc
aaa
in
outsl
data16
lcall
cmp
sub
mov
push
or
push
dec
xor
clc
mov
mov
stos
mov
ja
sar
push
out
in
rcl
jno
xchg
jae
jmp
jae
cmp
in
push
lcall
fdivl
push
test
imul
popf
jnp
cmpsl
divb
leave
push
push
lock
jno
mov
mov
and
cmp
cmp
push
inc
mov
jmp
inc
add
add
leave
mov
xorb
inc
loop
dec
sbb
mov
or
add
xor
add
js
cs
jmp
in
jl
cmp
shlb
or
push
dec
js
inc
and
pop
sbb
xor
sbb
push
jo
or
subl
inc
jne
cwtl
xor
add
pop
pop
cmp
xor
call
push
cli
push
call
cmpsb
jns
mov
shll
push
call
ret
icebp
cmp
cltd
and
adc
test
test
ret
pop
add
push
sub
sbbb
inc
add
rep
mov
stos
push
push
jno
cmp
xor
or
push
incl
add
test
ret
lods
fs
mov
sti
xlat
rcr
in
pop
xlat
int3
push
xchg
jns
dec
xor
xlat
sub
inc
sbb
pop
repz
pop
sbb
insb
inc
inc
gs
mov
icebp
sub
sub
sub
and
inc
call
jnp
inc
and
out
cs
jo
adc
and
push
pop
jmp
stos
cmpsb
inc
jl
and
xchg
loope
xor
inc
jns
stos
das
stc
inc
mov
inc
push
addr16
lock
dec
sbb
and
icebp
or
mov
pop
mov
mov
imul
sub
fs
dec
out
test
stos
mov
inc
lahf
jp
cs
test
test
fsubrl
pop
dec
call
stos
inc
sub
lds
out
imul
push
mov
adc
xchg
mov
sbb
sbb
sub
imul
cmp
lods
push
add
push
and
cmpsl
xchg
jns
mov
cwtl
add
add
stc
repnz
and
popa
outsl
call
mov
xchg
stos
sub
dec
jl
dec
mov
dec
push
into
pop
scas
mov
jb
sub
pop
inc
fs
cmp
mov
add
and
sub
jg
cmp
inc
push
std
jno
dec
aad
sub
jp
xor
sub
test
add
or
js
or
fndisi(8087
sub
out
mov
inc
push
mov
in
push
push
xchg
das
sub
xor
rcrl
dec
popf
push
sbb
imul
fidivs
cmp
jbe
sub
sub
leave
rcl
leave
shlb
in
and
mov
xchg
push
push
pusha
in
add
cmp
int
lods
je
or
or
and
loopne
jne
xor
mov
lods
lock
sbb
sbb
cmp
or
fisttps
mov
adc
mov
inc
jo
add
xor
mov
sub
jmp
xor
cmp
add
push
sbb
repnz
std
or
dec
adcb
nop
test
add
rolb
adcb
cmp
shrb
stos
dec
out
fs
add
fdivrl
and
dec
or
adc
mov
adc
inc
sbb
adc
xchg
and
xchg
inc
push
mov
cmovs
and
insb
mov
adc
adc
xchg
and
pusha
inc
or
mov
adc
adc
and
sbb
mov
adc
and
dec
sub
pop
sbb
and
xchg
and
or
add
lock
adc
decl
mov
sub
daa
add
xor
pusha
lret
inc
xchg
add
jo
out
movb
inc
in
mov
xorl
hlt
jmp
pop
mov
enter
adc
add
jno
loop
js
sbb
jo
rcl
and
sub
dec
pop
popa
loopne
dec
pop
or
jecxz
jno
adc
sub
andl
or
mov
push
addr16
add
enter
and
or
pop
and
dec
or
or
cltd
sbb
movaps
cmp
or
pop
sub
adc
adc
adc
sbb
sub
inc
in
xor
cltd
sbb
or
pusha
push
pop
jl
insb
sbb
jo
mov
lods
push
cmpsb
xor
mov
orl
and
xor
and
dec
sahf
adc
jb
movsb
cltd
jo
sbb
scas
mov
xlat
mov
pop
xor
add
add
inc
movsb
inc
add
cmpb
and
fists
or
inc
jle
or
ret
popa
shll
cmp
push
mov
in
inc
mov
cmp
in
call
nop
mov
or
ficompl
rcrb
test
cs
fcomp
loopne
add
jle
cmp
rorb
int3
sbb
xchg
enter
enter
mov
in
cmp
xchg
nop
dec
js
rcl
adc
mov
fadds
mov
mov
jns
sahf
pop
daa
sbb
sub
jns
sahf
or
cwtl
dec
faddl
mov
call
addr16
mov
or
out
and
addb
adc
les
jp
mov
mov
inc
xchg
es
add
add
test
xor
aam
add
mov
js
and
inc
xorb
lock
icebp
cmp
push
ja
in
push
push
inc
inc
call
fcom
or
dec
out
sahf
add
adc
cmp
mov
or
and
dec
adc
cltd
xor
dec
adc
xor
cmp
add
fwait
pop
sub
rcll
das
and
dec
dec
insb
popa
inc
or
xchg
xor
popa
or
mov
push
ret
cwtl
or
xor
jns
cltd
loope
or
bound
ljmp
sub
or
arpl
addb
mov
adc
push
dec
loopne
cmpsb
or
nop
mov
push
inc
add
pop
push
push
and
or
inc
push
push
lods
fsubl
or
cwtl
or
dec
inc
cmp
lret
xchg
or
nop
fdiv
inc
xorb
inc
mov
and
or
arpl
and
inc
inc
add
and
mov
push
pop
sub
or
cmp
adc
enter
or
adc
xchg
or
inc
mov
or
scas
imul
adc
xor
or
fcoms
fs
sub
sbbb
pop
adc
xor
or
mov
fs
sub
jbe
and
pop
or
mov
xchg
pop
push
fdivrl
inc
mov
mov
dec
inc
rclb
sub
pop
fildl
dec
sub
or
jnp
xor
push
xchg
pop
in
in
or
dec
cmpb
dec
mov
jo
inc
je
icebp
or
or
lea
inc
sub
sub
sub
xor
pop
imulb
and
xor
dec
rolb
pop
in
mov
cmp
xor
mov
pop
push
push
les
and
adc
adc
sbb
pop
adc
add
js
rolb
mov
hlt
test
mov
inc
inc
nop
adc
adc
pop
cwtl
cmp
sbb
or
mov
or
adc
and
mov
push
cltd
or
inc
cmp
or
lcall
dec
push
sbb
sub
or
cld
dec
lds
lock
daa
push
pop
cmp
mov
and
mov
jno
mov
loopne
cmpsb
or
and
das
mov
mov
insb
sbb
pop
dec
fs
and
adcl
sbb
cmpsb
adc
and
adc
in
mov
rclb
lock
mov
sbb
adcb
inc
xchg
jo
cwtl
sub
sub
cmp
pop
xor
or
icebp
jbe
push
cld
mov
in
fdiv
jbe
sub
or
or
or
mov
addb
das
repnz
pop
or
push
adc
push
iret
shlb
in
lods
or
add
lds
fdiv
jbe
cmp
pop
mov
call
and
fdivl
dec
rorb
push
or
push
inc
or
nop
xor
fcoms
movsb
cmp
pop
mov
clc
cmp
dec
call
clc
les
iret
sarb
arpl
mov
bound
pop
cld
sahf
adc
mov
adc
dec
cmp
xor
sub
and
mov
add
clc
lea
dec
lock
in
and
inc
in
mov
adc
and
dec
rclb
shlb
pushf
adc
js
insb
inc
pusha
pop
mov
push
and
dec
xor
add
cmpsl
movsl
adc
std
rorb
loop
add
push
jg
xor
popa
das
add
mov
enter
cli
or
pushf
or
push
and
punpcklwd
adc
add
xchg
cwtl
push
sub
adc
leave
sbb
in
int3
into
mov
rorl
and
add
lods
lds
pop
std
and
pop
sbb
addl
xchg
xlat
xchg
inc
push
pop
add
sar
mov
adc
pusha
cmp
cmpsb
iret
lcall
dec
pop
js
loopne
loopne
mov
or
mov
mov
cmp
jl
rcr
fdivrp
add
push
inc
mov
int3
repnz
test
andl
stos
clc
jne
pavgw
cli
sub
aam
imul
loope
dec
jp
iret
inc
gs
movl
mov
inc
or
addl
in
xchg
cmp
or
xchg
inc
in
cmp
sahf
xchg
cmp
lock
add
pop
enter
pop
mov
xchg
clc
pop
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
add
jno
or
mov
loopne
cmp
fisttps
xchg
outsb
adc
shrl
mov
shl
add
mov
inc
sbb
lods
lds
cmpsl
out
add
mov
insb
scas
add
jmp
xor
in
xchg
mov
std
into
popa
add
loopne
dec
pop
add
dec
les
clc
xchg
lock
pop
cmp
int
jecxz
scas
loopne
addr16
lods
push
mov
fnstsw
and
aas
loop
cmpl
popa
mov
inc
push
pop
sarl
push
jl
mov
das
add
adc
xchg
ljmp
lods
mov
inc
add
fstl
arpl
int3
add
push
ja
call
add
sbb
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
add
mov
jecxz
cmpsb
add
movb
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
frstor
sub
adc
aas
inc
push
cmp
fidivrs
sbb
stos
loopne
arpl
mov
dec
sarl
mov
cli
pusha
lea
and
leave
pop
mov
in
push
jns
and
dec
rcrl
mov
rclb
jg
add
add
add
inc
inc
into
adc
in
and
and
stos
in
or
adc
nop
movsb
jle
sti
into
pop
inc
mov
sbb
mov
cmpsb
xor
imul
jle
sub
xchg
int3
imul
mov
cmpsb
inc
xchg
hlt
sarb
arpl
push
fnstenv
arpl
mov
add
mov
add
call
jmp
push
add
call
lea
lea
xor
call
call
jmp
push
add
jmp
pushl
pushl
call
add
add
cmpl
jne
lea
cmpl
jne
xor
pusha
jmp
mov
mov
mov
call
lea
push
or
jne
push
jmp
push
push
push
call
add
cmpl
jne
inc
or
je
add
mov
popa
mov
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
mov
movl
jmp
pushl
pushl
call
test
je
call
movl
mov
add
mov
jmp
inc
cmpb
jne
inc
call
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
call
call
popa
jmp
cmpl
je
sub
add
push
mov
mov
pop
ret
push
mov
cmpl
je
sub
add
pop
ret
push
push
cmpl
je
mov
mov
sub
add
pop
pop
ret
push
cmpl
je
mov
sub
add
pop
ret
pusha
cmpl
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
mov
or
imul
gs
xor
cs
insb
add
mov
or
in
or
icebp
mov
or
add
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
add
or
add
push
push
mov
jmp
inc
cmpb
jne
jmp
dec
cmpb
je
cmp
jne
cmpb
jne
pop
inc
jmp
pop
pop
ret
cmpl
jne
mov
jmp
mov
jmp
xor
push
push
push
push
call
mov
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
or
jne
push
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
push
lea
push
pushl
push
call
push
push
pushl
call
popa
ret
pusha
cmpl
jne
pushl
pushl
call
mov
call
movl
call
lea
mov
mov
lea
push
pushl
mov
mov
xor
xchg
popl
add
popa
ret
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
leave
ret
pusha
lea
push
call
mov
lea
push
call
mov
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
lea
push
push
push
call
or
jne
lea
push
push
push
call
jmp
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
popa
popa
pop
ret
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
pushl
call
cmp
je
mov
call
push
pushl
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
pushl
call
cmp
jne
mov
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
cmp
je
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
push
call
push
push
pushl
call
cmpl
je
cmpl
je
pushl
call
jmp
call
popa
ret
push
push
pushl
call
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
call
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
lea
push
lea
push
push
call
cmp
jne
push
pushl
call
push
call
popa
mov
leave
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
pushl
pushl
call
push
pushl
call
popa
mov
leave
ret
pusha
call
mov
pushl
pushl
call
mov
lea
push
push
push
lea
push
push
push
call
popa
ret
pusha
mov
lea
mov
mov
jmp
call
lea
push
push
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
mov
pusha
push
lea
pushl
pushl
call
push
pushl
push
call
lea
mov
add
jmp
dec
cmpb
jne
inc
pop
jmp
movzbl
mov
inc
inc
cmpb
jne
movb
popa
lea
pushl
push
lea
push
pushl
call
add
pushl
push
call
or
je
push
lea
push
lea
push
push
call
push
call
jmp
push
call
or
jne
push
lea
push
lea
push
push
call
push
call
incl
cmp
jbe
movl
pushl
call
popa
ret
pusha
lea
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
pushl
pushl
lea
push
pushl
call
add
pushl
pushl
call
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
mov
jmp
push
call
or
jne
push
call
or
jne
call
jmp
inc
cmpb
jne
inc
cmpb
jne
popa
ret
pusha
cmpl
je
cmpl
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
jmp
jmp
movl
mov
add
jmp
pusha
mov
xor
jmp
inc
inc
cmpb
jne
repz
jne
movl
popa
jmp
inc
cmpb
jne
inc
cmpb
jne
cmpl
jne
jmp
mov
mov
inc
inc
cmpb
jne
mov
incl
popa
ret
pusha
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
popa
ret
pusha
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
call
popa
ret
pusha
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
mov
xor
cltd
jmp
mov
rol
xor
inc
cmpb
jne
cmp
jne
mov
cltd
jmp
mov
rol
xor
inc
cmpb
jne
mov
mov
cmp
jbe
cmp
jbe
cmp
jbe
jmp
xor
xor
rol
inc
dec
cmp
ja
jmp
push
lea
push
lea
push
push
call
popa
popa
pop
ret
call
popa
ret
pusha
cmpl
jne
call
mov
pushl
push
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
lea
push
call
pushl
push
call
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
popa
ret
pusha
mov
mov
or
jne
movl
cmp
jne
cmp
jbe
movl
popa
ret
pusha
cmpl
jne
pusha
push
push
mov
imul
add
push
push
call
mov
popa
mov
cmp
jne
mov
rdtsc
mov
cmpw
jne
movl
add
add
movb
inc
movb
movb
xor
xor
rol
add
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
add
mov
popa
push
xor
cmpw
jne
mov
mov
sub
sub
pop
ret
jmp
popa
ret
pusha
call
call
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
movl
lea
push
call
cmpl
je
cmpl
je
call
or
je
mov
cmpl
jne
cmpl
je
lea
push
push
call
mov
cmpl
jne
movl
cmpl
je
cmpl
jne
mov
add
mov
cmp
jne
movl
mov
mov
mov
cmpl
je
movl
mov
lea
push
push
push
push
push
push
push
call
cmp
je
movl
inc
cmpb
jne
inc
dec
jne
popa
ret
pusha
cmpl
je
cmpl
jne
cmpl
jne
pushl
pushl
call
mov
push
lea
push
lea
push
push
call
popa
pop
popa
ret
popa
ret
pusha
push
call
push
lea
push
push
push
push
call
pop
lea
mov
add
sub
jmp
movb
dec
cmp
ja
popa
ret
pusha
mov
test
js
mov
mov
addl
jmp
push
call
test
jns
cmpl
jne
mov
addl
popa
ret
pusha
lea
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
lea
mov
jmp
xor
rol
inc
dec
cmp
ja
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
xor
jmp
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
add
add
add
inc
add
xchg
inc
ja
icebp
clc
or
jg
icebp
lret
imull
sbb
nop
xchg
or
xchg
js
or
push
scas
xlat
lock
jne
gs
xor
fs
insb
add
jb
jb
add
insb
and
popa
gs
and
data16
and
and
jb
jae
add
jne
and
je
insb
outsl
popa
and
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jae
gs
outsl
jb
and
jae
fs
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jb
imul
jo
jb
cmp
imul
and
outsb
popa
insl
imul
and
jb
jb
and
inc
jo
insb
imul
and
and
jb
popa
fs
jb
outsb
outsb
imul
outsw
cmp
push
popa
jb
imul
jae
ja
jb
and
jne
push
outsb
je
jb
and
and
je
jbe
imul
jns
jne
ja
outsb
je
je
and
outsb
arpl
and
and
insb
and
outsb
insb
outsl
popa
fs
or
outsb
imul
jo
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
add
jne
and
je
outsl
ja
insb
outsl
popa
and
jae
gs
jb
and
fs
insb
and
insb
sub
and
arpl
jae
cmp
sub
pop
outsl
jne
popa
jb
and
je
arpl
outsb
arpl
and
imul
je
or
sub
inc
imul
outsb
outsl
je
bound
outsw
jne
and
and
insl
outsl
je
and
jb
gs
or
sub
pop
outsl
jne
and
jb
ja
insb
insb
and
jae
bound
imul
popa
arpl
jae
and
imul
je
or
arpl
popa
jo
insb
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
and
outsl
addr16
insl
and
insb
insb
and
ja
arpl
and
inc
outsl
ja
insb
outsl
popa
fs
fs
insb
and
insb
and
and
jb
jne
je
popa
outsb
and
outsb
and
je
bound
insb
outsl
popa
fs
popa
jae
and
jae
popa
jb
and
jae
popa
jo
imul
and
and
and
insb
and
outsb
and
and
outsb
insb
outsl
popa
fs
popa
imul
add
add
push
xchg
jb
cmp
push
dec
pushf
adc
clc
or
add
add
pop
push
dec
inc
inc
add
pop
push
dec
push
push
dec
inc
add
pop
dec
push
dec
inc
inc
add
pop
push
inc
inc
push
pop
push
add
pop
push
inc
inc
push
pop
inc
add
pop
inc
dec
dec
inc
push
pop
inc
add
pop
inc
dec
dec
inc
dec
add
pop
push
push
push
add
pop
dec
inc
inc
inc
pop
push
add
jne
addr16
fs
arpl
and
sub
popa
jae
and
outsl
jae
and
and
outsb
and
and
jae
popa
jb
and
outsl
ja
and
and
gs
cmp
push
insb
gs
jae
and
je
and
je
push
and
and
outsb
dec
arpl
push
outsl
data16
arpl
or
jb
imul
je
insb
insb
gs
popa
outsb
jae
je
popa
je
jns
jne
popa
jb
and
outsb
outsb
imul
bound
addr16
add
add
add
insb
insl
outsl
outsb
cs
insb
add
movsl
out
test
aam
or
sub
adc
pushf
inc
cld
call
mov
and
lock
add
add
inc
add
add
xor
push
bound
je
cmp
and
ja
insb
outsl
popa
imul
add
insl
jo
gs
cmp
and
jb
outsb
je
inc
imul
and
inc
add
inc
add
jne
add
add
add
add
aas
jne
add
inc
add
add
ret
ret
pusha
mov
mov
mov
cmp
jbe
cmp
jbe
mov
cltd
mov
imul
div
jmp
xor
lea
call
popa
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
inc
add
ja
outsb
add
add
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
add
jae
or
add
incl
add
outsb
add
add
add
outsb
add
and
outsb
add
jae
jae
add
popa
add
jns
and
add
add
add
imul
jae
add
add
mov
pop
add
push
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
jb
outsl
add
jb
add
jae
and
add
add
mov
add
add
add
add
add
add
add
add
add
incl
add
push
add
je
add
add
add
add
push
add
add
or
and
into
add
add
incl
add
outsb
add
add
add
outsb
add
cmp
add
add
mov
add
add
add
add
add
add
or
add
add
outsl
add
jo
insb
add
je
add
add
add
add
push
add
add
daa
add
add
or
push
add
incl
add
add
add
add
add
add
push
add
add
popf
add
add
push
add
add
incl
add
arpl
add
add
add
add
lret
add
add
add
add
mov
and
add
add
push
add
jae
jae
ja
outsl
add
add
add
add
add
add
outsb
add
add
mov
pop
add
push
add
add
add
add
mov
push
add
add
incl
add
add
and
jo
popa
add
jae
ja
outsl
add
add
add
add
push
add
add
push
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
sub
or
add
add
incl
add
push
add
add
test
or
sub
push
add
add
incl
add
add
imul
add
add
add
inc
add
add
add
adc
stos
add
add
jo
add
pop
dec
add
mov
add
xor
add
adc
add
add
fsubs
add
add
add
add
add
mov
add
adc
add
add
dec
add
add
add
dec
add
add
add
lcall
add
add
rcr
adc
shll
jnp
hlt
int3
call
dec
pop
add
and
daa
cmp
xor
ja
enter
pop
in
imul
dec
sbb
in
adc
jp
les
test
add
adc
mov
lret
adc
and
lock
repnz
mov
add
out
push
jg
lret
out
mov
insl
dec
mov
lea
mov
sbb
lret
sub
xor
xchg
add
cli
push
in
cmp
push
sub
popf
movsb
push
addr16
sahf
pop
add
inc
sub
jge
insb
cmpxchg
push
pop
add
data16
pop
shlb
add
fcomps
cs
jns
das
push
sti
mov
push
leave
stos
aas
push
ret
icebp
mov
mov
mov
lcall
dec
ret
sbb
outsb
push
out
cmp
pusha
out
aad
sbb
jle
addr16
jp
addb
xor
inc
jbe
xor
push
push
mov
push
enter
dec
aas
std
jbe
add
mov
and
outsb
push
in
dec
jo
mov
xor
adc
push
cmp
ja
sbbb
dec
adc
mov
push
pusha
cmc
or
imul
push
in
add
shlb
imul
test
orl
jecxz
dec
or
les
popa
xchg
sbb
and
and
movsb
fcoms
or
sbb
lret
fdivrl
int3
inc
xor
cmpsl
and
not
jno
jmp
stos
sar
push
jb
ds
rcrb
add
cmpsl
ss
pusha
xchg
push
sub
lea
xchg
push
test
jns
xor
pop
adc
push
imulb
cmpsb
mov
push
dec
outsl
sbb
push
icebp
sub
mov
inc
enter
cmpsb
push
pop
adc
int3
adc
adc
dec
dec
mov
int
sbb
sbb
mov
lods
inc
sbb
in
int3
pusha
pop
and
sub
daa
je
pusha
fldenv
pop
test
in
cmpsl
pop
jmp
sub
outsl
leave
sub
cmp
mov
xchg
mov
sub
adc
jno
xor
outsl
hlt
je
pop
xor
pop
test
aas
lahf
pop
fs
mov
lds
xor
or
aaa
aaa
push
leave
pop
out
mov
and
or
jns
xor
sub
fcoml
push
lea
lods
add
mov
out
pop
add
sbb
xor
in
pop
adcb
fs
shr
ficomps
shl
jb
mov
test
ds
fldt
cmp
sub
dec
xchg
adc
sahf
rcrl
gs
push
in
lahf
test
fwait
mov
adc
aaa
jno
outsb
pop
lds
mov
rcrb
inc
les
idivb
stc
cmp
bound
cmpsb
ds
pop
mov
xor
inc
dec
xor
mov
mov
dec
in
ret
outsl
pop
nop
mov
scas
jne
lcall
in
sahf
lret
in
in
inc
mov
xchg
sbb
lret
add
dec
xchg
les
les
and
or
and
cmovo
outsl
and
out
out
xlat
xchg
xchg
pop
push
cmp
adc
pop
sahf
movsb
mov
push
add
enter
in
pusha
push
fs
xchg
xchg
in
test
stos
pop
scas
push
cli
adc
jecxz
les
push
adc
aam
mov
xchg
sbb
je
mov
inc
pop
xchg
insb
sub
mov
testb
mov
mov
xor
mov
rorb
add
and
fcoml
sbb
sub
xor
push
mov
ds
or
bound
sbb
orl
fcom
xor
pop
jae
sub
add
pop
or
bound
sub
cmp
testl
and
