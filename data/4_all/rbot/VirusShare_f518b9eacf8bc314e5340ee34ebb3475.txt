push
call
ret
ret
add
scas
adcb
hlt
fwait
xor
pushl
std
insb
or
in
lret
dec
int3
pop
jne
ja
idivl
cli
cs
mov
es
ljmp
sbb
dec
call
idivb
sub
mov
pop
mov
xor
scas
icebp
loope
sub
loope
loop
loope
push
daa
adc
pop
ds
jp
loop
lret
sbb
mov
adc
lret
je
dec
pop
or
rorb
int
in
mov
jmp
xabort
scas
dec
test
inc
loop
in
add
rorb
mov
xor
lea
stos
pusha
mov
xchg
pop
push
push
outsl
or
shlb
inc
pop
jp
gs
aas
dec
in
jp
fnstenv
arpl
cmp
filds
fdivrp
ret
roll
sub
aaa
mov
mov
gs
jmp
sub
jnp
jae
dec
out
mov
mov
aas
lahf
push
scas
dec
adc
cltd
mov
mov
xchg
mov
iret
shr
fcmovnu
lods
fwait
cli
rolb
pop
loope
cmp
cmpsb
fdivs
divl
clc
sbb
jae
stos
and
movsb
mov
add
push
and
cwtl
arpl
and
dec
xlat
divl
outsl
in
jl
add
ljmp
push
arpl
ljmp
pop
shlb
mov
testb
dec
lods
mov
jl
js
and
ja
das
lods
mov
or
ja
push
testl
mov
shlb
movsb
scas
test
jne
inc
and
push
lret
mov
dec
jo
mov
push
or
and
cmpsl
mov
out
loope
mov
adc
aaa
std
cmp
push
xorl
jne
testb
push
xlat
fstpl
loop
out
mov
jg
sbb
in
mov
arpl
pop
outsl
xlat
fs
mov
inc
pop
cmp
xlat
ret
mov
sbb
jmp
insb
movsb
and
jecxz
fs
xchg
xchg
pushf
fdiv
fidivrs
sub
adc
add
roll
sub
or
popf
stc
xor
pop
adc
ds
pop
adc
outsl
popf
push
negl
mov
pop
std
add
out
lods
mov
rcll
repnz
push
cmpb
dec
lds
imul
dec
lea
ret
pop
or
fadds
mov
mov
cmpsb
call
fwait
sbb
adc
out
movsl
je
test
pop
jl
adc
inc
mull
ja
push
in
leave
outsl
xchg
repnz
leave
adc
clc
out
push
push
sbb
sub
pop
or
ja
push
arpl
mov
pop
loopne
rolb
repnz
ljmp
mov
fimull
popf
pop
test
movsl
xchg
sub
out
int
lret
push
xchg
iret
mov
xchg
inc
jle
ret
add
test
mov
es
cmpsb
cli
imul
jmp
and
cmp
arpl
int
ret
ljmp
in
stos
cmp
into
sti
scas
outsl
inc
mov
xor
in
vpshab
movsb
inc
dec
mov
fucom
push
lahf
orl
fdivrs
inc
xchg
movsb
ficoml
rolb
stc
fwait
push
or
sarb
or
xchg
mov
xchg
mov
sarb
push
negl
pusha
into
cli
sub
rcll
dec
push
fildl
sbb
sub
ja
lds
sbb
mov
push
xor
fcoms
jb
rorl
mov
jp
cmp
fcoms
mov
pop
xor
aad
lock
mov
fistl
xlat
in
fmuls
fldlg2
loop
mov
rorl
jne
loopne
cmp
repz
fstl
outsb
icebp
push
fiadds
sbb
fistps
mov
pop
cmp
int
repz
and
mov
lcall
inc
loopne
adcb
aas
mov
popa
add
mov
cmp
cmp
je
and
inc
xor
or
lea
cmp
sub
xor
mov
xor
filds
sahf
out
aad
mov
mov
ja
mov
xchg
adc
es
pop
mov
jne
jo
fsubs
jae
mov
mov
push
adcl
sbb
or
ss
sahf
scas
and
rcrl
mov
push
loop
push
dec
test
in
stc
jp
mov
mov
cmp
sar
jp
lock
lods
and
add
nop
pop
fwait
sti
frstor
sbb
lahf
add
cltd
jno
and
cwtl
inc
inc
pop
jmp
aam
pop
insb
mov
adc
xchg
and
out
or
adc
sahf
das
fiaddl
cmp
adc
shlb
mov
fdivs
pop
out
daa
scas
jmp
scas
push
jmp
add
inc
mov
call
movsb
stos
test
loop
jnp
mov
js
loopne
xor
or
jge
pop
jb
xlat
lods
shrb
jnp
mov
in
insb
outsb
jg
out
int
pushf
jl
movups
outsb
pop
aam
push
enter
dec
out
mov
cmp
push
and
jbe
je
les
fcom
mov
mulb
in
xor
mull
stc
dec
test
aaa
or
jne
outsb
cld
ss
push
push
stc
out
outsb
push
leave
lock
inc
sahf
outsb
arpl
add
ljmp
es
pop
push
xchg
cmc
add
ror
jl
daa
xchg
roll
jmp
into
test
sahf
add
test
cmp
push
sti
rcrb
ds
cmp
sahf
and
xchg
sub
push
cmc
sbb
dec
adc
sarl
add
sbb
lret
adc
mov
fcoml
xchg
out
push
push
in
xchg
mov
fidivrs
mov
test
loop
dec
ret
or
aaa
or
ret
and
movsb
jno
sub
xchg
cwtl
pushf
out
dec
int3
movsl
adc
sub
jbe
out
in
movb
add
aaa
nop
das
or
ss
pop
es
push
repnz
and
test
mov
ftst
lods
lods
push
cmpsl
pop
test
fs
xchg
fs
iret
and
test
call
add
push
addr16
loope
aaa
movsb
mov
xchg
mov
data16
hlt
inc
xchg
add
mov
jns
gs
xchg
mov
pop
stc
add
hlt
sahf
in
repz
inc
pop
rclb
xor
cwtl
jecxz
push
daa
add
cmp
pop
cmpsl
cli
jmp
imull
dec
jne
dec
pop
into
xor
inc
mov
clc
pushf
std
pop
pop
add
xchg
enter
fs
xchg
shrb
add
adc
xchg
cwtl
xor
dec
jecxz
mov
stos
push
fs
pop
imul
cli
sbb
aas
ret
inc
jmp
mov
jge
ljmp
clc
dec
mov
incb
xchg
imul
std
xchg
mov
adc
sub
xchg
cmp
aam
inc
push
loope
inc
sbb
cmp
mov
fs
pushf
je
jmp
add
sbb
jl
pop
pop
xchg
lea
xor
cmpsb
fisubrs
pop
out
sub
pop
add
or
inc
sub
dec
adc
jg
xchg
lcall
xchg
pusha
mov
mov
push
out
imul
cwtl
sbb
ja
adc
mov
cmp
mov
sub
xchg
push
mov
jle
in
cmp
xchg
enter
inc
add
stc
push
test
xor
por
call
ret
add
cltd
jns
push
clc
test
mov
add
nop
pop
cmp
icebp
sbb
pop
cld
cmp
mov
movsb
xchg
pop
add
adc
mov
push
dec
mov
int3
scas
stos
push
jns
dec
xor
jmp
add
pusha
or
addr16
jmp
andl
sub
btc
mov
push
inc
filds
mov
lea
ja
movsb
sub
insb
stc
insl
or
dec
daa
and
leave
fists
lahf
mov
jmp
xor
or
mov
jp
jns
fstps
mov
das
dec
ror
hlt
and
or
daa
jecxz
jnp
andb
add
jecxz
leave
testb
fcoms
push
inc
vpavgb
add
pop
xor
dec
push
jne
stos
insl
lret
int
xchg
rorb
push
jecxz
and
cmp
hlt
xlat
push
push
aam
mov
std
cmp
insl
mov
inc
xor
ds
push
or
popa
dec
mov
das
pop
add
mov
bound
hlt
mov
loopne
or
call
js
loopne
jnp
bound
test
lods
pop
hlt
push
enter
sub
rcrb
int
pusha
lahf
daa
mov
cmpsl
rcr
insb
inc
push
mov
jmp
std
lock
pop
fisttpl
dec
imul
popa
sub
in
inc
fs
cmp
jb
inc
adc
cld
mov
adc
jae
cltd
cmp
fwait
xorl
and
test
mov
lods
pop
sti
jno
testb
add
xchg
inc
dec
mov
bound
mov
lock
sub
inc
xor
mov
mov
into
and
sub
fisubs
dec
sub
and
outsl
sub
xor
rorb
in
mov
mov
cmp
stos
cvttps2pi
or
rcll
stc
or
and
nop
sub
cmp
stos
adc
lret
das
sub
lahf
shrb
repnz
and
insb
push
sub
xchg
sub
jae
sub
jae
or
push
sbb
jno
js
xchg
push
push
iret
xor
mov
bound
mov
inc
mov
sbb
sub
aad
loopne
adc
mov
and
out
dec
cmp
sbb
mov
pop
mov
xor
fdivrs
xchg
push
cltd
aam
scas
int3
push
dec
jae
adc
fistpll
xchg
inc
fdivrs
in
and
sub
std
jg
test
sti
adc
xorl
data16
aam
push
jge
ret
push
test
loopne
repnz
inc
inc
xlat
cli
in
mov
and
leave
fnstenv
movsl
adcb
pop
inc
cmpsl
push
push
fstpt
xchg
out
leave
mov
cmp
sub
push
mov
xor
mov
xchg
sub
dec
pop
adc
sbb
mov
es
add
push
xchg
bound
scas
mov
js
sub
orb
hlt
add
push
add
repz
test
or
xorl
push
xor
lret
or
insb
lret
pushf
mov
ds
idiv
mov
jae
in
xor
ja
pushf
sub
xor
and
add
ds
adc
mov
push
stos
pop
das
addb
and
sbb
rol
jle
fldenv
mov
lret
mov
jns
pop
out
lret
sbb
iret
loop
and
mov
loope
lods
dec
push
adc
mov
mov
das
jnp
pushf
sbb
int
push
xchg
xorps
sub
ljmp
pop
ret
cs
pop
mov
mov
mov
jg
cmp
and
push
fcoml
add
xchg
jae
call
in
cmp
inc
enter
xchg
arpl
mov
jae
fs
enter
jl
xor
sub
xor
ret
pop
pop
mov
orl
cltd
mov
mov
mov
xchg
pushw
sbb
rcrb
dec
rolb
sub
add
stos
dec
clc
mov
xor
mov
sub
popa
pop
push
pop
and
and
out
add
cld
in
ljmp
sub
and
cmp
std
std
lods
popa
dec
inc
test
int
mov
fwait
arpl
or
xchg
mov
arpl
fcompl
push
test
xor
mov
dec
push
add
dec
les
sub
int
sbb
imul
inc
cli
cs
repz
into
mov
imul
orl
cmpsl
icebp
sub
scas
les
jg
jecxz
addr16
and
cmc
movsb
popa
pop
lret
mov
inc
mov
push
repnz
mov
push
push
jno
xchg
mov
adc
sti
jp
sub
stc
pop
xlat
leave
xchg
inc
test
std
xchg
sbb
clc
fsubrs
push
mov
push
and
aaa
call
stos
inc
mov
clc
mov
cld
imul
xchg
out
adc
add
xchg
pop
daa
sbb
mov
in
pop
pop
sub
push
push
xchg
andb
pop
lods
idivl
add
in
out
lods
imul
sbb
cmp
dec
jo
add
lahf
add
or
sbb
aas
popa
rcrl
cltd
adc
ja
adc
and
sbbb
mov
insb
movsb
lds
xchg
or
shll
jge
xlat
int
adc
je
or
sbb
cltd
stos
rcrb
rolb
sbb
icebp
fstpt
cmpsb
xchg
xchg
loop
cmp
xchg
cmpsb
call
mov
test
clc
or
push
xchg
jns
pop
or
out
push
ds
test
bnd
cwtl
adc
or
xchg
les
out
movsl
inc
push
push
cmp
fstl
loope
dec
lods
cltd
xor
xor
push
inc
cmc
xchg
pusha
inc
adc
sbb
mov
cld
push
mov
test
popf
dec
aas
mov
jb
inc
push
xor
icebp
test
ja
xchg
jle
sbb
sbb
aas
sub
and
ja
lock
push
in
nop
aam
pop
mov
mov
push
call
pop
cltd
adc
sub
ds
mov
and
test
pushf
cmpsb
xor
push
fwait
push
or
aam
pop
xor
sub
sub
adc
xlat
shll
ds
and
mov
xor
xorps
ret
inc
xchg
cmc
xchg
popf
dec
pop
int3
repnz
sti
stos
ss
daa
jns
adc
call
mov
jae
arpl
jbe
adcl
lds
lea
ds
sarl
adc
jb
addb
add
in
imul
mov
inc
outsb
repz
loopne
add
sub
data16
mov
or
gs
inc
repz
jns
xor
test
pop
pop
pop
std
jle
cmpsl
add
mov
pop
mov
push
push
lahf
lock
pop
int3
mov
push
stc
xor
int
outsl
add
mov
sub
jecxz
jno
pop
xor
pop
outsb
add
iret
bound
fldenv
xchg
loop
fwait
cli
rcrb
sti
jg
mov
xchg
repnz
test
lahf
repnz
or
scas
push
andl
add
mov
mov
sub
lods
push
aas
cmp
cmpb
jp
ljmp
add
lea
fwait
xor
mov
sub
stos
inc
inc
mov
inc
jnp
pop
std
je
lds
cmp
hlt
or
mov
lea
sbb
pop
push
data16
popf
jecxz
testl
wbinvd
mov
loop
xchg
push
xchg
mov
mov
mov
cmpsl
dec
fcomp
hlt
fwait
jb
adc
and
inc
add
pop
outsb
repz
push
nop
sub
xchg
aad
fnsave
mov
ja
lds
inc
hlt
xchg
mov
test
pop
jnp
dec
bound
stos
jg
stos
xchg
pop
test
and
out
push
out
arpl
out
jne
mov
jo
adcl
fcos
int
push
mov
in
ffree
cmp
push
divb
push
addr16
cld
std
jg
sub
int3
or
scas
xchg
imul
or
shlb
int3
fbld
push
mov
lea
push
mov
jmp
mov
push
sbb
fsubs
mov
rclb
mov
push
insb
adc
mov
les
test
xchg
icebp
mov
popa
mov
lods
ret
or
sbb
sti
add
dec
sub
ds
idivl
push
push
test
adc
mov
xor
jne
outsl
sub
and
add
lods
xor
and
pop
pop
or
lcall
inc
add
ljmp
adc
xchg
scas
sub
push
pop
scas
fwait
in
push
dec
cmpsl
xchg
mov
sub
fiaddl
mov
push
lds
jnp
clc
call
cld
mov
aaa
cmc
add
jo
and
ret
shll
adcb
or
push
push
fldt
cs
pop
arpl
pop
mov
ret
mov
jp
out
jp
mov
xor
xor
pop
aas
xor
dec
dec
movsb
sbb
or
mov
orb
cmpsl
push
mov
adc
mov
jae
insl
sub
sarl
push
mov
mov
dec
xor
testl
ljmp
mov
test
push
fcmovnu
xorl
int
jl
jae
loop
jmp
jae
std
xchg
jg
fistpll
aam
leave
lods
iret
test
popa
xchg
sbb
repnz
cltd
dec
xchg
mov
subb
scas
sarl
lds
rorl
divb
and
rol
and
in
jmp
add
daa
dec
sti
fwait
js
imul
sbb
push
pop
out
lret
stc
test
sarl
fwait
sub
fs
jbe
bndstx
inc
inc
and
add
cmc
push
jmp
loope
es
decl
or
lret
xchg
xchg
lea
in
jne
xorb
sbb
push
and
xor
movsb
fmul
mov
sbb
stc
mov
xchg
std
or
push
clc
push
push
mov
aam
je
dec
lock
push
addr16
les
movsb
mov
imul
sar
xlat
push
add
xchg
sbb
sbb
sbb
fisttps
decl
xlat
outsl
repnz
xor
std
sub
jg
adc
cmp
push
mov
push
ljmp
subl
imul
inc
rcll
and
adc
lret
dec
sbb
test
rcll
mov
adc
push
ret
mov
mov
mov
scas
cmp
pop
lods
mov
pushl
lret
sbb
loopne
sub
iret
mov
mov
xor
insl
enter
cmpsl
shll
arpl
sub
or
mov
pop
adc
adc
adc
push
xchg
mov
mov
lods
ljmp
and
sbb
jmp
enter
pop
bound
push
out
sti
popf
xor
mov
jecxz
adc
fdivrl
in
js
push
inc
xor
cmp
outsb
xchg
shrb
sbb
mov
mov
and
call
mov
add
add
push
sub
adc
insl
mov
jno
int3
push
pop
cmpsl
xchg
js
filds
bnd
mov
sti
into
mov
mov
loopne
push
push
psubusw
mov
enter
cmp
inc
cmc
movsb
inc
or
fsubl
shrl
aas
enter
xchg
xor
scas
inc
and
repz
mov
popf
mov
inc
pop
jns
and
mov
insb
jbe
mov
pop
dec
add
mov
pop
push
push
out
in
mov
xor
push
sbb
mov
ficompl
xchg
and
lret
icebp
insl
aad
mov
ret
repz
mov
jns
xor
fucomp
rol
mov
mov
mov
push
pop
xor
add
fcoms
fsubr
mov
inc
cmp
arpl
aaa
shr
inc
mov
adc
outsb
push
mov
das
or
out
mov
jne
cmp
mov
mov
repnz
ljmp
and
push
in
icebp
jb
daa
lods
push
outsl
sbb
sub
inc
dec
sub
mov
mov
mov
pop
jp
lahf
jne
rorl
in
or
popf
xor
pop
xor
adc
xchg
in
or
push
jne
dec
es
fidivl
sbb
dec
ljmp
cmp
es
cmc
or
or
add
fs
fwait
jnp
mov
or
push
sbb
mov
lods
lret
adc
cmp
repz
mov
and
jo
stos
pop
mov
dec
dec
xchg
lahf
add
add
push
popa
cwtl
andb
fsub
xchg
test
inc
out
pop
leave
sub
lret
adc
cmc
mov
sbb
mov
repz
rclb
popf
fs
inc
mov
sarb
add
rcll
cmpsb
inc
cmp
les
inc
xor
jnp
test
movups
push
cmp
xor
in
mov
add
jmp
add
pusha
push
jne
or
mov
mov
add
jge
cs
sub
sub
das
sti
inc
pop
dec
dec
fcoml
adc
cltd
xchg
sbb
aam
in
pop
outsl
inc
sbb
sbb
xchg
adc
push
jo
pop
sbb
sub
imul
fldl
jnp
js
sub
cld
pop
jle
jo
repnz
adc
add
mov
or
and
ret
jno
popa
outsb
add
lcall
mov
or
adc
push
inc
outsl
loop
test
outsb
and
loope
sub
push
mov
dec
cmp
aas
int
push
xor
cmc
add
rcr
sub
inc
cmp
movsl
and
std
mov
repz
data16
test
ret
pop
clc
pop
jae
or
lcall
test
cmpb
mov
in
pop
cmp
pusha
leave
ror
vmread
addr16
test
and
loop
adc
mov
stos
in
cltd
sub
sbb
dec
xor
cmp
imul
insl
jl
add
in
inc
add
push
sti
scas
std
xor
cltd
out
cmc
push
push
sbb
inc
adc
inc
jecxz
jmp
push
in
or
sbb
test
and
or
dec
scas
xchg
imul
aas
and
xor
and
scas
dec
mov
sbb
pop
and
pop
test
outsl
iret
xor
cmp
mul
js
out
pop
cmpsl
inc
push
dec
fstpt
push
mov
sub
sbb
push
movsb
fisubrs
xchg
jae
jnp
into
jle
mov
test
out
repz
add
jbe
lcall
push
push
jl
arpl
or
in
sbbl
mov
stc
sub
ss
and
jnp
mov
and
inc
xchg
lahf
xchg
cmp
mov
cmp
orb
xchg
add
pop
cmp
adc
xor
test
jecxz
mov
daa
cltd
pop
int
sub
scas
mov
push
mov
repz
bound
cmp
mov
fildll
and
lock
sub
loopne
jecxz
push
leave
inc
xchg
jle
std
push
jno
imul
clc
loopne
sub
or
xchg
cmpsl
loop
lods
sbb
mov
stos
cmpsb
iret
or
mov
lret
and
ja
out
jge
pop
mov
and
dec
fcomps
mov
rcrb
jmp
push
sbb
outsl
sub
fsts
pop
adcl
xor
cmc
js
shr
jg
out
movsl
gs
adc
jnp
mov
push
js
mov
cmp
shrl
xor
cs
dec
xchg
je
sub
dec
sub
mov
xor
fwait
in
jae
cmpl
jo
jmp
cmp
or
xchg
sbb
shufps
mov
pop
cltd
dec
cmpsl
sub
pop
mulb
gs
ja
vmovntpd
add
jne
into
stc
cmp
jmp
outsl
and
in
xchg
push
mov
aas
cmp
dec
inc
jecxz
push
mov
dec
jle
addb
cli
call
jge
or
repnz
sti
jmp
mov
pop
jbe
sub
push
mov
or
xchg
sbb
jge
or
stc
and
ljmp
js
push
mov
dec
arpl
stos
addr16
xchg
mov
xor
cmp
and
add
sub
and
aad
stos
pop
or
lods
out
mov
xlat
rol
cmc
stc
sub
bound
ret
mov
pop
adc
cmp
cmpsl
js
xchg
dec
call
cltd
and
test
jge
stc
sub
addb
jns
cmp
inc
xchg
sub
push
icebp
add
or
orb
lock
in
push
test
and
mov
sbb
adc
mov
or
in
fisubl
pop
stc
or
xchg
jbe
stos
xor
ret
adc
ret
mov
daa
cmpsl
mov
mov
push
addb
sti
movsl
add
cmpsl
adc
sahf
xchg
insl
xor
out
sbb
popa
js
inc
push
cltd
dec
clc
inc
inc
adc
aaa
cltd
pop
pop
in
int3
jmp
movsl
mov
add
int
subb
dec
mov
ss
mov
flds
dec
arpl
cli
xchg
xor
mov
test
pushf
insb
lods
push
xor
xchg
jmp
pop
pop
aas
push
push
push
sub
or
je
inc
popa
in
aam
rorl
in
mov
outsl
fsubrl
add
data16
cmp
sbbl
inc
insl
adc
jecxz
testl
int3
call
not
ret
add
push
adc
inc
mov
xor
xlat
inc
aam
push
mov
cmpsl
jmp
pop
popf
mov
loope
mov
clc
jg
ret
rorb
lea
dec
mov
mov
scas
sub
into
dec
jle
out
xor
jle
mov
cmpsb
xor
fisttpll
jbe
pop
sbb
shrb
xor
stos
mov
mov
out
xchg
divb
mov
cmpsl
shlb
add
aaa
outsl
and
scas
xchg
cmp
pop
jnp
sbb
and
add
mov
aam
cmc
cltd
pushf
cli
in
fldpi
lods
mov
push
sbb
adc
adc
das
mov
pop
xor
scas
fwait
jnp
mov
or
imul
xor
mov
lcall
xchg
push
jmp
inc
repz
dec
xchg
inc
fisubl
clc
push
mov
es
inc
cmp
sub
fisubs
into
ss
repnz
jle
inc
jne
or
sbb
mov
hlt
add
scas
push
fsts
xchg
ja
subl
adc
push
fisubrl
mov
xor
pusha
add
pusha
fidivl
sbb
cmp
data16
testl
fisttpl
xor
pop
push
mov
test
rorb
add
fadd
cmpsb
popf
mov
test
les
adc
and
sti
sbb
and
in
xchg
aas
call
inc
push
push
scas
adc
rolb
mov
mull
rcl
ret
inc
jg
add
jg
xor
mov
cmp
cld
jg
movsl
cmp
sub
xchg
sbb
iret
xor
mov
xor
inc
and
xchg
xchg
repz
pusha
or
pushf
shl
test
test
jl
fwait
lds
loopne
jl
out
jl
mov
dec
stc
divl
outsl
ja
dec
int3
ja
lret
push
lea
cld
jnp
xchg
pusha
fbld
das
push
mov
push
or
fcoms
inc
add
out
push
sar
repz
push
inc
push
cmp
lcall
and
pop
cmpsb
loope
fsub
negl
dec
movsb
dec
jno
add
out
mov
cmp
shll
outsl
jge
cld
adc
gs
sti
orl
adc
repnz
fbstp
das
ss
sbb
push
js
lods
addr16
out
js
or
or
inc
mov
xchg
and
jle
jnp
jb
js
pop
xor
sub
pusha
dec
mov
pop
add
pop
push
loope
fistl
lods
pop
divb
push
and
std
jg
push
ss
test
outsl
xchg
sub
push
cmpb
imul
lahf
divl
test
lods
fsubrp
clc
cmp
ret
pop
call
inc
and
mov
mull
ret
xchg
sbb
sbb
enter
sti
jne
add
movl
mov
js
out
jmpw
stc
pop
mov
je
push
lock
ds
fs
shr
arpl
pop
nop
dec
into
xor
add
imul
jns
imul
enter
xchg
or
ljmp
pop
xchg
mov
push
dec
mov
jns
lock
add
lahf
jne
loopne
cmp
push
fiaddl
rolb
les
lahf
into
sbb
lea
fildll
inc
ds
jle
out
pusha
enter
call
add
pop
lahf
cmp
sbb
pop
pop
shl
xchg
and
cli
xchg
mov
cs
ljmp
in
jae
cs
and
mov
dec
ret
pop
sub
xchg
lods
gs
scas
data16
scas
inc
fwait
mov
out
test
mov
gs
test
fnstcw
daa
fbld
xor
inc
popf
stos
pushf
mov
mov
add
mov
lods
push
aad
cltd
jge
loope
es
nop
call
mov
fldcw
insl
dec
push
shrb
aad
scas
inc
add
jbe
lea
inc
jmp
cmpsl
mov
sti
adc
lods
push
push
fadds
int
dec
sub
cmpsl
inc
xchg
xchg
pop
pop
dec
aas
loopne
mov
xor
ss
mov
jbe
in
sete
push
pop
insb
mov
cmpsl
ja
not
sub
ljmp
mov
cmp
push
pop
xchg
xchg
gs
je
jb
mov
xchg
arpl
jge
es
cmp
scas
jns
push
icebp
shrb
jo
mov
lahf
inc
es
inc
mov
and
lea
lock
mov
xor
subl
jl
sub
mov
lret
dec
mov
imul
jno
loop
lret
mov
push
or
jmp
add
xor
mov
mov
stc
out
sub
cmp
gs
lock
mov
xchg
pop
adc
push
imul
cmp
xor
pop
popa
jbe
rolb
in
and
xor
mov
sahf
jp
mov
mov
jl
and
add
cmpsl
xchg
pop
orl
jle
stc
xor
stos
and
push
jl
pop
clc
mov
movsl
sbb
rorl
dec
pop
test
scas
cltd
lea
inc
lock
mov
in
add
lds
je
add
push
es
scas
pop
xchg
dec
fmul
pop
aaa
mov
mov
lods
fstl
and
mov
xor
out
mov
out
xchg
fcmovu
push
lods
in
sub
pusha
dec
pop
stc
loop
xor
gs
pushf
leave
aas
shr
lods
out
xchg
in
or
cli
pusha
add
cmpsb
out
faddl
ror
pop
shlb
mov
jno
sbb
add
dec
dec
in
push
lahf
pushf
ffreep
inc
inc
cmpsl
push
call
iret
pop
cmp
mov
mov
xor
inc
daa
lea
mov
rcll
xrelease
pop
and
pop
in
jl
sbb
pop
jg
cmp
cmp
mov
outsb
into
aam
imul
ret
bound
outsb
les
xchg
testb
jae
ja
pop
or
push
incl
mov
mov
test
or
das
mov
fdiv
enter
popa
out
mov
mov
push
add
pop
movsb
jae
ja
test
aaa
or
sar
and
jge
outsl
mov
cli
mov
stos
decb
aaa
stos
jge
pop
sub
pop
mov
imul
test
fsubrs
lods
std
adc
mov
sbb
sbb
cmovp
scas
and
add
push
aad
jae
cmpsl
cmp
xor
sbb
mov
or
jmp
out
mov
sub
aad
in
adc
iret
cmp
mov
adc
inc
mov
cwtl
je
hlt
push
sub
cmc
lret
xchg
pop
lds
repz
jae
aam
inc
dec
cwtl
fiaddl
mov
pavgw
mov
xorl
aaa
adc
ja
add
adcl
sub
pop
mov
das
aad
push
mov
mov
mov
adc
je
sub
mov
pop
jb
test
mov
insb
mov
inc
adc
inc
imul
mov
push
dec
lret
rcrb
xchg
jmp
mov
pusha
adc
out
jl
sub
lods
pusha
push
imul
adc
cmc
xchg
in
imul
loope
popa
test
and
cmp
push
repnz
mov
mov
aaa
xchg
adc
mov
filds
push
bound
mov
into
dec
xor
ss
aas
jbe
inc
sti
cmp
popf
sahf
ljmp
inc
mov
fwait
in
lret
pop
or
and
push
mov
jecxz
cmp
insl
add
inc
jle
fwait
sub
and
dec
xchg
jl
add
arpl
dec
jecxz
in
ret
jge
mov
loope
or
pop
or
pop
fs
movsl
lock
call
jg
shrl
mov
cmp
inc
pop
xor
in
xchg
xchg
popf
cmpsb
cs
mov
mull
xchg
cmpl
jecxz
lock
js
seta
lods
lea
dec
push
xor
sti
dec
pop
pop
add
repnz
test
jno
push
cld
cmp
fwait
inc
addr16
push
pop
add
push
shrb
lods
cltd
mov
pop
push
out
cs
loop
pop
mov
insb
out
sarb
into
and
stos
inc
dec
out
enterw
inc
lea
shlb
iret
adc
int3
daa
jno
fiaddl
sbb
jg
xor
test
test
xor
outsb
scas
into
gs
xchg
mov
sub
sub
ja
aas
and
ljmp
lods
mov
sbb
int
loope
pop
fsubr
jnp
jne
sub
cmp
jl
lods
fs
jb
add
add
inc
jp
ljmp
push
inc
jnp
sbb
dec
adc
ret
popf
jnp
dec
jb
in
mov
add
push
js
jmp
dec
push
out
xchg
scas
testb
out
mov
cmc
cmp
dec
clc
add
cmp
scas
loopne
cmp
add
or
inc
imul
je
outsb
inc
inc
pop
mov
or
push
pop
inc
popa
fisttpl
xor
jb
or
scas
mov
mov
jnp
gs
call
xchg
add
adc
inc
movl
pop
adc
mov
jne
cmp
inc
cmp
jo
mov
inc
dec
and
stos
jnp
inc
cmp
popf
sub
bound
push
nop
mov
lret
outsl
mov
lock
setp
cmpsl
push
jb
fisttpl
inc
cmp
cmp
aad
stos
mov
aad
mov
and
ja
or
ljmp
popf
fsubr
pop
jbe
fs
lret
dec
add
rcr
or
sbb
insl
or
dec
mov
pop
cmp
adc
cltd
cld
add
jno
fwait
add
mov
daa
sbb
enter
mov
jg
hlt
fimull
sub
jnp
fcoml
mov
testb
xor
ret
orb
repz
inc
cmc
cmp
push
mov
cmp
cli
das
in
cwtl
fs
insl
xchg
aaa
mov
and
sbb
test
cmpsl
cmp
add
loopne
mov
pushf
call
or
das
push
sbb
jo
rcrb
cmpsl
mov
out
mov
fstpt
cmpsb
arpl
jmp
cwtl
into
inc
pop
cmp
sti
pop
jge
leave
push
idivl
sbb
xor
jmp
fs
movsb
mov
movsb
or
add
pop
jmp
inc
pop
hlt
sbb
mov
ret
movsl
dec
xlat
int3
aaa
mov
sbb
icebp
pop
xor
fcoml
icebp
hlt
sub
jl
adc
push
push
lcall
cwtl
in
xchg
popa
xlat
das
into
add
fmul
scas
xchg
cmpsl
push
cmp
cmp
inc
popa
pop
iret
shlb
cmp
jg
push
cmpsl
cmp
jbe
sahf
in
idivl
dec
int
mov
push
and
cmpsl
in
or
lods
arpl
fcoms
mov
pop
ss
insb
sbb
or
bound
push
ret
data16
pusha
stos
mov
inc
mov
dec
test
add
mov
cltd
or
int3
mov
cmp
iret
lods
repz
gs
xchg
dec
int3
push
lea
fs
enter
xor
testb
push
adc
cmpsb
idivl
cltd
insb
inc
xor
enter
xor
adc
pop
aas
stos
loopne
add
mov
dec
imul
cmc
cmp
mov
mov
leave
cmp
pusha
mov
inc
jle
and
loop
mov
sub
and
inc
jge
adc
mov
sub
pop
cmp
push
hlt
fwait
sbb
scas
addr16
xor
sbb
sbb
mov
cmpb
data16
lret
inc
add
xchg
add
sub
das
xor
in
adc
xchg
inc
or
orb
push
push
add
push
test
and
out
sbb
mov
negl
stc
clc
dec
push
push
in
sbb
pusha
cli
and
xor
loopew
insb
nop
and
cmp
xor
test
dec
rorb
roll
in
lods
adc
imul
cmp
add
jmp
mov
add
and
sbb
and
xlat
pop
inc
cmp
push
mov
aad
fincstp
iret
add
mov
sub
movsb
mov
leave
or
add
cmp
pop
sub
out
xlat
push
pop
dec
in
rorb
outsl
fbstp
cmpsb
in
pop
clc
inc
sbb
push
push
int3
and
cmp
and
repz
inc
into
push
repnz
mov
orl
pop
or
xchg
das
xchg
or
mov
addl
cmc
stc
fidivl
sti
rclb
push
cmp
mov
sub
cmp
in
adcb
iret
xlat
loope
inc
stos
es
stos
pop
xchg
or
scas
adc
in
add
out
adc
inc
xchg
and
cmpsl
jno
cmpl
jp
aad
rcrb
jno
mov
in
sub
pop
cmp
add
dec
int
cltd
not
int
arpl
lcall
scas
leave
pop
jns
push
cmc
lods
dec
rcrb
rcrb
pop
pop
adc
and
daa
sub
daa
aaa
xor
inc
xchg
loop
popa
mov
nop
jl
cwtl
movsb
movsb
in
xchg
js
clc
stc
popf
adc
movsl
xchg
sbb
xchg
mov
cmp
lock
icebp
ja
jmp
cmpsb
pop
push
outsl
jmp
inc
push
push
jne
repz
pop
push
cmpsb
push
pop
hlt
sub
xor
mov
jne
jae
icebp
mov
popa
and
ss
xor
xchg
clc
jae
in
xchg
push
mov
loope
and
je
shrb
insl
xor
push
mov
sti
test
push
add
jno
pop
inc
mov
out
sbb
adc
jmp
xchg
je
insl
adc
inc
push
std
stos
adc
dec
mov
xor
mov
push
outsb
xchg
enter
hlt
mov
jp
sahf
sub
jno
test
out
dec
inc
sub
xcrypt-ctr
cmpsl
fwait
sub
stos
xchg
negl
outsl
jne
std
std
adc
ficoms
popa
stos
and
sahf
adc
mov
out
fwait
lret
nop
loope
and
sbb
jle
sub
lcall
iret
sub
aaa
lret
jmp
stos
or
cmpsb
imul
aas
dec
lods
jmp
scas
repz
add
and
lret
sub
imul
xchg
ljmp
adc
mov
andl
daa
leave
pop
or
data16
test
xchg
add
sysexit
pop
loope
data16
pop
pop
cwtl
sub
pop
cli
pop
cmc
int
hlt
or
xchg
clc
test
jno
movsl
inc
mov
sahf
cmpsb
pop
mov
xchg
out
lods
insb
mov
lahf
mov
jge
jae
cld
das
sti
or
inc
dec
jne
icebp
rclb
mull
mov
cmc
mov
push
cmp
testl
jno
movsl
mov
bound
test
pop
fnsave
cmp
lret
jecxz
mov
xor
scas
movsl
push
inc
inc
dec
xor
cmpsl
xor
enter
add
ficoml
mov
mov
sbb
lret
jecxz
add
iret
mov
or
shll
ljmp
aaa
outsl
cwtl
mov
push
or
adc
mov
mov
and
clc
sub
jp
push
dec
sahf
mov
popl
test
rcrl
imul
int
repz
cwtl
mov
jecxz
rorl
push
gs
jecxz
push
inc
repnz
or
arpl
js
iret
stc
or
andl
stos
push
in
in
ret
mov
repz
mov
cmovne
xchg
pop
and
stc
fwait
or
sbb
mov
rcr
mov
fists
jb
aam
mov
inc
imul
aad
out
and
add
adc
shr
add
adc
mov
mov
sbb
jmp
sti
sbb
ds
mov
xchg
fidivrs
dec
push
xor
inc
cmpb
add
mov
lcall
push
lock
insl
fnstsw
or
push
fstps
jmp
sbb
push
pop
xor
loop
pop
mov
arpl
imul
pusha
inc
bound
imul
xchg
arpl
clc
dec
jg
imul
adc
xchg
xor
add
sbb
pop
idivl
hlt
mov
jb
and
dec
xor
xchg
in
test
xchg
pop
jno
loop
imul
lahf
rolb
bound
test
lcall
stc
fcoms
and
xchg
xor
mov
dec
and
arpl
out
mov
test
mov
inc
frstor
test
sbb
push
stos
xor
out
mov
sub
fcmovu
or
pop
cmp
xchg
stos
fcomi
daa
shlb
pusha
xor
xor
xchg
xlat
inc
push
inc
in
jp
das
xor
add
stc
jne
int3
or
jne
lahf
add
or
pop
jl
cwtl
ja
cmp
leave
jp
nop
mov
arpl
lret
sub
clc
xchg
sbb
pushw
pop
add
jg
fcom
nop
lock
dec
and
jnp
mov
fs
sarb
inc
sbb
adc
imul
jns
mov
pop
or
mov
test
call
add
xchg
test
popf
xor
gs
loope
push
inc
clc
ljmp
sub
push
clc
mov
addr16
divb
xchg
mov
sbb
or
or
dec
add
jmp
imul
das
add
jmp
pop
pop
cmp
add
dec
push
dec
mov
cmp
cmp
jmp
dec
lds
fistpl
bound
mov
mov
cmpsl
mov
sbb
sbb
push
mov
cmp
mov
sbb
sub
jnp
shlb
mov
pusha
cmp
aas
mov
mov
or
lock
cwtl
icebp
movsb
insb
ficoml
pop
jge
ss
cmp
push
mov
andb
pop
mov
pop
les
or
fstps
xlat
jnp
mull
orb
into
and
std
cmp
add
push
pop
scas
jecxz
iret
xlat
xchg
pop
mov
xchg
sahf
ja
add
test
cld
cli
in
fisttpll
inc
addr16
je
hlt
mov
movsl
leave
incl
shl
cwtl
stos
sub
jle
xchg
pop
mov
adc
jns
sbb
les
mov
pop
mov
xchg
cmp
mov
pop
icebp
adc
cmp
jb
xor
out
gs
nop
loope
in
inc
jl
push
cmp
fs
xor
out
mov
repz
lret
sbb
inc
notl
arpl
xchg
nop
subl
xor
pop
push
mov
outsl
cmc
adc
dec
imul
aas
les
aas
ret
and
arpl
lea
xchg
aas
stos
push
and
iret
int3
mov
xchg
push
js
scas
insl
iret
sbb
pop
dec
pop
das
dec
adc
sub
jl
mov
aaa
jp
mov
ds
jp
sarl
push
inc
pushf
mov
outsb
jo
add
shll
cmp
pushf
call
jg
jp
lock
pop
adc
das
scas
popa
adc
add
push
xor
inc
pop
cltd
int
shlb
mov
mov
dec
pop
outsb
popa
xchg
mov
mov
std
mov
jns
enter
hlt
xchg
sub
lock
jg
or
rcrb
insb
sbb
dec
in
xor
cmp
jns
xchg
sbb
adcl
mov
outsl
xchg
fiaddl
mov
je
aam
mov
inc
into
mov
adc
mov
dec
mov
or
inc
sbb
mov
icebp
xchg
mov
insb
dec
in
ljmp
and
fcmovbe
jno
and
push
mov
sbb
xchg
add
out
je
aam
jg
imul
test
pop
push
stos
lds
arpl
stos
mov
shufps
or
fsubs
and
paddw
repz
or
push
stos
je
fwait
mov
int3
loop
mov
cli
jns
mov
outsl
push
cmp
pop
or
lea
push
repz
int
or
mov
repnz
out
and
in
fidivs
mov
in
mov
xor
xchg
xchg
adc
pop
loop
xor
jl
push
sbb
lds
icebp
ret
fcompp
xchg
sarl
cmp
or
cmp
xchg
fsubp
push
push
into
mov
xor
add
or
fidivs
mov
outsl
sub
and
xor
movsl
int3
dec
pop
mov
sahf
mov
dec
jge
or
pop
mov
and
sub
outsl
imul
mov
nop
lea
ja
popf
adc
sub
scas
js
mov
and
xor
bound
inc
dec
dec
xor
adc
xchg
mov
movsl
dec
xor
dec
in
lds
loop
icebp
dec
lahf
scas
aas
lods
mov
loope
jl
push
js
dec
cmp
sbb
addr16
test
sahf
lods
mov
mov
scas
pop
lea
das
aaa
ja,pt
inc
movl
dec
hlt
mov
ljmp
aam
ror
mov
fadds
push
jb
push
and
xchg
add
push
mov
add
and
cli
xorb
out
sbb
das
or
lret
xchg
cmp
xchg
cmp
cwtl
push
pop
adc
xchg
ret
dec
push
inc
adc
push
repz
mov
mov
add
adc
sbb
adc
mov
xor
cmp
cld
add
or
aas
outsb
mov
sub
iret
enter
add
rol
ret
enter
or
xchg
dec
push
pop
xlat
mov
ja
mov
lea
outsb
lds
addr16
out
push
add
or
repz
xor
add
and
dec
jns
popf
insb
lods
xchg
movsb
mov
mov
inc
inc
mov
push
pop
adc
mov
and
add
ret
or
fdivrs
cli
jbe
pop
add
and
xor
mov
pop
jmp
repz
popa
insl
sub
cmp
lods
scas
subb
mov
xchg
in
enter
push
test
dec
cmpl
sbb
dec
pop
popf
js
jnp
jnp
repz
push
jge
push
jbe
imul
adc
fisubl
or
pop
je
adc
push
push
popf
cmp
xchg
fiadds
out
mov
lret
shlb
add
or
sbb
cmc
pop
jmp
movsl
cmp
in
xor
add
xor
in
iret
and
pop
adc
stos
je
xchg
adc
dec
cmp
adc
sbb
adc
push
jg
ret
pop
inc
pusha
mov
push
js
xchg
ja
add
jecxz
leave
adc
push
inc
pusha
mov
adc
shll
push
push
jp
and
rcrb
or
pop
cmp
and
and
push
sbb
pop
lcall
adc
inc
jle
push
lea
out
push
inc
mov
jle
jae
imul
and
fimuls
ljmp
flds
add
cmp
adc
sbb
mov
pusha
cs
icebp
daa
notl
mov
jbe
or
jne
mov
cmp
xor
jp
dec
rorl
push
pop
push
sti
ficoml
inc
add
mov
pop
andl
je
cwtl
jne
pop
jmp
in
imul
or
movsb
or
and
mov
ss
dec
andb
pop
testl
pop
push
lock
xor
push
xchg
or
dec
mov
out
je
inc
add
stc
test
pushf
fwait
dec
lea
jecxz
lods
dec
and
popf
js
xor
stos
xor
adc
mov
sar
icebp
or
insb
pop
call
test
ja
aam
push
ficompl
leave
pop
in
jmp
or
shlb
in
cmp
hlt
push
call
dec
sahf
xor
pusha
add
xchg
or
fildll
fstps
mov
outsb
out
lock
mov
push
mov
pop
iret
jmp
cmp
ss
pop
push
mov
xchg
sahf
mov
dec
sub
in
xor
test
adc
je
fs
push
gs
cmp
adc
iret
inc
imul
js
sbbb
push
cmp
add
imul
jmp
test
mov
or
mov
jle
dec
and
inc
add
xchg
adc
out
cmpl
or
ljmp
push
mov
imul
pop
lods
call
dec
adc
sahf
adc
and
lcall
sub
push
pop
jno
repnz
mov
cld
into
adc
push
movl
add
test
loopne
lods
pop
imul
jo
and
adc
in
fists
scas
mov
movsl
in
sbb
cld
enter
mov
sbb
jo
push
pop
or
sub
roll
cmpsl
les
test
and
into
push
push
push
loope
imul
adc
cltd
inc
pop
pop
push
mov
cmp
outsb
in
pusha
add
fsubl
sub
icebp
push
adc
add
mov
mull
xchg
dec
lret
pop
daa
pushf
fwait
fwait
lcall
pop
pusha
pop
or
in
xchg
data16
rcrl
icebp
test
testl
sbb
je
out
rcll
stos
push
sbbl
pop
bound
cs
shll
stos
pop
mov
mov
sub
loopne
popf
or
into
add
addr16
jo
adc
testl
addr16
push
dec
xchg
pop
jmp
dec
sbb
mov
mov
fs
pop
or
jle
mov
int3
dec
test
out
jbe
and
jl
ret
inc
cmp
push
push
or
cltd
test
push
jmp
imul
pop
or
mov
and
push
jp
shrb
in
sbb
or
xchg
push
cmp
push
pushf
push
pop
adc
into
jge
push
push
mov
aam
adc
inc
adc
jle
cld
loope
shll
mov
xchg
mov
scas
gs
rorb
inc
nop
jmp
jo
mov
and
rcr
xchg
loopne
cmc
stos
sub
mov
jmp
stos
sbb
push
in
scas
pushf
loop
cwtl
in
mov
adc
clc
jp
lods
mov
pop
push
movsb
pop
mov
mov
xchg
sti
push
mov
les
ds
xchg
mov
push
jbe
jp
in
xchg
inc
shll
add
mov
enter
test
fdivs
cmc
jecxz
cmp
insl
cli
mov
sbb
imul
inc
bound
cmovnp
out
sbb
cmp
mov
testb
sbb
push
psubd
in
int
mov
inc
sbb
inc
movsl
shl
in
push
mov
ljmp
iret
xchg
std
mov
nop
mov
test
jg
aaa
movsb
mov
xchg
lret
incl
es
cmp
dec
pushf
mov
aaa
fildl
les
pop
ljmp
jns
push
add
loopne
add
push
mov
push
mov
pusha
mov
cmp
xchg
cmp
sahf
fsubp
mov
loope
xchg
add
jne
push
stos
xchg
mov
xchg
shr
cwtl
jo
mov
xlat
mov
adc
or
out
int
loope
or
rol
mov
ret
cli
xchg
push
inc
mov
inc
cmp
and
mov
mov
stos
ss
pushf
inc
stos
jp
jae
shrb
sub
sub
data16
jno
cld
adc
lret
dec
lds
fbld
cmp
mov
cmpsb
mov
adc
jmp
aas
push
dec
adcl
mov
xchg
cmp
pop
or
adc
xchg
push
pushf
fidivl
aaa
pop
outsb
adc
mov
sub
xor
xlat
jne
mov
movsl
rcr
popa
stos
pop
push
inc
js
ds
arpl
out
pop
inc
cmc
adc
je
stos
and
loop
cli
dec
lahf
aas
cmp
push
cmp
out
cmpsb
dec
jp
rcr
aaa
aas
stos
mov
iret
add
add
cwtl
jae
or
adc
mov
dec
xchg
fcoml
outsl
bswap
gs
mov
xor
insb
lahf
push
mov
je
ljmp
je
into
int3
testb
sub
lods
movsl
push
sbb
roll
fs
adcl
sti
movq
mov
adcl
xlat
orl
mov
clc
daa
cli
adc
xchg
xchg
sarb
loop
jb
test
pusha
insl
xlat
cli
loopne
out
and
out
jae
fisubl
test
xor
imul
popf
jbe
clc
leave
sub
femms
mov
pop
jnp
pushf
loope
xchg
pop
mov
cltd
inc
popf
les
mov
or
lods
xor
jle
mov
push
lcall
stos
fs
inc
pop
and
add
cmc
test
mov
and
mov
cs
cli
test
loop
push
cli
mov
mov
cmpl
mov
add
pop
sub
dec
push
mov
js
pop
cmc
dec
sub
lds
leave
cmpb
repnz
push
out
mov
dec
jg
iret
push
pop
imull
das
and
push
aam
dec
xlat
push
fwait
xchg
stc
icebp
push
out
pop
sub
insb
adc
jno
cmp
int3
jmp
shl
push
shlb
xor
mov
push
adc
adc
loope
das
mov
adc
mov
cltd
scas
jb
enter
inc
mov
insb
in
jg
aas
hlt
pop
adc
inc
out
sahf
fildl
mov
addl
push
add
add
xchg
xchg
iret
rcl
xchg
adc
aas
dec
idivb
bound
xor
nop
rcl
in
in
mov
mov
imul
ss
lods
add
bound
jb
sub
into
cwtl
dec
mov
jne
lahf
dec
dec
es
out
pop
sbb
xor
inc
fisttpll
js
cmc
daa
adc
cmp
xor
pop
push
push
and
pusha
add
lcall
xchg
mov
mov
mov
test
out
aas
inc
in
fs
jnp
sub
dec
cmp
xor
leave
popf
cmp
adc
das
lods
jmp
pop
dec
rolb
daa
mov
jmp
ja
jecxz
cmp
cltd
sub
mov
pop
mov
mov
push
fcomp
cmc
repz
outsl
adc
mov
test
add
lret
add
icebp
jo
lock
cld
xchg
enter
mov
add
sar
ja
and
leave
xor
sbb
cmp
loope
pop
fwait
fs
movsb
dec
mov
lods
inc
mov
jbe
cmp
fdivrs
outsl
fdivr
fsts
adc
xchg
dec
cmp
push
fs
mov
mov
cs
jecxz
adc
outsl
add
das
push
insb
and
inc
mov
cmp
sti
loop
jne
mov
daa
adc
inc
js
pop
cmp
int3
push
sub
sbb
push
and
lods
sub
mov
nop
insl
cwtl
or
icebp
pop
or
xor
iret
test
cmp
mov
iret
sub
lcall
daa
scas
pop
mov
divb
in
lea
movsl
daa
and
ljmp
inc
inc
xor
lock
mov
inc
xor
pop
ficoms
scas
adc
cs
mov
arpl
daa
lea
push
inc
sbb
push
rcl
mov
fwait
mov
cmp
movsl
vmovdqa
pop
ret
out
or
push
ja
cltd
mov
enter
push
cmp
adc
mov
pop
repz
lods
mov
inc
out
bound
push
les
and
movsl
dec
movsb
dec
push
mov
jae
add
jge
test
leave
push
icebp
fistpl
xor
in
movsb
fimuls
push
pop
jge
aaa
or
xchg
xor
xchg
jecxz
andl
jns
xchg
std
jmp
repz
push
dec
jle
adc
dec
xchg
push
call
xchg
cmpsb
and
xchg
push
lds
sarb
std
orb
clc
add
xchg
mov
clc
aad
push
out
mov
mov
and
cmpsb
sbb
jmp
jb
movsl
pop
sahf
push
mov
sbb
xchg
sbb
cmpsl
pop
dec
ficompl
jle
incb
daa
loope
inc
aad
call
icebp
popf
xchg
dec
mov
sub
rolb
cltd
push
xor
sbb
lock
js
push
sbb
ret
out
arpl
push
xchg
loop
mov
push
adc
fmull
mov
sbb
scas
loope
insl
lods
sub
ja
push
xor
dec
stos
dec
ja
sub
es
mov
cmp
cmp
xchg
cli
movsb
sbb
cmp
das
es
outsl
ret
add
int
push
enter
out
jp
inc
sub
test
sbb
mov
hlt
xor
cmpl
popf
movsb
jae
mov
cld
pop
ds
repz
iret
or
push
aam
lods
xor
sarb
push
sub
pop
xchg
movsl
sub
sbb
fnsave
sti
cmpb
cmpsl
shlb
cmp
fs
lock
jne
aad
mov
jae
dec
add
ss
jmp
jge
incl
scas
pop
xchg
adc
ss
sti
stos
rclb
dec
inc
daa
loop
pusha
hlt
xor
in
ss
xchg
adc
fcomi
mov
push
dec
test
negl
in
xor
ret
jge
mov
lods
cwtl
sbb
lods
cmpsl
stos
pop
xchg
jle
mov
nop
movsb
cwtl
lahf
pop
stc
test
jecxz
rolb
data16
mov
sar
rorl
dec
inc
push
lds
je
or
pop
add
stos
bound
jmp
adc
xor
lock
dec
outsb
nop
ss
into
inc
imul
leave
add
pushf
in
push
mov
aad
ror
insl
sbb
pop
shll
imul
decb
push
dec
jnp
stc
fdiv
or
mov
fstpt
enter
xchg
fstpt
and
call
fwait
sbb
pop
mov
push
dec
das
lods
inc
mull
cmpsb
sub
cmp
pop
mov
shrl
mov
inc
dec
test
inc
sub
notl
and
adc
mov
icebp
mov
cli
add
icebp
jmp
jne
test
and
aam
and
lea
cmp
mov
aas
in
add
xor
sbb
jne
mul
lods
test
loop
rcl
in
pop
push
mov
in
sar
mov
mov
gs
movsb
jg
arpl
pop
je
fcoml
xchg
arpl
push
or
cmpsl
xchg
mov
inc
dec
mov
mov
mov
sbb
or
dec
and
sub
leave
outsl
arpl
adc
push
inc
jne
push
mov
js
ds
push
cli
adc
dec
popa
in
or
pop
das
loopne
lea
inc
in
jp
daa
stos
out
or
popl
in
lea
pop
test
and
in
xor
sub
mov
pushf
add
pop
mov
ds
test
push
push
pusha
cmc
in
lret
cld
pop
sub
cmpb
dec
test
jle
adc
cli
jl
stos
loopne
push
jmp
rcrb
xchg
pop
xchg
andb
cmp
cltd
or
xor
sub
pusha
inc
inc
push
cmp
inc
jmp
or
int
jno
jno
orb
ljmp
sbb
rorl
lcall
scas
jle
movsb
ss
push
in
in
sbb
cwtl
cmp
xchg
and
cmp
adc
sbb
and
mov
cli
mov
xchg
lcall
inc
imul
insb
shrl
inc
iret
cmp
sub
sbb
cmp
mov
xor
fcmovu
inc
inc
pop
adc
repz
sub
pop
pushf
inc
mov
sbb
push
mov
push
ds
dec
or
and
jle
push
call
mov
aaa
mov
stc
pop
fiaddl
mov
pop
insb
insb
cmp
leave
movsb
xchg
and
aam
sub
pop
sti
into
icebp
into
rcll
mov
jg
repnz
test
push
dec
test
int3
push
popf
inc
mov
xchg
mov
cltd
add
mov
into
insb
push
push
aaa
arpl
movsb
clc
popa
dec
rcl
mov
js
mov
insb
insb
push
out
cltd
into
lock
push
ret
add
scas
dec
push
add
and
ds
xchg
loopne
push
cmp
xchg
rcrl
or
or
sub
mov
inc
arpl
or
push
adcl
pop
adc
popf
leave
ficompl
stos
xchg
xchg
pop
dec
jge
add
mov
in
dec
push
lods
das
jns
mov
xchg
pop
fildl
push
push
enter
xor
cwtl
fdivs
sbb
aas
hlt
hlt
fdivl
std
mov
jle
inc
inc
adcl
cmp
mov
and
cmp
xor
rdtsc
jmp
aas
sub
xchg
xchg
frstor
adc
lret
mov
fs
sti
test
fwait
xchg
repnz
out
mov
repnz
pop
popf
xchg
xchg
decl
mov
addr16
jp
fldenv
pop
xor
mov
inc
cmp
push
dec
loope
bound
test
cmp
mov
in
adc
mov
test
inc
and
fildll
add
push
mov
cvtpi2ps
sub
dec
mov
pop
adc
or
ds
mov
scas
lock
push
pushf
pop
adc
loop
pop
ret
mov
sub
rcrb
ret
mov
addl
out
add
cli
dec
xor
popf
ds
mov
mov
mov
xchg
loop
inc
movsl
xchg
out
mov
enter
das
testl
push
fmuls
out
mov
jbe
call
rorb
andb
shl
movsb
outsb
pop
mov
xor
mov
repz
inc
lds
inc
jbe
xchg
clc
mov
adc
lret
in
fadd
dec
nop
pop
cmpsl
pop
pop
xchg
test
push
icebp
pop
inc
lea
xchg
lcall
outsb
sub
cwtl
hlt
push
xlat
js
sbb
fidivl
adc
cltd
imul
fiadds
orl
sbb
ror
rorb
fs
lret
in
rcrb
pop
cmp
inc
push
data16
xor
push
pop
push
pop
inc
stc
jmp
lret
fistl
addr16
adc
sahf
mov
cld
test
xchg
cmc
mov
pop
daa
and
sub
pop
int3
inc
xchg
push
lds
sti
es
mov
sbb
cmp
fsub
sub
gs
mov
sbb
cmp
or
mov
xor
jmp
ds
jno
jne
mov
iret
sbb
in
test
in
add
out
mov
hlt
sbb
jae
mov
push
cmp
icebp
sbb
sbb
mov
fcmove
mov
call
sahf
cmpl
xchg
std
ja
rorb
lret
push
xchg
xor
bound
stos
pop
inc
neg
xor
icebp
or
jl
lret
je
pop
xchg
gs
movsb
aam
xor
lds
xor
xchg
movsb
movsb
into
jecxz
add
push
jbe
pop
and
fisttpll
stos
dec
hlt
xor
cmp
shrb
xchg
sete
pop
aas
lds
jo
xchg
cmp
shrb
aam
xlat
cmp
mov
jae
or
fisttpl
sub
adc
loopne
lcall
xor
jecxz
adc
cwtl
fistl
mov
mov
movsb
insl
ss
aam
or
mov
ds
les
repz
cs
and
xchg
inc
flds
add
shl
imul
cwtl
mov
into
inc
sbb
test
or
xlat
add
xchg
add
jae
outsb
and
fs
pop
push
dec
cmp
mov
sbb
push
pop
stos
fucomi
jp
mov
data16
in
test
pop
lds
mov
mov
xor
lock
ss
xor
pop
xchg
fistps
push
adc
cmpsl
push
mov
test
or
sub
repz
lcall
xchg
xor
in
jl
test
push
mov
dec
pop
ljmp
jnp
sbb
dec
in
frstor
or
xchg
pop
jb
push
or
std
test
and
int3
ds
jns
fistpll
fcomps
cs
daa
dec
cmp
fdivp
adc
adcb
push
mov
aam
push
aad
jge
mov
cmp
and
lock
cmp
push
sbb
push
mov
ja
scas
jbe
and
imul
addr16
lret
lcall
cld
rcrb
push
stc
pusha
pop
nop
dec
incb
sbb
mul
add
and
pop
mov
lock
mov
pop
inc
cmp
dec
mov
movntps
cmp
cmp
sub
sub
stos
mov
adc
dec
into
inc
or
pop
out
inc
mov
push
or
icebp
ds
ds
cld
mov
daa
scas
fbstp
popa
stos
les
cltd
push
aas
mov
sub
pop
cs
mov
mov
jle
jb
and
jge
push
mov
sahf
stos
leave
test
push
xor
imul
dec
jo
xor
cmc
aad
mov
test
xchg
nop
xor
cmp
shrb
movsl
or
or
pop
inc
shl
jb
mov
xchg
fsts
mov
sahf
pop
popa
test
lods
popa
add
push
sub
orb
xchg
outsl
pop
mov
cli
mov
pusha
call
cmp
mov
gs
scas
dec
in
mov
aam
sbb
cld
xchg
mov
movntq
aam
out
aad
sub
daa
jae
fmull
sub
dec
in
rorb
ror
in
or
xor
cmp
movsb
out
sti
jg
enter
inc
or
xchg
mov
cli
jno
repnz
decb
imul
mov
aaa
cwtl
cmpsb
cmp
xchg
int3
ficomps
sbb
xchg
orl
js
xchg
push
jg
inc
inc
mov
sub
lods
cmc
aam
add
mov
icebp
mov
cmp
aas
jb
push
pop
dec
ss
xor
test
mov
cli
mov
loop
sub
cmp
insb
rcrl
out
cmp
and
test
ret
push
add
xor
into
iret
jne
test
insb
add
push
popf
cmp
negb
jo
stos
repz
mov
add
insl
int
sub
scas
push
daa
movsb
mov
arpl
mov
shl
pop
mov
push
mov
lahf
fwait
insb
sub
jo
or
mov
xchg
jp
sbbb
scas
xor
fimuls
or
xchg
xor
stos
gs
rcl
out
popf
sub
outsl
sub
out
lret
jbe
popa
mov
cmpsl
ficompl
enter
cmp
int3
pop
xchg
and
pop
nop
fisubrs
xchg
or
into
outsb
shr
jg
stc
cwtl
lcall
pcmpeqw
inc
cltd
movsb
xor
cmp
push
in
xchg
ja
push
mov
jno
jmp
and
call
sub
les
sbb
movsl
or
mov
test
xchg
inc
cmc
push
hlt
negl
jno
stos
movsb
and
mov
cmp
mov
push
nop
xlat
dec
imul
sub
pop
mov
in
icebp
pushf
push
push
mov
dec
in
xor
out
scas
sub
out
pop
insb
inc
lock
dec
sbb
nop
aam
mov
outsb
and
push
testb
cmp
lcall
dec
hlt
pop
mov
shlb
outsl
addr16
test
mov
aam
pop
ret
pop
add
adc
sbb
dec
mov
jae
inc
pop
push
ss
xchg
adcb
std
cmp
cmpsb
sbb
imul
shl
inc
pop
or
jno
mov
jno
mov
sub
iret
push
adc
pop
cmc
sbbl
shlb
mov
hlt
jmp
add
xchg
sbb
xchg
sub
nop
jg
push
mov
pop
addb
adc
shll
jae
sbb
cltd
aam
lods
sbb
shrl
mov
mov
ret
inc
sbb
and
cmp
jbe
lret
outsb
adc
jno
lds
jb
mov
sbb
fwait
inc
mov
icebp
iret
inc
cmp
mov
mov
push
aas
push
fiadds
mov
hlt
mov
popf
mov
pop
pop
adc
imul
data16
or
lret
push
push
push
aaa
dec
scas
in
loopne
mov
mov
xor
mov
sbb
mov
ficompl
jno
mov
cmc
repnz
dec
test
int
jge
pop
cld
fisttps
dec
add
push
jnp
andb
pop
lds
add
and
xor
pusha
or
call
sub
jp
testl
cmpsl
jg
fdivrp
rcrb
dec
daa
ss
cmp
mov
mov
xchg
inc
jge
pop
xchg
lahf
jae
mov
jp
je
iret
pop
cs
stos
mov
inc
and
xchg
xchg
xor
addr16
hlt
jo
push
sub
sub
dec
int
pop
jle
imul
jae
jo
push
pop
mov
dec
test
clc
cmp
int3
scas
dec
inc
lea
scas
push
pop
insl
pop
mov
sub
and
into
inc
dec
mov
push
sub
jns
out
mov
sub
sbb
scas
cwtl
jge
xchg
in
jo
xor
sbb
and
adc
push
xlat
mov
push
test
aam
sub
cmc
dec
dec
cmpsb
xor
repz
jbe
mov
and
test
xchg
movsb
mov
sub
mov
icebp
mov
nop
stos
fwait
xchg
out
and
insb
adc
jg
xor
test
jmp
xchg
fistl
cwtl
push
mov
cmp
and
out
xorb
cmovl
mov
les
daa
repz
sbb
loopne
sbb
fnstcw
mov
sarb
pop
and
jle
jle
loopne
adc
into
test
jbe
popa
shlb
cld
sub
jb
imul
test
and
test
pop
dec
mov
or
push
scas
add
pop
jae
cld
into
sbb
xor
adc
in
pop
dec
cmp
call
jmp
cmp
pushf
inc
sbb
xor
lahf
jne
shlb
mov
cwtl
shll
ret
loopne
mov
cld
repnz
rorl
pop
sti
push
adc
mov
lock
inc
lock
dec
testb
sarl
sub
push
ret
lds
mov
xchg
and
jge
inc
mov
rclb
cmp
pop
stc
int
data16
push
and
das
stos
jno
add
dec
ljmp
xor
add
fwait
and
in
loopne
mov
test
mov
xor
push
pop
pop
daa
xor
test
repz
popf
pop
ret
pop
cs
outsl
mov
lods
and
lcall
mov
fmul
push
lcall
adc
mov
mov
ljmp
aam
mov
mov
inc
cmpb
fnstcw
add
out
and
into
mov
cmc
lea
or
xchg
mov
jo
pop
inc
add
fldcw
push
mov
negl
adc
mov
jmp
out
xchg
mov
divl
sub
insl
push
cli
or
mov
cli
data16
xchg
repz
add
ja
sub
sbb
shl
mov
lcall
int
les
sbb
cmc
and
clc
cs
dec
inc
and
inc
inc
mov
xchg
or
pusha
sbbl
lcall
xchg
pop
xchg
push
cmpsl
js
inc
push
sbb
xchg
xchg
cmpsb
fistl
les
in
jae
pop
pushf
or
adcb
adc
addb
mov
push
fisubl
push
in
pop
inc
lods
int
jg
push
mov
push
hlt
out
push
dec
les
pop
test
pop
jno
xor
movsl
fs
rcll
outsl
les
inc
mov
cmp
push
and
cmp
jge
fmuls
jecxz
pop
ja
popa
cld
call
lds
sbb
popf
negl
sub
mov
insb
mov
and
jns
es
repnz
roll
mov
lret
inc
xor
mov
xchg
scas
push
lret
dec
cmpsl
imul
enter
test
popa
sbbb
scas
jns
neg
push
dec
jo,pt
fisttpll
push
mull
pusha
sbb
lahf
test
jbe
imul
mov
clc
pop
scas
dec
add
cli
in
int3
ljmp
mov
cltd
cmp
loope
out
adc
insl
adc
dec
nop
cld
movsb
scas
imul
xor
add
fdivrs
push
and
loop
sub
push
push
dec
xor
sub
or
sub
xchg
loope
mov
rcrb
pop
ret
push
adc
mov
ljmp
shl
repz
loopne
es
mov
mov
shll
pusha
dec
jmp
in
jns
in
mov
test
ljmp
addr16
inc
cmp
sbb
cmpb
gs
inc
xchg
xor
mov
repz
and
ucomiss
dec
push
pop
mov
mov
xor
cmpsl
jbe
lcall
push
cmpb
pop
leave
mov
xchg
pop
push
sub
pop
mov
pop
sbb
push
sub
hlt
jmp
mov
xor
mov
movsl
cmp
shrl
sbb
mov
adc
mov
int3
add
ljmp
inc
sbb
fs
sbb
pop
outsb
push
loope
aam
inc
jns
icebp
dec
mov
ljmp
lahf
push
mov
stos
nop
sub
or
lret
call
in
push
in
mov
xchg
sarb
and
adc
ret
repz
xor
in
adc
pop
rorl
rolb
dec
push
cmp
clc
push
or
mov
push
mov
sub
add
fisttpl
repz
hlt
fcompl
inc
sub
inc
inc
es
int
and
pop
in
out
xchg
pop
or
out
sbb
and
jns
ja
push
jne
pop
popf
das
inc
jbe
cmp
jecxz
stos
sti
add
test
les
mov
dec
loopne
pop
mov
inc
sbb
mov
sbb
mov
movsb
xchg
cmp
mov
ret
xchg
xchg
push
xor
adc
push
and
and
cmp
loop
call
loop
push
and
push
push
mov
repz
mov
adc
gs
sub
lret
adc
lods
test
cmp
pop
mov
xor
mov
inc
cld
mov
lcall
movsl
sbb
add
jmp
xchg
inc
and
rcr
stos
mov
pop
mov
mov
scas
inc
inc
lea
adcb
imul
sbb
mov
shrl
adc
add
sti
popf
jbe
push
stc
add
in
and
arpl
call
jp
arpl
add
ror
add
iret
aas
push
rcr
sub
inc
mov
inc
shrb
iret
int3
loop
mov
leave
mov
dec
adcl
mov
mov
or
xlat
push
jmp
sbb
cld
xor
dec
loop
fsubrl
pushf
ret
inc
jp
jge
push
lret
jp
lret
mov
jne
push
outsl
cmp
icebp
imul
push
fs
ret
xchg
sti
inc
jne
roll
push
fdivr
rolb
xor
xor
jp
aad
xor
pop
insb
int
in
pop
outsl
imul
dec
sbb
test
mov
mov
dec
xchg
lcall
aas
mov
outsb
push
jl
jb
xlat
xlat
cs
addb
jge
jnp
insb
inc
imul
cmpsb
shrb
xor
jo
hlt
rep
xor
or
sbb
xchg
aaa
sub
xchg
add
lods
xbegin
xchg
jecxz
scas
leave
jbe
hlt
mov
icebp
incl
loopne
sub
pop
pop
xchg
mov
repnz
insl
les
movsl
push
add
scas
fsts
pop
or
imul
pop
pop
pop
shrb
fsubs
mov
dec
mov
faddl
jecxz
fsin
clc
imul
in
adc
jle
loopne
outsl
cs
push
jecxz
js
push
adc
xchg
push
clc
jo
ds
fdivrp
cmp
rcrb
mov
sub
mov
outsl
push
cmpsl
inc
pop
push
lods
add
scas
xor
pop
xor
mov
sbb
xchg
loopne
fcmovb
int3
repnz
mov
mov
les
and
lret
sbbb
int
xchg
sbb
jnp
mov
fidivrs
jae
idiv
or
fsubrs
pushf
inc
and
clc
inc
xchg
add
test
shll
push
push
xchg
int3
outsb
lods
inc
inc
bound
pop
push
jl
shl
cmpsb
add
aas
pop
les
cltd
decl
push
sbb
cmpsb
test
lea
push
bound
push
popf
and
enter
sbb
push
aaa
cld
mov
xor
clc
mov
ds
rcrl
or
cmp
mov
inc
pop
movsl
dec
inc
imul
or
pop
call
call
lds
imulb
and
fbstp
pusha
mov
enter
sahf
push
ja
dec
sub
mov
fsubl
or
mov
dec
pop
jl
or
divb
dec
inc
icebp
xlat
xchg
jnp
push
sti
fsubrs
xchg
mov
xor
mov
sbb
jnp
mov
test
call
lcall
into
push
or
inc
dec
or
nop
or
sub
inc
lret
cld
jecxz
sbb
imul
pop
adc
daa
add
lea
insl
cmp
add
ficompl
in
or
inc
inc
stos
cmc
mov
push
inc
repz
xchg
std
subl
lcall
pop
cmpsb
pop
add
and
pushf
jmp
add
outsb
cmc
lahf
sti
pop
xorl
cld
movsb
jnp
dec
loopne
aas
fmull
out
jno
cmovge
out
arpl
lea
aas
sbb
test
int3
mov
pushf
xor
sti
mov
adc
sar
je
in
ficoms
iret
addr16
mov
and
cmp
push
stos
inc
inc
lret
jl
jnp
or
sbb
mov
or
and
lea
or
ljmp
pop
mov
pop
push
add
mov
and
imul
jno
shll
in
enter
fmuls
pop
add
aaa
fldl
mov
mov
inc
sbb
mov
mov
cli
xor
sbb
ret
sbb
orb
in
jne
pop
idivb
into
fstpt
inc
jp
iret
cmp
jecxz
mov
mov
sarl
aas
incb
and
xchg
jns
xchg
mov
push
push
inc
xorl
shll
jge
shll
push
lods
add
sarb
mov
sbb
push
stos
mov
pop
sbb
cli
nop
mov
mov
dec
or
add
jns
pop
mov
dec
dec
addr16
clc
inc
pop
test
jecxz
jle
cs
test
insl
das
js
stos
cld
add
ret
aam
pop
insb
push
movsb
stos
and
cltd
add
push
mov
mov
cli
out
rcrb
mov
testb
inc
mov
lret
shll
cmp
cmp
lock
inc
dec
sbb
loope
lret
inc
int3
inc
stos
dec
mov
cli
adc
mov
add
clc
ret
add
hlt
mov
loopne
adc
clc
dec
ret
cmp
cmp
popa
leave
sahf
or
mov
loope
inc
inc
orb
jecxz
scas
push
push
movb
fsubl
xor
pop
insl
shll
pop
cmpsl
bound
gs
xchg
stc
das
sbb
mov
push
hlt
inc
mov
dec
and
add
mov
mov
cmp
push
xorl
or
fstpt
or
mov
repnz
test
int3
lcall
xor
jp
jb
ja
xchg
ficompl
sub
fisttpll
cs
leave
shll
cwtl
nop
test
xchg
xor
jl
icebp
pop
push
mov
xchg
mov
xor
jo
bound
ret
shrb
pop
in
gs
push
dec
lret
imul
ljmp
pop
jmp
add
sub
pop
push
aad
sbb
jp
ja
mov
lods
jno
repnz
sbb
icebp
mov
je
leave
push
in
rclb
shll
push
popf
xchg
pusha
scas
repz
or
dec
sub
jge
repnz
jb
ret
movsb
inc
xchg
xor
pop
out
jne
aas
div
hlt
data16
stc
cmp
mov
pop
ja
pop
repz
add
adc
movsb
fs
aam
mov
pop
mov
push
inc
rolb
in
hlt
rclb
mov
dec
adc
mov
jo
mov
data16
sbb
sbb
test
cmp
movsl
repz
mov
jle
out
lds
xor
aam
inc
push
inc
pop
loop
das
jl
pop
xor
pushf
adc
inc
ljmp
mov
ret
icebp
mov
repz
aaa
pop
xchg
outsb
xchg
push
xor
push
cmp
pop
stc
cmpsb
jo
dec
mov
xchg
xchg
mov
push
xchg
repz
mov
push
sub
xchg
aam
mov
mov
cmp
dec
jle
push
sbb
cmp
decl
inc
and
cmp
add
cs
imulb
jl
xadd
rcr
jecxz
fildl
cmp
repz
mov
add
int
or
jne
lret
push
jmp
pop
decb
clc
add
cmp
jne
xor
inc
dec
xlat
cmp
pusha
shlb
ds
push
and
dec
push
jmp
inc
add
adc
push
lcall
icebp
ja
jne
cli
dec
xchg
rcrb
inc
shrb
adc
add
push
lcall
and
dec
sub
jns
popf
pcmpeqw
xor
std
dec
sbb
and
push
jecxz
add
inc
sub
pop
aam
je
pop
jb
or
ljmp
xor
mov
and
insb
insl
and
push
mov
push
lcall
sbb
movb
cmp
in
enter
out
fbstp
mov
add
bound
xor
cmp
lds
out
das
int
shll
out
mov
imul
inc
outsl
jns
mov
stos
iret
cmpsl
cli
or
adcb
mov
nop
stos
inc
ljmpw
arpl
test
mov
add
mul
cmp
dec
cmc
lds
lds
std
add
mov
movaps
pop
or
inc
add
add
jmp
out
stc
ljmp
mov
adc
cmc
mulb
nop
stos
bound
jne
jp
in
cld
dec
outsb
lock
shrl
ss
mov
sbb
je
mov
xor
or
hlt
pushf
add
clc
mov
out
push
xor
test
inc
es
xchg
inc
push
cmp
popa
faddl
mov
jmp
mov
push
xchg
add
xchg
cmpsb
ja
push
mov
fwait
int3
xor
pushf
aam
fwait
xor
int3
adc
cmp
jne
mov
push
icebp
movl
cld
jne
cld
ret
aas
int3
daa
dec
xchg
test
andb
adc
xchg
shl
mov
arpl
adc
fdivrl
push
jo
ja
loope
lahf
mov
push
and
ljmp
pushf
jge
fiaddl
gs
out
lret
dec
cmp
sub
sbbl
mov
or
mov
adc
mov
pop
push
push
scas
pop
xchg
lds
pop
xchg
cmp
pop
pop
out
mov
mov
jle
or
js
loop
mov
or
mov
xor
vmread
sub
lcall
fwait
aaa
pop
lds
xor
add
clc
mov
mov
stos
cmp
push
xor
mov
fdivrl
cld
insb
xchg
jae
mov
js
hlt
ret
bound
out
push
cmpb
adc
lcall
or
not
mov
add
adc
and
nop
jp
lea
jne
out
addr16
push
adc
out
jecxz
sub
mov
loop
aas
int3
mov
mov
imul
adc
mov
mov
mov
icebp
mov
push
cmp
in
inc
fdiv
pop
outsb
out
mov
dec
enter
mov
int
cli
insb
mov
add
and
sbb
push
jbe
pop
sub
mov
cmpb
testb
test
int3
lock
mov
test
pop
pop
mov
xor
stc
enter
jmp
jno
jecxz
mov
lret
adc
inc
mov
pop
dec
xchg
sbb
lahf
pop
inc
push
pop
cwtl
jae
pusha
ss
bnd
clc
cmp
notb
test
inc
push
stos
sbb
jo
test
mov
test
scas
fcoms
clc
xchg
xlat
ficoms
xchg
lods
and
insb
dec
mov
ds
mov
jl
cmp
mov
lret
sub
je
sbb
or
pop
adc
push
fsts
xchg
loope
lret
ror
sub
mov
pop
sbb
pop
or
or
aaa
mov
cmovg
fucomp
mov
jns
leave
popf
cltd
jno
jno
aaa
adc
pop
mov
add
call
in
sub
xchg
inc
ss
push
mov
jb
sti
mov
andb
mov
mov
sbb
outsb
in
repz
out
fnstenv
imul
test
stos
mov
addl
cmpsb
pop
jbe
cmp
dec
sbb
das
xchg
xor
stos
shl
out
cltd
dec
mov
pop
inc
nop
out
fs
inc
sub
xchg
inc
ret
dec
jl
iret
imull
loop
shr
sub
push
mov
fldt
mov
push
insb
push
jno
mov
setns
mov
fdivl
adc
mov
and
aam
cmpsl
fisubrs
or
gs
aad
loopne
cmp
idivl
movsl
pop
sub
in
jno
mov
pop
xor
and
out
dec
mov
push
dec
in
inc
fcomip
cmp
data16
pop
push
cmp
or
mov
sti
inc
jbe
icebp
adc
jmp
lods
sbb
push
fiaddl
jmp
push
je
clc
aaa
pop
stc
pop
das
daa
jb
push
add
js
push
jo
push
push
stos
cld
mov
fstps
jno
xchg
adc
sbb
jp
jl
divb
jp
sahf
push
std
xor
mov
faddl
or
test
rcll
adc
xor
out
or
int3
cmp
add
push
xchg
data16
scas
mov
stc
and
scas
movl
fwait
lods
mov
xor
cmp
sub
movsb
and
arpl
xchg
cmp
or
jp
cmp
mov
mov
mov
mov
push
dec
jp
inc
push
xor
add
loope
xchg
je
cld
inc
cmp
adc
jmp
sub
jb
inc
add
into
lock
movsl
mov
mov
push
jl
shrb
aaa
les
sbb
pop
cmpsl
mov
lahf
decb
inc
push
xchg
ret
sti
xchg
dec
pop
gs
adc
roll
dec
and
arpl
pop
dec
mov
popf
imul
in
outsb
dec
xchg
movlps
mov
sbb
leave
cmp
mov
mov
pop
lcall
int3
mov
aam
and
cmp
add
push
fimull
lea
ja
in
fwait
repnz
jb
xchg
test
sbb
pop
pop
dec
mov
adc
loope
sbb
repnz
push
loope
outsb
push
daa
xchg
leave
mov
adc
test
pop
sbb
fwait
push
and
faddl
mov
xchg
xchg
in
test
arpl
cmpsb
gs
push
lcall
sbb
scas
fldl
loop
xor
aam
dec
sar
fbstp
cld
inc
push
and
addr16
dec
scas
movsl
scas
pop
add
notl
mov
pushf
or
pop
popf
or
gs
sub
mov
repz
int3
lea
xor
or
inc
int3
mov
push
push
pop
cs
addr16
mov
stos
add
lahf
pop
and
mov
je
push
jecxz
and
fxch
and
into
jle
sub
lock
inc
dec
dec
pop
jg
xor
cwtl
jecxz
mov
fs
push
sbb
sbb
into
lret
mov
inc
jl
and
repnz
enter
xchg
mov
cmp
es
fistpl
xchg
xchg
clc
cmc
lock
pop
fiaddl
cld
popf
push
mov
mov
hlt
scas
icebp
jge
ljmp
inc
scas
loopne
jle
push
ljmp
cs
and
xchg
xor
lods
stc
and
ret
or
fs
pop
sbb
inc
adc
add
push
mov
dec
stc
es
fdivs
xchg
inc
sub
xor
aad
mov
pop
frstor
call
scas
loop
mov
mov
mov
or
lret
out
test
cwtl
sub
cmpsb
xor
cmp
sahf
xchg
cmc
scas
sub
sti
cmp
mov
aam
fisubrl
cltd
sbb
gs
adc
andl
js
and
mov
mov
sub
nop
jo
pop
xchg
jo
data16
lock
xchg
cli
xchg
sub
pop
loope
or
stc
dec
cld
enter
es
dec
stos
mov
insl
imul
imul
mov
shll
fcoml
pop
push
fcomps
xchg
cs
jp
pop
outsb
je
cmp
jle
sub
loopne
test
fcomp
add
aaa
or
or
test
xor
pusha
aam
inc
push
out
cmp
push
push
movsl
mov
loopne
maskmovq
mull
fstl
and
gs
ds
xlat
sub
hlt
fdivr
cs
push
aam
cmpsl
stc
aaa
dec
push
cmp
mov
push
jb
fs
clc
xor
stc
scas
aas
xlat
das
dec
cmp
movsb
inc
xchg
jg
adc
add
insb
xchg
sub
fldenv
pop
int
inc
in
loop
ds
sbb
lock
data16
ret
xor
aas
movb
xor
adc
cmc
int3
push
add
test
lds
out
sbb
push
pusha
dec
adc
sbb
jns
xor
movsl
dec
insl
xchg
sbb
das
cmp
jno
fsubs
mov
lret
mull
lahf
sbb
pop
adc
std
cmpl
insb
les
loope
and
jle
mov
push
sbb
loopne
mov
push
cwtl
mov
cmpsb
cmpsb
ficompl
mov
ret
inc
push
sbb
add
mov
das
aad
mov
or
je
mov
popa
std
ds
xor
adc
fisubs
fwait
or
add
mov
add
jae
xor
out
inc
loopne
mov
shll
insb
or
test
test
dec
test
sbb
jno
push
xor
aad
xor
xlat
xlat
mov
pop
xor
dec
pushf
push
xlat
imul
data16
sub
dec
cmp
xchg
mov
dec
mov
mov
pushf
cwtl
in
dec
or
adc
lea
les
mov
aaa
in
popa
pop
push
adc
or
adc
imul
xchg
inc
jno
cmp
adc
imul
pushf
jbe
mov
popf
push
or
xchg
push
add
ljmp
or
mov
andl
cmp
sub
add
clc
inc
xchg
inc
aad
mov
iret
test
imul
cwtl
mov
sti
pop
sub
cmpsl
fisubs
pop
mov
addr16
mov
adc
into
push
jge
loope
out
push
sahf
lret
pop
push
rorl
dec
push
dec
xchg
scas
sub
daa
mov
fiaddl
cld
loop
test
pop
xor
xchg
dec
cwtl
das
add
or
sub
pop
in
imul
push
es
jle
fists
pop
fcoml
rorb
or
jb
mov
les
rcrb
mov
pop
mov
in
pop
outsl
push
cmpsl
sub
sbb
or
aas
jno
xor
fadds
sub
out
xor
cwtl
pop
aam
cmc
inc
mov
mov
dec
mov
mov
cmpsb
cmpsb
scas
or
and
das
adc
das
in
adc
dec
mov
fwait
adcl
adc
test
jns
ja
test
ret
rcr
mov
xor
addr16
add
mov
movsb
or
mov
mov
push
and
xor
or
dec
mov
jo
mov
rcr
and
mov
into
lret
pop
ss
ja
test
pusha
pop
popf
jae
xchg
sub
rcl
jbe
flds
mov
sub
frstor
test
stos
insb
mov
dec
pusha
jg
iret
mov
push
pusha
pop
xchg
incl
jl
loopne
bound
rcr
in
jbe
cld
cmp
scas
sub
ret
pop
dec
in
pop
iret
dec
clc
int
stc
stc
out
cs
inc
mov
dec
mov
outsb
adc
pushl
pop
push
push
movsb
cmpsl
mov
xor
btc
dec
mov
hlt
int
fstpt
sub
int3
loop
and
neg
xchg
pop
test
dec
or
jmp
dec
sub
inc
lds
mov
cwtl
or
js
cld
data16
data16
ret
aaa
jg
subl
push
pop
mov
push
inc
push
test
std
int3
stos
adc
sbb
xlat
mov
jp
loope
jnp
xor
lods
and
push
dec
sub
pop
clc
call
test
pcmpeqw
insl
lcall
xchg
sbb
out
cmp
cs
sbb
out
call
pop
fsubrp
stos
inc
xorl
jae
jg
idivb
pop
push
xchg
outsl
jns
or
push
sub
push
incl
outsl
mov
xchg
jne
mov
pusha
dec
jnp
int
in
fsubrp
jo
mov
pushf
ret
jmp
jae
dec
imul
test
scas
cld
lahf
mov
cwtl
outsb
roll
push
inc
cmp
sub
fcomps
push
ds
test
cmp
pop
ljmp
dec
scas
pop
sbb
insl
int
loopne
push
fisttpl
dec
fldl
push
ljmp
push
sbb
mov
xorl
and
jg
xchg
xlat
dec
cmpsl
mov
cli
push
push
hlt
stos
lcall
mov
mov
mov
pusha
test
mov
aaa
in
mov
pop
jmp
xor
or
mov
xchg
pop
fildll
sub
dec
push
imul
pop
push
dec
sub
in
mov
xchg
into
mov
aad
repnz
xchg
insl
adcb
jge
in
xchg
loop
push
aaa
repnz
stos
xchg
xor
mov
ja
and
ret
cmp
xchg
cmc
je
cmp
cmp
test
and
fidivl
jno
mov
push
stos
imul
into
dec
sbb
roll
lret
jo
notb
push
sub
ljmp
addr16
jns
mov
inc
mov
sub
loope
mov
test
push
arpl
addr16
mov
xchg
stos
and
and
pop
popf
nop
roll
cs
inc
add
lret
sti
scas
inc
mov
rorl
fsubrl
adc
hlt
lods
out
loope
scas
pop
insb
fimull
lret
add
and
and
loope
xor
rolb
in
lea
outsl
jge
clc
adc
add
mov
cmp
cmc
xchg
inc
outsb
ret
push
or
and
in
incl
push
adc
xchg
xchg
ds
or
sub
ficompl
inc
adc
arpl
lds
lret
mov
and
xor
xor
or
xchg
aaa
pop
les
stc
xchg
mov
xchg
andnps
test
push
dec
ret
push
inc
adc
js
imulb
jbe
and
lea
add
jge
ror
adc
fmull
test
sbb
out
or
pop
dec
jo
movsb
sarl
ds
sub
mov
pop
int
sbb
repnz
lret
mov
mov
inc
add
mov
stc
xchg
push
ds
mov
mov
in
outsb
sahf
in
insb
sub
push
leave
xorb
sbb
fs
rolb
repnz
dec
add
insb
jo
in
movsl
mov
js
mov
out
or
jl
add
cs
or
xor
jl
jge
mov
out
aam
test
push
dec
scas
mov
das
xchg
xor
cmp
shll
test
sub
imul
mov
push
push
rcll
inc
repz
add
mov
pop
insl
mov
mov
mov
ss
or
into
fcmovnu
mov
sbb
pop
imul
je
pop
ret
je
jmp
sbb
mov
adc
repnz
lods
dec
inc
jns
imul
dec
mov
outsb
mov
fiadds
xchg
rcrl
rcrl
cmp
jg
sahf
test
hlt
and
mov
inc
scas
push
jbe
loop
or
jl
mov
popa
call
or
hlt
xchg
and
hlt
sub
pop
jae
movsl
fistpl
inc
xor
xchg
ret
enter
sbb
jo
jp
sub
jns
fisubrl
scas
mov
andl
sbb
adc
cltd
cmp
scas
mov
iret
add
mov
in
out
mov
and
cli
enter
nop
add
movsb
aam
in
je
add
int
mov
mov
movsl
stos
pop
outsl
sub
scas
outsb
repnz
pusha
and
xchg
add
push
leave
sub
movups
push
adcb
cmp
sbb
cmpb
pop
lea
and
int
loopne
and
mov
push
loope
push
int
outsb
test
icebp
jmp
jle
jge
pop
add
mov
addr16
notb
push
cmc
dec
icebp
sarb
lret
rolb
movsb
xor
dec
outsb
inc
insb
jmp
stos
fistl
lods
xor
jmp
mov
and
cmpb
push
inc
mov
inc
pushl
add
push
addr16
movb
xor
dec
xor
xlat
lahf
dec
pop
or
cmp
cmp
adc
fs
pusha
push
inc
xchg
pop
push
xchg
xchg
add
sub
in
mov
mov
xor
jno
sbb
jmp
inc
cmp
icebp
lods
das
stc
inc
sti
inc
or
popa
sbb
adc
add
mov
aaa
dec
cmp
das
cmpb
sub
jns
pop
mov
out
pop
sbb
pop
add
jne
mov
cmpsb
pushf
mov
sarl
icebp
lcall
cltd
mov
dec
imulb
pop
and
inc
sub
insl
dec
cltd
daa
inc
testb
mov
outsl
add
pop
xchg
xchg
sti
adc
xchg
gs
sbb
loop
mov
dec
pop
js
and
dec
mov
mov
std
cmp
add
push
sarb
lods
adc
nop
mov
sbb
shlb
insb
lock
lea
jae
mov
dec
in
cwtl
xor
sub
jp
jp
aam
and
inc
mov
std
in
out
xor
rcr
call
mov
jns
push
fldenv
movsb
and
add
call
jmp
fdivrs
xor
sbb
paddw
push
cmp
shl
mov
inc
pop
jp
scas
icebp
insl
cmp
inc
mov
shrl
xchg
pushf
dec
pop
mov
jbe
pop
imul
data16
insb
aas
sbb
pop
push
adc
xchg
mov
lods
nopl
adc
inc
loopne
sbb
or
dec
push
jmp
pop
or
or
sbb
gs
shlb
into
cmp
es
jbe
mov
dec
call
or
das
mov
out
push
loop
daa
clc
stos
cli
fsub
add
dec
repz
test
je
out
mov
adc
mov
rcrl
mov
mov
push
xchg
mov
jg
in
lret
pop
inc
in
jo
dec
inc
add
adc
dec
push
jae
aaa
or
out
stc
push
mov
ds
mov
mov
mov
push
enter
test
xchg
mov
hlt
jne
xchg
call
add
xchg
mov
test
mov
pusha
ret
add
mov
lods
insb
pushf
cltd
dec
aas
test
ret
lods
clc
jne
icebp
call
les
lahf
add
ret
push
int
mov
dec
cmp
sbb
add
bound
or
add
lahf
mov
push
out
jmp
das
out
negb
inc
xor
xor
rorl
mov
cli
sbb
cmp
into
inc
in
cmpsl
xchg
repnz
lret
xchg
insl
add
cs
mov
sbb
jno
mov
hlt
fldenv
sub
fdivp
movsb
mov
in
cmpsl
mov
sbb
adc
mov
int
repnz
mov
sub
cmc
repnz
aaa
call
addr16
and
inc
mov
hlt
hlt
cs
mov
lret
sub
jecxz
fcmovb
jg
inc
inc
xchg
in
mov
jp
push
pop
icebp
mulb
js
pop
adc
nop
mov
jmp
sbb
shrb
leave
stos
stos
fstl
div
xor
xor
cltd
mov
jg
movsl
fucomi
std
jge
sbb
aam
addr16
fnsave
cmp
loopne
xor
xchg
pop
loope
xchg
push
negb
imul
sbb
into
mov
mov
in
jbe
mov
jne
ja
and
inc
leave
pop
fwait
mov
fildll
or
test
out
lret
sub
loope
or
mov
xchg
in
push
arpl
pusha
xchg
andb
cmp
mov
mov
mov
mov
jmp
scas
xchg
push
push
fmuls
push
mov
in
add
leave
pusha
fldenv
mov
test
sbb
movsb
mov
xchg
or
xor
xor
or
xchg
adc
push
push
inc
inc
xchg
sub
pop
stos
hlt
add
sti
or
sub
mov
subb
pop
mov
mov
mov
jg
mov
popa
pop
add
fcmovu
cli
cmp
test
shrb
stos
sahf
icebp
mul
inc
js
sub
xor
mov
loop
out
ret
pusha
fdiv
pavgw
stos
inc
sub
dec
outsb
and
test
dec
rcrl
pop
mov
les
xor
ficoms
lret
movsl
xchg
stc
ret
in
iret
out
popf
scas
push
inc
shll
push
stos
lahf
mov
push
enter
cwtl
cwtl
outsb
xor
lcall
lahf
mov
pop
add
pop
fsubl
sbb
das
fistps
mov
cmc
test
and
fwait
jecxz
dec
mov
fnstenv
adc
hlt
inc
jge
mov
lcall
mov
push
or
mov
mov
mov
add
data16
outsb
jbe
sbb
pop
les
inc
data16
xchg
add
sbb
add
dec
lock
sbb
pop
sub
cmp
jns
cwtl
mov
sarb
daa
push
mov
sbb
js
popf
fwait
out
rorb
pop
hlt
call
clc
out
pop
pushl
loopne
shrb
pop
aaa
cmpsb
cmp
xor
add
test
xchg
fldcw
test
pop
push
fldt
in
mov
jno
pop
adc
jp
ds
ret
dec
cwtl
out
xor
movsl
scas
cmp
hlt
ret
xor
and
shrb
cld
std
inc
cltd
or
sbb
jnp
add
in
pop
add
lret
pop
xchg
and
jge
xchg
lea
sbbb
stos
repnz
adc
xlat
or
cmp
pop
cmp
mov
push
cmp
jne
arpl
cmp
fdivl
jmp
jb
jne
imul
mov
cld
subl
adc
jl
and
out
push
out
mov
fistpll
jo
push
add
cmpsl
loopne
mov
aam
inc
faddp
loope
repnz
fwait
scas
fistl
sub
and
loop
jecxz
adc
pop
add
mov
dec
in
dec
adc
pop
aas
jae
inc
mov
std
jnp
jp
lock
jo
in
add
fidivrl
or
cltd
inc
mov
aam
je
mov
bound
sub
inc
pop
adc
or
lock
dec
popa
add
js
das
les
mov
sarl
mov
mov
cmp
fnstsw
mov
jge
mov
jo
inc
adc
mov
sahf
bound
loop
loopne
shl
icebp
mov
cltd
mov
dec
fsincos
mov
cwtl
pushf
mov
mov
test
dec
mov
sbb
jb
xor
xchg
imul
push
inc
pop
mov
and
test
js
add
or
xchg
xchg
cmc
dec
push
xor
or
mov
mov
pop
stos
jle
mov
mov
mov
xor
mov
loopne
push
outsb
das
cmp
bound
sub
xchg
bound
inc
mov
loope
test
inc
ret
ja
xor
cmp
fisubl
xchg
clc
jmp
fucomp
xchg
fldenv
jg
clc
shrb
jge
push
xchg
test
out
pop
scas
or
push
lds
add
pop
jl
aaa
es
frstor
popa
fdivrl
fists
push
xchg
pop
clc
dec
test
shlb
mov
lahf
xor
imul
stc
iret
lods
jno
sub
neg
sbb
cs
test
cmp
sbb
jcxz,pt
mov
les
cmp
push
out
aaa
push
das
jne
adc
into
scas
and
aam
pop
inc
test
add
je
pop
or
cmp
das
jmp
jno
sub
ljmp
fwait
inc
mov
cmp
sub
xchg
push
ds
mov
lcall
cmc
nop
or
inc
je
cmc
sub
adc
or
stos
xchg
nop
fisttpll
sbbl
add
nop
push
and
mov
sub
and
loope
das
das
sbb
jb
cmp
out
and
movsl
test
pushf
je
insb
fnsave
shrb
pop
es
jne
pop
inc
push
sub
jmp
frstor
and
dec
pop
cwtl
das
sub
and
mov
jle
mov
out
mov
lods
cmpsw
in
or
or
push
xchg
pop
in
dec
fsubr
jb
pop
or
jl
loope
sbb
xchg
std
ljmp
mov
push
add
add
ret
dec
scas
push
push
in
frstor
int
sub
xor
add
jge
mov
dec
xchg
out
and
pop
pop
cmp
enter
mov
sbbb
sti
lcall
fldt
mov
dec
lds
dec
test
jo
dec
sub
dec
or
fimull
bound
add
aas
fwait
lds
daa
jg
lahf
jl
int
and
push
loopne
add
xchg
cwtl
xor
lcall
mov
xchg
imul
xor
jne
adc
mov
pusha
lea
dec
test
adc
jmp
imulb
pop
jbe
mov
fyl2x
inc
or
stos
add
jae
popf
mov
jnp
movsl
jb
fdivl
arpl
nop
lret
or
cwtl
mov
mov
or
sub
jno
sub
pop
sbb
lret
lods
sbb
in
xor
pop
dec
std
sub
xchg
fcmovnu
leave
mov
jbe
fdivr
dec
mov
fistl
mov
push
out
sub
pop
aad
xchg
inc
mov
push
push
xor
ss
xor
imul
ret
cmp
pop
notl
sub
sti
adc
sub
mov
in
movsl
mov
and
scas
xor
sti
and
addr16
xor
xor
and
sbb
pop
nop
dec
in
data16
and
dec
inc
das
pop
enter
out
xchg
insb
mov
sub
lret
mov
ss
in
repnz
icebp
lcall
cmp
pop
in
out
jl
aam
lret
fidivl
hlt
dec
mov
add
jmp
pop
fidivs
lar
pop
xchg
pusha
cmp
jns
fistl
mov
sbb
imul
scas
adc
xchg
add
push
sbb
mov
dec
jge
out
inc
lds
pop
fmuls
pop
dec
pop
pop
insl
push
in
lcall
test
xchg
aad
hlt
push
jmp
lcall
cmc
jmp
xor
das
lods
sbbb
and
insb
in
push
stos
or
daa
and
jns
adcl
out
fsubrs
stos
dec
pop
scas
dec
push
adc
iret
fidivl
ficoms
dec
push
push
or
or
jp,pt
arpl
stos
jae
dec
and
mov
push
aad
mov
mov
adc
aad
das
loopne
fldl
add
jo
stos
or
and
and
out
repz
shlb
in
lret
sub
ja
mov
inc
sbb
jne
jne
iret
clc
movsb
jecxz
repnz
std
test
adc
jno
cwtl
push
movsl
outsl
mov
lret
xchg
and
jmp
jb
adc
dec
sbb
inc
imul
push
popa
inc
mov
mov
mov
cmp
movsl
xchg
jb
aas
popf
cmp
int3
rorl
inc
aad
fldcw
test
pop
loop
and
mov
ficompl
enter
inc
push
jnp,pn
xor
inc
ja
rol
push
add
xchg
sti
dec
aas
dec
aam
jne
mov
push
pop
test
ljmp
sub
mov
loope
cmp
xor
mov
rcl
mov
rcll
cmc
pop
sbbl
or
push
sti
jecxz
mov
lahf
popf
and
popa
ljmp
pop
scas
fs
leave
es
and
ja
movsb
cmpsl
scas
rcrl
dec
cltd
movsl
sbb
test
add
inc
pusha
lea
adc
adc
clc
mov
mull
dec
out
std
dec
arpl
into
fwait
rclb
add
inc
loop,pn
lock
or
dec
insl
cld
notl
outsl
jns
fcmovb
jo
jp
mov
sbb
xlat
psadbw
push
jnp
push
mov
insl
add
add
pop
ja
lock
push
aaa
test
adc
add
enter
push
add
or
inc
mull
cmc
mov
subb
js
and
popf
insl
sub
inc
lret
xchg
movsb
pop
pop
cmc
inc
lahf
out
into
or
lea
les
xor
pop
sbb
xchg
jb
cltd
or
mov
lcall
sub
repz
dec
repz
mov
out
jnp
jl
pop
subb
test
inc
jl
xor
outsl
aas
test
pop
inc
add
jns
scas
ljmp
cmpl
pop
cmp
stos
add
and
add
pop
ror
mov
repnz
or
outsl
lods
jp
adcl
fs
xchg
or
test
mulb
out
ja
cmp
sbb
or
jle
movsl
push
movsb
adc
pop
xlat
aas
out
push
cltd
cmpsl
fs
iret
scas
push
or
sahf
test
aas
insb
mov
and
dec
mov
xchg
test
out
sbb
cmpl
cmp
outsb
and
pop
mov
mov
shrl
outsl
or
rorb
leave
sub
roll
adc
sti
mov
jne
daa
clc
stc
loopne
mov
imul
push
cmp
scas
lret
cwtl
or
lea
clc
mov
call
dec
push
xor
ret
jno
jae
or
and
push
adc
outsb
pop
mov
xchg
addr16
sbbl
mov
pop
or
xor
jne
xlat
xlat
push
sbb
outsb
je
jb
cmp
mov
lret
xor
movsl
js
stos
orl
push
sub
stos
popf
xchg
fisubl
cmp
insl
cmp
cs
xchg
inc
cmp
cs
inc
jns
mov
lret
xor
push
lahf
mov
int
loope
sub
xor
and
mov
cmp
dec
inc
subb
cmp
adc
test
ljmp
repnz
xor
out
add
cmpsb
rolb
xor
stos
pusha
stc
mov
or
fadds
pop
and
mov
dec
lcall
xlat
jnp
pop
cs
stc
push
cmp
lock
dec
test
xor
push
or
dec
jge
shlb
pop
add
or
in
shrb
push
mov
mov
ja
adc
xchg
imul
jb
sub
fs
xlat
ss
and
ljmp
enter
inc
push
mov
popf
sub
jb
xchg
ds
loope
jns
and
and
sbb
push
dec
jbe
lret
lret
lret
loop
sbb
loopne
aaa
js
xlat
jp
push
nop
sbb
lcall
int3
fstpt
jb
adc
push
or
ror
adc
popf
sub
int3
mov
lods
xor
xor
mov
fnsave
rcrl
ret
fnop
test
mov
mov
aas
sahf
ret
xchg
movsb
pop
push
fisubs
stos
pop
in
repz
shll
sub
bound
adc
fucomip
jmp
sti
loope
inc
pop
in
lods
rcll
test
scas
gs
out
int
repnz
push
sbb
mov
xchg
jge
loope
jno
fidivrl
hlt
loop
mov
repz
mov
jbe
mov
xchg
mov
ds
and
movl
pause
xchg
xorl
cwtl
test
and
pop
xchg
sub
or
das
push
sbb
mov
hlt
adc
test
adc
fsts
mov
mov
leave
cmp
imul
adc
cltd
mov
pop
pushf
loopne
arpl
loope
and
inc
jl
push
loope
lahf
xor
sub
lds
push
enter
das
pushl
sbb
cmp
mov
jecxz
cld
sub
xor
pop
shr
add
bswap
mov
and
push
lods
cld
adc
or
decl
cli
rclb
or
mov
leave
ljmp
cmp
sbb
into
xchg
out
add
gs
adc
stos
test
push
imul
or
adc
pushf
push
sar
sahf
or
mov
fistpl
pop
jg
xchg
dec
insb
jo
or
xorl
or
mov
xlat
sub
out
stc
pop
test
sbb
jbe
popf
dec
loopne
add
repz
loope
add
fisttpl
out
out
pushf
lds
lahf
scas
pop
sbb
inc
xlat
mul
rcrl
fwait
or
aaa
jmp
fnstsw
in
jnp
or
lock
int3
idiv
xchg
pop
lahf
add
pop
jbe
sbb
out
nop
adc
add
mov
js
mov
int3
mov
fcoml
mov
cwtl
xlat
push
orb
shl
inc
inc
sbb
in
outsb
pop
repnz
out
lahf
imul
cli
adc
leave
gs
test
xor
adc
jmp
je
inc
add
cmc
mov
test
test
jbe
addr16
mov
inc
add
or
mov
aad
sub
mov
xor
push
or
xchg
testl
mov
fs
jle
cmp
pop
repnz
pop
leave
lret
pop
add
push
stos
or
cmp
rol
cmc
lock
push
in
cli
mov
call
aas
ss
sub
lds
lret
mov
and
mov
out
or
jmp
push
xchg
mov
aad
popa
aad
outsb
mov
jge
mov
or
jl
xor
test
lret
xchg
or
fwait
dec
inc
dec
loopne
mov
out
std
sub
inc
adc
pusha
xchg
jb
inc
push
stos
fidivrs
jg
jmp
push
mov
repnz
mov
mov
push
mull
push
xchg
adc
stc
shl
test
push
in
inc
in
out
push
cs
ja
add
push
cs
into
int
stos
push
shl
lretw
mov
mov
outsl
push
mov
sti
testb
mov
mov
lret
cmp
mov
pop
and
pop
cld
push
xor
inc
repz
stos
sbb
xlat
fs
cmp
clc
repnz
pop
pop
test
mov
cmpsl
call
fwait
jne
pop
dec
out
push
aam
int
shr
dec
popa
mov
mov
mov
dec
jle
mov
lea
nop
mov
sub
adc
and
jmp
cmp
xor
sbb
mov
pop
test
test
out
out
dec
jno
arpl
push
add
dec
ds
cmp
jmp
sti
jnp
dec
add
xor
lret
xor
mov
pop
movsl
fisttps
inc
jae
sbb
mov
leave
mov
fdivrs
adc
mov
scas
les
inc
fsubs
adc
loopne
lods
add
stos
and
outsl
lret
aam
pop
dec
out
mov
xor
xchg
push
pop
push
insl
dec
ret
out
stc
rorl
xor
sbb
pop
test
cmp
inc
rorb
scas
push
mov
repnz
push
mov
xchg
in
pop
bnd
fdivrp
popa
rorb
and
out
inc
dec
imul
je
and
pop
icebp
sub
xor
add
test
out
mov
icebp
jmp
fdivl
push
dec
pop
xchg
aam
aad
scas
and
sub
xlat
in
push
repnz
scas
movsl
mov
ret
mov
mov
movl
sti
mov
sti
mov
mov
dec
or
in
jnp
add
bound
fwait
push
cmpsb
mov
aaa
js
mov
in
add
and
add
inc
cmpsb
jmp
mov
dec
gs
or
cmpsl
je
out
xchg
icebp
jno
test
pop
inc
adc
dec
mov
outsb
mov
xor
cmp
mov
call
cltd
outsl
std
iret
sub
je
xchg
into
ja
sbb
xchg
fdivs
test
lahf
jo
hlt
inc
fmull
or
pushf
std
adc
cwtl
mov
hlt
adc
pusha
rcrb
jle
bound
jp
cmp
mov
movsb
hlt
inc
cld
and
call
lcall
dec
inc
inc
pop
hlt
test
mov
in
push
mov
out
mov
sahf
ss
sub
sbb
mov
fcomip
orb
push
sub
pushf
ds
bound
outsl
cmpsl
xor
orl
daa
cmc
pop
mov
or
mov
add
mov
cmp
xchg
xchg
fists
dec
push
push
pop
mov
sbb
jne
leave
pop
add
sub
call
mov
inc
mov
jae
push
ss
imulb
faddl
in
and
movsb
insb
mov
sub
in
pop
push
jnp
frstor
cmp
je
pop
cs
mov
shrb
mov
adc
xor
jnp
out
testb
daa
std
pusha
clc
mov
sbb
mov
mov
jb
lods
dec
fdivrl
mov
cmp
push
mov
mov
adc
cltd
push
insb
push
fildl
jae,pn
inc
scas
inc
push
je
scas
xchg
push
js
inc
pop
fidivrs
push
fldl
in
sub
jbe
in
stos
add
lcall
push
inc
sbbb
mulb
inc
int3
ret
sub
mov
pop
add
test
pusha
adc
pop
test
es
cmp
inc
adc
out
jns
jns
js
pop
lods
xor
cmp
jle
mov
ss
cmpsb
jge
lcall
sti
pop
mov
jb
out
aaa
inc
mov
mov
loope
xor
inc
add
push
mov
divb
xor
shll
test
aas
mov
jecxz
sbb
addr16
sbbb
adc
xchg
push
mov
cltd
or
xchg
inc
add
sub
cmc
sbb
hlt
jge
jle
cmc
push
cltd
stc
inc
inc
scas
sbb
data16
leave
cmpsb
std
loop
mov
dec
jge
jp
pop
pop
adc
int
aaa
lcall
popf
repz
jne
cmp
shr
add
hlt
test
xchg
jnp
loopne
pop
sahf
repnz
rclb
dec
repz
or
add
arpl
pop
pop
leave
add
jge
lret
or
iret
lock
aad
pop
mov
pop
cwtl
inc
decb
push
mov
ror
mov
stos
rolb
mov
or
lret
jo
xor
popf
push
xor
pusha
aad
std
popf
clc
dec
jne
mov
ret
call
pop
push
cmpsb
sub
mov
push
pop
push
jne
cmp
sub
fldl
jo
jno
insl
xor
mov
mov
pop
subl
jnp
inc
cmp
out
int
pop
fdivs
xor
mov
rorl
sub
enter
jne
ljmp
ljmp
or
mov
dec
ret
daa
cltd
push
repz
jp
mov
inc
jp
in
lahf
push
jb
sbb
cmp
ds
push
mov
insb
shll
lahf
and
daa
lret
mov
add
cmpsl
fbstp
test
sbb
sbb
or
aam
in
psubusb
mov
imulb
inc
cmp
fsub
mov
inc
pop
imul
ss
xchg
mov
ja
cs
jle
xchg
jno
popf
or
iret
mov
fwait
daa
ret
mov
fisubrl
xchg
pop
or
mov
in
sbb
imul
insl
pop
push
push
mov
wrmsr
or
or
lods
sbb
push
add
adc
fimuls
adc
mov
repz
jae
mov
mov
mov
fsubl
addb
cmpsb
shrb
mov
inc
inc
xor
xchg
or
aad
dec
jns
add
jl
jno
sahf
mov
lods
test
inc
std
subb
inc
mov
push
add
inc
out
xchg
mov
js
std
adc
cmp
out
adc
and
pop
sti
fsts
or
imul
popa
arpl
push
js
and
movsb
pop
je
dec
fbld
int
dec
das
js
cmpsl
xor
jmp
cmp
dec
pop
xorb
sbb
cmp
rorl
mov
sbb
ja
mov
jno
rol
jg
cli
sbb
int
movb
stos
dec
ja
scas
imul
prefetch
xchg
jb
nop
push
push
scas
test
sub
xchg
into
fbld
dec
lea
mov
adc
rol
popa
inc
xchg
pop
das
daa
imull
ss
or
jl
push
mov
divb
xor
es
pop
pop
test
jge
inc
push
imul
aaa
pop
cmc
xor
shlb
add
xchg
dec
sbb
jmp
movsl
sub
lea
xchg
neg
or
dec
stc
dec
addr16
xor
notl
aam
jbe
and
xor
test
mov
fimuls
sub
push
lahf
push
mov
lock
push
arpl
xchg
lds
mov
mov
sub
imul
dec
pop
rcrl
mov
out
inc
shlb
jmp
outsb
popl
cmp
stos
cli
lahf
sarb
mov
jge
daa
sbb
jo
repz
sub
aaa
pop
andl
dec
stos
lock
sti
or
push
dec
das
jae
sub
mov
pushf
or
jbe
pop
movb
stc
mov
movsl
mov
or
iret
in
shl
and
xchg
push
mov
cmpsl
jp
pop
pop
out
stos
pop
hlt
and
and
aam
fstp
pop
sub
rcr
enter
popf
push
push
mov
pop
imul
push
cli
xchg
mov
jmp
lcall
movsb
ja
add
data16
sti
push
or
sbb
xchg
mov
sub
or
mov
jge
and
cmpsl
adc
daa
or
scas
lock
in
jp
pop
stos
data16
rolb
jae
inc
cmpsb
in
mov
jg
cmp
dec
lods
xor
sbb
sub
lret
loope
in
adc
xchg
popa
imul
inc
ljmp
adc
pop
add
or
xor
adc
bound
sub
adc
mov
push
or
or
stc
pop
loop
out
ret
aad
aam
adc
sarb
lcall
inc
jae
mov
sbb
xor
lods
adc
xchg
packuswb
pop
mov
jo
adc
lods
in
mov
dec
mov
bound
es
push
iret
adcb
inc
mov
ds
pop
or
insb
sbb
rcrb
test
pop
pushl
dec
mov
pop
xchg
dec
shll
pop
adc
notl
add
mov
mov
push
repnz
sbb
pop
jb
sub
jbe
cmp
pop
movsb
lea
add
loope
orb
mov
add
push
shrl
clc
push
mov
mov
sub
call
sub
sbb
or
and
cmpsl
iret
mov
data16
aaa
add
inc
jg
dec
dec
orl
mov
std
movsl
mov
push
scas
add
dec
add
adc
in
aas
insl
jnp
add
push
cwtl
movsb
rclb
cmp
cmp
insl
mov
notl
adc
mov
mov
adc
lcall
cmp
inc
daa
lods
pop
or
mov
cmpl
shll
mov
xor
ficomps
test
mov
or
inc
das
sub
pop
jl
lcall
outsl
sbb
adc
mov
mov
pop
test
jnp
je
je
or
sbb
ljmp
pop
xchg
in
lcall
fsubl
add
push
push
jg
inc
js
mov
xchg
and
dec
mov
aam
adc
popa
popa
std
add
das
push
add
loopne
jge
jne
leave
mov
outsl
lcall
push
test
adc
mov
scas
cmp
pushf
and
ja
aaa
sbb
les
insl
call
stc
shr
xor
lds
imul
xchg
movsb
sub
std
sub
fprem1
cmp
dec
idiv
imul
xor
adc
inc
xchg
imul
hlt
push
add
jg
pop
in
mov
or
xchg
adc
pop
les
inc
cmpsb
lock
loop
repz
mov
jecxz
jb
es
xlat
imul
xchg
xor
dec
cld
jecxz
leave
ret
jnp
push
outsb
mov
int
mov
clc
sarl
inc
or
dec
adc
int3
out
out
mov
inc
orb
mov
mov
jne
mov
push
roll
test
pop
fiaddl
leave
shlb
fsub
jbe
daa
faddl
dec
roll
jl
inc
dec
nop
cwtl
inc
test
mov
mov
jno
jle
inc
add
js
scas
add
lock
or
sahf
xchg
pxor
add
lahf
push
ror
xchg
out
cmp
call
out
and
dec
push
mov
test
sub
add
jl
add
js
push
into
jle
and
xor
xchg
push
adc
in
inc
aas
mov
push
shlb
add
mov
ljmp
add
imul
or
test
or
or
xchg
push
shlb
adcl
js
inc
sub
js
ljmp
scas
fstps
sbb
mov
and
lret
scas
pop
pop
push
sbb
sbb
push
loopne
ss
int
arpl
cmpb
mov
das
mov
int
xchg
imul
dec
cwtl
adc
sbb
lret
push
cmpsl
mov
scas
mov
lock
je
cmp
lock
jno
aaa
push
gs
mov
jb
jmp
addl
insb
adc
jb
dec
rol
mov
les
mov
jp
sub
jb
adc
mov
fmull
push
insb
xchg
in
mov
dec
int3
jo
in
xchg
adc
add
mov
fsubp
jmp
pop
push
mov
adc
dec
sbb
push
fdiv
out
int3
push
loope
xchg
push
sbbl
nop
mov
or
and
mov
mov
int
lret
lret
fstpl
es
ret
into
dec
test
aaa
jecxz
sarl
jns
lock
lea
cmp
dec
xchg
cli
jo
mov
mov
data16
xchg
or
cwtl
xchg
cs
test
mov
aad
fs
jmp
adc
loopne
pop
shl
ja
repnz
inc
jbe
xlat
sub
cmp
push
dec
mov
push
add
cli
test
inc
fisubrs
lret
leave
jge
lods
jl
mov
out
mov
push
push
jae
cmovne
js
mov
repnz
shrb
jl
mov
push
ss
mov
dec
shlb
repnz
shlb
faddl
inc
mov
lahf
lret
and
jl
sbb
push
ret
out
jb
lret
jl
adc
ret
sbb
rorb
xor
ss
sbb
xor
jae
mov
test
add
in
inc
insb
imul
mov
in
mov
dec
mov
mov
call
sbb
fidivrs
movl
mov
sbb
push
adc
push
aaa
loopne
mov
pop
dec
sbb
fidivl
cld
sbb
xor
div
outsb
fwait
lahf
movsb
sbb
mov
gs
andb
dec
or
lret
pop
rorb
lcall
pusha
mov
out
add
outsl
mov
and
dec
sub
or
pop
inc
shlb
fdivr
add
outsl
push
mov
add
dec
lcall
stos
xchg
cld
sarb
popf
hlt
cmc
pop
adc
jb
dec
mov
lods
arpl
or
mov
jbe
std
mov
sar
push
inc
mov
adc
fstpt
popf
dec
pusha
add
fstpt
push
or
into
jbe
jg
in
push
ret
xchg
lcall
adc
jo
test
xchg
hlt
daa
sub
lret
mov
sbb
mov
in
mov
mov
out
stos
jnp
inc
ret
cmp
lds
mov
push
notl
sub
sub
mov
push
mov
dec
or
das
mov
test
int
mov
xor
inc
sub
mov
mov
ja
das
inc
pop
mov
loop
data16
lods
mov
bound
dec
mov
fcomp
mov
mov
mov
int
test
jns
push
andl
std
imulb
imul
ja
fcmovbe
mov
jbe
push
loopne
lret
jne
push
mov
xor
addl
adc
sub
sbb
fisttps
fmuls
and
mov
add
pop
sbb
xchg
adc
ja
daa
mov
pop
mov
and
cmp
lock
sbb
pusha
lods
and
into
jae
insl
mov
lock
add
cmp
xchg
lds
push
dec
xor
ret
ret
mov
nopl
push
mull
out
adc
cmp
adc
daa
push
bound
cwtl
mov
popf
je
mov
movsl
jno
arpl
fiadds
and
lret
negl
cmp
sahf
out
popf
dec
xchg
outsl
lahf
pushl
fdivs
aam
ljmp
dec
rcl
cmpb
ja
xor
add
lods
pop
pusha
sub
push
inc
pop
sbb
stos
sbb
subl
dec
pop
push
mov
push
sbb
xor
jne
rolb
int
imul
repz
sahf
es
pop
sub
fwait
mov
mov
push
stc
test
or
aaa
in
cmp
imul
add
mov
xchg
mov
and
and
sbb
out
inc
adc
insl
fadds
push
cld
cmp
mov
stos
xchg
hlt
ds
fstpt
or
es
repz
cmc
pop
dec
jmp
jne
or
inc
ljmp
mov
in
or
add
mov
lcall
aad
fwait
and
int3
inc
repnz
lods
rcl
mov
adc
inc
xchg
faddl
aad
enter
ret
sar
mov
sub
in
add
add
loopne
jmp
mov
notl
adc
jl
insb
mov
mov
insl
ret
adc
inc
sbb
dec
mov
test
push
xchg
mov
mov
jg
insl
test
mov
lock
pushf
and
mov
test
imul
jecxz
inc
mov
mov
xor
lcall
lcall
cmp
xor
dec
addr16
mov
daa
inc
in
cmp
outsb
pop
das
xor
aad
sub
jns
cwtl
push
aas
mov
push
jne
mov
mov
xor
jb
push
inc
inc
loopne
fcmovb
cmp
pop
push
pop
fcoml
idiv
imul
iret
stos
xchg
dec
cmp
dec
pop
pop
pop
pop
xor
inc
xor
jecxz
insb
inc
add
nop
sbb
add
pop
leave
inc
sarl
cltd
sub
into
jmp
mov
pop
out
int3
push
pop
push
inc
cmp
mov
shll
shr
cli
xor
insb
mov
aaa
enter
shl
adc
hlt
hlt
push
add
insl
int
add
pop
cmp
and
pop
repz
cmpsl
leave
int
adc
mov
roll
jle
movsl
mov
arpl
pop
inc
mov
mov
std
push
push
mov
imul
cmpxchg8b
lret
xorb
ljmp
mov
iret
js
loopne
push
adc
jmp
xlat
dec
sbb
inc
stos
into
cmpsb
add
xlat
inc
imul
fs
in
jns
orb
mov
push
and
imul
adc
jns
aas
mov
fdivs
xchg
jl
mov
push
int3
jae
rol
add
ljmp
jecxz
incl
sbb
incb
dec
call
sub
mov
dec
mov
or
js
bound
das
and
shrb
gs
leave
aaa
sbb
stc
out
sbb
mov
iret
push
xor
add
cmpsl
xchg
sbb
in
pop
testb
add
sub
test
test
push
pop
dec
call
aad
inc
pop
xchg
jnp
xor
jae
sbb
divl
data16
das
jne
insl
call
xchg
imul
fxch
cmc
pop
dec
mov
push
cmp
loop
xor
mov
std
mov
lods
xchg
inc
jb
test
xor
cmp
pop
dec
mov
push
fildl
adc
sub
rorb
xchg
push
jo
loop
dec
add
aam
cs
mov
push
in
fimull
xchg
aas
pusha
xor
xchg
test
cwtl
mov
cmp
test
dec
cs
sub
aad
xchg
inc
fldcw
sub
movsl
cmp
or
sub
stc
jb
mov
adc
push
push
js
hlt
imul
sbb
push
and
mov
scas
jmp
scas
mov
stc
and
addr16
or
inc
decb
out
leave
adc
insb
mov
bound
out
addr16
pop
xchg
jge
jno
rcrb
fcmovb
jns
mov
mov
xor
mov
push
sbb
dec
mov
pop
ret
lods
mov
sub
and
aam
inc
or
pop
xor
mov
pop
test
int
ljmp
stos
jb
fsubs
stc
and
lret
xchg
sub
nop
mov
aam
or
shll
ret
xchg
ljmp
mov
pop
dec
ja
mov
in
test
movsl
sbb
and
mov
or
dec
fmulp
gs
stos
arpl
add
andl
cmp
pop
addr16
or
ljmp
and
cld
mov
bound
rcr
loop
mov
mov
dec
fisubs
fs
mov
mov
shlb
fldl
call
xor
adc
mov
data16
pop
incb
popa
sarl
call
in
lret
mov
sahf
sbb
repnz
adc
cmp
xor
ds
cmp
subl
fstpl
xchg
pop
xchg
xchg
popl
adc
push
add
repnz
aam
pop
sbb
mov
leave
loope
sbb
stos
push
mov
sub
into
mov
inc
addr16
sahf
dec
adc
xchg
adc
testl
push
fnstsw
push
sbb
mov
sub
or
adc
mov
and
push
clc
mov
jmp
mov
sub
xchg
idivl
loope
push
cwtl
jno
inc
leave
ret
mov
int
pop
xor
les
mov
gs
jle
insl
das
pusha
inc
xchg
sub
loop
xor
arpl
fistps
sub
ss
fdivs
mov
xchg
xor
xor
popf
sub
dec
sub
xlat
and
sbb
aam
mov
cmp
or
lret
pop
out
arpl
push
mov
push
mov
fsubrp
sub
and
ret
call
popf
push
cmp
ss
inc
outsb
pop
ret
push
arpl
nop
ficoml
xor
loop
cmp
inc
imul
jecxz
adc
call
pop
sub
stos
test
mov
inc
jge
xchg
insl
pop
add
fmull
sub
push
xor
add
cmpsb
mov
fwait
inc
sbb
test
dec
mull
push
inc
and
mov
mov
push
bound
mov
mov
pop
mov
scas
sbb
in
mov
xlat
jl
sti
jne
pop
inc
dec
sbb
icebp
scas
push
add
test
int
das
or
andl
lret
inc
adc
das
outsb
sarl
cld
cmp
lock
negl
pop
push
fcmovnu
mov
xchg
jl
addr16
fldenv
sbb
bound
fsub
xchg
push
pop
int
loopne
clc
loope
lods
sub
fwait
loop
pop
mov
scas
insl
or
pop
cwtl
enter
mov
jne
push
aaa
jle
loopne
js
stos
data16
add
xor
icebp
js
adc
add
into
mov
xchg
dec
popf
popf
dec
cmp
lods
movsl
ljmp
int
mov
inc
cs
push
pop
cmp
shlb
inc
mov
cs
dec
push
pop
or
fsubr
jo
cmp
rcrl
mov
jo
cmp
test
notl
iret
stos
stos
sub
mov
push
dec
pop
jmp
in
jb
movsb
loop
mov
dec
in
fcoms
fwait
addr16
shrl
sub
lahf
aas
and
repnz
out
jg
movsl
mov
cmp
cmp
out
sbb
cmp
scas
ret
mov
push
adc
std
add
sbb
adc
dec
out
xor
out
and
gs
aas
sahf
pop
xlat
fwait
push
cmp
xor
pop
push
cmpsl
outsl
push
adc
cld
xor
ljmp
dec
cs
xor
sub
xor
mov
sub
lock
pop
ss
popf
fisubrl
xor
jmp
jbe
cmp
mov
push
inc
adc
jnp
xchg
and
test
sub
pop
jecxz
sub
movsl
cmp
push
add
arpl
mov
adc
mov
mov
push
mov
gs
call
or
inc
and
jge
dec
and
mov
push
test
jl
push
imul
cmc
in
fnstenv
fadd
jb
ja
shlb
mov
mov
dec
fwait
pop
ljmp
data16
xchg
adc
mov
push
sub
adc
dec
fs
cmpsl
pop
jle
shll
lods
pop
push
test
xchg
fldl
or
mov
arpl
movsb
imul
inc
or
out
ret
loopne
test
push
lods
imul
mov
mov
pusha
dec
mov
cld
add
and
and
pop
int
data16
rclb
mov
adc
pop
bound
ret
icebp
inc
inc
and
jb
inc
subb
in
sbb
popf
sahf
lods
push
push
sbb
xchg
lcall
jo
add
jnp
adc
mov
add
mov
xchg
mov
xchg
dec
xchg
jb
sub
stc
ds
imul
imul
push
push
cmp
decl
jmpw
repnz
jmp
js
push
push
fisttpl
push
xorl
sbb
test
adc
push
jecxz
loop
sbb
sbb
adc
lret
mov
lret
leave
sbb
in
or
cmpsl
pop
int
sti
mov
mov
jo
aaa
inc
jno
sbb
dec
mov
out
pop
dec
dec
mov
ds
aaa
inc
inc
mov
fisubrs
mov
jg
mov
mov
aad
cmp
test
add
jae
es
insl
and
pop
mov
xor
mov
std
idivl
enter
push
push
mov
pop
adc
gs
outsb
dec
push
pop
mov
cmc
ret
pop
iret
sbb
push
mov
push
mov
arpl
cmp
adc
movl
dec
shrb
jnp
and
aas
jo
mov
jno
push
fsts
pusha
cmp
aaa
xor
xor
in
push
repnz
rorb
fcomps
aas
jmp
fdivrl
jnp
roll
sub
dec
insb
mov
icebp
loop
mov
pop
adc
inc
lret
inc
inc
cltd
mov
lods
fisttps
pop
dec
dec
xchg
xor
mov
loope
sbb
inc
push
fidivs
aas
mov
lock
ljmp
aam
sbb
aas
pop
jp
and
xorl
mov
sub
jb
das
adc
add
ret
pop
test
or
jb
push
mov
cltd
popw
xor
mov
adc
sbb
push
pop
and
clc
pop
cs
xor
shrl
jbe
hlt
sub
jg
fs
std
jg
jle
jne
xchg
jae
loope
and
jae
insl
mov
lods
cmp
nop
cmp
or
jb
push
inc
stos
and
dec
push
add
fstps
out
fisubl
xor
dec
mov
or
unpcklps
inc
nop
pop
xor
and
data16
xchg
clc
inc
push
icebp
stos
xchg
andl
push
mov
cmpsl
adc
data16
push
mov
lds
jns
imul
in
mov
xchg
gs
inc
mov
jnp
enter
push
divl
fsubr
mov
mov
pop
test
pop
leave
cmp
addr16
push
sahf
outsb
jns
loopne
pushf
push
cwtl
mov
sbb
popa
movsb
aam
sub
popa
mov
neg
mov
push
pop
mov
or
sbb
mov
out
loope
lret
xchg
mov
adc
mov
inc
mov
adc
ret
xchg
dec
negb
push
inc
add
lret
sbb
and
adc
mov
int
push
cli
out
xor
aam
outsb
add
inc
mov
mov
sti
stc
rcrl
push
adc
jae
cmpsb
lahf
mov
inc
sbb
and
pop
jbe
xchg
mov
sbb
loop
push
push
popf
cmp
std
in
ljmp
add
jg
fstpt
rclb
in
ss
and
icebp
sbb
adc
icebp
clc
cmp
mov
js
lahf
pop
insl
jns
push
shlb
shll
mov
mov
cmp
cmp
push
or
push
jns
in
pop
inc
imul
mov
insb
fstl
scas
shll
insb
lods
dec
clc
adc
and
mov
mov
hlt
bound
fldcw
imul
push
bound
subl
test
xchg
mov
pusha
push
pop
sbb
xlat
mov
jbe
filds
aam
sub
sbb
push
adc
push
popf
cwtl
xchg
test
pop
cs
inc
pop
cmp
subl
test
push
pop
lods
outsb
sub
orb
adc
les
stc
xor
mov
inc
data16
cmc
aas
xchg
mov
out
scas
shrl
mov
cli
mov
pusha
push
fcomip
movsl
pop
lahf
mov
je
inc
dec
and
add
loopne
cmp
in
int
xchg
dec
jl
inc
popf
dec
dec
dec
sarb
pop
xchg
push
dec
loopne
jge
push
js
into
sub
scas
dec
lret
pop
xor
mov
cmp
jnp
data16
xorb
inc
cmp
xchg
orl
dec
or
test
jne
repnz
pmaddwd
rcrb
push
xor
push
mov
jp
and
stos
mov
call
or
cmp
sahf
mov
insl
xor
push
lods
ja
dec
enter
or
sbb
mov
and
lock
or
push
push
inc
ds
inc
pop
and
arpl
int3
rorb
cmp
adc
and
add
subb
adc
fists
mov
push
jp
xchg
cmp
mov
push
and
nop
data16
sub
inc
das
jbe
mov
sti
push
mov
xor
mov
cli
pusha
insb
and
and
cmp
inc
jnp
mov
lods
pop
add
add
nop
pop
cmpsb
add
iret
inc
dec
cwtl
push
dec
xlat
add
xor
mov
lea
movsl
push
fwait
clc
les
push
jmp
pushw
and
loop
test
push
adc
xchg
rcl
ljmp
je
lods
insb
jp
xorb
jl
xchg
std
repnz
cmc
cld
xchg
add
icebp
xchg
add
test
mov
lcall
mov
xchg
cmp
dec
rcrb
into
jmp
adc
pop
jmp
fdivr
faddl
xchg
sub
mov
lea
xchg
inc
shr
test
push
mov
pop
repnz
andb
add
dec
lods
pop
or
lahf
repnz
or
clc
testb
push
pop
data16
mov
rcl
jo
out
sbb
xor
out
jmp
daa
clc
in
add
dec
jmp
fldcw
fwait
jmp
and
rorl
testl
mov
mov
sarl
in
cmp
sub
jne
mov
arpl
cmpsl
shl
jns,pn
mov
mov
mov
mov
jmp
iret
cmc
mov
xor
mov
fst
rcrb
ds
in
aas
sahf
sub
fiaddl
dec
jbe
mov
fsqrt
icebp
into
and
add
cld
out
icebp
inc
jne
fs
movsb
xchg
xlat
xchg
xchg
lock
sbb
pop
inc
fadd
mov
adc
cmp
pop
xchg
inc
xchg
mov
mov
xor
test
cmp
mov
popa
pushf
jae
sub
jge
push
sub
scas
ss
push
arpl
in
test
xor
add
stos
sub
xchg
int
cs
xor
and
pusha
dec
add
iret
jnp
or
lret
mov
pop
add
mov
xchg
mov
fistpl
add
lods
and
lret
and
mov
xchg
jmp
cld
clc
iret
and
inc
and
dec
or
sub
sbb
mov
jae
adc
mov
nop
mov
scas
sub
sub
shr
push
mov
fsubr
add
mov
out
pop
loope
push
mov
std
sub
lock
movb
sub
cmpsb
sahf
mov
pop
stos
out
rorl
movsl
outsb
pusha
adc
and
daa
stos
jl
pop
out
push
dec
dec
mov
pop
mov
cltd
inc
mov
adc
jns
xor
cs
mov
xor
pop
mov
mov
rep
mov
idiv
mov
pop
xchg
sub
neg
pop
fildl
inc
imul
in
in
out
mov
cld
lcall
test
pop
pop
fwait
sbb
adc
subb
je
xchg
fisubrs
or
xor
mov
mov
jb
test
push
push
fsubrl
icebp
int
mov
xlat
rolb
pop
jo
loop
jne
popf
shlb
ja
xor
int
andl
nop
loop
cli
jmp
inc
sub
push
dec
xor
cmp
aad
icebp
les
jge
mov
dec
mov
inc
loopne
lcall
and
pop
xchg
rcll
and
daa
sbb
lahf
add
out
add
ja
jl
and
leave
ret
lods
inc
lea
sub
add
xchg
add
push
xchg
push
inc
or
mov
popf
clc
movsb
and
inc
ret
push
jns
mov
adc
mov
pop
fdivl
test
mov
mov
loopne
cs
outsl
ficomps
xchg
ficoms
nop
adc
xlat
pop
sub
mov
xor
fwait
fwait
hlt
sub
scas
inc
das
les
jb
xchg
pop
mov
outsl
xchg
sahf
shlb
imul
cwtl
aam
xor
loopne
scas
arpl
cmpsb
test
cmpsl
cmp
es
pop
adc
scas
bswap
popf
mov
pushf
aam
pop
xor
into
fcmove
mov
outsl
sbb
jno
push
adc
jmp
sti
push
sbb
fisubrl
push
hlt
inc
or
out
xor
jge
lods
inc
inc
gs
add
outsl
cld
sahf
popa
and
jmp
enter
xchg
cli
mov
push
ljmp
mov
out
dec
mov
dec
lret
dec
ret
rep
sub
sbb
int3
loope
or
or
or
sbb
call
sti
mov
clc
cmp
and
mov
cmpsb
cmpsl
pop
loope
inc
dec
sbb
jno
cs
push
das
ficomps
inc
arpl
and
mov
adc
cltd
cmp
sbb
popl
lahf
xor
fists
mov
add
fdivs
out
in
andl
pop
mov
in
push
jns
jo
dec
pop
xchg
outsl
sbb
aam
add
lahf
andl
in
fs
jg
mov
xchg
pop
xchg
push
sahf
sbb
adc
mov
fsubp
add
jmp
shll
ljmp
insl
jbe
xor
aad
sarl
inc
adc
icebp
xchg
shl
push
dec
ret
push
enter
call
mov
push
pop
fucom
sbb
pop
inc
imul
cmp
adc
inc
imul
lock
mov
fldl
mov
push
into
cld
lds
xor
loope
mov
ds
or
outsl
dec
mov
inc
push
and
fs
xor
dec
cmp
outsb
xchg
pop
dec
mov
and
les
imull
inc
xor
adc
sbbb
ret
outsb
jl
pop
das
mov
add
rclb
or
hlt
pop
shlb
push
lea
out
pop
shrl
sbb
stc
cmpsl
jbe
jg
data16
pop
fnstenv
sbb
and
cwtl
leave
add
and
jbe
adc
fimull
mov
fnstenv
push
data16
ret
jecxz
sahf
dec
cwtl
inc
cmpsb
dec
jl
ds
test
loop
mov
cmpsb
xlat
xor
mov
insl
lcall
popf
flds
lret
inc
icebp
or
jl
fs
fsubs
mov
xchg
ljmp
mov
jge
cwtl
rcrb
aaa
iret
mov
lahf
in
dec
jecxz
test
and
mov
push
xor
lods
fadds
mov
ret
mov
stc
in
xchg
jae
and
rorl
dec
xor
pusha
frstor
movsb
movsl
or
idivl
xor
dec
jno
mov
dec
lds
mov
bound
xlat
insb
insb
cvtpi2ps
test
and
sub
rep
mov
scas
mov
mov
loopne
clc
fldcw
jbe
mov
xor
idiv
xor
lods
pop
test
push
addb
cli
hlt
clc
rcll
cmp
gs
adc
pop
mov
aam
movsl
jo
sbb
ret
mov
repz
popa
dec
outsl
pop
icebp
daa
nop
sub
and
inc
out
mov
subb
mov
scas
dec
stos
aaa
rcrl
inc
mov
xor
push
pop
dec
cmpl
xor
dec
push
jmp
push
push
xlat
mov
mov
dec
sub
scas
pop
push
xor
mov
push
xor
sti
in
dec
jge
aaa
push
nop
clc
cli
pop
and
mov
pop
mov
dec
push
repnz
xor
cmc
adc
cmc
sahf
lahf
ret
or
popw
sbb
js
sbb
mov
add
inc
inc
jge
daa
aas
adc
mov
cmp
xchg
jle
pop
outsl
daa
push
std
in
test
pop
cltd
pop
scas
in
and
repz
xchg
imull
imul
test
or
inc
mov
push
xor
mov
cmp
add
aad
in
out
jno,pn
pop
aaa
leave
ss
test
test
sub
mov
js
fists
xchg
push
jmp
imul
je
xchg
inc
add
imul
shrb
sub
cmp
in
lcall
mov
or
pusha
daa
sub
sbb
dec
jbe
in
ljmp
outsb
hlt
inc
and
adc
cli
dec
xor
repz
iret
ljmp
and
sub
push
shrb
sbb
outsl
lea
repnz
incl
push
xor
inc
ljmp
clc
dec
mov
scas
ret
movlhps
clc
lods
push
push
cmc
pop
ljmp
and
add
mov
mov
jl
je
mov
inc
insb
dec
loopne
bound
aaa
insl
mov
lods
cmp
jnp
insb
in
or
xor
aam
inc
dec
or
jle
in
or
push
mov
ret
adc
outsb
push
push
arpl
test
xor
or
lods
clc
daa
in
lods
popf
mov
sbb
js
inc
mov
aaa
mov
call
cmovl
pop
lods
cmp
and
xor
inc
pop
in
mov
xchg
jb
stos
sti
mov
in
push
stos
scas
adc
cmp
hlt
push
repnz
idivl
outsl
and
les
cltd
dec
pop
add
push
sub
mov
xchg
cltd
xchg
scas
test
mov
cmp
inc
mov
adc
xlat
arpl
std
movsl
inc
and
fld
repz
pop
add
movsb
pushf
push
xor
jg
sbb
jg
jbe
test
ja
mov
ds
mov
and
jl
mov
popa
in
sarl
stos
jne
and
mov
push
loopne
in
shrl
jae
fisubs
mov
stc
or
mov
fs
or
leave
test
dec
cli
cli
scas
dec
inc
push
int3
dec
shlb
stos
mov
aas
mov
int
or
pusha
mov
xor
cmpsl
push
sbb
je
mov
xchg
or
lcall
fistps
inc
adc
fadds
scas
push
dec
inc
pop
cltd
sbb
aaa
rorb
icebp
inc
shlb
or
mov
pop
pop
jb
xchg
pop
mov
or
int
inc
dec
lock
xor
arpl
mov
aas
orb
ds
xchg
push
movsl
test
or
cmp
push
aas
cs
hlt
push
lret
test
neg
mov
jg
imul
pop
les
je
mov
loope
aas
popa
aad
mov
rcl
push
push
andb
xchg
and
xchg
pop
pop
push
sub
or
sti
push
out
xchg
les
int3
in
lds
pop
or
cmp
sub
lahf
inc
sub
test
xchg
push
test
and
sub
sbb
aad
cmpsb
ret
ret
scas
jnp
adc
inc
iret
xchg
add
insb
sub
or
push
movsb
loope
out
add
inc
jge
js
stc
pop
sbb
inc
sti
xchg
push
stos
rorl
ret
xchg
fidivs
lea
orb
fnstenv
cmp
jg
adc
jp
aad
dec
push
pushf
xor
stc
shrb
rcl
fs
pop
fistpll
or
les
and
push
xchg
dec
xor
orl
push
fstl
bound
push
sub
cwtl
pop
pop
lcall
popa
leave
test
dec
and
mov
sbb
xchg
jno
sub
ret
fwait
push
cmp
inc
das
mov
subb
adcl
and
push
data16
cmp
xchg
jmp
fcomps
aaa
and
xor
imul
push
or
mov
pop
mov
sti
das
inc
fidivs
in
and
mov
cld
jecxz
or
mov
arpl
dec
xlat
mov
ss
std
add
push
arpl
mov
pop
out
sub
ficoml
add
rol
push
stos
mov
mov
loopne
stos
jae
out
mov
or
cmc
mov
mov
sahf
fsubr
repz
cmp
sahf
and
fdivrs
xor
movsb
xchg
or
ds
inc
vfrczsd
xlat
enter
add
hlt
fs
loopne
arpl
sbb
shll
test
ficompl
inc
mov
ds
xor
ss
lahf
sbb
mov
lds
iret
inc
cmpl
out
roll
xor
push
in
nop
xchg
pop
mov
rcrl
xchg
fists
sbb
in
mov
addb
fisttpll
aad
xor
lret
add
pusha
out
fisubrl
or
mov
repnz
sub
dec
add
lds
xchg
outsb
xchg
adc
imul
mov
sbb
pop
lcall
cmp
into
mov
inc
and
sub
daa
das
ja
sbb
scas
repz
iret
loopne
fs
inc
sbb
xor
cmp
jg
ret
stos
xor
shlb
je
dec
sti
leave
jo
subl
jnp
iret
push
sub
cltd
call
pushf
pop
sti
in
out
dec
sub
ds
xor
in
dec
lret
or
lds
imulb
xor
cwtl
xchg
in
mov
push
decb
mov
fsubr
ja
push
adc
adc
cltd
stos
and
cmp
in
int3
fcmovnb
addr16
push
push
out
out
call
pop
stos
dec
jb
nop
mov
dec
js
jmp
mov
js
push
negl
xor
sub
fs
std
std
mov
pop
mov
ljmp
mov
rcrl
in
push
sbb
adc
mov
inc
add
aad
callw
rcrl
shrb
daa
or
push
xchg
outsl
xchg
dec
jae
inc
shlb
jbe
xlat
sti
mov
or
call
stos
imul
jno
mov
iret
dec
fiaddl
cld
cmc
mov
pop
int3
and
dec
stc
dec
add
mov
les
les
in
sti
lods
sbb
push
pop
mov
rcrl
int
cmp
es
clc
loope
adc
and
cmp
and
jae
aas
lds
push
jmp
ds
lds
enter
xor
xchg
or
dec
push
ds
ss
lea
jl
jne
sub
mov
and
dec
test
mov
inc
dec
inc
push
dec
or
and
mov
cmpsl
inc
inc
mov
mov
test
pop
mov
or
in
xchg
sub
sbb
inc
or
sahf
repz
mov
cmp
test
push
pop
or
lret
out
cmc
and
mov
and
inc
js
dec
fimuls
rclb
pop
add
pop
mov
mov
and
rorl
mov
push
xchg
xchg
daa
pushf
pop
sub
push
jb
int3
test
mov
sbb
subb
push
sbb
adc
jmp
bound
pop
not
adc
scas
in
insb
mov
pop
adc
mov
mov
dec
loop
scas
pop
into
fld
mov
cld
fidivs
pop
xchg
out
push
push
scas
mov
jae
dec
loop
pop
out
mov
mov
fcmovbe
sub
xor
shlb
cli
call
sub
in
hlt
pop
cmp
stos
ss
mov
mov
jecxz
aad
mov
fdivrl
or
pop
and
pop
lret
ret
pushf
add
xchg
cmp
cmp
leave
jno
rcrb
nop
jae
mov
cmp
pop
notb
pushf
sub
icebp
stos
and
xor
cmp
movsl
jmp
mov
pushf
js
inc
xor
xor
xor
popf
ret
or
sub
in
imul
sub
inc
dec
jne
addr16
xchg
loopne
dec
fldcw
lcall
loope
adc
add
and
rcll
mov
inc
rcr
sbb
shufps
and
mov
popa
leave
insb
leave
mov
push
cmc
sbb
xchg
jnp
pop
push
pop
lods
xchg
push
mov
xchg
out
movsb
sbb
hlt
leave
push
mov
sti
aam
rorl
scas
pop
repnz
push
pop
xchg
dec
push
mov
repnz
xchg
sub
sahf
fsubl
mov
jl
xlat
or
mov
adc
inc
lret
aam
imul
adc
cmc
bound
xchg
cmpsb
xchg
jp
xchg
xor
dec
int3
roll
test
or
insl
jo
adc
stos
cmp
gs
adc
outsb
xchg
and
push
int3
inc
cmp
fcoms
add
inc
loop
mov
jbe
push
sub
pop
insl
into
pop
fwait
push
mull
and
das
dec
or
insl
scas
push
pop
push
adc
add
xor
lahf
stos
stos
cmp
xor
movsb
int
scas
lret
mov
pop
cmp
push
movsl
add
or
notb
dec
cmp
mov
jl
loopne
daa
adc
add
shr
lods
mov
out
test
inc
mov
mov
xadd
sub
lods
loope
pusha
repz
xor
aas
clc
je
dec
icebp
or
mov
iret
addr16
xchg
cmp
sbb
xorb
popf
jge
popa
xor
dec
and
je
notl
mov
add
iret
adc
xchg
lock
ret
mov
jp
cmp
pop
iret
fbstp
xchg
mov
icebp
lea
sub
movb
imulb
adcl
jmp
adc
fdiv
clc
dec
adc
movb
rcll
xchg
or
add
add
cmc
jne
cmpl
mov
in
mov
push
or
adc
test
cmp
fwait
pop
add
inc
mov
clc
lock
repz
pop
jae
mov
idiv
outsb
es
call
jg
xlat
test
xchg
dec
adc
adc
test
sub
out
das
sub
cwtl
repz
push
push
stos
xchg
push
add
loopne
mov
cmpsl
mov
aam
repnz
cmp
mov
push
mov
jle
dec
push
sub
pop
sbb
test
imul
roll
jl
and
mov
pop
loopne
cmp
movsl
push
cmpsb
lds
xchg
fbld
fbld
cmp
data16
or
push
ret
lock
dec
dec
mov
pop
and
ret
add
add
add
div
div
sti
frstor
adc
cltd
std
outsl
imul
sub
add
sti
add
sarl
fbstp
push
aam
call
adc
lods
cmp
pop
aas
xchg
outsb
subl
dec
pop
aaa
or
es
dec
xor
dec
jb
pop
out
in
adc
fisubrl
lahf
or
jmp
jb
popf
xor
add
cmp
add
pop
repz
or
mov
push
dec
or
sbb
or
cmp
test
sti
pop
cmpsb
sub
add
push
dec
es
ror
cmp
mov
scas
scas
adc
popf
repnz
in
push
sub
or
push
cmc
arpl
jle
push
lret
mov
jno
movsb
fldenv
cmpsb
cmpsl
add
lret
movsb
cmp
and
icebp
fwait
fiaddl
pop
lahf
pop
adc
pushf
sub
sub
xchg
xchg
xchg
jmp
pop
mov
sbb
mov
and
mov
jne
inc
sbbl
or
sub
inc
mov
pop
sbb
xchg
pop
mov
mov
jmp
jmp
add
mov
outsb
leave
loopne
cmp
std
inc
shll
scas
popa
mov
inc
push
cmp
mov
cmpsb
pop
dec
fdivrs
jne
cwtl
or
add
rorb
movsb
jl
fimull
insb
lea
adc
jg
mov
das
rcr
jne
loope
dec
mov
test
enter
pop
xchg
imul
jmp
lock
sbb
sub
lock
nop
outsl
inc
xor
jle
das
xchg
sbb
cmp
adc
cwtl
sbb
xchg
dec
pushf
imull
sbb
xchg
fbld
inc
sbb
cli
lahf
and
mov
insb
mov
rcrb
sbb
lea
incl
push
rorl
int
mov
div
push
push
mov
inc
bound
out
push
inc
ja
cmp
imul
je
aas
leave
lds
fst
inc
add
loope
and
push
add
movsb
mov
cmc
pusha
sub
inc
add
pop
pop
lret
xchg
fwait
ret
test
mov
inc
mov
mov
sub
lret
dec
jb
mov
xchg
mov
lea
pushf
je
aam
movsl
xchg
lds
mov
daa
out
les
addr16
mov
or
xor
int3
xor
std
pop
repnz
iret
mov
jae
inc
cmp
sub
inc
cmp
push
inc
lods
test
xchg
and
pusha
outsb
push
or
ljmp
pop
jp
jb
mov
inc
add
icebp
out
clc
mov
ljmp
adc
mov
and
mov
push
push
ret
daa
mov
pop
mov
fwait
pop
inc
lret
cmp
mov
jae
cld
lea
pop
popa
incl
adc
jbe
mov
xchg
cmp
dec
out
pop
xlat
xchg
jg
pop
adc
ljmp
pusha
sahf
lods
xchg
xor
out
sbb
mov
sub
nop
cmc
sub
mov
adc
insl
sub
and
aas
loope
test
jl
ficomps
inc
and
or
jae
insl
out
rolb
mov
sarb
lock
fwait
mov
ret
fildll
sbb
in
mov
adc
incl
das
inc
leave
scas
scas
div
cltd
mov
jns
jae
dec
popf
push
mov
mov
mov
xchg
dec
push
fsubrl
pop
mov
rol
lds
and
mov
fs
mov
push
inc
mov
xor
arpl
out
insl
jp
jae
ss
adcl
fdivs
inc
jecxz
add
je
clc
dec
mov
add
test
cs
mov
les
aaa
out
shr
insb
je
fsubrs
ds
or
call
in
mov
mov
mov
es
mov
jmp
out
movsb
int
in
or
pop
sti
cltd
test
movsl
or
and
add
push
aaa
mov
xchg
insb
int
loope
insl
dec
push
jmp
dec
adc
fisubrl
mov
fistpll
xor
repz
mov
dec
shlb
xchg
push
pop
add
mov
testl
ficomps
mov
adc
ret
or
cmp
stc
inc
fldcw
xchg
cmpsl
xor
jmp
pusha
lahf
cmp
jle
rcl
test
call
mov
jae
data16
cwtl
stos
aas
jae
mov
mov
xor
dec
fidivrl
push
loopne
adc
out
mov
into
cld
sarl
xchg
add
jb
repnz
jbe
push
insl
fidivrs
adc
in
lock
addr16
mov
shl
in
cli
rcll
lret
xor
loopne
mov
sub
xor
pop
ja
ljmp
jb
push
xchg
repz
nop
ret
pop
mov
popf
repz
je
mov
and
dec
cmp
add
adc
in
int
mov
mov
icebp
aas
xchg
icebp
nop
push
movsb
adcl
add
fwait
lcall
mov
leave
jge
jmp
and
out
out
pop
jae
dec
daa
mov
xlat
jne
loope
add
addr16
mov
movsl
inc
add
aad
cwtl
add
lret
movsl
data16
xchg
insb
repz
pop
push
shlb
les
cwtl
push
add
stos
xchg
fiadds
into
sub
hlt
adc
scas
dec
xchg
xchg
lret
dec
daa
cmp
loopne
out
dec
mov
cmp
div
cld
sahf
imul
cmp
add
cmp
lret
fwait
dec
push
add
scas
mov
mov
and
push
insl
cmpsb
frstor
rorb
jl
xchg
jo
adc
ds
lret
pop
test
or
add
shrb
jmp
jle
push
mov
mov
or
or
out
jnp
dec
cld
xorps
cmpsb
xchg
lahf
mov
lods
push
mov
lock
push
ljmp
aas
mov
lods
movsb
jb
stos
xchg
dec
imul
xlat
and
adc
pusha
xor
outsl
ja
pop
leave
cmp
stc
mov
or
fsubrl
add
add
mov
mov
call
leave
jnp
lock
jge
pop
push
aaa
mov
and
pop
cmp
mov
pop
jl
jecxz
int
fisttpl
mov
mov
out
jmp
out
lcall
inc
dec
jne
cmpsl
loope
pop
imul
push
mov
out
xor
add
sub
xchg
jl
jp
fs
xchg
dec
cmp
lock
in
in
test
jnp
ljmp
push
addl
ja
int3
je
fcom
shrl
shr
fld
int
pop
lods
ja
jns,pt
ja
sbb
movsb
mov
push
mov
and
in
inc
das
icebp
mov
sbb
popf
shrb
hlt
addr16
xchg
add
jnp
push
loope
scas
loop
mov
fsubrl
xlat
sub
cwtl
xor
jne
sbb
push
or
out
ret
rclb
lahf
lret
cltd
adc
xchg
pushl
cmp
cmpsb
repnz
jae
test
xor
out
frstor
das
lds
sub
andl
shrl
pop
cli
daa
sbb
adc
pop
jbe
stos
ret
stc
mov
xchg
daa
in
aas
repnz
testb
lret
and
popf
xlat
fwait
add
cli
jmp
mov
xor
loopne,pn
int
mov
outsl
iret
popa
in
mov
mov
pop
mov
hlt
aaa
out
push
push
jg
jg
adc
dec
mov
push
movsb
pop
xlat
jmp
add
pop
xchg
inc
inc
das
add
fsubs
inc
aaa
mov
push
sub
and
clc
mov
mov
rcr
mov
clc
fnsave
imul
cmpsl
fildll
mov
fsubrs
shr
rep
lret
inc
mov
sbb
test
icebp
mov
inc
clc
dec
dec
dec
mov
out
mov
push
push
cmc
fs
adc
mov
outsb
repnz
and
out
mov
mov
fwait
jg
dec
dec
iret
jnp
pop
sub
mov
mov
sbb
mov
shlb
shl
shrl
add
xchg
addr16
push
jl
xchg
imul
and
push
push
jns
test
mov
push
mov
lcall
push
dec
ds
in
sbb
xchg
fldenv
sub
inc
jmp
stc
stos
dec
ret
mov
mov
mov
dec
inc
sub
xorl
xchg
dec
jle
out
movsl
ljmp
push
push
add
mov
push
and
iret
test
out
jmp
sub
pushf
sbb
jl
pop
mov
and
cmpsb
into
in
int
and
cld
add
add
ja
dec
insl
add
rorb
push
daa
into
jecxz
cmp
xchg
test
in
repz
push
mov
jg
xor
mov
repnz
xor
aad
les
loope
mov
daa
mov
mov
xchg
or
scas
xor
jp
popa
jnp
cmc
and
pushl
or
cmp
push
pop
cs
sbb
outsl
into
mov
lret
pop
inc
sbb
lds
inc
push
hlt
mov
sub
jge
mov
sub
mov
lcall
mov
lcall
add
pop
mov
into
push
sub
pop
aaa
jg
popa
scas
pop
popa
mov
mov
jl
lret
pop
mov
addl
sbb
mov
pop
movzwl
fldl
inc
frstor
inc
cwtl
rclb
leave
dec
int
or
mov
test
jo
scas
clc
push
frstor
dec
or
rcrb
dec
xchg
pop
and
stc
inc
cmp
into
mov
jmp
or
lcall
test
leave
rol
ds
adc
dec
cmp
xchg
cmp
mov
push
rcrb
rol
mov
rolb
std
inc
sbb
sbb
test
xchg
cmp
shrl
adc
add
jae
dec
out
push
xchg
in
mov
cmp
mov
lock
dec
cmp
xchg
imul
lret
jne
or
aam
and
push
bound
mov
jp
out
jmp
and
xchg
loopne
popf
movsb
xor
dec
push
and
jo
fwait
call
out
mov
mov
iret
push
repnz
mov
lret
and
mov
imul
scas
mov
xchg
adc
push
dec
push
icebp
data16
inc
push
dec
cli
ret
scas
test
mov
push
and
dec
jae
xor
sub
sbb
outsb
dec
call
icebp
sub
aad
mov
xbegin
negb
fcomps
movsb
fcmovnu
repz
sub
xor
xchg
pop
adc
sub
or
pop
xchg
iret
andb
sbb
into
adc
in
pop
imul
test
sahf
xchg
stc
icebp
in
ja
lahf
inc
add
cmp
cmp
jmp
xlat
mulps
cli
test
pop
cmp
cmp
sub
fimuls
out
rcr
scas
mov
cmc
mov
pop
mov
lret
fldenv
pop
jmp
stos
push
pop
or
fwait
mov
mov
pop
mov
jl
sub
push
pop
fdivp
jg
stos
rorl
mov
fimull
lods
shl
cmp
sub
add
loopne
mov
or
jmp
add
clc
lea
and
test
xor
dec
cmpsl
push
adc
push
add
jnp
les
mov
mov
sbb
and
pop
movsb
mov
sub
lahf
push
loopne
lds
cs
cli
pusha
stos
push
icebp
mov
xor
cmp
loopne
pop
lods
mov
imul
mov
mov
into
jl
pushf
xor
sub
jno
in
fildl
add
pop
cmc
shll
cmc
dec
int
xchg
lock
mov
lock
adc
lcall
aad
popf
movsl
lods
out
xor
xor
mov
fcomp
lret
push
cmp
popa
fcmovbe
cli
dec
or
aaa
lret
ljmp
ja
stos
inc
repz
or
loope
ja
xchg
loopne
jne
cli
outsb
mov
insl
repnz
addl
xor
sbb
mov
dec
mov
stc
aaa
je
aaa
sar
outsb
stos
add
orl
add
out
ss
fnsave
push
call
xlat
hlt
into
lods
jnp
pop
cmpsb
in
dec
repz
xchg
cmp
stc
insb
add
xor
sub
scas
aad
call
mov
push
fiaddl
mov
push
adc
rorl
xorb
mov
xchg
shl
sub
xor
pop
push
mov
das
fnstcw
outsl
mov
pop
lahf
and
mov
xbegin
subl
sbb
lock
clc
mov
xor
mov
cmp
repnz
stc
mov
lret
mul
jno
fdecstp
ret
fsubrl
into
adc
jl
dec
xor
rcll
ret
repnz
mov
ret
test
pop
int3
xchg
jle
inc
test
out
jmp
push
xchg
cmp
stos
inc
mov
cmp
test
out
add
test
and
stos
popa
jge
fwait
ret
jmp
xchg
int3
mov
or
ja
adc
fs
loop
pop
hlt
in
sbb
int
add
push
movlps
sub
and
ret
xor
fisubl
or
loopne
rclb
and
js
insb
push
js
in
jne
ret
sub
in
in
pop
cmp
cld
xchg
dec
cld
xchg
dec
inc
mov
enter
jnp
push
xchg
repz
out
mov
lahf
into
outsb
xchg
imul
aas
push
popf
test
outsb
inc
fistps
fbstp
xor
mov
pop
out
push
cmp
out
hlt
mov
and
test
or
mov
inc
mov
pop
dec
jle
fbstp
jae
out
fwait
dec
in
mov
push
dec
push
insl
jno
adc
rdpmc
sbb
inc
cmp
jp
daa
cmp
and
cmc
arpl
fwait
int
adc
push
pushf
dec
lahf
fwait
cld
dec
push
lea
inc
loopne
sub
or
pop
pop
or
lock
jle
test
aam
push
fildl
add
sub
xchg
repz
cmp
mov
xor
stos
mov
in
lea
mov
int3
inc
dec
fisttpll
xor
cmc
cmpsl
add
dec
mov
leave
dec
stc
dec
loopne
mov
add
pop
pop
rorl
push
and
push
js
nop
push
cmp
mov
cmpsb
arpl
cmp
scas
xchg
loope
scas
imul
xchg
mov
dec
sub
je
adc
shll
adc
sub
mull
inc
or
jl
mov
push
push
lea
xor
repz
scas
scas
sbb
xor
jp
jl
imul
adc
lret
jg
gs
lods
dec
mov
push
mov
mov
mov
cmpsb
cmp
add
and
subl
pop
lods
mov
pop
add
mov
or
cmp
jne
pushl
notb
lea
cmp
cmp
ljmp
movsl
fwait
cmp
jle
sbb
mov
sbb
fs
cmpsl
ja
int3
daa
mov
les
push
int
lret
notb
repnz
mov
stos
xchg
pop
icebp
xor
int
nop
and
shlb
test
sub
inc
aaa
pusha
test
faddl
add
cltd
out
loop
test
daa
sub
pop
lcall
cmp
push
push
aam
sub
loope
sub
clc
xor
mov
cmpsl
pop
push
jno
jne
mov
out
out
push
mov
or
dec
roll
stc
scas
rol
pusha
mov
sbb
int
cld
xor
enter
mov
orb
jb
sub
sub
lahf
mov
inc
repz
jp
push
nop
ja
cs
mov
outsb
cmp
scas
push
push
xchg
cmpsb
int3
outsl
add
dec
jp
lret
sbb
jb
lock
cmp
ljmp
andl
mov
xchg
xchg
ret
adc
arpl
pop
xor
ret
les
rcl
out
out
ss
inc
sub
dec
in
dec
pop
gs
hlt
out
loop
push
sbb
xor
adc
outsb
or
dec
movaps
mov
mov
addr16
mov
xor
pop
push
into
pop
jnp
fs
stos
repz
shlb
int
mov
push
aas
ds
icebp
test
aad
jne
insl
data16
mov
lret
cwtd
inc
rorb
push
push
dec
dec
xchg
ret
fmuls
add
popf
pushf
xchg
sbb
sbb
add
negl
jl
adc
mov
cltd
fiadds
mov
test
mov
sti
mov
add
push
imul
or
sub
stos
mov
xchg
dec
loop
iret
out
or
xchg
dec
roll
stos
sub
out
int3
stos
sbb
lret
jne
addb
mov
fwait
rorb
out
add
cmp
das
int3
ret
xor
enter
mov
pavgw
xor
out
addr16
movnti
test
or
mov
cld
cmp
pop
cli
jb
cmp
vmaskmovdqu
loope
cwtl
xchg
outsb
push
sbb
and
mov
mov
in
out
jo
sti
mov
add
arpl
sub
in
notb
and
xchg
mov
jne
cmp
fsubp
js
xlat
mov
mov
loopne
out
sbb
mov
jp
iret
jae
xlat
or
insb
pop
mov
loop
mov
add
test
inc
jne
cmp
and
push
loopne
mov
addr16
aaa
adc
inc
pusha
xor
rcll
cli
out
pop
sub
dec
rolb
mov
dec
int3
aas
mov
out
repnz
push
mov
jb
jge
je
xchg
add
fwait
out
sti
cmp
sub
adc
dec
adc
xchg
sbb
data16
cmp
cmp
iret
lahf
js
push
jns
lds
rcrl
sub
sub
sbb
sbb
enter
adc
ljmp
shlb
lcall
jmp
push
dec
dec
cmp
sub
cmp
sbb
dec
ss
out
repz
and
mov
sbb
dec
xchg
or
pushf
sbb
inc
mov
and
enter
xor
lahf
das
push
pop
call
cmc
pop
les
jle
inc
sahf
jne
sub
pop
pop
jg
or
or
jmp
cwtl
test
pop
leave
negb
adc
xchg
adc
mov
mov
sbb
das
and
rcll
jae
or
dec
mov
mov
jnp
add
popa
test
and
pop
cmp
lret
xor
fsubrl
aam
je
add
sub
dec
xor
sub
xor
loop
sub
gs
sbb
jle
mov
mov
in
jmp
mov
mov
add
mov
shl
mov
fmull
das
ds
add
push
rcl
sub
hlt
or
jb
aas
arpl
sbb
in
sbb
daa
test
scas
adc
test
iret
jns
call
and
or
adc
jns
gs
repz
xchg
pop
sbb
push
scas
cmc
js
dec
sub
add
dec
sub
xor
dec
setl
pop
in
stc
outsl
sbb
pop
xchg
in
movsl
sbb
jp
lahf
insb
jbe,pn
add
jmp
iret
cltd
jl
pushf
ret
movsl
fildl
cmp
lock
sub
sti
insl
mov
das
enter
movsl
sahf
adcb
mov
push
nop
jle
inc
jle
nop
mov
mov
xor
iret
pusha
or
in
mov
notl
adc
mov
das
fld
popf
arpl
pop
scas
loop
gs
cmp
xor
mov
insb
outsl
mov
test
cmp
pushf
pop
push
jns
loope
es
movsb
jmp
or
cmp
pop
test
dec
ret
xchg
mov
aaa
sub
add
cmp
xor
dec
pop
arpl
inc
mov
scas
xchg
ja
cmpsl
push
in
inc
ljmp
andl
mov
add
sub
mov
or
mov
mov
testl
mov
xor
push
js
adc
repz
pop
daa
jecxz
mov
out
pop
xchg
lds
dec
jp
push
leave
shlb
adc
rolb
xchg
push
aad
adc
negl
popf
dec
push
ds
es
pusha
aas
cmp
jb
xchg
mov
sti
lods
lcall
jne
inc
dec
aaa
jae
clc
icebp
push
inc
lcall
sarb
movb
test
popa
fdivs
orl
in
popf
sbb
jnp
jmp
push
mov
lds
or
loope
mov
sub
scas
roll
xchg
mov
xchg
loopne
push
jbe
movsb
mov
inc
mov
xlat
int
jnp
gs
push
dec
imull
stos
pop
sarl
es
pop
mov
xchg
mov
add
je
sub
aam
push
into
out
adc
and
jnp
sbb
sar
mov
popl
mov
cltd
imul
xchg
dec
pop
jle
rep
lret
arpl
mov
dec
fnstenv
mulb
jne
jge
call
sar
js
ds
mov
dec
jmp
mov
out
jo
loop
scas
jge
rolb
addr16
cmp
push
xor
icebp
jl
por
ret
jle
jle
sbb
aad
pop
shlb
shll
aaa
push
push
int3
clc
loopne
mov
ret
stos
imul
ja
gs
stc
fwait
mov
mov
pop
push
add
xchg
stos
xchg
sub
sti
push
es
lahf
icebp
cs
and
arpl
imull
sti
sahf
and
bnd
cwtl
and
push
pop
test
cmpsl
xchg
xor
add
mov
or
insb
es
dec
mov
sbb
mov
aam
test
lock
mov
stc
or
pushf
xchg
in
push
clc
dec
mov
test
je
sarl
push
add
cmp
adc
test
pop
scas
testb
loop
mov
push
test
incl
adc
push
sbb
pop
das
jmp
cmp
cmp
pop
aaa
xchg
add
das
inc
jns
enter
push
hlt
sub
mov
movsb
mov
rorb
in
rclb
push
mov
out
ds
cmp
jp
inc
add
mov
lock
repz
rclb
iret
inc
push
pop
aaa
mov
andb
mov
add
pop
push
out
or
pop
subl
push
and
rorb
aas
push
je
je
in
sbb
sarb
mov
mov
xor
popf
xor
imul
in
jmp
cwtl
cmp
pusha
jmp
icebp
es
add
cmp
fmul
hlt
rolb
dec
decb
xlat
shl
in
enter
add
mov
iret
mov
mov
pop
sub
inc
and
mov
mov
add
or
insb
into
fstpt
sahf
das
mov
jno
roll
test
push
sbb
or
fildll
cmp
stos
adc
pop
mov
jno
hlt
fnsave
scas
push
xor
das
pop
gs
sub
in
cltd
bound
mov
adc
add
or
xchg
je
cmp
daa
cmc
jmp
dec
fstps
fcmovbe
imul
fdivr
loop
inc
xchg
ss
adc
mov
movsl
dec
out
inc
xchg
std
sub
pop
and
xchg
cmp
enter
lret
jle
add
stc
jbe
push
pop
mov
xchg
adc
data16
pusha
adc
std
stc
addr16
and
dec
adc
roll
filds
mov
test
xor
les
int
daa
pop
mov
test
mov
sub
fists
xchg
xor
mov
in
fdivl
addb
lcall
aad
lods
mov
bound
daa
repz
or
adc
jp
addr16
iret
jmp
mov
jl
adc
arpl
repnz
into
das
movsl
rclb
adc
rclb
jecxz
iret
add
jecxz
std
popf
test
xor
mov
testl
int
enter
out
xchg
aam
movsl
lret
inc
xor
add
adcl
dec
push
imul
jg
mov
xchg
push
adc
fistl
movsl
arpl
call
xlat
sbb
arpl
shrb
and
add
jnp
add
fwait
lods
int3
addl
xchg
cmp
mov
xchg
sbb
lods
ja
bound
jmp
push
mov
pusha
push
push
pop
push
arpl
fwait
ss
jnp
test
xlat
mov
ud1
shl
mov
aad
xchg
and
fdivl
insl
mov
fisubs
mov
jns
clc
push
mov
lcall
in
lods
loope
adc
int
cmc
adc
or
add
insl
jmp
cmp
int
jp
sub
cs
mov
stc
xchg
adc
bound
hlt
mov
js
cmpsl
pop
or
jb
cli
mov
nop
pop
data16
ja
scas
add
pop
repz
pop
cltd
jp
pop
dec
push
imul
sbb
sub
jecxz
loop
rolb
pop
je
out
or
jle
sub
or
push
xor
addr16
sbb
push
mov
lods
fwait
repz
insb
clc
test
test
cli
cli
adc
out
xchg
ficompl
and
insb
xor
and
mov
pop
test
inc
adc
int
push
pop
jne
std
pop
sbb
les
rol
enter
push
jno
test
push
stc
add
xchg
cwtl
hlt
or
fnstcw
jge
push
and
cmpb
in
testb
jl
pop
dec
jmp
call
sahf
fmuls
clc
dec
mov
aas
and
sahf
mov
dec
aaa
add
adc
cld
xchg
jp
sub
pop
xchg
and
in
arpl
hlt
dec
xchg
fwait
sbb
call
sbb
lret
fwait
pop
pop
std
nop
add
test
xor
iret
aam
or
nop
mov
push
adc
in
add
inc
dec
lahf
lds
pop
push
ret
mov
pop
repz
xor
mov
jle
data16
cwtl
inc
sbb
je
sub
push
test
loopne
pusha
arpl
shr
and
js
cmpsl
sbb
inc
jmp
js,pn
out
cmp
jg
mov
inc
adc
mov
scas
dec
mov
stos
jns
mov
push
mov
insl
sbb
jecxz
mov
aaa
or
pop
lock
mov
in
mov
in
lcall
ss
jge
cmp
inc
or
inc
xchg
xchg
dec
fcoml
xor
es
push
push
xchg
push
test
or
mov
xorl
jmp
fsubl
pop
mov
add
jmp
jg,pn
cmpsb
pop
cmp
or
repnz
subl
hlt
cli
imul
and
lahf
push
cli
loope
dec
adc
lea
xchg
jg
mov
cmove
push
out
dec
mov
lods
call
xor
fadd
xor
sub
push
in
mov
push
jbe
adcl
or
ljmp
out
and
inc
sarl
cmc
sub
adc
cmp
mulb
adc
mov
mov
jmp
dec
xor
mov
out
stos
add
pop
adc
sti
int3
fcoms
cmp
jne
ja
pop
inc
adc
sub
cld
dec
jge
inc
in
clc
pop
into
jmp
lods
xchg
add
push
orl
mov
rorb
je
adc
lods
stos
pop
push
into
cld
popa
pop
mov
xchg
je
mov
jnp
sub
jb
stc
inc
dec
cli
scas
fsts
sub
rorb
and
adc
imul
mov
dec
loopne
clc
addr16
push
call
sub
cmp
cmpsl
add
push
inc
sbb
push
mov
pop
add
out
push
sti
mov
bound
inc
scas
inc
or
loop
mov
dec
add
and
or
stos
pop
mov
xor
lods
stc
or
fistpl
andl
div
mov
jge
add
daa
in
scas
pop
jp,pn
or
nop
sbb
dec
adc
insb
inc
push
into
push
cmp
dec
test
cmpl
mov
dec
cmp
outsl
sarb
dec
cmp
jmp
mov
mov
movb
add
dec
repnz
leave
jns
push
xor
dec
adc
sti
push
lods
shrl
clc
arpl
es
cmpsl
ds
push
add
fdivrs
or
test
push
sbb
mov
test
add
pop
push
loopne
in
rorl
add
rol
cmpsb
mov
imul
shlb
test
ja
loopne
mov
lods
push
mov
pop
packsswb
push
mov
sbb
aas
cmpsl
and
push
repz
pop
mov
movsb
jmp
push
cwtl
sub
cmpsb
enter
lods
mov
xor
sbb
andb
insb
mov
mov
sti
sbb
insb
or
fnstenv
je
lahf
jle
pop
les
jbe
in
gs
data16
pop
pop
clc
inc
fsub
lock
xchg
xchg
or
xor
push
outsb
loop
pop
sbb
mov
mov
mov
adc
repz
or
pop
dec
pusha
pop
lcall
les
fiaddl
xchg
repnz
shll
test
mov
loop
daa
test
jmp
addb
cld
es
stos
xchg
dec
or
inc
nop
add
enter
mov
aaa
push
movsl
rorl
or
add
mov
into
inc
xchg
and
mov
jp
and
jb
aam
leave
in
ja
out
and
outsl
sub
ficompl
scas
dec
lret
out
cwtl
push
fcomps
sbb
fxch
xchg
add
xor
aam
scas
and
dec
enter
repz
and
xchg
pop
cmp
addr16
stc
das
fnstenv
outsl
and
int
push
mov
int3
sarb
jmp
mov
fldt
mov
test
int
test
add
imul
dec
or
das
pop
jae
int
mov
push
mov
out
cmpsb
xchg
dec
lods
and
lret
les
or
add
mov
jae
add
xchg
inc
aad
in
sub
add
jnp
push
mov
add
lahf
xor
dec
pop
test
mov
mov
xchg
jo
pop
test
push
lret
pop
inc
dec
mov
jmp
add
xor
or
sub
jle
mov
mov
mov
repz
ret
mov
loope
xchg
out
fs
stos
jno
loope
xor
cwtl
out
sbb
repnz
sbb
movq
in
dec
inc
and
push
add
stos
or
movsb
sti
cltd
fstl
inc
inc
stc
sub
divb
push
pop
jmp
in
rclb
and
jge
in
cltd
bound
ret
cmp
xchg
call
pushl
xor
pushf
adc
loopne
es
out
dec
jno
xchg
add
lahf
push
push
pop
sub
jmp
out
out
rorl
push
aaa
pop
dec
jo
mov
pop
nop
jg
xchg
mov
rcrl
or
pop
adc
jne
mov
pop
clc
jae
add
or
aam
dec
movsl
and
lock
lret
pop
stc
xchg
add
sti
push
pop
cmpsb
or
fisttps
xchg
pusha
add
hlt
jae
add
fmuls
aad
dec
ss
roll
push
mov
scas
jns
cmp
cmp
rcrb
and
inc
popf
or
fidivrs
mov
iret
lret
scas
aas
mov
pushf
or
filds
fnsetpm(287
repnz
lods
xor
fwait
cmc
xor
inc
pop
lahf
in
mov
int3
aaa
cmp
push
jbe
inc
jo
jl
xchg
mov
bound
insb
pop
test
into
sub
outsl
out
addr16
jp
movsb
sahf
mov
jns
jmp
xor
shrl
push
mov
aaa
loop
sbb
insb
imul
test
mov
in
lcall
mov
dec
jle
xlat
adc
add
add
mov
cmp
scas
lea
sbb
and
lds
add
sub
in
or
lods
dec
push
test
jo
push
xchg
icebp
enter
sahf
movsl
in
scas
fisubrl
or
dec
fisubl
andl
xchg
or
insl
mov
sbb
mov
pushf
push
pusha
movsb
mov
push
xor
xchg
cmp
pop
mov
and
mov
mov
aas
xlat
cwtl
scas
inc
in
xchg
mov
jno
sub
xchg
sub
cmpsl
lds
jne
pop
les
mov
das
jmp
int3
lcall
xor
aaa
icebp
mov
pshufw
sub
mov
mov
mov
push
jge
jae
repz
test
push
mov
cmpl
push
add
in
or
pop
cs
xorl
or
xchg
xor
cmp
test
cmp
mov
push
dec
bound
xchg
mov
dec
pop
bound
push
mov
xor
sbb
scas
je
jb
or
pop
imul
mov
out
stc
movsl
mov
inc
and
stc
ret
cmp
sbb
mov
mov
in
fs
ds
cli
in
ss
jmp
cmp
mov
dec
inc
ret
mov
aad
mov
dec
and
cli
xor
mov
cld
scas
inc
cld
add
mov
sub
sbb
mov
xor
pop
and
stos
out
dec
jb
sbb
hlt
lock
movntq
out
nop
dec
int3
out
push
pop
inc
lock
js
sbb
xchg
mov
test
inc
outsb
outsl
int3
and
xchg
loopne
push
cmp
shrl
cmpsb
popf
or
or
mov
popf
sbb
adc
or
sti
push
jl
lret
jp
ss
mov
popa
in
xchg
outsl
cmp
lahf
add
push
int
or
das
jle
cmpsl
std
fdivrp
or
mov
aaa
mov
notb
xchg
push
cld
mov
test
shrl
sub
loope
or
jmp
mov
pop
sub
and
xor
or
leave
rol
aad
insb
sub
call
ret
mov
sbb
inc
cmp
fstps
ljmp
dec
ljmp
and
and
push
frstor
mov
jle
pop
hlt
mov
lret
and
dec
jmp
or
pop
xchg
imul
pushf
inc
add
and
test
shlb
out
in
addr16
pop
incb
push
lds
add
inc
mov
push
negl
dec
xchg
push
jl
je
or
sbb
jl
jo
rol
jo
mov
cli
sub
adc
lea
rclb
sub
push
in
popf
imul
jmp
sbb
clc
jo
xchg
xchg
jl
mov
sar
xchg
push
in
subl
pop
mov
das
mov
xor
repz
movsl
cwtl
ja
scas
mov
jl
outsl
xchg
xchg
ds
and
flds
cmp
xor
add
or
mov
push
ja
xor
fldl
inc
xor
leave
aas
rcrl
outsl
pop
push
icebp
mov
push
lahf
lcall
std
mov
daa
pop
xlat
mov
idiv
inc
rcr
adc
mov
fbstp
cmp
adc
push
cs
or
jno
pop
incb
xor
loopne
cmpsl
mul
mov
test
mov
jnp
xchg
adc
data16
mov
mov
mov
cli
jo
mov
adc
pusha
lods
push
movsb
test
lock
mov
add
jecxz
jae
or
mov
mov
test
loope
nop
inc
pop
test
jns
ret
inc
sub
pushf
mov
sub
ja
lret
jno
scas
dec
mov
testb
jge
jne
loope
jnp
cmp
push
out
popa
sarb
mov
decb
aaa
std
push
leave
dec
lcall
mov
shrl
movsl
js
mov
dec
cmp
xor
fcomps
loopne
les
sbb
dec
adc
dec
mov
js
fs
mov
mov
out
lods
cwtl
cmp
mov
in
sbb
or
or
adc
test
rol
in
sti
xor
jmp
mov
mov
sub
ds
daa
daa
dec
jl
jne
mov
subb
dec
popa
mov
cmp
or
repz
das
insl
stos
in
xorl
inc
out
test
repz
movsb
scas
xchg
aas
mov
xor
imul
scas
lods
fsub
xchg
and
push
enter
sub
pusha
jecxz
movsl
fildl
sbb
cwtl
jle
mov
test
test
cwtl
test
mov
in
and
mov
out
pop
outsl
movzbl
push
pop
repnz
push
adc
cmp
mov
fs
dec
pop
mov
push
aam
mov
xor
jge
xchg
std
dec
inc
mov
adc
mov
loop
aam
dec
insl
fsubr
or
dec
or
sahf
test
rolb
es
or
loope
call
push
pop
js
iret
xor
dec
xchg
mov
gs
fiaddl
outsb
jl
mov
rorl
lods
and
je
jg
push
pop
in
out
fdivs
addr16
ljmp
leave
inc
pop
jb
xor
fsubrl
imul
dec
mov
ds
ss
adc
repz
mov
insl
mov
notb
bound
add
dec
push
adc
push
bound
cmp
dec
sbb
loope
mov
mov
inc
dec
cmp
or
in
mov
mov
fistpll
iret
jge
ficoml
movsb
icebp
pop
xchg
icebp
aam
lret
and
add
xor
adc
scas
and
lret
shll
mov
repnz
cmpb
mov
aas
std
dec
cmp
cmp
cltd
dec
mov
push
adcb
ss
shlb
fdivrs
pop
std
test
sbb
push
cwtl
cld
lds
imul
jecxz
jns
int
sbb
pop
dec
add
jl
pop
xchg
popa
jg
ret
lods
ja
xchg
stos
pop
jo
jg
cmp
sub
pop
sbb
mov
dec
lahf
or
stos
or
int
test
jl
dec
mov
sub
ds
test
cmp
inc
pop
test
add
inc
repnz
inc
xor
mov
xor
mov
sti
out
mov
push
js
cwtl
add
mov
orb
arpl
inc
cmp
xchg
icebp
xor
cmp
mov
call
push
pop
pop
push
jge
xchg
push
pop
dec
jg
xchg
inc
loopne
inc
sahf
push
mov
leave
dec
sbb
add
mov
mov
fdiv
sar
nop
stc
and
test
cmc
addr16
xchg
mov
adc
xor
and
aaa
sarl
mov
loope
jle
xchg
jecxz
pop
push
adcl
rorl
cmpsb
sbb
scas
scas
push
in
jg
push
cs
mov
shlb
pop
repz
out
push
stc
decl
enter
insb
pop
mov
gs
inc
mov
cmp
mov
mov
sub
adc
sbb
jae
xchg
push
or
pop
les
mov
imul
jp
push
mov
les
or
imul
dec
push
and
pop
xor
dec
inc
adc
jb,pt
and
fldenv
dec
push
or
mov
stos
or
sub
leave
loopne
pop
test
inc
and
and
pop
xchg
mov
and
or
pushf
shlb
in
cmpsl
mov
cwtl
pop
repnz
push
je
sbb
test
pusha
sarl
lahf
mov
sbb
or
movsb
movsl
pop
bound
pop
ficomps
push
push
sbb
loope
nop
insb
ds
cltd
or
and
mov
pcmpeqd
or
inc
fsub
push
pushf
out
les
and
add
js
lods
inc
adc
push
or
shl
push
mov
inc
dec
fnstsw
lods
add
inc
rclb
in
and
xchg
xchg
fidivs
bnd
leave
and
movl
incl
pop
adc
push
test
dec
lret
aas
leave
xor
popl
jle
lcall
inc
mov
mov
scas
jbe
rcl
or
cmp
mov
pop
sbbb
or
or
test
loopne
mov
pop
xchg
out
jno
push
push
cs
pop
mov
xor
fadds
mov
lahf
push
notb
push
cltd
or
push
sub
mov
sti
mov
dec
jae
sub
call
pop
pop
daa
inc
or
push
clc
xchg
lret
pop
jne
inc
push
sub
and
xor
jno
sbb
xchg
movsl
cld
data16
popf
lret
and
fisubl
data16
es
lret
cltd
cmp
cmp
or
push
out
fmulp
xor
or
cmp
loope
xlat
sub
dec
mov
xor
mov
jl
lea
sbb
testb
pop
jo
add
rclb
sbb
fs
cs
aad
add
fs
test
loope
insb
cmp
xorb
xchg
in
pop
adc
daa
stc
mov
push
xchg
xor
sbbb
ds
adcb
aad
dec
fcmove
divb
call
inc
les
jno
fwait
cs
lock
out
popf
call
ret
dec
repnz
out
and
fcompl
or
inc
frstor
mulb
out
orl
jecxz
aam
inc
lods
enter
in
mov
jbe
das
stos
push
adc
or
inc
stc
hlt
and
mov
sbb
fs
mov
cltd
rcrl
lahf
push
insl
icebp
test
movd
js
and
inc
xchg
or
mov
xchg
fisubl
mov
int3
arpl
dec
push
fsubs
cmp
in
pop
ss
jns
push
and
test
mov
mov
and
and
movb
sbb
shr
cltd
push
mov
sahf
xchg
std
fmul
xor
les
imul
cmc
and
data16
dec
and
mov
aad
leave
cmp
pop
xchg
mov
push
test
push
add
dec
sub
mov
nop
push
inc
mov
or
mov
jo
in
jae
fwait
aas
mov
mov
loopne
es
enter
xor
lret
mov
pop
std
jecxz
and
gs
add
fsubr
out
pusha
test
push
ret
sbb
push
imull
movsl
cld
lods
cmp
insb
mov
sbb
mov
adc
rorl
dec
orl
fdivrp
movsb
lods
or
ficoml
pop
xchg
lock
call
scas
inc
jecxz
or
adc
js
cs
jae
mov
ret
repz
jo
nop
into
sbb
cmpb
inc
mov
add
in
cmpl
aaa
jo
xchg
jge
mov
or
ds
icebp
loop
push
pop
inc
lahf
ds
mov
xor
and
ret
jbe
dec
cwtl
aad
jbe
daa
mov
scas
jle
ss
jecxz
aad
aas
xchg
xor
repnz
hlt
push
or
scas
xchg
les
xor
movsl
fsubp
adc
pop
pop
arpl
leave
insb
cmp
pusha
sbb
cmp
into
and
cmp
popa
or
cmc
cmp
pop
jno
lea
jmp
fbld
add
sub
lahf
push
stos
mov
dec
mov
fsubs
lcall
je
or
imul
outsl
mov
orb
cmp
cmpsl
sbb
or
jnp
aaa
pop
jo
cli
and
or
push
pop
pop
jno
in
push
iret
xchg
aaa
cmp
xor
jns
leave
hlt
push
fmuls
adc
popf
aaa
xchg
cmc
insb
jmp
repz
std
jp
in
lds
xchg
subl
inc
dec
pop
xchg
mov
cwtl
in
cltd
hlt
pushf
mov
or
sahf
dec
pop
ss
enter
xchg
loopne
pop
and
aad
fists
inc
cltd
or
cmp
test
outsb
mov
jle
mov
outsl
mov
cmpsb
or
mov
mov
loopne
fistpll
dec
dec
dec
cmp
ja
push
int3
negl
popa
mov
adc
data16
and
mov
mov
mov
mov
in
inc
dec
stc
mov
dec
out
insb
mov
or
adc
insl
ss
mov
jnp
test
push
fstpl
xor
push
test
ja
push
lret
mov
insb
and
push
cs
xor
roll
jo
jno
movsb
cmp
stc
mov
cmp
and
inc
inc
mov
sbb
inc
lcall
jae
idivl
fcomps
test
int
mov
pop
int
or
repz
cli
xchg
fsubrs
out
roll
movsb
xchg
lods
insb
stos
loope
dec
sub
xor
into
addr16
ret
gs
pushl
adc
mov
outsb
inc
hlt
or
mov
xor
mov
xor
or
mov
jne
mov
loopne
es
out
or
xlat
inc
lcall
push
pop
testl
in
inc
and
loope
add
pop
addr16
lahf
arpl
out
pop
xorb
or
xor
fsubrl
jb
adc
ret
inc
scas
push
addb
and
fsubrl
cmp
push
enter
jne
cmp
mov
rcl
add
testl
je
fcmovb
ljmp
aad
pop
jecxz
test
xor
mov
mov
dec
hlt
inc
loop
push
sbb
cld
fsubl
fisubl
push
cmpsl
xchg
sub
pop
js
jecxz
or
xchg
push
leave
in
dec
rcrb
test
enter
cwtl
lods
and
sti
sbb
mov
int3
xchg
inc
sbb
jl
popa
mov
iret
stos
inc
cmc
mov
and
xor
push
mov
cltd
test
xchg
jge
and
cmp
movsb
popa
jb
mov
cwtl
arpl
add
inc
xor
out
xor
aas
xchg
pushf
pop
push
xchg
aad
loopne
lock
dec
vpsrad
push
insl
ret
cmp
loopne
out
js
mov
jle
dec
mov
stos
ret
dec
jp
test
sbb
cli
sbb
mov
insl
or
mov
imul
sub
pop
addl
and
xor
nop
adc
add
pushf
push
and
lahf
inc
lods
sbb
mov
rcll
push
repnz
mov
in
ror
mov
cmpsl
push
inc
jno
test
mov
push
aas
fists
adc
cli
push
or
jns
cld
inc
lods
dec
fwait
mov
push
scas
or
xchg
fisubs
mov
aas
xchg
movsb
ja
adc
lret
into
pop
test
popa
or
les
lds
xchg
sub
jae
call
dec
pop
ficompl
clc
sar
das
das
gs
push
lock
mov
addl
aaa
pop
iret
test
enter
test
paddd
faddp
call
sub
or
dec
push
ss
or
subl
imul
in
lock
in
inc
sbb
stos
or
psubsw
int3
inc
xor
fidivrl
data16
std
sub
jecxz
mov
cmove
out
iret
movl
lock
subl
in
loopne
push
cli
pop
xlat
xchg
xchg
sarb
in
repz
popa
dec
inc
aas
pop
dec
inc
cli
in
adc
sbb
addr16
imul
movsb
aas
xorb
add
cld
inc
lahf
stos
jno
into
scas
jo
out
jmp
rcrl
insb
fiaddl
sbb
cmc
out
pop
dec
adc
inc
sub
inc
cmp
mov
xor
call
nop
and
stos
clc
popa
insb
popf
xor
imul
out
mov
in
adc
stc
pop
notb
rcr
int
pop
insl
jbe
push
repz
sti
in
aad
add
test
cmpsb
test
sub
rdtsc
and
add
fwait
jae
lods
mov
pushf
ljmp
xchg
pop
add
adc
nop
loope
pop
das
es
ss
aam
pop
pop
mov
leave
xlat
clc
xor
cli
fstl
dec
nop
out
arpl
fistl
dec
mov
int
jmp
cld
ja
repnz
hlt
cmp
imul
test
stc
fcmovu
xchg
push
sub
xor
scas
sahf
sub
xchg
mov
sahf
in
inc
subb
jg
sti
pop
je
bound
pop
sbb
sub
pop
pop
rcrb
adc
pushf
lods
aad
xchg
inc
sbb
mov
inc
mov
push
insb
pop
xor
add
notb
sbb
dec
stc
mov
sti
mov
push
xchg
cmpsl
cmpsl
loope
or
add
push
push
das
cmp
jno
test
xchg
rorl
mov
dec
pop
xchg
push
pop
mov
insl
ljmp
ret
and
ja
xchg
ficoms
js
shll
addr16
stc
or
or
sbb
mov
out
push
loop
out
inc
sbb
insb
xor
testb
jne
push
pop
lahf
xchg
popf
ret
inc
jge
dec
mov
aad
push
test
fsts
mov
aam
xor
fs
cwtl
iret
out
ljmp
push
lods
push
xlat
sub
pushf
ss
and
inc
inc
imul
push
outsl
lea
mov
aam
sub
dec
fbstp
outsl
test
sub
ljmp
hlt
inc
les
fdiv
cli
and
pop
pop
mov
push
insl
jnp
xor
adc
adc
xchg
inc
fsubs
in
or
xor
add
xor
pop
ret
jno
sub
xchg
inc
roll
fdivs
movl
fwait
pop
mov
andl
fcomps
mov
jl
dec
cmp
xchg
inc
pop
enter
aas
adc
add
jl
inc
outsb
jecxz
jecxz
aaa
push
sbb
mov
adc
popf
notl
xchg
fisttpl
sbb
out
ud0
sahf
xchg
or
xchg
fbstp
or
outsb
pop
xchg
adc
pop
mov
and
jp
pop
outsl
cmp
enter
pop
cmp
dec
pop
push
int
cmp
fstps
inc
cmp
std
sbb
dec
cmp
mov
sub
ret
jae
loope
lods
out
mov
and
into
inc
xchg
mov
pop
mov
push
xchg
or
jl
je
out
sub
pop
push
movsl
je
add
add
in
ljmp
mov
xchg
jbe
xchg
jne
mov
cwtl
lods
inc
repnz
add
fidivs
out
sahf
jecxz
cmp
add
dec
sti
nop
jns
out
test
jmp
adc
cmc
cli
and
sbb
jno
daa
cmp
mov
frstor
out
stos
mov
popfw
jae
fisubrs
out
push
loope
xchg
cmp
pop
xor
loop
loopne
push
lods
inc
pop
push
pop
in
pop
in
fldl
jnp
xchg
dec
mov
arpl
sbb
add
fmulp
jg
mov
push
scas
mov
cmpsl
sub
push
ds
in
cmp
dec
mov
pop
sbb
xchg
das
jp
gs
test
mov
mov
and
mov
xchg
jmp
cwtl
mov
jno
and
mov
add
jo
xor
shr
shrl
push
movsl
sbb
jl
inc
movsl
push
pop
push
sub
mov
or
inc
and
pop
cmp
xchg
leave
push
push
cmp
leave
push
cltd
inc
nop
int
shr
pusha
sbb
movsb
pop
cmpsb
icebp
xlat
xchg
fcomps
cmpsl
xlat
xchg
inc
or
idivb
xchg
cmp
in
pop
pusha
sets
xor
jmp
dec
lods
dec
mov
inc
inc
inc
fldl
les
pop
stos
test
jbe
jae
xchg
movsb
loopne
daa
lock
rcrl
je
stc
int3
scas
mov
xchg
adc
imul
rcrl
test
mov
loop
rol
xchg
jmp
enter
adc
call
mov
add
mov
dec
sarl
fs
xor
sbb
adc
mov
scas
stc
xlat
int
lret
jnp
popf
pop
hlt
and
test
mov
jae
or
mov
in
push
pop
xchg
fwait
jb
dec
cmp
inc
cld
daa
xor
shl
nop
xor
xchg
cwtl
mov
jmp
dec
pop
ds
out
popf
xchg
repnz
pop
inc
sub
scas
dec
xchg
sub
jmp
pop
push
daa
stos
adc
insl
pop
fmuls
push
outsl
daa
inc
jecxz
dec
jbe
in
stos
adc
push
das
jp
movsb
push
das
movsb
sbbl
inc
std
sub
les
inc
push
movsl
adc
fsub
xor
mull
or
or
lods
mov
cmp
jl
adc
add
jns
sbbb
jae
xorb
sbb
lahf
and
sub
jnp
das
rorb
xchg
sub
add
pop
out
xchg
or
addb
js
mov
push
mov
lret
mov
fisubs
and
lcall
mov
stos
or
shl
mov
out
inc
lahf
mov
or
inc
push
push
std
xor
stos
push
sub
sti
mov
cmp
sahf
lds
sub
ret
or
int
adc
movsl
jmp
xchg
push
push
leave
dec
cwtl
inc
push
idiv
pop
or
xchg
rcr
inc
dec
dec
adc
int3
jbe
lahf
push
stos
out
jge
pop
pop
xchg
dec
mov
cmpsb
jno
inc
dec
or
popf
cmpl
mov
adc
jecxz
push
ffreep
loopne
bound
mov
cs
adc
leave
cmp
les
cmp
rorb
arpl
jecxz
push
pop
add
adc
enter
cmp
ror
pop
ja
adc
pushf
out
push
jg
mov
out
mov
mov
shlb
jnp
jns
fidivrl
div
jo
cmpsl
adc
inc
fistpl
iret
outsb
jge
inc
xchg
dec
mov
mov
jne
fmul
jno
aam
daa
out
push
xlat
mov
mov
fistpl
jg
push
aas
adc
xor
jae
data16
call
lahf
loope
rcrb
lods
aad
ljmp
xlat
test
inc
jge
dec
inc
test
das
cwtl
inc
orl
movsl
and
fnstenv
and
dec
sub
mov
sub
jmp
addr16
pushf
jmp
shr
push
hlt
dec
inc
push
xchg
hlt
loope
xchg
inc
imulb
sub
adc
push
cmc
sbb
ror
add
jns
sbb
jecxz
dec
imul
lret
pop
sbb
adc
inc
mov
mov
mov
xor
ds
imul
and
sub
cld
outsl
aaa
addr16
ret
into
nop
call
or
sbbl
cs
and
inc
mov
push
jecxz
dec
clc
sbb
inc
rdseed
xor
sub
jmp
aad
jmp
push
ret
clc
jb
xor
jmp
mov
fidivl
add
xor
jo
xor
subb
das
dec
lahf
popa
and
inc
loopne
sub
mov
sbb
aas
push
and
sbb
or
xchg
mov
xchg
cmp
scas
and
adc
fs
lods
add
mov
adc
xor
cli
in
adc
xor
loope
out
add
mov
xchg
pop
xchg
push
out
cwtl
sub
xchg
icebp
aam
mov
or
inc
lret
xchg
sbb
lret
jle
imul
sub
jne
pop
pushf
xchg
cmp
insb
lods
fstp
fldenv
dec
stos
lea
fidivrl
dec
iret
xchg
iret
mov
xor
xor
test
icebp
rcll
pop
mov
jb
sti
clc
or
lret
mov
adc
pop
nop
testb
cmpsb
add
add
xor
mov
push
popa
push
jne
mov
push
push
arpl
rcll
and
ror
xchg
add
lcall
or
and
pushf
adc
mov
and
xchg
repnz
ljmp
fs
addl
stos
sub
xor
mov
test
dec
fs
lock
addr16
movsb
sub
jge
push
mov
je
stc
es
jg
adc
outsb
adc
addl
mov
push
shl
fcmovnb
aas
jne
sbb
cmp
fsubrs
repnz
push
popa
insb
mov
sahf
sahf
icebp
ret
jnp
dec
out
insb
dec
stos
dec
out
ror
dec
imul
mov
inc
sub
push
inc
mov
pop
ret
sbbb
cmp
fs
xor
push
push
sub
mov
sti
inc
fs
js
les
lcall
clc
fstl
loopne
shl
mov
jmp
push
and
inc
je
test
mov
in
sbb
outsb
outsb
mov
cltd
pushf
and
fnsave
rcll
push
sbb
lret
dec
xor
out
scas
mov
jns
pop
mov
mov
cmpsb
mov
lahf
or
mov
icebp
imul
repz
stos
jns
sub
fs
or
sub
ljmp
jne
dec
cs
sbb
or
or
sbb
mov
loope
into
test
mov
outsl
mov
fcom
popa
enter
push
test
sbb
sub
and
cltd
mov
pop
adc
cmpsb
scas
addr16
mov
mov
inc
out
xchg
xchg
xor
insl
lcall
dec
mov
fcoms
outsb
inc
sbb
shrb
sbb
mov
mov
jo
or
add
pop
push
pop
push
mov
and
sti
outsb
cmp
dec
mov
repz
push
popf
ljmp
push
mov
nop
int
mov
divb
and
jg
dec
shll
push
push
push
in
pop
push
dec
ret
and
jns
inc
stos
subb
dec
sar
addb
sarl
outsl
jle
fwait
sbb
test
lret
pushw
sbb
push
pop
outsb
addr16
push
inc
xchg
mov
sysret
fsubrp
jae
daa
xor
or
scas
imul
mov
push
lahf
push
xchg
jae
in
or
xchg
repnz
pop
aaa
adc
dec
je,pt
sbb
sahf
out
sub
or
outsb
rclb
inc
add
fstpl
loope
push
ss
lahf
rolb
jnp
mov
call
ds
and
call
push
test
sbbb
mov
mov
mov
pop
pop
jno
outsb
fistpll
pop
inc
lds
dec
sub
ja
pop
dec
lret
sarb
mov
jbe
imul
movsb
repz
cld
aas
mov
sbb
insb
sbb
addr16
ljmp
mov
xorl
mov
movsl
xchg
jp
mov
xor
pop
xor
loopne
icebp
cld
push
arpl
mov
enter
std
ds
std
sub
loopne
jg
stos
jb
clc
cmpsl
sub
xchg
ss
and
pushf
dec
aaa
push
das
inc
outsb
jo
jae
iret
imul
pop
dec
pusha
xor
xchg
xchg
hlt
neg
ds
sub
out
or
ljmp
lahf
daa
test
sub
xor
pop
sub
push
or
jg
push
mov
cld
clc
loopne
fnstenv
fwait
das
adc
iret
lahf
pushf
addr16
in
flds
sub
adc
sub
shlb
popa
subl
jmp
out
mov
add
rorb
adc
insb
push
test
sbbl
mov
int3
mov
adc
sub
stc
out
into
in
lahf
lds
push
in
mov
popf
add
pop
mov
adc
inc
ljmp
in
aas
inc
sbb
iret
lret
and
pusha
mov
scas
loop
outsl
pop
cmc
jmp
push
out
mov
mov
mov
push
lods
out
sti
xchg
stos
test
adc
sbb
cld
mov
dec
xchg
or
add
xchg
inc
cmp
rorl
cmp
daa
cmp
lea
cwtl
ss
sbb
scas
data16
dec
arpl
cmpsl
mov
xchg
jo
pop
mov
gs
jge
fs
cs
dec
ficompl
push
mov
ljmp
jno
or
push
hlt
push
lods
inc
sbb
and
mov
outsb
sti
testb
stos
sbb
xchg
cmp
icebp
repz
in
rcrl
pop
sbb
hlt
call
fs
std
rolb
movsb
xor
or
popa
mov
cmpsb
cmp
out
das
pop
aad
mov
movq
dec
mov
pop
mov
inc
push
pop
daa
jbe
std
pop
inc
popf
stos
inc
orl
xor
fsts
cmp
dec
sub
xchg
xor
in
clc
pop
cltd
mov
test
add
gs
jp
mov
ss
repz
imul
and
mov
hlt
xor
call
push
stc
dec
cli
sbb
aam
icebp
stos
addb
lret
stc
mov
cmp
pop
aam
js
sbb
jp
or
out
ficoms
scas
fsts
cli
imul
mov
imul
das
and
xchg
out
nop
enter
add
jg
into
pusha
icebp
add
pop
filds
inc
lock
outsl
sarb
lcall
adc
xor
fwait
cmpsl
mov
mov
je
daa
push
out
ss
enter
sub
repnz
outsl
mov
mov
out
mov
jmp
mov
rorl
pop
pusha
push
xchg
or
pop
cmpsl
das
sub
sub
push
jmp
clc
mov
sbb
es
fwait
js
test
pop
insb
mov
push
mov
jae
jne
rcrl
loop
jne
imul
push
cltd
out
inc
adc
dec
shl
inc
or
sbb
jmp
unpckhps
mov
mov
cmc
fadds
nop
dec
ljmp
jb
push
sbb
shrl
mov
lea
mov
dec
call
or
sbb
or
or
inc
mov
out
xchg
pop
neg
int3
inc
outsb
inc
dec
mov
jg
jns
and
out
cli
daa
mov
daa
adcb
or
cmpsl
pop
aas
leave
addb
leave
sbb
ja
dec
jp
or
gs
pop
sub
aaa
jb
push
fstl
lret
push
xchg
push
mov
leave
adc
outsl
decb
in
call
rclb
out
sub
mov
mov
xor
mov
rorb
sbbl
gs
cs
push
dec
movsl
xor
aaa
in
repnz
ss
daa
xchg
xchg
sbb
inc
sbb
fisttpl
test
clc
jne
or
hlt
jecxz
mov
shlb
pop
dec
xchg
into
andl
adc
pop
shll
leave
pop
sub
mov
movsb
das
push
in
adc
ret
pusha
adc
outsb
sbb
lods
outsb
mov
dec
lcall
pop
xchg
test
jb
xlat
pop
pushf
ss
imul
mov
pusha
insl
cli
and
dec
jno
jmp
into
jmp
popa
stos
pop
or
mov
aad
inc
inc
arpl
and
sbb
test
je
dec
push
insb
jecxz
cmpsl
jo
mov
ds
or
xchg
ret
xchg
pop
ret
imul
sub
jno
in
mov
or
jle
adc
adc
fcomps
lods
xchg
lahf
fs
bound
loope
push
imul
fisubrl
sbb
lods
jnp
xchg
subl
or
push
jae
xor
lret
dec
test
lret
mov
sbb
outsb
icebp
lcall
xor
dec
aaa
pop
addr16
inc
mov
por
mov
roll
push
cmc
jb
xor
push
mov
dec
arpl
sbb
push
addr16
fildl
paddusw
repnz
lods
repnz
xor
nop
daa
jmp
sub
pop
fs
adc
mov
xor
sti
mov
pushf
mov
pop
push
and
lods
xor
xor
dec
jae
inc
movsl
loop
dec
pop
int
jbe
popa
adc
in
je
sti
pop
push
ljmp
add
dec
mov
xor
roll
repz
lret
jl
mov
mov
mov
cmpsl
jae
dec
jl
sub
add
xchg
xchg
lret
lea
in
pop
in
xchg
fmul
lret
cmpsl
inc
jp
push
add
fldl
fmull
or
rol
lods
adc
mov
scas
or
add
cmp
andl
dec
ds
and
sbbl
sbb
pop
push
ficoml
cmpsb
ret
nop
sbb
test
repz
pusha
bound
fcoms
push
or
jmp
dec
or
xor
mov
lods
lret
mov
inc
push
mov
mov
jge
and
dec
mov
aam
outsb
loope
sbb
repnz
sbb
or
sahf
xor
stos
mov
sub
arpl
roll
mov
add
add
mov
push
mov
xchg
pop
xchg
in
pop
mov
leave
jmp
pop
inc
popa
pusha
and
sub
xlat
sbb
lahf
mov
push
cmp
fimull
cmpsb
rcll
push
scas
pop
add
xchg
pop
and
addr16
outsb
fnstsw
addl
popf
inc
aad
sbb
xchg
xor
push
mov
mov
lcall
add
std
adc
ss
sbb
or
movsb
in
sbb
push
and
push
jae
aas
inc
adc
subl
xchg
and
mov
addr16
stos
inc
arpl
jae
dec
sbb
push
sahf
xchg
jo
outsl
sahf
aad
icebp
add
and
inc
xchg
aad
mov
mov
fdivs
out
out
sar
mov
mov
fmuls
mov
pusha
adc
or
dec
scas
clc
lahf
cltd
cmpsb
scas
addr16
sar
cmpsl
incl
pusha
repnz
mov
push
mov
mov
jno
aam
inc
mov
iret
add
dec
out
jo
dec
dec
mov
push
in
jae
sub
repnz
pop
add
inc
bnd
xchg
sbb
andb
cmp
inc
rorb
jns
and
jecxz
ficoms
dec
xor
xor
push
xchg
out
push
cli
popa
or
mov
sub
sub
mov
cmp
icebp
loop
xchg
dec
and
fs
xchg
or
sbb
fwait
popa
lcall
fmulp
test
push
dec
clc
test
push
outsb
les
dec
iret
pop
ds
sbb
in
push
fld
pop
dec
inc
add
pop
cltd
add
sbb
fcmove
out
std
loop
sub
js
clc
lahf
sbb
les
add
enter
outsl
mov
mov
dec
stos
jns
bound
repnz
sbb
stos
std
outsl
popa
rcrl
jp
add
sti
cltd
shr
sub
gs
adc
dec
lea
outsl
popa
iret
xchg
cmpsl
cmp
fwait
and
cmp
out
push
movsb
inc
mov
fsubrl
cmp
cmpsl
clc
test
cmpb
pop
xchg
push
fwait
insl
ficoms
imul
aad
dec
ret
sbb
leave
ds
pop
pop
add
lcall
cld
jp
lcall
repz
cmpb
std
ret
in
js,pn
pusha
in
icebp
les
aam
dec
xchg
popa
adc
addr16
fistps
cmpsb
cmc
sub
daa
or
or
xchg
cltd
jecxz
loop
int3
or
mov
int
nop
loope
add
jl
loop
movsl
aam
mov
xchg
cli
mov
cmp
mov
daa
fs
fldenv
and
xor
adc
cmpsb
push
jno
push
aas
das
les
pop
xor
and
out
jne
repz
adc
cmc
frstor
add
repnz
aaa
das
pop
mov
inc
jl
gs
xchg
mov
jne
adc
xor
cwtl
outsl
cmp
mov
adc
pmulhuw
or
sub
fsts
adc
push
gs
jmp
imul
lret
stc
or
jne
and
xchg
pusha
ds
jae
flds
cmpsb
mov
arpl
pop
dec
mov
jb
int
mov
lahf
std
les
sahf
fidivrs
xchg
mov
scas
lods
dec
shlb
cli
stos
push
add
jne
lea
push
sysret
xor
jns
mov
sbb
lods
pop
aam
jmpw
iret
clc
aad
daa
mov
pop
xor
jno
nop
xchg
mov
sbb
and
jl
adc
call
lcall
cwtl
mov
call
pop
push
sbb
icebp
push
dec
fstpt
mov
mov
out
pop
sbb
lahf
fidivl
nop
xlat
push
sbb
ficompl
rclb
add
and
cld
cmp
scas
xchg
cmp
mov
mov
mov
aam
mov
clc
sbb
bound
xchg
mov
xchg
xor
in
movl
daa
fisubrl
cmc
clc
sahf
push
add
cmpsb
sahf
test
je
inc
stc
jno
lret
sub
je
push
addr16
lods
lock
loop
xchg
mov
icebp
dec
aas
fisttpl
sub
inc
ja
mov
inc
cmp
loopne
daa
xchg
sub
mov
js
pop
out
xchg
push
dec
lods
dec
or
int
xor
orl
sub
into
leave
xchg
addl
fisttpll
call
cmp
or
cmpsl
jo
cmp
stos
mov
fisubs
lock
sbb
inc
jecxz
xlat
movsb
sahf
cld
mov
mov
les
stc
adc
jmp
dec
int3
test
mov
mov
mov
data16
in
cmp
out
push
sbb
or
pop
out
repnz
into
out
pop
hlt
arpl
jo
xchg
jp
jecxz
xchg
add
cmp
cmp
cs
mov
out
jecxz
out
rclb
lret
out
mov
hlt
mov
xlat
push
jl
out
dec
mov
mov
fdiv
das
mov
inc
ds
sub
pop
cmpsb
loop
pop
push
xchg
mov
and
repz
cmp
inc
ljmp
mov
and
sbb
xchg
insl
cmpsl
xor
and
push
mov
out
cli
sub
and
sub
add
lret
push
shlb
jl
sbb
test
push
andl
stos
roll
inc
jge
mov
mov
dec
push
leave
inc
adc
mov
scas
adc
pusha
xchg
lds
push
or
mov
sbb
push
repz
inc
ljmp
lret
adc
mov
dec
scas
mov
sub
test
xor
mov
lods
lock
dec
mov
xchg
imul
cmp
adc
mov
fmul
sahf
inc
pop
adc
mov
pushf
cmp
cmpsl
das
sub
jbe
pop
mov
xchg
outsb
push
jne
fnstenv
outsb
mov
loop
mov
dec
addl
push
in
lea
cmc
dec
inc
push
aam
mov
sub
enter
sbb
ljmp
cmp
mov
sbb
shrl
sub
rcrb
and
push
rorb
adc
add
pop
stc
mulb
or
push
pop
add
stos
mov
leave
test
dec
cmp
lahf
pop
pop
addr16
jo
sub
loope
sbb
cmp
dec
mov
das
pop
lds
pop
popa
divb
out
xchg
fsubl
add
sbb
mov
test
pushf
imul
and
mov
jnp
outsb
mov
jae
sarl
pop
out
shll
adc
cmc
push
mov
xchg
sti
mov
push
pop
popf
outsl
shrb
lds
adc
or
ficoms
loopne
pop
jae
movsl
sbb
pop
xchg
jae
je
jecxz
xchg
or
ror
mov
sbb
je
testl
sarb
sbb
cli
loop
mov
mov
adc
pop
xchg
pop
in
pop
mov
mov
and
mov
into
sub
inc
jno,pn
dec
loop
cmp
movsl
push
inc
mov
pop
scas
sarl
sub
ljmp
mov
add
test
xchg
xor
idiv
lea
clc
mov
shrb
stos
xchg
jnp
push
inc
fisttpl
daa
sub
sbb
popf
icebp
sub
add
es
in
sub
mov
push
or
int
lods
pop
pusha
adc
push
inc
test
stc
push
xorb
stos
pop
mov
cld
mov
sti
inc
out
sbb
mov
jo
pushf
add
xor
cs
les
adc
in
and
sub
rcrb
data16
outsb
lret
ret
lcall
or
enter
cmc
and
ljmp
or
jbe
dec
ret
outsl
push
jae
jmp
pop
dec
out
sbb
xlat
mov
adcl
mov
in
ret
dec
fcomi
add
jp
jle
sarl
jns
add
nop
sub
xor
in
mov
jbe
iret
insb
push
and
cltd
cwtl
add
adc
dec
jle
mov
push
xor
arpl
push
dec
pop
fwait
jbe
jo
dec
mov
scas
and
sbb
xchg
cmp
arpl
mov
pop
mov
jne
daa
in
pushf
enter
fs
pop
or
fisttpll
adc
jne
inc
mov
pop
pop
ja
dec
mov
cmp
mov
sti
dec
pop
fimull
out
imul
xor
pop
mov
je
mov
cmp
popa
ss
cmp
test
or
push
push
inc
and
pop
xchg
cmp
fwait
rclb
testb
scas
mov
test
lds
lds
ss
mov
data16
pushf
sub
fisttps
test
loope
popa
xchg
cmp
or
push
stos
add
mov
gs
lahf
in
xchg
push
or
mov
cmp
cld
lret
shll
or
pop
loope
inc
ret
cwtl
int
jne
andb
jns
fwait
mov
lods
mov
cmc
fimull
sbb
jns
jle
popl
pop
fwait
mov
data16
cmp
cld
adc
pop
xchg
lea
into
scas
cmp
pop
decb
cltd
xor
xchg
pop
sahf
mov
xor
xchg
or
push
jbe
lock
mov
leave
shlb
shl
int3
adc
push
xlat
data16
dec
ret
pop
push
mov
fwait
insb
add
fldcw
iret
push
mov
dec
push
cmp
adc
cmc
inc
sub
sbb
call
fidivrs
es
fisubs
hlt
subb
cmp
loop
test
mov
in
xor
enter
or
cmpsb
addr16
les
out
imul
das
jl
es
xchg
dec
dec
cs
int3
cli
add
pop
inc
out
idivb
les
lret
aas
fisttpl
xchg
mov
cmpsb
jp
mov
sub
sahf
nop
sti
int
fmul
pop
rcll
mov
test
insb
push
sti
cli
idivb
repz
mov
sub
test
mov
sbb
imull
mov
lods
mov
jg
push
int
cli
sahf
scas
xchg
jge
fidivs
leave
mov
mov
divl
mov
in
mov
fisubl
pushl
fsubs
cli
dec
dec
addr16
pop
dec
adc
shl
mov
popf
jns
and
pop
mov
dec
hlt
rcrb
mov
xor
mov
scas
loopne
stc
add
xchg
or
xrelease
popa
in
push
xchg
daa
inc
mov
int
lret
xchg
mov
sbb
xor
push
insl
mov
loop
loop
push
xor
loope
in
out
popf
xor
mov
inc
push
fnstcw
mov
call
popf
popf
movsl
fists
ja
sar
xchg
fisubl
dec
and
dec
xor
lret
dec
popf
pushf
into
mov
mov
add
dec
mov
and
fstp
dec
movsl
fnsetpm(287
cltd
mov
xor
xadd
stc
dec
and
mov
in
out
cmp
mov
push
xchg
or
lcall
icebp
test
inc
jecxz
cmpsb
outsl
or
out
mov
dec
dec
mov
arpl
push
daa
jp
jle
pop
jle
xor
jl
xchg
and
push
pushf
les
enter
pop
les
adc
mov
sub
pusha
fs
and
xchg
cmp
in
jno
nop
mov
es
mov
and
mov
jb
pop
inc
punpckhqdq
stc
shll
pop
push
fmuls
xchg
dec
imul
jbe
and
sbb
or
mov
lock
adc
cmc
outsl
imul
popa
std
lret
xchg
xlat
mov
xor
add
daa
mov
bound
cmp
loope
inc
and
sub
ret
add
sbb
in
jbe
jae
in
push
enter
mov
jbe
movsb
and
xor
icebp
jmp
outsb
in
pop
jnp
push
push
inc
inc
xor
mov
or
lret
mov
mov
fstpt
mov
in
push
test
rcll
cli
pop
push
lret
aam
dec
int
mov
addr16
mov
mov
jecxz
mov
test
div
in
fs
cmp
sub
mov
lds
into
push
jg
jnp
xor
dec
cmp
scas
fldt
jne
mov
push
mov
lock
mov
hlt
lcall
mov
cmp
insb
jge
pop
pop
adc
loopne
mov
and
movsl
or
push
cmc
xchg
jb
jbe
dec
mov
inc
stos
andb
pushf
cmpsl
lret
xchg
push
inc
and
sahf
push
and
jns
xor
out
sub
lods
mov
sbb
cmp
lret
gs
or
addl
sub
inc
push
fsubl
bound
jns
cwtl
fwait
cld
xor
adc
lahf
cmp
adc
test
and
cmp
adc
push
push
cmpsb
cwtl
movsl
push
scas
push
adc
ret
mov
mov
mov
fstpt
push
jnp
and
mov
loop
call
dec
xor
call
jmp
jbe
movsl
mov
adc
ds
sub
add
cmp
in
mov
jecxz
xor
jmp
aaa
pop
int
fstpl
push
push
mov
in
or
mov
cld
mov
jmp
mov
cmpsl
pop
fnstcw
sub
xor
lds
mov
enter
fisttpll
jmp
adc
loopne
add
stos
fcmovne
cmp
psubusb
dec
xchg
in
je
outsl
xlat
jmp
or
mov
ror
and
mov
pushl
push
push
addb
testb
xor
jmp
jne
iret
add
mov
adc
push
aam
sub
pop
hlt
mov
xor
lret
iret
rorl
cs
or
and
rcrl
cmpsl
jo
push
ror
dec
decl
aam
lahf
shl
cmpsl
mov
xchg
js
mov
addr16
enter
jne
jb
cli
xchg
popf
or
clc
sahf
lret
sub
or
aas
push
xchg
mov
mov
inc
pmuludq
sbb
js
xchg
lods
xacquire
mov
ret
nop
rcll
jns
pop
xchg
inc
js
icebp
movsl
inc
mov
sbbb
inc
shll
jns
push
inc
outsb
mov
xchg
lret
cmp
adc
loope
cmc
stc
jle
test
mov
adc
or
pushw
aaa
push
sbb
dec
xchg
sbb
in
ss
lret
mov
inc
gs
sbb
pop
shrb
push
cwtl
popf
sub
inc
roll
mov
and
notl
adc
push
sahf
mov
addr16
xchg
insl
inc
dec
mov
cwtl
fsubl
push
sub
sbb
sbb
out
addb
add
inc
jge
jle
xor
push
ss
in
aas
loop
lcall
ficoms
aaa
mov
or
push
jle
outsb
lahf
in
loopne
cmp
cld
mov
mov
xchg
xor
sub
mov
push
cmp
fmull
or
out
mov
xor
cmp
add
sahf
gs
mov
js
insb
xchg
mov
iret
not
jne
xchg
xor
xchg
and
xchg
jo
mov
mov
jmp
xor
movsl
dec
add
int
stos
mov
sbb
cmc
sub
ljmp
ljmp
into
sti
jnp
mov
or
stos
js
fadd
or
mov
loop
cltd
xchg
or
pop
lcall
cwtl
in
mov
cmpsb
push
pop
sbb
and
shlb
inc
icebp
jp
mov
aad
dec
sub
dec
out
jecxz
fbstp
mov
std
rorl
jae
inc
shrb
call
icebp
out
pop
sub
repz
jmp
call
or
roll
mov
je
mov
inc
dec
sub
je
inc
stc
ret
sbb
dec
call
mov
daa
mov
hlt
pop
push
cli
adc
aam
fstps
cmp
movsl
roll
mov
pop
or
out
push
mov
cs
testb
std
mov
jbe
ret
test
les
hlt
rsm
push
or
outsb
xor
pop
shll
ret
pop
pop
enter
cmc
and
cs
add
les
lret
int
xor
pop
flds
push
mov
sbb
call
xor
fs
mov
add
mov
cmp
ror
pop
pop
ja
add
data16
xor
mov
mov
movsl
add
pop
bound
jmp
xchg
add
fwait
jecxz
out
sti
das
pusha
jg
jne
xor
xchg
push
sti
sbb
stos
int
mov
push
sarb
cmc
mov
nop
inc
sti
pusha
inc
int3
dec
neg
adc
inc
test
push
ficomps
jne
outsb
sub
ret
jl
dec
pop
rcrl
push
push
mov
aam
push
jno
push
jae
test
xor
les
stos
hlt
mov
inc
adc
test
cmpsl
in
jmp
jo
sbb
lcall
sahf
xlat
pop
inc
mov
xlat
fsubrs
sub
push
adc
fisttpl
push
xor
xchg
mov
dec
add
pop
xor
in
stos
sbb
movsb
inc
xor
push
lcall
push
mov
mov
push
sub
clc
adc
fsubl
sub
add
out
clc
push
xchg
ss
call
jge
fistpl
pop
add
xor
push
and
lods
push
sti
add
roll
jl
clc
int
or
adc
sbb
xor
push
lods
mov
cmpsl
scas
movsl
adc
push
ss
sbb
xchg
mov
dec
jo
mov
clc
lea
enter
lcall
aad
jp
inc
daa
jno
cli
sbb
fcomp
xchg
insl
xor
jmp
inc
cmpsb
ret
popa
into
pop
dec
push
out
xor
cmp
psubd
movsl
sbb
aad
mov
lahf
xor
cli
cltd
jo
adc
adc
js
shlb
cmp
adc
out
mov
pusha
xchg
sbb
cmpsl
sub
aas
pop
or
inc
add
dec
stos
call
adc
inc
out
sbb
jbe
cmp
mov
arpl
add
sub
pusha
xor
cmp
fadd
test
jae
lret
shl
lods
out
mov
pushf
dec
jnp
loopne
sub
jnp
and
xor
push
fs
jp
nop
xlat
mov
fildl
inc
jl
lea
subb
cwtl
stos
and
dec
xchg
loopne
shll
cmp
and
test
or
mov
adc
aaa
jp
sub
loop
push
test
fistps
jle
stos
xchg
sub
jns
push
je
fdivr
pop
jae
xlat
clc
out
pop
pop
and
ljmp
jne
xchg
aas
aam
lods
pop
add
jne
inc
push
mov
sub
adc
jmp
aas
xchg
add
cld
out
aaa
and
inc
dec
rorb
dec
movsl
xchg
gs
enter
jno
sbb
jae
nop
pop
mov
mov
dec
pop
stc
mov
cmc
adc
jbe
mov
in
fidivrs
mov
popf
mov
xchg
mov
dec
dec
call
xor
jge
and
leave
pop
push
je
mov
pop
sbb
int3
les
adc
daa
sti
pusha
cmp
cs
push
fimull
insb
sahf
dec
fsts
jns
and
mov
leave
jne
adc
pushf
out
js
pop
mov
xor
cmpsb
test
flds
push
push
orb
test
jne
fsubs
pushf
mov
enter
cmp
std
add
in
xchg
xchg
inc
cli
jne
pop
jmp
sbb
into
xchg
in
mov
leave
orb
mov
mov
xchg
out
mov
pop
cmp
ja
aam
stos
fildl
aaa
push
push
adc
mov
adc
out
xchg
out
push
js
fsubrl
clc
adc
pop
daa
loope
pop
xor
mov
insl
inc
out
inc
rep
stos
jp
push
pop
fmul
sub
shll
push
stos
arpl
bound
mov
jle
cwtl
cs
pop
fisttpl
imul
jbe
jbe
sti
xchg
sahf
jne
addl
clc
addl
jo
add
pinsrw
call
repz
leave
add
push
inc
mov
pop
xchg
loop
cld
xchg
pop
iret
imul
cmpb
ficompl
sar
adc
add
lods
std
test
pop
mov
aam
push
inc
fs
mov
pusha
hlt
pop
pusha
shlb
push
stos
sarb
jnp
jne
jo
cmpsb
into
push
mov
aas
inc
mov
movsl
sbb
rorl
inc
push
inc
mov
js
divl
cmp
sub
mov
jmp
outsb
xor
xchg
inc
iret
dec
xchg
push
adc
mov
or
push
jo
jle
sbb
leave
dec
pop
or
add
stc
outsl
andb
push
clc
jecxz
add
mov
jmp
leave
add
jge
enter
pop
pusha
clc
inc
xor
dec
inc
jge
cmc
mov
cmc
sub
xor
aad
aaa
push
sbb
fcoms
inc
nop
sub
cmp
pop
addb
loopne
pop
in
insb
mov
or
lods
sbb
inc
pop
inc
je
lahf
in
and
mov
ret
pop
pop
je
aam
pop
and
mov
push
mov
mov
lods
mull
ret
mov
repnz
in
jle
xchg
add
add
push
loopne
cmp
push
popf
fldenv
mov
outsl
test
cwtl
movl
insl
gs
push
sub
sub
loope
push
and
imul
jne
incb
fsts
mov
lea
sbb
icebp
lahf
jg
jnp
sbb
call
shlb
push
pop
push
sbb
mov
inc
repnz
push
inc
jnp
pop
dec
aaa
xchg
jecxz
or
in
dec
pop
vmptrst
push
pop
lret
xor
or
mov
enter
adc
das
dec
xchg
or
dec
movsb
fimuls
js
outsl
xchg
xor
shrl
insl
cmc
mov
jbe
out
pop
fs
pop
mov
bsf
stc
or
fwait
jbe
jp
sbb
fisubs
shll
or
sub
aam
xor
mov
lahf
pusha
in
lea
mov
add
jl
and
jg
cmp
push
inc
test
loop
mov
in
or
dec
sbb
decl
ret
int3
loop
cli
ret
dec
pop
stc
je
jl
dec
std
xchg
sub
arpl
fcmovnu
mov
mov
psraw
ss
outsl
or
sbb
mov
xor
mov
fwait
xor
inc
push
std
xor
imull
aaa
mov
cmp
sbbb
daa
repnz
inc
jae
rorl
adc
int
cmp
mov
jae
jno
and
lahf
add
lahf
and
jb
addr16
repz
mov
fisttpl
jbe
pop
out
cmp
shl
pop
jae
gs
ja
mov
cltd
subl
imul
loop
lods
shrb
and
mov
loop
sub
ds
mov
mov
sbb
add
aas
cmp
cmpsb
jecxz
push
push
sarl
filds
xor
mov
loope
dec
idiv
test
insb
pusha
xchg
lret
aas
movzwl
pushf
or
out
cs
cmp
mov
subb
mov
cmc
inc
sub
sbb
andb
dec
add
xor
push
loopne
pop
loope
xchg
lods
and
pop
fwait
cmp
add
add
xor
movsb
aad
mov
sub
fnstenv
outsb
mov
or
mov
inc
add
sbb
fiaddl
gs
imul
jns
cwtl
mov
sbb
mov
out
add
mov
hlt
stc
out
cmpsb
ret
mov
inc
bound
iret
jb
or
ror
sub
jb
mov
jl
and
enter
xchg
mov
and
jg
push
in
inc
pusha
pop
lods
cmp
mov
outsl
aas
jne
cmpsb
popl
clc
mov
stc
xchg
push
or
or
into
popa
shrl
int
xor
sub
cmp
cmp
cmp
jns
push
sub
rcl
inc
inc
test
mov
jle
negl
repz
and
cmpl
jb
mov
mov
je,pt
jnp
fsub
arpl
or
cmpsb
leave
cwtl
ja
int3
mov
inc
mov
jmp
addr16
pop
jo
mov
es
jno
and
or
cltd
and
and
pushf
xchg
push
jle
dec
leave
ret
mov
xchg
push
notl
shr
pop
or
imul
ja
jecxz
jb
sti
xor
ss
fwait
mov
add
std
nop
into
push
sbb
pop
addb
push
jge
mov
jne
mov
dec
sbb
stc
call
sbb
jmp
jmp
imul
fdivs
andb
xor
dec
mov
les
inc
add
test
add
fptan
iret
pop
sbb
sub
in
sahf
inc
jo
filds
lret
push
mov
fdivl
orl
mov
sahf
int3
inc
adc
not
je
mov
pop
fstpl
mov
push
mov
adcl
das
addb
jne
adc
xor
add
push
inc
dec
adc
mov
jp
add
js
push
push
les
cmp
jno
adc
sub
or
shll
rol
lret
test
addr16
in
ljmp
mov
aaa
mov
pop
lcall
ja
ds
push
cwtl
pop
inc
pushf
adc
sbb
sti
enter
pop
pop
sub
mov
iret
dec
rolb
jne
data16
pop
fmuls
jo
mov
sub
push
gs
inc
lahf
clc
lret
ss
adc
and
pushf
adc
sub
in
xchg
adc
inc
mov
movsb
mov
loope
jmp
test
das
mov
jne
sbb
repnz
pop
out
jbe
inc
cmp
stos
cmp
int3
loope
mov
push
inc
jecxz
pop
jns
jg
mov
sub
je
aam
lret
mov
out
dec
hlt
push
clc
nop
inc
jl
and
and
in
scas
xor
repnz
mov
cmp
xlat
sbb
les
fdivrs
mov
fdivrp
js
out
enter
jmp
mov
mov
and
xor
ljmp
ljmp
push
outsl
cmc
pop
pop
sbb
lret
cmp
xchg
pusha
mov
xchg
iret
shlb
sbb
jge
fbld
out
int
xchg
xor
inc
dec
fiadds
lock
mov
jecxz
and
ds
icebp
sub
xchg
or
jo
data16
xadd
push
jbe
mov
mov
out
pop
or
mov
out
inc
dec
movsl
mov
xchg
and
push
mov
subl
pop
out
dec
int3
fsubrl
repnz
jne
cmp
push
es
xor
and
inc
cmp
cmpb
xchg
fcomps
fmull
cmp
or
test
bound
sar
pusha
cmp
or
ljmp
aas
ljmp
rcl
and
popa
pusha
add
and
adc
ja
hlt
and
mov
adc
adc
es
in
int3
lods
mov
std
mov
daa
or
add
adc
mov
jo
sarb
inc
push
adcb
jle
enter
xchg
xchg
rclb
sbb
imul
jmp
popl
or
add
out
sub
enter
aad
or
movsl
lret
lret
add
sbb
dec
pop
pop
lods
dec
dec
or
aaa
sub
xchg
fbld
repnz
inc
sbb
adc
clc
es
adc
ret
cmp
arpl
jno
sub
push
jns
movb
push
arpl
stc
lret
int3
test
out
cltd
cmp
sbb
xor
fdiv
cmpsb
add
mov
repnz
pop
pop
sbb
push
sbb
pusha
jl
push
hlt
test
pop
or
xchg
insb
pop
mov
xchg
sbb
imul
stc
cmp
aam
pop
mov
ret
or
loop
adc
inc
mov
dec
jb
fnstsw
mov
out
out
rorl
lods
iret
cmpsb
std
jne
outsb
lret
push
pop
int3
and
ljmp
xchg
popa
mov
mov
cltd
faddl
cld
js
cmp
cld
fmulp
pop
fstpl
fwait
leave
cmp
ret
in
lea
inc
push
dec
push
adc
xor
arpl
add
push
lods
xchg
or
add
cmp
aad
or
in
outsl
leave
daa
pop
call
testb
jmp
js
push
sub
inc
jle
fcom
push
mov
jle
lods
cmp
mov
dec
pop
das
add
cmp
adc
bound
pop
lahf
movsb
xchg
cmpsl
imull
stc
add
call
in
dec
cltd
mov
aas
xchg
lahf
pop
mov
cmp
pop
inc
insl
pop
dec
push
lret
repnz
test
lret
jns
sti
insl
loopne
js
push
push
jo
or
int3
sub
adc
popf
lock
shr
or
into
cmpsb
add
lock
dec
sub
sub
jp
xchg
adc
icebp
inc
cli
add
xchg
stos
fildll
pop
das
arpl
lret
pop
stos
arpl
fdivr
in
cwtl
inc
stos
xor
jno
cs
aam
popa
adc
jmp
and
adc
hlt
mov
imul
pop
xchg
xchg
sbb
roll
cmpb
out
dec
fwait
push
stc
hlt
adc
jo
call
adc
popa
repz
pusha
jmp
loop
incl
sbb
cmc
shr
movsb
dec
xor
push
xchg
sbb
pop
lea
push
dec
jg
adc
inc
mov
ss
push
js
pop
and
cltd
push
mov
sub
pop
and
sahf
je
push
and
sub
fiadds
pop
mov
adc
ss
stos
sbb
push
cmp
cltd
out
loope
mull
cli
inc
loop
bound
and
movsl
mov
sub
aaa
jno
ss
pop
add
hlt
nop
shl
dec
aaa
mov
dec
jns
out
imul
sub
dec
push
xorl
cmp
in
rcl
pop
fidivrl
out
or
stos
mov
push
lea
jb
cmp
test
lods
xchg
dec
mov
mov
mov
or
xor
cli
daa
mov
loope
adc
push
jp
sbb
mov
rcrb
stos
xor
stos
pop
jge
loop
add
xor
arpl
out
ja
aad
jb
add
sti
mov
sbb
cmp
fwait
sub
fstl
cmp
out
sbbb
xlat
into
xorb
movsb
cmp
jp
jle
fiadds
add
jmp
mov
jne
flds
imull
insl
mov
push
mov
pop
loope
dec
lret
push
stc
pusha
in
push
sbb
fwait
imul
jg
sbb
and
and
push
jge
sbb
xlat
and
cmp
test
sub
and
push
mov
inc
stc
fld
mov
jb
sbb
add
nop
ret
dec
xor
fisttpl
dec
sub
out
xor
dec
out
mov
js
lret
ss
mov
data16
xorb
push
dec
fistps
inc
aad
ds
adc
cmp
mov
lock
pop
es
lds
shlb
sbb
addb
jo
xchg
pop
fsubr
push
xchg
movzwl
cmc
sub
into
aad
mov
scas
or
mov
packssdw
inc
sti
dec
and
fcomps
sub
repz
add
add
sub
sbb
iret
pop
test
jle
xchg
ss
xchg
sbb
push
adcl
loopne
xchg
jge
cmp
pop
xchg
je,pt
adc
out
into
sub
mov
stos
mov
rol
lcall
stos
xchg
cmc
jl
les
test
push
stos
fildl
dec
adc
rcr
dec
fstpl
mov
jle
into
iret
loopne
dec
sbb
mov
gs
push
stc
ljmp
sbb
sub
shl
sbb
and
adc
ret
mov
wbinvd
in
xor
add
pop
es
ja
sub
sbb
data16
int3
imul
fs
hlt
lahf
xlat
andb
sbbl
inc
imul
es
dec
mov
les
and
js
fstpt
push
mov
xorb
int3
mov
push
ja
fmul
lods
jmp
call
out
iret
and
inc
insl
xchg
decb
xchg
clc
sub
push
and
adc
popl
stos
xchg
cmp
adc
cmpsb
dec
or
mov
pop
or
lds
push
jne
adc
ljmp
cmc
pop
add
dec
xor
scas
dec
mov
stos
pop
cmc
pop
xor
lods
idivl
sub
inc
xor
aam
ret
jge
out
bnd
xchg
pop
push
scas
jle
add
dec
jnp,pt
xchg
inc
cmp
pop
das
dec
dec
insl
add
dec
mov
xor
add
xor
sub
mov
data16
stc
mov
mov
cs
jg
into
movsl
sub
mov
fldl
mov
outsl
mov
idivb
push
add
xchg
stos
xor
mov
fisttpl
or
call
movsb
loope
orb
cmp
pop
addr16
cld
enter
loopne
dec
sarl
jne
cmc
xchg
mov
stc
dec
mov
and
push
daa
imul
sbb
pop
test
push
mov
outsb
push
jp
out
das
stos
and
sti
sbb
adc
cld
xlat
fwait
jp
mov
xor
divl
pop
call
sub
stc
test
ljmp
dec
push
insl
and
inc
cli
aaa
clc
mov
int
sub
cmp
lret
pop
push
pop
fsubrs
mov
rcrl
enter
mov
add
int3
lea
mov
or
stos
mov
jecxz
push
daa
subb
mov
jne
popa
out
jae
sbb
lcall
repz
inc
inc
jns
imul
sbb
mov
fcomps
out
pop
jge
les
xchg
call
xchg
inc
jbe
inc
add
cltd
jbe
scas
aad
xor
cld
shr
inc
mov
fiaddl
inc
xchg
nop
outsb
sub
andl
jae
mov
outsl
notl
xor
sbb
ljmp
mov
mov
out
das
in
cmp
cmp
leave
inc
sub
and
ficomps
xor
scas
mov
lcall
icebp
fsts
add
inc
or
xor
lret
adc
scas
mov
xchg
test
fsubs
in
lcall
push
cmp
xchg
cmc
fsubl
mov
cmp
pusha
add
pop
or
dec
cltd
pop
or
dec
xor
adc
push
pop
outsl
ds
mov
cmp
cmpsl
add
adc
stos
adcl
loop
hlt
xor
popl
sbb
sub
xor
mov
insb
dec
pop
clc
jo
cwtl
pop
push
cmc
push
loope
out
outsb
cmc
or
and
adcb
jmp
sbb
push
sub
dec
xchg
in
mov
mov
repnz
test
je
int3
sub
loop
es
push
jbe
cmp
sub
or
mov
sub
or
mov
push
xchg
mov
or
sbb
test
cmp
js
inc
lret
lods
cli
in
mov
sbbb
loop
jne
ret
lret
pushf
sti
mov
sub
test
push
inc
sbb
add
xchg
je
ljmp
packssdw
scas
clc
aad
xor
rorl
shr
adc
fwait
add
out
ja
out
xlat
jecxz
push
aas
sbb
inc
mov
push
arpl
lret
inc
daa
lret
mov
lcall
ja
push
xlat
cmpsl
adc
and
mov
sarb
xchg
sub
jno
in
in
lret
pop
lret
cmp
out
adc
add
xor
cmc
or
cmp
cmp
call
jo
cmp
jne
adc
adc
mov
xchg
mov
dec
adc
loope
out
mov
and
jno
test
cld
or
out
psrlq
add
andb
notb
lahf
add
fiadds
aad
sbb
ja
pushf
bnd
in
xlat
mov
pop
or
add
push
mov
ret
mov
mov
add
movb
jae
cmpxchg
mov
push
loopne
cmpb
not
repz
imul
or
jno
pusha
cli
jle
dec
in
dec
fldz
pop
aam
mov
pop
push
sbb
cmpsb
bound
xor
lods
mov
push
into
mul
inc
sbb
in
or
or
add
cmp
aad
insl
test
test
mov
mov
xchg
ret
sbb
inc
jg
jnp
jp
mov
inc
xorl
insl
and
popa
dec
setle
out
fwait
mov
mov
xchg
push
cmp
lret
jl
outsb
lock
mov
pop
loopne
mov
ja
iret
enter
call
xchg
mov
shrb
repnz
lds
jae
scas
push
cld
ja
jnp
fnsave
fisubl
pop
flds
inc
movsl
jnp
jnp
testl
out
inc
jmp
adc
jle
das
bound
gs
xchg
jge
pop
shll
shr
adc
fbstp
les
add
xor
ret
xchg
pop
arpl
shlb
pop
inc
test
sbb
add
into
repnz
pop
pop
cmp
aad
jmp
adc
in
or
inc
jp
out
sarb
and
aas
fwait
ja
lock
inc
addr16
sub
aam
outsb
jp
mov
pop
push
leave
cmp
or
cmpl
add
xchg
test
xor
jno
jg
dec
sbb
push
fs
cmc
add
dec
cltd
lahf
mov
into
sub
das
aad
data16
add
pop
dec
add
clc
test
adc
pusha
lods
shl
icebp
sub
out
mov
pusha
jl
outsl
test
fld
xchg
push
inc
or
gs
jmp
shlb
clc
push
mov
int3
repnz
dec
cmp
shll
mov
jge
js
jmp
jle
pcmpeqb
and
jp
sbb
out
push
pop
xchg
inc
or
repnz
clc
jl
fwait
push
sub
scas
or
loopne
shll
dec
or
dec
cmp
push
add
add
leave
mov
or
add
or
lods
out
imul
std
xchg
or
inc
xchg
mov
int
jb
aad
or
inc
mov
mov
imul
scas
leave
and
jecxz
movd
jae
adc
andl
mov
mov
stos
je
daa
repnz
setge
pop
jno
icebp
sbb
dec
out
lret
addr16
loop
add
sahf
push
sbb
fldl
push
add
ljmp
mov
jnp
gs
out
mov
test
outsb
out
lret
dec
sub
rcrl
ret
xchg
sbb
xlat
es
push
lds
idivl
jns
rcll
shl
adc
xlat
add
dec
in
xchg
sbbl
data16
jp
or
inc
test
aad
pop
fnstcw
cmc
xor
fisubrs
or
in
push
mov
jecxz
add
xlat
rol
xlat
and
mov
outsl
call
sti
adc
sbb
add
sub
mov
popf
mov
jo
xor
insl
js
addr16
cmp
jne
jl
mov
test
xor
jbe
pop
push
test
mov
inc
xchg
lock
test
lret
arpl
mov
add
jae
lods
and
aad
or
jnp
xor
adc
xchg
daa
ja
cmp
dec
mov
ja
sbb
or
pop
add
fisubrs
insb
xchg
dec
sub
stos
stos
movb
dec
lahf
or
xlat
adcb
rorb
and
nop
mov
dec
sti
lock
stos
push
xchg
fidivl
xor
add
or
push
popf
int3
mov
mov
jecxz
xor
arpl
les
mov
nop
push
jmp
addb
dec
test
cmpsb
cld
push
adc
mov
pop
dec
sbb
inc
mov
out
pop
int3
mov
mov
xor
out
repz
cmc
out
or
movsb
mov
sub
test
mov
cmp
lea
push
jno
pop
mov
xor
test
jle
jb
shlb
test
mov
pop
sub
jb
and
fsubl
mov
dec
dec
mov
xchg
lods
inc
adc
jg
jbe
cmp
xor
out
fisubs
shll
addr16
or
sub
mov
inc
or
fcomps
ret
popa
and
out
cmpsb
inc
xor
inc
push
xchg
lods
jmp
jnp
mov
cmpsb
mov
aam
scas
shrl
in
mov
xchg
sbb
test
cmp
adc
sub
add
mov
adc
adc
sub
dec
adc
and
mov
fidivrl
mov
and
dec
jl,pn
cmp
push
or
push
cltd
int3
xchg
loopne
pop
sbb
jmp
ficompl
lock
and
sbb
pop
push
pop
xchg
ljmp
cmp
hlt
nop
push
dec
jnp
fucom
or
push
shll
je
xchg
jo
aad
and
stos
xlat
mov
push
das
or
and
addr16
icebp
pop
jg
fisttpl
dec
or
bound
mov
mov
pusha
clc
loope
cmp
pop
cmp
lahf
and
test
or
test
inc
popf
cmp
cmp
loopne
std
dec
mov
test
add
mov
pop
sahf
pop
in
pop
andb
jb
xchg
and
dec
sbb
aam
dec
enter
xchg
and
outsl
dec
mov
mov
test
loope
and
mov
or
dec
cmp
sbb
cmp
cld
mov
and
jae
mov
mov
and
and
call
enter
fucomip
sbb
add
dec
cmp
sbb
adc
jae
subl
mov
pop
call
in
scas
arpl
adc
je
shll
pop
fldenv
enter
insb
int3
jo
popa
sbb
cwtl
addr16
mov
int
loopne
iret
enter
mov
in
xor
in
lock
mov
cmc
xor
cmpsl
xchg
dec
popf
cmp
outsl
and
sub
jno
mov
ja
into
add
push
addr16
xchg
pop
inc
jp
dec
push
mov
push
pop
inc
add
cmp
ret
push
add
add
inc
repz
or
mov
sbb
std
into
jbe
dec
mov
jp
jne
cld
out
or
movsl
and
xchg
mov
xor
sub
push
and
mov
popa
and
sub
insb
sarb
insl
stc
mov
jg
mov
mov
adc
addr16
js
cmc
aaa
mov
fdivr
fisttps
ja
mov
lods
jge
and
cmp
hlt
xchg
mov
push
clc
jmp
dec
scas
test
mov
mov
sub
cmp
inc
lods
jnp
push
addr16
jp
dec
cmc
pop
push
sbb
inc
adc
pusha
dec
imul
add
jns,pt
fcomp
mov
jge
dec
aad
sub
xchg
push
adc
xor
mov
cmp
test
sti
test
lea
xor
mov
repnz
mov
jmp
scas
loop
mov
mov
dec
sti
mov
outsb
pop
ja
cmpsl
das
fsubr
js
gs
loope
or
dec
push
scas
pop
sbb
lret
add
leave
jnp
sarl
clc
lret
insb
or
sbb
int3
sahf
xor
idivl
mov
add
sbbl
sub
xor
int
mov
out
fs
adc
push
dec
stc
es
sbb
stos
xor
mov
loope
ds
cli
lahf
pop
or
push
cld
mov
jge
sbb
rcrl
ds
fildll
jecxz
mov
mov
sub
jecxz
popa
add
push
enter
dec
jmp
and
test
or
inc
mov
mov
mov
incl
subl
xor
push
dec
sbb
lds
lods
pop
mov
int
sub
mov
push
ljmp
imul
xor
lods
aas
mov
inc
inc
or
jne
cmc
sbb
pop
in
lcall
imul
insl
push
jg
add
mov
jae
scas
jmp
nop
xor
je
mov
inc
scas
or
cmp
das
push
movsl
jge
lcall
test
ret
test
test
das
pop
in
arpl
into
lret
aaa
adc
cmp
je
or
jecxz
lods
inc
js
push
lods
enter
xchg
es
jns
or
push
jecxz
lods
fadds
daa
pushf
call
push
pop
clc
push
or
int
jge
xchg
or
adc
fists
pop
andb
lods
lcall
inc
fiaddl
mov
fcomi
jecxz
mov
movsl
shrl
mov
inc
std
test
sbb
dec
gs
call
mov
jae
push
mov
in
or
jbe
lcall
adcl
repnz
testb
insl
and
sbb
popf
mov
jnp
dec
pop
fcmovnbe
or
mov
std
clc
cmp
pop
fmull
ja
push
insl
pop
cmpsl
sub
sub
dec
ret
pop
and
sub
cmpsl
test
pop
and
xor
mov
adc
stos
cli
mov
pop
mov
push
sbb
fcmovu
sbb
and
add
ret
fs
pop
fisttps
int
or
shlb
lret
shl
sbb
push
mov
push
push
out
daa
mov
aaa
sbb
enter
repz
fisttps
in
lahf
xchg
xchg
faddl
mov
xchg
cmp
xchg
pop
loop
out
pop
iret
push
ficomps
sbb
xor
lcall
stc
mov
jmp
adc
pop
aaa
jg
stos
outsl
push
sub
pusha
in
mov
mov
cmp
out
mov
loop
das
sbb
repz
cld
out
add
shll
xchg
std
xchg
repnz
int3
push
push
mov
lods
loopne
add
pushf
push
cmc
pop
ja
mov
dec
xrelease
sbb
or
subb
mov
pusha
mov
dec
mov
pop
jge
not
push
lahf
adc
insb
popf
jmp
jp
das
enter
sahf
add
cmp
mov
mov
and
mov
sbb
in
stos
jl
jae
inc
adc
jge
dec
decl
or
sti
enter
mov
neg
loopne
jecxz
les
dec
dec
add
mov
mov
inc
pop
and
mov
and
xlat
or
jp
and
lret
lds
fnstcw
dec
push
push
sbb
and
xor
mov
cmp
mov
in
add
lods
lcall
fdivrs
mov
mov
imulb
and
repz
js
bound
adcb
fs
int
pusha
dec
sbb
cmp
sbb
mov
mov
jl
xchg
xor
es
jnp
and
dec
sti
movsl
sarb
add
scas
into
push
pushf
pop
into
push
outsl
pop
push
pop
dec
sahf
aam
sub
out
lret
push
mov
add
mov
xchg
cmp
ja
dec
xor
xor
add
rorl
call
inc
xchg
incl
inc
jno
into
inc
and
testb
fiadds
push
testl
or
xor
or
add
jmp
xor
add
inc
xor
xor
cli
inc
gs
pmuludq
push
xorb
repnz
enter
lods
hlt
and
shrl
dec
or
and
adc
mov
xorl
mov
outsb
xor
insb
mov
pop
inc
push
sbb
add
mov
cmpsl
clc
int
andb
pop
mov
pop
scas
xor
jmp
mov
adc
out
sahf
pop
cmp
cmp
aad
cmp
jne
mov
and
test
jle
dec
test
popf
repnz
nop
sbb
sbb
in
push
stos
mov
mov
lds
repz
inc
mov
or
out
fwait
arpl
les
out
out
cmp
xor
ss
ds
push
gs
push
pop
pusha
shl
jge
sub
mov
and
push
test
vdivss
sbb
mov
iret
jmp
gs
sub
lcall
cld
mov
pusha
insl
pop
or
mov
mov
iret
iret
mov
push
lods
pop
aas
xchg
sub
and
enter
mov
incb
xor
adc
loope
dec
mov
insl
out
cmpsl
pop
xlat
pop
sub
testb
lret
je
shl
lods
dec
or
jb
sub
mov
push
cs
push
stc
cmp
lods
mov
cmp
movsl
sbb
fwait
lock
int3
xor
leave
mov
dec
adc
shl
shll
ja
test
ret
inc
sbb
loop
push
insb
dec
push
jg
xchg
add
pop
pop
sub
mov
cwtl
andb
push
not
imul
test
dec
mov
into
pop
aas
and
sub
addr16
xchg
enter
outsb
pop
test
negb
pop
jecxz
push
je
mov
push
andl
add
lods
mov
jle
fwait
mov
scas
mov
stc
pop
loope
in
add
mov
scas
sbb
imul
mov
push
fsts
lret
push
push
ds
je
cmc
clc
mov
push
pop
std
stc
push
int3
iret
jbe
mov
sti
into
test
dec
adc
push
cmc
mov
aaa
xchg
mov
pop
cmp
jp
ljmp
mov
xor
iret
mov
jecxz
cmp
fs
cli
out
bound
int
mov
test
fstpt
rclb
fisttpl
sbb
push
mov
mov
pop
add
cwtl
and
mov
hlt
jnp
mov
fcomps
jg
xor
in
xorb
in
jmp
in
push
push
push
test
push
mov
sbb
mov
daa
pushf
cmp
pusha
data16
repnz
xor
scas
sbb
andb
push
cli
repnz
add
xor
sub
cwtl
cwtl
outsb
leave
push
cmpsl
xchg
adc
inc
push
popf
test
jmp
dec
dec
sub
push
mov
aas
insb
fidivs
cld
and
adc
ret
loopne
adc
cmp
ret
push
test
adc
and
out
push
sbb
and
clc
mov
jle
lds
fbld
xchg
sbb
mov
pop
ja
orl
pop
shr
negb
ja
jne
dec
lret
sahf
inc
sub
jbe
and
xchg
push
lcall
stos
sbb
testb
pop
push
cmp
addr16
push
jle
adc
daa
mov
cld
daa
mov
shrb
lea
sub
cmp
jp
xchg
jbe
dec
mov
mov
rep
dec
in
pop
lahf
aas
push
insl
pop
add
inc
rorb
lods
stos
sub
pop
js
jg
cmpsb
mov
stos
lock
iret
mov
or
ret
and
add
loopne
mov
test
jg
cmpsb
cmpsl
mov
ret
pop
lcall
mov
xchg
push
icebp
jmp
aaa
sbb
mov
cmp
jge
int
sbb
add
sub
xchg
sub
lods
aad
pop
cmc
sbb
sbb
or
lea
mov
mov
mov
repz
push
mul
mov
jle
add
xchg
ficompl
jg
test
sti
mov
xchg
lcall
shll
jnp
rcrb
sbb
push
sbb
sbb
push
dec
pusha
ficomps
ret
push
ss
je
mov
adc
jnp
cwtl
or
pusha
sbb
jno
mov
in
and
sbb
mov
xchg
fst
cmpsl
dec
das
enter
mov
ljmp
adc
mov
sarl
sub
dec
mov
sbb
lret
mov
xchg
sbb
or
leave
dec
les
dec
mov
sbb
jle
enter
or
mov
push
imul
inc
cmpsb
or
pop
int3
stos
flds
fcompl
push
rcrb
add
adc
cli
repz
mov
jo
les
pop
popa
add
pop
lods
dec
cmp
ss
pop
or
popf
xor
add
jno
iret
es
repz
out
mov
ja
aaa
adc
push
inc
mov
addl
mov
mov
divb
sub
dec
js
sbbb
out
gs
cmp
jae
fists
inc
cwtl
mov
inc
add
in
mov
pop
mov
pop
and
int
mov
sbb
imul
push
adc
stc
inc
loop
or
or
or
xor
inc
scas
cmp
cmp
pushf
and
sahf
test
xchg
shl
pop
out
aad
cwtl
mul
loopne
jg
adc
adc
adcl
pop
loop
adc
arpl
hlt
test
dec
sbb
test
mov
and
pop
cmpsb
test
or
repz
shlb
mov
dec
cli
jecxz
rcrl
push
aaa
divl
pop
push
test
sarl
shr
pushf
mov
fidivrl
andb
mov
mov
sbb
xor
in
cld
ds
cmp
out
rol
movsb
lds
cwtl
jno
loopne
add
addr16
push
mov
mov
aas
lea
jbe
fwait
jmp
sahf
mov
daa
fcoms
cmpsl
mov
jp
test
push
test
dec
dec
xor
repnz
test
orl
adc
push
out
in
pop
mov
dec
add
push
dec
add
push
out
mov
inc
inc
pop
lods
sub
and
je
pop
xorl
push
fcmove
aad
lahf
leave
inc
add
test
mov
push
xchg
popl
xchg
das
addr16
es
pop
lds
or
or
jmp
mov
or
outsl
outsl
popa
add
jecxz
jecxz
lds
shrb
repz
inc
jns
xorl
inc
mov
pop
sbb
or
or
mov
test
cmp
jg
lods
inc
mov
adc
jge
pop
push
in
popa
fwait
xchg
or
inc
and
negb
adc
je
sbbl
or
sub
cmp
sub
or
dec
lcall
cmpsb
sbb
imul
das
xor
push
js
mov
add
fimuls
cld
fsubs
xchg
arpl
stos
ljmp
jae
adc
lds
sbb
movsb
adc
push
loop
das
mov
push
fildll
dec
jmp
fisubrs
scas
nop
insl
iret
pop
lea
outsb
push
pusha
dec
mov
cmc
fs
and
fs
fcmove
cmpsl
clc
pop
jl
cmc
loope
lea
mov
push
or
sub
add
mov
mov
rcrl
mov
jmp
add
clc
cmp
cwtl
sbb
outsl
sbb
and
mov
push
mov
cmpsl
adc
pop
adc
ljmp
call
test
xchg
imul
sbb
loopne
int3
hlt
movsl
push
fs
mov
inc
push
pop
repnz
pop
aam
rcr
mov
xchg
inc
int
dec
cmp
mov
jns
lds
in
clc
jg
leave
icebp
push
pop
fldt
xchg
test
jnp
mov
insl
and
leave
dec
or
adc
fbstp
pop
jmp
adc
orb
test
push
jno
fstps
mov
repz
pop
addl
int
popf
xor
dec
lds
pop
adc
mov
pop
jo
mov
daa
rcrl
lock
test
mov
mull
add
leave
mov
and
mov
lcall
inc
jecxz
mov
stos
lahf
mov
mov
subl
inc
push
mov
or
add
xchg
leave
sbb
push
shll
decb
add
cld
sub
loope
pop
mov
jg
shrb
das
sti
hlt
mov
sub
mov
push
xchg
xchg
insl
pop
rcll
sbbb
sbb
ljmp
push
aad
lcall
inc
addb
mov
fsubl
cmp
push
lods
sbb
or
xchg
dec
push
sbb
mov
ucomiss
mov
push
mov
mov
and
jmp
sbb
lcall
das
rclb
adc
xchg
dec
cmpsl
dec
lock
pop
mov
mov
cld
dec
adc
lret
in
je
data16
or
fldcw
mov
movsl
cmpb
sbb
sub
xor
cwtl
adc
and
pop
mov
je
jne
out
imul
outsb
test
add
sarb
fildl
jae
push
stos
aad
add
pop
mov
sbb
mov
sbbl
jns
out
out
pop
div
scas
in
or
sbb
mov
in
and
scas
mov
xor
nop
mov
sti
bound
sub
dec
fsubrl
xorb
gs
mov
loopne
xchg
fwait
mov
and
pop
scas
cmp
popa
int
and
fs
testb
fdivr
addr16
sub
or
mov
loopne
cli
sarb
pop
icebp
sti
and
aas
jmp
je
pusha
push
fcoms
imul
js
adc
imul
add
lea
mov
jo
cs
not
addl
dec
and
push
xchg
outsb
test
cwtl
mov
push
dec
stos
loope
push
in
add
ret
xor
lds
and
les
cmp
add
cmp
aaa
ja
jno
sahf
xchg
stos
mov
and
and
mov
or
addr16
mov
iret
mov
cmp
jb
inc
mov
jns
popa
dec
in
or
ret
push
pop
std
bound
xchg
mov
or
shlb
add
aaa
pop
xor
push
cmpb
sti
mov
cmp
and
cmp
xorl
sub
insb
inc
inc
sbb
jae
mov
or
inc
mov
addr16
xor
fdivr
jl
nop
insb
stos
dec
cmp
sbb
popa
push
shll
pop
dec
sub
xor
lds
mov
loope
cwtl
clc
pop
xlat
pop
ljmp
push
js
inc
mov
aaa
adc
xor
imul
push
sbb
and
dec
or
dec
ret
or
or
inc
inc
sahf
dec
pop
dec
push
xchg
mov
roll
divb
gs
or
add
addr16
pushf
or
roll
icebp
sub
decb
mov
in
xor
je
repnz
jnp
mov
and
in
push
loope
inc
cltd
mov
add
fcoms
xor
and
mov
pop
test
movsb
loopne
shll
lods
sub
or
lahf
stc
sbb
ja
mov
jmp
fs
inc
inc
xchg
inc
into
mov
mov
movsb
daa
pop
cmp
jbe
xchg
lea
push
test
mov
out
dec
into
mov
mov
pop
arpl
lds
mov
and
subb
loop
xor
sbb
xlat
leave
or
out
popa
cli
mov
add
push
pop
xor
xchg
xor
pop
sbb
mov
fstpl
mull
xchg
andl
into
icebp
in
outsl
jecxz
mov
and
sub
push
clc
cmp
pop
ret
cmpsl
jl
mov
xlat
mov
jne
dec
adc
or
or
xchg
xor
push
subl
outsb
and
outsl
ljmp
cs
stos
aas
ss
mov
cs
mov
pusha
je
inc
mov
sub
es
sbb
es
imul
sub
mov
subl
push
clc
jmp
sbb
mov
mov
mov
popa
hlt
outsl
sub
aad
in
imull
popf
outsb
adc
xchg
dec
lds
add
mov
inc
dec
jg
cwtl
push
or
jmp
ficomps
cmp
fsubp
not
cmpsb
pop
rorl
pop
scas
inc
xchg
rsqrtps
adc
jne
paddusw
xlat
and
outsb
aad
out
add
mov
mov
or
lcall
push
and
pop
jnp
stos
dec
lahf
inc
inc
cltd
jo
push
pop
jb
sub
pop
sbb
in
or
arpl
sub
push
sbb
test
xor
xor
mov
cmpl
daa
fidivrl
pop
cmp
xchg
push
lret
sub
inc
mov
mov
scas
sti
shl
movsb
les
iret
rorl
cld
hlt
dec
cmp
pop
insb
cmp
push
jb
add
xchg
scas
nop
jne
test
sbb
xchg
call
lods
cs
push
aam
inc
jle
push
pop
add
adc
loop
aaa
add
adcl
mov
movl
sahf
pop
fwait
pusha
mov
arpl
je
stos
jns
cmp
adc
dec
cmp
sbb
insb
mov
fcomi
adc
stos
stc
xchg
pop
jl
mov
repnz
orl
jge
call
cltd
mov
sarl
pusha
mov
clc
push
movsb
push
dec
popf
loop
pop
mov
add
push
xor
lcall
jmp
xor
pusha
jp
push
jecxz
sub
jne
xchg
aaa
mov
xchg
inc
pop
xchg
lret
sbb
sub
push
movsl
imul
daa
test
imul
aam
shlb
xchg
lock
shlb
xor
ljmp
sub
jl
scas
inc
insl
fst
pop
sbb
mov
test
sarl
mov
add
mov
adc
das
cmp
idivl
mov
clc
sub
daa
and
mov
mov
mov
xchg
jp
jg
stos
shll
push
and
scas
sbb
push
fdivr
lock
movsb
cmpsl
push
pop
mov
hlt
xor
je
sbb
cmp
sub
pushf
in
sbb
cmp
arpl
mov
loope
push
jg
xlat
imul
sahf
inc
sub
xchg
in
or
xchg
sbb
stos
jae
pusha
shl
or
pop
imull
sti
sbb
pop
scas
add
inc
data16
ljmp
mov
ret
shll
mov
mov
ja
sbb
mov
push
pop
add
xorb
jge
xchg
xchg
in
scas
pop
mov
into
or
inc
and
add
dec
es
mov
rcr
dec
mov
pusha
aad
bound
sbb
lock
mov
lods
or
push
std
pop
fildl
lcall
vprotw
into
add
loopne
outsb
cmp
pop
mov
aad
aas
inc
pushf
xchg
dec
cmpl
sbb
jl
mov
dec
lcall
dec
inc
mov
and
dec
fadd
sbb
jbe
push
subb
or
push
test
jns
pop
inc
mov
xor
sub
mov
adc
inc
mov
lcall
cmp
jp
fadds
out
jbe
push
cmp
pop
jmp
cwtl
lret
jge
mov
sbb
jmp
fdivrp
mov
les
xor
cmp
fcomip
pushf
adc
pusha
sub
mov
out
lcall
mov
lds
xor
xor
rorb
jmp
pushf
sub
dec
mov
pop
lret
push
push
cmp
or
jmp
cld
out
loop
mov
into
mov
bound
mov
jo
jae
orb
test
xor
leave
push
mov
mov
or
call
cmc
mov
mov
lds
mov
and
jp
xchg
lcallw
mov
scas
pop
mov
adc
dec
mov
imul
enter
int
sti
in
int
sub
in
scas
fwait
cmp
xor
jb
imul
push
addb
stos
lret
cmp
and
jge
push
jle
xchg
mov
jae
push
test
jp
push
pop
and
and
ja
mov
shl
jb
lods
mov
shrl
jne
mov
lcall
mov
sahf
dec
std
sbb
ficomps
and
pop
es
cmpsb
sbb
xchg
cmovle
js
std
mov
adc
int3
add
mov
push
mov
jg
jns
aaa
ja
test
mov
fbstp
int3
test
xlat
inc
shl
punpcklwd
push
inc
stos
xorl
push
les
sub
mov
cwtl
imul
lahf
push
subb
adc
cmp
xchg
lahf
xchg
mov
nop
movsb
aaa
mov
les
stc
pop
jne
ds
lea
lcall
aam
arpl
lahf
aas
std
xchg
stc
xor
push
loop
and
loopne
int3
enter
xchg
aad
xchg
dec
ret
movsb
movsl
ljmp
cld
add
dec
push
subb
imul
add
and
pop
add
jmp
mov
lahf
jp
jle
sub
sbb
and
insb
mov
dec
pop
sub
pusha
jo
je
add
mov
sub
sbb
xchg
dec
lcall
sub
pop
adc
std
mov
shl
shrl
cmp
jge
adc
das
push
xor
adcl
js
pusha
jo
leave
sbb
or
loop
xchg
mov
mov
mov
cmp
fdivrl
stos
mov
pop
clc
pop
adc
jle
outsb
jle
xlat
or
imul
into
test
mov
popa
mov
in
ja
rol
sbb
call
mov
mov
lret
xlat
movsl
arpl
sbb
jo
inc
cltd
cmp
out
ret
dec
add
outsl
incl
sti
sub
cmp
xchg
cmp
andl
daa
scas
xor
cmc
je
and
jmp
in
scas
xchg
mov
dec
inc
nop
xchg
clc
pusha
cs
sub
or
addb
xchg
add
push
xchg
adc
sahf
add
sbb
out
mov
and
fisubrl
lcall
xor
inc
add
jg
popf
in
dec
push
push
daa
rcr
in
mov
jnp
and
shll
je
lret
mov
in
and
inc
in
lds
es
cwtl
js
loope
lret
jae
pop
in
adc
inc
sub
shll
cmpsb
iret
pusha
add
jo
and
cmp
fcmovnb
add
or
push
gs
stc
sbb
and
shlb
push
and
jo,pt
mov
ljmp
mov
mov
outsl
push
mov
mov
jns
les
int3
lcall
jmp
sub
cmpb
inc
jle
test
lret
ficomps
mov
gs
outsb
dec
lods
data16
mov
outsb
decl
jg
xor
ret
arpl
fiadds
inc
imul
stc
movsl
call
add
popf
jl
movsl
or
hlt
inc
fwait
data16
cmp
into
jmp
adc
sub
add
sbb
adc
addl
stos
sbb
outsl
sub
mov
fcomip
dec
out
imul
lcall
mov
sbb
jb
insb
sbb
arpl
sbb
jg
dec
adc
inc
sub
outsb
xlat
cmp
and
faddl
cmpsl
pop
insb
mov
fs
pop
hlt
lods
into
jb
dec
mov
push
and
into
sti
or
xor
xorb
add
sahf
js
test
movl
clts
test
outsb
in
outsl
pop
mov
sub
dec
icebp
jae
pop
mov
mov
or
or
push
pop
pop
push
sub
scas
jne
cmp
negb
cmp
int
rol
adc
inc
pop
out
inc
xchg
jns
cs
mov
int3
jle
add
push
bound
mov
mov
push
aam
dec
dec
jo
jne
or
scas
pop
sbb
sub
rcll
je
js
cs
les
push
scas
push
cld
clc
xchg
jg
scas
test
out
lods
loop
jns
and
jnp
cmpsb
sub
cmp
das
into
pushf
movsl
fistpll
lods
dec
dec
xchg
loop
clc
push
aam
adc
fsubs
mulb
xchg
mov
or
movsb
fstpt
add
mov
mov
xchg
xor
adc
popa
les
pop
ficomps
scas
lods
dec
pop
and
sub
sbb
xorl
fsubrs
sub
jne
int3
and
pop
cmp
dec
in
lahf
scas
mov
jg
add
dec
jo
push
mov
mov
jecxz
mov
iret
in
lret
sbb
inc
iret
daa
mov
dec
jne
mov
jae
jl
hlt
rorl
mov
mov
cmp
or
sbb
sub
push
add
sub
pop
subl
sub
subb
mov
movsb
jno
adcl
pop
fists
aas
sbb
ret
ss
pop
cmp
mov
jo
ficoms
aam
repnz
cmp
xchg
inc
inc
push
or
fistpl
bound
sti
bound
mov
mov
loopne
add
jl
lcall
call
mov
shl
mov
push
and
popa
stc
shll
int
jl
dec
sub
cltd
xor
xchg
and
mov
mov
mov
mov
pop
jg
in
inc
ds
ss
ret
add
rolb
sub
lds
inc
test
out
push
mov
lods
mov
xor
sbb
and
jbe
sahf
fwait
jl
add
xor
bound
dec
xchg
xchg
push
mov
adc
jnp
or
mov
add
mov
testl
adc
mov
sbb
insb
test
dec
mov
out
mov
mov
aaa
and
jle
pop
jb
aaa
xchg
test
mulb
loop
pop
and
mov
aas
ret
pop
sub
fcoml
emms
jmp
jns
push
dec
subb
std
into
add
into
mov
lcall
push
jmp
mov
fisubrl
insl
jecxz
xchg
mov
or
test
pop
cmp
fdivrl
sub
addr16
pop
loop
xor
fbstp
in
imulb
adc
dec
stos
shll
addr16
insl
add
sbb
in
mov
jle
push
movsb
adc
out
jae
cwtl
fisubrs
ljmp
cmp
insb
cmp
outsl
mov
xchg
iret
cmpb
or
push
jb
mov
sbb
mov
fadd
sub
loop
sub
pusha
test
xchg
jb
jg
mov
in
punpckhbw
outsl
xchg
test
sbb
mov
jb
push
sti
jge
incl
loopne
inc
inc
push
cmc
push
mov
ss
add
mov
lods
jbe
adc
push
repnz
dec
jecxz
inc
pop
cmp
add
mov
hlt
inc
and
push
lods
icebp
add
outsb
test
ret
je
mov
xor
adc
shrb
jne
movsb
in
xchg
dec
out
xor
sub
and
lock
shlb
and
jl
test
or
xchg
mov
xchg
or
nop
lret
xchg
popa
mov
arpl
sar
and
dec
idivl
ret
test
push
fwait
scas
loop
andb
mov
pop
sub
ss
mov
mov
hlt
mov
mov
cmp
out
push
lock
or
out
or
mov
or
cvtpi2ps
mov
and
ds
mov
mov
es
xor
cltd
sub
cmp
mov
mov
push
call
pop
call
push
je
jnp
or
mov
pop
mul
mov
andb
cs
orl
in
push
fadds
mov
sub
lret
jmp
jns
std
int3
rol
xor
push
jns
cmp
xor
leave
or
xorl
xchg
xor
in
jl
cltd
lret
insl
mov
sub
aaa
sub
dec
dec
in
jle
les
xchg
in
lret
test
fwait
mov
es
hlt
addl
cmp
stos
loop
aaa
and
lock
hlt
dec
xor
jno
ret
mov
xor
mov
ljmp
jl
pop
popf
out
jg
xchg
xorb
nop
sarb
aaa
insl
js
sub
pushf
jle
or
mov
lods
xor
ret
cmc
lea
pop
mov
fnstsw
je
jl
test
push
mov
les
ret
mov
jns
aas
xor
mov
sbb
add
cmp
or
bswap
cli
xchg
push
pushf
das
xchg
adc
loope
dec
mov
test
int3
xchg
fdivs
and
mov
insb
pop
xchg
cmp
jmp
pop
dec
jne
loope
shr
mov
lods
inc
fnstsw
sbb
lret
in
adc
cmp
inc
shlb
xor
jo
ss
dec
sub
jo
ja
out
aad
loope
rcll
pop
rorl
repz
adc
xor
rcr
rcrl
in
rorl
xchg
test
or
enter
inc
into
add
test
pop
cld
or
sbb
sahf
inc
cltd
and
cmp
outsb
lcall
jnp
and
mov
xchg
rcll
push
mov
dec
in
pop
cmp
mov
jp
hlt
rcrb
sbb
push
ret
ret
daa
push
cmpsb
lahf
push
mov
push
mov
sbb
pusha
andl
sub
xchg
adc
das
add
adc
jle
dec
cs
adc
sbb
mov
insb
or
mov
cmp
adc
adc
dec
movsl
inc
mov
add
in
add
incb
push
or
fildl
and
ds
and
mov
ds
push
pop
incb
movsb
and
xorb
popf
lahf
xlat
leave
or
mov
mov
pusha
cmp
sub
xor
jp
ds
mov
jae
mov
loop
jae
and
push
xchg
adc
add
popf
push
mov
jno
sbb
push
sahf
sub
mov
adc
enter
jbe
mov
xchg
and
les
popa
fmuls
test
jp
sub
dec
dec
insb
loopne
xor
andb
mov
jne
int3
cmp
and
pop
mov
push
xor
stc
les
sub
repnz
jbe
sbb
aas
pop
pusha
add
das
push
test
add
pushf
in
mov
adc
lock
in
sub
and
or
imul
cmp
mov
shl
cmpsb
lock
push
mov
push
cli
dec
jnp
and
push
inc
lds
ss
popf
dec
gs
cs
outsl
and
call
es
jo
xor
pop
push
iret
push
ds
xor
and
sub
adc
clc
loop
pop
mov
xor
xchg
jg
pop
mov
imul
std
repz
das
xchg
ljmp
mov
call
cmp
movsl
or
dec
js
sub
mov
xchg
push
negl
mov
insb
nop
scas
fstl
popa
jl
sti
jns
cld
je
jbe
pop
push
addr16
aam
pop
ljmp
cmpsl
arpl
outsb
or
fstpl
test
xchg
mov
iret
push
and
jne
add
xchg
daa
iret
pusha
or
movsb
xor
cli
xchg
add
js
mov
jge
sahf
jp
mov
andb
xchg
mov
inc
int
mov
lcall
jmp
jno
lods
outsl
adc
loop
adc
jb
jp
es
lahf
mov
fstpt
xlat
xchg
xchg
push
lahf
xor
out
or
and
loop
incl
or
sub
sub
adc
in
xor
pop
dec
adc
or
std
imul
adc
sub
mov
mov
mov
ljmp
loope
xchg
test
mov
jl
rorl
and
mov
push
lock
xlat
lock
lret
pop
arpl
xor
je
jns
sbb
inc
out
mov
sbb
dec
push
dec
jbe
adc
mov
sbb
ljmp
stos
and
lahf
in
insb
in
cld
mov
fdivrs
adcb
jo
jge
mov
lds
mov
pushf
mov
adc
shll
dec
rolb
addr16
adc
jae
and
mov
js
andl
mov
cmc
cmp
outsb
inc
inc
and
adc
sub
or
xchg
fcoms
aas
outsb
test
call
fs
push
mov
sbb
out
fldenv
cmp
cwtl
andl
pop
inc
mov
jo
popa
loope
and
enter
inc
xor
add
fwait
lret
cwtl
jns
lock
inc
cs
mov
std
cmp
std
fistpl
inc
push
sbb
mov
mov
call
mov
jmp
mov
icebp
popf
popf
std
lock
lret
dec
fmuls
enter
shll
stos
jg
rcr
push
js
out
mov
pop
pop
loopne
push
mov
mov
aas
dec
adcb
dec
mov
insb
or
inc
sub
xchg
test
xor
pop
fstl
adc
sub
outsl
add
xor
cs
mov
fxch
mov
enter
rorl
lods
repz
and
sti
movsb
and
aam
mov
sahf
adc
xchg
mov
cmp
inc
dec
daa
push
popf
fs
pop
mov
dec
push
arpl
es
add
movsb
shlb
shr
lds
rcrb
lahf
jnp
je
jp
mov
xor
mov
jae
pop
mov
pop
pop
jmp
xor
mov
dec
nop
pop
lods
mov
and
pop
mov
loope
and
mov
ss
fsubrl
or
mov
movsl
mov
fisubrl
lret
sti
aad
add
mov
fidivrs
mov
push
aad
jmp
ss
cmp
rcrb
dec
push
enter
jge
ret
mov
push
mov
mov
lock
movsb
push
int
fmuls
adc
repz
xchg
cmpsl
lahf
adc
ss
jae
sub
mov
inc
cmpsl
inc
js
and
dec
scas
inc
push
ljmp
cmp
jb
and
pushf
inc
jp
fistpll
dec
add
and
pop
cltd
iret
push
sub
and
pop
inc
loop
nop
rcrl
and
sub
addr16
js
ja
jle
shl
shrl
xchg
int
iret
sahf
cmc
jge
dec
insl
mov
pushf
leave
xor
jae
aaa
js
pop
sbbl
std
jno
mov
stc
rolb
push
mov
mov
insl
jb
dec
movsl
adc
addr16
lcall
dec
lds
fadds
loopne
lock
dec
shll
popf
into
mov
ja
xchg
mov
xchg
aas
mov
out
or
lcall
or
push
out
or
jge
cmpsb
mov
mov
enter
adc
iret
jae
sub
xchg
push
cmp
xchg
inc
gs
test
test
movsb
jne
jle
jge
mov
mov
jno
add
add
je
lret
pop
push
inc
pop
pop
loop
cmp
cli
dec
inc
adc
lds
push
in
outsl
addr16
int3
bound
mov
inc
fcmovu
jmp
mov
mov
mov
fs
fnsave
inc
outsl
rcrl
mov
loope
cmp
xor
movl
in
push
arpl
add
cwtl
xchg
pop
insb
mov
cmp
mov
xor
ds
pushf
mull
stos
push
pop
scas
push
js
fsubrs
lcall
popa
es
aas
and
jge
in
stos
das
add
cmp
sbb
cltd
imul
pop
push
dec
int
scas
data16
imul
fcoml
sub
pop
push
icebp
and
fiaddl
test
or
jl
inc
sti
adc
xor
jnp
bts
mov
push
test
cwtl
or
xor
inc
push
ret
ss
mov
fldenv
pop
add
out
aaa
test
push
pop
cmp
mov
fs
stos
incl
and
cmp
std
imul
mov
frstor
cmp
hlt
mov
cmp
in
call
cmp
aas
outsb
fdivrp
push
push
adc
pop
insl
imul
iret
sbb
cmpsl
pop
shl
push
pop
xchg
mov
lods
dec
xchg
ljmp
or
dec
pop
xchg
sbb
and
jne
pop
inc
stos
icebp
xchg
mov
mov
jmp
jno
xchg
pop
out
push
stos
imulb
push
aas
adc
jbe
cld
sub
cmp
mov
and
movsl
mov
inc
cmp
mov
out
cmp
add
jo,pt
stc
fsub
and
dec
stos
xchg
ret
cwtl
outsb
dec
rcr
add
mov
dec
sti
mov
jl
into
mov
lret
fdiv
dec
sbb
jno
dec
aam
mov
cmpsl
addl
insb
addb
or
fists
or
xchg
in
lcall
lret
xor
push
push
arpl
adc
mov
add
cmp
xor
aaa
or
andl
sub
fld
mov
int
xchg
mov
sbb
call
js
sbb
adc
pusha
roll
pop
ret
adcl
xlat
js
sarl
mov
jne
fiaddl
mov
push
xchg
insb
add
dec
adc
movsb
fsubrs
orl
insl
sub
fidivs
pop
fbstp
push
inc
pushf
loop
das
or
push
jae
dec
push
loope
test
mov
daa
ja
sub
jo
dec
movsb
psubq
call
cs
fimuls
lods
xchg
out
lock
sub
shll
cli
stos
daa
lods
xor
in
cmp
jne
loope
push
or
out
sbb
push
daa
aaa
pop
xchg
lahf
sub
push
mov
and
nop
mov
xchg
adc
mov
jecxz
ret
orl
shll
push
xor
mov
imul
movsl
std
ds
fchs
and
mov
or
dec
or
mov
insl
out
xchg
das
jno
inc
xor
ljmp
out
push
or
call
test
sbb
sub
loopne
daa
pop
lods
mov
jge
push
ja
clc
mov
loope
pop
dec
adc
xor
dec
lret
sbb
mov
cmpsl
mov
cmpsl
mov
idivb
push
clc
cmp
push
pop
popf
add
lcall
aad
mov
lods
push
lahf
pop
push
mov
aad
stos
ds
and
imul
cmp
pop
cmp
ss
mov
aam
hlt
xlat
insb
ret
shrb
inc
aas
inc
int3
mulb
dec
push
sbb
mov
stos
sub
mov
sub
inc
leave
push
mov
arpl
popf
scas
xchg
pop
lods
cli
add
rolb
addr16
imul
jnp
jbe
xor
and
mov
mov
xor
das
sbb
cmp
popa
ret
dec
sbb
dec
das
lds
xchg
xchg
in
jmp
sbb
scas
sbb
or
mov
data16
call
addb
push
mov
pop
inc
mov
inc
imul
ss
jl
ret
stos
jae
jb
pushaw
bswap
xchg
lods
or
ret
fs
ljmp
ds
call
or
out
leave
push
in
add
lret
push
sub
and
mov
mov
jnp
dec
xor
ret
or
in
repnz
pusha
push
pop
nop
std
out
in
fdivs
pop
out
out
outsl
push
mov
push
rcr
or
out
rorl
push
mov
cmpsb
push
dec
fdivl
xor
push
xchg
or
sahf
sub
adc
shrl
mov
cld
stc
sub
lds
or
mov
mov
mov
mov
scas
nop
nop
mov
lret
cld
ljmp
xchg
fbld
sub
mov
les
sbb
in
out
mov
or
sbb
sarb
inc
pusha
push
and
jb
ljmp
xor
or
jno
pop
fcoms
cld
cld
adc
jmp
pop
add
sbb
mov
outsb
rorb
inc
mov
sbb
pushl
mov
jae
inc
insb
cmpsl
mov
xchg
hlt
sbb
fstpt
jbe
pop
dec
push
xchg
dec
test
push
inc
inc
and
xchg
cmovne
ret
pop
cmp
pusha
cmp
daa
cmc
sbb
push
fcomp
inc
int
mov
loope
arpl
cmp
sub
icebp
iret
inc
jp
push
stc
std
cs
jo
rcrb
pop
xchg
adc
dec
mov
fnstenv
or
std
adc
imul
xchg
jb
dec
jo
pop
call
dec
jae
lahf
mov
push
push
sbb
pop
xor
sub
xchg
fnstenv
push
sbb
fistpll
xchg
hlt
cld
lods
pop
bound
push
xchg
xchg
sti
arpl
gs
fnsave
sahf
pop
and
test
mov
xor
das
add
addb
js
test
adc
mov
addr16
push
sahf
rcrb
pusha
push
or
mov
negl
fildll
pop
xchg
iret
add
sbb
iret
and
popa
inc
xchg
icebp
dec
daa
push
pusha
ret
insb
pop
cmp
sbb
ret
imul
cmp
adc
gs
add
rcl
jg
lds
dec
xor
and
and
add
jbe
xchg
stc
sarb
mov
fs
cmp
and
imul
data16
mov
push
sub
inc
movsl
adc
and
jl
je
pop
xlat
iretw
pop
orb
hlt
and
mov
aas
cmp
mov
and
or
add
outsl
decl
sahf
int
enter
out
stc
es
scas
scas
jne
enter
fsubrp
pop
out
movsb
dec
add
jg
inc
xchg
cmpsb
pop
fdiv
cltd
mov
testb
imul
or
xchg
mov
imul
pushf
push
xchg
ficomps
hlt
pop
out
ss
cli
mov
fidivl
dec
jns
popf
sub
lahf
jo
mov
push
sub
cmpsl
mov
mov
push
lea
in
frndint
js
inc
cli
pop
xchg
adc
sti
aad
adc
xchg
out
pop
cli
cld
pop
loop
xchg
lcall
pop
out
add
mov
inc
mov
in
lock
mov
repz
fistps
icebp
pop
sar
mov
dec
sbb
cmp
inc
ja
push
inc
adc
push
cmpsb
in
xchg
js
int3
movsb
fcomip
xchg
and
ja
rorb
stos
jp
lds
jb
xchg
fcmovu
or
xor
adc
in
push
push
mov
and
sub
fcomps
not
push
xchg
mov
cltd
mov
adc
push
xchg
xor
fsts
js
in
ljmp
test
mov
lahf
cmp
fdivs
xor
sub
mov
sbb
cs
and
hlt
xchg
inc
add
bound
push
pop
adc
push
add
hlt
sub
in
jp
sub
in
xchg
push
add
out
jns
mov
inc
inc
outsl
incb
pop
stos
popa
dec
mov
in
bnd
cmc
cmpxchg
pushf
cmpsb
pushl
repnz
and
mov
and
cmp
shlb
jmp
mov
or
push
gs
xor
push
pop
pop
lret
test
dec
push
mov
nop
js
mov
cmp
mov
or
pusha
mov
add
mov
mov
out
popa
push
out
push
adc
xchg
imul
sub
cli
ficomps
push
pop
repnz
jge
jmp
addl
popa
lea
cmpsl
sub
or
cmp
sub
inc
pop
sub
stc
adc
mov
mov
stos
jnp
mov
push
push
cmpsb
xor
push
addr16
ret
push
cs
roll
dec
push
jg
dec
inc
jns
loop
push
loope
stc
inc
or
fildll
lcall
mov
aad
hlt
enter
xorl
rcrl
mov
hlt
mov
pop
inc
push
sub
dec
add
sub
dec
or
leave
sbb
push
aam
adc
mov
xor
push
inc
sbb
and
decl
and
inc
shll
mov
sub
mov
push
push
mov
fdivr
and
or
into
mov
test
or
dec
mov
adc
or
mov
pop
push
adc
adc
jo
stos
mov
jnp
add
jno
lret
mov
jb
mov
or
adc
or
out
pop
xor
repnz
test
lock
nop
mov
insb
sbb
negb
clc
inc
es
jg
add
adc
cmp
sub
add
lret
clc
aad
incb
fildll
test
or
mov
stos
fs
fwait
mov
mov
cmp
cmp
sbb
xchg
sub
sarl
xor
mov
outsl
movsl
sub
mov
filds
jbe
in
inc
jl
ss
push
mov
push
aad
mov
pushf
shrb
cli
sbb
movsl
pop
or
xchg
jnp
ds
in
mov
outsl
jp
xchg
rcr
lds
ljmp
sbb
adc
dec
data16
sar
pop
mov
push
mov
push
flds
jge
or
sarb
cmpsb
adc
jns
outsl
or
mov
mov
sub
cmpb
xor
popf
shll
pushl
push
sti
xchg
sbb
jno
imul
mov
pop
movsb
pop
pop
pop
cmp
or
pop
cmc
das
stos
vpand
sbbb
loope
push
and
inc
xchg
push
out
sub
jge
pop
mov
es
jg
frstor
cwtl
jno
push
test
dec
rcrb
mov
sbb
fwait
sub
ret
sub
nop
push
sahf
aam
repnz
xchg
out
stos
mov
adc
ss
xor
rorb
cmpl
and
lret
jl
cld
adc
lock
int
repnz
cmpsb
push
scas
jo
inc
pop
jnp
ss
xchg
jl
sbb
cmc
push
mov
push
mov
ja,pt
nop
push
in
loope
cmp
test
push
xor
jp
mov
or
push
icebp
xor
fldt
jbe
adc
imul
push
repz
movsb
icebp
std
jb
xor
out
push
mov
cmc
es
in
jge
lods
rcl
mov
mov
xor
mov
outsl
shr
sbb
pop
adc
sbb
xor
pop
dec
fld
push
icebp
leave
cmp
dec
aad
rorb
ret
mov
int3
test
push
rcrb
leave
mov
or
sub
jne
cmp
add
xchg
mov
and
cmpsb
inc
lea
or
jge
jl
sbb
inc
aad
pop
test
pop
scas
or
test
mov
loope,pn
xchg
and
les
cmp
daa
addb
inc
scas
xchg
cmpsl
dec
lods
bound
lcall
aam
and
and
jg
sbb
inc
mov
in
pop
push
js
jmp
mov
mov
add
xchg
and
xor
and
mov
push
int
int3
dec
ret
push
mov
jo
repnz
lcall
bound
shlb
add
jmp
pop
fwait
sbb
cmp
cmpsb
push
xchg
or
int
mov
out
ds
push
arpl
call
jge
mov
out
imul
push
jne
test
sub
jo
aad
xor
into
out
movhlps
pop
mov
mov
push
dec
rolb
xor
push
nop
es
scas
and
mov
inc
in
mov
or
aad
xchg
call
sub
push
loopne
mov
or
mov
sahf
inc
pop
dec
push
sarb
mov
pop
outsl
mov
sub
ja
mov
jmp
sbb
push
ss
or
sahf
int3
mov
push
ljmp
and
out
and
popa
pop
pop
push
cltd
push
mov
popl
mov
rclb
cmpsb
jno
push
lds
add
cmc
out
dec
into
mov
aaa
mov
add
mov
mov
dec
xchg
movsb
gs
scas
out
sbb
pop
xor
stos
dec
push
mov
fwait
and
shrb
shl
add
stos
jg
aaa
add
add
dec
fucomi
pop
mov
icebp
mov
fdivr
sbb
lds
dec
xor
adc
out
jns
mov
ja
sub
fcoml
inc
popl
cs
mov
push
inc
cmp
xchg
in
inc
std
mov
imulb
aad
mov
roll
in
leave
sbb
push
inc
je
mov
add
push
insb
cmp
mov
stc
fisttpl
jno
je
and
test
cmp
pop
pusha
xchg
aad
ficompl
scas
cwtl
cli
jle
jno
leave
dec
loop
xchg
xchg
aam
and
ficoml
mov
ds
mov
mov
iret
or
push
or
push
or
jae
repz
repz
push
cld
test
je
adc
lret
sahf
mov
popf
test
xchg
xor
mov
or
xor
pushf
in
div
and
mov
sti
sub
roll
test
scas
add
sbb
into
jae
mov
faddl
enter
mov
out
jmp
and
fisubrl
test
mov
lahf
out
jp
scas
cmp
pop
leave
mov
jmp
jae
and
xor
sbb
sub
pop
stos
inc
and
in
sub
repz
test
push
mov
add
pushf
pop
fdivrp
pop
push
add
or
shll
add
in
mov
jnp
cmovnp
loopne
mov
mov
sbb
into
into
aam
cmpsb
fimull
rcll
add
cmp
push
pusha
and
jle
ss
mov
mov
mov
repz
sbb
xor
faddl
push
sti
fucom
loope
mov
or
decb
mov
xor
popf
xor
jp
sub
pop
jle
jnp
cmpsb
popf
push
jns
xor
cmp
push
cmc
and
xchg
in
in
lods
jb
leave
jo
jb
ja
out
adc
jecxz
pop
sbb
js
sbb
jne
add
js
sbb
je
nop
out
xchg
adcb
cmp
ss
inc
out
jne
jmp
push
lods
dec
and
xchg
in
aad
push
pop
pusha
faddl
sahf
adc
ror
mov
sar
cmpsb
xor
hlt
mov
test
inc
fcmovbe
pop
ljmp
jae
jb
and
mov
mov
shr
jp
jge
roll
gs
lret
hlt
pop
lahf
arpl
addl
mov
mov
mov
add
xlat
dec
lret
imul
add
inc
or
subl
pop
mov
xorl
fsts
dec
int3
les
xchg
fsubs
mov
or
orl
repnz
test
test
sbb
out
shl
adc
sbb
popf
shll
enter
inc
aas
cwtl
inc
outsl
fwait
scas
mov
je
lods
rol
subl
mov
mov
scas
das
shrb
cmpsb
jb
jae
out
dec
push
mov
mov
or
sub
test
inc
lods
cmp
dec
push
xor
add
mov
and
inc
test
mov
nop
jne
jp
jnp
int
filds
and
add
add
mov
xlat
mov
out
mov
mov
paddd
dec
and
mov
loopne
into
div
cwtl
into
xchg
enter
std
push
adc
inc
ret
mov
pusha
xchg
pusha
push
push
xchg
push
inc
mov
dec
leave
lahf
icebp
aas
lcall
pop
dec
outsl
addb
or
mov
ja
push
push
mov
shrl
or
fmull
xchg
or
mov
jnp
sbb
jge
sub
push
or
insl
dec
arpl
or
repz
loop
adc
xchg
cmp
jmp
push
xchg
iret
loope
sbb
loop
test
stc
xchg
dec
sbb
and
jge
mov
fnstsw
sbb
sub
jle
mov
mov
pop
push
ficoml
arpl
xor
sbb
add
test
fistpll
and
cmp
sbb
add
shrl
inc
mov
stc
stos
sub
frstor
aam
xlat
or
xor
add
ret
jmp
enter
mov
outsl
cwtl
js
or
stos
push
jo
xor
push
testl
push
jne
iret
ret
jb
pop
fstps
cmpsl
pop
jne
inc
inc
lret
push
adc
add
jb
jns
pop
ljmp
cmp
dec
cmp
cltd
sub
aas
lcall
out
data16
rorl
ss
insb
es
push
ja
loop
cld
sbb
arpl
leave
hlt
jecxz
or
cmp
nop
inc
mov
insb
jl
movsl
pop
pop
sbbw
push
test
mov
adc
js
or
dec
add
pop
clc
pop
inc
jecxz
aas
sti
and
xchg
ret
pushw
imul
jmp
imul
mov
rcrl
pminsw
add
mov
vmovdqa
adc
mov
frstor
or
dec
je
mov
je
loope
imul
cli
lods
test
cmpsb
xchg
scas
or
xor
icebp
pop
inc
jo
sti
xchg
dec
loopne
xor
pop
sub
jecxz
sub
shll
js
mov
mov
sbb
shlb
add
dec
test
insl
inc
mov
cmp
mov
sbb
orb
sub
les
add
pop
jge
and
in
or
sbb
dec
adc
out
xor
mov
lods
lds
adc
mov
gs
inc
out
test
mov
shrb
mov
add
sub
sahf
sahf
xchg
std
cmp
jmp
xchg
mov
dec
stc
cmp
sbbl
mov
shlb
arpl
in
pop
and
std
mov
xchg
clc
cmova
test
sub
mov
fwait
out
sub
in
cmp
cmp
stc
or
ret
and
and
sub
sbb
mov
fimull
sti
fisubrl
fwait
adc
and
out
adc
inc
sub
icebp
push
push
sub
inc
fst
pusha
pop
jg
cmp
xor
xor
and
stos
push
in
jns
in
mov
dec
je
pop
mov
mov
jo
inc
mov
cld
mov
pop
xor
sbbb
repnz
stos
mov
cmp
stc
pop
dec
aad
fildll
rcr
push
or
leave
mov
sbb
push
xchg
mov
xchg
repnz
pop
cmpsl
mov
je
push
aaa
and
jp
sub
addr16
lret
push
adc
test
mov
add
cmpsl
es
psrld
jb
mov
xchg
mov
xor
mov
mov
sub
ret
lret
icebp
scas
lret
fsubl
jl
inc
mov
fnstcw
xchg
divl
jecxz
std
pop
xor
mov
push
add
hlt
xchg
movb
dec
push
mov
mov
fwait
mov
dec
pop
dec
adc
jge
and
mov
les
enter
adc
xor
aas
pop
pop
mov
dec
inc
pop
xlat
call
repnz
push
or
loopne
fdivrl
adc
and
ds
push
mov
or
fwait
push
adc
pop
insl
adc
adc
or
fisubs
lods
imul
mov
pop
lcall
outsb
jne
lcall
je
movsb
jle
mov
in
cmp
nop
daa
les
lret
xlat
dec
or
dec
in
adc
cld
xchg
sub
imul
dec
cmp
lea
mov
scas
stc
sub
push
push
cmp
inc
in
mov
cltd
aaa
aad
movsl
xlat
call
mov
int3
lds
or
lret
js
pop
jl
mov
ja
into
dec
add
cmc
lock
adc
repz
mov
out
stos
push
lret
add
outsb
fists
cmp
lcall
in
jo
jmp
ljmp
xor
sbb
dec
xchg
outsl
push
pop
mov
mov
cmpsb
add
adc
jb
adc
or
jle
call
pop
cmp
and
movsl
test
inc
pop
mov
cmpsb
jns
daa
movsl
inc
push
mov
push
cld
loopne
mov
push
dec
mov
dec
sbb
clc
cmp
notb
in
mov
in
aad
mov
push
popf
inc
dec
dec
inc
in
jno
lods
push
popf
clc
adc
pop
insl
add
sub
das
mov
mov
test
cmpb
sti
aaa
jb
nop
ljmp
ja
je
test
es
shrl
sub
pop
fists
in
je
out
xorl
mov
push
xor
or
jns
das
dec
popa
pop
sub
aam
jl
lcall
ja
cmp
mov
hlt
mov
jae
addl
xlat
jnp
rcrl
scas
mov
mov
por
popa
pop
test
mov
jnp
jbe
xor
or
rcrl
push
cmp
inc
cs
fidivl
hlt
into
flds
insl
cltd
fsubs
adc
out
xor
notl
dec
lods
adc
jle
add
xchg
ja
fwait
out
xor
cmp
sti
xchg
cltd
loope
fcoms
hlt
pop
pop
jl
dec
pop
inc
jl
rcrb
leave
mov
pop
mov
pop
loopne
push
push
jl
iret
add
xchg
inc
sub
jl
mov
rorl
fmull
sbb
std
js
movsl
jae
lods
mov
call
fimuls
push
xor
mov
out
mov
repz
xchg
pop
pop
mov
and
fistpl
in
in
inc
jecxz
sbb
insb
nop
out
insb
adc
push
jae
lods
repnz
and
cmpsb
cmpsb
jg
sbb
jge
inc
xor
mov
hlt
adc
xchg
ds
int3
jp
in
adc
test
jae
sbb
and
push
fcomps
cmp
mov
xor
fchs
lahf
rclb
std
sub
lds
frndint
or
stos
insb
stc
in
lds
sbb
repz
or
lds
fstpt
pop
mov
add
aaa
test
xchg
cmpsb
xor
mov
mov
xchg
jnp
xor
push
adc
fcoml
sahf
rcrl
or
mov
cs
arpl
jge
mov
push
mov
ret
call
xchg
mov
leave
cmp
leave
fdivs
scas
dec
and
or
into
jno
jo
movsl
dec
mov
cs
idivb
mov
cli
imul
inc
loope
add
adc
sub
pop
push
mov
pop
mov
mov
pop
xor
jne
es
int
push
aas
out
out
mov
lahf
fcoms
jp
xchg
lods
xor
cmc
ja
int
push
mov
movsb
popf
jg
cmp
cwtl
jecxz
xor
nop
imul
mov
leave
pop
sub
add
pushf
adc
xchg
dec
jmp
add
stos
inc
cmp
jno
ljmp
gs
mov
inc
test
mov
pushf
loop
insl
adc
cmc
lahf
pop
clc
test
nop
jge
mov
daa
rclb
sub
scas
ss
testl
mov
outsl
cmp
arpl
sarb
jle
ss
push
test
jbe
dec
orl
mov
inc
out
test
xor
xchg
data16
sbb
jecxz
call
mov
xlat
cmc
push
dec
inc
repnz
das
inc
xchg
sti
shll
into
mov
wbinvd
js
or
jno
or
adc
fnstenv
cli
adc
and
inc
out
mov
js
mov
aam
push
jmp
xor
lcall
push
xchg
movsb
and
jbe
outsl
out
mov
stc
push
lahf
cltd
daa
dec
sarl
sbb
fs
mov
lods
test
lahf
imul
sub
xchg
pop
jp
pop
mov
shll
sub
push
ret
loope
icebp
push
out
sbb
pusha
xchg
mov
fadds
pop
call
dec
add
stos
add
push
jl
xchg
push
sbb
push
push
imul
cld
das
push
xor
std
fisubl
jno
dec
adc
and
or
inc
testb
push
daa
rorb
stos
popa
and
cmp
push
es
mov
push
adc
sub
mov
in
out
sub
nop
mov
xor
aad
aaa
clc
add
ret
mov
xor
inc
jb
pop
mov
scas
cmp
mov
int3
subb
pop
and
test
or
imul
cmp
xchg
add
mov
lock
add
or
stc
mov
dec
cs
mov
fld
in
inc
mov
pop
ja
push
shrl
ja
add
dec
daa
mov
push
adc
or
and
lret
inc
lcall
aad
jmp
push
mov
cwtl
mov
aad
jns
add
add
mov
cmovns
or
faddp
or
fstpt
movb
or
xor
data16
xor
sub
jbe
push
mov
adc
cmc
sub
loop
cltd
push
scas
mov
loope
xor
fistpl
test
int
repz
xchg
sbb
out
and
sub
xchg
cmp
in
xchg
imul
mov
leave
mov
sbb
adc
pop
outsb
pop
sub
add
xor
mov
xor
push
imul
imul
clc
daa
add
sbb
lret
cld
sbbl
decl
sti
or
sbb
push
mov
push
add
call
cmpsb
orl
in
test
sub
jae
mov
dec
fcmovbe
push
jg
xchg
push
xchg
and
sub
in
int
testl
inc
pop
iret
sub
ss
add
dec
cmpsl
xor
pop
add
push
icebp
mov
jl
jl
xchg
mov
push
test
adc
std
dec
lcall
push
pop
mov
stc
jg
lcall
sbb
test
test
jns
pop
push
mov
mov
push
icebp
cli
add
mov
push
mov
fidivrs
mov
cs
or
cmpsb
data16
mov
inc
sarb
les
inc
mov
add
push
lods
push
mov
sbb
in
cmp
js
sti
xor
scas
adc
rorb
mov
sti
jne
jmp
sbb
data16
sbb
inc
add
stos
ja
mov
sysenter
popl
pop
pop
out
scas
and
jecxz
dec
loopne
mov
mov
dec
cmp
push
shrd
or
xor
xor
dec
mov
out
ja
xlat
mov
enter
mov
mov
dec
test
or
add
insl
add
es
lcall
stc
inc
fistl
fldcw
fwait
fwait
cmp
push
das
cltd
push
iret
push
push
mov
jo
add
loop
xor
iret
lcall
decl
xchg
pop
inc
notl
cltd
xor
sarb
inc
push
or
pop
jno
push
sbb
or
bound
fisttpl
out
inc
add
xlat
push
gs
clc
imul
stos
add
mov
shlb
js
mov
ja
xchg
add
aam
pushf
les
push
add
call
hlt
lods
inc
and
inc
adc
cmp
add
push
repnz
test
aam
dec
mov
lret
stos
jb
inc
cmc
jmp
jo
jl
sti
pop
int
sub
dec
fmull
mov
adc
daa
enter
adc
dec
lret
sbb
inc
gs
imul
jbe
add
std
mov
sbb
jle
push
dec
arpl
mov
and
cmpsb
test
in
mov
push
lret
pop
mov
bound
sub
clc
inc
mov
enter
pop
daa
dec
aaa
xchg
mov
sub
aam
push
fdivrs
mov
and
xor
push
adc
enter
lret
test
push
fnstcw
lret
inc
bound
jbe
int3
push
scas
xor
icebp
addr16
lea
and
pop
aam
imul
sub
push
sub
sbb
std
push
mov
jge
sub
test
xlat
jmp
imul
lret
sub
shll
cmp
dec
test
xchg
arpl
inc
jbe
jge
fdivs
imul
mov
into
js
inc
mov
icebp
mov
sbb
push
bound
mov
push
scas
inc
addr16
sbb
xor
test
filds
and
dec
call
cmp
leave
xor
in
dec
cmp
imul
sbb
scas
jp
fidivl
cld
notl
jne
pop
mov
test
xchg
xlat
ss
pop
cld
pop
in
test
mov
or
les
inc
mov
and
push
pop
jb
clc
jge
gs
cmp
fsubr
pop
out
push
inc
imul
or
stc
adc
testl
mov
dec
repz
ret
imul
xor
rcrb
mov
or
add
dec
inc
test
inc
inc
arpl
sub
push
push
push
clc
insb
sysenter
sub
inc
cltd
dec
cmp
cli
push
push
cmp
jns
int3
push
in
mov
mov
cmc
xor
in
icebp
xchg
jle
pushf
loope
sbb
inc
scas
addr16
addb
mov
add
addr16
mov
inc
cmpsb
ja
fstpl
or
mov
fildl
cli
add
xchg
mov
lret
xchg
lahf
sbb
jo
xchg
in
inc
outsl
xchg
out
dec
mov
sub
insb
out
out
sub
cmp
pop
add
test
sbb
jne
and
push
adc
idiv
mov
push
fcoml
clc
pushf
lock
inc
or
fistpll
pop
in
out
test
lods
sbb
mov
repz
inc
and
jno
in
ljmp
push
insb
dec
adc
or
pushf
xchg
fimuls
push
data16
add
mov
push
outsb
out
or
sahf
pop
push
roll
mov
fwait
in
jne
test
test
fwait
test
cs
xlat
push
jbe
sbb
mov
dec
push
movsl
dec
ds
icebp
int3
leave
and
xorps
sbb
test
mov
fdivrl
cmp
xchg
ss
lret
aad
shll
imul
cli
xor
adc
std
sbb
sbb
sub
pop
xchg
rorl
or
jne
shlb
leave
neg
lahf
into
sbb
mov
scas
ds
dec
cli
xchg
shr
aad
popf
xor
pop
insb
jbe
or
int3
jmp
es
mov
xor
mov
shll
outsb
test
fmulp
out
dec
push
pop
loop
out
add
adc
pop
sub
adc
xor
int
push
mov
dec
sbb
out
adc
rcrl
mov
in
mov
out
shrl
inc
pop
xchg
fnstcw
cmpsb
sarl
cltd
loope
aas
or
mov
mov
pushf
dec
fistpl
sub
inc
fdiv
sahf
les
mov
loopne
mov
test
das
stos
sub
sub
test
lahf
mov
loopne
out
popa
cmc
fstl
xor
rcrl
lret
add
xor
scas
pop
sub
sbb
pop
daa
dec
mov
leave
shrl
sahf
scas
jge
int3
add
les
mov
orb
jo
inc
ss
call
int3
jo
or
sbb
int3
lock
and
das
sbbl
ja
das
movsb
xchg
stos
jecxz
push
outsb
adc
cmc
imul
sti
cltd
inc
sbb
jbe
jnp
mov
cmp
ror
adc
sbb
jge
nop
clc
jecxz
pop
stos
in
pop
add
addr16
jbe
xor
movl
xchg
daa
pop
push
dec
mov
lcall
dec
scas
add
stos
xchg
in
mov
jb
pop
dec
leave
roll
or
mov
lock
call
mov
adcb
xchg
test
int
ret
dec
pop
xor
or
out
dec
icebp
jnp
lahf
fdivrs
adc
sbb
fnstenv
cmp
mov
lds
xor
push
xchg
lcall
push
mov
pop
lret
mov
notl
cmp
push
mov
jg
int
lods
jb
or
mov
test
sbb
dec
push
cmp
inc
hlt
iret
adc
cli
cltd
sbb
cmp
aam
cmpsl
mov
adc
fcmovnb
test
mov
cmpsb
sbb
inc
movsb
pop
mov
xchg
cld
pop
sub
adc
out
dec
lahf
dec
pop
dec
ss
mov
orb
jae
faddl
pop
mov
jae
sbb
std
aad
and
int3
mov
call
push
sarl
jmp
dec
mov
fldl
jo
adc
aaa
and
imul
mov
jmp
ja
sbb
pop
movmskps
outsb
push
mov
clc
stos
lods
popa
cmp
sbb
sub
dec
and
pop
push
in
lahf
movsl
and
or
sti
or
inc
pop
es
pop
nop
scas
xlat
mov
mov
inc
push
sahf
aam
push
push
or
mov
repnz
pusha
mov
stos
xchg
cmpl
stos
movsl
enter
repnz
inc
and
mov
inc
pushf
daa
rclb
int
ret
arpl
pop
hlt
sbb
sahf
lock
es
xchg
loop
and
imul
lcall
push
xchg
mov
adc
mov
push
scas
test
nop
loopne
int
cmc
adc
test
dec
in
int
test
mov
scas
repz
fcoms
test
adcb
enter
imul
push
push
sub
mov
aaa
xor
add
testl
adc
add
jnp
add
outsl
ljmp
or
daa
dec
cmp
jne
jne
push
ficoms
in
jp
test
dec
dec
dec
ds
popa
fsubrs
stos
js
lret
mov
imul
sub
bound
movsl
inc
cs
popf
and
cld
push
mov
aad
imul
adc
push
in
adc
cli
out
xor
test
lds
push
into
cmp
fisttpl
popf
into
rcr
into
mov
lds
sbb
sbb
fbstp
pop
push
clc
cwtl
push
lock
roll
adcl
lods
add
jb
sti
jno
push
mov
ljmp
ljmp
fisubs
mov
sub
fcompl
inc
push
push
or
lret
push
or
dec
ljmp
adc
insl
push
fdivp
shr
paddb
jb
insb
cmp
mov
pop
aaa
lcall
mov
adc
dec
xchg
movsb
jne
xchg
cli
movsb
mov
ret
or
aad
fs
enter
add
cld
in
and
jmp
xor
cld
adc
dec
jno
subb
fs
xor
dec
stos
dec
cmp
orb
outsl
dec
bound
outsl
xchg
pop
outsl
popa
mov
xchg
push
push
aaa
dec
inc
mov
lret
repz
jle
movsl
jo
and
or
push
cmpsl
addr16
fisubl
sbb
and
insl
insl
arpl
mov
lahf
and
pop
std
call
andb
cmp
imul
loopne
ss
dec
xor
scas
inc
sbb
call
pop
dec
adc
int
add
mov
out
scas
lods
dec
xor
rclb
dec
sbb
or
out
inc
sub
and
xlat
sbb
repz
mov
lahf
cmp
jp
adc
push
xor
cmpsb
mov
push
xchg
hlt
cmp
shrl
lcall
insb
add
cmp
cli
std
mov
dec
shl
add
mov
push
xchg
loope
pop
movswl
cwtl
jb
test
test
hlt
inc
in
inc
aas
outsl
jne
jns
xchg
sti
inc
inc
adc
cmp
jo,pn
stc
add
lahf
cli
dec
dec
jp
mov
ljmp
cmp
and
pushf
test
push
out
cli
bound
pop
inc
cwtl
shll
jbe
dec
lods
push
sub
add
adc
adc
fstl
mov
mov
or
inc
xor
or
jp
andb
push
cmc
sbb
mov
add
mov
jecxz
sbbb
xor
nop
enter
idivb
pop
fidivrs
mov
mov
repz
pop
test
and
push
adc
scas
mov
xorl
ret
pop
mov
push
sti
lcall
test
loopne
xor
ljmp
mov
adc
das
xchg
mov
and
pop
aas
pcmpgtd
mov
sbb
in
sbbb
pop
cs
mov
xor
push
fsubrs
addr16
jl
imul
ret
inc
sbb
loope
mov
scas
xorl
ss
test
or
inc
inc
stc
cmp
cli
or
rcrl
cmp
daa
loope
icebp
xor
inc
mov
scas
mov
jae
dec
jge
push
cltd
jns
jnp
xor
gs
dec
sub
in
aaa
dec
xchg
lock
ret
xor
mov
test
in
jno
xlat
mov
xchg
int
out
add
jbe
mov
mov
pop
add
fcom
cmp
push
mov
add
test
clc
mov
test
adc
or
lret
fisubrs
repz
xorl
cmp
sbb
fldl
dec
outsl
int
sub
scas
ja
mov
mov
add
sbb
loope
cmc
xchg
repz
insl
sbb
or
je
ss
sbb
dec
bound
leave
pop
pop
pop
pusha
xchg
inc
and
aaa
or
add
dec
pusha
inc
xchg
dec
scas
cmc
jmp
push
push
mov
sbb
mov
push
fildll
les
int3
imul
jmp
cltd
mov
add
ret
jle
in
cmpsl
pop
sbb
jbe
pop
mov
inc
dec
and
xor
lods
add
xchg
fildll
adc
pop
mov
insl
mov
in
ljmp
and
ret
jecxz
stos
cmp
insl
sbb
andl
mov
clc
lock
pop
push
jae
push
mov
mov
mov
mov
add
cli
lea
sahf
and
or
mov
jnp
aas
scas
pop
jecxz
jbe
popa
jp
dec
jns
imul
gs
in
ret
in
jg
sub
push
in
sbb
jns
lds
cmc
add
mov
out
lods
mov
pop
dec
push
sbb
xor
push
mov
push
mov
sbb
and
cwtl
data16
repnz
ret
imul
sbb
xor
sbb
xlat
sbb
call
xor
pop
fldenv
orl
sbb
pop
inc
dec
in
dec
and
mov
mov
out
js
add
dec
mov
cmp
into
fnsave
or
sbb
add
jl
pop
imul
popa
rcrb
inc
cmc
pop
dec
mov
sbb
push
popf
jmp
mov
pop
xchg
dec
jecxz
fwait
add
jle
lods
cmp
sub
xchg
dec
mov
jo
jnp
cmpsl
lret
fs
movsb
mov
xchg
clc
mov
leave
push
jp
xchg
sbb
xchg
push
ret
pop
push
dec
scas
lods
add
sub
fadds
dec
xchg
or
lcall
push
je
xlat
int3
rsqrtps
int3
sahf
scas
in
test
popa
aam
fs
ret
mov
cli
iret
jle
ret
loop
out
test
pop
and
dec
lock
jmp
test
sub
sbb
dec
int
mov
adc
dec
sbb
movsb
mov
ljmp
adc
int
inc
ja
aaa
std
adc
in
ficoml
outsl
insb
jo
or
push
insb
leave
xchg
push
jb
xchg
lods
push
mov
mov
pop
jb
dec
pushl
ljmp
or
push
unpcklps
pop
mov
adc
cwtl
add
imul
mov
lods
jns
pop
adc
mov
loop
aas
mov
imul
pop
sub
dec
movsb
pop
aam
subb
lcall
bound
dec
dec
inc
cmp
aas
mov
mov
mov
lcall
rcrl
stos
mov
arpl
ljmp
insl
lret
sub
and
xchg
pop
xchg
xchg
mov
data16
outsl
or
push
jle
push
nop
gs
call
insl
push
pop
popf
neg
in
sub
sbb
sbb
cmp
popf
or
adc
popa
hlt
fistpl
or
sbb
mov
cmpb
mov
inc
test
ja
mov
ficompl
pop
inc
enter
movsl
shll
xchg
adc
or
cli
xchg
jle
popf
outsl
dec
out
cld
jns
lahf
lods
ds
jno
sahf
push
stos
add
push
pop
stos
pop
mov
dec
sub
inc
lahf
pop
js
dec
xor
mov
ljmp
call
aaa
ss
mov
xor
rolb
cmp
sbb
clc
incb
add
idivb
cs
iret
inc
clc
xor
cmp
mov
stos
adc
add
xchg
xchg
xchg
pop
mov
gs
mov
dec
rorb
pop
ja
jns
jbe
aas
mov
xchg
in
cmp
sbb
fdivl
outsl
add
mov
mov
popa
pop
out
sub
xchg
ja
mov
lock
ljmp
adc
fwait
ret
xor
cmp
add
lret
jg
out
outsl
and
lods
cmpsb
fwait
xchg
mov
outsb
jl
jo
push
dec
mov
mov
dec
loop
insl
icebp
leave
out
lea
ret
and
sub
pop
aas
jle
dec
dec
jecxz
xchg
mov
sub
mov
sarl
push
out
xchg
pop
pop
out
add
pop
sub
mov
shlb
cmc
mov
jg
mov
jp
lret
pop
push
mov
aad
gs
push
dec
dec
dec
push
enter
xor
or
mov
adc
sub
mov
xlat
mov
cmp
push
mov
lahf
popa
pop
int
adc
aad
cli
rcrl
dec
nop
or
push
xchg
dec
ja
pop
add
mov
mov
repnz
mov
mov
iret
aam
xchg
cmp
adc
xchg
xchg
push
ss
jle
sti
sbb
xchg
xor
ss
pop
repnz
mov
cmpsb
shrl
mov
jb
pusha
jecxz
push
test
leave
push
mov
scas
sbb
js
xchg
mov
push
jbe
sub
out
fildl
aad
or
sub
nop
pop
push
nop
mov
and
arpl
in
and
ds
jp
mov
insb
push
cmp
sub
repnz
movsl
or
gs
push
adc
insb
push
mov
jns
daa
sbb
test
jge
daa
mov
xchg
dec
push
lcall
mov
cmp
push
popa
and
mov
into
sahf
push
cmp
inc
add
pop
push
inc
add
push
add
out
test
and
sahf
fsubs
int
cmpsb
lea
mov
clc
neg
mov
mov
xchg
ds
in
es
loope
mov
and
aaa
loop
sub
jns
xchg
js
sahf
insl
popa
ja
pop
mov
xor
rclb
inc
popa
xchg
xchg
mov
or
call
xchg
inc
jecxz
xchg
dec
fnstenv
cmc
js
cmpsb
leave
mov
push
mov
sub
fldcw
jo
sub
test
jbe
ficompl
and
mov
int3
mov
negb
jmp
movsl
mov
adc
jnp
mov
call
xor
repnz
xor
push
daa
hlt
cwtl
xor
pop
rcrb
or
out
or
inc
xlat
pushf
or
cmp
inc
or
jg
imul
aad
mov
ret
hlt
xor
test
scas
loope
ss
pusha
push
mov
stos
or
add
push
mov
popa
push
scas
into
push
mov
fdivrs
mov
mov
shrb
ja
push
mov
add
loopne
xor
adc
fildll
icebp
pushf
cli
xchg
dec
xor
jmp
xlat
inc
add
je
enter
in
js
mov
rcl
imul
rcl
out
mov
std
adc
inc
lahf
sbb
push
xlat
push
and
and
mov
cltd
adc
push
sti
shrb
repz
add
ljmp
jno
cltd
xor
imul
scas
idivl
std
jb
hlt
jnp
sbb
nop
cltd
sti
lahf
fdivl
decb
add
push
movsl
mov
jle
jbe
es
dec
mov
sbb
xchg
mov
jo
scas
iret
in
xor
dec
popf
ds
scas
and
and
adc
xor
mov
xchg
outsl
cmp
nop
jbe
fisubrs
jecxz
sbb
addb
mov
mov
inc
and
xchg
fs
mov
scas
ja
sbb
push
push
repz
mov
adcl
clc
pop
test
loope
nop
mov
hlt
push
pusha
add
dec
mov
fstp
imulb
jbe
icebp
push
in
cli
ret
inc
mov
cmp
mov
or
xor
jp
stc
ss
repz
pop
popf
sub
pop
cmp
mov
dec
pop
in
pslld
aas
les
inc
shr
or
sbb
xor
shll
in
push
pushf
test
shrb
sbb
push
movsl
insb
jl
adc
inc
or
imul
fs
fstps
inc
adc
gs
pusha
lret
loop
fldl2t
add
test
vmovss
mov
hlt
cli
dec
push
ss
std
outsl
cld
call
and
mov
sar
test
jbe
push
adc
adc
lea
leave
imul
lock
dec
repnz
mov
test
fstps
scas
mov
scas
xchg
cmp
in
mov
pop
lret
or
adc
std
jmp
lods
pop
mov
or
stos
or
cs
xchg
cmp
sub
jp
push
std
jmp
cltd
roll
ficoms
ds
push
cmp
std
cmp
ret
pop
sbb
imul
fnstenv
adc
mov
mov
xor
gs
jns
push
mov
dec
or
fcmovnu
sub
call
cwtl
fisubrs
add
mov
xor
mov
mov
jecxz
in
fcoml
punpckhbw
lods
jae
push
cmp
adc
xor
or
cmpsb
jecxz
mov
inc
dec
movsb
adc
in
out
pop
lods
popf
jp
mov
sub
pop
lahf
mov
xchg
xchg
mov
add
jbe
sbb
push
mov
daa
stos
push
mov
cld
dec
lcall
dec
mov
lret
cld
mov
push
push
jae
pushf
mov
dec
test
aas
jb
mov
dec
int3
mov
sub
int3
loope
cmpl
pop
push
adc
xor
pop
out
add
sahf
push
jne
test
ret
mov
out
push
andl
cmp
adc
divl
hlt
mov
out
or
pushf
cmpsl
add
and
das
jo
ja
pusha
mov
jl
or
jmp
out
mov
mov
xorb
movsb
jne
xchg
jne
sbb
ret
iret
bnd
mov
push
dec
fdivrl
pop
mov
mov
jo
ret
ds
add
lods
xor
jmp
mov
jnp
mov
cwtl
cmp
xrelease
mov
inc
push
and
jns
sub
pop
dec
or
ljmp
leave
jecxz
dec
imul
mov
cmp
sar
sti
jbe
push
jbe
dec
lods
mov
scas
fmull
xor
aas
movsl
cltd
and
shl
jecxz
push
inc
xchg
gs
std
icebp
jmp
add
xchg
std
xchg
mov
dec
sbb
add
nop
incb
iret
inc
gs
aaa
sub
ret
cmp
mov
loop
sbb
lahf
cmp
xor
mov
lods
add
or
inc
xchg
mov
mov
pop
sbb
fcom
push
sub
not
mov
loopne
sub
cmp
add
or
or
jns
icebp
dec
and
cld
movzbl
sbb
jns
das
divb
inc
cmc
int
hlt
jo
pop
sub
cmc
loopne
lahf
mov
gs
pop
lcall
pop
out
in
iret
stos
push
cmp
push
lock
pop
mov
push
jbe
cmp
rclb
xchg
mov
push
adc
bnd
or
clc
mov
insl
xlat
or
push
sbbb
sarb
mov
pop
ja
xchg
dec
ss
sub
aaa
cmpsl
sbb
or
fdivp
pushl
lret
in
mov
mov
insl
sahf
mov
jnp
mov
xchg
push
lods
cmp
or
movsb
in
ja
push
mov
mov
lods
xchg
iret
into
inc
imul
mov
cli
dec
and
test
pop
cmp
adc
sub
inc
hlt
cmp
bound
out
gs
push
cmp
test
sbb
jge
lods
pushf
popa
fildll
int
cmc
lea
pop
and
add
cmpsb
xlat
into
add
jecxz
mov
push
jbe
test
sbb
sub
lods
shlb
test
addr16
pop
fwait
roll
das
scas
pop
aad
popl
imul
idivl
add
jbe
dec
jp
arpl
arpl
insb
cmp
arpl
cld
cmp
add
ljmp
ret
gs
cltd
or
sahf
aaa
adc
inc
mov
aam
xor
je
sbb
cmpsb
clc
push
or
jo
sbb
xchg
push
test
fs
xchg
movsl
jo
push
sbb
aad
aam
bound
jnp
xchg
orb
inc
insl
mul
test
clc
mov
inc
jmp
sub
sub
fstps
dec
sbb
loope
cld
mov
gs
rolb
lea
inc
pop
mov
dec
test
outsb
or
cmc
mov
push
cmp
push
jmp
sbb
out
mov
lock
enter
repz
inc
push
jp
in
or
rol
and
in
addr16
mov
mov
or
jge
les
and
insb
iret
pop
inc
and
out
jl
ret
push
je
aam
push
loopne,pn
add
cmp
movb
adc
adc
push
mov
rcrb
xchg
xchg
sti
daa
cmp
sbb
enter
dec
sbbl
scas
or
bnd
xorl
stos
repnz
daa
jg
arpl
stc
int
mov
movsl
std
movsb
xchg
ljmp
push
ficoml
xor
orl
enter
cmpsb
dec
adc
sahf
xchg
pop
ja
push
mov
mov
xchg
mov
imul
in
pop
stos
add
jbe
mov
or
dec
icebp
sahf
aam
add
pop
push
jno
icebp
push
jae
in
movl
sbb
dec
xor
fwait
lds
push
cwtl
cmp
fnsave
xchg
into
iret
mov
pop
mov
adc
das
jns
xchg
jecxz
popf
daa
inc
ja
adc
cs
pop
fwait
pop
and
push
fs
aam
inc
mov
jne
movsl
and
or
outsb
inc
jl
mov
dec
aaa
test
mov
cmp
in
sbb
in
pushf
add
push
stos
js
adc
push
ret
or
push
adc
adc
add
pop
jo
lahf
mov
popa
pop
mov
inc
fdivs
cs
shrl
ret
add
das
xor
mov
popa
daa
int
aas
cmc
xchg
insl
scas
icebp
ja,pn
push
addr16
mov
and
cmp
aad
xchg
mov
pop
jnp
jp
xchg
pop
sbb
ljmp
stc
xchg
cltd
xchg
incb
testb
cli
sub
lock
xchg
mov
ljmp
out
movsb
mov
aad
fwait
in
adc
sub
fs
push
aaa
lods
insb
jne
sbb
sahf
cmp
dec
xchg
mov
shll
cltd
adc
ljmp
insb
or
dec
push
imul
in
mov
sti
mov
fistpll
shll
jns
iret
test
sub
ret
mov
lret
cmp
xchg
sub
insl
rorl
mov
lods
xchg
in
aam
popf
popa
pop
call
jg
adc
inc
jae
ret
nop
add
lret
jl
lret
cmp
repz
fistl
divb
xor
int3
cli
and
dec
xlat
lods
mov
mov
mov
dec
les
add
sahf
mov
jl
inc
insl
mov
fnsave
add
pop
aad
and
inc
dec
movsl
insb
xor
sub
pop
sub
push
and
lods
roll
inc
inc
cmp
push
sbb
sti
xchg
sub
jnp
lret
shlb
rcr
pop
inc
jne
jb
mov
cmp
jae
mov
jmp
aad
std
cs
sbb
pop
or
adc
test
repz
mov
negb
cmp
jecxz
sarl
sti
movsb
stc
mov
mov
and
js
xchg
push
loope
int
sahf
or
std
pusha
or
push
in
sbb
movsl
hlt
pop
das
mov
fs
jmp
je
adc
cmp
into
ljmp
push
loopne
repz
push
imul
out
add
in
pusha
jle
insb
and
dec
and
in
mov
mov
je
dec
in
xor
mov
xor
mov
sarb
adc
push
sub
and
fimull
push
int
mov
push
xchg
sub
std
jno
shrb
cmp
fisubs
xor
add
mov
mov
in
xor
xor
addr16
fs
in
push
add
and
add
scas
mov
and
inc
shll
std
divl
lahf
sub
sub
xor
pop
inc
cmpsl
jne
daa
out
fldcw
jl
sub
xlat
shlb
cltd
cmp
mov
jns
and
cmpsl
xchg
fdivr
inc
inc
jne
dec
adc
into
inc
xchg
lea
imul
idivl
mov
jnp
and
loope
leave
mov
and
dec
mov
orl
lret
fsubrl
shll
mov
idivl
jne
xchg
lock
pop
jnp
xchg
mov
jns
push
fimull
and
idivb
pop
jg
xor
or
insl
inc
mov
adc
push
mov
ficoms
push
movsl
dec
ud2
inc
movsl
sub
mov
adc
inc
out
fst
insb
xor
xor
mov
enter
lods
xchg
in
jnp
push
rcrb
mov
in
fidivrl
imull
ret
xchg
and
mov
add
andl
sub
jecxz
xorb
xor
arpl
scas
movsb
sbb
test
mov
bound
cmp
xchg
test
mov
sbb
in
jmp
xorb
inc
and
pop
push
pusha
mov
lea
fildll
fidivs
inc
inc
sbb
subl
push
lahf
sbb
out
dec
in
enter
addr16
jno
lret
aad
jb
fimuls
mov
xchg
push
in
jl
push
add
out
nop
xor
xchg
xchg
push
push
mov
ss
cs
inc
and
push
push
push
jnp
int
jo
stos
mov
pop
xlat
inc
add
and
add
lea
test
sti
lds
adcl
cmp
adc
mov
add
pop
push
mov
mov
sahf
ljmp
mov
dec
popf
les
xor
mov
cmpsl
lea
mov
push
gs
mov
jmp
lods
adc
inc
cli
add
adc
sbb
dec
daa
out
or
inc
push
and
cmc
cltd
and
pop
aad
imul
movsl
cltd
nop
dec
ret
dec
or
movsl
push
dec
cltd
les
repz
xor
and
sub
iret
repz
lret
dec
insl
xchg
rorb
cli
cwtl
or
sahf
sbb
test
aam
scas
out
popf
push
andl
cmp
sahf
out
jecxz
dec
subl
cwtl
stc
clc
ljmp
adc
faddl
lods
adc
cli
mov
ljmp
rcrb
clc
or
dec
aad
inc
cld
cltd
aad
scas
xchg
sbb
jmp
ret
ja
dec
mov
sub
stos
aad
sbb
push
jle
inc
inc
jo
jge
mov
test
arpl
ja
xchg
adc
stos
mov
xor
mov
popa
rorl
jle
rclb
jns
cmp
pop
pop
mov
dec
mov
ja
xlat
jmp
mov
int
push
outsb
pop
push
hlt
sub
cmc
sti
inc
mov
in
xorl
mov
arpl
in
jns
enter
xlat
push
mov
xor
pop
mov
cs
jae
mov
lret
cmp
dec
incb
in
fiaddl
clc
rol
jno
fldt
test
in
cwtl
push
push
insl
stos
shll
mov
in
adc
sub
rcll
test
xchg
sub
cmp
repnz
dec
in
pusha
mov
or
pop
mov
push
push
movsb
sub
and
popa
xchg
out
mov
push
xor
scas
inc
and
mov
sub
mov
sbb
mov
sub
sub
les
repz
leave
daa
in
jl
pop
mov
mov
mov
xchg
andl
inc
or
addr16
lret
inc
xchg
dec
test
mov
mov
lods
sbb
dec
xchg
lock
into
hlt
dec
jg
push
cmp
test
mov
sub
sub
int
pop
outsl
xor
sub
mov
mov
cmc
inc
mov
pusha
xor
test
adc
mov
sti
ret
mov
ljmp
loop
fisttps
lods
or
cmc
pop
lea
adc
mov
test
filds
adc
enter
cmp
cmp
mov
jge
mov
ror
or
push
movsb
scas
in
or
ret
adc
and
push
mov
incl
cmp
or
jns
je
adc
stos
sbb
arpl
and
xlat
sub
sti
dec
or
jnp
xor
cmp
fildl
sub
adc
push
inc
popa
pop
pusha
xchg
xor
adc
aam
dec
pop
call
repz
mov
mov
lods
popa
ret
aam
ss
sub
cmp
and
jb
jbe
cltd
hlt
sub
xchg
push
sbbl
adc
sti
inc
sub
sbb
pop
ret
add
data16
faddl
fiaddl
add
sub
sbb
mov
mov
jnp
inc
sub
shll
mov
sti
test
mov
sub
mov
mov
data16
sarl
jbe
mov
adc
test
stc
add
pusha
cmp
mov
int3
dec
dec
inc
lret
nop
mov
cmp
dec
pop
inc
jbe
mov
push
jge
adc
fstl
jge
fisubrs
insb
mov
sbb
test
add
movsl
mov
xchg
sahf
ret
loope
mov
std
mov
and
pop
xorl
ds
push
stos
ror
outsb
jb
mov
xor
dec
icebp
cmpsl
xchg
sbb
cld
and
lret
cmpb
jp
xchg
lret
mov
pop
test
push
leave
insl
push
int
jge
and
cmp
xchg
lods
fstps
fstl
loop
pop
add
xchg
addr16
scas
sbb
or
cmp
and
popa
xlat
divb
iret
and
ret
lds
inc
sub
gs
je
jmp
mov
sbb
stos
and
mov
mov
lret
sar
out
xlat
mov
sub
inc
test
hlt
mov
subb
test
cmpsl
test
pop
xor
push
jmp
popa
ret
aaa
lods
xchg
stos
mov
xor
sub
lret
xor
repz
sahf
jno
imul
mov
les
xorl
ret
sbb
xchg
push
lods
push
hlt
in
in
ja
shl
push
aas
sbb
int3
test
test
mov
fdivrs
jbe
xchg
xlat
bound
or
mov
icebp
jns
cli
mov
jbe
xchg
jmp
stos
sbb
push
imul
adc
jno
leavew
inc
enter
jno
std
test
dec
add
aam
aad
jl
rorb
repnz
mov
mov
jnp
or
push
out
ss
push
adc
cmpsb
push
mov
inc
std
push
mov
sub
or
ffree
push
shr
mov
mov
pop
js
sbb
pusha
cmc
mov
cmpsl
xchg
push
test
je
fstl
dec
jae
push
lcall
mov
pushf
inc
adcl
lea
pop
mulb
and
icebp
aam
test
add
adc
or
and
inc
mov
mov
inc
cli
stos
fisubrl
sbb
icebp
nop
test
aam
pop
add
rcrb
.byte
sbb
mov
cltd
cltd
mov
inc
bound
cmp
stos
adcb
fnstsw
call
pop
test
out
fs
hlt
cmpsb
sbb
fimuls
enter
in
adc
mov
jl
pop
sbb
inc
ret
imul
fiaddl
scas
aas
xchg
daa
sbb
xchg
addr16
in
fidivrs
jns
xchg
lds
ljmp
inc
vpshlb
dec
mov
inc
test
pop
je
insl
ljmp
rorl
je
push
sub
faddl
andl
sub
dec
clc
lock
test
loopne
jg
jbe
push
outsl
xor
jb
movl
pop
cmc
mov
ljmp
repnz
pushf
test
pop
mov
cmp
pop
and
fisubrs
push
and
dec
addr16
xchg
outsb
jae
stc
mov
cs
lea
scas
je
inc
pop
leave
adc
mov
or
scas
out
bound
pop
dec
int3
jp
xor
es
call
lcall
mov
adc
push
dec
cli
push
xor
neg
xlat
outsl
add
jo
and
jo
scas
cmpsb
mov
jmp
insb
dec
inc
dec
ljmp
inc
xor
sub
inc
dec
pop
popf
cmp
mov
pop
push
addr16
mov
sbb
loopne
sar
sub
xor
mov
inc
jmp
pop
fnstenv
add
mov
enter
insb
loop
adc
pop
cwtl
mov
xor
subb
jo
and
test
pop
push
dec
pusha
xchg
loope
xchg
es
les
in
mov
xor
cmc
sbb
adc
imul
shrl
mov
popa
adc
das
into
cltd
lret
xor
push
jp
jge
pop
mov
sub
xor
mov
inc
loopne
int
push
xchg
mov
dec
test
fnstsw
inc
es
fstpl
into
repz
mov
sbb
or
add
push
jmp
scas
movsb
cwtl
cmp
push
lahf
jo
icebp
inc
loop
clc
add
out
pop
add
movl
bound
icebp
cmp
jb
mov
ret
ret
add
pop
mov
and
xchg
xlat
loopne
out
push
xor
addr16
in
jmp
xchg
repz
push
outsl
push
inc
sbb
cmc
lret
dec
dec
push
int
fdivs
xchg
sub
dec
mov
lcall
mov
test
add
pop
cli
mov
daa
mov
lds
pop
sarl
stos
je
lods
push
mov
xor
mov
mov
or
lret
and
stos
pop
sub
sarl
out
xchg
dec
stc
adc
jl
sbb
push
jl
repz
xchg
or
sub
mov
test
pop
stos
cmpsl
sarb
sbb
mov
sbb
pop
inc
incb
xchg
xchg
xlat
js
dec
les
mov
pusha
xor
or
add
inc
sub
popa
test
jns
mov
sbb
not
fisubrl
cmp
mov
clc
push
adc
or
dec
fistl
pop
mov
mov
push
or
xchg
gs
lret
cmp
pop
dec
movsl
pop
pop
dec
jne
fs
cwtl
adc
sti
roll
mov
pop
push
fstpt
loop
lods
inc
lea
pop
dec
adc
mov
fbstp
out
fs
iret
stc
xchg
xchg
jle
rolb
cmovae
cmp
ljmp
test
les
sbb
cwtl
mov
sbb
pop
enter
das
xorl
out
data16
mov
leave
adc
outsl
sbb
cwtl
mov
test
push
xor
push
push
push
dec
mov
loop
xchg
adc
cmpsb
inc
mov
popa
dec
cwtl
or
ret
and
jg
mov
mov
xor
or
push
mov
inc
nop
dec
mov
mov
jbe
out
inc
cli
push
jg
fsubrs
data16
sbb
stos
xor
es
or
and
mov
xchg
jbe
pop
repz
aas
pushw
mov
mov
push
sahf
inc
push
notb
insb
xor
negl
lahf
aas
dec
sbb
push
dec
lods
das
cmc
push
cmp
pop
sub
movsl
mov
out
popf
adc
pop
das
icebp
cld
pushf
lret
xchg
and
xchg
fdivl
add
shlb
shl
xor
jbe
test
or
adc
jb
or
out
scas
pop
xchg
pop
dec
adc
ss
push
push
mov
ss
paddd
jb
or
jb
js
cmp
cmp
mov
stos
pop
push
mov
push
adc
aas
push
xor
xchg
dec
mov
lret
insb
dec
ljmp
adc
ret
cltd
xlat
notl
pusha
xor
and
sahf
cmp
and
sbb
jno
xchg
push
push
adc
jno
cmp
cmp
pop
in
sub
and
lods
jp
aas
repnz
icebp
ret
jl
sbbb
mov
mov
mov
cmc
ljmp
dec
mov
lods
mov
stos
test
xor
popa
mov
xlat
and
cmp
sbb
loopne
sbb
ret
add
mov
dec
jbe
lock
jb
out
xchg
jae
xor
sub
std
lock
cmc
dec
jle
inc
xchg
pop
out
sub
inc
add
fs
and
sub
in
in
xchg
or
push
sbbb
cmp
jmp
stc
cmp
es
lods
mov
loop
sbb
in
gs
inc
sbb
jmp
outsl
jmp
cmp
and
cmpsl
push
xchg
jns
inc
jnp
aam
jle
inc
xor
and
sbb
sbb
add
je
addb
test
stos
sub
xchg
sbb
mov
inc
lock
cs
cmp
lcall
mov
mov
sub
or
pop
adc
loopne
repz
outsb
cmpsb
mov
jge
adc
push
and
xchg
enter
fimuls
pusha
xchg
cmc
push
mov
cwtl
mov
inc
js
pop
and
cmpsl
imul
inc
mov
push
sbb
xchg
data16
pop
mov
jg
xchg
add
pushf
rol
cmp
mov
dec
cmp
dec
jp
shr
dec
imul
outsb
or
fsubl
fisubrs
mov
push
int
dec
mov
sbb
and
repnz
jmp
arpl
sbb
js
vandnps
insb
xor
xchg
ljmp
and
loop
insb
sti
sub
cwtl
push
pavgw
adc
leave
mov
jmp
push
mov
es
movsb
lahf
nop
inc
repz
aam
adc
lret
sub
adc
imul
in
inc
in
insl
xchg
xorb
sbb
xorl
mov
idivl
adc
jno
push
sbb
cmp
push
in
pop
cli
inc
mov
outsl
ds
js
jmp
xor
xor
pop
cmp
cmp
or
js
push
scas
sbb
jmp
dec
cmpsb
mov
ja
cli
pop
mov
jge
fidivrs
mov
push
mov
mov
movsl
xchg
sarl
ja
jbe
cmpsb
or
loopne
sahf
test
mov
push
ds
dec
rcrl
repnz
lods
jmp
push
xor
and
jno
jl
dec
jbe
jg
and
or
cli
mov
mov
dec
mov
dec
add
fldl
mov
rcrb
repnz
mov
inc
les
and
add
sarl
fdivrl
in
fiaddl
in
push
inc
sar
mov
or
add
int
mov
pop
add
pop
inc
or
adc
adc
sbbl
dec
jno
jb
mov
pop
pusha
jge
lret
cmc
pop
movsl
pop
aam
mov
ja
adc
push
sub
xchg
aad
xchg
pop
xor
push
jg
int
pusha
push
push
push
mov
outsb
mov
xlat
sub
mov
imull
stc
push
loopne
pop
lods
jne
shrl
or
jl
pop
das
icebp
jge
pusha
pop
fcomp
push
push
xchg
das
and
mov
in
aas
or
push
ss
pop
xchg
mov
xchg
xor
add
mov
lds
jns
add
dec
loop
jmp
mov
mov
xchg
dec
jmp
cmp
jle
sbbl
sbb
fisubrs
pop
addr16
add
adc
clc
mov
sbb
cmp
adc
in
in
popf
repz
mov
pushf
js
out
fs
outsb
out
inc
adc
imul
notb
lds
xor
and
cmpsb
cmp
xlat
add
enter
cmpsb
aaa
cmpsb
fnstsw
loop
inc
sub
xchg
cmp
or
jecxz
xchg
cmpsl
mov
lahf
push
fadd
call
dec
arpl
cmpsb
inc
lret
sbb
and
sub
icebp
rolb
and
push
sub
pushw
and
xor
ret
pop
push
cmc
mov
test
inc
pop
in
sti
push
sbb
xor
cmpsb
dec
rorb
repz
outsb
xor
loope
int3
mov
repz
js
je
mov
sub
sti
fistl
or
fadds
popf
or
mov
fldl
cmc
lcall
mov
or
cmp
mov
sahf
sbb
push
or
jnp
jg
aaa
repz
lea
insb
hlt
ja
xlat
dec
and
fsubrs
scas
cmpsb
out
xor
or
pop
jp
mov
cli
imul
mov
pop
std
dec
in
inc
jl
ret
xor
scas
ljmp
cli
push
sub
lds
into
pop
stos
inc
dec
insl
inc
das
push
sub
pop
xor
mov
cwtl
add
or
cmpsb
mov
ret
ret
jns
xchg
stc
sahf
xchg
ljmp
adc
dec
lds
push
jae
test
dec
stos
add
std
fisttpll
xlat
mov
or
cmp
or
xchg
cmp
xchg
stc
lods
push
cmpb
arpl
jmp
imull
ret
adc
xor
xor
lock
leave
xor
scas
in
add
int3
push
test
rorl
cmp
fstl
sahf
pop
mov
in
xor
ljmp
scas
sub
xchg
test
add
xor
ljmp
jg
nop
jmp
inc
sbb
sub
nop
push
adc
mov
insl
aad
inc
iret
xchg
jb
xor
inc
cld
iret
inc
pop
out
or
flds
sbb
cld
loop
loop
adc
mov
out
dec
lret
inc
sti
fs
fcmovnb
icebp
into
lods
add
add
add
add
or
ds
cmovbe
sbb
jp
scas
jne
adc
sub
cmpb
push
repnz
dec
xor
sbb
lods
sub
mov
xchg
inc
ret
xchg
loop
je
shl
out
cmpsb
rolb
scas
rcrb
mov
out
lea
cmp
scas
jo
out
or
ret
or
hlt
popa
data16
or
xchg
xor
mov
mov
inc
out
aad
xchg
xor
rcrb
imul
push
dec
scas
not
nop
mov
aaa
and
cmpsl
mov
scas
jmp
pop
sub
mov
add
outsl
mov
adc
xchg
imul
push
sbb
xchg
pop
or
add
adc
lds
subl
movnti
sub
jo
xchg
xchg
bound
cmp
push
sbb
cmp
mov
lods
lock
fdivl
mov
inc
lds
leave
ss
stos
dec
xchg
dec
pop
adc
nop
mov
xor
or
out
enter
jecxz
inc
lock
adc
iret
jle
mov
jae
jle
inc
out
cltd
jg
cmpsb
jo
out
pushf
imul
cmp
pop
pop
or
ficompl
lret
call
cs
cmpsl
push
scas
stos
mov
sbb
mov
pusha
loope
jns
mov
sarb
push
push
adc
adc
mov
bound
mov
lahf
scas
jecxz
ret
imul
sahf
jo
andl
push
push
xchg
or
cmp
nop
lret
rcll
nop
jp
cmp
hlt
dec
xorl
jbe
xor
sub
movsb
xlat
lods
cwtl
scas
pop
xor
mov
xchg
push
lock
popf
xlat
or
mov
sahf
xchg
xchg
out
sub
xor
push
xor
sub
test
adc
mov
inc
jp
cwtl
lock
icebp
mov
clc
shrl
lcall
mov
aad
in
mov
push
inc
fistpll
xchg
or
shr
and
dec
pop
lock
mov
int3
mov
dec
cmpsb
test
negb
xchg
faddl
lock
sbb
cli
shrl
enter
xchg
xor
insl
nop
jl
scas
stos
outsl
adc
mov
pop
enter
jl
cmpl
pop
test
mov
xlat
lea
lods
popf
cmp
adc
sti
imul
imul
or
mov
pop
pop
push
sbb
fwait
sub
xlat
push
sbb
adc
addr16
jno
xchg
sbb
hlt
pop
scas
push
fdivrl
and
pushf
popa
add
push
jge
pop
sarb
jp
adc
push
adc
mulb
movsl
jp
cld
pop
mov
icebp
rcr
cld
es
sub
adcb
test
cltd
push
and
xchg
test
sbb
push
and
rcrb
pop
xor
pop
ret
xchg
adc
mov
je
inc
lahf
mov
arpl
and
adc
xor
xor
shr
int3
xchg
pop
adc
stc
es
adc
add
in
fimull
jns
pop
test
call
dec
sbb
in
jae
arpl
lods
inc
xor
push
add
xchg
mov
pushf
cmp
dec
mov
push
cmp
sbb
js
fprem1
and
iret
cmp
addb
ss
sahf
shl
push
andl
mov
fcmovu
ljmp
sar
cmp
sub
xchg
dec
xor
mov
cmp
popa
int3
xlat
fiadds
out
cmpsb
push
bound
mov
jge
jl
popa
fmull
xchg
mov
xor
mov
adc
mov
push
shlb
je
cmp
mov
jecxz
adc
jg
out
mov
out
push
negb
cli
inc
cmp
loopne
fsub
dec
movsl
sbb
mov
xor
lock
mov
test
inc
push
pop
fwait
xchg
neg
mov
cs
repnz
clc
mov
into
imul
dec
xor
pop
inc
cmpsb
fs
dec
or
inc
jl
push
mov
int
gs
mov
fs
pushf
scas
mov
cmp
leave
jo
nop
faddl
data16
push
shll
mov
outsl
sarl
xor
mov
or
xchg
fsubrs
int3
in
adc
je
sbb
scas
pop
or
cltd
push
pop
pop
enter
insb
or
mov
or
fdivrl
mov
sbb
mov
mov
xor
out
jp
loope
sbb
jp
push
ret
xchg
pop
hlt
leave
shl
js
push
aam
sbb
cmp
test
inc
sub
mov
sbb
in
or
in
fsubrp
push
ds
sbb
sahf
cmp
test
sbb
sub
pusha
dec
xor
cmpsb
push
testl
mov
test
inc
fcomi
cmp
fidivrs
insl
mov
popa
add
int
movhps
out
lret
dec
test
sub
cmp
and
adc
adc
inc
mov
jmp
insb
fdivrl
cmpsl
ficompl
arpl
out
push
mov
jnp
repnz
and
insl
in
fwait
mov
mov
jno
dec
dec
fsubrs
adc
pop
leave
and
lock
sub
sbb
test
push
stos
nop
sbb
in
mov
jne
pop
shll
mov
fadd
pop
aas
lock
mov
call
fldenv
icebp
xor
mov
sbb
out
push
pop
jecxz
xor
leave
mov
jmp
std
pop
xor
mov
ror
dec
inc
clc
enter
movsb
mov
mov
mov
adc
add
push
add
repz
shll
pop
mov
lock
arpl
int3
mov
movsb
add
inc
call
jg
popl
adc
daa
roll
lods
xor
sbb
outsl
sbb
or
dec
mov
ljmp
mov
orb
jg
adc
lret
mov
push
jne
iret
test
les
test
das
mov
fucomp
sti
push
outsb
rcrb
rcr
cmpb
add
cmp
xor
arpl
scas
and
jnp
movsl
mov
sahf
aam
push
inc
lcall
imul
psubusb
rorb
cmpsl
ret
outsl
push
aam
fucomp
insb
sub
push
inc
pop
push
popf
test
and
notb
stos
cmp
xchg
jno
jg
jns
test
mov
icebp
gs
cmp
push
and
sub
gs
out
fst
pop
lcall
repnz
mov
mov
iret
lds
lods
dec
imull
in
aad
data16
fdivs
jle
fbstp
fldl
add
jl
les
outsb
pop
test
std
sub
sbb
sbb
lahf
psrld
psadbw
jecxz
test
test
ja
xor
shl
lret
push
mov
std
popf
mov
adc
and
cwtl
cmp
pusha
lods
shll
stos
lods
cmpsb
ja
xchg
sub
pop
ljmp
sbb
lret
and
jp
fistps
sti
jle
lock
mov
adc
adc
mov
mov
rcl
lock
mov
push
or
ret
clc
mov
mov
in
aam
icebp
les
adc
cmp
dec
cli
aam
pop
das
nop
cmp
sub
faddl
cmc
movsb
test
pop
iret
xchg
cmp
lods
sub
scas
inc
adc
in
fwait
sti
adc
dec
push
stos
ljmp
push
cld
and
fsts
pop
shl
in
sbb
adc
push
mov
cmpsb
cmp
cmpsb
into
daa
lds
ljmp
test
pop
lret
aam
xor
mov
cmp
imul
lea
mov
int
shl
mov
cmp
pop
in
mov
dec
push
nop
aas
lret
jo
dec
cltd
mov
sbb
mov
adc
sahf
mov
cwtl
dec
jb
sub
or
ret
and
mov
push
jb
into
enter
sub
mov
cs
mov
iret
iret
testl
imul
arpl
in
jns
imul
push
jns
push
mov
sub
daa
loopne
xchg
popl
xchg
mov
fdivl
add
scas
jb
sbb
dec
inc
adc
sarb
stos
cli
loop
sub
movsl
in
cmpps
fimuls
mov
mov
cmc
xlat
lahf
adc
and
stc
inc
cmc
pop
sub
push
push
subb
pushf
das
cwtl
jbe
cld
cmp
adc
xor
jmp
fnstsw
xchg
lret
dec
rcll
mov
mov
rol
sub
imul
loopne
xchg
mov
jp
das
pop
sti
add
aam
cmp
cmp
imul
fisttpll
mov
aam
daa
lcall
movsb
push
or
jbe
add
adc
out
addr16
shrb
ret
dec
mov
jne
pop
aaa
push
push
scas
jns
xchg
mov
add
push
mov
xchg
pushw
push
pusha
mov
cmc
mov
xor
jo
mov
cmp
pushf
jbe
stos
or
pusha
mov
lods
sbb
push
add
ds
cmpl
fmull
fnstenv
mov
push
stos
or
addr16
dec
push
jb
clc
fdivl
adcl
inc
push
mov
loopne
dec
inc
mov
xchg
mov
daa
sub
cmp
mov
add
cmp
bound
mov
sbb
push
mov
and
loopne
addr16
or
lret
flds
inc
bnd
cld
std
mov
mov
cmp
subb
outsb
mov
fsubrs
ljmp
push
cltd
jbe
das
ja
mov
mov
pop
pop
clc
loopne
sbb
insl
cmc
cmpsb
sbb
sbb
push
adc
ss
pop
dec
dec
xor
in
call
pop
les
gs
nop
pop
xor
repnz
jle
mov
pop
bound
mov
aas
orl
cmp
xor
add
push
xchg
mov
jmp
cli
in
xor
xchg
sarl
pushf
sti
lret
jge
pop
push
jns,pn
dec
sti
jmp
ror
aad
aas
jg
or
xor
push
inc
jmp
outsb
cmp
adc
and
rcl
loopne
les
and
inc
fimuls
pop
mov
jnp
mov
pop
test
mov
inc
movsl
cmpsb
in
push
test
xchg
les
jnp
int3
scas
sub
rorb
inc
inc
xchg
cmp
inc
movsl
mov
inc
daa
jp
ja
into
enter
subb
mov
mov
call
pop
adc
add
xchg
adc
in
inc
sahf
in
insl
jne
cmp
xchg
mov
arpl
pop
imul
inc
movl
push
movsb
loopne
cld
push
testl
mov
stos
pop
add
cmp
iret
stos
jns
add
push
mov
pop
push
mov
mov
and
sub
push
andb
in
outsb
sahf
xor
add
rcl
loopne
aas
sbb
outsb
jno
dec
mov
and
outsb
inc
jg
addr16
xchg
mov
inc
inc
add
fisubrs
jns
pop
cmp
xchg
push
loopne
mov
out
cmp
adc
in
enter
push
into
daa
clc
divl
fadds
inc
cmpsb
xor
pop
inc
js
mov
sub
cmpsl
adc
mov
out
xchg
arpl
jns
xlat
lcall
and
test
cmp
enter
pop
or
cmp
cs
das
xor
pop
test
dec
fstps
cs
dec
mov
cmp
ja
nop
jns
push
or
pop
jns
daa
and
adc
ja
sub
sub
xorl
lret
mov
out
pop
adcb
xlat
pop
hlt
sub
das
add
xchg
daa
test
jg
mov
add
add
xchg
mov
jge
cmpsl
mov
insl
jne
cmpsl
clc
or
pop
insb
mov
lods
icebp
xorl
sbb
push
test
imul
stos
je
cmpl
outsl
xor
jbe
dec
fisttps
mov
clc
ret
adc
cmp
jnp
lods
adc
aaa
pop
test
push
jecxz
mov
test
mov
aad
push
ds
insl
stos
hlt
scas
lcall
or
pop
bound
addr16
sbb
adc
xchg
and
xchg
add
xchg
clc
sbb
paddsb
inc
scas
xchg
aas
rcll
or
push
test
jg
pusha
mov
bound
mov
push
sbb
fstpl
mov
repz
fdiv
add
test
push
cli
ret
loop
jecxz
and
xlat
out
adc
xor
lods
clc
imul
mov
mov
js
xchg
ror
add
loopne
cld
js
add
cmpsl
and
neg
xchg
mov
cltd
xlat
jns
add
lods
fmuls
lret
cmpsl
add
loope
imul
sbbb
or
and
dec
inc
jl
fcmovnb
test
sub
inc
data16
or
ss
pop
mov
inc
stos
or
push
mov
add
mov
out
sub
filds
repz
jae
outsb
push
pusha
in
es
cmp
jno
out
addr16
nop
movsl
aam
clc
shlb
and
push
adc
mov
andb
cli
in
je
jmp
or
lock
mov
add
test
loop
jge
add
pop
or
pushf
jl
dec
jp
repnz
mov
arpl
xor
jl
out
jns
fcomps
sbb
xlat
shl
stos
mov
dec
cmp
push
and
outsl
ljmp
jmp
push
fbld
mov
subb
mov
sbb
icebp
push
dec
xchg
pop
dec
pop
jmp
outsl
stos
jmp
xchg
jbe
inc
push
dec
inc
inc
ss
std
idiv
test
xchg
xor
fmull
lods
jbe
mov
je
mov
fbld
loopne
pusha
jmp
jbe
iret
lahf
pushl
adc
lcall
pop
subl
sbb
shrb
sbb
mov
xor
sbb
jp
imul
inc
sar
jne
adc
outsb
lret
jecxz
shrl
ficoms
push
pop
aas
pop
mov
push
dec
loop
popa
inc
inc
out
add
dec
ja
call
add
repz
cmpsl
add
loope
mov
imul
sti
les
inc
int
inc
scas
jae
test
jno
pop
mov
jge
pop
push
mov
sahf
pop
push
jno
jno
aaa
iret
pop
push
jb
inc
jbe
xchg
mov
shl
mov
sub
stos
sub
adc
lahf
dec
inc
aam
pop
dec
in
xchg
pop
pushf
sbb
repnz
and
ss
cwtl
cltd
push
mov
xor
push
pop
fsubl
lret
jecxz
adc
or
mov
sub
pusha
aas
shlb
push
or
insb
ret
clc
pop
clc
sbb
test
fbstp
nop
or
enter
xlat
shl
mov
jae
pop
aas
cmpsb
mov
clc
mov
push
je
add
ds
fdivr
xor
adcb
scas
sub
xor
or
jo
aad
mov
xor
outsl
jle
pop
ds
jo
and
addr16
shrl
xchg
popa
loope
pop
push
jl
insl
mov
gs
dec
lods
dec
dec
jb
jo
lods
xor
and
addr16
or
mov
jb
pop
sbb
lods
lahf
jns
cmpsb
add
push
or
mov
orl
adcb
pop
jmp
mov
test
enter
sub
cmp
test
test
xchg
adc
jmp
aad
cmp
add
int3
inc
jae
aaa
xchg
stos
pop
push
int3
xchg
inc
es
mov
xchg
cmp
adc
mov
pop
in
jns
and
fidivrs
imul
push
xchg
imul
pop
fucom
dec
pop
pop
dec
adc
jno
int3
xor
outsl
enter
pop
xchg
push
mov
xchg
add
cli
lcall
iret
imul
jb
in
or
inc
mov
aaa
sub
cmpsl
xchg
hlt
shrb
inc
loopne
push
int3
cmp
adc
in
popf
cmc
in
and
fdivp
xchg
pop
push
xor
outsb
inc
imul
sub
add
notb
adc
mov
ror
pop
shll
je
mov
rol
scas
sub
xchg
rorb
or
aaa
mov
mov
pop
mov
jmp
stc
push
push
ror
pop
outsb
xchg
cmp
push
gs
cmp
fcomps
mov
push
das
mov
lahf
inc
jns
sahf
fldenv
mov
sbb
mov
inc
addr16
aad
and
jae
mov
enter
popl
dec
in
push
mov
loop
mov
mov
mov
mov
xor
ja
nop
xchg
xchg
arpl
andl
popa
inc
dec
fildl
and
pop
mov
xlat
jmp
std
repz
mov
out
mov
jne
aas
ficompl
dec
inc
pop
test
dec
mov
hlt
fwait
insl
andb
sub
mov
xchg
insl
dec
inc
iret
shrl
mov
fsubs
pop
jl
pop
pop
adc
popf
mov
sbb
push
inc
inc
ds
fldl
cmpsb
and
dec
push
sbb
in
cmp
mov
xchg
scas
stos
fdivl
sub
sbb
push
inc
xlat
cmpsb
aad
call
cmc
xchg
repnz
das
mov
ja
shrb
insb
cmp
push
and
jp
cmp
push
mov
test
sbb
pop
sub
fcmove
popf
inc
fs
lret
pop
movsb
push
xchg
pushf
movsb
pop
sub
adc
and
xchg
ds
ja
fcompl
xlat
and
clc
pop
loopne
push
push
jo
int3
cmpsb
rcll
xchg
xchg
popa
int
shll
loope
loopne
sarl
or
dec
mov
xchg
mov
xlat
imul
stos
in
mov
sbb
adc
and
or
pop
dec
adc
xchg
aad
xor
lods
fcompl
in
stos
inc
sti
mov
fnstenv
aad
or
lret
mov
mov
movsb
ljmp
xor
rcr
lods
cld
out
popf
add
outsl
ret
call
shrl
out
xor
sub
divl
cmpsl
mov
cwtl
mov
js
jge
mov
shrl
cli
into
mov
stc
outsl
sti
shll
pop
fmul
loop
sbb
aaa
pop
jns
sub
mov
lds
ljmp
mov
lea
inc
popa
addr16
jae
push
nop
or
stos
and
jle
or
arpl
sbb
pop
jl
sub
or
imul
loope
loop
pop
daa
xor
icebp
scas
ja
adc
loope
fs
cmp
lcall
jl
nop
dec
testb
mov
enter
xor
stc
sub
pop
xchg
add
add
adc
pcmpeqw
xchg
mov
setnp
fnstsw
jle
imul
xchg
lods
dec
mov
fnstsw
sbbl
and
fucom
fnstcw
addr16
jle
outsl
xchg
orl
cmc
push
lret
in
out
pop
add
jle
pop
je
add
jmp
pop
jb
xlat
fisttpll
push
jo
cmpsb
push
mov
pushf
lds
stos
aaa
inc
dec
ficompl
pop
popa
insb
push
dec
js
pop
sub
xorl
arpl
add
js
out
js
mov
mov
xchg
inc
int3
lahf
mov
xor
cmp
xchg
add
ljmp
adc
sub
push
fs
call
out
pop
cli
adc
adc
xchg
cli
mov
push
adc
movb
adc
jmp
test
jg
das
or
add
push
imul
sub
orb
adc
clc
jle
and
push
sbb
add
push
add
rorl
mov
addl
and
adc
push
arpl
lahf
lret
cli
add
sub
cmpl
fucomp
idivb
cs
aas
sbb
std
jno
mov
mov
ret
sbb
nop
mov
shrb
mov
or
xchg
pop
dec
fxch
jmp
outsb
and
jne
cld
sahf
fadds
je
sbb
sti
daa
cwtl
ficoml
shlb
add
outsl
mov
dec
inc
jp
push
mov
dec
pop
lret
sbb
xchg
jmp
loope
stos
mov
stc
loope
js
sub
pusha
pusha
sub
std
push
adc
mov
sub
cmpb
jp
sarl
or
xchg
pop
dec
sbb
cli
cmp
in
cmp
loop
inc
rorb
mov
xor
jns
lcall
movsl
and
cwtl
add
push
and
push
mov
jns
jmp
add
mov
jge
mov
outsl
cmpsl
mov
adc
ds
lret
in
dec
ja
mov
out
aaa
add
pop
mov
mov
or
movsl
jmp
push
push
dec
inc
add
push
jmp
mov
add
mov
lcall
call
xchg
jo
lods
sub
test
ljmp
repz
jecxz
mov
or
and
sbb
mov
shl
push
jae
sub
fistps
inc
sbbl
in
pop
sahf
arpl
lret
sarl
inc
lds
xchg
faddl
icebp
add
jns
outsl
fwait
shr
or
rolb
mov
mov
pop
xchg
outsl
daa
pop
jb
sub
lock
xchg
add
stos
dec
mov
inc
and
outsl
outsb
push
out
lret
jle
insb
cltd
xchg
sbb
stos
fidivrl
jl
sbb
cmc
jge
test
pop
mov
ja
push
repz
mov
adc
mov
xor
mov
fdiv
xor
push
movntq
mov
in
rorb
xchg
jns
push
ljmp
dec
xor
popf
xchg
adc
push
hlt
sub
cwtl
aas
inc
cmc
sub
popa
mov
out
xor
mov
ficoms
add
inc
push
movsb
mov
adc
push
xor
idivb
sub
push
outsb
cmp
adc
lret
pop
jne
in
pusha
lods
cmp
mov
es
mov
or
imul
mov
mov
pop
lahf
popf
xchg
in
repz
or
dec
inc
pop
ficompl
ds
inc
pop
stos
mov
imul
jl
jnp
cli
push
sub
lea
jmp
ja
mov
jle
scas
lcall
addl
call
fmulp
int3
sub
xor
mov
mov
push
pushf
pminub
mov
ret
sub
scas
outsb
out
mov
pop
sub
div
pop
loope
ret
fnstcw
xor
repnz
fmull
fisttps
icebp
in
aam
add
cli
jecxz
jne
push
push
dec
in
or
mov
and
and
and
adc
add
mov
inc
lods
jle
cli
xchg
sti
scas
aad
clc
aaa
inc
mov
pop
jp
inc
xchg
es
mov
and
nop
cmpb
push
or
cmp
movsl
fisttpl
lods
cmpsb
sbb
test
and
mov
notl
fsts
int
mov
mov
add
mov
sbb
xor
push
sbb
fstl
mov
jge
pmaxub
mov
cmp
pop
push
cmp
negl
fldl
xchg
daa
addl
fstps
dec
mov
lds
xlat
jecxz
jbe
or
sbb
mov
or
jo
xorb
cmc
inc
pop
pop
mov
mov
xchg
pop
lret
inc
xchg
sti
jmp
mov
jmp
inc
add
fstpt
pop
mov
jb
popf
sbb
mov
or
inc
pop
fwait
into
push
and
cmp
jb
lcall
insl
lock
xchg
dec
pop
pop
add
mov
pop
dec
pop
jno
jge
push
push
call
inc
push
daa
in
rclb
insb
push
out
push
popa
loop
mov
mov
lahf
lret
maxps
inc
push
aaa
add
xchg
shlb
loope
mov
or
inc
out
push
rorb
cs
and
mov
call
jne
push
push
xchg
or
pop
mov
call
into
sbb
sti
daa
mov
push
cmp
or
cltd
jecxz
bound
cmp
sbb
dec
in
sub
stos
out
call
icebp
mov
xchg
xchg
or
xor
pop
std
xor
loop
dec
pop
add
push
imul
adc
out
and
and
je
movsl
and
adc
xor
incb
ja
add
es
push
iret
pusha
push
mov
pop
push
stc
in
ficoms
daa
jns
std
mov
xchg
sub
inc
pop
jge
addb
inc
mov
mov
sub
in
adc
subl
jl
mov
cmc
mov
jmp
push
sahf
lock
lahf
sub
cmp
xchg
out
ret
add
lcall
inc
and
jl
adc
inc
mov
sbbl
or
mov
mov
xchg
sbb
pop
sbb
bsf
xchg
stc
int3
adc
daa
mov
ljmp
out
je
or
jmp
aas
sahf
dec
jae
cmp
jmp
pop
ljmp
lahf
ja
pop
dec
rcll
jp
xchg
imul
add
jp
mov
pop
mov
add
jle
testb
daa
clc
xor
aas
cmp
incl
stos
stos
mov
push
and
aas
or
push
out
in
mov
or
mov
std
repnz
xchg
jecxz
xchg
rcll
jmp
call
pop
and
inc
jns
clc
lds
mov
ret
addr16
sbb
push
sbb
int3
int3
mov
icebp
aaa
addr16
pop
mov
jae
fstpt
stos
mov
out
xchg
loope
sbb
imul
les
jp
dec
popa
negb
inc
pop
pop
lret
je
in
pop
sbb
stos
pusha
sub
pop
popa
push
pop
sbb
icebp
aas
out
jne
in
leave
fldl
dec
pop
adc
or
insb
fsubrs
js
or
xchg
push
dec
repz
ds
inc
inc
sub
push
push
xchg
mov
ficompl
sbb
test
xor
or
mov
jecxz
test
inc
fcomps
or
jae
mov
shll
add
enter
jl
push
mov
push
ds
push
pushf
or
xchg
xlat
insl
sbb
push
lcall
addr16
bound
and
fcomps
sbb
pop
jo
pusha
call
shlb
push
pop
arpl
mov
leave
dec
lods
pop
es
xchg
xchg
push
popf
dec
lds
loopne
or
into
cli
iret
cmp
lock
test
push
aas
jb
ja
scas
inc
and
lds
outsb
jmp
ja
movsb
int3
dec
mov
jmp
inc
xlat
sar
mov
mov
cvtpi2ps
ret
cmp
in
test
push
bound
pop
test
add
jnp
mov
shll
fldl
sti
inc
and
mov
hlt
loopne
dec
mov
cld
mov
out
jecxz
sahf
movsl
mov
imul
mov
mov
ljmp
outsl
mov
fidivs
add
xor
repz
inc
push
ret
ljmp
sub
sarb
mov
popf
mov
jl
or
dec
mov
mov
and
mov
dec
mov
out
jne
int
aad
or
fisubl
dec
jne
aad
adc
mov
jg
inc
inc
into
lods
mov
mov
xor
xchg
sbb
lea
cltd
std
pusha
push
leave
push
stc
in
fidivrl
xchg
rorb
rclb
mov
add
movsb
and
xchg
sub
shlb
es
sahf
or
lds
push
jmp
xor
mov
shlb
lret
dec
add
jl
jbe
mov
jge
mov
cmp
pop
cmp
sbb
xor
and
sbb
sub
fbstp
clc
in
push
imul
mov
push
pop
cmp
jge
out
sbb
enter
sbb
lods
lret
or
or
dec
cmp
push
push
jecxz
cwtl
out
popf
mov
pop
mov
inc
fneni(8087
push
or
lret
imul
jnp
dec
mov
inc
mov
fisttpl
mov
int
add
enter
or
call
pop
out
and
push
sbb
in
mov
mov
outsl
sub
and
jge
sub
push
mov
sgdtl
push
xchg
stc
pop
and
repnz
loop
add
cmpsb
mov
jbe
or
pop
enter
pop
into
mov
xor
push
sub
xorb
jno
sub
call
test
and
xorb
dec
dec
pusha
and
pop
jb
sbb
rcl
jo
sub
ret
imul
iret
xchg
xchg
inc
movsl
bound
xor
int3
jecxz
or
sbb
mov
push
push
push
xchg
jge
push
lret
enter
cmc
ret
pop
shll
pop
sbb
call
movsl
push
test
roll
notb
imul
fimuls
test
sub
imul
or
cs
sub
pinsrw
shrl
lock
iret
fcoml
sti
imul
dec
rcrb
imulb
outsb
in
pop
mov
insb
icebp
adc
push
mov
cltd
mov
add
leave
in
repnz
lea
lock
jle
xorb
pop
dec
daa
rcll
push
mov
sbb
cltd
sbb
jae
sarb
mov
or
mov
mov
jns
cmovno
pop
imul
mov
or
jbe
dec
pop
jge
aaa
test
dec
jl
lods
aas
jle
xlat
add
insb
loopne
jge
lods
andl
js
aad
cmp
xchg
pushf
mov
mov
and
mov
or
in
mov
xor
push
cmp
addr16
and
pop
add
imul
inc
push
rcrb
into
icebp
fsubrl
mov
pop
sarb
or
lea
mov
dec
mov
cli
test
mov
nop
inc
sub
cmp
shr
iret
cmc
push
je
xchg
pushf
sbb
cmpsl
int3
icebp
push
push
mov
and
dec
mov
and
xchg
in
xchg
scas
je
pop
aaa
push
movl
or
hlt
push
mov
xor
mov
in
test
add
popa
cmc
out
mov
dec
dec
sbb
jo
adc
dec
pop
inc
inc
cmp
inc
or
or
aam
push
popf
in
imull
pop
es
cmp
jg
jl
sbb
pop
add
xor
xchg
icebp
daa
sbb
dec
adc
lock
rcll
xchg
and
inc
mulb
lock
xchg
bnd
cmp
das
sbb
cmp
subl
mov
or
cld
and
push
arpl
test
and
leave
movsb
test
call
enter
xchg
mov
or
scas
pop
mov
mov
mov
loop
imul
aad
push
scas
add
test
and
xchg
cli
stc
xor
dec
xchg
loop
pusha
push
mov
daa
mov
rcrb
inc
or
loope
jmp
rol
std
fwait
jno
mov
dec
or
sub
inc
frstor
dec
jp
and
imul
cmp
les
xchg
mov
bound
movsb
arpl
stos
cmpsb
das
sub
scas
std
mov
pop
out
mov
and
dec
fsubrs
mov
jo
iret
sahf
imul
xor
fwait
jecxz
in
pop
jns
cmp
les
inc
stc
imul
add
popf
orb
lahf
push
test
inc
inc
or
mov
aaa
fidivs
sub
int
outsl
xchg
fwait
mov
bound
out
hlt
negl
and
out
xchg
mov
inc
out
pop
stos
xorb
jo
orl
push
loopne
rol
repnz
add
inc
imul
mov
mov
mov
cli
in
sub
push
mov
and
mov
jge
xchg
cmc
inc
aad
sub
cwtl
push
outsl
loopne
scas
mov
mov
adc
es
push
and
outsl
in
mov
inc
add
mov
divb
mov
divb
fdivrs
mov
inc
push
dec
das
ss
lock
je
clc
pop
enter
rol
loop
sub
cmp
icebp
adc
xchg
lods
daa
push
addb
faddl
push
lcall
icebp
pop
pop
std
dec
cmp
or
sub
jbe
mov
call
push
sub
loop
jbe
mov
jno
mov
cmp
xchg
jl
loop,pn
add
and
gs
xor
mov
sbb
mov
lret
dec
mov
cmp
mov
rorl
jp
xchg
bound
arpl
sbb
xor
in
outsb
fwait
sub
push
dec
insb
mov
xchg
xchg
fidivs
std
jnp
je
cwtl
mov
dec
push
daa
pop
mov
push
data16
sbb
bts
andl
addb
out
icebp
adc
jns
testl
js
leave
pop
scas
jge
jb
mov
fidivs
loopne
add
int3
jg
rolb
ret
sbb
pop
mov
insl
mov
lret
dec
mov
push
dec
mov
cmp
ret
or
pop
lret
pop
jnp
mov
adc
sub
jne
or
pop
push
cmc
out
icebp
push
and
lcall
loop
mov
sub
nop
repnz
js
xchg
adc
fcmove
pop
jmp
jb
scas
int
pop
int
push
adc
je
mov
je
adc
push
test
aaa
mov
gs
inc
sub
fnstcw
push
test
mov
add
push
or
adc
adc
cmc
xor
mov
fadds
orb
mov
popf
jne
fisubrs
leave
daa
jge
mov
lcall
cli
xchg
flds
pushf
jge
add
jne
cmpsb
int3
scas
cs
mov
jg
ret
arpl
jne
movsl
and
mov
dec
jg
std
push
scas
jmp
sbb
fisubs
bound
mov
dec
ljmp
pop
push
xchg
pop
insb
dec
add
xchg
fsubrl
inc
arpl
inc
jo
pop
xchg
adc
es
dec
fdiv
or
sub
mull
adc
jb
sub
mov
sbb
test
dec
xchg
push
or
inc
pop
push
pushf
push
loop
std
ret
mov
mov
arpl
push
test
ljmp
mov
xchg
addr16
xchg
xlat
inc
ret
cwtl
pop
clc
and
movsl
dec
xchg
stos
sbbb
cs
jecxz
fdivl
fisubrs
xchg
inc
jbe
xchg
aaa
roll
nop
cli
ds
out
in
mov
test
mov
outsl
insl
dec
push
cmp
lahf
mov
pop
adc
pop
pop
je
add
dec
cli
mov
filds
das
push
pop
das
jae
stos
fwait
push
push
xchg
movsb
aas
jnp
mov
pop
jge
inc
pop
sbb
aad
xchg
ljmp
mov
popf
nop
lods
das
std
mov
fwait
or
xchg
addb
mov
in
cltd
leave
xchg
mov
shr
mov
push
pushf
repnz
add
out
arpl
xor
es
xor
mov
and
cmp
mov
jno
es
fsub
int3
or
mov
mov
dec
mov
xchg
inc
lods
sbb
xchg
scas
dec
inc
xchg
pop
ds
fimull
pushf
mov
out
mov
adc
mov
stos
clc
pop
scas
sub
cmp
cli
jns
stos
pop
test
stc
daa
mov
sub
jae
and
xchg
jno
iret
inc
adc
pusha
push
mov
jb
outsl
bound
leave
xchg
shrb
and
or
mov
or
xorb
inc
mov
pop
sub
sbb
ss
xchg
movb
aas
and
push
mov
mov
pop
inc
icebp
xchg
pop
lret
outsl
pop
out
sbb
xor
in
outsb
adc
pop
jne
pop
jge
imul
sub
stc
sti
push
dec
loopne
add
mov
lea
fnstsw
dec
push
outsb
jno
loopne
std
inc
inc
cli
jle
stos
mov
lods
cltd
xchg
aam
cltd
mov
inc
cs
js
adc
fwait
outsb
test
sub
add
xchg
scas
mov
js
stos
adcb
pop
test
jl
push
nop
or
cmp
push
fs
xchg
jae
in
and
fldenv
sbb
jne
lcall
lret
jbe
jl
pop
cmp
sti
jmp
dec
sahf
sbb
jo
mov
lds
aaa
insl
sub
or
test
mov
shrb
std
andb
test
aam
cs
pop
cltd
cmp
push
popf
mov
clc
pop
repnz
and
mov
cli
mov
xchg
cmp
mov
ja
movsl
arpl
es
into
enter
js
sti
xchg
xor
pop
imul
adc
and
pusha
add
sbb
lods
lcall
jno
sub
sub
mov
hlt
inc
fcmove
mov
or
sub
fsubs
mov
inc
jmp
loop
cmp
sbb
in
xchg
adc
xchg
int3
sbb
das
cli
adc
dec
fs
ret
movups
and
shrb
cmpl
adc
std
cmpsb
pop
bswap
test
xor
leave
mov
lahf
pop
stc
lods
out
addr16
mov
xchg
imul
and
xor
sbb
sarl
cmpsl
xchg
push
cmp
repz
fs
jecxz
add
jae
lea
mov
push
xor
inc
mov
fsts
sbb
cmp
addl
jmp
insl
movsl
les
cmpsl
cld
nop
inc
imul
xchg
sbb
inc
dec
popa
cmpsb
in
jle
or
loope
and
js
sub
dec
mov
sahf
aas
imul
mov
and
pop
jge
ret
add
pop
cmp
pop
lret
fdivrs
jl
ja
lret
lahf
std
je
inc
sub
push
jbe
in
sub
pop
ret
out
sub
mov
and
addr16
xchg
insl
fistl
loope
dec
es
stc
fsubl
aam
inc
pusha
sub
jl
fwait
out
sub
rorb
push
mov
sub
cwtl
push
push
or
push
cmpsb
pop
data16
sbb
or
rclb
cs
mov
cmpsl
dec
inc
mov
test
movsl
push
test
cld
test
jb
test
out
pop
fisubrl
jmp
ret
icebp
cli
adc
xchg
or
outsl
lds
pushf
cmp
outsb
xchg
or
xchg
mov
outsl
pop
cmpsl
aam
fistpll
lcall
jo
xor
inc
or
inc
test
shufps
bound
push
adc
mov
stos
mov
js
pop
inc
dec
lock
pop
mov
xchg
jbe
test
mov
pop
popa
scas
std
pop
ss
ss
cmp
pop
movsb
movsb
push
imul
out
cmc
sub
out
sahf
sbb
cmp
cmp
pop
xor
jecxz
mov
out
add
cmc
sbb
add
dec
xchg
mov
fimull
add
fistpl
icebp
aas
xor
fldt
into
inc
mov
push
fiadds
sbb
jecxz
enter
les
sub
out
rcr
pop
addl
insl
cmp
mov
mov
jno
and
inc
mov
mov
dec
sbb
test
mov
int3
cmovge
fwait
scas
andb
or
pop
repz
push
jb
mov
sub
out
iret
imul
inc
sar
xor
jns
jge
std
lods
inc
or
jg
push
adcb
mov
fstp
mov
cmp
sbb
jno
cwtl
dec
xchg
jns
pop
dec
imul
scas
pop
add
sub
dec
add
pop
or
ss
movsb
lahf
fcoml
xchg
cwtl
mov
pop
dec
push
dec
jecxz
pop
popa
push
fwait
sub
aas
mov
mov
cmc
cmpsl
data16
and
lret
stc
bswap
sub
pusha
mov
cmp
scas
cld
inc
mov
inc
inc
shrb
in
ljmp
imul
jl
xor
hlt
jle
cld
mov
loop
xchg
pop
pop
sbb
inc
sahf
sbb
pop
outsl
jns
out
push
push
xchg
inc
rep
ds
sub
or
js
cmp
jg
adc
andl
pop
ret
fwait
mov
rorb
call
hlt
cld
and
cmpl
xorb
push
sbb
fists
into
mov
jae
xchg
aad
adc
add
hlt
jp
mov
movsl
jg
in
jp
aad
testl
sub
mov
cmpb
mov
mov
adc
mov
gs
push
sbb
push
out
xchg
jno
test
stc
mov
fs
ret
xor
shlb
aas
cmc
and
ret
jp
movsl
gs
pusha
mov
dec
in
cmp
cmp
into
sub
push
push
in
push
push
leave
dec
pushf
rcll
cltd
xchg
cmp
cmp
fmuls
push
dec
movsb
and
add
mov
mov
xchg
inc
mov
clc
aaa
xchg
mov
repz
mov
repz
bound
loop
repz
xor
loop
adc
stc
hlt
cwtl
jns
shl
dec
and
mov
push
pop
sub
sub
loop
mov
stos
daa
lahf
repnz
sub
movsb
ret
in
mov
lock
adc
imul
addb
out
cmp
xchg
sub
ds
movsl
pushf
xor
mov
iret
cmp
jge
aaa
cld
xlat
and
mov
xor
outsb
je
xor
in
inc
test
lods
mov
hlt
insb
dec
dec
push
in
cmpsl
imul
mov
hlt
pop
out
mov
adc
enter
dec
loopne
sbb
jns
mov
xchg
das
mov
or
pusha
movsl
jo
jg
push
mov
rcr
sbb
sbb
test
and
pop
icebp
shr
xor
in
add
sub
rcll
mov
push
push
mov
fimull
insb
ret
mov
jae
sbb
inc
movsl
push
js
inc
xchg
in
push
mov
ret
sbb
leave
xlat
cwtl
fwait
add
fisubl
pop
xor
stos
les
xor
rorb
xchg
int
popa
add
cltd
push
xor
movsb
repz
pop
lcall
pop
or
es
test
push
mov
addl
scas
sbb
jg
push
sbb
xor
movsb
mov
addr16
pop
aam
hlt
and
dec
adc
sti
out
push
ljmp
dec
ficoms
pop
mov
mov
add
sar
aad
arpl
aad
stos
data16
out
or
fstp
lea
xchg
mov
aas
xlat
jns
ds
imul
stos
test
xchg
cli
cmp
jge
aas
ret
xor
leave
xchg
lods
xor
shufps
outsl
mov
loop
and
jle
fldcw
stc
and
xor
fimull
xor
pop
leave
lods
jg
sub
pop
gs
sub
aam
inc
mov
push
fsubr
jb
leave
mov
dec
inc
pop
lea
add
pop
jl
dec
adc
rorl
aas
or
gs
fsubrl
jmp
insb
outsb
mov
shlb
cwtl
lret
dec
fiadds
mov
in
or
insb
cmp
sub
and
in
stos
push
or
int
xchg
fldt
and
andl
fisubrl
or
cmc
out
jmp
fs
cli
or
adcb
jp
sbb
lahf
les
andb
inc
cmp
mov
rorl
add
push
mov
pop
fistpl
cmp
jp
sub
insl
and
add
cltd
std
sub
gs
aad
test
rorb
stos
iret
cmp
shlb
sub
je
xor
dec
cmp
push
xor
movsb
xchg
mov
cmpsl
out
test
mov
xor
cmp
lret
lods
fstl
mov
ficoml
dec
stc
cs
out
push
dec
and
add
repz
or
add
sahf
dec
mov
clc
mov
adc
xchg
mov
stos
out
gs
pop
insb
mov
scas
sbb
push
lret
lret
mov
arpl
fadds
ljmp
ja
lods
xchg
dec
jmp
pop
sbbl
adc
leave
jne
jnp
mov
xchg
test
test
dec
xchg
xorb
lahf
sar
sbb
aas
scas
mov
adc
jl
xchg
push
lds
push
cmc
push
negl
mov
xchg
inc
lods
test
adc
push
test
add
imul
xor
scas
jg
xchg
inc
inc
mov
enter
ret
and
dec
hlt
mov
into
fldcw
mov
mov
sbb
adc
sar
fisubl
repz
fbstp
lcall
dec
nop
ljmp
cmp
mov
imul
jecxz
in
or
fcmove
mov
or
sub
call
iret
mov
pop
out
je
fmull
dec
inc
in
outsb
cmc
mov
mov
cmc
xor
jle
push
cmp
jl
push
xor
xor
add
das
jno
push
xchg
cmc
fisubrl
ret
loop
outsb
in
push
jne
jbe
clc
shl
sti
dec
or
xchg
xor
sub
add
cmp
loopne
push
add
fs
out
jle
test
jo
sub
inc
cmpsl
jbe
jbe
out
cmp
notl
jle
sti
pop
pop
mov
push
add
dec
fs
push
or
pop
stos
out
add
jo
dec
rorl
add
or
arpl
data16
mov
out
push
rorl
aaa
mov
push
sbb
jp
data16
int3
sbb
inc
je
inc
jecxz
jb
jns
gs
adc
ret
lret
out
and
mov
push
outsl
je
adc
lahf
fsubs
cld
mov
aam
cmp
sub
imul
push
pop
sbb
pop
inc
dec
mov
clc
outsb
dec
out
dec
stos
lock
mov
imulb
dec
pop
jmp
jecxz
sti
int
mov
clc
inc
push
xor
fwait
dec
lock
mov
addr16
loope
aas
ss
add
mov
dec
add
lock
test
test
pop
aas
sbb
fcomp
cmc
sbb
fwait
pandn
addr16
enter
adc
jg
or
dec
jne
jae
xchg
add
pop
cmc
cltd
sbbb
cmp
mov
into
mov
call
add
pusha
mov
mov
xchg
jecxz
insl
adc
xor
aam
shll
iret
ja
loop
stos
in
or
adc
and
sbb
mov
dec
stos
mov
inc
data16
jno
bound
pop
aam
jecxz
ret
xchg
xchg
xchg
stc
inc
test
inc
arpl
cmp
ficompl
jnp
jb
xchg
adc
sub
adc
loope
scas
orb
arpl
push
lret
mov
mov
or
out
pop
pop
sub
push
adc
fwait
jo
jbe
or
cmp
ds
int
xor
lods
mov
xchg
mov
out
and
dec
dec
or
notl
imul
mov
mov
lods
xchg
inc
loope
fwait
mov
cli
clc
mov
jl
jle
repnz
adc
push
leave
lods
data16
imul
push
repz
rolb
fnstsw
repnz
jb
mov
xchg
lret
sbb
mov
fisttpll
sarb
or
cmp
fisubs
movsb
sbb
lcall
xchg
clc
fwait
inc
cmp
notl
negl
xor
inc
mov
add
push
call
jae
xchg
test
mov
fistpll
rorl
movsl
and
das
cmp
sub
sub
sub
enter
mov
pop
test
xor
or
roll
mov
jbe
and
shrl
xor
bts
push
jle
fistpll
pop
add
jo
addr16
inc
or
iret
lock
jno
lcall
mov
sub
mov
rorb
or
pusha
hlt
and
popa
push
mov
in
xor
xlat
cmpsl
mov
imull
js
loope
mov
imull
cli
jmp
mov
js
nop
es
sub
insb
mov
ja
and
les
loope
inc
sbb
or
xchg
test
dec
dec
aam
pushf
adc
jne
addb
sahf
inc
jle
outsb
cltd
add
in
jne
outsl
ljmp
leave
sub
imulb
in
hlt
xchg
add
cmp
repz
stos
fidivrl
iret
push
loop
push
dec
mov
mull
pop
bound
scas
iret
push
dec
sub
mov
lret
jae
pop
xlat
inc
out
rolb
repz
jns
das
outsb
shl
pop
push
out
lods
inc
test
pop
inc
ja
jle
loop
jns
orl
push
shlb
fstps
lods
jae
add
in
xchg
mov
dec
lock
js
mov
jo
rol
mov
js
cmpsb
and
sub
loopne
ljmp
fidivs
dec
addr16
sbb
popa
cmp
int
ret
xor
jle
xchg
adc
or
mov
fs
lret
in
push
cltd
add
bound
mov
in
cmp
das
cwtl
cmp
xchg
out
js
sbb
outsb
push
adc
jle
repnz
jne
out
test
out
sbb
insl
bound
xor
or
mov
add
adc
push
les
jmp
dec
adc
arpl
popa
sbb
insb
daa
jle
jb
popf
subl
lret
inc
cltd
xor
adc
jne
loop
sub
sub
inc
cld
ss
adc
mov
std
inc
cwtl
mov
repz
outsb
cmp
loope
fdivrp
mov
jl
into
inc
adc
lret
movsl
fcoml
pop
addl
js
cltd
mov
sbb
inc
fs
xor
xrelease
dec
xchg
test
push
popa
mov
mov
mov
loope
mov
sub
clc
test
adc
js
add
dec
in
dec
out
mov
xor
stos
test
lcall
xchg
push
pop
inc
or
sub
stc
xchg
loope
sbb
sahf
mov
push
xor
lret
cltd
test
out
push
je
inc
cmp
xor
jae
xchg
aad
ja
jecxz
popf
pop
cmp
dec
adc
add
pop
enter
xchg
xor
mov
into
hlt
jbe
inc
mov
lods
pop
sbb
mov
cmp
and
std
inc
popfw
mov
adc
or
scas
jbe
lds
and
cmp
fs
mov
dec
dec
nop
and
mov
loopne
pusha
push
in
adc
dec
jae
jne
in
or
sbb
sub
mov
mov
dec
jns
xor
js
cli
jne
or
arpl
lock
test
dec
adcl
cwtl
daa
mov
mov
repnz
pop
test
or
in
xor
rol
stc
fildll
seto
or
imul
nop
sub
insl
add
pop
aaa
mov
dec
push
mov
cmpsl
hlt
inc
xor
adc
adcb
f2xm1
imul
outsl
in
jae
push
jge
push
xor
or
mov
sub
xchg
pop
xlat
push
out
inc
jle
inc
mov
mov
push
hlt
inc
leave
cmp
mov
inc
loope
sbb
push
add
xor
push
pop
adc
pop
aas
push
fdivrp
or
repz
cmp
test
cld
stos
push
cwtl
dec
test
imulb
sarb
aaa
insb
lock
inc
das
in
cmp
ret
fadd
into
push
pop
lcall
cld
inc
dec
dec
fmull
or
xor
enter
pop
aas
in
or
pop
mov
sbb
push
ss
aas
mov
fdivs
imul
pmullw
xor
dec
hlt
rorl
xchg
push
mov
mov
mov
cld
addr16
lds
add
cltd
push
xchg
movsl
fistpll
shrb
jle
ret
arpl
sub
jo
hlt
jecxz
add
lret
int
lea
ds
jecxz
int
push
pop
adc
lock
xchg
fs
mov
insl
mov
mov
push
add
outsb
mov
xor
lcall
ja
cld
nop
leave
fldt
aaa
or
mov
sbb
inc
sub
jg
mov
sbb
shl
pop
jb
mov
sbb
sbb
jne
sbb
loopne
add
in
push
push
jne
cld
push
shll
roll
hlt
push
js
jge
mov
out
xlat
sahf
cltd
lcall
mov
outsb
mov
fs
aam
ljmp
mov
in
shll
xchg
jge
cwtl
pextrw
mov
cwtl
xchg
jb
sahf
pushf
adc
aam
scas
lret
daa
in
push
repnz
dec
sub
cmp
cltd
jb
pop
pushf
jg
js
cmp
imul
insb
push
repnz
aam
mov
mov
imul
push
pop
push
jnp
in
loope
inc
sub
movsl
inc
mov
adc
dec
inc
cmpsb
inc
fs
mov
stos
jb
adc
and
mul
aas
inc
sahf
inc
jp
mov
lds
push
stc
dec
sbb
out
mov
subl
jo
jae
sbb
or
xrelease
inc
loopne
push
sbb
adc
ja
lahf
test
mov
frstor
sbb
outsb
imul
cmc
xchg
rolb
ss
int3
xchg
inc
xchg
or
ljmp
mov
aas
and
inc
movsb
fadds
jge
rcrb
pop
insl
lret
in
shll
sbb
mov
fs
in
lock
cltd
jmp
adc
in
sub
xchg
cld
pop
jle
in
jno
cmpsb
sub
sbb
addr16
cmp
mov
std
popa
ret
add
add
test
adc
sub
cmp
and
and
insl
push
sub
lcall
cld
add
fcmovnbe
test
fldenv
jb
mov
push
test
push
arpl
gs
dec
mov
inc
jb
jbe
pop
push
jno
fistps
ret
clc
insl
les
push
dec
leave
inc
enter
push
mov
ret
xchg
movsl
xlat
xchg
mov
sub
pop
jmp
ret
popf
xchg
add
xchg
fwait
das
enter
adc
inc
clc
rclb
jg
inc
test
lcall
test
push
push
jl
dec
sbb
hlt
mov
sub
stos
jbe
call
sahf
sahf
adc
mov
shrl
jae
jp
nop
rcll
push
push
scas
add
inc
movsb
xchg
fistpll
xchg
lods
or
movsb
gs
push
popl
pop
add
cmc
bound
cmpsl
les
ffreep
jb
daa
adc
movsl
xor
fstpl
in
shll
fstl
cmp
adc
mov
pop
pop
fstl
jno
pusha
xor
add
sbb
mov
add
in
inc
sbb
add
sub
mov
add
adc
out
sbb
rclb
pop
add
pop
sub
pop
sub
push
push
pop
push
shlb
mov
push
sub
xor
stc
into
fistl
andb
pop
xchg
inc
outsb
mov
inc
imul
or
popf
pop
fisttpll
xchg
dec
push
fdivr
test
test
sub
xchg
inc
iret
mov
popa
inc
jl
pushf
jg
cs
pop
lahf
mov
fidivs
xchg
imul
rorl
popa
and
push
cs
mov
call
ret
mov
mov
movl
jge
ret
inc
or
adc
xor
popa
jge
jo
inc
enter
or
movsl
inc
fdivr
adc
jo
xor
push
in
cltd
addr16
sub
dec
jmp
stos
pop
ja
or
aas
pop
mov
scas
ss
cmpsl
jmp
mov
inc
lcall
subl
pop
int3
mov
les
das
mov
sbb
mov
or
inc
cs
pop
clc
inc
cmp
cmp
lahf
inc
aaa
mov
int
aaa
sub
xor
dec
aam
lods
test
fcompl
movsl
mov
pop
add
cmpsb
xchg
jnp
jmp
push
fisttps
jno
or
shlb
add
popl
sub
loope
enter
sbb
into
fdiv
mov
push
cmpsl
push
ficompl
mov
into
out
pop
jbe
fbstp
fstl
mov
push
dec
push
clc
outsl
clc
fildl
or
push
ljmp
lret
xchg
enter
sbb
cvtpi2ps
pop
adc
cmp
sbb
xchg
or
mov
or
and
sets
dec
cmp
in
add
jo
mov
int3
xor
mov
outsl
jmp
in
rcrl
movsb
aam
mov
lock
test
lods
shr
pusha
xor
idivb
xchg
mov
mov
mov
inc
fstl
shr
xchg
cmp
adc
cmc
aad
in
sbb
je
and
adcl
or
or
or
adc
pop
enter
dec
or
xchg
and
and
pop
test
sub
cwtl
int
mov
sbb
fs
das
push
rorb
fmull
pushf
and
push
or
sbb
insl
rolb
mov
hlt
mov
ljmp
test
js
jnp
test
out
cli
jae
push
push
aam
xchg
push
ffree
daa
push
lret
adc
data16
rcll
ss
sbb
or
or
adc
test
hlt
pop
jecxz
fwait
stos
popf
add
ljmp
cwtl
outsl
in
mov
ret
jp
not
jb
cmp
jae
cmpl
cs
pop
lock
sahf
adc
or
enter
xor
cmp
testb
sub
sbb
fsubp
xchg
jp
dec
fwait
divl
rcl
mov
cld
mov
addr16
decl
imul
pop
push
popa
lods
mov
inc
pop
or
mov
aaa
insb
stos
cmpsl
xchg
cmp
mov
movsb
xor
add
cmpsl
mov
mov
dec
inc
mov
in
jge
xorb
aas
cltd
lret
in
and
xchg
cmovbe
and
adc
cld
rorl
inc
loop
inc
push
in
popf
scas
fsts
cmp
mov
inc
cltd
pushf
call
and
bound
or
pop
out
xor
pushl
mov
ds
adc
pop
push
test
dec
xlat
mov
jg
pop
add
dec
xorps
inc
sbb
inc
cli
xchg
pop
sbb
clc
inc
fsubl
pop
adc
js
dec
sarb
xlat
loope
add
cmp
mov
mov
mov
sbb
cld
push
or
or
dec
int
ss
decb
mov
push
sub
ret
bsf
shlb
adc
out
adc
hlt
push
fisubrs
out
inc
test
mov
mov
dec
out
outsb
dec
xchg
sub
mov
loope
mov
daa
and
pop
jnp
adc
and
xchg
mov
xor
cmp
stos
jge
into
sub
xchg
inc
pop
js
add
cmp
es
jmp
scas
jnp
fcmovu
ror
and
mov
mov
push
pop
in
ja
addr16
jns
or
jl
gs
mov
mov
xor
push
mov
fstp
dec
cmp
std
pusha
push
dec
and
sti
test
dec
push
cmp
dec
imul
or
arpl
mov
test
add
xchg
mov
mov
cmpl
cmc
jne
adc
stos
add
mov
incb
test
enter
jmp
add
dec
mov
jne
ret
in
xor
push
aad
adc
xchg
dec
dec
fcomps
sti
insb
sub
fdivrl
or
cli
mov
loop
push
pop
ss
cmp
notb
neg
mov
pop
xor
cmp
or
sbb
lret
outsb
mov
or
je
xlat
stos
add
jecxz
rorb
loope
cpuid
lcall
xchg
sarl
decb
sub
xchg
lods
lahf
out
notb
sti
movsl
xchg
jp
xchg
inc
mov
pop
xchg
push
mov
add
sbb
add
push
sbb
or
outsl
sub
loope
dec
lahf
adc
cmc
aad
or
fnsave
lds
lods
les
rorb
pop
lcall
cmpsb
insl
cmpsl
jns
std
or
mov
lods
cmp
sub
cmpsb
in
test
mov
insb
adc
and
insb
inc
cli
outsb
pop
addb
dec
inc
inc
mov
aaa
mov
and
xchg
add
subl
jno
outsl
xor
pusha
mov
fnstsw
jle
inc
mov
rclb
cmp
xchg
test
lods
jl
or
js
sti
mov
cmp
mov
popf
lods
hlt
add
or
inc
push
or
mov
lds
mov
mov
pop
sbb
rcrl
adc
je
inc
mov
addl
jg
jo
in
cmp
fs
inc
xchg
pop
jg
cmp
sub
loope
jns
nop
cmp
push
dec
dec
fwait
lock
mov
jb
sar
pusha
ss
adc
cmc
popf
cmp
mov
ljmp
js
sbb
ret
lea
or
popf
push
cmp
mov
or
sbb
lods
jns
out
push
enter
sbb
iret
arpl
pop
mov
inc
enter
xchg
jne
cmpsb
xor
mov
jp
shrl
ljmp
xor
xor
inc
fcompl
popa
imul
nop
repnz
out
cmp
mov
xchg
mov
push
inc
bound
enter
push
mov
xor
bound
sbb
push
push
xor
sub
movsl
jmp
mov
mov
mov
mov
ss
dec
xchg
imul
inc
test
stc
testl
cmp
das
mov
call
in
fldt
orb
mov
jmp
cmpsl
subl
stc
xor
dec
lea
push
jae
shlb
dec
insb
dec
insl
imul
call
xchg
jg
ss
and
aas
push
jg
movsb
inc
push
in
xchg
push
test
jle
out
cwtl
mov
push
shrl
cld
stos
mov
sub
addl
movsl
cli
repz
or
mov
fldl
push
in
shll
mov
add
lods
nop
js
dec
mov
and
xor
push
jmp
pop
leave
jle
out
popa
cmp
std
push
mov
mov
fdivl
fcmovu
dec
mov
fldenv
push
lock
pop
mov
and
into
jmp
and
and
stc
jnp
gs
add
push
add
sub
pusha
mov
xlat
enter
push
in
cmpsl
mov
test
loop
imul
xor
mov
xlat
mov
mov
add
push
mov
or
sbbb
push
lods
and
adc
push
sub
push
or
jg
insb
stos
stos
loop
mov
hlt
rcl
mov
lahf
mov
and
stos
gs
mov
das
push
pop
jg
iret
pop
pop
rclb
adc
mov
mov
adc
push
ss
mov
cwtl
jne
repz
jp
test
pop
inc
pop
or
fs
scas
je
mov
ret
divb
jno
sbb
jae
repz
inc
mov
or
push
xchg
fldcw
shlb
into
bound
in
add
sub
cmp
test
push
das
cs
add
xor
nop
xor
jo
xchg
inc
mov
xor
jo
push
lods
int3
inc
sub
je
call
les
pop
and
sbb
repnz
mov
xlat
es
dec
xchg
in
mov
int
xchg
jne
mov
cmpsl
cmp
dec
pop
das
mov
dec
icebp
jne
xor
ljmp
dec
add
push
test
and
xor
pop
addl
hlt
das
adc
in
jne
jo
push
cmp
inc
cmp
lock
dec
and
jae
scas
push
jno
mov
sbb
mov
clc
adc
sub
adc
aad
insb
cltd
sub
into
sub
pop
daa
cmc
decl
out
test
cwtl
mov
cmp
jbe
fwait
in
pop
lret
dec
in
mov
push
jge
and
add
enter
sti
stos
jmp
bnd
fisttpl
fcompl
mov
hlt
or
stos
or
sarl
decl
orb
mov
push
push
mov
inc
out
cmp
or
cld
subl
sti
mov
jle
hlt
and
es
and
xor
push
mov
sub
je
and
test
call
hlt
fidivs
js
sahf
rcrb
addr16
movsl
push
mov
or
jns
xor
idiv
mov
inc
sbb
scas
mov
mov
or
jge
jnp
jbe
push
and
scas
out
mov
mov
and
loope
ds
leave
bound
jno
mov
jne
lret
and
and
sub
push
jmp
movsl
sub
sahf
stos
shrl
andb
mov
leave
mov
in
test
mov
sbb
or
jne
xor
cld
mov
push
xchg
mov
lock
out
std
sbbb
mov
lds
dec
daa
push
mov
sub
or
fcom
xchg
sbb
mov
mov
in
inc
int
addr16
xor
in
sub
in
jno
cmp
loopne
push
mov
stos
cli
negb
test
imul
test
fists
xchg
std
jne
mov
jae
and
iret
aaa
repz
and
mov
les
fdivrl
mov
iret
clc
addb
xor
jno
out
xor
in
adc
bound
jge
enter
jno
mov
pop
repz
mov
cmpsb
jecxz
pop
jbe
cmp
xchg
aaa
xor
ret
push
ss
xchg
js
pushf
mov
ds
ds
push
testb
xchg
push
mov
jne
dec
iret
aas
addr16
enter
pop
push
inc
pop
test
data16
icebp
stos
shlb
je
push
insb
ljmp
repnz
loope
sbb
push
fwait
push
cli
mov
add
sbb
push
ja
sbb
push
cmc
pop
dec
icebp
cmc
cmp
lods
sbb
xchg
xor
stc
icebp
mov
xor
pop
xchg
add
cli
jns
xor
stos
mov
mov
ret
and
and
pop
mov
xor
fwait
mov
jno
or
dec
jecxz
mov
lcall
mov
push
push
aaa
aad
mov
into
push
in
lcall
sti
rclb
or
ds
leave
push
jle
int
dec
or
pop
lock
dec
push
mov
cmc
xor
imul
jb
pop
outsb
xor
sbb
scas
mov
jo
dec
jle
movsl
aad
dec
lds
sub
sbb
push
sub
and
aas
and
fcmovne
jmp
dec
ds
mov
jae
mov
fsts
mov
pusha
ret
mov
xchg
cmpsl
jbe
mov
pop
cmpsb
jl
jbe
jp
sub
xchg
fs
shrl
ss
rolb
mov
aaa
test
das
call
inc
mov
cwtl
lock
stc
daa
push
enter
jae
push
pop
fs
iret
dec
cmp
cwtl
cwtl
or
ss
mov
inc
xor
shll
and
jns
pop
loopne
push
inc
dec
and
divb
jnp
and
pop
imul
std
push
push
xor
inc
iret
lock
fcmovb
xchg
popf
jecxz
call
push
mov
pop
mov
data16
inc
mov
mov
orl
pop
stos
je
dec
sub
bound
icebp
inc
mul
mov
loope
mov
into
inc
jl
movsb
pusha
push
xor
data16
xchg
dec
movb
xchg
daa
mov
mov
cmp
in
in
push
sbb
lahf
rcrl
sub
pushf
popa
nop
bound
cmp
popa
xor
and
ja
pop
cltd
aaa
push
aaa
lcall
in
fdivl
dec
pop
cltd
add
dec
or
xor
push
pop
into
dec
mov
ret
int3
data16
leave
lds
test
dec
cli
jne
fstps
add
lods
xchg
inc
leave
or
enter
fildll
lds
jb
sbb
clc
adc
and
lret
int
or
cmp
sbb
adc
adc
adc
scas
push
hlt
clc
dec
sub
jns
add
sbb
mov
lods
movsl
inc
cld
mov
push
cmpsl
in
xor
pop
sub
int3
andl
push
or
jo
mov
pop
les
cwtl
xor
and
jge
dec
outsl
or
test
icebp
jbe
push
test
fisubl
cli
dec
ja
push
mov
or
fs
stc
mov
jg
imulb
pop
aad
out
xchg
and
cmp
sub
fbld
inc
xlat
imul
mov
inc
or
pop
sub
ljmp
jp
fists
insb
inc
scas
jo
push
insl
aas
inc
scas
mov
add
arpl
xor
fsubl
pop
mov
jmp
enter
mov
jno
shll
shl
aas
cmp
aam
addr16
dec
hlt
iret
arpl
cmp
push
jle
out
shll
jbe
mov
add
fincstp
imul
push
loopne
adc
cmpsl
in
mov
dec
jge
dec
int
inc
mov
popf
add
dec
xor
ret
ds
adc
mov
xor
and
push
fcmovnu
fdivp
inc
int3
mov
cli
xlat
insl
imul
inc
loope
pop
neg
cmp
stc
nop
fs
xchg
rorl
cld
cs
cli
or
mov
cmpsl
jns
jb
js
mov
dec
loope
xor
dec
aas
cmp
gs
pop
add
dec
hlt
enter
sub
add
push
xchg
sub
repnz
jae
lods
mov
sbb
cmp
ret
inc
cmp
sbb
sbb
lock
xchg
mov
sub
mov
idivb
mov
movsb
cmc
push
adc
movsb
push
cmp
lahf
adc
or
and
and
out
or
jp
mov
mov
inc
push
leave
clc
mov
cld
mov
sub
xchg
adc
call
arpl
adc
scas
scas
cli
pop
sti
stos
sub
sub
mov
cwtl
pop
xchg
jle
xor
jno
add
pop
rol
sarb
loop
dec
nop
pop
call
push
or
cmc
movsb
push
les
sub
xchg
hlt
pop
jbe
sar
and
and
or
cmp
pop
mov
es
xor
push
cmp
mov
add
arpl
test
cli
repnz
cmc
adc
stos
popl
js
xchg
or
insb
shrb
mov
ret
mov
adc
inc
arpl
dec
movsb
pop
out
push
scas
pop
add
jns
sbb
loope
addr16
outsb
or
hlt
idivb
inc
lods
push
or
sub
icebp
ret
cmp
sub
sbbl
jns
pop
push
pop
loope
stos
jl
push
inc
stc
xor
cmp
mov
sbb
in
inc
sbb
adc
sbb
mov
sub
iret
jle
std
lahf
ret
push
pop
add
mov
out
out
mov
popf
mov
add
add
test
int
sbb
xor
adc
loope
xor
xchg
or
or
shlb
mov
mov
int3
add
dec
mov
test
xor
lods
sub
insl
mov
sbb
adc
cmp
or
xor
jl
bound
addr16
push
xchg
mov
mov
sub
inc
sub
push
flds
ljmp
mov
mov
inc
adc
pop
xchg
loope
inc
pop
aaa
cmp
jmp
mov
pop
ljmp
mov
sub
cld
dec
fnstsw
push
rcrl
xchg
in
add
adc
jge
test
jb
jg
in
cmp
daa
mov
inc
push
fs
leave
sbb
rcrl
out
mov
adc
enter
pop
mov
mov
adcl
xor
lods
dec
jne
inc
pop
jo
mov
push
xchg
aad
outsl
adc
dec
pop
ljmp
pop
mov
test
sub
into
inc
stc
iret
sbb
test
dec
icebp
adc
and
push
loopne
lea
cli
loopne
inc
jecxz
dec
nop
leave
movl
in
xor
push
and
xor
out
push
inc
ret
mov
icebp
insl
cmp
add
lds
mov
test
or
dec
lods
call
mov
or
pop
and
hlt
or
test
xchg
push
aas
inc
add
or
rol
enter
lods
pop
inc
mov
aam
jne
cmp
out
dec
mov
aam
sub
pop
dec
movsb
cld
stos
jmp
arpl
sub
jb
mov
push
leave
lcall
out
sbb
aaa
lods
fldcw
xor
insb
test
push
pop
addr16
pop
inc
lcall
negb
mov
sub
stos
nop
pushf
sbbb
and
inc
xchg
sti
mov
jmp
add
xor
ljmp
dec
mov
sarb
mov
jle
xor
or
mov
xor
in
lret
mov
lods
push
and
cld
adc
aam
test
dec
das
push
or
rclb
rcrl
xchg
enter
fwait
cmp
mov
push
in
imul
inc
adc
pop
cli
aam
movl
mov
mov
out
ret
cs
out
loop
xorb
fldl2t
enter
inc
inc
xor
cmpsl
cmp
inc
jbe
push
ljmp
adc
jae
inc
int3
push
roll
sti
test
add
mov
je
xor
lret
inc
stos
mov
lds
test
and
or
pop
mov
sti
lret
cmp
lock
push
cli
clc
in
jmp
cs
lahf
daa
cmp
push
ror
xchg
mov
addb
test
push
sub
mov
fsubl
jno
mov
add
std
cmc
sbb
in
fdivrp
out
mov
lahf
jnp
add
mov
loope
out
and
inc
fwait
mov
rcll
repz
mov
sub
es
jg
stos
enter
dec
fsubrp
sti
xor
sbb
mov
sub
mov
movl
jp
and
or
jbe
mov
fidivl
addr16
inc
das
push
jle
cmp
shrl
pop
cmc
mov
inc
pusha
and
or
sub
clc
ficomps
in
hlt
mov
add
loopne
stc
ret
mov
std
xchg
leave
mov
jecxz
in
scas
ss
mov
adc
jne
mov
sbb
pop
ret
popf
cmc
jnp
inc
bnd
lods
pop
xor
dec
sbb
lds
subl
cltd
popa
xchg
mov
push
lret
ja
mov
je
je
mov
hlt
dec
repz
nop
imul
fisubl
sbb
pop
arpl
dec
adc
pop
cmpb
loope
cmp
dec
inc
lret
test
inc
mov
pop
cmp
movsb
mov
out
stc
imul
test
daa
sbbl
test
lds
fiaddl
sub
jg
fnstcw
sub
rcll
cmp
dec
gs
popf
sub
loop
jo
cmp
jge
outsl
jno
xor
int
test
inc
ja
push
xchg
ret
xchg
arpl
inc
lea
jg
andl
jb
outsl
or
lcall
mov
sbb
sahf
ret
in
inc
mov
cli
mov
cmpsb
mov
ss
stc
data16
mov
in
sahf
stos
mov
jl
ljmp
inc
mov
or
popf
sti
dec
mov
notb
or
add
xchg
int3
push
sub
cwtl
fdivrs
inc
push
mov
xchg
jp
rorb
rclb
mov
inc
mov
dec
xchg
jne
jnp
adc
pop
sub
adc
dec
lret
add
ljmp
lahf
test
fmull
inc
roll
das
lret
jp
int
stos
xchg
adc
sub
dec
sbb
xchg
mov
arpl
dec
iret
inc
mov
pop
inc
xchg
shrb
cmp
js
jg
cmp
dec
push
leave
into
sub
js
add
jecxz,pt
in
int
lock
js
adcb
ss
decb
outsb
add
dec
nop
rorb
push
mov
cs
sbb
mov
sbb
xor
mov
sbb
dec
mov
and
divb
repnz
mov
jl
cmp
inc
mov
addb
or
fcmovnb
mov
je
xor
ret
rorl
cltd
lock
lods
ret
mov
pop
mov
pop
stos
mov
pop
shr
pop
cmovge
arpl
sarl
sbb
stos
lods
nop
rorb
adc
popa
mov
sbb
adc
movsb
mov
out
cmpsl
ret
push
imul
pop
mov
popf
sbb
mov
jo
aam
out
mov
sbb
fs
popf
push
jns
or
push
mov
mov
xchg
mov
xlat
cs
pusha
lds
icebp
out
sbb
mov
xchg
gs
push
fnstcw
into
and
iret
js
clc
je
cmc
mov
outsl
mov
or
jge
inc
fildl
call
dec
sbb
pushf
ljmp
sbbl
out
lock
mov
inc
ret
add
les
stos
fldenv
push
mov
add
dec
jp
cmpsl
mov
push
pushf
pop
shl
mov
inc
xchg
aam
rcrb
scas
sti
int
fiaddl
xchg
cmp
sub
sub
loopne
jg
dec
pop
mov
mov
lds
in
and
jg
fildll
jmp
lods
mov
repnz
fnstsw
pop
in
jnp
sub
pop
sbb
xchg
adc
cmp
shlb
test
popf
unpcklps
and
nop
clc
adc
outsb
mov
cltd
scas
std
popa
push
test
out
sbb
mov
je
adcl
subl
dec
cltd
push
mov
cli
mov
imul
popf
cmpl
loopew
es
mov
or
jmp
mov
idivl
stos
lahf
jo
or
inc
ja
push
xor
sahf
stc
fwait
push
cmpsl
mov
xorl
inc
fsub
adc
inc
adc
xor
mov
mov
les
out
popf
xor
insl
xor
negl
sbbb
jbe
imull
adc
and
js
push
adcl
faddl
out
icebp
xchg
push
pop
mov
adc
or
add
xorb
cmpsb
fwait
jae
jge
xchg
xor
and
cmp
xor
scas
lods
pop
in
repnz
xor
inc
repz
mov
dec
lods
repz
mov
dec
jl
dec
lahf
dec
inc
sub
scas
addb
lahf
call
add
shrl
cmpsb
sub
lahf
push
or
xchg
inc
mov
inc
out
outsb
lds
stc
and
inc
andl
rolb
mov
sub
lds
imul
xor
daa
cwtl
xor
pop
std
lods
inc
aad
loope
and
pushf
cmp
push
sbb
sbb
repz
out
shrb
xchg
lods
fbstp
sbb
pop
imul
pop
int
mov
test
repz
les
fdiv
cli
push
push
mov
fdivrs
and
sub
ss
cmp
xchg
or
jl
jp
stos
mov
cld
gs
aam
jae
test
gs
xchg
mov
daa
push
pop
iret
mov
dec
mov
ret
and
ret
stos
sbb
fimuls
inc
xchg
push
popf
sub
or
bound
mov
sti
push
test
fidivrl
mov
sub
mov
jns
jge
orb
mov
sbb
cmp
popa
rcl
fnstenv
mov
cmpsb
mov
repz
pop
cld
enter
sub
cli
outsl
mov
mov
mov
sub
mov
xor
mov
ret
dec
lret
jmp
mov
or
add
test
cmp
fdivs
popa
nop
aam
add
int3
add
notl
pop
xlat
repz
pop
aad
mov
or
pusha
rorl
cmp
add
add
andl
push
fwait
lret
and
cli
shrl
sbb
sub
mov
scas
xchg
jecxz
dec
sub
lcall
pop
mov
mov
js
mov
inc
xchg
push
fstpt
and
dec
pop
pushf
xor
and
movq
orl
xchg
lea
aaa
fcmovb
cmp
lret
leave
mov
pop
and
fwait
dec
mov
fbld
repnz
inc
push
rol
jl
and
cmp
cmp
and
gs
xor
lcall
xchg
dec
jle
or
cmp
scas
repnz
pop
sahf
and
fiaddl
das
loopne
movsl
popf
in
push
fldenv
xor
mull
jp
test
jl
or
xor
imul
imulb
orl
subb
das
loopne
jne
clc
cmpb
cmp
pusha
pop
xchg
jecxz
push
out
or
push
cld
pop
out
jecxz
mov
jns
sub
adc
push
xor
pop
and
rorb
sbb
fistl
jecxz
and
pushf
scas
les
dec
orl
mov
push
pop
mov
mov
icebp
cmp
and
dec
js
sbb
aam
and
bnd
mov
xor
daa
out
rcl
and
fistpl
mov
inc
xor
pop
out
ret
sbb
pusha
pop
fcoml
mov
push
push
fiadds
mov
pop
dec
push
adc
cmpsb
dec
mov
dec
cwtl
das
inc
ss
lods
dec
loope
mov
cmpsl
inc
xor
pusha
pop
adc
mov
je
xor
mov
sub
cs
fsubrp
fstpl
and
fs
cli
leave
sti
and
insb
mov
mov
fwait
loop
hlt
call
push
int
repnz
push
mov
lock
fs
pop
sub
mov
cmp
mov
adc
imul
xor
inc
cmp
sbb
adc
inc
dec
mov
das
mov
mov
stc
add
adc
pop
jmp
cmp
add
mov
dec
insb
int3
adc
mov
enter
enter
mov
in
mov
data16
mov
mov
jecxz
cmp
mov
popa
mov
cmp
cmp
cmc
sbb
cmp
je
out
mov
rol
sahf
xchg
mov
pop
ljmp
mov
test
fdivp
mov
leave
addl
and
inc
push
out
jne
sbb
mov
repnz
cmc
or
leave
inc
incb
dec
sub
sahf
leave
pop
sbb
mov
popa
movsb
inc
cmc
push
ja
in
mov
call
in
adc
xchg
adc
sahf
aas
add
lods
and
mov
add
mov
mov
adc
mov
movsl
adc
fdivr
fstpt
out
pop
inc
cmc
dec
jno
add
bound
popl
out
jg
inc
mov
xchg
mov
outsb
push
pop
mov
lods
scas
hlt
lock
hlt
xchg
mov
negl
ficompl
test
sub
dec
jg
shrl
inc
xor
mov
sahf
dec
adc
cmpsb
dec
test
add
js
fldcw
and
clc
test
out
popf
sahf
jo
js
push
and
cmp
mov
cltd
ds
mov
cmc
jae
orb
push
xchg
scas
mov
jae
inc
cmp
xchg
decl
pop
push
dec
cmpsl
dec
mov
push
lret
enter
int
pop
mov
push
cli
mov
sti
in
mov
mov
loopne
arpl
xchg
je
shl
inc
push
cwtl
movsb
push
call
mov
out
add
add
or
or
enter
dec
pusha
push
fsubrl
add
inc
inc
mov
xchg
inc
sub
lods
iret
add
mov
mov
jae
pop
push
cmp
jge
jmp
jp
dec
test
popf
cmp
dec
mov
repz
cmpl
out
adc
add
stos
xor
mov
out
scas
clc
je
push
jge
mov
sub
adc
pop
xchg
xchg
arpl
jnp
mulb
push
fisttpll
addr16
std
ds
sarb
or
dec
mov
cmp
cli
jle
das
rcrl
lock
mov
pop
pop
imul
rcrl
adc
xchg
test
addl
add
dec
push
xor
mov
rorl
cmpl
cmp
mov
aaa
int3
and
xchg
movsl
lahf
mov
or
rep
mov
push
xchg
ret
jl
outsb
enter
rcll
lds
orl
or
inc
pop
sbb
or
loop
popf
push
pop
push
xchg
loopne
push
dec
outsl
cli
mov
test
or
ds
xor
je
jge
push
push
push
int3
or
sub
or
mov
lret
daa
cmp
dec
xchg
mov
addr16
jecxz,pt
jb
adc
fldcw
inc
sbb
pop
mov
out
stc
adc
mov
mov
outsl
mov
cmp
cmp
not
outsb
mov
xor
pop
lds
mov
dec
lret
pop
or
mov
rcrw
test
outsl
dec
or
and
sbb
push
add
icebp
popa
in
fs
lock
outsb
imul
loop
lret
mov
mov
xchg
cmp
inc
imul
cld
into
cmp
mov
ficompl
test
sub
jo
rclb
pop
jl
or
fdivl
push
mov
fldenv
lods
or
mov
cmpsb
outsl
cmp
popf
ret
sarb
push
ja
das
lahf
shl
cmpsl
ja
sub
mov
call
repnz
xchg
cmp
mov
mov
xchg
pop
adc
add
scas
add
sub
and
into
lds
sti
cmp
fnstenv
ds
inc
sub
mov
cmp
movsl
jne
daa
sbb
dec
leave
testb
and
rorb
test
mov
loope
xchg
push
add
stos
pop
or
es
repz
mov
ret
jb
stos
jmp
ret
sub
icebp
leave
inc
pop
clc
cs
sbb
sub
or
jo
mov
add
and
adc
inc
adc
mov
xchg
adc
dec
sti
push
push
fisttpll
push
xchg
and
fcoml
int3
jg
imul
and
jmp
cli
jb
inc
repz
mov
mov
push
loope
ds
xchg
stos
test
into
je
pop
xchg
sbb
mov
aas
popa
jb
cmp
push
jns
or
dec
mov
dec
jp
loop
subb
and
push
shl
mov
das
add
shlb
lds
xor
push
lods
jns
mov
or
idiv
or
or
je
ret
aam
add
mov
mov
dec
xlat
jle
mov
imulb
into
inc
add
inc
fcmovnbe
dec
mov
push
and
imul
insl
xchg
mov
and
rcl
sahf
outsb
js
mov
aaa
dec
cs
mov
stos
fs
aam
mov
inc
divb
mov
jmp
pop
inc
xchg
iret
xchg
int
xor
nop
and
ret
jnp
adc
mov
dec
iret
in
fisttpl
cmp
and
jno
adc
adcl
dec
lods
fnstsw
aad
xchg
push
addr16
cmpsl
add
lea
outsb
push
add
or
out
insl
sub
inc
mov
fdivs
inc
cmp
pop
in
movsl
mov
int
pop
ljmp
jge
fiaddl
mov
cmp
and
std
gs
repz
addr16
lock
rolb
das
pop
popf
sub
loopne
xchg
out
xor
xor
pop
sbb
out
jmp
bswap
mov
jge
inc
ds
jmp
adc
adc
scas
xchg
jns
adc
das
inc
adc
mov
dec
repz
pushf
dec
mov
bound
cmp
add
adc
mov
fidivrl
repz
cld
cli
cmpsl
mov
mov
sbb
hlt
and
jg
out
popa
xor
cli
cli
jecxz
mov
fcompl
movsb
scas
stos
ret
lods
pop
sbb
cmpsb
rorl
aad
dec
ja
cmp
jmp
fwait
shll
sbb
mov
push
cmp
xor
loop
xor
fsubrp
cmp
mov
push
cmp
xlat
jb
xor
dec
aas
repnz
popa
xor
jl
inc
add
dec
mov
in
ja
outsl
int
sub
movsb
mov
cmp
fstpt
mul
das
popa
sub
inc
inc
fmulp
int3
jl
push
ficomps
xchg
or
aam
leave
push
xlat
inc
pop
int
inc
xlat
mov
mov
pushl
xchg
je
jp
sbb
inc
push
mov
sub
pop
add
stc
cmpsl
sub
and
dec
jg
or
push
cltd
xchg
mov
cmpb
mov
mov
pop
push
imul
or
add
lea
jge
cmp
xchg
fsubrl
jns
jno
clc
outsl
add
push
fdivrs
adc
or
adcl
fsubs
ret
mov
inc
jecxz
test
popf
subl
sar
sbb
push
and
mov
dec
aad
addr16
mov
cmp
stos
loopne
aaa
icebp
xchg
dec
mov
adc
das
in
jmp
bound
jl
add
adc
inc
mov
lock
addr16
adc
sbb
aad
mov
inc
test
lahf
test
add
mov
adc
fcompl
jo
sbb
and
out
jge
jb
ffreep
xlat
jecxz
inc
inc
pop
xchg
jno
mov
js
add
in
decl
mov
mov
fsubl
and
push
in
mov
sbb
push
and
lock
in
lahf
ja
aaa
dec
mov
movsb
cli
cwtl
dec
push
call
lret
mov
insb
sarb
out
sbb
mov
dec
mov
rcrb
pushf
imul
daa
roll
jl
xor
xchg
xor
daa
inc
mov
lock
mov
and
imul
dec
push
adc
in
inc
sbb
mov
ds
lret
mov
dec
fnstenv
pop
dec
bound
pop
sub
imul
mov
xor
jbe
in
imul
cltd
pushf
mov
xor
repnz
movsl
xor
sbb
scas
repz
lods
cmp
mov
or
rolb
mov
arpl
mov
jle
mov
mov
add
mov
pop
ds
xor
stos
mov
mov
movsb
fimull
cmp
sti
adc
xlat
fwait
or
xchg
and
xor
fidivrl
xor
js
imul
shl
cmp
out
stos
fs
pop
mov
or
inc
and
jmp
mov
test
mov
rcr
and
outsb
fstpl
rcrl
in
loope
push
add
aaa
sub
add
cmp
les
adc
jo
xchg
movsl
pop
sbb
inc
dec
jb
sub
xchg
imul
and
mov
push
inc
adc
sub
push
xchg
mov
sbb
rorl
lahf
and
ret
sub
pusha
mov
sub
jge
add
leave
scas
mov
test
add
shll
hlt
push
inc
dec
push
pop
insb
sub
es
cli
cmpl
pop
xchg
inc
inc
jno
sub
add
cwtl
jle
mov
push
push
mov
lret
cli
jmp
ss
aaa
int3
jmp
dec
dec
or
pop
dec
call
inc
push
repnz
fucom
scas
lret
lods
and
mov
sbb
jmp
adc
add
std
fs
push
call
cmp
cmp
adc
int3
notl
jnp
pop
inc
pop
fneni(8087
les
cmp
sarl
jae
call
pusha
add
xchg
push
xchg
push
xlat
and
xchg
shll
xorl
or
gs
cmp
sti
int
out
push
xchg
push
and
ss
xchg
cld
clc
jns
jmp
pusha
or
mov
mov
imul
out
fimuls
and
jmp
test
lock
mov
lea
in
in
out
lea
loopne
int3
or
rclb
and
cmc
loop
sub
adc
xor
xlat
lods
fildl
mov
enter
jecxz
sub
out
dec
cmpl
mov
stc
inc
inc
xchg
out
hlt
in
clc
test
fwait
xchg
je
mov
je
jle
or
or
add
adc
adc
lock
xchg
or
stc
sbb
stos
or
jo
cwtl
jmp
sti
mov
rorl
dec
cmp
mov
push
cmp
or
cmp
out
xchg
pop
movsb
xchg
add
mov
cmovne
push
xor
cmc
insb
fdivrl
or
fldenv
sub
out
dec
lahf
in
mov
xchg
mov
xchg
add
punpckhdq
cmp
jns
scas
movsl
imul
lret
mov
sub
mov
pushf
xor
push
jno
sti
sub
mov
jecxz
dec
push
or
insl
xorb
movsb
push
imul
testb
shlb
inc
addb
xor
cs
es
pusha
ja
cmp
cwtl
call
mov
pop
stc
inc
add
cmp
mov
ret
nop
fsubrs
xor
dec
mov
cmp
outsl
pop
cmpb
dec
mov
aam
push
call
std
add
scas
ret
repz
gs
xor
pop
jne
mov
sub
adc
clc
fsubrs
movsb
mov
out
inc
aam
push
leave
out
cwtl
lret
mov
sub
sbb
testb
jle
dec
or
sub
push
lret
lret
in
mov
mov
mov
cwtl
repz
mov
dec
aad
pop
comiss
out
xor
pop
pop
subb
adc
add
mov
push
popf
inc
push
mov
loop
ds
sbb
cmp
fs
sarl
push
xor
sbb
jno
mov
jp
push
sub
ja
cs
mov
jno
push
xchg
mov
aam
test
cmc
out
fnop
mov
divl
stos
ljmp
cmp
into
xchg
push
icebp
cld
pop
mov
push
icebp
movl
jb
sub
inc
fldz
aaa
jns
inc
leave
or
xor
daa
xorl
and
iret
pop
xchg
inc
sbb
pushf
das
cltd
addl
or
lret
fisubs
lcall
jl
inc
sub
xchg
pop
pop
fs
cmp
fnstsw
sbb
fadds
call
push
lock
in
or
inc
inc
lret
adc
cmp
insb
mov
repnz
sub
mov
and
lea
xor
cmp
mov
scas
sarl
sub
sub
jg
testl
pop
stos
mov
icebp
mov
aam
pop
xor
fnstenv
test
jl
lret
and
rorb
jbe
inc
icebp
in
push
add
popf
pusha
into
data16
or
pop
mov
je
adc
xor
subb
jae
mov
outsb
ficoms
mov
pop
adc
arpl
repz
fldenv
test
outsl
sbb
inc
scas
cmp
insb
shr
ja
out
int
xchg
int3
sarl
or
cmp
ja
popf
mov
imul
jmp
lods
xchg
and
mov
scas
adc
pop
out
hlt
shrl
lcall
es
mov
jp
sbb
push
mov
inc
xchg
scas
ss
shrb
bound
xor
addb
je
xor
fmull
clc
push
lcall
push
push
push
lahf
pusha
je
sbb
out
mov
cmp
mov
lods
sbb
jns
scas
push
pop
das
inc
nop
cmp
cmp
lods
fmull
mov
push
shr
icebp
imul
shll
and
or
inc
pushf
pusha
and
dec
xchg
cmp
mov
cmp
inc
cmp
or
and
sub
pop
dec
cmp
cmpsb
fistpll
movsl
push
cs
fsubr
mov
in
sub
mov
jbe
xchg
inc
dec
push
cld
or
xchg
mov
xlat
adc
jns
sbb
outsl
or
and
daa
pop
insb
ds
mov
push
dec
mov
lock
in
insl
xor
xchg
add
scas
push
pop
in
insl
ss
jmp
dec
and
mov
adc
jecxz
or
cltd
rcr
pushl
outsl
push
jb
lahf
add
mov
add
adc
inc
dec
out
leave
test
repnz
inc
imul
sbb
fdivrs
movsb
in
shrb
cmp
dec
iret
jnp
notl
pop
int
test
pop
dec
xchg
sbb
dec
inc
andl
aas
daa
stos
ds
ret
sub
xchg
in
jmp
sti
cwtl
jle
sub
dec
xor
cmp
and
add
xchg
ljmp
xchg
add
popa
pop
or
xchg
and
ret
and
pop
iret
push
inc
push
arpl
push
hlt
or
test
mov
ficoms
pop
nop
outsl
in
sti
add
push
data16
inc
fwait
cvttps2pi
mov
add
mov
jns
push
lock
scas
add
shrl
xchg
test
adc
cmp
cmp
sub
adc
add
mov
push
mov
mov
adc
dec
clc
and
rorb
sti
leave
and
jg
or
xchg
pop
or
inc
pop
aad
sub
cwtl
mov
loope
into
nop
stc
sbb
lcall
dec
mov
or
push
dec
outsb
pop
ret
arpl
movsb
cmc
pop
and
rolb
cmp
push
push
imul
sub
push
rolb
aad
test
dec
in
mov
mov
in
sbb
adc
push
lods
sbb
mov
mov
leave
push
cmp
and
xchg
jp
mov
in
mov
xchg
shrb
jns
arpl
lods
cld
adc
imul
lcall
sbb
adc
aas
push
daa
int
or
sub
movsl
cltd
nop
sbb
iret
jne
fs
xchg
stos
or
sub
push
and
jl
cmp
movsl
xchg
sbb
add
sbb
cld
lret
imul
push
arpl
sbbl
movsb
push
adc
pop
pop
scas
sarb
jnp
xor
xchg
cmp
aas
pop
mov
fists
add
add
ljmp
pop
jbe
sti
out
rcrl
add
mov
ror
test
aaa
dec
sbb
cmpsl
rcr
sub
ds
mov
arpl
pop
pop
xor
inc
imulb
dec
imul
ret
aaa
sbb
jae
in
adc
dec
adc
push
push
cltd
insb
ret
shlb
mov
repz
lret
and
or
insl
dec
out
shlb
lcall
cmp
cmp
sub
or
sbb
inc
jl
push
insl
and
cs
ja
xchg
test
ss
popa
xchg
ficoms
loope
loop
pop
adc
repz
push
xor
leave
xor
adc
mov
dec
imul
insb
inc
sub
cwtl
inc
jb
icebp
and
cmp
lods
subb
mov
mov
sahf
jp
scas
sub
out
xor
aaa
sbb
xor
into
dec
test
fwait
adc
lcall
cmp
pop
rorb
add
iret
push
jle
jp
das
pop
mov
sbb
test
mov
cmp
sub
jbe
ret
mov
fsubrl
pop
and
stos
mov
cmp
xchg
pushf
mov
adc
dec
lods
js
mov
call
je
out
push
ss
outsl
mov
dec
push
jnp
es
cmp
fildll
mov
fidivl
cmp
js
jne
push
push
sub
jne
test
and
ja
cmp
aaa
inc
mov
sbb
sbb
ja
enter
shrb
mov
xchg
js
addr16
and
dec
bound
loope
les
lcall
jno
inc
orl
dec
jne
cmp
cli
and
sub
aam
bound
xorb
and
xor
enter
adc
adc
xor
call
stc
in
push
and
arpl
sbb
fistl
fcomi
ret
int
inc
data16
jmp
inc
out
xor
je
call
jge
ret
mov
shrb
push
adcb
mov
adc
mov
mov
jae
pop
inc
sub
stos
push
sbb
pusha
imul
scas
cmp
aad
arpl
push
fdivl
inc
jmp
rorb
pop
scas
xchg
cs
in
mov
inc
or
mov
lods
pop
or
imul
in
or
es
mov
jb
add
sti
mov
ds
or
xlat
push
or
out
sbb
imul
dec
shrb
pop
jl
lcall
cmp
push
xor
xchg
add
loopne
push
pop
in
sub
les
das
jmp
repnz
jno
ret
cmpsl
psubsb
xor
aaa
subl
xlat
jne
sub
lods
std
push
mov
add
imul
push
mov
xlat
add
jns
cmp
jns
call
jp
xchg
inc
movsl
sub
lahf
xchg
clc
jp
adc
loop
sahf
popa
lret
add
int3
add
add
test
push
ss
push
test
mov
test
call
sbb
adc
addr16
dec
jae
popl
roll
imul
pop
pop
fs
mov
fwait
arpl
fsubs
sbb
lcall
lods
inc
fmulp
dec
js
mov
xchg
mov
pop
inc
mov
addl
mov
scas
rorl
jmp
sub
sub
mov
iret
cmp
adc
pusha
xchg
ss
push
or
push
bound
sbb
fidivrl
stos
subb
sub
xor
stos
bound
imul
bound
sbb
popa
shl
ficoml
sub
fsubp
and
sbb
adcl
stos
adc
inc
loop
add
xchg
dec
repz
mov
jle
xor
dec
add
decb
xchg
xchg
push
cmp
adc
sbb
ljmp
es
sub
pop
insb
in
out
sbb
push
std
xor
ja
scas
lods
pop
out
data16
inc
arpl
inc
cmpl
das
pop
shlb
imul
xchg
bound
mov
out
mov
rorb
sahf
or
enter
push
xor
mov
and
push
jne
lea
pop
inc
jo
fadd
push
subl
fwait
insl
js
mov
add
or
push
mov
inc
mov
mov
dec
push
out
mov
push
loope
cmpsb
test
aam
mov
sub
test
repnz
hlt
in
hlt
sbb
mov
or
xor
test
mov
rcrb
xor
dec
bnd
add
in
jg
ja
xor
mov
mov
stos
xchg
jbe
push
pusha
jnp
mov
pusha
hlt
cmp
xor
cltd
cmp
stos
lock
lea
adc
fmull
push
pop
cmpsb
inc
jmp
imul
push
ret
bnd
es
dec
arpl
mov
dec
add
jl
int
xchg
mov
xor
sahf
jbe
cmp
mov
jae
fdivrp
jne
popa
cmp
out
jne
mov
inc
push
cmc
imul
sbb
mov
cmp
xor
pop
div
inc
lods
sub
fisubs
xor
push
sub
pop
xor
test
jl
jl
mov
mov
addr16
inc
mov
pop
js
int
xchg
dec
adc
fsubrl
ss
push
add
sub
dec
mov
dec
jbe
cmp
pop
incl
mov
lods
dec
mov
jno
in
in
test
test
ds
mov
adc
adc
or
xchg
lods
pusha
cli
fcoml
sbb
lods
arpl
push
cmp
fildl
mov
cmc
mov
fcompl
pand
pop
add
sbb
and
push
add
jg
inc
mov
cmc
and
xchg
insb
fmul
lds
pop
fildll
jbe
push
js
jnp
pop
ljmp
test
jmp
pop
aas
push
out
mov
test
stos
shrl
daa
je
cmp
cmp
sub
adc
pop
inc
rorl
xchg
add
dec
mov
loop
jo
and
sahf
mov
jp
or
add
pop
jl
imul
mov
push
pusha
xor
movsl
into
out
aaa
mov
test
xchg
push
scas
sbb
mov
stc
pop
mov
push
mov
divb
andb
repz
cld
lahf
mov
stos
mov
icebp
add
xor
cmp
ljmp
outsb
shlb
jns
mov
mov
std
push
xlat
inc
mov
nop
imul
inc
jns
imul
in
lahf
fstp
pop
ret
data16
sbb
mov
xor
pop
movaps
imul
pop
inc
lea
subb
xor
inc
out
inc
jb
mov
sub
dec
lret
mov
xchg
int3
loop
fidivs
call
dec
daa
cmp
jp
stos
ds
bound
jns
mov
inc
pusha
pop
and
insw
out
cmp
push
sbbl
dec
sbbb
imul
jbe
pop
xchg
in
pop
lods
mov
lds
add
pop
sub
in
xchg
negl
sbb
fidivrl
pop
test
jbe
jo
cld
add
add
into
sahf
xor
lods
add
lahf
mov
pop
fnstsw
fcoml
imul
mov
in
jge
addb
icebp
pop
inc
iret
ss
out
je
mov
and
cltd
orps
dec
popf
.byte
cld
std
and
cmp
adc
mov
stc
jmp
jg
insb
out
flds
pop
and
icebp
jb
mov
push
push
add
cmp
jne
dec
xor
fstpl
mov
movsl
gs
mov
xchg
xchg
out
pop
fisubl
aaa
adc
andl
out
test
jne
pop
mov
jle
jne
jnp
adc
sti
push
fistpll
nop
dec
push
add
and
jmp
push
and
xchg
pusha
test
mov
arpl
dec
mov
adc
ret
or
cmc
les
sbb
loope
cmpb
or
mov
lods
pop
popa
or
push
call
jns
or
jl
mov
jle
sub
daa
pop
bound
jl
sbb
push
mov
xchg
test
mov
lods
cmpsb
adc
adc
push
aas
out
icebp
adc
cmpsb
mov
adc
dec
scas
ss
jb
or
jbe
push
fbld
add
xchg
xchg
and
imul
sub
pop
ret
push
ret
pop
mov
popf
mov
mov
ss
sbb
fisubl
or
mov
mov
ficoms
or
mov
sub
xor
sub
add
sub
icebp
outsl
adc
ss
add
add
nop
nop
mov
pop
cmp
sar
xor
sti
das
mov
and
fcoms
adc
cmpsl
mov
int
loop
pop
pop
iret
aaa
das
lret
pushf
sub
sbb
out
shl
jecxz
jmp
push
daa
popf
cmp
aam
fidivs
ret
inc
stos
push
or
and
xchg
jl
jl
cmp
icebp
sub
jle
call
xchg
inc
into
push
jns
int3
pop
lcall
sbb
xchg
daa
popf
cmpb
bound
mov
xor
add
js
cmp
fidivl
lahf
mov
adc
popf
inc
and
ljmp
mov
cmova
xorl
xchg
pop
cmp
dec
jns
aam
imul
mov
sbb
mov
add
inc
fdivl
je
xor
mov
mov
xchg
sbb
test
jns
add
pop
sahf
outsl
push
adcb
push
mov
sti
mov
aas
aam
shll
shl
out
xor
outsb
mov
cmp
aaa
push
sub
scas
movsl
int
dec
dec
js
push
test
or
xchg
aaa
add
mov
daa
jns
sub
pop
jl
rclb
jbe
pop
bound
and
xlat
add
pop
adc
les
test
sbb
pop
andb
mov
push
push
test
sbb
rorb
add
mov
and
aad
pusha
fiaddl
pop
jp
lods
xor
scas
and
sub
mov
lods
fsubrs
sub
xor
cmp
icebp
sbb
sarl
xor
lret
rolb
sbb
or
loope
push
jae
std
popf
cmp
sub
xchg
lds
hlt
jb
fidivl
or
adc
push
sub
mov
mov
xchg
sub
xchg
mov
lds
pop
adc
jo
add
fdivrp
xchg
cmp
inc
push
push
and
mov
scas
bnd
lea
cmp
daa
cmp
sarb
ja
fsubl
loope
sbb
mov
or
sbb
xchg
cmp
mov
adc
movsb
pop
and
add
mov
sub
push
enter
or
call
dec
and
mov
stos
lret
lds
add
cltd
roll
in
xor
pushf
shrl
push
repnz
ret
push
inc
loop
jne
pop
mov
fstpl
cli
xor
sbb
pop
and
fnstenv
pusha
mov
adc
xchg
push
sbb
stc
lea
jnp
push
pushf
inc
xchg
inc
divb
mov
xor
xor
dec
pop
icebp
xor
icebp
cmp
xor
dec
shll
nop
mov
pop
fincstp
adc
ja
sti
mov
xchg
gs
les
fucompp
test
or
scas
sahf
lahf
xchg
outsl
xor
mov
hlt
cmc
and
aam
jb
pop
daa
ret
cmc
loope
add
daa
fstp
int3
mov
fsubs
sub
sysret
xor
mul
roll
sbb
jg
sbb
inc
push
pop
sbb
popf
sub
test
cld
ds
push
mov
jno
push
jge
mov
mov
jns
add
dec
pushf
adc
sub
lods
stos
test
mov
dec
fisubs
es
insb
mov
xor
mov
adc
out
lock
sti
movsb
scas
xor
jmp
ret
sahf
out
and
fnstcw
cmp
cmpsb
push
jp
loopne
add
fdivl
es
mov
orb
mov
fldt
pop
lods
aaa
pop
pop
mov
mov
dec
inc
cli
gs
push
xor
out
lret
jo
out
ret
in
sarl
mov
mov
imul
notb
loopne
cld
push
dec
fists
flds
mov
ljmp
call
ds
push
int
out
ds
out
test
mov
out
sub
push
sbb
jg
push
jnp
fldt
sub
dec
idivb
fldt
mov
lea
cmpsb
unpckhps
push
rorb
mov
xor
sbb
ficompl
add
fsubs
jg
add
je
std
outsl
mov
lods
les
cmpl
sbb
dec
mov
adc
xor
lcall
cmpl
adc
cwtl
push
push
push
sub
scas
push
rcrl
jb
inc
pop
xor
push
das
pop
mov
push
subb
movsb
jns
pop
sti
fstpt
xor
inc
jg
xchg
cmp
dec
lock
and
lret
dec
jno
sub
enter
mov
clc
xchg
js
scas
clc
in
mov
dec
cmpsl
push
adc
mov
add
xchg
ljmp
xorl
mov
inc
sbb
cmpsl
enter
or
pop
cmp
loopne
insb
fistpl
mov
ljmp
pop
push
jmp
loopne
xor
adc
addb
imulb
cmp
cmpsb
mov
bsf
in
mov
gs
scas
xor
lret
test
inc
mov
inc
add
cmpsb
inc
mov
xor
cli
add
jp
rcr
fsts
lret
int
push
dec
dec
shll
jb
int
stos
loop
pop
ret
dec
ret
jno
jl
fimull
nop
lods
xor
sub
in
stos
sub
sarb
jmp
and
clc
jae
negl
sub
rclb
inc
xchg
insl
mov
testb
into
inc
pop
test
mov
cmc
push
insl
sub
sub
icebp
sbb
jmp
inc
lods
pusha
and
cmpl
and
cmp
jge
es
dec
inc
xor
addb
push
sub
add
pop
pop
les
pop
lock
mov
lret
push
mov
sahf
adc
pop
stc
stos
xor
mov
or
shrd
cmpsl
cmp
sub
dec
push
iret
inc
xchg
testb
push
mov
out
in
jg
out
cmpsl
jne
mov
mov
out
aaa
orb
xlat
loope
mov
pop
sbb
mov
in
mov
fs
mov
jl
jmp
jb
xchg
inc
rcr
out
inc
pop
xor
cmp
pop
popf
hlt
mov
xchg
pop
jmp
bnd
mov
push
push
test
mov
fiadds
test
xchg
cvtps2pi
adc
mov
mov
les
xor
mov
popa
in
add
mov
cli
les
les
das
cmp
loop
sbb
inc
xlat
sub
mov
lcall
add
aad
imul
nop
xor
stos
arpl
addr16
repz
xchg
cli
repnz
pop
cmp
sbb
jnp
lcall
cld
sbb
cmpw
cmp
cli
xchg
mov
in
jne
rolb
mov
mov
xlat
push
cmp
stos
jne
idivb
or
sbb
jae
sub
cmpsb
in
jb
mov
jle
mov
into
push
rolb
push
icebp
stc
fsubp
lret
jp
adc
lahf
push
loop
scas
xchg
in
inc
loop
adc
das
in
in
negl
mov
add
xor
movsl
fs
cmpsb
sub
mov
pushf
mov
or
add
add
jg
frndint
test
out
add
inc
xchg
dec
mov
pop
mov
repz
repz
xchg
mov
cmpsl
sub
add
mov
jne
addl
jb
mov
sub
jns
dec
jo
sahf
lods
repnz
pop
mov
mov
jecxz
aas
inc
gs
cs
lock
repz
pusha
loope
pusha
pop
mov
sub
rorb
adc
push
adc
fdivrs
ret
dec
ja
xchg
pop
xchg
pop
and
movsl
int
jne
inc
mov
outsl
addr16
lock
and
imul
push
stc
mov
lods
push
dec
mov
mov
icebp
inc
and
push
mov
daa
push
inc
cmc
mov
sub
push
push
xchg
add
pop
mov
mov
push
in
cmpsl
xchg
pop
add
mov
mov
icebp
into
pop
mov
fcoml
lahf
mov
jp
inc
jecxz
add
fistpl
cli
fstpt
stos
mov
and
insl
jne
xchg
jl
jmp
and
xor
xchg
jl
pop
daa
jbe
sbb
test
add
inc
push
hlt
xor
xchg
out
mov
inc
push
jo
pop
and
ret
xor
pusha
aad
mov
shrb
push
in
aaa
or
pop
sti
pop
sub
mov
popa
aaa
cs
test
jmp
adc
adc
or
mov
imul
inc
and
mov
daa
add
adc
std
int3
xchg
lret
jmp
jne
cmc
xchg
or
cmp
sar
rcr
push
push
lods
in
push
jg
push
stos
mov
addb
fistpl
jae
test
push
xor
cmp
inc
sbb
jne
in
jle
push
stos
test
stc
cmp
and
clc
push
test
pop
dec
ds
call
jb
push
xchg
and
adc
lods
test
bnd
outsl
jae
lret
jle
gs
sahf
lea
dec
cmp
outsl
mov
dec
pop
out
repnz
or
push
xchg
mov
lods
and
int3
cmp
mov
jg
stos
or
lahf
orl
or
mov
or
sub
pop
mov
jns
mov
test
sub
gs
aaa
pop
mov
insl
adc
pop
mov
clc
test
push
mov
xchg
sbb
addb
dec
jns
adc
out
popa
mov
into
in
aam
xor
mov
sub
cmp
xchg
mov
outsb
mov
pop
das
xlat
add
fistpl
nop
fnstsw
jbe
fucomip
sbb
lods
xchg
lods
push
jg
dec
dec
das
loopne
pushf
inc
sbb
sbb
es
sub
aas
jmp
push
shll
out
fdivs
movsb
stos
push
adc
outsl
in
test
and
push
pushf
cmp
mov
stos
xor
les
lds
lret
xchg
and
subl
out
mov
mov
inc
pop
shl
xchg
lret
sub
fstps
aaa
and
cwtl
ljmp
push
test
in
iret
sub
daa
xchg
xchg
xchg
mov
shlb
xor
test
shll
in
pushf
in
ret
std
mov
cmp
les
sbb
lds
push
sub
iret
mov
and
aaa
out
int3
mov
dec
or
adcb
jne
or
cmpsl
repnz
lahf
ss
mov
adc
das
dec
in
mov
lret
popa
bound
leave
jmp
mov
mov
mov
adc
xor
jns
adcb
cmpsl
sti
bound
mov
jecxz
push
xchg
hlt
mov
lahf
outsb
pushw
mov
lret
jns
mov
js
push
sahf
xor
inc
aas
cld
sub
dec
adc
cmp
cmp
adc
dec
or
dec
adc
outsb
xchg
clc
hlt
je
hlt
cmp
inc
jecxz
mov
enter
xor
mov
ds
adcl
retw
jl
lea
and
fnstenv
mov
cmp
xor
jmp
in
test
out
push
notl
andl
xor
pop
fcomi
xlat
rcll
xor
fnstsw
ret
push
insl
comiss
sbb
adc
mov
popa
dec
js
imul
sbb
cltd
cmp
or
sbb
push
pop
adc
arpl
imul
adc
xchg
cmp
jno,pn
cmp
aam
inc
into
push
jb
ljmp
sbb
xor
mov
mov
leave
mov
push
xlat
repnz
popa
dec
jg
xchg
adc
das
scas
test
inc
sbb
sbb
lahf
mov
mov
loop
push
fwait
in
jg
mov
rcll
lret
mov
or
notb
jge
mov
and
and
sahf
xchg
sbb
mov
pextrw
jl
xor
jp
push
mov
sbb
adc
push
insl
mov
pop
push
sub
jg
push
push
add
das
xchg
xor
push
inc
mov
lds
adc
and
xchg
mov
leave
mov
movswl
jbe
cmp
adc
cli
fcomps
jl
scas
.byte
.byte
.byte
sub
add
addb
call
or
xor
push
mov
popf
rcr
push
xor
push
push
sbb
adc
dec
cmc
cmpsl
lcall
push
insb
jp
push
jge
loope
pop
ja
mov
test
cmp
push
adcb
lock
jecxz
jnp
jle
mov
pop
mov
lea
adc
out
sbb
jecxz
dec
loope
loopne
xor
test
jbe
enter
push
add
roll
lods
test
pop
add
jne
gs
fstpl
sbb
fcoml
jne
xlat
ficomps
mov
inc
loop
sbb
mov
add
sub
dec
add
pop
mov
fists
pop
push
add
ret
fldl
xchg
mov
int
fldl
ds
ja
fwait
and
pop
inc
xchg
sbbl
call
test
push
lods
loope
sub
popf
inc
mov
inc
aaa
mulb
sbb
test
push
fdivrl
mov
dec
jb
insb
push
xor
mov
loopne
outsl
sbb
lret
out
mov
sub
push
mov
out
ds
pop
call
sbb
push
jae
int
dec
inc
adc
notb
jmp
mov
shr
cli
nopl
frstor
pop
jmp
call
inc
lret
dec
lods
pop
clc
add
xchg
add
or
stos
mov
inc
pusha
jle
push
pop
sub
sarb
ficoml
imul
push
mov
jle
fidivrl
cli
fwait
jl
pop
xchg
scas
lret
push
lds
inc
out
push
jno
lea
jb
push
push
into
psubusw
enter
pop
rcr
xor
mov
pop
dec
scas
enter
jnp
stos
scas
popa
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movswl
call
and
fstps
fnstenv
shll
add
popa
or
add
mov
mov
mov
add
mov
sub
sub
add
add
push
mov
popl
mov
mov
sub
jmp
cltd
pop
aas
or
cmp
jne
in
cmc
dec
pop
std
and
icebp
sub
xchg
lcall
sub
sbb
xchg
dec
addr16
scas
nop
cwtl
inc
insb
sub
jle
lds
cs
sbb
iret
test
cwtl
in
jp
in
and
cmp
sbb
imul
mov
addb
mov
add
adc
icebp
notb
xchg
cmpsl
in
scas
xchg
cwtl
inc
cmp
add
repnz
out
xchg
jecxz
inc
mov
add
push
mov
stos
andb
xor
mov
aad
dec
xchg
inc
xchg
sbb
lods
push
dec
inc
popa
inc
jae
es
aam
and
bound
cwtl
lods
aam
in
mov
mov
mov
in
das
ljmp
pop
push
xchg
fadds
aam
cs
cld
sbb
stc
int
pop
jne
scas
mov
or
mov
pushf
sub
dec
xchg
test
popa
add
adc
sahf
adc
cmpb
lds
pop
jb
push
dec
aad
aam
pop
rclb
mov
push
push
mov
fsubs
push
pop
das
daa
aam
mov
aam
daa
mov
lods
cs
aam
ss
imul
and
daa
aam
cltd
ret
pop
push
xor
jae
mov
inc
pop
or
dec
add
cmp
sbb
clc
jmp
pop
or
imul
inc
dec
jne
je
sub
jnp
jo
push
or
movsb
pop
movsb
inc
push
roll
mov
into
jmp
rol
mov
js
test
call
xchg
xchg
jecxz
ss
xor
pop
and
loop
rcr
loopne
outsl
flds
movsb
inc
mov
test
fsubrl
xchg
imul
mov
lret
jns
aam
push
repnz
lret
lea
adc
dec
push
vmwrite
or
jbe
test
pop
or
cmpsb
and
lods
adc
imul
stos
mov
nop
movsb
fnstenv
xchg
cld
adc
pop
int
shrb
ds
mov
xor
call
pop
ret
test
or
dec
ljmp
mov
inc
xor
nop
outsb
pop
vmovups
and
into
mov
ljmp
mov
outsb
sub
in
push
sbb
xor
ja
pop
push
xor
jns
cld
pop
fimull
and
cmpsb
jnp
call
ret
scas
or
shl
push
jo
movsb
and
imul
fwait
cmp
pop
sbbl
xlat
subb
ret
notb
jbe
lahf
xlat
pusha
jp
ret
jecxz
xor
movsl
push
lret
push
ret
notb
xlat
pusha
jp
ret
jecxz
fisttpll
push
ret
testb
fldt
pop
lea
jl
fiadds
push
ret
mulb
sub
stc
shl
in
ja
pop
or
add
ret
xchg
ds
inc
or
inc
div
mov
imulb
sti
add
xchg
jb
mov
jo
mov
ret
divb
ret
push
mov
neg
jge
idiv
adc
push
mov
push
add
neg
adc
jnp
ret
divb
cmpsl
add
push
ret
neg
push
sbb
mov
ret
jge
push
jbe
pop
push
ret
divb
jbe
add
divb
testl
js
sti
jge
sti
mov
in
mov
jo
mov
ret
lea
ret
divb
mov
idiv
out
ja
mov
mul
out
stos
push
rorl
mov
inc
pop
lea
push
aad
jg
or
or
jbe
mov
cmc
mov
jo
jne
pop
cmc
mov
jo
jmp
ret
jnp
and
div
shll
jge
push
jbe
ret
divb
out
xchg
div
mov
neg
adc
rcl
movsb
mov
pop
mov
lds
pmuludq
testb
ret
testb
and
in
sbb
test
cmpsb
hlt
mov
push
jae
mov
or
xor
and
inc
cmp
cmp
cmc
push
jae
mov
lea
push
shll
and
inc
cmp
dec
push
push
iret
add
test
jmp
js
xor
cmc
push
jae
mov
into
out
roll
add
add
arpl
add
jmp
js
xor
cmc
push
jae
mov
push
loop,pt
jae
mov
adc
testb
jmp
js
xor
cmc
push
jae
mov
push
lds
inc
insb
inc
push
pop
push
mov
clc
imul
add
testb
test
jmp
js
xor
xlat
mov
imul
push
test
add
ret
sar
dec
lds
inc
jae
push
pop
push
repnz
jne
js
cmc
jge
shrb
mov
sbb
xor
mov
ds
add
xchg
inc
jno
mov
sbb
inc
les
js
pop
xor
int
testb
xchg
mov
insl
and
idiv
adc
xorb
js
hlt
and
mov
add
lcall
jnp
sbb
dec
add
ret
xchg
mov
jnp
insb
mov
testb
ds
mov
or
jecxz
mov
pop
lcall
xor
or
shlb
fistpl
std
dec
cmc
xor
shr
imul
jle
or
jg
mov
xor
sub
shl
repnz
xor
dec
push
out
cld
jg
or
pop
inc
out
push
push
loope
push
jle
fildl
inc
test
pop
adc
mov
out
out
fldt
mov
ret
testb
ret
testb
ret
testb
ret
sahf
ss
ret
idivb
and
testb
add
mov
ret
testb
stc
testb
ret
testb
ret
testb
ret
testb
pop
mov
fs
dec
inc
add
nop
out
int3
pop
adc
or
xor
int
fsubs
xor
popf
ss
in
ret
xchg
inc
stos
inc
push
rcrl
in
fs
push
xchg
inc
imul
adc
sub
jle
adc
mov
punpckhdq
out
loope
jecxz
xchg
pop
mov
pop
add
push
sbb
add
out
mov
inc
sub
movsl
mov
lcall
mov
iret
or
cli
notb
push
mov
outsb
sbb
roll
dec
cwtl
es
jecxz
inc
shlb
gs
cmp
sub
xor
dec
lock
out
movsb
andl
rcl
cmc
iret
cmp
jmp
and
fisubs
and
add
add
add
dec
adc
inc
dec
adc
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
adc
cld
dec
adc
mov
adc
add
dec
adc
int3
dec
adc
jmp
add
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
dec
adc
add
add
decb
add
add
add
adc
add
add
add
push
push
inc
push
outsl
arpl
je
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
or
lea
ret
out
or
cmp
adc
dec
nop
clc
jg
lcall
and
enter
sahf
add
aam
nop
mov
dec
mov
jecxz
sub
enter
inc
lods
repnz
pusha
push
inc
and
scas
push
fs
dec
or
xchg
adc
add
cmp
inc
add
push
je
imul
sbb
push
and
mov
shrb
and
add
inc
aam
mov
adc
add
pop
push
dec
bound
arpl
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
aaa
sbb
and
and
pusha
in
jo
insb
sbb
push
xchg
add
in
jb
cmp
push
sbb
sbb
or
and
fcoms
add
cmp
sbb
add
lock
test
sti
inc
add
in
adc
les
loopne
call
or
inc
inc
sub
je
movzwl
js
sbb
mov
cmp
push
pop
lods
or
cmp
xor
or
cmp
sbb
sub
and
nop
lock
push
mov
cmp
cmpl
jne
push
add
call
add
test
jne
faddl
pop
mov
mov
jb
aas
or
mov
add
lea
js
sbb
mov
addb
inc
cmp
jne
in
icebp
cmp
adc
push
popf
pop
nop
mov
xor
add
rcr
daa
add
dec
cld
add
mov
aam
sbb
iret
or
outsl
adc
pop
cwtl
add
push
add
iret
add
push
push
adc
mov
nop
push
push
pop
loopne
icebp
into
adc
add
xchg
add
sbb
aaa
pop
inc
nop
cmc
cmp
inc
addl
rolb
push
or
push
jne
adc
adc
call
xchg
add
or
inc
add
jb
push
pusha
add
ret
scas
sbb
hlt
jmp
ds
aas
push
or
ret
test
add
es
call
add
mov
xor
insb
call
ret
std
sbbb
fmul
ja
pop
and
jge
mov
incl
sub
cmpl
add
gs
push
or
inc
add
into
mov
cli
iret
mov
out
jmp
sub
cmp
stc
mov
adc
mov
add
test
dec
or
je
ret
test
sti
repz
pop
xchg
adc
add
xchg
cmp
adc
pop
mov
jnp
add
out
or
mov
inc
push
add
and
push
and
cmp
mov
test
je
add
sarl
add
adc
inc
in
mov
add
decl
clc
aad
fs
psubusw
dec
test
js
push
push
add
or
push
pop
jne
pop
scas
jns
inc
push
and
jle
ja
add
mov
insb
in
cli
dec
inc
add
dec
in
xor
or
incl
scas
push
mov
pop
sbb
rol
sub
jnp
add
repz
jae
nop
pmaxsw
and
add
add
xor
push
hlt
mov
stos
or
lock
push
jae
xchg
sub
lea
adc
adc
add
cmpsl
data16
in
jle
add
sbb
insb
or
adc
cmpsb
shrb
mov
hlt
jmp
ljmp
add
sbb
ret
xchg
and
loop
or
mov
or
inc
mov
lahf
cmp
pop
pusha
jle
es
mov
mov
std
push
mov
cmp
sub
push
add
pop
scas
shll
xor
dec
mov
or
xchg
popa
je
jl
add
adcb
or
add
leave
xchg
orb
inc
test
and
jae
mov
rorb
add
addl
push
mov
cmp
mov
add
aas
xchg
data16
pop
aam
xor
ud2
jbe
call
and
pop
add
aas
je
lods
inc
dec
add
mov
adc
xor
leave
add
add
int3
arpl
cmp
and
movsl
scas
and
push
push
call
int
aaa
adc
dec
pop
xchg
pop
je
cli
adc
aas
xchg
in
add
xor
push
jne
cmc
loopne
test
jle
lea
sub
inc
pushf
rcll
das
cmpsb
add
into
aaa
or
xchg
push
mov
push
mov
mov
pop
insl
subb
dec
xor
rolb
jne
pusha
in
adc
sbb
pop
lods
cmp
or
jp
inc
test
cmpl
aam
adc
in
inc
and
or
push
add
dec
xor
rolb
stc
rcrl
sbb
jecxz
ss
add
push
or
fidivs
cwtl
lret
add
sub
lds
int3
mov
mov
test
je
pop
add
and
add
xchg
adc
testb
or
add
imul
in
loopne
push
push
dec
fs
xor
sahf
mov
aam
sub
inc
add
jle
movsb
adc
int
popa
and
sahf
mov
mov
aas
clc
dec
pusha
mov
cmpl
mov
adc
add
hlt
add
add
add
iret
and
jl
xchg
jno
add
mov
hlt
push
xchg
ret
add
and
in
or
cs
les
dec
stc
repnz
sldt
push
sbb
xchg
jns
add
sub
out
mov
pop
hlt
leave
adc
cmp
aad
cmp
mov
in
mov
je
xorl
in
cmp
xor
pop
push
lret
inc
sbb
mov
or
pushf
in
fstpt
loopne
push
cmp
xchg
sbbl
dec
or
cmp
cmp
add
add
ror
add
add
sub
js
pop
hlt
jmp
pop
movsl
popa
ficompl
outsl
xor
in
pop
or
testl
and
mov
dec
cwtl
in
push
shll
add
or
push
cld
adc
xor
sbb
or
cmpsb
adc
cmc
mov
add
jmp
pusha
cli
or
jl
adc
xchg
rolb
ret
cmp
mov
cmp
or
or
ljmp
add
rolb
loop
add
jg
add
adc
pop
cmp
mov
jne
sub
lret
mov
or
add
ret
and
bound
fwait
dec
and
loope,pt
xchg
push
dec
je
sub
fiaddl
popa
push
inc
sub
scas
xor
test
pop
and
and
decb
inc
cmpsl
shlb
cmp
mov
push
adc
push
insb
add
push
add
adc
add
fdivs
mov
addr16
add
pusha
fsubs
test
jne
in
xrelease
xor
inc
or
addl
hlt
xchg
mov
clc
add
or
es
mov
push
aaa
sub
movsl
repz
jg
leave
sarb
cmc
sarb
push
imul
add
xchg
and
mov
and
inc
into
add
in
repnz
mov
sub
add
lcall
inc
or
call
cmp
pop
clc
shll
dec
rcl
xor
inc
fisttps
mov
sub
sbb
addl
pop
aaa
push
test
xor
dec
ret
ss
dec
adc
adc
es
xchg
sbb
adc
adc
xchg
pop
sbb
int3
sub
cmp
jl
xchg
cmp
inc
jns
add
add
sbb
nop
mov
andb
aad
or
std
movsb
add
inc
loopne
mov
enter
test
adc
xchg
sbb
scas
mov
sub
rclb
imul
orl
lock
mov
add
dec
mov
add
cmp
push
clc
pop
and
fsubs
or
addr16
sub
xor
and
cmp
or
xchg
je
mov
rclb
call
mov
add
xchg
insl
mov
add
addl
daa
adc
xchg
fxch
sahf
push
aam
icebp
adc
push
lea
xor
mov
sub
inc
add
mov
add
int3
test
push
inc
je
add
xor
jb
add
add
push
push
pop
mov
stos
rorb
jne
push
pop
shr
test
mov
mov
push
stos
ja
jg
mov
sub
pop
mov
jnp
or
inc
mov
jmp
inc
pop
sub
scas
mov
push
in
or
adc
dec
inc
dec
add
fiadds
jmp
jp
dec
movsb
add
or
jge
cmpsb
test
aas
dec
dec
adc
add
xor
fsts
in
or
out
repz
xor
dec
jmp
dec
cmc
pop
ds
xorb
cmp
adc
xchg
int3
dec
jmp
adc
push
repnz
lock
sbb
push
lahf
dec
xchg
add
aam
push
arpl
andb
mov
or
add
push
es
xor
pop
xchg
mov
sti
rolb
or
orl
xchg
fxch
and
test
jge
je
and
and
add
inc
nop
push
adc
jne
sbb
repnz
add
hlt
test
mov
or
fs
xchg
push
mov
mov
loope
popa
cmc
push
xchg
out
stos
mov
add
daa
or
rorb
jg
push
orb
push
xchg
sub
xor
scas
push
outsl
test
xchg
push
or
pop
add
push
int
push
and
ret
add
cmp
add
sub
adc
cmpb
loopne
lock
or
jb
add
test
dec
cltd
pop
and
dec
icebp
loopne
test
clc
jne
dec
inc
or
jns
or
adc
movsb
shlb
add
add
mov
pushf
push
or
stos
add
loop
push
int3
cmpsb
aas
inc
add
cwtl
dec
sub
push
inc
push
sbb
add
adc
cmpsb
mov
add
popf
add
cmp
sub
jno
push
add
mov
add
cmp
adc
xor
je
je
add
cli
add
push
or
aaa
cmp
sub
mov
cwtl
push
push
or
and
mov
mov
add
mov
int
cmp
lods
and
mov
lds
in
adc
lock
pop
push
mov
push
push
lock
mov
test
add
or
add
movaps
lahf
cld
mov
jne
fsub
es
adc
repz
push
jge
push
cltd
pop
sub
or
bound
add
testb
add
sub
roll
sahf
add
jne
and
fstl
pop
sub
cmp
jmp
movsb
xor
pop
movl
addr16
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
or
mov
xlat
jmp
xor
add
ret
add
lock
loop
xchg
loopne
adc
jmp
gs
xchg
and
rorl
inc
pop
movl
cmp
xor
add
cs
push
add
and
fcoms
jp
mov
and
jns
add
imul
jmp
sbb
cmpsl
dec
fnstsw
add
and
add
and
xorl
mov
jmp
ss
xor
add
push
repnz
push
ja
add
lock
sarb
aam
adc
add
lret
xchg
call
mov
mov
xchg
test
and
nop
mov
sub
mov
ret
cwtl
mov
stos
mov
fsub
inc
sbb
jne
add
jo
or
loopne
sbb
mov
and
es
pop
pop
cmp
stc
aad
add
push
gs
adc
rcl
xlat
xor
loopne
shl
add
stos
scas
rolb
add
rorl
xor
mov
call
cmp
out
add
int3
enter
call
fcmovnu
lret
add
loopne
jecxz
in
in
pop
push
push
push
push
sub
pop
add
pusha
loopne
push
add
popl
stc
rcr
mov
nop
push
imul
scas
in
xlat
push
cmp
add
je
mov
js
add
rep
cld
push
and
pop
jmp
pop
cmp
or
sub
add
sbb
add
inc
rorb
add
xchg
test
or
jp
cmp
jbe
cmc
cmpb
jne
or
add
out
lcall
sbb
inc
loopne
mov
add
push
push
adc
lock
loope
add
dec
sbb
pop
dec
add
mov
into
add
xor
testl
ja
inc
js
xor
cs
lea
push
pop
and
add
inc
cmp
jbe
add
or
xchg
cmp
or
push
pusha
jl
jmp
arpl
call
inc
xorb
movzwl
add
sbb
repnz
inc
add
mov
push
add
add
call
testb
mov
xor
in
js
in
or
sbb
pop
jmp
jecxz
lret
sbb
je
subb
add
push
jg
push
pop
sbb
add
bound
sbbb
mov
sbb
movl
and
or
jb
cmp
roll
pop
add
inc
xchg
hlt
jle
add
pcmpeqd
ror
call
leave
mov
xor
push
shr
add
fwait
loopne
and
push
dec
into
popa
out
pusha
ret
es
xor
enter
fnstenv
dec
mov
add
cmp
cmp
mov
ret
push
sbb
jmp
enter
pop
lock
out
je
pusha
mov
cmp
jne
xor
adc
dec
std
mov
add
add
sbb
xchg
sbb
xor
jp
jl
pop
cltd
or
push
jmp
add
xor
nop
mov
mov
adc
or
add
or
stos
adc
dec
add
stos
pop
inc
imul
inc
mov
or
int3
push
nop
xor
dec
iret
mov
cltd
xor
sub
and
in
inc
add
push
add
xchg
xor
pop
pop
jge
test
movb
hlt
jl
loopne
add
stc
inc
add
add
fnstenv
in
shll
mov
dec
jne,pt
add
sbb
add
cltd
enter
sbb
xor
mov
mov
push
inc
add
push
and
sbb
sub
or
add
rolb
popa
aas
pop
mov
push
sub
sbb
test
sarb
jmp
iret
add
and
ja
sbb
sub
rclb
jne
dec
mov
adc
pop
imulb
mov
mov
fdivrs
lock
out
cmp
in
inc
push
fdivrl
cmovbe
je
xchg
add
popa
jb
mov
jbe
or
adc
pop
ret
or
add
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
mov
repnz
inc
cmpsl
push
jae
out
push
xchg
xor
cmp
in
add
push
mov
pop
sbbl
dec
add
test
mov
lods
sbb
lahf
pop
add
adc
xchg
sub
xchg
loop
or
add
addl
add
movsl
sbb
nop
jmp
pop
xor
xchg
add
push
push
pop
pop
add
adc
dec
add
mov
es
or
pop
add
push
cmp
dec
clc
lea
xchg
jnp
sbb
call
dec
jo
sub
push
pushl
and
inc
hlt
xchg
ret
ja
add
or
xchg
loope
pusha
cmp
add
sbbl
addr16
push
inc
add
push
arpl
dec
cld
adc
out
mov
jmp
clc
or
loop,pt
int3
ret
mov
push
rorb
push
push
inc
push
inc
pop
add
outsl
jb
popa
outsb
fs
add
jo
push
dec
loopne
add
dec
popa
sbb
add
jne
movsb
imul
jo
int3
lods
jbe
ja
push
aam
leave
orb
sub
fdivr
sbb
adc
inc
lret
ret
sbb
add
xor
ss
mov
push
pop
add
call
mov
jmp
add
xchg
movlps
mov
call
or
mov
sbbb
lret
xor
loope
add
mov
sub
fidivl
cld
add
stos
mov
fadds
stos
sarl
and
pop
arpl
loop
mov
js
imul
inc
sbb
in
cmp
aam
sbb
add
testb
icebp
jnp
xorb
and
dec
add
cmp
add
adc
or
rcrb
js
shl
mov
les
or
push
push
cltd
add
and
enter
movl
ret
lods
fs
ret
pop
orb
sub
xchg
cld
mov
pusha
addb
mov
and
mov
mov
into
add
call
adcb
fstps
loope
lahf
or
add
mov
push
divb
jp
add
sbbb
add
jb
imul
and
or
and
or
pop
pop
pop
add
mov
add
or
dec
push
orl
mov
add
and
or
mov
add
push
clc
pushf
inc
test
cmp
mov
add
call
orb
add
loope
add
push
imul
cli
in
push
sbbb
sbb
fcmovnb
push
push
bound
pusha
enter
mov
add
shl
xchg
adc
add
push
mov
cld
jmp
fs
clc
push
adc
xchg
rcrb
inc
add
pusha
sub
jmp
or
pop
pop
mov
pop
ret
add
jl
push
add
imul
pop
pop
inc
pop
dec
sub
push
and
mov
jbe
cmpb
imul
cmp
cmpsb
jne
cmp
popa
fiadds
dec
adc
loopne
add
call
xchg
or
sarb
lock
add
push
adc
out
mov
mov
cmp
into
add
out
push
je
push
pop
movsl
add
jbe
cmp
loop
and
insl
xchg
push
ret
mov
les
xchg
js
inc
stos
popa
xor
lret
or
push
or
push
stos
cmp
lods
popf
daa
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
jle
add
leave
sbb
hlt
enter
das
mov
dec
add
add
jo
mov
insl
mov
add
aad
sbb
movl
stc
rcll
add
jecxz
ss
xor
xchg
mov
jmp
add
enter
je
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
cmp
add
in
lds
inc
push
out
dec
pop
cs
and
add
add
jne
pop
fs
jae
add
pushf
or
popa
into
je
adc
je
add
add
dec
add
popa
mov
mov
cld
xchg
jmp
ja
jne
add
sahf
inc
adc
daa
inc
inc
icebp
insb
hlt
xchg
and
inc
mov
xor
pop
lcall
inc
lea
call
or
rcl
and
mov
movsb
andb
movl
mov
pusha
and
incl
dec
cmp
pusha
pusha
push
push
jge
add
enter
push
add
imul
push
mov
ds
mov
ljmp
jne
or
andb
cmp
or
movsb
xchg
ljmp
mov
adc
add
mov
sub
cmpsl
dec
add
inc
pop
xchg
fs
mov
je
les
inc
add
rol
jmp
cmp
int
push
shlb
add
dec
test
sbb
lret
cmpsb
add
add
add
sub
pop
push
mov
cmp
adc
mov
jbe
xchg
cld
cmp
aas
jmp
add
mov
sub
add
ss
xor
or
adc
sub
add
inc
adc
and
jmp
add
push
mov
add
stc
sub
enter
sbb
jecxz
inc
int
and
iret
push
and
jl
jge
push
in
into
lock
fdivr
push
cld
or
frndint
push
add
roll
imul
test
pop
ret
sahf
and
repz
inc
cmpsl
jmp
lods
add
mov
cmp
cmp
fs
xor
dec
fimull
lock
rclb
sbb
sti
clc
add
add
sbb
inc
add
inc
sub
lea
bound
mov
push
movaps
cmp
dec
stos
pop
and
pop
movsb
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
adcb
add
add
and
mov
mov
sub
loope
push
sahf
jo
add
daa
push
enter
fistpl
lock
aam
add
out
cmp
adc
mov
insb
or
mov
add
movsb
jp
sti
cmp
fucomi
js
pop
inc
xor
test
repz
sbb
fbstp
ds
shrl
jg
in
pusha
mov
pushf
sbb
mov
movsl
add
add
lcall
jnp
jle
andb
pop
cmc
or
cmpl
nop
pop
mov
or
push
in
dec
push
leave
cli
inc
or
inc
mov
pop
push
mov
je
pop
call
mov
add
push
or
jne
movb
rcll
sub
inc
call
inc
sub
lea
add
inc
xchg
push
push
shll
iret
cmp
sahf
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
mov
ficoml
mov
or
add
incl
mov
push
pop
push
add
lcall
add
adc
sbb
sbb
and
sbbb
pop
xchg
sbb
sub
leave
mov
fxtract
xchg
shlb
add
cmpb
ljmp
add
pop
mov
sar
push
cmp
call
jne
nop
sbb
mov
aaa
and
push
push
add
mov
inc
jno
adc
sahf
sub
or
jnp
in
cmp
dec
adc
shrl
cmp
jne
or
mov
or
fsubrs
add
jbe
pop
fs
or
pop
and
jge
jne
mov
push
pusha
jg
pop
push
outsl
add
push
sub
orb
add
adc
js
das
add
mov
daa
add
pop
add
mov
jb
mov
outsb
add
inc
daa
jo
mov
out
inc
sub
lock
add
cmp
sub
stc
jns
add
mov
xor
jmp
xchg
outsl
neg
add
adc
inc
cs
add
inc
sub
jl
lock
test
lret
pop
push
lea
push
xlat
js
add
xor
add
test
lret
add
dec
stc
fiaddl
push
lock
inc
inc
jg
push
jne
mov
les
add
pop
in
jmp
sbb
add
inc
jl
xchg
dec
sub
sbb
jbe
inc
mov
push
jo
or
or
pop
mov
cld
add
clc
rclb
movb
inc
push
dec
mov
addb
js
xchg
sub
cwtl
hlt
lock
pop
mov
fs
mov
or
clc
cmpsl
icebp
ftst
ljmp
xchg
and
add
addr16
jge
leave
mov
sbb
push
and
call
add
andl
ror
je
xor
es
stc
mov
nop
loope
pop
inc
xchg
subb
cmp
push
mov
loop
mov
push
addl
push
cmp
stos
pop
pop
inc
push
es
add
cli
or
les
mov
adc
mov
sarl
pop
sub
in
daa
in
add
subl
pop
and
xchg
push
xor
xor
in
add
jbe
push
and
cld
inc
movsb
add
nop
push
push
push
mov
je
push
repnz
mov
pop
add
dec
xor
push
scas
or
jo
ljmp
mov
cld
testl
and
sbb
mov
jns
loopne
or
add
cmp
add
call
jp
push
dec
xor
adc
lea
testl
popa
scas
mov
jno
add
pop
mov
inc
push
inc
cmpsb
stc
dec
add
jmp
pop
shrl
enter
pop
adc
add
add
dec
mov
add
xchg
cli
arpl
add
sysenter
pop
and
dec
jg
aam
jno
mov
lret
or
push
push
roll
push
push
push
test
in
or
cli
dec
loop
and
pop
shlb
mov
adc
cli
jle
cmpsb
fadds
mov
into
push
orl
push
out
lods
inc
dec
and
pop
addps
repnz
jmp
rol
dec
lret
dec
jg
sub
add
scas
out
leave
sub
shlb
add
ret
ljmp
pop
inc
pop
dec
dec
add
pop
orb
pop
ds
xor
aaa
mov
testl
cmp
inc
adc
pop
mov
cmp
push
adc
pushl
loope
enter
add
jmp
push
popa
lret
mov
xchg
bound
out
in
add
nop
dec
rolb
or
inc
addb
mov
mov
out
sub
nop
xchg
in
movsb
pop
adc
imul
out
dec
int3
cmpsb
sub
add
insb
mov
add
add
pop
sub
das
or
sbb
hlt
sub
cli
add
je
push
in
fnstcw
aad
bound
stos
sahf
push
mov
sub
fiadds
jl
cmp
inc
jle
and
icebp
hlt
iret
in
add
jo
add
add
lea
cmpsb
jg
xchg
sti
push
push
lock
std
xor
xchg
aaa
jns
cmp
cld
lcall
add
inc
pusha
icebp
jle
jmp
rclb
mov
pop
cmp
repz
mov
je
movsl
add
or
scas
inc
pop
push
clc
adc
test
mov
and
and
cld
aad
and
and
sbb
ret
sbb
aad
xor
and
jo
push
scas
sub
add
adc
cli
nop
add
mov
adcb
add
aam
lret
pop
fistpl
repz
inc
jg
add
inc
movsl
inc
adc
pushf
push
mov
jo
in
push
loopne
std
loop
and
enter
nop
pop
sbb
and
jne
pop
clc
jl
or
scas
stos
repz
ret
mov
dec
pop
addb
iret
jmp
gs
leave
shll
or
push
pop
xor
push
movb
dec
pop
sbb
xor
pop
add
lcall
add
push
pusha
cmp
add
sbb
mov
pop
push
push
add
bound
sbb
call
icebp
shrl
pop
test
enter
pop
mov
dec
test
scas
jl
inc
push
icebp
cwtl
cmp
call
mov
mov
stc
loope
jb
fisttpll
push
in
push
pop
push
inc
cmpsl
clc
push
or
sbb
shlb
add
std
jnp
add
and
enter
mov
xchg
pop
mov
mov
mov
or
and
mov
pop
fistl
sahf
pcmpgtw
sub
sbb
cwtl
scas
pop
sub
testl
incl
adc
pop
repz
add
aad
push
xor
hlt
sub
add
jno
jmp
shrl
sbb
cs
aas
stos
cmpsl
push
add
lock
jmp
inc
sbb
setb
or
int3
movsb
popf
add
jmp
and
mov
lock
xchg
sub
push
and
shlb
cmp
inc
and
pop
das
jmp
jp
or
call
mov
sub
or
cli
mov
repz
ret
xor
xor
mov
popa
sub
pop
cli
xchg
or
xor
cwtl
add
and
mov
cltd
cwtl
cmp
into
cmp
xor
clc
push
or
pop
sarl
pop
stos
add
and
cs
addb
pop
cmp
sarb
xlat
or
push
orb
in
cld
add
pop
clc
dec
shll
mov
cli
adc
iret
call
and
jmp
dec
adc
add
push
xor
jl
add
inc
dec
xchg
dec
lock
add
or
and
cltd
xchg
in
aam
fstpt
add
cmp
addb
sbb
mov
add
ds
adc
lock
mov
pusha
sbb
cvttps2pi
ljmp
cmp
shll
add
cltd
jmp
les
inc
adc
popa
test
jge
and
subb
mulb
dec
jne
jmp
pop
and
loop
cmp
fs
add
lcall
or
and
cltd
jo
pop
sbb
pushl
cwtl
incb
pop
add
aaa
ret
jmp
mov
mov
inc
imul
add
pop
add
je
or
add
push
sub
inc
xor
mov
xor
test
push
in
movsb
scas
xchg
aaa
nop
nop
mov
mov
add
ficoml
jne
adc
fistpll
in
cmp
loopne
mov
ljmp
jno
js
imul
add
inc
sbb
cs
mov
add
addr16
pop
addb
push
or
jnp
sub
lods
mov
fdivs
dec
sub
inc
cmp
stos
add
fisttps
xor
inc
mul
shld
loopne
testb
das
insb
push
mov
add
scas
or
popf
adc
popa
xchg
inc
fcoms
add
sub
mov
nop
ret
or
cmp
std
aad
jne
cmp
jb
faddl
je
loop
and
add
mov
inc
ret
sub
or
es
or
adc
call
mov
popa
cmp
add
xchg
std
test
fisttpll
dec
daa
jmp
adc
ja
cmp
sti
xor
pusha
push
cmp
jae
sbbb
ljmp
ret
jg
push
ss
movd
xor
xchg
loop
add
or
in
cmp
pop
mov
add
inc
pusha
ret
xchg
nop
push
add
mov
or
sub
sbb
fdivrl
add
push
adc
jge
push
mov
pop
add
xor
pop
lea
inc
lock
push
inc
cmpsb
add
xchg
push
xchg
add
mov
es
fwait
scas
dec
pop
sti
add
mov
sub
loope
mov
mov
test
fyl2xp1
xor
dec
jno
add
and
jns
mov
dec
cltd
dec
jmp
test
ror
call
sub
outsl
lret
cmpl
fldl
adc
sub
sbb
lahf
aam
repz
clc
test
cld
icebp
int3
jmp
add
jge
stos
daa
push
inc
add
jb
push
mov
scas
mov
mov
jl
or
std
in
xor
mov
or
out
add
sbb
xor
ret
mov
cmpsb
daa
cwtl
imul
ja
add
aam
fdivs
jne
or
jmp
pop
cmp
add
sti
or
cs
dec
stos
sbb
push
stos
testl
add
jbe
xchg
xchg
pop
out
add
xor
xor
xor
pop
int3
aam
and
imul
sbb
push
pop
mov
add
inc
sbb
add
cmpsl
mov
imul
addr16
inc
sbb
add
shlb
inc
inc
imul
fcomps
add
les
and
push
dec
pop
addps
inc
mov
push
add
sub
cltd
imul
jae
decl
ja
add
and
nop
lcall
stos
or
dec
loopne
push
cli
lods
test
pop
jo
sbb
lods
inc
lcall
sbb
jge
mov
add
add
and
jbe
test
push
lock
mov
mov
xor
sub
inc
inc
add
cli
mov
and
rolb
jge
sub
cmp
jle
push
cs
pop
add
insl
call
fmull
cmp
cmp
push
ds
andl
popl
add
xchg
sbb
sbb
sub
jno
or
or
lock
loop
nop
pop
jg
das
push
in
add
lods
popa
jmp
decl
ja
or
lock
fadds
ljmp
push
xchg
insb
or
call
popf
xor
leave
loopne
sbb
cs
adc
push
add
push
enter
hlt
mov
sub
ret
dec
cld
daa
adc
cmpsl
add
pop
add
mov
or
sub
lock
push
add
xor
clc
adc
jle
int
sahf
xchg
dec
jo
add
aaa
jl
inc
push
push
dec
adc
dec
add
lea
add
ret
movsb
ret
out
jmp
dec
xor
mov
mov
push
pop
nop
mov
push
call
or
or
repnz
mov
jns
test
add
je
xor
pop
mov
xor
addl
ret
jl
inc
sbb
mov
adcb
pop
push
push
mov
in
out
clc
pop
ds
or
adc
fimull
fisubrl
add
pop
sbb
js
push
sbb
pusha
notb
xchg
push
mov
sub
outsl
add
ret
mov
add
cmp
push
or
add
jg
adc
adc
hlt
out
jmp
push
cmpsb
xchg
lahf
mov
fwait
out
jnp
je
add
dec
sti
jo
dec
hlt
ret
jge
xchg
je,pt
xor
jns
or
cmp
and
xorl
data16
push
add
fcoml
test
adc
punpcklbw
leave
dec
cmp
fsub
inc
or
add
jne
shl
add
cmp
mov
add
inc
ljmp
xlat
sub
add
test
pop
push
add
mov
cmp
xchg
add
add
cli
and
movsb
jg
push
push
nop
pop
xor
movb
sbb
shl
scas
dec
push
jo
mov
inc
addr16
jmp
test
mov
sub
push
addb
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
xor
fists
imul
adc
clc
push
mov
outsb
pop
cwtl
insb
xor
cs
cmc
add
inc
inc
je
outsl
outsb
add
popa
mov
add
adc
test
loopne
add
movsb
jge
jecxz
sub
rol
out
fs
add
or
dec
add
add
jno
add
pop
adc
xchg
ds
dec
or
or
pop
lea
les
cmp
xchg
outsl
test
dec
add
shlb
add
nop
dec
jmp
mov
cmp
jp
dec
dec
repz
data16
stos
jae
push
inc
inc
push
add
add
sbb
andb
movsb
or
xchg
pop
addr16
sbbb
add
test
pop
and
jne
cs
adc
mov
add
inc
cmp
scas
add
jne
xchg
jb
xor
jle
jns
inc
mov
testl
xchg
loopne
push
or
je
in
jb
rcrb
arpl
dec
hlt
jae
fcomps
pop
dec
cmpsb
js
and
sub
and
mov
ljmp
mov
dec
adc
and
push
add
icebp
mov
ret
and
out
cmp
add
testb
cmpsb
push
imul
imul
push
pop
and
dec
and
pop
repz
roll
cld
cmp
xchg
cltd
dec
add
jmp
mov
cmovnp
and
push
cld
jne
xchg
add
dec
mov
cmp
fmull
ret
add
ficoml
cld
lods
add
je
loop
add
add
jge,pt
icebp
inc
arpl
add
pop
xor
in
lock
sbb
fists
mov
stos
shrb
daa
iret
sbb
dec
or
inc
mov
sbb
jge
push
add
pop
bts
setle
add
cmpb
aam
add
pop
and
sbb
popa
adc
or
lea
rclb
mov
nop
add
sti
mov
divl
sarb
mov
leave
loope
notb
push
rolb
dec
xor
movsb
add
jno
aas
mov
sub
and
jne
cmp
cmp
movb
inc
mov
add
or
jle
add
jmp
les
cmpb
ret
inc
xor
cs
daa
sbb
mov
mov
paddsb
shrb
mov
jnp
add
mov
rorb
push
add
jae
push
sub
push
add
lods
fisubl
cmp
jmp
add
add
mov
dec
fstl
ss
inc
leave
adc
jae
pop
enter
cmp
cmp
mov
mov
scas
mov
test
mov
mov
outsb
jo
add
cmpb
pop
inc
mov
sub
dec
jecxz
sub
adc
jmp
push
cmp
mov
dec
pop
or
jle
add
sub
xorl
mov
fsts
outsl
imul
xor
adc
add
test
in
pop
ret
rorb
bound
add
jle
fistpl
iret
add
or
push
lret
data16
sbb
add
mov
and
icebp
and
cmp
sbb
add
push
adc
pop
es
sbb
psraw
sub
mov
add
pop
xor
add
mov
sub
icebp
in
and
pop
push
add
sub
test
push
orl
cli
add
push
inc
or
and
adc
sbbb
mov
lock
lods
inc
rolb
roll
sarb
rol
add
jmp
stc
inc
cmp
inc
rcll
or
inc
sbb
pushf
push
mov
sub
mov
push
dec
jbe
push
pop
dec
adc
jb
add
add
sbb
inc
repz
xorl
add
ficoml
ljmp
cmp
cs
add
dec
mov
int
dec
adc
cmp
lret
adc
jl
mov
inc
jl
add
stos
subb
add
int3
xor
and
into
mov
add
pop
aam
test
pop
int
les
popa
push
iret
ret
add
je
and
adc
cmp
cs
lods
cmovs
mov
decl
rol
add
lods
in
and
jae
test
pop
add
jbe
mov
and
push
sbb
push
pusha
mov
push
icebp
mov
push
mov
mov
cld
mov
dec
mov
inc
int3
add
jne
cs
add
mov
and
roll
sbb
add
pop
rolb
sbb
xor
ja
sub
jmp
add
cmp
add
rcrb
add
dec
adc
int
ja
pop
mov
mov
pusha
sbbb
and
jmp
mov
cmpsl
add
dec
sbb
pop
aad
jp
int3
andb
ret
sbb
push
xor
jo
imul
or
add
jle
inc
push
shrl
ljmp
nop
sbb
mov
jmp
fistl
push
clc
inc
cmp
cmp
pop
mov
pop
xor
daa
ret
loop
mov
ja
sbb
leave
inc
andb
sub
mov
dec
shrb
ljmp
sbb
pop
movsb
jno
and
add
nop
sub
loopne
pop
repnz
not
dec
sbb
pop
jbe
nop
xchg
mov
xchg
add
dec
xlat
aaa
push
jecxz
out
ja
nop
je
inc
cmp
mov
jo
pop
out
add
xchg
fldt
fmulp
add
call
add
cmp
sub
rclb
and
call
xor
mov
sbb
and
jbe
jge
jge
add
hlt
sub
flds
out
scas
adc
addb
aas
sbb
and
inc
add
or
or
cmpsb
ret
leave
add
hlt
adc
add
andl
sub
imul
idiv
mov
cld
mov
and
aam
cltd
test
xchg
xchg
cwtl
xor
and
mov
add
mov
jecxz
xor
add
leave
sbb
lds
mov
rolb
jbe
imul
fimuls
add
mov
inc
bound
lods
inc
addb
xlat
fadds
lods
add
xor
xchg
mov
add
or
sbb
test
int3
into
sbb
add
test
add
pop
mov
ror
movsl
push
sbb
nop
add
outsl
cmp
and
jo
lret
hlt
into
jo
add
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
es
xchg
jp
pusha
cmc
pop
out
jg
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
dec
daa
popl
fiadds
adc
push
push
rcrb
jmp
add
fs
aam
imul
pop
add
dec
jp
iret
mov
cmp
fadds
ds
push
jl
pop
scas
mov
pop
or
cmpl
leave
dec
dec
in
xchg
jo
add
xor
in
hlt
cmp
mov
mov
push
movsl
mov
popa
es
mov
sbb
clc
add
daa
mov
and
push
fwait
xchg
and
leave
push
add
and
aad
bound
or
xor
aas
push
cmpsl
add
enter
in
hlt
or
ficoms
add
or
jno
cmp
or
xchg
add
lock
mov
stc
dec
call
jne
or
fisttpl
or
fisubl
add
sbb
cli
movl
outsb
pop
shlb
add
loopne
shr
in
xlat
add
cmp
jb
ja
mov
repz
add
sbb
inc
loop
out
add
ret
adc
add
push
repz
shr
test
sti
or
cmp
or
jne
or
xor
add
add
ljmp
add
and
scas
stos
scas
hlt
xchg
das
add
sub
add
pop
nop
pop
shrd
lds
dec
mov
lock
add
xchg
cmc
bnd
add
fcomp
inc
xor
addl
mov
and
stc
and
jl
icebp
mov
imul
stos
shl
lds
loop
cmp
jo
push
sar
add
mov
cmp
int
lods
dec
jmp
js
icebp
rorl
call
add
test
xchg
rcrl
jne
add
aaa
test
loop
add
les
cld
ja
in
pop
add
push
movsl
xchg
call
inc
in
add
inc
shlb
add
push
shlb
add
or
mov
push
std
jmp
add
add
inc
cmp
inc
testb
data16
incl
mov
or
xchg
or
stos
cmp
imul
lods
inc
sub
or
adc
sbb
aam
outsl
sub
add
cmpsb
and
or
jno
minps
dec
verr
xchg
sbb
leave
and
sub
addr16
ljmp
and
call
adc
enter
jb
or
or
xchg
add
xor
inc
add
int3
xlat
add
jge
xor
ja
adc
sbb
inc
add
cmovnp
mov
or
idivb
add
adc
mov
add
cmp
sbb
add
call
add
sbb
push
jne
aas
xor
sub
dec
ja
push
adc
xchg
adc
pop
mov
add
sbb
mov
lods
sub
daa
dec
sbb
mov
add
sub
xor
rol
adcb
cmpsl
pop
mov
add
loopne
mov
pop
mov
cmp
aam
movsb
xor
push
stos
or
push
fsub
mov
mov
mov
orl
movsb
or
adc
dec
cmp
jnp
add
mov
jle
jne
cmp
push
add
popf
mov
dec
ja
ds
in
add
inc
mov
push
or
call
cmp
mov
adc
popf
add
cmp
xor
mov
mov
rorl
jmp
dec
loopne
inc
in
cmp
xor
cmp
xor
and
setno
sub
and
xor
aaa
pop
inc
js
lods
or
add
and
push
add
jb
cmp
sbb
call
addl
jb
cmp
andl
int3
enter
ja
mov
add
dec
and
in
jb
or
xchg
sbb
and
enter
pop
jb
or
sbb
and
push
in
add
cmp
add
mov
and
ret
jb
cmp
scas
hlt
add
and
insb
enter
fs
cmp
shlb
and
dec
or
dec
out
rcrl
dec
lods
xchg
xchg
movzwl
rolb
shl
adc
ret
call
sarb
mov
and
sbb
add
orb
cmp
xorb
scas
mov
jnp
xor
push
subl
imul
add
mov
mov
shlb
jae
in
xor
aam
or
icebp
xchg
repnz
enter
cmc
or
negb
out
add
stc
xchg
cli
enter
pop
jb
cmp
sbb
loope
sub
and
xchg
in
in
out
jb
cmp
adc
adc
jmp
gs
inc
in
or
in
sbb
inc
out
xchg
adc
shll
add
jb
cmp
sbb
subb
and
xchg
fcmovne
add
in
jb
cmp
sbb
shlb
and
xchg
add
enter
jb
cmp
sbb
leave
mov
xchg
lret
add
in
jb
and
iret
inc
inc
mov
mov
xor
mov
in
pop
test
and
in
jb
cmp
mov
dec
call
sbbb
aas
adc
inc
test
out
mov
cltd
loopne
or
cmova
mov
pop
rolb
xor
add
rorb
js
shlb
ja
add
popf
repz
fiaddl
adc
pushf
add
dec
gs
jo
pop
nop
stc
pcmpgtb
test
loopne
pusha
jmp
add
gs
outsl
add
cmp
clc
movsb
pop
divb
and
jp
and
or
dec
outsb
add
jno
lret
pop
cmp
inc
jp
and
or
pusha
subb
insb
add
nop
cmp
pop
mov
mov
fs
insb
jno
pop
pusha
enter
or
push
adc
add
or
xor
or
or
imul
mov
xchg
sarb
scas
outsb
gs
sbb
fimuls
loopne
dec
jbe
add
xor
sbb
inc
addr16
addb
or
pop
dec
lds
xor
enter
int3
popw
dec
mov
jbe
sbb
fs
add
sarb
clc
adc
mov
sarb
and
pop
rorb
xchg
push
insb
inc
popa
xchg
mov
outsb
pop
push
fs
lea
mov
punpcklbw
int
test
int
xor
push
repnz
xchg
add
stc
jp
mov
outsl
mov
fcoms
shll
adc
inc
inc
arpl
push
mov
pop
insb
popa
and
push
add
pop
sub
push
loopne
jns
add
in
nop
pushf
pop
push
jb
add
or
imul
int3
push
repnz
dec
je
cmp
loope
pop
hlt
add
inc
ds
xchg
or
lods
pop
in
popf
add
gs
push
std
inc
dec
popa
rcrb
lea
jo
add
insb
popf
pusha
inc
push
or
test
jb
jae
mov
pop
sub
lods
xchg
cmp
sbb
aas
nop
shr
adc
add
add
xor
push
and
in
mov
inc
ret
pop
ljmp
pop
or
adc
xorb
mov
stc
mov
jge
add
pop
dec
dec
and
into
imul
and
insl
jnp
add
pop
or
out
add
mov
fnstcw
xchg
fmuls
jge
push
daa
pop
pop
hlt
add
dec
sub
shl
clc
ds
or
mov
cmp
add
inc
jp
shrb
mov
inc
xor
sub
jmp
int
xchg
jbe
jmp
stc
addr16
push
mov
shll
add
in
leave
add
cmpsb
je
or
xchg
fimull
adcb
fsubl
mov
mov
sti
je
fmuls
xor
add
push
lods
nop
dec
call
push
adc
adc
adc
adc
fisubs
or
pop
inc
dec
jp
add
adcl
mov
adcb
lahf
and
addb
ja
jae
hlt
add
jge
cmp
adcb
xchg
sub
xor
add
lret
push
inc
cmc
sahf
push
addr16
shlb
ret
push
test
or
aas
pusha
ret
mov
shl
stos
adc
or
lods
and
and
and
lret
adcl
adc
dec
cld
mov
loop
mov
xchg
xor
sub
leave
sub
or
add
in
mov
mov
je
cmp
add
ds
dec
aas
sbb
hlt
dec
fidivrs
xor
push
add
add
hlt
and
mov
add
push
lock
mov
add
mov
jno
je
pop
push
inc
bound
cmpsb
dec
ds
mov
fidivl
aaa
xor
aad
mov
add
test
push
js
add
ror
dec
adc
cltd
pminsw
dec
iret
mov
stc
inc
xchg
sub
test
xchg
daa
loope
fmuls
fadd
mov
push
sub
xchg
call
sub
sbb
enter
xchg
negb
or
jne
in
aas
push
ljmp
xor
add
lahf
rcrb
fsubrs
stos
dec
nop
lret
pop
add
pop
sbb
push
nop
sub
pop
pusha
addb
xchg
rolb
jmp
cmpsb
jbe
repz
cmp
jg
mov
pop
lcall
fcompl
xor
and
push
cmc
push
aas
add
sbb
adc
add
push
divb
pusha
add
sarl
xchg
es
mov
mov
ljmp
addr16
sbb
ret
mov
xor
cmp
call
and
movsl
rol
lahf
add
cmp
or
and
add
addl
insl
dec
loope
adc
clc
hlt
push
cmp
push
add
sbb
dec
pop
sbb
lods
pop
sub
jo
sbb
add
push
adc
ret
call
das
subb
xchg
add
lock
incb
adc
enter
rorb
jmp
mov
add
shl
push
cmpsb
aas
std
roll
jecxz
mov
mov
add
out
in
in
out
cmp
dec
sbb
cld
sarl
pop
add
and
sar
add
clc
inc
cmp
adc
pop
pop
push
mov
lret
dec
mov
push
jne
add
push
add
imul
jb
bound
dec
lock
ret
adc
and
or
call
decl
shlb
add
adc
inc
push
cli
test
pop
or
pop
sbb
fsubp
cwtl
push
xor
jl
test
or
add
sub
test
lods
add
push
inc
pop
test
adc
mov
andb
jne
cs
dec
dec
inc
sub
adc
shlb
dec
je
loopne
add
cs
in
scas
add
or
icebp
jbe
push
lea
jg
nop
sbb
daa
add
and
lahf
adc
mov
add
roll
lea
por
inc
stos
shll
sar
sbb
pop
and
in
add
pop
out
jl
nop
sarb
push
call
mov
test
add
iret
jge
and
pop
add
mov
roll
dec
test
add
add
lret
decl
popa
add
stc
inc
or
and
push
add
mov
add
add
ss
inc
lea
repz
out
mov
pop
scas
push
inc
jae
add
shlb
inc
and
dec
lock
cmp
into
mov
lods
or
and
bound
aas
sub
add
dec
das
sbb
hlt
out
cmp
ret
push
orl
sbb
add
xor
or
lcall
and
jmp
adc
dec
mov
addl
loopnew
xor
jne
push
cmp
sbb
add
hlt
dec
jae
push
fisttpl
cmpb
jl
add
adc
roll
movsb
pop
xchg
mov
pop
rcr
xchg
push
faddl
lahf
add
mov
push
mov
add
jmp
pop
clc
leave
add
test
xor
sarb
getsec
imul
pusha
cmp
jae
mov
rorb
push
addb
xchg
in
jmp
mov
push
add
call
mov
jl
mov
es
je
xchg
dec
fsubrl
add
mov
cmp
push
pop
test
jne
lea
fisubs
movzbl
shr
and
sahf
pushl
add
loop
inc
stc
mov
lds
pushf
or
cltd
xchg
jns
shlb
xor
jl
add
inc
and
push
notb
movsl
xchg
push
rorb
dec
fsubrl
adc
iret
add
test
cltd
adc
leave
cwtl
push
int3
cmp
inc
cmp
push
aad
orb
jne
sarb
testl
je
leave
sbb
pop
mov
and
mov
add
stos
enter
jne
addps
out
loopne
cmc
sub
dec
add
pop
xchg
sub
pusha
pusha
mov
jb
pop
xchg
dec
push
push
mov
mov
fldl
or
shlb
lea
xorb
roll
or
add
pop
cli
jmp
mov
pop
inc
test
xchg
pop
shlb
pop
negl
dec
aas
setg
cmpsb
xchg
mov
into
add
bound
aam
add
push
js
imul
push
add
xchg
add
inc
xor
xchg
add
mov
ret
inc
mov
xor
and
cmp
dec
mov
lock
ja
add
or
push
jl
or
mov
add
pop
jle
add
push
pusha
or
xor
dec
add
stc
mov
push
add
inc
adc
inc
loopne
dec
dec
mov
mov
add
pop
pop
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
or
add
sub
mov
es
push
cli
add
or
call
pop
roll
flds
cld
and
xor
js
or
xchg
stc
dec
mov
add
arpl
popa
lahf
in
fs
or
or
shlb
loopne
add
pop
gs
xor
add
rorb
xchg
xchg
add
cmc
pop
sbb
and
fisttpll
add
push
add
inc
cmc
cmp
leave
sar
add
out
rcrl
lret
or
add
jecxz
movsb
jne
add
sub
test
out
or
cwtl
jnp
add
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
popf
aam
dec
xchg
cmpb
push
cmp
mov
outsb
add
arpl
dec
in
dec
mov
or
sbb
mov
sbbb
add
mov
outsl
enter
push
ret
xor
mov
in
cmpsl
fdivrs
add
mov
stc
popf
sub
je
add
fldt
fs
adc
int
ljmp
dec
dec
and
mov
sub
or
cmpsb
sbb
xor
sub
push
or
clc
mov
add
mov
xchg
clc
add
jl
inc
pop
pushl
jae
dec
or
add
inc
add
cmovno
fstpl
ret
adc
imul
sub
add
ret
add
add
or
rorb
and
fildl
fdivs
inc
or
sbb
mov
pop
mov
movsb
add
dec
fstl
add
push
pop
and
jp
add
popf
jno
cmp
iret
add
int
sti
imul
or
add
and
jo
jp
add
rolb
clc
pop
fwait
cmp
and
mov
adc
push
or
adc
xor
add
mov
mov
mov
adcb
xchg
inc
and
cmp
cltd
or
iret
daa
cld
add
aaa
push
and
add
imull
pop
xchg
or
test
add
loopne
mov
add
mov
mov
add
fisubrs
mov
psllw
je
xor
leave
out
sub
clc
add
dec
in
xor
std
dec
add
xchg
or
imul
jg
add
out
cmp
lds
and
popf
orb
xchg
mov
xchg
push
shlb
cwtl
aam
add
popa
jb
or
add
xor
insb
cld
xbegin
sbb
ja
adc
jle
jae
shlb
pop
dec
aas
add
in
push
mov
cltd
mov
icebp
insl
lds
add
mov
sbb
sub
lock
fwait
mov
add
jl
or
orl
add
adc
je
data16
add
test
test
and
js
imul
and
ja
adc
add
test
and
dec
std
adc
and
xlat
add
jg
insb
mov
aad
or
pop
in
mov
insl
and
fs
inc
jno
add
jl
sbb
jmp
jno
imul
in
mov
xor
lods
es
imul
jne
mov
or
imul
pop
inc
je
push
sub
lcall
dec
sub
add
add
or
sub
push
sbb
fimull
and
add
sahf
aas
xor
add
in
in
mov
push
sbb
jb
cwtl
and
push
inc
add
fistpll
add
push
add
icebp
andb
hlt
cltd
mov
push
aas
test
xor
push
dec
or
insb
pop
pop
mov
mov
pop
iret
ss
cld
mov
add
ret
fisttpll
loopne
test
push
movsb
jecxz
dec
add
or
sub
lret
cwtl
mov
xchg
in
rolb
imul
sbb
jecxz
mov
and
insl
mov
sbb
and
mov
and
mov
cltd
cld
jbe
jg
sar
or
fcmovbe
add
test
inc
adc
inc
adc
jmp
repnz
mov
add
cwtl
sbb
xchg
push
rcrb
pop
pop
sub
out
lods
nop
adc
xlat
add
add
xor
popa
in
in
insb
push
add
out
pop
pop
xchg
sub
mov
pop
add
mov
data16
pop
movsb
dec
fwait
mov
es
add
jmp
push
jnp
mov
mov
je
push
mov
mov
add
lods
js
push
adc
addl
ds
pop
repz
popa
sbb
add
push
dec
repnz
sbb
add
jecxz
dec
xor
dec
aas
out
call
rcr
push
add
sub
je
imul
add
mov
cld
sub
cwtl
and
push
in
gs
shrb
lock
xor
mov
mov
stos
adc
cwtl
in
push
mov
jge
sub
push
xchg
sbb
dec
dec
clc
loope
cmpsb
jno
orb
add
das
fsts
mov
pop
sub
dec
jne
mov
leave
sbb
fsub
add
ret
in
inc
push
add
cs
gs
jno
enter
add
jmp
inc
cmp
add
dec
xor
jecxz
adc
repz
stos
in
push
pop
aas
cmp
fbld
xor
ret
loop
push
adc
or
jno
mov
test
mov
cmpb
testb
daa
out
pusha
and
push
jmp
cmp
dec
in
xchg
repnz
mov
shlb
rorb
add
dec
adcb
add
jg
in
mov
push
jmp
inc
shrb
aam
adc
scas
cmovae
add
cmpb
jb
pop
push
inc
inc
or
dec
hlt
add
mov
add
sub
push
clc
into
jns
loop
add
sbb
mov
fadds
repnz
add
aad
add
test
jecxz
sti
push
lea
hlt
mov
cltd
out
adc
adc
mov
sub
xor
jecxz
pop
loop
cmpb
mov
add
bt
das
jae
cld
sub
lahf
clc
sub
add
dec
add
add
cwtl
add
sbb
or
adc
add
clc
sti
rorb
push
add
pop
xor
add
ja
addb
hlt
cmpsb
push
jmp
sub
or
loope
or
aaa
dec
shrl
add
rolb
ljmp
or
ljmp
inc
xor
dec
ret
mov
test
and
inc
pop
std
cs
xchg
lsl
and
outsl
sbbl
mov
xor
and
dec
mov
mov
ret
or
xor
mov
dec
es
lea
lea
cmp
iret
sub
outsl
sub
addr16
xchg
mov
jae
add
add
add
xor
xchg
push
mov
test
pop
les
inc
inc
lret
movsl
pop
add
fmuls
je
and
push
addr16
movsl
add
ja
imul
popa
das
push
call
fiaddl
scas
and
mov
mov
sub
add
and
leave
push
or
mov
loope
jne
jmp
cmpb
scas
mov
jp
sub
jl
or
dec
jg
je
jnp
add
jmp
push
pop
add
pop
cwtl
sbb
push
enter
push
inc
add
sahf
jne
mov
mov
ljmp
ror
adc
loopne
adc
add
jne
fs
add
inc
xor
mov
add
hlt
test
shlb
cmp
ljmp
push
jg
lahf
pusha
ljmp
je
xor
call
pop
jle
jp
add
push
adc
add
ds
sub
popf
loope
int3
lea
add
fmuls
loop
xchg
in
push
cwtl
rcrl
or
pop
xchg
or
test
lret
add
inc
mov
push
stos
add
dec
mov
jne
sub
or
or
push
add
sub
daa
add
add
popa
sub
xchg
add
cmp
call
repnz
shll
cltd
and
pop
fstl
rolb
add
loop
xor
cli
fisubs
pop
inc
loopne
lret
aas
mov
fwait
mov
ljmp
fcomps
mov
add
fimull
or
call
out
xor
mov
dec
xchg
cld
rolb
mov
sbb
jo
adcb
lock
add
cmpsb
dec
or
dec
int3
mulps
pop
sub
cmp
out
add
clc
lds
mov
add
pop
and
adc
lods
insb
or
stc
aaa
aas
push
add
mov
fcoms
mov
daa
lds
add
jo
inc
dec
das
push
jnp
cmp
add
sbb
insl
adc
hlt
or
add
sub
cwtl
sbb
test
xchg
fcmovu
leave
inc
ret
add
and
or
mov
dec
lds
jns
add
pop
jmp
inc
add
dec
adc
jns
aas
pushf
sbb
inc
inc
shlb
or
scas
adc
hlt
aad
pop
lds
jmp
pop
jg
inc
inc
push
add
add
popf
mov
add
js
test
fs
mov
pop
push
add
xor
jmp
mov
add
enter
setg
ljmp
mov
test
andb
or
or
jp
adc
cmp
jle
fnstsw
jle
add
scas
pop
int3
or
add
add
pushaw
xchg
cmp
jecxz
shlb
jnp
pop
mov
cmp
out
cmp
aam
mov
sub
push
mov
pop
dec
push
xor
clc
call
inc
sub
and
cmp
pop
clc
add
inc
lods
mov
xchg
fmull
call
adc
jno
pop
je
ja
sub
repz
cmp
ret
mov
mov
std
add
xor
gs
sub
fildll
je
sbb
enter
sbb
jo
push
or
loop
push
or
imul
lock
add
pop
sbb
jle
filds
ret
das
out
dec
pop
mov
add
insb
xor
ja
push
aad
xor
and
adc
call
inc
mov
es
aam
sbb
hlt
sub
mov
pop
xchg
pusha
adc
add
pop
mov
xchg
enter
sbb
or
ret
or
sbb
jle
fmuls
fnstcw
mov
push
adc
xor
jg
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
frstor
int3
movsb
add
daa
add
hlt
inc
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
sti
loopne
jle
pop
adcl
inc
out
adc
in
or
orb
inc
inc
cwtl
mov
jnp
pusha
aam
repnz
jo
addr16
jne
cld
add
inc
dec
jl
lods
jae
cmp
sub
adc
sub
lea
add
cmp
ficoms
insl
xchg
dec
jns
movsb
sbbw
push
sbb
mov
mov
add
adc
jp
pop
jno
xor
add
xchg
or
sbb
mov
pop
ljmp
jo
test
lcall
add
sbb
jb
inc
and
bound
es
out
add
mov
and
add
ss
sbb
inc
les
notb
mov
pop
call
sbb
lock
aam
sub
movsl
push
jbe
lldt
jl
dec
clc
jmp
ds
cmc
push
mov
out
push
add
adc
and
push
mov
fcompl
ds
in
adc
stos
sbb
sbb
jbe
cmpl
aaa
jle
and
jno
add
xor
insb
xchg
nop
notb
sub
mov
push
jnp
add
sub
pushf
je
fildll
test
add
fwait
cmpsl
xchg
test
or
cmc
mov
sbb
add
mov
push
pop
and
fmul
cmp
push
add
cli
pop
pop
call
sub
sbb
pop
ret
je
pop
daa
push
fmuls
mov
or
add
outsb
push
add
cli
push
out
icebp
ds
jno
maskmovq
nop
mov
movsb
mov
adc
mov
gs
pop
and
add
add
shrb
and
sbbb
call
and
test
push
pop
imul
xchg
inc
add
mov
jmp
add
sub
test
add
aad
ret
pushf
or
and
jne
jmp
roll
ret
add
inc
sbb
sbb
fildll
adc
or
lea
sbb
push
gs
push
add
mov
xor
inc
mov
add
sbb
pop
cmpsl
js
cmp
dec
pop
shlb
or
and
adc
push
iret
cmp
pusha
mov
in
sub
mov
mov
pop
sbb
fcoml
lret
int3
lea
add
add
leave
or
add
outsl
js
lods
inc
test
popa
lea
push
add
push
fmuls
push
dec
sbb
sbb
cwtl
adc
lods
icebp
and
xor
sahf
jl
sub
xchg
jbe
adc
das
jo
inc
mov
jmp
add
lods
or
sbb
add
loopne
jb
inc
or
test
dec
xchg
adcb
sub
idivl
and
cmp
aaa
or
adc
es
jo
add
and
je
add
shlb
add
inc
in
in
add
fldenv
clc
push
or
adc
js
add
mov
ret
pop
lcall
es
add
dec
rorb
add
in
shll
outsl
xorl
xchg
add
dec
bound
mov
mov
push
xchg
call
mov
popf
addl
add
aad
pop
and
inc
orb
jl
cs
std
jmp
or
adc
nop
mov
add
js
enter
in
and
inc
cmp
jg
scas
jno
dec
test
test
add
dec
jmp
insb
mov
pushf
push
sub
ficoms
push
mov
in
lahf
add
jmp
xchg
jle
je
xchg
and
pop
pop
inc
mov
add
mov
insl
jp
les
testb
pop
test
sub
add
sub
shlb
call
xchg
scas
mov
pop
or
mov
add
sti
loope
xchg
or
sbb
lock
add
insb
popa
push
xchg
aam
mov
sub
popw
add
xlat
cmpsb
push
outsl
fucom
popl
pop
std
into
inc
dec
stc
arpl
or
movsb
das
cmp
addb
mov
ss
push
add
add
push
mov
loopne
add
enter
fiadds
jl
xchg
pushf
jo
loope
add
scas
mov
nop
mov
and
imul
setl
and
addb
xor
add
subb
adc
insb
repz
stc
std
xor
add
inc
push
ud0
cmpsl
fadd
and
push
mov
inc
add
sub
adc
sub
add
jle
shr
stos
mov
mov
scas
lods
push
cmpl
mov
and
sahf
cmp
dec
dec
test
add
jmp
test
ja
xchg
cmp
lock
dec
js
jge
push
hlt
es
and
adc
jbe
pop
aas
add
sbb
sbb
test
pop
add
jne
and
and
inc
add
lock
sub
jle
adc
cld
mov
jmp
xor
xchg
mov
mov
add
lods
sub
adc
add
jge
andb
push
add
cmp
cmc
jne
push
cmp
rolb
movsl
and
mov
push
cmpl
pop
pop
popf
out
std
mov
call
and
push
dec
ds
ret
and
mov
movaps
popf
xor
mov
mov
call
inc
rolb
and
repz
and
inc
inc
mov
adc
add
adc
jae
push
sub
mov
data16
into
movsl
clc
xchg
adc
add
cs
push
mov
das
out
inc
cld
mov
add
jg
and
orl
insb
hlt
dec
je
or
sbb
or
addr16
lret
int3
add
mov
inc
mov
lahf
push
add
mov
pop
rolb
mov
or
dec
ficomps
xchg
aas
push
xchg
loopne
jbe
cmpsb
add
or
repz
add
call
add
stos
mov
addl
inc
icebp
xor
ficoms
ss
push
add
sub
jmp
dec
and
add
hlt
or
inc
add
shl
push
decb
add
jmp
fcomi
lds
sub
sub
dec
cltd
jb
enter
cmp
add
cld
add
scas
ret
mov
fwait
push
inc
test
jle
dec
pop
cltd
jl
subb
adc
sti
sbb
sahf
aad
imul
adc
mov
fldenv
add
outsb
cmp
sbb
lea
push
add
push
mov
arpl
dec
ret
testl
test
sti
pop
push
jg
or
clc
jne
icebp
inc
push
adc
add
fs
jmp
sbb
jne
mov
inc
std
loopne
test
jmp
mov
add
inc
mov
add
imul
dec
adc
rorb
push
addl
push
jb
or
and
mov
add
xorb
or
lcall
jge
add
cltd
pop
nop
add
mov
xchg
enter
cld
xchg
cmp
sahf
push
jl
adc
jg
add
jmp
pop
push
add
jo
in
addb
add
push
lock
jge
hlt
add
xchg
and
xchg
lods
add
pusha
jae
dec
in
pop
ljmp
into
inc
mov
pop
add
dec
inc
cmpsl
add
mov
les
mov
loope
mov
call
add
andl
add
sub
or
insb
xchg
lcall
enter
pop
popa
shrb
rolb
xchg
add
out
addb
xor
sbb
xchg
jmp
jae
in
xor
repz
repnz
adc
xor
push
jmp
loopne
or
add
and
add
enter
jg
pop
inc
or
orl
or
adc
jns
mov
fcoms
nop
incb
xchg
movsl
sbb
or
mov
and
adc
mov
add
cmpl
popa
jg
and
xor
sbb
add
and
lock
add
jne
pop
sub
in
and
out
test
cld
add
dec
lea
cs
mov
notb
add
mov
xchg
and
mov
les
xchg
push
ror
enter
in
mov
shlb
adc
sbb
mov
orb
cwtl
imul
jg
jnp
cmp
mov
jle
cmp
add
sbb
into
mov
mov
inc
mov
mov
outsl
call
pushl
fstps
xlat
arpl
mov
mov
cmp
rclb
add
or
lret
or
movsl
pop
sbb
add
pop
ret
stos
out
cmp
xor
addl
lods
scas
je
lock
pop
loopne
mov
xor
or
repnz
add
adc
xchg
push
add
xor
mov
testl
adc
scas
aaa
add
fistl
and
jne
mov
test
xchg
je
arpl
aas
lret
mov
and
test
cld
das
in
jl
add
xchg
add
adc
pop
or
add
shrl
and
test
clc
sahf
mov
jns
add
xor
mov
inc
dec
nop
cmp
frstor
mov
mov
add
cmp
add
add
ss
pop
lods
sbb
aam
test
or
cld
test
pusha
inc
sbb
sub
mov
mov
add
and
popa
in
xchg
pop
mov
mov
scas
pop
and
mov
daa
add
lret
add
cmpsl
or
add
outsb
ficompl
lods
xor
test
xchg
data16
pusha
mov
adc
push
fs
cld
outsb
jmp
dec
mov
add
jl
mov
xor
or
andl
nop
es
add
or
cmp
add
in
adc
stos
sbb
inc
fsubs
out
ret
pop
pop
jns
imul
add
testb
dec
sarl
xchg
imul
nop
sub
leave
push
adc
sub
xchg
cmp
xchg
mov
or
add
sub
sbb
xchg
push
push
adc
in
pop
negb
add
or
repz
les
inc
sub
sbb
incl
sbb
add
inc
shll
add
jnp
add
jle
mov
pop
push
add
adc
fwait
and
outsl
add
imul
sbb
mov
mov
rcrb
add
xor
fildl
mulb
lret
add
aas
shlb
sub
push
int3
inc
cs
shlb
roll
add
add
xchg
jg
add
jp
pop
test
jmp
decl
add
add
testb
add
cmp
test
inc
jge
cltd
or
pop
loopne
mov
add
lahf
mov
jge
adc
cli
add
cs
sub
inc
in
out
mov
hlt
cmpsb
jnp
addb
jl
in
add
js
jge
lea
add
lds
out
add
arpl
test
and
in
cmp
cmp
or
add
xlat
ret
pushf
adc
clc
sub
push
sbb
add
inc
in
ret
jne
xchg
add
dec
cmp
incb
imulb
movsl
fstl
shr
mov
sub
pop
adc
adc
call
xor
add
push
clc
jle
push
add
js
sub
adc
inc
in
jp
pcmpeqw
sti
inc
aam
daa
lods
scas
add
push
insb
movsl
mov
inc
push
or
pop
call
push
inc
stc
add
mov
mov
retw
pandn
sarb
repnz
add
adc
add
cmp
cmc
xchg
dec
push
pop
jae
dec
loop
cmp
stos
add
setg
lret
lds
mov
loopne
lret
dec
addb
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
dec
int3
lret
cld
out
add
repnz
shrb
aam
sarb
pop
int3
test
mov
icebp
orb
push
push
cmc
and
jecxz
and
test
mov
push
xchg
sub
push
roll
adc
int
add
and
in
add
jbe
add
sbbb
sub
add
xchg
add
jb
add
loop
loopne
sbb
dec
mov
mov
push
mov
repnz
pop
adc
push
xchg
push
outsb
xchg
sbb
mov
das
mov
cmc
rcr
mov
pop
cmp
sub
add
add
sbb
aam
test
jbe
sbb
mov
inc
cld
add
dec
insl
jo
mov
and
add
mov
hlt
ret
pop
shl
ja
cld
or
cwtl
push
hlt
cmpsb
daa
push
enter
inc
aam
jmp
mov
lret
sbb
les
mov
mov
pop
fsubl
push
adc
push
rol
hlt
mov
clc
inc
mov
push
cld
push
inc
pop
inc
mov
push
add
adc
adc
mov
stc
or
and
and
stos
mov
pushf
ds
add
fnstenv
sbb
mov
das
jb
popf
cmp
and
sub
out
mov
add
hlt
or
add
test
and
outsb
in
shlb
enter
ltr
nop
cmp
movsl
test
sbb
push
adc
add
cmc
and
cmpl
pop
ret
jmp
mov
test
call
inc
icebp
sbbb
and
sub
mov
cmp
pop
or
add
fsubl
add
inc
imul
add
popa
arpl
inc
xor
inc
mov
mov
add
cs
adc
add
cld
loope
enter
mov
shlb
pop
ds
dec
subb
cmpb
cwtl
sete
dec
popa
and
and
jp
iret
cli
jl
subl
adc
or
push
movsb
xor
cmp
xor
adcb
and
mov
sarb
or
cwtl
xor
mov
xchg
es
idivl
add
mov
add
in
sub
clc
sbb
fdivr
lock
in
or
call
dec
int3
sbb
outsl
adc
test
popf
call
and
xchg
shr
mov
loope
insb
in
aad
cltd
push
mov
and
rorl
adc
and
loopne
cmp
push
xor
adc
insl
pop
pushf
sub
xchg
push
loopne,pt
mov
mov
pushf
pusha
lahf
adc
dec
setg
scas
fs
or
cmpsl
repz
sti
adc
adc
mov
fistps
xor
mov
aas
xor
nop
jg
insb
adc
test
sbb
dec
jl
jle
xorl
mov
jg
add
out
sub
cmp
push
push
dec
dec
inc
inc
inc
xchg
xlat
es
mov
dec
fildl
stc
mov
pop
pop
mov
cmp
gs
jge
mov
jle
cmp
dec
or
sub
std
addb
jge
add
ljmp
inc
movsb
lock
cld
popf
add
lds
mov
fsubrp
inc
lahf
sbb
scas
jmp
mov
and
jne
mov
adc
sti
add
add
ja
xor
mov
add
pop
aaa
scas
pop
ljmp
outsb
add
rcrb
mov
add
jne
mov
rorb
arpl
insl
cwtl
dec
sub
cmp
inc
add
cmp
jl
push
sbb
leave
pop
sbb
punpckhwd
xchg
mov
and
in
jmp
sbb
stos
xor
xchg
je
clc
sbb
mov
loopne
and
stos
push
pop
lret
or
pushf
or
xor
push
aas
add
sub
mov
loopne
and
lret
adc
sbb
or
repnz
xchg
mov
mov
add
mov
stos
or
inc
xchg
jmp
nop
add
jge
cmpsl
cmp
mul
mov
stos
xchg
push
add
xor
in
add
aad
or
jmp
ds
push
adc
pop
adcb
add
push
loop
add
add
sub
fistl
roll
mov
div
mov
add
mov
dec
je
dec
add
mov
xor
sbb
ret
jecxz
aas
jns
pop
add
daa
sub
idivl
ret
mov
xor
and
and
add
cmp
fnstenv
add
int3
fisttpll
daa
mov
mov
cmp
je
push
push
in
and
nop
sub
sub
or
lcall
syscall
pop
pop
inc
loop
scas
push
ret
rolb
das
test
add
sbb
cld
inc
sbbl
and
jg
cmpsl
insl
or
and
mov
lahf
lock
sub
inc
add
and
clc
xor
mov
cli
cs
push
cmp
cli
insb
add
xor
mov
xlat
jne
xor
xchg
mov
add
mov
push
mov
addb
inc
add
xchg
jmp
pop
scas
jle
or
pusha
jmp
push
dec
lock
mov
call
pushf
adc
pop
pop
cwtl
nop
rolb
cmp
mov
scas
icebp
add
xor
aaa
dec
fimuls
pop
or
stc
add
adc
jne
and
push
add
sbb
adc
out
jecxz
outsl
xor
scas
jp
add
xor
add
int3
sub
mov
ljmp
sti
dec
sub
or
jecxz
sbb
and
mov
xchg
adc
push
pop
out
loop
mov
loopne
add
or
inc
or
rolb
lods
cmp
movsl
shlb
add
mov
add
mov
add
push
hlt
push
mov
mov
and
pushf
add
daa
xor
jb
je
add
ss
clc
inc
clc
mov
jmp
inc
inc
int
outsl
mul
add
addb
jbe
xor
add
push
mov
and
sub
mov
add
or
sti
jmp
add
testb
sub
test
ljmp
testb
or
in
ret
nop
mov
xchg
adc
movsb
push
rcrb
stos
cmpsb
and
aas
bound
sub
faddl
sbb
ljmp
add
or
cld
cmp
mov
clc
sub
adc
jbe
repz
out
and
dec
sbb
inc
push
icebp
dec
xor
into
subl
mov
test
pmuludq
shll
cld
mov
jne
fsubl
inc
inc
add
int
add
mov
xchg
add
and
xor
pop
jmp
out
push
ret
fiadds
fsubs
std
arpl
out
mov
dec
add
jmp
or
xor
les
in
adc
push
inc
or
inc
and
or
mul
cld
xor
bsr
xlat
loopne
insb
jmp
push
add
pop
inc
addl
push
jle
pop
mov
sub
repnz
jne
push
mov
dec
rolw
jecxz
mov
cmp
mov
xor
insl
pop
movsb
xor
leave
or
inc
shlb
add
or
testw
adc
add
add
dec
inc
adc
add
push
fldt
adc
pop
aas
or
imul
clc
in
test
fsubs
loope
pop
dec
xchg
jo
add
sub
fsubs
fldl
cmp
add
int
inc
pop
out
clc
filds
ds
jnp
mov
add
fucom
mov
and
mov
xor
jmp
mov
clc
lsl
add
cmpb
sbb
or
add
aas
cld
jg
sbb
orb
push
and
pop
in
jmp
add
cmpsb
xor
mov
sbb
and
inc
mov
or
ljmp
add
dec
ret
add
mov
cmp
add
or
mov
add
adc
jne
xchg
ljmp
add
xor
jl
add
sub
addl
or
push
add
sbb
lock
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
aas
lock
notl
or
sbb
ret
les
jne
add
lret
jmp
test
add
stos
and
push
and
inc
sbb
lea
xchg
push
adc
cmp
aad
cmpb
sub
mov
jmp
dec
stc
leave
lock
push
aad
dec
dec
push
inc
lock
icebp
push
rcr
loop
sub
out
add
xor
cmpsb
sarl
incl
cwtl
lds
or
add
jmp
sbb
cmp
sub
adc
je
aas
sub
add
sbb
xchg
call
sub
rolb
or
and
add
ret
popa
rclb
stc
inc
add
fchs
xchg
addl
aas
jmp
and
add
mov
std
loopne
ds
adc
loopne
ret
lods
out
add
lret
dec
cld
cmp
orb
jae
fimull
nop
repz
push
push
adc
ljmp
daa
pop
mov
dec
xchg
sub
jns
cmp
lahf
xor
sar
add
sbb
adc
cmp
adc
mov
push
jne
lret
popa
mov
es
les
push
add
and
add
push
test
inc
sbb
shrl
add
inc
pushf
mov
cmp
mov
add
rcll
sub
push
mov
jl
xchg
xor
sub
or
push
and
mov
clc
sub
add
int3
or
lret
jns
stos
das
push
loope
mov
jae
xchg
dec
movsb
xchg
pop
add
and
ljmp
add
adc
xor
sbb
clc
fldl
add
jo
scas
xchg
adc
fwait
je
add
xchg
cmp
jmp
ficoml
jo
js
and
rolb
bswap
ret
adc
and
jl
fadds
mov
pop
push
or
sub
pop
ljmp
dec
cmp
xor
fninit
push
not
mov
cmp
sarl
add
loopne
add
add
call
out
cmp
sub
test
pop
inc
cmp
cmp
or
cmp
or
jl
add
xor
mov
addb
iret
fdivr
imul
pop
add
test
jbe
arpl
add
lret
enter
stc
push
add
dec
andl
sti
mov
cmp
ja
mov
adc
push
adc
cli
jae
pop
shll
add
call
adc
inc
mov
sub
jb
pop
jecxz
adc
int3
loopne
jne
mov
sbb
dec
leave
inc
and
movsl
std
cmp
sbb
arpl
loop
int
les
fnsave
add
stos
push
ret
orb
sub
into
dec
pop
out
mov
daa
lea
dec
add
jmp
leave
addb
xor
xchg
add
daa
or
ret
lahf
sub
je
xchg
add
shlb
add
and
add
test
dec
clc
repz
ljmp
push
and
mov
mov
or
adc
xor
and
ja
add
dec
loopne
incb
test
rorl
nop
add
add
mov
aas
sbb
daa
movzwl
mov
push
xchg
mov
jl
pop
push
add
pop
cmp
mov
bnd
xchg
jb
insb
add
mov
ret
inc
inc
push
std
dec
mov
into
mov
mov
es
push
je
nop
ds
or
out
addl
push
jne
js
add
add
test
gs
pop
cmp
cmp
les
dec
sbb
add
jne
add
mov
fildl
sub
dec
pushf
in
rcrl
add
push
jne
jno
jp
mov
lods
adc
sbb
loope
setne
and
hlt
loop
add
jecxz
rorb
shrd
sbb
xor
lds
jne
aam
and
sbb
cmpb
xor
xor
lock
xor
cmp
mov
imul
xor
bound
mov
dec
xchg
cmp
daa
mov
lds
int3
addr16
pusha
or
jle
leave
in
mov
stc
lahf
add
imul
ljmp
jmp
push
divl
add
or
add
jmp
and
inc
pusha
es
pop
in
movsb
aas
cli
or
xchg
xchg
test
je
clc
out
jl
jl
add
mov
mov
pop
inc
inc
inc
inc
inc
add
dec
dec
push
dec
dec
dec
dec
add
push
push
push
add
push
mov
pop
popa
dec
bound
data16
push
insb
sbb
outsb
outsl
add
jb
je
cmp
add
jp
xor
xor
in
ss
cmp
sbb
das
cmp
sub
cmp
add
cmp
and
daa
orb
adc
mov
sub
add
cmpsl
shrb
add
bound
pusha
sub
cmp
cld
lahf
ds
ss
hlt
cmpsb
in
sub
xor
and
cld
push
add
push
mov
insl
inc
dec
lods
inc
pop
clc
cs
adc
add
cmp
or
sarb
push
mov
fcmovbe
sahf
fistps
int3
or
lret
push
push
push
scas
bound
add
mov
or
cmpl
sub
add
xchg
es
xorl
sub
enter
jl
inc
pop
ja
imul
and
sub
mov
roll
pop
bound
inc
dec
ret
out
push
data16
mov
jne
add
inc
lock
jne
fs
and
daa
push
pop
out
pop
adcl
stos
movb
lahf
jg
push
mov
jle
sbb
sub
call
fcmovu
jge
rclb
movsb
dec
push
pop
inc
movmskps
add
jg
add
lahf
lcall
add
add
add
jbe
pop
sub
jl
push
push
aas
out
fs
add
testb
add
inc
icebp
rolb
loop
xchg
aas
adc
jl
inc
jne
loope
bswap
orb
adc
add
cwtl
sbb
adc
popf
rcrb
decl
mov
add
jne
roll
adc
out
or
ret
add
jmp
mov
sti
cmp
cmp
repz
cmc
pop
flds
sub
nop
mov
add
add
mov
daa
fprem
and
repz
movsb
mov
insb
dec
pop
inc
pusha
sub
stc
jp
mov
add
aam
in
cs
mov
idivl
bound
add
adc
mov
adc
shrl
xchg
inc
sar
out
in
imul
mov
int3
adc
add
ja
shrl
je
add
pop
push
xor
jb
or
push
jbe
cs
inc
cs
fucomp
shlb
push
adc
adc
pop
rcrl
icebp
sbb
sub
clc
sbb
mov
push
cmpb
lret
add
pop
pop
xor
out
lahf
inc
shl
mov
adc
push
add
pop
mov
cmp
xor
mov
xchg
or
lret
add
cmp
mov
sti
jb
xchg
cmpsl
stos
or
push
add
pop
adc
lret
sub
fs
jle
add
cmc
enter
sbb
cmp
add
dec
pop
inc
mov
bswap
test
xor
iret
arpl
dec
mov
dec
or
mov
pop
mov
out
jl
dec
addb
lret
sbb
add
je
stos
in
add
pop
out
xor
movsb
cmp
movsl
xorb
mov
mov
cwtl
lcall
mov
ret
push
mov
mov
pop
mov
dec
fs
neg
add
jne
xor
loopne
cmp
add
pop
jle
in
cmp
mov
push
or
in
add
es
icebp
add
jae
xchg
sub
add
pop
das
push
into
sbb
fildl
out
push
mov
jne
dec
inc
and
fbstp
add
mov
add
pop
mov
inc
inc
lds
push
dec
push
add
bswap
in
add
adc
pushf
add
mov
icebp
push
sub
add
adc
rolb
or
jl
push
add
add
dec
adc
fimull
fsts
add
in
pop
cmc
add
bound
mov
jbe
add
cs
je
mov
mov
inc
xchg
mov
jo
xor
xchg
add
mov
es
sbb
mov
dec
pop
cmp
rolb
sarl
fsubs
push
add
movb
jg
xlat
fs
scas
add
jl
in
add
push
jns
cld
jne
add
push
leave
add
jecxz
push
sub
xchg
jl
pop
dec
jl
add
push
pop
add
cmp
pop
adc
cmp
or
fmull
inc
cld
xor
or
lret
sbb
add
add
add
mov
rolw
jmp
push
fdivs
loopne
and
mov
add
xor
enter
add
push
pop
not
ret
add
add
shlb
cwtl
mov
pop
cmovle
stc
enter
repz
fisubrl
sub
lods
add
cld
shll
pushf
rolb
adc
mov
push
fcomip
movsb
clc
pop
shr
add
xchg
faddl
mov
sub
mov
bound
cmp
test
sbb
push
add
and
and
call
mov
fsub
pop
filds
jge
mov
jmp
adc
fwait
sbb
adc
or
enter
and
push
jae
cld
in
lock
notb
pusha
cmp
dec
jo
add
jmp
inc
inc
cmp
jb
pop
icebp
daa
roll
sbb
mov
clc
add
enter
cltd
dec
in
add
fmuls
lods
cmp
incl
pop
jl
movl
sub
lahf
add
adc
add
inc
adc
jecxz
or
add
jne
movsl
stos
nop
add
das
gs
jmp
aad
out
les
add
int3
mov
das
into
mov
jge
mov
lds
xor
inc
pop
mov
pop
rorb
mov
pop
push
dec
mov
add
mov
int3
and
or
into
sub
sub
leave
iret
loopne
outsl
mov
xchg
sbb
fcomps
adc
xchg
lock
mov
mov
pop
mov
xor
and
pop
out
mov
inc
pushf
add
lret
xchg
rolb
and
adc
mov
inc
mov
cmp
in
in
lret
and
test
cmp
push
sub
xor
daa
out
add
dec
mov
shlb
mov
dec
jecxz
test
lock
cmpsl
adc
or
mov
add
pop
mov
jae
add
inc
loopne
movsl
insl
add
aad
scas
and
add
out
and
aam
mov
outsl
stos
les
mov
test
sbb
ljmp
xchg
int3
leave
lea
lret
mov
push
sbb
fsubl
popf
xchg
cmc
inc
out
or
jne
sub
mov
into
mov
inc
rcl
out
loop,pt
imul
data16
add
or
cld
or
mov
jno
add
jg
je
int3
push
and
sub
pusha
xlat
add
push
enter
sbb
add
jmp
nop
xor
mov
sub
push
pop
add
movsl
scas
mov
mov
dec
loope
imul
hlt
xchg
add
das
mov
int3
ja
add
incb
dec
cltd
bnd
fimuls
dec
cwtl
loopne
mov
mov
push
mov
std
jmp
jo
or
jo
pop
add
fsubl
xchg
js
and
or
and
and
mov
push
and
inc
sub
int
das
enter
add
inc
fisubl
add
push
cmp
xchg
dec
dec
dec
mov
repnz
inc
xor
ds
roll
cwtl
sbb
call
test
inc
jge
mov
add
popa
loopne
and
or
push
sub
loop
loopne
push
and
pop
das
pop
adc
and
inc
mov
loopne
pop
push
dec
or
lods
add
fwait
and
push
add
pushl
push
loopne
add
mov
lret
iret
sbb
pusha
testb
sub
xor
sahf
cltd
clc
fsub
cli
sbb
push
xchg
mov
dec
or
pop
add
sbb
fidivs
or
negb
add
or
and
add
fs
add
daa
cmpsl
pop
ds
sbb
add
xor
into
das
shr
adc
push
inc
xchg
xor
or
in
ret
mov
add
aad
pop
jl
loope
leave
pop
imul
adc
fsts
ret
inc
ret
enter
push
daa
incb
loop
push
cmp
or
shrb
in
roll
enter
mov
daa
dec
out
sar
jno
enter
jns
add
imul
insl
jae
outsb
into
call
cmp
xor
nop
add
sti
scas
inc
nop
xor
ss
in
add
pop
push
adc
xor
mov
pop
loopne
out
adc
cld
mov
mov
pusha
sbb
imul
test
and
add
push
dec
xchg
mov
adc
and
add
stc
xchg
inc
mov
add
mov
jne
test
lret
and
add
les
js
dec
jne
adc
shl
imul
and
cmp
add
push
sbb
jmp
in
add
idivb
addb
les
popf
xor
fldl
je
sub
mov
out
rclb
sbb
pop
dec
xchg
mov
jbe
push
cmpsl
clc
cld
mov
push
cmp
pop
add
add
jbe
clc
dec
call
or
pushf
adc
or
shrl
sub
and
sbb
loopne
lds
xchg
and
je
jl
add
dec
jle
adc
hlt
and
dec
and
cwtl
std
push
dec
push
mov
xchg
sarb
lds
pop
sub
add
adc
icebp
add
mov
mov
dec
jecxz
inc
pop
jge
dec
pop
mov
jne
js
lea
outsl
push
mov
test
or
adc
mov
movsl
mov
push
gs
int3
add
mov
xor
movsl
mov
call
test
lock
sbb
xchg
push
mov
rorb
mov
sbb
insl
mov
add
xchg
jmp
inc
dec
or
inc
loopne
xor
rolb
inc
rol
ja
add
add
xchg
test
mov
push
xchg
setp
jp
or
mov
mov
push
jge
mov
in
filds
aam
push
pushf
and
adc
jmp
add
adc
pop
aam
jl
mov
add
jns
cld
in
inc
insb
add
mov
push
add
fwait
negl
push
pusha
faddp
mov
or
loope
xchg
fcoms
add
add
int3
add
testb
jp
test
push
out
sbb
idivl
mov
fdivrp
loop
dec
add
jecxz
je
and
add
aad
in
subb
mov
les
cmp
movsb
push
push
mov
test
pop
cld
jl
add
adc
inc
repnz
push
mov
sub
stos
add
sub
popa
lods
arpl
dec
call
loopne
std
jbe
test
scas
xchg
stos
mov
or
pop
sub
xchg
push
in
adc
fistl
dec
add
rclb
push
imul
out
popf
lahf
add
clc
mov
add
mov
inc
add
and
sbb
mov
cwtl
es
popf
mov
out
push
push
push
pop
sbbb
adc
subb
add
roll
pop
xchg
notl
add
js
xlat
mov
fs
pop
imul
push
hlt
xor
ror
pop
dec
jns
bound
mov
push
fimuls
mov
pop
fdivs
sbb
add
add
cmpl
add
mov
adc
add
nop
in
mov
fwait
popa
sub
dec
mov
mov
xchg
cmp
pushf
popl
xchg
ret
les
cmp
add
js
or
fisubrs
sbb
iret
shlb
adc
mov
inc
sti
sar
pop
lods
adc
cli
xorb
xor
mov
sahf
inc
adc
or
gs
cld
in
add
adc
outsl
add
cmp
mov
xchg
add
jmp
mov
adc
lods
imul
pop
fidivrs
jle
inc
add
fcompl
decb
add
mov
jne
sub
mov
fsts
and
sbb
test
push
add
aaa
lret
int
inc
daa
hlt
test
jne
add
mov
lods
fcompl
roll
mov
insb
popa
add
cmp
mov
add
aam
loope
lock
add
jge
fmull
popf
sub
xchg
add
nop
fidivl
pop
rclb
mov
lahf
add
lods
insl
add
sbb
lret
jo
pop
add
mov
mov
dec
inc
sub
fiaddl
fcmovnbe
loopne
push
insb
nop
je
movsl
daa
cld
rcrb
das
add
jmp
and
imul
leave
or
in
std
xchg
inc
dec
jne
sub
push
adc
shrb
int3
adc
sarb
xor
dec
add
rcll
rcrb
pop
nop
fistps
mov
hlt
jo
das
gs
scas
icebp
mov
dec
adc
mov
loopne
mov
xchg
scas
cld
repnz
add
mov
lea
mov
push
pop
stos
inc
nop
and
and
shll
jb
cltd
mov
sti
clc
mov
inc
in
into
add
stc
test
sbb
je
std
mov
in
jae
call
mov
jno
cmp
enter
and
pop
adc
mov
cs
add
pop
data16
xchg
sahf
inc
add
jne
sub
mov
in
xor
cmpsb
aam
add
data16
pop
lcall
jecxz
enter
sbb
adc
andb
in
ret
jns
add
into
push
call
pop
sbb
test
mov
push
cmpl
or
dec
hlt
and
adc
push
pusha
dec
movsl
push
add
pop
mov
adc
add
clc
jbe
add
sbb
sub
fsubrl
repz
add
sbb
clc
xchg
mov
cmc
inc
in
daa
dec
adc
add
mov
push
scas
mov
lahf
clc
mov
push
cmpsb
mov
xchg
mov
movsl
mov
popf
mov
adc
adcb
les
das
sbb
jae
xchg
jns
and
mov
lock
mov
and
jbe
pop
sahf
sbb
mov
pushf
fists
push
arpl
add
or
rolb
mov
enter
dec
add
mov
std
add
int3
jbe
add
movb
add
cmp
shll
imul
rcrb
js
jle
shl
fcmovbe
mov
test
mov
add
pop
les
add
pop
es
mov
mov
add
and
pushf
mov
js
fmuls
js
pop
test
mov
movsb
int3
fsubrl
rcll
aad
add
push
adc
aam
les
add
dec
pop
and
cmp
add
or
dec
sarb
popf
push
add
sbb
call
and
and
mov
adc
dec
pop
push
sub
inc
fistl
xchg
adc
push
adc
outsb
mov
mov
inc
add
adc
adc
or
sbb
mov
daa
int3
scas
or
dec
mov
push
mov
dec
rolb
adc
nop
daa
fidivl
add
push
movb
lea
add
or
jg
jle
sarl
add
js
movsl
or
add
mov
cmp
xchg
mov
inc
adc
stc
or
out
andb
mov
push
sub
sub
mov
sub
add
pop
test
push
jmp
dec
inc
fdivr
ja
fldl
std
out
cli
pop
sbb
popa
pop
popa
cmp
or
or
shr
mov
pop
pop
jae
pusha
jmp
or
jge
sub
inc
adc
ljmp
add
mov
ljmp
arpl
leave
add
sahf
sub
cmp
adc
or
loopne
push
cli
sahf
dec
xor
repnz
orl
stos
enter
add
decb
add
jb
adc
jae
pop
adc
inc
nop
mov
inc
push
push
jo
ja
cmpsl
add
cmp
fmuls
fs
repnz
adc
out
add
push
and
mov
cmp
loop
sub
fidivl
and
hlt
push
paddusw
push
sbb
imul
out
mov
mov
xor
jmp
sbbb
add
repnz
cmp
jb
xor
movlps
sbb
rcrb
inc
push
decb
pop
inc
or
add
dec
sbb
add
sbb
stos
pop
pop
add
or
xor
cmp
out
add
sub
inc
addl
mov
add
adc
arpl
mov
rorl
fwait
movswl
xor
lret
adc
dec
add
or
jb
dec
or
dec
push
flds
popf
inc
and
add
xchg
push
mov
add
mov
sbb
sub
aas
and
dec
sarb
and
mov
mov
test
pop
push
sbb
lret
adc
ret
cmp
imul
test
into
adc
dec
adc
es
xor
movsb
sbbb
movb
xor
int3
cmp
and
je
add
or
dec
xor
arpl
xor
add
call
cmp
pop
jg
ret
notb
add
dec
mov
cwtl
fs
and
int
jle
pusha
sar
inc
jns
xor
push
dec
cli
add
and
aas
xchg
add
xchg
jbe
adc
jge
test
sbbb
add
std
and
dec
xor
mov
add
ret
stos
cmp
loopne
xchg
sbb
add
cs
xchg
lods
inc
add
and
iret
inc
hlt
jno
dec
cmpsl
clc
sbb
mov
mov
fadds
out
pop
and
xchg
add
test
mov
push
inc
in
pop
or
out
adc
xchg
mov
mov
mov
xor
stos
sbb
push
daa
add
fsubr
add
pushf
jmp
add
pop
ljmp
adc
jmp
les
pop
lods
in
add
in
out
add
jne
adc
outsb
push
cwtl
adc
dec
outsb
imul
mov
shlb
aad
shr
out
sub
or
movups
sbb
loopne
adc
add
or
xchg
nop
xchg
adc
jp
jl
popa
and
je
mov
push
jne
inc
or
inc
jmp
sbb
pop
pop
pop
push
and
add
rorb
fiaddl
jmp
pusha
sbb
dec
ljmp
loopne
jmp
movl
mov
ret
lock
in
sbb
addl
paddq
add
adc
scas
add
jge
in
add
mov
int
fwait
aaa
cs
lock
call
popf
into
loopne
punpcklbw
jle
rcrb
dec
add
mov
sbb
fdivrs
add
call
jg
daa
mov
inc
hlt
rcrb
pop
add
dec
push
mov
xor
or
add
sbb
jg
idivl
call
repnz
andb
out
add
add
enter
add
mov
les
dec
sub
aad
or
mov
arpl
ja
mov
imul
int3
add
stos
adc
push
mov
push
or
cmp
decb
xor
cmp
les
adc
adcb
add
fwait
bnd
and
add
push
push
jmp
arpl
add
dec
loope
xor
cs
xchg
aas
mov
cmpsb
jmp
or
xor
inc
and
push
adc
add
pop
repz
adc
in
jle
cwtl
cmp
inc
cmp
mov
push
xchg
inc
push
inc
mov
lcall
pop
push
clc
mov
lret
pop
cmc
into
out
add
aas
jp
fsubl
mov
lret
pusha
or
out
pop
pop
inc
outsl
icebp
sbb
loop
push
add
hlt
fstpt
jne
inc
sub
fs
repnz
repnz
xchg
les
and
mov
lret
loopne
mov
pop
js
sbb
xor
ficoml
pop
cld
call
gs
int
aad
test
mov
outsb
movsb
adc
add
dec
or
add
scas
dec
push
add
cmpsb
hlt
movsl
pop
dec
push
dec
loop
add
dec
push
test
cmp
aam
add
hlt
cli
and
js
or
stc
mov
ds
pop
xor
add
jno
add
adc
lock
jbe
fcoms
and
mov
pop
add
cmp
mov
ja
sbb
test
mov
mov
mulb
clc
fbld
mov
repz
add
sbb
or
and
add
fs
call
mov
add
rolb
insb
add
rorl
int3
sbb
push
sub
roll
cmp
inc
in
sbb
add
xor
repnz
dec
cmp
add
add
add
mov
fsubr
andb
fisubrl
mov
add
xchg
xor
repz
sbb
inc
or
mov
mov
add
pop
adc
pop
pop
add
xor
mov
jo
insb
flds
in
add
jb
xorl
outsb
fs
jbe
or
bswap
lock
loopnew
sub
push
add
pop
add
adc
mov
xor
or
or
cmp
mov
add
pop
cmc
sbb
jl
add
ja
fcmovb
cmp
popl
in
ror
add
shlb
leave
pop
popf
sbb
add
lcall
add
test
mov
pop
inc
xlat
add
mov
push
cwtl
add
fcompl
inc
add
push
or
loopne
push
adc
push
incb
and
mov
testl
loope
cmp
add
iret
jne
shl
movl
inc
lods
sti
and
mov
sbb
add
ffreep
pop
clc
cmp
pop
int3
call
lea
sbb
and
jmp
or
xchg
mov
out
adc
out
adc
jp
add
xchg
into
cmp
arpl
jmp
mov
fisubl
adc
out
xchg
aam
adc
pop
or
test
and
loop
pop
sbb
inc
sub
nop
je
arpl
add
mov
jl
ret
xor
sbb
test
mov
and
add
mov
lock
ftst
cmp
push
jecxz
add
call
std
in
add
mov
addl
sbbb
jno
push
shrb
out
xchg
push
jecxz
fisttpl
sub
addb
icebp
test
ret
ss
push
or
jmp
sub
ds
bound
mov
xor
mov
js
add
cmc
jp
add
and
movups
in
mov
je
jecxz
aad
arpl
test
inc
xor
pop
sbb
and
inc
sahf
xacquire
sbb
test
sub
add
or
rcrl
xor
clc
cmc
or
hlt
repz
cmp
add
mov
and
sbb
repnz
insb
fiaddl
jp
movsl
nop
stos
enter
add
add
add
jbe
in
adc
in
add
mov
fwait
add
add
lock
or
hlt
pop
xor
loopne
sarl
add
mov
dec
idiv
lock
sub
and
adc
xor
jp
add
nop
sub
jg
loope
adcl
mov
stos
mov
scas
sbb
inc
shll
and
sti
push
test
sbb
cmp
add
fcomps
sub
or
dec
cmc
enter
ja
lds
fs
sbb
xchg
add
jmp
clc
xor
and
call
add
jl
rcr
and
add
dec
dec
push
and
or
push
inc
inc
push
ja
xor
negb
pop
lods
scas
test
add
mov
adc
mov
movsl
xchg
fadd
cld
dec
add
and
inc
addr16
dec
mov
stos
int
out
add
fdivrl
jbe
xor
add
loope
rol
add
sti
mov
push
pusha
cwtl
jl
add
incb
out
int
mov
push
add
sub
pop
ja
fnstcw
add
loopne
push
aas
movb
inc
mov
add
outsl
sbb
rorb
imul
push
adc
push
test
loopne
lods
inc
mov
fldl
and
daa
mov
add
decl
mov
das
ja
add
jle
sbbl
add
aas
add
cli
xlat
and
std
push
cmp
jge
or
push
inc
sbb
sub
test
add
lea
cld
cmp
add
out
xadd
call
jl
bound
cwtl
sbb
ljmp
or
dec
add
mov
fldl
les
xchg
movsb
push
or
cwtl
fisubl
inc
add
xor
add
sti
repz
int3
pusha
push
mov
adc
xor
sub
and
lods
idivl
add
arpl
and
imul
adc
aas
imulb
mov
add
xor
xlat
ror
les
addl
repz
loopne
scas
adc
orb
nop
mov
sub
movb
dec
fcomi
pop
cmp
cmp
add
inc
xor
aad
sbb
add
xchg
arpl
cmp
adc
cwtl
push
inc
imul
add
inc
xlat
pop
mov
push
js
mov
jmp
or
xchg
in
add
sbb
cli
out
jge
jge
pop
and
imul
or
pop
xchg
jno
cwtl
std
loopne
fdivrl
addr16
repnz
adc
cmpsb
add
pusha
test
mov
dec
fs
or
mov
bound
imul
add
add
inc
mov
rolb
fstp
or
mov
push
mov
addb
xlat
data16
in
cmpsb
add
cwtl
stos
push
enter
xchg
xor
iret
dec
add
add
sti
adc
or
cmp
das
inc
mov
dec
cli
sahf
add
add
or
fsubrs
mov
leave
sbbl
cwtl
and
sti
shl
add
frstor
or
mov
sub
out
add
xor
sbb
xchg
add
aaa
ret
or
adc
cmp
aad
andb
repnz
add
adc
inc
jmp
push
sbb
les
add
and
add
loop
sti
cmp
cmp
out
cmovb
adc
jb
nop
push
add
add
xorl
mov
cmc
aam
stos
test
out
nop
add
cmp
pushl
in
popf
mov
add
jb
divb
rolb
or
or
sub
jo
popa
dec
popf
insl
inc
cmp
mov
adc
cmp
add
in
sbb
daa
pop
fists
and
or
cltd
mov
inc
ljmp
dec
test
fidivs
fimuls
sahf
add
add
mov
aas
and
or
add
mov
mov
jle
jg
hlt
roll
loop
cmp
cli
daa
sub
and
jns
out
add
add
inc
ficompl
add
sbb
loopne
mov
rcl
fld
push
out
pop
fidivrs
inc
iret
inc
in
add
push
cmp
pop
mov
int3
nop
or
add
push
lods
push
pop
out
and
sub
hlt
inc
leave
enter
out
add
inc
push
ljmp
pop
ljmp
inc
shl
or
pop
sub
fimuls
das
or
sbb
pushf
pop
add
add
rol
xorl
add
sub
cmp
dec
add
leave
or
lock
lcall
add
pop
and
sub
leave
mov
add
xchg
int3
aad
sbb
xor
add
out
decl
roll
pop
test
xor
add
dec
jle
outsl
add
adc
jge
add
out
sbb
nop
mov
rcll
mov
frstor
or
add
adc
shrb
idivl
mov
repnz
mov
mov
rcl
sub
repz
push
add
ret
roll
xlat
push
es
fstpl
popa
dec
mov
cli
cmc
call
add
es
mov
add
ret
jg
pop
push
push
fcoml
movzwl
rcl
call
adc
or
outsl
psubd
mov
mov
add
inc
sub
dec
test
lods
jge
add
testb
add
out
inc
add
mov
call
dec
xchg
stc
lock
cmp
test
or
ljmp
push
dec
mov
aas
cli
sub
add
and
jge
add
pop
sti
inc
sub
loopne
adc
push
mov
mov
mov
lock
cmpb
push
adc
mov
loopne
and
inc
pop
icebp
cmc
sub
mov
add
lahf
xlat
cmp
inc
mov
pusha
ljmp
add
inc
push
add
add
sub
push
loopne
les
or
fdivrs
sbb
loope
push
xor
clc
enter
xor
adc
loop
or
cwtl
add
pop
std
not
jns
clc
cmp
int
out
insb
outsl
dec
insl
mov
jecxz
clc
cmp
daa
xchg
ljmp
mov
adc
out
gs
jp
insb
add
dec
xor
add
sbb
iret
hlt
add
fs
cs
daa
push
test
push
add
add
jle
add
add
sbb
adcl
pop
mov
notb
cmp
lcall
add
aaa
and
adc
out
lret
testb
pop
cmp
add
or
iret
xchg
fildl
or
sbb
inc
push
in
or
pusha
clc
fwait
add
cmp
adc
adc
pop
ss
push
fwait
jb
add
ds
lods
cli
inc
add
push
and
or
adc
sub
loop
test
mov
add
jmp
mov
adc
jp
mov
push
or
inc
mov
and
dec
fstpl
xchg
sarb
jne
jge
add
addr16
enter
add
jle
cmp
call
xor
push
fidivl
loopne
adcb
and
add
dec
call
add
test
fs
les
jmp
jge
add
out
jl
pminub
imul
mov
test
aas
sub
sbb
inc
xor
xor
movsb
sbb
aas
dec
pop
adc
test
fs
fistpll
add
mov
arpl
xor
add
sbb
addl
mov
and
into
repnz
and
aam
gs
xor
sbb
push
fs
test
and
adc
or
adc
xlat
or
sub
lock
add
das
jno
jmp
jp
add
pop
scas
out
or
pop
pop
jae
mov
xor
out
test
push
xor
and
int3
add
adc
mov
push
push
in
jle
or
and
call
aaa
add
push
adcl
add
mov
and
adc
sahf
or
mov
pop
test
inc
or
pop
std
cmp
push
movsb
lcall
dec
fdivl
add
enter
mov
outsl
adc
lds
in
mov
push
xor
cmp
jle
pushf
or
adc
and
bound
les
xlat
ret
push
jns
cmp
adc
pop
sbbb
adc
ds
add
push
test
xor
lds
or
aas
xor
outsb
rorl
js
adc
lar
gs
cmp
xor
lods
jmp
pushf
push
add
pop
stos
or
xor
call
pop
aam
add
sub
cmpsb
add
and
sarb
popl
cmp
push
xor
mov
pop
cmp
incl
jo
dec
add
mov
enter
add
test
xchg
or
int
adc
sub
jge
add
std
adc
or
xchg
jg
mov
add
push
daa
arpl
cld
sub
or
stos
in
push
in
lods
fsubrs
mov
nopl
fcmovnb
sub
test
shl
shl
in
into
or
cmpsl
incl
add
je
cmp
xchg
sbb
les
and
cmp
out
sbb
push
xor
lcall
xor
adc
fcmovnu
add
sub
inc
dec
adc
or
into
mov
push
and
or
inc
aas
loopne
jmp
xor
imul
aaa
cs
inc
js
inc
mov
das
ds
mov
mov
aas
shl
enter
int3
fdivl
adc
push
xor
mov
or
pop
loop
adc
add
loope
add
push
std
les
inc
fdiv
or
cs
push
out
add
lret
frstor
jl
aas
cmc
popa
decb
push
sub
nop
pop
pop
lret
add
jbe
test
fdivs
jo
cmpsb
add
ja
jno
dec
pop
sbb
les
sub
aaa
mov
adc
mov
and
clc
lds
call
add
adc
dec
pop
loope
neg
mov
pop
or
repz
and
std
hlt
pop
fcomps
in
and
and
sub
loop
add
rcrl
adc
jo
mov
int3
orb
clc
xchg
add
sbb
nop
xchg
mov
push
and
dec
daa
add
dec
adc
inc
adc
or
cmp
js
js
add
fisttps
addr16
in
cmp
adc
pop
mov
add
and
loop
sbb
jnp
add
inc
ret
orb
sbb
dec
push
cmp
repnz
push
mov
cld
or
inc
inc
out
call
sbb
lock
xor
cld
sarl
out
mov
add
test
jecxz
add
or
aas
sub
adc
mov
sbb
addr16
adc
pavgb
testb
jo
clc
xchg
sbb
repz
mov
stos
hlt
or
add
rorl
adc
pusha
mov
movq
add
sbb
and
arpl
out
outsb
mov
or
test
stc
mov
pop
nop
inc
mov
dec
lahf
jp
sbb
add
in
adc
lahf
mov
add
inc
or
pop
loopne
jl
jnp
pop
mov
push
repz
pushf
cmpsb
and
iret
stos
test
add
les
jge
mull
inc
adc
in
add
outsl
popa
imul
push
mov
cmp
jmp
dec
cmpb
adc
add
aaa
sub
iret
or
jecxz
enter
jle
faddl
mov
out
rolb
xchg
cmp
call
and
out
adcb
jle
mov
dec
sbb
clc
xor
sbb
stos
add
movsl
adc
add
adc
clc
add
shrb
in
xchg
xor
sbb
or
lock
psubusw
and
push
cmpsl
outsb
pushf
push
cmpsb
cld
je
jle
out
mov
push
jmp
cltd
mov
sbb
sbb
mov
in
inc
jp
shrb
jle
add
cmp
sar
pop
add
or
std
xor
lcall
cli
inc
xor
xor
mov
or
push
in
cmp
into
add
pop
adc
mov
or
push
jle
and
push
loopne
mov
test
in
push
add
or
xchg
sub
adc
pop
pop
loop
aam
adc
in
pop
jbe
jle
ds
into
mov
add
jns
pop
shlb
push
and
sbbb
cmp
mov
lcall
scas
icebp
lods
xchg
sidtl
in
test
cmpsl
iret
adc
lock
loop
cli
pop
xor
xor
adc
sub
loop
add
pop
sbb
cmp
jg
add
add
inc
push
dec
adc
xlat
jno
add
sbb
icebp
pop
xor
lret
lock
push
dec
adc
pop
popf
or
ret
push
pop
repnz
aas
inc
dec
arpl
sbb
adc
jo
push
jne
clc
add
sbb
pushf
ret
jg
adcb
add
cmp
add
xchg
add
mov
xor
inc
inc
stc
mov
jmp
cld
das
xorb
add
dec
je
add
inc
hlt
xor
enter
shl
push
and
movb
cmpsl
sbb
sub
xchg
in
scas
pushf
test
add
adc
sbb
add
mov
lcall
dec
ficoml
sbb
pop
in
inc
xor
jbe
pop
test
shl
add
add
inc
xchg
add
xchg
mov
jle,pt
add
and
repnz
addb
arpl
push
or
out
sbb
add
mov
sub
stc
xor
call
lahf
inc
or
push
lods
xor
loopne
pop
mov
repz
cs
mov
test
sbb
push
fs
push
dec
lcall
xor
je
add
push
cmp
test
jecxz
jp
call
loope
and
pushf
adc
mov
push
incl
cld
pop
sbb
sbb
and
out
xor
inc
sub
xor
repnz
in
push
inc
add
inc
scas
and
inc
add
lea
or
enter
or
xchg
cli
push
stos
mov
clc
mov
mov
divb
stos
lock
lock
hlt
mov
stc
cmp
lock
jo
fsubl
in
repnz
add
and
test
sbbb
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
mov
mov
pop
push
or
test
mov
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
add
push
inc
lods
or
cmp
outsb
sbb
add
out
jmp
scas
in
inc
add
shrb
and
dec
pop
xchg
add
inc
or
and
and
sbb
adc
mov
andb
shrb
jb
pop
cmp
push
mov
xor
xchg
lcall
mov
ret
add
repz
add
es
in
jp
jo
xor
sbb
push
inc
hlt
jmp
clc
sbb
shll
add
ficoms
xor
xor
cmp
popl
push
jmp
mov
mov
scas
adc
sahf
inc
and
inc
sbb
and
rorb
sub
ljmp
xor
sarl
sbb
push
mov
aam
xorb
add
pop
dec
push
add
add
hlt
lret
cld
enter
sbb
add
mov
mov
add
roll
shll
dec
and
out
lods
mov
add
rcr
inc
daa
add
lock
outsb
nop
jecxz
jnp
std
add
add
dec
daa
jne
jbe
cmp
inc
xor
add
je
jcxz
push
and
mov
xor
movsl
call
xor
in
out
pop
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
sarb
add
roll
add
xchg
in
pop
orb
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
rcl
sar
sarb
lock
xor
pop
xor
add
shl
cwtl
mov
inc
xor
dec
testb
shlb
hlt
xadd
cld
cmp
insl
dec
shlb
movsl
push
lock
dec
cmp
cmp
sti
loopne
add
stc
addl
sub
inc
sub
imulb
cmp
mov
das
mov
in
push
sub
sarb
and
test
add
and
ret
pop
jecxz
and
loope
mov
lret
and
jmp
sti
pusha
mov
arpl
mov
inc
bound
movaps
jo
add
add
insb
shrl
add
shrb
and
scas
out
mov
out
imul
stos
add
test
push
loopne
lock
stos
add
inc
jg
jg
jg
jbe
sbb
loopne
add
mov
xor
mov
je
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
add
rcll
xchg
rclb
push
jae
jne
ja
sbb
cmp
adcl
pop
inc
popf
loopne
addb
sbbl
fwait
rcrb
cltd
mov
inc
cwtl
mov
dec
mov
rorl
cmovle
mov
rorb
inc
jo
add
roll
rolb
into
into
xchg
scas
inc
in
cmp
mov
in
add
rorb
push
mov
add
in
pushf
pop
pop
add
xor
popf
push
pusha
mov
test
inc
add
push
push
push
out
add
mov
ss
pop
popf
mov
pop
pop
pop
test
inc
mov
sbb
pusha
push
inc
shl
jae
sbb
call
aas
push
scas
add
mov
add
movl
adc
movsb
dec
rorb
sub
loopne
push
pop
xor
add
mov
fistpll
add
arpl
add
call
minps
xor
pop
mov
jle
insb
add
push
cld
cli
mov
and
cmp
lods
add
ret
rcll
ljmp
repz
sar
enter
dec
or
mov
clc
test
pop
pextrw
pushf
sub
mov
shlb
inc
lods
add
and
dec
mov
outsl
enter
cld
dec
bnd
pop
aad
int3
push
lods
cmp
push
jae
jmp
add
sub
push
test
repnz
add
mov
xchg
and
cli
add
push
int3
gs
or
decl
xchg
hlt
je
rolb
mov
cmc
add
lea
inc
pop
cwtl
mov
lock
push
lcall
xchg
cmp
inc
add
lret
jbe
test
cltd
mov
sub
push
cwtl
addr16
jge
add
xor
cmp
shrb
or
pop
cmp
mov
push
cmp
mov
pop
test
inc
add
cmp
repz
dec
and
and
addr16
stos
mov
ret
in
les
leave
cmp
icebp
pop
shlb
pop
jmp
add
or
repnz
xchg
dec
xchg
sbb
into
sbb
pop
adc
add
icebp
cmp
mov
cmp
iret
pop
fsubp
push
push
fldenv
adc
outsl
add
sub
mov
test
sbb
and
adc
shrd
mov
add
and
jno
popf
sub
add
add
mov
and
data16
cwtl
mov
sarb
or
push
adc
add
jb
stc
jbe
push
add
push
xchg
cli
fisubs
sbb
movsl
aas
stc
bound
adc
mov
pop
repz
push
test
add
nop
push
fcompl
stc
movsb
ret
in
and
lods
dec
or
addl
pusha
cmp
and
xor
push
cmp
and
and
movsl
adc
jo
add
or
mov
sbb
push
and
and
leave
or
nop
div
xor
add
imul
mov
outsb
sub
arpl
add
je
stos
leave
loope
lock
dec
pop
cld
jno
cmp
mov
adc
lret
mov
mov
mov
int3
sub
andb
sti
jo
mov
mov
sbb
nop
jecxz
mov
lock
xor
stos
pop
and
dec
pop
adc
add
add
inc
and
or
pop
icebp
add
push
mov
jle
add
pop
push
or
cmp
das
mov
inc
pop
mov
sbb
aas
aam
lea
xchg
pushf
cmp
js
or
or
add
adc
idivl
jmp
repz
stos
and
or
xor
test
add
xor
mov
ret
mov
int3
icebp
or
leave
loopne
push
popf
push
add
mov
loopne
add
pusha
xchg
roll
pop
cmp
push
adc
mov
leave
je
inc
mov
adc
roll
int
inc
dec
mov
xor
sarb
hlt
push
add
or
mov
inc
xor
dec
add
sbb
or
mov
jmp
repnz
outsb
cmpsb
push
push
inc
dec
sahf
stc
adc
scas
gs
jno
pop
inc
push
and
dec
lahf
and
or
or
fcmovbe
dec
ret
stos
add
hlt
dec
add
xor
add
inc
pop
xor
mov
pop
fnstcw
cld
sbb
or
push
push
ret
xchg
or
lret
adc
sub
adc
adcl
jmp
leave
pushf
loope
inc
push
add
and
cld
xor
mov
test
mov
icebp
jno
add
imul
pop
add
xlat
mov
add
filds
jae
sub
push
stc
lret
jg
jecxz
adc
xor
cwtl
add
sub
fbld
and
mov
mov
ficoms
dec
or
mov
jo
lock
inc
xchg
mov
push
pop
add
push
pop
pop
add
cwtl
loop
mov
sub
xor
add
shl
icebp
and
add
insl
cmc
and
xchg
push
push
lcall
data16
xor
sti
cli
add
in
repz
repnz
add
addb
push
adc
sbb
shrb
push
adc
xor
repz
nop
out
out
jecxz
mov
mov
nop
cmp
sti
out
imul
and
cmpb
cmp
lea
cmp
xor
mov
movzbl
mov
dec
add
stc
sbb
ja
mov
xor
cmp
pop
orb
cmc
push
roll
insb
int3
push
rol
mov
sti
sub
add
mov
mov
cmc
sahf
add
cmp
add
pop
cmp
test
incl
pop
shr
dec
loope
sarb
inc
mov
lea
jo
and
push
cmp
inc
push
add
dec
add
jne
xchg
lahf
push
mov
add
and
push
mov
jge
std
sbb
xor
cmp
test
popf
jl
les
xchg
dec
add
add
mov
sbb
sldt
xchg
std
lahf
add
aaa
push
sbb
jmp
mov
lods
sub
add
push
outsl
add
pushl
add
test
jge
out
adc
divl
lahf
jnp
lods
mov
cmpl
cmp
stos
popf
mov
add
mov
in
sbb
jl
enter
push
mov
inc
jno
or
test
or
testl
add
in
cmp
mov
mov
adc
incl
xchg
jb
push
or
or
out
push
add
cmp
or
xor
add
sarl
mov
xor
push
push
lea
push
dec
or
or
mov
inc
cmpsb
mov
add
mov
out
adc
mov
loope
ja
add
sub
in
insb
out
dec
clc
hlt
test
xor
add
cmp
inc
adc
dec
movsl
fisubl
and
fsubrs
mov
push
jg
adc
rclb
sub
outsb
into
shrb
mov
or
lea
xor
add
in
ss
rclb
add
mov
inc
out
rcr
push
ja
add
repnz
adc
add
loop
shll
decl
push
sbb
inc
or
pop
loop
out
pop
arpl
imul
mov
loopne
add
dec
ret
dec
inc
sbb
notb
movsl
add
loopne
subl
mov
jbe
mov
cmp
je
lret
add
jo
mov
movsl
loope
imul
mov
push
xchg
idivb
or
mov
jl
add
in
in
stos
jmp
jne
adc
les
add
pop
test
loope
dec
push
mov
add
sub
add
shrb
pop
sub
dec
test
jnp
or
lcall
xchg
pop
inc
mov
lahf
scas
loopne
xor
add
fs
jno
mov
sub
pop
out
rol
add
testb
cs
loopne
movw
ret
push
out
or
clc
adc
cli
xor
add
push
sbb
ret
fisttpll
xor
adc
mov
sbb
add
rorb
or
out
cmp
loopne
sub
jno
packsswb
je
xchg
and
pop
adc
push
adcl
mov
loop
repnz
in
inc
push
aam
push
push
mov
pop
jne
incl
jle
sbb
ljmp
les
arpl
mov
dec
test
jbe
add
loop
xor
dec
addr16
mov
dec
scas
jbe
pop
pop
xchg
push
adc
pop
mov
add
insb
inc
add
jbe
dec
xor
pop
cmp
test
inc
xor
ja
jbe
add
loope
cli
jo
movb
fcmovnu
or
inc
mov
ficompl
fstps
cmp
rol
mov
mov
das
add
int3
cmp
xor
pop
mov
push
roll
cld
mov
or
dec
es
lret
in
loopnew
fmull
mov
test
mov
imul
or
push
loopne
mov
pmulhw
or
scas
repz
mov
and
pop
loopne
dec
test
add
jle
mov
add
dec
mov
push
add
inc
daa
lahf
or
pushf
mov
cmpsl
sub
xlat
mov
cmc
add
sub
pop
adc
add
fists
cmp
mov
hlt
shr
mov
lock
ret
jg
pop
test
mov
pop
in
inc
add
xor
lea
test
sub
pop
inc
sbb
add
xorb
sub
lret
test
jmp
outsb
test
or
pshufw
adc
fildl
add
stos
add
jmp
or
jo
aas
outsl
add
xchg
pop
out
push
aad
mov
cmp
sub
mov
dec
mov
add
mov
and
inc
cmp
mov
data16
jmp
xlat
vmwrite
or
cmp
add
pop
jnp
mov
shrb
sarb
add
daa
add
jnp
mov
insb
add
iret
push
push
push
test
cmc
pop
pop
jo
add
addps
mov
cmp
and
mov
aaa
jo
add
mov
clc
popf
leave
xor
cwtl
dec
add
mov
sbb
add
jnp
out
mov
daa
sbbb
inc
sbb
hlt
jmp
sbb
jnp
stos
push
add
ss
leave
add
pop
push
jns
aaa
mov
loop
xor
call
icebp
add
adcb
fs
jb
add
adc
mov
or
cmc
dec
push
addl
sarb
pop
jecxz
cmpsb
std
or
testb
dec
jae
in
fdivrl
ds
dec
pusha
inc
or
fdivrs
sub
add
ret
add
xor
iret
cmp
ja
xchg
ror
add
push
inc
cmp
sub
push
inc
jbe
add
mov
out
and
add
lcall
jmp
inc
adc
push
mov
mov
js
pop
or
and
inc
loop
xor
sub
jnp
ljmp
nop
pop
inc
add
mov
mov
adc
add
ljmp
sub
cmp
add
and
push
pop
icebp
shll
xchg
add
or
add
or
pop
and
ret
jmp
add
add
mov
sub
lret
rcrl
add
jg
sbb
sub
or
push
arpl
inc
leave
test
fsubrl
and
cltd
cwtl
jae
sub
xchg
add
lcall
adc
rolb
push
jns
sub
je
or
dec
add
cmpb
add
jne
add
cmp
or
loopne
mov
adc
inc
add
dec
cmc
rcr
lret
pop
fdivr
push
clc
cmp
add
fcoms
or
inc
add
push
cld
mov
add
jg
xorl
js
sbb
jmp
dec
xlat
lret
mov
sub
in
jmp
add
pusha
push
sbb
repz
or
inc
dec
add
push
decl
push
es
dec
sbbb
call
push
movsl
pop
inc
in
cmove
arpl
shrb
movl
sub
pop
jne
xor
bound
sbb
popa
or
out
cmpsl
in
and
mov
lock
dec
sbb
and
adc
mov
dec
in
jne
ljmp
dec
dec
gs
jl
add
rolb
push
and
rcrl
dec
add
sbb
adc
cmp
mov
jecxz
movsl
mov
lds
std
sub
inc
addb
jl
sbbb
xchg
xchg
add
das
shlb
add
and
ja
pop
xor
or
fcmovnb
add
mov
add
xchg
cld
add
pop
xchg
and
jnp
imul
fists
or
leave
test
orb
push
add
dec
push
add
or
ret
js
xchg
pcmpeqb
mov
stos
mov
sbb
dec
scas
insb
adc
add
arpl
mov
cmpsl
sub
mov
outsl
repnz
test
in
sbb
orb
lret
add
mov
fadds
jle
jnp
jns
jge
dec
add
sub
or
dec
pop
push
sbb
or
xor
nop
movzwl
inc
sub
add
addr16
and
dec
cmp
sar
out
or
cmpsb
add
sub
push
push
mov
popf
xlat
out
adc
decl
stos
cmpsl
pop
ljmpw
jnp
aas
add
jl
aad
add
shrb
adc
pop
cltd
inc
aas
cmpsb
mov
pop
and
ret
call
adc
mov
rorb
or
movb
or
cs
add
arpl
and
pop
pop
fldcw
jne
push
add
jp
test
negb
inc
add
test
jo
or
or
adc
addr16
std
add
shlb
or
jg
loope
sub
add
cwtl
inc
aam
sarb
cmp
or
fistl
add
movsl
jmp
in
xchg
pop
inc
cmp
add
test
scas
mov
mov
add
inc
jbe
aad
dec
xor
or
xchg
ljmp
fistpl
fadds
shlb
nop
mov
enter
add
mov
lgdtl
cmp
mov
stc
aaa
push
add
adc
push
push
sbb
adc
cmp
adc
adc
rclb
stos
and
or
test
push
add
pop
rorb
add
rolb
sub
mov
add
es
add
cmpsl
mov
out
test
add
cmp
sti
ret
add
jle
and
movhps
repz
addl
push
or
add
xor
popa
cmp
push
mov
push
mov
fs
mov
lods
es
xchg
add
xlat
pop
jo
out
lahf
clc
inc
dec
sub
add
lcall
push
imul
or
jmp
push
decl
cmp
and
fbstp
add
dec
push
sbb
pop
sub
and
push
stc
ljmp
jo
pop
xchg
stc
or
mov
mov
fcoms
adc
add
xor
mov
in
jno
add
xor
inc
js
add
pushf
lret
fstpl
or
movb
adc
adc
adc
shll
iret
les
add
xchg
aad
jmp
imul
mov
add
pop
fnstcw
stos
js
std
mov
add
pushf
or
push
and
add
jno
adc
lahf
maxps
pusha
inc
push
icebp
push
push
es
pop
mov
sub
je
and
jp
add
shll
add
and
shll
fiaddl
jecxz
into
sbb
pop
cmp
in
sbb
cli
sub
xor
mov
or
adc
and
pusha
pmuludq
mov
add
mov
pusha
sbb
scas
add
pusha
mov
fmuls
sub
adc
ja
xlat
inc
add
roll
add
fldlg2
popa
enter
add
mov
sar
xor
xor
pop
adc
int
mov
mov
js
add
push
cld
push
ret
add
mov
stos
jle
add
xor
add
add
xchg
pop
xor
lea
cmp
clc
or
add
imul
mov
mov
dec
xor
add
clc
aas
jno
test
xchg
pop
cwtl
push
rorl
add
pop
pop
adc
xor
ret
movsl
or
add
pop
sbb
jle
add
adc
nop
add
dec
add
add
popa
and
jecxz
cmp
imul
test
add
jmp
or
push
int3
add
adc
mov
stos
call
adc
xorl
repz
push
add
insl
orl
jo
add
adc
mov
cli
idiv
test
add
jmp
rcl
push
add
sub
pop
add
icebp
cld
inc
add
orl
sar
popf
add
xor
shrl
cmpsb
jb
dec
or
rol
loopne
add
dec
inc
nop
clc
xchg
fadds
shlb
loopne
sarb
fwait
sub
mov
lock
rol
add
add
cwtd
inc
inc
stos
add
je
roll
mov
enter
loopne
jnp
add
dec
sub
pop
add
mov
push
les
dec
aam
shlb
add
fsubs
add
and
xchg
ja
rsqrtps
push
inc
test
ret
loop
pop
shrl
xor
cmp
or
add
and
xor
stos
push
add
adc
jno
cwtl
subl
cwtl
das
add
xor
add
aas
jnp
mov
add
and
pop
jbe
sbb
mov
add
pop
stc
mov
mov
and
dec
mov
fcoml
push
pop
inc
popa
call
je
push
std
adc
push
sti
push
test
inc
enter
push
and
sarb
xchg
lret
pop
test
pop
xchg
insb
adcb
ret
sub
test
add
xor
ljmp
add
adc
sbb
jbe
and
sub
add
es
int3
adc
mov
pop
pushf
xchg
inc
sarl
cmpsb
call
cmp
or
mov
call
mov
adc
pop
add
fwait
outsl
xlat
and
out
ss
xchg
jge
rorb
pop
leave
dec
arpl
cwtl
ss
fstps
lcall
je
inc
test
or
mov
push
or
popa
nop
repnz
mov
stos
sbb
cmp
out
ljmp
sub
xor
lahf
test
add
pop
bound
inc
add
mov
mov
stos
add
adcb
or
mov
pop
adc
xchg
lret
stos
add
mov
add
mov
es
or
add
pop
in
inc
jmp
flds
repz
and
dec
fnstsw
add
mov
inc
popf
push
and
arpl
ret
incl
stos
dec
lds
add
inc
adc
fldl
lret
les
pop
adc
lahf
test
mov
jmp
or
in
stos
dec
add
int3
xchg
and
inc
or
cmp
inc
add
adc
push
push
fistl
push
jo
add
lea
testl
int
cmpsb
pop
adc
mov
adc
add
jno
call
pusha
out
mov
stos
add
pop
cmp
int
ljmp
test
mov
stos
movb
add
push
dec
cld
rcrl
cmpsl
xchg
add
mov
add
fs
dec
sbbb
cli
push
adc
es
stos
xor
sbb
test
and
daa
gs
inc
sbb
add
xchg
out
mov
lds
xchg
mov
add
in
push
das
cmp
andb
inc
xlat
push
dec
mov
data16
jb
xchg
and
push
sub
test
out
mov
gs
sbb
aaa
sti
lcall
dec
push
push
in
pop
add
mov
add
adc
add
jmp
sub
xor
inc
scas
imul
mov
adc
or
inc
push
add
adc
ret
jmp
add
pop
push
cld
push
arpl
pop
jne
and
outsl
lret
xchg
loop
sbb
jmp
decl
orl
pop
sub
lods
daa
lahf
add
jbe
cli
push
out
add
mov
movsb
push
ljmp
pop
mov
das
push
xchg
inc
pop
add
sub
andb
pop
scas
das
cwtl
add
and
clc
mov
pop
adc
or
jbe
push
testb
test
jno
test
sub
jo
aad
rorb
jno
dec
jp
mov
or
xchg
ret
ds
shlb
xor
ja
add
std
das
mov
pusha
mov
sbb
pop
pop
shlb
add
fistpl
pop
mov
lcall
cmp
adc
add
xchg
enter
mov
mov
pop
or
push
sbb
repnz
xlat
ljmp
imul
icebp
cmpsl
sbb
sbb
push
test
and
sarb
pushl
cld
pop
mov
xor
jns
cli
push
test
mov
mov
pop
pusha
cmp
sbb
push
inc
inc
loope
call
lret
scas
addb
pop
pop
inc
rorb
push
insb
pop
mov
stos
add
cli
sbb
sbb
mov
mov
rolb
aas
and
cmpsb
movsb
mov
mov
pushf
cmpsb
pop
je
pop
movl
xchg
cmp
mov
jp
mov
movsl
pop
dec
fisttpl
in
inc
add
and
loopne
leave
test
dec
mov
pop
or
cmp
shrb
sbbb
inc
pop
testb
fwait
test
addr16
add
pop
add
push
pop
or
inc
outsb
and
add
push
mov
cld
loope
hlt
in
jbe
dec
sub
push
push
lods
mov
andb
jb
or
movsl
out
sbb
loope
push
rol
mov
dec
clc
je
in
add
sub
add
icebp
push
lock
jecxz
mov
add
fisttps
outsl
or
adc
xlat
or
mov
cmpsl
loopne
add
dec
mov
rcll
jl
mov
jg
add
out
push
jbe
cmc
repnz
or
testl
pop
fildl
imul
dec
pushf
call
jae
cmp
inc
js
in
lock
popa
addb
addl
mov
popa
sbb
ret
lret
mov
cmp
or
or
hlt
mov
cmc
sub
adc
add
out
stos
cmp
xchg
add
inc
mov
ja
push
aad
inc
jne
add
push
call
pop
shrb
lret
adcb
fbld
jns
add
mov
add
pop
loop
dec
out
test
mov
add
mov
je
cmpsl
in
mov
sbbb
xchg
repnz
shll
iret
jo
pushf
add
lds
pop
mov
fmuls
and
arpl
jae
or
xchg
xor
cmpxchg
fisttpll
imul
mov
movsl
mov
jg
mov
loopne
add
jge
inc
cli
dec
pop
movsb
add
lahf
push
mov
push
xor
sub
inc
fs
dec
je
cwtl
out
add
mov
mov
enter
mov
add
rclb
add
in
loopne
dec
push
mov
xor
or
test
add
jg
mov
mov
aam
sub
cmp
popa
mov
add
sti
sub
add
push
dec
and
xor
adc
jns
add
loopne
repz
or
push
mov
dec
push
lcall
daa
dec
es
call
mov
mov
push
jo
push
add
xchg
and
sbb
add
xchg
pushf
call
push
cmp
sti
add
xor
inc
loop
push
loop
std
add
jo
push
and
add
sub
mulb
adc
addr16
out
scas
add
imul
cmp
dec
add
movsl
adc
cmpsl
add
sarl
xorb
lret
pop
cld
adc
lahf
lods
xchg
repz
std
scas
inc
push
scas
fcmovne
push
jl
cld
push
add
inc
pop
add
rorl
test
add
movsb
pop
adc
mov
jns
add
lret
sti
push
out
jbe
add
mov
js
sub
lock
push
loopne
popl
jo
xchg
cmp
cwtl
bound
inc
mov
pop
push
dec
xor
dec
push
add
insl
ja,pn
push
hlt
jge
add
push
adc
arpl
data16
jae
addr16
cld
inc
sbb
push
push
inc
jl
inc
pusha
jbe
outsb
stc
jmp
les
lock
imul
dec
jge
jl
iret
nop
push
dec
dec
outsb
iret
jnp
mov
cmp
jne
ret
icebp
outsl
insb
clc
gs
pusha
push
out
in
jae
jns
pop
jle
sbb
and
or
cmp
add
jae
dec
add
sbb
or
push
insl
push
popa
jb
dec
pusha
ret
bound
popw
addr16
adc
jbe
push
jno
add
les
iret
test
mov
outsb
data16
push
jbe
ja
push
inc
mov
or
jb
jae,pn
arpl
add
test
push
push
sbb
imul
arpl
pop
dec
pop
iret
inc
push
pop
lock
popa
loopne
push
push
je
mov
lea
xchg
inc
cmp
outsb
inc
xchg
into
sarb
stc
and
dec
add
imul
in
xchg
xor
push
add
jl
mov
loope
xor
fiadds
push
adc
je
push
addr16
jbe
and
pusha
ja
shlb
sub
add
jp
addl
push
cmpsl
dec
push
iret
shll
enter
add
xchg
sbb
arpl
insb
shlb
jmp
add
ret
enter
and
mov
mov
sub
adc
jp
test
and
sub
sub
mov
les
sbb
mov
shlb
pop
and
ds
daa
push
cltd
xorl
add
jae
mov
enter
fs
sarb
rolb
add
xchg
adc
sbb
mov
dec
add
sbb
aam
nop
push
dec
in
xor
divb
test
jle
xor
mov
test
xchg
push
add
jp
and
rolb
nop
out
fisubl
mov
sub
mov
cmpb
add
inc
adc
push
pop
ret
out
fs
push
cmpsl
jl
or
popf
loop
sbb
in
add
push
cld
hlt
xor
add
push
lea
add
mov
mov
bswap
mov
add
add
bnd
or
push
mov
push
push
push
add
sbb
jmp
push
mov
pop
pop
aaa
pusha
xchg
dec
or
aad
ljmp
jle
clc
iret
mov
jb
pop
sbb
xor
and
shll
cmp
xchg
daa
jl
mov
rorb
repnz
and
inc
pop
adc
loop
push
pusha
movsb
push
rorb
inc
icebp
mov
flds
inc
adc
outsl
mov
rcrl
inc
into
or
ret
shlb
and
les
pop
sti
andb
cmp
fiadds
or
and
fcoml
adcb
sub
sbb
enter
inc
and
mov
cmp
xor
cmp
cmp
flds
inc
add
dec
adc
xchg
push
mov
in
ljmp
sbb
jae
out
cmpsl
shlb
or
add
xor
mov
pusha
aad
jbe
xor
insb
or
xchg
jo
adc
js
and
jl
mov
mov
mov
lods
xchg
inc
add
mov
or
xor
and
icebp
cwtl
pop
mov
ds
mov
sbb
mov
push
idivl
ret
fst
lds
movsb
aad
push
mov
or
lds
and
dec
pusha
es
cmp
je
push
aad
mov
mov
repnz
pop
insl
cmc
int3
ror
push
pop
nop
mov
and
pusha
loop
pop
inc
imulb
add
mov
inc
enter
rcl
sbb
mov
cli
faddl
push
adc
xor
dec
inc
in
movsl
mov
lock
mov
pop
arpl
mov
sbb
aad
pop
cwtl
jmp
sbb
jnp
or
or
movups
mov
addb
sbb
pop
and
or
icebp
add
xor
push
inc
cmp
cmp
xor
mov
inc
add
insb
add
call
mov
fadds
or
pop
mov
add
or
add
dec
clc
dec
add
add
mov
pushf
add
fistpll
lds
pop
leave
push
push
add
jmp
ljmp
xor
add
jbe
lods
dec
or
dec
loope
add
adc
cmp
jle
xor
sbb
rorl
mov
clc
test
cmpsb
add
cmpb
out
jg
call
repnz
pusha
out
shrd
mov
fsubp
dec
and
add
aaa
jne
cwtl
pop
test
add
xchg
push
adc
mov
call
add
pop
mov
add
pop
loop
lahf
and
rolb
jae
push
push
adc
mov
es
push
jnp
out
add
scas
or
test
rolb
cmp
cmp
addb
or
jmp
jge
add
push
or
lea
mov
cmpsb
mov
mov
cmp
lock
sub
push
add
das
js
movsb
cmp
sub
pusha
add
jl
lods
lret
jmp
sbb
push
subb
push
pusha
ret
popf
lret
mov
lret
test
jbe
cmpb
aam
jb
xor
push
aaa
adcl
add
xor
inc
sbb
jmp
repnz
or
pop
std
fadd
psrld
loope
add
pop
mov
mov
nop
jnp
jp
mov
add
inc
mov
push
cmp
mov
inc
pop
fcompl
bound
or
mov
xor
les
xchg
jnp
add
inc
insb
pusha
mov
jl
push
dec
ret
lret
push
add
call
js
outsl
jne
or
jb
cs
push
shl
and
pusha
shll
add
ret
xor
insl
mov
int3
jp
aas
sti
scas
add
dec
cli
shl
roll
sbbb
clc
jge
or
add
dec
push
pop
push
dec
add
cmp
je
jnp
xchg
popl
ljmp
push
pop
lret
jne
add
pop
push
adc
roll
lcall
inc
in
jp
add
pop
faddl
mov
dec
call
or
adc
add
nop
outsl
pushf
test
jnp
push
cli
pmaxsw
or
add
je
dec
stos
bnd
jnp
add
sti
push
call
dec
inc
sub
add
bound
fcmovb
xchg
cs
add
mov
mov
cmp
mov
mov
movsb
dec
sbb
push
mov
and
test
clc
inc
mov
xchg
lcall
jne
and
imul
addb
inc
pop
cmpl
in
scas
adc
aam
mov
pop
xchg
push
outsl
mov
mov
add
push
into
loopne
movb
jecxz
enter
add
adc
out
icebp
cmp
leave
adc
shrb
out
ds
pop
leave
adcb
add
shr
add
cmp
mov
sar
loop
xor
movb
bound
pop
jb
add
enter
mov
jl
cs
dec
cmp
xchg
jl
sbb
or
inc
cmpb
jge
adc
push
clc
and
sahf
out
inc
arpl
gs
lock
pop
movsb
add
in
inc
pop
cli
mov
enter
roll
add
and
or
jne
push
scas
add
and
cs
pop
daa
jbe
add
sbb
cmp
rorb
mov
add
push
imul
and
ja
and
hlt
out
add
fldl
call
add
test
mov
jge
cmp
dec
adc
lds
pushf
mov
dec
sahf
imul
add
shrb
jecxz
dec
xchg
inc
push
jl
idivl
add
dec
addr16
and
dec
or
add
nop
stos
sbb
sbb
jp
cmpsb
sarl
sub
and
add
push
and
test
dec
xchg
mov
inc
or
add
subl
ret
jo
push
sbb
pop
test
repz
hlt
fildll
cld
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
es
xlat
loopne
call
jno
add
inc
jmp
lea
not
ljmp
cmp
add
cmp
adc
jae
jno
dec
and
in
sbb
jne
mov
outsb
add
fcmovu
lret
add
sbb
add
or
fcmovnb
pusha
cmp
inc
or
shlb
out
out
add
sub
mov
jp
cmp
lea
xchg
int3
inc
cmp
pop
or
sarb
jle
xchg
adc
xchg
dec
iret
decb
repz
lock
bound
jnp
mov
lcall
ds
fisttpl
mov
lock
repnz
cmpsl
mov
in
loopne
adc
cmp
fistps
or
push
add
add
cmc
sub
jg
scas
mov
jge
add
mov
cmp
jae
or
loopne
nop
andb
pop
iret
sub
ret
je
inc
pushf
lret
inc
or
dec
test
adc
add
sub
mov
inc
pop
fiadds
push
push
add
add
ljmp
sbb
lea
or
sub
jbe
dec
sbb
jmp
xchg
add
or
xor
adc
sub
adc
shlb
jge
pop
sbb
jmp
sub
push
add
add
imul
pop
and
shlb
ret
imul
addb
add
inc
or
pop
xor
lahf
or
push
unpckhps
inc
mov
in
add
mov
add
push
add
inc
xchg
lret
pop
adc
test
lock
add
sbb
mov
add
jmp
out
dec
pop
test
pop
add
sbbb
add
dec
aas
roll
pop
pop
add
jmp
les
sbb
pop
add
and
fnstenv
sbb
inc
roll
loopne
test
and
and
outsb
pushf
lahf
jecxz
dec
lcall
ljmp
add
jmp
mov
gs
nop
jae
jbe
add
xchg
fisttpll
jae
cmp
and
mov
jmp
sbb
adc
aam
in
out
add
sbb
dec
xor
ja
add
adc
sbb
sbb
ja
cwtl
mov
mov
cmp
orb
adc
js
xchg
add
push
add
cmp
push
xchg
cmpsl
mov
lret
add
das
imul
insb
decb
add
mov
push
testb
out
jmp
rolb
cmp
cli
jae
mov
pop
inc
sub
cmp
mov
lret
inc
popf
inc
dec
push
cmc
add
fld
inc
or
test
sub
sub
daa
mov
es
add
mov
pop
stos
fs
inc
ret
nop
add
ds
cmp
dec
add
clc
sub
xchg
nop
sub
xchg
dec
adc
add
out
add
push
fcomi
push
es
mov
clc
jo
pop
cmp
cmp
ljmp
push
nop
repnz
clc
pop
call
call
mov
add
xchg
pop
jns
push
mov
cmp
add
scas
sub
orb
mov
cmp
pop
mov
push
loopne
mul
and
adc
cmp
rcrb
pop
pop
icebp
or
out
add
loop
cmp
add
add
or
or
es
lret
fs
add
adc
test
xchg
cli
lcall
orl
mov
lcall
and
cmp
sbb
pop
jns
pusha
pushf
fnsave
pop
sub
push
jp
push
inc
dec
xchg
add
inc
nop
jbe
push
push
add
std
shll
sbb
jle
gs
add
loopne
fiaddl
je
cmpsb
inc
pop
sub
hlt
ja
add
dec
nop
fsubrs
add
mov
xlat
test
add
jmp
dec
ud2
movsl
add
mov
rorl
fiadds
pop
sub
nop
add
popa
or
movzbl
stc
iret
loop
pop
add
das
add
add
push
inc
arpl
jae
add
dec
ret
or
add
out
dec
cmp
sbb
imul
cmovb
add
mov
ds
push
or
mov
loop
sbb
jecxz
add
clc
adc
jo
push
repnz
mov
or
lds
mov
add
pop
sub
repnz
jb
or
cmp
and
movsb
inc
dec
xchg
popa
outsb
aam
xor
enter
lahf
cmp
add
jmp
sbb
and
xchg
inc
push
mov
pop
enter
xor
shl
add
ljmp
fadds
jmp
add
jb
test
add
out
sub
adc
mov
or
add
cmp
int3
hlt
mov
add
sub
adc
iret
xor
add
xor
aam
hlt
je
js
mov
sti
add
cmp
pop
das
push
or
add
or
sub
jmp
lock
rcrb
adcl
jne
or
add
jmp
and
dec
pop
roll
loope
push
mov
cwtl
imul
jge
cmp
push
add
cmp
pop
roll
stos
mov
or
add
mov
or
add
pop
test
sub
iret
push
mov
push
add
mov
pop
sbb
imul
and
inc
sub
and
mov
subl
clc
xchg
testl
sbb
fisubrl
mov
ret
loop
or
je
add
add
pop
stos
stc
adcb
add
or
rcrb
scas
add
push
add
into
sti
jl
aas
fldl
adc
movsb
jg
push
lds
repz
or
cwtl
add
pop
or
push
mov
dec
jb
jnp
add
repnz
xor
int
push
mov
cli
imul
mov
inc
dec
inc
pusha
cli
inc
pushf
pop
movsb
shrb
leave
xor
pusha
pop
or
xor
mov
pushf
sbb
or
adc
test
aam
test
push
pop
add
push
cmpsl
push
add
int
add
pop
stos
xor
pop
in
or
or
add
sarb
jl
add
jmp
test
cwtl
sbb
add
push
cs
mov
xchg
add
rorb
clc
call
sbbl
adc
add
cmp
xor
cmp
jbe
sbb
sbb
mov
inc
stc
les
loop
jg
add
leave
xor
inc
xchg
add
in
adc
int3
movsb
add
daa
add
repz
cmp
rolb
rolb
dec
mov
jmp
mov
cmp
cli
cmpsl
inc
push
xor
pusha
ret
push
add
xor
push
test
in
add
fstl
loopne
sub
nop
cmpsb
xor
add
mov
inc
test
add
aam
adc
dec
sbb
push
jmp
xchg
xor
test
ja
jmp
testl
subb
add
popf
fsubs
add
ja
mov
add
and
roll
loopne
out
and
cld
pop
jbe
roll
out
jl
imul
mov
scas
ret
or
mov
sub
mov
push
add
or
sub
daa
ja
xchg
mov
pop
mov
adcb
xchg
aas
cmp
jbe
test
and
inc
int
cs
add
std
sub
mov
nop
loopne
push
out
add
or
inc
xor
pop
inc
mov
dec
xor
test
je
add
mov
sub
pop
push
outsb
or
pop
ss
mov
shrl
dec
mov
add
adc
inc
add
lea
inc
add
leave
repz
test
mov
movsb
out
or
inc
jne
add
dec
fdivrl
xchg
cmp
xor
pop
mov
add
add
cmp
adc
sarb
mov
add
addr16
jmp
mov
push
push
inc
pop
lods
mov
xlat
sbb
daa
add
cmp
sbb
nop
or
xorl
push
sbb
cmp
inc
mov
xchg
fcmovb
jnp
shll
push
add
mov
sti
dec
test
add
cmp
push
loope
jl
and
pop
add
into
add
xchg
mov
jno
add
xor
faddl
add
add
push
mov
inc
jne
adc
popa
and
add
cld
and
mov
fcompl
loopne
add
inc
add
push
add
mov
inc
adc
add
shl
cmp
ja
in
aas
aam
cmpl
mov
sub
aad
adc
add
mov
jae
rcll
je
negb
cmp
add
push
add
jecxz
jae
orb
and
adc
movsl
mov
aaa
inc
mov
mov
pop
jmp
and
jp
lret
call
add
clc
insl
dec
lods
cwtl
jae
add
cmp
hlt
adc
add
xor
lds
dec
cmpb
and
iret
in
inc
sub
sub
mov
imul
shll
add
push
cmp
sub
test
not
nop
jns
add
ret
push
pop
lahf
mov
aas
in
push
pusha
mov
adc
sub
sub
push
data16
inc
xor
push
add
sub
add
jae
add
cld
rolb
or
sub
ss
add
xor
inc
add
sub
add
arpl
ret
sbb
push
jecxz
loopne
jne
add
adc
rorb
inc
aas
add
out
ret
jno
add
adc
pushf
loopne
cld
xchg
clc
pop
jno
add
stos
out
push
aam
push
mov
insl
adc
movd
mov
cmp
jne
or
lods
call
inc
push
push
pop
orb
or
movsb
or
dec
push
fadds
inc
inc
bound
int
pop
into
leave
cmp
mov
jae
dec
push
add
dec
adc
dec
jl
add
pop
repnz
popf
addl
cmpsl
cmp
adcl
enter
add
cmp
dec
add
adc
jnp
add
and
jl
dec
pusha
push
add
stos
xchg
pop
loope
nop
jp
sbb
rol
pusha
or
jne
xor
push
jb
inc
shr
test
cmc
mov
xchg
lods
mov
adc
jbe
adc
aam
add
cmp
loopne
adc
add
mov
in
add
in
dec
dec
insb
outsl
xchg
add
sbb
sub
fdivs
jo
add
cmp
cmp
mov
incb
popa
icebp
push
jbe
add
pop
pop
push
add
push
mov
movsb
and
add
pop
das
jne
rorb
mov
dec
pop
shl
fists
add
out
mov
add
ljmp
mov
pop
or
std
jns
add
xor
xlat
pop
mov
bswap
add
in
and
add
repnz
shlb
movsl
pop
std
xor
inc
and
jp
mov
mov
sub
push
sbb
add
cmpsl
jns
leave
call
dec
push
xchg
cld
add
mov
stos
fdivrs
outsb
add
adcl
add
test
inc
mov
andl
xchg
push
popa
adc
je
adc
test
cmp
add
arpl
orb
xor
clc
or
and
push
or
fldl
cmpsb
sbb
add
loope
jbe
push
adc
add
mov
mov
xor
cmp
xor
dec
push
dec
outsb
adc
pop
cmp
add
jmp
jb
sarb
mov
dec
popa
repz
or
test
leave
xor
jl
xlat
mov
mov
add
xor
loopne
fsubr
pop
add
or
cs
push
mov
xlat
pop
inc
icebp
add
cmp
pop
popf
testb
in
scas
pusha
push
out
lock
call
rol
add
not
mov
lahf
pop
addl
inc
ret
fldpi
mov
shl
mov
test
mov
cltd
cmp
push
sbb
mov
xchg
test
jl
sbb
jge
add
mov
mov
sbb
add
aad
daa
add
ret
jge
cmp
cmpsb
xchg
lods
adc
add
and
mov
clc
pop
push
cmpsb
lahf
cld
and
add
in
pop
push
xchg
adc
scas
add
inc
push
sub
in
fwait
add
push
push
cmc
xchg
mov
jb
or
pop
jbe
movb
add
test
xchg
enter
out
dec
inc
add
mov
sub
sub
jmp
adc
add
sarb
repz
gs
subb
dec
or
xor
pop
xchg
add
bound
loopne
sub
cmp
enter
dec
out
iret
fdivr
jge
sahf
inc
adc
mov
daa
sub
add
mov
add
int
sub
inc
mov
incl
insb
or
adc
pop
pop
mov
fimuls
add
adc
call
sahf
fdivrl
add
insl
adc
imul
das
insb
jbe
clc
in
mov
jae
mov
pop
sub
hlt
add
cmpsb
add
push
popa
aaa
nop
add
adc
inc
ljmp
sbb
and
bound
sbb
add
xlat
testb
jns
sti
push
or
test
int
xchg
mov
jmp
sub
mov
mov
or
cmp
fists
repnz
add
loopne
jg
pop
fldl
call
push
dec
adcl
pusha
or
add
jg
fildl
jmp
push
inc
aam
dec
add
sub
pusha
hlt
mov
lcall
add
or
sete
test
push
lods
mov
add
sbb
xchg
jp
or
adc
xor
dec
sbb
js
jae,pt
inc
in
lret
adc
pop
sti
sub
and
fsubs
mov
xchg
inc
fdivrs
call
adc
push
mov
stc
xchg
dec
rol
movsb
mov
push
jae
addr16
movsl
fucomi
mov
aam
incl
jl
in
inc
in
and
data16
push
jmp
pop
loopne
add
stos
cltd
push
cmp
jl
cmp
pop
jg
pop
mov
rolw
loopne
or
ljmp
aas
jl
pop
ret
push
sub
push
pop
add
or
je
fwait
aad
mov
dec
aas
roll
or
add
and
ss
sbbb
sbb
sub
dec
mov
add
dec
stos
dec
jp
add
js
and
inc
std
pop
ret
mov
pop
and
sub
xor
add
and
gs
or
outsb
add
push
les
adc
mov
fdivrp
mov
and
add
icebp
and
sbb
and
add
add
fsubs
insb
xor
xlat
pop
outsb
rep
push
loopne
aad
push
and
inc
mov
test
and
add
push
mov
pop
add
sub
push
fdivl
mov
rclb
and
add
ret
xchg
in
mov
test
cmpsl
jo
aas
or
cmp
andb
rorl
push
call
ds
cmp
sub
sar
and
push
add
mov
jo
add
and
je
or
add
add
add
and
inc
lock
add
xor
dec
jg
jmp
cmc
ljmp
pop
jnp
clc
push
pushf
ljmp
add
xchg
lea
add
icebp
adc
fcmovu
add
repnz
and
fwait
add
add
cmc
in
adc
cmpsb
dec
inc
sti
or
add
psubsb
cmp
das
das
push
rolb
add
or
mov
lock
and
cwtl
pop
rolb
lods
inc
fnstenv
psrld
mov
pop
sbb
add
fisttpl
stos
add
dec
pop
hlt
mov
sbb
or
sarb
paddusw
out
sub
lods
je
inc
sti
add
push
mov
sahf
add
cmovle
add
or
mov
add
jbe
adc
and
insl
jnp
cmp
and
loopne
inc
and
inc
push
jmp
add
cmp
cmpsl
and
decl
or
add
push
insl
scas
add
mov
inc
add
mov
add
pop
jmp
xor
bnd
addps
inc
mov
leave
sub
mov
hlt
mov
add
or
adc
and
add
xchg
mov
xchg
push
add
mov
pushl
jbe
cmp
lods
test
int3
lods
dec
and
jge
pop
and
js
gs
mov
mov
pop
mov
xlat
pop
cmc
add
push
adc
add
loopne
movl
push
xchg
mov
push
mov
mov
out
push
js
cmp
push
mov
and
cmp
sbb
in
loop
icebp
push
cmpsl
or
add
and
scas
repnz
and
ja
add
movsb
leave
dec
lock
mov
add
push
and
cmp
add
sub
add
test
add
add
imul
ljmp
jp
or
mov
add
adc
add
shrd
sarb
add
mov
or
xchg
out
add
std
cmp
xchg
aaa
add
pop
sbb
adc
cmp
xchg
add
push
mov
out
ret
add
hlt
test
nop
fs
add
push
or
mov
pushf
out
ficomps
nop
cmpsb
les
rolb
adc
add
jecxz
out
in
inc
sbb
ljmp
inc
and
pop
cltd
xchg
and
lea
shrb
ds
or
mov
cs
push
sbb
push
je
xchg
add
push
mov
hlt
pop
and
in
push
nop
or
sbb
adc
dec
mov
mov
in
add
mov
add
scas
adc
sub
mov
roll
cmc
and
push
sahf
add
mov
jge
xchg
nop
push
pop
mov
icebp
mov
loope
add
cli
xor
addl
xchg
pop
out
jmp
mov
add
jne
aaa
fldt
ret
inc
add
mov
add
in
cmpsb
ljmp
leave
rorl
add
jmp
sarl
insl
add
xchg
mov
or
pusha
sbb
inc
cmpsb
inc
add
inc
jnp
mov
pop
mov
mov
xchg
les
pusha
xor
add
adc
adcb
pop
add
adc
cmovp
add
xchg
push
mov
nop
testl
pop
popf
loopne
push
mov
sub
add
or
pop
in
dec
ret
aad
test
push
lock
jge
pusha
lods
jl
dec
add
iret
jecxz
aad
sub
add
xchg
fcoml
nop
cmp
icebp
add
call
pop
cmp
ds
lock
push
add
out
repz
pop
push
movsb
arpl
inc
jno
xchg
push
dec
xchg
sti
sbb
cld
adc
and
push
inc
mov
pusha
add
or
or
lret
sbb
cmp
out
adc
mov
add
mov
or
sub
repz
lcall
xor
adc
add
ret
push
mov
push
lock
jge
or
mov
mov
push
inc
mov
pop
inc
lock
in
or
xor
inc
jae
push
cmp
cld
add
test
mov
add
push
mov
add
jae
pop
jp
xor
fcmovnb
fsubr
lcall
loope
sbb
push
and
jae
pop
enter
jb
sbbb
orl
add
leave
add
xor
adc
adc
int3
mov
inc
pop
sub
lret
jne
leave
and
lcall
xor
icebp
repnz
lea
dec
pop
roll
popf
in
push
xor
and
mov
enter
inc
mov
push
add
jns
shrb
fiaddl
fsubp
sbb
cli
inc
jne
aad
mov
jo
pusha
mov
loop
icebp
and
rorb
push
or
pop
pop
push
dec
cmp
outsb
out
jo
mov
les
or
inc
cmp
pop
jle
scas
inc
pop
pop
add
out
mov
test
xchg
and
inc
dec
popa
add
jcxz
jne
mov
cmp
mov
add
vcvttsd2si
es
adc
mov
stos
cmp
mov
cmpb
or
add
xor
dec
add
xchg
clc
mov
inc
ret
adc
dec
jg
add
add
add
push
jns
add
not
pop
and
sbb
imul
out
push
test
gs
bound
push
pusha
add
enter
cmp
add
and
mov
cli
rclb
cmp
call
cmpb
insb
xor
wrmsr
mov
push
add
leave
aam
adc
and
or
pop
daa
or
cmp
bound
je
loope
mov
dec
mov
pop
adc
push
sub
and
pop
inc
je
lahf
or
push
in
add
and
mov
push
cmp
or
aas
push
or
add
mov
fidivrl
jp
pop
push
and
adc
orb
jle
add
inc
jp
fimuls
add
jge
call
add
imul
add
popa
mov
fbstp
jne
stc
fsub
add
sbb
or
xchg
loopne
or
nop
add
add
add
pop
jl
add
dec
adc
and
lock
add
std
xchg
mov
jl,pt
add
xchg
and
add
dec
jne
imul
sub
add
sub
add
add
in
ror
add
test
mov
adc
push
push
sbb
inc
mov
xchg
inc
inc
addb
xchg
les
or
xchg
mov
xor
in
lea
orl
mov
enter
ljmp
stc
add
cld
cwtl
inc
test
imull
add
push
xchg
arpl
mov
movsl
jbe
add
icebp
or
js
lcall
mov
das
pop
ret
pop
jne
fsubs
mov
mov
cs
sbb
out
mov
scas
mov
inc
pushf
and
fsubs
rolb
mov
sti
das
add
jns
and
add
mov
sub
mov
or
stos
mov
loopne
sbb
stc
sub
sub
enter
push
dec
adc
push
test
cltd
subl
mov
sbb
mov
push
or
lock
test
cmp
mov
idiv
mov
test
mov
adcl
cmp
xchg
jne
in
popf
push
in
mov
xchg
push
sbb
mov
pop
xor
cmp
mov
out
add
dec
adc
lock
inc
dec
xor
jb
xor
pusha
add
pop
ficompl
mov
out
shll
shlb
mov
aam
in
jae
cmpxchg
xchg
cld
push
jmp
mov
in
pusha
mov
mov
mov
add
lock
jno
add
jns
lea
ret
pop
cmp
rcrb
cmpl
les
add
inc
pop
push
sahf
xlat
loopne
pop
pop
je
push
pop
add
mov
xchg
cmp
cmovns
mov
jb
mov
add
jo
and
out
add
or
nop
cmp
and
mov
inc
push
push
sbb
add
loope
mov
mov
xchg
push
sub
shrb
aaa
int3
sbb
inc
das
and
inc
jl
sbb
fdivl
les
loop
aas
mov
dec
push
pop
clc
jo
add
and
loopne
add
and
pop
add
hlt
push
cld
push
leave
adc
ds
and
dec
mov
xor
jo
add
cmp
push
loopne
add
pop
hlt
pop
inc
in
add
dec
push
pop
movsl
xchg
out
loopne
fbld
pop
mov
fldl
push
xchg
add
sub
mov
add
js
and
mov
cmp
or
bound
push
in
clc
into
loopne
mov
jbe
aas
enter
ret
xor
inc
daa
das
ljmp
mov
pop
jno
add
aam
in
lret
jo
cmpsb
and
imul
imul
jg
dec
daa
ret
cwtl
sub
jo
sarb
add
jge
adc
iret
mov
sub
movb
adc
mov
mov
mov
je
ret
add
pop
push
add
jae
jne
xor
cmp
sub
fdivrs
mov
lcall
aam
cmp
add
outsl
lods
ss
and
push
pop
jp
ljmp
inc
adc
lock
mov
push
xor
es
jnp
xchg
jmp
push
movb
repz
mov
divps
mov
or
pop
adc
rorl
test
jp,pn
cld
dec
xlat
movaps
shrl
push
pusha
fisubrs
add
add
jb
pop
xchg
jne
aas
inc
or
sarw
mov
sbb
cwtl
dec
adc
loopne
inc
pop
add
ret
pop
fwait
jmp
insb
jp
add
cs
sbb
movsb
inc
mov
push
mov
clc
fwait
mov
and
lock
add
or
add
cld
xor
push
stos
and
and
or
mov
pop
lods
notl
jle
nop
xchg
inc
mov
pop
adc
and
lea
rcrb
or
push
mov
add
aas
pop
jge
cltd
pop
xchg
pop
sarb
add
inc
test
or
lods
stos
dec
sbb
sbb
add
inc
xor
or
rcr
adc
fdivl
sahf
ja
sub
mov
movsb
adc
mov
push
fiadds
xorl
fisttpll
jns
adc
incl
out
mov
aaa
push
inc
push
cmpb
pop
cwtl
add
into
dec
add
leave
mov
dec
lock
loopne
arpl
add
adc
add
pop
je
push
repnz
pop
in
lret
sub
stos
sbb
rcr
movsl
cmpsl
dec
jo
cmp
add
fstpl
jge
test
mov
mov
and
stc
hlt
clts
cmp
rcrb
push
arpl
or
int3
cmp
call
movsl
dec
insb
xor
add
cmc
pop
aad
gs
loopne
adc
mov
add
popl
ret
cmp
add
mov
cltd
cmp
imul
pop
loopne
cmp
imul
add
dec
aaa
mov
inc
aad
mov
loopne
add
lret
jo
aas
pop
sbb
fdivrs
jo
add
out
sbb
push
loope
sbb
test
mov
negb
movsl
mov
sbb
xchg
add
gs
sahf
sbb
sub
test
jo
cmp
or
and
incl
sti
push
scas
xor
mov
and
xor
int
jle
sbbb
flds
shld
xor
iret
enter
lods
xor
jb
jae
add
stc
pop
fldl
push
fsub
sarb
mov
add
mov
outsb
out
push
mov
add
stos
mov
aam
sbb
sub
rcrl
ljmp
loopne
sbb
add
in
jo
add
cld
dec
int3
dec
insl
jno
cld
add
xchg
pop
test
mov
add
ret
push
cmp
nop
add
add
xor
cld
sbbb
cmp
shr
or
sbb
mov
repnz
add
lods
mov
lods
push
sahf
push
add
add
jne
ret
push
add
dec
or
add
ret
mov
outsl
jo
out
add
imul
pop
lods
xlat
add
push
pop
lock
push
cs
cmpsb
mov
xchg
pop
je
add
pop
inc
add
add
les
adc
pusha
dec
jl
cld
pop
add
add
and
xor
push
mov
inc
andb
and
popa
cmp
pop
andl
xor
pop
test
add
call
dec
cmp
xchg
inc
mov
outsl
psubusb
or
adc
fdiv
nop
cld
out
pop
and
jg
add
adc
movsl
xchg
mov
pop
add
loopne
andb
movsl
and
addr16
data16
test
xchg
dec
cmc
jo
add
mov
add
and
movsl
aaa
fsubs
cmp
das
ret
mov
lea
jb
adc
outsl
add
into
testl
xor
add
aam
add
add
shlb
push
jno
add
sarl
std
jo
add
ds
loope
aam
push
add
jae
ljmp
and
jnp
push
add
loope
cmp
out
dec
in
nop
sub
pop
push
jbe
add
out
adc
std
lods
add
enter
mov
pop
dec
dec
inc
xor
add
in
pop
sbb
pop
xchg
call
push
jmp
loop
sub
xlat
movsl
mov
push
add
stos
sbb
data16
or
add
cmpb
arpl
xchg
cmc
inc
addr16
add
out
add
cmpb
pusha
pop
test
add
xchg
mov
add
test
add
xlat
ja
fsubl
ret
mov
pop
push
in
cs
icebp
scas
rclb
cli
add
mov
stos
in
icebp
lock
xlat
out
dec
das
jle
jl
mov
mov
sub
mov
ds
add
push
std
add
add
ljmp
pop
out
mov
pop
sbb
pusha
push
imul
sub
mov
mov
add
sbb
push
sub
dec
loop
push
pop
xor
and
add
add
mov
pop
sbb
call
ret
mov
ficoms
lret
add
jg
mov
add
test
movsl
fdivr
xchg
mov
inc
add
lret
stos
sarb
inc
mov
add
loopne
pop
cmp
out
pusha
sbbl
and
pop
lret
stc
rorl
shlb
mov
sti
lcall
and
mov
orb
jp
sub
xor
shl
cltd
pop
sub
and
loopne
xlat
xor
mov
add
enter
popa
cwtl
add
add
mov
pop
stc
add
fnsave
cmp
and
cmp
fiadds
nop
jo
push
adc
sbb
add
or
cmpl
loopne
add
mov
das
push
pop
jns
stos
add
xchg
cs
add
jge
clc
jo
add
sti
das
je
mov
pop
daa
dec
push
sub
cmc
pop
add
rolb
cwtl
ljmp
add
psrlw
sbb
pop
sahf
leave
add
dec
or
loop
subb
add
jg
adc
dec
add
test
addl
pop
aam
push
add
repnz
pusha
push
inc
data16
inc
lea
ds
sbb
push
inc
clc
mov
jp
dec
addb
call
cmp
sbb
daa
add
push
add
pop
add
and
imul
int
loop
sub
xor
out
xor
push
jno
in
jecxz
rcrb
add
pop
iret
fstpl
xchg
add
or
pop
add
sbb
call
cmc
test
fsubl
test
jns
xor
negb
test
into
hlt
mov
push
js
pop
roll
mov
stos
add
or
enter
add
pop
ret
hlt
jge
shlb
jne
pop
shlb
ret
pop
cmova
insl
pop
pop
inc
repnz
dec
or
dec
loopne
xor
rclb
sub
ret
flds
mov
add
xor
sub
dec
mov
int3
pop
inc
add
movb
mov
outsl
mov
int3
arpl
push
stos
out
push
out
pop
ret
jp
cmp
mov
pop
test
add
push
pop
sbb
inc
and
mov
iret
inc
into
mov
add
fs
imul
cmp
lds
inc
add
sbb
push
and
jge
push
jg
add
adc
add
fildl
inc
dec
jne
std
les
aam
dec
mov
test
arpl
data16
fstl
scas
cmc
push
out
mov
ljmp
add
cmpb
adc
sbb
xor
add
push
fdivr
int3
faddp
add
clc
sahf
mov
call
insl
repnz
xchg
xchg
aas
add
add
stc
add
sbb
jmp
fistpll
inc
jp
test
imul
add
hlt
jo
sahf
push
jnp
je
push
fldl
stos
loop
dec
pusha
insl
bound
mov
pop
jg
es
lods
add
or
lret
mov
imul
add
push
mov
fwait
nop
arpl
add
orb
stc
push
or
mov
jmp
aaa
addr16
push
mov
idivl
pop
push
decl
cmpsb
or
mov
or
add
adc
insl
test
dec
addb
sub
dec
fstps
and
xchg
jns
add
int3
fnsave
subl
jo
test
inc
loope
sub
add
mov
push
pop
or
or
inc
push
enter
fwait
and
roll
leave
adc
add
add
jmp
pop
push
test
add
test
das
lock
adc
mov
lock
or
test
stc
lock
add
xor
add
or
add
cld
and
inc
pop
jmp
jno
lods
xlat
jbe
add
pop
fs
cmpb
pop
mov
sub
scas
sti
mov
or
inc
cmp
inc
add
adc
sbb
test
std
cmp
or
lock
sbb
jno
add
mov
pop
gs
sbbb
push
jmp
daa
repnz
sahf
mov
sar
adc
jns
add
mov
inc
das
or
fbld
mov
and
and
stos
mov
add
sti
add
int
fsubrs
mov
inc
test
inc
jle
cltd
jb
clc
roll
je
and
loopne
mov
nop
add
les
mov
mov
push
sub
cmpsl
mov
arpl
les
pop
inc
loopne
out
and
add
xor
outsl
push
cwtl
mov
bound
xchg
and
and
mov
cmp
mov
add
sar
hlt
fisubrl
add
sub
mov
bound
popl
jmp
push
push
xor
mov
sbb
adc
add
inc
daa
jne
test
incb
inc
dec
xchg
scas
mov
test
add
and
jmp
dec
jmp
sub
mov
cmp
add
cmp
bswap
lock
add
push
ds
icebp
jecxz
push
jle
gs
dec
add
das
cmp
movsl
add
inc
pop
pusha
and
bound
mov
add
add
ljmp
lcall
and
shlb
cmpsb
push
add
cmp
lock
aam
sti
gs
shrb
pop
jge
or
ja
xchg
xor
roll
cmp
add
jnp
inc
add
xlat
xchg
cmpsl
sbb
test
push
mov
loop
sbb
xchg
add
adc
push
adc
out
leave
jo
add
call
dec
loopne
add
testb
adc
sub
lcall
xchg
dec
rcrb
rclb
lret
lret
cmpsl
push
adc
and
out
xchg
add
xlat
add
and
xor
or
jbe
push
jmp
jge
fadds
insl
lea
and
les
xchg
pusha
cmp
popl
je
dec
icebp
sub
jp
jmp
inc
push
mov
in
add
and
mov
ja
mov
std
mov
cmp
mull
fistpl
jo
add
in
sbb
inc
add
push
push
jnp
jp
shrb
inc
fistl
or
mov
dec
cld
sbb
dec
push
inc
mov
sbb
out
add
into
nopl
or
sbb
in
xor
xor
sub
int
cltd
inc
add
shll
fildl
add
lretw
cmp
fdivrl
sti
add
hlt
les
sub
out
dec
int3
pushf
mov
cltd
dec
add
mov
shlb
leave
xchg
out
daa
mov
sbb
sub
lds
shrb
clc
mov
mov
and
or
ret
mov
and
xor
xchg
or
add
rorb
mov
ljmp
hlt
add
mov
stos
jns
push
jne
mov
mov
inc
add
mov
or
js
pop
or
aam
mov
push
cwtl
dec
cwtl
outsb
add
or
cltd
pop
push
sti
add
test
push
mov
mov
mov
aaa
xor
and
bound
pusha
pusha
dec
xchg
shrb
mov
or
dec
leave
in
pop
push
dec
mov
mov
add
imul
cmp
push
cmpsb
decl
add
push
jae
out
add
fsts
sub
inc
cwtl
or
or
cld
xorb
jne
clc
add
or
js
mov
adc
cmpsb
es
pop
pop
leave
add
sbb
and
cs
pop
cmpsl
iret
or
mov
xlat
add
mov
test
mov
sub
add
or
jle
cs
add
fists
inc
adcb
xchg
add
xor
jnp
adc
hlt
mov
jo
add
dec
cmp
mov
dec
ja
sbb
cmp
add
cmp
xchg
add
out
xchg
fldt
add
jnp
test
sbb
sbb
adcb
inc
mov
push
cmpsl
icebp
or
mov
push
sti
sbb
inc
fmuls
sbb
lods
and
adc
add
xchg
or
sbb
sub
arpl
adc
mov
inc
add
daa
adc
cmp
push
pop
jo
add
hlt
fcmovnbe
adc
add
lret
add
and
je
fistl
rorb
andl
and
dec
in
mov
adc
push
call
in
add
ss
push
sub
lods
push
dec
mov
lcall
loope
sbb
addb
mov
cld
add
call
hlt
inc
add
inc
push
pop
jne
test
call
pop
push
pushf
and
xlat
rcll
inc
cmp
movsl
add
mov
push
sbb
jle
loopne
sub
fwait
mov
sbb
aaa
lock
push
xchg
call
loop
outsl
das
push
loope
test
flds
jne
xchg
fs
stos
cld
cmp
mov
shlb
cltd
mov
and
push
sbb
push
add
add
mov
jle
jp
add
jmp
jb
enter
aas
inc
lods
adc
pop
sub
lea
adc
sub
push
mov
add
js
and
lret
into
pop
xor
adc
aad
nop
and
pop
sahf
cld
enter
sbb
sub
adcb
mov
xchg
inc
mov
in
sub
add
sub
jnp
pop
rorl
adcb
loopne
dec
push
add
xor
sub
lea
adc
or
cltd
lahf
mov
rcrb
pop
mov
add
roll
push
pop
jge
scas
bnd
lods
pop
pop
cmp
adc
sub
xchg
scas
adc
inc
mov
test
jae
fcoms
sbb
nop
adc
cwtl
xchg
add
dec
mov
inc
add
aam
xor
fimull
jl
adc
and
rep
daa
insl
aas
rolb
jae
data16
loopne
sbb
mov
fadds
pop
fisttpl
sub
add
testb
mov
out
sbb
or
subb
and
inc
insb
add
jno
movsl
jne
sti
popa
xchg
push
sub
mov
adcb
nop
stc
cmp
ds
stos
xor
adc
pop
xchg
push
mov
pop
add
inc
stc
and
fldl
mov
cmp
mov
lea
sub
mov
add
pusha
mov
and
mov
lock
add
adc
xor
add
add
push
scas
lods
inc
ss
add
add
int3
adc
clc
cli
add
cmpsl
repnz
sbbl
pop
loopne
jne
movsb
add
mov
dec
sti
jnp
pop
inc
das
mov
loopne
cmpsl
mov
and
gs
repz
and
shl
push
inc
xchg
clc
xchg
add
outsl
xor
sbb
sbb
dec
xor
push
sahf
pop
sub
xchg
add
xchg
es
push
push
les
cld
sbb
pop
sete
ret
dec
das
xor
hlt
and
notrack
add
adc
pop
or
sysret
dec
xor
sub
add
fldl
repnz
push
xlat
and
nop
fmuls
mov
add
repz
mov
xchg
add
or
call
and
pop
out
ret
mov
clc
ret
mov
incb
cmpsb
mov
popf
adc
sub
sbb
or
xchg
in
repz
dec
add
std
xlat
and
outsl
jns
add
lea
ja
pop
mov
mov
pandn
xor
adc
rol
mov
sti
jp
icebp
push
cmp
add
adc
and
repz
mov
push
jg
and
push
jbe
pop
out
popl
lcall
fidivs
push
rorl
xchg
mov
xchg
add
leave
mov
pop
ret
fisttps
xor
adc
xchg
xor
cmc
push
mov
pop
lret
jle
js
jo
adc
pop
add
ljmp
jne
popa
arpl
insl
cmpb
pop
ret
test
ss
push
cmp
fldl
add
sarl
push
add
les
repnz
aad
aam
add
hlt
je
add
call
imul
orb
push
cmpxchg
lods
std
sbb
in
shlb
call
lock
cmp
notl
fcmove
jecxz
ljmp
sbb
xor
pop
out
loop
loopne
xor
mov
ljmp
fisubl
cmp
add
cmp
jne
pop
jl
je
mov
fstpt
sbb
movb
pop
pop
xchg
sbb
cmc
push
jmp
das
negl
pop
rolb
push
mov
pushf
xor
cmp
les
pop
mov
int3
mov
push
cld
xor
xor
in
jnp
or
add
push
push
dec
stos
insb
movsl
add
mov
sbb
inc
es
dec
sbb
or
mov
aam
mov
fnop
pop
sbb
cmpsb
cs
pusha
int3
test
stos
addb
inc
ljmp
pop
out
nop
add
negl
xchg
scas
and
or
pop
xor
xor
dec
gs
jae
loope
add
out
adc
add
fs
cmp
insb
jne
enter
popf
add
cwtl
xlat
sub
push
xchg
scas
frstor
xchg
or
idivb
mov
xchg
ljmp
lds
in
and
jecxz
adc
inc
mov
push
out
loopne
cwtl
add
dec
dec
push
add
jae
or
or
imul
push
jp
add
dec
xchg
pushf
add
mov
add
xor
or
mov
cwtl
jl
or
cli
popl
xor
jae
add
dec
lret
jb
or
adc
sub
pop
xchg
cld
push
outsl
xor
push
mov
add
test
push
je
or
push
mov
nop
add
or
push
add
mov
sub
insb
hlt
mov
jo
loopne
aas
adc
fldt
or
js
fadd
cltd
inc
push
push
je
leave
pop
dec
or
xchg
xchg
push
jmp
outsl
in
shlb
and
fcoml
jae
push
pop
shr
mov
lret
inc
test
out
sub
cld
pop
lods
inc
clc
in
pop
stos
lret
outsb
fdivrs
mov
or
push
aam
repnz
jmp
pop
push
pop
inc
mov
fs
jno
push
add
inc
aam
add
sub
jmp
movsl
ret
movsb
cmp
bound
pop
cwtl
aam
mov
mov
les
inc
lock
mov
sti
mov
and
jge
push
stc
push
sbb
out
add
mov
jbe
pop
add
cmp
clc
lcall
jmp
add
adc
add
add
mov
leave
cmpsl
xor
and
in
cmp
push
mov
clc
jno
jns
ficomps
adc
pop
jb
movb
repz
add
aas
fmuls
add
std
inc
hlt
lock
pop
popa
cltd
add
or
mov
jo
pop
mov
jp
pop
sub
lcall
dec
jmp
add
dec
js
dec
repnz
add
mov
call
pop
scas
push
add
add
fldenv
pusha
addb
lret
nop
out
ds
dec
clc
xchg
add
add
cvttps2pi
jb
mov
and
jge
cmpb
movsb
loopne
cmp
inc
out
mov
sub
lea
mov
mov
push
filds
mov
and
sub
xor
and
or
mov
sub
nop
repz
mov
adc
add
xor
fs
jmp
add
sub
push
and
inc
call
cmp
pushl
loopne
shll
hlt
mov
jmp
mov
andl
scas
dec
push
les
out
add
or
fmuls
sub
add
int
adc
fldenv
add
cld
test
mov
mov
pop
jmp
dec
inc
inc
add
ljmp
imul
push
push
add
adcl
or
adc
mov
popf
test
dec
mov
hlt
loope
roll
jp
sbb
std
xlat
and
jl
test
mov
roll
das
ficoml
sub
jp
push
fwait
add
stos
xor
add
test
and
aaa
push
mov
and
jle
jne
or
lods
mov
jge
dec
add
push
in
andb
aas
add
cs
pop
in
or
xor
adc
in
pop
add
pop
inc
add
icebp
idivb
mov
cmp
push
adc
pop
add
push
or
stos
test
je
jns
mov
xchg
mov
adc
xchg
les
xchg
pop
sbb
push
in
pop
mov
fbstp
pop
push
lea
cld
xorb
or
adc
xor
inc
jp
pop
add
orb
push
add
cmp
add
or
pop
das
push
sbb
add
xchg
and
cmp
add
ljmp
push
nop
jg
xchg
dec
fisttpl
lods
incl
xchg
push
in
cmpb
sub
xor
sbb
push
push
add
push
test
add
repnz
stos
sub
bound
fsubl
push
add
or
dec
xor
and
dec
push
jg
push
pop
inc
in
cmp
arpl
add
add
adc
pop
pop
mov
push
hlt
pop
push
add
mov
inc
dec
push
push
andb
mov
add
mov
ret
stos
push
xchg
pmullw
mul
add
or
add
dec
imul
in
add
xor
mov
and
xchg
fwait
clc
mov
movsb
iret
jecxz
mov
xchg
add
mov
in
movswl
add
add
imul
andb
pop
add
insl
mov
movsl
dec
mov
add
fisubrl
js
lea
pop
cmp
clc
in
test
mov
fwait
pop
jl
loopne
push
xor
jle
mov
sub
add
pop
cli
insl
int3
je
add
jge
xor
movsl
or
xor
mov
repz
lcall
xchg
iret
dec
add
es
push
orb
xor
cmp
or
out
push
rcrb
cmp
adc
mov
add
mov
scas
add
aas
dec
jmp
movb
add
int3
fidivs
pop
shlb
add
mov
pop
fldt
mov
sub
or
in
xchg
push
sbb
stc
add
hlt
inc
pop
add
mov
aad
add
xor
ret
pop
push
out
jle
add
sbbl
sbb
inc
fldcw
inc
mov
push
sub
push
mov
loope
add
and
sbb
add
in
lret
add
or
cmp
add
fdivs
jp
mov
add
in
inc
rol
jge
push
es
sbb
cmpl
sub
loopne
add
sbb
sbb
jo
cmp
mov
repz
adc
sbb
dec
hlt
or
cmp
xor
aas
mov
mov
add
jmp
sahf
add
cmp
sbb
sub
mov
mov
fs
sbb
cltd
daa
add
fimuls
mov
add
inc
aam
dec
add
mov
data16
inc
sbb
outsl
add
arpl
add
cmpsb
leave
add
sarl
in
inc
test
cmp
adc
shlb
add
push
pop
sbb
in
jbe
pop
mov
inc
pusha
adc
pop
nop
add
dec
mov
shll
pop
adcb
push
arpl
and
cmpsb
movsl
add
fistpll
or
sarb
add
mov
xor
dec
add
cs
out
pop
dec
jo
add
add
sar
and
adc
enter
jmp
cmp
repnz
push
test
loopne
pop
add
pop
sahf
fcompl
loope
ds
sbb
ja
jp
add
mov
xorl
mov
sbb
sbb
add
cmp
xor
add
add
adc
arpl
xor
call
addr16
je
loopne
push
jo
loope
and
scas
sub
add
xor
mov
xchg
push
inc
icebp
inc
fildll
add
into
sbb
nop
or
iret
mov
jno
add
or
mov
incl
add
popa
jnp
sti
sbb
jns
jmp
leave
movsl
jns
sbbb
inc
add
das
lds
inc
cmp
add
pop
lret
lock
and
add
gs
add
mov
sbbb
movb
sbbl
call
adc
mov
push
jo
add
out
adc
loopne
add
int3
iret
sbb
and
out
shl
adc
sbbb
mov
add
jno
nop
lods
addb
jb
sub
adc
add
ja
mov
push
mov
addl
jbe
aad
pop
xor
add
sbb
or
push
shl
cmpsl
xor
mov
dec
stos
or
xor
flds
xchg
movsl
sub
add
add
mov
enter
lods
popf
add
jp
scas
add
and
ljmp
in
clc
repnz
enter
cs
adc
xchg
arpl
cmp
push
add
shlb
add
ret
and
mov
push
add
je
inc
sbb
std
mov
pop
add
mov
sbbb
sub
test
xchg
add
xchg
sub
and
mov
cmpsb
shlb
dec
ltr
cmp
inc
stc
push
cmp
add
pop
push
cmc
psrlq
mov
cmp
jl
std
dec
xchg
lea
pop
cltd
pop
and
test
xchg
jl
inc
addl
call
fildll
mov
clc
add
cvtdq2ps
jb
je
add
sbb
in
add
in
add
xchg
fistps
xchg
pop
sti
inc
fldcw
leave
cli
add
inc
sbb
xor
xchg
dec
pusha
dec
rorl
adc
sbb
push
add
ljmp
dec
pop
loopne
aad
add
sub
mov
or
sub
stos
es
clc
rolb
dec
adc
jne
rcrb
test
das
jns
or
scas
or
cmp
mov
ds
push
jo
xlat
pop
and
add
jne
mov
outsb
or
and
push
add
or
xchg
lods
jge
lret
fsubrs
sbb
or
idivb
mov
add
add
outsb
hlt
inc
ja
add
fwait
rorl
inc
add
into
pop
sarl
cmp
nop
push
insb
dec
bnd
push
cwtl
inc
cwtl
int
hlt
inc
or
loope
or
xor
hlt
dec
pop
add
neg
test
hlt
outsb
xor
fstps
pop
fimull
aaa
rolb
add
mov
sbb
push
xor
pusha
je
adc
add
in
jo
cld
pop
xchg
fimuls
jb
sbb
pop
add
shlb
inc
add
jmp
test
inc
mov
adc
add
dec
popa
xchg
jp
and
add
adc
mov
adc
fchs
js
rolb
cwtl
xor
cmp
xor
push
sbb
jge
add
ret
lea
aad
jmp
push
ljmp
das
inc
adc
mov
jbe
add
cmp
lods
pop
push
pop
test
push
daa
mov
add
inc
adc
je
gs
cmp
setne
nop
daa
loopne
ljmp
stc
and
xchg
ss
adc
cmp
push
shll
mov
ret
pusha
loop
adc
mov
jo
es
xor
inc
enter
mov
out
add
xor
mov
out
dec
fisubs
xchg
fnstcw
xchg
sub
adc
pop
mov
insl
dec
sbb
call
add
lods
stos
loopne
push
or
cmp
out
insb
dec
xor
sub
das
fldenv
adc
inc
add
fsubrs
inc
xlat
add
sub
sbb
pop
push
pop
cmpsl
or
add
arpl
scas
cwtl
mov
add
clc
int3
cmp
cmp
out
fldl
dec
and
mov
por
aam
aaa
sbb
shll
loop
sbb
das
adc
shlb
add
add
cld
stc
sub
cmp
lcall
out
xbegin
test
in
test
dec
pop
adc
jb
add
cltd
adc
aas
scas
mov
adc
jmp
push
stc
out
hlt
xor
xchg
inc
xor
insb
add
fs
or
or
add
and
sbb
sbb
cli
xchg
imul
pop
jnp
jnp
push
jbe
stos
inc
hlt
or
call
mov
fstps
mov
inc
cmp
inc
mov
dec
add
fsubs
push
add
daa
les
inc
cmp
pop
mov
inc
sbb
lea
testb
add
cs
enter
jle
adc
cwtl
push
jbe
movsb
enter
scas
sub
adc
add
sub
les
push
and
adc
add
jp
loopne
cs
and
mov
jne
mov
js
loop
sub
subb
icebp
clc
add
dec
sti
mov
inc
inc
test
xchg
sub
jo
dec
cld
mov
inc
sbb
add
sar
adc
add
mov
xor
xchg
repz
movsb
incb
lods
dec
adc
push
jbe
cmpsl
push
pusha
push
or
mov
add
sub
add
shlb
mov
mov
xor
lret
sub
dec
add
mov
stos
add
push
push
or
addr16
mov
add
xchg
add
push
mov
add
adc
add
or
jbe
fcompl
or
adcb
insb
add
pop
out
jl
mov
addr16
sbb
adc
insb
jle
add
in
add
imul
add
or
test
xlat
inc
rolb
adc
dec
sbb
adc
inc
add
insl
sub
test
push
mov
xchg
fwait
xor
iret
ss
sbb
sbb
sub
add
daa
imul
mov
inc
cmpb
in
or
pusha
pop
cwtl
test
push
cli
int
movb
dec
out
stc
push
cmp
mov
mov
add
ss
add
add
dec
jne
ret
pop
fsubrl
push
push
mov
addb
mov
or
scas
jne
push
add
push
cld
cmpsb
lcall
sub
inc
sbb
sbb
add
cmpb
or
sbbb
jne
push
je
ficoml
ja
add
pop
outsb
dec
sub
jle
ja
push
xchg
loop
sub
add
stc
dec
add
lea
and
movsb
push
mov
nop
mov
cmp
sub
lods
out
add
mov
sub
xchg
test
and
add
sub
jno
mov
xchg
pushf
imul
sbb
arpl
lret
add
lcall
inc
xchg
cli
add
push
mov
push
addb
ret
or
lock
in
and
mov
add
stc
inc
insb
adc
add
push
popf
add
lock
das
sbb
outsl
add
jo
clc
mov
add
dec
clc
jb
add
sti
popf
in
inc
and
dec
sub
mov
cmp
push
inc
addb
sub
in
push
cmp
rolb
popa
out
nop
add
jmp
movsb
sub
sub
jne
movsl
mov
ja
cld
loop
jl
clc
pop
mov
add
outsb
mov
ds
pop
test
jmp
mov
or
rorl
jecxz
jnp
andl
shlb
push
or
add
sldt
shlb
add
into
xchg
aam
mov
fadds
out
scas
push
fsub
add
inc
fwait
xor
or
inc
out
sbb
sbb
add
jmp
fdivr
jl
lea
adc
ret
fistpl
add
jecxz
sbb
mov
pop
stos
adcb
js
test
fwait
pop
cld
loope
sbb
test
sbb
lcall
loop
mov
daa
inc
mov
xchg
or
inc
adc
shlb
jo
jle
pusha
inc
pop
cmc
fnstsw
xchg
cltd
push
shr
inc
or
aaa
cwtl
mov
aas
in
stos
push
sbb
xor
rcrb
push
cmc
loop
shrb
and
negl
mov
test
add
inc
add
outsl
loope
adc
sbb
lods
push
dec
stos
mov
movsb
inc
cmp
xchg
pusha
enter
out
daa
enter
call
je
outsb
and
scas
stos
xchg
loopne
aam
pop
nop
mov
js
adc
lods
or
jo
test
enter
sti
and
add
pop
xchg
cld
push
mov
ljmp
ja
lds
dec
in
push
add
or
js
rorb
xlat
lahf
push
aad
repnz
jle
add
jb
inc
add
lcall
pop
lods
popa
jge
inc
jo
xor
test
push
pop
and
push
mov
add
add
xor
sbb
daa
xor
test
inc
add
xor
add
dec
or
lea
fimull
sub
push
jg
add
stc
pop
das
out
rolb
mov
es
sbb
cmpl
pop
add
das
loopne
inc
xor
sbb
jmp
cmp
cmp
ja
lea
cmp
lret
add
mov
cmpb
adc
jmp
add
vprotd
jnp
add
push
test
fsts
nop
stos
add
hlt
mov
xchg
add
mov
outsl
negb
mov
icebp
add
jle
or
ds
cmpb
or
test
add
dec
call
xorb
sbb
or
lock
add
pop
push
inc
cmp
and
add
add
das
loop
push
adc
jo
or
add
push
cmc
mov
in
mov
adc
adc
in
xorl
dec
push
mov
pop
add
cmp
fldl
scas
dec
xor
sbb
popf
jmp
ds
add
mov
ror
mov
mov
cmp
dec
mov
pop
add
add
jbe
icebp
or
dec
add
and
push
pushf
mov
out
push
add
aas
mov
mov
add
add
nop
or
out
adc
inc
jmp
inc
jne
lods
mov
push
sbb
arpl
pop
test
jg
xor
or
rclb
cmp
xor
sbb
inc
enter
sub
cmp
add
imul
push
add
in
loopne
pop
jnp
adc
mov
jmp
outsl
push
add
pop
mov
xor
fwait
push
push
or
test
mov
cltd
ss
movsl
in
clc
jae
add
mov
adc
and
jg
cmp
xchg
cmp
mov
mulb
add
ficompl
or
inc
ds
add
movsl
push
aam
xchg
clc
insl
in
std
test
leave
aas
xchg
add
mov
push
test
add
subl
add
mov
movntq
out
sbb
loopne
and
stos
int
pop
filds
sahf
add
push
sub
sub
sbbb
fiaddl
fs
cmp
shl
add
ja
sbb
jmp
imul
lahf
in
adc
fidivs
push
loopne
call
mov
dec
repnz
lret
movsb
cmc
nop
out
int3
test
in
jno
cmp
mov
xchg
nop
call
jle
pop
fs
insl
add
imul
jp
jl
fstl
cld
add
push
insb
imul
jg
mov
out
ret
in
push
sbb
jno
and
dec
loop
add
mov
shlb
addb
sub
loop
fstps
insl
jo
cmpsb
test
shrl
push
push
push
or
pop
or
push
mov
pop
push
pop
fwait
cmp
or
fcoml
psubw
push
and
daa
add
addb
inc
into
popf
jb
in
out
jge
jne
adc
test
mov
imul
cld
pushf
jno
cmp
mov
dec
push
push
add
push
pop
pop
xchg
lcall
out
ljmp
sbbl
fistpl
push
push
clc
cmc
add
fwait
outsb
fdiv
test
sbb
dec
data16
sub
test
bnd
fimull
add
cmpsl
jp
push
xchg
in
add
add
std
push
mov
push
imul
xchg
pushf
pop
dec
inc
pop
out
loopne
jmp
call
cmp
cmp
sahf
nop
ss
fidivl
xchg
sub
les
add
pop
mov
pop
xor
cwtl
mov
jmp
add
test
add
cmp
ja
jbe
jb
mov
pop
pop
mov
mov
add
sbb
jne
add
loope
pop
dec
push
pop
mov
mov
in
add
fnstsw
mov
jo
int
pop
lea
xor
lahf
mov
andl
xchg
mov
ljmp
sarb
cmp
ss
inc
inc
arpl
add
js
xor
fcompl
es
jbe
pop
pop
ds
mov
stos
push
incb
fidivs
cli
pop
pop
in
jmp
rorl
mov
call
dec
add
movsl
push
test
addb
jge
flds
jecxz
adc
add
add
jle
rclb
xchg
push
dec
jp
add
push
pop
in
test
out
pop
sub
pop
es
rcrb
jmp
cmp
add
push
mov
xchg
jno
push
out
test
call
and
dec
xlat
outsb
push
dec
pop
lock
in
pop
lret
xorl
push
and
mov
mov
jmp
lock
mov
add
inc
jle
mov
int3
add
pop
fcoml
add
out
arpl
cmp
stc
add
jmp
ror
push
pop
mov
in
and
xchg
mov
dec
decb
fldl
jmp
lods
stos
xor
test
movsb
sar
cmp
cmp
ror
ja
add
jp
bound
loope
into
arpl
fsubrl
xor
dec
loope
add
je
ror
pop
pop
add
or
add
in
iret
scas
mov
in
lods
hlt
aad
push
insl
cmp
call
pop
shlb
mov
and
pop
push
movsl
sbb
enter
daa
add
cmp
mov
loop
add
loopne
pop
push
dec
lock
mov
inc
jnp
add
addr16
rcl
add
xchg
xchg
add
add
cld
call
loope
fnclex
testl
mov
xchg
rcl
adc
rcl
add
add
push
outsl
jae
add
test
add
jmp
pushf
ljmp
lds
jne
cli
jg,pt
mov
int3
mov
and
ss
fwait
or
sbb
filds
jecxz
xchg
data16
movsb
mov
add
xor
mov
add
add
push
add
aam
aad
fmuls
jecxz
mov
add
dec
or
xchg
xchg
add
cli
pusha
stc
clc
fs
cld
lahf
aas
adc
cmp
mov
fsubs
mov
sub
or
out
sbbb
and
add
adc
sub
ror
daa
push
add
std
stos
scas
repnz
psubsb
dec
mov
jo
bound
push
int3
leave
dec
lret
movb
pop
and
add
mov
pop
bnd
ds
lret
mov
popa
cltd
lcall
test
xchg
add
adc
or
hlt
ss
xchg
cmc
popf
add
test
add
lret
add
pop
cmpl
mov
pop
xchg
add
lods
test
in
cmp
and
adc
inc
andb
jo
insl
inc
ja
je
jne
rcrb
sbb
inc
dec
or
mov
add
cmp
movsb
movsl
mov
dec
add
add
inc
lods
mov
add
cmp
add
rorb
lods
stos
push
sub
mov
xor
mov
push
adc
andb
sbb
xor
mov
sub
or
add
add
sbb
orb
popf
mov
fsubp
lds
in
inc
xchg
lods
pop
daa
sub
push
cmpsl
movsl
add
dec
dec
ret
add
push
loop
xor
and
push
push
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
sbb
push
andb
jbe
pop
mov
in
out
xchg
dec
test
sbb
ffreep
test
add
orl
add
test
mov
adc
call
arpl
add
inc
pop
xchg
outsl
insb
sub
add
and
cmc
pusha
fsubr
js
repz
add
out
addr16
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
mov
lcall
push
add
push
mov
xchg
push
add
cmp
insl
add
and
cwtl
xchg
push
push
aaa
xchg
in
sub
icebp
rol
lcall
nop
ret
add
stos
lods
or
xor
ljmp
in
add
insb
and
mov
pushf
xchg
push
add
cmp
xlat
mov
lret
add
jp
jbe
xchg
aaa
mov
cmp
addb
adc
aas
push
add
icebp
cwtl
insb
out
jmp
push
add
test
xor
sbb
xchg
mov
push
jle
fs
adc
clc
add
jge
push
cmp
rcll
roll
fldt
dec
dec
std
fmuls
mov
or
add
or
sarb
sbb
jge
inc
test
mov
add
sub
pushf
add
out
jmp
mov
add
xlat
int
loopne
lret
aam
xchg
xchg
or
pop
cmp
in
clc
add
inc
add
dec
or
inc
mov
in
cmp
jmp
add
push
mov
pop
add
es
xorl
dec
cmp
add
inc
inc
jne
popa
mov
add
push
cmp
xchg
cmp
sbb
add
cs
pop
cmpsb
pop
leave
inc
sbb
sti
push
repz
add
in
push
pop
or
ret
outsb
mov
mov
mov
fdivrs
insb
ret
add
aaa
jno
xchg
imul
insl
inc
or
mov
jg
add
lret
int3
test
jmp
lea
mov
pop
sti
cwtl
scas
rolb
das
cmp
mov
js
add
nop
stos
jge
outsb
sbb
mov
mov
sub
cld
or
rcr
lods
dec
xor
jmp
enter
and
fwait
out
xchg
mov
add
call
add
pop
cmpl
out
les
and
cmpsb
aad
cmpsl
aam
add
and
and
add
adc
imul
add
jmp
sbb
pusha
pop
sarb
loope
bound
int
dec
add
xchg
add
cmc
aaa
aad
cwtl
sub
lahf
stc
scas
dec
xchg
sbb
aas
dec
imul
xchg
mov
or
and
into
pop
push
shr
repz
clc
jmp
mov
xchg
adc
cli
bound
lock
mov
adc
push
and
fucomi
in
and
push
imul
sbb
dec
insb
clc
add
lret
xchg
xchg
jg
dec
add
repz
stc
scas
aam
xor
std
xor
out
nop
fidivl
xchg
adc
insb
bound
fcom
push
rolb
mov
dec
adcl
pop
pop
and
dec
mov
lahf
and
xchg
aam
mov
sbb
in
add
cmpsb
hlt
dec
and
iret
dec
push
aad
push
cli
push
inc
cmc
fldcw
scas
sbbb
ss
lcall
cltd
lods
xchg
mov
or
addr16
sub
movsl
ficoml
and
mul
add
pop
add
sbb
test
jmp
push
dec
or
add
mov
add
lock
add
pop
adc
loopne
adc
cmp
cmp
sbbl
mov
daa
pushf
pop
dec
sbb
cmp
jae
add
cwtl
jb
imul
ret
pop
addb
psubusb
and
popa
ljmp
loopne
fstps
sbb
push
xchg
inc
jae
ja
jb
loop
add
add
and
xorb
push
add
dec
sbbb
add
mov
insb
adc
xchg
aam
adc
xchg
aas
and
pop
insl
jmp
aam
jb
cmc
mov
lret
arpl
mov
fs
daa
push
sar
imul
mov
sub
dec
faddl
jo
mov
mov
or
cmpsl
xor
add
in
or
push
push
addb
adcl
mov
dec
pop
jno
pop
inc
or
jne
mov
mov
add
mov
jge
rolb
xlat
sbb
dec
add
arpl
mov
dec
in
add
xchg
shll
sub
mov
cmpsb
push
je
add
cs
add
imul
push
mov
cmp
and
and
mov
add
or
add
add
in
sbb
cmp
stc
pop
cmpsb
mov
pop
xchg
lods
sarb
mov
push
push
jns
pop
sub
add
push
xor
and
lock
add
dec
add
fwait
incl
add
mov
fcomp
in
cmp
add
mov
enter
inc
leave
dec
call
add
xchg
pop
mov
pusha
out
hlt
add
sbb
ror
push
pop
testl
lret
rclb
mov
daa
incl
sub
aaa
xchg
lea
shrl
aad
les
inc
fstp
or
jge
add
clc
sub
cld
add
out
add
cs
lock
add
das
aam
adc
push
add
jno
add
jmp
pop
push
inc
arpl
pop
jbe
pop
lret
add
xchg
cmpsb
call
xlat
push
or
loopne
test
jge
std
ljmp
push
dec
pcmpeqw
adc
movsl
cmp
xchg
arpl
and
mov
push
test
call
pop
dec
sub
in
push
push
pop
loop
push
xor
dec
jne
iret
push
movsb
inc
adc
or
push
adc
faddl
outsl
jb
enter
add
sbb
out
les
aaa
xor
in
dec
popl
jbe
push
xchg
cld
dec
loopne
jp
add
leave
jns
xor
add
push
lret
pop
add
sbb
cld
xlat
imul
or
push
mov
push
lock
jno
add
xchg
adc
add
cmpsl
adc
orb
add
cmp
pop
cltd
jecxz
fdivrs
out
add
and
sbb
enter
add
mov
adc
dec
jle
clc
add
jl
stos
and
inc
add
mov
add
jb
jns
repnz
cmp
or
popa
jecxz
mov
icebp
fs
nop
jae
inc
popa
adc
xor
add
sub
jno
and
push
sub
jae
adc
sbb
mov
push
pop
jo
cmp
xchg
insb
outsl
jns
xchg
sub
pop
cwtl
cs
lret
push
rcl
bound
stos
add
pop
jp
add
cmpb
repnz
add
xor
shrd
lds
push
add
leave
or
stc
and
cmp
add
aaa
inc
stos
lock
jne
cwtl
pop
cld
xchg
cli
out
add
sbb
lea
test
les
dec
and
pop
test
jg
add
clc
sbb
sbb
pop
daa
add
inc
out
cwtl
test
cmpsb
adc
loopne
cmp
aas
sub
imul
jnp
aas
mov
add
call
cmp
sti
cmp
movsb
add
scas
ja
push
mov
fstpl
mov
cmc
sub
sbb
add
movsb
mov
add
mov
clc
les
hlt
in
test
lds
add
daa
adc
imul
and
icebp
enter
add
jnp
cmp
test
jp
jbe
pop
lds
shll
jmp
mov
and
add
lea
xchg
adc
inc
cmp
gs
adc
movsl
jl
mov
cmpl
jne
aaa
std
and
dec
lahf
add
lods
sbb
add
mov
int3
add
mov
add
push
sub
lds
dec
incl
adcb
pop
int
xchg
xor
mov
push
push
aam
and
icebp
cmp
push
add
out
and
lock
daa
or
add
pop
sub
adc
pusha
out
test
add
fstpl
push
and
roll
or
out
shl
stos
add
mov
scas
add
in
ret
inc
push
cwtl
push
mov
in
jecxz
mov
clc
stos
jge
add
push
imul
ja
enter
add
cmp
sbb
icebp
dec
push
push
jp
and
and
or
xlat
jnp
and
incb
xchg
sbb
dec
movsl
cmp
dec
add
cs
adc
xor
add
add
pusha
ret
mov
mov
dec
add
ja
aas
repz
add
hlt
jg
jno
rorl
push
and
jbe
add
inc
enter
adc
add
in
or
xor
push
mov
add
inc
sbb
add
mov
xchg
loop
mov
or
add
xor
add
repnz
rcl
jns
movsl
add
cmpsl
clc
mov
add
rorl
hlt
push
addb
xchg
push
fcoms
mov
and
xlat
scas
mov
lcall
pop
add
jne
push
jp
push
add
hlt
sub
pop
sti
insl
mov
pop
inc
movsb
xor
or
in
jbe
push
in
lods
loopne
clc
imul
pop
and
inc
divb
push
popf
fdivl
jge
jae
adc
or
pop
push
leave
popa
and
ja
mov
sbb
jo
xchg
jne
add
into
jge
adc
cmp
mov
and
test
jmp
mov
mov
lods
mov
or
add
xor
cmc
dec
add
xor
test
ljmp
imul
psubusb
sbb
subb
pop
push
add
out
sbb
clc
push
jg
mov
clc
pop
cmp
add
push
rcll
pop
sub
mov
or
daa
push
sub
jmp
cmp
movsl
test
cmp
push
cmp
mov
mov
ret
push
push
or
sbb
loop
xchg
mov
push
je
shlb
orb
and
loopne
mov
out
inc
inc
add
inc
mov
mov
push
cmp
inc
xchg
adc
sbb
in
add
inc
sbb
stos
adc
add
xchg
add
hlt
add
sub
and
add
push
add
xchg
cmpsl
ja
loopne
dec
inc
inc
cmp
add
pop
mov
or
inc
pop
pop
xor
je
mov
incl
mov
rcr
add
or
and
dec
test
jnp
sbb
clc
roll
xchg
pop
inc
cmp
mov
pop
cltd
xor
xchg
sbb
adc
add
and
and
je
repnz
enter
push
add
inc
or
call
in
jl
push
xor
adc
inc
add
sub
mov
jne
out
mov
jne
add
fbstp
mov
push
lods
cmpsl
sub
jne
pop
xlat
clc
stos
xchg
pushf
and
ds
iret
add
inc
jne
add
je
push
pop
push
fbld
xor
and
sbb
dec
dec
push
push
adc
fstl
shlb
in
pop
dec
add
dec
cmp
dec
negb
jne
hlt
adc
inc
cs
rorb
or
adc
jbe
ja
cmp
sbb
inc
xor
sub
dec
pop
xchg
jae
and
lcall
and
mov
and
aad
jns
sbb
sbb
repnz
nop
xor
cld
xor
in
cli
inc
cwtl
add
jle
mov
push
xchg
adc
add
xchg
testl
and
push
lock
adc
xor
jmp
sbb
and
aam
testb
lds
into
fisttpll
testl
pop
mov
cmpsl
dec
sbb
push
andb
add
jg
lea
inc
mov
ja
mov
add
pop
cltd
sbb
or
mov
enter
fwait
inc
int3
lret
mov
push
outsl
add
les
sbb
add
test
neg
pop
add
lds
arpl
sub
or
outsl
insl
loopne
add
imul
add
cmp
inc
adc
faddl
into
mov
jmp
adc
add
xlat
movsl
sarl
mov
jb
mov
pop
int
xorl
movzwl
loop
loopne
mov
mov
and
add
lahf
ret
mov
adc
push
cmpl
mov
mov
popf
and
add
das
mov
jbe
fwait
dec
loop
in
out
xchg
add
or
inc
ja
rolb
mov
mov
add
or
mov
leave
loop
fprem1
stc
sbb
shlb
add
lahf
hlt
decb
call
sub
sub
arpl
add
clc
in
or
pop
dec
mov
flds
cld
mov
rorl
adc
ret
call
jnp
push
sti
mov
xor
push
add
imul
arpl
loopne
addl
dec
es
xor
push
add
shl
add
je
push
push
jge
lret
jp
mov
push
rcrb
dec
int3
cmpl
jge
cmp
ret
lret
out
push
or
cld
add
daa
sub
pop
adc
pop
lahf
or
cmp
jge
mov
xor
add
daa
pop
jb
inc
jbe
add
cmp
jne
mov
add
pop
outsb
adc
xor
add
cwtl
cmc
repnz
clc
jo
add
add
les
mov
dec
pop
into
inc
fsub
add
add
rcrb
mov
insb
daa
mov
inc
add
call
test
add
jl
mov
push
neg
add
shlb
add
push
jmp
cmp
add
fmul
pop
fimull
stos
dec
ss
lret
testb
mov
test
dec
push
sbb
sbb
cmpl
or
push
push
pop
ret
sub
in
enter
mov
jmp
mov
xor
nop
int3
rclb
mov
jge
adc
js
jb
push
pop
add
push
xor
add
loop
add
mov
inc
shll
add
xor
out
rclb
inc
in
dec
orl
mov
sub
cmp
inc
enter
fld1
cs
add
mov
mov
pop
movsb
fildll
push
add
lret
push
adc
xor
fdivrp
add
pop
mov
dec
mov
add
add
out
stc
mov
sub
faddl
xchg
pop
movsb
shlb
rorb
hlt
add
lea
add
sub
jo
ret
xchg
sbb
xor
add
sub
inc
xorl
or
add
mov
pop
add
fs
xor
cmp
rcrb
cmpsl
cmc
cli
rcr
fildl
and
fstl
mov
push
or
or
or
aas
add
push
sub
xor
sub
sub
push
inc
sbb
test
push
or
or
fldl
aas
and
pusha
push
jp
divb
rol
and
pandn
dec
popa
filds
or
sbb
inc
sub
adc
xor
adc
out
xchg
push
add
aad
add
outsb
push
mov
push
pusha
aad
mov
push
invd
add
inc
stc
add
ds
xor
daa
add
mov
dec
dec
mov
push
mov
movl
mov
adc
add
inc
add
dec
ds
pop
pop
or
dec
jne
mov
add
test
repnz
mov
enter
out
test
or
add
or
ret
aas
jmp
mov
push
inc
nop
jae
sbb
ss
arpl
or
in
stc
or
aaa
and
clc
lea
mov
mov
adc
adc
xchg
jns
ud2
enter
and
jno
sahf
adc
jge
in
in
and
fsubs
inc
leave
cmpl
andl
xchg
ficoms
jmp
loopne
sub
pop
ret
or
movsb
sbbl
cld
stos
add
pop
sub
xchg
daa
mov
sub
add
ds
sarb
push
or
into
xchg
fwait
rorb
pop
pop
jl
inc
sub
cmpsl
or
and
jp
adc
aam
orb
jl
je
push
enter
add
or
jmp
mov
push
in
add
pop
cmp
icebp
xor
mov
fldt
mov
mov
sbb
cmp
dec
in
add
rorl
pop
rcll
enter
and
push
xor
lds
sbb
cmp
movntps
and
les
mov
add
loop
add
push
or
sub
pop
dec
or
add
pop
or
and
ss
inc
pop
mov
shlb
jle
add
test
shrl
adc
pusha
mov
cmp
xor
bound
sub
and
inc
in
push
movsb
xchg
sbb
xor
pusha
pop
xchg
push
rolb
insl
loope
dec
add
xor
out
cmp
dec
lock
inc
inc
mov
lods
nop
pop
jae
jnp
pop
aam
xor
push
xor
jbe
ljmp
mov
adc
mov
cmp
xor
das
fcom
int
add
pop
pushf
lods
add
fisubrs
mov
je
mov
sbb
inc
add
leave
test
pop
pop
mov
lds
mov
pop
lods
add
cs
sub
jle
lock
cmp
add
popw
add
or
test
add
inc
ror
adc
lock
cmp
and
xchg
sub
pop
ret
in
xor
pop
inc
lock
add
jl
lods
cmp
jns
xor
dec
loopne
sub
add
cmp
popa
inc
pop
xchg
add
pushf
ss
int
cmp
das
add
mov
ds
sbbb
pop
inc
aam
add
gs
lods
mov
aas
and
movsb
loop
add
addb
adc
popf
js
inc
add
pop
aam
add
and
jmp
test
lods
aas
or
mov
add
add
pop
inc
jno
adc
add
out
or
add
push
pop
scas
sub
jge
cmp
insb
mov
adc
inc
test
lds
jne
insb
xchg
jns
or
nop
mov
in
cvttps2pi
add
adc
cmp
mov
xchg
dec
inc
jle
pop
icebp
insl
sub
cld
add
sbb
push
push
sub
xor
add
pslld
pop
in
das
sbb
jl
lcall
and
xor
add
xor
mov
add
ja
and
mov
xor
inc
push
aas
lods
pop
inc
hlt
inc
cmp
add
adc
cld
test
psllw
popa
outsb
add
gs
lahf
sbb
push
jne
outsl
in
ja
add
push
dec
and
pop
xchg
cltd
add
ds
xchg
add
jo
inc
outsl
and
jb
je
jne
in
js
add
adc
push
inc
dec
cmp
inc
test
mov
in
mov
push
out
fs
pcmpeqd
add
jnp
popa
je
push
jp
add
pop
add
xchg
mov
dec
pusha
cmpl
outsb
jne
sbb
std
imul
loopne
xchg
cmc
in
or
imul
je
cmpsl
adc
test
arpl
jmp
mov
xor
jne
dec
js
and
mov
mov
popa
subb
and
sub
adc
adcb
daa
cmp
add
add
xchg
adc
add
mov
add
adc
add
das
cmc
jg
stc
and
add
sbb
or
mov
lahf
fst
shlb
js
in
lret
add
xor
push
pop
mov
add
push
mov
addr16
adc
mov
pop
mov
jne
push
mov
inc
mov
mov
lea
add
add
pop
in
xor
or
loopne
pmulhuw
and
inc
xchg
and
add
jge
test
push
jo
push
out
shll
mov
js
js
add
pop
dec
push
mov
test
inc
test
add
and
add
mov
push
in
jb
mov
into
loopne
cmp
add
sbb
push
cwtl
dec
dec
add
sarl
adc
lods
into
add
inc
mov
adc
or
jne
cmovne
adc
loopne
pmaxub
shrb
pop
pop
sbb
pop
int
fcoms
add
sub
insb
inc
decb
adc
je
fwait
push
and
add
call
pop
dec
cmp
sub
subl
pop
pop
jae
mov
pop
inc
cs
add
push
sub
and
mov
xor
les
sbb
cwtl
adc
or
mov
push
add
mov
rclb
add
cmp
mov
ss
and
add
addb
ljmp
jle
sbb
dec
sbb
inc
xchg
mov
rcll
js
jae
outsb
add
dec
bound
dec
mov
xchg
cmp
test
sub
add
push
push
arpl
push
lea
mov
push
pop
test
mov
xlat
add
xchg
test
dec
or
in
add
xchg
add
push
lods
add
lods
mov
mov
mov
movsb
pop
mov
nop
xchg
mov
les
or
pop
cmp
xor
jo
xchg
add
fstl
fs
out
out
cmp
add
or
sub
mov
jmp
xor
lret
insl
sub
in
lds
xchg
jl
invd
pop
adc
adc
or
clc
call
adc
cmp
movsb
add
add
inc
sbb
loopne
adc
ja
jno
add
dec
xchg
sbb
jb
push
pusha
mov
xor
fs
imul
dec
ret
das
and
jo
inc
add
mov
cmp
fs
xor
push
sbb
enter
jns
or
dec
jo
cmpsb
sub
adc
cmp
push
or
add
xor
inc
pop
das
jecxz
pop
test
call
add
lret
orb
stos
arpl
push
mov
add
adc
cmp
jmp
pop
adc
stos
mov
rorb
push
or
arpl
test
ret
mov
add
pop
mov
dec
add
shrb
xchg
in
and
nop
adc
pop
or
sbbb
adc
cmp
dec
add
pusha
mov
add
inc
and
push
shlb
dec
add
mov
mov
and
push
jmp
xchg
push
add
jns
aad
jno
add
ljmp
xchg
hlt
mov
xchg
sbb
push
add
sbb
mov
adc
repz
ret
cli
mov
xchg
stos
orb
dec
add
push
popa
jb
clc
fisttps
lahf
sub
dec
sti
aam
pop
jg
add
push
outsb
in
cmp
test
add
add
iret
xchg
jle
data16
push
ret
icebp
and
pop
and
pop
cwtl
push
add
dec
inc
and
fadd
rorb
cmp
push
lcall
dec
add
enter
dec
or
add
pop
and
push
mov
add
out
repnz
jp
dec
sub
jnp
dec
gs
cmp
sub
jmp
ja
pop
mov
or
orb
add
clc
sub
hlt
cld
rclb
inc
pop
in
in
xchg
loopne
or
arpl
push
pop
push
subl
jne
sbb
fwait
mov
adc
jb
mov
xchg
mov
mov
pop
stos
test
xchg
or
pop
inc
outsl
insl
sbb
add
pushf
sub
cld
loop
add
jo
or
shrb
movsl
add
sub
pop
unpckhps
xchg
jb
add
inc
popf
jo
aaa
mov
aam
push
and
jl
sub
hlt
sbb
inc
arpl
adc
xchg
add
xchg
mov
inc
cmpsb
out
push
mov
xor
push
stos
jne
cmp
add
and
jb
insb
sarb
xor
add
pop
loope
jo
pop
add
adc
xor
loopne
xchg
cmp
and
sub
jae
inc
cmp
and
outsb
dec
mov
push
nop
push
les
xchg
movsb
cmp
jo
add
push
icebp
pusha
cmp
int3
push
in
cmp
in
dec
mov
shl
stos
arpl
imul
fs
cld
mov
mov
loopne
loopne
adc
sahf
add
pshufw
ret
xor
add
sbb
adc
push
pop
sbb
test
sbb
and
ret
dec
mov
mov
xor
pop
pushf
incl
adc
cmp
and
add
add
bound
push
clc
add
jl
push
psubsb
xchg
add
jle
push
pusha
mov
and
add
xor
push
mov
loopne
je
add
jg
jp
sbb
mov
xchg
aad
sti
pop
stos
mov
or
push
push
pop
add
push
cmc
add
inc
adc
fstp
addl
adc
sbb
icebp
add
outsl
cli
loope
iret
pusha
add
cld
cmc
mov
push
cmp
clc
fwait
pop
push
lea
insb
ss
imul
std
mov
les
aas
push
add
fistpll
fcompl
and
dec
test
aas
cmpsl
aam
sub
add
fs
cli
setg
adc
repnz
sub
loop
loop
mulb
add
shlb
pop
pop
add
push
push
mov
dec
shr
jo
mov
jg
pop
add
jb
adc
fmuls
add
hlt
add
push
or
or
ret
add
mov
in
add
xor
addb
mov
or
cwtl
sub
cld
rolb
dec
mov
jns
inc
nop
dec
add
je
mov
rorb
movl
adc
testb
or
add
je
mov
int
mov
clc
pmuludq
ja
add
or
jae
call
adc
push
pop
mov
sub
adc
fs
lock
inc
and
add
mov
jne
adc
jmp
add
or
cmp
lahf
clc
add
push
mov
in
push
xorl
shr
xor
and
push
and
jecxz
loope
add
movsb
sahf
push
cmc
es
push
sbb
out
pushf
scas
int3
rclb
and
adc
mov
mov
mov
add
fidivrs
or
pop
xor
aaa
je
or
adc
jg
inc
lret
mov
mov
adc
sbb
sub
add
fs
xor
add
push
add
loop
push
addr16
jo
mov
mov
imul
inc
jg
pop
dec
imul
repnz
movsb
inc
add
push
jno
xchg
sti
add
sbb
iret
or
push
push
or
add
or
mov
sub
enter
adc
movsl
popa
fildl
mov
mov
xlat
stos
add
lahf
jo
push
mov
inc
mov
push
push
push
mov
add
pop
pop
out
cmp
push
pop
inc
push
out
movsb
sbbb
adc
aad
mov
js
add
mov
jno
add
inc
xor
pop
xlat
das
cmp
push
add
cmp
add
inc
push
pushl
call
in
mov
and
out
dec
addl
cmp
loop
add
fsubrl
imul
enter
hlt
inc
dec
sarl
pop
xor
fistps
jbe
outsb
inc
lock
inc
adc
je
scas
xchg
dec
sub
add
in
cmp
and
test
movsl
inc
add
jge
in
xor
aad
fiadds
xchg
fsubrs
push
xor
cmp
je
push
andl
adc
mov
shrb
ja
fcmovnbe
dec
add
or
inc
or
inc
add
mov
or
jp
inc
xor
addr16
pusha
dec
movsb
pop
pop
cltd
mov
cmp
and
addr16
ret
fnstenv
adc
jbe
inc
jge
cmovne
test
ljmp
sub
mov
pop
add
push
jno
pop
add
pop
data16
mov
loopne
jne
adc
add
jle
add
add
xchg
rolb
and
cmp
shrb
push
aam
daa
push
inc
lea
mov
jmp
xor
jg
jg
setne
cmp
xor
pop
out
filds
jns
mov
test
push
adc
push
add
ret
clc
or
sub
mov
xor
subl
push
pop
adc
cmp
ret
mov
jne
stc
hlt
imul
inc
sarl
outsb
fstpl
lret
sub
pop
or
add
in
jl
dec
adc
or
loopne
sbb
ja
add
or
mov
inc
jg
mov
in
daa
add
clc
lahf
shll
aas
lods
int
sbb
sub
inc
out
cmp
sub
scas
dec
stos
mov
lea
ret
push
add
mov
lods
nop
xchg
add
xor
lea
xor
add
unpcklps
jne
loop,pt
ss
xor
or
sbb
and
add
adc
jmp
lock
push
stos
adc
std
adc
pop
add
add
and
fdivs
jmp
popf
dec
notl
push
jge
movsl
das
fnstcw
pop
cmp
popf
ret
ja
cli
add
push
das
movsb
out
fadds
cmc
in
cmp
add
ret
call
add
mov
sbb
add
lock
add
fildll
pop
add
sub
in
mov
daa
jbe
aad
cwtl
lahf
push
xor
xor
or
sub
aam
jne
mov
push
das
add
xchg
inc
xlat
pop
andb
scas
call
loopne
std
ds
dec
test
and
add
fcoml
insl
pusha
ljmp
cmc
sbb
aam
mov
test
adc
cmpsb
jmp
call
popf
adc
daa
test
jecxz
mov
adc
or
xor
mov
outsl
clc
push
loop
jo
inc
aaa
test
lods
dec
out
pop
repnz
nop
add
ss
shl
and
lea
jecxz
call
mov
or
add
jle
shl
jecxz
add
xchg
mov
cld
mov
test
nop
pusha
insb
push
in
add
and
ja
pop
roll
add
or
pop
fdivl
jecxz
jne
sbb
loopne
insb
mov
rorb
mov
ret
pop
push
jns
add
mov
movsl
push
inc
fdivrs
add
pop
lods
pop
xchg
dec
repnz
outsl
insb
mov
or
cmp
dec
ljmp
cmpsb
jns
add
aam
mov
and
je
adc
fiaddl
stos
imulb
or
mov
mov
mov
inc
push
ret
xchg
dec
xchg
add
inc
cld
dec
add
push
int
pop
adc
mov
jecxz
call
shlb
jmp
aaa
add
xchg
aas
inc
or
in
push
add
stc
shll
and
dec
add
mov
adc
pop
inc
inc
sbb
rclb
test
repz
loope
pop
repnz
roll
cmp
iret
sub
mov
cld
dec
add
and
shrl
dec
fidivrl
sbb
sbb
movsl
cltd
sbb
sub
out
negb
je
mov
pop
pop
test
adc
and
enter
in
jb
cmp
movsb
and
cwtl
in
jb
or
jns
leave
dec
mov
sbbb
push
pop
divl
or
loope
sub
out
sub
rolb
shlb
pop
mov
inc
leave
mov
add
cld
cmpb
add
mov
add
dec
jmp
fwait
sbb
rcl
jmp
adc
mov
sub
jne
testl
repz
pop
aam
orl
ror
sti
enter
wrmsr
mov
incb
lret
mov
add
les
inc
push
jl
mov
lds
add
push
adc
dec
mov
pop
add
lods
xchg
adcb
test
aaa
add
scas
imul
xchg
pop
add
push
in
xchg
orb
es
or
adc
push
add
add
movsb
fwait
or
ljmp
push
add
in
pusha
test
lock
orb
or
push
push
push
add
sbb
outsb
mov
or
pop
sub
add
lock
push
jl
push
push
arpl
adc
stc
and
xor
push
adc
pusha
cmp
stos
xor
add
cld
inc
aas
dec
xchg
add
in
call
push
push
rorl
inc
cmc
push
add
inc
sub
ljmp
add
aaa
pop
pop
add
test
dec
push
cmp
incl
push
scas
inc
add
cmpl
pcmpeqw
loopne
xor
inc
ret
and
incb
xlat
push
ret
or
inc
mov
and
aam
mov
jmp
or
adc
mull
test
call
sub
jo
pop
mov
dec
adc
mov
in
add
out
lahf
push
add
cwtl
test
imul
or
add
rclb
pop
add
pushf
jg
inc
rorl
or
pop
add
inc
mov
sbb
xchg
add
filds
dec
add
mov
push
add
test
add
push
xchg
fs
lds
and
lahf
or
push
in
smsw
call
out
dec
add
xor
jbe
ret
cmp
adc
stos
dec
mov
push
mov
repz
add
dec
dec
add
sub
mov
jno
mov
jae
daa
or
pop
fcoml
enter
add
pop
sub
add
xchg
fistps
lahf
add
arpl
add
xlat
mov
pop
adc
mov
lahf
adc
movsb
mov
and
sub
xchg
sahf
inc
add
mov
mov
pop
mov
push
dec
xchg
test
push
lcall
mov
cmpsb
ret
bound
je
jns
add
mov
cmp
push
adc
ljmp
add
and
mov
add
data16
mov
push
in
xchg
test
mov
add
enter
cmp
xor
sbb
shlb
fwait
push
test
je
mov
and
jg
or
mov
loope
mov
movsb
xchg
mull
repz
aam
add
or
icebp
add
and
add
cs
imul
adc
adc
inc
scas
jmp
fs
cmp
popf
or
js
les
add
mov
add
cmp
and
xchg
sub
push
and
cs
sub
or
pop
rcr
mov
imul
add
or
jl
and
sub
add
push
xchg
lea
scas
enter
dec
inc
decb
jp
loop
cmp
fidivrl
sub
add
orb
dec
and
add
dec
sbb
sbb
adc
or
push
add
push
push
and
mov
mov
pusha
pop
ret
out
add
test
sub
imul
cmp
cmp
add
fisubrs
addl
data16
sub
cmp
insb
xor
addb
add
idivb
push
and
mov
cmpb
lsl
int
mov
pop
add
repz
jno
inc
inc
enter
fcoms
push
es
enter
push
xchg
iret
lock
mov
test
cli
mov
add
pop
mov
outsl
or
hlt
sub
push
jle
js
das
pop
insb
popa
imul
test
xchg
lock
sub
cmp
dec
mov
fdivs
ltr
clc
push
xor
fs
add
mov
bound
push
add
stos
dec
cli
out
psubb
in
or
add
add
scas
add
les
fistl
jecxz
lret
add
mov
add
lahf
hlt
imul
dec
add
mov
into
adc
rolb
xchg
das
icebp
repz
sub
pop
dec
rcrb
xor
inc
mov
add
rorb
adc
in
push
fs
pop
dec
in
mov
mov
je
ja
push
push
call
add
push
das
mov
mov
add
stc
lcall
mov
in
call
push
sahf
js
je
pop
xor
adc
idivl
xchg
add
mov
jo
xchg
lea
enter
repnz
cwtl
cmc
pop
fldcw
clc
dec
and
push
sti
into
ja
dec
clc
incl
incb
push
add
dec
push
outsl
add
adc
pop
mov
jge
jle
mov
lea
test
adcl
sub
mov
mov
inc
pop
sbb
xor
mov
and
mov
add
scas
sbb
adcb
add
and
add
cwtl
scas
mov
adc
cmp
lea
lock
rorb
inc
pop
rol
push
or
inc
imul
jge
jae
jge
add
cmp
add
aas
stc
cs
lea
mov
xchg
imul
push
add
dec
or
jp
insb
icebp
inc
sbb
add
dec
or
cmp
pop
sub
sbb
jno
or
outsl
orb
movsb
xor
push
xchg
add
lret
or
cmpb
aas
pop
dec
xchg
aad
test
fcomps
imul
mov
imul
pop
loop
add
gs
lds
sub
imul
imul
movsb
ja
xchg
fcoml
add
push
push
fidivrl
sub
fstl
fsts
andl
xlat
sub
mov
pop
or
inc
inc
sub
ds
cvtpi2ps
testb
push
notl
and
or
sti
aaa
pop
add
mov
or
daa
subb
xor
fcoml
int3
or
add
imul
and
test
call
push
push
or
mov
rcr
mov
jl
add
push
repz
push
out
sbb
rcrb
xchg
cmc
add
xchg
jb
rcrb
js
loopne
sbbb
add
and
push
data16
add
fs
xchg
add
and
leave
xor
xchg
mov
inc
add
imul
repnz
dec
stos
outsb
push
scas
add
sbb
mov
add
cld
push
mov
adc
fsts
sbb
rol
sbb
add
and
test
int3
add
dec
movsb
fs
aam
pop
nop
mov
and
pusha
jmp
add
clc
xor
cmp
mov
cmp
stos
mov
les
scas
sub
push
ret
imul
nop
pop
bnd
add
arpl
adc
and
nop
adc
or
jle
fcmovu
xchg
dec
aad
jo
cmpsl
inc
xor
cmp
cmp
std
adc
xor
call
add
stos
int3
or
add
add
mov
cld
sbb
push
imul
pop
fistpl
bound
pop
mov
add
cld
add
adc
push
jo
addb
sti
xor
bswap
adc
mov
sbb
inc
or
aam
je
insl
add
xor
mulb
nop
dec
mov
fsubrs
push
dec
or
inc
add
pusha
loop
cltd
mov
push
pop
add
mov
aam
shr
out
pop
add
jnp
dec
push
push
xchg
push
jae
fildll
adc
add
int
das
lds
inc
or
cmpl
aam
mov
and
iret
test
sysexit
push
ret
mov
or
inc
pop
inc
or
lahf
xor
push
push
movsb
mov
push
xchg
mov
in
and
mov
mov
or
add
mov
sub
add
imul
mov
mov
sub
mov
cmovb
shlb
arpl
ja
mov
sub
fmull
pop
mov
dec
pop
xchg
push
sbb
lock
mov
add
mov
sub
test
add
pop
add
add
test
push
mov
adc
jbe
inc
in
fcoms
xchg
out
lea
adc
xor
test
mov
mov
fnsave
sbb
or
lods
xor
mov
inc
mov
fbld
loopne
adc
pop
mov
int3
rclb
mov
mov
mov
mov
aam
lret
or
push
mov
sub
mov
scas
inc
sub
jae
sub
pushf
shlb
aaa
or
lods
jns
push
cmp
mov
add
jae
test
xchg
add
out
rolb
push
sarb
push
insb
xchg
mov
aas
and
cmp
dec
pop
inc
arpl
inc
xor
ljmp
cmp
pop
pop
mov
push
decl
js
dec
repz
in
stc
or
test
hlt
dec
push
push
lock
or
mov
sub
jne
pop
pop
arpl
loope
notl
push
call
sub
cli
add
stos
dec
xor
inc
jl
ja
lds
mov
add
add
add
lea
out
jle
fsubs
test
jne
clc
push
pop
adc
or
test
in
testb
add
jns
mov
ret
add
push
xchg
pop
mov
pop
adc
iret
push
xor
push
inc
sub
in
sbb
push
leave
fidivrs
pop
add
enter
and
insb
add
mov
xor
pushf
adc
clc
xor
mov
cmp
loopne
jbe
inc
mov
fistl
jmp
push
lahf
nop
jl
mov
imul
adc
mov
add
mov
add
shl
sub
mov
jbe
imul
jmp
mov
hlt
and
loope
jmp
fbld
mov
push
add
cmpsl
imul
dec
jp
jp
add
sbb
pop
sub
add
inc
repz
xchg
pushf
sub
lcall
jle
mov
cmp
sub
push
add
mov
adc
je
add
jb
jo
bound
fs
subb
push
sbb
and
add
jb
cmp
pusha
and
add
js
jnp
jno
add
clc
lcall
push
mov
gs
pop
pusha
inc
and
pop
dec
dec
cwtl
aas
movups
cmp
and
add
shrb
aam
xchg
out
xchg
lock
mov
leave
aad
add
pop
fsubrl
xor
fs
cmp
add
jbe
jne
imul
adc
jle
hlt
jne
and
jno
nop
adc
push
sub
push
mov
and
mov
cld
psadbw
call
cmpl
mov
and
mov
imul
mov
push
and
pop
lcall
push
es
mov
jnp
cmp
sub
insb
jmp
dec
or
mov
stos
push
lahf
call
push
inc
or
mov
iret
push
sub
je
hlt
dec
push
dec
cmpsb
fisttps
outsb
dec
pop
or
sbbb
jge
fldl
inc
or
out
daa
lock
lret
pop
das
adc
add
pop
enter
push
add
out
arpl
imul
mov
mov
add
add
rolb
xchg
push
push
adc
fsubrs
mov
xor
pop
mov
pusha
cmpsl
lea
xchg
inc
enter
mov
push
lods
adc
mov
call
leave
push
jo
inc
scas
xor
dec
jle
adc
add
mov
shlb
pop
add
lret
and
leave
lods
les
mov
sub
shlb
outsb
test
jp
sbb
sub
inc
mov
cmp
add
popa
sbb
nop
pop
ret
jg
xlat
shlb
sbb
adc
add
adc
mov
sub
or
es
fldcw
js
adc
lods
ljmp
test
sbb
jne
add
pop
add
and
cmpl
add
out
jo
add
stos
in
jle
lods
and
cmpl
push
add
stos
add
cmp
movsb
jmp
movsl
insl
jnp
jle
adc
mov
mov
mov
push
faddl
shlb
cmp
js
jl
add
sbb
cmp
adc
jnp
inc
out
adc
fwait
bound
and
arpl
mov
push
jo
fidivl
or
fst
les
or
add
adc
add
loopne
adc
dec
add
fbstp
xchg
leave
add
push
and
add
roll
add
outsb
out
or
dec
push
mov
aaa
lds
xchg
add
call
sbb
pop
daa
js
cmc
les
and
sub
mov
add
iret
add
jg
add
fldcw
test
bound
inc
cmp
push
add
sti
inc
mov
shl
jns
fwait
aaa
lcall
hlt
push
and
rolb
inc
cmp
shrb
dec
adc
pop
mov
cmp
add
mov
mov
jb
cmpsl
add
dec
mov
insl
stos
cmp
jecxz
xchg
int
jo
add
mov
stc
jle
jb
loopne
add
ret
sarb
lds
push
or
mov
addl
inc
pop
fwait
push
sahf
cmpsl
enter
add
in
test
das
rolb
jbe
fdivl
les
push
push
push
sbbl
pop
cmp
add
dec
cmp
add
sbb
mov
cli
outsb
add
cmpsl
pusha
xor
add
pop
ret
mov
mov
mov
lret
add
dec
nop
fcoms
pop
lock
loopne
add
outsb
sbb
cmpsb
lahf
rclb
mov
add
or
sbb
in
movsl
add
bound
sub
cld
mov
push
icebp
push
insl
adc
add
add
in
mov
pop
mov
mov
jb
pop
cmovbe
rcll
pop
shlb
cmpl
cmp
add
xchg
xor
dec
ficompl
pop
addl
sti
adc
add
fcoms
cwtl
fwait
pop
push
jo
fs
pop
jo
add
push
mov
and
and
daa
cmpsb
cmpsl
xor
inc
lods
push
add
and
adc
sbb
mov
jo
add
cmpsl
mov
loopne
add
inc
mov
add
int
push
scas
stc
enter
add
cld
mov
xchg
addl
xor
and
cmp
cmc
cmpsb
mov
pop
add
cltd
jne
sbb
dec
add
mov
add
xor
xchg
sub
es
pop
xchg
xor
icebp
aad
inc
and
insl
test
rolb
lahf
pop
xchg
cmp
pop
inc
pop
pusha
loop
jb
add
lahf
push
fildll
mov
or
dec
lcall
mov
add
daa
aam
inc
jne
cs
add
mov
push
popf
add
adc
add
notb
ds
aas
lock
jne
add
add
jl
clc
test
insb
jo
add
push
aad
in
fucom
push
add
xchg
outsl
stc
orl
sub
stos
into
icebp
jg
adc
adc
jp
notb
pop
int3
sbb
pop
insb
orb
jae
mov
ret
cmp
sbb
and
add
xchg
iret
rcrb
out
sbb
mov
pop
cmp
jge
sahf
mov
jno
xchg
movsb
andl
add
pop
xchg
push
dec
scas
jo
adc
fst
add
mov
xor
inc
in
xor
loopne,pt
add
cmpsl
add
mov
add
mov
sub
gs
push
mov
add
mov
loopne
add
fnstenv
cmc
es
or
lret
dec
pop
sbb
testl
roll
ds
xchg
push
insl
sbb
add
jecxz
adc
out
pop
scas
add
xchg
sub
add
pop
aad
cmpl
cwtl
loope
lret
mull
sbb
inc
les
push
cmp
jge
inc
push
lock
xlat
call
jbe
sbb
add
je
lods
mov
sbb
mov
arpl
pop
mov
add
lret
sbb
inc
fdivrs
sub
stc
add
test
sbb
aam
pop
inc
jne
imul
je
and
sbb
xor
dec
and
fidivrs
data16
dec
lahf
jp
inc
ltr
xor
inc
push
fwait
repnz
and
pop
xlat
push
mov
ds
add
fcmovbe
ret
add
pop
mov
lock
test
loopne
shl
cmp
add
inc
neg
sbb
shrl
push
and
dec
mov
dec
sbb
xchg
or
stos
add
shll
add
xchg
loopne
test
loopne
xchg
stos
mov
loopne
seto
and
dec
jae
pop
sbb
mov
aam
repz
loopne
add
call
add
adcl
push
ret
cmc
rcrl
lock
mov
and
in
add
shll
push
rorb
loopne
add
mov
movl
loope
inc
or
inc
cltd
add
ss
jae
scas
add
sbb
inc
loopne
add
cs
push
xchg
lds
mov
push
add
int
out
fstl
in
mov
inc
push
sbb
mov
xor
add
in
push
push
mov
insl
adc
lea
call
add
ret
sarb
es
sbb
add
pop
sbb
fwait
cmp
xchg
sbb
shlb
push
mov
in
push
mov
daa
add
pextrw
test
xor
pusha
test
jnp
call
or
mov
push
or
pop
fimull
sahf
cld
inc
repz
repnz
xor
insb
test
subb
adcl
movl
add
rolb
je
inc
mov
lahf
gs
cmp
jne
add
sbb
leave
cltd
shl
cli
or
ret
outsb
mov
inc
add
loopne
adc
push
cld
pop
add
add
jne
cmc
das
add
inc
or
jno
fadds
addl
push
incb
dec
in
cmp
push
loop
ss
icebp
mov
nop
sar
or
jg
hlt
sub
xorb
jl
mov
mov
pushl
push
and
pop
mov
orl
les
jle
adcb
imul
rolb
cmp
add
xchg
stc
fiadds
mov
jl
add
push
jo
ja
pop
test
incl
js
aad
jae
add
push
push
or
cwtl
or
add
push
or
push
popa
add
sub
mov
inc
pop
sub
sarb
cmp
cmpl
or
add
or
cli
mov
push
push
cmp
rorb
mov
movb
jmp
add
or
add
push
adc
popa
add
inc
add
sbbb
out
das
test
sub
mov
add
mov
add
jmp
add
insl
push
fsubp
icebp
xor
sub
sbb
add
add
jnp
outsb
sub
or
pusha
jae
dec
loopne
sbb
data16
and
roll
and
lods
and
pop
sub
mov
push
cmp
push
in
or
adc
aas
fsubrs
add
xchg
inc
dec
sti
add
cltd
repnz
or
or
js
rcrb
ljmp
add
cmp
mov
inc
neg
adc
add
test
pop
or
shll
sbb
jg
in
push
andl
mov
pop
cmp
mov
xor
dec
sub
push
cmp
paddb
incl
jae
add
jmp
inc
inc
and
out
ja
or
cmpb
mov
loopne
inc
lret
pusha
in
sbb
inc
addl
add
ds
jnp
sub
ja
lods
mov
inc
movsb
lcall
int
xchg
jmp
fldenv
add
js
dec
push
bound
imul
fldl
hlt
into
addr16
push
dec
jge
pop
test
add
in
aaa
sbb
icebp
ret
inc
inc
adc
xor
or
add
fcoms
mov
add
test
cmpsl
add
les
cld
xchg
add
push
sbb
popf
popa
inc
add
das
into
addb
xor
daa
inc
aam
pop
add
adc
mov
xchg
mov
sbb
adc
pop
or
fnsave
addb
cli
add
jno
sbb
jb
push
outsl
add
dec
or
iret
cli
shufps
jbe
cmp
jle
rclb
add
or
sub
adc
xchg
mov
lahf
dec
mov
mov
ja
jp
add
stos
and
cltd
les
orb
test
mov
cld
movl
aam
mov
dec
lea
adc
scas
enter
sub
and
add
push
or
pop
mov
add
pusha
jmp
and
xlat
cmpb
jne
int3
adc
inc
adc
daa
je
ja
pusha
ret
jb
decl
and
call
aam
mov
add
mov
or
jne
sbb
out
iret
testl
and
pop
pop
add
cmpsl
cwtl
dec
enter
or
fs
int
push
add
scas
mov
xor
dec
xor
in
add
fbstp
lret
jg
add
imul
add
imul
xor
mov
subps
pop
xor
mov
shlb
jne
add
mov
in
add
ja
sub
mov
neg
pop
stos
cmpsb
adc
ljmp
cmpb
lahf
sub
sub
loopne
mov
and
add
es
inc
test
add
sub
popa
add
add
insb
mov
pop
aas
mov
sub
rcrb
add
jne
push
pop
inc
and
scas
xchg
test
add
or
cmp
jae
add
push
push
add
popf
inc
sub
adc
dec
scas
sbb
push
out
add
push
inc
pop
mov
sub
dec
shr
sbb
sub
add
mov
dec
or
mov
cmp
movsb
pop
cmp
xor
inc
mov
cmp
sbb
lcall
gs
xor
les
mov
jne
dec
pushf
pop
popa
add
dec
stos
sbb
rcl
loopne
inc
sbb
ficoml
into
push
push
xchg
xchg
push
add
mov
jp
jno
andb
jecxz
and
push
popa
imul
in
pushl
les
push
lods
adc
mov
add
dec
cld
fdivrl
add
jge
or
lea
add
cmp
mov
mov
push
in
es
add
jge
cmp
test
mov
and
cli
mov
add
addb
pop
add
push
pop
jo
jge
add
cmp
adc
adc
pop
enter
lret
jnp
dec
inc
popl
aas
mov
adc
add
sub
push
mov
in
sub
add
push
jb
mov
nop
outsb
cmp
pop
dec
lods
pop
add
lret
mov
decl
adc
pop
clc
push
nop
popf
into
jo
adc
loop
sub
jmp
add
mov
jg
pop
mov
nop
adc
xor
jmp
gs
add
popa
cmpsl
je
inc
into
aas
mov
outsl
pop
out
push
add
push
cmp
cwtl
arpl
sub
sbb
add
mov
call
add
lock
cmp
push
jl
mov
clc
stos
pop
pop
in
andl
dec
lock
roll
xchg
hlt
inc
inc
lret
jmp
cli
add
cwtl
testb
icebp
jp
add
or
push
pop
push
ljmp
xchg
add
cmp
cmp
push
mov
add
negb
jmp
mov
stc
das
aas
je
add
pop
jne
sbb
inc
add
cwtl
adc
test
adc
pop
sbbb
es
inc
cli
mov
or
ret
call
cmp
aas
and
add
sub
pop
ja
pop
outsb
xchg
test
in
push
idivl
dec
add
loope
add
cmp
or
push
push
loopne
lock
rcrl
add
mov
hlt
jl
add
dec
or
adc
dec
or
dec
inc
nop
inc
push
fcmovne
div
mov
inc
and
mov
add
test
ljmp
push
add
inc
mov
popf
fwait
xor
push
add
pop
mov
dec
incb
mov
scas
test
stc
cmp
push
out
imul
leave
push
cmp
push
push
jae
fs
out
mov
xor
jle
pop
pushl
add
mov
jne
add
arpl
insb
out
add
imul
clc
mov
jge
dec
dec
mov
push
out
cmp
sbb
lods
lea
sarb
pop
stos
movsl
add
pop
xor
decb
adc
jb
aaa
loopne
pop
lds
ret
rolb
xor
lret
dec
mov
inc
sub
jbe
icebp
jg
push
gs
idiv
adc
add
xchg
push
lds
lcall
mov
clc
jge
lcall
movzwl
fsts
mov
xchg
mov
pusha
mov
addb
cltd
leave
push
sbb
jg
adc
sbb
add
xchg
xchg
stos
add
add
or
adc
sbbl
mov
cmp
aaa
cmp
add
add
sbb
sub
lea
or
xchg
cwtl
les
add
push
movsl
in
jmp
test
xor
push
mov
stos
stc
adc
mov
xchg
mov
inc
punpckldq
fcoms
dec
and
cmp
mov
add
jno
add
ds
xor
lea
fisttps
push
add
lcall
add
push
and
and
add
je
xchg
add
imul
and
faddl
shl
popa
enter
inc
cli
sbb
pop
sub
scas
and
or
xchg
adc
jmp
mov
lock
pop
jns
dec
add
xchg
mov
aam
add
repnz
mov
jns
pop
lcall
sub
push
add
jg
cltd
or
sahf
inc
adc
rcrb
cmp
push
adcb
add
pop
pop
std
fiaddl
out
pushf
cli
add
pop
jecxz
clc
xchg
out
lcall
add
inc
lahf
mov
or
and
in
add
ljmp
pop
and
rclb
add
shll
dec
xchg
or
adc
push
sbb
cld
cwtl
jg
mov
fs
xor
daa
add
inc
mov
add
cmp
loop
pop
pop
stos
pushf
cmpsb
push
nop
push
clc
xchg
xchg
add
lcall
sbb
cmp
in
pushf
inc
jb
and
es
mov
inc
jno
shlb
insb
xchg
test
leave
add
jmp
sbb
or
mov
movsb
and
pushf
bound
enter
lock
xchg
subb
jo
dec
jbe
sbb
nop
mov
cmp
daa
add
xchg
aad
mov
xor
pusha
fmull
jle
xchg
pop
cwtl
mov
lds
jmp
add
int3
inc
xor
pop
push
or
add
xor
cmp
aas
int3
cmpsl
inc
sub
jnp
add
mov
in
and
scas
sbb
mov
leave
push
xchg
cmp
cmp
sbb
add
push
ds
and
xchg
mov
inc
push
cmp
xchg
add
pop
das
test
repnz
shl
leave
daa
inc
add
xor
sbb
cmpl
push
pop
negl
lret
enter
fstl
jle
pop
or
popf
push
push
fcomp
add
ret
shlb
and
add
pop
lret
ljmp
pop
push
xchg
dec
dec
push
xchg
and
aas
mov
dec
jbe
add
int
arpl
ds
pop
scas
adc
adcb
add
xchg
hlt
pop
addr16
sti
or
aam
jb
push
dec
adc
dec
mov
ja
fbstp
push
and
enter
push
imul
sub
fists
in
adc
mov
or
xorb
mov
dec
pop
mov
cltd
add
subb
xchg
pop
add
xchg
pop
cmpb
loop
orb
rcrb
aas
adc
add
scas
pop
push
notb
ret
shufps
push
cmp
loope
pop
les
test
xor
cli
adc
inc
push
mov
xchg
mov
lock
mov
mov
lea
sub
xor
enter
fiaddl
adc
sbb
push
pop
add
jb
les
cmc
jns
push
sbb
cld
pop
lods
or
cwtl
add
stc
lods
inc
inc
int3
ftst
add
scas
dec
pop
add
mov
nop
push
add
pop
jle
test
ret
jmp
out
adc
outsb
and
cmp
inc
int3
clc
or
add
dec
or
add
fcoms
inc
cwtl
mov
cmp
mov
xor
xor
incl
jp
or
pop
xor
jmp
aam
mov
xor
outsb
test
pop
lahf
push
dec
cmp
dec
xor
gs
ficomps
add
daa
push
pop
pushf
pop
sti
pop
ja
add
les
popa
add
rolb
add
xchg
xor
push
push
in
cmp
adc
inc
pop
pop
add
xchg
orl
push
push
in
call
pop
aad
aam
add
mov
ljmp
inc
dec
test
inc
push
and
movsb
add
mov
jns
out
sub
rcrl
pop
cmp
mov
add
mov
in
loop
add
sbb
push
popa
dec
push
push
add
mulb
xorb
dec
xor
adc
ljmp
sbb
or
add
ds
loope
fwait
mov
in
out
cmp
mov
inc
dec
sub
sti
aam
xlat
add
and
add
mov
add
sbb
repnz
mov
push
sbb
cmp
or
outsb
sbb
divl
or
nop
and
lods
push
cmp
ds
call
cmp
jno
add
sbb
xor
dec
adc
loop
iret
mov
in
jge
lods
cmp
sbb
or
or
add
mov
add
pusha
cltd
or
mov
insb
add
pop
xor
nop
xchg
add
add
ds
sub
sti
pop
aam
rorb
lret
add
shl
and
inc
cmp
sub
cmp
movzwl
fs
mov
jae
add
cli
rclb
mov
pop
add
leave
mov
popa
mov
add
mov
mov
ss
sbb
es
or
shl
aam
sarb
inc
cmovo
scas
add
call
jo
ljmp
jmp
sub
pop
inc
das
enter
add
mov
push
inc
xchg
and
mov
prefetcht0
mov
mov
lods
or
sahf
push
xchg
mov
inc
push
inc
and
pop
add
jno
rcr
push
cmp
mov
repz
pop
pushf
stc
sub
sub
clc
cwtl
inc
add
xchg
push
mov
dec
jb
add
push
mov
sti
enter
add
imul
mov
sbb
add
addl
add
mov
rolb
movsl
inc
push
dec
or
pop
add
push
sub
add
inc
sbb
aaa
inc
cmpsl
es
mov
push
and
ljmp
push
imul
rolb
inc
in
mov
gs
js
add
cld
ljmp
in
mov
add
xlat
push
and
fldl
and
jmp
rcll
call
ret
nop
orl
xor
andb
xchg
and
sbb
mov
or
hlt
sarb
add
dec
lahf
mov
popf
xor
xlat
add
adc
add
incb
and
sbb
aad
in
mov
nop
jle
mov
hlt
cmpsl
sub
xor
inc
mov
inc
add
jge
fs
and
sbb
add
cli
orl
loope
jmp
mov
adc
dec
pop
or
adc
inc
jo
sbb
add
ficoms
cwtl
nop
push
sbb
jnp
cli
or
sbb
sub
pushf
mov
push
add
lock
cmc
add
add
mov
mov
xor
or
adc
push
mov
movb
in
movsl
push
xchg
aad
sbb
xchg
inc
inc
test
ds
xor
aaa
pop
jbe
sbb
ljmp
mov
cld
inc
cmp
pop
dec
fistps
popa
cwtl
test
fldl
fnstenv
lcall
or
sbb
jp
mov
lcall
pop
add
inc
or
daa
add
mov
jbe
orb
enter
push
sub
in
add
pop
push
cmp
adc
inc
movsl
cwtl
mov
cmp
ss
sbb
rorb
xor
push
and
and
stos
add
pop
or
mov
cmp
sbb
or
je
loopne
ljmp
add
jne
cmp
out
mov
pop
test
lds
mov
and
addb
mov
push
pop
cmp
mov
and
sbb
sub
add
cmpl
adc
into
orb
xor
shlb
add
adc
stos
add
adc
ljmp
pop
jmp
xor
xchg
mov
mov
mov
dec
cli
add
nop
jo
inc
into
je
aas
pop
adc
mov
add
push
dec
push
add
mov
call
and
lret
repnz
sub
push
loop
add
or
jmp
add
mov
insb
add
lea
leave
sbb
hlt
pop
sbb
or
xchg
add
inc
cltd
dec
mov
jg
jle
add
not
cmc
dec
cmp
xchg
dec
mov
test
je
jbe
jnp
add
mov
decl
pop
test
sbb
inc
pop
imul
imull
add
js
push
sbb
push
add
das
loopne
mov
dec
test
inc
jmp
mov
ds
sub
sti
mov
jmp
cwtl
fcomip
add
fldcw
mov
xlat
push
pop
mov
adc
cmpsb
add
lret
cmp
cltd
addb
jo
add
add
test
test
sub
push
jo
push
aas
orl
mov
out
pop
jb
or
sbb
jle
or
das
push
lea
cmpsl
loopne
sti
add
or
xchg
mov
sub
and
clc
add
cld
int3
popa
cwtl
pop
or
mov
pusha
in
jne
or
sbb
shl
cmp
add
in
cmovl
lock
sub
test
pop
ret
rcrb
add
add
pop
js
or
daa
jl
cld
sub
push
mov
dec
push
orb
adc
or
cmp
add
sub
iret
repnz
int3
ret
call
add
inc
push
add
pop
or
fcoms
divb
mov
pop
inc
inc
xor
or
test
js
add
ljmp
bndldx
fs
mov
dec
or
xor
divl
add
inc
sub
dec
and
xor
push
inc
jp
add
mov
nop
movsl
add
adc
sahf
sub
addr16
add
jbe
xor
add
pop
mov
pushf
cmp
lds
xchg
lock
jmp
adc
inc
jb
pop
movl
adc
push
inc
enter
cli
lret
or
sub
jp
movsl
adc
jno
loopne
shlb
cmpb
enter
xor
xor
jne
mov
adc
push
and
cmp
sbb
filds
shlb
jb
mov
push
xchg
jns
bound
or
xchg
mov
pop
scas
cmp
xchg
repnz
dec
lea
add
addr16
notb
jp
add
pop
decb
loope
lods
add
jo
mov
xchg
lret
int
xchg
adc
xor
pop
enter
hlt
cmp
dec
addl
sub
dec
xor
lock
shl
add
xchg
daa
imull
orb
fwait
sub
xchg
clc
sub
cmp
adc
test
jns
sub
cltd
shrl
movsb
inc
adc
ljmp
cld
lock
rol
adc
outsl
inc
cli
ja
clc
fstl
sub
pop
testl
lret
shll
xchg
cmp
in
scas
enter
lods
mov
xchg
int3
cmp
add
in
ret
add
flds
adc
add
lods
dec
add
xorl
jle
popl
or
mov
shrl
pop
mov
in
cld
push
xchg
jmp
call
push
sahf
adc
fadds
cmpsl
test
imul
jb
popa
jle,pn
add
and
stos
add
sub
cld
or
pop
dec
repz
mov
cltd
jge
add
roll
add
and
xchg
adc
xchg
add
push
xor
and
pop
add
jns
add
ja
add
dec
cli
aam
rorb
test
add
scas
xor
jns
leave
add
ret
daa
inc
mov
sbb
movsb
nop
sub
sbb
call
neg
or
jns
or
cld
into
push
add
stos
ds
xchg
les
xor
out
enter
mov
jne
jns
data16
mov
popf
cmp
shll
scas
and
push
mov
loopne
popl
pop
push
push
and
mov
pop
xchg
out
cmp
popa
fadds
rolb
leave
xor
adc
cmp
shl
imull
or
inc
xchg
push
inc
imulb
int
mov
les
xor
push
add
dec
mov
rolb
add
mov
jmp
adc
xchg
hlt
cmp
mov
mov
add
clc
adc
in
lret
dec
inc
sbb
repnz
and
xlat
mov
dec
lret
jno
mov
clc
mov
jbe
rorb
sbb
sub
dec
call
movsl
popf
cs
jmp
dec
mov
xchg
add
pop
mov
loopne
inc
add
data16
in
stos
add
sub
fiadds
sub
add
cmp
lods
jl
pop
xchg
dec
xchg
sahf
movsb
push
pop
xchg
movups
mov
inc
add
adc
mov
jae
add
je
add
push
and
jmp
aas
mov
lea
adc
cmpsb
mov
sbb
movsl
sub
dec
hlt
xor
popf
rorb
lea
mov
call
push
hlt
mov
mov
add
lahf
arpl
cmp
jne
in
dec
ret
lods
add
insb
movsl
ds
push
pop
cld
sahf
xchg
ret
jmp
mov
shrb
popf
jecxz
pop
add
stos
cmpsb
pusha
cmp
sub
add
xchg
jge
pop
sbb
add
xchg
ret
pop
mov
sub
or
xlat
inc
mov
es
cwtl
add
pop
and
jecxz
add
or
filds
cmp
dec
xchg
popf
out
bound
pusha
push
push
arpl
cmp
sbb
mov
push
mov
roll
pop
popa
movsl
mov
mov
movsb
or
fs
xchg
pop
mov
nop
push
push
cld
xor
push
inc
add
aad
insb
aas
addl
sub
jl
add
sub
add
jge
add
or
cmpsl
sbb
inc
and
add
or
ret
pop
dec
clc
in
inc
pop
addr16
andl
faddp
xrelease
add
hlt
push
daa
pop
nop
add
sub
fdivs
in
add
insb
mov
test
xor
or
jne
and
inc
nop
pop
dec
add
aas
lods
rolb
incl
shr
adc
push
pop
adc
inc
test
add
cmp
or
mov
subb
mov
add
out
lret
dec
cli
add
ret
jb
enter
add
popa
mov
pop
and
or
ret
jne
jo
fdivl
lcall
lock
ss
es
push
add
jmp
dec
add
mov
add
and
cmp
push
scas
ret
inc
or
in
lock
insb
xchg
bound
aad
ret
or
mov
dec
rorb
pop
or
pop
or
inc
cld
dec
pop
add
add
add
add
mov
sub
add
fisttpll
add
pop
push
adcb
inc
rclb
add
jae
shll
stc
add
sub
add
push
jle
xor
mov
xchg
add
jae
sti
dec
xor
xor
dec
pop
das
pop
jmp
push
sbbb
aaa
add
fwait
sbb
xchg
data16
add
push
add
je
mov
inc
pop
sub
adc
lock
push
jle
pop
cmp
mov
or
rcrb
js
sub
or
lea
aam
jp
add
nop
out
add
imul
xor
pop
jns
or
lods
nop
or
cltd
jecxz
pop
inc
push
repnz
adc
sbb
jmp
or
sbb
inc
ret
mov
xchg
hlt
mov
adc
jb
popf
add
pop
cvtps2pi
mov
xchg
repz
fsubs
and
ret
dec
mov
mov
push
pop
in
rorb
push
mov
sub
xchg
enter
jmp
dec
lock
mov
jge
imull
orl
add
pop
and
inc
ret
std
arpl
ja
push
testb
cmp
mov
sahf
mov
sub
ret
xor
add
push
xor
lock
pop
and
cmp
jnp
sbb
cmc
nop
pushf
cmp
push
cmp
je
les
aas
add
add
hlt
cmpsb
and
lods
sbbb
lret
mov
push
loop
mov
loope
add
mov
jmp
cmp
out
jge
jl
add
jecxz
enter
or
or
mov
adc
aaa
jg
xchg
add
jle
or
outsl
cltd
or
push
adc
add
xor
xchg
jle
scas
mov
adc
dec
cli
add
aaa
dec
fsub
jo
ficoms
jns
insb
xchg
cs
adc
cmp
sbbl
jo
adc
sbb
pop
cmp
sbb
ret
mov
jmp
rorb
repnz
xchg
jno
xchg
and
sub
or
movsb
scas
jp
push
or
ljmp
push
add
andl
and
movsl
call
pop
insb
inc
or
repnz
add
and
icebp
pop
mov
rorl
cmp
or
jns
aad
orb
pushf
jb
cld
aad
andb
lea
jle
mov
and
sub
in
mov
xor
dec
push
mov
push
lahf
ljmp
mov
add
rcrl
cmp
lahf
or
mov
nop
add
jo
fbstp
inc
jnp
icebp
shr
imul
or
cmp
sbb
fwait
pop
movsb
pushf
dec
pop
sub
cmp
push
icebp
mov
repnz
fwait
mov
or
add
repz
add
adc
inc
fiadds
das
es
scas
add
adc
sbb
pop
and
fistl
dec
push
fdivrl
or
jne
imulb
sub
fidivrl
lock
ljmp
leave
inc
push
push
add
jmp
add
inc
dec
cmp
push
sub
pop
mov
xchg
decb
add
sub
add
cmpsl
test
inc
xchg
add
out
dec
sub
adc
mov
adc
dec
add
mov
mov
mov
add
outsb
sbb
cli
lods
jg
loopne
push
jno
inc
shll
or
ret
or
xor
movb
fs
mov
pop
loop
add
add
jb
cwtl
adc
pavgb
rorb
nop
mov
xlat
ret
je
sbb
mov
mov
adc
push
cmp
lods
push
lahf
inc
jno
cld
or
shr
idivb
sarb
pop
jne
add
xchg
mov
shrl
inc
sbb
dec
and
add
aaa
dec
scas
adc
movl
sbb
imul
adc
xchg
out
add
push
push
adc
adc
add
movsb
or
cmp
out
cmp
sub
adc
lea
dec
movsb
add
xchg
test
scas
sbb
cmp
shrb
jno
add
adc
add
popf
xchg
loop
rcll
dec
and
call
pop
pop
andb
lds
cmp
out
sbb
dec
and
jae
mov
adc
mov
mov
cs
fldl2e
faddl
fs
inc
fimull
add
mov
inc
add
mov
and
in
hlt
add
jns
and
dec
aas
xchg
dec
and
push
inc
arpl
jnp
fsub
addl
jmp
cmova
add
iret
jmp
daa
add
inc
push
add
mov
and
pop
or
inc
mov
and
adc
mov
sbb
cmp
inc
xor
push
add
jg
or
repz
add
cmpsb
cmp
insl
xor
cmp
in
jp
fdivs
xchg
cmpb
in
xor
sub
push
test
mov
or
pop
xchg
add
add
push
push
dec
add
jmp
pop
mov
push
mov
fdivrl
stc
cli
xchg
sbb
push
lea
test
push
add
mov
test
inc
jb
adc
into
add
lea
sub
push
lds
add
cmp
mov
jg
jbe
addl
fs
and
jno
cmp
nop
movb
sbb
or
in
pop
enter
push
add
xchg
mov
and
enter
ljmp
sub
add
or
jbe
lods
rolb
repz
cltd
add
mov
movsl
cs
push
sub
pop
or
pop
or
les
push
dec
sti
repnz
in
adc
stos
pusha
push
push
jae
push
xchg
cmp
in
test
adc
into
cmpsb
pop
xchg
les
pop
xor
test
test
push
xchg
cmpsb
mov
dec
push
push
ja
lret
rcl
add
dec
mov
cmp
sahf
gs
iret
jmp
je
js
xor
push
or
add
jne
pop
test
fists
imul
jge
or
dec
push
add
cmp
pop
dec
xchg
repz
push
sub
add
inc
clc
inc
mov
rol
insb
jb
push
push
out
push
cmp
andb
int
clc
mov
les
xor
mov
mov
push
add
lret
push
push
or
pushf
je
add
adc
out
add
add
add
stos
imul
and
aad
and
adc
cmpsb
rclb
in
jecxz
cwtl
cli
je
add
push
jg
in
sub
rorl
pop
push
int3
fsubrs
push
dec
add
es
and
jmp
xor
imul
shr
pop
and
sbb
mov
shlb
or
and
lock
adc
shll
arpl
jne
shll
fidivs
imul
mov
hlt
mov
repnz
adc
mov
fildll
mov
rolb
std
jecxz
xchg
lods
into
aam
push
fs
gs
inc
pop
pusha
scas
cmp
lock
pop
andb
add
insb
mov
lahf
jmp
add
xchg
mov
push
out
pop
lods
mov
sub
xchg
fwait
mov
bswap
adc
rcll
add
pop
add
jno
pop
popl
cmp
data16
pusha
ds
arpl
loopne
dec
jmp
fidivl
pop
mov
dec
call
sbb
iret
in
jne
add
das
sbb
incl
jmp
lods
cmpsl
jl
inc
xchg
nop
pop
cmp
dec
xchg
cmc
inc
int
sarb
add
pop
faddp
mov
popf
jmp
iret
loopne
dec
xor
lcall
orl
out
fs
imul
mov
add
and
scas
adc
cs
cmpsl
jmp
pop
add
mov
and
pop
cltd
add
mov
xchg
lret
and
push
sbb
jne
push
popa
insl
sti
xor
and
push
cmp
xchg
add
outsl
frstor
jge
fchs
mov
inc
hlt
mov
test
clc
or
add
call
add
sub
stc
add
and
hlt
or
or
rorl
and
rolb
add
dec
xor
xchg
cli
sahf
add
mov
adc
add
cmp
lret
sarb
lret
ret
and
ret
mov
sub
xchg
dec
or
push
add
fxch
shrb
hlt
movsl
xor
jp
clc
jmp
add
push
test
rcrl
mov
cmp
jne
movsl
add
and
cmp
xchg
es
ljmp
adc
data16
mov
or
punpckhbw
repz
jae
mov
lock
pop
adc
lahf
int3
divb
xchg
rorb
pop
push
or
push
in
and
add
movl
jmp
notl
mov
add
test
loopne
cmp
sbb
cmp
jmp
push
xchg
shl
pop
sbb
add
mov
add
add
scas
add
jl
xchg
lds
leave
add
mov
inc
idivl
sbb
int3
fistpll
js
unpcklps
test
add
dec
dec
cld
aam
in
dec
add
adc
pop
sbb
and
aam
push
dec
or
aad
xchg
repnz
jo
vmovsd
mov
outsb
cs
xchg
insb
add
lock
sahf
negl
imul
sti
jne
lds
lock
add
mov
js
cmp
pop
adc
mov
add
push
aam
icebp
rorl
repz
mov
push
sub
pusha
lret
mov
pop
fadds
xor
mov
xlat
lcall
sbb
xchg
add
mov
add
in
dec
or
mov
into
mov
push
xchg
in
and
mov
add
sbb
add
sub
sarl
negb
xor
cmp
rsqrtps
mov
pusha
and
repz
lret
sub
test
mov
add
mov
notl
push
push
daa
push
xor
daa
inc
inc
loopne
pop
in
call
jbe
decb
add
add
imul
cmp
sub
cmpsl
sbb
cwtl
push
push
cmp
adcl
cmpsb
aas
adc
add
popf
or
dec
ds
lock
or
fsubrs
dec
out
test
loop
xor
lods
add
js
mov
add
and
jbe
jb
and
loopne
lret
mov
cmpsl
add
mov
xor
add
lods
dec
add
mov
ficoml
mov
cmpsl
fidivs
xlat
jge
mov
mov
imul
mov
pop
in
in
cmpb
imull
movsl
mov
add
lds
ja
add
pop
fldt
or
cmpsb
add
mov
and
je
mov
jno
insb
lcall
loope
add
xor
add
add
pop
push
mov
add
fnsave
push
or
pop
in
and
fsubr
add
jmp
add
movsl
cli
and
jl
or
scas
test
out
jbe
add
adc
test
negb
bound
pop
icebp
adc
xchg
test
push
ds
and
imull
mov
add
test
adc
rcr
idivl
add
negb
test
or
ret
add
pop
add
mov
add
pop
or
lock
jl
add
insl
stos
jg
adc
data16
rorb
aam
mov
cmp
mov
push
hlt
add
and
inc
loopne
push
inc
cmp
test
adc
cmp
add
cmp
add
call
add
add
inc
pop
roll
mov
fimull
add
jbe
xchg
orb
aad
jns
add
insb
add
adc
or
xchg
add
add
mov
loop
iret
adc
add
fisubs
fistps
insl
add
repnz
inc
lods
dec
stc
xchg
add
rorb
pop
int3
cwtl
not
ss
ds
sub
dec
test
mov
stos
push
dec
push
and
adc
sub
test
stc
pop
adc
or
xchg
jmp
mov
xor
jne
mov
xor
mov
xor
loop
inc
inc
sub
jae
rol
repz
dec
mov
leave
pop
xlat
lock
add
fiadds
in
test
mov
pop
scas
lds
cmpb
cmpsb
add
sub
bound
popf
iret
xor
sbb
sbb
push
inc
aas
dec
push
pop
dec
mov
call
add
xor
inc
and
push
dec
jg
jmp
push
aam
lods
dec
and
mov
adc
daa
mov
push
inc
setbe
stc
rcrb
lods
or
cs
push
adc
add
fstl
or
mov
enter
je
add
add
gs
ret
add
dec
jno
das
push
and
pop
dec
pop
inc
cmpsl
mov
inc
push
cmpl
mov
bound
movsb
dec
adc
sti
sub
movsl
jl
sbb
push
dec
sti
rolb
xchg
cmpsb
movsl
pop
leave
hlt
mov
out
jl
pop
add
dec
mov
cmc
jbe
add
inc
adc
loope
add
pop
sub
mov
test
xor
xchg
sub
cmp
inc
dec
pop
mov
orl
pop
adc
rolb
call
aas
push
ja
add
sbb
lds
ljmp
push
xchg
mov
fcomps
in
and
xor
pop
jo
stc
push
aas
sbb
or
pop
push
adc
add
and
cmpsl
push
add
jns
pop
add
loope
lret
out
or
add
sbb
sub
add
jg
mov
jg
jg
jg
jg
jg
pop
out
mov
cmpsl
and
ljmp
mov
adc
rcl
inc
scas
divb
jo
outsl
test
pop
mov
xchg
addr16
mov
sbb
inc
sbb
lock
les
lahf
lock
adc
lods
or
lea
or
cmp
out
adc
jg
xlat
loopne
repz
shrl
das
mov
adc
add
xor
mov
dec
test
pop
dec
out
call
enter
dec
mov
lahf
xchg
loope
rcll
test
lds
fcmovnb
jno
jbe
xor
add
loop
xchg
add
int
and
add
push
loope
jmp
jb
add
aaa
sbb
stos
push
add
mov
add
addr16
test
cmp
dec
mov
xchg
pop
lock
push
mov
and
test
aaa
mov
in
dec
adc
inc
ror
lea
clc
cmp
push
add
inc
scas
hlt
mov
call
push
push
dec
jno
add
mov
popa
mov
iret
xchg
sbb
pop
orb
pusha
cld
jmp
ljmp
add
sub
jo
mov
movsl
inc
add
push
es
rolb
push
xchg
sbb
dec
sub
sbb
cs
xchg
pop
xchg
add
stos
lds
and
or
mov
or
out
test
add
push
jne
pop
notl
jle
hlt
dec
out
insb
push
add
cmpl
jno
ret
jmp
out
fildl
repz
in
cld
lret
stos
adc
scas
sbb
adc
jae
dec
loopne
inc
add
dec
and
daa
add
xchg
mov
dec
add
and
pop
mov
mov
jle
add
cwtl
imul
add
lock
adc
fs
or
dec
and
shrl
pop
jecxz
int3
add
out
movsb
or
and
inc
hlt
testl
cltd
push
adc
mov
cmp
cmp
ret
inc
add
insb
add
jnp
xor
clc
jmp
xor
stos
cmp
arpl
clc
add
stc
mov
jmp
pop
jae
cmp
sbb
lret
mov
fs
xor
or
xchg
dec
add
nop
aas
fcmovnb
xor
sbb
jle
add
adc
or
mov
int
loopne
pop
add
loope
je
test
and
nop
paddusw
mov
arpl
dec
imul
push
cmp
dec
lds
inc
xor
add
imul
jle
dec
cld
roll
and
pavgw
sub
lret
inc
jmp
cld
sbb
and
or
jl
add
inc
mov
push
lods
dec
add
sbbb
jo
pop
fs
push
adc
gs
popa
add
fnsave
pop
stc
mov
cmp
cmp
sub
sbb
sub
bound
mov
add
aas
pusha
jle
loopne
xchg
or
movl
fldl
ja
add
lock
jo
js
add
add
data16
clc
dec
mov
jnp
mov
stos
add
out
xchg
inc
mov
add
jbe
push
mov
add
incl
call
pushf
dec
xchg
ret
push
add
push
xor
add
xor
bound
cmp
add
inc
cmp
add
pop
pop
lods
mov
add
test
imulb
adc
adc
pop
push
and
mov
inc
flds
dec
adc
push
or
inc
or
cs
call
mov
les
jne
aad
mov
add
mov
sti
add
enter
add
or
jle
mov
push
add
fnstenv
mov
mov
adc
add
xor
or
sbb
xchg
jmp
test
dec
loopne
add
rorl
and
and
sub
or
xchg
add
out
hlt
add
or
sub
xorl
les
fcomps
inc
or
push
in
movsl
cmp
sbb
jns
or
int3
mov
pushf
pop
push
push
push
in
sbb
add
leave
mov
addl
dec
jne
push
loop
sbb
mov
xor
fiaddl
dec
das
clc
push
dec
push
push
cmp
jecxz
push
mov
bound
loopne
in
adc
add
jg
outsb
repz
out
mov
jo
ffree
clc
jp
add
push
pusha
adc
jne
stos
cmp
jmp
mov
dec
sbb
mov
sub
inc
xlat
xor
cmpb
jo
jbe
iret
mov
ss
daa
add
je
dec
mov
inc
adc
cmp
fdivrl
and
cmc
dec
mov
add
xor
jnp
jne
mov
add
jae
in
add
push
cmp
lea
mov
push
cmp
pop
mov
add
loop
push
inc
or
adc
dec
mov
mov
add
cltd
lret
inc
ret
stos
orl
cmc
sbb
adc
sub
cmpb
jg
add
dec
add
test
loopne
cmc
add
loop
test
pop
pop
add
add
insb
add
ljmp
sbb
and
in
push
cmp
into
sub
loopne
lock
dec
add
and
inc
sbb
test
cmp
and
mov
mov
pop
repnz
shr
jp
inc
sub
daa
add
adc
scas
fidivrs
add
or
int
mov
and
fcomip
mov
clc
out
xchg
add
xlat
in
adc
ss
and
shrb
dec
std
xchg
add
adc
fildl
aas
pop
clc
add
or
add
jno
add
xchg
mov
sub
seto
call
xor
add
jp
add
push
nop
sbb
xchg
pusha
adc
mov
mov
mov
fucomi
or
jp
push
divl
push
mov
cld
sbb
jg
add
iret
shll
xorl
pop
cltd
push
out
insb
out
scas
lock
add
add
shrd
clc
iret
cmp
mov
xor
adc
loope
out
call
loop
pushf
ret
push
clc
mov
ret
loope
sbb
push
adc
lods
dec
add
push
test
inc
jecxz
fwait
add
mov
or
jge
jge
add
jb
jecxz
test
jbe
add
test
push
xchg
jmp
ret
idivl
jg
dec
nop
mov
adc
outsb
clc
out
inc
add
jmp
pmuludq
push
or
cmp
jecxz
in
fcoml
or
dec
pop
je
test
mov
sbb
push
testl
xor
insb
add
adc
sbb
test
ret
in
daa
jecxz
jo
xchg
jno
xor
adc
test
sub
out
cli
mov
pop
into
push
dec
imul
ss
jo
testl
mov
aad
rcrl
sbb
loop
sbb
cmp
icebp
adc
scas
lock
ds
push
xor
in
stos
jmp
fadd
and
push
pop
mov
and
jle
xchg
sbb
loop
fstl
fidivrs
clc
push
mov
mov
push
or
icebp
sahf
sbb
sbb
jg
or
nop
fidivrs
xchg
sbb
pop
ljmp
cmp
mov
stc
daa
cld
cwtl
mov
fwait
cwtl
shrb
ljmp
test
in
das
xchg
jmp
push
outsl
cmp
test
std
inc
fdivr
fwait
xor
les
sti
adc
jmp
fidivrl
inc
sbb
pop
imul
sub
iret
ss
shlb
adc
add
pop
fadds
mov
jge
dec
sbb
inc
rcl
adc
rolb
ret
lods
fadd
rcl
imul
sbbb
sbb
lods
out
fstpl
and
in
andb
in
mov
arpl
or
mov
mov
mov
mov
mov
xchg
cli
dec
sub
inc
push
mov
cmpsb
hlt
movsb
jbe
out
jmp
cmpl
lds
jg
pop
in
js
fdiv
mov
adc
hlt
test
jecxz
and
insl
and
loope
out
xor
mov
adc
cmpsl
sub
jle
cwtl
dec
push
inc
xchg
xchg
repnz
sbb
lcall
mov
push
shr
cmp
xchg
push
xchg
jmp
pop
in
jmp
mov
repz
cmp
mov
jo
sti
jmp
adc
in
jg
cli
cwtl
sub
sbb
mov
nop
cmpsl
add
shll
inc
inc
sbb
in
add
sub
jge
inc
push
add
test
mov
sbb
inc
add
jmp
dec
or
xlat
icebp
popf
and
dec
inc
add
bound
add
in
or
ja
notb
mov
call
add
adc
inc
mov
add
fxch
dec
inc
xchg
and
fiaddl
test
pop
pop
pop
push
lods
adc
or
or
je
xchg
pop
adc
pusha
xor
push
inc
daa
push
jno
dec
int3
jbe
mov
popf
sti
icebp
xor
mov
cld
sub
add
mov
js
xchg
mov
sub
ret
or
jae
add
std
cmp
fistps
cmpsl
add
or
test
out
xor
mov
jo
xchg
adc
test
inc
les
cli
xlat
add
mov
inc
add
push
mov
hlt
adc
std
pop
xor
lahf
adc
jl
out
cli
shrb
add
or
repnz
jmp
dec
dec
xchg
dec
cmp
je
psraw
in
stc
mov
add
js
add
fistps
lock
cs
icebp
sbb
mov
cwtl
arpl
or
fcoms
adc
stos
and
lock
or
test
push
lret
pop
pop
and
push
fimull
sahf
je
popa
mov
push
test
ret
add
adc
syscall
mov
sbb
or
sbb
xbegin
sub
sbb
xchg
mov
fs
adc
lret
xchg
or
adc
sbb
iret
fcmovne
mov
hlt
and
pop
dec
inc
mov
dec
push
or
pusha
adc
ret
rcrb
cltd
or
or
dec
in
push
sub
or
es
or
inc
adc
popl
sub
sub
cmpsl
jl
clc
mov
daa
push
fs
sub
mov
pop
mov
add
xchg
out
adc
mov
lea
inc
sahf
iret
xor
lret
adc
and
loopne
pop
xchg
rcrb
sbb
movlps
and
sub
lahf
filds
fildll
jbe
fcomps
addb
cmpsl
js
popl
adc
loop
cmp
sti
cmp
testl
in
and
push
or
das
inc
mov
mov
seta
lahf
or
pusha
repnz
mov
imull
fistpll
add
and
bound
cmp
add
sub
dec
add
lahf
adc
and
in
sbb
mov
in
sub
adcl
push
dec
clc
arpl
and
dec
dec
mov
je
sub
shrb
mov
push
dec
or
es
xchg
ret
adc
dec
sti
js
test
stos
rolb
movsb
les
push
push
xorb
test
pop
cmc
sub
mov
hlt
pop
push
xchg
sub
pop
dec
and
sbb
iret
push
in
push
xchg
dec
out
sahf
and
xchg
push
clc
les
movsb
sbb
sub
xchg
sub
and
rcrl
cmp
cmp
dec
ljmp
shr
pop
xor
xor
pop
cmc
ret
aaa
xor
shr
push
pop
popl
xchg
mov
bound
add
adc
jae
stos
push
arpl
or
adc
mov
loop
in
testl
or
fildll
aas
adc
sbb
adc
inc
loope
daa
popf
adc
movsl
mov
daa
sti
adc
cmpsb
lock
imul
movsb
lret
push
outsb
pushf
jo
mov
popa
insl
sbb
pusha
sbb
nop
in
lock
addb
jb
gs
or
es
dec
pop
cmp
fs
jp
xchg
mov
stc
adc
daa
dec
adc
or
mov
aam
mov
add
xchg
add
outsl
adc
addb
xlat
iret
add
push
shrb
cmp
dec
sub
gs
push
nop
leave
test
and
adc
cmp
repz
adc
int3
sub
pop
pop
js
mulb
into
lods
aam
adc
push
xor
mov
inc
xor
std
es
jle
add
mov
adc
adcl
inc
dec
sub
or
pop
adc
lods
xor
push
inc
mov
mov
lock
icebp
sub
mov
lret
dec
mov
outsl
popf
cmp
in
in
enter
dec
sub
mov
fiadds
add
sub
and
sbb
mov
inc
hlt
xchg
add
push
pop
add
push
pop
jmp
or
les
iret
dec
or
in
repnz
cmp
add
icebp
and
jl
cwtl
mov
add
rclb
mov
dec
or
and
jecxz
and
mov
cmp
pop
mov
xor
jl
fiadds
cmp
lods
test
test
inc
jmp
es
inc
mov
mov
add
xorl
add
gs
jge
mov
mov
jl
nop
mov
add
das
xchg
push
dec
or
pop
add
add
jmp
cmp
lcall
inc
add
fwait
jne
clc
inc
cmpsb
clc
stc
xor
mov
inc
fbstp
aaa
pop
xchg
inc
add
adc
push
ljmp
fsubrs
sahf
popa
inc
xchg
sbbl
cmp
fcomp
and
rcrb
mov
cwtl
js
add
xchg
psubw
cwtl
stos
cmp
pop
add
cmp
xor
es
stos
mov
pop
inc
js
xor
push
adc
je
add
dec
divb
scas
lcall
popa
into
out
mov
xchg
leave
shl
push
leave
pushf
jg
sub
cmpsb
sarl
inc
pop
sbb
mov
mov
xchg
inc
sbb
push
out
add
sub
add
sarb
loop
cmp
pop
add
cmp
dec
mov
and
and
add
xor
fs
or
dec
dec
or
pop
popf
and
xchg
jno
add
mov
and
or
sub
pop
and
adc
xchg
enter
jne
xchg
inc
xchg
test
mov
dec
jg
jg
add
and
mov
out
cmp
inc
pop
add
mov
in
inc
adc
add
inc
mov
imul
addr16
pushf
sti
add
mov
add
sbb
inc
xchg
and
mov
add
xor
jp
cmp
inc
shl
pop
addr16
add
push
xor
inc
and
or
adc
adc
movsb
imul
sbb
les
jle
sbb
adc
sub
mov
mov
xchg
pop
pop
jo
into
subl
xor
or
jbe
dec
movsb
stos
pusha
pop
lock
pop
js
xchg
aad
lea
xchg
dec
pop
mov
jmp
cli
filds
mov
adc
ja
push
addr16
inc
stos
add
aad
out
xor
loope
push
jge
ret
jo
or
fcoms
std
add
adc
mov
fwait
add
or
in
sbb
cmp
sbb
sub
nop
bound
dec
inc
pop
mov
andb
loopne
inc
rorl
inc
std
cmp
clc
and
jp
ret
sub
stos
ds
pop
add
iret
shl
loope
jp
and
mov
jge
xchg
bts
mov
xchg
adc
pop
sbb
and
ret
loopne
sbb
jo
out
sti
push
pop
lret
xchg
popa
lock
and
add
icebp
xor
lock
add
loopne
add
daa
sbb
jbe
adc
aas
jno
jo
inc
add
call
fucomip
cmpb
popf
loopne
cmc
pop
cmp
shlb
mov
add
divb
imul
inc
hlt
lods
dec
push
arpl
loopne
pop
and
dec
add
adc
jb
or
and
addr16
stos
or
lock
adc
sub
lods
adc
lahf
mov
cld
push
push
add
aas
inc
inc
into
sbb
push
add
mov
add
stos
add
jo
sbb
inc
lret
jmp
repz
jecxz
js
inc
out
test
inc
push
push
jecxz
or
mov
out
movl
imul
or
arpl
add
add
mov
jp
inc
pop
xchg
lret
xor
fs
xor
adc
push
repnz
outsb
pop
add
mov
stos
sbb
cld
xadd
lret
popa
pushf
outsl
mov
fiaddl
clc
mov
cmpsb
cmp
or
dec
add
push
cmp
mov
add
aam
add
sbb
jge
int3
mov
movsl
adc
xor
or
xor
xor
fldcw
pusha
ret
add
sbb
xor
pop
sub
add
popa
outsb
daa
jns
add
insb
outsl
shll
mov
cmp
rcrb
push
sti
es
pop
pop
adc
add
mov
lea
pop
mov
mov
add
aad
push
cwtl
pop
add
ljmp
or
mov
idivb
mov
test
rcrl
das
scas
push
adc
jl
clc
sub
movsb
push
sub
sbb
pusha
mov
shl
push
ret
add
and
sbb
xor
cmpsb
dec
inc
sbb
inc
cmpl
enter
test
xor
inc
and
loope
js
cmpl
loopne
and
jge
fldcw
dec
pop
lret
and
sbb
test
xor
inc
add
and
std
jae
js
cmp
mov
cmp
inc
loopne
out
xor
add
jecxz
mov
push
shll
xorl
add
inc
inc
push
ret
adc
xor
xchg
or
frstor
loopne
movsb
push
mov
mov
outsl
in
add
dec
nop
sbb
movsl
and
jne
fidivrs
lea
push
add
jbe
push
xor
cmp
xor
add
lock
cmovl
push
aas
cs
movb
test
dec
mov
or
add
or
pop
in
nop
movl
sarb
scas
rolb
subl
out
add
cmpl
add
xchg
or
cmp
orl
daa
inc
inc
cmpb
mov
ds
mov
nop
inc
push
cmp
push
popa
xchg
adc
add
cmp
call
cmp
je
lea
and
xor
jnp
mov
les
add
add
sub
adc
mov
mov
add
lods
call
js
lahf
jle
repz
add
xlat
add
mov
enter
pushf
std
inc
xorb
sarl
flds
jmp
pop
mov
add
pinsrw
enter
int3
add
ror
push
mov
cmp
sub
daa
sti
jg
inc
std
adc
mov
push
stc
add
mov
shrb
cmp
xor
xchg
jo
pop
je
add
test
loopne
add
pop
daa
dec
aaa
pop
pop
cmp
add
push
pop
xorl
clc
sub
cmpb
rorb
inc
dec
imul
mov
fsub
push
push
add
fsubrs
cwtl
add
sbb
shlb
xchg
psubw
cmp
cmpb
pop
or
add
adc
int3
xchg
add
lods
pop
pop
adc
inc
in
fwait
inc
cmpb
ds
js
faddl
mov
xchg
sti
add
or
dec
ljmp
sbb
cmp
add
sarb
mov
cli
push
bound
adc
punpcklbw
sbb
mov
mov
nop
nop
hlt
jmp
lods
dec
or
inc
lds
add
cmp
cmp
xlat
jo
push
int3
dec
push
inc
lahf
push
mov
shll
xor
fidivrl
or
lock
dec
inc
inc
mov
neg
in
loopne
add
push
mov
int
insl
test
negl
pop
fidivl
repnz
push
push
inc
pop
std
add
mov
stos
add
push
mov
dec
movsb
scas
sub
mov
add
inc
sti
dec
int3
add
std
out
les
mov
add
ss
push
inc
add
les
popa
in
in
jnp
cld
push
add
add
adc
std
add
push
inc
inc
cwtl
and
and
call
add
push
inc
xor
imul
mov
add
ljmp
mov
pop
sub
pop
push
add
jns
mov
xchg
jo
cs
add
add
dec
jne
add
dec
cltd
mov
mov
mov
cmp
xchg
inc
push
test
pop
loopne
sub
and
xchg
xchg
add
stos
mov
or
adc
nop
mov
cmp
paddq
cmc
adc
push
cs
in
or
mov
test
hlt
ja
add
mov
imull
sub
adc
sub
mov
add
nop
push
call
xor
mov
sbb
lahf
mov
xchg
push
cli
cmp
repnz
inc
cld
je
sbb
pop
or
jl
cmpsl
aad
add
dec
pop
stos
into
sbb
scas
cmp
movsb
clc
cmp
sub
jmp
or
add
shrb
push
mov
clc
roll
daa
add
xchg
ret
jne
sub
js
and
fsubp
jg
add
adc
inc
mov
jb
add
sti
xor
sub
push
push
sub
into
in
add
dec
fidivs
imul
cli
subl
cld
cwtl
and
shlb
pcmpeqw
sub
rolb
adc
bnd
or
add
shll
and
mov
add
int
in
hlt
inc
imul
inc
cmp
add
pop
or
mov
ja
push
loop
movsl
pop
inc
mov
add
push
lea
jp
das
subb
scas
sub
mov
dec
push
jmp
sub
sbb
xorb
dec
pop
add
push
push
mov
mov
add
and
fst
das
daa
cwtl
fldl
cld
lahf
xchg
push
jmp
add
cmp
add
xchg
jne
add
push
jmp
aam
ds
cmp
ja
dec
aas
lret
iret
loop
add
inc
not
sub
add
data16
add
and
push
push
sarb
push
clc
push
cmp
cld
cltd
out
add
orb
leave
jne
xchg
add
movsb
repz
dec
ljmp
pop
push
jge
pop
push
test
push
mov
add
aam
ds
push
or
inc
sub
outsl
and
test
xchg
mov
int
jecxz
pop
mov
pop
sbbl
lahf
push
xchg
add
es
add
or
vminps
cmp
dec
rcrb
add
cmc
js
or
das
les
inc
imul
or
call
cmc
add
daa
mov
pop
pop
cmpsl
enter
cld
jp,pn
repz
adc
jmp
enter
pop
mov
push
or
jb
call
push
mov
out
push
shrb
add
xchg
test
add
jle
fisttpll
sub
faddl
arpl
mov
aad
out
add
in
add
xlat
mov
pusha
jge
mov
add
jp
dec
pop
xchg
push
loop
add
and
addb
push
imul
add
setb
fsqrt
cmp
icebp
dec
cmc
enter
sub
dec
add
push
inc
nop
pop
or
icebp
add
imul
test
cmp
in
test
push
repnz
out
adc
cmp
mov
add
orb
adc
xlat
loopne
push
hlt
adc
mov
repz
call
mov
sgdtl
jb
inc
adc
cld
add
popf
pusha
cmp
enter
sbb
ss
sub
jge
add
xor
pop
lock
popf
adc
shlb
leave
add
adc
dec
xor
jle
cs
jecxz
add
in
enter
pop
je
add
hlt
add
aam
insb
fstl
mov
mov
int3
mov
or
add
movsb
push
xlat
add
call
scas
jb
pusha
cmp
push
push
call
xchg
pop
loopne
adc
loopne
add
mov
iret
fcom
fmuls
add
pushl
add
mov
pusha
add
pop
inc
pop
test
xor
xor
cmpsb
scas
xchg
arpl
sbb
frstor
add
ret
int3
das
sbb
jmp
xlat
out
dec
cwtl
aas
pusha
inc
add
xor
hlt
sub
sub
outsl
lret
jae
mov
or
pop
or
in
sub
mov
sub
xor
int3
lcall
mov
es
pop
inc
lret
cmpb
lock
xor
xor
lock
sub
es
adc
inc
add
jnp
push
clc
sub
jle
out
jmp
sbb
out
dec
rolb
mov
add
test
imul
ret
mov
ja
add
cmpsb
add
hlt
add
jmp
push
imull
enter
jb
add
inc
cltd
mov
rorb
sbb
inc
add
dec
pop
lock
cmp
and
int
add
cmp
sbb
add
push
push
sti
repnz
pop
push
add
cmp
mov
add
push
push
and
jnp
mov
sldt
lcall
dec
mov
inc
add
mov
int3
lock
fisttps
in
inc
es
decl
addb
mov
stos
pop
add
or
add
rcll
jne
mov
push
pop
or
or
test
xorb
out
shr
add
mov
xchg
inc
and
subl
jle
push
movsb
add
out
and
movsl
test
mov
cmpsl
fldenv
xchg
insl
idivb
add
mov
int3
aas
loopne
sub
mov
add
or
jns
lods
push
push
adc
push
aam
je
add
or
dec
and
sub
fmuls
inc
std
nop
cld
or
pop
dec
mov
dec
or
push
add
push
xlat
sbb
add
imul
test
andl
mov
add
adc
sbb
call
adc
and
popa
clc
cmp
movsb
or
cmp
aam
shlb
add
jge
push
add
xchg
fistps
shll
imul
add
in
and
add
jle
pusha
add
cmp
je
or
add
jne
jno
cmp
aaa
pop
in
sbb
nop
aad
and
addb
mov
push
hlt
adc
lea
rolb
add
addr16
imul
adc
repz
jmp
scas
je
mov
add
dec
clc
daa
cs
add
adc
repz
add
pop
cld
popf
push
xchg
sarl
push
in
or
iret
enter
jle
add
out
push
mov
je
push
mov
xchg
aas
imul
add
sub
dec
in
rorb
push
fcoml
into
jmp
out
adc
or
mov
lock
push
out
jae
ds
dec
cs
lock
out
xrelease
push
pop
mov
add
lret
xor
pop
dec
bound
and
add
insb
push
sub
pop
test
xchg
sar
in
mov
add
push
push
xor
ret
pop
jl
pusha
test
add
jmp
outsl
adc
daa
mov
popl
mov
push
cld
lcall
fdivs
and
shlb
cwtl
xor
mov
and
add
clc
or
inc
rcr
add
cmpl
test
jge
jo
xchg
xor
js
add
rolb
mov
popa
adc
add
loope
aam
and
add
in
loopne
sub
test
cli
push
decl
inc
data16
les
push
test
push
cmp
add
cwtl
decl
aad
test
adc
cmpl
add
jmp
push
clc
pop
pop
add
ret
or
in
jle
add
data16
or
mov
add
aas
je
mov
add
ficoml
mov
push
ret
outsb
call
inc
repnz
or
jae
inc
jmp
inc
sbb
ss
add
bound
data16
adc
repnz
fs
xor
pop
cmp
add
mov
add
xchg
add
add
inc
or
les
mov
cmc
dec
ljmp
cmpl
jbe
xchg
lds
inc
xor
sbb
mov
add
mov
dec
push
or
jo
sbb
std
les
notl
push
inc
or
imul
in
loopne
out
mov
mov
mov
inc
xchg
add
pop
adc
and
xor
add
add
iret
mov
add
cmp
mov
paddq
pusha
adc
fldcw
mov
sub
add
and
pop
dec
ja
lret
aaa
inc
in
xchg
inc
add
sub
add
add
push
inc
or
test
jae
mov
xchg
cmp
push
ficoml
loope
jo
faddl
sahf
jecxz
fmuls
jg
loopne
movsl
cmp
add
leave
xchg
dec
cmp
adc
jne
pop
sbbb
aam
lcall
inc
pusha
movsb
jnp
out
in
xor
cmpsl
out
call
test
adcb
std
dec
pushf
push
add
mov
push
jle
add
mov
adc
loope
ja
lods
pop
or
jns
notb
cld
sbb
xchg
sarb
jp
pushf
cs
and
rcr
hlt
js
jle
add
push
push
test
call
mov
push
rorl
add
xchg
movsl
adcb
cmp
xorl
adc
mov
pop
int3
and
imul
incl
push
xor
mov
dec
add
mov
fstps
dec
push
out
fistpll
sub
lock
pop
jno
add
add
mov
mov
inc
jecxz
loopne
pop
sbb
xchg
aam
inc
inc
dec
add
add
or
mov
leave
pop
cltd
add
jb
xchg
xchg
jnp
lahf
pop
cmp
add
sbb
rolb
jecxz
mov
cmp
sbb
ret
cmp
sub
adc
sub
aaa
add
jle
sahf
mov
or
add
add
cmp
inc
sub
xorl
inc
push
call
insb
push
pop
fcomip
add
mov
xor
jge
pop
idivl
sbb
lods
push
add
sbb
orl
out
nop
imul
lock
inc
push
je
icebp
cmpsl
xlat
adcl
jnp
sbb
aas
pop
cmovnp
push
pusha
inc
rol
add
andb
insb
add
sbb
lock
sbb
sub
leave
and
jns
add
add
nop
pushf
xchg
mov
inc
cmpsl
clc
test
xchg
push
cmp
je
xor
add
std
lock
test
add
in
sub
movsb
add
jge
xchg
out
push
lock
in
add
push
or
adc
movsl
psraw
mov
cli
decl
mov
lret
inc
xchg
jo
pop
outsl
cs
or
add
scas
xlat
cltd
xor
nop
add
dec
lock
cld
push
sti
sarl
das
pop
test
adc
push
and
ret
in
pushf
push
and
xor
loopne
push
inc
xor
adc
add
pop
int3
xchg
imul
cwtl
jp
hlt
push
in
add
cs
xchg
jg
shr
lds
xor
imul
add
fildll
adc
adc
movsl
cltd
lds
push
in
dec
cltd
dec
movsb
add
pop
add
das
inc
or
test
pop
rclb
pop
in
or
arpl
pop
mov
mov
in
aas
add
subl
add
aad
out
movsl
jle
das
fiaddl
mov
std
add
add
sarl
incb
xchg
sbb
pop
lret
xchg
sub
jae
add
and
jl
pop
push
stc
aas
xchg
sbb
sti
rorb
adc
sbbb
push
test
test
je
lcall
stos
enter
insl
cmp
and
sbb
sbb
lods
fnstsw
cmp
imul
cmpsl
rclb
adc
test
shlb
cmp
push
cltd
adc
inc
call
add
aaa
cmp
sti
jnp
mov
inc
mov
and
xchg
pop
popf
movl
daa
add
sbb
mov
cmp
mov
pusha
add
outsl
sbb
clc
loopne
add
icebp
pusha
mov
mov
lods
pop
adc
sbb
and
in
or
add
mov
add
mov
repz
mov
push
and
jle
mov
or
xchg
mov
sub
cmp
lods
js
adc
fisubrs
xor
out
add
dec
or
aaa
dec
jle
add
xchg
loopne
xchg
add
mov
daa
hlt
push
add
dec
sbb
cmp
in
add
xchg
and
add
mov
ja
js
mov
cmp
jmp
xchg
inc
sub
or
add
add
add
movl
popf
out
xchg
stos
mov
jns
adc
clc
add
mov
mov
pushf
add
inc
jbe
add
ret
add
jmp
add
js
jle
mov
add
push
add
scas
out
adc
add
mov
adc
jmp
mov
push
xchg
addl
inc
add
fisubs
test
cmp
push
xorb
cs
gs
push
push
rcll
or
push
sbb
divb
fimuls
aad
shl
mov
loopne
sub
xchg
dec
push
add
sub
pop
clc
add
push
pop
and
fldl
add
sbbb
and
inc
shl
int
add
fimull
enter
xlat
add
push
pop
add
jae
clc
jge
subl
incb
dec
out
mov
pcmpeqw
pop
test
sti
push
and
inc
xchg
jns
out
scas
pop
xor
out
test
add
xor
dec
fs
bound
lret
ljmp
jae
mov
push
add
lock
jg
add
in
adc
push
jle
and
add
cmp
add
jg
dec
push
jae
push
dec
or
loopne
or
and
jle
imul
ljmp
add
call
test
mov
iret
pop
popa
into
sub
lcall
aas
add
jb
or
mov
pop
add
sub
mov
lods
or
cwtl
or
loope
pop
xor
sbbb
stc
xor
add
les
fiaddl
sbb
mov
sub
sti
add
adc
enter
divb
in
pop
aam
cmp
insb
jg
lahf
push
cmc
int3
loope
loopne
mov
mov
and
and
movsb
and
vmovups
add
xchg
fidivrs
filds
push
adc
add
add
mov
add
pop
sub
adc
push
add
add
dec
pop
stos
jno
in
rclb
or
clc
hlt
out
add
adc
out
movsb
nop
js
mov
xchg
mov
adc
dec
push
cltd
test
and
add
loopne
or
into
pop
xlat
inc
cmpsl
mov
shrl
push
add
dec
je
push
sbb
sub
add
jle
or
mov
xchg
pop
mov
and
inc
pop
cld
adc
inc
pop
imul
pusha
jo
test
xor
or
add
adc
mov
je
data16
psubusb
aas
adc
adcb
cmpsl
add
negb
cld
xchg
popf
mov
cmp
sbb
cwtl
lret
mov
add
adc
adc
add
mov
loopne
mov
je
jnp
sbb
jne
insb
imul
insl
jno
jnp
into
adc
push
int
add
les
pop
sub
or
js
mov
or
add
sbb
cwtl
pop
push
sarb
push
inc
mov
jl
pop
pop
imul
xor
negl
lcall
add
inc
int
mov
add
movsb
fcomps
mov
cmpl
call
imul
and
mov
jno
fs
and
movl
cmp
mov
rolb
mov
jbe
inc
cwtl
imul
push
sarb
jae
sbb
push
push
dec
shrb
pop
add
jne
add
mov
sbb
shlb
add
arpl
xor
aam
sub
xlat
xchg
lods
add
lcall
push
dec
inc
jo
cmp
mov
inc
movsb
adc
add
fdivs
jl
sbb
add
sub
cmp
xchg
mov
push
mov
jmp
xchg
push
xchg
je
in
call
xchg
into
rorb
lock
fistl
lret
or
add
call
loopne
pop
xchg
add
mov
sub
repnz
loopne
movsb
or
pop
lods
int3
call
pop
jo
push
jae
add
adc
push
add
je
das
add
hlt
ja
les
add
pop
sub
add
rcrb
cmp
push
xor
test
ret
cmpb
in
jmp
pop
in
xorl
push
add
mov
pusha
pushf
sbb
or
or
ds
cmp
mov
mov
mov
add
jne
into
call
xor
add
shlb
clc
push
add
xchg
in
scas
out
movsb
add
sub
cmp
js
adc
pop
in
or
add
pop
push
mov
fcompl
pop
and
sbb
add
push
dec
and
test
fstpt
mov
pop
cmp
fs
loopne
or
add
movsl
jg
push
rorb
pusha
adc
add
nop
or
jp
dec
lods
mov
or
adc
fcmove
shll
out
add
sbb
ret
push
bound
push
adcb
stos
adc
pop
mov
mov
stos
push
dec
or
xchg
sahf
mov
adc
lock
add
lret
add
xor
push
dec
rcl
adc
pop
lcall
jg
nop
add
jmp
add
inc
cmovge
mov
mov
ret
cli
pop
movsl
xchg
inc
jp
addr16
sbb
dec
cs
jl
lret
mov
add
or
or
adc
dec
add
cld
das
popf
inc
pusha
mov
mov
add
and
popa
nop
dec
sbb
add
cmp
adc
mov
cmp
adc
cmp
aas
nop
out
add
mov
mov
pop
lahf
and
outsl
mov
pop
xchg
add
xchg
cmp
xchg
jo
push
adc
fucom
and
mov
xor
lahf
add
mov
bound
jle
add
jmp
xlat
mov
and
pop
jo
scas
outsl
in
add
xchg
sub
enter
add
sub
push
popa
and
add
shlb
stos
mov
sbb
fcomps
testb
repz
mov
add
or
xchg
pop
mov
pop
push
mov
mov
testl
add
ds
in
sbb
data16
js
or
pop
lock
add
mov
add
enter
stos
fsqrt
test
cmp
add
jg
pop
mov
movsb
add
or
pop
addl
sbb
xchg
jp
cli
and
push
add
cmpsl
pop
cmp
add
push
inc
clc
add
push
sbb
sbb
adc
and
pop
mov
mov
xor
jg
mov
pushf
add
rolb
add
aaa
addb
add
mov
xchg
add
inc
add
sahf
and
push
js
or
or
dec
mov
fcoms
sub
and
dec
loopne
les
popa
sub
inc
pop
aad
outsl
sbb
hlt
add
push
add
pop
inc
or
inc
pop
add
and
sbb
add
stos
out
jo
add
mov
jb
loop
fcmovb
std
push
or
lock
mov
mov
add
and
add
xor
fistl
and
dec
jge
les
add
adc
rorb
push
push
test
or
jge
cli
pop
add
bound
fwait
push
or
sbb
add
hlt
mov
cmc
aaa
pusha
mov
pusha
enter
rclb
dec
push
inc
fiadds
add
xor
or
je
jecxz
add
cmpl
jne
add
jmp
add
out
sbb
xorb
stos
add
cmc
jne
cmp
inc
add
rcrb
fmuls
daa
fisubrl
jmp
pop
pop
pop
js
loop
add
xor
repz
adc
pop
xor
ljmp
mov
inc
cmp
sbb
sbb
mov
add
inc
adc
pop
pushf
rolb
movsb
mov
outsb
or
in
cltd
add
shll
scas
test
je
ja
add
sbb
inc
push
add
or
and
nop
cmp
lods
mov
mov
add
xor
call
dec
add
xor
sarb
inc
outsl
aas
rolb
icebp
in
dec
insb
sbbb
and
mov
test
add
push
dec
pop
push
out
add
adc
lcall
mov
sarb
and
fcom
push
add
movsl
mov
call
push
stos
or
loop
add
es
lods
or
or
pop
test
neg
cs
es
popl
mov
mov
xlat
test
add
add
mov
sbb
out
test
rcll
in
xor
push
add
mov
mov
clc
or
orb
add
xor
inc
cmp
add
push
and
cmp
mov
adc
in
pop
pop
add
ret
pop
xchg
pop
and
inc
add
mov
pop
stc
add
cmp
xchg
loopne
add
sahf
mov
cwtl
cmp
jle
add
mov
add
or
jnp
lret
push
mov
adc
push
add
repz
adc
fisubl
fnstenv
bound
and
jne
outsl
or
mov
pop
or
movb
orb
cs
jge
pop
dec
adc
or
or
outsl
jl
leave
das
loopne
lret
aam
loope
pop
sub
lret
jle
sub
dec
cmpb
dec
push
add
mov
pop
jno
add
loope
pop
popa
mov
aad
test
fcmove
push
dec
movsb
jo
add
test
rcll
roll
dec
and
mov
and
or
pop
add
cmp
out
mov
jecxz
pop
add
lea
cmp
scas
cld
add
pusha
and
fbstp
out
inc
andb
xor
push
das
ss
fisubl
adcb
jmp
sbb
data16
add
push
sub
inc
in
adcb
stos
add
je
cmpsb
mov
pop
adc
add
mov
jo
add
cmp
ret
or
cmp
dec
out
add
push
sti
pushf
mov
adc
ret
jno
xor
dec
add
shll
inc
cmp
outsl
orb
mov
adc
mov
repz
and
adc
lods
addb
sub
into
adc
pushl
cmpsl
push
add
push
les
outsb
xor
dec
push
mov
jmp
testl
ja
lods
mov
movsb
xchg
test
adc
jmp
sbb
xor
loope
icebp
jo
add
mov
js
and
mov
jg,pn
pop
jle
fnstenv
rorb
add
jns
stos
fwait
cmpl
hlt
xchg
mov
data16
or
jmp
mov
scas
jae
in
lods
jl
add
or
pop
addb
mov
fimuls
jmp
lret
xchg
movsb
or
jecxz
xor
add
jo
pop
add
dec
insl
shlb
xlat
mov
lret
mov
cmpsb
inc
repnz
jp
sbb
shrb
or
xlat
add
mov
dec
sbb
add
adc
test
dec
mov
cmp
fsubrs
add
nop
add
sahf
push
mov
pop
clc
aam
cmovl
shrb
pop
xor
dec
mov
push
adc
add
mov
test
sbb
inc
or
pop
adc
lcall
mov
xchg
add
push
ja
nop
and
dec
jno
or
inc
add
lea
roll
add
mov
js
jae
add
je
or
add
movsl
xchg
pop
or
dec
mov
dec
jne
sub
cmp
gs
jno
push
stos
add
leave
mov
add
mov
ret
or
mov
sbb
add
push
jno
pusha
mov
add
or
je
add
pop
or
nop
sub
clc
cmp
jnp
mov
push
and
add
jns
inc
orb
adc
imul
jge
testb
lcall
add
mov
add
pusha
adc
push
pop
add
fildll
add
cltd
push
add
push
or
adc
add
adc
xor
push
stos
call
or
mov
sub
andb
add
push
sub
je
popf
add
es
andl
add
jl
push
call
add
pop
in
imul
push
testb
add
jae
adc
ret
scas
xor
aad
xor
outsl
and
pop
push
sbb
mov
push
pop
push
add
push
adc
add
mov
push
loopne
mov
sub
mov
dec
inc
add
cmp
jmp
shlb
js
ss
xor
subb
insb
cmp
ljmp
fisttps
xor
add
push
in
das
call
xor
and
adc
inc
xor
mov
pop
add
addb
push
mov
push
add
cs
rcrl
xchg
push
add
ja
and
push
push
push
stos
clc
inc
rorb
jg
and
or
inc
cmp
loope
jae
es
repnz
fs
or
mov
js
loop
mov
test
lcall
test
shrb
push
cmp
add
sbb
mov
fadd
movsb
mov
cmp
je
push
mov
adc
jb
mov
add
cmp
add
jmp
xchg
call
cli
js
enter
mov
jecxz
cmp
clc
aaa
push
fiaddl
faddl
decb
hlt
ljmp
add
insl
rdpmc
testl
sub
imul
add
dec
jne
enter
add
jnp
mov
dec
shl
xor
cmp
fcmovnb
enter
or
aad
add
adc
cmp
jne
sbb
dec
cmp
call
lods
sub
js
xchg
sub
loopne
cmp
add
mov
ret
pushf
sub
scas
adcb
sub
add
mov
fsubs
add
mov
repnz
dec
mov
cmp
xchg
hlt
or
sbb
or
or
inc
fdivs
test
imul
inc
cld
xchg
pop
adc
sbb
mov
adc
mov
dec
enter
push
sub
adc
in
jg
push
clc
add
push
jmp
dec
ds
mov
sub
add
inc
and
jp
sub
lock
mov
push
fs
or
xor
call
test
ret
pop
jecxz
ror
lods
dec
mov
pop
es
xchg
pop
scas
popa
add
mov
or
mov
push
lret
and
push
sub
add
cmp
jmp
cld
jle
push
sub
push
jmp
in
adc
add
lods
lret
imul
cltd
mov
pop
add
rcr
scas
ret
push
add
and
js
add
jecxz
lea
or
out
jne
mov
cld
ret
pop
pop
and
pop
add
sub
cmpl
bound
insb
cmp
mov
or
pop
inc
loop
add
and
and
les
and
and
sub
fildl
movsb
mov
cmp
adc
add
repnz
xchg
sub
add
and
add
push
mov
leave
neg
mov
rolb
js
adc
data16
cli
xchg
add
fbld
rol
adc
movsb
sbb
sarl
add
popf
push
mov
cli
popa
jp
mov
lea
xchg
enter
arpl
rclb
pop
out
repnz
jp
out
cmpsl
jge
jnp
repz
add
fbld
fdivl
add
adc
push
lahf
add
mov
fcmovbe
pop
mov
push
add
xchg
dec
and
mov
add
in
sbb
push
iret
push
in
out
add
shr
add
pop
xor
rol
sti
cltd
push
loope
adc
pop
and
les
mov
fiaddl
insb
push
xchg
jmp
pop
loopne
das
pop
add
adcb
sti
jns
cli
out
cmp
add
pop
int
add
movsb
push
loop
sbb
add
jno
push
pop
jl
pusha
mov
sub
mov
xchg
test
rorb
mov
and
cmp
jp
fstpl
ds
add
inc
leave
xchg
dec
push
repz
idivb
enter
arpl
std
or
in
rorb
out
xor
push
int3
cwtl
dec
out
sub
mov
dec
sub
movsb
cmp
add
xor
xor
push
push
push
cmp
mov
in
sbb
and
daa
sub
ss
sub
push
mov
push
jl
orb
add
cwtl
lock
in
lret
loopne
ss
clc
std
sbb
test
sbb
mov
add
add
mov
pop
repnz
and
inc
data16
fbstp
mov
add
testb
cmp
fldl
lds
dec
mov
add
inc
jl
into
xchg
adc
faddp
and
in
cmpsl
cli
add
ljmp
addb
jae
shl
add
mov
and
add
shlb
jmp
inc
pop
pop
inc
mov
add
pusha
stos
mov
iret
jge
mov
lret
jno
lock
sbb
push
out
cmp
add
adcb
nop
add
cmp
add
cld
adc
pop
loop
fadds
push
sahf
mov
dec
add
loopne
jne
loop
loopne
xchg
mov
pusha
pusha
mov
jmp
jle
mov
or
shlb
add
adc
xor
fs
loope
xor
add
push
mov
add
outsl
movsb
fcomi
rorb
lods
add
mov
pop
orl
jl
pop
xor
add
sub
outsl
or
jmp
repz
aas
pusha
sub
in
lods
adc
les
movsb
stos
mov
push
mov
push
ret
iret
pop
daa
je
loope
add
mov
cmpsl
add
outsl
test
add
orl
xor
and
and
jo
adc
dec
loop
shrl
xor
adc
stc
mov
or
cwtl
pop
test
or
imul
sub
dec
inc
add
mov
xchg
or
add
push
leave
dec
pop
call
push
pop
mov
out
adc
mov
pop
jnp
hlt
xor
or
mov
popl
test
sbb
movl
mov
subb
add
fcmovb
out
aam
inc
add
jg
fs
stc
pop
push
sub
aas
mov
jne
fcmovbe
inc
pop
mov
pop
arpl
jg
and
andl
cmc
add
lods
adcb
sbb
jae
adc
push
enter
mov
movsb
cs
sub
cld
add
mov
adcl
and
xchg
in
add
push
pusha
push
xor
test
les
dec
pusha
xor
push
and
push
cmp
outsb
push
mov
push
cmp
push
adc
sbbb
add
cmp
pusha
pop
jo
add
fs
dec
add
inc
add
or
mov
or
fistps
or
cld
jle
mov
adc
in
jo
sub
add
jg
cmp
rclb
xor
adcb
inc
add
push
inc
or
add
out
pop
jnp
add
jp
mov
adc
inc
jae
pop
hlt
jb
adc
daa
adc
sub
shr
mov
lcall
xchg
sbb
pop
js
mov
pop
nop
push
movsb
repz
pop
dec
or
mov
xchg
jbe
rclb
sbbb
adc
add
repnz
push
push
push
adcb
stos
add
popf
mov
rep
mov
cmp
call
xor
leave
mov
mov
test
inc
inc
cmp
add
mov
and
add
adc
or
sti
add
lea
or
adc
xchg
xor
add
loopne
sub
sbb
pop
adc
xchg
jle
xchg
add
cmp
ret
cmp
out
pop
inc
mulb
insb
jl
mov
add
cmp
jnp
push
mov
out
sbb
and
lods
add
sti
mov
mov
add
xchg
add
xlat
pop
pop
jne
cmc
pop
lret
rolb
add
iret
ljmp
or
pop
out
leave
lret
mov
cwtl
vmptrst
ds
fstps
add
xor
pop
ret
es
dec
pop
add
sbbb
leave
test
clc
jbe
adc
mov
adc
add
xchg
daa
mov
add
add
xchg
ss
add
int3
sbb
cmp
add
enter
lods
mov
jno
jg
add
push
loope
js
or
jb
xor
addr16
adc
stos
pop
pop
test
mov
shl
test
inc
lret
mov
ret
add
cmc
iret
pop
stc
push
psrlq
popf
cmp
dec
sub
jge
pop
push
fst
inc
and
and
and
sub
and
jo
add
fimuls
aas
cmp
addl
sbb
enter
lcall
jle
jo
icebp
and
xor
pop
cmp
add
push
cmp
bsr
js
dec
jns
sbb
mov
or
sbb
mov
ret
int3
out
call
inc
add
add
test
adc
stc
loop
push
add
psubb
add
mov
sbb
or
add
cmpb
jb
mov
mov
push
pusha
xchg
xchg
subl
mov
loope
add
or
adc
and
inc
mov
xor
jns
add
dec
shl
jnp
push
mov
fldl
add
push
orb
push
mov
mov
pop
adc
jbe
add
addb
cli
or
call
pop
arpl
cmp
les
pop
imul
push
hlt
int
rolb
cmpb
sub
sub
stos
xor
roll
mov
ret
add
adc
in
add
repz
add
xchg
or
xsha1
cmpsb
or
leave
xor
xchg
orl
sbb
mov
in
add
jg
repnz
pop
ret
pusha
pop
xor
mov
loopne
sub
xor
pop
add
pop
bnd
push
cmp
add
cmp
in
dec
add
sbb
jmp
int3
xorb
sub
pop
push
int3
or
adc
jo
add
in
add
jl
mov
dec
adc
stos
call
sub
pop
mov
mov
les
pop
inc
rcl
lods
pop
andl
data16
or
sub
jmp
sbb
aas
test
gs
shl
movsbl
adc
jne
mov
inc
call
fcoml
dec
xchg
cmp
jl
cmp
orb
int3
movl
mov
pop
or
addr16
lcall
fildl
fildl
add
test
xor
jae
mov
xor
or
nop
add
shlb
jne
mov
dec
or
add
xor
add
int3
jno
mov
sbb
int
push
mov
movd
push
into
std
dec
xor
int3
int
iret
add
shr
xor
iret
loopne
imul
jp
mov
add
adc
add
push
push
add
dec
loopne
cli
add
cmp
jb
out
add
outsl
std
xchg
pop
sbb
pusha
push
in
vpsrad
add
das
xchg
adc
addb
push
scas
push
mov
cmp
jns
jp
add
enter
inc
out
and
adc
cmp
aas
add
cmp
add
mov
and
mov
aam
add
test
fcmovnbe
rcrl
mov
mov
loopne
pusha
xchg
pop
add
mov
inc
add
push
in
mov
jmp
add
cwtl
mov
test
push
jmp
fstl
mov
push
pusha
and
jae
add
cmp
ret
rcll
xor
adc
push
pop
loop
and
lds
xchg
add
push
add
and
into
cld
xchg
add
or
cmp
or
add
cmp
mov
or
mov
aam
dec
pop
std
cwtl
xchg
movsb
mov
mov
inc
jae
call
add
sti
pop
fstpl
fwait
add
pop
adc
out
adc
cltd
add
xor
push
mov
pop
popf
lock
xor
mov
inc
mov
les
and
jmp
pop
xor
add
cld
and
sub
bound
push
pop
add
sbb
arpl
push
jl
xor
mov
mov
pop
mov
sarb
ret
rcr
movl
out
sbb
add
mov
jns
lods
add
jl
cmp
xor
adc
inc
add
nop
inc
push
sbb
sbb
or
or
dec
pop
dec
jl
hlt
in
pop
dec
cmpl
jp
ror
bound
je
push
add
inc
dec
pop
or
lea
jns
repz
clc
aam
mov
pop
jnp
jno
jmp
or
mov
enter
pop
inc
loopne
mov
dec
loopne
dec
neg
add
sbb
cmp
xor
cwtl
or
pusha
pop
add
inc
test
pop
or
and
in
sarl
clc
jns
sbb
mov
jge
adc
mov
cwtl
fstps
shlb
and
mov
xchg
in
orb
cmpsb
clc
je
les
or
test
mov
subl
mov
lods
or
cwtl
test
sub
cmp
inc
and
mov
add
pusha
and
cmp
cltd
loop
nop
sub
mov
and
and
addb
test
xchg
js
fcompl
ret
sti
arpl
aad
cmp
push
je
ljmp
mov
sbb
add
xchg
or
jmp
mov
xor
rclb
mov
cld
lock
pop
shrb
out
xchg
loopne
ss
inc
dec
subb
jb
cld
jno
fs
xor
xor
mov
adc
add
je
pusha
js
out
and
or
push
adc
mov
dec
pop
xchg
add
add
lods
cmp
inc
sbbb
mov
add
sub
add
imul
cwtl
test
add
mov
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
je
xor
jb
loop
out
addl
clc
ljmp
inc
sbb
shrb
mov
push
and
in
or
dec
rol
pop
or
xchg
nop
movsl
jns
sub
cwtl
jo
in
add
or
ljmp
aad
add
push
insb
jo
dec
add
adc
or
test
je
pop
es
fs
shrb
dec
call
dec
bound
jle
jle
jle
wrmsr
inc
cmp
jle
mov
sub
add
psubsb
jmp
idivl
not
neg
mul
repz
add
or
inc
add
gs
cmp
pusha
and
mov
jo
addr16
les
push
bound
sub
imul
jno
push
imul
lods
cmp
mov
push
movsb
xchg
sub
aaa
adc
pop
push
inc
dec
dec
dec
add
das
cli
inc
les
push
pop
pop
push
add
dec
popa
dec
cwtl
jp
bound
jecxz
push
leave
and
je
ja
jp
add
popa
add
adc
fldenv
jns
add
push
add
sbb
push
add
imul
lock
nop
in
js
clc
les
adc
jo
xchg
add
inc
cwtl
mov
int3
movhlps
and
sub
cmpsb
sub
stc
and
orl
adc
add
xchg
sub
xor
enter
or
js
inc
xor
fsubrs
ret
add
es
outsl
shlb
js
test
inc
xchg
mov
dec
fcoms
xor
and
jo
cmp
cmp
inc
push
push
rcrb
pushf
add
and
push
sub
je
loope
jl
sub
push
cli
jge
in
push
jle
test
or
cmp
add
insb
mov
adc
add
add
pop
xchg
mov
add
mov
imul
and
dec
mov
inc
lea
xchg
add
xchg
cmp
cmp
add
ja
jmp
roll
add
or
mov
mov
push
cmp
pop
push
call
xor
aam
pusha
hlt
jo
incb
shrb
out
or
push
or
or
or
test
dec
jmp
mov
xor
inc
mov
push
xor
or
xor
or
add
and
pop
xor
add
sbb
or
xor
cmp
or
jb
insb
pushf
xor
dec
add
xor
and
add
pop
dec
sub
dec
test
add
inc
cltd
movsb
fsubl
fs
nop
cmpsl
push
mov
add
add
adc
test
test
mov
aas
rdtsc
pop
inc
pop
jl
shlb
inc
or
mov
xchg
popa
int3
cmp
push
subb
jo
pusha
aaa
pop
cld
addr16
les
pop
mov
mov
pop
rorb
int3
sub
fs
cmp
cmp
sbb
nop
fmull
call
mov
loopne
mov
repnz
and
mov
cmp
fwait
mov
and
add
or
or
add
shrl
mov
mov
fwait
shr
int
cmp
jns
cltd
dec
push
test
ret
jp
add
sub
js
int
repz
nop
adc
jl
cltd
les
push
pop
mov
clc
cmp
add
sub
mov
int3
add
popa
fwait
and
xchg
xor
add
or
out
imul
mov
dec
and
fmul
loopne
in
add
andl
es
dec
nop
loope
and
add
and
sbbb
sbb
cltd
dec
xor
add
adc
in
or
call
and
mov
xchg
nop
add
aam
fdiv
push
rolb
ret
push
add
out
outsl
add
les
add
inc
cmp
nop
inc
and
add
add
add
leave
inc
push
adc
dec
and
scas
mov
dec
add
inc
cmp
stos
sub
xchg
and
lock
cmpb
mov
nop
aad
mov
xor
push
xchg
pop
add
push
jbe
test
lahf
ror
fmuls
mulb
or
sbb
dec
push
and
dec
stos
out
mov
out
in
lock
adc
inc
add
cmp
xchg
push
add
inc
je
mov
add
adc
in
add
mov
inc
adc
mov
add
insb
and
xchg
xchg
add
adc
out
repnz
ljmp
or
mov
and
mov
add
adc
dec
add
or
call
cltd
nop
xchg
jle
jg
aas
enter
pop
pop
dec
or
in
xchg
cs
inc
jle
jp
pop
jl
mov
cmc
scas
incl
jne
hlt
mov
dec
push
adcl
xchg
sbbb
inc
jp
mov
inc
mov
lret
cld
in
jle
insb
dec
jno
mov
add
add
push
enter
mov
psrld
jae
orl
fsubrl
inc
mov
mov
cmpsl
aam
in
imulb
adc
push
adc
or
dec
andl
pushf
adc
push
add
aam
loop
clc
clc
dec
xor
imul
cmp
xlat
mov
adc
je
add
mov
mov
or
fs
sub
sbb
sbb
push
arpl
fists
jecxz
outsl
outsb
xor
xor
xchg
pop
mov
mov
sbb
insl
add
mov
pop
push
add
jb
jne
and
add
xchg
outsl
arpl
mov
sbb
sbb
push
jmp
or
add
mov
push
add
jne
mov
push
xor
or
and
jle
add
out
inc
fisubrl
ret
add
jge
sti
push
jnp
add
push
call
in
inc
js
dec
inc
and
gs
add
jne
sub
adc
outsw
inc
inc
xchg
mulb
pushf
push
jae
ss
dec
add
xchg
dec
popa
outsb
add
or
sahf
adc
inc
imul
scas
push
movsb
pop
lods
dec
cmp
xchg
inc
jb
cmpsb
jo
cmpsl
loop
add
xor
ljmp
or
mov
test
inc
xorl
hlt
push
add
jge
popf
lods
stos
rclb
sbb
push
inc
add
mov
je
add
es
adc
add
aaa
cmp
sbb
xchg
pop
add
lock
jo
xchg
xor
or
add
push
mov
add
jg
insl
push
imul
mov
jp
cmp
dec
cltd
add
jb
lret
vmwrite
mov
orb
out
out
or
addr16
popa
jne
inc
outsl
js
hlt
adc
ds
sti
insb
je
enter
aas
push
imul
xchg
sub
cmpsb
cmp
ja
adc
loope
fiadds
add
jo
inc
mov
jp
pop
dec
push
outsl
push
sbb
sub
jg
pop
and
sub
lods
sub
cmp
dec
in
xchg
adc
add
daa
xor
mov
sbb
cmpsb
into
movsb
add
inc
jbe
adc
cltd
sarb
ds
adc
adc
add
and
movsb
jbe
repz
add
xchg
xchg
sbb
adc
push
or
shrb
mov
imul
fmul
jb
aam
rorb
lock
enter
movsb
mov
mov
sar
sbbb
xor
pop
and
sbb
cmp
lahf
add
adc
sbb
add
jne
jmp
lods
mov
jo
jae
inc
push
outsl
add
repnz
jg
sub
mov
sbb
dec
sahf
push
stos
loopne
sbb
call
xor
insl
ljmp
inc
sbb
mov
xchg
mov
pusha
sarb
call
add
mov
push
movsl
add
pop
popl
xchg
sahf
aam
pop
scas
pop
into
clc
add
xor
stc
shrb
push
int3
or
mov
inc
add
dec
inc
das
mov
sub
sbb
scas
mov
punpckhdq
jns
add
mov
add
push
inc
lods
jecxz
xor
out
dec
aas
aam
inc
mov
and
xchg
loopne
insb
testb
in
mov
mov
int3
mov
lods
add
out
adc
add
cmp
dec
outsl
mov
sbb
lds
xchg
into
add
or
pop
lahf
lods
outsl
add
mov
jle
add
outsl
ja
mov
inc
sahf
xor
inc
insb
addr16
add
push
and
mov
imul
data16
aas
movsl
mov
mov
inc
mov
push
pop
pop
mov
jmp
fmul
ljmp
xchg
mov
call
inc
xchg
or
xchg
and
pop
fsubs
fcoml
jne
icebp
add
leave
movsl
sbb
test
add
sub
orl
lods
xor
daa
add
movsl
sub
or
add
es
inc
jne
cmpsl
mov
movsl
add
add
ja
dec
push
sbb
out
adc
repz
push
inc
sub
jmp
insb
inc
mov
sub
xchg
adc
and
mov
cmpsb
sbb
not
jno
stos
mov
push
jbe
fistpl
mov
or
push
sbb
pop
add
push
fmull
push
xor
jo
scas
add
jl
jo
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
incb
clc
push
xor
je
jbe
push
js
jp
jl
jle
pop
je
add
sbb
xor
popf
aad
add
xor
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
and
inc
push
dec
lock
pop
pop
call
xor
clc
popf
cld
movsl
clc
mov
mov
ret
cld
leave
cld
jecxz
ljmp
or
adc
pop
inc
xor
cmpsl
dec
pop
cmpsl
fimull
movb
add
loopne
cmp
jb
sbb
cmp
aas
add
pop
pop
arpl
jb
jns
fwait
rorl
mov
aas
add
sub
xor
sub
icebp
mov
ret
leave
lret
inc
iret
cli
dec
inc
add
cwtl
push
rorb
sub
jb
inc
je
jbe
js
jp
lea
pushf
daa
mov
dec
shll
call
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fbstp
repz
push
dec
push
cmp
cmp
test
xor
cs
inc
add
and
add
cmp
jp
sub
je
jbe
js
mov
push
add
lea
xchg
test
add
inc
daa
dec
inc
push
or
jae
add
add
xor
cld
xor
js
xchg
call
add
inc
dec
movsb
mov
ret
xor
dec
xorl
add
dec
cmp
je
jbe
sarb
jp
jl
test
cmp
popf
daa
sbb
push
inc
lahf
dec
pop
push
xchg
push
pop
dec
cmp
jno
jns
andl
lea
fwait
loopne
leave
mov
out
dec
loopne
add
loope
cmp
es
cs
lret
xchg
push
repnz
xchg
iret
mov
or
sub
icebp
cmpl
cmp
jecxz
lock
addl
shll
fldcw
add
icebp
cmp
xor
jp
adcb
lcall
cmp
ds
cmp
jg
ljmp
add
or
add
dec
xor
jle
inc
fwait
dec
stos
push
mov
push
jb
jp
xor
jle
add
mov
mov
ret
rcl
loop
ljmp
cld
or
dec
adc
sub
ja
sbb
inc
daa
test
pop
mov
in
jb
repnz
xchg
xchg
mov
stos
shll
in
clc
inc
cmp
addb
xor
inc
xchg
cmp
mov
sbb
jo
js
cmpb
nop
add
mov
jb
je
jbe
js
add
in
xchg
or
repz
maskmovq
testl
mov
adc
xlat
sti
daa
push
inc
in
dec
push
sbb
pusha
inc
push
sbb
stc
mov
mov
pop
mov
lahf
rcrb
call
add
xor
leave
adc
add
fldenv
loope
jmp
stc
inc
orb
pop
inc
aas
jb
je
jbe
js
jp
jl
jle
jle
jle
add
enter
fdivs
lock
test
add
adc
sldt
mov
shrb
adc
jo
je
fcoms
mov
vmread
jl
jle
jle
jle
jle
dec
loopne
jle
call
xor
xchg
sub
lahf
add
pop
cmp
inc
mov
js
addb
dec
ljmp
mov
fcoml
jmp
out
mov
xor
incl
mov
ret
cmp
inc
leave
sbb
dec
stc
dec
adcb
mov
nop
in
call
mov
popf
lods
pop
mov
ljmp
iret
lock
cmp
add
fmull
ss
or
mov
scas
pop
inc
dec
inc
stos
xchg
push
in
and
pusha
xchg
gs
jae
mov
iret
lods
iret
mov
mov
mov
cmp
aaa
and
adc
adc
dec
and
inc
fldenv
movsl
insb
stc
jl
jl
out
out
out
out
andb
sbb
sub
dec
cli
xchg
lods
ds
enter
jl
or
or
adc
sbb
js
jp
add
leave
cmp
mov
shll
je
js
jl
cmp
stc
cwtl
stc
mov
add
pop
int3
mov
aam
fcom
fdivl
xor
clc
jo
and
and
add
int3
jne,pt
adc
lcall
mov
and
push
inc
outsl
sbb
fsubl
push
xchg
in
call
shl
add
and
test
xor
xor
loopne
test
jb
cwtl
pop
jbe
js
inc
pusha
mov
xchg
xchg
inc
sbb
test
rclb
mov
xchg
inc
sbb
add
cld
dec
cld
jb
je
jbe
push
pop
pusha
lahf
adc
cmpsb
mov
lods
iret
mov
mov
mov
pop
dec
movb
mov
enter
cmp
jo
rcll
testb
sub
sbb
loopne
in
add
cmpsb
in
stos
lock
xchg
push
push
pop
mov
mov
xchg
movb
popf
sbb
cmp
inc
in
sti
nop
mov
daa
lret
sub
push
loop
add
mov
cmp
call
aaa
aas
xchg
movsl
mov
daa
test
inc
add
mov
loope
mov
in
xchg
inc
jne
jns
add
inc
jl
jle
dec
add
cltd
leave
popf
or
movsl
sub
sbb
xorb
push
sysexit
decb
mov
mov
jg
add
fiaddl
xchg
aaa
ja
push
inc
cli
in
std
call
add
cmpsl
js
jp
cmp
sbbb
xchg
mov
add
lods
scas
adc
mov
mov
cmp
xchg
cmp
rcl
jecxz
push
xor
push
dec
xchg
pop
mov
jo
jl
jle
push
clc
mov
nop
cmpl
push
cmp
sub
out
popf
test
or
loop
pop
rorb
xchg
xor
daa
scas
inc
mov
or
rorl
inc
jecxz
mov
jmp
add
adc
dec
iret
jbe
xcrypt-ecb
cmpsl
dec
mov
shlb
add
jb
je
dec
roll
movsb
or
mov
dec
iret
arpl
cmp
pop
xor
jae
adc
cmp
cmp
mov
adcl
dec
xchg
nop
push
jl
leave
cmp
mov
jle
inc
std
sbb
cmp
sbb
push
lahf
lods
pop
or
out
adc
add
add
cs
popa
in
inc
mov
cmp
das
daa
jns
adc
lahf
xchg
mov
add
ljmp
pusha
mov
std
lock
xor
pop
adc
pop
in
sbb
jle
das
add
inc
cs
sbb
lahf
push
popf
arpl
xchg
test
mov
mov
flds
adc
sbb
inc
and
xchg
orb
lods
loope
push
and
pop
nop
inc
lret
jnp
add
ss
psrld
pushf
cmp
repz
andb
pop
dec
outsl
cmpsl
cmpsb
mov
ret
or
add
xchg
daa
mov
rolb
mov
dec
cmpsb
push
cli
jbe
add
adc
das
mov
sbb
sti
leave
dec
sarl
pop
loope
jmp
dec
les
ror
fnop
loope
call
push
sub
or
or
bswap
adc
sbb
adc
out
in
jg
push
test
cmpsl
add
pop
and
jge
push
je
sub
lret
add
xor
dec
rorb
sub
fadd
cmp
call
rorl
add
or
inc
cwtl
sbb
sbb
jno
push
sahf
xor
xor
cmp
inc
mov
adc
loope
push
cmp
xchg
dec
pop
lcall
push
rclb
int3
test
fsub
inc
movsb
in
mov
or
or
adc
push
sbb
sub
xor
test
repz
repnz
leave
lods
push
push
jle
add
pop
cmp
add
xor
stc
int3
cli
les
imul
jno
dec
jg
popf
inc
fadd
jmp
sub
cmp
xor
add
mov
pop
call
lock
clc
mov
jb
je
dec
mov
and
mov
pop
loope
jmp
testb
mov
loopne
sub
add
iret
push
leave
pop
shrl
jnp
xchg
add
mov
mov
add
dec
femms
sub
leave
add
movl
pop
shlb
mov
rcll
xchg
mov
xor
dec
testl
sbb
sub
xlat
in
add
xchg
out
add
sbb
aaa
test
test
cmp
mov
clc
cmp
and
or
push
mov
pop
loopne
xor
xchg
pop
jp
push
call
xchg
sbb
xchg
movsl
lods
mov
insl
cmp
sti
add
push
mov
inc
push
jl
adc
add
out
sub
pop
in
add
fwait
in
stos
lock
hlt
ljmp
xor
add
shrb
push
or
inc
imul
pop
add
pop
jne
pusha
into
pusha
scas
ss
es
fldl
push
test
add
push
dec
lar
xlat
ss
xchg
add
mov
jne
sbb
sbb
movl
cmp
subb
in
and
add
jb
je
add
sbb
cmp
dec
loop
add
iret
testb
aas
xlat
inc
andl
pop
orb
xor
ss
fstpt
dec
aas
push
dec
pop
mov
jle
mov
xchg
test
xchg
hlt
adc
pushf
and
jl
sbb
sub
xchg
dec
sbb
cmp
pushf
cmp
in
je
xchg
subb
dec
jno
ds
cmp
mov
inc
lcall
lock
mov
and
lods
stos
pop
dec
enter
add
xchg
lcall
dec
call
mov
add
test
or
addr16
xor
add
jbe
loope
jmp
add
or
clc
sbb
lock
add
jge
in
psubsb
arpl
or
pushf
dec
stos
subb
in
jl
in
add
addb
adcb
cwtl
test
pop
xchg
cmpsl
dec
mov
push
push
mov
pop
rorb
mov
je
pop
mov
sbbl
jmp
push
add
pop
fdivl
push
cli
and
sar
sub
cwtl
pop
xor
add
mov
jl
clc
test
push
rcll
push
movsb
jb
pop
lods
shll
sarb
in
jle
pop
pop
hlt
cmovno
aam
cmp
or
adc
or
pusha
les
add
pop
mov
and
les
je
mov
inc
add
push
call
rolb
adcb
enter
add
int
inc
add
and
add
into
inc
mov
add
int
push
jb
and
dec
dec
add
repz
hlt
lock
xor
pushf
xor
xor
imul
add
mov
mov
ret
aaa
cmp
mov
xchg
cmp
pop
cmp
and
jle
leave
fcmovnbe
out
andb
inc
imul
add
or
add
addr16
es
add
imul
fdivl
out
ljmp
adc
sbb
xor
add
rolb
xor
in
call
add
hlt
imul
in
test
je
sti
and
add
and
xor
incl
test
push
and
loopne
roll
mov
rorb
and
xchg
sub
rolb
je
jp
mov
jle
add
pushf
lock
mov
add
push
push
cmp
dec
pop
mov
shrb
movsl
push
push
adc
dec
dec
ficomps
push
clc
inc
jp
pop
bound
mov
out
pusha
das
cmp
call
je
pop
add
adc
or
jno
jo
lahf
push
iret
test
xor
rcll
mov
pop
hlt
xor
popa
cs
movsb
cmp
insl
mov
add
push
sub
shr
add
add
cmp
dec
add
jbe
inc
daa
push
dec
add
jnp
rclb
out
ret
push
mov
cmp
pop
add
pop
daa
pop
inc
insl
xor
leave
add
push
xor
pop
pop
add
mov
cmp
mov
and
pop
test
cld
cmp
cmp
push
xchg
cmp
xchg
cmpsb
daa
stos
dec
ficomps
inc
mov
shll
push
jg
icebp
pop
mov
les
enter
inc
andps
sbb
mov
cld
jb
mov
pop
into
lahf
and
add
lock
call
and
push
xchg
push
and
fisttpl
leave
mov
push
imul
ret
xchg
pop
mov
dec
add
cmpsl
dec
cld
out
pop
cmp
push
adc
add
mov
into
mov
lods
pop
test
push
faddl
xchg
inc
xor
dec
in
idivb
imul
shrb
aas
jg
cwtl
rcrb
mov
mov
add
xor
pop
lock
shlb
sbb
push
out
add
jbe
shll
adc
dec
xor
and
loopne
add
jb
pop
mov
jo
out
add
inc
dec
sar
stc
aaa
add
inc
cmp
lds
sbb
inc
daa
aam
movsl
add
mov
and
stos
add
aam
sarl
repnz
xorl
pop
cmpsl
nop
mov
mov
sub
push
cld
cmp
cmp
incb
add
pop
lods
repnz
outsl
jg,pt
add
sarl
xor
gs
sub
mov
ja
pop
add
xor
sbb
add
pop
in
out
xor
add
sbb
fcoms
mov
scas
popf
iret
adc
icebp
add
push
jle
push
je
add
js
jp
dec
les
push
loope
mov
stc
xchg
insb
fsubr
mov
pusha
dec
scas
pop
shl
loop
cmp
xor
cmp
jnp
dec
shl
shll
jl
mov
lahf
movsb
xchg
push
test
pop
mov
cmpb
in
add
sub
je
jbe
add
or
shrb
jl
add
nop
cmp
xchg
cmp
add
imul
adc
sarb
mov
add
dec
popf
inc
pop
xor
loope
sub
rorb
or
nopl
xor
and
sub
add
cmpsl
in
jae
pop
and
and
xchg
sar
clc
test
inc
pop
mov
push
cmp
push
cmp
push
cmp
add
enter
xor
sbb
mov
hlt
xchg
cld
ret
mov
push
add
je
adc
or
and
adc
call
push
add
pop
loopne
nop
lcall
sarb
or
xor
fsubrs
sti
pop
mov
add
mov
push
adc
jnp
add
push
pusha
cltd
or
xor
and
mov
mov
mov
or
sbb
cmp
mov
jb
cmp
push
xorb
or
int
loope
repnz
loopne
add
shll
push
sbb
arpl
pop
lds
add
inc
and
sub
add
cmp
and
cmpl
rcll
bsf
dec
sbb
push
cli
cmpb
xchg
repnz
sub
ds
pushf
inc
add
fwait
push
add
movsb
cmpsb
rcrb
add
loopne
xor
lret
pusha
xor
xchg
test
int3
xchg
adc
movsl
popf
pop
sub
das
aas
mov
lock
pop
shr
push
add
mov
mov
cmp
pop
add
lock
cmp
or
mov
pop
cs
and
mov
push
lods
lock
fs
add
imul
orb
ret
pop
sbbb
pop
adc
loopne
sti
ja
dec
lcall
jp
cmpsb
jl
jle
pop
or
adc
lcall
push
cs
scas
add
inc
and
cwtl
or
jmp
insb
call
dec
mov
loopne
inc
add
and
pop
lock
insb
add
cmp
iret
mov
sarl
push
sbb
je
orb
add
xchg
jl
sahf
out
in
loop
jle
in
mov
cmp
add
daa
push
rorl
enter
jle
in
cmp
pop
xchg
sbb
fadd
and
mov
push
jl
or
mov
cmp
je
cmp
add
or
jecxz
xchg
jmp
out
jbe
pop
sbb
lahf
sti
movsb
fildl
add
add
jl
push
lret
xlat
inc
dec
addr16
xchg
ja
jge
add
xchg
repnz
lock
pop
lret
movsb
cmc
push
jo
or
add
popf
sub
add
imul
jae
ja
dec
jnp
add
jmp
call
jb
je
jbe
inc
rolb
and
inc
in
adc
mov
imul
push
int
cwtl
xor
push
xchg
dec
adc
ja
cmp
popf
repz
lods
xchg
or
aad
add
and
add
jbe
js
jp
dec
add
xchg
lret
xchg
mov
leave
mov
add
cli
mov
mov
insl
sbb
or
ljmp
and
xchg
and
js
aas
rcll
sbb
jg
add
cmp
push
cmp
push
add
fs
dec
add
mov
dec
lret
ja
lock
xlat
pop
cmpsl
xor
out
cs
in
repnz
pop
aas
sbb
cmp
fs
jmp
sbb
jbe
inc
in
and
dec
rolb
cmp
cmp
or
dec
popa
xchg
or
movsbl
push
dec
pop
shr
xchg
cmpsl
sub
repnz
xor
push
add
iret
push
sahf
xlat
clc
add
call
push
add
push
jp
dec
xor
add
inc
loope
pop
stc
mov
xchg
rcrl
inc
mov
add
inc
clc
mov
sbb
mov
inc
add
je
adc
add
push
imul
movsb
inc
push
add
sub
mov
sub
push
xchg
mov
add
icebp
add
aas
pop
xchg
test
mov
push
rorb
mov
xor
imul
test
cmp
fiadds
and
add
and
mov
js
or
cmp
pop
pop
mov
cmp
cld
push
add
je
pop
push
lcall
inc
sbbl
ret
enter
mov
add
and
adc
loope
in
pop
xchg
dec
inc
pop
popa
pop
jno
jns
xchg
xchg
in
lcall
mov
addl
ds
push
mov
fs
pop
fists
lret
pop
xor
sub
ret
pusha
ror
jb
je
and
dec
dec
ret
loop
pmaxub
adc
xchg
add
in
in
mov
add
pop
pop
mov
sahf
aas
xor
js
pop
add
int3
shl
div
or
push
mov
adc
sub
add
and
jmp
push
push
aaa
add
jmp
scas
mov
cmp
nop
daa
mov
or
enter
pop
lds
rclb
leave
andb
shrl
jle
adc
rcrb
dec
xchg
fnstenv
sub
test
add
jl
stos
aas
jecxz
in
and
add
add
or
movsl
hlt
fiaddl
fnstsw
mov
fnstenv
popl
iretw
jl
mov
dec
jge
aas
pop
mov
scas
test
ret
mov
andl
mov
cmpb
adc
mov
mov
xchg
test
add
cmp
cmp
add
mov
mov
add
call
add
addr16
pusha
loope
cmp
add
sarb
add
xchg
jge
ret
or
in
outsb
jp
add
rclb
jle
popl
mov
out
jns
cmp
dec
out
sahf
push
add
adcb
hlt
mov
add
push
roll
add
icebp
clc
cs
mov
pop
lock
add
and
add
in
cs
add
xor
mov
fdivl
dec
out
sbb
jae
xor
pop
cmp
and
push
mov
lock
decb
and
dec
mov
jbe
mov
scas
mov
repnz
in
or
ljmp
jp
cmp
insb
aas
call
in
repnz
aas
subb
xchg
arpl
clc
add
cmp
aam
outsb
mov
nop
jg
sti
stc
add
jl
or
aaa
and
vmread
mov
enter
lcall
inc
add
xchg
sbb
cmp
ds
add
push
jecxz
repz
pop
lea
stos
lret
mov
mov
leave
stos
in
cld
addb
cmp
inc
cmp
and
sub
movsb
pop
cmp
arpl
insl
add
and
push
or
add
push
adc
pop
mov
cwtl
add
lcall
add
fsub
sub
cmp
ljmp
fs
aaa
in
adc
mov
sub
sub
stc
out
nop
sti
clc
or
add
adcl
ret
dec
add
push
loop
fcompl
pop
pop
add
std
jno
add
xchg
xchg
jl
cmp
add
dec
jae
sub
icebp
add
lret
add
jecxz
and
add
add
shll
cmp
loopne
es
and
cmp
pop
add
lods
mov
leave
adc
mov
sbb
cmp
fidivrs
add
pop
push
xor
loopne
mov
mov
add
or
adcb
cmp
dec
mov
out
cmp
add
loope
push
cmp
push
inc
mov
push
pop
lea
mov
aas
lock
fcmove
in
repz
add
mov
xor
setne
push
sbb
xor
popf
fiaddl
adc
dec
aam
mov
leave
add
enter
fcompl
sbb
enter
add
ret
xor
add
jl
jge
sbb
cmp
xchg
ds
aas
cltd
leave
popf
shll
call
shr
stc
mov
jb
dec
jl
incb
mov
lea
cmp
inc
add
js
dec
repz
cld
addr16
pop
or
inc
push
repnz
fs
and
jb
mov
add
cmp
and
into
stos
or
fimuls
inc
out
lods
push
out
addb
daa
xor
popf
pop
test
or
aaa
xchg
loopne
ret
aam
push
cmp
repnz
insb
fiadds
push
sub
pop
into
adcl
mov
ret
sbb
dec
aas
add
fwait
pop
and
add
mov
lods
int3
jo
loopne
les
lods
je
jbe
add
xchg
fldenv
push
sbb
roll
cmp
jmp
out
cld
pusha
aas
mul
sti
call
xor
push
mov
add
js
pop
xor
test
dec
nop
sarb
cmp
xchg
daa
loope
mov
mov
jmp
inc
push
push
add
jno
add
cld
dec
adc
push
cld
lret
mov
inc
loopne
pop
xor
cmp
daa
sub
pop
push
xor
fs
inc
pop
jo
je
js
lcall
test
add
jo
xor
and
mov
aaa
add
fcmovb
or
mov
insl
xorl
cmp
pusha
jb
loopne
dec
xchg
pop
adc
push
push
insl
cmp
addl
and
dec
and
sub
call
sub
mov
jle
add
add
adc
pop
xchg
faddl
repnz
push
call
xchg
dec
pop
jl
lock
outsl
subl
clc
ret
je
stos
cmp
popf
ja
add
jb
pop
cmp
aad
lock
jle
in
call
cmc
ret
sub
incb
add
add
mov
pop
pusha
ret
jmp
cld
push
add
push
sbb
aas
inc
movsb
das
push
cmp
mov
or
add
jb
pop
cmp
inc
cli
xor
in
pop
xor
aam
lock
in
add
stc
xor
sarl
fldcw
push
add
jnp
inc
dec
add
add
cmpsb
mov
add
pop
cmp
clc
jmp
mov
les
call
and
dec
sub
xor
scas
jmp
cwtl
inc
mov
out
in
icebp
xor
add
push
add
add
or
dec
sbb
inc
fisubrl
clc
lock
jb
adc
and
sub
iret
das
add
flds
cmp
mov
add
cwtl
call
add
and
push
inc
mov
fs
sbb
or
xor
out
mov
outsb
ljmp
jl
pop
jbe
js
push
ret
mov
adc
pop
cmpl
cmpb
add
push
lret
jne
rolb
or
test
add
and
dec
sub
inc
iret
push
add
jge
adc
sub
not
rcr
aas
or
rcrl
je
outsb
and
ret
jle
and
mov
push
rcrb
jo
pop
insl
add
in
and
dec
pop
clc
push
loopne
mov
hlt
leave
add
popf
je
push
rolb
mov
imul
je
jbe
push
mov
pop
icebp
ret
inc
sbb
dec
in
loopne
popf
jo
and
lcall
add
nop
push
adc
dec
repnz
or
add
cs
daa
inc
add
data16
xchg
sarb
add
test
daa
roll
cmp
jnp
xchg
inc
lahf
lods
dec
and
adc
test
cmp
cwtl
pop
add
lea
sbb
stos
mov
sbb
je
rcrb
add
subb
jb
loope
add
xchg
daa
cltd
fs
int3
adcl
push
add
push
adc
sbb
popa
ds
imul
push
mov
mov
mov
ffreep
pop
jle
sbb
add
adc
int3
aaa
hlt
add
mov
push
aas
imul
test
mov
or
pop
push
scas
jle
sbb
dec
sub
dec
add
sahf
pushf
adc
sbb
push
popa
sar
ds
out
add
fsubs
xor
cwtl
lock
add
dec
adc
das
call
int3
js
xorb
es
fiaddl
add
or
sbb
sarl
dec
and
stc
scas
popf
mov
fdivp
cmc
adc
jl
add
mov
je
jbe
js
jns
cmp
icebp
add
push
mov
push
in
add
hlt
jnp
lock
mov
add
fnstcw
add
mov
pusha
fisubrs
hlt
cmp
mov
or
dec
pop
sbb
mov
mov
sub
pop
or
xor
jmp
dec
mov
add
in
dec
cmp
xchg
ret
shlb
lock
add
mov
pop
jle
add
xchg
xor
movl
sbb
adc
push
rcrb
lods
mov
enter
sbb
fimull
pop
lcall
or
lods
inc
sbb
fdivrs
dec
jnp
push
sub
repnz
push
add
jo
cmp
ret
cmp
dec
aas
mov
cmp
clc
mov
mov
cmp
popf
ss
inc
mov
add
fcoms
xor
sahf
add
inc
insl
enter
mov
popa
dec
add
shll
cmp
fisttps
scas
call
sahf
or
test
cmp
xchg
adc
mov
adc
test
loopne
pop
mov
shrb
add
ret
loope
nop
in
mov
mov
pop
leave
xchg
aad
loopne
je
adc
out
lcall
cmp
add
jp
add
xor
xchg
add
cmp
popf
push
add
ret
xchg
add
loopne
add
adc
js
jp
dec
push
pop
jo
jle
repnz
bswap
loop
test
pop
mov
xor
ss
and
fists
clc
cld
aam
sbb
xchg
sub
inc
jle
in
pop
arpl
outsl
nop
xchg
mov
mulb
pushf
rcll
adc
add
mov
sub
xchg
add
mov
insb
mov
jl
xchg
pushf
out
repnz
pop
rclb
pop
adc
pop
mov
addl
data16
add
push
lahf
push
xchg
loopne
mov
pop
dec
test
insb
and
cmove
js
jl
dec
dec
clc
loop
in
std
lcall
cld
js
pop
lret
pushf
and
inc
or
sbb
and
adc
shlb
cmp
xor
cmp
leave
mov
pop
nop
out
aas
sets
pushf
test
movsb
jmp
mov
dec
and
push
loope
dec
repz
jmp
insb
bound
add
das
movsb
inc
add
mov
montmul
cmpsb
lret
int3
add
adc
jl
lock
push
mov
ret
insb
mov
pop
nop
repnz
andl
push
cmp
in
cmpb
and
test
cmc
movsb
jg
jmp
in
adc
pop
outsl
add
leave
aam
into
pop
add
sub
xchg
in
lock
iret
sbbb
fs
lret
xchg
jl
jo
adc
add
jnp
mov
pop
mov
cmp
push
and
call
gs
fs
nop
lea
cmp
cmpb
sub
pop
das
or
inc
daa
sub
add
push
mov
loope
pusha
add
xchg
mov
inc
mov
fs
add
sub
jge
ret
testl
push
mov
jmp
adc
xchg
nop
pop
cs
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
xor
rol
add
add
pop
or
hlt
add
dec
adc
adc
nop
mov
test
pop
and
cltd
sub
ret
add
orb
or
add
xchg
mov
lea
add
sysexit
test
inc
and
mov
add
push
push
sbb
cltd
or
push
ljmp
sub
cltd
add
inc
add
loopne
sbb
mov
add
push
pop
pushl
mov
push
add
add
mov
cmpb
fisttpl
leave
add
js
scas
add
fisttpll
shr
in
cmp
add
in
sub
add
add
dec
jge
dec
loopne
sbb
pop
bound
stc
add
rep
lea
loope
sahf
cli
pop
add
mov
fwait
cmp
cmpb
or
test
jg
aam
lcall
ja
add
sbb
shlb
ret
call
mov
mov
cmpsb
jle
push
sub
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
stos
shlb
pop
jnp
inc
jl
js
pop
and
sbb
add
out
push
and
add
lods
push
adc
add
jmp
push
xchg
dec
leave
inc
adc
flds
and
cmp
add
adc
das
add
into
mov
roll
ret
xchg
sbb
lea
mov
push
lods
roll
fcoml
mov
out
add
in
or
xor
xchg
dec
add
fcom
and
or
pop
push
xchg
ret
inc
add
xchg
cmp
pop
pusha
je
jl
pop
dec
shrl
pop
and
add
clc
rorl
and
imul
add
sarb
neg
push
mov
add
popf
enter
and
dec
xlat
jp
inc
fnstsw
movsb
mov
pop
in
popa
add
mov
clc
pop
inc
dec
popf
add
imul
mov
cmp
sub
sbb
cmp
pop
aas
inc
mov
out
pushf
sti
jle
cmp
add
insl
and
mov
add
js
add
pop
out
and
repnz
and
das
cli
or
ljmp
push
out
inc
rolb
jle
or
add
gs
pop
int
cmp
add
adc
sti
inc
in
es
mov
movsb
in
cmpsb
mov
cmp
or
ljmp
pop
xor
xchg
add
mov
jge
jmp
test
and
add
jno
mov
cli
adc
and
xor
inc
aas
test
clc
jl
and
fnstcw
fldl
mov
dec
push
xchg
hlt
add
daa
stos
aas
pop
mov
sub
clc
add
jg
hlt
mov
incb
xchg
addb
push
add
dec
movsb
in
mov
ljmp
pop
pop
sub
xor
mov
lea
mov
lret
add
dec
cld
or
aas
mov
add
popf
es
jnp
dec
aam
cmp
cmp
aas
add
imul
jecxz
xor
jnp
xchg
and
inc
jbe
icebp
pop
add
xlat
in
mov
cwtl
out
add
add
loopne
mov
mov
mov
jge
mov
int
stc
dec
into
cmp
inc
mov
push
push
in
fs
add
mov
rcr
add
rcll
call
insl
sub
pop
xor
rolb
fstl
repnz
add
and
add
lods
dec
nop
jno
add
push
inc
xlat
inc
sub
or
emms
jmp
pop
xor
jnp
cwtl
cmpsb
sub
int3
mov
stc
jbe
out
mov
imul
scas
aam
add
movsb
or
inc
test
lret
xlat
pop
mov
jno
add
push
iret
fcomps
pop
xor
jb
sub
push
decb
add
or
xor
jmp
jge
inc
shl
ror
test
or
xchg
and
ja
rcrb
and
xchg
imul
push
add
test
jnp
outsb
mov
dec
xchg
pop
fiaddl
pop
jae
sbb
jp
cmp
nop
outsb
add
dec
lds
in
mov
cmp
push
mov
add
sub
rolb
sub
jg
cmp
mov
jmp
and
sub
sub
ret
push
lcall
jge
jbe
rolb
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
rclb
sub
add
movsb
pop
jmp
dec
shl
inc
mov
call
xor
jae
nop
push
add
inc
inc
lock
dec
sub
nop
push
roll
adc
leave
add
call
roll
aad
sbb
out
minps
mov
popa
add
jo
loope
mov
jnp
add
pop
push
imul
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
mov
shlb
outsb
je
adc
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
jb
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
and
add
jnp
mov
fiaddl
test
repnz
push
jmp
dec
lcall
mov
pop
int3
lds
adc
xor
and
jo
and
int
xor
cmpsb
add
xchg
mov
dec
fildll
inc
and
cmp
xchg
test
mov
sti
sub
in
fildl
adc
std
mov
push
mov
jne
mov
adc
es
fcoms
orb
or
stos
mov
movsl
sub
inc
add
mov
stc
int
jne
pushf
enter
jecxz
dec
test
push
enter
mov
dec
jne
loope
lcall
jo
mov
sub
int
lret
andl
add
jns
dec
adc
popf
es
pop
mov
mov
mov
paddsw
dec
pop
mov
rorb
nop
scas
push
lds
mov
jae
mov
jge
pop
loope
add
jge
fidivrl
iret
xchg
pop
add
mov
out
xlat
mov
mov
jne
je
sbb
les
cmp
xor
mov
jl
push
in
lcall
faddl
nop
insl
leave
fistl
pushf
arpl
xor
xor
cmp
sbb
icebp
icebp
push
lods
xorl
leave
mov
cld
in
or
xchg
jae
inc
insb
jne
clc
adc
orl
mov
and
lret
cmpsb
mov
lret
inc
arpl
pop
ja
jg
ret
cmp
cmpl
int3
outsl
mov
fcmovu
xchg
xchg
cmp
call
xchg
scas
push
repz
adc
dec
das
out
add
nop
test
repnz
xor
xchg
into
mov
in
dec
stc
adc
xorb
movsb
ficoms
sbb
cmp
cltd
dec
int3
iret
movl
out
pop
cmp
outsb
lgs
mov
sar
test
out
mov
insb
jb
inc
out
xor
inc
aad
sbb
add
xchg
and
test
movsl
or
sahf
sti
jle
mov
mov
jae
test
test
dec
xor
xchg
inc
jmp
or
sbb
jl
in
fadd
add
gs
mov
sub
into
mov
shr
jae
adc
lods
out
inc
jg
cmpsb
aas
shrl
adc
into
arpl
ret
add
or
lea
pop
xor
cmp
dec
ret
mov
mov
and
jb
adc
inc
outsb
addr16
push
add
out
xor
les
je
mov
fmull
inc
cmp
jge
ja
push
cmp
adc
out
pop
call
lcall
adc
rcrb
jno
std
sbb
mov
sub
mov
push
out
pop
push
inc
data16
jg
jnp
push
out
test
jle
jl
add
jg
push
inc
pusha
fld
test
insl
adc
stos
pop
ja
add
dec
lahf
mov
lock
xor
das
add
pop
cltd
dec
aad
das
pop
inc
test
jmp
arpl
mov
aam
flds
hlt
xchg
fstpl
jbe
inc
cmp
pop
outsl
scas
aaa
add
xchg
stos
into
adc
les
push
icebp
lret
lea
mov
mov
and
mov
sbb
cmpsl
mov
or
or
jg
xor
jnp
dec
push
dec
outsb
and
pop
jne
mov
stos
adc
rcll
ss
xlat
addr16
jle
mov
mov
mov
push
xchg
mov
adcl
sbb
cmp
push
fstpl
pop
xchg
je
dec
in
hlt
dec
jae
dec
jnp
lds
dec
aam
call
inc
cmp
pop
scas
or
pop
fnstsw
std
enter
call
cmp
in
subl
movsl
jecxz
xor
or
jb
les
sub
fs
idivb
cmpsl
sbb
cmp
cmp
dec
mov
mov
lds
enter
add
out
ja
mov
sahf
jne
cmp
sbb
xchg
jno
mov
jno
push
lret
ljmp
jo
lea
cmpsb
xor
insb
test
jns
pop
jns
push
test
inc
and
repz
mov
push
or
js
xchg
jno
inc
jecxz
inc
dec
sbb
fyl2x
xor
lea
cwtl
jae
dec
andl
sahf
push
jne
inc
enter
ds
mov
fdiv
cli
in
mov
cmp
imul
pop
mov
mov
mov
movsb
movsb
adc
das
jecxz
jns
or
jo
cld
mov
or
jecxz
jmp
mov
test
int3
lahf
fcompl
jne
repz
das
xor
inc
and
sbb
xchg
xchg
arpl
dec
lcall
jne
cmp
test
sub
mov
jge
lahf
lret
mov
push
das
popf
dec
push
adc
xchg
sub
cmpsl
sbbb
jns
mov
mov
insb
mov
pop
mov
adc
xor
sub
test
enter
in
orb
inc
stc
ja
pop
sub
cmp
mov
lods
into
rcll
daa
stos
inc
addl
cmp
mov
push
and
scas
out
in
pop
mov
lds
mov
adc
xor
pop
adc
fnsave
mov
pop
out
lods
mov
loopne
push
mov
jl
xchg
mov
add
push
xor
orl
adc
dec
dec
mov
mov
test
into
inc
outsl
mov
cltd
xchg
aad
aad
jnp
inc
aaa
cmovge
jge
jbe
and
or
rep
add
sti
adc
mov
sub
jo
daa
adc
or
push
mov
test
adc
pop
scas
or
jae
enter
mov
aaa
test
jo
mov
test
outsb
pop
out
mov
cs
test
fdiv
lahf
fs
in
add
and
cs
add
inc
arpl
or
ss
es
test
lcall
es
sti
cs
inc
sbb
sti
into
mov
rdtsc
sbb
movsb
sub
stos
mov
xchg
les
sbb
sti
push
jmp
in
sub
cwtl
sbb
jmp
mov
in
jecxz
or
cmp
js
mov
popf
mov
xchg
push
xor
loopne
push
push
gs
sbb
sub
shr
mov
fs
mov
dec
clc
jp
pop
cmp
fnstcw
ljmp
sub
mulb
mov
fmuls
movsb
cmpsl
int
or
or
popf
sbb
shlb
int
lods
cwtl
or
and
sub
jno
cmpsb
push
fldl2e
lret
jecxz
push
mov
test
xor
sarb
daa
jmp
nop
imul
loopne
jecxz
add
jp
mov
outsl
aas
pop
shll
stos
sbb
mov
xchg
mov
mov
add
push
imul
push
sahf
pop
pop
inc
test
xor
lock
xchg
rolb
scas
stos
xor
into
fisttps
pop
adc
aas
je
push
pop
js
push
out
pop
fstpl
insl
mov
mov
fwait
inc
ljmp
mov
xchg
frstor
cmpb
nop
ds
xchg
mov
sub
lock
xorl
stos
or
lea
nop
jbe
dec
pop
scas
rorb
jns
mov
cmpsl
dec
movsb
xor
dec
cmpsl
mov
inc
mov
loop
mov
pop
jmp
lock
cli
out
add
jg
add
and
cmp
lds
ret
pop
lods
sti
fnstcw
sbb
roll
gs
xchg
sub
ret
ret
adc
mov
xor
jne
add
sub
scas
pop
fstpl
ds
pop
fs
int3
cwtl
enter
xor
adcb
xchg
repz
insb
imul
and
jg
out
rep
ds
xchg
push
daa
iret
fsubl
dec
mov
add
xchg
mov
push
mov
out
sti
pop
es
outsb
jno
outsl
add
arpl
js
mov
jo
test
jb
pop
into
call
iret
jl
shll
mov
xchg
sub
mov
ret
lods
push
inc
in
dec
flds
xchg
das
out
xchg
lock
dec
in
outsl
mov
adc
mov
divb
pushf
enter
aaa
jmp
dec
jp
pop
xchg
ss
fsubrs
ss
add
test
mov
dec
jo
std
jns
and
cmp
scas
int3
jns
or
gs
data16
test
inc
inc
leave
adcl
js
js
test
jmpw
pop
aam
mov
imul
lods
xlat
and
icebp
jg
movsl
pop
aaa
add
lret
mov
or
enter
jbe
mov
push
imul
xor
into
sub
mov
inc
xchg
pop
adc
xor
lcall
clc
ret
arpl
repnz
in
add
enter
push
jp
xchg
imul
mov
sti
inc
aam
inc
aaa
cs
push
sub
sahf
js
push
out
mull
orl
cs
adc
test
loopne
out
and
shll
dec
int3
loop
xlat
cmpl
fisubrl
xchg
jp
insl
imul
aam
rep
xchg
cwtl
inc
test
lock
mov
sub
out
fnstsw
lods
lods
stos
pop
cltd
rolb
mov
in
sub
imul
stc
xchg
pushl
adc
mov
pop
and
ret
jp
sub
insl
cmpsb
push
or
jne
sbb
add
xor
inc
and
js
mov
stc
and
add
dec
mov
add
iret
enter
fstpt
enter
jns
xor
shl
xchg
mov
movsl
push
add
iret
dec
push
rcll
inc
and
idiv
adc
shll
int
scas
jno
aad
inc
test
jp
movsb
adc
les
pushf
mov
pop
lcall
pop
out
stc
orb
popf
es
mov
or
sbb
xchg
fsubrs
or
ffreep
pop
sbb
js
imul
dec
cmpsl
cmp
pusha
jbe
sbb
cltd
lods
addl
lret
daa
filds
inc
and
mov
inc
fsubl
scas
iret
mov
and
ds
push
andl
fwait
cmp
mull
int3
das
ret
xchg
xor
int
mov
mov
imul
in
fsubrs
lret
rorl
inc
std
pushf
hlt
das
lret
or
inc
jmp
lahf
xchg
sbb
leave
lods
add
cmp
xor
pop
enter
and
into
stos
and
imul
add
xchg
das
mov
shrb
das
imul
insb
pop
movsl
les
aas
cmp
outsl
in
jbe
mov
test
fidivl
cwtl
mov
ja
pop
std
jle
popa
jnp
xchg
pop
xchg
ljmp
fsubr
pop
popa
lds
pop
cmp
dec
fldt
icebp
testl
into
sub
xchg
fwait
lea
movsb
mov
insl
jmp
mov
mov
lods
out
leave
loop
mov
xchg
cmc
and
dec
imull
aas
ja
or
xchg
adc
jmp
in
pop
pop
call
dec
jne
int3
nop
push
je
inc
movsl
andl
mov
loope
xchg
dec
mov
rolb
xlat
cli
stos
pop
xchg
iret
xor
insb
xchg
lods
enter
stos
inc
lods
insl
lret
mov
ja
push
int
sbb
sbb
xchg
jbe
mov
sahf
call
jne
int3
je
lcall
or
idivb
lods
xlat
insl
cld
sti
mov
hlt
imul
roll
pop
test
dec
adcb
aas
es
xorl
notl
pop
pop
sub
mov
dec
aaa
movb
dec
push
ja
mov
int3
in
test
pop
and
dec
mov
xchg
enter
sub
cmpsl
jae
cli
mov
inc
xchg
mov
cli
clc
repz
test
xchg
push
rcr
pop
xor
fisttpl
sub
test
sbb
mov
mov
idiv
push
mov
pop
mov
addb
push
fnsave
aam
fdivrs
mov
subps
int3
movb
cmc
lcall
jne
rolb
stos
dec
wbinvd
sub
sub
jo
shl
scas
cwtl
test
in
mov
les
nop
pop
xor
pusha
insl
and
xchg
dec
or
cmp
or
lahf
call
cltd
add
lock
dec
cmpsb
sub
push
scas
rolb
ret
fadds
jmp
arpl
pop
cmp
xchg
push
inc
adc
jmp
xchg
stos
dec
inc
nop
mov
pop
fisubrs
sti
pop
xor
scas
inc
mov
call
cmp
mov
aad
pop
pop
scas
popl
jne
jmp
test
in
je
push
imul
add
pop
mov
lret
sbb
mov
scas
jb
std
out
ds
push
lret
fstpl
xor
gs
or
pop
mov
jb
loop
fstl
lret
fdivrs
sub
xor
mov
cmpsb
or
std
or
ds
add
pop
call
lds
aam
or
xchg
js
mov
fsubl
ljmp
pop
push
imul
sbb
mov
or
dec
lods
jno
fstps
outsb
adc
mov
inc
loope
mov
or
and
jle
repz
dec
das
cmpsl
cmp
dec
xor
fmul
jae
js
cmp
rcrl
pop
cmp
pop
popa
adc
pop
data16
cmp
fs
push
push
adc
mov
pop
bound
repz
lcall
stc
lret
lods
in
push
xchg
aas
out
or
cmpsb
hlt
ljmp
pop
stc
add
loop
das
dec
fcoms
out
out
pop
pushf
scas
push
sub
aam
mov
xchg
add
jle
call
rcrb
jo
mov
out
aas
rolb
lods
add
cmp
adc
dec
outsl
xchg
lahf
mov
int
imul
inc
int3
mov
push
cmp
pop
in
movsl
testb
inc
aad
pop
mov
mov
mov
inc
ja
and
out
cmpsl
xchg
daa
dec
icebp
andb
dec
loop
push
mov
pop
scas
pop
cwtl
test
mov
fsubl
dec
xchg
jnp
stc
cmp
push
rolb
popa
in
aas
push
push
jge
daa
lds
adc
nop
and
push
sbb
out
sbb
aad
xchg
fstps
ljmp
int3
test
jnp
fsts
fwait
stc
shll
mov
imul
xor
lret
cmpsb
mov
inc
mov
rclb
test
test
pusha
jb
jno
jno
cli
popf
adc
push
mov
add
jae
mov
jb
and
push
je
call
in
sub
adc
sahf
jmp
lock
daa
xor
lods
shll
mov
lods
pop
std
dec
cmp
cmp
mov
add
and
adc
sub
nop
add
pop
jl
clc
sahf
shrl
loop
push
dec
shrl
jge
scas
mov
pop
adc
ljmp
ja
mov
sbb
dec
out
push
sbb
std
cwtl
in
test
std
or
sub
push
mov
mov
jb
stos
and
mov
pop
push
add
fildll
jp
imul
or
rorl
pop
outsl
sbb
push
rorl
ret
popf
sub
mov
dec
or
inc
xchg
movsb
adc
push
mov
and
push
insl
push
jle
mov
pop
outsl
jecxz
ret
mov
dec
int3
mov
mov
add
xor
iret
enter
mov
es
stos
lock
push
test
dec
arpl
mov
repz
int3
mov
jo
sbb
lcall
mov
loop
cld
xchg
adc
xor
push
jle
pop
jl
nop
repnz
movsb
mov
lret
scas
jns
popa
std
icebp
into
loopne
scas
sahf
jl
and
and
add
mov
repnz
dec
imul
jmp
cmovs
iret
jl
xchg
push
push
or
adc
aam
ja
dec
mov
pop
or
pop
mov
push
adc
mov
nop
inc
in
mov
je
jp
jl
lcall
pop
pop
or
push
inc
mov
xchg
adc
lock
fisttps
jge
cmpb
mov
xor
outsl
fwait
cmpsl
rcr
inc
mov
sub
ds
or
inc
enter
sbb
imull
int3
mov
mov
roll
shr
push
sub
outsl
adc
ss
adc
inc
mov
adc
inc
das
stc
cli
push
leave
rol
daa
icebp
dec
test
xor
out
sbb
js
dec
cmpsb
adcl
jge
dec
cmp
pop
push
cli
add
cwtl
stos
jne
dec
shrl
mov
mov
popf
dec
jo
aad
xor
out
xor
push
pop
sbb
jg
popa
insb
pop
add
js
jbe
or
stc
push
ret
fs
aad
stc
rcl
aam
aam
mov
lods
movsb
stc
cmp
jns
push
out
fbld
mov
push
or
in
sub
jmp
inc
movsb
add
sub
clc
clc
pop
das
movsb
mov
jmp
inc
repz
sbb
mov
pop
sub
xchg
xor
xchg
mov
into
les
mov
fwait
jno
xchg
mov
fisttps
dec
in
or
adc
cmpsl
mov
sahf
cmp
ljmp
dec
mov
inc
jns
xchg
insb
in
pop
fdivs
insb
pop
outsl
fwait
xchg
add
negb
mov
jne
add
mov
sar
sub
jns
push
sub
xor
movsl
jb
jmp
aad
push
int
pop
push
jne
mov
imul
pushf
sub
jl
adc
mov
xlat
movsb
xor
fbstp
cmp
repz
push
sbb
and
mov
jae
into
pushf
movsl
popf
scas
test
inc
push
out
mov
xor
xchg
dec
add
sbb
ret
jbe
sub
pop
push
mov
lcall
push
push
jnp
cmp
jns
aaa
mov
adc
rcl
xchg
in
cmp
mov
pop
insl
push
pop
scas
fisttpll
sub
aad
xchg
mov
mov
dec
ja
das
cs
sbb
js
sub
inc
mov
xchg
xchg
fcoml
lea
psadbw
dec
xor
aam
les
dec
jle
push
lcall
mov
pop
movsl
fdivr
cltd
mov
movsl
stc
daa
ds
or
icebp
mov
cmp
aas
dec
mov
mov
das
incb
mov
not
sarl
mov
add
jecxz
add
adc
int
ds
leave
pop
ja
inc
push
inc
mov
fstp
mov
xchg
fdivs
into
xor
xchg
fscale
not
imul
dec
int3
push
cwtl
mov
nop
and
test
push
cld
sub
pusha
roll
jnp
adc
mov
sbb
icebp
xchg
pop
cmc
dec
subl
and
jno
add
sbb
mov
dec
xchg
xchg
outsb
mov
lret
push
dec
cmp
jae
add
mov
adc
cmc
stos
cmp
repnz
dec
clc
mov
mov
pop
das
mov
movsl
sahf
xchg
jmp
pop
or
dec
push
xchg
mov
pushf
dec
sbb
aam
cmp
pop
fstpt
jae
in
xchg
cs
rorl
outsl
jmp
mov
dec
jae
jecxz
cld
dec
int3
sbb
fidivrl
mov
mov
nop
fistpl
dec
int3
movsb
xchg
inc
lock
and
bound
xchg
fs
daa
jbe
cmp
or
in
dec
push
xchg
dec
mov
cmp
dec
mov
push
push
hlt
cld
jns
pop
leave
in
hlt
pop
cmpsb
les
sbb
pop
xor
es
inc
ret
adc
dec
xor
xchg
test
jbe
insb
inc
mov
scas
into
adc
xor
arpl
mov
cltd
shll
inc
or
mov
std
fisttpl
adc
rolb
flds
insb
movsb
bound
out
sbb
inc
lock
lds
lahf
or
in
xor
adc
mov
sbb
mov
cmp
out
dec
fcomi
lods
mov
mov
and
mov
imul
ret
fwait
mov
sbb
stos
pop
rol
loopw
or
fdivs
stos
xor
hlt
cwtl
test
pop
adc
int
incb
and
and
into
std
mov
sub
or
je
push
dec
cmp
mov
or
sbb
jp
mov
adc
sti
mov
jecxz
lret
clc
xchg
pop
jge
and
xor
cmp
mov
popl
mov
lds
pusha
out
sub
ljmp
or
pusha
pop
sub
or
pop
enter
pop
je
jmp
and
mov
jb
pop
pushf
mov
cli
adc
cmp
dec
and
pusha
out
inc
aam
sub
jl
out
sahf
adc
add
stos
ret
add
cmp
aas
jecxz
sub
pop
mov
lret
push
or
push
mov
jne
or
and
fisubl
outsl
cmp
adc
addr16
imul
inc
sbb
add
mov
pop
lods
call
pop
push
es
jne
dec
mov
and
push
repz
cltd
push
push
insb
inc
sar
les
adc
xlat
mov
pop
cmc
lcall
xchg
pop
scas
ljmp
rorb
movsb
jns
icebp
fs
out
xlat
adc
fdivr
xchg
stos
jmp
mov
sbb
adc
mov
lret
jno
ret
adc
pop
mov
pop
bound
scas
fmuls
inc
jb
orl
or
fidivrl
js
sub
jbe
inc
dec
sbb
sbbb
pop
loope
es
xchg
vpsubb
pop
and
lahf
pop
mov
dec
push
sbb
cwtl
rolb
sbbb
mov
mov
pop
hlt
sahf
cmp
sub
inc
cltd
aas
xchg
loope
or
popa
inc
add
mov
int
int3
jne
add
and
inc
pushf
repz
or
pushf
out
out
shl
sub
and
pop
lahf
in
fstpl
inc
pop
mov
shr
mov
aaa
fistpll
cli
repz
sub
or
cld
loopne
mov
mov
dec
arpl
mov
lret
ja
icebp
push
scas
outsb
sbb
cmp
or
sbb
jne
mov
enter
add
or
pushf
testl
cs
jbe
stos
and
movsb
xchg
push
mov
lret
pusha
outsl
cltd
scas
inc
enter
iret
cmp
mov
dec
dec
jns
xor
sub
in
arpl
or
fnstcw
dec
ds
lret
stos
testb
testl
xlat
and
adc
mov
push
insl
fwait
pushf
xor
mov
daa
push
sbbl
mov
ret
adc
mov
mov
pop
stos
clc
stos
mov
cmpsl
call
pop
mov
arpl
push
jb
dec
data16
stos
iret
cmp
push
mov
jnp
inc
or
and
xchg
jno
sbb
xor
mov
addr16
sti
sub
mov
aaa
out
push
in
sub
fsubs
cs
outsb
loopne
inc
sub
mov
cmp
mov
xchg
pushf
cmc
or
xchg
test
cmpsl
fnsave
je
mov
pop
imul
rorl
out
jnp
cwtl
leave
or
stos
pop
mov
xchg
add
sbb
pop
iret
jge
in
dec
lret
jno
aas
in
call
sub
sahf
dec
int
bound
jl
sahf
push
loop
lods
test
loopne
push
sbb
pop
insb
in
mov
mov
sbb
sbb
add
sbb
adc
inc
pusha
pop
push
dec
sub
cs
jns
leave
icebp
xor
sti
sbb
les
or
std
adc
aaa
xlat
lret
xchg
daa
dec
dec
mov
jge
dec
xchg
sbb
sarl
jno
xchg
cmpb
cwtl
aaa
sbb
and
mov
cmc
test
mov
fisttpll
jne
iret
dec
and
dec
pop
push
pop
dec
rorl
pop
lea
fisttpl
loope
fbstp
js
in
jne
dec
mov
leave
xchg
div
out
mov
pop
mov
loop
sbb
insl
sbb
daa
in
in
cli
fcomip
jb
pop
pusha
mov
xchg
into
in
cs
xor
aaa
test
and
lret
out
sbb
fimull
mov
adc
cmc
aad
stc
lret
push
popa
sub
inc
icebp
nop
inc
js
imul
cmp
jne
add
testb
pushf
loop
or
pop
filds
outsl
inc
out
xchg
adc
pushf
iret
fimuls
or
lock
outsl
loopne
mov
inc
pop
pop
ret
mov
jb
sub
sub
jns
popf
shrb
rorw
mov
dec
gs
mov
mov
rclb
arpl
mov
stc
lds
in
jge
out
call
adc
mov
stos
sbb
jge
mov
jmp
xlat
outsl
pop
nop
adc
xor
cmp
mov
pop
jb
jo
cmc
in
jae
fistl
inc
cmpsl
pop
mov
scas
repz
sub
jae
imul
test
icebp
jno
pop
stc
outsl
cs
popf
cmp
rcrl
xchg
ss
ljmp
cmp
out
stos
xor
pop
sub
or
loop
sbbb
cmc
xor
sub
out
cmp
dec
xor
xchg
dec
pushf
pop
stos
sbb
xor
mov
or
scas
push
adc
sbb
push
out
outsb
adc
jle
xchg
in
aad
adc
in
nop
mov
test
xchg
rorb
setg
push
hlt
mov
push
xchg
leave
mov
ret
lea
fsubs
ss
ja
pusha
mov
fcom
and
test
mov
fstl
pusha
repz
insl
cmpsb
xor
mov
mov
mov
sub
or
or
and
popf
pop
xor
stos
ljmp
jno
iret
sbb
jmp
sbb
out
in
cmp
sbb
and
cmpsb
mov
xchg
ljmp
imul
mov
rcrl
subb
jecxz
in
dec
loopne
sbb
nop
jns
mov
mov
movsb
mov
nop
je
add
out
inc
push
pop
adc
pop
sahf
sub
das
pop
mov
dec
inc
fwait
jns
xor
ss
or
loop
pop
or
sub
mov
lahf
cmp
popf
ljmp
jae
insl
lcall
sarb
sub
sarb
push
add
movsb
lret
mov
fisttps
cs
fidivrs
ficomps
test
andl
decb
imul
jmp
cld
or
mov
xchg
call
loop
inc
lret
sahf
cmp
orl
push
dec
popl
repz
repz
test
mov
daa
filds
div
cmc
loop
imul
sar
jg
inc
jecxz
test
fwait
cs
adc
dec
pop
loop
mov
xchg
lret
jmp
and
mov
imul
stos
stos
mov
lahf
test
cmc
inc
push
or
gs
int3
test
pshufw
scas
pop
sbb
inc
xchg
push
sub
cld
sti
mov
cmpsb
rcrl
fwait
and
movsl
out
jo
xchg
sbb
push
pop
repnz
repz
inc
sbb
and
jo
xchg
lods
jae
xor
test
std
xchg
push
sbbl
insb
leave
inc
lret
in
rorl
mov
sbb
mov
pop
and
int
es
and
sbb
outsl
enter
adc
orb
or
mov
pop
sahf
pop
and
push
subl
fcomip
cmc
shlb
pop
repz
leave
sub
mov
mov
add
fwait
je
lret
aad
adc
je
push
shlb
test
adc
push
dec
xchg
xchg
xor
test
lock
sbb
aad
repz
mov
ljmp
add
test
movsb
push
pop
aam
clc
adc
sbb
aad
stc
ds
xchg
or
lea
xchg
pop
sti
xor
adc
and
cmpsb
icebp
sub
jge
outsl
cmp
gs
test
ljmp
xor
repz
in
adc
cmp
test
mov
mov
and
cs
push
and
ss
leave
enter
rolb
cld
add
outsl
ljmp
adc
lret
xchg
xchg
cmp
out
js
mov
jae
mov
xchg
shrl
insb
adcl
add
mov
push
xor
adc
je
inc
scas
mov
dec
inc
mov
jo
xchg
pop
call
decb
cmp
or
scas
sub
or
cwtl
xchg
pop
insl
dec
cmpsb
outsb
push
push
inc
stos
pusha
rcl
clc
mov
ja
lahf
push
or
jns
or
les
mov
lcall
sub
xor
ds
insb
or
adc
js
shr
pop
out
and
mov
jnp
out
sti
popw
scas
add
and
in
lds
seto
les
stc
out
mov
enter
aad
fnstsw
imul
pushf
xor
mov
jl
lods
js
mov
and
lods
inc
lret
xor
add
mov
or
sahf
pop
sbb
push
adc
loopne
pop
sub
sub
movsb
pushf
mov
mov
cwtl
mov
sti
cmp
pop
lcall
cs
int
fs
arpl
inc
sbb
notl
push
jno
or
mov
xchg
push
add
add
lock
fwait
movsb
lret
in
stos
or
out
int3
push
mov
bound
data16
pop
test
int3
jb
xor
mov
push
sbbb
and
addb
movsl
rol
adc
cmpsl
xlat
in
inc
fdivrl
jae
mov
pop
mov
lcall
ds
and
ss
inc
xchg
bound
push
lods
shrl
idivl
cmp
lds
loop
xlat
enter
and
inc
xlat
sbb
dec
sahf
out
ret
xchg
lods
jbe
dec
sahf
adc
scas
ljmp
dec
ljmp
mov
add
loop
loopne
cmp
jns
movsl
fsts
mov
add
stos
mov
add
sub
sub
repnz
jno
repz
jg
arpl
leave
xlat
scas
lock
stos
cs
fs
mov
jne
cmp
stos
roll
cmc
sbb
adc
and
cmpsb
fldenv
push
adc
fsubp
and
mov
mov
dec
xor
stos
pop
sbb
aas
and
push
jne
lcall
lret
mov
mov
mov
add
testb
inc
lret
xchg
pop
into
cli
ss
pop
pop
inc
and
les
mov
sub
or
in
inc
outsb
aad
jbe
mov
and
cmpsl
decl
cmc
jge
jecxz
shr
push
inc
cltd
and
outsb
inc
outsl
test
adc
imul
out
lret
les
mov
mov
push
pushf
imul
std
jo,pn
cmp
cli
mov
repnz
xor
in
mov
jnp
adc
push
push
into
inc
popf
push
inc
in
push
jge
adcl
cmp
jnp
sub
in
insb
pop
and
adc
pop
pusha
sarl
sbb
jns
cli
test
mov
dec
in
call
add
data16
mov
cs
shll
push
in
stos
int3
aaa
add
or
out
and
push
nop
in
test
mov
movsb
negb
shrl
cmp
jns
cmp
in
inc
inc
adc
in
mov
lock
jns
push
sarb
inc
pop
mov
push
mov
mov
rcl
fists
jo
jno
mov
das
sbb
ss
test
insb
pop
test
and
pop
sahf
jns
test
cmpsl
movsb
cmp
push
xchg
pop
xchg
inc
lods
jecxz
incb
insl
cs
pop
testl
js
pop
mov
outsl
xchg
add
add
ds
pop
insl
das
jge
sbb
mov
add
outsl
push
inc
stos
sub
add
jp
push
and
fwait
or
mov
ficompl
insb
lcall
sbb
and
adc
loop,pn
arpl
push
sbbb
lock
and
dec
sbb
idivl
pop
aaa
bound
xchg
mov
jmp
mov
sub
subl
xchg
and
nop
push
or
mov
and
imul
xchg
cltd
xlat
insl
test
and
jo
xchg
push
fisubl
adc
outsb
adc
xor
pushf
outsl
xchg
fwait
jo
pop
xchg
into
add
xor
jno
loope
or
sub
fisttpl
push
pop
or
sbb
mov
pop
stos
out
in
dec
or
or
daa
dec
xchg
push
inc
repz
hlt
lock
add
lea
adc
push
mov
add
test
daa
lods
sub
jl
or
rorl
xor
mov
xchg
xchg
jae
aam
fadd
push
dec
nop
stos
jno
out
jnp
cli
or
xchg
push
shlb
fstpt
inc
rorb
add
or
push
push
pop
gs
adc
sub
pop
loop,pn
dec
cmp
shr
inc
adc
jecxz
inc
out
jmp
xchg
adc
in
mov
sub
imul
mov
iret
jns
nop
cmp
jge
jo
addb
push
and
mov
movsl
cmp
psubusb
and
lea
xlat
pop
dec
pop
cmp
mov
mov
movsb
sbb
push
pop
mov
add
jbe
out
push
adc
sub
cs
xchg
jo
mov
and
push
push
xchg
cmpsl
test
mov
insl
dec
xchg
push
andb
ret
xchg
sahf
cli
sbb
push
dec
or
hlt
fwait
jmp
ljmp
leave
cli
fdivp
sub
std
jge
xchg
and
pop
dec
stos
mov
xchg
inc
or
mov
mov
lods
jnp
aad
mov
add
xchg
xchg
data16
stc
cmp
mov
pop
sub
jp
nop
pop
int3
xchg
jl
shr
movsb
daa
xor
mov
pop
cmp
mov
outsl
cwtl
sub
pop
push
jnp
jnp
jns
sbb
add
cmpsl
add
imul
loopne
in
mov
js
sbb
aad
sub
adc
leave
insl
adc
in
js
adcl
dec
clc
adc
jg,pn
ja
repnz
jb
add
aaa
mov
insb
ret
mov
push
xor
loope
fsubl
out
lahf
out
mov
jle
dec
mov
loop
daa
push
push
add
movsb
pop
push
cmc
adc
jne
sub
dec
fidivs
xor
rcrl
adcl
pmullw
dec
and
dec
jg
jbe
stos
fldt
lods
dec
sarb
fsub
pop
inc
out
sahf
pop
mov
lods
xor
inc
pop
test
faddp
mov
stc
pop
movsb
fsubrl
mov
aaa
sbb
xor
or
clc
push
mov
xchg
dec
add
es
addr16
movsl
enter
jns
out
or
popa
ret
sbb
jb
stos
push
dec
inc
or
adc
mov
sub
jae
fs
jns
cmc
iret
sbbb
scas
pop
dec
and
add
fisubs
adc
mov
ja
movzwl
outsl
and
mov
or
jge
jne
add
adc
dec
in
xchg
dec
movl
pop
push
inc
pop
xchg
jne
cltd
inc
lea
mov
inc
scas
cmp
lcall
cld
fidivs
enter
repz
cmp
inc
hlt
and
test
inc
movsb
push
sbb
jl
test
and
out
cld
xor
popf
inc
push
pushf
pusha
repnz
lahf
mov
or
add
ljmp
add
cli
xor
cmpsb
jg
adcl
dec
mov
repnz
sti
add
mov
and
mov
inc
data16
dec
test
test
xchg
aaa
pushf
mov
orl
cli
jmp
or
les
sub
pop
or
cmp
adc
inc
lcall
sbb
sarl
or
ljmp
iret
add
cld
jno
cmp
sahf
pushf
loop
das
mov
jp
inc
mov
in
pushl
mov
sbb
test
xor
out
mov
fcompl
cmp
hlt
js
outsb
lcall
js
sub
lret
adc
popf
rorl
inc
mov
mov
cwtl
xlat
clc
inc
inc
mov
mov
and
pop
sub
pop
popf
enter
hlt
pop
aam
cs
addr16
sub
int3
xchg
jae
adc
cmc
fisubrl
lret
movsb
das
repnz
daa
fwait
repnz
mov
sub
lahf
out
je
sub
out
push
test
les
xchg
mov
mov
mov
or
sbb
lods
cmp
lret
test
fistl
or
jb
in
fcmove
mov
fcoms
insb
push
frstor
mov
ja
push
ret
dec
push
jbe
ffreep
lret
fidivs
in
or
and
test
sbb
popa
lock
fs
adc
cmpsl
testl
dec
adc
push
adc
push
loop
jbe
adc
int3
push
cmp
sub
xchg
push
jmp
xor
pusha
int3
inc
and
addl
dec
arpl
shlb
jp
mov
out
fldenv
push
mov
ss
sbb
out
sbbl
jbe
cld
out
lds
fsubrs
sub
push
shll
test
ljmp
sub
add
push
leave
xor
add
jecxz
push
fiaddl
xchg
ljmp
sub
mov
fs
inc
inc
pop
cs
rcrb
sbb
dec
sub
cmpsb
adc
xor
adc
js
loop
sbb
or
cli
ds
call
movsb
loope
mov
sub
stos
cli
mov
leave
sub
int
dec
or
inc
sti
cmp
mov
push
jb
jg
cmpsb
mov
ret
shlb
pushf
inc
pop
add
push
jnp
xchg
dec
fstpt
mov
xor
in
mov
ret
inc
mov
bound
or
adc
jne
pop
in
add
sbb
loop
cmp
scas
inc
push
jno
cli
in
fcomip
popa
int3
fistps
pop
adc
jp
jge
pushl
pop
aad
arpl
ficomps
nop
jbe
cmpsb
popa
out
mov
out
test
hlt
stos
pop
push
mov
fdivrs
and
loop
adc
insl
pop
mov
lea
adc
gs
inc
pop
cmp
fwait
mov
pop
xor
push
leave
mov
and
les
rorl
into
sub
sbb
jo
outsl
arpl
int
sbb
jmp
test
leave
pop
loope
leave
inc
aam
sbb
fwait
scas
pop
lcall
call
inc
lea
and
notl
lock
jb
mov
sbb
lret
cli
vmulpd
aad
xchg
insl
jnp
xchg
fbstp
inc
adc
xchg
hlt
push
inc
jo
sbb
js
stc
mov
dec
je
mov
inc
fwait
pop
test
xchg
mov
out
jg
push
stos
sti
out
sbb
inc
adc
inc
mov
int3
pop
inc
push
push
lods
mov
xchg
das
push
ret
adc
cltd
jecxz
dec
in
in
es
fcomp
test
fxch
mov
add
hlt
mov
fcmove
mov
jecxz
ja
lods
cs
mov
mov
xchg
pop
mov
push
pusha
fwait
rol
xchg
sbb
push
loopne
inc
aam
stos
je
ds
movl
add
adc
ss
subb
and
icebp
out
jae
xchg
push
mov
sub
cmpsl
test
sbb
mov
fisubrs
aas
loope
sub
das
adc
xor
push
xchg
jbe
push
test
inc
outsb
or
test
pop
out
pop
sbb
mov
xorl
inc
xor
inc
fwait
nop
mov
lcall
es
adc
fistl
repnz
stos
xchg
fnsave
cld
das
shll
jg
cmp
push
and
scas
enter
sbb
leave
push
fiaddl
xor
and
das
pop
pop
je
cli
sub
fsubrl
xchg
push
inc
insb
and
cld
stos
mov
mov
mov
mov
loope
fisubrs
rclb
dec
mov
xchg
data16
hlt
hlt
mov
jp
iret
push
fstpl
push
mov
xchg
cmpsb
movsl
jg
fsts
jne
push
jge
mov
outsl
mov
outsb
jo
mov
dec
mov
inc
sbb
in
fstpt
xlat
rcll
cmpsb
xor
sub
push
mov
add
clc
icebp
enter
repnz
xlat
aam
jp
int3
notl
mov
cs
add
cmpsb
sub
in
std
xor
test
nop
popf
mov
dec
fs
push
fcmovnu
mov
jne
mov
mov
out
mov
inc
fwait
jae
cmp
add
stos
add
cmpsl
arpl
mov
xor
mov
repnz
outsb
lea
fildll
fistl
or
jae
gs
scas
adc
stos
push
sbb
in
pop
dec
adc
cmp
test
pop
inc
dec
lods
test
xor
push
xchg
add
push
push
into
shlb
out
xlat
mov
sub
inc
add
pusha
mov
mov
mov
sub
cli
or
out
push
lods
out
mov
ds
dec
mov
xor
std
mov
add
sub
xor
je
pop
adcb
ss
test
aam
cmpsl
sub
popa
xor
inc
pusha
mov
jo
xchg
fcom
jecxz
and
es
or
movsl
push
jp
xor
pop
fs
cmpsb
xor
cmpsb
push
sub
sub
in
repz
orb
ljmp
adc
rcrl
mov
cmpsb
pop
pop
lahf
jne
insl
out
lods
fnstcw
or
and
jge
push
imul
repnz
mov
enter
inc
rcrl
addr16
pop
dec
or
cli
dec
mov
in
push
leave
dec
mov
daa
pop
sub
sbb
rcrb
insb
or
add
repnz
mov
mov
jo
mov
gs
cmp
call
ja
sbb
cmc
mov
jbe
inc
or
mov
push
mull
mov
aam
push
jle
stos
sbbl
cmpsl
xchg
xchg
mov
fmuls
xor
xor
test
xchg
test
or
xchg
adcb
mov
mov
stc
cmp
inc
mov
lret
gs
ss
sahf
shlb
xlat
loope
out
add
adc
jno
lahf
adc
or
movsl
add
jecxz
adc
sar
je
pop
adc
mov
push
repz
adc
add
out
mov
jl,pn
in
out
ja
xor
and
mov
lret
cmp
sbb
jmp
xchg
cmp
lcall
out
dec
arpl
mov
inc
add
or
mov
ljmp
shrl
inc
pop
dec
movsl
pop
jmp
push
inc
lods
pop
ret
fwait
mov
popa
adc
sub
insl
jecxz
out
dec
cmp
filds
mov
dec
cmpl
add
mov
mov
sahf
cwtl
xor
test
call
pop
stos
test
int3
and
sbb
scas
pop
jnp
mov
inc
orl
out
divl
out
fistpl
mov
sbb
out
sub
mov
cmp
stos
xor
test
cmpsl
push
cmp
fistpl
cmp
insb
xlat
xchg
test
and
or
in
sub
xor
fstpl
imul
cld
cwtl
bound
add
cmpsb
pop
jl
mov
mov
xor
sub
clc
pop
push
cmp
pop
outsl
addl
cmpsl
pop
pop
inc
pushf
repz
std
ret
mov
out
jmp
push
in
movsl
xchg
xor
bound
xchg
fcoms
mov
cmp
data16
mov
xor
jno
cmpsl
jno
ret
mov
mov
mov
iret
shrl
pop
js
push
pop
add
sbb
es
sub
into
and
shll
or
adc
and
sbb
out
dec
stos
inc
xchg
xor
pop
mov
dec
cmp
lods
movb
rcll
xchg
movsb
adc
mov
sub
mul
sbb
repnz
inc
rcrb
pop
or
jp
adc
xor
mov
xor
loop
adc
clc
insb
rcl
xchg
repnz
mov
pop
fstpt
push
test
les
test
les
aad
filds
pop
sbb
pop
test
mov
fdivl
sub
sbb
sub
cltd
pop
rcrl
out
bnd
inc
jmp
cs
and
mov
outsl
jb
xor
add
mov
sarl
xchg
loope
std
stc
mov
hlt
rclb
das
sahf
out
cmpsl
mov
add
sbbl
pop
mul
insl
fdivs
daa
push
nop
mov
xor
outsb
imul
je
cli
mov
jb
aam
rcrb
bound
jmp
xchg
shrl
push
sahf
mull
lcall
push
push
rorl
xchg
pop
dec
ljmp
aam
jb
cmp
int
mov
mov
jg
xchg
rcll
pop
inc
adc
xchg
xchg
sub
dec
int
addr16
dec
idiv
mov
add
mov
sbb
pusha
cmp
lds
jnp
test
pop
fstps
mov
movsb
lahf
pushf
outsl
ljmp
dec
test
inc
popf
cld
push
out
and
repz
outsb
shlb
mov
inc
inc
out
stos
mov
movsb
dec
sahf
aas
lods
sub
test
xor
stc
xchg
mov
addl
dec
rolb
cli
xor
loopne
movsl
jb
jns
pop
jge
push
mov
jno
inc
rorb
cmp
in
inc
push
mov
push
cwtl
vmovdqa
xor
xchg
stos
testl
test
fndisi(8087
mov
daa
lret
mov
sbb
hlt
mov
pop
inc
dec
dec
pop
push
shlb
push
insb
and
jge
pop
test
xchg
push
das
add
rclb
mov
dec
insb
shll
pop
test
subb
pusha
subl
stos
jge
mov
icebp
cmp
out
es
mov
mov
fsts
test
mov
and
cmp
push
jmp
or
ret
imul
pop
add
fnstenv
int3
lods
dec
dec
xor
fildll
jno
cmp
cld
ja
out
jnp
fdivl
push
pusha
sbb
fdivl
int3
push
pop
mov
fs
andb
into
push
call
xor
clc
or
push
dec
push
in
mov
lahf
push
aam
xchg
sub
in
sbb
xchg
aam
shll
movsb
add
fimuls
ljmp
ficoml
sub
dec
pop
sub
mov
pop
arpl
inc
pusha
lock
dec
mov
dec
adc
out
fldenv
in
pop
ljmp
imul
cwtl
fnsave
scas
cmp
jg
flds
outsb
xor
mov
cli
mov
aam
test
xor
repnz
or
jbe
inc
and
lcall
add
xor
mov
jmp
and
movb
cmc
add
faddl
pop
xchg
lret
test
bound
sub
orb
daa
mov
mov
test
icebp
repnz
cld
cmpsb
ljmp
das
pushf
mov
js
in
mov
out
add
leave
pop
and
out
adc
xor
mov
ret
sub
mov
sti
mov
xchg
xchg
addr16
push
xchg
subl
dec
pop
adc
call
dec
iret
and
stc
idivb
add
in
cmp
mov
outsl
ja
jbe
inc
xchg
int
add
adc
pop
or
sbb
or
mov
pop
icebp
xchg
cmp
test
adc
xor
cmp
xor
cli
scas
imul
dec
push
gs
pop
and
imull
mov
dec
fdiv
dec
clc
xor
and
test
sub
adc
leave
stc
mov
loope
out
and
adc
push
notb
out
jge
jmp
cmp
daa
xchg
test
in
in
cs
sarb
and
mov
sbb
sahf
imul
mov
test
mov
xorb
jo
push
xchg
inc
sarl
dec
push
or
sub
mov
cmp
or
in
xchg
adc
adc
mov
fucom
xchg
sub
inc
hlt
imul
xor
jmp
add
xorl
inc
andl
adcl
out
in
mul
xchg
cwtl
in
repnz
out
mov
push
pop
push
cmc
jbe
mov
mov
sar
fnstsw
adc
and
mov
leave
rcrb
dec
xlat
cmp
js
sahf
jmp
ljmp
mov
lea
sub
xchg
inc
pop
mov
aam
xchg
loopne
loop
fxch
cwtl
test
mov
je
lcall
in
pushf
enter
int
add
xchg
cli
mov
jmp
push
pop
stc
jo
aad
sbb
test
loopne
arpl
jno
inc
inc
inc
dec
add
xor
faddl
jno
out
aas
cld
pop
add
pop
xchg
loope
lcall
aad
int
push
notl
add
inc
ret
adc
and
loope
sbb
cld
mov
jne
adc
fiadds
lret
xorb
sbb
jmp
pop
enter
and
mov
pop
sub
rcr
lcall
adcl
push
stc
sbb
inc
inc
jnp
into
mov
add
push
mov
loope
scas
jno,pt
js
ret
cmp
into
xchg
leave
out
xchg
mov
daa
in
mov
psrlw
sub
push
sarb
add
out
mov
xchg
les
popf
iret
scas
shlb
mov
mov
pop
add
and
movsb
mov
lods
add
adc
jbe
sub
andb
gs
scas
in
mov
mov
mov
jne
scas
bound
aas
pusha
sub
stc
movsb
cmc
pop
jl
lret
out
jmp
xchg
sub
and
dec
pop
jb
leave
mov
adc
in
nop
push
xor
xchg
sub
addl
pusha
push
xorl
int3
xor
jmp
cmp
lock
leave
pop
aad
lea
mov
cmc
xchg
pop
imul
pop
mov
leave
outsb
mov
cli
push
stc
cmp
into
lea
hlt
mov
hlt
pop
js
std
addr16
aas
lahf
dec
add
or
xor
test
je
or
mov
fisttps
and
mov
idiv
xor
jae
dec
mov
jg
js
jb
lds
popf
pop
jne
sub
das
jl
or
insl
fldt
jns
cmp
jp
pop
cwtl
sub
push
and
fimuls
pop
insb
dec
inc
leave
pop
stc
jbe
mov
xchg
shl
lret
push
adc
mov
icebp
mov
or
pop
cmc
jge
test
iret
dec
loopne
stos
addr16
addr16
iret
int
mov
hlt
adc
xchg
into
mov
or
xchg
das
mov
push
jb
movsb
daa
arpl
inc
mov
in
sbb
mov
clc
enter
mov
inc
dec
fwait
xlat
loop
clc
mov
xchg
push
pop
jp
fwait
negl
cmpsb
push
mov
jmp
lods
lods
enter
add
ss
mov
addr16
pushf
pop
add
enter
jle
xchg
dec
inc
movsb
cmp
rcrl
xor
fimull
stc
inc
out
pop
xor
jle
cltd
sbb
pop
ret
jbe
sbb
cmp
xor
inc
lcall
ss
nop
dec
mov
mov
loop
pop
sbb
loope
aad
gs
mov
jecxz
gs
testl
dec
mov
dec
xchg
add
enter
in
jle
insl
das
imul
jl
sbb
lods
rcr
inc
cmc
xchg
imul
jg
subb
lock
gs
pop
dec
testl
push
test
sub
xchg
fsubp
stos
inc
andb
jb
jmp
or
sub
dec
imul
or
push
ljmp
es
mov
xchg
cmp
and
fs
jle
mov
les
in
jmp
jb
push
adc
movsb
in
add
rorl
fnstenv
sbb
add
lahf
lcall
mov
push
cmp
fisttpl
sahf
aad
sbb
add
cmpsb
fadds
pop
mov
dec
mov
and
sbb
add
jge
ror
push
mov
lds
dec
xchg
insb
sti
call
int
loop
int3
adc
mov
or
push
scas
sbb
hlt
outsl
mov
pop
shrl
popf
shr
mov
movsb
push
add
in
sahf
fwait
rcr
loopne
cli
aam
or
xor
ss
jg
jbe
in
add
clc
out
shlb
jmp
mov
inc
stos
shrb
aas
call
or
push
fstpl
sub
jmp
and
fnsave
in
sbb
push
leave
mov
or
push
xor
test
clc
nop
dec
cmp
test
inc
enter
das
jae
add
insl
inc
mov
xor
dec
or
pop
dec
cld
call
cmovg
cli
mov
mov
popa
push
pop
push
adc
ljmp
mov
xchg
sbb
push
and
xlat
mov
cld
mov
xor
xchg
mov
cmpsl
out
insl
cmpsl
add
dec
aam
jbe
xor
jns
xchg
mov
mov
repz
push
mov
or
pop
jae
dec
movsl
ds
sub
sahf
fstpt
gs
mov
push
adc
dec
or
popf
push
and
xor
test
inc
xor
mov
pop
xor
sbb
aam
push
rclb
out
push
mov
loope
sbb
repnz
adc
jae
aaa
mov
jb
xchg
xor
mov
jg
in
dec
add
push
or
cmp
or
sti
push
mov
cmpsb
sub
fucomip
mov
cmpb
das
jns
dec
shl
jae
sti
pop
sbb
into
ret
sti
cwtl
ret
mov
cmc
jns
sbb
jecxz
mov
insl
cwtl
jb
pusha
mov
popa
lcall
sbb
xchg
and
add
ret
mov
push
push
fadd
clc
adc
adc
sub
mov
mov
call
dec
xchg
jecxz
test
adc
xchg
int3
and
jmp
dec
imul
out
arpl
pop
add
sbbl
lods
mov
cmpsl
ljmp
popa
jl
out
ja
test
aas
or
jmp
xchg
bswap
ret
cwtl
loop
lcall
add
pop
ljmp
lret
mov
into
dec
and
scas
inc
scas
mov
lfs
adc
mov
mov
clc
push
ljmp
lea
shll
pop
mov
insl
iret
adc
pop
sub
jp
cmc
ds
mov
fistl
mov
in
dec
daa
push
push
or
mov
data16
jg
and
xchg
push
pop
int3
aad
push
pop
outsb
and
cwtl
push
sbb
inc
dec
cmp
push
fs
sub
cmp
add
test
popf
inc
dec
sbbl
outsb
movsl
nop
mov
fistpl
adc
mov
sub
cmp
mov
add
rcrl
loop
push
movsb
dec
lret
jne
mov
stos
fsubrp
les
push
push
ud0
leave
test
stos
or
cmp
stos
mov
add
mov
cmp
inc
test
repz
adc
movsb
mov
cmp
cmp
repz
fdivl
out
mov
test
and
dec
enter
int
fwait
mov
inc
sbb
stos
call
call
out
mov
push
xor
stos
shrb
push
filds
mov
push
mov
cmpl
xlat
movups
mov
lret
xchg
mov
or
mov
gs
jb
sbb
ds
ret
insl
insl
iret
sti
add
push
xor
pushf
mov
adc
ja
jo
std
int3
xor
mov
jns
sarl
xor
jp
dec
inc
je,pn
adc
mov
lret
ja
pop
sbb
mov
scas
int
ret
insb
dec
arpl
mov
out
adc
mov
arpl
jns
add
aad
add
cld
es
gs
call
xor
in
lds
jge
lahf
lods
ljmp
scas
test
fstp
icebp
cmp
out
pop
jl
mov
cmpb
xlat
mov
cltd
add
les
mov
and
and
je
fsubrs
or
cmp
dec
add
cmc
adc
jne
cmp
or
lcall
mov
mov
mov
enter
xchg
cmp
insl
mov
mov
push
lds
jl
scas
pop
arpl
fcoml
mov
aad
imul
fwait
xchg
popf
imul
jnp
inc
les
pop
int3
mov
add
mov
jb
aas
fisttpl
cmpsl
pop
rorl
adc
add
dec
test
fwait
mov
dec
dec
mov
inc
adc
fimuls
in
cld
jge
and
cs
add
cltd
xor
mov
out
int
stc
inc
xchg
rol
mov
and
divl
push
pop
out
cmc
insb
pop
mov
imul
mov
or
jns
mov
adc
push
xor
mov
inc
into
insb
xchg
mov
inc
jno
add
cmp
pop
jnp
push
jns
sub
fs
ss
and
pop
shrb
inc
jbe
xchg
xchg
xchg
daa
and
lahf
jmp
mov
ds
dec
aad
jge
jl
dec
sub
add
cmp
les
ss
sub
mov
into
cmp
ret
pop
rorb
inc
scas
scas
stos
inc
inc
std
lahf
and
inc
jnp
cmp
push
arpl
int3
dec
sbb
sbb
mov
or
push
sbb
imul
rcrb
popa
xchg
fnstcw
inc
cmp
loope
dec
inc
call
leave
scas
inc
or
mov
addr16
or
andb
lods
jae
int3
dec
jae
push
pop
jle
fwait
lds
aaa
lahf
fidivrl
add
insl
mov
push
mov
push
pop
mov
push
pushf
mov
sbb
pushf
and
fnstenv
dec
add
pop
dec
stos
cwtl
push
mov
pop
fiaddl
rorb
jb
in
mov
cld
sub
inc
js
and
insl
int
cmp
outsl
push
sbb
stos
nop
mov
adc
inc
mov
xchg
scas
sub
repnz
pusha
xchg
dec
shrl
adc
ret
mov
xchg
cmp
xchg
out
outsl
ljmp
mov
ret
subb
repnz
ds
andb
lods
std
inc
inc
mov
add
jp
mov
adc
andl
lock
mov
adc
mov
cmp
xor
push
inc
push
cmp
jmp
movsl
dec
jge
stos
loop
arpl
adc
enter
add
mov
mov
xchg
sbbl
sti
iret
arpl
sarb
leave
int3
sub
sub
sti
ss
test
out
jg
dec
lret
mov
cltd
cmp
lret
test
mov
xchg
push
iret
stos
das
fisttpll
in
pushf
fists
in
add
data16
aam
fs
ja
add
out
sub
push
mov
clc
mov
fnsave
push
shll
sbb
arpl
not
jbe
xchg
jns
inc
and
push
dec
test
xchg
loop
mov
inc
mov
push
jnp
push
lcall
or
fstps
je
dec
fisubs
mov
push
xorb
loopne
mov
and
jecxz
rcl
and
repnz
nop
mov
xchg
cmp
lahf
push
and
pop
ret
add
dec
xor
sub
ljmp
int
in
add
mov
dec
jbe
ss
mov
pop
dec
test
jl
rol
mov
and
jne
bound
xchg
push
scas
cmpsl
jecxz
adc
call
sub
divl
jnp
test
pop
mov
xchg
inc
push
sbb
xchg
pop
idivl
das
sub
pop
or
pop
addr16
mov
adcl
repnz
mov
xor
mov
jne
jnp
pop
push
adc
in
push
sub
mov
popa
ja
and
insl
fcompl
test
add
repnz
pshufw
jae
rcr
pop
fisubrs
into
push
add
cmp
mov
adc
lahf
rcll
jmp
mov
mov
sti
nop
jb
jle
cltd
insl
jb
sub
dec
insl
and
sbb
lods
jle
orb
in
daa
andl
fisubs
js
jnp,pt
cwtl
pop
dec
pop
out
or
mov
cmp
daa
dec
outsb
out
cmp
push
outsl
push
sahf
push
js
loope
nop
rcrb
fldl
add
or
cli
dec
cmp
cwtl
mov
out
jo
leave
mov
push
in
call
xchg
add
es
add
xchg
std
xor
xchg
jl
or
sbb
into
lds
fiaddl
lea
mov
enter
clc
movsb
fs
cmpsl
or
test
push
pusha
sub
jmp
xchg
adc
test
or
cmpsb
pop
sub
movzwl
sub
push
xchg
call
or
jg
xor
aad
xor
cli
push
cmp
xchg
cmp
out
and
in
xor
clc
pop
adc
int3
or
fdivl
sub
pop
push
dec
mov
shl
mov
popf
rclb
xor
or
pop
lods
ljmp
push
test
shll
fcomps
addr16
inc
add
mov
sbb
mov
mov
dec
dec
mov
dec
enter
sbb
xchg
std
cmp
outsb
pop
mov
pop
lret
adc
aaa
cmp
inc
jb
out
mov
call
cmc
pop
or
sub
cmpsl
add
out
or
je
cmp
sbb
sbb
mov
int3
les
push
fst
pop
jns
pop
push
mov
aam
arpl
or
mov
cwtl
fisubl
stos
mov
out
cwtl
adc
push
add
sbb
test
dec
rcl
inc
jo,pn
mov
fisttps
add
insl
jno
xor
incb
mov
adc
loope
call
ret
in
push
jge
sub
test
leave
inc
mov
adc
sti
xchg
xchg
adc
cltd
add
lods
and
jno
jecxz
mov
test
shrl
aad
rcl
xorl
inc
jg
cli
sti
sbb
mov
and
mov
les
in
aas
inc
std
movsl
jns
test
push
push
fsubp
mov
repz
jb
mov
lret
jmp
decb
jmp
das
imul
mov
lahf
icebp
sbb
aas
adc
out
fdivs
icebp
mov
shll
mov
sarl
xchg
pop
into
add
push
mov
enter
shrl
sbb
or
rorb
out
add
ficoml
faddl
lcall
push
xchg
pop
xchg
add
push
adc
mov
shrl
adc
adc
or
inc
movb
pop
mov
adc
test
int3
mov
loope
add
and
xchg
jecxz
push
xchg
fcoml
xor
jecxz
insb
push
push
aas
stos
dec
push
and
test
mov
pushf
bound
xchg
arpl
adc
cmc
pusha
add
mov
push
fiadds
sub
pop
or
push
mov
fidivrl
mov
mov
xchg
push
out
cmp
rolb
or
addr16
pop
cltd
cmp
test
cwtl
fisubl
cmovge
add
negb
js
adc
dec
add
stc
dec
xor
jecxz
pop
cmovl
dec
cltd
xchg
sub
not
jb,pn
mov
in
jmp
test
jb
mov
jnp
sub
xor
adc
inc
je
cmp
add
jg
jns
jg
int
mov
gs
dec
inc
mov
pop
push
clc
mov
lahf
lods
nop
cmpsb
jb
mov
mov
ss
repz
js
dec
add
jg
mov
jne
iret
mov
pop
mov
inc
mov
mov
test
jns
adc
or
pushf
lahf
mov
lahf
and
dec
cli
cmp
inc
push
push
and
outsb
pop
and
adc
addb
mov
rolb
push
add
icebp
lock
push
ljmp
cmp
add
push
and
jae
cmp
mov
jbe
cmp
stos
xor
inc
pop
test
in
add
shlb
into
call
mov
imul
inc
loopne
ret
mov
and
mov
shr
nop
jp
into
out
or
jg
push
loop
mov
inc
dec
ja
pop
xor
arpl
push
push
fisubl
dec
pop
and
aas
sbb
inc
jp
add
sbb
sbb
loop
mov
sbb
fwait
add
adc
in
scas
in
mov
mov
cmp
hlt
xchg
mov
aaa
ror
xchg
adc
pop
pushf
movsb
leave
jnp
jb
pop
or
sbb
clc
inc
rclb
add
pop
les
dec
loop
xchg
je
fistpll
popf
mov
xchg
dec
psllw
insl
adc
aad
xor
pop
xchg
insb
sub
adc
dec
inc
jg
mov
stos
add
jne
pop
rclb
mov
dec
mov
sub
and
aaa
pop
pop
pop
pop
fs
adc
mov
push
fs
fsubl
xor
cmp
cli
in
popf
fistpl
adc
jp
icebp
sub
dec
xor
fwait
enter
adc
imul
repz
roll
xchg
ja
out
adc
inc
repz
mov
shll
lahf
and
shrl
sub
adc
sub
repz
jmp
pop
jmp
sahf
popf
cltd
sub
mov
fld
push
stc
pop
xor
xchg
daa
jmp
pusha
cli
cmp
lret
jg
insl
xchg
pushf
data16
lret
dec
and
fnstenv
sbb
pavgw
push
frstor
xchg
push
inc
cmp
cmpsl
xchg
mov
and
or
adc
mov
and
mov
xor
push
cmp
inc
adc
cmp
test
push
adc
outsl
fwait
daa
loopne
lock
movsb
pop
loope
data16
aam
jb
mov
cmpsb
mov
pop
adc
mov
stos
push
int
adc
dec
popf
pop
mov
imul
lods
and
into
dec
stc
sub
sub
pop
std
add
shr
fcomip
dec
xorb
xchg
dec
inc
sbb
lods
dec
in
int
adc
dec
cmpl
dec
rcrb
rol
lret
or
es
jne
xchg
pusha
mov
inc
xor
std
cmpsl
loop
js
and
jecxz
jl
imul
xor
add
movsl
inc
lret
scas
inc
fstpl
pop
lea
loope
dec
and
imull
lahf
pop
mov
clc
aad
push
gs
ds
add
nop
xorl
sbb
dec
sbb
dec
int
xor
aaa
pop
lret
push
mov
fldt
shlb
scas
fdivrs
callw
add
mov
mov
cmp
sti
int3
les
cwtl
js
dec
mov
cmc
sub
push
lds
dec
ljmp
bound
mov
jmp
fdivs
popa
adc
dec
jg
lds
enter
xchg
fstps
jp
hlt
imulb
add
out
pusha
in
fcomps
daa
std
add
sub
cmp
xchg
push
les
dec
mov
test
pushf
add
lret
mov
jbe
cmp
jno
dec
lods
mov
mov
inc
xchg
and
jns
lea
sbb
out
add
mov
inc
test
mov
xchg
mov
notb
mov
jecxz
int3
cwtl
lret
xor
push
gs
add
loope
or
push
push
bnd
std
jecxz
rorb
mov
repz
mov
mov
push
dec
outsl
add
lock
and
push
outsb
stos
mov
sbbl
pop
mov
mov
cli
mov
mov
out
int
mov
das
jne
movsl
dec
jno
pop
and
lea
in
pusha
jmp
js
adc
lock
jnp
mov
pop
dec
ss
push
in
pop
nop
xorl
adc
testb
push
sbb
mov
inc
jo
and
mov
ret
pop
dec
push
xor
mov
cmp
in
xchg
dec
adc
xchg
ret
xor
jl
mov
sbb
rclb
aas
pop
ds
fdivrl
add
repnz
adc
or
adc
inc
repnz
lret
mov
push
dec
jnp
flds
cli
call
mov
aas
gs
sub
push
iret
xchg
ja
push
stos
xor
push
cmp
call
mov
lret
mov
push
orl
add
rorl
ja
clc
sbb
jl
inc
mov
mov
sub
xor
dec
lahf
call
cmc
and
dec
push
fisubrl
scas
inc
sti
add
test
inc
leave
xor
shl
xchg
and
out
xorl
movsb
icebp
aaa
cli
shll
sarl
jg
lods
dec
into
repz
data16
add
and
mov
icebp
push
fwait
mov
adc
clc
lcall
shll
push
mov
jmp
shlb
test
or
inc
sub
or
ja
popf
jno
fwait
mov
mov
popa
mov
pop
cmp
jne
push
push
loopne
sarl
jl
adc
xchg
fs
std
mov
mov
pop
arpl
cmp
and
inc
sub
add
rorl
popf
test
add
jle
insl
outsb
sbb
or
pop
push
fxch
push
lods
shlb
adc
add
inc
stos
repz
and
mov
shl
out
jns
cmp
dec
sub
jge
addr16
sbb
pop
fiadds
fmulp
mov
cmpsl
lcall
jle
pop
mov
fwait
jle
mov
rcrb
jns
push
les
xchg
out
mov
idiv
ds
jo
or
mov
add
xchg
pop
fnstsw
repz
jae
cmp
in
cmp
adc
pop
mov
xor
mov
movsl
adc
icebp
and
jne
jg
push
and
pushf
cmc
aam
stos
push
sbb
jo
ds
cmc
mov
sub
fs
stos
lods
sahf
jge
dec
or
inc
xchg
pop
dec
movsb
jl
popf
mov
inc
popf
in
lretw
push
mov
cmp
sub
push
pop
out
mov
cmp
mov
daa
or
or
notl
ret
sbb
imul
ret
mov
rcrb
push
mov
lea
inc
xor
insl
push
stc
lods
xor
std
sub
ja
xor
bound
mov
mov
or
in
call
repnz
outsb
jnp
into
fstpl
fs
jbe
insb
or
dec
push
and
lods
in
jp
xlat
rcrb
dec
mov
xor
adc
stos
or
sbb
addb
sahf
add
js
fadds
xchg
cmc
pop
inc
cwtl
aaa
ss
enter
dec
sub
cmp
fsubs
fdivrl
lea
rclb
add
outsl
rcl
pop
add
adc
push
mov
icebp
call
sbb
inc
xchg
jl
sub
lret
lock
jae
test
pusha
in
cltd
push
mov
mov
in
sub
icebp
lret
sbb
loop
icebp
xor
mov
imul
xchg
mov
add
mov
push
mov
fmul
pop
sar
dec
sbb
mov
pop
testb
aad
adc
in
inc
arpl
inc
es
loope
sbbl
sub
lret
jge
mov
lds
jmp
or
xchg
or
adc
push
pop
xchg
mov
jge
out
xor
les
in
push
sub
inc
dec
cmc
and
and
stos
notl
cmc
imul
movsb
push
mov
cli
ficoml
call
sbb
popf
pop
movsl
in
dec
xchg
xchg
cwtl
insl
xor
sbb
or
nop
sub
iret
push
mov
nop
pop
mov
cmp
dec
add
in
lea
inc
fsubrs
pop
jno
xor
je
lcall
ds
adc
mov
pop
xchg
stos
icebp
fistpll
push
inc
cmp
pusha
and
mov
orl
mov
nop
std
mov
cwtl
sub
jmp
test
stos
pop
mov
stos
adc
lahf
mov
jo
int
shl
mov
in
lret
js
adc
mov
fimuls
in
loop
cmp
cs
data16
sbb
pushf
pop
out
movsb
mov
cmp
fistps
sarb
dec
je
insb
fdivs
iret
push
mov
and
ds
jmp
lds
pop
pop
sub
cmp
cmp
imul
lahf
cmpsl
je
pop
repz
test
dec
sahf
sbb
fcompl
insb
loopne
inc
stc
xchg
outsb
cmp
adc
int3
mov
in
fdivs
adc
ja
xlat
pop
addr16
fs
cltd
lods
bound
jo
sbb
mov
and
popf
dec
inc
adc
add
repnz
icebp
sub
fstl
jo
push
dec
cli
sbb
rorl
jbe
not
cmp
fmull
fldenv
js
or
mov
adc
xor
sbbl
push
xchg
mov
jae
fnstsw
xor
mov
lods
dec
fistl
mov
repz
outsb
xchg
iret
xchg
jns
enter
int
xor
mov
jg
dec
adc
xchg
push
jnp
mull
mov
push
inc
scas
jg
sub
je
pop
fidivrl
sub
xor
ljmp
ja
popa
cmp
jne
push
nop
mov
xchg
xchg
aaa
dec
insl
mov
mov
pop
jne
sub
mov
jge
jno
and
xorb
shrb
out
js
sbb
mov
in
sbb
fistps
les
mov
mov
add
adc
push
xlat
repz
and
popf
mov
ret
test
inc
mov
enter
dec
std
sub
cmp
adc
add
inc
out
test
mov
inc
xchg
aam
xchg
stos
aaa
popa
dec
mov
xchg
sub
push
sarl
adc
in
test
add
das
lds
aad
dec
sbb
adc
or
scas
xor
mov
and
lods
lock
js
data16
mov
inc
cmp
sahf
pusha
xchg
xchg
sub
add
pop
jae
mov
mov
fwait
adc
data16
push
sub
or
fldt
cmp
adc
xchg
imul
dec
adc
dec
sahf
jns
sbb
or
cli
lds
sbb
mov
push
pop
dec
cli
or
mov
mov
push
popa
test
push
xchg
xor
insb
push
push
and
and
scas
adc
xchg
cmp
dec
pop
and
clc
push
jbe
push
sbb
aas
inc
cltd
cmpsl
std
xchg
jmp
les
adc
adc
jg
test
inc
add
cmp
jo
sub
cltd
push
std
pop
cltd
xchg
mov
add
xorb
mov
outsb
push
into
mov
cmp
and
jp
mov
jno
divb
push
dec
pusha
push
jns
das
aad
inc
push
adc
rcrl
adc
in
inc
in
or
sub
sub
fadd
loope
xor
inc
push
es
pop
push
loope
popa
faddl
mov
rcrl
or
mov
push
push
shll
xchg
cwtl
jae
and
incl
pop
nop
add
mov
fcomp
ss
adc
test
ror
scas
mov
movsb
lods
mov
jne
repnz
mov
fsubrp
xchg
add
stos
imul
sub
clc
dec
mov
enter
mov
rolb
or
xchg
adc
pop
sbb
lods
pop
jns
add
inc
inc
sbb
or
cmp
int3
roll
jbe
xchg
add
add
xchg
jno
or
push
inc
mov
xchg
mov
adc
fcompl
push
std
es
aad
xor
sbb
gs
je
ret
xchg
aas
in
add
xchg
fists
jns
loope
scas
rol
cld
call
mov
xor
inc
repnz
or
fs
repnz
sahf
mov
push
in
jl
jge
inc
inc
add
lods
xor
enter
imul
fistl
test
lds
jnp
sub
sbb
insb
movsb
mov
movsb
call
movsb
enter
add
sbb
loop
fadds
sarl
inc
fwait
subl
data16
sbb
cmpsl
jl
lahf
fucomi
scas
xor
and
loop
insb
in
adc
sbb
xlat
xor
pop
inc
adc
aam
mov
mov
js
test
dec
push
gs
push
xchg
into
int
stos
add
push
add
insb
adcb
jne
sbb
in
stos
les
cwtl
rclb
xor
out
shrl
or
enter
aaa
xlat
mov
sub
dec
mov
iret
repnz
fcmovb
pop
mov
decl
out
sbb
insl
and
roll
and
sbb
aam
orl
lea
xchg
add
push
scas
xor
in
sbbl
pop
movsl
xchg
lods
jae
adc
ret
push
pop
shll
inc
dec
push
insl
pop
jo
sbb
mov
or
fnstcw
popf
sub
and
add
es
jmp
xchg
fiaddl
and
in
xchg
test
fnsave
pushl
fstp
xchg
pop
jecxz
sub
cmpsl
int
pop
mov
imul
mov
lods
fdivs
ds
mov
add
push
rol
aas
sbbb
fwait
dec
insb
cld
sub
loopne
dec
cmc
mov
into
push
dec
inc
jmp
test
addr16
xor
mov
mov
adc
mov
ja
lods
pop
mov
sbbl
sbb
mov
movsl
inc
gs
jbe
mov
insb
das
bound
jp
ljmp
mov
ret
out
inc
mov
add
decl
pop
jno
inc
popf
or
jno
dec
jne
bound
push
add
mov
lahf
jbe
out
mov
lea
icebp
test
jb
and
adc
sbb
xchg
fsubrs
adc
movsb
outsb
pop
sub
pop
fildl
leave
icebp
fisttpl
lret
or
xlat
add
decl
lahf
cs
fsubp
ret
jecxz
lcall
pop
adc
shrb
lods
or
cmc
cmp
loop
xchg
xchg
cmp
ljmp
lock
mov
incl
fstp
and
cli
and
rcll
pop
imul
and
lea
or
sbb
lods
dec
xchg
or
test
ficoml
adc
add
and
sub
adc
push
popa
adc
adc
xlat
incl
inc
xchg
xchg
sarb
push
xor
push
orb
inc
cmp
lcall
out
mov
or
mov
out
rolb
lds
mov
out
mov
lret
leave
fsub
mov
pop
in
inc
ss
sbb
out
sub
adc
out
cmc
adc
cld
aaa
push
in
fildl
mov
popa
lds
ja
xchg
mov
cmc
in
pop
lcall
nop
push
xchg
gs
mov
fstps
mov
push
loope
dec
mov
test
pop
xchg
xor
clc
add
stc
fidivrl
adc
shl
mov
push
call
add
pop
imul
int3
sbb
add
pop
cmp
std
movsb
cmp
das
xchg
jns
or
lock
sub
in
add
inc
sub
adc
push
mov
push
hlt
jl
into
push
jge
loop
inc
je
cltd
int
iret
mov
addr16
fnstsw
insb
outsb
mov
mov
xchg
adc
mov
icebp
popf
xlat
andl
arpl
sbb
stos
rclb
xor
jg
imul
xchg
inc
xchg
enter
subb
ljmp
sub
not
sti
ss
ljmp
call
and
sbb
dec
mov
gs
stos
adc
xchg
jb
mov
sub
lcall
leave
into
rorb
push
dec
ljmp
cmp
push
lock
stos
cmp
inc
jmp
sahf
jle
sarb
ja
xor
push
adcb
aam
add
out
xchg
ljmp
and
iret
mov
mov
int
xchg
int
ljmp
mov
loop
sti
adc
mov
adc
pop
mov
ljmp
sarl
stos
and
xchg
icebp
mov
xchg
cmp
jne
in
xor
mov
lret
lods
ss
pop
push
dec
mov
mov
add
sahf
lds
test
das
leave
sub
pop
add
jecxz
je
push
pushf
cmp
xlat
cli
cmp
dec
loope
xor
enter
ljmp
adc
jno
and
jle
loopne
out
lahf
fmuls
ret
mov
xor
pop
add
jle
push
mov
xlat
ja
testb
sub
lods
pop
xor
inc
cli
pop
xchg
add
stos
mov
add
jb
add
out
mov
and
hlt
aas
in
cmp
xor
jbe
cwtl
ret
push
lcall
xchg
push
mov
stos
push
cmp
jo
test
ds
stc
pop
sbb
mov
inc
sahf
mov
sbb
cmp
insb
xor
xchg
jle
cmp
adc
adc
stc
mov
mov
sbb
mov
dec
fmuls
aas
addl
add
dec
and
mov
mov
mov
mov
xchg
cs
xchg
in
sub
testl
sbb
xor
test
pushf
or
test
ret
add
jmp
scas
sarl
shlb
fldcw
or
jmp
dec
scas
in
push
stos
xchg
lock
xchg
sbb
aas
int
xor
sbb
fidivl
jge
dec
iret
outsb
push
nop
jl
lods
mov
inc
cmpsl
sti
mov
fwait
sbb
lds
xchg
pop
push
or
jae
insl
iret
pop
adc
cmp
cs
dec
scas
add
xor
fstpl
cmp
aaa
pop
in
div
mov
push
pop
dec
xor
inc
xchg
sbb
movsb
es
pop
dec
pop
scas
ret
add
cmp
pop
push
jae
icebp
mov
or
jns
pushf
push
repz
pop
pop
imul
insb
add
insb
jmp
ret
stc
stos
arpl
jmp
jp
in
shll
xchg
scas
test
daa
nop
mov
mov
adc
xchg
mov
pop
rep
into
mov
dec
mov
inc
arpl
ja
test
inc
fdivs
lea
int
xchg
and
hlt
leave
jnp
jl
dec
mov
andb
adcl
fstpt
bound
jno
push
rep
xchg
popf
and
xchg
lods
sahf
in
and
lcall
xchg
cmp
add
data16
mov
mov
out
and
sub
inc
mov
flds
mov
push
jo
in
fbstp
pushf
sarb
sbb
xor
mov
test
pop
loop
rcrl
sbb
adc
sbb
push
sti
jp
jb
mov
jo
ja
inc
test
xor
cmpsb
je
xor
loopne
minps
fdivp
lods
pop
fimuls
mov
push
pop
sbb
lds
imul
lret
int
inc
loopne
cmpsl
ret
mov
sub
push
pop
pop
mov
dec
xor
jno
je
arpl
popf
int
mov
ljmp
sbbl
or
and
dec
jo
ds
inc
stc
fbstp
push
addl
insl
lahf
orb
gs
jns
stos
mov
cwtl
outsl
push
shll
int
ljmp
jmp
lret
sbb
add
vxorps
divl
and
inc
in
bound
lret
and
int3
cwtl
ret
test
pop
popa
ja
jmp
jns
pop
xor
sub
loope
pushf
lods
ss
mov
in
mov
pop
mov
cmpsl
mov
add
call
stos
push
in
cmp
rolb
and
push
jno
push
jge
aas
xlat
cmp
sbb
sarb
ja
ljmp
scas
jmp
mov
push
xchg
int
mov
es
scas
enter
jmp
lahf
adc
add
dec
fxch
subb
push
andb
fidivrl
fsubrl
jecxz
sbbb
mov
or
jg
cmp
and
xchg
movsb
ja
test
mov
add
inc
push
sti
and
loop
rol
mov
fwait
pop
jge
mov
loopne
sbbb
ret
sub
int
dec
adc
dec
add
ffreep
iret
and
into
pop
xor
je
into
cmp
adc
dec
or
mov
cmpsb
xorb
aam
sbb
into
push
sbb
out
imul
jae
pusha
test
xchg
sbb
je
mov
cmp
jmp
int3
pusha
jbe
repz
nop
pop
ret
mov
xlat
mov
xchg
ja
repz
js
push
lock
cmp
lea
xchg
out
dec
mov
jne
jl
loope
insb
aaa
mov
or
testb
cmp
popa
cmpsb
rclb
dec
or
push
adc
sub
jge
pop
push
test
push
ja
inc
fistpl
scas
out
shrl
mov
iret
sbb
xchg
pop
lcall
xchg
mov
lods
add
xchg
inc
push
out
mov
cmp
xchg
jle
idivb
add
sub
pop
jmp
mov
mov
std
mov
xor
or
lret
out
xor
out
mov
mov
insl
aam
pop
testb
mov
fists
pop
idivl
push
in
xadd
repnz
sbb
pop
fwait
addl
pop
jno
jnp
std
mov
mov
std
pop
jecxz
mov
push
pop
mov
aam
int3
push
frstor
and
jno
mov
imull
inc
mov
cmp
add
xor
sbb
loopne
ja
push
test
jecxz
push
loop
push
lahf
imul
aam
loope
mov
or
repnz
in
cmp
or
pop
daa
cmc
ret
in
ret
aad
cld
sub
cmpsb
xchg
pop
cmc
or
testl
add
cli
pop
loope
les
popf
push
jne
icebp
sub
loop
xchg
push
inc
ss
js
adc
negl
out
cmc
imull
push
ror
femms
repnz
das
out
repz
rcl
xchg
add
stos
movsb
aad
sarl
mov
push
repnz
sbb
or
mov
mov
sbb
popfw
add
es
add
imul
push
loope
jmp
inc
inc
ds
popf
ret
inc
rcl
test
fwait
mov
push
fs
pushf
je
pop
xchg
pop
rol
sbb
scas
call
insl
sub
les
sbb
and
xchg
andl
mov
pop
and
das
repz
je
xchg
pop
inc
enter
mov
inc
jp
cltd
xchg
push
fld1
lea
adc
dec
in
ja
and
inc
mov
filds
es
dec
and
cs
add
mov
mov
ljmp
mov
les
push
jg
inc
lock
insl
jb
or
pop
xchg
iret
cmp
dec
in
in
dec
sar
xor
jmp
pop
cmp
mov
aas
cmp
je
xchg
das
adc
add
push
sub
fwait
shll
push
shl
lcall
imul
push
or
mov
inc
imul
mov
daa
mov
xchg
pop
hlt
adc
js
repnz
xchg
andl
loop
and
or
ret
out
xchg
or
rorl
out
pop
outsl
jl
add
fstps
sti
pop
mov
jo
imul
cmp
loop
insb
add
mov
shrl
mov
or
pop
icebp
sub
xchg
pop
lcall
enter
pop
pop
jbe
inc
test
sub
jb
leave
cwtl
insb
cld
js
jle
in
xor
mov
push
in
arpl
lahf
mov
ss
test
lods
cmpsl
and
sbb
pop
and
or
in
outsb
adc
nop
imul
aam
ds
pop
mov
scas
jo
cld
movsb
fs
lea
inc
and
mov
popa
xchg
sub
add
sbb
mov
mov
cmp
xchg
ss
lret
push
aam
shlb
and
dec
inc
dec
addr16
sub
lds
jle
icebp
popf
xor
jle
xchg
lret
mov
outsb
mov
aas
mov
jp
pop
jl
xchg
lods
inc
xor
dec
in
jge
xchg
scas
pop
jmp
push
sub
out
aam
out
out
mov
adc
in
popa
repz
xchg
rcrl
xor
fildl
pusha
pop
rcr
add
dec
or
and
call
pop
cltd
stos
call
xor
add
stos
push
or
add
push
hlt
jl
data16
adc
inc
sbb
push
push
sbb
les
mov
push
popa
xorb
jmp
xor
stos
stc
loope
punpckhdq
testb
iret
or
adc
xor
dec
mov
int3
fidivl
push
inc
cmc
lods
scas
mov
jp
lcall
fnstenv
ds
clc
std
sub
and
pop
cmc
repz
and
push
push
mov
mov
mov
mov
loop
jge
sbb
jmp
hlt
cmp
ret
daa
adc
mov
inc
sbbl
outsb
mov
jle
push
inc
dec
out
stc
repnz
inc
loope
sub
and
adc
call
sub
in
pushf
xchg
insl
dec
push
scas
add
mov
lret
jmp
dec
ret
outsb
xchg
out
jecxz
lcall
mov
xchg
aaa
cmp
mov
jg
mov
pop
arpl
loop
fldz
adc
outsl
jp
fwait
enter
xchg
pop
aam
xchg
arpl
or
maskmovq
imull
les
sbbb
push
lods
xlat
lock
mov
ljmp
mov
pop
or
out
in
xchg
adc
loopne
pop
sarb
jecxz
push
cmp
lds
push
pop
fistps
cld
loopne
out
push
arpl
outsb
jb
and
sbb
xchg
pop
push
daa
loopne
mov
fs
or
push
aad
sub
mov
xor
fnstsw
ljmp
mov
fs
fs
inc
scas
pshufw
shll
shr
dec
sub
je
sti
pop
data16
gs
mov
pop
shl
inc
mov
add
gs
fstl
mov
out
sbb
mov
mov
mov
stos
idiv
add
int
out
xor
jne
sbb
repz
cmp
lahf
cmp
in
call
repz
or
push
mov
dec
pushf
mov
mov
jl
sbb
jecxz
mov
mov
outsb
add
push
scas
adc
pop
jb
mov
cmc
jecxz
push
fwait
cld
cmp
shlb
inc
add
dec
push
call
jmp
subl
aad
mov
mov
pop
mov
adc
std
inc
in
jl
xchg
inc
pop
ss
dec
aaa
xor
jo
xchg
pusha
jl
sub
jmp
lods
hlt
ja
mov
lcall
xor
xor
add
into
sub
sub
jbe
sub
cmc
jecxz
and
scas
sbb
jnp
pop
xchg
iret
and
push
pushf
stos
in
cmc
pusha
xor
jnp
cmp
jbe
mov
and
jae
and
pop
mov
movsb
xchg
imul
jns
pushf
and
adcl
sbb
inc
punpckhwd
jne
or
sti
xchg
add
roll
ja
lahf
es
gs
or
fidivrs
filds
or
lret
lods
jg
jnp
or
enter
dec
pop
xor
cmp
lahf
push
xchg
xor
inc
test
sbb
jo
jp
ds
add
pop
push
in
pop
inc
std
mov
mov
hlt
mov
inc
inc
sbb
push
mov
xchg
out
fs
jnp,pt
and
test
ficomps
cmc
test
xor
jecxz
adc
lock
mov
rcll
pop
leave
ret
cld
or
negl
xor
shlb
out
jmp
mov
addl
xor
and
scas
dec
dec
enter
sub
arpl
pop
repz
mov
repz
leave
pop
mov
mov
das
and
sahf
adc
mov
mov
fildl
push
aam
jmp
push
mov
sti
hlt
addr16
aam
test
fisubrs
filds
repz
test
iret
adc
lret
bound
sbb
ror
call
hlt
push
cmp
stos
jae
sbb
sub
addr16
sub
or
std
pop
inc
sub
mov
sbb
add
jns
loop
pop
and
loope
jecxz
rcrb
mov
and
loope
mov
dec
add
mov
cltd
pop
out
pusha
aaa
bound
adc
repz
stos
add
inc
xchg
outsl
xor
xor
jp
sbb
decl
test
mov
dec
pusha
fdivrl
xor
enter
dec
sarb
adcl
dec
pop
sbb
rorl
mov
mov
xchg
fst
test
dec
or
inc
lret
out
das
add
loope
hlt
dec
adc
push
or
adc
loope
lahf
mov
mov
mov
mov
adcb
mov
cli
movsb
push
mov
and
sbb
jecxz
lds
stos
shl
inc
ja
mov
es
cmpsb
jmp
aam
std
popl
ja
cmc
mov
stos
push
clc
loope
jne
dec
scas
and
push
xchg
in
push
aad
hlt
dec
insl
adc
cmp
mov
mov
and
sub
loopne
mov
inc
push
pop
mov
fwait
icebp
imul
ret
es
rclb
loop
mov
iret
cmp
mov
adcl
sbb
idivl
xchg
lock
movaps
push
inc
in
push
xor
push
sub
pop
imul
movsb
mov
out
mov
shll
pusha
push
dec
aas
xchg
adc
andl
cmp
arpl
xchg
and
ds
je
mov
mov
mov
or
xor
nop
inc
mov
mov
cmp
cmp
movsb
jne
ss
repnz
add
pop
cmp
xchg
cmpsl
mov
js
insl
or
mov
mov
cmp
adc
movsb
repnz
into
orl
notb
in
out
xchg
and
daa
lods
xor
cmp
mov
fsubl
cmpsl
faddl
fsincos
or
pop
jp
and
push
and
int
clc
push
into
divb
outsb
push
dec
loope
pop
ret
ljmp
daa
cld
and
push
jns
xchg
stos
out
ss
and
filds
rcrb
shll
sbb
popf
std
jle
pop
mov
or
dec
jle
out
orl
lds
add
mov
test
sbb
mov
pop
xchg
cld
dec
and
adc
aad
mov
inc
fs
imul
sbb
pslld
jp
out
jmp
add
adc
xchg
outsl
xchg
cltd
xchg
inc
es
icebp
jl
in
inc
std
add
add
inc
test
pop
hlt
into
imulb
mov
cmp
and
lcall
repnz
lds
loopne
inc
and
out
ljmp
in
hlt
leave
mov
and
or
loope
jle
fimull
xlat
xor
pop
arpl
sti
stc
jecxz
xor
loopne
push
mov
inc
ds
push
data16
in
xchg
inc
ss
fs
sub
mov
rcrl
out
mov
ret
push
mov
lods
cmp
fists
sahf
mov
jmp
adc
inc
sbb
mov
jle
ljmp
cmp
rol
dec
daa
pop
mov
pop
rorl
jp
ret
imul
and
call
add
or
pop
aaa
push
mov
dec
mov
dec
outsl
js
jge
dec
std
cmp
enter
out
sbb
mov
or
inc
jns
out
lret
punpckhbw
mov
xchg
cld
inc
xchg
push
xchg
xchg
inc
hlt
rcrl
pop
insl
add
xor
jmp
lds
add
push
adc
cmp
xor
cs
pop
fdivr
dec
mov
xchg
mov
inc
add
pop
cltd
cmp
shll
repnz
add
sbb
push
sub
mov
in
loop
rcrl
mov
cld
xor
arpl
out
sub
cmc
pop
push
jmp
scas
push
cmp
cmp
mov
cltd
and
or
scas
scas
sar
sub
cs
adc
xchg
imul
add
frstpm(287
int
add
mov
or
ja
shl
aad
arpl
add
inc
stc
push
stos
loop
mov
or
dec
lret
sbb
fistpl
test
aaa
pop
fbstp
shll
test
scas
fwait
xchg
add
mov
mov
inc
inc
xor
insl
push
aas
ds
inc
aas
add
jg
mov
or
push
mov
repnz
push
bound
xchg
xlat
mov
movsb
lds
iret
and
rorl
mov
xorl
jb
push
lcall
pop
test
sti
int3
sbb
add
repz
cmpsb
push
and
sti
xor
sbb
push
xchg
xlat
call
pop
rolb
xor
jnp
cmp
pop
push
popa
xor
mov
dec
out
clc
or
sbb
pop
pop
push
add
sbb
es
fs
xlat
test
arpl
adc
mov
aaa
push
clc
xchg
dec
movsb
mov
xchg
pushf
pop
mov
test
mov
jne
shr
inc
jne
fdivrs
andl
das
rorb
popa
mov
sbbl
pop
jae
mov
insb
ret
sbb
gs
lcall
inc
daa
hlt
inc
ret
in
inc
mov
loopne
in
repnz
xlat
jg
outsl
adc
or
fwait
das
cmpsb
sbb
mov
out
and
mov
xchg
inc
into
js
aam
pushf
jns
pop
dec
dec
and
pop
cmp
jp
xchg
mov
pushf
adc
push
into
jo
fidivrl
and
movsl
and
inc
push
lds
bound
imul
imul
pop
mov
xor
dec
and
mov
inc
rcl
pop
stos
dec
test
out
outsl
xor
addr16
stc
adc
fwait
sub
mov
sbb
jl
pop
sbbl
pop
add
aad
lret
jbe
loope
testb
push
add
mov
test
adc
dec
and
or
pop
stc
sub
mov
fsubrl
out
mov
aaa
in
sbb
mov
movsb
cltd
and
lret
xchg
in
int
test
out
popa
xchg
jne
xor
add
and
bound
scas
outsb
sbb
mov
cmp
mov
add
leave
lock
insl
mov
pop
pop
and
pop
shrb
mov
mov
push
dec
adc
xchg
or
cmovnp
dec
lods
adc
jbe
in
sbbl
cmp
testb
or
sarl
mov
fisubs
int3
std
lods
push
rcrb
and
jb
adc
test
out
das
add
outsl
pop
lahf
dec
and
aam
cwtl
scas
sub
lret
fldln2
jecxz
push
rolb
xor
dec
iret
push
mov
lods
jo
mov
inc
push
fwait
adc
mov
sub
xor
ss
repnz
mov
or
int3
xchg
loope
hlt
imul
lds
stos
rolb
leave
or
cmp
int
test
sub
ficoml
push
jae
pushf
aad
xor
imul
push
repz
and
mov
and
inc
sbb
and
jne
cli
enter
cmp
xchg
test
mov
daa
scas
sbb
fwait
pop
inc
aam
lea
sahf
and
mov
int
mov
adc
ss
fistpl
mov
int3
lret
xchg
xchg
cli
mov
lds
dec
cmp
and
dec
pop
push
leave
cmpl
inc
inc
stc
mov
aad
hlt
xor
sub
inc
or
xor
iret
sub
mov
or
jo
ds
cmc
dec
inc
jmp
cld
sbb
call
call
mov
pop
add
daa
xor
in
nop
cs
cmp
or
sbb
or
mov
ficoml
loope
icebp
and
fs
test
inc
pop
test
dec
jnp
xor
xor
xor
arpl
add
mov
mov
outsb
cmpsb
jno
inc
add
mov
je
mov
adc
pop
scas
gs
out
push
sbbb
mov
and
mull
jmp
xor
push
adc
dec
pop
xchg
test
mov
mov
mov
inc
inc
mov
pushf
pop
rcll
mov
add
jle
in
std
test
add
or
push
add
lahf
jmp
mov
mov
mov
fidivrs
sti
jbe
es
inc
hlt
and
jnp
ret
imul
fsub
push
mov
adc
cmpsl
cmp
leave
mov
dec
lcall
pop
pop
push
shlb
pop
cs
jp
mov
xor
add
cmp
test
insb
imul
or
sti
dec
pop
sub
sbb
cmp
xchg
or
mov
insl
dec
lods
push
arpl
sti
mov
outsl
jnp
mov
mov
inc
push
adc
bnd
aas
leave
pop
loop
cmp
les
aas
xchg
cmp
out
jmp
bound
aaa
jbe
sub
adc
pop
mov
out
icebp
aad
jmp
lret
sarb
jmp
xor
pop
lret
inc
pop
jl
xlat
sti
repnz
cmp
test
fsub
aaa
ljmp
or
test
out
mov
pushf
push
xchg
movsb
jbe
adc
xchg
iret
int3
movl
psubusb
lds
and
sbb
push
cli
pushl
idivb
xor
sbb
jb
scas
clc
push
jns
das
xchg
lods
mov
adc
cmpsl
add
int3
mov
loope
mov
pop
fidivs
js
push
sahf
mov
jnp
mov
faddl
fs
pop
inc
outsl
and
shll
jb
cmp
mov
add
ja
ljmp
popa
jl
xchg
loopne
add
pop
out
ret
testl
data16
lock
jle
rcrb
daa
shr
cmp
aam
stos
sbbl
shl
outsl
mov
in
dec
aas
push
adc
pop
push
pop
inc
std
add
pop
xor
adc
xchg
shr
dec
dec
adc
mov
fisubs
clc
icebp
loopne
sbb
shl
test
nop
repz
jae
push
cmp
xor
out
cmp
scas
ds
movb
mov
mov
inc
imul
hlt
lods
pop
test
jb
rorl
out
imul
fld
add
cmc
scas
mov
hlt
enter
daa
filds
outsb
js
mov
pop
pop
mov
add
lds
dec
fbstp
loope
fiaddl
vandnps
rcrb
fstps
dec
adc
push
jb
xor
push
out
cmp
mov
test
pop
lahf
pop
xchg
push
pushf
imul
stos
cmp
loope
ja
rolb
push
js
mov
jmp
mov
xchg
cmp
fmul
or
pop
and
cmp
mov
sub
nop
pop
sbb
loop
mov
xor
loopne
loope
xchg
jge
cwtl
mov
push
cwtl
stc
sub
lds
popa
sub
sub
test
lds
test
jae
pushf
pop
cmp
jge
dec
fildl
out
sahf
nop
sub
ljmp
inc
ja
jnp
adc
mov
jbe
fsts
pop
mov
add
mov
daa
cmpsl
into
add
jge,pn
aam
and
dec
nop
xchg
cmp
jecxz
lea
imulb
addr16
negl
pop
inc
xor
fs
pop
mov
pop
daa
and
mov
jo
jbe
ret
inc
ljmp
mov
lock
stos
xchg
repnz
mov
mov
or
push
push
fildl
mov
push
cmpsb
scas
shr
push
out
fwait
call
or
push
sub
mov
pop
je
sub
lock
arpl
es
mov
and
movsb
sub
cmp
and
imul
shrl
stos
call
push
inc
jno
in
push
into
mov
push
jnp
loope
jmp
pop
jmp
xchg
pop
loopne
push
push
daa
sub
push
daa
ficomps
imul
and
cmpsl
ljmp
xchg
arpl
stc
pushf
push
xchg
mov
adc
js
push
add
jns
adc
pop
fstl
repnz
insl
add
clc
shll
mov
pop
hlt
insl
dec
dec
lahf
or
push
loopne
add
mov
or
jae
or
aas
mov
fbstp
pop
fiadds
cmp
and
lds
lea
adc
sarb
xor
ss
cmp
jne
push
jb
les
fiadds
mov
test
nop
push
in
inc
cld
pushf
mov
es
loop
xchg
mov
int3
jecxz
mov
ss
test
cmp
and
sub
std
cs
outsl
jnp
movsb
and
rcrl
sbb
jbe
sti
sbb
ljmp
dec
lret
outsb
and
and
push
test
xlat
lret
aaa
mov
push
xlat
xchg
fwait
mov
ret
add
leave
stos
sti
pop
xchg
xor
cmp
mov
or
addr16
pop
imul
push
enter
mov
ja
dec
adc
cld
jne
or
mov
pop
mov
jno
cltd
test
mov
addb
mov
lcall
and
jg
push
mov
into
add
fsubs
adc
shrl
sbb
int
lahf
mov
lods
aas
shll
cmpsl
jle
std
sahf
movsb
dec
jae
icebp
adc
xchg
hlt
out
or
xor
fs
xor
sbb
ffreep
xor
mov
enter
and
pop
or
mov
mov
mov
xor
xor
xchg
loope
fnstcw
push
loope
insb
mov
pop
out
lock
mov
mov
sbb
mov
pop
xchg
pop
movsb
in
enter
sbb
lea
and
mov
mov
fiaddl
jl
push
sbb
incl
scas
pop
std
mov
aam
sub
enter
inc
push
pop
jmp
pop
test
movl
xlat
and
or
xchg
test
or
inc
cmp
pop
je
jmp
stc
ret
and
repnz
jb
sti
nop
push
push
mov
call
int
ret
enter
add
ret
xchg
mov
adc
inc
adc
sbb
push
jge
pusha
cmpsl
sbb
pop
mov
mov
popa
call
mov
ds
rol
in
div
xor
sahf
inc
push
push
in
xchg
lahf
jl
sahf
dec
xor
popf
mov
mov
jmp
es
push
sbb
cmc
mov
xor
addb
test
dec
inc
pop
push
outsb
loope
lods
dec
xor
dec
sub
je
cli
pop
enter
test
jns
dec
lock
mov
popf
pop
test
dec
mov
cmpsb
jmp
lret
test
mov
inc
add
mov
ljmp
outsb
test
sub
fucom
pop
dec
shlb
stos
arpl
jecxz
daa
sbb
xor
jmp
mov
in
dec
xchg
sbb
mov
pop
sbb
mov
xor
mov
cmpsb
es
push
sbb
popl
xor
fwait
add
sbb
cmp
pop
mov
sub
xor
lods
mov
cmp
mov
jl
push
adc
cmp
stos
adc
mov
out
add
pop
mov
add
je
std
outsb
cmp
cmpsl
inc
pop
inc
out
cmpsb
cmp
sbb
inc
lods
inc
outsl
cmp
iret
or
xchg
jp
push
popf
or
or
pushf
pop
stc
jnp
mov
and
aad
jle
clc
ja
pushf
cmpsb
lea
loop
mov
and
movsl
stos
das
lea
xchg
addr16
fmul
mov
adc
dec
fists
adc
ss
add
stos
jnp
xor
adc
cs
pusha
xor
cli
insb
or
mov
xchg
sub
pushf
fisubrl
dec
mov
lret
testb
dec
scas
ret
notl
sub
sub
jmp
clc
dec
cmp
mov
and
sahf
push
in
pop
imulb
push
cmpsb
arpl
cld
cmp
aaa
and
or
xor
in
mov
fstpt
stos
push
and
iret
cmc
inc
je
lret
clc
sbb
subl
xchg
mov
sub
stos
and
sti
xchg
mov
lock
loopne
and
stos
mov
scas
pop
jne
lock
mov
xorl
out
xorl
ja
leave
dec
dec
lret
adc
aas
dec
movsl
es
mov
lahf
xchg
xor
loopne
or
mov
mov
mov
movb
mov
nop
sbb
pop
sti
pop
inc
inc
pusha
and
dec
ficoml
or
outsb
cmp
xchg
les
andl
movsb
pop
push
cs
movsl
pop
mov
sub
xchg
mov
xchg
repnz
stc
jnp
fdivl
mov
fdiv
add
sbb
or
in
insb
xchg
cmp
std
aad
dec
lds
pop
ja
mov
lds
mov
stos
iret
or
cmpsl
mov
shrb
lret
in
cmp
lods
dec
or
adc
jmp
stos
test
loope
xor
mov
push
mov
mov
cmpb
mov
rcrb
insb
mov
cmp
lock
cld
into
scas
imul
mov
hlt
sub
sbb
movsb
mov
out
stos
in
pop
ds
fidivrl
ret
mov
or
mov
insb
ja
pop
jne
xlat
xchg
xorb
pop
je
shl
stc
mov
jl
sub
dec
arpl
jne
inc
stc
dec
in
fwait
push
sub
pop
pop
add
mov
arpl
xchg
jb
mov
add
pop
fsub
push
loop
sub
idivl
sbb
jb
daa
jae
jge
push
pusha
insb
pop
ficoms
push
orl
mov
das
test
pusha
push
imul
sarl
adc
fs
sub
jo
pop
add
jne
jae
test
dec
out
lds
mov
dec
xor
fisubs
dec
jge
jecxz
divb
xchg
subl
and
mov
ja
dec
dec
xchg
cli
inc
sbb
inc
jle
outsl
out
iret
jl
inc
mov
mov
pop
call
enter
xor
add
jmp
and
jecxz
inc
je
sbb
pop
push
jmp
and
cmpsb
ljmp
xor
std
aaa
cmp
es
out
xor
pop
and
cmp
hlt
inc
xchg
aas
int3
inc
stos
rorl
adc
imul
inc
cs
push
popa
push
dec
enter
and
add
fs
adc
lcall
mov
repnz
adc
lods
lods
fisubrs
xchg
sbb
call
push
sbb
jo
in
arpl
mov
mov
dec
enter
mov
std
les
inc
mov
mov
xchg
rolb
fisubl
mov
call
add
mov
pop
cmpsb
jp
add
fwait
stos
jo
pop
jbe
aas
jno
jbe
cs
sarb
fists
call
es
addl
xchg
jecxz
jp
add
das
pop
add
mov
mov
stos
aas
mov
ds
rcrb
mov
cmpsb
pop
dec
scas
scas
mov
push
and
mov
fldenv
popa
mov
ja
lods
insl
dec
jle
leave
mov
mov
icebp
cmpsb
inc
ljmp
mov
xchg
out
cmpsb
repz
sti
rorl
mov
adc
into
movsb
pop
out
addr16
jge
inc
daa
test
xchg
imul
xchg
cmpsl
sub
cmp
stos
mov
dec
inc
xor
popf
pop
cmp
imul
jnp
mov
vminpd
rcl
jecxz
loop
push
mov
adc
mov
sti
dec
mov
sbb
or
mov
ss
push
xchg
dec
jmp
xor
iret
and
xlat
xchg
fwait
mov
cmc
fsts
mov
ss
add
add
inc
outsb
mov
loopne
ffreep
mov
je
ret
andnps
inc
cwtl
add
dec
cmc
ret
pusha
add
jmp
cmpsb
or
hlt
and
imul
aas
mov
pusha
sub
pop
jg
jp
mov
loop
sbb
ss
sub
sbb
shlb
inc
pusha
cmc
jmp
sbb
cmp
fildl
inc
rcrb
ret
ds
and
sbb
xchg
fiaddl
xor
mov
lods
loop
frstor
iret
pop
inc
in
leave
rcrb
xchg
jle
xor
inc
fidivrl
add
xor
lret
pusha
imul
outsb
xchg
test
outsl
mov
mov
cmp
sbb
jecxz
ljmp
les
push
xchg
arpl
adcl
pop
nop
jg
cmpsl
out
call
scas
cld
nop
add
imul
mov
out
into
dec
sub
xor
xor
xlat
pop
xchg
arpl
dec
add
mov
jae
idiv
fs
ret
cld
or
rcll
adc
sub
pop
cmpsb
push
dec
adc
and
cwtl
rcrl
mov
es
adc
packsswb
fdivs
sub
push
aad
adc
lods
cld
or
xchg
and
out
lret
mov
insl
xor
dec
std
mov
cmpsl
inc
in
jmp
stc
push
in
loopne
sub
fdivl
push
loop
dec
fistpll
scas
xchg
mov
and
and
dec
andb
cmp
aaa
inc
aad
mov
pop
ds
aas
or
clc
mov
mov
mov
inc
dec
and
imul
je
mov
daa
mov
inc
inc
sahf
jno
adc
fwait
loope
aas
sbb
aad
pop
xor
lods
lds
mov
xchg
call
cmp
or
xchg
mov
test
add
mov
stos
test
xchg
cmp
test
adc
inc
push
jl
or
cwtl
aam
stc
mov
jmp
testb
ja
lret
xchg
mov
xor
mov
xchg
xchg
xchg
xchg
and
js
mov
lea
in
pop
xor
jg
push
shrl
call
out
inc
cwtl
mov
mulb
mov
cmpsl
xchg
je
in
xchg
xchg
xchg
imul
xor
jle
xchg
inc
cwtl
cmp
xchg
stc
data16
ror
and
or
rol
jle
inc
popa
mov
push
mulb
packssdw
mov
mov
lods
push
lods
cmpsl
adcl
mov
mov
pushf
scas
aam
xor
adcb
mov
and
xchg
inc
inc
into
stos
pop
push
push
or
enter
mov
jo
loope
and
add
add
inc
jbe
mov
test
shll
lea
jnp
daa
xor
mov
push
push
addb
scas
adc
movsb
and
add
xchg
fisubl
leave
xor
mov
inc
popa
out
pop
jmp
pop
mov
pop
push
pusha
mov
inc
dec
push
cmp
out
orb
lock
push
or
sub
mov
jmp
aas
push
int
ret
adc
sbb
je
daa
add
insb
cmc
loopne
loope
call
scas
fldt
mov
cmpl
xor
shlb
adc
xchg
sbb
inc
ret
sbb
xor
lretw
xchg
pop
lods
rolb
incl
adc
lahf
pop
pop
add
cltd
iret
or
dec
dec
lods
mov
sarb
cmpsb
mov
std
push
pushl
sbb
pop
imul
fistpl
cmp
gs
jno
cmp
mov
shll
sbb
lahf
or
inc
adc
stos
ret
inc
les
cmpsl
loop
insl
sbb
xor
or
outsb
test
and
dec
scas
xorl
lea
sub
lods
jge
add
dec
lea
push
ja
pop
pop
xchg
push
xchg
insb
repz
test
sbb
popf
jbe
push
lods
or
daa
mov
sub
push
stc
or
loope
rol
xchg
lock
into
push
jp
adc
iret
imull
pop
and
xchg
pop
jb
pop
shll
jo
cmc
dec
jnp
test
sbb
nop
jns
sub
divb
lods
and
push
insl
mov
cmc
mov
xor
xchg
cli
movsl
push
mov
pop
sub
mov
dec
lret
jae
push
imul
xchg
mov
andnps
pop
aas
jg
shll
fstpl
mov
mov
or
cmp
pop
nop
jmp
loop
pop
adc
in
dec
mov
clc
mov
inc
cmpl
push
xor
adc
sub
inc
or
pusha
inc
loope
adc
cmp
xchg
imul
cmp
jne
sbb
mov
push
pop
daa
data16
aad
adc
lret
lcall
nop
add
cs
in
cmp
movsb
loope
cs
nop
mov
pushf
jo
dec
fs
cld
insl
test
popa
mov
fldenv
dec
aas
xlat
pop
mov
mov
call
or
movb
mov
mov
xchg
adc
push
or
outsl
push
mov
fildl
push
loope
repz
mov
fcompl
neg
xchg
mov
mov
inc
je
jmp
pop
sbb
daa
dec
adc
adc
xor
pop
add
outsb
sub
js
out
rcrb
mov
jno
test
ds
bound
xchg
mov
std
and
mov
popf
jae
adc
cmp
out
cmp
add
insb
test
pushf
cmc
testb
scas
sti
adc
mov
inc
sbb
iret
stos
cltd
jae
in
sbb
fistpll
or
mov
fpatan
repnz
pop
sbb
fidivl
popf
push
mov
or
jl
clc
pop
lret
sbb
pop
sub
push
jns
pushf
stos
add
xorb
mov
xorl
lret
lret
cltd
das
movsl
cs
xchg
in
popf
pop
int3
fcoms
and
push
addl
mov
mov
fs
add
push
in
inc
and
aad
mov
or
lcall
dec
add
mov
lock
test
lcall
push
fisubl
or
mov
pop
jle
subl
cmp
das
sarl
outsl
repz
mov
jg
les
push
clc
addr16
ror
mov
xchg
xchg
lea
push
xchg
mov
cmpsb
adc
iret
mov
shrl
adc
leave
and
fdivs
or
push
insb
push
push
rcl
cmp
rep
aad
ja
cltd
int3
mov
adc
out
ret
daa
sbb
pop
dec
ret
in
hlt
or
mov
push
into
mov
lret
push
fwait
sbb
frstor
jnp
and
jns
inc
or
or
popf
sets
pop
in
sub
xorb
xor
fs
stos
rcrb
pop
mov
fiadds
inc
mov
add
lds
mov
xor
pusha
jg
fs
fdivrl
or
inc
mov
popa
inc
jae
and
jg
jecxz
lret
shr
fcmovne
rorb
fdivrs
cmp
fs
push
jge
enter
sarl
dec
jnp
fisubrs
popa
inc
clc
das
adc
jns
push
jg
movsb
fidivs
je
add
sti
ja
hlt
mov
or
ret
mov
ret
jge
mov
inc
mov
push
lcall
rcll
sub
jae
xor
je
and
adc
iret
fsubp
mov
insb
push
cltd
jae
adc
pusha
inc
adc
or
jge
mov
jge
jg
or
imul
in
lods
dec
cltd
das
inc
inc
icebp
nop
push
ret
cltd
dec
sub
scas
jge
imul
push
jbe
mov
pusha
and
add
int
xchg
insl
in
or
mov
jmp
scas
mov
es
pop
dec
test
ljmp
loop
sub
cmpsb
cmpb
xlat
out
add
xor
int
mov
fildl
stc
cmp
fs
and
mov
fldenv
xchg
push
mov
test
xchg
xchg
sub
in
mov
loope
and
jecxz
pop
lret
lret
sbb
fldl
sbb
sahf
sub
pop
or
outsb
repz
jmp
cmp
ljmp
push
sahf
pop
lock
scas
mov
gs
pop
scas
push
sti
jnp
imul
fnsave
leave
out
push
adc
xchg
rcrl
mov
ficoml
gs
fisubrl
xchg
cwtl
or
jb
mov
jne
dec
je
leave
aaa
pop
push
stos
and
fbstp
push
popf
pop
cmp
or
push
cld
addr16
dec
mov
shrl
add
pushf
push
cmpsb
pop
in
hlt
into
push
xorl
and
adc
push
cmp
ds
mov
js
outsl
out
lds
mov
pop
repnz
or
and
imul
and
mov
rorl
push
outsb
sub
add
shrb
aam
hlt
adc
xchg
leave
and
daa
cltd
stc
sub
sub
sub
nop
in
xor
jmp
aas
adc
gs
mov
divb
sub
testl
ljmp
add
lods
xchg
xchg
cmpsb
xchg
cmp
dec
je
push
mov
jp
loope
jmp
and
mov
push
fstl
cli
sub
in
jno
scas
dec
or
adc
repz
jge
pop
lret
stos
mov
mov
mov
popf
adc
mov
fiaddl
test
mov
lret
mov
mov
mov
arpl
roll
imul
jne
inc
mov
call
jns
cmp
dec
cltd
push
shl
dec
push
repz
fbstp
push
xor
js
fwait
lods
jno
and
mov
mov
inc
test
fistpll
ror
out
adcl
insl
dec
and
push
and
repnz
cmp
enter
aad
popf
into
bndldx
or
call
ret
sti
dec
mov
and
lods
inc
sub
and
jmp
xor
cs
jbe
aad
pop
jecxz
out
rorb
js
into
into
mov
xchg
ljmp
jno
andl
ss
mov
pop
data16
jecxz
aaa
leave
lret
repz
mov
loopne
out
jecxz
add
cmp
and
sti
push
xor
jae
pop
sub
sbb
iret
jo
mov
or
mov
fyl2x
push
aad
jns
jecxz
pop
add
xchg
mov
xor
mov
and
adc
dec
out
stos
rorb
xor
cmpsb
ja
lods
xchg
std
jg
cmovge
fwait
shll
cmpsl
xor
mov
dec
call
sbb
inc
jns
rolb
int3
xor
mov
push
sub
ljmp
or
sbb
push
cmpsb
mov
sub
jbe
xchg
aaa
mov
lret
add
adc
movsl
adc
addb
sarb
jne
cmp
inc
ret
aad
jmp
sbb
insb
shll
sbb
lahf
mov
jae
adc
ljmp
sub
mov
cmp
xor
lods
mov
movsb
sub
push
pop
dec
xor
data16
pop
jl
jo
fildll
int
test
adc
jl
inc
xchg
es
std
inc
lock
mov
lods
jmp
mov
aad
or
bound
pushf
ret
sti
mov
and
fimuls
lret
jne
pop
std
mov
push
push
lds
movsl
lods
paddsw
push
mov
adc
lods
and
mov
sub
xchg
jbe
leave
xchg
dec
imul
movsl
cmp
push
mov
loopne
outsb
xor
stos
in
inc
aas
add
mov
mov
pop
lcall
sbb
inc
rorb
add
cmpsb
pop
or
sahf
pop
mov
fstp
fxch
sbb
cmp
nop
or
lcall
xor
mov
jmp
push
sti
fnstsw
push
and
add
xor
adc
sub
mov
sbb
in
sti
add
cmpsl
sbb
dec
or
push
int
add
ret
jmp
jge
dec
push
mov
push
mov
cmp
sub
lds
pop
lock
repz
dec
jge
mov
das
adc
daa
add
lahf
idivb
inc
xchg
xchg
sbb
cld
or
add
test
add
mov
sbb
mov
andl
and
xchg
push
stc
fcomi
jmp
test
dec
jne
and
jne
inc
out
in
sbb
inc
clc
fldt
sar
incb
push
bound
pusha
sub
fs
adc
add
cmp
iret
cwtl
cmp
repnz
mov
data16
jg
negb
dec
push
outsl
xlat
fmuls
mov
pop
sbb
ss
and
arpl
inc
push
clc
addl
sub
sub
cltd
jmp
test
mov
cld
mov
and
jno
js
lds
ret
rolb
movups
std
xchg
mov
push
out
mov
add
js
pop
gs
ss
add
pop
lcall
ds
jmp
xchg
scas
adc
mov
test
push
out
subb
jno
mov
mov
add
lock
stc
cmp
jae
mov
adc
stc
sbb
inc
lret
out
fistps
and
mov
add
and
xor
sbb
sbb
test
or
add
sub
inc
add
testl
into
dec
lcall
xchg
push
movsl
std
sub
push
ljmp
and
xchg
lods
adc
xchg
int3
pop
xchg
xchg
mov
push
pusha
xchg
fistps
jnp
or
pop
push
pop
enter
inc
mov
pop
xchg
aas
jne
jb
in
stos
add
test
in
test
test
filds
arpl
cmp
insl
in
lock
idivl
xchg
or
inc
enter
cwtl
pop
ret
sub
shll
push
loop
xchg
les
ss
dec
js
shrb
sahf
cmp
jg
jge
sbb
pop
mov
into
mov
push
ficomps
xor
adc
sbb
push
jne
daa
outsb
jns
and
lret
in
lret
xchg
fsubp
out
loop
adc
push
gs
out
fimull
dec
inc
push
xchg
dec
sub
cmc
lret
test
push
jno
inc
mov
push
in
jb
sbb
cmp
lods
out
xchg
inc
mov
lcall
gs
stos
imul
repz
or
pop
fst
das
xchg
xchg
loop
pop
clc
cmp
lret
mov
in
jmp
adc
mov
shlb
inc
notb
mov
aam
clc
and
xor
mov
or
cld
loope
cli
je
fdivrl
or
and
insb
pop
cli
add
ss
xor
sbb
and
and
lods
mov
gs
rorb
and
cmp
xor
push
xchg
pop
mov
decb
aam
out
dec
aad
les
cmp
push
adc
fs
push
mov
push
movsb
call
cmp
mov
mov
lea
inc
fwait
adc
and
add
popf
rorb
ds
mov
add
mov
arpl
pop
hlt
movsl
out
outsl
inc
cltd
sub
dec
push
ds
sub
xor
lcall
pushf
gs
or
scas
mov
pop
fiaddl
ret
jl
arpl
adc
imul
jmp
lahf
sbb
addr16
mov
and
add
nop
mov
inc
sub
sub
loop
push
stos
push
mul
xor
into
jg
dec
dec
dec
inc
adc
test
push
hlt
outsl
mov
lods
add
add
push
int
sbb
shll
xor
sarl
clc
mov
mov
out
add
xor
xorb
fsubrp
inc
ret
pop
sub
mov
or
cs
lret
movsl
les
test
in
aam
pop
ret
fsubl
rol
pusha
pop
mov
lea
and
pop
pop
cmp
iret
mov
cmp
push
pop
in
call
lret
roll
dec
inc
pop
ljmp
sahf
addr16
xor
inc
stos
xchg
adc
repz
lcall
stos
cwtl
push
std
fcmove
addr16
push
daa
jmp
mov
int
add
cmpb
add
in
xchg
xchg
in
dec
clc
imul
pop
ljmp
adc
mov
push
xor
or
push
pop
in
push
sbb
sbb
fidivrs
fisubrs
xor
pushf
pop
rcll
xlat
test
sub
or
mov
jb
sbb
sub
pop
dec
inc
rclb
repnz
pop
arpl
movsb
icebp
or
sub
pop
mov
sub
call
cmp
sub
das
sub
lods
je
add
mov
push
pushf
or
stos
or
sub
dec
test
int3
out
rcrl
xchg
movl
leave
xchg
sarb
and
cmp
push
loope
pop
push
sub
insb
sbb
xchg
cli
mov
sub
sbb
cmp
dec
pop
cmpsl
dec
mov
lret
test
pop
or
sub
mov
cmp
cmpsl
xchg
sub
into
dec
aam
add
ds
xchg
bound
jecxz
rorb
cmp
loopne
mov
daa
sti
sub
shr
xchg
fucomp
cwtl
inc
add
push
fldl
adcl
loopne
scas
adc
xchg
or
push
setno
int3
mov
js
movsl
les
jg
outsb
aad
shl
mov
inc
loope
mov
into
fsubl
mov
push
or
add
xor
sarb
add
gs
sahf
dec
fs
cli
sub
cmpsl
push
inc
mov
ret
xchg
add
mov
shlb
mov
sbb
lret
xchg
fisubrl
test
test
push
push
pop
out
xchg
or
and
and
fwait
inc
jb
lods
add
pushf
xchg
xchg
dec
push
sub
sbb
dec
roll
jle
out
arpl
mov
jge
push
push
scas
sbb
dec
in
xor
mov
sahf
outsl
or
test
dec
xor
xchg
sub
pop
pusha
lods
xchg
add
cltd
shlb
add
icebp
push
xor
sub
in
out
js
xchg
dec
jbe
arpl
int
jecxz
lret
out
jne
inc
or
dec
sahf
dec
or
add
rcrl
inc
shll
mov
outsl
jnp
cld
jne
arpl
fwait
or
idivl
mov
or
adc
js
fmull
inc
test
pop
pop
push
fwait
cmc
repnz
push
and
mov
sbb
pop
or
xlat
sti
xchg
add
inc
jmp
sarb
sbb
clc
rcrb
or
daa
sbb
popa
insl
enter
fcompl
mov
inc
jnp
jp
pop
add
mov
adc
mov
xchg
imul
inc
add
aad
gs
push
dec
xchg
lock
fadd
pushl
nop
add
fmul
stos
pop
mov
adc
out
test
fwait
into
les
out
mov
mov
outsb
cmc
inc
repz
add
test
clc
adc
int3
les
shl
imul
imul
test
xor
das
pop
out
mov
test
sar
xchg
sub
cwtl
popa
jecxz
es
fsubrs
sub
add
test
adc
out
pop
push
loopne
nop
jp
push
and
dec
adc
mov
popa
pop
out
dec
je
fists
lods
out
iret
or
movsb
jge
adc
xor
fbstp
in
pop
int
dec
cmpsl
pop
adc
loopne
mov
inc
xor
aam
iret
adc
jb
cmp
inc
incb
push
loope
fistpll
dec
out
cmpsb
pusha
cmp
cmpsb
sub
out
mov
orb
imul
adc
mov
xor
xlat
loope
push
out
dec
mov
pushf
fs
add
js
push
jae
push
inc
lea
in
dec
dec
ret
lods
jae
push
push
fsubrl
cmp
dec
cmp
cmpsb
fs
add
cs
inc
fisubl
lret
hlt
jne
dec
or
leave
icebp
lods
jg
add
push
pop
out
jnp
adcb
lods
repnz
nop
dec
pop
mov
push
das
lds
mov
ss
enter
out
mov
dec
push
mov
push
ss
lahf
nop
mov
fiaddl
dec
mov
in
jge
lret
adc
repz
jae
iret
inc
push
push
dec
adc
dec
cli
adc
cwtl
leave
aas
and
or
push
jle
and
ret
pop
outsl
sbb
sbb
aam
loop
fs
test
data16
inc
mov
leave
bound
mov
aad
lret
sti
cli
popa
jge
cmp
inc
inc
or
mov
nop
icebp
jp
mov
popa
pop
ja
xor
add
inc
dec
mov
add
jle
in
jno
dec
pop
divl
insl
ret
ljmp
addr16
mov
ja
imul
jbe
iret
lcall
add
adc
jecxz
pop
jge
fs
popa
in
jnp
pop
outsb
jge
jg
imul
push
adc
subl
pop
lods
lds
out
dec
ja
out
xor
jg
cmp
in
xchg
xlat
cmc
dec
cmp
gs
inc
sar
xchg
inc
or
jge
xchg
pop
push
mov
xchg
pop
xchg
xchg
call
mov
pop
fcomps
pop
cmpl
pop
mov
ficompl
xor
mov
fcoms
imul
sub
jne
sahf
roll
add
pop
testl
enter
nop
push
enter
adc
fmull
lret
lahf
rolb
andl
mov
push
movsb
xchg
mov
push
adc
xchg
clc
inc
mov
mov
push
xchg
adc
mov
nop
adc
test
sbb
push
fcoml
jg
in
out
outsl
std
imull
fbstp
outsb
or
cmp
mov
jle
cmp
fmuls
ja
aas
xchg
insl
mov
or
movsl
and
push
sub
scas
ret
sub
push
cwtl
push
cmp
lcall
jae
mov
clc
testl
leave
sbb
cs
fwait
pop
sub
fcoml
pop
jae,pn
xor
ret
daa
ja
push
pop
mov
das
adc
mov
sbb
lds
mov
mov
xchg
filds
xor
cwtl
jnp
xchg
dec
dec
testb
pop
cmc
and
imull
repz
fs
in
pop
push
movsl
add
stc
inc
shll
adc
pop
ret
aas
ficomps
fisubrs
out
xor
popa
jmp
push
leave
pop
data16
dec
in
cmpsb
dec
push
shlb
pushf
mov
pop
add
add
mov
push
push
jne
mov
shlb
mov
call
ds
push
inc
fmull
mov
push
sub
loopne
mov
mov
aaa
arpl
movsb
cmp
pop
push
stos
outsl
dec
clc
adc
or
xchg
xor
es
int3
or
cli
jo
mov
cld
fimuls
sub
mov
push
data16
shl
inc
xchg
out
push
jmp
mov
xchg
cmp
popa
pop
loope
jg
movsl
lock
movsb
xchg
xchg
dec
push
dec
insl
jge
push
or
cs
jb
nop
and
pop
push
incb
sbb
jo
xor
addr16
shll
xchg
pop
rdpmc
push
mov
int3
mov
sub
xor
leave
inc
sahf
xchg
pop
mov
jb
sahf
mov
sub
andb
test
jp
cmc
fnstsw
pop
bound
popf
mov
imul
in
xorb
push
jl
push
aas
and
mov
imul
xchg
jno
nop
sbb
cmp
cmp
sub
and
out
jp
pop
mov
mov
in
jmp
cmp
push
outsl
add
add
jmp
cmpsb
sub
in
mov
mov
mov
lret
in
fnstenv
and
and
mov
push
cmc
fstps
sub
sahf
scas
sbb
push
jge
dec
lret
pop
fdivrl
add
and
dec
jmp
lret
sub
clc
push
jno
jmp
nop
jmp
adc
cmp
add
es
fwait
pop
dec
xchg
pusha
add
add
aad
stos
sahf
cld
in
divl
cmp
imul
test
outsb
rcrl
std
into
or
push
bound
das
push
aam
sbb
inc
je
pop
add
lea
gs
jp
sub
fsubl
or
mov
and
mov
push
sbb
push
fdivs
xchg
push
mov
lahf
data16
sub
sbb
loop
cmp
jecxz
or
push
mov
enter
xlat
jle
in
into
cmp
mov
jg
decb
sub
icebp
loop
push
xor
sarl
pop
sbbl
mov
push
sub
stos
mov
clc
cltd
rclb
xor
jp
inc
test
push
rdtsc
lods
std
int
in
mov
adc
repz
mov
cmpsl
fmuls
mov
das
pop
outsl
loopne
dec
dec
repnz
inc
not
or
cmp
jo
lret
roll
leave
sbb
iret
lods
into
mov
dec
movq
or
mov
inc
push
cmp
sub
pop
pop
inc
test
adc
sarb
inc
push
xor
dec
mov
icebp
xchg
mov
push
mov
imul
inc
pop
pop
popa
pushf
sbb
cs
inc
cld
cltd
es
test
jb
insb
addl
dec
loope
push
cmp
xor
sub
or
sti
jb
pop
inc
push
pop
push
int3
xor
leave
scas
iret
sub
cmp
leave
lcall
jno
pop
pop
fimuls
pop
lahf
test
ret
push
int3
rol
add
xorb
dec
adc
xchg
test
stos
sbb
gs
loopne
lret
insl
mov
pop
dec
test
cwtl
sbb
scas
sbb
fcom
xor
test
insl
lods
insb
bound
mov
mov
lds
adc
cmp
jmp
dec
xor
cld
out
add
test
imul
add
call
mov
push
sub
pop
mov
negb
aas
xlat
adc
hlt
inc
mov
loop
adc
xchg
or
mov
pop
and
sarb
fisttpll
repz
movsl
mov
cmp
loop
sub
imul
cmp
inc
mov
inc
pop
jne
out
push
js
jp
mulb
jbe
mov
fisttpll
mov
jl
cmp
xor
jne
inc
adc
int
lcall
jge
sub
push
in
push
and
jmp
sti
sti
sub
add
outsl
sarl
shlb
mov
xchg
js
test
out
sarb
notl
jb
cmp
jle
lea
loop
loop
aad
and
mov
js
sub
dec
into
add
push
enter
ljmp
jnp
in
testb
mov
push
test
les
into
inc
ror
out
scas
in
inc
movsl
sub
push
adc
shl
les
div
imul
inc
inc
jae
aam
jb
cltd
ficoml
cs
mov
push
inc
xchg
mov
cs
push
jno
lahf
mov
inc
scas
ja
inc
clc
cld
adcb
push
adc
sub
or
lret
jge
das
push
sbb
mov
aad
addr16
out
pop
add
and
loop
adc
sub
data16
lcall
dec
cmp
rclb
leave
adcl
push
mov
pop
repnz
mov
or
jbe
push
pop
or
sbb
pushf
loop
aaa
std
pop
lret
fsubrl
mov
insl
sahf
imull
pop
add
push
jne
movsb
subl
sub
sub
jne
dec
cmp
movsl
jmp
mov
clc
jl
push
clc
into
or
sub
xor
lcall
jmp
aad
mov
scas
adc
mov
mov
sbb
or
out
ja
adc
in
pusha
call
in
mov
cmp
sbb
or
ds
ficoms
stc
mov
ret
in
cmc
push
or
xchg
or
jae
fdivp
outsl
adc
pop
push
fwait
push
mov
sub
xchg
stos
or
dec
outsl
and
shl
jge
gs
in
cwtl
push
aad
sub
test
test
push
aaa
or
std
pop
mov
pop
aaa
xchg
loopne
es
ja
aam
adc
add
cs
pop
inc
ret
sbbb
push
movsb
inc
pop
dec
dec
push
dec
pop
jmp
je
or
fwait
pop
or
icebp
pop
ds
lock
js
dec
fcmovnu
js
adc
mov
mov
and
push
cmp
std
fdivrs
pushw
push
add
ljmp
mov
sbb
iret
pop
stc
out
cmp
out
inc
lret
pop
xchg
jbe
xor
inc
popf
xor
and
sahf
in
in
mov
arpl
push
push
aad
lahf
pop
mov
adc
xor
xchg
jo
sbb
mov
mov
test
mov
pop
add
std
mov
xorl
lock
mov
stos
fldcw
and
jecxz
pop
inc
test
sub
fucomi
loopne
inc
dec
shl
add
push
negl
inc
loope
sub
pop
pop
xor
xor
cli
jb
xchg
in
sbb
test
in
fadds
dec
sbb
jae
mov
divl
rcrl
push
xor
jae
lock
bound
jl
aas
pop
shlb
ret
aas
lahf
add
pop
data16
cltd
push
or
sti
mov
or
lock
cs
jae
mov
sbb
mov
movsl
cmpsb
shl
xchg
arpl
pop
lahf
sub
mov
jbe
mov
jmp
cmp
push
mov
push
out
mov
jo
dec
shrb
leave
adc
and
stos
ss
int3
mov
xor
cmp
mov
mov
fs
sub
lock
lods
and
inc
fisttpll
xchg
inc
cmpsl
xchg
ljmp
out
inc
push
xchg
sbb
or
dec
repz
imul
xchg
lret
and
push
jae
mov
movsb
mov
sti
ret
out
cmpsb
fwait
dec
and
and
sbb
es
mov
das
jge
imul
dec
mov
aad
popf
notl
je
aaa
jge
ret
sub
mov
and
and
dec
int3
fildll
cmp
icebp
fidivl
lret
jbe
and
push
rcll
sbb
push
jbe
adc
ljmp
and
cmc
into
outsl
out
int
ret
in
ss
adc
faddl
inc
push
dec
jbe
int3
data16
pushf
fcmovnb
addr16
push
lods
xchg
or
push
cltd
push
shr
int
into
out
and
movsl
lahf
cmpsb
fprem1
sbb
or
cmp
jno
and
scas
out
lcall
sub
ret
cmpl
mov
inc
mov
xor
mov
inc
sahf
std
insl
push
inc
or
pop
xor
insb
cmp
jg
sub
fimuls
push
lds
xchg
jae
inc
dec
imul
adc
jb
sbb
xor
sbb
addr16
push
mov
in
or
push
sub
adc
pop
fdivrp
movsl
lret
into
xor
cli
in
mov
sub
jne
enter
aas
icebp
fxch
add
inc
in
push
int3
js
xor
imul
daa
sub
mov
jo
inc
data16
imul
cmpsl
inc
or
ret
pop
lods
sbb
mov
cmpsl
int3
pop
or
test
cmpsb
push
mov
add
cmp
cmp
movsb
adc
cmc
pop
addr16
ja
mov
push
jae
test
and
cmp
sub
out
enter
jno
xchg
sti
push
shr
pushf
pop
xor
test
jecxz
sahf
adc
fisubl
sahf
push
add
pop
push
mov
mov
mov
adc
or
in
mov
push
int
jmp
xchg
in
mov
aas
les
cli
add
xor
addl
mulb
jnp
cmp
subl
lods
int3
repz
mov
sbb
arpl
loop
cmpsl
xor
addl
pop
int
loopne
psubq
mov
mov
jg
adcl
test
nop
in
pop
aaa
pop
cmpsb
adc
fcmovne
dec
xchg
mov
xchg
xor
test
dec
movsl
fistpl
aam
test
and
mov
icebp
push
mov
add
push
sti
imul
lds
xlat
stos
mov
int3
in
stos
xchg
lds
mov
scas
xchg
jle
push
faddl
jno
in
mov
lds
fdivp
cmc
xchg
repz
imul
xlat
nop
push
dec
aas
sub
and
in
cmpsl
or
mov
pop
pop
mov
inc
adc
jmp
js
jo
popa
stc
and
repnz
hlt
pushl
cmp
aam
xchg
xchg
pushf
jl
cmp
push
popa
in
or
sub
adc
mov
add
xchg
mov
mov
ret
add
dec
adc
push
push
aad
ret
mov
scas
test
gs
xor
lock
mov
cld
repz
push
aad
adcb
xchg
test
or
dec
jge
in
pop
fs
mov
push
mov
in
adc
add
mov
in
inc
mov
lcall
mov
sbb
lcall
dec
ret
addr16
rol
in
inc
xorb
cwtl
fsubrl
pop
les
xchg
fildl
or
int
and
and
sbb
cli
popf
pop
repz
aas
push
sbb
aaa
nop
xchg
enter
add
jb
sub
jecxz
xor
xlat
sahf
push
call
xchg
mov
ja
adc
nop
mov
sahf
jae
aaa
shl
neg
sbb
mov
out
repz
gs
sbb
jecxz
stos
add
mov
mov
add
bound
sub
leave
mov
orl
cmpsl
out
mov
jnp
inc
test
mov
xchg
jb
test
out
sbb
pop
xor
dec
dec
adc
mov
bound
jmp
es
and
cmp
pop
shrb
dec
and
push
int3
push
xchg
movsb
popf
sub
inc
into
cltd
shlb
rcll
pop
out
mov
stos
dec
cli
mov
shrb
sti
lods
outsb
cmp
push
sahf
scas
jl
pop
mov
pop
enter
xchg
mov
add
fldt
add
mov
add
int3
xchg
sbb
clc
fistps
lods
das
lods
pop
testb
dec
test
xchg
dec
inc
mov
or
test
adc
dec
push
or
mov
fwait
cmpsb
jecxz
jle
xchg
mov
cli
dec
jbe
adc
push
imul
daa
adc
sub
enter
in
mov
insb
jbe
je
mov
lahf
loope
fstl
push
imul
jle
jl
or
bswap
xchg
test
xchg
push
mov
jnp
es
clc
pop
lods
pop
fs
mov
aam
insl
xchg
out
lret
aam
mov
imul
aam
inc
int
fiadds
jle
adc
jo
sahf
mov
addr16
mov
xchg
cmp
lahf
ss
data16
push
int
xchg
sbb
sbb
imul
jns
xchg
adc
mov
add
ja
repnz
addr16
subl
std
je
inc
aas
jl
jae
inc
test
jo
das
fwait
adc
or
push
sub
mov
pop
dec
xchg
sarb
aam
mov
xor
vphaddubw
iret
xor
shll
ret
lods
dec
add
push
inc
iret
mov
pushf
sbb
mov
popf
sbb
jnp
cld
inc
or
ljmp
notb
sahf
mov
sbb
mov
jl
ret
sbb
xchg
push
ret
aam
loop
jo
sub
mov
pop
pushf
add
ss
add
push
fisttpl
pop
and
add
loopne
data16
inc
ret
and
pop
mov
pop
jb
push
fbld
sub
or
push
ret
mov
clc
jp
cmc
in
jae
or
mov
mov
adc
mov
xchg
mov
pop
mov
adc
push
sbb
jb
jg
sbb
sub
mov
pop
jb
in
scas
add
or
int3
int3
add
daa
mov
lods
mov
test
jecxz
rorl
loop
mov
ds
xor
fs
add
lahf
xlat
scas
mov
out
sbbb
xchg
inc
mov
imul
dec
clc
or
aam
repnz
or
rol
cwtl
repnz
inc
sarl
outsl
dec
shrb
popa
hlt
mov
mov
lods
lahf
clc
mov
mov
xchg
data16
popl
jl
scas
js
and
test
xor
dec
jns
add
or
cmp
lock
mov
out
fsubs
xchg
pop
jnp
cmpsb
test
dec
jne
jp
pop
in
sbb
int3
ret
sub
es
movsl
cmp
jno
jmp
std
in
add
fdivrp
sub
iret
dec
inc
adc
push
decb
pop
rcl
lods
dec
outsl
test
mov
xor
bswap
arpl
incl
push
xchg
mov
aad
imul
and
add
xor
dec
cmpsl
lea
cli
aaa
xchg
das
or
fbld
stc
pop
lret
dec
pop
mov
xchg
mov
mov
mov
fisttpl
gs
xor
imul
ret
scas
iret
push
inc
sbb
fidivl
sub
mov
sbb
add
mov
jge
add
sbb
adc
jbe
lahf
lret
std
pop
push
cmp
dec
loope
iret
adc
lret
mov
xor
add
and
pop
sub
mov
rcr
ror
mov
sbb
rcll
xchg
repz
inc
and
ljmp
cmc
mov
or
sub
fisubrl
push
adc
inc
dec
iret
push
scas
mov
mov
xor
jb
or
inc
mov
iret
outsl
adc
mov
xchg
out
xchg
ss
scas
pop
loopne
inc
ja
pushf
shrb
jp
cmp
test
add
sti
ret
outsb
sub
lods
adc
les
shll
sub
inc
in
xchg
pop
xchg
xlat
inc
popf
fwait
xorb
sbb
mov
lahf
jle
cmp
inc
cmp
cmpl
adcl
fisubrs
push
mov
and
adc
adc
sti
inc
clc
xchg
push
in
jmp
js
mov
in
js
hlt
aaa
pushf
push
adc
sbb
testl
or
and
in
or
in
xchg
in
push
outsb
das
aas
stos
ret
or
out
lahf
pop
daa
pop
inc
in
rorb
and
les
adc
xchg
subb
loop
jecxz
ret
js
pop
mov
lds
filds
aas
fmul
mov
test
js
cmp
mov
ret
and
sbb
ljmp
sahf
sbb
add
or
inc
push
xorps
loopne
mov
inc
mov
cmp
mov
repnz
xchg
mov
gs
cltd
scas
lahf
mov
cmp
test
addr16
lahf
mov
jbe
mov
mov
pop
mov
cltd
mov
and
jns
jae
mov
sub
cmc
pop
into
bound
xor
stos
and
jb
dec
mov
dec
ljmp
cltd
sub
icebp
inc
scas
adc
jno
mov
shll
jp
xor
les
pop
jmp
push
nop
fdivrp
imul
cli
jmp
das
jle
jp
pop
negl
dec
mov
leave
sbb
lods
pushf
xor
test
jb
add
xorb
mov
in
shll
adc
hlt
push
call
push
jno
mov
push
test
pop
shll
outsb
xchg
cmp
js
inc
stos
xchg
pop
jge
mov
add
fldt
xchg
out
stos
fisubrl
bound
sbb
xor
pushf
push
cmp
pop
cli
push
pop
jae
aas
fildll
sub
inc
fnstsw
jmp
jp
bound
jb
fsubr
out
int
movb
fsubrp
call
repz
and
fimull
in
pop
mov
xchg
sti
mov
shrd
adc
fnstcw
lret
mov
or
lret
dec
popa
or
cmpsl
in
sbb
shlb
adc
popa
mov
cmp
mov
inc
pop
mov
nop
push
cmc
adc
mov
or
js
adc
nop
push
testl
adc
ljmp
jmp
loope
jge
pusha
and
rcrb
test
xchg
gs
out
inc
pop
mov
inc
loopne
ja
aas
jnp
sbb
popa
push
sub
adc
fnstcw
mov
adc
pop
movsl
add
pop
push
in
dec
xchg
shlb
push
lock
jmp
mov
into
outsb
fcoms
ss
int
outsb
mov
jle
inc
shlb
pop
das
xchg
pushf
loope
adc
and
mov
push
subl
imul
in
mov
fistpll
loope
or
inc
frstor
or
cwtl
out
add
cld
test
cs
mov
adc
push
mov
jle
pop
inc
stc
fwait
sti
jbe
std
add
dec
add
inc
xor
test
push
dec
aas
adc
push
mov
mov
or
push
jecxz
push
mov
sub
mov
in
cmpsb
shr
dec
add
stos
fmull
jg
cli
stos
or
stos
nop
and
out
repnz
sub
sahf
add
addr16
scas
ret
mov
sbb
ja
ja
jnp
cld
pop
and
lahf
adc
xchg
sbb
push
test
mov
mov
pop
out
inc
xor
mov
pop
js
aas
push
daa
pop
inc
jge
add
inc
pop
ret
lea
adc
jg
hlt
sub
cli
jp
xor
test
push
in
or
mov
adc
clc
cli
cld
jge
cli
push
idivl
sub
rorb
lret
or
movsb
les
gs
ljmp
addb
xor
movsl
and
pop
pop
jb
imul
enter
fdivrl
ss
arpl
fidivrl
push
test
cmp
cs
xor
in
repnz
pop
xor
adc
adc
mov
pop
and
mov
adc
enter
inc
shll
jo
mov
adc
xor
mov
mov
adc
inc
jl
cmc
in
cmp
jg
adc
aam
jg
mov
addl
mov
add
in
mov
cli
ds
xchg
int
aad
mov
pop
sahf
push
inc
inc
cltd
lods
dec
call
xchg
add
pop
cmp
call
add
xchg
cmpsl
mov
jecxz
icebp
js
mov
mov
lret
sbb
xchg
jl
cmp
or
enter
jns
dec
fcompl
mov
ficoms
int3
out
sbb
lea
pop
out
addr16
jg
jg
or
testl
add
xor
scas
faddp
fsubs
mov
dec
mov
mov
cmpsb
frstor
xlat
ds
fmuls
dec
cli
push
daa
pop
imul
push
jp
xchg
sub
xchg
cmp
or
xchg
mov
inc
xchg
imul
mov
push
movsl
clc
push
insb
shlb
adc
jge
xchg
std
cmp
rorl
fdivs
add
rclb
pop
stos
push
jb
xchg
cwtl
sub
stos
jg
dec
lock
add
pusha
or
adcl
lcall
int3
jne
or
data16
mov
cmp
xchg
test
cmp
lret
sub
std
adc
mov
out
ss
testl
and
cmp
fs
add
pop
lret
xor
cld
sti
adcl
mov
mov
loope
sbb
sbb
lds
lret
insl
int
mov
jecxz
repz
clc
xor
xchg
int3
push
imul
ficomps
fisubrs
lods
xchg
or
and
dec
insl
dec
push
fsubl
sti
add
jmp
lods
adc
imul
inc
ja
aaa
mov
loop
dec
jae
ret
out
pusha
fcompl
stos
fsubrl
push
sarl
cmp
pop
es
xchg
or
rorl
xor
icebp
mov
leave
test
rorl
add
sub
lea
rorb
jge
mov
rclb
pop
daa
adc
lods
xchg
in
popl
and
insl
insl
pop
mov
sbb
lahf
or
jnp
ret
push
xorl
outsb
movl
push
sub
mov
xor
xor
cmp
sub
out
fistpll
rorb
rclb
loop
loopne
xchg
fnstcw
fs
insl
lahf
or
pop
adc
sbb
pop
mov
outsb
add
sbb
out
cmpsl
dec
aam
sbb
sti
dec
mov
push
lea
and
movsb
mov
push
xor
mov
rclb
push
pop
pop
mov
adc
xlat
in
xor
pushl
and
push
pop
adc
jae
mov
push
jo
pop
sahf
sub
outsl
ror
push
test
scas
frstor
xchg
repz
out
jecxz
mov
or
popf
popa
pop
pop
mov
in
add
push
aam
xchg
test
xor
shrl
jnp
inc
and
aas
aas
push
jb
outsb
jmp
insb
loopne
push
je
mov
xchg
xor
cmpsl
cmp
daa
nop
lods
lahf
in
fsubs
cmp
inc
or
pop
xor
sub
sti
push
or
movsw
mov
cmp
xchg
jb
mov
push
outsb
arpl
lods
mov
add
inc
loopne
push
adc
xorb
push
mov
rcrb
repnz
and
aas
scas
cli
sub
sbb
sub
dec
movsb
outsl
add
jge
mov
inc
adc
and
mov
add
cmpsb
jbe
sbb
sbb
aad
jmp
je
fs
repz
fisttpll
insb
push
cmp
mov
sarl
sbb
scas
or
enter
dec
dec
subb
fisubrl
mov
cmpsl
btcl
ljmp
push
mov
movsb
mov
out
nop
test
in
mov
mov
sbb
adc
loopne
adc
xchg
xchg
mov
loop
adc
mulb
adc
dec
pop
popf
fadds
push
mov
rorb
cs
test
mov
sub
in
mov
sbb
mov
mov
jmp
pushfw
ss
imul
add
addb
stos
dec
fidivrs
lcall
dec
dec
fs
add
ds
jle
mov
lods
or
sbb
xchg
out
add
push
jecxz
outsb
cli
fwait
sub
cmp
pop
mov
pop
fcoms
mov
lcall
jmp
int
and
mov
aaa
ds
mov
mov
in
aaa
mov
jl
pusha
outsb
push
push
cmpsb
mov
fidivrs
fsubrs
mov
gs
movsb
repnz
cmpsl
cmp
daa
cmpsl
xchg
clc
js
lds
cmp
in
mov
sbb
andb
mov
push
test
lods
fnstenv
push
mov
jns
cmc
sub
and
ficoml
cld
mov
mov
cmp
pop
insl
xor
mov
mov
jbe
mov
ljmp
mov
adc
out
sub
clc
adc
xchg
cmp
cld
into
inc
lcall
dec
lea
xchg
cld
cmp
push
mov
jge
fs
cmc
mov
mov
mov
lods
push
mov
mov
mov
xor
mov
pop
or
cmp
add
roll
in
mov
int3
dec
loop
and
mov
fnstcw
add
cmpsb
movsl
mov
jmp
shll
pop
sub
jb
clc
dec
cmp
and
pop
adc
and
sbb
push
and
fwait
cmp
xchg
cmp
add
addb
jl
xor
pop
add
outsl
sub
sbb
inc
sbbl
sbb
jg
dec
adc
inc
js
lret
inc
addr16
and
test
xchg
jecxz
and
cmp
shlb
cmp
sbb
xchg
int3
popf
mov
mov
std
ja
sbb
push
jmp
aaa
stc
push
jae
les
mov
jnp
outsl
add
sbb
shrl
outsb
pop
mov
or
add
shll
mov
adc
cmp
push
mov
mov
add
cmpb
gs
movsb
loopne
adc
lret
imul
sbb
xchg
ds
test
xlat
loopne
in
xchg
shr
or
daa
gs
mov
js
ds
mov
cmpl
push
mov
inc
jnp
idivl
adc
les
clc
xchg
divl
popa
mov
andb
repnz
pop
adcl
mov
add
outsb
push
sarl
pop
aaa
pop
mov
or
mov
cmpsl
push
ja
lcall
lods
addb
xchg
add
movsb
and
rol
call
jae
cmc
cli
pushf
xchg
lods
sbb
xor
push
sub
pushf
in
add
xor
ds
int3
jnp
test
and
into
cmc
or
jecxz
aam
pop
mov
sbb
je
cmp
stos
jl
sbb
xor
add
inc
pop
inc
lds
push
inc
cmpsb
or
xor
outsl
ss
loope
xor
xorb
sub
lret
pop
iret
adc
jmp
shlb
mov
mov
dec
or
pop
loop
outsb
sbb
ja
fsubs
push
mov
repnz
jl
icebp
dec
popa
xor
nop
xchg
test
and
das
lds
stos
scas
clc
scas
lret
mov
dec
data16
int3
mov
xlat
cmp
out
lock
jno
into
stos
push
mov
hlt
dec
mov
scas
cmp
sahf
xor
sub
xor
xor
ss
stc
push
in
sahf
daa
leave
xlat
push
add
push
stos
hlt
jno
mov
ret
push
int3
xor
ljmp
arpl
and
adc
nop
imul
mov
jnp
mov
test
mov
push
pop
dec
mov
int3
mov
push
aas
ljmp
fimull
xchg
sbb
push
shr
cwtl
mulb
sbb
test
dec
mov
xchg
pop
js
mov
adc
add
xchg
or
or
mov
jo
xor
push
cmpl
sbb
adc
xchg
aad
cmp
pop
fwait
pusha
lret
test
and
xchg
mov
pusha
cwtl
add
pop
push
fwait
loope
pop
cltd
jns
stos
es
sbb
add
sub
xor
dec
jo
loop
add
sbb
mov
movsb
std
aam
popa
test
je
imul
xor
jb
adc
scas
dec
cmpl
cmp
je
pminub
inc
mov
and
sub
imul
or
xchg
pop
or
cmp
cmpsb
lret
in
jge
push
jmp
jle
jbe
lods
xchg
in
or
push
mov
dec
inc
gs
dec
sbb
enter
mov
icebp
xchg
and
add
daa
test
mov
xchg
pop
jle
sar
mov
cltd
int
in
lods
rcrl
dec
xchg
data16
pop
jns
push
add
pop
fbstp
pop
push
xor
lret
pop
xchg
je
stos
in
mov
ja
adc
loope
dec
dec
lock
rol
add
rcrb
inc
jb
addr16
pop
xorb
jnp
out
cmc
pop
or
inc
xchg
cmpsl
arpl
push
mov
popa
cltd
sub
pop
xchg
mov
mov
push
dec
cmc
push
mov
or
mov
cld
mov
cmc
popa
mov
mov
int
pushf
sub
fistl
xchg
movsl
sub
out
push
lret
fmull
pushf
mov
jmp
js
mov
mov
push
add
dec
mov
sarb
push
sub
jno
das
adc
sub
push
test
xchg
push
and
cld
cmp
insb
jmp
iret
inc
popf
cld
int3
mov
pop
adcb
je
jmp
loopne
inc
icebp
mov
mov
lahf
pop
imulb
jns
and
test
out
or
icebp
dec
pop
sub
mov
cmp
jg
sti
mov
bound
ss
push
pop
mov
sub
xchg
je
dec
cmpsl
mov
mov
adc
pop
cmp
lret
cs
pop
lahf
scas
int3
sbb
pusha
xchg
push
rolb
mov
pop
add
jmp
int3
push
daa
push
sub
xchg
push
fwait
push
mov
cmc
rclb
lds
lock
lea
push
hlt
mov
xchg
cmc
pop
pop
mov
out
jge
aas
xchg
out
inc
lock
jns
repz
sub
sub
nop
jg
pop
pop
es
icebp
rcr
cmp
push
mov
es
clc
fcoms
cmp
cmp
xchg
stos
in
sti
mov
or
or
sahf
inc
sbb
pop
imul
sti
sbb
hlt
mov
hlt
loopne
adc
push
fnstcw
mov
xchg
lahf
fdivs
push
inc
adc
or
pop
jp
add
pop
test
and
inc
insb
xchg
bound
jae
insl
lcall
js
add
ds
lods
xchg
push
or
mov
out
imul
lock
jg
xor
push
imul
clc
xor
add
daa
lds
pand
sbb
push
test
xor
sti
in
aam
stos
jg
ds
adc
adc
imulb
dec
in
push
nop
jno
inc
pop
and
outsb
mov
cmp
jno
mov
pandn
push
insl
in
aad
test
decb
push
pop
inc
jb
addr16
fsubs
or
sbb
xchg
dec
push
pop
cltd
fucompp
out
jne
cs
ljmp
jle
scas
xor
in
ss
mov
add
jo
pushf
sub
cltd
or
xchg
bound
icebp
or
pop
rclb
cmp
faddl
aas
leave
shlb
clc
ja
stos
cwtl
pushf
xchg
fucomi
sar
mov
call
inc
icebp
push
pop
incl
dec
fnstsw
xor
xchg
adc
sarl
pop
and
cmc
sbb
mov
xor
lcall
sub
xor
mov
dec
fdivp
mov
sbb
popf
sbb
insb
mov
mov
push
data16
addr16
nop
ljmp
sbb
fidivs
push
mov
into
jmp
push
es
in
jb
mov
sbb
xlat
cmp
inc
sar
test
add
mov
arpl
push
int
cli
sti
loop
or
ret
or
or
dec
es
out
nop
int
cmp
fbld
cmpsb
mov
cli
inc
aaa
push
dec
xchg
jecxz
repnz
imul
adc
pop
push
dec
xor
shlb
mov
xchg
cmp
add
notb
mov
inc
mov
out
jge
andb
push
xchg
test
cmp
fbstp
jp
and
pop
mov
repnz
sti
dec
mov
pop
lret
orl
popf
add
xor
aas
das
pop
rorb
jnp
sbb
in
aam
cmp
or
cmp
mov
push
adc
lahf
cmp
adcb
aam
sbb
loope
lock
xrelease
mov
or
loop
mov
sarb
mov
in
dec
adc
xor
mov
cmc
jmp
flds
fidivl
jmp
rep
push
cmc
dec
mov
pop
jg
xchg
xor
jo,pt
fnstenv
or
nop
mov
or
imul
cli
jp
arpl
scas
faddl
and
test
mov
sub
sarb
sbb
je
add
xchg
mov
aas
jae
imul
mov
push
mov
push
inc
jno
shrb
aam
in
out
pop
cltd
sbb
xchg
push
pop
push
sar
ja
test
fcmovnbe
les
mov
das
sbb
into
push
sub
aad
test
repnz
ja
lcall
inc
jecxz
sbbl
and
test
pop
mov
mov
int
inc
push
inc
xor
xorb
imul
pop
in
jmp
movsl
int3
add
pop
lea
lea
sub
addb
xchg
mov
ror
stos
pop
jns
mov
pop
pop
dec
sbb
or
jmp
pop
xor
mov
adc
enter
cltd
in
xchg
hlt
pop
popa
mov
dec
dec
lahf
and
orb
dec
fcmovnb
cmp
or
dec
popf
mov
out
jb
inc
rorl
popf
dec
add
int
movl
lcall
enter
and
mov
mov
mov
ror
push
jbe
fistpll
out
inc
mov
cmp
enter
dec
push
dec
xor
sahf
lock
insl
push
inc
into
fwait
pop
cmp
std
sarb
xlat
test
dec
mov
adc
pusha
hlt
test
sub
pop
mov
push
xor
add
lods
lret
sahf
lcall
jle
sbb
or
cmp
inc
or
push
add
or
xchg
mov
leave
and
jbe
fisttps
pop
into
push
stos
or
or
mov
pop
loopne
add
dec
bound
call
test
push
or
mov
pop
jb
arpl
iret
adcb
and
sti
pop
cmp
fcoms
in
or
std
jno
out
inc
or
lret
dec
fdivrl
adc
out
aad
mov
push
repnz
cmc
adc
mov
xor
sub
loop
push
insl
mov
pop
push
adc
ret
xor
sbb
mov
pop
cmp
data16
mov
xchg
jle
fildll
inc
mov
mov
sub
outsl
mov
cmpsb
mov
movb
cwtl
addr16
jp
mov
js
pop
stos
shlb
incb
inc
out
sub
fdivs
fsubrl
lret
xchg
mov
sbb
mov
add
jg
cmp
enter
jb
mov
push
nop
push
movsl
xorb
loop
pop
mov
stos
inc
xor
ss
sahf
or
hlt
jae
jg
int3
push
xor
in
xchg
imul
sbb
cli
mov
lods
scas
insl
mov
and
dec
pusha
pop
xorl
int
sbb
pop
push
jo
xor
xor
jl
in
xor
nop
xchg
sub
sbb
cld
pop
ficoml
es
hlt
mov
outsb
mov
xchg
mov
mov
lret
mov
popf
sti
inc
jp
icebp
inc
jp
inc
int3
sahf
and
jno
out
mov
shrl
jnp
or
push
jg
adc
inc
adc
add
jo
outsl
adc
cmp
cmpsl
fildl
std
push
adc
stos
fstl
test
or
pop
iret
and
add
in
inc
and
adc
aaa
xor
cmp
test
insl
and
dec
sbb
lods
lds
push
add
push
sbb
leave
mov
cld
scas
into
testl
push
and
xor
scas
rclb
cmc
mov
and
ds
and
or
jb
outsl
enter
sub
lds
pop
adc
sbb
iret
shr
repz
mov
stc
jge
insl
lcall
sbb
imul
sbb
icebp
into
popa
mov
add
mov
movsb
and
das
add
mov
xchg
sahf
jg
cmpsb
cmp
mov
out
adc
push
mov
xor
getsec
or
inc
mov
xchg
dec
fbld
mov
imul
push
cmp
pop
outsl
mov
sub
aaa
jno
pop
xchg
fstl
and
jb
fstps
cmp
insl
sarl
in
lods
dec
lock
cmp
cmc
jmp
push
mov
enter
sub
mov
cmp
mov
cmp
pusha
xor
push
fnstenv
jo
inc
add
test
cmp
shlb
sbb
arpl
cli
inc
pop
mov
inc
mulb
call
and
xor
outsl
insl
xchg
aad
mov
mov
mov
adc
fs
or
sub
in
movsb
inc
fsubr
scas
sub
jl
clc
add
add
in
sub
cmp
aam
lahf
jl
fistl
push
push
rolb
sbb
aad
add
xor
pushf
add
out
aaa
aad
push
in
xlat
mov
jl
popf
cmp
fwait
stos
in
ja
inc
xchg
insb
xchg
and
pop
mov
add
in
ret
lods
or
leave
mov
pop
aaa
mov
sbb
jmp
dec
scas
xchg
into
nop
cmp
sbb
lcall
aad
bswap
outsl
gs
imul
xchg
adc
mov
loopne
adc
jecxz
pushf
and
andb
movsb
dec
call
dec
push
push
pop
pop
xchg
mov
and
sub
and
adc
aam
pop
push
dec
cltd
aas
xchg
repz
xor
stos
jecxz
push
test
sbb
inc
and
jnp
js
xchg
and
je
add
sub
ficomps
adc
xchg
mov
out
iret
sub
pop
inc
std
fnsetpm(287
inc
inc
adc
mov
lahf
lds
int3
inc
cmp
addr16
les
out
fistpll
aad
sbb
cmpsl
movsb
clc
sbb
repz
cmp
aaa
xor
int3
mov
mov
aam
push
adc
je
and
flds
push
in
popf
mov
push
add
sbb
jecxz
fnstsw
outsb
cli
hlt
fcoms
shl
xchg
push
cmp
push
movsb
xor
sub
xchg
aaa
call
scas
filds
out
pop
outsl
inc
and
jecxz
pop
mov
cli
add
xorb
into
and
or
adc
in
push
xchg
data16
sahf
loopne
adc
xor
inc
jecxz
xchg
pop
mull
push
les
dec
mov
leave
mov
lea
ret
push
rcrb
orl
fidivl
inc
pop
and
addb
out
call
rorl
and
scas
jecxz
pusha
mov
mov
jae
mov
mov
adc
pushl
lret
in
js
add
add
cmp
mov
testb
mov
iret
js
mov
xchg
xchg
jge
mov
or
aaa
push
dec
mov
xor
mov
sahf
ret
push
sahf
mov
fcmovu
lret
cmp
shll
shrb
bound
xchg
arpl
jl
mov
sbb
es
push
jg
mov
add
scas
mov
push
das
pushf
scas
cmp
xchg
xor
adc
shlb
in
pop
mov
lret
lcall
push
ret
in
mov
push
cmpb
mov
push
mov
lret
push
ret
sbb
mov
pop
arpl
pop
push
nop
ljmp
not
mov
les
adc
xchg
mov
adc
pop
adc
dec
aaa
mov
pop
or
xchg
xor
pop
int
ret
jmp
mov
sub
push
sbb
cmp
into
jb
in
mov
int3
imul
into
lret
cltd
aaa
bound
cmp
adc
sbb
sbb
in
mov
mov
xchg
loopne
push
sarl
lea
repz
jl
aaa
jo
pop
xorb
stc
clc
pop
inc
mov
xchg
or
xchg
push
faddl
or
mov
aaa
enter
daa
lret
jne
ret
test
fidivs
imul
lds
loope
dec
mov
dec
jne
xchg
sub
pop
or
mov
call
sahf
sub
sti
outsl
sti
push
mov
cmp
jbe
iret
stc
in
xlat
push
outsb
push
pop
add
outsb
idiv
aad
aas
fsubrs
test
inc
sbb
jg
sahf
mov
inc
movsl
mov
cmc
daa
cltd
rcll
mov
dec
pop
fidivrl
popa
and
lea
pop
push
dec
mov
nop
xchg
xor
push
icebp
fldl2t
cmp
lcall
push
int
or
xchg
ja
or
pop
inc
out
je
lds
jns
pop
sbb
mov
mov
hlt
outsl
inc
mov
or
popw
cmp
idivb
dec
es
les
aaa
repnz
lret
lcall
pop
and
loope
les
dec
movsl
lods
ficoml
leave
js
cmp
lods
stos
outsl
or
bound
and
dec
or
and
insb
cmp
pop
std
daa
insb
inc
xchg
sbb
inc
incl
and
mov
das
xor
cmp
mov
imul
and
inc
lret
rcrb
arpl
negl
sbb
bound
jns
or
das
pop
adc
fcmovb
ljmp
test
idivb
mov
lcall
daa
and
mov
in
pop
fs
jge
pop
icebp
pop
shrb
pop
and
jo
rcrl
pushf
cmp
cmpl
xorb
inc
int3
mov
insl
in
rcl
movsl
mov
imul
ljmp
in
push
and
loop
mov
fiadds
iret
jl
and
ds
imul
pushf
adc
jno
dec
and
push
gs
das
xchg
movb
cwtl
adc
fdivrl
add
add
jnp
xchg
mov
je
fcomi
jecxz
sti
stos
nop
and
jnp
xchg
lea
int3
jecxz
idivb
inc
add
pushw
jae
pop
pop
cmp
mov
rcrl
shl
pop
hlt
fsts
and
cld
mov
xchg
icebp
in
gs
je
je
push
cwtl
push
xchg
mov
xor
in
repnz
add
cmp
xchg
xchg
in
dec
dec
jle
xor
gs
jbe
mov
bswap
int
add
cmp
scas
lret
cmc
imul
imul
ret
add
jb
fdivs
sbb
sub
push
lods
or
jge
icebp
jmp
loop
cltd
int3
in
int
out
shlb
fwait
mov
rolb
rcrb
int3
cmpsb
fnstsw
mov
loopne
adc
lods
js
push
adc
cmpsb
bound
lods
or
xor
ds
mov
sbb
dec
mov
sub
rcl
lret
jae
xor
fwait
add
and
imul
mov
lahf
mov
fstpt
in
sbb
cmpsl
imul
add
and
arpl
ja
xchg
xchg
lds
cmc
std
incb
mov
push
mov
add
popf
pop
mov
adc
scas
cmpsb
dec
cmp
sub
ret
sub
ficoms
icebp
mov
mov
inc
push
push
fadd
pusha
pop
lret
jbe
adc
mov
pop
push
lock
imul
mov
aad
daa
stc
outsl
test
pop
lea
pusha
cmp
outsb
jp
mov
loop
and
cltd
cli
pop
and
mov
mov
push
dec
adc
sub
imul
sub
shlb
shr
lcall
xor
mov
aas
sub
or
sub
fstl
cld
cmp
dec
cld
addl
movsb
fistpl
xchg
inc
hlt
ficoml
jle
scas
cli
pusha
fwait
iret
lods
push
adc
fwait
cltd
arpl
pop
jp
or
sub
andl
je
jmp
jne
xchg
lcall
sub
dec
dec
cmp
std
in
and
rcr
sbb
fistpll
fists
push
adc
adc
loop
sbb
push
cmpsb
shr
mov
mov
or
lret
jb
test
lods
js
mov
aaa
repnz
ss
xchg
mov
and
outsl
notb
xchg
in
mov
mov
push
rcr
push
sub
movsb
push
pop
lcall
fimull
out
cmp
les
aaa
bound
xor
in
sti
jmp
ja
movsl
xchg
cld
inc
xchg
dec
or
sbb
sahf
xchg
stos
or
xor
mov
sub
adc
aas
std
ret
scas
dec
stos
add
insl
cltd
ja
xchg
push
mov
push
pop
xor
push
add
fs
fsubl
lea
in
push
push
mov
loopne
int
xchg
jnp
or
add
out
scas
movsb
cmp
cld
mov
add
cs
pop
dec
sub
nop
jge
int
test
adc
cmpsl
ja
adc
push
push
out
xchg
lret
ficoms
movsb
imul
mov
sub
or
icebp
push
add
in
mov
pop
push
ret
sub
jo
testb
clc
aas
push
rcll
movsb
clc
repnz
jo
xor
mov
out
jg
ja
clc
sahf
bound
or
inc
call
push
lahf
or
add
inc
insb
or
push
sarb
nop
sbb
mov
inc
or
lahf
pusha
pop
mov
ret
adc
iret
fcompl
cmp
mov
mov
mov
pusha
cmc
aad
pop
push
adc
mov
cltd
mov
pushf
stos
sbb
cli
push
ds
fistl
dec
adc
inc
mov
jg
push
mov
push
shr
pop
adc
ja
push
out
inc
in
mov
mov
bound
repnz
mov
or
fsubrs
fistpll
mov
mov
mov
lds
sub
sub
pop
cmpsb
test
push
popa
cs
mov
stc
jnp
ficoml
pop
scas
inc
mov
enter
pop
insb
gs
xor
aaa
jp
leave
xchg
add
mov
sbb
xorb
test
out
or
pop
cmp
or
dec
mov
fcoms
adc
add
jge
fmull
imul
arpl
dec
xor
pop
sub
insb
and
repz
subl
dec
pushf
mull
cmpsb
push
jle
and
mov
in
je
sbb
mov
rol
insb
or
mov
xor
addl
xchg
or
cmp
fstpl
sbb
and
shl
inc
jmp
cmp
xor
lds
push
in
fidivs
sub
iret
inc
pop
sbb
adc
mov
in
inc
fists
das
xor
add
sub
daa
aas
lds
fdivr
cmp
lcall
xlat
xchg
or
test
jg
mov
das
mov
cmp
xchg
lahf
mov
and
mov
addr16
hlt
sbb
jno
xchg
jmp
out
inc
fidivl
jg
lcall
pop
pop
repz
fstl
cmpsl
xchg
cwtl
mov
cs
in
outsl
lret
mov
nop
ds
es
pop
xor
ljmp
pop
roll
mov
enter
mov
loope
sbbl
and
xor
jae
movsl
xor
out
pop
aam
xchg
cmp
shll
mov
push
push
test
loope
cmp
sbb
icebp
sbb
xor
repz
ja
scas
outsb
sbb
hlt
out
into
cmp
inc
les
ret
sbb
dec
test
dec
scas
pusha
ja
addr16
cld
push
dec
ja
mov
rorl
lahf
mov
xor
bound
mov
outsl
test
leave
jbe
xchg
mov
jb
cmpsb
or
jp
sbb
cmp
jno
pop
pop
filds
in
or
notl
test
cmp
repnz
dec
fsubs
dec
cld
aaa
fidivl
clc
push
leave
xchg
inc
push
mov
aam
rorb
mov
jbe
sub
mov
sub
in
sub
jmp
out
fidivrs
dec
popf
iret
cli
push
add
ret
lods
movsb
insb
pushf
mov
cmp
cltd
aaa
mov
push
inc
xor
mov
fmulp
sub
push
lds
das
and
push
mov
pop
xlat
add
aas
fwait
call
mov
mov
xchg
mov
clc
test
pop
add
xchg
test
cmp
rcr
out
xor
pop
pop
jnp
mov
push
stc
inc
add
jo
pop
lds
cmp
sub
mov
jbe
addr16
ja
sub
or
lcall
je
jae
icebp
fstps
or
adc
ja
cmpsb
ret
pop
rcl
pop
cld
jge
and
xor
xor
test
or
mov
ret
adc
loopne
iret
popf
jae
add
stos
cmpsb
or
aas
icebp
pop
std
clc
leave
push
in
outsb
flds
xor
sub
sub
adc
mov
inc
outsl
out
stos
adcl
mov
pop
jno
sub
mov
mov
data16
out
and
pusha
mov
jle
fs
xchg
pusha
mov
sbb
and
mov
xchg
ret
xchg
cltd
dec
sub
inc
sbb
scas
fs
mov
les
xor
outsb
je,pt
in
jno
mov
mov
ds
je
mov
or
mov
es
xor
fistl
lret
inc
xor
inc
pusha
and
mov
cs
pop
mov
addb
push
mov
jb
xor
outsb
jg
das
out
xor
mov
call
rorb
inc
cmp
lods
inc
sub
fimull
repnz
cltd
pop
sbb
adc
xor
scas
pusha
dec
iret
mov
out
dec
js
cmpl
daa
lret
sahf
mov
mov
inc
fiaddl
stos
xchg
jbe
pop
sbb
sar
push
shrb
inc
bound
das
cmpsb
adc
adc
arpl
push
int
adc
inc
push
pop
insl
mov
stos
movsl
mov
aas
adc
push
mov
jno
push
push
dec
ret
xchg
cli
mov
xor
and
aad
int3
mov
arpl
push
mov
jb
cs
pop
mov
dec
inc
xor
pop
sub
push
jmp
push
push
es
add
cmpsl
pop
add
into
mov
es
add
hlt
push
push
shlb
js
push
fdivs
push
jb
scas
sub
daa
pop
cltd
lds
jmp
test
aad
aas
stos
decb
popa
xchg
jb
adc
push
sbb
dec
aam
fs
pusha
lods
mov
inc
into
das
das
mov
xor
ljmp
dec
aaa
xchg
imul
sarb
aam
mov
arpl
clc
in
or
aad
lds
cmp
mov
xlat
jno
ret
subl
loope
aas
cmp
popf
push
jbe
cmp
or
sbb
nop
cmp
mov
cmp
inc
xor
fistpl
sub
nop
ss
cs
fnstcw
stos
loopne
sahf
xchg
cmp
jle
push
xor
movsb
movsl
xchg
in
or
sub
mov
pop
shrb
mov
and
mov
and
push
mov
dec
icebp
and
fnsave
ljmp
xchg
gs
cmpsl
or
inc
mov
mov
or
cmpb
jno
mov
push
mov
outsb
push
sub
pushf
shlb
pop
sbb
icebp
push
adc
icebp
jmp
mov
pop
xchg
mov
test
sbb
in
std
lods
or
and
adc
outsb
in
or
push
add
xor
cs
lock
fiadds
or
out
xor
push
mov
inc
adc
push
arpl
lahf
in
leave
loope
jnp
or
test
inc
scas
dec
out
ss
in
out
mov
testl
cmc
cmp
mov
fmul
pop
cmp
call
cmpsl
das
test
jae
push
xor
das
lret
addb
mov
cmp
out
fildll
add
shlb
jnp
inc
add
push
adc
mov
stos
mov
dec
pusha
stc
adc
cmp
loop
add
cmp
pop
ds
aaa
sub
ret
gs
mov
and
push
mov
cmp
lds
xchg
test
mov
dec
gs
push
out
pushf
pop
or
ljmp
arpl
and
mov
js
push
inc
mov
lock
adc
pop
cmp
hlt
mov
and
lock
dec
ret
fistpll
icebp
dec
fistpll
inc
cmc
push
mov
sub
loop
imul
cld
movsb
cmc
mov
add
xchg
insb
pop
pop
xchg
and
mov
in
imul
pop
xchg
out
arpl
push
jns
cmp
lret
jp
ja
cmp
ds
mov
inc
enter
test
scas
add
xchg
jns
inc
jp
call
cmpb
dec
ret
cwtl
cmp
leave
cmp
jnp
push
inc
sbb
mulb
sbb
sub
and
fistpl
cmpb
adc
stc
and
pop
adc
mov
mov
shl
xor
push
fisttpl
sub
movsl
dec
je
mov
inc
pushf
mov
mov
jb
inc
lcall
je
pop
scas
adc
nop
movsl
sbb
inc
leave
or
xchg
xchg
out
lcall
out
in
cmp
mov
scas
lret
jecxz
xchg
push
icebp
pop
or
dec
ret
cli
and
je
idivb
clc
lcall
pop
stos
cmp
push
pop
or
mov
adc
push
loope
and
in
pop
inc
rcll
loopne
sub
repnz
fdivrs
test
sub
bnd
xor
xchg
xchg
pop
mov
or
jbe
je
xor
shl
jle
aas
cmp
leave
inc
enter
stos
mov
pusha
je
push
in
ret
mov
fadd
hlt
pop
xorb
test
and
jmp
adc
iret
add
cmp
inc
ds
popa
cwtl
aam
pop
lahf
cld
sbb
incb
fistl
add
test
lock
xchg
daa
cli
ds
or
jle
js
nop
cli
adc
xchg
movsl
mov
scas
rcrb
sub
dec
and
out
jo
je
add
lock
lcall
movsb
mov
cmp
or
rclb
sahf
cld
mov
mov
and
inc
stc
jbe
or
orl
imulb
imul
pushf
lods
stos
bound
cmp
xchg
jmp
ret
and
dec
test
out
push
mov
adc
jo
lahf
xor
mov
test
shr
leave
cltd
cmp
mov
jp
int
ds
popa
dec
pop
xchg
daa
testb
popa
aas
mov
and
mov
dec
ljmp
in
sbb
push
mov
je
rcrb
hlt
xor
jbe
and
pop
and
jg
arpl
fwait
adc
push
or
xchg
lods
push
sbb
in
stos
xchg
in
dec
test
push
jns
dec
in
xor
and
mov
pop
cmc
sub
mov
adc
lock
xchg
add
sarl
and
popf
inc
xorl
out
das
cs
cmp
mov
jnp
jl
jne
cmc
int
fcmovbe
xchg
push
into
add
scas
jl
sarl
jecxz
xor
and
pop
pop
sub
push
xchg
xchg
xchg
dec
mov
into
mov
popf
jbe
or
mov
jl
in
fbld
jo
and
mov
jecxz
lret
and
fisttps
jbe
out
pop
je
mov
into
inc
lods
popa
dec
loop
xchg
fnstsw
mov
in
cs
out
outsb
adc
mov
mov
mov
ret
jo
jmp
jg
fimull
jmp
sub
bnd
jb
mov
xor
add
sbb
stc
cli
push
jns
cld
or
int
xor
pusha
testl
inc
lods
sbb
les
inc
in
lds
cmp
ret
add
in
jno
add
stos
ja
xor
push
sahf
imul
push
pop
xlat
or
mov
mov
fstps
rolb
push
je
sub
lret
xchg
shll
or
push
mov
prefetch
dec
cld
push
jmp
stos
sbb
mov
push
push
stc
mov
adc
sub
out
or
adc
sub
pop
sub
push
in
push
arpl
sub
fistps
shll
movsb
mov
stos
dec
dec
insb
lods
adc
lret
stc
notb
mov
push
and
call
sub
xor
mov
add
or
mov
pop
lods
sarl
inc
xchg
in
pushf
jae
sub
testb
addb
fcomp
aad
pushf
and
pop
adc
adc
add
cmp
push
jg
sub
repz
das
gs
jl
ficoml
lea
xor
inc
push
rclb
pop
scas
sbbl
sub
sbbb
sarl
jne
lds
out
pop
addl
js
in
pop
out
scas
popa
int
fisttpl
test
movsb
cmp
cmp
adc
subl
dec
xor
add
jb
xor
fsub
pop
or
push
daa
mov
inc
data16
loop
stc
or
scas
jle
daa
call
adc
lret
mov
imul
pop
mov
in
jg
lds
dec
cmp
inc
adc
cld
in
pop
sahf
fisubs
negl
sub
jle
test
outsl
popa
dec
outsb
fucomp
xchg
mov
mov
mov
push
fdivs
icebp
addr16
adc
aaa
pop
pop
sub
nop
mov
movsl
inc
cltd
mov
repnz
fimull
popf
sbb
imul
xor
add
and
stos
or
xchg
and
imul
jbe
mov
and
cmp
cli
stos
insl
jbe
cmpsb
nop
les
int3
jle
in
pusha
push
mov
std
jecxz
repz
mov
push
mov
shlb
mov
sub
pushf
pop
push
fmuls
mov
shrl
insl
xor
ret
dec
add
adc
adc
pop
inc
stc
js
das
mov
roll
mov
out
out
push
pop
mov
xchg
and
adc
leave
scas
jo
cmp
adc
nop
aaa
mov
add
bound
int
push
cmpl
lret
jge
lock
jno
xchg
pop
add
cmpsb
mov
sbb
fbld
stc
push
push
jp
dec
iret
pushf
jae
pop
test
insl
inc
in
pop
stos
jecxz
xchg
sbb
js
sub
cli
hlt
sbb
call
or
test
cmp
inc
mov
fcmovbe
inc
lock
popa
push
scas
and
jno
lcall
inc
shll
add
arpl
ret
push
repnz
and
rclb
inc
sub
cs
inc
mov
mov
inc
xchg
mov
dec
inc
jp
bound
rcrb
jne
push
jbe
test
jnp
mov
push
bound
insl
jae
pushf
mov
adc
mov
iret
jl
das
or
add
faddl
stos
xchg
lods
xchg
adc
sbb
jp
scas
dec
bnd
inc
jge
push
mov
mov
or
or
mov
negl
rol
xchg
mov
cwtl
xor
jmp
cmp
sub
adc
insb
lods
mov
pop
jb
xchg
xor
jmp
push
push
xchg
cmp
mov
or
inc
sbb
adc
fsubl
jbe
call
je
mov
push
lods
push
int
loop
add
jle
bound
xchg
movb
push
push
mov
adc
enter
and
xor
adc
inc
shlb
daa
lea
aad
test
fadds
clc
out
jge
loope
cs
dec
dec
and
adc
xchg
imul
mov
mov
lcall
inc
sbb
ret
inc
out
push
adc
sbb
in
movsl
jb
addr16
push
mov
mov
and
frstor
in
xchg
jge
add
in
pop
mov
adc
and
sub
mov
fs
movsl
mov
sbb
cmpsb
adc
pop
jp
nop
pushf
ficoml
mov
xchg
subl
mov
aam
mov
jecxz
cmpb
pop
fs
and
push
mov
movb
xorb
mov
jg
push
and
and
pop
xchg
mov
mov
jae
mov
mov
sbb
into
sbb
roll
mov
cwtl
jecxz
or
sub
xchg
or
imul
aaa
sub
inc
adc
xor
out
push
subb
test
aas
cmp
sub
ds
in
cs
leave
jp
pop
mov
cmpsl
stos
repz
lods
in
in
pop
cmp
pop
loope
mov
sbb
jl
xlat
inc
and
fs
mov
movsb
cmp
inc
pop
dec
xor
xchg
je
or
sub
aaa
mov
xchg
vmread
inc
lret
lret
outsb
or
xor
mov
pop
mov
ret
imulb
or
cs
mov
push
leave
cs
mov
lret
push
push
sbb
mov
mov
popf
or
imul
stos
inc
inc
scas
call
enter
jp
sbb
dec
leave
dec
movsl
rorl
pop
int
addl
sbb
cwtl
out
jge
out
or
xor
cltd
pop
outsl
sti
out
arpl
rol
ret
mulb
dec
dec
pop
sbb
sbb
cmp
incb
dec
mov
jae
lret
adc
cmpsl
imul
or
std
icebp
adc
sbb
ljmp
push
jg
inc
push
add
fs
xlat
mov
sbb
xor
cltd
adc
clc
shll
xor
call
es
inc
ljmp
mov
call
stos
lds
and
sub
jge
xor
mov
es
loop
cmpsl
push
ja
outsb
pop
out
add
jb
or
cltd
repz
or
mov
fnstenv
push
sti
stos
xchg
xchg
inc
outsb
jb
xchg
mov
rol
repnz
stos
pop
divl
cmp
sub
in
sarl
imul
jbe
pop
repnz
xchg
lret
mov
push
inc
mov
mov
and
fisttpl
mov
and
jns
pushf
js
xchg
in
addl
fwait
adc
rclb
inc
rolb
mov
in
lods
rcrl
push
push
add
in
enter
pop
sbb
ss
out
fdivl
das
movaps
add
fisubs
aaa
jp
adc
leave
cs
loop
test
jno
shll
add
mov
cmp
stos
movsb
lret
out
xchg
shll
jle
jge
imul
in
popf
xchg
xchg
lea
pushf
outsb
pop
dec
int3
push
dec
cmp
enter
mov
sbb
popa
mov
lods
sub
push
leave
dec
adcb
and
pop
rcl
mov
sbb
adc
dec
dec
in
sahf
mov
xchg
xor
aad
mov
fimull
icebp
ljmp
jns
popa
sub
int3
mov
push
int3
cltd
xor
pop
stc
daa
scas
mov
mov
je
outsl
xchg
lahf
fdiv
out
mov
sub
xlat
mov
sub
pop
sahf
mull
cwtl
adc
lea
push
cmpsl
xchg
push
lret
fisubrl
rorb
sbb
out
xchg
adc
sahf
and
pop
jecxz
or
loopne
jecxz
imul
repz
aad
xrelease
out
cltd
shll
out
cmp
mov
subb
and
ja
adc
outsb
sbb
enter
pop
mov
divb
sub
cltd
out
jb
cmp
fwait
mov
or
mov
movsl
push
xor
cmpsb
ljmp
fistps
sub
mov
gs
addr16
sbb
btr
sub
jae
lds
add
jnp
roll
pop
dec
push
mov
xchg
popf
clc
gs
push
cmp
pop
inc
scas
aad
dec
je
andb
imul
mov
pop
mov
cmp
js
test
cld
push
aas
out
jbe
imul
jne
mov
or
in
bound
out
ss
scas
xor
pop
sub
pop
rclb
dec
inc
cs
loope
mov
dec
mov
scas
inc
pop
sub
inc
and
js
mov
xor
adc
cmp
jbe
pop
aas
xor
and
push
sahf
lret
aas
inc
std
movsw
xchg
inc
and
insb
mov
out
aad
call
jmp
mov
std
jl
push
sbbb
sbb
xor
inc
xchg
test
fisubs
pop
pop
and
mov
std
leave
jae
mov
into
fisttpl
aaa
fs
scas
jle
out
fcmovnu
sub
ljmp
shll
lahf
mov
negl
xor
jl
mov
push
pop
negb
aad
sub
sbb
mov
jmp
into
jecxz
push
int3
and
loop
pop
imul
adc
popa
push
pop
cmc
pop
cli
in
das
xchg
xchg
insb
shrl
insl
insl
push
add
aas
dec
sbb
and
in
xor
add
xchg
fsubrs
xchg
ljmp
rol
cmp
arpl
push
dec
push
xchg
loopne
lret
vphaddbw
popa
daa
testb
mov
aaa
add
roll
rcrb
test
sbb
or
adc
sub
add
xchg
adc
or
mov
xchg
hlt
mov
pop
xlat
push
frstor
mov
aad
pop
pusha
in
shl
mov
pop
lahf
xor
mov
pop
cmp
mov
pushf
xchg
xor
test
push
jmp
pop
cmp
pusha
inc
fisubrs
add
or
ffreep
pop
cmp
push
daa
sbb
scas
pop
inc
repnz
lods
cld
icebp
sbb
mov
test
sub
xlat
or
xchg
rorb
scas
das
ljmp
push
adc
add
loop
stc
pushf
jle
xor
imul
pop
mov
das
push
jbe
pop
call
insl
sbb
repnz
arpl
cmpsl
enter
jl
mov
dec
das
addr16
ret
ret
scas
inc
sti
xchg
inc
cmp
cmp
mov
cs
push
push
inc
dec
fcoms
je
inc
mov
mov
daa
aam
fimull
aaa
inc
cli
dec
mov
lea
adc
push
arpl
ret
enter
xchg
sbb
jae
cltd
in
or
push
jl
jg
icebp
xor
stos
push
xchg
jb
xor
xchg
fwait
ss
cmp
iret
mov
xchg
xchg
xor
or
push
fwait
movsb
and
pop
xchg
lea
mov
rolb
negb
daa
lea
jo
rcr
cmc
dec
das
hlt
push
je
adc
test
or
mov
or
jae
jo
mov
leave
in
ret
nop
sbb
movsl
rorl
testl
popa
mov
and
ss
xchg
inc
sahf
fsub
sub
mov
idivl
pop
lods
shll
pushf
push
sbb
outsb
pop
pcmpgtw
lret
push
adc
xor
aaa
outsl
cld
push
in
push
leave
inc
icebp
pop
aas
ss
mov
mov
xor
aaa
shl
inc
shlb
push
jbe
scas
dec
into
sahf
mov
and
gs
or
mov
pop
push
ss
adc
sbb
or
inc
add
ss
es
stc
aad
out
xor
incb
fbld
aaa
out
jmp
mov
add
fsts
cli
out
pop
cmpsb
sub
inc
mov
and
dec
push
adc
adc
cwtl
enter
insb
dec
jnp
mov
out
mov
xchg
jecxz
stc
mov
cmpsl
mov
mov
or
xchg
xchg
inc
lahf
xchg
or
in
push
and
std
into
mov
dec
xchg
cltd
fdiv
orl
sbb
in
sarl
ss
int3
icebp
cmc
jecxz
lods
daa
add
testb
bound
push
sbb
and
inc
xor
cmp
js
add
filds
or
mov
mov
cmp
sbb
scas
xchg
push
int3
mov
push
rclb
mov
mov
push
popf
jbe
push
testb
shlb
movsl
roll
lahf
dec
mov
movsl
lahf
inc
shrl
lahf
out
into
insl
mov
xchg
scas
cmpsl
or
mull
pop
ret
fcmovne
stos
jnp
ss
fcoml
dec
xor
fistpll
loope
shrb
icebp
and
push
outsb
mov
cs
aad
jmp
icebp
movsl
xchg
je
enter
mov
pop
jp
pop
enter
pop
outsl
rcrl
cmp
pop
aad
mov
es
in
dec
or
cmp
or
dec
ficoml
and
push
mov
push
xchg
or
xchg
adc
pop
mov
jmp
sub
sub
outsb
in
repz
sub
push
adc
addr16
int
lods
psubsb
mov
mov
lods
xchg
mov
mov
dec
push
fisttpll
push
addl
push
sbb
cltd
sub
movsb
outsb
movsl
mov
dec
push
addr16
movsl
lahf
add
xchg
insl
stos
ljmp
js
subps
push
dec
fisubl
shr
roll
scas
fsubrs
pop
stos
loope
push
or
scas
outsl
cs
loop
xor
in
dec
mov
jbe
push
xchg
std
pop
lock
insb
pop
xor
mov
cmp
imul
testl
fwait
scas
add
sub
jge
dec
out
lahf
je
push
int
mov
out
push
popl
jo
sub
pop
dec
mov
lock
mov
mov
rclb
xchg
rol
jae
movsb
add
sti
cmp
out
pop
test
mov
and
adc
push
call
and
sbb
pusha
into
movsb
push
dec
xor
pop
mov
inc
cmpsb
roll
fisttpl
mov
mov
xor
jne
adc
mov
jae
cltd
xchg
mov
jmp
inc
cmpsb
in
jle
loope
adc
mov
mov
pop
push
das
xchg
mov
pusha
pop
cli
mov
fadds
int3
addb
mov
mov
cli
in
jg
xor
jl
xchg
xor
xlat
jmp
stos
ret
es
and
push
xlat
fcmovbe
shl
in
sar
aam
add
mov
push
in
mov
rorl
push
mov
xchg
insb
dec
movsb
imul
hlt
pusha
adc
xor
cmp
dec
dec
mov
cmp
and
push
dec
xchg
test
sub
push
sbb
in
movl
fwait
lds
inc
mov
dec
sub
cmp
sbb
daa
xchg
inc
xor
lahf
cwtl
ljmp
cld
push
and
mov
adc
cmp
mov
mov
xchg
cmp
and
das
out
dec
adc
xor
mov
inc
sbb
mov
sbb
iret
inc
mov
lods
sbb
mov
out
imul
inc
insb
add
iret
mov
xchg
leave
lcall
icebp
cmp
cmp
les
cmpsb
pop
mov
loope
out
mov
rclb
push
mov
mov
rol
je
ret
push
sbb
jns
cmp
dec
push
fbstp
out
in
mov
or
dec
sub
push
push
mov
movsb
outsl
pushf
sbb
ds
mov
prefetchw
mov
or
aad
andb
ss
push
dec
jno
push
add
adc
ja
arpl
xor
repz
out
testb
mov
scas
push
pop
insl
dec
lods
jne
mov
mov
cli
inc
jbe
shll
pop
mov
xorl
imulb
jne
inc
push
jl
sbb
jg
pop
mov
ja
lds
nop
mov
pushf
movsl
xor
and
jl
pop
push
jmp
clc
add
fs
push
mov
out
xchg
sub
imul
push
xchg
cmp
js
out
stc
or
sbb
lds
sub
push
ret
and
pop
push
mov
cmpsl
stc
pop
dec
mov
cmp
enter
pop
mov
daa
pop
mov
mov
es
testl
cli
mov
jl
popf
jl
test
add
pop
dec
xor
wrmsr
xchg
bswap
dec
jno
pop
cmp
dec
out
xchg
push
inc
andb
push
into
sub
dec
cmp
mov
pop
filds
fidivrl
mov
outsb
test
adc
sub
cmpsb
lock
icebp
pop
ffree
or
jb,pt
push
lock
ljmp
and
icebp
out
iret
mov
filds
dec
cmp
mov
ljmp
or
push
jl
fistpll
shll
ja
inc
mov
mov
inc
movsb
fs
inc
dec
xor
fs
out
or
pop
mov
mov
in
or
fstps
mov
and
mov
lcall
fnstcw
cwtl
adc
xchg
dec
out
arpl
rcrb
push
shll
mov
mov
ret
leave
and
fsubr
mov
ss
nop
cli
or
push
repnz
lock
adc
fbld
jb
dec
shrb
and
pop
cmp
xor
push
adc
fs
cld
inc
imul
bnd
lea
mov
das
test
hlt
ljmp
sub
mov
xchg
mov
add
popf
pop
xchg
push
cmp
lods
shlb
std
movb
xor
fwait
lds
pushf
aad
addb
xor
fists
mov
cmpb
sahf
xor
dec
mov
pop
mov
fnstenv
pop
fs
xor
add
loopne
and
pusha
sbb
dec
and
cmp
pop
into
out
adc
xchg
push
rol
xchg
cwtl
stc
push
dec
leave
cmpsb
and
inc
sub
pop
loopne
jle
adc
stos
mov
jo
sti
out
mov
imul
hlt
fcoml
arpl
add
pop
xlat
dec
andl
nop
ja
aad
fidivs
adc
sub
imul
cmp
lods
movsb
imul
inc
cmp
cmc
jno
movsl
outsb
cwtl
or
adc
or
mov
add
dec
xor
int3
popfw
decb
test
int3
fucomp
movsl
repnz
pop
pop
jg
sbb
sbb
lds
dec
mov
jnp
inc
outsb
push
cli
pop
imul
xchg
es
es
and
mov
mov
int3
lcall
cmpsb
addb
daa
lock
pop
cmp
jns
xchg
and
ljmp
push
std
gs
mov
addr16
test
ss
pop
hlt
lods
adc
test
push
fs
add
mov
sar
add
mov
imul
pop
repz
sub
inc
xchg
mov
mov
lahf
sarl
imul
mov
call
add
cmp
push
dec
adc
mov
es
inc
out
stos
pop
jo
movsl
and
lea
rcrl
rcrb
arpl
push
imul
pusha
sbb
mov
negl
movsb
in
fcomip
bound
xor
loopne
daa
xchg
fisubrl
and
lahf
mov
mov
xchg
pop
xchg
xor
cmpsl
es
cs
add
stos
andl
test
out
sahf
cmp
icebp
fildl
xchg
cltd
testb
jp
and
push
mov
gs
loope
sub
dec
rcl
xor
je
mov
xorb
lods
enter
xchg
icebp
push
jmp
test
pop
mov
out
add
xchg
out
aad
es
sub
test
andl
pop
dec
xor
out
lock
ret
outsl
cmp
inc
push
rcll
mov
mov
lods
sbb
mov
push
xchg
repz
mov
sub
das
cmpsb
ja
adc
xchg
divl
repz
add
mov
lcall
cmpb
jae
shll
add
int
xlat
aad
and
mov
mov
mov
inc
lahf
jns
push
loopne
mov
cmp
pop
jbe
cmp
push
adc
add
mov
mov
xchg
enter
dec
shl
push
pop
mov
jp
ljmp
xchg
lahf
in
inc
xchg
pop
cs
pop
stc
cmp
movsl
popa
pushf
lcall
xchg
iret
sub
sbb
xchg
js
jno
adc
xor
aam
push
cmpsl
test
cmp
popf
lock
sbb
lcall
sti
mov
and
movsb
inc
adcb
in
push
pusha
dec
iret
je
in
bound
jnp
jmp
orb
movsb
mov
push
inc
aas
sahf
daa
mov
pusha
adc
sbb
cld
mov
stos
jb
xchg
in
rcr
mov
xor
in
cmpsb
mov
mov
xchg
jle
daa
lcall
add
inc
mulps
pop
movsl
flds
jo
xchg
add
add
pop
push
mov
fs
mov
jecxz
nop
ret
gs
jne
cli
negl
mov
mov
mov
out
sub
mov
inc
adc
pop
fistpl
imul
aad
jne
and
mov
lods
sub
scas
mov
mov
push
shl
fucomp
add
movsb
ja
or
stos
push
ja
push
mov
dec
xor
into
and
insb
fwait
mov
mov
pop
movsb
jns
dec
lret
testl
lds
setb
mov
inc
inc
sbb
addr16
fcmovbe
xor
mov
xlat
das
in
ss
or
stc
inc
mov
push
aad
xchg
or
cli
push
mov
rclb
xor
adc
inc
popf
pop
add
gs
sub
fld1
ljmp
dec
mov
dec
cmpsb
mov
push
test
dec
and
pushf
xlat
out
jp
insb
lahf
jmp
push
movsb
xlat
test
in
mov
jmp
lret
mov
dec
adc
aam
nop
popf
repnz
mov
insb
pop
sub
daa
sbb
dec
jp
inc
lcall
mov
filds
in
cld
xchg
mov
int
xchg
cmpsb
cld
push
inc
popa
sahf
jg
or
aas
testl
call
xchg
mov
int3
xchg
sbb
fwait
mov
or
xchg
test
dec
out
popl
insl
add
jb
mov
jne
lock
jge
cmc
in
dec
addl
xlat
xor
shl
test
stc
jmp
sub
push
lock
push
int
sti
adc
rclb
push
ljmp
and
dec
ret
xor
xchg
xor
jno
cmc
mov
imul
adc
sti
xchg
addb
pause
push
cmp
dec
dec
pushf
outsb
mov
xchg
jle
inc
cld
adc
or
push
in
loopne
pminub
pop
and
mov
dec
mov
scas
xorb
pop
jae
scas
movsb
cmc
cli
test
out
movsb
adc
mov
mov
jg
repz
jmp
cmp
into
sbb
mov
mov
xchg
pushf
lea
cmp
test
jle
add
mov
inc
cmc
mov
pop
in
inc
into
insl
jbe
cld
xor
jp
sbb
bound
cmc
mov
add
jge
in
cmc
popf
fstp
fisubl
scas
repnz
mov
xchg
int
pop
repz
push
cli
cmpsl
or
loop
fldt
push
add
push
dec
sarl
or
test
fwait
in
sbb
dec
xchg
icebp
outsb
mov
or
adc
cs
cmpsb
or
fnstsw
movntps
sti
push
jns
or
push
dec
test
mov
mov
sub
outsb
cmp
push
int3
pop
mov
loop
inc
or
sbb
fs
fucom
call
xchg
pop
fwait
rcll
lods
in
fwait
into
in
dec
pop
sbb
imul
notl
stos
xchg
xchg
dec
xor
sub
shll
push
push
insl
lahf
leave
popa
or
inc
dec
pushf
pop
pop
sar
bsf
xchg
into
dec
test
imul
pop
mov
add
mov
push
flds
fadd
xchg
push
push
push
fs
xchg
xchg
mov
test
adc
add
movsb
test
in
bound
inc
lods
hlt
jmpw
inc
sti
loopne
movsl
pop
cmp
enter
mov
jp
out
jmp
shll
mov
shrb
cli
icebp
add
test
int
push
pusha
ds
push
mov
sar
dec
or
fildll
add
cld
inc
mov
add
stos
jp
jl
inc
and
pop
xchg
test
mov
and
mov
jb
cmp
fimull
sbb
or
scas
sbb
out
test
cmp
xchg
inc
adc
negb
lret
xchg
sarl
mov
std
aam
cld
aas
addr16
loope
imul
lods
jbe
push
andb
sub
add
mov
mov
call
mov
rorb
test
lret
jge
xorb
mov
leave
ja
cmp
xchg
dec
data16
xorl
test
jns
inc
mov
sbb
xchg
notb
sbb
lret
jmp
ret
outsl
das
dec
mov
scas
ljmp
jl
push
rcll
adc
adc
adc
xor
jo
push
stc
movsb
sub
ret
sub
xor
mov
cli
aam
xchg
push
xlat
sub
pop
pop
in
fsubrl
pop
dec
push
xchg
or
mov
pop
pop
fsin
add
outsb
scas
ljmp
movsb
cmpsb
xor
add
xor
pop
and
leave
jl
sbb
dec
cmp
mov
inc
lds
jmp
je
and
jb
dec
cmp
ds
xor
popa
cmp
cmp
es
test
popl
xchg
xchg
mov
fimull
xor
stc
jmp
push
jns
mov
inc
stc
mov
bound
lahf
mov
and
cltd
jecxz
testl
jle
bound
orb
dec
ljmp
idivl
ret
mov
fucomi
sub
pop
sbbl
xchg
cmp
jl
jo
in
pop
clc
stos
out
mov
mov
mov
scas
dec
mov
popa
push
xchg
mov
mov
mov
mov
mull
or
ret
cmp
jmp
or
jl
and
or
clc
divb
int3
xchg
or
hlt
test
repz
mov
lahf
xor
push
aam
jmp
sbb
mov
inc
fisttpl
mov
jno
scas
cmp
cmp
lods
enter
push
sahf
xor
clc
jns,pn
push
jle
sti
repnz
mov
lret
aas
add
inc
shlb
je
insb
or
push
rcll
inc
loope
in
out
jl
loop
imul
nop
les
test
iret
jb
lock
xchg
out
push
popf
add
lcall
jb
pusha
enter
rorb
jle
pop
jl
ret
mov
xor
or
pop
mov
xor
sub
sub
ret
jl
pop
mov
rcrl
test
xchg
xor
cwtl
lcall
imul
mov
lret
into
dec
cli
dec
inc
mov
or
xchg
into
and
mov
aad
comiss
jge
jbe
xor
mov
mov
xor
leave
in
cmp
lret
lret
inc
lret
fmull
add
hlt
inc
xor
mov
fwait
fwait
das
cmpsl
rclb
jg
xchg
xchg
fldl
sbb
cmp
inc
xorl
lock
jg
ficoms
jb
and
jne
out
arpl
mov
ss
ret
push
mov
jbe
aaa
int3
mov
sub
or
cmpsb
test
nop
repz
das
pop
add
je
mov
data16
call
add
dec
sbbl
or
insl
push
std
pop
loope
cmp
lcall
jnp
mov
outsl
xor
out
mov
xor
jg
pop
imul
adc
adc
mov
hlt
jmp
xor
clc
lcall
push
scas
outsb
sub
mov
push
jmp
xchg
xor
leave
cli
sub
jg
pop
shrl
jb
pop
adc
mov
rolb
in
mov
test
stos
or
stos
mov
xor
and
jecxz
xchg
fsubrl
loope
push
xchg
inc
jmp
jae
mov
clc
cld
adc
xlat
xlat
add
add
mov
xchg
add
inc
mov
mov
movsb
imul
or
jae
ficomps
dec
add
js
fldt
movsb
imul
dec
iret
pop
push
cmp
loopne
cmc
push
sub
stos
sub
push
out
cmpsb
adc
push
adc
add
and
das
or
pusha
sbb
push
add
ret
out
push
or
ret
fs
mov
jge
rcrb
jmp
push
jecxz
roll
and
dec
pop
pop
dec
fisttpl
cmpsb
dec
jo
add
aaa
data16
xchg
dec
and
scas
rcrl
mov
popa
shrl
adc
cs
cmp
cmp
mov
in
push
push
sbb
xchg
call
je
lods
arpl
dec
mov
in
adc
outsl
insb
andl
sbb
cmc
push
push
push
cli
cmp
sub
xchg
jle
jle
daa
add
shr
stc
ja
jnp
add
iret
into
aam
popf
js
cmp
ret
and
xor
and
pushf
cmp
popa
mov
xlat
stos
daa
dec
cmpsl
fisubs
test
out
sahf
inc
mov
mov
repnz
into
push
int
add
adc
pop
ret
inc
xor
or
or
mov
xchg
mov
loopne
or
xchg
in
lret
pop
mov
xor
xor
inc
movb
xor
test
xor
je
mov
lahf
aas
jge
xor
shll
out
jae
dec
cltd
jecxz
jp
lret
add
lcall
data16
ja
pop
int3
and
inc
jne
shrb
enter
dec
ljmp
fwait
mov
fldcw
mov
sub
call
lcall
pop
out
mov
cli
jecxz
inc
imul
cmp
adc
das
mov
rcl
test
push
pop
push
lret
pop
inc
push
pop
sub
push
stc
xchg
jle
jecxz
mov
mov
add
dec
add
sahf
mov
lods
and
call
arpl
cmp
int3
push
call
ja
fdivl
adc
add
mov
mov
aas
int
push
and
sbb
inc
mov
jno
mov
mov
xchg
push
stc
push
or
mov
mov
xor
push
add
stos
enter
cli
in
xor
or
in
dec
imul
repnz
aas
stc
stos
add
push
mov
int3
jae
sbb
fstp
pop
and
out
or
imul
cmc
ret
inc
sub
inc
movsl
fucomp
sub
pop
mov
pop
call
mov
shl
lcall
bound
dec
lods
jns
or
mov
scas
xor
jecxz
test
jb
repz
mov
outsl
nop
xchg
pushf
adc
inc
mov
inc
daa
out
in
adc
jno
or
fwait
adc
icebp
sbb
jno
adc
fucomp
shl
jb
xchg
data16
nop
shll
imul
sarl
or
cmp
mov
inc
lods
xlat
mov
jbe
pushf
dec
lcall
and
jbe
adc
adc
into
sahf
and
inc
loop
fcomps
pusha
jge
add
test
test
sub
std
les
mov
mov
aam
bound
repz
inc
sub
in
or
mov
cmpl
add
cmp
or
test
add
mov
ficoms
inc
scas
lcall
cltd
cmp
lea
aam
mov
fdivl
jge
cld
dec
aam
jle
dec
sub
mulb
insb
rcrb
lods
mov
cld
sub
mov
pop
lret
mov
jecxz
pop
xchg
mov
call
cmp
aas
test
mov
add
inc
xchg
add
or
and
jg
mov
xlat
mov
pop
adc
sub
outsb
ljmp
enter
cmp
mov
inc
bnd
fcomi
inc
lods
cmp
add
mov
sahf
imul
pushf
loopne
test
dec
mov
shrl
iret
out
mov
pop
sbb
push
idiv
mov
mov
es
push
lods
sub
bound
mov
mov
enter
insl
out
pop
push
mov
jnp
sarl
addb
xchg
mov
dec
repnz
and
sub
clc
lret
sbb
sbb
notb
fimuls
shll
inc
lret
lcall
mov
mov
hlt
adc
xor
and
pusha
aam
or
mov
pop
xchg
push
push
adc
sub
xor
inc
push
push
js
add
xlat
mov
dec
movsl
jbe
pop
cltd
mov
faddl
movsl
sub
jae
mov
divl
pushf
imul
bound
inc
or
dec
lods
out
mov
pop
jae
pop
gs
and
mov
incb
push
xchg
fisubrl
sbb
lea
pusha
adc
jp
pop
inc
mov
into
fbld
sti
dec
mov
pusha
es
aas
pop
addr16
adc
je
ja
out
and
jne
jb
cmc
jne
fadds
lahf
loopne
out
pop
inc
adcb
bound
xchg
insl
fs
out
outsb
add
mov
sub
adc
dec
insb
mov
push
subl
inc
repnz
fisttpl
jle
ljmp
xchg
dec
lahf
push
and
xchg
in
in
add
adc
scas
and
xchg
idivl
jnp
out
and
sarl
cmpsl
sbb
bound
xlat
push
jecxz
lret
pusha
clc
stc
mov
jmp
cmp
ss
or
test
ja
mov
xor
fbld
cmc
xor
inc
test
ja
push
jne
mov
xchg
mov
pop
pop
mov
inc
cmpsl
fistpll
cs
popa
pop
sahf
stc
pusha
xor
inc
sbb
fists
ljmp
cmpsb
daa
adc
fidivrl
test
mov
sti
mov
arpl
fwait
xor
je
fsubrl
ljmp
mov
out
in
out
xchg
fwait
push
das
jns
sbb
jne
stc
mov
dec
pop
repnz
jl
add
mov
cmpl
sub
dec
fwait
sub
int
repnz
xor
arpl
rcr
jns
mov
iret
jge
jno
repnz
sbb
in
mov
repnz
xchg
xchg
inc
cmpl
push
mov
loope
jl
mov
ds
mov
shlb
jb
iret
pushf
stos
mov
lods
lds
out
jmp
das
mov
gs
add
decl
mov
test
repz
xlat
int
inc
std
scas
sti
arpl
ret
sahf
movsl
cmp
dec
popa
push
push
jb
xlat
mov
dec
or
enter
ret
xor
jb
int3
sbb
out
add
das
and
testl
icebp
movsb
and
shll
push
nop
inc
mov
and
sti
je
lock
jp
jnp
mov
popf
cmpsb
pop
repnz
push
mov
das
mov
mov
nop
pop
push
pop
fcomps
jb
out
add
push
mov
pop
jno
push
push
loop
mov
push
and
sbb
mov
mov
mov
push
mov
inc
jno
fisubl
inc
es
push
ror
cmp
in
clc
in
xchg
inc
imul
push
mov
inc
jmp
out
test
and
mov
jge
sbb
ja
push
jbe
dec
sbb
and
fstpt
push
int3
adc
das
dec
jge
add
sahf
aad
mov
dec
aad
lods
cli
push
pop
jl
mov
mov
jecxz
cmpsb
movq
xchg
stos
arpl
jmp
mov
and
icebp
dec
xchg
jb
movups
subb
fdivrs
dec
jl
fldcw
test
aas
jae
pop
rcrb
adc
mov
inc
das
xor
jb
xor
fbstp
imul
das
jge
adc
sbb
loope
pop
rcll
push
ffree
pop
xchg
in
lods
int3
ret
pop
jge
scas
mov
adc
xchg
cmp
mov
sahf
inc
mov
and
inc
mov
roll
insb
subl
test
pop
ja
mov
clc
mov
fcomps
push
rclb
mov
mov
mov
push
or
adc
xchg
xor
push
les
sbbl
inc
and
scas
fisttps
inc
arpl
pusha
loopne
cs
xchg
addr16
test
mov
test
mov
sbb
test
in
add
fiadds
xchg
jl
cmp
push
and
mov
jle
push
adc
add
gs
inc
pop
mov
xchg
xchg
scas
aaa
fidivrl
mov
xchg
cltd
pop
cs
notb
xor
aaa
lock
adc
jnp
mov
mov
movb
sbb
std
pushf
sub
dec
popa
sub
popa
mov
jl
cwtl
dec
cmc
test
xor
out
ret
cwtl
jmp
xchg
test
pop
and
xor
ljmp
push
jb
shrb
adc
or
call
das
push
pop
xor
mov
push
imul
loop
stos
popf
or
gs
sbb
test
cmc
pop
push
fldenv
aam
cmp
mov
sbb
jp
ja
es
loop
mov
ret
or
sub
sbb
insb
add
mov
pop
or
add
jnp
push
test
in
pop
jne
icebp
scas
mov
push
inc
pop
lods
mov
xor
jne
mov
mov
push
mov
mov
les
ret
stc
and
xor
pop
dec
inc
imul
sbb
mov
jle
lods
aad
lcall
pop
xchg
jl
inc
fisubrs
mov
add
andb
in
sub
jmp
in
push
adc
decb
movsb
mov
xchg
aad
popa
xchg
sbb
cmp
pop
lods
mov
mov
and
ja
sub
dec
xchg
jns
push
insl
wrmsr
jl
out
inc
inc
cmp
flds
push
enter
les
pop
mov
movsl
outsb
stos
loopne
jbe
inc
sub
mov
lahf
scas
stc
xor
mov
mov
addl
popa
mov
bound
out
xor
mov
jmp
jne
iret
cmpsl
dec
ljmp
xor
sbb
adc
decb
jns
push
mov
shlb
cld
jne
push
hlt
push
xchg
or
out
outsl
jo
inc
cmp
test
stos
push
xor
sbb
mov
ffreep
pop
and
out
cmp
or
out
pop
pushf
or
dec
xchg
inc
inc
bound
ficomps
out
adc
or
std
mov
lcall
into
pop
addr16
pop
sub
cmp
mov
or
add
inc
shl
shl
jae
pop
sbbl
push
mov
or
mov
fstl
push
subl
cmp
xor
fcoms
adc
dec
mov
pop
dec
pop
jne
out
sbb
sub
inc
dec
out
in
add
psllq
lret
js
mulb
fwait
es
push
js
xor
subb
lret
push
fmuls
mov
jmp
mov
ret
jmp
xor
push
push
pop
and
lds
cs
push
rol
dec
inc
insb
out
divb
out
xor
ljmp
iret
cmp
mov
lods
das
aam
pop
fsts
dec
aaa
add
gs
gs
xor
call
push
mov
mov
sub
jmp
fwait
push
push
add
sub
cmc
push
dec
pop
cmp
fs
outsl
xlat
imul
pop
js
push
shrb
into
popf
pop
mov
jno
sahf
inc
pop
iret
enter
adc
fs
es
arpl
lds
add
mov
jne
cmp
leave
cwtl
popa
cs
push
imul
pop
pop
mov
cmpsb
in
rcrl
inc
add
jmp
std
push
sarb
iret
aam
out
mov
aad
pusha
out
xchg
jmp
jne
xor
dec
daa
gs
repnz
add
inc
mov
mov
pop
or
subb
pop
adc
push
add
iret
sbb
movsl
lds
jbe
mov
insb
inc
or
and
fst
pop
mov
xor
cmp
andl
jl
loopne
cli
pushf
lret
inc
subl
xchg
or
bound
cwtl
cld
mov
call
inc
sub
mov
ljmp
icebp
aad
push
sbb
adc
mov
inc
fsubrl
shlb
inc
sub
add
mov
mov
add
xchg
and
shl
out
into
cmp
dec
das
dec
cmp
lods
popf
int3
out
sbbb
testl
jbe
sbb
sub
jno
push
inc
and
sub
xchg
clc
out
and
mov
sbb
or
jne
pop
insb
inc
adc
xor
nop
les
mov
in
xlat
call
test
lahf
fwait
lahf
add
orl
dec
mov
stos
pop
xor
sbb
imul
xor
xor
data16
cmpsl
xor
rcrb
rorb
jecxz
push
xor
mov
inc
dec
push
jle
icebp
mov
test
in
iret
xor
iret
adc
xchg
jbe
scas
push
jbe
loop
sarl
jbe
push
mov
in
jae
pusha
adc
mov
lahf
adc
sbb
daa
and
pop
push
movsb
mov
out
add
outsl
xchg
mov
cmp
xor
push
aas
fnstcw
add
push
inc
and
push
sbb
imul
inc
sub
ljmp
xlat
jae
hlt
test
lret
add
or
adc
loopne
mov
test
adc
sarl
lock
daa
jne
sti
sbbl
ja
add
jle
add
ljmp
mov
in
dec
xlat
sti
pop
and
xchg
rcrb
mov
lret
imul
push
out
xlat
push
outsl
mov
add
icebp
inc
leave
add
jg
inc
and
sbb
and
xchg
fdivs
enter
jecxz
test
lods
ss
mov
mov
jb
dec
mov
pop
mov
sub
mov
push
les
mul
leave
stc
lret
adc
scas
mov
cmpsb
mov
into
sbb
dec
je
dec
pop
notb
movsl
pop
fwait
mov
pop
es
mov
loopne
dec
sahf
inc
pop
lahf
loope
rolb
shlb
gs
mov
rorb
not
aaa
jae
jg
in
ja
mov
lods
cli
lds
sahf
jle
rclb
out
jl
add
jecxz
sub
add
clc
sbb
loop
sub
or
lods
pop
cmp
pop
cmp
sti
mov
and
xlat
cmp
push
adc
xor
adc
dec
testb
cmp
or
push
pop
jne
scas
cmp
pop
lds
adc
push
popf
lret
sbb
in
outsb
fs
clc
sarb
test
les
or
and
xor
mov
mov
mov
rcr
addb
sbbl
mov
xchg
xchg
and
add
and
rorl
jno
fisttpl
sub
jl
mov
xor
dec
mov
pop
iret
adc
sub
ret
cmpsb
cmpb
stc
pop
mov
cmp
push
xor
loopne
jne
out
mov
pop
add
jbe
ror
jns
ss
stos
pusha
dec
sar
sub
inc
mov
jmp
iret
push
push
mov
lods
pop
mov
pop
push
outsl
pop
adc
cmpsb
mov
xor
ljmp
adcl
push
imulb
in
sbb
jb
je
pop
or
jl
pop
fwait
dec
gs
cmp
stos
movsb
insb
mov
lcall
xchg
fldenv
inc
push
mov
adc
mov
hlt
mov
lods
xchg
lahf
test
xor
cmp
scas
outsl
es
bound
sbb
fxch
gs
jb
xlat
cmp
push
lds
and
test
bound
xor
and
jno
std
js
mov
sbb
add
mov
les
xchg
insl
lds
add
add
xor
loope
jg
or
sar
push
outsl
lret
mov
pusha
repz
jge
dec
orb
fdivl
push
mov
mov
les
jns
je
leave
cld
push
pop
sarb
mov
sbb
push
sbb
pop
add
lret
stos
pop
mov
adc
xlat
scas
imul
inc
scas
lds
aas
sub
fists
xor
pop
cld
push
lds
inc
lret
ficoms
fstps
rclb
cltd
fwait
out
dec
out
jge
popa
push
into
lea
or
mov
jmp
sbb
mov
sahf
cs
test
cmp
jne
mov
test
cmc
push
jl
cs
es
arpl
fisttps
mov
adc
cmp
mov
dec
sahf
shlb
pusha
pop
pop
outsl
and
insl
loope
sub
aad
and
push
sti
dec
pop
pop
dec
mov
lock
movsb
and
xor
out
sbb
aam
mov
sub
mov
lock
je
rolb
pusha
and
jae
xorl
out
pop
inc
sub
add
cmpsl
cmpsb
test
dec
push
push
and
sbb
push
or
xor
sti
pop
mov
nop
sahf
lea
insb
dec
pop
test
and
mov
pop
fidivl
aam
adcl
or
cli
and
sarb
push
imul
rcrl
shrl
xor
rorl
shrb
call
xor
std
jp
push
push
sub
out
rclb
sub
sbbl
mov
and
fists
int3
rcrb
cmp
inc
jl
cli
into
pop
and
enter
or
push
icebp
int3
push
pop
insb
jle
xor
and
inc
push
xor
test
push
fcomps
and
subb
in
test
or
scas
lds
int
jmp
les
out
cmp
or
insl
fwait
jle
mov
push
jl
xchg
jge
out
xchg
dec
xor
mov
and
call
mov
push
add
mov
mov
addr16
pop
testl
js
pop
ds
sub
sub
cld
fsubrs
aad
mov
jnp
push
sti
cmc
in
push
ss
mov
sbb
test
insl
dec
dec
or
pop
pop
mov
fistl
jae
testb
jne
push
inc
mov
fcom
dec
or
xchg
sub
push
cltd
scas
adc
stc
and
dec
bswap
icebp
lret
xor
cmpsb
push
ja
enter
insb
adc
mov
lock
popl
subb
aas
add
or
ret
cltd
pop
pushf
out
xchg
push
fldt
xor
lahf
xor
mov
dec
pop
xchg
pop
aas
mov
add
xor
lods
sahf
frstor
cmpsl
cmpsl
push
les
pop
pop
das
insb
adc
jl
popa
mov
mov
addb
dec
aam
mov
test
sbb
fisubrs
mov
lahf
decl
sub
cmc
fs
push
mov
xchg
jb
int
xor
sub
adc
out
movsl
sub
ljmp
adc
ja
add
iret
or
jmp
or
adc
test
cmp
aaa
lock
in
cs
push
ja
call
pop
or
xor
int3
mov
test
imul
xor
pop
xor
xor
jns
dec
outsw
jnp
cwtl
pop
dec
mov
iret
and
xchg
cmp
sub
xor
xor
jle
lahf
call
test
xor
clc
adc
cltd
popf
or
mov
sub
repnz
jo
inc
mov
iret
test
or
mov
pop
sbb
pop
in
insb
sbb
ljmp
adc
rorl
xchg
popf
or
scas
cli
aaa
shlb
outsl
movsl
or
das
mov
or
xchg
jge
xor
adc
mov
insb
call
insl
xchg
push
xchg
popf
loope
pusha
mov
mov
xchg
andl
ret
sbb
and
pop
enter
pop
push
outsb
xchg
pushf
aas
mov
rcll
sti
jecxz
in
fdivrs
dec
fdivrs
mov
jo
mov
jg
mov
dec
fisubrs
outsb
or
jl
pusha
jb
lcall
mov
sub
mov
cli
popf
imul
mov
rcrb
mov
pop
leave
fnstcw
movsb
pop
clc
and
inc
pop
in
xchg
adc
push
jne
cmpsl
in
mov
pop
int
xor
mov
mov
dec
les
jp
push
and
mov
outsl
push
cmp
push
mov
subb
xchg
mov
pop
and
lret
mov
lods
fisttpll
mov
loopne
push
xor
sbb
lea
rorb
fwait
std
push
leave
xchg
and
sbb
aas
push
inc
jns
call
stos
dec
mov
aaa
shlb
or
mov
add
rcr
inc
scas
cmpsl
lds
push
lcall
lcall
cmp
add
iret
mov
lea
mull
add
mov
xor
aas
iret
jg
dec
jmp
mov
xchg
inc
xor
pop
stos
mov
add
inc
pop
loopne
stc
les
out
xchg
repnz
sbb
xchg
ljmp
add
test
pop
test
jb
adc
xchg
mov
cld
dec
test
push
repz
movsl
inc
sahf
fdivrs
add
jne
mov
sub
in
repz
adc
sub
pop
push
out
mov
fcmovnb
jle
daa
mov
into
push
pop
les
pop
test
popf
jle
pop
or
cli
mov
popl
into
add
mov
fs
fsub
and
xchg
clc
aas
out
ljmp
xchg
sahf
outsl
jne
pop
pushf
lahf
xor
mov
mov
pushf
iret
nop
or
int
mov
aaa
jbe
and
and
loope
mov
mov
xchg
dec
repz
out
push
in
flds
lea
mov
out
mov
lods
mov
sahf
les
mov
lret
std
push
repz
add
add
inc
std
arpl
add
in
adc
es
hlt
cli
insl
sub
jae
iret
dec
xor
out
sbb
and
cmp
jmp
sbb
mov
xchg
jbe
ss
pop
mov
adc
sub
jg
push
cmp
add
nop
pop
sub
out
push
push
lods
test
movsl
mov
jae
or
aas
sbbl
test
jmp
inc
jmp
add
fcoml
fcmovb
js
aas
dec
in
in
mov
mov
mov
aas
cmp
push
scas
in
dec
mov
std
mov
push
xchg
xor
dec
fcompl
adc
xchg
sbb
push
test
insl
pop
lods
xor
fbstp
and
jo
jne
fdivrs
data16
push
imul
xchg
add
loop
jl
das
add
adc
popa
pop
insl
popf
jmp
push
xchg
movsb
xchg
cli
sub
fadds
mov
push
lahf
push
repnz
and
cmp
cmp
sbb
xor
and
dec
pop
movsb
or
mov
lods
std
out
andb
sub
andl
ljmp
inc
icebp
sbb
sbb
movsl
pop
leave
loop,pn
repz
fcoml
out
mov
pop
gs
xchg
lea
cltd
pop
jnp
inc
insb
jl
sub
aam
cs
dec
shlb
or
push
addl
test
aad
inc
gs
inc
cltd
or
lcall
loopnew
push
pop
in
pop
jge
insb
mov
insb
cs
push
aaa
scas
pop
inc
lahf
mov
inc
imul
adc
add
repz
adc
dec
dec
or
enter
adc
ret
cltd
das
std
cmp
scas
dec
mov
data16
jo
dec
lret
push
lods
pop
sti
lods
jbe
push
xor
imul
jp
add
fstl
xchg
sbb
sub
test
mov
inc
push
fisubrs
xchg
insl
dec
cmpsb
test
mov
mov
dec
jns
cmp
fsubrl
cwtl
xchg
cmp
inc
push
add
test
pusha
xchg
dec
adc
jbe
mov
test
ss
sub
and
outsl
shlb
popf
ficomps
mulb
cmp
jmp
roll
dec
inc
fwait
imul
js
xor
lock
xor
out
iret
cli
mov
jp
push
cmpsl
or
lods
mov
jp
dec
ret
mov
adc
mov
and
sub
mov
push
nop
data16
push
filds
xlat
daa
jp
xor
dec
add
dec
mov
pop
jo
xchg
mov
gs
sbb
icebp
rcrl
xor
or
mov
dec
test
js
pop
lcall
jbe
add
ja
rcll
js
push
pop
mov
dec
mov
push
aas
icebp
clc
jno
aad
pop
popf
mov
fdivl
data16
inc
jg
push
sbbb
cmpsl
movb
push
in
sahf
mov
sbb
aas
popa
leave
mov
inc
mov
jle
fisubl
notl
fisubrs
sbb
mov
mov
mov
in
in
fs
dec
cmp
sbb
adc
cmp
mov
sub
mov
ficomps
push
cld
int
loope
jmp
xchg
mov
or
pop
test
push
push
add
lahf
pop
pop
mov
subb
jge
push
cmp
sub
shll
dec
cli
fcomps
insl
lock
or
pop
je
mov
dec
and
aaa
mov
mov
push
loop
jno
sub
pop
out
or
inc
data16
mov
push
mov
aam
repz
aad
fisttps
jno
loopne
hlt
pop
sbb
hlt
or
push
cmc
das
sbb
fstl
daa
ljmp
dec
fwait
sub
loop
call
jbe
ret
movsl
jo
out
scas
inc
push
lret
push
push
insl
ss
std
mov
test
dec
lock
mov
rcll
cld
pusha
lods
rcr
movsb
ljmp
rolb
cmc
mov
mov
mov
mov
and
sub
dec
gs
aam
mov
popa
push
int3
mov
mov
mov
mov
push
aad
rorb
mov
inc
popf
or
into
inc
lret
aaa
pop
cmp
test
mov
insl
jns
push
dec
ret
test
rorl
xchg
add
ds
mov
std
mov
es
pop
sub
pop
jae
and
inc
sbb
adc
fistpll
movsl
enter
andb
in
sbb
pusha
xor
clc
jge
xor
jo
lods
aam
mov
pop
movsl
push
jnp
cli
push
xor
xor
xor
in
push
fsubs
das
and
es
pop
or
fdivrs
int
inc
lret
mov
jecxz
and
add
jns
mov
in
sar
inc
loope
insb
lea
js
outsl
pop
fnsave
rcrl
jmp
push
lret
push
popa
cmc
pop
mov
fdivs
sbb
and
or
add
stos
push
testb
pop
leave
jge
cmpsl
ljmp
mov
loope
bound
or
jecxz
mov
inc
insl
mov
das
dec
outsl
sahf
and
dec
ret
xchg
mov
mov
subb
pop
xor
cmc
jg
imull
and
dec
fistps
and
dec
in
cmc
xchg
adc
pop
xchg
popf
or
xchg
mov
push
cmc
jge
mov
ja
push
pop
push
pop
jns
inc
push
push
mov
and
add
xchg
adc
or
dec
jae
insl
js
or
incb
sbbb
test
sbb
fdiv
jnp
cmpsl
movsb
pushaw
sti
lea
jl
lahf
and
pushf
push
repnz
add
xor
jl
cld
fstpt
repnz
push
mov
push
dec
or
mov
sub
shrl
xchg
popf
add
call
pushf
xlat
push
or
mov
rclb
adc
sbb
push
push
sbb
dec
or
aam
cmp
call
fistl
ja
inc
test
cmp
repnz
stos
sub
out
jle
orl
out
stos
mov
cwtl
xchg
loope
sub
sub
push
pop
mov
ljmp
lret
aaa
aaa
pop
int3
push
jl
cmpsl
cmpl
test
dec
inc
mov
and
fidivrl
add
add
jae
fdivrl
aad
mov
fs
sub
out
mov
roll
sub
jecxz
pop
xchg
cltd
push
repz
jl
adc
jo
lcall
xor
in
mov
fcoml
push
xchg
push
sub
dec
pop
add
lock
dec
mov
sahf
cmp
and
dec
aam
lret
lods
inc
sbb
push
aad
stc
enter
mov
cli
jo
sti
mov
cld
dec
sbb
xor
add
pop
sbb
fstpl
aas
jne
or
cmp
das
add
pop
jecxz
outsb
mov
pop
aad
or
daa
mov
pop
jmp
xchg
xchg
mov
jns
xchg
or
aad
add
repz
jbe
sub
mov
and
sarb
inc
popf
add
insb
cmpsb
out
and
inc
xchg
adc
fisubrl
cmpsl
das
xchg
lea
xor
jecxz
push
pusha
popf
js
sbb
aaa
stc
clc
gs
insb
mov
sbb
jle
xor
pop
popa
pushf
or
repnz
ljmp
out
jae
add
insl
add
dec
mov
pushf
bound
cwtl
cmpsb
aam
pop
pop
fnstenv
xchg
lods
cmp
aam
jb
sub
jle
shll
outsb
sarl
scas
sub
push
inc
and
daa
ljmp
mov
pop
xor
clc
dec
out
ficomps
push
mov
push
jp
cmp
pop
imul
lods
jle
or
add
lods
add
movsb
loope
js
insl
push
ja
jae
popf
adc
cs
mov
lods
xorl
mov
adcb
xchg
stos
jb
adc
xor
xchg
outsb
or
mov
cmpsl
int3
xor
xor
decb
or
add
imul
push
inc
stos
sahf
ljmp
jge
xor
int
adc
pop
mov
and
in
and
jae
xor
mov
or
or
ja
aas
out
daa
fcmovu
mov
mov
stos
xchg
xor
cmc
adc
cmpsb
dec
cmpsb
mov
sub
pusha
sbb
adc
scas
inc
ficompl
lahf
xor
dec
inc
xor
mov
push
jb
and
in
inc
leave
add
aas
iret
mov
cmpsl
lcall
loop
cmp
mov
push
jo
xchg
ja
mov
dec
inc
mov
repnz
nop
mov
lock
ret
ja
sbb
loop
test
mov
pop
dec
leave
out
and
cmp
dec
pop
push
rcll
lcall
cmp
movsb
xor
lret
pop
js
cmp
pop
cmpsl
roll
dec
sub
nop
mov
pop
push
ret
cltd
iret
ja
fwait
leave
push
cwtl
ret
push
and
mov
fcomps
mov
or
push
push
ret
dec
and
dec
sbb
dec
cwtl
pop
out
pop
pop
pop
stc
or
loope
push
loope
pop
jne
jg
std
xor
sub
mov
mov
adc
in
mov
mov
add
sbb
shrl
cmc
dec
inc
sub
fwait
mov
arpl
mov
cwtl
pop
test
fists
mov
insb
cwtl
sahf
out
and
hlt
xor
mov
shll
popa
testb
mov
es
push
loop
mov
in
addr16
mov
sub
insl
cmp
subb
xchg
mov
or
sbb
outsl
jmp
or
aam
add
lods
inc
sbb
xchg
aas
fsubl
or
arpl
dec
inc
mov
fwait
pop
xor
ror
pop
cmp
mov
int3
out
add
js
jns
sub
cmp
lock
gs
xor
jle
push
sub
xor
xchg
mov
or
sbb
int3
mov
add
lret
arpl
fcomps
not
sarb
bndldx
mov
dec
in
sbb
sub
iret
sbb
mov
push
pop
pop
or
mov
mov
ret
dec
jne
mov
jbe
into
xor
pop
sbb
push
cwtl
mov
out
cwtl
iret
mov
repz
shrb
xchg
cltd
inc
mov
test
adc
jno
or
mov
in
imul
mov
push
pop
jmp
gs
xor
sbb
mov
sbb
jmp
sbb
sbb
movsl
pop
add
mov
sahf
ds
lahf
sbb
aas
add
lcall
lret
and
and
xchg
push
adc
xor
push
addr16
js
sub
sbbb
scas
xchg
std
popa
imull
sub
je
loope
movsl
sbb
test
mov
xorl
and
bound
xor
lods
sbb
sarb
adc
insb
aam
sub
xor
mov
pop
rcr
test
bound
lods
add
scas
lods
ljmp
into
mov
xor
mov
dec
lds
sbb
mov
fiadds
cmp
xchg
out
cmp
xlat
addl
mov
jae
xchg
xchg
adc
lds
addr16
mov
sub
repz
fildl
out
pop
sub
ret
sbb
lods
ja
xor
lret
cs
mov
inc
and
mov
leave
dec
inc
notb
adc
ror
test
call
pop
outsb
sbb
and
fidivl
pushf
fists
adc
das
clc
sub
jl
push
mov
mov
push
pop
lret
fsubrs
push
xchg
cltd
push
or
jge
dec
xchg
cmp
adc
mov
leave
mov
fsubs
cmc
fs
ficompl
sbb
pop
rcl
mov
out
aaa
outsl
jg
int
outsb
dec
addl
ret
cmc
sub
jl
out
jnp
mov
jecxz
test
int
insb
fs
ljmp
pusha
push
or
call
dec
cwtl
imul
aaa
inc
dec
fcoml
mov
pop
inc
or
xchg
scas
xchg
xchg
imul
das
lds
dec
sarl
rcr
jmp
push
adc
sbb
adc
dec
push
int3
in
orb
rolb
adc
jne
pusha
mov
inc
pop
in
push
mull
adc
pop
loope
stc
mov
mov
mov
repnz
nop
push
cmp
push
jb
in
faddl
aas
data16
mov
jl,pn
xor
mov
jo
addr16
mov
mov
out
fmull
jne
sbb
jo
jbe
or
push
cmp
add
pusha
ret
ret
sbb
xchg
dec
mov
and
loopne
shlb
cld
or
dec
xor
xlat
sub
sbb
xchg
push
push
ret
test
xchg
adc
int3
mov
cwtl
jnp
dec
mov
cmp
sbb
or
inc
inc
add
pop
or
xchg
add
scas
nop
outsb
fidivrs
js
xchg
popf
sub
sbb
xor
mov
xorl
cmp
xorl
mov
push
mov
jmp
dec
mov
xchg
stos
out
jae
cs
inc
jns
or
xchg
sub
mov
push
lcall
mov
mov
rcl
dec
and
pop
cmpsb
gs
rcr
add
inc
sbb
and
adc
mov
mov
hlt
iret
push
test
in
sbb
out
push
ja
insl
stos
clc
in
int
xor
xchg
xchg
jle
push
icebp
cs
in
jg
cmp
flds
into
jae
out
jns
popa
adc
mov
sub
icebp
out
adc
dec
orl
mov
outsl
aad
js
stos
mov
ja
mov
xchg
jae
and
xchg
inc
add
pop
rorb
lahf
sub
daa
add
jle
pop
orb
les
push
shl
imul
add
and
add
outsl
orb
aad
or
mov
in
or
ja
push
or
dec
lods
or
test
push
inc
sarl
or
inc
int
sbb
sub
movsb
jbe
push
and
push
mov
xchg
xchg
mov
popf
in
jae
test
out
aam
xor
mov
push
pop
lods
push
es
or
repnz
sub
jbe
mov
cmp
xchg
sbb
hlt
push
dec
imul
lock
mov
push
xor
sub
lahf
push
fwait
xchg
arpl
inc
cmpsl
adc
pusha
or
fucomi
mov
lods
xor
lahf
or
test
mov
inc
xchg
jge
adc
mov
pop
lea
sbb
mov
cmpsl
sbb
sub
test
push
gs
out
pushf
xor
scas
xchg
and
outsb
sbb
dec
repnz
xchg
enter
cs
addr16
inc
add
cmpsb
cmp
mov
mov
cmp
dec
jge
iret
scas
repnz
dec
subl
cmp
mov
ja
cmc
jo
and
cmp
push
loop
jp
push
mov
loopne
and
call
fwait
je
enter
imul
roll
ljmp
pop
mov
jne
sbb
fldl
dec
xchg
fdivrl
fnstenv
fsubs
dec
add
aam
or
pop
shll
and
lds
in
imul
out
sbb
sub
orl
push
js
stos
or
xor
idiv
pop
idivl
lret
in
in
ljmp
and
mov
fwait
inc
dec
fbld
dec
cmp
dec
pop
mov
pop
call
xor
jo
hlt
rclb
sub
in
int3
jne
jnp
stos
sahf
jbe
adc
jo
or
pop
mov
decb
or
jmp
cld
in
adc
ret
and
fwait
sbb
jp
loopne
mov
ror
lods
sti
mov
sbb
xlat
loopne
and
jge
pop
daa
popf
sub
xchg
call
sbb
ret
in
cmp
pop
push
xor
jecxz
aaa
adc
xchg
adc
je
and
or
ljmp
in
xor
in
pop
gs
lods
sbb
mov
push
jo
xchg
js
push
imul
into
lahf
adc
jb
and
scas
adc
mov
ljmp
push
cld
or
mov
ret
mov
inc
repnz
loope
pop
xor
pop
inc
dec
or
push
subl
inc
or
inc
ret
imul
adcl
gs
sbb
add
sarb
pop
mov
push
adc
adc
xchg
mov
je
loopne
add
add
mov
inc
pop
cmpps
adc
sbb
int3
jae
lock
imul
xor
lods
lock
xor
pop
in
aam
mov
jb
cltd
enter
inc
popa
cs
scas
jo
pop
dec
cltd
push
clc
or
decb
adc
mov
je
jle
push
push
mov
pop
inc
adc
or
sub
mulb
mov
and
and
or
jl
push
adc
lret
into
jle
adc
jg
femms
xor
cmp
add
jmp
out
mov
adc
loopne
xor
das
neg
loopne
fmul
mov
or
fisubl
js
cli
inc
jmp
xchg
ds
mov
std
iret
popa
jg
ljmp
lods
and
jle
mov
adc
cmc
lea
add
push
out
jecxz
cmc
test
sub
in
xchg
mov
iret
cmp
fiadds
movl
scas
gs
out
rcll
test
mov
fcmovu
gs
pop
push
adc
jns
jl
mov
test
popf
inc
mov
sub
push
jg
cs
pop
mov
adc
xor
popf
test
pop
and
jb
fbstp
enter
outsl
sahf
imul
aas
push
push
mov
push
es
add
adc
dec
or
xchg
pop
adc
or
aam
int3
xchg
cwtl
and
sub
pop
sub
and
stos
jnp
pop
les
repnz
aaa
inc
test
cmp
pop
jo
aaa
adc
aad
adc
outsb
lods
repnz
or
fs
jle
jo
pop
or
fadd
jl
xchg
and
dec
jo
addr16
das
cmp
mov
das
fimuls
arpl
dec
and
add
xchg
sbb
outsl
ret
and
cmp
cmpsl
add
or
fiaddl
mov
ljmp
xor
xchg
xor
mov
test
in
push
cmp
xor
repz
icebp
roll
pop
mov
mov
and
add
lock
or
scas
movsb
outsb
sub
aaa
popf
lret
push
lods
add
cs
cmp
cmpsb
push
or
or
adc
xchg
popf
cli
test
ud2
les
inc
xlat
pop
daa
xor
push
leave
dec
cs
scas
cmp
arpl
cmp
dec
fnstsw
or
push
jo
inc
mov
rorl
mov
aad
cli
xchg
fs
js
aaa
iret
mov
mov
or
ficompl
adc
ja
pop
call
jae
mov
rorl
test
les
add
sbb
jl
fbld
cs
fcomps
jecxz
sub
mov
push
sbb
add
js
sbb
xchg
fsubrs
add
sbb
or
mov
add
nop
jne
cmp
fdivl
cmp
dec
lret
inc
ja
mov
enter
add
scas
dec
xchg
mov
sub
fsubrl
sub
mov
mov
mov
fildl
add
lahf
jle
push
and
dec
movsb
repnz
and
iret
mov
jp
hlt
jae
out
cld
adc
push
into
xchg
lods
jl
sti
push
loop
xchg
les
lock
push
lds
lods
ret
arpl
subl
lds
into
pop
cs
mov
xor
repnz
push
mov
mov
mov
aam
in
movsb
pop
adc
push
sub
movsl
mov
cmp
cmp
or
jmp
in
push
mov
stc
jge
inc
icebp
add
or
inc
jmp
or
adc
and
mov
cmp
sub
sub
jp
loop
sub
push
insb
cmp
xchg
mov
js
or
jmp
daa
dec
call
leave
pop
mov
mov
rorb
sar
or
and
out
xor
mov
xchg
jo
xchg
cmp
insl
push
loop
cmp
enter
js
mov
jge
pop
outsb
pusha
inc
and
or
push
popl
loope
loopne
enter
aam
iret
fbstp
pop
mov
decl
leave
or
or
mov
and
xchg
popf
fidivl
mov
jbe
mov
ds
fwait
sti
sqrtps
arpl
repnz
mov
and
add
push
aad
jp
testb
pop
out
mov
pushf
adc
sbb
push
add
ss
fcomps
mov
push
jbe
cmpsl
lods
repnz
pop
cmp
in
cmpsb
in
jne
dec
and
add
mov
and
push
mov
jnp
enter
aaa
int
mov
into
mov
cwtl
inc
pop
mov
mov
js
mov
loope
clc
inc
shlb
lcall
inc
push
sarl
mov
and
loopne
or
leave
lds
fisubrl
mov
jecxz
ss
mov
inc
lret
faddl
aaa
fbstp
xor
lock
std
jg
fstpl
ret
sub
cld
mov
jecxz
imul
repnz
lods
pop
add
repnz
or
cmp
aas
loopne
dec
das
lea
xchg
cmpsb
les
push
fldlg2
out
hlt
xor
subb
lods
xchg
mov
lods
pusha
push
ss
xchg
out
roll
sub
and
rcr
pop
pop
inc
sub
loopne
xor
jae
arpl
pop
jbe
inc
aaa
push
movsb
hlt
and
jae
repnz
push
jne
and
xlat
sbb
pusha
insl
mov
xchg
insb
cmp
mov
and
test
push
into
negl
loopne
mov
nop
push
add
test
cmpsl
hlt
nop
test
movsl
outsb
sub
sbb
jae
pushf
sbb
cltd
mov
push
mov
and
inc
popf
inc
sahf
sarb
inc
imul
and
sbb
imulb
inc
gs
sbb
nop
jb
fidivrl
sub
xor
mov
push
insb
mov
insb
int
xor
enter
cs
lret
jp
adc
jnp
add
xchg
lds
xorl
jno
hlt
adc
sbb
cli
inc
leave
popf
xor
xor
ficoml
mov
insb
sti
pop
pop
inc
push
push
rolb
add
outsb
adc
jecxz
addl
mov
dec
pop
xor
ret
out
outsl
dec
jge
pop
dec
sti
movsb
bound
iret
pop
test
out
xchg
aad
add
push
push
dec
aaa
lahf
add
ret
shr
test
in
lret
sbb
mov
mov
pushf
adc
jg
jmp
jnp
stc
mov
in
in
sbb
xchg
xchg
cmp
mov
test
jmp
stc
repnz
adc
lcall
in
enter
lret
mov
adc
push
cmp
sub
mov
sub
shll
mov
xchg
negb
jl
insb
clc
das
clc
cmp
push
pop
out
jge
or
xchg
sbb
nop
test
and
sbb
and
push
jp
das
inc
mov
ret
hlt
add
jae
mov
out
jbe
popf
jle
add
imul
mov
mov
mov
mov
xor
mov
dec
jns
adc
pushf
movsl
lds
stos
cmp
test
sbb
sub
push
xlat
out
aaa
sub
jp
jne
sub
in
imul
cmc
mov
mov
or
mov
mov
loop
imul
dec
cmc
jecxz
pop
es
popa
test
or
mov
test
pusha
hlt
es
imul
fadds
fdivrl
mov
xchg
loope
push
daa
test
jecxz
stos
leave
movsl
stos
pop
pop
xchg
std
clc
pop
or
add
out
repz
mov
sub
addr16
add
pop
add
cmpsl
mull
pop
adc
sbb
iret
mov
inc
sbb
xchg
pop
or
jl
push
das
pop
mov
mov
ljmp
cmc
mov
mov
imul
or
add
xchg
out
es
jno
jbe
dec
adc
push
out
shlb
icebp
xor
scas
out
scas
xor
push
rolb
or
mov
pop
jmp
lods
es
lods
add
aad
jle
pop
sub
xor
aas
xchg
cmpsb
inc
xchg
mov
cs
mov
mov
outsb
jae
xor
inc
fst
push
idiv
mov
jae
test
mulb
cmp
pop
inc
mov
jae
push
add
or
test
or
ds
cmp
mov
insb
lcall
fistpl
push
push
lds
out
movsb
pop
cmc
shrb
lret
sbb
lods
lods
cmc
addr16
test
add
and
addb
test
test
cmp
push
cmp
pushf
shll
sub
paddsb
fiaddl
push
push
inc
test
lahf
mov
out
lock
scas
push
imul
jmp
insb
imul
xchg
jp
xor
inc
insl
push
outsl
push
push
xor
mov
push
out
filds
repnz
lea
mov
imul
sub
jbe
push
pop
bnd
xchg
aas
sbb
cwtl
andb
jns
dec
sbb
adc
pop
das
jne
mov
jg
bound
adc
dec
lock
or
dec
lock
inc
lods
aaa
lretw
nop
imul
pusha
or
sub
dec
test
std
cld
mov
push
js
push
cltd
orl
int
leave
sbb
shl
xor
int3
mov
fs
outsl
mov
stos
add
rol
fs
jl
jno
dec
iret
adc
pushf
imul
mov
cmp
subb
rclb
add
push
fcmovnu
xor
mov
pop
gs
jmp
outsb
sub
pop
roll
push
les
cmp
lahf
mov
inc
je
xchg
and
inc
fdiv
lret
lds
aas
mov
aad
rorl
pop
pop
or
xor
adc
xor
mov
iret
setae
pop
sbbl
pop
sbb
sbb
cmpsb
mov
add
cmpsl
shll
mov
xchg
cwtl
scas
jo
xor
pop
sbb
xchg
fistl
outsl
jl
shrb
or
clc
cld
cmpsl
aam
jp
push
mov
dec
dec
rcpps
loopne
jp
dec
outsl
lock
or
mov
aam
mov
inc
fdiv
xchg
dec
xchg
lret
popf
rcll
inc
dec
jne
xchg
imulb
icebp
mov
arpl
xchg
push
pop
jl
lea
pop
ret
out
jbe
mov
gs
mov
push
mov
inc
pop
pop
pop
lea
cmp
inc
cltd
gs
mov
int
fstpt
push
lret
dec
xchg
inc
dec
xchg
insb
ret
cmp
and
mov
sbb
dec
push
xlat
lahf
clc
into
aas
mov
mov
adc
and
mov
aas
mov
mov
dec
imul
adc
adc
xchg
mov
and
mov
rcrb
lds
mov
or
and
jg
lcall
popf
movsb
stc
xchg
sbb
testb
mov
xor
lods
aaa
cmp
call
das
push
sbb
xor
jns
push
clc
jns
cmp
fstp
xor
leave
inc
jo
cmc
add
add
xlat
popf
gs
lea
cld
aad
jb
dec
pop
cld
jp
std
mov
cs
hlt
push
xchg
push
addr16
lds
sahf
div
adcl
and
rolb
jl
sub
inc
aaa
pop
mov
add
xchg
imul
insl
aad
and
push
sub
xor
push
imul
in
stos
push
les
sub
mov
jle,pn
stos
dec
mov
mov
or
jae
mov
cwtl
inc
into
clc
cmp
es
enter
mov
cwtl
call
pop
jo
lret
add
imul
xor
sub
sub
cmp
sbb
pushl
push
popa
inc
lock
xlat
xchg
cmp
cli
fcom
jae
mov
jle
dec
jg
cld
shlb
fnstcw
movb
mov
inc
out
hlt
and
add
mov
push
je
sub
xor
icebp
or
scas
mov
lea
fiaddl
arpl
fldl
cwtl
mov
jns
dec
fcomps
lods
int3
xchg
pusha
loop
mov
xchg
sbb
push
out
cmp
add
fmul
mov
adc
inc
adc
enter
push
sub
int3
or
pop
pop
stos
push
push
sbb
mov
call
scas
stc
sahf
cwtl
xchg
enter
inc
cmp
out
aad
mov
xchg
add
shlb
cwtl
adc
jmp
pop
fiaddl
inc
loopne
repz
dec
xor
push
in
stc
aas
leave
cmp
dec
push
mov
mov
and
adc
popa
repnz
cmpsb
sub
adc
push
subb
sahf
xchg
dec
jecxz
adc
fldenv
cs
mov
bound
push
and
mov
inc
xchg
bound
or
int3
sbb
iret
outsb
jl
add
add
testb
mov
fwait
outsb
dec
in
xlat
aad
sbb
mov
nop
rep
ret
adc
mov
movsl
dec
test
stos
add
xlat
aaa
push
fdivs
mov
mov
or
inc
push
jmp
mov
out
or
es
xor
push
push
and
loope
scas
mov
ret
stc
daa
lret
sbb
hlt
xor
icebp
aam
out
xchg
mov
insb
repz
test
xor
jg
pop
xchg
rcrb
mov
repnz
mov
test
xchg
inc
add
test
mov
in
jns
mov
stc
fistpl
jecxz
add
daa
pop
sub
aad
inc
sub
int
push
sbb
mov
pop
push
out
clc
aas
cwtl
mov
push
sub
cld
ljmp
enter
icebp
out
out
das
adc
sub
movsl
sub
insl
push
mov
or
mov
or
jg
xlat
jp
in
in
lret
rcr
mov
jmp
mov
mov
in
xor
xchg
fldcw
ror
out
push
mov
ljmp
and
testl
or
es
jmp
adc
xorl
lret
add
mov
incb
cmp
mov
or
icebp
jmp
mov
sbb
icebp
repz
rolb
ljmp
cmp
dec
dec
push
jne
repz
outsl
mov
popf
mov
in
pop
fdivrs
push
add
jp
in
sub
js
jl
out
testb
inc
xchg
call
ss
mov
in
add
mov
imul
fimuls
out
mov
mov
aad
std
push
test
aam
insb
sarl
into
loop
inc
adc
aad
imul
ret
stos
loope
fcoml
xor
loop
sbb
push
push
push
popf
dec
sbb
dec
nop
push
or
jne
jbe
into
dec
jp
add
push
lods
popf
cmp
mov
insl
insl
fstps
xchg
or
scas
dec
scas
sti
jmp
divl
test
orb
cmp
dec
inc
adc
sti
loop
je
lahf
scas
iret
loope
mov
ret
and
imul
mov
lret
push
or
mov
loope
cwtl
stc
pushf
xor
push
hlt
jecxz
jecxz
lds
js
test
xchg
fcmove
in
stos
pop
jo
xor
aas
pushf
rcll
popa
jmp
test
inc
xchg
mov
xor
ja
or
icebp
pushf
sbb
mov
popl
imul
lret
divb
mov
xchg
daa
jns
test
push
rolb
xchg
std
adc
pop
mov
lahf
iret
fwait
das
jl
sbb
les
jg
mov
aad
mov
fcom
insb
xor
test
xchg
cwtl
inc
mov
data16
sub
imul
push
insl
sub
jp
js
cld
add
addr16
mov
insb
mov
sahf
mov
dec
cmp
mov
cld
std
clc
mov
pop
outsb
dec
or
cmc
sub
loop
clc
xorl
mov
js
inc
push
mov
jns
sub
add
xchg
pushf
lods
add
and
roll
icebp
push
jmp
push
cmp
nop
lods
inc
jg,pt
xor
push
enter
pop
mov
loopne
mov
push
mov
repz
jbe
xor
shrb
and
xor
inc
jo
les
pop
jae
and
repz
xchg
cltd
insb
sbb
negl
pop
mov
pop
sbb
sbb
pop
mov
dec
mov
mov
jae
mov
sbb
test
shl
cmp
jb
ds
loopne
cmpsb
int
ds
insb
addb
sti
stc
es
icebp
mov
jp
mov
push
je
cltd
jne
shr
push
out
rorb
loopne
push
adc
enter
es
test
pop
and
repnz
adc
push
sub
xchg
frstor
bound
mov
xor
jb
xor
pop
repnz
repz
sub
lcall
lea
dec
push
insb
fs
pop
xchg
lods
ds
push
add
jg
pop
pop
pop
sub
xor
popa
mov
testl
add
cmp
mov
sbb
jne
jnp
add
jg
cmp
dec
mov
mov
sar
clc
sbb
sti
push
add
fldenv
mov
es
mov
pop
xchg
pop
outsl
adc
int3
insl
jle
sub
add
test
cmp
insb
pop
daa
sbb
mov
daa
add
push
lock
push
add
add
ja
inc
in
mov
nop
dec
fwait
sbb
imul
out
or
sbb
test
js
pop
jns
mov
cmp
mov
mov
popa
sbb
mov
mov
push
or
fsubrl
add
fidivs
jo
xchg
adc
in
outsb
add
mov
sub
stos
xor
fwait
or
mov
dec
js
mov
pop
mov
je
popf
cmp
mov
sbb
cs
and
idivl
cmp
loopne
gs
sbb
jmp
mov
jp
in
push
loopne
fidivl
fwait
pop
cmp
rcll
xor
mov
out
mov
shll
mov
sub
aad
repz
sbb
daa
out
fcompl
mov
adc
and
leave
jle
pushf
fnstcw
stos
mov
push
fmul
push
jl
cltd
xchg
push
popf
xor
xchg
sahf
lock
add
and
fisubrs
jecxz
add
imul
test
shr
adc
sbb
pop
xchg
loopne
jmp
cmp
dec
or
mov
nop
aaa
subl
add
jmp
in
iret
fnstcw
jo
mov
popf
xchg
mov
ljmp
and
incl
decb
stos
fmull
test
rcrl
dec
in
orb
cmp
pop
fwait
ret
cli
popf
inc
xchg
xchg
adcl
or
add
inc
fxtract
mov
stos
hlt
add
or
dec
adc
mov
stos
or
aas
dec
jne
mov
mov
repz
jmp
xchg
aam
andb
push
dec
ret
lahf
sbb
in
jl
lods
lods
xor
mov
push
popa
cmc
pop
dec
jecxz
mov
roll
bound
lds
scas
dec
cmpsl
mov
sbb
loopne
jnp
cmp
popf
es
int3
jecxz
and
mov
imul
cmpsl
xor
jg
cltd
cmp
nop
or
sarb
pmuludq
fidivs
pushl
jb
sbb
das
insl
xchg
push
out
mov
scas
stos
sbb
cwtl
bound
adc
push
rcrb
aad
leave
stc
add
std
ja
push
js
aam
loopne
stc
into
fmull
movsb
leave
mov
jb
and
inc
inc
add
push
add
fisubrl
ficoml
or
cld
aaa
pop
adc
in
lret
xchg
sbb
mov
jmp
adc
sbb
sbb
mov
incl
push
dec
mov
push
decb
loop
add
imul
mov
xlat
cmp
jmp
xor
fsubrl
mov
shlb
push
shl
xor
xchg
pop
and
out
test
call
push
cmp
loop
sahf
sub
mov
fadds
in
push
cmp
in
ret
jns
mov
loop
lock
int3
aaa
push
xlat
xchg
fwait
popf
push
jns
inc
call
bnd
call
or
cmpsb
dec
cmp
fdivrp
jns
sahf
sub
sbb
out
adc
jp
in
adc
mov
out
jns
mov
sub
sahf
cmp
lds
scas
dec
in
and
xor
add
cmp
data16
push
inc
js
rcrl
jb
test
stos
int3
xor
xor
inc
mov
scas
pop
sti
push
in
insl
xor
clc
pusha
aad
insl
fwait
inc
call
push
movsb
pusha
dec
repz
std
mov
fwait
dec
ficoml
xchg
test
sub
lea
addr16
mov
gs
or
fcomip
or
sbb
mov
mov
inc
aad
mov
hlt
cmpsl
dec
orl
xorl
addr16
or
cli
popf
sbb
xchg
sub
add
fisttpl
in
push
pop
mov
fsts
push
enter
pop
mov
xchg
dec
mov
fnop
leave
sub
xlat
das
idivl
pop
sbb
cmp
or
call
stos
pop
push
push
int
xchg
cli
cltd
loop
mov
stc
mov
arpl
mov
shrl
and
mov
loopne
and
sbb
popw
cld
mov
mov
lgs
push
daa
jg
scas
xchg
mov
int
push
mov
dec
xchg
je
fsubl
inc
test
clc
mov
pushf
xor
out
arpl
pop
es
mov
addr16
lret
adc
jno
ficompl
popa
test
mov
mov
push
scas
hlt
popa
sbb
mov
sahf
push
popa
dec
mov
addr16
and
push
fwait
sarl
loope
xor
mov
jb
into
jp
add
ljmp
sbb
out
add
test
push
xor
xor
dec
adc
cmpsl
inc
xor
popa
loope
lret
xchg
fwait
sahf
popf
hlt
lods
movsl
and
dec
dec
inc
scas
xchg
xchg
or
outsb
cmp
in
fcmove
mov
ret
data16
imul
dec
jecxz
xor
imul
sbb
cmp
pop
rclb
jno
push
inc
nop
cmpsl
daa
fcmovbe
xchg
sub
xchg
jae
outsl
mov
sahf
sub
insb
push
xchg
lds
or
sub
adc
xchg
xchg
push
sub
mov
mov
ljmp
mov
js
orb
adc
shlb
pop
lcall
jo
push
int
repnz
test
test
leave
push
fildll
sbb
insb
test
sbb
push
into
push
mov
mov
add
sahf
inc
int3
cli
xlat
sbb
arpl
mov
dec
fadd
cmp
test
mov
insl
push
sbb
pushf
xlat
xchg
mov
out
inc
enter
out
sub
das
dec
xlat
jp
pop
sbb
data16
loop
addr16
cmp
pop
or
xor
inc
lock
aas
hlt
sub
xor
xor
clc
pop
hlt
fstpt
scas
mov
sub
test
stc
push
mov
nop
popa
movsl
jmp
jmp
push
mov
mov
xor
or
xor
xchg
mov
lods
adc
fsubrl
movsb
mov
mov
jbe
sbb
mov
int
push
push
scas
mov
mov
dec
jno
and
cmp
test
cmpsb
inc
loop
xchg
xor
lahf
fisttps
inc
in
push
mov
adcb
sti
popf
xor
mov
data16
orb
mov
push
xchg
bound
cmp
mov
or
cmp
and
push
mov
cmpsb
push
adc
jmp
push
imul
cmc
clc
notb
shll
mov
movsl
pop
data16
stc
mov
or
xor
stos
call
cmp
inc
pop
sti
add
aaa
scas
sbb
ss
ret
sbbb
popa
fldcw
push
imul
inc
lret
mov
push
jnp
aad
inc
cs
pop
into
hlt
popa
sub
xchg
jb
xor
push
add
or
mov
lds
mov
xchg
aam
scas
adc
lock
or
fcmovbe
insb
rclb
dec
jae
and
xchg
pop
inc
push
je
push
daa
clc
mov
sub
out
arpl
cmp
or
shr
and
pop
pop
sbb
jg
cmc
adc
aad
or
xor
xor
cmc
xchg
int3
add
push
mov
mov
fidivrl
pop
es
cmp
sub
mov
movsb
les
aad
lcall
fistpll
add
es
cmp
adc
aam
dec
es
pop
shll
add
dec
jo
xor
or
lods
adc
in
mov
in
dec
fcmovu
lock
mov
or
pop
xor
ja
push
or
in
push
rorl
push
add
fcoml
jbe
in
xor
dec
aad
push
inc
mov
mov
add
xchg
insl
stos
cmp
rolb
test
inc
insb
ret
jl
in
xchg
bnd
add
or
in
mov
out
addr16
clc
jp
stos
cmc
and
and
jae
dec
out
push
insb
dec
fdivrl
movsb
push
test
dec
jo
pop
repz
in
or
add
imul
test
push
mov
pop
sub
shrb
les
aas
fimull
and
lods
int
or
mov
scas
dec
ret
xchg
hlt
adc
push
xchg
sub
movsb
push
fcmove
subl
adc
sbb
push
cmpsb
or
pop
push
test
aam
sahf
add
mov
jge
cltd
aaa
cmp
shl
aaa
xchg
sbb
dec
aaa
arpl
xorl
xchg
sti
outsb
cmp
push
dec
jno
shlb
jge
inc
sbb
jo
icebp
adc
insb
stos
mov
sahf
movsl
pop
push
movsb
wbinvd
xchg
push
mov
mov
mov
sbb
and
pop
fs
push
xor
dec
outsb
xlat
mov
in
cs
inc
sahf
ss
pop
dec
jo
out
or
icebp
inc
pushf
test
int3
fsubrs
inc
movsl
jg
inc
xor
fwait
inc
pop
hlt
adc
jecxz
icebp
call
leave
inc
mov
loop
lds
adc
add
xlat
fisubs
fs
ljmp
xchg
jbe
adc
or
outsb
es
nop
cmp
adc
mov
roll
push
sub
mov
dec
pop
mov
push
lret
gs
jnp
inc
push
jg
hlt
or
and
push
or
mov
inc
mov
cltd
sbb
icebp
push
out
inc
outsb
dec
imull
or
mov
jg
push
mov
lret
jns
xor
jp
jo
mov
aaa
pop
mov
and
jmp
adc
std
mov
pop
adc
inc
sar
xchg
pop
jae
cmp
fisubrs
mov
out
je
es
mov
lahf
lock
imul
sub
push
and
jl
push
ja
or
sbb
and
std
mov
ret
mov
in
js
bound
dec
enter
jae
xchg
xchg
cmpsl
test
loope,pn
jg
insl
cwtl
and
and
fistps
inc
fldenv
leave
in
adc
out
or
cld
pop
sbb
cmp
add
mov
lock
sub
and
pop
and
push
rcrl
mov
movsb
and
cmp
dec
fcoms
lock
dec
aaa
fmuls
test
pop
sti
xchg
neg
inc
jne
loop
sahf
xchg
mov
xchg
push
mov
or
data16
in
popa
loop
jp
adc
pop
dec
hlt
mov
or
scas
js
xlat
jle
inc
pop
das
xchg
cmp
or
repnz
and
cli
insl
punpckhwd
jbe
push
addb
addr16
dec
loopne
mov
xchg
test
out
sub
stos
test
cmpsl
xchg
mov
dec
xor
jle
and
jns
rcll
fldcw
fdiv
jo
rclb
jecxz
bound
mov
testb
enter
ret
cmpsb
repnz
add
pushf
stos
aam
das
mov
push
mov
popf
cmp
or
jb
jecxz
xor
or
inc
leave
jge
xchg
fsubrl
fldpi
pop
enter
push
mov
scas
cld
xor
cmpsl
sub
je
stos
out
lcall
inc
fs
scas
jae
mov
fisubl
push
adc
inc
xor
inc
fisubl
stos
outsl
jp
lock
insb
cmpb
loopne
insb
or
adc
jo
scas
push
jmp
movsl
in
pusha
movsl
xor
adcb
pusha
pusha
ror
push
inc
mov
scas
sub
test
insl
pop
mov
mov
add
cmp
sub
and
mov
xor
jnp
inc
test
testb
mov
push
bound
pop
inc
and
sarb
das
mov
fucomp
cmpsl
loope
popa
and
and
jl
dec
jbe
out
ret
mov
cltd
mov
enter
mov
sbb
push
jg
push
arpl
rcrl
or
mov
mov
adc
aam
xchg
mov
dec
jmp
movq
or
sub
int
loopne
sbb
leave
mov
push
inc
data16
int3
mov
adc
mov
frndint
fistpl
popf
and
adc
enter
in
and
inc
mov
mov
pop
dec
push
add
xchg
mov
je
inc
nop
pop
aas
aad
arpl
mov
sbb
dec
add
and
mov
filds
pop
push
sbb
mov
push
xchg
loop
jmp
pop
xchg
jle
jp
cmp
adc
push
repnz
rcl
jmp
xchg
xchg
aam
pop
imul
iret
cli
mov
mov
mov
mov
stos
movsb
cmp
ljmp
pop
cmc
repz
in
push
out
movsl
xor
sar
sub
and
cmp
sahf
mov
imull
imulb
lret
in
xchg
fldcw
test
in
sub
gs
and
xor
or
fdiv
mov
dec
ds
mov
loope
adc
push
jle
sub
or
fbld
adc
jne
cmp
leave
icebp
sub
mov
push
sbb
sbb
ret
pop
mov
ss
or
lcall
movsl
loopne
sub
icebp
xor
fisttpl
add
adc
repz
icebp
push
movsl
sbb
dec
leave
pop
lods
sub
icebp
dec
roll
pusha
push
fcomps
mov
and
aam
repnz
pop
push
mov
add
pop
sub
add
lods
cwtl
pmaxub
lcall
jmp
cmp
lret
leave
das
jbe
mov
cli
es
dec
loopne
popf
mov
push
test
mov
sahf
push
inc
sbb
and
sbb
outsb
pop
lea
mov
sbb
dec
mov
mov
ss
xchg
insl
int
roll
pusha
inc
pop
pop
jns
in
adc
or
nop
push
test
mov
shlb
jae
or
add
pop
and
test
nop
ret
jp
cmp
cmp
enter
and
aad
in
outsb
imul
aad
iret
fcompp
ret
addb
jns
xor
popw
lret
aam
les
jnp
and
cltd
inc
stos
push
call
jno
pop
add
pusha
ja
inc
rol
out
shrb
jle
pop
fisubl
adc
in
pop
mov
add
and
fmull
stc
movsl
cmpsb
es
adc
push
mov
lock
add
test
mov
daa
mov
insb
lods
jne
stc
int
jmp
adc
gs
lock
es
mov
cmpsl
int3
push
adc
add
cmp
pop
clc
shr
ss
lahf
shrl
mov
insb
mov
xor
adc
inc
fs
mov
inc
ficompl
xor
test
add
popa
pop
xlat
imul
inc
in
mov
outsl
adc
in
push
shl
es
or
push
pop
jg
mov
lea
std
cmp
loopne
mov
mov
mov
inc
jae
mov
add
jno
test
pop
and
rcrl
inc
push
adcb
out
sbb
inc
in
mov
cs
pop
lahf
inc
arpl
sub
mov
sbb
pushf
push
in
dec
mov
gs
push
mov
repnz
ret
sub
xor
push
test
mov
inc
rorb
mov
popf
and
fildl
mov
dec
push
cmpb
xor
lock
mov
mov
sbb
ss
sti
sbb
mov
bound
test
add
pop
inc
xchg
pop
fmull
xor
and
lea
subb
push
sbb
test
test
insb
stos
das
mov
and
and
adc
or
add
xchg
movsb
cmp
inc
sub
jmp
ss
je
pusha
and
nop
scas
jne
insl
enter
lods
test
and
pop
xchg
sub
adc
mov
mov
push
pop
push
mov
dec
sbb
outsl
out
sub
pop
jecxz
in
sub
dec
insb
push
cli
rol
mov
xchg
outsl
push
jnp
repnz
insb
mov
leave
mov
push
cmp
in
out
ret
test
adc
xlat
mov
and
test
pop
in
out
dec
jp
pop
pushl
fldcw
ds
pop
sub
fistps
inc
inc
pop
lds
test
sub
jne
sub
gs
xor
hlt
nop
push
dec
pop
push
pushf
dec
hlt
popf
mov
fistps
aad
jg
sbb
mov
flds
in
sbb
sbb
xor
scas
into
fwait
inc
aam
lcall
jnp
pop
xchg
lahf
insb
jb
sti
sbb
in
mov
add
ljmp
mov
jns
int
addb
stc
mov
mov
lcall
push
sub
or
fisubrs
adc
jecxz
cmpsl
push
mov
jno
ret
adc
xchg
inc
rorb
dec
mov
dec
mov
decb
mov
test
shlb
cmp
nop
cld
movsb
mov
xor
cwtl
inc
arpl
cltd
jge
cmc
int3
jle
outsb
cwtl
out
stc
clc
hlt
sti
jle
shrb
mov
ja
push
sbb
jecxz
test
adc
inc
addb
inc
jo
jp
mov
insb
mov
xor
cmpsl
cmc
jl
push
dec
lcall
sbb
fcompl
sub
mov
test
cmp
or
out
stos
scas
mov
mov
insl
js
sub
aad
pop
mov
xlat
lods
shr
dec
ja
cmp
inc
sti
xlat
dec
xlat
xlat
pop
xchg
cmpsb
pop
lds
push
pop
xchg
dec
fucomp
in
mov
sahf
lods
fdivrs
fldt
mov
das
add
push
push
jmp
out
cmp
fists
sbb
push
insl
jle
jl
int3
test
fiaddl
mov
jp
fidivl
dec
add
int
or
lds
or
sbbb
add
fs
loope
inc
outsb
xchg
lock
fldenv
movsb
jo
aaa
movsl
xchg
pop
sti
jne
cmp
repz
mov
and
add
repz
xor
and
push
jp
mov
adcb
xchg
jns
leave
or
lock
into
dec
lods
lods
mov
sbb
movsb
and
stc
loop
pop
pop
add
lods
rorl
xor
mov
mov
add
movsb
mov
xor
movsl
push
xchg
stc
imul
sahf
sbb
loopne
leave
jb
xchg
sahf
mov
xor
inc
cmp
xchg
mov
push
insb
shrl
add
lds
push
push
mov
sub
fbld
cli
movsb
dec
and
jge
xchg
pop
out
add
outsl
xchg
sub
mov
clc
iret
aas
rcrl
dec
data16
addr16
pop
mov
jns
cs
repz
add
cltd
in
arpl
outsb
test
imul
imul
fwait
out
imul
mov
sti
outsl
cmpsb
dec
in
mov
stc
inc
shrl
and
dec
cmp
mov
cld
mov
enter
es
enter
mov
gs
sbbb
jl
jb
pop
xor
test
ja
or
mov
pusha
dec
xlat
or
add
mov
pop
and
mov
clc
xchg
xor
fldlg2
or
cmpsw
gs
mov
cwtl
in
jb
mov
push
mov
cmpsb
or
pop
test
and
cwtl
pop
jne
scas
outsb
iret
mov
scas
push
add
inc
cs
sbb
popf
xchg
mov
subl
pop
rcrl
xor
orb
sbb
lret
jmp
add
test
test
mov
sbb
adc
jmp
mov
out
jp
mov
cmp
push
mov
fs
jmp
mov
inc
mov
sahf
mov
call
popf
subb
mov
push
mov
jns
into
ret
xchg
cwtl
cmp
push
dec
imul
rcr
pusha
push
inc
and
add
leave
xchg
pop
cmp
dec
mov
mov
pop
call
xchg
pop
jmp
mov
loopne
imul
xchg
pop
movnti
mov
jmp
push
es
shlb
subl
xor
mov
sub
xor
mov
push
sub
mov
popa
add
cli
xchg
andb
out
inc
loop
cli
sub
push
ficoms
add
push
xchg
sbb
fcomip
out
and
cwtl
cltd
cli
inc
movsb
pop
cmpsl
dec
mov
mov
or
fwait
das
mov
xchg
lret
push
dec
idiv
mov
orb
pop
add
sub
cmp
cmpsb
out
mov
ss
xchg
dec
fsubrl
lods
ret
movsb
popf
dec
shrl
mov
lods
rorl
inc
mov
push
push
and
lds
sbb
rorl
push
xchg
lcall
negb
mov
mov
jbe
jge
jecxz
fiaddl
adc
jne
int3
dec
xchg
lcall
pushf
loope
mov
jecxz
inc
jnp
or
pop
push
mov
mov
jg
xor
or
stos
and
lcall
jmp
hlt
fdivp
cmp
mov
add
push
add
gs
inc
fwait
rol
mov
inc
imul
pop
inc
repnz
mov
daa
popa
jge
jns
mov
jl
dec
sbb
insl
sub
xor
int3
jge
cmpsl
adc
imul
sbb
dec
insb
and
cmpsb
xchg
test
scas
fwait
inc
mov
loopne
inc
scas
pusha
shll
loop
lods
dec
addr16
mov
scas
sub
sub
jmp
or
aaa
jge
addr16
ret
xchg
inc
popa
sub
jle
xor
or
out
mov
outsb
mov
jbe
pusha
and
loope
es
mov
and
sbb
stos
lock
stos
repnz
jns
fistpl
and
in
test
xchg
int
sbb
mov
jnp
repz
pusha
aaa
pmaxsw
jns
inc
xor
dec
mov
mov
dec
cld
js
ds
mov
insl
add
movsb
lds
mov
sub
into
add
cmp
inc
icebp
jnp
xor
pop
stc
xacquire
lea
fcoms
jge
cld
lret
sub
xor
out
out
cmpsl
je
stos
popa
sar
pop
dec
pop
mov
sub
mov
xor
movups
mov
dec
cmpsl
insl
stc
les
add
dec
xchg
inc
xor
push
and
repz
lods
cwtl
jle
cmp
push
jg
adc
xchg
loopne
mov
push
dec
xchg
and
mov
gs
sysenter
xor
fistpl
or
xchg
enter
push
aad
cs
adc
dec
loop
and
pop
push
data16
lcall
add
addb
std
lds
mov
jg
cmpsb
inc
dec
cmc
mov
cmp
add
dec
cltd
and
pop
ret
cmpsb
int
data16
jnp
orl
pop
push
lcall
and
loop
xchg
xchg
mov
dec
test
push
in
das
push
pop
mov
stc
adc
pop
xchg
adc
cld
push
in
in
das
popa
jo
bound
jp
andb
out
in
pop
cwtl
aam
xchg
push
jecxz
hlt
mov
mov
fistpl
cltd
sbbb
cmp
in
sub
inc
clc
jb
sar
std
xor
jno
cmc
xchg
adc
aaa
sub
cs
sub
lock
inc
lds
push
xchg
enter
and
xchg
inc
jae
cmpsb
push
loopne
sbb
push
cmp
std
rcll
in
in
mov
dec
into
lock
sub
sub
scas
int3
xchg
push
mov
inc
loopne
inc
adc
pop
push
pop
pushf
lahf
pop
jb
test
std
enter
adc
loopne
dec
mov
push
cli
mov
cmpsl
cmp
sub
fistps
xor
pop
sub
mov
and
sub
mov
mov
jmp
adc
test
insl
into
mov
jge
sbbl
arpl
and
mov
xorl
cmpsb
pushf
add
sub
pushf
and
scas
cmpsl
ss
lea
test
xchg
sahf
lahf
stos
mov
push
stc
mov
jle
lods
sti
mov
xchg
mov
inc
xchg
jl
rep
stos
push
sub
dec
push
aaa
mov
add
lods
aam
cli
add
ret
or
aas
es
fisttpl
mov
mov
les
ja
xchg
sbb
ja
mov
js
repnz
andb
xor
sbb
aaa
lods
sbb
push
nop
mov
js
lods
div
jecxz
push
cmp
decl
cmpsl
jge
add
xchg
inc
xchg
dec
inc
adcl
xor
xchg
push
push
pop
lock
adc
sbb
outsb
mov
inc
stc
dec
dec
in
stc
das
adc
incw
push
out
filds
cmpsb
sub
aam
in
in
and
out
loop
lcall
not
lds
movsl
sub
mov
add
mov
jecxz
inc
and
or
lea
loopne
outsl
xor
lret
jg
push
jp
dec
pop
andb
gs
dec
hlt
call
or
fdivrs
ret
cmp
sub
cmp
test
sbb
shrb
jmp
push
push
fildll
sti
jns
in
xor
sbb
mov
es
inc
aam
mov
push
out
and
stos
or
popl
ljmp
adc
jnp
mov
mov
sbb
adc
push
adc
paddsb
cld
lds
cs
shrl
out
add
dec
int3
add
and
arpl
outsb
pop
jg
and
shll
data16
mov
inc
ljmp
repnz
sti
cmpsw
add
fwait
push
fcmovnbe
push
sub
faddl
cld
dec
jmp
or
jno
jne
add
imul
data16
jae
xchg
xchg
imul
ret
jno
bound
stos
sahf
push
push
pop
subl
call
fisubl
mov
lock
dec
adc
into
data16
mov
sub
jge
inc
add
aad
test
insb
xchg
add
mov
or
fcompl
cmc
popf
outsl
insb
jo
jmp
cltd
pop
xchg
sahf
fdivrs
dec
nop
jbe
inc
jl
arpl
stc
and
adc
cmp
jae
and
jbe
dec
or
mov
push
mov
iret
mov
mov
cld
mov
dec
js
lock
cltd
sbb
aaa
cltd
scas
xor
insl
rol
mov
into
in
fwait
adc
xchg
gs
xchg
pop
in
repz
inc
repz
push
movsb
push
or
enter
jp
loopne
outsl
push
cmp
or
sbb
cli
add
push
adc
out
out
and
pusha
mov
fs
jl
dec
pop
scas
xchg
lds
pop
sub
call
and
xchg
pop
xchg
lahf
mov
inc
inc
je
jecxz
cmp
push
mov
mov
leave
inc
je
mov
and
in
jge
jns
outsl
insl
addr16
int3
aaa
and
je
jne
xchg
xor
jno
mov
iret
jg
pop
popa
sub
bound
mov
not
call
rcl
xchg
hlt
push
incb
nop
lea
jae
sub
js
mov
lret
sub
and
mov
sbb
cld
mov
adc
add
fmulp
fdivp
ds
dec
mov
sbb
pushf
xchg
mov
dec
enter
enter
orl
jge
pop
in
icebp
cli
push
push
dec
mov
in
push
outsl
cs
mov
int
push
xchg
mov
add
decb
sub
daa
adcl
dec
in
ret
cs
sub
inc
stos
sti
inc
sub
out
in
mov
jae
jae
mov
sub
daa
hlt
ds
repz
leave
in
dec
nop
dec
mov
loop
and
das
add
mov
mov
imul
xchg
outsl
cwtl
fisubrs
sub
xor
mov
fwait
jno
xor
push
nop
sbb
inc
imul
lret
push
sub
dec
test
fs
shrb
hlt
sub
lock
outsb
jp
add
mov
arpl
outsl
cmpsl
or
test
scas
aas
shlb
rcr
inc
movsb
sbb
cmp
jg
scas
arpl
or
sti
lods
add
jae
dec
mov
fstpt
pushf
rclb
fistpll
sbb
dec
and
stc
jns
push
lret
dec
xlat
inc
pop
add
cli
subl
test
and
inc
das
scas
push
jl
mov
movl
xor
or
mov
dec
mov
mov
fstpl
cltd
or
fistpll
xlat
inc
insb
dec
ret
mov
mov
inc
mov
clc
lock
aaa
xor
push
pop
inc
shlb
push
add
add
insb
pop
mov
insb
add
add
cmpsb
and
bound
pop
stc
xchg
jbe
out
pop
cmpsb
mov
cwtl
stos
inc
scas
aaa
fwait
and
push
cld
xor
push
xchg
push
mov
shlb
bound
mov
movsb
fiaddl
xchg
add
pushf
sub
inc
xchg
jne
cs
lock
fisubl
push
rcl
adc
xchg
orb
cmp
jp
mov
adc
pop
shll
push
xor
loope
pop
es
or
or
push
mov
lea
lret
push
push
or
and
and
dec
and
jmp
mov
mov
mov
or
add
dec
inc
rolb
push
or
inc
dec
cmp
sti
jl
insl
xchg
cmpsl
sub
mov
fs
pinsrw
out
arpl
xor
mov
add
push
push
cmp
pushf
popa
fbstp
push
in
or
jmp
xchg
ficomps
adc
push
iret
loop
js
into
movsb
sbb
jmp
adc
js
insl
outsl
jne
call
adc
cwtl
loopne
cmp
cmpb
xor
push
pop
clc
aaa
add
inc
xor
stos
mov
enter
jl
fisubrl
push
sub
test
mov
mov
add
pop
loopne
pushf
mov
pusha
jnp
add
or
movsl
js
dec
insb
jge
mov
icebp
mov
add
mov
aad
adc
push
outsb
cmp
xchg
loop
cs
xchg
les
mov
pushf
xor
rclb
push
cmp
mov
xchg
cmp
push
fidivl
add
inc
insl
lret
movsb
outsl
push
dec
sbb
inc
icebp
clc
in
xor
xor
push
sbb
push
mov
jno
xor
sbb
out
in
rcrl
jle
lock
popa
aad
sbbl
mov
dec
push
sbb
mov
and
popa
notl
lahf
jo
cmp
inc
jns
jmp
fistpll
outsl
push
insb
push
pop
fiadds
test
mov
lock
mov
aas
pop
js
inc
or
ds
cmp
aaa
nop
arpl
jne
lea
and
lods
and
mov
sbb
mov
and
cmp
xrelease
pop
cmp
mov
mov
mov
clc
icebp
sub
in
jg
adcb
add
pop
iret
mov
add
mov
sbb
pop
push
call
mov
inc
mov
and
xchg
add
xchg
cwtl
sbb
and
xor
insl
aad
insb
jnp
pop
push
xchg
dec
clc
fsubs
sub
sti
mov
sub
mov
mov
or
or
mov
cmpl
mov
cmp
mov
mov
sub
push
jle
das
xor
sbb
vpextrw
loop
in
xor
add
inc
lret
dec
dec
loope
test
and
cmp
out
xchg
mov
into
mov
or
roll
sahf
dec
aas
ss
flds
int3
or
jp
xchg
int3
xor
call
cli
sahf
cld
out
push
inc
dec
dec
xor
lds
xchg
adc
or
pop
xchg
jns
push
add
sub
or
add
pop
mov
sub
adc
clc
cwtl
mov
mov
pusha
mov
add
mov
lds
jne
outsb
sub
xor
add
mov
enter
mov
test
je
push
mov
js
in
mov
pop
mov
sub
sub
push
mov
ljmp
mov
inc
xor
xchg
jbe
push
gs
add
xchg
adc
push
mov
nop
mov
int
notb
lods
loope
cmp
rcl
int
mov
popa
fildl
btr
or
pushf
lret
add
push
test
test
mov
mov
mov
fs
sbb
add
and
sub
lcall
adc
or
ja
mov
add
pop
mov
and
fdiv
mov
movsl
std
pop
mov
xchg
and
popa
xor
mov
insl
push
rcrb
mov
xlat
stos
test
add
stos
jo
ds
aas
push
loopne
mov
leave
jno
in
insl
push
es
and
inc
pop
sbb
es
sbb
in
xorl
mov
push
dec
stos
cmpsl
fmul
xchg
popf
mov
out
pop
mov
inc
shll
bound
or
divb
icebp
and
je
daa
or
loope
out
imul
insb
mov
mov
dec
pop
aaa
jnp
and
cmp
mov
and
popa
mov
inc
fldt
sbb
lods
repnz
ds
pop
lret
mov
xor
jl
lea
jle
fsubl
xadd
and
out
mov
push
xchg
daa
jo
and
or
push
sbb
sahf
inc
push
ja
push
sbb
add
aad
fcomps
jnp
pop
enter
fimuls
leave
xchg
or
cmp
push
fisubs
add
cmpsb
cwtl
xchg
fwait
scas
int3
xchg
popa
js
jmp
adc
or
jge
into
loopne
pusha
dec
mov
sub
xchg
pop
ja
hlt
add
cmp
jae
stos
test
out
push
or
mov
es
jg
xchg
cmpl
int
leave
sbb
add
fldenv
pmaddwd
xor
sbb
mov
cli
adc
jb
repz
je
adc
les
sbb
les
adc
pusha
sub
xor
mov
jb
sub
fmull
xor
fidivrs
mov
mov
bound
or
lret
push
stc
int3
and
cmp
sar
imull
ss
leave
mov
fiaddl
dec
lahf
jle
jl
rcrl
bnd
push
test
xor
xor
cwtl
and
inc
insw
xchg
pop
jge
insl
out
daa
test
xor
out
add
xchg
enter
in
sub
inc
fisttpll
fldenv
mov
int
pop
jg
int
inc
cmp
jp
enter
lcall
pushf
sahf
or
pop
lcall
mov
cmpsl
jl
sub
jns
push
xor
mov
lock
push
pop
clc
cli
cmp
jmp
subb
adc
scas
jmp
dec
sub
ds
jnp
int3
xchg
cs
jmp
imul
and
dec
arpl
inc
lret
scas
mov
sbb
aaa
sub
repz
and
sarl
jns
or
pop
je
add
cltd
es
ret
push
addr16
xchg
pop
cs
sub
loope
imul
mov
jge
vpshlb
popf
stc
adc
std
add
pop
ss
push
sub
pop
xor
es
lods
mov
fsubl
mov
pop
mov
push
mov
pop
and
pop
adc
push
int
sub
sbb
xchg
daa
xchg
pushf
jp
testb
add
cmp
adc
loop
add
mov
icebp
jo
xlat
les
dec
dec
js
xchg
fistpl
push
push
adc
std
les
mov
mov
daa
pusha
push
ss
aas
outsl
fbld
jbe
aaa
sbb
lock
cmc
cmpsl
fs
or
jp
iret
out
test
les
mov
xchg
sub
outsl
inc
push
xor
inc
ljmp
xor
xchg
mov
outsl
sbb
sub
imul
cmpsl
add
loop
xchg
nop
sbb
addl
cmp
push
pop
test
pop
dec
addr16
and
xor
ja
dec
in
pop
push
inc
sarb
add
dec
loop
cmpsb
cltd
add
movsl
ds
cmpsb
jnp
and
call
test
lods
sub
mov
jecxz
int3
sub
cs
and
xor
xchg
daa
jb
mov
cmp
repz
pop
xor
movsl
pop
hlt
jns
xchg
sub
sbb
test
push
dec
repnz
int3
xchg
lds
push
inc
cmp
bound
ljmp
in
add
in
push
into
sbb
xchg
mov
sbbl
and
mov
ljmp
out
and
out
adc
and
push
push
mov
and
insl
cmp
fs
lds
sub
pop
xchg
aas
mov
aam
cld
fnstcw
std
addr16
fsubrs
loop
cmpsb
inc
addr16
cmp
jg
in
lret
out
mov
adc
int3
pop
aas
pop
loopne
je
inc
arpl
ficompl
sar
push
repnz
dec
xchg
in
jl
or
movsl
jp
cmp
pop
inc
cmpsl
mov
lods
das
cmp
push
gs
and
xlat
in
xchg
cmp
add
jae
jg
shrl
mov
cmp
push
inc
push
pop
pop
pop
push
lret
add
jl
aam
xor
insl
xor
push
adc
daa
das
mov
daa
dec
pop
ljmp
sub
jmp
adc
sbb
rcr
or
jnp
xor
mov
mov
jb
fistps
ja
mov
inc
ljmp
adc
mov
and
cmp
les
mov
fsubrl
fidivs
push
push
cmp
rcll
inc
iretw
fisubs
insb
repnz
mov
push
push
lods
in
mov
sub
sub
sub
jne
loopne
inc
lcall
dec
push
and
mov
fiadds
das
push
outsb
mov
xor
dec
xorl
pop
int3
push
inc
stc
adc
cmpsb
sti
aas
pop
fbld
xchg
xor
xlat
jecxz
sub
dec
xchg
iret
inc
inc
lods
and
fcmovb
jecxz
dec
ret
xor
fbld
mov
jecxz
mov
stc
mov
and
bound
cmp
outsb
enter
test
add
add
leave
lret
shl
add
in
repnz
stos
inc
mov
dec
adc
push
inc
fldl
jnp
mov
xchg
lods
int3
push
push
aad
rcl
mov
sbb
inc
sbb
cmp
test
ret
ret
out
popf
push
divb
repnz
cld
mov
fwait
dec
enter
dec
pop
mov
cltd
aaa
sub
repnz
adc
loope
jge
jecxz
pop
mov
xchg
imul
mov
mov
xchg
sbb
xlat
mov
scas
int
adc
pusha
fisttpl
push
mov
mov
mov
inc
iret
mov
jle
int3
fcomps
icebp
in
and
pop
mov
push
addr16
adc
inc
mov
push
or
test
lods
mov
test
and
mov
xchg
dec
dec
push
push
sti
in
hlt
mov
cmp
imul
mov
xchg
in
jne
loope
sub
push
adc
pop
push
bound
push
xor
or
add
sbb
mov
outsb
add
das
dec
pop
push
fdivrp
pop
pop
and
jae
sarl
add
adc
jge
lret
xchg
lea
cmpsb
cmp
insl
cmp
jg
fistl
sub
inc
xchg
aad
sbb
and
xchg
scas
and
sbb
insl
xchg
fs
jge
mov
mov
jge
and
jmp
push
pop
cmp
das
mov
adc
push
push
stos
xorps
ljmp
out
dec
and
add
xchg
mov
xor
jg
out
int
push
fistl
push
jmp
xchg
sbb
mov
jge
sub
pop
popa
shrb
jae
scas
mov
out
mov
inc
add
push
jne
test
das
xor
fdivrl
mov
xor
stos
inc
mov
cs
cmovg
ret
addr16
mov
scas
iret
xchg
push
sub
stos
ds
ror
xchg
and
movsb
jne
lret
mov
cmc
addr16
js
int3
push
mov
mov
pop
jmp
int3
imul
xor
into
xchg
mov
cld
mov
lcall
notb
inc
pop
mov
xor
scas
insb
or
cmp
scas
addb
and
scas
fcomp
pop
lret
or
push
sub
push
push
lahf
in
dec
dec
aam
mov
add
xchg
subb
jl
orb
push
mov
pop
stos
cmp
cli
mov
out
fchs
scas
mov
pushf
idiv
pop
fdivrl
nop
es
xchg
or
xor
push
fimull
dec
iret
inc
sub
push
and
int
ret
dec
push
gs
int
jns
out
hlt
push
pusha
jg
and
lcall
mov
mov
addl
fldt
clc
repz
repz
sbb
jo
pop
ljmp
mov
adc
in
or
loopne
daa
adc
cltd
inc
push
inc
enter
sahf
jns
cli
jne
int3
add
enter
iret
jl
cld
mov
cmc
mov
sub
aaa
pop
mov
scas
inc
dec
call
mov
arpl
imul
xor
push
out
lret
jnp
dec
dec
sub
jns
dec
adc
jnp
aam
gs
sub
push
enter
sub
push
xor
mov
jmp
jl
ds
or
popf
mov
xor
xor
stos
mov
sbbl
cmc
mov
rorb
and
ret
dec
jecxz
mov
outsl
push
add
mov
cmc
int
aas
cli
xchg
sub
lods
rolb
sar
cwtl
cmp
mov
pusha
in
add
outsl
mulb
int3
test
repnz
cmp
xchg
cs
jl
add
add
jecxz
das
xchg
mov
idivl
int
cmp
pop
hlt
sbb
imul
sub
gs
xchg
xor
movsl
cmp
jge
jl
data16
imull
roll
jne
pop
aas
push
call
sub
mov
fildll
jle
jb
xor
adc
movb
aaa
mov
fldln2
arpl
std
pop
mov
dec
cmp
popa
and
dec
xchg
jmp
rcll
shl
dec
dec
pop
xchg
int3
icebp
dec
mov
jno
sub
pop
inc
dec
popa
add
pop
clc
in
add
xchg
sub
sub
sahf
jle
mov
xchg
in
sbb
hlt
xrelease
dec
jae
sbb
sub
xchg
aam
pop
not
lods
mov
jg
xchg
lods
jp
les
fmull
sub
cmp
dec
outsb
mov
jl
sbb
lock
xor
les
sbb
pop
mov
xchg
lret
cld
mov
test
add
sub
jno
pushf
mov
scas
jo
lods
sub
push
adc
repz
cmp
sbb
es
cmp
cwtl
inc
test
pop
outsb
cmpsl
jnp
stc
aad
inc
mov
ljmp
xchg
pop
push
push
lret
in
ja
mov
rcrl
outsb
xchg
cmc
mov
xor
ret
repnz
shrb
cs
mov
cvtpi2ps
test
ret
in
sub
imul
push
jbe
in
or
std
inc
aas
adc
and
mov
sbb
in
adc
in
dec
push
mov
gs
rcll
arpl
push
lea
sub
pop
cmp
and
mov
insl
push
or
iret
sti
test
into
xor
adc
notb
and
pop
or
cmp
push
popa
mov
inc
add
sub
inc
xchg
inc
cmpl
inc
cmp
enter
aad
mov
clc
jp
jae
les
or
push
call
push
lea
adc
out
or
push
ret
xchg
or
in
adc
fxch
stc
les
int
jbe
cmpsb
lcall
lahf
xchg
sbb
sahf
inc
mov
inc
call
bound
xchg
push
rcl
push
in
mov
aad
add
out
lods
sub
mov
mov
lods
jns
in
mov
push
fistpl
jecxz
ret
ret
pop
inc
je
fimull
ds
inc
xor
das
outsl
adc
sahf
cmpsb
xor
or
stos
xlat
out
mov
sbb
adcb
and
test
negl
lahf
addr16
in
cwtl
test
imul
fst
inc
shlb
dec
lds
loop
mov
dec
cli
or
dec
or
mov
add
lock
imul
ds
inc
and
mov
test
mov
imul
mov
lods
adc
adc
mov
or
xchg
push
into
cmpsb
int3
ror
xchg
aam
mov
outsl
inc
movsl
jo
loope
out
mov
pop
fldl
mov
sbb
sbb
push
push
fs
xchg
add
ret
add
stos
addr16
jl
jmp
and
stc
pop
jmp
xor
push
xor
clc
pop
mov
fistl
cmpsl
aad
bound
fdivrl
xchg
sbb
rcrl
aad
stc
cmpsl
std
lahf
or
mov
mov
test
pop
dec
mov
inc
pop
push
cmc
scas
mov
or
out
jmp
into
pop
xchg
ja
mov
dec
aas
imul
sub
sub
jne
inc
scas
or
mov
jo
in
adc
xor
lret
ficomps
lcall
xchg
xchg
decl
sti
lret
mov
add
lods
mov
pop
hlt
enter
repnz
loope
inc
inc
mov
prefetch
or
repnz
or
dec
pop
or
jns
loopne
addr16
jae
mov
dec
push
jmp
aaa
xchg
mov
repnz
and
inc
or
sahf
mov
insl
xor
jmp
scas
xor
les
push
nop
and
mov
jb
cmp
test
lods
push
fsubr
cmp
and
fisubrl
fwait
test
mov
mov
mov
loope
cmp
testb
adc
imul
sub
xchg
cld
jns
mov
out
mov
iret
sub
pop
popa
add
push
scas
adc
cmp
rorb
in
xchg
leave
repnz
insb
sub
ficomps
dec
push
js
sbb
inc
or
push
ds
fldenv
xor
jb
mov
sub
jg
pop
pushfw
xchg
jb
xor
mov
xchg
or
xor
pop
xor
inc
mov
decb
adc
fbstp
lock
sbb
xlat
sub
ror
mov
subb
pop
lods
or
sti
out
aaa
sub
push
imul
push
sahf
mov
and
lahf
in
lcall
pop
mov
fcomp
inc
test
fsts
repnz
adcb
fwait
pop
push
cmp
jne
mov
dec
daa
leave
push
cmpsl
jp
mov
frstor
add
push
ljmp
mov
lret
xchg
sahf
jb
push
stc
shr
and
pop
cltd
adc
test
jp
xchg
imull
push
push
jne
hlt
sub
data16
addl
inc
or
xchg
sub
inc
cwtl
bound
sbb
cmp
repnz
ficoml
mov
xchg
cmp
push
add
xlat
lahf
in
cmp
adc
rcrb
das
fs
push
dec
ss
sub
lcall
pop
mov
jnp
sbb
mov
mov
cmp
adc
pop
out
mov
inc
add
out
int3
out
addr16
sub
inc
mov
and
xor
mov
xor
push
xchg
stc
jb
hlt
jae
lahf
les
test
pop
and
push
xchg
jns
repz
stc
jo
adc
sbb
mov
mov
push
adc
insl
sbb
mov
sbb
jmp
notb
fcmovnbe
or
ret
lea
adc
sub
mov
pusha
ja
sbb
aaa
dec
xchg
nop
sub
mull
lret
pop
movsb
jl
xchg
aam
cld
and
mov
cmp
faddl
ficoms
cltd
mulb
add
or
dec
push
mov
pop
out
xchg
cmp
rorb
jp
mov
adc
mov
jb
jmp
fsubrs
cltd
push
rcr
mov
addl
hlt
mov
jne
ret
fldt
lock
stos
fistpl
jle
sub
push
fisubs
out
rclb
adc
lock
lret
adc
pop
push
push
add
mov
daa
xor
shll
adc
sbb
jecxz
enter
fwait
cs
xorb
stc
in
outsl
ficomps
xor
ss
cs
push
or
lods
test
adc
lcall
pusha
push
or
dec
addl
insl
xchg
inc
lea
cmp
xor
into
or
clc
aad
iret
xchg
repz
add
mov
test
stos
inc
aaa
sarl
sbb
nop
xchg
aaa
jbe
push
pop
and
into
lods
mov
mov
imul
mov
orl
and
xchg
je
aam
cmpb
or
das
icebp
fstpt
orb
jo
mov
negl
push
test
jp
cmc
shrb
cmc
cmp
and
hlt
dec
call
lcall
iret
fiaddl
test
add
insl
dec
lods
lea
mov
test
pop
sbb
mov
xchg
xchg
subb
mov
nopl
iret
in
add
pop
mov
sahf
xor
and
sbb
push
fcoml
jg
jl
pop
aam
sarl
cmp
js
inc
das
in
test
fadds
leave
jle
push
xor
sarl
xchg
idivl
xor
insl
add
push
in
inc
jmp
pop
stos
out
mov
xor
cmp
cmp
inc
jnp
dec
jl
push
imul
imul
popf
mov
lds
vpavgw
loop
mov
into
mov
inc
adc
jmp
jb
rcrb
xchg
xor
mull
loopne
xor
push
adc
cmp
lcall
cmp
fnstenv
jge
xor
rcrb
pop
push
dec
outsb
jp
pushf
sbb
inc
movb
jne
cmpsb
cli
addb
dec
fisttps
push
and
xchg
std
mov
clc
sarb
fwait
and
fucom
sbbb
in
jge
add
lods
nop
xor
mov
pop
xchg
xlat
or
mov
xchg
jno
lcall
xor
call
push
lds
cmp
mov
decl
inc
mov
or
mov
sti
push
jge
fs
testl
sbb
adc
dec
push
cs
daa
mov
mov
aam
loop
filds
aam
sbb
jo
lods
or
ficomps
mov
push
fld
imulb
add
cmp
int
add
xchg
mov
mov
scas
mov
add
sbb
sbb
sarb
mov
data16
or
xchg
in
cwtl
sbb
pop
cmpsb
fdivrs
out
js
data16
fwait
cli
jae
jle
dec
push
rorl
jb
fwait
stos
push
inc
ret
push
add
aam
push
or
mov
repnz
push
jne
imul
clc
sub
fs
addr16
xor
push
into
std
into
rcll
ds
fnstenv
test
add
sub
icebp
sub
xchg
cmp
pop
fwait
popa
pushf
sbb
in
lock
testb
inc
lock
mov
sbb
in
pop
mov
pop
loop
aam
push
push
cmpsl
or
in
rcrb
cmc
add
mov
xor
test
xchg
dec
cs
pop
cmp
sbb
xchg
cld
jmp
inc
cmp
dec
cmp
outsb
dec
mov
aaa
aad
mov
add
mov
out
fwait
push
popa
fadds
lret
sub
call
inc
sub
push
xchg
jbe
test
adc
fisttps
das
add
mov
mov
sti
push
xchg
or
jbe
pop
cmp
ljmp
mov
pop
out
repnz
leave
push
and
mov
aam
inc
lret
ret
push
push
stos
xchg
lcall
jge
lret
dec
test
js
fldl
scas
fwait
int3
in
xchg
push
and
lret
mov
or
inc
mov
sub
xchg
mov
lcall
cmp
and
xor
pusha
sub
shlb
repnz
and
jb
inc
pop
iret
sub
or
xor
cmpsl
in
addr16
jno
leave
pop
je
jb
iret
lock
sub
xchg
dec
push
pop
or
repnz
hlt
sbb
fwait
dec
jbe
and
lea
aas
add
pop
pop
ja
repnz
cmc
fsub
jl
mov
mov
jnp
dec
mov
leave
ja
cwtl
leave
sbb
arpl
sub
aam
scas
push
cmp
cmp
dec
out
mov
cs
push
inc
fdivrl
xchg
aas
lahf
mov
dec
pop
sahf
and
xchg
and
lret
sbb
lcall
test
adc
aas
outsb
fmull
sbbl
mov
and
xor
test
fdivrl
mov
xchg
sbb
sub
jno
xor
loop
lods
aad
jg
push
pop
test
mov
iret
int3
out
pop
cs
je
pop
pop
pop
xor
lods
jb
and
mov
mov
cli
pop
ss
aas
loopne
inc
divl
adc
mov
cmp
xor
jae
dec
jl
mov
cmp
and
or
push
adcl
dec
mov
mov
fistpl
pusha
mov
mov
push
cmc
fbstp
out
rcrl
cli
in
jno
xor
jnp
fnstsw
loop
out
notb
cmp
xor
leave
mov
in
and
push
sub
pop
sti
and
adc
pushf
and
xlat
movsb
dec
mov
dec
das
push
pusha
fisttpll
jae
mov
mov
mov
cmp
xor
notb
and
mov
sbb
call
cmp
jmp
pop
arpl
subl
add
das
dec
pop
jmp
fcmovne
adc
cwtl
inc
jl
popa
test
les
sbb
push
jge
push
xchg
mov
fdivp
popa
push
and
fs
imul
fstpl
push
xlat
add
int
mov
push
mov
lea
mov
int3
xchg
imul
fildl
xchg
fldt
imul
adc
xor
fs
outsl
call
or
int
add
aam
adc
movsb
inc
mov
or
xchg
xor
fdivrs
mov
pushf
dec
mov
xchg
rcll
jg
xchg
inc
cmpsb
xor
push
or
cmc
sti
out
sti
mov
sub
pop
push
cmc
lret
in
mov
push
leavew
cmc
loop
xchg
push
mov
mov
aad
or
fwait
mov
mov
xor
xchg
xchg
lret
dec
ss
dec
lods
in
adc
inc
cmp
inc
out
mov
or
push
test
loopne
mov
and
lret
outsl
cmp
xor
iret
jno
ljmp
mov
es
push
sbb
popa
inc
movsb
cli
mov
ss
ret
jno
aad
or
lds
sbbb
shrb
cmpsl
dec
fwait
insb
mov
jae
cmp
lods
mov
mov
popa
and
scas
adc
push
sarb
stos
mov
int
push
in
les
jmp
cli
rcrl
inc
jo
pusha
dec
popa
lret
cltd
cmp
and
bound
or
dec
fisubs
or
or
lcall
sbb
or
sahf
pop
fucomi
ja
mov
adc
mov
das
call
mov
sbb
cld
mov
dec
cs
fldenv
es
cmp
adc
xorl
out
repnz
mov
aad
mov
sbb
add
dec
mov
xor
push
adc
cmc
jmp
mov
pop
pop
mov
arpl
clc
xchg
sahf
xchg
jno
repnz
stos
jno
and
imul
imul
sbb
fwait
in
imul
add
push
jp
sub
or
nop
push
sub
push
cwtl
sbb
stos
and
int3
push
call
jb
sub
mov
aad
cmc
xchg
mov
ljmp
imul
pop
sbb
fistps
dec
cld
sbb
sbb
mov
or
xchg
or
xchg
xor
je
adc
cli
or
ljmp
adc
rorb
nop
dec
dec
cmp
mov
push
sub
enter
push
add
bound
jmp
loop
arpl
adc
mov
and
add
cmp
mov
cmc
xchg
addl
lods
lret
outsb
loopne
inc
push
outsb
aas
mov
xchg
int3
test
scas
ss
cmpsb
insl
mov
adc
or
mov
lods
repz
cmpsl
mov
dec
push
add
push
test
adc
psllw
outsb
mov
cmp
stos
pop
inc
rcrl
adc
dec
xor
call
add
outsb
in
push
subb
mov
push
or
push
or
dec
and
daa
mov
mov
mov
in
cli
out
pop
add
popa
leave
pop
and
sub
scas
mov
sub
fwait
movsl
sbb
divl
mov
cwtl
int3
adc
push
xor
jp
jo
cmp
jo
pop
jae
mov
push
jbe
es
rclb
out
or
subl
sbb
subb
scas
jne
and
movsb
pop
dec
faddl
dec
mov
and
int3
fadds
mov
aam
je
and
mov
jl
pusha
mov
jmp
int3
jge
mov
add
lret
call
jbe
jbe
enter
fnstenv
push
push
sbb
or
in
xchg
fisubs
aas
stos
hlt
and
xchg
ds
ljmp
push
sarl
lds
xlat
jbe
push
and
pop
shl
push
mov
dec
int
xchg
jmp
gs
jp
lock
mov
jns
fsub
push
addr16
aad
pop
or
xchg
jmp
pop
or
push
sbb
push
iret
ja,pt
jp
inc
push
sti
sbb
pop
sbb
nop
cmp
and
jbe
cs
ficomps
aaa
sub
push
add
mov
fucom
xchg
and
adcl
jp
imul
pushf
shll
mov
dec
out
dec
nop
dec
dec
bound
in
sub
xchg
ja
jge
cld
mov
adc
add
or
xor
jg
push
cs
outsl
mov
mov
add
or
mov
sub
aaa
pusha
inc
add
mov
jne
mov
push
jb
pop
sub
cmpsb
fnstenv
mov
dec
xchg
fadds
add
cld
cmp
push
lcall
pop
lahf
mov
mov
or
mov
ja
jbe
pop
push
add
dec
mov
push
sbb
pop
push
pop
ret
push
push
jp
push
popf
or
mov
mov
cwtl
and
adc
shrb
mov
add
inc
push
pop
iret
dec
popa
cmpsb
in
xadd
cmp
testb
pop
or
arpl
jmp
inc
cmc
in
in
xor
movsb
jp
mov
cltd
ds
sbb
test
and
fildl
in
aad
inc
je
mov
movb
in
insb
push
hlt
data16
jp
add
pop
adc
sbb
orl
scas
enter
mov
out
push
pop
push
lret
push
ret
mov
adc
jnp
js
or
lods
loopne
adc
sub
call
sbb
xor
xchg
or
jl
or
mov
fildll
push
dec
fisttps
or
push
test
push
rorb
jle
popf
js
outsl
shll
dec
pop
outsb
hlt
clc
stos
je
out
popf
sti
mov
cmpb
addl
sub
andb
or
mov
push
ud1
movsb
jo
stos
testl
movsl
adcb
aad
stc
test
rcrl
daa
push
stos
xchg
dec
ror
ds
push
xor
fidivrl
inc
pop
rolb
icebp
into
ds
mov
mov
push
mov
lock
or
js
mov
test
movsb
rcrb
push
and
test
mov
sbb
ss
or
sbb
jp
xchg
push
and
adc
xchg
lds
cld
mov
add
dec
adc
mov
les
mov
dec
dec
imul
adc
and
test
movsb
ficomps
fldl
jmp
cs
mov
push
adc
or
fldln2
out
or
fsub
dec
aam
pop
xchg
rcrl
int3
mov
aas
add
daa
sub
addr16
jg,pn
pusha
imul
cwtl
pop
out
out
mov
outsl
test
aam
pop
aad
ret
mov
xor
adc
inc
adc
gs
add
or
mov
or
pop
mov
inc
jb
sahf
outsl
xor
test
lret
sbb
sti
sar
push
mov
adc
adc
stc
aaa
jae
xor
mov
sbb
out
mov
pop
pop
lds
adc
repz
cmp
mov
jbe
fsqrt
and
jge
lcall
imul
into
mov
xor
repnz
xchg
mov
xchg
xchg
push
cmp
xor
push
mov
fwait
idivl
pop
xchg
into
mov
icebp
fisttps
cltd
adc
lret
add
jne
clc
test
ror
or
flds
inc
fcmovnb
pushl
movsl
mov
stos
lods
ret
cli
or
popf
cmp
dec
xor
xlat
fwait
sub
mov
sub
std
push
std
push
or
xor
mov
icebp
inc
test
test
popf
ja
and
aam
imul
sarb
pop
fdivl
test
lods
jae
lret
sbb
jle
xchg
in
push
stos
mov
pushf
mov
cmp
insl
sub
leave
popa
mov
xor
fucomi
leave
mov
mov
mov
or
and
adc
loop
dec
in
xchg
mov
stos
inc
and
xor
sbb
test
repnz
xchg
aas
mov
or
mov
or
out
fcoms
mov
and
not
rorb
filds
mov
shll
sbb
push
shrb
jmp
repnz
mov
pop
fiadds
daa
dec
inc
push
arpl
xlat
out
daa
inc
xor
xchg
jo
sbb
popa
push
into
sub
std
test
push
xchg
xlat
fisttpll
lock
jae
in
push
in
cmpsl
insl
mov
out
call
xor
cmpb
push
or
fucomip
xor
xorl
mov
repnz
js
bound
jns
leave
inc
adc
pop
and
or
test
ffreep
dec
mov
and
mov
pop
jg
xor
lds
cld
push
decl
xchg
call
cmp
nop
orb
inc
add
pop
addr16
or
or
push
jns
sbb
into
stc
dec
inc
bound
push
pop
je
xchg
test
jb
xlat
xor
leave
push
inc
int
sahf
xor
add
adc
inc
subb
mov
fisubrs
and
cli
adc
sub
dec
push
mov
stos
loop
daa
rcrl
fidivl
test
pushf
test
shrl
stos
push
lret
cmpsb
ret
adc
lret
repnz
or
in
and
outsb
stos
pop
sub
push
jnp
sbbb
adc
mov
aas
sub
mov
fdivs
lahf
jl
mov
mov
imul
xchg
pop
and
cltd
xor
sub
scas
lret
pop
dec
insb
aaa
insb
movsb
inc
inc
add
inc
js
or
add
fwait
test
or
ret
daa
mov
xor
xchg
fdiv
jbe
es
lahf
dec
jg
sub
xlat
subl
stc
cmp
jnp
jmp
cmp
loopne
adc
xor
pop
js
outsb
fldt
add
and
je
mov
mov
enter
add
jae
lods
arpl
mov
in
daa
and
jb
sbb
xor
pop
lahf
xor
into
xorl
ret
sahf
cwtl
pop
push
jno
push
cmpsl
dec
arpl
add
jb
repz
adc
mov
push
and
xchg
mov
inc
lds
inc
lock
enter
jbe
fbstp
xchg
aam
push
xor
cmpsb
aas
repnz
mov
jb
pmuludq
test
mov
jns
cwtl
add
imul
cltd
push
sub
adc
xchg
jb
decb
mov
cmpsb
negl
xchg
push
mov
push
daa
movl
imul
movsl
cltd
stc
pop
xchg
fsubrs
push
sbb
push
xchg
mov
cmp
movsb
mov
popf
out
mov
stos
mov
out
icebp
inc
cmpsl
pop
pop
or
ror
daa
addr16
ljmp
out
or
add
ficoms
fists
cmpsl
outsb
jmp
cmp
in
pusha
adc
call
adc
aam
out
out
mov
mov
leave
or
loop
mov
jne
inc
mov
je
sarb
push
cmp
lods
lahf
inc
roll
scas
mov
shlb
xchg
bound
sub
sbb
test
rcpps
mov
jbe
mov
dec
xchg
ret
push
inc
sbb
jns
mov
movsb
out
and
mov
insb
loop
scas
hlt
dec
jns
sbb
add
rclb
sahf
jae
inc
shll
and
and
sbb
or
rclb
adc
inc
dec
jle
or
or
shrl
xchg
mov
xor
bound
lods
ficoms
add
pushf
mov
lcall
mov
int
imul
cmc
mov
out
pause
negb
jne
pop
and
inc
outsb
push
add
inc
jae
sub
cmp
rorl
test
push
cmp
fimull
test
out
in
test
out
push
movsl
sbb
sub
mov
shlb
or
orl
mov
mov
and
in
push
cmpsl
rorl
xor
dec
sub
out
ja
fiaddl
push
and
fs
fmull
sti
dec
lahf
cltd
adc
dec
ds
lahf
jb
std
mov
xchg
in
push
sub
repnz
fs
js
test
cwtl
mov
lcall
or
sub
ret
dec
xor
mov
push
pop
das
adc
pop
decb
sbb
fdiv
mov
xchg
xchg
aad
call
add
std
fs
mov
adc
xchg
or
inc
push
mov
enter
mov
bound
pusha
inc
pop
sbb
dec
mov
je
mov
or
idivl
adc
lret
loopne
adc
jl
arpl
jb
xlat
xor
scas
in
pop
cltd
push
mov
andb
cmp
in
sub
in
subl
cmc
and
clc
std
scas
sarl
dec
mov
ss
aaa
insb
and
aad
and
cs
add
adc
lcall
imul
pop
jecxz
aam
xchg
mov
bound
mov
loope
popa
cmp
ds
andb
sub
sub
out
jge
push
jl
inc
mov
inc
xchg
add
add
sbb
push
mov
or
outsb
cmp
sub
or
cmpsl
mov
sub
cmc
clc
pop
or
or
xor
int
mov
jle
mov
aas
fcmovu
mov
repnz
lret
insl
movsl
xor
dec
add
mov
arpl
xchg
sahf
mov
cmp
sbb
dec
jo
stos
xlat
jo
popf
inc
xchg
sub
inc
cmpsl
add
push
push
jp
in
nopl
dec
pop
ds
cmc
xchg
pop
mov
in
inc
lret
insb
aad
gs
popf
inc
subb
add
daa
ds
cmp
cli
enter
sbb
in
lahf
xchg
xchg
test
stos
jb
roll
les
ss
cs
lahf
movsl
fcmove
push
adc
cltd
loopne
stc
mov
outsl
jae
sub
push
mov
into
addr16
mov
jmp
je
fildll
mov
in
mov
lea
popa
sbb
leave
shlb
je,pt
pop
mov
xchg
jns
mov
push
dec
ret
sbb
cmp
add
repnz
pop
pop
push
fwait
jg
lods
adc
int3
pop
cmp
stos
mov
sbb
mov
mov
add
mov
hlt
insb
jae
dec
add
push
add
mov
int
in
cmp
jae
dec
cmc
jge
shrl
lcall
and
push
in
mov
xor
adc
data16
scas
mov
test
ret
into
mov
jge
jecxz
mov
inc
sbb
mov
xor
or
inc
ret
popa
lods
ret
jl
repz
jo
sub
orb
fldlg2
or
inc
or
shlb
sub
stos
or
aas
movsb
mov
comiss
in
inc
popa
dec
adc
fbstp
fldpi
jge
xchg
and
sub
sub
arpl
out
and
sub
adc
pop
mov
inc
cmp
mov
test
in
ss
dec
cmp
stc
fisubrl
jle
mov
jmp
and
jns
shlb
test
loopne
xchg
sub
sbb
and
or
adc
mov
cs
cli
sub
fwait
inc
inc
and
add
or
shrl
xor
push
mov
dec
and
pop
dec
cld
mov
pop
fadds
xor
cltd
xor
pushf
and
xor
sub
xchg
push
and
rolb
pop
adc
insb
mov
fistpll
xchg
lods
adc
jns
insb
mov
mov
mov
cli
cmpsl
test
mov
sbb
add
and
outsl
adc
push
pusha
mov
inc
imul
addr16
test
pop
gs
div
pop
push
out
mov
cli
and
scas
sub
mov
xchg
xchg
nop
sub
in
add
sub
sahf
dec
repz
jne
cld
pop
adc
jp
adc
rcrb
mov
inc
pop
and
sti
inc
icebp
sub
mov
xchg
mov
and
ret
jecxz
outsb
test
std
cmc
fucomi
addr16
iret
push
adc
fcomp
jecxz
in
inc
pop
lds
cmp
mov
jl
lahf
outsb
mov
pop
xlat
test
out
imul
xchg
add
push
or
in
into
fsubrl
mov
and
and
dec
cmp
sbb
test
lcall
shl
or
xchg
mov
push
daa
test
shl
push
jle
cwtl
std
mov
sub
mov
push
mov
pop
xchg
cmp
es
fidivrs
nop
insl
add
xchg
xchg
hlt
push
and
sbb
xorb
ljmp
jns
aaa
int
aas
stc
mov
imul
push
cs
dec
dec
std
xor
movsl
scas
test
and
std
sbb
in
dec
cmp
cs
fwait
sbb
idivb
dec
push
mov
sbb
push
cmp
arpl
cmpsb
xlat
outsl
xor
enter
push
ret
das
jo
dec
mov
shlb
xchg
dec
cmpl
daa
and
das
mov
xor
inc
mov
dec
add
xor
roll
or
jle
or
sub
inc
test
cmp
pop
mov
push
mov
movsb
lret
add
mov
outsb
jne
mov
push
ja
clc
mov
mov
adc
jne
xchg
sub
and
jns
clc
sub
cs
int3
loop
xchg
mov
pop
test
xor
in
and
gs
imul
orl
repnz
pop
fistpll
fstps
add
in
dec
ret
xor
data16
adc
and
scas
sbb
in
out
mull
jns
adc
mov
pushf
pushf
dec
add
insb
into
mov
xchg
push
jb
mov
or
in
pop
popf
push
and
pop
push
pop
test
aaa
stc
in
notb
std
int
sbb
inc
jbe
push
call
pushf
jge
out
pop
daa
imul
imul
inc
mov
cmp
lea
add
sti
lahf
shll
mov
xchg
mov
arpl
les
mov
movsl
xchg
int3
dec
mov
adc
cmp
repz
sahf
jne
add
and
sub
dec
cmp
in
ds
fsubs
mov
mov
add
fbstp
cmpsb
push
fadd
mov
mov
dec
aas
adc
mov
mov
mov
push
adcb
jno
int3
and
jne
jl
out
sub
dec
xlat
cmp
cs
outsl
fisubs
push
test
inc
jnp
mov
adc
xchg
bound
mov
xchg
stc
xchg
sub
shll
mov
xor
xchg
sub
movsb
arpl
out
jbe
mov
out
cmp
mov
sub
jne
das
dec
fstl
or
icebp
hlt
cmc
in
fcomp
es
mov
inc
insb
jge
pop
orb
xchg
jl
stc
xchg
jl
inc
inc
rcrl
fcomps
adc
sub
out
pop
out
fs
sbb
pop
and
adc
outsl
inc
movsb
sti
shlb
add
pop
loopne
fidivs
push
sbb
fs
pop
jo
mov
int3
and
sbb
mov
lock
std
push
inc
dec
inc
ds
and
sub
imul
pop
pop
movaps
inc
out
pusha
stos
rorl
lret
das
sub
loop
xchg
out
jecxz
pop
scas
hlt
imul
adc
notl
out
mov
daa
lods
fiadds
pop
mov
or
push
sbb
pop
cmpsb
jb
cmc
and
adc
cmp
jns
xchg
dec
loope
out
fs
push
pop
rorb
aas
shrb
cmp
nop
andb
xchg
outsb
ret
xor
xchg
inc
or
sbb
sub
clc
mov
sub
cltd
push
pop
cld
bound
out
fst
lahf
mov
xchg
inc
out
sbb
add
jecxz
mov
inc
add
outsb
addr16
inc
mov
sub
roll
mov
fsub
pop
lds
test
lock
xor
out
jg
cli
mov
ds
sahf
and
jno
scas
pop
adcb
sbb
push
in
dec
xlat
push
push
push
dec
cltd
hlt
add
inc
pop
or
xor
lods
addl
fcompl
test
mov
test
add
or
mov
leave
ds
je
inc
sub
sbb
dec
fnstcw
sub
adc
out
in
xor
in
cmp
xchg
adc
fisubrs
popf
lahf
sahf
aaa
jnp
cs
clc
sub
xlat
lret
dec
adc
inc
int3
mov
scas
inc
rorl
push
lds
jb
or
push
in
mov
shll
lcall
add
outsl
xchg
mov
xlat
sub
mov
out
fs
movsb
add
mov
idiv
jnp
ret
aad
mov
pop
pop
push
or
jg
movsb
xlat
test
es
sub
stos
adc
xor
ss
repnz
cltd
idiv
xchg
xchg
movsl
ss
push
cmpsl
fbstp
cmp
stc
or
or
or
push
jecxz
mov
andb
cmp
xchg
mov
test
push
and
lds
or
stc
inc
stos
testl
push
ds
addr16
pop
aad
pop
xchg
movsl
add
xchg
inc
insb
mull
push
stos
cmp
jb
stc
in
in
mov
out
rcrl
aam
xchg
or
mov
and
fs
jmp
or
jnp
iret
lea
cmpb
push
shll
rcll
adc
xchg
inc
mov
adc
pushf
mov
xor
sub
sbb
shrl
sahf
push
jecxz
fs
and
lea
lods
pop
iret
sarb
xchg
lahf
cmp
or
push
mov
dec
jne
xchg
mov
or
inc
out
fsubrs
push
mov
xlat
mov
movsl
testb
push
lods
xor
add
cmp
cmp
sbb
jecxz
adc
inc
sti
jnp
pusha
mov
stos
decl
mov
cmp
adc
mov
adc
mov
pushf
mov
lret
clc
or
xor
fsts
leave
pushf
dec
xchg
into
pop
jmp
rorl
add
scas
test
or
jno
out
shr
or
fucomp
je
pushf
pop
aaa
shrl
xchg
jbe
ret
clc
mov
subb
mov
fildll
scas
or
je
jne
outsl
ja
mov
cmp
leave
push
test
fsubr
addb
add
leave
jbe
pop
mov
adc
pop
andl
jge
dec
movb
lcall
insl
and
adc
scas
add
cmp
outsb
je
xchg
inc
xchg
fdivrl
ja
inc
mov
das
xor
insb
lods
jnp
int
stos
aas
xchg
jbe
ljmp
outsl
pop
and
aas
push
lods
rcrl
arpl
xchg
cmpsb
pushf
xor
fstpl
jl
dec
cld
jge
aas
adc
repz
loop
mov
repz
das
cld
out
mov
adc
sbb
or
fildl
mov
inc
xor
fists
int3
mov
sbb
sahf
jle
add
xchg
sbb
jnp
repz
lret
adc
in
loop
push
sbb
test
hlt
xor
testb
scas
shrb
shll
aam
pushf
jecxz
minps
enter
pop
xchg
jbe
cmp
repnz
cmpsb
and
mov
mov
or
popa
adc
aaa
insl
stos
mov
xorl
or
sarb
in
mov
jmp
cmp
xor
push
push
in
push
lea
push
pop
mov
jge
pop
movsb
mov
lds
and
add
sub
push
push
xlat
jb
test
or
int3
sub
movsb
divb
mov
in
jle
add
xchg
mov
xchg
inc
cli
loop
mov
mov
jle
aas
movsl
pushf
and
mov
cmp
cltd
outsb
cmc
adc
je
pop
xlat
xchg
and
mov
jl
fs
xor
out
mov
pop
mov
mov
mov
pop
fdivs
push
jns
xor
xor
std
inc
mov
sub
sub
push
insl
lods
adc
adc
or
mov
pop
loop
pop
xor
push
das
aaa
add
iret
cmp
and
insl
in
fidivl
aam
rclb
outsl
push
cmp
fst
mov
imul
jp
jb
sbb
mov
inc
sbb
or
fcoms
les
sbb
cs
sub
sbb
adcb
jmp
push
loop
push
das
jae
sbb
or
ret
scas
pop
add
xor
lahf
cmc
in
fldcw
test
add
jne
sub
ret
or
mov
dec
shll
inc
mov
xor
cmp
dec
popa
sti
and
push
jae
inc
lea
ss
cmp
push
xor
cli
jecxz
paddusb
bound
push
mov
cmpsb
aas
xchg
jo
enter
mov
cli
js
int3
fsts
xor
outsb
pop
cwtl
jmp
jp
les
jge
sbb
add
fs
inc
aam
pop
xchg
ret
adc
mov
mov
jl
xor
mov
xor
mov
insl
add
pop
out
mov
jge
xorb
outsb
push
fdivl
sarl
cmp
mov
andb
les
add
int3
cwtl
cli
aam
mov
icebp
lods
repnz
xor
fcomi
xchg
je
inc
add
mov
jns
xchg
xlat
lret
cmpsb
pop
push
jno
lea
fs
sub
sbb
adc
lock
xor
js
test
aas
mov
fscale
dec
movsl
cmp
jbe
or
jle
jmp
mov
cmp
push
rcrb
outsb
es
cmpl
xor
push
mov
mov
scas
mov
sub
scas
sbb
jbe
cwtd
cmc
rorl
xchg
and
sahf
ret
or
rorl
addl
adc
add
out
or
xchg
mov
mov
popa
cmp
in
fs
xchg
rcll
sub
mov
mov
inc
xchg
xchg
hlt
ds
sbb
jle
fsubr
clc
adc
pop
popf
add
insl
in
movsb
inc
pop
jne
sub
adc
jns
fldt
insl
subb
sub
xchg
jmp
xchg
cmp
in
cmp
pushf
dec
hlt
cmp
ss
mov
mov
test
or
ja
and
xchg
mov
aaa
out
cld
add
je
mov
and
int3
mov
cltd
lods
pop
mov
in
aam
mov
mov
inc
xchg
iret
jnp
les
xchg
jl
adc
loopne
fsubrl
adc
cs
lods
adc
out
xchg
arpl
xchg
out
ficomps
xor
xchg
jbe
adc
sub
jmp
shll
test
lds
clc
test
add
jne
rclb
sahf
sahf
push
xchg
sub
fs
daa
adc
sub
rclb
pop
xor
mov
sti
rclb
push
dec
hlt
adcb
pusha
popf
xchg
pop
sbb
mov
movsl
sub
cs
repnz
mov
out
std
shlb
sahf
dec
shl
add
ljmp
bound
mov
out
mov
add
cmp
shlb
fs
sub
std
xchg
or
or
out
daa
sbb
mov
cmp
pop
add
jb
nop
jg
jo
insl
sub
fidivrl
pop
xchg
dec
ficoms
shlb
xchg
push
sub
or
mov
pop
pop
push
popa
lds
pop
jle
sub
sahf
das
xor
lahf
imul
add
jle
jl
into
sub
jne
pusha
pop
or
aam
shll
mov
loope
cmp
push
mov
mov
aad
mov
sbb
rclb
jge
jns
dec
mov
jae
in
fucomp
and
mov
inc
adc
repnz
jecxz
outsb
sub
ret
ficomps
mov
imul
js
push
sbb
push
stos
push
mov
push
inc
sub
jp
sbb
mov
xchg
xchg
divl
sbb
sahf
lcall
in
lret
jl
out
mov
add
sbb
std
and
cmp
aad
shlb
roll
xchg
push
sub
or
cmp
add
mov
and
fiaddl
seto
push
out
aas
aaa
repz
push
mov
push
sbb
jae
xchg
aad
clc
sub
jo
cmp
fchs
cltd
andb
rcl
adc
sbb
mov
pop
pop
bound
lcall
clc
fs
dec
push
inc
cmpsb
sub
jbe
pop
push
xchg
lods
mov
or
xchg
jae
into
lahf
jb
insb
pop
mov
pop
jge
adc
mov
loopne
lret
testl
std
fsts
ret
mov
adc
inc
pusha
clc
pusha
jns
mov
ficomps
sbb
sbb
and
cmp
fadd
ja
sub
inc
push
mov
bextr
mov
shll
dec
dec
cmp
mov
add
jp
cmp
fadds
xor
jne
mov
orb
sbb
push
xor
mov
xor
outsb
dec
push
addb
sbb
mov
dec
popf
dec
inc
push
mov
and
icebp
mov
addr16
xorb
jo
mov
inc
and
cmp
fcmovnb
mov
pop
mov
in
scas
scas
cmp
inc
es
ret
inc
arpl
or
es
jle
or
nop
test
push
jnp
lods
shrl
jl
lock
insl
inc
jmp
mov
push
loop
pop
loope
sub
xchg
sbb
xor
mov
and
lds
mul
fnstsw
loopne,pn
sbb
testl
scas
add
lods
mov
js
push
or
fldl
cmp
cmpsl
sbb
mov
fbld
outsl
cltd
gs
or
mov
push
pop
pop
mov
nop
incb
aad
jb
mov
mov
jae
xor
dec
scas
test
movsl
fsubl
jns
je
mov
xor
push
inc
and
xchg
xchg
add
adcb
sub
outsl
arpl
cmp
pushf
aaa
jge
pop
movl
fsubl
test
pop
aad
lods
mov
and
sub
pop
push
aas
or
pop
xchg
push
cmp
jne
add
xchg
sub
pop
xor
mov
add
and
push
or
test
pop
push
repz
jg
dec
xchg
lods
ret
push
pushf
ds
nop
adc
jmp
and
or
jl
out
mov
mov
cmc
and
nop
loope
mov
mov
jae
shl
sti
out
popa
sbb
mov
sub
int3
inc
jge
cmp
rcl
jmp
loopne
add
rcr
mov
into
add
std
jl
mov
cmp
lret
add
shrl
ss
scas
inc
loop
xchg
push
adc
mov
xchg
sbb
fwait
mov
repnz
inc
lret
int
push
cltd
xchg
push
cli
mov
ret
dec
mov
and
add
mov
inc
mov
shr
scas
sbb
fidivs
sub
bound
xchg
movsb
in
jge
pop
rolb
imul
test
inc
paddb
gs
jmp
inc
fmulp
out
cmpsl
test
mov
inc
dec
mov
xor
loopne
add
add
inc
jns
in
sbb
pop
cli
pusha
jmp
fisttpll
lock
call
lods
sbb
loop
or
movl
nop
mov
mov
add
adc
adc
xchg
cli
inc
mov
insb
int3
jecxz
or
push
xchg
pop
les
adc
xor
jecxz
sub
cltd
push
icebp
jl
repnz
sub
lret
in
shl
enter
add
cli
mov
out
inc
jo
jo
outsb
cwtl
lock
lods
cltd
pusha
push
inc
sub
xchg
nop
pusha
mov
sbb
or
fwait
hlt
or
fists
imul
xchg
push
pop
cwtl
repnz
push
cmp
mov
xchg
jno
xor
or
sub
ss
push
cmp
mov
mov
push
or
and
push
test
outsb
arpl
mov
xchg
shrl
jmp
mov
cld
movsb
or
and
mov
or
jle
lret
test
sbb
jae
inc
mov
fldl
mov
adc
rcrl
call
in
xor
imul
mov
sub
filds
adc
fs
aaa
dec
jecxz
cmp
cmpsl
adc
insb
cmp
out
loope
gs
mov
movsb
or
imul
cs
mov
fcoml
jp
or
enter
xor
push
and
sarl
mov
mov
jg
in
loope
pop
pop
imul
ja
adc
clc
rcrl
push
mov
dec
inc
pop
fcmovnb
leave
pop
mov
jbe
and
mov
pop
sti
arpl
and
movsl
push
xchg
xchg
in
cmp
sti
insb
push
sti
fucomp
push
mov
test
pcmpgtb
test
push
xchg
mov
ljmp
inc
lcall
sbb
daa
push
dec
sti
xchg
inc
jb
mov
imul
inc
inc
pusha
mov
adc
pop
pushf
xchg
jl
in
mov
dec
sbb
aam
and
imul
fcoms
xlat
dec
lock
mov
stos
push
cmp
or
mov
addr16
or
lahf
lea
nop
sti
xor
sahf
js
sub
mov
mov
std
test
lret
lcall
stos
repnz
mov
or
adc
xchg
cmpsb
inc
pop
xor
and
das
mov
jle
mov
xor
jp
sub
imul
lret
lods
mov
or
into
sub
fsts
and
rolb
dec
or
add
inc
sbb
xlat
ja
fists
enter
iret
sahf
inc
test
xchg
icebp
fistps
cmp
pop
cmpsb
adc
enter
sub
mov
push
cmpsl
shlb
movsb
popf
cs
mov
test
repnz
pop
jo
fidivl
mov
cmp
dec
cmp
inc
aas
in
sbb
push
pop
xchg
bound
push
jnp
lods
jp
sahf
addr16
sbb
lcall
sub
xor
out
push
mov
sbb
xchg
push
dec
out
sub
mov
sub
push
in
cmp
dec
xor
mov
mov
notb
test
je
sbb
fs
fdivr
xorb
pop
gs
mov
clc
push
jl
cmp
in
add
adc
in
mov
push
les
js
push
or
and
daa
aaa
jo
pop
xchg
out
mov
mov
out
test
sub
mov
pop
addr16
sub
xor
or
pop
adc
lret
mov
or
add
xchg
mov
fmuls
js
test
ret
inc
or
aas
aaa
jne
cmp
cmp
jo
add
dec
pop
push
xchg
lahf
sbb
add
int3
fwait
mov
int3
out
jp
mov
loop
lds
je
cmp
shrb
jp
ds
into
mov
cmp
xorl
fists
push
rorb
insb
packssdw
call
test
pop
out
add
out
cmp
movsb
add
inc
mov
popf
and
lret
call
insl
or
repz
in
cmpl
mov
testb
fs
cpuid
sti
mov
mov
popl
mov
test
and
test
dec
jns
cmp
mov
jle
pop
mov
mov
add
dec
es
js
iret
popa
dec
ret
push
push
mov
push
gs
push
sbb
mov
add
pop
adc
pop
cmp
xchg
mov
subb
mov
mov
lcall
lods
dec
imul
xchg
ja
xchg
jg
jnp
pop
jb
add
mov
pop
cltd
insl
and
out
or
dec
insb
gs
dec
push
jl
push
cmpsb
jge
outsl
das
cmp
push
inc
mov
pop
test
ja
in
fldcw
adc
dec
ret
jecxz
pop
sbb
outsl
das
mov
xchg
xchg
test
mov
test
pop
cs
fwait
dec
sub
into
out
pop
mov
data16
loop
cli
call
inc
lds
pop
dec
cmp
mov
cmp
and
test
push
mov
fstl
lcall
or
xlat
sub
jle
cmpb
int
shll
in
inc
lock
test
in
ficoms
add
mov
outsb
and
sub
cmc
add
jg
notl
mov
fwait
cmp
xor
int
mov
sbb
dec
inc
notb
pop
int3
bound
pop
push
imul
jl
or
and
and
jecxz
enter
ret
popf
cld
xor
fcmovne
fnstcw
lds
cld
pop
cld
mov
repz
mov
aas
sub
icebp
pop
popa
xor
das
pop
dec
inc
jle
movsl
jp
mov
push
lods
sub
mov
push
inc
mov
and
cmp
xor
jle
inc
mov
pushf
arpl
popa
push
or
roll
dec
push
xor
sub
cmp
add
mov
sbb
sarl
add
sbb
adc
sahf
js
int
out
xchg
add
and
sahf
cmc
popf
dec
shlb
push
dec
out
pop
stc
mov
adc
xor
aaa
xchg
jge
pusha
jle
insb
in
addl
adc
add
mov
insl
into
shlb
daa
out
pop
pop
std
das
loope
adc
lcall
rorl
ja
mov
pushf
add
inc
inc
push
adc
jb
out
cli
ss
cs
push
mov
inc
push
mov
into
outsl
sahf
xor
mov
iret
mov
shrl
fdivr
cli
lods
push
jecxz
lret
xchg
pop
xchg
xchg
les
inc
cmp
pop
pop
jmp
cmp
xchg
push
dec
xchg
push
je
bound
out
in
sbb
scas
repz
jbe
loop
cmp
cmp
pop
les
adc
jnp
or
xchg
cmp
pop
mov
or
or
cwtl
hlt
std
dec
mov
out
push
out
pusha
xchg
jmp
enter
push
addr16
cltd
jle
sbb
cmp
mov
pop
and
cltd
insl
sbb
hlt
push
sub
sub
jecxz
je
rep
enter
xchg
lahf
js
je
outsb
ja
ret
adc
in
mov
lret
shr
jb
ja
pop
xor
add
jmp
ja
jg
pop
cmpsl
bound
gs
sub
mov
ss
mov
sbb
int
push
out
cmp
push
movsl
dec
cld
xor
faddl
fwait
outsl
mov
dec
ret
cmpb
lods
xor
stos
jbe
sbb
jo
sbb
dec
xchg
insb
mov
adc
sbb
mov
lcall
push
xchg
jp
bound
sti
in
adc
dec
push
stos
jo
lret
mov
out
sbb
mov
pop
and
jge
sub
jmp
shll
pop
pushf
sbb
xchg
mov
addr16
pushf
in
or
cmp
scas
fisttps
std
and
imul
mov
push
xchg
adc
pop
jnp
mov
insb
shll
and
popa
dec
inc
cmp
push
sahf
fisttpll
into
fisubrs
adc
inc
xor
lds
push
xchg
stc
inc
xchg
int3
fisubl
xchg
aam
mov
les
add
xor
inc
cmp
cmp
rcrb
fwait
loop
popa
xor
mov
sub
push
icebp
pusha
xchg
jo
enter
add
iret
push
mov
jo
mov
inc
inc
jno
sbb
out
es
or
mov
jle
adc
lahf
mov
ljmp
fistpl
out
sbbl
hlt
cmp
pop
es
lds
adcl
insb
cmp
push
cld
add
lret
xchg
sub
push
adc
add
cli
push
xchg
jg
or
jle
pop
mov
cmp
xchg
cmp
out
jge
sub
cwtl
mov
sahf
sbb
mov
mov
push
pop
pop
jo
loope
dec
adc
sti
sub
xchg
outsb
loopne
sub
jecxz
popf
inc
add
pop
es
call
imul
inc
jnp
aad
gs
ret
jl
xchg
sbb
sti
mov
jmp
xor
sub
sbb
nop
lcall
gs
sub
movl
fsubrl
insl
mov
adc
aas
push
leave
sbb
jb
ds
pop
pop
jns
fidivrs
or
cmp
pop
notb
sub
xor
or
mov
sbb
jns
dec
adc
cltd
pop
xchg
or
les
jno
cmp
inc
sbb
add
push
jae
or
pop
addb
dec
pop
test
mov
mov
sub
xchg
mov
imul
insl
xchg
imul
js
cmp
mov
jge
pop
or
repnz
in
add
sbb
clc
xchg
imul
cwtl
lods
jne
repnz
jmp
jo
cmp
insb
mov
pushf
mov
lods
popa
sub
test
sti
and
arpl
mov
sub
jbe
out
loop
out
or
cmp
imul
pop
in
pop
int3
xchg
jne
xchg
add
lahf
lea
insl
push
xor
insl
repz
repz
cli
rcll
data16
pop
sub
jg
icebp
mov
pop
mov
out
dec
fsubr
inc
xor
mov
jle
icebp
cld
adc
pop
push
pop
mov
pop
mov
pop
mov
adcl
xor
mov
iret
mov
int3
push
mov
sbb
shl
loop
fistps
pop
push
lock
lahf
rcr
cmc
mov
push
cmp
add
sahf
out
int3
hlt
and
icebp
inc
lahf
jmp
mov
hlt
ljmp
aam
add
aam
pop
and
xor
leave
loopne
psubw
out
pop
pop
es
les
or
outsb
xchg
js
xor
adc
mov
jle
push
lahf
call
into
sbb
sbb
push
and
xchg
mov
movb
xor
in
mov
hlt
pushf
out
gs
jle
arpl
dec
xor
sbb
jno
or
xchg
inc
loope
test
cmc
dec
add
outsb
lea
jge
cld
ss
ljmp
das
inc
lock
inc
jge
xlat
pop
cmp
in
outsl
mov
into
cwtl
push
iret
lcall
dec
or
push
mov
mov
div
pop
mov
push
mov
xchg
xchg
sbb
dec
aas
inc
loope
mov
lahf
jns
mov
js
loop
cmp
rol
aad
cli
int
outsb
sbb
call
xchg
add
pop
and
clc
inc
cmc
aas
pop
dec
add
nop
xchg
mov
sbb
jl
push
xchg
add
sub
mov
mov
and
sarl
cwtl
testb
insl
adc
pop
insb
das
xor
inc
cltd
adc
insb
jle
scas
push
jecxz
xor
xchg
fistpll
and
lods
sbb
cli
sbb
mov
pop
push
pop
fwait
sbb
mov
scas
movswl
addr16
test
mov
jae
jno
and
scas
dec
mov
lods
xor
push
push
jmp
xor
leave
sbb
mov
mov
mov
mov
dec
outsl
jecxz
mov
imul
movsb
outsb
or
sub
in
xchg
mov
mov
mov
int
mov
int
lea
mov
in
test
shrl
cmp
es
aam
inc
int
push
inc
mov
fwait
cmovl
fwait
cwtl
inc
hlt
call
pushf
adc
push
jecxz
stos
mov
cmp
dec
cmp
mov
xchg
gs
adc
sub
fs
filds
jno
push
insb
push
jne
xchg
into
enter
pop
scas
subl
cmp
pop
jge
fcmovnbe
adcl
divb
sti
dec
cmp
or
jge
xchg
add
test
lret
sbb
iret
imul
mov
xchg
sub
fs
or
xor
mov
negb
jmp
push
fwait
add
rolb
pushf
adc
adc
loop
bound
push
int
ds
cmp
sarb
push
mov
mov
push
mov
fsts
inc
mov
push
xchg
fdiv
sqrtps
mov
outsb
sar
fistpl
lahf
xchg
dec
inc
pop
mov
xor
push
xchg
sarb
inc
cmp
inc
outsb
mov
inc
movsb
xchg
and
jno
lcall
xor
xor
ficoms
mov
test
nop
outsb
cmp
bound
adc
shr
add
repz
lods
or
leave
jae
daa
xchg
inc
mov
dec
in
jl
sbb
inc
or
pop
int3
mov
sub
xor
out
stc
inc
mov
pop
outsl
xor
mov
pop
enter
loopne
scas
test
pop
cmpsb
ss
dec
mov
mov
pushf
jno
inc
pop
push
and
in
pop
aam
jo
mov
and
xor
xor
xor
aaa
add
or
sbb
sub
or
push
leave
mov
cld
enter
in
inc
sub
pop
lret
and
push
push
lds
popa
rcll
cwtl
fimull
push
mov
add
mov
punpckhdq
fwait
lret
loop
pop
stc
test
add
negl
push
mov
pop
in
inc
mov
xchg
pusha
sbb
sub
xchg
fidivs
scas
test
lret
fwait
xchg
jne
mov
out
xchg
lds
pop
popa
repz
repz
enter
popf
sbb
mov
dec
lcall
test
mov
pop
imul
popa
fstp
fisubrs
jo
xchg
je
scas
ss
adc
lods
out
aas
ret
or
xor
mov
movsl
mov
jl
xchg
jecxz
daa
push
jmp
notl
leave
jg
faddp
sahf
dec
jp
daa
adc
lret
dec
test
into
and
jae
lods
cmp
fisubrs
imul
mov
and
push
mov
jg
cmp
push
jmp
xor
inc
cwtl
sbb
outsl
cltd
loopne
jecxz
push
popa
repnz
test
or
pop
add
dec
push
mov
pop
daa
add
jno
rcrl
adc
inc
cmp
mov
aad
sahf
xchg
push
dec
outsb
inc
mov
lods
mov
lret
mov
in
in
lods
stos
popa
dec
add
sub
cmpsl
stc
das
mov
pop
lods
scas
jp
lret
mov
sub
xchg
nop
add
test
lcall
fiaddl
pop
mov
xor
pop
stc
mov
testl
push
imul
adc
sahf
jge
mov
jl
cmpsb
fadds
sahf
in
addl
push
cld
subl
das
shll
test
ficomps
stc
mov
xchg
cs
insl
or
fwait
and
scas
arpl
sti
push
xchg
xorb
mov
mov
push
int
in
push
dec
pop
xor
sbb
cmp
shll
or
leave
jecxz
adc
push
sub
or
lret
ja
mov
gs
cli
and
inc
mov
in
jns
add
inc
rcll
add
add
sbb
stos
xor
mov
mov
adc
ljmp
lret
dec
sub
idivb
add
fwait
hlt
addr16
xchg
lahf
aas
pop
roll
push
pop
mov
shrb
test
xor
gs
clc
jl
lods
and
std
outsb
dec
decb
and
pop
sub
push
mov
jl
ds
std
out
addr16
test
daa
aaa
imul
add
repz
push
hlt
pusha
mov
cmpsl
insl
mov
mov
push
in
loope
ret
pop
add
andl
lds
xor
test
mov
jmp
xchg
lret
mov
popa
cmp
popw
or
sbb
jl
mov
push
jmp
mov
movsl
out
inc
loop,pn
dec
int3
sub
pop
pusha
sahf
xlat
imul
sbb
insb
cmp
aaa
insb
repz
jae
flds
cli
dec
sub
and
xlat
aam
xchg
hlt
inc
shrb
sbb
insb
adc
add
sti
push
sub
pop
cmp
inc
out
andb
jo
xchg
sub
cld
cmpsb
cltd
mov
mov
add
adcl
mov
push
mov
jp
ret
lea
or
into
test
das
mov
popf
or
aas
loopne
dec
or
xor
inc
sub
repnz
push
pop
mov
idivl
test
sbb
dec
in
cmp
sub
jo
es
xlat
icebp
mov
mov
aaa
hlt
lds
sarl
pop
fs
jmp
movsb
fdivl
mov
test
push
inc
subl
faddl
xorl
fwait
xchg
sti
xchg
loope
daa
pop
or
xchg
enter
movsl
in
inc
jp
repz
insb
in
dec
dec
add
jmp
nop
sbb
cmp
inc
push
xor
out
leave
xlat
bound
shrb
jo
adc
notb
mov
call
dec
and
sub
loope
push
lods
imul
sub
mov
cli
sub
mov
mov
sub
adc
adc
jmp
push
mov
jbe
or
jns
bound
sbb
mov
cmp
mov
lret
xor
roll
aam
push
ljmp
sahf
cmp
dec
das
sahf
scas
rolb
daa
sub
aas
sbb
fisubs
and
xchg
jae
dec
test
add
outsl
stc
mov
and
cmp
es
adc
mov
mov
scas
addl
in
pop
pop
scas
sbb
jb
stos
dec
inc
cmpsl
push
bndldx
popa
lea
stos
out
adc
js
xor
dec
jno
adc
hlt
xor
pop
aas
int
imul
pop
rcrl
mov
daa
xchg
mov
leave
mov
mov
std
xlat
fwait
test
inc
imulb
call
fsubs
dec
in
dec
imul
repnz
addr16
and
push
and
jnp
adc
bound
nop
rolb
lret
pop
sahf
mov
xchg
dec
pop
sahf
push
dec
cmp
aas
mov
lods
mov
addb
mov
push
mov
cwtl
rorl
xor
test
dec
aaa
or
cmpsl
xor
test
not
jg
test
and
stos
pop
jg
inc
mov
out
add
fs
mov
inc
stos
cmp
testl
mov
sti
out
mov
hlt
inc
lods
movsb
push
data16
xchg
pusha
ss
nop
out
pusha
sti
push
mov
xchg
imul
imul
pusha
push
ljmp
xor
sahf
dec
pop
xlat
ret
int3
and
fstps
sti
inc
ljmp
inc
fld
orb
imul
cltd
push
push
mov
add
cmp
jns
hlt
popl
and
xor
stos
mov
mov
inc
jae
lods
push
pop
mov
out
adc
sbb
jecxz
mov
popf
clc
je
std
hlt
in
pop
orl
out
jge
sub
cltd
jno
add
adc
jle
push
sub
pop
lds
data16
stos
inc
in
dec
sbb
jle
push
add
dec
decb
adc
add
rep
fisttpl
mov
fwait
ss
inc
mov
fistpl
test
jo
cmpsb
push
lds
lods
stos
pop
inc
mov
ja
ret
push
mov
jb
add
not
or
adc
jecxz
fistpll
pop
lea
idiv
sarl
push
sub
fistpl
adc
cli
test
ss
xchg
dec
je
push
cs
out
faddl
inc
or
mov
dec
xchg
and
fildll
dec
and
dec
addr16
iret
xchg
test
pop
js
and
pop
sti
push
cmpsl
inc
lret
mov
pop
mov
mov
cmpsb
repz
out
fisttpl
fstpl
fnsave
adc
aad
and
test
clc
jnp
mov
cmpsb
shr
fisubrs
jp
mov
adc
popf
xchg
int3
subl
pop
mov
inc
aas
addr16
jo
push
dec
stos
es
xchg
sbb
popa
das
push
inc
cli
adc
xor
pop
hlt
xchg
in
test
js
mov
pop
xor
mov
fwait
jge
mov
mov
mov
movsb
jb
cli
mov
jmp
dec
jl
cmp
sbb
cmp
dec
sub
lahf
cli
sbb
mov
loopne
jne
dec
inc
bnd
mov
scas
rcl
push
dec
rolb
cs
add
mov
mov
enter
jg
fcmovbe
or
add
push
inc
mov
mov
pop
clc
out
js
lret
adc
jle
dec
pop
mov
push
mov
sarl
xchg
adc
stos
bound
mov
push
jge
call
fcmovbe
mov
mov
in
scas
sub
xchg
sub
jp
mov
add
repnz
sub
scas
inc
stos
jle
mov
pop
add
mov
fcoms
mov
cld
ljmp
jne
fs
sbb
icebp
test
add
jnp
jae
lret
clc
cli
loop
test
mov
adc
pop
movsl
pusha
push
mov
stos
xchg
add
adc
rcrl
clc
ds
mov
or
xor
pop
adc
pop
jg
dec
cmpsb
mov
mov
arpl
pop
fisttps
icebp
in
pop
mov
mov
out
push
sub
mov
jle
add
jg
ret
mov
lock
xchg
sub
test
xchg
jno
pusha
inc
fimuls
ret
cld
sub
enter
jge
jmp
mov
xchg
test
pop
xchg
int
dec
lea
daa
ja,pn
es
pop
push
inc
das
in
pop
inc
pop
punpcklbw
cmovg
jmp
loope
bound
push
dec
cmpl
gs
adc
loope
mov
out
xor
stos
shrb
outsb
sub
lods
popf
fs
jae
ja
addr16
out
cli
inc
lret
enter
fmulp
jae
jmp
jo
arpl
mov
lock
sub
cs
sbbl
push
int
test
aam
pop
das
inc
call
scas
xorl
mov
jnp
xlat
mov
es
push
or
xor
push
mov
stos
test
cmpsb
in
pop
cmp
ror
cmp
mov
cmp
mov
movsl
jmp
sbb
cmp
orb
mov
and
xorb
cmc
insb
xchg
mov
shrl
jb
cmp
push
js
cld
inc
adc
sub
mov
out
mov
repz
push
inc
fsubl
push
test
xor
add
cltd
bound
mov
fldt
jb
addr16
loop
movsl
cmp
daa
iret
cwtl
lret
enter
das
pop
lahf
dec
cmpb
ret
and
outsl
push
jae
pop
rorl
iret
jle
jl
and
and
dec
fwait
out
xchg
fwait
push
or
jb
mov
mov
fcompl
test
fisttpll
mov
pop
xchg
push
xlat
rcrl
pop
in
push
fdivs
jnp
aad
inc
mull
imul
pusha
xchg
fnstcw
add
jge
aaa
insl
mov
jge
xchg
leave
insl
mov
push
pop
scas
inc
jle
adc
mov
insl
aam
jae
xor
mov
out
cmp
inc
mov
lods
dec
mov
or
xor
mov
ja
and
add
xchg
addb
mov
out
xchg
inc
out
sub
dec
xchg
test
cmp
frstor
fdivr
push
cmp
sub
jmp
dec
out
cmp
mov
add
inc
out
jo
in
das
arpl
lret
lar
sub
into
jp
jno
out
dec
imul
lret
orb
arpl
push
test
sbb
adc
pop
add
mov
and
push
int3
mov
imul
ret
idivl
or
aas
dec
jns
xchg
ljmp
jp
pop
repz
or
pop
xor
cmp
cmp
fdivrl
jo
fcoms
sbb
dec
vmovsd
adc
cmp
push
shlb
repnz
push
sarb
gs
ret
lahf
mov
push
mov
mov
xchg
sub
imul
jnp
adc
cmp
cmp
shrb
xchg
or
mov
push
pop
sub
adc
sahf
mov
push
xor
inc
mov
lods
mov
inc
ret
mov
daa
inc
int3
ja
cmc
stc
dec
test
leave
cmp
lods
xchg
pop
cmpsb
scas
adc
push
cmp
rcrl
aad
mov
gs
sbb
loop
xor
out
pop
insl
pop
lcall
cmpsb
div
les
sub
stc
add
add
repz
lods
insl
add
dec
cmp
push
aad
pop
mov
adc
jle
negb
jae
mov
xchg
pop
mov
mov
add
mov
adc
sub
je
inc
add
add
jbe
shrb
pop
cmp
test
cwtl
popa
cmovs
and
idivb
lock
ja
in
inc
sbb
add
fwait
popl
mov
jo
pushl
push
pop
rorb
imul
dec
gs
in
mov
out
xlat
push
aaa
sub
cs
in
daa
inc
and
and
pop
xchg
pop
orl
ljmp
or
cmpsb
jnp
or
cld
mov
push
inc
jecxz
lds
dec
mov
aaa
cltd
incb
sbb
dec
pop
dec
fldcw
aaa
push
or
sbb
push
hlt
mov
mov
movl
in
xchg
cmp
or
idiv
mov
push
cld
in
sbb
and
notb
das
sahf
jbe
or
daa
popa
mov
out
pushf
xor
shrb
dec
add
push
movsl
das
inc
loop
jno
pop
out
adc
and
jp
lahf
scas
dec
notl
pusha
jne
xor
push
popf
in
repnz
xchg
int
jg
test
adc
mov
add
pop
shll
sahf
jne
sub
mov
inc
mov
aaa
iret
data16
mov
aas
mov
mov
iret
lods
sub
out
push
adc
aaa
push
fmul
out
dec
sub
imul
loopne
ja
sub
nop
jb
jb
out
testl
cmpsl
xor
pop
add
loopne
jb
inc
lock
cld
mov
shlb
jle
insb
fsubs
in
and
pop
xchg
movsl
push
ss
shl
push
ljmp
push
xor
xchg
xchg
hlt
jg
jecxz
dec
sub
adc
mov
lea
enter
sub
fdivrl
or
or
mov
dec
push
pop
push
ret
mov
mov
sahf
clc
mov
lret
loopne
fisubs
xor
jp
jbe
xchg
cmp
push
inc
inc
repz
int3
jp
jecxz
jp
pop
push
sti
mov
out
xor
cmp
popf
jne
xchg
rcl
mov
add
je
push
jle
lock
rep
inc
push
mov
ficompl
dec
mov
sub
push
ja
call
jbe
fcmovnb
xor
aad
dec
or
mov
xchg
ljmp
and
pop
jnp,pt
jo
shl
das
imul
lds
mov
lea
roll
lahf
jecxz
lds
test
mov
pop
dec
loop
repnz
jae
pop
ret
stos
pushf
pop
push
push
fcmove
in
and
mov
inc
in
sbb
rclb
xchg
sbb
out
out
or
arpl
nop
mov
sbb
cli
cmpl
inc
cmp
dec
mov
jmp
movsb
sub
add
ljmp
addr16
pop
iret
push
neg
jno
in
cmpsb
inc
mov
daa
stos
pop
test
push
pop
hlt
mov
mov
inc
push
push
mov
inc
lcall
push
dec
fnsave
test
mov
pop
into
adc
pop
mov
sub
inc
test
addb
jo
inc
test
stc
inc
popf
dec
xor
inc
int3
adc
fstpl
enter
outsl
icebp
cmp
sub
sti
mov
sub
jmp
pop
ret
mov
push
arpl
push
and
ljmp
shll
dec
dec
and
jecxz
push
call
cltd
or
mov
adc
repz
and
or
jge
test
xlat
cmp
jle
loope
cmpsl
mov
cmc
sbb
mov
pop
cmp
aas
inc
jmp
mov
jns
pop
hlt
cmpsb
sahf
cmp
jae
push
xlat
stos
ljmp
aam
out
arpl
cmp
xchg
and
jne
bound
test
js
notl
stc
pop
xchg
mov
out
mov
jae
dec
stos
push
mov
cmp
lahf
stos
lret
lcall
adc
repnz
out
mov
and
xchg
stc
loope
arpl
lods
mov
xchg
push
lods
cmp
inc
xor
lods
mov
test
or
jmp
add
dec
and
aas
sub
sar
and
gs
xor
pop
xchg
imul
mov
pop
ffreep
out
mov
or
insl
jp
outsb
sti
outsb
pop
xchg
fmull
aam
or
push
stos
dec
aaa
adc
lret
into
ret
push
dec
dec
add
data16
mov
or
cwtl
das
std
incl
out
jmp
add
outsl
cli
hlt
sarb
xor
mov
jg
lods
push
adc
rcrb
adc
or
rol
xor
mov
cld
filds
fs
cwtl
jo
pop
sub
icebp
jnp
xor
sub
mov
mov
mov
cli
lret
cmp
lahf
cmpsl
dec
cltd
fildl
add
sub
xorl
xchg
push
aas
cmp
not
icebp
cmp
in
mov
movb
test
lods
mov
das
int3
xor
movsl
dec
mov
ror
jno
inc
push
in
mov
xlat
mov
into
clc
repnz
sub
cli
dec
jecxz
and
xlat
adc
mov
push
xor
pop
push
ret
mov
pop
pop
shlb
push
cmp
adc
add
or
outsb
xor
mov
mov
jo
dec
rolb
pop
into
mov
test
sbb
iret
inc
and
icebp
and
cmp
xor
insl
xor
pop
fldt
mov
scas
cmp
lret
mov
std
loopne
add
popl
cmc
jb
push
pop
mov
jmp
pop
mov
test
mov
cmp
mov
ljmp
leave
in
lock
add
cs
add
mov
pop
xchg
mov
ljmp
mov
jo
inc
add
cltd
int3
ret
xor
xchg
repz
lret
iret
xor
sarl
aad
pop
jne
xchg
cmc
lods
rcll
aas
scas
pop
ds
js
ret
xor
mov
outsb
lea
inc
dec
sar
lods
aas
jmp
mov
jecxz
jno
mov
xchg
jmp
push
fcomps
or
xor
push
push
repz
mov
mov
movsl
sbb
outsb
jb
fldl
mov
cmc
sbb
fdiv
ret
push
mov
mov
cmp
lock
out
imul
mov
push
fldt
lds
out
adc
pop
repnz
adc
cli
jne
loop
fsts
repz
push
pushaw
push
stc
lea
daa
jnp
push
adc
mov
or
dec
xor
into
add
jmp
cmp
pop
dec
cld
imul
mov
in
mov
and
xor
and
dec
mov
push
rcrb
movsl
test
push
jmp
and
pop
into
pop
sbb
mov
dec
jge
lret
pop
add
adc
int3
and
sarb
pop
mov
sub
xorb
call
sub
dec
filds
inc
inc
mov
and
push
xor
cmp
sub
jae
inc
ficoml
or
arpl
test
sbb
testb
jnp
or
push
test
adc
lret
in
adc
xchg
jo
aas
sbb
into
jp
mul
xchg
out
arpl
clc
cltd
add
pop
mov
out
iret
mov
fbld
es
in
lcall
arpl
pop
adc
lods
and
adc
add
pop
jno
popf
jp
ret
stos
nop
shlb
cs
pusha
xchg
das
jno
xor
mov
mov
stos
xchg
aas
adc
lds
pushaw
outsb
push
daa
mov
push
movsl
sub
sbb
sub
and
push
lods
fidivrs
or
sub
mov
fwait
clc
mov
mov
outsb
mov
and
lods
add
lock
dec
mov
jmp
mov
pop
imul
xchg
jns
cltd
jae
out
pop
jmp
aam
into
inc
loope
imul
enter
loopne
xchg
ss
out
cmc
mov
mov
inc
and
or
out
mov
jno
xchg
js
mov
sub
call
rcll
xchg
push
mov
push
fdivrs
cmc
imul
ljmp
repnz
stos
in
adc
dec
jecxz
mov
or
dec
jmp
sub
adc
push
cwtl
jp
popf
popf
adc
inc
enter
outsb
sub
in
jp
je
call
adcb
pop
pop
jno
pusha
test
sahf
cmp
pop
xchg
jmp
push
pop
cltd
popa
out
lahf
pusha
mov
insl
das
push
call
dec
or
mov
xor
outsl
push
mov
jne
fwait
inc
mov
mov
mov
sbb
xchg
pop
aas
imul
sbb
ljmp
mov
call
movsl
and
dec
cmp
icebp
mul
sub
sbb
lods
and
ljmp
popf
mov
jno
adc
ljmp
mov
pusha
jmp
mov
inc
loope
test
or
sbb
les
int3
popa
aaa
lock
mov
cmpsb
lcall
aad
loopne
xchg
adc
int
and
fs
out
shr
ret
add
jbe
daa
xchg
cld
xchg
mov
arpl
loope
push
jecxz
ss
stos
pop
xor
leave
fdivp
inc
add
jmp
cld
push
dec
cmp
xchg
mov
sub
idivl
mov
sub
push
sub
hlt
outsl
adc
lds
repnz
imul
adc
sahf
inc
mov
imul
jnp
mov
inc
fcmove
xchg
add
xchg
jno
idivl
fimuls
mov
xor
mov
xor
cmpb
ljmp
mov
pop
jnp
adc
cld
out
pop
add
lahf
cmp
into
mov
aaa
maxps
mov
out
fdivl
sub
sahf
test
dec
mov
cmp
imull
out
or
add
jb
andl
fdivrs
jno
iret
shl
adc
lds
xor
lods
xor
inc
pop
cmp
icebp
mov
xor
ljmp
ret
bound
ss
das
mov
test
pop
jae
pop
xor
lods
icebp
loopne
cltd
test
fsubr
jae
jmp
mov
es
loop
sbb
iret
hlt
pop
pop
fsubrl
xchg
stos
dec
xor
push
sbb
sti
les
or
cmp
outsl
adc
push
push
xchg
adc
push
movsb
sub
cmp
insb
js
or
cmp
shr
vmread
bswap
ljmp
es
mov
js
xchg
and
outsl
inc
test
fcomps
or
push
orb
ror
sub
mov
jno
inc
adc
cld
shll
pop
sub
sbb
pushf
mov
addl
and
arpl
lock
mov
inc
mov
sbb
xchg
sarl
int
mov
sti
sub
mov
and
mov
and
mov
lret
and
neg
inc
dec
rcll
adc
xchg
mov
aas
cmpsl
mov
or
xchg
xor
sarl
or
negb
jns
push
fs
out
dec
fsts
in
dec
add
leave
pop
sub
mov
xchg
imul
fldcw
stos
inc
sti
mov
dec
and
push
push
dec
in
inc
lods
sarl
shrb
pop
jp
fnstcw
sbb
or
cmp
leave
mov
sti
push
insl
aas
pop
ret
dec
mov
jmp
inc
mov
or
lods
pop
lcall
repz
inc
dec
adc
adc
aaa
insl
aas
sub
jnp
push
mov
aad
pop
inc
add
mov
and
mov
orb
xor
mov
lea
pop
mov
pop
fiaddl
sbb
fwait
adc
imull
setae
cvttps2pi
int3
sub
push
orps
cs
mov
mov
outsb
clc
xor
push
mov
add
popf
mov
push
sub
loope
pop
out
pop
in
fsub
mov
mov
xor
inc
xchg
dec
into
push
mov
in
dec
add
rolb
jns
sti
stos
mov
loopne
push
pop
push
fs
xor
stos
or
in
push
jmp
call
ficoms
adc
cwtl
pusha
cmp
inc
and
sbb
jo
rorl
loop
push
pop
and
pop
ret
jmp
sub
pop
jo
jg
xor
imul
or
leave
jae
inc
mov
mov
in
lock
rcll
dec
sbb
scas
sbb
mov
rcr
mov
or
pop
shrd
scas
outsl
sahf
cs
loopne
push
add
adc
cmp
mov
push
cmpsb
inc
test
cmp
jg
xor
mov
ret
cmp
arpl
push
testb
inc
mov
lcall
add
cli
mov
iret
sub
outsb
cmp
mov
mov
fadds
jle
adc
mov
in
mov
adc
fadds
cltd
xor
add
and
cmp
outsb
inc
lret
cltd
andb
lock
div
push
ret
outsb
iret
out
jp
jb
or
testl
ljmp
inc
shlb
aas
push
cmp
cli
pop
xchg
adc
in
test
movsl
out
push
dec
pop
dec
push
push
aas
sub
and
push
cmp
xchg
sub
movsl
fisubl
pop
xor
in
xor
jle
inc
int
dec
clc
pop
movsb
inc
mov
jecxz
mov
pop
cmp
out
lahf
mov
imul
jns
clc
inc
out
or
into
fnstenv
sbb
cmp
ds
int
pop
aad
mulb
je
push
lret
mov
cmpsb
sub
negl
adc
insb
jecxz
int3
cwtl
adc
popa
lahf
or
xchg
fdivs
pop
inc
add
mov
rcrb
out
pop
dec
dec
inc
in
sbb
mov
loope
add
cmp
lea
outsl
and
test
mov
mov
sub
pop
xchg
dec
add
ss
inc
outsb
gs
ret
cmp
lea
adc
insl
aaa
shlb
xchg
addb
cmp
loope
in
pop
insl
sbb
lcall
xlat
mov
jecxz
arpl
dec
push
aas
jbe
loopne
dec
jno
dec
xchg
jle
push
xchg
inc
push
loop
in
jmp
cli
or
ret
inc
bound
fucomp
sbb
cmp
sbb
jne
jb
rol
loop
jmp
test
cmpsl
cmp
adc
xorl
push
push
rorw
aam
push
out
imul
mov
fldcw
loopne
jecxz
fwait
pop
ds
dec
jae
jmp
pop
lcall
fcomps
cmp
push
cmovs
and
pop
aam
daa
jno
adcl
loopne
test
and
lea
cmpsl
fisubrl
negl
pop
cmp
stos
jno
imul
mov
mov
ret
jl
dec
mov
sub
ror
push
and
sbb
and
pushf
pop
ds
hlt
jnp
lds
adc
dec
ret
mov
rcrl
loopne
insb
faddl
fwait
orl
iret
inc
nop
jp
pop
call
sbbb
push
push
or
or
arpl
pop
adc
pop
pop
movsl
pop
push
fiaddl
inc
pop
in
int3
dec
and
jbe
and
sbb
outsb
mov
push
iret
dec
dec
xor
adc
in
or
and
imul
idiv
dec
add
add
loop
sbb
cmp
pop
pop
add
fdiv
push
outsb
inc
xor
sub
scas
inc
in
cmp
pop
pop
push
add
hlt
insl
stos
push
mov
jb
jle
mov
add
lock
out
int3
lcall
fs
xchg
add
push
je
inc
push
fs
inc
adc
cmp
cmp
pop
or
push
nop
xchg
add
xchg
fwait
rclb
pop
out
fisttpll
or
jmp
mov
int3
pop
xchg
add
push
in
dec
mov
outsb
mov
dec
bound
cmp
aaa
cmpsl
mov
sbb
mov
ss
sbb
mov
xlat
jns
adc
dec
sti
out
js
xchg
mov
push
arpl
insl
sti
inc
sbb
ret
lret
mov
mov
or
mov
stc
lods
ret
jb
mov
push
dec
cltd
add
sbb
in
and
cs
aaa
jo
out
lcall
cmpsl
in
jno
lcall
or
pushf
or
cmc
imul
call
pusha
and
negl
icebp
adc
dec
dec
push
mov
pop
jecxz
push
adc
mov
outsl
cmpsw
mov
daa
mov
mov
cmpsl
sarb
jg
cmpsl
inc
push
addr16
sub
xchg
stos
loope
and
std
mov
out
aad
pop
sub
dec
mov
sub
mov
mov
push
pop
cli
fstps
ret
xor
xchg
outsb
xor
and
push
aam
mov
loopne
aad
ljmp
mov
or
icebp
xchg
inc
fs
cwtl
decb
int
fcoms
sbb
sti
fcompl
cmp
decl
dec
xor
inc
mov
pop
and
popf
movsl
push
push
adc
cwtl
aad
fimull
adc
and
ret
sub
jnp
push
fmuls
mov
dec
xor
or
sub
lods
insb
dec
add
push
outsl
stc
fldt
shl
jno
pop
ret
lret
cmpl
test
xchg
into
call
in
loopne
adc
dec
mov
movsb
mov
push
sbb
bound
sarl
negl
xchg
mov
outsl
int3
jle
cwtl
mov
jmp
ja
loope
icebp
add
outsb
test
mov
icebp
jmp
or
loop
orb
aaa
jae
jb
dec
xchg
sub
pop
out
arpl
outsl
add
rcll
test
mov
and
adc
mov
pusha
fwait
adc
mov
sbb
sub
addr16
roll
loope
shlb
lcall
sbb
inc
dec
jl
andb
mov
andl
add
jne
push
mov
add
bound
jns
movsb
ljmp
mov
cmp
xor
mov
mov
lahf
mov
push
adc
mov
addr16
xor
sbb
sbb
mov
out
push
push
rclb
jl
xchg
out
xchg
xchg
mov
pop
out
xor
cmp
arpl
cmpsl
adc
aas
jne
inc
insl
aaa
jge
js
call
out
repnz
fsubrp
iret
xchg
aam
adc
popa
mov
shr
jge
rol
xor
jbe
lea
cltd
sahf
cmpsl
push
push
cmp
inc
and
add
sbb
xor
cltd
mov
nop
data16
pusha
mov
cwtl
mov
ret
pop
stc
loopne
mov
and
in
mov
fs
aas
repz
xorl
mov
sub
inc
cmp
add
aam
and
push
sti
ja
shlb
mov
lret
adc
xchg
adc
aam
int
and
adc
dec
in
lock
inc
fstpt
add
dec
lods
lcall
out
mov
lods
jae
pop
cli
addb
dec
cld
call
enter
lcall
insb
das
cwtl
fsubrs
or
or
and
mov
out
push
sbb
shl
scas
cwtl
rolb
mov
jmp
lds
int3
xlat
jge
cmp
sbb
fiaddl
and
stc
adc
iret
orb
inc
gs
movsl
sahf
call
jb
xchg
jmp
pop
in
imul
stos
js
sbbl
sub
mov
mov
dec
mov
fildl
dec
cmpsl
sti
mov
clc
cmp
and
xor
pop
jae
inc
test
lds
pop
inc
outsl
pop
and
sarb
stc
jae
call
stc
push
add
or
loopne
pop
jae
into
test
pop
cwtl
sbb
cmc
and
aaa
xchg
cmpsb
adc
fstl
jp
lcall
fdivr
fsubs
shll
je
stos
dec
imul
pop
sarb
mov
dec
insl
insl
lahf
divl
shll
mov
loop
cwtl
fwait
jns
lret
cmp
mov
adc
out
adc
lcall
lods
xchg
and
or
cld
pop
jge
push
clc
xchg
mov
and
inc
adcb
aaa
pop
jne
xchg
cmpsl
or
adc
inc
or
arpl
push
push
add
bound
mov
ljmp
cwtl
jne
lahf
cmp
pop
pop
es
mov
loope
loope
ret
xchg
mov
xor
push
movsl
ret
data16
jmp
jle
out
pop
fsubrl
mov
repnz
loop
add
or
mov
lods
orl
loope
arpl
push
sub
mov
sbb
xor
xchg
in
push
filds
testb
pop
xchg
jecxz
xor
mov
pop
gs
ja
lret
insl
cmpsb
adc
mov
jle
aas
jne
lock
or
testb
inc
and
into
add
imul
sahf
movsb
sub
fldcw
scas
inc
aad
mov
mov
pushf
test
dec
mov
mov
adc
mov
cmp
lahf
sbb
xchg
cmpsb
xchg
fcompl
stos
lcall
mov
out
lret
outsl
dec
cld
stos
scas
sysret
fimull
xor
shrl
test
xchg
push
mov
out
jne
mov
add
push
pop
mov
push
xchg
das
jbe
xor
mov
mov
and
jecxz
fcoml
mov
and
push
adc
and
scas
add
out
mov
call
ljmp
add
jb
je
dec
xor
jb
arpl
push
adc
rcll
icebp
leave
addr16
test
fisttpll
cmc
sbb
aas
jmp
in
into
lahf
push
push
negb
adc
dec
jge
stos
mov
out
test
mov
nop
inc
jne
mov
scas
add
out
dec
dec
out
pop
xor
xchg
cmpsl
xor
jne
cs
movsl
mov
fistpll
dec
dec
cli
cmc
or
pop
out
cmc
or
pusha
inc
aam
out
ret
mov
xchg
in
test
and
es
push
popf
mov
push
lods
loopne
push
popf
or
ljmp
stos
in
xor
push
lock
stos
xor
mov
insb
out
subb
addr16
pop
out
repz
inc
jge
mov
adc
or
xrelease
cmpl
push
mov
fwait
in
popa
ja
out
xchg
lds
xorb
xchg
sbb
sub
sarl
sti
lds
pop
or
mov
lock
repz
cmp
subb
mov
cltd
push
loop
outsb
cmpsb
arpl
pop
out
cli
xchg
add
into
sbb
into
or
pavgb
loopne
imulb
inc
pop
mov
add
pushf
icebp
test
jmp
sub
jnp
mov
inc
addb
in
push
popf
or
stc
je
fiaddl
int
cltd
lret
daa
add
lahf
inc
ss
sarb
mov
ret
js
jns
jb
inc
pop
adc
inc
add
aam
call
andl
add
in
in
sub
mov
xchg
inc
dec
xlat
js
xchg
or
jp
in
sahf
mov
mov
jle
fs
push
mov
or
jno
add
lock
or
jg
test
jns
push
es
in
push
addb
xorb
mov
push
lods
and
push
ss
push
xor
jo
daa
xchg
negl
lds
clc
out
ljmp
jle
outsl
in
xor
mov
das
lods
jns
pop
je
andb
jmp
inc
inc
add
push
lods
or
mov
push
push
adcl
outsb
movsb
fmul
pop
test
sub
adc
nop
and
je
dec
mov
inc
fwait
out
jnp
lds
dec
inc
mov
add
cmpl
xchg
cmpsl
sbb
sbb
in
repz
out
fidivrs
push
jmp
cmc
inc
test
bound
mov
xor
fnstenv
adc
xchg
or
push
jae
decl
inc
scas
bnd
inc
loope
push
arpl
loope
in
dec
xor
pop
cmp
js
in
rolb
fs
je
jmp
gs
mov
and
and
popa
cmpl
xlat
cmp
xlat
mov
or
js
loope
push
mov
in
mov
je
ja
ret
cmp
sub
xchg
cmp
mov
out
int
push
subw
sub
jl
mov
push
inc
mov
loop
jbe
mov
xor
mov
xor
and
movsl
add
and
push
fildl
xor
add
imul
adc
das
push
cmc
adc
cmp
ljmp
sub
push
out
out
jmp
rol
adc
mov
insb
cmovp
js
push
sti
jmp
xor
jle
adc
sbb
insl
inc
faddl
xchg
test
inc
xchg
in
dec
lret
jne
jns
cld
or
and
out
test
incb
dec
fs
sbb
jae
in
jae
imull
shll
cmc
xchg
out
cld
pusha
icebp
push
ss
or
pop
lock
mov
sbb
int
adc
inc
iret
out
jge
nop
or
mov
les
js
jle
cmpsb
and
mov
inc
jns
sub
and
into
mov
add
addr16
inc
xchg
mov
jne
mov
add
mov
fstl
and
clc
rclb
mov
jl
cmc
and
mov
xchg
cltd
push
sti
lahf
std
sub
or
sbb
daa
cmp
and
jo
bound
sbb
pop
jo
push
dec
mov
loop
mov
insl
call
pop
mov
and
cmpsl
shrb
push
data16
or
aaa
adc
xor
test
aaa
push
je
pop
scas
and
fdivrs
xchg
orb
cwtl
call
xchg
lret
loopne
lods
stos
pop
cvtps2pd
out
jae
outsl
mov
in
mov
popf
into
mov
aas
and
stc
repnz
mov
lret
jmp
push
adc
push
xor
xlat
add
aas
fmuls
inc
pushf
and
push
pop
enter
inc
jae
xor
int
cmpsl
and
sbb
iret
pop
add
mov
cmpsl
add
jbe
aaa
xor
vmulpd
ljmp
inc
ja
andl
xchg
jb
sbb
ds
test
addr16
xchg
insb
push
push
ss
sbb
jns
pop
push
enter
xchg
aad
sti
cmc
adcl
and
into
cmc
into
and
and
push
mov
data16
mov
js
movsl
ret
pop
xchg
das
sbbb
pop
ljmp
push
jg
push
imul
js
sub
fimull
out
inc
jecxz
loopne
arpl
pop
fyl2xp1
enter
ds
in
dec
fdivl
sbb
mov
dec
popa
int3
mov
mov
test
icebp
add
loop
lret
cmp
lea
jg
and
scas
lea
mov
push
fdivl
jae
test
cmpsl
mov
lret
aad
out
icebp
dec
cmp
sub
cmp
or
push
or
xchg
and
js
outsb
divl
jns
push
jns
adcl
sub
leave
jns
test
jo
cmpsb
push
sbb
mov
pop
mov
mov
mov
mov
scas
cli
call
dec
and
lock
andl
dec
pop
test
gs
insb
loope
outsl
mov
sti
subb
shll
fsubp
jge
mov
stos
add
ret
sbb
sub
adc
mov
shll
xchg
stos
outsb
js
lods
dec
insb
fildll
pop
sub
pop
jecxz
mov
mov
test
pop
cmp
int3
lret
pushw
and
and
inc
sbb
lock
push
xchg
sub
int3
les
test
shlb
repz
fldenv
test
dec
mov
mov
rolb
sbb
sub
jne
ss
hlt
adc
pushf
jle
sbb
jae
rclb
sub
js
outsb
mov
scas
in
sbb
cs
dec
les
shll
mov
sarl
gs
jae
dec
jo
out
fyl2x
out
adc
push
test
in
nop
scas
xor
in
sbb
lcall
cmp
cwtl
cmp
cwtl
mov
in
gs
sar
xor
scas
mov
push
pop
mov
notl
lea
sti
les
orl
outsb
roll
mov
int
addl
push
data16
mov
inc
or
popa
imul
rclb
mov
nop
insb
push
mov
ss
push
push
or
cli
roll
dec
fwait
fwait
push
movsb
sbb
dec
push
fistps
push
addr16
in
das
fists
int3
shlb
jecxz
inc
sarb
enter
sub
jp
add
xchg
inc
or
fsubl
jo
mov
push
idivb
dec
jp
mov
aas
xchg
push
cmp
enter
cmp
pop
fiadds
pop
mov
jmp
mov
aaa
shrl
imul
ds
fs
push
cmp
test
dec
mov
or
lds
sti
je
mov
mov
xor
push
or
and
xlat
outsl
xor
push
in
fimull
push
mov
cmpsb
pop
push
aas
fwait
inc
sarl
pusha
movsl
push
xor
cltd
cltd
fistps
repz
dec
in
jmp
sbb
addb
js
add
jo
aam
xchg
mov
imulb
dec
push
mov
and
int
stos
orb
push
push
mov
inc
xchg
sbb
jp
jne
sbb
xlat
stos
leave
in
pop
negl
outsl
sub
loopne
loop
push
enter
mov
xchg
into
cmpsl
inc
sbb
xchg
sti
and
mov
mov
inc
mov
xchg
xlat
cmp
inc
mov
cli
out
aam
in
pop
dec
sahf
cmpl
aas
out
fs
cmpb
mov
mov
hlt
xchg
pusha
pop
or
jg
mov
negb
and
out
mov
leave
and
cmc
xor
push
xchg
mov
and
mov
popf
xchg
dec
mov
insl
or
addb
sbb
xbegin
jecxz
into
dec
dec
push
sarb
add
adc
mov
xor
and
das
out
inc
ficomps
pop
sbb
mov
jge
mov
pop
pushf
scas
fildl
test
sub
stc
xchg
movsb
roll
xor
lahf
mov
je
scas
push
jnp
xor
and
jae
mov
push
imulb
int
xlat
and
movsl
dec
jl
fnstsw
adc
push
fists
mov
int3
sbb
jl
inc
mov
adc
scas
mov
jbe
fwait
clc
add
gs
sub
mov
setne
push
mov
sub
push
lds
and
lds
push
inc
and
cmp
mov
push
jbe
dec
stos
mov
test
in
aas
loopne
mov
ret
mov
gs
aas
sub
cmpsb
cmpsb
dec
out
sti
jnp
ror
inc
inc
pop
mov
popa
hlt
xor
andl
gs
cmc
arpl
lods
dec
movsb
mov
in
idivl
xor
ja
mov
adc
adc
sub
frstor
xchg
cwtl
loop
sub
imul
lret
mov
test
jb
sar
sub
cmp
sub
dec
fwait
scas
mov
mov
pop
ja
add
outsl
clc
out
xchg
xlat
sbb
insb
enter
xor
inc
imul
aas
popf
mov
pushf
cmp
xchg
lds
pushf
fnsave
aam
repz
xchg
cwtl
adc
cli
arpl
testb
pop
inc
xor
mov
cmpsl
jnp
mov
jns
cli
and
pop
mov
fwait
add
cmpsb
dec
fadd
add
xchg
jg
fidivrl
enter
mov
lds
add
sub
in
aam
imul
mov
pop
and
outsb
inc
inc
pop
adc
scas
adc
xchg
mov
filds
xor
shll
pop
popf
mov
movsl
decl
lret
sbb
adc
mov
rcl
and
pop
xchg
lea
add
js
push
mov
fs
notl
addr16
mov
lea
jg
xor
mov
cmp
jmp
stos
push
and
call
xchg
test
jmp
jecxz
ljmp
lock
adc
lock
cs
push
push
adc
add
xchg
ja
jns
pop
psubw
push
loope
imul
mov
popl
ja
or
or
lods
xchg
cmp
js
es
clc
adc
jl
inc
movsl
sti
insb
push
mov
jle
pop
push
sahf
js
iret
xor
pushl
xor
lods
inc
pop
pop
lods
dec
adc
sbb
aas
subl
dec
add
xchg
jge
xchg
std
sbb
and
fwait
xchg
popa
mov
adc
scas
or
das
push
mov
mov
push
orb
cmp
mov
in
ret
jg
sarb
or
daa
inc
fists
jns
sub
mov
out
imul
std
xchg
jno
cmp
xor
push
in
sub
lret
cmp
jae
add
ret
mov
xchg
dec
jmp
mov
sbb
out
stos
xchg
jae
sahf
out
sbb
mov
push
adc
add
sahf
push
xor
and
in
jae
out
pop
test
fwait
mov
xchg
stos
mov
mov
rcl
push
in
mov
les
cmc
pushf
mov
or
mov
pushf
cmp
clc
mov
and
xor
xchg
sub
outsb
jae
push
in
popf
adc
jb
xchg
dec
loope
loopne
hlt
and
fisubs
jne
iret
outsb
xor
add
sub
mov
shrb
data16
mov
sub
js
mov
stos
push
adc
jl
lret
loope
aaa
adc
pop
push
or
mov
ljmp
pop
out
xor
bound
test
andl
daa
inc
xlat
fstpl
lea
sub
dec
sbb
inc
insb
push
xchg
pop
and
stc
pavgw
sub
adc
test
out
add
outsb
mov
xchg
pushf
mov
out
rorb
into
and
into
inc
cltd
xor
add
pop
stos
sub
push
lds
ret
insb
das
cld
pushf
pop
les
lock
mov
mov
outsb
incb
jbe
or
icebp
rclb
mov
cs
fcomp
push
adc
ret
pop
push
or
in
and
out
hlt
adc
xchg
jge
mov
rcll
cmp
pop
sbb
lock
sbb
adc
aad
loopne
jo
fnstenv
sbb
push
inc
rolb
mov
jbe
dec
and
cld
movsb
loopne
les
xchg
addr16
push
dec
clc
cmc
inc
pop
push
dec
cmpsl
jns
push
xchg
lods
mov
sbb
jne
push
pop
in
or
div
enter
loope
scas
cwtl
lods
lock
mov
push
aad
call
push
lds
xor
jbe
push
in
inc
pop
xor
push
or
je
imul
lret
test
nop
loope
cmp
jl
pop
psrad
test
add
mul
and
add
sbb
ret
push
idiv
test
mov
mov
adc
insl
pop
clc
es
push
push
repz
push
xchg
push
fldl
pop
ds
xor
out
adc
fidivrs
dec
push
daa
int3
sbb
jnp
in
cmpsb
pop
or
test
mov
in
in
xor
int
ss
arpl
pushf
jno
scas
outsl
fwait
xchg
mov
jne
lret
mov
add
inc
fisttps
fwait
loop
aas
stos
push
inc
std
jl
outsb
and
push
lea
pop
scas
add
outsb
jo
popf
cs
and
xor
pusha
das
jne
test
and
mov
dec
push
cld
add
jno
mov
inc
aad
mov
sahf
push
out
loope
sub
xchg
shl
push
movsl
or
or
push
inc
xor
aam
push
mov
test
push
and
xchg
sahf
inc
xchg
mov
lods
incl
mov
icebp
ror
xor
jmp
fcompl
dec
mov
sahf
cmp
stos
out
orb
ja
aad
lahf
fyl2x
or
mov
pop
xchg
mov
loopne
sub
adc
pop
subb
cmp
adc
sahf
or
push
sbb
mov
jne
mov
push
fistpl
xor
and
push
out
in
loop
dec
mov
dec
or
mov
daa
out
in
jg
and
iret
adc
jge
loopne
les
popf
lock
test
ret
leave
cmp
dec
xchg
frstor
cltd
clc
lret
jns
add
and
inc
popf
pushf
jne
mov
cwtl
enter
stos
xchg
adc
mov
jmp
arpl
xchg
fmulp
mov
jp
jns
andl
push
xlat
sub
pop
stc
les
xchg
imul
fwait
repz
dec
popa
push
jae
fnstsw
into
push
pushf
jl
ss
mov
ds
push
rolb
std
dec
xchg
adc
jmp
sbbb
mov
jnp
bound
pop
mov
sbb
lcall
test
into
or
movlps
pop
add
add
cmc
fnstenv
xor
or
shlb
fisttpll
sbb
cmc
lcall
dec
aaa
dec
xlat
loopne
adc
mov
inc
inc
movsl
mov
mov
jle
pop
int3
call
movsl
jb
out
enter
push
pop
in
push
sub
mov
jmp
xorl
lods
roll
push
stos
or
jb
js
lahf
pop
adc
mov
ret
xor
loop
dec
or
push
into
push
sbb
cmp
or
sbb
jmp
xchg
xor
pusha
adc
pop
sub
pop
insb
jp
pop
push
add
inc
pop
xchg
cmp
rorl
adc
mov
xor
stc
push
mov
sub
mov
mov
mov
xchg
jecxz
ret
add
jo
je
fistpl
shlb
mov
jnp
pop
test
icebp
mov
push
pop
mov
test
test
ds
inc
and
sub
push
stos
inc
sub
subb
dec
repnz
jg
loope
adc
add
mov
shll
mov
mov
mov
mov
sub
jne
not
sub
je
xor
imul
cmp
jnp
rcrl
push
mov
push
cmp
cmpsb
pop
popl
aam
stc
decb
push
mov
mov
and
mov
lods
cmp
pop
fstl
and
xor
jl
inc
sub
arpl
and
idivb
imul
inc
pop
cmpsl
loope
clc
xchg
inc
jno
jge
std
pop
psubb
sti
test
das
ror
jb
sub
xchg
and
sub
inc
pushf
push
aad
fadd
addr16
ret
aaa
fmuls
rcrl
mov
out
scas
popa
adc
mov
in
mov
or
fs
sub
lock
mov
sbb
push
or
jg
jo
push
jle
int3
popa
or
jno
idivb
cmp
push
out
mov
lret
clc
add
mov
hlt
outsl
and
jne
sbb
nop
cltd
pop
cmc
je
jmp
pop
fxch
cmpsl
rep
xchg
dec
out
push
icebp
pop
pandn
push
iret
stos
imul
add
nop
jo
lea
shll
jg
rorl
push
add
scas
andb
leave
mov
dec
cmp
or
rorl
jbe
ljmp
pop
jmp
sub
test
mov
and
adc
mov
je
stos
xor
int
mov
inc
adc
test
xchg
out
adc
jae
shrl
jle
std
mov
insb
push
cmp
push
sub
hlt
cli
cmp
cmpsl
fidivrl
iret
add
stos
sti
in
cwtl
adc
imul
xchg
arpl
pop
pop
mov
fstl
xor
xchg
outsl
inc
icebp
cs
jno
or
lods
dec
scas
sbb
mov
clc
xor
out
fwait
subb
cmpl
icebp
jl
push
mov
jnp
mov
movsb
mov
mov
push
jb
xor
xchg
pop
lock
lcall
outsl
mov
xchg
cwtl
repnz
pusha
jno
jne
in
out
mov
addr16
aad
push
pusha
cmp
jp
inc
and
xchg
sbb
cmpsb
cwtl
fwait
sbb
xchg
pop
mov
in
decl
add
ja
insl
add
ret
test
repnz
dec
xchg
mov
xor
cmpsb
jbe
mov
sub
roll
dec
addr16
adc
stos
aad
in
jns
in
cli
stos
icebp
mov
xchg
mov
cmpsl
xchg
fstl
cmp
mov
scas
jmp
push
test
sahf
shrl
push
lods
sbb
cmp
sub
xor
xchg
add
imul
pushf
sub
jno
or
test
mov
pushf
mov
mov
inc
out
popa
test
fcmovbe
frstor
enter
cmp
fisttps
test
push
cmpsl
js
mov
pop
inc
push
shll
or
inc
mov
pop
inc
xor
imul
sub
xchg
cltd
sar
jp
add
into
jns
add
in
cmp
add
dec
cmp
idivb
sub
jo
lcall
add
lock
in
hlt
push
inc
div
call
fdivp
push
outsb
adc
in
test
and
and
pop
fmuls
mov
fwait
data16
inc
mov
aam
push
xchg
sbb
cmp
mov
filds
sbb
sub
xchg
jns
add
xchg
cld
and
mov
fimull
inc
orb
shr
cmp
xor
loopne
ret
mov
lods
push
outsl
cli
cld
push
aaa
xor
pop
ret
and
movsl
mov
xlat
pop
push
gs
pop
notl
inc
sub
inc
js
mov
pop
pop
push
sbbl
pop
mov
jle
mov
and
imul
ret
xor
cwtl
hlt
jg
mov
inc
insb
and
xor
dec
out
add
mov
push
jmp
ret
addr16
mov
movsl
gs
xchg
add
xor
das
inc
jno
xchg
and
scas
inc
jge
jnp
test
clc
in
enter
cmpsb
incl
icebp
jp
add
cwtl
xor
in
scas
repz
push
in
mov
out
push
gs
or
add
js
imul
fidivrl
ja
mov
sbb
xor
adc
lea
cmpb
xchg
mov
or
nop
addr16
add
ja
jg
push
xor
loop
mov
mov
js
pop
imul
addr16
arpl
jmp
nop
mov
ljmp
pop
mov
cltd
mov
mov
adc
and
jns
mov
mov
iret
dec
xchg
test
cmc
jne
mov
jp
subps
sbb
mov
pop
repz
fs
idivl
daa
xchg
imulb
ja
mov
fwait
clc
dec
fadds
cs
dec
hlt
add
mov
hlt
outsl
dec
pop
stc
dec
cmp
dec
xchg
lock
adcb
mov
adc
and
cld
leave
nop
jl
iret
aam
lahf
aad
enter
notl
jno
jne
inc
fdivr
mov
add
jns
fxch
jp
push
andl
jno
movsb
hlt
movsb
or
push
lret
xor
mov
mov
sbb
fidivrs
sub
lcall
lret
sbb
fcmovu
test
orl
inc
jmp
test
ret
movsb
xorb
test
sbb
out
xchg
mov
movsb
daa
push
dec
sbb
pop
jnp
loope
sbb
pop
mov
sub
cmpsb
icebp
mov
dec
std
jb
jp
fmuls
mov
pop
test
loope
into
movb
insb
fcoms
pop
mov
adc
stos
mov
adcl
into
jge
push
sbb
adc
inc
call
ja
mov
ss
mov
mov
popf
mov
xor
inc
jecxz
mov
imul
adc
ret
pusha
lds
les
cwtl
jg
xchg
and
sahf
neg
mov
xor
scas
in
xor
sub
adc
add
rcl
mov
pushf
pop
mov
iret
int
lcall
sti
or
fadds
fcmovne
dec
sub
pop
bound
pop
js
dec
test
pusha
leave
out
pslld
fcoms
scas
cltd
enter
sahf
insl
mov
das
outsb
stos
add
in
sub
mov
in
fwait
test
clc
or
push
pop
cmp
ror
lods
cmp
imul
fwait
or
test
pop
outsl
pop
lahf
mov
dec
test
push
insl
in
adc
or
ficoml
jns
dec
sbb
mov
sbb
add
je
loop
cltd
push
adc
subb
fcoml
scas
jae
hlt
lret
js
ljmp
ss
sahf
lcall
cmpsl
xor
push
jge
sub
lret
test
cmp
sub
adc
sbb
les
lods
fcomps
in
jns
and
std
xor
movsb
xchg
sub
adcl
jg
xor
je
outsl
or
repz
mov
add
in
cltd
cmp
and
shrb
cli
outsl
clc
jae
xchg
ret
fistpll
xor
pushf
bound
xor
sub
xchg
ds
xorl
outsb
jecxz
jae
lock
outsl
and
mov
inc
nop
daa
ljmp
mov
mov
dec
jge
sub
xor
cmp
adc
out
mov
mov
inc
adc
mov
addr16
loope
fs
fmull
decl
push
mov
movsb
lahf
xchg
inc
cmp
adc
lds
cwtl
addr16
xchg
pop
in
or
jne
cmp
add
test
icebp
mov
xor
mov
push
cli
fwait
pop
addr16
adc
out
mov
mov
jnp
inc
fwait
mov
out
jp
nop
xor
push
std
mov
mov
push
test
into
adc
or
outsb
pop
or
addr16
in
cmp
std
lock
int
insl
fildl
adc
stc
into
lods
scas
fs
iret
cmp
shl
or
stc
or
mov
arpl
sbb
sub
sub
jae
sub
cli
test
mov
lock
jle
xor
xorl
out
xor
lods
ret
in
and
dec
xchg
mov
adc
loope
stos
push
push
inc
std
stos
pop
xor
into
ja
sub
imul
stos
push
test
imul
subb
dec
loopne
xor
xor
nop
sub
lods
mov
out
dec
or
cmp
stc
test
pop
sahf
and
adc
in
adc
sarb
xchg
aam
cld
popa
jge
andl
ljmp
cmp
repnz
loop
push
mov
jbe
les
jl
ljmp
dec
hlt
pop
push
adc
mov
scas
movsl
pop
inc
in
fdivl
aad
mov
push
mov
cmp
insb
or
cmp
lahf
fstpt
lcall
bnd
lea
shrb
mov
dec
dec
xor
pop
sti
sub
mov
xchg
mov
rolb
mov
cmp
ss
hlt
mov
clc
out
outsb
scas
xchg
add
and
insb
mov
aad
subl
mov
fiadds
movsb
mov
subb
pop
dec
out
xor
and
xchg
scas
jecxz
and
add
ret
jl
movsl
in
add
lahf
lea
out
test
mov
adc
popf
enter
pop
shl
sub
int
adc
xlat
jns
sub
insb
dec
adc
push
int3
push
out
mov
mov
fdivl
pop
data16
dec
mov
std
sub
daa
lret
sbb
std
arpl
cmp
mov
in
out
sub
scas
cli
testb
mov
stos
push
push
pop
pop
fisubl
lahf
cmpsl
fwait
hlt
mov
testl
sahf
adc
pop
aad
or
cmpsl
int3
sub
insw
sbb
fcmovnu
push
jecxz
ret
inc
mov
mov
sahf
and
icebp
dec
and
add
les
pop
ds
aam
adc
fdivrp
lret
sbb
insl
mov
orb
mov
pop
dec
pop
test
out
add
lret
shll
add
or
movsb
mov
dec
mov
sub
push
clc
dec
mov
fstpl
xchg
ret
xor
sahf
ja
pop
and
fistl
iret
aad
sbbl
push
xchg
fwait
push
mov
mov
jne
lds
and
dec
ret
mov
mov
jo
js
pop
mov
dec
cmp
ficomps
push
jmp
mov
les
mov
mov
add
adc
rcll
lds
add
iret
add
pop
cmpsb
xchg
jne
mov
shrl
push
gs
mov
pop
jno
push
mov
lods
or
dec
cmp
add
fsub
jnp
pop
push
mov
push
dec
adc
in
aas
or
stos
mov
cli
pop
outsb
adc
push
mov
mov
jp
dec
int3
inc
push
fcoms
mov
mov
cmp
push
push
insl
dec
sub
shrb
rcrl
adc
fs
leave
mov
pop
repnz
daa
xorl
push
jmp
outsb
mov
inc
lcall
repz
add
jge
call
lds
outsb
arpl
adc
mov
fldt
cmp
into
pop
cmp
or
mov
cmp
aam
pop
out
testl
cmpsb
insb
ljmp
repnz
add
into
jno
cmp
sbb
test
xchg
mov
aas
push
push
or
mov
notb
xchg
mov
shlb
add
mov
cmp
jmp
loop
xchg
out
data16
dec
jnp
or
cmp
daa
xchg
push
addr16
add
bound
cmp
gs
push
loopne
sub
mov
test
std
data16
fnstenv
push
fwait
sub
popa
arpl
movsl
into
iret
fisubl
fbstp
push
jge
std
pop
ror
jl
data16
mov
push
fisubl
and
adc
enter
outsb
pop
xchg
test
push
adc
and
and
cmp
push
xlat
je
lock
cmp
pop
outsl
or
push
jne
add
mov
jle
add
jae
sbb
ret
mov
jo
pop
sahf
sub
lret
sub
xchg
aam
sub
sub
mov
push
popa
jl
xor
outsl
mov
test
add
std
iret
mov
mull
cmp
mov
cmp
xchg
fnstsw
push
movsl
hlt
xor
jp
dec
rorl
into
popf
pushf
insl
test
imul
xchg
sbb
andl
inc
push
add
in
ret
and
enter
outsb
xchg
fadd
mov
xchg
sub
jbe
xchg
sbb
pushf
rorb
dec
mov
aas
out
pop
jmp
std
out
push
popa
cmpb
sbb
mov
je
rorb
push
fwait
adc
std
outsb
pop
push
mov
das
mov
fdivrl
sbbb
repz
repz
push
mov
call
ret
sbb
imul
pop
or
jb
fadd
lds
addr16
in
std
stc
ror
push
mov
movsl
push
outsb
add
out
dec
xchg
pop
icebp
popa
ljmp
daa
add
nop
sbb
cs
dec
sbb
mov
ss
pop
insl
lods
callw
cwtl
adc
test
inc
add
into
les
sub
aam
fisubs
xor
gs
mov
or
shr
dec
in
and
jo
sahf
xor
inc
xchg
pop
sub
int
fbstp
mov
icebp
inc
in
fiaddl
sbb
xor
dec
rorl
or
je
ss
add
or
inc
sbb
jecxz
inc
jle
mov
cmp
stc
mov
add
xchg
stos
out
push
jecxz
ret
sti
mov
imul
dec
or
xchg
xchg
inc
xor
jmp
data16
lret
jbe
int
or
ficoms
les
mov
popa
jb,pn
cwtl
or
scas
test
in
out
fidivs
stos
lea
inc
rcr
xor
inc
loope
popa
pop
jmp
jnp
sub
lea
movsb
ficomps
xchg
lret
xchg
iret
inc
mov
lods
out
cli
jnp
sub
repz
movsb
xlat
loopne
xchg
shll
jmp
cwtl
mov
or
pop
xor
les
mov
mov
adc
imul
adc
push
pop
adc
push
std
push
jmp
pop
xor
or
loope
adc
shr
inc
sub
pusha
sti
mov
int3
mov
fistpll
xchg
stc
fmull
push
lea
fildl
fnstsw
adc
cmp
xor
jns
ja
pushf
dec
push
adc
push
or
pop
xchg
mov
mov
push
stos
mov
lahf
cmp
test
or
es
and
sbb
ficoms
and
mov
repnz
arpl
rcrb
sbbl
pop
pushf
mov
fnstcw
jbe
add
sbb
mov
dec
sbb
lds
mov
jne
push
inc
leave
xchg
rorl
xorps
cmp
es
pop
sbb
insl
add
test
push
jl
repnz
shrl
adcb
cmp
movsb
movsb
fstpt
decl
pop
inc
xchg
add
jno
hlt
fisubrl
scas
pop
mov
pushf
or
push
mov
fists
jl
ficomps
mov
stc
jle
inc
jns
jns
xchg
enter
rep
pop
aam
aad
scas
loopne
adc
lock
push
loope
mul
aad
repnz
mov
mov
xor
push
or
out
xorb
push
jecxz
mov
jo
scas
imul
cmpsb
and
cs
movsl
inc
int3
fdivrs
test
mov
dec
loopne
add
sub
addb
xor
jns
mov
loopne
dec
mov
in
mov
pop
popf
out
xor
push
adc
out
dec
rclb
push
out
push
pop
in
mov
xlat
dec
push
xor
push
xchg
imul
xchg
or
pop
pop
lret
fwait
push
ss
xor
xchg
push
jge
pop
leave
aas
mov
sub
movsb
xorb
int3
shll
inc
sub
fistpl
mov
arpl
mov
sbb
int
fbld
mov
fsubs
repnz
repz
or
jo
xlat
repz
sbb
pop
mov
add
js
mov
adc
jmp
in
mov
int
pop
and
or
pop
pop
and
pushf
pop
mov
sbb
imul
adc
rorb
pop
push
or
jge
mov
dec
pop
add
notl
test
ret
pusha
ret
mov
mov
outsl
popa
in
jbe
mov
jo
lds
xor
leave
addr16
push
ja
mov
mov
iret
ss
dec
sbb
jge
mov
lret
add
lcall
ret
dec
mov
mov
push
sub
mov
push
cmpsl
fsubrl
xchg
push
or
sti
dec
adcl
xchg
lea
daa
push
dec
mov
cmp
push
add
mov
xchg
stos
decl
rcl
jle
xor
inc
mov
inc
dec
outsb
sbb
stc
or
pushf
and
icebp
cmpsl
stos
inc
ja
sub
insb
aaa
sbb
lods
mov
shl
push
xor
jo
push
xchg
aad
mov
shll
mov
or
ds
mov
sbb
std
and
mov
cs
loop
outsb
cs
or
lret
pusha
adcb
mov
sbb
cmp
mov
adc
jo
sbb
out
dec
in
mov
push
pusha
scas
das
pop
jmp
xor
test
dec
inc
adc
pop
rol
cmp
fwait
jge
jg
jno
sahf
daa
push
lret
outsb
pop
xlat
arpl
int
testb
cmp
mov
and
aad
or
lahf
js
in
adc
lock
mov
mov
out
aad
test
inc
stos
mov
lcall
rol
push
push
cld
jne
xor
pop
mov
inc
lahf
cmp
fdivs
sbb
cli
loope
jge
out
and
fists
popf
jbe
daa
mul
in
inc
xchg
mov
or
flds
push
lret
clc
inc
fisubs
lods
cmpl
cltd
ljmp
repnz
sbb
add
xor
and
sbb
aas
or
mov
dec
or
xor
add
and
outsb
inc
lods
and
xor
push
pusha
inc
jge
test
lahf
pop
and
mov
mov
dec
sub
sahf
repz
andl
aam
jle
inc
pop
mov
rcll
push
sti
push
negl
pop
push
mov
lret
out
out
addr16
jmp
or
loopne
xchg
lahf
xor
fsubl
mov
div
and
adc
scas
scas
mov
mov
icebp
lret
outsl
std
mov
movsb
jbe
xlat
leave
loopne
and
dec
std
push
aad
jge
jno
addr16
pop
cmp
push
in
mov
dec
xlat
pop
inc
mov
icebp
pop
inc
imull
mov
sub
fildll
mov
add
pop
jmp
imul
js
lds
divl
out
jecxz
mov
out
adc
mov
flds
andl
or
mov
cmp
push
mov
push
inc
mov
sub
xor
cmp
lret
xchg
dec
sub
lahf
gs
fistpll
inc
stos
mov
adc
mov
jbe
sbb
xchg
jmp
shr
imul
out
outsb
pop
cltd
dec
data16
ljmp
fstl
jl
adc
rcr
stos
and
xchg
ljmp
mov
pusha
aam
pusha
pop
iret
jmp
callw
xchg
sti
sub
jle
out
icebp
dec
fidivl
mov
js
popa
std
insl
cmp
into
scas
or
sub
cltd
push
pop
push
inc
or
mov
or
addr16
jg
rorl
mov
xchg
test
sub
inc
jno
lahf
jne
mov
dec
cmpsl
sbb
lea
cmp
push
sbb
sub
add
inc
sahf
mov
sub
popf
sub
add
and
adc
aaa
mov
outsb
adc
or
imul
cli
xor
pop
push
pop
inc
out
add
or
jmp
aad
test
sub
orl
in
orl
sub
dec
imul
push
cld
xchg
and
or
and
inc
mov
cmpsl
pop
adc
sub
nop
pop
sub
inc
push
outsl
cwtl
loopne
mov
adc
cmp
cmp
mov
jo
sbb
gs
call
pop
mov
cmp
inc
mov
xor
pop
cmp
xchg
mov
mov
ficompl
ds
jmp
adc
mov
and
jg
ret
sub
loope
clc
sbb
dec
mov
push
cmc
daa
jnp
pop
in
mov
mov
push
les
sbb
xor
nop
adc
xlat
xchg
sub
cld
cmp
push
scas
repz
mov
lret
shl
lcall
bound
mull
dec
sbb
ljmp
popf
and
cmp
mov
cmpsl
cmpl
mov
cli
les
adc
repnz
push
inc
outsl
je
mov
das
fs
pop
dec
int3
fdivl
jne
ja
add
outsb
xchg
add
stos
dec
xor
xlat
in
mov
rcl
jmp
repnz
adcb
add
insl
sub
shrl
sub
pop
pushf
imul
xchg
jo
jle
imul
mov
push
js
bound
aas
inc
icebp
add
pop
jl
lcall
sbb
pushf
scas
je
dec
jbe
shll
push
xchg
jno
nop
and
andl
cli
mov
xor
mov
mov
sbb
and
inc
outsw
sbb
mov
jle
inc
scas
fistps
sub
clc
loopne
lock
lea
test
xchg
xchg
mov
out
imul
je
cmpsb
dec
cmc
push
or
divl
out
xor
sbb
or
imul
pop
inc
mov
stos
in
in
or
push
sahf
xchg
pop
dec
test
pop
pop
imul
mov
stc
jae
pcmpeqb
out
mov
dec
dec
popa
cmp
pop
inc
or
mov
addr16
jnp
into
xchg
or
jno
les
sub
cmpsb
and
fucomi
and
dec
cmp
xchg
into
loop
popa
jbe
pop
mov
dec
push
or
fs
mov
test
std
and
inc
outsl
lahf
jo
sbb
jecxz
cmp
dec
rcrb
jl
repnz
xchg
or
fisttpll
sub
push
sbb
push
daa
jge
call
and
lods
mov
scas
icebp
frstor
add
punpcklbw
idivl
pop
nopl
jne
lahf
fcmovne
xchg
push
mov
add
xchg
pop
xchg
fisubl
add
xchg
ss
jb
icebp
fisttpl
jnp
cmc
mov
inc
push
sbbb
icebp
ljmp
push
or
inc
pop
pushf
inc
jecxz
stc
sti
xor
aas
mov
mov
add
push
test
dec
push
adc
aas
shll
xchg
adc
and
push
lcall
cmc
daa
stc
and
icebp
dec
ds
pop
call
push
ds
cmpsb
mov
in
sbb
mov
cwtl
lock
push
arpl
cmpl
push
inc
pushf
mov
test
jnp
xchg
call
or
xor
push
xor
xor
pushf
mov
cmp
leave
mov
or
in
add
jnp
push
sub
je
fisttps
in
std
adcb
sub
maskmovq
imull
popf
cld
mov
sarb
adcl
loop
sti
cmpsb
sbb
mov
idivl
pusha
xchg
mov
xchg
ret
mov
sub
pop
jo
push
xchg
mov
loopne
adc
push
xor
outsb
pusha
fcoms
mov
jns
dec
stos
lahf
pop
icebp
mov
cld
dec
dec
cwtl
fdivr
jae
mov
ss
insl
mov
cmp
add
inc
idivb
fbstp
adc
rolb
jge
cs
faddl
push
fmull
mov
ficoms
dec
lahf
dec
jae
mov
jg
test
shrb
jbe
mov
mov
dec
out
icebp
jns
xor
out
mov
es
add
lahf
xchg
xor
pop
pop
and
sbb
push
mov
sbb
out
sbb
shr
outsl
xor
cltd
or
mov
or
pushf
insl
or
stc
jns
mov
int3
js
and
negl
fcoml
popa
or
sbb
cmp
nop
push
xor
mov
cmp
pop
mov
insb
jbe
push
bound
dec
sbb
push
mov
sbbl
inc
push
and
addb
outsl
push
push
repz
push
cmpsl
dec
pusha
sub
fdivrp
xor
arpl
jbe
xchg
dec
xor
imul
hlt
dec
or
out
sub
cmpsl
pop
push
insb
dec
bswap
pop
cmp
xlat
inc
decl
js
inc
movsl
idiv
outsb
subb
inc
add
xchg
add
cmp
sbb
dec
add
push
sub
out
in
sbb
push
inc
mov
mov
scas
sbb
aaa
inc
push
push
xchg
dec
jno
adc
inc
iret
mov
xor
dec
icebp
adc
cltd
mov
push
xchg
xchg
fldenv
xor
mov
xchg
aam
mov
and
rcr
and
cmp
sbb
xchg
lahf
dec
aam
and
xchg
or
repnz
addr16
inc
sbb
cmp
testb
xchg
cmp
sbb
mov
js
mov
iret
and
idivb
xchg
movsb
rcr
sbb
fnstcw
pushf
adc
xrelease
pop
scas
shlb
sub
inc
jne
fcmovne
je
sbb
xor
push
sub
jns
fmul
mov
add
lea
sbbb
imul
adc
scas
test
sub
mov
out
jle
inc
rcr
movl
outsb
sbb
mov
mov
mov
imulb
cld
lret
jns
ficomps
cwtl
mov
sbb
aam
outsl
dec
fldcw
js
and
jbe
out
aad
xchg
inc
test
fbld
nop
or
sub
nop
fst
cmpl
xor
lcall
inc
dec
pop
and
push
stos
sbb
inc
stos
mov
iret
pop
jge
jecxz
fistl
and
fbstp
lods
addr16
aaa
push
and
adcb
scas
jge
icebp
or
or
and
mov
ds
dec
mov
mov
inc
sbbl
fs
notl
out
movsl
ret
or
fimuls
shll
pop
pop
dec
dec
pop
lret
lods
inc
mov
dec
lods
roll
into
mov
lret
push
xchg
lahf
lahf
and
xor
mov
arpl
call
jl
mov
sub
lods
fnstenv
xor
inc
stc
add
inc
lret
xchg
jle
ret
sbb
sub
hlt
xchg
into
adc
add
in
pop
cltd
arpl
sbb
in
push
test
pop
ja
popa
addl
out
sub
adc
testl
mov
orb
in
xor
xchg
mov
dec
cmp
les
mov
jo
inc
inc
movsb
mov
jbe
inc
hlt
mov
jmp
ret
pop
dec
push
enter
jge
hlt
in
lock
jle
mov
cli
popf
inc
inc
lret
insl
xchg
and
insb
push
add
jge
mov
dec
ficompl
mov
xchg
and
cmp
dec
jbe
popa
mov
inc
jae
and
mov
arpl
movsb
push
int
and
xchg
fsubl
out
std
inc
inc
sub
sahf
adc
pop
sbb
data16
in
fists
dec
nop
je
cltd
je
jmp
push
xorl
loop
jae
and
cmpb
sti
test
mov
mov
sbb
test
popa
aad
pop
mov
inc
repz
fistpll
cmp
jb
mov
mov
sub
out
pushw
sub
add
aad
inc
add
adc
repnz
xor
cmp
das
mov
push
loopne
rcll
and
cmp
dec
sbbl
mov
inc
out
mov
xor
jo
dec
fwait
add
xor
xchg
pop
shll
and
adc
cwtl
cli
movsb
xor
push
inc
jnp
or
add
lret
pop
pop
adc
loop
xchg
push
fcmovne
push
push
xchg
dec
push
mov
push
ret
sub
inc
or
jp
sub
clc
out
or
mov
in
data16
sub
clc
mov
cmp
pusha
dec
pop
cmp
aaa
pop
in
mov
sub
mov
cmp
jl
stc
popf
jo
arpl
xlat
push
cltd
or
push
xchg
je
inc
lcall
and
add
mov
test
sti
adc
xchg
jecxz
xor
iret
inc
aad
aas
sbb
je
pop
jp
jle
out
jmp
addr16
fwait
sahf
sbb
xor
call
fs
push
rclb
xor
shlb
call
push
ret
cwtd
aaa
pop
pop
shll
cs
stos
repnz
mov
cmc
das
inc
add
test
fs
pop
daa
cmpsb
addl
std
lcall
xor
xchg
inc
insl
cli
movsb
pop
bound
loopne
or
divl
xor
test
stc
in
mov
sub
cmp
jp
pop
cmp
clc
rcrl
add
push
xchg
mov
addr16
xchg
roll
xor
loop
jmp
dec
sarb
lods
std
xor
mov
negl
mov
loopne
sahf
jle
inc
fsubr
push
jge
and
cmp
sbb
mov
aad
adc
mov
dec
jae
mov
movnti
pop
test
inc
pop
orb
push
enter
xchg
shll
xchg
arpl
push
ffreep
icebp
or
iret
pop
or
stos
test
add
cld
cmp
ret
call
dec
rcll
sub
mov
in
mov
mov
test
mov
outsb
xchg
cmp
mov
pop
cmove
lcall
sub
sarl
sub
mov
jo
jge
das
fiadds
fcoml
loop
pop
inc
or
fcoms
mov
into
ret
bound
mov
aam
xor
arpl
clc
imul
add
and
call
mov
test
es
mov
add
sub
ss
xchg
inc
pop
adc
push
mov
lahf
aas
cltd
adc
fwait
arpl
movl
inc
xor
jne
xchg
movsb
mov
xchg
mov
pop
pop
adcl
pop
ss
mov
pop
shll
movsb
stos
addr16
jo
ret
pop
iret
scas
mov
push
inc
test
jne
ss
jo
repnz
aam
cmpsl
arpl
lock
aam
movsl
mov
push
xor
mov
xchg
add
lods
in
pop
out
pop
sub
pop
movsb
in
xchg
and
lret
jbe
imul
enter
lods
sbb
fcoml
repnz
cmp
stos
in
dec
xlat
mov
mov
push
inc
inc
cli
sbb
lahf
inc
subl
ficoms
repnz
jp
jno
sbb
bound
add
and
mov
push
subb
jg,pn
fnstsw
xlat
in
lds
mov
cmp
lock
ja
clc
testb
push
rorl
sbb
jne
insl
adc
inc
mov
cmpsb
xchg
jge
hlt
fld
fisttps
jl
jge
mov
lods
mov
sub
mov
stc
sbb
add
or
popf
jp
jmp
js
sub
mov
es
outsl
stc
push
in
jmp
imul
or
jg
push
mov
push
xchg
mov
jp
fldl2e
imul
outsl
jge
push
sbb
mov
int
mov
dec
inc
or
sub
pusha
outsl
fnstenv
jns
xor
sbb
mov
idivl
mov
dec
adc
pusha
pop
ror
push
xlat
jge
outsl
add
pop
xchg
and
pop
aam
inc
addb
inc
lds
or
fnstsw
dec
pusha
negl
inc
loopnew
xchg
xchg
cmc
arpl
mov
cmpsl
add
mov
xor
cld
add
not
sbb
jl
movl
loope
jp
sub
jecxz
xchg
stos
add
das
cmp
dec
pop
pop
sbb
int3
scas
imul
es
int
fcmovbe
add
enter
out
das
clc
jno
loope
outsb
xchg
cmp
popf
in
add
dec
divl
mov
enter
push
sub
add
pop
xchg
jno
movsl
inc
xlat
or
sub
push
pop
adc
jle
jb
std
fidivs
jb
out
dec
mov
inc
mov
and
adc
mov
movb
lock
ja
mov
push
xchg
js
mov
mov
call
hlt
pop
addr16
pop
popa
push
jge,pn
mov
scas
in
xchg
jle
xor
sbb
add
out
adc
stos
add
lock
jne
mov
pop
test
lcall
mov
leave
out
push
inc
mov
xchg
lcall
sub
dec
js
cmp
cmp
repz
pop
popa
scas
mov
clc
push
cmp
inc
sub
jns
xchg
andb
inc
inc
outsl
data16
call
push
ret
pushw
cmpsl
ret
frstor
pusha
push
or
sti
xor
xchg
scas
aam
cmp
xchg
call
pop
adc
lds
sbb
mov
clc
scas
dec
push
jl
jge
mov
in
and
pop
dec
sbb
bound
xchg
and
repz
mov
dec
jbe
jbe
cwtl
shll
pop
roll
cmp
inc
pusha
rcll
push
push
filds
xlat
popa
icebp
sbb
xchg
inc
gs
mov
dec
test
shl
inc
push
sub
push
add
pop
lods
movsb
ror
je
lahf
fmul
movsl
dec
pop
pop
mov
jg
xchg
xor
jle
mov
mov
sarb
cmp
xchg
sub
xchg
test
cli
and
in
lret
int
shlb
mov
add
es
roll
xor
aas
push
sub
adc
lahf
push
lds
mull
sub
xlat
sbb
adc
push
notl
lods
repnz
dec
ljmp
pop
push
or
pop
lret
push
inc
outsb
call
sub
popa
push
pop
push
xor
or
enter
test
in
dec
stos
dec
sti
dec
daa
js
lret
jns
into
mov
sub
ljmp
ja
cwtl
in
inc
hlt
sbb
pop
push
inc
clc
fwait
mov
call
push
cmc
cmp
mov
fbld
jg
mov
sub
in
rclb
ret
cmp
ja
add
xchg
cmpsl
cmp
pop
mov
gs
push
push
and
popa
push
jge
or
fimull
mov
dec
dec
cmpsb
fcompl
lcall
movsl
lods
sbb
jb
lds
and
jnp
adc
les
repz
mov
pop
fidivrl
add
inc
pop
nop
mov
adcl
aas
and
mov
sbb
cmp
push
loopne
out
int3
sbb
hlt
ret
sbb
shll
scas
cmp
lds
filds
xchg
ja
pop
popa
xchg
sbb
cmp
xchg
sub
test
jb
cli
ficompl
shrb
test
sbb
cmp
and
icebp
rcl
xchg
hlt
leave
data16
dec
or
adc
aas
adc
push
shr
push
mov
out
