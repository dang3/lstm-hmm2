div
outsl
data16
lahf
lret
mov
push
aas
dec
loop
in
adc
or
jp
adc
pusha
pop
bound
stos
xchg
stc
mov
sub
fmull
cmc
sub
mov
and
mov
mov
or
fcomp
cmp
adc
sbb
fwait
dec
sbbb
fidivrl
ret
adc
lods
popa
pxor
loope
insb
aas
adc
lock
sbb
jns
jnp
cld
push
lods
inc
inc
stc
addr16
mov
cmpsl
test
pop
dec
test
and
jle
into
dec
mov
push
aad
movsb
mov
or
int3
push
sub
pop
add
inc
inc
and
xor
je
dec
xchg
adc
jmp
mov
xor
jo
rclb
cmp
loop
mov
mov
jbe
ljmp
bound
or
jbe
ds
out
stc
cltd
aaa
cmp
ss
lock
pop
add
mov
xlat
aad
xor
out
pushf
in
dec
test
xor
stos
ss
push
xchg
scas
test
fsubrs
imul
js
nop
loope
nop
movlps
or
xor
dec
jno
shl
bound
pushf
and
push
pop
mov
pop
and
jmp
or
dec
mov
xchg
cli
pop
jbe
ja
jne
lret
jmp
or
js
or
jg
pop
sbb
push
and
xor
cmp
lods
into
sbb
in
movsl
and
push
dec
lcall
mov
sub
scas
mov
dec
lcall
or
lods
mov
sub
and
popa
pop
mov
icebp
and
sti
and
and
daa
fwait
out
cmp
pop
jge
sub
lds
pop
es
xor
mov
popa
loope
imul
adc
or
sub
push
push
ret
cld
cmp
mov
xor
and
sbbb
inc
xchg
or
mov
sub
sub
into
lret
pop
mov
fs
in
pushf
shr
xchg
inc
lcall
movsl
xchg
les
testl
imul
and
icebp
lahf
or
dec
inc
jg
fwait
nop
shll
mov
into
sub
enter
scas
sti
fs
scas
push
pop
mov
icebp
cli
outsb
mov
outsb
adcb
xchg
filds
sub
pop
cmc
rolb
or
into
mov
or
xor
push
and
sbbl
mov
mov
add
inc
mov
xchg
pop
xlat
iret
xchg
and
push
adc
outsb
mov
mov
test
sub
sub
inc
mov
imul
inc
sbb
lock
push
sub
or
pop
push
xchg
imul
cltd
test
pop
mov
adc
push
inc
popf
inc
out
push
mov
lret
loope
jge
mov
sahf
into
rclb
rcrl
movsl
ds
xchg
lock
fistps
insb
xlat
ficomps
xorl
pop
ljmp
test
or
mov
adc
imul
inc
inc
lahf
inc
loope
std
nop
xor
lods
mov
lods
push
dec
and
mov
aam
mov
jb
clc
push
cmp
daa
adc
cmp
jecxz
int3
push
hlt
out
adc
and
ret
mov
jb
xor
push
loope
inc
js
or
dec
push
dec
daa
sbb
sbb
bound
cmp
jo
mov
dec
stos
gs
cli
aas
cmp
and
hlt
xchg
mov
xchg
pop
mov
imul
dec
ret
jle
pusha
push
mov
mov
inc
es
and
test
push
jne
rcl
sbb
and
mov
lods
jmp
movsb
xchg
icebp
leave
aam
popf
test
mov
loop
jmp
cmp
dec
pop
rcll
sbb
mov
shll
sbb
adc
sub
jle
notb
daa
out
push
sbb
and
icebp
and
pop
xor
popa
sbb
stos
call
cmp
cmpb
adc
in
icebp
jnp
faddl
xchg
cmp
adcb
subb
fs
sti
test
enter
imul
mov
aaa
and
sbb
add
cmpl
dec
test
xor
repnz
popa
adc
sbb
lahf
xchg
push
rcll
int3
push
adc
jmp
les
movsl
push
outsb
push
lcall
rorl
sbb
cmpsb
dec
mov
sbb
pop
loopne
add
mov
rcrl
mov
shlb
and
dec
xchg
fmull
add
mov
adc
pop
cs
loope
rorl
inc
push
cmp
mov
jmp
inc
sub
cmp
push
fwait
iret
cld
mov
fdivl
cmp
cmp
or
push
pop
ja
xchg
push
mov
loopne
arpl
mov
jge
loope
xchg
cmp
gs
pop
sbb
dec
fcos
pushf
jmp
enter
adc
dec
scas
dec
rclb
imul
sub
add
mov
dec
dec
pop
addr16
push
sub
sub
jo
cmp
inc
mov
mov
cs
adcl
push
movsb
sahf
push
mov
in
out
das
adc
stos
bswap
scas
jg
lcall
fisubrl
inc
clc
mov
inc
cwtl
jbe
jl
jl
insb
push
shlb
push
xchg
add
andb
mov
int3
and
test
jecxz
mov
jle
inc
dec
cmovbe
test
xor
test
pop
insb
dec
das
je
lods
fwait
xchg
mov
pusha
ret
idivb
pop
mov
or
mov
fadds
cltd
push
lods
jecxz
mov
jl
cld
rolb
fnsave
ror
and
shl
mov
or
fisttpll
cmp
hlt
cmp
dec
scas
or
inc
jb
mov
popa
xor
mov
xchg
mov
das
jge
std
fnsave
mov
dec
push
data16
int3
pop
ss
stc
inc
push
jg
sbb
mov
jae
es
lahf
and
cld
fadds
jle
stos
and
mov
test
dec
push
adc
pop
or
cltd
rolb
pushf
jnp
mov
cmpsl
or
push
scas
jp
fdiv
and
or
repnz
mov
stos
pop
out
adc
aas
inc
call
mov
xchg
xor
mov
imulb
mov
mul
into
and
insb
stc
sbb
xchg
dec
push
pop
hlt
or
cs
bound
sub
sub
scas
push
out
and
sub
fprem
pop
js
add
out
inc
push
fcompl
js
cmp
jne
cs
xor
ds
imul
inc
mov
dec
xchg
fsts
or
sub
push
loope
ror
jb
lea
es
inc
cmc
lret
int3
aas
ja
cmp
je
or
scas
test
lahf
ljmp
mov
test
enter
xor
push
test
sbb
cmp
cmpsb
cmc
or
sbb
cmp
push
pop
cwtl
cmp
ds
xchg
xor
or
shl
inc
outsl
xor
fcomps
sbbl
jg
in
push
inc
shlb
int
pusha
jbe
mov
inc
test
dec
inc
in
arpl
and
mov
shrl
mov
jecxz
push
add
dec
sahf
add
xchg
xchg
fimuls
movsb
das
mov
jae
ja
shlb
pop
movsl
lcallw
dec
shrb
test
stos
pop
mov
adc
movsl
fidivl
enter
pop
jge
mov
dec
mov
sbb
fdivrl
mov
adc
xor
jecxz
xchg
jo
scas
adc
fdivrp
adcb
xchg
into
dec
movsb
dec
add
int3
cli
inc
in
arpl
add
add
xor
lahf
inc
jecxz
jne
xchg
mov
in
adc
int
jmp
sub
cli
sbb
xchg
fstp
imul
mov
jmp
xchg
push
adc
fimuls
sub
jmp
lods
mov
cmpsb
push
cs
test
sub
mov
jg
sbb
stos
inc
pop
push
push
pusha
cli
pusha
in
cltd
add
icebp
jmp
dec
and
fnsave
fstpl
ja
xchg
shrb
icebp
test
loopne
outsl
cmp
sub
add
call
movsl
scas
mov
xchg
iret
jmp
pop
inc
jp
adc
repz
es
outsb
jecxz
ret
pop
cmp
sbb
dec
or
fmuls
xchg
mov
jp
iret
cli
ja
sbb
outsb
cmp
sbb
ret
shlb
xor
subb
mov
aad
push
push
mov
jle
or
ja
daa
test
out
lcall
lret
ss
adc
test
add
int3
sub
in
negb
mov
xchg
aad
mov
lods
ja
and
in
test
movnti
jl
add
dec
sbb
xor
addr16
push
fisubs
mov
xor
movsl
sub
xchg
fcoms
mov
jmp
add
test
mov
mov
ljmp
subl
sbb
mov
mov
jns
push
mov
stos
mov
xchg
int
fisubrl
inc
push
std
mov
mov
stc
jge
lock
dec
inc
lret
mov
mov
mov
ret
popl
ret
jb
jnp
jp
mov
adc
movsb
add
scas
jecxz
imul
pop
shll
push
mov
push
testl
xchg
jo
mov
adc
cmp
loop
pop
inc
inc
out
jbe
out
jns
inc
cltd
xchg
loop
in
decb
dec
test
sti
enter
sahf
fs
jmp
lret
cmp
lods
jle
push
outsl
adc
push
sub
push
paddw
inc
aaa
leave
test
cmpsb
icebp
inc
sub
call
movsl
icebp
adc
or
test
add
dec
cs
fisubrl
lds
call
out
jno
lds
arpl
and
push
inc
int3
rcrl
mov
xchg
fdivrs
xchg
fwait
pop
pop
cmp
push
lods
jne
shlb
rcrb
sub
mov
pop
popa
add
dec
push
add
repz
dec
cmc
push
rorb
mov
test
cmc
pop
pop
loopne
fistpll
cmp
insl
lahf
in
mov
ror
iret
inc
jmp
cmpsl
jno
jbe
adc
inc
push
call
ds
enter
mov
orb
cs
xor
dec
faddl
push
outsl
cmpsb
cmp
pop
and
add
fs
repz
xor
mov
insl
mov
jae
xchg
pushf
daa
lcall
outsb
and
mov
inc
daa
pop
in
incb
fidivrl
ja
xchg
or
jecxz
inc
mov
shlb
xchg
loop
or
or
pop
clc
in
sahf
jno
pushf
mov
aam
jbe
sbb
clc
push
inc
cmp
push
in
movsb
mov
xchg
or
cmc
dec
sti
xchg
gs
js
je
xor
jnp
pushf
pop
and
mov
sbb
sbb
xchg
xor
inc
push
push
outsl
add
jno
add
mov
mov
mov
test
dec
insb
pop
jns
js
insb
jmp
fstps
out
mov
inc
jne
adc
stc
pop
pusha
inc
sub
cmpsb
sti
out
xor
arpl
lcall
fists
cmp
clc
ljmp
sub
pop
jmp
inc
imul
daa
aas
mov
sbb
jbe
insb
jmp
sub
out
repnz
mov
dec
iret
jle
cld
in
ljmp
dec
les
mov
aad
aad
and
adc
mov
in
mov
cwtl
aas
mov
add
adc
mov
das
jle
mov
pop
inc
in
repz
test
pop
stc
push
adc
push
mov
jo
aaa
adcl
pop
jmp
sti
jnp
and
enter
lahf
out
adc
movsb
aam
mov
cmc
pop
push
push
pop
pop
lcall
aam
add
subl
push
mov
aaa
jg
push
daa
xor
cmp
fucomi
jge
imul
jbe
ret
inc
shrb
aam
les
movsl
mov
orl
mov
xor
xor
outsl
nop
pop
sub
fwait
fwait
popf
test
push
xchg
xchg
scas
enter
xorl
shl
js
inc
sub
push
icebp
and
nop
cmc
xchg
stos
xchg
and
cmp
dec
adc
fucomi
test
sbb
xor
pop
push
jo
mov
xor
je
sti
mov
aas
arpl
aad
cltd
mov
sar
mov
rep
xor
jge
aad
mov
jmp
sub
inc
test
jno
mov
in
jmp
out
pop
out
int3
scas
fstps
insl
cwtl
rorb
stos
into
cmp
xchg
imul
andl
and
insl
fcomip
push
in
mov
nop
les
jg
cmp
push
mov
sub
adc
xchg
mov
inc
sub
mov
movsb
mov
sub
pop
outsl
mov
mov
scas
mov
dec
stos
shl
out
adc
stos
pop
adc
sub
dec
cmpsb
orb
or
pusha
dec
or
and
sub
pop
xchg
bound
enter
push
test
js
and
sbbl
lret
mov
cs
lret
call
stos
lret
aam
mov
imul
push
outsl
mov
nop
mov
push
adc
jbe
mov
xchg
popa
loope
je
inc
notb
rcr
pop
mov
aaa
ja
xlat
repz
jg
add
data16
mov
rcl
lret
inc
adc
ret
neg
and
xchg
mov
sysenter
and
adc
xchg
gs
push
aam
cmp
in
stc
xchg
add
cmpb
loopne
pop
and
fisubs
test
cmp
aam
sarb
mov
push
in
mov
cltd
lods
jb
loope
or
mov
adc
inc
mov
sub
pop
jl
xor
cmp
dec
push
mov
mov
repnz
dec
pop
lcall
mov
xor
push
mov
out
loop
js
cmpsl
shrl
xchg
subl
adc
lods
sub
fistpll
inc
stc
pop
sub
mul
dec
jae
jns
test
pop
out
leave
stos
push
jo
xchg
pop
dec
out
clc
and
mov
adc
pusha
pop
xor
sbb
xor
push
mov
mov
mov
arpl
pop
push
mov
mov
lods
dec
jae
fisttpll
mov
dec
mov
aad
call
push
adc
mov
inc
inc
mov
mov
xchg
inc
loop
xor
pop
sar
orb
sub
inc
and
add
and
dec
lcall
call
push
cmpsl
andb
dec
dec
push
aad
lods
out
add
icebp
pop
das
cmpsl
jno
fmull
sarl
stos
cmp
cli
mov
js
and
mov
mov
add
jge
add
adc
pop
fsubrs
sub
es
sub
xchg
push
push
outsb
out
std
icebp
cmp
sub
outsl
and
das
push
adc
addr16
or
rorl
outsl
aam
out
push
jnp
xor
mov
xor
lahf
rorb
test
mov
pop
mov
or
lahf
sub
rorb
jnp
addr16
scas
push
inc
jb
loope
sbb
push
scas
imul
sub
rcl
inc
les
jmp
frstor
test
loopne
jne
cwtl
js
jmp
aam
out
dec
fwait
pop
inc
and
fnstenv
add
pop
sbb
jbe
xchg
dec
repnz
push
pushf
push
cmc
xchg
ljmp
shll
out
push
ljmp
lret
xchg
call
pushf
jecxz
dec
or
sti
jg
ljmp
pop
xchg
outsl
sub
loope
ret
sti
jle
sbb
and
inc
xor
jbe
stos
roll
mov
inc
jb
push
in
repz
mov
and
push
clc
lods
and
rol
mov
ss
mov
data16
lcall
imul
pusha
wrmsr
lcall
mov
std
es
lods
daa
jne
push
mov
lret
or
js
mov
add
jo
outsl
pop
jo
push
dec
jae
add
lcall
sub
mov
adc
movsb
jbe
int
cmp
sbb
decb
mov
push
jle
lods
lea
jg
mov
fidivl
mov
pop
enter
cmpsl
mov
mov
aad
es
and
out
leave
sti
fstpt
inc
int
pop
push
clc
popa
jg
push
sahf
out
xchg
or
cmp
fistps
hlt
data16
dec
clc
mov
pop
push
dec
je,pn
ret
jns
mov
push
lods
pop
xchg
cmc
fcomps
outsb
or
mov
adc
xor
sub
pop
sarl
jecxz
pop
jo
ret
in
idivl
mov
bound
push
sbb
add
jl
divl
in
cmpsl
mov
sub
mov
jp
outsl
mov
leave
dec
repz
out
jbe
jp
pop
jecxz
or
inc
sbb
daa
in
aaa
inc
orl
pop
xchg
pop
gs
jl
int
arpl
mov
int
adc
insb
or
addl
dec
cwtl
loop
repz
jle
push
ret
dec
jl
jp
repnz
sahf
gs
push
or
adc
xchg
and
cmpsl
xor
idivl
or
insl
jns
cmp
ror
lret
dec
mov
aaa
test
out
mov
push
out
fwait
mov
inc
and
imul
pusha
sarb
aad
xor
pop
pop
jmp
movsb
test
xor
xchg
js
push
shll
stos
mov
mov
jge
xchg
cld
iret
pop
cmc
subb
jecxz
and
stos
lods
jbe
arpl
push
lret
pop
mov
sahf
xor
test
cmp
jae
cmpsb
xchg
cmpsl
loope
je
xchg
in
into
sub
fisubl
xor
cmp
sub
dec
test
les
mov
aam
test
jo
or
shr
call
and
xchg
and
xor
insl
mov
sub
in
pop
data16
or
mov
jne
leave
add
insl
les
lods
add
sbb
sub
rclb
xchg
and
or
cmp
inc
mov
mov
test
adc
mov
xchg
mov
dec
cmpsb
jne
mov
inc
rorl
mov
mov
cmp
int3
sbb
cmpsl
fidivs
mov
hlt
push
sub
sub
jae
or
add
mov
test
sti
xchg
mov
cli
bnd
push
movsl
or
mov
cmp
and
pop
fxch
dec
push
pop
mov
xor
mov
mov
in
outsb
and
add
pop
fidivl
hlt
in
adc
lock
sub
pushf
jnp
orb
loopne
sahf
mov
push
xor
jmp
push
call
or
mov
sbb
repz
and
add
or
rcr
sti
sbb
iret
dec
xchg
sub
push
stc
pop
jbe
xor
aaa
in
fsubrs
sbb
jae
mov
mov
jp
in
mov
mov
cli
xlat
or
imul
je
mov
jo
push
sub
arpl
sbb
popf
jne
jle
dec
in
fldt
and
shrb
mov
pop
rcr
imul
dec
jne
movsb
int3
test
pop
cmp
shr
add
mov
add
mov
mulb
mov
fadd
cmp
or
mov
dec
out
or
sahf
lret
push
and
add
subl
mov
lods
mov
lahf
xor
imul
pushf
in
sahf
inc
es
gs
xlat
fmull
in
xchg
ret
xchg
cmp
xchg
cmp
xchg
sbb
pop
inc
dec
loope
int
dec
out
addr16
hlt
mov
popf
xchg
pop
repnz
addr16
test
icebp
push
adc
imul
dec
pop
pop
sub
shrl
je
test
ss
and
adc
dec
mov
ret
inc
inc
pop
mov
out
or
xor
mov
ljmp
dec
lret
pop
xchg
pop
aad
shll
pop
iret
sub
fidivrs
inc
pusha
popa
adcb
movzbl
mov
or
test
fists
outsl
mov
fdivrs
push
pop
push
dec
dec
and
ret
movsl
daa
daa
jb
dec
repz
inc
jo
test
js
rorb
pusha
test
in
mov
mov
jbe
je
inc
push
shl
push
jmp
sub
cmpsb
addr16
lret
jle
dec
push
xchg
sbb
pop
pop
mov
movb
jmp
cmp
cwtl
mov
cmpsl
in
dec
mov
pusha
cmp
iret
sub
cmpl
jl
imul
call
jmp
jl
aas
pop
out
out
cmpsb
loop
leave
inc
ja
rorl
fidivs
xlat
sbb
and
adc
sbb
push
adc
sub
adc
js
sbb
lea
push
arpl
adc
xchg
push
pop
inc
cli
movsb
mov
jge
cs
add
paddq
lcall
xchg
cmp
fdivrl
mov
mov
adcl
jbe
xor
jge
mov
xor
in
loopne
fstl
dec
repz
or
fcomp
and
enter
fwait
dec
add
jb
das
pop
les
mov
imul
and
pop
insl
or
xchg
lret
mov
sub
mov
mov
mov
dec
push
push
add
xor
or
mov
sub
xchg
jmp
inc
lock
jbe
fdivrs
pop
std
les
stos
inc
cmpsl
in
jge
rcll
js
lods
enter
daa
xchg
sbbb
jmp
addr16
mov
or
pop
add
test
sbb
imul
and
or
mov
mov
dec
ljmp
add
fwait
dec
pop
jmp
popa
pop
js
imul
push
jnp
imul
adc
aaa
dec
pop
fcmovnb
mov
mov
inc
lret
lea
cs
pop
add
sbb
cmp
adc
ret
xor
sub
mov
mov
sti
dec
push
pop
fisubrl
mov
inc
stc
adc
sub
test
push
adc
fisttpl
push
mov
bound
jnp
cmp
cwtl
ja
cmp
fldcw
inc
das
xor
pop
xlat
aad
call
jmp
dec
mov
shrb
jnp
imul
in
or
mov
sub
xchg
mov
mov
lret
test
icebp
ret
ret
sub
inc
mov
jne
mov
jo
clc
or
pop
jno
insb
or
addr16
push
icebp
pop
rclb
adcl
xchg
test
pop
aad
jle
mov
cmp
mov
cli
sub
in
inc
and
xor
mov
fsts
pop
insb
in
mov
inc
and
test
pop
iret
orl
repnz
mov
dec
or
add
ljmp
dec
mov
inc
scas
les
ret
xchg
inc
addr16
lea
and
jo
lahf
fdivrl
pop
inc
insl
sbb
push
jnp
mov
outsl
xchg
dec
cmp
inc
inc
loope
fiadds
adc
leave
popa
sub
and
fucomp
add
sub
sbb
outsl
popa
out
mov
out
mov
push
pusha
cmp
mov
mov
cmp
mov
mov
sub
enter
inc
inc
mov
jae
cmc
es
push
aam
jb
sti
push
cmpsl
xor
inc
call
inc
test
cmp
loopne
dec
test
lret
mov
push
add
mov
nop
sub
aam
nop
je
movsl
into
add
aad
out
push
inc
in
add
sahf
shl
cmp
leave
push
push
test
adcl
add
sbb
mov
jmp
xchg
add
or
add
sub
cmp
mov
pop
sbb
lods
out
iret
addr16
aad
test
es
arpl
aam
stos
and
pop
int
push
jp
adc
xchg
lea
sub
inc
ret
push
jne
int3
push
cld
add
and
out
inc
cmp
testb
push
cmp
xchg
sbb
dec
jne
stc
add
outsb
dec
push
jb
or
rorb
xor
outsb
rorb
xchg
inc
repnz
neg
cltd
inc
lods
xchg
in
pop
int
mov
sbb
pusha
cld
or
xor
stos
cmpsl
cmpsl
das
lcall
shll
sub
rcll
pop
pop
das
sub
jne
add
pop
lret
lahf
in
je
es
aam
out
out
jbe
mov
ficomps
fmuls
movsb
repz
insl
test
dec
dec
bnd
shlb
push
js
scas
sbb
xlat
xor
mov
push
movsl
lods
or
sub
gs
inc
popf
sbb
out
or
in
jecxz
pop
addr16
fidivl
aas
sbbb
inc
xor
data16
or
cld
cmc
scas
mov
and
aam
fldcw
push
pop
enter
and
push
mov
cld
cli
shlb
inc
lea
add
push
fs
insb
xor
xchg
repnz
lock
inc
mov
daa
dec
mov
jle
sbb
mov
mov
mov
ret
sbb
scas
push
test
xchg
lods
or
mov
jmp
outsl
pop
imul
ljmp
test
pop
nop
dec
pop
jnp
fildll
movl
lret
xchg
add
test
dec
movsb
add
sahf
sti
inc
aaa
dec
lret
push
fcoms
mov
pop
inc
mov
xor
mov
cld
es
lods
lcall
scas
adc
ret
mov
xchg
cmp
mov
sbb
ja
repnz
outsb
jecxz
cwtl
push
outsb
fdivp
inc
pop
jno
push
cmp
data16
repnz
add
ficomps
addr16
add
xchg
fdivr
lods
lods
je
sbb
pop
pushf
cmp
popf
ljmp
xchg
jmp
add
and
movsb
xor
pop
sub
push
mov
pop
stos
cwtl
gs
xchg
les
es
test
adc
shrl
xor
popl
out
mov
insb
xlat
stos
xor
imul
lret
add
sbb
xchg
xchg
shl
popf
jnp
and
mov
push
bound
mov
sub
lret
je
inc
lea
es
mov
pop
ja
jle
dec
dec
lret
xorb
and
and
xor
mul
mov
out
les
addr16
xor
mov
mov
loopne
cmp
xchg
inc
mov
cmpsb
push
and
xchg
xchg
paddsb
xchg
lea
jmp
inc
and
add
jb
jecxz
sbbl
insl
sub
mov
inc
add
pop
cmp
mov
cmp
adc
repz
aad
movsb
fidivl
out
in
mov
mov
and
sub
xchg
mov
movsl
aam
imul
sub
dec
ja
cmp
push
push
sub
push
ss
js
aas
mov
scas
inc
mov
dec
jmp
mov
jmp
xor
leave
addl
xor
push
and
jp
dec
jmp
sahf
and
dec
repnz
mov
out
and
mov
fnstsw
jne
mov
or
mov
rorl
push
jno
scas
inc
je
mov
mov
adc
inc
xor
clc
sub
jb
roll
in
int
dec
loope
or
jp
adcb
xchg
add
inc
mov
cltd
xchg
lods
fmuls
ret
mull
add
lods
bound
xor
movsl
cltd
test
jmp
ja
inc
dec
pop
push
ds
adc
repz
repz
inc
repz
dec
and
lds
sub
cmp
cld
cmc
fmuls
ljmp
hlt
adc
mov
sub
cli
popa
xchg
les
rclb
std
jmp
scas
push
or
mov
adc
mov
add
cmp
inc
stos
cwtl
pop
sbb
leave
dec
inc
jp
mov
mov
popa
out
adc
sbb
jmp
xor
dec
and
mov
jbe
stos
or
sub
inc
cli
push
push
mov
xchg
aam
sbb
or
rcrb
lcall
mov
dec
int3
fisttps
sub
loop
dec
insb
call
sti
bound
daa
xor
xor
push
mov
push
lret
add
push
movsb
fs
jno
lds
pop
jne
nop
rclb
sti
lock
ffree
loop
roll
xor
add
jl
jmp
xchg
push
adc
dec
cmc
ret
test
push
ja
mov
lods
test
xchg
fiaddl
notb
in
push
insl
dec
clc
push
push
hlt
jl
and
sub
inc
iret
add
and
rolb
es
sti
push
mov
push
dec
inc
icebp
sbb
mov
xor
loop
into
or
cmp
test
movl
push
lock
mov
push
gs
push
pop
xchg
jae
or
in
lcall
dec
aad
shrb
pop
stos
rorl
mov
cmc
or
mov
repz
sbb
adcb
les
mov
dec
mov
jmp
mov
push
fdivs
test
mov
lods
idivl
fdivrs
adcl
fisubs
sub
movl
push
aaa
into
jo
icebp
cs
subb
mov
jmp
shrl
mov
xor
xchg
rcrb
xorps
push
out
sub
push
rcll
fnstenv
mov
pop
daa
sbb
add
cwtl
and
cmp
xchg
stos
push
out
add
test
dec
divl
adc
inc
cmpsb
push
arpl
push
stos
lret
ss
mov
push
jns
xor
testl
pop
jle
add
data16
scas
push
clc
icebp
or
dec
push
imulb
call
nop
mov
ja
stos
xor
mov
push
cmpsb
subl
xchg
repz
cltd
leave
mov
mov
and
dec
lret
xchg
jnp
dec
jns
movsl
into
jmp
sbb
xor
or
cltd
jmp
movsl
dec
repnz
cld
add
pop
xchg
popa
fistps
mov
sub
mov
jg
or
fcoms
sbb
mov
nop
jmp
ljmp
sub
lcall
jbe
jae
out
fld1
sbb
xchg
xchg
mov
push
xchg
push
fs
fldl
gs
in
lock
int3
or
das
cmc
adc
ds
inc
sub
push
xor
into
xchg
pop
jne
push
enter
cmp
loope
pop
and
jno
sub
out
pop
push
out
movsb
xchg
jo
int
xchg
mov
shlb
enter
inc
xor
mov
sbb
data16
stc
mov
pop
ret
jae
loopne
cmp
mov
jp
aad
mov
push
or
xor
or
xchg
inc
mov
cmpsb
fstpl
add
xchg
popa
pusha
ss
mov
xchg
scas
xchg
jbe
ret
mov
or
aam
push
inc
mov
rcll
mov
movsb
fsubr
cmp
leave
lock
aad
mov
fstps
mov
xchg
jae
stos
lds
xchg
jbe
ja
jne
sub
popa
jbe
mov
testb
jb
flds
sub
pop
cmp
push
fs
lods
je
ja
arpl
add
dec
and
loope
lock
cmp
movsb
adc
fwait
push
and
pop
jg
ljmp
dec
ret
addr16
int3
adc
mov
pop
pushl
pop
jno
push
aad
adc
subb
pop
pop
test
push
insb
out
sbb
dec
jg
mov
inc
out
icebp
shll
jno
int
test
aaa
divl
stc
xchg
pop
imulb
xor
es
mov
addps
insb
xchg
mov
add
inc
je
mov
add
mov
movsl
call
sub
add
mov
xor
mov
test
sbb
stc
mov
rorl
and
jmp
and
fisttpl
aas
jae
push
lea
test
push
nop
xor
adc
fldl2e
lea
pop
push
sub
lret
add
mov
in
pusha
lods
dec
sbb
jg
jp
lret
xchg
sarb
enter
lods
or
mov
adcb
js
adc
add
adcl
loope
fs
call
adcl
add
outsl
loop
or
sti
and
stos
mov
lcall
aad
xchg
push
add
lock
pop
fisttps
fstps
stc
rcrl
dec
jno
repz
out
mov
ds
cltd
xor
hlt
popf
js,pn
movsb
pop
add
sub
adc
jo
cmp
jo
jg
mov
jge
dec
xchg
sbb
xchg
sub
std
jecxz
adc
pop
pop
or
jl
xchg
adc
add
ret
lcall
fidivrs
jne
rcl
sbb
mov
fimuls
loop
cmpb
inc
jns
into
imul
push
push
mov
dec
xor
in
xlat
inc
xchg
scas
jl
cmp
gs
cmpsl
shlb
push
jl
mov
addr16
jbe
push
rolb
inc
data16
and
xchg
bound
test
xor
xor
scas
jmp
sti
push
mov
cmp
mov
dec
movsl
mov
in
loop
dec
icebp
push
mov
popa
jno
xor
ficoms
dec
cmp
jmp
or
cmp
lock
add
mov
popa
cmp
sbb
test
nop
hlt
fdivr
adc
jecxz
enter
stc
leave
sti
dec
test
test
ficoms
or
loopne
xor
and
ss
push
fcmovnb
jp
push
dec
pop
dec
mov
push
es
out
nop
insl
mov
push
test
movsb
pop
jge
ficompl
enter
lock
mov
lcall
sub
jno
xor
iret
xor
ficompl
lock
inc
aaa
push
out
repnz
std
es
fidivrl
xchg
iret
xchg
imull
mov
ret
xor
outsl
push
xchg
xor
arpl
sbb
push
xor
push
pusha
mov
add
push
push
scas
sbbb
sarb
nop
or
ret
jp
cli
mov
dec
dec
xor
inc
sbb
lret
sarb
push
loope
ds
icebp
sbb
jbe
out
push
in
imul
pop
lret
jmp
fbld
dec
lods
les
outsb
jmp
xchg
or
cmp
adc
mov
cld
mov
and
outsl
adc
mov
inc
andl
xor
fisubl
test
fidivl
jno
repnz
lock
incl
dec
clc
sub
addb
inc
mov
enter
jge
mov
test
pop
dec
mov
add
out
jl
pop
cld
or
aad
pop
inc
aaa
mov
aam
pusha
ja
xor
test
int
jmp
pop
pushf
jl
and
add
jbe
fistps
outsb
movsl
xor
out
imul
mov
iret
repnz
jmp
shll
adc
lea
xchg
xchg
pop
xor
push
pop
dec
jae
aam
sub
lock
inc
push
pop
mov
cmpsb
add
fldt
test
call
out
out
rep
xchg
push
mov
lret
lcall
push
call
addr16
jle
leave
sub
in
stos
mov
test
and
cltd
mov
movsb
lods
jl
mov
xorl
out
pop
jns
adc
and
repnz
and
fldt
mov
push
pop
repz
adc
in
xchg
xchg
jge
sbb
pop
sbb
pop
mov
xchg
jecxz
fistl
cltd
loope
mov
in
bswap
mov
xor
mov
sahf
dec
lret
pop
push
add
pop
add
addl
inc
popa
mov
roll
pop
sbb
cmpsl
pop
dec
and
jmp
outsl
push
aad
sub
push
test
fisttpll
cmp
xchg
aam
pop
pop
fwait
insl
mov
dec
inc
push
sbb
xchg
scas
int
xchg
aaa
jo
and
test
into
mov
pop
pop
pop
sub
int3
xchg
xchg
mov
stos
xor
clc
adc
ljmp
es
hlt
sbb
jle
mov
in
push
ret
sbb
push
ljmp
les
aas
or
es
xor
inc
mov
sbb
push
popa
pop
mov
dec
xchg
inc
mov
add
movsb
or
cmc
and
sbb
adcl
out
in
add
xchg
mov
cmp
xor
dec
addr16
cmp
xor
dec
jne
adc
addr16
enter
adc
call
leave
jno
jo
scas
fstenv
mov
sbb
xor
or
loop
inc
je
dec
push
dec
clc
xchg
xchg
popa
dec
mov
jl
movsb
out
mov
loop
imul
scas
inc
leave
ret
nop
or
leave
add
roll
dec
ja
lock
xor
push
xchg
pop
cmp
jge
sub
jns
lods
xchg
mov
pop
and
pmaddwd
inc
or
mov
push
cltd
xchg
inc
test
xchg
mov
int3
adc
mov
mov
repz
and
test
jnp
sbb
lcall
jge
sahf
sub
jns
fnstenv
aam
jns
pop
or
lea
andb
jle
cmc
lret
or
add
sahf
std
add
add
push
or
push
filds
pop
stos
fsubr
mov
xor
mov
pop
adc
jno
jmp
jp
ds
sub
pop
push
popa
pop
int
test
popa
sahf
andl
inc
int3
insb
push
outsl
notb
inc
aad
sub
test
mov
aas
aam
movsl
gs
outsl
adc
dec
mov
rorb
or
cmp
shll
push
cmpsb
daa
sarb
js
and
ja
loope
in
clc
jnp
test
mov
push
mov
enter
xchg
mov
mov
jp
insb
rcl
scas
pop
mov
rorl
lock
inc
and
add
repnz
push
mov
xchg
xchg
push
mov
in
jl
push
and
adc
faddl
int3
lcall
xlat
mov
fnstsw
es
sarb
cmp
mov
sti
cld
push
decl
mulb
filds
jae
ja
hlt
adc
push
push
sbb
enter
sub
push
icebp
popa
call
cmp
xor
or
fwait
bound
inc
out
cmp
dec
flds
mov
dec
mov
push
pop
jecxz
je
xchg
sarl
daa
jbe
mov
scas
lret
push
mov
add
and
push
inc
sbb
bound
adc
fs
imul
or
push
loop
and
inc
jl
or
xlat
add
lret
loop
loope
dec
add
bound
mov
xchg
mov
in
lds
jmp
or
pop
sti
cmp
mov
pusha
int3
inc
cmp
dec
icebp
sbb
outsb
orl
daa
sub
cmp
xor
fisubs
ljmp
inc
pop
push
scas
cmp
mov
cmpsl
adc
test
fisttps
shrb
in
loop
and
adc
loopne
ss
adc
sub
jmp
aaa
cmp
xlat
mov
or
mov
sarl
push
rolb
sbb
mov
fisttps
mov
iret
pop
push
sti
mov
cmp
scas
stos
cmpsl
addr16
ror
lcall
je
pop
inc
es
add
pop
and
fwait
lods
xchg
xor
es
out
loop
xchg
lcall
dec
outsl
cmp
sub
lea
adc
xchg
sub
hlt
sub
out
xor
jbe
enter
add
xchg
out
xor
inc
nop
xor
sub
mov
jge
out
sbb
ret
addr16
and
and
xchg
hlt
xor
mov
push
adc
test
cmp
push
leave
out
data16
incl
dec
cli
sub
push
mov
push
push
test
dec
imul
shrl
mov
mov
fcomi
fldenv
cltd
in
cwtl
lahf
aaa
jbe
imul
xchg
xor
popa
ja
push
pop
imul
cli
mov
hlt
cmp
ja
mov
or
xor
call
or
sbb
js
cmpsl
or
jbe
mov
repz
scas
inc
cmc
test
and
loope,pt
xchg
push
data16
lods
dec
and
fwait
xchg
scas
cmp
fs
movsb
push
daa
sub
add
add
movsb
jo
and
push
and
add
stc
sbb
je
fisttpll
cmc
xor
xchg
mov
fsubl
inc
call
add
pop
nop
int3
xor
and
and
xchg
rcrb
fdivrl
xchg
loop
nop
stos
inc
jecxz
xor
mov
out
int3
and
cmp
xor
arpl
sub
push
cmp
adcb
loopne
mov
lods
cld
fabs
add
push
sbb
mov
cmpsl
bound
cmp
imul
into
adcl
push
mov
hlt
imul
and
sbb
out
add
jmp
or
mov
lock
push
ds
test
dec
test
lea
pop
dec
push
in
and
fdivrs
cmp
fs
icebp
aas
mov
ds
lret
mov
mov
jb
mov
jo
dec
sysenter
or
pop
rcll
rcll
push
sbb
sub
jae
pop
aam
rorl
and
stos
sub
or
pop
out
push
jmp
pop
or
pop
mov
xchg
or
pop
stos
xchg
sti
mov
add
out
cltd
jo
scas
test
add
or
and
xor
adc
xor
jmp
loop
adcb
xlat
push
mov
addr16
repz
mov
les
movsl
enter
jbe
insb
frstor
sarb
cmpsb
outsl
inc
fisubrs
mov
fwait
sti
adc
push
push
pop
sbb
sub
fucom
xor
lcall
add
inc
mov
cwtl
fisubrl
push
outsl
xchg
out
mov
jo
mov
jae
cmpsl
jno
xor
test
push
cmp
or
in
outsb
jg
js
sub
cwtl
aad
inc
out
mov
into
mov
adc
into
xor
dec
pusha
pop
sub
and
rolb
cmp
imul
insb
lret
ret
fcoml
mov
fdivl
or
mov
inc
jo
jmp
mov
lahf
mov
cmp
dec
loop
stos
mov
movsb
sbb
adc
jno
jecxz
hlt
adc
push
pop
dec
test
pop
test
cmp
int3
dec
and
cmp
adc
addr16
clc
cmpsb
bound
fiaddl
popf
out
inc
subb
je
jmp
xchg
addr16
mov
push
or
into
xchg
outsl
std
mov
sbb
mov
cs
cmp
mov
mov
pop
pop
sti
mov
rcr
pop
sti
xchg
mov
sub
and
adc
fisubrl
repz
push
push
mov
push
jg
movsl
mov
shlb
dec
dec
sub
icebp
dec
cmp
xlat
rorb
or
pop
dec
cmp
mov
pop
xchg
mov
repz
repnz
dec
xchg
push
sarb
mov
outsl
fistpl
push
xchg
insb
idiv
sbb
or
dec
dec
jge
add
popf
scas
js
fwait
test
dec
push
sub
pushf
jp
pop
push
jp
cmp
cmp
sub
cltd
aam
sbb
mov
das
mov
int3
push
jle
test
mov
movsb
pop
inc
sub
mov
out
ds
mov
test
mov
test
dec
xor
push
int3
addr16
pop
dec
jb
mov
mov
sbb
clc
fistpll
sbb
jno
mov
xchg
push
sbb
ja
sbb
cmp
test
and
add
test
popf
sar
adc
push
test
fldenv
mov
out
arpl
dec
adc
push
mov
repz
hlt
cmp
cmp
jo
xor
or
mov
xchg
mov
rcl
add
int
icebp
sub
xchg
sub
loope
lea
popa
xchg
jl
xchg
pop
xchg
bound
sarb
cs
ret
dec
mov
mov
push
xlat
int3
adc
test
mov
xor
ret
hlt
add
xlat
scas
or
retw
dec
enter
arpl
mov
lods
popl
fisubrl
sbbl
rorb
lock
repnz
sbb
mov
sbb
icebp
jecxz
fdivrs
xchg
fistps
out
jno
aam
xorb
testl
sbb
sbb
and
int3
pop
out
test
mov
outsb
sahf
lods
iret
cmp
and
inc
aad
mov
sub
jae
push
fidivrl
fs
andl
hlt
mov
dec
mov
adcl
lds
or
adc
clc
xchg
mov
push
stos
fstl
lds
int3
loop
dec
gs
fsub
xor
fmul
sub
xor
mov
and
cmc
hlt
lret
cmp
pop
or
fstpt
mov
and
add
into
lret
cli
rol
mov
push
add
jl
insl
jp
dec
les
cmp
test
gs
add
cmp
inc
sub
ret
ds
popa
mov
add
ja
fstpl
push
push
pushf
jmp
push
dec
lds
stos
andb
sub
adc
add
jbe
sub
leave
out
mov
mov
out
mov
jno
mov
insb
and
inc
push
dec
xchg
xor
push
lret
sbb
lahf
push
cli
das
xor
data16
into
jmp
mov
pop
push
sub
sahf
ror
push
pop
movsl
gs
jb
imul
push
fidivl
jns
dec
jae
xchg
push
ss
pop
scas
cmc
cmp
stc
mov
ret
xor
inc
popf
push
pop
adc
pop
das
stc
fxch
push
mov
cmp
cmp
scas
dec
push
pusha
loop
sub
pop
mov
and
mov
sbb
or
cmc
or
movntq
cs
movsb
ret
int3
in
in
enter
or
out
mov
fwait
and
bound
scas
adc
aad
adc
sarl
mov
popf
inc
sbb
movsl
sub
add
pusha
pop
xor
testb
lds
jb
pop
jb
jb
sub
icebp
sbb
dec
pop
and
inc
inc
or
jmp
rcrb
nop
pushf
std
or
ljmp
jg
imulb
pop
cmp
int3
inc
mov
mov
mov
push
outsb
popf
shrl
dec
sub
xor
clc
pop
hlt
clc
imul
shl
or
pop
push
shll
out
jge
xor
rorl
sahf
inc
ret
hlt
into
xor
pop
jle
mov
dec
or
xchg
xor
dec
test
xchg
xchg
int
and
ret
arpl
push
aad
and
adc
jl
jecxz
imul
dec
mov
xor
cmp
pop
jp
adc
je
cmpsl
mov
test
iret
sub
xchg
jo
or
mov
sub
mov
mov
adc
mov
clc
dec
mov
js
ficoms
xor
sahf
pop
jb
mov
add
add
jbe
in
push
aam
xlat
aad
das
gs
pop
pop
pop
fadd
adc
xor
dec
mov
and
pushf
adc
add
iret
rcll
imull
and
jmp
inc
add
inc
in
jmp
mov
mov
jne
sub
xor
ljmp
xor
mov
lods
pop
aam
andb
js
orb
sbb
dec
lret
xor
xchg
pop
mov
popf
sub
and
fsubp
xor
cli
jno
fwait
push
adc
jno
outsb
push
mov
inc
faddl
and
cmp
xchg
cmp
js
int
xor
add
add
lea
pop
das
jmp
call
nop
aaa
mov
xchg
jns
leave
dec
shl
sbb
inc
inc
or
cli
and
icebp
int3
jnp
jo
pop
into
addb
inc
mov
sbb
mov
les
xlat
adc
fdivrp
fisubs
mov
aaa
arpl
ret
xchg
fcmovnbe
dec
scas
push
adc
subb
ret
xlat
dec
shll
hlt
pop
loopne
in
inc
je
sarl
into
xlat
cmp
mov
sub
int3
loopne
push
dec
push
iret
xchg
cwtl
lcall
enter
push
das
andb
ljmp
or
stos
jnp
hlt
dec
dec
fcomi
ja
cwtl
xchg
xchg
dec
jmp
push
push
mov
sbb
cmp
cmp
outsl
in
aad
cld
outsl
sbb
push
push
cmp
pop
imul
imul
daa
les
nop
push
mov
pop
add
push
icebp
mov
mov
or
insl
mov
in
and
xor
jp
sbb
pop
mov
xchg
std
pop
enter
push
pop
ficomps
and
xchg
or
adc
outsb
pop
dec
leave
subl
mov
dec
mov
adc
stc
dec
xor
mov
push
push
sbb
adc
cmc
and
push
cmp
push
test
cmp
and
ret
lret
out
imul
and
nop
pop
mov
sub
std
jne
pop
addr16
fdivrs
enter
adc
dec
aas
loope
jne
sbb
clc
shr
adc
or
sbbl
sub
cltd
mov
push
lock
aaa
push
mov
loop
cmc
sbb
xchg
cld
test
push
add
mov
mov
insb
push
or
add
jns
cmpsl
pop
cli
mov
cltd
scas
and
lret
addr16
and
std
call
mov
push
js
sub
push
jl
pop
clc
push
shlb
ret
pushf
pop
std
jg
pusha
xor
mov
aad
mov
pop
cmp
mov
je
mov
mov
lods
xchg
push
inc
ror
cmp
int3
push
push
pop
inc
andl
testl
adc
jp
xor
xchg
mov
lds
adc
push
dec
lea
sbb
and
mull
loopne
addl
adc
sub
sbb
sbb
loope
cmp
add
xchg
loop
cmp
shrb
mov
xor
push
push
jg
stos
into
adc
pop
test
mov
or
outsb
pop
or
in
jecxz
lret
xor
sbb
outsl
add
movsl
mov
fdecstp
outsb
xor
inc
xor
fcoms
cwtl
mov
push
lahf
pop
xchg
and
xchg
push
cmp
or
ja
scas
mov
push
lods
into
lds
mov
mov
jl
cmpsb
movsl
push
jle
es
les
mov
dec
dec
cmp
test
dec
or
cwtl
sub
imul
in
sub
sbbb
mov
or
adc
or
sbb
sarl
lods
fildl
rcr
fidivs
push
mov
and
inc
mov
pop
arpl
xchg
shlb
adc
data16
pop
push
cmpsb
push
sbb
jnp
into
scas
push
stos
push
push
ret
std
push
cmp
xor
cli
sub
into
dec
dec
cmp
pop
mov
aaa
and
pop
cmp
fnstcw
js
mov
je
adc
push
clc
bound
shrb
xchg
jne
sbb
cmp
orb
rcl
jno
fidivrl
mov
adc
das
repz
jmp
imul
fdivrs
xchg
xor
sub
shl
or
je
cmpsb
fisubl
aad
mov
cmc
ret
les
js
cmp
stc
cs
jmp
lret
insl
test
sahf
pop
mov
rcr
sub
jmp
mov
pop
rolb
mov
xor
push
dec
aam
ds
cmp
sub
fistpll
jecxz
jno
mov
repnz
fs
add
dec
je
inc
jno
cmpsb
dec
jl
addb
xchg
jne
xor
xor
les
iret
or
jno
aam
sub
movb
push
add
cmpb
add
jb
cmc
mov
cmp
mov
das
sahf
insb
push
push
mov
mov
push
inc
icebp
repz
mov
sbb
cmc
std
mov
mov
jmp
lahf
mov
mov
inc
andb
fsubrl
push
shlb
mov
outsb
and
sbb
imul
sub
ss
ret
cmpsb
rcrl
aas
sbb
lea
push
iret
xor
imul
mov
cmc
and
add
out
dec
test
pop
pop
out
xor
pop
insl
sbbb
subb
repz
js
in
push
lcall
cmp
fnstsw
xor
mov
sub
pop
adc
cmp
pop
fs
jo
jo
fnstenv
mov
sbb
fdivrl
pop
sub
cmp
popa
jbe
xchg
cmp
push
adc
jmp
mov
push
push
cmp
out
in
movsb
jg
int
xchg
lock
les
mov
xor
outsl
outsl
fbld
lds
int
push
mov
fcomp
add
fsubrs
mov
xchg
xor
fcoml
and
hlt
xchg
push
jno
adc
pop
jo
es
and
adc
push
rorl
dec
mov
mov
xor
jge
cmpsb
shll
add
imul
test
or
sbb
dec
in
aas
sarl
sub
cs
sar
stos
mov
mov
divb
fmull
loop
inc
sub
inc
mov
xor
pop
movsl
xor
ret
jge
add
cltd
and
mov
push
mov
fsubrs
and
xlat
sbb
or
push
sub
outsb
clc
or
pop
subb
inc
rorl
out
xor
in
or
fistps
lods
into
and
add
loope
out
call
add
inc
ljmp
icebp
sub
out
icebp
xor
mov
mov
dec
inc
leave
mov
mov
and
or
dec
int
pop
mov
or
in
cld
inc
jns
shll
xchg
lods
repz
xor
and
movsb
jp
sub
ror
js
imul
popa
push
mov
rolb
xor
lea
mov
and
sbb
adc
lret
scas
pop
jl
sbb
cmp
adc
leave
and
icebp
ljmp
xor
shll
inc
ret
aad
sbb
loopne
add
xchg
mov
adc
ret
and
aas
push
sbb
jo
pop
or
testb
in
mov
shrb
jns
cmc
mov
loop
mov
in
cli
fs
xchg
je
mov
sahf
mov
xchg
push
arpl
fistpll
stc
mov
test
arpl
xor
xchg
out
stos
outsb
fmul
xor
push
out
cmpsl
repnz
dec
fbstp
jnp
and
popa
sbb
addr16
push
jo
addr16
sbb
xchg
inc
cltd
or
sub
dec
stos
out
cmp
mov
rcll
xchg
mov
add
push
pop
shlb
or
imul
movsl
xchg
pop
mov
cmp
dec
les
sbb
cmp
sub
fisubrl
add
adc
mov
and
cli
stc
push
or
ficomps
lcall
xchg
add
mov
das
inc
lret
xor
sbb
mov
int3
sub
cli
imul
lahf
sbb
stos
lcall
sbb
test
popa
pop
adc
pop
mov
mov
xor
sti
push
shrl
lds
sbb
stos
jecxz
inc
ds
dec
dec
push
mov
sbb
cmp
sub
ficompl
push
mov
mov
jecxz
clc
call
pop
cmpsl
pop
inc
cltd
pop
popa
cmpsl
cmp
int3
test
lahf
xchg
mov
jns
loope
xchg
xchg
incl
and
sahf
add
xchg
sub
fcoms
js
jns
es
cmp
sub
ret
das
and
xchg
test
loop
adc
adc
out
sub
cmp
in
imul
cli
cmp
fistpll
pop
mov
int3
int
filds
je
adc
mov
loopne
mov
data16
sbb
scas
jne
pop
lea
ljmp
or
add
mov
lods
push
movsb
aam
sbb
shr
loop
lret
pop
iret
mov
scas
xor
sbb
das
cmp
mov
fs
mov
sub
adc
cltd
mov
data16
bound
dec
outsl
sbb
lock
cmpsl
enter
xchg
sbb
sub
data16
sub
in
push
loope
cli
dec
test
stos
out
idivb
push
int3
cld
cmp
dec
fbstp
sbb
cs
sbb
pop
lret
aas
and
bnd
rclb
pop
iret
fildl
adc
ret
xchg
loope
or
and
iret
dec
stc
mov
or
aas
jp
add
inc
sbb
arpl
lcall
repz
hlt
adc
sahf
jbe
xor
mov
sbb
add
into
xchg
fisttps
lock
aaa
mov
daa
dec
xchg
push
sbb
dec
xchg
jg
sbb
addr16
push
or
lret
ljmp
adc
push
xlat
pop
adc
xchg
cmp
divl
out
inc
mov
xchg
jbe
push
ficomps
jg
xchg
popf
imul
mov
mov
sub
sbbb
sbb
jp
jo
xor
jno
sbb
xchg
cwtl
or
imul
in
or
and
icebp
lcall
sti
imul
js
lods
add
cmp
shrl
shrl
addl
lcall
sbb
pop
jmp
and
out
adc
aam
rol
test
inc
test
or
imul
jo
in
cmp
adcb
push
call
rclb
pop
cmpsb
and
in
dec
es
ror
adc
cwtl
pop
push
sub
sti
jb
sbb
cld
and
pop
xor
xorb
xchg
daa
arpl
decb
jg
les
pusha
outsl
sarl
adc
leave
leave
cs
sub
pop
and
xchg
push
and
dec
sub
inc
mov
xor
cmp
nop
popf
xchg
push
mov
push
int3
into
dec
enter
outsb
dec
dec
and
mov
fnstsw
idiv
out
cmpsb
daa
mov
jo
and
and
fadds
inc
sub
fsubrp
addr16
mov
je
into
dec
jae
ljmp
cmpl
je
xor
aas
das
dec
iret
dec
shrl
push
nop
mov
mov
cltd
jns
mov
fcoml
icebp
pop
mull
or
jno,pt
cltd
pop
dec
push
inc
jno
xlat
icebp
imul
jle
gs
lcall
push
pop
shrl
pushf
dec
push
add
mov
push
fxch
jl
inc
mov
ss
mov
ret
ds
and
out
cltd
adc
ret
cmc
cmpsb
and
mov
incb
fsubs
cmp
cmpsb
leave
jge
add
sahf
icebp
stc
sub
jmp
loop
jbe
shlb
add
stos
mov
and
in
adc
rorl
xchg
cmp
xchg
nop
jmp
test
lret
or
xchg
fwait
mov
aad
insl
or
pop
lahf
and
mov
mov
leave
outsl
mov
pop
decb
stos
popa
xlat
fnstenv
gs
bound
cld
test
in
sahf
clc
push
insb
sbb
jp
mov
sbb
sub
stos
pushf
inc
es
or
mov
push
xor
cli
mov
fisubl
fucomi
inc
pop
pop
jle
push
fisttpl
daa
push
nop
das
xor
scas
mov
fs
sbb
out
les
neg
pop
dec
lock
xchg
fstpl
pop
add
jno
aaa
std
insl
jns
xchg
dec
in
cmc
mov
inc
movsl
push
mov
rcll
pop
imul
rorl
cmp
dec
imul
pop
or
divl
xchg
scas
xchg
jmp
inc
outsb
mov
shll
push
push
jge
clc
test
jmp
fcmovnb
fistpl
scas
adc
cmp
dec
imul
imul
out
lret
pop
daa
pop
push
pushf
add
insb
mov
outsb
cmp
xor
pop
mov
add
jmp
pop
xchg
fisubl
jg
and
ss
sbb
xchg
or
cmpsl
in
inc
scas
push
dec
mov
add
es
pop
add
loop
test
call
dec
test
sbb
adc
push
xor
stos
into
int
daa
xchg
out
dec
xor
ja
cmpsl
push
pop
add
rcrl
aas
pop
mov
mov
push
mov
mov
dec
push
fimuls
or
rcr
add
fnstcw
iret
cmp
adc
into
cmp
xchg
fisubs
hlt
nop
cmp
test
mov
das
jle
inc
outsb
xor
fcomps
pop
adc
pop
inc
fsubs
mov
jle
sbb
in
mov
cmp
inc
movsl
int3
mov
push
repnz
pop
push
xchg
adc
out
nop
xchg
outsl
cwtl
xchg
sbb
mov
cmp
enter
rcrb
adcb
pop
data16
aas
sub
xchg
pop
sbb
cmp
outsl
push
add
dec
dec
add
jae
outsb
cmp
hlt
stos
sbb
and
jnp
jb
divl
adc
jns
cmp
sar
call
jle
or
cmp
mov
and
loop
mov
daa
in
or
das
cmp
and
sbb
pop
add
adc
clc
cmp
jb
jnp
idivb
es
mov
inc
adc
movsl
sub
data16
inc
jnp
dec
enter
xchg
mov
pop
out
cld
or
repnz
cmc
and
sbb
jp
inc
sub
xor
test
gs
mov
sub
movswl
fsubrs
push
mov
jg
imul
pop
mov
or
call
jmp
movsb
popa
negl
jno
lods
movsb
fcmovb
jl
jge
enter
sbb
or
popf
inc
and
adc
jbe
repz
and
insl
adc
imul
mov
pop
jno
inc
xlat
sbb
xchg
ja
int3
xor
popa
ret
and
cmpb
or
mov
or
pop
jns
mov
popa
cwtl
mov
jnp
adc
fdivs
mov
clc
loope
jo
bound
es
lock
scas
movsb
cmp
lret
inc
jnp
popf
int3
daa
js
divl
pop
xchg
cli
lea
je
inc
xlat
push
nop
sar
adc
jmp
mov
adc
and
cltd
decl
es
and
xor
cmp
cmpsb
sbb
inc
adc
fildl
test
and
and
lds
xchg
gs
jne
fcmovne
insl
js
mov
fsubs
stos
mov
stos
inc
or
cmpsb
and
aas
xchg
mov
sub
test
xchg
aas
data16
jo
xchg
lcall
jecxz
inc
push
call
mov
pop
push
lods
push
sub
div
loop
iret
mov
outsl
push
push
push
popf
xor
dec
inc
popa
cmpsb
xchg
test
push
inc
xlat
xchg
popa
outsb
add
in
rcrb
and
push
out
cmp
rcll
fldl
fs
inc
lods
iret
loopne
lea
stos
jnp
int
cltd
xlat
test
sbb
in
in
mov
ja
xor
loop
stc
dec
jle
jge
inc
sub
sbb
xchg
daa
mov
loope
inc
lcall
lret
and
sbb
xor
lods
sbb
add
xor
mov
insl
addr16
lcall
inc
xor
xchg
xchg
in
or
dec
test
daa
mov
repnz
es
cmp
add
loop
adcb
ljmp
xchg
jo
sahf
cmp
loop
fstps
dec
lret
idiv
fs
jns
cli
shlb
xchg
leave
mov
cmp
fdivrl
cmp
xchg
inc
cltd
sub
dec
push
jp
nop
pop
inc
rcrb
les
adc
mov
push
xchg
pop
or
and
pop
in
js
lret
lahf
push
xchg
xor
ljmp
push
insl
lahf
subl
sub
inc
adc
in
sbb
mov
ljmp
xchg
mov
mov
add
aas
lahf
outsb
fwait
mov
or
mov
ljmp
add
test
mul
mov
or
add
fstps
inc
mov
push
int3
mov
test
pop
out
adc
push
jb
loop
mov
mov
push
outsw
jbe
add
cmp
mov
insl
imulb
jmp
sub
dec
or
sub
shr
les
mov
jnp
and
shr
mov
dec
inc
pop
xchg
scas
push
sbb
dec
lahf
es
fistps
xor
xchg
xor
out
fcompl
add
xor
movsl
dec
arpl
add
push
ret
inc
xchg
aaa
rorb
mov
mov
stos
fistl
push
pusha
insb
daa
pop
xor
fld
adc
lock
inc
imul
das
insb
sti
and
sahf
fisubl
cmpsl
sbb
cltd
loop
push
mov
pop
cmpsl
pop
mov
cmp
adc
and
lods
test
inc
sbb
icebp
sub
cltd
aad
fidivrl
mov
call
cmovnp
mov
cmc
or
mov
mov
cmpsl
jnp
adc
mov
mov
jno
adc
popf
push
repnz
hlt
rcll
lock
and
sub
das
and
push
add
adc
or
in
and
cltd
fs
cmp
insb
sti
scas
pop
push
or
movsl
in
out
loope
and
inc
orl
cwtl
push
out
inc
mov
ret
xor
dec
or
pop
cmpsl
xor
arpl
je
inc
rclb
orb
mov
fs
jl
data16
ja
sti
or
inc
in
outsl
push
lock
dec
push
add
pop
dec
mov
jmp
enter
mov
jns
fmull
adc
push
push
in
cmc
stos
ljmp
or
xor
dec
dec
test
lea
cmc
fstpl
xlat
xchg
jnp
rcll
lds
loop
jp
sub
xchg
sahf
aam
mov
pop
jmp
mov
iret
cmp
ret
cltd
lods
jno
lds
mov
xlat
stos
pop
pusha
ret
cmp
inc
xor
aaa
jb
mov
ja
jbe
push
inc
sub
mov
and
mov
sbb
stos
lds
xchg
cmpxchg
sahf
repnz
pop
or
jmp
call
loop
into
das
movsb
into
icebp
push
out
adc
in
push
icebp
movsl
out
cmp
cmp
scas
jno
dec
push
ljmp
data16
pop
xchg
mov
daa
xor
lret
push
mov
jg
aad
std
push
int3
jle
insl
pusha
in
shlb
fisubl
jns
jp
push
inc
jnp
add
cltd
sbb
fisubrl
pushf
incb
mov
cmp
inc
mov
jne
push
data16
push
divb
bound
testb
cmpsb
sahf
sub
cli
adc
push
dec
jnp
out
xlat
push
pop
ficomps
inc
add
movsb
push
and
mov
jb
mov
xchg
sbb
mov
sbb
add
fimull
sub
add
mov
imul
sbb
mov
mov
inc
orl
mov
out
jno
mov
cwtl
daa
lahf
xchg
stos
mov
lcall
add
fldenv
inc
cmp
stos
push
jnp
ljmp
fsubp
lahf
and
mov
ss
sub
mov
pop
aaa
push
cmpsb
out
mov
outsl
lea
addl
sub
sub
add
addr16
dec
mov
mov
xchg
push
ja
xchg
fistpll
test
mov
cmp
mov
out
addr16
add
jmp
push
xchg
out
ret
arpl
das
mov
push
mov
cmp
mov
ja
inc
jnp
call
pusha
jge
pop
je
sub
xchg
pop
pop
push
iret
and
or
mov
jp
or
gs
jb
fcmovnbe
push
daa
adc
pop
mov
js
mov
pushf
ja
fwait
roll
fisubs
fisttpl
sahf
leave
ljmp
ds
sbb
and
nop
lds
shll
movsb
sbb
setb
xchg
mov
inc
push
mov
inc
jle
shl
cmp
daa
jle
pop
pop
mov
dec
lds
in
xor
push
sbb
inc
std
inc
fldt
fwait
xlat
xchg
jbe
movsb
fdivrp
div
push
inc
aas
mov
inc
pop
cmp
mov
es
jl
fwait
nop
inc
jb
inc
mov
nop
push
test
sbb
pop
xchg
xchg
aam
pop
or
imul
shrb
or
push
push
out
lds
xchg
mov
lods
xchg
xchg
adc
adc
mov
sub
js
aas
pop
push
xor
jnp
fidivrs
mov
add
mov
add
cwtl
mov
dec
sti
int3
lahf
lock
lea
and
mov
jne
cli
test
jno
jb
jle
adc
and
adc
cmc
sub
mov
push
rorl
std
dec
push
out
ret
popf
out
inc
xchg
loopne
pop
and
psubusb
push
mov
jecxz
pop
jge
loope
xchg
gs
and
mov
fwait
jns
mov
mov
jb
push
mov
repnz
mov
jle
or
dec
bound
out
gs
out
jg
enter
cmp
js
or
mov
add
sbb
je
mov
fsubl
jnp
add
shl
pop
sbb
or
mov
test
adc
lret
insl
in
int
mov
mov
sbb
jg
adc
inc
mov
nop
dec
popf
lahf
sbb
sub
inc
or
dec
movsb
mov
push
mov
test
adc
rcrb
add
or
or
fstps
pusha
sbb
xchg
js
enter
in
pusha
push
mov
int3
clc
cli
fidivrl
add
mov
add
ret
lret
repnz
repnz
adc
aad
adc
jl
shl
jb
sarl
and
lods
jno
pop
fcmovbe
ret
mov
scas
mov
push
cmp
add
sbb
xor
cmp
cltd
inc
inc
cmp
mov
mov
sbb
adc
iret
adc
daa
test
push
jb
cli
ret
insb
dec
and
idivb
into
sets
fnsave
cmpsb
inc
ret
incl
js
jp
cmp
imul
cmp
pushf
mov
inc
push
pushf
cli
mov
lret
cltd
fimull
pop
cmp
mov
and
scas
rcrl
cmp
xchg
xor
sbb
mov
sub
movsb
mov
cmp
lahf
call
mov
std
mov
aam
loope
mov
les
push
xor
dec
es
sub
adc
mov
lret
sbb
adc
and
or
xchg
cmp
and
movsb
and
push
xchg
dec
mov
cld
orb
test
out
stos
test
cmp
imul
stc
test
out
sub
insl
in
cmpsb
push
adc
mov
out
iret
ds
in
fsts
cmp
adc
fidivs
int
loope
adc
ret
ficoml
xor
add
jb
sbb
popa
lcall
daa
mul
jno
out
mov
add
cltd
pop
mov
mov
imul
int
or
js
mov
jb
fdivl
fs
push
mov
pop
pop
push
xlat
iret
and
std
cmc
mov
cmpsl
push
xor
jmp
mov
nop
mov
and
cmp
xchg
das
stos
push
fcoml
add
inc
jne
sarb
das
mov
dec
add
insb
cs
mov
mov
sub
dec
out
popl
enter
inc
and
scas
call
push
dec
jbe
jno
fistl
sti
jg
cmpsl
fst
push
dec
fimuls
jo
and
push
pop
scas
int3
adc
add
xor
adc
jmp
jnp
xor
push
dec
mov
lock
and
pop
or
jb
movsb
repz
aaa
adc
sti
inc
add
sub
push
mov
add
jne
cmc
rcrb
loop
and
test
rorb
mov
push
lds
lret
imul
pop
bound
repz
xchg
fsubrs
push
lds
in
insl
dec
test
int3
stos
and
xchg
out
lods
sar
mov
cmp
insl
or
pop
pop
inc
arpl
test
cmc
rolb
dec
xor
or
mov
insl
adc
and
xchg
bts
xorl
cwtl
dec
dec
xor
xor
sub
mov
subl
mov
pop
stc
jne
jl
imul
jnp
lret
jmp
ficoms
pop
shrb
xor
shrl
xor
cld
push
mov
dec
xor
test
fildl
xor
dec
sub
ret
aaa
and
xchg
repz
jne
and
sub
stc
pop
xchg
mov
imul
cmp
sub
stos
popa
cmp
lret
push
test
popa
rorl
mov
push
outsb
mov
int3
out
and
sub
or
push
sub
cmp
jl
clc
pushf
and
sti
pop
js
popa
cmpsb
push
mov
cmp
aad
nop
out
add
call
sub
mov
popf
push
popf
xchg
fnsave
aas
test
xchg
das
push
sbb
andl
or
insb
sbb
lcall
das
mov
push
jge
fildl
pop
pop
sub
mov
xor
sub
pop
sbb
xchg
jmp
icebp
adc
adc
aad
out
out
push
aaa
mov
movsb
cmc
mov
in
pop
xor
adc
inc
mov
xchg
mov
push
mov
xchg
dec
test
rorb
das
cld
decb
cmc
mov
jno
mov
cmpsb
mov
adc
xchg
out
outsb
dec
add
les
sti
lcall
out
lret
int3
cmpsl
add
push
push
scas
mov
mov
push
pop
scas
xchg
mov
jno
das
lret
clc
mov
jp
xor
dec
cmp
adc
or
sbb
inc
push
adcb
mov
pop
mov
dec
push
dec
mov
inc
mov
adc
out
push
mov
sbb
in
repz
cwtl
popf
jp
ror
movb
mov
test
stc
push
add
scas
pusha
imul
enter
sarb
mov
push
mov
jg
and
jl
dec
in
jbe
rolb
jbe
stos
stos
xchg
int3
hlt
mov
and
les
mov
outsl
push
lods
lods
loope
gs
push
std
cwtl
in
frstor
sub
in
and
xchg
mov
jno
inc
leave
ret
push
push
and
pushf
lcall
cmp
jp
jne
dec
dec
xlat
xchg
lret
jo
cmc
int3
adc
dec
fisttps
mov
das
sbb
jne
lret
sub
fbstp
mov
jle
enter
fidivl
xchg
or
das
mov
pop
sub
or
scas
fsubs
fmul
jg
dec
ds
shl
xor
mov
out
pop
xor
pop
inc
mov
inc
in
jle
cmpl
dec
xor
inc
movsb
pop
aam
lcall
jnp
popa
jle
sbb
jecxz
fldenv
inc
mov
sbb
pusha
jle
test
inc
in
cmpsb
jno
jo
push
xchg
sub
aaa
js
pop
icebp
xchg
dec
push
adc
pop
leave
ret
inc
repz
jo
nop
jb
pop
js
hlt
dec
dec
pushl
fists
into
push
add
push
aaa
inc
lock
data16
dec
paddsw
jno
negl
push
cmp
push
mov
mov
mov
cwtl
sub
in
ljmp
leave
negl
je
fldl
mov
lret
in
jbe
aam
cli
rcrl
pushf
das
fwait
pusha
jne
lret
scas
mov
sbb
test
push
push
fdivrs
cltd
inc
cmpsl
cld
lahf
popf
or
push
test
pop
lods
cmp
push
xor
sub
clc
jl
mov
daa
cwtl
mov
loopne
dec
push
ljmp
add
cmp
and
enter
sbb
or
mov
pop
mov
jo
clc
and
stos
jmp
daa
cmp
xchg
dec
and
std
sbb
push
inc
in
xchg
adc
jb
popa
mov
add
push
add
mov
xrelease
lds
shrb
push
stc
and
imul
ret
pop
inc
xchg
insb
mov
sub
sub
divb
pop
dec
test
test
fnstenv
sbb
push
inc
insl
add
mov
aad
add
lods
out
insl
xlat
rcll
mov
lea
mov
push
sub
jle
test
sbb
jmp
push
insb
lcall
mov
test
inc
lods
dec
lods
or
mov
xchg
or
pushl
js
jns
push
ret
clc
add
xor
push
aad
sub
scas
xor
es
cltd
cmp
push
jecxz
mov
mov
jle
sbb
xlat
jle
loope
sti
pop
das
sbb
mov
pop
add
fisubl
mov
mov
sbb
push
xor
xchg
int3
fdivs
hlt
enter
mov
mov
arpl
inc
fidivs
push
fsubrl
pop
or
cmp
mov
push
push
adc
popa
mov
push
mov
scas
or
jg
fsub
pop
jbe
sub
lret
hlt
xorl
jle
lds
xor
call
shrl
adc
fcomip
stos
test
shrl
test
or
imul
mov
push
pusha
adc
fs
fcoml
dec
cmp
mov
push
cmc
xor
sbb
addb
sahf
adcb
push
ds
in
xchg
push
and
popa
cld
cmpsl
and
xor
fs
mov
xor
test
jmp
int
fisttps
add
stos
pushf
add
and
stos
xor
test
add
mov
and
ljmp
shrl
xchg
push
push
mov
jno
fcompl
out
aad
or
and
in
add
jg
test
pusha
mov
sbb
or
data16
xorb
adc
pop
inc
push
add
in
outsb
mov
in
jmp
imul
fsubl
sbb
dec
cmp
xchg
pop
push
xchg
jns
fst
pop
cmp
ret
stc
and
pop
les
out
mov
loopne
sbb
mov
icebp
jns
cmc
cmpl
sbb
mov
add
leave
cld
push
iret
pushf
shrb
lret
roll
pop
and
mov
mov
xchg
repnz
mov
stos
xchg
or
fldcw
shlb
or
add
pop
stc
das
in
or
xchg
call
cmp
sub
add
es
lcall
je
lcall
cmpsb
and
or
lret
cwtl
dec
add
pop
cmpsl
fs
mov
pushl
dec
icebp
xchg
xor
or
out
pop
dec
mov
test
inc
sbb
cmpsb
sahf
bswap
ljmp
loope
shll
icebp
lods
ficoms
add
pop
xchg
adc
hlt
out
repnz
arpl
sti
jnp
iret
addr16
push
mov
mov
lcall
inc
std
xor
cmp
in
pop
or
xor
std
imul
inc
jno
dec
dec
add
mov
cmp
and
shl
je
mov
xor
ss
fucomp
mov
jg
nop
icebp
mov
ljmp
in
xchg
pop
jns
and
gs
aad
cmp
into
neg
addb
jnp
insl
or
sbb
popf
test
hlt
mov
xchg
stos
add
es
iret
ror
pusha
ret
push
roll
adc
icebp
pop
je
push
popf
jno
addr16
xor
pop
icebp
lret
jo
fimull
ficoms
std
sub
pop
test
ja
imul
push
cli
mov
or
dec
das
insb
and
pusha
mov
je
cmc
dec
mov
js
add
xor
mov
sahf
push
jp
shll
aaa
imul
sub
outsb
test
pop
dec
daa
gs
cmc
dec
pop
imul
test
mov
ja
loope
xchg
in
fnstsw
insb
push
mov
ss
mov
push
jg
das
xor
mov
pop
clc
sbb
push
and
sbb
les
stc
mov
add
mov
in
daa
nop
and
cmp
cmp
mov
test
and
dec
aad
pusha
pop
jae
ficomps
and
pushf
hlt
and
sub
insb
repnz
mov
jp
rolb
mov
ljmp
pushf
hlt
inc
xchg
popa
inc
outsl
xchg
int
inc
add
incb
das
stc
sub
loope
lods
push
mov
jecxz
clc
cli
lcall
xchg
mov
bound
addb
popf
int
lock
std
testl
sub
das
lods
mov
icebp
sbb
xchg
lea
jl
sbbl
es
int
je
and
cltd
jle
adcl
lret
and
mov
sub
mov
dec
mov
xor
sti
divl
imul
xchg
in
xor
sub
icebp
xor
lods
mov
fs
push
nop
stos
shlb
mov
pop
push
pop
aam
sub
inc
out
jp
adc
aas
mov
cltd
add
into
dec
and
je
sub
cmp
daa
leave
and
int3
mov
in
cmp
fwait
add
pop
lods
cmp
hlt
lcall
adc
mov
pop
icebp
pushf
or
imul
sbb
inc
dec
push
mov
adc
sbb
cli
rorl
push
cmp
mov
xor
mov
cltd
or
into
movsb
pop
mov
dec
mov
cmc
inc
cmpsl
cwtl
add
sub
sub
mov
or
aam
mov
fldl
in
xor
cli
push
sarl
xor
mov
aas
fistps
outsl
mov
mull
jnp
adc
pop
add
insb
in
cmp
mov
xchg
mov
ja
popa
ret
mov
xchg
sub
cmpl
sub
pop
fs
push
sahf
je
bound
lea
xor
inc
sbbl
and
aaa
jns
sbb
les
jg
or
stos
cmpsb
xchg
add
loopne
stc
xchg
mov
sbb
push
mov
jnp
jl
lret
and
scas
adc
rcrb
std
sbb
psrlw
xor
dec
push
and
es
hlt
mov
loop
cmp
int3
into
dec
mov
repz
sub
aaa
fnstsw
push
out
xchg
ljmp
sbb
sbb
cs
mov
push
cs
outsl
xor
mov
push
or
outsb
mov
mov
add
cltd
mov
fbstp
pushf
adc
movsl
movsb
test
xlat
jecxz
jmp
loope
popa
jge
push
xchg
mov
cltd
adc
sub
repnz
fs
jmp
nop
pop
xor
fdivrs
mov
sub
mov
push
jne
cmp
out
mov
aaa
push
cmpsb
sbb
ljmp
stos
test
in
mov
xlat
push
or
nop
into
scas
cmc
les
pop
pop
or
xchg
cmp
mov
mov
hlt
fsts
xchg
fcmovnu
lods
mov
enter
or
movsb
out
out
loop
ficomps
scas
shrb
sbb
rcl
push
mov
in
fdivrl
sbb
sub
mov
jb
movsl
std
fdivrl
cli
ds
aam
fwait
jno
xor
cmp
test
sbb
inc
jmp
inc
adc
adc
mov
pop
call
mov
lret
insl
fs
ret
sub
and
jo
mov
cwtl
adc
xchg
mov
mov
mov
fisubrs
scas
xchg
test
stc
movsl
andb
jmp
sub
xor
adcb
add
pushf
iret
push
in
out
in
add
imul
inc
addr16
rcl
fwait
loope
movsb
cmp
mov
inc
sbb
int
jecxz
dec
inc
xchg
sbb
cmc
push
xchg
icebp
stos
cmp
dec
outsb
pop
leave
divb
mov
mov
add
in
fsub
in
sbb
add
inc
push
lods
shll
add
sub
pop
repnz
notb
push
lahf
jne
xlat
mov
pop
dec
inc
mov
andl
pushf
inc
add
mov
bound
repz
jnp
in
mov
sub
push
ljmp
fnstenv
pop
std
bound
or
dec
pop
jp
hlt
mov
negb
jbe
mov
sarb
pop
cmp
je
in
cld
mov
mov
in
ss
mov
jecxz
mov
cmp
fsubl
mov
jmp
sub
push
sbb
or
cmpsb
jl
cli
mov
adc
ret
testl
cltd
sahf
cmp
and
dec
push
into
pop
cs
cmp
andb
jg
bnd
sub
jge
push
ljmp
das
cmp
lret
neg
mov
jmp
loop
cld
inc
into
jle
xchg
les
dec
jbe
sbbb
cmpb
test
mov
and
test
mov
enter
in
sbb
and
or
inc
dec
ljmp
sbb
xor
lcall
subb
xor
xor
xor
icebp
add
leave
shrb
mull
fisttpl
in
dec
sub
test
mov
pop
loope
loopne
push
pop
pop
inc
or
xchg
cld
incb
sub
shll
jge
dec
clc
out
pop
sbb
ljmp
xchg
add
push
push
and
mov
sbb
mov
push
jo
mov
hlt
mov
inc
cltd
inc
dec
insl
xchg
and
popa
add
mulb
adc
cmp
scas
mov
inc
out
insb
cltd
push
sub
sti
test
xlat
les
dec
xchg
lods
in
dec
dec
jnp
test
xchg
sbb
sahf
test
inc
mov
aaa
sbb
jmp
sbb
outsl
aad
cmp
icebp
add
jno
sbb
adc
push
push
xchg
mov
sub
ret
jns
in
lret
popf
clc
mov
jg
lds
enter
or
movsl
mov
out
test
decb
mov
call
repz
jp
imul
insl
lret
xor
dec
leave
sti
cld
pop
xchg
sti
cmp
jle
in
repnz
pop
fmull
fidivl
dec
inc
and
fwait
in
cmpsl
aaa
les
xchg
mov
inc
add
shrl
test
jp
xlat
insb
sahf
cmp
sbb
stos
and
pop
xchg
push
jb
mov
les
mov
stos
push
mov
or
gs
out
pop
mov
push
xor
pop
add
xor
or
or
cmp
sbbl
pop
and
imul
lahf
sahf
dec
jo
jecxz
in
repnz
xor
aas
dec
nop
stos
mov
and
jmp
dec
les
mov
sbbb
lret
shr
int3
in
negl
dec
cli
es
addl
lods
stos
xchg
repnz
shrb
aaa
cmpl
cs
pop
and
ljmp
push
fldl
rol
xor
addr16
lret
push
pop
call
shll
ds
mov
test
push
and
pushf
xor
mov
mov
int3
cld
jp
sbb
push
aas
sub
mov
fisttpll
pop
mov
sbb
adc
mov
fsubrl
inc
xor
arpl
cmpsl
inc
orb
cs
lea
jbe
dec
or
insb
pop
hlt
inc
mov
mov
pop
mov
push
cmp
inc
fs
insl
scas
sub
cmpsl
pop
inc
sbb
mov
lods
aas
cli
decb
sbb
cmp
rcr
push
dec
mov
repnz
xchg
daa
mov
lds
aam
lods
xor
pop
icebp
pop
mov
arpl
js
sbb
pop
dec
aaa
sub
lret
push
xor
negl
jp
cmpsb
sbbb
sbb
mov
cltd
sti
into
dec
bound
dec
stos
add
outsb
mov
dec
xchg
pusha
orb
into
mov
mov
movq
lahf
movsb
add
ret
inc
push
call
sub
inc
rolb
dec
push
jb
push
jle
cmp
insl
stos
fwait
push
inc
imul
imul
adc
jb
clc
pop
cs
push
loope
ss
daa
lock
jbe
pop
and
lods
adc
imul
fcmove
std
hlt
push
ds
loope
and
lahf
lahf
rcrl
movsb
sub
pop
test
inc
inc
es
out
sbb
pushf
stos
mov
repnz
jl
dec
push
lret
push
lock
test
data16
loopne
clc
xchg
mov
fsubrp
cmpsb
iret
mov
ja
mov
call
mov
push
xor
loopne
mov
xchg
jb
lds
adc
sbb
jb
popf
stos
or
rcl
dec
adc
sahf
int
pop
gs
test
insl
call
sub
pushf
fists
push
xor
xor
cmp
mov
std
jmp
pop
insl
and
xor
jae
inc
dec
call
mov
dec
jb
cmp
ror
popf
into
jge
mov
xor
pop
or
lahf
push
mov
jmp
xadd
xorb
sbb
lods
dec
ljmp
jmp
enter
and
xchg
mov
inc
pop
fistpl
mov
sbb
aad
mov
adc
push
incl
adc
icebp
pop
daa
and
mov
std
dec
cmpsl
fcomip
daa
clc
adc
mov
test
mov
movsl
add
loope
pop
and
jl
arpl
mov
sub
es
test
movsl
xor
fstps
cld
ds
jp
adc
cmc
mov
lret
popa
mov
adc
mov
mov
in
cmpb
aas
fwait
pop
addb
les
popl
add
jae
repz
test
mov
repz
mov
out
pop
cld
mov
pop
cmp
xor
mov
or
mov
in
or
aas
repz
jecxz
cmp
xchg
sbb
sbb
es
xor
aam
jecxz
sbb
fsubrl
hlt
sub
sub
add
add
pop
pop
mov
or
fidivrs
push
imul
xchg
inc
xor
hlt
std
scas
inc
add
rcrl
xchg
push
and
push
iret
pop
bnd
daa
imulb
cmp
pop
jecxz
imul
inc
in
lahf
daa
out
mov
mov
sbbb
out
cs
hlt
imul
cmpsl
shlb
sbb
imul
mov
add
xchg
rclb
mov
hlt
stos
push
mov
inc
sub
dec
scas
push
mov
jb
xchg
or
xchg
mov
arpl
sbb
rorl
push
xor
jae
mov
sbb
xchg
bound
fidivrs
add
sbb
mov
or
shrl
dec
ror
mov
pop
jnp
mov
icebp
xor
pop
inc
les
inc
pop
push
mov
inc
in
mov
inc
jg
ret
test
inc
mov
mov
std
movsl
dec
and
dec
popf
or
jge
mov
hlt
in
mov
in
add
inc
mov
inc
adc
add
call
jp
scas
pop
nop
xor
insb
push
xor
hlt
lahf
ljmp
jl
out
insb
add
mov
sub
rorl
popa
pop
and
imul
adc
mov
stos
lods
xchg
inc
shlb
dec
mov
test
fwait
sub
ficomps
loope
scas
aam
push
jae
dec
cltd
jge
rcl
and
xchg
adc
je
mov
and
jle
pop
mov
dec
push
cmp
scas
stos
lret
pop
imul
lret
xlat
mov
mov
fdivl
imul
mov
loopne
push
fcomps
daa
test
hlt
xchg
push
mov
aad
dec
adc
or
lock
fwait
xor
pushf
push
push
das
add
jae
lds
popf
rcr
scas
push
cmp
sbb
je
into
aad
adc
call
dec
xor
addr16
imul
aam
and
nop
pushf
inc
sub
pusha
sub
adc
xor
fcmovnb
fidivs
push
mov
ficompl
icebp
pop
ret
insb
les
fmul
je
cmp
gs
lcall
movsl
xchg
and
daa
jecxz
idiv
xor
and
pop
cmp
pop
adc
jge
scas
inc
fisubrs
fisttpl
bound
fyl2xp1
xor
outsb
or
lods
jmp
sahf
adc
aam
mov
mov
jg
sbb
inc
jecxz
popa
cld
int3
and
sbb
imul
lods
xlat
neg
adc
inc
mov
test
xchg
sub
lret
in
sbbl
xchg
stos
inc
int3
lock
fdivrl
popa
dec
mov
xor
mov
gs
andps
mov
lret
jns
leave
sti
push
cmp
pop
inc
add
mov
aam
ds
ljmp
movsl
push
push
or
out
cmc
ss
mov
insb
fcomps
fwait
addb
pop
add
adc
mov
movsb
lea
jns
or
test
nop
int
dec
nop
sub
push
and
mov
leave
stos
add
jg
or
mov
imul
js
push
into
pop
inc
pop
mov
scas
daa
icebp
sbb
pop
jg
mov
xor
adcb
push
lea
pop
lret
push
fcomp
fstl
outsl
dec
loopne
cmp
xchg
add
jg
ret
xor
fwait
xor
mov
pushf
push
loope
dec
pop
jl
add
es
jmp
imull
mov
mov
std
loope
pop
xor
and
jl
jmp
or
les
pusha
cmpsb
mov
jnp
aad
lock
dec
sahf
scas
ret
mov
movsb
or
xchg
fcomip
dec
xor
adc
sbbb
lock
pop
mov
push
push
and
stc
sbb
mov
pop
test
call
cmpsb
push
sub
push
mov
icebp
fdivl
mov
or
cs
jle
loope
sbb
dec
lret
or
add
or
push
pop
sub
sbbl
sbb
lods
push
sarl
dec
insl
dec
cmp
inc
fstps
jge
fdivrl
mov
xchg
jb
popa
adc
inc
iret
lcall
xor
jnp
xchg
outsl
out
xchg
clc
jns
and
cmovp
insb
sbb
mov
and
or
stos
mov
mov
fstpl
pop
lods
mov
cmpsl
xchg
xchg
gs
xchg
in
cli
sub
sbb
cwtl
mov
dec
jg
mov
and
unpcklps
push
lret
mov
mov
mov
xchg
sub
jno
and
sub
push
xchg
cmp
iret
stos
mov
lret
leave
sbb
mov
call
xor
xchg
pop
insb
cmp
cmc
ja
iret
xchg
out
cmp
push
jmp
cltd
cmp
je
mov
ss
pushf
xor
outsl
adc
in
mov
ficompl
insb
shll
ja
sub
shrl
xor
rclb
fcompl
roll
inc
mov
in
sbb
pushf
ret
aaa
lahf
cmpsl
stos
push
xor
jo
xchg
add
fwait
fwait
loop
lret
jne
sub
sub
fcmovnu
jb
stos
out
in
cmp
add
sbb
push
cmp
dec
push
int3
sub
cltd
mov
xor
sbb
cli
mov
out
xchg
call
push
divb
mov
push
mov
jp
xlat
pusha
sti
cmp
mov
cmp
lock
and
pop
fimull
pop
push
fwait
test
gs
lret
push
cli
mov
ficoml
pop
add
shl
add
clc
sbb
sbb
repz
adc
lcall
out
pop
pushf
mull
cltd
pop
pop
push
test
fnstcw
sub
in
push
dec
clc
repz
out
dec
cmp
ljmp
fnstsw
lock
jg
cmc
dec
into
sarb
xor
addr16
sub
lret
outsb
daa
xor
push
repz
fldcw
jno
fiadds
fwait
icebp
mov
and
inc
or
insb
aam
fimuls
dec
or
call
or
push
inc
mov
dec
xchg
pop
out
or
scas
div
adc
cltd
movsb
imul
push
outsl
pop
mov
shr
add
dec
sub
jnp
sarb
cmpsb
mov
push
dec
sub
add
in
ret
mov
mov
sub
sub
enter
mov
xor
scas
enter
xlat
dec
mov
xchg
ljmp
adc
arpl
xchg
xchg
stc
push
lahf
scas
inc
pop
test
lds
sarb
adc
imul
clc
push
push
das
outsl
lock
dec
xchg
mov
outsl
cmp
je
aaa
xor
add
ss
repz
arpl
leave
iret
mov
pop
cmp
popf
cmp
test
cmp
rol
mov
into
add
scas
xchg
push
outsl
shrb
xchg
ret
ret
adc
addr16
shl
test
jmp
xor
xor
aad
sub
mov
leave
into
ret
orb
cs
and
dec
or
int3
jecxz
mov
les
jl
adc
and
push
stos
aam
adc
sub
and
sahf
in
test
stos
inc
mov
xor
cmp
fmuls
jnp
xor
int
fcompl
iret
inc
sbb
icebp
jmp
bound
pop
mov
sub
aas
adc
test
mov
adc
pop
cmpb
sub
stos
sbb
aaa
addr16
mov
test
add
jle
mov
sarl
mov
aas
int
add
push
dec
fs
inc
pop
push
cmp
ljmp
mov
sub
hlt
addb
sbb
jnp
add
stc
dec
sbb
call
jno
and
sbb
inc
js
cmc
into
jle
imul
fs
int3
adc
sbb
je
add
sarb
pop
sub
sar
or
pop
mov
out
imul
mov
mov
lret
fimull
or
push
xchg
xchg
in
jns
sbb
test
inc
adc
outsb
aaa
push
jns
jne
int3
adc
hlt
push
clc
mov
sahf
push
mov
xchg
dec
js
fistpll
push
shll
int
test
icebp
cltd
icebp
loopne
cmpsl
xchg
ds
jns
sbb
or
mov
cltd
add
lret
in
mov
ret
push
push
pop
inc
imul
sub
sbb
xchg
mov
cmp
push
jl
cmovne
push
cmpsl
inc
pusha
idivb
push
lods
sbb
lods
xor
in
or
iret
cmc
inc
lods
out
cli
int3
mov
hlt
enter
inc
jnp
loop
jb
cmp
push
inc
jo
ret
xor
adc
cs
nop
jnp
mov
dec
pop
cmp
lret
mov
mov
sub
int3
inc
inc
lea
fstps
into
fsincos
or
leave
sub
add
sahf
cmpsl
rolb
in
rcl
iret
push
push
nop
lea
jnp
xchg
jmp
mov
mov
repnz
cmc
gs
and
outsl
mov
loopne
inc
jo
int3
mov
out
push
cmp
je
xchg
xchg
mov
jb
push
mov
pusha
int3
in
ljmp
call
mov
xor
lret
jns
pushf
dec
stos
xorb
mov
test
ret
xor
stos
sbb
inc
sbb
lret
or
aam
scas
je
inc
ja
dec
pop
inc
ret
pcmpgtb
test
jg
and
dec
scas
jb
sub
std
push
inc
push
fsubr
adc
lcall
cmp
stc
pushf
cwtl
xor
sbb
cmp
cmpsb
and
ljmp
mov
mov
push
movl
mov
insl
add
loope
sub
pop
sbb
pop
dec
call
sbb
int3
mov
ljmp
cmp
push
inc
xchg
gs
xchg
mov
outsl
fs
adc
int
sub
icebp
sbb
cmp
sarl
neg
rcr
leave
ljmp
xchg
xchg
push
mov
adc
inc
xchg
sti
jns
mov
sub
imul
out
add
insb
lods
rorb
adc
std
aad
int
repz
lock
inc
repz
xchg
mov
mov
xor
mov
xor
push
push
xor
int3
movsb
notb
sti
push
cmp
loop
enter
mov
xor
rcll
popf
jns
mov
dec
adc
aaa
lahf
push
leave
push
jle
or
call
inc
das
addb
pop
adc
add
rcll
cld
daa
pop
sahf
call
in
cmp
and
popf
add
dec
lea
mull
add
cmp
jmp
sub
inc
or
es
fnsave
pop
push
xor
or
adc
jb
imul
xlat
sbb
lods
mov
cld
test
mov
push
dec
adc
addr16
cmp
aam
mov
hlt
ss
test
xchg
xlat
lret
sub
imul
pop
ss
int3
jmp
pop
mov
pop
mov
mov
call
popf
push
pop
add
mov
push
mov
dec
jg
mov
out
cmc
push
fldl
shll
lds
out
pop
xor
cmpsl
jp
sub
mov
nop
fcomps
inc
xor
fsubrl
xchg
or
mov
stos
sub
or
cmp
cmp
stc
dec
xor
mov
repnz
decl
stc
pop
mov
inc
push
sub
fisttpll
xor
addr16
in
xchg
mov
loopne
and
pop
mov
loopne
push
lret
inc
out
adc
rcll
push
or
call
jne
ja
pushf
ret
aam
imul
cwtl
lret
adcl
mov
fstps
addr16
add
xchg
xchg
fisubrl
scas
inc
and
push
rclb
cmc
pop
call
or
mov
xchg
jo
sbb
mov
cmp
mov
push
lret
fcoms
rorl
out
and
in
inc
std
push
fistl
dec
mov
rorb
loopne
add
cs
mov
repnz
push
cmpsl
inc
mov
clc
data16
xor
js
jae
and
test
sbb
add
xchg
out
jecxz
sub
add
add
repnz
jb
icebp
popa
cmp
mov
xchg
stc
mov
bound
pop
shll
mov
push
mov
ret
fs
jb
movsl
cmp
pushf
dec
mov
out
outsb
mov
push
jns
repnz
imul
dec
xchg
test
xor
into
pusha
xor
aaa
cmpsb
loopne
addl
mov
and
leave
mov
popf
inc
mov
data16
insb
inc
pop
adc
testl
enter
xchg
fiadds
xchg
cmp
lret
in
dec
cltd
rcl
in
lock
shrl
push
fisubl
gs
daa
adc
shlb
loopne
sti
addr16
dec
push
dec
dec
aas
cmc
push
pop
inc
es
inc
or
fstps
push
das
pop
cmc
ss
int
dec
xchg
mov
push
aaa
aas
adc
repnz
inc
add
xchg
sti
mov
sub
sub
mov
call
divl
cmp
repz
mov
cmp
adc
xor
int3
xor
fidivs
inc
subl
repz
mov
inc
sub
xchg
pop
dec
push
mov
jnp
clc
out
cld
push
push
jbe
sub
dec
mov
addr16
jmp
cs
rorl
ds
inc
fnsave
imul
push
mov
mov
xchg
push
fiaddl
aad
cmpsl
pushf
jl
aam
cmpsl
mov
xorb
lods
mov
cld
out
shl
dec
adc
add
ret
lcall
add
int3
mov
fs
jmp
mov
add
pop
imul
clc
inc
sbb
repnz
xchg
icebp
int3
cmp
push
shll
arpl
jg
lods
xchg
xor
aaa
sub
test
xlat
sub
xchg
jno
cmc
pop
outsl
mov
mov
xor
and
sub
fists
gs
jl
fucomp
fsubs
adc
jbe
pop
in
mov
jp
popf
mov
dec
push
xor
cmp
xor
jl
pop
mov
xlat
mov
sub
sub
inc
pop
cmp
pop
push
xchg
mov
outsb
test
ret
jae
nop
imul
jp
jns
aad
vxorps
call
push
hlt
cmp
inc
push
in
mov
inc
and
and
lods
inc
iret
inc
movsl
jne
shlb
out
xor
and
adc
dec
outsb
cmp
fs
pop
dec
push
and
push
adc
cmp
movsb
add
mov
mov
pop
or
mov
in
lret
xchg
mov
xlat
les
sub
jg
scas
lret
scas
sbb
ret
popa
pop
add
out
sahf
and
movb
sbb
adc
lcall
into
sub
jl
stc
pop
das
mov
add
inc
jns
xor
mov
js
pushf
push
and
movsl
stos
pop
cwtl
addr16
adc
cld
inc
psllw
mov
xchg
enter
sbb
or
ret
aam
lods
dec
fldlg2
sub
cmp
adc
pop
iret
add
imul
hlt
scas
add
fidivl
sbb
cmp
push
or
mov
hlt
mov
pop
jne
fcompl
out
dec
and
xchg
dec
std
mov
mov
push
clc
push
ret
lods
mov
xor
pop
mov
icebp
mov
movsb
ss
fimull
mov
or
int
leave
inc
jb
hlt
cs
ljmp
fsub
mov
scas
xchg
jp
mov
test
sbb
add
movsb
fdivrs
mov
inc
mov
cmpsl
stos
cmc
xchg
mov
mov
mov
fmull
das
fldenv
xchg
cmp
pop
mov
push
sub
dec
jnp
xchg
mov
movsb
pop
jle
adc
mov
sub
and
mov
scas
xor
xor
lcall
push
xor
mov
inc
sbb
sub
stos
xchg
aam
loope
call
fisttps
jb
push
mov
bound
ljmp
add
hlt
cmp
mov
adc
add
scas
pop
dec
das
aaa
pusha
das
pop
dec
cli
jbe
push
mov
mov
mov
jge
dec
enter
int3
popf
sub
dec
cmp
or
and
mov
add
gs
mov
pop
mov
test
sti
adc
push
xchg
inc
jo
xor
insl
aad
std
and
outsl
ret
movsb
inc
cmp
sub
inc
sub
push
sub
inc
jmp
or
adc
dec
xchg
fimull
push
jmp
ret
ret
jae
sbb
jae
call
stc
int
jo
mov
dec
lret
enter
mov
fdivrs
lcall
push
dec
jo
jbe
sbb
jno
push
sub
dec
add
fstps
xor
testl
push
test
in
cld
or
lahf
dec
dec
add
vmulpd
jge
mov
jmp
push
arpl
test
stc
mov
and
aad
daa
nop
adc
cwtl
adc
subb
mov
sti
enter
mov
mov
nop
xchg
outsb
ljmp
mov
out
jo
mov
push
sub
imul
insb
jo
mov
xchg
mov
push
or
and
inc
sub
out
sub
lods
je
and
push
out
dec
adc
jle
movsb
je
jecxz
pusha
mov
scas
xor
pushf
test
into
test
jne
inc
push
mov
pop
xor
loop
add
cmp
inc
inc
mov
gs
jmp
das
scas
movsb
aaa
cmp
jmp
pop
adc
insl
fiaddl
or
dec
add
mov
or
testl
sbb
inc
andl
imul
cmp
dec
xchg
scas
roll
or
mov
movsl
lods
into
cli
push
lahf
rorl
adc
pop
mov
test
popf
cs
lcall
out
addr16
mov
test
aas
pop
mov
ljmp
jo
aam
xchg
mov
pop
fadds
adc
js
adc
cmp
pop
push
add
test
pop
sub
shll
adc
cld
xchg
jg
ss
xor
shlb
mov
sub
mov
and
adc
push
lret
loopne
xchg
decl
inc
hlt
or
mov
lcall
adc
dec
adc
and
push
xor
js
imul
mov
add
in
push
fldenv
add
scas
add
fisubs
cmpsb
xor
xchg
sbb
rclb
mov
in
std
outsl
fistpl
add
push
dec
and
jg
subb
inc
mov
int3
xchg
mov
inc
inc
mov
lea
mov
inc
xor
movq
mov
xchg
mov
mulb
loopne
push
loope
sub
cld
mov
out
dec
and
or
cli
push
ljmp
movsb
adcb
mov
test
insl
idivb
fwait
inc
ss
leave
xchg
repnz
lret
adc
and
ret
mov
mov
mov
mov
push
rcll
rcrl
xchg
sub
call
lret
inc
pusha
les
cmpl
scas
jb
jp
sbb
test
sub
jp
or
ret
push
add
jb
xchg
addl
test
aad
dec
rcll
sub
in
cld
in
stc
adc
outsl
xor
imul
daa
mov
push
inc
cmpb
sbb
jnp
mov
fmuls
jno
cvtdq2ps
enter
jo
cmp
mov
adc
icebp
popl
and
icebp
cmp
into
mov
adc
repnz
cmc
out
cmp
push
mov
into
lods
repz
push
loope
out
fcmovbe
jge
mov
mov
jmp
adc
sbb
enter
gs
jmp
xchg
xchg
pop
mov
es
push
pop
aas
push
xchg
adc
mov
daa
pop
jne
inc
and
push
dec
and
push
adc
mov
dec
jnp
xor
mov
ljmp
cmp
ret
int
pop
out
dec
mov
xchg
sub
insb
dec
ret
cmpsl
or
test
inc
icebp
or
in
andb
mov
les
jae
cmp
jns
out
push
pop
xchg
dec
dec
outsl
fs
mov
pop
test
cmp
xor
gs
std
cltd
inc
iret
stos
rolb
mov
mov
scas
inc
mov
jge
les
out
je
std
js
js
ret
push
or
xchg
shrb
cmp
push
stos
sub
dec
pop
orl
sbb
aad
xchg
mov
push
fisubl
icebp
out
adc
push
cld
ljmp
cltd
jne
ret
push
dec
jnp
lock
dec
sub
or
pop
mov
adc
adc
sbb
jg
std
movsl
fadd
jae
dec
mov
clc
jo
mov
movb
xchg
inc
int3
sti
xchg
shl
jp
xor
mov
negl
pop
mov
scas
scas
push
push
sbb
cmp
in
mov
sub
int
lahf
test
jo
jg
out
jae
cld
test
lret
pusha
cmp
cli
sbb
fmul
popf
sbb
popf
push
iret
loope
jle
pop
cmp
or
cmp
push
xchg
sahf
lock
addb
pop
xchg
and
cs
jle
cwtl
fidivs
mov
shl
je
js
ficoms
mov
sub
mov
sbb
int3
in
cmp
jge
and
sarl
push
out
add
outsb
or
push
aad
pop
stos
jno
jo
sbb
mov
mov
hlt
and
loopne
push
scas
cmp
sub
mov
loope
xchg
stc
popa
inc
push
pop
push
jnp
jb
adc
sub
adc
mov
lcall
or
xchg
cwtl
dec
rcrl
lcall
fcomps
sub
sbb
sbb
xor
and
loopne
pushf
divl
scas
enter
xor
pop
mov
loope
stos
leave
cmpsl
mov
inc
xor
out
daa
in
sbb
outsb
mov
or
loop
rcr
out
jo
mov
xor
lea
inc
xchg
xor
arpl
repz
pop
mov
adc
decb
inc
pop
inc
adc
ljmp
addr16
mov
add
xchg
dec
and
into
cmp
add
mov
sub
jmp
icebp
das
pop
in
daa
clc
mov
sbb
addl
sbb
dec
mov
cmp
fsave
subl
stos
xorb
test
dec
shlb
jmp
push
or
stos
or
leave
mov
fs
stos
clc
lahf
xchg
inc
scas
and
pop
cmp
das
test
xchg
and
sbb
cwtl
jmp
fistl
daa
push
sarb
hlt
mov
in
dec
pop
ret
inc
sub
pop
movsb
fidivl
fistpl
hlt
popa
pop
pusha
cmp
pop
adc
xchg
push
es
inc
push
sahf
mov
out
sub
jge
sbb
bound
jge
gs
cmp
pushf
add
fdivl
xchg
clc
lret
aas
stc
out
inc
mov
sarb
mov
stos
out
insl
scas
ja
adc
fnstsw
sub
xor
and
loopne
sbb
sarl
mov
mov
lock
mov
cmp
mov
push
jle
xor
sub
push
dec
jb
fnstcw
out
pop
out
out
ret
repnz
out
aas
fdivl
insb
push
jle
into
dec
loop
cmp
adc
inc
outsb
rolb
adc
out
mov
inc
pop
cmp
push
inc
xor
jns
push
inc
mov
cltd
mov
and
out
aam
movsb
add
test
outsb
jmp
icebp
stc
clc
mov
xchg
imul
movl
xor
lods
cmp
out
imul
loopne
jb
leave
jo
lret
lea
jecxz
mov
mov
sub
mov
pop
push
sbb
pop
mov
mov
add
jg
xor
cmp
out
sbb
xor
dec
jmp
aaa
jbe
push
push
or
and
imul
out
pop
in
xchg
and
push
cli
xor
popa
sub
cmp
les
popa
jp
sub
mov
xchg
push
sub
jp
adc
cmp
dec
xchg
cmp
sti
test
mov
das
jno
xlat
orb
mov
sub
out
loope
cmpsb
outsb
cmpsb
mov
pop
popf
cmp
mov
dec
popa
xchg
fnsave
mov
xchg
pop
mov
mov
inc
pop
mov
lret
popf
je
jbe
xchg
mov
pop
add
or
dec
shrl
mov
fwait
scas
stos
inc
xchg
xchg
leave
sti
cmp
xor
les
or
in
imul
stos
dec
mov
push
or
sub
mov
lds
ds
loop
mov
xor
mov
or
stc
push
xor
xchg
push
sub
adc
mov
adc
push
cmpsb
jmp
and
sahf
sub
fildl
pusha
cld
dec
and
fiadds
inc
das
into
pop
nop
dec
xchg
add
repz
insl
dec
lds
push
hlt
sbbl
sub
add
shl
das
jle
dec
mov
or
imul
cmp
mov
or
and
lret
rcrl
pop
bound
das
lds
rolb
jo
cmp
pop
fs
lods
lcall
xor
ss
leave
pop
dec
out
dec
jg
call
mov
fs
enter
sbb
push
mov
sbb
ljmp
popf
or
xchg
mov
nop
test
jns
incb
ss
cwtl
xchg
adc
movntq
loope
outsl
out
sub
andl
bound
ljmp
fcmovnu
or
or
lea
test
and
mov
push
insb
dec
pop
call
sub
and
adcl
lret
inc
mov
shl
jb
dec
xchg
mov
xorl
cld
xchg
pop
jnp
fstpl
andl
mov
pop
sahf
test
or
movsb
leave
test
test
ret
popa
ror
lods
mov
mov
outsl
push
inc
lods
xor
jg
ror
test
in
mov
mov
mov
les
cmpb
push
jnp
xor
dec
pop
sub
xchg
jecxz
testb
imul
cmp
xchg
fsubs
pop
sub
aam
push
dec
jg
lock
arpl
shlb
and
xchg
ss
inc
push
lds
push
fsubrp
stc
scas
test
adc
loopne
push
ret
rcl
sbb
ficompl
fdivrl
mov
out
lea
pop
mov
pusha
push
push
xchg
or
test
push
mov
dec
xor
out
jne
mov
insl
inc
adc
cli
in
pop
test
daa
shrl
lea
out
int
inc
adc
enter
mov
push
gs
mov
push
fwait
test
cmpsl
enter
sbb
dec
push
xchg
imul
lahf
mov
loop
dec
or
ja
arpl
notb
add
pop
icebp
mov
sub
or
pop
addb
jns
jmp
sub
xor
inc
hlt
faddl
cwtl
push
lods
xchg
mov
pop
jp
daa
pop
sub
mov
insb
mov
test
cs
mov
das
jg
pushf
and
enter
sbb
popa
add
js
in
sub
addr16
push
mov
iret
dec
call
adc
or
xchg
cs
xchg
jns
push
add
push
out
dec
jl
pop
leave
mov
rcrb
push
sub
sti
xchg
pop
cli
rcll
cmpsl
fistl
mov
and
pop
rcrb
rcll
lds
cld
jbe
insl
mov
jge
ljmp
mov
push
jae
fistps
xchg
imul
insl
cwtl
inc
rorb
dec
jno
push
xchg
mov
out
push
push
and
loop
lcall
repnz
mov
pslld
push
dec
adcl
lret
icebp
loopne
sub
leave
notb
xor
cwtl
pushf
jo
push
iret
sbb
call
aaa
mov
or
je
push
loope
rorl
leave
andl
jb
iret
fs
adc
adc
pusha
xchg
mov
pop
push
inc
pop
sub
pop
dec
test
mov
jns
rcr
xor
adc
xor
and
cmp
cmpsl
fadds
cmpsb
mov
iret
je
adc
fidivs
mov
dec
loopne
push
jmp
hlt
inc
mov
adc
call
inc
lock
adc
xor
mov
inc
cmp
sub
mov
int3
jmp
cmpsb
jle
and
lcall
sarb
cmp
xchg
shl
repnz
push
xchg
add
jl
cmp
xor
adc
icebp
sub
lods
repz
sub
mov
sbb
dec
std
xor
mov
or
leave
mov
mov
stc
adc
xor
jo
and
mov
pop
test
xor
imul
aaa
xor
scas
mov
xor
cli
fs
aad
in
int3
mov
jb
push
arpl
out
inc
pushf
push
or
mov
push
pop
ficompl
mov
pop
sub
lret
test
push
pop
incb
inc
movsl
loope
mov
sub
push
dec
xchg
mov
cmpsb
fimull
and
jle
lods
cltd
push
dec
pop
mov
or
movsb
pop
lods
mov
or
add
or
je
dec
inc
cs
jne
cwtl
sub
shlb
cmpsb
test
por
notb
or
ljmp
jg
pop
cwtl
cmp
loope
call
cmc
fcoms
and
lret
jl
pop
jecxz
icebp
mov
xor
add
adc
out
out
add
in
cli
push
mov
pop
xor
cmpsl
add
xchg
decb
fsubs
mov
test
xchg
cmp
add
push
push
inc
imul
xchg
and
jg
or
and
lret
std
sub
js
lds
and
out
push
scas
leave
fcoml
lods
push
pop
push
std
xor
pop
dec
xchg
cltd
fidivl
sbb
fstpt
and
and
js
in
sbb
cld
hlt
xchg
jb
cmp
push
and
mov
rcr
push
xchg
push
jecxz
xchg
mov
ja
stos
je
xor
int
or
pop
call
orl
mov
sub
push
lds
ljmp
push
test
sub
lods
or
or
outsb
add
pop
je
sbb
cmp
jg
xchg
pop
pop
lcall
sub
dec
movsb
dec
lds
mov
push
out
sbb
std
and
sub
xchg
mov
mov
xlat
test
adc
jb
push
mov
inc
cmc
aaa
sbb
pop
fs
jbe
es
sub
and
mov
xor
pop
ret
push
leave
bound
mov
or
rorl
lea
adc
test
xor
jecxz
lret
fnstsw
and
out
mov
sub
out
clc
inc
sbb
fldcw
or
mov
dec
adc
lahf
and
stc
cmp
mov
outsb
inc
lret
dec
inc
jge
or
scas
cmp
sub
in
add
popa
xor
pop
jo
repnz
mov
inc
in
lock
sbb
cmc
in
jnp
push
inc
scas
jbe
mov
enter
sub
fsubr
popf
jbe
movsl
subl
ja
jb
repnz
xor
stos
adc
dec
test
in
cltd
popa
pop
mov
in
jne
and
sub
cs
mov
cmp
push
arpl
xor
push
sbb
mov
push
add
icebp
cmc
adc
repz
mov
subl
js
fidivrl
or
xchg
jp
add
jae
lcall
movsb
mov
push
cmpsb
ret
insl
imul
cltd
xor
js
sub
add
jecxz
cltd
sbb
pop
sbb
add
pop
push
mov
pop
or
scas
cvtps2pi
xchg
push
jae
cltd
sbb
lods
mov
push
inc
les
xchg
push
lret
cli
mov
xchg
test
jae
sbb
jns
daa
add
stos
stos
adc
xor
pushf
inc
es
mov
push
sub
add
lock
ja
aaa
xchg
mov
mov
xchg
mov
dec
ret
fidivs
jg
mov
xchg
cmp
imul
push
mov
stos
xchg
jle
mov
adcl
lock
pop
pop
xchg
xor
insl
xor
icebp
pushf
jb
pop
clc
add
aas
int3
cmpb
pop
push
mov
sub
xor
adc
jns
jae
sbb
cli
adc
and
fwait
jns
inc
push
bound
xor
pop
fists
imul
mov
rolb
inc
mov
out
insl
out
pop
pop
lods
fwait
ss
push
inc
adcb
adc
incb
out
or
jnp
push
xor
jle
push
cltd
gs
jb
add
cltd
push
lods
outsb
daa
jmp
dec
pop
mov
pop
insl
ds
arpl
sti
shrl
inc
loope
dec
rolb
mov
mov
mov
sbb
daa
or
fwait
push
clc
lods
scas
je
push
and
sti
icebp
jmp
mov
sbb
sbb
jne
mov
dec
mov
inc
cmpsl
push
add
lahf
cltd
fldcw
aad
push
rcll
out
fcomip
add
push
xor
cmpsb
mov
xor
xchg
xor
or
xor
movsb
cmc
mov
push
mov
aas
data16
repnz
sub
cmc
rcr
dec
mov
clc
jne
cmpsb
mov
outsl
mov
into
mov
sahf
in
xor
mov
sub
cmpsl
xchg
lcall
inc
imul
lock
ljmp
ja
and
jl
xchg
dec
out
cmp
stos
loopnew
outsb
popf
sahf
mov
add
bound
pop
pop
xlat
test
sub
pop
xor
outsb
jae
xor
pop
xchg
jns
jp
mov
out
cltd
xchg
mov
jne
fmuls
fstl
insb
xchg
pusha
fcmovb
xlat
iret
call
mov
insl
outsl
push
mov
rclb
jp
mov
in
pop
ja
and
jo
pop
pop
mov
jae
arpl
aas
outsb
push
cmpsl
test
xchg
mov
sub
inc
mov
mov
negl
mov
aas
js
cmp
out
ja
fs
std
jb
adc
incl
arpl
and
inc
icebp
out
mov
movsb
ds
das
js
cwtl
clc
testl
xchg
movsb
pop
imul
fstps
cs
sub
dec
mov
push
xchg
and
mov
push
stos
mov
mov
cmc
dec
xchg
mov
xabort
ret
out
js
lea
mov
or
push
sub
fldl
sbb
mov
sub
out
lods
shlb
arpl
lock
bound
rcll
es
inc
fsts
imul
jmp
out
out
mov
pop
push
push
or
xchg
imul
ss
dec
insb
push
outsb
xlat
dec
inc
dec
lea
inc
pop
mov
push
mov
fisubrs
jnp
insl
cltd
push
or
jg
fildll
es
mov
lock
mov
add
mov
and
cld
ret
mov
inc
test
ret
jmp
mov
adc
sahf
stc
mov
ds
fs
push
and
lods
or
push
out
jae
pop
mov
daa
lahf
adc
or
sahf
dec
fcmovb
xchg
cld
pop
add
or
jno
dec
sbb
xor
sub
push
jne
inc
outsl
mov
dec
push
cmp
fcoml
adcb
or
in
fsubl
fisttps
mov
in
aaa
mov
inc
and
sbb
or
out
jnp
mov
stc
or
lret
cmp
into
sahf
dec
nop
mov
imul
test
dec
ljmp
and
and
push
jp
outsl
inc
push
cmp
jbe
xchg
add
and
aam
push
cwtl
inc
sahf
dec
mov
or
fdivl
aad
mov
pop
testl
repz
enter
insl
dec
and
adc
call
pop
lahf
xchg
xchg
xchg
or
ds
data16
scas
add
pop
push
fdivrp
cs
movsl
xchg
mov
fsqrt
mov
mov
jnp
iret
mov
lods
roll
mov
sbb
or
or
test
rcrl
adc
rcrl
mov
push
gs
or
mov
fs
in
push
call
lea
stos
cmp
lret
shld
mov
mov
add
into
lock
test
jg
es
mov
loope
icebp
jecxz
enter
insl
adc
pop
push
and
shrl
gs
mov
xchg
in
xor
clc
mov
scas
cmp
repnz
sub
sti
add
inc
dec
cmpsl
adc
pop
stos
push
dec
sar
xchg
into
cltd
sahf
push
and
sbb
or
dec
arpl
dec
in
pop
add
xor
cs
loop
xchg
test
movmskps
xchg
and
rcr
push
push
dec
jecxz
data16
cmpsl
lahf
addb
dec
adcb
mov
in
insb
scas
bound
xchg
xor
mov
pop
sub
adcl
push
jg
fildll
pop
inc
imul
test
cld
sarb
push
test
push
mov
or
cltd
ret
lcall
ss
cvtps2pd
jae
push
push
and
xchg
sti
sbb
les
mov
into
lock
hlt
push
push
ja
mov
sbb
cmpsb
and
mov
xchg
xchg
push
stos
lret
adc
aam
and
cmp
pop
cmpsl
xor
add
inc
fcomps
ret
mov
lret
adc
adc
stc
sarl
andl
push
push
icebp
lods
dec
shrb
dec
pop
icebp
mov
jbe
loop
repz
and
sbb
dec
jno
outsb
test
repnz
pop
pop
es
xor
sbb
out
loope
mov
dec
add
and
mov
dec
flds
ds
and
mov
nop
pop
test
andb
out
mov
jmp
add
xor
and
rcll
ret
xorl
cmp
daa
adc
or
cld
mov
pop
mov
loop
pop
pop
xor
cmp
outsb
rcll
adc
nop
insb
popa
leave
test
arpl
je
xor
add
push
sbb
sbb
cmp
jmp
popa
mov
sbb
mov
jns
push
repz
or
pop
or
xchg
test
and
cmp
in
mov
pop
sar
lret
or
mov
ss
jp
mov
xor
or
lds
in
icebp
mov
fsubrl
ret
pop
push
cmp
mov
hlt
aas
loope
cmc
pop
cmp
cmp
add
jbe
lds
cld
ret
clc
and
aas
xlat
aam
xor
xchg
cmpl
ret
lahf
mov
inc
ja
cmp
cmp
icebp
jge
scas
cld
adc
mov
test
sahf
mov
push
shlb
mov
jne
lock
xchg
or
out
sbb
inc
or
sbb
loop
dec
xlat
push
lea
xchg
push
pop
bound
out
mov
std
and
popa
test
pusha
mov
out
pop
orb
mov
mov
iret
mov
mov
mov
sub
test
jle
or
xlat
push
push
aad
js
inc
add
mov
daa
pop
movsl
pop
test
mov
mov
fnstcw
pop
insb
dec
loope
sub
dec
pop
jae
fs
std
std
adc
cwtl
dec
outsb
and
mov
sbb
or
iret
popa
xchg
das
jge
cli
push
out
and
push
ss
ja
sub
sbb
test
mov
mov
sub
jbe
nop
insl
mov
add
pusha
push
dec
dec
inc
adc
stos
mov
dec
add
lock
inc
adc
push
sub
in
loope
icebp
push
inc
adc
cmpsl
js
adc
mov
push
sub
pop
push
ja
idivl
jbe
scas
sahf
fildl
or
adc
dec
jle
or
out
jg
jl
dec
jbe
cmp
adc
test
adc
sub
jns
adc
sbb
insb
xor
push
add
and
add
ficomps
adc
pop
jge
test
or
ret
inc
mov
or
bswap
mov
cmpsb
pop
testl
test
inc
pop
inc
imul
push
dec
push
xor
sahf
daa
mov
mov
and
test
mov
and
scas
sbb
loop
lods
jae
mov
mov
adc
mov
fwait
pushf
pusha
popf
and
mov
addl
push
add
test
in
ficoml
or
sbb
pop
out
out
inc
inc
push
fs
cmc
cwtl
and
sbb
stos
pop
jecxz
push
mov
les
ror
mov
jo
pop
cwtl
repz
jbe
fucomi
xor
jno
lret
fwait
push
cwtl
jecxz
pop
jb
loope
mov
outsl
mov
shl
sbb
sub
ret
ljmp
fwait
push
mov
cmpsb
sub
or
lock
jb
dec
sahf
inc
addr16
test
ja
test
nop
into
ret
pushw
cmp
ljmp
inc
cmp
mov
faddl
fists
sbb
jmp
jl
imul
stos
pop
xchg
test
or
mov
adc
dec
push
inc
fstpt
lock
adc
mov
imul
mov
aam
push
mov
stos
rorl
jb
sub
mov
lea
inc
or
insb
pusha
shrb
push
fmull
out
lret
repz
adc
add
push
cmpsb
mov
xor
jmp
cmp
fidivs
es
cli
cmp
and
aad
sti
sub
jbe
arpl
scas
cld
je
pop
add
xchg
sbb
xor
lock
cld
dec
push
dec
jmp
js
sbb
int3
dec
inc
pop
shlb
hlt
jbe
repz
add
xchg
dec
roll
movsl
mov
test
ficoms
xchg
stc
enter
and
xchg
lock
ss
jmp
dec
test
push
decl
adcl
cltd
fwait
mov
outsb
mov
jl
adc
xchg
cmp
iret
insl
je
or
out
fs
jne
test
pushf
jge
test
loop
popf
lock
mov
mov
test
pop
push
jl
lods
das
jb
cmpsl
cmpb
xchg
sbb
outsb
imul
cmp
fwait
mov
fldl
bnd
inc
lods
jno
mov
jb
faddl
xchg
pop
xor
in
pop
cmp
push
dec
andl
fisubrs
mov
sbb
pop
mov
rorl
rclb
push
jg
mov
repz
push
leave
xchg
push
sbb
mov
icebp
push
aaa
stos
sbb
cmp
push
test
int
jp
insb
not
notl
adc
jmp
push
mov
push
bound
or
cmp
cmc
mov
mov
movsl
xchg
pop
and
xchg
sbb
mull
jp
subl
ljmp
xchg
mov
jmp
or
int
dec
iret
mov
je
int3
adc
cmp
in
mov
enter
ljmp
loope
aaa
das
inc
int3
out
cltd
test
stos
lcall
cmp
xchg
outsb
sti
mov
adcb
jnp
jge
xchg
js
fcmovnu
or
mov
fxch
mov
adc
jb
outsl
push
xchg
loope,pn
or
mov
adc
fidivrs
mov
push
int
jo
mov
out
jbe
jge
mov
aam
mov
fidivs
das
jmp
dec
push
and
sbb
shll
sahf
mov
nop
iret
cmp
inc
aam
jno
pop
xorb
push
dec
mov
sahf
cs
mov
pushf
cmp
jge
sti
push
mov
mov
aas
pushf
mov
orl
mov
and
ret
inc
fiaddl
repz
das
push
loope
test
push
cld
testb
xchg
data16
push
xchg
push
into
lock
pop
xor
cwtl
cmpsl
cmpsl
dec
sub
mov
aas
cmp
hlt
lcall
cmp
gs
xchg
mov
xlat
push
sbb
ud2
pop
pop
xchg
xor
js
push
jns
pop
push
scas
jns
je
push
inc
cmc
stc
addr16
xlat
cmpsl
xchg
mov
ds
test
cmc
aam
mov
ficoms
mov
add
addr16
inc
lods
push
push
in
pop
in
mov
xor
imul
sbb
inc
repz
push
adc
fs
sbb
fldt
int3
dec
arpl
aaa
cli
add
lahf
cs
les
xchg
outsl
push
lcall
push
or
int3
jg,pn
fdivs
dec
push
lret
in
rorb
jns
stos
mov
rcl
lods
push
fidivrs
mov
loopne
jg
incb
pop
scas
fists
fbld
lea
cmp
inc
sahf
jae
sub
rcl
xor
movswl
rclb
icebp
lea
jg
ja
pop
sub
int3
jbe
lods
mov
push
filds
push
aas
jle
pop
jp
jno
sti
push
stos
cld
jae
cmc
imul
push
and
jnp
xor
mov
sub
lret
fnstsw
insb
sarb
pop
jns
pop
ljmp
hlt
jne
gs
test
sbb
inc
outsl
cs
push
and
bound
mov
pop
sahf
pop
mov
mov
adc
sarl
cmp
sub
add
push
or
cmp
cmpsl
pop
pop
js
xor
lods
aas
andl
rol
add
jl
push
jo
ljmp
jbe
ja
sub
inc
and
inc
fldl
mov
imul
inc
xlat
es
cmp
in
fnstenv
daa
xor
pushf
push
ret
pop
test
mov
mov
adc
mov
je
arpl
subl
xlat
mov
xor
repnz
ljmp
out
mov
repz
xor
cmp
inc
fnstenv
shrb
lods
insl
xchg
xchg
mov
pop
cmp
aad
andl
pushf
es
loope
xor
arpl
jae
xlat
adc
aaa
test
cmpsb
rorb
or
shll
mov
aad
repnz
call
sahf
sbbb
shl
popl
mov
lds
les
int
mov
xchg
sbb
pop
testb
bound
sub
cmp
cli
fcoms
or
scas
shlb
add
add
and
push
cli
adc
dec
setg
or
ficoml
rcrl
movsb
adc
mov
sbb
hlt
insl
jge
fisttpl
stc
inc
mov
in
inc
xchg
cmp
cmp
and
idivl
je
scas
loopne
in
inc
repnz
push
fwait
cwtl
movsl
xchg
sub
scas
inc
jmp
xchg
add
scas
pop
lods
stc
cmp
insb
mov
sbb
jg
addb
in
testb
lret
or
fsub
rolb
xor
scas
jl
sub
jp
std
movups
mov
inc
mov
push
jne
rcrb
mov
hlt
addr16
loop
push
mov
mov
les
or
out
mov
negl
call
pop
daa
fisttpl
inc
cmp
adc
lret
cmp
cmc
inc
adc
and
inc
mov
popa
sbb
sbb
outsl
or
stos
inc
mov
lcall
and
xchg
inc
push
lods
leave
mov
sub
int3
inc
and
lods
push
xchg
mov
sub
xchg
push
sarb
bound
scas
add
or
inc
mov
inc
adc
imul
subb
icebp
jg
xchg
es
pop
int3
or
int3
adc
ja
scas
ret
jmp
cmp
push
xchg
push
aam
nop
call
inc
mov
lods
in
dec
mov
inc
or
push
push
and
fwait
ret
sarw
inc
call
sbb
daa
je
das
xor
fs
push
int3
mov
stos
add
scas
int
sbb
rorl
pop
repz
gs
enter
jnp
dec
mov
sbb
sub
sub
push
insb
mov
in
push
sub
rolb
jecxz
add
mov
cli
xchg
ret
addr16
ja
mov
popf
mov
outsl
sahf
in
lods
or
daa
sub
jle
int3
jbe
fbstp
xlat
dec
pop
test
mov
xchg
clc
lea
ljmp
mov
arpl
jl
insb
dec
fwait
iret
mov
sbb
shl
nop
fiadds
scas
int3
pop
xor
mov
enter
out
loope
inc
mov
loope
mov
and
xchg
push
lahf
jmp
or
adc
cli
sub
or
in
jb
repnz
cltd
ret
jl
mov
add
fstpt
ds
mov
xchg
loopne
sbb
xchg
movsl
icebp
sti
push
insl
adc
cmp
ret
sub
mov
pushl
dec
adc
jp
mov
push
or
das
rol
ficoms
inc
and
ret
sbb
mov
mov
clc
dec
xchg
jns
xchg
mov
sub
xor
adc
push
pop
jecxz
sbb
arpl
cmpsl
xor
xor
sarl
clc
cmc
inc
loopne
mov
or
add
bound
dec
cmp
lret
in
loop
xchg
js
inc
fcmovb
ret
cmp
lock
jbe
mov
lds
dec
dec
xchg
pushw
lock
mov
cmp
add
push
nop
pop
pop
loope
add
cmp
push
pop
jmp
addr16
stos
int
xor
mov
sbb
repz
fisttps
addr16
xor
lret
lahf
aas
out
repz
push
loop
fisubrs
insb
outsl
mov
ret
jle
out
movsl
es
and
gs
lahf
aam
mov
je
cmp
mov
addb
add
jns
mov
in
jl
sub
mov
lret
pop
imul
pusha
nop
aam
push
test
xchg
out
rorl
pop
push
out
cmc
js
adc
xchg
inc
sbb
push
shl
mov
lds
in
sub
mov
inc
xchg
push
fildl
fmull
pop
push
cmp
fcmovu
repnz
sti
fisubl
je
cmc
adc
inc
xor
insl
outsb
xlat
add
rcl
lret
scas
nop
push
in
mov
jecxz
std
stc
add
lahf
in
cld
cmp
xor
notb
sub
add
aad
insb
in
fstps
and
jmp
push
divl
mov
push
ds
xor
mov
clc
in
mov
push
jb
xchg
cld
mov
xchg
sub
jne
xchg
cmp
cmp
jae
or
mov
inc
jecxz
in
cs
xchg
pop
dec
cmp
push
mov
lds
insb
push
xchg
jo
xor
lcall
adc
cmp
jecxz
pushf
cmp
mov
adc
iret
jp
loope
pushf
insl
cmp
mov
sbb
addb
sbb
inc
cwtl
data16
add
or
aam
fcoml
lret
cmp
aaa
scas
fwait
cld
insb
add
mov
xor
mov
pop
mov
mov
xor
mov
or
leave
cmpsb
sub
popf
das
push
mov
adc
adc
xchg
nop
not
xchg
or
into
mov
stos
es
ss
lret
jl
xchg
xchg
gs
loop
mov
inc
mov
cmp
pusha
in
fisubrl
mov
out
add
cwtl
lea
popf
sbb
gs
pop
aaa
lahf
mov
inc
xor
xchg
mov
push
cld
add
test
push
in
cmp
cwtl
sub
repnz
xchg
in
jae
das
cs
mov
mov
loope
fsub
xor
and
subb
leave
mov
lahf
push
fs
mov
xchg
push
lret
sub
push
pop
scas
jnp
cmovae
xchg
int3
inc
dec
and
sub
push
jecxz
enter
pop
mov
sbb
enter
pop
hlt
mov
jecxz
cwtl
push
push
jecxz
sub
xchg
and
not
inc
and
pop
scas
fucomi
mov
in
enter
dec
mov
lcall
and
sbb
adc
mov
dec
xchg
movsb
xchg
pop
sub
fisttpll
xchg
sarb
sbb
fldt
push
in
sub
gs
cmp
push
mov
push
icebp
fs
outsl
je
mov
and
imul
jae
stos
test
faddp
jnp
sub
imul
lahf
mov
pop
cmp
xor
stos
leave
adc
lock
test
xchg
jg
lret
scas
int
jecxz
and
lock
inc
inc
jp
out
sub
mov
add
sub
adc
pop
lods
dec
or
mov
rcr
push
lods
cmc
adc
lock
push
pushf
lods
mov
stos
negb
jb
mov
mov
insl
sub
enter
lods
cmp
out
or
dec
jne
ljmp
rol
cltd
fldl
mov
pop
insb
dec
push
push
mov
push
push
xlat
jp
fisubrl
lods
in
xchg
inc
mov
add
mov
incb
cltd
inc
sub
ds
les
stos
dec
jo
cmc
xchg
sbb
jo
lds
into
out
pop
ds
dec
and
sbb
bound
ret
mov
cld
adc
and
jnp
les
fsubrs
dec
loop
fbld
cmp
dec
in
add
xchg
fisubs
rcl
lods
push
add
push
addr16
lcall
mov
shrl
imul
shlb
loopne
and
jmp
sbb
cld
cmpsb
cmp
mov
lret
cwtl
stos
lret
mov
jp
inc
add
mov
dec
sbb
stc
mov
inc
xchg
cmp
arpl
add
mov
inc
mov
jmp
aad
dec
stc
pusha
sub
lds
test
cmp
jle
js
adc
jle
shl
mov
add
mov
dec
adc
cmpsl
jns
test
in
xchg
aas
push
mov
xor
inc
push
mov
lds
in
adcb
xchg
in
mov
fmull
ja
mov
cmpb
movsl
add
mov
jge
mov
jbe
stos
push
pop
arpl
sub
jecxz
in
inc
xchg
stos
lock
xchg
inc
mov
popa
jge
xor
clc
fcoml
push
push
mov
not
into
fstpl
sbb
loope
mov
xchg
lahf
int3
out
cmp
dec
sub
mov
adc
leave
xchg
int
nop
in
pop
cmpsl
repz
jbe
mov
cli
nop
xor
rcrl
mov
sub
shll
pop
adc
sub
xchg
arpl
mov
hlt
sbb
inc
imul
fildl
jmp
xor
add
sti
fidivs
ss
adc
mov
test
addb
mov
dec
jns
int3
jl
jbe
imul
jnp
cmp
lahf
mov
jne
jge
or
mov
inc
aad
addr16
cmp
test
out
out
jno
or
in
inc
fcomps
fisubl
out
leave
pop
xchg
sub
jmp
addb
jg
push
adc
mov
xorl
sub
mov
sbb
leave
jnp
jecxz
lods
data16
jg
mov
inc
push
lods
push
sbb
les
mov
arpl
push
test
xor
in
sub
mov
mov
scas
test
or
jmp
ss
and
in
cmpsl
jmp
icebp
adc
out
das
scas
icebp
pop
mov
aam
or
les
shrb
lods
sahf
sub
mov
push
es
cmp
xor
in
pop
xor
fcompl
int
int3
add
inc
ds
and
sahf
je
std
push
ret
pop
xlat
mov
dec
lods
or
std
popa
jb
jge
mov
mov
dec
jb
sbb
jno
pop
in
and
daa
pop
cmpsb
pop
cmpsb
inc
fldt
sub
adc
sbb
loop
add
std
xor
gs
mov
sub
mov
adc
out
es
mov
cmc
mov
leave
hlt
mov
test
and
adc
pop
pop
sti
pusha
icebp
adc
sub
and
stc
insl
jo
and
shlb
or
int
das
cld
and
inc
loop
add
adc
icebp
mov
mov
mov
lock
add
sbb
cmp
pop
shlb
in
lret
popf
jns
xchg
push
andl
and
or
push
mov
aad
out
xor
movsl
stc
fdivrs
and
cmpsl
adc
adc
stos
js
jecxz
mov
fdiv
repnz
pop
iret
jo
int
xchg
jecxz
call
pop
adc
out
lret
nop
stc
jp
add
xchg
sar
jb
outsb
mov
pop
pop
sub
adc
mov
xchg
gs
pusha
movl
mov
xchg
and
xor
push
mov
imul
cmp
fs
jns
push
divb
nop
sahf
and
jecxz
mov
jnp
mov
mov
test
dec
lret
or
xchg
js
repz
shlb
roll
ds
pop
inc
and
cld
push
ss
mov
loop
add
pop
je
push
testb
jmp
fdivs
xor
in
movsl
in
lods
cmp
lods
lcall
movsb
aas
leave
inc
mov
sub
and
test
add
fs
mov
hlt
cmc
outsl
nop
xchg
into
movsl
adc
add
push
loop
fwait
lcall
and
cmpsl
dec
dec
jg
adc
rorl
mov
push
push
sbb
pop
push
lock
in
sbb
sbb
pop
sub
sub
call
pop
test
test
inc
pop
sub
lock
call
cmc
das
add
clc
insb
mov
cmp
cli
xor
mov
filds
orb
in
pop
leave
out
adc
add
scas
sbb
lea
imul
cmp
push
scas
enter
sub
add
cmp
or
xchg
sbb
int
dec
shlb
lds
test
inc
movsl
jle
jb
sub
shll
mov
lret
imul
lds
in
divl
jne
movsl
movsb
adc
xchg
or
shrb
pop
jp
dec
popa
repz
bound
ret
cltd
lock
fcomp
push
xor
movsb
xor
mov
out
xor
cmp
idivb
xor
pop
js
ret
outsb
les
aam
jne
add
adc
push
int3
cmpsl
outsl
pop
mov
shlb
lcall
xchg
insl
nop
andl
stos
cmp
xor
scas
push
cmp
loop
cmp
cmpl
jle
mov
jbe
cmp
popl
nop
in
add
daa
xor
js
into
clc
aas
ljmp
mov
les
ret
fst
xor
ret
or
lds
ds
arpl
in
jmp
mov
jg
pushf
ljmp
mov
mov
mov
aas
add
add
push
xchg
inc
sti
dec
or
lahf
pusha
ret
jp
es
adcb
int3
aaa
xchg
dec
sbb
leave
lea
sbb
lret
test
dec
xchg
xchg
and
popf
jp
xchg
sub
rolb
mov
mov
clc
push
pushf
add
je
lock
mov
nop
addb
xchg
mov
insb
or
popa
rcrb
imul
add
adc
mov
stos
push
mov
clc
ret
mov
mov
mov
fstpl
mov
leave
dec
adc
test
out
mov
movsl
xchg
test
add
jg
mov
push
add
xchg
mulb
stc
xor
aas
out
cltd
dec
outsl
lea
lea
scas
aaa
lock
enter
mov
pusha
and
jbe
rcrb
pop
imul
insl
cli
popf
adc
out
inc
daa
jge
xor
cmc
outsl
xor
movsb
hlt
xchg
data16
add
inc
add
movsb
out
and
mov
or
xor
and
lcall
cmp
xor
les
je
insb
bound
jne
bound
sahf
xor
imul
repnz
mov
bound
or
mov
in
mov
rcrb
pop
test
adc
and
xchg
pusha
aaa
adc
xchg
insb
inc
out
daa
sbb
jle
push
lret
push
das
loope,pn
shl
jmp
fmul
push
insb
cmp
sub
cltd
frstpm(287
xor
and
jmp
dec
test
or
xchg
sub
push
imul
mov
rcrl
hlt
sti
sbb
icebp
mov
leave
add
push
lods
icebp
fildl
imul
sub
mov
or
test
add
and
popf
or
push
push
inc
mov
sub
adc
jmp
cmp
aam
scas
ret
pop
cmp
sub
push
lahf
icebp
lret
cmpsb
leave
bound
sbb
test
sub
jno
in
inc
dec
lods
fldt
push
pop
into
mov
inc
test
rolb
xchg
adc
sbb
and
icebp
mov
adc
xor
add
inc
xor
lock
fbstp
xchg
sbb
cmp
mov
xor
int
mov
popl
imul
mov
mov
ficoms
cwtl
out
mov
cs
push
inc
push
inc
out
rcll
nop
push
cmpl
cmpsl
sti
xor
je
shll
rcrb
mov
mov
xor
xor
movsl
sbb
and
enter
jo
dec
hlt
xor
dec
and
sbb
jle
jnp
gs
mov
imul
pop
repnz
iret
iret
push
scas
inc
dec
jg
inc
shlb
loopne
pop
cmp
into
sub
in
cmpsb
xchg
cmpb
mov
dec
hlt
cmpsb
in
add
rcrl
or
adc
movsb
lcall
insb
push
movsl
adc
jle
fs
call
xchg
ficomps
pop
jl
mov
mov
xchg
xchg
sti
ret
or
iret
ret
rcr
lahf
add
sub
pop
mov
rcr
fs
pop
push
shlb
and
jl
ret
cmc
test
jl
add
mov
xchg
dec
cmpsb
inc
or
fcmovbe
jo
test
aam
adc
repz
pop
mov
inc
mov
push
sub
lcall
mov
mov
dec
lods
dec
or
daa
scas
mov
mov
jo
outsl
mov
mov
adc
loope
push
aam
psubb
sub
jns
lods
ret
xchg
fstpt
clc
aas
sti
pushf
adc
aam
dec
iret
popf
dec
add
xor
push
jb
addr16
inc
adcl
test
and
gs
bnd
xor
xchg
dec
pop
push
adc
fsub
es
sub
pop
das
jecxz
cmp
jns
jecxz
iret
sarl
jb
pop
adc
cli
call
fcoml
jbe
xchg
push
insl
shlb
sar
push
mov
pop
fwait
imul
xorb
inc
cli
xchg
and
xlat
mov
lock
dec
int3
sti
cli
filds
mov
aad
cwtl
dec
cmp
inc
flds
jne
sbb
addr16
rorl
test
stc
jmp
push
mov
sub
sbb
mov
xor
test
jbe
bnd
repz
bound
scas
xor
sbb
lcall
or
push
test
ficoms
fbld
scas
loop
cmpsb
insb
mov
mov
cmp
jb
cmp
jg
stc
scas
inc
fstpl
test
add
fcmove
nop
insb
movsb
sub
pop
stos
xor
or
and
jae
cmpsb
fiadds
xor
std
popf
out
sbbb
jle
pop
shl
mov
js
dec
mov
je
sub
push
outsl
jl
or
xor
fwait
inc
cmp
adc
decl
adc
mov
clc
inc
sar
test
test
cmp
fldcw
cwtl
jno
xchg
cmp
out
push
sti
sbb
andb
xchg
xor
out
mov
mov
inc
dec
cwtl
fbld
and
in
insb
dec
insb
int
sbbl
out
adc
fbstp
jecxz
sub
in
add
shl
pop
fidivs
aas
mov
ja
cwtl
dec
pop
lret
lcall
add
gs
sub
test
or
inc
xor
nop
nop
subb
repnz
adc
pop
push
hlt
rclb
add
adc
stos
jnp
psllq
xchg
lock
int
jp
mov
lcall
shlb
outsb
fcompl
test
inc
or
popf
adc
into
xchg
repnz
aam
aad
aaa
cmp
lea
push
ficomps
mov
popa
xor
clc
dec
xchg
stc
sbb
dec
xchg
pushf
mov
sub
mov
sub
imul
mov
orl
ja
push
xor
jg
push
pop
int3
mov
out
insb
outsl
add
mov
jl
movsb
pop
pop
sbb
mov
iret
imul
push
sub
pusha
scas
push
hlt
pop
push
aaa
mov
das
adc
xchg
add
and
sub
clc
dec
push
push
adc
ja
cwtl
jb
pop
and
pop
cmp
push
adc
hlt
ss
xchg
add
jne
fdivp
sub
dec
sahf
out
xchg
inc
sahf
adc
sbb
fs
mov
insb
jmp
jne
cmp
in
or
push
dec
iret
psrlw
leave
push
clc
jae
add
paddd
ret
aam
out
lods
lea
and
lahf
icebp
jle
xchg
cmpsl
js
inc
rorb
jg
mov
pop
mov
stos
sub
outsb
push
mov
or
mov
mov
cmpsb
push
data16
psrld
stos
dec
mov
cli
inc
or
test
rorb
mov
ret
arpl
push
in
lods
lret
inc
add
rcrl
aas
aaa
xchg
sbb
es
adc
jb
es
popf
in
rolb
out
jp
sub
mov
pop
and
xchg
fcoms
jge
iret
dec
xchg
scas
ja
sahf
fidivrs
and
push
mov
adc
negl
xor
sbb
mov
mov
test
sbb
mov
xor
std
jecxz
dec
xchg
andl
mov
movl
test
mov
push
jo
insb
fidivs
leave
push
cmpsb
push
dec
test
imul
dec
adc
insb
dec
sahf
sub
mov
std
lea
std
or
xchg
sbb
test
push
pop
sub
popf
test
push
cltd
sti
pop
sbb
aaa
cwtl
mov
in
rorb
je
sbb
mov
mov
inc
cmp
sti
jecxz
push
notb
inc
pop
gs
adcb
outsl
jle
mov
inc
scas
andl
mul
mov
fistpl
data16
sbb
add
sahf
cmp
aas
outsl
or
mov
jo
add
pushf
aad
icebp
mov
ljmp
fistpl
inc
add
dec
icebp
insb
and
xor
mov
stos
js
popa
outsb
test
pop
push
test
repnz
nop
pusha
xchg
std
repnz
jb
addr16
lea
outsl
mov
shll
mov
jbe
insl
dec
shll
shrb
int
aaa
leave
add
xlat
or
shl
jmp
mov
cmp
lods
sbb
cmp
dec
jb
jl
push
inc
out
not
dec
mov
mov
lods
aas
lods
lock
mov
pop
movsl
add
cmpsl
push
outsb
inc
repz
imul
popf
lods
in
sub
ja
fldcw
sbb
push
cmp
cmp
push
lret
xchg
in
inc
fiaddl
cwtl
fdivrs
sub
out
jecxz
aaa
test
xor
xor
mov
aam
fistps
push
clc
rolb
test
push
ret
fmuls
cmp
fidivrl
pop
scas
add
stc
lret
fst
jo
xor
fldl
gs
lods
popa
divb
pop
adc
or
jb
add
pusha
cmc
or
cmp
sahf
lock
in
negb
cs
inc
cmpsl
xchg
leave
mov
arpl
adc
sub
and
sub
mov
ret
inc
fcomps
xor
pushf
repz
and
std
cmp
movsl
outsl
inc
mov
mov
xchg
mov
pop
dec
hlt
xor
iret
hlt
fldt
dec
add
or
popa
fbld
push
push
xchg
cld
in
jne
movsb
xor
andl
gs
rorb
in
jl
rcrb
test
in
mov
push
push
mov
das
aas
cmpsl
clc
dec
pushf
adc
jle
mov
rorl
xchg
subb
out
cmp
mov
lret
push
and
push
or
mov
movsl
cmpl
pusha
sar
aas
fisttpl
cmp
jmp
aad
add
cltd
aad
adc
daa
hlt
jo
insb
adc
adc
mov
mov
push
pop
sbb
scas
dec
push
push
repz
pop
ss
adc
mov
mov
lock
repz
xchg
loopne
mov
mov
ss
lret
jle
push
add
aas
mov
aad
test
cmp
insb
adc
outsb
push
insl
lock
outsb
sti
subb
ljmp
dec
ds
iret
adc
pop
movsl
jns
data16
pop
push
mov
pop
add
test
sbb
pusha
lock
lret
loope
add
std
icebp
pop
and
movsb
fmuls
dec
lea
roll
push
aaa
add
cli
mov
jmp
lret
jle
aaa
push
lods
jne
loopne
ljmp
ds
ret
pop
dec
xchg
mov
fdivrs
jne
sbb
mov
inc
rcrl
adc
and
inc
push
sahf
clc
dec
gs
xchg
lret
sarb
aaa
inc
je
pop
loop
mov
pop
es
jp
xor
and
iret
and
mov
cmpsb
adc
sbb
push
into
mov
dec
push
adc
in
ds
rol
push
push
jmp
pop
ss
arpl
jns
add
or
nop
jne
insb
dec
clc
ss
add
dec
out
inc
enter
push
push
pop
add
movsb
lahf
cmpsb
adc
inc
outsb
out
js
push
cmp
jle
les
xor
shlb
sbb
ljmp
stos
jae
into
jle
pop
sbb
sbb
lds
loopne
or
push
adc
fs
hlt
ret
mov
jno
fidivl
test
cwtl
mov
aad
adc
cmc
mov
ret
mov
cmp
lcall
daa
dec
nop
push
sahf
cwtl
aad
adc
ret
ret
fs
cmpsb
cmp
add
test
mov
mov
or
mov
jne
insl
daa
ret
xchg
mov
sti
das
std
or
lods
pop
jecxz
movsl
adc
cmc
bound
adc
push
cmp
push
mov
jl
inc
iret
inc
and
in
in
stos
sub
mov
xor
dec
sub
lds
je
ret
adc
xchg
sub
or
adc
shrb
jg
pop
xchg
inc
pusha
jp
push
cli
xchg
adc
movsb
ficomps
cmpsb
cld
and
pop
mov
pushf
and
outsl
outsb
mov
lock
or
pop
or
push
fwait
ret
mov
cwtl
lds
pusha
mov
dec
push
or
popa
mov
enter
loopne
pop
test
sti
xchg
test
pop
pop
call
stos
stos
adcl
or
cmp
inc
test
test
es
pop
mov
subb
inc
stos
jecxz
mov
les
push
pop
or
dec
sbb
jae
dec
mov
mov
movsl
cmp
and
mov
fnsave
popa
fldl
clc
bound
xchg
push
xor
jl
aam
jb
and
inc
mov
movsb
test
and
hlt
pop
movsb
arpl
rorl
dec
cmp
mov
les
dec
mov
mov
xchg
cld
repz
push
fwait
sbb
xchg
mov
jmp
int3
cltd
cmp
fsubrl
js
imul
mov
mull
imul
inc
into
cltd
mov
cmp
cltd
push
dec
ss
ja
hlt
mov
out
aad
pop
mov
sbb
loope
adc
sbb
pop
pushl
mov
outsb
xor
mov
mov
lock
in
test
repnz
xor
dec
lret
inc
pusha
sbb
test
outsb
pop
in
lea
call
sub
daa
and
cmp
leave
lods
mov
sbb
xor
stc
jae
pop
clc
lds
or
jmp
mov
fnstsw
xchg
mov
pop
aaa
inc
fmuls
adc
rcl
call
outsl
mov
add
imul
xchg
inc
sub
adc
add
xorl
xor
sub
mov
stos
mov
dec
int
test
loop
jbe
enter
cmp
sub
add
mov
inc
xor
scas
dec
inc
std
sbb
mov
mov
int
jl
hlt
adc
jo
ds
pushf
roll
mov
mov
mov
mov
imul
xor
lret
dec
xchg
cld
pop
inc
dec
push
xchg
push
imul
test
push
mov
std
insl
addb
jl
pop
push
int3
loop
xchg
cmp
hlt
jno
ret
adc
sahf
adc
inc
jnp
adc
pop
push
and
push
jo
mov
and
mov
dec
push
pusha
pop
rcrl
imul
mov
dec
fldenv
push
test
push
inc
jnp
jg
mov
xor
jb,pt
fists
popf
ror
jo
cmpl
orl
stos
aad
mov
xchg
or
mov
dec
in
mov
mov
push
das
ret
dec
mov
sbb
mov
add
int3
sub
cmpsl
pop
stc
sub
inc
daa
cmpsb
call
xor
ds
popa
xchg
xor
fnstenv
lods
pop
dec
push
out
cmpsl
push
sbb
adc
push
aaa
out
pop
cmp
sbb
push
mov
ljmp
inc
or
push
stos
and
jne
fstl
xlat
jb
aam
js
jle
xor
pop
shrb
aam
sub
fwait
mov
dec
test
int
or
jo
add
xchg
bound
xorb
xchg
cmp
add
movsl
mov
jmp
xchg
xor
pushf
mov
fbld
fstpl
les
iret
xchg
mov
jp
or
push
roll
lods
scas
enter
sub
outsl
loop
pop
pop
pusha
repz
add
mov
sbb
orl
test
dec
inc
cmp
fstps
sbb
mov
dec
mov
and
sub
ljmp
in
notl
popf
dec
mov
push
rcrl
fnsave
push
out
pop
lcall
adcb
cmpb
adc
icebp
aad
push
pusha
popf
roll
leave
aam
leave
xchg
fs
sbb
adc
or
add
dec
push
or
push
imul
test
xor
sub
or
adc
int
pop
add
jb
insl
inc
imul
xchg
mov
pop
ds
dec
xchg
jge
roll
sahf
sbb
jg
orl
inc
mov
mov
rorb
sub
imul
jnp
stos
adc
pop
pop
in
adc
push
add
xor
mov
mov
adc
xchg
loopne
iret
test
mov
pop
cmc
or
cltd
pop
cmp
mov
sub
fnstsw
jns
lahf
cmpsb
jb
jae
push
fimull
mov
inc
mov
out
jge
fsqrt
lods
hlt
fidivs
cld
push
pop
adc
int3
in
sub
xlat
sbb
mov
mov
pop
mov
sbb
cmp
add
mov
sub
iret
mov
loope
push
cwtl
jle
aad
js
mov
inc
xchg
imul
das
add
lret
xor
hlt
xlat
test
sarb
fsubs
out
iret
push
pop
mov
pop
in
push
and
data16
fbstp
inc
mov
mov
aaa
fidivrs
stos
ja
mov
xor
sbb
cmp
or
aas
jmpw
adc
add
pushf
cmp
mov
dec
mov
or
xchg
imul
mov
xchg
jae
inc
adc
test
outsb
ret
adc
std
xor
mov
shlb
xchg
fsubrl
js
rcrl
mov
popf
lea
push
mov
push
sti
xor
ljmp
push
pop
mov
adc
pop
out
jbe
mov
pop
pop
cmc
in
mov
mov
xchg
cmp
ja
push
jp
inc
mov
and
inc
cmpsb
mov
repnz
and
mov
lods
add
sbb
sub
xlat
cmp
xchg
jle
scas
dec
mov
pop
adc
lds
lock
rclb
ret
rclw
xorb
imul
xchg
pop
and
mov
fs
xchg
sbb
sub
and
and
pop
repnz
dec
inc
mov
lods
adc
dec
stos
loope
lret
fdiv
pop
xor
cmp
push
and
aad
jmp
es
loop
movsl
das
sub
dec
mov
jbe
cs
lret
xchg
adc
mov
add
sbb
cmc
fmuls
mov
fildl
mov
and
mov
sub
les
or
sub
jae
jne
push
clc
cli
rcrb
push
mov
push
push
lock
rcrl
xchg
sub
cs
in
fcoms
insb
mov
lret
fidivs
notb
in
sbbl
imul
mov
mov
lcall
sar
loopne
and
sbb
inc
imul
cli
adc
push
in
dec
hlt
jecxz
dec
fs
out
sub
xchg
iret
mov
in
cmpb
add
xchg
stos
out
sub
gs
xchg
leave
or
shlb
scas
mov
xchg
add
cmc
ss
push
negb
out
arpl
lahf
dec
and
outsl
pop
mov
pop
jae
adc
xchg
jo
sbb
fistpl
scas
in
fistpl
movsb
iret
in
insb
and
jne
fisttps
mov
dec
push
outsb
sahf
jle
adcl
and
roll
xor
mov
pop
push
mov
insl
out
cltd
pop
inc
scas
outsb
xor
test
mov
dec
and
sub
sahf
jp
addr16
ret
dec
push
add
pop
push
jge
sbb
adc
xchg
adc
jno
sub
test
shlb
cmpsl
ret
push
dec
cmp
gs
je
jno
ja
sbb
sbb
pop
add
pop
and
xchg
ds
push
push
stos
mov
and
sub
mov
orb
psraw
cmp
scas
cmpsb
int3
mov
xchg
sbb
mov
adc
int
rolb
xchg
jbe
iret
jmp
in
nop
and
adc
xor
cmp
test
daa
ja
sub
fdivl
ljmp
addr16
mov
push
lods
sub
dec
js
out
and
dec
dec
in
jecxz
in
lods
cld
jl
xor
aaa
dec
adc
mov
pop
mov
mov
inc
insb
mov
pop
fsubrp
and
outsb
shlb
and
jge
xchg
je
push
mov
xor
pop
fstpl
rolb
pop
xor
adc
adc
xor
int3
leave
cmpsl
rorl
pop
jmp
lea
mov
out
pop
xor
test
dec
cmpsb
jge
and
outsb
es
jns
mov
cmp
das
inc
jmp
enter
rclb
push
or
pop
pop
dec
pop
dec
test
inc
push
lcall
sahf
dec
fbstp
push
repnz
lods
scas
xor
cld
enter
add
cltd
pop
and
inc
or
xor
into
pushf
call
ret
cmp
add
stc
shlb
lahf
in
mov
push
bound
scas
pop
mov
inc
mov
icebp
xchg
scas
jbe
cmp
sbb
mov
push
adc
daa
mov
cwtl
popf
dec
arpl
xchg
jmp
jnp
push
mov
decl
loop
lods
cmpsl
scas
and
cmc
je
jns
jmp
dec
cmp
test
add
xor
lock
sub
push
dec
insl
repz
mov
mov
sub
xchg
inc
sbb
fadds
imul
imul
push
pop
aas
mov
mov
movsl
push
les
xchg
inc
outsl
jle
shrb
mov
ds
hlt
fisttpl
or
push
sbb
jne
push
inc
js
aas
mov
sub
adc
cltd
rcrb
mov
xor
push
inc
sub
testb
push
mov
push
cmpsb
out
jg
insl
pusha
push
mov
insb
icebp
into
arpl
pop
jmp
xchg
push
mov
imul
lret
sub
mov
mov
lock
or
fwait
popf
imul
cmpsb
bound
mov
jp
or
jns
xchg
cmp
dec
stc
outsl
scas
lret
mov
mov
mov
push
sub
bound
cli
rcrb
fisubs
idivb
mov
mov
mov
adc
std
ss
dec
jmp
test
adc
jne,pn
push
into
cwtl
mov
dec
inc
popa
push
xchg
lret
fimull
xchg
addr16
mov
and
or
lret
adc
sub
and
xor
mov
inc
dec
jmp
adc
test
mov
repnz
push
add
mov
test
cli
xchg
lods
add
call
leave
aad
int3
sub
cmpsl
sub
out
fsubl
rclb
lods
xor
addl
outsl
stc
enter
jb
jmp
mov
lods
fadds
lret
push
test
pop
xchg
cmp
pop
out
popf
clc
mov
js
adc
ss
lret
jle
or
or
cmpsb
lods
xchg
nop
lret
fadds
cmp
out
jge
dec
and
leave
jo
jge
mov
mov
jo
jp
cltd
arpl
lea
mull
sbb
idiv
dec
jbe
in
cmpsb
sbb
mov
mov
cmpsl
cwtl
xchg
pop
inc
ret
mov
cli
cld
and
mov
push
rcrb
pop
lcall
add
mov
jns
pushf
lahf
jmp
enter
mov
xchg
gs
xchg
sbb
sub
in
mov
movsb
xor
cmpsl
adc
lock
rcr
xchg
pop
push
into
out
int3
out
mov
dec
leave
rorl
cmpsb
push
out
xchg
sbb
xor
mov
and
cmp
mov
js
in
mov
mov
and
cmp
mov
jle
ja
mov
jne
pop
dec
fmull
lret
cmpsb
sahf
fdiv
push
jb
mov
pusha
sub
jmp
push
pop
jp
cmp
push
aas
imul
out
mov
divl
mov
pusha
or
jg
mov
imul
inc
push
shr
clc
push
lods
jnp
iret
lds
cld
and
sarb
icebp
push
sub
aam
repnz
jp
push
mov
mov
xor
push
mov
dec
fwait
imul
jae
push
out
and
iret
adc
pop
ret
shrl
add
testl
lea
ret
mov
ret
adc
lcall
xchg
shll
div
sub
pop
cmpb
lret
jae
pop
dec
into
jne
loop
xchg
or
mov
fldl
xchg
jecxz
mov
xchg
movsl
dec
inc
cmp
pushl
das
mov
popf
pop
cmc
clc
pop
aas
int3
imul
jo,pt
mov
jae
insl
ss
ds
inc
jmp
jnp
cwtl
mov
mov
add
jle
pop
dec
and
sub
popf
sub
mov
shrb
mov
movb
push
fsubl
jp
adc
insb
ret
cwtl
push
cmpsl
andl
or
pop
popa
xchg
push
sti
xchg
jbe
and
cmp
mov
xor
les
dec
dec
dec
call
push
sbbl
jmp
cs
push
add
mov
cmp
out
dec
ja
sbb
and
sbb
loopne
jno
mov
es
fst
cltd
fildl
imul
rorb
negl
and
cltd
xchg
and
pop
int
push
ss
mov
mov
mov
mov
xchg
mov
int
mov
cmp
pusha
mov
jo
stos
dec
jnp
stos
out
not
rep
add
es
in
mov
push
push
sub
addl
jp
std
jno
test
pop
jo
jnp
pop
and
xchg
pop
cmpl
sbb
dec
jb
movsl
sbb
add
fs
insl
outsb
ret
xchg
pop
repz
mov
insl
jb
push
sub
aad
in
cmp
jb
adc
pop
mov
push
movb
mov
xor
adc
and
sar
xor
imul
sub
mov
xor
icebp
sahf
cmp
dec
mov
test
lods
pop
mov
adc
mov
mov
popa
xchg
and
repnz
pop
jae
not
std
mov
mov
mov
mov
cmpsb
rcll
insb
outsl
into
mov
in
push
adc
pusha
xchg
xchg
daa
ss
inc
cmp
pop
dec
sub
outsl
mov
pop
daa
adc
stc
dec
xor
inc
adc
xor
pop
test
cmpsb
xchg
scas
inc
lods
sub
dec
pusha
pop
lods
xor
lods
mov
jb
cmp
mov
jbe
adc
cmpsl
icebp
inc
mov
mov
xchg
pop
sub
xor
out
xorb
pcmpeqd
push
incb
and
jnp
pop
push
rolb
and
scas
arpl
mov
shlb
js,pt
dec
in
scas
stos
and
push
sub
rclb
call
cmpb
mov
in
out
add
test
add
xchg
or
mov
xchg
jne
idivb
cld
mov
paddq
mov
repnz
mov
mov
mov
outsl
xchg
es
out
sbb
push
out
and
or
lock
push
pop
and
call
dec
cli
outsl
pop
subl
pop
iret
push
mov
imul
sbb
fmuls
pop
rorl
mov
sub
jmp
xchg
mov
dec
jg
mov
mov
xchg
mov
and
pushfw
fsubp
ljmp
push
sbb
add
cmp
xchg
cli
push
inc
lds
push
shl
stos
les
push
and
in
jbe
or
in
xor
cmp
push
adc
push
xor
stc
mov
arpl
aad
xchg
jmp
pop
lock
xchg
mov
xchg
jo
sbb
jp
sbb
cmp
xchg
pusha
mov
sub
int
inc
push
mov
je
adcl
in
dec
sbb
cmp
jnp
sbb
xchg
mov
sti
mov
cli
push
xchg
mov
mov
jecxz
mov
cmp
mov
lods
pop
push
xor
mov
call
cmp
adc
ss
jne
xor
jno
enter
and
gs
xor
push
sahf
mov
sub
mov
sbbl
mov
popf
mov
popa
sbbl
push
inc
leave
jne
and
data16
mov
adc
dec
ljmp
daa
xor
mov
pop
push
add
jnp
nop
jmp
sti
test
pop
scas
clc
adc
daa
xor
hlt
mov
and
fidivs
sbb
jle
repnz
fidivrl
pop
push
fwait
cmc
jl
inc
popf
std
add
inc
repnz
and
pop
andb
out
and
jae
xchg
dec
mov
call
xchg
movsb
movb
cmp
insb
push
gs
sub
fdivl
jae
enter
adc
ljmp
mov
xor
mov
cmpsl
std
sahf
add
xchg
xor
pusha
stos
xchg
xchg
lret
mov
std
sub
ss
ret
call
loop
inc
out
out
imul
pop
cmpb
adc
mov
mov
and
sahf
push
ja
dec
movsl
cmp
cmp
inc
sub
testl
or
add
aad
pop
or
xor
fsubl
jmp
xor
sub
sbb
push
adcb
subb
jne
xchg
cs
lods
sbb
lret
movsl
jno
hlt
mov
repnz
outsl
movsl
adc
imul
subb
jne
call
xor
cmp
xor
mov
jg
out
mov
xchg
push
clc
xor
mov
sub
int
call
bnd
mov
xchg
or
xchg
rol
test
insb
mov
js
cmp
push
cmp
dec
push
mov
push
xorb
scas
adcl
jecxz
xor
stos
mov
stos
insl
add
sub
ret
jl
mov
push
scas
mov
popa
and
mov
sbb
movsb
scas
stos
mov
mov
in
lods
mov
in
or
cld
dec
dec
test
sbb
push
rorb
mov
add
push
dec
pop
mov
shll
and
mov
pop
fcoms
xchg
push
ss
fsin
fcoml
sub
into
rcr
jnp
and
and
push
aaa
push
push
mov
in
sbb
push
adc
dec
fdivl
sbb
mov
inc
in
sbb
dec
and
pusha
jecxz
xchg
cmpsb
pop
dec
movsl
insl
sub
ja
addr16
cli
pop
loope
dec
cs
mov
mov
cmpsl
xor
or
add
push
lret
cmp
xchg
ss
arpl
stc
xor
pop
pop
or
and
push
repz
mov
ret
sbb
mov
shll
dec
rorl
cmp
mov
cltd
pop
inc
pop
cmpsb
mov
sub
mov
jbe
mov
movsb
jg
push
xor
push
cmp
add
dec
jb
push
call
jge
dec
lods
fxch
inc
jnp
syscall
shl
mov
mov
andb
xchg
xchg
jae
dec
stc
movsl
xorl
loope
aas
out
dec
inc
pop
pusha
jmp
mov
ret
int
jno
mov
popa
xchg
mov
mov
popf
aam
enter
loop
pop
and
mov
lods
pop
mulb
add
ret
mov
movsl
xlat
push
mov
aad
mov
pusha
negl
dec
adc
push
xchg
test
cmp
push
xchg
fiaddl
es
or
push
outsl
push
daa
cmc
aad
adc
lds
adc
cmc
add
outsb
push
push
inc
shl
adc
xchg
cli
movups
nop
pushf
mov
icebp
xchg
aas
sub
mov
jp
cmpb
adc
mov
test
pop
pop
sti
push
pop
popa
push
cld
xchg
cli
es
push
call
stos
jae
inc
sarb
mov
xchg
dec
jae
repnz
test
pop
idiv
sub
mov
cltd
js
or
lcall
jecxz
fdivl
sbb
lahf
or
fcomps
insb
aad
mov
cmpsl
fdivl
scas
lods
mov
jecxz
cwtl
insl
inc
inc
jb
xor
jle
aas
repz
pop
lret
mov
xor
ss
dec
sbb
out
in
add
mov
sbb
xor
cmp
loop
dec
outsl
data16
xacquire
out
mov
mov
sarl
scas
xchg
nop
push
adc
clc
int
ret
popa
sbb
adc
jo
or
cwtl
adc
jne
aas
repz
cmpsl
rorb
jnp
sbb
jne,pn
pop
jb
fsubl
cs
popf
ja
xchg
push
mov
scas
sbb
leave
inc
mov
mov
aam
cli
mov
mul
cmp
xor
pop
lret
or
popa
push
shr
arpl
fdivl
divb
js
outsb
ja
rol
insb
in
jl
inc
cmpl
fwait
pop
cld
xchg
mov
push
jp
sub
xchg
jae
add
jnp
movsb
and
mov
insb
mov
jbe
stos
xchg
add
std
mov
js
pop
and
xor
or
je
mov
xchg
cmp
mov
ja
imul
xchg
dec
aam
sub
mov
cpuid
int3
stos
adc
sbb
clc
xchg
and
jmp
icebp
jbe
xchg
loop
lret
shll
mov
and
sub
fisubrl
dec
jmp
mov
insl
xchg
fdivs
inc
pop
js
test
imul
test
mov
xor
arpl
imul
idivl
adc
and
jge
jl
xchg
lcall
mov
stos
rol
jno
pop
call
clc
sub
out
cmp
xchg
sbbl
xlat
mov
mov
sub
pop
lahf
adc
nop
inc
push
sbb
pushf
out
lret
adc
hlt
loopne
add
dec
push
cmp
sub
mov
sbb
call
cmpsl
pop
outsb
aas
cli
sbb
push
rorl
icebp
int
cmp
rcrb
je
fdivrs
ljmp
mov
mov
xor
push
xchg
aam
es
fwait
mov
test
or
adc
and
outsl
aaa
xlat
sub
add
daa
xchg
push
and
push
jae
aad
mov
test
ret
add
xchg
adc
test
std
pop
xlat
sbb
iret
stos
test
cs
nop
addb
cmp
xchg
xchg
movsb
jmp
mov
imul
cmpsl
aaa
lods
or
incl
loopne
push
sub
sbb
xor
inc
add
mov
lods
sbb
push
jmp
jne
mov
jb
jmp
cmp
inc
xor
mov
sub
fisttps
lods
add
dec
cmc
xor
das
lahf
jecxz
adc
adc
add
cld
push
add
ret
pop
js
pusha
cld
mov
lods
rcr
xor
mov
pop
pop
pushf
jp
push
cmp
adc
adc
cmp
cmpsl
inc
push
int3
xchg
iret
inc
jmp
aam
or
imul
add
lret
std
addl
sbb
and
mov
movsb
aad
repnz
icebp
adc
in
cmp
popa
adc
jg
pusha
fdivrl
xchg
push
cvtps2pi
js
sahf
dec
fimuls
jne
insl
jae
adc
mov
std
xchg
sti
out
push
pop
dec
pop
push
fnstenv
loope
mov
dec
mov
sbb
xchg
and
mov
lock
inc
mov
xchg
mov
jp
cltd
aaa
in
in
push
aaa
mov
cmpsb
iret
pop
jg
cmpsl
out
rcr
insb
out
mov
inc
sub
inc
or
leave
cltd
and
ja
or
sub
repnz
mov
sbb
push
xor
jl
inc
dec
xorl
hlt
test
sbbl
dec
xor
dec
outsl
test
dec
sbb
cwtl
shrb
js
scas
cld
repnz
mov
mov
shlb
in
add
daa
ljmp
sbb
aad
ja
test
outsl
add
test
xor
shr
xor
push
jle
sti
cltd
aad
xor
xcrypt-ofb
cmpsl
out
fistpll
hlt
dec
rol
push
sarl
loopne
insl
test
int3
cmpsb
cld
cmpsb
jg
in
std
lahf
cmpsb
movsl
mov
pusha
aas
orl
cmp
inc
jge
mov
ror
movsl
sti
rorb
stc
daa
adc
jns
lahf
lea
jb
and
lret
ror
adc
pop
adcb
cmpsb
enter
cmpsl
cltd
lods
or
xor
mov
jnp
inc
mov
or
cmp
test
ret
pop
cmpsl
jno
pop
test
iret
arpl
xor
psrlw
push
dec
mov
fisubrs
sub
repnz
bnd
xchg
lahf
ret
rolb
jo
imul
sub
adc
or
xchg
jecxz
lock
add
xchg
xchg
and
mov
push
mov
sub
dec
jmp
mov
add
xchg
fmulp
pop
sub
cltd
in
movsl
shlb
outsb
push
xchg
mov
cmpsl
out
call
icebp
lods
lods
sub
inc
mov
adc
insb
pop
aam
or
inc
lret
cmp
jl
sub
out
push
call
stos
jg
sbb
xchg
jmp
dec
std
push
sarl
enter
lds
xchg
dec
nop
jnp
fdivr
lods
xor
das
andl
xor
pop
sbb
push
mov
or
mov
cli
xorl
jb
ret
pop
inc
inc
mov
adcl
add
push
fisubs
cmc
adc
pop
adc
popf
test
dec
and
stc
pop
pop
dec
adc
jne
fists
rorl
test
adc
movsb
stc
jne
push
mov
cld
adc
aam
pop
xchg
nop
ret
ljmp
pop
call
gs
sbb
xchg
leave
pop
popf
shrl
push
push
mov
fld
and
fisubrl
fcmovne
mov
dec
push
sub
lods
rol
sub
push
cmp
ss
mov
fnstcw
popf
mov
into
pop
outsb
test
and
push
fbld
out
xchg
sbb
xor
nop
orb
scas
or
dec
lahf
jbe
or
mov
push
ret
xchg
add
jle
xchg
xchg
int
jne
cmpsl
add
fucom
leave
aaa
push
movsl
xor
push
cmc
adc
fwait
dec
insb
ficoml
jnp
aaa
cmpsl
lcall
leave
sbb
jge
mov
or
out
clc
xor
sbb
jl
imul
sub
pusha
aaa
ds
out
or
std
shll
lea
lcall
push
xchg
scas
pusha
imul
push
dec
push
daa
std
dec
ja
mov
int3
pop
adc
cld
jl
cmp
add
add
addr16
xor
hlt
jae
decb
cmp
pop
pop
mov
loopne
pop
cmp
les
mov
sub
adc
cmp
addb
test
mov
dec
fcmovb
testl
jmp
add
adc
subb
lods
leave
shll
jmp
jae
addr16
pop
mov
scas
aaa
cmp
cmc
out
movq
xchg
out
dec
int3
call
test
les
sub
and
adcb
aad
mov
daa
cltd
pop
cs
xor
mov
andl
mov
std
mov
pop
repnz
xor
pushf
popf
mov
lret
xchg
mov
inc
or
adc
insl
call
imul
cmpsb
movsl
jecxz
push
out
and
and
aaa
std
shrb
repz
adc
jecxz
sub
lds
jo
adc
mov
aad
stos
aam
inc
aas
cmc
sti
lods
sub
ss
push
in
cmp
fwait
xchg
movsl
repnz
loopne
or
out
test
hlt
dec
lods
negb
cmp
mov
inc
ja
iret
hlt
inc
pop
ret
sbbb
in
in
imul
into
lret
test
inc
and
les
lahf
pop
mov
int
fnstcw
xor
push
ret
jg
pop
xchg
mov
out
ds
sub
mov
or
das
int
cli
imul
fcmove
jmp
lea
icebp
adc
push
ja
push
sub
je
jecxz
out
mov
fidivrs
out
in
sahf
test
xchg
leave
fldt
mov
push
dec
xchg
data16
jle
mov
cwtl
dec
adc
inc
lods
xor
adc
mov
xor
pop
daa
xor
add
repnz
fstl
out
inc
mov
ficomps
or
movl
jo
and
sbb
aam
das
daa
inc
movsl
ret
xor
in
ljmp
cltd
scas
push
jmp
testl
fs
jp
inc
adc
les
iret
movb
hlt
test
ja
mov
fimull
mov
mov
int3
in
sub
in
xchg
mov
stos
sbb
movsb
lea
in
xor
mov
outsb
lahf
stos
sub
sbb
rol
inc
test
mov
mov
mov
mov
mov
mov
xor
pop
push
and
popa
inc
mov
shlb
movsl
mov
push
push
xchg
sub
into
xorb
xor
mov
js
pop
iret
nop
or
jg,pt
adc
sub
adc
scas
lods
dec
ret
mov
jbe
add
jmp
rcrb
or
dec
pop
rcl
shufps
inc
adc
insl
sbb
push
sarl
scas
xor
push
mov
push
pop
sub
and
les
inc
aad
adcb
jo
repz
mov
sbb
ficoml
dec
inc
mov
sbb
and
out
icebp
ss
rorb
addr16
cld
cmpl
cmp
ds
popa
aaa
fcomps
push
cld
int
dec
stc
int
dec
insl
mov
fisttps
ret
rep
push
xchg
pushf
repnz
push
lock
or
cmp
repnz
cmp
mov
inc
pop
insl
jno
and
imul
xchg
icebp
addr16
movsl
out
jmp
fs
leave
ljmp
roll
lret
es
lcall
daa
fistpl
lds
outsb
add
sahf
stos
insl
mov
mov
inc
mov
in
mov
xlat
movsb
imul
aad
jecxz
mov
push
pop
test
rcr
cmc
add
cmp
fldcw
incb
pop
sub
cmp
scas
mov
adcl
adc
mov
add
push
pop
fidivrs
rcrb
inc
fistpll
cmp
popa
insl
insl
imul
cmpsb
mov
test
in
xor
lahf
cmp
sub
rep
aas
nop
push
ljmp
imul
int
adc
mov
movsb
or
out
cmp
mov
and
mov
xor
pusha
push
push
rcr
jno
imul
cmc
xor
pop
fnstenv
aas
cli
sub
cmp
pop
mov
mov
insb
pop
mov
fwait
jecxz
push
rorl
and
mov
fstp
hlt
lods
sub
cmp
sbb
inc
subl
icebp
ret
es
test
sub
push
push
push
out
jp
int3
lea
les
in
xchg
and
adc
adc
pushf
fs
int3
test
dec
rcrl
push
loop
jb
ds
mov
imul
mov
cmp
mov
loopne
push
fldenv
rcl
adc
in
enter
pop
scas
xor
rcr
ss
in
icebp
sub
fsts
adc
mov
sub
cmc
sbb
lds
pop
fsubrl
ss
sub
in
push
pop
loopne
add
loope
fists
mov
ds
gs
push
push
ret
adc
ret
in
orb
pusha
pop
mov
push
jmp
mov
sbb
xchg
mov
aam
jmp
stos
call
rorl
xor
mulb
mov
rcr
pop
push
sub
cwtl
mov
lea
mov
add
jns
jo
inc
and
lret
pop
loop
pop
sbb
jmp
push
cltd
andl
xchg
mov
pop
jecxz
xor
test
mov
pop
cmp
loop
dec
les
in
inc
stos
xchg
push
negl
jmp
jbe
adcl
repnz
icebp
push
rcrl
test
imul
jmp
popa
rorl
sub
cmp
pop
call
in
adc
ret
je
xor
adc
adc
push
loop
or
sub
push
mov
adc
fwait
out
xor
dec
or
pop
call
adc
pop
mulb
movsl
cmp
in
inc
mov
push
dec
sbb
sbb
sbb
cs
sub
add
and
in
inc
xchg
fwait
ss
push
add
mov
or
stc
lods
test
or
pop
pop
fcom
lods
xchg
out
dec
movsl
mov
popf
jecxz
loope
pop
ljmp
insb
jae
popf
stc
imul
or
dec
test
pop
fldcw
add
inc
and
out
sub
repnz
leave
fstpt
pop
les
xchg
and
mov
mov
cs
hlt
std
dec
pop
xor
inc
cmc
mov
push
sub
stc
movsl
outsb
lret
leave
lock
mov
inc
mov
jno
push
jo
jmp
sbb
rcll
inc
icebp
jae
mov
outsb
mov
xlat
jle
mov
js
jno
iret
nop
push
jl
add
xchg
icebp
repnz
add
xchg
arpl
js
dec
popf
add
jns
rcr
pop
pop
sbb
cmp
aad
fwait
mov
out
or
mov
cmpsb
notb
mov
sarl
es
and
cs
test
add
js
repnz
cmp
and
pop
push
jmp
lock
jecxz
jg
das
xlat
lcall
cmpsb
ljmp
xor
fstps
sbb
inc
sub
xchg
je
out
push
je
mov
dec
pop
adc
inc
inc
cmpsb
jmp
sub
imul
stos
xlat
imul
dec
pushf
ret
xchg
cmpl
and
in
jmp
inc
gs
roll
and
add
mov
sub
test
pop
and
push
xlat
or
or
inc
adc
push
sub
lret
das
xchg
loope
mov
jg
sbb
pusha
stc
les
or
fistl
dec
scas
sub
sbb
scas
and
sarl
ds
neg
hlt
or
mov
mov
mov
mov
mov
xchg
fstpl
pop
popf
xchg
cli
jno
xchg
fidivl
add
ret
pop
sahf
hlt
jmp
ljmp
push
mov
lea
sahf
push
fs
xchg
sub
mov
es
fdivrl
loop
lret
scas
insb
mov
insb
imul
cltd
pop
fsubrp
add
xor
fs
scas
pusha
xchg
mov
jae
adc
cmp
js
dec
idivb
ficompl
push
xor
cwtl
std
in
mov
cmp
ds
sub
push
inc
push
push
mov
sub
push
cmp
mov
hlt
clc
push
lods
or
cs
pusha
sub
mov
or
popa
fistpl
pop
push
pop
rcll
pushw
ret
das
or
inc
cltd
jbe
ss
roll
and
push
cmp
mov
andb
or
out
dec
sbb
xchg
inc
xchg
sar
pop
mov
enter
int
cli
fistpl
ja
dec
dec
mov
cli
js
pop
sbb
into
pop
add
inc
sbb
push
fists
cmp
aaa
xchg
jge
add
or
or
cmp
add
xchg
adcb
cltd
mov
fmuls
cmp
test
inc
out
adc
rcl
cli
push
pop
fs
aaa
call
jmp
mov
rcll
popa
sub
dec
inc
pop
std
je
sbb
shl
sbb
cmp
mov
add
fs
invd
jge
push
and
in
or
mov
sub
and
mov
lret
jne
sahf
cmp
pop
xchg
xor
les
cli
mov
fmulp
push
xchg
pop
and
cmp
mov
pop
mov
mov
int
pop
push
push
in
inc
loope
mov
adc
xchg
nop
cmp
lret
das
adc
or
pop
cmpsl
movsl
cmpb
cmpsl
mov
mov
movsb
mov
xchg
inc
int
sub
aas
fcoml
imul
fcoml
ret
mov
sahf
in
mov
xchg
adc
xchg
aam
cmp
int
jns
or
sub
push
mov
sub
push
outsl
negb
das
mov
jecxz
rolb
mov
jle
push
pop
push
lahf
dec
or
jg
mov
outsb
leave
ja
adc
sbb
pop
inc
sbb
cmpsb
dec
mov
outsl
push
lret
jge
xor
and
jp
mov
sbb
in
mov
fs
or
sbb
cs
add
pop
dec
dec
inc
lods
or
xchg
jle
inc
pop
xchg
loope
testb
sarb
and
lahf
lock
pop
test
or
mov
mov
xor
popf
cmp
shll
sbb
notb
adc
add
pop
add
cmp
mov
ds
mov
hlt
ret
sbb
out
cwtl
sub
jno
lds
pusha
test
mov
adc
clc
repz
pop
ret
cmp
stc
fdivl
mov
pslld
fsubrs
lahf
add
aas
inc
cld
andl
cmp
mov
icebp
xorb
das
test
add
imul
ss
repnz
jmp
jmp
cmpsb
out
xchg
pop
insl
mov
inc
mov
and
mov
jo
and
jge
inc
pop
out
cwtl
jns
push
and
pusha
pop
jo
cmp
lds
mov
subl
dec
fcmovne
test
adc
xor
mulb
dec
pop
cmp
movsb
aad
aam
sub
insb
je
mov
xchg
stos
fdivrp
aam
shll
jae
scas
into
xchg
daa
ljmp
inc
in
fldenv
lcall
mov
in
rolb
jo
imul
pop
ss
lea
push
mov
fwait
popf
cmp
sahf
push
shrb
fcmovnb
add
mov
stos
push
push
lds
push
inc
cmp
sbb
shll
cwtl
push
pop
out
or
xchg
or
add
lods
add
jbe
adcl
js
movsb
scas
push
std
cmc
and
mov
push
mov
adc
out
mov
cld
mov
int
xor
lret
into
xor
sti
movsl
ljmp
jmp
adc
out
xchg
xor
mov
xor
aad
mov
mov
dec
push
pop
stos
sbb
in
add
mov
mov
mov
pop
nop
mov
pop
loope
call
addb
mov
outsb
negb
shll
xor
stos
xor
nop
sub
fwait
adc
push
imul
shlw
mov
cmp
fcmovu
and
notb
sub
or
pop
fs
jo
sbb
xchg
cwtl
sbb
xchg
loopne
sbb
cwtl
mov
pop
in
stc
adc
cmpsl
js
psubq
fwait
jae
or
pop
inc
jae
and
cmpsl
lcall
sbb
lret
xchg
je
jl
cmp
xchg
into
sub
shlb
sbb
clc
jnp
movsb
dec
fistpl
add
clc
pushf
sahf
int
lcall
stc
mov
and
cmp
push
pushf
call
cmc
lds
sub
and
and
dec
ret
xchg
xor
mov
insb
mov
insb
pop
stos
nop
imul
sbb
jae
jno
xor
pop
lods
or
cli
mov
jge
lock
cltd
pop
icebp
mov
shr
inc
cwtl
inc
ljmp
dec
fbstp
mov
ror
je
jno
pop
cmp
cmp
lret
movsl
jns
fisubrl
cld
sti
mul
ret
and
sub
pop
fnstenv
mov
inc
sub
mov
xchg
cmp
jp
roll
std
mov
pushf
cwtl
inc
push
or
inc
daa
sbb
test
test
mull
xchg
sti
inc
imul
xlat
adc
fmull
add
adc
aam
shll
arpl
lods
rcll
inc
dec
mov
shll
icebp
scas
xchg
lret
addb
mov
mov
lret
xchg
aad
jbe
pop
aam
jge
arpl
addr16
and
std
jp
in
inc
sub
in
add
mov
outsb
rcrl
mov
outsb
jmp
cwtl
outsb
dec
mov
flds
pop
aas
gs
das
adcb
cs
xchg
pop
or
fistps
jae
xor
sahf
mov
arpl
int3
sbb
lods
mov
movsb
and
fisttpll
push
push
les
mov
xor
xor
jge
jae
adc
cmp
subl
inc
pusha
neg
pop
jb
add
pop
sub
mov
in
mov
pop
and
arpl
out
mov
in
shrl
mov
push
ja
lcall
lcall
stos
xorb
push
je
aam
xchg
add
das
jnp
pop
std
stc
inc
xor
rclw
cli
ds
jle
and
push
cmp
jl
hlt
lea
sub
into
xchg
pop
jmp
in
dec
xlat
sbb
lret
mov
mov
cwtl
pop
inc
mov
sbb
loopne
mov
sub
mov
insl
js
dec
xor
imul
test
not
leave
xor
cld
ja
pop
xchg
shl
add
push
std
cmp
xor
dec
xor
mov
dec
mov
rcl
paddusb
mov
jmp
xor
xor
jae
sbb
jle
das
mov
scas
adc
hlt
cmp
or
xchg
popf
pop
test
stc
repz
adc
call
dec
mov
or
push
lock
mov
inc
sarb
jae
xor
xor
xchg
and
pop
jno
pop
and
cmpsb
cld
in
mov
fwait
pop
mul
inc
and
fdivl
outsl
dec
dec
ja
notl
and
push
dec
jp
cmp
mov
clc
mov
scas
or
mov
dec
jl
pop
cmpsb
push
inc
xchg
jmp
mov
xchg
pop
into
aas
push
flds
pop
outsl
xchg
loope
pop
es
add
ds
push
mov
call
jp
xchg
jae
mov
mov
shrl
lods
push
cmp
dec
dec
js
xchg
inc
popf
rol
pop
push
sbb
cmpsb
stc
mov
lret
xchg
addr16
stos
pop
inc
pop
out
loope
and
das
push
pop
and
mulb
and
data16
jecxz
sbb
mov
xchg
inc
loopne
imul
into
mov
mov
lods
pop
loopne
dec
inc
xor
xor
or
popa
ds
roll
mov
mov
inc
xchg
imul
xor
cmp
pusha
clc
lahf
fstpl
xchg
sbb
push
mov
rorl
lods
clc
fiadds
pop
int
fs
or
jns
pop
push
pop
std
or
xchg
sub
fisubl
shrb
lret
int
stc
mov
pop
xor
repnz
aas
jmp
sahf
out
incb
fists
or
jno
lds
decb
xchg
adc
fldl
test
cmp
out
push
add
adc
or
cwtl
and
mov
lcall
sub
add
cld
loopne
repnz
mov
fdivl
fmuls
stos
fdivr
stos
clc
stc
xchg
mov
andl
fiaddl
sbb
sub
outsb
test
dec
ret
and
insl
lcall
mov
stos
pop
dec
dec
adc
fidivrs
inc
shlb
add
xchg
dec
dec
fs
insl
cmpsb
dec
mov
sub
aaa
stc
loopne
rorl
dec
add
add
or
jg
outsl
mov
sub
inc
ficoms
std
pop
inc
mov
shlb
jle
xchg
out
jo
adc
cli
ret
mov
sub
jl
dec
xchg
pushf
sbbl
mov
push
jg
or
xlat
test
push
xchg
sbb
push
in
addr16
cmp
cmpsl
cmpb
sub
xor
jge
cld
push
dec
outsl
pop
xchg
sbb
pusha
jns
push
push
adc
iret
mov
stc
push
jge
popf
mov
int3
mov
mov
adc
es
mov
mov
mov
push
or
out
adc
out
inc
movlps
loopne
clc
imul
je
adc
cmc
xchg
inc
or
jl
and
adc
subl
push
xor
sbb
jo
stos
fdivl
adc
fisubs
xchg
or
jmp
pop
pusha
das
pop
jge,pt
into
es
outsb
dec
xchg
and
stos
test
lds
insl
imul
je
movsb
rcr
ds
adc
inc
iret
les
pop
cld
mov
in
mov
incl
lock
les
int
out
pop
push
daa
dec
sub
cltd
adc
lea
push
push
bound
cli
jle
movsl
arpl
sbb
xchg
cmp
sub
verr
lahf
test
int3
iret
pop
lea
cmp
js
dec
ss
dec
mov
push
and
inc
insl
mov
insl
icebp
cmp
adc
out
mov
mov
jmp
pushf
mov
mov
or
mov
sbbb
lret
push
and
scas
fs
jle
cmp
addl
insl
lcall
mov
imul
or
pop
mov
dec
mov
fnstcw
jp
pop
pop
xor
mov
movsb
sbb
jae
push
mov
cmp
mov
in
or
stos
lcall
pop
out
fsubrs
inc
out
leave
sub
cmp
rcr
hlt
lea
cmc
lret
lds
pusha
push
mov
pop
cmp
das
add
adc
cmp
jmp
bound
and
adc
ret
mov
sub
dec
sbb
mov
ret
stos
mov
xor
push
jns
arpl
jmp
push
outsb
loopne
loope
ds
push
mov
jno
mov
cld
cmp
out
push
xrelease
popf
mov
cmpb
pop
adcb
fistps
shl
sub
and
jl
xchg
jns
mov
sub
add
xchg
aaa
jmp
push
gs
and
sbb
rcrl
jns
mov
mov
adc
jmp
int3
push
adc
test
fldcw
push
fiadds
leave
lods
sub
cmp
ljmp
push
ds
jne
ss
jmp
addb
sbb
dec
cmp
lods
out
sbb
nop
sbb
test
scas
in
lds
call
or
dec
or
sub
mov
pop
and
int
nop
sbb
pusha
cmc
mov
pop
lret
cltd
fs
jle
or
lods
push
and
mov
das
and
in
pop
jb
test
xor
adc
lock
xor
xchg
jmp
sub
movsb
lahf
mov
sbb
subl
out
adc
mov
leave
clc
xchg
rclb
xchg
test
insb
jg
mov
push
jae
std
jecxz
int
insb
sahf
pop
sbb
pop
out
push
push
lcall
ficomps
iret
in
pop
jae
push
test
por
loopne
mov
mov
and
fdivl
nop
xor
in
sbb
into
test
mov
xchg
cmp
mov
loope
xor
gs
stos
xchg
inc
inc
mov
cmp
sbb
lret
fidivrs
and
jbe
mov
inc
js
push
jmp
loopne
dec
leave
or
outsl
lcall
iret
mov
repz
stos
mov
fcoms
aam
cmp
testl
imul
and
fldt
cwtl
lahf
gs
dec
std
lock
aam
fisubrs
xchg
and
fsubr
cmp
sub
outsl
in
loopne
ja
jo
push
and
insb
lret
dec
scas
mov
inc
sbb
mov
daa
sti
xor
outsl
lods
call
mov
adc
outsl
mov
jae
cmc
shl
mov
dec
addr16
mov
jge
cli
xorb
stos
add
or
mov
cld
push
xchg
add
in
leave
daa
add
xchg
fistl
dec
xchg
mov
orb
lock
push
aad
sahf
cli
aas
dec
ss
out
aad
xchg
xbegin
pop
pop
aas
fimuls
cmp
ret
or
jae
jle
orl
shl
xchg
andb
mov
or
arpl
xor
imulb
ss
cmp
dec
push
lret
sti
inc
test
inc
js
cmp
les
pop
gs
push
jmp
sub
gs
jecxz
jge
xchg
movsl
cmp
cwtl
into
rcl
addr16
jb
std
xor
fwait
stos
sbbl
push
inc
mov
out
pusha
ljmp
jne
pop
aad
sub
push
out
sbb
lock
pcmpeqb
xchg
pop
dec
aad
frstor
mov
enter
pop
mov
ror
adc
xor
lds
cmp
adc
push
and
insb
cmpsl
mov
out
js
sub
dec
push
push
out
andl
out
and
jmp
call
push
sbb
adc
pusha
inc
jle
cmpsb
or
push
lods
sbb
in
xchg
int3
sbb
xchg
xorl
add
mov
and
or
or
mov
adc
in
add
push
mov
add
inc
jg
or
nop
jb
push
lods
int3
jl
insb
cld
mov
dec
jae
leave
jbe
push
mov
inc
dec
mov
notb
dec
jne
das
pop
sti
rcrl
bound
push
sub
rclb
mov
xchg
fnstcw
and
mov
xor
jb
and
ret
xchg
inc
fistl
mov
jl
sub
leave
iret
out
sub
pop
jp
pop
sub
mov
adc
pop
xlat
jp
in
xor
test
push
and
lea
pop
rclb
ss
in
xchg
popf
add
mov
sbb
repz
cmp
fnsetpm(287
cmp
lea
pop
add
cwtl
fucomip
mov
mov
mov
pop
cmpl
das
sub
jnp
lock
cmp
in
stos
jle
mov
ljmp
sbb
xor
xchg
call
or
mov
fisubl
imulb
fidivrl
pop
mov
popf
sub
out
shrl
shrl
push
mov
das
push
mov
pop
fidivrs
mov
jne
cmp
ljmp
cmp
loop
xor
jbe
aaa
dec
push
sbb
pusha
repnz
sti
inc
sbb
xchg
jbe
in
jae
js
inc
push
xchg
rolb
xchg
lcall
iret
fucomp
cli
dec
je
loop
xchg
adc
orb
and
aad
movsl
mov
sti
jecxz
cmp
pop
mov
sub
jb
mov
push
std
movsb
sub
xor
insb
in
or
loop
add
arpl
and
std
cmpsb
add
das
aas
ret
sub
cmp
or
or
fstl
sahf
pop
repnz
iret
sub
ret
sbb
cmp
and
pop
bound
xor
jo
cld
sub
xchg
lret
movsl
sub
sbb
lea
lods
loopne
or
pop
sahf
clc
cltd
inc
enter
sbb
into
imul
and
nop
adc
mov
out
call
cmp
sub
and
inc
sub
lret
cmp
xchg
push
jmp
ljmp
cmp
stos
insl
mov
xchg
mov
cmpsb
cld
push
push
sbb
fstpl
out
mov
mov
mov
mov
pop
lods
jne
add
add
mov
nop
sbb
mov
inc
nop
jge
push
nop
mov
clc
scas
xlat
pop
cmpsb
push
cmpsb
push
ror
lea
stc
xchg
adc
xchg
mov
adc
daa
and
xchg
cld
add
push
leave
scas
mov
xchg
mulb
addl
adc
aam
clc
cmpb
inc
shlb
add
fstps
sarl
jb
call
mov
mov
fdivrl
sbb
popa
test
ret
ljmp
jl
or
icebp
lock
mov
fcomi
mov
sbb
insl
mov
ret
imul
mov
imulb
cmp
dec
ficoml
cmc
mov
dec
cltd
sbb
push
addb
test
rorb
mov
or
popf
pop
lods
mov
mov
inc
push
and
andl
and
das
fdivl
mov
cs
and
icebp
mov
sub
mov
add
mov
mov
xor
and
das
inc
add
iret
shll
repz
mov
jae
imul
adc
out
adc
mov
dec
mov
xchg
daa
ret
xchg
les
imul
enter
mov
xchg
test
cmpsb
and
loopne
jg
xchg
dec
pop
stc
cmp
or
rcll
inc
cltd
inc
and
out
and
scas
orb
pop
cmc
dec
jge
jbe
repz
ds
loop
hlt
leave
rorl
or
iret
xchg
loopne
icebp
mov
cmp
aad
pop
mov
movsl
fst
jae
sbb
mull
and
test
xchg
gs
push
sbb
dec
ds
pushf
cmpsb
loope
and
push
sub
push
js
xor
push
mov
rorb
xchg
sbb
bnd
sbb
insb
sbb
mov
orl
ljmp
cmpsb
mov
imull
ror
shll
adc
mov
arpl
mov
xchg
or
js
dec
push
movl
addl
mov
das
or
sbb
xchg
sti
and
inc
dec
sti
enter
pushf
stos
outsb
pop
push
jns
jae
adc
sbb
sub
xchg
loop
int3
xchg
pusha
out
jbe
mov
pushf
test
in
rcrl
jg
shl
roll
cmp
add
sub
sbb
sub
xor
sub
lods
das
pop
mov
xchg
into
ret
movsl
xchg
lods
mov
repnz
push
popf
popf
mov
cli
sti
cld
out
cmc
mov
roll
xchg
stc
icebp
dec
mov
fldenv
xchg
cmp
aaa
clc
add
sbb
dec
fsubrl
mov
and
inc
and
dec
in
ja
inc
iret
lds
push
mov
sbb
pop
mov
movsb
sbb
sti
pop
xchg
dec
fmull
test
repnz
repnz
arpl
das
lret
int3
in
lods
rorl
and
add
bound
add
cmp
or
in
and
gs
loopne
jecxz
pop
ljmp
andl
add
stos
cli
xchg
and
cmp
jae
push
mov
jmp
mov
aaa
xchg
add
pop
xor
mov
inc
push
push
or
mov
aaa
dec
iret
mov
cmc
cmp
mov
add
sub
mov
repz
sub
outsb
int
les
test
out
ss
pop
jge
mov
rorl
sahf
sbb
cli
dec
push
loopne
xor
and
test
jae
jns
sub
pushf
ljmp
jl
das
and
fstpl
sbb
scas
insl
push
push
xchg
pop
xchg
mov
ret
mov
repz
add
jo
jle
or
pop
nop
mov
sub
ret
lods
dec
arpl
push
inc
leave
or
lret
xchg
sbb
xor
loop
pop
xchg
xchg
repz
ja
mov
pop
push
stc
jge
inc
movsl
sub
cmpsb
mov
outsl
adcl
xchg
enter
andl
mov
data16
pop
aam
cmp
sbb
arpl
jae
cltd
clc
addr16
mov
rorl
sub
xor
pop
sub
cmp
mul
orb
push
fsubrs
cltd
aaa
shl
push
fsubrl
je
adc
and
push
popf
cmp
add
pop
data16
fs
mov
xchg
pop
jne
scas
jnp
test
fistpll
lods
je
mov
stos
rcrb
jo
pop
xlat
std
jb
insb
aaa
mov
add
cld
daa
mov
mov
outsl
mov
mov
adc
out
imul
push
and
imul
mov
pop
arpl
push
mov
jo
loopne
mov
and
lds
xchg
lahf
lret
sarb
dec
repnz
pop
imul
sub
xchg
imul
mov
inc
lret
push
pop
into
cmc
inc
inc
or
scas
mov
iret
inc
pop
dec
clc
outsl
push
sahf
ljmp
xchg
hlt
notb
scas
and
ljmp
sahf
out
lret
call
gs
sbb
xor
mov
pop
cltd
cmpsb
in
push
cmp
mov
in
lret
into
jb
inc
pop
pop
jb
and
insl
in
in
popf
mov
cs
cmp
jbe
and
notl
push
imul
cld
push
adc
mov
push
or
scas
mov
adc
adc
xchg
xchg
dec
mov
cmpsl
fsubrs
adc
lea
dec
and
push
jae
mov
or
pop
jecxz
fwait
arpl
cmp
mov
push
in
mov
xchg
cmp
mov
icebp
mov
movsb
pop
inc
pop
call
xchg
and
mov
in
mov
cmc
aad
add
mov
shlb
cmp
push
testl
lea
pop
mov
adc
sub
dec
cmp
mov
push
pop
cmp
insb
pop
enter
xlat
xchg
lret
jbe
sbb
adc
inc
add
push
sbb
ljmp
or
xor
lods
jne
adc
cmpsb
fmuls
or
cmp
je
push
add
stos
add
adc
dec
mov
cli
movsb
mov
dec
cli
push
add
sub
dec
shlb
jns
push
loope
jne
ds
add
mov
mov
dec
pushf
jecxz
pop
mov
in
and
inc
sbb
cmp
mov
push
aas
shl
repz
mov
mov
add
or
pushw
lods
orb
push
rcl
test
sub
test
jp
mov
shll
mov
fsubs
rcr
lock
xchg
push
or
xchg
fwait
jp
xor
sub
sbb
push
repnz
pop
xchg
jbe
cmp
rcr
in
fmuls
pop
movsl
jl
movsl
xor
mov
dec
das
jne
pop
fistps
insb
push
mov
imul
rcl
addr16
loop
in
cmp
cmpb
adc
mov
shll
xor
jmp
jne
xor
int3
or
jne
lock
mov
sbb
hlt
test
push
mov
pop
pop
xchg
cmp
int3
stos
sbb
mov
int
mov
imul
lret
nop
jmp
sub
test
dec
xchg
mull
mov
sbb
xor
inc
lret
jl
addr16
out
jmp
jecxz
xor
enter
out
insb
adc
or
mov
sub
nop
daa
into
mov
or
lahf
fstp
cwtl
mov
pop
shrb
into
sbbl
inc
push
ja
pop
hlt
add
fsubs
push
daa
mov
roll
xor
nop
test
mov
rcll
popf
push
sbb
mov
in
inc
jnp
pop
in
icebp
pop
add
in
pop
xchg
xchg
and
stc
mov
shlb
mov
jp
call
out
or
mov
mov
add
lahf
ja
jecxz
mov
dec
mov
jno
sbb
fcmovb
out
xor
popa
cmpsl
cli
filds
fistps
xor
or
shrl
xchg
out
rcr
push
pop
adc
mov
dec
bound
xor
aad
ret
lock
negl
hlt
and
sub
mov
loope
mov
fistpll
stos
outsl
movsl
aad
sarl
sub
push
adc
scas
inc
hlt
pusha
xor
cmp
out
sbb
outsl
pusha
repnz
pop
fsubrs
out
lcall
lds
bound
iret
mov
jo
aam
mov
daa
adc
sub
and
jmp
jp
repz
dec
dec
insb
les
out
stc
imul
lds
jg
xor
adc
cmpsb
jge
push
or
pop
adc
inc
test
ja
cmpsl
push
cmp
cs
test
ja
jecxz
inc
shrb
test
push
dec
sbb
aaa
loop
rolb
add
out
daa
add
insl
mov
cs
mov
mov
sbb
mov
lock
test
popf
mov
out
int
inc
in
into
mov
mov
cs
stc
push
dec
fistps
adc
xorb
lret
xchg
aad
jl
pop
push
pop
jae
faddl
sahf
push
dec
outsb
xor
gs
cmpsb
stos
fmuls
movl
aam
mov
subb
pop
fimuls
popf
subb
or
fidivrs
stos
cmpsl
mov
test
inc
mov
je
xchg
test
into
gs
sbb
pop
cli
dec
and
pop
xchg
adc
adc
mov
jecxz
jo
gs
mov
push
or
fists
jae
rcll
push
mov
push
adc
mov
sub
cs
gs
or
pop
mov
cmp
fs
mov
add
mov
test
jg
inc
les
cmp
outsl
cld
jmp
add
mov
xor
and
in
mov
je
or
pop
mov
lock
sub
push
ljmp
mov
mov
sub
gs
scas
mov
rol
sub
aad
ss
mov
adcl
adc
inc
lea
cld
mov
and
xchg
scas
mov
fimull
test
lahf
ret
add
sbb
insb
and
gs
mov
test
dec
xchg
jmp
aam
push
mov
bound
scas
ret
out
mov
icebp
sbb
iret
mov
outsb
mov
xchg
insb
shlb
adc
fistpll
insl
sahf
jmp
xor
add
mov
add
mov
inc
cmp
lcall
nop
cli
push
push
scas
mov
push
xor
ror
push
lock
cwtl
into
lahf
and
adcb
and
add
pop
jne
dec
xlat
sub
lcall
pop
mov
fmull
xchg
pop
daa
dec
bound
pop
cmp
and
outsb
jmp
lret
dec
les
addr16
xchg
mov
out
xchg
aam
add
dec
repz
adc
xor
or
push
rcrb
imul
pop
mov
dec
push
xchg
pop
aas
xchg
cmp
cmp
scas
add
push
fimuls
rcr
scas
and
add
or
push
and
jge
outsb
nop
insl
sbbl
cmc
lcall
ret
cs
xchg
mov
mov
xor
inc
sar
ljmp
insb
add
sti
push
fcomip
push
push
ss
stos
xor
push
xor
stc
pop
sbb
shlb
loope
gs
lods
iret
xchg
movsb
inc
pusha
ror
aam
pop
aas
gs
fwait
movsb
out
cmp
mov
inc
inc
mov
in
out
shll
int
loopne
mov
repz
cld
sbb
inc
dec
add
fistpl
jno
or
push
xorb
lock
mov
lock
mov
mov
xor
push
out
mov
cmpsb
pop
or
jae
mov
inc
pop
pop
dec
xchg
add
popf
pushf
fisttpl
cmpsb
scas
arpl
pop
addl
data16
es
xchg
xor
jo
mov
inc
outsl
pop
popa
and
sbb
sbb
test
int3
ficompl
pushf
dec
out
push
cmp
loopne
pop
fldl
stc
imul
adc
xchg
dec
and
loope
iret
adc
sbb
int
loopne
dec
cmp
xchg
mov
push
inc
out
xor
mov
iret
xchg
fucomip
hlt
and
fdivr
pop
and
jp
mov
les
inc
jp
mov
mov
adc
test
add
addb
cmp
call
sbb
pop
xchg
mov
mov
iret
jle
mov
fwait
addr16
sub
mov
or
out
or
xor
mov
or
inc
into
inc
sbb
dec
dec
mov
insl
rolb
xchg
movsl
add
fcomi
or
cmp
cmpb
cld
inc
push
scas
cmp
xor
cmp
stc
aam
cmp
stos
popf
inc
xchg
jbe
sbb
push
push
cs
and
imul
jl
fistl
xchg
pop
push
sub
xchg
fdivs
sbb
xchg
push
mov
adc
repz
or
lret
ja
mov
fisubl
imul
nop
test
mov
shlb
pop
insl
xchg
cmp
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
.byte
and
.byte
clc
in
div
cld
and
mov
mov
aas
int3
lods
xor
ficompl
xchg
loopne
test
mov
sub
push
mov
sbb
fisubl
sbb
shrb
subb
push
enter
leave
push
mov
or
std
push
cmovns
cmp
int
mov
das
sahf
mov
aas
mov
mov
dec
dec
aad
cwtl
lods
mov
jg
or
sbb
push
dec
mov
sahf
pop
out
out
xchg
jne
lcall
pop
fmull
fnstcw
int
loop
stos
or
sub
sbb
xor
adc
push
pop
jge
flds
jb
sbb
mov
shr
mov
cltd
mov
jge
mov
inc
adc
icebp
aaa
sbbb
jmp
mov
scas
repz
movsb
fiadds
ljmp
push
icebp
jle
push
outsl
cmp
fs
push
lret
pop
jb
jne
scas
or
sub
xor
out
xchg
scas
data16
add
and
xchg
dec
mov
rol
ret
ds
push
push
ljmp
repz
inc
int3
nop
test
push
push
push
repz
aam
pop
push
das
aas
pusha
insb
pushf
pop
in
mov
pop
jo
xor
pop
xor
mov
pop
adc
jno
dec
dec
and
scas
inc
int3
mov
and
jbe
es
in
xor
pop
lret
pop
fcom
andb
out
ret
push
popa
decb
or
test
and
jb
mov
adc
mov
into
pushf
int
push
dec
sbb
subl
xchg
add
mov
sbb
outsl
enter
movsb
ret
jmp
pause
sbbb
add
push
aas
sahf
and
add
jns
mov
lock
dec
sbb
lods
out
lcall
mov
mov
xchg
syscall
arpl
sarb
pushf
sarl
fwait
mov
sub
out
sub
push
sub
add
shlb
xor
pop
stos
xor
scas
data16
es
aaa
and
mov
cmpsl
dec
xor
mov
sub
push
movb
repz
mov
fimull
jnp
jns
inc
test
push
pusha
dec
xchg
inc
adc
pop
mov
cmp
or
mov
add
and
je
cli
xchg
std
cs
jne
mov
pop
leave
mov
out
dec
adc
cmpsl
pop
sbb
ss
insb
pop
inc
jne
jmp
xchg
xor
mov
ficompl
sbb
push
inc
test
jne
jecxz
sub
loop
lds
cmp
xlat
sub
sbb
movsb
add
adc
mov
jb
jbe
stos
adc
lret
dec
mov
jg
ret
mov
insl
xor
sbb
std
jnp
jg
scas
sub
mov
xor
in
lods
xchg
int3
jle
xchg
outsb
sbb
push
div
data16
outsb
dec
mov
pop
jne
test
adc
sarb
insl
sbbb
dec
outsb
scas
rclb
add
adc
out
dec
pusha
imul
jl
cmp
add
sub
ficompl
sbb
jae
inc
cltd
clc
push
repnz
enter
cli
jne
adc
sub
ja
cmp
inc
sub
popa
jp
push
pop
push
push
push
xchg
sti
xchg
in
jae
cmpsb
or
mov
paddq
adc
sbb
call
ret
fidivs
dec
cmp
jle
gs
mov
repnz
icebp
mul
nop
js
pop
sub
mov
sbb
push
imul
lea
mov
cmp
sbb
mov
sbb
xchg
or
dec
lea
stos
jmp
in
and
ret
mov
ds
mov
xor
xor
pop
stc
js
xchg
mov
addr16
or
fldcw
mov
mov
int3
cmp
push
mov
mov
or
loopne
lods
out
xorb
jns
leave
setg
std
rclb
mov
xlat
mov
adc
and
call
push
sub
xchg
jno
outsb
mov
jge
fnsave
sub
and
cwtl
inc
pop
pushf
scas
add
in
notb
mov
cmc
xchg
push
add
pop
ret
xlat
daa
in
pop
test
in
mov
pop
mov
sbb
in
sub
aad
aaa
out
xchg
aad
push
jge
mov
and
or
pop
sub
inc
lock
mov
test
out
cwtl
inc
jne
fs
shlb
call
sbb
and
imul
xchg
inc
stos
subl
sub
pop
jno
leave
pop
mov
mov
bound
loop
pop
pop
arpl
adc
stos
push
mov
mov
mov
es
std
fdivrs
sahf
fcompl
pop
sbb
sub
sti
lods
ret
cmp
pop
pop
xor
cmp
add
mov
shll
inc
dec
dec
lahf
fidivrl
cs
jecxz
scas
xchg
mov
mov
sub
dec
rorb
test
xchg
push
arpl
mov
xchg
sahf
les
out
xor
lahf
insb
sbb
out
mov
dec
pop
insb
pop
mov
mov
dec
cmp
daa
test
mov
test
dec
pop
faddl
les
xchg
call
mov
out
test
pop
lods
or
inc
xchg
xlat
jae
pushfw
push
test
adc
mov
pop
add
cmp
movsb
sub
out
inc
and
sub
daa
xor
inc
in
movsb
cmp
fldenv
xor
mov
cmp
scas
iret
popf
mov
jb
dec
mov
jge
pop
xchg
lcall
in
push
lcall
sbb
shr
hlt
pop
push
pushf
fdiv
mov
std
fidivrl
stos
out
mov
mov
into
imul
mov
out
push
push
pop
and
add
lret
sbb
mov
push
fmull
xchg
lods
jmp
cltd
push
lods
dec
stos
sbb
pop
ss
in
push
add
sarb
cmc
scas
mov
sub
test
das
cmpsl
insb
cmpl
push
lahf
test
ret
insb
dec
stos
divb
adc
lock
mov
aad
dec
jnp
cmp
imul
jecxz
rcll
xchg
pop
repz
pop
addl
ss
mov
add
das
subl
and
sub
mov
xchg
jns
add
shrb
int
shrl
mov
out
fstl
cmc
test
ret
cmc
add
jg
fwait
mov
or
sub
aas
repz
add
imull
jbe
cmp
and
ja
bound
insl
pushl
mov
call
outsb
pop
mul
mov
add
jo
xor
pop
outsb
push
dec
push
xchg
mov
clc
pop
xchg
pop
sbb
inc
mov
mov
mov
cmc
hlt
fs
ds
pop
ds
mov
ljmp
add
sahf
pushl
inc
lea
dec
inc
mov
xlat
sub
pop
mov
in
dec
fdivs
mov
add
subl
mov
push
pop
dec
roll
sbb
pushf
cmp
xor
aam
test
cs
sbb
int
scas
inc
inc
out
xchg
sub
mov
sub
xchg
sbb
push
dec
inc
cld
or
and
add
call
lret
popf
filds
cs
movsl
xchg
addps
xor
test
sbb
cld
pop
push
aam
mov
sti
mov
lods
push
xlat
mov
mov
jne
stos
ss
iret
gs
dec
lret
int
push
ror
push
jge
call
in
sarl
in
stc
xchg
addr16
mov
lahf
rcrl
rcll
cmp
mov
movsl
mov
push
test
sbb
sub
mov
fstpl
fcoml
dec
pop
add
or
bswap
push
mov
into
and
sarb
adc
push
lret
jl
or
outsb
push
fimuls
jge
fmul
sbb
loop
dec
cmp
ss
pop
add
or
clc
shl
imul
out
loope
pop
mov
mov
es
and
fisubrs
leave
jl
sbb
add
dec
jp
add
pop
clc
push
sahf
dec
loopne
jo
cmpsl
das
insl
sub
hlt
xchg
pop
scas
mov
loopne
in
repnz
imul
call
test
cmp
int3
pop
pop
mov
scas
aam
mov
in
in
stc
into
out
xchg
mov
xchg
pop
mov
data16
and
ret
fldenv
dec
inc
xchg
loopne
mov
bswap
jne
mov
mov
in
xor
in
sbb
cs
mov
mov
dec
iret
rorb
jge
fisubrl
add
cmp
subl
and
mov
inc
fstl
bound
das
loope
mov
add
out
xchg
pop
sarb
inc
adc
mov
dec
les
mov
jg
dec
push
xchg
or
dec
xchg
in
ss
movsb
pop
fiaddl
aam
out
icebp
push
inc
xor
outsb
adc
xchg
hlt
push
lods
mov
dec
int3
or
ja
mov
enter
loopne
fildll
pop
iret
sbb
inc
setp
jbe
or
pop
jmp
and
cmp
ljmp
jbe
js
jge
dec
mov
fwait
ljmp
jae
flds
lahf
inc
mov
dec
mov
jo
push
xor
popf
int3
inc
xchg
test
scas
call
jne
sahf
sbb
xor
mov
sub
dec
inc
or
mov
push
mov
jno
les
or
pop
fwait
lret
xchg
sub
lods
popa
pop
cmp
jg
dec
sbb
andl
in
jp
fldt
and
rcll
sbbl
or
dec
rcll
cmc
xchg
call
flds
lahf
es
inc
lds
mov
sbb
adc
dec
call
ret
repz
inc
nop
es
pop
add
xlat
mov
cmpsl
pusha
dec
lock
mov
stos
lahf
jecxz
out
cmpb
push
jp
push
pop
bound
xor
mov
pop
mov
es
rol
mov
dec
pextrw
sub
shr
sub
mov
movsb
cmpsb
xor
.byte
and
.byte
data16
push
mov
rcr
xchg
ds
xchg
adc
psubusw
pop
nop
lds
imul
jnp
jp
mov
in
sub
xor
ficomps
sbb
test
xor
ds
jns
push
adc
out
pop
xor
out
pop
pop
push
mov
mov
in
lods
jmp
shlb
adc
xchg
add
fadd
push
add
pop
outsl
iret
push
mov
dec
dec
andb
incl
call
adc
adc
pop
sbb
jne
nop
or
outsb
fldl2e
cmp
mov
das
xor
jge
iret
push
jne
insb
loopne
inc
into
push
jno
cmc
adc
push
adc
loope
mov
fwait
pop
in
pop
push
mov
cli
pop
daa
pusha
sbb
stos
aaa
sbb
inc
ja
repz
jne
jg
cmpsl
fs
xlat
sti
pop
mov
cmpsl
push
cmpsb
jb
icebp
lahf
xchg
in
cmp
nop
mov
in
mov
loope
xchg
fidivrs
inc
mov
jp
sbb
mov
hlt
mov
pop
pushf
xlat
inc
scas
add
mov
mov
ret
shlb
jmp
mov
jmp
lea
loope
sbb
mov
out
mov
jg
shrl
das
fcmove
pop
sub
sub
xor
or
inc
xchg
mov
mov
sub
mov
jb
scas
mov
imul
test
xor
push
iret
sti
orl
xchg
arpl
xlat
or
pop
mov
xor
add
inc
sub
icebp
mov
jecxz
negl
pop
js
gs
bound
sub
or
lahf
cmp
cmpsl
cmc
imul
or
dec
xor
adc
call
out
clc
inc
push
xchg
inc
jle
pop
push
ja
dec
or
es
pushl
cmp
sub
inc
stc
ret
mov
stos
ds
xchg
dec
adc
or
jb
xchg
test
push
imul
sbb
out
inc
dec
adc
les
leave
adc
sarl
sbb
dec
out
dec
jns
pusha
sti
xor
adc
mov
inc
add
sbb
add
mov
ljmp
lods
jno
cmp
stc
stos
test
fwait
shl
add
in
or
and
dec
mov
bound
pop
ret
into
enter
pop
ss
pop
pop
outsb
lods
rorb
and
mov
lea
repnz
cmpsb
es
outsl
mov
dec
bound
lcall
jo
in
mov
inc
popf
mov
out
sub
xchg
fs
push
ja,pt
lds
inc
repz
stos
jp
push
cmpsb
stos
dec
mov
roll
into
xchg
pop
mov
jb
push
sahf
push
sahf
push
sbb
and
rolb
pop
add
arpl
cs
jmp
into
lds
add
pushf
pop
aas
imull
and
pop
pop
inc
jo
mov
xor
jg
pop
jae
pop
jb
jnp
mov
fwait
inc
pop
lahf
cwtl
pusha
jo
pop
inc
mov
inc
jecxz
add
mov
cmp
inc
dec
fwait
stos
adcl
int
in
push
or
cmp
jne
add
leave
jecxz
cmc
hlt
loopne
lock
out
idivl
jb
popa
jp
mov
loop
pop
adc
xor
aam
jge
popf
cmp
pop
jns
loop
adc
jbe
sbb
out
push
push
mov
out
pop
inc
mov
inc
stos
push
gs
scas
nop
repnz
subb
push
repz
inc
mov
sub
sub
xchg
into
add
jo
cmp
dec
adc
cli
push
jae
insl
lcall
push
insb
or
lods
fiaddl
or
or
and
mov
cmc
push
xchg
xor
inc
mov
cli
sub
push
add
xor
mov
adc
mov
mov
cld
jge
cli
sbb
iret
imul
fnstcw
scas
sarb
xchg
jns
sbb
inc
sub
push
pop
adcb
bound
ds
push
xchg
cmp
loopne
jle
and
and
loop
mov
push
outsl
movsbl
mov
pop
lods
shrb
and
xor
arpl
leave
xchg
mov
loopne
jle
lods
movsl
inc
imul
out
std
in
out
lahf
cltd
popa
jmp
push
nop
enter
andb
mov
fildll
jle
xchg
sbb
addr16
cmpsl
int3
je
hlt
leave
adc
and
adc
ds
repnz
ret
addl
adc
test
cmp
xchg
inc
mov
bound
std
subl
fistl
adc
push
sbb
sbb
push
fsubs
xchg
insl
int3
sbb
jg
or
es
push
fcmovnb
out
pop
pop
leave
fsubrl
adc
ljmp
dec
cwtl
sbb
mov
jno
ljmp
jg
jo
sbb
pop
js
mov
dec
lret
js
add
fs
andl
mov
frstor
mov
push
xchg
cmp
cli
gs
xchg
or
fisubrs
adc
push
adc
lret
loop
inc
stc
data16
ds
pushf
inc
test
or
cwtl
ficoml
popf
xorl
xchg
adc
mov
mov
aad
enter
jns
add
xchg
xor
out
add
mov
in
rcrl
icebp
pop
adc
jle
decl
add
loopne
cmpsb
in
cs
push
loop
mov
or
es
mov
or
stos
inc
cld
movsb
sub
fwait
xchg
lret
cmp
jo
xchg
push
add
sbb
mov
and
xlat
pop
cmp
push
push
mov
outsb
inc
adc
es
out
jle
add
into
cli
xchg
jge
test
jmp
push
jl
lds
ds
push
cwtl
xchg
in
mov
popa
pushf
cli
js
negb
ficomps
enter
cmpsl
lods
sti
mov
jo
movsl
push
mov
push
ficoml
push
lock
push
sbbl
andb
popf
and
outsb
mov
popl
out
fadd
js
inc
mov
bound
pushf
insl
xor
jnp
push
sub
mov
push
xorb
pop
mov
jl
cmpsl
mov
xchg
fistpll
fwait
jb
mov
pusha
xor
mov
mov
popl
nop
les
or
cwtl
clc
jne
cltd
sub
pushf
in
sub
ds
outsl
inc
in
cmp
or
hlt
dec
rolb
pop
pop
int
dec
ds
cmc
xor
push
mov
loopne
cmp
xor
fdiv
xchg
mov
mov
clc
je
fsubl
xor
aad
xor
mov
shll
sarb
sub
sub
xchg
push
mov
mov
out
push
cmp
stc
inc
mulb
outsl
cmpb
xchg
scas
cltd
in
mov
pop
rclb
push
scas
les
es
loopne
inc
mov
dec
inc
jecxz
bound
loop
leave
mov
and
loope
cmp
imul
scas
adc
or
mov
es
in
js
and
and
inc
jecxz
jle
or
sub
popf
mov
sar
lret
push
jns
adc
dec
lds
inc
cltd
sbb
add
sbb
dec
jo
test
inc
fwait
add
fisttpll
or
mov
insl
and
int
or
in
clc
sbb
pop
jns
xchg
pop
inc
push
or
add
and
repnz
imulb
sub
jnp
dec
rorb
adc
inc
out
sarl
and
and
mov
into
mov
imul
adc
test
mov
adc
iret
in
in
sub
mov
nop
inc
cmp
inc
sbb
ss
lcall
jno
push
mov
mov
sub
lea
inc
cmpsb
test
cmpsb
ret
or
xchg
nop
cwtl
subl
aas
jecxz
pushf
push
cmp
jle
xchg
mov
dec
outsl
mov
rdpmc
rclb
xchg
or
ss
cmpsl
inc
ret
movsl
adc
notl
adc
das
pushf
fisttps
sbb
mov
and
push
xchg
sub
faddp
filds
lret
add
mov
sbb
cs
pop
xor
push
and
enter
mov
popf
into
mov
lds
mov
inc
push
das
push
sbb
in
test
adc
cmp
rorb
aad
and
lods
insb
addb
imul
cs
mov
adc
in
mov
adc
inc
addr16
scas
loope
push
xor
test
scas
dec
jno
or
dec
dec
dec
testb
iret
subb
call
jmp
shll
out
or
jbe
roll
lods
xchg
or
fsubs
or
mov
jbe
mov
int3
jb
adc
jne
out
mov
call
divb
arpl
ja
addb
lods
inc
loope
xor
cmpsl
xor
adc
mov
inc
cwtl
pop
dec
outsb
or
cwtl
notl
push
test
mov
adc
decl
shll
aaa
cld
andb
inc
addb
sub
mov
xor
mov
dec
pop
dec
pop
call
test
dec
jl
dec
lea
sarb
ljmp
insl
mov
mov
shll
cmp
cmp
stos
mov
pop
roll
stos
push
sarb
pop
pop
push
ficoml
cwtl
arpl
lods
loopne
mov
in
lahf
mov
cli
insb
push
mov
pop
idivl
neg
or
mov
imul
test
mov
js
lods
negb
sbbl
inc
enter
push
add
repnz
push
mov
ljmp
mov
cmp
and
test
out
cmc
xchg
popf
jp
into
push
mov
jns
ljmp
test
inc
arpl
pop
add
mov
test
inc
stos
add
xor
loopne
jmp
mov
mov
rcll
adc
adc
popf
aad
test
insl
push
sub
pop
loopne
jbe
scas
in
in
mov
enter
out
push
mov
in
sub
xlat
pop
jo
fs
cli
test
cmp
insl
and
nop
dec
jp
fptan
cltd
stc
stos
arpl
inc
das
loop
jnp
gs
dec
cmp
xor
mov
inc
mov
push
mov
mov
hlt
jmp
sub
xchg
or
pusha
or
outsl
jle
popf
push
pop
sbb
sbb
inc
and
negb
and
xor
mov
jb
addl
cmpsl
call
iret
aas
lds
mov
leave
flds
sub
fldt
or
stos
jb
stos
xor
call
aam
es
dec
pop
push
jp
adc
mov
inc
jae
subl
std
leave
xchg
jbe
test
sbbl
mov
push
push
inc
pop
mov
jecxz
mov
pop
xchg
ja
mov
lret
inc
ret
cmp
cmp
ds
sub
shrb
or
jo
jns
jge
pop
xchg
jne
cwtl
pop
imul
mov
scas
orb
xchg
out
add
insb
sbb
dec
sti
rorb
lds
xchg
movsl
mov
push
cmpsl
in
ss
xlat
mov
jle
cmpsl
addb
inc
lods
mov
xor
scas
dec
int
ret
inc
pop
out
push
ss
jbe
shlb
sti
cmp
jne
inc
or
dec
inc
mov
nop
fdivrl
xor
ja
xlat
add
dec
sahf
lcall
lret
aam
aam
push
mov
shrb
outsl
push
cmpsb
sbb
scas
dec
pop
int
mov
rorl
mov
inc
loope
stos
mov
lea
lock
mov
add
fnstcw
popl
jno
sahf
inc
lock
mov
pop
sbb
aam
aam
pop
cli
cmpsb
imul
jge
adc
movsl
int3
gs
or
push
jno
mov
mov
mov
add
sub
lods
jae
xchg
mov
sub
stos
jae
rorb
dec
add
outsl
mov
and
in
xchg
mov
push
push
ficoms
outsb
shrl
inc
mov
lods
cmc
sub
xchg
data16
dec
push
push
adc
icebp
xchg
inc
push
rolb
xor
leave
js
pop
lahf
lock
pop
or
sub
and
adc
std
dec
ds
and
outsl
test
xchg
aas
stos
rclb
lret
in
jne
std
cli
rorl
or
fstl
xchg
in
sbb
mov
xor
call
shl
aaa
jo
cmp
inc
pop
and
jne
stos
lods
jg
hlt
ret
jbe
mov
ljmp
jg
mov
push
ja
divl
and
rolb
loope
scas
pop
fidivrl
scas
cld
scas
add
cld
repnz
pop
sub
cmp
xor
es
ret
push
dec
jnp
in
fmull
test
scas
mov
jmp
or
js
mov
xchg
scas
xor
test
out
xchg
sbb
dec
sbb
icebp
lcall
shl
aam
push
icebp
fildl
inc
cmc
adc
xchg
mov
cwtl
adc
data16
mov
push
jnp
scas
mov
adc
push
sub
adc
add
or
sub
sub
xchg
pop
mov
ret
mov
arpl
inc
xor
xor
inc
xor
cld
dec
or
jae
pop
enter
sbb
fldl
adc
jge
hlt
subl
push
lds
js
test
lcall
xchg
inc
lret
arpl
cmp
jno
sti
dec
loope
push
out
hlt
iret
push
stos
inc
mov
popa
bound
push
cwtl
js
inc
push
and
movsl
nop
dec
add
scas
mov
push
jmp
lret
sahf
test
call
cld
dec
mov
stos
filds
std
stos
rcrb
aad
xor
and
push
es
call
js
mov
lcall
pop
roll
or
ja
sub
cli
xchg
jno
xor
and
jl
loop
push
pop
adc
scas
sbb
pop
push
cli
pminub
lock
and
ret
xchg
dec
int3
mov
sbb
or
mov
orl
jge
and
and
jl
ret
testl
lock
daa
sub
and
mov
sub
jle
mov
mov
jo
lret
testl
sti
out
testl
mov
std
dec
out
pop
inc
add
mov
pop
push
pop
je
scas
add
push
ds
push
mov
iret
fwait
sar
jecxz
mov
mov
adc
mov
mov
enter
mov
mov
push
add
and
cmpsb
sbb
test
push
sub
cmp
fwait
cmpsb
xor
sbb
stc
testl
mov
adc
jmp
popa
jmp
push
aaa
outsb
mov
mov
push
mov
cmp
mov
add
shrl
outsl
inc
rolb
stos
xchg
daa
sti
sbb
fwait
dec
xlat
jno
push
lea
inc
in
idivl
shr
divl
test
dec
sahf
add
ret
dec
addr16
sbb
int3
inc
mov
sbbl
ljmp
stc
jae
rorl
fbld
shrb
sub
mov
push
sbb
fcoms
aaa
lret
push
pop
in
dec
mov
out
xor
add
xchg
mov
andl
jmp
enter
mov
repnz
mov
dec
gs
test
mov
mov
jns
push
cmp
jge
or
jmp
and
iret
lock
pop
sbb
jle
sbb
out
insl
xchg
xor
mov
iret
adc
ret
rolb
and
or
shlb
push
sub
push
adc
push
xor
fnstsw
in
cltd
pop
sahf
adc
in
orl
mov
lret
test
add
sbb
push
xchg
insb
push
sbbb
add
es
mov
std
fucomp
int
ret
dec
les
sub
or
test
cmp
lock
or
lods
and
rclb
xor
push
out
stos
mov
xchg
shlb
int
mov
add
push
pop
rclb
jl
hlt
popf
repnz
scas
mov
sti
push
xchg
jge
sub
jbe
sti
and
inc
data16
jmp
and
repnz
movsb
inc
lock
hlt
call
lods
and
sub
sub
popa
cltd
add
cmp
or
inc
testl
lock
and
adc
adc
jle
adc
push
mov
imul
jae
mov
aaa
mov
pop
dec
fisttpl
mov
jno
sbbb
lret
jle
fldcw
test
test
bound
ss
in
dec
sbb
sarl
dec
nop
mov
xor
enter
es
outsb
mov
pop
add
cmp
popf
jmp
xchg
sub
rclb
mov
dec
push
shrl
cmpsl
xor
inc
imul
dec
sub
scas
bound
inc
mov
fdivrs
rorb
ss
in
mov
add
fmuls
dec
icebp
sub
bound
cmovns
or
jo
mov
fisubs
sub
fwait
jl
add
dec
mov
add
shlb
out
xchg
or
call
daa
insl
shlb
mov
cs
mov
idivl
jnp
leave
inc
inc
in
insl
xor
xchg
xor
icebp
pop
mov
cmp
xor
in
mov
fcoms
fstpl
push
or
mov
mov
stos
out
push
inc
cld
add
cmp
jo
sub
jmp
mov
aam
lea
scas
movsb
mov
mov
cmc
adc
xor
sbb
pop
enter
shll
daa
adc
outsl
mov
rclw
outsb
call
dec
loope
mov
stos
pop
sbb
push
mov
add
jge
gs
adc
sub
pop
daa
lods
das
cmc
popa
scas
out
add
cmp
std
dec
adc
jl
lods
out
sub
xor
leave
or
push
xor
jno
cs
popa
push
xlat
pop
into
inc
adc
push
addr16
jbe
scas
movsl
mov
cmpsl
cld
outsl
cmp
mov
xchg
dec
addl
aam
sub
mov
ficompl
mov
aas
into
lock
or
xchg
mov
mov
dec
subb
loope
popa
shlb
inc
in
popa
or
movsb
push
jmp
mov
in
fwait
xchg
cmpsl
ss
sbb
jae
push
push
lret
push
dec
xor
andl
repz
and
in
pusha
ds
mov
adc
mov
or
add
jle
mov
outsb
inc
inc
in
mov
lret
jl
jb
gs
lods
dec
push
sbbb
or
cmp
xlat
lods
push
inc
lret
jecxz
lds
icebp
and
or
mov
int3
mov
pop
outsb
mov
fstp
sti
rcr
and
enter
std
leave
adc
movsl
cmc
jbe
cmpsl
jns
cltd
mov
sbb
out
dec
dec
xor
and
adc
add
bound
jmp
mov
sbb
mov
xchg
jbe
push
xor
pusha
outsl
and
push
into
sub
jnp
rorb
add
pop
sub
lret
cmp
inc
dec
cmp
dec
sub
sub
xor
lods
mov
lcall
or
call
idiv
fidivs
adc
outsb
add
popa
pop
imul
jmp
pop
data16
cmc
stos
sub
mov
dec
mov
lods
add
push
ljmp
aam
jmp
sub
in
test
loop
or
aam
push
mov
fsub
gs
pop
dec
fs
fs
mov
sarb
cmp
lcall
mov
adc
sbb
dec
in
aam
cwtl
mov
dec
push
scas
lret
daa
sub
push
or
push
lret
add
les
cmpb
ljmp
addl
mov
subb
xor
imul
test
push
int
cmp
add
mov
lea
add
xchg
dec
cs
or
dec
xchg
inc
insb
movsb
ljmp
int
jns
std
xchg
jp
int
jb
sbb
add
mull
ds
jbe
ss
dec
cmp
mov
in
imul
pushf
mov
jo
cmpsl
or
push
fimuls
faddl
faddp
or
fmuls
aad
and
adc
xor
fs
imul
frstor
in
fiaddl
mov
out
dec
dec
subb
push
dec
push
scas
scas
mov
rcrb
or
sub
bound
push
loopne
mov
lret
mov
leave
jmp
xor
jb
popf
push
roll
ret
sarl
sbb
mov
clc
cmp
and
ss
pop
loop
adc
arpl
outsb
ds
or
jle
mov
insl
mov
cmp
or
pop
les
pop
sahf
in
jecxz
mov
sbb
lcall
and
out
pop
mov
mov
dec
sub
lcall
xchg
aam
jb
outsl
dec
inc
or
dec
push
push
fidivrs
pop
pop
out
cmp
lea
or
icebp
aad
scas
dec
or
ja
cli
inc
push
inc
nop
mov
mov
loope
repz
rcrb
mov
mov
xchg
pusha
lret
call
in
adcl
jecxz
clc
push
jg
xchg
pop
aad
repnz
test
inc
movl
pop
repnz
adc
xchg
imul
ss
adc
cmp
xor
push
aas
imul
adc
dec
loop
pop
or
push
sub
out
arpl
in
mov
mov
shrl
test
dec
sub
jns
mov
sti
mov
push
inc
mov
subl
inc
shlb
adc
pop
mov
test
pop
insl
sub
and
scas
rcrl
js
arpl
aas
cld
xchg
fldcw
push
jmp
adc
jo
jg
icebp
aaa
hlt
into
lds
adc
in
sahf
shll
ficoms
inc
stos
test
in
in
aam
push
loop
jne
mov
sbb
mov
rcrl
inc
jmp
fs
cld
push
jmp
jno
mov
fcmovnb
jo
test
pop
dec
cld
stos
inc
mov
jp
ret
cmp
mov
ret
movsb
in
gs
and
mov
mov
enter
and
pushw
adc
pop
mov
mov
lods
rclb
rcll
add
pop
push
xor
jmp
xor
inc
add
mov
dec
mov
lods
inc
mov
int3
mov
or
fwait
xchg
mov
aad
pop
add
pop
fistl
or
je
testl
shrb
lret
and
cmc
out
fdiv
xor
into
fwait
jnp
inc
pop
mov
rorl
imul
pop
lahf
aad
popf
fnstcw
adc
sub
pop
xor
sbb
jo
mov
fisttps
dec
out
repz
ljmp
mov
clc
xchg
mov
push
repz
inc
jae
xor
shrl
outsl
mov
test
mov
cmpsb
loop
call
cld
cmp
es
add
fsubrl
push
scas
mov
fsubrs
mov
cs
mov
out
orl
cmp
lds
xchg
int3
test
mov
stc
mov
mov
fwait
arpl
dec
lahf
sub
imul
pop
cs
mov
or
jnp
cmp
lods
jl
outsl
mov
arpl
movl
cli
pop
pop
mov
mov
loop
jno
dec
and
into
fbld
les
pop
int
clc
mov
imulb
repz
cld
jle
push
sti
push
data16
inc
orl
adc
jl
sbb
and
mov
add
xchg
movsl
inc
ret
push
sahf
fnstsw
xor
hlt
leave
fwait
inc
jle
fistps
lock
push
cmp
mov
out
inc
xchg
popf
add
lret
sub
je
dec
cmp
dec
imul
mov
sub
out
or
mov
dec
cmpsb
sbb
leave
pop
or
ss
dec
les
push
stc
push
repz
insb
lret
cwtl
mov
lahf
xchg
xor
push
push
add
mov
lcall
mov
pop
adc
insb
int3
test
and
lcall
je
iret
cmp
inc
jl
adc
lahf
clc
sub
movl
push
xchg
cmp
adc
cmpsb
ljmp
out
push
push
inc
mov
sub
clc
out
push
mov
add
push
jae
lods
dec
mov
rol
cmp
or
mov
sbb
jle
push
mov
repz
cwtl
dec
pop
fdivrl
and
pop
mov
pop
int
xchg
aaa
mov
loope
cmpsb
inc
pop
add
imul
insb
push
jbe
test
call
sub
popa
dec
jno
lods
or
jbe
out
dec
hlt
cs
aad
fmull
xlat
push
mov
fcompl
inc
jo
xchg
inc
and
cli
aas
pop
sbb
mov
mov
mov
mov
das
lea
push
outsl
daa
sbb
mov
iret
shll
mov
pop
ja
pop
xchg
int
jno
mov
jb
dec
adc
jne
movsb
ret
push
and
mov
push
les
in
mov
std
add
ret
movsb
add
cmpsl
inc
pop
ret
adc
and
lret
ret
insl
das
xchg
popf
xor
or
movsb
adc
cli
jl
test
daa
popf
add
cltd
je
cmpsl
mov
dec
jge
and
and
pop
and
adc
clc
popa
add
or
mov
mov
imul
faddl
fsubr
xchg
sbb
cld
xor
mov
cmp
push
xor
mov
sbb
sbb
adc
test
repz
fbld
jmp
xor
mov
test
mov
xchg
inc
cmp
and
shld
imul
insl
mov
out
js,pn
pop
mov
adc
cli
pop
lds
repz
adc
adc
add
es
popf
xchg
fucomi
cltd
insb
push
mov
xor
xlat
pop
inc
add
in
lods
dec
insl
inc
lods
arpl
adcl
sub
cwtl
mov
push
ljmp
inc
push
adc
dec
lds
mov
scas
imul
mov
stos
out
popl
lahf
cmp
cmp
or
pop
push
sub
test
popf
pop
incb
jbe
dec
stos
cmp
pusha
mov
out
stos
jecxz
lock
popa
push
xor
adc
sub
or
lods
mov
mov
movsl
outsb
cli
mov
mov
fidivrl
dec
fsubrl
shlb
push
xchg
sub
inc
test
xorb
pop
pop
fidivs
xor
test
aam
dec
loope
or
xor
out
xlat
sub
mov
test
dec
out
clc
mov
out
leave
test
addb
daa
or
jg
pop
mov
ljmp
popa
jle
jmp
xchg
inc
fisubl
vunpckhps
mov
dec
mov
in
jecxz
cmpsl
inc
mov
shlb
push
dec
je
jg
mov
loop
imul
js
sbb
mov
xor
dec
adc
cli
js
fsubrl
shlb
idivb
jno
rorb
lcall
dec
inc
dec
push
xor
sbb
inc
jecxz
movsl
ret
pop
lock
fldl
gs
xor
pop
icebp
out
jl
popa
mov
inc
pop
stc
pusha
fisubrs
fxch
sbb
stos
cmp
jae
sub
push
cmp
and
fnsave
sbb
and
jb
add
mov
cmpsb
loop
js
mov
lahf
inc
dec
xor
xchg
cmp
xchg
fwait
and
fsub
or
and
movl
and
test
call
jge
push
xlat
vandnpd
out
inc
jl
in
repnz
lret
out
pop
bnd
pop
jmp
std
aas
scas
in
outsb
mov
cmpsb
aaa
sbb
out
leave
jmp
ud1
mov
mov
fimull
and
pop
jl
sbb
cld
fldcw
mov
icebp
lds
inc
mov
cltd
scas
xlat
scas
fsts
sub
ds
xchg
mov
and
insl
jbe
das
sub
in
pop
mov
shrb
fldcw
xor
mov
mov
mov
addb
js
dec
mov
xchg
xchg
es
out
out
test
push
mov
push
jge
gs
mov
out
ss
shll
mov
mov
shll
xorl
stos
mov
add
xchg
mov
xchg
test
jnp
lcall
sub
jne
rcrb
push
pop
pushf
mov
stos
addl
add
sub
lods
inc
cmpsl
pop
addr16
rorb
fiaddl
je
mov
mov
add
add
xchg
push
xchg
cltd
mov
out
ficoms
inc
push
push
inc
pop
and
jg
cli
dec
movsl
fisubl
xchg
ret
mov
jle
xchg
and
jp
xorb
sub
in
sahf
pop
mov
and
xlat
scas
test
jns
mov
test
movsb
cmpsb
or
lds
arpl
sub
and
das
sub
add
icebp
lea
jmp
pop
stos
aaa
popf
push
icebp
fldenv
fwait
or
sahf
scas
and
and
mov
dec
repz
or
cli
mov
imul
cmp
notb
rolb
sbb
jg
gs
push
jecxz
adc
insb
insb
in
or
cmp
and
bnd
push
add
mov
in
loope
push
cmc
rorb
lret
stos
outsl
add
adc
mov
push
lock
gs
adc
mov
sbb
sub
push
sbb
fs
xchg
imul
xchg
cld
mov
sub
mov
pusha
pop
cmpsl
in
dec
in
push
pop
mov
cld
and
or
cltd
mov
test
push
add
retw
pushf
pop
negb
mov
mov
enter
jne
lret
shlb
cmp
lret
mov
clc
mov
adc
fidivs
xchg
dec
pusha
lea
loope
scas
mov
push
leave
int3
jno
xchg
xor
dec
insl
ret
loopne
loop
ds
sub
sahf
addr16
fisttpl
testl
cmpsb
aad
imul
shl
pop
aas
fldt
xchg
in
in
cmpsl
add
ljmp
push
sub
jle
xchg
pushf
jge,pn
and
stos
ret
scas
sub
paddsb
and
cmc
out
sbb
in
mov
je
add
sbb
adc
sub
lods
inc
jb
lretw
xchg
inc
add
mov
and
xor
lock
stc
jecxz
mov
fbld
mov
jmp
xchg
test
roll
lcall
jmp
mov
fcmovnu
add
xor
sbb
in
pop
push
xor
and
mov
outsl
sahf
jo
lret
rorl
outsl
sbb
xchg
mov
stos
enter
and
mov
popf
mov
pop
call
je
mov
xorb
in
xchg
mov
cmp
cmp
pushf
mov
cmp
fldenv
push
insl
xchg
push
xchg
ss
mov
lcall
xchg
jns
inc
test
repnz
mov
xchg
cwtl
fiaddl
adc
sub
or
arpl
test
mov
push
cmp
inc
mov
xchg
sub
test
popl
adc
jns
xchg
inc
jb
inc
mov
xchg
xchg
xor
sbb
jmp
cmp
loop
and
cmp
push
pop
cli
clc
fsubl
lea
mov
mov
into
sub
adc
icebp
lock
vmovsd
xor
hlt
mov
add
cmpsl
call
cmc
xor
das
lret
lret
in
xchg
xlat
shlb
es
testb
mov
adc
movsl
sti
inc
mov
inc
jae
pop
out
mov
sbb
xchg
out
pop
loopne
int3
jge
movsl
fisttpll
aaa
cwtl
ss
leave
inc
mov
cmc
imul
mov
imul
rol
jae
push
ds
ds
cmp
leave
mov
xor
stc
or
outsb
in
ss
or
aaa
scas
in
adc
aaa
jo
std
add
rclb
push
aaa
int3
and
mov
scas
mov
mov
mov
jne
cwtl
xchg
mov
movsb
outsl
xor
fnstsw
das
adc
fbld
adc
jno
in
imul
pop
mov
sbb
loop
or
test
in
mov
les
jl
inc
ret
lret
fisttpl
push
dec
cmpsb
pop
inc
xor
jmp
dec
daa
rcr
icebp
jmp
vdivsd
add
push
adc
pop
idivl
xor
pop
xchg
cli
cmpsl
sbb
pop
add
lret
popa
sbbb
xchg
fxch
test
mov
or
enter
mov
sbb
pop
mov
sub
adc
mov
aam
fistl
movsb
push
add
movsb
mov
jb
push
jmp
pop
inc
mov
cmc
jmp
imul
scas
es
cmp
rcl
aaa
fisubs
sub
xchg
add
xchg
out
mov
inc
addr16
jo
hlt
add
lock
js
pop
mov
fwait
inc
add
push
and
mov
push
dec
inc
cltd
add
ja
xor
std
mov
leave
pop
fs
hlt
mov
push
neg
push
push
jl
push
and
push
push
inc
xor
loope
add
add
mov
jmp
inc
das
jnp
sti
or
xor
push
icebp
jmp
jnp
and
mov
dec
jge
neg
or
loopne
and
sub
cs
imul
das
es
cli
push
cmpsb
pop
mov
in
dec
aaa
lods
mov
addr16
adc
mov
xchg
jno
fnstcw
xchg
idivb
outsl
dec
cwtl
data16
cmp
cmp
div
jmp
stos
pop
fs
mov
data16
cmp
lcall
or
adc
nop
loopne
test
das
addr16
sub
stc
mov
mov
xchg
outsb
cmp
sbbl
testb
pusha
shrl
xchg
jg
fmul
or
adc
mov
add
rep
in
jge
push
test
cld
fsubs
mov
dec
iret
out
daa
push
fwait
jbe
mov
in
jbe
mov
rorb
mov
cwtl
jge
lods
push
dec
ja
test
or
jno
mov
je
ss
loopne
adc
push
inc
insb
add
mov
jae
dec
subb
or
out
xchg
pushf
rcrl
push
mov
stos
mov
das
out
fildll
fistpl
dec
jne
xor
outsb
add
xchg
lahf
sub
mov
dec
dec
adcl
adc
lcall
jp
in
dec
cmpsl
iret
mov
lock
mov
mov
and
inc
outsb
movsl
lret
lods
pop
sub
push
in
jae
shlb
adc
jno
bt
movsl
pop
das
dec
rcrl
pop
jg
mov
shll
mov
xchg
sbb
cmpsb
inc
or
iret
or
shll
arpl
sbb
das
push
sub
mov
movsb
std
aad
stc
fcomi
cmp
inc
rorl
call
mov
imul
jge
in
mov
cmpsl
cmp
pusha
stos
mov
adc
icebp
mov
xor
pop
insb
ret
sub
mov
lock
adc
add
jl
push
fucomip
imul
jnp
sbb
jb
pop
and
jge
dec
adc
inc
stc
xor
lcall
xor
mov
rcll
mov
cld
mov
jb
loopne
js
cltd
icebp
rcl
filds
sbb
push
loopne
push
aad
test
sub
loope
xchg
cmp
adc
pop
lcall
pop
stos
pop
and
mov
jecxz
mov
adc
mov
les
das
adc
test
cmp
cmpsl
cmc
loope
fsub
cmp
ds
or
imul
rcr
mov
fdivl
jnp
iret
rcrb
sbb
dec
sub
subb
popa
rep
test
add
xchg
in
jp
xor
push
xor
xor
add
inc
dec
test
adc
adc
xor
inc
push
js
jl
jns
dec
imul
aam
cmp
imul
push
xor
push
nop
inc
stc
add
iret
jl
or
cmc
mov
push
and
xor
pop
ret
sar
int
push
fldt
inc
shrl
push
jge
or
jne
hlt
inc
adc
add
adc
and
sub
cmp
inc
dec
jb
into
jg
jmp
dec
push
lcall
stos
and
jmp
loopne
pop
repz
pop
xchg
les
add
loopne
xchg
sbbb
andl
sbb
xor
scas
rorb
pop
jne
xchg
push
lea
divl
hlt
outsl
and
or
sbb
inc
daa
inc
in
es
dec
mov
mov
or
ror
loop
leave
subb
mov
fsubrp
add
sub
ss
sbb
in
adc
les
frstor
jae
das
dec
xlat
mov
into
dec
aaa
into
xchg
outsb
div
loope
mov
sub
movsl
xchg
imul
adc
push
loop
cmpsl
pop
xchg
invd
faddl
adc
std
adc
ret
xchg
sbbl
mov
imulb
js
rorl
hlt
and
mov
adc
inc
imul
lahf
out
loop
lahf
clc
mov
xor
and
sbbb
je,pn
sub
and
inc
mov
push
jbe
mov
bound
es
test
mov
ret
fisttps
push
cmpsl
mov
in
nop
mov
es
and
addr16
outsl
cmp
xchg
pop
arpl
test
cmp
pop
addr16
imulb
inc
insb
ret
ja
push
cmp
sarb
mov
popa
fists
stc
jge
call
es
xchg
insb
push
push
pushl
inc
jmp
divb
ds
sbb
dec
das
mul
mov
lret
and
fmuls
and
daa
inc
xchg
popf
push
pop
adcb
das
movsl
xchg
or
jl
adc
xchg
add
les
mov
je
sub
push
js
mov
or
in
xlat
jbe
les
lds
mov
negl
mov
repz
test
mov
icebp
lret
lds
int3
test
fldcw
popa
xchg
in
xor
mov
mov
add
xor
aad
sbb
int
bt
es
lock
push
inc
gs
mov
mov
loope
lea
or
cmp
popa
in
fdiv
mov
xor
xor
cmc
add
hlt
lock
add
xchg
sub
mov
cltd
mov
flds
insb
pushf
stos
gs
xchg
fcoml
xlat
adc
push
shll
push
sbb
lock
shlb
iret
add
add
std
mov
in
fdivl
les
imul
push
sub
icebp
rorl
cwtl
pop
mov
mov
imul
and
dec
sbb
fildll
and
sbb
imul
cltd
rcr
pop
sbb
add
jle
mov
outsb
rclb
mov
std
adc
ret
xchg
or
enter
leave
xchg
gs
pop
mov
aad
out
mov
scas
pop
aaa
jne
mov
cs
je
shrl
popa
in
jno
out
hlt
xor
mov
mov
mov
insb
ja
and
inc
jb
out
aam
rol
fimuls
and
ds
faddl
cmp
and
stc
stos
fdivrp
push
pop
jae
imul
loop
in
lock
cmp
xchg
insl
mov
fst
out
rorl
fildll
aad
aas
cmpsl
add
pop
fnstsw
bound
out
jl
shll
idivl
in
add
mov
push
push
mov
repnz
shrb
adc
movsl
mov
and
and
mov
mov
pop
pop
jmp
sub
xor
mov
pop
add
pusha
dec
mov
test
inc
stc
cltd
outsb
addr16
nop
mov
xchg
jle
out
js
inc
pop
ret
or
xor
dec
cmp
add
ret
sbb
aam
scas
and
adc
sub
push
adc
pop
in
xchg
push
add
fwait
mov
sbb
jnp
sub
lret
dec
or
xchg
fwait
xlat
xchg
push
xor
sub
stos
mov
adc
cltd
rclb
cmp
loopne
pushf
int3
dec
jge
pushf
jno
push
cltd
cmp
xlat
xchg
out
arpl
into
jne
push
inc
add
ljmp
in
push
sbb
leave
loope
rcl
adc
sbb
add
push
push
scas
hlt
cld
pop
in
adc
std
shl
sti
mov
aam
mov
les
ljmp
fcompl
push
enter
mov
mov
cmp
cltd
sahf
pop
subl
les
jmp
out
xchg
loop
pop
xchg
cld
sbb
inc
test
mov
daa
lock
mov
and
insb
test
dec
xor
mov
lret
pushf
or
xchg
lahf
pop
bound
pop
dec
xchg
pop
adc
xor
cmpsl
jne
sbbb
es
stos
mov
xchg
out
jae
jle
push
jecxz
sub
pusha
xchg
xchg
mov
lret
test
push
aaa
pushf
pusha
sub
mov
add
fisubl
jl
inc
lea
ja
loope
cmp
sub
mov
addr16
mov
mov
jge
pop
jb
fsubl
sbb
mov
inc
outsb
mov
adc
add
movsl
icebp
pop
divl
inc
pop
inc
int
xchg
pop
imul
mov
arpl
aas
lcall
ret
lret
cmpl
sub
outsl
mov
sahf
jns
mov
out
sahf
sub
clc
pop
iret
sbb
je
xor
fwait
and
mov
stos
out
mov
std
decl
dec
xchg
pop
xchg
push
push
fs
loopne
pop
and
push
test
pop
adc
xchg
sbb
push
sub
lcall
push
out
repnz
mov
cwtl
lahf
mov
jmp
stc
cli
aad
inc
or
cmp
lea
addl
outsb
stos
mull
outsl
faddl
movsl
pusha
push
imul
and
lock
sub
int3
ret
mov
loope
pop
adc
test
xchg
imul
sbb
mov
xchg
adc
jg
lods
loopne
xchg
ja
inc
aaa
rcrl
mov
push
lods
push
stos
fcom
dec
aas
lret
pop
iret
mov
add
cwtl
fcom
adc
xor
xchg
adc
sbb
mov
lahf
cmpsb
jbe
mov
pop
and
mov
sbb
imul
outsl
jecxz
imul
loopne
rol
mov
and
sbb
jae
pop
out
mov
inc
xor
push
dec
std
sbb
adc
outsb
mov
in
sub
sbb
int3
shrl
cli
jno
mov
inc
push
jge
lods
or
pop
aad
inc
int3
adc
sahf
aad
lds
jecxz
lods
pop
push
mov
std
rcrb
fldenv
or
or
or
sub
or
dec
call
xchg
sub
fsubl
add
jbe
mov
mov
cmpsl
in
insb
inc
jnp
cmp
mov
adc
daa
or
or
pop
xor
dec
lea
fidivrl
icebp
inc
mov
fidivrl
pop
mov
rcll
xor
sub
pop
insl
cmp
sbb
mov
cld
inc
xlat
into
mov
call
add
mov
mov
nop
push
daa
iret
mov
ss
jne
inc
ljmp
jo
push
xor
ljmp
mov
xchg
test
and
adc
repz
and
rsqrtps
mov
ja
xchg
ret
and
jae
out
cmp
mov
adc
mov
int3
jp
xor
dec
fidivrs
add
push
repnz
test
mov
je
mov
or
into
sub
inc
lods
dec
movsb
lret
inc
mov
aad
icebp
fcoms
sub
mov
stos
int
adc
incl
iret
cmp
jp
cmc
test
jne
popfw
jmp
push
ret
sub
xchg
mov
sub
fmul
adc
je
orl
into
pop
ret
fstps
mov
into
aas
xorl
arpl
and
out
xchg
icebp
jecxz
std
cmp
xor
adc
jp
or
add
test
add
adc
push
popa
dec
or
adc
scas
addl
pop
push
jbe
xor
test
and
inc
test
push
mov
mov
jne
call
push
inc
jae
mov
inc
je
in
inc
cltd
shl
shl
add
pop
pop
daa
xchg
pop
rorb
mov
inc
scas
mov
mov
add
push
icebp
lock
repnz
repz
pop
dec
in
loopne
popl
or
repnz
ret
or
in
cmp
mov
ljmp
nop
sbb
sbb
int
std
sub
mov
mov
sub
shlb
mov
nop
xorb
outsb
mov
jns
jo
jle
loop,pn
add
xor
xchg
shlb
xor
sahf
test
cmp
sbb
popf
stos
add
sbb
or
jb
sub
adc
or
or
add
mov
and
cwtl
or
dec
das
adc
adc
dec
pop
pop
add
jp
sbb
and
pop
sub
dec
push
cmp
int3
jns
mov
gs
sub
push
jp
inc
out
sub
xchg
xchg
test
and
mov
and
scas
repnz
xchg
xor
mov
push
fdivl
stc
mov
and
dec
shlb
xor
xor
mov
mov
jge
push
xchg
ret
jl
cli
ret
pop
jecxz
jl
push
inc
mov
pushf
pusha
shl
mov
inc
fisttps
jno
cmp
or
rcrl
aas
cmpsb
push
jl
lds
je
xchg
xchg
sbb
mov
pop
nop
sbb
cmc
mov
in
lods
leave
nop
mov
and
inc
pop
mov
sbb
xor
aas
xchg
jne
test
sbb
lret
mov
mov
addb
fidivs
cmp
out
pushf
popf
div
xchg
sbb
adc
addb
notl
cmp
cmpsb
push
push
add
fstps
mov
fcoml
filds
clc
mov
cwtl
push
cmpsl
enter
in
cmp
add
addr16
inc
adcb
dec
cmp
nop
and
out
dec
inc
fwait
out
out
out
jge
std
lods
cmp
ljmp
add
dec
sbb
gs
add
add
mov
or
mov
dec
cwtl
scas
lahf
je
add
aaa
shlb
stos
cmp
cli
lret
repnz
dec
aad
jle
rcr
cld
mov
or
cmp
xchg
mov
in
or
clc
and
outsl
sub
mov
mov
js
add
xor
jns
mov
xchg
xor
sub
sbb
inc
push
nop
ds
jae
xchg
roll
sbb
cli
daa
or
out
xorb
call
xchg
js
mulb
cltd
lret
sbb
mov
negl
mov
mov
loopne
das
mov
mov
push
push
adc
jnp
ss
loop
or
mov
add
fwait
ds
xchg
mov
sbb
add
and
repz
pop
popf
fprem1
xor
jl
in
fcmovb
mov
sbb
push
mov
sbb
and
enter
inc
ja
mov
fildll
sbb
int
mov
pop
push
leave
mov
and
add
mov
imul
ds
ds
xchg
dec
ret
lods
xor
jle
outsb
add
cwtl
or
enter
push
mov
lods
inc
jecxz
cmp
test
or
lcall
loop
add
adc
test
and
addl
stos
or
test
mul
out
mov
cs
adc
aam
fsts
outsl
fsubrp
mov
scas
push
adc
pusha
inc
dec
in
lods
lds
test
push
xor
scas
fwait
push
fwait
std
push
jne
aas
imul
outsb
jo
mov
cmpl
mov
mov
or
adc
inc
inc
push
jb
idivb
xchg
cwtl
or
jp
test
fists
mov
movl
push
xchg
add
fs
sub
jbe
outsl
dec
pop
in
xor
loopne
dec
mov
lea
std
mull
test
jge
cmp
out
arpl
pop
jecxz
jge
jp
mov
cld
or
jmp
cltd
test
pop
mov
or
xor
out
fsubl
loope
lods
pop
in
scas
xor
lea
insl
addr16
sub
mov
sbb
jl
mov
pop
inc
mov
add
jge
push
leave
scas
cld
sbb
dec
clc
nop
frstor
and
addl
jnp
and
sbb
scas
dec
jge
out
or
xor
rorb
pop
int3
mov
call
cs
test
lods
xor
push
jnp
bound
ss
ret
inc
pushf
je
mov
shlb
out
mul
fisttpl
rorb
pop
shll
dec
sub
roll
insl
shrl
testl
out
and
js
sub
add
sub
mov
push
sbb
icebp
and
mov
or
mov
xchg
sub
cmp
cmpsb
cld
push
push
ret
or
dec
mov
sub
jae
bound
jle
aam
dec
cmc
stos
cmp
out
cwtl
out
mov
out
push
xlat
rcrb
stos
dec
mov
cmp
cltd
add
insl
xor
sahf
ret
mov
jmp
arpl
pusha
dec
mov
mov
jecxz
dec
lret
and
add
adc
icebp
repnz
imul
add
stc
ja
and
xchg
or
lods
aam
fimuls
scas
daa
jp
mov
mov
pop
add
xor
jae
out
push
xchg
clc
mov
sub
das
mov
in
je
loop
cmpsl
insb
push
outsl
insl
mov
arpl
mov
push
mov
cwtl
dec
push
mov
jl
xchg
cmc
cli
and
inc
test
fucomp
lret
sbb
jae
cmpsl
fisubs
idiv
fadds
mov
js
push
int
insb
aas
pop
cmp
and
jg
pop
pop
cltd
push
js
adc
jns
aaa
mov
cld
aad
inc
movsb
sub
ss
data16
aad
ds
sub
mov
xacquire
push
rcr
cli
lcall
jl
mov
fistps
xor
lret
mov
sbb
dec
movsl
cmp
push
push
mov
pop
clc
mov
cld
add
lret
dec
inc
cld
in
sbb
mov
cmc
jno
test
andl
mov
jns
fimull
arpl
pop
lahf
inc
icebp
add
add
cmp
scas
or
mov
popa
dec
cmp
arpl
push
jge
out
les
movb
jbe
fs
movb
fsts
scas
fisubs
aad
sbb
xor
mov
out
xor
adc
mov
mov
dec
leave
pop
mov
add
push
dec
mov
xchg
mov
pusha
in
insb
sub
or
lods
test
cmpl
push
push
cmp
addl
or
stos
lods
sbb
ret
dec
add
adcl
lcall
in
out
daa
inc
fwait
insb
lret
push
ljmp
out
inc
dec
adc
fwait
das
enter
movsb
mov
int
xchg
lahf
or
dec
mov
enter
sahf
inc
sbb
iret
addr16
jle
jecxz
out
into
pop
test
enter
push
xchg
push
cmp
mov
xor
lcall
les
scas
add
add
aam
mov
enter
pop
jg
test
push
mov
das
rcll
into
cmpsl
in
and
insb
inc
sti
into
xor
out
iret
cmp
push
cmp
jns
sub
add
inc
pop
mov
repz
mov
sub
push
inc
cmp
mov
push
sbb
cmpsb
nop
and
cld
mov
outsl
sub
aam
dec
push
int
cmp
aas
stc
push
out
aad
aaa
nop
into
sbb
aas
leave
ss
repz
sti
mov
or
rorl
and
inc
add
rorb
push
xchg
outsl
aaa
pop
cmpsb
and
jmp
mov
movsl
jns
loopne
dec
stos
add
enter
insb
push
jmp
sub
adc
ret
in
test
aaa
mov
jo
mov
ljmp
mov
cmpb
movsl
jp
mov
add
out
js
pop
mov
sbb
pop
repz
lds
inc
scas
inc
jp
push
mov
in
cli
fs
or
fdiv
fnstsw
sub
addr16
jo
cmc
dec
ret
add
mov
mov
jne
inc
xchg
add
fildl
sarb
in
adc
pop
sarb
lods
push
jb
dec
fisubl
int
shrb
jl
pusha
inc
adc
inc
xchg
pop
stos
out
aas
sub
fisubrs
or
sub
jle
test
ja
les
add
rcll
mov
in
jb
insb
loopne
sub
cmpsl
and
cmp
int
test
rolb
cmp
ja
inc
adc
inc
sub
cmc
out
pop
xchg
loopne
mov
sub
imul
int3
and
imul
in
mov
cmp
daa
xchg
or
mov
std
mov
or
jl
pop
push
movl
movsl
push
inc
mov
test
xor
push
push
mov
cli
jns
imul
mov
cmpsl
rcl
mov
pop
cmp
mov
push
push
mull
xor
push
bnd
sti
push
adc
xchg
icebp
pop
and
dec
xorb
sbb
imul
mov
push
insl
cmpsl
fidivl
xor
scas
mov
fs
mov
adc
mov
daa
mov
mov
and
pop
mov
clc
repnz
shll
add
data16
sub
imul
dec
bound
xor
js
push
addr16
xchg
push
cwtl
cmc
add
mov
sub
push
sarl
pushf
std
xor
movsl
cmp
stc
push
pushf
mov
dec
sub
cld
addl
push
inc
lret
jmp
adc
and
ljmp
adc
rcrb
pop
pop
icebp
adc
lock
outsl
daa
xchg
mov
mov
xor
xchg
ljmp
sub
add
in
les
cs
sub
add
lret
dec
or
push
sub
idivl
add
lcall
pop
cmpsl
jo
jno
in
cmp
and
data16
clc
cltd
cltd
or
pop
jle
test
lahf
in
lcall
dec
pop
test
test
in
pop
shr
shl
and
adc
scas
paddusb
xchg
add
push
std
ljmp
lret
adc
leave
cmpsl
enter
xchg
pop
mov
stc
xchg
fcompl
sbb
adc
pop
cwtl
push
inc
out
jle
fistps
lret
ja
rol
inc
out
imul
leave
stos
xchg
push
repz
imul
jo
or
aaa
js,pn
cmp
loope
pusha
lahf
xor
arpl
in
nop
or
fisttps
pop
xchg
cmp
outsl
mov
inc
jbe
mov
jae
sbb
enter
jae
push
fsubrs
mov
ja
stc
mov
xor
or
jecxz
xchg
fisttpll
pushf
and
push
in
sbb
scas
test
mov
push
mov
inc
dec
sub
out
cmp
sbb
cmp
pop
aas
mov
int3
mov
xlat
sub
dec
push
xor
ljmp
or
xorb
cld
xchg
push
fldt
push
adc
jns
dec
imul
xchg
fmull
lret
cmp
add
lea
mov
push
into
jl
dec
cmc
dec
outsb
inc
inc
dec
scas
lods
fisubs
popf
ret
sub
lahf
call
in
mov
dec
add
fs
xchg
loope
mov
mov
lods
fisttps
out
daa
xchg
out
or
hlt
lods
pop
push
imul
push
adc
sahf
dec
insb
and
in
pop
test
jg
leave
push
pop
pop
ret
push
clc
fldt
outsl
xchg
pop
jo
push
xchg
lea
je
loopne
jecxz
out
add
std
nop
cmp
jecxz
ret
inc
lea
push
std
addb
fistps
lods
inc
pop
int
inc
inc
xchg
xchg
loope
out
mov
add
insl
loope
or
jne
push
sub
pusha
lahf
fsubrp
mov
jp
dec
mov
sub
jae
sbb
mov
js
addr16
and
inc
xchg
pop
dec
sub
mov
lret
mov
movsb
pusha
mov
fldenv
imul
icebp
mov
add
aaa
push
and
mov
nop
sbb
es
inc
imul
dec
pop
mov
cs
fst
shll
sbb
int3
jae
filds
cmpsb
push
jge
jne
inc
outsb
dec
fstpl
lret
sub
fmull
insl
call
pop
leave
pop
dec
jnp
in
mov
mov
mov
out
inc
inc
jge
lret
jnp
mov
mov
mov
int
or
dec
lods
lret
out
bound
nop
inc
aas
pop
fwait
push
or
pop
int3
lods
lock
jp
lods
sahf
xor
mov
lahf
repnz
add
inc
jnp
rol
mov
jmp
jmp
repz
inc
hlt
add
dec
imul
mov
lea
ja
cmc
jl
nopl
jecxz
push
int3
clc
or
push
push
dec
pop
dec
lods
mov
addr16
sub
adc
in
mov
cltd
subb
dec
push
loopne
sahf
hlt
leave
push
cmp
addb
popf
push
or
xor
pop
dec
adc
icebp
stos
fbstp
xchg
in
and
push
and
stos
mulb
bound
push
mov
lret
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
mov
cmpsb
xor
.byte
and
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
fldl
add
adc
add
push
add
add
add
add
jb,pn
popa
je
add
and
add
add
add
add
add
adc
add
add
cs
je
add
add
add
adc
add
inc
add
add
add
inc
add
loopne
je
js
add
add
add
add
add
add
inc
add
loopne
jb
popa
je
add
cwtl
or
add
mov
add
push
add
add
add
inc
add
loopne
fs
je
add
add
add
add
or
add
push
add
inc
add
loopne
add
xor
xor
call
pusha
call
or
and
std
pusha
sbb
mov
mov
outsb
subb
jbe
cmpsl
call
xchg
mov
negb
roll
pop
mov
test
xchg
movl
push
push
push
sti
lock
repnz
add
paddw
loope
adc
popa
adc
jle
pop
loope
cmp
movsl
add
shll
jo
and
rol
xchg
jle
jp
jp
and
in
add
xchg
dec
mov
loopne
psadbw
pushf
jae
push
imul
mov
stos
adc
inc
dec
lock
dec
ret
jnp
fucomi
daa
out
push
data16
insl
es
pushf
mov
lods
ljmp
xlat
popa
sub
lds
mov
out
mov
jg
mov
inc
jg
scas
stos
pop
mov
cs
loope
lea
mov
stos
jl
xchg
dec
shll
add
mov
xchg
xor
or
insb
add
es
inc
jne
and
dec
pop
stc
mov
jle
push
enter
and
jae
mov
push
out
jle
adc
dec
mov
sub
mov
leave
fldenv
lea
gs
sti
bound
fsts
inc
mul
nop
mov
out
shl
xchg
sub
mov
dec
xchg
push
test
bound
out
push
xorl
pop
test
mov
push
pop
sub
nop
test
rcl
pop
call
rcl
ljmp
rolb
sbb
mov
negb
mov
or
sub
sarl
in
lea
cmpsl
pusha
xor
jg
rcrb
cmp
pop
jle
xor
insb
cmp
scas
adc
sti
test
or
xchg
subl
movsb
add
jmp
subb
pinsrw
stc
je
jl
adc
dec
add
xor
rcrb
push
iret
mov
mov
test
sbbb
cmp
jp
addr16
jnp
push
xor
hlt
pop
mov
popa
sub
call
hlt
mov
xchg
mov
add
fs
sbb
mov
into
arpl
mov
aad
pop
push
adc
xchg
adc
fsubs
lcall
mov
movsb
or
xlat
loopne
enter
mov
push
int3
in
or
in
fldt
jl
repnz
inc
repz
sti
ja
aam
ret
sbb
outsb
xchg
inc
rcrl
rol
ret
sub
test
jg
pop
cmp
loope
pop
jecxz
lods
notb
aas
push
movsb
movsl
mov
jecxz
in
mov
scas
or
or
stos
je,pn
jne
lock
lods
pop
sahf
push
jo
inc
rorb
out
pop
int3
push
push
mov
iret
shl
dec
cltd
stos
mull
in
adc
mov
daa
add
cmp
jp
shr
inc
cmpsl
lcall
inc
jne
daa
test
ja
add
jne
mov
mov
cli
fildl
push
les
cmp
xchg
or
mov
iret
mov
pop
or
cld
jmp
dec
sub
mov
aas
mov
out
out
loope
in
cmpsl
push
pop
pop
dec
das
out
mov
push
push
cltd
and
or
iret
pushf
loop
mov
inc
jo
das
inc
shlb
enter
ds
push
pop
mov
adc
or
jl
icebp
sti
pusha
jae
mov
dec
cmp
and
jle
outsl
in
aad
jae
add
adc
insb
sbb
push
sub
add
inc
or
sbb
adc
pop
pop
or
testl
jbe
mov
mov
cs
jecxz
std
bound
stos
arpl
sahf
pop
cld
or
test
nop
xchg
mov
int3
dec
and
ret
add
sbb
sbb
inc
stos
call
rcrl
xchg
mov
icebp
je
imul
movsb
cmp
mov
std
push
movsb
stos
out
in
test
and
jo
push
push
pusha
pop
inc
addl
adc
test
cmpsl
insl
jae
dec
cmp
mov
dec
push
lret
stos
pop
call
xor
mov
fisubs
hlt
imul
xchg
xchg
data16
lret
adcb
aaa
insl
enter
mov
loopne
xor
jae
and
scas
movsb
fsubrp
pop
adc
push
dec
mov
int
popf
hlt
sbb
clc
mov
xchg
ss
jge
add
ljmp
es
lds
xchg
ja
jl
push
jbe
push
xor
inc
push
test
movsl
fisubrs
push
ret
mov
mov
imul
or
js
leave
inc
call
or
xchg
sub
in
ret
inc
push
pop
and
cmc
adc
shrb
inc
mov
push
jge
loopne
jnp
push
lock
push
dec
xchg
push
jecxz
cmp
add
iret
xor
xor
xor
repz
sbb
dec
push
pop
or
sbb
push
push
sub
cmc
scas
adc
int
xchg
mov
std
cs
or
sbb
cmp
into
pusha
mov
je
dec
add
ret
enter
mov
inc
enter
or
xor
mov
xchg
xchg
dec
sub
sarl
mov
push
cmc
mov
clc
sub
lea
inc
call
int3
lret
mov
and
das
nop
xchg
imulb
cmp
outsb
or
addr16
xchg
gs
ret
push
add
push
imul
les
stc
add
jmp
or
test
das
inc
std
sbb
out
xor
outsl
pop
clc
pop
sbb
or
fiadds
mov
and
pop
inc
pop
aas
jb
add
inc
jno
mov
int
insl
mov
rolb
jmp
push
faddl
dec
out
adc
imul
dec
dec
lods
fdivs
fildl
cmp
hlt
dec
inc
inc
inc
sub
loopne
std
push
and
jle
adc
and
iret
fistps
push
ret
add
mull
dec
fcomps
mov
addr16
mov
jmp
aaa
int
inc
add
mov
xchg
or
or
pop
ljmp
aas
cwtl
jle
daa
fwait
lret
add
test
dec
inc
adc
mov
notb
jo
push
test
pop
adc
adc
push
push
addr16
jge
cmpsb
inc
pop
jns
bound
ljmp
jmp
fs
mov
ret
xchg
mov
adc
mov
mov
adc
mov
ljmp
sti
aad
xor
bound
pop
jne
and
jmp
aaa
jge
adc
mov
test
adc
daa
jge
push
loopne
out
into
xor
ret
imul
push
ja
lea
and
pop
mov
push
fs
iret
jmp
ret
inc
add
mov
mov
push
je
sub
cmp
xchg
push
int
lods
sub
imul
pop
out
out
or
push
xor
lea
inc
jg
push
xchg
sbb
jecxz
adc
ret
or
mov
xor
jmp
insb
cmp
pop
fcoms
aas
xchg
mov
scas
test
testb
popa
movsb
repnz
aad
fdivr
scas
incl
jae
cmp
cld
add
jno
icebp
bound
jle
das
xor
push
adc
out
test
pusha
xor
lret
test
icebp
into
bound
daa
imul
lds
rcl
notl
icebp
test
push
in
sbb
ljmp
cltd
cmp
sti
adc
cmp
cmp
sarl
stc
and
repz
jo
sub
jmp
and
mov
xchg
xor
rcll
movsl
enter
popa
iret
fildll
cmpb
sub
lret
das
out
xchg
sbb
mov
fists
xlat
add
cltd
push
cwtl
je
das
mov
loop
mov
xchg
dec
insl
out
stc
shrl
clc
test
loopne
jge
or
mov
faddp
push
mov
cmp
jnp
daa
dec
jecxz
xor
xor
inc
ror
icebp
rcl
or
loopne
pop
stc
test
ljmp
mov
sbb
and
adcb
testb
mov
aad
lcall
mov
add
sub
idivl
mov
insl
addr16
outsb
and
iret
or
mov
in
mov
js
stc
mov
mov
fisttpll
cmpsb
adc
dec
cs
sbb
jo
mov
pop
push
mov
insb
mov
in
cmp
mov
fiadds
jg
mov
test
mov
mov
test
mov
or
adc
ret
push
xor
enter
sbb
aad
das
jbe
jp
arpl
lahf
aad
int3
cmp
mov
jge
fsubl
and
push
xchg
xor
mov
pop
jge
inc
mov
popf
adc
sbb
xchg
jno
xor
add
inc
mov
imul
cmp
push
fistpll
sub
pop
fdivr
or
daa
jg
pop
out
enter
cmp
loop
movsb
sbb
leave
pop
jmp
imulb
push
cs
lods
jae
bnd
incl
jae
jmp
inc
dec
aad
fs
pop
in
test
loopne
cmpsb
inc
sarb
into
mov
xlat
and
cli
mov
shlb
popf
jle
test
jo
push
dec
outsb
and
lock
xor
jle
add
xchg
mov
stc
cmpsl
jge
inc
cmp
dec
or
pop
repnz
or
jo
nop
lea
push
jecxz
in
sahf
aad
outsb
mov
xor
ds
es
mov
in
dec
mov
loop
push
xlat
in
fisttpl
cmp
fsincos
sub
popa
pop
sub
or
xor
adcb
nop
jg
or
ret
xor
adc
leave
mov
push
hlt
stos
inc
lret
sbb
xor
cmp
sbbb
sub
push
arpl
repnz
add
sub
or
fcoms
jne
nop
jmp
out
dec
jne
jecxz
dec
xor
mov
adc
ja
int3
inc
loope
mov
xchg
mov
mov
shr
and
ret
or
push
inc
xchg
lret
fs
nop
jae
mov
pop
mov
xchg
fcomip
sti
xor
les
lret
ljmp
mov
js
inc
repz
mov
mov
inc
mov
lock
push
repnz
inc
lods
lods
scas
jge
cld
sti
add
or
fs
popf
dec
jns
or
or
ss
sbb
test
clc
or
xchg
mov
mov
shl
push
mov
scas
sub
sub
rep
cmp
xor
mov
pusha
fcoml
gs
jmp
repnz
lret
mov
das
mov
sbb
into
push
push
ss
push
sbb
cmp
repz
dec
sarb
sub
je
hlt
push
movsl
xchg
out
movsl
int3
xor
push
mov
dec
fidivrs
push
xchg
mov
repnz
jge
push
loopne
shrl
outsb
mov
mov
xor
repz
adc
pop
mov
mov
adc
mov
rcrb
cmpsl
scas
fs
xchg
mov
cmpsb
jo
mov
mov
fdivrl
hlt
mov
adc
cmpsb
pop
out
in
adc
cmp
stos
mov
pop
xor
push
push
mov
rorb
imul
repnz
imul
adc
jbe
lods
jno
ds
push
movsb
push
insb
push
push
outsb
mov
sbb
xor
mov
inc
jo
or
es
adc
aad
and
stos
jbe
push
cld
aas
insb
insl
fldcw
jge
js
adc
fstl
adc
pop
inc
aad
jl
testb
push
adc
sbbl
mov
jmp
cmpl
push
cmc
movsl
cwtl
sbb
xchg
mov
and
mov
xchg
push
or
lret
mov
faddl
lcall
jo
jno
shlb
and
jnp
cli
jne
sahf
cmp
sbb
ja
cmp
insb
mov
add
imul
adc
imulb
xchg
jg
xlat
lea
mov
shrb
mov
sbb
daa
bound
scas
mov
xor
pop
mov
mov
sbb
ret
insb
mov
pop
mov
mov
sbb
mov
aaa
dec
mov
addl
inc
dec
mov
fstps
mov
or
cmp
loop
scas
leave
jp
adc
mov
xor
or
inc
mov
test
repz
xchg
push
xchg
pop
shll
adc
enter
push
dec
push
aam
mov
test
xchg
sbb
test
jno
out
push
push
mov
imul
mov
fs
gs
and
repz
mov
pop
ljmp
jmp
insb
mov
adc
lret
lret
or
push
jmp
xor
add
xor
xor
sbb
cltd
mov
out
inc
xlat
dec
stos
mov
iret
xor
in
jecxz
mov
int
stos
or
xchg
call
jns
push
add
mov
fisubrl
jne
dec
ljmp
ret
mov
vpaddq
rcll
ret
loopne
mov
std
lahf
lret
xchg
scas
push
inc
loopne
mov
add
and
adc
fs
dec
add
imul
or
dec
cmp
push
cmc
cmp
cmp
pop
clc
xor
mov
jmp
jle
mov
lds
stos
cltd
sbb
rcr
insl
fsub
sbbb
cmp
cmp
xchg
in
sbb
mov
xchg
not
pop
fdivp
and
jne
cmp
inc
repz
jno
mov
divl
js
mov
and
jge
std
sbb
loopne
out
pop
add
xlat
mov
test
insb
rorl
icebp
xchg
inc
cwtl
daa
mov
mov
in
out
mov
ljmp
mov
lret
pop
das
inc
call
sbb
mov
mov
push
push
gs
lret
shlb
or
adc
leave
pop
popf
sub
pop
stos
xchg
inc
orl
loopne
mov
mov
dec
call
jp
sahf
add
mov
mov
add
stos
out
dec
testl
adc
jge
mov
psubsb
mov
js
test
enter
test
mov
sbb
jbe
push
cwtl
push
mov
dec
mov
push
es
push
inc
cmp
lahf
pop
or
push
orb
in
movsb
inc
out
je
mov
sub
cmp
rcrl
fwait
pop
rcrb
stos
pop
aas
xor
shr
adc
mov
sub
pop
daa
add
mov
jb
push
loope
hlt
lret
mov
fstl
imul
dec
xor
movsl
mov
clc
push
mov
push
in
or
push
push
push
xchg
mov
or
mov
mov
scas
nop
lcall
pop
sub
insb
scas
lods
sbb
testb
mov
sbb
xchg
jge
or
mov
fsubrs
les
mov
jne
ret
movsl
cmp
dec
cltd
cmp
mov
or
sbb
add
repnz
test
xchg
push
fildll
repz
arpl
adc
pop
loopne
popa
adc
ljmp
mov
movsb
add
push
sbb
sbb
imul
push
mov
sbb
pop
sarl
in
shr
mov
xchg
out
xor
fiaddl
mov
stos
gs
int
xchg
loop
shlb
leave
sub
popa
addl
mov
cmp
out
cld
jne
jb
lds
jnp
insb
inc
add
sbb
adc
in
push
mov
and
add
ret
popa
loope
testl
lahf
cmp
dec
sub
je
mov
sub
sarl
movsl
sub
mov
sbb
sbb
lret
ret
cmp
mov
popa
or
jo
or
push
push
pop
xor
cmp
or
cmp
in
loope
xor
es
loop
mov
mov
mov
rcrb
inc
popa
sbb
pop
sbb
int
cli
cmp
je
aas
test
adc
hlt
adc
sub
hlt
enter
iret
loope
xlat
adc
pcmpgtd
push
sub
or
xlat
test
pop
fnsave
pushf
push
stos
pop
aas
sbb
loopne
insl
mov
pop
iret
xchg
sbb
pop
pop
cmp
rorb
or
pusha
arpl
jge
mov
fisttpl
mov
add
or
add
adc
mov
cmpl
mov
aad
dec
and
subl
sarb
insl
sbb
dec
popw
add
lock
jg
dec
cmovns
xchg
cmpsb
jl
test
xor
jae
dec
das
das
ret
test
into
fwait
jb
shl
sahf
out
fs
inc
ret
adc
sub
inc
adc
icebp
jb
mov
test
push
sti
mov
enter
xchg
sti
mov
sbb
xchg
ret
cwtl
adc
sub
clc
mov
js
je
mov
adc
add
add
push
sub
mov
add
test
aad
xor
and
pushf
xor
cli
dec
shrb
fwait
movsl
add
ret
or
mov
aam
or
mov
loope
xchg
nopl
or
mov
sub
pop
mov
arpl
xchg
jbe
jecxz
jle
cmpsb
mov
test
adc
cmp
div
xchg
jge
add
adc
out
sbb
fwait
fsubr
add
sub
xor
push
insb
stos
aaa
test
popa
mov
icebp
cmp
icebp
cmpsb
fcmovu
jl
cmp
loop
aaa
sub
mov
jo
ss
cwtl
scas
inc
sub
hlt
leave
sub
sub
jecxz
and
inc
or
loopne
sub
testl
jbe
outsb
jp
push
into
xchg
pop
mov
scas
xor
cmc
adc
movsl
notl
adc
stc
jl
pop
rcl
and
mov
xlat
push
stos
fs
gs
push
cmp
lods
fsubr
pop
jmp
mov
pushf
cli
jmp
and
mov
sub
sub
xchg
mov
fnstcw
fcompl
and
add
fistpll
inc
jbe
into
xchg
or
and
loop
or
leave
das
xchg
jo
popf
aam
ja
inc
scas
xchg
aam
fstpl
jp
aad
repnz
jmp
mov
jno
mov
jl
cmp
xor
sub
xchg
xor
push
cld
push
hlt
jle
insl
maxps
movsl
sub
pop
clc
mov
jl
xor
push
iret
arpl
fwait
add
xchg
dec
sub
dec
push
or
dec
jmp
rorl
inc
ficomps
add
test
in
cmp
jge
xchg
xchg
push
sbb
xorb
lahf
xor
add
clc
in
or
mov
xor
mov
adc
or
or
jp
insl
jns
push
mov
add
mov
inc
sub
sbb
das
push
add
fwait
xor
nop
rorl
outsl
rcl
out
enter
aad
js
insb
xchg
sbb
cmc
cmpl
imul
or
push
ret
sbb
fwait
mov
idivb
mov
cli
xor
lret
ss
sbb
paddb
pop
xor
fs
mov
cmpb
or
xor
jmp
scas
rorl
rcl
pop
add
cld
cmp
jnp
sub
or
ja
insl
cmc
mov
test
shll
pop
nop
pop
add
fwait
and
pop
push
jmp
sbb
loop
jecxz
or
insb
pop
mov
in
jp
sub
in
mov
rorl
push
loope
scas
push
push
iret
out
push
mov
dec
das
test
push
jae
out
xlat
aaa
inc
test
divb
fneni(8087
adc
cwtl
inc
fsts
mov
sbb
rclb
sbb
js
sub
push
sbb
hlt
cmpsb
jnp
mov
addr16
dec
js
in
or
and
loope
pop
aaa
rcll
fistl
push
out
mov
or
or
fistpll
outsl
inc
in
xchg
sbb
push
shl
xchg
push
add
xchg
sbb
movsb
fcomp
pop
mov
dec
fsubrs
mov
imul
cmpsb
fwait
in
mov
xor
mov
or
repnz
jecxz
scas
lea
push
daa
cmp
jo
out
mov
mov
jno
pop
mov
stc
in
enter
mov
loop
ret
push
lcall
push
popa
int3
and
inc
test
mov
test
sub
jbe
mov
lret
fs
adc
dec
and
or
in
mov
imul
test
movsl
and
jbe
cmpl
stc
aas
sbb
mov
jb
mov
sub
sarl
jo
push
push
adc
mov
jge
adc
stos
into
push
push
fists
stos
repz
xor
dec
jle
pop
inc
scas
shrl
mov
mov
mov
scas
mov
scas
lcall
scas
ljmp
add
out
jl
sub
push
inc
ds
popf
jae
and
cmpsb
mov
sbb
in
test
andl
in
fidivs
out
cmp
or
add
add
es
fcomp
popa
cmpsb
cmp
mov
shrl
fs
pop
pop
rcll
sub
mov
inc
pop
mov
or
cmc
lods
xchg
xchg
pusha
stos
fidivs
mov
in
mov
push
mov
out
push
addr16
std
imull
mov
push
repz
sbb
mov
mov
cmp
stos
or
sbb
fs
xor
jmp
mov
xor
pop
ljmp
les
stos
jle
adc
int
or
cmp
xchg
outsb
imul
mov
push
lahf
sbb
imul
add
mov
and
push
rolb
je
adc
add
lcall
push
sub
add
or
xchg
and
repz
jle
rcrl
outsl
idivl
clc
xchg
clc
pusha
sub
fidivrl
mov
adc
sbb
or
inc
sbb
adc
push
rcrb
xchg
dec
out
call
sti
repz
iret
inc
montmul
cmpsb
add
insl
stc
or
fstl
int3
and
mov
dec
pop
xor
std
test
inc
xlat
dec
mov
xor
push
fistpll
int3
mov
movsb
insb
in
mov
std
ret
aam
mov
push
ret
lods
jae
add
sbb
mov
mov
xlat
addr16
inc
mov
nop
les
mov
lcall
jne
cmp
add
insl
cld
mov
pop
mov
popa
jecxz
xlat
xlat
dec
pop
outsb
jmp
xor
flds
adc
mov
shll
into
mov
xor
shrb
sbb
insb
mov
sahf
mov
ret
push
fsubrs
pop
ret
nop
jle
stos
ja
gs
scas
cmp
sbb
inc
xor
fisubs
mov
pop
mov
cmp
out
jnp
sbb
dec
cmpsl
push
adc
in
cmc
inc
and
clc
pop
jns
dec
or
daa
repnz
sub
enter
dec
or
loopne
jp
xor
mov
pop
add
cmp
adc
ficomps
aas
lds
repz
addr16
out
push
movsl
or
aam
in
jo
inc
and
jb
sahf
sbb
mov
test
out
sbb
std
testl
lods
mov
into
xchg
xchg
addr16
aam
cmc
push
and
cmp
fsubrl
outsl
pop
test
jp
pushf
dec
in
cmpsb
sahf
out
out
sub
sar
xor
lds
mov
das
aaa
xlat
cwtl
repz
adc
adc
cltd
jo
mov
jmp
lahf
iret
xor
sub
mov
or
mov
cmpl
test
mov
mov
or
loopne
jnp
dec
dec
test
dec
add
jl
xor
pop
jne
mov
pop
rclb
test
jnp
stos
xchg
call
inc
or
jl
scas
push
adc
dec
in
mov
out
add
xchg
pop
pop
jne
in
mov
jle
in
pop
mov
push
jle
add
inc
enter
mov
clc
sbb
jge
sbb
les
gs
fnstenv
mov
dec
hlt
ljmp
and
ds
lret
xor
cmpsl
adc
mov
fdivs
insl
mov
sub
cwtl
jbe
sbb
xchg
or
sub
push
xchg
cli
mov
pop
stc
inc
cmpsb
pop
mov
adc
ret
fldenv
pop
test
loope
adc
xchg
fsubl
out
aam
and
pop
int
imul
mov
jecxz
mov
in
jge
sub
sbb
add
out
pop
adc
push
xor
mov
cli
jb
fildl
movsb
loop
sub
pop
xor
push
and
xlat
xor
pop
cmp
cmp
adcb
cmp
insl
call
inc
push
jl
shl
movsl
inc
jo
psubusb
repz
mov
std
loopne
stos
add
mov
hlt
inc
pop
pop
in
dec
sub
cld
sbbb
sub
push
inc
inc
xchg
inc
sbb
jge
fnstenv
shr
xchg
jns
xor
negb
std
lahf
xchg
out
outsl
add
xchg
mov
jbe
mov
mov
daa
fimull
hlt
sbb
sti
aas
rcrl
xchg
stos
sub
repnz
sbb
in
mov
data16
add
xchg
mov
and
push
and
jl
jl
loopne
mov
data16
fsubs
cmp
dec
dec
jno
pop
insb
jg
or
push
hlt
push
addr16
lea
fs
add
inc
loope
fidivs
pop
inc
out
popa
cmp
lock
inc
iret
or
adc
lahf
test
add
or
subl
mov
push
lret
stos
mov
mov
cmp
pop
pop
divb
daa
and
xchg
mov
cltd
fs
in
arpl
test
aam
push
out
bnd
fistpll
stos
jg
imul
pop
int
push
or
test
lcall
inc
and
lcall
outsl
inc
lret
dec
adc
cmp
xor
movsb
xchg
pop
rolb
cmp
stc
in
lret
sbb
lahf
jg
add
stc
xchg
shll
adc
mov
cmp
call
cmp
or
or
push
lods
in
adc
push
insl
lahf
or
dec
cmp
push
push
mov
or
adc
movsb
inc
test
xchg
vmread
cmpb
pop
sub
jp
dec
test
sub
dec
xlat
pop
inc
push
in
jl
data16
push
imul
adc
jge
testl
push
mov
mov
daa
mov
scas
stos
cmp
iret
pop
stos
pop
mov
aaa
je
inc
movsl
xlat
andb
fsubrl
fidivrl
mov
sbb
ds
in
insb
subb
cld
cmpsl
pop
jge
mov
push
test
nop
cmp
jnp
ret
repz
dec
mov
mov
stc
fsts
jns
mov
outsb
stos
sbb
xchg
fmuls
inc
mov
call
ljmp
xchg
sbb
or
cltd
imul
jne
dec
pusha
test
cmp
jne
jle
cmpsl
outsb
jb
lods
sub
and
fldl
add
in
push
inc
mov
das
mov
jge
jecxz
subl
das
mov
shl
loope
sub
xchg
leave
pop
add
insb
sbb
leave
mov
xorb
mov
cli
adc
mov
sub
jo
xchg
enter
add
inc
xor
mov
lcall
out
das
xchg
jne,pt
cwtl
lret
movsb
or
cmc
xchg
fst
sahf
and
or
fdivrp
nop
or
sbb
xchg
and
pop
push
jg
cmc
mov
rorl
gs
xchg
rcll
cmp
xchg
call
cwtl
ret
iret
in
sbb
xor
adc
push
dec
divl
jle
mov
daa
or
insl
or
inc
inc
fcmovnu
das
inc
les
cld
xor
sbbb
outsl
inc
lret
pop
movsl
mov
fidivs
cli
or
call
das
or
movsb
sub
mov
pushf
mov
test
stc
lret
icebp
rcr
jg
inc
inc
inc
xchg
push
mov
lcall
add
ljmp
loope
out
or
jle
aam
xor
pop
ret
pop
js
mov
setne
int
sbb
push
jo
jmp
leave
xchg
ret
pop
adc
jmp
aad
xchg
out
call
mov
iret
sahf
sub
sub
in
mov
out
mull
cmp
or
mov
and
sub
jbe
inc
jne
cmc
adc
je
adc
jl
pop
xchg
movsb
push
xchg
icebp
fidivrl
add
sti
int3
cmp
mov
adc
adc
mov
lods
cmc
jno
icebp
aad
mov
jns
xchg
push
mov
pop
xor
les
push
data16
repnz
xchg
insb
and
ffree
fidivrl
das
cmc
dec
hlt
cmp
frstor
stos
xchg
mov
jg
or
mov
add
into
mov
in
mov
out
rcrb
not
sarl
jg
andl
inc
xchg
in
or
xchg
mov
inc
aaa
push
or
pop
fidivs
das
test
rol
lahf
shll
xorl
or
and
mov
inc
cmc
mov
inc
mov
aam
push
mov
fists
dec
mov
daa
arpl
xchg
sti
lods
hlt
call
call
sub
test
mov
insl
sub
lock
jge
xchg
mov
sbb
pop
jg
pop
pop
repz
test
adc
fs
aas
sbb
test
out
mov
test
xor
bound
insb
psubusb
add
dec
and
adc
mov
push
mov
aam
dec
add
popf
out
pop
fstl
enter
adc
inc
cltd
mov
fcomps
out
mov
dec
cs
out
push
lds
gs
sub
daa
repnz
pop
mov
cmpsl
xor
clc
mov
pop
cli
pop
jbe
push
mov
insb
je
jmp
rep
jp
in
in
repz
les
xchg
mov
mov
xchg
data16
inc
xor
add
push
cmp
outsb
pop
adc
jmp
in
mov
mov
in
mov
ror
mov
xor
call
fstpl
jno
scas
pop
pop
sub
outsl
cmpsl
adcb
not
fidivl
push
call
add
call
dec
cmc
out
imul
in
mov
testl
fidivs
jne
lahf
xor
mov
leave
sub
mov
cmp
imul
mov
xchg
push
pushf
shll
inc
push
dec
cmc
ret
pop
pushf
lea
int3
cmc
and
pop
pop
mov
arpl
push
les
mov
pop
push
mov
jle
mov
rcr
sub
add
mov
add
dec
mov
pop
adc
push
and
in
test
add
adc
cmp
push
adc
movsb
pusha
and
fisttps
sub
testb
pop
das
push
je
aad
sub
in
dec
enter
push
mov
inc
aaa
jge
cwtl
push
popf
lods
add
negb
bound
dec
outsb
mov
ja
jmp
xor
mov
pushf
cld
nop
push
and
aam
stos
pop
sub
add
push
push
jl
mov
xchg
add
add
xchg
xchg
mov
and
sbb
adc
jmp
test
mov
add
mov
rcrl
pop
jecxz
pop
dec
jecxz
mov
fcmovne
hlt
leave
mov
push
stos
dec
outsw
push
aad
xchg
hlt
popl
push
test
sbb
pop
in
cmp
pop
insl
imul
add
andl
add
and
pop
inc
pusha
movsl
adc
insb
es
sbb
dec
lea
and
mov
inc
shrl
mov
push
mov
mov
mov
and
jbe
cmp
mov
cmp
xchg
stos
mov
rorb
adc
pop
scas
test
ss
insl
gs
mov
jae
or
and
jle
adc
lret
adc
sbb
outsb
cli
call
pop
inc
sub
inc
in
inc
sbb
in
xlat
or
out
jmp
jno
loop
xlat
fwait
sub
pop
out
push
mov
les
in
loop
pop
pop
cltd
test
inc
ds
push
mov
stc
inc
inc
icebp
mov
mov
test
es
and
stc
call
fwait
adc
sub
inc
loope
js
pop
adc
cmp
dec
mov
xchg
fiaddl
push
imul
add
xchg
lahf
pop
jae
or
or
push
push
scas
mov
fcoml
or
aaa
mov
cltd
sbb
and
jge
jns
cmp
inc
repnz
enter
jp
fucomp
sub
or
push
mov
mov
xchg
incl
pop
push
std
fwait
adc
xlat
and
sbb
xchg
les
cmp
xchg
cmp
dec
js
jmp
fadds
out
mul
xchg
xor
call
mov
movsb
enter
outsb
or
or
adc
aas
and
sti
jne
sti
in
fucompp
dec
sbb
es
mov
shlb
xor
mov
pop
cmpb
icebp
je
test
cmpsb
cmp
fiaddl
movsb
xchg
ret
dec
outsb
lahf
rcrb
mov
pop
xchg
dec
lahf
jne
xor
fstps
dec
in
xor
jmp
in
mov
lcall
xlat
or
lds
jle
mov
inc
inc
in
cmp
test
pop
pop
push
roll
rorl
icebp
dec
fs
xchg
xor
jns
nop
mov
adc
std
shr
xor
push
sti
aas
imul
add
imul
inc
adc
out
or
adc
js
jmp
cmp
and
xor
test
or
xchg
add
data16
iret
lcall
jge
ja
gs
fsubl
pop
cmpsl
cmp
adc
sub
xchg
jl
cld
rolb
lea
inc
xchg
pop
imul
into
inc
mov
rolb
xchg
mov
inc
test
dec
adc
call
adc
daa
addr16
sbb
fistps
xor
jle
mov
shl
arpl
fmul
xchg
pop
xchg
out
jecxz
repnz
pop
pop
add
das
jne
out
mov
lcall
push
test
mov
ret
lret
sahf
push
and
es
jno
xchg
cli
stos
mov
lcall
fdivs
jmp
punpckhdq
jnp
outsb
pop
fwait
inc
mov
cmp
add
aaa
or
pop
sub
or
insl
aad
mov
loopne
jbe
ljmp
in
xor
cmpsl
adc
xor
mov
or
adc
fdiv
and
int
xchg
add
stos
aas
mov
pop
dec
jae
push
mov
xchg
inc
je
inc
adc
in
mov
cmpsl
in
mov
mov
or
aad
popf
cmp
out
shll
fcomi
leave
shr
ljmp
push
mov
into
movsl
pushf
and
jo
push
fldl
in
pop
subb
cmpsb
mov
roll
pop
sub
xor
cmc
dec
mov
sub
mov
sub
dec
adcb
xor
xor
fucom
mov
popf
adc
out
ret
iret
js
sub
mov
enter
fistpl
fadds
in
loope
fisubrs
mov
mov
dec
mov
dec
je
jp
gs
add
push
or
jno,pn
int3
mov
jns
lds
xchg
test
or
sbb
jl
pop
mov
push
outsb
dec
iret
dec
or
loopne
xchg
leave
movsl
xor
out
into
repz
push
ror
xor
adc
insl
push
push
and
pop
movsb
mov
xchg
lret
ss
ret
lds
aad
push
lock
xor
ds
push
loope
adcb
sub
sub
aam
cmc
pop
pop
in
adc
and
push
ror
or
sbb
xor
cmp
pop
mov
and
sub
cmp
pop
movsl
fimuls
ja
add
mov
jmp
nop
pop
fdivrs
sub
stos
fistpll
xchg
hlt
or
mov
je
in
je
icebp
add
mov
divl
rcrb
insb
mov
outsb
add
fsubrl
push
mov
mov
aaa
and
in
xor
mov
out
mov
test
testb
in
lock
jne
adc
mov
adc
mov
ss
sub
push
dec
jbe
or
in
enter
int3
mov
aam
fdivrs
fdivrl
push
test
repnz
fstpt
adc
aas
inc
ficoml
aaa
sub
push
or
sbb
mov
cmp
subb
bound
daa
push
jns,pt
icebp
mov
stc
jle
jg
test
and
jle
out
push
decb
jmp
cmp
or
and
pop
ds
cmp
adc
sbb
ds
std
pushl
ja
xor
idivb
pop
insl
fbstp
sbb
push
sub
xchg
repz
clc
les
add
mov
pushf
lds
xor
sbb
cmp
or
mov
jmp
jb
fwait
and
push
popf
and
mov
dec
cmp
aam
sub
mov
push
adc
test
mov
cltd
push
in
rcrb
iret
outsl
shrb
cld
sub
lret
push
flds
dec
into
adc
lods
xchg
cmp
jg
into
mov
inc
pop
stos
notb
out
or
test
ret
mov
pushf
mov
sub
mov
mov
pop
xchg
gs
push
addr16
dec
or
mov
cmp
out
fnsave
aad
push
mov
push
push
cmp
jle
sbb
push
fxch
lret
jg
jmp
jmp
lcall
imul
mov
inc
loope
pop
pop
filds
lds
cmpsb
xchg
lds
mov
lret
mov
lods
fwait
inc
sbb
jbe
mov
subb
notb
push
lret
cld
fisubrs
leave
push
cmpsl
movsb
pop
or
fmull
xlat
std
cmpsl
push
ljmp
sbb
aam
or
and
pop
stc
aam
mov
mov
or
pop
pop
push
loope
jp
shlb
jne
jae
mov
cli
es
inc
out
jo
insb
or
leave
fisubs
inc
movb
xchg
mov
mov
sub
sub
shlb
int3
es
mov
sbb
rcrl
pop
push
cmp
lahf
or
out
pop
xor
mov
test
push
dec
mov
lea
pop
pusha
xor
nop
or
lcall
pop
rcrb
add
adc
push
and
shlb
pop
lea
nop
pushf
lods
pop
outsb
sbb
mov
mov
sub
shl
mov
ss
xchg
enter
pop
jnp
or
inc
pop
sbb
lcall
mov
je
jae
fstpt
mov
in
lret
xor
sarb
cmp
mov
sub
adc
ret
sub
xor
int3
push
cmp
jp
xor
xchg
inc
and
iret
pushf
sub
mov
mov
push
mov
popa
int
pop
pop
cli
stc
adc
stos
and
into
or
rorb
add
ror
cmp
and
mov
push
and
mov
dec
pop
pop
test
mov
mov
inc
mov
xchg
je
cmpsl
insl
inc
imul
ja
cmp
lahf
ret
or
xchg
stc
cmp
push
push
cmp
xlat
pop
inc
add
loope
jge
cltd
addr16
mov
mov
jp
xchg
jnp
aad
pop
aaa
ss
pop
jbe
jp
loope
ds
mov
xchg
jbe
mov
mov
inc
sbb
mov
cli
mov
xchg
ficoml
js
fsubrs
mov
push
or
out
movb
adc
decl
jo
outsl
add
mov
imul
cld
sub
test
jbe
leave
dec
js
mov
adc
cmc
xchg
daa
or
inc
jo
lcall
insb
test
mov
xor
fisttpll
xor
push
mov
sub
jno
mov
push
and
mov
in
repnz
ljmp
test
mov
int3
xchg
mov
mov
pop
popa
and
mov
lret
mov
jne
xchg
cwtl
push
pop
pop
addr16
test
pop
or
inc
sub
std
push
ret
cmp
inc
mul
jg
adc
adc
nop
sti
daa
pop
xor
mov
mov
clc
add
pushl
mov
mov
in
jbe
pop
jae
push
mov
insb
arpl
std
in
xchg
clc
cmp
rolb
cwtl
jae
adc
xor
scas
lcall
loopne
dec
movsl
hlt
fdivrs
ret
xor
xchg
add
stos
mov
or
nop
xor
in
pop
into
iret
xor
insl
clc
and
mov
clc
pop
mov
test
add
push
mov
ror
xlat
and
sub
adcl
and
cld
pop
push
jl
ljmp
mov
add
shrb
add
or
jge
pop
inc
int3
nop
inc
lahf
inc
inc
or
hlt
xor
popf
stos
xchg
mov
into
push
std
push
stos
or
imul
in
cmpb
fcomps
pushf
sub
fadds
clc
in
inc
clc
dec
popa
adc
pop
pop
mov
shr
fidivrs
mov
inc
mov
lds
pop
mov
cmpsb
pop
test
in
shlb
loopne
jecxz
lret
fidivl
push
sahf
sbb
or
sbb
sub
and
sbb
lret
jo
push
lcall
shlb
inc
jno
xor
ret
rolb
sub
mov
sbb
fistl
push
xchg
mov
or
cmpsl
cltd
mov
mov
add
pop
cmp
inc
enter
jg
cmp
shrb
or
test
xchg
xor
add
inc
adc
cmpsl
ja
add
mov
fistps
lods
xor
push
lods
inc
cmp
pop
loop
or
mov
jmp
daa
lds
movsb
fisubl
cmpsb
cltd
sub
imulb
orb
roll
xchg
and
insb
call
pop
pop
pop
jmp
lods
pushf
mov
mov
mov
rdpmc
cmp
mov
fnstsw
inc
jmp
fs
test
scas
int
lds
addr16
test
ljmp
int3
inc
in
out
jge
push
xorl
push
inc
cs
repnz
adc
gs
int
std
fwait
loopne
arpl
add
inc
inc
mov
push
sub
xchg
repnz
movsl
mov
nop
xor
negb
push
push
sub
out
jp
lds
dec
jne
pusha
iret
ljmp
sbb
std
rolb
in
mov
jnp
dec
bound
out
lds
cmp
dec
cmp
jl
inc
sarl
shlb
fnstsw
xor
ja
cmp
jbe
imulb
js
xchg
mov
lea
xchg
decl
je
fmuls
loop
xchg
mov
cld
out
shl
and
xchg
cli
jns
mov
mov
ja
mov
ds
cmp
sub
fwait
mov
test
xchg
push
jle
idivb
xlat
add
jecxz
xor
sub
xchg
imul
sub
into
push
ja
es
lret
inc
push
leave
cmp
in
into
xor
subl
fsts
push
mov
xchg
xchg
mov
mov
fwait
mov
dec
shlb
sti
and
and
loop
push
sbb
mov
outsl
loope
lahf
pop
iret
aad
mov
lds
jb
in
shlb
fidivl
add
insl
sbb
stos
jo
fdivrl
push
push
inc
lock
cltd
adc
into
mov
cmp
cli
push
mov
mov
sub
int
xor
test
cmp
cwtl
dec
or
mov
push
mov
push
lret
je
pusha
int3
in
push
fcmove
sbb
pop
cmp
add
cmp
adc
push
add
mov
pop
lcall
push
or
mov
fcomip
loop
inc
adc
icebp
add
fs
fdivs
bound
in
xchg
and
jo
dec
push
not
or
shr
inc
push
fs
mov
xor
gs
xchg
xor
ss
push
jmp
test
loope
in
cmp
loopne
aad
inc
scas
insb
loope
add
movsb
ljmp
cld
jno
fisubl
leave
mov
and
mov
cmpsl
imul
inc
pop
out
mov
dec
adcl
rcll
push
ret
and
inc
xchg
insl
sub
iret
xchg
xor
das
mov
add
ljmp
adc
je
xchg
mov
sub
mov
adc
je
out
aas
pop
add
daa
fdivs
outsb
push
cmp
xchg
cli
in
inc
test
mov
cmp
lahf
adc
stc
inc
dec
mov
adc
and
or
sub
xor
and
in
stos
cmp
or
mov
test
cmpsb
les
mov
xchg
movsl
jmp
in
mov
mov
jle
jecxz
mov
pop
fdivs
arpl
sbbl
subb
stos
xchg
push
insl
mov
jno
negb
ss
mov
push
nop
imul
aad
mov
sub
mov
xchg
in
pop
mov
lret
outsl
xchg
icebp
inc
into
out
rclb
cmc
repz
add
or
or
sub
leave
lock
inc
mov
xchg
inc
mov
imul
jb
lods
sub
mov
in
lahf
push
mov
loope
sub
jmp
mov
cmp
dec
imul
int
push
sbb
in
mov
sub
cmp
dec
mov
push
dec
insl
jne
dec
or
xchg
repnz
mov
cmp
lret
data16
sbb
jae
add
pop
inc
call
push
or
stc
gs
add
sub
push
stos
int
add
add
or
add
inc
mov
sub
int
fnsave
pop
xor
testb
adc
divb
int3
rcrb
mov
push
mov
cmpsl
test
lock
pop
ljmp
mov
cmpsl
dec
and
imul
bound
or
lret
cmp
sbb
sqrtps
or
mov
insl
push
insl
push
leave
stos
pop
push
movsb
cmp
cs
inc
or
js
fbstp
mov
movsl
xchg
push
fwait
mov
mov
cltd
cmpsl
pop
roll
mov
frstor
loop,pn
cli
fdivrl
jle
inc
ja
and
rol
jg
lods
push
loope
jb
js
addr16
mov
mov
je
cltd
xchg
sub
mov
loop
pop
int3
sti
push
push
and
sbb
mov
xor
sbb
xor
adc
mov
lock
sarl
movsl
and
jp
adc
sub
sbb
dec
data16
and
stos
dec
pop
out
or
popl
fwait
int3
adc
les
cmp
int3
jo
fisttpll
pop
pop
pop
imul
stos
lea
pushf
inc
in
add
xor
stc
rorb
insb
dec
sbb
stos
jnp
xchg
pushf
add
mov
in
push
cmpl
or
lret
rorl
inc
add
call
xchg
add
xlat
sbb
jbe
iret
or
inc
fdivs
dec
xchg
lock
jl
pop
dec
call
bound
hlt
hlt
mov
mov
cld
pop
sbb
cmpsl
cmpsb
andl
negl
sbb
lods
pop
cltd
aad
cs
js
icebp
sti
mov
lahf
das
jno
add
sbb
sar
or
loop
pop
repnz
aaa
adcl
mov
mov
dec
xor
dec
in
aas
pusha
dec
sahf
mov
test
mov
addr16
aas
sahf
call
dec
or
inc
mov
into
mov
test
push
cmpsl
pop
mov
xchg
fcmovnu
inc
gs
addb
add
nop
cmc
or
push
movsb
or
pop
jle
jbe
and
jge
int
jbe
fcomps
xor
stos
lods
cmp
add
sub
movsl
pop
call
and
mov
fadds
mov
xchg
nop
movsl
fsubp
test
in
sbb
test
mov
mov
int
cltd
mov
fxch
ja
mov
arpl
and
test
cld
xlat
aam
mov
push
clc
pop
push
or
and
call
call
out
jbe
fisubs
aam
jnp
pop
iret
lds
pop
shrb
fxsave
inc
jle
xchg
sub
loop
imul
add
pop
stos
xor
popf
or
lds
cmp
ljmp
or
push
mov
pop
xchg
mov
fcomps
mov
dec
pop
inc
cwtl
jbe
in
xchg
dec
loopne
mov
pop
adc
xor
or
fmuls
and
insb
mov
inc
xor
cmpsb
fnstcw
sahf
fdivp
lcall
out
in
das
je
insb
out
idivl
call
insl
and
fsubr
mov
adc
movsb
stc
cmp
dec
lock
sbb
sbb
mov
jne
pop
mov
js
xchg
dec
lds
adc
cmpsl
or
iret
push
shrl
out
repz
xchg
ljmp
bound
push
sahf
lods
push
jbe
psrlq
xchg
movsl
cmp
xchg
pop
dec
out
xor
mov
ljmp
cmpsb
sub
jb
and
insl
push
sbb
inc
scas
cmp
ret
mov
icebp
cmp
xorl
cmp
add
inc
and
aaa
inc
lock
jle
cmc
lds
push
adc
shrl
sub
shll
xchg
cmp
in
test
and
jb
xchg
fcoml
xor
jnp
adc
or
dec
fdivrs
mov
dec
mov
cmp
pop
test
xchg
push
mov
aas
cmp
insb
shrl
movsl
out
sub
xor
imul
ret
mov
mov
push
jmp
and
loop
not
add
sub
out
ds
jp
push
hlt
cmp
inc
and
shl
mov
and
lret
out
test
push
xor
mov
mov
pop
in
pop
xchg
cld
ret
clc
lds
mov
push
mov
xor
ja
fildl
scas
and
enter
pop
dec
in
arpl
jge
dec
out
lds
jl
jo
mov
or
out
leave
arpl
pop
jo
fs
aas
ja
cmp
movsl
mov
in
out
iret
inc
outsl
sub
dec
mov
loop
push
fdivs
rcll
jno
push
jmp
sub
ss
jne
mov
imul
sub
mov
mov
and
cld
adc
outsb
push
add
hlt
push
adc
int3
lcall
sbb
sti
fwait
mov
inc
jecxz
jnp
jo
xchg
sub
outsb
lret
push
jecxz
inc
in
jge
and
orb
cld
stos
push
mov
leave
fidivs
push
inc
jge
jl
and
cwtl
mov
clc
cmp
subb
push
stc
shlb
adc
add
mov
or
into
iret
add
mov
call
cmpl
imul
lds
add
cmp
sbb
cmpsb
out
adc
sbb
ja
loopne
mov
dec
mov
sysenter
jo
in
mov
push
pop
jbe
xchg
push
mov
sbb
scas
in
dec
ds
adc
push
mov
cmp
data16
sub
gs
adc
mov
lea
lea
cmp
adc
cmp
adc
sub
dec
adc
es
and
sbb
sub
dec
movsb
xor
fidivl
leave
in
test
ljmp
insb
mov
sbb
test
add
das
push
push
or
aam
test
xor
and
gs
sti
ds
test
mov
ficompl
sbb
gs
pop
dec
cwtl
dec
in
sub
push
pop
xor
sub
add
pop
dec
or
mov
cmc
outsb
inc
sub
mov
je
mov
or
into
mov
push
sub
jb
ret
jne
and
and
cmp
push
lea
dec
shrb
mov
je
jo
adc
push
scas
fdivl
ja
pop
xchg
cmp
cmp
cmp
push
sbbl
hlt
adc
ja
cmpsl
cmpsl
jns
xor
inc
push
inc
dec
and
stos
jae
bound
daa
shlb
xchg
xchg
xor
or
xor
lea
ja
mov
aam
sub
or
nop
xor
jl
adc
loope
mov
sub
das
jp
xchg
test
cmc
out
in
inc
daa
pushf
mov
rol
adc
inc
movsb
ljmp
negb
or
fst
aas
lret
lds
push
push
cmp
push
aam
pop
adcb
add
push
pop
aas
fstpl
sub
aas
stos
pop
push
test
xor
pushf
insl
faddl
jbe
aad
xchg
mov
scas
es
shr
test
push
in
add
repnz
ficompl
ljmp
add
and
js
bound
imul
mov
xchg
inc
addb
gs
lcall
gs
std
cltd
enter
imul
xlat
aam
popf
arpl
and
mov
imulb
jle
les
xchg
or
cmpsl
lods
shll
cld
cwtl
push
lret
dec
sub
adc
xchg
arpl
rcr
sti
aas
cmp
push
test
das
in
jnp
push
cmp
mov
scas
setno
and
lds
or
mov
add
cmpb
dec
movsl
fnstsw
xchg
mov
jb
cmpsl
cwtl
dec
and
and
jne
or
cld
mov
sbb
popf
fmull
sbb
sbb
mov
and
or
cltd
addb
mov
icebp
mov
jno
xchg
sub
pop
mov
scas
movsb
sbb
add
xchg
imul
stos
xor
mov
test
imul
mov
cld
adc
mov
mov
rorb
mov
or
stos
pop
mov
mov
dec
jmp
outsb
aas
dec
xorl
sub
sub
pop
push
fs
sub
cmpsb
mov
daa
data16
jmp
dec
fdivl
call
in
ret
out
outsl
pop
mov
scas
test
jmp
sti
sub
mov
lock
and
cld
stc
adcb
push
inc
mov
mov
filds
inc
pop
pminub
cmp
les
xchg
fwait
mov
arpl
in
outsl
rcrb
inc
and
jmp
ss
pusha
and
mov
mov
xchg
and
cmp
arpl
loope
fcmovnbe
iret
mov
push
xchg
jns
or
xor
std
pop
or
mov
xor
jecxz
and
sbb
and
fildl
loopne
sub
rcll
andl
push
cmp
mov
lea
fbld
insl
scas
mov
jecxz
pop
add
and
out
cs
testb
das
add
inc
call
out
add
std
shlb
dec
stc
add
ret
rcl
inc
push
mov
jbe
adcb
mov
cmp
mov
push
adc
es
roll
and
incl
iret
out
repnz
and
xchg
sbb
js
pusha
sub
test
arpl
in
das
movsb
enter
xor
loop
out
repz
mov
mov
loop
fbstp
ja
sub
ds
notb
mov
pop
push
dec
insl
mov
pop
inc
jo
push
es
ja
mov
adc
test
and
xor
push
sbb
sahf
jecxz
mov
cmp
stos
add
arpl
add
in
inc
dec
mov
jno
cmp
stc
dec
cmp
div
repnz
out
mov
js
les
mov
jnp
loopne
fwait
scas
inc
adc
imul
or
outsl
cmp
and
fstpt
clc
pop
push
cmp
lock
or
sub
sub
xor
or
hlt
ljmp
and
sub
in
mov
out
dec
inc
xchg
or
mov
rcrl
ljmp
cmp
enter
mov
mov
sub
mov
and
dec
inc
lods
movsb
pop
adc
xor
cmp
mov
mov
fisubl
sub
daa
xchg
cmpsb
outsl
popa
inc
repz
out
push
inc
xchg
stos
and
pop
mov
pop
jbe
sbb
mov
push
adc
fs
pop
ljmp
ljmp
mov
jmp
jp
enter
xor
push
mov
sbbl
cmp
or
adc
push
sub
dec
fnsave
stos
inc
loope
pop
cmp
pop
and
mov
jno
and
push
inc
into
push
inc
jns
clc
push
movsb
add
fs
jae,pn
sub
ficomps
stc
sahf
pop
or
jb
aam
fistpl
cmp
nop
jp
ss
divb
pop
inc
sub
pop
inc
shlb
in
ja
push
cmp
ljmp
rcl
mov
cmp
lcall
test
mov
jno
gs
pop
xchg
push
cmpb
cmp
xchg
push
iret
shlb
ret
mov
popf
adc
push
adc
and
and
cmc
stos
cs
loop
dec
mov
inc
push
repz
fwait
jne
push
sbb
inc
movsb
cmpsb
ljmp
mov
or
insb
and
xor
lds
sbb
jmp
jle
cs
hlt
test
and
daa
mov
push
ja
sbb
cltd
rorl
pushf
push
mov
add
fists
jg
jp
insl
xorb
incl
mov
pop
add
sbbl
add
sahf
rcll
push
jae
loopne
in
jbe
fstps
aas
and
test
and
nop
dec
cmpsb
adc
or
cmp
cmp
in
mov
xchg
test
stos
ja
lods
add
arpl
and
xor
inc
and
stc
push
jae
sub
inc
inc
xor
daa
lods
gs
jmp
inc
das
adc
mov
sub
jae
stos
mov
pop
push
dec
jns
js
lret
loop
push
push
stc
js
pop
div
adc
insb
scas
adc
out
adc
mov
pop
loop
mov
cmpsb
and
xlat
mov
mov
jg
stc
addl
jno
cmp
in
std
std
into
jecxz
xchg
stos
fwait
out
pushf
adc
push
movsb
lret
imul
xchg
arpl
js
ret
adc
repz
test
xorb
mov
cmp
sbb
std
xlat
subps
add
pop
dec
scas
fsubrl
jnp
mov
inc
inc
xchg
add
dec
push
add
rclb
fildll
sti
or
dec
in
sub
imul
xchg
jmp
dec
xor
or
jg
jecxz
inc
or
std
lock
lea
hlt
xor
into
nop
jns
or
std
mov
dec
sub
cmp
mov
lret
and
lds
sbb
mov
push
stos
fucomi
aam
fdivrs
xlat
sbb
outsb
hlt
cmp
clc
cmp
into
inc
test
inc
cld
mov
xchg
insl
xchg
stos
pop
mov
inc
inc
enter
xchg
jle
dec
push
int3
lcall
cmp
sub
shll
add
bound
xchg
add
ja
lds
push
cmpsb
call
std
je
or
and
mov
aaa
insb
mov
pop
and
icebp
shlb
mov
sbb
xor
es
testb
ret
mov
call
sahf
mov
dec
mov
lods
pop
fstp
inc
enter
andl
in
xchg
into
or
out
fildll
push
mov
call
dec
das
jnp
divl
xchg
jmp
mov
mov
adc
jo
mov
test
rolb
jb
xchg
daa
insl
repz
jmp
in
loope
mov
fbstp
mov
loope
insl
out
idiv
inc
lret
insl
xchg
mov
and
sbb
pmaddwd
clc
fwait
jmp
pop
dec
mov
mov
jne
cltd
and
aad
int3
jecxz
cmp
dec
inc
subb
cli
xor
xlat
jb
outsb
je
aam
mov
popf
adc
js
sbb
xchg
loope
hlt
paddsw
int
shrb
xlat
aad
cmp
in
push
mov
and
bound
pop
jmp
cmpsl
jb
clc
fimull
lea
fstps
dec
mov
sub
outsb
and
gs
push
inc
sub
cmp
push
jne
mov
js
daa
and
dec
fwait
popa
mov
pushw
arpl
xor
pop
ljmp
popf
push
fcmovnb
inc
adc
ljmp
aas
xor
jle
dec
xchg
sbb
mov
je
jae
js
mov
les
mov
leave
push
jecxz
imul
test
dec
jno
mov
pop
stc
sub
shrb
js
enter
movsl
ljmp
test
inc
inc
mov
push
cltd
push
scas
pop
test
jns
scas
mov
push
sahf
mov
sbbl
xlat
and
shll
mov
movsb
push
inc
lea
cmp
sahf
add
loopne
rcr
cmpsl
lret
or
adc
pop
xor
incl
mov
mov
in
cmp
scas
adc
mov
faddl
mov
mov
mov
call
xlat
lret
rclb
mov
jge
fdivrl
shrb
cwtl
xchg
or
mov
scas
xor
xlat
mov
imul
cmp
movsb
dec
ret
adc
or
cmc
out
push
mov
jo
into
test
jb
sub
xchg
out
push
fisttps
das
and
into
js
dec
shl
mov
cmpsb
outsb
shlb
jg
sub
adcl
dec
dec
mov
lods
adc
cmpsl
sub
bound
jno,pt
xlat
or
stos
mov
rcrb
addb
lret
inc
sbb
mov
in
jp
inc
dec
push
ficoms
push
orb
or
push
shrl
pusha
sub
test
movsb
or
pop
cmp
fdivl
or
pushf
lahf
jo
pop
push
inc
dec
push
out
or
arpl
mov
mov
xchg
insl
push
dec
xchg
jne
jmp
loope
push
mov
stos
sub
paddusb
int
fsubs
cmpsb
sub
sbbb
testb
insl
in
mov
stc
mov
in
fisubl
push
add
xchg
hlt
lds
cmpsb
adc
jne
lcall
mov
pop
fisubs
int
mov
ss
xchg
popf
xor
jp
xchg
xor
push
adc
loope
js
sub
je
jne
into
lock
es
imul
mov
daa
lods
sub
jl
pop
add
jecxz
ljmp
cmpsb
outsb
lret
loopne
hlt
inc
pop
addl
out
mov
popf
lods
inc
test
and
pop
scas
adc
or
or
add
leave
mov
das
fildl
xor
pop
mov
sub
or
pop
cmp
fsubrl
jnp
lahf
sti
imul
mov
enter
jne
cmp
and
sbb
out
pop
mov
mov
mov
shlb
lret
mov
js
push
jnp
rcrl
jge
mov
xor
xor
je
mov
cmp
int
pop
xchg
jmp
pop
mov
arpl
fmuls
loopne
out
rcrb
sbb
dec
scas
lret
cmpsb
lcall
insl
adc
outsl
or
xchg
outsb
aas
mov
adc
adcb
loop
inc
adc
lcall
fiadds
fldcw
cmp
add
sub
sub
ljmp
pop
data16
stos
jecxz
inc
jge
or
xchg
fwait
aaa
mov
repnz
push
cld
cmp
push
pop
stc
and
mov
cmpsb
xor
adc
fcmovu
mov
inc
movsb
shl
movsl
icebp
mov
dec
sub
pop
insb
cwtl
mov
push
insl
pop
or
mov
xchg
in
add
inc
adc
xorl
rclb
clc
cmp
fildll
inc
sub
les
pop
movups
add
cmp
push
inc
cwtl
es
sub
xchg
pop
lret
movsl
inc
loopne
sahf
fs
mov
fldl
sarl
dec
ljmp
pop
test
push
cli
popf
mov
dec
fwait
addr16
inc
lahf
arpl
sarl
dec
xchg
scas
mov
push
jbe
mov
fidivrs
scas
push
scas
or
cmp
pushf
inc
sbb
pop
and
mov
pusha
mov
lret
rolb
jge
je
push
sbb
and
dec
jge
int3
adcl
fistpll
mov
pop
add
inc
ret
rcll
mov
jmp
jno
ret
loope
xor
pop
add
pusha
sub
sub
fildl
in
movsb
lods
stc
or
cmp
pop
cmp
jno
pop
xchg
dec
add
aaa
or
cmpsb
outsb
out
mov
mov
xchg
add
testb
cmp
mov
push
adc
es
fsubr
add
xor
addr16
cltd
test
mov
push
cmpsl
test
addl
or
or
pop
sub
daa
add
lret
xor
sbb
and
lock
mov
clc
inc
cmp
xor
pop
mov
fdivs
sub
cwtd
push
xchg
xor
mov
add
jmp
gs
int3
or
pushf
pop
jns
ret
ucomiss
out
dec
dec
js
orb
ret
mov
xchg
aam
add
cmp
xchg
lret
ja
popa
ja
test
lahf
pop
fmull
ds
fdivl
push
jo
outsl
addb
jb
fscale
ret
push
add
mov
xchg
sub
stos
mov
jns
add
ja
test
aam
push
push
cmpsl
in
pusha
inc
inc
mov
add
sub
sub
xor
adcb
xchg
add
cld
bound
imul
jbe
sbb
mov
push
lds
lock
stc
scas
gs
xor
lea
lahf
mov
cmpsb
sbb
mov
mov
mov
or
mov
movsl
inc
mov
jg
leave
dec
fidivs
mov
insb
and
mov
dec
xlat
pop
cmp
repz
out
lret
fistpll
jle
daa
cmp
mov
pusha
shrl
mov
inc
dec
mov
into
jb
push
dec
pusha
lahf
xor
sbb
mov
sbb
icebp
add
pop
cs
shl
pop
es
jecxz
adc
sub
jns
jae
and
jp
shll
xchg
shrb
sbb
jge
aam
xchg
cmp
mov
mov
cmp
lahf
mov
push
es
fcmovu
mov
jg
rclb
xor
aaa
sbb
lods
push
adc
in
mov
cmc
pop
inc
lret
sub
fwait
std
shll
sub
rorl
inc
fmull
dec
xor
lahf
aam
test
pop
or
cmc
int3
pusha
in
lcall
cmp
xchg
dec
fstl
mov
mov
cld
stc
sahf
mov
jge
sub
fsts
iret
fidivl
mov
ret
std
pop
jecxz
aaa
push
and
pop
cltd
ljmp
xor
push
sti
insb
jb
and
sahf
lods
movsl
gs
mov
xchg
ja
inc
sbb
xchg
mov
cwtl
xor
hlt
jmp
mov
shll
inc
lret
shll
push
and
adc
pop
aam
xchg
in
popa
aam
mov
dec
leave
jnp
sti
dec
xchg
in
cmpsl
push
xor
lret
in
fistpll
ljmp
cwtl
mov
push
insb
sub
js
jmp
cmp
jbe
int
popa
jg
in
sbb
jnp
pop
push
repz
fiadds
push
stc
inc
push
mov
cmp
shl
pop
idivb
in
bt
adc
test
leave
sub
cmp
cmp
cs
rclb
pop
and
insl
cmp
fdivrl
cwtl
subb
inc
out
mov
cmc
pop
push
loop
push
fwait
ret
loope
jb,pn
test
outsl
aad
pop
pop
test
test
mov
mov
dec
inc
inc
insw
fs
out
mov
test
je
sbb
pop
jl
xor
out
and
hlt
js
cmpsb
xor
lock
sbb
bound
jb
pusha
xor
movsb
cmpsb
stc
fs
out
jo
loop
into
add
sbb
sti
mov
push
shl
jne
mov
cld
int3
pop
fcompl
scas
mov
test
inc
adc
les
mov
pop
fbld
aad
mov
sub
jns
jecxz
inc
sbb
jecxz
ss
sub
bound
mov
adc
inc
cmpsb
jg
and
aad
cmp
fwait
daa
mov
push
cmovns
and
mov
jbe
pop
jge
nop
das
loopne,pt
inc
in
leave
rcr
cmp
rolb
rcll
repz
outsl
xor
inc
fsub
xchg
mov
js
inc
fs
dec
jg
add
push
lock
sahf
push
dec
lds
sbb
roll
cltd
fldenv
inc
in
orb
scas
jmp
xor
mov
jp
notb
into
add
in
push
decl
loope
fwait
dec
aaa
ja
sub
mov
mov
into
mov
faddl
or
pop
pop
out
sarl
nop
icebp
jmp
cmpsb
adc
aam
xchg
in
push
pushf
jno
loop
test
push
fimull
int
push
add
cmpsb
mov
mov
lock
mov
fcomps
jno
adc
imulb
fadd
mov
xor
jmp
fcompl
call
inc
mov
mov
mov
xlat
das
roll
rclb
inc
in
cmp
ret
mov
mov
jg
mov
cmpsl
loope
mov
sbb
cmp
roll
dec
stc
sub
xchg
or
cmp
xchg
lock
out
cmc
adc
inc
aas
cmc
stos
fisubl
dec
fwait
lret
or
xchg
lock
fld
lcall
scas
les
leave
adc
jae
jle
addb
scas
add
into
mov
and
mov
sbb
pop
in
push
sub
or
and
dec
xchg
sbb
xchg
add
jle
ja
jle
push
xchg
dec
enter
rol
shl
sub
mov
cmp
notb
cli
ja
mov
lahf
lds
cltd
mov
jecxz
inc
fs
add
mov
push
sub
mov
imul
daa
cmp
mov
xchg
xlat
dec
lcall
outsb
test
ja
or
hlt
xchg
sub
mov
scas
ss
lcall
imull
movsb
les
inc
pop
icebp
fsts
push
lock
cmp
popa
mov
scas
jns
sbbl
notl
dec
push
imul
mulb
pop
mov
sub
pop
pop
sbb
xor
mov
mov
sbb
int3
pop
mov
adc
push
lret
pop
pop
dec
sar
stos
leave
jmp
xchg
aad
jmp
dec
stos
shrl
decl
mov
test
cltd
je
test
push
cmpsb
ja
lahf
decb
cmp
jno
sahf
cmp
sub
loopne
dec
jge
mov
sbbb
pop
cmp
and
scas
arpl
mov
test
and
cmc
mov
pop
mov
ficompl
add
inc
push
aam
call
xor
aam
and
stos
jbe
in
rolb
push
inc
imul
subl
mov
cld
mov
enter
sbb
jnp
popa
ja
dec
or
stc
push
mov
movsl
adc
dec
call
pushf
cld
cmp
ja
jp
lcall
sub
inc
pushf
mov
je
lcall
jb
out
daa
daa
push
mov
mov
cmpsb
shll
xchg
dec
xchg
pop
call
push
outsl
pop
dec
mov
mov
and
popf
adc
pop
inc
pop
leave
mov
add
or
adc
push
xchg
add
iret
dec
fxch
push
test
push
aas
inc
dec
xchg
leave
ret
in
fistl
mov
xchg
mov
mov
clc
ljmp
lret
in
shlb
inc
fisubs
popf
ja
xor
xchg
xor
push
test
cmp
lea
js
enter
sbb
insb
adc
mov
cmp
pushf
push
enter
xchg
pushf
push
and
cmpsl
stc
pop
push
aam
jbe
inc
sub
fstpt
mov
fisubl
cmpsb
out
rcrl
fcomps
pop
xchg
xor
sbb
xchg
jmp
popf
jge
arpl
push
js
xor
sbb
cmp
les
pop
aad
mov
add
cwtl
add
add
and
push
adc
add
popf
cmc
push
ret
xor
repnz
cmp
outsb
enter
repnz
inc
mov
imul
cmpl
ffreep
dec
aaa
iret
sub
jb
push
or
cmc
mov
ljmp
or
les
add
add
xor
shr
pop
shll
mov
lods
mov
iret
mov
and
sbb
aad
test
mov
push
adc
xor
add
sbb
loopne
mov
cmp
test
imul
or
mov
sub
lods
rcrl
shlb
fwait
imulb
xlat
test
pop
pop
test
fadds
out
push
loope
rcll
orl
xor
je
les
mov
mov
sub
test
push
cli
imul
je
jle
cmp
nop
sbb
int3
clc
xor
fidivs
add
sti
dec
cltd
pop
lds
and
stc
xchg
icebp
sub
sub
pop
mov
cmp
sbbb
imul
dec
scas
lds
push
imul
call
pop
jp
xchg
aad
xchg
mov
xor
sbb
inc
jb
mov
inc
pop
sbbb
cmp
jmp
add
sbb
test
addr16
shll
mov
dec
mov
stos
jb
fcomip
mov
insl
sub
inc
sbb
pushf
out
xor
xchg
shl
cmp
sub
cmp
loope
in
dec
movsl
sub
enter
add
xchg
insb
or
dec
mov
mov
fsubp
xchg
decb
in
call
sbb
ds
dec
aam
lret
or
xor
push
dec
inc
in
mov
adc
adc
sbb
or
sbb
mov
or
cld
nop
inc
mov
xchg
out
push
dec
sbb
xchg
stos
bnd
in
dec
popa
aam
cli
mov
aas
push
ret
push
and
and
or
lret
dec
daa
jo
subb
in
xor
leave
cld
cmp
xchg
ljmp
dec
jnp
adc
sbb
es
stc
push
inc
movsb
jp
xchg
loope
adc
sub
or
in
shlb
in
pop
scas
mov
ret
ret
cmc
lds
or
fmull
fisttpl
cltd
lahf
inc
push
xchg
test
sub
addr16
jl
mov
fildll
imul
pop
sbb
fidivl
inc
sbb
pop
sbb
and
adc
inc
xorb
push
xor
iret
lcall
push
fs
pushl
roll
and
aam
cltd
or
adc
les
xor
xchg
sub
repnz
sub
sub
lods
cmpsl
pop
xchg
push
pop
fstl
and
cmp
inc
xorb
mov
out
mov
mov
enter
add
add
test
jle
dec
cmp
pop
pop
and
mov
ret
pop
into
inc
push
leave
jecxz
pop
mov
push
cs
push
stos
fidivrs
push
orl
cltd
out
mul
andl
fisttpl
arpl
faddp
cmp
pushf
xor
adc
sti
call
mov
sahf
in
xor
frstor
push
mov
stos
inc
jb
adc
lods
pop
pop
int3
adc
inc
inc
xor
dec
imul
cs
pop
jge
xchg
cmp
adc
mov
dec
push
sbb
adc
cmpsb
pop
je
dec
fst
aas
jmp
scas
and
jg
lcall
add
fstps
mov
push
inc
in
push
cltd
pop
jnp
pop
mov
mov
shlb
icebp
and
aaa
aam
adc
sub
fstpt
pop
adc
loopne
mov
lret
mov
nop
dec
fmuls
stos
xor
fwait
in
fldcw
pop
inc
inc
lods
sahf
fs
adc
push
push
dec
jne
ss
jne
ret
pop
jge
lods
mov
pop
jp
ficompl
inc
in
adc
in
xor
scas
jge
mov
jbe
sub
cmp
mov
pop
aas
loopne
jmp
mov
jo
das
mov
jne
mov
out
test
jo
std
adc
mov
or
jecxz
imul
or
mov
das
imul
das
imul
pop
mov
pop
scas
jbe
movsl
inc
pop
push
je
es
flds
fdivr
lcall
mov
sti
add
or
jnp
mov
push
and
push
orb
std
lock
dec
subl
call
aad
mov
mov
dec
fwait
iret
inc
inc
or
jle
fcmovbe
and
mov
xchg
and
lret
pop
xor
lods
sub
mov
push
fisttpl
mov
jle
out
dec
or
imul
test
inc
int
xor
test
sti
mov
push
in
pusha
jnp
clc
cmp
dec
sti
fists
pop
out
push
shrl
adcb
sub
arpl
jmp
add
inc
sar
insb
xor
scas
inc
clc
push
rcll
incb
sbb
xor
xchg
addr16
xor
pop
in
sti
lret
icebp
ficoml
pop
jbe
insb
xchg
nop
bound
adc
fdecstp
pop
out
push
inc
push
cmp
nop
out
into
mov
pop
nop
jp
into
out
ljmp
mov
daa
mov
mov
mov
scas
das
xchg
clc
in
call
xor
mov
dec
mov
sub
pop
int3
xchg
adc
xchg
dec
cmp
dec
fucompp
in
movsl
lods
stc
repz
int3
imul
fstpt
repnz
dec
sbb
and
out
cmpsb
push
fistpll
cmc
inc
jg
mov
add
nop
xchg
out
mov
movsb
push
rcrb
lock
and
push
mov
pop
mov
sub
inc
or
insl
lret
inc
iret
loop
adc
rcrb
and
lock
andl
adc
lahf
bound
adc
insb
cwtl
out
jno
iret
daa
std
inc
out
lahf
clc
outsl
repz
movsb
pop
fsubs
sub
pop
mov
loope
sahf
movsb
inc
sbb
aam
in
sti
mov
aaa
pop
xchg
daa
daa
pop
clc
andl
pop
pop
xchg
dec
sub
loop
fwait
pop
gs
andb
aad
aas
inc
and
pop
dec
push
nop
es
sbb
pop
roll
in
push
push
mov
outsb
push
inc
clc
push
loop
inc
repnz
mov
movsb
xchg
jbe
xchg
cmovbe
dec
in
pushf
daa
fs
scas
xchg
cmp
dec
jmp
fdivrs
or
js
jmp
fnstcw
mov
dec
js
test
subb
sub
jge
cs
mov
sbb
aaa
imul
or
out
and
dec
push
sbb
daa
lcall
sub
push
sub
inc
sub
fnstsw
pop
pusha
mov
aam
sub
mov
push
sbb
push
xlat
iret
rorb
lods
mov
adc
mov
cmpsb
sub
stos
pop
or
int
aaa
and
rol
fisubl
and
insl
mov
mov
mov
jle
out
cmp
fidivs
xchg
mov
or
sahf
in
push
mov
out
xchg
xchg
dec
aam
stc
and
push
dec
fabs
in
push
xchg
scas
inc
push
pop
xlat
in
mov
stos
icebp
adc
aam
pop
adc
xchg
dec
jb
mov
fs
cmp
in
inc
mov
mov
int3
jb
ud1
outsb
lret
cld
out
rcrl
fimuls
scas
dec
mov
mov
mov
mov
dec
inc
and
out
dec
mov
and
arpl
sbb
push
sub
and
in
fs
popf
mov
imul
and
loope
mov
das
adc
inc
inc
clc
les
xchg
and
mov
add
push
mov
sbb
mov
push
leave
out
jns
xchg
inc
sub
push
mov
fnstsw
dec
pop
push
in
and
dec
rorl
cmp
pusha
xchg
pop
dec
sbb
cwtl
jnp
scas
jo
mov
push
rcll
push
insl
adc
adc
adc
jmp
mov
iret
fmuls
xor
repnz
cmc
inc
lahf
popa
fadd
cmp
push
popf
in
int3
popf
daa
test
pop
push
mov
mov
cmp
imulb
pushf
das
imulb
leave
push
scas
sbb
mov
pop
cltd
lds
adc
mov
je
das
dec
leave
adc
cli
cmpsl
test
jnp
or
xchg
lods
push
data16
leave
and
inc
sub
xchg
and
cltd
lea
stos
cmp
out
push
add
push
aaa
fcoms
mov
rolb
pop
sahf
outsb
pop
cmp
out
loope
test
pop
mov
dec
mov
cmp
pop
jle
sbbb
push
add
xor
notl
push
xor
push
or
lea
test
inc
adc
pop
fnstenv
shrl
ds
je
inc
mov
stos
inc
call
jmp
push
xchg
in
push
stc
jbe
out
jno
mov
jecxz
xor
fnstenv
xchg
push
jl
push
sbb
inc
push
fldt
mov
push
xchg
cmp
in
test
inc
push
fidivs
rep
call
push
or
xor
mov
imul
mov
xchg
xor
jmp
arpl
rcrb
mov
je
fstpt
mov
mov
or
and
popa
xchg
push
mov
xorb
in
mov
popw
pop
movsb
clc
mov
repnz
divl
mov
fisubl
ficomps
jmp
dec
test
ss
fs
in
cmp
pop
xchg
fnstsw
testl
jg
xor
xchg
pop
push
gs
dec
enter
jne
dec
push
inc
int3
adc
fnstcw
ret
add
jp
cli
xchg
dec
rorb
mov
push
fistl
in
int
inc
icebp
or
andb
loop
adc
out
cmp
xchg
mov
inc
nop
mov
mov
enter
sbb
adc
sbb
adc
sbb
cli
pushf
mov
inc
lods
jb
mov
push
mov
xchg
int
fwait
push
xchg
sub
mov
les
lods
push
sub
jne
mov
push
shlb
sub
push
shl
sub
adc
inc
push
sub
sbb
sub
pushf
and
enter
dec
shlb
testb
icebp
outsl
test
andb
loop
push
sub
mov
ljmp
out
or
nop
mov
inc
push
and
adc
xor
pushf
stos
or
jecxz
xchg
and
mov
hlt
lods
aad
sbbb
sub
sub
aad
fcmovbe
mov
jecxz
aaa
in
dec
scas
push
lret
shll
mov
stc
outsb
jl
sarl
dec
pop
and
out
cmc
stos
inc
adc
adc
imul
iret
inc
ja
sarl
lock
adc
sub
jo
jge
xchg
clc
inc
adc
mov
inc
xlat
sub
outsl
int
mov
fildll
and
cmc
decb
cmp
push
ss
test
push
sti
mov
sub
adc
mov
pop
mov
pop
inc
cmc
cmp
cmp
cmc
add
adc
pop
mov
xor
enter
sbb
xchg
push
xchg
jmp
scas
adc
into
push
mov
cmc
addl
xor
dec
int
lods
add
dec
sarb
lcall
hlt
push
mov
xlat
fnsave
adc
mov
cli
stc
xchg
jae
push
rorb
test
stos
les
jg
movsb
lea
inc
xchg
js
sub
cmpsl
push
dec
shrl
inc
in
shlb
inc
insb
add
lds
add
adc
add
lahf
sahf
lahf
or
dec
xlat
xor
ja
repz
pminsw
push
pop
repz
cmp
push
stos
in
dec
and
xor
adc
outsl
aad
push
aam
and
mov
std
aad
mov
adc
and
and
movsl
adcl
bound
inc
mov
add
dec
iret
mov
nop
and
aas
cmp
push
cli
xchg
movsl
lods
adc
dec
mov
jl
dec
addl
cli
mov
ror
and
mov
aas
inc
jbe
dec
dec
mov
pushf
sarl
lahf
or
sahf
jge
or
lahf
aas
xor
jmp
test
push
lods
jno
xor
or
inc
movsl
into
mov
nop
outsl
mov
sub
xchg
mov
js
in
or
testb
push
fdivrl
mov
and
and
mov
les
lretw
dec
inc
ret
jle
and
ljmp
fld
sbb
cmpsb
mov
ret
xchg
fdivrl
or
mov
ffree
aas
je
arpl
movsl
jns
cli
in
ja
inc
mov
movsb
dec
bound
incl
sbb
aas
pop
xadd
jg
orb
and
dec
movl
adc
push
adc
les
mov
mov
mov
insl
dec
mov
scas
subl
ja
ja
push
ret
leave
imul
repz
inc
inc
das
inc
clc
shr
int
push
mov
jp
xor
pop
addb
repz
into
or
aam
mov
js
pop
xchg
xchg
push
push
and
jl
daa
xchg
mov
rorl
cld
aam
xchg
pop
mov
xorl
pop
inc
fcompp
mov
not
orb
std
lret
jmp
mov
inc
mov
outsb
adc
stos
fwait
pop
repnz
rorl
xchg
mov
cli
cmpsb
dec
int
fwait
xchg
es
inc
jmp
aad
inc
cmp
inc
ret
fucomi
dec
repz
fldl
lds
xchg
ja
out
fisttpl
push
jmp
sbb
cmp
pop
test
aad
imul
test
dec
pop
lcall
stos
sub
hlt
mov
imul
icebp
mov
stos
pushf
pop
dec
arpl
pop
push
cmpsl
sbb
daa
inc
cwtl
sbb
ret
cmp
shlb
sbb
ss
pop
sbb
out
out
outsl
in
xor
leave
mov
mov
in
add
adc
movsb
adc
jbe
cmpsl
mov
cltd
add
push
jno
les
mov
add
or
nop
sbb
jno
mov
cmp
int
jle
pop
std
inc
ss
aaa
js
xchg
lahf
mov
dec
add
inc
dec
cld
dec
and
mov
int3
dec
in
jae
popa
sti
cmp
dec
stos
ds
jle
sub
rorb
xor
test
cmpsl
sub
cmp
or
inc
std
mov
lds
jge
cmp
fdivr
xchg
push
popa
aad
mov
and
insb
imul
cmpsl
fdecstp
sub
jle
leave
enter
and
fidivrs
and
pusha
cmc
hlt
push
mov
adc
push
sti
lods
or
pop
xchg
sbb
and
es
mov
insb
xchg
inc
stos
jge
mov
adc
test
out
popa
mov
push
mov
test
clc
nop
mov
mov
jnp
cmp
add
jmp
add
lret
insl
addr16
scas
push
sbb
outsb
fs
inc
and
pop
test
outsl
call
inc
mov
jae
popf
cwtl
mov
fs
xor
in
out
push
les
or
fistps
out
inc
mov
sti
les
out
fsubrs
repz
fadd
adc
enter
mov
stc
icebp
subb
sub
jno
push
notb
lahf
aam
cmp
mov
pop
arpl
push
in
hlt
loopne
js
mov
icebp
and
scas
in
lret
mov
dec
mov
testl
test
clc
cltd
scas
inc
scas
out
aad
jp
xchg
mov
mov
mov
out
dec
lods
add
pop
push
pop
sbbb
dec
cli
jns
sbb
in
push
fbstp
enter
inc
push
push
popa
cs
leave
or
pushf
push
xchg
roll
xlat
insb
sub
push
mov
jb
cmp
mov
ljmp
inc
sub
sbb
int
adc
add
mov
lcall
jge
sti
es
xlat
push
pop
jno
pop
push
cwtl
cmp
mov
bound
jge
inc
add
cld
or
and
pop
ljmp
push
ret
fisttpll
mov
inc
push
imul
std
mov
hlt
xlat
insl
aad
fstp
inc
lahf
dec
jmp
sarb
dec
jle
loope
push
rorb
sbb
mov
sub
xlat
ret
mov
stos
inc
fisubrs
neg
ljmp
lods
cmpsl
pop
mov
pop
or
sub
cwtl
xchg
popf
mov
arpl
inc
add
mov
adc
dec
out
clc
mov
sub
mov
mov
jl
rorl
dec
outsl
xor
pop
stc
loope
jl
pop
or
stos
stos
cld
mov
iret
adc
xchg
dec
jle
test
test
sub
cmpb
jne
mov
movsl
test
stos
insb
icebp
orl
shlb
test
aas
test
leave
fwait
aaa
adc
mov
enter
imul
cltd
push
shlb
sar
jl
inc
lods
sbb
xchg
xchg
mov
jmp
mov
xchg
mov
inc
push
fidivrs
push
adc
ret
call
dec
pusha
xor
cmpl
cwtl
pop
frstor
fsubrp
in
mov
inc
das
out
fsub
adc
or
fwait
jo
dec
out
or
sbb
aaa
notb
ret
add
into
stc
rolb
push
dec
addl
xchg
mov
ss
pushf
enter
ljmp
sub
xchg
xor
sub
sarl
pop
cmp
inc
lods
mov
out
xchg
fisubrs
lcall
sub
mov
mov
leave
stos
xchg
jge
rclb
jo
jns
push
xor
das
out
push
popa
adc
cltd
pop
push
minps
or
repz
fs
loopne
add
mov
daa
push
enter
bswap
insb
xchg
scas
orb
mov
add
xchg
ret
outsb
outsb
insb
or
pop
adc
push
cmpsl
test
xor
xchg
leave
loopne
mov
shlb
clc
dec
sti
pop
push
mov
jg
xchg
pop
scas
inc
pusha
shll
adc
xor
das
insb
sub
push
fistl
hlt
sbb
hlt
inc
lock
sub
mov
mov
pop
enter
jmp
ret
sbb
xor
dec
into
int3
aam
and
jmp
sbb
les
in
subb
out
shll
cli
push
int3
pop
xchg
andb
lods
addb
cmp
sbb
xchg
imul
pop
lret
cli
imul
xor
push
pusha
lret
mov
iret
xchg
or
popa
lock
addr16
mov
sub
or
sbbw
add
inc
mov
xchg
mov
call
jp
test
xchg
adc
repnz
imul
sub
rcll
sbb
jg
outsb
and
jecxz
pushfw
movsl
popf
loopne
fs
scas
call
outsl
clc
bound
lods
cmp
jl
pop
cmc
dec
push
popa
mov
mov
bound
push
push
sti
xor
stos
rolb
test
lret
inc
js
xchg
xchg
inc
jno
adc
fst
add
mov
jb
mov
pop
or
fbld
sbb
jo
mov
xchg
mov
mov
add
xchg
xchg
and
sahf
mov
fnsave
inc
pop
outsb
push
fucomp
dec
andl
adc
scas
xchg
adc
ljmp
pusha
inc
jge
sti
cmp
into
pop
inc
in
addr16
cmc
adc
or
xor
pop
jecxz
incb
xor
pop
popa
hlt
loop
ret
hlt
mov
mov
pusha
cmp
repnz
addr16
inc
bound
mov
push
fnstcw
insb
adc
cs
cmc
test
nop
cmpsl
xchg
cmp
shlb
xchg
add
rcll
mov
aas
es
adc
mov
sbb
sub
push
out
push
adc
lea
int
fucomi
mov
outsl
leave
mov
out
into
pop
nop
daa
ds
mov
mov
int3
shlb
lock
lock
out
cwtl
push
adc
cmp
mov
insb
hlt
mov
and
mov
push
jno
clc
sbb
xor
xchg
data16
mov
mov
test
outsl
dec
outsl
mov
arpl
pop
push
sub
pop
aaa
stos
and
jecxz
fldt
movsl
adc
adc
dec
mov
stos
cmpsb
lret
loopne
orps
fildll
add
cmp
xchg
rorl
push
xchg
or
es
loop
and
hlt
push
into
mov
cmc
je
icebp
inc
cmp
jne
out
adc
lcall
cltd
frstor
push
stos
jmp
dec
mov
and
dec
lcall
sbb
aam
fwait
mov
inc
out
adc
or
jp
sbb
adcl
and
ficomps
push
nop
mov
imul
jp
jb
stc
cs
lods
inc
xchg
lock
dec
repz
cmp
test
sbb
push
xchg
cmp
push
lcall
jno
rcl
fcmovu
mov
inc
dec
xchg
mov
cmp
add
in
mov
repnz
into
add
fwait
pop
xchg
push
add
inc
popf
pop
mov
rolb
jg
mov
cltd
and
add
xchg
jns
popa
shlb
mov
mov
fbstp
jo
jmp
mov
or
push
scas
sub
scas
scas
pop
push
shlb
adc
outsb
adc
xor
mov
sahf
push
mov
mov
mov
daa
packsswb
cmp
xor
mov
sub
or
or
test
cld
jmp
sahf
xor
stos
mov
mov
cltd
jne
cld
jnp
out
add
inc
sub
xor
jno
les
mov
xor
lret
fimull
pusha
add
adc
fimull
lret
sub
or
cmp
cs
clc
movsl
push
jle
fstps
sub
pop
inc
jno
jp
push
mov
and
divb
push
push
aas
lock
mov
out
mov
imul
daa
jg
mov
mov
lcall
jb
daa
push
insl
mov
cltd
add
out
shlb
imul
outsl
jecxz
cmpsl
mov
push
ret
shll
and
insl
mov
mov
notb
mov
inc
sub
dec
inc
arpl
dec
mov
mov
sbb
push
jo
into
or
inc
lret
call
mov
mov
mov
dec
dec
ja
and
dec
aam
or
dec
add
adc
pop
pop
push
pmulhuw
mov
imul
xchg
jp
dec
pop
pushf
testb
sarl
ffree
jl
aad
addr16
in
xor
call
scas
rcll
and
sbbl
add
loopne
jmp
stos
fiadds
addl
movsl
aaa
scas
in
ret
xchg
mov
test
add
push
clc
loopne
pop
ss
xchg
jmp
out
pop
xchg
xchg
fistl
dec
push
sbb
imul
xor
sub
mov
adc
clc
push
jl
andl
shlb
adc
jmp
mov
jmp
cli
jb
dec
inc
mov
les
test
out
inc
push
cmp
push
and
pop
add
jae
add
add
push
and
shll
in
repnz
divl
jns
ss
rcll
aas
sbb
lds
mov
mov
sti
rcrl
jmp
mov
hlt
out
adc
sbb
xchg
push
outsb
mov
adc
jp
outsb
push
push
mov
out
jmp
inc
pop
test
aaa
pushf
mov
lds
inc
arpl
adc
popa
sbb
das
add
jne
fldl
or
fdivrl
jle
inc
cmp
insb
std
bound
xchg
lret
divb
xor
lret
sbb
fidivl
test
mov
flds
mov
pop
sbb
cltd
notl
dec
mov
add
inc
pop
movsb
jge
push
push
jge
cmp
sbb
mov
push
jno
pop
or
mov
add
and
out
cmovno
mov
stos
mov
cmp
je
aam
xor
stos
ljmp
popa
fistps
or
dec
add
cmp
in
popf
cmp
int
pop
pop
adc
mov
andb
jns
pop
jne
push
arpl
sub
adc
in
shl
jmp
pusha
and
push
inc
mov
dec
jo
call
lock
xchg
ljmp
cmpsb
mov
and
sbb
loop
aam
or
sub
xchg
repz
cltd
xchg
rcrl
push
lods
or
je
fsub
roll
lss
cmp
shrl
test
jmp
mov
les
and
test
cmp
loopne
rcl
fmuls
mov
push
lock
mov
out
pop
jmp
jmp
mov
pop
cmp
ja
les
insb
cmp
pop
inc
mov
cmp
cli
sahf
out
adc
add
xchg
add
inc
in
xchg
sti
adc
cmpsb
mov
cmp
mov
xor
aad
cmc
inc
adc
fs
jle
cmp
out
and
js
aam
mov
jns
inc
push
jmp
je
iret
inc
mov
das
pop
pop
dec
dec
sarl
out
sti
in
call
aaa
mov
or
repnz
ret
sarl
cmp
and
test
sub
inc
adc
dec
dec
cmp
sub
xor
push
test
leave
ret
cld
inc
pop
cli
imul
xchg
shll
cmp
sarb
mov
cmpsl
aam
psadbw
or
fcmovne
std
cmpl
pop
imul
rorl
adc
inc
add
dec
ljmp
dec
fldl2t
xchg
int
fiaddl
les
addr16
inc
call
lods
arpl
daa
in
inc
movsl
fs
or
mov
ss
and
mov
cmc
inc
jbe
stos
sbb
xor
xor
adc
mov
rclb
test
bound
lods
repnz
popa
xchg
add
xlat
scas
xor
xor
dec
sbb
add
inc
mov
je
dec
out
inc
mov
mov
movsl
and
shrl
dec
push
add
lds
mov
xor
int
das
out
daa
in
xor
sub
fstpl
jae
mov
lds
mov
stc
imul
sti
jmp
adc
aam
pop
stos
hlt
and
xor
shll
jge
lds
stos
fwait
sub
sub
pop
mov
cmpsb
sbb
xchg
push
sbb
mov
jp
push
cmp
repnz
divb
mov
jecxz
pop
pushf
xor
push
pop
nop
lock
mov
daa
out
dec
fsubrp
in
loopne
pop
test
fistpl
les
pop
push
dec
rcll
xchg
lret
mov
xchg
xor
mov
pop
push
inc
lods
movsl
loop
jns
test
adc
fdivrl
jp
pop
jle
inc
add
mov
or
xchg
fistl
lock
push
bound
mov
sub
in
cld
pop
and
pop
mov
sub
sub
into
add
push
fistpl
fcompl
cli
outsb
jp
pop
mov
cld
lock
or
nop
mov
fcmovb
sti
push
push
xchg
sti
and
movsb
insl
nop
rcl
lods
insl
jo
xor
xor
clc
mov
mov
xor
aam
ss
test
cmovbe
stos
scas
push
ja
mov
js
fwait
cmpsb
fnstenv
shl
fucomp
and
sub
lahf
pop
into
insl
cld
loopne
mov
or
adc
sub
inc
fisubl
ret
insl
cmp
fbstp
xchg
out
bound
or
orl
mov
sbb
pop
ss
mov
hlt
jo
es
jle
orb
sbb
adcl
cmpsl
lahf
jp
mov
and
sub
imul
out
ljmp
inc
pop
or
cld
xchg
or
stc
xor
aas
fisubrs
ret
sub
cmpl
xchg
mov
mov
popa
lret
pmaxub
movsl
fcomps
sbb
jne
and
clc
dec
inc
out
stos
movsb
mov
push
xor
aaa
stos
mov
gs
mov
fwait
inc
inc
jns,pt
mov
mov
xchg
jns
repnz
outsl
mov
fmuls
dec
popf
fstpl
imul
and
xchg
ror
adc
incb
mov
jl
pusha
repnz
jg
mov
xor
push
fdivl
mov
sbb
repz
sbb
mov
mov
mov
lahf
inc
mov
lock
push
jae
and
insl
les
and
adc
jo
jmp
sub
in
vcmpss
lahf
xor
fsubr
mov
stos
or
cmp
popf
stos
xor
divl
aas
sub
rcrl
push
push
add
xor
imulb
or
movsl
lock
pop
cmp
cltd
mov
orb
test
lahf
mov
stos
mov
scas
mov
pop
dec
sub
xorl
mov
mov
sub
and
mov
or
decb
mov
sti
movsb
jb
inc
xchg
fs
mov
xor
dec
pop
into
and
lret
mov
int
mov
cs
mov
iret
sbbb
sar
mov
insl
iret
add
test
lcall
adc
push
dec
add
pop
xlat
add
adc
pop
xchg
jns
mov
cmp
pusha
sbb
outsl
mov
jl
mov
leave
sbb
inc
mov
pop
xchg
mov
add
mov
and
movsl
add
push
mov
add
pop
cli
movsb
fcoms
and
rclb
mov
push
pop
icebp
pop
jge
mov
insl
mov
test
std
loop
test
and
pusha
jno
mov
push
cmp
mov
ffree
testb
mov
insb
fmul
inc
inc
fisubrs
xchg
fcmovbe
pop
inc
mov
sub
inc
adc
push
xor
dec
pop
xor
lret
push
xor
in
add
jecxz
sbb
dec
hlt
pop
jno
mov
orb
aaa
dec
jnp
jl
dec
adc
sub
fidivrs
cltd
mov
and
lahf
push
xor
out
cwtl
push
cmp
xor
cmpb
inc
sti
jnp
or
add
dec
adc
test
dec
imul
repnz
outsl
lods
dec
sbb
mov
and
push
cwtl
std
jbe
pop
scas
orl
in
leave
pop
imul
push
lds
mov
aad
add
outsl
scas
in
cmp
test
add
add
dec
loope
imul
mov
outsl
ljmp
and
inc
xchg
pop
inc
ds
push
loop
cmp
push
pop
movsl
out
mov
stos
push
sbb
imul
mov
sti
adc
shll
xchg
xchg
push
jecxz
push
fimuls
xchg
mov
cmp
mov
insl
aam
clc
aaa
leave
mov
xlat
fwait
pop
ja
push
std
cmpl
je
in
mov
push
pop
shl
je
testb
cmp
mov
dec
pop
lds
sbb
std
icebp
ja
push
mov
fcmovnbe
sbb
cmp
shrl
pop
insb
lods
fcmovu
loop
das
in
rolb
cmpsb
testb
shll
dec
mov
bound
nop
out
push
fsubr
ljmp
lea
or
mov
pop
loopne
ret
add
dec
adc
mov
outsb
and
mov
mov
flds
rcll
mov
mov
cld
pop
or
push
lret
in
sti
mov
mov
push
rorb
lret
ss
fwait
sbb
push
adc
outsl
jnp
push
xchg
inc
xchg
sti
cmp
test
pop
pop
xor
push
jmp
mov
push
and
iret
add
ds
in
aam
sub
push
notl
rorl
enter
in
int3
int3
cs
pop
iret
push
xchg
add
or
inc
ret
mov
xchg
lret
movsb
mov
out
popf
inc
arpl
aad
ret
ret
test
out
xchg
dec
ss
mov
jo
and
sbb
repnz
shlb
in
je
aas
jne
mov
pop
mov
jmp
adc
movsl
mov
pop
dec
xor
adc
add
xor
ds
stc
sbb
imul
and
push
pusha
xor
add
lds
pop
or
cmp
ud2
out
aas
js
jae
aas
popa
cmp
jne
fisttpl
mov
hlt
das
and
sub
fimuls
pop
loope
outsl
out
mov
cmp
pop
bound
push
mov
cld
jnp
cmpsb
shl
cld
out
andb
xchg
popl
cmpsb
or
je
sub
add
and
xchg
and
pmulhuw
hlt
jmp
sbb
sub
mov
lods
fsts
inc
int
jle
push
mov
mov
mov
test
shlb
mov
dec
cmp
adc
lret
test
sub
mov
dec
rcll
pusha
dec
and
xchg
mov
xchg
sub
xorb
jae
icebp
adc
insb
sar
das
lods
mov
scas
sbb
mov
nop
push
nop
aaa
xchg
push
and
cmpb
xchg
mov
xor
pop
mov
sub
mov
mov
cmp
dec
rcrl
dec
inc
ljmp
adc
pusha
cwtl
xchg
pop
push
shrb
mov
aam
mov
imul
cmpsl
mov
and
mov
divl
fcompl
je
pop
lret
mov
cmp
aad
jp
orb
lods
stc
pop
jg
adc
pop
imul
out
mov
pop
jne
data16
clc
loope
lea
movsb
jo
arpl
push
mov
jbe
sbb
repz
movsl
dec
sbb
jp
cmp
dec
pop
je
xor
cmpb
gs
stc
mov
push
cmp
mov
pop
les
nop
push
xchg
lahf
gs
ss
ret
imulb
popf
popa
test
push
jbe
cmc
mov
into
jo
dec
es
in
loope
repz
testl
imul
cmpsb
jg
push
push
and
mov
push
ds
decl
movsb
int3
mov
cwtl
test
outsb
popl
sub
repz
dec
hlt
add
or
test
jbe
jl
mov
div
sub
mov
fs
insb
inc
add
xor
xor
push
or
fcmove
mov
cmp
mov
ret
mov
add
fs
out
stc
xchg
adc
or
movsb
dec
lret
pop
mov
cs
xchg
je
push
and
dec
out
push
in
inc
aad
bound
out
les
push
pop
pop
push
push
daa
ja
rcr
clc
jb
loop
adc
clc
stos
sub
mov
fbstp
in
dec
push
pop
mov
int3
jae
xorb
addb
adc
xor
dec
int
loop
adc
lods
dec
cmpsl
jbe
or
dec
inc
mov
out
loope
push
gs
insb
jnp
sbb
movsb
shl
and
sub
xor
add
xor
jne
sub
mov
xchg
sub
jae
lahf
inc
or
sub
pop
sub
fsubrs
xchg
jl
lret
in
or
sarl
jno
jns
shr
mov
mov
rcrl
and
js
xor
enter
xlat
jmp
inc
stos
lret
orb
lods
test
sbb
sub
pusha
xchg
lods
sahf
stos
and
pop
jecxz
mov
push
mov
lock
mov
cmp
cld
inc
dec
cwtl
sbb
xor
pop
jp
pop
inc
xchg
cwtl
mov
aaa
das
out
std
lcall
jp
dec
or
sbb
push
fcoms
and
push
jb
or
xchg
or
adc
inc
fcomip
aam
cmp
stos
push
into
dec
mov
stc
sbb
pop
mov
arpl
mov
mov
cmpb
fstp
cmp
mov
sbb
xchg
mov
sarl
aad
das
xor
dec
add
cs
xor
outsb
mov
push
xor
push
negb
mov
js
and
push
lret
aam
into
jecxz
and
out
ljmp
sbb
xchg
out
cmp
test
data16
ret
inc
jle
mov
notb
stc
jno
inc
clts
or
test
push
dec
xchg
push
data16
mov
sub
xchg
push
mov
jg
mov
mov
sbbl
orb
xorb
aaa
gs
add
xchg
sbb
stc
or
movsb
mov
out
bound
mov
sti
cmp
xlat
getsec
jns
repz
sub
repz
push
xchg
inc
or
xor
jns
or
iretw
imul
insl
add
inc
add
bound
in
mov
mov
sbbl
inc
pop
pop
jge
push
mov
out
sub
movsb
xchg
and
mov
insb
add
es
xchg
add
cmpsb
je
test
outsb
dec
imul
out
popf
inc
test
mov
stos
ss
xchg
sti
cmpsl
insl
xchg
adc
cmp
out
ss
fwait
mov
jecxz
imul
dec
daa
imul
sub
jp
sbb
xchg
scas
jae
call
jle
add
push
fistps
jecxz
out
je
mov
xor
call
mov
mov
pushf
aaa
sub
or
mov
dec
insl
mov
sahf
movsl
dec
and
mov
ljmp
xor
scas
pop
mov
sub
mov
test
lods
jp
cmc
xchg
mov
adc
jb
out
cltd
fstl
fists
imulb
bound
leave
mov
mov
and
cmp
push
and
inc
iret
aad
addr16
mov
loop
push
dec
aam
es
orb
repz
lock
push
in
loop
jnp
xchg
sahf
xchg
sahf
nop
cmp
mov
sbb
outsl
sbb
ljmp
mov
or
cmpsb
push
lea
movsb
rcrl
rorl
and
mov
cmpsl
into
mov
push
fmull
aam
mov
ficompl
inc
adc
mov
xchg
stos
xor
iret
dec
fcmovnu
xor
mov
sbb
xor
sub
or
out
imul
pop
js
mov
gs
mov
xor
xor
mov
mov
mov
or
test
pushf
dec
mov
jb
push
sbb
scas
stos
push
pusha
lret
mov
or
fdecstp
mov
ficomps
popf
leave
dec
pop
rorb
add
es
lods
inc
jo
inc
fisubrl
inc
fpatan
out
xchg
or
test
cld
mov
pop
mov
ret
pop
xchg
xchg
cmp
arpl
arpl
xor
push
jp
and
ficoml
inc
fistl
push
cs
jmp
mov
xchg
mov
mov
xor
ljmp
clc
pop
mov
pop
inc
mov
mov
cmp
jbe
imul
jp
aam
scas
cmp
fidivrs
or
xchg
enter
fpatan
jb
fistpll
cs
int3
in
mov
mov
and
sarb
popa
arpl
ss
push
and
out
testb
inc
sub
push
out
movsb
xlat
pop
xchg
out
adc
or
sub
mov
in
lods
outsb
test
xlat
icebp
mov
repnz
push
mov
outsb
cmp
ffree
fstpl
sbbb
and
or
push
loopne
jno
and
pop
sub
jl
repnz
ja
and
mov
lods
and
insl
and
add
test
adc
inc
or
leave
lds
cs
inc
ror
xor
mov
lds
add
sub
sub
jmp
jns
xor
aam
ret
xor
mov
in
pop
push
into
jo
push
or
jl
pop
test
lock
dec
fs
outsl
and
dec
or
fdivl
add
push
push
movsb
jae
mov
xor
mov
mov
mov
fisttps
sarb
sub
sub
add
mov
jae
xor
xor
idivb
jmp
fwait
xchg
mov
inc
xor
out
jecxz
add
hlt
jb
int3
adc
cmpsl
and
shll
push
sarl
cmp
fwait
mov
fimuls
shll
shll
xchg
mov
test
mov
rorb
aas
pop
push
mov
cli
mov
jmp
pop
dec
mov
mov
out
inc
loop
jge
in
lds
loope
add
push
fidivrl
popf
xchg
jne
subb
mov
pop
lods
jae
mov
call
imul
jae
cmpsl
adc
xorb
dec
daa
in
xor
sbb
add
cmp
jecxz
jge
cmpsl
aas
in
cmpsl
xor
bound
gs
pusha
jo
xor
lods
sbb
adc
mov
pop
arpl
das
lahf
das
ss
decb
jmp
xor
mov
js
push
aam
push
push
dec
pop
stc
in
adc
xor
sbb
mov
fistps
cmp
cs
mov
cltd
cmp
sub
mov
xor
ret
sahf
sbb
call
fnsave
push
dec
shr
jnp
stc
dec
xor
xchg
mov
add
shll
jecxz
or
les
pop
lods
xlat
push
out
adc
mov
inc
cmpsb
cmp
mov
mov
fcomp
or
arpl
jne
pop
adc
xchg
sub
sbb
shl
in
adc
outsl
or
inc
aas
sub
mov
mov
or
xchg
dec
addr16
mov
xchg
mov
in
call
in
sbb
popf
xchg
leave
jns
fs
pop
std
mov
stos
scas
fs
cmp
data16
repnz
mov
xor
jnp
cmp
or
lcall
hlt
push
xchg
hlt
pop
mov
add
push
filds
jmp
gs
push
enter
scas
lods
xor
push
js
in
incl
dec
shll
loope
add
inc
dec
pop
cmc
fsub
out
push
dec
in
movsl
mov
or
wbinvd
xor
iret
aaa
adc
cmc
add
or
scas
jb
jno
insb
in
iret
cs
mov
xchg
cmpsl
cs
push
dec
ljmp
or
and
xor
jbe
shrb
pop
or
shrb
inc
pop
ret
cld
imull
imull
data16
sub
aad
push
stc
ja
xor
roll
repnz
sub
adc
or
mov
mov
stc
xor
push
leave
out
inc
jecxz
inc
inc
and
shrl
aad
xor
adc
ret
inc
xchg
fwait
or
sub
pop
or
and
or
jg
lahf
adc
mov
into
mov
pushf
rorl
outsl
jae
inc
cmp
jmp
mov
add
cmpsl
jle
push
xchg
pop
jbe
mov
jns
push
inc
bound
lret
popa
idiv
add
scas
test
aam
pushf
ljmp
dec
cmp
in
lret
lcall
mov
movsb
jl
pop
out
pxor
shlb
adc
inc
xchg
fsubp
shlb
or
imul
cmp
mov
add
xchg
mov
push
sbb
ror
mov
push
mov
jnp
add
cmp
pop
shll
jle
mov
sub
in
out
xor
inc
sub
xor
xor
daa
mov
xchg
je
xchg
cltd
shrb
xor
dec
jmp
and
ss
or
adc
push
fidivrl
into
ja
add
sub
movsl
push
repnz
fs
lahf
cmp
xorl
aad
adc
cmp
fdiv
dec
sub
into
sub
inc
mov
mov
cmp
xor
out
movsb
aas
mov
sbb
xor
mov
xchg
adc
jb
sbb
hlt
push
dec
jmp
fstl
sbb
inc
fsubrl
xchg
mov
cmpsb
xchg
mov
adc
hlt
and
pop
lret
pop
enter
push
arpl
xor
fs
nop
inc
dec
nop
shrb
add
sub
and
xor
rol
cld
in
and
cmpsb
xchg
mov
je
dec
xlat
or
cmp
inc
mov
xorl
and
dec
or
int
fsubs
and
xor
std
adc
ret
pop
xlat
ret
inc
xchg
and
clc
insl
mov
out
sub
adc
mov
adc
xchg
mov
push
or
mov
insb
sbb
fbstp
mov
aam
push
addr16
sahf
scas
insb
sub
sbb
lods
call
mov
fbld
xchg
or
lods
repnz
mov
out
dec
or
aaa
cmp
in
outsl
nop
stos
or
push
mov
test
xor
jmp
ret
jp
sahf
push
sti
pop
xchg
pop
mov
inc
fisubl
insb
inc
and
pop
cmpsb
popf
psubsw
fadd
mov
out
cmpsl
push
cmp
pushf
jbe
pusha
mov
ud0
jl
movl
nop
pop
mov
sti
mov
and
fucomip
daa
pop
test
aam
add
neg
xor
cltd
xchg
in
iret
push
mov
inc
cmp
add
lret
dec
in
xor
jns
test
test
int
push
pshufw
in
mov
jp
nop
inc
lret
push
outsb
adc
outsl
push
inc
push
pop
ds
mov
out
push
pop
scas
outsb
shrb
xchg
pushf
cmc
fwait
outsl
test
adcl
pop
jmp
mov
jmp
cwtl
jl
loope
cmp
inc
pop
inc
inc
xor
sbb
popf
cli
jbe
ret
pushf
hlt
setp
sbb
inc
xchg
mov
inc
jo,pn
movsl
cltd
and
push
cmp
scas
mov
adc
aaa
lahf
pop
movsl
jmp
pop
pop
xor
mov
mov
popf
in
popa
fsubp
data16
sub
push
test
push
mov
scas
fcmove
push
push
stos
dec
movsb
insb
or
pop
imul
outsb
fcmovb
ds
cmp
mov
jb
inc
cld
cmp
inc
testl
pushw
fstl
xchg
lods
test
dec
mov
iret
sub
push
jnp
ja
adc
fistpll
jmp
sbbb
js
in
adc
loop
arpl
imul
ljmp
jnp
jp
stos
mov
push
mov
and
js
cmp
flds
lcall
xor
and
insb
ljmp
xchg
push
shr
pusha
push
push
jl
adc
xchg
loopne
in
ss
lods
cltd
loop
jle
mov
add
pop
rorl
cmpsb
adc
jnp,pt
fsub
push
les
inc
sub
pop
push
lret
mov
xor
or
mov
repnz
or
iret
and
jnp
mov
dec
jmp
dec
and
subb
xchg
add
pop
cmp
sub
in
jmp
jle
popf
hlt
push
rolb
mov
sub
inc
pop
mov
stc
lods
rol
test
sub
cmp
xchg
jb
sahf
inc
and
mov
repz
cmp
adc
or
xchg
jno
hlt
cmp
ret
cmp
data16
out
.byte
lahf
and
or
add
or
add
or
add
mov
or
add
add
add
add
mov
or
add
add
add
add
push
add
andb
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
int
add
int
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fmuls
add
add
incl
add
add
dec
add
add
add
incl
add
add
fmull
add
add
add
add
fimull
incl
add
add
fimuls
add
add
incl
add
add
fisttps
add
add
incl
add
add
loope
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
out
add
add
add
incl
add
add
call
add
incl
add
add
jmp
add
incl
add
add
jmp
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
adc
add
add
mov
dec
add
adc
incl
add
add
pop
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
and
add
add
incl
add
add
and
add
add
add
decl
cs
add
cs
add
add
add
sub
add
sub
add
incl
add
add
xor
add
add
incl
add
add
xor
add
add
incl
add
add
add
add
ss
add
dec
add
add
add
cmp
daa
cmp
add
add
cmpb
add
incl
add
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
dec
add
add
add
jmp
dec
dec
add
dec
add
fmull
pushl
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
mov
bound
add
add
jmp
dec
add
add
add
out
push
dec
add
ljmp
dec
add
add
incl
add
add
add
add
incl
add
add
imul
add
add
incl
add
add
outsb
dec
add
add
add
incl
add
add
outsl
dec
add
jb
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
inc
je
add
je
add
call
je
add
je
add
push
je
add
je
add
decl
jne
add
jne
add
ljmp
jne
add
jne
add
incl
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
jl
add
add
add
incl
add
add
add
add
incl
add
add
orb
add
add
incl
orl
add
add
add
pushl
dec
add
dec
add
add
add
incl
add
add
dec
add
jmp
stos
dec
add
dec
add
call
stos
dec
add
stos
dec
add
decl
dec
add
add
mov
add
add
add
add
add
or
add
add
add
mov
or
add
mov
or
add
or
add
or
add
mov
or
add
add
add
add
mov
or
add
add
add
add
push
add
andb
add
stos
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
sub
push
gs
insl
gs
push
add
jmp
je
push
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
loope
mov
mov
test
pusha
pop
xor
mov
fstpt
xchg
and
or
cmp
or
jo
lahf
sbbl
mov
push
mov
xor
test
cs
jbe
loopne
mov
or
sbb
ret
sub
inc
push
rclb
xor
fcoms
std
mov
fisttps
push
pop
std
stc
or
adc
cmp
push
and
aad
imull
push
sub
jl
outsb
jg
sahf
push
mov
xchg
sbb
lret
adc
jno
cmpsb
inc
mov
fwait
mov
lods
jecxz
lcall
in
popf
imul
adc
sahf
imul
shrl
rcl
mov
pop
dec
jge
pop
out
popf
sbb
cld
and
sti
sub
int
xor
push
nop
daa
and
push
es
sub
inc
jns
hlt
scas
cmpsb
aad
inc
sub
xchg
ror
xchg
in
cltd
je
cmp
js
mov
or
or
movsb
pop
jge
or
dec
je
icebp
lock
add
push
mov
and
add
scas
out
pusha
movsb
inc
adc
out
inc
sbb
roll
mov
in
sub
adc
hlt
mov
rcl
shrb
fiadds
jns
inc
iret
les
negl
icebp
frstor
daa
lret
inc
lds
out
mov
clc
dec
aad
xchg
cld
les
addl
inc
filds
cmp
ret
dec
dec
push
mov
mov
cmc
les
mov
sarl
lds
xor
pop
push
scas
imul
or
repnz
mov
divb
lahf
cmp
sbb
dec
push
iret
stc
mov
repnz
iret
xchg
cmp
mov
dec
push
inc
nop
fisubrl
outsl
lahf
inc
insl
pop
jnp
cwtl
icebp
adc
or
xchg
clc
sbb
cmp
in
and
icebp
xchg
xor
jl
jno
jle
xor
inc
push
pop
enter
jge
sbb
mov
call
es
sub
xchg
mov
pop
push
es
dec
pusha
push
mov
mov
inc
or
ds
pop
sbb
movsb
ss
mov
cmp
cmp
mov
jle
aaa
testl
adc
dec
stos
add
jge
adc
or
push
cmpsl
pop
sbb
in
add
fidivl
icebp
scas
icebp
lcall
int3
stos
aas
or
pop
mull
arpl
lret
pop
pushw
in
std
cwtl
out
cwtl
rcrl
je
sbb
pushf
xor
sbb
pop
rcl
mov
jecxz
repz
jns
adc
insb
sub
cs
sbb
pop
lahf
popa
mov
pop
push
add
xchg
xchg
lods
add
loope
jg
jecxz
hlt
adc
lcall
add
scas
cmc
mov
push
int
xor
outsb
in
adc
lret
mov
cld
push
add
sti
cmp
or
mov
lcall
inc
sbb
lock
popa
lahf
aad
rcll
sub
mov
es
push
xlat
leave
push
int3
xlat
aam
cli
add
loopne
cltd
cmp
cld
into
inc
jnp
sub
inc
jns
pop
les
push
daa
lcall
addr16
dec
cmc
mov
xor
popw
mov
push
pop
xorb
push
and
mov
push
sbb
popf
ja
sbb
std
mov
out
pop
repz
in
subl
andb
jecxz
arpl
lods
push
andb
test
mov
and
rclb
pop
mov
bound
jae
pop
inc
xor
sub
jo
push
mov
add
xor
outsl
cmpsl
inc
pop
mov
add
ja
cld
outsb
enter
stos
ljmp
xchg
adc
jle
adc
push
ffree
jnp
xor
movsl
lds
gs
mov
lods
pop
fs
mov
inc
push
stos
loop
add
aam
ljmp
mov
fcoml
xor
cmp
in
jbe
sub
ds
pop
adc
int3
loope
adc
sub
mov
mov
in
mov
pop
call
cs
clc
ret
xor
add
adc
lret
dec
lret
cmp
sbb
fcmovnu
jb
data16
xchg
sub
jle
dec
sbb
call
jae
bound
pop
or
xchg
ret
fldt
fisttps
imul
xor
pop
in
xorb
ljmp
sbb
mov
mov
scas
pushf
add
xor
scas
fs
mov
cld
xchg
fs
ss
arpl
dec
imul
push
cmp
out
daa
aas
out
dec
cmc
orb
cmp
ror
mov
or
mov
in
xor
scas
rolb
ljmp
ficoml
dec
lahf
xlat
adc
xchg
pop
and
mov
mov
inc
das
sbb
inc
xchg
dec
adc
arpl
adc
call
xchg
or
and
pop
xor
int
mov
loopne
addl
push
adc
jne
call
pop
adc
gs
xlat
clc
mov
aad
movl
mov
xchg
flds
mov
shl
pop
add
xchg
stos
push
ljmp
jbe
cmp
xchg
fldcw
mov
sub
lret
leave
dec
mov
adc
mov
lcall
sbbb
mov
push
push
enter
add
out
mov
out
test
xor
cs
xchg
cmp
dec
js
fsubrl
mov
jb
leave
aam
mov
cmp
es
pop
iret
sub
add
std
and
pushl
xor
mov
out
jle
xor
dec
les
loope
fwait
sub
inc
mov
mov
inc
sub
cli
cltd
push
frstor
inc
pusha
std
jg
xchg
sub
cltd
out
mov
xorl
and
or
dec
add
mov
dec
sahf
into
xor
gs
insb
inc
rcl
addr16
int3
sub
outsl
jo
out
test
daa
push
sahf
add
add
sub
mov
dec
in
jmp
mov
call
adc
inc
dec
mov
icebp
ss
sbb
ret
jnp
jne
mov
pop
sbb
cmp
fnstcw
cmp
add
leave
or
out
pop
stos
xor
testl
loope
or
or
mov
int3
push
sub
cmpsb
or
fwait
xor
out
xor
fdiv
xchg
sti
out
lea
or
add
dec
gs
out
lahf
sub
sub
cld
pop
mov
cmpsb
xchg
sub
and
in
clc
sahf
xor
jl
cmp
and
scas
pop
out
mov
mov
or
or
je
imul
xor
outsb
fsubrs
call
and
sbb
inc
dec
les
bound
int
push
fldcw
stos
and
xor
adc
cli
out
pop
mov
or
jb
jnp
and
ret
stc
push
scas
dec
dec
fiaddl
pop
inc
sbb
mov
movsl
cmpsl
inc
xor
testb
fnstsw
loope
inc
int
into
dec
aas
sub
push
leave
and
mov
jl
pop
cmp
mov
mov
inc
insb
std
and
lahf
stos
mov
test
imul
push
sbb
push
adc
jl
push
xor
loopne
pop
fstl
orl
mov
inc
insb
roll
mov
jecxz
dec
xchg
xchg
or
mov
sbb
lret
jge
into
jmp
test
test
mov
push
adc
adc
xchg
dec
or
cmpsl
cmp
cmp
mov
enter
inc
jns
imul
inc
cmpb
mov
ds
mov
push
arpl
insb
popf
mov
adc
jecxz
pop
aad
loope
sti
imul
xor
inc
adc
les
std
ret
notb
sahf
mov
int
push
stos
aaa
sub
inc
movsl
mov
push
jl
shr
jmp
cmp
pushw
mov
sahf
pop
push
fldenv
mov
jae
dec
incb
mov
popa
adc
adc
sub
addr16
es
into
ret
mov
cltd
bound
mov
sub
movsl
adc
push
fwait
push
jnp
aad
cwtl
roll
xchg
jmp
inc
dec
pushf
jb
rcr
roll
out
dec
sub
cmp
mov
mov
push
mov
icebp
test
shrb
in
sbb
add
daa
mov
test
fsubrs
sub
dec
xchg
mov
cmp
out
ret
sub
push
jl
mov
aas
fsubrs
mov
bound
push
xor
imul
scas
subl
out
out
mov
jmp
inc
mov
pop
and
popl
adc
adc
jl
xchg
pop
sub
addb
test
pop
cs
push
pushf
cs
leave
xor
push
xchg
pop
mov
test
jbe
sbb
sbb
dec
lahf
or
jmp
repz
iret
mov
cwtl
lahf
mov
mov
outsl
xor
int3
or
lods
mov
out
sbb
ljmp
aam
push
bound
emms
nop
test
inc
and
loope
mov
jle
ficoml
adc
jmp
sbb
sub
cmpsb
scas
xor
fsts
adc
aam
sarl
hlt
call
adc
ret
adc
mov
jmp
pop
adc
push
scas
push
cmp
mov
incb
mov
mov
lret
lret
aas
popa
cmc
repnz
sarl
loope
or
dec
mov
stc
mov
ficoms
es
add
jne
jecxz
outsl
push
outsl
push
in
push
sbb
inc
aas
push
stos
jp
int3
jns
mov
sbb
repz
mov
sbb
inc
or
cld
xchg
mov
scas
std
ja
dec
stos
sbb
js
rcll
mov
std
js
inc
je
add
xchg
sub
dec
mov
mov
aam
fwait
xlat
imul
cltd
mov
outsb
cli
inc
mov
push
xchg
pop
inc
mov
mov
jle
jb
aas
insl
daa
add
xchg
mov
iret
int
ds
in
mov
push
sub
add
dec
dec
xor
js
decl
les
xor
out
inc
dec
jp
xor
dec
inc
xchg
sub
xchg
mov
xchg
ja
aaa
ja
stos
insl
add
and
je
test
fidivrl
pop
mov
xor
aad
and
mov
fcmovu
sub
sub
cwtl
jo
rcll
ret
xchg
sbb
jmp
push
jmp
js
mov
and
xchg
mov
push
mov
ja
ja
sbb
jbe
test
push
mov
push
int
lods
rcr
shlb
arpl
arpl
mov
sbb
add
scas
scas
daa
out
add
rol
sti
jecxz
xchg
xchg
pop
mov
aas
xchg
dec
int3
cli
inc
lret
pop
mov
loope
push
mulb
sbb
xchg
mov
imul
lret
fs
repnz
adc
lcall
mov
lcall
mov
or
lock
add
pop
fstps
adc
xor
std
pop
pop
call
sbb
adc
int3
es
push
rcrb
jg
cli
jb
mov
fcomip
mov
popf
xor
sbb
loope
leave
pop
outsb
movsl
dec
mov
mov
fidivs
xor
js
out
fcompl
popf
data16
jo
mov
adc
clc
dec
mov
sbb
shll
sarl
pop
dec
xchg
fstpl
repnz
addr16
mov
and
addl
and
jb
icebp
dec
pusha
fs
and
test
cmpsb
push
mov
push
insb
cmp
fs
mov
dec
fidivl
or
scas
pop
inc
ret
leave
insb
sarb
jge
lock
lods
rsqrtps
les
and
adc
ja
sahf
and
adc
dec
loopne
fwait
leave
push
pushf
pop
roll
cmp
pop
ret
fdivrp
in
or
inc
leave
push
xor
arpl
lods
pop
push
iret
mov
fcomp
adc
dec
cli
pop
mov
repz
mov
int
mov
test
add
xor
xorl
jecxz
push
adc
xlat
jo
xchg
faddp
lea
add
rolb
mov
lret
repz
jnp
add
jl
jge
xchg
mov
mov
add
pusha
xchg
dec
lret
and
in
mov
adc
cmp
repnz
xor
sub
dec
xor
out
gs
cmp
lods
push
les
aad
cmp
mov
push
xor
lea
mov
or
cmp
unpckhps
push
inc
cmp
repnz
push
and
sub
xor
flds
or
int
sar
adc
insb
insb
rcll
rcr
pop
pop
pop
jmp
cmp
popa
loope
outsb
test
insl
ds
test
test
sub
xchg
or
dec
repz
addr16
jg
mov
mov
ja
mov
test
pushf
out
je
cmpsl
and
sub
cld
adcb
aad
xchg
sbb
in
shl
add
int
jecxz
nop
loope
push
je
inc
jb
inc
cmpsb
jp
xchg
push
in
das
mov
call
ds
mov
push
out
pop
xor
loop
imul
inc
xorl
outsl
lock
sub
xor
idivl
pop
repnz
pop
cmp
mov
pop
xor
test
gs
sarb
stos
push
out
fimull
push
sbb
fwait
mov
popa
add
icebp
sbb
ds
or
xor
or
test
stos
dec
test
decl
jno,pn
xchg
fcmovu
subl
mov
stc
mov
mov
je
scas
inc
bound
jle
ljmp
mov
push
lahf
lods
loopne
sbb
push
fildll
and
lods
mov
xor
sbb
lods
sbbb
add
and
call
ret
in
test
mov
jle
dec
xchg
stos
lods
mov
andl
sbb
addb
dec
int3
push
xor
nop
xchg
inc
cltd
inc
pop
ret
pop
lcall
pop
jbe
mov
fs
adc
fsub
sbb
cmc
jge
sub
lret
popa
xchg
xchg
inc
rol
scas
add
test
pop
jae
stos
mov
sub
inc
dec
stos
outsb
pop
cld
insb
mov
pop
jb
push
pop
popa
iret
pusha
loop
cmp
fucom
pushl
jno
cmc
and
push
cld
stc
cltd
in
js
sbb
popf
sub
arpl
jbe
xchg
fistpl
xor
mov
lahf
sbbl
or
out
ljmp
cmp
adc
mov
xchg
sub
inc
xor
out
gs
fwait
mov
insb
fcmovu
mov
imul
sahf
out
inc
gs
adc
sub
inc
loop
jl
inc
lcall
fldt
and
push
xchg
jp,pt
hlt
lea
mov
pop
cmp
adc
adc
les
push
or
bound
or
xchg
dec
jp
jle
inc
rorb
arpl
sbb
jbe
sbb
push
insb
gs
cmp
sub
and
push
jg
stos
ret
or
xor
fwait
jo
aam
imul
es
jp
shll
popf
mov
pmuludq
dec
out
jne
sbb
test
lods
dec
lcall
inc
ss
fcomps
call
leave
mov
pop
in
ret
cmp
mov
rorl
jp
pop
mov
movsb
bound
test
sbbl
dec
xchg
pop
ret
push
popf
sub
mov
cld
faddp
sbb
popf
sti
mov
leave
fnstsw
lahf
cmpsl
pop
mov
jno
push
adc
jo
jae
pop
jnp
out
mov
imul
orb
in
xor
mov
lret
lahf
adc
xor
adc
mov
inc
loope
pop
cmp
pop
add
ja
icebp
int3
add
pushf
push
bound
shlb
into
mov
inc
lret
sti
fld
aaa
ds
mov
inc
add
sbb
aaa
push
sub
divl
pop
stos
add
mov
jae
add
and
loop
and
lret
push
mov
in
cli
and
out
push
into
orl
fisttps
rolb
movsb
scas
inc
push
mov
push
push
xor
sbb
pop
mov
addr16
test
adc
fadds
pop
adc
jl
out
cld
cmpsb
movsl
arpl
mov
outsb
cvtdq2ps
fwait
sub
or
aam
cltd
sbb
mov
arpl
es
pop
mov
pop
fstpl
jb
jne
cld
xchg
adc
lods
lods
daa
mov
mov
push
repz
push
mov
pop
xchg
cmp
sbb
add
jo
push
stos
sub
mov
xor
inc
popf
cmp
lea
bound
jp
fwait
subl
aas
sbb
inc
xor
mov
inc
jl
mov
aaa
in
out
sbb
dec
mov
das
cs
cmp
pop
sub
loopne
mov
sub
es
sahf
daa
and
pop
mov
adc
pop
xchg
or
push
sbb
cmc
sub
addb
test
imul
and
rorl
test
shlb
lods
dec
cmc
adc
out
fsubrs
popa
pop
repz
scas
idiv
and
leave
cmp
repnz
pop
scas
lcall
daa
lret
fcomps
xchg
test
fsubr
rorl
ljmp
out
pop
cmpsl
leave
and
add
push
loope
shl
lcall
and
out
sub
mov
repz
pop
and
les
xchg
push
pop
enter
dec
lods
mov
mov
cwtl
ss
lods
mov
push
mov
mov
addr16
sbb
cmp
cmc
lcall
cmp
mov
and
push
dec
repnz
jge
je
sbb
sub
mov
push
repnz
mov
add
mov
xor
in
mov
iret
fistl
or
icebp
pop
daa
into
leave
leave
subb
imul
xchg
aam
inc
es
sub
pusha
push
pop
stos
aas
fldenv
and
jnp
fistps
xchg
fsubp
inc
mov
cmpsl
loopne
xchg
push
jecxz
loopne
xchg
xchg
sbb
fwait
sbb
ficoml
js
out
cs
inc
test
jmp
sub
movl
mov
fdivp
je
pop
movsl
mov
fs
test
popa
and
clc
jle
sbb
add
aad
mov
and
cmpsb
int3
sbb
int3
adc
pusha
sub
ret
add
into
jmp
push
push
cwtl
les
and
cmp
dec
es
xlat
mov
pcmpeqd
and
xlat
push
out
shll
xchg
rcll
aas
xchg
lock
inc
mov
xchg
sub
and
cmp
cmp
lods
outsb
aaa
scas
fcmovnu
ds
ret
dec
jns
pop
inc
mov
push
xchg
add
lock
sub
rclb
mov
out
cmpsl
aam
sub
fistps
fsubp
push
movsl
fdivs
mov
mov
or
divb
test
jl
dec
pusha
ss
ja
inc
sbb
loopne
jmp
sbbb
lret
or
jg
dec
mov
mov
add
inc
cmp
aam
sub
push
subb
daa
insb
pop
not
test
dec
xchg
and
test
cld
mov
hlt
inc
push
cmpsl
addl
addr16
setbe
jg
mov
fsubl
aad
jns
sub
int
mov
push
daa
pop
mov
jp
repnz
inc
es
cmc
fs
arpl
in
jp
mov
into
xchg
test
and
inc
lret
cmc
pop
or
mov
je
jmp
mov
mov
push
out
add
push
xchg
stc
lods
insl
xor
sub
fidivrl
xor
hlt
mov
cmp
jae
mov
and
cmp
cmp
jne
sbb
dec
lods
pop
pusha
cmp
les
add
lret
add
and
fildl
pushf
aas
data16
push
pusha
pop
dec
jecxz
jg
adcb
mov
lods
inc
repz
jbe
add
pop
mov
pop
jl
lods
popf
pop
adc
mov
dec
jmp
dec
data16
pop
push
pop
mov
xor
xor
pop
mov
shrl
pop
cmp
loopne
cmp
divb
sub
pop
and
inc
dec
dec
lret
pop
fstpt
xchg
jne
mov
fstpt
daa
ja
lods
sbb
jl
push
and
pushf
imul
in
or
clc
push
pop
ja
cmp
and
xor
fidivl
mov
movsl
add
clc
inc
fcoms
sbbb
sbb
test
adc
jne
fisttpll
ss
lcall
pop
mov
movsl
xchg
shrl
int3
jmp
adc
sub
inc
outsl
pop
cmpsb
test
xchg
jecxz
or
call
jb
lods
adc
push
les
stos
bound
xlat
mov
mov
add
ds
mov
pop
sbb
pop
test
sub
mov
adc
inc
mov
mov
inc
mov
idivb
sub
inc
shrl
ret
sbb
jle
in
scas
loope
xor
sbb
jp
cmp
jmp
mov
fwait
daa
test
ljmp
ret
and
iret
add
jns
and
adc
fwait
adcl
jne
cmp
daa
addr16
mov
xchg
cld
ljmp
lret
cmp
testb
push
xchg
xor
lahf
int3
or
ret
mov
test
in
ret
ds
push
