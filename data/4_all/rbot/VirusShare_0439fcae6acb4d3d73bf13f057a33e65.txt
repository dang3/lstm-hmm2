sti
pop
cs
and
int
xchg
and
repz
ljmp
out
or
call
in
test
push
pushf
repz
and
inc
fnsave
jns
ret
aad
jne
push
sbb
popf
and
inc
sbb
call
fs
add
fildll
loopne
out
sub
xor
mov
lock
dec
sub
movsl
and
cmc
or
xchg
data16
push
ja
xchg
mov
cltd
or
inc
xor
xchg
sbb
pushf
movsb
mov
lret
out
fadds
sub
insb
call
inc
repz
sub
popf
stos
and
push
push
or
mov
xchg
fisubl
add
ja
cld
and
sbb
mov
stos
jmp
xchg
push
lahf
xlat
mov
in
jle
lock
jl
ficoms
in
cltd
int
loopne
mov
fidivs
daa
cltd
inc
pop
sub
jbe
test
inc
test
jmp
mov
je
mov
ja
cmp
xor
pop
das
ss
dec
mov
shlb
shll
int
ja
icebp
int3
add
mov
ret
loope
add
lahf
scas
xchg
aaa
mov
and
and
xchg
stos
sbb
dec
dec
clc
mov
addb
mov
sbb
mov
dec
sti
mov
fucomip
insb
arpl
in
rcr
inc
or
mov
lret
or
push
ja
leave
inc
jle
dec
xlat
movsl
jne
mov
and
ss
ljmp
loopne
jo,pt
or
ds
rcl
pop
lret
mov
sub
cld
nop
sbbb
aad
xchg
lea
das
mov
cmp
lret
xor
push
mov
pusha
in
jmp
mov
jno
xchg
mov
push
mov
push
mov
test
inc
roll
repz
push
repz
lret
or
lea
push
push
xchg
lods
ds
push
adc
pushf
or
dec
in
loope
dec
jne
sbb
shlb
call
push
push
movsl
imul
lods
ror
mov
in
mov
fwait
and
rcrb
mov
pop
add
aas
pop
aaa
pop
inc
xchg
add
pop
outsb
rorb
pop
sbb
popf
movsl
gs
mov
testb
push
fmull
cpuid
scas
jp
stos
mov
xchg
hlt
mov
mov
push
mov
sbb
neg
pop
hlt
inc
xor
xor
sub
adc
jbe
dec
mov
sub
xor
mov
nop
mov
stos
or
rcrb
mov
test
push
iret
pop
ds
sub
push
mov
xchg
xor
sbb
imul
push
ja
pushf
sub
xor
inc
sbb
lret
nop
in
subb
jmp
aaa
xor
lahf
stos
and
and
mov
push
sbb
or
das
xor
sbb
mov
loop
cmp
je
add
adc
or
sub
dec
je
cld
push
daa
sub
rclb
mov
xor
pop
ret
lcall
mov
out
divb
push
push
lahf
cmp
stos
sub
ficomps
adc
sub
icebp
inc
mov
and
lods
jecxz
push
jl
faddl
fistl
sub
aam
push
mov
dec
sub
fiadds
rcr
xor
repnz
inc
lds
test
mov
mov
dec
in
fs
mov
cmp
sbb
es
int3
dec
lcall
jbe
popf
push
shr
js
push
jmp
pushf
push
insb
mov
and
dec
mov
jno
sar
push
mov
mov
rclb
fistpl
push
cmpsb
jmp
stc
mov
jo
mov
mov
sub
xchg
ja
pop
pop
mov
cmc
test
aaa
fimull
and
push
cli
jmp
pop
mov
das
lret
movsb
mov
sbb
arpl
mov
das
push
fwait
push
jbe
mov
iret
repz
out
dec
dec
testb
and
push
out
push
xor
iret
mull
or
cmp
adc
xchg
mov
sbb
in
mov
mov
sbb
xor
lret
pop
push
lret
adc
jl
data16
mov
and
cwtl
sub
push
neg
fcoms
das
aaa
cmc
fsts
and
sti
arpl
push
jecxz
data16
fstps
movsl
pop
mov
shlb
mov
mov
scas
ret
cwtl
or
mov
mov
aas
cmc
mulb
dec
in
fstl
sub
jecxz
vcmppd
popf
mov
jge
insl
inc
cmpl
testl
jmp
ret
shl
aam
nop
ret
xchg
jae
pop
push
popf
aaa
jbe
xlat
imul
push
cmp
dec
dec
js
std
jge
mov
and
aaa
push
fdivrl
jnp
iret
lock
or
mov
and
cwtl
test
jmp
push
shl
or
xchg
jae
xor
sbb
dec
push
popf
fbld
dec
or
jmp
sub
mov
sub
fisttpll
ss
sbb
cmp
aaa
ljmp
int3
dec
mov
pusha
adc
sub
push
incl
xchg
out
stos
addl
into
dec
xor
rcll
imul
dec
dec
mov
jmp
mov
sbb
popa
bound
dec
add
movsl
gs
pop
xchg
outsl
jnp
add
fidivl
sbb
add
and
fistl
xor
in
push
insl
jbe
and
pop
lcall
sbb
sbb
lock
jecxz
imul
dec
cmpsb
push
repz
push
icebp
and
push
in
bound
andl
xor
dec
test
lahf
sub
pop
mov
xor
mov
lods
hlt
add
adc
or
adc
movups
xchg
ud2
inc
mov
pop
sbb
xchg
bound
add
sub
andl
sub
dec
jno
in
pop
sub
xor
fs
adc
adc
xchg
pop
sub
pop
pop
shrb
fnstcw
mov
fsubl
add
fwait
adc
pop
mov
inc
xchg
xor
andb
shl
xchg
jg
dec
pop
pop
imul
jg
out
sub
pop
fs
into
push
bsf
jp
int3
and
and
movsb
loopne
push
xchg
pop
cmc
or
add
int
scas
bound
imul
int
leave
lret
or
je
icebp
popf
jmp
sbb
test
and
out
xchg
aaa
shl
imul
mov
xchg
push
jge
jg
rorl
add
aad
lods
mov
sub
add
fwait
mov
mov
jns
cmpsb
mov
js
and
cmc
in
inc
jnp
inc
xor
pop
cmp
jb
mov
pop
das
jbe
movsl
stos
out
fldz
lret
cli
addr16
mov
das
mov
testl
or
inc
inc
aam
and
jbe
fwait
pop
mov
dec
test
xor
sahf
lods
jmp
mov
lcall
push
imul
rcll
mov
les
popa
sahf
icebp
movl
adc
pop
daa
mov
adc
and
fbstp
mov
jge
pop
pop
or
into
add
sbb
xchg
mov
stos
add
mov
jg
je
sbb
cltd
xchg
xlat
mov
jae
sub
pusha
fwait
jmp
insl
in
sub
and
mov
popf
inc
inc
scas
cmc
jne
ja
cmp
aad
in
fildl
clc
push
std
inc
fs
xor
add
sub
pop
adc
mov
jb
inc
mov
enter
fwait
sar
aaa
dec
movsl
popl
in
push
call
cwtl
or
out
add
popa
xor
and
push
stos
test
inc
or
ret
sbbb
shrl
jae
sub
or
cli
arpl
popf
sbb
dec
aad
jae
pop
jno
iret
lahf
inc
mov
sub
mov
sub
mov
cmpl
add
stos
jmp
jo
pop
imul
fucomp
and
hlt
fsub
add
push
lods
int3
loop
sbbb
inc
dec
loopne
inc
dec
lcall
rorl
test
sbb
push
imul
dec
mov
pushf
sub
push
push
out
lods
inc
rcrb
das
aam
lds
jle
fisttpll
add
xor
sbb
movsb
stos
and
rorl
sbb
xchg
push
cmp
adc
pop
xchg
xchg
jno
cmpsb
mov
mov
data16
dec
sbb
fwait
insb
mov
sti
arpl
fucomip
xor
pusha
and
sub
dec
mov
fdivs
fdivr
cmp
test
cld
jo
in
mov
xlat
aaa
and
cld
pop
rcrl
into
fisttpll
xchg
sahf
cmp
nop
mov
xor
jmp
movsb
push
xchg
aad
jns
mov
fnstcw
xchg
add
pusha
ljmp
inc
mov
and
clc
and
das
cld
mov
push
and
int
mov
je
push
aas
push
inc
mov
popa
cwtl
push
and
cmp
cwtl
int3
movsl
arpl
mov
dec
imul
mov
dec
inc
out
add
fwait
nop
in
mov
scas
out
jne
add
sub
shll
std
clc
or
outsb
imul
insl
mov
jmp
testb
ss
pop
cmp
cld
xor
dec
loop
dec
push
sub
pop
dec
pop
stos
mov
sub
rclb
orb
cmovb
cmp
imul
repnz
pusha
cmpsl
pop
imul
leave
adc
aam
mov
orl
test
vandps
or
inc
outsb
sbb
and
add
xlat
test
lods
xchg
fcmovb
push
lcall
pop
mov
js
rclb
insl
sbb
ret
lret
sti
mov
push
or
add
scas
enter
insb
jns
mov
shr
test
ret
sub
sub
lret
jne
xchg
ret
lock
fnstsw
mov
mov
outsb
ds
mov
insl
insl
pop
imul
or
cmc
les
filds
cmc
jnp
cmp
pushf
cmp
cltd
js
xor
mov
cmp
xor
dec
repnz
ljmp
outsl
pusha
mov
test
lahf
ljmp
mov
inc
cmpsb
jp
dec
out
sub
fs
nop
in
sub
sbbb
jg
pop
xor
in
fdivrl
test
xor
xchg
and
into
adc
sbb
test
ljmp
mov
in
and
pop
sub
pop
js
push
inc
mov
movsb
xchg
ss
ljmp
push
push
inc
sbb
jge
shl
mov
mov
sbb
xchg
imul
sarb
fistl
cmp
mov
int
int
and
jae
mov
ret
xor
sub
inc
and
mov
aad
frstors
jecxz
adc
adc
out
mov
mov
xor
daa
andb
cld
push
movd
pop
das
xor
scas
insl
cmpsl
rorb
std
push
test
xchg
test
xchg
mov
cmp
push
push
dec
cmp
push
sub
xchg
ret
mov
gs
leave
xchg
push
sbb
dec
mov
mov
jle
shrl
add
lret
aaa
sahf
push
int
adc
inc
cmc
xchg
movsb
test
or
mov
add
movsb
pop
fwait
lret
cmp
jl
xor
lret
push
and
pop
fisubl
roll
repnz
or
inc
cmp
add
dec
das
je
mov
js
add
fcmovbe
jns
xchg
out
fidivs
jp
mov
and
loop
insl
cltd
addb
xor
pop
jmp
xchg
xor
in
pusha
in
cmp
adc
mov
popa
test
inc
pop
jmp
pop
xorb
imul
ds
jnp
adc
adc
cmp
enter
adc
cwtl
testl
jmp
xchg
mov
cmp
xchg
add
test
cmc
int3
popa
aas
test
mov
adc
movsl
icebp
lds
mov
das
out
lock
sub
lret
jge
push
and
pop
and
xor
sbb
icebp
fimuls
decb
aas
jno
data16
mov
mov
and
xchg
xor
lahf
out
mov
xchg
popa
push
xchg
repz
or
test
jnp
loop
fidivl
inc
cld
push
mov
sbb
push
lods
stc
and
test
fiadds
xor
aaa
mov
cmc
je
hlt
ds
popa
lods
hlt
sbb
scas
mov
xchg
loope
loopne
call
adc
push
xchg
pop
push
movsl
sbb
ret
pop
sbb
lods
inc
jns
mov
add
mov
cmp
and
mov
and
mov
mov
js
icebp
cld
outsl
sub
jbe
es
cli
je
cmp
or
xchg
hlt
cmp
xchg
lock
loopne
sbb
out
lret
jb
les
ds
repnz
std
imul
cmpsb
mov
dec
sub
lret
das
je
fstpt
test
inc
shrb
sub
pop
ds
in
push
lahf
push
fisubrs
in
jne
adc
push
cmpsb
add
push
add
test
jp
xchg
loopne
sbb
mov
push
pop
sti
jge
out
push
jns
inc
xchg
sub
mov
imul
sbb
push
mov
inc
dec
jnp
pop
fmull
test
cmp
aaa
sub
xorl
repnz
and
xchg
lcall
jp
loopne
jbe
mov
xchg
push
icebp
aad
xchg
cmp
jo
mov
hlt
pop
cli
jecxz
aam
outsb
adc
dec
sbbl
subl
pop
rolb
dec
pop
mov
aaa
or
cmc
push
hlt
or
mov
rcll
std
adcb
scas
pop
sub
sub
jge
push
iret
inc
fiaddl
jo
xchg
jns
xor
add
mov
adcb
mov
icebp
lret
int3
lods
jbe
stos
cmp
xorl
call
and
clc
xchg
add
xchg
push
data16
add
mov
xchg
dec
mov
xchg
loop
push
push
sbb
gs
adcl
mov
shrb
in
xor
push
mov
push
mov
pop
icebp
dec
push
jno
cmpsb
or
sbb
add
negb
lds
mov
xchg
call
icebp
and
jbe
ja
shll
mov
fcmove
mov
data16
adc
mov
mov
lods
fwait
lods
mov
jg
loopne
adc
or
gs
cmp
sub
dec
dec
cld
inc
push
inc
jae
out
rclb
sbb
sbb
jne
cmp
sub
fisubs
popa
pop
shlb
mov
leave
dec
sub
rcll
ret
sbb
insl
loope
negl
xchg
push
sbb
push
addb
mov
sarl
dec
mov
mov
mov
ds
jne
add
lds
inc
lea
pushw
fistps
jo
test
sbb
add
and
xor
push
incb
popf
push
push
test
dec
xlat
into
and
popa
sub
xor
xchg
mov
jb
pusha
test
sti
dec
in
fnstsw
xor
mov
movsl
jnp
ret
test
mov
icebp
into
ds
or
or
pusha
adc
adc
popa
cld
popa
in
jnp
mov
push
mov
jb
sub
into
leave
iret
outsb
sub
push
test
and
mov
movsl
mov
mov
xchg
testl
jo
mov
push
mov
xor
addr16
int
lcall
fwait
test
cmp
push
jns
arpl
ljmp
dec
iret
xchg
test
lods
or
lahf
lahf
mov
loope
test
std
sahf
dec
lret
inc
push
push
loop
push
add
mov
push
xchg
mov
inc
mov
stc
stc
cltd
xchg
xlat
or
out
es
aam
jle
cwtl
cmpsl
push
or
gs
in
ret
ja
aad
ss
dec
pop
xchg
cli
outsb
ljmp
xchg
loop
xchg
inc
arpl
inc
inc
cmpsl
mov
pop
xor
push
js
or
and
daa
bound
jb
sub
out
aad
outsb
lock
xchg
jo
ljmp
mov
cwtl
jbe
or
andl
push
xor
push
pop
cltd
jl
jge
or
sub
xchg
jg
sahf
push
or
ja
popf
jnp
mov
aaa
divb
push
enter
xchg
ret
sub
mov
test
cli
add
cmp
outsl
gs
arpl
sahf
dec
pop
cmp
fs
fwait
cli
cmpsl
rol
aam
aas
js
sub
stos
xchg
lret
mov
addr16
inc
lret
and
push
pop
insb
out
cltd
ror
subb
sbb
ljmp
and
in
pop
sub
dec
push
adc
push
cmp
mov
cmc
repz
jecxz
xchg
fwait
and
fdivr
cmpsb
aaa
pop
pushf
loopne
cs
in
or
lods
mov
jp
pop
repnz
xor
sbb
outsl
add
mov
bound
mov
int3
fsub
or
inc
xchg
jg
mov
popa
outsb
adc
inc
dec
push
lods
test
add
jl
negl
mov
xlat
inc
out
jnp
pop
cmpl
popf
in
jmp
clc
lahf
stc
scas
ljmp
insb
add
popf
movl
push
and
fcoms
sbb
mov
xchg
push
or
enter
in
fldl2e
rclb
aaa
adc
jbe
pop
mov
call
mov
imul
pop
mov
jns
nop
push
sub
in
pop
movsb
xchg
sub
data16
xchg
mov
mov
push
popa
iret
cli
mov
out
cli
sahf
or
ret
inc
scas
sahf
fstps
aaa
pop
pop
gs
push
push
aam
mov
ss
icebp
movsl
push
cmp
xor
pop
sub
lods
push
sbb
xchg
mov
mov
stc
and
mov
or
xchg
enter
mov
mov
pushf
into
sub
adc
mov
and
mov
cmp
sbb
lret
xchg
cmp
jl
add
and
je
fbld
scas
inc
dec
data16
adc
sarb
mov
mov
or
xchg
ja
sub
stos
sub
test
fidivrs
adc
pop
push
outsl
fcoms
int
adc
jecxz
sahf
ss
stos
jmp
sub
mov
repz
add
dec
push
push
fdivl
inc
add
scas
lret
mov
es
repz
cmp
mov
loope
sbb
in
out
iret
fisttpl
daa
pusha
sub
add
or
jl
jmp
mov
push
add
dec
jge
mov
fcoms
inc
pop
sub
hlt
loop
out
and
xchg
bound
ds
adc
pop
fwait
xchg
jnp
pop
addb
push
cmp
fwait
adc
into
or
lods
xchg
ja
dec
es
icebp
and
pop
pop
mov
sub
movsl
shrb
adcb
and
inc
ja
test
dec
sahf
imul
popf
nop
sbb
into
clc
push
mov
das
push
shll
repz
mov
cmpsb
jnp
sahf
jnp
or
leave
lods
or
mov
jp
addl
leavew
cmp
das
repnz
push
push
repz
push
inc
dec
sub
int
std
xchg
mov
ss
icebp
push
hlt
es
mov
or
inc
stos
xor
xchg
cmpb
jne
xlat
push
and
adc
in
lret
jg
ds
mov
push
call
jo
cltd
clc
mov
mov
adc
dec
mov
cmpb
jns
inc
pushf
in
lret
xchg
push
mov
lods
cmp
mov
push
dec
xchg
adc
ret
arpl
inc
ret
pop
addl
inc
lret
mov
dec
fisttpl
mov
insb
sbb
mov
into
call
inc
rcll
push
leave
mov
dec
jle
jns
inc
add
into
popa
jmp
mov
xchg
je
jmp
loopne
jmp
jb
pop
inc
cwtl
clc
cmp
sarb
popf
insl
loopne
xchg
pop
xor
dec
sbb
pop
shl
adc
pop
cmp
add
lcall
mov
cld
xchg
fdivs
pop
repnz
jg
sbb
push
xchg
and
js
enter
mov
sub
jge
dec
mov
movsb
adc
ljmp
jno
and
shll
enter
dec
jnp
jne
jmp
push
movsb
sbb
add
add
dec
pop
ja,pn
lea
pusha
aaa
shl
fidivs
addr16
cld
mov
out
inc
mov
dec
mov
mov
roll
jp
js
jae
push
lock
adc
add
lods
pop
jb
aam
cld
mov
out
repz
push
add
ror
jb
shll
push
or
xor
pop
or
lret
mov
addl
stc
popa
cmp
xor
xor
xchg
jno
push
popf
push
adc
sahf
cmp
adc
fstpl
inc
jno
ljmp
pop
cwtl
add
lock
or
mov
int3
movsb
lock
push
jae
aaa
add
cli
rep
adc
rolb
add
icebp
mov
xor
call
cld
negl
cli
push
push
xchg
das
dec
xchg
jge
inc
pop
mov
xchg
add
ret
sbb
cmp
jmp
jge
popf
popf
xlat
mov
mov
jg
push
into
js
dec
push
adcb
inc
mov
cltd
inc
mov
xchg
pop
test
lret
movsb
mov
popa
mov
movsb
sub
movsb
movsl
ret
and
sahf
imul
test
movsl
hlt
inc
shll
jae
or
cs
cmpsl
lods
test
nop
jnp
mov
in
mov
rorl
lcall
sti
adc
sub
iret
mov
mov
pusha
test
add
pusha
jecxz
jp
mov
add
sbb
mov
or
xchg
pop
fadd
movsb
push
xor
cwtl
in
lret
pop
lds
jno
std
jo
xor
add
cmp
mov
mov
je
repnz
enter
inc
dec
daa
aad
dec
push
out
jb
sahf
popf
cmp
rorb
imul
mov
pop
loop
repnz
mov
lahf
cmpsl
enter
sub
jbe
add
jne
jae
xorl
add
jl
sbb
ret
pop
arpl
cld
inc
fdivr
in
and
sub
inc
adc
push
aad
les
mov
pop
jmp
int3
add
loope
dec
push
xor
ss
bound
cs
mov
jnp
and
pop
jg
loope
call
jmp
jne
loop
push
clc
js
push
jg
and
int3
sbb
sbb
cmp
lods
or
les
sbb
sub
inc
cmp
mov
jno
stc
jae
push
sbb
jmp
scas
add
sub
test
aam
aas
cmp
cld
scas
add
outsl
lods
leave
in
mov
mov
inc
test
jecxz
cmp
scas
pop
cli
dec
aad
mov
adc
pop
movsl
ja
lods
xchg
mov
inc
hlt
inc
test
int3
adc
adc
add
inc
push
inc
js
notl
popa
mov
xor
loopne
xchg
scas
int3
stos
jno
enter
pop
xchg
jp
je
mov
aaa
int3
dec
add
and
aam
out
xor
movsl
jp
aad
pop
dec
dec
in
cmp
xchg
sbbb
das
xor
cmp
jae
in
jl
outsl
inc
clc
adc
push
imul
mov
jnp
mov
outsb
insb
stos
jecxz
mov
jmp
add
ljmp
repz
sbb
mov
xchg
mov
dec
pushf
rcr
data16
dec
adc
inc
outsl
sarl
sbb
jo
rolb
fimull
jnp
shlb
xor
or
mov
jecxz
adc
mov
mulb
stc
or
inc
pushl
sahf
sub
ficoms
popf
jg
loopne
cmp
data16
jle
mov
or
mov
pop
fisttps
imul
test
sbb
nop
cltd
std
out
sysexit
xor
cmp
mov
in
fs
ss
ret
fists
inc
sar
inc
pop
push
lret
cld
inc
push
les
rcll
out
cmpsb
mov
hlt
cli
xlat
aam
pop
jae
xchg
ret
inc
dec
or
int
jle
mov
xchg
and
sub
jb
pop
loop
pop
adc
aad
mov
mov
movsl
daa
dec
lods
shlb
pop
sahf
lock
fisttpl
jg
into
int
cmpsl
inc
or
sbb
fadds
push
jae
call
pop
rorb
mov
data16
and
sbb
inc
xchg
mov
into
rcrl
and
xor
and
mov
rcrb
push
lret
xor
popa
pop
ljmp
shrb
pop
cmp
mov
mov
mov
outsl
mov
or
lock
pop
repnz
cmp
adc
loop
and
js
fcomip
cmp
mov
jb
dec
dec
arpl
adc
sbb
loope
shl
rorb
push
in
andl
cmpsb
pop
push
and
push
xchg
dec
sbb
inc
pusha
roll
movsl
mov
lahf
inc
in
outsb
xor
ret
andl
mov
add
cmp
sub
xchg
fmuls
pop
loopne
xor
cs
or
dec
xor
sbb
ja
stos
mov
scas
std
pop
les
in
sub
or
mov
aas
test
sbb
gs
or
mov
inc
stc
es
mov
scas
rorl
lds
dec
addr16
cmp
sti
outsl
add
adc
mov
and
repnz
xchg
adc
data16
add
xchg
mov
adc
out
jno
push
mov
jbe
jb
add
adc
add
lods
call
fwait
pop
stos
mov
or
and
cmp
pop
mov
add
lret
add
pop
ret
mov
inc
mov
push
test
xchg
mov
dec
sub
in
jb
ret
ja
pop
push
adcl
mov
dec
clc
fidivl
cltd
mov
ja
jno
scas
in
fwait
rol
data16
lods
cld
jbe
subl
mov
xchg
fwait
push
call
and
ss
xor
dec
add
ljmp
jmp
xor
sub
and
cmpsb
scas
cmp
jp
xorb
mov
sub
push
into
or
pop
aad
sub
xchg
dec
int3
fxch
ret
call
xor
jg
fnstsw
cwtl
and
push
cmp
adc
xor
outsl
out
inc
xor
movsb
xchg
mov
dec
mov
nop
popf
js
in
xchg
fdivr
push
push
cwtl
js
ljmp
adc
hlt
or
pop
and
cmp
sub
lahf
xchg
cmp
into
repz
enter
mov
xchg
rclb
inc
sti
adc
push
nop
mov
jg
out
push
or
xchg
pop
xor
daa
popf
popa
fwait
dec
ret
cwtl
inc
aam
cmp
dec
dec
fmull
loope
and
jne
xlat
jo
imul
addr16
in
shrb
das
adc
arpl
hlt
loopne
daa
out
je
cmp
mov
mov
xor
mov
cmp
pop
mov
leave
dec
cwtl
pusha
mov
ret
jae
leave
mov
add
negl
es
mov
mov
mov
adc
adcb
and
xor
sub
jnp
xor
stos
add
adcl
std
dec
adc
and
inc
or
push
out
xor
jg
mov
psubsb
mov
cmp
cmp
clc
mov
xchg
outsw
repnz
add
imulb
mov
js
and
loopne
xor
inc
or
or
test
lret
movsb
mov
xlat
shr
popa
cli
xchg
mov
inc
push
out
imul
and
push
pop
dec
cmp
jo
cmp
cmc
out
xor
xlat
clc
outsb
pop
ret
jae
scas
jmp
mov
jae
sahf
cli
push
inc
inc
xor
jmp
orl
testb
arpl
popa
inc
aad
jb
mov
mov
xchg
jae
outsl
dec
cmp
mov
test
test
decb
movsb
push
or
dec
std
std
add
in
scas
dec
jg
jae
shl
mov
add
sbb
xchg
movsl
cld
push
add
sbb
ret
dec
aam
movsb
dec
jl
sti
imul
sbb
inc
xchg
orb
jne
lods
xor
repz
ljmp
pop
xchg
jae
jle
jmp
rcll
xor
test
test
jno
divl
mov
mov
mov
push
test
ljmp
xchg
jmp
adcl
lahf
inc
lcall
shll
scas
clc
lds
sti
nop
lret
mov
sbb
popf
mov
insl
xchg
test
fidivl
mov
cwtl
sbb
add
stos
test
addl
aaa
testl
loop
add
sub
scas
cmp
arpl
fs
xchg
pop
mov
fwait
call
jno
cld
int3
and
nop
add
sub
push
ficomps
cmp
xchg
cs
arpl
stos
and
ljmp
ficoms
pop
scas
sbbl
push
add
dec
mov
pop
push
imul
xlat
mov
pop
fldcw
inc
sbb
gs
inc
outsb
std
push
mov
test
mov
repnz
jmp
pop
pop
repnz
xchg
jno
adc
jb
push
clc
cltd
clc
fsubrl
xor
lods
inc
xchg
push
je
fldenv
fmulp
out
jnp
test
es
inc
xchg
sbb
cs
jle
dec
push
jno
mov
roll
test
push
lods
and
adc
es
fs
xorl
in
xor
add
stos
adc
jae
loope
ret
sub
lret
mov
inc
scas
mov
daa
cli
fsubrs
stos
leave
push
adc
push
mull
mov
fsts
xorb
jne
fisubrs
dec
pop
sub
pop
aam
rolb
subb
push
mov
adc
stc
jne
push
xchg
roll
subl
fidivl
ljmp
aad
sti
and
push
xor
adc
stos
push
ret
mov
xchg
scas
lret
scas
inc
gs
mov
fsubl
add
xchg
mov
ja
jl
clc
scas
add
movsl
pop
rorl
data16
add
adc
adc
lods
jecxz
dec
gs
jge
and
mul
xchg
jbe
call
cbtw
dec
inc
mov
sbbl
dec
lds
xor
imul
xor
cmpsb
xchg
movsl
cmpsb
call
inc
fdivl
cmp
popf
or
xor
inc
or
movsb
aad
pop
xor
in
int3
aas
lret
push
mov
sbb
nop
out
pop
xchg
fucomip
or
outsb
xchg
sub
and
cmp
dec
lds
and
sbb
sub
or
lcall
or
sub
xchg
adc
push
push
rolb
adc
es
mull
sbb
dec
popf
mov
pop
in
fs
xchg
push
aad
pop
ljmp
jge
dec
sub
sub
in
mov
mov
outsl
mov
sti
inc
mov
ja
or
adc
adc
ret
mov
orl
mov
xchg
idivb
xchg
sub
test
jae
test
adcl
je
cmp
icebp
jo
mov
jmp
mov
sub
fiaddl
ljmp
and
aad
mov
jl
inc
jl
lds
lcall
lret
xchg
jae
push
testb
add
or
leave
cld
ss
in
xor
mov
nop
sbb
repz
std
out
and
jo
rclb
repz
stos
cmp
mov
push
jae
mov
inc
push
lods
dec
mov
pop
outsb
push
and
adc
push
stos
jg
aam
stc
test
rolb
cli
sub
rcll
lods
ja
adc
clc
fdivs
sbbl
je
imul
mov
xchg
push
sbb
insb
imul
gs
sub
push
insb
xchg
es
or
jle
sbb
push
movsb
inc
jae
pop
cmp
popa
aas
clc
popf
fisttpll
jae
icebp
sbb
dec
insl
mov
cli
loop
xor
arpl
dec
loope
int3
lahf
inc
cmp
sarl
mov
pop
push
cmp
push
push
add
sub
pop
popf
jecxz
push
call
or
std
jecxz
subb
ss
inc
sbbl
ss
xchg
lret
fs
loop
dec
push
xor
mov
popa
xchg
lock
and
xchg
cmp
or
push
jl
push
scas
xlat
jb
sub
pushf
xor
push
movsb
inc
out
and
jle
xor
pop
fabs
xor
ret
mov
sahf
icebp
jbe
repz
mov
pop
xlat
leave
fmull
mov
aad
ljmp
and
in
or
mov
inc
notb
imul
cs
sbb
inc
inc
je
jno
sbb
mov
pushf
ljmp
mov
cwtl
xor
arpl
inc
arpl
cmpb
sub
jmp
lahf
xchg
mov
mov
lret
pop
sub
adc
or
cmp
inc
xor
sahf
mov
call
lcall
out
xor
addr16
fwait
inc
inc
pop
lock
jecxz
add
sarb
jmp
les
ja
xchg
sub
imulb
sahf
sahf
adc
push
sbb
jo
sbb
fnstenv
jl
iret
cmp
sbb
stos
push
popf
push
jnp
xor
test
mov
xchg
shll
sub
mov
das
pop
jb
clc
jmp
pop
push
xor
fnstcw
rcrb
mov
sbb
adc
push
cmp
mov
jnp
sbbl
and
xor
inc
adc
and
dec
mov
pop
or
jae
jl
or
bound
leave
addr16
adc
pop
mov
lret
outsl
loope
add
les
les
xchg
dec
incb
xor
and
bound
sub
adc
mov
cmpsb
pop
adc
adcl
sti
push
sbb
negl
sub
jbe
mov
mov
mov
and
mov
adc
lret
jge
push
outsb
adc
jne
ja
cmp
and
nop
sub
adc
sarl
sbb
bound
sub
in
mov
jnp
sbb
cmp
adc
mov
das
sub
xchg
sub
sub
fsubr
cmpsb
pop
pop
or
inc
rcrb
int
push
mov
adc
jge
int3
pushf
gs
mov
sbb
add
shll
or
stos
and
addl
adcl
xor
es
and
fdivrs
movsl
sbb
ds
add
aaa
push
sbb
popf
push
cld
stos
sarb
iret
push
mov
cli
cmp
stc
mov
popa
jge
sub
nop
andb
les
jno
cmc
push
adc
sarl
mov
pusha
mov
pop
dec
lods
or
lahf
xchg
xchg
add
jno
outsb
fisttpll
lcall
ret
dec
cmp
xor
addr16
cmp
test
mov
dec
js
lds
rorb
push
cmc
lods
movsb
out
sbb
xchg
jo
out
outsl
cmp
imul
or
xor
js
call
sbb
cmp
cmpsl
or
xchg
ret
jo
fimull
fdivp
pop
sahf
fsubr
faddp
sub
jle
lret
cmp
dec
daa
sub
addr16
js
sub
fldl
adc
mov
or
cli
xchg
jg
pop
inc
and
popf
loope
jo
int3
das
pushf
push
aad
xchg
adc
jmp
imul
sbb
leave
mov
lahf
dec
lret
insb
jl
mov
sbbl
movsb
dec
push
out
in
sbbb
or
mov
shrd
cwtl
jp
cmp
call
xchg
test
push
jg
add
arpl
lret
xchg
mov
or
or
sbb
cltd
jmp
ljmp
pop
in
cld
sysenter
lahf
sbb
loop
lock
or
std
call
shr
adc
roll
stos
jnp
enter
and
cmpl
jecxz
stc
cmpsb
dec
daa
add
and
shlb
xor
add
xchg
not
jmp
fadd
jle
mov
xor
pop
mov
sti
out
imul
loopne
xor
stos
sub
icebp
pop
and
clc
adc
jns
nop
mov
inc
mov
fwait
jecxz
adc
rclb
jl
js
add
leave
sbb
call
mov
cmp
pop
movsb
mov
scas
stc
mov
in
jg
mov
dec
mov
push
arpl
lret
adc
loopne
xor
push
loop
clc
scas
loopne
jnp
fldl
pop
test
jns
adc
xor
popa
xchg
loope
call
mov
xor
sbb
addr16
aam
inc
mov
and
fcoml
xchg
and
xchg
scas
aas
cld
sub
sbb
adc
dec
xor
xchg
xor
dec
xchg
xlat
dec
sahf
pop
xor
je
adc
mov
xchg
pop
shll
cmp
pop
adc
xor
add
mov
aam
push
ret
cwtl
test
fdivrl
fldl
push
push
movsb
mov
dec
pop
pop
enter
inc
in
mov
xor
push
sub
out
arpl
aaa
or
les
adc
pop
add
jno
pop
rcr
jb
inc
xchg
imul
push
pop
xchg
mov
cld
cmp
jg
movsb
in
ljmp
lret
sub
mov
stos
fildll
jns
push
sub
sti
outsb
add
repnz
idivl
test
cmpsb
aaa
aaa
xchg
imul
jg
fdivrs
push
jae
or
push
cmp
mov
out
sahf
fmuls
or
ja
sahf
push
std
mov
aad
jl
lods
xchg
mov
addr16
jg
sub
mov
dec
pop
test
inc
mov
pop
or
jns
add
addr16
add
xor
mov
adc
lods
nop
jmp
sbb
cmp
cld
adc
lret
clc
fmuls
sbb
jmp
pop
repnz
insb
mov
mov
mov
test
pushf
push
lret
test
mov
sbb
bound
gs
inc
mov
jo
fs
sbb
push
and
sbb
lret
push
cmp
jbe
psrlw
push
out
rcr
ljmp
mov
mov
bound
or
xor
push
push
into
ss
scas
push
mov
lds
icebp
call
fisubl
pop
cmp
aad
jns
or
imul
ficoml
ljmp
mov
repnz
dec
inc
jl
add
test
jl
rol
adc
jmp
ds
lods
add
outsl
cwtl
mov
aad
fwait
loope
push
add
aaa
out
mov
pop
mov
mov
clc
mov
jns
push
adc
shll
inc
stos
xor
jle
xchg
scas
or
fiadds
mov
jne
inc
sub
cmc
adcb
inc
jl
inc
sbb
into
fiaddl
cmp
mov
int
push
subl
sarb
push
mov
and
sub
shrl
xlat
push
mov
xor
adc
mov
popa
inc
scas
leave
add
sbb
push
test
ds
push
pop
jbe
scas
sbb
inc
fs
mov
into
sbb
negb
imul
push
out
sbb
adc
cvtdq2ps
and
popf
mov
jle
cwtl
jb
addb
or
jmp
mov
mov
leave
sarb
aam
adc
inc
adcb
jg
les
call
je
mov
cmc
fimull
add
repz
cmp
push
ds
adc
push
pop
mov
icebp
sahf
call
sbb
sar
dec
bound
jne
mov
push
loop
mov
inc
loope
dec
imul
lahf
xchg
hlt
or
cmpb
adc
jl
mov
mov
dec
inc
sti
adc
mov
sub
loop
rclb
xchg
xchg
dec
cmc
fistpl
mov
inc
xor
xchg
cmp
addr16
adc
xor
out
or
cmpsb
icebp
fisubrl
test
and
scas
les
inc
xor
xor
mov
arpl
test
in
jno
cltd
add
or
loopne
insl
mov
lcall
gs
fdivl
fdivr
adc
pushl
test
popa
les
insl
and
out
lretw
cmp
push
jge
movsl
xchg
cmp
repnz
into
rcrb
scas
shlb
jbe
fistpll
das
mov
repnz
xchg
xor
dec
daa
pop
arpl
push
std
insl
mov
iret
mov
jnp
pop
jle
add
das
je
in
add
push
adc
xchg
js
or
je
mov
or
aam
mov
gs
pop
adc
sbbl
das
xchg
imul
out
adc
ret
mov
jne
add
and
das
sbb
aad
pop
mov
ja
pop
mov
xor
popf
imul
mov
js
or
cmp
rorb
scas
dec
ljmp
or
add
nop
shrb
repnz
dec
aad
pushf
movsb
mov
mov
sbb
cs
lcall
mov
push
das
scas
stos
sub
xor
ret
cmpsl
shll
mov
jl
inc
into
scas
insl
adc
xchg
mov
jae
shl
or
es
xchg
shl
pusha
sub
jg
dec
rorl
add
insb
mov
test
dec
aaa
inc
pop
mov
jmp
and
inc
nop
sti
and
outsl
adc
cmp
out
push
movsl
shrl
call
call
cmpsb
add
pop
leave
mov
lss
addb
stos
inc
lea
add
ds
fld
rorl
inc
cmpsb
push
imul
ret
xchg
and
idiv
add
testb
cld
mov
lea
dec
gs
cmc
adc
std
leave
add
dec
xchg
stos
push
out
mov
adc
data16
sti
stos
lret
movsb
jg
mov
roll
cmpsb
imul
xchg
fdivrl
or
out
mov
cmc
dec
sbb
mov
data16
imul
lcall
sbb
in
in
jmp
aas
mov
xchg
push
xlat
mov
fld
mov
je
or
mov
cmp
xchg
rolb
stc
and
clc
xor
outsl
or
mov
cld
push
in
sub
out
xchg
ja
mov
mov
jmp
and
subb
push
xlat
pushf
mov
ret
xchg
mov
fisubrs
fmul
rcll
and
movsb
ja
fucom
aad
pop
or
jae
pop
dec
cwtl
sub
iret
sarl
movsl
mov
dec
jno
shll
jg
stos
mov
shrb
cld
sahf
and
stos
xor
mov
xchg
xlat
std
adc
push
cltd
scas
mov
outsl
xchg
daa
dec
push
mov
or
push
xor
je
xchg
xor
pop
cmp
inc
std
movsb
arpl
ds
adc
dec
or
or
mov
mov
test
outsl
lods
and
mov
mov
xor
or
fmull
or
shrb
mov
lret
jbe
lock
or
aas
test
mov
cmp
and
int3
add
mov
push
js
js
int3
ffreep
data16
sbb
xchg
push
xorb
push
pop
pop
and
nop
inc
lret
and
sbbb
dec
cmp
inc
pop
dec
sub
sbb
add
popf
mov
cmpsl
ja
sti
jns
xchg
pop
test
in
movsl
call
jmp
lret
loop
icebp
jb
cmpb
lods
decb
rol
loope
push
jg
addr16
xor
cmc
dec
sbb
mov
imul
out
in
inc
in
push
sti
rorb
rcrl
test
mov
and
pop
cld
inc
fisubrs
jnp
mov
add
or
scas
mov
adc
sbb
outsl
dec
cmpsl
mov
mov
jg
jl
adc
jae
mov
lea
and
popa
loopne
lea
sti
mov
sarb
xchg
std
outsl
rol
stc
inc
ds
fistps
lahf
movsl
mov
xor
cwtl
pop
ret
or
shll
inc
push
xchg
xchg
insl
jmp
push
psadbw
xor
dec
jecxz
in
or
flds
adc
ds
mov
mov
mov
lds
ds
js
fxch
je
scas
xchg
setg
adc
loop
out
out
aas
sub
mov
lahf
fcmovb
sahf
sub
push
ret
repz
rcr
cmp
ror
fucom
cmp
mov
inc
loopne
add
fucomip
pop
mov
xchg
mov
fiadds
ljmp
jae
mov
lods
icebp
rep
out
imul
inc
nop
or
rcrb
leave
rorl
into
push
inc
xor
icebp
out
iret
icebp
aad
or
jg
xor
sub
ss
cmpsl
in
adc
in
ljmp
inc
enter
sub
adc
fdivrl
in
xor
inc
lods
arpl
bound
leave
mov
inc
xchg
jmp
aaa
xchg
push
jl
sub
out
sub
fdivs
cmp
push
adc
mov
add
push
dec
mov
inc
sub
rorb
xchg
xchg
mov
addr16
xor
xchg
clc
push
lret
xchg
sahf
push
fcomp
cld
scas
push
nop
roll
mov
out
or
dec
add
mov
lret
lds
cld
add
ds
pop
cmc
sub
jae
push
insl
push
push
idivl
int3
das
sub
arpl
xlat
inc
cmovnp
and
mov
ret
iret
mov
addr16
adc
add
call
add
mov
or
add
jge
xor
pop
or
jmp
pop
movsb
rorl
mov
add
scas
ret
push
bound
xchg
mov
push
cmp
or
ds
pusha
sbb
sbb
add
xchg
dec
push
lahf
rcrl
loop
pop
xor
inc
jo
out
rorb
xchg
clc
pop
popf
adc
push
filds
fwait
cli
outsb
insb
mov
scas
insl
xchg
ljmp
mov
stos
xor
lret
shll
mov
lods
push
repz
arpl
incl
pop
mov
test
aaa
aaa
sub
and
sub
pop
xchg
cs
sbb
xor
leave
xor
sbb
fwait
xor
add
pop
mov
jo
sarl
add
hlt
or
push
neg
test
loopne
in
mov
popf
in
enter
adc
fldt
push
mov
xchg
cmp
std
nop
or
mov
aaa
mov
push
jle
jne
fs
pushf
mov
xchg
iret
cli
imul
int3
mov
jnp
or
adc
or
btr
stos
adc
dec
mov
dec
adc
cmp
sub
add
and
mov
and
in
cmp
iret
hlt
push
jle
fidivrl
mov
sub
into
int
sbb
xor
int3
daa
pop
scas
out
loopne
add
aam
test
cmp
xor
sub
popf
jge
pop
fstpt
push
imul
adcb
mov
cmp
push
sub
adc
fsub
mov
ljmp
popf
popf
vphaddubd
movb
mov
mov
hlt
or
jno
fwait
sub
rorl
mov
xor
pop
insl
jle
mov
leave
mov
adc
mov
lods
sbb
sbb
cmpl
push
cmp
cli
into
ljmp
sub
jno
std
pushl
cmp
add
push
mov
push
add
out
adc
daa
xchg
rclb
xchg
adc
cwtl
mov
out
mov
pop
repz
push
add
push
aas
sub
loopne
jl
mov
sbb
jge
mov
mov
inc
push
push
pop
push
jecxz
xor
jo
inc
sbb
jns
adc
movsb
insb
sbb
inc
add
add
jns
clc
stos
push
mov
ror
sbbl
mov
stc
sahf
push
pop
sub
lret
dec
clc
cmpsl
lods
push
mov
nop
ds
imul
dec
push
mov
sub
xchg
jmp
bound
push
imul
xchg
lock
in
jnp
xor
adc
cmp
or
and
outsb
push
mulb
es
sub
hlt
ja
aam
push
cmc
lret
aam
in
inc
xchg
sub
stos
xor
loopne
mov
stc
lcall
mov
mov
xchg
xchg
arpl
in
das
and
push
sub
insl
mov
imulb
pop
frstor
sub
jae
sub
lret
jecxz
lods
sbb
sbb
inc
rclb
pushf
xor
loop
xchg
out
repz
fdivrs
or
xchg
aad
fs
mov
adc
dec
arpl
ljmp
cwtl
out
movsl
adc
in
pop
sbb
dec
mov
pop
adc
in
es
adc
and
fnstsw
cs
daa
fidivrs
out
xor
nop
cmpsb
enter
out
inc
stos
push
pop
ret
test
or
call
xor
pop
mov
adc
xor
sub
dec
push
xchg
pop
out
jnp
and
dec
jl
cwtl
push
sti
daa
mov
cmp
stos
mov
int
dec
dec
loope
cmc
ss
out
inc
jg
addl
das
or
mov
lret
lret
sbb
cmp
imul
hlt
aad
subb
inc
cmpsb
sti
lahf
or
cltd
movsb
addb
xor
sbb
mov
dec
notb
or
into
es
mov
daa
jae
sbb
loope
adc
dec
xchg
xchg
xchg
push
mov
mov
xchg
jno
inc
dec
int3
iret
dec
inc
test
int3
cmp
int
sbb
arpl
inc
int
lret
push
insl
push
enter
mov
enter
or
pop
out
sbb
or
lahf
ja
sbb
std
lret
pusha
jle
iret
fs
or
std
loop
cmp
jb
xor
xor
int3
cmpsb
mov
ja
push
outsl
jne
sub
xor
fists
mov
jmp
leave
lea
loop
pop
out
aam
mov
aad
sbb
sahf
xchg
icebp
aam
sub
lcall
in
mov
and
std
add
pop
dec
sub
or
out
sarl
xor
cmp
mov
nop
push
jo
int3
add
mov
push
push
mov
int
sub
jns
or
in
jl
icebp
outsl
dec
gs
add
pusha
pushf
int
iret
push
sub
push
sub
std
fldcw
pop
ret
out
cwtl
lods
std
fisttpll
pop
ret
scas
mov
in
pusha
addb
jno
jb
les
pop
pop
add
dec
mov
dec
xchg
inc
xor
shl
incl
pop
into
outsl
dec
sbb
xchg
fisttps
mov
sub
push
dec
repnz
push
cmpsb
push
cmp
cmp
xor
sub
mov
jo,pn
fwait
popa
xchg
loopne
xchg
ret
cli
mov
clc
cmpsb
movsb
jo
fbstp
shrl
add
push
mov
mulb
je
test
shrb
pushf
call
cltd
mov
je
hlt
ljmp
sahf
nop
xor
lds
loop
ds
fisttpll
int3
cmp
movsb
sub
into
mov
and
in
xchg
cmp
test
inc
in
loope
pushf
das
sbb
test
test
stc
cltd
addr16
enter
rcrl
xor
push
dec
xchg
xchg
sbb
fnstenv
pusha
outsl
jns
fmull
cmpsl
jl
mov
test
xchg
and
xchg
lock
mov
pop
lock
rclb
adc
sbb
jg
rolb
xchg
jl
or
mov
cld
xchg
ja
pop
push
mov
inc
xchg
pushf
adc
shrl
lds
dec
loop
ljmp
jge
lahf
out
out
std
xor
ret
xchg
shrl
xchg
in
dec
sub
mov
rcll
mov
adc
aam
or
cld
fs
in
mov
cltd
add
fisttpll
enter
and
ss
or
lods
sub
imul
sbb
dec
fimull
cmc
lods
push
sub
cmp
les
cmpsb
dec
pop
push
dec
dec
xchg
lds
sbb
data16
sub
add
nop
jo
adc
in
mov
loop
pop
lods
aas
shll
cltd
jmp
enter
mov
inc
popf
sub
push
push
int3
mov
xchg
add
lea
movsb
outsl
pushf
inc
movsb
cmpsb
scas
fisubl
jge
fistl
push
hlt
pop
das
cmp
in
and
xor
xchg
and
push
mov
lcall
imul
lret
or
inc
jns
jbe
xchg
cld
cmpb
fsubl
dec
fnstsw
push
and
pop
xor
jecxz
and
ds
ljmp
jecxz
addl
inc
dec
inc
pop
les
idivl
push
lods
cmp
test
mov
xchg
les
into
jo
sub
xchg
test
ja
gs
cmp
pop
mov
ds
xlat
mov
out
lock
iret
in
testb
sub
xchg
add
adc
sbb
rcrl
and
lds
push
pop
mov
cmp
fidivrs
loop
or
mov
pop
mov
xor
pop
addr16
adc
push
mov
inc
movsb
mov
cmp
scas
adc
jnp
add
inc
lea
sub
and
lahf
push
inc
add
std
mov
xor
sub
mov
mov
or
in
pusha
into
dec
mull
mov
leave
push
loop
inc
pextrw
into
jo
jge
pop
andl
pop
enter
hlt
push
fwait
cwtl
dec
std
jno
popa
ljmp
xchg
lods
jbe
pop
xor
movsb
fisttpl
inc
rorl
in
lcall
test
sub
gs
loopne
les
movb
add
rcr
mov
pop
cld
cmpl
aam
rolb
cmp
stos
sti
pop
and
iret
sub
aas
cmp
out
xor
push
imul
xchg
xor
fisubs
adc
cmp
push
and
xchg
dec
ljmp
cmp
jmp
adc
mov
in
in
repz
adc
inc
popf
in
std
mov
loopne
push
dec
pop
and
sub
lret
shl
in
mov
mov
hlt
scas
push
inc
mov
mov
ficompl
mov
push
rorl
and
int
cli
pusha
push
in
sub
sub
sbb
dec
pop
mov
mov
ret
mov
cmp
leave
cmp
cli
stc
repnz
notb
xchg
aaa
mov
sub
cld
clc
jg
xlat
clc
sbb
ficompl
lock
xchg
ret
std
in
arpl
neg
and
inc
push
das
fldenv
arpl
xor
mov
xchg
ficomps
lret
sti
push
mov
loope
and
sub
fistps
adc
and
jb
or
lret
pop
iret
or
cmp
lcall
jle
scas
scas
xchg
fwait
out
cs
test
pop
lods
mov
lret
push
movsl
or
ret
sti
push
pop
imul
or
push
mov
lods
negb
sbb
sbb
pop
enter
add
out
enter
cmp
dec
pop
mov
pusha
mov
lods
movsb
or
xor
mov
out
adc
mov
not
mov
aad
pop
mov
xor
scas
scas
mov
imul
inc
inc
aas
xor
enter
xchg
fmuls
xor
inc
sbb
outsb
push
jmp
mov
mov
push
jl
cmp
repz
or
add
jne
xchg
fildl
dec
add
nop
fcmovnb
mov
movsb
inc
dec
pop
into
scas
cmp
imulb
push
mov
jne
js
push
rcl
xchg
adc
lea
jne
mov
jnp
push
daa
shll
cmpsl
xchg
cld
jnp
dec
push
aad
fwait
add
icebp
or
ret
push
mov
or
fs
out
pop
pop
hlt
jmp
jmp
movsb
lods
mov
xchg
mov
inc
or
push
enter
jns
xor
mov
inc
cs
sub
test
gs
pop
inc
jnp
mov
mov
popa
outsl
pop
mov
xor
add
push
inc
test
cmpsb
xchg
push
fdivrl
in
iret
add
in
xchg
ljmp
fdivp
xchg
mov
arpl
adc
cmpb
jmp
mov
push
test
mov
dec
fisubs
xor
and
mov
stos
or
aad
pop
or
mov
adc
ljmp
lods
adc
mov
outsl
nop
mov
add
xor
sbb
orb
lahf
dec
jg
cmc
jb
repz
iret
mov
int
aam
rcl
mov
pop
out
cmpsb
bound
or
fidivrs
pop
arpl
aam
fdivs
dec
mov
xor
pushf
mov
ret
icebp
inc
cmp
jmp
stos
xchg
repnz
adc
out
loop
out
sub
dec
lods
jp
rcr
sti
pusha
mov
mov
push
loope
stos
jp
in
pop
and
lret
jp
xchg
xor
cltd
jb
adc
xor
divl
lds
inc
rorl
jbe
inc
leave
fnsave
cltd
loop
cltd
cli
push
rcrl
outsb
lret
adc
push
jmp
jle
enter
leave
cltd
cmp
dec
negb
cli
add
sub
sub
dec
and
pop
addb
and
bound
pop
sti
lds
mov
aad
out
push
ds
mov
xor
xlat
dec
xor
stos
movsl
xchg
bound
bnd
or
popf
insb
ljmp
mov
bound
xor
push
sbb
je
cmpb
add
icebp
mov
add
inc
add
mov
roll
ja
rclb
cmp
xchg
adc
or
aaa
fsubrs
cmp
jmp
sub
cmp
adc
in
mov
dec
cmp
jbe
daa
jne,pn
pop
pushf
mov
mov
insl
inc
push
outsl
cmp
fstpt
je
dec
addl
in
mov
addr16
ss
mov
xchg
or
mov
fs
aas
and
xor
enter
in
stos
cli
sbb
in
pop
and
push
dec
in
mov
fisttpl
xchg
and
iret
push
push
mov
jb
jne
iret
pop
repnz
pop
rcll
notl
ffreep
insb
cmp
fld
sub
sub
push
jne
aas
push
xlat
mov
mov
push
stos
insb
cmp
lds
adc
jnp
popa
into
movsb
mov
loop
rcll
fwait
add
adc
ja
shll
je
cmp
jno
fidivs
je
loop
out
and
aad
pusha
rclb
mov
shll
ja
and
inc
push
inc
fdivs
jmp
jne
sbb
mov
rorb
ljmp
les
lods
popa
test
sub
or
mov
push
scas
mov
std
daa
idiv
mov
mov
jo
int
mov
push
hlt
dec
xchg
andl
mov
mov
mov
test
daa
sbb
push
push
push
sbb
pushf
cmp
xchg
aaa
test
sti
fisttpl
cmp
pop
mov
xchg
jb
adc
fnstenv
test
addb
adc
push
arpl
cld
fimuls
in
mov
ljmp
sbb
xor
push
add
push
pushf
es
mov
fadd
and
test
shr
adc
add
ss
fs
xor
mov
mov
inc
int
pop
xchg
repnz
jno
dec
or
fadds
xchg
xor
mov
push
sub
mov
adc
and
add
push
leave
lahf
iret
sbb
shlb
pop
decb
jle
xor
sti
mov
pop
stos
repnz
movsl
test
adc
stos
inc
fsubs
std
call
lods
notb
jmp
jb
enter
stc
popf
pop
std
int
adc
add
push
add
and
psubsb
fistl
addb
jmp
pop
loope
mov
pop
dec
outsl
pop
iret
gs
adc
ret
fwait
cmc
lods
scas
fsubrl
xchg
pop
loope
or
push
adc
outsb
cmp
int3
loope
in
in
push
mov
jns
add
pop
cmp
mov
sahf
mov
fst
cmp
aad
cld
pop
pop
dec
xor
sub
in
mov
push
xchg
xchg
leave
adc
je
xchg
into
imulb
and
insb
stos
push
sub
clc
sub
xor
fcmovnu
add
insb
jb
mov
test
adc
outsl
into
dec
aad
pop
outsl
notb
cmc
sti
out
enter
pop
push
das
mov
pusha
cmp
jne
js
mov
mov
lea
andb
mov
out
add
stos
movsl
fcomps
ds
daa
xchg
in
inc
pop
test
pop
cmpsl
incl
ficoms
jbe
ds
in
jle
xchg
push
sub
sbb
aaa
testb
out
pop
mov
fidivl
lahf
pop
dec
adc
xchg
jle
cltd
pop
outsb
xchg
ret
movsb
fstps
stos
inc
int
and
je
lret
inc
mov
mov
and
push
test
mov
push
inc
idivb
insl
test
test
add
cmp
dec
into
pop
ds
xchg
add
subl
leave
jae
xor
sbb
jp
cli
jmp
in
test
jg
push
mov
or
insb
push
lds
clc
pop
jg
xchg
sub
pop
cmp
fs
xlat
xor
and
push
icebp
lods
das
aad
inc
fiadds
gs
les
sub
mov
jne
add
mov
out
das
mov
jbe
movsb
xchg
mov
jge
fnstsw
repnz
in
jmp
sti
fdecstp
jns
mov
push
mov
call
dec
mov
cmp
jb
cli
hlt
cmc
data16
in
mov
push
mov
enter
push
dec
jmp
insl
mov
add
dec
mov
dec
xchg
push
enter
xchg
add
inc
notb
xor
into
int3
sahf
adc
sub
das
ds
stos
shrb
or
jns
mov
jge
mov
test
jno
mov
pop
rcrl
sub
push
shll
inc
imul
add
dec
inc
jnp
push
cmp
xchg
stos
shlb
test
sub
lret
mov
cmp
sbb
jg
jp
xchg
push
js
cltd
outsb
xchg
nop
adc
dec
sbb
jecxz
das
rorl
sub
cmp
mov
pusha
or
sub
lock
inc
inc
dec
ret
mov
pusha
shll
inc
je
shlb
lret
jle
dec
insb
push
clc
sbbb
jl
ret
xchg
pop
popf
inc
jnp
fwait
pop
jns
nop
js
mov
dec
pop
inc
std
cmc
lret
add
push
loope
mov
mov
mov
sbb
mov
xchg
jg
push
xchg
cmpsl
lods
icebp
jns
sub
jmp
imul
repnz
jmp
shll
shll
arpl
test
fdivs
aam
pop
inc
insl
mov
mov
mov
lahf
pop
jbe
mov
cmc
imul
sub
mov
pusha
mov
lods
mov
sbb
xor
push
lock
mov
in
sub
xor
pop
cmp
cmpsl
das
incb
dec
popf
and
call
shrb
push
mov
lock
fs
lret
fbstp
repz
lret
addl
push
mov
out
and
jecxz
fidivrs
pop
sarb
stos
es
std
cmpsl
mov
cmpsl
mov
mov
add
xchg
mov
insl
mov
push
outsb
xchg
pop
jmp
add
loop
bnd
in
and
roll
dec
dec
adc
in
out
insb
push
dec
jecxz
push
lahf
mov
adc
lret
aam
mov
sub
loopne
add
jp
pop
call
or
daa
xchg
dec
push
mov
sbb
lock
ret
fwait
mov
mov
mov
pop
xchg
outsl
sub
xchg
sub
inc
jo
jno
sbb
sub
adc
loop
jmp
sbb
stc
cmp
pushf
aaa
jno,pn
fidivrs
push
mov
lods
mov
rcll
stc
sub
mov
jnp
loop
test
dec
jmp
cmp
sub
mov
adc
stos
daa
ret
cli
insl
inc
sahf
int3
dec
insl
jns
aad
xchg
or
cmpsl
cmpsl
mov
lahf
arpl
or
insl
and
cmp
add
xlat
mov
inc
sbb
mov
cli
ficoml
xor
shl
test
int
xlat
adc
insb
ljmp
stc
into
inc
insl
rcll
jge
add
add
test
stos
fs
sub
xor
lret
cmp
jg
add
ret
mov
pop
push
enter
or
jle
mov
stc
stc
sarb
out
movsb
lret
int3
fdivs
arpl
aaa
or
andb
xor
mov
mov
scas
cli
shlb
and
mov
lock
outsl
popa
xor
or
flds
jp
adc
lea
sbb
cltd
xorl
icebp
in
incb
aad
inc
in
xchg
std
lods
popf
je
push
ret
in
xchg
or
je
out
mov
fsts
ss
aad
fwait
movsb
jle
rcrb
mov
add
loopne
add
insl
jo
mov
pop
movsl
xchg
and
int3
int
imul
popf
xchg
mov
dec
cltd
imul
mov
shl
rcll
insl
fwait
inc
daa
xlat
and
mov
cmp
or
sbb
and
jmp
push
cmp
sub
add
and
pop
fstpt
sbb
jbe
cmpsb
pop
mov
dec
push
imul
mov
lret
pop
push
sub
or
dec
and
mov
mov
add
pushl
cltd
jp
jmp
sahf
rcrl
or
or
sub
or
cmp
and
pop
les
outsl
fsts
and
jge
ret
in
cwtl
dec
out
pop
pop
xchg
sti
xor
inc
pusha
mov
mov
in
cmp
inc
das
push
es
repnz
adc
cmpsb
and
daa
or
insb
cmc
push
out
mov
add
or
rcll
and
or
hlt
int3
loopne
push
dec
xor
jne
repnz
test
sarb
xchg
pop
and
or
inc
fidivrs
adc
cli
insb
les
call
or
mov
or
mov
mov
andb
lds
jno
pop
pop
mov
aaa
sahf
test
inc
sub
dec
push
mov
lods
add
pop
xor
lret
inc
lock
cmp
xor
ret
pop
setae
mov
pop
out
jns
insl
mov
cltd
inc
mov
loopne
or
push
movsl
insl
inc
mov
pop
fistpll
mov
imul
add
cld
in
ret
je
jne
incb
mov
aad
fwait
lea
pop
sbb
xor
mov
lods
lods
je
push
xchg
addr16
outsl
push
jmp
shlb
push
sbb
add
adc
adc
imul
cmp
adc
outsb
loop
cmp
pushf
das
ret
push
sub
add
shrl
lock
lret
fistpll
pop
mov
and
mov
dec
decl
shrl
jmp
xor
andb
sbb
sahf
stc
stos
into
mov
mov
inc
sbb
daa
sub
sbb
aad
insl
mov
js
cmp
enter
repnz
ret
dec
loop
mov
jg
mov
orb
xlat
inc
dec
jmp
std
loopne
orb
stos
lret
sahf
mov
cmp
std
push
testb
adc
or
pusha
adc
scas
sbb
mov
mov
js
movsb
scas
and
mov
pop
push
pop
add
mov
mov
inc
ror
ja
sahf
mov
xor
mov
popf
in
lahf
pop
repz
je
and
jmp
pop
in
sarb
notl
sbb
push
inc
mov
push
dec
inc
sbb
es
daa
rcrl
sarb
jmp
and
cwtl
push
fs
mull
scas
dec
outsb
ss
xchg
negb
aaa
sbb
sbb
xor
xchg
ficoml
stos
inc
add
and
mov
or
fdivl
adcl
xchg
pop
dec
clc
xor
cs
or
pop
inc
icebp
mov
movsb
out
push
adc
shrb
jecxz
jns
inc
mov
jp
sub
jns
push
cmpsl
push
or
push
xchg
xchg
xor
stc
fs
out
je
lds
cmp
push
inc
and
std
arpl
and
and
push
jmp
std
or
repnz
sub
pop
sub
xlat
in
stos
sbb
push
pop
test
and
pop
into
incl
xchg
push
outsb
push
push
dec
lahf
stos
icebp
sti
mov
pushl
and
imul
sbb
adc
in
mov
outsb
jmp
outsb
test
xchg
inc
mov
adc
divps
testb
mov
ds
lret
push
sub
aaa
mov
cmp
inc
sbb
movsl
push
sarb
pop
or
mov
loopne
repnz
push
sbb
insl
enter
leave
cmp
pop
mov
fsubl
int
jno
sbb
icebp
lahf
into
cld
jecxz
or
in
jo
popa
or
sbb
mov
pop
in
sub
fiaddl
mov
insl
push
xchg
dec
cmp
jbe
mov
cmpsb
or
insb
xchg
mov
add
and
mov
pop
sbb
data16
inc
mov
xor
fistl
pop
dec
dec
pop
int
mov
inc
leave
inc
cltd
push
test
nop
cli
int
arpl
pop
inc
arpl
pop
aam
in
cli
stos
bound
xchg
add
in
cli
inc
call
jle
repnz
sahf
mov
ljmp
sbb
jo
and
imul
stos
sbb
addl
std
scas
rorb
sti
push
add
insl
xorl
fnstcw
add
jle
and
mov
mov
es
jne
inc
add
cmp
popf
std
out
inc
cwtl
cltd
stos
jae
or
xor
xor
push
lret
dec
outsb
jle
rcl
jge
insb
dec
test
dec
adc
jge
mov
push
push
or
inc
push
das
and
xor
xor
mov
stos
das
jmp
inc
sub
mov
mov
in
mov
push
mov
jecxz
pop
fildl
es
push
lret
outsb
cmp
cmpsb
xchg
js
repnz
insl
cmp
adc
xchg
pop
stos
add
lret
clc
cmpsb
repz
ds
cmp
hlt
jl
or
xorb
in
cmp
or
mov
popf
inc
or
and
addb
mov
sahf
imul
inc
mov
cmp
dec
loopne
aaa
jg
imul
jns
in
imul
sti
push
adc
arpl
mov
mov
lahf
push
repnz
xor
rcr
push
push
mov
mov
jne
inc
out
cli
fyl2x
lds
icebp
cmp
or
test
sub
cwtl
je
outsl
mov
fcompl
dec
xchg
inc
shll
lods
pushf
flds
sub
cmp
test
in
sub
dec
xchg
push
push
scas
inc
test
and
xchg
xchg
bound
pop
repz
add
arpl
push
adc
je
jns
mov
sarb
pop
orb
iret
adc
mov
mov
and
popf
sub
xchg
or
mov
fmull
pop
pop
js
lods
je
xor
adc
rol
repz
cmp
jne
std
dec
sub
xor
adc
scas
movsb
scas
mov
dec
or
mov
inc
out
push
popf
call
dec
pop
xchg
push
cmpsb
inc
int3
fnstcw
mov
imul
dec
imul
sub
js
cld
pop
cmc
inc
mov
jl
push
enter
gs
jmp
rcrb
imul
lret
daa
lret
lods
mov
inc
movsl
scas
shll
mov
mov
aam
test
cli
fstpt
das
mov
mov
int
das
bound
adc
scas
cmp
les
icebp
scas
inc
imul
in
and
dec
pushf
mov
aaa
adc
or
mov
add
xor
aad
pusha
xchg
mov
les
jo
xor
cmp
addr16
jg
xchg
es
popf
ljmp
jg
add
jae
mov
shrb
pusha
sub
ss
adc
jbe
push
outsb
inc
inc
jbe
idivl
mov
js
jge
daa
and
hlt
sub
or
test
sbbb
sti
mov
gs
js
aam
iret
shl
pusha
mov
inc
push
jne
xchg
test
inc
lods
xor
push
sti
push
insb
and
jae
and
subl
jle
cmc
or
mov
std
adc
sbb
cmp
test
insl
hlt
xchg
test
pop
aaa
lret
jne
nop
xchg
or
ljmp
cmp
popf
adc
xor
adc
rcrl
and
add
push
stos
push
dec
mov
sbb
call
mov
in
sti
add
fdivrs
icebp
insl
orb
aaa
test
cmc
addr16
test
ret
sub
pusha
fadd
shl
push
pushf
mov
sets
call
add
pop
es
and
or
frstor
push
push
lock
cli
push
mov
jb
xor
inc
sbb
mov
dec
repz
dec
shrb
loop
rorb
dec
mov
xor
movsb
and
pop
icebp
aas
pop
dec
fs
das
cwtl
test
rcll
int3
and
idivl
jbe
stos
jg
xchg
loop
loopne
adc
sub
jmp
out
icebp
mov
sub
out
gs
dec
sub
xchg
and
push
cltd
and
stc
ss
mov
mov
xor
xchg
mov
std
mov
dec
dec
or
sub
xchg
pop
ss
add
jle
xor
adc
mov
jg
daa
add
jne
pop
in
jmp
pop
pushf
ret
mov
xchg
pop
dec
pop
lods
sbb
xchg
jge
fisubs
xchg
adc
mov
in
jne
or
push
inc
lds
scas
adc
and
test
movsl
mov
push
lods
jo
stos
push
inc
int
inc
addr16
out
xor
mov
hlt
add
jno
mov
nop
icebp
sets
add
inc
cmc
test
bound
fsubr
fimull
in
xor
jnp
add
shrl
jb
jg
das
lods
fdiv
sub
clc
movsl
iret
jle
jp
cmpsl
mov
cmp
lods
add
pop
cli
notl
adcb
insl
insl
add
and
cmp
popa
stos
lcall
cmp
inc
repz
and
mov
negb
mov
inc
mov
sbb
fs
sbbl
cld
scas
jge
push
mov
xchg
insl
push
dec
mov
rcll
fs
cmp
mov
loopne
lods
push
xchg
adc
nop
push
and
in
pop
jo
pushf
xchg
test
push
je
sub
mov
xor
or
adc
xor
leave
or
cwtl
add
lea
mov
mov
and
movsl
mov
xchg
lret
or
mov
iret
bound
pop
ds
mov
xchg
fs
dec
movb
iret
fmuls
mov
les
cmc
les
xor
jb
mov
add
fstps
outsl
cmp
sbb
std
pop
jbe
push
sbb
js
mov
popa
cmpl
mov
pop
and
popa
cmp
repz
pop
ss
ljmp
rorb
xor
lret
call
imul
ja
sbb
mov
jmp
enter
scas
arpl
rcrl
fisubrs
mov
fimull
dec
pushf
mov
aaa
jp
and
jg
mov
xor
sbb
xor
fmull
mov
arpl
cwtl
test
push
pop
je
mov
cli
lods
popa
or
data16
adc
jmp
iret
adc
daa
push
mov
shlb
repnz
js,pt
xchg
inc
cmp
loop
je
xchg
push
cmp
xor
loopne
testl
call
xchg
xor
or
les
lahf
bswap
stc
negl
jno
cmp
arpl
cli
jle
inc
cmp
cmp
shrl
mov
sub
adc
ficoms
push
inc
cltd
movsb
add
loopne
mov
jae
mov
pusha
je
aaa
mov
pop
out
orb
or
adc
xor
or
test
arpl
lock
cmp
mov
iret
push
fiadds
inc
testl
ss
daa
xchg
fwait
es
inc
ficompl
jmp
cmpsb
dec
pop
into
xor
cmpsl
pushl
leave
test
mov
in
pop
pop
sbb
xchg
movsl
fisubl
fsubl
and
mov
sub
scas
mov
dec
push
stos
lret
jmp
cmp
jl
ret
mov
stc
cmp
push
mov
dec
cltd
int3
jb
or
push
jge
ja
or
jnp
lea
aad
mov
or
cmp
dec
in
imul
or
xlat
sub
fcoms
pop
mov
fcmovu
dec
mov
cmp
xlat
mov
idivl
std
clc
insl
sbb
rol
test
xor
push
xor
jnp
in
pop
or
rcll
jo
jno
xlat
mov
jecxz
ret
mov
lods
loop
adc
dec
xor
cli
int3
xchg
push
scas
popa
fcmovu
lcall
mov
jmp
mov
jbe
xor
jnp
jmp
push
call
enter
jns
or
and
mov
inc
popf
inc
lods
pop
adc
inc
add
dec
and
sbb
movl
adcl
inc
js
ret
xlat
cmp
je
cmc
cmp
jle
shlb
push
test
mov
push
loopne
iret
push
jne
pusha
sub
pop
adc
cmp
add
fimull
outsl
aas
lods
mov
mov
fisubl
in
mov
sbb
xchg
or
lea
xchg
mov
xor
mov
imul
lret
subb
push
in
adc
push
mov
jg
les
clc
popf
es
dec
pushf
pop
adc
cli
jne
sub
mov
add
pop
and
loop
inc
push
aad
outsl
in
clc
cs
lcall
ja
stos
inc
xlat
in
pop
lods
mov
fs
cmp
popf
push
and
mov
jmp
daa
xchg
sahf
push
imul
movsb
mov
movsl
or
fcomps
jo
nop
out
cmc
cmp
push
jmp
outsb
pop
push
sub
shr
xor
ror
mov
fsubrl
insb
test
cwtl
je
pop
ja
add
imul
xchg
mov
scas
flds
scas
nop
cmp
jae
push
shll
jmp
mov
mov
insl
imul
popf
pop
lret
lock
push
lahf
push
xor
out
mov
int3
in
imull
es
imul
mov
mov
xchg
mov
mov
pop
cmp
dec
inc
adc
xchg
call
repz
jb
cmpsb
fildl
test
notb
mov
lds
xchg
fiadds
xor
fwait
push
shlb
decb
add
push
call
sub
pop
into
add
and
or
pop
xor
add
mov
rcrl
shrl
inc
inc
lret
push
mov
mov
sti
arpl
or
int3
jnp
mov
decl
xchg
out
fmuls
adc
dec
sbb
adc
iretw
nop
jmp
dec
cmp
mul
lods
sub
and
sbb
push
mov
pop
adc
in
mov
inc
arpl
insb
mov
loop
push
mov
mov
xchg
call
iret
imul
lahf
sbb
and
loop
das
jle
push
sbb
sub
mov
cmpsb
aad
add
pop
mov
in
jp
addr16
lcall
insl
mulb
sub
stos
mov
inc
add
loope
xor
push
sbb
xchg
or
sbbl
xor
mov
ja
lahf
shrl
or
mov
ljmp
rcl
sahf
hlt
test
cmp
div
outsb
outsb
or
mov
xchg
xchg
sub
dec
js
jl
xor
or
lea
sub
enter
add
fld
rcl
adc
mov
cmp
inc
add
pop
int3
inc
ja
jmp
xor
xor
cwtl
scas
adc
inc
in
lret
icebp
cmpsb
cmpsl
sbb
xchg
mov
inc
sub
insb
fistl
or
dec
fidivrl
jno
jle
or
mov
pop
xchg
sbb
imul
inc
mov
enter
addr16
shlb
ret
lret
aas
sub
push
sbb
push
mov
lret
cmpsl
mov
cltd
push
stos
jle
dec
adc
and
or
lods
dec
pop
ret
pop
outsb
adc
push
nop
aaa
pop
lret
mov
movl
movsl
mov
das
inc
andb
xchg
loopne
stos
jg
lret
mov
sbb
test
add
cmc
mov
pop
dec
jo
add
fidivl
push
daa
cs
ja
mov
mov
icebp
push
and
push
xchg
mov
pop
xchg
jbe
pop
scas
cmp
or
cmp
movsb
push
xor
dec
inc
dec
popf
xchg
cmp
sub
rolb
enter
push
rep
test
dec
mov
pop
adc
mov
and
out
rcrl
xor
push
xlat
negl
popa
and
test
jne
inc
inc
and
jp
mov
push
sahf
packssdw
aaa
jmp
lahf
dec
adc
lahf
push
cmp
mov
cld
int
addb
push
mov
inc
xor
lods
rolb
adc
mov
imul
mov
loope
push
pop
lret
mov
jnp
test
mov
mov
dec
and
cwtl
mov
sub
shll
sub
cmpl
cmp
push
aas
rcrl
gs
test
sbb
insb
fwait
jae
xchg
sub
outsb
xchg
jle
push
sbb
test
outsb
pop
pop
mov
xor
test
sub
in
sub
mov
push
scas
mov
xchg
loopne
mov
js
fcom
gs
xor
inc
xchg
or
les
sahf
outsb
fnstcw
aas
jne
outsb
mov
mov
icebp
and
mov
xchg
ret
fwait
add
rcr
mov
push
outsb
test
jle
mov
cmp
mov
adc
jecxz
lea
imull
dec
mov
mov
cmpsl
mov
mov
js
aaa
loope
mov
sub
cmpl
sub
ss
jno
or
xchg
lea
insl
lahf
aas
loope
popf
inc
xor
fimuls
jno
int
sbb
mov
mov
lock
fisttpll
test
adc
notb
jbe
jp
sarb
pop
fs
push
adc
mov
movsb
cmp
or
mov
gs
popa
mov
xor
inc
inc
pop
push
xchg
stos
or
insb
jmp
out
shrl
in
inc
mov
movl
gs
lret
push
adc
inc
pop
jo
sbb
mov
stos
or
filds
push
outsl
inc
push
mov
cmp
pop
push
cli
push
jp
out
pop
cli
imul
pop
imul
cmp
adc
fwait
pusha
and
pop
out
jecxz
pop
sub
jl
insl
dec
xchg
jle
dec
adc
mov
sbb
mov
xor
xchg
jl
dec
push
insb
jnp
push
add
aad
push
test
mov
loop
mov
jle
int
andb
and
cmp
jns
mov
or
clc
mov
dec
jnp
jl
sub
inc
inc
xchg
roll
or
push
mov
cltd
cmp
mov
pop
dec
fs
xor
adc
sbb
cmp
fwait
and
cmp
push
in
mov
pop
push
ret
repnz
jg
jne
ja
in
outsl
movsl
mov
sub
sub
pop
inc
decb
inc
aad
inc
movsb
mov
xchg
addl
xchg
mov
aas
push
pcmpgtb
insb
ljmp
pop
push
or
fisubrl
mov
xor
daa
dec
pop
jo
add
push
push
cld
dec
mov
in
xor
or
aaa
lcall
bound
jns
popf
sbb
lcall
xor
pop
stos
push
push
aam
mov
push
clc
outsl
out
stos
mov
jle
into
cmp
stos
ret
fstps
pop
shr
sarl
xchg
mov
cwtl
popl
or
scas
xchg
repnz
lret
clc
sti
dec
push
and
jp
mov
or
pop
cmp
outsl
bound
jl
jmp
imul
sbb
lods
push
popf
mov
pop
dec
std
icebp
jmp
sahf
or
adc
lods
fdivrl
push
push
mov
dec
push
pusha
and
mov
mov
cmp
mov
add
fstl
ds
sti
scas
in
js
push
int3
inc
inc
loop
in
arpl
push
shlb
cmp
cmc
jae
xlat
mov
mov
sbb
enter
pop
dec
rcll
mov
lock
test
adc
mov
rcrl
or
push
clc
fstl
mov
je
lcall
add
icebp
jge
fcmovnb
cld
jg
mov
push
mov
je
inc
int3
ds
inc
subl
sub
mov
and
mov
inc
lret
movsl
outsl
and
stc
cltd
dec
xor
popf
xchg
push
cld
pop
mov
sub
movsl
xor
jmp
adc
adc
mov
adc
test
dec
fldt
adc
ss
sub
mov
push
fidivl
lods
enter
loopne
test
jbe
mov
cmovnp
insb
jbe
lret
inc
add
mov
sub
subb
inc
and
sbb
sbb
lods
aad
mov
mov
hlt
cmp
cmp
lock
add
push
adc
adc
xor
das
mov
je
aaa
dec
xor
or
cmp
fstps
add
mov
sub
jl
sub
cmpsl
xchg
rcll
sbb
and
jno
inc
sbb
dec
mov
mov
cmp
sub
mov
rclb
or
dec
notb
push
scas
mov
les
inc
int
out
das
stc
popa
pusha
adc
gs
mov
shl
xlat
mov
dec
xchg
dec
inc
push
aam
ret
xchg
mov
cmpsb
xor
shrb
mov
xchg
dec
mov
loop
pop
and
pop
into
scas
shrl
xchg
test
cli
xchg
jae
and
in
sub
cmpsb
setle
mov
outsl
mov
xor
fs
inc
movsl
insl
rorb
and
push
cmp
std
ret
ds
in
mov
ret
cs
lret
jo
sub
jne
lods
mov
inc
in
or
clc
mov
xor
sbb
mov
rclb
out
or
adc
movsl
ret
ret
out
in
out
cmpsb
out
jmp
cmp
cmovne
mov
pop
or
fcmovb
or
mov
xor
and
cs
mov
xchg
loope
rcrb
add
pop
push
loopne
push
jmp
std
jo
lds
fmuls
cmc
adc
sub
fs
ja
add
jl
or
sti
inc
aaa
fs
lea
fwait
pusha
out
je
pop
push
testb
pop
push
pop
pop
sbb
dec
xor
jecxz
mov
jno
push
sbbb
cmpb
cmp
push
pop
pop
push
int
rorb
push
lahf
jne
jecxz
adc
outsl
xor
add
cmp
jg
cltd
mov
cmp
mov
fwait
loope
push
ss
lcall
mov
out
rcl
mov
out
add
xchg
out
pop
and
gs
mov
cpuid
pop
test
lea
lcall
test
adc
scas
mov
aaa
ja
or
mov
outsl
lret
fstl
in
cmp
fimull
psubb
stc
mov
cmpsb
mov
pop
sub
shlb
adc
ss
push
movsl
xchg
ja
pop
jo
or
jp
lahf
adc
ljmp
mov
das
adc
add
and
nopl
stc
cli
sub
cmpsb
shll
and
adc
mov
lods
or
cwtl
inc
jl
jg
xor
xchg
dec
mov
pusha
and
cmp
cmp
lock
fs
xchg
and
jecxz
pusha
adc
pushf
push
push
sbb
sbb
xor
push
cld
repz
insb
push
mov
jge
imul
push
pop
sahf
mov
dec
fcom
mov
dec
repz
jecxz
cwtl
xchg
push
sbb
jbe
fimuls
or
pop
sub
stos
clc
enter
pop
lret
fdivp
mov
fldenv
cli
cmp
test
mov
in
push
hlt
lret
xor
sahf
loop
sbb
outsl
stc
pop
frstor
iret
ss
and
nop
cli
mov
cmp
cmp
dec
mov
clc
mov
repz
adc
clc
adc
cltd
pop
pop
mov
pushf
mov
add
fstl
into
sbb
in
bound
dec
xchg
ljmp
ud1
or
xchg
xchg
repz
sub
adc
pop
mov
jbe
pop
sbb
in
and
inc
jl
pop
cmpsl
push
sahf
aaa
call
gs
or
xchg
mov
pop
popa
and
add
std
pop
push
into
pop
int
loopne
pop
sub
in
cmpsl
lret
call
popl
sbb
roll
push
scas
addr16
xor
jecxz
mov
push
shll
add
xor
insl
and
inc
outsb
call
mov
inc
xchg
mov
lret
xor
jmp
in
out
cs
push
and
inc
cltd
out
arpl
add
fdivs
fwait
add
out
mov
aaa
stc
xor
add
push
push
pop
repnz
jnp
sti
and
xlat
push
or
stc
int
repnz
stc
jo
adc
ja
andb
push
comiss
mov
lret
aaa
push
and
in
std
repz
pop
push
clc
testl
into
cmpb
or
mov
inc
cld
inc
cmpsb
pop
sahf
in
outsl
and
imul
and
fildl
aad
and
adc
out
sbb
dec
jb
pop
pop
jg
std
repz
or
notl
je
ret
xor
inc
sahf
xchg
sbb
in
mov
aaa
int3
jne
rorb
add
insb
add
popf
inc
icebp
pusha
adc
inc
add
incl
lcall
cld
loope
xchg
lods
sub
pop
js
loope
cmp
repz
mov
xchg
mov
fistpl
pop
cmpsl
out
mov
test
add
inc
testb
mov
pop
pushf
je
icebp
cmpsb
mov
in
fsub
jnp
mov
outsb
outsb
sbb
test
data16
icebp
and
or
jo
call
mov
xor
lods
adc
js
jno
imul
and
or
dec
dec
mov
and
jle
dec
sub
lret
jmp
ljmp
adc
test
mov
push
sub
sbb
jnp
and
mov
sub
mov
mov
or
dec
repz
xchg
jp
dec
push
repnz
mov
fidivl
les
repz
sub
mov
inc
push
dec
mov
or
es
push
popf
add
ds
xchg
imul
push
ljmp
cmp
adc
sbb
xchg
inc
shr
pop
push
add
mov
push
xchg
push
sbb
and
lea
repz
int3
pusha
cs
fninit
ret
adc
mov
dec
pop
sbb
cmp
fwait
mov
push
mov
ror
pop
push
cs
dec
sbb
push
shll
push
add
ja
cs
sub
cmp
popf
notb
fstl
dec
xorl
stos
enter
cld
lock
rorl
fadds
outsl
add
mov
ret
sar
sti
loop
sub
cld
popf
ja
push
fs
mov
paddsb
iret
fcoml
jne
xchg
mov
sarl
es
push
mov
in
loopne
jmp
loope
xchg
dec
pop
clc
pusha
frstor
movsb
loopne
pop
xchg
sbb
or
sbb
push
or
push
mov
ret
addr16
jns
dec
adc
sub
mov
xor
gs
pushf
out
out
in
mov
push
mov
int3
ret
jmp
arpl
pop
leave
ss
scas
shlb
mov
pop
jo
imul
add
adc
outsl
pushf
fs
add
enter
inc
je
mov
and
aas
int
xor
lahf
lods
inc
out
cmp
test
ja
jne
jbe
sub
dec
cld
add
insl
push
mov
adc
dec
daa
ljmp
dec
data16
pushf
fsts
out
std
cld
fldcw
sbb
shl
mov
lcall
sub
lods
leave
cmpsl
dec
sub
lret
and
insb
hlt
push
fistpl
or
inc
les
mov
jecxz
shrb
mov
rorl
mov
xor
and
pop
decl
int3
sbbb
xlat
ss
dec
fcompl
or
pop
jo
daa
pushf
dec
gs
clc
jle
in
mov
ret
movsl
outsb
adc
cmpsl
mov
testb
movsl
outsb
mov
dec
mov
inc
jno
test
leave
mov
arpl
pusha
and
xor
cmp
or
pop
mov
jp
inc
shll
mov
scas
adc
rcll
mov
jp
lock
adc
in
dec
dec
sbb
nop
mov
out
sbb
lds
sbb
arpl
loope
lds
jno
jmp
lods
jnp
out
aad
mov
int
push
or
push
in
xchg
outsl
xor
lret
call
push
pusha
fucomp
add
jne
inc
mov
icebp
in
adc
mov
mov
fwait
jb
les
repnz
inc
inc
mov
push
add
cmc
mov
sub
int
orb
xor
sbb
sti
ds
jecxz
out
sar
and
adc
data16
cmp
inc
pushf
pop
pop
repz
mov
push
les
into
jg
xchg
lds
dec
loop
popa
in
jge
xor
cmpsl
jmp
or
fstpt
xchg
loopne
daa
or
xlat
loopne
jp
or
jns
sub
mov
xchg
xchg
pusha
lcall
aaa
loopne
clc
fwait
mov
inc
push
sti
push
gs
mov
fwait
sub
sbb
repz
xchg
or
or
es
adc
mov
loopne
sub
sub
push
iret
mov
fidivrs
movsb
clc
je
cmpsb
cmp
int3
clc
mov
xor
add
mov
add
movsb
ret
cltd
mov
cmp
pop
xchg
pushf
inc
dec
mov
loopne
dec
xchg
mov
dec
popa
pop
cltd
xor
mov
jb
lahf
cli
or
mov
jne
and
ds
mov
mov
roll
repz
jae
subl
dec
add
or
mov
jne
aas
aas
or
cld
dec
subl
and
into
clc
in
sub
clc
lds
imulb
xchg
les
sbb
adc
dec
rorb
cs
sub
or
jo
js
inc
push
xchg
jecxz
js
fisubrl
shl
test
insl
push
cli
in
and
lock
stos
mov
ret
cli
push
inc
or
mov
jno
xchg
xchg
xlat
jne
sub
mov
jl
inc
dec
add
scas
loop
sti
pop
push
dec
cwtl
cmc
mov
call
mov
insb
ja
int3
stos
mov
cli
pop
or
iret
fildl
nop
or
repz
insb
xchg
leave
inc
mov
add
xor
fildl
mov
loopne
ret
cmc
push
push
shll
aam
ja
mov
or
insb
popf
sub
cli
out
inc
gs
pusha
ret
jp
sbb
int3
dec
xor
sahf
xlat
lret
jge
sub
rolb
sbb
sub
mov
loopne
aaa
jle
ret
divl
or
adc
hlt
jo
sub
inc
sbb
fisubrl
ficompl
xor
ret
out
scas
adc
mov
andl
mov
hlt
jns
add
js,pn
insb
js
mov
sbb
leave
cs
ja
into
xor
inc
mov
xchg
adc
xchg
mov
and
cmp
lret
cs
inc
pop
sub
or
jnp
fcoml
xor
jge
outsb
xchg
fldl
scas
fildl
fmuls
jne
repnz
add
jecxz
sbb
rcrl
adc
dec
dec
mov
cmpsl
ds
lods
jo
jp
sbb
insl
cld
cmc
jl
cwtl
lahf
mov
cmpsl
pusha
cmp
cmpsb
out
aad
pop
bound
or
cmpsb
inc
rorb
mov
pushf
pop
bound
adc
popa
shrl
jge
xor
fxch
stos
jl
xchg
cmpsl
lods
inc
lods
and
shll
int3
int3
test
mov
iret
std
cmpl
or
pop
addr16
add
pop
dec
inc
scas
and
fldl
cvtdq2ps
ret
jne
out
push
cs
cli
mov
sbb
adc
cmc
repz
lock
sub
orl
and
test
xor
and
aas
fldenv
add
cld
mov
jmp
lock
fs
push
add
in
inc
imul
cmc
in
imul
cmp
xor
inc
jge
mov
bswap
iret
adc
mov
daa
sub
xchg
call
ret
data16
stc
aas
int
in
inc
push
and
sbb
pop
lcall
mov
in
dec
sti
movsl
inc
or
imul
pop
push
ficoms
dec
mov
lods
gs
pusha
or
mov
aam
sub
xor
xorl
fists
lods
jnp
fdivl
sub
jmp
mov
sub
pop
nop
xchg
fld
xor
jg
inc
loopne
push
sub
fildll
mov
jp
jb
mov
mov
push
lahf
cmp
adc
jp
jb
add
shlb
lahf
arpl
mulb
fldl
sbb
test
dec
test
fsubrl
pop
and
cli
add
adc
dec
sahf
lock
mov
lds
adc
dec
shr
test
sbb
ret
bnd
cmp
icebp
dec
sahf
and
aam
or
xlat
jge
adc
call
add
dec
and
sbb
sbb
aad
ficoms
dec
mov
insl
cwtl
test
xchg
divl
lods
mov
add
ja
push
rcl
jnp
sti
xchg
aam
sbb
sbb
mov
xchg
xchg
aad
fimuls
addr16
sub
and
rol
fmuls
sarl
mov
dec
dec
ror
push
mov
push
nop
push
dec
cmp
cmp
cmp
sub
xor
xor
jae
cmp
lcall
inc
inc
adc
out
nop
adc
push
pushf
cmc
lahf
xchg
popf
jnp
and
fisttpl
cli
push
paddd
out
fisttpl
pop
pop
ficoml
push
push
fs
lods
cmpsb
in
aam
xchg
bound
xchg
mov
mov
mov
lcall
test
dec
jmp
stc
repnz
xlat
mov
lods
pusha
imul
push
hlt
pop
xchg
pusha
fdivrl
pop
adc
loopne
pusha
xor
in
lret
jmp
shll
movsl
fwait
lcall
adc
cmp
int
jle
inc
mov
xlat
test
out
sarl
mov
jae
in
loopne
lock
out
iret
jno
inc
mov
push
sub
cld
int3
mov
out
movsl
aas
scas
ret
adc
adc
sub
pop
sbb
dec
lcall
inc
sbb
in
in
push
sub
nop
and
jns
into
inc
js
mov
pop
sbbb
rorl
ljmp
mov
mov
ret
push
and
decb
push
pop
pop
test
dec
int
xchg
adc
out
or
pop
inc
inc
or
ss
loope
lcall
in
movsb
sbb
lock
mov
rorl
xor
stos
dec
cmp
push
loope
in
js
dec
mov
pop
pop
jge
xor
xor
push
push
mov
gs
nop
popf
pop
jo
lds
call
xor
mov
xchg
gs
adc
out
xorl
aam
push
call
mov
fdivrl
xchg
xor
jecxz
and
xlat
mov
insb
in
jle
and
and
dec
push
in
ljmp
fldenv
nop
sbb
sbb
jno
call
aaa
mov
xchg
imul
ja
xor
push
shlb
jecxz
loope
daa
fsubrl
inc
mov
mov
ret
into
idiv
cmp
push
xor
and
outsb
cmpsb
divl
imul
push
inc
js
shrl
mov
loop
jo
clc
sbb
mov
dec
testl
sub
jbe
fdivl
mov
and
fldln2
jg
hlt
mov
cwtl
or
push
mov
stos
jns
rorb
adc
dec
cmp
je
xor
dec
and
mov
cmp
cmc
pop
hlt
pop
or
movb
dec
repnz
sub
cmp
leave
push
int
mov
icebp
je
leave
pop
popf
mov
inc
dec
pop
outsb
es
xchg
loope
nop
outsb
sub
imul
dec
xor
fwait
and
nop
icebp
push
dec
cmp
sub
mov
jnp
and
add
aaa
lds
adc
cs
in
xor
shrl
sbb
dec
push
jns
push
mov
in
fsubrs
clc
pop
push
cld
rcrb
pop
mov
mov
cltd
push
ficoms
jmp
cld
xor
fsubrs
xchg
xor
xchg
mov
cmpsl
pop
notl
sbb
xlat
push
cs
lods
adc
and
fcoms
and
aad
xchg
nop
hlt
in
and
int3
cwtl
jmp
and
mov
sub
sub
jns
inc
in
sbb
js
sbb
les
mov
jne
sbb
not
xor
je
mov
mov
mov
outsl
xor
fisttps
add
add
loop
mov
punpckhbw
frstor
lret
push
sub
std
add
cmp
jae
mov
lahf
xchg
es
std
mov
mov
jne
cltd
xchg
insl
mov
es
xor
and
or
xchg
cmp
int3
insl
push
mov
je
and
mov
mov
push
mov
push
out
jecxz
fnstsw
xor
cmp
lods
mov
push
cmp
scas
xchg
push
add
xor
leave
fldenv
fldcw
jmp
mov
lods
xor
js
jmp
cld
mov
push
pop
repz
and
lret
pushf
jge
in
ret
mov
adc
insl
bound
add
add
push
fistps
ficomps
and
pusha
test
mov
adc
add
or
mov
ds
jnp
aaa
jnp
xchg
cmp
or
and
cmp
xchg
pop
mov
jo
jecxz
and
outsb
rcll
les
out
dec
daa
sbb
in
ss
push
shl
enter
pop
data16
adc
mov
adc
pusha
mov
mov
or
or
dec
jae
jg
in
mov
adcb
sbb
or
cwtl
lods
xchg
fstpt
jp
mov
add
sub
loopne
adc
mov
leave
mov
sub
test
jae
pop
lret
inc
jmp
push
lods
test
pop
test
cs
cmp
xor
or
xor
xlat
imul
dec
jo
sub
jle
in
fistps
jecxz
and
mov
je
xor
stc
testb
dec
xchg
ljmp
addb
cmp
xchg
push
in
adc
cmp
addr16
mov
inc
inc
repnz
cmp
mov
pop
les
mov
shl
int3
lret
jmp
ficomps
xchg
inc
movsl
jl
aad
lret
inc
sahf
cwtl
push
hlt
aam
xchg
push
shlb
xor
insb
adc
cwtl
int
sub
jae
xchg
in
lea
outsl
mov
cmpsl
leave
cmpsb
push
mov
push
xor
push
mov
and
pop
cs
mov
mov
lea
push
sbb
lahf
mov
insl
fimull
pushl
or
int3
loope
imul
pop
subl
test
push
std
shl
fbstp
ss
jae
clc
push
dec
jnp
out
fistps
pop
test
arpl
jmp
and
cmp
push
out
add
fbstp
in
adcl
add
enter
fisubrs
jecxz
scas
pusha
mov
and
imul
sbb
pop
mov
orb
repnz
cmp
cmpsl
nop
popf
jmp
mov
mov
mov
mov
mov
sbbl
enter
jbe
push
or
daa
push
and
out
inc
add
test
fldenv
cwtl
push
xchg
jg
insb
push
dec
loop
out
leave
rcl
push
mov
dec
rcr
mov
mov
loope
xor
jge
jecxz
jns
push
mov
lods
cmpb
arpl
xor
mov
mov
in
fidivl
pop
movsl
lods
bound
xor
clc
xor
int3
mov
nop
xchg
mov
add
bound
clc
add
in
movsb
das
loop
push
cmp
jnp
inc
call
dec
cmp
mov
push
cmp
push
jne
movsl
inc
add
fs
stos
push
leave
sbb
cld
out
or
lea
ja
xchg
fs
and
aas
sbb
mov
mov
jg
xor
push
or
and
movl
push
sub
or
movsl
push
mov
stos
push
sarb
lock
insl
clc
fiaddl
inc
bnd
lahf
or
cmp
mov
mov
jge
fsubr
daa
aaa
or
ss
sub
jno
bound
push
add
xor
cmp
add
imul
aam
add
popa
and
jo
mov
xchg
out
repnz
int
jmp
adc
pop
rorl
jno
arpl
loopne
in
mov
xchg
inc
test
mov
fimuls
jnp
hlt
call
call
pop
cmpsb
sbb
stos
stos
xorb
es
adc
cmp
sub
popa
js
cmp
outsl
push
xchg
outsb
mov
pop
cmc
xchg
mov
jmp
ljmp
jge
inc
test
jmp
jae
sbb
xchg
outsb
rcr
pusha
dec
adc
jno
adc
cs
pushf
imul
fimuls
xor
popa
gs
popa
out
xchg
rcrl
cmp
popa
enter
sub
xor
cli
push
movsl
lea
imul
mov
mov
inc
add
jns
pop
test
pop
cld
clc
das
fistpll
ljmp
out
rorl
lds
xor
jbe
ja
aam
inc
xor
sarl
push
cmp
rorb
fidivs
push
fnsave
mov
mov
push
xor
rcll
int
push
jb
add
leave
mov
movsl
pop
jp
or
or
xor
stc
std
dec
pop
sub
lcall
xor
pop
dec
in
gs
push
nop
xchg
les
or
or
es
xor
iret
enter
sbb
mov
inc
mov
rorl
xchg
push
rcll
jne
popf
inc
dec
mov
loopne
ljmp
loopne
cmp
sub
mov
and
ljmp
cmpl
cmp
jae
pop
sub
and
je
push
stos
cmp
shlb
mov
xor
dec
outsb
inc
sub
sub
lcall
jp
xchg
sahf
aam
cmp
lcall
ss
fs
push
inc
mov
sbb
aaa
call
call
in
lcall
xor
dec
and
add
jbe
pop
popa
ds
les
xchg
aam
outsb
or
mov
jns
ret
and
lcall
add
nop
mov
shl
jno
out
outsl
push
inc
clc
dec
xchg
js
jecxz
jne
sbb
mov
xchg
cmp
pop
aaa
mov
repz
out
js
mov
xlat
cmpsl
mov
out
xor
xor
call
sub
and
xorl
gs
push
sbb
lods
push
xchg
adc
lds
dec
aad
mov
xchg
inc
xlat
in
adc
push
cmp
xchg
fidivl
fistl
sub
outsl
std
cmp
mov
xchg
inc
xchg
mov
outsl
push
outsl
push
adc
imul
punpckldq
dec
xchg
sahf
imul
mov
jmp
lahf
mov
inc
inc
movsl
jecxz
jl
test
fistl
dec
mov
jno
xor
nop
push
add
in
pop
jno
ljmp
mov
lret
ds
and
fcomip
das
hlt
outsb
fadds
cmpsl
rep
ds
fists
and
pop
insl
js
enter
inc
int3
ljmp
es
subl
daa
push
in
xor
xchg
loopne
push
popf
lcall
flds
xchg
add
dec
jmp
aaa
or
repnz
and
xor
incl
call
in
cmp
pushf
insl
repnz
dec
dec
call
dec
je
jmp
mov
mov
inc
xchg
popf
inc
aad
shrl
dec
cs
jae
outsl
jl
push
sbb
jle
call
andb
cmpsb
and
pop
and
rcll
ds
xor
inc
jnp
inc
hlt
stc
call
out
js
and
mov
push
call
cmpsl
fmuls
popf
jns
dec
xor
int
pusha
mov
and
and
xchg
sbb
sub
xchg
sahf
movsl
adc
jle
lahf
lahf
jle
aas
cld
mov
fsubrp
popf
cs
mov
pusha
jo
shr
or
pop
mov
jb
lds
and
inc
sbb
fs
xor
lock
mov
scas
insb
push
xlat
dec
aad
pop
cld
rolb
sbb
cmc
add
jle
enter
jae
sahf
testb
movsl
sarl
inc
inc
cld
jno
movsl
dec
push
aam
and
xchg
in
sbb
scas
scas
xchg
ret
scas
sub
sbb
ljmp
shl
sbb
aam
mov
cmp
pop
enter
mov
and
adc
dec
dec
mov
insl
push
orb
xchg
sbb
in
stos
dec
addb
mov
enterw
mov
inc
bound
cmp
xchg
pop
fcom
in
or
out
mov
mov
xor
movsb
dec
imul
inc
push
insl
movsb
cmp
mov
fcomps
adc
mov
jae
in
cmp
jl
mov
gs
sahf
cmp
mov
push
dec
shl
mov
mov
cltd
pop
pop
call
dec
add
sti
inc
mov
push
xor
jmp
pusha
mov
pop
pop
xchg
add
lret
js
and
jno
sub
movsb
add
lret
push
push
pop
aam
sbbl
shll
loope
push
lock
negl
jecxz
cmpl
push
add
mov
mov
loopne
xchg
lock
dec
loop
xcrypt-ofb
cmpsl
test
dec
lea
lods
popa
sarl
lret
mov
movsl
stc
jno
push
popa
dec
sub
mov
inc
adc
loop
je
fsts
or
jbe
and
call
inc
into
inc
adc
dec
int3
push
and
ret
push
jns
outsl
stos
mov
loope
loopne
out
xor
into
fnstsw
sbb
loopne
mov
nop
push
mov
jg
pop
sbbl
imul
stos
jge
add
shl
test
pop
test
in
dec
loop
xor
sti
pop
mov
cmpsb
cmc
or
out
out
ror
xlat
out
mov
jg
mov
adc
jo
xlat
pop
adc
dec
add
mov
mov
sbb
dec
in
and
xor
insl
pop
pop
idivl
test
push
repz
movsb
pop
sub
je
int3
xor
or
cmpsl
pop
sbb
outsb
es
pop
fcompl
mov
cli
adc
mov
imul
and
adc
sbb
xor
or
or
adc
movb
stos
mov
sub
cmp
cmpsb
mov
xchg
xchg
push
das
and
not
dec
ret
mov
std
mov
out
dec
mov
pop
cmp
dec
xchg
divb
mov
push
fldenv
in
add
sub
fsubrl
jno
repnz
ss
xor
call
fwait
inc
ja
lock
hlt
fdivr
iret
fimull
add
outsl
call
xor
rcl
aam
scas
fdivp
inc
int3
mov
pushf
push
ss
dec
mov
test
xlat
in
add
test
jecxz
fwait
ss
mov
lds
pop
ret
pop
cltd
adc
add
cmp
xchg
test
mov
jbe
movsl
stos
icebp
out
add
pushf
bound
jbe
rorb
iret
push
sbb
adc
repz
mov
shll
test
push
sbb
mov
cmp
inc
das
movsb
inc
test
pop
cmp
sbb
add
and
and
in
or
mov
cmp
je
ss
mov
jnp
mov
and
mov
adc
mov
les
std
mov
testl
add
sub
push
adc
cmp
ljmp
mov
mov
and
dec
mov
cmpsb
inc
scas
stos
pop
lret
int3
pop
add
sub
dec
inc
dec
cmp
scas
std
sbb
js
je
lock
lods
mov
movsl
pusha
xor
inc
or
testl
lea
xchg
mov
or
filds
cmpl
sbb
push
addb
lret
mov
inc
push
adc
or
int3
rcrl
cmp
mov
push
cli
lret
data16
aam
pop
push
subl
cmc
jno
fwait
cli
femms
xchg
ja
pop
lea
sub
mov
and
adc
adc
inc
je
movl
std
pop
cmp
jp
test
popa
mov
xor
dec
mov
add
push
out
adc
xchg
in
ljmp
pop
add
icebp
xlat
popa
mov
mov
scas
inc
pop
test
mov
outsb
aas
popf
xorb
addl
int
je
lret
shll
mov
mov
xchg
ficoms
xor
cmp
out
add
stc
popa
aaa
cmpsb
fbstp
mov
mov
mov
icebp
xor
sbb
ret
aam
or
loope
jns
outsl
cltd
ret
jle
mov
lods
scas
inc
dec
nop
mov
inc
add
mov
dec
addr16
clc
pop
jmp
mov
shlb
dec
repz
jnp
subl
mov
mov
xchg
test
data16
lret
jle
push
cmp
orl
push
repnz
shl
in
and
mov
add
addb
in
outsb
ljmp
pop
mov
xchg
ficoml
or
notl
movsb
or
rolb
stos
jmp
pushf
jns
pop
cmp
outsl
pop
repz
lcall
pop
shlb
push
xlat
push
clc
scas
jb
fidivrs
add
call
jb
stc
fs
movsl
ret
stc
pop
lret
lcall
rol
rolb
and
aaa
dec
mov
add
cmc
lods
imul
jg
stos
jno
lea
sbb
ret
cmpb
jle
xchg
scas
dec
cmp
adc
setns
push
push
shl
adc
mov
push
xor
push
cld
xchg
mov
add
jns
orl
push
dec
bnd
mov
inc
imul
rcrb
or
pop
popf
movl
pop
jns
jns
add
jl
movsl
shlb
hlt
add
push
mov
mov
es
les
lret
sti
sbb
lret
repz
xchg
xchg
mov
pop
mov
mov
push
fdivr
mov
jb
adc
js
out
sahf
dec
rorb
adc
sbb
fbstp
or
pushf
in
jle
int
xor
xchg
lods
les
jmp
mov
sahf
jae
fistps
imul
add
adcb
push
inc
movsl
cmpsb
add
or
jno
dec
cmc
inc
push
inc
jne
mulb
filds
cli
in
call
push
outsl
adc
dec
div
mov
mov
dec
popa
cmp
mov
inc
sti
jo
movsl
es
inc
sub
xor
daa
rcrl
cs
and
stos
dec
jp
idivl
mov
cmp
repnz
aaa
and
and
sub
int3
mov
sbb
mov
fcomp
or
push
jp
cld
loope
data16
lds
xchg
push
inc
jo
lock
push
pop
les
movsb
mov
aad
mov
das
insb
and
pop
bound
jo
lds
movsl
xor
lods
hlt
xchg
push
or
ds
ljmp
popa
mov
mov
mov
push
pop
cli
sub
pop
push
lods
inc
in
frstor
mov
jmp
cmc
ja
inc
push
lea
out
inc
andl
arpl
cwtl
loope
shlb
inc
add
and
punpckhdq
pop
std
adc
pop
fistl
pop
xor
sub
add
sbb
and
cmp
ficoms
shld
push
dec
xor
lcall
xor
mov
stc
cmp
mov
dec
pop
repz
pop
mov
pop
rclb
aas
not
or
inc
sub
repz
xor
out
imul
lcall
fisttpl
out
mov
mov
add
cmp
mov
dec
jg
inc
and
lahf
inc
cld
dec
pushf
mov
sbb
inc
lds
loop
mov
lahf
iret
mov
cmpsb
cmpb
xor
jmp
mov
outsb
add
sti
push
push
fadd
ds
xor
cmpl
pop
in
pop
xchg
add
mov
pop
jp
arpl
in
test
rcr
leave
and
lock
lock
cmp
jbe
push
adc
shl
mov
movsl
ret
dec
ljmp
mov
mov
je
cmpsb
add
ljmp
pop
loope
push
ds
push
adc
lcall
fildl
sub
jo
push
popa
lahf
in
mov
xchg
dec
bound
jg
outsl
loop
mov
sbb
out
dec
jl
loope
sub
out
adc
pop
pop
jnp
push
pop
and
jecxz
outsl
xchg
rorl
nop
pop
mov
add
fdivrs
in
call
fwait
inc
push
clc
lock
lret
daa
xlat
xchg
jno
and
push
pop
pushw
rcrb
ds
in
jno
adc
out
out
mov
cmc
jmp
movsl
int3
pop
pop
loopne
push
in
cmpsl
ljmp
test
mov
pop
mov
mov
ss
push
mov
pop
mov
inc
lcall
dec
jle
adc
lcall
pop
xchg
sbb
push
sub
dec
fsqrt
adc
jns
mov
popa
add
mov
mov
jb
mov
cli
push
pop
int
jmp
or
jno
jne
mov
xor
add
arpl
insl
enter
cmp
jno
repnz
cmp
fisubl
adc
aaa
mov
push
inc
sbb
stc
xor
mov
add
outsb
enter
jg
add
and
xor
ret
mov
in
mov
iret
pop
scas
sbb
and
push
xor
in
shlb
icebp
mov
cmpsl
cltd
xchg
cltd
jge
scas
scas
and
jbe
ja
stc
test
pop
clc
sbb
dec
mov
test
fmull
and
and
jns
mov
cmc
sub
mov
ss
test
mov
add
jl
xchg
inc
pop
cmc
sub
cmp
in
lods
mov
xchg
pop
mov
into
sub
in
push
out
cmp
out
cmp
pop
dec
cwtl
add
jecxz
mov
jno
cli
pop
mov
sbb
sbb
arpl
xorb
inc
popa
xchg
jns
mov
ret
mov
je
sub
mov
cmp
pop
jmp
fmuls
idivb
lds
mov
jmp
je
int
jp
jo
inc
mov
je
lds
cld
adc
mov
inc
test
into
enter
cltd
dec
xchg
stos
jb
sbb
jg,pn
dec
push
xorb
clc
mov
add
fcomps
xchg
lret
jno
cmp
xor
fistps
mov
inc
push
jae
cltd
sti
add
xor
sti
cltd
jle
push
jns
mov
or
adc
mov
push
lds
mov
ret
mov
mov
add
idivb
jle
iret
adc
jg
inc
stos
xchg
pop
into
stos
out
mov
pop
sub
dec
mov
pusha
shll
xchg
dec
pop
andl
mov
sub
fisttpl
pop
pop
jmp
in
out
imul
int3
mov
pop
test
negl
gs
mov
rcrb
fidivrs
xor
and
mov
xchg
pop
scas
cmp
test
lds
lods
mov
mov
pop
mov
neg
xchg
in
inc
lods
lahf
adc
rcll
jnp
fisttpll
push
shl
out
cwtl
inc
adc
xchg
ror
jecxz
ss
in
or
shl
fstpl
xrelease
mov
add
leave
rcrb
jb
push
push
jne
jns
push
insb
ljmp
mov
stc
pop
outsb
inc
jo
pusha
shrb
stos
fdivr
cmpl
mov
dec
mov
stos
xchg
inc
out
orb
mov
mov
aad
not
xor
and
stos
mov
test
push
popf
mov
lds
mov
inc
sbb
push
xor
sbb
adc
sub
mov
sahf
insb
add
xlat
roll
sub
inc
out
pop
sbb
dec
cli
and
mov
mov
adc
fisttpl
mov
jmp
cmp
inc
xor
jbe
lods
push
and
pop
pop
jle
pusha
mov
adc
mov
mov
out
mov
and
jmpw
lock
repz
hlt
daa
or
push
loopne
lock
mov
jno
sub
clc
mov
out
leave
inc
push
xchg
fstpt
cmpsl
jnp
stos
pop
push
stc
mov
pusha
cli
js
sub
xor
pop
sub
lods
arpl
cmp
gs
mov
mov
stos
xor
scas
fidivs
xor
add
push
mov
push
jmp
sub
adc
loope
push
dec
daa
movsb
xor
push
jp
pop
test
dec
and
mov
loop
mov
adcb
fisubrl
sbb
push
aad
sbb
repnz
aas
inc
pop
cmpsb
cmp
mov
cmpsb
js
xor
pop
loop
imul
sti
add
pop
cltd
pop
mov
cmp
das
shll
add
cltd
or
dec
or
jne
and
inc
inc
push
xchg
add
out
subl
or
rorb
cmp
cmp
jl
outsl
xor
jge
jp
dec
js
icebp
xor
rolb
fsubs
aam
in
sub
jge
ret
lods
pop
dec
push
xor
lret
mov
insl
inc
mov
aas
mov
pop
push
adc
sahf
push
mov
outsl
jle
test
gs
dec
inc
aas
scas
aaa
shll
jmp
jae
xor
data16
stos
jg
cmp
stc
scas
mov
jl
pop
imul
in
sub
call
pop
mov
xchg
cmp
stos
dec
and
xchg
inc
es
cmpsb
out
add
push
popf
sbb
daa
mov
mov
scas
cmp
mov
int
arpl
rorl
negl
push
test
stos
jae
xor
mov
test
add
fnsave
movhps
fcoms
xor
mov
scas
inc
add
test
cwtl
pop
movsb
sbb
in
andb
lret
pop
shrl
test
out
add
push
loope
movsl
push
xchg
mov
inc
cmp
mov
push
inc
mov
enter
adc
test
lret
js
adc
xchg
lods
sahf
push
cmovne
adc
jae
pop
fadd
add
or
dec
jle
sbb
adc
fisubs
out
jnp
xor
add
inc
mov
in
shl
mov
jp
addr16
aaa
jae
out
cmpsb
pop
scas
xor
push
rol
xchg
loope
addr16
cmp
fwait
imul
call
push
mov
and
mov
fs
inc
idivl
pop
nop
mov
mov
sub
les
call
stc
cwtl
cmp
cmp
adc
into
aad
daa
xor
mov
inc
xchg
mov
pop
pop
in
jmp
and
daa
jmp
scas
jmp
in
and
push
notl
movl
push
sub
insl
xchg
icebp
mov
xchg
loop
aam
add
pop
pusha
les
iret
pop
jnp
dec
add
subb
jo
lock
push
dec
xchg
push
pop
jecxz
mov
inc
inc
scas
loop
push
sarb
lock
add
mov
andb
mov
jne
push
or
out
mov
push
xor
decb
add
das
push
shlb
sbb
cmc
pop
jge
or
push
int
push
sbb
xlat
out
jbe
push
dec
insl
popf
arpl
scas
ret
xchg
jnp
xchg
imul
mov
faddl
pop
fstpt
popf
adc
push
xchg
ja
pop
imul
mov
jbe
push
dec
or
scas
cmpsb
pop
jle
mov
jecxz
enter
lods
cmp
es
mov
mov
cmpsb
xchg
adc
ret
frstor
icebp
fcoms
mov
jo
test
shlb
cmpsl
loopne
adc
adc
int3
mov
adc
and
mov
fisttpll
add
push
test
enter
xor
in
negb
shl
inc
cmp
mov
popa
fisubrs
lcall
adc
jns
cli
lret
in
lret
sbbb
lret
les
push
cmpsb
test
pop
inc
test
lcall
or
pop
cmp
daa
in
xchg
mull
mov
mov
xor
jnp
xor
mov
fisubrs
cmp
aad
mov
daa
cmc
dec
adc
fnstsw
xchg
inc
lods
std
push
pop
stc
fistpl
dec
call
inc
mov
add
imul
cltd
inc
lcall
mov
pop
nop
inc
je
aam
pop
pusha
jno
lods
pop
pop
xor
xor
mov
cli
stos
mov
dec
popf
xchg
pop
mov
inc
inc
add
cmc
cltd
scas
fiadds
cmp
pop
sbb
insl
or
xlat
add
or
adc
cmp
lods
mov
fsts
jg
mov
dec
mov
ja
jno
pop
outsb
xchg
adc
mov
sub
pop
mov
pop
mov
dec
cltd
imul
xor
addr16
push
push
dec
out
add
mov
es
mov
test
inc
mov
xchg
mov
lret
pop
lcall
js
push
cmp
and
enter
cmp
jnp
xchg
dec
push
mov
xchg
sarl
add
and
fisttpl
nop
imulb
sub
in
adc
pop
lea
divl
negl
dec
out
mov
in
pop
in
dec
and
push
mov
lds
mov
mov
mulb
fdivrp
xchg
popf
pop
je
loop
cmp
adc
test
aad
out
inc
inc
mov
cmpsl
stos
test
dec
out
daa
sub
xor
leave
cs
add
inc
xor
push
add
arpl
frstor
add
iret
mov
fnstcw
mov
or
ret
lret
fldenv
mov
test
mov
outsb
xchg
lods
data16
mov
and
arpl
add
outsb
pop
inc
aaa
pop
pushl
aam
add
aas
scas
rcr
pop
jns
nop
cmc
ret
xor
and
sti
lds
pop
inc
lret
inc
andl
icebp
xchg
lods
xchg
xor
pop
out
and
lods
xchg
adc
add
outsl
lods
mov
loope
mov
lods
push
inc
sti
jmp
sbb
mov
inc
and
mov
sub
rcrl
add
sbb
sub
jb
and
or
outsb
dec
or
mov
xor
das
je
jnp
cmp
mov
inc
ja
mov
and
jnp
mov
pop
jnp
mov
mov
std
push
push
cmp
nop
fcmovb
fdivrl
in
cmc
lock
movsb
or
imul
xchg
in
rclb
fs
dec
cmc
lcall
roll
sarb
call
data16
jno
pop
add
fnstcw
nop
in
xor
hlt
lea
push
shll
xchg
pop
xorl
mov
xor
and
mov
je
xor
popa
fwait
or
pop
jne
outsl
push
xor
enter
nop
dec
fiaddl
dec
pop
xor
jle
xchg
test
ja
fwait
je
mov
out
hlt
push
push
and
and
pop
cmp
mov
jno
ret
xchg
aaa
subl
daa
xchg
addb
jl
pop
push
add
lret
je
jge
or
les
mov
out
adc
and
dec
sbb
mov
mov
ja
aas
lret
add
ret
mov
adc
cmpsl
inc
imul
icebp
or
sahf
rcll
xchg
sbb
vpcmpeqd
jmp
ljmp
pushf
mov
ss
ja
pushf
das
xor
or
movsl
jp
and
adc
adc
js
test
std
push
mov
sbb
ret
icebp
imul
cmp
cmp
imul
clc
lret
iret
int
lods
xchg
xor
aas
sub
or
and
lea
inc
pop
pop
nop
push
xor
lods
stos
add
sbb
push
xchg
push
call
jno
into
add
sbb
pop
xchg
mov
in
mov
and
cmp
mov
adc
xor
call
cmp
subb
dec
jae
movsb
fstps
and
and
cmp
gs
sysexit
outsl
aam
subl
test
in
add
out
in
shll
push
jb
arpl
fdivrl
mov
jae
pop
and
mov
pop
out
cli
dec
sbb
mov
imul
dec
sbb
mov
cmp
cltd
pop
sbb
mov
inc
cmp
push
pop
dec
sub
mov
imul
in
mov
jecxz
add
push
mov
rcl
ret
es
into
xchg
lret
fstp
add
cmp
arpl
push
hlt
push
xchg
sub
lds
jge
test
push
xchg
mov
jb
mov
stos
xchg
and
stos
mov
push
mov
or
popa
dec
push
rcrl
lahf
add
adc
in
popa
pop
mov
push
mov
in
pop
fucomi
in
jne
cmp
test
sarl
xchg
adc
sbb
nop
sbb
ss
lea
fadds
iret
sbb
sti
add
icebp
add
xchg
repz
fstpt
cmp
or
nop
xchg
cmpsb
inc
ret
mov
cmp
push
jns
and
subb
mov
sbb
outsl
push
inc
es
lcall
fadds
mov
popa
and
popa
faddl
dec
not
fiaddl
inc
mov
xor
xor
loope
dec
add
pushf
lahf
imul
push
mov
stc
loope
mov
xor
call
fisubs
push
int3
ljmp
mov
adc
lods
repz
lret
mov
ljmp
xchg
lds
mov
sbb
push
mov
call
xchg
lahf
pop
jb
cs
cmp
popf
sub
xor
push
cltd
mov
adc
jnp
add
lock
mov
adc
lea
test
loope
xchg
xor
ret
dec
imul
lods
mov
fwait
pop
dec
adc
out
add
insb
push
cld
lods
enter
cmp
fdivrl
xor
cmc
pop
jg
pusha
xor
cmpsl
and
push
jae
fbstp
mov
push
insl
pop
xlat
sbb
pop
andl
inc
adc
test
sub
leave
sbb
les
push
jl
ljmp
sub
cmp
dec
dec
add
subl
outsl
jmp
push
xor
daa
sbb
in
scas
jle
inc
outsb
repz
cmpb
adc
ss
mov
scas
hlt
mov
mov
imul
mov
or
out
inc
jle
and
adc
push
in
sub
mov
and
mov
cmp
sub
adc
dec
xchg
push
mov
mov
sub
cmp
ja
jecxz
push
pop
mov
popf
push
test
or
aam
cltd
sbb
jb
inc
mov
mov
lock
out
sahf
mov
pusha
ja
lods
pop
cmp
sarb
aad
test
ret
pop
test
push
inc
fdivr
dec
and
inc
hlt
mov
int
mov
dec
jbe
movsb
daa
xor
test
repz
mov
cwtl
pop
cmp
jecxz
pop
js
inc
pop
enter
inc
shll
test
pusha
jg
xchg
iret
jg
mov
shl
test
loop
daa
fldl
jae
enter
mov
and
fcmovbe
mov
add
push
xchg
adc
and
cmpl
iret
add
fldz
scas
push
aam
sar
mov
sbb
mov
add
pop
add
mov
pop
ret
aad
lahf
in
enter
mov
adc
rorl
lock
fwait
dec
insb
adcb
int
mov
sub
icebp
das
hlt
test
xor
mov
or
lods
lret
pop
mov
dec
dec
stos
jge
in
pop
push
push
insl
je
aam
mov
xchg
xchg
int
imul
and
jge
jbe
cwtl
dec
mov
arpl
jb
clc
repz
dec
xor
cmc
js
push
call
push
cmp
leave
jb
pop
jmp
sarb
add
je
das
or
scas
aas
outsb
ror
and
mov
pop
adc
movsl
pop
pop
rcll
and
xchg
in
push
fadd
ret
pop
cmp
add
test
test
adc
out
lods
mov
icebp
sbb
loopne
mov
cmpsb
jbe
pop
aas
mov
sub
outsb
in
scas
sbb
mov
pop
adc
rorl
mov
ret
cmpsl
ss
movsb
or
test
dec
negl
test
pop
sub
clc
das
mov
mov
jle
shll
pop
or
mov
jecxz
inc
pushf
jmp
xor
jp
loope
xchg
std
sub
shll
pop
or
incl
mov
and
adc
stos
jl
lret
imul
addr16
pop
setbe
ljmp
cmp
xchg
xor
hlt
push
ret
out
mov
ds
stc
filds
repnz
dec
in
mov
or
bnd
xchg
pop
jae
scas
jb
out
pop
push
mov
xchg
inc
xorl
cmpsb
lods
adc
fs
fs
aaa
pop
cltd
pop
movsb
jge
jnp
cmp
lahf
imul
inc
mov
scas
dec
push
dec
iret
and
sbb
sbbl
lea
jbe
sub
push
jg
mov
in
cwtl
mov
dec
movsl
pop
and
cmc
push
inc
cmpsb
lcall
jg
sahf
loopne
lods
jmp
add
jecxz
add
mov
fmull
fistl
shlb
jae
push
imul
push
inc
adc
xor
cmp
leave
xor
mov
jg
imul
fcmove
leave
push
pushf
lods
mov
leave
dec
pop
rorl
mov
or
in
cmp
rorb
xchg
pop
repz
xchg
sbb
pop
stos
lds
outsl
cmpsb
lods
pop
addr16
out
notl
pop
das
test
stos
xchg
cmp
or
sub
iret
jl
ljmp
sub
mov
repnz
lods
or
push
leave
test
mov
mov
xchg
and
dec
xor
pusha
xchg
add
inc
test
jb
mov
pushf
ja
mov
adc
xchg
icebp
mov
pop
hlt
ljmp
mov
pop
sti
cli
push
sbb
xor
int3
addb
out
loopne
and
push
push
cwtl
xor
les
mov
mov
clc
in
push
mov
mov
les
mov
gs
sbb
inc
mov
roll
cmp
xor
mov
lea
bound
stc
add
ret
int
into
add
int3
insb
xor
cmp
or
arpl
jbe
fldt
mov
mov
pop
adc
adc
data16
mov
test
mov
jl
xlat
fsubr
sub
or
push
psubw
rolb
or
sub
push
jne
sbb
arpl
or
imul
mov
aaa
repz
lock
jb
add
add
out
dec
cmpsl
fisttpl
xchg
aad
jb
push
xchg
ss
js
jbe
xchg
leave
push
mov
mov
push
lea
mov
xchg
lods
xchg
test
mov
cld
jge
adc
sbb
imulb
jmp
adc
pop
inc
sbb
mov
sti
lock
std
dec
outsb
cs
cmp
out
and
ficoml
pop
and
ljmp
loope
add
jnp
insb
jo
notb
sbb
enter
mov
xchg
test
cwtl
adc
hlt
aas
adc
push
iret
inc
xchg
add
arpl
mov
pop
push
push
cmp
push
add
movsb
inc
jb
fstp
or
jecxz
push
sbb
sbb
insb
dec
and
jge
or
mov
sarb
aam
imul
cli
sbbb
nop
addr16
fwait
imul
jo
xor
xchg
test
fs
daa
jbe
sub
jo
dec
push
mov
repnz
or
dec
xchg
test
dec
jnp
xor
das
mov
loop
sbb
fwait
arpl
sub
xorl
dec
mov
std
sbb
test
jle
or
xchg
dec
jnp
dec
test
xlat
xchg
aam
xor
dec
fcompl
dec
mov
shrb
ss
sub
je
cmp
inc
loop
data16
xor
and
data16
xchg
jbe
mov
test
sbb
inc
pop
inc
outsb
std
gs
cltd
adc
sbb
jne
lds
jo
xor
inc
dec
bound
enter
ret
sub
dec
adc
fwait
jae
scas
mov
sub
push
insl
adc
ret
xchg
mov
cmp
mov
sbb
sub
les
loope
popa
pusha
or
fwait
loop
ret
jmp
sub
sbb
sbb
sbb
adc
aad
scas
and
mov
push
mov
sahf
loopne
sbb
add
fnstsw
mov
cmp
or
fcmovb
out
sub
add
push
lds
lahf
cmp
loop
frstor
pop
mov
insl
lds
xchg
subl
int
add
sub
test
sbb
rcrl
push
jne
sbb
lock
add
xchg
or
mov
lock
negb
repz
xor
daa
mov
jno
fiadds
stos
adc
cmp
jnp
loope
dec
addr16
sub
ret
lahf
mov
cmp
or
dec
sbb
adc
pusha
cmp
lret
mov
dec
loopne
mov
jp
arpl
xor
push
mov
mov
int3
repnz
sub
mov
xchg
push
sti
inc
scas
push
jno
rcr
adc
jbe
jle
fdivrl
in
lahf
mov
js
jg
rcll
jl
mov
fcoms
cli
lar
inc
mov
sahf
int3
xor
stos
pop
sub
xchg
push
lret
inc
pop
addl
repz
cli
fcmovnu
test
ret
push
mov
orb
rcrb
xor
cltd
adc
sbb
fs
int
in
aam
cmp
bound
shlb
jge
dec
mov
cmp
jb
mov
rorb
mov
das
in
cmpl
or
ljmp
cltd
jbe
mov
fnstsw
lcall
sub
push
add
or
inc
insb
je
cmp
iret
push
sysenter
adc
sub
clc
in
clc
push
push
bound
popa
sbb
stc
not
and
rcll
outsl
fwait
out
scas
pusha
data16
mov
testl
shl
pop
push
insb
stc
jnp
mov
sub
push
sti
int3
inc
push
arpl
aas
xchg
mov
int
scas
push
pop
jns
xchg
test
xchg
pusha
in
inc
les
mov
inc
lods
stos
push
cmp
cli
fisttps
stos
pop
or
mov
xchg
mov
add
jns
test
sbb
aaa
iret
mov
inc
leave
jge
orb
cmc
jb
fcomip
out
outsb
cltd
sub
es
push
sub
xor
mov
out
andb
andl
mov
outsl
xor
arpl
pop
mov
pushf
enter
fwait
je
arpl
ret
mov
pop
mov
fsts
sbb
xchg
dec
add
push
imul
loope
pop
or
adc
cmpsb
jl
fstpt
aam
ret
dec
sub
jno
sbb
ret
push
push
fmuls
cmpl
jo
pop
clc
cmp
xchg
aaa
adc
mul
movswl
push
jecxz
daa
push
aas
add
pop
jno
testb
lods
lret
or
mov
dec
ljmp
xchg
dec
dec
imul
fisttps
ret
movsb
cmpsb
jmp
leave
mov
sarb
adc
and
in
ljmp
pop
cld
and
push
mov
mov
cld
jl
pop
cmp
in
cld
fdivrs
jle
xchg
push
or
pop
mov
inc
clc
out
out
jl
add
or
pop
fiadds
or
mov
cld
dec
inc
insl
je
test
pop
push
shr
pop
xchg
ret
dec
jnp
test
fbld
daa
add
pop
push
inc
test
mov
mov
push
xlat
shr
shll
inc
insl
cs
pop
sbb
cmp
and
and
pusha
inc
shr
arpl
ss
mov
mov
mov
jne
mov
sub
xor
dec
orb
sub
mov
dec
mov
in
or
pop
mov
cld
fsts
xchg
xchg
adc
stos
leave
ret
sahf
mov
xchg
gs
xchg
inc
psubw
add
aad
cmp
dec
addr16
leave
test
movsl
aas
push
into
int3
lcall
mov
filds
loop
and
inc
mov
xor
lahf
ds
cli
inc
sarl
fisubrl
jg
int3
mov
cmpsl
lods
adc
loop
fwait
sbb
loopne
iret
jmp
jp
pushf
inc
in
cld
adc
jmp
dec
or
mov
adc
and
push
or
cmp
dec
add
loop
incb
adc
mov
sbb
test
push
inc
mov
pop
xor
mov
jp
dec
mov
test
test
shll
icebp
shlb
mov
stos
xchg
add
dec
leave
mov
xchg
dec
clc
xchg
push
pusha
and
push
xchg
jge
mov
mov
out
mov
sbb
repz
into
add
jge
pop
lds
or
lcall
push
mov
inc
stos
dec
inc
xchg
jb
sar
sarl
cmc
outsl
jbe
mov
jg
insl
stos
popf
sbb
fcomps
jo
jb
insl
add
sub
xlat
sbb
sub
sub
add
aad
push
or
out
xor
aad
ljmp
int3
lods
scas
mov
cli
mov
jl
mov
pop
xor
xrelease
mov
mov
adc
mov
movsb
push
cmc
push
xchg
ds
lret
xor
loope
ret
enter
xchg
addr16
push
cmpl
sar
jb
insb
cli
inc
xor
out
movsb
lds
ja
hlt
fbld
push
imul
push
out
mov
gs
rcll
sbb
les
jp
fisubl
mov
push
jo
cs
std
mov
dec
mov
loope
xchg
sub
and
dec
in
xchg
xchg
and
xlat
int3
xchg
dec
fs
mov
popa
sub
ljmp
jl
mov
fisubl
jns
pop
scas
xchg
adc
adc
mov
push
mul
out
fdivrs
sbb
mov
jecxz
stos
and
pop
xchg
sbbb
push
add
stos
xchg
xchg
pop
hlt
into
pop
mov
pop
test
push
pop
ficompl
je
adc
imul
cmp
and
aas
int3
xor
js
sbb
movsb
rolb
dec
fwait
xchg
mov
mov
into
xchg
test
lods
sbb
jge
out
lcall
nop
lea
addr16
lcall
pop
and
sub
pop
mov
loope
adc
xchg
fisubrl
add
loop
mov
push
adc
nop
adc
cwtl
pop
mov
loopne
fbstp
insl
jmp
mov
pushf
xor
mov
mov
or
adc
inc
sub
sub
js
dec
mov
jge
dec
std
imul
push
les
cmp
adc
sub
stos
push
cmp
xor
inc
jecxz
mov
ds
jne
xchg
mull
arpl
xlat
mov
stc
adc
mov
inc
cmpsl
mov
test
rolb
xorb
dec
or
push
inc
or
out
into
in
mov
movsl
lret
fidivrl
mov
pop
test
test
inc
jno
xor
ja
and
test
pop
xchg
flds
stc
jae
mov
mov
jo
push
fldl
data16
mov
in
adc
out
fisttpl
popa
jl
es
ja
hlt
das
imul
gs
loopne
stos
mov
inc
lret
fidivs
and
inc
xchg
and
sub
jae
hlt
pop
repz
dec
adc
mov
int
sub
mov
loopne
repnz
int3
loop
jecxz
sbb
cmpsl
cmc
jl
fs
and
jmp
xchg
adc
loop
sbb
or
cli
out
xor
dec
pop
movsb
inc
push
mov
pop
xchg
loope
cmpb
xchg
pop
cld
test
xor
cmpsb
gs
pushf
jge
addb
xor
cltd
hlt
dec
xor
mov
loop
sub
jp
nop
xchg
jecxz
lods
sub
fcomip
jbe
mov
jae
mov
xchg
shrl
cmp
adc
or
sti
scas
cmp
sub
inc
int3
push
jp
dec
lods
mov
jne
mov
out
in
xchg
or
int
subb
fadd
pop
shll
dec
jl
repz
pop
jb
xlat
cmpsb
pop
xchg
pop
inc
insb
ret
push
mov
mov
cld
out
dec
mov
cld
mov
iret
ficoms
mov
mov
mov
in
dec
cld
jle
dec
sbb
or
mov
pop
add
aaa
sbb
jnp
mov
ss
lock
sbb
mov
enter
inc
xor
js
inc
xchg
push
mov
and
push
cs
sub
dec
add
sub
gs
fldenv
aaa
add
sub
shlb
push
pop
or
rcll
insl
push
xlat
sub
sbb
xor
shrl
jmp
jno
loopne
push
inc
es
cmp
xor
cmp
jmp
mov
in
dec
pop
div
xor
mov
sbb
aam
or
shrb
das
jecxz
or
mov
stos
dec
adc
lea
sub
adc
ljmp
sbb
xchg
inc
scas
jbe
push
mov
jp
sahf
cltd
scas
rcrb
push
insl
sub
pop
dec
adc
jo
jns
and
add
faddl
clc
scas
js
mov
iret
cltd
popf
loope
loopne
xchg
xlat
and
add
subl
lret
adc
fsubrl
loop
mov
movsb
jnp
jle
jg
mov
xchg
xchg
leave
aam
nop
in
xor
inc
icebp
inc
aas
dec
sub
push
sbb
cmp
mov
mov
sbb
hlt
outsb
xor
sub
leave
popf
int
daa
out
pushl
out
sbb
mov
or
icebp
xor
mov
mov
lods
xchg
mov
push
xchg
std
fists
lock
mov
nop
xor
mov
cmpsb
jnp
jns
xor
ja
mov
aaa
aas
clc
or
out
mov
iret
aad
or
pop
shl
add
out
vcvttsd2si
add
shll
outsl
imul
sbb
adc
pusha
xchg
mov
xchg
outsb
sub
fsub
imul
int
popa
mov
push
push
addr16
push
aas
imul
mov
add
inc
sub
ds
add
mov
sbb
fwait
jnp
frstor
iret
mov
insl
mov
in
add
mov
in
cs
mov
cmp
cmp
insl
pusha
dec
loope
cmpsb
pop
xor
out
fists
sbb
adc
cmp
mov
ret
imul
sti
aaa
iret
and
jb
or
rclb
scas
enter
push
xchg
sub
mov
xor
movsl
xchg
xor
cmp
xchg
stos
mov
sbb
stos
scas
mov
add
jp
ret
pop
dec
sub
int
enter
mov
push
pop
or
cmp
cwtl
lcall
insb
es
je
mov
inc
cmp
imul
inc
sbb
cmp
dec
sub
rolb
cmp
push
and
xor
and
dec
fs
adc
mov
popf
sub
pop
aad
xor
jg
dec
hlt
test
and
inc
cmp
push
testb
mov
and
orb
test
xchg
repz
ljmp
adc
inc
shrl
push
adc
fidivrs
pusha
dec
cmc
stc
xchg
ret
fwait
add
addl
jbe
clc
mov
sbb
jnp
int3
outsl
cmp
push
pop
gs
mov
sub
cwtl
add
ljmp
in
and
sbb
cltd
mov
sti
rcll
mov
jae
pop
repnz
hlt
loope
sub
adc
cmp
xchg
negb
shlb
mov
xorl
lds
ljmp
mov
xorl
out
push
into
es
mov
cmc
push
lock
cmp
jnp
push
mov
mov
pop
aas
push
stc
lock
add
jno
fwait
test
cltd
push
inc
vminss
je
into
fisttps
cmpsb
adc
outsb
xchg
ficoml
push
cbtw
push
dec
xchg
push
fcmovnbe
or
lea
inc
rcll
shlb
xlat
std
xchg
lock
adc
cmpsb
popf
xchg
ficoml
xchg
or
and
cmpsb
movsl
shlb
adc
xchg
xor
movsl
aam
xor
leave
push
sub
mov
pop
scas
xor
jmp
rorl
sbb
loope
decl
std
mov
mov
repz
cs
mov
or
movsl
push
data16
outsb
icebp
xor
cwtl
sbb
in
sbb
pop
mov
ret
jns
push
inc
mov
mov
fnstenv
push
clc
adc
mov
and
mov
fsts
insl
pop
mov
gs
out
outsl
fsubr
stos
lea
cmp
clc
or
arpl
hlt
lods
ss
jg
insb
outsl
xor
repz
data16
test
mov
sahf
dec
or
dec
std
mov
push
and
pop
add
push
or
lcall
or
fs
and
ljmp
data16
jge
js
pop
or
pop
xorb
fistl
push
stos
push
mov
les
out
sub
dec
sbb
into
stc
cmp
sarb
cs
fisubrs
or
insb
mov
pop
nop
jecxz
and
cmp
rclb
add
mov
inc
jle
sahf
inc
push
pop
cmpsl
push
leave
cmpsb
mov
xchg
cltd
jecxz
push
mov
and
jecxz
das
hlt
dec
mov
adc
scas
sub
fwait
icebp
inc
or
and
push
or
pusha
fidivrs
cmp
inc
pop
test
cmp
js
lahf
pop
jge
push
cmp
lods
jno
add
xor
add
enter
xor
dec
addb
test
sbb
adc
jg
lds
dec
dec
lret
test
movsb
mov
sbb
popf
int
pop
jge
pop
into
jle
push
pop
jg
out
ss
inc
pop
lcall
sbb
in
scas
mov
hlt
adc
mov
mov
loopne
cmp
mov
aas
nopl
xchg
and
push
adc
add
fisubrl
mov
stos
jb
roll
add
loop
stos
test
jecxz
ret
mov
push
sahf
and
in
jnp
cmp
sbb
adc
bound
mov
stos
outsl
incl
test
xchg
dec
sbb
pop
loope
push
inc
or
jmp
leave
jg
test
push
repz
push
cltd
add
rorl
imul
mov
sahf
test
jl
rolb
mov
mov
mov
dec
cmc
adc
sbb
loopne
hlt
mov
push
cmc
jmp
scas
repz
mov
inc
and
out
subb
mov
stc
movsb
inc
iret
lds
mov
pop
arpl
loopne
shl
pop
pop
jge
insb
dec
ja
xchg
add
jp
sub
popa
and
sbb
sbbb
jmp
enter
sub
inc
xor
inc
mov
dec
adc
pop
fidivl
mov
mov
imul
cmp
xchg
sbb
neg
jnp
lock
xchg
lds
lcall
push
dec
ss
xor
nop
movsb
lret
jmp
push
jnp
mov
and
push
cld
and
das
inc
aaa
out
outsl
dec
inc
pop
pop
je
cli
dec
jg
mov
jbe
mov
testb
inc
xchg
pop
out
fstl
repnz
mov
jmp
sbb
sbbl
dec
call
cld
rorb
adc
imul
icebp
mov
or
rolb
bound
dec
mov
pop
fildl
das
xchg
mov
je
jbe
es
pop
xor
insb
sbb
fbld
xor
inc
adc
jl
mov
mov
repnz
xor
and
pop
ja
mov
push
mov
adc
inc
cld
ss
dec
sbbb
pop
adc
jge
xlat
xchg
adc
push
xchg
enter
xor
and
ja
std
ret
jo
push
mov
lret
aaa
popf
out
adc
push
idivb
mov
stc
push
or
dec
and
add
bnd
pop
fwait
xor
cmp
dec
xlat
pop
push
push
cld
repz
stc
addb
push
sub
mov
pop
pop
pusha
mov
and
sbb
and
dec
jae
mov
push
dec
xchg
or
pop
das
jb
push
xchg
pop
jmp
das
xchg
imul
mov
mov
mov
lods
sub
inc
inc
enter
mov
and
repz
push
xchg
ret
add
pop
dec
dec
xchg
lret
and
xchg
mov
daa
push
imul
push
or
lahf
jg
cmc
sub
mov
and
jo
aaa
mov
inc
out
push
imul
fwait
mov
cmp
jl
out
outsb
frstor
shll
fdivr
cmp
shll
pop
add
lea
test
sbb
xor
cwtl
sarl
lea
push
roll
movsb
mov
pusha
sbb
jno
and
stos
jge
sbb
jns
repz
scas
cld
adc
pop
pop
xchg
sub
sti
hlt
mov
gs
stc
xchg
jge
lods
or
aam
and
sub
int
mov
dec
outsb
insb
out
xor
xor
jb
jmp
sar
cmp
jle
leave
in
pop
cmp
mov
adc
lods
int3
mov
push
sbb
pop
xchg
mov
dec
and
int
test
bound
lea
xor
mov
pop
cs
and
sbb
jg
jge
test
cs
pop
add
outsb
imull
in
mov
aam
and
cltd
jecxz
outsb
lcall
mov
sti
and
mov
pop
mov
rolb
test
push
dec
sarb
shlb
in
xchg
push
inc
clc
pop
inc
jne
cmp
mov
ret
std
sub
and
mov
daa
inc
nop
jnp
loop
mov
and
push
out
sbb
cmp
sahf
push
mov
sarl
fimull
xchg
pushaw
pop
imul
jmp
das
test
jbe
jae
movsl
icebp
pop
insb
mov
outsb
jge,pn
pop
loop
lods
fcomp
stc
sbb
scas
dec
push
adcl
jae
dec
daa
cmp
xchg
mov
iret
stos
adc
push
popa
cmp
pop
add
iret
dec
mov
xchg
testl
add
sbb
std
add
movsb
aad
lea
mov
daa
sbb
sub
inc
leave
notl
mov
pop
sub
test
pop
add
push
test
push
data16
fs
or
add
cmp
pop
sub
jge
aad
push
push
imul
adc
pop
ljmp
int3
rolb
xchg
mov
cmp
adc
imul
dec
inc
add
xor
mov
cltd
xor
dec
or
das
sti
push
movsb
sahf
loop
in
dec
mov
mov
cmp
aam
push
ret
rol
scas
mov
inc
and
sbb
mov
stos
pop
jnp
jmp
out
push
out
or
dec
mov
lcall
addb
sbb
inc
push
mov
sti
xor
icebp
subb
adc
xor
push
jp
test
pop
ss
es
xor
dec
in
sti
orl
adc
mov
cli
out
mov
mov
in
mov
cs
cmc
rcll
xchg
jns
or
std
inc
and
fwait
pop
mov
out
orl
mov
inc
decb
jmp
in
in
fwait
adc
sbb
leave
push
add
pop
push
out
insb
cli
add
std
dec
lret
cmpsb
adcb
dec
lock
out
ds
ja
xchg
sub
call
push
cmp
std
daa
xor
jg
mov
gs
testl
cmp
lcall
cmp
fwait
mov
shll
dec
jmp
mov
dec
ret
pushl
push
inc
add
sbb
mov
cld
cmp
dec
das
mov
push
or
and
sarl
push
and
jne
push
jnp
in
js
dec
add
sbb
sub
insl
or
call
outsb
lahf
fwait
dec
into
mov
mov
mov
std
lcall
hlt
push
jmp
cwtl
jb
push
popa
or
pop
test
cmp
lret
sub
cmp
out
adc
pusha
mov
fcoms
dec
xor
mull
call
mov
negb
dec
pushl
mov
adc
jae
push
shrl
pop
les
popa
shrl
dec
mov
and
lock
lods
inc
adc
adc
dec
push
push
inc
lret
jb
sub
or
outsl
pushf
sti
in
push
sbb
and
out
scas
out
lods
ljmp
jnp
push
jle
jno
mov
pop
repz
repz
cmp
roll
movsb
shlb
fnstsw
psubb
jno
mov
sbb
hlt
or
in
sub
mov
mov
outsb
cwtl
jp
add
arpl
pop
in
fwait
add
jo
mov
sub
iret
sub
sub
add
xchg
fidivrl
mov
add
mov
pop
adc
out
mov
sub
ds
bound
lds
and
ljmp
push
mov
inc
add
enter
shlb
adc
filds
push
pop
xor
jae
idiv
push
xchg
push
add
pusha
push
dec
dec
mov
push
imul
imul
in
inc
cmpsl
adc
add
xlat
cwtl
adc
dec
pop
cmp
cltd
rol
mov
imul
pusha
inc
inc
push
lret
aas
test
stos
or
push
je
xchg
pop
stc
lock
jmp
jle
cmp
sahf
pop
push
addr16
jns
jne
dec
ret
lret
ficoml
pushf
lods
jg
call
sbb
je
jne
cld
out
jmp
dec
cmp
or
mov
push
push
into
cmc
xor
push
adc
lea
mov
sub
xchg
popl
sbb
push
cmp
call
cmp
les
repnz
jge
mov
pop
jmp
jp
insl
xor
dec
ds
in
lcall
jg
movsb
aam
lock
jns
inc
dec
into
mov
pop
mov
push
mov
or
sti
add
leave
inc
push
mov
ret
aas
ds
ret
in
jne
aas
mov
les
cmp
or
scas
mov
iret
adc
lea
mov
cmp
pop
push
sbb
sbb
sbb
sub
mov
adc
dec
and
fnstcw
dec
or
add
sub
xor
push
mov
loopne
xchg
aas
push
jl
mov
out
push
pop
mov
cmp
cmp
xchg
mov
sub
or
lods
popa
mov
push
cmpsb
mov
das
ss
clc
out
push
mov
arpl
inc
mov
nop
cmp
lds
sub
jae
and
add
jns
clc
sub
bound
shll
inc
add
enter
xor
lea
loop
rorb
std
adc
lods
repz
dec
adc
and
xor
bound
mov
mov
fwait
adc
push
sbb
jb
mov
lcall
lret
or
dec
cmpb
mov
lods
adc
xor
daa
test
repnz
aas
loop
push
cmp
subl
test
pop
or
int3
jnp
out
pushf
inc
add
je
inc
fwait
loop
lahf
loop
addb
sub
add
mov
repz
fstps
dec
fsubs
addb
sub
adc
cmp
sbb
cltd
cmp
push
testl
aaa
mov
xchg
cli
aas
add
or
ljmp
pusha
inc
dec
adc
and
or
mov
daa
repnz
sub
jb
test
movsb
inc
shlb
aas
es
jg
inc
cmp
sbb
pop
pop
sbb
inc
mov
in
cmc
adc
adc
and
pop
cli
int3
add
jmp
out
mov
mov
add
inc
push
jle
jecxz
adc
test
scas
clc
addr16
mov
push
nop
sbb
insb
sbb
imul
sub
aam
mov
or
aas
mov
push
js
ljmp
cwtl
test
ror
dec
insl
sub
jns
jnp
int
rcll
xchg
and
adc
stc
ds
cwtl
rcr
sbb
push
movsl
cmc
shll
inc
push
bound
int
mov
insb
loope
jne
call
cwtl
sub
insb
sub
fstl
or
xchg
loopne
dec
lret
lea
test
inc
loop
mov
mov
in
inc
out
outsb
xchg
xor
mov
pushf
stos
add
sar
ds
stos
cwtl
mov
dec
xor
xchg
jae
cmc
into
push
xchg
sub
lret
lock
cld
push
stos
nop
dec
ljmp
add
loopne
bound
jp
inc
mov
sub
movsl
jecxz
lcall
mov
sbb
leave
and
jo
jae
scas
adcl
ret
mov
mov
jmp
mov
mov
jbe
lock
push
xchg
adcl
hlt
and
xchg
jp
sbb
sub
dec
push
cmc
jo
in
fdivl
inc
dec
xchg
fistps
fdivrl
xchg
pop
jb
stos
cmp
dec
incb
gs
rorl
dec
scas
in
mov
add
push
je
push
cld
shrl
adc
push
lock
fcomps
mov
inc
xchg
mov
or
sub
mov
inc
cmpl
push
add
xchg
xchg
add
fisubrs
push
adc
test
xchg
push
call
stc
imul
stos
sub
xlat
mov
das
frstor
leave
outsb
mov
mov
aam
lcall
jl
mov
jae
test
sub
ds
dec
andb
dec
in
sub
fbstp
lods
mov
jnp
insb
cmc
and
inc
push
sbb
xchg
push
or
xchg
in
sahf
pop
sahf
jnp,pt
into
xchg
bound
jecxz
jp
je
or
jg
mov
lret
inc
or
mov
add
jecxz
lcall
jp
test
lods
arpl
inc
mov
push
inc
xlat
outsl
das
jo
pop
pop
ss
xchg
gs
xor
xor
lea
imul
shlb
dec
inc
jnp
pop
or
sub
xor
xor
add
or
ljmp
arpl
test
ret
dec
iret
aam
cmpsl
xchg
inc
in
mov
std
adc
jge
jne
and
xchg
mov
cltd
adc
dec
ret
mov
inc
jl
jmp
mov
lea
movsl
test
cmp
sub
imul
xchg
inc
in
cmpsl
dec
pop
test
mov
popa
dec
cmpsl
sub
das
sub
xchg
pop
je
mov
pop
dec
lds
jl
cmp
adc
cmc
inc
je
arpl
data16
dec
pusha
sbb
movb
jl
data16
pop
sti
or
or
fisubl
push
lahf
sub
pushf
fisttpl
stos
or
scas
and
stc
push
cld
and
mov
fmull
lock
or
mov
inc
loop
push
sub
push
push
mov
adc
xchg
and
mov
push
push
jnp
mov
stos
popl
pop
sub
jbe
daa
adc
inc
sub
push
sbb
cld
jbe
loopne
mov
lods
adc
cld
orb
and
jge
ss
out
cmp
sahf
pop
test
and
sub
push
shrl
or
lcall
mov
sbb
adc
lds
jne
loope
sti
cs
outsb
lea
test
and
adc
filds
repnz
insb
loopne
push
adc
jbe
fs
ss
push
movsb
outsl
mov
test
popa
shl
in
pop
aam
mov
aas
ficomps
fs
mov
xlat
cmp
scas
xchg
fs
lahf
mov
or
jne
loopne
cmp
adc
nopl
imul
jp
mov
or
rcrb
pushf
push
lret
xor
cltd
das
inc
aad
cmpl
or
mov
adc
insl
repz
mov
fstl
dec
xor
jb
jle
cmp
rcrb
or
lock
xor
lods
sbb
aaa
aad
fs
or
shrl
sarl
shlb
imul
mov
das
push
fcomps
and
cmp
or
bound
push
icebp
aam
ret
xchg
mov
je
push
adc
push
jge
jnp
lcall
mov
out
pop
push
insb
xor
test
push
pop
stos
mov
push
leave
test
stc
and
das
pop
xchg
sbb
xor
callw
enter
dec
cli
sbb
gs
lods
repz
divl
or
mov
xlat
pop
outsb
rcr
xchg
lret
sarb
dec
xor
xor
nop
ds
inc
adc
mov
out
dec
mov
inc
cld
push
jecxz
test
pop
ficompl
in
fistps
jnp
pop
push
cmc
jle
dec
daa
sbb
push
fnsave
stos
stos
lea
in
pop
jae
dec
cmp
push
xorb
cwtl
fwait
leave
push
push
xchg
push
mov
inc
ss
gs
cli
add
add
xorb
jo
jge
ficoml
mov
aad
movsb
mov
or
loop
shl
mov
out
cli
pop
fwait
xchg
mov
fs
insb
out
inc
sub
in
es
pop
or
sahf
xchg
and
imul
hlt
sub
cltd
jge
mov
xchg
sbb
aaa
pop
push
and
push
mov
into
ja
adc
outsb
push
sarb
sbb
sub
test
jno
les
mov
xchg
movsl
outsl
repz
lock
sub
lods
rclb
adc
jnp
test
arpl
pop
fwait
mov
pop
leave
outsb
push
mov
sub
or
sahf
stc
mov
jp
mov
sbb
jnp
insl
xor
sbb
and
movsl
or
shlb
lods
sbb
jge
and
andb
lea
inc
pop
lods
add
or
jo
xchg
jl
bound
fldcw
scas
mov
shlb
push
add
fimull
push
pop
shll
bound
push
cltd
pop
or
out
vpaddq
cmpsl
adc
ds
hlt
stos
adc
mov
in
cmp
cmp
movsb
jge
inc
aad
mov
adc
inc
inc
cmp
cmpsl
loop
ret
ss
dec
push
sub
cld
out
adc
adcl
sahf
adc
popf
std
cmp
das
ss
add
and
xor
sbb
pusha
inc
pop
or
jecxz
push
stc
xchg
sarb
xchg
in
lret
popa
int
leave
or
add
cs
fucom
gs
and
jns
xchg
lret
mov
push
xchg
and
sub
xor
sub
jecxz
mov
lds
pop
adc
shl
mov
test
add
test
in
sbb
arpl
ret
cmp
push
inc
push
lods
fisttpl
mov
in
inc
imul
int3
or
nop
cmpsb
int
xchg
and
xchg
and
lods
xor
adc
into
mov
cwtl
dec
pop
push
in
add
pop
push
fwait
sub
xor
in
xchg
das
test
dec
push
arpl
add
mov
in
inc
add
cmp
loop
sub
pop
push
sub
jmp
mov
xor
jmp
push
xchg
jne
or
in
loopne
out
xor
movsl
pop
cmp
aad
jo
xchg
and
mov
or
mov
jnp
fs
lret
rorb
add
icebp
loope
ret
mov
pop
mov
clc
dec
jge
jae
push
xchg
aad
imul
cs
xchg
call
push
inc
or
fnstenv
add
cwtl
push
dec
xchg
xor
addr16
pcmpeqb
sub
xor
mov
and
stc
shr
and
xchg
pop
popf
test
stc
cmp
loop
divb
repz
out
push
out
cmp
mov
mov
and
pop
mov
icebp
lock
popa
sbb
sbb
xor
das
inc
sarb
lock
cmp
pop
cmp
pop
mov
jge
cmp
cli
sbb
push
scas
xlat
loope
ja
mov
inc
rolb
stos
popf
sub
jecxz
in
in
and
mov
insl
mov
inc
dec
fcmove
jne
cmp
inc
sbb
mov
mov
repz
std
push
sub
incl
push
lret
jle
in
dec
xchg
stos
in
leave
call
loop
jb
rep
sbb
mov
sbb
jno
fcoml
loopne
hlt
movsl
add
imul
push
loope
inc
jb
int3
icebp
std
push
add
push
xchg
inc
mov
lret
mov
rcrl
out
psubsw
push
outsb
inc
push
jp
xorl
mov
adc
pop
dec
xchg
sti
stos
cwtl
xor
jp
cmp
shlb
sub
lds
push
adc
cmp
into
lock
xorl
dec
dec
push
lods
mov
inc
es
xchg
jg
in
jae
loope
xor
xchg
dec
inc
inc
xlat
jb
fsubrp
cltd
hlt
out
cltd
in
cmp
push
movsl
inc
xchg
arpl
sub
aam
loope
xchg
dec
add
loope
dec
aad
inc
pop
jp
leave
push
mov
xchg
inc
ss
fmuls
mov
popa
sub
out
lcall
jmp
sbb
mov
imul
add
or
imul
out
jg
xchg
stos
sub
das
pop
es
mov
sub
into
movsl
sbb
mov
sarb
mov
les
scas
dec
pop
xchg
inc
fwait
test
je
aam
pushf
pop
icebp
icebp
inc
push
jne
dec
xchg
add
in
push
es
cmc
mov
movsb
sbb
divb
mov
cmp
jp
mov
xor
pop
clc
mov
sbb
sbbb
insb
push
and
jle
jge
pop
cli
jle
ja
push
sbb
push
sbb
cli
push
call
lods
std
push
test
xchg
mov
mov
add
and
push
test
cmpl
or
scas
add
cmp
arpl
pusha
fadds
sub
pop
or
push
pushf
ret
sbb
dec
push
xchg
mov
inc
adc
dec
nop
push
or
sub
cmpb
push
scas
insb
sbb
sub
jne
cmp
jecxz
xlat
push
lcall
shll
xchg
or
xchg
lods
pusha
dec
adc
dec
adc
or
jg
daa
pop
push
sub
xchg
in
repz
mov
pop
stos
mov
jp
jae
cmp
rorl
xchg
scas
sbb
cmpsb
test
mov
aad
lret
mov
mulb
xchg
xor
and
icebp
mov
xor
gs
sbb
xchg
pusha
jg
movsl
mov
mov
lahf
jb
jmp
mov
in
mov
outsb
lcall
daa
sbb
add
sub
loop
ret
ds
xchg
sub
mov
or
pop
pop
sbb
or
push
mov
aas
inc
jecxz
lea
push
stos
aas
int3
cmpsb
jg
adc
lcall
cli
loopne
ret
in
add
stos
sub
sub
out
clc
cmp
mov
jbe,pt
mov
mov
test
scas
arpl
push
lcall
lods
dec
sahf
add
test
jge,pt
xor
push
clc
mov
movsb
mov
lods
sti
xor
out
fisubrs
hlt
and
mov
mov
daa
fmuls
call
xchg
xor
ss
in
xchg
daa
xlat
sbb
lods
daa
idivl
dec
aad
hlt
ret
mov
lods
mov
daa
jb
xor
out
mov
mov
jle
in
and
dec
mov
inc
imul
mov
addr16
out
mov
int3
jle
adc
aaa
jb
mov
pushf
mov
ss
aam
enter
lea
mov
sub
movsl
movsl
cs
mov
pop
mov
int
divl
outsb
repnz
push
icebp
scas
iret
xor
sti
pop
and
mov
jp
sub
fildl
sti
xor
cs
sbb
mov
jmp
lret
or
mov
push
mov
test
les
lods
cmp
sbb
mov
sub
jge
push
in
sbb
notb
mov
dec
mov
daa
shl
out
mov
add
lock
xor
mov
ja
insl
je
add
mov
ljmp
pop
sub
lahf
into
cmc
daa
push
insb
and
ljmp
pushf
xchg
mov
out
inc
orl
sub
xor
mov
xchg
cmp
xchg
js
jmp
call
pop
push
cmpsw
cltd
cmp
test
call
rcll
dec
mov
push
and
jp
je
cs
int
xlat
int3
inc
push
cmp
imul
xchg
scas
sarb
in
into
loope
inc
insl
idivl
pop
notl
lret
call
test
lret
dec
jle
out
xchg
pop
rcl
add
dec
fdivp
cmpl
sbb
sbb
in
cmp
xor
lock
repz
rcl
mov
testl
pop
sub
rcr
in
adc
mov
int
inc
js
push
inc
and
aas
jae
imul
sti
aaa
and
rorb
or
ljmp
repz
mov
cld
push
ficompl
mov
pop
insb
inc
sbb
push
fs
popa
cmp
cmpsb
fisubrs
ja
movb
sti
sub
or
and
push
cmp
xchg
adc
sahf
jns
pop
push
mov
shrl
lret
mov
inc
loopne
je
ss
xlat
mov
xor
inc
sub
bound
fidivl
and
icebp
xor
push
xchg
mov
cmp
dec
bound
aam
adc
mov
push
lea
loope
nop
inc
and
xchg
clc
inc
repz
test
push
mov
jle
dec
pushf
cli
inc
je
push
out
hlt
mov
xor
popa
or
out
iret
or
and
xchg
imul
adc
push
inc
pop
fistpll
xchg
mov
popa
jne
std
fsubrp
add
out
push
cmc
outsb
dec
mov
fdivrp
andb
loope
jl
xchg
in
mov
dec
into
sub
ret
stos
inc
adc
mov
subl
add
loop
xlat
lods
cmp
out
jmp
subb
loop
ss
and
lcall
push
das
int
cmp
mov
jb
ficoml
pusha
fs
push
push
xor
fistpll
je
shll
xor
stos
add
frstor
jmp
jne
test
in
cmpsb
pushfw
mov
addl
gs
in
cmp
jp
stos
pop
xor
jno
lahf
xor
sbb
mov
jns
popf
mov
push
testb
fstpl
stc
fxch
sbb
sahf
popa
mov
mov
imul
sub
push
aam
gs
mov
ss
mov
xor
enter
inc
movsl
xchg
mov
dec
cmp
add
int3
loopne
mull
push
arpl
sbb
mov
icebp
fnstenv
adc
je
incl
jmp
into
mov
call
mov
inc
inc
lods
orl
jb
mov
pop
xchg
add
adc
pop
sub
push
add
push
and
dec
movsl
or
test
int3
adcl
sbb
movsb
cwtl
test
jl
scas
int3
aam
enter
in
push
add
lods
cmp
cmp
call
inc
orl
stos
cmp
lret
fidivrs
xor
push
inc
fsubl
fisubl
cmp
jno
in
xchg
leave
enter
xchg
cmpb
xor
leave
jg
pop
add
fsts
mov
push
aam
test
or
dec
in
adc
cmp
add
pop
fistps
mov
push
outsl
cli
sub
int
or
push
mov
sbb
bound
sbb
pushf
pop
fists
loopne
sub
and
lods
add
cmp
dec
call
addl
sti
inc
imulb
pop
mov
insl
call
mov
mov
jg
lret
popf
ror
jae
jge
sti
dec
les
dec
repz
lea
movsl
shll
sub
push
mov
lea
or
scas
xchg
outsl
xchg
out
fsubrs
inc
sti
push
jge
aad
pop
lods
mov
or
xor
xorb
pop
andl
rcll
jne
stos
imul
fs
rol
adcb
dec
aam
jae
syscall
adc
icebp
sbb
sub
add
xchg
out
pop
and
ljmp
test
sbb
or
lret
xor
sbb
jns
add
adcb
push
into
mov
in
or
pop
and
xor
or
sub
adc
ret
jmp
imul
mov
jmp
push
fmuls
add
mov
jne
es
aaa
sbb
xchg
aaa
adcb
xor
mov
repnz
cmpsb
fs
jp
xor
cltd
push
lea
inc
mov
out
lahf
movsb
jecxz
rclb
loope
mov
jecxz
sub
in
add
cmc
adc
add
jl
divl
leave
mov
int
cwtl
test
xor
icebp
jle
sub
daa
fdivrl
shlb
icebp
push
adc
jmp
pusha
inc
test
aam
outsl
or
jae
dec
int
out
iret
dec
lods
sahf
sub
and
cmc
and
cltd
icebp
jmp
fists
test
in
jmp
call
sbb
in
sbb
sti
jmp
jne
enter
mov
push
xor
jecxz
push
push
cltd
lods
js
inc
pop
add
pushl
cmovl
ror
or
idivb
pusha
xchg
roll
mov
hlt
std
ficompl
push
mov
les
cmpsb
es
sub
jp
les
xor
sub
jl
popa
jbe
add
daa
xchg
and
and
mov
lret
push
pop
mov
icebp
fcmove
rcrb
lods
xchg
cmc
aaa
or
mov
movsl
push
adc
stos
mov
int3
adc
into
add
cmp
mov
or
leave
adc
pop
int3
add
les
mov
ret
loopne
and
cs
and
cmp
sti
sub
pop
add
lahf
fdivl
or
std
sbb
in
mov
mov
mov
mov
pushf
mov
std
out
jle
aas
add
lods
pop
sub
fcomi
lock
cs
mov
out
cli
cmpsb
stc
mov
jae
adc
in
pop
xchg
jno
adc
scas
stos
imul
iret
lcall
ret
cli
ja
cmp
mov
mov
adc
xchg
inc
mov
idiv
dec
mov
mov
inc
fsubs
lcall
cli
xor
mov
incb
ss
fs
jae
pushf
pop
scas
popf
xorb
push
mov
xor
pop
mov
sub
fnstenv
mov
adc
jle
int3
sub
add
mov
int3
xchg
inc
cli
xchg
repnz
mov
mov
cld
lock
jg
std
outsl
xor
xchg
pop
pop
scas
xchg
inc
mov
mov
jmp
in
rorl
ret
sbb
lods
iret
jo
push
lret
mov
jp
xchg
lcall
push
push
lret
add
cmc
sbb
pop
dec
sbb
cli
test
xchg
or
push
arpl
rcll
stc
clc
pusha
cmp
je
lahf
stc
push
addb
push
xor
xor
nop
xchg
jl
daa
sbb
mov
cmp
cmp
fsubs
mov
imul
add
fnstenv
mov
inc
inc
stos
scas
inc
inc
mov
jge
test
cwtl
fsubrl
insl
testl
mov
push
test
pop
int3
lret
ja
push
shlb
mov
test
add
mov
mov
rcll
xor
arpl
cmp
inc
int3
incb
or
insb
ss
dec
mov
mov
dec
jns
or
subb
setne
ja
jns
jno
dec
xor
push
pop
fnstenv
lds
xchg
inc
push
push
xor
out
lock
ss
aaa
push
mov
repnz
addr16
cs
int
ss
pop
mov
add
lret
mov
mov
jmp
mov
xchg
mov
mov
inc
fsub
lods
jbe
sbb
fisubs
jmp
mov
std
cmp
imul
jle
stos
fstp
mov
lret
xchg
xor
or
gs
push
push
stos
push
and
and
test
fistpll
sarb
pop
rolb
ret
pop
or
js
sub
mov
std
push
mov
flds
das
jge
sahf
loop
xor
and
mov
pop
pop
sbbb
mov
sub
rol
and
xchg
sub
push
scas
aas
xchg
pop
cmp
dec
mov
fwait
or
or
icebp
lods
movaps
cmp
gs
gs
lahf
lea
mov
mov
sahf
pop
loop
popa
jns
call
movsl
mov
sbb
mov
and
sub
sar
mov
out
mov
out
or
mov
xchg
int
bound
mov
jg
cs
hlt
movsl
jae
pop
mov
and
and
test
inc
sahf
iret
sar
aad
pop
jle
mov
movntps
pop
insl
addr16
out
mov
data16
adc
mov
movsb
mov
subl
sbb
adc
gs
out
inc
jle
in
sub
dec
mov
shrb
lret
push
in
sub
lahf
cltd
gs
mov
push
sub
pop
daa
and
rsqrtps
popa
jmp
push
xlat
mov
xchg
adc
mov
mov
icebp
inc
and
bnd
in
stos
cmp
jg
jp
out
out
sti
jmp
lods
push
bound
mov
test
sub
push
mov
fdivl
dec
in
sti
inc
adcl
ds
dec
rcl
data16
int3
sub
and
popf
int3
enter
je
test
push
mov
cmp
cmp
ljmp
test
pop
je
mov
mov
adc
sub
dec
add
lcall
sbb
and
aam
fisubrl
add
xchg
push
nop
and
in
sbb
push
iret
fsubrl
lds
scas
add
jbe
push
ljmp
dec
scas
mov
aam
dec
je
mov
inc
push
shll
rcll
out
jo
xor
orb
cmp
arpl
push
fsincos
or
ja
and
mov
imul
mov
inc
push
ljmp
push
push
fiaddl
repz
jmp
cltd
xchg
addr16
push
in
mov
repz
pop
jmp
xchg
fidivl
loope
out
xor
fsubrl
or
out
sbb
popa
outsb
rcll
fidivrl
icebp
cmp
xchg
or
outsl
cltd
mov
xchg
mov
shlb
xor
arpl
mov
sub
stos
pop
nop
push
mul
mov
push
movlps
inc
rcll
lea
hlt
adc
fsubl
and
loope
notb
pop
in
mov
sbb
jge
rorl
mov
call
xchg
dec
int3
or
ret
jno
scas
inc
ja
lea
rcrb
dec
jnp
movsl
sbb
jl
adc
sbb
adc
jg
loope
jae
mov
ja
xor
dec
xchg
dec
data16
rdpmc
imul
in
call
or
into
into
xor
cld
dec
inc
test
push
fistpll
sub
int3
cltd
mov
sub
xchg
pop
mov
dec
std
ja
and
pop
dec
push
subl
xorl
filds
or
in
aaa
sti
dec
pop
cmc
push
push
shrl
aad
push
mov
das
adc
push
shrb
cmp
sbb
adc
xor
fdivr
shll
lds
test
cmp
out
push
mov
add
jb
pop
xchg
sub
mov
cmp
cmp
rorb
imul
out
pop
mov
rol
mov
xchg
dec
sbb
out
clc
ds
ljmp
fwait
xchg
xor
push
scas
lds
in
sahf
aad
mov
ljmp
add
pop
fs
mov
into
mov
adc
xor
add
repnz
in
mov
mov
mov
mov
fists
gs
push
test
sbb
sbb
aaa
loop
xor
sti
mov
das
cld
adc
push
sub
fnstcw
jae
loopne
push
popl
mov
testl
hlt
xchg
lahf
es
xchg
fwait
aas
push
js
movsb
or
jle
cwtl
jae
mov
xorb
add
mov
mov
adc
inc
and
fisubrs
in
cmpsb
test
mov
mov
mov
test
leave
sarl
pmaxub
mov
xchg
or
dec
lea
dec
push
fsubrl
flds
cmp
loop
inc
in
mov
sbb
mov
adc
sbb
cs
and
stc
sbb
int
jne
insb
stc
ret
cld
scas
mov
out
dec
sub
popa
movsl
sbb
mov
idivb
test
cmpsl
arpl
fucomip
xor
mov
addl
dec
loopne
lock
mov
add
test
jae
push
xchg
cmp
sbb
movsb
lds
sub
dec
stc
lods
and
dec
arpl
loope
popf
into
mov
mov
cmpsl
push
push
inc
popa
stc
orb
mov
mov
push
jno
add
dec
addr16
lcall
imul
popf
push
je
fistl
rorl
ret
push
imul
sbb
shlb
clc
mov
jl
cmp
mov
nop
lret
mov
cmp
lock
dec
and
inc
filds
lea
xor
out
int3
jmp
mov
cmp
jae
mov
xor
jg
stos
cmp
in
jg
fistl
fidivrl
mov
add
mov
lods
imul
insb
insl
pop
mov
mulb
jbe
dec
jmp
std
in
outsl
sbb
add
daa
or
stos
frstor
test
movsb
jae
push
int
or
push
gs
clc
sub
sbb
xor
pusha
data16
in
xchg
jns
cli
mov
jmp
arpl
jge
adc
push
sarl
sbb
and
push
stos
aad
inc
adc
push
mov
dec
mov
push
into
add
pop
aas
data16
mov
and
jg
xor
lcall
sti
jg
stos
or
inc
and
adc
in
lods
insl
xlat
xchg
cld
sbb
subl
fs
dec
xchg
lea
lods
push
ja
fldcw
repz
add
sahf
dec
jae
jns
or
push
and
push
jmp
sahf
or
sub
dec
loopne
xchg
orb
or
nop
lcall
and
dec
pop
scas
test
fcoms
or
fxch
pushf
pusha
jnp
xchg
aas
dec
mov
mov
stos
xchg
lret
mov
inc
cmp
jnp
or
clc
fidivl
dec
rol
clc
sbbl
negb
inc
insb
shl
lds
ficomps
or
push
mov
movsl
jb
out
rolb
out
pop
aad
lock
mov
add
jge
sbb
add
inc
jne
imull
or
fcomps
add
push
dec
push
popf
ds
xor
push
mov
cmp
pop
aas
lahf
pop
push
sbb
mov
ljmp
xchg
pusha
mov
adc
mov
sub
cli
xor
jg
jp
gs
jns
imull
mov
out
mov
ja
hlt
xor
cmpsb
jne
push
pop
fwait
xor
enter
lea
inc
arpl
mov
add
push
outsb
shrb
aad
or
jg
cmp
inc
bound
xchg
insb
enter
inc
sub
imul
mov
xor
push
popf
jb
mov
js
inc
jmp
mov
fs
push
repnz
pop
mov
jg
outsl
sbb
mov
xor
lods
ljmp
push
fisttps
sub
push
or
push
push
cli
in
clc
xchg
enter
imul
incb
ret
mov
shl
test
ret
jae
lcall
cmp
push
fadds
push
dec
jecxz
dec
cs
or
jno
bswap
fidivrs
inc
mov
mov
aaa
push
pop
pusha
test
cmp
mov
and
leave
call
cmp
leave
xchg
addr16
xchg
xor
movsl
aas
iret
rorl
scas
lods
mov
insb
sbb
movsb
push
flds
or
aad
or
pop
adc
data16
cli
popa
test
call
adc
inc
cmpb
push
cmp
fadds
in
sub
je
add
jns
loopne
pushl
call
push
xchg
lcall
repnz
shl
inc
fists
mov
mov
push
test
je
xchg
fcoms
xor
roll
cmp
jmp
push
lret
test
and
and
iret
std
adc
push
outsl
pop
mov
sub
and
ret
dec
cmp
imul
cmc
sub
push
or
cmp
add
shlb
cltd
or
call
mov
and
cmp
mov
sub
and
xchg
adc
mov
cltd
sbb
mov
jp
mov
aad
bound
jbe
add
ret
les
jns
inc
sbb
outsl
cld
cs
xchg
fisttpll
out
das
push
sub
push
out
mov
mov
and
dec
fcomps
and
adc
add
leave
pop
push
sbbl
fs
arpl
sub
daa
out
dec
sub
or
mov
xor
ja
mov
sub
popf
dec
cs
lock
or
js
rcll
lea
mov
bound
add
es
cmc
and
movsb
sub
sahf
jl
fucomp
and
scas
test
pop
lret
jle
push
fsubs
or
pusha
lea
xorl
sbb
inc
xor
dec
jne
jno
imul
xchg
mov
mov
in
aas
ret
divb
jno
xchg
roll
enter
or
push
sbb
dec
push
push
std
sbb
jnp
movsl
sub
mov
jae
jg
mov
lods
dec
sbb
ds
js
adc
aam
cmp
push
data16
mov
popa
jnp
push
mov
pop
mov
push
add
mov
test
gs
mov
push
mov
std
ds
pop
pop
add
jmp
inc
jp
and
add
sbb
jns
mov
movsb
scas
dec
push
loop
add
imul
subw
outsl
mov
stos
pop
mov
add
ror
outsl
jae
cmp
aam
push
repz
add
dec
ss
push
mov
and
pop
push
popf
imul
inc
mov
sub
sbb
popf
push
mov
mov
and
adc
pop
mov
xor
cltd
mov
lcall
mov
movsb
and
mov
dec
pop
ja
push
sub
ja
test
fstpl
jnp
cmp
fcoms
mov
add
sbb
ficoml
test
pop
je
icebp
adc
je
sub
std
dec
int
dec
into
xchg
inc
sbb
and
mov
push
add
jb
addr16
push
sahf
ds
jle
xor
add
out
adc
lahf
jmp
stos
lcall
cli
insb
out
or
jle
xchg
mov
xchg
push
adc
daa
mov
out
in
dec
js
xchg
hlt
out
sbb
divb
cmpsl
shrb
and
xchg
sub
shll
outsb
pop
xor
push
stos
inc
mov
jns
or
test
ja
imul
test
jge
sbb
imul
out
mov
roll
test
repnz
push
movsb
mov
int3
sbb
adc
movsb
movsl
or
out
idiv
call
outsl
dec
xor
lahf
and
mov
xlat
leave
test
dec
pop
push
jge
inc
mov
sub
in
out
jae
inc
xchg
mov
nop
or
aaa
andl
cmp
lock
inc
sbb
sbb
mov
dec
cs
xor
lret
pusha
push
sarl
mov
mov
xor
dec
xor
pop
mov
xor
sbb
adc
stc
ja
cmpl
stos
jno
pop
ss
fcmovu
add
in
and
pop
shl
jae
mov
inc
xchg
xor
fmuls
dec
adc
fmuls
repnz
and
insl
add
cmp
aam
les
outsl
loopne
outsl
sbb
dec
and
cmp
push
pop
cmp
cmp
xchg
popa
out
loop
mov
mov
imul
jo
sbb
cmp
jecxz,pn
add
mov
lds
in
cli
aas
adc
mov
jbe
loopne
xchg
mov
lret
mov
sbb
repz
inc
test
cld
mov
cmp
xchg
push
ret
fs
push
call
xor
push
pop
adc
jg
xor
popa
jp
aas
cltd
test
daa
mov
shll
dec
jge
je
sti
xor
and
inc
add
adc
dec
xor
lds
sti
pop
ds
sti
imul
cmp
into
insb
into
stos
cwtl
iret
dec
shll
adc
jmp
andl
scas
lret
sbb
dec
mov
or
rcrl
push
or
aam
inc
mov
pop
mov
ret
mov
enter
aas
inc
xchg
fldl
stc
aam
aam
add
xor
and
cmp
dec
lods
je
lods
call
mov
mov
ds
and
andb
jns
movsl
sub
out
add
ret
sbb
pop
rorb
call
jmp
add
inc
sbbb
fwait
in
dec
movsl
ja
shl
cs
sbb
sbb
jno
lret
pop
adc
mov
push
adc
mov
sub
in
bound
lahf
aaa
repz
insl
push
stc
mov
sub
jns
and
cltd
inc
lea
sub
out
xorb
mov
sbb
lock
add
repnz
push
cmpsb
add
cld
js
les
les
ja
insl
jo
aas
xchg
ljmp
std
lcall
icebp
pusha
cmp
xchg
arpl
fstps
insb
mov
dec
push
xor
aad
movsb
mov
cltd
enter
jp
mov
cmp
inc
out
mov
jnp
test
or
add
gs
subb
jle
fdivr
or
mov
mov
jno
movsb
sti
mov
jns
movsb
jns
mov
jg
mov
push
sbb
jecxz
dec
sbb
fstl
adc
add
xchg
imul
inc
or
dec
mov
out
in
hlt
inc
xchg
mov
loopne
dec
loopne
mov
in
jg
vrcpss
mov
dec
push
cmp
and
sbb
dec
mov
or
or
cmpsb
aas
mov
cld
jo
or
lods
ja
sbbb
dec
mov
jns
pop
mov
push
fwait
sub
xchg
pop
mov
adc
cld
je
sbb
xchg
fdivrl
push
in
and
sbbb
loop
test
aaa
mov
mov
mov
inc
inc
jecxz
movb
cld
repz
xlat
or
or
enter
sub
addb
dec
sbb
mov
or
scas
lods
mov
pop
jp
sti
fcoms
enter
mov
mov
dec
andl
xor
cmc
test
lret
cmp
cmp
xchg
lret
insb
sub
mov
sbb
push
imul
jo
fdiv
jo
mov
and
xchg
sti
imul
mov
test
push
js
xor
push
daa
xor
ljmp
dec
rorl
stc
enter
fs
push
cmpsb
rorb
ds
clc
and
inc
rolb
cmp
pop
in
mov
lods
adc
in
jge
aam
in
xchg
mov
mov
jb
pop
jnp
pop
mov
ss
jmp
nop
fisubs
push
out
in
push
in
cmpb
dec
xchg
add
clc
add
dec
jmp
iret
inc
sub
push
cld
dec
jne
mov
enter
cwtl
pusha
les
in
mov
stos
or
pop
push
jne
call
jae
int
shll
jbe
push
push
pushf
lods
push
dec
fisubrs
xor
leave
cmp
mov
ds
cli
fbstp
cltd
imul
lods
mov
aad
inc
ret
cmpsl
out
dec
lcall
xor
xor
rorb
lea
mul
jno
out
scas
sbb
orb
dec
mov
scas
push
inc
xchg
fildll
jo
mov
pop
sbb
jecxz
pop
ss
xor
sbb
lret
jle
ljmp
mov
xor
push
or
data16
aas
and
jl
js
push
inc
ficoml
sbb
hlt
loope
test
shll
cld
sarl
inc
cs
sar
aaa
xor
push
xchg
sbb
adc
push
dec
sub
xor
push
ja
into
popa
adc
fs
mov
scas
jne
outsl
mov
mov
int
mov
out
aaa
out
shlb
adc
xchg
xlat
loop
dec
mov
les
or
test
stos
leave
loopne
fwait
mov
jne
icebp
jg
sbb
out
or
jle
fs
and
test
mov
mov
lret
ret
sbb
popf
and
push
mov
mov
mov
repnz
pop
mov
sbb
mov
push
or
pop
push
out
pop
mov
cmp
int
or
in
xchg
xor
lahf
jg
lahf
aaa
stos
mov
int3
add
dec
dec
int3
adc
jle
adc
out
lret
es
int3
loopne
mov
push
jge
push
cmp
nop
sub
dec
mov
jmp
fcmovbe
test
adc
and
fists
fcoms
jb
call
test
cmp
pushw
stc
mov
les
mov
fsubl
lods
add
push
in
inc
jno
vpshufd
add
pop
jne
xchg
data16
add
mov
ljmp
out
dec
lcall
lea
mov
int3
fnstcw
jno
pop
jg
jp
enter
push
sbb
call
sub
mov
mov
addr16
jmp
and
cwtl
sbb
imul
mov
leave
jg
and
mov
adc
lods
lcall
push
popf
sti
jge
lcall
sbb
sub
iret
andl
xor
subl
inc
loop
cmp
test
in
push
cld
sub
cmp
icebp
pop
sbb
jge
fimull
pop
inc
add
cmp
idiv
int3
cli
insl
adc
xchg
or
hlt
mov
cmp
add
pop
aas
mov
nop
jae
adc
push
shll
xchg
jle
scas
jecxz
lret
xor
cmp
mov
sub
jo
xor
repnz
dec
xchg
nop
jae
mov
jne
ret
imul
in
aam
cwtl
in
subl
addl
jnp
xchg
adc
mov
fldt
dec
or
scas
outsb
std
cld
add
and
in
lods
cs
repnz
push
and
push
jb
aam
push
gs
nop
dec
mov
in
mov
mov
fwait
dec
cmp
sub
sbb
addl
cmpsb
int
push
lret
ss
sub
inc
aad
jbe
mov
cmp
pop
mov
push
call
outsb
lret
movsb
cwtl
adc
dec
out
in
add
mov
les
adc
xor
mov
popl
jecxz
sbb
icebp
loope
xchg
jae
shll
cmpsb
cli
insb
sbb
adc
shlb
ja
cmp
loopne
and
mov
and
cwtl
cld
pop
fnstsw
test
jl
jl
inc
mov
sbbb
shrl
lock
arpl
jns
cld
push
and
ucomiss
push
inc
inc
jl
leave
xchg
test
sbb
iret
pop
push
pusha
loop
dec
aad
push
lcall
jl
lea
sbb
mov
sarl
mov
lret
paddd
mov
inc
pop
push
fld
pop
pushf
xor
dec
mov
cli
sbb
ljmp
daa
popf
dec
mov
es
pusha
cltd
push
les
jb
pop
call
pop
dec
sbb
or
pop
movsb
sub
imul
inc
cld
push
int3
in
imul
adc
xor
loopne
push
push
mov
adc
add
mov
aam
sysenter
and
test
in
in
xchg
mov
cld
mov
jp
dec
pop
xorl
inc
add
dec
xor
mov
dec
sub
das
cmp
sti
mov
jnp
sub
ljmp
ret
outsl
push
push
fs
imull
mov
hlt
insl
gs
cli
mov
pop
roll
testb
mov
stos
lahf
divb
lock
jno
sbb
jne
in
mov
and
inc
mov
fnstcw
addb
mov
jmp
cmp
repz
gs
test
out
cmp
cltd
mov
shll
pop
mov
leave
adc
dec
popf
fcoml
and
lods
and
cmpsl
cmp
mov
in
fadd
mov
inc
push
lcall
and
xchg
push
mov
out
out
stos
sti
sbb
aad
mov
xchg
je
cli
sbbb
movaps
xor
outsl
pop
mov
cmp
fstps
jns
sbb
sub
jmp
jle
cmpsl
jp
std
outsl
jns
iret
je
mov
sbb
sub
ficompl
mov
or
lods
in
mov
dec
mov
xchg
mov
jbe
cld
dec
sbb
add
xchg
mov
outsb
pop
bound
xor
dec
in
pop
inc
push
and
jne
lcall
in
pop
xor
outsb
aaa
iret
call
daa
aas
jnp
shll
mov
mov
gs
jnp
push
psubusb
enter
adc
push
out
or
out
cwtl
xchg
cwtl
cmp
sub
movsb
insb
cli
jo
add
enter
cli
or
push
je
dec
stos
insl
out
aaa
add
addr16
mov
ds
push
lahf
dec
repz
sbb
lret
fcmovnu
leave
pushf
mov
je
jmp
addb
xchg
dec
test
das
popf
lahf
dec
outsl
adcl
js
aas
test
or
push
add
addr16
adc
cltd
lret
jmp
mov
mov
fbstp
lods
jnp
fwait
push
jp
cmp
insb
xorl
mov
xchg
sub
inc
pusha
inc
fistpll
fsin
out
xchg
out
std
fs
mov
fcoml
jbe
ret
pop
roll
inc
and
sub
mov
sahf
test
js
out
popf
push
xor
fidivl
jmp
in
sub
stos
push
push
faddl
test
ljmp
pop
fnstenv
out
fs
add
jo
sbb
rorb
add
daa
sti
or
xor
inc
fwait
imul
or
mov
imul
sti
les
dec
aaa
sub
fprem
sbb
fisttpl
cmp
daa
pop
out
xchg
sub
cmc
ljmp
pop
push
sbb
mov
push
sbb
fs
jg
adc
insl
sub
inc
xchg
jl
pop
ljmp
xchg
xor
mov
popa
cmp
int3
test
add
imul
fists
dec
enter
setle
mov
sahf
into
mov
sbb
iret
mov
popf
orb
and
pop
leave
xchg
sbb
mov
push
cs
mov
and
sbb
cmpsl
scas
out
loop
cld
fldt
stos
jb
scas
out
xchg
imul
out
pushfw
pop
insb
negl
dec
sbb
xchg
or
gs
imul
xlat
das
imul
xchg
cmp
inc
test
data16
insl
xchg
mov
popa
mov
mov
movsb
fiadds
and
push
cmp
adc
pop
mov
fdivrs
jo
adcl
shlb
les
testl
shrb
jbe
jae
pushf
and
xchg
shlb
xor
lahf
adc
out
or
dec
inc
push
repnz
xsha256
cmpsb
xchg
iret
test
lret
lea
xorl
mov
xor
es
pop
fildll
cltd
dec
sub
push
lahf
xchg
ja
or
out
xor
ds
xor
fisttps
arpl
int3
cli
aaa
sbb
inc
imul
sti
xchg
lock
test
or
add
inc
dec
cmp
xor
fadds
fprem
iret
xor
dec
mov
lcall
dec
popf
xor
sbb
mov
ss
into
xchg
push
adcl
mov
inc
test
adc
fildll
out
jge
pop
mov
add
pop
jnp
mov
rorb
enter
sbb
mov
inc
xchg
push
mov
cwtl
xchg
sub
pop
test
push
mov
ja
xchg
fs
orb
push
or
pop
mov
mov
pop
push
lret
add
mov
inc
sbbl
jno
mov
add
xor
push
movsl
popf
sub
fdivrs
mov
jecxz
sub
mov
push
test
xchg
add
in
test
aas
mov
jecxz
adc
outsb
shlb
sbb
push
dec
and
lahf
xor
pusha
gs
fistpl
push
fwait
out
imull
out
sub
mov
int3
sbb
lahf
fildll
dec
mov
sub
add
dec
sub
insb
or
cmp
inc
xor
jmp
sbb
xchg
push
mov
sbb
sub
shlb
leave
cmp
inc
out
mov
xor
jno
outsb
lcall
in
sbb
mov
jo
jbe
add
lcall
push
push
mov
das
xchg
inc
and
ret
push
sub
xchg
movsb
js
arpl
outsl
in
test
leave
mov
inc
push
adc
jecxz
sub
adc
inc
add
adc
pop
jmp
xorb
fidivrs
sar
push
sbb
cmpsb
jg
hlt
add
xchg
into
jle
popa
dec
xor
xor
lea
neg
rol
cmp
cmp
mov
out
inc
rclb
rol
lock
xor
stos
push
mov
es
icebp
or
mov
pop
cmp
outsl
loope
cmp
lock
in
xor
jo
sub
std
pop
pop
into
fstpt
or
sbb
repnz
sar
aad
aam
adc
in
sti
and
insb
push
cmp
xchg
imul
cmp
rep
jae
fs
ljmp
outsl
aam
cmp
and
lods
cld
movsl
aam
shr
and
sti
cwtl
stc
cwtl
out
push
dec
aad
cltd
lods
sbb
cmc
xor
inc
jmp
lock
mov
push
lds
jne
stc
mov
add
mov
xchg
icebp
inc
int3
xchg
aam
fcoml
pop
inc
mov
jl
stos
add
add
mov
inc
jns
cs
and
cmc
push
inc
jmp
and
shrl
mul
rcrb
adc
add
mov
xchg
and
rolb
rcrb
aad
jne
and
arpl
daa
out
je
mov
jbe
add
addb
pop
inc
ss
mov
out
xor
add
cmp
xchg
push
mov
addl
ljmp
outsl
std
sub
rorl
insb
mov
adc
lea
jno
aaa
subb
in
outsb
sbb
jnp
sub
dec
xchg
pop
int
xchg
cmp
xor
lcall
fsubrs
notl
cmp
mov
jle
jg
scas
divl
outsl
movb
jmp
popf
mov
int
dec
jecxz
jge
cmp
jmp
or
scas
out
rcll
adc
pop
push
int
sbb
xchg
jnp
xchg
insb
jle
insb
adc
mov
pop
inc
stc
scas
sbb
pop
ret
imull
pop
inc
push
sbb
scas
test
xchg
loop
or
pop
sbb
call
jmp
movsl
jg
xor
movsl
loopne
sbb
add
sub
std
push
add
jecxz
jo
lahf
xchg
cmp
lcall
jae
mov
cltd
sub
sarl
pop
adc
mov
das
pop
add
pop
fildl
add
ficompl
add
mov
js
dec
repnz
jnp
sbb
jnp
pop
sti
sub
adc
add
jnp
sbb
fidivrs
idivb
jb
jb
js
ud1
neg
xchg
mov
jno
hlt
xor
cmp
xor
mov
mov
call
outsl
pop
test
mov
cmp
lret
sbb
xchg
xorl
adc
add
mov
push
mov
stos
xchg
mov
jmp
insb
push
xor
ds
and
arpl
push
stc
xchg
jg
fstps
xchg
in
inc
xor
xor
imul
jno
movsb
pop
scas
push
mov
sub
inc
fsubrl
jecxz
or
sbb
sbb
std
mov
test
rorb
mov
mov
scas
rolb
push
push
xor
shl
es
js
sbb
push
ret
inc
dec
pushf
cltd
xchg
mov
ja
push
call
test
pushf
movb
in
lret
jp
ja
test
popa
xor
xor
lret
data16
xchg
mov
mov
or
gs
rclb
cmc
inc
xor
subb
sahf
nop
into
test
mov
push
js
popf
inc
sbb
dec
cltd
mov
lret
or
in
sub
daa
ss
mov
mov
or
jb
out
in
and
inc
das
data16
jnp
into
mov
xchg
shr
outsl
fdivl
xor
data16
sbb
sub
bswap
push
out
or
sub
fnstenv
push
add
loopne
dec
addr16
sti
jb
clc
jp
mov
or
jg
sub
call
call
test
ficoms
mov
mov
adc
in
sbb
nop
fistl
sub
mov
mov
inc
push
mov
subl
adc
movsl
lret
cli
jmp
pop
pop
jecxz
add
insb
cmp
jp
sbb
sub
jnp
std
inc
add
shll
arpl
jg
cwtl
aas
push
cmp
jbe
cs
xchg
imul
add
xor
sub
add
pop
fisubl
stos
pop
mov
xchg
fs
fwait
aam
xchg
push
add
push
and
fnstsw
pop
aad
pop
cli
sti
xor
cmp
adc
push
ret
mov
out
into
mov
fwait
xor
cmp
jo
dec
pop
cmp
and
clc
adc
movsb
imul
pop
outsb
pusha
lea
mov
inc
push
mov
bound
sbb
dec
sub
les
icebp
shll
fbld
testl
dec
sbb
es
mov
pop
das
rorl
std
sbb
push
xorl
xchg
in
enter
fwait
push
stc
push
mov
enter
sub
adc
ret
mov
lahf
dec
imul
movsb
lret
std
cwtl
xchg
cltd
sbb
pop
ss
ja
push
cld
leave
sbb
mov
dec
push
xor
gs
repz
fidivl
add
xchg
scas
mov
jl
loopne
xchg
or
out
scas
cltd
jae
lahf
aas
jle
sub
test
mov
mov
dec
mov
xlat
sbb
and
add
xor
jle
xchg
inc
push
pop
inc
gs
lahf
clc
sahf
xor
pop
scas
or
into
push
fcoms
sub
adc
repnz
fldenv
inc
pop
aad
push
mov
sbb
dec
pusha
push
lahf
push
negb
add
and
pop
sbb
movsb
or
lcall
and
or
stos
jg
test
sbb
daa
mov
push
es
out
mov
add
add
mov
sub
sbb
and
test
xchg
and
push
dec
dec
jecxz
mov
push
out
xchg
pop
xchg
rolb
xor
loop
repz
outsl
xor
lods
pop
mov
cmc
pop
stos
xchg
lret
adc
mov
outsb
fs
pop
loope
dec
inc
sahf
loopne
addr16
nop
xor
or
outsl
xchg
gs
mov
sti
cmp
push
les
loope
sbb
and
push
popf
shrb
lcall
stc
insb
sti
mov
and
push
daa
xchg
push
jp
sub
rorl
pop
add
mov
lods
jno
mov
xor
add
insb
mov
lock
sbb
ljmp
out
lret
out
outsb
cli
out
cld
je
mov
aad
or
bound
shrb
mov
test
jbe
je
jno
xchg
inc
cmp
inc
daa
and
lock
jb
dec
cli
arpl
and
mov
shlb
push
push
xchg
add
int3
add
aam
lahf
test
sub
mov
jmp
push
sub
jno
mov
bound
or
xchg
or
fdivrl
jno
call
notl
fwait
pusha
outsl
loope
scas
into
mov
lret
mov
mov
loopne
notb
push
in
ds
cltd
jg
jno
pushl
inc
and
stc
jb
movsb
xor
xor
dec
rcr
ret
scas
test
fdivrs
stc
jl
sarb
aam
push
aaa
jb
lods
cmc
xor
loopne
dec
fmul
dec
aaa
outsb
push
int
sahf
gs
nop
xor
aad
inc
leave
inc
mov
and
jns
loopne
ds
lahf
mov
scas
push
ficomps
pop
adc
adc
mov
ss
test
stos
mov
mov
nop
add
mov
sbb
dec
jno
mov
or
cld
les
sarl
cmp
ficoml
aad
pop
dec
aam
jns
mov
ja
js
xchg
jae
scas
mov
outsl
cmpsb
push
push
out
xor
out
fimuls
cmp
mov
push
jl
fimuls
bound
pop
jmp
cmp
dec
dec
stos
mov
cmpsb
cmpsb
mov
fimull
mov
xchg
into
in
pop
pop
sbb
and
inc
jne,pn
stc
ja
xor
lret
jne
pop
mov
sbb
pop
call
mov
stos
mov
test
popf
dec
inc
shr
push
dec
sbb
cld
push
jb
les
cmpsl
push
add
xor
mov
sbb
test
aam
push
push
out
mov
inc
jle
loope
loopne
sbbb
inc
jae
cwtl
test
ljmp
jb
pop
dec
mov
cmp
das
add
iret
pop
add
sub
mov
addl
fsubrp
in
int3
cmp
jle
rolb
fwait
push
out
jp
stos
pop
push
mov
or
and
imul
mov
dec
js
div
sub
or
mov
fcmovnb
xchg
inc
fiadds
ret
dec
adc
and
lret
mov
insb
pop
mov
mov
jg
lahf
dec
aam
test
lods
adc
push
jecxz
outsl
adcb
push
imul
and
fadds
and
mov
stos
jne
jecxz
cltd
and
cld
mov
je
movsb
rorb
mov
arpl
loopne
test
movsb
rcl
aam
add
sahf
mov
nop
imul
or
mov
and
popf
mov
daa
imul
xchg
test
outsl
xlat
cltd
xchg
adc
in
jo
push
pop
sbb
loope
mov
mov
insl
jg
cwtl
cmpb
in
js
add
add
inc
frstor
fs
and
hlt
mov
xlat
ds
dec
popf
shll
dec
stos
pop
sbb
cwtl
imul
add
sbb
repnz
add
bound
ret
insl
aad
dec
xchg
sub
clc
in
jbe
mov
icebp
call
rolb
test
sti
lods
jecxz
scas
gs
outsb
scas
nop
fildl
pop
pop
jne
pop
dec
leave
push
test
mov
outsl
mov
out
xor
icebp
ja
mov
inc
mov
daa
sar
push
add
daa
adc
mov
push
in
push
lcall
and
cmp
scas
js
neg
sbb
dec
pushf
outsb
test
outsb
push
movsl
xchg
pop
test
out
imul
mov
leave
inc
lock
mov
xor
andl
pop
jo
jge
orb
mov
lret
push
in
mov
lret
insl
inc
push
fisubrs
negl
addr16
adc
xchg
call
fdivr
mul
arpl
outsb
fmull
loop
fwait
dec
xlat
iret
xor
xchg
push
pop
sbb
lcall
fs
iret
adc
fwait
in
or
xchg
mov
mov
std
push
push
not
mov
stos
mov
repz
inc
mov
cmpsb
insb
xchg
mov
aam
pop
jo
cwtl
cmp
pushf
mov
in
daa
add
repnz
xor
inc
js
jl
jnp
sub
ret
fs
movsb
xor
and
out
int
ljmp
fsubl
lock
add
icebp
mov
loope
fcompl
and
pop
les
imul
xchg
mov
or
mov
shrb
bound
rol
cli
sub
sbbl
sbb
cltd
mov
xchg
push
jno
pop
fldt
popf
imul
or
out
ret
in
mov
xchg
jne
std
mov
leave
sbb
jbe
jge
fimull
fcoms
xchg
cmp
jo
pushf
mov
or
push
int3
outsl
inc
loope
clc
jns
mov
jns
enter
xlat
int
inc
push
adc
inc
jb
jmp
dec
sbb
popf
aas
call
xchg
mov
jle
clc
sbb
jbe
test
das
sub
mov
jbe
push
hlt
out
int3
call
adc
and
cmpsl
test
jae
arpl
push
xchg
imul
push
jge
leave
xor
jp
jae
pop
push
push
in
repz
in
xor
mov
lods
icebp
mov
xchg
movsb
es
adcb
add
mov
lahf
test
push
mov
bound
xchg
int
cmp
loop
push
cmp
jg
jae
lock
mov
pop
movsb
mov
sbb
fmull
shll
xor
jo
xchg
dec
or
jge
cmp
int3
and
rcr
mov
bswap
push
mov
andnps
addr16
mov
dec
dec
pop
sub
divl
jne
or
pop
lds
jns
fsubrl
jb
or
in
jb
test
xchg
sbb
repnz
bound
xchg
xchg
and
fisttpl
dec
sub
mov
add
pop
jno
pop
fists
add
not
sbb
xor
fimull
and
jge
stos
mov
inc
imul
aam
sti
or
push
int3
bound
dec
push
insb
lods
lods
shll
rclb
xchg
adc
ret
xchg
insb
test
and
push
mov
mov
lcall
xchg
iret
adc
push
xchg
push
js
xchg
dec
sbb
rol
mov
jno
push
push
push
ret
xor
jg
sub
std
jno
xchg
insb
shlb
or
cmp
stos
push
in
je
mov
out
std
fisttpl
cmovs
insl
cltd
jbe
pop
in
jnp
ret
sbb
ljmp
add
mov
les
int
and
std
mov
push
mov
mov
push
xchg
lods
bound
test
scas
inc
aas
pop
negl
fidivrl
out
mov
pop
das
dec
or
pop
pushf
push
mov
xchg
pop
subl
aad
cmp
insb
pop
mov
test
adc
dec
into
adc
inc
stos
test
push
add
lret
shlb
call
shrb
daa
ljmp
sbb
sub
sbb
icebp
push
in
and
sub
xchg
fistl
sbb
test
mov
in
aaa
mov
pop
cmp
inc
cs
sub
push
or
and
aam
imul
lock
ret
bound
and
test
cmp
rorb
pop
adc
stos
jmp
mov
xor
push
xchg
jns
xchg
insb
push
arpl
inc
lret
mov
dec
test
sub
sbb
jae
sar
ja
xchg
loopne
cltd
pop
xor
divl
test
and
mov
jbe
cmp
pop
cmp
scas
lcall
xchg
sbb
jno
sti
mov
add
mov
or
fstpl
push
jbe
dec
cld
imul
lds
xor
adc
jp
rcrb
pop
sahf
int
push
xchg
mov
aaa
cmp
je
aad
mov
das
js
push
jmp
out
jge
lcall
ljmp
xor
xchg
mov
rol
aad
insb
arpl
pop
sti
push
push
mov
lahf
jne
or
xchg
xchg
test
cmpb
insl
fbld
inc
nop
sbb
cmp
ret
xchg
and
scas
mov
mov
popf
fbstp
xchg
imul
sbb
mov
adcl
push
jge
or
pop
scas
mov
pop
es
dec
popa
jb
call
lcall
jae
xor
push
mov
push
in
test
outsb
jle
lods
xchg
ss
movsb
insb
mov
adc
aad
mov
dec
out
adc
jne
loopne
cmp
adc
dec
addr16
inc
jmp
xor
xor
imul
xor
mov
aas
jb
and
dec
adc
or
sahf
aad
push
jl
dec
adc
jge
les
sbb
adc
push
xchg
sub
xchg
cmp
sub
mov
and
mov
pop
fcoms
or
push
mov
fneni(8087
roll
add
arpl
in
sbb
dec
mov
lahf
mov
je
sbb
lahf
cmpsb
les
cmp
mov
dec
push
mov
and
push
add
mov
out
mov
or
rcpps
enter
sti
fstps
outsb
mov
add
ds
mov
dec
mov
fistpll
mov
jge
repz
mov
cmpsb
daa
pusha
call
outsb
and
pop
fwait
inc
cmp
orb
std
push
daa
inc
fnstcw
pop
cmp
or
fadds
inc
jo
push
lods
dec
adc
jae
xchg
sti
xchg
mov
jecxz
pusha
mov
xor
stos
jg
inc
push
xchg
mov
stos
xlat
dec
cmp
sbb
pushf
ss
inc
int3
fcompl
pop
cmp
sarb
mov
mov
ljmp
inc
rorl
lds
mov
jge
in
ja
pop
es
add
out
adc
lods
shr
cmp
or
xchg
pop
or
adcl
jp
arpl
test
mov
push
xchg
arpl
jno
lea
push
pop
lcall
or
mov
mov
sbb
cmpsl
push
mov
jne
data16
scas
sbb
and
pusha
sub
pop
popa
rcl
xchg
ret
jae
leave
bound
in
test
xchg
adc
subl
xchg
sbb
scas
mov
int
xchg
mov
lret
add
cmp
repnz
mov
push
mov
push
lea
push
repz
dec
outsl
pop
roll
xorb
xor
pop
inc
lods
dec
je
data16
mov
dec
lock
in
mov
cltd
adc
jge
out
jbe
jns
fwait
ljmp
cltd
clc
xchg
mov
cli
icebp
xchg
aam
ret
in
xchg
or
mov
add
mov
inc
dec
cmp
push
mov
or
push
push
push
mov
mov
xchg
push
jmp
mov
push
int
out
inc
out
out
add
test
stos
addb
sub
vpackuswb
xchg
inc
out
stc
cwtl
mov
mov
cmp
ret
jge
jo
bound
icebp
daa
add
fbstp
movsb
add
and
out
sub
adc
aam
out
add
pop
push
jnp
xor
cltd
rcrl
mov
sub
sarb
push
jp
dec
xchg
lret
repnz
call
insb
nopl
roll
and
mov
lret
out
outsb
xchg
jbe
sbb
sub
mov
arpl
scas
js
pop
push
inc
xor
bound
sbb
fmull
jo
fnsave
xor
pop
test
popf
lods
test
push
jle
out
push
das
mov
mov
adc
push
repnz
xor
pop
and
stos
xor
and
xor
popf
mov
mov
xchg
cs
stos
ljmp
dec
mov
inc
inc
or
pusha
hlt
adc
gs
lea
inc
mov
arpl
lcall
push
inc
popf
in
pop
cmpsl
repz
xlat
lret
int
js
mov
push
mov
mov
out
ret
pushf
inc
jno
enter
lcall
adc
lret
jo
shl
inc
rolb
sti
cmp
cli
xchg
mov
mov
xlat
lds
cmp
ret
ss
ja
sbb
mov
int
and
push
test
insb
shll
cwtl
out
iret
push
adc
push
mov
push
sub
cmc
rolb
add
pop
xchg
popa
jg
call
sbb
je
xor
xchg
js
andl
js
jl
pop
lcall
dec
sub
movsl
xchg
sub
sub
in
push
push
jns
add
adc
ret
repnz
sti
mov
ret
push
flds
mov
add
outsl
pop
jmp
decl
loopne
xorb
enter
mov
and
push
sahf
cmp
std
in
je
fimuls
mov
mov
xor
cwtl
adc
fimull
push
shl
or
leave
add
rclb
pop
aad
cmp
xchg
mov
cld
call
add
cld
sbb
push
mov
in
dec
or
xor
pop
and
movsl
xchg
add
pmaddwd
sub
dec
pushf
inc
jno
adc
jge
aaa
movb
push
lods
inc
sub
cmp
dec
add
inc
lods
fiadds
lret
bound
jae
int3
add
xor
inc
push
lret
dec
xor
dec
push
add
dec
cmpsb
test
mov
mov
es
jle
mov
jecxz
and
xor
xor
or
xchg
inc
fsub
and
ror
fistpll
enter
leave
fidivl
mov
daa
mov
xor
cmp
sub
insl
mov
sbb
aam
pop
lcall
hlt
xchg
loopne
stc
aaa
es
jno
jmp
fdivs
je
fldl
sbb
fwait
cs
cmp
mov
dec
iret
inc
xor
push
js
push
mov
ja
es
or
lcall
aam
mov
push
lds
mov
and
xchg
mov
sub
pop
dec
scas
inc
in
out
sbb
pop
fldl
sub
mov
or
mov
cmp
dec
sarl
cltd
xchg
push
jmp
les
das
and
pop
mov
nop
fs
mov
mov
fadd
mov
jecxz
jmp
icebp
push
cli
jp
cmp
fcmovnb
pop
push
xchg
lret
loop
cmc
repz
adc
jne
shr
aas
cmp
and
and
xchg
loope
pop
leave
push
lds
jnp
imul
sbb
mov
add
icebp
cmpb
call
add
push
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
.byte
.byte
pop
add
push
lock
loopne
mov
or
popa
jne
in
sub
and
int
pop
adc
mov
sbbb
lock
mov
sub
jnp
in
ja
jno
test
stc
fs
call
inc
dec
hlt
cs
mov
scas
sbb
inc
movsl
repz
xchg
leave
shlb
stos
dec
pop
loopne
movsl
dec
into
dec
mov
sbb
repnz
jbe
sub
stc
inc
outsl
push
sbb
pop
mov
scas
sub
and
cmp
fsubl
stc
add
jp
push
and
mov
es
fsts
xchg
pop
imul
cmpsl
and
and
fmull
je
test
add
mov
mov
aad
pop
mov
mov
test
xorl
out
sbb
mov
mov
int3
fiaddl
loopne
jle
lcall
arpl
fcoms
fisubl
jb
outsb
and
clc
out
mov
or
pop
daa
mov
mov
push
mov
aam
or
mov
arpl
aas
jecxz
sub
mov
add
clc
shrl
pop
or
call
adc
fisttpl
and
call
mov
lahf
fcmove
jae
roll
and
arpl
cmpsl
pop
mov
and
pop
fisubl
mov
dec
ret
test
cmpsb
inc
add
lods
mov
mov
and
xchg
mov
int3
sub
sub
enter
mov
mov
inc
mov
adc
pop
nop
and
rolb
stc
add
arpl
lret
gs
sahf
and
push
cmp
pop
lcall
pop
inc
push
daa
cmpsb
dec
fisubrl
mov
test
aas
mov
aam
add
xlat
rol
mov
inc
cmp
fimuls
nop
mov
pop
in
sti
sub
mov
movsl
mov
pop
fbld
dec
lods
scas
jl
das
lds
lret
jnp
out
stos
call
rcr
push
mov
jne
in
iret
lock
lcall
lods
dec
cmp
rorl
jne
stc
lret
inc
jne
mov
ds
sub
aas
aam
pop
sbb
or
xchg
and
mov
in
sbbl
jge
cli
fchs
fistpl
cmpsb
add
outsl
dec
enter
mov
or
mov
push
dec
jb
push
lahf
fimuls
jns
fnstcw
stos
mov
imul
out
iret
scas
les
jns
test
int3
mov
mov
cs
inc
inc
add
mov
iret
and
cmp
xor
dec
je
lret
or
mov
pop
mull
xchg
jo
jb
insl
rorl
cmc
pop
sub
add
ss
js
icebp
out
push
mov
push
lahf
jo
xchg
fwait
and
test
mov
test
stc
daa
fs
cmpsb
ja
daa
dec
mov
inc
cld
inc
push
sub
out
je
inc
fcmovbe
adc
and
das
dec
dec
or
sti
sub
xchg
and
imul
repz
repnz
insb
nop
rcll
sbb
stos
out
inc
mov
push
ret
fistpl
bound
and
stos
movsb
add
mov
aam
cltd
fwait
das
insb
mov
xchg
add
or
rcll
jo
xchg
test
rcll
insb
xor
dec
add
movsl
fdivs
and
or
xor
lcall
dec
pop
adc
mov
dec
mov
int3
mov
sub
aad
loop
jb
imulb
stc
sub
mov
pop
fstl
insl
adc
test
push
mov
xor
and
xchg
xor
sbb
mov
pop
dec
cmpsl
and
stc
sbb
xchg
repz
dec
xchg
xchg
jl
jmp
int3
loope
sub
gs
pop
push
mov
sbb
adc
pop
mov
je
or
incl
mov
lods
int3
and
sti
sti
push
push
adc
fisubrl
pop
mov
lcall
lods
push
mov
lds
int
adc
stos
icebp
fistps
xor
test
dec
mov
pushf
jle
in
rcrb
aaa
dec
inc
fcompl
fidivl
out
ljmp
movsb
add
mov
int3
lods
pop
cli
add
mov
mov
lahf
dec
pop
out
das
pop
mov
mov
lods
shll
jmp
or
push
loop
rclb
shrb
adc
mov
jge
cs
test
or
and
shlb
lcall
lahf
mov
movsl
cmc
mov
aam
lahf
mov
mov
repz
pusha
cmp
xchg
lea
fs
lods
out
xchg
adc
addr16
cmp
mov
sub
dec
test
cmp
gs
sub
mov
out
js
mov
shrl
cli
mov
shl
sub
int3
nop
jo
aaa
aam
dec
fmull
push
loop
sub
cmp
ret
xor
and
mov
mov
inc
push
bound
aas
inc
jb
jg
fs
lods
or
jmp
inc
popa
jmp
leave
cmp
aas
shl
dec
jle
aaa
push
outsb
dec
jmp
das
popf
pop
xchg
subb
jmp
push
orl
mov
mov
cmp
pop
or
daa
gs
pop
cmp
adc
fcmovb
xor
cwtl
into
cmp
xor
push
insb
adc
and
notb
push
adc
lods
ds
shlb
cmpsb
sub
scas
sbb
mov
dec
scas
mov
into
adc
pop
xchg
mov
adc
dec
negl
das
dec
adc
dec
add
cmpsb
inc
jmp
dec
mov
mov
test
push
adc
mov
fdivrl
sub
mov
stos
jo
pop
arpl
xchg
das
inc
mov
pop
xchg
push
jecxz
adc
leave
xor
mov
push
sbb
pop
shrb
gs
pop
adc
adc
xchg
les
into
add
cmc
and
rolb
inc
mov
jmp
xor
inc
sub
jns
scas
ds
xor
ret
dec
andl
or
dec
dec
or
mov
inc
pop
cs
orb
pop
aas
fstl
out
lret
es
cmp
lret
lock
lea
lods
dec
add
mov
mov
in
ja
movlps
dec
shll
addr16
xlat
shrl
push
pop
sbb
xor
nop
and
pop
cmpsl
add
je
mov
out
movsb
sbb
cmp
xchg
test
aam
jno
inc
push
mov
mov
jp
push
clc
loop
jmp
cmpsb
insl
push
sti
clc
mov
mov
data16
int3
mov
sub
lock
call
pop
fs
xchg
cmpsb
imul
sbb
xchg
mov
push
test
cmp
adc
sbb
sahf
ljmp
xchg
or
push
push
jecxz
fnstsw
mov
hlt
daa
xadd
rol
jmp
stos
ss
testb
xchg
cmc
push
cmp
gs
imul
test
xchg
mov
pop
testl
test
repnz
inc
mov
fsubs
loopne
xorb
adc
aas
int3
mov
popf
testb
jg
adc
inc
sub
je
ljmp
and
iret
lret
addr16
xor
push
gs
jge
cmp
test
jae
cmpsb
aam
cmpsl
cli
xlat
lcall
lret
cmpsl
mov
and
out
cmp
xor
add
xchg
es
dec
rol
and
repz
mov
ret
and
pop
ja
push
and
cmp
test
in
jge
jne
sub
ss
lret
jb
jbe
dec
ror
cmp
push
add
pop
rorb
imul
add
dec
inc
in
sub
dec
inc
pop
push
mov
mov
mov
shlb
lcall
in
es
sti
and
fnstcw
in
add
sar
mov
mov
cltd
or
push
fadd
aas
xor
xor
xchg
mov
jecxz
pop
stos
sbb
sub
ja
or
shlb
cs
mov
xor
negb
mov
ret
mov
inc
arpl
arpl
int3
cmp
pop
cmpsb
xchg
imul
fsubr
lock
outsl
mov
pop
lahf
repz
mov
pop
in
sub
add
lods
loope
icebp
hlt
into
jl
jno
inc
inc
push
push
or
in
cs
je
aad
jo
or
ds
cs
iret
pop
sub
out
mov
sub
pop
es
ficoms
mov
es
mov
mov
jb
inc
stos
pop
cmpsb
mov
xor
inc
insb
or
mov
push
leave
xchg
popl
cmpsb
ja
push
mov
sub
aam
hlt
shrl
clc
mov
push
sbb
and
sbb
cmc
clc
dec
push
dec
adc
inc
xor
mov
add
add
sub
adc
fiaddl
test
es
int3
xor
loop
je
xchg
jne
adc
fucom
div
cmpsb
pop
jae
div
push
leave
sub
mov
fstps
push
pop
arpl
shrb
jbe
jle
or
rcll
and
xchg
cmpsl
test
loopne
mov
ret
push
xchg
jb
mov
pop
sub
and
out
loopne
rcrb
in
and
outsl
sahf
xchg
fisttpll
mov
xchg
or
icebp
stos
push
cmp
jmp
xor
in
jle
js
jmp
mov
daa
mov
and
ret
inc
and
sub
push
adc
xor
loopne
xchg
aaa
movsl
or
pop
repnz
pop
or
jnp
cmp
jg
ja
jns
pusha
jno
jmp
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
.byte
.byte
decb
stos
push
icebp
xchg
dec
sub
das
icebp
bound
std
outsl
cli
out
mov
xlat
mov
and
push
adc
adc
jge
pop
sbb
int
xorl
popa
push
jp
inc
push
cmc
imul
popa
out
stc
sub
mov
xor
inc
push
lock
adc
in
xorb
adc
xor
mov
adc
data16
sbb
push
inc
add
insl
clc
jbe
ret
shl
mov
jns
int
pop
jne
mull
aas
nop
jg
fs
push
sub
cmp
pop
sub
adc
movsl
lods
jo
lods
mov
out
pop
test
cld
fsts
out
pop
jmp
mov
dec
push
sub
andl
insb
inc
je
lahf
mov
jge
or
sbb
add
mov
inc
fcom
repz
addl
stos
imul
mov
arpl
sbb
cmp
or
nop
leave
dec
xchg
jp
push
jge
loopne
mov
and
sbb
xor
lahf
xchg
hlt
mov
loope
insl
ret
sub
movsb
jno
int
inc
repnz
std
adc
popf
adc
jmp
sbb
add
dec
mov
insl
mov
push
mov
fchs
ljmp
das
hlt
lods
and
mov
scas
mov
inc
test
dec
fisubs
sub
sbbl
std
mov
pop
stos
shlb
dec
dec
push
jge
or
dec
lahf
movsb
mov
in
pop
xor
mov
add
cwtl
aad
imul
push
lods
lea
inc
sahf
pop
pop
inc
push
mov
iret
pop
lret
cmp
into
fwait
imul
jle
je
popa
fiadds
sub
idivb
shlb
nop
add
sub
add
add
sub
fwait
cli
mov
xchg
sti
mov
fdivrl
scas
jl
cmpsl
inc
out
cmp
mov
sub
iret
cmp
jmp
xor
pushf
pop
add
lea
and
or
jb
cmp
movsl
and
jecxz
sbb
movsb
enter
cmpsl
clc
cli
and
inc
pop
sbb
xchg
out
in
jp
call
inc
stc
sub
dec
mov
push
inc
jg
jo
dec
das
inc
pushf
sub
sbb
dec
imul
ds
inc
pop
sbb
or
mov
mov
enter
mov
sub
mov
out
xor
outsl
ja
and
repz
jecxz
push
mov
and
dec
mov
clc
mov
ja
test
lcall
xor
dec
mov
or
xor
mov
dec
adc
fimull
jnp
sub
popf
add
ds
fdivr
push
add
mov
mov
stc
xor
out
mov
inc
cmp
pop
and
xchg
add
fdivrl
ljmp
jecxz
cld
outsl
test
scas
mov
add
jl
sub
icebp
dec
mov
mov
xor
fsubrl
adc
das
loope
adc
push
test
cmp
aas
mov
and
and
mov
mov
ds
fdivl
lods
jge
xor
sbb
and
jp
inc
sub
popa
icebp
outsb
nop
call
jle
shrb
fbld
pop
stos
add
add
cmp
adcl
movsb
sbb
scas
and
and
xchg
jbe
sbb
faddl
fisubrl
mov
adc
sahf
and
pop
cmp
bound
ss
pop
flds
xchg
mov
fiadds
pop
push
mov
pusha
pop
dec
fxch
jae
test
subl
and
movsb
cld
shlb
mov
daa
popf
rorl
sahf
and
pop
cmp
pop
dec
cmpl
mov
stos
sbb
lock
mov
or
mov
ret
or
push
mov
and
mov
lahf
aad
dec
fildl
arpl
pop
ja
xchg
add
sbb
mov
and
jmp
sub
mov
push
scas
stc
fisttpl
sti
pop
xorl
adc
in
fs
cmp
int
jno
aaa
mov
ss
push
sbb
sbb
inc
int3
div
scas
sub
push
sahf
xor
or
jnp
xchg
xchg
inc
std
or
addl
call
ret
test
xchg
sub
mov
add
mov
inc
and
xor
adc
pushf
mov
lods
dec
sti
clc
sbb
js
mov
mov
lahf
lret
pop
jle
push
cld
add
push
jnp
jmp
fwait
rcl
mov
pop
sbb
adc
das
fsubl
jbe
cmpsl
insb
iret
push
cmpsl
add
inc
jg
xchg
popa
or
dec
lcall
dec
mov
call
push
xor
out
daa
mov
ss
test
jo
sub
cmp
shll
xchg
sbb
out
shll
push
add
adc
fimull
mov
mov
test
mov
fistps
sub
ds
leave
imul
fsubl
jecxz
pop
out
push
xor
cltd
push
test
adc
inc
js
loop
int
test
and
push
arpl
xlat
sbb
cwtl
inc
arpl
sub
sbb
adc
or
push
sub
push
orb
adc
imul
sbb
add
outsb
pop
orl
subl
and
insb
popa
mov
push
adc
and
fdivrl
imul
fs
arpl
dec
push
sar
add
lret
repz
jge
sbb
out
sub
mov
xchg
mov
aam
ds
cltd
push
hlt
pop
push
jns
or
frstor
cli
push
or
or
push
xchg
fadds
imul
pop
mov
jmp
shlb
sbb
addr16
das
test
lods
sub
xchg
rcll
hlt
inc
mov
add
fldenv
dec
stc
aam
mov
mov
xchg
ret
jae
das
mov
lea
jb
gs
daa
or
jns
inc
lahf
stc
icebp
jl
pop
inc
arpl
or
xor
and
jne
lock
jb
shrb
and
xchg
lahf
out
xor
idiv
push
popw
cmpb
cld
arpl
daa
inc
push
ja
sub
jge
aam
push
orb
sub
ds
rol
clc
push
into
lods
add
push
jp
inc
add
inc
in
push
dec
mov
scas
fwait
add
adc
je
push
add
xchg
fdivp
jmp
pop
add
xrelease
lea
cld
xchg
xchg
into
rol
mov
cmp
cld
in
stos
xchg
lahf
cld
jae
mov
in
mov
xchg
xchg
dec
fdivp
idiv
bound
cmc
imul
xchg
bnd
add
dec
pop
mov
jbe
xor
inc
lock
xor
insl
mov
adc
push
and
and
lock
in
in
and
pop
mov
loope
rcl
adc
test
mov
mov
fucom
xchg
pop
mov
add
inc
pop
inc
idivl
pusha
sub
test
sub
mov
lea
mov
pop
enter
fadds
cmp
xchg
adc
mov
push
pop
and
popf
cmp
add
dec
xor
and
sti
jno
rorb
xabort
jg
ds
mov
ljmp
addr16
lods
ret
cltd
test
push
imul
in
rclb
mov
and
mov
stos
cld
in
push
push
incl
jns
test
inc
test
aas
xchg
inc
push
xor
jl
dec
xchg
je
jnp
loop
clc
sarb
and
ja
nop
jl
loop
xor
or
inc
and
or
push
addr16
sub
rolb
mov
out
pop
mov
push
pop
jmp
xlat
pop
lea
lret
mov
fcmovnbe
pop
push
sbb
sbb
mov
cmp
mov
mov
add
mov
fisubrs
leave
dec
xor
add
adc
cmpsb
lds
outsl
mov
push
pusha
cltd
ds
jo
shrb
outsb
sahf
and
repz
push
packsswb
sub
jb
iret
and
xchg
jecxz
pop
or
xor
into
mov
gs
jmp
adc
sub
push
add
lds
jns
mov
imul
and
lea
jg
insl
mov
xor
xrelease
inc
divl
sub
or
xor
mov
jo
mov
jmp
inc
int
push
mov
mov
dec
push
ret
lods
jae
mov
into
test
jnp
push
pop
ss
ja
cmp
cwtl
mov
adcl
imul
popa
sti
adc
cmpsl
lret
int3
xchg
movsb
xchg
rolb
int3
das
sbb
add
ja
xchg
or
movsb
add
xor
xchg
xlat
mov
mov
rclb
out
pusha
cmp
aam
stos
jge
cmp
cmp
pop
ror
dec
mov
add
imul
and
ss
mov
idivb
test
fwait
movsb
jns
inc
movsb
jg
fdivs
scas
push
xchg
call
adc
and
xor
pop
mov
mov
jmp
popf
cmp
in
cwtl
outsb
test
dec
cltd
inc
or
int3
jl
pop
or
mov
xchg
jg
xchg
lret
mov
inc
lods
cli
push
adc
cs
add
ljmp
negl
mov
cld
push
inc
pop
test
je
adc
data16
xchg
and
adc
cwtd
sbb
outsl
or
repz
das
mov
mov
adc
dec
popa
dec
add
es
xchg
mov
inc
pop
sub
std
cli
xor
pusha
or
or
sub
jmp
pop
cld
call
int3
xor
or
mov
addb
push
test
add
pop
cmp
and
mov
mov
jge
adc
sub
jne
inc
mov
js
stos
cmp
jecxz
or
loop
bound
jg
xchg
mov
aam
ljmp
mov
mov
nop
imul
mov
pop
movups
mov
clc
lcall
jmp
leave
xchg
cs
enter
addr16
test
fldt
jb
mov
sahf
cmc
jmp
pusha
sti
andb
ss
daa
cmp
mov
mov
data16
les
ss
push
stos
lahf
xchg
push
cwtl
mov
ljmp
out
shl
or
sbb
ffreep
es
sbbb
popf
ljmp
inc
inc
xor
mov
dec
fisttps
cmp
jo
movl
in
push
pop
fwait
xor
pop
pop
push
ret
xchg
aam
stos
inc
int3
jmp
cmpsb
sahf
xor
jo
lock
flds
bound
jne
popa
icebp
jne
insl
jb
dec
jl
and
pop
mov
inc
std
cld
sub
addr16
popa
shrb
repnz
xchg
std
fldt
push
ror
mov
xchg
jle
xor
shrb
addr16
and
out
pop
jno
add
sbb
lock
fistpll
std
add
jecxz
cwtl
or
xchg
aas
jmp
inc
xor
andb
loop
popf
mov
jno
adc
mov
int3
jg
insb
ljmp
mov
icebp
fstpt
mov
xchg
mov
hlt
xor
fs
and
out
daa
sbb
repnz
jno
std
in
jg
sbb
adc
and
call
jg
mov
jnp
loop
and
bound
cmp
mov
and
pop
or
xchg
jge
adc
in
sub
push
repz
pop
add
fnstsw
mov
jo
cmpsb
imul
imul
aas
pushw
dec
mov
movsl
daa
lret
xchg
movsl
mov
jl
cmp
daa
pusha
stos
cmp
inc
xlat
fidivrs
inc
inc
xchg
movsb
loope
shrl
data16
dec
mov
add
jns
sbb
add
sti
lret
mov
das
loope
jno
pop
mov
xor
mov
xor
lock
and
adc
fistpll
into
repnz
mov
dec
lods
stos
lea
mov
xor
jnp
xor
push
outsl
out
or
enter
insl
leave
dec
loope
popa
lods
in
mov
gs
xor
cmp
repz
cmpsb
fiaddl
loope
adc
ljmp
inc
dec
mov
push
movsl
sbb
dec
push
lods
push
fidivrs
push
aaa
cmp
push
jno
das
cmp
rclb
scas
jmp
dec
xor
pop
jge
ja
xor
dec
outsl
mov
jno
jns
push
dec
mov
xor
inc
and
sub
fidivl
or
jmp
aam
inc
mov
xchg
dec
pop
ret
xor
sub
jmp
sbb
ficompl
and
cmp
pop
fdivrs
popa
ret
les
xor
jle
mov
and
cmp
or
addr16
push
in
cs
js
roll
sahf
cmp
lahf
jnp
cld
in
int
out
ret
mov
jno
add
int3
push
push
rcrl
cmpb
fstl
imul
jp
outsb
cmc
dec
popl
data16
pop
inc
fsubp
outsb
cmp
xor
adcl
cmp
push
and
js
enter
mov
cli
iret
cmpsb
shrb
xor
aad
jle
sub
jl
inc
cmp
dec
inc
lea
outsb
rcrl
int3
sub
pop
fcos
std
and
ret
test
push
add
test
and
popa
imul
dec
daa
sub
sbbw
push
xchg
sbb
cmp
cld
or
add
jle
dec
push
clc
cli
cmpsl
mov
adc
or
xor
pop
mov
pop
aaa
fadd
mov
ftst
lea
test
cltd
aaa
or
outsb
pop
mov
sbb
les
push
lcall
xchg
and
add
push
stc
pop
sahf
cli
mov
cmpsl
xor
adc
or
mov
or
movsl
dec
cs
mov
sahf
mov
gs
pop
rclb
les
imul
xchg
mov
icebp
repz
mov
lea
cmp
add
pop
dec
shlb
lret
and
std
and
movsl
int3
adc
enter
jmp
mov
lea
mov
sbb
ljmp
in
or
outsb
fisttpll
loop
fcmovb
cmpsl
mov
inc
icebp
int
xchg
or
ud1
ds
lods
push
jo
cmp
pop
and
jbe
mov
psrlw
add
jge
ja
pushf
jb
shl
sbb
xor
jge
movb
and
jmp
sbb
inc
fisttpl
or
xchg
pop
ret
mov
lea
xor
adc
sub
dec
dec
sahf
mov
imul
addr16
add
fnstcw
dec
push
cmc
ljmp
inc
mov
pop
adc
mov
mov
xor
cmpsl
jle
mov
push
addr16
daa
push
pop
stos
fcoml
and
jecxz
js
aad
mov
cwtl
adc
hlt
cwtl
cmp
pop
cmpsb
mov
adc
icebp
push
movsb
ret
xchg
adc
mov
lods
sub
push
divl
scas
inc
add
add
add
mov
lcall
adc
hlt
mov
xchg
in
ret
test
jns
leave
stc
in
andl
testl
jecxz
or
cltd
sbb
jae
pop
jns
pop
jge
mov
xchg
mov
mov
pusha
orl
jecxz
push
pop
adc
das
stos
ljmp
inc
or
and
xchg
into
clc
jne
lds
and
hlt
cwtl
mov
in
and
sbb
cmp
pop
rcrb
mov
icebp
pop
fistpl
and
leave
mov
into
clc
dec
incl
adc
xlat
insb
sahf
rorl
mov
ds
sub
cmpsb
xorl
xchg
jle
adc
popa
lock
xor
jecxz
in
pop
mov
cmpl
jns
fstpl
or
xchg
movsb
xor
xor
xchg
dec
xor
fidivrs
imul
jae
call
inc
loopne
jnp
in
addb
jge
pusha
mov
dec
popa
pop
test
pop
push
popa
fisttpl
cltd
jb
and
fidivrl
gs
add
push
adc
inc
and
rcl
push
push
adc
std
inc
sub
cmp
cmc
lret
dec
rcrb
es
xchg
frstor
push
mov
xor
dec
sub
cmp
jmp
je
data16
loop
inc
lods
dec
aad
push
dec
mov
test
outsl
fs
cmp
lcall
sub
cmp
test
and
push
fistpll
rol
xchg
add
fsubp
inc
cmc
jne
adc
pand
sbb
es
stos
inc
sbb
out
hlt
ficoml
popf
xlat
jecxz
icebp
hlt
sbb
fnstenv
enter
int3
or
inc
xchg
mov
xor
jge
xchg
and
test
pushf
test
add
push
into
push
loope
pop
lods
rep
or
jno
hlt
cmc
int3
add
inc
add
les
shlb
sti
adc
add
ret
insb
fistps
push
xor
dec
stos
xchg
dec
push
jge
push
push
jno
push
cli
movsb
pop
jo
fmull
repnz
pop
dec
lcall
icebp
pop
add
sarl
xor
js
dec
std
inc
mov
xchg
mov
pop
inc
mov
fimull
sub
mov
into
xchg
push
movsl
dec
xor
push
movsb
and
dec
je
jo
dec
iret
or
outsl
frndint
imul
xor
loopne
mov
pushl
push
mov
xor
call
call
push
sbb
and
jge
icebp
ljmp
dec
jecxz
mov
lcall
sbb
add
mov
test
insl
sub
or
stc
jl
ljmp
cltd
call
xlat
push
mov
or
out
movsl
mov
or
outsb
iret
pusha
jmp
fwait
jae
xchg
mov
roll
lcall
cmpsb
in
scas
rol
inc
mov
adc
cmp
out
push
jno
gs
bound
dec
fisubrs
dec
cli
loop
fldl
mull
lock
adc
cld
or
aas
jg
add
in
jbe
adc
aaa
mov
jl
imull
and
push
push
stc
push
adc
sbb
mov
das
gs
ljmp
xlat
cmp
mov
data16
mov
or
aam
mov
mov
or
push
jae
mov
push
sbb
out
mov
mov
or
aam
in
push
sub
and
shll
iret
jecxz
mov
cmp
mov
sub
cli
sbb
add
pop
mov
div
aam
adc
loop
push
push
test
mov
cmp
insl
mov
sbb
pop
sti
fwait
xor
xchg
push
mov
call
mov
and
loop
roll
xor
test
enter
mov
sbb
push
mov
push
mov
jg
mov
inc
lock
cltd
popa
iret
xor
outsl
icebp
push
cmp
push
xchg
js
pop
push
cmpxchg
xchg
xchg
xchg
add
push
stos
js
pop
sbb
aaa
pop
std
scas
pop
outsl
int
mov
out
add
jmp
das
int3
fimuls
or
sbb
add
ja
loop
std
or
adc
stos
fnstcw
stc
icebp
mov
mov
daa
sbb
cli
jmp
das
ret
or
lret
jno
push
stos
rcrl
xchg
rolb
adc
hlt
pop
mov
and
adc
je
push
nop
out
or
dec
jp
push
movsb
fdiv
sbb
pop
cwtl
mov
test
pop
adc
xor
sbb
scas
leave
or
pop
out
or
js
fdivrl
dec
repz
adc
mov
xchg
add
sahf
rcr
adc
outsl
dec
clc
outsl
fadds
cltd
arpl
ret
and
mov
daa
sbb
ljmp
int
cmp
mov
pop
push
int
leave
mov
addr16
push
imulb
and
jne
lahf
xchg
adc
aam
xchg
dec
push
push
jne
jns
stos
push
call
pop
or
mov
enter
or
sti
pop
aaa
out
pop
mov
push
dec
out
jae
jmp
repnz
stc
ret
fnstcw
clc
inc
cmpxchg
push
xor
popa
lcall
xchg
pop
addr16
jle
in
fwait
ror
jnp
add
push
mov
dec
xchg
cmpsb
push
adc
ret
fistpll
mov
cmp
adc
jae
add
mov
out
mov
shll
cld
pop
sahf
aad
pop
les
mov
inc
xchg
das
xor
in
add
js
push
popf
adc
pop
pop
xlat
test
cld
sub
jl
jne
mov
sub
imul
jl
inc
push
ret
jnp
pop
jg
cmp
mov
into
fnstcw
pop
rcpps
mov
fcoml
test
xchg
movb
cmp
adc
divb
fildl
in
sti
add
loop
mov
std
adc
pop
adc
jle
and
pusha
jp
out
cmpsl
jb
ljmp
or
mov
in
adc
push
lods
loopne
les
push
adc
mov
push
repnz
sub
or
pop
in
aas
xchg
lcall
push
or
xor
mov
repz
xlat
std
mov
or
das
jmp
out
pop
iret
sahf
shrb
and
in
lcall
loopne
jl
adc
mov
loopne
push
pushf
inc
stos
imul
jl
leave
cmp
fwait
mov
js
stc
neg
lds
lds
in
fstpt
cwtl
out
mov
jno
stc
in
outsb
mov
aad
stos
nop
xchg
ss
arpl
insl
inc
mov
xchg
inc
mov
jecxz
cmp
aad
xor
clc
cmp
mov
pop
iret
rcrb
mov
adc
jmp
xor
sub
mov
aaa
xchg
xchg
jo
push
xchg
popa
aaa
mov
jp
mov
bound
rep
fnstsw
daa
push
ret
ss
je
sub
in
je
or
icebp
dec
xor
mov
sub
add
sub
add
add
test
mov
ret
neg
arpl
push
js
jmp
cmp
mov
adc
push
pusha
or
mov
mov
outsl
pop
or
xchg
iret
iret
pop
sbb
flds
shll
mov
scas
repz
outsb
arpl
sub
jnp
jmp
mov
pop
push
adcb
ss
pop
ljmp
ret
loopne
es
adc
sub
inc
lcall
loope
jl
sub
pop
adc
mov
lcall
nop
lcall
mov
cwtl
pop
jne
mov
mov
cld
movsl
decb
pop
adc
ret
cmp
aaa
pop
sti
inc
push
or
pop
lods
mov
push
mov
lds
or
pop
imul
fimuls
mov
aam
pushf
push
push
leave
sub
aaa
ret
push
cmp
dec
loope
mov
jl
scas
dec
xchg
popa
mov
jge
iret
lret
mov
rorl
in
dec
jno
push
mov
mov
cmp
rclb
pop
testl
ret
push
and
adc
mov
sub
fisubl
ret
xchg
stc
cmp
repz
push
mov
aaa
popf
movlps
pop
int3
xlat
push
mov
cs
pop
jle
test
pop
mov
jecxz
stos
mov
mov
adc
aad
jmp
mov
or
enter
xchg
fadd
icebp
jmp
adc
mov
hlt
or
pop
sub
loop
sub
mov
add
jge
andb
inc
mov
daa
pop
adc
sbb
inc
jg
sub
or
jns
mov
scas
mov
data16
mov
jecxz
and
sti
aaa
stc
aaa
dec
cmpsb
adc
jb
stos
shrb
add
mov
loopne
dec
int
cmp
xchg
jle
dec
cs
mov
lahf
push
jp
dec
mov
xchg
sub
es
outsb
cmpsl
std
lret
or
push
mov
stos
sbb
push
out
imul
xchg
cmpsl
addl
arpl
negb
outsb
les
pop
clc
lcall
pop
push
mov
rcrb
loopne
js
loopne
andb
jnp
mov
jmp
push
ja
outsl
sti
cli
subl
test
mov
add
lret
lods
mov
lahf
test
mov
inc
fwait
ret
push
pop
lock
mov
mov
fimull
jo
mov
cli
add
hlt
aaa
mov
test
sub
daa
mov
ret
jl
imul
iret
sub
loope
bound
out
jge
sbb
sahf
or
cli
rorl
fcoms
or
mov
xchg
mov
cmp
lock
add
lea
ret
sbb
loop
fmuls
push
mov
push
aad
fs
inc
js
andb
mov
push
enter
jo
mov
add
sbb
lea
xchg
stos
fcoml
xor
inc
xchg
or
shl
jae
pop
jl
xor
lret
mov
push
scas
mov
cmpsl
outsb
movsb
inc
shrb
loope
xor
lods
push
lret
ds
gs
dec
xor
mov
in
fistpl
cmpsl
icebp
fsubr
outsl
xchg
std
faddp
jbe
inc
mov
pop
jp
inc
cwtl
push
pop
shl
bound
pop
lock
loopne
scas
add
pop
lret
jmp
dec
fwait
inc
fadds
loop
inc
adc
insl
incb
adc
pushf
pop
pop
popa
in
jecxz
or
xor
pop
xor
lahf
xchg
push
lret
gs
lahf
jnp
inc
xchg
or
scas
scas
sbb
sub
test
cmp
mov
jg
dec
mov
xlat
sbb
dec
xlat
mov
out
adc
add
push
aas
pop
testb
mov
dec
out
cmpl
shll
jbe
sub
shl
in
pushf
lock
or
xor
mov
add
mov
iret
mov
in
lret
lcall
jmp
or
stos
in
dec
outsl
push
cmp
jp
mov
mov
add
lods
flds
pushf
mov
inc
add
ja
adc
stos
daa
cld
jbe
ret
jno
ss
xchg
ret
stos
int
test
ds
and
cmp
push
add
fiadds
addr16
jecxz
mov
jae
shrl
adc
mov
cmc
jo
cmp
jb
les
mov
sub
out
add
aas
mov
cmp
repz
jge
sub
push
pop
and
adc
push
push
cmp
mov
out
dec
outsl
cmp
adc
sahf
orl
movsb
lahf
and
push
xchg
jmp
in
mov
clc
stc
push
fmuls
xchg
ficomps
dec
iret
sub
mov
xchg
or
pushf
ror
or
fisubrs
jecxz
imul
lcall
jmp
push
and
inc
pop
js
xchg
sub
push
lods
lds
rcrb
loope
or
cmp
popa
pop
ja
icebp
fisubl
add
pop
iret
sbb
jle
sbb
xor
mov
inc
lock
fbstp
pop
fcomps
pushf
xchg
mov
mov
daa
xorl
ret
mov
ljmp
xor
cmpsl
push
testb
lds
jl
lods
xor
std
cmp
dec
and
cmp
movsb
ja
in
rclb
ss
add
xor
call
shll
add
and
jnp
xor
ds
pop
daa
pop
ja
and
xor
movsb
call
mov
inc
pop
insb
and
out
xor
jg
dec
stos
fldcw
data16
mov
fisttps
xchg
xchg
in
jg
mov
jmp
movsb
mov
fstps
fwait
sub
popf
inc
xor
or
sub
jg
inc
movsl
pop
inc
jg
pop
ficoml
mov
cmp
push
push
in
icebp
xchg
cmp
mov
inc
int3
pop
lret
push
jo
out
add
mov
jp
cmp
push
fisubl
mov
in
mov
jne
add
mov
addr16
lods
sbb
jmp
fwait
mov
pop
mov
test
pop
cmp
shl
aaa
lcall
popf
pop
fnstsw
fisubs
stos
or
jl
insb
into
mov
cltd
ds
jg
jecxz
pop
push
add
xor
mov
add
out
cli
mov
sub
std
adc
inc
hlt
dec
xchg
fdiv
out
enter
xchg
add
in
dec
mov
ds
mov
pusha
outsl
dec
mov
inc
inc
or
mov
rol
int3
pop
mov
aas
in
test
mov
inc
roll
push
and
leave
ss
jg
scas
mov
xchg
push
ret
mov
ja
dec
jecxz
mov
dec
stos
jmp
pusha
or
imul
xor
int
jle
push
repz
je
repz
push
mov
sbb
enter
inc
icebp
jb
pop
mov
pop
push
aaa
imul
adc
ja
jne
cmc
test
cld
add
arpl
out
sub
mov
lock
and
jl
daa
mov
sti
inc
out
loope
aaa
and
sub
mov
rolw
and
ret
jb
jp
test
gs
inc
jae
jnp
and
ret
andb
fstps
int3
fsub
es
lods
popf
ret
add
push
mov
sti
adc
adc
in
inc
jns
lods
das
xor
inc
sbb
jns
adc
sbb
inc
inc
mov
and
rcr
in
sbb
mov
mov
dec
xor
addb
jbe
mov
mov
adc
sarl
rcrb
les
pop
sbb
xchg
mov
cltd
jle
add
fcompl
outsl
jno
test
jp
xchg
xchg
pop
out
and
jg
jmp
dec
into
sub
jne
int3
xor
xor
push
mov
push
loopne
mov
dec
test
or
imul
xor
cli
adc
sahf
cmc
ss
lahf
sbb
shrb
add
hlt
out
xchg
jecxz
dec
push
iret
xchg
cld
jg
mov
lahf
or
inc
adc
lods
int3
shlb
jmp
arpl
lret
lock
fwait
or
sub
int3
mov
pop
int
ds
cmp
sub
in
jle
into
arpl
fcomi
das
add
movsb
jo
jecxz
sbb
int3
outsl
pusha
sub
ficoms
cmp
pop
hlt
ret
push
test
mov
push
mov
pushf
cld
cld
std
adc
aad
adc
lock
xor
int
xchg
sbb
shll
sti
jl
out
test
in
jns
and
dec
sub
mov
pop
add
lea
mov
les
inc
insl
scas
xchg
cmp
incl
pop
xchg
out
adcb
in
addr16
jp
mov
add
pop
je
cmp
in
fs
lock
xor
and
rcl
cld
pop
and
pop
jge
sub
pushf
mov
inc
sbb
imul
jne
cmp
mov
push
sub
mov
mov
aas
sahf
std
sub
lds
nop
push
cmp
jne
insb
mov
stc
sahf
fucomi
iret
cmp
jle
sub
sbb
ret
cld
test
add
mov
jge
xlat
int3
push
xchg
pop
jecxz
in
ret
icebp
add
cmp
out
inc
jge
lcall
sbb
sub
mov
fistpll
movsl
insb
lea
mov
sar
enter
sub
bound
xchg
sbb
ret
inc
cmp
pop
movsl
xor
dec
and
fstpt
clc
jmp
fmull
hlt
in
aas
sbbl
in
cmp
dec
lret
mov
inc
or
decb
inc
out
and
inc
pop
sub
xor
rcrl
aam
pop
jb
test
insb
pop
shlb
pop
popa
xchg
pop
in
adc
lahf
test
mov
das
stc
lahf
pop
mov
aas
imul
sub
lret
sarl
sbb
push
ficoml
jb
inc
jns
arpl
mov
mov
sub
push
mov
sbb
push
bound
ret
and
xchg
push
shll
cmpsb
imul
and
jmp
lahf
loope
add
mov
xor
cmp
inc
pop
pop
push
xchg
lret
add
movsl
int
shll
lds
push
or
xlat
and
inc
jne
stc
lcall
mov
movsb
loope
frstor
fdivs
dec
jl
push
sub
sahf
pushf
jnp
paddd
xor
lcall
push
jecxz
mull
scas
sub
mov
cmc
and
pop
push
js
jb
mov
and
lock
mov
rdpmc
es
hlt
fcmove
call
enter
inc
add
xor
mov
popa
daa
push
lds
jnp
and
mov
es
out
and
inc
mov
dec
mov
add
test
stc
push
xorl
int3
arpl
xadd
leave
inc
push
rolb
xchg
adc
pop
in
mov
hlt
dec
repz
loop
and
or
sbb
cmp
dec
cmpsb
outsl
mov
sbb
sub
dec
pop
ss
add
adcl
mov
icebp
fsts
cmp
jae
nop
inc
mov
and
mov
lods
in
adc
cmp
cmp
mov
push
mov
sub
mov
int
sub
adc
and
dec
add
aad
sub
jo
jbe
xchg
sbb
push
int3
addr16
jecxz
ja
lahf
pop
scas
fwait
lahf
insb
cs
fistpll
out
lock
ljmp
je
adcl
lret
mov
inc
mov
bnd
cmc
dec
scas
jge
addr16
in
aas
cltd
push
dec
fsubs
jp
daa
les
add
js
pop
xorb
add
jnp
imul
push
jns
push
dec
dec
int
dec
outsb
mov
push
dec
loope
roll
or
movsb
xor
leave
inc
psubd
adc
xlat
sbb
jle
xor
dec
aaa
jg
or
imul
stos
into
mov
cmp
imul
push
hlt
inc
and
movsb
movsl
sub
push
add
adcl
loopne
outsb
push
in
cmp
subl
decl
mov
lods
test
stos
pop
stos
xchg
cmp
js
pop
iret
into
leave
shr
sbb
imul
in
and
cltd
daa
sub
pushl
popf
lock
add
repz
jge
or
mov
dec
and
out
cmp
aaa
mov
mov
pop
lods
test
xlat
add
montmul
cmpsb
inc
cltd
push
pop
sbbl
mov
jno
xchg
or
fmull
mov
sub
ficompl
jb
rolb
dec
cltd
pushl
int3
and
in
fistpll
into
jl
and
mov
out
mov
out
inc
movl
mov
adc
addr16
shll
fs
int
add
ja
or
mov
and
std
jb
inc
jbe
es
push
cmp
popf
mov
pop
ss
insb
xor
sbb
and
mov
inc
mov
into
in
gs
test
xor
ss
xchg
cmp
outsb
mov
pop
movsl
push
push
xchg
std
mov
jp
mov
mov
scas
fldl
mov
lock
dec
jmp
and
add
push
mov
aas
aaa
into
stos
bnd
leave
cs
pop
sub
fs
lret
sub
sarb
adc
add
imul
cwtl
inc
daa
pop
pop
inc
and
stos
ret
lea
jmp
fucomi
fdivr
test
and
jne
outsl
push
imul
inc
jno
cmp
dec
sahf
push
loope
jne
push
xor
dec
shl
std
or
pop
bnd
fs
add
jo
mov
xor
add
or
mov
inc
xchg
bound
mov
ret
jns
pop
xchg
pop
inc
pop
cwtl
dec
movsb
arpl
std
cmp
inc
int
sbb
pop
xchg
leave
pop
outsb
cltd
dec
lcall
lea
jbe
mov
fs
icebp
das
std
stos
push
pop
inc
cmp
std
stc
mov
or
stc
or
out
pop
xchg
cmpsb
popa
cmp
cld
stos
sub
addl
or
add
and
pushf
push
adc
js
jg
lods
mov
pop
insb
or
xor
push
cwtl
lods
ja
fldcw
and
out
test
enter
cmpb
loop
cld
hlt
xchg
lret
xor
xchg
int3
cmp
xchg
stos
mov
das
cwtl
or
adc
pop
pop
sbb
iret
mov
xor
insl
sub
mov
iret
in
jb
nop
lds
movsb
orl
mov
xor
in
and
rorl
rcrl
int3
pop
fstpl
mull
mov
and
mov
jecxz
cli
fildll
out
xchg
imul
dec
daa
cld
inc
sbb
xchg
mov
sub
adc
add
push
sub
mov
or
es
out
mov
dec
adc
ret
pop
mov
xchg
jae
push
in
adcl
inc
shll
pop
es
or
nop
mov
lds
into
out
aam
jbe
sub
out
inc
lea
fisttps
clc
lret
iret
test
test
pop
fnstcw
fwait
insb
mov
cmp
ret
mov
jp
call
pop
adc
xchg
imul
pop
faddl
xchg
ss
fsubs
into
push
mov
mov
cmp
imul
std
jne
sbb
or
insb
pop
xchg
cmp
stc
sbb
fwait
fs
rorl
dec
cwtl
arpl
xlat
pushf
adc
mov
imul
mov
xchg
test
sbb
xchg
mov
fcmovb
out
mov
testl
mov
shlb
test
daa
sub
dec
push
sbb
call
cmp
jo
pop
sbb
jnp
or
orl
sub
xchg
test
fldl2t
xor
dec
cltd
mov
arpl
add
int
jg
ljmp
shlb
hlt
inc
mov
xor
adc
testb
pop
mov
int
inc
adc
xchg
mov
mov
pop
faddl
add
xor
mov
push
mov
adc
int3
push
subl
aam
das
add
add
xchg
mov
repz
in
inc
jbe
ds
push
scas
cmp
test
imul
inc
pop
push
ret
repnz
or
outsb
out
push
nop
jp
or
aam
clc
sbb
in
int3
ret
pop
cmp
cmpsl
jge
jns
insb
or
mov
pop
sar
dec
pop
movsb
aam
lds
cmc
fidivs
scas
fdivp
adcl
add
nop
push
clc
into
shr
mov
ret
sbbl
std
push
cmpsb
test
dec
popa
mov
arpl
pop
mov
fucom
inc
jne
hlt
clc
jbe
scas
ret
sub
mov
pop
test
pop
xchg
lds
pusha
push
xor
pop
mov
arpl
xor
cmp
mov
aaa
dec
hlt
in
loop
and
mov
cmpsb
xchg
xchg
ret
cmp
pop
test
push
mov
cs
pop
mov
rcr
xchg
insb
adc
push
push
sub
sub
inc
pop
ja
bound
pop
dec
outsl
aam
adc
xchg
outsb
or
dec
jge
xlat
dec
shr
xor
iret
lods
and
mov
outsl
jae
aam
adc
dec
jge
daa
push
cwtl
xchg
test
push
clc
pop
mov
inc
call
sbb
lds
push
cwtl
es
adc
mov
sbb
andl
mov
or
push
adc
mov
jge
out
popa
push
insl
sub
and
cli
sbb
xchg
mov
push
in
adc
push
add
dec
inc
sbb
mov
mov
fiaddl
add
stos
std
loop
test
mov
mov
sti
or
xchg
xchg
push
fwait
or
mov
pop
dec
movsb
push
or
jl
sbb
inc
movsl
pop
inc
inc
cmp
pop
pushf
adc
imul
ret
xchg
inc
pop
lock
jecxz
out
arpl
cmp
insb
pop
pushf
xor
mov
fsts
stc
insb
je
sti
mov
push
mov
inc
jno
ss
or
out
xchg
sbb
inc
push
loop
fildl
test
and
mov
push
push
test
rolb
xchg
mov
pop
lret
jecxz
hlt
lret
xor
outsb
push
mov
je
mov
xor
repz
pop
cmp
int3
clc
inc
ja
arpl
in
rorl
icebp
popf
pop
xor
dec
jnp
inc
xor
rcl
cltd
and
dec
cld
xor
xor
repnz
cmp
or
scas
mov
mov
fwait
imul
mov
lahf
pop
pop
fnstenv
jb
push
int3
shl
pop
pop
jae
fldlg2
or
test
xorb
push
jl
enter
outsb
lods
jbe
fcomi
mov
movsb
cmpsl
aad
xchg
xlat
std
inc
mov
jg
in
mov
sbbl
or
xor
into
out
push
inc
or
push
ss
lds
cmpsb
jae
mov
out
mov
cmp
or
pop
cltd
imul
xchg
mov
dec
movsb
sub
jmp
stc
jns,pn
lea
out
jecxz
cmp
jno
and
fwait
pop
lods
xlat
imul
xor
cmp
jo
pop
push
sar
pop
inc
jb
cmp
mov
lcall
push
fcomps
out
jnp
enter
or
cmp
sbb
std
add
push
ja
mov
add
cmpsb
mov
ret
popl
and
fdivrl
js
js
ds
add
shl
stos
das
inc
mov
in
inc
imul
imulb
imul
cmpsb
lret
adc
arpl
repnz
scas
fsubs
inc
or
mov
out
mov
ret
push
push
inc
iret
jno
loope
inc
sub
scas
les
mov
sub
sbbb
or
rorl
pop
sti
out
xchg
push
jl
test
mov
fistl
roll
shl
cmpsl
aad
rcll
imul
inc
or
cld
sti
incb
pop
pop
xlat
jmp
adc
movsl
rcrl
into
pop
push
ret
xlat
test
out
push
cmc
mov
xchg
pusha
push
pop
mov
repnz
mov
cmpsl
push
mov
sbb
pop
stos
adc
xchg
or
cli
push
and
mov
leave
icebp
cmp
sub
dec
mov
cmp
jg
dec
int
xor
sbb
in
pop
add
jno,pt
inc
insb
sahf
rolb
dec
loope
lret
jle
in
sbb
push
stos
jnp
dec
popf
pop
jo
xchg
sub
jnp
lods
cmp
inc
push
out
stos
push
dec
mov
or
jmp
daa
lods
jge
bsf
or
or
leave
sahf
mov
js
lods
cld
mov
shlb
mov
rclb
sbbl
jge
jns
xchg
jge
mov
xchg
lret
cmpsb
pop
sbb
in
jae
jnp
adcl
push
scas
test
pushf
cmp
lret
mov
mov
leave
push
mov
ret
test
jns
shlb
xchg
subl
jmp
dec
xchg
xor
mov
inc
push
nop
test
mov
mov
jae
mov
dec
pop
sti
imul
xchg
mov
and
and
out
pushf
pop
dec
ljmp
add
rolb
inc
cmp
fsubrl
sbb
or
lahf
fldt
and
fldt
xchg
stos
pusha
cld
nop
pop
fdivp
mov
mov
les
imul
stos
dec
jno
call
test
pop
mov
cltd
xor
enter
aam
or
and
movsb
sbb
mov
insl
jmp
in
fwait
cmp
in
scas
std
mov
sbb
sbb
and
fistpl
scas
in
int3
cmp
test
mov
das
fimull
jne
inc
leave
add
ficompl
imul
push
enter
sub
add
sub
push
loop
lcall
in
ret
pusha
outsb
outsb
int3
mov
testb
jge
inc
mov
sbb
adc
or
adc
sbb
mov
dec
ja
and
xor
inc
test
outsb
ja
mov
add
jmp
ss
fbld
test
divl
sar
add
jp
adc
adc
std
mov
arpl
je
cmp
xchg
shll
rclb
cmc
imul
lods
iret
shrl
aad
pop
or
lods
bound
fst
sarl
cmp
in
sub
data16
int
in
add
mov
andl
pop
jne
fstps
stos
scas
push
out
mov
jge
loope
xor
pop
or
cltd
xchg
sbb
and
mov
mov
test
lea
pop
orl
mov
lock
into
jb
xor
fs
pop
movsl
or
das
loopne
fildl
push
push
sti
daa
pop
mov
jo
xor
mov
xchg
fmuls
mov
mov
push
orl
mov
loopne
out
mov
adc
adc
decb
add
out
iret
or
sub
fwait
and
mov
push
or
jg
pop
pop
mov
arpl
into
shl
mov
scas
pop
loope
outsb
mov
push
pop
ja
and
dec
pop
pop
mov
dec
push
jle
insl
loop
ss
mov
pushf
cmpsb
xor
test
or
push
insl
dec
xchg
and
repz
rol
adc
das
leave
test
mov
mov
and
js
xor
sbb
adc
jmp
and
cmc
sub
add
pushf
js
mov
jmp
std
loopne
imul
mov
mov
icebp
push
adc
adc
add
jmp
sub
and
xchg
push
pop
incl
loop
cmp
cmp
cmp
add
stos
shrl
push
cmp
js
mov
sub
jg
movsl
daa
mov
pop
arpl
jb
inc
fisttpll
rclb
inc
outsl
pusha
lret
sub
shr
or
ret
out
mov
push
test
insb
pop
xchg
imul
out
pop
sbb
mov
aas
add
jle
stos
insb
das
test
sbbl
ficomps
lea
fwait
cld
xor
xchg
lods
and
push
je
in
pusha
adc
das
loopne
cld
xor
dec
popf
push
mov
push
mov
jae
dec
sahf
pop
lret
mov
cmp
cmp
dec
sbb
cmpl
xor
rorl
sbb
pop
inc
lods
adc
sbb
cs
les
cmpsb
xor
push
cmpsb
or
loop
sarb
pushf
mov
fisttpl
adc
inc
cmpsl
movsb
ret
fisttpl
insl
add
in
jge
xor
adc
add
cs
cmp
add
dec
mov
mov
adc
push
lods
push
popf
or
ja
push
int
imul
daa
pusha
adc
hlt
out
or
jle
into
xchg
sbb
loopne
xchg
jne
dec
rcl
mov
addl
jp
out
daa
ds
dec
out
mov
pop
lcall
loopne
sub
ja
xor
popa
imul
mov
test
pushfw
mov
loope
movsl
insl
pop
pop
add
rclb
ljmp
push
mov
jb
sub
xlat
push
push
pop
imul
cwtl
cs
lds
or
xchg
pop
cmovge
adc
pop
sub
pop
outsl
ds
mov
scas
push
sbbl
jae
add
dec
lock
fsts
xchg
mov
loope
neg
lret
fsubrs
xor
or
cmp
pop
dec
xchg
mov
add
dec
test
div
sbb
das
ljmp
ja
mov
dec
dec
mov
jns
sub
sbb
adc
sbb
mov
dec
gs
dec
cltd
push
ret
and
pop
ret
fnstsw
mov
sti
sbb
jne
outsb
js
lods
call
test
sbb
xchg
je
ret
leave
pop
push
lcall
out
lock
and
mov
mov
xchg
jecxz
mov
or
push
and
cmc
scas
pop
jp
cld
mov
nop
mov
dec
scas
add
subl
jae
ror
mov
add
xchg
cmp
cwtl
mov
cltd
and
mov
std
imul
icebp
cmpsl
push
pop
out
push
sbb
das
xor
inc
push
cmp
enter
dec
xlat
adc
adc
inc
cwtl
mov
lahf
test
iret
sahf
aas
ljmp
and
jbe
xchg
andl
ljmp
mov
sbb
je
js
push
lods
jle
pop
fidivrs
scas
pusha
dec
dec
int3
fadd
mov
movsb
stos
jnp
fcmove
fldcw
mov
inc
mov
xchg
sub
xor
or
add
dec
inc
lea
pop
dec
scas
adc
sbb
mov
mov
aas
imul
mov
mov
rcrl
cmpsl
or
inc
pop
incl
xchg
insl
xchg
add
lea
stos
outsl
cwtl
sub
pop
js
mov
pusha
addr16
dec
addr16
imul
lods
jp
push
xchg
lock
rcrb
std
jo
cwtl
pop
xor
adc
scas
imul
dec
add
sbb
inc
fbld
xchg
dec
jns
xlat
lahf
dec
mov
add
jns
outsl
xchg
xchg
ficompl
das
cmpsb
mov
jbe
pusha
imul
jle
pushf
dec
out
rcrl
xor
insl
xchg
pop
and
enter
sbb
mov
popf
gs
sub
push
sbb
adc
stc
mov
mov
daa
das
inc
js
dec
out
jle
sub
mov
loope
ja
push
jmp
mov
pop
test
ret
cltd
push
cmp
jns
mov
int
mov
mov
or
mov
push
mov
out
into
pop
push
aas
loope
adc
ret
in
and
or
pop
dec
in
mov
jae
cld
mov
xchg
das
xor
call
outsl
div
add
pop
arpl
mov
int
and
cltd
xchg
and
dec
ss
ss
push
outsb
outsb
sbb
repnz
in
stos
movsb
xlat
fcompl
adc
imul
out
jmp
das
pusha
jecxz
fnsave
push
das
fistps
jno
negb
arpl
das
jns
test
and
and
mov
sub
int3
popa
sub
int
mov
lahf
lret
out
lret
fimull
movsb
cmpsb
mov
fsub
lcall
mov
mov
inc
sti
insb
or
sbb
mov
dec
xorl
or
cmp
fdivrs
and
xchg
xchg
mov
scas
mov
scas
mov
inc
jge
add
lea
pop
jne
pop
inc
cmp
push
inc
int3
jle
add
in
insl
mov
into
rclb
movsb
push
int3
push
call
mov
cld
dec
xlat
divl
aad
or
mov
xor
adc
mov
and
jp
test
pop
pop
roll
inc
into
cs
xor
aaa
push
scas
cmpsl
sbb
incb
ss
xchg
es
fdivp
inc
and
push
xchg
scas
push
dec
mov
and
mulb
call
sub
and
xchg
loopne
adc
rcrb
in
clc
addr16
adc
in
cltd
repnz
pop
cld
insb
sub
cltd
or
subb
repnz
and
xor
push
addr16
add
mov
jae
inc
mov
or
and
ficompl
jb
xor
push
leave
decl
mov
add
lock
in
mov
icebp
hlt
sbb
dec
sarl
xchg
jecxz
mov
mov
les
outsl
pop
dec
pop
leave
repnz
or
mov
daa
push
cwtl
add
pop
arpl
cmp
rclb
add
jge
ja
sbb
sbb
in
xchg
test
stc
insb
or
outsl
les
outsl
or
out
push
xor
in
sub
adc
out
mov
shlb
inc
or
icebp
popf
jbe
and
fcmovnbe
inc
stos
addr16
cmp
es
test
lcall
sbb
xchg
aam
cltd
mov
jecxz
cwtl
pop
aam
leave
iret
xchg
mov
pop
or
test
cltd
inc
out
push
or
xchg
ja
xor
jle
adc
stos
inc
movb
dec
daa
enter
adc
push
je
add
push
in
scas
fldl
hlt
mov
in
add
in
popa
push
shl
shlb
adc
push
sbb
inc
popf
dec
roll
stc
js
dec
sub
cmpl
or
int3
in
outsb
push
icebp
shll
push
test
fdivrs
paddw
lods
adc
gs
imul
dec
mov
pop
mov
mov
lea
and
je
or
repnz
dec
je
xor
cltd
cli
mov
jmp
mov
mov
out
jnp
fs
sub
arpl
gs
inc
mov
jl
mov
jo
movsb
inc
push
push
insl
cmp
mov
shr
scas
or
pop
mov
mov
shlb
ljmp
jnp
imul
sbb
mov
lds
out
daa
pop
mov
xor
daa
leave
mov
inc
cmc
pop
pop
jbe
out
push
pop
sub
popf
push
xor
dec
push
pop
push
cmp
out
pop
fsubl
cmp
shrl
mov
pop
pop
sbb
sbb
xor
push
inc
fnstsw
into
ficoms
or
mov
push
mov
pop
icebp
lret
mov
xchg
popa
cli
pop
xlat
inc
inc
push
or
mov
cmpb
jnp
dec
inc
jo
xor
lods
push
mov
into
jp
pushf
mov
and
cmp
pop
jl
or
or
pushf
dec
mov
stos
iret
mov
repnz
pop
insl
lds
sbb
repz
sub
addr16
and
pop
push
xor
push
and
int3
in
pushf
sbb
xchg
ja
jne
lahf
leave
sub
stos
or
xchg
in
dec
xor
sbb
add
ret
jp
xor
cmpsl
js,pt
pop
inc
sbb
in
stos
data16
sbb
push
or
jbe,pt
xlat
push
push
test
adc
aam
ss
aad
push
mov
stc
xor
insl
int3
fidivl
test
xchg
mov
or
push
into
mov
xor
scas
pop
cwtl
xor
dec
push
aad
jp
inc
std
mov
adc
ja
sbb
fdivrp
jecxz
pop
mov
daa
mov
add
lcall
pop
dec
fnsave
dec
xor
xchg
pop
aad
sub
xor
pop
outsb
das
inc
test
sub
cmpsl
rolb
repnz
cmp
xorl
inc
sub
mov
jno
cmp
int
mov
fidivrl
aad
push
inc
and
cwtl
pop
jp
mov
mov
sbb
mov
inc
roll
jno
lods
mov
sub
outsb
pushf
push
push
push
fcompl
aam
and
push
or
adc
into
out
cltd
xchg
aad
in
icebp
lds
cmpl
lds
pop
mov
mov
jo
mov
lret
xchg
mov
jbe
inc
rcr
and
or
xchg
push
dec
jge
xor
rcl
cmp
dec
enter
mov
imul
xchg
in
out
add
cmpb
mov
mov
pop
jmp
fs
or
cmc
rorb
add
ds
mov
insb
insl
sub
std
and
cli
rolb
fisubl
addl
pop
cmpsl
jecxz,pn
jge
movsb
inc
xor
lcall
push
jne
loope
and
mov
fildl
je
loopne
pop
and
cld
and
cmp
dec
mov
sub
inc
int
stos
jle
xor
adc
scas
int3
lods
aas
call
insl
jl
mov
lock
testb
push
mov
cmp
mov
inc
lahf
add
cltd
push
scas
add
aam
mov
sbb
or
daa
out
mov
xchg
lea
push
mov
mov
mov
arpl
sbb
stos
or
mov
icebp
jno,pn
test
xlat
jnp
mov
xlat
rol
or
adc
fucomp
rcl
jecxz
mov
mov
adc
stos
ljmp
loopne
adc
mov
stos
jl
pop
sti
dec
or
in
sub
xchg
cld
or
mov
xchg
xor
leave
sub
dec
je
sbb
jns
xchg
jb
push
dec
pop
adc
push
xchg
es
sub
fmul
jl
xor
fstpl
jnp
mov
cmpsb
shl
add
daa
jp
shlb
cmpsl
gs
ds
cmp
btr
pop
fimuls
out
pop
pop
stos
push
add
dec
add
mov
test
xor
pop
lret
dec
mov
loop
and
or
cmp
aaa
sahf
lds
data16
jo
inc
mov
sahf
shll
pop
jbe
shll
inc
into
out
aas
mov
fiaddl
lds
shlb
xorb
subps
adc
fmull
cmp
jecxz
aaa
movsl
push
dec
mov
aaa
lcall
jbe
sub
inc
lea
and
xor
pusha
les
je
and
clc
enter
add
fiaddl
outsl
cmp
cwtl
cs
pop
push
add
les
xchg
out
fnstsw
adc
addl
dec
cltd
gs
mov
insl
sbb
movsl
sbb
jecxz
rcl
dec
fistpll
je
repz
push
rorb
scas
jmp
test
lods
test
call
ret
scas
ret
jge
scas
notb
pop
movsl
pushf
mov
xchg
int3
jbe
ret
pop
mov
aad
adcb
out
ja
fidivrs
insb
aas
bound
xor
lods
jns
je
or
xor
pop
push
adcl
xchg
popa
sub
sarb
xchg
add
or
inc
xchg
sub
mov
das
fcomps
mov
inc
dec
sbb
fsubrs
les
sbb
push
dec
mov
repz
pop
add
mov
movsb
mov
pop
aad
dec
pop
sbb
lock
add
fscale
cs
inc
das
jne
push
call
loope
ja
cmp
jge
xor
rorb
mov
in
test
mov
pushf
jmp
inc
and
pop
dec
add
or
cmc
dec
jnp
ds
dec
cmp
sarl
lods
cmp
data16
sbb
fwait
and
nop
jns
push
pop
pop
call
test
inc
out
xchg
inc
cmp
inc
mov
mov
push
sbb
or
jno
icebp
repz
sub
xor
test
jmp
sbb
lret
sub
push
xorl
fstpl
int3
sbb
mov
jb
into
in
xchg
inc
aas
mov
jnp
adc
cwtl
pop
out
lret
fisubrl
push
sbb
cmpsl
xchg
stos
mov
idivl
inc
loop
pop
test
and
sub
inc
mov
jmp
clc
mov
loop
aam
outsb
mov
inc
mov
aam
js
mov
or
xchg
or
mov
jmp
aam
hlt
enter
mov
cmp
ret
push
mov
inc
lods
addb
cli
movsb
loopne
pop
test
mov
pop
repnz
adc
fsubr
mov
push
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
.byte
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
loopne
das
es
sub
push
sbb
popf
js
inc
xor
pushl
pusha
divb
mov
popa
out
pop
ss
lret
mov
popa
out
mov
popa
out
jmp
jmp
jmp
call
stos
into
add
pop
jl
add
jp
sub
mov
sub
xlat
sbb
fwait
mov
lds
mov
xor
cmp
dec
lods
mov
add
js
sub
je
push
jmp
mov
xchg
mov
inc
lret
sub
jp
mov
or
jge
cmp
cmp
push
clc
mov
jl
cld
psubsb
in
lret
mov
test
std
xor
mov
add
out
out
xchg
movsl
jecxz
inc
ja
into
pop
push
mov
incb
loopne
aad
cli
fucomp
jecxz
fildl
stos
jns
sub
lret
push
dec
test
stos
pop
iret
insb
cli
leave
adc
xchg
fcoms
out
ja
pop
mov
loope
in
jge
dec
out
imul
or
xchg
movsb
bound
lock
push
xor
mov
loopne
mov
loop
mov
xor
mov
pop
push
add
add
adc
hlt
mov
pop
faddl
stos
out
sbb
add
and
adc
push
sbb
sub
sbb
mov
shll
adc
jne
or
cmp
jbe
mov
mov
cld
mov
stos
mov
sub
out
rorl
sarl
aad
subb
fcmovb
clc
mov
sub
mov
dec
xchg
push
push
je
cmpsb
push
enter
lea
jg
imul
fdivr
cmpl
mov
lret
xor
hlt
and
sbb
out
push
sub
mov
xor
fsubr
das
mov
ljmp
or
icebp
push
ret
out
push
js
rcrl
adc
jmp
xchg
or
mov
clc
adc
in
addb
add
adc
adc
xchg
xor
mov
push
js
mov
lret
ret
fwait
or
or
fincstp
push
jecxz
popf
dec
jmp
popa
or
mov
sahf
bound
mov
out
call
hlt
adc
fs
pop
clc
repz
sbb
inc
bound
or
cmp
mov
aas
stos
push
sub
loope
cmpl
aad
pop
adc
orl
popa
movsb
push
push
lret
adc
add
out
pop
jp
jp
sub
in
mov
mov
mov
sahf
stos
and
flds
outsl
std
inc
mov
pusha
xchg
sbb
sbb
pop
jg
je
jge
jbe
outsl
lret
inc
repnz
sbb
fs
dec
lds
insl
dec
sub
or
pusha
mov
add
push
mov
xor
scas
lcall
ror
sbb
jne
inc
cs
paddq
cmp
negl
pop
mov
test
mov
cld
sti
sub
sbb
pop
xor
les
inc
in
dec
movl
mov
call
sahf
xchg
xchg
fsubrs
cmp
jg
or
cld
sub
cld
sbb
push
lahf
movsb
mov
mov
insl
andb
in
or
jmp
jg
add
mov
xchg
insb
je
jl
lret
mov
mov
push
int3
outsl
fwait
and
into
popa
sub
loopne
dec
dec
dec
daa
out
push
dec
fldl
and
test
lock
das
jo
xchg
inc
aad
in
adcb
mov
push
mov
adc
fldt
jmp
cmpsb
jno
adc
add
xor
push
loopne
push
je
orl
fcoml
insl
mov
int
mov
adc
popa
cmp
popf
add
fisttpll
out
cmp
push
mov
cld
inc
and
sub
xchg
mov
mov
jl
pop
test
loop
stos
push
aad
jnp
daa
push
sub
pop
sbb
lahf
ljmp
js
xchg
dec
xchg
dec
jge
inc
xor
or
pop
or
pop
test
or
cmpsb
loopne
mov
ffree
fsts
xor
pop
movsl
jle
pop
not
shll
into
sub
gs
aam
in
mov
add
cwtl
mov
jbe
out
dec
cli
xchg
adc
push
xchg
aad
pop
lret
ret
popa
ret
pop
sbb
addr16
push
imull
shlb
iret
shr
push
ss
mov
cmpb
outsl
daa
lret
dec
pop
addr16
and
repnz
fnsave
mov
cmc
sbbl
xchg
xchg
adc
ficomps
jmp
cmp
leave
push
add
jp
push
shr
sbb
imul
push
add
int
mov
fcoms
or
shl
xchg
xchg
shlb
xchg
cmpsl
mov
aad
mov
mov
add
pop
xchg
je
mov
cli
push
mov
add
or
mov
sub
stc
jp
or
push
shlb
jnp
xchg
dec
gs
arpl
jle
mov
sbb
test
fadds
jp
xchg
fidivs
sbb
outsb
imul
cmp
xchg
and
lock
sbb
jge
and
xorb
leave
inc
js
cmpsl
cmpsb
rcl
cwtl
inc
int
fsubrl
pusha
or
es
daa
jno
pop
fcompl
sub
add
das
mov
into
mov
scas
and
xchg
js
lods
pop
ret
inc
out
int
dec
flds
jp
push
or
out
mov
push
int
cwtl
adc
adc
xchg
ret
int3
jnp
inc
stos
lods
loope
push
jp
jge
cmp
inc
out
insl
sub
bound
out
inc
lahf
sbb
and
dec
loop
jge
dec
mov
outsl
incb
xor
mov
dec
mov
push
cmp
push
adc
repz
xor
jmp
iret
dec
loope
int3
nop
orl
pop
addb
int3
adc
push
ja
lea
out
fcmovu
repnz
fcoml
xor
dec
or
ficomps
mov
mov
mov
hlt
clc
push
add
icebp
add
repnz
dec
jge
not
mov
sbb
pop
inc
sub
test
in
xchg
cmp
pop
packssdw
xor
push
add
jg
mov
test
sti
imul
add
retw
out
mov
xlat
push
jbe
std
xchg
push
out
inc
inc
imul
mov
cmpsl
fstpl
lret
mov
cmpsb
add
xchg
inc
mov
cli
xchg
cmc
ljmp
repnz
aam
push
sub
pusha
mov
dec
push
dec
das
out
pop
push
add
or
xor
dec
cmp
sbb
cmp
jae
xor
sti
test
cs
lock
sbb
add
mov
ret
xor
imul
outsb
shll
inc
and
mov
sbb
push
mov
imul
nop
mov
xchg
jle
adc
or
jge
dec
cmp
lock
movl
gs
data16
dec
and
repz
dec
fisubs
fists
cmp
jg
jmp
xchg
in
jo
and
cmpsb
or
mov
aad
pop
mov
push
clc
das
mov
fstpt
mov
fisttps
mov
push
lea
sub
lock
cmp
std
push
push
stos
mov
popa
push
xchg
out
adc
and
fcmove
cld
aas
lahf
test
hlt
xchg
cmp
or
sbb
arpl
into
pop
loope
jecxz
aad
lock
jae
cli
jb
mov
dec
stos
mov
jo
or
add
xor
push
lock
cmpsb
add
mov
jno
fisubs
fistpll
popf
sti
dec
cmp
xchg
cwtl
mov
daa
fcoml
stc
mov
iret
scas
mov
in
push
or
and
xchg
xor
mov
xor
fwait
fwait
sub
into
add
pop
inc
inc
les
cmp
add
int
loop
das
jae
and
sub
test
insl
cltd
jg
out
mov
push
daa
movsb
fistl
imul
aam
adc
sub
out
subb
xchg
out
test
clc
pop
mov
sbb
and
pop
xor
xchg
inc
mov
mov
inc
inc
inc
addr16
cmpsl
insl
xor
rolb
jp
push
int3
inc
and
fwait
or
mov
movsl
cmp
pop
mov
lods
cmp
hlt
fnstsw
mov
sbb
or
cwtl
mov
int
hlt
or
dec
cmpsl
daa
mov
lahf
mov
les
js
fisubrl
pop
sub
sbb
cwtl
leave
pop
out
mov
or
cmp
pop
jae
lcall
xchg
push
adc
or
and
dec
push
fmul
mov
orps
mov
movsb
lahf
ret
mov
xor
xchg
inc
into
idivb
into
lds
mov
xor
mov
pusha
inc
mov
rcll
loop
call
iret
jns
adc
or
aas
aam
push
cmp
les
aaa
cmp
mov
mov
lods
sahf
divb
outsl
lcall
jo
mov
lods
repnz
in
mov
pop
pop
xchg
xchg
adc
clc
enter
jno
add
add
mov
test
and
outsl
jecxz
mov
mov
xchg
dec
fcoml
inc
rorl
mov
or
movsb
push
test
in
jl
ljmp
push
fiaddl
jno
leave
fwait
mov
sti
jae
lcall
xor
jmp
pop
cltd
mov
xchg
leave
lret
sbb
sub
dec
jns
out
das
cmp
mov
mov
ret
std
in
fildl
dec
lods
outsl
andb
sbb
loop
scas
out
add
and
shrb
and
jl
into
jecxz
mov
and
shlb
cs
fldcw
int
cmpsb
in
lods
pop
jbe
mov
push
push
mov
icebp
bnd
dec
jmp
jmp
bnd
bnd
icebp
lcall
inc
jge
pop
mov
lods
push
pop
popa
repnz
fisubrl
adc
loope
es
mov
cltd
pop
adc
and
pop
jne
pop
adc
loopne
stc
lcall
and
add
stos
lods
outsb
ret
int3
lret
call
sbb
sahf
jg
xchg
push
jecxz
clc
test
push
test
mov
adc
cld
jle
jecxz
out
clc
rolb
lahf
addb
cmpsb
mov
movsb
and
bound
fwait
les
mov
inc
add
popa
popf
fildl
sarl
inc
mov
fnstsw
cmp
add
lret
adc
jl
faddp
cmpsb
pushf
movb
sbb
lock
xor
pop
int
lret
and
cmp
das
jl
xchg
rolb
test
sbb
test
pop
xorb
sub
insl
movsb
stos
add
sbb
jns
sbb
mov
sub
sti
cltd
loope
jecxz
call
dec
dec
inc
stc
xor
out
mov
scas
pop
and
or
stc
mov
aas
push
repz
es
lea
inc
outsl
pop
data16
add
loope
sub
aas
xlat
dec
repz
mov
repz
push
scas
pop
mov
dec
jmp
and
jl
iret
clc
call
loop
cmp
sarl
xchg
push
sub
mov
lret
sbb
jne
fidivs
daa
aaa
imul
xor
dec
data16
test
xchg
pop
cmp
clc
outsl
pop
cs
jns
sbb
or
xlat
mov
mov
sub
push
lds
mov
movq
aad
mov
mov
jge
je
fcompl
cwtl
pop
jbe
pushf
add
cli
dec
mov
pop
aaa
ds
lock
jne
aad
jle
cmp
insb
cmpsl
mov
sub
inc
icebp
add
fmulp
mov
je
xorb
and
jbe
and
xor
cmp
sbb
pop
iret
popa
jno
fildll
repnz
mov
roll
nop
push
cmc
dec
int
cmpl
and
sti
dec
insl
sahf
cmp
jecxz
int
movsl
addr16
out
shll
jecxz,pn
fldenv
sub
xchg
stc
fdivrs
sbb
push
dec
adc
and
jb
aam
fistpll
mov
fidivrl
movsl
cmp
dec
mov
lds
test
mov
in
stos
aad
sahf
shlb
and
xor
ret
mov
faddl
sub
fcomip
test
mov
loope
adc
jp
loope
fimull
inc
nop
fimuls
scas
bswap
sub
aam
fs
mov
push
mov
push
stos
add
and
push
popl
jl
stos
outsl
jbe
daa
lods
xor
clc
mov
jp
mov
outsb
mov
and
mov
subl
insb
scas
jl
inc
and
xor
sub
adc
or
clc
pop
dec
mov
mov
cmc
xchg
cmp
mov
and
rcll
popa
mov
jmp
rolb
aas
aam
mov
test
sub
xchg
and
fcompl
mov
xchg
cmp
fstpl
mov
pop
dec
rorl
shlb
push
or
dec
pop
mov
cld
mov
lds
jge
out
mov
into
mov
stos
pop
inc
popf
enter
and
and
jmp
sbb
movsl
jge
hlt
pop
outsl
sarl
sub
mov
stos
mov
in
sahf
add
pushf
dec
lds
push
test
inc
jge
shlb
lcall
sbb
cmp
cmp
fstl
mov
push
xchg
pushf
or
aaa
and
mov
sub
push
outsb
leave
addl
xchg
cmp
mov
lods
xor
jp
xchg
and
in
jge
ret
in
lret
in
movsb
cmp
lahf
popf
rol
shll
sbb
test
sub
push
jge
add
xor
cmp
pop
mov
dec
pop
xchg
fistpll
jnp
hlt
cltd
mov
pop
std
add
sbb
bound
cmp
movsb
repz
sub
xor
mov
je
int3
rorl
repnz
imulb
mov
inc
jae
adc
pop
jo
mov
test
fiadds
mov
ljmp
aas
inc
mov
cmp
xlat
sub
enter
xlat
aaa
and
dec
mov
dec
out
mov
xor
jnp
int
fstpl
adc
pusha
aam
lods
test
or
sti
out
jae
or
jo
push
outsb
in
lret
lahf
out
adc
xchg
out
movsl
jns
out
mov
add
lcall
xor
in
mov
iret
adc
dec
add
pushl
sahf
xchg
cld
fld1
imul
inc
dec
leave
xchg
mov
dec
cs
mov
mov
mov
mov
inc
and
test
or
or
xor
push
or
dec
decb
or
sub
int3
adc
dec
in
sbb
ljmp
and
push
cmp
mov
inc
jmp
out
add
decb
mov
inc
mov
stc
scas
cmp
adc
cmpsb
pop
clc
and
cmp
scas
lods
jl
movsl
xchg
adcl
jecxz
sub
and
push
mov
nop
sbb
sbb
sahf
jmp
stos
mov
jno
cmp
adcl
dec
cmp
push
arpl
fst
push
add
xchg
xorb
dec
jecxz
sarl
cmp
lret
and
shll
add
adc
mov
dec
jl
cltd
push
gs
pop
dec
lcall
mov
popf
pop
out
je
pop
imul
loope
dec
mov
shlb
stos
pop
mov
sarl
rcrl
js
push
aam
adc
clc
stos
push
shlb
cmp
jae
ljmp
xchg
add
test
or
xchg
and
repnz
pushf
jle
and
mov
inc
ja
or
push
mov
xchg
fsubl
nop
shr
insb
shll
out
jmp
cwtl
pop
sbbb
lret
div
lea
dec
push
xchg
jbe
lods
add
mov
hlt
rcrb
cmp
idivl
xor
rcrb
mov
dec
lds
mov
adc
dec
xchg
mov
in
lahf
pop
cmc
push
shlb
call
in
ficoml
out
stos
sbb
add
stos
cwtl
push
call
sti
or
adc
cmc
xchg
sub
addr16
inc
imul
lea
push
adc
mov
xchg
push
sub
pop
cmp
lcall
mov
ds
bound
mov
cmp
daa
fistps
daa
and
rclb
and
cwtl
push
daa
push
icebp
and
push
leave
pop
fs
loopne
xchg
rolb
rorb
inc
pop
mov
and
cmc
xrelease
mov
jo
mov
cmp
xchg
or
clc
subb
lret
outsb
and
imul
int3
pop
and
testl
add
inc
dec
bound
aam
test
pop
lret
push
fadds
mov
das
mov
lods
push
repz
mov
arpl
sbb
icebp
xlat
pop
ljmp
in
push
pop
repnz
or
mov
xor
ds
popa
dec
std
and
hlt
test
xor
cmp
sbb
js
out
test
test
push
push
inc
jecxz
rol
or
in
mov
fmul
ss
cmpsl
aad
jmp
shl
or
sub
pop
cmc
icebp
mov
mov
and
sbb
cmp
xor
outsl
in
orb
xor
jne
mov
mov
out
mov
inc
sub
jb
and
mov
ret
sub
je
jno
mov
xor
hlt
mov
jge
roll
xor
daa
ss
in
sbb
mov
dec
aas
mov
outsb
mov
ljmp
mov
aas
pop
test
pop
add
and
subb
xchg
and
dec
jne
insl
dec
or
adc
mov
sub
cs
xchg
lods
push
pop
xchg
inc
mov
sub
aam
mov
test
jp
int
sbb
cmp
sbb
les
lock
add
in
jno
imul
mov
inc
out
or
dec
in
adc
in
mov
mov
inc
mov
in
popa
dec
pop
int3
jl
rep
jns
cltd
inc
stc
enter
mov
das
sub
sub
mov
cwtl
lea
aas
jbe
mov
xchg
push
aas
jnp
cmp
mov
addr16
jb
movb
xchg
push
addr16
icebp
pop
xor
add
adc
scas
fsubl
inc
pop
jp
mov
mov
xchg
das
jbe
mov
add
mov
repz
push
mov
lds
cltd
outsl
cmp
cmpsb
dec
pop
pop
mov
pop
pop
xchg
daa
fmuls
xchg
pop
sbb
imul
repz
out
out
jg
dec
insb
mov
out
insb
call
pop
rol
cmp
adc
pushf
test
lret
je
push
imul
adc
stos
cmp
dec
aad
or
out
xor
addl
cs
cmp
sbb
ss
cltd
adc
lahf
loop
fisubrl
dec
and
ret
sbb
mov
xchg
pop
push
es
test
mov
daa
mov
dec
stc
ds
push
icebp
mov
pop
lods
jb
arpl
or
inc
mov
fs
pop
pop
dec
push
mov
fistpll
ds
ss
mov
mov
mov
aad
outsb
mov
mov
pop
into
or
cmp
repnz
sub
scas
mov
pop
or
mov
out
mov
stos
and
ficomps
sbb
pop
mov
sub
push
or
xor
mul
dec
mov
push
add
dec
push
aad
jae
leave
stos
fstpl
int
sub
cmp
dec
sbbb
lea
cmpb
adcl
out
mov
fisubl
hlt
xor
mov
stos
int
cmp
mov
pop
or
ljmp
lret
inc
orl
scas
adc
outsb
rorl
test
pop
es
sbb
fstpt
inc
mov
leave
shl
cmp
inc
pop
jae
dec
lcall
sbb
xchg
xchg
pushf
push
fsubrs
mov
mov
out
pushf
idivb
mov
pop
test
mov
lea
xchg
inc
cmp
ffreep
jno
sbb
jmp
outsl
add
mov
mov
xchg
icebp
std
scas
int
or
iret
push
flds
mov
inc
mov
cmc
push
mov
cwtl
mov
pop
jge
aas
shl
outsl
mov
push
icebp
lcall
test
add
xchg
scas
xchg
in
pop
xor
adc
std
cmpsl
mov
je
mov
jmp
fcoms
js
sbb
xor
lock
fwait
xchg
or
ja
lret
inc
pop
xchg
je
mov
fsubrs
and
push
pop
int
loopne
pop
mov
stos
inc
popf
push
imull
das
sub
aas
test
pop
mov
es
jmp
mov
ret
pop
sahf
jae
loope
mov
mov
shll
enter
cmp
fdivs
adc
data16
cmp
push
out
das
jl
jmp
lcall
out
and
mov
ss
lcall
das
inc
imul
std
inc
mov
or
int3
decl
xor
push
stc
jl
cmp
jg
lahf
cmp
mov
jp
addr16
ficoms
adcb
insl
mov
sbb
push
add
xlat
repz
movsb
fdivp
cld
xchg
or
mov
xchg
mov
fdivrs
mov
push
xchg
xchg
adc
rorl
pop
sub
mov
adc
jo
dec
add
mov
clc
dec
pop
sbb
jecxz
dec
mov
mov
mov
fwait
in
add
mov
fcmove
inc
xor
add
cmc
aas
dec
or
rep
cltd
rcr
xchg
lock
mov
dec
rcr
push
jae
push
jmp
ret
add
pop
mov
in
pop
add
cmp
push
bound
shrl
out
pop
aas
or
test
pop
test
pop
insl
fisubl
jnp
rorb
sbb
adc
out
addr16
xor
mov
cmc
push
bound
pusha
divb
leave
stc
shll
pop
cwtl
loop
fadd
movsl
sub
fistps
adc
inc
dec
mov
test
aas
push
dec
jmp
sub
sub
pop
sahf
mov
daa
inc
mov
jb
pushw
lcall
int
push
lahf
enter
enter
add
ljmp
out
incb
hlt
inc
lods
es
mov
jne
xchg
and
add
push
outsb
sbb
outsl
cwtl
shl
jb
pop
sub
jne
inc
push
fistps
out
xchg
imul
lock
push
stos
xchg
loopne
js
fisttpl
inc
ret
frstor
imul
push
cmp
push
xlat
les
in
enter
xor
std
scas
sahf
push
inc
or
or
imul
add
pushf
or
jno
sti
cmp
sub
xorl
inc
ss
test
sub
dec
push
je
stos
inc
imul
sub
addl
inc
mov
push
cmc
fcmove
jno
sbb
mov
cs
xor
dec
mov
inc
sbb
int3
test
outsb
sub
insl
or
int
sbb
rcr
arpl
inc
xlat
push
xchg
pop
sar
test
mov
lret
or
lahf
dec
imul
cmpsb
sub
es
and
inc
stc
repz
pop
or
aad
xchg
movsl
pop
mov
push
stc
out
xor
sbb
mov
lds
jae
xchg
pop
mov
or
fwait
add
int3
mov
cmp
scas
into
add
xchg
inc
push
jmp
push
test
loop
pop
xchg
cmpl
lods
pop
scas
ja
clc
xchg
inc
inc
mov
hlt
push
std
jb
xor
out
dec
push
aas
cmp
or
scas
call
pop
rcrl
sub
cmp
cltd
mov
mov
mov
xchg
ja
mov
mov
mov
jbe
leave
imul
add
iret
mov
out
push
popf
xor
push
daa
out
in
jnp
push
loopne
cmpb
loope
add
or
int3
pop
aam
cmp
aad
push
xor
cmpsl
and
repnz
pop
sub
cmp
sub
jbe
dec
dec
xchg
cmp
jnp
mov
xchg
jbe
or
add
push
pusha
add
or
pop
mov
xlat
in
mov
enter
inc
xchg
add
loop
stos
cmp
in
call
pop
mov
pop
and
sub
fisubs
cmc
and
scas
inc
aaa
aas
testl
push
fsubs
js
shl
mov
push
insb
sarb
add
push
pop
lahf
fistpll
call
repnz
adc
push
or
je
dec
scas
xchg
popf
mov
pusha
ficoms
in
adc
dec
dec
in
cmpsl
int3
push
sbb
addr16
aaa
push
push
and
or
adc
xchg
outsb
sbb
vucomiss
or
div
cmp
and
insb
inc
cmp
or
test
out
push
movsl
bnd
daa
xor
aas
pop
xchg
sub
xchg
push
push
pop
sbb
push
leave
dec
clc
hlt
add
inc
rcrb
dec
std
sub
cmp
rorl
adc
xor
add
add
sbb
mov
imul
add
jl
mov
pushf
adc
rcll
sbbb
add
ljmp
frstor
and
or
subb
mov
jo
and
shll
mov
cs
negb
cmp
pop
or
enter
and
sbb
mov
xor
dec
adc
xchg
js
push
iret
xchg
es
leave
pop
mov
aam
or
push
xchg
push
pop
dec
ret
and
sbb
cmp
sub
lea
dec
push
testb
aaa
add
jne
sarb
add
ret
mov
pusha
out
scas
ds
into
sub
stos
int3
add
sbb
mov
cli
xchg
add
pop
jg
lret
mov
sbb
in
xor
call
jmp
fdivrl
mov
push
mov
lods
in
push
rcrb
mov
lahf
xchg
movsb
in
jo
fsubs
insl
sbbl
mov
inc
sub
insb
pop
cs
cmpsl
mov
sahf
test
jbe
cli
das
call
cmp
inc
dec
data16
dec
inc
mov
mov
cmp
pop
xchg
adc
ljmp
jns
mov
aas
das
inc
movsl
mov
out
add
jecxz
fbstp
movsl
mov
repnz
push
das
sbb
mov
push
mov
lahf
lahf
pop
ja
mov
xlat
and
or
outsl
pop
rclb
sbbb
or
out
gs
addr16
and
push
outsb
sub
xor
test
adc
mov
dec
and
sub
movsb
jle
xchg
incl
shlb
cmc
out
icebp
cmp
loope
dec
daa
enter
add
pop
aaa
loope
test
mov
int3
scas
sbb
call
fnstenv
sahf
push
xor
mov
mov
mov
inc
xchg
adc
xchg
add
imul
cmpl
mov
sub
xor
xchg
nop
fmuls
sbb
or
adc
xchg
addl
mov
add
push
stc
xchg
cltd
xchg
fdiv
ja
add
jge
mov
scas
jecxz
push
js
insb
mov
stos
or
lock
in
mov
xor
jmp
movsl
or
mov
into
xor
out
xor
out
popa
popa
fldt
fwait
sbb
dec
out
add
bound
cltd
es
scas
hlt
inc
std
aad
jnp
or
or
cmp
outsb
int3
jl
fnstsw
push
loope
and
inc
push
mov
xchg
or
sbb
ja
adc
push
mov
int
rol
inc
inc
push
icebp
or
test
lods
in
jnp
xchg
push
fsubrs
fcoml
jns
and
fisttpll
adc
inc
xlat
cmpl
lret
popf
push
xlat
loop
lds
adc
cmp
or
orl
icebp
push
movsb
pop
mov
or
in
xchg
mov
jno
xor
loopne
mov
jle
into
xchg
xchg
cld
cltd
fmull
dec
add
fcomps
bound
cmpsb
out
in
xchg
mov
inc
fdivp
scas
outsb
lock
aaa
inc
data16
xchg
adc
xor
mov
jb
pop
dec
push
outsb
jbe
adc
mov
cld
inc
mov
sbb
arpl
int3
popf
pop
loopne
adc
divb
pop
stos
stc
pop
pop
je
test
popa
into
movsb
and
inc
sarb
cmpsl
sbb
dec
dec
adc
lock
mov
adc
repz
lds
cltd
fidivs
dec
sbb
mov
xor
aas
xchg
hlt
push
test
stc
fidivs
mov
rcrl
jne
stos
cmpsb
add
movsb
sbb
dec
sbb
jbe
or
push
aam
test
test
loopne
loope
jmp
imul
push
idivb
sub
repnz
sbb
push
hlt
xor
jmp
cmp
sarl
fdivr
out
lret
sub
je
cmp
flds
insl
lds
mov
mov
push
aaa
ss
fidivrl
rcr
dec
mov
int3
insb
cmpb
cmp
mov
jl
adc
aad
fwait
or
rolb
lods
adc
adc
addr16
xchg
shlb
dec
inc
imul
sub
push
jecxz
daa
xorl
xor
add
ss
cli
adc
sub
jecxz
jb
mov
mov
push
mov
pop
out
test
inc
out
and
cmp
sub
jb
cmp
pop
xchg
dec
iret
inc
stos
lahf
psubsb
jmp
fdivrl
negl
adc
cwtl
fnstenv
inc
cmc
fidivl
faddp
mov
jb
loope
mov
ret
inc
sarl
daa
or
or
xchg
addr16
and
addb
lcall
mov
jno
cmp
adc
adc
call
mov
jae
mov
inc
adc
out
js
loope
sahf
pop
or
add
xchg
push
add
in
leave
cmc
pusha
pop
cmc
adc
mov
push
lret
cmpsl
adc
add
clc
ss
sub
push
mov
fcmovbe
push
or
popf
adc
cld
dec
xor
cmc
ret
sahf
jo
inc
aam
mov
jns
cld
enter
test
push
xchg
xchg
jbe
mov
mov
fnstsw
idivl
pop
jmp
dec
dec
xchg
imul
or
cmp
cmp
xor
jmp
cmp
or
fcmovnbe
loopne
je
decl
push
into
mov
add
pushf
imul
push
xor
mov
pop
test
in
fcoml
and
cmp
int3
sbb
cmp
adc
ja
push
push
aad
cmp
out
sub
fs
outsl
lret
popa
int3
arpl
pop
cld
out
mov
ss
xchg
idivb
push
jnp
test
and
mov
pop
push
adc
jns
out
push
loop
fdivp
outsb
jno
xlat
xchg
xchg
int3
xchg
xchg
aaa
mov
cmp
movl
sar
jmp
arpl
int
out
repnz
sahf
cld
lods
adc
jg
ss
repz
sub
push
push
jmp
pop
and
scas
mov
test
in
addr16
add
shll
dec
lret
ret
mov
jbe
stos
daa
pop
insl
sub
out
mov
ret
jb
cmp
push
dec
sbb
sbb
rol
stos
mov
daa
and
fbld
inc
or
aaa
push
sbb
sbb
fwait
movsl
sahf
or
push
sub
sbb
movlps
mov
pop
fidivrl
shll
push
xchg
insb
movsb
jecxz
add
or
adc
std
dec
fbstp
jo
jb
mov
sbb
dec
sub
dec
mov
mov
xor
xchg
adc
cmp
jno
sbb
repz
xor
sarl
ss
repz
sub
push
xchg
into
cmc
insb
mov
inc
ret
sub
xor
or
or
popa
mov
addr16
adc
test
lods
cld
arpl
insl
mov
loopne
and
psllq
push
xor
mov
movsl
sahf
in
fs
lret
outsb
cmp
mov
shlb
push
xlat
out
int
pop
sub
in
and
push
inc
test
dec
lea
cmpsb
icebp
imul
mov
test
pop
mov
jp
les
sbb
out
mov
pop
jne
cmp
xchg
sbbb
mov
lods
xor
mov
inc
iret
lret
shlb
fnstsw
lods
jmp
xchg
mov
pop
enter
fidivs
loope
repnz
lock
mov
data16
xchg
dec
xor
add
mov
push
fistl
rclb
xor
push
sahf
push
jae
push
add
mov
sub
negb
ret
mov
pop
out
jne
push
push
into
popf
lahf
int
add
jo
push
jo
fmul
leave
push
outsl
pop
rolb
in
stos
sub
xorb
sbb
pop
inc
or
psllw
int
lahf
and
xlat
adc
dec
repz
test
sub
xor
insl
add
mov
fcmovnu
jle
push
out
pop
ljmp
xor
test
cmp
inc
xchg
arpl
lcall
stc
aad
aas
aaa
hlt
leave
jae
fcmovnbe
rcrb
inc
lock
das
xchg
push
mov
call
mov
jmp
ja
add
repz
adc
push
sbb
icebp
hlt
ja
mov
adc
mov
push
and
push
sahf
loopne
scas
xor
lods
shll
loope
add
or
push
adc
dec
out
dec
fwait
imul
push
inc
lds
dec
add
out
jge
lock
mov
data16
test
hlt
jb
adc
push
mov
ret
idivb
mov
push
mov
addr16
test
mov
jns
mov
mov
or
loopne
add
test
sub
lcall
dec
and
sub
bound
xor
roll
inc
lds
hlt
xchg
maskmovq
imull
add
int
push
or
fisubs
jb
pop
aam
jnp
repz
push
xchg
rep
pop
or
adc
inc
in
or
iret
or
push
add
inc
and
jbe
mov
pushf
dec
and
js
pushf
popf
hlt
jmp
mov
and
fdivl
inc
dec
mov
mov
popf
bound
sub
leave
incb
inc
jns
adc
or
dec
stos
pop
mov
mov
add
sbb
ds
xchg
dec
movsb
inc
push
add
push
ds
pop
dec
or
rsqrtps
stos
cmp
mov
pusha
push
pop
push
data16
int
add
popa
lret
adc
adc
mov
push
fisubrs
cmp
je
mov
push
and
mov
jnp
cs
mov
pop
incb
icebp
push
dec
pop
in
insb
sub
push
pop
lret
gs
mov
outsl
sbb
ja
daa
sbb
out
icebp
inc
js
inc
and
cmp
xor
rorl
inc
clc
mov
cmpl
popf
nop
das
jl
sub
sbb
adc
jns
lret
orl
dec
rorl
sub
flds
fnsave
and
test
sub
adc
scas
dec
sbb
clc
pusha
mov
ljmp
or
ret
pop
mov
stc
fldenv
repnz
fistpl
mov
pop
xor
jns
sub
and
jo
lods
add
cltd
sahf
aaa
stos
sbb
dec
jg
out
mov
cltd
adc
loopne
cmpsb
or
cmp
repnz
lods
cmp
xchg
sbb
or
and
xchg
imul
or
hlt
jb
cld
and
jecxz
in
cmpsb
adc
xor
icebp
lret
addr16
jg
sahf
roll
xorb
xchg
enter
lods
dec
ss
pop
adc
lock
xor
mov
mov
and
sahf
inc
arpl
mov
adc
cmpsl
inc
cmpsl
nop
in
inc
pop
cmp
test
cmp
aad
cli
and
sbbb
adc
fisubl
dec
arpl
lods
xchg
pop
mov
push
popf
fimull
jecxz
aam
icebp
cs
push
pop
dec
imul
fcmovb
lret
pop
jne
ds
mov
sub
addr16
mov
mov
jb
mov
sub
jae
inc
psubusb
dec
cmpsl
cmpsb
clc
and
inc
int3
clc
sub
arpl
mov
jmp
mov
jb
ret
sarl
pop
jbe
adc
add
sbb
and
fdivrp
loopne
xchg
loope
in
pop
rcr
inc
mov
test
lods
ljmp
mov
pop
mov
int
add
jmp
fadds
inc
les
mov
les
xor
aad
cld
push
pop
and
in
push
in
cmp
ja
outsb
cmpsl
push
mov
mov
test
je
testb
dec
inc
dec
cmc
cmpsb
xchg
mov
xor
aam
pop
push
js
aaa
dec
dec
pushl
mov
push
inc
push
lods
and
mov
subl
jbe
mov
adc
out
mov
rol
cmp
ja
mov
shlb
fdivl
addr16
leave
adc
rcrl
stos
popf
sbb
gs
xor
mov
push
pop
outsl
sarb
fwait
xchg
inc
xor
icebp
pop
push
lret
mov
or
or
loopne
out
xlat
stos
push
stos
push
or
and
pop
cwtl
inc
aam
fs
pop
jns
lea
inc
sub
mov
aam
dec
rol
stc
xchg
xor
movl
loop
dec
or
mov
in
xchg
ds
sbb
and
push
jmp
sahf
iret
jo
add
mov
add
rorb
hlt
jns
scas
ja
adc
pcmpgtd
and
repnz
cvtdq2ps
andl
mov
jns
hlt
outsl
ja
test
sub
inc
bound
sub
mov
xor
and
addr16
out
pop
mov
inc
lahf
mov
cmp
jae,pt
shl
adc
mov
or
adc
mov
mov
repz
clc
in
lock
cld
loopne
inc
push
push
ret
pop
repz
test
ret
mov
push
pop
jmp
mov
lods
sahf
add
xor
fdivrp
popa
xchg
jne
aad
push
ja
sahf
flds
mov
js
fdivp
dec
cwtl
enter
add
adc
enter
and
flds
mov
pop
movsb
addr16
nop
scas
xor
sbb
stos
fstpl
sub
data16
inc
mov
mov
xchg
or
mov
lods
push
scas
test
push
dec
mov
or
insb
pusha
adc
sbb
jne
popa
leave
cmpsb
pop
push
je
rcll
inc
nop
jge
dec
bnd
jl
mov
mov
push
jns
ljmp
add
outsb
mov
cltd
add
add
push
or
into
jbe
push
lcall
in
scas
push
add
lret
pop
and
shlb
cmp
lcall
jae
dec
inc
ljmp
sbb
dec
jp
stos
jl
inc
add
cmp
sub
adc
or
add
inc
pop
jmp
mov
scas
jg
sbb
insl
mov
jmp
gs
pop
and
test
mov
jp
popa
fldcw
std
push
push
or
mov
dec
testb
fisubrl
js
ljmp
mov
pushf
inc
rorb
xchg
jmp
es
out
inc
aas
mov
jb
nop
mov
lods
or
enter
pushl
cmp
test
fildl
test
jecxz
pop
mov
push
popa
jge
xor
mov
das
and
cmp
inc
hlt
sbb
rclb
data16
in
jmp
not
or
inc
ds
out
or
insl
iret
rclb
cmp
cld
test
jnp
aad
xchg
jg
lds
popa
add
sub
mov
push
pop
scas
js
inc
iret
ret
sub
stos
xchg
add
jmp
sub
lods
sub
out
xchg
gs
xchg
insl
movsb
pop
pop
scas
cld
cwtl
loope
pop
and
sub
fcomps
subl
pop
out
pop
arpl
and
test
rcrl
push
in
push
clc
sarl
jp
call
sub
lods
cmp
cmp
push
frstor
or
stc
add
out
inc
mov
je
in
mov
pop
dec
aam
daa
mov
inc
pop
push
inc
pop
mov
push
xor
xchg
or
xor
pop
lock
hlt
mov
adc
inc
mov
popf
xor
mov
dec
xchg
add
push
push
test
jns
jb
out
mov
sahf
push
je
sub
lret
mov
sub
inc
jo
ret
stc
add
jns
test
add
sarl
aad
dec
add
es
sub
jbe
cmp
fmull
xchg
pop
and
ficompl
adc
leave
lahf
xor
push
imul
adc
adc
movsl
fldt
lock
inc
out
cmp
mov
adc
cli
inc
pusha
adc
in
pop
jne
roll
inc
pusha
int
pop
mov
leave
inc
jnp
loope
cmp
cld
xor
shl
push
jbe
mov
push
add
adc
in
stc
stos
push
jb
jbe
mov
or
mov
jmp
cld
fs
xorl
movsl
inc
push
jae
inc
nopl
shr
mov
sbb
stos
add
sbb
push
notl
ficoms
repz
sub
add
stos
push
cmp
fldenv
arpl
jo
movsb
leave
xchg
fcmove
cltd
sub
pop
inc
push
bound
scas
cmp
mov
or
aam
sub
mov
ja
mov
dec
hlt
sub
jmp
add
inc
jnp
cwtl
arpl
mov
out
sti
xchg
lret
int
jmp
scas
mov
jo
test
call
push
ret
fistps
gs
lea
mov
imul
mov
je
pop
mov
pop
aas
inc
adc
push
xchg
mov
cwtl
arpl
push
fcomi
push
fstpt
pop
jl
jnp
scas
mov
fs
mov
aaa
xchg
lret
fldl
mov
mov
sub
cs
lods
js
pop
mov
rorl
jge
jl
push
sbb
bound
out
test
jo
inc
scas
imul
sub
xor
std
add
out
jnp
or
cmp
clc
cmp
xchg
or
push
scas
push
sub
fcmovnu
and
mov
sub
test
cli
fisubrs
dec
dec
and
out
xchg
xchg
xor
pushl
xlat
xchg
movl
pushf
int
inc
in
jnp
mov
in
call
adc
mov
add
mov
xor
inc
paddq
lret
jecxz
scas
movsb
out
pop
or
popa
pop
es
insb
shl
lahf
adc
push
xchg
cwtl
in
sbb
out
lret
aas
imul
rcll
dec
xor
stos
out
outsb
in
xor
add
hlt
jle
push
inc
mov
into
mov
or
rcrl
cmc
sub
cmp
mov
pop
xor
pop
inc
jmp
pushf
jle
add
xchg
sub
les
js
and
push
stos
xor
movsl
and
nop
pop
bound
aam
cmpsl
or
or
pop
mov
cmp
dec
jecxz
mov
inc
jno
fdivrs
outsb
adc
xor
cmp
jb
cmpsl
enter
xchg
aas
add
cmp
pop
lret
mov
je
mov
xchg
insl
lcall
fnstenv
mov
pusha
loop
out
mov
jl
mov
cmp
sub
addr16
cli
mov
pop
inc
mov
xlat
popf
popa
mov
dec
sar
add
ja
cmp
lods
imul
mov
lods
xor
lcall
adcl
cmp
push
dec
insl
insb
in
out
std
sbb
mov
xor
xchg
sub
lods
sub
jns
fs
inc
mov
fmull
or
push
pop
aam
outsb
xchg
inc
call
pop
out
and
jle,pt
into
cmp
test
stos
aam
sub
out
cmp
mov
ret
xchg
mov
sub
dec
xor
hlt
xor
sub
push
pop
bound
xchg
mov
scas
pusha
neg
lods
push
fisubl
nop
cmp
popa
add
in
rclb
or
dec
mov
out
and
push
push
test
mov
cmp
lods
lock
cli
jecxz
cmovo
sbb
jne
lods
pop
in
lcall
cmp
or
hlt
inc
dec
daa
sbb
sarl
test
and
xchg
push
stos
or
dec
mov
int
lahf
fcom
xor
pop
pushl
fwait
ret
pusha
mov
fidivrl
pop
repnz
cmp
std
subb
ja
sbb
push
pop
aas
pop
fsubp
mov
andb
pop
fcomps
mov
push
popa
pop
daa
popa
fs
inc
std
outsb
push
aad
pop
dec
or
jp
fimuls
sbbb
clc
mov
aam
lds
and
nop
stos
aad
push
xchg
push
push
mov
adc
push
or
jp
ljmp
les
pop
add
dec
addr16
adc
xor
xchg
cmpsb
mov
hlt
orb
in
xor
pop
pop
inc
and
scas
lods
fisttpll
sahf
imull
jne
add
out
nop
stc
adc
test
test
std
push
movsb
pop
add
sub
scas
jbe
test
ja
gs
ret
cs
dec
loop
mov
jae
jge
cwtl
xor
sub
arpl
insl
cltd
imul
in
sub
mov
xor
mov
push
in
enter
scas
push
cwtl
into
pop
fmull
xor
xchg
mov
repz
imul
jbe
adc
mov
mov
jmp
in
mov
cmpxchg
je
push
pop
mov
pop
xor
mov
int
icebp
in
add
adc
aas
cmp
xchg
icebp
jb
or
pop
rcl
lods
jb
out
ja
xor
sub
scas
push
push
mov
or
adc
stos
mov
or
imul
fucomp
hlt
push
cmpsl
xchg
pop
lods
scas
ret
adc
xor
popa
mov
shll
and
jl
inc
mov
sbb
clc
or
xor
sbb
xor
xchg
dec
dec
mov
adc
sub
pop
arpl
push
adc
mov
cld
movl
mov
aaa
jnp
xchg
xchg
and
mov
in
or
scas
cmp
adc
inc
imul
jle
adc
pushf
adc
sub
adcl
insl
xchg
xchg
mov
in
faddp
loopne
push
shlb
mov
xchg
orb
andl
dec
mov
mov
or
push
jno
jmp
mov
jb
shlb
pop
jbe
enter
push
dec
cs
sub
add
jne,pt
or
pop
xchg
inc
or
and
cmp
in
stos
shll
lods
cmp
fmuls
dec
mov
xchg
cli
cmp
aas
enter
pop
xor
or
jl
push
pop
cltd
mov
imul
insb
loop
push
push
and
jae
loop
mov
lods
push
call
sbb
ficompl
stc
mov
and
imul
mov
in
daa
pusha
loope
inc
mov
ficompl
out
inc
fs
mov
inc
mov
test
pop
ja
or
pop
mov
pop
and
xchg
aas
cmp
mov
fs
jb
xlat
or
data16
dec
jns
mov
sub
fcomps
jp
pop
sub
mov
or
mov
or
push
mov
push
push
rolb
lods
mov
sub
lea
ss
icebp
dec
xchg
fisubrl
addr16
adc
pusha
dec
and
call
dec
sub
sbb
arpl
out
ljmp
jb
add
cli
movsb
inc
fstl
add
lahf
int
lds
jecxz
jb
push
out
mov
mov
sbb
jmp
decl
sarl
adc
out
sub
mov
lods
pop
jns
out
jns
sbb
pop
rcll
jb
lret
imul
inc
incb
es
dec
add
dec
xchg
sub
loopne
pop
dec
cmp
jae
sahf
jns
cmp
jns
push
cmp
mov
mov
lea
dec
out
lahf
pop
aas
leave
dec
bound
cld
int3
or
in
cmp
scas
pop
sbb
int
sub
dec
jp
pop
stc
push
adcl
negb
stc
outsl
mov
adc
sbb
sub
adc
sbb
jecxz
arpl
push
aad
out
lret
mov
test
mov
fs
push
in
popf
popf
call
mov
xchg
cmp
out
mov
jg
test
aam
cmp
cli
jne
push
inc
or
pop
scas
xchg
pop
dec
sbbl
shll
out
aad
cmp
add
es
mov
adc
xchg
mov
pop
jo
out
pop
inc
xchg
sbb
mull
mov
iret
lcall
xchg
add
sbb
test
aam
adc
jl
pop
sbb
addr16
pop
outsl
adc
push
push
stos
into
mov
and
xor
inc
test
and
aam
je
les
cmp
xorl
aam
lret
fwait
jb
sub
fcomi
lods
mov
add
loope
push
xchg
and
loope
fwait
push
out
xor
jle
mov
in
inc
pop
cs
js
cld
fdivrl
ja
pop
dec
cmp
fs
jge
xchg
rdseed
call
sbb
sub
insl
sub
popf
aam
push
jbe
loope
push
mov
push
aas
cmpsb
imul
cmp
cli
sub
out
aad
insl
das
cmp
xchg
cmp
ret
pusha
imul
cwtl
stc
ds
mov
push
fs
mov
stc
mov
add
jle
orl
les
lds
mov
out
stos
ret
inc
pop
cwtl
adc
add
adc
daa
test
test
cmp
stc
imul
les
cmp
daa
pop
mov
dec
mov
imul
sti
addr16
inc
jb
xor
ss
fsubrp
mull
popf
push
mov
cmc
push
ret
sub
sbb
jl
cmpsb
xchg
xchg
cmpsb
inc
dec
test
dec
pop
std
push
cmovno
adc
pushf
xor
ljmp
inc
cli
push
cwtl
ss
lock
adc
lcall
sub
xchg
dec
jmp
lods
subb
into
arpl
and
outsl
pop
daa
clc
mov
iret
xchg
sbb
mov
sahf
filds
xor
adc
mov
mov
repz
dec
sahf
test
emms
data16
cmc
aaa
mov
push
xor
pop
or
mov
mov
mov
iret
or
jg
mov
dec
enter
sbb
inc
inc
sub
sub
dec
adc
inc
movsl
xchg
cmp
jae
dec
jae
mov
pushf
loopne
sub
and
cmc
int
xor
mov
xchg
sub
inc
je
sbb
sub
pop
loop
shll
adc
jb
mov
jb
xchg
repz
popa
pop
xchg
out
stc
adc
icebp
pop
scas
insb
fildll
add
pusha
rcl
stos
push
pop
jp
scas
ss
pop
aam
pop
mov
xchg
inc
fstl
mull
add
pop
xorl
sub
pop
out
sub
das
jge,pn
mov
sbb
scas
addl
jne
cmp
orb
pop
xchg
and
lret
jne
test
sbb
aam
into
mov
or
lahf
xor
push
das
hlt
gs
stc
adc
pop
movsl
and
sti
inc
in
cltd
mov
outsl
jl
or
je
fildll
not
sbb
sub
xchg
cmpsl
sar
jl
loope
sub
jns
add
push
jbe
pop
push
pop
xchg
cmc
and
fwait
xlat
das
es
lock
mov
lock
sbb
arpl
orl
or
xchg
dec
mov
xchg
inc
jge
ljmp
hlt
mov
mov
jp
mov
fwait
or
int
mov
popa
adc
mov
outsl
inc
incl
xchg
loopne
cmpb
fs
sub
jl
leave
inc
push
fisttpll
icebp
rorl
adc
aaa
xor
adc
sbb
mov
fmul
add
test
mov
test
iret
or
in
lds
daa
mov
cmp
std
aam
lods
das
icebp
mov
loope
xchg
negl
enter
and
or
fnstcw
lock
sbbl
cmpsl
push
cwtl
xchg
and
dec
push
or
jbe
popa
mov
lret
jmp
adc
mov
test
push
mov
test
jg
push
scas
clc
pop
into
mov
sahf
jp
mov
popw
imul
pop
and
pop
scas
ret
pop
insl
dec
and
iret
popa
es
sbbb
pop
fstps
inc
add
pminub
stos
add
jae
push
pop
lods
inc
cmpsb
sahf
loope
adc
push
push
or
fisubrs
outsl
imull
js
daa
int3
push
adc
inc
cltd
mov
xlat
loope
lods
jae
ficomps
insb
sub
lret
cli
mov
pushf
xor
cmp
ret
push
push
xchg
and
rcr
sub
loope
stos
mov
jno
xchg
and
in
pop
fwait
or
sahf
and
jo
fldl
add
sarb
out
arpl
in
mov
jae
jecxz
xchg
negl
outsl
cmovp
xor
adc
mov
jle
mov
pop
mov
dec
xor
mov
jne
in
leave
or
imul
mov
test
sub
push
cmp
outsb
push
lds
sbb
clc
por
mov
pop
lea
adc
loopne
mov
fisubrl
mov
and
dec
xchg
inc
jl
test
fiaddl
cld
jecxz
jle
dec
std
and
and
dec
pop
dec
mov
mov
jbe
xor
bound
xchg
scas
icebp
xor
pop
pop
sbb
jmp
jnp
ffreep
push
cmpsl
and
cwtl
pop
std
inc
jecxz,pn
je
test
loopne
cmc
mov
mov
mov
enter
cld
sti
adc
out
call
dec
ja
jb
lods
add
fstps
push
jno
mov
add
mov
mov
lahf
and
sbb
out
icebp
les
jmp
pop
gs
pop
inc
xor
int
mov
call
sti
fstpt
fs
aas
mov
lock
add
adc
lahf
in
inc
scas
push
mov
jns
shl
jno
push
bound
in
pushf
popa
inc
sub
mov
lods
or
dec
std
lret
dec
int3
cmp
in
xchg
je
loopne
cwtd
aas
fwait
cmp
push
fnstenv
int
cmp
xchg
push
sbb
sub
repz
gs
add
adc
lcall
jbe
mov
pop
add
insl
js
and
push
cmpsb
std
jae
fcomps
lock
outsb
cmp
jecxz
xchg
add
mov
dec
lret
clc
ds
sub
nop
fnsave
push
pop
and
and
hlt
shll
aaa
xor
fnstenv
mov
outsb
js
test
push
cmc
out
scas
fsubrs
shrb
mov
pop
test
push
mov
or
xchg
xchg
pop
icebp
adc
mov
dec
imul
xor
and
lds
mov
mov
mov
or
mov
xchg
mov
rorl
sub
adc
pop
add
jb
sub
int3
inc
jns
lods
ret
push
sub
adc
inc
lock
add
mov
fidivl
jne
and
or
jecxz
jnp,pn
xchg
push
push
negl
xchg
push
movsl
icebp
dec
ret
out
in
push
lock
hlt
dec
and
aas
outsb
test
or
jo
test
jmp
xchg
dec
adc
enter
rcrl
pop
add
cmp
push
inc
jne
pop
cmp
xchg
out
jge
dec
adc
sar
rcll
movsb
idiv
and
out
push
mov
cmp
int
lahf
scas
add
pop
repz
adc
dec
out
dec
lahf
sub
sti
rsqrtps
mov
xchg
mov
or
mov
sbb
jne
popa
sbb
pop
adc
mov
test
adc
lahf
je
jae
mov
sbbb
pop
imul
cmp
fisubrl
pop
aaa
shlb
xor
and
push
pop
adc
mov
fs
mov
jbe
int
leave
lds
pop
negb
hlt
jnp
push
xor
xor
cmp
hlt
out
jne
test
fistpl
adc
sbb
inc
jnp
mov
adc
insl
adc
imul
mov
mov
pop
in
pop
cld
push
repnz
pop
in
jns
mov
cmp
jge
mov
mov
orb
fcompl
push
fs
sti
mov
in
idivb
pop
fucom
sti
xor
jp
pop
loopne
insb
sti
fsubp
pop
and
mov
aad
adc
ds
xor
xchg
cmpsl
add
inc
into
mov
insb
loop
int3
aaa
add
push
shrl
adc
jmp
and
push
pop
xor
cmp
mov
mov
mov
sub
fwait
orb
push
xor
imul
mov
add
jg
jecxz
inc
and
dec
pop
mov
add
lret
je
test
rcll
inc
push
addr16
lahf
mov
pop
imul
leave
nop
dec
pop
jae
pop
inc
lahf
jmp
inc
push
adc
dec
shrl
dec
add
les
mov
outsb
sbb
pop
adc
jb
xor
push
call
insb
nop
xlat
add
shlb
jp
jo
sub
or
arpl
scas
mov
sub
dec
fcomps
mov
inc
xor
cmpsl
xchg
inc
xor
ss
aam
or
xchg
xchg
mov
js
fyl2x
inc
call
cld
mov
jmp
outsb
mov
ljmp
in
mov
loope
push
insl
and
in
lds
out
mov
mov
arpl
lods
fs
lret
push
xchg
data16
pop
test
mov
push
jp
arpl
cmp
push
test
scas
pop
inc
adc
xor
int3
push
adc
adc
inc
pop
movsl
sbb
or
cmp
pop
sbb
add
and
in
dec
or
insb
nop
sbb
cld
jae
bnd
ds
or
jne
pop
loope
inc
push
ja
hlt
andb
add
sbb
dec
sub
sti
and
pop
jg
xchg
cs
inc
cmp
sbb
add
push
ljmp
arpl
mov
hlt
sub
outsb
sbb
out
fs
pusha
pop
aaa
imul
fistpll
cmp
addr16
out
mov
push
xchg
cmc
lret
mov
fistl
push
int
dec
mov
pop
jle
sbb
xor
repz
jnp
xor
mov
lods
lods
pop
pop
mov
inc
pop
test
outsb
inc
aaa
bound
push
xor
out
sbb
std
pop
mul
je
sub
bound
out
popa
dec
incb
sub
xchg
push
lds
xchg
fdiv
xchg
push
test
std
dec
leave
jge
int
xlat
sbb
and
push
sbbl
pop
mov
sub
or
syscall
add
enter
loope
enter
and
push
push
adc
movsb
cli
rcl
and
jne
sahf
and
xchg
push
push
daa
call
mov
jle
cmp
sbb
es
jo
and
mov
icebp
cltd
add
stos
fsubrl
jle
pop
fisttps
push
inc
adc
movsl
in
loope
movsb
xchg
popw
jnp
adc
mov
int3
adc
adc
jae
mov
push
cmpsl
stos
dec
sub
fldenv
fwait
mov
xor
roll
repz
jae
test
jo
mov
dec
xchg
out
mov
push
ja
and
push
movsb
idivl
sub
adc
push
lds
mov
arpl
jne
int3
shlb
jbe
sub
jne
bound
cmp
sub
sbb
or
push
fbld
movsb
jno
jnp
or
and
jge
cmc
lods
lds
push
cmp
aaa
sub
int3
jo
mov
jb
fcompl
jp
mov
sub
fidivl
sub
push
outsb
aas
pop
sub
movsb
test
cmpsb
pop
lea
in
add
cmpsl
and
cmp
jne
in
jl
mov
call
adc
stc
repnz
inc
scas
mov
daa
xchg
test
enter
stc
cmp
pop
ret
icebp
xorb
shlb
arpl
jne
cltd
add
add
fs
push
paddsw
lock
mov
iret
mov
adc
dec
dec
cwtl
mov
setge
ret
or
aad
mov
outsb
xchg
test
stos
xor
or
mov
lods
ss
add
repz
enter
xlat
sbb
mov
test
std
cmp
movl
es
leave
cmp
rcll
cmpsl
xor
inc
and
rcl
fwait
or
xor
inc
addr16
add
aad
lods
mov
ret
out
sbb
test
pop
push
jne
push
pop
cmp
das
xor
iret
out
movsl
fwait
aaa
xchg
inc
ljmp
aaa
push
rclb
and
and
jl
cvtdq2ps
pop
dec
iret
decl
into
push
movsl
mov
push
jl
in
cwtl
lcall
fidivs
pop
lret
adc
push
repnz
push
push
mov
ficomps
shlb
or
ficompl
pusha
out
push
repnz
out
push
mov
or
sub
push
pusha
call
add
jns
in
das
cwtl
cld
mov
nop
jg
rcr
popa
mov
jmp
jmp
inc
sub
adc
in
sub
inc
into
out
mov
push
out
repnz
das
sub
test
pop
pop
aam
jns
cmpsb
rorb
fnsave
xor
and
push
ror
sub
xor
push
outsl
ret
outsb
mov
adcl
and
dec
lahf
and
xchg
aad
push
and
cmp
mov
fxch
dec
xor
aam
inc
lret
or
xchg
sub
mov
movsl
cmpsl
int3
push
sarb
stos
cwtl
and
addr16
movsl
cld
sbb
dec
push
sbb
lock
pop
lods
fwait
enter
sub
xchg
insl
push
popa
dec
adc
repz
pop
xchg
nop
push
push
ds
iret
test
jno
inc
sti
mov
lcall
in
fsts
adc
fs
or
enter
sbb
mov
call
negb
notl
fwait
sbbl
mov
push
add
sbb
cmp
jbe
push
std
push
mov
mov
es
clc
lds
mov
xchg
das
pop
into
and
mov
dec
hlt
push
movsl
nop
inc
outsl
add
lahf
fucomi
xchg
test
orl
jecxz
jne
sahf
or
push
sti
ret
outsl
sbb
ret
shr
decl
sarl
stos
movsl
pop
insl
dec
mov
outsb
and
fwait
cmp
adc
pop
inc
sub
adc
adc
pushf
xchg
push
xlat
aam
cli
bnd
vpsadbw
inc
loop
lds
mov
pop
inc
or
push
outsl
push
mov
sub
rcr
xor
mov
cmc
jl
cmp
lea
imul
mov
icebp
or
je
aaa
sbbl
mov
mov
sti
fscale
inc
xor
jnp
sbb
cwtl
lds
adc
or
sti
mov
in
pop
dec
mov
mov
xchg
sub
cmp
popa
popa
hlt
pop
ja,pn
mov
test
adcb
mov
pop
fldenv
jns
ret
dec
mov
sub
int3
jns
adc
popf
push
int3
rep
push
or
inc
jmp
clc
adcb
jb
aaa
sub
xor
mov
sub
insb
xchg
aas
roll
dec
push
cld
aas
add
filds
or
leave
daa
jmp
mov
scas
andl
cltd
lcall
clc
mov
fldt
sub
xchg
enter
in
sti
loop
add
data16
rol
faddl
jle
add
sbb
mov
rcrl
std
lret
or
aam
int
jmp
lock
leave
push
mov
jno
xor
fisttpl
push
jo
std
jl
lahf
pushf
jecxz
int3
ficomps
jns
fwait
mov
sbb
push
fcomp
out
imul
mov
icebp
pop
mov
lods
add
mov
ds
sbb
lods
sub
or
in
sar
fs
pushf
and
adc
test
movsb
dec
push
xchg
in
gs
int
push
push
jne
fildl
mov
pop
jle
jne
jne
in
push
dec
mov
xchg
jo
xor
mov
fs
rclb
int
pop
jmp
sahf
cwtl
fcmovu
fst
push
mov
imul
sbb
fstpt
mov
sbb
jg
adc
add
lock
ss
adc
test
pop
insb
and
xor
loopne
dec
sub
jle
or
jno
imul
xchg
inc
pop
mov
jle
mov
adc
pop
sbb
out
scas
adc
xchg
decb
repz
sub
jl
mov
cmc
popa
jg
pop
pusha
push
mov
xor
inc
or
mov
or
dec
sub
mov
mov
outsb
xchg
or
mov
push
outsb
xor
jnp
repz
loope
cmpsl
lahf
mov
cmp
in
mov
sub
push
cmpb
pop
test
je
lcall
ret
jnp
mov
nop
sub
sbb
inc
mov
cs
xchg
jg
dec
cmp
dec
xor
xor
lea
sub
scas
mov
pushf
mov
mov
data16
push
insb
and
adc
and
adcb
sub
jge
addr16
lret
andb
cmp
mov
mov
push
addb
sarb
or
popf
sahf
jo
cmp
push
call
or
mov
add
inc
lcall
jnp
xor
rcr
sub
movsb
push
mov
fcompl
jl
adc
cld
mov
dec
sub
pop
mov
jne
test
jp
out
es
xchg
mov
mov
aas
mov
mov
in
xchg
sub
pop
and
or
mov
cmpsb
push
out
lahf
insl
fs
cmpsl
dec
fst
mov
push
push
int
dec
cld
fistpl
xlat
mov
inc
jbe
sub
cld
clc
dec
mov
pop
ss
lods
add
mov
xchg
pop
icebp
icebp
ret
scas
iret
stc
xor
add
out
xchg
repnz
mov
xor
lcall
inc
nop
loop
insl
add
mov
xchg
pop
lods
jae
sub
sbbb
fptan
js
fidivrl
or
roll
push
cmpb
cmp
aas
rorl
ss
dec
mov
xchg
push
int3
mov
push
out
scas
out
lcall
fsubs
ja
jp
imul
mov
cmp
xchg
shrl
out
add
clc
rcrb
fcmovnbe
iret
push
int3
cmp
mov
mov
ret
cltd
and
arpl
fldcw
cmp
or
push
pop
add
mov
xor
inc
pop
ret
testb
shll
add
push
push
adc
mov
lods
or
clc
ret
sahf
in
inc
ja
jbe
dec
vmread
shlb
push
xor
mov
xor
push
mov
xchg
push
loope
fwait
inc
or
mov
sbb
xor
ljmp
jb
cmp
jnp
xchg
inc
pusha
jb
push
and
popa
scas
lret
fsubl
ja
enter
js
mov
in
push
xchg
stc
test
and
xchg
or
sbbb
iret
sbb
shrl
cs
mov
mov
adc
jbe
and
call
dec
cwtl
test
fildll
and
scas
add
call
inc
push
int
adc
cmpsb
jne
add
dec
xor
addr16
pop
outsl
in
sub
repnz
xchg
mov
ja
sahf
insb
pop
sub
mov
rcrl
xorb
int
dec
in
enter
fcmovnb
push
push
pop
aas
cld
xchg
push
testl
mov
test
out
jns
call
insb
cld
out
push
cmp
fwait
int3
out
scas
inc
mov
mov
cld
insb
xchg
sbb
arpl
cmp
rcpps
pop
out
test
ret
imul
dec
fcomps
inc
int
mov
test
sbb
inc
aad
xchg
or
mov
dec
arpl
sti
jnp
push
das
or
icebp
xchg
fnstcw
add
fistl
nop
orl
imul
xchg
imul
xor
jecxz
mov
in
xchg
or
or
mov
mov
pushl
in
mov
xchg
in
pop
adc
jo
jg
or
sbb
xchg
inc
add
mov
pop
xchg
pusha
xchg
inc
or
cltd
jae
rclb
pop
push
lock
shlb
scas
imul
cmp
psubq
and
inc
sub
sub
mov
adcl
mov
cmp
xor
enter
dec
gs
push
or
dec
push
xlat
cmp
sbb
rcrb
jns
jmp
mov
jp
fsubrl
sbb
insb
push
xlat
xchg
xchg
xchg
mov
imul
jecxz
movsb
xorb
or
adc
loopne
nop
xor
fidivl
jmp
pop
enter
lcall
or
push
test
fists
out
xchg
cmp
lahf
xchg
lcall
add
xor
push
sbb
mov
pop
std
je
adc
jp
popl
call
xchg
pop
bnd
pop
rorb
loope
in
packsswb
es
daa
cwtl
mov
mov
imull
pop
loope
lods
fs
fistpl
jo
bound
xchg
jo
arpl
testb
test
test
cmp
push
and
es
mov
movsl
cmp
jle
aas
sbb
pop
and
xor
lods
mov
insb
xchg
inc
cmpsl
cltd
push
shl
cli
sti
nop
dec
popf
int
xlat
or
inc
fists
pop
stos
insl
ret
shrb
inc
pop
mov
cmp
daa
popa
or
fdivl
out
aaa
pop
outsb
lahf
test
dec
out
push
fwait
rcll
xor
jmp
sub
int3
xchg
mov
jae
mov
jo
mov
push
jb
mov
clc
lahf
cmp
push
xchg
push
pusha
js
jns
dec
xchg
xor
lock
mov
adc
pop
rolb
cmc
movsl
ds
adc
inc
pop
dec
ret
rcrl
in
mov
pop
inc
dec
pop
jp
xchg
or
or
sbb
xchg
and
sub
mov
jno
jnp
jmp
xchg
sbb
adcl
mov
or
add
in
stos
xchg
insb
pop
sbb
cmp
add
aas
push
xor
je
movsb
repnz
push
cld
jns
rorl
mov
sbb
rol
shr
add
inc
dec
adc
mov
push
push
and
sbb
inc
das
scas
and
jmp
and
movsb
fisubl
bound
dec
cmp
outsl
ljmp
out
or
push
in
mov
cltd
cltd
clc
pushf
jg
sbb
mov
lds
dec
scas
cmpsb
cwtl
sbb
je
pop
cmovae
dec
push
stc
push
or
lock
faddp
add
pop
pop
dec
je
les
pop
xchg
and
xor
ret
nop
popa
add
inc
add
xchg
push
les
jnp
pop
cs
nop
mov
push
mov
cmp
lock
mov
mov
pop
test
inc
lret
sub
lds
lret
cwtl
movsl
mov
fs
sub
mov
dec
fs
or
nop
ret
test
fwait
add
sbb
xor
mov
imul
inc
sbb
call
xor
jl
lahf
and
out
aam
xchg
pushf
cmp
jno
sbb
mov
add
stc
add
xchg
cld
lcall
xchg
inc
lds
jae
mov
pop
movsb
ja
stc
test
test
push
cmp
push
pop
sub
aad
pop
add
das
lock
xchg
insb
popf
mov
fsts
test
xchg
jg
pop
call
inc
pop
mov
fstpl
push
dec
movl
xchg
jbe
test
repz
xor
nop
push
push
push
cmp
loopne
pop
xor
xor
aas
cltd
lods
adc
mov
add
aam
stos
imul
jle
aaa
pop
mov
in
cmp
jnp
jne
shl
push
ret
and
pop
sbb
jnp
pushf
cmp
cmp
inc
inc
shr
cmpsb
ficoml
std
test
jno
add
out
mov
pop
cmp
and
xchg
jg
lods
rcll
xchg
aas
pop
mov
add
out
ret
inc
xor
repz
cwtl
or
mov
js
dec
dec
inc
int
arpl
imul
stos
loopne
test
scas
sti
shlb
add
and
sub
sbb
fcomi
add
mov
mov
repnz
cmpsb
das
in
adc
fsubrs
icebp
lds
cmp
ljmp
je
aas
adc
sahf
ja
out
inc
mov
scas
add
sub
lods
or
stos
mov
fimull
pop
sbb
test
cld
out
jne
call
jno
sbb
sub
clc
ja
sub
js
shrb
es
mov
xor
xchg
andb
lret
ret
popf
xchg
adc
jnp
std
lods
in
hlt
and
lds
into
push
push
push
inc
ret
mov
inc
imul
into
jo
ja
fwait
sti
jmp
push
mov
out
jae
mov
xlat
adc
or
mov
test
pop
inc
mov
rcll
jle
push
frstor
pop
lea
cmpl
mov
insb
xchg
fisttpll
cli
es
or
pop
test
cmc
cmp
pop
movsl
into
fmul
xchg
ror
gs
mov
jae
cli
and
add
int
insb
popf
int
lcall
mov
push
add
fldcw
out
push
adc
std
addr16
std
es
xchg
sub
jp
pop
out
jns
cmp
cmp
sbb
mov
lahf
gs
mov
mov
inc
enter
or
dec
inc
lock
shl
push
fsubl
imul
push
daa
in
fisttpll
int3
test
xchg
addr16
jmp
jl
lods
shll
dec
rcrb
mov
int3
shlb
ret
lcall
mov
mov
aas
xor
mov
ret
xchg
pop
sbb
dec
imul
je
ja
jns
sbb
cli
push
or
jp
add
pop
pop
add
sub
and
adcl
push
push
pop
inc
fsubrl
cwtl
xchg
add
ljmp
cltd
pop
in
inc
div
shrb
or
repz
inc
cwtl
int3
fildll
cmpsl
cmp
jno
jle
in
fiadds
mov
add
cmove
icebp
ss
jno
es
loope
add
popa
clc
dec
sub
mov
sbbl
loope
aas
add
dec
ror
aaa
out
pushf
xchg
push
adc
fcomp
push
xchg
dec
push
cmp
ljmp
sbb
ror
push
js
cwtl
aas
daa
movsl
test
sub
orl
imul
not
in
mov
jbe
jmp
mov
ficoml
push
push
repz
xchg
mov
pop
xchg
add
and
lret
rolb
fimull
sbb
xor
nop
clc
mov
sahf
les
sub
mov
outsb
sbb
sbb
jo
inc
out
jp
adc
push
icebp
cmp
in
or
jmp
inc
xor
jbe
mov
int3
sbb
push
push
mov
repnz
sarb
xchg
pop
mov
hlt
mov
xchg
adc
jmp
ja
enter
dec
scas
hlt
fs
push
mov
sbb
pop
scas
dec
movsl
and
cmpsb
cmp
lds
dec
or
flds
mov
shrb
addl
ss
in
cwtl
nop
icebp
cwtl
dec
sbb
push
xor
popa
sub
scas
dec
and
jne
dec
es
jl
mov
lret
xchg
adc
test
std
mov
in
pop
adc
mov
scas
fldln2
stc
decb
ds
cld
mov
rcrl
push
cmp
push
cmp
pop
and
jmp
cltd
add
fisttpl
dec
sahf
sub
shr
push
pop
sub
inc
lds
push
add
sbb
in
mov
insl
inc
push
xorl
mov
mov
add
aas
insl
fidivs
push
das
xor
mov
push
adc
outsl
ss
sbb
inc
out
in
pop
jge
push
mov
dec
jmp
and
das
mov
and
imul
pop
scas
xlat
jl
push
push
push
pushf
nop
lods
push
or
jae
cli
push
or
ret
sub
mov
xchg
sub
jmp
dec
dec
xchg
iret
rolb
shrb
xchg
popf
add
inc
cmpsl
icebp
sbb
aad
dec
xor
out
adc
mov
sbb
jbe
mov
jb
test
gs
roll
fwait
mov
jp
mov
push
arpl
pop
stc
adc
imul
push
xor
pop
out
sbb
and
push
push
or
ja
and
push
and
add
pop
das
mov
aas
popa
xchg
or
push
sub
jge
adc
loop
mov
jb
mov
and
and
aam
das
out
pusha
lock
inc
lret
je
shrb
jno
jmp
jge
jae
dec
mov
gs
cmp
dec
imul
mov
dec
std
inc
sub
aad
stos
lods
jg
adc
outsb
xor
sbb
sbb
xor
int3
out
out
addl
out
repz
pop
cld
sbb
int
cmc
test
sarb
jns
std
fldenv
mov
test
inc
add
js
mov
mov
lret
fiaddl
sbb
movsb
leave
ss
jb
loopne
xchg
and
cmp
pop
mov
adc
jge
mov
sub
add
cmp
sahf
icebp
pop
sub
les
jnp
notl
lea
xor
cli
mov
pop
adc
dec
test
mov
sbb
cli
mov
push
cmp
test
sahf
jg
jp
push
fmulp
aad
scas
xchg
mov
rolb
popf
repz
stos
push
mov
repz
mov
push
cmc
pop
xchg
add
orl
xor
mov
dec
xor
inc
out
scas
aaa
sub
iret
mov
ret
mov
inc
adcl
jecxz
inc
gs
dec
es
mov
mov
adc
and
cmp
add
add
pop
mov
outsb
out
outsl
push
jo
push
daa
cmpb
in
xchg
fcos
rcrl
sahf
xor
jno
push
test
xchg
in
addr16
push
push
out
ret
dec
ret
scas
or
sbb
push
fwait
cs
lods
jg
jb
pop
dec
ffreep
jp
mov
adc
gs
mov
std
sbb
pop
insb
and
mov
xchg
dec
scas
js
cmp
test
addr16
stos
mov
inc
jns
arpl
repz
icebp
cmpsl
adc
inc
xlat
push
adc
sub
fnstenv
ja
sbbl
mov
mov
jno
dec
mov
fiaddl
jae
aaa
and
cmp
pop
subb
iret
lea
fdivr
lock
insl
mov
sbb
sub
jl
or
test
aad
cltd
cmp
lods
into
mov
jmp
test
dec
mov
push
mov
mov
inc
fs
mov
arpl
stos
int
mov
xchg
movsb
scas
mov
mov
inc
cmp
lods
in
adc
pusha
adc
cmp
out
mov
cmp
push
jle
jne
jecxz
cmp
aaa
jo
jb
dec
or
sbb
and
into
and
add
stos
mov
cmc
push
xchg
mov
std
lcall
dec
fcompl
bound
stos
mov
and
aas
outsb
loop
add
imul
xchg
ret
das
pushf
cltd
push
out
cmp
dec
pop
testl
addr16
sub
cmpsb
cwtl
ret
cltd
aam
sub
sbb
inc
xchg
fdivrs
cltd
xchg
cmp
jbe
add
adc
push
or
or
mov
dec
aaa
and
je
inc
mov
cmp
sbb
push
mov
cwtl
test
clc
aas
and
or
aaa
dec
lret
sub
adc
sub
push
mov
pop
jns
les
mov
and
mov
jge
inc
ret
jns
pop
scas
cmc
idiv
in
jmp
icebp
fnstcw
imul
add
sbb
inc
loop
push
repz
out
dec
imul
mov
xchg
fs
push
xor
push
shlb
dec
ja
andl
call
dec
dec
mov
je
xor
inc
es
and
xor
mov
mov
xor
sub
je
cltd
into
js
sbb
mov
mov
and
inc
daa
mov
pop
je
imul
jmp
ljmp
fldcw
int
adc
lea
jae
in
inc
sub
jo
icebp
aam
cmp
inc
outsb
jns
mov
sub
inc
xchg
jno
adc
divb
nop
add
add
dec
inc
and
lret
or
jmp
adc
mov
outsb
mov
mov
adc
sbb
movsl
and
iret
sbb
lods
fdivrp
int
pushf
jl
jl
mov
mov
stos
push
and
int
bound
outsl
in
xchg
jmp
push
lock
and
ret
mov
jb
sub
daa
ret
adc
clc
dec
mov
sbb
ja
pushf
inc
jbe
dec
sarb
fwait
jno
lea
dec
hlt
sahf
loopne
jns
add
std
mov
pop
mov
std
or
test
inc
into
mov
arpl
aam
repnz
lret
add
push
test
lret
call
sub
and
pushf
adc
add
push
and
sbb
mov
out
dec
lds
push
rorb
fcoml
mov
stc
or
ss
into
cmpsl
mov
rol
inc
mov
es
daa
in
hlt
fsubrs
in
mov
int3
aam
sbb
sbb
sbb
mov
jnp
cld
ret
in
add
sub
mov
mov
in
rorb
aam
rorl
adc
cs
mov
sub
mov
inc
xchg
pop
pop
loope
sub
jge
xchg
dec
mov
dec
ror
int3
shlb
lods
in
movsl
cld
repz
pop
sub
mov
aad
mov
mov
daa
shld
std
repz
push
jnp
enter
lods
mov
sub
int
mov
add
call
popa
mov
sub
xchg
pop
add
pop
xor
int
sbb
data16
xchg
lea
and
mov
rorl
push
push
mov
std
dec
cs
cmpsb
loop
in
sbb
ss
cmp
cwtl
mov
out
add
jl
iret
push
pop
das
imul
sbb
int3
sbb
jmp
lds
jo
hlt
add
and
push
pop
arpl
aaa
mov
sbbl
or
and
adcb
jne
scas
ja
pop
sahf
bound
xor
sub
fwait
push
lock
jle
add
scas
push
fidivrl
rcll
and
popf
out
push
aaa
lcall
fs
pop
xor
jne
fwait
mov
mov
cltd
or
dec
xchg
xor
scas
out
dec
bound
mov
repnz
xchg
orl
push
mov
subb
jle
js
fisttpl
repz
mov
mov
dec
pushf
test
lret
mov
setbe
jae
push
xchg
faddl
sub
neg
movsl
lds
in
test
mov
es
scas
mov
add
xchg
mov
pop
xchg
mov
ret
fcmovbe
mov
nop
xor
in
lret
repz
push
aaa
aad
sbb
dec
cmp
push
dec
xchg
ds
xchg
or
add
add
js
adc
cmpb
sub
in
add
or
mov
movsb
dec
pop
fnstcw
into
orl
mov
dec
es
in
cltd
das
jns
cli
or
mov
mov
and
test
pop
scas
mov
jg
lret
sub
sub
inc
xchg
shrl
jecxz
jnp
cmp
or
in
mov
scas
mov
lock
jecxz
stos
pop
sub
push
repnz
movsb
sub
fcompl
ret
sbb
lock
shlb
aam
adcb
jmp
nop
js
sbb
lret
mov
add
mov
push
sahf
sub
rorl
xor
jecxz
add
movsb
and
cmp
cmpsb
mov
sub
faddp
sub
fisubrs
jo
daa
mov
test
mov
icebp
jb
arpl
lea
adc
dec
or
jge
imul
loopne
add
fsubrl
mov
xchg
daa
adc
add
sbb
sub
cld
in
xchg
pop
lcall
scas
inc
xor
push
cmp
sub
dec
mov
push
cltd
pushf
pop
repz
rol
mov
jge
pop
repz
divl
push
xchg
dec
dec
push
pop
or
pop
aam
jp
mov
repz
icebp
pop
outsb
test
scas
add
add
daa
jbe
cmpsl
fdivrs
mov
orl
clc
xor
inc
lcall
adc
lods
dec
and
jecxz
js
inc
push
inc
movsb
icebp
pop
cmpsb
sub
dec
push
pop
outsl
adc
bound
mov
mov
push
imull
aad
gs
bnd
in
outsl
xchg
loope
icebp
pop
and
int3
push
aaa
out
cmpsl
push
mov
rclb
sti
scas
xor
adc
add
inc
fisubrs
mov
test
into
imul
xchg
jno
cmp
loopne
jne
inc
cmp
mov
lods
xchg
cmpsb
rcll
xor
fists
lret
add
sub
sahf
incl
add
sub
xlat
mov
lods
jmp
mov
mov
fadd
sub
cmpsb
sbb
stos
leave
xchg
push
mov
jo
cmp
scas
jle
popa
jg
pop
sub
lods
je
pop
into
cmpsl
push
test
lds
std
adc
ja
push
jl
hlt
leave
or
pop
lea
test
out
outsb
xchg
std
clc
mov
dec
out
test
clc
jp
nop
daa
lcall
and
sub
adc
cmp
pushf
call
loopne
inc
and
and
lcall
mov
int3
add
int
ret
pop
pushf
movsb
push
and
pushf
hlt
fbld
mov
mov
mov
mov
incl
loop
shll
addr16
adc
jae
pop
test
cltd
xchg
xchg
es
mov
push
faddl
mov
jmp
dec
xor
xlat
inc
lods
sub
shl
mov
and
ja
xchg
sub
das
cmp
inc
sbb
or
fisttps
das
adc
mov
push
push
pusha
jge
dec
dec
push
adc
pop
xor
mov
xchg
inc
mov
jg
outsb
call
inc
int
rcrb
fwait
mov
lea
subb
iret
cs
fxch
xor
dec
outsb
repz
dec
lret
xchg
mov
int3
mov
sti
leave
adc
sbb
push
push
push
xchg
es
jb
add
jecxz
pop
jae
imul
mov
lret
mov
pop
test
or
xchg
faddp
adc
int3
loopne
pop
into
iret
loopne
xchg
cld
shrl
jae
out
test
add
adc
nop
js
cltd
jo
add
ret
filds
pop
test
mov
leave
popa
adc
add
decl
movsb
adc
mov
mov
mov
repnz
cmp
movsl
jg
pop
dec
sub
add
dec
js
xchg
fsubp
ja
mov
jo
sar
insb
sub
outsb
cld
das
adc
dec
pop
bound
stc
cmp
push
scas
xor
movsb
aad
cltd
dec
pop
push
imul
addr16
fldt
push
sub
jnp
pusha
out
mov
sbbl
xor
mov
mov
cli
fs
and
mov
dec
popf
inc
aad
ret
lock
shl
mov
cltd
push
outsl
xchg
mov
mov
decb
xchg
daa
jmp
in
adc
mov
pop
dec
mov
jb
jne
pop
push
dec
shl
testl
or
push
pop
shll
and
push
sahf
xorb
adc
aad
pushf
sub
push
popa
dec
je
lds
jns
mov
cmp
scas
jge
cwtl
nop
jl
popa
mov
push
ds
adc
pop
ds
out
in
popf
or
test
repnz
and
insb
fcompl
mov
cltd
sub
mov
dec
icebp
loopne
lock
sbb
sub
xchg
cltd
push
xor
movsb
dec
ret
cmp
cld
cmp
cld
mov
adc
int
iret
push
add
mov
and
icebp
nop
adc
jge
mov
jns
enter
mov
xor
xchg
loop
dec
mov
mov
imul
aaa
insb
or
pop
nopl
aam
and
mov
xor
popa
outsb
xor
clc
inc
sub
fstps
mov
xchg
cmp
cwtl
arpl
mov
daa
ds
inc
mov
inc
movl
je
iret
push
adc
pop
adc
cmpsb
cmpsl
jle
jg
leave
lret
repnz
ret
xchg
add
xchg
inc
pop
subl
sub
and
dec
or
fcmovne
ds
cld
lcall
arpl
cli
jecxz
jmp
aaa
mov
xor
stc
mov
add
xchg
fidivs
mov
insl
sbb
xor
pop
cmpsb
mov
xor
or
sbb
enter
sahf
mov
sbb
push
lds
in
andb
or
and
xor
subb
inc
fisttpl
scas
loop
push
rorl
cmp
mov
jge
jecxz
outsl
xchg
jmp
in
dec
add
ret
sahf
cmp
outsl
outsb
mov
adc
in
icebp
sub
jmp
arpl
xor
dec
stos
aaa
inc
jnp
pop
fstl
imul
or
mov
dec
lods
pop
inc
sub
ret
pushf
das
cmc
inc
push
fdivrs
sub
mov
xchg
xor
and
ror
outsb
push
jl
inc
je
pushf
inc
into
adc
cmp
add
sub
ds
insb
int3
and
lahf
sub
pusha
xchg
sbb
lahf
push
mov
fstps
adc
inc
das
sub
movsl
cmp
xor
push
dec
sbb
push
adc
mov
sbb
push
xchg
xor
das
lock
sbb
pop
push
gs
sub
bound
adc
imul
inc
lcall
pop
cld
adc
mov
aam
insb
addb
arpl
or
mov
movsb
dec
mov
test
sbb
xchg
lea
in
negl
pusha
mov
dec
ja
outsl
sbb
loopne
adc
imul
dec
sub
loop
adc
out
fwait
pop
int
cmp
pushf
jo
dec
fst
jb
fsubrl
sub
leave
adc
call
inc
pop
xorl
pop
dec
lahf
xchg
pop
fs
lods
call
mov
sbb
ret
or
nop
jl
adc
jno
pushw
insb
or
fwait
push
out
leave
jo
inc
fld
pop
pop
fsubr
or
push
xchg
test
push
mov
es
mov
adc
mov
scas
insb
sbb
roll
mov
movsl
clc
stos
sub
mov
mov
add
icebp
xchg
add
movsl
mov
and
hlt
les
dec
mov
push
insl
mov
add
fisttpl
pop
jae
test
mov
divb
sbb
dec
pop
jmp
hlt
jp
scas
pusha
repnz
inc
sbb
dec
ds
popa
std
sti
mov
lret
pop
jo
not
inc
mov
shlb
dec
inc
fisubrs
mov
mov
sarb
test
and
out
jb
std
cmp
shrb
ja
and
rcrb
pop
lcall
outsl
xor
lcall
sysenter
shrb
fld
ret
mov
cmp
jae
xchg
add
js
lret
lret
cs
out
mov
js
or
loopne
in
fidivrs
push
push
jno
push
hlt
add
jns
loopne
inc
imul
xor
sbb
and
pop
jg
dec
lret
rol
cmp
mov
int3
lcall
adc
pop
repz
push
cmp
mov
or
lods
cmp
imul
outsl
sbb
sub
jecxz
and
sub
push
hlt
in
repnz
jns
out
pop
and
push
add
push
lahf
clc
stos
movsb
add
ljmp
jns
xor
push
jae
pushf
int3
sub
cld
mov
add
mov
test
cmp
push
repz
jg
shlb
sub
and
jns
or
lds
mov
lahf
cs
mov
mov
lret
jnp,pt
call
push
shll
inc
mov
loope
addb
mov
out
xor
inc
in
sub
cli
dec
cmp
repz
push
mov
jg
mov
adc
fcom
sbb
shl
stos
test
scas
dec
lcall
pmulhw
fbstp
pop
adc
dec
sub
mov
mov
loope
cmp
loope
fidivrl
or
jnp
fldcw
cmp
ret
add
in
inc
dec
and
gs
jl
mov
addr16
push
lahf
mov
stos
pop
sbb
xchg
fdiv
outsb
dec
inc
in
xchg
adc
mov
cmp
cmp
lahf
aaa
outsl
pop
adc
leave
jmp
xor
pop
mov
xchg
push
dec
cmp
cmp
dec
mov
in
push
jno
push
or
call
xchg
stos
or
shlb
push
pop
xchg
or
pop
sbb
in
cmp
dec
pushf
adc
pop
pop
pop
movsl
aaa
dec
ror
add
sbb
push
pop
test
stos
pop
add
xchg
sub
fimull
pop
out
push
push
xor
mov
push
mov
jbe
lret
aad
fistps
adc
test
repz
or
dec
sbb
lock
je
stos
xor
aam
cs
cmpl
lods
lea
mov
cmp
ret
or
das
mov
jl
dec
jns
ficomps
cmp
xor
cli
mov
insb
cmp
shrl
movsl
cs
mov
cmpsl
and
mov
inc
pop
xchg
sbb
xor
mov
insl
mov
loopne
mov
data16
cmpsb
xchg
sub
fbld
inc
push
mov
aas
aas
pop
push
push
sub
sbb
jo
mov
out
xor
ret
push
into
lds
into
fsubrl
movsb
mov
cli
push
add
inc
cmpsb
outsb
mov
adc
into
js
or
cmp
scas
push
lods
mov
fstl
lahf
cmp
xchg
pop
jo
or
inc
jb
call
int3
inc
push
js
lea
arpl
mov
inc
sti
or
fcoms
dec
mov
sub
add
push
inc
mov
mov
mov
jge
in
add
iret
cs
xchg
lods
cs
mov
push
jle
push
aas
mov
movsl
xchg
cmpsl
sub
sub
movsb
inc
push
dec
cld
rcr
push
pop
dec
mov
repz
pop
push
inc
fnstenv
and
sbb
dec
cli
mov
add
mov
out
and
mov
js
pusha
xchg
cltd
xor
xor
push
cmc
pusha
sbb
pop
ficomps
xor
jno
ds
push
push
inc
into
adc
fbstp
push
mov
clc
test
lods
inc
sahf
pop
cltd
inc
mov
fdivrs
mov
aad
sbb
inc
pop
mov
xchg
pop
ret
adc
ror
sbb
cmp
sbb
gs
sbb
subb
add
sub
insl
xchg
dec
insb
pop
in
jmp
repnz
dec
jge
insb
sub
pop
adc
fwait
cmp
cld
pusha
call
adc
and
xchg
and
inc
pop
adc
ficoml
xlat
js
sahf
divb
lds
xchg
mov
push
fists
xchg
lods
mov
imul
fldenv
insb
in
jo
xchg
inc
and
sahf
pop
adc
inc
stos
cmp
ds
in
je
inc
clc
xlat
sbb
pusha
loope
scas
insl
orl
fmull
fisttps
xor
shll
push
outsb
or
lods
and
lds
sbb
js
les
mov
movsl
and
mov
movsb
xlat
mov
and
jg
inc
and
xlat
sbb
iret
cmp
call
imul
mov
mov
xchg
add
xchg
mov
stc
aas
inc
ret
mov
mov
inc
movsl
sbb
push
xor
and
cld
or
mov
int
outsl
pop
add
adc
xchg
rorb
add
push
mov
mov
cmpsl
testb
inc
mov
inc
push
mov
dec
push
cmp
imul
stc
jbe
aaa
sti
fmuls
or
cmp
jl
lods
xchg
mov
bound
dec
add
add
dec
pushl
mov
fstpt
jp
test
cmpsb
lock
add
imul
xchg
adc
aad
cmc
dec
sbb
pop
shr
mov
adc
mov
clc
sub
leave
ljmp
xchg
and
sbb
mov
mov
jo
cld
pop
push
std
out
push
mov
addl
mov
xor
mov
cmp
je
fimuls
icebp
scas
or
jge
or
cwtl
dec
inc
lods
adc
daa
mov
loop
sahf
sbb
push
jg
mov
sbb
xor
les
inc
sbb
or
dec
xchg
in
gs
out
in
arpl
into
and
add
es
lret
cmp
xchg
xor
sahf
repnz
xchg
adc
fwait
adc
stc
cs
test
out
addr16
ds
hlt
push
movsb
icebp
loopne
mov
mov
scas
mov
adc
out
xor
cmp
mov
jge
mov
dec
push
or
fmul
or
shl
jae
fstps
ja
stc
dec
cld
jnp
adc
jne
jg
jmp
ret
sub
cwtl
mov
xor
arpl
fnstsw
insb
mov
dec
dec
cmc
scas
andl
sbb
rcr
rdmsr
push
mov
pop
cltd
lds
stc
aam
mov
adc
mov
sbb
mov
pop
inc
xchg
adc
fwait
loop
jmp
cmpsb
mov
flds
inc
sarl
lahf
outsl
push
jmp
bound
out
sbb
in
jg
pslld
es
sahf
ja
int
mov
xlat
xchg
pop
fstpt
push
push
scas
cld
mov
push
add
inc
ds
sti
cmp
pop
xchg
jae
loop
loop
aas
adc
mov
scas
mov
pop
addr16
leavew
nop
das
lods
and
fwait
mov
xor
pop
lret
mov
stos
and
xor
or
dec
das
mov
das
insl
add
inc
and
dec
push
adc
hlt
sub
lahf
imul
sub
leave
aas
scas
dec
data16
ficompl
imul
aaa
push
jnp
pop
in
cmp
out
imul
loope
xor
mov
push
sbb
shrb
or
or
aad
sub
mov
pushf
inc
out
mov
cmc
loop
mov
into
xlat
divl
sub
mov
mov
mov
hlt
jb
scas
cmp
sub
mov
pop
sbb
loop
pusha
pop
out
mov
mov
hlt
icebp
mov
out
jo
lea
orl
xchg
dec
add
jns
add
jnp
xor
jbe
sub
dec
pop
add
sbb
xabort
test
push
movsl
loopne
out
lcall
or
and
push
leave
push
fsubp
out
adc
jo
and
fsubrl
push
sub
jl
cwtl
gs
jb
cmpsb
sbb
sbb
mov
jnp
jmp
aad
adcl
cmpsl
shll
lret
mov
out
sub
pushf
out
inc
test
dec
inc
pushf
ficompl
data16
stc
jbe
xor
lret
inc
or
push
in
jo
fs
cmp
imul
ja
and
push
movsl
dec
lds
aad
outsb
es
xor
testb
or
xor
cs
fisttpl
xchg
sbb
xchg
fwait
rorb
or
xor
or
lahf
stos
out
mov
aad
lret
push
add
mov
arpl
jmp
repnz
adc
jecxz
cmpsl
cli
sbb
cwtl
mov
add
dec
cmp
jg
je
incl
scas
mov
sbb
jl
jb
lcall
xchg
jns
repz
and
jmp
lret
dec
fbstp
ret
dec
pop
mov
aad
syscall
xor
dec
cwtl
inc
xchg
call
in
mov
insl
imul
out
lods
push
icebp
clc
les
in
lds
stos
jge
or
out
les
cs
mov
pushf
push
pop
leave
cmpsb
pop
ljmp
add
sti
cmpsl
test
mov
js
pop
adc
or
lret
rclb
mov
jmp
in
pop
lock
jg
push
hlt
jl
xor
or
das
jecxz
dec
scas
push
mov
ljmp
inc
cmc
enter
addr16
push
pop
add
push
cmp
aad
fbld
jne
inc
lods
insb
fnstenv
cltd
or
scas
popa
enter
fwait
shll
cli
sbb
cmpsb
push
call
or
js
fcmovnb
int
adc
daa
repnz
sub
add
add
xor
lock
gs
imul
jbe
adc
push
xchg
cld
cltd
cmpsb
sbb
xorb
sti
or
outsb
ljmp
mov
testb
nop
pop
repnz
cmp
jle
sub
inc
inc
pop
negb
loope
add
pushf
test
push
dec
dec
cmp
jmp
pusha
adc
sbb
hlt
xor
pusha
je
mov
sbb
hlt
repnz
inc
stos
pop
push
pcmpgtb
popa
in
jne
loope
or
xchg
ror
sub
shrb
cmp
aam
mov
jno
ret
stos
push
stos
mov
aad
or
inc
inc
stc
sbbl
mov
shrl
mov
or
imul
xchg
insl
pusha
aaa
into
mov
cltd
imul
out
sub
movsb
mov
xchg
fiaddl
mov
movsl
aaa
mov
push
cwtl
add
out
sbbl
clc
pop
cmp
or
inc
push
lcall
push
lret
mov
and
std
push
pop
sti
sbb
pop
xchg
test
stos
bound
mov
dec
sbb
ret
sti
popf
dec
mov
roll
adc
xchg
inc
shlb
gs
je
rcr
roll
cmp
inc
addr16
adc
adc
jne
call
adc
in
cwtl
pop
mov
mov
sbb
movsb
data16
icebp
mov
cmp
inc
push
dec
dec
cmp
sti
loop
add
and
push
addr16
push
aas
inc
stos
repz
movaps
adc
mov
scas
push
in
and
outsb
repnz
lret
adc
sub
bound
stc
lock
int
test
push
sbb
jno
roll
sahf
push
xchg
insb
pop
in
mov
push
repz
or
mov
mov
lahf
insb
xchg
insl
and
das
mov
inc
pop
pop
mov
xchg
mov
sub
sbb
daa
mov
push
pop
fidivs
adc
add
jge
xchg
push
xchg
push
push
rcrl
jecxz
ss
lea
insb
ret
cmp
clc
stos
mov
incl
push
mov
sub
or
imul
lock
xchg
popa
inc
je
bound
cmpsl
jnp
outsl
jmp
jno
test
inc
and
or
in
or
and
stc
lcall
std
push
lods
xor
push
ljmp
dec
pop
rol
repnz
or
jmp
inc
js
mov
rcll
ror
xor
.byte
.byte
push
insb
.byte
mov
test
or
add
test
or
add
stos
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
lock
add
add
add
incl
add
add
repz
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
cli
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
or
add
add
add
incl
add
add
dec
add
add
add
sbb
add
incl
add
add
add
add
incl
add
add
daa
dec
add
add
add
incl
add
add
sub
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
xor
dec
xor
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
cmp
and
dec
add
lcall
dec
add
dec
add
incl
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
incl
add
add
add
incl
inc
dec
add
lret
dec
add
jmp
dec
add
push
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
pop
dec
add
add
add
sti
pop
dec
add
pop
dec
add
add
add
incl
dec
add
dec
add
inc
popa
dec
add
popa
dec
add
lds
je
dec
add
rorl
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
gs
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
push
add
incl
add
add
push
add
incl
add
add
imul
incl
add
add
dec
add
add
add
incl
add
add
insl
dec
add
add
add
incl
add
add
dec
add
add
add
jmp
outsb
dec
add
outsb
dec
add
jmp
outsl
dec
add
in
outsl
dec
add
outsl
dec
add
incl
jo
add
dec
add
jmp
jo
add
pushl
jo
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
ja
add
add
add
incl
add
add
js
add
ljmp
dec
add
add
add
add
push
stos
or
add
or
add
test
or
add
stos
or
add
or
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
andb
call
inc
into
jns
pusha
or
icebp
mov
mov
and
mov
push
add
out
mov
leave
subl
repnz
movsb
dec
jne
push
jbe
xchg
es
inc
imul
mov
pop
xlat
and
push
mov
add
pop
repz
flds
js
shll
les
xor
es
mov
cmp
fmull
stc
jle
repz
decb
sbb
inc
sbb
lahf
pop
fistps
les
pop
mov
fwait
lods
inc
data16
add
sub
in
lea
repnz
jmp
push
les
pop
imul
jge
lds
sar
or
sbbb
adc
int3
sbb
in
mov
fs
aad
add
movsl
mov
je
nop
pop
adc
ret
mov
imulb
adc
push
sub
sub
aaa
jg
clc
push
push
sub
leave
add
adc
hlt
mov
dec
or
push
jl
or
and
cli
hlt
sub
adc
and
add
movb
inc
sarb
rclb
or
repz
mov
or
mov
xchg
pop
fucomi
clc
mov
add
andl
xor
mov
xor
test
out
loopne
pop
loop
fists
sub
fists
icebp
sub
clc
repnz
ljmp
clc
out
dec
add
mov
adc
push
mov
lock
in
mov
push
pop
stos
in
lret
xadd
inc
out
inc
in
aaa
lret
stos
test
imul
mov
and
adc
mov
mov
fldenv
sbb
cmp
test
pop
inc
inc
iret
pop
push
sbb
pop
dec
inc
repnz
pop
sub
dec
mov
std
sub
test
pop
fs
lret
movsb
lds
xor
inc
lods
imul
and
sbbl
xchg
lods
and
adc
mov
mov
mov
or
sub
test
xor
jmp
and
cmp
dec
dec
cmp
cs
mov
push
into
or
stc
jmp
orb
fsubs
cmp
jbe
lret
out
push
movsb
leave
pop
mov
inc
cmp
nop
xchg
cli
cmp
decb
sbb
iret
sub
loope
lret
cmpl
push
ss
in
mov
mov
add
xchg
ds
add
cwtl
sub
ljmp
notl
sub
std
call
inc
inc
adc
jecxz
or
les
orl
push
std
pop
shlb
in
add
jns
adc
jmp
sub
ficomps
test
xchg
gs
inc
sbb
push
or
in
hlt
cld
out
xlat
add
xor
frstor
fists
out
inc
add
and
mov
pop
mov
outsl
xlat
aas
cld
inc
adc
or
mov
cmpsb
cmp
jns
rcrl
push
cmp
and
movsl
xor
adc
xchg
adc
or
cli
jo
jmp
push
neg
cmp
jnp
arpl
inc
leave
mov
mov
inc
scas
in
out
cs
xor
cmp
idivb
pop
push
pop
jnp
jbe
out
out
push
scas
pop
inc
stc
sub
shrl
pushf
ret
in
sub
std
jle
int3
pop
add
dec
or
dec
fsubp
daa
ja
xor
loop
les
repz
add
push
xorb
stos
test
jmp
and
adc
popf
mov
aam
inc
xor
push
and
js
inc
sbb
aas
in
movsl
pop
xor
cmovle
or
add
ret
xor
inc
push
cld
push
dec
movsb
or
fwait
cmp
fbstp
jp
pop
adc
sbb
dec
mov
imul
int3
and
mov
lods
xlat
cwtl
imul
mov
push
push
mov
inc
loop
jp
push
pop
int
movsb
sub
push
pop
add
scas
lods
ja
or
pop
scas
ds
cli
ja
jmp
sbbl
add
push
cmpb
cmp
das
sbb
out
lahf
popa
or
insb
in
subb
xchg
or
sbb
sub
and
cmpsb
in
dec
inc
inc
movsb
xchg
pushf
outsb
xchg
pop
dec
adc
xor
pop
dec
mov
xchg
jae
xor
pop
fimull
ret
dec
dec
inc
or
mov
adc
xor
fmull
stos
ror
sub
xchg
movsb
inc
push
ds
sbb
push
ja
or
inc
mov
sub
add
imull
push
out
mov
sub
ret
pop
in
xchg
fsubp
cld
cmp
out
pushf
imul
std
pop
mov
pop
sbb
addb
xlat
xchg
jecxz
mov
adc
shlb
popf
mov
mov
rcl
jns
dec
outsl
and
add
sub
xchg
inc
enter
push
shrb
ljmp
xchg
pop
and
outsb
mov
orl
jl
imul
and
lods
lret
mov
hlt
mov
imul
das
jae
cmp
mov
imull
rcrl
add
cmc
cmp
xlat
sub
add
pop
aaa
mov
hlt
addr16
or
movsl
sub
cmp
mov
out
cmpsl
cli
and
cmpsb
pminsw
data16
pop
aas
mov
insb
out
fstps
xchg
icebp
cmp
pop
push
mov
mov
mov
std
xor
daa
test
dec
push
nop
insl
mov
enter
add
ds
out
mov
xchg
gs
cmp
adc
xor
sbb
jo
mov
jbe
sub
jl
pusha
lods
es
cmp
sub
jno
fmuls
fisttpl
sub
rol
push
out
push
out
jle
lods
adc
rcrl
dec
sub
hlt
jb
push
enter
insb
fs
aaa
push
push
lods
mov
mov
das
dec
pop
nop
push
filds
std
daa
sub
or
shlb
loop
inc
add
rolb
add
cld
imul
ja
sahf
cld
cmpb
cmp
jo
lods
jo
pop
mov
jo
popf
push
sahf
adc
add
dec
add
mov
pop
mov
pusha
adc
pop
fsubl
sbb
cld
and
sahf
xor
out
out
xorl
movsl
mov
fdivrs
xchg
outsb
mov
int
or
leave
jbe
mov
cmp
inc
pop
fimuls
roll
sahf
sti
add
push
lock
xchg
adc
ss
sbb
xor
test
inc
sbb
jle
jge
lock
adc
pop
sbb
adc
aaa
inc
vrcpps
jle
and
push
cmp
stos
mov
pop
stc
aaa
shlb
in
fisubl
sub
pop
mov
in
imul
mov
push
jmp
movb
int
mov
sbb
int3
push
mov
push
jb
out
mov
ficomps
fmulp
out
jg
cwtl
repz
stc
sub
shll
imul
cmp
nop
pushl
jbe
jp
outsl
cwtl
stos
insb
mov
adc
pop
mov
outsb
push
and
jge
jmp
mov
dec
adc
push
xor
push
add
es
aam
pop
cmpsb
cmp
mov
adc
mov
pop
push
cs
xor
int
push
mov
addr16
rclb
jbe
xor
stos
stos
pop
and
sbb
dec
inc
imul
sbb
roll
mov
cmc
leave
xlat
imul
inc
inc
cmpsb
outsl
gs
inc
inc
cmpsl
inc
rcr
xor
cmp
inc
testl
mov
stos
lock
inc
sub
push
push
mov
xorb
out
movsl
aad
dec
movsl
mov
push
push
js
mov
sub
cmp
daa
push
cmp
je
movl
mov
rcll
lcall
cld
push
fwait
scas
mov
mov
lahf
fmuls
jecxz
sub
add
sbb
adc
and
jecxz
mov
add
cltd
xlat
jl
push
test
dec
dec
js
aaa
xor
and
xor
adc
xchg
mov
das
cmp
stos
mov
xlat
inc
jbe
imul
stos
pusha
fcmovbe
xchg
into
xor
or
pop
or
add
cmp
cltd
outsb
lret
pop
jb
mov
cmp
mov
mov
shrb
lret
mov
das
push
mov
cld
mov
loope
sub
cmpsl
int
lcall
stos
inc
xor
ja
divl
xor
mov
mov
mov
sub
sarl
loop
cmp
dec
jmp
lcall
xchg
fmuls
lds
je
repnz
out
xchg
sub
fwait
mov
mov
mov
mov
sti
cmp
dec
adc
aad
mov
add
adc
xchg
decb
cmp
push
jb
mov
cmp
jb
lret
push
cmp
sbbb
jb
adc
jge
fimuls
ret
lret
lock
lock
pop
repz
andb
pop
and
jb
imul
std
dec
arpl
dec
fisubs
ljmp
sub
mull
movsl
jp
mov
arpl
sub
mov
rcll
insb
loopne
sub
lock
adc
push
pop
daa
arpl
aas
push
bound
push
mov
sub
mov
push
ret
or
mov
adc
and
add
xor
pop
xchg
pop
aam
test
pop
push
pop
lock
cmp
or
test
inc
int3
int3
push
data16
inc
js
xor
push
hlt
cld
scas
pop
fcoml
pop
jno
mov
sarl
sub
nop
jns
push
or
xchg
jae
loope
in
aad
push
mov
pusha
mov
in
test
push
inc
add
mov
jne
fdivl
push
and
subl
movsl
pop
mov
sbb
jns
mov
pushf
fldl
mov
jb
fs
jo
daa
rclb
in
dec
lahf
dec
dec
into
mov
fisttpl
lds
mov
and
sti
mov
test
cmp
pop
add
xchg
pop
loop
or
sub
fisubl
enter
add
adc
test
jmp
cwtl
scas
hlt
dec
push
int
or
mov
mov
outsb
das
ret
add
mov
sub
xor
pop
xchg
add
and
pop
std
into
repz
and
jl
fldz
fisubs
mov
arpl
repnz
push
pushf
jg
in
insb
push
mov
icebp
loopne
cmp
loope
xchg
out
in
jle
movsl
movsl
aas
push
test
adc
dec
xor
stos
repnz
mov
inc
mov
xchg
fldt
fimuls
scas
mov
sub
sti
inc
ss
xchg
push
fwait
cmp
cmpsb
inc
ret
pop
inc
dec
fwait
xor
andb
jno
out
push
leave
test
cmpb
sbb
inc
insl
sbb
bound
push
andb
jbe
inc
and
pop
and
xor
cli
or
test
in
in
dec
lock
jmp
mov
pop
dec
lea
and
push
shll
test
xchg
sbb
rclb
fbstp
loope
lea
hlt
imul
add
xchg
or
in
push
pop
mov
cmpsb
rorl
pop
and
enter
int
add
out
adc
fisttpl
sbb
adc
out
mov
cmp
jmp
lret
popa
push
jb
mov
jno
push
sub
movsb
jb
scas
mul
nop
xor
movsl
aad
mov
pop
xchg
stos
sbb
cmp
aas
or
xor
mov
clc
das
imul
xor
adc
mov
arpl
shr
out
jno
cmpsb
mov
mov
dec
into
sbb
mov
cmpsl
dec
loop
push
icebp
in
sub
mov
cli
mov
mov
push
in
jge
sbb
dec
jae
sub
fdivrl
push
dec
sarl
cmpsl
pop
mov
and
pusha
pop
ss
rorb
sub
mov
adc
jl
mov
mov
push
mov
inc
mov
in
push
pushf
stc
xor
in
lea
pop
daa
mov
les
inc
into
dec
sahf
adc
xor
inc
xchg
add
aam
and
rol
enter
mulb
xor
les
xlat
negb
pop
push
leave
mov
adc
mov
inc
ja
or
mov
mov
mov
sub
mov
pusha
jge
popf
sbb
leave
ret
pop
divl
adc
in
add
je
cs
xchg
jns
xchg
or
push
mov
out
aas
push
outsl
nop
jnp
fstp
sbb
sbb
xchg
pop
inc
das
hlt
add
in
jne
decl
aaa
into
push
shl
mov
and
xchg
mov
popl
int
adc
sbb
cmp
add
dec
lcall
mov
aam
imul
jnp
push
pushf
mov
cmp
pop
xchg
mov
lods
inc
lret
in
jne
mov
stc
test
in
ret
call
addr16
xchg
and
xchg
stos
arpl
mov
repz
mov
jne
shl
pop
xchg
adcl
jecxz
dec
mov
push
mov
outsb
mov
fiaddl
ret
negl
inc
and
sbb
inc
insb
mov
movsl
pop
cmp
mov
xchg
ja
jo
sbb
mov
dec
getsec
cmp
pop
cld
lret
stos
inc
ss
add
aas
cmp
jle
jo
test
movsl
out
xchg
out
inc
sbb
mov
mov
add
mov
sub
cmc
adc
add
adc
rorb
push
les
test
sub
lahf
iretw
push
test
xchg
rcll
pop
popa
sub
inc
pop
movsl
xlat
jb
sbb
push
lods
in
jp
pop
scas
pop
stos
or
int
jmp
jb
mov
sub
scas
fsub
or
inc
bnd
mov
enter
jg
mov
xor
cmp
mov
js
push
jns
lahf
pushw
xor
xchg
stc
rcl
movsl
mov
mov
inc
xchg
rdtsc
push
push
sbb
cmpsl
dec
in
scas
arpl
sbb
popa
add
xchg
imul
out
cmp
mov
aad
ss
dec
xor
inc
js
push
fwait
ds
dec
xchg
cld
pusha
xchg
loope
push
add
and
lret
fcomps
loopne
mov
js
shlb
stc
stc
jmp
or
xchg
in
scas
fildl
stos
arpl
push
mov
aam
inc
leave
xor
xor
inc
lret
lret
mov
push
push
dec
int
leave
and
jmp
in
xor
pushf
xchg
mov
jecxz
shlb
mov
xchg
jnp
fldenv
roll
add
imul
pusha
mov
aad
out
jbe
in
cwtl
mov
int3
mov
mov
daa
in
movsb
jl
jae
cmp
push
mov
jmp
xor
lret
push
mov
push
roll
xor
sub
andb
jnp
and
pop
cmpsl
mov
pop
dec
push
add
repnz
dec
lods
repz
xorl
sahf
sub
sbb
add
adc
push
cmpsl
dec
into
xor
cmp
shlb
dec
adc
test
adc
or
fbld
sbb
mov
and
pop
pop
fcoms
cmp
xor
out
mov
ja
repnz
loopne
test
test
hlt
mov
inc
mov
pop
or
mov
mov
mov
push
cmpsb
gs
lods
std
jg
mov
ljmp
mov
pop
sbb
pop
jge
test
and
out
loop
pusha
in
dec
add
mov
testl
fs
jnp
js
out
iret
fists
pop
dec
mov
xor
pop
lret
sbb
out
sub
xor
in
mov
xchg
xor
jmp
loop
fwait
xlat
divl
test
ja
push
mov
cmp
hlt
lret
inc
jns
push
jl
fidivl
arpl
xchg
xchg
pop
pop
xlat
test
stc
jno
jle
xchg
sbb
lods
int3
rcl
and
add
push
pop
data16
scas
inc
push
xchg
dec
insb
and
jg
in
pop
mov
scas
xor
scas
add
pop
adc
popa
mov
nop
test
jl
lea
sbb
rclb
pop
pop
and
and
mov
cltd
int
cli
or
in
jae
sub
mov
inc
jp
call
jbe
dec
cmp
cmp
cmp
pop
test
sub
stos
or
addr16
push
enter
pop
pop
jl
testl
inc
and
imul
cmp
into
jle
in
sub
xchg
mov
mov
push
push
popa
jle
jne
mov
fstps
xor
sub
cld
je
push
mov
push
mov
fcmovne
cmp
xchg
cmp
or
add
xor
arpl
dec
lea
loop
jge
add
inc
das
jno
into
dec
push
add
sti
cmpsb
xchg
jle
and
std
sub
pop
mov
lahf
mov
pop
or
inc
fsubl
je
or
xorb
cmp
out
add
lret
fs
mov
xchg
pop
cmp
fiadds
pop
push
jg
imul
pop
inc
sub
cmp
and
push
iret
pause
inc
pop
fistpll
out
iret
pop
sub
data16
mov
in
aad
pop
push
cmp
jl
inc
mov
mov
shrb
out
push
add
pop
int3
xchg
andl
dec
pop
lds
sbb
mov
roll
jbe
inc
repnz
fcoml
mov
adc
jg
adc
jo
je
addr16
xor
mov
adc
addl
shll
mov
aad
icebp
mov
or
repz
pushf
lret
jnp
xchg
loopne
pushf
shlb
jecxz
sbb
pop
in
mov
les
in
cwtl
add
adc
dec
push
hlt
mul
ljmp
shrl
imul
xor
cli
inc
or
push
jp
jae
and
movsb
movsb
xor
push
mov
ret
jbe
push
or
jp
mov
inc
movsl
cmc
adc
ret
adc
xchg
lret
ljmp
xchg
add
jo
dec
shl
pop
add
mov
sub
adc
aad
jge
loop
test
mov
mov
es
mov
cmpsl
mov
movl
insb
mov
jmp
mov
mov
xchg
mov
xchg
mov
pop
or
hlt
in
push
sti
cmc
inc
test
lcall
mov
mov
mov
xchg
and
mov
addl
pop
add
add
rorl
mov
bound
sbb
imul
push
in
movsl
ret
cmp
sti
loop
push
or
orl
mov
sub
and
das
jmp
xchg
jmp
xor
stos
xor
and
lahf
nop
dec
leave
adc
ss
stos
mov
sbb
push
jo
sahf
jb
mov
fwait
notl
mov
xchg
loope
pop
mov
and
dec
inc
popf
mull
imul
cwtl
sbb
cli
sub
enter
iret
xchg
ljmp
dec
add
mov
cld
inc
xlat
push
mov
lock
rorb
pop
push
loope
bound
in
and
addr16
cmp
sbb
sti
test
pop
out
push
enter
inc
mov
jl
xchg
dec
paddsw
add
icebp
test
dec
cltd
pop
fs
sub
push
or
cwtl
lahf
or
and
adc
into
cmp
mov
arpl
fs
pop
jge
in
jmp
add
inc
jb
filds
add
mov
stos
sahf
xchg
sbb
imul
push
or
dec
jo
into
ja
push
jno
lea
outsl
popa
pop
push
imul
repz
lds
in
fcmovbe
int3
out
pop
cmp
xchg
popa
in
sub
or
movl
jbe
cmpsb
dec
mov
fwait
lcall
pop
jnp
sub
sbb
cmpsl
or
mov
xor
jmp
cs
push
shrb
pop
in
aas
xor
mov
outsb
inc
lea
lds
or
aam
test
fisttpll
in
cmpl
xchg
dec
or
gs
in
push
sahf
fisttpl
sbbb
push
cmpsb
lret
mov
lock
gs
dec
es
xchg
dec
or
fistpl
mov
jno
jg
add
and
xchg
push
fdivrs
jecxz
enter
fmul
les
mov
cltd
std
ror
xchg
into
sbb
adc
xchg
in
in
call
lea
cwtl
cwtl
xchg
sbb
cmp
icebp
mov
xor
inc
jo
test
movsl
mov
repnz
cli
loop
imul
or
out
out
add
sub
pop
adcl
jp
ljmp
inc
inc
enter
mov
lods
mov
and
xor
dec
push
bound
loope
add
das
adc
loope
lret
mov
ffreep
push
mov
jae
dec
cmp
mov
scas
add
xor
mov
push
mov
lret
mov
insb
sahf
iret
jns
jno
aaa
lcall
gs
pop
ret
cld
je
jge
push
jecxz
push
pop
xor
jo
iret
pop
inc
aad
mov
push
aaa
jg
fidivl
sbb
xor
cmpsl
leave
loop
jmp
insl
repnz
xlat
out
jae
lods
shll
adc
enter
fidivrl
pusha
rolb
dec
je
cld
pop
mov
jne
xor
cmp
and
xchg
imull
jl
mov
rcrl
jne
jb
cmp
imul
adc
push
push
jle
sub
push
lahf
mov
ja
mov
ljmp
loope
test
andl
shrb
cmp
lods
enter
lock
mov
add
gs
.byte
