out
shrb
lret
inc
shrl
xchg
mov
xchg
es
sub
xchg
sub
rcrb
movsb
cltd
inc
mov
jle
into
mov
gs
push
pop
nop
test
pop
inc
push
adc
fwait
dec
jnp
mov
cmpsl
sub
sti
sbb
movsb
lds
out
pop
mov
cwtl
mov
lahf
popf
cwtl
out
test
fcmove
xchg
mov
lcall
cmp
pop
cmp
xchg
xchg
xchg
bound
jecxz
in
and
xchg
das
icebp
int
mov
mov
lds
outsl
pop
xor
in
mov
fs
xor
dec
in
and
sub
test
movsb
and
cld
xor
adc
imul
leave
push
loope
inc
jmp
mov
or
push
inc
mov
int
aaa
xor
pop
cmpsb
insb
cmp
lcall
jmp
mov
ja
dec
inc
test
push
mov
xchg
lahf
nop
ret
cmp
sahf
push
fldcw
inc
jne
cmp
mov
out
add
xlat
push
sub
add
xchg
mov
iret
sbb
lcall
stos
out
in
loope
push
bound
xchg
cld
fnstcw
mov
ret
lock
xchg
xchg
int
cmpsl
pop
sub
mov
and
push
and
jecxz
or
xchg
xor
mov
push
push
xchg
mov
das
mov
inc
adc
je
and
inc
out
lahf
pop
cmc
imul
test
cs
ljmp
push
je
fs
add
pushf
std
pusha
cmpsb
test
push
fs
mov
jae
mov
mov
jge
mov
lahf
push
aam
aas
xchg
pmaxub
push
mov
movsl
dec
push
inc
insb
cmpsb
in
inc
pop
clc
cwtl
les
adc
push
icebp
dec
push
xor
cld
ficomps
xor
mov
leave
sub
sub
cli
mov
movsb
call
sub
aad
xchg
call
jns
add
add
mov
push
out
imul
daa
jg
pop
xor
loopne
cmp
push
push
sub
lods
mov
push
in
roll
jg
lcall
push
push
jnp
push
mov
cltd
rol
out
and
xlat
jmp
jbe
lret
dec
mov
xchg
add
dec
into
inc
fidivrs
push
xchg
push
push
rorb
test
push
insb
push
testl
push
aam
xchg
xor
out
scas
ljmp
pop
fldenv
in
negl
out
push
and
adc
mov
push
lcall
outsb
cmp
gs
mov
nop
scas
ja
cmp
jg
add
aam
mov
ret
cwtl
cwtl
push
sbb
ss
adc
sbb
fdivrl
fsubp
insb
or
sub
test
push
out
cmpsb
xchg
divl
jle
je
out
inc
xchg
insb
and
inc
sbb
imul
lcall
xchg
in
jnp
mov
out
push
in
pop
or
jae
jno
std
test
scas
cmp
xchg
xor
inc
sbb
inc
xor
dec
popa
movsb
outsl
fiadds
sbb
pushf
mov
lea
andb
jle
jae
test
inc
gs
adc
sbb
outsl
jnp
mov
jecxz
pop
pusha
mov
or
ja
enter
lret
repnz
leave
jle,pn
mov
dec
mov
sub
ja
nop
push
cmpsb
mov
cld
icebp
in
mov
ret
pop
jg
mov
popf
in
scas
dec
or
out
and
rorl
and
mov
fcmove
cmpsl
ja
clc
xchg
jb
daa
fnstsw
inc
movsl
mov
call
push
imul
test
mov
cmp
enter
or
cmp
mov
cli
dec
gs
pushf
cltd
fistps
enter
in
jp
jmp
mov
mov
stos
pop
sbb
dec
adc
dec
es
add
leave
mov
cs
pop
pop
rclb
or
cmp
mov
cmpl
sub
stc
mov
sahf
pop
mov
inc
jno
mov
push
cmp
xchg
fmul
test
jnp
loop
shlb
shll
dec
and
jecxz
call
int3
loop
and
mov
sbb
das
ret
sub
dec
add
iret
and
out
fisttpl
xchg
push
lret
fsubl
mov
and
lods
arpl
and
mov
mov
fidivrs
cmc
inc
xchg
dec
fmul
dec
loope
or
cmp
jmp
daa
adc
rcrl
adc
fisubrl
sbb
in
push
xchg
in
xchg
pop
xchg
rcrl
add
mov
mov
fwait
xor
scas
scas
mov
dec
and
dec
mov
popa
pop
int3
stos
movsl
and
or
mov
shll
aad
sti
inc
ss
inc
sub
push
repnz
xor
out
fwait
mov
rcr
aas
shlb
jne
push
pop
or
add
jb
and
imull
fistl
faddl
out
addr16
fstps
dec
pop
mov
fcomps
hlt
fdivr
mov
or
bound
push
or
mov
mov
or
lret
out
cmp
aas
cli
dec
sbb
cli
in
cmc
scas
mov
out
sub
push
cs
sbbb
mov
inc
cmp
js
inc
push
cmpsb
mov
sbb
cld
lcall
ficoml
push
pop
es
arpl
xchg
pop
adc
insb
pop
pop
xchg
mov
adc
xor
in
jg
insl
enter
mov
jecxz
call
cmp
lock
jae
test
mov
enter
inc
push
sbb
dec
lock
orb
shll
adc
fs
test
cmp
or
or
das
jo
jp
gs
ljmp
into
mov
cmp
sub
jg
testl
pushf
adc
popa
pop
cmp
mov
faddl
sub
cmpsb
xor
ret
xchg
clc
pop
movsb
xchg
popa
inc
loope
push
jge
pusha
mov
ret
or
movsb
pusha
mov
pop
lea
fdiv
imul
inc
out
mov
jg
insb
cwtl
scas
mov
adc
shrl
add
shll
xor
stc
int3
xlat
pop
cmp
xchg
or
pop
fidivrs
push
or
out
mov
aaa
out
push
jg
and
xchg
mov
mov
sub
stos
xor
in
sbb
hlt
add
leave
cltd
lahf
fldl
std
or
pushf
arpl
enter
jge
adc
inc
mov
insl
mov
fists
pop
insb
lods
aad
pop
fsubl
cmc
scas
jle
and
cmpsl
pushl
mov
xchg
inc
jmp
xchg
imul
aam
fistpll
mov
sbb
jns
insb
stos
popa
movsb
cwtl
add
sbb
int3
cmpsb
lds
mov
js
mov
jge
sub
cmovae
xchg
test
iret
inc
sub
test
lea
out
xor
cmc
outsl
loopne
es
and
std
mov
fldt
mov
xchg
test
data16
mov
add
sbb
push
xlat
je
in
sahf
sub
adc
adc
mov
popf
out
jno
dec
and
mov
mov
sbb
arpl
push
push
xor
lea
stos
fs
dec
aas
cmpb
dec
fcomps
call
stos
mov
sub
arpl
aaa
lcall
ljmp
sbb
fldcw
lret
adc
cmp
xor
mov
and
es
mov
das
jne
fistps
xlat
fwait
nop
inc
xor
test
mov
addr16
sbb
mov
jae
and
imul
or
stos
inc
ljmp
fwait
xor
fstpt
loop
pusha
std
jle
scas
dec
les
mov
cmp
mov
push
insl
ja
loopne
imul
loope
sbb
xchg
ret
dec
ljmp
movsb
stos
inc
push
xor
and
jne
dec
xorb
fldt
pushf
mov
out
scas
add
test
in
cltd
mov
cmp
cwtl
inc
negb
pop
xor
xchg
mov
xchg
outsb
push
push
xchg
nop
inc
sub
mov
in
xchg
movsl
enter
movsb
movsl
fimuls
lea
jbe
outsl
push
rcrb
icebp
inc
loopne
push
jp
sarb
test
inc
mov
jo
loopne
dec
fcomp
xchg
ja
loop
push
or
xchg
fwait
imul
cs
mov
push
xchg
rclb
pop
pop
scas
cwtl
add
sub
push
stos
pop
stos
jbe
mov
out
mov
out
shll
cli
add
pop
das
push
fiaddl
addr16
xchg
and
xchg
jmp
sarl
in
mov
jl
mov
addb
cltd
into
push
outsl
mov
mov
in
sarb
mov
icebp
dec
popa
inc
mov
push
mov
ficompl
mov
les
add
test
bound
cmc
sub
data16
add
aaa
inc
data16
mov
jg
mov
or
mov
push
mov
lret
mov
and
lods
loop
dec
mov
add
inc
fs
push
add
cmp
shrl
pushl
frstor
ja
or
and
jns
mov
andb
scas
dec
shlb
dec
push
lods
push
mov
jmp
mov
cs
test
xor
push
cs
scas
mov
sbb
es
iret
in
ss
mov
ljmp
adc
or
add
cwtl
repz
push
jo
data16
cmp
sbb
jmp
cwtl
push
sub
mov
lods
aad
push
lock
imul
cmc
inc
inc
test
pushf
mov
scas
bound
pop
add
iret
xor
cli
cwtl
loopne
jmp
scas
inc
push
cmp
lret
imul
aam
outsb
daa
push
push
cltd
adc
pop
mov
je
jle
shrl
imul
aam
ss
fnstenv
rcrb
xchg
loopne
xor
mov
packuswb
dec
test
inc
movsb
sarl
aad
jns
jmp
and
int3
jae
lret
and
mov
jle
push
jge
out
aam
ss
das
repnz
pop
out
ljmp
jbe
cwtl
call
push
lahf
jmp
xor
and
popa
and
orb
out
ret
sub
ret
sbb
in
dec
mov
mov
cmp
pusha
jmp
movsl
xlat
adc
jl
fsubp
test
ret
test
inc
fidivl
loopne
push
or
cmp
xchg
sbb
stos
in
xchg
test
sub
add
jmp
mov
dec
jg
xchg
and
mov
mov
outsl
outsb
popa
insb
pop
sti
xlat
push
dec
mov
sti
out
mov
in
mov
and
ljmp
push
test
inc
cmpsl
mov
cmp
push
xor
lock
into
mov
fcoms
rolb
pop
mov
xor
lds
add
cltd
insl
ret
cmovno
xlat
jo
pop
dec
mov
mov
rcrb
add
hlt
int
cmpsl
xchg
les
leave
ret
mov
or
dec
loopne
mov
cmc
pusha
sbbb
add
sbb
mulb
out
push
xor
add
xor
bound
enter
xor
mov
bound
scas
imul
std
cmp
movsl
cwtl
cmp
mov
jae
mov
es
fisttpll
scas
inc
mov
mov
inc
lods
aam
int3
mov
push
int3
mov
sbb
or
vpunpckhqdq
adc
mov
js
cmpsb
xchg
test
mov
add
repnz
dec
movsb
nop
imull
and
sub
out
gs
ret
pop
and
sbbl
lods
adcb
push
stos
or
mov
repz
xor
jecxz
xor
inc
in
dec
imul
sbb
push
out
push
pushf
sbb
xor
sti
fcoml
je
lahf
hlt
mov
stc
inc
scas
mov
inc
mov
fldcw
je
mov
notl
jb
lcall
inc
divl
xchg
sub
jb
jo
ja
pop
lret
cmp
loop
mov
in
push
imul
pop
fsts
add
mov
inc
fdiv
jl
cli
call
ljmp
sti
add
push
xchg
add
and
push
lea
movsl
cmpsl
out
out
mov
iret
std
lods
xor
les
mov
hlt
ror
add
fsub
xchg
inc
not
jecxz
mov
mov
lret
mov
mov
mov
jbe
test
pop
jecxz
add
and
fisubl
ds
lcall
mov
xchg
in
mov
add
pushf
pop
lcall
stc
mov
repz
xor
or
lcall
pop
mov
test
and
das
pop
fmuls
lahf
sahf
push
xor
int3
hlt
mov
dec
movsl
mov
pop
call
dec
push
nop
cmpsb
xor
mov
stos
push
push
test
ret
pop
gs
jmp
push
ds
loopne
sbb
xchg
sbb
fucomi
lcall
sbb
inc
daa
jne
inc
in
jnp
data16
fimull
les
xor
push
sub
adc
loopne
or
pop
xchg
test
loope
adc
xchg
outsb
xchg
push
cli
sahf
push
xor
sbbl
mov
push
and
mov
les
mov
lret
mov
cmp
ss
aaa
sahf
shlb
movsl
jmp
mov
int3
je
sub
pop
inc
nop
nop
ds
imul
mov
decl
outsl
or
rorl
mov
popf
out
hlt
mov
mov
mov
iret
imul
adc
lea
jp
dec
sub
sub
lret
ja
sbbl
cmc
mov
lret
mov
outsl
fidivrl
lods
rclb
pop
add
ret
sub
call
jne
lret
jl
outsl
testb
outsb
sub
cmp
cmpl
aaa
ret
jno
aas
stos
dec
xchg
pop
jns
mov
mov
shr
mov
insb
popa
cmp
iret
lcall
mov
xchg
jecxz
xchg
js
xor
pop
popf
push
sub
into
mov
mov
scas
pop
pusha
addl
mov
pop
repnz
loopne
imul
or
cmp
pusha
std
cmp
pop
sub
jmp
lcall
adc
test
sub
lret
fstpt
out
stc
pop
fcmove
loopne
sti
xor
mov
xchg
fbld
xor
ret
inc
lds
push
mov
mov
in
xchg
adc
cmpsl
sahf
test
inc
ds
jmp
insl
mov
mov
fdivs
sub
das
inc
sarl
cmpsb
leave
cmpl
adc
push
and
popa
outsl
mov
xchg
mul
mov
cwtl
adc
jb
or
mov
mov
pop
inc
mov
mov
mov
push
addr16
dec
adc
lret
scas
movsb
mov
xchg
ret
mov
cmp
xchg
mov
hlt
mov
das
sarl
push
fwait
loop
add
dec
sub
or
mov
insl
arpl
scas
out
fcomp
enter
inc
hlt
lret
rorb
stos
push
clc
mov
xorl
and
jne
aad
sbb
leave
rorl
dec
fcomip
jne
pop
hlt
je
addr16
stos
or
cmpb
mov
xchg
or
loop
out
cli
add
mov
mov
xor
push
int
cs
mov
jnp
add
add
in
cmp
ds
cmp
daa
shll
mov
hlt
divl
lods
or
stc
gs
sbb
fmuls
jno
sub
aaa
and
jl
push
rclb
movsl
xor
imul
data16
pushf
in
dec
not
add
les
out
ss
imul
pop
mov
inc
dec
loope
movsl
xor
pop
add
dec
int
xchg
fisttpl
push
mov
into
dec
inc
sahf
popf
ficompl
fwait
pushf
cwtl
mov
test
pop
fwait
loopne
lret
jl,pt
in
cmp
or
sub
mov
imul
xor
bound
cmp
cld
add
or
outsb
cmp
xchg
in
jo
lahf
mov
gs
nop
test
insl
pop
inc
icebp
movb
movsb
xchg
je
mov
push
sub
cmpsb
aaa
shr
outsl
cmc
mull
dec
js
pop
dec
sub
mov
outsb
nop
or
scas
repz
cmp
xor
lcall
adc
mov
pop
xchg
mov
jns
push
push
scas
sub
mov
idivb
sbb
fidivs
stc
sbb
dec
jbe
sub
push
scas
push
loop
fs
add
push
out
mov
pop
dec
test
loope
cmc
lahf
cmpsb
inc
pop
movsb
mov
pop
dec
push
andnps
mov
dec
paddd
addb
lds
test
aad
and
repnz
sub
mov
xchg
pop
shrb
push
fsubl
push
mov
leave
mov
pushf
cmpsb
cmc
arpl
mov
xor
movsl
cmp
inc
out
push
and
fimull
jle
adc
mov
ret
ret
xor
mov
mov
xor
inc
inc
pop
outsb
fs
xor
mov
pop
xchg
dec
jecxz
sbb
jecxz
sbb
dec
xor
jl
fcomi
lret
mov
je
sbbb
lods
xchg
lods
xchg
mov
or
mov
fldt
in
popa
outsl
lahf
stos
movsl
fidivl
lods
scas
kmovd
dec
push
fcoml
xchg
fldenv
ljmp
dec
mov
xchg
inc
ret
push
out
mov
bnd
mov
shl
and
jns
mov
mov
cmp
ss
stc
cmp
push
fsubs
loopne
fwait
xchg
cwtl
jb
shl
sahf
xchg
jns
xchg
sbb
cmpsl
sbb
jnp
in
lahf
loopne
js
mov
shl
mov
mov
or
inc
aaa
enter
sub
dec
int
mov
cltd
pop
inc
inc
mov
sbbl
xor
adc
push
bound
cs
xor
dec
mov
or
jb
rcrb
int3
cmp
mov
sub
inc
jbe
jb
add
jmp
icebp
icebp
movsb
arpl
insb
enter
lods
and
fildll
shrl
negl
sbb
sub
dec
cmpsl
sub
cmpb
mov
decb
add
xor
ss
mov
fndisi(8087
dec
mul
push
cmpsb
rcrb
mov
jbe
stos
mov
insb
inc
in
jno
test
push
push
pop
or
repnz
incb
repz
push
ror
out
stc
or
mov
loopne
ds
dec
jecxz
int
pop
test
inc
push
repz
jg
xor
orb
jmp
xor
dec
pushf
cmpsl
les
and
xchg
subl
sub
movsb
mov
sbb
fidivl
sub
add
bound
pop
jl
and
jmp
dec
mov
mull
cmp
roll
je
and
shr
mov
sar
test
loope
test
sbb
or
push
std
loope
scas
push
lret
pop
mov
and
xchg
loope
test
fnstsw
dec
enter
leave
xchg
push
jecxz
pusha
xchg
ja
mov
movsl
addr16
push
sahf
sar
add
inc
mov
adcl
mov
inc
cmp
pop
inc
push
scas
loop
cmp
mov
mov
xchg
aad
test
inc
je
sbb
popa
hlt
pop
mov
cwtl
cli
mov
imul
movsl
cwtl
mov
in
mov
xchg
xchg
pop
stc
sub
cmp
push
ret
arpl
and
xchg
sub
xchg
mov
inc
cmp
sub
cmpsl
jo
mov
cmpsb
dec
sub
fs
sub
in
pop
rcrl
pop
xor
jle
push
pop
mov
sahf
mov
aaa
ficoms
cmc
adc
aaa
jge
sbb
mov
lahf
mov
push
aad
add
xchg
rclb
add
loopne
adc
dec
or
mov
inc
test
pop
data16
mov
xor
or
movl
outsb
adc
jmp
outsb
cmc
add
or
mov
and
mov
jle
lock
xor
hlt
stos
dec
leave
loop
dec
mov
imul
lods
cltd
aad
cmpsb
lret
daa
mov
lahf
popa
aas
icebp
test
imul
outsl
mov
scas
loopne
or
add
mov
decb
cmp
mov
aaa
loopne
push
mov
cmp
push
std
movsl
in
sbb
popf
or
loope
pop
bnd
movsl
mov
out
inc
mov
out
xchg
inc
inc
mov
lahf
fisubs
sbb
in
adc
mov
std
cmp
hlt
jl
rcll
in
inc
mov
out
mov
jno
xchg
adc
incl
lret
xlat
pop
insb
lahf
cli
push
push
int
jo
cld
fimuls
dec
cld
or
fstps
push
divl
pop
sahf
imul
mov
aaa
and
mov
push
cmp
divl
jae
push
and
lea
jno
sahf
push
pop
add
stos
stos
orb
lahf
jmp
mov
dec
mov
cwtl
or
stc
push
push
inc
sbb
test
jl
cmc
fwait
mov
das
dec
xchg
push
xor
cltd
jmp
mov
push
mov
pop
jnp
mov
call
inc
mov
mov
in
jle
rcr
sbb
rcll
in
sbb
fldt
icebp
movsb
dec
mov
test
rolb
roll
and
scas
pop
sar
fucom
sub
sti
xor
mov
daa
mov
cmp
sub
pushf
lds
sub
xor
insb
push
je
test
out
dec
and
mov
or
fidivrl
fldenv
imul
fmuls
lock
lods
fidivrl
lods
lcall
push
cmp
ljmp
sub
xor
in
jmp
insb
lret
pop
iret
leave
and
fcompl
cltd
lds
inc
dec
aaa
pop
in
mov
loope
sahf
lret
arpl
xchg
les
and
xchg
in
ja
iret
test
pop
test
test
in
jbe
jns
xchg
cmc
mov
sub
in
mov
fmull
push
cld
adc
mov
fisttpll
xchg
test
imul
ja
stos
aas
lahf
jmp
mov
mov
leave
mov
fcmovu
xor
mov
movsb
nop
popf
shrb
cmp
into
pop
or
cmp
cmpl
nop
scas
aas
popa
je
or
cwtl
add
in
inc
sbb
mov
out
push
ja
push
inc
std
mov
fistps
jge
sub
lret
sub
fistl
jo
dec
cmp
fstpt
or
jo
fcomps
insb
mov
xor
add
sbb
cwtd
mov
cmp
xor
negl
mov
rcll
pop
mov
inc
enter
inc
pop
fwait
out
movsb
mov
rclb
hlt
movsb
xchg
jp
mov
not
cmc
sbb
out
pop
in
mov
cmp
adc
add
mov
int3
test
sub
fisubl
andb
imul
ds
xor
nop
sti
cmp
push
sti
fbld
aas
rol
sub
loope
add
sahf
adc
xchg
inc
in
aas
mov
adc
or
pop
xor
out
and
je
pop
or
addl
mov
push
popf
lret
js
call
sbb
mov
sub
xchg
imul
fnsave
adc
jg
out
xor
mov
or
cmp
je
lods
or
push
xchg
lcall
je
inc
scas
cs
push
inc
lcall
in
fwait
pop
fildll
sub
leave
mov
in
mov
movsl
adc
shl
dec
test
enter
call
cld
stos
xchg
std
das
jge
xchg
sbb
sub
enter
jge
mov
clc
movb
pop
fistl
stos
fs
cwtl
lcall
jmp
outsb
jnp
fdivrp
cmp
fwait
inc
mov
cmpsb
in
outsl
and
cli
outsb
fidivs
imul
pop
iret
fwait
sbb
xchg
cmp
pop
stos
pushf
dec
pop
addr16
inc
and
add
or
aas
and
rolb
rolb
imul
pusha
add
int3
cmp
mov
shrl
mov
mov
loop
subl
fimull
and
xchg
jmp
imull
mov
cwtl
iret
add
sub
xchg
mull
sbbb
lahf
dec
and
jo
add
xorl
call
add
repnz
dec
xchg
roll
loope
sub
clc
adc
stc
fdiv
popl
fsts
mov
sbb
orb
sbb
cld
dec
xchg
rorl
push
dec
iret
mov
mov
add
std
repnz
pop
popa
push
cmovg
cs
ja
mov
cmp
mov
jbe
and
and
sbb
push
jecxz
test
inc
pushf
and
xchg
and
test
add
xchg
push
add
cmp
mulb
adc
jbe
inc
cli
orl
aam
in
cwtl
cmc
xchg
xor
jne
push
push
mov
jle
push
jl
cli
movsb
or
lret
pop
addl
dec
sarl
es
fisttpll
std
mov
add
xchg
shlb
add
das
pop
pushf
xor
insb
jl
jmp
inc
out
or
js
ret
adc
mov
push
rcrl
pop
aas
js
cs
daa
push
fsubrl
xchg
fsubl
in
push
inc
cmpsl
mov
adc
mov
jmp
sbb
inc
mov
mov
gs
call
or
sti
incl
xor
push
cwtl
cmp
inc
lahf
lds
aas
mov
mov
ret
dec
mov
jns
adc
xchg
in
xchg
push
sub
xor
es
insl
lret
inc
addl
negl
imul
sar
orl
loop
bound
or
cmpsl
xchg
mov
bound
pop
out
mov
inc
aad
iret
or
loop
lock
ds
xor
adc
jl
enter
gs
aas
repnz
mov
in
sbb
das
pop
cmp
inc
daa
fs
test
mov
fcomps
call
iret
xor
sbb
in
jae
test
imul
fstl
icebp
in
jnp
ss
xchg
cld
cmpsl
pop
adc
inc
or
push
pusha
xchg
adc
sbb
loopne
nop
add
fidivrs
outsb
adc
add
pop
mov
xchg
cmc
inc
imul
addb
in
popf
outsl
lret
pushf
int3
xchg
lahf
sbb
es
mov
pop
out
shlb
or
int3
xacquire
ss
insl
sbb
mov
mov
movsl
fcomi
and
loopne
fsubrp
cmp
lret
sbb
addr16
in
cld
stos
roll
xchg
xor
mov
mov
cmp
sbb
out
enter
or
flds
xchg
dec
jae
int
in
inc
mov
jl
dec
mov
std
xchg
adc
imul
or
xchg
jl
mov
lods
shrl
and
lea
add
sahf
mov
fs
mov
cmp
cmp
xchg
dec
mov
addr16
push
lds
loope
xor
xor
cmp
pop
xor
mov
stc
jb
xor
mov
insb
xor
cmp
sub
dec
xchg
imul
mov
or
mov
mov
imul
sti
push
fidivs
jnp
jb
in
call
adc
fnsave
sub
jb
pop
or
cli
xor
fidivrs
lahf
xchg
es
aas
js
pop
out
xchg
lret
inc
pop
push
xchg
pushf
int3
aam
sub
adc
pop
or
imul
sub
rcrl
test
cs
loopne
mov
out
sbb
test
mov
sbb
popf
or
scas
adc
int
call
stos
and
mov
repz
or
xor
push
movsl
cli
adcb
mov
out
mov
clc
lock
fcoms
push
out
push
jl
cmp
bound
fistpll
out
lods
loopne
inc
movb
fs
jmp
mov
nop
imul
pop
xchg
mov
and
test
xchg
outsb
daa
dec
xchg
lret
xchg
and
loope
icebp
shl
scas
les
stos
sbb
sub
lock
sub
mov
mov
jo
lods
cltd
divl
nop
cli
or
repnz
pusha
xor
xchg
je
xor
pop
imul
jbe
push
push
add
test
lods
test
bound
cmp
frstor
test
inc
jb
cmovge
ss
sub
mov
data16
enter
in
adc
jle
enter
and
mov
mov
and
repz
inc
rorl
adc
outsb
sti
mov
or
jge
mov
sbbb
stos
clc
fbstp
adc
fimull
or
cmp
les
pusha
test
cmp
or
cmp
std
mov
cmp
pop
inc
cld
lods
xor
mov
enter
call
stos
rclb
test
fnsave
jne
test
mov
dec
ret
in
adc
js
mov
and
lods
mov
mov
scas
sub
mov
mov
popf
loope
lock
dec
lock
dec
push
mov
push
jb
push
les
push
bnd
mov
add
pushf
stc
push
pusha
jecxz
and
out
aas
jbe
cwtd
and
pushf
inc
outsb
lret
insl
outsl
add
ret
add
hlt
adc
sbb
fistpll
lret
repnz
jle,pn
mov
lock
test
shll
pusha
lcall
aaa
fadds
loopne
push
imul
mov
rcrl
rcr
cltd
daa
jmp
lods
stos
int3
bound
into
leave
aam
fwait
pop
inc
out
out
and
xor
in
cwtl
mov
jb
mov
xor
and
mov
jne
lods
test
sti
gs
aad
sbb
xor
xchg
lret
push
cmc
mov
ret
stos
jg
fadd
push
adc
inc
rcl
jge
jns
repz
xchg
cmp
fadds
loopne
sbb
and
mov
add
or
mov
mov
scas
mov
lock
mov
xchg
mov
ffree
rclb
xchg
jo
pop
mov
std
sar
fsts
pop
push
lea
arpl
enter
enter
jle
data16
inc
xor
mov
out
lahf
adc
fsubr
cmp
mov
in
dec
fdivrl
mov
je
dec
aas
dec
test
loopne
js
into
shrl
sub
out
jnp
add
mov
dec
cmp
repz
in
insb
lret
fld
add
push
mov
in
or
sbb
jmp
xchg
loopne
in
inc
sub
add
hlt
fldenv
out
mov
cmpsb
test
shrb
rcr
or
sbb
sub
icebp
int3
mulb
push
cltd
sbb
rcrb
mov
jge
mov
push
cs
into
test
cwtl
mov
nop
stos
and
and
pop
mov
or
mov
inc
lret
pop
cwtl
and
pop
fidivrs
pop
mov
mov
jg
shll
cli
scas
insl
aad
rorl
enter
xor
adc
or
std
outsl
aam
loope
in
pop
push
mov
sbb
xchg
daa
jb
sbb
js
pop
pushf
adc
xor
fst
ds
rorb
mov
sbb
int
out
outsl
shrl
and
sbb
lock
adc
divl
mov
adc
mov
hlt
pop
fildll
push
mov
mov
insl
or
mov
inc
inc
sbb
sbb
mov
pop
in
mov
and
fildll
cmpsb
pop
mov
push
mov
mov
pop
cli
es
or
push
dec
repz
pop
mov
add
xchg
adc
scas
sbbb
lcall
jbe
push
adc
pop
hlt
outsl
push
test
mov
stos
sub
mov
lock
fdivs
adc
jae
addb
arpl
mov
push
mov
jp
and
fidivs
jb
addr16
mov
gs
xor
test
lods
cwtl
cwtl
sti
cmp
add
or
pushf
rorl
stos
sub
xchg
jg
loopne
cmc
and
std
cmpsl
sub
out
push
xchg
xchg
push
aaa
and
xor
mov
gs
aad
test
es
lcall
jo
into
cmp
or
rclb
mov
jmp
int3
ss
mov
andl
ret
mov
outsb
fsubrs
sahf
out
divl
cli
add
addr16
insb
out
clc
cmc
pop
js
lret
imul
out
inc
cli
pop
call
push
fildl
add
sbb
in
pop
es
test
sub
repz
jno
in
mov
mov
inc
cmp
dec
fst
adc
push
aas
enter
push
xchg
loopne
lods
mov
out
adc
loopne
jle
xor
mov
imul
lret
inc
ss
cli
mov
push
and
imull
mov
and
ljmp
mov
int3
cli
into
loop
sub
test
ljmp
sub
das
push
sub
insl
fsubrs
mov
aaa
pop
cltd
outsb
out
xchg
je
pop
mov
ucomiss
out
incb
pop
cmp
fldenv
lret
inc
icebp
add
adc
ljmp
imul
scas
cmp
out
push
fildl
mov
adc
dec
mov
jle
mov
inc
and
lahf
mov
or
daa
ror
fwait
ja
imul
out
outsb
xchg
insl
leave
pop
xor
pop
cmpsl
jg
sbb
arpl
jle
andl
push
les
or
mov
test
jmp
movsb
adc
add
popa
xchg
cmpsb
cld
xor
add
lret
cli
adc
add
lahf
mov
popf
jmp
lcall
jo
mov
mov
test
xor
lods
popa
pop
fldln2
mov
mov
sbbl
pop
les
lds
xchg
or
mov
imul
fwait
and
xor
adcl
fmuls
in
inc
sub
out
adc
ficoms
xor
cmp
sbb
and
fstpl
pop
add
mov
je
mov
xchg
jp
pop
fs
cli
je
fcomps
push
cmp
les
xlat
out
sahf
test
dec
inc
mov
stos
push
and
add
ret
and
xor
push
test
cs
jl
je
inc
jns
mov
sahf
mov
push
dec
daa
or
enter
mov
jae
jne
les
xchg
push
mov
gs
sub
jno
mov
sub
in
sbb
inc
add
xchg
addr16
test
xchg
or
out
push
push
je
ficoml
cli
mov
ja
imul
lret
mov
jp
cld
bound
ja
daa
or
sub
js
mov
jo
adc
mov
jmp
shl
xor
imul
lock
fs
jmp
jno
orb
cmpsl
pop
sbbb
call
out
sbb
ss
ret
stos
sti
push
cld
xchg
sub
sti
incl
cli
repnz
pop
call
fsubrs
stos
push
scas
fidivrl
aam
add
sub
jns
hlt
jl
add
fdivl
cld
sub
out
or
scas
ja
sub
sbb
push
outsl
mov
ret
mov
orb
test
out
movsl
addr16
icebp
inc
cmp
mov
je
je
lahf
into
fnstenv
jb
ret
adc
ljmp
cmp
scas
mov
and
jle
aam
lds
loope
xor
ret
sub
adc
lea
or
stos
or
mov
push
pop
orb
test
jge
push
jmp
repz
pop
xchg
dec
lea
push
lahf
pop
lods
test
push
push
out
mov
int3
test
js
push
jne
pop
jae
push
xor
cwtl
xor
jns
sbb
mov
fidivrs
mov
ss
aas
xchg
int
mov
adc
in
je
and
call
sahf
add
mov
test
lods
xchg
cli
cmp
orb
push
xchg
dec
xchg
ljmp
fdivrl
aas
daa
lds
addr16
testb
movsl
sahf
mov
stos
sub
add
dec
push
xchg
inc
sti
sub
dec
dec
adc
movsl
sti
add
fcoml
inc
iret
inc
add
xor
and
jno
mov
mov
inc
andb
fcos
pusha
imul
out
shrb
xor
push
lahf
inc
aaa
cmp
lock
cwtl
lods
cli
int3
dec
adc
das
es
cmpb
xor
cmp
add
les
cs
test
and
les
imulb
mov
inc
insb
and
filds
out
insl
data16
add
sub
sbb
lea
push
movsb
imul
sbb
jae
sub
aad
aaa
mov
call
scas
inc
push
aas
xchg
test
xor
fcompl
call
and
sbb
push
inc
or
xchg
pop
push
and
cmp
fs
aad
lods
add
sub
and
xor
es
lock
cmc
int3
push
pusha
int
out
xchg
jp
nop
popf
in
lcall
out
xchg
iret
es
into
pop
xor
mov
xchg
cmp
add
push
loop
lea
cmpsb
out
mov
call
popa
cmpsb
pushf
iret
mov
in
mov
sarl
and
lods
arpl
cs
sahf
cmp
shrl
bound
fisubs
in
cmpsb
sbb
or
sbb
sub
cmp
inc
push
push
shlb
inc
stos
fsubp
pop
adc
insl
jmp
imul
enter
jl
cmp
push
addl
insl
pop
clc
shrl
inc
nop
and
cs
add
test
mov
sub
call
in
mov
sbb
fnstenv
jle
sahf
jge
sbb
sbb
add
or
test
mov
lret
jb
dec
pop
fcomps
insb
movl
xchg
inc
sub
and
lds
iret
ja
pop
mov
nop
or
mul
adc
xorl
and
sti
jae
xor
cld
mov
sarl
pop
and
push
jns
insb
sahf
aad
ret
or
les
popf
out
xor
xchg
xchg
dec
mov
cmp
xor
aaa
icebp
mov
rcrb
flds
cmp
in
mov
icebp
or
sbb
fnsave
sti
fidivs
mov
sbb
mov
hlt
out
xor
insb
or
cmpb
cmp
xchg
push
js
sbb
mov
movsl
scas
mov
cltd
into
arpl
rcll
test
pop
scas
mov
adc
sub
sub
sub
push
int
mov
ljmp
jle
and
andl
adcb
lock
subb
dec
xchg
mov
xchg
xchg
addr16
pop
cld
int
push
xor
nop
cld
mov
pop
adc
push
mov
test
js
shrl
mov
pop
imul
addr16
pop
inc
imull
mov
xor
icebp
loope
mov
sub
icebp
addr16
inc
and
xor
ss
cmp
out
inc
or
pop
mov
pop
sbb
cmpsl
pop
mov
sub
daa
fiadds
mov
mov
addr16
cli
mov
or
mov
into
lds
xor
and
mov
inc
jb
in
repnz
xchg
xor
mov
loope
scas
jmp
and
loop
inc
pop
push
mov
repnz
outsb
cmpsb
loopne
and
add
and
mov
jmp
mov
push
lret
pop
loop
mov
mov
int
repnz
cwtl
data16
call
jle
dec
xchg
icebp
imul
and
mov
sbb
xor
fsubrl
stc
stos
dec
pusha
push
scas
mov
rorb
xchg
sub
imul
xor
adc
hlt
clc
les
nop
imul
mov
jbe
and
pop
imul
or
cltd
je
or
jl
nop
push
sahf
sub
not
mov
testb
cmp
add
in
loope
icebp
std
sbb
mov
inc
dec
xchg
mov
push
jecxz
jae
mov
inc
iret
scas
fists
cmp
movl
cwtl
sub
jnp
sti
inc
mov
imul
mov
inc
cs
xor
xchg
and
dec
jne
imul
imul
or
decl
icebp
and
mov
jmp
dec
cmp
loopne
lcall
jo
popf
aam
mov
fwait
or
fistl
pop
lret
addr16
movsb
mov
xchg
lahf
add
jge
aad
outsb
and
adc
xchg
mov
pop
je
aad
popa
or
outsl
add
into
repnz
mov
loop
fsubrl
loop
enter
cs
mov
xchg
mov
cmpsl
mov
jle
fldcw
pop
enter
pop
inc
test
cltd
jmp
ss
daa
add
les
dec
sti
movsb
xchg
addr16
mov
cmpsb
lds
mov
mov
loop
test
fnsave
cmp
jle
pushf
inc
lods
dec
pop
movsl
or
pop
fadds
jbe
mov
inc
cs
and
sbb
rolb
repz
shll
inc
int3
iret
fisubl
adc
bound
ret
jbe
inc
mov
out
and
sti
or
xchg
mov
rcrb
outsb
loope
add
add
dec
adc
or
push
xchg
add
daa
xor
outsb
div
int3
xchg
add
jl
push
add
lcall
sub
insb
imul
adc
stc
mov
dec
out
faddl
stos
xchg
in
inc
or
mov
cld
aas
loopne
xor
inc
jno
sbb
mov
outsb
imul
xchg
inc
lret
and
cmp
or
imul
test
ds
subl
mov
cwtl
repnz
mov
push
stos
pusha
cmp
jbe
mov
pop
lock
or
dec
cltd
ljmp
loop
pop
les
cmpsl
test
mov
mov
das
push
sbb
mov
fnsave
sub
mov
aaa
stos
jecxz
adc
pop
mov
xchg
push
fsubl
lock
jo
inc
or
stos
ljmp
inc
sbb
rcrb
imul
mov
adc
sub
inc
aas
leave
scas
mov
mov
shrl
test
leave
jne
lds
jo
bound
fmul
test
push
movsb
les
call
and
xchg
nop
sar
jmp
cld
clc
inc
push
mov
xchg
jmp
mov
scas
out
cmpsl
ret
mov
std
inc
dec
inc
and
addb
mov
push
mov
push
sbb
mov
cmp
mov
inc
jmp
arpl
xchg
loopne
stos
cmp
jg
ret
xorl
fs
aas
movsb
addr16
add
or
and
shrl
push
pop
cs
sub
sti
int3
lock
inc
and
pop
xchg
and
push
rcr
add
xchg
xchg
aas
xchg
addr16
mov
lock
pop
fidivrl
movsl
push
popa
mov
inc
aaa
iret
sbb
add
loope
jno
fcoms
sub
in
pop
in
rcl
fbstp
and
push
jnp
jno
push
insl
je
mov
mov
lock
int3
xor
and
mov
jne
stos
je
sbb
cmp
push
pop
outsb
in
mov
sub
xchg
or
or
lcall
out
mov
jno
test
cmpsb
and
cltd
popf
test
fwait
je
imul
mov
adc
or
lret
mov
fcoml
mov
lret
int3
mov
loope
jg
push
insl
nop
mov
loope
scas
inc
or
subl
push
mov
ror
mov
xor
in
fists
fwait
lret
cwtl
cmp
xchg
adc
cmpsl
or
insb
mov
js
or
xchg
xor
lret
and
rorb
adc
sarl
sbbl
andb
adc
or
idivl
sbbb
jne
fdivl
adc
push
addl
or
pop
sub
mov
dec
fisttps
cmp
imul
jo
xchg
icebp
js
mov
mov
jecxz
sbb
push
dec
std
adc
loop
cwtl
loop
mov
ds
lds
xor
ret
inc
std
insb
test
insb
imul
idivl
inc
inc
ljmp
xchg
idivl
cmpl
adc
mov
push
push
pop
rorb
mov
mov
mov
and
aas
pop
mov
cmp
mov
and
pushf
mov
shrb
ret
ret
ljmp
ficomps
push
and
scas
or
popa
rcll
cmp
gs
cwtl
cmp
push
in
xlat
std
jo
mov
sti
dec
rorl
mov
xlat
aam
cmpsb
int3
sbb
mov
addb
or
xor
sbb
xchg
fidivrl
jo
scas
vpmaxub
pop
jmp
cmp
inc
mov
lahf
sarl
mov
xor
mov
ja
adc
mov
dec
mov
aad
clc
mov
and
mov
or
sub
push
dec
xor
lock
xor
and
pop
jecxz
fisubl
xchg
int3
lret
test
adc
inc
lret
dec
leave
push
scas
adc
or
xchg
adc
dec
xchg
mov
cmp
imul
insl
mov
inc
cmpsl
fsubs
xor
push
adc
aaa
sub
mov
cmp
mov
sub
or
push
cmpsb
pushf
movsb
push
sarb
outsb
movsb
xor
pop
and
mov
inc
mov
xchg
xorl
push
ret
lea
in
idiv
repz
incl
jge
mov
xor
mov
dec
jg
call
push
jle
mov
mov
inc
adcb
inc
lock
mov
xor
or
lret
cmpsb
push
push
lret
and
call
mov
sub
dec
jl
jno
lret
inc
test
dec
pop
call
jne
sahf
mov
out
aaa
out
mov
scas
sbb
push
xor
xchg
add
scas
jbe
shrl
lea
leave
push
pop
incl
in
xor
jp
lahf
js
fldl
outsb
ficomps
clc
mov
sub
dec
pop
roll
dec
clc
lcall
in
and
mov
inc
cmp
and
cmpsl
add
pop
cmp
push
fdivs
xor
mov
in
enter
mov
shr
mov
repz
cld
inc
mov
lahf
mov
push
idiv
rol
nop
jmp
in
inc
pop
mov
outsb
mov
clc
in
xor
pusha
cmp
shl
std
icebp
cmp
dec
out
loopne
ret
push
sub
or
imul
das
mov
jmp
mov
mov
repnz
loop
adc
aam
mov
xchg
mov
xchg
sub
ss
mov
jecxz
aam
xor
dec
sub
jne
icebp
jo
xlat
sbb
push
pop
mov
lds
mov
daa
cmc
push
jbe
fdivrp
repz
cmp
xchg
sbb
adc
and
mov
cmc
stos
push
mov
xchg
lea
pop
cmp
mov
pop
or
jb
mov
or
shll
or
adc
and
aad
int3
fwait
or
aam
out
dec
xor
in
shll
and
add
test
aaa
out
mov
pop
adc
into
arpl
fdivrp
mov
fimuls
lods
pushf
sahf
dec
jge
mov
loop
test
test
push
movb
popf
aaa
ret
and
lea
icebp
cs
loopne
outsb
mov
xchg
xchg
imul
aam
cmp
xchg
inc
out
adc
pop
sbb
add
mov
xchg
sahf
dec
push
andb
ss
mov
push
pop
mov
popf
mov
mov
iret
data16
ret
mov
dec
jecxz
movb
xchg
lea
out
inc
add
cmp
lods
jae
out
ljmp
insb
ret
daa
push
lea
icebp
or
lea
mov
sarl
fstpl
loop
pusha
cs
filds
ficomps
xor
ds
mov
aas
mov
xchg
loopne
inc
dec
dec
enter
cld
mov
pop
adc
xor
mov
jmp
cld
std
mov
pop
cmp
in
jp
roll
or
and
std
stc
push
push
jl
xor
dec
pop
fldt
sbb
insb
cltd
cmc
out
adc
int3
call
mov
xchg
in
test
scas
ja
lahf
mov
cs
ret
scas
lcall
push
fdivl
mov
and
outsb
insl
jnp
add
jge
mov
movsb
mov
push
lods
clc
xorl
jb
das
lds
cltd
dec
sub
inc
rcrl
aaa
push
jle
andl
lea
cmc
xchg
push
xchg
decl
jle
mov
lcall
mov
and
mov
scas
push
std
test
jmp
inc
xchg
cmp
cmpsl
inc
popf
sub
mov
cli
aad
out
std
mov
aaa
mov
push
push
std
sbb
pop
push
cmpsl
out
mov
mov
dec
xchg
sub
xlat
dec
pop
lea
push
push
push
lock
lds
bound
lock
dec
scas
cmpsl
out
repz
mov
les
mov
xchg
adc
sub
nop
mov
jne
sub
cld
dec
andl
and
repz
xor
xor
addb
loop
gs
cmp
jae
mov
pop
cltd
xchg
xchg
addr16
pushf
sbb
inc
jmp
pop
sub
and
and
sub
add
out
inc
movb
adc
rcll
mov
xor
movsl
pop
dec
jb
dec
mov
nop
cltd
rclb
out
pop
adc
push
jb
dec
xchg
xor
fcoml
in
notl
jbe
dec
int
lods
sahf
mov
pop
xchg
jno
xor
clc
shr
pop
int3
outsb
and
rolb
jne
cmp
negl
cltd
inc
repnz
rcr
out
adc
in
push
mov
lahf
jno
fs
rorb
mov
push
and
mov
cs
outsb
cmpsb
xor
xor
mov
popf
pop
incl
push
mov
lods
xchg
loop
idivb
orb
and
mov
int
pop
aas
sbb
xor
sub
jnp
adc
out
pop
pop
outsb
es
aaa
cmp
test
xchg
sub
cmp
fisttpll
lcall
rcrb
pop
repz
push
or
push
sub
cli
out
insb
ret
or
xchg
loope
pop
push
mov
enter
jbe
lock
and
and
stos
sahf
pop
jmp
xchg
xlat
push
sub
cwtl
fldt
push
int3
mov
test
cmp
sbb
sahf
fcoms
pusha
pop
push
push
and
and
inc
xor
xchg
mov
in
sahf
ja
mov
sbb
les
arpl
mov
aad
push
nop
jmp
mov
fwait
jno
fadds
xchg
idivl
pop
outsl
dec
fidivrs
inc
ficoml
fs
inc
aam
loope
rorb
pop
fisubs
xchg
bound
rcrl
into
mov
das
cmc
pop
jmp
mov
hlt
jecxz
movsb
mov
rcrb
push
stos
adc
mov
aad
ficoms
xor
mov
xchg
loope
inc
insb
inc
ret
xchg
es
sbb
xor
or
mov
pop
mov
lea
jp
ljmp
ss
xor
dec
adc
sub
pop
push
rcl
xchg
pusha
imul
rolb
cmovs
in
xor
pop
mov
sub
in
fwait
push
mov
stos
int3
fidivl
psubusw
sub
loop
loop
imul
inc
iret
out
push
jle
and
faddl
movsl
lcall
mov
bound
es
insb
dec
push
mov
lret
test
insl
mov
into
fists
push
ficomps
lret
jmp
out
add
jo
outsl
aaa
aaa
sub
mov
into
lret
dec
repz
push
xor
test
xchg
mov
inc
int3
inc
cmp
cwtl
sarb
jle
cmp
and
bnd
sub
and
imul
jecxz
cld
inc
pop
es
incb
enter
mov
xchg
out
dec
xchg
shrl
cmpsl
loope
imul
add
mov
xlat
jg
cwtl
lods
dec
xchg
jno
ss
leave
xor
sbb
mov
gs
out
imul
cmp
xor
pop
add
adcb
incb
sbb
xorl
jnp
lret
xor
and
add
cmpsb
jge
sbb
cwtl
sbb
data16
pop
lock
fadd
aad
push
inc
xchg
sub
jae
push
rol
or
xchg
and
sub
aad
lahf
mov
inc
and
testb
pop
rorb
in
call
push
mov
add
cmp
fcompl
out
sub
and
mov
out
mov
stc
xor
daa
fsubrl
mov
sahf
cmp
or
or
jge
cmp
into
shl
adc
and
and
xor
mov
shr
dec
jno
ljmp
push
out
sbb
in
sub
dec
imul
xor
ret
sahf
fnstsw
adc
lds
idivb
push
sbbb
fidivs
arpl
dec
or
movsl
stc
in
mov
push
xlat
or
and
adc
add
xchg
loop
mov
mov
dec
sub
push
lret
sbbb
in
jb
mov
dec
dec
mov
xchg
pop
fcoms
push
hlt
repnz
cmpsb
mov
jo
int3
andl
popf
adc
dec
fildll
roll
dec
flds
jns
aaa
mov
aad
loop
adc
add
inc
pusha
and
xchg
imul
add
out
xchg
fs
neg
mov
push
xchg
adc
mov
xchg
sbb
adc
nop
mov
ljmp
enter
lahf
and
cmpsb
outsb
mov
mov
xchg
cltd
in
cmp
inc
mul
cmpsl
cs
sbb
xor
pusha
insb
inc
mov
daa
pop
aam
cmp
pop
mov
stos
mov
and
test
and
xor
dec
mov
dec
dec
sub
sbb
stos
jle
pushf
gs
add
or
test
sub
jb
mov
cs
jg
xchg
or
ret
xchg
popa
dec
push
xchg
jp
jnp
ljmp
mov
sub
dec
inc
push
nop
jns
outsl
adc
inc
clc
inc
mov
adc
mov
cs
mov
xorb
out
adc
mov
add
jo
dec
mov
cmp
repz
mov
std
test
ljmp
push
lods
xchg
addr16
hlt
xchg
lret
stos
pop
insb
leave
stos
lahf
fucom
and
jle
ljmp
jo
pop
outsb
adc
sbb
mov
adc
add
loopne,pn
sbb
shrl
pushf
xor
mov
in
jne
loope
repnz
inc
or
adc
inc
sti
adc
lea
mov
aad
xchg
test
sbb
ret
push
and
js
lcall
fs
push
test
outsl
xor
dec
xchg
dec
ss
add
adc
dec
mov
push
and
lds
aam
fdivr
test
in
out
nop
testl
push
inc
cli
adc
adc
cmc
shll
xchg
lret
lds
gs
sbb
inc
movsb
mov
sti
push
out
adc
daa
insl
scas
loop
loope
rcll
mov
lret
mov
ss
pop
icebp
add
mov
rclb
cmp
mov
icebp
out
jg
icebp
push
dec
in
out
test
fsts
sbb
repz
sub
fnstenv
dec
mov
mov
fcoml
sbb
outsl
shl
js
inc
outsl
xor
scas
jge
xor
cltd
shrl
add
dec
xchg
notl
out
push
lret
pop
jg
adc
mov
popf
es
enter
orb
or
cmpsl
fsubl
das
repnz
subb
push
push
std
mov
push
push
xlat
pusha
popa
and
and
add
ja
or
or
cld
pop
pop
mov
decl
clc
xor
scas
outsl
jmp
je
pop
xor
add
pushf
scas
xor
ret
push
mov
pushf
dec
jnp
mov
cmp
pushf
ret
fiadds
out
xor
inc
scas
in
push
test
or
push
inc
jb
cld
cmc
push
fimull
and
in
pop
dec
mov
xchg
pop
dec
push
push
dec
das
cltd
mul
std
mov
cmp
stos
loop
int3
mov
add
mov
mov
sub
sbb
outsl
mov
insl
aam
scas
loop
les
jp
jg
test
in
fsin
int3
xchg
loop
andl
pop
add
sahf
cli
mov
idivb
cmp
push
cmc
repnz
nop
fwait
pop
adc
mov
xchg
imul
pushf
into
dec
popa
das
xor
dec
sub
call
inc
fs
imul
inc
iret
pop
mov
lds
dec
sbb
fidivl
cltd
jne
xlat
xor
inc
push
sbb
dec
movsb
mov
xor
pop
push
inc
pop
ret
cmp
add
ja
pop
fstl
pushf
cs
and
and
mov
flds
or
inc
sbb
mov
push
test
clc
jmp
scas
scas
cmpsb
std
outsl
cld
mov
cltd
loopne
mov
mov
fwait
nop
pushf
jp
dec
insb
jmp
movsl
imul
js
pop
pop
dec
lcall
ret
daa
mov
adc
shrl
cmc
sahf
test
hlt
popf
push
jp
fidivs
pop
xor
mov
inc
fstp
pop
sbb
mov
cltd
mov
data16
pop
pusha
push
js
xchg
test
out
mov
mov
rorb
out
in
enter
xorb
out
rcrl
fmuls
lea
cmp
xchg
mov
dec
fstp
js
and
mov
push
cld
mov
xchg
mov
lcall
in
movsl
mov
repz
lahf
bound
lock
adc
inc
cmc
lea
clc
lcall
mov
outsb
pop
bndstx
lods
mov
out
mov
mov
cld
mov
jecxz
repnz
push
pop
sahf
push
xchg
or
sbb
xchg
dec
js
test
xchg
cmp
jbe
fstpl
dec
mov
add
repnz
xor
ss
out
sbb
pushf
outsl
mov
lea
push
in
test
mov
std
xor
aad
mov
add
int3
and
cmp
inc
loop
cmp
and
fs
mov
pop
push
repnz
xchg
movsb
push
xchg
jecxz
popa
and
pop
outsb
movb
cld
cld
mov
sti
or
push
xchg
cmpsl
insb
dec
je
mov
adcb
and
cmp
xchg
push
pusha
out
pop
arpl
test
mov
push
lret
push
in
subb
fucomi
mov
or
call
dec
arpl
adc
iret
pushf
push
sahf
mov
dec
stos
rorb
es
push
jecxz
pop
dec
in
popa
mov
cs
out
mov
mov
or
push
mov
sar
scas
jbe
lods
sub
nop
outsl
cwtl
les
stos
movsb
nop
mov
loop
xor
adc
repnz
add
in
arpl
mov
daa
test
mov
test
inc
test
mov
lods
rol
punpcklbw
adc
jo
shrl
shl
add
or
test
pop
cmp
rcpps
stc
mov
cmp
fsubp
out
jmp
or
jge
mov
jmp
add
mov
dec
loope
cmpsb
jecxz
xor
mov
xchg
sbb
inc
pop
xchg
cmp
or
pop
icebp
fbstp
add
or
int3
lret
mov
imul
stos
inc
aam
popa
cmpsb
dec
pop
fwait
add
cmpsb
insb
mov
cld
cltd
push
pop
jl
divl
pop
shlb
sbb
je
mov
adc
jne
mov
into
pushf
pop
or
mov
sbb
push
mov
add
jg
push
movsb
imul
nop
test
mov
outsl
pop
xchg
xchg
rcrl
xor
fiaddl
push
jne
and
inc
fdivrs
popf
rorb
pushf
lods
cwtl
shlb
pop
outsl
fimull
clc
leave
outsb
cmp
pop
outsl
aas
daa
addr16
aam
inc
sub
and
imul
jge
scas
enter
inc
cwtl
mov
shl
scas
push
es
loop
xchg
popf
jl
in
movsb
adc
pop
cmpsb
xchg
movsl
out
in
repz
roll
loop
jl
mov
mov
xchg
mov
push
fidivrs
mov
cmova
lret
or
shlb
movsb
addr16
dec
ds
shlb
outsl
jecxz
dec
rcll
jae
mov
mov
cmp
loopne,pn
and
push
lcall
fists
ret
cmp
push
jl
xchg
cmp
mov
jno
xchg
imul
dec
outsb
rcl
aas
fsubp
popf
in
icebp
push
sbb
xchg
xor
inc
imul
push
push
mov
inc
push
cmpsb
push
sbb
pop
in
xchg
ret
lret
inc
cmp
cmc
inc
jne
jns
or
inc
and
cmc
std
jne
scas
dec
sar
cltd
jae
dec
dec
dec
repz
and
adc
stos
or
ret
int3
fldt
xlat
mov
mov
movsb
cmpsb
cmp
sub
push
int
andb
lea
add
cltd
clc
adc
cli
sbb
xor
adc
stos
lcall
mov
pop
jbe
ds
daa
push
push
inc
push
in
and
sbb
pusha
shlb
pop
mov
mov
and
push
and
cld
pop
adcl
dec
fwait
pushf
cmp
adc
loopne
fsubl
adc
cmp
xchg
test
fs
sbb
sbb
sbb
enter
mov
cmp
ss
mov
mov
xchg
movsl
jl
test
push
test
scas
int3
daa
cltd
xor
ret
pushf
enter
mov
adc
push
xchg
mov
imul
cli
push
stc
xchg
xor
lods
inc
sahf
test
mov
xchg
sbb
xchg
in
push
js
imul
daa
shr
mov
jnp
pop
mov
push
mov
xor
in
mov
mov
jmp
add
mov
mov
xchg
dec
adc
add
adc
add
rolb
sbb
adc
clc
adc
mov
mov
mov
ror
mov
cmc
popa
mov
jmp
mov
adc
jecxz
stos
push
push
push
and
fdivl
rorb
aad
mov
cmp
data16
dec
pop
sub
mov
scas
mov
lods
dec
add
sahf
rcr
pop
popf
fs
lret
jmp
mov
jb
inc
sbb
test
and
lahf
ret
ljmp
mov
decl
xchg
push
cmp
mov
add
bound
mov
fldcw
sbb
push
sbb
pop
push
or
nop
sarl
loop
les
push
jp
aam
or
dec
xchg
or
jl,pt
sti
pushf
xchg
inc
fidivrs
pop
cmpl
jl
movsl
jb
cli
rorb
movsl
dec
push
call
insl
das
ror
test
mov
xchg
xchg
gs
xchg
nop
push
pop
sub
fnstenv
shrl
push
shlb
push
cli
pop
cmp
dec
dec
iret
xor
ret
mov
ret
dec
xchg
bound
sbb
loope
into
arpl
push
scas
daa
mov
rcl
mov
mov
or
sub
cmp
pop
pxor
mov
and
sub
mov
cmpxchg
outsl
fcoml
test
adc
imul
fcomps
push
loope
imul
in
mov
adc
pop
fstps
push
loope
jne
jp
mov
and
mov
jecxz
push
xor
xchg
lahf
cwtl
in
and
mov
shlb
cwtl
and
add
outsl
daa
sub
out
aas
stos
movsl
int3
cwtl
mov
test
mov
adc
lret
push
or
loopne
dec
loop
and
or
mov
and
inc
icebp
lret
pop
sub
dec
lret
iret
rcrb
sbb
pop
and
insl
inc
lahf
dec
hlt
mov
cltd
outsl
sti
stc
loopne
xor
ret
scas
dec
in
jmp
orb
lock
cmpsl
dec
mov
je
push
roll
mov
pop
xlat
jmp
fimuls
sbb
mov
jmp
fcomp
shlb
mov
movsb
adc
lret
dec
ror
xchg
jle
out
movsb
movsb
inc
outsl
ljmp
stc
cmpsl
adc
push
adc
subb
andl
sbb
lahf
xchg
mov
fiadds
incl
in
inc
popf
mov
movb
ficomps
jnp
test
adc
dec
sub
mov
sbb
adc
outsl
xchg
nop
cmp
out
jmp
mov
xor
imul
sahf
cmp
inc
cmp
sub
push
faddl
mov
jno
mov
cmpsl
ss
mov
aaa
insl
xor
rcrl
ss
lcall
stc
popa
rolb
cld
hlt
cmp
cmp
fistl
mov
loopne
lcall
hlt
fnsave
jl
push
clc
nop
cli
arpl
cmpsl
push
cmp
aaa
adc
jl
mov
ret
sahf
stc
xor
inc
jl
xor
mov
xchg
or
or
add
add
dec
sbb
adc
test
push
inc
in
push
sub
fsubr
sbb
in
dec
adc
lods
scas
adc
mov
shlb
in
int3
popf
loop
and
sub
sti
lock
scas
cmp
fmuls
push
push
fisttpl
xor
jecxz
fiadds
mov
mov
iret
inc
cmp
xchg
lret
ret
pop
sbb
mov
dec
cmp
lret
loope
mov
jns
xor
scas
adc
ss
test
pop
jno
das
jmp
lock
dec
cwtl
mov
push
jns
in
das
push
xorl
shr
shll
pop
and
stos
stos
sbb
and
cmp
mov
push
iret
data16
adc
gs
adcl
lds
in
aad
jmp
ret
ss
mov
mov
pop
add
ja
ds
ljmp
jg
mov
dec
ljmp
xchg
push
mov
es
or
push
dec
cmp
or
adc
cmp
or
mov
int3
xchg
call
sbb
mov
enter
add
lea
pop
lods
js
js
or
mov
mov
push
mov
fs
cmp
jg
fsubrl
movsb
pop
test
shl
addr16
dec
mov
xor
push
mov
lahf
fs
addl
mov
fsubs
push
fnstcw
sbb
mov
and
fisubl
add
popf
repnz
push
inc
stc
test
adc
ret
scas
movntq
scas
jecxz
fs
aad
ds
mov
ja
inc
dec
sub
mov
repnz
cwtl
movsb
mov
jne
movsl
cmp
mov
jne
pop
iret
push
lods
mov
jns
gs
je
iret
push
lret
ficompl
icebp
pop
call
mov
shl
add
lahf
mov
mov
inc
mov
push
ficompl
xor
xchg
sub
push
xchg
sub
mov
xchg
xor
sub
mov
sub
push
pop
pop
or
mov
addb
mov
pushf
ds
movsb
xchg
xchg
rcrl
inc
jns
stc
inc
out
mov
mov
xchg
push
movsl
sbb
jmp
in
adc
xor
stc
inc
les
mov
loop
test
push
push
inc
aas
outsb
cmp
out
xchg
insl
or
jb
aad
inc
mov
dec
sti
cld
dec
mov
mov
cmp
popa
or
mov
inc
clc
sbb
or
ss
cld
sub
insb
sub
pusha
cmc
dec
loopne
sahf
pop
cmp
xor
test
adc
je
push
sub
ljmp
divl
ret
fbld
mov
dec
pop
mov
mov
fstpt
cli
lods
out
and
jae
fnstcw
jnp
mov
push
add
sbb
adc
icebp
or
bound
in
jge
mov
sbb
jle
mov
dec
xchg
mov
data16
cwtl
fcmove
fcoml
push
mov
sub
lods
adc
pop
jno
sbb
xchg
mov
test
outsl
lods
fsubr
shll
cltd
outsl
cwtl
dec
xchg
test
push
adc
mov
push
scas
rcl
psubb
lock
mov
jns
and
sbb
js
pop
popa
pop
sbb
cmpsb
dec
mov
sub
cmpl
jno
pushf
push
cmpsb
pushl
daa
mov
es
cwtl
sub
mov
cmpsl
sbb
sub
mov
outsb
mov
shll
leave
push
fcoml
sbb
movb
and
je
aaa
jne
fmulp
clc
mov
cmp
xlat
ror
mov
mov
gs
inc
adc
add
loopne
mov
and
loopne
dec
mov
adc
xor
std
mov
pop
cltd
adc
loope
out
test
cmp
scas
mov
daa
or
ret
xor
stos
test
ret
clc
mov
cmp
stc
mov
clc
mov
cmp
fldt
jae
or
movl
cmp
nop
cmpsb
mov
out
jns
hlt
enter
lret
ss
mov
jmp
inc
mov
rclb
and
sahf
addr16
jae
adc
aas
cli
andw
dec
test
mov
ret
lds
and
mov
cmp
hlt
cltd
sbb
push
test
mov
int3
rorb
add
and
inc
push
loopne
sbb
adc
mov
loopne
test
push
or
fbld
mov
shrl
xlat
lahf
ljmp
mov
jl
jne
mov
xor
fld
inc
popa
sub
lret
jb
push
or
sub
cmpsl
xchg
mov
sub
xchg
inc
jns
or
jne
pop
sahf
mov
and
hlt
cld
stc
add
adc
sub
cld
inc
add
jne
movsl
and
and
notl
cmp
sarl
mov
cmp
in
push
mov
pop
scas
xchg
mov
adc
insb
repnz
call
ja
jb
bound
shrb
or
insb
mov
xchg
pusha
push
lret
aam
bnd
movsb
ficoml
popf
int3
daa
adc
dec
rcr
lcall
ss
push
sbb
js
repnz
jo
pop
lock
data16
nop
loop
pushf
scas
push
icebp
xor
pop
dec
js
lds
push
sti
sub
sbb
mulb
dec
inc
mov
das
push
jo
add
pop
xor
or
ljmp
addl
jnp
stos
call
ret
loopne
insl
cmpsb
fisubrs
jmp
xor
dec
pop
iret
in
les
inc
pop
jmp
outsl
xchg
cwtl
adc
leave
adc
and
pop
jnp
xor
std
mov
les
popf
loop
xchg
jns
cmp
clc
lods
icebp
and
fsubrs
adc
sbb
mov
mov
dec
mov
dec
mov
mov
mov
cmc
stos
push
pushf
xchg
out
and
or
adc
lods
push
push
xchg
jmp
dec
xchg
mov
rorb
xor
pop
mov
pop
fimull
mov
lock
add
test
aas
loope
pop
cmpsb
cmp
test
inc
insl
mov
in
cmp
inc
test
xchg
repz
lock
movsb
mov
push
ret
add
add
sarl
dec
mov
scas
test
dec
mov
jbe
aas
mov
jns
mov
in
mov
adc
sbb
cmp
sub
es
pop
lret
xlat
jae
inc
into
cwtl
fsubrl
push
cwtl
or
pop
xorb
stc
push
push
mov
jp
mov
jo
and
push
shlb
push
fcompl
cwtl
ret
test
jl
ljmp
mov
mov
dec
lcall
mov
jmp
daa
test
aas
sarb
jns
pop
clc
cmp
pushf
mov
cmpsb
in
out
xchg
imul
xchg
jmp
mov
movb
mov
insl
out
push
jmp
aam
negb
jae
inc
adcb
mov
sahf
aad
xchg
xchg
negl
jl
out
je
arpl
lods
mull
xchg
adcb
pushf
cld
shll
ret
and
xchg
dec
pop
xlat
into
repnz
mov
mov
dec
dec
roll
inc
scas
shlb
je
daa
outsl
sub
sti
xchg
xlat
daa
leave
arpl
call
testl
push
gs
mov
lock
ss
gs
fimuls
fsts
int
divl
sbb
or
add
leave
pop
lret
dec
or
fcomi
es
fsts
add
inc
add
aad
xor
xchg
sub
jle
mov
cmpsb
mov
sahf
in
rolb
daa
cli
in
arpl
dec
js
test
jbe
arpl
lret
into
pushl
test
or
pop
xor
jp
add
popf
dec
movsb
in
mov
adc
lea
mov
imul
sbb
sti
mov
push
pop
or
shrb
sbb
dec
test
call
pop
loope
jl
fnstcw
repnz
add
jne
movsl
int
mov
inc
mov
movsl
addb
inc
test
pushf
mov
mov
or
movsl
jl
lea
fistpll
mov
mov
loop
cwtl
mov
pop
pop
stos
pop
out
inc
dec
mov
sbb
in
cmp
scas
xchg
subb
mov
push
lds
push
ffreep
pop
fdivrp
pop
push
outsl
daa
je
loopne
sbb
inc
enter
push
mov
addr16
cmp
in
sarl
xor
enter
mov
pop
cmpsb
call
mov
outsl
add
mov
pushf
sarl
cmpsb
add
mov
mov
sarl
mov
hlt
test
xor
mov
cmp
out
xor
arpl
daa
roll
out
fildll
sub
in
out
mov
mov
js
call
adc
xchg
mov
sub
sbb
shlb
xor
mov
add
jno
xchg
fwait
cwtl
mov
push
test
pusha
mov
or
movsl
mov
out
rep
andb
jbe
or
scas
adc
adc
add
fdivrl
cmp
xor
add
add
neg
push
dec
out
mov
ss
lock
lahf
iret
mov
pop
or
cmp
and
testb
dec
fstpt
mov
and
mov
repz
inc
shll
xchg
aam
loop
hlt
or
pop
cld
jne
xlat
loopne
inc
clc
push
push
loopne
out
mov
xchg
mov
repnz
add
push
mov
dec
cli
mov
dec
or
inc
sbb
mov
out
cwtl
ja
mov
mov
insb
pop
pop
jbe
mov
sbb
loop
adc
clc
push
jbe
jl
pop
cmp
xchg
aam
arpl
cmpsb
lds
push
pop
sub
jo
insl
sahf
jmp
bound
or
add
mov
insl
mov
sub
fadd
and
rcll
mov
mov
jle
aam
jno
ficompl
aas
lcall
xchg
pop
dec
or
idivb
and
in
data16
pushf
sbb
rorl
adc
shrb
int3
pop
in
mov
lahf
cmpsb
cmp
jb
inc
ss
adc
adc
inc
or
cmpsl
cmp
in
jo
mov
stc
mov
fsubs
mov
mov
fdiv
mov
fucomi
xor
inc
movsb
add
hlt
add
cs
sti
jmp
pop
shr
nop
jnp
in
leave
das
or
out
sbb
dec
inc
jmp
loopne
cwtl
cmc
int3
bnd
inc
outsb
push
shl
in
xor
sub
cld
mov
iret
and
xchg
jae
in
in
repnz
push
push
jne
neg
mov
adc
loopne
popf
cmc
add
jmp
inc
xchg
push
mov
cmp
dec
insb
cli
scas
in
and
jle
clc
data16
cmp
mulb
ljmp
ja
adc
and
sub
dec
enter
and
dec
inc
mov
rorl
mov
mov
addl
and
sub
dec
lods
test
and
imul
jmp
mov
dec
inc
sbb
fs
xlat
mov
jmp
scas
pop
mov
shld
inc
loop
dec
pop
xor
loope
sub
xor
mov
or
mov
sub
inc
repz
jl
dec
fdivrs
add
pop
ret
or
inc
enter
shll
cmp
mov
dec
mov
lds
xor
xor
je
scas
bnd
rcr
cmpsl
push
lods
inc
repnz
out
shl
rep
xchg
mov
pop
jmp
and
aad
sub
jo
and
ljmp
inc
jne
adcl
divl
lock
dec
pushf
ds
push
rorb
loope
push
push
loopne
imul
jnp
leave
fcoms
xchg
pop
es
and
fs
adc
in
and
sahf
sbb
jmp
inc
xor
xchg
mov
xor
adc
push
ja
pop
int3
xlat
push
or
xchg
mov
jp
push
mov
and
add
fistl
or
push
pop
lret
or
sbb
mov
jp
or
jnp
and
mov
stos
sbb
xchg
ds
jge
neg
jno
out
xor
out
dec
cmp
xor
sub
int3
pop
mov
adc
stos
idivb
inc
or
adc
adc
adc
cmpsb
xchg
loopne
xchg
add
dec
jnp
sti
sub
xchg
test
cmp
jecxz
sbb
jl
jnp
js,pt
jg
dec
dec
outsl
jl
cli
les
fidivs
push
inc
push
loope
testl
mov
mov
xor
int
mov
inc
inc
cmp
jno
mov
mov
adc
jl
test
test
outsl
or
sbb
rcr
clc
cs
jp
cwtl
sub
jp
fldenv
pop
lock
cld
dec
sar
data16
in
mov
cmc
mov
jns
ret
sbb
sbb
loop
inc
lea
andl
mov
int3
repnz
pop
inc
fisttps
jne
out
add
imul
sub
in
add
lcall
jmp
inc
jnp
pop
xchg
xchg
jmp
in
mov
adc
xor
in
adc
push
push
mov
lret
cmpsb
push
mov
cmp
adc
test
sub
sub
mov
out
cs
jmp
in
std
dec
scas
sbb
ljmp
loop
rolb
in
test
mov
mov
js
imulb
jle
rcpps
mov
mov
stos
cmpb
or
and
pushf
inc
mov
mov
cmpb
insb
iret
mov
outsl
jb
dec
and
and
push
push
nop
mov
fstpt
mov
mov
lahf
xchg
movsb
xchg
test
fdivrs
mov
jae
ljmp
jp
mov
fdivrl
scas
sarb
enterw
pop
insl
mov
scas
in
xchg
mov
jl
fsubrs
adc
pop
lcall
lock
nop
ret
jp
fs
in
sbbb
pop
xor
daa
mov
loope
push
and
mov
jae
cwtl
adc
mov
dec
add
inc
lds
sub
lahf
loopne
scas
cmc
pusha
bnd
jne
push
xor
stos
xor
lcall
xor
out
push
push
ret
mov
xchg
sbb
mov
cmp
inc
sti
loop
test
cmp
inc
rclb
mov
mov
loope
cmpsl
inc
pop
sub
out
ss
adc
add
in
cmp
mov
insl
lret
fmuls
repz
cltd
push
xor
push
xchg
lret
add
mov
xor
xor
push
sub
mov
ljmp
arpl
mov
xor
sub
and
and
push
inc
rolb
dec
pushf
jb
in
pushl
xor
inc
clc
xor
push
flds
scas
loopw
ds
iret
aas
jl
pusha
ja
mov
mov
bound
inc
cmpb
push
stos
lods
jmp
mov
cmpsl
mov
inc
cmp
clc
arpl
add
cmp
jg
xchg
xchg
dec
mov
daa
xchg
fbld
pop
stc
mov
in
mov
cld
or
lret
les
xor
cli
mov
mov
pop
arpl
insl
cltd
cli
and
pop
es
nop
jle
imul
out
rorl
xor
cli
lock
sbb
push
std
into
and
push
call
dec
dec
dec
leave
pusha
daa
jecxz
fwait
jne
xchg
je
push
and
test
movsb
jg
mov
pop
bound
dec
out
mov
hlt
adc
cmp
jne
dec
pop
lret
shll
lret
mov
or
inc
inc
scas
movsb
movsb
divb
fstl
sarl
adc
cmp
sub
movb
mov
dec
divl
roll
aam
fsub
sub
adcb
fadds
ror
mov
sbbb
xor
xchg
popf
mov
pop
mov
jg
scas
lods
inc
jae
pop
pushf
cmp
and
or
push
aam
ss
call
xlat
popa
xor
jge
push
ret
jge
stos
jb
xor
mov
push
jno
sahf
out
addr16
in
in
bndldx
aas
pop
sub
push
cltd
das
out
insb
and
ret
in
jl
test
inc
out
mov
imul
pushf
ljmp
mov
or
jnp
xchg
add
sbb
adcl
std
push
sbb
cmpsb
cmp
mov
or
pop
cmp
cmc
rcrl
arpl
stos
jbe
mov
out
fisttpll
sbb
pop
and
mov
mov
cmpsl
sbb
or
jnp
cld
lret
stos
icebp
cmc
mov
sbb
decb
jb
dec
sbb
stos
sbb
jmp
pop
test
inc
xor
pop
sahf
repz
and
inc
xchg
xchg
sub
mov
outsl
in
movsb
jle
test
mov
cmpb
push
mov
out
sbb
and
cmpsb
adc
and
mov
sub
mov
lret
xor
dec
xchg
dec
lds
aam
mov
nop
sub
lea
lods
adc
rcr
sbb
jmp
sbb
jecxz
leave
xchg
mov
in
push
fdivs
dec
add
sbb
cwtl
clc
xor
xor
lea
lret
adc
scas
push
mov
mov
push
mov
sbbl
sbb
fwait
xor
mov
jecxz
or
xchg
cltd
ljmp
xchg
fcmovnb
sbb
mov
xchg
cmp
adc
movsl
std
push
mov
cmp
mov
mov
jmp
mov
pushf
pushf
mov
jmp
sub
push
xchg
pop
inc
mov
push
mov
ret
add
lock
mov
es
mov
jmp
cmp
push
bound
push
lods
and
mov
mov
xor
push
mov
pop
insb
dec
xchg
mov
int
ja
adc
xchg
pop
in
push
in
repz
test
cmpsb
add
test
and
outsl
inc
and
jge
je
cmpsl
in
xchg
and
std
add
popa
push
cmp
xchg
std
lahf
dec
js
dec
cwtl
les
and
lea
sbb
pop
adc
or
lods
test
sbb
ret
cmc
scas
cld
mov
jecxz
cld
mov
fs
pop
mov
lret
xchg
rol
lods
sbb
xchg
jmp
xor
mov
mov
clc
dec
ret
dec
out
lret
sbb
mov
and
push
or
fists
add
jmp
in
dec
std
push
sahf
fbstp
add
rcll
test
dec
out
int3
addr16
arpl
mov
and
xchg
add
mov
xchg
insl
loop
xchg
sbb
sbb
lret
xchg
ret
inc
push
mov
xchg
xchg
pop
adc
xor
cmp
pop
cmpsl
sub
shl
push
insl
cmpsb
mov
pop
lahf
inc
xor
clc
pop
bound
es
xchg
sbb
leave
xor
cmc
mov
xlat
add
xor
daa
int
xor
pop
ljmp
sbb
ds
or
fisttpl
scas
dec
or
push
lea
test
inc
sbb
lea
adc
cmp
dec
cwtl
jns
out
push
pop
dec
bound
sahf
outsl
dec
insb
push
ds
inc
out
out
mov
adc
inc
int3
jle
inc
popa
jp
xlat
out
jmp
add
mov
in
sub
push
mov
cmpsb
pop
cld
dec
fidivrs
cld
or
cmp
orb
or
scas
add
mov
mov
dec
inc
sahf
je
sahf
dec
out
outsl
dec
cmp
mov
or
pslld
out
pop
xor
xchg
subb
mov
xor
imul
addr16
or
movsl
adc
and
and
cmp
jbe
cli
loope
xor
sbbl
aam
out
movsb
cmp
cmp
icebp
jo
cwtl
adc
fwait
cld
es
roll
ds
es
ds
jae
and
test
outsl
es
pop
call
ss
leave
es
das
mov
jno
mov
lcall
xchg
outsb
jp
cld
not
push
pop
in
inc
add
mov
pop
int
shll
cmp
xor
icebp
in
jp
call
mov
mov
lret
cmpl
fcmovnbe
sahf
push
icebp
dec
aam
sub
inc
and
ja
mov
rcrl
pop
mov
jae
daa
cmc
outsl
cmpsb
xor
icebp
loop
sub
cltd
dec
or
add
xchg
movsl
xchg
pop
cmp
idivl
out
cmp
jmp
into
daa
ds
xor
and
push
mov
inc
test
dec
into
inc
mov
fwait
adc
mov
lahf
pusha
cld
inc
iret
inc
xor
aad
in
xchg
fisttps
aam
rep
lahf
fidivrl
aas
jle
or
push
pop
push
mov
std
and
mov
cmp
mov
pop
ds
add
fsubrp
cwtl
and
jnp
jp
dec
mov
daa
test
xchg
mov
movl
mov
sub
sub
repnz
or
imul
repz
out
int3
insb
jne
cli
ljmp
icebp
call
shlb
sub
mov
mov
rclb
jmp
jl
in
sbbb
data16
sub
dec
negl
jno
sbb
mov
fucomp
jnp
call
sti
jne
mov
inc
cmp
push
xor
xchg
push
sbb
mov
xchg
or
pop
add
jae
add
dec
std
pop
xchg
xor
je
and
lret
rorb
mov
xchg
aad
fcoms
sbbb
ret
jne
push
dec
cli
xchg
or
mov
jecxz
dec
cmp
mov
jmp
pop
ret
test
ljmp
fs
cli
cmp
mov
fsubrp
lahf
adc
push
fmul
add
jmp
inc
jno
shll
lcall
pop
test
mov
push
leave
push
out
insb
mov
inc
push
adc
sub
fcmovnb
out
scas
cli
jecxz
lods
sbb
repnz
pop
jnp
js
jb
xor
and
shlw
jnp
mov
sub
add
cmc
xchg
addr16
mov
movsl
inc
std
push
mov
cli
movsl
cmpsb
inc
sbb
fxam
or
cs
mov
mov
fisubl
jne
sarl
mov
push
popa
sub
addr16
xchg
divb
xrelease
push
rcl
out
cmp
repnz
shlb
jge
mov
lahf
pop
sar
rorl
cli
sbb
cs
xchg
fisttpl
out
xchg
push
push
jp
inc
repz
lock
aam
into
add
and
sbb
outsb
add
stos
roll
mov
mov
and
cmpb
xlat
cltd
es
insb
enter
mov
mov
movsb
popa
js
add
mov
cld
daa
mov
and
cmpsb
and
flds
in
test
negl
adc
popa
inc
clc
lods
push
movsb
cmp
push
in
mov
cmp
das
clc
cmp
js
jle
push
pop
mov
gs
cmc
js
xchg
sbb
xor
sarl
cmp
vinsertf64x4
adc
adcb
mov
jb
jae
jmp
hlt
mov
test
sbb
cmp
jae
fildl
shrb
inc
stos
lcall
jne
mov
inc
cmp
rorl
lret
ret
pusha
ds
pushf
inc
mov
xor
push
cwtl
and
cmp
sahf
shlb
fstcw
add
mov
les
xchg
je
out
mov
out
add
or
ljmp
in
insl
popf
movsb
mov
clc
mov
popf
sbb
and
imul
imul
mov
test
inc
call
int3
and
sbb
inc
mov
ds
test
push
xchg
xchg
test
adc
xchg
pusha
andb
cld
push
mov
loope
jae
cli
jo
pushf
add
popf
insb
fcom
mov
sub
mov
xor
daa
ror
movsb
cmp
loop
int3
outsl
xchg
lret
sub
int3
adc
and
lret
movsl
inc
rorb
jl
fwait
pop
aad
sar
fcmovnb
dec
test
lea
inc
mov
loop
adc
inc
lods
inc
mov
subb
leave
mov
clc
and
mov
xchg
ret
xchg
xchg
imul
dec
mul
loope
sti
mov
arpl
in
insl
test
sbb
jb
adc
mov
ret
cmc
aam
mov
andl
pop
cmp
ret
pop
fadds
jbe
dec
shll
dec
adc
and
cmp
push
adc
loope
scas
dec
loope
lds
sbb
popl
stos
sbb
add
test
lods
popf
rcr
stos
jmp
in
pop
xchg
cmp
cmp
loope
inc
mov
or
mov
pop
in
xchg
mov
mov
test
xor
pop
mov
and
and
push
dec
fidivrl
sub
movsl
inc
leave
pop
ret
adc
xor
and
loope
scas
jnp
gs
and
inc
sahf
or
xor
rclb
hlt
xchg
cmpsb
sar
and
adc
xchg
rcrl
sub
dec
dec
in
lds
sbb
fsubr
push
jl
cmp
push
sahf
test
leave
inc
lods
stos
cmpsb
mov
mov
ficoms
adc
jo
and
push
mov
jl
inc
jge
test
and
imul
fs
imul
rolb
mov
dec
sbb
cmpb
mov
dec
faddl
in
out
jle
jle
push
test
aas
sbb
aaa
imul
shll
inc
xor
fs
push
repnz
cld
xlat
loop
adc
sti
icebp
push
xor
mov
insl
pop
ret
inc
push
pxor
cld
cmc
int
xor
mov
daa
enter
sbb
das
xor
inc
rcr
mov
fstps
sbb
mov
nop
push
jp
push
fabs
cli
mov
pop
test
add
aad
sub
push
inc
dec
lret
jno
ficomps
cmpsl
test
pop
lret
faddl
jecxz
mov
je
and
and
xlat
loop
push
cltd
ja
sub
jl
jb
sbb
imull
mov
hlt
outsl
sub
sarb
or
lds
dec
outsb
lea
xor
xchg
xchg
mov
lods
jbe
and
int
add
add
gs
test
nop
mov
enter
fistpl
popa
pop
ds
mov
in
mulb
mov
je
cmp
imul
aam
jbe
lods
cmp
mov
dec
mov
pop
add
fsubp
dec
push
inc
stc
add
clc
push
aas
int3
outsl
int3
cmp
add
push
in
jnp
inc
lea
ds
mov
in
call
lcall
aaa
cmp
lock
ss
mov
popf
mov
dec
cwtl
fldcw
xchg
fiaddl
mov
in
cmpsb
cmpsb
sub
mov
inc
inc
fs
mov
jns
mov
cmp
pop
movhps
dec
popa
insb
mov
cltd
pop
loopne
cltd
dec
hlt
push
jno
jo
xchg
bound
mov
inc
xchg
mov
fcompl
mov
jg
xor
cld
insl
std
xchg
jne
inc
sub
jae
pop
into
cmpsl
arpl
add
jle
lahf
xor
fwait
leave
ficomps
mov
inc
rcl
stos
mov
movsb
lahf
popf
mov
sbb
jge
mov
ret
test
cli
insl
and
cld
out
pop
lds
or
cmc
lds
sbb
popa
outsl
or
fildl
sub
gs
repnz
sbb
xchg
fs
fsubrs
pusha
dec
sub
fwait
imul
inc
jb
xor
dec
out
popa
ret
mov
ds
nop
jb
xchg
sbb
inc
lock
cmp
lds
pop
arpl
dec
fisubl
push
dec
outsl
into
fldenv
cmp
out
jmp
jae
cli
divl
imul
shlb
mov
xor
arpl
fsubl
clc
adc
cmc
out
push
xor
icebp
mov
jmp
fucomp
sub
or
sbb
xlat
adc
repz
sar
dec
fwait
in
inc
les
addr16
push
scas
outsl
popf
ss
inc
cld
mov
inc
xchg
push
push
and
das
enter
stos
loope
sub
sbb
or
inc
inc
cltd
push
dec
cwtl
mov
or
mov
fldenv
xor
mov
or
mov
adc
push
jle
ficoml
sbb
fwait
in
outsb
mov
push
pop
ljmp
mov
jle
mov
out
fcom
sbb
lea
test
adc
icebp
mov
movsb
stos
sub
sub
adc
out
test
in
push
or
lret
sub
add
mov
adc
decl
out
push
call
das
insb
push
mov
test
fidivs
push
js
sbb
rcrb
fistps
and
incl
aaa
frstor
scas
xor
cmp
pop
push
pusha
addb
adc
jp
adc
inc
out
cmc
outsb
arpl
in
cmovp
inc
mov
es
dec
es
cmpsb
add
mov
mov
mov
iret
movsb
rorl
in
aaa
xchg
push
dec
pop
ja
inc
cmp
sahf
test
mov
hlt
xor
movsb
lods
rorl
or
pop
aam
test
xor
inc
mov
popa
jae
imul
pop
pop
int3
lock
pop
ret
push
pop
cmp
jecxz
mov
cli
sbb
push
lea
movsl
lock
jl
add
cmc
fwait
inc
flds
loop
mov
icebp
or
jle
xchg
push
sub
jmp
lds
jo
out
outsl
rorl
ss
mov
aas
cmp
dec
sbb
adc
movsb
mov
push
mov
nop
and
mov
jmp
enter
sbb
movsl
xchg
aad
cld
loop
popf
sub
add
neg
xchg
lea
xchg
cmp
insl
inc
xchg
decl
mov
xorb
int3
shll
faddl
das
and
xor
push
roll
jnp
add
mov
xor
or
shll
movsl
mov
dec
lock
or
sub
mov
xor
call
mov
shrl
fdivl
xchg
mov
lea
data16
inc
add
repnz
sbb
mov
push
out
sub
daa
push
jbe
pusha
lock
jle
and
pop
mov
sbb
inc
lret
and
jp
decb
int3
sbb
repnz
pop
sub
mov
out
pop
add
lds
sbb
cmc
dec
subl
fdivl
call
aaa
push
stos
pop
inc
pop
cwtl
cmp
cmp
and
pop
jne
mov
mov
pop
bnd
push
push
adc
shrl
and
push
lods
mov
leave
add
out
subb
repnz
cwtl
js
scas
xchg
arpl
push
push
es
daa
leave
movsb
pop
out
addr16
rclb
loop
sahf
pop
data16
pusha
std
je
push
add
jno
push
fwait
out
xchg
mov
lods
xor
hlt
daa
ret
fs
movsl
das
stos
scas
js
and
inc
mov
push
in
rorb
sub
pop
lea
pop
mov
insl
and
nop
jne
lock
fdivrl
mov
inc
mov
inc
mov
sub
cmp
test
fisttpl
jbe
ja
fisubrl
clc
xor
inc
lock
mov
jns
loopne
dec
or
loope
add
mov
pop
sti
xor
push
mov
mov
lods
icebp
xchg
das
stos
mov
adc
out
mov
add
and
mov
push
mov
xor
add
icebp
pop
adc
call
add
ljmp
mov
fcoml
loope
hlt
xchg
jb
adc
insl
out
pop
rcr
test
das
sbb
stos
in
popa
jne
sub
add
sti
xor
movsl
lods
lahf
mov
jle
add
movb
cmp
cmpsb
jge
push
xlat
jge
inc
jns
fmull
cmpsl
mov
add
aaa
cmp
shrb
pop
lds
xchg
xacquire
out
cld
xchg
push
push
push
push
movsb
stos
inc
adc
outsl
mov
pop
fsts
insb
mov
push
mov
popf
and
jae
jmp
mov
mov
movsb
cmpsb
mov
rclb
sbb
mov
in
jecxz
rcrl
and
sub
xlat
jl
inc
mov
pusha
mulb
and
dec
inc
mov
inc
lds
in
mov
and
jne
imul
ja
outsb
sahf
jo
push
hlt
out
andl
mov
push
divl
insl
stos
push
inc
mov
arpl
jl
dec
mov
jp
add
xor
or
shrb
xor
lods
pop
ljmp
inc
xor
xchg
mov
jnp
std
pop
cmpsb
add
push
sub
icebp
ret
lcall
repz
sub
push
fldcw
and
andb
inc
leave
push
jmp
js
imul
cltd
or
mov
and
fcoms
lods
addr16
and
add
aad
push
adc
fsub
xchg
loope
jb
in
cltd
xchg
add
rcrb
sbb
and
jp
cltd
scas
fadd
inc
push
aam
ja
mov
test
push
inc
dec
mov
ljmp
dec
push
pop
out
jae
fmuls
jns
aas
outsb
insl
mov
mov
jmp
sub
fnstsw
push
pushf
stos
sbb
mov
insl
xor
jo
lea
pop
imul
fsubl
outsb
cmpsl
pop
int
jno
pop
xor
je
inc
xchg
adc
xchg
sti
mov
mov
je
mov
jns
add
rorl
xor
push
or
and
scas
adc
ret
call
lret
jae
arpl
lods
adcl
push
mov
cmp
arpl
xchg
jle
jns
xchg
jb
adc
cld
test
scas
addr16
outsl
movsb
aas
pop
jb
mov
mov
mov
popf
sub
fiaddl
fbstp
fdivs
sub
pop
mov
lods
cli
or
sub
sub
pushf
mov
cmpsl
or
and
lcall
lods
add
call
push
sbb
scas
add
sbb
push
repnz
rolb
adc
fisubs
hlt
jle
cmp
loopne
mov
sbb
rolb
add
mov
arpl
test
inc
pop
inc
cmp
xchg
push
es
mov
ss
cwtl
outsb
icebp
xchg
and
mov
mov
insb
mov
fbstp
or
xchg
push
push
popa
sti
sbb
and
movsl
mov
push
inc
fbstp
lcall
or
shl
fucomi
andl
inc
inc
push
das
sub
cld
jecxz
xor
sbb
fwait
sbb
roll
xchg
xor
pusha
jmp
jae
pop
rol
push
jp
jmp
call
mov
insl
add
shrl
sbb
mov
ret
and
push
sbb
pop
insb
in
push
lret
dec
sahf
xor
adc
push
adc
jo
out
cmc
lret
dec
jmp
sub
push
pop
mov
push
jbe
popf
movsb
inc
mov
movb
stos
loopne
adc
les
mov
or
in
stos
rcl
sub
in
daa
outsl
or
stos
mov
scas
xchg
xor
mov
sarb
jecxz
and
mov
lahf
in
xor
movsl
pushf
xchg
cmp
aad
pop
lret
push
out
jge
or
out
scas
nop
shr
std
popf
scas
mov
int
pop
and
sub
fisubs
pop
push
in
popf
jle
push
mov
daa
and
jle
and
cld
sarb
sbb
daa
inc
push
jecxz
clc
es
cmpsl
mov
cmp
mov
push
fidivs
and
sbb
sbb
push
push
sahf
ljmp
lds
ljmp
scas
jecxz
push
lcall
inc
mov
inc
aaa
sbbl
stc
xor
jns
fistps
inc
cltd
icebp
dec
xchg
cltd
push
movsl
clc
inc
lret
xchg
das
and
ficomps
sarb
add
jle
inc
test
cmpsb
imul
out
cmpsb
adcb
dec
es
pop
dec
pushf
dec
gs
pop
jmp
mov
je
dec
cwtl
nop
xor
xchg
mov
fs
mov
mov
hlt
mov
xchg
mov
mov
inc
cmp
cwtl
inc
push
stc
pop
mov
movsb
xchg
sub
mov
or
inc
ljmp
popa
pusha
fidivrs
lea
cs
fcoml
pop
dec
es
push
pusha
test
xor
lds
and
lcall
mov
cmp
xchg
out
stos
loopne
outsl
in
inc
pop
xor
cmpsl
fisubl
out
shrl
daa
mov
xor
lods
mov
insb
out
mov
arpl
fldcw
js
int
xor
cmp
ret
cwtl
sbb
popf
adc
outsl
mov
pop
repnz
mov
sarl
cmp
pop
lock
mov
add
push
jmp
sub
mov
mov
cmp
insl
sahf
dec
das
shrb
and
adc
test
in
sub
jbe
scas
add
movsb
mov
scas
cmp
xchg
ret
jg
popa
lods
dec
bound
movsb
push
icebp
xor
dec
push
and
insb
fxch
pop
insl
xchg
xchg
jle
imul
mov
or
std
fistpl
pavgw
inc
fsubp
sbb
out
fdivr
js
sbb
xchg
pop
aam
negl
jmp
ds
or
mov
in
lods
inc
loope
dec
xchg
xchg
in
or
jmp
lret
inc
fcmovbe
mov
xchg
adc
adc
cltd
mov
add
jnp
xchg
imul
cs
or
js
sub
fwait
arpl
int3
subb
popa
and
fidivs
xchg
imul
xor
lods
int
psubusw
iret
push
int3
sbb
mov
shll
and
mov
rorl
mov
repz
aad
jmp
insb
xchg
iret
iret
pop
lds
test
shl
gs
or
or
cld
pop
and
push
lcall
test
cmp
shl
fcmovu
out
shlb
pop
lods
addr16
js
push
scas
pop
pop
push
pusha
sbb
outsb
mov
mov
loop
jo
sbb
adc
cmc
hlt
pushf
insb
pop
inc
or
test
aaa
das
jns
je
shr
test
xchg
xor
mov
popa
movsb
xor
inc
and
push
das
in
mov
das
mov
sub
dec
cmpsl
mov
aaa
adc
mov
nop
jle
lret
adc
jb
shr
push
enter
mov
mov
mov
fdivl
add
sarl
lods
mov
jg
sbb
or
pusha
rcll
adc
inc
popf
mov
insb
or
cmc
fwait
stc
test
push
and
sub
pop
xor
adc
in
inc
cmp
xchg
mov
mov
push
mov
mov
pop
dec
lods
in
push
nop
and
pop
mov
push
iret
xlat
xchg
xchg
pushf
test
scas
loop
jecxz
mov
loope
fbstp
pop
pop
jg
insb
jo
xchg
rcll
test
jno
in
nop
mov
ds
xchg
or
push
pop
jnp
dec
lods
adc
cmpsb
lret
out
and
rep
movsb
nop
add
in
pushf
out
aaa
popf
icebp
pop
adc
pop
into
and
cmc
sahf
mov
jge
movsb
leave
sbb
push
push
xchg
cmpsb
les
data16
xor
mov
mov
push
add
pop
jle
pusha
mov
mov
cmc
repz
jbe
lods
sti
pop
mov
loop
pop
jg
mov
pop
cmp
fisubl
fucomip
hlt
sti
push
dec
dec
and
cmp
icebp
cltd
cmp
sub
mov
jbe
jb
ds
sahf
leave
repnz
sarl
mov
pop
rclb
cld
xchg
jl
pop
lock
fs
enter
xchg
lods
inc
xchg
fcomps
inc
lea
cmc
call
xor
pop
dec
dec
push
das
sbb
in
and
mov
pop
pop
test
xor
mov
mov
sub
popf
sar
cmp
fwait
mov
xor
push
test
aaa
icebp
test
push
jl
push
orl
sub
jo
mov
or
and
cmp
mov
mov
add
xor
add
pop
jnp
cld
cli
cmp
add
daa
or
call
push
aad
jnp
xor
mov
cmp
jge
stos
jnp
fs
mov
cwtl
ljmp
mov
fcompl
and
mov
mov
lahf
pop
and
fs
bound
jbe
test
cli
movsb
orb
movsl
stos
movsb
into
xchg
std
daa
pop
repz
daa
push
add
cmpsl
adc
xchg
icebp
lret
push
dec
test
jmp
xor
mov
test
or
test
xor
test
fnstcw
icebp
fiaddl
out
jp
cmp
jp
cwtl
jmp
xchg
jo
adc
std
lock
shlb
mov
es
jae
scas
js
hlt
into
mov
cwtl
insb
xorl
inc
pop
jecxz
mov
sarb
and
mov
dec
and
lods
repnz
adc
fcoms
xor
sbb
call
fwait
lods
sub
insl
dec
adc
mov
cltd
popa
jl
aaa
dec
fstpl
mov
testb
imul
std
pop
add
and
addr16
test
or
pop
cld
xchg
out
inc
mov
adc
iret
nop
jb
pop
jle
fxch
sub
mov
and
les
out
inc
in
insb
pop
test
clc
inc
sarl
cmp
mov
cmpl
mov
mov
lcall
jne
addl
xchg
leave
rcr
insl
imul
in
push
or
loop
jmp
add
adc
jl
and
shll
pushf
lock
mov
aaa
mov
les
mov
mov
pop
es
dec
mov
jae
loopne
sub
test
aaa
dec
addl
dec
adc
push
ss
lahf
shrb
movsb
or
cmp
mov
enter
fsubs
bound
mov
push
out
jo
push
sub
mov
jnp
imul
xchg
stc
mov
push
lahf
mov
outsb
clc
movsl
mov
and
adc
and
inc
dec
lahf
mov
repnz
outsl
fwait
jns
mov
mov
mov
jne
ffreep
ds
mov
mov
mov
add
lcall
out
subb
push
and
push
mov
mov
iret
loopne
insb
icebp
sub
test
ljmp
addr16
jmp
or
add
movsb
fcoms
jge
mov
xor
push
xchg
xor
mov
gs
test
mov
movsb
call
push
jae
inc
sbb
and
pop
test
ret
inc
adc
in
add
bound
leave
cmp
push
das
add
movsb
dec
bound
insl
cwtl
mov
jbe
sbb
sahf
mov
aaa
inc
test
fsubp
daa
jmp
les
mov
mov
ficoml
ds
cmp
andl
fcomps
push
cwtl
mov
frstor
int3
and
pop
push
dec
loop
jge
iret
sub
cltd
fisttps
jecxz
lret
mov
mov
and
xchg
in
cmpsb
aam
push
lcall
cld
andl
pop
xor
ja
inc
mov
push
add
mov
cmp
jb
lret
push
daa
mov
movsb
inc
shl
sbb
and
imul
movsl
push
mov
xchg
pop
xchg
cltd
push
sbb
rep
aam
imul
pop
pop
nop
loope
and
adc
push
rcll
in
pop
out
sbb
in
cltd
fucomi
and
add
mov
mov
mov
rcrb
push
push
or
push
insb
aaa
hlt
lahf
sahf
pop
push
xchg
movsb
stos
jl
inc
mov
cmpsb
and
nop
lcall
push
jbe
fdiv
scas
loopne
pop
mov
stos
loop
insb
xchg
ret
insl
pop
loopne
repz
negl
fsts
leave
pusha
push
add
mov
jle
out
adc
loop
fwait
and
in
in
cwtl
rcll
aad
push
mov
jl
es
add
mov
push
data16
mull
dec
sar
imul
adc
adc
sar
in
aas
in
and
jmp
pop
lea
pop
stos
mov
push
inc
aas
fcmovu
aad
sbb
add
int3
pop
sub
push
andb
sub
jl
outsb
movb
xchg
sar
aas
or
add
mov
inc
lea
lcall
inc
pop
push
xor
xor
and
inc
fiadds
mov
decl
or
mov
mov
lret
push
push
and
xchg
data16
or
xor
add
mov
fidivl
inc
cmp
in
cld
pop
orb
mov
movsb
je
pushf
insb
inc
cmpsb
jnp
adc
call
iret
in
or
jp
cld
lea
insb
ja
div
sbb
fistpl
adc
test
mov
and
in
loop
loop
adc
shrl
xor
icebp
sub
out
xorb
cmpsl
mov
repnz
mov
jle
ljmp
aad
mov
xlat
push
mov
enter
sub
dec
mov
fadds
out
push
out
pop
inc
add
fs
sbb
add
insl
mov
mov
or
or
xor
push
push
loopne
bound
dec
orb
repz
les
jnp
aas
and
jne
push
mov
jne
in
push
nop
push
pop
and
into
daa
ret
mov
mov
or
stos
pushf
adc
and
xchg
cwtl
mov
inc
sahf
jae
es
xor
xchg
add
mov
add
push
movsl
stc
and
rorb
fcomp
ret
mov
sub
xor
and
shrl
cmp
hlt
andl
push
fxtract
aam
sbb
popl
out
cltd
fsubrl
shl
fdivrs
jecxz
xchg
mov
xor
je
push
jnp
mov
mov
xor
mov
jb
adc
lods
adcl
test
mov
and
inc
fsubrp
jne
inc
dec
xchg
mov
inc
mov
daa
mov
lods
mov
inc
movsb
sub
xchg
mov
pop
scas
or
lods
iret
dec
mov
cld
mov
xchg
mov
fistpll
sbb
fnstsw
sbb
ret
mov
rolb
ss
cmp
adc
movb
lock
mov
rolb
cwtl
mov
mov
xor
mov
mov
scas
push
lods
mov
push
cmp
inc
mov
iret
pop
jnp
shll
sbb
sbb
xor
fcmovbe
sarl
mov
mov
xor
mov
jb
inc
xor
fcmovnu
cmc
cltd
rol
inc
std
pop
dec
fs
xchg
cmp
push
or
xchg
rcll
aaa
lahf
xor
and
and
cmp
xchg
enter
push
mov
push
sbb
test
sbb
fbstp
xchg
cld
pop
cmp
into
pop
loope
fistl
fldcw
cmp
xor
and
adc
dec
cli
loop
pop
loop
clc
call
dec
sub
movsb
lds
cmpsl
push
push
mov
in
xchg
adc
es
les
in
sbb
pop
je
outsl
adc
insb
mov
jne
cmp
adc
ficoms
push
enter
jns
out
add
fbstp
sub
push
lret
das
imul
mov
mov
mov
mov
loopne
mov
jp
mov
outsl
lret
cmpsb
in
or
mov
in
mov
jno
xor
adc
xor
push
sub
lcall
adc
mov
lahf
divl
stos
and
movsb
roll
leave
lret
sub
inc
call
into
xor
pusha
xchg
std
int3
sahf
inc
jmp
xchg
pop
mov
adc
neg
or
lahf
int3
int3
loop
push
inc
out
xchg
jbe
adc
je
test
sbb
xchg
call
mov
push
cmp
loop
pop
push
mov
je
insl
test
fbstp
pop
inc
inc
pop
insb
imul
ja
cs
outsl
sbb
nop
imul
mov
sub
mov
push
push
jl
outsl
adc
dec
add
mov
loopne
push
mov
sarl
mov
inc
movsb
ljmp
cmpsl
pop
int3
lahf
scas
int3
adc
xorb
mov
push
push
lods
ljmp
popl
inc
push
push
mov
pop
sahf
mov
pop
adc
cltd
and
loop
pushf
xor
fmuls
setge
repnz
lods
add
xor
xlat
inc
lock
insl
icebp
sbb
repnz
dec
mov
enter
fpatan
cwtl
divl
les
js
movsl
es
popf
adc
fisttps
lcall
in
popa
adcb
inc
pusha
lret
dec
in
pop
ja
and
xor
adc
incb
outsb
sbb
jp
jno
xchg
adc
dec
ljmp
cld
mov
popf
adc
mov
outsl
aas
jge
loopne
lret
or
bound
popf
mov
lret
inc
and
ficoml
adc
out
test
bound
or
fcomi
jecxz
frstor
pop
adc
xchg
dec
push
les
inc
push
push
insb
xchg
ja
jle
or
shlb
cld
inc
xor
add
mov
out
repz
repz
and
fstp
outsb
push
loop
stos
pushf
lahf
movsb
xor
jmp
ljmp
aas
dec
lcall
movsb
subl
add
mov
loop
sbb
jne
sar
adc
or
leave
push
mov
js
adc
jp
adc
push
popf
aad
and
pop
repnz
insb
cmp
std
jnp
mov
cmpsb
mov
push
pop
xchg
pop
insb
roll
mov
out
shlb
cmp
lahf
cmp
dec
in
movsb
dec
sub
jb
jecxz,pt
mov
cmovp
insb
mov
je
test
adc
icebp
mov
int3
movsb
insl
mov
jl
push
cmp
movsl
inc
frstor
jae
stos
add
mov
fcomps
es
sub
sbb
adc
or
cmp
es
div
jecxz
imul
xchg
loopne
fmuls
xchg
jmp
ficomps
mov
sub
push
fimull
outsl
inc
outsb
ficompl
push
push
xor
popf
xor
xchg
mov
adc
mov
fcoml
pop
push
out
int3
stos
and
js
int3
std
dec
mov
inc
and
inc
mov
mov
jmp
sub
loopne
stos
aas
je
fldcw
xchg
cmp
mov
stos
lea
in
sti
fistps
sbb
or
mov
ficompl
xor
lods
push
adc
xchg
mov
adc
mov
mov
sub
jl
in
mov
shll
lret
mov
int3
sub
pop
sub
lock
inc
mov
xor
stos
test
pop
movsb
es
lods
or
iret
mov
insb
repz
out
aad
in
mov
clc
dec
sub
dec
out
outsl
loopne
push
mov
lcall
sub
lods
fs
pusha
lret
in
add
loopne
mov
shl
mov
mov
out
daa
mov
or
loopne
fnstenv
or
jmp
addr16
sbb
xor
test
xchg
xchg
jmp
jge
mov
and
test
fcmovnu
pusha
xchg
lods
idivl
and
int3
sbb
into
xchg
das
jg
xor
xor
icebp
outsl
or
xlat
inc
mov
adc
fsubrl
mov
mov
cld
out
dec
mov
lret
push
sub
outsb
dec
mov
and
arpl
bound
pop
push
test
cmp
pop
sub
dec
rcll
pop
call
shrl
xchg
sbb
in
inc
in
pop
jo
ja
xor
pop
sub
adc
xor
inc
fidivrs
fadd
xchg
mov
push
loopne
jge
stc
pop
jae
xchg
pop
jno
mov
dec
in
out
repnz
push
jno
sbb
fwait
js
pop
fsubrs
fcomi
fiaddl
filds
dec
jmp
adc
arpl
adc
cmp
push
ljmp
fidivs
xor
pop
jb
out
stos
je
andl
lret
xchg
or
out
stc
and
aaa
aas
xchg
movsb
mov
sahf
pop
xchg
fildll
repz
dec
in
jl
xor
je
sub
lods
loopne
fildl
in
dec
popf
mov
adc
out
cmp
inc
repz
jmp
pop
xchg
xchg
lahf
xchg
pop
out
scas
sahf
sub
clc
ja
jmp
imul
push
jnp
js
adc
xor
xchg
xchg
or
fcom
lret
or
adc
scas
pop
sbb
or
pop
std
mov
pusha
inc
adc
push
inc
mov
and
inc
fs
lods
jmp
and
pop
pop
mov
and
sbb
and
mov
mov
mov
or
or
xor
mov
test
enter
fdivl
cmpsl
cmp
lock
cld
mov
inc
xchg
pop
iret
adc
test
lds
hlt
mov
movsb
mov
icebp
or
loope
clc
adc
push
xchg
loopne
icebp
mov
in
cmp
dec
xchg
cmpsb
fiadds
out
mov
rep
mov
jbe
sbbl
xchg
mov
pop
jmp
shl
push
add
adc
inc
adc
xchg
mov
mov
inc
push
dec
scas
aam
cli
xchg
stos
sarb
loopne
outsb
pop
mov
lea
aad
stc
loopne
aas
inc
pop
ja
mov
jae
lret
out
or
pop
das
xor
pushf
mov
inc
push
orl
les
jo
imull
push
pop
sbb
mov
fiaddl
roll
xor
sbb
xchg
test
mov
or
fsubl
lret
addr16
pop
out
test
push
rolb
xchg
mov
mov
insl
mov
aaa
inc
cmpsl
add
jle
mov
mov
push
cmc
add
call
sahf
sahf
dec
cmpsb
nop
repnz
and
lret
jmp
rolb
iret
jmp
dec
shlb
sub
jo
inc
lea
mov
daa
outsb
jle
xor
mov
jnp
mov
std
inc
int3
mov
ret
jo
cmp
jae
mov
out
lods
jle
testb
lret
bound
or
loop
add
sub
cld
fdivrl
out
xchg
jmp
jmp
sub
imul
pusha
mov
xor
cmc
test
movsl
lock
bswap
jne
outsb
push
hlt
sarl
inc
repnz
mov
xchg
push
std
aam
and
sub
xor
jbe
adc
dec
add
jl
xchg
xchg
aaa
add
mov
test
and
push
mov
scas
dec
lcall
popf
inc
dec
into
aaa
or
mov
xor
and
clc
xchg
jecxz
addr16
int3
push
pop
in
dec
jae
lds
push
rorb
xor
jge
int
inc
and
and
nop
inc
xor
rcrl
mov
repz
or
sahf
or
mov
shlb
push
imul
jmp
pop
imul
mov
mov
iret
hlt
sbb
aas
xchg
sbb
fucom
xchg
fwait
pop
fcoml
outsb
dec
cwtl
sbbb
xchg
mov
push
daa
push
and
insb
mov
sbb
pop
cs
mov
daa
jo
ljmp
in
pushf
loope
mov
je
cmpsl
xorl
icebp
popf
push
xchg
push
mov
int3
lock
xor
pop
movsb
mov
outsb
out
rcrl
mov
mov
sub
enter
xor
sbb
js
adcl
xor
stos
cmp
mov
sbb
sbb
stos
dec
sbb
add
in
cld
repz
xor
sbb
lret
adc
hlt
outsb
inc
out
push
xchg
aaa
xchg
outsb
xlat
or
push
fistpll
inc
fnstsw
pusha
jge
push
or
sarb
adcb
jecxz
popf
dec
and
in
mov
xor
jp
pop
xchg
out
xchg
jmp
mov
sahf
jb
mov
adc
outsb
jge
test
ret
xor
pop
inc
mov
jne
inc
bound
pop
inc
lea
sbb
scas
xchg
test
lock
ret
sbb
jo
into
cs
pop
mov
and
dec
pop
pop
sub
into
jo
mov
mov
lret
stc
lahf
and
cmpl
es
lcall
jns
add
lods
mov
mov
xchg
fcompl
andl
cli
test
test
test
sti
xor
mov
fwait
mov
xchg
jmp
push
adc
ljmp
adc
jnp
pop
stos
subl
lret
out
std
xchg
repnz
dec
call
fucomi
jbe
fsubr
xchg
mov
xor
andb
stos
adc
mul
mov
mov
nop
xchg
mov
gs
cmp
int3
loope
jmp
into
pop
xchg
adc
or
sbb
ljmp
sbb
sbb
ficomps
pop
push
mov
dec
sbb
xor
push
cmp
and
or
pop
insb
cltd
ret
pop
repz
test
mov
out
pop
cvtpi2ps
call
enter
jg
pop
lds
lea
push
jge
mov
aam
aad
scas
sbb
dec
mov
movsl
int
cmp
fisubl
xchg
and
xchg
push
gs
lods
sub
sarb
xchg
rcrb
adc
es
adc
sub
mov
clc
popa
jmp
rcll
out
inc
pop
jmp
in
push
inc
ficoml
cltd
loop
sbb
mov
add
test
loope
stc
int3
or
pop
jge
mov
pusha
je
imul
cmp
jmp
adc
push
lahf
push
nop
test
xor
mov
sbb
xchg
and
dec
pushw
push
pushf
adc
sbb
lock
fbld
outsl
std
out
cmpsl
fcomi
fcoml
mov
mov
add
out
sbb
xchg
pusha
mov
std
xor
or
scas
in
mov
pop
hlt
ljmp
loopne
and
and
inc
cwtl
mov
add
fcomp
sbb
ljmp
xchg
inc
mov
push
pop
xchg
xchg
and
daa
xor
push
mov
lret
daa
int
add
ss
sahf
xchg
mov
cmp
incb
cli
popf
mov
inc
rolb
mov
mov
xchg
inc
sub
mov
mov
imul
cmp
insb
cmp
dec
add
in
inc
xchg
xchg
popf
lret
push
cltd
and
cmp
add
lods
pop
movsl
add
scas
adc
inc
fldenv
hlt
sbb
xor
cmp
pop
mov
xor
jmp
lock
add
enter
cmpsb
mov
out
lock
mov
shl
insl
lcall
adc
sub
push
fbstp
jbe
addb
ret
insb
loopne
mov
daa
mov
imulb
add
fsubr
pusha
lds
jmp
pop
xor
xor
aaa
fidivrl
sti
faddl
or
je
sub
mov
jg
xor
push
adc
pop
fisttps
fisttpl
dec
into
mov
and
fs
sti
outsl
stos
xchg
jne
ret
fxch
pop
icebp
iret
mov
cmp
cmp
out
sti
mov
fmuls
gs
sbb
dec
loopne
mov
push
sbb
leave
jecxz
fidivrs
dec
jecxz
pop
ror
test
das
adc
fmull
pushf
fisttpll
fldenv
push
imul
pop
les
rorb
ljmp
fsubl
inc
loope
arpl
dec
jbe
and
inc
fidivl
mov
popa
push
inc
xchg
jno
arpl
mov
sbb
adc
mov
dec
loopne
cmp
sbb
inc
loopne
lcall
lds
pusha
popa
enter
cmp
sub
jo
mov
addr16
fnsave
idivb
xchg
push
dec
dec
adc
cmp
dec
or
mov
mov
or
mov
test
inc
outsl
xor
fisttpll
insl
movsb
fcompl
sbb
dec
push
inc
jbe
add
imul
sarb
add
push
test
mov
cmp
pop
movsb
das
in
mov
outsl
xor
call
shl
lcall
pop
ds
imul
mov
sbb
mov
test
ss
jne
push
mov
xor
fwait
repz
test
repz
in
addr16
repz
roll
xor
arpl
mov
add
push
insb
iret
hlt
into
jecxz
mov
js
or
and
sub
pushf
lret
cmp
adc
sar
pushf
mov
sti
and
push
jge
add
loopne
das
pushf
cmp
ss
mov
lds
stc
sbb
sar
inc
icebp
adc
push
adc
mov
fstpl
lret
cmp
stos
push
cmp
popa
lods
nop
sti
shlb
mov
ss
lea
pop
int
shll
push
sbb
insb
fs
movsl
std
mov
xor
mov
gs
iret
fisubrs
fstpl
cmp
push
jne
jo
add
movl
aas
ljmp
ss
imul
fs
mov
xor
mov
add
xchg
loop
push
cli
call
inc
mov
jmp
mov
ljmp
cltd
je
pop
jae
rolb
pop
cmp
xor
and
mov
mov
roll
outsb
mov
inc
add
mov
andb
mov
mov
lea
lds
fldt
loopne
pop
js
mov
jge
int
and
repnz
das
ljmp
pusha
sarl
push
push
in
mov
xchg
adc
mov
xchg
mov
pop
sub
loop
pusha
js
scas
sub
mov
leave
test
int
fisubl
xor
data16
cmpl
push
int
lods
and
fistl
sub
and
pop
mov
cmpsl
cmp
push
cmpsl
in
jbe
pop
and
test
push
mov
jno
push
mov
lret
je
aad
sarb
jo
mov
movsb
push
decl
mov
hlt
filds
clc
adc
int3
mov
jle
pop
push
rorb
fists
fbld
mov
mov
sub
push
ret
jbe
inc
push
add
lods
repz
adc
ret
lods
push
mov
mov
idivb
scas
mov
and
jne
inc
adc
inc
cmpsb
das
enter
movsl
mov
pusha
xchg
loope
xchg
lcall
add
mov
cld
or
fmuls
inc
pop
dec
push
dec
xor
test
dec
and
inc
jo
cmp
out
inc
andl
dec
cmpsb
dec
dec
mov
dec
pop
sbb
movsb
cmp
mov
hlt
in
mov
movsb
syscall
mov
push
jb
sbb
in
data16
dec
ret
dec
and
je
addr16
loopne
je
je
int
pushf
mov
scas
mov
jle
cmp
test
mov
push
or
enter
and
push
test
adc
scas
mov
mov
and
insb
mov
pushf
aad
or
ficoms
sub
les
lods
sbb
adc
or
lret
inc
mov
sub
adc
mov
push
and
xchg
dec
ret
jo
mov
dec
outsb
sbb
inc
mov
sub
hlt
push
or
push
aaa
fdivp
dec
pop
notl
shrb
popf
out
daa
imul
mov
test
decb
xor
into
cmp
adc
pop
xchg
or
or
push
popf
int3
cmpsb
sbb
and
inc
out
test
dec
ja
js
fisubs
call
outsb
xchg
loop
movsb
mov
mov
jae
andb
ss
movsl
mov
test
in
sub
sti
pushf
loope
mov
jmp
sbb
mov
imul
scas
scas
fmull
fwait
loopne
mov
clc
mov
cmpsl
adc
jecxz
sbb
sahf
jge
push
movsl
jl
shrb
mov
pop
das
mov
js
mov
movsb
in
fldpi
in
xor
lods
lods
incl
pop
inc
sub
sarb
fldenv
test
jne
pop
mov
jns
ljmp
xchg
mov
xorl
mov
xor
outsb
xchg
push
pmaddwd
inc
mov
pop
xor
cltd
xchg
aad
jmp
mov
jbe
stos
mov
sahf
out
sub
jae
push
cmp
sbb
xor
and
inc
jmp
rcrb
or
cwtl
outsl
mov
in
xor
dec
pop
fsts
scas
mov
ljmp
push
test
ss
dec
imul
mov
ss
ficoms
out
mov
cmc
sub
mov
out
scas
mov
jmp
cmp
in
adc
out
mov
jne
inc
push
subb
inc
mov
jle
cmp
nop
popa
scas
fldcw
jg
adc
push
cld
adc
imul
daa
lea
xchg
lea
push
fsubrs
je
cmp
mov
xchg
and
addr16
divb
clc
das
mov
pop
push
fisubs
xlat
push
fmulp
xor
imul
push
mov
mov
in
in
sbb
adc
sbb
pop
cmp
mov
dec
scas
lods
gs
popf
inc
xchg
mov
add
mov
mov
popf
stos
fnstsw
push
clc
xor
icebp
sub
jne
push
gs
test
and
add
xchg
es
inc
mov
test
sbb
int3
test
inc
or
mov
add
pop
add
fcmovnu
jge
bound
inc
inc
add
cs
cmc
aaa
fwait
pop
into
mov
das
stos
pushf
sbb
mov
leave
pop
push
push
and
push
aaa
loopne
test
lahf
sahf
lea
sbb
mov
dec
inc
inc
inc
in
xchg
pusha
outsb
mov
popf
push
or
ss
repz
ljmp
lock
popl
das
push
or
add
xor
test
inc
xchg
insb
shrl
lret
xlat
scas
push
pop
add
mov
rcll
jle
mov
test
lock
sbb
int
jbe
enter
xor
push
das
icebp
lahf
bound
rcll
adc
js
mov
xor
ljmp
dec
loope
iret
or
scas
inc
mov
push
sbb
dec
sbb
sahf
test
in
adc
mov
rcr
dec
std
xor
xchg
incb
lods
jns
inc
loopne
test
mov
dec
mov
mov
arpl
inc
test
mov
inc
sarb
xchg
xchg
push
push
int3
cwtl
push
sub
push
inc
cli
push
mov
pop
jno
ret
shr
aam
out
mov
mov
jecxz
inc
cmpsb
aad
pop
inc
inc
aam
std
or
dec
inc
pushf
mov
sub
cmpsb
iret
fldt
cs
cmp
adc
aas
push
daa
and
mov
inc
sub
loop
jmp
das
mov
stos
mov
dec
pop
push
aam
loope
ror
aad
divb
addr16
adc
dec
and
add
mov
and
jns
int3
mov
push
mov
mov
push
mov
cmpsl
and
jmp
fdivr
cmpsl
cltd
pop
sahf
leave
ljmp
enter
into
fldenv
xchg
stc
enter
test
push
xor
int3
inc
lret
mov
test
inc
movsl
jae
lcall
es
iret
imul
cmp
jmp
jg
outsb
push
push
inc
jb
rcl
insb
sbb
mov
daa
dec
orb
iret
leave
lods
in
stos
inc
cmp
fnstsw
xor
sub
stos
outsb
jle
rclb
sub
inc
outsl
stos
les
push
data16
sub
aas
xor
shll
cmpsl
jg
imul
lcall
xor
roll
je
dec
pop
ds
inc
mov
loope
mov
les
xchg
jo
pop
push
mov
loope
pop
adc
xor
jmp
sbb
jns
sbb
sub
xchg
xor
dec
xor
int3
int3
lahf
xor
push
mov
dec
push
pusha
jmp
mov
xor
pop
cmpl
add
fcomps
movsb
fsubrl
out
xor
push
xor
out
addr16
inc
test
fistps
addr16
mov
sbb
add
xchg
and
and
sbb
jl
mov
stos
adc
ja
fsubs
xchg
cli
dec
jnp
scas
movsb
push
stc
stc
dec
fs
cwtl
sbb
adc
or
jne
shrl
sub
xor
and
add
aam
test
scas
and
xchg
cmp
daa
xor
mov
or
push
push
mov
les
add
push
and
nop
in
mov
mov
jae
mov
lcall
jns
pop
pop
mov
inc
inc
and
cmp
ret
jecxz
inc
out
aad
movsb
lret
sbb
std
xor
xchg
popf
aas
add
push
lret
mov
aam
cltd
js
aad
xchg
hlt
push
imul
mov
popf
mov
mov
add
push
aas
addl
and
clc
pop
in
orl
push
dec
jmp
imul
out
icebp
insl
or
lcall
ds
rcll
leave
nop
add
lods
adc
jns
stos
dec
andb
sub
out
xchg
inc
cmc
fdivrl
jge
mov
adc
push
dec
adc
pop
xlat
and
scas
jl
mov
das
repnz
test
ret
int
add
cmpsl
insb
dec
xor
out
rcrl
pop
mov
fs
lods
jb
fisubrs
pop
jmp
pop
sbb
loopne
rol
in
xor
add
negb
in
adc
xor
call
lods
mov
xlat
sub
pop
imul
pusha
test
mov
ret
jmp
mov
mov
das
insl
inc
aas
arpl
outsb
test
stc
and
enter
cmpsl
mov
adc
imul
test
das
sbb
andl
jp
adc
and
xor
enter
mov
cs
pop
in
cld
ret
mov
cmp
xor
into
stos
mov
int3
dec
outsl
pop
fsts
xchg
xchg
xor
lods
push
cltd
and
scas
inc
push
rclb
arpl
not
adcb
leave
nop
in
cmp
stc
or
mov
je
and
pop
jne
cmp
pop
push
out
add
fcom
fwait
mov
fbld
mov
fdivl
sbb
scas
shlb
int
and
das
xor
test
sub
pop
js
mov
rolb
xor
xor
mov
inc
in
push
sarl
shlb
fidivl
xchg
ss
leave
cmp
rep
lahf
or
test
xor
mov
fimuls
call
sbb
sub
mov
out
scas
jle
fnstcw
xchg
int
adc
mov
flds
lods
mov
std
mov
mov
xchg
and
test
xor
gs
sub
sbb
mov
jecxz
mov
call
sbb
and
cmpsl
inc
mov
jecxz
addr16
lods
cltd
pop
rcr
and
mov
inc
and
xor
mov
xchg
jg
sbb
cmpsl
out
mov
xchg
sbb
mov
xor
outsl
cmpsb
imul
mov
xchg
mov
addr16
and
aad
enter
std
jecxz
push
scas
scas
mov
fstpt
mov
aaa
stc
pop
dec
xchg
push
cmc
pop
sub
push
push
push
dec
sub
out
shll
loopne
das
pop
imul
dec
push
push
js
cli
dec
mov
mov
popl
rcll
ss
cmpsb
mov
hlt
js
shll
xor
add
shl
inc
insl
ljmp
pop
rcl
out
fcomps
in
inc
sahf
sahf
out
enter
movsl
es
ja
movsb
adc
inc
loope
pop
aad
loop
popf
push
test
out
test
jp
sub
mov
je
scas
inc
int
add
fstps
jb
insb
jns
pop
popa
daa
rcr
push
out
pushf
xor
hlt
movsl
inc
or
frstor
add
push
popa
xchg
pop
hlt
daa
sbb
insl
cmpb
inc
movsb
lods
jecxz
fdivrp
out
ret
popf
add
mov
int
jl
roll
js
pop
push
sub
es
ror
and
in
dec
sbb
insl
lahf
cmp
and
fisubl
xchg
inc
pop
dec
lock
jmp
or
adc
adc
jge
mov
pushf
icebp
push
out
in
fcmovnu
xlat
push
jl
jnp
push
add
jne
lods
cmp
jns
test
dec
int
hlt
lds
imul
setne
call
rolb
jmp
outsl
and
loope
ja
mov
mov
jns
pop
lret
mov
in
or
mov
push
aaa
out
mov
jp
repz
mov
jo
dec
fistpll
ss
mov
sti
iret
mov
int
stos
mov
dec
inc
icebp
aad
dec
pop
mov
fnstenv
or
push
fmull
sub
lea
xchg
dec
xchg
psrlw
nop
push
push
insl
in
stos
mov
sahf
adc
leave
sbb
das
sbb
stos
and
mov
jle
and
xchg
mov
ljmp
push
cmp
dec
adc
mov
jns
jo
testl
or
jle
test
push
das
push
push
lods
lods
mov
sbbb
aaa
out
or
dec
hlt
mov
das
lcall
out
test
push
sbb
leave
call
or
stos
cmpsb
sbb
push
xchg
movsl
aam
push
mov
cmpsl
sahf
mov
xchg
adc
mov
in
pushf
lret
lcall
mov
push
mov
test
bound
mov
outsb
xor
mov
xchg
out
fisttps
or
jp
aam
adc
dec
jge
mov
cld
adc
mov
adc
pop
or
lcall
sbb
inc
sub
or
mov
xchg
aas
pop
pushf
movsb
fisubrl
mov
push
and
xchg
aam
mov
or
filds
sbb
and
insb
sbb
js
popa
inc
mov
pop
mov
mov
add
insb
loop
and
cmpsl
cmp
dec
inc
cltd
lea
and
jno
aaa
mov
mov
pop
add
jle
pushf
dec
scas
push
push
fadds
xchg
fwait
aam
mov
fwait
js
faddl
sub
into
cmpsb
fwait
mov
adc
pop
outsb
xchg
xchg
stos
adc
ljmp
pop
adc
jae
mov
in
repz
and
jmp
out
jmp
mov
int3
shr
push
cwtl
pop
fiadds
and
in
nop
lds
mov
pop
fistpll
dec
mov
sub
fildl
mov
pop
ret
lock
mov
scas
inc
repnz
cmc
pop
loop
pop
rorl
outsb
cmc
in
cmc
sub
insl
hlt
faddp
cmpsb
jg
jnp
hlt
in
inc
nop
daa
xlat
daa
inc
aad
scas
lods
jle
sbb
jo
dec
test
les
cmp
push
sub
in
sbb
lret
lret
mov
push
test
iret
pop
xor
dec
ss
inc
mov
adc
push
push
adc
inc
out
pop
push
push
js
mov
out
mov
cmp
in
sub
push
in
js
mov
in
mov
scas
scas
call
push
pop
sbbb
out
test
enter
in
out
mov
mov
in
push
inc
lahf
insl
mov
sbb
sbbl
and
push
mov
cmp
inc
popa
jne
idivb
and
inc
scas
mov
pop
push
cmp
push
movsb
lods
hlt
jmp
adc
pop
inc
out
xchg
insl
sahf
jnp
ja
inc
cmpsl
mov
andl
lods
push
dec
fs
cmp
inc
pop
jge
nop
jle
out
sbb
and
push
je
fcmove
sar
data16
lds
mov
and
mov
popa
mov
mov
cmp
out
cltd
aas
gs
into
pop
rorl
dec
and
push
scas
pop
jbe
or
arpl
add
xor
jne
imul
stos
inc
pop
fwait
sbb
mov
nop
sbb
in
aas
mov
incl
push
scas
pop
jb
xchg
xchg
mov
mov
ss
in
pop
pop
icebp
outsl
cmpsb
js
push
sti
ret
xlat
clc
lods
in
int
mov
sub
push
xor
sub
jno
sub
les
rolb
pop
jo
pop
mov
test
xchg
test
mov
arpl
clc
pop
jle
ja
aam
fmull
mov
aaa
push
fsubl
lret
addr16
xor
push
cld
mov
sbb
sbbl
xchg
cmp
rcr
andl
jmp
inc
pop
mov
add
aaa
jg
outsb
int3
rorb
add
xchg
pop
xchg
dec
out
cli
xorb
in
stos
addr16
cli
push
pop
fs
fiaddl
xchg
sbb
sub
or
sbb
xchg
cmp
cmpsb
test
jle
push
loopne
sub
mov
or
push
test
out
insb
cs
mov
push
ret
mov
mov
push
pushf
jo
je
fidivrs
push
hlt
leave
std
lods
mov
dec
inc
mov
xchg
adc
roll
mov
pop
mov
mov
mov
in
or
sbb
xlat
fadds
jb
inc
xchg
aam
pop
adc
push
mov
insl
sbb
mov
cmp
adc
adc
lods
pop
add
int3
or
js
shl
jae
fisttpll
aaa
jle
adc
jmp
test
xor
mov
jle
loope
dec
mov
mov
jbe
addr16
data16
pop
pop
jmp
in
sti
test
sbb
out
arpl
mov
and
ficompl
cwtl
sub
and
mov
das
push
movsb
dec
insl
jns
cmp
push
cmp
int3
lods
sub
fdiv
dec
mov
call
call
pop
sbb
fnsave
fcoml
je
push
xchg
icebp
in
in
mov
daa
ss
loopne
pusha
cmp
lahf
insb
mov
test
sub
cmpl
inc
loopne
pusha
cmp
gs
rcrl
and
push
test
sub
aam
mov
enter
mov
add
outsl
je
test
sbb
ljmp
outsl
lock
sahf
push
adc
sbb
sub
xor
mov
sub
jecxz
rol
mov
push
pop
in
scas
push
fidivrs
cmc
data16
ret
mov
add
notb
in
xchg
insl
adc
push
inc
out
fdivr
sub
pop
mov
push
pop
mov
mov
shr
xchg
sar
sub
mov
int3
std
xor
add
in
test
fwait
mov
pop
mov
mov
scas
mov
adc
push
cmpsl
movsl
into
popa
jge
repnz
aad
fdivr
scas
jno
rorb
negl
fxtract
out
adc
les
mov
dec
andl
inc
dec
sarl
inc
mov
pop
mov
es
xlat
mov
and
inc
push
mov
ds
ret
cmc
xchg
inc
in
rorl
lock
adc
insl
mulb
fbstp
mov
aam
lret
ja
int3
lahf
pusha
xchg
lds
mov
jae
push
ret
and
rorl
dec
fwait
imul
fwait
ret
mov
xor
pushf
lahf
out
cld
lahf
into
shll
inc
jbe
cmp
lea
lea
out
adc
popf
add
push
test
imul
dec
add
cmp
je
sbb
cmp
sbb
cmp
aas
xchg
test
loop
dec
cmp
add
and
ds
jle
test
mov
outsb
push
popa
inc
mov
sub
int
fadd
aad
push
push
arpl
sub
out
jge
cli
inc
xor
nop
adc
mov
mov
cltd
mov
shr
fwait
sbb
shl
insl
and
add
cmpl
int
mov
sbb
cmc
loopne
in
movsb
in
out
cwtl
xchg
cmpsl
int3
stos
jle
push
sub
inc
adc
std
fidivs
out
out
adc
dec
insb
jmp
inc
jno
cli
sbb
outsb
pop
mov
imul
inc
lahf
mov
jns
shlb
mov
popf
lret
xchg
adc
je
jns
and
out
lods
imul
push
push
subl
pop
sub
push
push
repz
stc
orl
and
sbb
sbb
cmc
dec
sub
sbb
push
dec
lahf
push
movb
pop
adc
popf
lock
out
sub
cmp
jmp
pop
stos
jbe
and
clc
outsb
in
les
jmp
rsqrtps
sub
test
ljmp
add
in
in
cmp
jp
jecxz
push
arpl
lret
in
mov
insl
xor
lret
dec
lret
lea
loop
add
xlat
clc
sbb
or
lds
out
ja
mov
cmc
popa
fildl
xchg
add
fwait
ret
sbb
push
enter
push
subl
outsl
pop
adc
push
mov
inc
cmpsb
sahf
pop
lds
sarb
dec
and
and
push
jns
sahf
pop
xor
rcr
clc
add
insl
stc
pop
cld
mov
test
cwtl
and
pop
sub
out
xchg
ja
sahf
imul
sbb
or
lea
gs
adc
mov
pop
rclb
inc
movsb
sbb
lret
cmp
cltd
inc
pop
mov
fldenv
xor
or
mov
rcl
and
cli
xor
outsl
cmpsb
mov
das
sbb
loope
mov
mov
insb
mov
lret
inc
call
cmpsb
jecxz
aam
fwait
adc
into
xor
or
xchg
sarl
sti
mov
iret
mov
sarb
mov
cmc
cs
dec
adc
std
lock
mov
lea
icebp
out
notb
dec
adc
dec
push
xlat
insb
xchg
fnstsw
push
adc
dec
xchg
test
mov
and
shlb
push
xor
stos
std
mov
cmp
mov
push
imul
repz
pushf
cmc
aam
and
push
jle
inc
lret
mov
mov
out
sbb
test
enter
cmp
test
pop
add
shl
jb
xchg
andb
insb
rcrb
inc
loop
adc
movsl
out
cs
out
add
rol
insb
pop
outsl
pop
roll
ret
jnp
adc
sahf
mov
int3
sub
mov
int
push
dec
sbb
cwtl
xchg
lods
cmp
add
idivl
pop
cwtl
push
inc
rep
xchg
or
das
test
xchg
fs
jl
std
aad
mov
enter
or
scas
ja
ds
jnp
clc
add
inc
mov
sub
mov
lret
in
and
pop
cmp
inc
mov
bound
mov
outsl
fisubrs
mov
das
fs
dec
add
cmpsb
xchg
repnz
mov
pop
aas
gs
cli
jbe
sub
and
xchg
mov
lock
mov
inc
jo
adc
jl
mov
call
fisubs
movsl
xchg
push
add
cli
aam
mov
mov
and
out
dec
inc
in
jle
push
aad
movsb
mov
and
push
test
cmp
cmp
jle
mov
add
leave
xchg
mov
out
aam
rclb
loopnew
into
xlat
in
pop
out
and
mov
pushf
pop
rclb
das
and
enter
mov
and
sub
jbe
and
nop
cld
jmp
js
adc
bound
mov
mov
out
add
in
sbb
into
mov
jg
je
mov
adc
roll
sbb
sbb
loopne
jl
push
mov
mov
loop
out
in
mov
popf
mov
push
jb
loope
imul
mov
lret
inc
inc
idivb
mov
sbb
cmp
mov
iret
dec
xchg
insb
daa
jl
outsb
loop
shl
fisttpll
leave
ja
sahf
pop
movsl
mov
xchg
xor
hlt
mov
mov
popf
mov
cmp
mov
aam
je
test
push
fmuls
sbb
sub
ss
into
xlat
cmpsb
adc
sub
sub
sti
mov
sbb
cmpb
xlat
jmp
mov
cmp
mov
divl
daa
cltd
in
pop
jbe
cmp
sbb
cmp
pop
jnp
push
ljmp
scas
sub
mov
pop
out
inc
push
test
sbbb
lret
dec
mov
mov
inc
push
fstps
lea
lock
in
mov
movsl
daa
or
xor
xor
aam
scas
adc
xchg
in
je
add
outsl
hlt
xlat
jb
repz
lahf
enter
xor
mov
ds
cs
push
adc
cmp
lahf
in
ret
push
out
adc
int
int
sub
and
cld
sbb
mov
cwtl
fildll
movsl
pop
in
mov
clc
sub
pusha
cmpsl
lcall
mov
cwtl
out
sub
jecxz
push
jne
or
mov
cli
popf
aad
rclb
popf
mov
cmp
in
xchg
cld
loope
jbe
std
js
mov
xlat
inc
adc
cmp
xchg
popa
and
in
xchg
addr16
fwait
mov
fnsave
xchg
xchg
lds
sub
mov
int
addr16
xchg
sbbl
sub
in
ret
inc
inc
dec
jb
sub
addr16
popf
xchg
lds
mov
mov
dec
nop
or
mov
jo
pusha
cmc
jb
inc
hlt
jbe
pop
pop
xchg
xchg
ds
je
rcl
das
es
scas
aaa
xchg
sti
push
imul
sbb
outsb
mov
scas
cwtl
aaa
es
xor
daa
xchg
lds
and
fwait
andb
cltd
mov
stos
and
or
add
pop
mov
xchg
lahf
in
out
jecxz
xchg
dec
dec
cmp
pop
lret
mov
mov
xchg
sbb
dec
dec
in
fistl
nop
scas
lock
mov
ficompl
pushf
add
sbb
les
jo
fsubl
fistl
imul
lahf
sbb
push
jne
addr16
add
mov
shr
fmuls
stos
loope
inc
pop
mov
aam
lods
xchg
and
cltd
ret
push
mov
clc
aam
mov
mov
aas
mov
jae
int
push
cmp
xchg
jnp
insl
cld
loopne
movsl
test
pop
pop
shll
dec
xchg
in
popf
xchg
fcom
daa
fists
sub
xor
pop
stc
idivl
inc
sahf
std
je
sbb
cltd
add
push
out
vmovq
inc
or
pop
push
enter
mov
movsb
pop
xchg
pop
pop
sbb
sbb
mov
das
sarb
jbe
les
adc
mov
sub
and
inc
inc
std
mov
dec
aad
or
xor
leave
cli
shll
sahf
cmc
xor
push
outsb
icebp
repnz
push
out
jle
sarb
mov
roll
cmpsl
jecxz
jnp
pop
subl
je
aam
adc
insl
mov
ja
inc
ds
ret
test
lock
dec
sbb
popa
movsb
test
xchg
aam
mov
das
mov
pusha
xchg
hlt
push
jbe
insb
nop
adc
jge
mov
adc
jne
pop
jge
lock
jl
imul
in
in
push
test
cmpsl
inc
sub
out
adc
sub
pop
fcompl
sbb
loop
in
das
pushf
xchg
shrl
mov
push
or
fstpl
xchg
nop
xor
cltd
into
mov
mov
movsb
movsb
test
int
loop
rol
mov
aas
out
or
add
lea
push
pop
adc
fldcw
outsl
dec
mov
mov
pushf
addr16
stos
andl
dec
push
pop
pop
mov
leave
xor
inc
test
lods
sti
xchg
aam
and
daa
add
sub
lcall
cwtl
fistpl
cmp
cmp
mov
adc
pop
out
sbb
inc
mov
xchg
out
or
fstpl
mov
sti
fidivl
sub
jo
mov
out
inc
loope
lcall
add
call
or
xor
das
jno
push
shlb
mov
out
fildl
aad
pop
jl
xlat
jns
test
and
xor
pop
fsubl
insb
ds
adc
incl
pop
jg
push
inc
pop
cmp
je
sysret
mov
push
clc
add
push
push
sub
mov
pop
jp
mov
pop
hlt
pop
pop
push
outsl
mov
rcr
add
xor
dec
repnz
sub
dec
push
mov
clc
mov
dec
fildll
js
imul
mov
jmp
loopne
mov
mov
cmp
lods
pop
add
arpl
ret
mov
and
mov
ret
sub
add
and
fildll
pop
mov
xchg
stos
xchg
in
fdivr
popa
sub
faddp
xor
mov
or
mov
xchg
daa
rol
xchg
push
insb
in
cmp
rolb
ret
aad
aaa
cmc
add
pop
pop
inc
push
cmpsb
sub
mov
push
lods
push
cwtl
jl
insl
jo
xchg
lret
dec
inc
aad
addr16
rolb
mulb
in
lods
ret
outsb
repz
out
mov
or
mov
push
lahf
in
xchg
mov
or
inc
loop
push
mov
pop
in
stos
sbb
mov
jbe
movsb
repz
jb
fdivr
push
mov
scas
imul
call
dec
jle
mov
mov
cmp
in
insl
call
dec
leave
pusha
enter
cmp
sub
ds
lahf
stos
rolb
std
nop
pop
imul
enter
fwait
mov
mov
stc
inc
jl
mov
ss
out
adc
outsb
shr
mov
pop
jl
lahf
pop
movsb
and
dec
fsts
sub
push
dec
adc
mov
sub
or
les
fsts
jmp
lds
push
aas
or
test
push
mov
into
add
cs
pop
lret
loope
sarl
xchg
adc
xchg
mov
int3
daa
inc
aaa
xchg
std
xchg
int
jle
pop
add
mov
leave
mov
sbb
fsub
xor
sbb
jle
popf
xor
out
out
rcl
mov
scas
jmp
pop
add
repz
xchg
cmp
addl
sbb
jl
outsb
inc
stos
sets
lods
popf
out
mov
dec
add
and
mov
pop
xchg
in
jbe
lret
in
dec
adc
mov
shl
mov
jg
dec
cmp
jle
cld
push
ret
stos
rorb
mov
adc
inc
rcl
dec
jecxz
dec
cmp
loope
inc
xchg
fstpl
arpl
sub
push
and
mov
sbb
scas
pusha
jb
adc
inc
and
rol
fucomi
test
xor
pop
cs
add
test
jecxz
das
jmp
call
cmpsl
push
and
mov
cld
push
pop
lods
test
fcomps
cs
or
ret
jle
mov
sbb
inc
pushf
inc
and
shl
rcl
cmp
dec
and
mov
jg
inc
add
popa
dec
xor
dec
pop
and
out
mov
push
mov
mov
mov
pop
vpcomd
sub
pop
pop
dec
or
xchg
enter
cmp
mov
jo
fsubrl
xor
outsl
xor
jg
pop
adc
popa
jnp
es
arpl
add
pop
ljmp
in
adc
enter
cmp
xor
jmp
xor
dec
lock
lret
add
sbbl
jmp
sbb
xlat
xchg
into
mov
xor
add
xchg
xchg
mov
xchg
or
mov
mov
in
pop
dec
push
addb
test
nop
jae
mov
mov
inc
roll
inc
js
nop
xchg
push
fs
lahf
xchg
inc
jmp
pop
sub
andl
adc
popa
sub
inc
ja
lods
sbb
addr16
arpl
sbbl
xchg
mov
sar
in
repz
lods
daa
mov
sti
mov
mov
sub
push
pop
lret
sbb
pushf
mov
fcom
cld
mov
call
sub
das
mov
outsb
int
cmpsb
sti
xchg
in
cs
out
pop
fimuls
loopne
sub
jb
cmp
fiaddl
mov
jae
dec
es
sub
out
push
mov
sbb
je
arpl
pusha
sub
dec
scas
loopne
test
and
pop
xchg
dec
mov
jae
daa
insb
aas
gs
mov
cmpsl
hlt
mov
push
pop
popf
inc
add
xchg
data16
das
rorb
mov
loope
pop
mov
popa
add
sbb
push
sahf
xchg
mov
fadd
mov
sbb
repnz
aam
movb
or
cs
aaa
sahf
stc
test
xchg
cmpsb
adc
clc
dec
iret
out
test
shrl
mov
xchg
jns
xor
xchg
into
les
mov
insb
mov
adc
cmp
mov
xchg
mov
jmp
inc
xor
fs
jne
cmp
jae
idiv
jl
fidivrs
imul
ret
rclb
out
data16
lret
test
in
shrl
pop
pop
ret
je
mov
arpl
out
adc
ds
sti
inc
jge
data16
js
mov
pop
loop
cmpsb
add
shrb
imul
sub
mov
shl
cmp
cwtl
icebp
mov
pop
xchg
push
or
pop
add
in
addl
mov
mov
sbb
jmp
and
fsub
gs
add
xor
push
inc
out
mov
test
mov
dec
mov
push
pop
fisubs
stos
pop
out
fcmove
jo
ds
jbe
imul
jmp
mov
mov
push
jmp
mov
lcall
adc
out
loopne
xchg
addb
movsl
mov
sbb
je
ret
sbb
sbb
mov
and
xchg
sub
mov
mov
jbe
in
test
daa
out
repnz
mov
lds
loopne
pop
insl
dec
adc
cmp
stos
mov
jmp
xchg
adc
out
leave
or
sub
lock
mov
xor
lods
repnz
jmp
mov
cli
sti
stc
in
imul
and
cli
or
in
inc
push
sub
cwtl
mov
outsb
inc
ljmp
stos
xchg
mov
jle
popf
add
or
mov
mov
lds
and
fisubs
lahf
aas
push
popa
sarb
sub
mov
fwait
mov
int3
mov
fwait
imul
inc
ja
and
dec
mov
repnz
scas
push
loope
rcrb
cli
in
mov
push
adc
test
inc
lahf
fisubrl
fdivrs
lret
sub
rcr
jle
cmp
ret
push
inc
stos
ss
mov
xchg
push
js
mov
cmp
inc
xchg
cmc
loope
mov
push
xchg
cmp
lds
roll
push
inc
nop
imul
sub
lock
cmp
lea
jl
cwtl
push
test
xchg
mov
out
test
cmpsb
call
in
lods
imul
out
jecxz
dec
in
adc
and
das
icebp
or
mov
sbb
mov
frstor
incb
mov
scas
popa
int
lods
push
dec
mov
sbb
mov
jbe
popa
jge
push
mov
mov
divl
pop
xor
sub
xchg
mov
push
mov
rorl
mov
jle
sbb
adc
lahf
xchg
lahf
xor
pop
movsl
ss
imull
arpl
lods
leave
cmpsl
push
jbe
addr16
rcr
push
int3
lock
addr16
inc
inc
or
test
mov
bound
mov
das
jmp
mov
jo
cmp
adc
ret
test
and
add
xorb
xorl
pop
pop
scas
jl
pop
fwait
inc
cwtl
push
inc
jo
in
mov
sbb
xor
inc
dec
pop
inc
jg
test
dec
push
jnp
gs
fisubrl
adc
lods
cmp
sub
cmpb
dec
ds
pusha
xchg
mov
push
xchg
mov
or
insl
xchg
pop
hlt
cmpsb
ds
pop
out
in
adc
mov
into
out
jle
enter
loope
outsl
mov
sub
test
movsl
insb
dec
mov
dec
xor
inc
or
jmp
lret
jnp
test
loope
pop
xchg
shll
dec
pushw
test
push
xchg
lret
inc
fldt
cmpsb
and
scas
adc
in
dec
les
dec
rcl
out
aad
in
fisubrl
xor
adc
mov
icebp
lcall
push
mov
pop
sbb
mov
jo
cmp
std
pop
pop
sti
scas
sbb
iret
in
fisubrs
sbb
sbb
xchg
push
lock
mov
pop
repnz
hlt
mov
ss
dec
mov
call
sti
xchg
movsb
adc
rclb
int
dec
jl
push
cmpsl
push
mov
fxch
cmc
jp
std
mov
daa
lea
jns
push
push
push
gs
cs
insl
dec
push
dec
inc
call
rclb
pop
sbb
out
pop
out
inc
push
add
andb
jo
push
pop
pop
inc
or
and
fdivl
sub
jle
clc
or
mov
daa
and
gs
and
sbb
sub
fsubrl
imul
add
jb
xor
cmc
jg
and
movsb
mov
sub
push
dec
arpl
jge
das
push
lods
mov
enter
fdivrl
mov
int
jecxz
inc
in
les
popa
and
sub
xchg
mov
je
push
aaa
jns
mov
add
xor
popf
add
ja
pop
mov
in
mov
cs
add
mov
and
cwtl
rclb
add
out
xchg
lcall
insb
inc
in
sub
sbb
ds
sub
cmp
leave
jo
sub
jl
lea
cltd
mov
lods
jnp
clc
test
xor
js
ret
cmpsl
scas
out
push
dec
push
fmull
mov
leave
sahf
jecxz
call
push
add
mov
fidivs
inc
inc
inc
inc
stos
roll
dec
jge
pop
int
rol
mov
in
cmp
insb
or
test
inc
dec
rolb
je
fmul
out
out
jno
fcompl
stc
int3
and
lcall
es
xor
pop
out
in
or
mov
inc
dec
push
lret
mov
cld
xor
movsb
hlt
divl
mov
into
xchg
mov
out
mov
fwait
je
lods
sub
shlb
xchg
cmp
mov
mov
movsb
mov
mov
jg
dec
call
dec
mov
push
jne
jbe
push
cs
jl
lret
and
fsts
testl
scas
mov
pop
sbb
lds
neg
dec
fmull
jns
push
push
pop
rcll
inc
cmp
daa
fisttps
adc
aas
or
repz
lret
pushf
pop
je
pushf
clc
add
les
mov
push
cs
and
jnp
cli
dec
aad
ret
cmp
mov
dec
xchg
cmpsl
mov
in
mov
or
dec
lahf
shll
jno
mov
imul
imul
and
and
lds
fcomi
rorb
test
arpl
mov
rcrl
jmp
std
incb
inc
push
push
push
shlb
cmpl
dec
addl
mov
imul
push
sbb
push
dec
push
daa
jbe
mov
cld
and
rolb
int
or
fdivrs
xchg
or
notb
out
add
aad
subb
in
xchg
ja
add
dec
and
push
dec
or
dec
mov
out
sarl
ds
mov
out
push
mov
xchg
push
cmp
cld
pushf
std
test
test
dec
push
or
fimuls
pop
or
cmpsl
jmp
xor
cmpsl
add
test
out
mov
cld
imull
ficomps
call
mov
rorl
sbb
in
icebp
mov
pushf
aas
pop
test
ret
aaa
ret
jnp
lods
pop
in
lods
cmpsb
je
add
lret
repz
cmp
gs
test
imul
dec
mov
les
xchg
pusha
inc
sub
or
and
aaa
pusha
inc
out
in
sub
les
inc
das
movsl
test
mov
outsb
sbb
mov
cmp
insb
pop
xchg
and
sti
sub
test
jb
addl
jb
jecxz
adc
inc
mov
dec
insb
push
imull
test
movsl
rcll
add
fs
test
cmpsl
fdivrs
es
cmp
xor
xchg
pop
inc
lea
js
pop
inc
repnz
repnz
push
pop
push
mov
adc
push
stc
push
pop
push
sub
gs
testl
inc
jb
pop
rolb
fcompl
add
ljmp
leave
leave
popf
or
fwait
loopne
mov
mov
xchg
mov
dec
cwtl
popa
dec
roll
int3
fidivrl
in
mov
out
sbb
add
mov
sbb
mov
mov
mov
leave
out
fwait
or
mov
into
js
push
dec
bound
out
fdivrs
pop
cltd
xlat
ret
imul
cwtl
pop
fdivl
sar
mov
pop
out
cltd
scas
pusha
inc
ret
dec
mov
out
adc
add
mov
ljmp
outsl
pusha
inc
popf
sbb
shrl
sbb
cmpsb
lea
push
sti
xchg
out
addr16
mov
daa
fnsave
cmp
jnp
cmp
aas
lea
jmp
fldl
imul
in
jmp
mov
fnstsw
aaa
aas
sahf
push
and
cmp
xchg
ja
jp
arpl
xchg
xor
shll
iret
mov
mov
jle
pop
jp
aam
xchg
mov
fyl2x
lret
lret
inc
sbb
jp
inc
stos
mov
int3
pop
in
pop
mulb
rcrl
jmp
scas
adc
stos
les
stc
jle
dec
mov
ljmp
out
xor
rol
imul
cld
lods
or
aaa
pop
xor
xchg
lret
mov
outsb
loope
jno
pusha
bound
xchg
xchg
add
call
js
mov
inc
and
pushf
fnstcw
je
mov
sbb
inc
hlt
pminsw
pop
in
dec
sbb
mov
jle
in
daa
stos
jbe
sub
insl
mov
scas
call
scas
lods
call
jo
cld
pusha
dec
cmpsl
mov
rcr
ds
mov
cmp
out
pop
pop
nop
adc
imul
fdivrp
add
push
in
sti
jp
ret
dec
and
gs
push
lcall
ret
add
pop
mov
xchg
inc
mov
inc
adc
add
xor
xchg
pop
fs
cmpsl
aas
daa
pop
dec
mov
into
aam
sub
sbb
in
je
dec
fstl
imul
push
adc
aaa
sub
rcrb
dec
mov
mov
mov
roll
imul
push
push
dec
xchg
jmp
cmpsb
clc
stc
jle
repz
bound
mov
pop
lret
mull
adc
lahf
mov
pop
mov
scas
mov
test
pop
mov
xadd
clc
leave
out
fsts
sbb
inc
mov
shrl
mov
outsb
aam
or
cmpsb
xor
adc
ljmp
rorl
sub
push
or
repz
movsl
pop
repnz
cmp
xorl
adc
mov
lods
lret
sbb
loopne
clc
std
test
loope
fdiv
in
add
icebp
ss
cs
pushf
push
in
mov
jmp
sahf
xor
jecxz
cmp
ljmp
pusha
in
pop
jb
add
cwtl
shl
sahf
jo
adc
daa
int3
or
incb
lcall
fimuls
bound
sbb
cltd
rolb
sahf
aaa
mov
lret
out
insl
push
in
movsb
and
mov
cmp
sbb
js
hlt
jl
fnsave
inc
je
ds
test
shlb
push
outsb
fs
ucomiss
je
xor
lods
push
cmp
popf
and
xchg
fldl
pop
lret
ret
loop
jbe
scas
sbb
dec
scas
mov
cli
xchg
lret
mov
adc
lock
cmp
jne
out
inc
std
xor
popa
jns,pt
push
cld
pop
jle
add
inc
mov
inc
push
aam
jo
filds
jge
test
jnp
jle
hlt
and
cmpsl
mov
add
loope
les
pop
shll
fistpl
mov
sub
adc
sahf
mov
popf
jmp
sbb
xorl
ljmp
andb
push
cli
xlat
popf
mov
je
mov
jo
fimuls
call
add
push
outsb
mov
nop
inc
aad
jae
xchg
inc
pop
mov
pushf
inc
fwait
cmp
xlat
fidivrl
xor
cmpsb
mov
push
sbb
jmp
push
or
adc
or
call
xchg
loopne
out
mov
cmp
add
sbb
mov
fwait
mov
mov
ficomps
ret
and
scas
adc
sti
cmp
xor
dec
stc
xchg
xor
sbb
cmpsl
xor
fwait
test
insl
out
loopne
lea
aad
and
adc
aas
fsubs
enter
mov
inc
stos
movsl
inc
cwtl
js
dec
add
jnp
cmp
imulb
insb
ss
test
fcmovnu
push
popl
fmull
pop
push
roll
and
in
cmp
pop
pushf
add
es
xchg
loopne
xchg
cltd
movsb
scas
cmp
stos
jp
sbb
subl
lcall
mov
lea
scas
pushf
jmpw
in
into
fcompl
scas
popf
inc
and
das
adc
xor
sub
je
and
push
push
dec
cmpsl
pusha
iret
fdivr
les
pop
repz
sbbb
xor
fwait
push
cmp
daa
xchg
sti
push
adc
xchg
push
and
in
pop
jnp
mov
test
imul
fcomps
psubsw
adc
cmp
mov
adc
mov
mov
in
cmp
aas
push
loopne
test
mov
subl
adc
ficoms
jle
pop
insb
adc
inc
xchg
sub
push
pop
lds
mov
ficomps
pop
sti
xchg
inc
cmp
lcall
pop
sbb
sub
fistl
push
stos
sahf
std
jle
ja
adc
jo
push
jg
stc
lret
add
jg
call
xchg
out
or
jne
pop
mov
lods
mov
fwait
arpl
inc
xor
sbb
inc
mov
pop
lods
xor
push
sbb
mov
jle
je
shlb
sub
push
incl
mov
mov
aam
lahf
mov
add
mov
mov
mov
enter
dec
mov
scas
mov
xchg
mov
mov
dec
cmpsb
or
inc
int3
ret
inc
sbb
sarl
sub
fdivr
lds
xor
xchg
jecxz
mov
cli
pop
enter
push
pop
in
test
dec
lret
outsb
inc
fidivl
cmp
repnz
push
adc
gs
jecxz
cmp
adc
bound
sub
gs
pop
cbtw
inc
cmp
sbb
xchg
add
add
popa
ds
test
add
fsubrs
dec
icebp
int3
mov
inc
cmp
pop
xor
jle
ficomps
inc
mov
mov
stos
and
adc
jmp
pop
jb
fsubl
adc
pminub
ret
add
adc
and
cmpsb
cmp
divb
or
mov
sub
out
mov
mov
jl
sbb
cmp
push
mov
jnp
xchg
mov
inc
pop
sub
jl
jbe
xlat
loope
fxch
adc
mov
jae
enter
mov
into
subl
aad
push
xchg
lods
in
popa
xlat
jnp
outsl
int
fnstenv
shrb
jae
mov
mov
fninit
arpl
stc
inc
push
cmpsb
or
lcall
addr16
add
rcll
aaa
fisubrl
sub
push
adc
dec
scas
cmp
pop
outsb
jecxz
xchg
int3
andb
addb
lods
push
and
rcrb
daa
mov
xchg
insb
pop
shrl
adc
pop
es
int
and
imul
xchg
sbb
xor
mov
iret
mov
sub
dec
xor
and
xchg
pop
leave
xchg
push
adc
mov
sbb
in
mov
aad
dec
pop
cmpsb
mov
inc
fs
bound
dec
loope
loope
in
sub
jge
and
jns
jns
add
or
xchg
pushl
les
adc
push
movsl
sbb
arpl
cmp
or
push
in
xchg
adc
repz
jecxz
mov
out
test
es
cmpb
jle
mov
popa
xchg
aam
xchg
mov
and
mov
jl
adc
mov
data16
rcll
nop
jno
loope
loopne
mov
push
or
bound
adc
sub
insl
leave
xchg
popf
adc
mov
insb
sub
rcrl
lret
int
cmp
xor
push
inc
insb
lcall
push
lea
sbb
pop
jmp
cmpsl
bound
xchg
nop
mov
sbb
mov
push
add
mov
mov
jno
mov
mov
in
add
inc
in
inc
mov
xchg
in
mov
mov
mov
jae
adc
jl
test
sub
pop
or
aam
pusha
mov
push
and
adc
xchg
stos
jne
insl
dec
xchg
in
or
addr16
iret
pop
and
popa
and
outsb
clc
lods
sub
pop
adc
cltd
sub
push
idivb
cmc
ds
xlat
gs
jle
loopne
sub
pop
stos
addr16
pop
cmp
data16
pop
xor
imul
std
push
imul
sbbl
test
in
out
xchg
aaa
mov
mov
inc
mov
xlat
in
bound
inc
cmp
dec
in
and
lret
test
push
stos
and
and
rolb
jecxz
add
jno
rorb
fcmovu
pop
out
or
jp
fidivl
lahf
adc
repnz
shr
loopne
adc
data16
fcomps
xchg
insb
and
call
mov
mov
mov
ret
imul
adc
aas
js
mov
cmp
addb
inc
xchg
cli
outsb
and
ret
cmp
addr16
seta
mov
inc
or
sbb
pop
negb
les
aaa
add
pop
sti
xor
mov
stos
repnz
and
jbe
sbb
movsb
xchg
les
out
sbb
jle
and
fwait
enter
add
or
mov
jo
int3
aam
sarl
cs
in
mov
aad
lea
mov
in
loop
mov
cld
push
mov
shl
jmp
sub
add
lret
sarb
pop
in
ret
xchg
add
mov
iret
mov
outsl
push
jg
loope
push
cs
mov
sarl
test
sub
adc
add
aad
frstor
and
dec
iret
mov
roll
repz
in
pop
fdiv
pop
or
lret
pop
and
fsubrp
mov
xchg
mov
cmp
xlat
sbb
cmp
inc
dec
mov
dec
dec
std
gs
add
and
lods
mov
mov
cmp
mov
movsl
xlat
add
cltd
adc
and
in
jae
sub
or
pop
sbb
bound
mov
jo
insb
call
add
rcll
pop
aad
lea
add
mov
pinsrw
aad
out
push
cmp
mov
and
sub
mov
push
shrl
cwtl
pop
scas
sbb
push
mov
addr16
mov
aaa
in
jl
leave
test
xor
dec
sbb
jno
pushf
out
jae
mov
cmp
outsb
enter
iret
ljmp
icebp
and
outsb
cmpsl
insb
cli
subl
pop
ljmp
cmpsl
lods
pop
cmp
cs
mov
jmp
pop
cmp
out
fs
lods
repnz
mov
mov
jo
sub
out
add
and
jne
sub
cmc
mov
xchg
and
push
orb
sahf
mov
nop
pop
bound
aam
fisubrl
popa
scas
mov
sub
cs
jmp
sub
outsl
mov
test
popf
sbbb
pop
xchg
gs
pusha
mov
sbb
adc
cmp
int
imul
push
mov
out
cmp
mov
lret
out
icebp
pop
leave
push
fcmovbe
mov
mov
xchg
add
data16
test
scas
sub
xchg
adc
repz
xchg
and
jg
das
jge
add
inc
mov
mov
sahf
sbb
cmc
repnz
adc
sbb
mov
push
fsubl
add
adc
fidivs
cmpsl
scas
push
mov
call
xchg
pop
dec
es
aam
ret
ljmp
fisttpl
jecxz
mov
jg
hlt
fwait
popa
cmp
sub
shrl
repz
jns
fimull
sub
lahf
mov
out
fistps
lcall
inc
adc
daa
xchg
and
inc
xor
sbb
adc
into
pop
xor
xor
xlat
add
std
xchg
ljmp
insl
pop
or
mov
out
pop
mov
insb
pop
sub
and
mov
xchg
flds
push
out
fisubl
test
push
pmaxub
dec
lret
shlb
arpl
jg
xchg
out
fstpt
cmc
xor
push
pusha
jl
dec
aad
fwait
dec
cmpb
xchg
loopne
mov
xlat
in
cwtl
push
lods
mul
cmp
aam
push
insb
out
ret
sub
xchg
mov
addr16
pushf
mov
and
adcl
in
lcall
test
xor
andb
movsl
imul
call
fisttpll
or
dec
inc
sbb
mov
push
aad
push
test
daa
jl
cmp
movsb
shlb
shlb
adc
mov
mov
leave
jmp
mov
mov
in
xchg
dec
and
mov
test
shlb
rolb
roll
popa
and
aam
dec
push
nop
inc
jmp
cltd
inc
subb
addr16
mov
mov
movsl
mov
adc
dec
adc
mov
pop
mov
imul
fs
mov
loop
push
push
mov
push
insl
jle
ds
mov
int3
pop
cli
pusha
inc
lcall
cmp
add
sbb
cmp
mulb
inc
jne
pop
loopne
cmc
lret
dec
aad
aaa
pop
test
leave
jne
and
jb
push
xchg
cmp
in
inc
mov
fadds
frstor
mov
out
xchg
fbld
inc
fisubrs
pusha
mov
xor
enter
pop
jl
adc
fiadds
xorl
xchg
xchg
fstl
into
mov
es
mov
push
bound
xchg
add
dec
or
mov
imul
dec
mov
pop
sahf
incl
int
hlt
adc
nop
adc
jno
sti
mov
or
fisubrl
sub
mov
popf
in
lret
popa
adc
daa
push
cs
and
adc
fs
fisubs
and
mov
pop
or
test
stos
dec
sahf
mov
aad
mov
jecxz
pushf
daa
and
jl
lcall
or
mov
mov
imul
arpl
iret
popf
mov
lcall
adc
orl
fisubrs
push
jb
jl
fiadds
aas
repz
shrb
push
call
mov
inc
mov
jecxz
mov
cmpsb
xlat
adc
out
inc
hlt
adc
les
dec
mov
jbe
inc
ljmp
pop
in
lods
outsb
mov
push
aad
aas
into
popa
es
pop
in
in
sub
outsb
std
mov
outsl
jne
xchg
lret
insb
cld
ret
mov
sbb
dec
cs
xchg
xchg
pop
cmpsb
jnp
push
cmpsb
repz
int
adc
cmpsl
pop
pop
inc
sbb
imul
push
movsl
mov
mov
and
xchg
adc
outsb
rclb
push
mov
es
fcoml
scas
push
fisubl
dec
rcrb
pusha
fldl
sbb
and
es
ret
scas
movsb
sub
test
lcall
mov
xchg
rcrl
mov
jno
mov
lods
scas
mov
sbb
mov
inc
pop
pop
pop
mov
inc
push
stos
ljmp
cmpsl
out
inc
out
pushf
cmp
lods
dec
in
lret
mov
stos
div
sub
je
xchg
sbb
lea
pop
loop
mov
sbb
inc
push
xor
add
outsb
sbb
xor
cmpsl
push
lea
xchg
das
add
and
push
or
mov
test
idivl
popf
bound
out
mov
sbb
adc
pop
sbb
repnz
icebp
fdivrl
jecxz
pusha
mov
popa
es
mov
outsl
rol
mov
aam
and
pmaxub
push
rcr
test
cmp
mov
jno
mov
pop
mov
mov
enter
mov
fcoms
in
outsl
lods
fldcw
loope
in
js
sub
push
pop
mov
mov
xchg
mov
js
lods
xchg
mov
sbb
fisubrl
mov
fisubrs
push
push
xchg
out
movsb
stos
les
ret
ficompl
inc
push
push
pop
loop
fdivs
jbe
xor
cmp
cmp
push
mov
scas
push
mov
sub
cwtl
js
push
jns
mov
push
xchg
push
repz
lods
adc
xchg
push
mov
pusha
dec
or
outsl
xchg
xchg
out
xor
mov
xor
or
mov
jmp
mov
mov
xlat
dec
das
dec
fld
add
inc
fisubrl
xchg
pop
dec
push
mov
mov
cmp
fisttpll
je
lods
add
xor
jecxz
inc
fwait
cmc
out
mov
pop
dec
xor
out
sahf
nop
xchg
and
push
sub
popa
gs
loop
cld
lock
xchg
loope
fstl
and
inc
pop
into
ret
dec
andb
inc
aam
fsubrl
xlat
out
adc
adc
pop
cwtl
pop
inc
jp
lret
sahf
loop
lds
cmpsb
sub
adc
das
test
jnp
divb
jb
or
xchg
mov
aaa
out
fwait
mov
lahf
mov
xchg
fnstenv
dec
pop
mov
add
sbb
or
pop
mov
push
repnz
push
jno
fs
mov
cwtl
lock
pusha
pop
inc
sbb
test
popa
or
jl
fisubrl
adc
fdivrs
sub
mov
les
aad
inc
out
in
in
shll
mov
movsl
loop
das
mov
fbld
pop
jbe
das
mov
inc
add
je
fldt
or
sahf
out
jecxz
xchg
mov
mov
popf
mov
or
flds
rcl
lret
cmp
sti
fldcw
push
shll
aad
repz
cli
push
jo
call
cmpsb
ror
scas
jp
push
pop
mov
jl
push
fbld
mov
pop
push
sbb
stos
hlt
cmp
cwtl
push
int3
mov
xchg
outsl
in
lods
xor
loop
lret
loop
push
test
test
daa
sahf
xor
push
jne
outsl
jl
popf
jle
sub
dec
jl
jecxz
or
stos
lods
mov
sbb
test
xorb
sbb
mov
cmp
sub
cwtl
sbb
movsb
lahf
push
cmp
int3
pop
push
jnp
mov
xor
jmp
pop
outsb
xchg
imul
notb
mov
loop
xchg
pushf
xchg
mov
or
mov
outsl
mov
xchg
dec
inc
push
js
dec
sbb
sub
dec
jp
cmp
ficompl
out
mov
ffree
pushf
iret
jmp
out
js
sub
and
enter
xchg
dec
imulb
pop
inc
stos
sbb
outsl
rcll
frstor
xor
add
sub
in
mov
jne
xchg
jle
and
scas
sub
rcrb
push
loopne
lahf
adc
add
push
jp
cmp
lahf
jmp
and
sbb
jmp
imul
and
mov
mov
dec
sbb
out
outsl
fists
cmpsl
loop
xchg
jge
push
int
push
xchg
sbb
sti
cs
pop
sbb
test
sub
scas
popa
outsb
add
cmpsl
daa
dec
push
xchg
jo
aaa
push
jo
push
mov
mov
movsl
push
xchg
jg
jg
mov
insb
sub
rcrl
int3
sub
pop
push
sbb
mov
push
sub
and
wbinvd
add
inc
and
movsb
adc
shll
je
clc
cmp
stos
movsb
sbb
loope
aaa
es
cmp
inc
test
xor
mov
or
pushf
and
or
enter
lcall
lea
movsb
inc
hlt
xor
mov
xlat
icebp
xchg
mov
ret
push
scas
dec
ret
xor
mov
cmp
outsb
aaa
cld
outsl
rorb
mulb
in
or
mov
repz
sbbb
push
inc
sbb
dec
lds
enter
xlat
rcrl
mov
adc
sub
add
jbe
add
xchg
mov
test
shrb
xchg
outsl
mov
mov
inc
sbb
sahf
mov
and
cmp
push
in
movsb
sub
test
mov
mov
test
shlb
xor
jmp
xchg
pusha
stos
adc
fistps
pop
xchg
addr16
les
xorb
cmpsb
pop
mov
add
fcmove
cmp
imul
std
imul
xor
rcll
int
xchg
inc
mov
inc
loop
xchg
ds
ja
pop
dec
aam
js
add
stos
les
repz
jle
hlt
test
xchg
jmp
pop
lret
sbb
rcr
sbbb
pop
sbb
mov
xchg
mov
mov
js
jbe
add
addr16
stc
jge
sbb
or
push
ret
mov
bound
xchg
adc
cmpsl
push
push
jne
adc
iret
fiadds
pop
add
mov
leave
sbb
fs
fcoms
lret
push
shll
ja
mov
iret
test
push
jp
inc
or
fistpl
lahf
insl
sbb
jmp
mov
pop
std
cld
jp
nop
aam
loopne
inc
push
mulb
push
out
sub
mov
lods
xchg
lea
les
lret
imul
lahf
cli
rcrb
xor
cmpsb
out
jnp
pop
mov
pusha
mov
xor
in
lods
sub
xchg
lret
cs
jecxz
add
lcall
fcoms
jmp
pop
add
cmp
fwait
out
jns
cmpsb
push
cmp
mov
je
lds
jmp
sbb
add
outsb
fcmovnu
cld
orb
adc
xor
movsb
sbb
adc
orb
fildll
fcmovnb
xchg
add
mov
cmp
shlb
jb
dec
push
cld
sub
pop
push
jne
movsb
and
orb
sbb
dec
push
mov
sbb
mov
ret
xlat
ss
mov
cmp
dec
les
pop
call
stc
pop
fistps
dec
nop
xor
mov
cmp
lds
pop
int
add
test
lret
repnz
cmp
out
or
push
scas
add
loope
xor
mov
mov
ficoms
cmc
insl
cmp
stc
out
dec
dec
cmp
dec
add
sarl
and
fnstsw
xchg
ds
stc
fadd
rclb
in
xchg
sub
ljmp
xor
xchg
jno
arpl
sub
sub
mov
inc
cmp
mov
testl
stos
and
dec
loop
jno
inc
adc
xor
push
cmc
scas
int3
inc
cmp
dec
add
cwtl
cmp
pop
addr16
xchg
push
mov
adc
and
inc
lea
test
jl
pop
test
outsb
pop
jne
push
dec
mov
xchg
push
or
dec
inc
lret
jl
icebp
mov
mov
pushf
mov
iret
insb
push
addr16
movsb
xchg
int3
dec
lods
mov
pop
test
icebp
xchg
inc
xchg
lds
ja
dec
inc
mov
push
jecxz
lea
sub
ss
repnz
dec
sbb
xchg
mov
sbbl
aam
mov
ret
out
loop
in
pop
cltd
xchg
lret
jmp
rcl
mov
repz
daa
loopne
outsl
and
jle
or
mov
sub
xchg
mov
popf
addr16
ss
push
mov
add
sbb
pushf
xchg
popf
adc
mov
mov
pop
pop
ret
imulb
mov
popa
fldcw
call
fadd
cmp
xor
aas
cmp
int3
daa
lcall
mov
push
stos
adc
mov
mov
jecxz
repz
inc
pop
neg
fst
lcall
loope
pop
push
adc
fnstcw
dec
ds
jo
data16
negb
je
push
pop
mov
mov
jmp
negl
pop
mov
inc
bound
or
dec
test
in
sbb
jge
sub
cwtl
cmpsb
divl
push
outsb
cmp
sub
xchg
das
sbb
push
notb
xchg
xor
adc
sbb
adc
out
imul
mov
mov
cmp
repnz
cmp
adc
bound
push
inc
stos
arpl
mov
mov
mov
jne
push
xchg
mov
popf
arpl
adc
test
subl
adc
jecxz
mov
out
in
stc
lret
and
sbb
ret
pop
shlb
jne
xchg
fs
es
adc
jg
mov
jbe
shll
test
mov
push
scas
and
into
pop
incb
scas
out
cs
sbb
shll
fisttps
fs
shlb
jne
ret
pop
cwtl
pushw
les
pop
push
sub
push
scas
int
push
or
sub
xchg
aam
je
in
into
push
add
sti
mov
in
imul
mov
cmp
jmp
push
jo
int
outsl
xchg
repnz
arpl
int3
fisttpll
outsb
fwait
sbb
out
sbb
inc
mov
push
aad
or
mov
or
stos
lods
mov
insl
mov
push
test
adc
xor
mov
in
sti
mov
jge
movsb
std
jle
mov
jnp
jl
jbe
mov
jmp
pop
movsb
xchg
adc
mov
idivl
negb
dec
dec
xor
adc
inc
mov
lock
mov
pop
cmpsb
cmp
sbb
xor
lahf
jmp
scas
lret
imul
fisubs
xchg
xlat
adc
clc
and
jb
leave
lods
jnp
push
fadds
ret
popf
aam
loope
or
push
mov
jno
push
cs
loopne
mov
mov
mov
inc
jl
ds
hlt
nop
sbb
adc
mov
test
leave
lret
push
xchg
xchg
mov
jl
add
adc
daa
fdivl
mov
mov
dec
aaa
scas
xorl
push
ljmp
lret
xchg
leave
imul
lds
pop
mov
sbb
xchg
shll
cmp
cmc
pop
cltd
jns
cltd
push
and
jne
sbb
scas
movsl
movsl
unpckhps
bound
rorl
call
mov
xchg
fildll
mov
adc
inc
pop
jecxz
push
rol
movsl
jmp
movsl
mov
fisttpll
push
outsb
insl
pop
test
test
fistps
xchg
push
rorl
jne
mov
imull
test
inc
and
repz
popa
outsl
data16
mov
pushf
mov
mov
xlat
aas
pop
jecxz
fcoms
loope
cwtl
fldl
dec
js
std
mov
jns
and
xchg
test
sub
je
lds
push
movsb
xor
test
je
mov
je
sarb
xchg
fildl
mov
push
lret
stos
jae
pop
lock
xchg
lret
test
and
mov
mov
mov
pop
lods
inc
or
mov
sbb
nop
scas
mov
adc
jno
js
add
mull
add
adc
cmp
xchg
cmp
cwtl
sbb
inc
cld
mov
jns
or
sbb
add
js
mov
adc
ss
inc
cmp
lock
outsb
in
loopne
jg
pop
push
insb
and
xchg
ret
push
cld
mov
inc
mov
outsb
idivb
push
in
push
lea
jae
inc
mov
push
jle
pop
lret
fcmovu
jl
fucomip
xchg
mov
inc
pop
fistl
pop
in
cld
adc
sub
lret
sti
in
jb
jp
sub
adc
clc
add
adcl
mov
loope
mov
std
nop
and
or
sub
lret
in
rcrb
sbb
mov
jo
ficoms
ja
das
iret
pop
testb
enter
adc
adc
jl
sbb
pop
push
push
jo
cli
pushf
out
in
push
push
insl
mov
loopne
les
xchg
scas
sbb
aad
xchg
adc
mov
push
imul
mov
mov
incb
lea
xor
pop
push
in
icebp
icebp
call
cltd
mov
jne
ret
and
fmulp
pop
in
inc
push
adc
adc
movsb
pop
mov
push
pop
lret
mov
mov
fmuls
repnz
xchg
inc
enter
pop
mov
jle
sbb
sbb
fimuls
cmpsb
in
sbb
sub
lock
les
outsb
ljmp
in
add
pop
jmp
fwait
lahf
mov
fsubrl
pusha
fisttpll
pop
sbb
mov
dec
leave
and
pop
in
int3
xor
push
aam
push
and
sub
mov
sub
bound
dec
mov
cltd
lea
mov
ss
movsl
cwtl
lods
or
in
adc
clc
inc
pop
add
outsl
jno
add
sub
popa
lcall
pusha
cmp
stc
lahf
jno
repnz
popf
pop
mov
push
xchg
hlt
repnz
mov
dec
lock
push
int3
push
xor
add
cmp
and
rcll
dec
loop
xchg
js
movlps
jle
mov
xor
add
or
popf
xor
movsb
push
loop
jmp
mov
shrb
fisubrs
inc
fistpll
mov
dec
mov
fs
fcoml
dec
jae
and
test
jmp
jp
enter
icebp
ret
shrl
insl
scas
lahf
mov
jle,pt
push
dec
mov
js
loop
and
inc
xor
fcoml
imul
or
adc
cmp
adc
lret
jg
aam
or
lds
mov
xchg
sub
fdivs
movsb
cmp
inc
test
imul
mov
es
mov
dec
xchg
inc
inc
push
xorl
jmp
daa
jae
call
jbe
mov
fucomp
dec
call
repnz
movsb
rolb
mov
and
xchg
je
popa
pop
jbe
cmp
in
jmp
push
rcll
movsl
sahf
rclb
sub
imul
or
int3
cld
ret
adc
cld
push
pusha
movsb
aaa
cmpsb
leave
stos
out
adc
enter
mov
in
mov
scas
xchg
pop
test
rolb
test
xchg
jl
pop
pop
pop
adc
pop
out
cmc
push
fisttpl
out
sbb
mov
outsl
dec
iret
fildl
and
mov
pop
inc
cld
fistl
push
insb
mov
mov
and
imul
or
dec
mov
mov
cmc
xlat
decb
pop
xor
fsubl
fimuls
mov
fs
xchg
and
out
loopne
mov
xchg
daa
xor
dec
pop
xchg
xchg
in
cmp
mov
pop
dec
inc
xlat
push
sbbb
in
mulb
mov
int3
mov
mov
sti
push
sti
mov
test
syscall
xor
mov
sbb
ror
dec
aas
jbe
sbbl
dec
jge
mov
test
sbb
xchg
cmpsl
dec
stos
pusha
lret
mov
icebp
dec
push
mov
xchg
stos
mov
mov
sti
test
mov
mov
scas
les
cmpl
inc
sbb
xchg
lret
es
sbb
mov
andb
out
pop
jbe
sub
xchg
dec
add
jno
inc
aad
inc
sti
mov
fimull
je
movsb
scas
mov
lock
test
mov
frstpm(287
dec
jb
or
mov
jl
jp
cbtw
call
push
dec
sbb
outsb
movsb
pop
sbb
test
ficompl
gs
aad
pop
xchg
or
fisubrl
fimull
mov
ja
jge
or
rcrl
mov
fwait
xlat
inc
xchg
jne
cli
mull
cmp
and
rorb
mov
dec
and
jl
popf
cmpsl
jnp,pn
testl
pop
aam
xor
push
pushf
push
mov
leave
scas
imul
int3
sub
std
cmp
sbb
adc
xor
mov
push
stos
mov
cmp
test
cltd
mov
lret
fldcw
insb
inc
sbb
xlat
stos
xchg
lods
stos
mov
adc
fldt
jns
loop
loop
pop
fwait
aaa
dec
sub
call
sbb
mov
jae
lret
xchg
test
xor
xchg
fcompl
int
inc
pushf
xor
test
xchg
lret
ret
test
imul
sbb
into
fucomp
int3
js
loope
inc
push
mov
sbbl
mov
xchg
mov
push
inc
sahf
xchg
int3
push
and
cmp
mov
out
or
pop
mov
insb
sarl
les
shlb
test
daa
jge
les
scas
mov
xor
xchg
jo
les
jne
mov
and
fisubl
lahf
or
push
aas
push
add
hlt
fildll
jnp
gs
inc
fnclex
add
xor
sbb
cwtl
pusha
lea
inc
loopne
pop
icebp
out
jecxz
fdivrl
cmpsb
jge
repnz
inc
jne
mov
xor
fstp
xchg
outsl
pop
lods
clc
push
addr16
and
jne
xor
fistps
test
out
mov
pop
stos
int
popa
in
dec
and
xorb
inc
pop
mov
jge
into
add
lret
dec
sahf
jae
rclb
int
lea
or
push
dec
jo
xlat
mov
imul
xchg
dec
adc
push
jbe
sub
rcll
test
test
insb
mov
lret
fs
shll
icebp
push
orb
ret
sahf
jae
fdivs
dec
xor
sub
pop
out
out
imul
movsb
loop
inc
fs
xlat
or
scas
push
xchg
mov
pop
adc
sub
fadds
js
gs
xchg
xor
xor
xor
mov
xor
repz
aaa
cmp
je
xor
jl
test
jne
nop
and
jp
xchg
push
scas
call
inc
xchg
loope
int
pusha
scas
jg
out
push
cmp
enter
int3
js
mov
dec
xchg
test
inc
mov
das
or
lret
lods
lcall
insb
mov
mov
xchg
out
cmpsl
cwtl
jecxz
xor
in
sub
mov
shl
push
movsb
cmpsb
xchg
lea
add
and
xor
inc
xchg
mov
pop
jo
push
adc
adc
daa
lret
push
xor
ds
popa
imul
testb
mov
dec
data16
shll
dec
mov
sbb
scas
hlt
inc
rcl
or
andb
ja
clc
xchg
sbb
cmp
int3
xor
sbb
jmp
add
inc
adc
mov
jnp
andb
jg
enter
xlat
enter
test
mov
fisubs
jl
jb
pop
int3
test
xor
jmp
push
mov
repz
fstps
int
pop
fsts
aam
sbb
mov
cs
sub
std
xorl
mov
int3
aas
mov
inc
shlb
push
call
ljmp
jbe
lods
mov
int
dec
aaa
add
ja
inc
test
test
pop
mov
lea
mov
sbb
mov
sub
jl
cmovno
jg
xchg
cmp
xchg
sub
add
scas
push
mov
outsb
sbbl
scas
test
sarb
jmp
popa
sbb
flds
rclb
xchg
in
cld
orl
push
clc
jo
jge
outsb
sar
test
scas
ljmp
enter
jmp
out
mov
pop
mov
jno
sub
rclb
nop
pop
fisubrl
xchg
jl
fnstsw
xor
fiadds
cmp
adc
xor
adc
adc
int
lods
orb
dec
or
in
test
pop
je
mov
mov
sub
push
xor
mov
xchg
adc
xchg
xchg
xchg
xor
fs
in
int3
movsb
mov
bound
add
int3
mov
add
xchg
xchg
mov
iret
sub
lcall
mov
push
scas
inc
push
jl
mov
jmp
iret
test
add
lret
popf
or
adc
cmpsl
daa
xchg
repz
adc
outsb
pop
jnp,pt
insb
mov
pusha
bound
roll
inc
dec
xchg
scas
testl
mov
repz
stc
rorb
xchg
arpl
push
adc
jae
push
add
lret
pop
sti
pop
inc
cld
pusha
lahf
sub
inc
xor
mov
jne
movsl
jl
and
xchg
mov
inc
and
jl
hlt
iret
out
xchg
dec
and
setnp
push
jle
jp
test
pushf
cmp
and
fidivl
xchg
pusha
incb
rorl
icebp
into
enter
mov
pop
or
orb
icebp
mov
push
lahf
cmpsb
fs
pand
repz
fadds
cmpsb
popf
and
jle
mov
mov
adc
jmp
add
mov
push
sbb
mov
rorl
cmp
mov
mov
loope
sub
insb
or
lods
inc
and
xor
pop
sub
shll
jp
xchg
dec
and
fistpll
lret
outsl
jno
pusha
mov
adc
inc
gs
ljmp
mov
stos
xorb
pop
push
mov
jg
lcall
addb
or
cmp
sahf
pusha
movsb
add
push
cmp
dec
mov
fwait
add
xchg
fisttpl
adcb
sub
imul
push
lds
rcl
jecxz
mov
adc
imul
inc
test
cli
lahf
sti
out
andl
test
test
cmpsb
outsb
arpl
xchg
adc
adc
inc
sub
dec
out
sub
push
inc
out
pusha
mov
lods
movsl
mov
stos
adc
in
icebp
fwait
or
cmpb
clc
sub
sub
inc
test
fisttps
pushf
and
cmp
mov
fsubrl
popa
and
mov
repnz
lcall
mov
cwtl
lret
aam
popf
clc
test
jns
testb
xchg
dec
scas
out
sti
loop
mov
cli
mov
jl
jmp
int
jle
ret
mov
dec
xor
push
mov
lcall
popa
mov
pop
jo
popf
into
pop
aaa
push
pop
clc
lds
jns
sbb
push
xchg
jo
jno
jbe
cmp
lahf
enter
dec
outsl
ja
dec
jp
imul
sbb
xchg
inc
dec
mov
adc
push
adc
push
test
aas
aad
js
in
aam
jno
movsb
push
pop
sbbl
cwtl
mul
shrl
pushf
adc
or
mov
negl
jp
jnp
orl
sti
cwtl
lret
sbb
dec
inc
mov
cld
pop
cmp
sub
test
mov
mov
mov
aaa
adc
cli
xor
cmpsb
mov
mov
rcr
sar
xor
adc
xor
leave
shll
pop
xlat
xchg
dec
loopne
repz
iret
test
and
mov
cli
sbb
xchg
pop
mov
out
xchg
xchg
add
je
mov
fstpt
mov
xchg
mov
rclb
scas
cs
outsb
out
adc
lahf
push
and
xchg
cmp
add
mov
stos
jmp
cwtl
xor
or
add
addr16
sub
cmp
ret
xor
xor
sahf
xchg
cs
inc
scas
rol
add
jl
roll
pop
add
or
adc
sub
aam
sub
mov
sbb
mov
inc
jge
and
cli
in
cmp
xchg
repz
movsb
sub
mov
je
xchg
and
add
sbb
sbb
in
push
in
xchg
pop
ficomps
mov
hlt
mov
inc
mov
daa
jb
adc
add
xchg
cltd
shlb
lock
sbb
xchg
imul
push
in
sub
pop
notb
push
lock
push
jle
sbb
xchg
xchg
adc
int3
push
add
xchg
icebp
jle
cmpsb
cmpsl
pushf
call
dec
mov
cmpsb
pop
popf
je
and
xchg
mov
pushw
sbb
icebp
pop
sbb
sbb
adc
cmpb
insl
cltd
jno
adc
inc
pop
test
mov
ljmp
arpl
xchg
rcrl
xchg
shll
cmpsl
ret
mov
cmp
add
mov
jge
xchg
aam
fistpll
mov
xchg
xchg
out
call
or
popa
sub
sahf
xchg
int
enter
ficoms
push
testb
jbe
add
sahf
sub
sahf
out
insl
mov
out
rcrb
sbb
push
or
rol
arpl
loope
lods
popa
sub
inc
fcompl
jl
cmc
popf
sbb
add
dec
xchg
pop
mov
jmp
sbb
add
push
mov
mov
mov
divl
or
jno
mov
and
fimuls
and
dec
in
test
movsl
adc
jnp
stc
loope
dec
pop
fnstenv
mov
mov
test
fldenv
dec
pop
leave
dec
xchg
inc
enter
mov
add
out
mov
mov
inc
sub
lods
adc
ficoms
mov
jg
push
insl
outsl
mov
mov
pop
push
dec
jne
jns
pop
dec
jbe
push
lds
jnp
jb
imul
cmpsb
rcrb
aaa
jne
leave
mul
stos
pop
popl
sahf
adc
pop
push
mov
sbb
xorb
adc
cli
shrb
ret
sbb
xchg
scas
cs
ret
mov
cmp
xchg
push
pop
and
push
imul
xor
int3
enter
repnz
mov
dec
push
or
shrl
mov
cmp
push
mov
mov
mov
sbb
bound
in
scas
push
divl
in
fsts
push
cli
sub
jne
mov
dec
cmp
cltd
in
lret
push
dec
sbb
and
ja
dec
mov
mov
mov
pop
inc
imul
imul
push
ds
adc
loop
jg
xor
or
flds
roll
std
ljmp
arpl
fisubrl
mov
sahf
out
adcb
xor
in
lock
or
pop
or
inc
sti
loop
jbe
bound
adc
subl
push
std
cmpsl
jl
test
sub
js
enter
das
xor
mov
ja
mov
stos
and
push
pop
loop
mov
loopne
xchg
aad
inc
lea
cmp
dec
cld
lcall
enter
enter
rol
ficoms
cmc
jg
cli
call
ja
out
leave
seta
mov
ljmp
insl
jl
mov
sub
scas
iret
int3
loope
ljmp
cs
sbb
ja
jmp
dec
sub
int3
pushf
in
lock
cmp
fmul
jle
jbe
cmp
or
mov
fidivrl
aas
sub
dec
imul
push
call
sbb
push
mov
daa
ficoms
imul
lea
pop
jge
popf
push
mov
movsl
add
adc
mov
mov
andb
jb
pop
push
xor
lcall
lret
aaa
jae
cmp
dec
fs
jae
xchg
in
test
push
mov
es
rorl
ror
push
push
lods
pushf
lcall
cltd
loopne
xor
jge
shl
leave
mov
jp
cmp
movsb
pop
rorb
xor
adc
ret
push
add
je
xchg
leave
movsl
inc
xchg
sub
and
mov
es
jns
add
cwtl
mov
shrl
mov
in
outsl
les
adc
cmp
cmpsl
xor
lret
sti
into
shl
mov
test
pop
jne
daa
xchg
nop
sub
mov
inc
xchg
jo
add
adc
test
pop
cli
cmpsb
loop
aad
xor
or
stos
in
out
fdivr
pop
xchg
cli
mov
sbb
xchg
push
pop
cld
push
cltd
push
jns
stos
adc
inc
jno
cmpsl
out
test
jl
push
inc
rorl
push
pop
adc
sub
jnp
or
jl
xchg
verr
outsl
movsl
jl
fldln2
cld
mov
mov
adc
adc
mov
into
out
subl
jle
repz
xchg
sarl
pop
mov
cmovne
shl
popf
fnsave
inc
lock
or
dec
dec
in
pusha
mov
in
je
frstpm(287
xchg
ficoms
cmpsl
jp
fidivs
pop
jmp
fstps
dec
repnz
call
adc
test
cmp
rcrl
dec
push
add
repz
inc
aam
pop
jl
cmpsb
sbb
fimuls
rorb
xorl
pop
cld
pusha
pop
mov
mov
push
cmp
and
icebp
js
inc
stos
add
inc
andb
fnstsw
xchg
pavgb
mov
inc
mov
fdiv
push
cs
adc
lahf
push
pop
jecxz
inc
mov
rorb
movsb
jb
fstp
loop
push
pop
mov
test
push
push
ret
sub
sbb
jle
mov
cwtl
jno
push
cmp
jp
sbb
adc
pushf
xor
lret
fcoms
cwtl
jmp
cmp
cmp
nop
jns
js
cltd
cmp
int3
adc
xchg
fistpl
addr16
inc
mov
mov
jmp
push
inc
jno
aad
jge
std
push
imul
fstpt
xchg
pop
mov
sahf
mov
pop
rorl
nop
and
cmp
decb
imull
cmp
sbb
dec
nop
pushf
movsb
pop
inc
mov
ss
fisttpl
daa
cwtl
andl
jb
adc
lret
cli
pop
lahf
lahf
xor
fwait
mov
mov
aad
fists
pusha
ret
fnclex
cmp
mov
xchg
lret
push
fsts
sub
call
insb
cltd
cli
inc
jo
sub
jo
loop
or
hlt
mov
das
gs
int3
cmp
test
sbb
ljmp
fisttpll
imul
faddl
pop
test
jecxz
dec
rclb
out
adc
popa
dec
test
test
jg
shr
inc
enter
sbb
push
mov
dec
faddl
fiaddl
popf
les
mov
mov
mov
test
add
jne
mov
mov
push
adc
into
int3
xor
aas
lret
cmp
inc
insl
mov
push
sbb
push
cld
xor
push
subb
je
jecxz
inc
lret
xchg
mov
int
ja
loope
mov
andl
clc
dec
sarl
sti
mov
movsb
mov
hlt
cmpb
je
call
call
inc
sbb
cwtl
jle
add
mov
cmc
fwait
xchg
push
fucomi
imul
jmp
add
std
shrb
xchg
in
adc
sbb
mov
aad
mov
mov
lods
mov
ret
sbb
mov
jbe
inc
loopne
push
aad
and
dec
and
adc
jmp
sub
cmpsl
dec
mov
dec
lret
ret
call
jne
push
cmc
or
mov
or
mov
imul
in
vpslld
sahf
inc
cli
mov
jbe
mov
outsb
adcb
jg
dec
mov
mov
je
push
add
jo
ret
outsb
dec
or
jmp
ret
jmp
xor
pop
sub
mov
cmpsl
jbe
mov
test
addb
jbe
mov
inc
push
fwait
aaa
in
in
ja
push
mov
pop
push
fisttpll
addr16
mov
or
dec
pop
pop
xchg
enter
into
mov
push
mov
stc
cli
mov
out
lods
and
test
push
add
test
push
decb
xchg
push
rorl
pop
andl
insb
xchg
inc
and
jae
mov
xchg
in
mov
lock
pop
xor
decb
js
lods
sbb
outsb
fnsetpm(287
adc
xchg
jge
bound
cwtl
adc
sti
xor
fistps
fcmovne
sbb
adc
hlt
and
adc
ljmp
leave
arpl
stc
addr16
aad
ss
dec
push
jg
sbb
jmp
mov
ljmp
out
inc
sbb
scas
mov
ds
daa
sub
fistpl
popa
hlt
push
fwait
out
bound
loopne
xchg
sbb
hlt
push
or
cld
xor
lcall
pushl
ficompl
daa
mov
sub
push
es
decb
add
inc
stos
mov
pop
or
sub
sub
stos
hlt
int
repnz
lret
imull
sub
cli
jns
and
sbb
pop
fdivrs
hlt
outsl
dec
dec
insl
ds
aam
movsl
pop
cmpsb
dec
xor
jno
hlt
hlt
dec
ret
ljmp
or
mov
fcmove
xchg
movl
xor
or
movsb
push
xchg
jno
cmp
sbb
inc
test
jg
repz
lods
xor
lahf
add
sti
and
loope
cli
dec
inc
push
sahf
stos
xchg
leave
icebp
mov
negl
stc
xchg
cwtl
sbb
jae
jle
in
mov
push
sar
mov
cld
sub
inc
dec
or
adc
mov
in
xchg
loop
ss
pushf
push
and
mov
mov
ret
outsl
adc
stc
mov
mov
es
mov
outsl
stc
lret
or
sbb
lahf
mov
lret
dec
lret
and
stos
std
pop
adc
stc
adc
test
sub
jle
testb
hlt
cmpsl
xor
inc
ret
scas
test
rcll
mov
hlt
movsl
add
stos
xor
ret
fistpl
and
dec
mov
insb
out
es
sbb
and
movl
negl
sbb
subb
insb
cmp
in
cmp
loop
mov
ljmp
popf
jbe
add
adc
std
cmp
mov
mov
sbbl
or
push
mov
clc
add
test
pusha
sahf
jle
fcmove
add
mov
fistpl
push
stc
sti
fistpll
inc
mov
or
loope
sbb
loop
inc
inc
xchg
xchg
in
jecxz
js
xchg
inc
pop
int
aad
sbb
xchg
stos
jmp
xchg
adc
jnp
pop
pop
repnz
dec
and
popf
dec
push
cs
sub
loop
pop
pop
mov
imull
cmp
inc
je
rcll
dec
ret
inc
stos
cwtl
shr
sub
je
popf
sbb
mov
clc
addr16
pop
call
inc
or
shrb
inc
imul
dec
xor
scas
xchg
test
or
int3
ss
enter
jb
sub
jne
stos
adc
bound
push
cmp
jbe
add
adc
adc
repz
dec
je
jnp
hlt
adc
jle
stos
dec
pusha
int3
mov
pop
outsl
and
inc
into
adc
sbb
xlat
fadd
das
mov
ret
stos
or
inc
jbe
jne
stos
and
mov
cli
mov
fwait
xor
inc
mov
xor
imull
call
sbb
add
xchg
jp
outsb
xchg
or
push
inc
sub
and
cmp
ror
pop
in
loop
sub
mov
fcoml
lret
mov
adc
jmp
and
xchg
pop
push
fisubrs
daa
cmp
dec
sub
pop
mov
mov
cmpsl
or
cld
sub
and
dec
hlt
jne
movsb
xchg
jb
xor
dec
loope
fcomip
mov
jae
aas
shlb
inc
sbb
pop
pop
xchg
clc
push
repnz
sbb
test
sbb
clc
mov
adc
mov
enter
mov
je
fcoms
pop
add
jne
bound
push
dec
jns
call
adc
fstpt
mov
cmp
xchg
pop
mov
jnp
lock
icebp
dec
mov
fdiv
cmp
cltd
lahf
fwait
mov
inc
push
stos
lcall
insl
cli
adc
mov
mov
mov
push
add
xor
fwait
iret
in
pushf
shlb
cmpb
cmp
fistpll
lret
out
lahf
mov
mov
lods
imul
add
fcmove
fstps
jmp
mov
mov
int3
adc
mov
add
mov
pop
test
into
leave
push
cld
imul
lret
fisttpl
sub
mov
mov
add
xchg
mov
jmp
sub
dec
mov
jne
test
pop
cmpsb
in
push
loop
xchg
fs
push
cmp
lods
std
dec
mov
mov
lret
mov
icebp
dec
in
enter
int3
shlb
mov
loopne
cmp
rcll
xor
xchg
in
je
in
dec
or
sbb
mov
push
insl
mov
ret
scas
mov
mov
aam
shr
xchg
adc
pushf
pop
bound
or
mov
ret
xor
mov
mov
lds
mov
xor
scas
stos
outsb
jb
cld
dec
fstp
shl
pcmpeqb
or
dec
sub
sub
dec
jmp
xchg
sti
cmp
addr16
fidivl
dec
mov
movsl
mov
loopne
mov
mov
imulb
out
mov
mov
mov
idiv
iret
sub
xchg
jecxz
pop
mov
push
in
imul
ds
mov
dec
outsl
mov
outsb
xchg
ret
cwtl
out
test
or
fcoml
mov
and
mov
mov
jp
mov
pop
shlb
pop
xor
out
bound
lods
jae
pop
loope
stc
lds
push
scas
inc
iret
aas
cwtl
aad
lret
adc
int3
iret
cs
sub
mov
lods
or
sub
xchg
movsb
faddl
sbb
mov
lahf
fwait
or
popa
int3
jne
lock
pop
xchg
mov
xchg
cmp
xchg
pop
adc
cmp
leave
fmulp
in
rcl
mov
scas
mov
pop
ss
das
shrb
lret
mov
movsl
xchg
clc
dec
push
and
mov
roll
mov
fimull
cmp
in
int
dec
pop
pop
jno
mov
shl
cmpsb
xor
lcall
xor
jle
or
out
call
dec
and
xlat
sbb
xchg
pop
dec
js
mov
pusha
sbbl
cmpsl
or
and
lods
xor
inc
mov
jp
fwait
mov
pusha
fstpt
pop
data16
bound
in
sbb
out
mov
mov
sub
cmpsb
repnz
inc
cld
sarb
and
ljmp
neg
lods
mov
popf
cmpsl
outsb
xchg
xchg
int3
push
pop
cwtl
rcll
sub
mov
or
in
mov
jge
lcall
dec
sbb
rcll
xor
cmpsl
decb
mov
movsl
in
mov
std
adc
gs
and
push
cmc
sbb
sahf
adc
sbb
fwait
lock
lret
in
iret
mov
mov
pop
lahf
mov
in
shrl
cltd
in
jecxz
and
dec
inc
jbe
mov
mov
cmp
jno
ljmp
jae
cmp
ljmp
test
xchg
mov
aad
aas
movsl
nop/reserved
movsl
sub
sbb
icebp
lcall
and
rorl
dec
fwait
pop
fistpll
jmp
mov
jmp
lahf
enter
inc
clc
fsts
test
shrl
dec
cli
push
fs
mov
std
sti
jge
popf
lcall
jge
or
imul
add
mov
mov
stos
dec
dec
xlat
fcmovnu
xchg
int3
lret
push
push
xchg
lret
aad
jl
sbb
fadds
cld
jl
rorl
insb
lods
dec
movsl
mov
ret
dec
dec
loope
ret
mov
rorl
loop
xchg
mov
inc
jmp
daa
inc
sub
inc
adc
ljmp
mov
testb
jb
and
loope
stc
in
mulb
ret
mov
mov
inc
cwtl
jmp
sbb
aad
cmpsb
in
xorb
mov
daa
push
movsl
mov
loop
lods
mov
sbb
inc
lahf
fisubrl
xor
mov
in
add
lret
jae
sarl
lea
insl
xor
rcll
xor
rclb
das
aaa
hlt
push
lret
xor
and
sar
jg
loope
bound
clc
call
in
or
aaa
and
cmpsl
aam
push
out
addb
loopne
repz
jno
data16
fsubrs
stos
cmp
in
dec
movsl
mov
add
mov
pop
ljmp
addr16
loop
push
test
add
xchg
add
xchg
fwait
or
sub
inc
xor
cli
fistpl
data16
addr16
lcall
xor
sub
aas
cmp
inc
div
imul
pushf
out
imul
ljmp
add
insb
sbb
cmp
jnp
shll
mov
popa
xchg
out
mov
inc
sub
add
out
clc
lahf
lret
push
mov
sub
ljmp
pop
xchg
in
inc
out
inc
ret
xchg
cmc
subl
out
lock
and
shll
mov
jno
mov
pop
loopne
ficomps
in
jne
mov
arpl
push
sub
and
mov
fs
mov
xor
dec
sbb
xchg
ja
jecxz
mov
lods
sub
xor
scas
push
xchg
faddl
xchg
mov
test
rorb
pop
mov
std
mov
movsb
ja
jo
pop
and
fnstenv
outsl
dec
repnz
nop
cmp
or
decb
lods
adc
je
in
and
rcr
jno
xchg
dec
inc
in
adc
inc
mulb
fcompl
dec
ret
loop
cmp
adc
mov
sbb
std
add
cmp
rcrl
jnp
test
lret
sub
and
scas
push
sub
int
dec
cwtl
arpl
pop
mov
shl
mov
xchg
dec
sbb
add
insb
pop
das
jbe
ljmp
push
mov
xchg
in
jbe
adc
push
and
test
or
cmc
pop
and
out
add
push
jecxz
popa
add
mov
jne
insb
add
cltd
int
and
call
push
gs
dec
sbb
in
outsb
mov
adc
test
rolb
fcompl
int3
testb
subb
and
xor
add
aad
xchg
test
jno
iret
std
addr16
fsubrs
push
test
mov
lock
or
test
sbb
mov
jae
jecxz
push
jecxz
imul
inc
inc
cwtl
xchg
xchg
mov
mov
jecxz
mov
mov
add
sahf
and
arpl
test
enter
add
jns
jae
mov
out
or
xchg
or
mov
jg
insl
gs
dec
lsl
xchg
jae
inc
lret
fwait
orb
bound
jmp
fcmovnbe
addr16
jl
and
sti
sbb
sbb
imul
loop
sub
jne
ja
or
mov
mov
mov
sub
jno
outsl
fimuls
insl
fiaddl
shlb
mov
lahf
jne
dec
sbb
mov
mov
lock
into
mov
ret
sbbb
outsl
cltd
jae
pop
push
in
adc
mov
enter
pop
insb
pop
aam
pusha
mov
or
fisubs
je
outsl
cmc
or
cmp
dec
fdivs
fbld
mov
push
mov
sti
push
pop
scas
es
and
add
push
cmpb
sub
inc
jp
jecxz
jo
test
and
mov
xor
mov
or
cmp
adc
or
fldenv
mov
sub
popf
jmp
and
out
insl
aam
pop
fiadds
icebp
sbb
or
cltd
sbb
xchg
push
push
push
test
pop
orl
push
cmc
jb
mov
arpl
xchg
xchg
pop
outsb
fisttps
mov
or
int3
in
xorl
xchg
rcrl
mov
pushf
xchg
rorb
push
jo
push
sub
lret
mov
sub
std
pop
inc
fldenv
jmp
push
push
fbstp
add
xchg
add
into
scas
or
pusha
repz
lock
mov
ja
sbb
pop
shlb
lret
push
mov
adc
test
inc
arpl
mov
hlt
leave
call
sub
or
daa
sub
mov
lcall
cmp
pusha
into
dec
movsl
das
in
and
push
ljmp
popf
sbb
insl
mov
repnz
push
cmc
test
pushf
dec
dec
popa
jecxz
push
shlb
jp
je
lret
ret
ss
mov
out
push
jbe
inc
add
movsb
sbb
pushf
pop
mov
fstpl
fisubrs
or
and
xlat
pop
js
mov
imul
popa
push
das
fadds
and
mov
scas
cmp
mov
sti
mov
adc
or
push
das
ret
sti
lea
xchg
loopne
push
push
jmp
cmpsb
fildl
arpl
arpl
mov
push
cmpsb
mov
mov
repnz
cmp
ja
push
test
mov
nop
jb
clc
xor
and
ret
aas
shrl
xchg
hlt
push
push
sti
and
cmp
cld
mov
stos
imul
subb
repnz
loope
stos
xchg
adc
push
cmp
insl
sti
fldcw
outsb
outsl
jge
jae
add
cmp
push
cli
add
hlt
jle
lds
sub
pop
jbe
mov
cmpsb
mov
xor
test
adc
dec
repnz
nop
fisubrl
push
clc
sbb
in
fidivs
leave
inc
xchg
jno
xchg
ret
jecxz
mov
ss
fmul
dec
jns
imul
sbb
insb
push
icebp
stos
and
and
jecxz
sahf
les
or
push
and
add
inc
jbe
cli
jns
ljmp
scas
outsl
mov
dec
movb
cmpb
jecxz
fs
rorl
sti
lods
push
test
inc
cmpb
lret
test
or
insb
test
push
jno
mov
sub
roll
cmp
sub
mov
enter
pop
xor
popf
mov
imul
push
pop
dec
test
ja
mov
adc
pop
test
and
loop
test
mov
hlt
push
scas
test
inc
bsf
fsts
pop
or
adc
lods
nop
xchg
pop
push
mov
push
outsl
dec
aaa
cmp
jno
loopne
add
cli
cmp
ret
dec
iret
stos
sbb
push
imul
jge
mov
and
push
stos
sub
cmp
push
xor
fisubs
and
es
ret
lret
cmp
adc
xorl
xor
push
xchg
cli
xor
inc
lods
push
lock
and
mov
push
pop
nop
mov
sub
cltd
and
rcr
mov
out
xlat
xchg
stc
mov
adc
push
push
sub
fisubs
fisubs
jbe
movsb
mov
add
push
sbb
loope
or
aas
and
les
stos
dec
ficomps
adc
cmp
inc
add
stos
cmp
cmpsb
cmpsb
loop
jns
mov
cwtl
xchg
hlt
mov
insb
inc
xor
shl
jns
mov
sbb
mov
imull
ret
lcall
leave
sbb
push
push
and
iret
dec
cmp
dec
cmp
mov
dec
jle
and
imul
inc
repz
inc
xchg
adc
push
dec
out
clts
adc
outsl
fnstcw
mov
dec
push
cmp
inc
ja
pop
mov
mov
adc
fadds
adc
sbb
xorb
pushf
mov
xor
in
je
xchg
xchg
push
mov
cmp
stos
int3
or
mov
rcrb
loop
xchg
jo,pt
fists
je
xchg
dec
xor
pop
sbb
mov
lods
and
je
pushf
movups
inc
je
lea
in
mov
mov
cltd
scas
adcl
and
add
push
mov
sub
movsl
movsb
iret
mov
scas
pop
dec
mov
xor
adc
lods
dec
xor
scas
sub
dec
mov
fcomip
sbb
pop
pop
cli
out
sub
xchg
xchg
cmp
dec
dec
lret
and
xchg
adc
into
and
adcb
mov
inc
mulb
mov
jg
test
orl
mov
xor
inc
mov
sahf
scas
cltd
movsl
mov
pop
outsl
stc
lret
lods
push
mov
lahf
scas
cmp
clc
and
hlt
nop
divl
leave
mov
push
jle
scas
movsb
pop
dec
inc
push
or
sub
imul
movsb
mov
jb
aaa
mov
mov
fstpt
dec
mov
scas
dec
inc
int
aad
mov
jle
and
xchg
mov
mov
aas
pop
nop
adc
mov
mov
lret
push
sbb
adc
mov
push
xor
out
add
stos
ja
push
mov
shll
cmc
ret
jb
ret
daa
mov
loope
xor
sysexit
xchg
inc
xlat
xchg
sahf
cmp
mov
subl
inc
add
xchg
sarb
xor
pushf
xchg
call
pop
pop
cmp
fcoml
leave
stc
aas
out
lods
pop
cwtl
js
ds
outsl
sbb
inc
dec
loopne
les
in
fiadds
mov
or
loopne
xchg
pusha
and
inc
xchg
push
lds
inc
xchg
cmp
insl
add
pushf
mov
js
fidivrs
mov
filds
xor
jne
mov
addr16
stos
push
cmp
mov
mov
test
push
cltd
cltd
adc
xchg
rcll
adc
push
das
cmpsl
lret
stos
fs
jg
mov
stos
movsl
or
loopne
push
mov
rclb
in
lret
ret
ja
inc
push
int
das
andl
push
mov
insl
xor
cmp
repnz
dec
and
mov
adc
je
mov
mov
cmpl
or
mov
lret
add
nop
jg
daa
notb
scas
xchg
mov
dec
pusha
mov
cmpsb
sub
cmpsl
das
repnz
daa
divl
add
cmp
test
cmpsl
mov
dec
cmp
adc
mov
es
shl
jns
scas
popf
push
std
xchg
pop
add
into
ss
inc
daa
fwait
xorl
movsb
push
sbb
int
xchg
xchg
add
jnp
or
scas
aaa
movsb
test
push
push
mov
xchg
push
push
lahf
out
sub
and
stos
jo
and
xlat
lahf
lock
test
adc
dec
popf
daa
sahf
test
mov
dec
lahf
mov
inc
xor
orl
popf
mov
out
mov
popf
jb
imul
inc
icebp
dec
test
cmpsl
inc
ret
and
daa
flds
std
cltd
adc
or
repnz
test
aas
shrb
popa
or
notb
test
aaa
dec
mov
sub
mov
imul
push
inc
jecxz
sahf
jae
dec
cltd
popf
fidivrl
add
jbe
mov
fmull
test
lds
stos
push
jo
xlat
jl
cmp
dec
lock
cmp
jle
and
iret
mov
pop
lahf
dec
cs
sub
push
and
push
pop
outsl
push
pop
scas
push
inc
insl
inc
cltd
dec
iret
jne
je
dec
test
add
sub
xchg
cmpsb
or
xchg
cmpsb
gs
sub
jg
xchg
cmpb
cmovns
je
xchg
xor
add
cmp
sbb
jne
clc
or
pop
xor
inc
push
jns
add
xchg
leave
xchg
xor
mov
daa
scas
jbe
ja
xor
push
iret
xchg
cmp
mov
fisttpl
mov
sahf
ror
sahf
lods
xchg
sbb
cmp
sub
into
or
imul
xor
mov
xor
dec
mov
fdivp
push
push
scas
jmp
in
ljmp
pop
nop
ds
jp
test
xchg
dec
push
stos
mov
ja
aas
fistpll
dec
int
jo
stos
pop
fwait
inc
in
dec
inc
scas
setae
loope
mov
and
cltd
add
ror
jae
aaa
jno
mov
jge
ror
mov
mov
sub
mov
pop
adc
dec
or
xchg
scas
jo
ljmp
mov
xchg
jb
pop
ljmp
pop
sbb
dec
push
shlb
ja
shrb
addr16
in
xlat
pop
sub
jns
inc
sub
fs
pop
jae
fbld
clc
cmp
cs
jl
xlat
gs
incb
sbb
sbb
xchg
mov
sbb
roll
jo
sbb
cli
or
mov
mov
cmp
fists
xor
daa
inc
cmpsb
add
jecxz
rcll
xlat
push
cmp
jle
adc
xchg
xchg
outsb
push
fcom
inc
movsb
sar
cmp
xchg
das
push
and
xorb
mov
out
ret
test
inc
xchg
mov
lock
das
xor
fidivl
loope
arpl
mov
xor
inc
iret
les
inc
push
int
loop
pop
adc
imul
out
mov
outsl
sub
fwait
or
aad
or
loop
add
bound
out
and
int3
loop
push
not
mov
lods
dec
jb
mov
imul
rcll
lods
pusha
out
xchg
pusha
fwait
imul
pop
dec
or
mov
dec
mov
xlat
xchg
mov
insl
ret
pop
ret
push
mov
inc
negb
enter
fadds
rcl
dec
fldt
and
xchg
scas
cmpsl
push
lahf
ja
cmpsl
daa
jne
rcrl
cmp
pop
mov
je
xchg
pushf
mov
and
add
and
sub
mov
jns
lods
mov
loopne
mov
mov
xbegin
xor
outsb
lods
pop
jbe
dec
mov
and
lea
aad
nop
leave
dec
fucomp
mov
cmpsb
daa
adc
mov
cmp
xlat
inc
and
int
mov
and
out
mov
push
mov
sarb
mov
and
mov
xchg
std
xchg
jmp
sbb
inc
mov
lds
je
imul
sar
mov
cmp
je
inc
xor
ss
mov
and
fiaddl
mov
pop
xchg
mov
movsb
sahf
dec
jp
cmpsl
jb
out
xchg
jo
movsl
fwait
jbe
inc
dec
fisttpl
cmp
and
and
sbbb
test
add
hlt
jmp
pop
jmp
xchg
or
xor
icebp
add
scas
popa
sbb
lcall
mov
mov
mov
imul
adc
jnp
jp
adc
scas
jns
test
scas
xor
xchg
push
push
mov
divl
sub
xchg
cmpsb
scas
xor
mov
push
pop
int
pop
sbb
fsubs
dec
fstpl
pop
fsts
mov
aam
adc
jle
dec
add
sub
mov
aaa
cmpsl
loopne
js
data16
popa
mov
in
or
xchg
push
xchg
out
sbb
xchg
xchg
xchg
mov
andl
and
js
add
inc
leave
cmp
jno
sub
add
dec
inc
lret
filds
xchg
das
rorl
mov
pop
jge
aas
out
in
inc
cmp
je
xlat
rolb
fidivrs
mov
idiv
lcall
mov
or
lods
aaa
push
mov
xor
mov
mov
or
mov
push
xchg
not
jp
and
fs
iret
ret
test
lret
fdivrs
popa
push
cmpsl
mov
cmp
pop
stos
stc
xchg
or
out
dec
pop
push
or
call
mov
adc
mov
lea
jns
mov
jbe
pop
les
and
cmc
xor
in
inc
sub
inc
shr
ss
testb
aas
cmp
mov
cltd
int
mov
shll
insb
movsl
inc
imul
cmpsl
cmp
cmpsb
xchg
mov
xor
aaa
push
enter
push
inc
lret
mov
ds
lds
sbb
ja
pop
test
lods
or
cmpsl
mov
bound
into
adc
not
ret
daa
mov
jae
movsl
loopne
ljmp
jns
mov
inc
lret
loopne
mov
adc
pop
shr
icebp
mov
mov
lret
mov
ret
mov
jbe
mov
test
xchg
movsl
cmp
mov
lods
mov
sub
lcall
cmp
fstpt
mov
mov
movsl
mov
loopne
ja
mov
sahf
aad
jge
or
cmpsb
pop
mov
ret
sar
jg
jne
inc
insb
movl
scas
sub
stos
dec
jns
hlt
shrl
inc
push
into
lods
and
aas
sub
lds
fcmovu
imul
xchg
rcll
jp
lahf
iret
fdivl
fcmovb
and
cmp
das
pushf
xchg
leave
mov
mov
ljmp
dec
out
pop
jmp
jbe
int
stc
jp
loopne
and
in
add
sub
loopne
or
rcl
push
int
repz
lock
push
dec
loopne
jb
mov
xchg
movsl
out
inc
mov
inc
jno
lahf
out
inc
cli
mov
lods
jle
pop
in
add
test
fs
push
je
call
shlb
loopne
es
cli
mov
xor
test
lcall
add
ljmp
stos
insb
and
out
test
loop
inc
aaa
out
loope
and
loope
or
aam
add
mov
les
rcl
ja
push
mov
cmp
add
repz
sub
dec
lret
jecxz
js
mov
addr16
roll
or
jmp
movsb
cld
mov
and
ds
out
loope
jb
scas
out
pop
mulb
ss
push
jmp
call
add
xor
or
sub
cmpsb
mov
dec
jecxz
or
repnz
jmp
scas
movsl
in
sbb
jnp
xchg
and
jb
adc
in
mov
add
jecxz
dec
outsl
xchg
or
test
dec
jecxz
or
test
js
jmp
out
sub
dec
jmp
jp
dec
jmp
sti
insl
ret
jmp
jp
loope
dec
adc
shlb
repnz
mov
dec
js
jmp
xor
mov
js
jmp
mov
add
mulb
ret
mov
jmp
or
pop
mov
cmp
les
pop
leave
int3
dec
nop
shrl
xchg
shl
jmp
xor
scas
cs
in
les
xchg
in
xor
andl
into
xchg
jbe
sub
shlb
xchg
jp
dec
mov
mov
and
mov
in
inc
mov
xchg
insb
loope
mov
push
dec
xchg
scas
cmpsl
fists
mov
call
rclb
mov
add
inc
lods
mov
push
jge
pop
fcompl
je
out
jge
push
lods
stos
and
shll
sahf
addr16
loopne
xchg
decb
ds
scas
test
push
jge
sbb
andb
bound
cmp
mov
adc
jle
sub
sub
jb
lret
shll
sti
fs
pop
pop
insl
fnstenv
sub
mov
mov
and
rcrl
cmpsl
sub
sub
pop
sub
loope
add
sti
cs
fisubrl
es
push
jns
rorl
addr16
jno
mov
add
cli
xor
inc
mov
xlat
jb
adc
xchg
xor
inc
or
lea
mov
cmp
sbb
adc
adc
cmp
cmp
inc
jg
mov
and
inc
push
insl
jnp
arpl
mov
daa
sub
cmpsl
xchg
call
jmp
inc
push
mov
push
jae,pt
inc
mov
add
jae
stos
ret
stos
filds
push
andl
sub
pop
sahf
ret
sbb
shlb
sar
push
inc
rcrl
rol
ss
mov
jno
scas
adc
pop
dec
mov
pop
in
mov
mov
arpl
push
push
adcb
out
adc
scas
cld
sbb
cmpsl
movsb
and
outsb
das
xchg
mov
mov
mov
int3
dec
aam
push
pop
mov
cwtl
pop
and
mov
jecxz
cli
pop
pop
je
out
pop
mov
cli
inc
out
daa
iret
mov
xor
cmp
sub
fs
mov
cmp
dec
sbb
dec
imul
mov
jg
rorb
mov
push
ss
dec
lea
test
push
fcoml
mov
sbb
nop
lret
or
lret
js
sbb
lret
cmp
pop
inc
adc
movsb
jbe
mov
and
push
mov
movsb
decb
jno
icebp
in
adc
add
out
dec
adc
mov
adc
mov
inc
aas
and
pop
jecxz
mov
jge
mov
push
xor
cmp
movaps
ret
adc
arpl
mov
arpl
jbe
push
out
es
mov
lods
lcall
pusha
arpl
xchg
es
sub
mov
and
in
das
or
cltd
int3
ret
jp
mov
adc
dec
jg
mov
mov
aad
xor
jge
mov
adc
inc
push
movsb
orb
jecxz
repnz
mov
popf
lcall
dec
cmp
mov
add
mov
fistpll
nopl
jp
cltd
shrb
movsl
sbbb
sahf
stos
arpl
xchg
sub
mov
cmp
mov
bnd
neg
in
jbe
sub
movl
mov
add
dec
subl
gs
inc
sub
or
mov
xchg
add
fwait
add
data16
and
pushf
add
cli
dec
data16
shlb
fnsave
sub
fsubrs
adc
ret
and
mov
in
cmpsl
adc
popf
push
pusha
sbb
in
imul
xor
mov
push
inc
add
cmpsb
lea
daa
xorb
push
push
xchg
mov
push
test
cmp
dec
aam
and
sbb
out
ret
lock
and
shll
in
sbb
mov
inc
test
aad
or
inc
mov
movsl
orb
mov
push
and
into
add
push
stos
pop
fwait
loopne
cld
arpl
cmp
push
mov
dec
movsl
mov
and
popf
push
cwtl
sahf
pusha
cli
loope
jmp
call
xchg
pop
sub
adc
dec
lahf
adc
push
movsl
mov
cmp
or
pushf
jae
test
loopne
daa
xchg
push
iret
out
mov
xor
outsb
xlat
or
and
cmp
mov
jmp
inc
pop
mov
ret
dec
jnp
outsb
pop
int
mov
mov
sarb
adc
arpl
xor
sub
xor
sbbl
roll
or
sarb
insl
es
fnsave
dec
outsb
outsl
fildll
insl
mov
jle
cltd
inc
jo
fwait
lods
sbbb
cli
push
fdivs
and
jns
cwtl
clc
sub
pop
fildll
popf
notb
ficompl
fwait
mov
adc
mov
movsl
mov
push
pushf
fidivs
lcall
fsts
sbb
push
dec
mov
adc
adc
les
jne
cmp
push
bound
cmp
flds
pop
aam
adc
mov
mov
sub
shlb
cmpsb
hlt
sbb
inc
sbb
test
mov
daa
mov
xor
ljmp
out
push
sbb
cmpsb
ja
sahf
xchg
xchg
add
ljmp
add
mov
out
fs
jg
shr
and
xchg
iret
sbb
lcall
dec
xchg
push
or
mov
cmpb
push
gs
aaa
mov
mov
adc
add
call
pushf
sbb
adc
mov
aaa
push
mov
lret
cwtl
mov
mov
mov
in
jns
call
stos
into
mov
jns
mov
fildl
repz
mov
aas
jl
fisttps
orb
fimuls
loope
sti
outsb
popf
or
and
pop
int3
sub
mov
addr16
jo
adc
push
aas
jge
adc
sarl
sbb
ja
out
fs
sbb
scas
inc
ja
or
filds
lret
icebp
mov
xchg
jmp
mov
sub
into
jl
mov
push
shr
mov
xchg
mov
add
mov
xor
mov
inc
mov
pusha
mov
dec
aaa
dec
aam
iret
popf
ja
and
in
jg
frstor
xchg
cmp
push
bound
ljmp
lods
outsb
xchg
lahf
dec
pop
hlt
xor
mov
dec
int
xchg
pop
inc
addr16
pushf
stos
mov
arpl
fadds
ret
jns
mov
cmp
pop
movsl
out
gs
pop
inc
arpl
lods
test
iret
mov
cmpsl
stos
cmp
sbb
pop
or
outsb
push
sub
pop
pop
insl
inc
dec
jp
push
outsb
ret
push
xor
xchg
ror
shll
mov
inc
xchg
adc
pop
inc
lcall
pop
fdivrs
and
add
sub
add
cmp
xor
inc
sub
les
movl
pop
mov
cli
cmpsb
or
mov
cli
mov
pop
lret
add
xlat
xchg
jp
in
and
je
call
ljmp
jle
or
scas
jmp
cmp
and
cmp
push
into
xor
adc
iret
inc
and
mov
adc
inc
je
jmp
jnp
jbe
push
mov
xchg
pushf
cmp
sarb
fimuls
push
mov
addl
scas
gs
insl
mov
or
or
and
sub
pop
push
dec
not
xor
adc
lds
mov
cmp
jle
push
xchg
outsb
or
es
jo
js
jnp
push
cmpsb
fnstcw
lahf
cmc
mov
fdivrp
leave
pop
movsb
cmp
jecxz
push
movsb
cs
ret
mov
dec
add
cmpl
mov
sbb
test
movsl
mov
cmp
aas
or
popa
adc
push
inc
or
add
ret
or
mov
mov
mov
mov
pop
mov
sbbb
movsb
aad
cmp
mov
mov
cwtl
cwtl
dec
xchg
mov
out
inc
mov
lods
jne
stos
shlb
add
ficoml
dec
adc
push
xor
push
mov
push
cmc
xor
ret
outsb
fcompl
lods
xor
inc
clc
mov
inc
out
fs
jl
pop
or
pusha
push
mov
fmuls
fscale
and
cmp
dec
inc
xchg
cmp
sbb
adc
ds
push
shlb
and
int3
add
jl
lcall
lock
jecxz
sbb
sub
dec
lea
fst
roll
das
ret
pop
jmp
scas
jnp
xor
mov
test
xchg
into
int
jp
inc
imul
cmp
aam
loopnew
mov
fdivr
ret
pop
scas
pop
popl
xor
sbb
inc
jp
and
xchg
rcll
inc
mov
subl
out
jns
sbb
cmpsl
inc
jp
cmp
js
mov
cmp
lret
push
aas
mov
cmp
push
cmpsb
cwtl
adc
sub
sarb
filds
add
pop
pop
dec
out
jns
mov
xchg
sbb
push
pushf
fsubs
cmpsw
mov
sub
mov
cli
dec
mov
jge
inc
cmpsl
std
pop
imul
aaa
jmp
cmpsb
mov
push
mov
jbe
mov
jl
inc
js
mov
call
mov
cmpsl
pop
cmp
mov
in
sahf
fwait
sbb
ret
mov
les
or
or
and
loope
movsb
push
loop
sub
jns
mov
jne
mov
add
fldcw
xchg
push
xchg
mov
inc
pusha
xor
out
push
jge
movsb
add
cmpsb
inc
lret
aad
das
enter
aad
in
stc
inc
out
jp
arpl
push
dec
push
cmp
outsl
fcomps
bnd
push
clc
stos
in
mov
repz
jecxz
push
enter
fstl
adc
jl
mov
xor
push
adc
lret
pusha
jbe
dec
dec
and
sbb
ret
or
push
jp
pop
insl
push
push
ds
enter
sub
test
jb
std
aad
xchg
es
adc
xchg
in
mov
lock
xor
mov
adc
push
jp
and
push
sub
sub
sub
test
jb
std
xlat
gs
ds
push
clc
mov
mov
repz
or
mov
test
imul
sbb
and
lods
das
int
andb
imul
test
into
gs
and
repnz
jns
ret
hlt
in
fstl
adc
pop
jl
mov
insb
xchg
iret
sbb
push
cmp
dec
mov
imulb
xchg
jbe
cmp
test
cmp
scas
mov
mov
dec
imul
in
xcrypt-cbc
cmpsl
xchg
ret
add
cmp
mov
mov
inc
cli
add
mov
pop
aam
daa
add
mov
daa
movsl
fisubrl
lret
das
sti
mov
imul
mov
dec
cmpsb
repnz
jb
xchg
enter
movsb
jl
jge
xor
and
push
stos
aad
xchg
je
xchg
mov
fisubl
xor
push
jb
mov
enter
xchg
mov
jo
jne
sub
sub
fisubs
lcall
pop
enter
push
fidivs
cwtl
mov
in
aad
fstpt
jb
out
out
int
mov
lcall
test
in
pop
mov
lret
out
inc
xchg
add
xchg
inc
scas
and
and
int3
sub
addr16
outsl
jae
mov
enter
xchg
xchg
inc
xor
scas
scas
sub
xchg
mov
shll
and
popf
sub
dec
sub
out
lea
ja
mov
xor
fistpll
or
rorb
cmp
cmpsb
cmpsl
inc
jmp
andb
dec
or
scas
jecxz
dec
xor
cmp
into
ret
jnp
push
add
push
push
cli
loope
cmp
mov
pop
aaa
mov
imul
jp
sti
dec
push
jb
xchg
out
imul
pop
dec
mov
and
mov
fisubs
into
cmp
scas
idivb
push
jp
icebp
clc
or
mov
sub
shll
jp
arpl
xchg
shlb
lea
mov
gs
jmp
dec
xchg
and
mov
cmp
scas
out
ja
push
jne
cmc
clc
push
push
in
loop,pt
enter
imul
push
jae
and
rcrl
into
push
cmp
jae
and
mov
dec
jae
xor
rol
inc
dec
into
jae
and
cmpsb
ja
stos
je
leave
jecxz
loop
enter
imul
leave
sti
inc
jp
into
cmp
mov
jnp
push
sti
mov
xor
xor
repz
and
ret
cli
imul
int3
bound
adc
icebp
scas
or
sub
mov
push
jne
and
cs
adcb
dec
out
mov
mull
push
mov
invd
sahf
stos
pop
nop
mov
das
inc
mov
ficoms
mov
into
ljmp
jmp
and
cmpsl
arpl
adc
adc
xchg
jp
adc
icebp
clc
or
mov
and
mov
inc
rorl
jae
and
pop
jno
mov
into
cmpb
jnp
push
dec
scas
fiadds
into
lock
and
cli
sarb
sbb
add
xchg
dec
jae,pt
and
cmpsb
mov
mov
dec
cmp
scas
bound
mov
stos
adc
stos
cli
xor
into
push
sub
repnz
or
mov
popa
loope
ds
jnp
push
leave
scas
and
mov
shll
data16
push
cli
jno
mov
mov
fidivs
xor
test
dec
out
ja
push
jae
and
or
fnsave
imul
movsb
out
cmp
mov
cmpsl
sub
mov
mov
neg
xchg
adcl
daa
mov
xchg
cmp
adc
je
lcall
movsb
movsl
test
jno
ljmp
loop
inc
pusha
test
add
lret
inc
jbe
mov
movsb
lret
sbb
dec
add
out
les
cltd
dec
ret
je
cmpsl
xor
push
jns
pop
sti
inc
mov
in
hlt
cmp
ret
repnz
and
jmp
jg
lret
sub
out
lret
fcmovnb
scas
sub
sub
jmp
jg
outsb
imul
sub
jecxz
or
jbe
pop
in
fldt
pop
sbb
jecxz
or
cltd
addr16
sub
push
outsl
cli
push
sbb
xchg
jb
out
outsl
loopne
xchg
aam
pop
rcrl
sub
sbb
dec
jb
out
xor
sbb
and
jns
dec
stc
pop
les
stos
jnp
rcrl
das
into
aam
xor
push
xor
jecxz
and
lret
inc
jg
out
pmullw
loopne
inc
add
out
les
cltd
pop
test
mov
push
popf
jnp
insl
push
lock
pop
int3
les
lret
push
push
imul
stos
cmp
out
les
mov
xor
push
gs
mov
pop
popf
repz
arpl
xchg
pop
mov
loopne
sbb
mov
fcoml
arpl
jmp
push
add
addr16
je
fcoms
pop
lret
push
dec
out
arpl
xor
loop
mov
aam
aaa
jg
and
iret
into
lea
ss
lcall
mov
repz
aaa
inc
cld
and
inc
push
roll
xor
cmc
pop
fildl
call
xchg
pop
xorl
fists
stos
call
addl
sbb
xchg
movsl
jne
and
mov
adc
xchg
push
lret
jae
push
sub
dec
or
cmp
pusha
orb
push
ds
test
sahf
int3
xchg
lahf
lods
orb
xchg
add
nop
cs
sub
adc
and
push
fisttpl
or
pop
or
rcrb
ret
rcr
inc
repz
iret
mov
repz
loop
sbb
inc
mov
jg
loop
mov
or
xchg
push
aas
outsb
cmp
aaa
stc
sarl
pop
or
aad
loop
ret
jae
jo
daa
test
inc
adc
cmp
sub
je
adc
fimull
push
cs
add
loopne
push
mov
inc
sahf
mov
inc
fistl
cmp
out
jnp
outsb
fstpt
or
shl
data16
jp
sti
bound
push
lcall
adc
lret
dec
jbe
fistpl
mov
push
or
inc
sub
stos
int
inc
test
mov
pop
outsl
pop
and
div
adc
mov
imul
fidivrs
adc
jae
push
jge
sub
sub
outsb
movl
popf
push
and
scas
xor
mov
sbb
lahf
repz
cmp
ljmp
cwtl
subl
inc
cld
pop
jmp
inc
add
adc
loope
mov
int
ret
xchg
addb
dec
xor
mov
stos
pop
mov
lcall
sub
dec
sub
inc
jg
sub
popl
adc
js
std
scas
outsl
cmp
iret
dec
outsb
dec
movsl
mov
adc
loope
pop
xchg
sbb
sbb
mov
xchg
stos
inc
fisubl
sub
inc
ja
or
lahf
lods
adc
lock
mov
mov
test
stos
inc
push
mov
mov
mov
pop
push
mov
mov
imul
push
mov
cmp
pushf
insl
or
pop
je
cmpl
cmp
scas
lret
xor
test
addr16
imul
mov
push
lds
out
mov
nop
xlat
cld
es
push
pop
test
cs
add
fnstcw
or
and
loopne
inc
dec
jb
fwait
xor
pop
mov
pushf
xchg
push
ja
repz
lds
pop
popf
mov
and
inc
and
cli
add
xchg
mov
push
xchg
cmp
hlt
sbb
loopne
inc
jnp
rolb
pop
shrl
mov
push
mov
dec
xchg
sub
movsb
and
xor
mov
mov
lods
pop
inc
jmp
adc
mov
jo
out
dec
scas
out
pop
pop
dec
adc
sbbb
push
xlat
int
mov
jne
or
out
push
pushf
lret
jae
fsubrs
pop
in
dec
push
lcall
xlat
ss
insl
decl
xchg
loope
ret
lods
js
in
jnp
push
divl
ljmp
nop
js
xlat
out
pop
mov
inc
scas
xchg
ret
dec
push
mov
cmpb
inc
pop
mov
jmp
int3
sbb
aas
ja
xchg
cwtl
enter
mov
and
movsl
push
xchg
cmp
iret
sub
ret
xchg
xchg
cli
test
cmc
adc
fidivrl
pop
scas
clc
mov
stos
out
divl
repnz
fs
pop
and
dec
iret
jno
out
cmp
mov
dec
shll
fisubs
lret
pop
outsb
pop
fcmove
addr16
int
dec
faddl
jno
jne
pop
xchg
mov
inc
xchg
fadds
das
pop
xor
push
xor
push
push
jno,pn
sub
fsubrl
dec
test
es
arpl
jne
ret
inc
rclb
jbe
daa
pop
scas
add
pushf
sub
ret
cmp
lods
sbb
xlat
sub
cld
jge
movsb
into
inc
test
fistps
xor
xor
daa
sarl
jl
sarb
lods
insl
mov
or
xchg
iret
fisubrl
push
daa
ss
stos
push
movsb
mov
iret
pop
or
test
out
xor
andl
fs
sub
lcall
test
xchg
pop
or
push
scas
dec
pop
sarl
inc
ja
pop
sub
push
push
sub
sbb
pop
xor
out
shlb
cmpsl
js
mov
cmp
paddq
sub
inc
ficoms
les
pop
sbb
add
hlt
insb
rcll
mov
jns
fnstenv
popl
loope
std
or
sub
xchg
xchg
daa
lret
jnp
jg
insl
add
cwtl
push
mov
lea
jl
mov
cmc
ja
or
xor
cmp
cmpsl
mov
cmp
inc
inc
lahf
int3
dec
cmp
cltd
adc
mov
adc
inc
fcmovnbe
js
mov
js
inc
xchg
mov
test
jns
shl
pop
jle
fsubrl
imul
add
xchg
mov
xlat
fisubrs
adc
sti
repz
iret
sub
push
pop
push
xor
in
lds
shlb
cmp
out
xchg
mov
rol
fs
pop
inc
int3
into
popf
push
mov
xchg
or
or
insb
cltd
mov
outsl
xlat
adc
push
js
mov
mov
mov
jmp
mov
jnp
lcall
movsb
push
fistpl
test
xlat
inc
push
dec
push
dec
cs
and
mov
insl
push
ja
loope
jle
lods
inc
mov
subb
pop
push
mov
add
sub
iret
adc
jo
xor
mov
lret
fcoms
lods
dec
arpl
out
lcall
aas
leave
cmp
inc
aam
cmp
pop
in
sahf
xchg
jbe
cwtl
pop
imul
fcoml
lock
movsl
or
mov
and
cli
or
lds
bound
jno
movsl
push
sti
xchg
lods
sti
dec
ret
outsb
and
lret
mov
sti
mov
jle
xor
and
loop
popl
shll
jl
mov
mov
into
enter
bound
mov
clc
xor
iret
fsubs
in
shrb
adc
mov
dec
out
push
fistps
xchg
push
fistps
lcall
and
xor
shll
adc
mov
push
xor
xchg
sub
lret
movsb
aam
sub
push
lds
gs
mov
cmp
test
xchg
fcomi
push
pop
inc
cmp
mov
jge
sbb
mov
add
jnp
cmp
jns
or
lret
repnz
dec
pop
aaa
pop
push
stos
repz
sub
sti
add
lods
lods
lahf
inc
pop
aaa
and
outsb
dec
call
push
inc
adc
pop
ror
mov
dec
insl
push
pop
push
mov
mov
sub
loop
xchg
int
push
add
cmpsl
popf
xor
push
jb
mov
pop
popf
out
cmp
loop
lcall
lods
mov
call
mov
dec
mov
je
mov
ljmp
loope
mov
iret
and
sub
sbb
nop
mov
insl
fwait
lock
sub
mov
mov
icebp
mov
stos
dec
mov
inc
stos
xchg
xchg
sbb
enter
fnstenv
mov
je
cmp
cmpsb
or
jbe
es
lcall
mov
mov
ss
cmp
inc
add
stc
iret
mov
inc
es
out
jns
out
iret
xchg
xor
mov
cld
mov
scas
pop
aad
push
mov
mov
cwtl
fdivrs
sbb
add
mov
dec
push
scas
test
add
imul
xchg
jne
mov
xchg
add
dec
mov
jge
pop
mov
dec
push
xchg
popf
sahf
lret
pop
lret
lods
iret
inc
popa
xchg
sbbb
or
loop
push
lahf
out
inc
lcall
or
movsl
sub
out
cmpsl
dec
mov
ljmp
loopne
movb
lock
out
pop
testl
pop
xchg
pop
push
inc
pop
es
stos
popf
add
pop
hlt
jbe
jmp
ja
addb
push
mov
insl
popf
add
add
and
add
andb
inc
lcall
add
sbbb
mov
jg
jnp
pop
or
icebp
mov
addr16
js
xchg
cld
lret
out
pop
ds
jbe
mov
stos
pop
xchg
ret
fldenv
xchg
out
fucomi
xchg
pop
and
pop
add
mov
mov
cmp
cwtl
xlat
push
daa
pop
repnz
push
jge
fdivl
mov
inc
pop
inc
mov
leave
mov
test
pop
ret
sbb
push
jne
xchg
add
scas
fldl
pop
sub
xchg
cmp
inc
pop
aad
mov
pop
cwtl
or
jp
cwtl
outsb
aam
push
xchg
daa
int
mov
ror
and
inc
into
cmp
fbld
lret
pop
mov
mov
mov
mov
lret
icebp
mov
lahf
cmpsl
pop
xor
stc
sbb
push
test
and
cmp
mov
test
cmp
addr16
sub
das
sahf
test
clc
push
mov
mov
iret
push
out
dec
xor
mov
push
fstpl
arpl
fists
inc
fstpt
add
adc
movsb
sbb
leave
stos
test
xchg
cmp
incb
aas
aam
inc
cmp
data16
push
inc
inc
rorl
or
xchg
or
aas
cwtl
hlt
iret
xchg
aaa
popf
lcall
jg
stos
jae
loopne
cmpsl
test
out
pop
addr16
sbbl
in
push
xor
fsubs
loop
fcmovu
movsb
jno
sbbl
xchg
pop
jp
adc
dec
ljmp
inc
and
test
shlb
jg
cs
leave
adc
jnp
enter
pop
movsl
cmpsb
inc
sub
mov
arpl
aam
jns
shrb
imul
daa
pop
int3
mov
add
jbe
mov
jne
push
bound
dec
push
mov
je
je
outsb
std
push
aas
dec
dec
int3
sub
fistl
jg
ja
push
push
push
sbb
fninit
inc
jo
cltd
pop
inc
out
xchg
sbb
sbb
cmc
pop
gs
jle
shr
mov
push
stos
enter
dec
daa
rclb
sub
int
cltd
scas
clc
lahf
cmpb
fimuls
mov
pusha
jo
cmp
push
push
xor
jae
mov
leave
imul
xchg
mov
jne
neg
pop
ja
xor
shl
xor
push
adc
jns
cmpsb
pusha
jmp
sbb
imul
dec
pop
scas
scas
push
call
adc
xchg
arpl
sbb
pop
and
mov
fwait
ret
lods
cmc
jl
stos
cmc
ja
mov
pop
or
in
add
ss
push
mov
cmp
lret
sbb
push
fiaddl
outsb
mov
movsl
dec
jne
cmc
mov
and
cmp
bound
xor
imul
xchg
push
mov
jmp
in
push
lret
push
loop
aad
mov
fistpll
fcompl
and
jp
es
shlb
dec
xor
imul
lret
aaa
in
xchg
out
lret
negl
cmpsl
fistpl
mov
icebp
pop
je
call
mov
xchg
sti
lods
pushf
fisubrl
lret
imul
iret
mov
scas
xchg
pop
lret
inc
cmpsb
lods
xchg
mov
pop
jp
mov
shlb
daa
and
jo
cmp
lds
test
cmp
and
popf
fadds
jb
or
pop
mov
sub
iret
sbb
sti
adc
jg
xchg
loop
jb
adc
mov
mov
arpl
sahf
jp
cli
push
lock
out
push
fisubrs
out
mov
pop
xchg
mov
dec
out
imul
in
sti
inc
pushf
mov
dec
das
rolb
adc
jle
pop
inc
out
pop
call
cmp
into
sbb
add
aad
push
sahf
imul
jle
inc
add
jmp
and
clc
mov
jmp
jge
xor
sbb
mov
jl
add
int3
lcall
gs
pop
pop
mov
mov
xor
int
stos
clc
mov
into
lcall
insl
in
push
int
xchg
stos
sub
inc
dec
cmpsb
insl
jl
xor
cmp
popa
mov
mov
mov
and
lret
xchg
loope
mov
push
mov
pop
adc
cmp
add
inc
pop
hlt
mov
xor
loope,pn
orb
push
pop
sbb
mov
jae
jnp
cmp
sub
or
cmp
lret
dec
lret
sbb
ss
mov
mov
arpl
mov
pop
cmpsb
pop
or
sub
mov
sub
movsl
dec
shll
jno
sub
pop
dec
in
arpl
push
jae
into
pop
test
lret
cmpsb
enter
testl
add
jmp
and
lret
shl
add
jmp
rol
pusha
push
push
out
lfs
lds
test
jno
fsubrs
jne
cs
movsb
mov
xor
mov
gs
shr
rcrl
mov
adc
inc
jbe
fsubrs
push
adc
mov
sub
and
shlb
mov
data16
cmp
aas
bound
xchg
mov
bound
mov
subl
mov
jg
mov
and
push
mov
std
push
test
xor
mov
dec
mov
xchg
mov
or
cmp
outsb
mov
rolb
mov
cmp
sub
cld
pop
movsb
rorb
es
mov
inc
mov
mov
xchg
gs
daa
jge
imul
fsts
dec
ficoms
or
das
mov
test
dec
xor
adc
lret
dec
out
cmpsb
gs
scas
pusha
and
testb
repnz
cmp
cmp
and
cmp
cs
pop
fsubl
add
jo
insb
push
hlt
push
lahf
mov
cmp
pushf
sarl
adc
xchg
loop
lods
inc
call
iret
and
movsl
adc
movsl
mov
ja
add
sbb
inc
cmpsb
cmp
or
cltd
xchg
lods
sub
cld
rcrl
cs
bswap
out
xchg
and
mov
jbe
cmp
xor
outsl
daa
movsl
js
dec
dec
cli
inc
pop
subb
mov
loopne
xor
test
mov
cmp
mov
shr
mov
jmp
sub
ljmp
prefetchwt1
or
jmp
lcall
mov
dec
xor
lds
imul
or
xor
inc
pop
jmp
cmc
dec
subb
inc
ret
test
or
out
sbb
clc
emms
xchg
jp
push
sub
add
lock
cmc
jl
lahf
jecxz
sbb
in
and
psrlq
loopne
lock
mov
outsl
cmp
xor
aaa
stos
mov
lret
sub
es
adc
mov
shrl
pop
pop
xor
xor
mov
mov
mov
je
dec
stos
lods
pop
add
ja
dec
rcl
pop
mov
dec
inc
into
test
movsb
push
mov
mov
ret
and
fistps
mov
jg
xlat
movsb
mov
es
cmp
jae
imul
xor
adc
mov
push
iret
arpl
lahf
scas
cmp
popa
mov
stos
daa
adc
fcompl
push
sub
cmp
xor
pop
adc
lods
out
test
mov
inc
mov
lret
sub
cwtl
dec
adc
mov
adc
pop
enter
mov
int3
push
in
icebp
push
orl
lfs
lret
sti
test
push
bound
inc
or
mov
enter
xchg
inc
testl
loopne
and
sbb
push
cs
scas
test
lret
repz
pop
pop
mov
cmp
pop
push
mov
pop
daa
js
jg
imull
sbbb
xchg
dec
inc
and
pop
es
out
jmp
push
in
or
sub
popa
mov
inc
adc
mov
mov
in
xchg
jle
lea
call
clc
add
pop
pop
jl
mov
fsubs
in
or
fcoml
movsl
adc
pop
pop
and
mov
repnz
outsl
lret
pop
das
push
fcoms
lret
int3
jne
insb
loope
mov
out
rorl
out
jns
ret
arpl
das
or
cmc
xchg
jno
int3
dec
inc
mov
xchg
negb
mov
xor
cmp
ret
arpl
sub
mov
mov
mov
fnsave
or
mov
or
jbe
repz
jb
je
xor
push
xor
inc
clc
mov
adc
idivb
add
imul
cmp
pusha
inc
and
cli
sar
push
mov
enter
test
out
cltd
hlt
imul
clc
jecxz
lret
and
cmpsb
testl
into
xchg
cmp
scas
xchg
mov
imul
xchg
cli
inc
clc
rclb
shl
enter
push
xorl
adc
stos
arpl
dec
or
cmpsb
loop
xchg
inc
addl
xchg
arpl
mov
sbb
jecxz
jp
out
push
test
test
es
adc
orb
dec
xchg
outsb
pop
sub
ret
arpl
jmp
cmpsl
inc
or
add
ret
jmp
loope
popf
cmpsb
stc
adc
stos
mov
mov
cs
cmp
jnp
pop
or
jae
lret
loopne
pop
or
hlt
aad
dec
ljmp
scas
repz
cmpsl
out
mov
imul
xor
fmulp
and
jle
jnp
mov
sahf
pop
cwtl
repnz
mov
push
inc
xor
movl
outsb
stos
loop
enter
cli
leave
rclb
dec
pop
les
sub
and
out
repnz
out
ret
enter
mov
lret
pop
lods
out
dec
cmp
mov
jne
popl
es
adc
roll
dec
push
dec
repnz
adc
xor
jle
inc
mov
in
shl
movsb
clc
jge
or
pop
cmp
jecxz
mov
jmp
pop
mov
sub
subb
or
stos
fisttps
sbb
xor
js
idiv
push
sbb
jb
repz
jnp
fs
xor
in
loope
jns
jo
jp
jns
data16
mov
jp
mov
mov
stc
xchg
cli
addr16
mov
repz
movsl
iret
jnp
jns
mov
call
test
fidivrl
jno
fwait
push
popa
mov
push
push
xor
ret
out
cwtl
push
ja
jmp
mull
popa
lahf
add
repnz
lret
inc
stos
pop
xor
loopne
pop
add
lahf
mov
cmc
ja
xchg
fistps
cmp
mov
push
daa
icebp
sbb
adc
mov
dec
add
sbb
ss
cmp
and
popf
cli
inc
jg
clc
fsts
hlt
inc
movsl
jge
jp
scas
orb
jmp
inc
xchg
mov
xor
mov
xor
jecxz
arpl
jmp
dec
xchg
push
dec
loopne
inc
das
sub
out
xor
xor
out
or
in
push
cmc
clc
idivb
jl
gs
lret
mov
and
std
xor
es
ret
cmp
mov
leave
fldt
loop
cld
iret
pop
imul
cmp
in
sub
repz
push
inc
aaa
in
mulb
mov
fisubs
ss
lcall
ljmp
test
xorl
xor
ja
mov
xchg
dec
and
add
ja
subl
int3
cmpsb
pop
adc
dec
mov
sbb
dec
ss
add
add
cs
ljmp
mov
std
out
push
subb
mov
push
aam
rcr
inc
mov
adc
xchg
pop
xlat
daa
or
popa
jl
pop
adc
inc
push
sarl
mov
fxch
mov
adc
jg
andb
leave
push
rep
cmpsb
sub
xchg
ljmp
and
imul
add
sbb
call
jbe
adc
sub
cmp
insb
adc
jae
cmp
push
sbb
in
push
pop
xor
test
movsl
push
out
sub
pop
scas
out
pop
inc
xchg
adc
ljmp
mov
sub
repz
mov
jbe
dec
pmulhw
int
pop
or
out
and
loope
mov
testb
lea
cmp
sub
mov
push
adc
mov
jnp
mov
pop
sub
jge
loop
out
lds
mov
adc
dec
out
in
cltd
jle
enter
inc
xchg
mov
cmp
es
mov
or
shll
imul
or
loop
xor
dec
dec
and
je
push
pop
movsb
cmp
loop
pop
loop
ret
fs
cmpsl
jmp
mov
push
ss
dec
xor
loop
out
mov
jecxz
mov
push
rclb
push
jne
aaa
pop
pop
repnz
and
push
jae
cmp
inc
sub
mull
sub
xchg
sbb
sub
in
out
mov
int3
push
imul
push
arpl
loop
scas
in
jbe
popa
sti
mov
jo
out
aas
aad
loopne
aas
loope
add
pop
add
add
pop
add
loope
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
add
addb
add
in
loopne
add
loopne
add
loopne
add
pop
add
pop
add
pop
add
loope
add
pop
add
loope
add
pop
add
loope
add
pop
add
pop
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
xchg
sub
add
dec
out
andb
cmc
rolb
and
icebp
pop
adc
xor
inc
pop
insb
pop
or
sbb
sbb
sbb
ja
enter
mov
xchg
fnstenv
dec
dec
add
pop
and
int
add
sbb
sbb
cmp
or
pop
sbb
push
inc
mov
movsl
sub
push
push
jns
std
addb
push
stos
test
inc
ret
mov
xor
jo
sub
add
mov
leave
adcb
jp
sahf
pop
outsb
add
add
push
or
cmp
pop
fcoms
lock
cmp
pop
jge
pop
fsubrp
and
add
add
fcoms
scas
push
int3
roll
sarl
cmp
incb
push
cmp
add
bt
mov
inc
cli
mov
cld
sbb
sub
add
je
jno
sti
add
mov
xchg
add
lock
or
jp
sub
adc
mov
push
and
out
jmp
daa
push
loopne
mov
test
dec
lea
push
enter
filds
inc
pop
nop
add
dec
mov
arpl
mov
sub
faddp
or
dec
insb
sahf
or
test
hlt
inc
and
movsl
jno
fistl
xchg
dec
enter
jl
ja
jg
rolb
andl
sbb
sub
lds
mov
add
int3
clc
cs
add
pop
or
mov
add
xchg
push
xchg
cmp
jo
add
or
add
mov
sbb
ror
inc
jg
and
das
push
mov
jmp
and
jb
or
iret
es
or
loop
push
push
push
inc
outsb
pop
add
pop
arpl
bound
adc
push
fdivrl
add
jmp
mov
and
xor
shrl
mov
pop
outsl
and
inc
shl
add
stos
adc
fwait
cmp
pop
and
ja
arpl
in
loopne
sbb
test
data16
inc
add
mov
inc
popa
mov
mov
or
and
mov
or
cmp
imul
pop
adc
adc
adc
je
adc
adc
adc
and
and
lods
and
and
and
xor
iret
add
fiadds
and
and
jecxz
cmpsb
out
mov
and
jmp
int3
jmp
mov
and
lock
les
add
add
cli
add
sub
add
icebp
add
addr16
iret
or
ja
add
add
add
adc
jns
add
push
add
pop
add
add
and
idivl
add
add
jle
cld
mov
jmp
arpl
dec
arpl
jnp
xor
adc
adc
and
add
xor
jns
loop
add
add
pop
addl
add
addl
mov
test
mov
mov
out
add
popl
dec
adc
dec
xchg
adc
adc
push
rclb
sbb
adc
adc
jecxz
scas
out
test
ja
call
inc
ljmp
or
out
or
lock
cli
or
sbb
inc
mov
jp
jno
or
mov
sbb
push
cmpb
decb
and
adc
subb
xor
hlt
xor
and
cltd
pop
jp
mov
mov
add
mov
inc
xor
sbb
loop
mov
push
or
mov
arpl
pop
jl
movsb
ret
dec
push
in
xor
sbb
sbb
mov
fmul
and
frstor
fisubs
inc
loopne
lahf
jecxz
jl
and
and
stos
ljmp
and
in
jne
xor
xor
adcl
jne
movsl
xchg
dec
and
push
and
cmove
inc
adc
test
jo
subl
sub
xlat
lea
push
push
fldenv
sub
or
sub
lcall
lea
push
scas
lret
rol
jge
xchg
testb
xor
mov
sub
ds
sbb
or
sbb
pop
inc
add
add
and
xor
or
add
out
inc
xchg
js
aaa
mov
jecxz
sbb
and
test
inc
test
push
xorb
xorb
sbbl
sbb
cs
enter
inc
or
sbb
inc
push
cmp
and
inc
outsb
inc
xor
mov
xor
mov
shlb
ss
icebp
adc
aaa
adc
inc
adc
and
and
inc
and
and
inc
dec
add
dec
leave
inc
dec
push
push
adc
ret
inc
lea
xor
add
pop
movsb
or
imul
mov
fisubl
push
push
add
jno
or
movsb
mov
orl
xor
cli
adc
add
jo
adc
es
aas
cmpb
mov
xorb
fcoml
dec
fistl
or
jo
shlb
or
add
inc
xor
add
and
cmp
push
mov
push
and
add
lods
mov
add
call
push
ljmp
xor
sbb
int3
fstpl
push
popa
sub
addl
and
sti
je
add
jb
jl
lret
lret
aad
popa
mov
mov
push
add
xor
dec
pop
add
and
in
xor
aad
lahf
insb
add
es
sub
add
and
sbb
cmp
fldl
and
sub
and
andb
or
test
mov
pop
mov
jo
add
addb
jns
xorl
mov
push
cs
das
push
int
sbb
cmc
insl
aam
pop
es
sahf
or
data16
jp
xchg
dec
test
sub
mov
loop
or
adc
enter
cmp
rcr
ja
pop
or
bound
cmp
inc
or
pushf
inc
and
pusha
loope
or
pop
je
push
or
pop
mov
addb
imul
push
or
mov
add
dec
ljmp
popf
add
jne
add
cs
pop
xchg
jo
xor
add
push
adc
inc
mov
push
daa
xor
push
dec
mov
push
scas
nop
adc
je
inc
stos
insl
dec
add
xor
xchg
pop
pop
into
sbb
adc
jge
sub
add
insb
mov
push
aaa
imul
dec
xor
mov
cmp
add
rorl
imul
clc
push
sbb
add
sub
fninit
int
push
inc
lcall
add
xchg
mov
addl
data16
or
inc
jns
fidivrs
sub
testb
test
jecxz
jo
outsb
pop
gs
cmp
or
das
add
mov
push
inc
and
jnp
mov
sbb
or
addb
add
xchg
lods
fidivs
aaa
push
clc
aas
xor
xor
adc
lea
push
and
push
in
mov
dec
mov
push
enter
xor
adc
dec
sbb
imul
testl
arpl
daa
pop
and
rolb
lcall
xlat
add
xor
lahf
out
ds
push
mov
mov
or
std
cltd
fcoml
test
xchg
inc
lret
or
or
in
pop
jmp
faddl
and
jns
mov
add
add
fsubs
or
sbb
mov
add
push
add
push
add
push
push
in
push
xor
dec
stc
push
jmp
push
jmp
out
cwtl
push
or
adc
xor
mov
arpl
jp
add
arpl
repz
cmp
pop
or
sub
jb
xor
jne
and
dec
ss
in
xlat
rorb
pop
add
and
add
mov
jne
dec
cmp
adcl
and
aas
adc
push
in
in
lret
mov
mov
inc
jno
in
adc
xor
pop
cmp
dec
adc
xor
sahf
xchg
stc
cltd
sbb
xchg
rorl
out
add
stos
scas
lods
sbb
or
jl
js
xchg
outsl
std
sub
pushf
loop
movsb
and
and
scas
add
push
adc
orb
or
or
ss
add
or
pop
movsl
dec
and
add
mov
fidivrs
or
in
arpl
push
and
push
mov
lret
stos
inc
pop
lods
je
and
nop
cmp
out
add
cmp
jne
dec
lock
dec
or
xlat
add
lea
dec
stos
add
jo
xor
out
mov
xor
add
ss
lcall
stos
push
xchg
imul
push
cwtl
inc
je
inc
mov
inc
mov
out
mov
divb
ja
pop
inc
mov
add
dec
rorb
fdivr
daa
xor
test
sbb
and
mov
pop
cmp
insb
stc
xchg
lret
and
or
aaa
add
int3
aad
sahf
and
sub
and
adc
fs
push
mov
cwtl
sbb
or
dec
xor
sbb
decl
xabort
push
add
scas
mov
mov
out
cmp
pop
push
jo
inc
sbb
add
sbb
cli
cmp
xor
add
lds
push
fsubl
add
push
or
add
mov
cmpl
sbb
daa
add
cmpsb
jg
cmp
roll
jbe
fldenv
pop
mov
xchg
mov
dec
fcmovnb
or
jecxz
test
adc
xchg
jbe
mov
roll
or
add
jle
xchg
jne
enter
stos
pusha
lret
add
cmp
fmuls
mov
fstps
push
js
std
mov
loopne
pop
fmull
mov
pop
or
ja
sti
xchg
or
adc
js
xchg
adc
aaa
lods
cld
sbb
loopne
aam
adc
cmp
es
or
enter
adc
push
in
inc
mov
cs
aad
test
rcr
and
bound
inc
sbb
out
loopne
adc
pop
and
and
add
mov
and
fldcw
jp
add
dec
pop
jmp
scas
xor
and
addb
shlb
inc
jmpw
dec
mov
or
xchg
add
mov
imul
jne
add
and
in
testl
mov
mov
push
cltd
xor
repz
push
xor
movsl
xor
adc
adc
inc
icebp
add
fidivl
test
movsl
add
push
inc
xlat
and
add
cmpsb
lcall
dec
sbb
cld
adc
in
in
jno
or
mov
dec
add
arpl
push
or
gs
push
and
sbb
push
or
iret
les
loop
fistpl
arpl
adc
cmp
jb
jne
mov
add
testl
cmp
or
out
xchg
and
add
mov
inc
adc
add
leave
rcll
xor
lahf
sahf
mov
arpl
xor
add
push
dec
mov
cmp
stc
add
xchg
inc
aad
mov
adc
mov
fdivr
repnz
ret
or
pop
jne
jo
sahf
pop
or
or
cmp
adc
push
push
mov
inc
ficoml
cmc
aas
int3
stos
jae
xor
sub
xorl
jmp
insl
mov
vmwrite
jnp
in
cmpsb
or
and
sbb
add
push
push
add
xchg
add
loop
rcrl
lods
xor
jb
push
hlt
sarb
out
xor
pop
jmp
push
fbstp
enter
rcrb
jmp
add
cmp
push
pop
ret
pop
mov
addb
jae
push
add
popa
add
loop
pop
leave
fiaddl
add
outsl
aam
lock
pop
push
jecxz
add
sti
xchg
mov
cmpsb
ret
jge
dec
xchg
dec
xor
sbb
cmpsb
les
scas
pop
dec
xor
inc
inc
jl
inc
into
sarb
adc
scas
rorb
mov
mov
adc
test
sbb
es
add
push
addr16
inc
cmp
push
pop
stos
insb
add
int3
jnp
fsubrs
push
clc
mov
push
or
dec
les
lods
mov
mov
in
lret
imul
sbb
bound
sbb
adc
or
andl
dec
arpl
fistl
adc
or
and
xchg
or
sahf
adcb
xchg
ljmp
push
and
or
popf
flds
outsb
mov
dec
pop
push
cmp
xor
cmp
jns
notb
in
adc
or
or
lret
xchg
loopne
loopne
mov
lret
xchg
fnstenv
repz
inc
pop
imul
sahf
or
mov
mov
mov
sbb
dec
pop
inc
or
roll
ret
add
lds
inc
bound
xchg
sbb
sbb
sbb
adc
jl
add
add
into
jmp
fstpl
test
je
xor
leave
addb
inc
fs
ud1
pusha
rorb
xchg
add
faddl
lds
test
mov
aas
push
push
jmp
inc
xchg
pushf
add
xchg
xor
cmpsb
adc
pusha
add
addl
popf
neg
jmp
inc
rclb
lock
neg
sub
dec
call
hlt
push
clc
leave
push
cld
testb
call
add
xor
lcall
mov
imul
add
sbb
scas
push
add
shl
call
test
stc
xchg
push
pop
daa
neg
and
call
test
adc
dec
jmp
inc
out
out
lock
std
or
adc
add
xor
mov
nop
jno
adc
ret
lods
ffree
jl
aad
cmp
stos
pop
je
jle
ss
sbb
call
push
and
inc
mov
xlat
jns
movsb
mov
dec
jmp
mov
jle
pusha
push
sbb
add
je
mov
pop
adc
neg
jmp
xor
es
sbb
inc
add
test
mov
clc
icebp
add
iret
inc
xor
int
not
loopne
xor
aam
mov
mov
adc
and
ret
cmpb
aad
ljmp
sarl
out
not
inc
jmp
adc
or
pusha
push
add
repnz
orb
ret
fwait
mov
pop
stos
test
divb
jno
xchg
pop
not
cmp
out
inc
imul
push
inc
sbb
sbb
hlt
mov
leave
adc
lret
pop
mov
cmc
stos
nop
pop
or
jo
dec
push
jg
push
push
inc
setno
push
sub
push
loop
ja
xor
hlt
cmc
flds
add
fdivr
enter
shr
pop
xchg
dec
into
fsubl
or
dec
repz
push
shlb
pop
mov
sahf
les
movsl
aam
scas
int3
test
add
cmp
and
stos
scas
push
dec
pop
push
add
sub
pop
pop
sbb
jp
add
ret
inc
push
ss
and
es
cltd
and
mov
pusha
das
mov
push
mov
imul
jbe
movsl
sbb
fmuls
filds
icebp
push
pop
pop
les
inc
int3
dec
jl
int3
in
cmp
test
aam
dec
lcall
adc
cli
out
pop
lods
fisubl
mov
pop
data16
jl
xor
daa
cmp
nop
push
and
push
adc
push
add
scas
inc
rolb
and
arpl
cmp
sub
push
int
fst
push
lods
lock
shlb
lds
push
into
sahf
inc
repz
inc
mov
rcrl
mov
add
add
inc
dec
pop
dec
clc
jne
sbb
mov
shl
mov
dec
adc
cmp
inc
mov
fsubs
into
jecxz
inc
dec
add
cmc
addr16
ds
and
pop
pop
rclb
jg
push
call
dec
pop
dec
xchg
test
inc
sub
test
fidivs
and
and
insb
fst
cmp
add
sub
rcl
inc
adc
fisubrl
not
jnp
das
add
cli
adc
or
push
dec
pop
cmc
dec
loopne
pop
xchg
dec
dec
push
movsb
sbb
add
cmpsb
or
or
jg
ret
sbb
dec
push
stos
in
add
repz
jp
mov
add
push
data16
mov
inc
dec
pop
popa
xchg
rorb
lahf
add
ss
incl
xor
xlat
add
ret
and
xor
lahf
mov
adc
add
adc
adc
not
dec
scas
mov
repnz
jb
and
inc
movsb
add
add
mov
sub
push
loop
or
lret
cmc
repz
add
adc
das
fimuls
sbb
mov
inc
dec
mov
lahf
mov
rol
jno
and
jge
lcall
dec
and
ljmp
ljmp
cmp
sbb
adcb
sub
out
sub
xlat
push
mov
xchg
and
cmpb
mov
outsl
test
loope
mov
sub
cmp
mov
ltr
into
cmp
test
cmp
mov
add
inc
test
les
sbb
sub
xlat
sbb
and
add
sub
dec
inc
mov
adc
push
clc
icebp
or
jnp
sub
cmp
outsl
pop
and
shrl
pop
jecxz
adc
in
pushf
sub
loope
pop
or
out
jl
cwtl
int
das
or
adc
fs
xor
xor
add
lds
and
push
movsl
adc
add
ret
sbb
loop
outsb
and
or
add
push
pop
in
pusha
ja
add
lock
push
out
sbb
pop
pop
add
sub
push
dec
mov
jg
push
inc
jno
push
into
jo
add
or
mov
push
mov
pop
sub
cld
adc
inc
loope
push
rcll
stos
shll
inc
into
xor
mov
out
xchg
out
dec
sub
push
fsts
push
pop
mov
int3
negb
fists
sti
inc
out
ss
in
or
mov
cmpsb
xchg
fildl
adc
fcmovnb
inc
push
divl
lds
mov
mov
pusha
push
cld
sbb
fldl
pusha
cs
adc
shrl
and
je
jmp
gs
lds
jns
clc
inc
sub
jne
sbb
testb
shl
mov
xor
push
imul
lods
inc
stc
xchg
push
dec
add
icebp
pop
push
dec
dec
and
and
xor
pop
div
or
push
cs
or
xor
push
jp
dec
lea
data16
repnz
jge
and
mov
add
or
push
andb
nop
les
cld
or
mov
inc
jne
notb
xchg
adc
inc
dec
xchg
mov
aam
subl
popa
sub
xor
sahf
inc
std
or
jne
sub
xor
sbb
nop
xor
adc
and
pop
pop
not
aad
push
adc
cwtl
pop
dec
pop
mov
cmp
frstor
mov
addl
iret
dec
rolb
mov
ret
pop
aad
aam
and
push
add
mov
pop
loop
mov
je
pop
testl
add
cwtl
pusha
xchg
inc
add
add
int
push
pop
pop
add
sub
sub
push
dec
faddl
call
popa
sub
jb
or
movsb
jl
or
ret
insl
fcoms
loopne
adc
mov
imul
shll
jmp
push
inc
sbb
sbb
push
in
inc
push
jmp
add
jg
xchg
fldl
push
ret
ret
not
nop
jae
dec
jb
cmpsb
scas
cmp
mov
or
adc
dec
xor
adc
call
outsl
mov
arpl
jecxz
add
dec
sub
add
sbb
add
addl
std
xchg
mov
test
or
xor
mov
cmp
fdivrs
fmuls
lods
xor
xchg
sub
fsub
loopne
inc
add
mov
lea
inc
int3
jmp
and
jb
xor
mulb
or
sbb
dec
mov
out
rclb
movsl
inc
pop
sub
into
mov
and
inc
xor
inc
inc
sub
jae
inc
neg
int3
fmuls
adc
test
xor
mov
scas
inc
call
shll
jle
sbb
push
and
addb
pop
pop
push
lret
mov
cmpsb
stc
add
xor
loope
jno
outsl
xchg
cmp
test
jns
adc
push
cmpsb
sbb
movzwl
and
icebp
inc
rol
rclb
lods
push
mov
mov
xor
inc
inc
mov
cmp
xor
out
jmp
and
ret
xor
mov
sti
and
adc
jo
jmp
jge
inc
sub
mov
xchg
mov
idivl
popa
pop
push
push
or
dec
xlat
roll
mov
andl
es
push
int3
cld
cltd
pop
sub
cmp
pushf
stc
dec
pop
jbe
sub
and
push
xor
les
and
dec
xor
gs
shr
rcrb
popa
sub
lret
incb
sbb
push
pop
outsb
pushf
adc
das
xor
int3
pop
adc
push
out
stc
enter
inc
cmp
push
adc
pop
add
pop
sahf
aam
ror
pop
dec
inc
push
add
testl
cmp
pushl
jbe
sub
mulb
xchg
xchg
adc
data16
cwtl
adc
dec
loop
fmuls
lds
jne
cmp
iret
lock
and
or
iret
add
xor
and
push
pop
pop
sub
arpl
lds
add
push
mov
repnz
xchg
pop
pop
or
aam
mov
insl
xlat
xor
mov
fidivrl
nop
fistl
ds
fmull
sub
rorl
mov
call
xor
and
cli
cmp
aas
push
mov
xchg
pop
cmp
and
cld
pusha
pop
mov
ret
fsubr
add
mov
addl
mov
rcll
inc
push
pop
or
enter
jo
les
cmp
sbb
loope
iret
inc
rolb
in
aas
jg
lds
movb
xor
and
xor
fisttpl
loop
test
mov
pop
fisubrl
pushf
shlb
sub
test
inc
adc
lcall
pop
mov
adc
jbe
jb
mov
add
cld
xor
or
out
xor
mov
ja
or
xorb
and
outsb
nop
sbb
inc
xchg
shrb
sub
inc
xor
es
sub
popa
sub
adc
mov
add
ror
stc
inc
dec
add
loop
push
xor
out
jl
and
pop
not
xor
popf
adc
add
stos
xor
les
bound
mov
out
in
add
pop
cmpsb
jmp
jecxz
ljmp
cmp
push
mov
out
in
fwait
in
lds
pop
add
pop
sub
pop
add
test
pusha
addl
and
ss
fbld
call
or
leave
and
and
pop
test
push
sbb
adc
mov
and
add
mov
push
xchg
iret
or
pushf
dec
mov
push
mov
sbbb
jge
adc
add
and
jecxz
pop
and
addr16
cmp
rcrb
inc
or
aaa
mov
dec
push
sub
cmc
mov
mov
aaa
or
sub
cmp
pop
inc
and
scas
pusha
mov
sbbb
orb
xchg
sbb
push
sbb
scas
icebp
mov
lret
cmpl
inc
int
jae
or
add
andl
hlt
mov
insb
sbb
cmpsb
cmp
xor
daa
inc
rcrl
sarl
mov
add
dec
inc
push
loopne
xor
bound
data16
sbb
leave
mov
xor
pop
push
popa
push
imul
or
pop
pop
and
xor
arpl
imul
jmp
push
pop
sti
add
inc
xor
stos
shll
neg
movsb
pop
rolb
loope
dec
cltd
push
std
cmpsb
xor
push
jae
ret
adc
pop
sarb
jbe
push
lret
mov
sub
adc
or
popa
dec
dec
repz
pop
mov
addb
or
ret
jb
mov
mov
loopne
jg
mov
fwait
movsb
sub
cmpsb
xchg
bound
inc
test
enter
xorb
mov
add
xorb
inc
scas
jo
dec
sti
inc
ja
push
js
cld
mov
pop
pop
ret
mov
shll
into
pusha
sahf
stos
gs
add
movl
inc
out
mov
hlt
in
stc
mov
cwtl
gs
out
jl
or
lds
mov
test
mov
js
dec
shrl
pop
addl
mov
add
push
push
fucom
add
push
dec
sub
xor
rcr
fxch
mov
lret
adc
rcll
rorb
aaa
pusha
imul
shr
mov
cli
aaa
xlat
adc
popa
test
inc
fists
not
data16
mov
cli
mov
mov
mov
fildl
adc
or
inc
fwait
leave
bound
imul
in
rol
xor
pusha
mov
sub
add
fwait
inc
cs
fiadds
add
fs
mov
loope
push
les
adc
pop
push
pop
xor
sub
jbe
or
pop
add
cld
inc
insb
xor
mov
dec
cltd
mov
adc
sub
pop
mov
sbb
jnp
mov
push
out
fcompl
ljmp
pusha
push
lret
or
ret
cwtl
dec
cltd
sub
cmpsb
enter
lcall
out
xchg
int
daa
loope
xor
ljmp
repnz
out
jmp
lock
or
dec
xchg
pusha
cmp
inc
dec
aas
movsb
push
pop
push
xor
xchg
cltd
mov
pop
mov
pop
mov
and
inc
imul
xorl
test
idivb
fidivrs
dec
pop
rorb
stc
cmpsb
mov
mov
push
sbb
pop
pop
xor
cs
fadd
sub
gs
pop
cmpsl
push
adc
jne
push
xor
inc
dec
mov
or
out
cmp
ljmp
and
fistpll
mov
pusha
sbb
sbbb
sbbb
pop
fs
test
pop
lahf
and
inc
and
leave
neg
inc
or
test
mov
dec
mov
or
icebp
or
push
cmp
sub
xor
pop
and
movb
fs
mov
subb
mov
dec
inc
inc
lret
movl
jno
mov
pop
out
push
xchg
decl
or
mov
loop
inc
jae
mov
enter
fdivl
nop
repz
sarb
pop
push
push
dec
push
dec
sub
lds
add
push
mov
xchg
pusha
mov
test
fildll
push
stos
sbb
in
stos
add
jae
jecxz
sub
pop
mov
cltd
orb
xchg
add
push
out
ds
aad
scas
add
mov
jecxz
or
lcall
pop
cs
mov
add
push
sub
and
mov
incb
adc
xchg
add
sbb
movsb
jbe
push
inc
sbb
mov
mov
inc
adc
lret
sub
jmp
les
cmp
xorps
jge
add
iret
push
adc
insb
scas
add
sub
sub
std
es
testb
cmp
sub
xor
and
or
dec
mov
cs
sti
xor
pop
nop
stos
fcomps
hlt
mov
xchg
sub
add
push
pop
pop
es
push
or
xchg
ret
sbb
mov
orb
inc
push
std
xchg
add
incl
es
movsl
pusha
push
movsb
repnz
mov
mov
rcll
xchg
test
in
push
inc
movaps
and
sub
xor
sbb
cmpl
in
jnp
mov
iret
or
and
mov
pop
push
or
mov
cmp
dec
cwtl
nop
hlt
testb
mov
jl
sub
popa
add
lods
sub
xor
add
sbb
clc
push
cmp
push
adc
add
imul
cmp
inc
or
cmpsb
test
xadd
or
push
jg
xor
lea
test
mov
add
or
cmp
pushf
jnp
adc
movsb
mov
dec
clc
rcl
sar
jmp
pop
mov
gs
add
and
sbb
push
fwait
dec
mov
adc
stc
mov
dec
pop
mov
jle
sti
sub
xor
out
insl
lods
cmp
scas
pusha
cmc
bound
jbe
icebp
adcl
cltd
daa
ret
xchg
mov
out
scas
cltd
sbb
dec
mov
adcb
jno
ret
and
fidivrs
add
xor
movsb
je
xchg
mov
and
cwtl
add
int
movsb
or
pop
add
pop
dec
mov
adc
out
push
or
pop
test
bswap
dec
mov
sub
lcall
xor
and
dec
jne
leave
stc
sbb
xor
cmp
rcrl
or
xchg
push
cmp
test
mov
xchg
inc
int3
js
sbb
mov
jo
xchg
mov
dec
mov
sub
sub
inc
push
jb
insl
ret
dec
xor
mov
xor
xor
pop
mov
jg
or
pop
cs
fsubrl
cmp
or
mov
adc
cs
mov
clc
scas
ss
mov
lods
pop
mov
out
jb
outsb
mov
imul
lahf
mov
loope
pop
xchg
icebp
dec
mov
clc
inc
dec
ljmp
and
xor
scas
shrl
bound
cmc
fs
and
push
idiv
repnz
cs
cmp
mov
sbb
dec
pop
notl
push
mov
xor
hlt
lock
das
cwtl
aad
pop
jg
dec
lcall
sub
dec
in
sbb
mov
cmpsb
scas
rolb
les
xor
mov
rcll
dec
mov
movsb
cmp
adc
shl
insb
rcrb
pop
leave
bound
hlt
int3
lea
xorb
cwtl
popf
mov
mov
mov
cmc
sarb
mov
pop
mov
xchg
stos
and
pop
push
adc
push
xchg
and
bound
pop
pop
push
rolb
xor
jae
jae
and
dec
add
mov
inc
ret
fcmovnbe
lahf
subb
jb
adc
add
inc
dec
and
std
mov
adc
icebp
sarb
xor
add
inc
dec
imul
test
dec
bnd
int3
xchg
cmp
jp
add
mov
sub
jns
add
add
scas
not
test
outsl
cmpsb
adc
cmp
xor
mov
adc
cmp
mov
adc
call
cmp
inc
and
ljmp
sub
hlt
lds
or
mov
jecxz
loop
pushf
shl
bound
lock
dec
cld
mov
rol
sbb
mov
mov
ljmp
adc
and
ss
cltd
pop
add
xor
cld
pushf
cmpsb
mov
lods
xchg
bswap
xor
xor
jecxz
enter
add
adc
adc
xor
dec
mov
hlt
mov
shl
jnp
dec
out
inc
sub
mov
nop
sbb
pop
ficoms
arpl
dec
int3
sti
inc
push
pop
lret
repnz
adc
not
xor
aam
aad
fwait
sub
fs
repz
mov
ss
setae
testl
push
mov
cmp
je
xchg
test
out
es
mov
cmp
xchg
hlt
out
pusha
push
cld
cs
sub
notl
sti
push
push
or
xchg
xchg
jo
cltd
sti
ss
add
fwait
xchg
adc
shlb
add
dec
sbb
and
fisubl
sbb
hlt
jl
jno
out
dec
xor
shll
adc
xchg
mov
pop
xlat
repnz
push
or
enter
sub
data16
dec
or
adc
std
or
ret
lock
push
xchg
push
xchg
dec
movsl
sub
jge
push
inc
add
mov
mov
cwtl
lock
inc
test
pop
mov
cmpsb
mov
test
add
outsl
hlt
js
test
cli
test
push
pop
add
ret
loopne
out
cwtl
cmp
dec
test
push
pop
adc
mov
pop
int3
rorl
icebp
andl
adc
popa
and
lds
clc
adc
fisubrl
lock
adc
cwtl
mov
sbb
js
aad
add
adc
sarl
mov
arpl
in
cwtl
add
inc
nop
pop
or
mov
scas
or
sub
loope
sub
adc
adc
pop
xchg
pop
dec
mov
aad
or
mov
rcr
inc
call
add
sbb
sub
dec
adc
mov
jbe
lcall
and
vmovlps
lret
clc
test
mov
or
neg
mov
xor
pop
loopne
xchg
ret
inc
cmpl
into
test
in
sub
hlt
cmpsb
add
jb
xchg
sbb
sub
mov
nop
jl
mov
xorl
sbb
in
cmc
adc
adc
cmp
pusha
test
cmp
jle
cmpsb
xor
add
in
sub
adc
or
lcall
call
jecxz
loop
icebp
insb
or
test
test
push
adc
jp
pop
mov
xor
adc
inc
push
pop
adc
decl
xchg
pushf
adc
inc
or
jae
cmp
inc
cmpsb
xchg
sahf
push
ljmp
mov
cmpsb
and
xchg
lahf
adc
icebp
mov
iret
divl
push
fldenv
daa
add
push
jno
ret
add
jmp
test
pop
mov
add
fisttpl
mov
loopne
arpl
fsubrp
cwtl
xor
or
test
adc
cltd
jnp
lods
push
sub
lods
imul
xor
and
dec
sub
pop
bts
ljmp
outsb
jecxz
xor
fldcw
repnz
sub
cmpsb
filds
inc
ret
leave
ret
fdiv
aaa
adcb
pop
sub
sbbb
rorb
push
test
dec
mov
test
sbbb
dec
loope
dec
jl
dec
testl
sub
mov
loopne
cmp
and
jl
dec
fistl
mov
jo
xchg
icebp
push
push
lret
xor
cmpsb
cwtl
adc
arpl
or
mov
cmp
aaa
add
mov
mov
mov
stc
cs
div
gs
pop
andb
lahf
or
mov
fsubrl
pushf
dec
int3
push
adc
sbb
xor
inc
mov
int
jbe
and
and
int
cmpsl
adc
mul
aam
mov
jne
xor
test
add
lds
and
add
cmpsl
insb
adc
mov
fimuls
add
pop
mov
jge
arpl
jmp
aad
mov
sbb
push
sbb
add
pop
fcoml
inc
push
push
xchg
dec
jge
pop
pusha
cmp
cmpsl
lahf
or
test
loopne
addl
cli
ljmp
movb
cmpsb
add
adc
dec
ror
and
xchg
and
pushf
stos
and
and
sarb
mov
lret
shll
test
add
mov
stc
xor
xor
data16
fwait
cwtl
xor
fdivs
add
loop
cltd
loopne
leave
stos
xorb
mov
push
push
adc
push
push
stos
and
adc
cmpsb
pop
out
push
push
addr16
add
gs
pop
inc
andb
jle
loopne
xchg
xor
rolb
mov
mov
mov
or
mov
rolb
ja
pop
push
dec
xchg
imul
nop
push
lock
pop
loope
push
add
fmull
push
aad
loopne
jo
jmp
outsl
and
sbb
daa
mov
outsl
nop
jp
sub
imul
cmp
push
add
out
mov
sarl
bound
sub
data16
or
movsl
push
addr16
movd
dec
inc
pop
hlt
call
fs
loop
push
stos
jmp
jecxz
stc
sbb
fbstp
lds
xor
aam
addr16
hlt
or
inc
inc
push
aas
pop
lea
pop
imul
rcrl
cmp
push
or
dec
aas
or
mov
adc
in
jecxz
out
jae
mov
test
mov
push
jle
add
push
or
mov
cmp
rclb
popa
mov
sub
jnp
enter
cmpsb
insl
dec
pop
int3
loope
ljmp
sbb
int
sub
arpl
sub
loope
and
cmp
imul
sub
push
or
sbb
repnz
dec
lock
cmp
enter
xor
or
out
sbb
clc
mov
push
out
fsubl
notb
add
pop
mov
sub
or
jg
jmp
push
sub
inc
mov
stc
subl
cmpsl
lods
dec
rorl
jle
sub
push
cmp
fs
test
xor
mov
and
aam
aas
insb
enter
push
xor
jo
xchg
scas
cmp
inc
or
mov
loop
in
mov
pop
rcrl
adc
mov
xchg
or
imul
jecxz
arpl
pop
fwait
lods
add
repz
cmpsl
jecxz
lods
pop
sbb
mov
cli
daa
sbb
jno
jge
daa
movsb
insb
imul
decb
scas
adc
cmp
xchg
mov
dec
addr16
subl
enter
or
push
imul
mov
jge
mov
notb
fbld
pop
das
dec
lcall
cmpsl
aaa
lahf
ljmp
cmpl
inc
xchg
add
pop
sub
aaa
pop
mov
add
mov
addr16
out
sbb
sub
and
lcall
mov
in
sbb
fwait
or
aas
sub
sahf
or
cmp
add
cli
lods
imul
scas
hlt
push
dec
loope
or
dec
cmpsb
or
pop
jecxz
gs
jge
adc
dec
js
aas
xor
and
mov
push
in
pop
adc
nop
inc
xor
sbb
scas
sbb
sub
xchg
fdivs
xchg
push
cmp
repz
loope
push
inc
leave
lods
push
int3
fwait
rclb
push
movsb
fists
xor
mov
and
or
pop
inc
andl
clc
pushf
mov
rclb
lcall
data16
sti
xor
jae
decl
je
mov
adc
adc
addps
adc
mov
cmp
imul
pusha
sbb
filds
xchg
fisttpl
pushfw
pop
in
inc
pop
test
jl
test
mov
imul
cmpsl
dec
frstor
mov
movsb
or
xorl
in
push
and
in
pop
cmp
ret
lds
int3
sbb
inc
aam
aas
jg
mov
stos
daa
lea
adc
loopne
cmp
xor
jg
std
or
movsb
mov
pushf
cmp
pushf
cmpl
jecxz
push
mov
xchg
bound
imul
sbb
mov
pop
leave
ljmp
out
sbb
popa
repz
xchg
scas
fsubrl
in
sbbb
pop
or
je
pop
inc
ret
decb
and
pushf
ret
imul
mov
cmp
add
or
and
shr
mov
xorl
lret
int
or
clc
xor
sbb
cmp
lock
adc
jno
movsb
sbb
test
lret
scas
addr16
jecxz
pop
andb
mov
leave
in
lcall
pop
sti
dec
in
lods
mov
movsb
cmpsl
or
jo
shll
shlb
pusha
push
je
sub
cmp
movsl
gs
ljmp
dec
das
push
mov
mov
popl
loop
xorb
movsl
add
mov
pop
aaa
call
mov
fisttpl
dec
cwtl
sub
inc
nop
add
cmp
jl
in
adc
sti
int3
ss
rorl
loopne
dec
inc
daa
adc
aam
xchg
mov
jae
push
add
ret
cmpsl
arpl
mov
sbb
and
repnz
push
xchg
or
lcall
xchg
scas
jb
cmp
lret
sbb
loopne
iret
int3
mov
pop
inc
test
insb
pop
addr16
mov
mov
outsl
dec
loope
inc
dec
inc
imul
inc
dec
jnp
pop
dec
lret
movb
pop
sub
jge
imul
daa
xor
xchg
addr16
out
das
fisubrs
dec
jg
out
and
es
mov
int
xlat
jno
ljmp
mov
mov
mov
and
fldt
xlat
add
push
mov
jl
stc
test
or
jb
out
cmpsl
mov
cltd
mov
sub
dec
movsb
inc
jae
in
lcall
mov
jno
rolb
jbe
cmp
mov
stos
addr16
sub
test
inc
repz
rcrb
subb
jle
outsl
cmpsl
mov
or
arpl
dec
mov
jecxz
rcrl
push
pop
xchg
push
adc
push
dec
xor
sbb
outsb
mov
sub
pop
ret
inc
push
xor
pop
mov
test
and
push
pop
inc
es
and
cmp
jg
jne
les
lret
adc
fbstp
xchg
push
aam
pop
je
xchg
dec
push
xlat
push
mov
fldl
jbe
add
mov
cli
xchg
pop
push
jge
sbb
js
or
cmp
push
sub
jl
inc
xchg
mov
or
push
int3
enter
repz
popa
icebp
mov
ja
dec
push
ljmp
icebp
jnp
loop
mov
movsb
mov
js
cmp
repz
xor
int
cmpsb
sbb
inc
in
rol
sub
lea
cpuid
and
dec
jecxz
arpl
clc
jge
sbb
cmp
dec
insb
sbb
xchg
cmpsb
dec
adc
xchg
pop
pushf
pop
test
push
imul
flds
inc
enter
mov
and
jmp
into
out
mov
imul
pop
outsb
pop
mov
lahf
pop
aas
sbb
jae
data16
out
fsubl
das
fs
cwtl
in
inc
sub
pusha
or
inc
leave
inc
fnstsw
sub
jmp
cmp
sub
and
xchg
sbb
and
cmp
push
or
call
xor
and
sbb
or
xchg
dec
ds
mov
shrl
dec
nop
mov
int3
adc
out
dec
xchg
sbb
mov
sub
pop
out
dec
mov
iret
fdivr
jb
mov
or
add
cs
adc
test
mov
ja
mov
xchg
adc
int3
jne
xchg
ja
cmp
cmpsb
cmp
add
icebp
pop
jnp
pop
mov
or
sub
mov
lret
fimuls
jnp
ret
int
or
gs
rcrl
ljmp
fdivl
subb
and
faddl
sbbl
out
xor
mov
xchg
jns
jbe
push
les
js
sub
lea
xchg
or
add
mov
in
xorl
sar
jecxz
sbb
pop
repz
lds
mov
sub
lock
xor
int
test
mov
mov
jbe
inc
les
push
push
jnp
push
dec
hlt
mov
inc
movsl
test
cmp
mov
push
jmp
add
stos
insl
adc
imul
mov
jg
lods
sub
sarb
sbb
cmp
cmpsl
mull
sub
outsl
insb
inc
adc
imul
add
jbe,pn
dec
imul
jb,pt
pop
cwtl
mov
add
cmp
arpl
fisttps
sbb
jbe
mov
ret
add
add
mov
les
sub
mov
xor
cltd
repz
mov
cld
push
mov
cmc
imul
cmc
mov
cvtps2pi
negb
hlt
repnz
in
dec
dec
ficompl
inc
mov
jns
repz
pop
shll
rorb
bound
rcrb
outsb
addr16
jl
imul
cmpsl
aam
mov
or
jo
movsl
jle
xchg
mov
cmc
mov
or
pop
movb
lcall
stos
dec
in
and
sub
lods
inc
pop
ljmp
sub
sub
mov
stc
cltd
leave
stc
sbb
jno
cwtl
shrb
jp
lods
dec
lcall
int3
fdivrs
pushf
jecxz
xor
test
test
cli
retw
xchg
orl
inc
scas
icebp
xor
lcall
loop
cmpsw
addl
xchg
cmp
pop
sahf
add
int
loope
movsb
jb
cmpsb
sbb
dec
pop
inc
rcll
and
subl
sbb
out
out
and
sub
les
mov
loopne
dec
outsb
pop
xor
add
sub
mov
out
popa
cld
test
ret
sti
lock
xor
mov
out
and
mov
mov
cwtl
ficompl
outsl
or
jae
ret
jnp
xor
push
push
push
and
mov
push
pop
stos
js
jb
mov
cmp
movsb
cmp
in
mov
mov
or
mov
in
mov
std
ljmp
rclb
or
jg
pop
js
les
dec
or
pop
jns
sbb
push
filds
sbb
push
push
lret
insl
cmp
cltd
sub
icebp
loope
cltd
mull
push
mov
and
and
movsl
sbbl
bound
iret
pop
call
int3
xchg
or
push
inc
cmp
and
mov
sbb
shll
jg
lods
fiaddl
xchg
je
sbb
cmp
cwtl
push
fdivl
aam
psllq
imulb
pop
es
scas
imul
repz
push
js
xchg
adc
hlt
int
lock
in
jne
or
imul
aaa
mov
cmp
call
sbb
shlb
dec
xchg
into
jb
scas
out
ret
adc
xor
xchg
inc
test
mov
mov
or
jnp
adc
stos
dec
daa
dec
cmpsl
je
mov
xchg
clc
push
add
aaa
and
dec
idivl
into
jmp
push
mov
xchg
out
out
test
dec
hlt
push
sti
push
sub
add
push
jg,pn
cltd
dec
loop
cmp
ds
into
inc
shlb
xchg
mov
loope
and
lods
pop
jmp
daa
pop
jp
sub
push
sbb
adc
arpl
adc
dec
aad
dec
fwait
mov
outsb
js
push
inc
inc
lds
out
mov
daa
lcall
and
lret
mov
fisttpll
clc
stos
push
push
or
add
cld
scas
repnz
test
mov
mov
popf
dec
inc
mov
add
sbb
es
jno
std
inc
in
sarb
lcall
gs
jg
cmpsb
cmpsb
pop
cmpsl
sbb
pop
jbe
push
mov
dec
mov
cltd
pushf
addr16
notl
sahf
add
dec
xchg
jl
inc
lret
rorl
mov
ds
aaa
scas
sbb
inc
cs
jns
mov
cmp
aam
insl
ja
sub
pop
mov
loopne
push
adc
jg
hlt
sbb
xor
xchg
jae
vorpd
jecxz
scas
xor
idiv
jnp
dec
stc
lret
test
popa
scas
or
pop
adcl
je
add
inc
add
xchg
jl
dec
js
aas
sub
aas
jae
push
sub
repnz
sub
pop
xchg
cmp
pop
cmp
cwtl
inc
dec
cmp
dec
xor
jge
out
fists
imul
imulb
fs
je
sub
fldl
fldl
in
and
in
add
idivl
in
pusha
iret
bnd
cmpsl
jge
mov
nop
das
push
gs
adc
mov
in
scas
lods
ja
push
or
ds
mov
lret
and
xor
jle
nop
mov
outsl
imul
jmp
jno
pop
sub
jp
pop
aaa
out
push
dec
pop
jg
cmp
mov
pushf
ljmp
lret
inc
mov
shl
jb
fldenv
jbe
icebp
cmc
jne
out
cmp
aad
xchg
or
sub
fmuls
pop
xchg
inc
add
pop
repnz
bound
jg
or
adc
xchg
lret
pop
and
and
in
mov
pushf
push
insl
aam
mov
inc
add
xchg
and
loopne
in
inc
arpl
aaa
adc
cmpsl
ja
jae
rcrb
arpl
dec
shr
sub
sti
sub
std
pusha
jl
mov
rorb
dec
pop
outsl
lds
hlt
loopne
push
or
lods
paddb
push
and
sahf
cmp
jb
fistps
push
xchg
and
push
sarl
call
adc
mov
lock
cmp
insl
test
into
sbb
decl
add
lds
movsb
dec
add
sub
sub
pop
xchg
sahf
ret
inc
adc
lds
pusha
aam
xchg
mov
pop
addr16
out
jmp
lea
jmp
fs
and
in
lods
dec
jb
sarb
push
inc
mov
dec
push
jg
outsb
jo
adc
int3
cmp
gs
movsb
dec
test
mov
add
dec
inc
xchg
sub
dec
ret
outsb
pop
sarb
aad
pop
mov
popf
pop
sbb
rclb
add
inc
xor
ds
sub
int
cmp
cmc
pop
inc
push
xchg
xlat
jmp
xchg
insl
insb
fcmovnb
sub
cmp
cwtl
jg
out
or
gs
mov
test
pop
cs
cltd
sarb
jae
or
scas
pop
inc
inc
mov
enter
jne
fwait
add
lods
pop
jmp
jp
push
mov
popa
lea
jo
add
or
test
testb
sahf
lret
gs
mov
ret
fs
lcall
lea
jmp
pop
cmp
pop
jae
and
test
rclb
inc
movsl
sbb
push
push
rclb
pop
add
inc
sub
push
add
mov
mov
pusha
scas
cld
jge
pusha
sbb
xlat
testb
addr16
arpl
fcmovb
push
gs
clc
sbb
jae
loopne
adc
and
iret
pusha
cld
dec
test
inc
cmp
adc
cmp
pop
add
mov
mov
insl
push
aas
mov
out
xor
ds
outsl
cmpsl
add
dec
mov
out
dec
or
movsb
cwtl
movsl
cs
pusha
jb
clc
sbb
jecxz
cmp
leave
addr16
daa
sti
loope
gs
pusha
movb
addb
inc
into
out
fs
cs
cmp
cwtl
or
pop
dec
mov
cs
iret
lret
jmp
xor
mov
ds
adc
and
in
mov
int3
jbe
out
or
add
push
js
out
int
xor
das
mull
push
cwtl
mov
dec
inc
sbb
mov
mov
cs
insb
loope
cmpsl
out
dec
aad
dec
dec
lds
ja
dec
inc
push
fstps
arpl
push
nop
call
push
dec
add
stc
sbb
mov
jecxz
in
dec
jecxz
mov
xor
cs
sbb
inc
push
mov
cmpsl
add
xchg
loope
lret
sarb
fdivrs
sbb
rcrl
stos
mov
push
repz
loope
hlt
push
or
xor
pushf
mov
jne
fwait
sub
cmp
push
neg
dec
test
jno
leave
loope
adc
xchg
mov
das
xchg
shll
add
enter
pop
notl
push
mov
push
leave
dec
adc
jecxz
sahf
imul
sub
sti
dec
push
pop
stos
cmpsl
cmp
sub
loop
jnp
mov
cmp
push
mov
jae
xor
add
dec
xchg
adc
dec
mov
dec
int
insb
xchg
push
in
jns
lds
sbb
call
dec
clc
in
inc
movsl
lock
sbb
aas
and
int3
dec
adc
addl
rorl
or
cmp
mov
sub
cmp
mov
pusha
sub
imul
adc
imulb
push
das
push
out
out
inc
jns
mov
test
das
into
aaa
xchg
pop
repnz
ljmp
dec
mov
xor
andl
aas
mov
sbb
cmpsb
pop
cmp
cmpl
cmp
scas
addb
push
addr16
or
fwait
rol
in
mov
add
int
mov
stc
fdivs
hlt
stos
arpl
cld
cmpsl
in
out
dec
jbe
in
cwtl
in
lret
xor
gs
test
sahf
movsb
pop
hlt
insb
loopne
xchg
outsb
pop
inc
sbbb
cwtl
insl
adc
repz
sbb
loop
nop
push
sbb
xchg
shrb
in
dec
or
ror
mov
gs
and
jge
mov
testl
push
and
out
aaa
imul
clc
jb
add
in
sub
mov
jae
aam
dec
push
cld
inc
sbb
mov
mov
jle
out
jbe
sub
xchg
in
sbb
mov
lahf
push
inc
jbe
out
or
and
movsb
loop
ljmp
repz
push
arpl
test
adc
ljmp
mov
clc
sbb
sbb
fsubs
mov
xor
mov
fwait
add
aas
sub
rol
data16
pop
ret
negl
scas
mov
inc
xor
mov
ret
adc
mov
mov
pop
xor
call
push
dec
enter
cli
sbbl
popa
pop
xchg
add
aas
jl
mov
sub
mulb
jl
inc
pusha
mov
aaa
ficoms
test
jmp
sbb
out
in
in
pop
cmp
scas
xor
stc
cmpsb
pslld
sub
clc
out
jb
pusha
dec
dec
xchg
xor
lods
cmpsl
scas
nop
sbb
popa
mov
sbb
movsb
dec
lcall
aas
inc
sbbb
in
ljmp
push
cmp
call
cmp
loope
aas
sbb
and
sub
push
loopne
cs
pusha
xor
movsb
xchg
add
icebp
lahf
enter
bound
loope
repz
and
add
test
mov
jl
aas
adc
mov
dec
lods
negb
xchg
mov
dec
mov
ljmp
jbe
data16
sbb
mov
inc
jnp
les
or
sub
cmc
sbb
mov
aas
sarb
orl
fld
xchg
mov
or
lret
sub
inc
xchg
and
xchg
shlb
jne
aam
loop
in
subl
fistpl
pop
stc
xor
cmpsl
notb
cmp
lret
bnd
sti
insb
jb
push
jmp
mov
clc
push
in
add
sbb
mov
in
test
push
in
cmp
mov
or
mov
mov
ljmp
fbld
inc
dec
iret
pop
or
push
call
fisubs
jae
outsb
nop
mov
inc
addr16
hlt
loopne
sbb
fld
xchg
fadd
scas
ljmp
outsl
push
cmp
pop
cmp
dec
push
and
mov
jge
cmp
leave
in
cmp
outsb
pop
jmp
iret
mov
inc
xchg
out
jbe
aam
call
jecxz
pop
divl
into
or
add
jge
icebp
jae
ret
jne
push
cmp
cli
sbb
pusha
nop
aam
mov
ljmp
popf
and
inc
and
leave
rorb
push
jl
sbb
push
pop
push
sub
enter
cmp
or
push
iret
sbb
in
cmpsl
sbb
sbb
and
and
repz
imul
pop
inc
pop
ljmp
filds
scas
push
jnp
xor
xchg
dec
push
cmpsl
fildll
pop
cmpsl
sub
shrb
inc
cmpsl
shrb
inc
cmpsl
shrl
dec
movsb
ret
test
inc
sbb
add
adc
or
xchg
subl
sete
data16
fisubs
test
xor
sub
pop
jnp
mov
rep
mov
mov
cmp
mov
pop
mov
inc
in
or
arpl
inc
jecxz
dec
xlat
xchg
jo
ds
ja
add
loopne
int
movsl
cld
cs
ljmp
out
jecxz
daa
imul
push
inc
add
cld
lret
sub
and
pushl
pop
jl
jbe
jge
add
inc
add
cmp
xchg
rolb
xor
sbb
lret
nop
or
push
shll
repnz
lahf
jl
imul
ja
jbe
int3
test
cmp
pop
outsb
insl
shlb
inc
mov
gs
fadds
ror
jo
outsb
cmp
je
jbe
push
in
mov
hlt
adc
jnp
lahf
in
loope
pop
aad
rcrb
loop
and
lahf
enter
or
and
shll
in
fs
movsl
pop
mov
and
loop
cmpsb
int3
popf
idivb
inc
je
iret
aad
das
sbb
mov
fldl
xlat
inc
push
sub
mov
pop
jp
out
push
dec
popf
or
pop
popa
pop
cmpsb
lods
lds
dec
pop
push
adc
pop
shll
dec
arpl
bound
loope
push
mov
and
mov
lahf
lods
sbb
test
cmp
repz
jns
adc
xchg
or
push
out
xchg
add
adc
mov
notb
add
mov
test
mov
pop
lret
and
jo
idivb
shr
out
mov
cmpb
mov
mov
shlb
daa
push
imul
fcoms
or
cmp
imull
lds
and
fdivrs
jp
rdtsc
addr16
adc
enter
and
negl
sub
push
dec
fcmovnbe
xchg
ljmp
enter
subb
jne
mov
pop
fldt
stos
cmp
add
movsb
icebp
push
inc
jg
mov
sti
push
mov
sbb
xor
fsubr
push
je
call
clc
xor
fbld
pusha
xor
aaa
in
push
dec
mov
xor
add
aam
push
mov
lea
das
xlat
pusha
cmp
xchg
push
in
jo
test
and
movswl
mov
call
orb
call
aam
xor
leave
mov
pop
addr16
cmp
push
cmpsl
add
out
lods
add
xchg
lret
or
add
mov
loopne
jb
push
mov
dec
je
or
inc
leave
push
into
clc
and
cmp
cmp
dec
into
sbb
lret
push
xor
mov
ffreep
out
jne
stc
addl
mov
clc
std
mov
push
adc
enter
or
das
add
mov
cmpsb
xchg
mov
ret
push
iret
sub
sbb
mov
je
mov
mov
loop
mov
dec
mov
cmpl
sub
inc
test
fildll
hlt
mov
aaa
cwtl
imul
cs
jo
adc
fwait
adc
rclb
rolb
xor
aaa
mov
xor
movsb
add
dec
and
push
les
sub
andb
loop
cld
push
and
stos
mov
lods
mov
push
hlt
push
push
ljmp
and
mov
fisubs
inc
inc
lahf
rorb
adcl
pop
aas
inc
jo
jecxz
repnz
dec
je
or
pop
cmc
pop
out
mov
int3
int
hlt
sbb
f2xm1
loope
lahf
add
adc
outsb
into
iret
cmc
nop
and
add
mov
outsb
shl
call
xor
dec
fsubs
cwtl
movsb
cmpsl
mov
dec
movsb
jae
mov
mov
cmp
sahf
enter
cld
cmp
push
sub
jg
add
out
add
mov
jo
es
sub
or
fiaddl
insl
out
jmp
insb
pop
enter
or
and
and
cmpsb
mov
and
or
pop
in
imul
jnp
add
dec
xor
jae
cmp
mov
inc
mov
dec
inc
aaa
cwtl
add
cmpsb
das
inc
xor
dec
and
daa
dec
cmp
ret
jp
push
dec
imul
pop
jmp
sbb
adcl
mov
lods
dec
sbb
mov
dec
inc
andl
sbb
dec
inc
fwait
sbb
int3
cltd
lret
mov
or
lock
in
call
mov
dec
in
xchg
xchg
subl
lcall
jnp
xchg
or
push
xor
test
shrb
jns
test
stos
fs
pop
inc
pop
lods
adc
out
imull
jmp
sbb
mov
add
inc
rcll
xchg
pop
stos
jecxz
pop
in
test
jbe
jge
sub
mov
xchg
movsl
cmp
mov
mov
xchg
pop
aas
insb
stos
stos
and
imul
sub
push
jbe
sub
pop
ret
stos
jge
js
pop
sub
popf
inc
inc
jb
stos
adc
les
outsl
lcall
movsl
loope
mov
les
xor
sbb
mov
sbb
ljmp
mov
pusha
pop
push
xchg
xchg
push
and
dec
mov
sub
daa
out
out
add
imul
mov
test
push
jne
adc
add
jecxz
xchg
das
gs
and
dec
cs
mov
jp
subl
in
leave
xchg
or
pop
je
lods
pop
sbb
xchg
push
lahf
cli
fidivrs
iret
pop
stc
push
mov
test
push
inc
lods
jge
adcl
jno
fistpll
out
sub
test
jnp
imul
inc
ret
cs
ret
cmp
sti
xor
pushf
incb
adc
rcll
rcr
popa
stos
imul
fcompl
add
push
inc
aad
or
ret
dec
dec
mov
dec
adc
mov
dec
sbb
popf
ret
add
sbb
add
sub
sbb
pop
daa
pop
sbb
xor
sub
aaa
and
sbbl
call
test
cmp
into
mov
enter
jnp
lds
sbb
sbb
aam
rolb
fdivs
jge
insb
les
inc
mov
and
push
bound
insl
inc
sub
loope
sbb
insb
into
out
mov
shll
push
mov
and
rclb
and
sub
mov
lea
jno
loop
lods
sub
adc
js
out
adc
sbb
mov
bnd
adc
add
ret
push
pop
bound
test
cwtl
push
sub
std
push
jb
std
sub
inc
std
cmp
std
inc
jnp
pop
jl
pop
adc
dec
fwait
adc
lcall
cmp
out
jbe
sbb
or
adc
in
in
into
add
inc
jecxz
mov
subl
iret
repz
sbb
sub
mov
jge
inc
in
in
je
jg
mov
dec
data16
xchg
in
mov
jmp
lea
fimuls
imul
stos
lock
cmp
ljmp
ds
inc
jb
fwait
loopne
mov
jg
jp
add
enter
lods
cmp
jne
sbb
jge
lods
jno
aam
cmp
jecxz
or
or
rcr
jae
xor
pop
inc
aas
dec
mov
iret
fs
in
jmp
jmp
fstpl
dec
adc
and
cmp
dec
insl
je
dec
mov
xchg
cmpsl
pop
inc
xchg
das
mov
imul
push
cld
lret
jbe
or
add
jle
in
pusha
icebp
outsl
shrl
push
ret
inc
in
pop
cmp
les
inc
ja
aaa
std
repnz
mov
dec
adc
pop
in
test
enter
int
hlt
jecxz
pop
fs
mov
pop
outsl
cmp
repnz
stos
fldenv
xchg
cmp
clc
inc
es
mov
xor
rorl
ds
xor
call
mov
sbb
jmp
sub
fcmovne
or
inc
gs
push
mov
mov
sub
inc
js
sbb
gs
push
cwtl
push
mov
imul
fdivl
es
stos
or
add
cmp
sahf
movsb
lcall
and
js
sub
lcall
std
or
inc
pop
jg
add
or
movsl
gs
jae
je
xchg
popf
movsb
int
dec
and
fldl
in
movb
jb
pop
jnp
inc
imul
dec
subl
pop
mov
pop
xor
sbbb
movl
test
inc
push
mov
insb
jp
xchg
add
adc
pop
pop
stos
imul
stos
scas
les
sbb
push
xor
pusha
cmp
xor
mov
adc
popf
pandn
xchg
rcr
fsubp
dec
sub
rcl
imulb
adc
mov
mov
vpblendw
sub
into
nop
imul
jl
mov
cltd
leave
out
pop
sub
cmp
push
cmc
xor
pop
xchg
in
mov
add
jmp
in
add
cld
dec
adc
insb
dec
xchg
cmp
adc
lds
sbb
inc
test
and
sbb
fwait
sbb
cmpsl
lods
movsb
mov
test
ret
out
lret
inc
outsl
inc
sbb
ja
sbb
cmp
pop
into
lea
cmpsl
or
ret
rcrb
sbb
inc
mov
daa
or
insb
xchg
and
lret
pop
lahf
dec
mov
adc
xorb
popf
lock
addr16
mov
inc
stos
inc
outsb
jbe
sub
and
cmp
aas
mov
mov
inc
mov
inc
sbb
mov
xchg
cmp
ror
out
add
cld
nop
or
push
mov
daa
pop
mov
popa
sub
sub
out
in
add
push
andl
sbb
adc
sbb
pop
stos
jbe
pop
mov
mov
call
pop
lock
arpl
popa
sub
adc
xor
jnp
mov
adc
add
std
cltd
or
sbb
int3
lcall
aaa
call
xor
scas
cltd
cmp
std
and
ljmp
iret
adc
xchg
xchg
or
pushf
lods
pop
jecxz
push
icebp
xchg
jns
lock
xchg
adc
lcall
popa
inc
jnp
std
add
imul
cli
add
jmp
cmp
sub
sub
fidivrs
mov
shlb
and
sbb
or
insl
mov
mov
loope
lods
adc
movsl
cmp
cmpsl
xchg
xor
sub
inc
cmp
and
jl
add
aad
xchg
iret
cmp
and
loop
mov
xor
mov
mov
xor
cltd
push
test
loopne
mov
sbb
outsl
xchg
in
leave
pop
cmp
inc
jp
adc
add
lods
in
add
mov
in
int3
pop
cmp
das
jb
inc
adc
mov
push
rcll
out
and
test
fldt
ret
mov
cwtl
mov
imul
cmc
in
jnp
outsb
mov
fs
push
shlb
or
sub
loopne
inc
jl
and
xchg
pop
add
cmp
hlt
inc
xlat
mov
testb
xchg
loop
inc
addr16
mov
pusha
jbe
cmp
clc
aaa
add
mov
outsb
xor
outsb
loop
dec
daa
je
push
call
jl
sub
loopne
jne
stos
aad
jo
push
mov
inc
or
dec
popf
into
fwait
sbb
outsl
fisubrl
dec
fnstenv
in
stos
inc
mov
pop
sub
mov
and
mov
push
push
scas
bound
add
jl,pn
mov
or
fistpll
aaa
pop
sahf
adc
rorb
ss
mov
mov
out
je
imul
cmp
xchg
and
fildl
pop
lods
lds
cli
sbb
xchg
mov
insb
push
mov
sbb
sub
popf
push
in
adc
lcall
pop
notl
insl
sub
mov
sbbl
jnp
adc
mov
repz
jmp
data16
jg
cmp
out
xchg
dec
cmpsl
jbe
cmovle
sub
lock
gs
pop
sub
push
push
jmp
scas
cld
and
in
out
out
jnp
mov
push
andb
dec
mov
push
xor
out
loopne
test
sbb
inc
sub
aas
or
pop
into
fcomi
inc
out
or
cmpl
pop
xchg
cmp
insb
add
outsb
push
mov
int
test
out
test
aaa
inc
sub
insl
pushf
std
sub
sub
loopne
sub
das
push
pop
mov
out
xchg
or
scas
mov
hlt
gs
adc
xchg
or
xor
pusha
lods
addl
pop
jecxz
mov
pusha
jmp
jne
mov
movsl
gs
repnz
pop
jno
dec
inc
mov
inc
fcmovb
inc
pop
lods
aaa
popa
jg
jbe
ljmp
pop
pop
dec
lods
sbb
pop
lds
inc
ret
adc
scas
sti
es
cmp
sbb
rep
into
adc
xor
shrb
mov
pop
jns
loope
lcall
jo
dec
imull
adc
push
add
push
aad
push
adc
lock
fbld
cs
pop
mov
in
lcall
mov
daa
push
sub
add
xchg
mov
dec
or
inc
mov
std
add
fcompl
cli
inc
xor
call
fsubrs
xor
lds
xchg
in
mov
jle
xor
mul
dec
jp
lret
mov
jno
movsb
mov
jle
je
cmp
stos
mov
iret
outsb
dec
xchg
pop
add
aad
leave
aad
push
jle
das
xchg
ds
jb
pushf
js
pop
imul
add
or
aas
out
inc
and
test
dec
inc
pop
mov
shrl
in
mov
ss
xlat
gs
pop
int
add
pop
mov
jbe
fwait
popf
aaa
jmp
sub
in
push
fstps
repz
push
int3
or
lret
xor
mov
jmp
icebp
roll
js
gs
fldl
in
push
scas
ret
inc
jmp
push
mov
add
das
pop
push
mov
inc
in
mov
out
decl
pop
cmp
fisttps
inc
inc
test
inc
ror
gs
push
mov
icebp
test
jmp
mov
mov
nop
adc
mov
push
xchg
cmp
call
pop
xchg
push
leave
cld
fimuls
rorb
sub
stos
fidivl
sar
fldt
test
push
xor
inc
push
les
cmp
pop
loope
jmp
mov
insb
inc
cltd
testl
fmull
cli
push
push
xchg
inc
mov
pop
jecxz
lock
cmpsl
sbb
dec
dec
frstor
cmc
cpuid
call
out
sbb
clc
jecxz
sbb
insb
push
and
hlt
sbb
cld
inc
dec
faddp
sub
sbb
cmp
fistps
sub
inc
xor
aas
les
push
and
aas
ja
test
mov
sub
mov
imul
adc
jbe
adc
shll
cmpsl
mov
icebp
sbb
mov
dec
xchg
insb
push
mov
insb
add
mov
push
xchg
test
loopne
or
inc
ja
inc
add
mov
sub
mov
cld
fndisi(8087
or
mov
stos
cmp
jbe
adc
shll
cmpsl
nop
add
sbb
mov
stos
insb
and
in
cmpsl
cmp
sub
incb
xchg
mov
loope
push
sub
mulb
sub
ficomps
stos
pop
jp
jbe
adc
shll
and
cwtl
test
mov
sub
repnz
cmp
int
pushf
test
pop
dec
dec
mov
arpl
sbb
hlt
cmpb
mov
xchg
repnz
das
pop
add
aaa
loopne
or
xchg
popa
add
mov
in
outsl
lock
sbb
pusha
pushl
icebp
adc
movsl
inc
or
nop
cmpsb
xor
jo
xor
fildll
mov
in
dec
and
xchg
jl
sub
jno
pop
cmc
sbb
adc
mov
out
shrb
test
jp
testl
or
jl
add
imul
mov
mov
sbb
sbb
dec
shrb
mov
jg
out
test
cmpsl
xor
add
or
xor
fwait
fwait
push
dec
fwait
mov
fucom
enter
outsl
or
ret
and
mov
xor
inc
inc
jno
add
sbb
xor
sub
movl
jo
aaa
mov
addr16
ret
lcall
sub
push
aaa
mov
mov
mov
lods
fistps
fisttps
filds
push
mov
mov
xor
loop
or
daa
ret
cmp
test
incl
dec
aam
sbb
lret
inc
das
mov
add
insb
repz
mov
inc
pop
test
aas
dec
push
sub
xchg
jl
aas
mov
xor
sbb
bound
dec
add
movsl
mov
xor
mov
jl
into
lock
cs
sbbb
imul
das
or
ljmp
pop
sbb
iret
add
arpl
push
sub
arpl
popa
or
pop
sbb
andl
cmc
cwtl
pop
adc
ljmp
dec
sbb
mov
mov
aaa
mov
push
call
push
push
in
in
jnp
ret
adc
mov
fcompl
stos
pop
in
sub
sub
cmp
cmpb
inc
popa
push
xchg
xchg
cwtl
sbb
pop
and
xchg
mov
lock
fisttpl
sbb
push
stos
jnp
jbe
jnp
hlt
cmp
jno
pop
sbb
imul
aas
add
icebp
or
aam
push
sbb
addr16
call
pop
sub
mov
sub
jb
imull
inc
dec
addl
mov
sbb
mov
push
into
outsb
dec
iret
sbb
sub
fwait
cmpsl
xlat
dec
add
repnz
mov
arpl
and
mov
ljmp
inc
jge
xchg
fstps
jmp
and
cmpsb
mov
cltd
push
cwtl
xchg
or
inc
push
scas
add
dec
and
cmp
lcall
mov
xor
negb
dec
or
adc
movsl
cmp
or
push
cmp
or
out
rclb
and
add
dec
push
mov
xchg
sub
nop
sti
outsl
jg
call
cmp
ljmp
mov
inc
cs
and
sbb
in
dec
add
outsb
out
inc
or
pusha
stos
int3
cwtl
jge
xchg
sbb
jmp
dec
out
orl
xor
fs
inc
inc
push
arpl
lock
and
mov
and
test
push
ret
enter
clc
clc
push
inc
xchg
xor
hlt
nop
add
imul
fxch
push
mov
enter
iret
test
addb
sub
mov
sbb
movb
adc
sbb
call
loopne
pop
push
sbb
sub
inc
inc
add
sbb
cmp
mov
insl
add
add
aam
push
loopne
out
int
jp
roll
mov
adc
sbb
inc
aas
aad
out
inc
xchg
push
mov
cmp
lahf
and
adc
negl
dec
jecxz
xchg
xor
out
push
mov
sarb
jne
or
dec
scas
clc
adc
sub
fimull
mov
imul
pop
mov
les
mov
lret
sti
loopne
sbb
push
jb
pop
cmpsb
dec
pop
sbb
mov
test
aaa
les
pop
mov
sbb
xchg
mov
lret
popf
xchg
xchg
popl
fiaddl
mov
or
outsl
dec
pushf
adc
xor
xor
pop
hlt
pop
push
sub
mov
jecxz
ljmp
add
mov
das
pop
shl
rcrl
hlt
jecxz
loop
push
dec
dec
les
adc
jne
or
iret
push
mov
pushf
ljmp
mov
push
xor
xchg
pop
jae
xlat
pop
test
arpl
adc
pop
mov
push
cmp
cmpsl
or
mov
int
movsb
sub
loop
vpmaxsq
call
hlt
movsb
mov
ret
cwtl
and
loopne
in
lds
divb
mov
cmpsl
enter
test
lret
adc
jns
clc
and
andl
ror
int
pop
cmpsl
mov
insl
lret
and
dec
mov
jnp
int3
fs
mov
xchg
das
sbb
cltd
push
dec
mov
pop
sub
icebp
insl
frstor
inc
daa
mov
sub
cmp
cld
notl
test
fsubrs
xlat
mov
and
mov
and
lcall
and
pop
mov
fiadds
jbe
lock
cmpsb
nop
inc
leave
xor
lret
push
mov
jnp
jle
inc
ljmp
pop
cs
and
sub
adc
jmp
mov
lcall
xor
loopne
xor
out
in
das
roll
xchg
push
xchg
shrb
jnp
addr16
mov
sub
push
mov
sub
pushf
pop
data16
iret
mov
fidivrl
daa
sub
call
push
xchg
andb
popf
xchg
mov
and
push
sbb
push
xchg
and
jo
mov
pop
dec
or
mov
pop
outsl
mov
adc
jae
push
cmp
rclb
push
les
imul
sub
ret
ds
and
mov
iret
inc
xlat
inc
fcomp
pop
or
mov
nop
pushf
mov
aam
adc
sub
sti
pop
mov
stc
repnz
inc
iret
fldcw
stos
test
mov
xchg
inc
jmp
sbb
popf
xchg
add
ret
jae
js
in
inc
sbb
loope
adc
daa
sub
stc
push
xchg
cmp
fwait
sahf
mov
add
jg
sub
add
push
fs
arpl
mov
imul
mov
xchg
sarb
sbb
mov
sbb
rcl
out
xor
stc
inc
outsl
ret
loope
daa
cmp
xchg
in
pop
fildll
mov
in
xor
sti
js
mov
pop
lods
sbbl
imul
cmpsb
clc
mov
ret
mov
xor
push
int3
lock
stc
stc
enter
or
fldl
xchg
pop
dec
cmp
mov
xor
divl
push
and
imul
ret
xlat
out
pop
jnp
pop
sub
mov
mov
out
cmp
test
or
movsb
shll
dec
or
mov
dec
pusha
sub
shlb
mov
or
jmp
outsb
cmp
test
cmp
cmp
adc
pop
xlat
push
inc
rcrb
xor
xchg
pop
fsubl
xchg
mov
xchg
outsl
xchg
popf
inc
data16
out
cmpsb
adc
jmp
dec
movsb
sub
mov
add
aad
sbb
mov
jecxz
or
cmpsl
aas
lock
add
popa
jmp
push
adc
repz
push
call
push
jge
inc
pop
or
dec
xchg
incl
test
dec
lock
lahf
movsb
hlt
inc
pop
xchg
subb
iret
sbb
dec
icebp
rolb
aad
xchg
cmp
daa
outsl
roll
lea
in
ss
adc
inc
cld
and
pop
jmp
fs
aam
cmp
fldenv
mov
add
mov
jecxz
leave
jmp
outsb
jg
in
mov
stc
xor
pop
and
in
xchg
mov
aas
pushw
fmuls
or
jge
mov
push
nop
push
push
sbb
xchg
xor
dec
cmpsb
out
mov
sar
das
push
fmull
sbb
lea
mov
mov
adc
pop
push
cmp
lock
icebp
mov
pop
mov
sub
ja
popf
imul
pusha
jecxz
repnz
and
pop
insb
inc
dec
mov
mov
arpl
hlt
fidivrl
mov
dec
addr16
push
dec
mov
dec
cmp
sbbb
dec
cs
lock
loopne
sbb
jecxz
push
aam
lcall
cltd
imul
loopne
adc
outsb
scas
push
int
push
fld
fists
jns
mov
in
cmp
cld
out
and
mov
lea
mov
test
in
cs
test
hlt
dec
fcmovne
adc
cmp
mov
inc
mov
push
pop
lds
inc
xor
mov
int
popa
ret
pop
lret
int
stos
decl
pop
push
mov
xchg
push
into
add
dec
popf
push
fbld
rcrb
ljmp
out
outsb
cmp
xchg
cmpb
popa
and
or
lods
lock
adc
mov
aas
fiaddl
dec
clc
push
mov
adc
xor
lahf
into
dec
add
ficoms
test
and
in
push
push
push
adcb
movsl
lods
sbb
pushl
stos
jne
pop
loop
insb
movsl
jb
mov
add
mov
push
lds
out
rcll
jp
push
sti
test
in
sub
mov
imul
or
add
fs
xchg
add
stc
sahf
or
lret
mov
push
push
jae
andl
dec
jbe
insb
ret
mov
inc
addb
or
dec
jge
call
cmp
mov
adc
aad
and
lahf
or
sbb
adc
es
scas
mov
push
idivb
or
fisubrs
div
lea
sbb
jl
push
dec
arpl
dec
xchg
addr16
dec
rcr
hlt
cmp
cli
jmp
or
test
mov
stc
fdivrs
or
and
mov
xor
add
push
xlat
dec
in
fdivp
popa
pop
xchg
or
inc
fistpl
sbb
loop
gs
sub
aam
sti
jnp
add
iret
test
pop
fwait
rcrl
scas
and
or
fidivrs
adc
rol
add
in
add
xchg
icebp
inc
rcr
xchg
cwtl
mov
fwait
mov
call
pop
imul
notl
cs
insl
xchg
hlt
bound
or
fwait
cmp
xor
sbb
sub
fxch
sbb
ret
xchg
jns
repz
push
ss
call
xchg
sbb
fdivrl
das
dec
inc
gs
shlb
gs
pop
inc
push
xchg
in
dec
scas
roll
test
inc
jp
adc
inc
jne
xor
pop
rcrb
dec
mov
jl
addl
fsubrl
lcall
dec
or
cvtdq2ps
loope
cs
jnp
ljmp
lds
out
xor
bound
pop
dec
imul
testb
xor
push
dec
mov
dec
or
and
aam
mov
xchg
sbb
das
xor
cs
es
mov
je
jmp
cmp
inc
das
sbb
movsl
imul
aam
jmp
jmp
sbb
cmp
outsl
nop
xchg
loopne
xchg
jecxz
data16
fwait
xchg
in
lret
push
loopne
xchg
add
pusha
sub
jns
xlat
int3
cwtl
icebp
inc
or
scas
in
lock
repz
dec
out
inc
xchg
in
inc
filds
idivl
xchg
das
out
xor
pop
pop
mov
into
sub
inc
jne
in
idivb
repz
mov
daa
mov
jnp
pop
xchg
cmp
enter
sarb
negl
adc
movsl
cmp
xlat
jp
pop
insl
mov
insb
lret
inc
into
dec
jg
lods
cmp
in
iret
dec
jmp
daa
negl
jno
in
popf
aas
add
lret
data16
jle
imul
xor
mov
mov
mov
inc
xchg
cli
es
inc
push
mov
cs
mov
push
xchg
test
cwtl
jo
push
push
dec
inc
aad
dec
jnp
mov
sti
mov
inc
test
dec
gs
mov
inc
xchg
es
cmc
pop
test
shrb
xor
mov
outsb
cmp
adc
or
lods
sbb
into
aas
dec
or
xlat
jo
stos
xor
xchg
push
fmull
mov
sub
adc
in
nop
js
jp
mov
mov
cld
or
jns
mov
gs
in
cli
dec
lds
fstl
stos
mov
popa
sub
insl
mov
insb
mov
outsl
dec
pop
cmp
lods
icebp
movsb
dec
push
lret
dec
int
cwtl
outsb
sbb
dec
shll
add
and
imulb
pop
or
or
ret
das
leave
aam
mov
or
or
outsb
inc
bound
jns
jg
dec
imull
cwtl
add
xchg
jl
fs
mov
xor
or
negb
sub
sahf
push
sbb
loopne
insb
adc
jecxz
arpl
xchg
iret
sbb
push
mov
xor
movsb
js
adc
fisttps
xor
lods
inc
popa
pop
cmpl
in
ja
cmpsb
scas
outsb
neg
and
out
test
xchg
pop
push
sbbb
push
ljmp
cld
pusha
jge
dec
les
mov
loope
sti
imulb
fwait
jno
mov
sbb
add
scas
cmpsb
dec
movsl
shrb
adc
mov
xchg
sub
sbb
shlw
pop
xchg
dec
ret
out
sub
pop
pop
mov
into
sbb
or
pop
icebp
jmp
cmp
loope
jl
or
sbbb
jno
clc
out
daa
ss
scas
push
pop
inc
inc
into
push
xor
mov
daa
sub
and
clc
clc
push
fimull
and
dec
mov
inc
mov
pop
xor
push
mov
fwait
repnz
cwtl
push
or
jnp
fsub
cmp
fstp
sbb
pushaw
dec
test
imul
fnstcw
cmp
xor
sti
rcr
mov
jge
mov
sahf
xchg
pop
into
cld
nop
sub
push
ss
jle
lret
out
xchg
aas
repnz
dec
scas
push
lods
shll
mov
gs
pop
inc
and
push
adc
sub
or
push
gs
fisttpl
push
jns
mov
jg
inc
inc
ret
int
xchg
xchg
popf
inc
inc
sbb
xor
mov
and
mov
push
mov
filds
or
mov
lahf
and
mov
push
jle
ror
test
add
in
mov
push
stos
aad
fistps
mov
clc
cmp
cmp
hlt
rorl
jmp
fwait
jmp
jge
cmp
mov
std
dec
daa
cmpsl
stc
insl
sub
adc
fwait
test
ret
clc
insl
ret
hlt
dec
push
fwait
inc
and
and
pop
out
cmp
jge
jmp
lock
sarb
ffreep
icebp
mov
js
imul
mov
hlt
xchg
jb
pop
inc
pop
mov
lret
mov
and
add
rcr
and
mov
arpl
stc
imul
xchg
das
push
sar
leave
jmp
out
jo
jbe
repnz
dec
mov
push
ljmp
sarb
es
and
push
lock
sbb
faddl
movsb
insb
nop
lds
cmpsl
lods
roll
or
push
push
xchg
repz
rcrl
sbb
js
les
fwait
dec
clc
sbb
ret
fsubl
call
add
pop
mov
sbb
into
inc
jnp
fildll
or
or
stos
cs
les
aad
mov
iret
xorl
pop
imul
and
outsb
sbb
adc
insb
xchg
loope
repz
jp
aaa
push
pop
ss
pop
rcr
xchg
and
stc
insl
adc
in
cmp
jg
add
mov
jecxz
adc
jge
add
mov
mov
cmp
jno
int3
jb
cmp
jl
add
rclb
and
popa
inc
ret
addl
repz
dec
fcmovnbe
adc
daa
mov
cs
pop
sbb
inc
inc
mov
xchg
insb
cli
arpl
push
and
add
sbb
pop
xor
popa
mov
mov
adc
cmpsl
out
pop
sahf
inc
push
inc
aad
dec
cmp
inc
or
pop
xchg
cmpsl
dec
cltd
sbb
xchg
adc
inc
and
test
movups
cmp
cmp
dec
xchg
push
js
stos
test
jecxz
pusha
xor
pusha
shr
fsubrs
int3
mov
shl
dec
push
aaa
xchg
add
or
movsl
jo
test
fildll
inc
mov
and
bound
dec
addr16
xorl
pop
push
lock
subl
rcl
and
dec
sub
pop
mov
pop
or
mov
scas
xor
inc
pop
xchg
adc
push
fs
add
mov
or
int3
into
icebp
mov
je
pop
inc
sub
hlt
add
push
stos
sti
shrb
adc
cmp
sar
imul
pop
xchg
pop
jb
and
lea
fwait
fwait
inc
xchg
jl
sbb
fcoms
shl
cli
pop
mov
dec
xor
rorb
mov
repnz
inc
mov
fidivrs
fldl
jne
dec
das
push
dec
in
int
in
or
dec
cltd
cmpsl
imul
je
pop
mov
repz
repnz
add
rolb
insl
inc
pop
pop
mov
cmp
es
sti
push
in
dec
gs
inc
inc
in
rcrl
dec
aad
add
inc
xchg
inc
out
lock
iret
push
jl
adc
adc
notl
sub
xchg
sub
pop
jmp
std
sub
pop
sub
mov
cld
mov
cmp
sub
aaa
mov
call
je
add
in
lods
push
ljmp
les
loopne
push
movsl
xor
stos
in
mov
repz
out
dec
jge
cmove
mov
mov
sbb
or
or
and
scas
stos
cmp
cmp
xor
cmpsb
sbb
cli
cmp
fstpt
icebp
sub
mov
stos
and
jo
movsb
movsb
loop
insb
xchg
jg
mov
idiv
pop
fadds
cwtl
imull
shlb
fisubl
addr16
mov
add
dec
adc
dec
mov
add
aad
into
outsb
jge
pmaxsw
in
jbe
cmpsl
sbb
add
out
lcall
in
add
mov
cli
imul
test
inc
repnz
cmp
leave
push
mov
inc
lock
outsb
iret
or
sbb
mov
sahf
sbb
and
icebp
sub
test
std
call
cmp
push
jle
lret
insl
inc
adc
in
push
clc
gs
push
xchg
icebp
sti
popa
jg
pop
jae
push
shrl
lock
in
test
out
add
push
add
test
cmp
lahf
inc
sbb
cs
test
add
fidivl
daa
fwait
jge
int3
leave
rorb
cwtl
gs
icebp
jmp
in
dec
sub
popa
jmp
and
fstpt
imul
imul
lret
mov
push
mov
ja
stos
push
fdivl
fs
jl
ss
out
and
jae
or
call
js
dec
inc
jp
dec
inc
inc
mul
inc
mov
or
stos
std
clc
dec
jmp
jnp
sub
push
push
out
push
inc
popa
add
inc
in
popa
pop
mov
pop
cmp
std
sub
push
outsb
jnp
ljmp
jmp
sbb
xor
das
sti
mov
nop
adc
out
popf
out
mov
lret
outsb
or
sub
filds
fidivl
std
imul
sbb
inc
fsubs
push
inc
in
inc
jmp
pop
jmp
jae
or
sbb
cmp
ret
sti
fcmove
cmp
xchg
jge
mov
add
fimull
jns
push
sub
sub
lahf
in
pop
mov
mov
subb
inc
inc
jae
push
test
pop
ret
adc
or
and
out
and
pop
out
pushf
arpl
cwtl
addr16
mov
sti
sub
push
clc
fisubrs
aad
je
hlt
call
cmp
fmull
jno
lahf
arpl
xchg
test
in
jl
add
ret
out
rdpmc
cmp
idivl
mov
sub
test
or
pop
adc
jp
das
and
dec
xor
fidivrs
addr16
insl
test
lcall
out
call
pop
push
in
xchg
mov
popa
sub
fwait
pop
ljmp
mov
pop
lret
inc
fmull
push
fsub
pusha
repz
push
dec
fs
sahf
or
sub
sub
dec
or
int
pop
stos
jge
add
dec
fists
jne
call
or
inc
cmp
cwtl
add
je
sahf
inc
mov
push
std
aam
sub
xchg
inc
lret
lret
bound
inc
rorl
enter
add
dec
pop
popa
mov
data16
jmp
and
sub
cmpsl
fbld
add
mov
shlb
dec
inc
lds
dec
or
jg
jmp
sahf
inc
lahf
or
hlt
lods
pop
mov
sahf
sbb
push
rorl
sbb
movsl
in
jnp
cmp
inc
sub
popf
or
mov
gs
adc
add
popa
jmp
sbb
arpl
outsb
dec
pusha
jno
dec
test
out
pop
in
insl
movsb
repz
sbb
inc
cmpsl
dec
jmp
pop
cmp
lret
test
and
scas
sti
pop
ss
into
xor
addr16
jno
out
jnp
mov
and
ljmp
mov
and
insl
push
pop
mov
pop
ret
les
bound
push
jno
mov
insb
aas
pushf
insb
xchg
clc
scas
repnz
or
dec
leave
pop
cmp
fstl
cmp
push
sbb
dec
mov
lds
dec
int3
or
xchg
cmpsl
iret
dec
push
daa
imul
mov
cld
test
inc
jl
jne
sbb
or
cltd
add
add
in
jg
in
movl
stc
in
inc
adc
nop
xor
idiv
ljmp
dec
push
jecxz
lds
push
push
mov
sbb
sbb
push
imul
sbb
gs
into
jb
cmp
mov
sbb
stc
mov
out
out
fwait
je
aas
repnz
cmpsl
iret
mov
test
xchg
inc
push
xchg
sbb
inc
and
sub
sub
dec
inc
or
cmc
adc
add
jmp
out
mov
pop
pop
and
scas
cmpsl
lahf
adc
pop
stc
mov
lret
pop
mov
pop
xchg
mov
inc
loop
inc
lret
inc
dec
xchg
pushf
or
aas
mov
loope
aaa
dec
add
fsubl
aad
into
mov
insl
inc
jne
out
imul
sarl
push
lret
out
push
xor
loop
inc
sbb
mov
std
nop
mov
xchg
loop
aaa
fbstp
dec
jo
arpl
iret
xlat
je
inc
in
pop
cli
scas
cmp
inc
js
andl
clc
mov
fimull
jb
mov
jle
insl
int
cmp
loopne
outsb
imul
cmp
icebp
cmp
leave
imul
loopne
push
inc
dec
jns
fsubrs
push
stos
inc
or
xor
and
stos
sbb
xchg
stos
shl
iret
clc
xlat
movsl
ljmp
aaa
jnp
je
ret
jmp
lret
je
pop
mov
push
cld
fcmovnbe
sub
cmp
js
adc
ficomps
mov
push
push
in
inc
mov
mov
jae
mov
jbe
lock
int
sarb
fbld
mov
xorb
fs
add
and
popf
fcompl
xlat
movl
sub
xor
mov
and
dec
mov
add
jo
mov
push
ljmp
and
sub
pop
jnp
pop
nop
dec
in
sbb
int3
pop
adc
movsl
xchg
in
dec
daa
sub
xchg
jp
int3
sub
leave
pushf
jne
ffreep
dec
sahf
and
dec
jo
inc
dec
dec
mov
jo
cmc
cmpsb
aam
mov
in
lods
sub
imul
cld
inc
idivl
push
mov
sub
icebp
test
fstpl
add
bound
lock
mov
sbb
xchg
fsubp
push
add
pop
enter
add
loopne
mov
je
sub
mov
pop
ljmp
dec
push
mov
sbb
inc
sub
aaa
xor
js
adc
sbb
mov
mov
pop
iret
push
jecxz
jge
repz
fmull
sbb
aaa
inc
popa
lods
outsb
repz
or
adc
outsb
mov
les
add
dec
mov
imul
ljmp
sbb
cmpsb
jp
pop
mov
push
sub
dec
and
mov
jns
sgdtl
lea
sti
mov
mov
mov
daa
sub
fistpl
xchg
clc
inc
les
pop
cwtl
sub
setns
xlat
xlat
cwtl
dec
pop
jns
jle
repnz
dec
iret
test
aaa
rorb
les
daa
jns
dec
das
repnz
lods
enter
cwtl
jle
cmp
pop
mov
xor
rcrb
cmp
inc
ja
shlb
iret
sbb
xlat
imul
xchg
fsubrp
aas
jle
xchg
das
cs
int3
pop
sub
adc
inc
or
mov
cmp
jecxz
add
fstpt
pop
jbe
test
mov
sbb
imul
or
fsub
ljmp
dec
xchg
mov
sbb
jge
mov
xchg
shrb
push
cmp
les
xchg
jae
mov
sub
test
ret
ret
mov
sub
cmpsb
cld
pushf
out
cld
cwtl
out
lods
push
ja
imul
add
mov
ljmp
arpl
imul
out
lods
add
cmp
imul
out
lods
pop
xor
xchg
inc
ja
imul
jae
adc
inc
push
imul
add
jmp
sub
movsb
cmp
sub
aad
jns
adc
adc
add
cmp
testb
loop
ja
mov
jnp
insb
jb
pop
cmp
or
sbb
lret
add
add
subb
or
ror
movsl
test
fdivrl
or
insb
add
test
mov
cmp
and
imul
push
fmuls
in
bound
test
and
jp
data16
add
daa
stos
fs
cmpsl
mov
sbb
jmp
sbb
movsb
je
sbb
insl
dec
jno
js
pop
les
hlt
movsb
push
add
stos
xchg
rcl
das
jmp
pop
xor
popf
push
push
xchg
lret
sbb
das
icebp
cmp
mov
push
xorl
xchg
out
xchg
pop
rorb
or
sbb
ljmp
push
xor
pop
and
mov
push
leave
push
jl
and
nop
stos
icebp
sbb
dec
in
enter
lods
popa
jno
jge
into
sti
sbb
roll
iret
int
pusha
dec
sub
out
call
psubsw
scas
sub
mov
mov
mov
dec
mov
dec
andl
imul
nop
nop
add
sbb
and
mov
out
sbb
into
das
daa
int
and
stos
fiaddl
rcrb
jge
ret
ja
repz
pop
jecxz
lods
addr16
aam
jbe
fists
test
push
out
mov
out
dec
pushf
test
adc
xor
mov
cmp
mov
mov
subl
leave
or
jge
sahf
xchg
jmp
sub
mov
testl
adc
xchg
adc
add
mov
dec
les
je
push
add
and
mov
rclb
sbb
les
mov
or
cmp
dec
push
test
stos
xor
cwtl
imul
mov
push
mov
cmpsl
loope
xor
ret
mov
lock
sbb
pop
jo
fcompl
sahf
mov
mov
sub
fdivrs
add
int
out
filds
sbb
dec
in
mov
add
lods
dec
add
pop
and
insb
enter
pop
arpl
data16
je
push
in
push
lods
mov
pop
lods
stos
jmp
clc
jp
jge
adc
cli
xor
rcll
push
sub
push
push
call
xorb
jp
push
mov
sbb
outsl
icebp
sbb
or
xchg
hlt
jecxz
xchg
and
jmp
hlt
std
shrl
cltd
test
mov
loop
and
sub
lret
loopne
and
andb
repnz
and
sub
adc
adc
lods
popw
mov
xchg
std
call
mov
hlt
and
xchg
test
outsl
les
or
test
dec
cmp
cwtl
in
pushf
mov
popa
icebp
sub
push
mov
imul
imul
int3
outsb
dec
xorl
push
push
outsl
insb
dec
inc
sbbb
nop
pop
jmp
mov
rol
sbb
aaa
add
jle
pop
popa
cmp
popa
mov
push
push
cmc
xchg
test
xor
popa
shr
cltd
sub
push
cmp
outsb
lahf
cmpsb
add
sub
mov
jg
in
mov
push
sub
jge
xor
outsl
ja
pusha
push
fdivs
mov
adc
aaa
pop
aam
lock
repz
test
in
sahf
add
adc
inc
mov
or
ret
cmp
test
xchg
mov
dec
loope
insl
inc
jmp
push
jne
hlt
push
jo
ret
pop
pop
add
sbb
rcll
sub
push
pop
pop
out
mov
dec
inc
cmpsl
add
xor
fidivrl
cmpsb
dec
mov
je
out
and
push
push
lea
insb
inc
sbb
cmp
sub
test
push
cmp
xchg
in
cld
fimuls
push
sbb
adc
pop
pop
in
loop
js
cmp
cmp
hlt
push
jns
imul
pop
sbb
push
pavgw
cmc
lcall
dec
popa
lahf
insl
jo
dec
xor
or
sub
pop
add
inc
stc
divb
jmp
lret
sbb
or
jmp
loopne
mov
scas
jmp
add
sub
out
pop
lahf
inc
and
lahf
je
mov
mov
fsubr
stos
jbe
cmp
or
cmp
stos
icebp
cmpsb
gs
cmp
loop
testb
jnp
fs
cmpsb
and
inc
mov
mov
or
push
adc
sbb
dec
ljmp
inc
loop
add
cltd
pop
push
xlat
mov
or
mov
push
cmpsb
mov
jecxz
lret
aaa
mov
insb
or
add
or
icebp
dec
pop
popa
add
fdivs
mov
pop
stos
nop
jp
jbe
adc
shll
cmpsl
ja
cmp
push
outsb
dec
jg
or
xchg
mov
add
cmpsl
cmp
in
xlat
loope
shlb
add
loopne
icebp
stos
in
mov
into
incl
mov
sub
or
hlt
cmp
call
rolb
cmpb
mov
daa
shll
cmpsl
addr16
rol
pop
inc
cmp
loopne
pusha
sbb
fists
rcrl
add
cltd
mov
mov
cmp
xchg
xchg
push
xchg
mov
iret
int
add
mov
pop
jb
xchg
inc
cmpsl
mov
aas
sub
fcmovb
cmp
mov
and
cmp
pop
outsl
lds
sbb
and
enter
int
aas
xchg
push
dec
mov
outsb
adc
ja
push
daa
loop
shll
dec
mov
xor
mov
in
movl
adc
cmc
pushf
jp
or
xor
sbb
js
xor
mul
mov
inc
push
or
pop
popa
ret
xchg
inc
inc
popf
cltd
mov
icebp
sbb
js
arpl
xchg
iret
dec
add
jnp
test
es
ret
cmc
je
sub
pushw
sub
and
insb
mov
or
pop
pop
mov
clc
or
inc
repz
mov
iret
or
shll
mov
add
ficoml
mov
out
push
dec
sbb
insl
or
jl
out
arpl
xorb
pop
das
add
test
pusha
js
dec
xchg
dec
in
xor
add
jno
xor
push
dec
fiaddl
pop
xchg
adc
mov
jb
fs
pop
jmp
out
add
push
mov
inc
push
aad
bound
pop
cltd
daa
adc
pop
adc
and
sbb
push
inc
jnp
insb
and
dec
dec
xchg
push
fisubs
sbb
mov
icebp
testb
mov
mov
leave
test
inc
mov
jle
sarl
shrl
push
push
pop
or
cmpsb
mov
mov
movsb
add
and
or
cmp
shl
sbb
dec
push
loop
dec
push
cmpsb
xchg
push
arpl
xchg
cmpsb
in
add
push
imul
enter
out
jae
out
jo
mov
sbb
add
jmp
data16
inc
icebp
enter
jl
sbb
je
jg
push
shlb
mov
pop
dec
leave
pop
outsl
push
push
xchg
pushw
lock
pop
or
addr16
push
subl
push
sub
push
hlt
push
cs
das
int3
sbb
repnz
and
int3
or
inc
mov
loop
push
push
mov
adcl
mov
dec
mov
bound
out
xor
lret
pop
daa
mov
jge
mov
pusha
adc
cmp
mov
mov
or
jnp
andb
fs
dec
in
in
fcoms
sbb
cmp
jno
sub
cmpsl
mov
out
movsl
loope
sbb
inc
pop
sub
test
and
pop
popa
repnz
or
pop
pop
adc
mov
sbb
inc
xchg
dec
in
stos
jecxz
aam
sbb
mov
and
sbbb
jbe
icebp
imul
pop
gs
out
cmp
sbb
dec
faddl
sbb
xchg
into
ret
inc
loope
xor
pop
sub
jo
sahf
cmpsb
lods
leave
cmpsb
adc
shlb
jnp
sbb
xchg
subl
jg
je
cmp
mov
add
pop
leave
mov
pop
jl
fdivrl
add
ret
test
dec
lods
inc
inc
push
sub
push
xchg
pop
insb
repz
out
bound
pop
lock
xchg
sbb
xchg
sbb
pop
mov
aad
je
imul
inc
data16
in
out
and
loopne
jbe
iret
pop
xchg
cmp
lret
push
sbb
add
ds
dec
imul
roll
ljmp
pop
daa
xor
mov
lea
sbb
cmc
and
pop
cli
stos
andl
inc
incl
jmp
jbe
sbb
sub
jecxz
mov
add
push
xchg
cmpb
mov
mov
sbb
pop
loope
call
inc
push
outsb
sub
jmp
cmc
add
andl
into
outsl
andb
lock
mov
sub
ret
xor
mov
xor
insl
and
aaa
push
mov
mov
out
push
das
mov
aas
dec
jge
sbb
dec
nop
sbb
aaa
clc
mov
cld
mov
call
movsb
or
dec
cwtl
lods
add
cmpsl
add
mov
insb
and
addr16
mov
fdivs
or
xchg
adc
dec
jno
into
pop
mov
js
pop
pop
sbb
mov
sub
lea
out
inc
pop
leave
aad
mov
mov
xor
and
inc
inc
mov
cld
or
pop
iret
rorb
mov
pusha
popa
loop
enter
sub
call
adc
into
pop
iret
rorb
loop
aam
dec
pop
ret
cwtl
add
fmuls
xchg
mov
cmp
jmp
mov
inc
jo
or
mov
out
sub
push
gs
inc
lret
sbb
inc
mov
and
dec
faddl
mov
lret
xor
xor
aam
test
push
mov
push
jmp
pop
dec
lods
push
es
sbb
adc
xchg
jmp
mov
daa
mov
sbb
in
loopne
xor
test
lods
jnp
xchg
fisttpl
pop
prefetchw
lret
test
pusha
cltd
out
lcall
ljmp
in
fstpl
dec
or
mov
mov
pop
movsl
jmp
loopne
xchg
in
pmuludq
lret
icebp
xchg
lret
lea
rorl
pushf
loope
in
lret
lret
jae
std
iret
push
push
mov
fdivrl
fbld
sbb
into
push
mov
add
adcl
sub
xor
subb
lods
push
xor
and
pushf
xchg
call
add
adc
js
gs
pop
mov
xor
and
addr16
bnd
or
sbbb
mov
lea
xor
adc
mov
or
mov
jb
lahf
leave
fdivl
stos
jns
mov
pushf
dec
std
jbe
repnz
pop
pushf
stos
jo
sbb
pop
ret
mov
mov
inc
inc
push
push
ror
sub
cmc
xchg
dec
fcomps
add
pop
add
dec
shrb
and
or
insb
je
aad
jl
sbb
mov
push
out
jae
fstps
fmulp
lods
push
push
xor
dec
mov
inc
outsl
cmpsl
jmp
es
mov
fnstenv
lret
gs
jmp
loope
and
dec
addr16
xor
push
scas
push
and
adc
sub
mov
or
in
fs
scas
sub
sbb
popl
mov
sbb
jmp
pusha
imul
push
mov
fs
and
xor
lret
mov
fdivl
repnz
pop
dec
sbb
mov
add
daa
ds
jg
inc
cli
stos
or
lock
in
loopne
sub
loope
dec
or
mov
xchg
xchg
pop
nop
outsl
push
xchg
pop
pop
sbb
and
or
dec
call
scas
ds
sbb
inc
incb
mov
loopne
and
jle
rorl
outsb
xor
xor
cmp
testl
mov
fcoms
jg
jmp
and
pop
pop
insb
outsl
dec
push
testl
in
repz
movsb
mov
dec
adc
outsb
inc
xchg
add
mov
xor
mov
or
inc
out
int3
fwait
mov
cmp
inc
push
lret
lods
lcall
sub
mul
mov
sbb
cld
jg
and
ret
dec
mov
or
mov
inc
xchg
xor
mov
add
sar
dec
push
aaa
cmpsl
dec
test
in
xchg
dec
mov
mov
dec
pusha
in
pop
mov
repnz
outsb
push
pop
ret
filds
sbb
icebp
mov
loop
pop
mov
push
es
mov
mov
popf
mov
icebp
cmp
adc
push
jns
imul
fistl
loop
pop
lcall
into
psrld
stos
ja
add
push
or
adc
sti
fcmovne
xor
or
loop
mov
adc
push
add
dec
lock
loope,pt
aam
dec
rolb
out
cmpsl
pop
nop
lock
ljmp
cmpsb
pop
in
jne
pop
out
mov
out
loop
iret
movsb
pop
pushf
push
dec
dec
sarb
outsl
jnp
ds
ja
dec
sub
or
inc
and
mov
cmp
mov
cmp
dec
movb
imul
mov
jg
push
dec
ret
int
test
adc
dec
imul
stc
stos
lock
or
mov
out
mov
out
test
lods
dec
dec
call
mov
sbb
dec
arpl
pop
insb
andps
xchg
mov
pop
andb
sbb
cwtl
jecxz
pusha
jmp
or
test
push
xor
pushf
inc
sti
sti
dec
pop
test
or
loopne
dec
lock
out
pop
xchg
cli
cwtl
fcoml
cmp
cmp
fstpl
adc
in
jb
outsb
sti
mov
stc
mov
jp
sbb
and
jecxz
fsubs
icebp
mov
sbb
cld
pop
ljmp
mov
clc
xlat
mov
push
movsl
je
ds
mov
lods
outsl
xchg
jge
in
outsb
sbb
frstor
call
sbb
and
dec
push
and
mov
fidivl
pop
ja
xorl
outsb
loope
jg
lock
push
ret
add
inc
dec
xchg
cmp
ret
insl
cmpsl
andl
sub
jg
mov
pop
imul
or
push
cltd
fldl
loope
pop
xchg
clc
ljmp
mov
adc
sbb
and
mov
mov
inc
dec
jb
add
xchg
cmp
xor
out
mov
inc
jmp
bound
adc
push
inc
jae
mov
pop
sub
mov
call
mov
or
arpl
popf
cmpl
push
in
shlb
xor
or
xchg
jp
xor
cwtl
sbb
arpl
push
das
mov
cltd
push
xchg
shll
add
orb
xchg
mov
inc
push
cmpsl
or
sbb
pop
mov
lock
mov
out
dec
pushf
in
xchg
inc
daa
jge
lahf
add
jne
ret
mov
scas
enter
adc
daa
fs
cmp
js
subl
inc
add
insb
or
in
call
cmp
xchg
lcall
out
adc
pusha
jg
rcll
or
subb
pop
clc
cltd
mov
sub
cli
loop
cmc
shrl
fcompl
push
cmp
rorb
out
data16
sti
jp
pop
test
test
int3
sbb
cmp
ret
push
or
notb
xlat
sub
add
loopne
iret
outsl
push
fsts
sbb
in
ja
das
fstps
cmpl
ja
sbbl
push
mov
mov
mov
negb
mov
movsb
jnp
repz
dec
sti
sbb
cld
cwtl
in
push
rcll
and
dec
out
xorl
in
rcl
cli
imul
imul
in
jo
mov
test
mov
inc
inc
data16
cmp
xor
mov
std
pop
loop
jb
dec
dec
and
xchg
mov
inc
in
sub
push
das
mov
cmpsl
lods
cmp
or
jns
mov
hlt
xchg
bound
push
push
outsl
loop
loop
fcomps
fptan
push
dec
fisubrl
lods
out
push
adc
mov
mov
icebp
pusha
pop
mov
fsubp
inc
cmpsb
popa
arpl
rcll
imul
mov
out
bound
jle
ds
lret
pop
or
push
push
jo
imul
fstps
arpl
out
popa
add
stos
outsl
flds
jl
and
out
xchg
out
xchg
adc
mov
xchg
adc
xor
dec
out
jp
cmp
cwtl
push
pop
imul
jl
adcl
push
add
or
mov
mov
mov
push
les
pop
mov
or
lods
add
sbb
and
popf
xchg
or
mov
lahf
xchg
call
subb
sarb
adc
cmova
sbb
pop
in
xor
fcomi
cltd
fisubrl
push
pop
and
add
inc
jne
pop
cld
pop
push
or
pop
les
fbstp
test
push
lcall
test
movsb
shl
xchg
imul
pop
sbb
out
sbb
nop
loopne
cli
sbb
stc
cmp
jbe
or
inc
loope
fsubp
sbb
nop
lret
cmpsb
xlat
in
jmp
in
arpl
add
xor
dec
push
adc
test
cli
cld
scas
test
jle
xor
lods
add
mov
jb
xchg
scas
inc
enter
push
dec
test
inc
cwtl
add
sbb
xor
inc
sub
je
dec
ret
movsb
sbb
cli
jbe
xchg
stc
pushf
dec
cmpsl
scas
xchg
ret
insb
push
ja
or
lds
cmp
jecxz
push
sub
shll
mov
in
cmp
jecxz
jne
dec
push
dec
jns
dec
or
push
stc
mov
jae
bound
out
sub
fld1
push
push
sbb
rclb
lods
outsl
aam
vpunpcklqdq
mov
ja
pop
mov
ljmp
pop
mov
jecxz
or
imul
or
ljmp
dec
sarb
shr
inc
cli
leave
inc
test
inc
testl
pop
add
or
clc
shlb
cmp
cwtl
fcom
inc
call
les
dec
inc
scas
cwtl
and
test
inc
add
pop
lds
mov
call
divl
dec
iret
cmp
ret
jo
and
ja
dec
in
sbb
imull
xor
pop
cwtl
jecxz
jbe
stos
inc
repz
jecxz
mov
dec
outsl
jge
scas
ret
movsb
mov
push
push
mov
add
pop
addr16
or
stc
xchg
push
in
test
insb
sub
pop
pop
xor
or
aas
stc
mov
add
in
mov
dec
in
cmp
cmpb
repz
mov
ja
sbb
fstps
ja,pn
pop
mov
test
sub
jmp
pop
jmp
outsl
sbb
cwtl
inc
mov
js
jae
or
dec
cmc
mov
mov
addr16
sub
fdivs
cmp
mov
cmpsb
xchg
stos
daa
pop
insb
mov
int3
rcrl
pop
arpl
ja
cmp
lret
int3
mov
rorb
xor
mov
lret
imul
jb
faddl
cmpsl
in
pop
aam
sub
hlt
rolb
in
mov
test
pop
cmp
loop
xchg
jg
icebp
data16
cld
das
add
leave
in
jns
jge
shlb
xor
and
dec
jg
xchg
cmc
pop
out
sbb
hlt
sub
and
insb
mov
jp
jmp
cmp
stc
sti
ret
mov
add
mov
aad
inc
add
dec
rorl
rcrb
ret
jl
sbb
pop
test
push
int
repz
clc
or
mov
test
in
lret
outsl
aam
lds
lock
dec
dec
test
mov
shlb
jecxz
addr16
push
pop
push
inc
rolb
xchg
mov
mov
pmaddwd
fbld
cmp
mov
and
jecxz
pushf
je
mov
cmp
dec
out
and
cltd
sbb
add
mov
cmp
lret
je
out
lea
cmpsb
and
inc
adcl
out
cmp
dec
fistps
sub
data16
and
mov
dec
xchg
dec
and
adc
pop
xchg
rorb
push
mov
jcxz
mov
xchg
mov
das
dec
mov
and
add
in
sbb
rcrb
sbb
pop
xor
dec
jecxz
pop
xchg
loopne
or
and
ret
sbb
dec
call
in
test
inc
jge
loope
lcall
pop
adc
pop
sub
shll
hlt
jle
in
and
aaa
shll
lret
xorl
fistl
jmp
or
out
sbb
shlb
enter
jle
fcompl
sbb
adc
xchg
mov
sbb
loopne
dec
ja
inc
mov
gs
out
xorl
sub
cmp
add
scas
cmc
stos
or
or
lret
icebp
pop
add
pop
xor
jle
push
cmp
ret
test
xor
popf
jmp
pop
cwtl
lret
sbb
rol
cmpsl
adc
test
cmpsb
add
pop
aam
adc
repnz
cmp
or
mov
repz
iret
or
sbb
xchg
in
pop
roll
cmp
je
fbstp
mov
and
adc
cmpsl
in
jg
mov
lock
andb
sahf
test
lcall
xchg
and
jmp
xchg
popa
xchg
sub
jg
test
dec
cmpsl
cmp
les
test
cli
clc
call
push
jmp
sub
int
fdivr
mov
testb
inc
pop
call
out
fwait
mov
les
mov
mov
dec
cmp
addb
push
jns
imul
jle
inc
js
and
mov
mov
leave
movsl
adc
daa
mov
and
movsb
jl
hlt
lods
leave
aam
push
xchg
cmp
mov
addb
cmp
lock
fs
jle
out
add
dec
jp
pop
in
mov
sub
in
pop
bound
test
mov
push
ret
or
and
test
lea
cmc
push
daa
popa
mov
jns
in
inc
aad
push
outsb
mov
and
lods
sbb
add
pop
aas
adc
mov
sub
or
ljmp
dec
and
adc
mov
xor
cmpsb
jns
daa
or
lret
push
inc
stos
data16
mov
lret
dec
gs
xchg
sub
popa
scas
lock
adc
ficoml
stc
or
or
mov
iret
xchg
ljmp
in
inc
rcrb
jbe
dec
popw
push
test
dec
mov
fcomi
test
dec
or
outsb
sub
or
nop
inc
pusha
sbb
stc
test
pop
pop
sbb
pop
dec
out
and
xchg
mov
xlat
ret
aas
arpl
xor
inc
loopne
fstpt
jmp
shrl
faddl
mov
adc
testl
les
leave
push
arpl
rcrb
jle
ljmp
and
cmp
sbb
inc
lcall
inc
xchg
cmpsb
dec
mov
shrl
mov
inc
sub
mov
bound
xorl
lds
pop
out
mov
dec
inc
inc
push
mov
adc
dec
test
std
cmp
out
xlat
adc
xor
cli
sub
sti
pop
jnp
pop
cmp
sbb
call
lret
xor
lea
outsb
jle
lock
push
cmp
mov
adc
loopne
test
add
lock
pop
push
cmp
icebp
mov
jl
idivl
outsb
inc
out
xchg
in
adc
fisttps
lock
sbb
xor
push
jne
sbb
add
pop
jmp
dec
mov
imul
cld
pop
subl
push
xorb
aad
popa
aad
sarb
fisttps
into
imul
insb
and
into
pop
xchg
or
mov
push
ret
add
push
sbb
movsb
gs
pop
pop
dec
stos
insl
push
scas
lret
add
xor
pop
aaa
icebp
xchg
mov
iret
sub
dec
rorl
jge
or
addb
iret
push
addl
aaa
mov
insb
sub
out
loopne
imul
rolb
lds
les
pop
daa
adc
ljmp
pop
or
cmp
and
inc
aaa
add
pop
nop
rcrb
stos
popa
out
in
cld
not
jg
push
mov
push
in
xor
dec
push
call
jns
sub
push
stos
push
es
push
push
mov
and
icebp
pop
push
ret
bound
and
sbb
fadds
sahf
lahf
jecxz
dec
mov
jle
in
movsl
push
mov
or
ss
xor
sub
imul
mov
aaa
mov
lods
fs
inc
mov
xorb
gs
xchg
ficompl
sti
sub
jmp
jmp
xor
stos
fcomps
xor
add
inc
notl
in
aam
lret
xorl
jp
mov
mov
adc
pop
stc
adc
stos
push
dec
sti
inc
jo
mov
xlat
sub
add
pop
fcoml
push
jae
or
and
aad
sub
lret
testl
les
sbb
ds
popa
movsl
inc
add
sub
mov
adc
push
adc
jp
cmp
or
test
push
pushf
mov
mov
cmpsl
popa
mov
cmp
sub
inc
out
bound
jb
insl
pop
fstps
sub
rolb
jae
sub
dec
test
mov
inc
cmp
pop
les
or
gs
pop
lods
cmpsl
pop
lret
jno
sbb
or
imul
sbb
cmp
aaa
jne
cmp
adc
insl
and
lea
movl
sub
and
xchg
push
insl
das
rorb
dec
adc
dec
outsl
sbb
orl
sub
cs
xor
or
add
inc
gs
cmp
pop
subl
dec
rcrl
push
lods
bound
push
fwait
mov
xchg
jecxz
mov
movsb
cltd
push
orl
xchg
rcrb
add
sbb
push
ss
cmp
dec
into
and
dec
shll
sbb
fistps
push
sub
xor
mov
xor
loope
jno
popa
sahf
or
into
xchg
or
stos
inc
jbe
and
add
inc
ret
clc
fsubrs
mov
jmp
dec
mov
in
sub
out
and
mov
fwait
imul
repnz
pop
fidivs
cmpsl
mov
pop
fxtract
inc
jbe
fbstp
sbb
xchg
inc
fs
mov
lret
jo
iret
xchg
inc
xor
and
pop
adc
dec
lcall
add
xor
pop
push
xor
sub
inc
pop
xor
mov
ficomps
sbb
adc
movsl
lds
inc
dec
and
leave
cmp
jmp
cwtl
outsb
cmpsl
fwait
lods
dec
std
pusha
lret
fstpl
xor
xchg
dec
and
jbe
sub
aas
mov
bound
jo
xchg
int
mov
and
ljmp
aaa
mov
outsl
cmpsl
cmp
xchg
dec
rcl
inc
ret
loop
scas
out
sub
or
mov
lahf
sbb
inc
dec
fwait
addr16
dec
mov
jno
dec
int
stc
fsubs
jle
sub
jae
ret
in
ror
inc
enter
or
xchg
mov
iret
push
pop
out
nop
cmp
repz
popf
sahf
lret
test
cmp
mov
jmp
rcl
and
inc
sbb
cmpsl
sub
dec
sub
shl
movsb
les
icebp
fdivrs
fcoms
xor
pushf
inc
mov
inc
adc
pop
pop
loop
pop
dec
push
cmp
in
jg
sbb
ja
lret
mov
pop
cmpb
mov
js
sbb
rcrl
sbb
sub
lret
and
pop
xchg
mov
out
jnp
or
sbb
faddp
iret
in
push
mov
jbe
lock
popa
aam
cmp
inc
mov
out
pop
stos
popf
add
push
cmp
movsl
or
mov
out
mov
lret
lock
mov
pop
in
int3
xor
add
test
lcall
repnz
jmp
pusha
xchg
push
cmpsb
mov
jle
mov
xchg
push
popa
cmovno
dec
push
dec
jl
adc
scas
dec
std
clc
mov
adcb
test
popf
shl
or
mov
inc
fcomps
mov
lret
inc
ret
subb
insb
mov
mov
xlat
pop
sti
rorl
xor
push
iret
imul
jae
insl
loopne
aas
mov
out
loop
gs
xchg
adc
addr16
in
adc
out
add
or
cmpsb
or
mov
inc
sub
in
push
loop
mov
stos
xchg
icebp
or
pop
sub
inc
les
outsl
xchg
push
mov
cltd
cmpb
loopne
inc
cmp
pop
movsl
cmpsl
fdivrs
incb
pop
sbb
int
xchg
xchg
test
shlb
pop
rcll
outsb
and
movb
les
jbe
lahf
inc
xor
gs
inc
cmp
xor
cmpsl
push
jo
sbb
loop
and
sar
andb
xor
sahf
iret
test
ds
push
insb
test
mov
or
jae
mov
loope
xchg
imul
lods
sbb
sarb
sbb
add
jle
rcr
sbbb
test
scas
test
xchg
xor
pushf
mov
push
pushl
and
jae
mov
jb
enter
nop
mov
xchg
addb
nop
mov
in
fdiv
fstpl
sbb
rol
test
xchg
xchg
movsb
fiadds
push
pop
sahf
jmp
jp
jmp
mov
fcomip
push
jb
in
into
out
mov
or
fbld
fstpl
into
out
fistpl
adc
lock
xor
shl
mov
and
insb
bound
add
movsb
or
jnp
mov
cmp
das
adc
fmull
in
dec
jmp
and
jecxz
dec
pop
push
iret
aam
out
lea
das
sbb
mov
and
loope
in
int
loop
vpshab
clc
lret
cmpsl
sub
lcall
mov
sahf
je
mov
cmp
ds
inc
add
pop
cmpsb
pop
pop
jp
andl
sarl
in
fimull
jl
out
xor
out
in
sub
jno
or
sbb
lds
sbb
fwait
add
outsl
lret
in
lds
sbb
stos
stc
sti
popa
push
cmp
lahf
mov
shrb
imul
xchg
loopne
dec
rcl
in
gs
xchg
dec
xor
stc
xor
adc
icebp
lea
cld
xchg
sbb
aaa
fidivrs
xorl
int3
rorb
rolb
inc
dec
aas
rolb
arpl
pop
jecxz
sti
lock
inc
lret
outsl
gs
ds
inc
mov
pushf
gs
fidivrs
cmp
inc
push
push
pop
mull
cli
loope
test
or
and
hlt
push
fs
add
cmp
icebp
leave
cmp
roll
arpl
fidivl
cmp
lret
sub
lods
rcll
shlb
arpl
into
arpl
fnstenv
int
bound
arpl
dec
lret
push
xchg
jle
xchg
fdivl
dec
je
add
lock
dec
rorb
xor
lret
lret
xchg
cwtl
push
ja
lock
xchg
addl
xor
pop
cwtl
add
outsb
sbb
aaa
addb
add
jb
fisttpll
push
jp
cwtl
lcall
daa
sub
cltd
dec
call
jns
imul
dec
jae
shlb
insl
sti
mov
sbb
clc
push
pop
in
inc
pop
insl
and
sub
pop
roll
inc
adc
cmp
lahf
fs
iret
inc
jns
ds
mov
add
jp
or
in
movsb
jbe
icebp
mov
out
loope
movsl
xor
sbb
lea
xchg
popa
or
inc
pop
push
in
lea
mov
xor
push
inc
push
cli
sbb
scas
pop
inc
shl
dec
sbb
jne
pop
lods
jb
xchg
out
inc
push
cli
dec
ljmp
sbb
and
mov
movsl
mov
push
cmp
xor
ds
mov
sbb
sbb
pop
jne
dec
cmp
nop
pop
rolb
les
dec
cmp
pop
jmp
xor
pop
pop
lret
xor
and
movsl
out
arpl
popa
vpand
hlt
mov
aaa
pop
lods
lods
cmp
adc
push
cli
and
ljmp
xor
popa
stos
pop
jo
test
lcall
lahf
sbb
popf
cld
scas
cmp
adc
aas
inc
cwtl
xchg
scas
stc
xor
mov
add
and
dec
cmpsl
mov
add
mov
jge
ret
mov
jle
xor
not
inc
mov
jl
pop
pop
ljmp
je
lret
in
jnp
jg
add
cmpsl
add
push
sti
cwtl
mov
int
ret
stos
mov
cs
cmpsl
arpl
fistl
movsb
cltd
xchg
cwtl
leave
pushf
xchg
inc
sbb
sub
cmp
test
inc
dec
gs
and
xor
or
arpl
mov
jecxz
mov
jge
mov
sbb
out
mov
bound
mov
sbb
or
cmc
push
cmpsl
imul
lret
add
lds
popa
xor
jg
sub
dec
inc
insl
mov
add
inc
insl
ret
cmp
sub
xchg
rclb
or
dec
and
mov
and
add
repnz
mov
cmp
test
or
or
push
cmp
push
push
test
dec
out
insl
inc
add
imul
xor
xlat
jbe
jle
div
pop
shrb
or
fs
add
or
test
jmp
xchg
lea
loop
xchg
into
pop
rcr
das
push
inc
lea
gs
cmp
jecxz
inc
es
lods
or
push
lods
or
jecxz
dec
sbb
iret
loop
inc
mov
adc
fsub
out
shrb
repnz
jno
push
outsb
xchg
and
inc
jno
push
hlt
fmul
push
xor
xor
cwtl
repnz
xor
sbb
pusha
sbb
gs
xlat
push
nop
fadd
shrl
scas
fcomi
aad
out
inc
in
ss
jnp
mov
sbb
lret
mov
lock
add
xchg
adcb
jmp
add
cmpl
lock
xchg
xor
ss
outsb
jne
and
or
sarb
std
pop
push
jbe
mov
adc
inc
out
lods
and
dec
shlb
push
pop
xlat
arpl
lahf
jmp
es
sbb
adc
imul
sbb
outsl
data16
aad
scas
roll
int3
mov
int
mov
cwtl
pop
hlt
aaa
subl
and
cmp
xor
sub
jo
aas
fadds
bound
enter
popf
and
hlt
and
imul
fimull
test
scas
sbb
or
inc
iret
sbb
and
sub
xchg
sbb
lret
lret
mov
mov
out
sbb
mov
in
pop
mov
dec
jmp
xor
push
cmpsl
fwait
dec
mov
mov
into
test
jmp
sub
test
dec
dec
or
lods
out
cmpl
ss
push
jno
pushf
jns
pop
sbb
mov
das
lahf
inc
push
hlt
or
jb
imul
jecxz
lret
mov
mov
lret
hlt
ja
lods
push
shlb
es
xchg
pop
out
and
mov
xor
into
mov
jo
icebp
shl
lods
cltd
vmwrite
fxch
fwait
icebp
or
sbb
lret
jge
mov
aas
inc
fadd
mov
or
je
mov
sub
pop
inc
daa
and
daa
into
fistpl
ds
jo
cmp
fsub
sbb
popa
pop
jp
lock
mov
or
jno
and
pop
imul
xchg
mov
shlb
addr16
bound
mov
mov
xor
stos
inc
mov
test
jo
jnp
in
mov
inc
and
dec
lret
push
loopne
insb
lock
scas
add
idivl
cmpsb
jo
repnz
mov
jo
shr
fs
ljmp
scas
mov
add
or
jg
sub
sub
in
roll
xchg
or
mov
pop
jns
lock
push
repz
and
shll
rolb
out
jbe
sub
lods
inc
loope
and
push
sbb
sbb
inc
xchg
dec
fisttpll
dec
insl
push
pop
jge
into
push
pop
pop
in
jnp
add
pop
ljmp
mov
movsb
inc
dec
cmp
inc
sub
lahf
int3
sbb
shl
inc
cli
daa
loop
jb
jecxz
inc
pop
push
jge
xchg
hlt
dec
pop
jae
pop
pop
fsubr
dec
movsl
push
push
fnstenv
rcrl
push
pop
mov
into
sbb
dec
test
or
mov
or
fsubl
scas
jno
dec
mov
sbb
imul
cmc
add
ja
dec
cmpsl
inc
mov
xor
dec
sbb
inc
das
jl
adc
insl
jmp
adc
or
out
repnz
dec
mov
in
pop
pop
jmp
cmp
sub
icebp
inc
sbb
jge
les
into
shrb
cltd
hlt
insl
inc
dec
fdiv
imul
jge
ljmp
imul
push
in
cmpl
cltd
inc
insl
dec
push
or
jge
les
das
jno
dec
and
in
jno
neg
jg
leave
or
out
icebp
adc
cld
pop
add
jge
shlb
cmp
or
adc
jmp
dec
pushf
mov
cmp
add
push
dec
sub
subb
inc
add
jge
fdiv
inc
cmp
xchg
test
data16
or
inc
jmp
jge
stc
dec
dec
push
les
or
inc
dec
push
movsb
push
xor
xchg
add
inc
adc
bound
out
jo
out
cmc
pusha
xlat
ljmp
aad
and
pop
das
cltd
mov
movsb
imul
jmp
adc
insb
les
daa
je
dec
dec
push
movsb
pop
push
lea
inc
jo
iret
iret
push
mov
addr16
stos
daa
in
dec
fdivp
inc
inc
ss
stc
pop
mov
pop
jecxz
addb
or
scas
stos
add
loop
push
cli
fiadds
out
dec
ss
loope
sub
test
mov
sti
sub
rol
push
xor
xor
cmpb
ss
int3
jecxz
inc
pop
inc
repnz
sub
cmpsb
fidivl
in
insl
and
shrb
ret
mov
adc
adc
stos
mov
enter
gs
pusha
lret
inc
jmp
outsb
int3
sbb
jp
jno
xchg
jo
jnp
out
loopne
in
dec
lret
shr
test
cmp
mov
dec
or
addr16
out
adc
pop
pop
cmpsl
dec
push
push
aaa
test
push
push
rcrb
adc
aaa
or
jmp
cmp
popa
lret
pop
ret
pop
cli
cltd
jns
repnz
popa
inc
imul
scas
adc
mov
or
gs
push
fs
std
in
xchg
jae
sbb
das
fninit
test
adc
outsb
mov
lods
mov
mov
loope
mov
mov
cmp
je
lods
clc
push
lock
call
sbb
mov
add
sub
xrelease
mov
mov
push
cmpb
xchg
rorb
and
adc
loope
dec
add
nop
xchg
ss
inc
test
inc
ret
dec
push
mov
arpl
sub
fcomps
jno
lret
ja
jb
xor
lret
or
add
jnp
out
mov
dec
cmp
lea
mov
fisttps
jb
xor
xchg
shll
ss
mov
sbb
push
or
inc
or
dec
and
pop
ja
cmp
xchg
pop
sbb
cli
pushf
dec
fcmovu
cltd
jg
lods
sarl
mov
and
sti
mov
adc
fs
and
pop
jnp
dec
addr16
fucom
sub
jns
inc
adc
out
repnz
dec
loop
adc
or
pmuludq
cmpsb
xchg
add
iret
js
add
in
fcompl
xchg
addr16
mov
cwtl
or
hlt
add
cmp
stos
xchg
scas
dec
cwtl
ss
add
imul
cmc
das
fistl
push
vmovaps
xchg
cmp
ja
std
in
mov
dec
xchg
dec
jg
out
dec
inc
ljmp
arpl
jnp
or
fiaddl
pop
inc
push
test
popa
pop
push
jnp
cmp
push
hlt
or
jnp
clc
es
hlt
or
inc
push
jnp
clc
sbb
push
cmp
cmpsb
or
push
es
cli
sub
push
pop
sub
out
out
dec
cmp
sub
shlb
cld
mov
inc
out
push
jb
cmp
aam
les
mov
inc
pushf
mov
outsb
mov
dec
xor
fcmovbe
dec
and
ficoms
fs
into
les
pushf
lds
outsb
xchg
cwtl
inc
lcall
dec
negb
scas
cld
push
lds
jle
adc
notl
mov
jl
inc
inc
call
mov
mov
pop
add
fildl
std
adc
add
shrb
daa
pop
and
add
push
mov
xchg
jp
hlt
inc
out
in
cli
mov
sub
ss
ds
fldenv
das
or
test
xor
mov
fildl
add
and
popa
sbb
pop
in
fcom
je
sub
dec
cmp
inc
inc
subl
fisttps
stos
fs
jo
in
mov
xor
jb
in
jge
mov
aaa
aad
out
inc
icebp
stos
sub
mov
cmp
out
lcall
fistpll
push
rcrb
std
xchg
jbe
fsubs
sbb
enter
cmpb
rcll
loop
movsl
stc
jp
jge
mov
cwtl
and
test
sbb
dec
sbb
xchg
cli
repz
enter
leave
jecxz
adc
cmpsl
leave
inc
inc
sahf
mov
andb
and
out
dec
nop
popa
popf
shrl
xchg
in
popf
cmp
test
cmpl
sahf
cmp
or
icebp
add
or
js
lea
jo
sbb
repz
dec
cmc
inc
inc
and
insb
xchg
or
sbb
loope
sub
loop
insb
cmp
imul
gs
les
or
aad
mov
sbb
daa
jmp
sub
or
sbb
outsl
mov
out
or
mov
adc
lods
sbb
jg
adc
push
stos
xor
mov
jne
sbb
mov
rcrl
add
daa
in
insl
hlt
icebp
outsl
mov
cmp
nop
ljmp
jno
popw
lcall
inc
pop
push
push
mov
mov
xchg
aad
hlt
or
fmuls
nop
hlt
push
mov
adc
xchg
or
and
iret
or
mov
sub
filds
add
popa
mov
mov
test
icebp
push
cmp
mov
inc
lret
add
test
or
jl
mov
mov
outsb
inc
adc
mov
inc
incb
sti
sbb
and
xchg
and
push
lret
outsb
cmpsl
imul
dec
nop
or
jge
xor
in
add
lock
jae
sbb
daa
loop
nop
xor
mov
add
iret
push
dec
pop
push
sbb
mov
or
lcall
test
pop
daa
hlt
loopne
adc
dec
jbe
cwtl
lock
adc
dec
test
sub
fwait
aaa
bound
cmpsl
or
adc
in
dec
jge
out
xchg
das
inc
rol
addr16
jno
push
inc
mov
or
mov
cmpsl
sbb
jge
pop
test
je
pop
mov
inc
sub
sub
jnp
insl
cmp
das
subb
imul
or
nop
cld
or
repnz
inc
sub
xchg
pop
ljmp
xor
lret
xor
addl
cmp
inc
cmp
sub
sub
push
pop
or
push
inc
insl
lods
loope
add
cmp
test
lret
lods
loopne
loop
mov
cmp
iret
pop
imul
fiaddl
jmp
adc
dec
and
fwait
into
xchg
dec
scas
and
mov
xchg
jnp
inc
xchg
loopne
mov
jno
jge
add
or
fidivl
jno
lods
inc
xchg
dec
int3
popf
out
jp
iret
leave
insb
xchg
out
repz
add
sbb
jb
adc
mov
loop
outsb
or
cmpsb
out
shrl
sar
insl
cmp
cwtl
pop
dec
stc
mov
mov
jo
dec
sbb
jg
xor
in
aaa
xchg
hlt
add
jae
lds
mov
ss
pop
aas
mulb
das
loopne
mov
add
sub
std
add
xor
clc
add
insl
es
pop
enter
push
decl
jle
fsubs
cmp
stos
push
xor
mov
jle
push
out
fwait
cmc
iret
cli
inc
mov
ljmp
scas
cmp
xor
push
push
inc
jnp
cmpsl
cli
and
mov
andb
lret
repz
dec
sub
into
pop
fistpl
outsl
loope
cmp
and
mov
daa
xor
imul
sbb
ja
into
jae
test
arpl
and
dec
fldl
hlt
mov
cmp
out
jg
adc
stc
test
mov
add
cmp
add
pop
fnsave
daa
aam
pop
js
sbb
fwait
sub
sbb
arpl
repz
dec
mov
jne
adc
inc
mov
cmp
adc
pushf
cld
xchg
jo
adc
inc
adc
sbb
cmp
jmp
cmp
in
arpl
dec
xchg
inc
popa
mov
aaa
icebp
mov
shrl
movsb
mov
int3
sbb
inc
out
les
jno
pop
in
sbb
bound
pop
shll
xlat
or
in
push
test
lret
mov
xor
outsl
inc
out
inc
mull
out
out
out
lods
fs
popf
repnz
sbb
shll
jge
insl
inc
repz
xchg
pushf
psraw
test
xchg
pop
in
xchg
subl
mov
in
pop
add
pop
hlt
sub
mov
ss
sub
xor
dec
sub
test
mov
xchg
cmpsb
adc
cmp
mov
mov
sub
jecxz
pop
push
push
xor
xchg
fs
nop
and
and
sub
add
mov
inc
les
cmpsb
movsl
aas
sbbb
in
movsl
cwtl
or
dec
js
aam
test
loope
dec
xchg
jnp
add
in
arpl
das
jmp
sbb
leave
push
add
sbb
lds
int3
push
adc
data16
sbb
sub
xchg
sbb
mov
cli
or
adc
shrb
mull
xchg
inc
pop
daa
fdivrl
stos
mov
adc
add
data16
sbb
imul
in
push
in
cmp
or
mov
outsb
nop
xchg
out
pop
imul
fwait
and
ja
repnz
movsl
test
cmp
mov
js
popa
clc
hlt
mov
in
jmp
or
test
pushf
shr
aam
jle
sti
mov
sub
and
xchg
xchg
subb
mov
sub
addr16
test
je
decl
sbb
mov
push
clc
jnp
in
sbbl
cltd
fldenv
sarb
roll
popa
push
pop
out
jl
std
push
stos
push
loop
int
and
loopne
jns
or
pusha
mov
inc
jg
cmp
fucom
cs
enter
test
inc
arpl
inc
addr16
rorl
js
ljmp
xchg
sbb
mov
jno
les
sar
xchg
sbb
unpcklps
jb
xor
xchg
dec
in
sbb
push
arpl
mov
les
int3
adc
inc
popf
pop
inc
movsb
in
aad
cmp
scas
sub
inc
mov
dec
xchg
femms
jb
gs
std
dec
and
dec
insl
sbb
xor
or
xchg
sub
jmp
dec
roll
cli
call
cmp
repz
xor
int
inc
pop
push
mov
pop
cmpsl
in
mov
cmpxchg
mov
shrb
inc
mov
sub
mov
rorb
inc
fabs
daa
incl
ss
ds
shll
das
mov
xchg
lcall
out
mov
xor
fldt
addr16
out
dec
mov
fcoml
add
dec
aam
cmp
ret
invd
test
ljmp
rorb
and
mov
push
sti
fsubrs
popa
loop
dec
movb
in
loope
or
lock
or
loop
outsb
inc
ljmp
dec
bound
xchg
mov
pop
inc
in
jo
inc
outsb
add
mov
mov
lahf
dec
sbb
or
pop
jl
ficompl
fs
pop
sub
jl
gs
xchg
sub
lock
daa
pusha
mov
sub
sub
mov
cmp
scas
insl
jl
jecxz
cmpsl
fistpl
jecxz
and
in
xchg
rcl
int
jne
jle
mov
into
fsubp
cmp
jg
sbb
scas
pusha
mov
dec
fwait
xor
fs
or
or
aam
and
cmp
pop
stos
sub
sub
lods
cmc
jecxz
inc
pop
imul
dec
adc
push
mov
mov
jg
pop
dec
stos
mov
pop
or
inc
outsb
or
scas
inc
mov
cmp
push
cmp
lods
inc
sbb
xchg
dec
sahf
or
mov
iret
push
mov
or
aas
mov
add
sar
dec
fistl
shlb
testl
add
sti
adc
hlt
xor
inc
lds
rclb
les
inc
or
daa
or
outsb
inc
icebp
jo
sbb
fcoms
jge
dec
or
lods
in
mov
mov
lret
inc
scas
call
dec
sarl
bound
push
js
pop
imul
into
adc
xchg
mov
fs
arpl
add
ficomps
mov
js
insb
jbe
mov
stos
inc
and
cld
jge
ljmp
shll
inc
and
dec
jne
aas
divb
or
xchg
nop
dec
add
xor
roll
xor
sbb
dec
inc
in
dec
mov
scas
xchg
imul
fsts
dec
pusha
enter
mov
cmp
loopne
jecxz
push
sbb
aad
stc
adc
cmp
mov
cs
jno
outsb
push
call
mov
mov
popa
sub
popa
adc
lea
cmp
int3
xorb
and
or
je
add
cmp
adc
loop
leave
jo
stos
imul
push
mov
sub
xchg
jno
adc
jns
push
adc
roll
dec
lret
in
add
movsl
fcmovnbe
and
stos
aas
add
inc
xchg
add
sbb
mov
dec
mov
popa
add
jae
int3
out
adc
sarl
and
call
enter
push
inc
and
cmp
inc
adc
out
test
mov
mov
cwtl
and
lret
mov
sub
pop
cmp
push
add
cli
mov
jno
mov
fcomps
cmpsl
mov
mov
dec
inc
pop
pop
nopl
push
test
insl
lds
add
insl
outsl
pop
testb
stos
push
xlat
dec
dec
sbb
push
fdivrl
pop
mov
std
icebp
fadds
divl
stos
xor
or
adc
sub
ds
addl
mov
xchg
ficomps
sbb
sbb
lcall
jne
pop
aas
jo
aad
stos
pop
aad
mov
jmp
repnz
cld
mov
jg
mov
inc
dec
sbb
xchg
ret
aam
jbe
jl
aam
add
inc
inc
stc
dec
out
lahf
mov
fldl2e
iret
jmp
jmp
xchg
jbe
cli
loopne
inc
dec
lret
je
test
fsubrs
hlt
dec
lea
mov
cltd
cmp
inc
addr16
lods
pusha
push
and
xor
shlb
mov
jmp
push
pop
or
ja
pop
push
cmpsl
fnstcw
insb
pop
in
leave
xchg
dec
sbb
stc
push
or
inc
dec
in
dec
out
sbb
jp
push
clc
lret
jns
fidivl
mov
sbb
adc
out
lock
sbb
or
lahf
and
fs
stos
lods
lret
jmp
add
scas
push
xor
nop
mov
ret
fisttpll
xor
insl
add
movsb
in
lret
push
pop
or
fwait
lea
mov
inc
ret
inc
not
cmpsb
sub
rolb
mov
jg,pn
jp
sbb
xchg
sub
mov
dec
jge
std
xor
nop
dec
cmp
or
lods
dec
mov
hlt
iret
inc
cli
dec
ljmp
adc
mov
fstpl
sbb
cltd
pop
sub
icebp
cmp
adc
dec
push
xor
movsl
mov
sbb
pop
icebp
mov
aaa
lcall
arpl
js
scas
cltd
jp
sbb
xor
xor
sub
xor
ljmp
push
push
outsl
cltd
or
inc
jl
jno
add
cmp
fnsave
jnp
sub
data16
ss
js
std
dec
inc
dec
cmp
cltd
xor
xor
sbb
pop
push
or
mov
adc
pop
fdivrl
mov
outsb
pushf
adc
dec
pop
adcb
jns
or
aas
mov
xor
inc
jnp
cmpsl
mov
in
pop
pop
jno
mov
call
pop
xor
or
out
xchg
std
adc
mov
fidivrl
inc
in
mov
inc
loop
push
aam
dec
js
sbb
in
cwtl
aas
stc
outsl
pop
dec
jg
sub
test
jns
xchg
pop
mov
fs
mov
push
sti
vpaddsb
cmp
cld
jo
insl
int
bound
outsb
xchg
std
add
sahf
jnp
inc
lret
mov
sarl
movsl
int
sub
and
fistpll
cmp
sub
inc
sub
testl
leave
mov
sbb
popa
or
adc
add
dec
icebp
sbb
xchg
loopne
enter
pop
ja
or
mov
pop
mov
gs
test
jns
gs
insl
pop
dec
mov
jno
cmpsb
pop
inc
and
add
and
lods
aad
mov
roll
pusha
cmp
mov
push
test
xchg
dec
das
pop
into
jp
enter
arpl
cmpsl
jg
sbb
sbb
sbb
push
iret
pop
ficomps
out
dec
push
jo
xchg
shl
and
sti
imul
lcall
jb
mov
jecxz
int
xchg
das
fnstenv
shll
roll
pusha
insl
lcall
sti
jbe
sub
cli
lods
xchg
out
xchg
nop
imul
mov
dec
inc
jne
pop
xor
inc
add
sub
push
repnz
inc
mov
mull
xor
enter
adc
sahf
inc
leave
loope
push
sbb
or
ljmp
pop
sbb
dec
mov
test
jb
and
pop
les
add
aam
lock
push
ret
jne
sbb
inc
dec
je
sbb
in
add
in
popa
mov
adc
push
pop
scas
or
push
lahf
lret
fbld
loop
push
inc
pop
jno
dec
inc
mov
pop
call
ret
fcoms
or
lret
or
jmp
xor
insl
call
add
dec
pop
jno
out
test
pop
push
int3
jnp
leave
mov
sbb
imul
cli
in
or
dec
or
sub
jmp
sub
insl
mov
adc
mov
dec
pop
or
cld
arpl
test
and
sar
pop
sub
rcr
jae
or
aaa
fidivrs
sti
jge
sub
cmp
sub
sub
daa
fbstp
ljmp
mov
dec
fwait
sbb
insb
sbb
rcl
aaa
sub
rcr
jae
cmp
out
fisubs
sub
xor
ret
lock
fbld
sti
outsb
sub
mov
sub
testl
shrb
jmp
int3
jmp
sub
ret
jge
xchg
push
div
inc
pop
inc
dec
shl
jns
dec
lods
inc
neg
xor
cwtl
and
sti
fs
mov
aas
cwtl
push
inc
es
sbb
sar
and
or
out
in
in
std
jne
dec
push
call
xrelease
push
pop
imul
sbb
mov
jmp
pop
xchg
cmp
les
stos
jnp
xor
loop
mov
sub
or
cmp
data16
sahf
rcrl
xchg
insb
test
test
xchg
sub
mov
sub
out
sbb
sti
push
pop
filds
xor
pop
and
inc
jb
sbb
sbb
repz
cwtl
dec
orb
call
daa
es
jns
cmpsb
test
fisubl
inc
inc
pop
and
inc
jo
cmc
push
je
in
dec
jns
out
js
sub
mov
inc
mov
and
push
mov
pop
sub
and
lods
mov
mov
jns
ljmp
jmp
pop
dec
and
inc
dec
bound
jecxz
test
movsl
rcrl
dec
mov
inc
sbb
jge
clc
rorb
lea
mov
mov
shr
outsb
out
xchg
insb
pop
jg
inc
out
xlat
jnp
mov
ret
loop
icebp
jecxz
push
in
sub
cmp
shlb
mov
das
sbb
ljmp
mov
popf
push
dec
cld
push
cld
jbe
mov
xor
in
push
aas
imul
sbb
sar
mov
or
push
sbb
dec
in
or
cmp
outsb
lock
push
lret
scas
push
lcall
dec
pop
and
cwtl
cmp
pusha
ret
add
scas
add
and
pop
pop
mov
lea
dec
xchg
mov
mov
adc
lcall
mov
jmp
xor
je
or
in
mov
cmp
rcr
sbb
fisubs
push
repz
jecxz
mov
xor
sub
sub
xor
fsubs
dec
insb
dec
pop
outsb
rclb
push
sub
mov
push
pop
jno
ret
sti
sbb
jmp
sub
outsl
cli
shlb
lock
dec
fs
jae
clc
push
ja
and
pop
arpl
xchg
pop
mov
mov
push
pop
jnp
add
lock
leave
std
int
xlat
push
push
jmp
out
pop
xchg
add
dec
enter
mov
sarl
addr16
sub
jnp
cmp
jl
movl
push
fldenv
mov
outsl
inc
fldenv
inc
pop
dec
inc
lahf
sbb
call
icebp
dec
pop
push
xchg
cmp
sub
ret
jge
lock
add
or
jmp
int
fisttpll
xor
popf
cmc
mov
jg
inc
jne
popf
push
adc
enter
inc
leave
dec
inc
ss
push
stc
mov
stc
std
mov
and
outsb
cmp
gs
sbb
add
popf
and
inc
fidivrl
inc
dec
shrl
dec
push
neg
fldt
mov
sub
mov
cmp
imul
nop
cwtl
ret
and
pop
adc
mov
push
lods
dec
and
xchg
sbb
jb
outsb
lcall
cmp
sbb
negl
push
inc
push
jns
mov
mov
push
shll
stc
das
ret
sub
pusha
jmp
lock
mov
in
dec
and
mov
xor
push
mov
sub
jle
mov
stos
movsl
sarl
ret
and
inc
jl
cltd
and
test
push
lock
sbb
popl
in
xchg
jge
fisttpl
or
mov
jp
or
inc
jne
clc
insb
jp
movsl
inc
cmp
sub
mov
sti
sbb
jbe
mulb
sbb
push
and
mov
push
jo
jl
not
fcompl
dec
and
xor
inc
add
mov
add
out
push
push
xor
outsl
and
out
lods
sub
cwtl
cmpsl
xchg
sub
aad
add
mov
add
mov
shll
inc
lret
inc
loop
mov
cmpl
cmp
addb
mov
mov
and
xchg
sarb
dec
or
pop
ljmp
mov
mov
inc
iret
lcall
in
jns
mov
imul
xchg
push
dec
sbb
rolb
or
outsl
push
xor
and
cs
fcom
or
xchg
adc
jle
cmp
mov
add
icebp
mov
int
icebp
mov
and
dec
xlat
in
inc
or
xor
and
ret
mov
lds
inc
jge
sub
ljmp
aas
std
jl
jnp
clc
loop
push
cmp
or
or
int3
call
pop
jge
jecxz
hlt
roll
mov
pop
pop
pop
mov
sub
sub
mov
inc
gs
cmp
imul
cmp
fs
out
mov
jnp
clc
adc
pop
xor
shl
fsubp
in
fsubs
mov
ja
xor
dec
into
jge
pop
add
mov
xorl
sbb
inc
mov
arpl
int
push
lret
mov
cmp
sti
arpl
mov
pusha
movsb
xor
in
xor
xor
push
ljmp
dec
cli
mov
rcl
xchg
int
roll
daa
sub
jb
arpl
jl
sbb
xorl
imul
arpl
or
inc
inc
mov
push
arpl
push
pop
and
sub
xchg
mov
jnp
and
cmp
adc
pop
jle
je
jge
mov
xchg
fstl
inc
insb
mov
and
das
clc
inc
sar
jno
arpl
or
xor
xchg
fnstcw
jecxz
sub
and
in
xor
fs
gs
ficoml
sti
pop
addl
dec
sbb
hlt
inc
int
enter
xchg
xor
push
cltd
lret
pop
pop
lret
stc
adc
pop
xchg
mov
insb
sub
imul
addl
or
xor
sbb
jo
xchg
fmuls
pop
insb
inc
pop
call
add
or
add
mov
lret
and
mov
je
into
and
dec
push
std
ljmp
jo
loopnew
sbb
call
sub
add
stos
stos
aad
dec
in
das
sbb
and
in
lods
gs
in
pushf
dec
mov
sub
jecxz
test
pusha
xor
lods
jbe
xor
pop
fwait
or
pushf
jmp
dec
in
cmp
jmp
loopne
inc
inc
stos
jle
cli
inc
sbb
loope
dec
dec
lock
inc
mov
push
cs
loopne
cli
sbb
jge
js
mov
pop
pop
rcll
push
xor
pop
dec
fxch
cmp
cmp
in
sbbl
stos
loope
adc
mov
outsb
in
inc
push
mov
leave
dec
icebp
nop
jae
push
sub
adc
xlat
and
out
jp
and
adc
and
cmc
loop
jnp
mov
mov
test
jns
mov
adc
cmp
xor
fs
xor
mov
in
sub
pop
movsb
dec
dec
pop
dec
cmp
mov
out
nop
inc
into
adc
sbb
pop
or
leave
push
pop
dec
adc
cwtl
inc
lret
xor
sbb
test
rcrl
shrb
jmp
clc
or
repnz
pop
inc
inc
test
test
imul
mov
or
movsbl
in
push
and
jnp
outsl
cmp
mov
out
sbb
push
outsb
pop
inc
dec
mov
mov
dec
cwtl
mulb
fucom
mov
cmpsl
adc
adcl
inc
daa
aaa
inc
xchg
pushf
jecxz
stos
pop
mov
int
lods
dec
add
mov
aas
shrl
and
cmp
out
mov
enter
movsl
mov
clc
repnz
scas
cmp
ficomps
push
jmp
xor
xlat
add
ror
outsl
fiaddl
dec
lods
lret
fucomp
mov
xchg
repnz
xor
arpl
popa
je
das
sbb
sub
sbb
add
inc
addr16
scas
xchg
xchg
adc
inc
sbb
repnz
dec
jae
fidivl
cmp
adc
js,pn
pop
lock
mov
xlat
iret
aas
movsl
xor
cmp
mov
cmc
in
clc
pusha
inc
push
jno
jg
lahf
mov
daa
xchg
int
or
iret
sbb
xchg
mov
sbb
in
es
sbb
xchg
sbb
in
add
lock
ds
inc
mov
jb
repz
jne
cmpsl
pop
jbe
scas
movsl
xchg
lods
xor
push
jne
arpl
iret
pop
cmp
jnp
addr16
orl
mov
repnz
add
and
outsl
jne
loop
repz
sub
and
push
adc
movsb
sub
fs
inc
adc
cmp
sbb
bound
pushl
shll
jmp
sub
cld
pop
aaa
daa
mov
and
hlt
les
inc
fmull
pusha
imul
jb
cli
outsl
out
pop
sbb
outsl
mov
xchg
cmp
loop
out
in
or
or
cmp
pop
into
test
jae
fcmovnb
test
int3
mov
or
adc
dec
enter
mov
adc
xchg
jle
sub
pop
ret
lods
push
cli
mov
loop
add
jae
dec
jmp
test
push
pop
fwait
leave
push
adcl
mov
movsl
aaa
mov
pop
outsb
push
push
add
pop
or
or
push
pushf
jb
or
scas
stos
xchg
scas
int3
or
jmp
inc
cld
addl
inc
outsb
mov
je
pop
add
inc
xor
pop
ret
fs
mov
fmuls
mov
js
sbb
jmp
cmpsb
mov
and
pop
jecxz
inc
jbe
addb
and
sub
repnz
cwtl
repz
jmp
push
cmp
inc
adc
xor
jecxz
daa
or
cmp
daa
cld
shll
pusha
mov
idivb
ficompl
test
fdivl
stos
push
mov
imul
int3
test
bound
ja
push
mov
shlb
das
out
sbb
movsb
sbb
fwait
repnz
loopne
or
jl
fsubrs
add
pop
xor
add
add
inc
lea
pushl
lods
push
or
inc
int3
cld
xor
out
stos
sub
push
movsl
and
xor
cmp
mov
ret
aaa
int
dec
cs
and
stos
and
sbb
int3
xchg
cmp
cli
rolb
adcb
add
lahf
or
xor
cmp
push
imul
or
imul
mov
jecxz
sbb
movsl
fnstcw
int3
insb
xor
dec
push
push
push
std
into
lods
jae
jge
cltd
xlat
dec
add
mov
xchg
add
jne
enter
mov
or
es
stos
xor
mov
aad
in
jns
jnp
aaa
in
aas
mov
mov
push
imull
or
out
out
or
js
shlb
in
push
int3
cmp
adcl
inc
jp
push
jae
sbb
repz
ret
imul
xchg
jmp
outsb
and
jo
sbb
sub
mov
xor
xor
pop
dec
hlt
pop
dec
out
sub
frstor
xchg
addr16
and
repnz
shrl
xorl
or
jecxz
aas
outsb
outsb
sub
inc
adc
lods
insb
cmp
xchg
jne
bound
sbb
fs
leave
outsb
push
arpl
and
jnp
xchg
iret
and
mov
and
out
iret
dec
loope
jbe
stos
fs
jmp
jl
imul
paddsb
fucom
mov
jne
repz
fsub
clc
ljmp
and
out
aas
sub
mov
cmc
inc
cli
mov
or
jnp
mov
imul
xor
dec
fwait
pop
popa
pop
lea
adc
push
stos
lea
aas
in
mov
out
aad
call
and
std
mov
cmpsb
jo
push
or
pop
cld
sti
dec
imul
mov
shll
fsubrp
lret
scas
dec
push
loope
pop
imul
or
pop
inc
repnz
and
in
xlat
add
sub
mov
push
test
jecxz
mov
stc
aad
push
cltd
sub
inc
jg
push
lods
inc
add
insl
push
sbb
mov
mov
mov
cld
mov
sbb
loope
cmpsb
dec
inc
sbb
lahf
adc
add
pop
cmp
adc
sbb
jp
call
cmpsl
out
push
push
jmp
rorl
cmc
loopne
push
jb
or
sub
pop
popa
cmp
loop
mov
xchg
jge
out
aaa
sub
cmp
call
pop
or
sbb
push
loopne
ljmp
mov
cmpsl
xor
movsb
xlat
stc
mov
rcrb
mov
rcrl
add
lret
inc
push
mov
xor
mov
int3
movsw
and
push
xchg
xor
shrl
lret
aam
hlt
aaa
mov
mov
lock
out
add
jg
pop
dec
data16
ret
jmp
pop
es
test
xchg
aas
outsl
and
dec
push
jbe
mov
and
cmp
dec
in
sub
lret
cmpsl
push
push
adc
iret
xchg
loopne
pop
lds
shr
jle
mov
ja
pop
push
mov
hlt
popf
jne
pop
sub
std
sti
loopne
jecxz
pop
aad
std
jecxz
fwait
jb
mov
mov
sbb
push
movsb
pop
lret
push
les
dec
adc
insl
call
add
inc
lock
andb
mov
cmpb
fildll
lea
cmp
xlat
adc
inc
lahf
dec
mov
call
xchg
pusha
sub
clc
cmp
vpshufhw
jg
cs
fdivs
dec
pop
js
xor
jbe
ja
lcall
push
cmc
outsl
fs
or
adc
mov
outsl
jge
xchg
pusha
outsb
xchg
cltd
or
adc
or
and
and
test
faddl
inc
aaa
pop
push
add
and
ljmp
daa
push
xchg
and
scas
outsl
fs
add
push
std
lock
inc
and
sub
push
and
add
push
hlt
pusha
in
push
xchg
inc
fwait
dec
loop
mov
add
movsl
lret
loopne
gs
mov
xchg
ret
or
jmp
repz
outsb
lock
ljmp
add
mov
ljmp
jp
push
sub
int3
xor
cmpsl
xchg
adc
outsl
hlt
out
mov
dec
dec
ret
inc
out
lret
outsl
lods
sub
ljmp
cmpsl
xor
loop
cwtl
icebp
jne
xor
jmp
sub
dec
sahf
cmc
ret
jl
dec
and
lds
inc
loopne
out
rcll
jnp
leave
sahf
lods
movsb
xchg
pop
xor
and
cmc
nop
inc
enter
lods
mull
dec
jp
inc
push
fdivl
mov
test
mov
push
push
xor
pop
inc
add
cmpsl
add
xor
lret
jge
sub
mov
data16
inc
filds
or
mov
cmp
js
push
dec
mov
dec
sbb
xor
push
ret
dec
sub
insl
mov
in
loop
fistps
push
jo
and
jo
jae
inc
inc
jle
scas
fs
cmpsl
inc
inc
test
dec
mov
jnp
jle
scas
int3
lahf
or
test
dec
mov
scas
addr16
dec
pop
mov
xor
scas
je
push
divb
ljmp
xchg
aaa
lea
mov
inc
dec
inc
mulb
sbb
push
fsubr
sub
sti
aas
ja
dec
sub
ret
inc
push
outsb
xchg
shll
ret
inc
sub
fwait
dec
cwtl
pop
sub
es
pop
ds
loopne
cmc
pop
jno
jmp
pop
dec
ja
jo
or
les
jns
movsl
daa
and
pop
cmp
sbb
lods
pop
mov
pop
sub
lods
and
idivb
cmpsb
ret
pop
pop
mov
in
jnp
cmpsl
inc
dec
cltd
ficompl
pop
dec
int
test
or
xor
into
adc
push
jno
int3
aam
fcomps
or
jae
repz
cmpsl
add
and
rorb
sub
sub
sub
lret
loop
les
pop
or
cmpsl
mov
xchg
cmp
pop
inc
pop
mov
and
movb
inc
dec
fwait
ja
shrb
loop
adc
jmp
cld
sub
sbb
mov
pop
push
jno
inc
addb
xchg
std
adc
sbb
es
push
iret
lock
jmp
pop
inc
insb
fists
sub
sbb
sbb
inc
sbb
jo
push
call
inc
loopne
dec
adc
fpatan
mov
movsl
xchg
jb
stos
mov
mov
jle
stos
out
int3
cmpsl
dec
pop
popa
stos
and
pop
jg
stos
loop
pop
mov
addl
fiaddl
stos
scas
popa
inc
stc
and
pop
popa
lock
mov
push
xchg
push
or
lcall
xchg
dec
and
or
sub
aad
push
sub
aam
ljmp
dec
loope
das
add
sbb
xor
lcall
add
push
ja
pop
pop
mulb
repnz
xchg
cmc
ljmp
push
pop
and
sub
add
ret
aaa
stos
aas
and
push
jp
adc
dec
lods
jo
lret
cmp
cmp
enter
xchg
ret
insl
and
imul
cmp
jbe
into
sub
adc
adc
add
sbb
inc
mov
pop
mov
in
dec
ret
pop
cmp
loope
imul
in
sub
insl
mov
inc
mov
push
cwtl
sub
sub
cli
data16
mov
outsl
adc
scas
sti
sub
cmpsl
les
fnstenv
or
mov
das
xor
nop
imul
int3
icebp
push
xlat
adc
inc
mov
lea
scas
add
pop
mov
call
test
bound
and
and
insb
inc
ja
decl
mov
sbb
sbb
test
adc
push
lahf
mov
pusha
movsb
mov
xor
nop
mov
mov
scas
in
lcall
push
mov
jnp
icebp
inc
inc
inc
push
jle
ret
fmull
das
mov
imul
fists
sub
push
popf
int3
out
mov
jo
add
sbb
mov
or
js
xlat
xor
cmp
mov
adc
cmpb
adc
sub
cwtl
push
icebp
or
gs
lret
or
sbb
cmp
std
into
and
mov
adc
sbb
adc
test
push
dec
pop
sbb
cmpsb
push
lds
inc
jae
int3
fists
mov
ds
dec
cmp
cmpsl
xchg
dec
pushf
outsb
les
in
sti
subl
pop
sti
ds
or
add
pop
xor
ja
jns
ret
sti
xor
notl
test
jmp
mov
stos
insl
ss
xchg
daa
sub
xchg
jo
lret
mov
mov
adc
cmp
add
test
and
loope
dec
adcb
mov
imul
enter
icebp
sti
xor
pop
rcrl
mov
mov
mov
jmp
clc
gs
sub
movsb
sub
sarl
cmpb
mov
cmp
pop
mov
sub
cmpsl
push
stos
mov
out
cmpb
das
inc
push
sbb
jg
sub
sbb
sbb
sbb
push
pop
add
sahf
shll
adc
outsb
es
push
out
imul
mov
imul
sub
and
cmp
lods
pop
add
sub
mov
or
ds
sbb
packuswb
jle
ljmp
pop
push
lods
popa
movsl
xchg
js
adc
jns
scas
inc
sub
mov
or
cmp
mov
adc
fs
cmp
dec
or
std
mov
adcl
jle
addb
cmp
pop
test
gs
bound
insl
lret
hlt
sub
call
push
mov
cmp
sub
mov
lret
pop
test
movsl
fdivs
dec
pop
lock
mov
pop
push
daa
pop
scas
xor
fs
cmp
movsl
je
sub
sub
add
push
fcompl
mov
push
insb
sbb
or
dec
loopne
mov
dec
mov
es
cli
rclb
test
arpl
dec
push
loopne
push
iret
fcmovne
push
mov
int3
mov
adc
add
jle
mov
fistl
ret
add
dec
xchg
xor
rclb
pop
hlt
rcll
or
push
pop
pushf
adc
xor
push
insl
bound
or
imul
fisttpl
fldenv
enter
shrl
mov
in
sub
sub
ret
push
call
xor
mov
rol
xor
inc
out
pcmpgtw
sbb
mov
mov
sub
xchg
xchg
fldcw
push
into
sbbl
imul
mov
sub
lock
rorl
js
daa
addr16
fildll
push
or
cwtl
push
pop
adc
sahf
jmp
das
push
adc
push
adc
sbb
add
das
loopne
hlt
sbbb
xor
cwtl
push
in
scas
xor
jmp
rcrl
xor
test
push
cmp
add
ljmp
or
icebp
push
shlb
rorl
js
adc
stc
pop
scas
arpl
inc
cmp
or
push
sbb
std
in
test
adc
dec
xor
and
xor
dec
push
popf
stc
jbe
sub
inc
sub
test
push
mov
lahf
sbb
out
cmp
fbld
xor
ret
shrb
and
pcmpeqw
or
push
lds
inc
dec
or
aam
jo
inc
mov
addl
inc
icebp
fxch
mov
lods
or
sahf
inc
addb
jnp
mov
mov
test
dec
adc
cmpsl
fisttpll
inc
sub
mov
add
xchg
cltd
data16
mov
dec
and
imul
movsb
mov
sub
orb
lea
jno
jnp
push
sub
pop
sbb
mov
pop
test
jp
pop
pop
push
push
stos
std
nop
test
xchg
data16
adc
and
jge
add
insb
inc
movsb
push
jae
inc
popa
out
mov
push
jg
mov
sbb
mov
dec
or
enter
mov
mov
add
clc
push
test
fdivrl
ljmp
bound
clc
enter
test
xchg
insl
pushf
lcall
sub
mov
sarb
or
or
adc
mov
imulb
adc
push
shll
outsb
shl
jge
pop
pop
mov
data16
mov
jae
xchg
cs
xchg
mov
pop
insl
outsb
loop
dec
jns
ljmp
xchg
xchg
aaa
test
xchg
xchg
scas
test
add
outsl
mov
adcl
cmp
jmp
xor
shlb
jge
jge
add
repz
cmp
adc
jno
ja
xor
push
xchg
fs
iret
popf
arpl
sbbl
cmpsb
push
push
out
popf
xchg
xor
test
jnp
adc
push
push
xchg
or
pop
ficompl
pop
fmuls
fdivs
scas
popl
cmp
popa
jae
mov
cmp
xchg
push
mov
adc
sub
mov
stos
fcoms
out
fucomip
loopne
es
out
push
xchg
push
mov
cmp
add
mov
js
adc
jg
outsb
xchg
adcl
fwait
addr16
xchg
pushf
aaa
jge
imul
sub
pop
jnp
addr16
xchg
lock
cmp
jle
cmc
cltd
ret
xlat
sbb
dec
dec
mov
dec
adc
xchg
sub
stos
cltd
pushw
ret
pop
cwtl
dec
dec
pusha
imul
mov
cmp
xchg
pop
rcll
pop
arpl
cmpl
and
jns
rcll
sbb
std
mov
mov
stos
ret
xchg
push
out
aad
dec
fucomip
loopne
and
out
xchg
push
cmpsb
and
sub
mov
mov
stos
add
mov
dec
sub
outsb
xchg
lcall
jmp
addr16
insl
and
push
call
xchg
xlat
adc
lret
lods
adc
add
pushf
pop
scas
push
test
dec
jns
repz
xchg
xchg
ror
xor
sbb
add
push
sub
mov
lret
xor
sbbb
push
xchg
lods
dec
pop
push
mov
icebp
mov
jmp
xchg
add
enter
xchg
ret
repnz
out
addr16
inc
andb
outsb
out
js
mov
hlt
pop
jmp
sub
dec
roll
fisubrs
lahf
bound
or
adc
aas
add
xor
jbe
insl
ret
xor
popf
push
push
sub
in
sub
aas
xchg
xchg
xor
cwtl
lods
cmpsl
dec
js
inc
add
pop
ret
ficomps
sub
cwtl
push
aaa
or
lret
insb
ret
sbb
loope
pop
dec
addr16
outsl
pop
notl
inc
adc
mov
in
push
jge
sub
roll
push
jns
inc
jns,pn
cmc
cmp
arpl
loopne
cltd
mov
mov
aam
mov
push
sahf
xchg
inc
and
or
xchg
cmpl
jbe
rcl
mov
sub
popa
cmpsl
inc
cltd
sbb
ja
or
or
lock
xchg
mov
sub
jg
sbb
lahf
jbe
jno
int3
pop
or
cs
std
scas
mov
cmp
outsb
jle
mov
mov
add
in
pusha
and
jo
rclb
xchg
sbb
adc
fs
sahf
jg
inc
enter
in
jl
aas
jbe
cmp
push
adc
add
xor
pop
in
xchg
push
sub
ret
push
sbb
add
sbb
rcll
call
shrb
adc
xchg
pusha
xor
inc
scas
into
inc
xchg
add
and
sbb
pushf
in
ja
dec
sbb
cmc
mov
dec
sbb
ljmp
dec
sbb
add
mov
arpl
jb
xor
sbb
out
test
sbb
sbb
push
inc
xor
jg
call
call
fidivs
test
push
xor
and
sbb
je
inc
sti
punpckhdq
divl
pusha
cmp
jno
mov
inc
rorb
jecxz
and
out
cmp
xchg
sub
sbb
mov
mov
out
dec
hlt
xchg
sbb
mov
inc
inc
jne
jecxz
adc
cmp
adc
push
add
dec
cmp
data16
mov
rclb
mov
aas
in
nop
and
out
in
in
hlt
lea
jmp
pminsw
sbb
xchg
jle
cmp
stos
mov
pop
cmp
test
in
xor
out
icebp
leave
mov
or
pop
and
in
int3
inc
out
jnp
sbb
loope
cmp
xor
or
mov
int3
hlt
push
outsb
pop
subb
adc
mov
loope
test
ss
gs
lea
cmp
aam
sub
movsb
mov
push
data16
dec
fisubrs
jno
or
xor
pop
lea
mov
xor
mov
jg
inc
fbld
movsl
fdivr
in
imul
jmp
lcall
mov
and
pop
or
xor
dec
jg
gs
enter
lods
test
jg
inc
inc
clc
cld
ret
cmpb
int
or
push
push
dec
out
gs
sarb
jno
jb
or
pop
jl
or
lock
sub
sub
fisubrl
pop
out
out
push
sub
es
xchg
xor
mov
xchg
lods
inc
je
pop
push
jle
add
repnz
pusha
cmp
mov
push
idivb
xchg
sbb
inc
lock
out
dec
out
fdivs
or
dec
sub
rdmsr
cmp
enter
xchg
ret
nop
adc
mov
rol
pop
jmp
sub
int3
and
shrl
dec
arpl
aas
clc
add
inc
test
xlat
hlt
cmpsl
mov
sahf
test
lret
cli
faddp
adc
inc
jbe
and
in
mov
add
cmp
jge
das
and
cmp
popf
movsb
or
pop
pop
out
lock
xor
xchg
dec
cld
push
sub
pop
dec
add
rcll
inc
sub
mov
cmp
stos
movsl
fwait
mov
cmpb
mov
sub
rcrl
stc
mov
cmpsl
jo
neg
inc
jnp
sub
imul
inc
addb
rsm
lods
out
js
testl
test
dec
nop
sub
dec
adc
repz
push
push
mov
enter
sbb
dec
mov
into
data16
mov
inc
call
adc
cli
inc
jo
and
data16
lret
mov
adc
insl
push
loopne
xlat
pop
outsb
mov
inc
in
repnz
hlt
outsb
daa
push
or
jmp
andb
sbb
pop
lock
dec
push
jmp
push
popa
into
enter
orb
shl
negl
imul
and
adc
sti
aam
or
jmp
add
or
sub
scas
cmpsb
add
out
xor
les
mov
pop
or
pusha
aas
pop
and
dec
cmp
pop
ljmp
imul
adc
mov
jecxz
add
sub
test
cmpsb
jne
outsl
subb
mov
cmp
outsb
xchg
cmp
jmp
jno
push
out
in
sbb
or
push
cmp
push
cmp
cli
push
mov
dec
outsb
and
mov
sub
sbb
repz
jbe
jmp
and
lcall
or
lock
push
ret
jno
jge
inc
sub
jb
test
add
xor
push
sub
cltd
mov
imul
dec
out
mov
cmpsl
imul
mov
add
xchg
or
dec
mov
addr16
sub
shlb
jg
xor
ret
pop
mov
sub
testb
push
cmpsl
insb
dec
sub
lods
xor
and
sbb
call
or
test
test
pop
in
shrb
and
pop
xchg
mov
or
sbb
xor
jbe
clc
push
push
push
xchg
jle
jmp
fsubs
xchg
jno
cmpsw
pop
int
cmp
pop
inc
xlat
cmp
pop
repnz
test
jg
xor
pop
mov
dec
pop
aaa
imul
mov
and
fiadds
add
lea
sub
cmpsb
testl
cmp
xor
pop
daa
cmc
movsl
fiaddl
xchg
or
ret
pop
pop
dec
mov
jge
shlb
add
xchg
dec
mov
mov
out
into
cltd
dec
aad
add
dec
loop
imul
pushf
push
call
add
inc
out
in
jg
std
sbb
sbb
jne
sti
adc
push
inc
mov
je
int
jp
aad
pop
or
fsubp
push
ficompl
rorb
sbb
imul
stc
ss
and
fwait
and
loopne
cltd
push
xchg
popa
jmp
aam
lock
add
fmul
inc
flds
je
dec
sahf
cmovb
pop
cltd
jb
out
cwtl
or
enter
bound
dec
xchg
mov
xchg
mov
fdivl
and
iret
ljmp
sbb
mov
or
add
imul
or
insl
rorb
push
outsl
pop
mov
sbb
inc
xchg
outsl
int
rorb
or
outsl
add
lea
mov
pmullw
mov
shrl
mov
movsb
mov
mov
fisubrs
mov
cmp
xchg
mov
das
cwtl
sub
push
lahf
loopne
fidivrl
push
or
jne
mov
idivl
insl
addr16
or
jg
subl
mov
dec
std
imul
cmp
jns
dec
pop
or
js
jg
jno
jo
push
push
lret
or
jl
mov
mov
add
aam
jno
outsb
mov
popa
scas
pop
or
lahf
and
outsl
and
fwait
ja
arpl
shrb
add
fcomps
dec
fwait
lods
outsb
push
and
addr16
pop
stos
inc
adc
or
cmpsb
mov
test
pop
subl
mov
nop
std
aad
dec
test
fdivrs
sbb
std
lods
dec
fidivrl
dec
pop
stos
lea
fsubrl
ljmp
stos
dec
and
lret
mov
fidivrs
sbb
or
sub
xlat
das
cmp
in
mov
cmp
dec
lods
add
xchg
push
mov
andb
dec
inc
sub
push
lret
data16
xchg
mov
xlat
sub
push
retw
call
mov
rsqrtps
mov
xor
repnz
ret
enter
or
inc
add
insb
fwait
xor
mov
shl
or
in
jns
xchg
sbb
sub
je
pushf
push
dec
mov
out
pop
adc
shl
mull
cmpsb
outsl
inc
push
xchg
push
inc
adc
int3
inc
addr16
outsl
mov
out
xor
push
test
add
call
mov
pushf
imul
add
pop
jns
inc
movzbl
or
mov
xcrypt-cfb
push
or
out
and
lods
dec
fcomps
nop
scas
stc
or
sbb
cmp
loopne
mov
push
aaa
and
push
or
xchg
lret
add
pusha
loopne
inc
insb
popl
jle
jbe
pop
jb
dec
enter
jno
es
jecxz
add
shr
xor
jns
pusha
outsl
sbb
jecxz
fs
pop
mov
dec
ret
dec
jecxz
shll
inc
mov
mov
inc
dec
mov
mov
cli
imul
xchg
int3
adc
xchg
sub
xchg
dec
mov
mov
sbb
gs
out
add
movsb
outsl
push
dec
in
and
mul
ljmp
push
or
outsb
inc
pop
push
out
xor
xlat
mov
jmp
call
das
adc
fcoml
cmp
mov
adc
mov
scas
xchg
mov
fcoms
push
scas
xor
ret
xchg
cltd
sbb
test
mov
mov
fs
add
iret
mov
mov
imul
or
dec
fldcw
sub
outsl
pop
sbb
or
push
add
loopne
mov
movups
push
xchg
xlat
pop
scas
repz
int
hlt
loopne
adc
mov
mov
lds
mov
jg
fcompl
stos
fldt
ss
lahf
sbb
imul
cmp
inc
xor
stos
imul
xlat
mov
sti
inc
pop
loope
and
mov
mov
and
and
push
jp
pop
inc
std
inc
xor
or
sbb
rcrb
sbb
nop
stos
inc
or
imul
pop
or
icebp
pop
pop
jae
pushf
dec
inc
or
mov
insl
rcr
imul
cwtl
mov
lret
daa
lret
fisubrs
pop
xor
dec
add
out
jl
jno
push
add
push
jmp
pop
nopl
inc
pusha
cltd
jecxz
jl
sti
imul
push
out
xor
xchg
fisubrs
mov
das
enter
dec
call
adc
sub
sub
mov
cmp
in
and
aaa
sub
jle
mov
mov
sahf
je
nop
pop
stos
or
mov
movsl
xor
lret
or
fstl
cmp
add
add
jne
cmp
insb
inc
jbe
sub
out
js
xor
and
jbe
addl
xchg
adc
push
mov
rolb
negb
fwait
cli
in
and
lahf
jle
je
mov
shrl
outsb
into
das
and
ja
js
mov
xchg
mov
sub
push
and
shlb
lds
add
cmpsl
test
pop
push
stc
sbb
rorl
sub
pop
mov
push
data16
pop
mov
inc
inc
xlat
push
pusha
and
shlb
sub
data16
mov
shl
adc
pushf
fmuls
das
cmp
rcrl
outsb
int3
jno
js
data16
dec
shl
push
jo
testb
add
jmp
cmp
dec
cmp
lret
stos
loope
push
scas
mov
stos
mov
out
out
xchg
ljmp
sbb
and
and
cmpsl
ljmp
aaa
or
jmp
movsb
jne
sbbl
dec
mov
mov
mov
out
iret
sbb
fisubrs
pop
mov
push
cli
out
xlat
lcall
jl
cmp
mov
dec
mov
cmp
pinsrw
jno
dec
leave
movsb
xchg
ffree
pop
sbb
test
adcl
mov
cmc
jmp
call
jle
test
and
dec
movsb
les
jmp
mov
jmp
imul
test
adc
pop
or
push
jae
cmp
pop
mov
and
popw
inc
push
jge
sahf
jmp
jno
icebp
jmp
sbb
or
xchg
adc
out
xor
aaa
icebp
push
int3
adc
outsb
jmp
scas
nop
loopne
call
jle
sbb
push
xor
std
pop
dec
or
jnp
enter
stos
sub
or
dec
repz
scas
ret
inc
or
imul
daa
sub
movsb
nop
rol
or
mov
adc
sub
subl
pop
lcall
sti
imul
dec
shlb
inc
adc
cmp
jae
inc
inc
aam
cmp
jmp
mov
sub
push
outsb
jg
pop
push
inc
ret
and
jno
dec
jecxz
mov
movb
cltd
insl
in
imul
jns
inc
sub
je
movl
add
mov
sahf
inc
movb
sbb
sahf
test
insl
and
mov
dec
adc
jns
movb
stos
sub
or
dec
stc
test
popf
out
loopne
rorl
pop
mov
push
ficoms
add
xlat
les
add
scas
arpl
pushf
sbb
mov
mov
cltd
sbb
fidivs
push
sub
js
mov
push
es
stc
sti
push
dec
addr16
and
mov
cs
pusha
addr16
scas
mov
lret
dec
cmc
jge
pushf
add
test
pop
mov
jne
cltd
pop
sbb
inc
push
and
cmp
sbb
cmc
ja
jno
ret
mov
arpl
fldcw
negb
es
insb
pop
xchg
pop
add
xchg
pop
add
mov
fstl
repz
inc
cmpl
dec
addr16
in
popa
or
or
inc
lret
sbb
pop
fsubl
cwtl
stos
out
add
jnp
inc
add
stos
das
daa
nop
inc
stos
jb,pn
jbe
ljmp
cmp
lcall
push
das
and
arpl
gs
ficoms
sbb
fimuls
pushf
insl
pop
out
sbb
leave
pop
jg
pop
xchg
cwtl
pop
lcall
imul
fistl
pop
or
jp
andb
fstpl
insb
nop
fisttpl
cli
add
test
and
imul
add
rcrl
push
flds
fistl
mov
ret
or
inc
xor
sbb
leave
outsb
and
mov
cld
ret
pop
test
jmp
sbb
stos
dec
data16
jnp
push
lods
push
cmp
orb
sbb
pop
sbb
aam
mov
inc
orl
lahf
movsl
insb
dec
clc
and
jb
sub
cmp
or
xlat
insl
xor
imull
add
dec
sbb
shl
stos
aad
out
lcall
mov
or
int
insl
sbb
xchg
add
ret
add
push
push
mov
mov
jp
mov
std
in
int3
popl
lods
inc
popa
sbb
popa
sbb
push
push
or
mov
clc
pushf
mov
test
dec
fldenv
jb
xor
out
dec
push
jb
stos
pop
outsl
inc
pop
mov
add
lea
add
loope
fcomi
fisttps
inc
test
inc
cmp
inc
lods
loopne
pop
std
push
jp
cmp
hlt
inc
or
jnp
cli
ljmp
push
cli
jmp
add
nop
dec
ret
sub
fmul
jmp
mov
dec
xchg
ret
pop
pop
outsb
jge
and
inc
sahf
clc
jmp
add
or
push
ret
mov
stos
or
es
iret
inc
movsb
jle
jp
cmp
cmpsb
inc
nop
or
mov
xorb
add
addl
pop
jp
cmc
jb
add
sbb
xor
sbb
cmp
gs
insl
sbb
gs
push
es
mov
mov
mov
jecxz
sub
insl
or
sahf
inc
cld
inc
movsl
gs
movsl
cltd
gs
aaa
adc
sti
pop
sub
addr16
sub
js
jb
and
cli
lds
cltd
cli
aaa
cmp
sahf
mov
xor
rcrb
in
out
cmp
and
mov
stos
test
out
test
sub
gs
into
lret
pop
data16
xor
cmp
add
test
aas
or
dec
lret
lods
sub
fildl
test
ss
jb
sub
test
out
fcoms
inc
jnp
cmpsb
inc
out
adc
jns
stc
or
push
xlat
fstps
icebp
pop
inc
and
xchg
fsubrs
daa
jns
int3
rolb
mov
ret
rcl
repnz
xchg
jg
in
sub
mov
in
int
test
loopne
inc
test
test
ljmp
pop
fisubs
scas
add
inc
cmp
sub
popa
test
jbe
stos
push
sbb
sub
dec
push
push
jns
inc
sub
xchg
in
jp
sti
add
int
enter
enter
cmp
popf
in
fdiv
xor
and
sbb
jno
and
sbb
jnp
aas
rcrb
ja
mov
cmp
out
lret
xor
push
push
xchg
jo
lcall
es
or
mov
or
addr16
inc
inc
rolb
outsb
push
icebp
push
insl
icebp
leave
mov
dec
adc
fmuls
adc
aam
adcb
repz
jl
repz
jl
repz
jl
repz
jl
repz
jl
repz
stos
repz
mov
repz
xchg
jl
rep
jl
repz
or
sbb
sub
cmp
dec
dec
add
push
and
scas
dec
loope
mov
dec
add
js
cmp
mov
jns
jp
cmp
mov
not
cmp
cld
mov
push
sbb
add
mov
add
mov
add
mov
add
popa
lods
inc
xor
fdiv
fwait
dec
fsubrl
fwait
or
xchg
fwait
push
fdivl
cmc
faddl
fcompl
stos
fsubrl
fwait
faddl
fwait
sbb
cli
in
push
stos
mov
sbb
stos
xor
xchg
push
sbb
jge
rclb
cld
nop
jae
cld
mov
rsqrtps
adc
jne
dec
mov
mov
mov
push
jno
xor
jbe
xor
jbe
push
sub
add
cld
add
mov
xchg
mov
repnz
sbb
xor
cwtl
xor
insl
jno
xlat
cmp
adc
push
call
xchg
pop
andb
stc
push
mov
jge
cmp
sub
aam
stos
xchg
jecxz
mov
or
sbb
repz
jle
xor
lds
fdivrs
pop
aam
dec
rol
dec
in
cmc
dec
dec
aad
cmpsb
pusha
sub
cmp
cwtl
cmpsb
out
mov
subb
cmpsb
mov
mov
cmp
cmp
loop
cld
scas
jae
incl
mov
pop
mov
jb
sbb
inc
fcoml
dec
sub
jbe
fadd
lds
fdivrp
popa
dec
filds
and
icebp
push
add
fldcw
push
cwtl
lods
add
dec
jl
pusha
dec
cld
cmp
jb
addr16
dec
xor
jbe
push
dec
jle
inc
sbb
pop
cmp
in
aaa
stos
sub
out
movsb
cmpsb
mov
inc
sbb
cmp
fwait
jp
cmp
jg
lret
cmp
pop
jp
cmp
cld
cmp
repz
stos
shrl
xchg
pushf
rcrl
das
jp
ret
das
push
push
subb
push
dec
das
scas
outsb
aas
inc
xchg
xor
fistpl
push
shrb
or
sbb
enter
push
std
aas
push
xchg
push
push
cmp
mov
or
jne
inc
les
push
inc
roll
sub
xchg
cmpsb
in
out
mov
sub
cmpsb
push
sub
cmpsb
sub
cmpsb
push
sub
and
sahf
cmpsb
in
mov
mov
dec
inc
cltd
sub
cmpsb
test
sub
push
cmp
lea
push
imul
fxch
push
sbb
hlt
popa
inc
fstl
and
cmp
add
jnp
iret
scas
lcall
scas
ret
scas
shlb
lods
scas
loop
mov
fiadds
cld
pop
jae
cld
insl
jae
cld
jge
xor
jae
cld
sub
lcall
xchg
jp
int
dec
das
das
lods
push
cmp
lea
fwait
iret
mov
or
add
mov
sub
jne
dec
std
jecxz
pop
sbb
and
xchg
mov
jbe
xor
imul
lea
popf
jl
rep
jl
repz
mov
jecxz
call
inc
fbstp
xor
lret
jbe
xor
arpl
into
lock
cmp
repnz
cs
jecxz
sbb
push
scas
mov
push
jbe
xor
jbe
xor
jbe
xor
jbe
xor
jbe
xor
jbe
xor
jbe
xor
jbe
daa
xlat
aaa
inc
jp
cmp
add
xchg
ret
sbb
addr16
sbb
pop
xchg
pop
sbb
daa
push
xor
jbe
xor
jbe
xor
jbe
xor
jbe
xor
jbe
xor
jbe
or
clc
jecxz
addr16
fwait
ja
rcrb
frstor
outsb
or
push
arpl
or
sub
mov
push
add
xchg
mov
sbb
dec
inc
push
add
inc
das
add
aas
call
movl
dec
fwait
ret
fcoml
fcmovnu
sub
fwait
xchg
or
shr
xchg
arpl
lock
dec
shll
xchg
aas
loope
adc
sarl
ret
aaa
inc
xchg
iret
push
dec
das
fildll
das
xlat
push
cmp
xchg
popa
out
imul
arpl
das
jnp
clc
das
jae
rorb
push
test
pop
push
xchg
das
pop
push
push
das
fldt
das
shrl
das
stos
push
xor
popa
out
addr16
hlt
das
ja
cld
das
dec
push
fsubrl
xor
das
pop
push
xchg
das
pop
push
fs
sti
push
and
stos
push
xor
mov
filds
add
pop
add
mov
sub
arpl
decl
dec
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
fsts
outsl
sub
addr16
and
jg
es
fstp
loope
aas
sub
xor
mov
ret
sub
cmpsb
jecxz
les
xchg
enter
jecxz
add
fdivrl
js
mov
xor
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
inc
xor
adcl
popa
je
inc
addr16
movl
pop
scas
push
and
scas
insb
and
scas
pushf
and
mov
rol
push
rcr
pop
insb
repz
cmp
repz
hlt
xlat
push
fmull
inc
jl
repz
jl
repz
jl
repz
jl
repz
sub
and
cmp
mov
fstpt
sub
mov
dec
pop
ss
hlt
das
ja
cld
sub
out
adc
std
arpl
xlat
cld
pop
jae
cld
adc
cld
ss
cld
jae
cli
fst
push
bound
push
popa
imul
iret
cld
popf
jo
pop
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
xor
das
dec
cli
aas
lret
in
mov
add
xchg
scas
push
sbb
sub
or
mov
sub
cmp
adc
jo
and
or
cli
loope
pop
fsts
mov
lods
cld
pop
pop
pop
jl
repz
sarb
cld
add
xor
sub
in
mov
dec
push
dec
dec
jnp
fwait
push
fdivl
pushf
test
dec
inc
inc
add
inc
in
mov
jp
cmp
incl
xchg
scas
out
cmp
inc
and
scas
loop
push
fs
adcl
inc
jp
and
fistpl
iret
jae
std
in
or
xchg
xchg
pop
movsl
add
mov
fnstenv
dec
add
inc
in
push
dec
leave
jg
xchg
pushf
jno
scas
in
cmp
mov
sbb
data16
jecxz
jno
clc
stos
jle
lret
stos
dec
in
shrb
dec
test
add
xorb
xchg
pop
pusha
sbb
into
push
in
notl
enter
cmp
xor
stos
jne
iret
stos
inc
in
mov
push
in
pop
lret
mov
jp
adc
jae
outsl
xchg
aam
or
lods
jnp
cmp
pop
xchg
gs
int
xchg
out
jbe
add
inc
mov
jnp
fwait
and
add
lea
jecxz
mov
sbb
cmp
stos
jp
cmp
jne
inc
cmp
or
ror
xchg
fnstsw
xchg
aaa
and
or
scas
cmp
add
lods
add
inc
xor
addb
inc
inc
movl
push
inc
xlat
push
enter
loopne
in
fstpl
xchg
lock
dec
incb
in
jmp
pushf
dec
cld
pop
jb
cmpsb
and
test
and
sbb
in
repz
push
sti
add
mov
dec
mov
mov
sbb
mov
push
rcrb
mov
cmp
fnstcw
cmp
je
iret
jp
jecxz
mov
pop
fstps
rcr
and
jno
xor
pop
cmp
in
pop
inc
xor
out
es
sbb
les
pop
xchg
bound
dec
imul
xchg
xor
imul
fdivl
xor
jbe
xor
dec
fcompl
dec
push
das
dec
jle
or
rcll
inc
cmc
xor
scas
nop
and
lds
cld
xchg
jae
std
mov
mov
shll
xchg
sti
sarl
repz
lret
rorl
ret
rcll
fldt
cwtl
imul
ss
cld
sbb
jl
repz
std
jl
repz
popf
jl
rep
jl
repz
fadds
inc
dec
and
dec
insl
les
std
xchg
inc
movsl
add
fldcw
and
bound
in
jb
cmc
push
push
das
aad
and
movsl
push
add
decl
add
insl
add
fldenv
jl
repz
mov
in
fsubrl
std
xchg
xchg
jp
cmp
pop
jp
cmp
cmp
movsl
fsqrt
push
mov
or
scas
sub
jl
inc
dec
aaa
inc
das
mov
xor
xchg
shl
adc
nop
xchg
jl
push
add
icebp
adc
addr16
xor
ss
fucomp
js
push
lods
pop
inc
int
dec
iret
inc
pushf
pop
pusha
arpl
adc
out
punpckhbw
mov
jle
or
je
test
stc
mov
dec
push
xchg
cld
cmc
jb
dec
xchg
xor
xchg
pop
jbe
xor
fsts
and
jb
imul
push
add
rcrl
mov
sbb
fwait
repz
or
mov
loop
cmp
jg
cmp
stos
pop
in
stos
stos
xchg
xor
int3
test
shlb
jo
push
xor
iret
inc
mov
out
sarb
cmp
inc
jp
add
movsl
pop
mov
sbb
cld
adc
js
orb
xchg
sub
mov
add
fsts
test
jmp
ja
in
mov
fwait
sbb
js
push
out
movsb
push
xchg
int3
std
icebp
sar
mov
rcr
inc
push
out
fldz
push
mov
movb
rolb
stc
mov
pop
xor
sub
shrb
and
adc
xchg
int3
fsts
dec
mov
add
jb
xchg
jbe
lea
inc
imul
push
pop
stc
jae
testl
aam
popa
imul
mov
inc
jmp
mov
xor
xor
or
ss
fnsave
pop
cmc
dec
sbb
xor
outsb
sbb
cmpsl
xchg
mov
mov
pop
fldenv
cld
fyl2xp1
inc
mov
lahf
dec
out
rorb
cld
add
addl
insl
xchg
mov
rcll
mov
test
enter
dec
imul
xlat
push
lods
lahf
cmp
stos
cld
in
mov
mov
xchg
sub
data16
in
test
cmovno
test
pop
jmp
sbb
imul
scas
add
cmc
xchg
xchg
ds
cmp
cmp
jp
andb
jns
mov
daa
jp
cmp
cmc
fwait
jb
andb
jae
std
stos
sub
data16
leave
pop
shrl
movsl
loope
fisubs
pusha
jno
push
addr16
aam
xor
jge
cwtl
js
movsl
test
jnp
in
push
stos
push
in
push
scas
jbe
mov
jmp
or
adc
lds
std
fdivl
jae
imul
shll
pop
out
out
int
aam
xor
dec
ret
dec
fs
into
jo
sub
jae
movsb
fcomi
pop
lahf
scas
jge
les
cltd
loop
xchg
jae
test
jnp
sub
dec
addl
mov
daa
jl
cld
aas
and
popa
cmp
insb
inc
incl
nop
mov
daa
enter
lock
cmp
add
cmpsl
imul
in
adc
outsl
les
int3
lcall
mov
inc
icebp
repz
movsb
mov
ja
mov
xor
push
mulps
test
jmp
and
fstl
mov
cmp
and
xor
jno
mov
leave
scas
fnstsw
cmp
adc
sbb
jae
dec
and
out
mulb
add
jmp
cmpsb
das
sub
enter
int3
jl
fstps
fbstp
std
negl
lods
push
jno
addl
sbb
pop
push
xor
shll
push
imul
insb
push
cld
cltd
jo
div
out
ds
inc
ja
enter
rolb
scas
dec
inc
pop
sub
popa
push
xchg
fistpl
mov
xor
fxch
repz
mov
shll
sub
les
mov
mov
pop
std
add
cwtl
dec
flds
rcr
adc
fisubs
fs
dec
xor
and
leave
fsubrs
loop
gs
sbbb
cli
adc
xor
jbe
xor
push
dec
incl
cwtl
push
fbstp
and
mov
shll
test
stc
and
jae
cld
pusha
jb
cmp
repnz
daa
inc
in
mov
out
push
stos
cs
mov
lock
rcll
clc
iret
ss
rcll
jge
xchg
or
xchg
adc
outsb
xchg
hlt
roll
ret
mov
jnp
mov
jbe
sub
pop
ja
lods
xor
shll
in
inc
cmc
adc
inc
jb
and
pop
cld
push
jb
xor
and
jb
leave
fwait
push
fsubl
mov
push
push
fnstcw
loop
mov
xchg
shll
xorl
sub
test
add
and
inc
mov
xor
dec
push
and
inc
lods
cs
add
sbb
sar
push
loopne
gs
sahf
imul
and
in
clc
mov
jbe
sub
pop
or
sbb
add
cmp
stos
dec
loope
fcompl
pusha
jb
in
pop
mov
lcall
add
mov
aaa
inc
jbe
xor
mov
outsb
dec
popa
insl
in
cli
fdivs
scas
xchg
xor
cmp
push
cmpsb
inc
mov
out
pop
loope
dec
and
cmp
in
push
stos
inc
in
ret
stos
push
xchg
push
imul
sub
sub
inc
inc
cwtl
pop
and
scas
imul
cwtl
and
jb
fdivl
neg
and
pop
shrl
xchg
or
xchg
mov
mov
jae
pop
jp
push
arpl
gs
cmp
fs
pop
call
add
lcall
add
mov
xor
aaa
fsubl
ja
lods
cli
loope
das
sub
mov
xchg
xor
push
xchg
sub
xor
clc
xor
arpl
rorl
repz
jl
cld
test
outsb
push
or
decb
dec
fmull
or
or
push
insl
mov
pop
xor
and
add
push
adc
push
push
incl
cmp
mov
sub
sub
into
mov
test
rcll
xlat
rcrl
mov
decb
cmp
insb
adc
sub
push
imul
jnp
inc
sbb
dec
and
insl
ror
and
sub
push
jp
cmp
push
jp
cmp
les
dec
outsl
sbb
inc
jbe
xor
jbe
sub
inc
jl
std
push
push
sub
incl
cmc
push
xorl
into
sub
push
sub
fld
mov
pop
test
mov
dec
sbb
pop
inc
scas
xchg
mov
dec
cwtl
xor
sbb
mov
jg
cmp
mov
lret
cmp
mov
xchg
add
stc
test
pushf
sbb
imul
xlat
pop
fldcw
dec
popf
xorl
sbb
out
xchg
cmpsb
sbb
outsl
xor
test
push
dec
fstps
dec
jl
sbb
mov
cmp
xchg
xor
inc
fsts
pop
pop
iret
xor
jne
lock
bound
sbb
dec
push
cmp
lret
sub
and
lret
xchg
pop
leave
jle
push
sbb
cvtps2pd
sbb
inc
xchg
push
push
jge
cmc
test
bound
push
cmp
cmpsb
mov
inc
cmp
xchg
out
cmp
and
mov
jge
jo
pop
pop
add
fcmovnbe
movsl
pusha
mov
fdivl
enter
xchg
cmp
in
pop
stos
fidivs
std
loopne
fsubrl
jbe
xor
scas
xor
mov
cmp
pusha
jmp
cmp
inc
cmpsb
frstor
ficoml
cmp
not
xor
jns
das
pop
sub
shrl
fsts
mov
and
shll
incb
inc
inc
fadds
sub
pop
sub
stos
and
and
fxch
adc
adc
int
jno,pn
sarl
clc
xor
adc
dec
or
out
xlat
imul
cltd
inc
cwtl
dec
sbb
insl
xchg
inc
loope
mov
dec
faddl
inc
jb
and
inc
sub
mov
out
jle
sti
shlb
add
mov
fwait
or
jo
lods
insl
popa
rcrb
dec
jp
cmp
popa
pop
outsb
jno
enter
fs
ja
lock
pusha
add
movsb
add
popa
es
xchg
iret
xchg
xchg
sarl
xor
lea
sarl
pushf
rcrl
mov
loopne
push
mov
jge
orb
bound
int
push
pop
mov
xor
dec
enter
out
dec
js
pop
rep
jle
jge
and
ja
in
dec
stos
adc
out
jge
pop
mov
enter
xor
mov
inc
jns
xchg
and
xchg
lds
jo
aaa
and
ret
pop
repz
jl
loopne
mov
inc
xlat
mov
add
mov
add
dec
or
sub
insl
in
xchg
mov
pop
sub
inc
repz
mov
pop
push
pop
aas
push
add
push
ficoms
inc
lock
pusha
pop
or
push
stos
repz
out
stos
js
lret
dec
aam
xor
data16
cmpsb
cmp
sarb
repz
repz
and
inc
test
aam
cmpsl
inc
sarl
add
mov
xlat
jb
mov
cld
fdiv
stos
jl
call
jae
push
xchg
daa
fnstcw
imul
cli
shr
jg
popa
jg
inc
lods
push
aaa
and
fcoms
cmp
inc
leave
push
xchg
icebp
shrl
lcall
xchg
xor
xor
mov
fnstcw
loope
dec
push
aas
xor
push
stos
or
aaa
rcll
bound
in
xor
cmp
mov
jg
push
inc
int3
dec
inc
std
adc
mov
jb
in
xor
inc
rcr
sub
xor
push
pusha
ja
and
mov
xchg
add
and
jb
push
out
aam
cld
loop
cld
shlb
fdivs
sbb
jl
repz
add
or
pop
in
scas
aas
loope
pop
ja
sub
dec
in
xor
es
int
inc
popl
xchg
cmc
rcll
xchg
adc
sub
scas
pop
xchg
aad
orps
sub
cmpsb
sbb
mov
and
nop
cwtl
pushl
pop
sbb
sub
arpl
fcoml
lcall
xor
pop
add
jo
xor
and
push
jmp
push
iret
stos
fld
dec
lods
or
hlt
xlat
or
sahf
push
nop
in
in
stos
jns
push
adc
add
jae,pn
jae
jb
and
inc
push
imul
stc
test
dec
push
addr16
push
push
pop
mov
push
xchg
and
sub
sub
push
push
stos
cmp
xchg
or
fldt
pop
test
lcall
out
sar
inc
jbe
jl
cld
add
stos
sub
cltd
add
push
and
mov
xchg
fistpl
in
inc
cli
fs
adc
cwtl
add
rclb
ret
pop
jae
std
negb
hlt
and
test
out
push
and
xor
cmp
mov
jecxz
mov
cmpsl
sahf
mov
jge
cmp
mov
xchg
adc
sub
in
pop
and
repnz
jbe
sub
or
imul
iret
stc
mov
pop
adc
push
push
lods
cmpsb
loop
sub
jb
cmp
jmp
fs
aad
or
jo
sbb
aaa
xchg
lcall
in
fisttpl
cld
shl
nop
jb
iret
gs
in
out
sti
cmpsb
adc
rcll
xchg
xchg
enter
push
test
mov
ja
inc
mov
rorl
lds
lds
scas
jbe
sub
dec
popa
xor
das
pop
and
mov
cmpsl
ret
adc
add
imul
fsubs
rorl
inc
adc
jo
shll
lods
jns
pop
inc
adc
mov
inc
sahf
lcall
mov
inc
repnz
jnp
mov
leave
push
test
mov
mov
xor
sub
add
bnd
andl
insb
lret
or
jmp
push
ret
ljmp
inc
and
ljmp
push
xor
and
sbb
sar
aaa
sbb
cmp
shll
xor
push
daa
sbb
mov
pushf
dec
rol
lods
dec
jecxz
mov
mov
xor
xchg
xchg
dec
inc
in
gs
hlt
clc
arpl
lea
pop
sbb
add
pop
and
sbb
aaa
notb
clc
inc
mov
repz
lahf
dec
mov
clc
dec
and
mov
jg
jge
jb
jmp
mov
jecxz
into
pushf
stc
jge
xchg
repz
jbe
lahf
jns
lahf
push
fcompl
std
mov
dec
jns
push
dec
stos
jp
inc
fwait
add
inc
xchg
sbb
call
sbb
push
sub
inc
inc
sub
addr16
or
call
bound
fdivl
push
cmpsb
das
xchg
jl
flds
pop
mov
jo
xor
xor
push
out
jo
rclb
loopne
adc
or
insb
lcall
bound
cmpsl
out
jl
xchg
rcrb
stos
out
push
not
clc
add
clc
in
jnp
xchg
adc
push
imulb
aaa
int3
sub
push
repnz
sub
in
sbb
pusha
mov
or
push
pushf
cs
loope
push
inc
xchg
imul
add
dec
adc
sub
cmc
fs
pop
js
xchg
pop
push
sub
pop
sub
xchg
sbb
jnp
add
ja
insb
jg
cs
inc
in
dec
outsb
sbb
xor
clc
push
sub
adc
fists
cwtl
push
outsb
inc
icebp
fistps
jns
mov
cld
cmp
test
cs
dec
lahf
adc
dec
jecxz
js
jns
push
insb
enter
push
push
jmp
jg
xchg
xchg
jl
jl
dec
frstor
and
in
pop
jle
cld
inc
push
or
dec
push
push
enter
scas
lods
out
mov
push
scas
xchg
call
or
push
bndldx
andl
orb
mov
repnz
xchg
addl
pop
sbbl
dec
push
fldenv
outsb
xchg
cmp
sbb
gs
insb
jg
mov
push
pop
mov
movsb
repz
ss
inc
out
sub
sbb
lods
pushf
add
add
pop
xchg
push
jge
inc
push
mov
xchg
mov
inc
mov
faddl
ds
mov
subl
jmp
addb
pop
sub
aaa
daa
stc
pushf
ret
aas
jbe
stos
jecxz
dec
imul
pop
or
fs
sahf
cmp
lret
loope
lret
pop
inc
pop
mov
lret
sbb
xchg
or
rorb
push
or
jb
in
popf
pop
int
inc
push
and
and
sbb
xchg
mov
nop
or
fidivrs
pop
test
and
shll
insb
mov
jge
lds
push
sbb
std
fimull
icebp
add
inc
cmp
pop
push
sbb
cli
gs
sub
lcall
add
scas
movsl
push
cmpl
jns
dec
pop
jl
cs
outsb
popf
cmp
lods
cmpsw
adcl
js
test
or
addl
jl
jno
jge
dec
sbb
adc
add
fsubl
jbe
not
push
sub
daa
mov
jecxz
imul
addr16
inc
push
sub
outsl
and
loope
cmp
xchg
adc
movsl
cltd
pusha
adc
sbbl
inc
inc
sbb
sahf
orb
push
xchg
movsl
dec
xchg
and
fisttpl
jo
push
mov
icebp
add
pop
sub
mov
or
daa
sbb
lret
add
xchg
mov
jle
cmp
enter
mov
and
sub
fnstsw
jecxz
adc
fdivrl
pop
jg
adc
in
sbb
sbb
add
xchg
bound
and
xor
roll
jl
arpl
rorb
scas
aad
dec
mov
mov
addr16
mov
out
testb
mulb
inc
jae
pop
dec
leave
adc
ja
cmp
add
inc
loope
mov
inc
pop
cmp
ja
inc
push
lds
jge
jne
inc
mov
fs
mov
std
xchg
out
sub
push
cmp
dec
cmc
pop
and
clc
sub
dec
or
pop
inc
repnz
enter
loope
jo
fcompl
jno
sti
sub
xor
jae
ret
aas
cmpsl
add
sti
jns
scas
incl
xor
lahf
dec
imul
mov
and
mov
movsl
sub
popa
sub
scas
sub
movsb
bound
es
pop
leave
sbb
sub
and
es
in
sub
cltd
xor
sbb
inc
aaa
ja
sub
pop
add
xchg
cltd
mov
cmc
mov
and
nop
dec
inc
out
add
jnp
push
addb
cmp
icebp
and
addr16
lea
lock
mov
les
cmpb
inc
sbb
testl
sbb
cs
add
lret
pop
or
fimull
ja
enter
dec
and
fimull
test
pop
pop
popa
push
lcall
adc
or
sbb
xchg
mov
push
mov
adc
mov
and
data16
clc
push
insl
xor
add
pop
testb
mov
fadds
xchg
lock
and
mov
and
xchg
pop
sub
push
add
shr
or
in
xor
stc
sub
cwtl
jge
pop
jge
bnd
mov
jno
hlt
call
cmp
les
pop
ret
add
scas
xor
mov
inc
outsl
cmp
in
cmp
aam
inc
jno
repnz
mov
lods
jp
mov
fwait
outsl
mov
inc
sbb
gs
pop
orl
mov
js
mov
sub
aaa
mov
mov
xchg
shl
or
int3
popa
cwtl
movsl
push
xchg
xor
out
adc
and
pop
fdivl
lods
cmp
mov
ljmp
lds
pop
xor
push
test
add
dec
aas
pop
jo
popf
sbb
jns
cltd
push
mov
out
lcall
add
add
add
pop
sub
sub
xor
add
shl
or
cmp
sub
test
movsbl
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
or
bt
movzbl
xor
btr
or
adc
xor
jmp
lcall
ret
or
not
bt
not
btc
shl
neg
test
dec
dec
add
dec
jmp
lcall
xor
add
add
pop
xor
xchg
push
xor
not
test
shl
cmp
shr
movzwl
cmp
dec
call
lcall
incl
ret
neg
sub
or
bswap
shr
mov
btr
adc
adc
jmp
lcall
test
add
shl
and
inc
shr
btr
movswl
mov
mov
xchg
push
push
xchg
dec
add
add
call
and
cmp
and
cmp
cmp
shl
btr
bt
add
mov
movswl
shr
test
sub
adc
xor
bswap
shl
mov
shl
sub
xchg
mov
bsf
btr
movsbl
inc
or
sub
neg
btr
bsf
jmp
lcall
ret
or
adc
cmp
not
sub
or
movzbl
shl
btc
movsbl
call
lcall
add
xorl
pop
xor
xchg
push
add
btc
inc
cmp
dec
xor
and
xor
neg
jmp
lcall
stc
add
xchg
ret
neg
sub
bt
adc
sub
mov
shr
xor
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
adc
sub
add
inc
shr
bswap
btc
xor
jmp
lcall
pop
add
adc
ret
in
out
bsf
and
shl
btr
add
or
add
mov
add
adc
mov
test
bswap
mov
xor
bsf
or
call
lcall
add
and
sub
shr
sub
bts
sub
call
lcall
or
neg
mov
test
and
or
xor
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
test
bt
bts
sub
and
mov
mov
adc
call
lcall
loopne
test
xor
not
adc
cmp
btr
bsf
test
mov
jmp
lcall
div
jg
pusha
adc
mov
btc
bt
shr
bt
movzwl
mov
dec
adc
test
xor
test
btr
cmp
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
shr
test
xor
xor
movzbl
or
add
dec
push
mov
and
not
or
mov
movzwl
mov
btc
add
btr
mov
or
sub
or
dec
bsf
bts
cmp
dec
bts
add
mov
add
add
mov
or
movzbl
sub
inc
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
neg
mov
mov
adc
not
xor
bts
or
bsf
cmp
call
lcall
add
movzwl
adc
dec
test
and
btr
btr
neg
btc
mov
add
or
or
test
and
neg
test
test
bts
shl
sub
mov
or
test
bsf
sub
neg
xor
btr
call
lcall
mov
adc
cmp
or
sub
shl
test
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
cmp
sub
cmp
bt
adc
or
shr
shr
bts
not
add
xor
mov
test
add
mov
jmp
lcall
not
cmp
bt
btr
bt
xor
xor
mov
add
shr
movzwl
btr
test
cmp
or
test
or
call
lcall
add
cmp
sub
btr
mov
movzwl
cmp
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
cmp
neg
bsf
test
sub
test
sub
mov
adc
sub
test
or
sub
movsbl
adc
dec
movswl
bsf
add
test
add
test
shl
mov
or
sub
mov
add
xor
bts
add
and
movzwl
test
sub
shr
lea
inc
cmp
jne
and
cmp
cmp
xor
test
or
adc
add
bts
or
sub
sub
and
btr
or
call
lcall
je
btc
dec
shl
shr
btc
shl
test
cmp
sub
mov
test
or
mov
btr
or
shr
adc
movzwl
call
lcall
mov
add
cmp
xor
adc
xor
test
btr
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bts
movswl
or
adc
test
neg
neg
btr
call
lcall
xor
or
mov
bsf
cmp
test
and
sub
sub
dec
add
test
cmp
test
and
btc
bsf
bts
jmp
lcall
dec
or
and
or
btc
or
neg
mov
add
cmp
btr
or
adc
inc
sub
or
neg
call
lcall
add
adc
bt
bsf
test
bsf
shr
bswap
btr
push
pop
inc
add
loop
neg
shr
test
mov
shr
or
neg
adc
xor
push
decl
mov
add
bts
xor
test
not
inc
adc
test
bsf
call
lcall
decl
mov
bt
bswap
sub
test
or
cmp
push
shll
sub
test
test
adc
btc
cmp
btc
push
test
btr
test
test
sub
sub
test
test
sub
mov
shl
xor
test
not
mov
mov
shl
btr
push
push
pop
add
add
call
bt
mov
cmp
or
cmp
cmp
movsbl
add
shl
xchg
shl
cmp
sub
bsf
and
mov
movswl
mov
sub
cmp
test
btc
and
neg
xor
and
call
lcall
mov
xlat
cmp
or
mov
bswap
btc
shl
or
bsf
add
btr
sub
mov
cmp
mov
bsf
cmp
call
lcall
or
mov
or
xor
test
test
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
and
and
xor
sub
add
cmp
xor
btc
and
test
neg
test
btr
call
lcall
les
loopne
xor
shr
shl
and
adc
mov
dec
and
adc
neg
adc
btc
xor
dec
cmp
je
sub
mov
add
neg
not
btc
add
btr
adc
add
add
or
xor
xor
cmp
mov
or
mov
call
lcall
or
inc
adc
mov
not
xor
and
sub
neg
sub
and
and
sub
btc
bts
adc
shr
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
btr
adc
adc
shl
not
inc
test
and
push
decl
mov
add
add
mov
or
and
cmp
adc
bts
push
decl
mov
add
or
adc
bts
shl
and
adc
or
add
mov
inc
btr
cmp
cmp
adc
neg
add
bt
jmp
cmp
shl
movzbl
cmp
xor
shr
test
dec
mov
adc
add
or
sub
dec
or
bsf
or
mov
and
xor
bt
btc
cmp
shl
inc
mov
add
bt
or
xor
shl
btc
and
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
mov
shl
mov
cmp
test
shr
neg
bt
bts
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
add
shr
not
add
xor
sub
shr
push
push
and
xor
adc
mov
bsf
bt
test
mov
push
sub
mov
sub
test
adc
bt
and
bt
shr
mov
and
cmp
add
inc
cmp
and
shr
call
lcall
js
roll
fwait
adc
test
xor
cmp
test
bsf
lea
bt
bts
or
and
cmp
mov
mov
adc
mov
btc
adc
test
btc
or
add
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
and
out
ja
shrb
neg
and
bsf
bt
bsf
sub
mov
adc
sub
add
and
and
shr
push
add
add
test
and
xor
adc
push
sub
bts
xor
add
sub
mov
shr
push
and
adc
movzwl
movsbl
xor
btc
btr
call
lcall
mov
test
and
and
btr
btr
xor
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bts
or
cmp
bt
or
test
cmp
inc
call
lcall
sub
mov
sarl
btr
or
sub
test
bts
add
xor
bsf
sub
adc
or
inc
sub
call
lcall
mov
sub
mov
movzwl
bswap
or
shr
shr
or
mov
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
adc
or
push
fs
lods
xchg
add
cmpsl
jnp
popa
mov
cmp
shlb
push
aas
add
mov
push
bound
daa
xlat
dec
out
or
imul
adc
cmp
hlt
add
test
nop
loopne
icebp
sbb
sbb
pop
add
dec
inc
sar
cmp
enter
or
adc
and
jae
ljmp
sub
adc
push
mov
push
dec
call
std
test
xlat
add
fisttpll
ret
scas
pushf
add
jmp
popf
adc
pop
cmp
add
add
cmpsb
mov
add
or
add
shlb
lahf
adc
sub
inc
sbb
test
sub
sub
and
fsubl
mov
fsubl
sbb
and
xchg
mov
inc
and
add
pop
sbb
add
nop
inc
mov
subl
out
mov
aad
jp
call
add
mov
xor
inc
dec
inc
push
dec
push
mov
inc
aaa
cmp
pop
mov
push
shll
cmc
xor
mov
pop
iret
push
push
pop
add
xor
lock
inc
cmp
dec
push
inc
push
mov
cmp
push
rolb
cmp
mov
aaa
into
inc
cmpsl
xor
in
jle
dec
ljmp
push
push
inc
inc
incb
push
inc
inc
dec
inc
loope
add
dec
add
dec
inc
addl
push
xchg
inc
cwtl
push
aaa
xor
inc
dec
inc
inc
inc
dec
dec
push
cmp
push
hlt
ss
cmp
pop
out
dec
cltd
push
push
cs
movsl
dec
dec
or
inc
aad
cmp
pop
pop
inc
dec
loop
push
pop
inc
cmp
repnz
cmp
jns
je
out
dec
and
jb
fiadds
jle
ss
fstl
cmp
cli
mov
mov
das
sub
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
cs
std
cmp
push
ja
insb
cmp
sbb
scas
sbb
or
push
push
inc
cli
mov
outsl
adc
jo
add
push
push
push
imul
shlb
stc
push
gs
mov
inc
jo
mov
outsl
outsb
jae
es
mov
cs
jle
js
adc
pop
cmp
adc
pop
ss
dec
out
cs
sbb
divl
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
stc
test
push
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
pushf
add
aam
add
sbbb
dec
add
push
inc
push
inc
pop
xor
fs
jne
pop
push
lret
or
dec
inc
sahf
add
pusha
