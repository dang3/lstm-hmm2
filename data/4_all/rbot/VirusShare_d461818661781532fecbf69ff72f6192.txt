or
add
add
mov
add
add
add
or
add
add
add
add
incl
add
enter
add
add
add
add
fistpll
add
rorb
add
or
adc
rorl
xor
rorl
add
add
mov
add
add
rorb
pushf
rorb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
and
les
add
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
into
mov
or
add
stos
gs
sbb
and
iret
ret
les
pop
filds
and
xor
movsl
ret
pop
dec
add
sarl
dec
clc
nop
hlt
je
sub
jae
pxor
jno
out
sbb
in
xchg
shr
push
mov
pop
lea
jns
lcall
mov
paddb
outsl
jmp
cmpsl
mov
add
dec
mov
ja
imul
cmp
inc
cmpsb
xchg
test
sbbl
js
sub
or
sbb
icebp
ret
fldenv
push
popa
test
out
jns
arpl
fists
pop
jnp
add
in
mov
lds
push
xor
negb
push
loope
pop
js
dec
mov
mov
pusha
dec
pop
and
adc
dec
pop
test
mov
mov
xor
in
out
or
push
mov
xor
add
lods
xchg
mov
pop
push
sbb
sub
jg
sbb
push
notl
test
lods
fimuls
add
ficoms
push
das
shrl
xor
pop
mov
inc
pushf
in
cld
repz
xor
pusha
dec
mov
jp
or
mov
pop
push
pop
rol
xchg
push
xor
dec
iret
imul
ljmp
test
enter
pop
rcl
dec
je
pushf
out
or
jmp
lods
dec
cmp
push
jnp
xchg
nop
rorl
push
mov
sub
roll
sbb
add
jb
in
xchg
push
mov
mov
aaa
les
push
fadd
mov
popa
mov
xor
sbb
jle
mov
stc
in
cli
dec
jae
scas
mov
xor
xchg
push
inc
lds
inc
leave
frstor
inc
jl
pop
cltd
mov
push
ret
pop
or
fildll
sbb
pop
fs
fdivr
inc
lock
sbb
mov
jl
out
test
cld
xor
loopne
repnz
outsb
xchg
cmpsl
cwtl
mov
sub
xchg
cltd
sbbl
ljmp
fdivs
adc
test
aad
cs
mov
ret
push
es
daa
adc
mov
adc
xchg
dec
xor
idivb
in
xchg
mov
adc
mov
lcall
xchg
imull
in
int
or
jb
out
mov
cmp
mov
xchg
fsubs
ljmp
cli
sub
mov
xor
movsl
xor
pop
cmp
aad
divb
cmp
imul
mov
outsb
cmp
sahf
loope
xor
adc
insl
pop
sub
mov
aaa
cmp
xchg
sub
out
pop
adc
test
and
incb
cmp
pusha
outsb
sti
adc
dec
inc
add
push
test
jl
stos
dec
loop
sahf
inc
push
sbb
mov
and
mov
pop
inc
data16
mov
mov
and
sbb
call
ss
xorl
or
fldl
mov
xchg
subb
push
inc
push
dec
push
xchg
and
call
sub
mov
mov
sbb
dec
ss
jae
movsl
gs
xchg
jmp
dec
pop
enter
dec
js
mov
or
lds
adc
jns
push
mov
xor
cmp
sub
xorl
mov
adc
icebp
cmp
xor
mov
mov
sbb
subb
sti
inc
xlat
push
jp
in
add
cmp
pop
mov
adc
and
jmp
mov
js
inc
clc
paddq
jb
mov
and
xchg
cmp
jl
dec
xchg
cmp
fistpl
push
and
lods
inc
xchg
mov
mov
test
jne
push
in
xchg
dec
lret
aam
std
aam
jl
pop
pop
and
pusha
loop
and
rclb
and
and
dec
insb
xchg
mov
imul
mov
mov
fbstp
push
inc
lcall
and
scas
jno
mov
mov
inc
lea
push
fisttpl
pop
repz
dec
clc
sub
lahf
adc
pop
jns
data16
std
mov
dec
es
push
cmc
mov
lcall
cld
repz
loopne
xchg
xchg
jae
loopne
adc
sub
jo
jle
dec
push
je
mov
cmc
pushf
dec
mov
sahf
inc
das
xchg
or
cltd
iret
pop
jae
mov
and
and
ds
scas
leave
mov
or
in
sbb
jp
mov
mov
mov
int
dec
cmpsb
adc
pushf
jae
inc
sahf
push
fisttps
dec
mov
cltd
lret
sbbb
inc
lods
jg
dec
lock
mov
jb
mov
andl
clc
pusha
sbb
inc
xor
or
inc
push
adc
and
notl
push
sub
mov
shlb
adcb
outsb
shl
cmp
jecxz
in
pop
out
stc
mov
cmp
jo
aas
out
inc
out
sahf
adc
imul
stos
and
inc
mov
repz
cwtl
scas
adc
jns
mov
sahf
or
mov
cmp
je
movsl
jae
jp
insl
dec
aam
imul
divl
mov
mov
lahf
iret
mov
xchg
arpl
in
hlt
orl
pop
cmp
cmpb
nop
inc
int3
mov
adc
loop
adc
or
fucomip
dec
int3
inc
dec
sub
or
lcall
aad
push
xchg
jp
bound
out
jmp
mov
and
out
add
cmp
arpl
cmp
dec
sti
inc
stos
or
sub
sub
int
pushf
inc
data16
or
imul
xor
lret
mov
cmc
in
sbbb
xor
mov
in
mov
xor
xchg
mov
push
aas
push
mov
jg
mov
data16
aas
xchg
sbb
mov
pop
add
pop
jecxz
adc
cmp
and
enter
xchg
sub
sub
inc
ret
push
dec
xor
add
in
mov
xchg
loopne
pop
xchg
and
cmp
sarl
mov
scas
xor
test
decl
jg
push
pop
aaa
mov
xor
xor
ljmp
enter
and
loop
mov
xor
jo
mov
sbb
fbld
pusha
ret
out
adc
mov
mov
test
insl
and
or
xchg
scas
mov
cmp
sbb
testb
leave
shll
movsl
and
push
outsb
enter
inc
scas
sub
mov
sarl
or
dec
pop
jo
aaa
xchg
push
dec
push
dec
inc
fbld
cmpsl
xor
test
push
test
xchg
jnp
pop
push
inc
movl
in
bound
sarl
xchg
enter
je
jge
aas
fwait
jg
movsl
adc
cmp
and
mov
or
mov
leave
push
pop
pushf
cmp
add
pop
add
sub
xorb
int
daa
push
cld
xchg
mov
in
int
adc
movb
mov
cmp
enter
cs
rorb
jnp
lret
vpunpcklwd
mov
cmpsl
mov
ja
sub
cwtl
fcoml
and
cli
and
mov
fistpll
popa
and
push
test
in
jmp
jmp
inc
sahf
add
mov
inc
add
dec
pop
pop
dec
push
notb
xlat
sub
adc
mov
aam
std
movsb
push
or
add
loopne
stos
popf
fincstp
stos
or
dec
pop
pop
xchg
adc
adc
lods
dec
sbb
mov
jg
imul
push
pop
xchg
pop
push
xchg
pop
cmp
fistps
ja
scas
movsl
push
push
incl
hlt
ret
int
insl
adc
mov
push
and
add
call
hlt
mov
push
jo
enter
leave
inc
clc
cmpsl
push
fs
and
push
mov
shlb
inc
dec
mov
pop
adcb
cmpsl
pop
fnstsw
aad
mov
cmpsl
jg
shlb
rcll
xor
ret
sarb
mov
rclb
mov
mov
paddusb
sub
push
dec
xchg
popf
xchg
push
sub
push
jmp
mov
repz
mov
rcrb
daa
jl
push
in
inc
scas
leave
mov
mov
or
sahf
jb
and
cmp
xor
or
push
call
cmp
fnsave
bound
mov
insl
lret
test
negl
sahf
aad
mov
ljmp
imul
js
out
jnp
dec
mov
cmp
lods
cmpsb
xchg
mov
rcrl
cmpsl
push
fsubrs
lret
movsb
adc
cmp
inc
xchg
jne
inc
pop
and
sub
aad
adc
adc
hlt
jecxz
jnp
lock
ret
js
ret
loop
dec
subl
aam
inc
dec
loopne
ficoml
jae
sbb
cltd
cli
in
rcll
loope
dec
cmp
imul
inc
mov
adc
mov
jb
gs
out
mov
mov
loopne
push
xchg
jne
mov
sbb
or
jp
jb
push
push
push
xchg
xor
loope
test
inc
lds
mov
adc
adc
push
mov
lds
fisubrs
testl
add
aas
lahf
idiv
fistps
enter
rcrb
insb
adc
je
jno
adcl
xchg
sbb
mov
hlt
mov
jnp
lock
pop
inc
inc
fidivrl
and
inc
push
lds
rorl
out
sbb
lahf
mov
xchg
popa
mov
mov
lds
push
or
ficoml
xchg
push
and
push
ds
mov
ja,pn
jmp
rorl
sub
adc
leave
pop
mov
add
cmp
arpl
jg
pop
mov
mov
sub
dec
pop
push
mov
mov
mov
pushf
lret
movsb
cmp
jecxz
pop
mov
jnp
add
shlb
aaa
out
aas
shl
out
push
add
cmp
push
cmp
fwait
sbb
pop
jae
push
js
pop
ss
pop
pop
fstl
jbe
jbe
les
push
mov
lds
sbb
xor
xor
test
push
mov
sub
sub
dec
aaa
push
ds
pop
mov
cmp
loop
les
or
call
iret
ror
cmp
mov
push
mov
sub
pop
and
push
bound
repz
mov
pop
sub
adc
decl
insl
es
pusha
sarl
dec
lock
popf
das
mov
inc
jo
xchg
xchg
pop
cmp
popf
push
mov
addl
nop
mov
push
dec
sub
cmp
scas
push
jae
push
ja
lea
push
lock
fimull
fsub
shrb
aaa
pop
sti
jg
push
dec
pop
and
mov
pop
xchg
pop
xchg
pop
std
in
and
lds
cmp
cmp
in
pop
inc
loop
mov
dec
in
lret
dec
mov
cwtl
fdivl
nop
pop
in
dec
sahf
cmp
rcrl
and
jbe
test
roll
inc
xor
fistpl
xchg
gs
sub
and
or
cmc
test
push
insb
repz
mov
pop
mov
dec
popa
rolb
pop
adc
shlb
mov
negb
movsb
sub
and
mov
mov
and
sti
xor
mov
jp
add
or
xchg
inc
push
imul
leave
rclb
dec
mov
inc
cmp
xor
popa
cmp
mov
add
xchg
stos
fistps
jne
test
ss
xor
cmp
jnp
jne
mov
lea
dec
and
sbb
xor
pop
enter
les
mov
mov
leave
and
shl
adc
aad
fsqrt
lock
loop
xlat
addl
nop
mov
ljmp
ljmp
dec
pop
pushf
mov
xor
je
ljmp
sti
xor
out
outsl
mov
incb
jl
popl
dec
add
push
xchg
mov
icebp
sbb
aaa
test
or
xchg
jecxz
mov
pop
loope
jg
dec
je
aad
adcb
mov
roll
jmp
mov
lods
lods
xchg
mov
xor
jne
sahf
test
xchg
cld
cmp
sahf
pop
aam
lret
and
pop
sbb
sbb
shrb
ret
xor
nop
sar
loopne
adc
ret
rolb
mov
js
dec
jg
pop
push
and
or
in
out
cwtl
je
add
inc
inc
in
sbb
pop
lcall
fdivr
sub
sbb
jno
xchg
jbe
pop
jg
sbb
add
xchg
jae
adc
pop
daa
arpl
inc
cmp
lret
test
pop
sti
out
into
nop
jo
push
out
lea
addl
and
sarb
stos
outsl
inc
mov
mov
fildll
sbb
adc
jae
ja
sbb
lret
xchg
adc
or
std
sbb
jns
shlb
cmpsl
push
and
jns
mov
clc
cmp
xor
ret
aam
cmp
movd
xchg
fstp
leave
insb
ret
in
sbb
push
out
es
loopne
pop
or
add
cmpsb
pop
cmp
lds
scas
into
outsb
popf
dec
mov
cmp
sbb
insl
mov
test
dec
dec
popf
push
and
xorl
cld
jnp
or
lret
sub
inc
dec
and
mov
or
mov
mov
push
jnp
in
stc
and
repz
jbe
lret
lods
call
mov
lods
out
lret
sbb
ljmp
xor
or
mov
mov
dec
add
add
mov
push
repz
stc
sahf
pop
sbb
addb
and
rcl
pusha
or
pushf
in
jmp
outsb
jns
data16
push
push
add
xchg
ja
out
sub
push
pop
push
cmpxchg
in
sahf
push
sarb
push
adc
dec
lea
push
scas
shlb
add
cmp
inc
add
rorl
xor
in
mov
lahf
lods
sbbl
dec
add
lret
inc
jge
ror
mov
xchg
push
adc
cmp
jo
add
mov
xchg
jg
and
cmpsb
das
and
repz
fwait
movsb
enter
jecxz
les
dec
adc
loop
dec
fstpt
scas
mov
test
aaa
ret
adc
adc
fucom
xchg
sub
sub
mov
cltd
cwtl
cltd
lret
and
xchg
icebp
iret
test
pop
or
dec
xchg
pusha
mov
shlb
movb
js
push
jle
imul
mov
arpl
pop
popf
aas
cmpsb
pop
xor
and
jg
pop
adc
xchg
fcom
lods
jo
adc
test
fdivs
cs
xlat
adc
pop
repnz
cli
push
test
lods
pop
push
scas
push
js
dec
or
call
xor
clc
pop
jae
sbb
shlb
mov
xor
mov
ds
sub
push
repnz
popf
push
js
adc
lret
mov
and
pop
xlat
cmp
lods
ja
mov
inc
out
mov
scas
jecxz
mov
fimuls
outsb
faddl
in
cmp
jbe
mov
lea
pop
aaa
fdiv
call
test
enter
and
addl
out
setg
mov
lods
or
xor
les
mov
movsb
lock
dec
int
mov
insb
popf
push
stos
fisubs
xor
nop
xchg
in
jecxz
and
hlt
rcrl
pop
inc
fdiv
fistpl
sub
adcb
jae
and
push
rorl
loop
flds
movsb
push
scas
jp
js
int3
push
cwtl
mov
es
xchg
std
stc
out
xchg
xchg
pop
xor
popa
cmp
repz
repz
or
out
adc
sub
orl
sahf
jge
dec
fiadds
add
add
mov
dec
mov
xor
push
and
test
aad
fisttps
add
out
ja
adc
dec
pop
pop
ficoms
mov
pop
sub
dec
adc
clc
loope
xchg
and
xlat
stc
jle
lods
outsl
sub
and
and
mov
ret
scas
lds
js
and
aad
sbb
xor
js
and
dec
push
jge
arpl
imul
jne
rcr
xor
ret
inc
enter
mov
mov
out
mov
sbb
sub
and
xchg
insl
cld
inc
xchg
lods
shlb
mul
ficomps
stos
sbb
xchg
push
jae
into
inc
adc
out
sub
pop
je
sbb
jge
dec
cwtl
sahf
jp
fisubs
pop
and
adcb
or
pusha
jge
stos
mov
pop
ret
jmp
and
push
pop
push
neg
push
pop
daa
loope
dec
pop
rorb
mov
dec
fldcw
leave
scas
sbb
aaa
stc
dec
ds
outsb
mov
hlt
popa
adc
in
pushl
xchg
mov
xchg
into
repnz
fldt
cmp
xor
sub
pop
mov
jg
and
imul
shrb
fs
cmpsb
hlt
mov
fcom
ret
imul
xchg
and
loopne
and
mov
and
imull
add
lds
mov
jg
iret
rorl
lods
xchg
test
mov
rcrb
js
das
int
sbb
notb
aaa
add
and
cmp
add
stos
movsl
or
lcall
jle
inc
cmp
cmpsb
mov
pop
xchg
mov
inc
jae
jp
mov
mov
cmp
lahf
fwait
add
int
pop
cmpb
lcall
and
scas
subps
sub
sbb
testb
andb
push
inc
sbb
jg
ljmp
stc
push
mov
shlb
xor
test
out
mov
inc
fwait
idiv
sbb
mov
lods
hlt
xor
scas
fwait
xlat
mov
jns
push
dec
lods
sbb
and
ja
push
pop
into
fdivl
stc
and
rcrl
mov
jmp
pop
pushl
ret
ret
sbb
dec
pushf
cmp
mov
xchg
and
lret
add
orl
pop
popf
push
loope
imul
or
iret
outsw
roll
jbe
lahf
push
mov
push
fdivrs
jae
cmp
jmp
push
mov
aaa
pusha
movsl
lock
mov
or
push
adc
sbb
inc
dec
inc
mov
repz
pop
out
sbb
test
push
in
aam
xchg
jle
scas
and
mov
cmp
pushf
lock
mov
and
out
xor
jg,pn
inc
test
hlt
jmp
jle
jbe
gs
mov
mov
mov
loop
mov
pusha
shrb
sub
mov
pop
std
jnp
sub
pop
ds
in
adc
bound
cmp
push
adc
mov
mov
cmp
jo
jecxz
mov
cmpsl
scas
mov
outsb
xchg
dec
gs
xor
push
xor
cmpsb
clc
insl
push
dec
add
add
push
ret
adc
iret
and
sub
mov
and
sbb
popf
inc
mov
nop
sub
xlat
shrl
push
movsl
xor
inc
jae
sub
int3
jle
xchg
add
inc
xchg
lahf
or
aaa
divb
pop
out
movb
push
adc
adc
cmc
or
divl
push
cmp
insb
xor
popa
xchg
xor
push
pop
pop
loop
push
icebp
imul
addb
dec
push
pusha
and
push
std
movsl
ja
insb
aad
movsl
xchg
xchg
push
out
in
push
sarl
into
std
push
and
into
jb
xchg
mov
mov
mov
add
cmp
jp
mov
outsb
inc
and
mov
jp
mov
test
lock
mov
xchg
mov
call
xor
sub
or
pop
mov
and
push
pavgb
das
inc
push
push
lods
or
aas
xlat
and
ret
arpl
mov
sub
shlb
adc
dec
popa
pop
jo
icebp
pop
mov
sbb
icebp
mov
rcrb
movb
jmp
call
jmp
cmp
adc
push
mov
jae
iret
jno
push
mov
daa
lods
rorl
mov
daa
adc
fs
stos
mov
dec
dec
xchg
cmp
roll
or
add
nop
adc
repnz
mov
cmp
in
arpl
cmp
enter
ret
sbb
cmp
in
loope
fstpl
add
subl
mov
adc
adc
adc
xor
icebp
shlb
cmp
dec
lahf
add
add
je
push
xor
inc
add
shl
ds
mov
in
mov
mov
loope
sub
sbb
fidivrl
cmpsl
adc
loop
xchg
pusha
xor
mov
imul
cltd
push
adc
in
jnp
push
fldcw
lods
cltd
xchg
das
jmp
fwait
leave
mov
mov
dec
lret
ret
jmp
out
or
cwtl
adcb
insl
mov
fistps
push
outsl
pop
inc
jb
pusha
mov
je
mov
lock
sahf
rorb
adc
push
jge
pop
shrl
loopne
roll
andl
aam
mov
lret
stos
cs
or
into
loop
loop
loopne
fwait
sarl
jp
mov
jmp
mov
sub
jl
pop
imul
adc
notb
aas
add
or
mov
mov
or
adc
dec
aam
pop
adc
push
fsts
js
jg
push
push
push
and
push
adc
jno
adc
dec
push
push
xor
clc
dec
jbe
and
and
ss
pop
add
mov
or
sub
mov
adc
mov
out
js
mov
or
aam
data16
add
sub
and
dec
xchg
movsb
add
add
jg
scas
xchg
jecxz
push
inc
arpl
lods
in
push
adc
inc
out
add
inc
mov
fsubrs
dec
in
sahf
arpl
cwtl
mov
aam
lods
xor
repnz
mov
lret
sti
add
pop
out
lods
sti
sahf
lret
mov
out
and
jno
inc
movsl
mov
sbb
enter
inc
cld
shrl
xor
xor
ja
mov
sbbb
lret
fidivrs
insb
add
daa
mov
add
or
in
out
cmpsb
call
jne
in
and
lea
jno
mov
inc
loopne
mov
les
ret
cli
inc
push
xchg
dec
sbb
lret
data16
sub
push
mov
in
fwait
sbb
jmp
mov
adc
addr16
popl
fdivrs
shlb
cwtl
nop
pop
xchg
mov
cmp
xchg
xor
mov
xchg
fidivrl
pop
pop
pop
push
xor
mov
mov
xor
adcb
ficomps
push
xor
leave
push
sbb
mov
aas
test
add
loop
daa
into
fwait
orl
mov
mov
shl
ljmp
jp
mov
sbb
addr16
lret
or
mov
les
xorb
aaa
fcoms
cmovge
lock
xor
in
push
mov
cmpsl
and
and
cli
push
push
popa
and
movb
pop
cmp
clc
filds
adc
xor
push
fs
arpl
aaa
mov
fbstp
mov
lcall
jge
jp
and
insl
movsb
fcomip
mov
jge
mov
ljmp
loop
test
pop
inc
test
or
mov
jge
xor
repz
scas
sub
mov
cld
lret
jg
lahf
xchg
xor
push
aas
mov
into
push
xlat
cmp
xchg
sub
sub
dec
adc
and
cmp
xchg
adc
lcall
int3
stos
fwait
inc
xor
sub
and
or
mov
adc
hlt
dec
push
mov
pop
xlat
mov
jl
add
popf
or
in
and
jnp
cs
es
testb
sbb
lea
mov
push
pop
rolb
sbb
inc
push
daa
cltd
in
scas
test
daa
jmp
mov
and
mov
push
cmp
mov
push
inc
out
xchg
in
mov
dec
sbb
fsubr
xchg
aaa
inc
mov
fsub
add
call
sub
mov
imul
js
std
jmp
sub
pop
and
sahf
adc
lock
in
xchg
mov
mov
test
int3
push
ret
mov
xchg
xchg
and
sbb
arpl
mov
scas
aas
shlb
lds
jae
xor
xor
lea
cmpsb
push
scas
push
push
inc
rcll
mov
call
jl
testl
push
push
mov
orl
sub
shll
push
rorl
loopne
xor
cmp
bound
mov
mov
mov
push
mov
sbb
adc
jg
iret
dec
popf
sub
mov
mov
sub
adc
and
jl
arpl
ljmp
sbb
scas
mov
ficompl
mov
cmpl
jb
mov
or
popf
mov
in
xchg
mov
cmp
cld
movsb
cld
push
dec
int
xorl
xor
mov
push
inc
arpl
jne
aaa
sub
shr
push
lret
pop
aas
mov
inc
push
inc
gs
xchg
sti
dec
dec
sub
enter
aaa
and
in
imul
call
sub
daa
loop
int
or
in
int3
adc
sub
jmp
xlat
xchg
inc
pusha
cmovl
adc
mov
pop
push
mov
push
sub
and
xchg
loop
dec
mov
add
test
or
pushf
sub
aam
jge
ret
add
shll
filds
movl
aas
ja
mov
push
push
loopne
adc
inc
cmp
cli
push
sbb
testb
mov
cmp
dec
add
and
xchg
mov
int
sub
push
push
es
fidivl
fstp
je
enter
in
popa
cmpsb
pop
fcoms
bound
inc
stc
add
stos
in
scas
xchg
aam
in
mov
mov
mov
gs
mov
iret
mov
jecxz
mul
inc
je
push
sbb
lcall
shll
dec
ss
and
lret
xor
xchg
out
jge
mov
test
ja
stos
inc
jae
lret
or
aam
adc
sti
cmp
xchg
shll
popf
fnstsw
imul
movsb
and
ds
cmp
xchg
sbb
xbegin
xchg
cmpsl
frstor
add
xor
loop
push
clc
sub
mov
mov
rorl
popf
int
stos
fists
jge
data16
outsb
jp
xchg
inc
sahf
dec
add
int
in
mov
pop
cmpl
mov
aas
xchg
roll
ljmp
dec
jno
cli
negb
jle
cmpsl
sub
call
or
mov
push
pop
scas
daa
test
xchg
fsubl
mov
jle
sbb
rclb
jne
jbe
int3
loopne
push
push
jbe
test
ljmp
mov
dec
js
push
repz
gs
xor
divl
jb
and
or
repz
sub
notb
cmp
in
aad
pushf
js
adcb
and
out
shlb
jns
jp
loop
out
jns
fcompl
test
add
mov
sub
jle
fisubrs
cmpsl
mov
ret
inc
inc
inc
rorl
push
jne
inc
mov
shll
mov
sbb
push
lock
ds
xor
jmp
jns
xchg
int
cmp
mov
leave
xchg
mov
jb
faddl
icebp
pop
sub
mov
xor
dec
inc
cmp
dec
xchg
out
mov
lret
dec
push
dec
mov
stos
idivb
fidivl
out
testl
aam
mov
jae
mov
dec
fisttpl
cmp
cltd
stc
sbb
mov
or
rcrb
mov
pushw
inc
test
scas
loope
dec
push
cmpsb
daa
out
cmp
movsb
jg
xchg
mov
std
insl
movsb
mov
add
nop
and
mov
repz
xchg
lahf
push
fs
sub
sbb
and
shlb
lods
push
or
ja
int
call
arpl
cmp
enter
sarb
and
je
ljmp
ficoms
xor
lahf
scas
in
ljmp
push
xchg
mov
cmp
xchg
jge,pt
sub
icebp
jle
push
mov
push
mov
push
cmp
cmp
out
fisubrs
inc
push
mov
mov
or
in
out
push
push
push
jle
cli
mov
cmpsb
pop
xchg
scas
jb
cmp
push
adc
adc
inc
xor
jno
mov
sub
jnp
add
fstpl
or
mov
mov
dec
xchg
pop
mov
mov
push
xchg
inc
leave
inc
enter
and
clc
lods
and
popf
addr16
cli
ret
addl
xor
jge
pop
test
pop
and
push
ret
test
rcl
jnp
ljmp
mov
sub
cld
je
jne
ss
sbb
push
jge
mov
mov
cmp
xchg
xchg
cld
je
je
lret
es
subb
subb
jl
int3
decb
fcoms
stc
aam
sub
jle
dec
xor
js
movsl
cli
mov
xchg
das
orl
incb
sub
arpl
pusha
call
mov
fdivrl
mov
add
add
incl
rcll
push
cmp
adc
adc
cmp
pop
dec
outsl
test
mov
jecxz
rol
xchg
lock
int
lret
sbb
push
mov
movsl
dec
lds
popa
add
call
popf
jg
enter
insb
inc
ja
repnz
mov
inc
cmp
sbb
inc
lcall
or
jae
movsl
add
ljmp
arpl
in
xlat
sbb
add
pop
cs
cwtl
pop
std
imul
mov
add
and
addr16
sbb
je
dec
push
scas
rcrb
pusha
push
jo
lds
insb
cli
mov
dec
out
call
sub
pop
push
popf
out
jae
jmp
cmp
sub
xor
cltd
mov
jb
adc
test
daa
dec
js
xchg
xchg
aas
sarb
lcall
lahf
in
lret
loopne
mov
mov
sub
mov
movsl
je
sahf
inc
mov
mov
and
mov
dec
mov
xchg
rcrb
push
sub
jne
out
mov
test
adc
adc
cmp
sub
leave
test
lcall
pop
and
in
push
mov
dec
lret
xor
cmp
cmc
jno
and
test
push
sub
lods
bound
test
xchg
pop
jp
cmpsl
outsb
inc
add
inc
icebp
dec
adc
push
ret
ret
mov
pushf
xchg
cmp
sbbb
std
cld
push
mov
test
test
cmp
sub
test
rcrl
mov
push
outsl
pusha
repz
je
and
add
add
sti
inc
pushl
sbb
enter
push
mov
dec
subb
mov
addr16
pop
mov
add
cli
aaa
gs
sub
push
mov
dec
loop
cmp
pop
sub
cmpsl
stc
imul
cwtl
insl
ja
dec
inc
mov
pop
add
inc
lret
sub
repz
cli
jo
int3
repnz
xor
xor
xlat
je
mov
fidivrs
test
std
shrb
cltd
fwait
bound
sub
scas
xchg
adc
sbb
inc
xchg
pusha
insl
int
aas
test
add
lds
dec
xchg
shll
fcmovnu
cmp
dec
push
out
outsl
and
jge
push
js
stos
sbb
and
xchg
dec
sbb
add
mov
outsb
cli
ljmp
sub
jmp
aad
pop
push
dec
xchg
fsubs
xor
sti
insb
xorb
mov
mov
mov
xor
cmp
push
pushf
cltd
jp
mov
pushf
int
iret
xchg
push
or
mov
jo
inc
daa
sub
scas
or
mov
xchg
adc
push
mov
pusha
inc
xchg
sub
adc
loop
and
add
push
jmp
push
jno
inc
in
arpl
jl
fstl
in
icebp
lea
in
add
pop
mov
insb
in
imul
mov
jp
gs
push
dec
pushl
gs
inc
nop
leave
insb
xchg
cmpsb
mov
xor
push
jge
cmp
movsb
push
inc
dec
rcr
cmp
dec
fsubs
push
or
jb
push
sbb
notl
mov
jo
adc
lds
cltd
aam
dec
pop
xchg
and
pop
sbb
and
scas
add
cwtl
adc
push
cli
adcl
aam
add
cmp
xor
rcrl
fstpl
test
mov
aaa
cmc
adc
lds
jg
xchg
hlt
lret
mov
dec
movsb
nop
fmuls
shrl
fldcw
xor
and
dec
and
sub
jl
arpl
and
and
sti
ret
sub
or
push
jmp
hlt
dec
js
lret
insb
mov
mov
or
xor
sbbl
fcomps
in
mov
mov
lds
mov
int
xchg
movsb
dec
push
in
sbb
in
mov
and
or
sub
and
shll
pop
adc
or
pop
mov
adc
fsubrl
out
push
sbb
lods
mov
icebp
adc
and
shrl
xchg
int
mov
inc
dec
sbb
mov
dec
mov
test
aam
lea
jle
jne
lret
push
scas
or
push
imul
insl
stc
push
mov
test
cmp
imul
mov
mov
jae
sub
cwtl
into
mov
loope
mov
sbb
ror
inc
sbb
shrb
dec
xchg
mov
je
pushf
push
dec
dec
push
mov
cld
adc
add
mov
mov
incb
mov
nop
sbb
inc
push
sbb
out
mov
iret
dec
mov
adcl
mov
push
push
push
insl
xor
xchg
lods
adc
sbb
xchg
xlat
cwtl
add
js
push
and
and
je
cmc
adc
sahf
andl
aas
jns
stos
mov
lds
mov
cmp
rclb
cmp
mov
jmp
jp
inc
inc
push
sub
shlb
pop
xor
dec
icebp
sti
mov
mov
cmpsl
popf
lds
jecxz
or
inc
imul
cld
adc
xchg
pop
add
fsubr
shlb
stos
setne
sbb
or
cmp
iret
lret
daa
mov
lods
or
insb
pop
mov
cmp
jnp
fldt
cli
xchg
sbb
fxch
fsub
add
mov
sti
cwtl
inc
fldt
jns
inc
out
icebp
fstps
imul
cmp
xor
inc
jnp
xchg
popf
pop
div
pop
insl
pop
fsqrt
cmc
in
shll
sub
jbe
inc
pop
stos
dec
pop
or
xchg
lahf
xchg
notl
xor
ret
sub
mov
push
rcll
push
aad
imul
adc
outsb
addr16
test
dec
push
inc
mov
mov
jne
cmp
mov
into
or
std
sub
inc
or
ds
xchg
sysenter
lods
adcl
jg
cli
rorl
jns
fcoms
xorl
or
push
inc
xchg
dec
fstp
xor
sbb
push
out
and
stos
add
and
in
pusha
xchg
push
dec
mov
push
clc
xchg
lock
scas
lahf
nop
push
lret
arpl
mov
mov
sbb
cmpsl
mov
mov
lcall
mov
fchs
pop
call
sbb
xchg
iret
sbb
out
push
test
imull
xor
xor
repnz
sub
and
scas
mov
jg
cmpsb
lds
sarb
pop
or
inc
push
xor
inc
add
out
inc
or
imul
cmpsb
pop
insb
std
adc
push
fcmovnbe
aas
fcmovnb
mov
ja
jmp
bound
push
cwtl
push
jge
add
data16
clc
stc
mov
push
lret
xchg
scas
or
fidivs
cmp
enter
fucom
imul
pop
mov
scas
test
int
lea
push
push
rorb
fnstenv
add
inc
cmpl
pop
rcl
out
in
stc
xchg
into
mov
cmpsl
cmp
mov
iret
cmp
sub
pop
jb
xchg
adc
inc
cwtl
loope
dec
into
outsl
pop
mov
icebp
xor
xchg
add
popf
vmwrite
pop
ljmp
pop
add
popf
ljmp
out
or
inc
stos
add
bnd
and
dec
push
loopne
cli
or
mov
sarb
or
mov
xor
pop
mov
fyl2xp1
or
pop
inc
mov
jl
sub
imul
jecxz
add
aad
cld
push
mov
jmp
in
outsb
jno
mov
movb
mov
mov
jp
dec
and
xchg
and
filds
xor
cwtl
fwait
xchg
loope
out
push
mov
pop
mov
shll
mov
pop
jl
or
fs
add
jecxz
add
mov
stos
xor
aas
jge
and
add
pop
call
les
cli
sbb
push
xchg
repz
sbb
mov
mov
call
jns
inc
push
out
mov
xchg
push
and
sbb
pop
xor
mov
xor
mov
cld
scas
nop
arpl
int
ljmp
std
fisttpl
or
jecxz
push
ja
add
adc
iret
push
addl
mov
jecxz
rcrb
jae
cmpsl
mov
xchg
cmpsl
stc
clc
pop
add
sub
lret
xchg
sub
pop
lahf
sti
repz
out
out
cmpsl
in
add
push
mov
mov
adc
cltd
xor
xchg
xchg
dec
pop
out
sbb
shll
cwtl
imul
int3
rolb
or
out
fmull
int
popf
shlb
aas
sahf
push
test
pop
movsl
call
icebp
repz
push
or
xor
pop
test
mov
test
xor
pop
dec
pop
test
leave
push
push
fldenv
jb
movsb
repz
repnz
xor
fwait
inc
xchg
mov
dec
mov
mov
xchg
cmpsb
in
movsb
and
mov
js
sub
mov
incb
testl
and
outsb
pop
fwait
sub
jbe
and
sahf
mov
fdivrs
je
loopne
xor
cmp
das
fwait
hlt
add
call
loopne,pt
cs
jno
aaa
movsb
and
nop
xchg
insl
mov
and
ret
push
pop
cltd
jnp
mov
rclb
es
enter
sub
mov
ja
or
mov
jb
mov
pop
add
and
jg
pop
adc
lret
mov
inc
leave
loope
adc
inc
or
jle
inc
xor
rorl
lret
mov
cwtl
inc
int3
inc
outsb
mov
sti
xor
cwtl
imul
mov
xor
data16
pop
fistpll
push
test
mov
push
andl
push
pop
sub
adc
or
mov
and
lock
or
cwtl
xchg
lock
aaa
lret
loope
adcb
stos
xchg
in
add
into
mov
insb
pop
inc
mov
cmpl
std
dec
xor
or
test
inc
sbb
fistps
fisttps
fcoms
mov
aam
add
cmp
mov
leave
cmp
lods
mov
jmp
dec
test
insl
data16
sub
mov
jbe
xor
push
fwait
addr16
imul
imul
in
mov
inc
cld
mov
xor
and
mov
fisubl
adc
imul
or
xchg
cmp
mov
jno
jmp
lea
negl
mov
repz
cmpl
dec
ja
xchg
sbb
and
xchg
fucomp
std
popf
mov
leave
jg
push
fcompl
enter
popa
int3
shll
pop
fcomps
pushf
jge
and
xor
adc
ds
rcr
movsl
test
sbb
xchg
movsb
sbb
adc
scas
fimull
pop
sub
jne,pt
adc
pushf
mov
xchg
cwtl
mov
add
ret
aad
and
out
das
out
and
pop
add
xor
push
fisubrl
sub
mov
mov
push
push
sub
idivb
mov
fistl
int
adc
negb
fs
lahf
ss
push
cmp
iret
ficompl
int3
icebp
dec
jae
dec
jge
int
scas
movsb
cmp
xchg
pop
sbbb
jmp
jnp
mov
sub
sub
add
push
push
int
mov
sbb
cmpsl
pop
inc
jns
pop
mov
adc
dec
xchg
pusha
jae
pusha
xchg
std
push
out
inc
inc
out
repz
lea
popf
ds
rep
lahf
iret
sbb
adc
push
pop
cltd
xchg
aad
mov
sbbl
cltd
sbb
stos
inc
push
rolb
jp
out
dec
jge
mov
ret
jp
xor
push
push
test
jno
or
lret
ss
pop
cli
ss
xor
pop
mov
dec
xor
push
xchg
repz
jb
jae
aas
lret
les
xor
xchg
stos
into
rorb
ret
sbbl
mov
mov
mov
adc
outsb
cmp
scas
bound
push
hlt
or
push
dec
cmp
das
repz
call
sub
lret
pop
and
xchg
pop
mov
stos
popa
je
clc
push
or
push
imul
push
add
and
faddp
cmc
or
lods
cmpsb
cmp
pop
pop
push
xchg
lahf
adc
inc
xchg
mov
outsl
inc
lret
stos
shl
xor
jae
push
test
repz
aam
mov
inc
push
inc
outsl
test
push
cltd
sbb
shrl
sahf
flds
iret
in
jae
pop
push
inc
dec
arpl
xor
jge
dec
ret
sub
mov
jecxz
aad
cmp
mov
sub
shlb
mov
leave
pop
stos
add
jp
aam
cs
jmp
jno
movsb
sub
addr16
mov
test
add
mov
sbb
sbb
std
jmp
sbb
enter
xchg
call
jmp
fcoms
imul
sahf
xorl
cmpl
dec
fwait
jmp
lock
xchg
push
loop
mov
jae
inc
jp
testb
xchg
fs
sti
js
push
flds
pop
mov
and
xchg
sbb
sarb
fwait
mov
sub
and
icebp
lar
push
xchg
push
and
push
jo
inc
sbb
cmp
pop
gs
sahf
jae
lods
jno
pushl
ljmp
aas
outsl
lahf
outsl
mov
mov
mov
fildll
clc
outsl
std
add
lret
adc
mov
or
lock
je
popa
out
shll
xor
pop
cmp
pop
dec
dec
repnz
jmp
js
fistpl
ret
sbb
dec
insl
dec
ljmp
xor
mov
aaa
jge
cmp
aad
jp
and
cmp
repz
push
sbb
mov
cli
imul
jmp
and
fistpll
mov
dec
cvtps2pd
jae
mov
mov
lret
cld
repz
fdivs
push
movsl
ja
aad
data16
enter
fldenv
mov
daa
inc
xor
outsb
addr16
lahf
jmp
enter
dec
popf
xor
js
push
xchg
pop
call
mov
push
mov
push
ja
or
jno
movsl
jo
test
push
xor
je
adc
inc
fdivs
pop
cltd
pop
sbb
mov
fs
shll
outsl
ret
pop
mov
dec
call
in
add
lods
fsubp
loop
insl
xor
in
or
repnz
jmp
out
pop
pop
push
lahf
jmp
inc
push
in
les
out
fwait
fwait
addr16
inc
xor
dec
in
jne
dec
push
dec
mov
nop
dec
mov
lahf
xchg
push
sbb
imul
mov
testb
cmp
daa
fs
pop
xor
insl
xchg
out
shll
icebp
std
mov
xchg
ficoms
inc
ja
and
fstl
pop
out
sbb
mov
ja
fildll
mov
int
pushf
inc
xchg
push
call
sbb
xchg
gs
idivb
pop
inc
and
sti
pop
mov
stos
das
xor
inc
mov
or
push
and
or
dec
icebp
int
sub
pop
fsubrl
iret
adc
jns
addr16
out
mov
das
pop
inc
fldenv
inc
sbb
pop
dec
xor
movl
sbb
jecxz
cmpsl
dec
push
xchg
aaa
push
ret
xchg
scas
ds
ja
sub
test
pop
cmc
mov
xchg
dec
fwait
fwait
pop
dec
adc
iret
loope
out
mov
loopne
nop
sbbl
dec
pop
sbb
subw
nop
aas
mov
add
stc
cmp
out
out
daa
mov
inc
jle
sub
or
jb
mov
pop
and
les
fmulp
mov
fnstenvs
pop
xor
xchg
push
sub
shrl
pop
das
dec
test
adc
jp
mov
mov
mov
push
fiaddl
into
pop
jbe
dec
fwait
adc
repnz
adc
xor
mov
sub
push
ja
ficomps
jb
push
xchg
or
or
xor
sub
repz
adc
xchg
maskmovq
mull
adc
scas
cmp
lds
jg
scas
fiadds
cmc
and
loopne
ss
and
or
or
leave
sbbl
mov
or
xchg
push
or
dec
decb
ja
sarb
aad
inc
and
stos
outsb
lods
and
fwait
mov
inc
call
add
jnp
cltd
mov
clc
daa
pop
mov
mov
jbe
pusha
push
mov
pop
inc
mov
add
in
data16
xchg
icebp
push
int3
scas
cmpsb
xor
ja
dec
and
movsl
adc
jge
add
stos
and
fmull
loop
cmp
xchg
pop
js
insb
or
xor
pop
push
xor
and
pop
lahf
addl
push
mov
push
push
in
test
cltd
xchg
popf
cmp
jmp
in
add
mov
push
movsl
orl
mov
push
jne
lods
imul
outsl
sub
mov
xchg
imul
ret
push
adc
or
bnd
pop
add
imul
mov
and
movsl
adc
leave
mov
push
imul
ficoms
nop
shrl
fwait
jl
inc
ret
je
dec
inc
mov
test
pop
sub
push
sub
lea
inc
cmpsl
xor
out
mov
in
dec
xlat
add
inc
dec
mov
xor
adc
mov
filds
xchg
mov
jecxz
daa
cmp
xchg
cmp
adc
jbe
add
pop
cmp
test
lock
push
mov
repz
mov
popa
or
sub
xchg
cmp
mov
fdivr
loope
outsl
cmc
jp
add
in
and
mov
mov
cli
movsl
movsl
cmpsl
inc
insb
bound
sti
dec
jecxz
cmp
dec
aam
cli
jbe
inc
push
dec
pop
dec
push
icebp
and
jne
lock
push
pop
and
outsl
and
xchg
xchg
jg
ljmp
xchg
mov
call
sarb
add
xchg
pusha
pop
in
xchg
mov
ds
cwtl
xchg
daa
ficompl
dec
pop
clc
fldln2
scas
mov
jg
es
xor
shl
mov
mov
int3
cwtl
insb
or
pop
pop
iret
mov
mov
and
push
addr16
dec
cmpl
inc
cmp
scas
add
imul
mov
and
adc
adc
call
mov
push
scas
pop
or
stos
adc
imul
sub
push
rcrl
sar
sub
shl
add
js
dec
popf
dec
xchg
lcall
mov
movsb
xor
mov
and
mov
out
sbb
xchg
lret
push
das
jo
icebp
jb
jb
sub
fisubrl
pop
pop
jmp
jo
push
pop
cmp
sbb
pop
or
sahf
js
lret
insl
fcomi
pusha
stc
jbe
loop
shlb
jb
fbstp
popa
sub
pop
dec
pop
pop
push
mov
hlt
cld
cwtl
and
fildll
fnstenv
sbb
cmp
inc
arpl
adc
ss
mov
in
sahf
push
imul
push
and
mov
nop
add
cltd
stc
inc
cmp
sbb
std
shlb
movsb
xorl
insl
icebp
cmp
adc
sarb
lcall
popa
cmp
and
cmp
repnz
sbb
lret
les
lcall
call
xor
out
in
push
and
push
loopne
adc
pop
xchg
aaa
test
imul
stos
arpl
incb
iret
cmpsl
mov
repz
in
lea
and
push
add
cmc
rcrl
neg
std
movb
add
push
cmp
in
shll
hlt
jmp
adc
sub
pop
adcl
jecxz
mov
jp
mov
or
add
lret
stos
lahf
mov
xchg
mov
sub
daa
cmp
sbb
sbb
mov
enter
not
adc
cmp
imul
daa
stc
mov
std
push
sub
jo
push
cmpsb
push
bound
jb
dec
ds
adc
and
sti
rcll
call
ficoms
imul
push
leave
ficompl
popa
push
inc
insl
mov
imul
sahf
add
jb
dec
cmp
jecxz
adcb
push
xlat
jge
cmpsb
ds
pushf
in
addr16
in
push
loope
arpl
test
sahf
sbbl
xchg
sub
cli
mov
sub
rol
cmp
nop
sub
xor
sub
mov
addb
push
jle
push
adc
js
jno
repz
cmpsl
dec
xchg
mov
imul
loopne
dec
fcoms
add
add
iret
test
mov
xchg
push
out
mov
test
mov
sub
call
cmp
inc
mov
dec
inc
adc
pop
and
mov
dec
push
ret
call
fwait
sbb
mov
sbb
jp
xchg
sahf
jb
insl
jl
adc
test
xchg
imul
pushf
add
int
xchg
add
filds
push
clc
lahf
jle
mov
jb
fmull
cmp
pop
mov
adc
xchg
loop
popa
scas
out
ror
push
fistl
mov
inc
and
cld
adc
pop
cwtl
dec
iret
pop
cltd
subb
sub
xchg
mov
xchg
push
mov
adc
xlat
dec
ret
jp
mov
test
inc
mov
movsb
push
insb
pusha
cmpsl
xchg
ja
push
adc
inc
lods
sbb
dec
lea
xor
dec
jns
popf
mov
xchg
inc
not
adcb
or
ret
mov
test
cmp
push
test
push
out
in
cli
inc
test
lock
movb
int3
das
cmp
sub
sahf
aaa
mov
push
int
mov
mov
test
add
out
cmpsl
cmp
mov
addr16
push
enter
fs
mov
sub
jns
push
subl
xor
cli
and
inc
sub
lcall
repnz
pop
jp
and
xorb
inc
fwait
cmc
or
hlt
sbb
xchg
or
ret
cltd
test
addr16
pop
fnstsw
dec
jns
lret
sbb
scas
jmp
ss
sbb
ljmp
xchg
push
cld
sti
push
into
fcoml
mov
or
mov
jno
repnz
in
sub
daa
lea
mov
cmp
mov
sub
ss
cmp
mov
add
cmovae
sti
stc
adc
cmpsl
enter
inc
cwtl
mov
aam
int
leave
jo
xchg
adcb
stos
mov
mov
pusha
mov
shlb
ret
aaa
imul
rolb
xor
leave
nop
cltd
daa
clc
xor
push
rol
shrb
into
mov
mov
xor
and
add
dec
std
jbe
stos
jo
jne
mov
lods
adc
mov
sbb
add
mov
bound
call
and
or
jb
shl
inc
fisubl
bound
out
dec
cmp
sarl
icebp
push
jmp
jo
cwtl
xor
push
in
xlat
divb
popf
cmc
mov
xlat
sbb
push
fs
sub
and
rcrl
cmpsb
pop
dec
loope
fstpl
jmp
cmp
nop
int3
cs
pop
mov
iret
orb
int3
call
jp
arpl
xchg
int3
test
inc
jae
in
lods
in
arpl
ret
ret
shlb
pop
test
leave
or
out
negb
ljmp
add
insl
pop
mov
cmp
in
movsl
add
enter
lahf
adc
adc
push
push
jno
dec
inc
int
movsb
jns
aaa
repz
jo
fbstp
add
cmp
xor
jmp
xor
cmpsl
dec
push
add
sti
lods
iret
setl
test
pop
pop
mov
mov
pop
cmpsb
pop
xor
sub
sub
loope
cld
sub
lret
inc
test
test
xchg
adc
or
mov
pop
mov
cld
andb
clc
xlat
ret
jmp
pushf
or
add
jg
mov
ret
insl
cmp
ds
bndmov
test
int3
idivb
mov
mov
adc
cmp
sbb
stos
aas
xchg
pop
inc
in
arpl
rorl
xchg
lds
cltd
mov
push
into
out
inc
jo
cs
push
jecxz
xor
out
pop
popa
cmpsl
mov
and
test
fistpl
add
outsl
movsb
xchg
mov
push
mov
das
fcomi
aad
cmpsb
mov
inc
mov
loope
lds
jge
je
pop
add
lret
jbe
mov
xor
insl
inc
ret
pop
mov
xchg
sub
or
fidivrl
iret
mov
iret
shlb
rcrb
scas
inc
pop
pop
cmpsl
add
jg
adc
sub
cmp
test
push
xchg
xor
and
cli
inc
and
pop
push
sub
inc
pusha
rcr
xor
inc
sbbl
push
fcomps
mov
ficoml
jne
scas
push
std
pop
adc
xor
or
test
add
enter
pop
scas
and
out
lret
ret
sarb
lret
ja
jge
ja
mov
call
xor
popa
and
xchg
fcoml
fdivs
adc
mov
repnz
push
add
ret
test
mov
mov
mov
shl
xchg
push
sbb
hlt
fidivl
fdivp
mov
lds
sub
and
push
cmp
jp
idivl
mov
inc
test
mov
ret
mov
mov
fmul
cs
imul
xchg
adc
fcompl
jnp
mov
xor
subl
dec
mov
fbld
xchg
jnp
icebp
jg
repnz
pop
jmp
xor
mul
push
push
xchg
call
jb
adc
or
loopne
ret
push
dec
daa
pop
roll
aaa
dec
add
imul
lds
subl
into
icebp
in
pop
adc
pop
ret
sbb
dec
cmp
lods
scas
test
stos
mov
mov
inc
cmp
call
mov
dec
xchg
stos
inc
aad
jmp
push
xchg
fldenv
mov
andl
arpl
push
mov
xor
jmp
roll
lea
inc
jge
sub
sub
imul
push
cltd
xchg
sbb
jbe
aad
inc
sub
out
adc
mov
mov
and
cmp
pop
jg
imul
aaa
cmp
cmp
mov
das
dec
adc
repz
mov
add
js
mov
push
cmp
jg
icebp
pusha
push
je
ret
xchg
sbb
out
aam
mov
and
adc
loop
mov
xchg
repnz
andb
dec
lcall
xchg
mov
adc
sbb
xor
mov
mov
inc
xchg
loope
data16
imul
push
test
push
mov
lock
adc
adc
lcall
xor
or
push
aaa
icebp
mov
lret
aas
and
popf
out
ss
mov
lea
sbb
xchg
loope
arpl
mov
mov
or
mov
push
cmp
sahf
out
cmpsl
fxch
add
icebp
mov
add
jg
push
jg
mov
jnp
push
lea
sub
inc
mov
mov
jecxz,pt
aam
gs
cmpb
jbe
hlt
dec
inc
leave
dec
jle
sbb
js
push
out
xor
iret
and
ret
or
xchg
repnz
xchg
lods
jg
jbe
or
pop
loop
in
sbb
in
inc
ss
aam
ret
pusha
call
test
pop
mov
and
fwait
insb
sarb
or
mov
jnp
scas
int3
sub
adc
out
mov
cmpsb
in
sbb
orl
out
inc
rol
mov
mov
loopne
fstp
inc
pop
test
pop
ljmp
or
or
rclb
xchg
xor
mov
mov
jae
or
jmp
pop
xchg
mov
and
stos
iret
bound
adc
lea
lods
jne
dec
pop
adc
sbb
mov
inc
outsb
adc
jne
jne
nop
or
xchg
arpl
ljmp
cwtl
and
pop
dec
jno
mov
sbb
xchg
popa
jp
dec
push
scas
iret
cmp
jo
pusha
cmp
pop
divb
mov
hlt
jne
in
cmp
lret
inc
dec
icebp
inc
mov
add
mov
push
jp
xorl
push
test
push
cli
mov
push
xchg
push
bswap
mov
fisubs
lods
mov
sub
jmp
fidivs
sar
sbbb
in
mov
movsb
jns
mov
xchg
aas
cmp
or
cmp
in
test
stos
movsl
xchg
stc
es
inc
in
fiaddl
jb
jmp
xor
mov
push
cmpsl
ss
add
add
shrb
ret
idivb
inc
in
sbb
pop
push
push
popa
cli
out
ret
xchg
adc
sbb
push
cmp
pop
divb
adcb
mov
orb
rcr
xor
jle,pt
aad
mov
dec
dec
nop
sub
leave
push
clc
mov
pop
in
mov
hlt
cmp
lods
sub
popf
test
push
loope
iret
jb
dec
leave
xchg
bound
pop
sbb
xor
aaa
incb
mov
pop
arpl
negl
mov
pusha
pop
jmp
repz
mov
pusha
sub
cwtl
shlb
push
scas
rol
movsl
imul
notl
aaa
add
xlat
inc
xchg
cs
mov
push
in
xlat
push
stos
test
mov
inc
push
pop
add
push
ds
cli
out
jo
sub
jle,pt
or
scas
mov
mov
loope
jnp
dec
inc
pop
orb
inc
aaa
iret
addr16
out
dec
inc
inc
pop
xor
and
mov
mov
je
cmp
and
call
mov
popf
out
mov
scas
cmp
lcall
jp
ds
sub
stc
arpl
jb,pn
cmc
dec
pushf
cltd
into
adc
add
iret
xlat
jmp
mov
test
out
leave
xchg
loopne,pt
jecxz
add
lcall
jbe
cltd
cmp
iret
cmp
rcl
jp
jecxz
xor
std
lret
xor
mov
dec
ss
sbb
push
mov
lret
dec
and
fsubrl
out
stos
mov
sub
cmp
orb
push
pop
divb
ja
les
jmp
inc
push
and
aaa
imul
xor
mov
cltd
int3
lods
pop
dec
sub
or
jmp
lods
shrb
aas
ret
lret
jg
pop
lahf
popa
mov
sbb
push
addr16
push
jle
and
or
call
jl
das
stos
sub
mov
xor
addb
dec
loopne
mov
pop
leave
pop
cmc
loop
pop
sbb
mov
out
mov
leave
add
stos
jo
xchg
sahf
fldt
mov
js
sub
mov
mov
jnp
or
jns
pop
dec
ljmp
int3
cmpl
fisttps
pop
mov
xchg
ret
leave
adc
xchg
mov
mov
sbb
imul
xor
inc
shlb
hlt
push
aad
pop
cwtl
mov
mov
jno
imul
or
or
int3
mov
cmpb
mov
mov
dec
cmpsb
pop
sbb
mov
aaa
mov
push
add
xchg
iret
mov
jns
inc
adc
mov
outsb
dec
test
fildl
stos
dec
test
loopne
adc
stc
call
sub
or
loopne
jns
shrl
fs
jno,pn
xchg
test
or
and
xorb
jne
jl
pop
rcr
dec
enter
mov
data16
rolb
jo
mov
and
icebp
pop
xchg
nop
pop
push
pop
xchg
mov
mov
jmp
in
scas
mov
hlt
jns
adc
cmp
xchg
push
hlt
in
lahf
loop
or
jns
cmpsl
inc
roll
cmp
push
jle
xchg
jno
mov
mov
enter
repz
sbb
xor
mov
ljmp
dec
mov
xor
dec
into
mov
push
pavgb
lock
ljmp
les
ljmp
mov
inc
xchg
pop
sub
es
dec
ljmp
lahf
mov
lea
or
icebp
dec
pop
xchg
into
addl
pshufw
js,pn
adc
mov
addb
lcall
nop
fiaddl
shl
fbstp
xchg
lods
adcb
lahf
fwait
mov
lds
inc
cmp
rcll
dec
cld
xor
jnp
cmc
push
outsl
sub
xchg
outsl
push
andl
mov
jecxz
sti
xor
arpl
sbb
subb
mov
lahf
jecxz
mov
loop
mov
lods
and
xchg
pcmpeqw
fstpt
es
dec
sub
fisttpl
xor
jl
add
stos
fs
lcall
push
call
or
dec
rorl
sahf
dec
nop
clc
mov
outsl
or
arpl
cmp
fsubrp
pushl
lock
mov
xor
jge
popf
adc
jb
rcrl
dec
pop
push
in
cmpb
dec
stc
call
cmp
sbb
add
inc
ss
xor
in
sub
dec
mov
cs
or
push
imul
push
mov
mov
xor
mov
or
repz
push
sbbb
insb
lret
jge
mov
push
dec
in
xor
insb
je
sub
sub
add
sbbb
stos
js
in
adc
mov
push
dec
out
dec
sub
sahf
push
outsb
push
mov
sbb
ss
test
xchg
or
scas
je
jnp
shlb
inc
push
cld
mov
lcall
fs
fwait
lcall
xchg
cs
out
inc
stos
xchg
add
cmc
or
xchg
pop
push
dec
shll
pop
dec
xor
inc
jne
data16
mov
out
push
xor
pop
xor
dec
pop
xchg
imul
ja
pop
pop
mov
in
or
sbb
mov
inc
dec
dec
push
and
sahf
lcall
movl
pop
jmp
gs
jb
movsl
out
xchg
pop
ret
imul
test
or
roll
or
sbb
jbe
cmp
in
orl
and
and
add
cmp
sub
jecxz
hlt
pop
scas
adc
push
jecxz
cmp
sbb
inc
loope
mov
out
or
mov
loop
lock
xor
adc
lcall
push
mov
fstl
inc
pop
cmp
sbb
jle
cmpsl
add
xchg
stos
or
hlt
mov
push
rclb
dec
out
and
and
mov
add
mov
in
mov
std
lcall
js
ret
adc
arpl
std
mov
push
fisubrl
dec
movb
dec
sbb
jle
ror
push
cmpsb
roll
push
sbb
sti
pop
mov
push
clc
cli
push
mov
pop
inc
lcall
xor
cmp
mov
cmpl
add
aaa
xor
or
sub
inc
xchg
mov
dec
out
mov
into
test
fidivrs
imul
sub
or
adc
and
sbb
mov
inc
cld
cltd
leave
dec
push
repnz
jecxz
mov
add
add
inc
pushf
and
fwait
xchg
lods
cmp
push
or
adc
in
push
xchg
add
dec
jno
xor
and
mov
jnp
inc
jbe
mov
inc
pop
mulb
call
rorb
out
xor
cmp
inc
xor
pop
jno
sbb
sahf
clc
pop
cmpl
stos
test
jnp
repnz
pop
mov
pop
ret
call
xor
adcb
jg
mov
clc
arpl
repz
les
aaa
enter
outsl
jecxz
sub
inc
dec
xchg
or
orb
push
xor
lret
adc
lahf
cli
in
fidivrl
cmpsb
lock
sbb
xchg
cmp
sbb
adc
imul
dec
mov
popf
stos
ret
mov
in
or
ljmp
inc
mov
and
xor
cmp
scas
xor
dec
inc
adc
mov
es
out
popa
jnp
fisttpll
jo
lods
lahf
sub
ret
sub
push
inc
add
jle
mov
call
sbb
mov
and
dec
mov
fnstcw
jnp
les
pop
es
mov
inc
aas
cmpsl
gs
jb
mov
aaa
inc
insb
test
repz
call
inc
js
cmp
dec
test
popf
ljmp
loop
add
mov
test
xor
pop
aas
mov
pushf
aad
mov
mov
imul
adc
repz
shll
xchg
scas
xor
outsb
andl
ret
movsl
sbb
sub
adc
aaa
mov
in
fdivrs
adc
xchg
ds
mov
lods
fisubs
cmpl
sbb
push
les
mov
mov
cmpsl
push
jecxz
add
jge
out
inc
xchg
addb
ftst
and
jae
adc
mov
cmp
call
pop
push
test
inc
cmc
into
push
cmpsl
lock
iret
loope
mov
rcrl
divl
xchg
cmc
add
aaa
fdivr
xchg
fst
scas
and
orb
inc
push
in
pusha
rclb
adc
ret
jnp
in
xor
mov
xor
adc
dec
and
sbb
lahf
cmp
mov
mov
fsubl
popf
mov
loopne
lcall
sub
dec
inc
sbb
movsl
push
cli
rol
jl
inc
test
xor
fdivl
jo
popa
nop
imul
in
sub
inc
mov
mov
ret
xchg
insl
lcall
jl
pop
outsb
add
ret
loop
iret
dec
inc
test
push
sbbb
aad
sub
lret
and
pop
dec
jo
cwtl
jmp
das
scas
sub
mov
adc
cld
cmp
xchg
push
pop
aam
push
xchg
jnp
mov
fidivrs
sub
sbb
out
clc
push
mov
data16
or
and
les
mov
jp
hlt
dec
inc
xchg
enter
das
sub
cld
jle
mov
mov
sub
jmp
jmp
test
mov
js
pop
fcompl
xorl
pop
mov
popf
adc
shll
jbe
lock
push
add
mov
adc
inc
out
mov
cld
outsb
xlat
xor
mov
ja
les
int
mov
and
rcl
cmp
xchg
sub
mov
aaa
sbb
orl
std
pushf
xor
iret
and
lods
mov
sahf
insb
cmp
sahf
in
cltd
ret
mov
popa
ljmp
sbb
mov
mov
stos
mov
shrl
mov
sahf
testl
and
pop
push
enter
leave
inc
sub
cmpsb
sub
lret
ljmp
roll
pop
adcb
dec
frstor
stos
jo
les
inc
mov
fcomps
cs
mov
and
sbb
lods
hlt
cmp
jp
in
mov
sub
and
inc
adc
leave
or
jle
cld
sti
out
adc
popa
jne
lock
lret
sub
sbb
push
jb
xchg
lds
mov
arpl
sarl
in
rcrl
mov
pop
out
lods
sbb
or
cmp
xchg
imul
sbb
and
mov
popf
outsb
hlt
jno
pop
je
pop
arpl
movups
cmp
fildll
mov
hlt
jae
lds
je
fnstsw
jns
scas
xchg
push
push
dec
or
fisttpl
jg
insb
xor
nop
xchg
sbb
loope
jns
mov
xchg
ds
pop
loop
jno
pop
add
mov
insb
xor
jp
xchg
and
pop
add
ljmp
add
dec
mov
adc
ljmp
es
stos
mov
stc
cmp
in
sbb
dec
test
push
cld
or
pop
scas
sbb
icebp
pop
sbb
mov
fisttpll
je
rcrb
in
cmp
aad
mov
popl
test
ss
das
js
cmp
add
pop
jns
jl
aad
xchg
mov
and
mov
jne
out
push
repnz
jb
jmp
nop
inc
imul
lods
and
and
les
cld
in
ret
arpl
push
outsl
fmuls
pop
dec
out
data16
test
bound
dec
inc
inc
dec
pop
push
adc
shlb
sub
fwait
jge
stos
jne
cmpsb
lds
dec
xor
add
jmp
lahf
insb
xor
dec
out
and
mov
xor
les
lcall
push
cmp
or
pop
punpcklbw
lods
mov
and
in
inc
mov
dec
mov
lea
xchg
pop
movsb
aas
test
sbb
pop
cmpb
push
cltd
mov
inc
cmp
push
inc
mov
out
shll
jecxz
shrb
in
stos
das
popf
clc
mov
sarl
mov
std
int
bound
sarl
repz
lcall
inc
mov
mov
cmp
or
xlat
sub
pop
add
jo
punpcklwd
subw
loope
int
imul
xlat
sbb
into
lret
sub
sbb
in
push
fstp
mov
inc
out
mov
mov
out
mov
jge
and
pop
rcrb
pop
hlt
add
mov
or
jg
shlb
add
mov
pusha
cmpsb
mov
adc
in
out
jge
mov
fsts
fnstenv
mov
rcl
iret
repnz
mov
mov
dec
push
add
mov
int
push
pop
shll
test
jp
pop
push
sbb
jmp
xchg
push
xorb
pop
mov
in
aam
test
mov
lock
out
cli
and
xor
fcomps
mov
xchg
cmpsl
pop
mov
or
arpl
pop
fldl
mov
jae
pop
mov
in
les
repnz
xchg
fsubr
arpl
pop
xchg
jg
cwtl
jbe
push
das
adc
jmp
out
movb
out
cmp
js
sub
shll
xor
add
add
inc
xchg
dec
scas
cli
insl
xor
orb
dec
xchg
xchg
cmc
mov
mov
add
inc
movl
pushl
sbb
xor
popf
push
aam
jbe
inc
repz
fwait
das
mov
test
arpl
and
ret
dec
adc
divb
xor
push
dec
jmp
mov
loop
cld
test
jecxz
push
pop
inc
cmp
inc
stos
cmovb
xor
fbstp
mov
push
inc
into
fimuls
enter
lret
addl
xchg
movl
pushf
test
les
push
fisubrs
loope
fdivl
dec
adc
jne
jno
mov
lock
push
andb
dec
jns
mov
inc
movsb
mov
pop
sbb
je
cwtl
pop
out
xchg
stos
stc
fwait
push
mov
push
mov
es
in
inc
xchg
addr16
push
stos
lahf
and
push
inc
or
fildl
cltd
cmp
punpcklbw
andl
imul
and
add
cmpsl
movb
xchg
aaa
es
stos
add
movsl
cmp
xor
es
bound
sub
mov
fsubl
cwtl
in
jnp
ss
inc
addb
mov
jp
lea
and
sub
scas
mov
in
les
clc
push
or
mov
add
inc
fbld
and
sub
cmpsb
stos
pop
dec
call
je
dec
xchg
jl
or
sbb
aas
sbbl
outsl
dec
push
jae
movsb
cmp
or
fs
cmc
add
emms
add
xchg
jnp
jl
inc
mov
addl
cli
sbb
mov
int
lcall
int
movsb
jle
dec
mov
fidivl
leave
movsb
lds
hlt
add
cwtl
fs
lret
sti
xchg
pop
add
push
ror
sub
xor
inc
mov
scas
iret
xor
mov
pextrw
and
inc
aad
push
inc
lods
ds
mov
repz
sbbb
xor
mov
xchg
dec
sahf
movsb
fbstp
inc
push
pop
pop
leave
mov
fs
ja
or
pop
out
fmull
mov
test
cli
dec
int3
cmp
scas
or
in
imul
mov
push
jo
popa
cmpsb
lock
pop
mov
das
jo
into
lahf
stos
lods
xor
xchg
daa
aad
adc
in
ja
or
sub
idivl
jno
inc
cltd
add
imul
mov
rcll
pop
mov
aam
sub
push
pop
push
sahf
cli
icebp
repnz
cltd
add
mov
shrb
fcoml
dec
pop
pop
sbb
icebp
mull
ss
out
and
icebp
push
ljmp
xchg
cli
ds
sub
jbe
ja
and
ja
add
inc
pushf
mov
mov
mov
push
push
inc
dec
mov
mov
xlat
mov
loopne
push
mov
push
xchg
inc
rcrl
adc
imul
fadd
lea
incl
insl
call
inc
xor
push
xorb
jge
push
data16
push
mov
push
push
inc
shll
mov
shl
call
addb
mov
aaa
xchg
dec
aad
mov
xchg
push
lods
ret
pop
jge
aaa
or
adc
push
data16
dec
mov
mov
cmp
mov
mov
loope
mov
add
stc
fldenv
icebp
and
jns
shrl
sahf
and
jl
cmp
rcrl
inc
mov
addr16
fsubs
loop
jno
loopne
daa
add
or
mov
xchg
push
enter
int3
inc
fcmovu
xchg
fadds
push
aam
pop
rcrl
aaa
and
daa
xor
js
jmp
pop
out
stos
or
inc
xchg
pop
jg
rcrb
pop
mov
adc
cld
xchg
call
call
jno
mov
stos
xchg
jnp
les
gs
mov
xor
inc
mov
les
add
dec
inc
cmp
dec
int
mov
mov
data16
in
sbb
cmp
ss
sahf
push
pusha
xchg
testl
add
or
pop
or
fisubs
jg
je
mov
sbb
xchg
test
repz
and
push
push
mov
mov
or
aam
push
dec
imul
mov
call
push
test
ljmp
cmp
rol
shlb
lea
xor
imul
out
fmuls
ljmp
adc
aas
roll
into
sahf
sbb
xchg
and
pushl
repnz
push
add
mov
sub
negb
push
mov
dec
or
pusha
inc
pop
jb
mov
mov
adc
dec
sbb
fcomp
jbe
pop
sub
adc
jecxz
fisttps
adc
popf
lret
out
mov
clc
dec
jmp
or
hlt
fdivrl
scas
popa
mov
aaa
fs
cltd
jo
cmc
lahf
ret
lock
mov
jmp
xorl
ja
popa
popf
or
pushf
push
ficompl
dec
dec
mov
push
pop
xchg
aas
or
xchg
in
andb
fdivp
mov
jnp
insl
les
cmp
pop
mov
mov
movsl
cmp
insl
sub
nop
sahf
mov
es
in
lcall
cmp
adc
jae
cmpsl
test
mov
pop
jmp
push
ret
adc
fiaddl
aaa
scas
adc
adc
inc
in
stc
das
dec
and
or
in
jg
mov
sub
xor
or
xchg
data16
je
mov
mov
xlat
test
xor
mov
fwait
mov
mov
in
mov
inc
xchg
cld
sbb
cmpsb
push
cld
mov
jns
aaa
jb
ror
lahf
lahf
lret
fs
lret
push
inc
lds
cmp
mov
out
or
sub
push
mov
mov
sbbb
imul
push
mov
xlat
fs
data16
loopne
sbb
xchg
push
mov
out
stc
add
mov
out
cmp
cmp
mov
and
in
mul
cmp
jle
je
cmp
fucomp
jl
add
nop
aam
mov
and
jecxz
icebp
dec
pop
jae
std
add
xchg
or
sbb
out
lret
push
jecxz
cli
inc
mov
and
xor
mulb
adc
js
cmp
add
dec
jbe
jmp
xor
fisttpll
pop
xchg
sbb
or
imul
mov
data16
test
pcmpeqd
jae
or
dec
data16
sub
test
dec
mov
or
lock
dec
mov
inc
inc
xor
mov
ficoml
arpl
push
mov
sub
pushf
add
jae
lods
fs
xchg
jmp
mov
sbb
pop
mov
aad
scas
dec
pop
loopne
xchg
subb
xor
pop
add
and
inc
or
sub
pushf
in
and
pop
push
inc
dec
ss
loopne
and
mov
mov
in
adc
loope
jmp
ret
or
inc
adc
int3
jmp
jg
mov
cmp
pop
jmp
add
pop
push
sub
mov
mov
les
sbb
push
popa
movsl
sti
and
fs
inc
std
jge
jbe
push
testl
adc
xchg
xor
push
imul
in
loope
jo
lea
lcall
sub
pop
je
ja
scas
loopw
imul
subl
lret
mov
pop
push
dec
je
je
add
mov
push
jno
push
adc
xchg
fwait
lret
lcall
out
and
sbb
mov
add
jmp
fcompl
in
mov
cmp
dec
ljmp
js
es
idivb
adc
pop
insb
mov
addr16
pop
jecxz
mov
mov
inc
pop
sub
xchg
xor
cld
xchg
in
or
cmp
cmp
ss
sbb
jecxz
xlat
in
mov
xor
and
mov
xchg
stos
jmp
je
ja
xchg
fisubl
xor
cmpsb
insb
mov
or
xor
or
lcall
pop
pop
lock
xchg
pop
fwait
or
and
mov
rol
mov
movsl
sub
mov
mov
std
dec
arpl
fcom
xchg
inc
loope
push
cwtl
popf
add
addr16
pop
fsubrs
insl
in
sub
cmpb
jo
mov
mov
repnz
popf
push
addb
repnz
xor
ljmp
fsubl
int3
insl
pusha
push
inc
pop
adc
data16
xchg
or
std
gs
js
mov
les
sub
sarb
jg
mul
jnp
ret
pop
rcr
enter
pop
pop
mov
cmp
xor
mov
roll
loope
sub
jg
aaa
sub
aaa
pop
adc
and
lock
push
sub
in
adc
xchg
addr16
add
ret
loop
scas
decb
leave
sub
outsb
dec
stos
popf
out
inc
test
sub
out
xor
aad
sbb
es
xchg
inc
xchg
xor
add
push
or
sub
call
addr16
mov
addr16
lods
mov
push
sahf
xor
lods
add
mov
movups
jo
and
xor
jae
jecxz
rclb
pop
dec
sub
not
lods
xor
inc
xchg
push
leave
shr
pop
in
inc
pop
dec
sti
push
mov
out
sbb
inc
decb
push
aaa
mov
push
sub
sbb
jne
push
inc
sbb
fs
dec
in
xor
lret
jle
femms
int3
mov
outsl
leave
push
fdivp
cltd
addr16
mov
lahf
jl
movb
cmp
mov
int
out
mov
inc
xor
mov
jb
stos
in
xchg
push
cmp
cmpsl
je
fisttpl
les
arpl
nop
dec
or
adc
mov
xchg
mov
ds
pop
mov
push
and
test
cmpsl
pusha
lahf
lock
sub
loopne
or
mov
jne
xchg
fdiv
mov
aas
and
inc
stos
jmp
insb
pop
push
les
mov
mov
add
mov
test
dec
cmp
jae
mov
pushf
jecxz
out
and
add
sbb
or
out
xchg
jecxz
loopne
adc
je
add
xchg
and
iret
jns
in
insl
repnz
xchg
adc
xchg
mov
iret
stos
adc
mov
fmuls
xor
or
xor
aas
ds
in
cld
test
imul
mov
jp
mulb
mov
cmpl
popf
mov
xor
shrb
ds
lea
push
or
into
das
iret
mov
faddl
imul
xchg
mov
jbe
and
negb
int3
insb
popl
je
lods
mov
and
scas
and
hlt
sarb
pop
xchg
mov
lds
cmp
sbb
jp
daa
dec
push
jo
fldl
jae
shr
mov
idiv
mov
pop
loop
xor
fistpll
pop
sub
xchg
ljmp
das
and
xchg
mov
mov
hlt
idiv
add
addl
leave
mov
bound
cld
sahf
imul
out
push
push
and
mov
out
cwtl
add
inc
scas
dec
pop
rcrl
test
xlat
mov
call
dec
loope
daa
movsb
aad
mov
push
loope
repnz
mov
stc
ret
movsl
nop
sbb
dec
cs
testl
lcall
insl
pop
lods
xchg
lods
mov
aad
or
in
sti
daa
pushf
and
adc
loop
je
es
shll
movb
dec
jp
nop
and
mov
jl
pop
and
or
push
cmp
sbb
sbb
sti
mov
mov
out
jecxz
xor
rcl
subb
mov
test
dec
stos
cmc
xchg
movsl
je
call
into
jno
xchg
push
je
and
pop
pop
mov
fldl
fmuls
sar
or
mov
sbb
int
jbe
or
fsubrs
sub
xchg
out
ret
addb
gs
mov
xchg
xor
jle
cmp
lcall
fstpl
jae
cmp
pop
ljmp
lahf
sarb
inc
jne
ret
xchg
inc
inc
jo
pop
int
das
mov
faddp
sub
daa
inc
jns
sahf
pop
ds
dec
test
out
stc
test
sub
add
hlt
mov
sub
inc
xchg
jg
jge
icebp
outsb
push
out
clc
out
out
andl
mov
push
inc
mov
mov
ret
mov
arpl
das
jnp
fsubs
sbbb
inc
shl
out
sub
lahf
outsb
in
ret
loop
inc
ja
or
fnstsw
sub
out
test
mov
aas
call
mov
sbb
repnz
jle
loop
push
jp
shll
adc
adc
loopne
gs
jmp
jmp
out
push
fidivrs
out
loopne
fnstcw
xchg
mov
out
jnp
scas
in
jp
popa
gs
sahf
in
hlt
rcll
push
aaa
jno
repnz
bound
movsb
fs
out
jp
imul
dec
shl
aad
add
push
sbb
lea
das
arpl
arpl
idivl
movsl
cltd
xlat
aam
mov
adc
jmp
pop
int3
leave
mov
pushf
dec
mov
das
mov
push
mov
xor
arpl
negl
repz
test
or
mov
inc
xlat
xchg
lds
mov
sub
and
jo
cmpsb
outsl
andl
fwait
mov
mov
rcr
ljmp
movsl
clc
into
je
jecxz
stc
jp
xchg
arpl
jecxz
cld
dec
into
out
inc
lcall
sbb
mov
lea
mov
aam
pop
ret
push
je
and
mov
cmp
jb
mov
add
rorb
out
add
lret
subl
loopne
inc
das
in
dec
adc
lcall
jb
pusha
mov
pop
pop
int3
int
dec
outsb
std
add
lods
add
sub
mov
mov
xor
xchg
rep
lret
addr16
jns
leave
daa
inc
iret
sbb
rcrl
push
je
lock
mov
mov
cmpsl
fisttpll
lcall
add
sub
loop
mov
out
js
bound
mov
mov
pop
fildll
pop
mov
push
roll
dec
push
arpl
mov
xchg
xchg
dec
and
xchg
pop
sbb
and
fadd
orb
in
xor
add
xor
push
cltd
mov
jge
cmp
or
xchg
jmp
or
xchg
xor
fucomip
stos
dec
movsb
out
out
arpl
push
dec
test
hlt
jbe
in
push
lcall
scas
loop
jb
cmp
into
mov
icebp
mov
or
inc
or
js
jno
rcll
and
insb
das
in
dec
and
jnp
ret
push
cmpb
push
add
cmp
je
xor
sub
add
sbb
ss
adc
or
cmp
sub
adc
div
mov
out
outsl
imul
and
test
test
push
icebp
push
in
cmp
outsb
call
sbbb
call
fs
mov
out
mov
mov
gs
pop
cmp
jl
jle
xchg
mov
cmc
scas
mov
into
fidivs
push
stc
aam
fwait
mov
js
lret
lahf
cmc
insl
sub
inc
jl
sub
nop
jnp
pop
fsubl
and
call
mov
adc
mov
mov
iret
pop
movsl
repnz
pop
fisubrl
jns
xchg
aam
shlb
clc
lods
out
jo
jl
cmp
cmc
jae
test
xchg
cmpb
mov
sub
adc
enter
mov
xor
xchg
cmp
cmp
dec
or
clc
mov
or
inc
bound
xor
cmp
lods
test
mov
jno
add
iret
std
mulb
ret
jb
xor
ss
adc
cmpsl
push
jno
mov
nop
loopne
rorb
mov
dec
outsb
call
dec
test
pushl
stc
push
cmpsb
push
xchg
or
adc
lods
and
repnz
test
stos
sub
neg
sub
lds
loop
push
pop
enter
pop
lock
mov
mov
fstpl
or
roll
fbld
in
nop
dec
imul
xchg
in
lret
xchg
cmc
add
cli
mov
xchg
lods
lods
pop
push
xor
movsb
lds
jp
sub
jecxz
xor
xor
xor
dec
push
adc
jle
mov
cli
fldt
mov
or
lock
insl
adc
test
xlat
inc
ds
push
mov
cmp
pop
addr16
pop
jno
mov
xchg
add
test
add
mov
jmp
mov
adc
gs
fwait
mov
out
sarl
sub
lds
xchg
in
inc
arpl
in
cmpsl
js
sahf
add
push
lods
adc
aas
xchg
xchg
daa
push
xor
xor
mov
jecxz
cmp
hlt
add
test
and
mov
int3
xchg
in
and
sub
shlb
pusha
fwait
popf
mov
dec
inc
stos
push
mov
jg
cmp
xlat
lret
adc
sub
in
inc
dec
mov
arpl
in
mov
dec
stos
mov
cltd
fimull
mov
mov
int
and
cmpsl
jb
repz
and
xchg
cmp
inc
ret
push
fsubr
push
test
and
jne
stos
push
mov
scas
test
push
add
cli
rol
test
mull
addr16
pop
add
xor
leave
push
mov
lea
fs
mov
out
movsl
adc
imul
scas
xchg
in
cltd
mov
push
arpl
and
pop
mov
xchg
cmp
mov
imul
or
xchg
dec
int
enter
enter
or
sbb
fs
dec
sbb
jno
mov
repnz
lea
jmp
lods
cli
and
shlb
out
lcall
or
cmp
dec
fsubrl
sub
add
jl
add
pushf
mov
cmp
movsl
inc
mov
popa
ret
inc
das
sbb
jbe
sub
add
not
cmc
maskmovq
jmp
in
clc
push
xchg
adc
mov
or
mov
sub
inc
enter
aam
ficompl
adcl
mov
jp
inc
mov
adc
lcall
sbb
rcll
out
push
ret
addr16
int
nop
push
pop
add
in
popf
aad
push
dec
adc
mov
cmp
xchg
mov
iret
rclb
xchg
std
jg
add
aad
or
add
clc
and
jno
pop
xor
sub
dec
icebp
sbb
pop
jb
fidivs
ss
scas
mov
sub
ja
stc
adc
lcall
cltd
ja
push
mov
cmpl
sub
lret
dec
mov
lds
cmpsb
adc
jnp
mov
mov
outsb
push
repnz
mov
inc
add
push
cmp
pop
xchg
call
mov
push
bound
mov
lock
jmp
ror
push
popf
xor
decb
jmp
push
aam
jge
pusha
xor
ret
rclb
add
xor
scas
pop
mov
sub
sbb
popf
add
stos
mov
cwtl
mov
mov
sub
jne
mov
iret
test
clc
dec
adc
gs
xchg
cmp
mov
mov
icebp
pusha
int3
std
inc
xor
jnp
sarb
xor
lds
xor
test
pop
rcrb
pop
test
pop
sbb
loop,pn
sbb
lret
cwtl
fs
mov
ds
push
pushf
xchg
adc
je
les
xchg
or
adc
pop
dec
sub
rorl
call
mov
xchg
notb
xor
mov
insl
data16
sub
imul
pop
pop
les
lret
addr16
iret
repnz
in
into
mov
dec
es
data16
clc
hlt
cli
xchg
mov
add
pusha
enter
out
or
mov
shl
es
aaa
cmpsl
add
ret
sarb
adc
mov
insb
mov
mov
mov
aaa
push
mov
inc
scas
cmpsb
xlat
or
mov
adcl
jno
xlat
add
pop
mov
in
lods
mov
iret
scas
ficoms
sub
das
gs
inc
ljmp
mov
mov
xorl
push
das
ljmp
insl
xor
xor
xchg
fnsave
dec
xchg
stos
cmp
xchg
mov
jg
stc
mov
cmp
xor
jno
int
xor
es
cmc
mov
ja
cs
and
or
div
out
ret
push
and
jo
and
ss
faddp
call
cmpsb
mov
das
lahf
cmp
pop
cld
and
add
push
xchg
cli
xor
cld
lret
das
xchg
dec
cltd
push
mov
sbb
cli
mov
stc
mov
jle
lret
das
es
xchg
xlat
test
dec
xchg
sub
out
adc
cmp
mov
add
mov
popl
pop
xchg
add
sub
adc
scas
testl
inc
inc
sti
push
pop
fsubl
pop
add
sar
test
pop
cmpsl
sbb
sub
and
xor
imul
mov
repz
adc
and
cmp
adc
push
cmp
push
std
and
rcr
loopne
sbb
mov
loop
or
fstl
xchg
jns
mov
into
test
fstpt
jmp
pop
sbb
hlt
lret
cmp
and
in
xchg
xor
into
addb
fbld
pop
push
es
xor
ret
std
adc
lock
and
shrl
rorb
pop
cmp
outsl
arpl
insl
fnstsw
cmpsb
lahf
sbb
mov
mov
xchg
jnp
lds
sub
fisubrs
lret
daa
aaa
shll
lret
ss
mov
jl
lods
testl
jmp
jmp
push
mov
cmpsl
pop
mov
fcmovnbe
rcrb
mov
xor
aad
add
mov
add
addl
in
mov
cmc
neg
jne
loope
aam
fldl
inc
cmp
pushf
cmp
in
hlt
mov
roll
repnz
dec
and
incl
popa
call
mov
insl
fidivrs
xor
sub
cmc
fs
mov
sbb
xor
ja
and
mov
mov
repz
adc
adc
push
loopne
fs
pop
push
cmc
ret
inc
std
mov
xchg
jns
test
xchg
in
xor
iret
adc
mov
or
inc
cmp
fildl
and
jno
test
push
leave
icebp
pop
stos
daa
stos
je
rolb
pop
and
sti
jl
mov
adc
pop
fs
inc
je
push
xor
lcall
mov
test
xchg
cwtl
jmp
cmc
cmp
rorl
hlt
or
fsubrl
xor
lods
dec
sub
aam
mov
repz
jge
push
loop
neg
xchg
xchg
and
cld
pop
jns
add
inc
mov
ret
inc
mov
push
lahf
jp
hlt
push
lret
insl
sbb
ret
xchg
sbb
xorb
mov
lahf
jmp
add
int
std
push
fcmovb
int
lods
add
add
pop
ljmp
leave
pop
lods
pop
xor
jg
dec
sbb
xchg
mov
mov
loop
or
std
push
insl
and
lret
push
jle
mov
jne
cmp
stc
jl
and
mov
les
filds
ja
cltd
aas
push
mov
and
push
add
fs
push
pushf
mov
aaa
dec
jno
fcompl
scas
pop
sbb
xor
popa
daa
pop
add
cli
scas
jecxz
push
call
pop
jno
test
fsubrl
cmp
add
loop
insb
jmp
addr16
add
push
mov
insw
rol
fbstp
je
stc
adc
roll
mov
scas
or
inc
outsl
loopne
dec
test
mov
adc
call
insl
fs
stos
repnz
sbb
out
outsb
in
pmaxub
adc
fildll
loop
stc
dec
and
loope
push
mov
add
test
into
mov
jp
mov
push
out
cmp
add
sub
enter
in
cmp
stos
sbb
sar
or
pop
hlt
shll
adc
and
push
daa
sbb
fldcw
mov
scas
lcall
jecxz
mov
lret
sbb
mov
in
cmc
jg
lcall
rcl
call
jne
mov
adc
les
and
push
lret
inc
push
dec
cmp
xchg
xchg
mov
cmc
mov
mov
aam
mov
xor
iret
xchg
sub
pop
inc
shlb
imul
adc
daa
dec
pop
mov
enter
jle
sbb
push
test
push
popl
xchg
pop
xor
mov
jne
loopne
imul
imul
push
add
add
add
aad
xchg
pop
cli
neg
vcomiss
enter
aam
cwtl
jbe
es
pop
pop
xor
sbb
sub
aad
cmp
imul
mov
and
push
outsb
xorl
lea
sub
push
inc
jnp
mov
inc
mov
cmpl
repz
mov
dec
cmc
in
jbe
push
jge
dec
jb
mov
out
jmp
pusha
mov
dec
dec
and
cld
rol
cli
fs
mov
mov
push
fmuls
fsubs
mov
outsl
xlat
stc
mov
xor
and
add
ror
sahf
call
push
out
sub
xchg
mov
popf
adc
dec
ret
stos
mov
aam
cmp
xchg
aaa
subb
repnz
xor
leave
push
adc
xchg
mov
push
push
jbe
mov
xor
adc
lret
gs
test
xchg
aas
loop
scas
push
xchg
mov
negb
jae
cmpsb
lods
xchg
mov
push
xchg
xchg
adc
leave
pop
mov
test
pop
inc
sbbb
notl
and
cld
sbb
dec
lods
mov
inc
jae
sbb
xchg
sbb
std
add
movsl
hlt
adc
push
or
jno
adc
scas
mov
adc
outsl
push
adc
push
sub
sub
stc
pushf
push
popf
pop
mov
xorb
loop
es
jo
jb
movsb
dec
rclb
inc
addr16
mov
or
add
repnz
xchg
mov
test
mov
pushl
sbbl
insb
mov
into
out
enter
lret
loope
hlt
xchg
outsl
fs
cmp
xor
fidivrl
mov
push
imul
stos
ret
pop
push
call
jmp
aaa
add
adc
popf
and
sbb
in
xor
faddl
or
repz
xchg
in
fiaddl
or
test
inc
sbb
mov
out
cmp
pop
nop
in
int
mov
cmpb
lods
inc
mov
or
adc
xor
lods
jl
dec
in
mov
or
lods
sbb
outsl
jge
daa
fidivs
add
int
rcr
repnz
dec
popa
mov
cmp
mov
fldt
mov
cmp
pop
xchg
icebp
dec
enter
mov
stc
push
push
mov
sar
out
fsubs
test
pusha
loopne
out
mov
add
shll
sarl
xor
fisubl
in
and
ja
jmp
pop
mov
push
mov
pop
aaa
scas
jns
ud1
mov
cs
jae
push
loop
cmp
xchg
lea
mov
inc
insl
in
clc
dec
mov
movsb
mov
loop
xor
cli
xor
adc
inc
outsb
jns
lcall
es
sbb
cmp
push
std
ds
in
push
bound
arpl
leave
je
sbb
or
mov
out
stos
fstps
jl
jp
sbb
testl
sub
mov
and
sti
add
push
jbe
pop
cmp
outsb
test
xor
mov
into
popa
add
stos
add
ret
push
inc
mov
mov
shr
mov
mov
jbe
nop
lods
xor
cli
iret
shlb
push
popf
pusha
or
or
out
lods
fwait
pusha
or
test
inc
jno
dec
je
clc
xor
push
or
dec
negb
cmp
dec
int
lods
stos
add
icebp
xchg
push
in
test
xchg
xchg
fnsave
jb
mov
imul
push
xor
inc
loop
jb
outsl
xor
ret
and
dec
jns
dec
aaa
call
sub
ljmp
inc
or
rorb
shll
popa
movsb
sbb
lcall
pcmpeqb
and
push
xorl
add
sub
aaa
mov
rorb
lahf
push
jne
and
insb
cwtl
enter
add
rcrl
cmpsb
mov
mov
test
mov
push
aaa
add
push
ud0
mov
fwait
mov
push
pusha
mov
jo
inc
test
fnsave
cmp
and
cmpsl
jbe
dec
fistl
js
testb
pop
cmpsl
push
jmp
xchg
inc
popa
xchg
rorb
pop
int
test
repnz
fsubs
aam
sub
adc
call
jb
into
jno
dec
jno
lods
dec
pop
pushf
cmp
out
out
dec
shl
les
adc
sbb
in
inc
pop
sti
fldenv
pop
subl
bound
or
pushf
jae
test
mov
ss
and
jmp
xor
adc
dec
inc
lret
mov
repz
frstor
outsb
repnz
imul
jp
insb
mov
test
or
add
mov
into
int3
push
leave
mov
test
sahf
fwait
test
cmp
fstl
inc
xor
sub
and
ficompl
movsl
xchg
push
scas
inc
cmp
cs
testb
mov
add
mov
mov
add
jp
cld
mov
mov
ds
repz
add
mov
push
xchg
and
movsl
ja
and
pop
sbb
in
sti
cmpsb
pop
xor
sbb
testb
xchg
and
ret
push
and
cmp
pop
xchg
mov
stc
mov
cmp
nopl
subb
scas
dec
and
ret
data16
int3
int3
pop
lahf
enter
mov
dec
in
shll
rcrl
dec
sub
add
je
sti
rorb
out
xor
inc
es
jo
mov
or
bswap
je
decb
push
out
in
data16
add
add
popa
cmpsl
mov
xorb
ret
push
push
xor
pop
or
sub
dec
add
lea
pop
pop
out
xchg
lea
adcb
xchg
pop
aaa
lcall
mov
mov
mov
andl
xor
aam
stc
push
xchg
mov
sbb
cmc
inc
stos
leave
rolb
mov
pop
xchg
jb
lods
test
add
xor
xlat
jge
mov
out
and
sahf
iret
cmpb
rcl
push
lcall
xchg
pop
mov
lds
cmpb
mov
or
daa
call
test
xor
imull
adc
addr16
push
nop
jne
and
cld
cltd
flds
shlb
mov
arpl
dec
adc
movsw
pop
fwait
int
adc
xchg
xlat
mov
ljmp
out
mov
in
inc
sbb
popa
arpl
pop
ss
jp
dec
es
add
ret
insl
inc
inc
cmp
or
sbb
push
pusha
iret
clc
stos
mov
mov
cmc
pusha
jmp
mov
and
adc
xchg
jbe
sub
push
add
jno
adc
fdivp
aad
pop
js
int3
push
testl
gs
sub
mov
enter
adc
js
cmp
cmc
insl
mov
shlb
bnd
jmp
jl
sub
adc
and
icebp
or
push
incl
or
lock
xor
test
push
lahf
dec
into
lods
mov
xorb
movsb
addr16
std
push
pushf
sbb
push
add
xor
push
aad
mov
nop
inc
rorl
popa
in
mov
pop
lret
cmp
ss
scas
nop
jl
sub
pop
testb
aaa
in
popf
ds
insb
and
test
sbb
in
xorb
jnp
dec
mov
jecxz
pop
aas
std
jge
inc
cmp
stos
scas
shll
push
push
loope,pt
mov
stc
pop
sahf
cmp
cmp
jg
or
mov
mulb
cltd
cmp
xchg
pop
lods
fmuls
outsb
lcall
mov
push
adc
mov
jb
add
stc
adc
mov
movsl
cwtl
popf
cmc
das
mov
fstp
or
lret
loopne
pop
lods
xor
mov
ficomps
enter
push
dec
xchg
nop
push
push
dec
push
jmp
jnp
inc
sti
pusha
mov
fistps
iret
xor
push
inc
xchg
aad
das
popa
jl
cld
and
loopne
mov
lea
test
lret
mov
stc
dec
fsubrl
js
ljmp
inc
cmpsl
repz
cli
inc
xchg
cs
insb
mov
push
fisubs
sbb
push
stc
outsl
imul
pop
stc
and
lock
and
sbb
cs
xorb
outsb
lods
lods
dec
lret
xchg
in
ss
lock
sub
pop
and
adc
sbb
icebp
sbb
add
dec
shlb
push
adc
into
out
mov
out
movsb
fs
jne
mov
and
xchg
xchg
xchg
mov
popl
data16
push
or
jge
mov
mov
dec
mov
enter
mov
dec
stos
movsl
stc
sbb
test
iret
mov
dec
push
ud0
fmuls
rcl
shr
sbb
das
das
dec
and
inc
inc
dec
movsb
das
sahf
mov
lret
lea
fs
add
sahf
lock
hlt
xchg
stc
pop
call
insl
enter
mov
outsl
inc
arpl
mov
add
pop
mov
jae
sti
fidivl
pushf
mov
cwtl
adc
shll
push
loopne
ljmp
or
into
ret
js
cmp
shl
lock
pop
jb
flds
cmp
push
pusha
iret
sbb
pop
and
ljmp
cmp
mov
pushf
mov
sub
xchg
xchg
push
sbb
popf
add
roll
fisttpl
pusha
out
pushf
add
iret
enter
stos
push
stos
mov
jecxz
xchg
mov
sbb
enter
out
leave
xor
lret
sub
and
lods
adc
add
scas
in
int
loope
push
inc
and
insl
push
repnz
repnz
lcall
pop
enter
adc
ja
xchg
pop
int
pop
data16
repnz
test
pop
and
clc
loope
sub
sbb
loope
in
loop
push
das
iret
sub
repnz
movsl
call
mov
jecxz
fistl
sahf
push
jle
mov
mov
das
call
xor
sub
mov
xchg
iret
scas
shll
cmpsl
pusha
test
sub
icebp
sbb
popa
lret
dec
xor
call
sbb
int3
jp
fstps
xchg
jecxz
mov
faddl
pop
xchg
jecxz
inc
push
inc
jmp
sbbb
and
adc
daa
shll
test
lock
loop
sub
push
adc
xlat
push
pop
sub
adc
aam
cmp
test
jb
pusha
lock
loop
je
mov
scas
call
pop
fdivs
lret
adc
mov
cmp
dec
add
cltd
and
cmp
cmp
sub
cmp
and
push
xorb
aas
popa
jp
pop
inc
add
xor
mov
enter
hlt
popl
inc
xchg
adc
push
data16
loopne
push
ret
dec
lds
mov
push
jo
adcl
inc
push
insb
repnz
fwait
inc
sarb
psrad
sbb
sbb
or
mov
push
dec
aaa
mov
jne
out
sarb
push
int
gs
popa
addl
xchg
jmp
push
repnz
movsl
jg
add
inc
push
test
scas
jmp
pusha
pop
add
add
ljmp
lret
ds
xor
sbb
xor
out
lcall
or
push
and
nop
cmpsb
cmp
daa
adc
pop
sbb
push
dec
push
jmp
sbb
lret
xor
lds
enter
adc
aam
inc
lock
add
pop
and
xchg
rcr
pop
pop
sbbb
inc
pop
in
ret
stos
adc
and
pop
popa
es
in
in
sarb
mov
int3
push
rorb
in
call
lcall
xor
scas
mov
enter
scas
gs
or
adc
cmc
test
jge
andl
js
lret
stos
jge
adc
mov
arpl
jnp
movsb
mov
popf
popf
or
shlb
dec
or
push
rclb
orl
rclb
in
add
cltd
xchg
ret
pop
mov
lret
xchg
mov
push
xor
dec
loop
scas
pop
or
ss
outsl
and
add
cmc
mov
sbb
scas
fwait
jmp
aam
add
jmp
push
test
xchg
fcompl
popa
xorb
xchg
xchg
insb
push
inc
fistpll
mov
rcll
jbe
das
movsl
addr16
mov
pop
in
aam
arpl
clc
jno
sti
jmp
inc
mov
or
add
out
add
lret
pop
inc
movsb
addr16
sbb
xor
lods
pop
jge
in
subb
sbb
inc
pop
aas
lret
verr
cmp
dec
testb
fwait
nop
push
add
je
jmp
add
scas
into
mov
inc
push
jge
out
mov
xor
add
inc
add
hlt
sbb
push
mov
loop
into
testb
ljmp
in
adc
jge
out
pop
in
push
leave
dec
cvtpd2dq
addr16
jae
dec
mov
fidivs
and
mov
loope
xchg
aaa
add
xor
pop
movsl
shll
mov
push
fwait
xor
sbb
arpl
mov
mov
mov
inc
aad
movsl
lcall
dec
bound
mov
js
lds
lods
aas
adc
dec
ret
mov
hlt
aam
jbe
fucomp
lahf
add
in
test
adc
lods
popa
hlt
lret
insl
sti
xchg
mulb
into
mov
pop
mov
cmp
aas
rep
js
divl
jns
add
adcl
loop
std
jle
mov
stos
mov
jb
leave
mov
loop
imul
sti
stc
cli
dec
or
cltd
mov
or
sub
pop
sbb
push
sbb
xchg
movsb
mov
cld
and
mov
loopne
lods
sub
jo
movsb
leave
negb
test
test
or
cmp
jb
std
ja
mov
jecxz
loop
ret
push
push
les
inc
stc
inc
sar
mov
adc
in
das
jecxz
pop
addl
daa
fs
xlat
jmp
push
mov
and
jno
push
ffreep
aam
lods
pop
les
inc
mov
lret
sbb
fbld
jecxz
or
fldl
inc
sti
lods
test
movsb
mov
dec
inc
in
mov
fmull
pop
and
sarb
mov
lahf
add
lret
mov
push
popa
xlat
mov
xor
stos
rcrb
stos
mov
pop
test
add
push
test
pop
int3
fimuls
xchg
cwtl
in
test
lret
cmc
shll
jo
stos
jmp
xchg
xor
push
test
imul
mov
push
jb
out
cs
fwait
mov
jnp
push
lret
and
ds
cwtl
inc
xlat
jno
into
adc
fldl
xchg
dec
test
add
add
inc
jge
idivb
clc
mov
test
xor
lea
pop
dec
sbb
sarb
jge
mov
je
aaa
test
fldenv
adc
add
sub
js
nop
xchg
jle
clc
xchg
js
shlb
and
jl
mov
push
xchg
pushf
leave
lret
mov
xchg
sub
sbb
xor
add
sbb
shll
add
fcmovne
jns
shl
dec
fs
pusha
sbbb
dec
pop
call
in
and
jge
jle
adc
mov
mov
aas
sti
and
mov
call
mov
cs
mov
cmpsl
add
xor
loope
xor
dec
jnp
mov
nop
mov
pop
cmpl
lret
mov
les
pop
pop
repnz
lahf
in
rcrl
mov
clc
lods
add
out
pusha
das
push
or
jp
add
cmpl
inc
pop
test
ret
mov
pop
bound
sub
out
xchg
jae
adc
inc
mov
cmp
lret
add
and
add
jg
mov
push
add
fildll
popf
addl
jecxz
jb
dec
pop
mov
mov
lea
mov
push
add
fstpt
push
ret
and
mov
jle
dec
sbb
data16
dec
rcll
pop
inc
lods
adc
sub
aad
dec
xlat
into
adc
cwtl
xor
pushf
ret
xchg
cmp
cwtl
push
fldcw
xchg
frstor
pop
out
cmp
push
std
mov
fisubrl
pop
dec
xlat
sub
bound
addr16
sbb
jl
stos
xor
dec
sub
xchg
pop
out
scas
xor
pop
mov
and
push
test
je
cwtl
arpl
xchg
jnp
xchg
cli
addr16
popa
cmp
xor
and
mov
xorb
rol
jns
rcl
adc
adc
mov
sahf
scas
call
pusha
xorb
les
lahf
sub
pop
push
loopne
push
pusha
push
cmp
sub
popf
pop
test
jnp
mov
add
jnp
jb
cmc
notl
add
std
pop
imul
ja
inc
xor
pusha
loopne
xchg
fwait
pop
cmc
movb
jecxz
pusha
jnp
and
mov
cmp
mov
int3
ljmp
das
js
decb
sbb
xlat
fsub
repnz
push
scas
jge
clc
outsl
mov
mov
sbb
test
push
es
in
sti
fildll
jl
push
mov
xor
into
push
aam
cmc
mov
dec
xor
clc
stc
int
pop
cli
loope
jge
bound
jle
stos
inc
cli
sbb
shll
sbb
pop
push
loope
jl
loopne
int3
or
jbe
and
jbe
inc
arpl
lods
mov
negb
mov
imul
icebp
jnp
imul
ret
ja
ds
pop
loope
adc
addb
dec
jne
dec
aad
or
inc
mov
pop
xchg
or
movsb
adc
push
mov
and
lahf
xchg
and
call
popa
lret
ds
dec
mov
pop
mov
lods
inc
iret
xchg
gs
push
fsubrl
js
lahf
in
cmp
test
test
mov
shll
and
test
add
push
dec
push
pop
fldt
das
dec
aas
sbb
add
xor
jo
push
xchg
and
ficoml
das
jnp
or
daa
sub
mov
inc
adc
lock
mov
hlt
mov
test
jmp
fwait
push
mov
or
or
or
xor
shlb
adc
xchg
fidivrl
xor
add
cli
cld
aad
cmp
cld
and
push
cmpsb
ja
xchg
mov
or
addl
lods
cmc
in
jle
pop
push
arpl
js
push
repnz
adc
inc
xlat
mov
ss
cmp
cmp
inc
inc
mov
or
inc
into
or
add
mov
jmp
push
mov
rorb
stc
pop
fs
dec
sbb
insb
jno
add
jp
gs
jmp
adc
dec
pop
lock
aaa
je
lock
nop
mov
movhlps
pusha
in
int3
cmpb
enter
test
incb
cmpsb
rol
mov
pushf
insb
cmp
lds
mov
clc
push
pop
or
jnp
cmp
lds
mov
aaa
sub
inc
imul
imul
pop
movsl
out
jmp
fisubl
je
cmp
cmp
dec
cmp
jmp
das
rcrb
adc
data16
lret
push
sbb
scas
into
fwait
cmp
push
fldcw
fucomp
loope
push
sub
stos
jg
adc
adc
sbb
dec
mov
out
shrl
pop
aam
out
ja
jns
mov
mov
jno
dec
lret
neg
sbb
cmpsl
or
in
addb
addl
adc
xchg
add
je
into
repz
lahf
mov
scas
jno
mov
es
mov
dec
and
push
aad
stos
js
lock
insl
jbe
test
divl
popa
testb
gs
lret
cmpsb
movsl
pop
cmp
stos
mov
jmp
add
mov
out
and
fdivs
xchg
data16
push
insl
test
mov
int
inc
test
sbb
shl
add
sbbl
pop
adc
inc
sub
jae
imul
fs
andb
push
popa
push
or
adc
inc
and
push
sbb
sbb
mov
shll
xor
add
dec
jne
rorl
mov
adc
mov
adc
fxch
loop
mov
inc
cmpsl
imulb
add
or
mov
sub
inc
andb
imul
pop
std
pop
pop
scas
icebp
jne
xchg
jns
ss
aas
aam
sub
push
sub
repnz
inc
jbe
mov
test
cltd
push
in
mul
cwtl
in
inc
inc
sbb
add
mov
shll
lods
cmpsb
scas
xor
test
pop
outsl
mov
push
in
test
sub
test
inc
or
lock
inc
cld
xor
fnstenv
movsl
aam
xor
insl
jg
lods
sub
lds
mov
jnp
xchg
cmp
fidivs
fisttpll
dec
out
mov
push
dec
jmp
fucomi
xorb
sbb
pop
sahf
stos
or
lds
ja
arpl
mov
mov
sti
cmp
pop
pop
jecxz
sbb
mov
sub
lods
add
sbb
adcl
mov
outsb
sub
stos
inc
add
cli
shrb
sub
icebp
aam
test
xor
popa
movsb
das
loopne
jp
cmp
dec
and
xor
cmp
mov
imul
in
lahf
jbe
das
movsb
movsb
jae
mull
movsb
daa
xor
subl
xor
cli
adc
stos
in
dec
sub
or
hlt
mov
mov
enter
inc
pushf
ljmp
adc
push
imul
mov
dec
dec
nop
xchg
clc
adc
ss
repz
xchg
outsb
or
test
mov
pop
xchg
and
pop
jbe
loop
sbb
mov
mull
fadds
mov
cmpsb
outsl
pop
cwtl
mov
scas
inc
fidivs
out
mov
daa
inc
in
pop
adc
adc
or
addl
fucomip
or
jo
push
pop
xchg
xor
filds
xor
mov
fucomip
push
push
aaa
cli
gs
and
cmovbe
sbb
mov
mov
loopne
scas
xlat
mov
or
int3
mov
mov
xlat
mov
inc
in
sti
xor
les
ss
sbb
pop
ret
jae
sub
xchg
fsts
pushf
pop
xchg
lods
or
dec
and
std
pop
inc
push
dec
rol
xorb
and
mov
imul
ret
pop
add
jns
sti
mov
cwtl
adc
inc
outsl
mov
mov
xrelease
or
dec
sti
aas
mov
lret
shlb
cmp
aaa
mov
rcrb
fnstsw
cwtl
nop
daa
push
loope
xor
push
jp
or
and
repnz
cmp
pop
xchg
mov
mov
out
icebp
insb
mov
stos
lods
add
mov
jge
adc
adc
aas
aam
sbb
and
inc
add
pop
pop
adc
rolb
into
pop
lds
fldenv
jl
add
movsb
notb
in
enter
inc
lds
jge
and
lret
hlt
int
jo
add
jl
daa
leave
stos
mov
es
loop
insl
dec
sarb
sub
sti
pushf
in
idivl
pop
pop
rcll
mov
daa
aaa
xrelease
repz
cmp
mov
push
push
pop
cs
xor
lods
mov
sbb
bound
std
out
sub
mov
mov
das
les
in
sub
ret
aam
nop
fldcw
mov
cmp
pop
xchg
leave
mov
add
adc
jns
pushf
lcall
mov
mov
shll
clc
daa
xchg
lcall
jno
lcall
sahf
mov
sub
pop
pop
outsl
paddd
pop
int
in
jmp
inc
loopne
arpl
push
hlt
push
fimull
scas
je
cmp
scas
in
pop
ffree
popf
jbe
xchg
loop
adc
stos
add
dec
jmp
adc
insl
mov
mov
mov
xor
std
js
icebp
mov
cwtl
les
insb
pop
mov
shr
cmp
popa
jno
call
fcmovu
nop
dec
arpl
dec
push
cltd
mov
pop
sbb
pop
inc
mov
mov
cwtl
lret
sbb
pop
decb
or
sbbb
aaa
xchg
aad
stos
fsubs
sarb
push
and
jp
pop
movsb
lock
add
xchg
cmp
jmp
je
or
jbe
lcall
shll
push
mov
cmp
jle
call
sbb
cs
movsb
jle
mov
cltd
test
inc
jg
sbb
mov
jno
inc
stc
das
iret
imul
scas
and
mov
mov
mov
dec
shl
loopne
out
mov
icebp
data16
cmp
cltd
dec
mov
pop
dec
mov
xchg
test
and
and
popa
push
xchg
inc
std
cmpsb
fldlg2
aam
mov
leave
ror
jb
movsb
inc
cltd
inc
or
add
mov
in
clc
jb
mov
fs
adc
loope
xchg
sti
in
jp
jp
or
dec
lahf
aad
cwtl
gs
mov
iret
es
cmp
arpl
outsb
or
jae
mov
fnstsw
stos
js
push
xor
arpl
cmp
add
dec
insl
aad
insb
and
jo
call
inc
fs
add
dec
fstps
out
fstpt
stos
mov
xchg
cltd
mov
outsl
inc
jne
or
int
int3
loopne
sub
or
pop
repnz
add
bound
lock
int
aaa
mov
sub
lcall
scas
enter
mov
or
das
lcall
sti
or
lret
arpl
in
adc
out
mov
jp
roll
pusha
dec
sub
cld
jnp
add
pop
out
xchg
movsl
add
dec
ret
inc
pushf
rorb
push
stos
int
ret
adc
popf
xor
sbb
mov
xor
cmp
mov
sti
cmpsl
mov
mov
fadd
inc
daa
mov
add
cmc
add
mov
fmuls
cmc
xor
nop
jnp
sub
lahf
jmp
xchg
cmp
mov
mov
add
push
mov
iret
rorl
push
imul
insb
mov
mov
aad
jb
sbb
sub
inc
jne
ret
mov
jno
faddl
insl
pop
jae
iret
mov
pop
add
jmp
jmp
fmuls
mov
mov
shl
mov
sbb
cmpsb
and
rorb
push
call
lods
mov
jle
adc
and
inc
stos
mov
and
test
sbb
or
mov
adc
xchg
xor
mov
xchg
push
and
gs
sahf
ret
cmp
imul
jns
xchg
or
inc
stc
pop
cmp
pushf
sbb
push
sbb
dec
mov
cmpsl
insb
loop
sub
sbb
gs
sbb
in
rcrb
mov
into
rcrl
jecxz
mov
push
fidivl
lods
inc
xchg
out
add
xor
inc
add
pushf
mov
push
outsl
add
jns
in
test
dec
repnz
sbb
insb
xchg
loope
stos
pop
ret
mov
aam
mov
or
sub
fstpt
in
dec
loope
mov
push
push
fidivl
mov
cwtl
out
popa
outsb
mov
dec
shrb
lods
cmp
imul
shl
outsl
xchg
sahf
ret
cmpl
stos
stc
movsb
loope
adc
sub
xchg
sbb
sub
ljmp
cltd
cli
fnstenv
sbb
gs
jno
add
adc
xchg
dec
mov
mov
mov
pop
push
jnp
fs
jl
mov
repz
mov
push
lret
sub
hlt
into
mov
and
and
adc
push
mov
inc
popa
jns
mov
ds
lods
out
inc
and
jl
daa
bound
sbb
imul
data16
sub
inc
sahf
xchg
jmp
pusha
ss
jb
pushf
cmp
xchg
mov
pop
mov
inc
movsb
sti
mov
cmp
mov
add
mov
popf
push
cmp
mov
cmc
jmp
xchg
jp
sbbb
lods
rcrb
add
mov
data16
mov
popf
pop
push
cwtl
jg
out
mov
and
loopne
push
leave
ficoms
jbe
mov
xchg
lds
cmp
push
push
xchg
dec
add
sbb
dec
jg
jle
mov
stos
mov
dec
add
lea
mov
xchg
out
dec
cmp
scas
pop
imul
push
insl
add
loope
ja
adc
movsb
ret
pop
cli
cltd
arpl
cmpsl
mov
ljmp
pop
cmp
cmp
jl
sub
xor
test
push
mov
xor
stc
addl
call
xorl
sbb
insb
dec
sub
add
sbbb
es
mov
xorl
je
cmpsb
jp
aaa
clc
jp
test
xor
xor
sbb
jb
call
inc
arpl
scas
mov
loope
mov
mov
fildll
mov
xchg
out
int3
and
dec
sti
stc
dec
mov
es
mov
and
xor
or
xor
mov
add
repnz
mov
scas
sub
into
jb
lock
or
mov
sub
add
cs
mov
jge
jne
repnz
lds
mov
fsubrs
sbb
inc
icebp
push
int3
enter
rcll
icebp
xor
dec
shrl
ret
sbb
xor
outsl
xor
sti
test
jb
jmp
add
loopne
sbb
xchg
test
push
out
movsl
gs
int3
sbb
movsb
cli
cltd
inc
push
xchg
out
xor
arpl
lret
cmp
and
das
jno
jecxz
xor
adc
fwait
push
xchg
pop
push
push
mov
add
adc
aas
stc
sti
xlat
add
hlt
ljmp
jle
dec
das
inc
or
mov
loopne
pop
push
or
icebp
cmpsl
shll
pop
inc
orl
dec
adc
sub
movsl
jp
iret
mov
or
jg
pop
jmp
adc
repz
xor
cmp
addr16
pushf
inc
stos
std
mov
pop
xchg
xor
cmpl
lds
fcmovbe
addl
or
data16
add
jle
js
cmpsb
fneni(8087
out
sbb
jne
sbb
es
inc
xor
call
jbe
mov
repz
add
insl
popf
in
iret
dec
shrb
lock
out
dec
adcb
test
clc
loop
pop
and
pusha
gs
jbe
fnstsw
jne
jns
pop
negb
sahf
and
sbb
pop
mov
xchg
pusha
push
sub
test
and
lret
push
mov
pop
mov
cld
fstl
fcom
push
std
mov
xchg
rorb
repnz
pop
or
and
sti
int
pushf
subb
in
push
push
ffree
ljmp
cs
aaa
mov
scas
in
fucomi
pop
sub
popf
loope
xor
enter
push
xor
cmp
daa
fsubp
rcrl
test
mov
fsubr
mov
push
jecxz
jnp
pop
ss
mov
icebp
jge
pop
testl
push
dec
pop
insl
inc
jno
pop
jns
or
inc
leave
mov
mov
mov
into
push
add
loope
scas
psllq
das
arpl
or
mov
repnz
insb
xor
pop
dec
and
mov
push
test
xchg
xor
mov
mov
add
sub
jmp
ficompl
jo
pop
test
cmpsl
test
and
andl
cld
mov
add
imul
jns
aas
decb
sub
mov
jp
dec
jo
pop
mov
jnp
jbe
movsl
jns
pop
movsb
ds
mov
cmp
rclb
sbb
push
mov
push
jae
imul
rcr
lret
dec
jge
and
imul
cmpsb
sub
stc
fs
insb
jnp
xchg
or
ljmp
xor
or
pusha
test
inc
and
mov
movsb
and
mov
mov
loope
dec
stos
loopne
xchg
aam
inc
ss
adc
popa
lea
cs
dec
ljmp
aas
or
add
xor
out
cmc
cmp
pop
mov
mov
sub
call
xor
int
sub
out
clc
test
jge
mov
outsl
lret
pop
pop
cmpsb
lds
ss
stos
cmp
std
mov
ret
notl
sub
mov
lret
mov
mov
bound
rcrb
out
and
in
push
out
jle
mov
incl
imull
pusha
mov
dec
les
leave
dec
sbb
fsubrl
in
cmp
imul
push
pop
jae
pop
das
adc
pop
cmp
loop
jne
ror
adc
and
imul
xchg
adc
or
imul
popa
inc
incb
loop
dec
inc
mov
xor
ds
stos
bound
push
mov
sbb
addl
shrl
lea
cwtl
daa
test
ficoml
adc
pusha
addr16
jge
jne
data16
pop
scas
outsb
adc
sub
mov
inc
movsb
shll
inc
ja
dec
lret
je
idivb
pop
les
sbb
adc
dec
pop
mov
dec
xchg
lcall
inc
cwtl
dec
mov
stos
stc
sahf
rep
jne
lds
rcrl
xchg
dec
push
mov
xchg
sbb
jnp
fisubs
out
or
push
mov
mov
in
sbb
std
mov
testl
in
js
pop
stc
aaa
cmpsb
adc
fcoml
jp
adc
fidivs
clc
dec
insl
mov
es
out
mov
adc
sbb
cmpsb
es
jle
and
push
out
in
mov
sbbl
mov
push
cwtl
rorb
adcl
cltd
cmp
sbb
pop
int3
cmpsb
int
adc
loope
and
jo
xchg
lahf
sbb
repz
xor
mov
sar
mov
js
mov
xor
add
ficompl
or
fnsetpm(287
cmp
scas
xchg
mov
addb
fcmovu
jne
push
out
push
insl
mov
sbb
stos
bound
ret
mov
loopne
xor
pop
je
movsb
mov
jae
scas
dec
xchg
mov
test
push
mov
movsl
sub
vmovlps
test
push
and
push
inc
or
cwtl
inc
inc
scas
ror
mov
sahf
xchg
jmp
out
fisttpll
cmpsl
jl
pop
mov
inc
lahf
lcall
mov
xchg
fisttpll
aam
dec
pop
jg
leave
jmp
pop
mov
push
xor
jecxz
test
mov
std
pop
push
push
cmc
orb
fdivs
sbb
or
mov
push
cmovb
add
dec
mov
lds
mul
cmp
cmp
cmpsb
sbb
imul
jae
je
arpl
inc
test
sbb
loope
fadds
jecxz
pop
sbb
sbb
xor
or
bound
daa
adc
loope
sub
in
jo
fisttps
inc
add
test
out
enter
popf
shll
cs
ss
or
mov
cmp
push
mov
mov
scas
out
xor
ds
xor
pop
mov
pop
xchg
xor
iret
and
out
fldcw
sti
mov
sub
dec
push
movsb
inc
sub
add
mov
cmp
mov
lds
adc
add
cld
idiv
inc
sub
shrl
or
xchg
or
or
enter
sbb
sbb
insl
xchg
and
mov
fisttpl
gs
or
ds
mov
dec
xchg
pop
and
iret
sub
push
mov
cmpsl
test
push
push
xor
jae
jno
jb
mov
cmpsl
jbe
push
push
xchg
inc
aad
lods
test
cwtl
in
lods
ret
sub
xlat
test
cmp
mov
out
into
mov
jle
cmp
mov
mov
or
in
scas
dec
sub
testl
cmc
push
shlb
pop
mov
sbb
sbb
call
aad
aad
sub
decb
mov
pop
insl
dec
test
jecxz
out
movsb
daa
cmp
imul
cmpsl
xchg
push
insb
cs
add
xor
sbb
dec
enter
pushf
inc
dec
lds
lds
std
mov
pop
push
movsl
outsl
divl
mov
dec
adc
inc
jmp
pop
out
repz
ss
das
repz
xchg
faddl
test
lret
sahf
xchg
adc
popa
shrl
pop
shrb
mov
mov
pop
sbb
sbb
cltd
pop
add
iret
fidivrl
push
cmp
adc
xchg
sub
dec
add
push
outsl
enter
cltd
adc
xor
pop
and
push
xchg
jns
push
cli
mov
inc
roll
out
in
mov
sbb
icebp
xchg
push
inc
out
xchg
out
repz
inc
sbb
gs
mov
push
lods
test
fsub
push
push
aad
dec
adc
xor
loope
ds
mov
mov
fisttpll
js
mov
xchg
std
pop
or
into
repnz
ds
sahf
outsl
repnz
aam
jecxz
call
imul
and
push
xchg
inc
ficomps
cmp
and
or
je
inc
pusha
mov
xchg
sbb
mov
cmp
mov
test
cmpb
xchg
cltd
loopne
xchg
pop
hlt
jge
lock
cmp
jecxz
mov
xor
test
mov
push
cmp
pop
dec
dec
fnstsw
sub
dec
lock
xchg
into
or
or
or
stos
cmp
sbb
iret
push
jg
cmpl
iret
jmp
push
xor
jne
mov
mov
or
push
xor
ficoms
sbb
std
scas
sub
call
mov
pop
arpl
add
mov
mov
rorl
or
jne
jecxz
loop
scas
push
push
or
mov
lea
loop
pop
add
mov
pop
and
arpl
jo
clc
dec
cmpsl
push
in
adc
dec
imul
jecxz
jbe
inc
jl
pop
xor
inc
aam
and
mov
jp
lret
aad
addr16
xchg
movsb
shlb
mov
rorl
and
jge
int3
ror
shlb
cltd
jl
and
aaa
loop
repz
inc
stos
pop
scas
adc
fstps
sbb
jmp
pop
xor
aaa
lods
cmpb
pop
lods
nop
jmp
mov
in
imul
popa
pop
sbb
aas
fcomi
jmp
xchg
aam
sbb
lahf
inc
jecxz
add
mov
mov
stos
push
imul
dec
cli
shrb
dec
outsb
daa
sbb
or
adc
jle
in
pop
push
scas
or
adc
pop
jmp
xchg
jnp
aas
out
repnz
js
mov
shlb
cs
jl
mov
push
outsl
jmp
scas
inc
stc
cmp
dec
pop
and
je
inc
roll
jbe
xorb
fwait
mov
lods
sti
das
xchg
xor
pop
inc
outsl
adc
aaa
jecxz
cld
lds
iret
sti
lods
lret
sub
cmp
adc
bound
in
lods
decl
orb
xor
sbb
insl
lcall
scas
jns
push
shlb
push
adc
mov
jbe
ret
loopne
lods
mov
and
ljmp
mov
dec
mov
add
das
mov
sub
pop
mov
inc
test
xchg
jle
and
cmpb
pusha
iret
fldl
repnz
enter
pop
mov
pop
dec
inc
mov
xchg
mov
testl
mov
ss
lock
lret
xchg
test
jnp
sbb
mov
xchg
out
cmp
ds
or
aam
pop
fsubrs
fisttpll
insb
and
dec
dec
pop
cmpsb
and
inc
push
subb
dec
mov
stos
movsb
sbb
sbb
loopne
int3
inc
shlb
icebp
into
ret
or
sti
jmp
or
xchg
or
mov
leave
cmp
mov
fwait
rcr
mov
jo
lea
ja
inc
mov
xor
sub
xor
repnz
das
push
jmp
pop
scas
xor
xchg
in
or
sbb
add
push
in
or
dec
je
xchg
xor
xor
in
in
sbb
dec
lea
clc
pop
mov
outsl
and
cmp
push
ss
fcmovnbe
outsl
cwtl
sbb
in
aad
xchg
mov
arpl
add
or
push
lds
int
cwtl
push
scas
xchg
mov
out
out
push
in
mov
pop
jle
rorl
test
pop
xor
das
out
hlt
iret
fwait
out
dec
and
mov
xchg
add
push
lea
outsl
cmp
sbb
insl
xor
cmp
or
test
addb
xor
xor
sub
xchg
push
sbb
cmpsl
or
jmp
test
mov
jae
adc
test
pop
cmp
lret
scas
es
test
inc
mov
rol
rcrb
mov
clc
push
dec
pop
add
aad
popf
mov
push
popf
ds
mov
js
mov
xor
popf
in
adc
repnz
mov
xor
cmp
sbb
lret
adc
repz
lds
dec
mov
mov
push
add
add
jae
xor
jb
aad
or
dec
adc
add
fisubrs
inc
leave
jg
je
and
or
stos
scas
pop
push
add
out
mov
popf
mov
cmp
dec
mov
mov
dec
sbb
das
mov
popa
cmp
std
lahf
sub
lods
push
fwait
dec
dec
pop
adc
or
mov
push
inc
je
pop
daa
inc
and
add
push
add
nop
pusha
push
pop
xchg
lds
int
sbb
xor
sbb
xor
bound
inc
inc
scas
xor
push
push
add
ljmp
xchg
fs
push
inc
lods
daa
and
sub
cld
mov
stos
imul
mov
int3
insl
mov
push
push
jbe
dec
shlb
aaa
sbb
ret
mov
cli
out
mov
cmp
add
movsb
cmpsl
sub
ss
xchg
decl
sbb
dec
addl
jecxz
jle
xchg
sbb
lock
sub
inc
test
mov
in
or
lds
mov
lea
jns
lea
ds
mov
ja
cmp
leave
ret
lret
add
sub
xchg
adc
hlt
nop
pop
or
ret
inc
movsl
xlat
and
push
lahf
sub
and
sbb
pop
lods
inc
ja
test
js
pop
sti
cmp
pushf
fwait
adcl
or
push
stos
mov
jmp
sub
out
js
stos
cmp
out
mov
mov
idivb
pop
xor
test
sub
xor
out
lret
cmpsb
fildl
test
popf
inc
lcall
mov
addr16
sub
pop
mov
push
pusha
lret
imul
sbb
pop
push
jg
addl
mov
pop
inc
xchg
lock
aam
push
xlat
inc
push
push
push
lcall
imul
outsl
mov
xchg
mov
xor
std
mov
enter
aad
jne
loop
xchg
out
loope
nop
jle
sub
out
sbb
xor
xchg
jmp
xchg
push
test
mov
dec
jge
fstps
and
in
mov
mov
fidivl
xor
sbb
fsubrs
lret
xchg
iret
dec
add
push
dec
cmp
ljmp
and
push
sub
adc
ds
mov
sbb
adc
lock
imul
pop
inc
inc
pop
cmp
mov
push
clc
mov
ss
pop
xchg
lret
mov
jnp
or
icebp
cwtl
jg
xchg
add
mov
lods
jg
xor
xchg
mov
cmp
addr16
roll
ja
jg
cmp
sbb
lods
aaa
add
cmc
fwait
repnz
addr16
popa
fcoms
sbb
js
std
xchg
pop
xchg
sbb
jg
popf
icebp
aad
cmp
mov
dec
sar
sub
incl
xchg
lret
subl
insb
xor
mov
bound
sbb
test
out
pusha
push
lds
push
fbld
loope
and
fidivs
adc
push
popa
add
aaa
stc
mov
cmp
imul
mov
mov
xor
pop
adc
push
add
inc
test
push
fisttpll
fildl
lahf
fmulp
inc
insb
pop
or
sbb
xor
enter
ret
xor
fiadds
lcall
jo
jmp
mov
adc
fildl
or
xor
ret
ret
rcr
es
lds
add
push
in
rcrl
in
sahf
xlat
pushf
mov
mov
inc
rcrl
sub
xlat
mov
adc
div
and
push
jg
arpl
fildll
add
lods
jl
and
mov
lods
fmuls
mov
mov
cmp
push
imul
dec
aad
lret
fwait
inc
push
ds
dec
dec
dec
xchg
pop
lods
inc
mov
loopne
dec
xor
push
pop
xor
aad
stos
xlat
pop
xchg
test
rcrb
sets
sub
xchg
aaa
adc
cmp
lret
les
xor
sub
rclb
mov
test
and
pop
shll
or
in
dec
gs
fwait
push
cmp
dec
adcl
mov
loopne
hlt
inc
xchg
pop
out
push
mov
addb
or
outsb
fistps
scas
sbb
pop
and
push
scas
push
enter
push
and
pop
loope
push
xor
sub
adcl
mov
lods
add
and
sub
mov
push
sbb
jle
add
add
aad
test
cmp
cld
fwait
stos
mov
adc
dec
or
mov
idivl
imul
xchg
add
lds
popf
pop
out
mov
mov
dec
or
call
insl
lahf
fistpl
add
push
pop
ficoms
dec
lahf
jae
ret
xor
in
jno
sti
jae
push
test
daa
mull
in
and
xchg
les
and
fdivs
insb
addr16
popa
add
mov
or
clc
or
pop
pop
jg
ss
dec
or
lock
cmp
jecxz
xlat
cld
adc
mov
jp
xor
out
jmp
int3
inc
fld
push
cmpsb
jne
dec
jle
enter
xor
add
rclb
xchg
iret
jbe
pushf
push
mov
dec
in
adc
pop
adc
jnp
ficomps
cmp
adc
xchg
jns
negb
roll
sub
sub
adc
cmpsb
ret
aad
decb
stc
add
addb
jno
rcrl
andl
mov
and
sbb
mov
fimull
sbb
cmpsb
loop
pop
jae
mov
rcrl
ss
xor
mov
enter
adc
cwtl
out
adc
push
sbbl
push
mov
sbb
push
lea
xor
inc
pop
cli
outsl
shl
inc
in
xchg
xchg
push
pop
jge
stc
inc
lret
mov
notl
mov
lahf
pop
jae
stos
in
movsb
pop
or
xchg
fs
lods
jmp
add
pop
cmp
mov
mov
cs
imul
scas
jge
lea
aas
outsl
jmp
repnz
xchg
dec
std
xchg
pop
stos
movsl
dec
adc
jae
sbb
arpl
in
xchg
testl
jns
aam
mov
mov
add
xchg
xor
stos
cmp
push
sbb
sub
jb
gs
subl
lods
sbb
push
pop
xor
jecxz
pop
mulb
lcall
inc
lods
in
push
lea
out
or
mov
je
pop
dec
clc
dec
xor
cs
mov
call
aas
pop
add
lods
adc
stc
inc
push
mov
fucomi
mov
or
les
icebp
xchg
dec
pop
fisubl
push
movsb
rcrl
repz
aas
mov
inc
xor
ja
dec
loop
bound
lods
into
dec
cld
push
jmp
notl
inc
add
aaa
jbe
mov
scas
stos
test
pop
and
xchg
and
loop
popf
lods
mov
adc
in
cli
loopne
or
dec
mov
add
pop
idiv
hlt
sub
ret
sbb
mov
scas
sbb
nop
mov
cmpsb
sub
sti
test
negl
xchg
or
and
sti
hlt
inc
or
enter
adc
xor
dec
pop
jns
fnstenv
mov
mov
dec
mov
outsl
out
mov
or
enter
insl
cmp
pop
fistpl
add
add
loopne
and
xchg
cltd
add
mov
ret
push
int
arpl
mov
fnsave
sbb
testl
mov
pushf
push
mov
inc
xor
cmc
repnz
ret
enter
xchg
pop
repz
andl
shrl
push
mov
in
and
and
aad
cli
adc
mov
or
inc
pop
aad
dec
data16
subl
sbb
xchg
push
stos
push
xchg
sarb
jne
fwait
xor
mov
jo
dec
movsb
aas
adc
jg
iret
lock
test
sub
sti
pushf
mov
and
in
in
and
lret
add
pop
mov
popa
cmpsb
sti
push
push
shll
push
add
mov
add
mov
cli
call
fscale
sbb
sbb
cmpsl
into
sbb
test
sarl
loope
fsubs
xor
imul
and
aam
and
pop
cmp
pop
add
and
pop
or
mov
adc
lahf
add
clc
add
mov
fs
pop
push
sbb
stc
je
jb
popf
mov
lahf
gs
or
mov
arpl
xchg
push
push
notl
push
cld
and
mov
fcoml
std
jmp
sbb
cmpsb
scas
outsl
outsb
push
mov
ret
cmp
out
movsb
fistpl
addr16
jmp
push
add
dec
aaa
push
or
nop
cltd
jb
jb
aas
cwtl
mov
das
or
mov
scas
push
mov
cli
test
into
sbb
loop
xchg
adc
sub
cmc
push
push
mov
aas
sbb
outsb
cmp
and
cmpsb
push
fbld
insl
xchg
dec
pop
mov
mov
sahf
xchg
outsb
testl
scas
idiv
int3
lret
mov
pushf
loop
cltd
mov
ds
aas
push
push
push
mov
mov
jbe
add
inc
push
dec
jno
jl
xor
shll
outsl
lods
ds
gs
jae
insb
inc
or
xchg
jbe
nop
test
add
clc
pop
cmp
adc
pop
rorl
xor
in
mov
mov
out
stc
or
ljmp
push
or
inc
loop
mov
mov
pop
adc
out
outsl
fimuls
in
push
mov
pop
dec
sarl
cmp
je
cmpsl
xchg
imul
add
cmpsl
lods
xlat
jb
ljmp
jle
xchg
sbb
add
mov
lods
sub
add
loopne
inc
or
repnz
aad
inc
adc
jae
cmp
cmpsb
es
andb
mov
mov
ds
xor
sbb
pop
xchg
outsl
jo
gs
pushf
ja
into
inc
add
push
xchg
test
shl
test
in
mov
insb
das
sbb
out
popf
arpl
mov
fnsave
xlat
stos
pop
call
and
les
xor
filds
and
pop
xchg
test
lret
mov
fists
lods
push
lret
push
push
cmp
mov
insl
mov
movsl
addr16
dec
iret
loop
push
nop
cltd
adc
hlt
mov
or
movsl
sbb
or
push
push
mov
idivl
mov
fldt
insb
sahf
jl
xchg
pop
fildll
loopne
gs
dec
lock
dec
dec
inc
nop
gs
xlat
iret
adc
xor
and
cmp
aaa
xchg
jmp
aad
out
pop
push
out
dec
sbb
jns
lods
cmpb
mov
push
ljmp
idivb
daa
movsl
adcb
cs
xor
add
xlat
aad
pop
outsl
mov
dec
adc
sbb
xlat
mov
jg
fistpll
and
ficompl
lea
clc
into
loope
add
inc
arpl
mov
movsb
add
lods
sahf
mov
mov
jnp
pop
xor
inc
hlt
lock
bound
sub
add
sub
out
cmp
push
out
push
xor
and
sbb
enter
adc
mov
push
pusha
cli
mov
mov
stc
rcrb
bound
xchg
ds
jbe
ret
dec
jg
sbb
add
mov
out
ds
cwtl
inc
pop
pushf
adc
and
int
inc
jle
adc
and
call
aad
ss
movhps
adc
push
cmovl
push
stc
pushf
xchg
out
in
adc
imul
mov
or
andl
cmc
jbe
jecxz
pop
sub
and
sbb
outsb
imul
adc
add
jae
pop
enter
or
aam
or
jmp
jae
inc
mov
das
cmc
ds
pop
cld
aad
and
rcrl
inc
xorb
clc
divb
shrl
lds
clc
daa
mov
in
inc
leave
mov
icebp
jmp
popa
ret
dec
cmc
test
adc
movsl
cmpsl
add
inc
cmc
jmp
clc
mov
fcoms
jmp
push
fldl
int3
mov
ret
sbb
addr16
lods
xchg
jmp
add
call
sub
xchg
sub
call
push
xchg
adc
test
dec
mov
fistpll
xor
mov
fldcw
xor
jge
insl
cmp
pop
mov
scas
icebp
pop
jecxz
popa
sbb
xor
jno
nop
loop
cmc
daa
pop
sub
int3
sub
ret
jle
dec
mov
inc
pusha
cmp
xlat
call
add
dec
jns
xchg
out
push
cmpsl
mov
lea
adc
push
xchg
adc
cmpsb
xor
inc
adc
inc
or
orl
xor
mov
lea
jmp
sbb
out
xstore-rng
cmpsl
inc
dec
push
inc
jnp
or
sub
inc
movsb
cmpsb
mov
mov
and
inc
sub
ficomps
sub
in
shll
subb
test
lods
jno
mov
xor
sub
jb
orb
push
xor
jns
or
jle
lea
mov
or
shlb
mov
mov
push
push
sbb
loope
cmpb
and
cmp
push
mov
xor
js
lahf
or
cmp
push
lock
imul
mov
sbb
scas
out
gs
push
subl
scas
push
mov
ds
xorb
push
adc
xor
inc
andb
dec
pop
sbb
in
jg
shl
and
test
pop
xchg
popa
adc
loop
leave
repnz
push
fs
mov
in
movb
fnstenv
pop
xor
xchg
adc
cld
jb
pop
pop
adc
test
adc
cmc
loop
incb
addr16
into
pop
sbb
mul
int3
cmp
pop
icebp
and
inc
out
cmp
inc
mov
mov
pop
nop
ja
or
mov
scas
push
pop
pop
rorb
cltd
enter
idivb
inc
add
add
mov
cmp
cli
outsl
cmp
mov
add
mov
dec
repnz
sub
inc
loope
lock
data16
sbb
repnz
adc
call
mov
loop
inc
add
filds
jp
lret
sbb
repnz
or
or
xchg
mov
jb
aam
xor
mov
scas
add
jl
pushf
cmpsb
ret
mov
ret
cmp
in
or
lods
sbb
in
addb
add
xchg
daa
in
out
dec
pop
dec
repnz
xchg
mov
xchg
mov
mov
in
repz
lahf
push
sub
bswap
sbb
dec
mov
add
inc
mov
push
insb
push
push
pop
jb
add
out
icebp
dec
mov
and
sbb
mov
popf
jae
adc
icebp
mov
das
push
mov
test
dec
sbb
adc
orb
xor
aad
aam
and
jb
rcrb
or
gs
pop
push
and
shlb
jae
mov
in
push
mov
push
inc
jge
fs
pop
insl
repnz
shll
xchg
push
pop
cmp
stc
cmp
pop
mov
push
mov
in
pop
sbb
movsl
xchg
sbb
mov
sarb
imul
and
testb
fisttpl
vpshaq
leave
stos
or
aas
test
inc
fbstp
push
pop
mov
sub
mov
insl
adc
pop
ret
add
sbb
faddl
movsl
mov
dec
out
push
imul
hlt
push
popa
nop
fimuls
leave
or
inc
mov
lods
pop
sbb
aam
adcl
inc
ja
add
lret
fs
jns
addr16
add
push
push
dec
sbb
out
fcoms
jmp
pop
dec
jnp
mov
pop
sbb
jno
sub
jo
push
std
imul
add
mov
pop
jb
mov
in
idiv
repnz
mov
imulb
push
xor
xor
sub
add
test
sub
enter
dec
mov
mov
sbb
movsl
cmp
in
push
mov
movsb
push
pop
aas
test
ljmp
stos
imul
jnp
dec
daa
sbb
mov
dec
insl
dec
mov
pushf
xor
xchg
xchg
in
pop
cli
aad
push
cmpl
sbb
mov
mov
push
rorl
fistpll
sar
jp
xchg
mov
mov
adc
lock
adc
cmp
or
cmpsl
ret
in
push
daa
popa
xchg
loope
test
and
out
inc
mov
push
aam
je
pop
xchg
xchg
idiv
fstpt
jg
lret
hlt
cmpl
inc
mov
xchg
into
aaa
mov
outsl
xchg
ljmp
fildl
sub
pop
cld
fwait
data16
sarl
dec
into
repnz
into
out
adc
lahf
into
add
jg
mov
mov
in
push
fsts
lcall
pop
fistpl
mov
lahf
cmp
imul
scas
lds
mov
into
arpl
xor
xchg
in
jb
into
sbb
test
cmp
adcl
jle
test
mov
lock
add
xor
jns
mov
and
and
std
pop
xchg
clc
xor
push
adc
mov
xchg
fsub
nop
std
xchg
pop
notl
shrl
roll
ficoms
or
inc
mov
add
or
add
jl,pt
scas
mov
or
push
ss
cwtl
mov
or
test
sbb
loop
ljmp
inc
jmp
sub
dec
dec
ret
adc
stos
sbb
push
adc
jne
loopne
popf
shl
inc
stos
xchg
movb
out
pop
addb
mov
stc
cmc
in
xor
mov
in
inc
xor
mov
mov
or
mov
mov
cmp
rolb
aas
inc
pop
aam
and
mov
dec
stos
cwtl
xchg
mov
push
outsl
dec
in
xchg
jg
aas
into
scas
add
mov
popf
notl
sub
cmpsl
mov
aas
inc
pop
cld
and
push
push
testb
and
mull
xlat
nop
pop
push
aas
bound
fnstcw
fnsave
push
push
add
jle
xor
xor
mov
les
mov
arpl
jb
xchg
repnz
inc
inc
shrb
sub
add
and
int3
fcmovne
add
aas
fsubs
decl
add
test
repz
pusha
cltd
adc
dec
cmp
pop
xchg
jns
pushf
imul
xchg
sbb
cmp
movsb
orb
cmp
inc
pop
out
enter
inc
mov
mov
xchg
and
push
lea
and
in
cmp
sti
insl
fwait
test
mov
add
sbb
jns
in
fdivrs
sub
push
dec
jnp
and
fcomp
adc
jg
add
fdivr
inc
mov
push
push
dec
cmpsl
pop
sahf
push
out
cltd
or
lahf
and
or
sub
xor
mov
outsl
inc
nop
mov
add
fsub
aam
mov
clc
adc
add
add
out
leave
shll
dec
pop
mov
lods
cmp
jnp
dec
xlat
push
mov
cmp
dec
pop
jo
dec
and
ret
and
jno
inc
and
pop
sbb
aaa
cmp
jmp
rcll
lahf
jecxz
xor
test
test
sub
push
in
pop
dec
loop
aas
stos
roll
add
scas
add
outsl
pop
in
sub
out
cmp
repnz
cmp
iret
int
jge
sbb
and
or
shlb
mov
pop
inc
adc
ja
push
jmp
push
xchg
add
cmpsl
clc
cltd
aad
dec
mov
sub
mov
aam
dec
pop
push
lret
loope
mov
push
imul
pop
movsl
fwait
mov
out
std
fs
flds
test
sti
repz
push
lcall
and
mov
es
pushf
pop
insb
pop
loope
shrl
mov
or
ss
mov
stos
ret
pushf
int
inc
sub
mov
adc
mov
pusha
dec
jecxz
xchg
add
inc
insb
pop
dec
push
push
push
add
inc
insl
negb
pop
lret
xchg
scas
les
cmpsw
shlb
pop
xchg
dec
in
adc
out
mov
popa
lock
mov
sbb
je
mov
out
cmp
in
ss
sbbl
xchg
loopne
dec
int3
pop
lret
xchg
dec
lods
pop
xor
mov
rol
sahf
push
push
jp
out
je
xor
pop
and
ljmp
popa
jnp
mov
jp
sbb
ret
sbb
popa
jge
inc
mov
lcall
psrlw
inc
in
mov
into
add
mov
mov
mov
push
leave
dec
push
sbb
les
xor
sbb
jg
fstps
ret
loope
cmp
lret
add
loope
arpl
je
dec
stos
aaa
pop
or
cmp
into
jg
cmpsl
mov
andl
stos
fisubrl
ror
inc
push
mov
xchg
cld
adc
je
sarl
ror
add
sbb
pop
fistps
xor
adc
stos
jmp
mov
or
test
and
dec
fidivrs
aas
in
fcoms
pop
insl
negl
imul
andl
dec
lods
add
nop
in
xor
push
movsb
test
cs
imul
sub
and
aad
and
or
mull
xor
mov
loopne
cmpsb
pop
jo
scas
mov
add
pusha
add
test
mov
jl
sbb
push
imul
sahf
cmp
push
mov
outsl
inc
ja
outsl
pop
xchg
aad
ror
cs
sbb
adc
adc
insb
rclb
xor
adc
mov
fisubrs
push
cld
gs
lcall
xor
stos
push
int3
int
pop
das
sub
shl
jmp
mov
rorb
and
fistpl
sti
jp
xchg
es
xchg
call
lods
shll
mov
pop
out
pop
jno
int
cmc
add
xchg
push
push
arpl
arpl
cmp
xor
pop
in
call
scas
insb
inc
sti
jg
pusha
pop
sti
ss
mov
add
cmc
push
pop
and
sbb
int
sub
lcall
fidivrl
inc
xchg
lret
cli
cmpl
gs
mov
in
mov
dec
xchg
xchg
add
int
lret
hlt
jae
rorb
mov
dec
pop
adc
push
xchg
cwtl
adc
inc
aaa
cmc
xor
dec
mov
popa
pop
mov
std
pusha
jg
and
inc
mov
aaa
icebp
jb
leave
push
mov
lock
rolb
daa
adc
loop
dec
sub
rcrb
dec
xorl
jb
inc
push
cli
fwait
cmp
std
lds
pop
fwait
add
in
pusha
leave
mov
mov
push
into
cmc
mov
jmp
fcomi
mov
aas
xor
pop
js
adc
imul
xchg
pop
fwait
stc
test
sti
lea
or
dec
push
jl
ret
lds
sbbl
cld
and
js
les
das
aad
fsubr
push
sbb
jno
repz
push
sub
mov
adc
dec
xor
mov
mov
push
pop
adc
fildl
sar
and
pusha
xchg
jnp
cwtl
push
mov
pop
pushf
dec
and
mov
pop
imul
push
jg
inc
and
add
lret
ss
mov
mov
sub
shlb
pop
jge
shl
addr16
mov
push
mov
xchg
mov
in
xor
jnp
push
cli
cld
add
clc
add
imul
cwtl
call
std
dec
pop
push
fdivl
cmp
movsb
pop
add
push
jge
sub
push
cmp
dec
inc
pop
add
ss
jb
pop
and
jo
popa
mov
fildl
and
lret
dec
adc
js
xor
std
xor
dec
inc
mov
xor
pop
sub
mov
lods
xor
jmp
pop
or
sub
daa
stos
or
and
insl
aad
inc
mov
sub
shrb
adc
pop
je
or
sbb
inc
paddw
mov
adc
in
dec
inc
jne
shlb
mov
push
add
cmc
mov
push
adc
nop
iret
xor
pop
outsb
cmpsb
jns
mov
jp
cmp
lods
mov
and
ljmp
nopl
cmp
push
popf
outsl
dec
fcoml
repz
mov
outsb
in
into
dec
icebp
lea
sub
lahf
stc
mov
fldenv
xor
xchg
dec
imul
ret
mov
jge
testl
dec
xchg
mov
scas
push
xchg
add
int
fisubl
inc
ljmp
mov
ficoml
pop
push
or
call
rolb
cli
push
adc
fmull
rorb
xor
rcrb
call
pop
insb
das
push
push
stos
adc
in
aad
add
mov
aaa
loopne
cmpb
adc
xchg
sub
or
daa
into
xor
idiv
gs
in
jl
sarb
jp
shll
and
sub
add
mov
ret
leave
xor
or
sub
js
lods
aas
push
push
aaa
popf
xor
lcall
loop
dec
bound
dec
loop
or
ljmp
mov
pop
xor
and
pop
sbb
fisubrs
in
outsb
and
xchg
jnp
loopne
shll
cmc
or
lock
scas
les
stc
daa
cmpb
and
cmpl
mov
loope
sub
cmc
fidivs
sub
pop
pop
inc
mov
jno
cmp
inc
aaa
repnz
push
imul
xor
inc
or
movsb
cmp
xchg
fnstcw
inc
inc
mov
mov
into
cltd
xchg
jo
sbb
movl
sub
fisubl
out
mov
rcrb
out
fidivl
push
jnp
test
mov
mov
cmp
mov
test
fcom
dec
add
ror
bound
inc
sbb
das
loop
pop
es
mov
xchg
pop
cmpsl
lods
out
cltd
sti
fsubp
aas
in
xchg
jmp
push
aaa
enter
xor
out
mov
mov
adc
mov
inc
cmpsb
push
aad
pop
mov
pop
mov
and
sbbl
mov
or
aam
insl
mov
jbe
ret
arpl
pop
inc
divl
push
mov
aas
out
dec
xor
cmpsb
fstpl
gs
lahf
or
pusha
ss
negl
add
addb
mov
cmp
hlt
pop
imul
data16
orb
pop
lds
cmp
push
jg
negb
jne
inc
and
xchg
push
outsl
add
cltd
xchg
adc
movsb
mov
push
adc
xor
test
pavgb
sub
cmpsl
add
push
loope
jb
adc
stc
outsb
push
push
pop
jl
addr16
inc
pop
mov
je
cmpsb
xor
mov
fld
sbb
sub
hlt
fdivl
cmpsl
inc
pop
dec
test
mov
xchg
push
ja
mov
bound
lahf
out
lea
or
pop
movsl
mov
aad
daa
shl
dec
dec
dec
fwait
dec
sahf
dec
std
std
stos
repnz
add
loopne
xchg
out
fstps
xchg
fwait
jnp
cmpsb
jns
icebp
pop
and
cmpsb
or
scas
cli
fsubrl
in
pop
out
cmp
adc
cmpsl
jo
jae
or
mov
xor
sub
jno
dec
test
mov
insb
fstpl
scas
jae
loope
cmp
pop
jmp
scas
test
add
negl
lods
addr16
test
and
mov
inc
inc
mov
test
sub
ljmp
jmp
icebp
daa
mov
mov
cmp
loopne
lea
add
call
jo
movsb
inc
in
dec
ret
lods
scas
dec
add
scas
jne
jp
pop
clc
cmp
push
mov
out
sbb
dec
fwait
stc
add
pusha
je
sbb
nop
jecxz
xchg
jno
movsb
sti
mov
xor
mov
jle
jecxz
inc
adc
lret
pop
cmp
jne
xchg
mov
in
xchg
lds
ljmp
adc
out
mov
or
subb
aam
add
mov
sbb
shrl
das
xor
mov
mov
fbstp
loopne
cld
sub
or
add
into
incb
fwait
shr
shrl
mov
xor
jmp
pushf
orb
cli
aaa
arpl
mov
pop
sub
push
mov
xor
iret
lods
jmp
xchg
in
sub
scas
aad
aam
adc
iret
inc
std
and
sbb
idivb
sub
les
repz
mov
rolb
xchg
fcmovu
nop
imul
and
out
sub
cmp
push
sbb
jne
xchg
in
jb
sub
or
mov
mov
dec
adc
mov
je
mov
cmp
aaa
in
sbb
xacquire
inc
ret
inc
frstor
dec
xchg
inc
negl
lahf
add
push
adc
mov
aad
fidivs
rcll
les
dec
jl
subb
in
enter
cmpsb
cmp
add
idivb
pusha
lret
aaa
push
je
mov
inc
pusha
mov
idivb
cmp
mov
or
clc
pushf
pop
add
out
imul
icebp
or
fsts
xchg
xchg
rcrl
inc
inc
aaa
out
les
gs
dec
out
xlat
xchg
nop
xchg
push
and
cwtl
jmp
fadds
leave
xor
push
gs
dec
cmp
mov
fchs
jb
pop
es
les
and
push
jb
or
shlb
and
push
mov
cmp
imul
leave
mov
inc
mov
loope
enter
jle,pt
sahf
mov
jo
push
mov
cmpb
sbb
gs
sbbb
jnp
mov
call
aam
fwait
call
adc
popf
mov
aaa
cltd
jae
sub
jns
scas
pop
lock
fld
sub
xor
js
fdivrl
add
sub
out
mov
roll
flds
lock
imul
hlt
loopne
push
push
cli
sbb
jns
xchg
inc
lret
add
mov
sahf
sub
not
lahf
pop
jo
fwait
push
adc
fidivl
cmp
jnp
sarb
mov
add
push
add
jnp
shlb
neg
scas
push
xchg
sbb
setb
mov
les
aam
mov
sbb
pop
sbb
scas
fidivl
clc
push
pop
xchg
movsl
pop
cmp
pop
pop
clc
xorl
or
mov
and
lds
es
pop
dec
sbb
insb
mov
sub
sbb
enter
mov
in
pop
mov
mov
ficoml
push
leave
xchg
and
rcrb
pop
add
adc
mov
int
pusha
inc
movsl
dec
mov
sbb
or
stc
adc
imul
pop
stos
sub
cltd
fmul
sbb
and
stc
pop
leave
hlt
cmp
sti
in
jbe
stos
cmp
int3
shrl
enter
dec
adc
das
int
pop
ss
insl
inc
sub
or
sub
stc
sbb
inc
adc
and
cmp
sub
jb
pop
into
or
fisttpll
pop
repz
movsb
fstps
sbb
or
xor
jecxz
adc
sbb
jmp
pusha
adcl
repnz
dec
and
xor
xchg
lret
fsubs
es
fidivrs
pop
subb
adc
out
xchg
cmp
inc
lret
lds
fs
or
push
jbe
add
adc
push
dec
sbb
repz
cld
stos
xchg
shlb
fists
adc
test
mov
shll
mov
xor
pusha
ljmp
add
jb
push
mov
sub
xchg
fiaddl
pop
dec
out
cmpsl
outsl
fdiv
xchg
popa
jl
pop
lock
push
inc
fnsave
lods
cmpsl
mov
or
clc
call
in
mov
int
sbb
gs
sbb
sub
push
lds
imul
jmp
in
inc
pop
cld
or
stc
and
repz
stos
repz
push
test
jp
cmp
addr16
js
test
cmc
pop
ret
mov
mov
sti
mov
arpl
add
xchg
adcb
int
scas
int3
cltd
fnstsw
lret
xchg
xchg
lods
add
outsl
dec
xor
mov
mov
dec
pop
test
pop
sub
mov
stos
das
std
sar
cli
daa
push
mov
push
arpl
xor
jo
xor
jne
mov
jno
pop
lahf
push
fimull
push
std
push
xor
dec
cmp
shlb
iret
loop
or
dec
adc
outsb
dec
call
add
int3
ret
sar
cltd
inc
loope
mov
inc
sti
test
xchg
pop
imul
xchg
push
xchg
jecxz
imul
add
mov
mov
lea
push
push
mov
lea
or
enter
sbb
sub
sub
sbb
sub
mov
fucom
jge
fsubl
or
lock
jg
pop
lahf
or
outsl
mov
fnsave
jnp
lods
pop
roll
mov
pop
push
pop
dec
xchg
mov
das
pushl
andb
fwait
das
dec
jbe
xchg
aaa
mov
and
xchg
pop
push
jo
pop
jecxz
dec
cmp
clc
adc
pop
and
fisubrs
idivb
add
stc
adc
xor
adc
stos
cltd
sub
mov
mov
and
mov
inc
xchg
popf
subb
mov
push
orb
inc
das
jb
lret
ss
jnp
je
cltd
gs
in
movsb
sub
leave
je
sub
cmc
mov
dec
iret
or
adcb
mov
std
scas
push
xchg
push
sbb
fmuls
je
stos
test
push
adc
ret
jns
sahf
ljmp
push
pop
int3
dec
inc
out
push
sahf
xchg
lahf
and
lahf
xor
sbb
mov
inc
push
fiadds
xorb
cmp
xor
lahf
inc
adc
jg
inc
sub
cmp
jmp
jmp
dec
jnp
in
rorb
cmp
fisubrl
cmp
bound
repz
fs
mov
sub
pusha
push
push
cmpsl
incl
clc
mov
lock
popl
mov
jno
cmpsl
add
mov
fdivl
cltd
repz
xchg
lods
mov
outsb
mov
imul
mov
test
xorl
ffree
lahf
add
jp
pop
sar
xchg
mov
mov
lock
in
std
mov
push
cmp
enter
cld
scas
adc
dec
cmp
sub
pop
push
fs
inc
or
pop
repz
inc
imul
fimuls
lods
and
pop
xor
shlb
gs
dec
iret
and
push
pushf
movsl
addr16
push
fcompl
jle
mov
es
shlb
cmp
mov
ficompl
das
inc
icebp
imul
loopne
jg
jae
aaa
xor
lods
jge
shll
add
xchg
pop
ljmp
daa
les
jns
aam
pcmpgtw
xchg
ret
test
inc
outsl
mov
ror
push
stos
push
xor
xchg
jge
movsb
shll
in
stos
pop
fs
leave
cmc
sbb
pop
gs
nop
iret
xchg
dec
jmp
sbb
inc
pop
ret
scas
push
pop
cmc
stos
and
jbe
fistps
adc
pop
sub
and
loope
fildl
lahf
inc
in
test
scas
jle
sub
mov
ret
jmp
mov
rcll
mov
jae
xor
push
inc
xor
pop
fstpt
jg
lea
push
dec
iret
cwtl
cmp
sub
cld
fidivs
xorl
lea
mov
fists
mov
not
cmpsl
xchg
stos
lods
mov
pop
push
add
cmp
lcall
dec
leave
and
mov
sahf
jp
cld
sarl
push
adc
dec
fwait
loop
ljmp
pusha
sub
movsl
xlat
xlat
sbbl
jg
inc
adc
pop
psubsw
push
nop
stos
out
mov
loopne
sbb
xor
and
dec
mov
ficompl
jge
loop
inc
inc
iret
das
loopne
jmp
cmpsl
lods
stos
sahf
into
jo
jb
outsl
push
cltd
int
fldenv
fstpt
lret
not
fs
inc
outsl
ljmp
inc
mov
lods
mov
ret
lock
outsl
dec
jb
sbb
push
cmpl
inc
add
sbb
xchg
js
push
mov
lret
or
dec
cmp
and
xor
divb
in
inc
sbb
push
insl
jns
test
jae,pn
int
imul
pop
pop
adc
cwtl
pop
push
rorl
mov
adc
lret
or
and
bound
pop
jle
bound
inc
cmp
sub
stos
mov
aad
std
push
pop
cmp
jnp
sub
and
into
jae
lds
cmp
je
dec
jae
sub
fisttpll
popf
outsl
enter
pop
mov
icebp
out
xchg
push
mov
adc
mov
mov
mov
lds
iret
ret
aaa
inc
lock
call
adc
mov
test
push
jnp
lods
imul
mov
mov
loope
shr
push
xchg
inc
shll
mov
inc
dec
cmp
mov
fdivs
jle
cmpl
lret
pop
xor
popa
stc
sub
js
shrl
mov
inc
cs
arpl
or
jne
cmc
push
fisubrs
test
xor
sbb
mull
lods
enter
jg
xchg
dec
mov
inc
out
cwtl
push
and
out
rcll
or
imul
mov
test
sub
xchg
imul
dec
add
push
leave
imul
inc
jae
imul
lret
mov
push
xor
arpl
or
add
dec
ret
incb
insb
fsubs
fists
cmpsb
mov
and
push
popa
dec
ret
js
lcall
inc
mov
dec
mov
xlat
push
mov
outsl
mov
sbb
ds
shlb
fstl
cwtl
xchg
push
pop
cmp
sub
jne
and
js
push
cmpsl
or
into
fidivrl
jnp
mov
sub
sub
add
push
iret
or
rorb
imul
rclb
pop
sahf
cmp
inc
xor
add
lock
fdivrl
imul
jno
test
mov
clc
lcall
mov
push
xchg
roll
mov
orl
out
movsl
dec
inc
inc
sub
mov
fistl
js
xor
repz
arpl
scas
out
les
cmp
enter
test
sub
inc
sbb
leave
xchg
cmp
pop
mov
outsb
jmp
lea
mov
pop
into
adc
shlb
push
jl
cmpsl
sbb
lahf
jne
mov
push
cwtl
dec
add
mov
xchg
and
mov
pop
push
jo
xor
adc
fisttpl
dec
dec
adc
inc
out
sbb
and
adc
lods
inc
sub
mov
test
popa
outsb
dec
stc
xlat
inc
out
mov
cmp
dec
jo
jne
lds
sub
sub
adc
xor
mov
lds
hlt
pop
mov
jmp
xchg
outsb
adc
adc
sub
addl
lahf
jmp
push
jnp
jg
ljmp
pop
jnp
lock
lods
cwtl
in
mov
out
fisubs
and
repnz
pop
fs
mov
xchg
test
aam
push
lahf
sti
pop
addr16
mov
or
ja
fdivs
es
xlat
ficomps
out
inc
or
das
inc
pop
int3
in
cmpsl
lock
rorl
rorl
cmp
imul
sub
mov
or
jbe
iret
movsl
cmp
leave
aad
div
mov
mov
stc
aad
dec
cld
adc
imul
push
test
js
sub
xchg
mov
aam
push
into
or
outsl
jp
pop
pop
faddl
sub
shlb
ficoms
js
sub
fldcw
or
lret
jecxz
mov
popa
insl
add
mov
enter
ds
xorl
mov
xor
div
adc
sub
jmp
test
hlt
mov
adc
mov
dec
dec
mov
adc
aaa
mov
mov
add
sub
xchg
mov
or
dec
data16
jp
dec
fadd
push
xor
sbb
subl
aad
int3
cmp
sbb
in
push
lcall
mov
or
xchg
xor
jns
pop
call
mov
out
mov
fwait
sub
or
mov
in
fsub
lds
aam
cs
lret
mov
lret
push
xchg
and
cmc
push
pop
mov
enter
repz
or
ja
xor
scas
adc
cmpb
xchg
sarl
test
xor
cs
mov
and
leave
pop
pushf
mov
repz
and
push
mul
and
int3
lea
xchg
addb
lds
mov
in
adc
imull
and
mov
aam
sti
pop
jae
lods
aam
push
pusha
jg
xchg
xchg
arpl
mov
dec
sti
add
inc
in
cmp
inc
xchg
sbb
dec
sbb
jns
push
stos
xchg
push
fmull
xor
pop
jbe
movsl
sbb
pop
dec
test
shll
ret
iret
push
movsl
aas
jnp
jnp
std
jmp
mov
lcall
outsb
sbb
mov
xor
or
pop
mov
les
mov
movb
mov
jle
dec
sub
lret
out
push
aam
in
push
sbb
dec
mov
pop
aas
cld
jmp
lds
push
leave
lret
sub
jnp
sbb
icebp
aad
pop
sbb
pop
in
fdivrl
cmp
addb
out
and
pushf
arpl
sub
bound
enter
push
mov
and
xchg
adc
clc
subb
in
lea
push
scas
inc
incl
or
push
fs
mov
add
cmp
test
icebp
je
or
or
adc
out
pop
std
adc
out
test
cmpsb
add
push
mov
xchg
and
kmovd
jmp
push
push
sub
fwait
jecxz
push
lea
hlt
jo
cmp
pop
jb
inc
jle
test
and
fcoml
lcall
jmp
les
call
shlb
mov
pop
imul
iret
movsb
dec
mov
js
sub
xchg
jg
xchg
mov
repz
mov
icebp
insl
mov
fidivrl
mov
dec
rclb
mov
mov
pop
cmp
jae
inc
scas
imul
inc
jnp
sbb
sub
insl
mov
cmp
xor
mov
rcrl
loope
pushf
mov
or
mov
mov
xchg
push
idivb
scas
xchg
test
int
mov
push
sub
or
jmp
push
pushf
and
jecxz
pop
dec
and
sub
jg
aad
xchg
inc
push
mov
push
jo
dec
mov
jecxz
loope
je
insl
arpl
lahf
hlt
pop
or
push
test
test
add
cmp
in
daa
jl
lock
pop
imul
jbe
ds
mov
push
mov
fnstcw
inc
ja
pop
push
dec
popa
jne
pusha
sub
ds
sub
call
xor
scas
cmpb
sbb
jecxz
int3
sub
xchg
cmp
cs
mov
push
cli
sti
and
mov
mov
pcmpeqd
mov
inc
adc
fsts
int
outsl
movsb
data16
pusha
je
cld
dec
nop
sbb
ja
ret
or
stos
inc
cmc
roll
loopne
ficoml
sbb
sbb
jecxz
pop
outsl
ret
jnp
xchg
in
or
sub
lods
sub
cmpsl
and
inc
inc
js
xor
mov
into
inc
xchg
add
addr16
shrl
jg
hlt
push
lcall
inc
stc
leave
or
fs
inc
mov
fs
adc
das
out
push
aas
pop
dec
lret
shll
das
pop
xchg
mov
out
mov
fisubl
fdivs
out
or
stc
push
sahf
pushf
fucomip
jns
and
mov
add
pushf
out
xchg
iret
cmpsb
scas
push
in
sbb
or
decb
mov
outsb
pop
dec
ja
shll
mov
rcr
mov
sbb
and
aad
leave
mov
xor
mov
mov
call
lods
cmp
sub
loopne
jno
jo
add
std
dec
out
mov
mov
xor
aam
or
shlb
ret
mov
sub
or
jl
std
sub
jmp
outsl
negl
pusha
ret
outsb
and
ljmp
fsubrs
stos
xchg
cwtl
xor
and
decb
mov
orb
dec
xchg
dec
in
or
je
and
inc
cmp
cmp
cmp
adc
fstl
inc
push
lret
test
je
repz
push
xor
mov
push
pop
add
adc
shrb
push
lcall
divb
mov
mov
xchg
xchg
stos
shrb
out
ficomps
fcoms
cs
or
inc
mov
adc
ja
mov
popa
sbb
jo
cmpsl
test
xor
adc
dec
sbb
orb
leave
push
enter
inc
out
xchg
mov
jae
repz
or
stos
hlt
je
adc
lods
les
or
mov
fmul
loopne
xchg
add
stc
out
inc
mov
imul
fcmovu
mov
cmp
pop
inc
rcr
mov
int3
imul
push
sub
outsl
jle
inc
loop
and
or
cmp
test
aad
movsb
xor
jl
cmp
movsl
testl
xlat
cli
sub
sbb
bound
sub
sbb
mov
push
ja
push
adc
lds
sbb
decl
pop
mov
dec
iret
insb
daa
or
repnz
adc
xor
adc
ljmp
mov
stos
cmp
nop
std
lahf
int3
pop
lret
sbb
cmp
cltd
adc
mul
inc
popa
outsl
push
test
xor
loop
or
inc
outsb
push
je
test
filds
cmp
mov
xchg
dec
pop
mov
xor
fwait
xor
shlb
xchg
inc
cwtl
sub
ret
sbb
adc
shll
mov
sahf
xor
jecxz
cmp
push
mov
add
in
mov
icebp
daa
or
sbb
shll
or
stos
push
loopne
cmpb
mov
ja
loop
push
xchg
js
jmp
pop
pop
popa
pop
mov
cmc
and
xchg
stc
mov
loope
gs
inc
movsb
mov
ljmp
push
push
leave
sahf
sub
std
ja
les
push
leave
pop
xor
rcr
cmp
fdivr
push
xchg
invlpg
cmp
mov
jae
nop
lret
push
daa
mov
mov
mov
out
leave
insb
fstps
mov
pusha
js
push
or
iret
mov
leave
ret
push
loopne
xchg
daa
jmp
popa
and
inc
jl
pop
or
xor
adc
clc
fstl
add
ret
imul
fildl
adc
and
ret
jb
dec
pushf
arpl
sub
pop
or
ss
sbb
cmpsb
xchg
xchg
mov
xchg
cmc
and
push
push
in
fwait
dec
sarb
dec
dec
pop
outsl
inc
and
push
mov
mov
inc
and
mov
rcrb
or
ljmp
and
dec
and
lcall
inc
or
sub
inc
outsl
outsb
dec
xchg
jle
inc
fdivl
mov
js
int3
loopne
cmp
mov
add
popa
pop
add
dec
push
sbb
cmp
test
je
xor
jmp
pop
and
push
ret
rorb
xor
fsubs
adc
cltd
lcall
or
xchg
xchg
inc
cmpsb
sub
rolb
idivl
and
sbb
mov
or
stos
rol
mov
outsl
pop
xchg
sahf
push
xchg
ja
fsubrl
arpl
mov
das
repz
mov
fs
fbstp
sbb
rclb
in
mov
repnz
add
pop
push
xor
mov
push
mov
xchg
inc
push
add
arpl
add
imul
cli
sub
dec
xor
xchg
pop
imul
stos
shlb
shrl
jns
sbb
sbb
mov
inc
mov
lret
mov
push
or
mov
lods
xchg
stos
add
jle,pt
add
cmpsb
inc
push
mov
adc
stos
hlt
pop
mov
fisttpl
pusha
jns
push
cltd
sbb
cmc
mov
pop
pop
rolb
dec
xchg
mov
jno
out
xor
dec
rcll
int3
pop
sbb
xchg
out
mov
outsb
jb
ja
pushf
xchg
lods
mov
loope
xchg
push
mov
out
mov
sub
rclb
pop
aas
std
in
popf
cmp
xchg
dec
je
popf
xor
sbb
ds
dec
pop
pop
or
cli
fistpll
sub
push
pop
iret
aam
xchg
pop
out
xchg
mov
insb
xchg
out
push
mov
or
fisubs
add
xchg
sahf
jns
adc
dec
aam
mov
addr16
and
sahf
gs
ficompl
scas
insl
imul
or
inc
rcl
popf
mov
out
ljmp
xchg
insb
cmp
into
cmp
push
stc
cmp
roll
cmp
dec
mov
dec
mov
stos
adc
scas
loop
sub
add
leave
lcall
xchg
lds
push
in
sbb
call
lret
pop
es
negb
in
mov
into
into
xchg
lahf
sub
iret
adc
insl
bound
pop
outsl
xchg
jmp
inc
sbb
sub
add
and
add
sahf
cmp
test
jae
ds
inc
sub
pusha
xchg
lahf
jne
iret
stos
jno
scas
and
xor
jmp
in
xchg
sbb
sbbb
adc
scas
mov
notrack
mov
sbb
stc
fists
lret
iret
aaa
cmp
pop
cmpb
loopne
adc
pop
jmp
adc
sub
lret
daa
dec
xor
inc
lods
sub
cmp
cltd
xchg
pushf
pop
mov
int
insl
lahf
adc
shll
add
push
inc
xchg
mov
pop
lods
std
mov
mov
gs
ss
dec
xchg
ljmp
inc
jne
sbb
aas
das
pop
adc
jg
fnstcw
mov
bnd
or
iret
mov
cli
xor
nop
pop
mov
mov
ror
sti
aaa
push
pop
sbb
shll
rcll
sub
outsb
mov
popa
and
call
out
and
xor
stc
lods
fcoms
inc
jl
popa
and
sub
jae
cli
adc
inc
incb
mov
aam
std
je
aad
loopne
jl
int
test
push
enter
sub
lods
and
xor
xchg
in
push
mov
cli
mov
ret
icebp
sbb
fistl
adc
add
aas
dec
out
or
push
fisubrs
sahf
stc
daa
daa
push
inc
imul
inc
mov
inc
aaa
cmp
loope
lods
mov
lcall
pusha
sahf
cmc
aaa
add
loope
sub
or
fbstp
ja
sub
outsl
add
outsl
add
stc
xor
pop
icebp
push
scas
loope
cmp
pop
les
cltd
xor
inc
test
push
aas
mov
jge
jg
xlat
inc
mov
push
and
mov
les
push
xor
xor
es
adc
xchg
in
push
cli
xchg
pushf
cwtl
inc
xlat
mov
out
pop
ret
into
xor
inc
mov
lock
into
mov
push
xor
and
icebp
aam
dec
pushf
mov
outsb
pop
push
and
push
push
loopne
push
scas
or
dec
dec
sbb
push
insb
or
filds
sti
popa
inc
mov
add
movsl
daa
imul
xlat
call
mov
ret
sub
mov
pop
push
xchg
mov
mov
inc
movsb
pop
add
icebp
dec
lcall
cwtl
stc
and
mov
add
daa
inc
inc
add
mov
pop
imul
mov
xor
xchg
insl
lret
aad
sbb
arpl
daa
pop
push
cmp
movb
adcb
andb
ss
jmp
imul
xchg
sub
mov
outsl
es
cmpl
mov
lea
dec
jmp
rcrb
pop
cld
adc
add
lcall
or
xchg
jmp
cmp
cli
xor
jmp
imul
fadds
shlb
jb
fwait
aam
mov
cmc
outsb
insb
xchg
and
push
xor
ret
outsb
mov
xor
enter
xchg
mov
lods
pop
and
or
fxch
push
or
push
cmp
pop
mov
pusha
gs
xchg
mov
mov
fmull
mov
pop
mov
fstps
popa
adc
jl
jp
mov
push
rolb
outsb
fucomi
pop
ds
sar
mov
mov
xchg
in
mov
cmp
add
adc
stos
and
cmc
mov
fistps
rcl
inc
push
mov
push
ja
data16
test
lds
adc
fwait
sar
call
and
fisttpll
pop
pop
sub
fdivrl
aad
inc
xchg
fidivl
mov
rol
cmp
in
inc
lret
lods
fimull
mov
movsb
xchg
jecxz
pop
iret
sti
outsl
inc
add
xchg
xor
inc
xor
enter
ss
or
mov
jbe
jge
inc
and
popa
dec
push
fisttps
mov
pop
clc
lds
and
ret
cltd
sub
add
repz
jno
push
jmp
dec
sbb
ja
xchg
lea
mov
loope
mov
out
or
fsubrs
repnz
into
sub
add
sub
jbe
xor
dec
sti
mov
push
int3
fsubs
sbb
js
leave
out
pop
jne
inc
test
ljmp
mov
or
sub
sbb
sbb
inc
xchg
cmp
lahf
movsl
xchg
popf
mov
xor
mov
orl
call
pop
jb
pop
adc
loop
std
inc
ss
mov
fildl
in
lcall
xor
adc
and
sbb
in
addb
sub
mov
xchg
xor
inc
xor
fmul
loopne
fidivrl
xor
add
dec
mov
andb
lds
shll
adc
cmp
push
sub
lods
xchg
and
add
subl
insb
push
add
adc
std
leave
or
js
pop
xor
pushf
xor
fstpl
mov
lahf
push
shr
ret
shlb
sub
lds
inc
add
jo
fistl
mov
dec
push
jle
or
nop
xlat
scas
adc
and
test
enter
jo
sub
mov
out
popf
jbe
pop
addr16
mov
cmp
jmp
mov
fsub
mov
add
dec
adc
in
cmp
cmpsb
jg
push
test
adc
push
icebp
pop
adc
mov
sti
push
mov
xorb
xchg
pop
sub
mov
cmc
cmp
insl
ds
outsb
xor
outsl
imul
mov
cmp
sub
test
aam
popf
cmp
out
add
stos
cmp
js
adc
fscale
jl
cmp
popf
in
fdivrs
out
jmp
xchg
dec
int
scas
sbb
adc
inc
xchg
mov
pusha
loop
add
mov
sahf
xor
ja
clc
les
scas
movsb
xor
popf
iret
repnz
adc
testl
cmp
lret
notl
stos
lds
sub
loope
mov
mov
xor
pusha
rclb
mov
sub
or
outsl
fs
jne
das
jae
mov
adc
cs
sarb
xlat
pop
sbb
ljmp
jg
add
and
fstp
adc
mov
push
mov
ret
cltd
dec
stc
orl
jl
and
es
shll
push
test
jb
scas
inc
and
les
xor
push
push
push
popa
pusha
loopne
add
cmp
aaa
cmp
pop
adc
popf
and
lcall
sti
enter
xor
and
or
hlt
outsb
dec
lret
mov
daa
ja
jb
icebp
negb
cmp
imul
mov
or
sub
mov
sbb
push
adc
xchg
jno
addl
and
inc
push
nop
mov
cmpsb
mov
nop
loop
les
cmp
lods
ja
dec
repnz
xchg
cs
cmp
xchg
jne
mov
mov
into
mov
cmpsl
int3
popa
lahf
mov
push
test
js
sbb
std
cld
mov
nop
imul
ficomps
mov
sbb
sub
out
sub
outsl
lahf
cmpsb
xor
cli
fwait
inc
hlt
outsl
jmp
dec
lods
cld
cli
dec
cmpsb
push
pusha
mov
insb
lcall
mov
into
jb
lods
dec
inc
in
int
pop
btc
fistps
dec
repnz
xchg
cld
pop
jb
mov
push
out
mov
push
mov
jnp
inc
or
outsl
repz
lods
dec
push
push
pop
scas
cmp
sub
imul
loop
sbb
or
imul
add
aad
sbb
dec
pop
pusha
or
sbb
loope
jns
cmp
push
dec
and
out
or
in
xchg
fwait
addr16
jbe
push
cmp
mov
dec
mov
stos
dec
mov
test
int3
dec
stos
sar
out
xchg
scas
adc
push
adc
jb
or
sub
or
js
mov
test
cmpsl
inc
sbb
cmp
lcall
mov
leave
test
cmc
shrb
rcrl
loopne
es
test
test
pusha
leave
cld
lahf
lock
dec
movsl
test
fcomps
adc
jecxz
push
sbb
mov
inc
mov
loopne
cmpsl
jne
mov
sub
push
mov
out
mov
int3
and
and
mov
lcall
inc
adc
xchg
insb
outsl
mov
push
std
and
cmpsl
insb
cmp
jle
sub
add
push
xchg
decl
cmp
shlb
xor
jns
jns
mov
and
jg
pop
int3
std
out
cli
xor
inc
sbb
push
leave
ret
xchg
hlt
aas
inc
std
xchg
mov
fidivl
or
into
ret
loope
bound
andb
stos
popa
adc
daa
mov
inc
fdivs
xchg
scas
stos
adc
lock
cmp
das
int3
sbb
xchg
cmc
out
aam
push
movsl
cmpsl
or
mov
pop
inc
int3
push
stc
in
dec
push
push
xchg
lock
sub
jno
cmp
test
xchg
int
mov
jle
jmp
test
and
test
dec
stc
sub
gs
in
cmp
cmc
jle
fs
test
stc
add
sbbb
shrb
clc
stos
movsl
scas
cmp
and
xor
mov
repz
mov
neg
cltd
jl
mov
push
mov
sti
ret
jbe
pop
cmp
pop
add
rorl
dec
in
js
outsb
xor
push
mov
cmp
sbb
je
cmp
jg
in
jbe
xor
data16
xchg
mov
ljmp
test
dec
push
ss
cmp
daa
and
test
out
ror
jo
je
loop
and
adc
push
cmpsl
cmpsl
jmp
ret
pop
jbe
loopne
xchg
iret
xchg
jg
je
incl
xlat
sub
test
jae,pn
inc
es
bound
sbb
pop
xlat
push
adc
push
hlt
push
callw
xor
in
sbb
shrl
dec
mov
add
fs
mov
jae
cmpsb
or
sbb
js
push
and
add
repnz
adc
xchg
jnp,pt
ja
call
push
mov
xchg
js
imull
cmpsb
dec
ret
and
cmpsb
int
or
adc
movsb
std
jge
or
push
dec
insb
scas
xchg
in
jge,pn
jg
hlt
loop
pusha
cmpl
push
sub
mov
pop
cli
adc
lock
pop
mov
mov
lods
push
push
cmp
adc
push
inc
push
movsl
pop
jb
ja
jecxz
jg
mov
sbb
fs
xchg
cmpsb
jbe
mov
add
in
std
ror
cmp
insl
adc
in
popl
mov
inc
and
outsb
dec
pop
rorl
mov
or
mov
call
repz
jle
cmpsb
add
jecxz
les
mov
cwtl
fiadds
xchg
push
cld
outsb
pop
loopne
repnz
xlat
lret
mov
shll
iret
cmp
dec
pop
pushf
mov
sub
sub
into
mov
les
adc
les
xor
data16
dec
mov
mov
repnz
add
jecxz
outsl
pushf
adc
ds
ja
mov
lea
in
xchg
mov
push
mov
jnp
xor
dec
data16
cwtl
inc
jle
mov
loop
in
mov
daa
add
cmp
fucomip
lea
sub
push
inc
js
mov
daa
mov
subb
outsl
imul
dec
arpl
sub
imul
jecxz
push
test
adc
rolb
adc
sub
xor
sub
gs
cmp
push
push
xchg
sub
push
push
arpl
mov
mov
xchg
dec
testb
imul
and
rorl
sub
jno
add
and
leave
xchg
lds
mov
test
mov
xchg
mov
sbb
pushf
repz
nop
push
rcll
movsb
pop
decl
jecxz
stc
imul
icebp
call
imul
mov
mov
loopne
xchg
int3
out
pop
cmp
mov
jo
nop
lahf
lcall
in
pop
push
jbe
pop
ds
lahf
into
push
dec
stc
in
fwait
pop
xor
std
pushf
cs
cltd
leave
popa
xlat
mov
fiaddl
test
insl
dec
imul
pop
scas
sbb
movsb
jmp
out
adc
imul
dec
adc
cmp
push
sbb
xchg
and
shll
les
cmp
and
sahf
repz
pop
add
fisttps
sahf
lret
pop
mov
lea
xor
push
lds
or
jecxz
push
scas
into
dec
add
sub
jg
add
xchg
add
stos
inc
fistps
ds
cs
ja
dec
push
pushf
je
dec
inc
cmp
shrb
inc
scas
fldl
mov
jns
jp
fnstenv
xchg
inc
push
test
lods
inc
inc
mov
sbbb
mov
out
int
and
clc
push
jmp
jmp
stos
mov
mov
inc
mov
xorl
std
pop
cmpsb
cmp
sbb
in
das
inc
pop
int
je
mov
addr16
sub
add
fcmovnb
lcall
and
adc
rolb
in
inc
push
mov
xor
ds
pop
dec
or
sbb
jb
jmp
lret
mov
push
cs
adc
loop
andl
sub
andb
mov
inc
mul
rolb
aam
fstpl
loope
add
leave
sbb
cmpsb
and
sbb
ret
mov
sbb
or
push
data16
daa
icebp
dec
pop
jno
pop
ds
pop
sbb
cli
fdivs
pshufw
pop
cmp
cmpsb
lods
mov
lods
or
push
jg
je
daa
outsl
sub
or
xchg
mov
stos
jg
lds
mov
cmpsb
cltd
movsb
pop
sahf
es
mov
rol
mov
cmp
pop
ss
cmp
jecxz
add
addl
pop
push
mov
loope
inc
bound
sbb
fsubr
sbb
scas
mov
mov
pusha
call
push
lcall
mov
in
dec
mov
mov
add
pop
es
sub
mov
jg
test
or
xor
push
jmp
xor
scas
int
adc
out
fsubr
mov
push
mov
jnp
cli
adc
mov
push
ficomps
sahf
sbb
movsl
mov
mov
out
or
pusha
ficompl
sub
mov
roll
rclb
mov
jp
and
loopne
dec
je
adc
xor
inc
pop
jne
test
test
push
aas
cmp
inc
iret
mov
into
or
mov
lea
in
test
pop
jae
jbe
jno
shr
cmp
cpuid
add
rclb
push
pop
stos
aam
adc
test
ret
sub
jecxz
bound
lea
gs
xchg
lea
movb
pop
addr16
pop
xlat
xchg
xor
adc
rorl
push
ds
push
and
stc
fnstenv
daa
fs
mov
lcall
test
cwtl
cwtl
pop
or
aad
push
inc
mov
cmpsb
pop
dec
dec
shrl
sti
aad
and
or
lds
jl
sub
mov
rcl
inc
or
outsb
adc
inc
shll
cli
cmc
push
roll
mov
xchg
dec
adc
adc
jl
fisttpll
das
test
fstpt
lret
sbb
mov
in
incl
xlat
outsl
sbb
loope
test
pop
inc
stc
push
rcll
adc
icebp
cmp
fwait
adc
fistl
clc
fsts
mov
clc
fs
roll
in
js
stos
inc
loop
fs
xor
shrl
aam
cmp
push
call
sub
jecxz
jecxz
sbb
cmp
pop
fisttpll
mov
sbb
sbb
mov
cwtl
jl
push
pusha
add
mov
jb
pop
in
jno
dec
popf
imul
jo
adc
stos
shr
arpl
call
or
sub
ljmp
std
mov
jb
into
sbb
add
jns
ficomps
sub
sub
push
outsb
mov
xlat
lcall
testb
jle
enter
shlb
rcrl
pop
movsb
jb
jmp
cmp
movsl
pop
mov
punpcklwd
push
lods
dec
jle
mov
test
pop
mov
imul
rcll
push
insl
mov
leave
jl
sub
xor
inc
inc
iret
xor
xorb
hlt
mov
pop
js
add
xchg
cli
push
and
mov
mov
push
mov
data16
and
loop
xchg
mov
cmp
inc
xor
sub
hlt
adc
les
or
push
xorl
sub
cmp
das
jne
sub
loope
in
pop
arpl
mov
test
mov
mov
data16
cmp
jb
test
pusha
mov
dec
pcmpeqw
xchg
movsb
xchg
xchg
cmp
pop
lret
pop
jno
mov
lock
inc
js
rcll
xchg
cs
stos
adc
hlt
push
jle
inc
push
or
ja
add
mov
cmp
pusha
int3
test
xorb
xchg
mov
ret
sbb
repz
stc
clc
inc
popf
mov
aam
mov
pop
popa
mov
ror
in
int3
push
fimull
xchg
int
pushl
push
jg
push
jo
or
mov
and
dec
pushf
sarb
push
bound
movsl
cmp
sti
sbb
mov
lret
mov
jle
xorb
inc
xchg
mov
mov
fwait
aas
sbb
jne
cltd
mov
lahf
sub
insl
or
push
pusha
pop
movl
psrlq
push
scas
pop
mov
imul
adc
push
dec
jo
inc
je
add
inc
subl
sbb
test
add
mov
test
push
sub
fwait
insb
mov
jle
daa
stc
leave
out
movsl
xor
push
push
je
pop
sub
or
mov
je
repz
scas
jmp
push
fisubrl
inc
call
fadds
xor
fildl
mov
notl
insl
sar
icebp
lods
fwait
in
sub
incb
push
test
jnp
or
xchg
clc
xchg
inc
mov
leave
push
insb
xor
sbb
loop
data16
or
mov
jmp
out
test
mov
shll
daa
call
idivl
mov
pop
inc
hlt
jmp
shll
pushf
pop
xchg
cmpsb
pop
mov
imul
andl
or
insl
mov
mov
in
dec
test
loopne
test
mov
inc
adc
int3
sti
je
and
js
xor
sub
xchg
or
and
pop
notl
out
cmc
mov
pop
xor
sub
fmuls
dec
fdivp
push
int3
shll
nop
or
push
test
mov
cmp
dec
adc
cli
stos
xchg
dec
popa
pop
outsl
lret
in
adcl
mov
xchg
adc
dec
out
mov
add
into
scas
shr
jno
loop
cmp
sbb
adc
mov
in
or
hlt
mov
mov
ret
xchg
out
mov
lods
es
xchg
cld
adcb
mov
scas
or
adc
test
and
adc
mov
sbb
push
mov
insl
cmp
mov
or
out
loopne
mov
adc
rclb
lods
ficompl
mov
aaa
jno
xlat
test
push
in
jns
mov
movsl
pop
imul
fs
stos
xor
or
in
sub
cltd
out
arpl
fisttpl
cmp
hlt
and
stc
loopne
insl
inc
inc
lahf
push
loop
xor
mov
cmp
lods
push
mov
add
xor
jp
test
pusha
adc
xchg
xchg
pushf
insl
pop
ljmp
in
movsl
sti
popf
pop
cmp
cmc
in
imul
insl
adc
pop
in
sti
push
inc
scas
aad
stos
ret
je
cmpsb
test
mov
xlat
sub
call
repnz
sbbb
enter
imul
outsb
mov
jbe
jecxz
add
addr16
out
and
scas
mov
movsb
xor
and
icebp
lret
icebp
or
lea
andl
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fisubrs
jmp
cmc
adc
push
aaa
bound
add
sbb
fildl
fsubrs
push
lods
daa
leave
ret
mov
inc
inc
add
fnsave
andb
cmpb
xchg
sub
pop
sahf
mov
push
test
movsl
dec
xor
xchg
jecxz
add
les
mov
arpl
cmp
scas
inc
jno
adc
adc
mov
and
je
andl
mov
and
lds
imul
mov
xchg
aam
cli
add
aaa
jae
pusha
cld
pop
pop
jb
jb
cmp
jp
in
shll
push
inc
daa
das
dec
loope
jle
xchg
or
scas
std
enter
mov
pop
aas
dec
repz
xchg
or
xor
jmp
xchg
test
movhps
xchg
lock
rcll
jnp
xchg
xchg
int3
ret
test
les
mov
sbb
adc
into
add
and
xchg
call
pop
aam
loope
imul
js
inc
sbb
mov
sub
in
jmp
repnz
sub
or
sti
lret
lahf
adc
add
dec
inc
mov
add
mov
into
shll
jns
pusha
cmp
jg
cs
bound
stc
int3
ret
xchg
addr16
jl
inc
ret
jo
dec
xor
enter
js
nop
lcall
sahf
fcompl
fidivrs
push
fcomp
jae
loop
or
ljmp
and
repnz
mov
aaa
dec
iret
testl
push
dec
icebp
dec
pop
je
fildll
mov
test
loop
rcll
pop
jg
lret
loope
das
cmp
rclb
shll
mov
jne
jae
dec
jne
xor
mov
nop
rol
nop
sub
and
add
xchg
rorl
loop
push
and
cmc
fistl
pslld
jno
mov
movsb
mov
xor
inc
pop
ret
inc
jle
leave
mov
mulb
subb
nop
xchg
repnz
push
add
leave
roll
lock
or
or
mov
fptan
lcall
sub
mov
jne
lock
test
sub
fiadds
outsl
int
cltd
jecxz
ja
out
adc
adc
bswap
xchg
or
int
ja
jns
adc
icebp
pop
dec
fnstsw
mov
mov
xchg
mov
xor
push
push
mov
cmpsb
inc
repz
pop
orb
dec
popf
pop
pop
xchg
in
push
push
sarl
ret
xor
test
std
sub
or
sar
or
fs
inc
xor
mov
mov
mov
jge
cmp
pop
xlat
push
mov
cmpsb
lds
mov
pop
lea
gs
xor
sub
cmp
dec
dec
push
jl
lret
mov
mov
push
int3
mov
outsl
sub
inc
rcl
push
xor
movsl
sahf
xchg
inc
out
test
test
insl
sti
jbe
nop
mov
xchg
jp
mov
pop
cmp
lahf
call
add
push
sub
fcomps
xchg
leave
fwait
es
sar
inc
lret
lock
mov
mov
sbb
lcall
xchg
mov
pop
lea
nop
pop
fcompl
nop
inc
pop
and
stos
mov
pop
jns
mov
xlat
out
les
or
jle
out
jo
or
frstor
in
imulb
aas
cmc
enter
sbb
adc
je
cltd
mov
add
and
inc
cmp
lods
dec
jl
cmpsl
xchg
inc
imul
sbb
and
ret
inc
shlb
icebp
pop
hlt
in
inc
sub
test
cld
mov
sub
and
imul
data16
mov
fwait
dec
aam
int
ja
loope
sbb
xchg
lcall
sub
mov
add
jp
cmp
mov
pop
out
int3
dec
push
lret
mov
sbb
sbb
jmp
add
stc
cmp
clc
add
shlb
std
mov
inc
jbe
ja
aaa
sti
loope
testl
stos
add
jmp
mull
xchg
pop
mov
inc
movsl
mov
jge
lret
ret
and
mov
dec
cmp
mov
or
or
jb
sahf
mov
out
sbb
icebp
outsl
repz
xchg
jle
loope
xor
xchg
and
mov
push
out
rolb
cmpsb
xor
xor
xchg
mov
ret
push
add
enter
and
into
scas
jbe
xchg
pop
mov
add
and
xchg
cltd
xor
pop
scas
out
xchg
xor
push
ret
orl
adc
ret
xor
jno
sahf
movsb
pop
mov
dec
insl
xchg
rcrl
nop
test
xchg
out
lock
out
jle
jne
movsl
mov
arpl
xchg
popf
xor
push
clc
mov
sahf
ljmp
fstps
cmp
xor
sub
sbb
cmp
sbb
add
mov
gs
movsl
testl
mov
jae
lret
or
rcrb
int
loop
lret
sub
mov
sbb
arpl
mov
and
dec
mov
jp
jo
mov
icebp
stc
movsl
push
jo
jbe
mov
dec
aad
mov
cmp
leave
in
or
cli
mov
outsl
in
mov
out
cmpsl
outsb
mov
and
xchg
push
ret
lret
out
fwait
aas
mov
test
lods
in
aam
lods
popf
jae
daa
mov
jmp
add
hlt
cmp
sbb
mov
sbb
cmpsl
push
mov
loopne
jae
lcall
scas
jae
mov
xor
xchg
ds
in
add
xchg
mov
test
sbb
sarb
cmc
sub
mov
call
jno
stos
fsubrl
testb
dec
sbb
jl
cld
or
sti
mov
push
addb
push
mov
xor
xchg
xor
fsts
push
sub
mov
mov
jo
mov
das
push
xchg
mov
add
or
mov
add
pop
lahf
stc
insb
sub
aam
out
les
cltd
jno
lahf
popf
sub
mov
jge
jns
push
add
das
push
clc
test
out
push
sahf
cmpsb
adc
xchg
mov
xlat
mov
mov
mov
dec
fstpl
std
xor
loopne
es
fstps
sahf
pop
dec
iret
nop
inc
or
lea
pop
jg
pop
loope
stos
jb
mov
imul
outsl
sub
sbb
mov
hlt
int3
int3
push
jb
loop
sbb
repnz
movsb
test
add
fistpl
rcr
arpl
adc
fstp
repz
jl
add
jmp
cmc
insl
ja
cmc
mov
mov
cmc
arpl
push
adc
xor
decb
outsb
sbb
dec
adc
pop
lcall
lahf
push
out
and
sbb
dec
cwtl
gs
repnz
adc
xor
or
mov
jge
sub
pop
out
mov
or
cwtl
xlat
cmp
mov
aam
loopne
outsl
stos
or
stc
push
std
in
aad
adcb
loop
lcall
jl
outsb
scas
inc
loop
scas
mov
jbe
push
mov
xor
leave
xor
ds
sbb
xor
cwtl
jnp
dec
ds
cmpsb
mov
cmc
jnp
xor
pop
ret
out
jmp
dec
jecxz
sbb
test
out
test
jp
popa
xor
clc
add
dec
sub
add
pop
std
jb
je
ja
jge
cmp
data16
das
mov
or
mov
mov
lret
sub
enter
hlt
and
iret
add
addr16
mov
dec
fwait
aad
rcrb
out
pop
fnsaves
inc
loop
mov
fcoml
out
adc
jnp
cmpl
mov
xchg
nop
insb
ss
xor
mov
inc
sahf
mov
sub
push
push
jecxz
sbb
mov
dec
lods
clc
lods
push
adc
cmp
insl
andl
push
xchg
inc
sbb
mov
das
out
daa
push
sub
xchg
mov
add
mov
mov
sub
mov
adc
mov
push
xchg
int
test
aaa
das
adc
cld
fmulp
push
push
cld
out
jnp
inc
sub
mov
dec
out
mov
leave
mov
pop
mov
ljmp
outsl
jbe
insb
or
mov
mov
inc
jns
push
jp
pop
sbb
mov
fwait
add
orl
loopne
inc
fdivr
add
push
jno
subb
dec
in
pusha
je
fwait
das
sub
jb
cmp
jnp
clc
out
add
mov
jns,pn
sbb
in
adc
jns
mov
mov
jp
dec
shlb
push
stc
pushf
xor
hlt
popf
mov
or
in
jg
das
pop
inc
idivb
mov
jbe
dec
cmp
push
lahf
loopne
ljmp
pop
dec
lods
dec
lea
arpl
lds
test
daa
outsb
loope
cmp
lds
lcall
jns
pop
xchg
outsl
cmpsl
aas
outsb
inc
pushf
sti
testl
sbbb
lock
sbb
xchg
stos
pop
and
or
dec
cmp
aam
pop
sub
xchg
mov
in
repnz
in
fwait
popf
sbb
dec
in
idivl
cld
and
inc
hlt
sub
mov
dec
stc
in
aam
std
adc
es
jo
ds
xchg
or
pusha
pop
popf
popf
out
rcll
fcompl
xlat
adc
or
inc
dec
mov
push
loope
push
bound
add
push
movsb
sub
pop
ds
cmpsl
mov
loop
aad
sti
push
mov
fidivrl
cmp
leave
xor
add
js
mov
cmp
dec
pop
popf
xor
fadds
push
aam
mov
lock
lea
mov
jns
cmp
jne
sbb
cltd
sbb
jecxz
call
outsb
jb
inc
das
rclb
dec
inc
pop
imul
sarl
sbb
or
adc
fwait
insb
mov
sub
jmp
aaa
xor
ret
test
add
bsf
scas
ss
mov
push
inc
xor
icebp
shlb
pop
jp
cmp
xor
push
aaa
dec
daa
imul
push
repz
jb
imul
outsb
jne
ret
mov
sub
sahf
dec
mov
pop
enter
and
mov
sbb
adc
ljmp
dec
arpl
jg
js
mov
pop
test
inc
call
pop
push
mov
push
int
call
ja
cld
cmp
mov
test
stos
int
jp
dec
add
push
adc
xchg
jae
mov
inc
outsb
mov
xor
pop
or
ret
pop
add
bound
or
lcall
cmpsl
mov
nop
inc
in
mov
jnp
or
int
add
xchg
fnstcw
and
push
pop
sub
xor
add
nop
xchg
or
imul
jmp
mov
inc
jmp
aaa
cmp
add
jle
arpl
adc
cwtl
xor
and
fadd
fs
lahf
fsubrl
add
sahf
sub
dec
outsl
cmp
xchg
and
and
cmp
sarb
mov
lcall
daa
out
cmpsb
popf
adc
pop
mov
out
popf
shl
jecxz
lods
fisttpll
pop
adc
dec
insl
cwtl
mov
and
lods
outsb
mov
les
jo
daa
insb
sbb
pop
addl
add
pop
leave
add
lds
fbstp
aas
fisubrl
cmpsb
les
cmc
or
inc
push
or
mov
lahf
jle
xchg
dec
jb
pop
shlb
fisttpl
sbb
inc
rcrb
out
insl
int
jo
and
sub
and
mov
retw
fistpl
lds
add
icebp
or
arpl
lock
fldt
jno
hlt
jns
push
clc
inc
jno
pusha
cltd
cmpb
inc
es
ret
adc
mov
cmp
outsl
adc
xor
cmp
cli
xor
test
mov
dec
aam
or
push
stos
es
ret
ljmp
outsl
daa
jp
sub
push
dec
xlat
xchg
dec
in
and
mov
push
adc
add
xlat
loope
pop
fildl
jae
test
add
pushf
sbb
int3
jmp
mov
in
sbb
push
hlt
jns
push
fwait
push
pop
cs
add
mov
cwtl
fisubs
icebp
mov
popf
sbb
data16
xchg
cmp
sbb
insl
cld
fs
or
mov
es
jnp
fimuls
enter
pop
sub
stc
into
sahf
iret
js
mov
pop
les
push
mov
insl
into
cmc
mov
inc
pop
fisubs
test
and
adc
mov
push
fisubrl
push
pop
fsubrs
call
lahf
and
xchg
jnp
in
rclb
push
ja
repnz
loopne
and
sbb
mov
xchg
ds
cltd
test
push
mov
mov
inc
mov
aaa
xchg
clc
sbb
jo
rorb
pop
or
call
cmpsl
xchg
hlt
xchg
lods
stos
out
push
fnstenv
xlat
das
mov
movsb
cmp
jg
sub
xchg
ret
pop
pop
ljmp
sbb
mov
enter
or
cwtl
xchg
call
jne
shll
je
jmp
and
cmp
cmp
mov
fsubs
cmp
jg
inc
jae
mov
dec
xor
mov
sub
in
fisubs
and
popf
adc
dec
gs
pop
inc
mov
mov
loop
das
shll
out
leave
mov
out
xchg
fistpl
subl
push
cmp
mov
mov
repnz
jnp
inc
std
inc
cli
pop
or
adc
es
jle
outsl
adc
aad
pop
mov
pop
mov
lret
and
adc
inc
xor
mov
xchg
cmp
nop
and
cmpsb
adc
iret
sub
shl
pop
mov
mov
das
mov
hlt
cmc
fsubrs
push
or
push
mov
out
ja
icebp
insb
xchg
insl
jl
stc
stos
sbb
popa
jmp
stc
lahf
lea
push
mov
in
jno
cmc
leave
xor
bnd
jle
aam
test
and
push
fwait
mov
jno
xor
xchg
push
jp
ss
es
cld
addr16
popa
cmc
xor
cs
sub
loop
cmp
notb
adc
cltd
dec
sbb
mov
cltd
push
xor
lods
xchg
push
mov
inc
out
xorl
pop
mov
jns
xchg
add
jecxz
pop
cltd
in
xor
lret
sahf
mov
fiadds
std
mov
jle
xchg
xor
aas
test
lock
stos
cmpsl
pop
fbstp
imul
adc
sub
jb
xchg
outsl
scas
pop
fiadds
pushf
ljmp
xchg
lcall
outsl
sub
aas
push
jae
mov
pushf
repz
in
lock
js
cmp
clc
xchg
les
mov
aaa
dec
psraw
add
lret
xor
mov
sub
push
sub
cmp
dec
pop
sub
shlb
jnp
jae
push
nop
stos
push
mov
test
mov
insl
scas
popa
int3
sub
cmp
daa
inc
sub
in
sbb
arpl
ret
sub
outsb
cld
xchg
push
pop
adc
mov
es
imul
int
adc
stos
out
push
xchg
arpl
and
lret
mov
cltd
pop
mov
push
daa
push
cmp
data16
data16
add
test
cmc
inc
mov
inc
movb
lods
fwait
xlat
call
fdivrs
int
dec
xchg
pop
add
mov
cltd
push
jnp
dec
xchg
or
push
lds
pop
aaa
pop
enter
xor
sbb
mov
inc
je
push
push
ss
mov
shrb
mov
pop
fidivrs
jg
adc
packsswb
inc
fs
int3
and
push
mov
in
cmpsb
movsl
scas
loope
pop
addr16
ret
push
pop
ds
and
pushf
mov
fstpl
aam
test
push
lods
sbb
in
inc
je
popf
adc
es
leave
ds
loopne
loop
ljmp
daa
cld
imul
xchg
test
mov
mov
jge
xchg
jbe
js
add
jge
das
mov
iret
lds
inc
arpl
and
and
xchg
bound
stos
sbb
shlb
rorl
cmp
sarb
adc
mov
pop
or
xor
cs
dec
xor
les
jle
out
movsb
mov
and
lret
data16
idivb
stc
rcll
shrb
dec
imul
outsl
leave
in
and
jae
mov
outsb
jmp
jns
leave
repnz
inc
mov
mov
adc
idiv
mov
add
test
cmc
sbb
pop
pop
inc
add
or
fcoms
out
mov
or
mov
sub
out
dec
mov
ja
sbb
scas
jg
add
inc
aas
lahf
stos
cmc
cmp
lock
dec
out
ss
outsb
adc
jo
lods
aam
inc
push
bswap
sysexit
push
jnp
pop
and
movsl
popa
or
imul
mov
xor
std
lahf
enter
stos
xor
scas
xor
andb
push
cmp
imul
inc
mov
mov
sub
or
cmpsl
cmp
mov
hlt
aaa
enter
cmpsb
test
add
imulb
movsb
pop
xor
xchg
fs
cmpsl
xor
out
int
loopne
pop
nop
mov
sub
pop
sahf
lret
aad
lods
mov
icebp
shll
fcompl
shll
bound
sub
pop
mov
fcmovnbe
xchg
push
dec
hlt
jg
fsubrp
jmp
mov
adc
lret
or
bound
aas
clc
adc
in
mull
and
cmc
in
cmp
mov
mov
jmp
inc
sub
scas
adc
lds
ret
jne
in
pusha
mov
add
mov
repnz
iret
pop
xor
movsb
dec
loopne
lock
mov
pop
lds
repz
lret
lret
stc
nop
pop
mov
movsb
pop
movsl
insl
mov
das
cld
pop
fs
mov
add
adc
lcall
jns
or
sbb
lds
testl
cmp
dec
call
jle
cmp
dec
mov
xchg
fdivr
mov
jl
sbb
dec
xchg
jl
cmp
sub
lods
insb
cmp
inc
xchg
ss
dec
cli
mov
add
sub
lods
mov
dec
push
cmp
pop
cltd
sbb
jbe
jl
jne
aad
jge
fldt
loopne
cmp
stos
aas
push
mov
lods
popa
xor
daa
in
lret
scas
lret
sbb
jge
loop
mov
sub
xor
and
call
mov
cli
inc
push
xchg
sbb
mov
xlat
pop
sahf
out
in
imul
cmp
data16
mov
push
out
call
mov
jmp
into
sbb
nop
data16
stos
inc
mov
ljmp
das
sbb
int
repz
leave
imul
dec
dec
sbb
fwait
adc
fmuls
inc
enter
xor
lret
mov
adc
mov
push
bound
pop
and
scas
sti
out
out
in
sar
nop
push
xor
lcall
push
pop
push
popf
sbb
int3
lods
adc
std
insb
push
mov
popf
jnp
mov
and
fsubl
push
fstps
and
pop
arpl
lea
fcoml
push
fdivl
sub
out
and
mov
xor
inc
dec
mov
sub
dec
dec
loop
and
ds
repnz
sbb
cs
pop
mov
repz
xor
jb
inc
xor
movsb
mov
add
loope
pop
rcl
pop
movl
ja
push
sbb
or
mov
lock
add
sbb
lcall
roll
add
test
or
ret
pop
pop
jnp
fidivrl
and
mov
scas
in
into
cltd
sahf
or
scas
loopne
dec
sarb
and
adc
xchg
inc
popl
push
xchg
in
push
mov
mov
lcall
add
or
sahf
pop
xchg
ss
xchg
jno
pop
inc
mov
mov
movsb
mov
movsl
add
xchg
cmpsl
imul
insl
test
cmpsl
and
jbe
out
sub
cwtl
and
jmp
inc
mov
add
jnp
subb
lea
iret
jle,pn
cmpsl
sar
mov
sbb
pop
mov
inc
inc
enter
arpl
adc
mov
jmp
xchg
lahf
sbb
js
pusha
insb
inc
pop
pop
outsb
xor
mov
push
cld
cmp
jae
jb
mov
ja
lods
xchg
xor
xchg
sbb
clc
sbb
xor
cmp
jl
or
push
sub
pop
and
clc
mov
mov
pop
sbb
mov
push
ds
cmp
lret
ds
faddl
cwtl
dec
push
xlat
add
pop
sub
lods
lret
fdivrl
jge
xchg
or
dec
jbe
sub
fsubrl
mov
subl
call
or
sub
xor
cmpsb
aam
mov
bnd
cmp
movsb
push
popa
jmp
sub
fs
mov
xor
bound
mov
stc
lahf
cmp
sbb
push
or
xchg
add
lret
xchg
mov
adc
inc
xchg
and
stc
mov
push
push
loope
inc
cmpsb
stc
or
cmp
jecxz
loope
or
xor
out
lret
and
dec
dec
lds
and
inc
pop
nop
sub
test
and
aaa
movsb
mov
lcall
mov
sbbb
sbb
lret
and
rcll
xor
and
pmulhw
sarb
shrb
mov
adc
aam
pop
rolb
jae
cmp
loopne
ret
push
xor
dec
pop
fmul
xor
std
ret
movsb
cltd
lahf
cmp
xchg
mov
mov
scas
inc
popa
add
stos
ret
ja
xor
icebp
mov
outsl
rorl
jp
out
mov
mov
add
fucom
mov
divl
test
xor
mov
lahf
scas
cltd
push
adc
jne
out
jnp
mov
repnz
pop
popf
mov
adc
sbb
pop
sti
jns
mov
clc
push
mov
mov
dec
out
push
test
add
pop
or
push
cmp
mov
loopne
test
fistl
mov
inc
shlb
test
add
cmp
xchg
mov
add
comiss
scas
sbb
inc
std
es
mov
inc
mov
cli
dec
adc
xchg
xchg
adc
pop
and
lods
sbb
fistpll
sti
push
arpl
movsl
mov
xor
adc
xor
cmp
rorl
fcompp
loopne
jne
add
push
int3
popa
jmp
xchg
leave
cmp
test
sbb
sub
jae
cmp
arpl
inc
add
mov
mov
push
jo
push
mov
cmp
in
or
movsl
and
dec
lcall
fwait
add
lret
cmp
pop
cmp
or
xor
sbb
sarl
std
out
push
mov
into
or
mov
fildll
cld
and
iret
push
loop
test
hlt
lret
mov
loope
in
ret
movsb
out
xchg
daa
int3
imul
dec
jecxz
push
sub
lea
movsb
lea
jbe
cmp
push
rcr
mov
in
mov
adc
pop
dec
fwait
mov
cmp
dec
call
movsb
loop
adc
pop
push
xor
or
pop
push
and
in
loopne
imul
jmp
into
or
sarb
lcall
imul
sbb
xchg
add
lods
aad
lret
jp
jae
mov
mov
push
fbld
mov
jl
das
cmc
clc
fimull
xor
mov
test
das
mov
mov
adcb
movsb
pop
divb
js
sub
sub
stos
dec
xchg
mov
pop
rcrb
fistps
lahf
jno
test
push
fstpt
jle
gs
cmp
pop
ja
daa
lock
call
and
loopne
and
movsl
and
sbb
ret
mov
sbbb
and
jb
rolb
pop
mov
mov
or
shll
push
mov
xor
fistl
pop
jae
and
shlb
mov
inc
push
pushf
xor
pop
xchg
jb
les
cmpsb
mov
ror
dec
std
jp
dec
pop
lock
adc
adc
icebp
in
ret
ljmp
add
leave
testl
sbb
aam
xchg
mov
push
les
dec
xor
iret
dec
sbb
lock
hlt
mov
aas
movsl
push
xchg
xchg
ficompl
or
enter
stos
mov
jno
push
in
orb
mov
xchg
pmaddwd
inc
jle
adc
sbb
dec
cli
xor
xchg
cmp
cmp
enter
cmp
xor
mov
and
xchg
pop
js
xchg
mov
add
mov
subb
stos
imul
xor
leave
add
add
push
or
shrb
lret
mov
mov
notl
pop
mov
inc
iret
js
cmp
mov
push
cld
lcall
repz
cmp
in
mov
pop
or
ss
push
push
int
mov
iret
mov
jb
nop
je
rcll
in
out
scas
sub
pop
out
fisttps
mov
es
cmc
push
or
or
fwait
xor
orl
add
inc
int
insl
test
dec
js
jge
lret
mov
or
test
sub
sbb
repnz
xchg
mov
aam
add
cli
jns
push
lds
sti
sti
fstpt
jmp
xor
push
inc
jns
ret
mov
mov
cmp
or
or
xchg
test
mov
mov
or
bound
dec
out
push
popf
inc
out
lds
ficoms
sub
movsb
dec
xchg
std
jge
enter
ficomps
sbb
mov
in
scas
insb
lods
xchg
sub
lcall
or
or
int3
in
jbe
loopne
push
mov
movsb
mov
inc
aas
mov
mov
popf
xor
inc
sbb
lret
xor
fcom
cli
jno
stc
leave
or
cltd
push
popf
dec
mov
out
xchg
sub
sbb
mov
ljmp
xchg
pusha
mov
popf
aas
sbb
and
les
insb
hlt
cmpsb
mov
jle
xor
movsl
inc
outsb
jg
stos
jge
cltd
test
or
rol
sbb
mov
push
scas
and
lcall
adc
inc
repz
loop
cmpsb
cmp
jecxz
sub
dec
imul
lcall
lret
rorb
in
inc
dec
lea
push
push
cs
cmpb
out
loopne
movsl
insb
stc
cmpsb
ret
hlt
xor
sbb
std
mov
push
std
xchg
dec
cmc
call
mov
shlb
cmp
pop
daa
hlt
lds
cmp
test
imul
arpl
fninit
in
xchg
andb
movb
sub
add
cmp
sahf
scas
xchg
fwait
insl
and
cmp
filds
pop
inc
popf
sub
mov
movsb
add
sarb
daa
aaa
adc
mov
push
cwtl
and
xchg
inc
mov
aas
xchg
ds
js
add
es
push
jecxz
int3
mov
or
jb
pop
sbb
mov
mov
add
hlt
insb
js
lea
pusha
jae
scas
mov
fiadds
lods
xor
pop
je
xchg
ret
or
mov
or
cpuid
and
xchg
test
push
xchg
inc
or
imul
adc
add
jae
sarb
fstl
jmp
and
pop
pop
xorl
fs
cmp
pushf
push
mov
cmp
rorl
push
fidivrs
jae
jge
nop
dec
in
jg
mov
loop
ja
push
movsb
decb
out
inc
insl
or
subl
dec
sub
add
or
repnz
inc
xchg
inc
fdiv
push
xchg
loope
add
je
dec
cmc
or
mov
sub
add
rolb
inc
and
inc
es
mov
bound
cltd
cmc
and
dec
push
dec
dec
or
push
cmp
add
mov
jno
jg
fstp
pop
add
jg
jl
adc
mov
cmp
inc
stos
mov
pop
pop
mov
stos
daa
add
lret
and
call
pop
enter
js
jae
dec
push
repnz
mov
xchg
mov
xchg
jl
fiadds
ret
sbb
dec
adc
ljmpw
enter
and
ret
xor
out
mov
adc
lcall
cmpsl
subb
push
enter
lods
stc
xchg
lea
xor
pop
sbb
fwait
jecxz
inc
adc
and
adc
test
arpl
mov
imul
aam
sbb
dec
mov
cld
decl
xchg
je
loop
mov
inc
dec
push
call
ss
push
sbb
push
shll
lds
push
xor
jp
dec
lds
jge
pop
sbb
shrb
jl
adc
lock
ret
mov
pop
clc
in
incl
rcll
jl
dec
mov
mov
mov
xor
subl
out
cmpsl
sbb
push
jae
mov
aam
test
mov
fwait
add
inc
pop
xchg
jo
mov
mov
xchg
in
in
out
mov
jg
push
cmc
pusha
in
push
inc
bound
clc
sub
add
cmp
cltd
xchg
fstps
ljmp
xchg
fiaddl
adc
pop
push
ljmp
movsl
fmull
dec
lods
push
add
test
xor
sub
adc
lock
test
add
add
das
ljmp
xor
popa
test
mov
inc
jae
inc
insl
sbb
in
lcall
cmp
iret
shll
push
aas
jno
or
lret
sub
pop
mov
mov
lret
pop
pushl
aaa
push
push
xor
outsb
mov
add
inc
push
jl
stc
sarl
mov
es
fcomp
stos
nop
icebp
out
add
outsb
sub
in
cmp
and
mov
out
jns
cli
xchg
jno
mov
sub
addr16
sub
pop
or
jp
call
adcl
andb
test
subb
sub
push
ret
push
sbb
in
test
test
mov
in
lods
xchg
das
enter
ret
push
outsl
dec
inc
pop
push
xor
xor
and
pop
mov
roll
or
ja
mov
adc
add
shlb
xlat
out
adc
stc
pusha
negb
pop
mov
mov
cmp
stos
imul
jbe
xchg
pop
xor
adc
leave
sar
stos
sub
sub
mov
lret
xchg
in
cs
sbb
and
or
push
adc
inc
popf
popf
fwait
push
dec
add
sub
inc
rclb
lods
lret
repz
xor
lcall
dec
pop
mov
sbb
push
cs
jmp
and
sub
sbb
sub
and
cli
pushf
mov
dec
in
cmc
adc
jbe
sahf
or
or
bound
mov
adc
lret
scas
lods
add
clc
dec
and
fwait
nop
jecxz
loop
inc
jge
pop
mov
mov
cmpsl
or
xor
jno
lds
mov
ret
jo
mov
cli
xchg
dec
lea
pop
push
sahf
pop
sub
rclb
inc
std
dec
js
outsl
test
add
insb
into
jmp
js
fcoms
jb
or
scas
or
jecxz
xor
cmpsl
shlb
sbb
push
jecxz
mov
jo
add
repz
insl
sbb
ficomps
iret
and
roll
inc
mulb
xor
jecxz
jb
jns
sbb
xlat
jecxz
jne
cmp
add
rcrl
xchg
sbb
std
fstps
dec
xchg
stos
js
stos
andb
xchg
mov
scas
sahf
gs
test
popa
push
push
jmp
add
sbb
add
addb
sbb
pop
cld
andb
or
or
pop
mov
mov
mov
fwait
pop
xor
xor
or
in
ret
sbb
inc
movsb
pop
xor
sub
and
and
cmc
ljmp
ss
inc
or
lahf
add
xor
mov
adc
xchg
push
outsl
and
pushf
das
jmp
in
mov
pop
jp
rorl
jns
into
mov
jecxz
lahf
ffreep
mov
sbb
int
xchg
cmp
lods
jo
xchg
push
je
hlt
shrl
jno
mov
lahf
and
call
mov
jae
sbb
cli
mov
cmp
mov
js
add
cmpsl
aaa
lahf
inc
mov
inc
or
insb
xchg
fstpl
add
addl
xor
and
test
rcrl
dec
mov
js
or
dec
mov
clc
stos
ret
int
push
mov
xchg
ss
rorl
test
loope
clc
mov
js
cmc
fwait
sub
aaa
ds
xchg
jae
jo
popa
pop
add
and
push
fimuls
add
jecxz
add
push
sub
pop
push
enter
mov
into
sub
jb
mull
adc
jbe
inc
inc
scas
sub
xor
aam
lcall
push
xor
add
or
lret
sub
js
shrb
lahf
daa
gs
xor
arpl
cmpsl
insb
lret
mov
test
das
push
pop
fs
pop
or
mov
pusha
js
mov
pop
cmp
lds
adc
lds
pop
sbb
xchg
pminsw
add
loope
loop
gs
icebp
scas
jae
push
mov
sbb
pop
cmpb
leave
mov
sub
int
inc
push
pop
jne
into
ret
arpl
pop
xchg
push
pop
pop
push
sbb
inc
je
loopne
iret
or
mov
hlt
jo
loope
jo
jo
jecxz
mov
jg
mov
ds
gs
mov
and
push
mov
loop
mov
das
imul
fimull
push
mov
scas
cwtl
add
out
add
decb
lret
cmpsl
or
leave
push
jb
xor
and
lret
sahf
mov
jns
fisubrl
out
adc
add
dec
jne
adc
dec
xchg
cld
xor
push
jns
lcall
mov
mov
inc
sbb
fldcw
test
fsubs
insb
in
add
mov
cmp
popf
jmp
sub
or
xor
ss
mov
and
out
push
cs
repz
scas
mov
push
sbb
push
fisttpll
lods
lds
sub
leave
aad
cmp
testb
adc
pop
mov
sub
lret
cmp
les
and
inc
mov
push
push
bound
daa
add
ds
jo
lcall
mov
push
or
fwait
dec
mov
jne
mov
jp
pop
aad
stos
xorb
sub
push
mov
add
ret
mov
fs
stos
clc
iret
inc
int3
push
push
imul
xchg
xorl
mul
adc
fs
sbb
and
adcb
mov
repnz
imul
cbtw
pop
adc
and
loope
test
in
pop
lods
sbb
sbb
pop
jno
mov
add
mov
daa
int
or
mov
pop
insb
adc
sub
sbb
xchg
lcall
inc
xchg
and
xchg
out
adc
repnz
aaa
jbe
push
gs
pop
push
push
lods
fldcw
loope
hlt
ret
push
jno
enter
test
ja
inc
fnop
jb
or
xor
xor
mov
pop
jge
dec
adc
scas
std
scas
xchg
push
ret
lock
pop
jnp
loopne
divb
stos
dec
jns
lret
imul
ja
push
sbb
mov
mov
xchg
xor
or
and
imul
and
mov
fnstsw
lret
mov
mov
xchg
lods
fcom
sbb
ljmp
mov
int3
pop
push
mov
popa
jnp
adc
clc
lock
dec
xchg
push
dec
pop
mov
mov
cmp
pop
call
movsb
repnz
js
shll
sbb
call
and
inc
add
in
push
or
cwtl
sbb
popf
iret
jne
mov
nop
pusha
in
stos
ucomiss
hlt
adc
cmp
cmp
rol
mov
test
ds
inc
adc
cmp
xorl
mov
fmull
bswap
lea
pop
test
pop
mov
scas
nop
mov
jg
fsts
jp
out
jl
xor
repnz
enter
adc
incb
jb
pop
mov
mov
test
mov
sbb
in
mov
andl
adc
or
jns
ljmp
cmpsl
into
mov
or
ljmp
pop
leave
sub
mov
ds
mov
cmp
push
fisttps
pusha
mov
xchg
or
repz
sub
ljmp
inc
mov
pop
lret
call
xchg
pop
and
or
inc
enter
dec
test
cli
shl
xor
cmp
jecxz
orb
sub
jecxz
push
aad
pop
icebp
pushf
stc
and
inc
divb
push
xchg
andl
dec
sbb
ficompl
aad
jmp
jnp
jge
add
mov
into
push
data16
gs
fidivs
mul
in
cmpl
adc
cli
cmc
sub
inc
lods
sub
xor
ud0
mov
and
jbe
enter
push
xchg
xor
cld
add
je
mov
adc
push
lea
rolb
je
aas
inc
cwtl
push
lods
sub
dec
inc
aam
outsl
loope
cmpsb
cmc
lahf
xchg
fcoml
sbbl
mov
icebp
inc
stc
negb
ljmp
jmp
lret
add
mov
inc
gs
rcr
pop
movsb
inc
gs
mov
xor
and
sub
inc
rorb
fs
push
std
test
rcll
add
test
jmp
rorl
shrb
mov
xchg
lahf
push
shll
int3
mov
jo
sbb
rclb
xchg
pop
and
add
in
insb
cmp
aam
mov
ja
cmpsb
sbb
jp
fsubl
sbb
ret
movsw
xlat
hlt
sub
dec
sub
mov
push
into
mov
pop
mov
loope
add
sbb
sbb
pop
lds
push
pop
sbb
addb
es
leave
xlat
xor
out
insl
cmc
or
push
shl
xchg
inc
in
jp
dec
xchg
jb
js
jecxz
aad
shll
push
cmpsl
mov
pop
inc
outsb
mov
pop
outsl
mov
push
dec
push
mov
jb
sub
and
gs
fwait
outsl
lcall
mov
mov
dec
sub
mov
xor
and
inc
out
or
jp
jb
es
int
pop
push
cmc
mov
cs
inc
movsb
imul
jecxz
fs
popa
mov
xlat
mov
bound
jns
xchg
jnp
xchg
sarb
movsb
jb
adc
mov
cli
xor
mov
cli
cmpsb
pop
cmc
pushf
jae
fnstenv
sbb
js
push
and
shlb
aaa
jo
dec
jae
mov
insb
movsb
or
and
pop
insb
inc
js
lahf
xchg
mov
inc
data16
xor
icebp
push
ret
jbe,pn
jle
add
dec
or
mov
lcall
xor
stos
mov
or
pop
mov
lds
jb
cmp
mov
add
ficoml
ffreep
adc
lock
lock
test
stos
xchg
xor
sarl
lret
cmc
negl
inc
fmuls
cmp
stc
lcall
cmp
mov
pop
adcb
rdmsr
adc
subl
and
adc
into
xor
push
sub
setno
fwait
push
push
sbbl
lret
orl
inc
hlt
mov
add
xchg
inc
dec
ret
fldt
ja
sub
mov
and
aaa
xchg
cmp
mov
lds
mov
sub
hlt
shll
scas
sub
in
testl
ficomps
sbb
mov
push
jb
call
popf
xorb
mov
and
dec
arpl
ss
mov
movsl
fisttpll
lods
adc
ret
xchg
mov
mov
sbb
jnp
leave
jge
fbld
stos
mov
adc
gs
insb
pushf
mov
not
popa
fs
stos
mov
push
push
xchg
dec
lea
call
jmp
sub
mov
sti
pop
sub
faddl
mov
push
mov
inc
cmp
ljmp
jg
test
mov
lret
stos
or
leave
into
sysexit
push
lahf
sbb
popf
fcmovu
push
loop
ja
sbb
mov
cli
xchg
pop
clc
mov
btr
dec
leave
adc
cld
cmp
movsl
jmp
dec
jns
push
movsl
jae
subb
mov
arpl
push
fidivl
add
sub
xor
addr16
sbb
ret
mov
pop
repnz
into
test
jne
jg
mov
push
sbb
pop
shrb
movsl
xor
push
sbb
cs
or
mov
pushf
push
pop
pusha
and
mov
mov
cmc
cmpb
test
cmp
test
lret
aad
outsb
lods
and
movsl
orb
mov
rep
mov
jg
mov
inc
jno
mov
xor
movsl
in
addr16
cli
or
cs
es
in
int3
dec
pop
sub
push
out
cmp
cltd
fldt
out
ds
xor
xor
cmp
repz
adc
jo
shll
sti
push
xchg
and
std
jo
mov
or
jg
mov
adc
jns
and
jle
inc
push
jl
in
icebp
out
adc
xor
pop
aad
jno
into
push
repnz
mov
add
pushf
movsb
je
decb
jmp
in
xor
call
lods
loope
movsl
xchg
mov
adc
cmp
jo
add
inc
mov
xor
mov
xor
loope
popa
ret
fwait
sbb
jns
repz
lea
cmp
in
faddl
xorl
shll
fists
adc
cwtd
icebp
pop
or
cli
fwait
or
mov
add
xchg
sbb
stc
jle
jne
clc
xor
mov
mov
cld
negl
ror
or
divsd
outsb
xor
or
push
xlat
fisubrl
sub
sarl
pop
enter
repnz
jmp
int
fstp
push
push
shll
ja
push
xchg
and
mov
inc
inc
loope
mov
out
shl
jno
mov
popf
xor
les
les
cli
test
push
fdivs
lret
movsl
imul
in
inc
inc
sub
div
mov
sbbl
les
movsl
ja
or
test
push
jl
cmp
and
jbe
fcmovbe
cmp
dec
cli
mov
aad
outsl
imul
push
pusha
sbb
pusha
mov
jecxz
push
popa
inc
ret
testb
jbe
out
fdivrs
pop
xor
bound
cmpsl
jnp
loop
jmp
stc
sarb
push
cmp
popf
nop
jl
ret
pop
out
sbbb
sub
sub
inc
push
cmpsl
push
test
iret
les
out
test
push
jge
addr16
or
repz
sub
push
out
outsb
pop
int3
nop
push
outsb
fisubrs
mov
daa
add
loopne
loope
subb
mov
push
cmp
sub
inc
test
sti
jo
or
dec
inc
scas
movsb
ljmp
push
sub
lods
pop
stos
mov
ret
xchg
cmp
mov
loopne
incl
mov
lret
enter
js
or
inc
aas
xor
sti
movsb
sahf
into
fstpl
loopne
mov
arpl
dec
cmc
inc
dec
jmp
fnstcw
inc
inc
into
pop
rclb
jg
insl
push
inc
inc
adc
rcrb
or
push
mov
popa
dec
addr16
mov
mov
push
lods
neg
push
cli
mov
outsl
mov
std
inc
mov
jecxz
mov
sub
xlat
iret
ljmp
adc
cltd
or
mov
cmp
aaa
icebp
and
insl
lock
cmp
mov
and
jmp
inc
jnp
sbb
hlt
add
loop
or
mov
shrb
das
aad
add
inc
cmp
std
xchg
decb
push
popl
or
sbb
xlat
std
bound
outsb
pop
push
gs
xor
mov
mov
fnsave
cmp
insb
sub
shlb
fidivs
fbld
adc
mov
jp
jle
or
in
bound
syscall
pop
cld
dec
inc
fcomi
into
das
inc
in
jmp
jecxz
add
xlat
int
or
mov
push
ficoms
jae
hlt
ret
push
jb
pop
fistpll
outsl
sbb
call
or
rcl
incb
push
imul
movsb
sub
inc
sbb
leave
ret
xchg
ljmp
ja
mov
adc
cmp
int3
xchg
or
movsl
sbb
cli
mov
cmp
das
pop
testb
jae
xor
je
sti
repz
inc
mov
mov
sti
jge
out
push
mov
insb
cmp
or
ja
mov
pop
push
test
insl
jle
push
fistl
ss
xchg
xor
push
rcrb
mov
shll
addr16
adc
jbe
inc
adc
movl
sbb
push
arpl
pop
jmp
sbb
push
pop
arpl
in
sbb
dec
inc
push
jnp
movsb
dec
mov
dec
les
pop
xor
xor
scas
cmpsb
push
addr16
mov
xor
or
das
xchg
icebp
fs
lods
inc
int
cmp
cs
imul
jo
mov
sbb
sbb
cmpsb
mov
cmp
mov
xchg
frstor
cld
movsl
loope
cld
js
in
jp
pushf
lods
leave
xor
push
inc
cli
add
mov
xchg
sbb
mov
es
std
dec
ds
dec
imul
mov
dec
mov
mov
mov
insl
shrb
jnp
and
lods
inc
mov
daa
mov
repz
int
inc
adc
xor
sbbl
jmp
and
cs
ja
shll
or
outsb
mov
cli
dec
push
cmp
test
push
inc
ja
imul
enter
or
pop
push
mov
imul
or
sar
sub
and
aam
xor
jne
imul
mov
es
jns
pop
push
jnp
into
sarl
or
inc
cmpsl
or
sbb
push
sbb
jae
sar
lock
fstpt
in
push
push
mov
adc
xchg
jle
inc
adc
sahf
out
cmp
dec
xor
dec
sbb
imul
push
incl
xchg
imul
and
or
push
push
xor
cmpsb
fstpt
sbb
inc
fisttps
stos
pop
call
pop
and
lock
inc
mov
sub
xchg
sub
out
lods
dec
add
add
mov
cmp
mov
imul
adc
cmp
sub
imul
ds
adc
fwait
mov
lcall
and
or
inc
popa
pop
cmp
nop
xchg
fs
add
ror
adc
scas
xor
push
sub
sbb
dec
mov
scas
xor
pop
cmp
das
mov
sbb
sub
jl
mov
in
xchg
pop
fistpl
cmp
push
popa
jno
xchg
jp
and
xor
sub
aad
and
lahf
push
frstor
mov
fdivrl
icebp
jmp
inc
shll
les
xchg
ret
or
mov
pop
jle
shlb
subl
push
pop
or
cmpsb
pop
xor
repnz
clc
mov
sub
icebp
mov
add
mov
or
insl
push
int3
hlt
fildll
and
cmp
add
lock
inc
cmc
and
add
inc
mov
xor
jb
jmp
inc
sbbl
xor
jae
and
sete
jle
adc
sub
jl
cwtl
cmpl
inc
xchg
outsb
or
stos
dec
test
movsb
mov
or
lahf
mov
cmc
jecxz
test
fiadds
xor
ja
negl
fistpl
mov
ss
push
jno
xchg
enter
inc
xchg
xchg
mov
mov
mov
js
mov
les
ficomps
sub
test
cmpsb
mov
cmpsl
cmp
mov
inc
movsb
cmp
inc
mov
popa
or
xlat
mov
arpl
mov
pop
sarb
ja
imul
out
add
cmpsb
or
aaa
hlt
stc
cmpsb
and
in
and
and
sbb
xchg
jns
xchg
dec
jmp
ret
testb
xorl
mov
jo
imul
nop
in
or
lods
and
pusha
inc
adcl
aam
ja
mov
pop
stos
xor
arpl
or
shlb
or
sbb
roll
clc
lret
fstpl
mov
mov
stc
jns
insl
dec
mov
inc
call
push
mov
ret
cld
insb
and
repnz
inc
movsb
insl
fidivrl
mov
push
xchg
int3
test
popf
outsb
sub
xorl
push
jle
fdivrl
mov
insb
in
mov
test
mov
mov
jae
pop
das
cmpsl
xchg
cmpsl
mov
or
lods
pop
jbe
mov
push
mov
pusha
notl
cmp
lea
cwtl
jp
je
fs
xchg
sbb
mov
xchg
les
mov
jno
sar
subb
dec
or
inc
int
stc
mov
arpl
int
jmp
xor
adc
ret
jg
sbb
xor
adc
dec
into
imul
xorb
push
xchg
or
outsl
push
jnp
sbb
or
lds
push
or
lahf
scas
mov
ljmp
testl
gs
aam
rcrb
out
cld
add
jge
sbb
mov
pop
sub
xchg
mov
in
dec
inc
push
xchg
in
add
xor
in
rep
xchg
fists
adc
push
dec
or
je
movsb
outsl
iret
out
fnsave
push
mov
add
mov
lea
fcomps
xorl
idivl
push
scas
orl
int3
in
popf
cmpsl
aas
jbe
add
pop
rcrl
cmpsb
inc
sbb
push
arpl
aaa
pop
lods
inc
xchg
sub
mov
inc
pop
jmp
adc
stos
mov
push
test
pop
es
sbb
ret
and
insb
fs
sbb
pop
mov
add
ss
mov
cmp
movsl
rolb
adc
call
push
xchg
xor
adc
stos
mov
push
xor
adc
mov
inc
in
push
mov
xor
push
or
cmp
popa
scas
test
xchg
xorl
xchg
xor
push
lds
pop
sahf
add
jmp
add
jnp
subb
stos
stos
leave
lock
pushf
repz
push
dec
test
pop
or
mov
xchg
xchg
sub
and
add
push
xor
pop
movsb
xor
fistpl
pop
sbb
inc
or
es
inc
call
push
push
ljmp
popf
jb
xchg
stos
inc
mov
enter
push
inc
inc
filds
push
adc
jno
int
push
mov
fs
imull
add
xchg
adc
adc
ss
gs
loopne
mov
lds
ss
xor
int
fdivl
mov
xchg
push
pusha
add
scas
lea
loope
xchg
dec
jnp
push
and
repz
pop
fstps
xchg
test
sub
sub
cmc
cmp
inc
jecxz
xorl
sub
incl
lahf
push
dec
insb
pop
dec
icebp
push
jns
in
mov
cmp
push
mov
push
push
jle
and
lock
sbb
mov
ds
add
add
pop
dec
shll
sub
adc
adc
cld
mov
int3
inc
push
pop
jl
adc
lds
inc
insl
cli
aad
sub
adc
xchg
in
ds
lret
or
or
lea
pop
insl
sbbl
ret
or
int
xor
jno
xor
xchg
fimuls
ss
xchg
scas
rcr
push
pop
cmc
ficompl
js
mov
jle
push
movsbl
jp
adc
movl
xchg
push
cmp
or
call
fdecstp
enter
out
lret
out
sbb
in
sub
pop
sar
jns
loop
cmp
pop
imul
pop
scas
mov
nop
testb
jle
sahf
repnz
cmpsb
dec
dec
pop
rcrb
std
bound
xchg
jecxz
push
inc
clc
xchg
pop
mov
out
cmp
arpl
sub
imul
mov
xchg
or
inc
mov
or
xchg
repnz
mov
shrb
jle
stos
mov
repz
in
test
push
gs
lods
xlat
out
dec
imul
push
adc
sbbl
stos
aaa
enter
cmp
xor
push
dec
loope
in
push
es
sti
movsb
outsl
fisttpl
push
incl
xlat
aaa
mov
pop
jbe
jns
adc
out
adc
bound
call
shlb
jge
repz
loopne
jnp
aaa
lahf
mov
cwtl
dec
xchg
leave
mov
out
mov
sbb
adc
mov
aas
testl
inc
mov
push
pop
pop
jbe
iret
out
pop
xor
push
adcb
pop
pop
dec
sbb
lcall
jnp
push
dec
shlb
addr16
divb
outsb
stos
fwait
adc
pop
bound
push
jae
cwtl
movb
adc
xchg
imulb
enter
test
pop
rol
call
mov
dec
mov
sbb
in
arpl
rclb
lods
in
push
mov
inc
out
subl
and
iret
jns
cli
fsubrp
fcmovbe
sbb
or
call
sub
sub
xor
andb
sub
rorb
xchg
enter
jbe
lret
andb
into
mov
repnz
fstpl
or
clc
sub
and
lods
pop
je
dec
pop
cmp
xchg
cmc
insl
push
mov
fwait
cmp
aam
cmp
call
lds
and
push
or
bound
lahf
push
and
push
cmpsl
pop
mov
sbb
add
push
andl
scas
ljmp
bound
push
xor
push
inc
lds
xchg
cmp
ds
xor
out
dec
sbb
adc
nop
xchg
test
mov
dec
jno
xchg
std
xor
lea
mov
sub
frstor
xchg
sbb
sub
jecxz
lods
adc
pop
inc
fs
sbb
ja
mov
jne
or
mov
lcall
jb
push
and
data16
leave
loop
ljmp
ljmp
inc
insb
push
jmp
fldt
xchg
cltd
ret
pop
out
lea
cmp
fmul
inc
push
mov
stc
mov
lahf
cmp
mov
jb
das
stos
out
sub
mov
sub
roll
pop
and
loope
dec
pop
pop
dec
mov
shrl
dec
jle
mov
aaa
mov
push
or
jp
fldl2t
push
or
imul
push
mov
loopne
pop
adc
dec
jb
xor
roll
jle
pop
jmp
sub
scas
fstpt
add
sbb
in
push
fists
scas
xor
je
repnz
cld
adcl
negl
or
ficompl
cmp
jg
pop
xor
xchg
int3
sbb
xor
mov
xor
les
pusha
cmp
cs
aam
sbb
js
clc
jne
fs
mov
mov
data16
sbb
rorb
es
cmp
push
jae
push
daa
or
and
ret
add
mov
push
or
push
ds
pop
call
ds
mov
call
sbb
pop
and
or
scas
gs
insb
data16
push
cmp
pop
ret
push
insl
repz
inc
jecxz
mov
andb
xor
sbb
push
mov
ret
xor
sbb
or
lods
push
clc
lds
fistl
ss
cmp
imul
in
lret
sbb
jg
test
ja
sub
pop
rol
sub
xchg
nop
shrl
xchg
mov
mov
xchg
inc
pop
fwait
xlat
pop
call
dec
lds
pop
jbe
mov
fs
mov
movsl
add
sbb
cltd
mov
scas
add
stos
jmp
lret
int3
in
ja
movsb
push
push
into
lret
push
rcrb
adc
test
xchg
icebp
mov
stos
rorb
cmpsb
data16
mov
imul
clc
mov
add
lret
push
loope
rclb
fimuls
fbld
or
xlat
fidivs
out
mov
aaa
into
jno
repz
aaa
push
mov
dec
inc
add
push
leave
inc
jle
jl
mov
arpl
mov
psrld
fidivrs
push
cmp
xchg
jmp
lret
sahf
inc
repz
cmp
incb
int3
out
aam
sub
call
sub
push
je
add
outsb
in
sub
packuswb
pusha
shr
rorb
je
mov
lret
dec
test
xor
cmp
out
arpl
lea
loop
jne
adc
dec
and
loopne
jle
mov
mul
test
mov
mov
clc
mov
jo
dec
add
pop
adc
daa
and
sub
in
dec
sarl
clc
xchg
cmpsl
sbb
flds
lods
push
iret
inc
mov
push
sbb
jae
enter
test
fsubl
mov
or
jmp
xchg
mov
clc
ljmp
scas
leave
imul
cmpsb
or
push
pop
mov
mov
or
ja
sbb
cmp
icebp
int
adcl
lods
add
fidivl
jle
mov
jo
loop
xor
jns
sahf
jmp
sub
lcall
jbe
mov
shll
arpl
cmp
sbb
dec
aam
xor
icebp
jno
pop
mov
mov
cmp
addr16
push
mov
sbb
fiaddl
mov
push
push
orl
shlb
dec
cmp
mov
fdivrs
nop
aas
jbe
js
push
sbb
aam
push
aam
and
adc
jns
lret
in
cltd
fstp
testb
pop
scas
mov
lcall
jb
pop
repnz
repz
inc
dec
lahf
mov
mov
mov
push
xchg
dec
push
pop
pop
cmp
shl
or
in
xor
cld
jbe
test
lret
je
gs
cwtl
ficoml
mov
inc
outsb
nop
pop
lahf
out
dec
cmp
fsubs
pop
inc
adc
fs
in
mov
jge
fidivrs
rcr
leave
cltd
insl
dec
fisttpl
mov
lret
push
push
jmp
out
sub
cmp
es
insl
rcrb
mov
adc
movsl
popf
pop
add
xor
inc
xchg
or
jg
mov
mov
in
mov
ljmp
aaa
mov
mov
dec
imul
inc
mov
add
adc
nop
mov
and
stos
push
ds
jg
into
xchg
push
xchg
add
xor
mov
sub
jg
push
adc
sbb
cmp
mov
jge
cmp
pop
dec
jbe
adc
iret
cmc
outsl
loopne
jp
cld
or
sti
push
pushf
xor
das
xchg
aaa
xchg
jbe
dec
mov
shrl
js
xor
sbb
and
dec
sets
xchg
fisubl
and
add
enter
inc
outsl
push
mov
mov
pop
adc
cmpsl
cmc
mov
test
pushf
mov
add
adc
pop
lea
outsb
insl
mov
andb
adc
push
add
jp
push
testb
xor
clc
decl
iret
or
dec
sbb
scas
fwait
lods
out
push
dec
jne
out
dec
xchg
popa
xchg
mov
pusha
fincstp
jne
pop
mov
fs
inc
pop
pop
arpl
jmp
cmpsl
xchg
data16
pop
rcr
mov
rorl
pop
adc
rcrl
in
push
cltd
jmp
les
loope
idiv
outsl
pop
sub
xor
in
pop
popa
mov
jne
cmp
lods
dec
int
das
fisubrs
cmc
inc
pop
fsts
divb
dec
repz
test
cmp
mov
and
sbb
jbe
add
fldcw
jae
movsl
push
or
xlat
fcoml
std
movsl
fcoml
pop
pop
test
fstp
push
mov
shlb
add
mov
pusha
sbb
jl
sbb
lahf
ss
push
jnp
xchg
addr16
fdivl
cmp
imul
loopne
fdivrl
cltd
adc
mov
je
mov
mov
jno
leave
sbb
dec
test
loop
cmc
pop
mov
dec
mov
adc
add
lods
xchg
in
cmp
pop
sub
and
mov
xor
adc
in
sub
addr16
and
mov
popa
rcrb
cli
stos
js
popa
or
outsb
add
dec
push
and
jae
cld
mov
xchg
adc
inc
bswap
xor
mov
bnd
out
dec
pop
pop
cmpsl
orb
test
jns
out
nop
adc
out
mov
pop
iret
fmull
out
mov
mov
cmpsb
and
mov
fidivrs
mov
pop
add
and
lods
out
fsub
jl
lock
cwtl
cmp
push
fdivrs
xor
js
add
mov
jae
add
ret
fsub
pop
iret
cltd
daa
or
dec
mov
repz
sub
cmp
outsl
lock
xor
pop
int3
call
jns
shll
and
out
push
cmp
xor
jae
fnstenv
add
scas
sbb
inc
ja
fisubl
fmuls
andb
roll
insb
fcmovne
inc
lret
sub
cmpsl
fdivr
bound
out
arpl
pushf
aas
pop
push
jp
stos
sub
inc
subl
nop
dec
fs
mov
mov
ficomps
push
inc
inc
jg
imul
call
cmp
in
orl
pushf
fistl
hlt
jge
dec
sbb
and
ljmp
adc
sti
aas
jae
fiaddl
fucomi
xor
popa
sti
out
bswap
iret
and
push
pop
inc
dec
popf
lahf
mulb
jae
adc
inc
pop
adc
add
roll
adc
loop,pn
daa
push
std
ror
cmp
xlat
mov
pandn
outsl
fisttps
out
das
aad
mov
repnz
aas
roll
pop
add
mov
xor
lret
fisubl
xchg
fs
jnp
jnp
mov
out
mov
lret
int3
int
dec
push
jo
inc
mov
mov
ds
pop
iret
adc
jne
rorb
mov
jmp
loope
mov
add
popf
adc
or
test
pop
cmpsb
sub
xchg
shlb
lahf
bound
std
pop
scas
and
mov
jae
bound
fwait
push
repnz
test
fistpl
scas
cmp
inc
or
cltd
adc
mov
xor
add
inc
sbb
jns,pt
xchg
inc
and
cli
mov
imul
xor
mov
inc
es
mov
je
dec
jl
test
clc
addr16
loopne
imul
mov
pop
shrl
or
push
sbb
inc
mov
js
negb
out
fldenv
pop
iret
pop
loopne
and
sbb
mov
cmp
mov
mov
pop
push
and
dec
cwtl
je
int
mov
sub
insl
sti
pop
pop
inc
cmp
fs
xor
int
pop
pop
icebp
push
fimull
mov
cmp
cwtl
mov
mov
lds
cmpsl
movsb
push
cltd
xchg
arpl
mov
pop
je
push
cmp
mov
ljmp
add
and
rcrb
pop
jmp
add
data16
mov
lea
mov
jne
jl
inc
cmp
ja
mov
cs
shlb
insl
sub
push
popa
in
inc
mov
add
pop
test
push
dec
pop
rorb
jp
add
push
adc
mov
push
pop
cs
adc
sub
push
xchg
sahf
test
rcrb
popa
add
inc
movsl
hlt
mov
inc
ds
push
xchg
or
pusha
xchg
mov
subb
push
aad
sahf
mov
aad
cwtl
mov
popf
orl
stos
lret
clc
cmp
movsb
enter
pop
dec
mov
iret
inc
loop
xorb
out
adc
jl
cltd
iret
stc
fs
imul
mov
sbb
shrl
shlb
jmp
xchg
ds
sahf
stos
aad
mov
push
lods
dec
xchg
lods
push
rol
test
fnstcw
xor
scas
jp
xor
dec
mov
movsb
stos
add
adc
push
outsb
outsb
cmp
movsl
scas
xlat
jl
fisttpll
out
into
fimull
imul
sub
mov
fisttps
repz
jge
movsl
xchg
xor
ret
cld
in
in
test
push
test
push
push
loop
fidivl
jae
pop
sbb
jp
push
cmp
adc
xchg
mov
or
fistpl
mov
mov
dec
subl
jns
pop
cmp
lock
mov
je
negb
xor
jb
mov
dec
push
dec
pusha
in
sub
pop
jns
xchg
push
imull
repz
stc
cli
inc
mov
shll
jmp
mov
sbb
jnp
decl
outsl
cmp
mov
or
int3
jbe
sbb
mov
pop
stos
mov
and
aas
jmp
cltd
xlat
jns
roll
push
and
fdivrl
lock
mov
xor
dec
ficomps
test
pop
xchg
sar
inc
sti
jb
jns
loop
lret
js
push
aaa
pushf
lock
mov
lret
push
shl
ljmp
xor
cmp
enter
xchg
add
xlat
lods
xor
test
mov
or
daa
pop
clc
call
sub
clc
cmp
fs
ja
cmc
inc
aas
xchg
out
lea
inc
stos
or
mov
insb
dec
sti
jns
mov
push
xchg
out
fstps
xchg
mov
std
in
sarl
jno
and
add
into
lcall
cmp
and
mov
mov
cmp
mov
jbe
hlt
cwtl
loopne
pop
mov
adc
pop
adc
int3
test
mov
jae
shr
or
sub
iret
faddl
mov
mov
pop
pop
fstpl
faddl
aas
ja
js
std
cs
popf
das
lods
dec
xchg
or
jmp
pop
out
gs
pop
lds
add
push
and
mov
and
rolb
imul
sti
test
fs
lret
mov
dec
cwtl
xchg
xchg
cltd
add
dec
cwtl
jns
pop
and
negl
adc
std
push
adc
insb
push
imul
and
mov
shll
mov
xchg
scas
pop
xchg
fisttpl
shl
outsb
nop
addr16
mov
fs
dec
mov
shll
pop
jne
loope
ja
dec
xlat
mov
fiadds
mov
in
rclb
cs
bnd
pop
dec
ljmp
jns
pop
cmp
mov
movsb
mov
sti
test
enter
and
sbb
mov
or
fwait
aas
and
enter
out
adc
bound
sbb
dec
dec
insl
lcall
aas
dec
pop
faddl
mov
icebp
pop
sub
sub
fstl
xlat
mov
ds
sbb
sahf
lcall
aad
mov
push
inc
xor
pop
adc
in
jmp
xchg
sbb
mov
cmpsl
pop
movsl
inc
int3
and
arpl
lcall
jp
aas
loop
loope
xor
add
in
fsubrl
or
fisttpl
xlat
sub
inc
pop
lcall
sbb
divl
popf
lock
inc
mov
nop
test
pop
loop
cmp
imul
jo
jnp
ljmp
xorl
push
pusha
shlb
mov
adc
callw
sbb
imul
out
inc
loope
ds
mov
jbe
clc
mov
rcll
xchg
xchg
or
sub
shrb
fisubrs
push
dec
pop
pusha
jmp
mov
imul
scas
ja
stos
int3
jns
adc
notb
test
inc
push
pop
xchg
mov
das
mov
sbb
decl
data16
popa
push
add
in
add
pop
adc
and
push
hlt
idivb
movsl
push
into
push
aad
jnp
testl
push
je
or
mov
and
in
jo
sub
mov
or
sbb
stc
aam
and
bound
push
je
mov
jg
push
push
pop
ret
in
lcall
mov
movsl
dec
lcall
in
xor
cmpsb
leave
add
insb
pop
cmpsb
les
cmp
or
jle
mov
es
ficoms
sub
lea
sbb
aas
pop
sub
ss
adc
inc
fs
out
mov
in
lds
fcomps
lock
jmp
out
fisttpll
repz
and
div
cmp
cmp
test
and
mov
cmpsb
aas
pop
or
mov
adc
or
lret
pushf
scas
pop
les
mov
jnp
sbb
call
movsl
pop
cwtl
cmp
or
stos
sbbb
loopne
movsl
mov
out
mov
cmp
add
repz
cmp
cmp
and
in
and
sub
imull
sub
int3
dec
dec
xor
pop
nop
push
lea
es
or
push
inc
dec
pop
push
pop
ja
loope
fwait
jae
aas
loopne
lea
add
push
fs
jmp
xor
xor
jb
pop
pop
inc
sbbb
not
in
shlb
mov
push
into
lahf
dec
test
pop
add
jge
xor
mov
mov
cmp
fiadds
mov
add
or
jmp
iret
scas
pop
add
jecxz
lds
scas
mov
icebp
xchg
push
mov
popa
xchg
testb
int3
data16
shrl
and
popa
stos
jle
mov
scas
int3
cwtl
lods
mov
pop
js
insb
fistpll
xor
sbb
in
push
push
jns
jp
adc
cmp
push
loopne
cwtl
push
adc
bound
icebp
and
out
sub
cltd
lds
shl
jecxz
dec
jle
lret
xchg
push
xor
and
flds
jmp
cmp
pop
fisttpll
fbld
sbb
add
fdivs
mov
cmpl
dec
in
pop
sub
push
inc
divb
push
int
mov
xor
mov
xor
jecxz
pop
divl
frstor
inc
add
pushf
jp
loopne
mov
nop
push
imul
lock
xor
jae
arpl
and
ss
pop
in
push
outsl
sbb
js
in
pop
mov
adc
imul
adc
mull
lcall
aaa
adc
sub
mov
cmp
push
cmpsb
and
xchg
leave
mov
testb
push
sarl
arpl
rcrl
push
dec
mov
mov
mov
mov
dec
stc
js
push
adc
sbb
add
cli
or
dec
inc
insb
loopne
in
rorl
lahf
push
jl
xchg
cmp
mov
ss
or
popf
xor
inc
subl
xchg
lahf
loopne
sbb
pop
cmp
mov
andb
inc
ljmp
scas
push
ljmp
fsub
sub
push
outsl
je
sub
mov
sbb
pop
mull
jp
scas
mov
ljmp
push
mov
mov
jne
fnsave
mov
lods
out
rorb
cmp
xlat
in
imul
push
add
ret
jg
dec
push
mov
imul
add
cmp
test
adc
ljmp
jb
clc
js
sahf
xor
jp
rorb
fs
xchg
cmpsl
jno
loope
push
mov
cmp
fcomps
add
out
dec
std
mov
cld
cli
out
cmp
lahf
jecxz
and
mov
push
mov
xchg
cmpsl
in
jo
mov
pop
adc
mov
cmp
hlt
cmp
jbe
notl
div
aaa
hlt
dec
and
fcmovbe
or
cmp
xor
repz
cs
sbb
rcrb
pop
push
imul
mov
mov
into
int
into
inc
adc
je
out
in
cld
movsb
and
xlat
mov
sahf
jp
daa
outsb
jge
add
mov
xchg
mov
inc
push
js
fldl
out
jb
push
ds
lods
xor
or
mov
mov
iret
and
lret
pmaxub
cwtl
cltd
mov
dec
mov
jle
outsb
nop
adc
orb
mov
sbb
pushf
pop
jle
xchg
add
xor
inc
mov
rcrb
sub
callw
push
jbe
push
mov
shlb
pop
and
jl
mov
sbb
lea
xor
addb
test
lock
jo
lret
clc
pop
sub
push
mov
fwait
sbb
mov
push
das
push
lahf
mov
xor
sub
inc
push
arpl
mov
std
sahf
bound
jb
std
jne
xor
mov
dec
loope
jecxz
stc
out
mov
adc
out
lock
icebp
or
sbb
mov
stos
xor
test
dec
jne
popa
xor
popa
lcall
scas
sysexit
insl
xor
pushf
shll
sti
cld
push
in
lret
mov
push
sahf
dec
cmp
cmpl
fstl
sbb
pop
lds
ss
test
mov
lock
mov
sbb
push
push
or
adc
es
mov
cltd
out
nop
push
jns
push
divl
sub
push
xlat
xchg
pop
call
imul
aaa
mov
das
fwait
push
fdivrs
dec
jp
daa
test
daa
mov
and
sbb
push
int
and
cmp
mov
dec
jb
inc
es
jae
inc
mov
mov
test
nop
xchg
sub
fisttpl
mov
xor
sbb
gs
cmp
loop
mov
mov
add
xchg
xchg
imul
popf
js
add
pop
mov
aad
add
aaa
sub
sar
out
xchg
jns
mov
std
add
sbb
icebp
add
sbb
das
roll
outsb
imul
cmp
int
mov
mov
push
xchg
mov
and
test
cmp
jl
lahf
fnsave
xchg
imul
xor
push
inc
add
push
cmp
aam
push
xchg
out
cwtl
hlt
pop
jmp
cmpsl
jmp
shll
jo
mov
jns
mov
adc
adc
ja
jp
xchg
jl
add
fucom
shll
repz
imull
or
mov
mov
sub
mov
xlat
mov
ficoms
add
jmp
xchg
push
inc
fmuls
jmp
mov
jne
in
mov
cmpsl
div
mov
mov
mov
sub
ljmp
inc
insl
mov
add
mov
insl
out
jg
push
jmp
pop
imul
pop
pop
mov
fisttps
inc
ror
jg
add
shrl
jbe
jnp
scas
gs
or
mov
xor
ljmp
sarb
outsl
adc
in
mov
ss
es
push
icebp
jge
idivb
sub
cmpl
outsb
adc
movsl
outsl
xlat
repz
push
rorl
int3
and
add
dec
pop
aas
mov
lcall
loope
cmpsb
jp
and
xchg
in
dec
pop
es
mov
lret
xchg
pop
imul
cmpb
lahf
fwait
lcall
sbbl
into
and
cmpsl
addb
shrl
cmp
push
dec
and
jge
and
das
enter
xchg
stc
inc
push
ret
mov
testb
and
sti
inc
add
outsl
cmpsl
jns
push
push
ret
mov
lret
mov
popf
xchg
test
push
pop
mov
adc
stc
int
push
pop
sqrtps
mov
int
ret
pop
push
add
fistl
jb
sbb
pushw
dec
data16
add
sub
fucomp
les
jne
push
sbb
xchg
push
sub
ret
incl
jge
dec
mov
dec
jbe
dec
dec
xor
ljmp
mov
mov
push
sbb
outsl
push
repnz
sub
pop
mov
jns
lcall
jecxz
or
or
loopne
rorb
loopne
iret
neg
ljmp
xor
mov
jno
fmuls
dec
aas
sbbb
sub
jne
loope
ljmp
xchg
dec
dec
jno
xchg
sub
adc
fstl
pop
sbb
add
leavew
mov
pushf
les
sub
pop
test
cmp
inc
cs
and
sti
pop
jl
stc
lods
add
push
inc
ljmp
adc
push
add
dec
movsl
pusha
out
cmpb
mov
mov
movsb
pop
cmp
or
ljmp
add
aad
or
mov
repnz
lret
push
cmp
and
lods
sbb
cwtl
adc
sbb
mov
fldenv
in
mov
mov
add
out
addr16
scas
outsl
xor
test
jne
fpatan
mov
clc
nop
in
add
add
sub
add
gs
jnp
mov
fistl
push
cmovbe
out
jbe
es
cmp
cmp
lret
stc
inc
in
mov
push
sbb
mov
pop
cli
jl
fucomi
cld
das
mov
int
cmp
aas
stos
push
adc
outsb
add
dec
dec
lret
aad
ljmp
cmc
insb
or
shufps
shll
inc
and
dec
push
adc
sahf
or
cwtl
rcll
adc
push
data16
out
stos
mov
imul
pop
gs
dec
and
mov
jl
loope
dec
pop
sub
mov
js
pop
sub
or
xchg
out
add
or
mov
mov
mov
push
ljmp
call
pushf
jmp
sbb
mov
xchg
and
mov
es
mov
xor
cmp
jb
insb
mov
dec
orl
sub
repz
repnz
nop
es
sqrtps
push
pop
xor
xor
add
push
adcl
mov
xor
shll
pusha
imul
add
ret
lods
lds
jo
loop
filds
jl
mov
jg
dec
les
mov
add
scas
push
xor
ret
movd
daa
subb
movsb
mov
push
cmpsb
mov
jae
lcall
movsl
sbb
pusha
in
xor
cmp
push
or
shl
cmp
sahf
jmp
xchg
imul
dec
pop
arpl
test
je
outsb
pop
mov
jp
std
cmpsl
out
xor
lock
int
jecxz
pushf
add
adc
or
sbb
ret
test
cli
xlat
xchg
fdivs
cltd
insl
repz
mov
push
mov
cs
inc
adc
outsb
xchg
lock
xchg
es
xor
dec
pop
call
iret
push
test
lods
insl
pop
and
sbb
pop
andb
sbb
or
movsl
repnz
ds
lcall
inc
or
aad
xchg
pushf
mov
cmpsb
gs
aam
dec
repnz
and
adc
jp
call
std
xor
xor
inc
add
popf
xchg
mov
fidivs
jno
sahf
lds
iret
mov
sub
dec
adc
adc
cmp
pop
jmp
enter
lock
mov
imul
inc
jmp
js
mov
dec
cmp
loope
dec
cmc
and
xorl
dec
mov
cmp
shlb
clc
mov
sub
loopne
shlb
inc
fcoms
dec
cmpsl
mov
lahf
cwtl
jb
xor
call
mov
neg
jp
jae
push
add
imul
insl
stos
mov
out
sub
sub
daa
pop
js
pop
test
inc
xchg
lcall
adc
adc
add
xchg
push
xor
pop
fs
mov
loop
inc
ret
popa
adc
in
pop
mov
mov
data16
dec
adc
cmp
sub
jecxz
xchg
inc
fidivl
data16
mov
xchg
es
out
sbbb
loopne
mov
andl
mov
repz
push
push
cmp
repnz
mov
sbb
sub
mov
pop
jne
loop
jl
das
and
mov
cmpsl
scas
add
add
xor
das
mov
or
sti
es
inc
imul
cmp
pop
inc
pop
repz
dec
nop
mov
mov
clc
call
sbb
pusha
add
adc
mov
ds
fidivrs
jnp
jl
jo
jg
or
xor
add
pop
subb
adc
insb
mov
and
push
push
xchg
jb
dec
out
int
inc
out
ret
mov
cmp
dec
loope
movsb
inc
cmp
test
inc
adc
adc
popa
jmp
dec
or
std
pop
mov
vaddss
xchg
sub
rorl
sub
lock
fisttpll
leave
cmp
enter
test
ret
addr16
ja
mov
jno
mov
ret
pop
jae
mov
out
into
inc
test
out
leave
jl
push
sub
mov
int
insl
mov
dec
sub
ss
in
inc
je
mov
lret
daa
mov
adc
xor
int3
movsl
dec
adc
scas
cmp
jp
jne
sub
xchg
mov
cmp
jno
mov
mov
cmpsb
in
pop
inc
mov
mov
repnz
xchg
cld
lods
leave
mov
adc
jbe
loopne
in
jnp
test
jl
scas
lds
and
int
mov
add
mov
scas
es
and
enter
outsb
imul
mov
inc
cmpsl
and
jno
pushf
icebp
mov
stc
pop
push
jge
in
cmp
test
and
xchg
mov
fld
push
cwtl
lds
fisubrs
sbb
mov
sahf
test
mov
mov
mov
fisubrl
or
cmp
ret
xchg
rcl
inc
jns
pusha
and
jno
pushf
cmpsb
ljmp
shll
pop
stc
aad
movsl
popf
or
push
jmp
dec
jnp
sub
jbe
xchg
push
into
in
mov
ljmp
xchg
fisubl
aad
push
cmp
out
or
inc
mov
pop
mov
mov
sarb
adc
pushf
dec
pop
mov
sub
iret
inc
sbb
mov
sub
jbe
adc
sti
fsts
rclb
lahf
inc
clc
add
lcall
sbbb
loop
test
daa
push
dec
ds
jge
inc
je
repz
ret
scas
inc
hlt
dec
bound
fnstsw
jmp
mov
xor
xor
cmp
ja
aad
jbe
sti
int3
imul
dec
xor
int
cmc
inc
repz
jge
inc
mov
repnz
jg
ret
test
rcrl
cli
adc
and
sbb
mov
push
out
inc
outsb
mov
rorl
adc
pop
pusha
and
add
xchg
ds
xchg
pop
and
mov
int
mov
js
loope
andb
pop
and
out
lods
sub
xchg
mov
es
shrb
ret
add
mulb
pop
out
mov
aaa
xor
cmp
sub
mov
fs
scas
jg
inc
inc
adc
sbb
lock
imul
pop
jo
jnp
arpl
ror
mov
imul
and
stc
sahf
xchg
and
jbe
dec
and
outsl
and
cmp
or
or
cs
xor
popf
mov
sbb
loope
xchg
dec
cmp
dec
and
imul
lea
or
data16
sahf
dec
or
and
js
push
xor
in
inc
xlat
int
rorl
addr16
lcall
and
aaa
xchg
sub
mov
jl
insb
dec
das
loopne
dec
cwtl
leave
leave
out
out
dec
add
cmpsb
lods
jns
jp
inc
adc
xor
and
outsb
jl
popa
outsb
sub
test
sbb
inc
pop
pop
mov
rcll
lds
add
int
inc
and
pop
xchg
cmpsb
or
xchg
pop
aad
lea
pop
xor
mov
testb
sub
pop
push
or
jp
adc
ja
cmp
addr16
sub
mov
ds
jge
pop
add
dec
mov
std
jne
adcl
lds
lock
jmp
jns
lds
push
cld
jo
arpl
cmp
mov
cmp
cmp
dec
in
or
dec
sti
addb
jno
adc
call
cli
xlat
cmp
inc
fstl
adc
into
popa
jmp
push
jge
loopne
stos
loope
arpl
sub
jnp
mov
dec
cmc
mov
cmp
into
adcl
aaa
push
call
into
negb
and
push
filds
subb
lcall
adc
mov
je
pop
mov
popa
and
pushl
jg
push
imul
testl
mov
adc
xchg
xchg
xor
push
sbb
or
stc
jae
js
scas
call
pop
loope
mov
push
je
push
scas
cltd
dec
xchg
cwtl
inc
xchg
add
add
in
das
fbstp
rorl
mov
adc
js
cmp
fsubl
js
mov
incb
mov
aad
lock
insl
out
pop
jnp
rcr
cmp
fistl
dec
lret
pop
jge
in
inc
add
lcall
sbb
dec
scas
dec
mov
fcompl
ret
imul
mov
dec
mov
js
flds
add
mov
or
mov
mov
cmc
add
aaa
mov
je
das
pop
scas
outsl
lcall
push
loopne
adc
addl
mov
jecxz
daa
mov
out
hlt
push
add
pop
mov
jecxz
push
inc
test
loop
lods
rorb
popf
adc
fwait
sub
push
xor
je
flds
in
dec
xchg
xor
lods
xor
xchg
xlat
imul
xchg
cmp
out
cmp
faddp
jge
adc
mov
xchg
rolb
arpl
mov
lret
xchg
dec
push
lahf
inc
and
xchg
jmp
and
xlat
xchg
test
je
cmp
mov
dec
in
mov
notl
jne
and
pop
ret
stos
xorl
jle
ss
in
shrl
aas
outsl
jg
cmp
fnstenv
in
test
addr16
popf
les
or
arpl
mov
jno
cwtl
adc
xchg
mov
xor
sbb
inc
cwtl
test
pop
mov
cmc
es
jecxz
scas
and
mov
mov
sub
jns
jl
push
lret
je
push
lcall
bound
loope
sbb
adc
inc
xor
push
lret
es
inc
jns
loopne
jp
fs
cmp
push
shrb
fadd
mov
stos
leave
pop
adc
mov
mov
push
jmp
ds
daa
aas
xor
outsl
iret
adc
adc
push
aad
and
mov
jns
outsb
stc
lcall
mov
addl
jl
mov
rcr
dec
nop
test
test
test
xchg
push
jns
jns
test
cli
aad
push
sarb
nop
sub
int
inc
fnstenv
test
sub
aaa
mov
hlt
ret
cld
add
or
call
or
mov
push
flds
jo
shrl
mov
scas
test
sub
dec
sbb
divl
sahf
add
push
push
cmpsb
mov
pop
insb
mov
jg
repz
rcr
sti
cld
inc
mov
pop
test
sbb
mov
mov
pop
xchg
jle
push
outsb
mov
fmul
aas
lea
jb
movsl
jno
inc
popf
adc
pop
lcall
add
mov
cld
jle
sarb
add
call
addr16
mov
insb
mov
int
repz
sbb
push
push
ljmp
adc
xchg
xchg
popa
jae
sbb
sub
lcall
sbb
and
xor
insb
fstpt
push
nop
mov
mov
jl
ljmp
pop
das
mov
imul
shrb
xor
mov
sbb
fwait
push
cmp
clc
mov
push
mov
inc
mov
dec
mov
test
shlb
rep
lcall
mov
and
arpl
int
jge
loopne
dec
inc
mov
mov
push
rcll
jne
pop
xchg
mov
mov
cmp
xchg
adcl
in
xor
jo
movsb
fucomi
push
jmp
or
loopne
rcrl
jl
and
arpl
sti
jle
inc
dec
fcmovbe
xlat
mov
test
push
gs
fwait
mov
push
jmp
fildll
push
and
stos
lods
iret
repz
adc
adc
pop
mov
nop
xor
sbb
mov
xor
test
test
cmpsl
es
dec
fs
hlt
arpl
lods
aaa
inc
xchg
enter
mov
push
cmp
pop
add
mov
mov
cmp
js
mov
sbb
sbb
add
mov
xchg
xlat
fcoml
mov
cmp
xor
loope
test
mov
fmuls
push
insb
dec
mov
int
mov
inc
sahf
mov
lock
test
mov
bound
mov
fs
out
jae
in
ret
mov
inc
fistpll
cmp
add
pop
je
mov
sti
out
das
inc
scas
pop
or
test
in
mov
sti
ret
and
add
or
ret
push
test
pop
push
add
ret
sub
sub
sbb
pop
mov
jmp
mov
int3
inc
mov
les
fcompl
mov
in
sbb
aam
xchg
stc
sti
xor
cmp
push
cli
xchg
fabs
ljmp
push
mov
mov
sub
lds
pop
addr16
adc
inc
stc
stos
pop
fwait
push
call
out
std
inc
adc
dec
bound
outsb
adcl
mov
orb
and
cltd
jne
jno
fnsave
rcrb
bound
cs
test
negl
popa
int3
ret
inc
sbb
stos
cmpsl
divl
push
add
sar
rcrb
pop
jb
push
daa
mov
test
mov
and
and
movsb
insl
or
iret
aam
dec
and
aam
sub
lea
mov
daa
test
rorb
mov
mov
xor
loopne
mov
mov
in
test
dec
repnz
into
adc
dec
cmp
cltd
or
push
loopne
xchg
xor
mov
xchg
cmp
dec
or
pop
in
fst
mov
xchg
xchg
jo
xchg
dec
pop
arpl
in
or
jo
mov
scas
mov
popl
clc
outsb
inc
lea
lods
jge
popf
imull
xchg
out
ficoms
mov
int3
out
nop
xor
adc
aam
cmpsl
jne
mov
cmpsl
mov
fcompl
cmp
andb
popa
ret
popf
testb
jae
xor
xchg
test
icebp
xchg
loop
add
xchg
pop
jge
lret
dec
adc
xor
adc
or
dec
cmpsb
push
lds
int
ret
push
sti
sbb
int3
adcl
add
das
fwait
dec
jnp
xchg
popf
jg
stos
out
xchg
shl
adc
sbb
pop
sub
cli
jmp
dec
test
sub
mov
mov
jp
and
add
push
xchg
pop
sbb
mov
rclb
in
pop
ljmp
sbb
and
pushf
data16
lcall
lods
pop
out
out
mov
mov
call
sarb
push
xchg
int
pop
enter
cmpb
sub
mov
sbbl
jge
push
loopne
mov
lods
adc
push
fs
inc
dec
fisubrl
xor
mov
adc
ljmp
cmc
fistpll
flds
xchg
pop
sahf
xchg
mov
inc
or
jecxz
dec
lds
orb
jp
fwait
adc
inc
in
dec
pop
inc
sub
dec
iret
nop
outsl
outsb
jg
std
stos
pop
push
outsl
inc
sub
and
xor
pop
mov
outsl
mov
mov
iret
sub
xchg
cwtl
sub
bound
add
pop
xor
sti
in
push
nop
js
loopne
sbb
add
push
scas
addr16
pusha
cmp
xchg
outsb
push
sahf
pop
imul
repnz
pusha
mov
add
mov
pop
into
adc
pop
test
pop
enter
lds
pop
pop
nop
xor
push
pop
enter
mov
mov
ret
inc
inc
push
mov
jmp
in
dec
inc
push
fstpl
daa
or
in
fwait
mov
in
dec
and
xchg
notl
bound
dec
pop
cld
and
jns
mov
push
aam
cmc
js
or
ret
push
mov
lds
ret
leave
mov
mov
mov
pop
add
sbb
jbe
fs
rcll
push
mov
sti
or
in
sbb
or
or
cmc
mov
adc
test
enter
pop
fwait
push
xchg
cli
imul
push
push
cmpl
dec
mov
jg
roll
xor
mov
jmp
jl
xor
push
es
lods
pop
mov
mov
inc
test
test
idivb
xchg
lret
fninit
adc
adc
mov
cmp
adc
or
dec
imul
jne
sub
daa
in
mov
dec
sbb
std
rorl
cmp
pop
daa
faddl
mov
pop
stos
lds
dec
cltd
nop
and
jmp
addr16
mov
addr16
push
pop
mov
jle
daa
loope
mov
add
jnp
mov
leave
sub
xchg
adc
aam
stc
into
jbe
or
push
or
aas
dec
mov
loope
enter
mov
push
pushf
and
lods
cmp
xor
cmpsl
pop
mov
loop
and
pusha
sub
lcall
dec
sbb
lcall
imul
mov
icebp
push
adc
arpl
mov
pop
lods
push
addl
sub
jbe
or
arpl
sub
lock
aaa
rolb
xchg
mov
push
jno
out
test
xor
ss
cmp
mov
inc
out
out
xor
adc
in
lea
mov
stc
xchg
clc
loop
in
add
inc
mov
jmp
push
inc
cmpsb
dec
or
mov
lret
jns
test
popf
mov
dec
mov
lock
mov
in
fwait
adc
xchg
dec
pop
int3
lahf
xchg
push
mov
push
push
repnz
add
sub
daa
lret
or
mov
inc
inc
daa
dec
jmp
mov
pusha
sub
in
inc
jb
mov
and
sbb
test
fidivrl
test
push
dec
inc
cmp
xor
mov
aam
inc
sub
mov
push
xchg
or
dec
pusha
mov
test
pop
lahf
jae
cmpsb
lahf
push
rcll
lods
jne
pop
xchg
xor
or
and
pop
fcmove
or
add
ss
cwtl
push
dec
push
mov
push
js
es
rcrb
xchg
sub
pop
data16
sti
cmp
pop
loopne
sbb
and
data16
ss
cmp
inc
je
mov
mov
and
shlb
xor
add
cmp
mov
loop
test
push
or
stos
jnp
in
fldenv
add
push
jg
nop
jo
add
lea
sti
stos
sbb
xchg
cmpsl
inc
sbb
jp
xlat
rcrb
jbe
cmp
inc
scas
call
xchg
jecxz
out
popf
aaa
ret
jne
lahf
pop
xchg
sbb
jb
cli
mov
dec
push
cmpb
shlb
loope
push
push
lods
lret
push
loope
pop
lahf
movsb
inc
inc
ss
jo
xor
mov
call
dec
inc
out
push
jmp
mov
adc
sub
add
adc
cmpsl
shl
bound
pop
gs
popa
fisttps
adc
add
call
jnp
shrl
lahf
push
xor
daa
scas
jno
push
movsb
pop
test
push
mov
ds
pop
loop
test
out
popa
sub
cmp
fsubrp
push
sub
jne
mov
rcrb
jae
jge
adc
pop
add
xchg
ljmp
pop
les
imull
cmp
add
inc
outsl
popa
je
aas
neg
dec
mov
xchg
xor
cmc
test
out
mov
lret
cmp
lock
in
sbb
or
imul
push
mov
popf
out
cmp
and
lea
fbld
or
mov
aad
and
mov
mov
and
in
adc
movsb
dec
lahf
sbb
in
xor
or
mov
or
out
sbb
lods
and
or
pop
dec
dec
jbe
pop
icebp
pop
dec
cltd
rep
or
xor
add
jae
insl
xchg
ljmp
or
decb
aas
mov
mov
dec
les
cltd
jns
jmp
push
and
mov
xor
lea
cmp
hlt
das
xor
inc
and
or
dec
mov
xor
adc
xor
jnp
loopne
adc
xlat
cmp
xchg
or
mov
aam
test
sub
cmp
loope
and
jae
nop
fiadds
fwait
pop
andb
movsl
dec
pop
das
pop
push
ret
psadbw
stos
or
or
popa
nop
push
jle
xchg
inc
xlat
stc
and
out
gs
fdivrp
inc
xor
das
xor
pop
fadds
pop
pop
clc
xor
stos
xor
adc
and
std
push
iret
pop
xchg
rol
xor
es
ficompl
repnz
ss
xchg
iret
inc
shl
hlt
mov
outsb
int
js
imul
lret
pop
inc
fbstp
cltd
push
cmc
xchg
pop
lock
sbb
addr16
outsb
dec
sti
jmp
int3
inc
dec
sbb
sub
dec
lcall
testb
bound
iret
addb
repnz
imull
and
subl
dec
out
push
in
push
push
dec
lret
aaa
push
push
popa
xchg
jns
mov
pop
and
shll
outsl
pop
xchg
arpl
outsl
xchg
addr16
xchg
pop
fisubrl
test
sbb
insb
into
in
or
testl
cmp
sbb
sbb
cmp
mov
rep
lock
out
out
pop
pop
cli
push
mov
int
repz
inc
cmp
dec
mov
inc
lods
js
xor
fwait
enter
insl
sbb
lret
int3
jb
cmp
insb
int3
ljmp
cmp
imul
leave
pop
lock
push
adc
sub
scas
inc
loop
lock
mov
fdivr
push
xor
mov
sub
call
cltd
outsb
push
shrb
adc
ljmp
dec
mov
shrb
mov
and
arpl
call
mov
mov
lret
xchg
sbb
outsl
push
mov
inc
das
popa
std
pop
jg
aas
subb
adc
or
loopne
push
in
icebp
jns
and
adc
jno
jno
jge
int3
dec
and
xchg
and
inc
sar
jnp
mov
sub
xor
adc
scas
dec
hlt
adc
movsl
in
out
aaa
and
cmc
lahf
shl
mov
cmp
cmp
shll
aas
sub
int
lret
addr16
add
shrl
imul
sbb
adc
pop
repz
fcmove
jg
xchg
stos
cmpsl
push
ja
ret
nop
rcll
out
scas
sahf
inc
jg
mov
mov
sbbl
aas
push
ljmp
loop
mov
das
jg
pop
mov
xchg
adc
jne
pop
push
mov
mov
lock
adc
stos
jo
cmp
lret
mov
jg
pop
scas
pop
add
mov
lret
cltd
repnz
fidivrs
inc
or
dec
adc
sub
jo
in
repz
cmp
fnclex
dec
bound
cmp
fimull
scas
jp
sub
dec
xor
push
imul
js
aam
mov
adc
mov
cwtl
ret
sbb
hlt
inc
ret
aaa
cmp
std
leave
push
cmp
clc
enter
lods
fadd
jno
leave
mov
adc
adcl
std
sbb
xlat
pop
je
and
ja
pop
cltd
dec
pop
into
push
jnp
es
dec
mov
xchg
movsb
xchg
mov
pop
jge
xor
sub
mov
jnp
out
adc
sbb
cld
test
inc
cmp
push
push
out
ds
test
dec
xchg
jmp
add
adc
jp
add
push
movsb
lock
or
insl
cmp
adc
aad
sahf
fnstcw
or
inc
add
outsl
dec
adc
add
fnstcw
insb
dec
jbe
iret
mov
pop
mov
cmp
and
pop
sub
and
add
inc
mov
dec
int
jp
mov
xor
outsl
pop
add
pop
dec
cs
mov
pop
hlt
out
xchg
sbb
xor
nop
repnz
and
adc
push
mov
in
loopne
fmull
mov
adc
add
loope
xchg
xor
inc
mov
add
lcall
push
push
xchg
push
cmp
iret
pop
push
xor
push
mov
or
fdivrp
xchg
je
leave
sbb
inc
push
push
cli
out
adc
in
lahf
clc
dec
or
sbb
in
push
popf
pop
sbb
call
mov
lods
cmp
jae
ret
nop
mov
aas
adc
cltd
les
scas
push
xor
xchg
and
test
dec
sahf
bound
rolb
mov
dec
mov
test
sub
aaa
sub
xchg
in
pop
std
jp,pt
aam
pushf
lods
fucomip
repnz
mov
test
data16
lds
and
test
inc
repz
call
adc
int
pop
in
or
cmp
adc
stc
xchg
jb
getsec
dec
les
arpl
mov
cwtl
push
cmp
addb
sar
call
xchg
das
push
arpl
inc
fists
lods
mov
sahf
dec
iret
stc
ja
lcall
xchg
xchg
cltd
fidivrs
inc
rcrl
jmp
pop
je
testb
scas
dec
add
punpckhbw
sti
out
fiaddl
pop
pop
or
lret
sbb
loopne
push
pop
jl
leave
mov
nop
ficoml
call
cmp
xor
das
dec
add
ficompl
or
loopne
and
roll
das
xchg
mov
scas
jnp
jo
mov
ljmp
push
lret
jb
nop
adc
loopne
or
test
push
pop
js
inc
add
hlt
mov
in
xor
xor
fisubrs
testl
pop
idivb
push
lea
or
ret
call
ss
nop
xlat
xchg
out
leave
add
repz
jge
leave
and
inc
cmpsb
je
xlat
scas
adc
mov
sub
sbbb
push
dec
aam
pushl
ss
loopne
in
lods
rolb
jge
movsl
push
lea
push
cmp
dec
xor
enter
cmp
movl
imul
insl
sub
in
add
fldl2t
cli
clc
sbb
inc
imul
adc
into
adc
lds
das
test
lcall
lea
addl
pop
aam
in
or
push
inc
cmp
ret
cmp
push
mov
enter
mov
adc
push
mulps
aaa
into
in
sub
xor
outsl
lods
lahf
neg
in
mov
sub
jo
clc
es
jl
sub
call
sub
aad
fdivs
test
push
ret
icebp
rcll
cmpl
sub
je
pop
push
cmp
data16
xchg
aad
xor
hlt
lcall
mov
inc
inc
xchg
jnp
test
repnz
push
jmp
push
and
or
test
lods
xchg
sbb
aam
fbstp
mov
xlat
xchg
jne
mov
movsl
sbb
ljmp
bound
dec
mov
push
jp
jle
xchg
and
mov
in
jmp
push
lods
xlat
cmp
push
popa
int3
pop
jecxz
bound
xchg
mov
mov
cmp
pop
clc
mov
orps
or
cmpb
cmp
sub
and
add
xchg
mov
push
fcmovnu
jmp
aad
pop
lcall
xor
push
test
pop
arpl
inc
pop
call
lea
pop
fdivr
cmp
lock
das
aaa
arpl
subl
xchg
push
cmp
mov
pop
mov
fwait
jb
fwait
adc
dec
lcall
sarl
test
mov
hlt
shl
inc
gs
repz
fistpll
scas
aas
movsl
pop
cmc
xor
inc
testb
adc
xor
out
out
mov
sbbb
add
push
jg
out
mov
addr16
or
rorb
fwait
movsb
lock
mov
decb
cwtl
adc
addr16
cmp
sub
jecxz
jo
enter
cli
mov
and
dec
or
insb
or
hlt
and
pop
jle
movsb
rorb
lock
inc
and
push
mov
ror
cltd
pushf
test
push
mov
xchg
sub
inc
inc
and
inc
mov
flds
jne
das
and
add
push
xor
loope
sub
lea
cmpsb
arpl
mov
jb
push
icebp
shr
dec
push
cmp
mov
xchg
and
cmp
mov
jg
ret
jecxz
pushf
scas
das
cmp
mov
add
push
stc
xor
jbe
notb
or
mov
push
imul
xchg
lods
pop
nop
mov
test
movsl
add
mov
arpl
jae
push
cld
mov
add
sbb
push
int
insb
lcall
nop
ja
in
xor
out
push
repz
sbb
sub
clc
stc
pop
aad
pop
loopne
stos
pop
cmp
and
sub
js
sub
dec
cmpsl
les
cmp
data16
pop
mov
pop
xchg
insb
push
adcl
repz
cmp
insl
mov
shr
mov
mov
push
ds
pop
lcall
movsl
sbb
rcl
hlt
hlt
xchg
mov
or
push
scas
fstpl
xchg
push
and
add
lret
icebp
push
jne
jmp
stc
int
cmp
dec
sub
ret
mov
lock
inc
or
xor
jnp
lret
fstpl
push
vpmacssdd
xor
ljmp
stos
fwait
in
mov
and
les
loopne
mov
and
or
rcrl
push
mov
push
lcall
add
sub
aad
cltd
cwtl
xchg
in
cld
pop
jbe
inc
enter
cmpsb
inc
std
jo
fdivrs
pop
xchg
mov
mov
jne
in
in
ds
and
mov
out
mov
push
out
cmp
and
out
lods
xor
sbbl
fsubl
ljmp
and
adc
or
sar
daa
sub
cmp
or
adc
or
in
mov
jbe
aas
icebp
xor
loope
insb
pop
shrb
and
jno
xor
pushf
out
loop
mov
cmc
xor
or
vmaxps
dec
cli
mov
mov
test
mov
cld
fcmove
mov
and
push
jnp
mov
add
push
xchg
test
mov
gs
adc
xchg
aas
les
rclb
lea
and
iret
test
push
in
push
cmp
jl
fwait
stc
divl
sbb
lahf
dec
inc
fwait
cwtl
insb
xchg
sbb
mov
jno
xlat
sub
imul
stos
insl
test
in
std
fisubrl
loop
stos
adc
jmp
pusha
adc
add
jb
cs
jo
les
cmp
mov
ja
dec
dec
mov
test
push
inc
xlat
xchg
inc
lock
stos
ljmp
cmp
fdivr
leave
sub
in
adc
cld
inc
aaa
push
fsubl
mov
sbb
mov
arpl
mov
call
jge
mov
int3
popf
into
pop
add
pusha
and
lods
popa
gs
sub
repnz
push
xchg
sti
cltd
orl
mov
mov
les
mov
js
mov
insb
push
sbb
fnstcw
sbb
sub
push
gs
mov
cs
sub
cld
loopne
hlt
movsl
in
mov
add
adc
adc
xor
aaa
push
mov
pop
sti
pop
add
mov
fsubl
icebp
xor
xlat
lock
dec
or
popa
stos
inc
add
push
pushf
sub
pushf
sub
sub
dec
mulb
loope
cmp
inc
adc
jns
jbe
xchg
cmp
cmp
pop
pop
cmpsl
cmp
sub
jle
repnz
sarb
pop
out
dec
out
mov
roll
or
stos
xchg
movsl
xor
nop
leave
push
add
inc
mov
mov
fidivrl
xchg
pop
jo
xchg
sub
mov
test
cmp
fwait
mul
bound
xor
ljmp
and
xchg
aaa
inc
sbb
mov
in
push
adc
into
mov
testl
cli
jno
sbb
jnp
sbb
jmp
lods
je
inc
mov
push
push
cmp
sub
ror
cmc
out
xor
jg
lods
in
mov
pop
orb
inc
aad
push
and
cmp
rcl
mov
add
and
std
cmpsb
add
cld
sahf
dec
mov
dec
push
pop
add
out
xor
dec
adc
insl
or
xor
out
shr
insl
movsb
shlb
stos
add
pop
dec
mov
subl
insb
arpl
ret
inc
cmp
push
cltd
mov
push
sbb
xor
xchg
cs
pusha
fmull
add
adc
mov
negl
push
cmp
mov
js
test
adcb
jl
push
inc
pop
std
and
jne
in
out
mov
loop
inc
adc
cmpl
lea
sub
mov
stc
sbb
nop
push
sahf
clc
mov
and
mov
jne
lahf
incl
out
sbb
int3
cmp
pop
cli
adc
data16
sti
movb
mov
mov
movsb
mov
lock
jae
and
subl
in
lea
lret
pop
sub
stos
insb
cmp
mov
xorl
mov
test
sub
outsl
push
mov
pop
and
push
lds
leave
rcr
jae
push
xchg
jb
xor
pop
cmp
xor
jge
outsb
into
popa
pop
pushf
add
mov
es
rolb
shlb
mov
ja
cltd
push
mov
jae
inc
cmp
add
cmp
test
inc
mov
mov
lcall
jne
inc
daa
lret
aas
cltd
push
xchg
out
int3
stos
fdivs
outsl
sub
or
mov
mov
jmp
leave
push
rcl
test
subb
es
gs
fwait
jmp
mov
xchg
gs
cmc
push
shlb
repnz
jecxz
xchg
jge
outsb
aas
mov
mov
movsl
aad
add
sub
adc
push
rcrl
pop
inc
pop
xchg
in
mov
popa
xchg
nop
dec
inc
adc
dec
lret
pop
js
jle
lcall
mov
mov
push
icebp
and
fmull
outsl
movsb
fsubrl
aas
popf
in
call
pushf
add
mov
push
popl
xchg
test
dec
mov
imul
gs
shll
xor
clc
roll
push
sti
cmp
mov
pop
fdivrs
rol
cwtl
mov
cltd
sub
icebp
cmp
push
and
mov
je
insl
cld
les
xchg
loope
push
push
loope
and
fdivrs
mov
into
pop
jne
ja
push
pop
imul
out
pop
adcl
sbb
jb
mov
test
pop
outsb
or
sub
mov
push
xor
cmp
push
jp
cwtl
cmp
jp
add
imul
cwtl
in
xchg
das
out
push
jge
sub
dec
loopne
lods
sub
repz
rcrl
inc
push
push
call
pop
pmaddwd
jg
test
jl
sbb
xor
pop
dec
adc
mov
imull
sbb
cmpsb
xchg
faddl
jae
jnp
mov
test
test
inc
cs
and
aaa
leave
dec
sahf
mov
daa
rol
je
mov
pop
mov
adc
pop
mov
in
adc
sti
xor
fbld
arpl
out
xchg
lret
push
mov
fbld
mov
std
cltd
or
cmp
jl
lret
mov
test
lcall
pop
into
in
sbb
xor
ljmp
stos
hlt
xchg
out
pop
cmp
movl
adc
aam
test
icebp
inc
jl
std
bound
lret
hlt
xchg
and
fwait
or
add
cmpsb
movsb
inc
push
cld
fisttpll
push
in
mov
xchg
movsl
pop
sbb
lret
push
or
lds
pop
ret
mov
ja
adc
mov
fisttpl
adc
sub
fwait
inc
rcr
push
mov
out
adcb
push
movsl
nop
sbb
notb
outsb
and
clc
or
fcmovb
pop
adc
fs
push
inc
sbb
push
imull
xchg
pusha
ja
dec
aam
jns
push
and
pop
mov
xor
leave
xchg
jne
ss
lcall
pop
cs
ror
pop
cmp
test
iret
jle
fistps
insl
or
aad
pop
dec
dec
lret
mov
pop
je
mov
xor
and
adc
xor
jmp
and
xor
icebp
push
pop
lret
pop
lock
and
iret
sbb
mov
push
cmp
and
imul
popf
jno
lea
xor
popf
pop
leave
xchg
sbb
mov
fistps
jmp
lret
jp
xchg
outsb
cli
repz
dec
fcmovu
in
cmp
sbb
push
in
in
mov
jne
push
std
shrb
push
xor
sti
mov
icebp
aad
mov
jmp
mov
int3
outsb
mov
les
mov
mull
ficomps
pop
mov
scas
shl
subb
sub
xchg
push
sbb
test
mov
add
mov
xlat
mov
dec
mov
mov
out
hlt
jl
mov
scas
or
pop
jmp
and
inc
jl
and
push
mov
mov
or
sbb
repnz
push
or
ret
rcrb
sub
lock
mov
int
add
inc
leave
dec
jp
mov
pop
cmpb
mov
movsl
call
ss
mov
lock
mov
inc
xor
dec
movb
aam
mov
mov
mov
shlb
gs
insl
mov
push
dec
or
mov
cmp
out
inc
or
xor
mov
inc
push
dec
adcb
mov
out
inc
mov
jg
jp
repz
ret
adc
ret
mov
sub
mov
add
outsb
jnp
sbb
push
mov
lret
daa
cmp
pushf
push
in
lods
popf
in
pop
mov
popa
xor
xchg
test
pusha
add
sti
push
cmpsl
sti
fstps
cltd
cmpsb
mov
shrb
popa
xchg
outsb
mov
int3
shlb
inc
outsl
adc
mov
out
in
aam
and
cmp
out
pop
add
mov
inc
add
jnp
adc
pop
testb
add
icebp
mov
cltd
add
add
push
cs
sub
jno
pop
aad
stos
ret
jg
aam
jg
mov
arpl
dec
ret
gs
movsb
inc
ljmp
lea
mov
push
or
push
pop
out
cwtl
nop
jb
mov
jns
les
lcall
inc
popf
popf
sub
cmp
or
sti
ret
bound
aad
test
stos
mov
lods
adc
fistl
xchg
outsl
adc
movsb
shll
mov
jno
je
lcall
fldl
ret
sbb
orl
lret
fs
lea
or
dec
loope
dec
pushf
rol
lcall
add
xchg
sar
mov
into
leave
in
xchg
bound
inc
push
push
out
outsl
pop
inc
sub
mov
inc
in
lret
adc
imul
cwtl
inc
push
pusha
pop
sub
mov
es
mov
orl
and
mov
push
xor
and
mov
mov
mov
pop
mov
pop
in
ljmp
sub
pushf
and
insb
repnz
jb
scas
push
pop
and
sbb
int
pop
pusha
outsb
pop
imul
pop
ret
cwtl
sti
mov
mov
fimull
xchg
dec
cld
inc
sbb
addr16
jp
xchg
push
call
out
push
dec
sti
fcompl
sbbb
add
repz
push
and
fstps
mov
or
scas
mov
jg
add
testb
or
sub
cli
mov
pop
mov
adc
xchg
push
pxor
and
add
pop
sbbb
lods
add
push
inc
stc
sahf
or
aas
jbe
inc
mov
aas
popf
jle
pusha
push
pushf
pop
pop
cmp
mov
add
fildl
inc
test
pop
jp
leave
aaa
jp
call
lahf
out
scas
sub
aaa
dec
pop
and
mull
sbb
add
shrl
cmp
jecxz
addr16
outsb
push
stos
mov
push
add
xor
divb
jg
pop
mov
sahf
sub
cmc
repz
ljmp
pop
xor
cmpsb
cmpsb
mov
or
xchg
loopne
repnz
lahf
cmp
in
pop
mov
fdivl
cld
cwtl
fnstsw
mov
sbb
pushf
shll
dec
mov
mov
outsl
mov
rcl
add
das
fs
ss
cltd
dec
ret
xchg
data16
outsb
lock
bound
lock
aam
cli
arpl
lods
xorb
in
ficoml
cli
inc
inc
insl
scas
nop
test
sbb
mov
es
pop
bound
ljmp
sub
and
mov
mov
xchg
jo
jnp
mov
sub
or
sbb
jne
out
inc
cwtl
mov
clc
mov
fstpl
notl
pop
jb
jo
pop
call
ja
imul
mov
fistl
and
inc
jns
mov
sbbl
adc
insb
je
mov
imul
mov
cmp
in
ret
sbb
fidivs
mov
shlb
cmp
mov
daa
fildll
jl
fcoms
orb
das
mov
adcb
lret
das
call
push
out
outsb
repnz
out
mov
push
inc
inc
inc
test
xlat
shl
ret
pop
stos
push
or
mov
push
push
pushf
out
add
cmp
shll
dec
cmp
pushf
add
aaa
push
xor
daa
ds
or
into
call
or
pop
and
in
ds
aaa
movsl
sub
xchg
and
adc
aas
mov
rolb
push
aad
sbb
cs
outsb
mov
pop
dec
fnsave
arpl
mov
jp
in
add
callw
inc
cld
dec
adc
lret
xchg
addl
pop
sbb
shll
sti
lcall
lcall
test
dec
xor
repnz
mov
rcrl
push
or
arpl
pop
mov
sub
movsb
jnp
xchg
dec
push
sbb
int3
xor
sarb
insb
pushf
sub
insl
pop
dec
inc
sarb
ffreep
mov
addr16
shrl
lock
mov
push
js
stos
push
push
cmpsb
push
insb
daa
jmp
mov
inc
imul
into
fsubr
sub
add
sub
xor
cmp
push
cmp
mov
cmp
push
rol
mov
jbe
sbb
popf
add
push
cmp
add
pushf
and
sub
repnz
pop
test
loope
pop
scas
repz
jbe
dec
jns
or
aam
or
dec
js
adc
sub
add
xchg
cmp
push
inc
or
cmp
shll
and
jecxz
xchg
xor
stos
gs
mov
fisttpll
aas
js
sahf
daa
pop
mov
test
dec
pop
testb
pop
stos
dec
and
xor
push
cmp
and
pop
lods
popa
cld
add
dec
cmp
sbb
jmp
out
cltd
fimuls
and
xchg
insb
int
jae
pushf
outsb
out
test
push
out
aam
out
jbe
push
test
or
mov
mov
push
push
pop
push
addr16
and
cmc
arpl
jbe
testb
inc
loopne
mov
jnp
fsubrs
arpl
mov
xchg
fcmovnbe
ret
lods
xor
fwait
iret
sbb
jnp
pop
sub
sahf
ljmp
fisttps
lret
aad
sub
adc
clc
icebp
mov
sub
icebp
xchg
mov
cltd
addr16
mov
pop
adc
das
rcrb
mov
adc
sar
jmp
jo
in
movsl
pusha
sub
dec
xchg
adc
or
mov
jae
fs
lods
es
cmp
cmovae
das
add
daa
fists
xchg
pusha
dec
push
add
repnz
mov
mov
jo
push
dec
mov
add
cmp
adc
js
ret
xchg
push
mov
outsl
mov
push
and
ss
and
in
dec
pop
test
scas
cmp
jo
or
andb
xchg
icebp
aam
dec
jb
bound
mov
loop
mov
xchg
add
cmp
pop
pop
xchg
je
mov
fists
lods
jnp
out
movsl
fsubrl
add
int3
lcall
adc
or
cmp
adc
aam
xchg
sub
cmpl
mov
or
shlb
in
sbb
mov
cltd
dec
popa
mov
xor
das
mov
push
pop
call
lea
psubq
in
sub
jno
lret
sbb
sub
call
mulb
test
mov
adc
clc
xor
call
push
pop
jle
push
mov
jns
inc
test
cli
adc
mov
aam
hlt
push
push
popf
pop
shlb
pop
sarb
adc
lahf
push
ret
div
repz
out
push
or
cmpsl
not
inc
or
cmc
pop
sub
jne
leave
push
xlat
frstor
sbb
jae
dec
js
jns
jbe
or
sub
inc
push
pop
cmp
in
in
sub
ljmp
pop
and
mov
ror
int
mov
popf
sahf
cwtl
lret
aam
aam
pushf
sbb
lret
dec
test
xchg
pop
and
cmc
jne
and
sub
imul
aam
lods
insl
push
and
sete
arpl
cmpl
les
nop
add
xor
lea
and
in
jmp
cmpsb
fs
ss
bound
add
fnstcw
jle
mov
leave
jl
imulb
pop
cld
loope
pop
mov
fdivrp
scas
mov
out
xor
push
es
fisubs
in
bound
leave
rcr
xchg
aam
test
pop
iret
mov
mov
pop
fildll
jmp
push
xchg
adcl
sub
sub
lret
scas
cltd
jo
gs
dec
cmp
xor
dec
and
movsl
popa
sub
es
lods
xchg
and
fsubl
adc
fs
mov
test
inc
xor
jl
dec
mov
pop
xchg
addr16
les
repnz
or
add
jecxz
stc
mov
xchg
gs
jnp
mov
mov
and
jmp
cmp
ret
and
les
cmp
dec
lret
jns
rol
pop
movsb
pop
adc
aaa
leave
and
xor
das
frstor
sub
stc
rorb
test
pop
add
test
cmp
insb
aam
sbb
movsb
ljmp
pop
cld
sbb
fnstenv
scas
mov
jbe
loope
insb
out
fdivs
sbb
out
xor
jo
inc
add
jmp
cmp
dec
js
push
out
jne
dec
dec
js
cmp
and
push
xchg
pop
shlb
mov
lods
mov
inc
xchg
fists
scas
xchg
mov
out
stc
pop
cs
sbb
orl
xchg
mov
int3
adc
shl
push
dec
fdivrs
iret
inc
dec
cmpsb
ds
loop,pn
decb
cld
test
or
xchg
sbb
add
mov
rcrl
cmp
bound
cmpsb
xchg
mov
mov
addr16
mov
nop
push
xchg
mov
push
pop
sub
out
shrb
test
pop
test
or
adc
ror
or
lret
insb
out
xchg
int3
push
cmp
fisubl
and
dec
filds
push
mov
fcomp
add
fcmovnb
cs
pushf
pushf
jp
movsb
xor
jg
lret
mov
mov
jecxz
pop
ss
fnstenv
divb
loope
mov
push
push
call
mov
push
sbb
gs
pop
cwtl
xchg
cli
imul
shr
push
xchg
aas
es
xlat
test
jbe
add
jnp
sti
mov
out
mov
mov
sub
inc
mov
in
pop
sbb
push
dec
out
xor
aad
fists
mov
cmp
arpl
pop
cmpsl
jp
or
jge
lock
xchg
lods
fisttpll
and
insb
xchg
ds
mov
pop
outsl
cmp
or
sbb
mov
inc
or
cmpsl
push
pop
add
loope
les
data16
jbe
hlt
jge
es
nop
inc
pop
les
mov
dec
in
mov
push
cmp
popa
inc
and
xchg
push
sub
dec
cmp
inc
dec
test
scas
test
jle
test
sahf
stc
jno
sub
gs
jae
pop
fimuls
xor
sbb
add
lods
mov
cwtl
push
jge
pushf
sbb
jecxz
mov
push
cmp
fisttpll
and
repnz
jae
mov
ds
les
dec
rclb
clc
mov
into
mov
scas
nop
dec
jns
dec
mov
mov
sbb
jmp
test
lods
cltd
cli
stc
lds
icebp
pop
xchg
das
cmp
mov
push
movsl
mov
js
shrl
std
pop
or
mov
out
inc
cltd
dec
mov
cmp
pop
andb
mov
sub
je
push
popl
inc
pop
loop
add
add
mov
lret
push
jno
mov
push
bound
scas
push
add
or
movsl
and
dec
sub
sub
sbb
inc
and
jge
js
jo
sarb
cld
repz
cld
xchg
loopne
popf
push
rorl
dec
jecxz
and
jno
outsb
std
loope
popf
in
xchg
mov
add
movsl
sbb
cmp
sbb
mov
outsl
subl
mov
movsl
mov
add
sub
jg
sub
mov
jno
and
push
test
dec
pop
out
adc
ret
xlat
ljmp
lds
inc
fs
jae
ja
cltd
xchg
lahf
insl
movsl
xor
ds
outsl
hlt
jne
mov
out
call
add
adc
push
fisttpll
push
pop
cli
push
push
test
xor
test
xchg
pop
mov
mov
xchg
adc
std
jge
mov
mov
mov
cmp
stc
jg
fwait
into
out
stos
and
push
insb
dec
sbbb
aaa
cltd
sub
push
sahf
fwait
subb
fidivrs
add
popa
jns
mov
in
mov
xchg
cs
jge
mov
imul
nop
movsl
mov
and
add
sbb
cmpsb
dec
sbb
gs
int3
mov
sti
arpl
lcall
and
addr16
xor
jg
pop
pop
add
xor
adc
jno
in
lahf
xor
sbb
xlat
or
jb
outsl
mov
xor
fisubrs
bound
mov
push
adc
push
inc
cltd
push
jg
icebp
sub
daa
lods
sbb
iret
lods
pop
xor
push
cld
pop
and
jbe
xchg
adc
pop
or
mov
push
hlt
xchg
or
xchg
je
cmp
sub
xchg
andb
fsub
inc
xchg
bound
cmp
or
cwtl
xor
xchg
mov
mov
test
arpl
mov
xrelease
aaa
jmp
xor
insl
mov
cmp
repz
push
out
or
mov
xlat
jp
dec
scas
jnp
xchg
gs
cmpb
js
repnz
lea
mov
sbb
int
test
enter
popa
mov
mov
xor
ret
enter
aam
js
dec
mov
rcr
xchg
arpl
push
in
scas
sbb
in
jae
inc
mov
sarb
dec
fucomi
push
stos
mov
cmp
mov
push
into
and
xchg
icebp
imul
lods
cltd
out
push
jne
inc
jl,pt
in
repnz
aam
mov
inc
mov
rcll
rolb
add
mov
inc
stos
arpl
or
cltd
add
ret
sbb
mov
mov
lret
mov
movsb
jg
insl
dec
or
jns
inc
ret
into
jo
jo
xchg
lahf
mov
lock
mov
rcrb
xor
dec
std
xor
dec
nop
js
pop
lods
cwtl
fwait
xchg
adc
fidivrs
aaa
cmp
pushf
cmp
jno
mov
or
inc
add
xchg
arpl
lods
into
aaa
xor
jne
jb
pushf
out
pushf
mov
mov
cmp
dec
mov
rorl
mov
fisubrs
stos
movsb
and
add
in
lret
xchg
adc
jno
test
and
lret
out
clc
bound
faddl
inc
sahf
mov
imul
push
pop
out
push
mov
fsubrl
lret
not
repz
dec
push
push
jns
movsl
dec
dec
mov
adc
popa
push
and
inc
fidivrs
cmp
dec
push
lods
fldenv
mov
inc
dec
inc
jnp
cs
pop
enter
repz
xchg
sbb
les
pop
jle
push
lahf
outsb
vmovhpd
aaa
pop
je
jg
in
aas
in
xor
fcompl
mov
sbbb
hlt
adc
bound
and
fs
mov
arpl
mov
push
fsubr
xchg
gs
sarl
out
sbb
ret
mov
mov
jnp
fsubl
mov
inc
enter
xor
mov
inc
fdiv
icebp
inc
daa
adc
or
scas
pushf
das
fadds
insl
pop
jns
mov
add
pusha
inc
push
outsb
mov
testl
add
dec
repz
loopne
add
stc
sbb
push
test
rclb
jg
mov
and
or
inc
push
lret
push
out
sub
jle
rcll
sbb
adc
scas
iret
lcall
mov
sub
dec
push
faddl
sti
scas
sbb
cmp
out
pop
pop
cs
sbb
lods
push
adc
scas
xchg
or
dec
add
lock
push
or
mov
out
pushf
cli
xor
mov
cmp
fdivl
ja
dec
pop
adc
cltd
cmc
mov
dec
cmp
loopne
xchg
in
hlt
outsl
mov
ds
js
adc
add
add
mov
mov
add
in
jge
pushf
and
ds
loopne
outsb
test
scas
repz
jb
or
pop
aam
hlt
mov
jne
mov
lcall
std
jle
add
jecxz
jg
xchg
or
scas
dec
mov
cmp
fldt
mov
es
sbb
loop
add
inc
jge
and
add
sub
jne
gs
movsl
mov
push
push
movsb
jmp
std
cmp
rclb
fiaddl
xchg
sub
sarb
inc
cltd
aam
jl
xorl
outsb
and
lock
int
and
daa
cmp
sub
jae
xlat
push
lret
inc
ret
ret
ror
out
jne
dec
mov
push
mov
pop
xor
and
xchg
bound
push
pusha
addl
add
cs
or
adc
loope
and
sub
cmc
sbb
add
ljmp
push
adc
and
cmpl
sbb
add
and
pop
fsubp
add
rclb
cmp
xchg
xchg
jne
dec
jae
shrl
cltd
or
aaa
loope
pop
cmp
xchg
nop
lea
sahf
fmuls
mov
lret
negb
push
push
xor
jp
cld
lock
test
adc
fadds
lea
mov
cltd
pusha
xchg
loopne
ret
xchg
adc
lret
outsb
shl
daa
mov
sub
sbb
mov
sbb
pop
push
push
je
mov
cmp
inc
push
or
mov
or
sub
js
insl
mov
pop
xchg
out
es
add
jecxz
cmpsb
fdivrl
not
add
xor
xchg
int3
aam
dec
adc
sarl
rcr
jle
pop
ljmp
xchg
push
lock
pop
repnz
mov
test
cmp
inc
push
les
lea
mov
fdivs
adc
arpl
cld
divl
movsl
jbe
imul
mov
adc
insb
mov
int
and
pop
mov
adc
jle
push
mov
sub
add
hlt
mov
xchg
shrl
push
or
imul
or
test
rorb
dec
fcom
js
lods
sub
bnd
in
dec
dec
xchg
ss
dec
mov
inc
mov
jecxz
xor
js
push
adc
xor
mov
jns
sbbb
aas
cltd
insl
ja
sbbl
popa
loope
test
sbb
add
aaa
inc
lcall
cmc
pop
add
in
cli
ja
adc
daa
rcrl
add
pop
es
mov
fwait
push
int
cwtl
adc
mov
sub
cmp
mov
pop
push
mov
cmc
inc
test
repnz
pop
out
or
jmp
in
repnz
mov
mov
out
pop
mov
lahf
dec
adc
adc
rcll
std
inc
imul
xor
adc
inc
mov
inc
inc
add
icebp
xchg
ja
ja
pop
scas
insl
imul
pop
dec
pop
sub
jns
pop
pop
jp
push
leave
add
jmp
insb
shll
pop
lcall
movsb
sbb
mov
dec
das
push
mov
or
test
and
pop
out
js
xor
data16
mov
xor
loopne,pn
mov
dec
sub
enter
inc
mov
jl
sti
dec
jmp
mov
movsb
push
xchg
jl
negl
out
pop
mov
cmp
test
mov
add
mov
sub
jns
dec
or
out
or
jno
cmpsl
lret
xor
add
mov
add
sbb
xlat
cwtl
lcall
and
xor
mov
or
jns
add
xchg
push
aaa
jno
pop
insl
popa
or
xor
dec
xchg
xor
test
add
mov
jbe
in
enter
fsts
clc
sbb
leave
mov
xchg
mov
push
mov
dec
and
popa
fsubrs
inc
xchg
dec
push
xorw
js
imul
mov
loop
std
lea
lds
or
or
mov
and
xchg
sbb
dec
xor
clc
sbb
or
sbb
addr16
fwait
jo
ret
in
stos
fnstsw
pop
cli
push
out
shr
mov
aaa
mov
lcall
in
hlt
fs
jno
mov
xchg
imulb
mov
js
bound
xlat
add
cwtl
fiadds
test
pop
or
test
pop
mov
aam
cmp
push
adc
adc
push
iret
out
imul
arpl
pop
add
mov
pop
fiadds
loope
push
push
call
test
mov
fwait
jbe
adc
inc
sub
push
imulw
lret
push
inc
icebp
jns
fimull
int
jecxz
outsl
push
divps
inc
inc
call
jle
push
fisttpl
jp
arpl
push
lods
js
pop
cld
imulb
sbb
cmpsb
popf
enter
jge
loope
mov
dec
sbb
ljmp
mov
pop
add
pusha
cmp
mov
and
pop
js
pop
repnz
xor
fs
lods
cmp
jg
adc
or
push
adc
add
in
insl
add
or
jae
fldln2
cltd
lods
lcall
aaa
adc
mov
int
or
inc
ret
jns
lcall
dec
fs
and
ret
fnclex
ljmp
mov
dec
xchg
mov
mov
insb
adc
ss
je
lret
push
hlt
jl
push
cmc
push
inc
cmp
repnz
test
bound
das
insb
popf
jg
mov
out
ret
inc
push
loop
loope
jge
ss
mov
lock
ds
cli
sbb
pop
or
or
cli
lret
cmp
jnp
mov
dec
std
xor
ljmp
sbb
repz
iret
loopne
cs
test
mov
adc
out
push
mov
push
mov
imul
enter
sbb
das
movsl
ret
shll
sbb
inc
scas
or
int
clc
push
xor
incl
movsb
repz
push
ret
fldcw
ret
pop
out
cmp
outsb
dec
add
addr16
mov
xchg
mov
mov
push
das
fs
adc
je
adc
and
adc
inc
out
or
cwtl
lcall
repnz
jne
mov
jo
lods
jns
inc
popf
lds
add
repz
mov
stos
push
or
jns
dec
sbb
into
xor
lret
push
das
sub
arpl
cltd
mov
xlat
and
or
cli
add
in
inc
cmp
or
popf
nop
adc
sub
gs
and
jnp
call
jb
aaa
jge
iret
and
sbbb
xchg
mov
bound
jb
adc
icebp
jo
aam
in
bound
sti
lcall
sub
add
cmp
xlat
and
repz
in
loopne
test
daa
add
pop
or
lods
aam
and
sar
fiadds
scas
xor
or
mov
inc
nop
and
adcl
jp
sti
mov
mov
cmp
sbbb
leave
xor
mov
gs
pop
cmpsb
in
inc
in
lret
dec
xor
ja
or
pop
add
shrl
adc
nop
inc
inc
jecxz
popl
and
repnz
push
lahf
push
dec
scas
sbb
xor
out
xchg
cmp
adc
outsl
hlt
or
rolb
ss
xor
lock
mov
push
daa
xor
xchg
xlat
jle,pn
jg
rclb
pop
xorb
aad
movsl
or
rorl
cmp
fst
push
mov
pop
lret
ds
cli
xchg
ds
cld
xchg
jae
lods
sbb
mov
push
xor
push
and
dec
sbb
out
and
inc
cmc
jge
pop
arpl
insl
inc
ja
sti
and
or
dec
movsb
or
mov
jmp
das
push
push
loop
dec
rcrb
aad
mov
orl
sub
push
fildl
mov
sbb
or
add
cs
jne
stos
sahf
lahf
jnp
jne
out
outsb
jns
call
mov
mov
icebp
cmc
div
xor
or
add
scas
aad
push
shll
sbb
cmpsl
lahf
testl
xchg
testb
cmp
xchg
add
mov
mov
cmp
cmp
sub
clc
out
sub
jnp
sti
leave
aad
pop
popf
push
adc
ret
fisttpll
push
adc
xchg
sbb
frstor
push
dec
sub
fldcw
icebp
jmp
and
pop
and
negl
cs
mov
lret
in
dec
testl
or
sti
add
test
push
cmc
push
mov
pop
mov
xor
daa
mov
test
cmpsl
in
xchg
mov
sbbl
lret
popa
loope
fistpl
int
loope
jg
out
mov
xor
cmp
jne
or
sahf
add
push
cmp
jnp
inc
cmp
aaa
mov
es
dec
fstps
push
test
sbb
or
ds
adc
ret
iret
ret
xor
lds
scas
cli
outsb
adc
jns
inc
inc
sahf
push
pop
push
dec
outsb
movsl
sub
ret
mov
jmp
lret
repnz
mov
loopne
dec
ja
sub
outsb
or
push
push
fistpl
and
dec
mov
inc
fsubrl
xor
push
dec
mov
out
test
lret
fwait
xchg
cs
pusha
fcoms
mov
pop
lret
cmp
jne
xchg
pop
stos
jge
push
inc
pop
std
dec
insl
jns
movsb
out
mov
cmc
rcr
xlat
jno
int3
adc
loope
add
fisubrs
mov
sahf
aaa
mov
clc
fs
mov
add
dec
inc
jmp
xor
push
mov
int
popf
js
test
cltd
cli
pop
mov
sarl
add
push
pop
add
fists
jle
xchg
push
sub
in
aaa
in
mov
dec
and
dec
daa
outsl
insb
shrl
mov
pop
movsb
xchg
imul
push
dec
mov
pop
ret
je
pop
pop
push
jne
movsb
add
or
pop
dec
or
push
add
mov
icebp
jae
inc
lret
idivl
daa
lahf
test
int
lahf
sbbl
pop
in
or
test
push
loopne
push
push
jl
cmpsb
jmp
outsb
enter
popf
jb
and
jo
fwait
std
imul
jp
es
or
leave
call
ja
add
sub
sub
inc
out
adc
or
je
cmp
rcrb
cltd
shll
subb
jle
inc
xchg
in
jle
inc
xlat
in
fldenv
and
lret
sub
xlat
cltd
lret
xchg
stc
cmc
in
js
inc
inc
jae
test
adc
out
outsl
or
mov
andl
into
sbb
push
jmp
sub
sbb
inc
out
mov
sub
push
scas
sbbl
inc
cmp
inc
in
enter
or
bound
lods
lock
xor
mov
xchg
test
jb
daa
aam
bound
inc
enter
pop
cwtl
in
rorb
sub
sbb
cwtl
mov
fwait
dec
mov
xchg
cmp
dec
stc
xchg
dec
mov
or
pop
mov
inc
inc
iret
fildll
rclb
sbb
leave
or
out
mov
cltd
inc
jge
gs
pop
pop
adc
add
sbb
test
and
mov
jmp
and
cs
pop
mov
jecxz
nop
out
imul
jno
or
push
jo
add
inc
cmc
sub
mov
shlb
imul
and
pop
adc
add
cmpsl
scas
in
inc
dec
sub
dec
fdivp
add
bound
sub
movb
inc
xchg
test
int
enter
data16
jp
push
mov
rclb
scas
lret
pop
mov
mov
pop
mov
hlt
push
fsub
mov
inc
popa
jno
sbb
xor
mov
add
sahf
pop
add
rcrl
jmp
dec
push
sahf
sbb
jo
call
mov
jo
outsb
or
mov
mov
cmp
loopne
pop
in
shlb
int3
sub
aam
mov
pop
xchg
cli
gs
xor
fsub
mov
and
add
jp
hlt
pop
nop
cmpsb
mov
pop
ficompl
cmc
es
add
mov
out
cwtl
adc
pop
or
cmp
mov
mov
movb
pop
jg
xchg
xchg
testl
imul
decl
arpl
sti
jne
jle
cmp
cmp
or
icebp
sbb
arpl
jo
xchg
add
mov
add
adc
imul
push
fs
fdivrp
jl
jp
rcrb
mov
and
aaa
pop
xchg
sub
and
data16
xor
inc
movsl
jb
mov
pop
pop
inc
adc
adc
ljmp
es
outsl
adc
mov
cmp
leave
sbb
pop
cmp
jb
pop
int3
mov
push
mov
scas
and
xor
mov
fsts
mov
cltd
adc
pop
out
push
jo
add
jno
push
adc
xchg
xchg
xchg
add
into
mov
push
popa
js
jbe
fsubrl
mov
push
pusha
pop
in
jp
mov
xchg
add
cmpsb
fistpl
xchg
cmp
xchg
push
pop
lcall
mov
inc
inc
or
aad
cmp
jp
sub
insl
jnp
das
pop
notb
mov
pop
push
addb
jae
adc
aaa
pop
cs
xchg
test
out
stos
movsl
les
push
nop
insl
addr16
push
ret
or
xchg
aad
movsb
push
inc
inc
jmp
hlt
clc
outsl
pop
pop
xor
inc
and
loop
daa
mov
mul
jb
fcoml
adc
ret
clc
add
adc
xchg
call
mov
mov
cmp
sar
ss
scas
xchg
hlt
ret
int
sbb
jbe
cmp
js
fsubl
sbb
loopne
loop
push
push
cmp
stc
ret
jge
lock
dec
dec
xor
call
pushf
jl
and
scas
cmp
add
jae
mov
pop
xchg
dec
int3
adc
push
xlat
cltd
sbbb
xor
lret
das
xchg
leave
mov
es
sbb
popl
jae
pop
mov
pusha
out
add
inc
cmp
sbb
xor
mov
sbb
out
test
push
mov
sub
mov
pop
scas
xchg
inc
jnp
clc
pushl
lret
aaa
xor
imulb
xor
fnstcw
in
and
repz
loope
btr
imul
add
push
push
les
aaa
xchg
mov
loop
call
mov
pusha
xchg
mov
mov
sub
and
xchg
jmp
or
push
into
ret
dec
sbb
andb
call
pushf
mov
movsl
pusha
mov
push
xorb
push
test
jne
mov
pop
jge
xchg
jae
cwtl
fwait
xchg
inc
lock
xchg
jae
out
fadds
mov
pop
movsl
addl
push
fidivrl
iret
stos
xchg
mov
mov
pop
aad
mov
jb
dec
popf
jl
xor
pop
lds
rorb
and
inc
dec
sub
jmp
rorl
fsubrs
ss
mov
pop
adc
mov
mov
jb
sub
inc
inc
jl
out
in
in
rcrl
shl
add
push
outsl
sub
fcomps
in
int
adc
ficoml
cmpsl
insl
stc
mov
fldt
out
push
popf
adc
fsubrl
mov
push
or
cld
fs
mov
mov
xchg
push
adc
insb
cwtl
adc
out
mov
std
push
cwtl
and
lcall
inc
add
add
jno
push
test
pop
pop
mov
hlt
mov
lcall
jnp
movsl
xor
fdivrs
push
pop
insl
out
out
push
aaa
ljmp
cltd
outsb
fcomps
repz
sub
mov
movsb
xchg
dec
sub
sar
movsb
add
adc
mov
popa
xor
clc
adc
mov
mov
sub
push
mov
pop
mov
push
xor
jne
xchg
gs
and
mov
add
mov
push
cmc
xor
jnp
ret
dec
push
xchg
mov
stc
inc
cmc
mov
xchg
push
inc
add
mov
xlat
in
popf
pusha
clc
pop
mov
test
or
add
sub
sarl
clc
jmp
call
inc
pusha
inc
inc
xchg
push
cli
cld
sub
inc
sbb
inc
dec
pop
jno
in
inc
punpckhwd
lea
ljmp
sahf
cwtl
mov
jl
or
xchg
pop
gs
fistl
js
sbb
mov
mov
aad
push
cmpl
subb
inc
xchg
inc
dec
xor
pusha
addl
fcoms
out
stc
push
mov
mov
mov
idivl
loope
out
pop
adc
sub
js
or
xchg
adc
inc
pushf
adc
mov
dec
adc
inc
leave
cs
sahf
popf
nop
mov
jae
lea
fst
jno
aam
fistpl
xor
nop
mov
ss
sub
push
mov
pop
orb
fsubs
pop
leave
cmp
icebp
pop
xor
movsb
mov
mov
sbb
add
add
out
jno
andl
js
int3
and
cmp
xor
inc
ss
xchg
pop
fcompl
jecxz
cld
int3
loop
push
mov
sub
and
jns
push
sub
scas
test
jp
jle
fneni(8087
sbb
out
adc
push
inc
xor
jge
add
je
repnz
pop
lret
mov
inc
imul
sub
jle
push
add
adc
jp
inc
int
orb
sbb
jecxz
popf
adc
inc
adc
xor
jle
sub
js
adc
push
ret
or
fidivs
les
cmc
aam
sbb
mov
pop
out
pop
in
and
stc
lods
out
or
cmc
mov
pop
cwtl
mov
cld
and
cmp
xor
arpl
rorl
insl
and
jno
sbb
sbb
mov
adc
push
mov
inc
add
sti
xchg
imul
pop
cmpsl
push
mov
in
jecxz
dec
jmp
call
outsb
fstp
cmp
ja
mov
pmuludq
mov
stc
adc
int3
cmc
mov
mov
push
fcoms
es
sbb
aad
in
mov
jge
push
push
inc
cmpsb
rclb
and
and
out
mov
dec
push
or
push
mulb
sar
lcall
movsb
mov
loope
sahf
jae
xchg
fdivr
mov
pop
dec
adc
test
jg
pop
mov
cmp
stos
mov
imul
out
adc
rol
add
fs
imul
es
mov
ja
das
mov
sbb
and
mov
test
adc
and
jl
in
inc
ss
jecxz
sahf
ror
mov
cwtl
xlat
lds
adc
arpl
xor
in
xor
jns
fsubl
dec
subb
call
inc
dec
sbb
call
push
loope
adc
dec
aas
call
mov
pop
arpl
lods
mov
push
fs
jg
dec
int3
mov
fildll
pop
push
jecxz
test
xlat
insl
mov
ds
hlt
mov
stc
mov
aaa
inc
xor
iret
push
in
push
dec
cmovne
stc
movsb
test
int3
mov
mul
lds
insb
call
lods
sub
jle
push
in
pop
inc
call
cmp
sbb
cmp
cs
and
data16
and
out
push
rcll
jle
mov
stos
mov
mov
dec
rolb
sbb
push
jb
inc
and
frstor
push
push
popf
sbb
lock
mov
fnstsw
addr16
xor
pop
or
jp
add
add
testb
das
rclb
cmpsl
mov
cltd
sti
add
mov
xor
fldenv
adc
das
lret
push
test
sbb
add
xchg
pop
fildl
fimull
mov
stc
xor
sbb
mov
cmc
call
sbb
cmp
mov
mov
cmp
jg
pop
add
jmp
lds
inc
lods
mov
sbb
adc
in
mov
cmp
fsubrl
push
imul
xor
xchg
lods
pop
fldcw
daa
sub
cmpsl
mov
jl
jmp
cmp
xorb
mov
or
shlb
cmp
or
pop
popf
jl
cld
mov
ja
jecxz
adc
shlb
mov
test
in
mov
add
inc
push
add
push
jno
stc
std
push
aas
push
jl
cli
fimuls
mov
add
push
push
aaa
pop
adc
sub
es
mov
outsl
sbb
loope
xlat
movsl
xchg
mov
cwtl
aam
pop
dec
cmc
fldenv
or
inc
add
movsl
pusha
inc
adc
and
adc
xchg
in
sbb
popa
dec
outsl
stos
aas
lcall
test
xor
test
push
outsl
sahf
cmpl
sbb
fisttpl
or
inc
mov
pop
in
inc
add
inc
pop
fs
rcl
dec
js
pop
fisubl
mov
and
and
mov
sbb
pop
dec
fmull
push
xchg
dec
push
call
cmp
pop
cmpsl
lods
push
jo
ror
in
js
pop
fwait
loopne
fsubl
pop
pop
xchg
je
neg
push
out
jae
dec
add
in
jns
push
adc
mov
test
fadd
mov
fldenv
inc
cld
js
in
call
or
repnz
jo
mov
outsb
popf
stos
rorl
add
pusha
into
pop
int3
jmp
dec
adc
pop
daa
in
mov
cld
cwtl
or
dec
jns
add
into
pop
fneni(8087
cmc
fnstenv
xor
stos
or
roll
shl
inc
lds
test
sub
sarl
mov
out
cmp
jmp
xlat
nop
jnp
jecxz
jmp
sahf
dec
faddl
imulb
into
and
shr
or
xchg
call
sahf
addr16
xor
mov
pop
and
or
lcall
add
clc
test
loop
test
sbb
setnp
neg
out
jbe
mov
sbb
or
pushf
mov
mov
push
inc
das
and
in
cltd
aam
dec
sbb
mov
cli
inc
lods
stc
add
adc
mov
imul
stos
fstl
lret
aaa
fucomi
lods
jae
mov
jg
mov
pusha
pop
sbbb
mov
sub
dec
fdiv
test
sbb
jnp
push
sbb
xchg
addr16
mov
insl
cmc
mov
fldl
inc
sbb
add
jno
leave
mov
xchg
sbb
movsb
mov
jb
scas
pop
adc
push
sub
lret
in
fxam
mov
pop
jmp
clc
movsl
call
push
push
ret
stos
sub
sub
insb
mov
and
push
dec
call
jg
mov
adc
ds
fisubrl
inc
shlb
pop
out
dec
push
add
add
popf
add
push
and
dec
push
cli
push
push
jecxz
ficompl
scas
cmp
cmp
nop
jge
adc
sub
cs
dec
fldcw
add
fidivl
pop
test
fwait
jp
jl
add
sub
bound
out
mov
outsb
dec
mov
pop
out
outsb
aas
xlat
inc
sahf
cmp
dec
jbe
xchg
daa
adc
pop
mov
mov
sub
in
int3
mov
mov
fmuls
loop
aam
and
inc
dec
xacquire
out
movsl
xchg
inc
mov
iret
mov
rclb
jg
cmp
jbe
pusha
cmp
fs
jg
sub
ss
mov
mov
stc
xchg
mov
je
sub
fstpt
pop
xorl
pushl
repz
xor
or
sbb
jae
loope
es
in
push
inc
push
popa
cmp
jle
mov
cmp
stos
icebp
leave
xchg
sbb
or
xchg
jmp
cmp
std
adc
popa
xchg
mov
push
jnp
shr
pop
pop
mov
pop
fdivrl
or
lea
js
sub
push
repz
popf
mov
and
mov
pop
aam
lods
jl
repz
call
call
aam
add
pop
leave
and
fisubs
shll
inc
xlat
arpl
cmc
les
cli
push
or
mov
push
icebp
push
and
xchg
pop
movsl
scas
jne
mov
sti
gs
orb
lret
daa
std
sub
js
fxch
adc
mov
movsl
jne
ljmp
sub
subl
shll
push
addr16
push
mov
add
mov
push
mov
je
pop
icebp
aam
js
icebp
lds
repnz
sarl
mov
sbb
mov
cmp
mov
rcrb
push
push
shlb
jg
data16
lcall
shll
pushf
xchg
rolb
pop
testb
inc
jecxz
cmp
je
cmp
faddp
cmp
in
jmp
mov
lds
pop
mov
lods
sbbl
ret
pop
pop
adc
xor
bnd
lcall
lcall
cmp
pusha
xlat
dec
clc
dec
dec
mov
mov
cmp
pop
mov
mov
cltd
mov
xchg
pop
push
or
jle
fadds
js
mov
inc
push
sub
adc
dec
sbb
lods
pop
pusha
in
or
lahf
and
xor
mov
cmp
je
jmp
in
loopne
cmp
nop
ja
pop
push
push
icebp
push
mov
lds
xchg
test
arpl
imul
add
jne
add
xor
dec
xchg
adc
movb
sbb
mov
mov
imul
arpl
lods
bnd
dec
test
xchg
mov
and
aam
jle
test
xlat
in
mov
push
pop
lret
xor
sbbb
pushf
adc
cli
scas
mov
sahf
dec
cmp
jne
loopne
scas
leave
dec
insb
push
fmulp
and
cmpsl
mov
clc
and
shrl
inc
flds
push
ror
sbb
jbe
adc
fsts
in
sbb
das
pushf
arpl
xchg
es
add
call
or
sarb
xlat
ss
and
mov
lods
aas
sub
ja
and
fldl
loope
inc
mov
adc
mov
or
pop
xchg
enter
movsl
add
cmp
std
bound
inc
add
ds
jmp
push
add
arpl
jl
push
dec
mov
stos
pop
pop
cmp
mov
fstpl
mov
pop
scas
fsubrs
scas
mov
leave
into
in
int
lds
mov
rolb
fadds
cmp
mov
sbbl
std
fnstcw
rcrl
mov
das
mov
in
or
or
inc
ret
ja
incb
mov
pop
aam
inc
push
mov
nop
sbbl
jo
mov
iret
jp
shrb
inc
lcall
fdivrs
insl
fptan
leave
inc
or
xchg
in
test
cmpsl
mov
push
fld1
add
cld
dec
fmull
push
jo
flds
dec
sbb
jge
push
frstor
mov
or
sbb
and
ret
push
repz
dec
mov
mov
mov
aad
aad
je
test
imul
ljmp
cli
movsb
push
scas
pop
jl
ficoms
add
dec
test
sti
outsb
out
pop
or
xchg
pop
test
and
push
inc
mov
xchg
in
jle
and
xor
out
or
mov
enter
push
sbb
and
test
xchg
ss
sahf
ret
lds
hlt
jno
dec
mov
push
imul
nop
pop
mov
adc
adc
add
subb
mov
adc
xorl
insb
xor
sub
mov
icebp
sbb
into
ljmp
sahf
movsl
in
cwtl
lods
cli
mov
pop
mov
ret
movsl
fldcw
add
ljmp
stc
ret
push
cmp
jecxz
adc
xchg
or
push
jl
les
mov
pop
xchg
jb
pop
jle
out
ret
outsb
loope
mov
lea
es
outsl
inc
movsl
pop
not
popf
or
shl
mov
sti
fcompl
push
imul
loop
es
jbe
mov
jb
mov
int3
xchg
mov
sub
mov
outsb
movsb
xor
mov
fnstcw
test
mov
sub
and
push
les
test
jo
daa
fnsave
xlat
pop
subb
sub
xchg
in
rcl
aaa
add
pop
add
dec
sub
lock
sbb
pushf
pop
fwait
int3
fnsave
lods
loop
ds
out
xchg
xchg
pop
xor
loopne
arpl
jae
inc
add
fs
lods
dec
xchg
test
sahf
nop
in
cmp
sbb
stc
rcl
rorl
movl
pop
in
xlat
mov
test
cs
aad
push
cs
cmp
fsubs
lods
pop
shl
add
cmovne
sbb
jbe
rcrb
mov
mov
mov
fistps
movsb
aad
inc
pop
sbb
fbld
and
and
je
add
gs
sbb
insl
mov
rorl
sub
mov
mov
mov
jle
pop
mov
outsl
mov
inc
mov
inc
pop
cmpsb
dec
fwait
bound
icebp
and
lahf
mov
pop
mov
dec
push
push
lods
lcall
lcall
mov
scas
fwait
add
cmpb
stos
rclb
push
inc
test
adcl
aam
dec
push
arpl
inc
cltd
test
jmp
in
in
or
pop
ds
fdivl
fisttpl
int
leave
sub
fistl
mov
mov
dec
cmc
rcrb
ss
ret
ljmp
add
sarb
fs
mov
movsl
jbe
inc
test
or
mov
inc
or
shrb
sahf
dec
jno
pop
jb
popa
and
push
mov
xor
ljmp
sbbl
xor
push
mov
test
clc
xor
mov
adc
xor
std
sub
xchg
inc
std
stc
inc
push
and
xor
inc
add
lds
out
repz
cmp
push
xor
inc
jns
sub
jecxz
dec
xor
jle
xchg
inc
mov
dec
adc
lds
xor
clc
sbb
adc
sub
jmp
mov
xor
push
mov
scas
orb
aad
in
dec
repz
cmp
test
adc
insb
mov
ljmp
in
rol
sbb
jle
and
or
cwtl
sbb
lock
xor
sub
mov
fisttps
rolb
enter
sahf
sub
es
or
sub
mov
jg
xor
int
repz
jmp
xor
cwtl
inc
jnp
mov
dec
cmp
je
repnz
sbb
push
iret
mov
pop
jne
lret
dec
insl
xchg
rorb
cmp
cli
jg
fistps
xchg
mov
adcl
cld
sub
jecxz
pop
mov
testb
push
xor
out
push
shlb
mov
and
fcom
gs
mov
aaa
or
gs
jne
or
mov
pop
dec
es
pop
xchg
out
pop
jb
popf
pop
loop
enter
scas
sets
adc
xchg
mov
nop
sbb
xchg
jp
push
and
shlb
jne
std
mov
push
ljmp
xchg
out
mov
cmc
add
or
pushf
jl
aaa
mov
jmp
rorl
pop
sbb
outsl
out
lret
das
jle
jne
in
lret
mov
clc
mov
out
mov
ljmp
into
sahf
sbb
shll
mov
repz
lods
call
inc
cmp
rolb
jecxz
xor
mov
loopne
xchg
cmpsl
stos
ficoms
or
loope
fdivrl
shll
inc
test
push
lea
xor
mov
inc
cmp
xchg
xchg
adc
xchg
stos
xor
insl
xchg
dec
outsb
sbb
jp
xchg
pop
add
test
pshufw
sub
lcall
andb
mov
inc
mov
pop
and
jo
sar
push
negl
and
fsubs
mov
jle
imul
arpl
clc
cmc
pop
leave
ss
xchg
mov
cmp
inc
lds
outsb
pop
