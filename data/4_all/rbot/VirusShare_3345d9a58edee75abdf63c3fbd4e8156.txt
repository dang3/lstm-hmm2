dec
call
in
push
andl
push
push
mov
mov
add
jne
push
push
call
pop
test
pop
je
incl
add
cmp
fucomip
inc
mov
push
fstpl
pop
push
push
lea
lods
push
jo
popf
int
adc
cmp
xchg
es
sti
jnp
incl
sbb
add
mov
incb
mov
fisttps
dec
adc
inc
inc
pop
mov
sbb
sti
push
pop
aaa
adc
pushl
sbb
test
outsl
push
add
ljmp
mov
nop
push
and
mov
sub
push
inc
mov
mov
sub
push
push
lea
push
pop
adc
div
jo
and
pop
fidivrs
adc
pop
sub
lea
sub
cmp
jge
movzwl
push
push
cli
or
lock
ret
shrl
push
push
nop
push
sbb
sub
fwait
call
scas
push
addb
push
out
sbb
mov
or
cmpl
and
push
mov
push
pushl
push
divb
or
or
pop
push
push
sbbl
dec
jb
sti
jo
adc
sub
decb
mov
adc
movsl
sbb
dec
mov
pop
jb
pop
cmp
outsl
out
push
xor
les
pop
mov
lea
xor
outsb
jg
clc
pop
cmp
into
jne
push
cld
mov
push
push
sbb
lcall
in
add
in
push
add
loopne
sbb
jo
xorl
das
inc
inc
fstpt
add
clc
lock
in
in
ret
sbb
push
pop
cmp
sbb
data16
ja
je
push
jmp
sbb
jbe
push
jecxz
nop
mov
jbe
in
mov
std
xor
pop
cmp
pop
fisttpll
decl
jg
inc
mov
and
pusha
pop
pop
jo
pushf
mov
push
sahf
jno
shr
out
jl
mov
jl
and
push
push
add
ja
pushl
pop
sti
inc
aaa
rcll
or
add
pop
push
adc
rcr
xchg
cmp
jmp
pop
pop
lock
into
or
jl
xchg
fdivrs
jb
jns
inc
mov
or
lcall
or
cmp
mov
and
and
xor
shll
xorl
and
lock
dec
jne
pop
enter
in
outsl
jne
rol
dec
xor
push
daa
insb
push
movl
cld
sub
mov
clc
cmpsb
ljmp
in
fildll
testb
jne
inc
push
sub
mov
imul
lock
mov
push
test
push
add
push
aaa
sub
jmp
jmp
dec
dec
add
movsl
push
mov
xor
push
cmp
leave
mov
mov
push
movsl
jb
add
popf
in
hlt
cmp
je
push
call
mov
sub
sbb
out
mov
or
repnz
cmp
jne
and
adc
and
and
add
mov
rclb
dec
or
xchg
jmp
mov
sbb
les
mov
add
sub
jo
mov
xchg
ficoml
push
cmp
pop
cmpsb
pop
cmp
jne
js
out
cmp
icebp
ss
inc
jge
sbb
pushf
mov
repz
insb
call
dec
out
aaa
cmp
xchg
lock
pushf
cmp
cmc
sub
clc
pop
or
or
pop
push
out
xlat
aad
fs
insb
shrb
jl
adc
addr16
in
pop
push
stos
daa
pop
lods
insb
mov
sbb
sbb
repz
add
push
add
inc
mov
pop
push
pusha
adc
pop
mov
add
pop
mov
mov
mov
loopne
fidivrl
jge
jne
push
stos
or
out
rclb
rclb
push
notl
mov
jbe
and
je
inc
cmp
aam
push
fsubs
adc
inc
movl
adc
sahf
movsb
test
pop
stos
dec
and
mov
idiv
and
push
pop
jmp
movsbl
mov
stc
pop
inc
cmpsb
mov
cmp
pop
jbe
test
mov
jb
enter
push
mov
push
xor
jne
and
into
or
insb
sub
cld
shr
enter
ljmp
fimuls
pop
incb
adcw
push
bound
insb
ret
xchg
test
jbe
add
add
int3
push
push
add
adc
lahf
add
popf
sbb
push
aas
pop
and
lods
push
imul
shlb
js
mov
xchg
and
stc
insb
sbb
and
outsb
shrb
mov
test
jl
insb
dec
in
cmp
jge
pop
popa
jle
sbb
cld
cmc
fbstp
pop
mov
neg
push
inc
jne
dec
push
fs
dec
push
in
sbb
das
fs
daa
mov
int
pop
push
lock
push
cltd
add
cmp
clc
cltd
mov
jg
ret
jl
rorl
mov
mov
mov
call
pusha
adc
mov
mov
xchg
addb
mov
sbb
or
xchg
xor
inc
sbb
add
cwtl
fdivl
test
insb
jbe
adcl
push
movsl
pop
insb
inc
or
sbb
adcl
les
jp
jle
dec
fistpl
pop
clc
leave
cmp
push
je
repz
or
lock
or
or
daa
push
push
jp
jns
daa
jmp
push
mov
outsl
test
mov
out
add
sub
or
loopne
jle
pop
aam
inc
jge
aad
push
push
lock
jnp
jmp
hlt
fadd
jnp
fwait
or
clc
jne
jle
cmp
sbb
aas
popa
idivb
push
jns
sub
jge
push
aad
sahf
sldt
push
push
test
jmp
jmp
loop
push
cli
fs
and
call
pusha
inc
aaa
in
mov
and
pop
in
pop
or
add
ss
cltd
push
jnp
nop
mov
stc
sbb
js
inc
icebp
pop
in
add
dec
or
pop
je
jo
orb
pop
sbb
jbe
sbb
push
mov
mov
call
imulb
call
mov
popa
test
in
adc
call
in
add
mov
cmpsl
in
cmpsb
lods
inc
inc
loopne
pop
xor
lock
pop
inc
or
leave
lret
out
xor
aam
std
xor
add
mov
xor
cmpb
pop
dec
data16
in
ja
or
mov
xchg
ja
cwtl
mov
mov
sbb
push
pop
loopne
fsubr
pop
sub
mov
sub
cmp
lahf
fucomp
push
adc
add
fldcw
add
lods
les
pop
cmp
ja
cmpl
mov
je
shr
int3
mov
mov
push
jmp
and
inc
dec
mov
mov
bound
adc
xchg
adc
std
ss
mov
inc
jmp
decl
mov
push
or
stos
or
mov
xorb
cmp
call
push
mov
daa
outsb
rclb
adc
fisttpll
inc
addl
popa
jo
xchg
adc
adc
push
push
test
mov
cwtl
int
in
lods
aaa
add
call
add
push
push
mov
fmull
jnp
mov
fstpl
xor
xor
sub
inc
rcrl
ds
ss
rolb
jne
aad
inc
cwtl
mov
inc
insb
adc
inc
je
movsb
ds
and
sub
cmp
jmp
add
out
enter
xor
pop
push
and
mov
cld
adc
mov
pop
push
add
shlb
xor
sbb
or
mov
pop
add
sub
push
sub
lahf
ficoms
mov
mov
aaa
inc
cmpb
pop
movsl
aam
fidivrs
mov
leave
mov
jle
mov
jle
and
adc
inc
cmp
jl
ret
dec
pop
jge
dec
cmc
out
jb
lock
xor
xchg
rorl
popf
cmp
mov
sub
add
pop
or
ljmp
in
sti
jae
sbb
mov
inc
and
or
std
pop
xchg
cli
mov
je
xchg
push
cld
pop
cltd
idiv
test
jmp
sub
jmp
dec
enter
cmp
jb
mov
mov
inc
dec
jmp
sbb
enter
es
sub
fwait
xchg
cmp
adc
xor
je
dec
push
std
jne
mov
add
clts
mov
lods
xchg
lret
in
or
mov
sub
call
lcall
sbb
push
adc
lock
push
pmaddwd
rcrb
sbbb
mov
sub
pop
jnp
cwtl
add
out
adc
shll
dec
mov
and
das
roll
hlt
popf
loop
xchg
out
cld
mov
jge
push
sbb
ljmp
mov
xchg
pop
cmp
push
mov
xor
adc
lock
push
call
cld
clc
push
inc
pop
jmp
mov
pushf
adc
popf
pop
sbb
shll
mov
inc
and
mov
add
into
add
mov
inc
add
mov
pop
pusha
jo
and
repz
daa
or
popf
jne
divl
push
push
jae
bound
dec
idiv
jo
sub
add
xor
adc
add
push
nop
inc
and
lods
lds
xchg
inc
sbb
push
xor
cmp
cmc
fcoms
pop
adc
xor
pop
loope
xchg
fsubrp
adc
push
jge
xor
daa
cmp
mov
js
dec
mov
add
mov
push
xchg
pop
shrl
push
xor
push
pop
jne
sbb
ror
loope
or
pop
push
popa
jg
add
xor
hlt
sub
xchg
push
or
pop
xchg
scas
or
xor
rcll
clc
sub
pop
push
sbb
add
lcall
inc
mov
xor
jmp
push
test
pop
dec
sti
and
test
xchg
push
lods
inc
add
insl
sub
xchg
push
inc
push
js
rorl
mov
pop
add
mov
mov
pusha
rorb
push
mov
outsb
je
into
inc
lock
decl
sub
test
jle
in
add
std
das
ja
pop
sbb
je
or
idivl
rclb
mov
jmp
and
and
call
dec
push
je
dec
pop
dec
xor
sub
push
sbb
cmc
mov
cmovp
add
fidivrl
push
sti
je
lock
mov
mov
push
outsl
adc
xor
jae
sbb
adc
mov
in
pop
test
push
fmull
loopne
in
and
lock
push
sbb
in
mul
mov
jge
sbb
inc
subl
je
mov
or
or
push
pop
jle
push
adc
test
sub
sbb
ret
inc
jmp
dec
enter
arpl
ret
pop
jmp
andb
rcr
xor
add
or
loope
mov
sahf
xchg
sub
loope
aaa
jmp
sbb
adc
mov
mov
insb
repz
cmpsb
mov
xchg
pop
add
call
xchg
das
pop
push
push
or
mov
int
js
stos
push
mov
inc
sub
hlt
mov
mov
hlt
aad
nop
cwtl
clc
je
pop
cmp
std
push
into
push
jp
mov
sbb
jb
mov
pop
xor
and
insb
sub
in
stc
inc
sbb
adc
mov
mov
push
sbb
cmp
cmpsb
popf
stc
jbe
mov
clc
push
cmp
pop
ja
movsb
xor
das
sub
pushf
and
cmp
movsl
adc
add
sub
cmp
jne
movl
les
mov
dec
ret
add
dec
mov
cmp
pop
mov
or
jl
cld
lahf
enter
nop
sbb
lret
lret
jo
mov
pop
mov
cmp
hlt
lahf
in
or
stos
mov
lahf
inc
lahf
mov
jb
mov
hlt
lahf
mov
sub
repz
gs
or
sahf
clc
dec
insb
mov
sub
lahf
dec
repz
pop
jmp
push
ret
imul
int
dec
test
in
fmuls
mov
lret
outsl
mov
les
and
in
ja
jl
push
lahf
les
leave
enter
jo
repnz
pop
roll
imul
mov
lret
leave
xor
xchg
adc
mov
add
hlt
dec
lock
mov
movsb
xor
pusha
or
daa
adc
cmp
stc
in
sahf
movsb
pusha
push
jno
je
dec
mov
xor
inc
jo,pn
dec
mov
int
dec
je
mov
in
repnz
push
in
cmp
lret
lret
enter
sahf
and
pop
mov
dec
call
imul
dec
sbb
push
xor
cmpsb
inc
in
cmp
sub
shrb
pushf
and
lahf
jns
and
push
pop
pusha
or
fimull
inc
ds
movsl
add
dec
in
xor
mov
inc
mov
sbb
addr16
xchg
outsl
shll
xor
fwait
add
xchg
mov
xorb
mov
mov
pusha
sbb
lahf
pop
mov
das
and
sahf
inc
aam
xor
lea
mov
xor
mov
outsl
and
mov
sbb
adc
and
xchg
outsl
add
enter
mov
in
sbb
outsl
in
mov
mov
lret
xchg
pop
test
or
imul
sbb
add
inc
pop
gs
add
dec
lahf
pop
cs
dec
in
xor
add
out
jb
mov
mov
xchg
dec
mov
sub
loopne
cs
out
cltd
pop
mov
repz
fmull
jns
jno
add
sub
popa
push
js
mov
push
js
enter
cmp
mov
inc
jb
add
and
pop
test
push
arpl
mov
dec
fs
sahf
lret
lret
enter
cmp
lahf
inc
and
add
jmp
dec
xorl
mov
mov
mov
inc
jo
cmpsb
sarb
push
sbb
fwait
xor
xchg
je
cmp
mov
addb
repz
notl
push
add
loop
rcll
mov
pop
mov
cmp
mov
nop
push
inc
in
adcb
sub
mov
mov
std
mov
xchg
nop
pusha
dec
aad
push
cltd
in
lds
or
sbb
in
adc
lahf
add
mov
sbb
fcoml
int3
or
xchg
add
adc
jb
js
in
sahf
and
fs
outsb
shll
or
sbb
cwtl
test
shrl
dec
lret
and
enter
in
mov
xchg
movsb
mov
add
sbb
jb
xchg
iret
sbb
sbb
xchg
or
push
push
out
xchg
dec
sbb
or
dec
loopne
inc
mov
cmp
mov
inc
pop
jb
dec
rorb
adc
xchg
test
xchg
mov
and
movsb
jb
fcompl
sub
das
fs
push
and
mov
mov
mov
fistpll
shlb
lret
enter
dec
clc
clc
ret
mov
xchg
int3
enter
int3
inc
pop
scas
add
jecxz
or
xor
cmp
inc
lods
icebp
je
pushl
push
add
andb
outsb
push
xchg
dec
and
dec
xchg
daa
pop
leave
dec
in
push
addb
mov
inc
leave
and
nop
xchg
daa
inc
leave
and
cwtl
pushf
daa
inc
leave
and
mov
and
mov
lods
push
mov
mov
mov
mov
xchg
rol
inc
jb
xchg
enter
jae
test
jne
or
pop
adc
stos
mov
popa
xchg
mov
in
jge
cmp
je
pop
pop
jo
test
cmpb
insb
push
mov
test
and
mov
data16
sub
push
push
aas
push
pop
cli
xchg
lret
and
add
jbe
dec
insl
push
and
addr16
and
mov
pop
cmpsl
insl
std
imul
push
insl
mov
pop
jmp
jmp
jns
pop
rolb
rorb
clc
sbb
cmp
xchg
jecxz
mov
pop
push
jge
push
jmp
fwait
add
mov
inc
push
mov
cmp
je
lock
pop
fmull
or
add
enter
rclb
sub
aas
xorl
jne
cmpb
dec
or
cli
je
cmp
mov
inc
add
inc
cmp
jl
cmpl
pop
je
add
call
push
imul
jg
jl
adc
jg
rep
lea
mov
pop
repnz
adc
rcrb
mov
loopne
and
mov
dec
cmp
jle
pop
rol
movsbl
mov
pop
cmp
pop
jl
cmp
jg
flds
call
or
sub
and
fucomp
or
hlt
out
lods
sub
iret
xchg
fldenv
pop
enter
cmp
xchg
pushf
xchg
cmpsl
sub
std
ret
or
and
or
je
sub
js
push
ds
mov
mov
imul
mov
add
cmp
jge
xchg
lea
cltd
int3
inc
jbe
rclb
outsb
mov
cltd
mov
sbb
jne
dec
dec
jmp
lock
push
sub
inc
roll
adc
cmp
ret
or
insl
imulb
es
and
xchg
fstpt
mov
cmp
jg
or
jne
inc
iret
fstp
insl
out
dec
lea
cmp
je
and
pushf
push
jmp
push
mov
sbb
push
aam
adc
rclb
js
cmp
jmp
aam
add
sbb
cli
add
mov
mov
ljmp
mov
adc
cli
mov
push
scas
adc
call
mov
pop
stos
adc
adc
pushl
test
insb
pop
mov
loopne,pn
mov
push
pop
dec
cmp
inc
inc
loop,pt
mov
sbb
leave
push
movsb
jb
lret
test
xchg
add
in
addl
mov
mov
jae
push
add
adc
sub
pop
sub
or
sbb
dec
mov
push
clc
lock
lock
loopne
cmp
push
jl
lods
test
add
loopne
movsb
stc
push
cmp
out
or
cs
in
aad
mov
sub
add
or
lods
push
mov
lock
inc
outsb
push
rcll
mov
lock
sbb
aas
loope
minps
push
xor
add
pushf
das
loope
xchg
cmp
les
or
int
std
clc
push
daa
mov
and
movsb
mov
xchg
push
xchg
sub
or
mov
fistpl
push
sbb
jbe
cmp
push
test
push
push
mov
test
loope
movl
cmp
jne
inc
jbe
dec
xchg
xor
cmp
je
and
inc
xchg
test
mov
fisubs
aaa
insb
mov
loope
test
adc
inc
cmp
dec
push
pop
js
mov
out
bound
adc
xor
sbb
or
test
movsw
rorb
cli
sub
jns
xor
xchg
or
jbe
xchg
xor
repnz
xchg
add
jle
cmp
dec
test
mov
sbb
out
mov
sub
movsb
rcr
sub
fcoms
lods
enter
aad
jne
cmp
mov
xor
push
push
push
pop
sub
adc
icebp
ret
jmp
andl
lret
scas
xor
rclb
clc
addr16
mov
push
rcrb
push
dec
fdivr
nop
aam
stos
mov
pop
fldenv
cld
mov
je
imul
sahf
push
pushf
jge
cmpsl
push
nop
imul
out
fldl
inc
push
cld
inc
and
pop
jl
sub
popf
and
dec
cmc
add
movsl
out
mov
shrb
mov
sbb
sar
push
or
test
pushl
push
lods
or
and
insb
mov
pop
and
mov
push
sahf
adc
leave
pop
jbe
xchg
xchg
jge
add
jmp
and
clc
pop
push
dec
loope
jae
and
or
xchg
mov
adc
xor
push
adc
and
rcl
adc
mov
aas
push
mov
push
push
shlb
xor
mov
js,pt
int3
fnsave
mov
pop
inc
jmp
add
xchg
sub
sbb
xchg
cld
movsb
movl
push
sub
notl
cmp
xor
out
lock
js
jbe
add
cmp
je
out
adc
inc
jl
imul
mov
gs
and
sbb
lock
pop
push
arpl
nop
xchg
and
push
xor
hlt
or
decl
js
push
js
sub
push
lcall
dec
or
or
adc
cmp
adc
xor
inc
mov
je
lea
jbe
neg
pop
ja
clc
mov
insb
inc
jmp
mov
call
shl
pop
movsl
icebp
push
add
je
fs
jmp
add
sti
cmovo
call
adc
loop
lock
and
or
dec
xchg
lret
sti
and
adc
xchg
inc
adc
mov
push
cmpl
test
loopne
jle
sarb
cmp
idiv
push
shrb
push
jle
jl
cmp
mov
adc
iret
es
jne
mov
jl
andb
ja
repnz
push
scas
sbb
cld
jg
ret
adc
inc
cmp
jl
andb
mov
sbb
inc
shll
data16
jp
mov
ja
add
les
or
movsbl
bound
fs
out
add
jg
inc
cmp
jl
push
pop
pop
jnp
andl
test
les
push
or
fcomp
sub
enter
push
stos
xchg
pop
push
sahf
adc
movsl
sbb
cmp
cs
daa
cmpl
roll
inc
adc
fcomi
xor
jl
jbe
lock
add
in
repz
mov
or
pop
jnp
stc
xchg
dec
pop
jne
mov
jne
lahf
repnz
sub
loopne
pop
add
jo
jnp
adc
mov
aam
add
int3
adc
icebp
es
sbb
shr
add
xlat
pop
pop
adc
lock
cwtl
jb
cmp
push
mov
jbe
push
mov
ret
inc
push
or
dec
push
sbb
or
inc
push
clc
mov
insl
mov
scas
ret
movsl
adc
pop
test
shlb
out
xor
sbb
sbb
adc
push
push
pop
call
adc
jns
or
sbb
sbb
adc
adc
xor
ret
or
addr16
jne
lock
add
inc
sbb
pusha
mov
jo
fs
mov
xchg
cltd
jbe
add
in
cmp
ja
jo
movsb
inc
popa
es
pop
adc
add
aad
incl
sbb
fisttpl
or
outsb
or
pop
insb
lahf
adc
mov
cmp
sti
pop
shll
push
push
stos
dec
inc
hlt
push
mov
cmp
cmp
jne
sub
mov
repnz
jmp
arpl
jecxz
xchg
jl
jne
pop
gs
pushl
mov
pusha
movsl
inc
in
jmp
push
xor
or
xacquire
push
stos
mov
ret
je
dec
in
adc
or
add
jb
fstpt
adc
sbb
jmp
aad
add
in
xor
jp
bound
xor
adc
or
pushf
sbb
fisttpll
mov
sub
mov
fbld
mov
jecxz
ds
sbb
shl
jg
mov
push
mov
push
int3
in
jge
rorb
data16
mov
popf
xor
xchg
fsts
mov
inc
add
fs
rolb
loopne
adc
lock
js
cs
jne
mov
cmp
lret
andl
cld
jbe
xlat
cmpl
aas
push
pop
adc
push
stos
icebp
pop
mov
aam
push
clc
ljmp
sbb
push
adc
adc
push
mov
xchg
sub
push
mov
icebp
pop
subb
adc
push
mov
mov
xlat
repnz
jbe
loopne
inc
loopne
ror
in
cmpsb
imul
add
mov
xchg
sarb
dec
add
sbb
xlat
enter
adc
mov
mov
sbb
out
dec
hlt
or
sub
mov
cli
or
push
add
jo
xchg
outsb
into
bound
xchg
inc
pop
mov
mov
fs
push
or
sub
je
sub
stc
out
xor
sbb
jbe
mov
clc
xchg
push
test
or
test
lods
clc
out
inc
mov
cmp
xchg
push
mov
mov
and
rolb
xor
or
inc
insl
inc
lret
add
fcompl
cmp
add
pusha
lock
into
or
lock
mov
mov
mov
lock
dec
lock
mov
mov
lods
mov
or
adc
pushl
push
cmp
je
cmp
jne
aam
imul
cmp
jne
mov
andb
stc
pop
cli
jecxz
stc
cmp
cld
or
jmp
mov
mov
mov
and
mov
or
sub
jmp
cmp
jbe
dec
xchg
and
movsb
sub
fiadds
lock
mov
rcll
sub
jne
or
ja
lock
xor
jl
sbb
mov
push
push
cwtl
hlt
ss
and
lock
outsl
jo
sbb
sbb
loop
outsb
rorl
ret
pushl
or
pop
cmpsb
push
sub
dec
mov
inc
jns
clc
div
mull
inc
aaa
adc
add
movsl
cmp
jle
pop
push
sub
push
mov
out
iret
faddl
xchg
outsl
je
add
out
fadds
and
pusha
adc
mov
adc
std
mov
dec
dec
cmp
repz
mov
xor
ljmp
stos
push
xor
jl
push
adc
icebp
pop
fstl
sub
pop
cmp
nop
fsubr
jmp
int3
imul
push
test
push
pop
addr16
adc
sbb
outsb
or
pop
pop
xchg
push
mov
jne
inc
mov
add
rclb
or
or
loopne
pop
je
push
add
inc
adc
mov
add
jbe
mov
shr
cmp
or
mov
cltd
cltd
dec
push
dec
movsb
pop
subl
xlat
inc
mov
imul
shrl
xchg
aas
pop
inc
rolb
sbb
xorb
mov
sbb
add
xor
cwtl
mov
decb
sti
mov
cmp
cmp
jb
cmp
mov
and
push
mov
mov
or
and
mov
in
push
cmp
and
push
or
mov
push
inc
or
push
pop
and
subb
adc
xor
mov
inc
cmp
jb
cmp
rcrb
pop
repnz
jbe
fistps
adcb
mov
mov
push
aaa
add
stos
enter
shl
mov
xor
fcomps
sti
div
pop
mov
adc
push
sbb
or
fsubr
inc
xlat
cmp
inc
repz
in
or
loop
xorl
adc
pop
out
loop
mov
insl
add
cmp
mov
xchg
jne
or
xchg
pop
mov
pop
int3
jmp
add
xor
sub
sbb
mov
je
push
add
jmp
aas
pop
call
pop
popa
ret
inc
mov
pop
orb
xor
mov
mov
xchg
fildll
push
sbb
push
push
push
mov
xor
cmp
ja
shlb
mov
mov
adc
lock
imul
mov
ja
jb
cmp
jae
push
and
ja
pop
repnz
inc
sahf
inc
inc
cmp
xor
and
push
cmp
or
push
pop
add
roll
ret
adc
mov
stos
jno
xor
or
xor
push
cmp
add
imul
mov
call
test
shll
out
lret
and
push
pop
jne
je
addr16
in
mov
jne
push
loopne
in
test
pop
and
xor
inc
je
aam
sbbb
das
cmp
pushl
ljmp
add
sbb
shlb
loopne
mov
push
idivb
inc
lea
stos
mov
aad
hlt
inc
cmp
or
lea
jmp
call
pusha
pop
repz
xchg
cmp
pop
and
add
xor
call
outsl
enter
aam
scas
call
inc
in
fcompl
daa
xchg
int
mov
add
movsb
rolb
shrl
sub
pop
lcall
and
push
out
lret
sub
frstor
pop
clc
scas
sbb
or
cwtl
stc
push
fadds
xor
lods
aas
sbb
push
mov
cmp
xor
ljmp
mov
rol
jmp
push
cwtl
aam
push
aaa
nop
mov
stos
push
rorb
pop
push
add
inc
sbb
outsl
jg
jb
and
add
call
push
mov
out
lret
xlat
jo
cmc
pop
loope
dec
cmpl
add
jl
push
and
sahf
adc
sbb
idiv
xchg
push
mov
xchg
jmp
mov
gs
je
sbb
adc
cmp
push
nop
add
push
or
mov
js
syscall
mov
inc
add
dec
push
mov
imul
and
xor
lea
push
cmpsl
xchg
sbb
dec
fcomps
es
andl
ss
adc
mov
push
stc
andb
push
mov
cmpsb
pop
push
pop
mov
testl
or
or
in
sbb
jno
scas
cmp
ficompl
jb
cmpl
add
push
dec
jo
adc
and
xor
cmp
pop
leave
mov
adc
in
cmp
jle
lahf
mov
jno
push
push
pushl
lods
hlt
lea
je
jle
adc
sub
pushf
je
pop
cmc
mov
jbe,pt
loope
add
movsb
pop
jne
xrelease
pop
cld
addr16
testl
pop
mov
scas
loopne
and
fcmovnu
or
add
lea
outsl
jg
add
mov
dec
dec
loopne
rorl
push
movsb
or
mov
mov
sbb
cmp
mov
mov
push
xchg
test
xchg
inc
pushf
dec
js
sub
iret
loop
add
cwtl
jg
cmp
jne
pop
ja
add
rorl
sub
cmp
rolb
int
loop
cmp
inc
inc
inc
pop
ret
fwait
adcb
ret
stos
inc
and
sub
testl
and
aas
movsb
and
jle
jle
dec
sbb
aam
ds
mov
jle
repnz
mov
add
es
push
lods
push
leave
adc
cmpsb
jmp
repnz
pop
jmp
mov
push
xchg
lret
mov
mov
loopne
sub
jg
pop
and
mov
test
je
cmp
jne
push
or
adc
std
dec
cmp
je
or
je
pop
fdivrl
push
aaa
sbb
jmp
test
push
mov
dec
xor
cli
adc
sub
adc
jmp
fisubrl
jne
mov
sub
movsb
jne
cmp
push
push
dec
dec
or
jl
dec
lods
jb
xor
mov
jge
pop
cmpb
into
push
inc
rep
mov
mov
sbb
cmp
hlt
insl
dec
adc
sbb
ss
mov
jg
cmp
jge
cmp
je
cmp
push
adc
fnstcw
jp
pop
cmp
jg
cmpsb
mov
pop
jmp
add
inc
lods
fdivrs
sbb
or
push
add
add
mov
cmp
ret
pusha
xor
je
leave
pop
stos
sbb
xor
push
push
repz
sbb
or
insb
jne
shll
add
mov
shl
jg
xor
cmc
mov
cmp
jne
mov
cmp
je
ret
negb
dec
cmp
or
adc
mov
pop
pusha
int
subl
adc
adc
xorb
jmp
xor
adc
pusha
cmpsl
mov
add
shll
testb
popa
and
test
pop
mov
xor
out
imul
pushl
or
ret
push
cmp
mov
mov
mov
dec
push
insl
ret
push
loop
and
or
dec
hlt
mov
push
lret
sbb
add
cmp
mov
add
mov
ss
jo
adc
and
or
unpcklps
jge
jl
inc
pop
adc
or
cmp
ss
push
mov
cmp
sub
cli
popl
cmp
cld
add
fldcw
dec
in
lea
sub
ret
ss
std
and
pusha
jb
loopne
popa
xorb
shr
add
roll
sbb
test
aas
cmp
inc
cmp
jb
fwait
mov
rol
inc
sbb
shlb
fsubl
in
ror
dec
inc
add
das
push
inc
stos
mov
outsb
xor
cmp
jne
jp
xchg
or
test
push
pop
loop
jno
jmp
shrl
stc
adc
pop
xlat
sahf
in
jecxz
es
pushf
mov
adc
mov
add
add
loopne
shll
push
push
iret
mov
imul
mov
push
jmp
int3
dec
aam
sub
out
sub
inc
cmp
xchg
jle
or
fwait
jne
pop
cld
lahf
sbb
cmpl
jle
mov
add
enter
mov
push
dec
mov
fisttps
sarl
cmp
je
push
ret
je
dec
imul
lock
repz
add
sbb
std
add
jmp
cs
sbb
xor
clc
sarb
jg
xor
and
push
jge
or
enter
mov
int3
cltd
clc
cmp
dec
jb
aaa
sub
adc
dec
xchg
hlt
pop
sti
jne
push
ret
andl
pop
dec
and
add
pop
imul
mov
add
ss
xchg
ss
test
sub
mov
or
mov
in
cwtl
mov
pop
andl
test
mov
movsl
or
adcb
hlt
xchg
out
push
int
dec
test
inc
dec
xchg
sbb
int3
test
inc
lods
std
inc
and
shlb
leave
xchg
adc
nop
add
or
shlb
ljmp
imul
je
mov
repz
data16
ss
pop
nop
aam
sbb
xor
aad
and
subl
cld
or
sbb
mov
dec
inc
adcl
or
sbb
js
mov
arpl
dec
mov
inc
push
jno
fwait
test
or
xor
movsl
faddl
or
or
aaa
les
shl
cld
adc
mov
adc
jp
mov
mov
je
int
add
xchg
or
and
repnz
dec
into
add
push
adc
mov
xor
outsl
dec
sub
jbe
push
std
dec
jne
cmp
or
inc
or
fists
mov
je
bound
jno
mov
inc
sub
mov
insl
sub
test
pusha
lcall
clc
test
sub
dec
js
or
add
in
sbb
dec
pop
lock
int
inc
imull
cmc
mov
sbb
sub
jb
dec
mov
pushf
cmp
pop
and
mov
shl
dec
xchg
lock
push
sub
mov
dec
or
or
cmp
je
or
je
or
fcomps
daa
out
movl
xchg
add
cs
pop
cmpsb
xor
and
out
mov
mov
ljmp
shl
fiadds
clc
bound
push
sbb
push
and
fsubs
insl
sbb
idivb
das
mov
loop
add
inc
arpl
dec
sbb
or
test
pop
dec
cmpsl
int3
mov
inc
push
push
out
fnsave
xor
and
jl
lret
push
or
mov
adc
inc
pop
fs
aas
mov
pop
push
negl
pop
jne
mov
pop
add
popf
addr16
les
mov
sbb
loope
xchg
dec
call
mov
rolb
jle
jg
cmpb
jne
cmp
inc
movsbl
mov
fildl
daa
outsb
pop
add
add
dec
mov
jmp
int3
cmp
push
imul
imul
or
mov
cmp
jp
add
pop
sub
pusha
shl
adcb
sub
dec
loope
aad
push
push
inc
movsl
rcr
pop
or
js
push
ret
lahf
test
jne
jbe
jae
or
inc
inc
lock
adc
lret
data16
add
pop
adc
add
cld
cmpsb
add
push
imul
jno
dec
inc
in
andl
fldt
xchg
jmp
outsb
hlt
or
and
push
shl
inc
cmc
fs
mov
loopne
push
or
push
push
mov
sub
dec
mov
mov
scas
hlt
lods
or
add
adc
fld
loopne
jbe
shll
sub
cmp
pop
mov
push
sub
dec
mov
pop
in
xchg
mov
and
push
jp
mov
mov
lock
mov
xor
dec
cmp
push
shll
lret
sbb
mov
nop
sbb
fcmovnbe
movsb
sbb
loopne
inc
add
inc
aam
movsb
adc
or
sub
pop
ds
and
jnp
xor
inc
and
pop
jle
movb
inc
out
push
loop
or
mov
inc
sbb
dec
xlat
pop
adc
mov
arpl
fbld
sbbb
xor
cs
idivb
pop
je
cmp
loopne
add
adc
aad
add
sub
push
sbbb
aaa
mov
mov
sub
lock
mov
cmp
shl
cmp
mov
push
inc
sti
fldt
dec
aad
pusha
dec
ret
stos
xchg
sbb
xlat
and
mov
jmp
push
xchg
pop
shll
imul
inc
xchg
cmp
jl
jo
in
imulb
xchg
iret
cmp
cmpsb
lods
pop
cmp
jl
inc
and
stc
faddl
nop
inc
mov
and
pop
mov
fwait
inc
inc
shll
adc
addr16
or
aaa
rorl
mov
in
lcall
push
dec
out
pop
xor
xchg
sub
push
pusha
rorl
test
push
mov
pop
mov
lock
mov
insb
xor
and
neg
jp
xor
sub
mov
mov
mov
push
das
rcll
clc
jle
outsl
xor
inc
sbb
add
cli
clc
add
clc
cmp
mov
adc
in
push
cwtl
loop
cmpsl
pop
clc
adc
jge
movsl
out
push
sub
out
sbb
jg
insl
test
inc
out
in
pop
push
push
cmp
mov
cmp
sub
sub
add
or
jge
xor
popa
cs
ljmp
decl
out
mov
push
add
aam
loope
int
push
xchg
js
dec
cmp
push
subb
push
pop
pop
cmp
xor
pop
push
sbb
push
mov
pop
mov
test
ficomps
mov
add
scas
jmp
mov
mov
pop
ret
test
pop
movsl
xlat
fcompl
adc
cld
std
cmp
roll
pusha
mov
in
shrb
cmp
fisttps
add
movsl
xchg
add
test
adc
add
mov
or
xchg
into
sti
fdivrs
cltd
xor
mov
mov
leave
add
mov
add
sub
mov
ss
or
sbb
pop
xchg
inc
or
adc
scas
fs
adc
push
sbb
incl
shlb
or
inc
push
pop
pop
in
aam
sub
cmp
push
mov
mov
sbb
push
jge
xor
and
push
sub
shlb
push
fnsave
jge
sahf
mov
inc
pop
xor
pop
xor
sbb
push
pop
push
push
sub
pop
sub
add
xor
adc
movb
fists
ret
and
push
push
clc
dec
push
mov
jae
jmp
dec
add
xor
les
loop
xchg
add
push
and
fimuls
push
out
jns
mov
push
lcall
xor
push
pop
aad
adc
inc
cmp
sbb
lea
arpl
pop
xor
jo
dec
je
and
xchg
std
mov
pop
out
xor
sbb
sub
mov
addr16
dec
sub
push
mov
jp
push
ss
sub
xchg
adc
jne
xor
je
mov
scas
out
mov
stc
xchg
add
js
pop
inc
xchg
push
pop
mov
ss
sub
push
cmpl
xor
imul
pop
sub
inc
sahf
push
data16
jo
jns
lock
adc
sbb
jl
test
movsb
sbb
sti
cmpb
cmp
push
dec
adc
mov
bound
pop
jno
das
popf
jle
and
xor
adc
pusha
and
sub
or
sub
pop
lock
stc
add
inc
adc
inc
jno
lret
add
xlat
xor
iret
mov
mov
push
push
movsb
xchg
and
nop
inc
or
inc
mov
jne
mov
test
lret
push
hlt
push
xchg
stos
das
jl
add
add
or
ss
mov
decl
ljmp
fmul
or
dec
adc
nop
in
mov
dec
mov
mov
xchg
xchg
jl
test
dec
addb
xor
das
sub
push
push
or
cld
daa
fs
add
add
jle
push
cmp
xchg
or
add
xorl
sbb
cld
mov
xchg
push
fsubl
adc
mov
orl
xchg
push
sahf
inc
or
jo
dec
sub
punpckhbw
xchg
daa
nop
cmp
push
adc
adc
add
pop
in
jno
mov
sub
adc
inc
aam
enter
inc
add
jbe
out
mov
mov
xor
sbb
js
and
pusha
push
inc
pop
mov
dec
xor
inc
sub
and
dec
inc
adc
les
push
in
scas
clc
mov
lret
test
xchg
or
es
mov
sahf
rorb
mov
push
pushf
mov
push
pop
and
arpl
mov
dec
push
push
cmp
xchg
xor
dec
jb
cs
inc
filds
movsb
cmp
sub
cltd
nop
lret
pushf
and
sbb
adc
sub
dec
enter
cld
lahf
mov
lock
cmp
xchg
or
push
inc
inc
adc
cmp
push
dec
enter
hlt
inc
mov
nop
lret
test
inc
inc
adc
adc
incb
sarb
nop
lret
test
adc
dec
push
lahf
xor
out
pop
push
xor
mov
cmp
jne
push
and
shlb
call
add
dec
dec
mov
mov
or
and
mov
loop
push
sti
push
mov
mov
or
aas
sub
nop
lret
shl
les
adc
int
xchg
test
enter
xchg
sub
mov
jl
adc
movsb
cmp
pusha
daa
movsb
jb
add
push
out
cmp
cmp
in
pop
subb
cmp
mov
or
sbb
lret
cld
popf
andl
add
dec
in
lock
inc
sub
cltd
sub
lock
pushf
dec
enter
pushf
dec
enter
mov
ds
fs
pushf
mov
inc
dec
es
and
adc
test
xchg
or
cmp
xor
or
cltd
nop
pop
mov
enter
mov
leave
test
pushf
dec
enter
daa
pop
jb
pop
xor
mov
cmp
popf
das
or
in
out
pushf
jne
es
inc
pop
call
dec
loopne
fcomps
sub
or
les
cltd
xchg
mov
sub
pushf
dec
enter
pushf
dec
enter
sbb
mov
andb
add
and
daa
in
sub
add
aam
pop
movsl
pop
sub
xchg
sbb
cmpl
pushf
xor
push
imul
pushf
xor
sti
cmp
adc
and
cmpl
shrl
push
outsl
enter
pop
pushf
addb
enter
xchg
pushf
sbb
rcrb
sti
add
nop
add
sti
jo
aam
mov
xchg
fwait
jecxz
ss
outsl
sti
add
imul
jle
cmpsl
dec
adc
adc
insb
jmp
insl
sahf
cltd
je
and
inc
sbb
sbb
in
add
lcall
jo
pop
mov
pop
push
cmp
loop
movsb
js
aaa
pop
or
loop
aad
inc
ficomps
sbb
in
mov
jle
les
and
nop
sbb
nop
pop
adc
out
inc
jno
dec
adc
imul
push
jmp
dec
lcall
mov
ljmp
adc
lcall
inc
adc
cwtl
cmpb
jb
mov
sbb
mov
int
orl
inc
and
or
adc
nop
pop
sub
pxor
inc
mov
jo
or
jno
loopne
movsb
aaa
daa
fadd
push
or
mov
aam
mov
sbb
add
inc
mov
add
jmp
icebp
push
push
movsb
mov
add
fisubrl
lret
cld
mov
push
pop
das
in
xchg
lock
popf
cmp
adc
and
add
pop
lock
pop
popa
mov
mov
jmp
push
test
add
inc
cmp
jbe
outsb
aad
add
inc
fsts
jne
mov
xchg
inc
out
shlb
and
js
je
fucomi
xchg
lcall
push
push
in
lock
lock
dec
xor
cltd
jl
or
fiaddl
push
sbb
and
out
arpl
std
jl
call
pusha
sub
add
inc
shll
inc
lock
or
lock
ja
adc
ds
push
test
bound
out
and
in
loope
mov
and
lret
arpl
push
loop
fs
ficoms
jle
outsl
je
in
pushf
dec
pop
push
es
aam
dec
es
push
dec
inc
inc
adc
jb
rcrb
test
sub
and
and
adc
mov
sbb
movsl
add
cmpl
sbb
lock
call
pop
fcompl
aam
in
inc
add
mov
xor
and
jae
cltd
nop
xchg
adc
enter
enter
test
and
daa
fs
sbb
jb
push
fs
or
cmp
es
dec
mov
push
cmp
leave
test
je
inc
sbb
adc
jnp
or
bound
xor
cld
xchg
sbb
lock
add
jmp
inc
inc
dec
enter
enter
fs
adc
and
cmp
cltd
nop
xchg
sete
or
push
jl
fs
pushf
insb
sbb
add
or
mov
xor
or
jl
scas
stos
rcrb
or
push
das
xchg
xchg
mov
cmp
sub
nop
sbb
push
adc
insl
pop
mov
test
sub
fcmovnb
dec
sub
aas
pop
in
or
fdivrs
or
int3
test
ror
ret
and
pop
lods
xor
insb
ret
int3
push
repnz
sbb
hlt
ficoms
add
xor
add
stos
movsb
inc
xor
stc
adc
dec
pop
add
aad
adc
pop
jne
mov
push
lock
data16
fwait
add
inc
movsl
jbe
xor
jae
push
mov
insl
shll
xor
sub
jl
push
ljmp
inc
dec
cmc
xchg
add
cs
push
rep
and
repz
dec
mov
cmp
pop
sbb
adc
roll
sub
and
pop
xchg
pushf
cmp
in
mov
sub
int3
mov
shll
pop
ss
data16
add
add
xchg
push
cs
jno
repnz
sbb
adc
dec
aam
enter
fs
fstl
arpl
bswap
sbbl
repz
aam
hlt
add
add
and
xchg
xlat
ss
xchg
sarb
in
mov
je
fstps
mov
sbb
gs
add
data16
bswap
push
jg
push
mov
stos
in
pusha
lahf
daa
push
ret
xchg
push
pop
inc
lods
les
push
mov
adc
rclb
push
adc
sub
push
xor
inc
decl
jmp
fisttps
test
aad
sbb
adc
jns
and
or
pop
ret
les
cmp
push
xchg
es
cmpsl
add
adc
shlb
pop
in
mov
or
rcrl
and
dec
dec
mov
xor
cmp
pusha
xchg
setne
xor
in
fstl
cli
mov
jae
inc
mov
sub
xchg
sub
loop
out
xchg
test
push
repnz
sub
mov
push
enter
insb
inc
mov
loope
mov
push
jp
push
adc
imul
iret
add
mov
sbb
add
cmc
cld
cld
fildll
and
lods
cmp
fadds
in
xor
mov
insl
cmpl
ret
fwait
mov
jae
in
push
add
sbb
sub
pop
cs
cld
adc
scas
in
cld
add
xor
sbb
loope
xchg
adc
xlat
cmpb
mov
sbb
ret
pop
push
cmpsb
mov
push
std
imul
jmp
mov
femms
bnd
cltd
andb
daa
bound
mov
cs
pushw
sbb
out
fwait
push
jl
pop
inc
jg
or
lock
pop
pop
cmp
movsb
test
cmp
rorl
lods
sub
push
lea
push
ret
shll
fnstcw
int
and
jae
push
pop
adc
or
lea
dec
sti
sub
imul
adc
push
mov
mov
inc
or
and
in
je
jmp
mov
add
push
call
xorl
push
push
or
incl
sbb
jmp
shl
cmp
enter
cmp
mov
cmp
dec
les
mov
and
je
push
js
sub
sti
aaa
and
inc
gs
into
jnp
lock
add
dec
cmp
or
cmp
ds
cmp
dec
adcb
fcmove
xchg
sbbb
stos
movsl
cld
or
ret
sub
in
or
cli
mov
sub
mulb
add
ljmp
sbb
xlat
sbb
ret
je
fiadds
push
es
inc
mov
xchg
incb
sar
mov
jle
out
sahf
fnstsw
movb
aaa
push
cmp
inc
das
hlt
movsbl
das
cmp
jl
pop
inc
sub
mov
jecxz
inc
xchg
dec
movsb
int3
cld
test
inc
lret
int3
sti
aaa
int
test
js
or
adc
xchg
xchg
cld
mov
test
or
push
jmp
mov
sub
mov
les
mov
mov
fisubs
or
rclb
int
and
mov
xchg
or
faddl
in
and
xor
notl
xchg
or
stc
mov
pop
cmp
pop
xlat
pop
xchg
inc
adc
fsts
stos
jl
cmc
fadds
adc
hlt
push
inc
xor
push
add
sbb
and
mov
sbb
out
ljmp
dec
and
rorl
ljmp
jecxz
das
pop
inc
das
jmp
rcrb
mov
push
imul
cmp
enter
das
ss
sub
imul
leave
add
sub
and
test
fwait
sub
nop
flds
ds
sti
sbbb
cwtl
jbe
adc
jge
sub
pop
mov
dec
cs
push
mov
mov
adc
mov
pop
cmpb
mov
jno
and
sti
cld
cli
and
sub
and
add
and
or
test
lea
cwtl
xorb
icebp
add
popa
xor
pop
jge
mov
mov
aam
lcall
pushf
stc
push
push
cmp
incb
add
nop
lock
pop
stc
and
rclb
clc
xchg
fs
or
and
jmp
popf
test
push
jo
test
into
repnz
push
pop
dec
pop
test
clc
sbb
and
cmpxchg
mov
cmp
movzbl
mov
clc
sbb
or
sbb
call
jb
push
inc
mov
dec
xor
cmpsl
nop
dec
scas
jl
inc
subb
leave
stos
or
mov
jg
into
rolb
push
shrl
fstpl
ja
xchg
or
cli
sub
jge
xor
sbb
mov
imul
mov
sub
and
cmp
nop
mov
inc
push
and
mov
inc
loope
sbb
movsb
repnz
adc
jp
sbb
xor
das
cwtl
clc
sbb
stc
push
inc
in
adc
push
cmp
aad
es
jbe
mov
adc
adc
xchg
and
adc
adc
inc
mov
pop
cmp
push
sbb
push
js
aam
dec
xor
jg
test
adc
push
xchg
jmp
cld
fnstenv
sub
dec
fwait
push
sti
lock
pop
push
addr16
mov
bound
mov
repnz
movsb
int3
mov
cmp
or
pop
mov
mov
je
xchg
sub
or
scas
jns
and
xor
in
sub
pop
and
or
sahf
mov
jmp
es
adc
lahf
and
xchg
sbb
and
xchg
int3
dec
push
loopne
jb
push
dec
clc
shrb
mov
in
inc
sbb
sbb
je
pop
or
shrd
mov
fisttpll
jo
and
or
or
sub
test
lcall
sbb
sarb
loopne
or
icebp
lret
mov
adc
scas
mov
pop
rcl
insl
xchg
ljmp
in
scas
sbb
addb
pop
or
pop
rorl
push
test
sbb
mov
cmp
sub
int3
jmp
and
sub
ds
inc
cmp
das
orb
push
mov
sub
arpl
pop
or
roll
lret
paddd
addr16
mov
adc
and
or
dec
loopne
popf
xor
es
mov
dec
push
sbb
leave
leave
push
sbb
xchg
sbb
push
push
pop
test
lds
cmpsb
shlb
adc
sub
jns
push
add
aam
mov
imul
sbb
sub
cmp
jl
dec
push
dec
or
call
in
sarl
les
and
out
rolb
ds
push
push
and
sbb
shrl
stos
lods
and
pop
xchg
push
cmpsl
pop
mov
mov
sub
rol
jl
jnp
and
lret
pop
add
imul
jb
or
mov
jne
push
leave
or
pusha
fcompl
add
inc
push
lret
pop
daa
push
mov
mov
inc
add
jp
or
sbb
jl
push
dec
sbbl
sbb
cmp
xchg
pop
sbb
stos
mov
mov
jae
cltd
xlat
test
pusha
xchg
repz
jae
neg
adc
mov
mov
xchg
shrb
add
jns
jge
dec
jecxz
ret
imul
test
icebp
dec
dec
dec
xchg
push
inc
sbb
orl
sub
jno
pop
cltd
pop
jo
push
lahf
push
mov
dec
lret
nop
arpl
iret
xor
push
sub
jbe
iret
and
adcb
pop
sbb
dec
or
test
stos
dec
and
add
insl
add
mov
xor
mov
ret
pop
and
incl
lods
jp
aam
movsl
cmc
in
mov
aas
push
push
arpl
inc
test
stos
adc
cmpsl
je
or
or
push
dec
aaa
rcll
pushf
xlat
mov
add
ds
or
and
cwtl
nop
xchg
push
sub
mov
and
jne
sbb
and
lds
shlb
ds
aas
pop
das
orl
stos
sub
push
add
or
jge
or
imul
mov
mov
jl
mov
fwait
pop
ret
je
push
push
or
sbb
cmp
loopne
adc
pushf
mov
leave
lret
or
mov
mov
mov
inc
lods
add
je
lock
lahf
xchg
incb
pop
je
mov
stos
orl
jmp
adc
sbb
or
neg
or
mov
dec
jne
aas
lock
lods
xchg
adc
inc
and
push
in
fstpl
insw
les
sub
test
and
iret
push
dec
test
sbb
inc
xchg
mov
gs
xor
jb
push
sbb
loope
cmp
arpl
sub
push
push
push
leave
fistps
push
cmp
data16
and
sub
adc
int3
jne
loop
stc
dec
test
or
mov
sbb
in
sbb
clc
in
shl
cld
push
or
aaa
fimuls
adc
sub
add
sbb
adc
aaa
push
imul
int
or
xchg
or
repz
mov
dec
add
repnz
in
or
popf
push
aaa
rclb
movsl
pop
and
js
push
imul
xor
aad
pop
rcrb
cmp
push
sbb
add
scas
test
mov
jb
cmpb
or
sub
shll
dec
push
ljmp
and
xor
xor
clc
test
in
inc
cwtl
or
cmp
je
sbbb
into
push
adcl
xor
add
sbb
hlt
cld
lods
jp
jg
aaa
lods
movsb
test
adcl
push
mov
pop
xor
je
test
adc
mov
fsubr
jge
xor
nop
out
inc
push
and
inc
out
in
into
out
stos
fwait
pop
mov
icebp
imul
and
jge
or
stos
inc
lret
aaa
fsubrs
rolb
push
push
mov
and
pop
and
lea
repnz
cmp
enter
hlt
mov
add
inc
mov
les
push
into
mov
jo
sarl
cld
sub
jg
mov
stc
test
fildl
dec
lds
jmp
xchg
pop
jb
test
cmp
enter
adcl
and
inc
popf
sub
adc
push
push
mov
pop
enter
cmpsb
faddl
cmp
ret
mov
test
mov
lret
or
xor
add
divb
es
push
and
lods
dec
and
pop
mov
mov
lock
lock
add
repz
orl
daa
orb
out
adc
ljmp
test
sbb
mov
pop
lea
lea
push
or
stos
in
push
add
cmp
jne
std
mov
lcall
or
inc
js
add
sti
and
push
pop
lcall
into
adc
cmpsl
es
mov
stc
push
insl
sub
hlt
inc
mov
sbb
xor
psraw
push
mov
pushf
test
js
push
dec
jo
or
pop
adcl
aas
mov
sbb
pop
mov
jp
or
or
test
fdiv
sub
push
cmp
pop
incl
add
mov
les
xor
xor
sbb
nop
xchg
packsswb
int
dec
fsubl
roll
sahf
call
cmp
add
enter
xchg
roll
mov
addl
pusha
add
adc
mov
test
loopne
rolb
in
mov
mov
add
adc
adc
popf
adc
mov
pop
pop
xchg
or
mov
push
cmp
es
xchg
addl
or
clc
mov
xchg
push
enter
or
jns
je
lea
pop
jnp
jg
add
ret
fdivs
or
mov
outsb
add
xadd
ret
je
lret
lock
jg
sub
jecxz
jmp
adc
nop
jns
aaa
int
cwtl
jo
jo
pop
pop
jne
pop
out
subl
and
test
testb
notb
inc
push
popa
add
mov
cli
nop
cli
test
xchg
mov
jmp
fs
loop
mov
test
mov
inc
or
jmp
cmp
adc
lods
jne
xchg
stc
xor
push
addb
js
or
je
adc
je
mov
or
imul
imul
xchg
jne
test
in
push
les
in
pop
pop
outsl
or
andb
dec
cmp
xor
fistl
test
loopne
jo
push
js
or
pop
push
stos
mov
ret
or
orl
cmp
mov
mov
rclb
outsb
repz
push
jl
jne
out
xchg
jmp
push
mov
jb
push
adc
inc
cs
push
xor
sbb
pop
dec
les
sbb
inc
lods
mov
rcrb
ret
jle
push
adc
sub
or
mov
adc
and
add
ud1
lea
mov
inc
add
inc
adcb
jae
add
cltd
or
push
and
jge
jle
inc
orps
or
adc
mov
cmp
sbb
in
pusha
lods
push
icebp
or
push
inc
sahf
sub
pop
mov
sub
and
shrb
into
ja
sub
popf
xchg
repnz
sub
subb
sti
or
inc
es
sub
xchg
xchg
or
inc
nop
and
pop
leave
adc
pushf
jge
imul
xor
push
repz
loopne
out
push
inc
roll
into
xchg
xor
cmpsl
cltd
and
mov
dec
arpl
stc
test
cmp
ljmp
jno
xor
or
xchg
js
test
clc
sti
leave
pop
les
hlt
sti
aad
dec
mov
and
jb
leave
lds
adc
es
add
or
inc
loope
icebp
pop
or
scas
call
mov
shrl
fldenv
or
pushf
push
or
sbb
push
pop
xchg
sti
cmovns
and
mov
in
enter
insb
jl
js
test
or
fcomi
push
pushl
in
jo
xchg
xor
daa
mov
xor
dec
pop
or
jmp
movsb
and
sub
adc
jb
jno
jnp
cmpl
notl
int
sub
or
repz
push
das
sbb
pop
xchg
or
dec
rclb
loopne
mov
cmc
adc
dec
aaa
mov
xlat
iret
pop
jmp
je
jmp
mov
and
in
mov
push
lret
mov
lret
hlt
or
pop
sub
xor
mov
repnz
adc
pusha
popf
add
dec
mov
pop
pop
and
xchg
sub
jnp
arpl
xchg
push
or
pusha
loopne
pop
les
sbb
push
xor
testl
adc
ds
sub
movsl
jo
sub
daa
push
push
fwait
jl
or
jge
mov
mov
shl
cmp
add
add
sbb
mov
add
mov
addr16
pop
outsb
insb
cld
inc
jp
adc
sub
sbb
adc
sbb
loop
xor
and
pusha
lods
push
je
mov
cmpb
inc
or
or
sarb
jno
sub
shlb
push
bound
mov
and
and
movsb
sub
sub
xor
std
sbb
push
mov
movsl
push
sbb
add
and
sbb
inc
pop
rcrl
adc
sub
and
push
push
mov
push
pop
adcl
mull
dec
cmpsb
cmpl
int
inc
nop
and
xchg
js
dec
mov
mov
adc
popf
mov
add
stos
xchg
data16
xor
push
mov
adc
and
aad
js
push
loopne
pop
rcr
add
imulb
rclb
addl
rorb
or
xchg
add
add
jl
decb
and
or
push
sub
push
push
lcall
hlt
inc
add
fnstsw
ja
push
push
mov
data16
push
in
xor
xor
adc
push
pop
orb
inc
test
pushw
mov
mov
test
adc
dec
into
popf
scas
push
adc
lods
ret
sub
jle
mov
mov
dec
imul
xchg
cwtl
mov
mov
push
shl
hlt
inc
adc
lcall
int3
xchg
add
jns
add
sbb
test
cmpsl
cmp
mov
cmp
je
clc
test
rorb
push
lock
jg
cld
filds
stc
mov
push
shr
shl
mov
lea
add
orb
lcall
scas
mov
pop
add
jl
dec
mov
nop
push
fcomps
sbb
movsl
mov
xor
out
lock
jmp
mov
or
mov
push
pusha
mov
pusha
lea
push
push
sub
adc
or
push
push
cmpb
cmp
sub
insl
jo
sbb
lret
arpl
das
das
imul
and
imul
push
in
mov
in
in
push
xor
cmp
rolb
test
das
loopne
mov
js
mov
movups
cltd
clc
sahf
sti
sbb
adc
movzwl
test
mov
dec
loope
or
data16
mov
sub
sub
pop
sub
int3
push
push
push
push
mov
inc
mov
and
enter
sub
stos
or
lcall
js
mov
fiadds
push
pop
fldcw
fsubl
xchg
sbb
les
and
adc
or
adc
jg
or
mov
jl
insl
rcll
pop
adc
adc
cmpsb
imul
add
sub
pop
cmp
push
loope
ffree
or
cmpsb
cmp
adc
test
int
inc
fwait
inc
cmp
or
jo
jno
mov
jecxz
testl
mov
sbb
cmp
je
dec
adc
sub
xor
cmp
cld
cs
fsts
push
xchg
sbb
nop
sub
cld
adc
add
loopne
sbb
negb
jmp
push
shrl
fstps
xlat
pop
ss
mov
lods
xchg
insl
inc
or
add
mulb
sbb
adc
ret
dec
fiaddl
push
push
xor
sub
and
mov
jge
and
hlt
add
cmpsl
loope
dec
or
cwtl
pop
and
outsb
mov
mov
add
mov
mov
insl
adc
push
xchg
adc
sbb
adc
sub
ljmp
and
push
cmp
lods
nop
inc
push
mov
sub
cld
sbb
inc
xor
das
in
mov
cmp
inc
nop
push
testb
xchg
jno
fcoms
add
add
push
loope
or
test
xor
fbld
sub
inc
push
loopne
test
push
jp
xorl
push
push
lods
xchg
adc
std
clc
push
mov
cmp
mov
sub
clc
arpl
sbb
pop
hlt
nop
pop
jo
cli
xor
les
or
fs
dec
sub
push
test
sub
jmp
in
ss
cs
or
cld
adc
sti
cmpsb
xchg
sti
push
and
test
fidivrs
mov
xchg
fistpl
or
push
lea
das
sarl
lock
sbb
daa
dec
sub
xchg
pop
and
or
popa
cmp
sbb
movsl
mov
testl
mov
jno
cmp
je
cmpb
jmp
add
je
sub
or
push
push
sbb
push
adc
xor
in
sub
sbb
iret
sbb
fdivr
mulb
and
or
mov
hlt
lret
jmp
out
add
or
cmp
scas
mov
mov
sub
mov
adc
outsb
or
mov
pop
pop
and
sbb
mov
nop
lret
addl
movlhps
mov
pop
mov
push
pop
mov
push
push
inc
bound
dec
and
sbb
in
movsb
je
sbb
add
push
fdivrs
xor
lret
in
call
fmull
pop
push
test
sub
subl
shll
mov
loopne
lcall
fadds
dec
pop
xchg
add
mov
out
inc
rol
jne,pn
shlb
push
imull
cmp
inc
stos
je
test
jmp
das
xchg
xchg
les
pop
push
jmp
push
add
add
shlb
pop
jmp
push
sbb
fs
nop
xchg
lods
cmp
jmp
std
fmull
dec
movsb
jle
and
add
imul
xor
and
rcl
add
cmp
shr
inc
push
sbb
ret
inc
push
js
adc
ret
sub
ja
inc
outsb
jl
mov
pop
sbb
push
pusha
jp
pop
sahf
jle
sbb
call
lods
dec
push
rcr
mov
lds
cmpl
jne
cmpsb
stos
adc
mov
add
call
cli
pop
xorl
fdivrs
lea
lock
pop
lds
test
xor
fcompl
or
ret
cli
or
or
add
push
jbe
xor
addr16
fadd
jecxz
pop
push
ret
add
mov
and
add
mov
adc
and
rcr
push
jge
push
bound
and
sbb
push
cmp
jb
cmp
sbb
jmp
ret
mov
sub
sub
inc
fs
mov
mov
mov
cli
in
leave
cltd
mov
movsl
jmp
sbb
inc
inc
push
adc
fisubl
lea
fucomp
fldcw
sbb
jnp
js
js
std
jg
mov
lret
nop
rolb
jmp
jmp
out
aas
xor
dec
sarb
enter
and
or
aad
adc
pop
int3
in
ja
gs
mov
test
hlt
push
xchg
rorl
stos
mov
cmp
mov
pop
pop
enter
dec
ljmp
xchg
cmp
int3
loopne
inc
add
inc
cmp
jae
rclb
ret
jmp
pop
outsb
popa
xchg
fdivrl
pop
sub
cmp
xor
xor
mov
mov
and
mov
or
mov
lods
add
sbb
fucomip
mov
xor
add
mov
clc
jmp
cmp
pop
out
lds
pop
push
scas
dec
push
dec
pushf
jne
pop
ror
in
ds
mov
and
cmp
imul
push
lock
jle
out
push
nop
out
js
push
call
aas
je
cld
and
cmp
jne
loop
add
jo
mov
mov
inc
push
pop
cs
push
xor
addl
push
xlat
imul
dec
aad
xlat
and
into
xlat
pop
pop
inc
cld
arpl
movb
cld
cmp
hlt
jle
xchg
sub
cwtl
or
sbb
js
lock
les
or
inc
mov
adc
data16
xchg
call
mov
in
mov
xchg
inc
or
cli
push
push
rclb
mov
push
and
push
pushl
add
repz
jo
int3
inc
mov
ljmp
and
aaa
xor
dec
imull
push
pop
dec
das
mov
and
mov
test
mov
lret
mov
addl
push
adc
loopne
dec
call
shrl
xor
dec
in
clc
pop
rcr
cltd
ret
and
adc
add
jbe
cmpb
jo
sbb
hlt
idivl
jle
adc
jle
add
into
arpl
int3
jecxz
fildl
sbb
sbb
insb
adc
inc
stos
sub
cmpl
xchg
dec
loope
and
cltd
pop
xor
adc
fcoml
jle
fisubs
add
fcoml
inc
push
ret
jmp
add
add
rolb
pop
mov
hlt
bound
test
cmpsl
mov
mov
call
in
loope
jg
enter
mov
data16
xor
and
fdivrl
pushf
es
sbb
inc
cwtl
lods
pop
enter
push
push
fldt
lcall
mov
popa
xor
ficoms
mov
fwait
inc
mov
sahf
xor
or
dec
and
push
xchg
int3
clc
sub
orl
sti
lahf
ss
ret
lret
jb
push
xchg
push
jg
sti
inc
jae
mov
sub
add
cmp
je
adcb
leave
adc
adc
xor
fidivs
mov
add
and
mov
add
bound
imulb
loopne
dec
pop
xor
jg
fldt
lea
enter
sbb
adc
fidivrs
push
cmp
jb
dec
cmp
pop
xor
dec
adc
std
add
cli
xchg
fcompl
filds
add
add
or
ljmp
adc
pop
ss
clc
add
insl
bound
pop
enter
mov
std
into
xchg
pop
push
lret
jmp
mov
or
push
inc
push
cwtl
push
mov
jecxz
adc
das
xchg
inc
jge
sub
jns,pt
or
jmp
jge
add
jp
pop
pop
shlb
cld
sub
fildl
cmp
call
push
sbb
arpl
inc
popl
lret
and
push
cmp
pop
jmp
inc
bound
mov
sub
int3
xchg
lret
sbb
js
test
adc
sarb
mov
push
cmp
mov
push
test
sub
lock
jns
notl
aas
jbe
inc
lahf
loope
mov
push
inc
jp
dec
mov
sti
fmuls
loop
lods
add
cld
cmpl
sub
ret
mov
mov
mov
xchg
mov
pop
loope
mov
cmp
adc
cmp
es
mov
shlb
and
data16
push
loopne
jne
mov
in
popa
insb
lods
jmp
fcompl
jne
sbb
sub
push
jmp
cmp
shll
xor
flds
push
sub
push
in
movsb
and
dec
mov
lock
inc
add
mov
dec
jns
cmpb
je
pushf
jo
loope
movsl
or
add
decb
xlat
pop
xor
add
cmpsl
add
shlb
jle
lret
mov
pushf
and
jae
cmpb
jne
adc
xor
divb
jne
inc
pushf
jmp
roll
jmp
push
fisubrs
pop
inc
cmp
mov
inc
decl
mov
nop
lea
mov
or
mov
adc
mov
js
adc
adc
or
or
pusha
push
push
out
mov
sbb
add
adc
stos
aam
mov
cltd
mov
nop
je
and
pop
mov
cwtl
mov
sbb
push
sarb
pop
lock
pop
les
mov
sub
mov
cmp
pop
roll
int
cmp
sbb
aad
andl
divl
xor
jmp
push
imul
add
or
xchg
sbb
idiv
pusha
mov
push
and
orl
fwait
cmp
clc
lret
outsb
mov
pushf
inc
jmp
jns
mov
add
test
enter
mov
lahf
and
ret
insl
xchg
add
fldt
cmp
outsl
mov
jae
or
push
test
cwtl
out
je
push
cmp
andl
pusha
cmp
dec
adc
addr16
lods
add
insl
push
jbe
jno
xchg
xorb
fisttps
push
int3
inc
insl
shrb
pushl
sub
push
or
ret
xchg
dec
mov
mov
adc
ret
arpl
ja
push
dec
add
sbb
add
fadds
vdivsd
dec
jne
inc
push
xor
cmpsl
je
sbb
js
push
inc
sbb
movsb
xor
push
sbb
or
sbb
sub
cmp
and
dec
push
clc
dec
ret
dec
fiaddl
out
push
loop
fcompl
pop
push
loope
sub
push
mov
or
jbe
sti
add
mov
add
push
lret
insb
adc
xor
push
out
cmp
adc
ljmp
divb
fldl
push
cmpsl
adc
cmp
sahf
dec
cmp
pop
xchg
iret
mov
sbb
jo
add
int3
das
push
rol
lock
jns
shrl
loope
fadd
cmc
push
and
lds
and
out
mov
xchg
clc
fstpt
adc
push
pop
pop
jbe
push
adcb
and
shlb
push
push
or
pop
rcl
push
push
cmp
rcl
jns
cld
aaa
inc
push
scas
or
cwtl
lcall
mov
enter
jge
fucomi
cmp
jns
push
das
das
fadd
shlb
add
insl
out
xchg
pop
pop
rcl
push
inc
adc
inc
cmp
or
adc
rcll
into
ja
and
xor
sbb
ret
add
das
add
rcl
mov
adc
repnz
mov
mov
imul
mov
scas
or
add
loopne
rcrb
add
push
push
roll
xchg
pop
and
pop
push
sarl
or
insb
pop
add
xchg
jl
nop
cld
sti
cmp
call
or
add
imul
push
or
fisubrs
pop
rcrl
imul
cmp
jmp
xchg
jne
bound
and
or
push
jle
mov
push
cmpb
movb
push
inc
add
or
aad
pusha
imul
sbb
rcrb
mov
inc
xor
cmp
dec
push
mov
in
sbbb
pop
add
jl
ljmp
insb
stos
lock
lods
or
imul
push
insb
fsubl
pop
aaa
icebp
mov
jns
enter
fs
jle
jge
push
daa
aam
pop
pop
adc
or
insl
popa
lock
inc
dec
jbe
jno
imul
dec
and
clc
push
sbb
icebp
data16
pop
cmp
test
mov
xchg
pop
fmuls
mov
movsb
or
jb
mov
nop
shl
rdpmc
or
test
icebp
xchg
adcl
popf
sub
clc
in
mov
and
inc
xchg
adc
hlt
and
repnz
nop
add
cmp
imull
mov
push
pop
sbb
fiadds
fisttpll
test
jb
inc
in
jne
mov
push
inc
sti
int3
out
test
popl
cmp
cld
push
arpl
sbb
lock
movl
icebp
arpl
cmp
xchg
dec
scas
dec
loopne
std
and
movswl
mov
xor
insb
test
je
push
cmp
data16
data16
jle
cmp
jle
and
pop
jge
movl
push
push
test
push
enter
add
daa
add
enter
mov
pop
bound
ret
push
mov
xlat
hlt
jnp
sti
movsb
add
and
adc
jp
and
dec
inc
jp
jmp
xchg
or
inc
pop
ficompl
call
mov
out
outsb
or
add
add
icebp
call
add
sbb
push
mov
sbb
subl
cmpl
daa
dec
inc
jecxz
cld
sub
sub
ret
sbb
subl
mov
inc
xor
in
xchg
push
clc
cmp
fisubl
sbb
sub
dec
int
loope
inc
rol
xchg
call
dec
mov
push
push
lea
xor
mov
test
addr16
or
xor
mov
enter
pushf
add
pop
clc
insb
xchg
lahf
add
pusha
outsb
jmp
jne
loopne
sub
or
aas
dec
or
inc
sub
clc
pop
jle
or
jg
xchg
sbb
imul
cmpsl
xchg
cmpsl
sbb
nop
and
mov
or
sahf
cmp
ret
mov
mov
and
cmp
ja
imul
fistpll
sar
ja
je
mov
sub
cmp
add
call
push
je
or
out
je
sbb
insl
mov
aaa
fsubl
pushf
jns
and
mov
mov
je
lods
sbb
dec
movsb
out
iret
mov
pushf
rcl
push
mov
or
jbe
hlt
iret
outsl
push
popa
ja
je
clc
push
pop
lea
adc
movzbl
jo
shlb
cmp
pop
mov
push
mov
out
sub
push
int
push
jae
push
test
adc
daa
leave
mov
sbb
cmp
inc
push
push
pop
and
jns
out
inc
dec
sub
lcall
add
or
add
or
mov
enter
jae
push
xchg
shlb
push
cld
lock
add
fsubl
je
add
add
pusha
lahf
notl
push
sub
test
out
jle
imul
das
and
sbb
pop
mov
mov
rolb
shrb
jmp
mov
or
push
data16
adc
or
fs
shlb
ds
and
call
data16
cmp
push
pop
adc
mov
fiadds
push
ljmp
adc
or
mov
mov
adc
pop
fmuls
dec
jne
push
push
add
aad
xchg
fidivs
push
push
pop
jne
ljmp
test
out
add
push
mov
cmpsl
in
ror
push
pusha
das
test
dec
fwait
sub
arpl
int3
push
and
jo
ficomps
inc
aaa
movsb
rclb
dec
adc
pop
ret
ljmp
add
push
push
dec
jecxz
xor
and
decl
out
clc
xlat
mulb
mov
call
adc
jnp
sub
jo
pushl
fnsave
addr16
pop
pop
pop
and
xlat
loope
lret
fists
inc
xor
and
ret
je
sbb
mov
outsl
push
orl
push
adc
push
and
andl
jl
xor
or
mov
add
insb
sahf
mov
add
mov
push
and
and
rolb
inc
aas
add
imul
and
xor
pop
inc
dec
sub
add
xchg
es
dec
adc
dec
ret
add
inc
jns
adc
test
push
mov
mov
adc
shll
int3
jmp
adc
hlt
icebp
jecxz
test
push
mov
aaa
mov
cmp
mov
mov
xor
mov
cmp
cmp
sub
add
rorb
add
jo
and
push
sbb
mov
lret
xor
jg
add
je
insb
in
in
push
sub
subb
jbe
rclb
cmp
sbb
push
sbb
cli
out
movsb
addps
dec
mov
shl
add
cmp
xor
jecxz
lea
cld
jne
pusha
inc
lahf
test
pop
push
pop
loop
lret
xor
aas
pop
pop
cmp
dec
adc
in
add
leave
repnz
mov
cmp
dec
xor
rcll
push
inc
popl
ja
lods
and
push
adc
jb
cwtl
pop
xchg
jno
adc
fcoml
sub
jne
push
test
adc
pop
ror
je
dec
ja
add
push
push
push
xor
outsb
mov
or
insl
cwtl
cld
rcrb
pop
pop
popf
scas
stos
xor
aad
xchg
adc
fstpt
nop
loopne
ljmp
bound
ja
pushl
mov
sub
cmp
js
cmp
mov
adc
adc
inc
stc
pop
fidivrl
mov
shr
jbe
pop
adc
sub
cmpsb
xchg
xchg
test
cltd
dec
dec
adc
aam
jb
xchg
xor
daa
push
leave
leave
and
sub
xchg
pushf
dec
and
jb
cmp
cmp
pop
jbe
test
stos
dec
leave
insl
sub
jo
push
pop
dec
and
push
inc
dec
dec
inc
es
sub
push
and
test
das
mov
pop
and
outsl
dec
je
sbb
pop
mov
fnstcw
mov
int
into
stos
and
and
cmpsb
push
pop
sbb
mov
mov
in
pop
ds
or
hlt
je
cmp
repnz
push
call
cmp
xor
shrl
mov
cmp
jmp
fisttpl
imul
lock
push
sbb
mov
fdivr
aas
sbb
inc
cmp
jb
jmp
stc
rclb
in
push
sbb
or
pop
je
add
jo
in
add
into
lcall
and
nop
test
push
pop
test
add
aas
xchg
lret
pop
or
pop
je
sbbl
xor
add
xor
pop
lock
xchg
in
jmp
fcoms
mov
mov
and
and
je
mov
enter
enter
js
mov
mov
dec
cmp
adc
jle
incb
ja
les
lds
xor
lods
popf
insl
lods
std
adc
push
dec
adcb
ret
div
lret
push
or
push
lret
pusha
xchg
pop
sub
pop
ret
xchg
call
fwait
sarb
ja
pop
pop
fs
inc
pusha
adc
adc
pop
jae
sbb
popa
add
popf
addr16
pop
mov
repnz
out
add
mov
in
sub
mov
shl
push
and
dec
sub
sub
movsl
adc
pop
out
xor
pop
into
jmp
ret
lea
mov
push
fcmovu
mov
ds
adc
jne
sbb
and
mov
xor
or
je
call
and
mov
add
push
call
fisttpl
adc
and
outsb
je
js
mov
pop
aam
flds
or
xor
push
int
clc
push
cmp
mov
fidivl
push
ret
push
and
mov
nop
popfw
out
fs
fstps
dec
inc
dec
or
imul
sahf
mov
lret
int3
cmp
jbe
lea
push
cwtl
inc
cmpsl
lock
sbb
ret
sbb
ds
shl
push
push
pop
mov
sbb
and
popf
call
mov
repz
mov
push
jns
ss
lock
ficompl
pop
sbb
outsl
xchg
inc
mov
jle
mov
push
shr
mov
neg
lea
fbstp
cmp
movl
push
pop
jmp
and
test
pop
je
xchg
or
rcll
shr
add
mov
shr
shl
sub
add
push
or
pop
push
repnz
ds
push
mov
movsl
mov
sbb
js
in
add
test
out
adc
dec
jne
loopne
scas
and
andl
jne
orl
and
jecxz
fdivrs
dec
aam
dec
or
xchg
add
inc
or
sub
in
fs
adc
jae
cmpsb
inc
movb
xor
and
add
sub
sub
ds
mov
pop
icebp
push
and
push
sub
dec
les
faddl
add
loope
push
xor
jne
mov
ficoml
sbb
sbb
jne
push
or
movsb
rcrb
jmp
clc
popf
mov
xor
xchg
and
xlat
mov
inc
cmp
inc
mov
cmp
push
in
pop
inc
jno
call
jno
mov
mov
jg
add
push
je
or
push
sbb
in
popa
sbb
cmp
push
add
push
mov
mov
adc
pop
adc
lret
adc
add
cwtl
push
nop
mov
inc
add
inc
and
lock
xchg
clc
xor
push
push
mov
and
sbb
rcrb
xor
les
sbb
dec
jecxz
add
mov
icebp
mov
add
pusha
lret
bound
and
das
popf
xchg
enter
dec
xor
adc
push
push
je
push
fdivrp
fimull
xor
push
clc
aam
insb
dec
cs
loopne
push
sub
or
push
jnp
enter
les
test
mov
pop
lret
shll
push
fs
add
fsubrl
gs
add
xchg
cmp
xor
or
call
test
in
jp
sub
mov
pop
loop
or
bound
and
and
jle
insb
pop
movsl
mov
inc
call
dec
roll
mov
sub
and
aas
xor
push
mov
shll
mov
jge
adc
mov
xchg
pop
loopne
in
mov
mov
fninit
inc
sub
mov
ds
ret
ds
adc
sub
popf
mov
dec
add
sarb
hlt
sub
pushf
push
cmp
fistl
lea
mov
xchg
pusha
adc
jnp
sub
sub
clc
ret
jmp
mov
in
adc
dec
xor
imul
int
push
in
xor
sub
loope
xchg
xchg
inc
fmul
push
test
ret
mov
or
fsubr
and
adc
es
movsl
xor
sbb
dec
cmp
movsb
xchg
mov
cmp
popf
mov
lods
insl
cmp
imul
dec
add
jb
es
test
test
xchg
testl
push
outsl
xor
and
shl
in
movsb
ret
jp
jns
sub
cltd
mov
fs
sbb
xor
pop
aaa
xchg
imul
or
dec
push
sub
jg
adc
xchg
sbb
std
lock
es
sbb
sub
repnz
mov
push
and
fwait
repnz
xlat
and
sub
fcomps
inc
jecxz
jae
cmpl
sub
popf
cld
bound
out
mov
jbe
bound
jo
xchg
jb
adc
hlt
sti
push
lret
pushf
or
sti
fs
insl
sub
push
cs
scas
dec
data16
xor
and
scas
push
call
or
in
push
mov
in
or
das
lds
idivb
xor
aam
xor
jns
clc
xor
outsl
pop
lcall
in
andb
test
or
lock
in
mov
pop
cwtl
mov
mov
and
xorl
jb
not
scas
sbb
xor
out
xchg
dec
cs
call
pop
pop
adc
xchg
imul
mov
mov
cmp
dec
imul
dec
or
neg
and
pop
push
jns
movsl
lds
out
in
call
mov
jb
in
or
xchg
mov
add
sub
xor
std
push
mov
push
and
repz
mov
jmp
mov
sub
inc
xlat
add
push
test
jne
or
fstps
cld
mov
mov
cs
add
add
push
cmp
inc
add
push
mov
adcb
xchg
out
clc
std
push
pop
fs
es
lea
popf
or
inc
pop
add
outsb
adc
inc
or
lock
daa
mov
enter
push
cld
cmpsl
cmp
or
loop
mov
jmp
inc
pop
push
aaa
mov
adc
xchg
movsl
rcrb
push
and
test
adc
or
call
inc
fdivl
sbb
inc
loope
xor
mov
push
cmpl
jne
rcll
cwtl
loope
push
rclb
cmp
les
ss
and
daa
movsb
and
test
pushf
push
xchg
and
cmp
call
stos
jae
lret
adc
cmp
xor
hlt
dec
test
adc
incb
stos
and
dec
je
jmp
push
dec
inc
in
fmull
mov
test
mov
cmp
sbb
or
pop
adc
mov
es
cli
into
xchg
pop
call
and
in
cwtl
pop
test
ror
adc
mov
or
jne
sbb
loopne
mov
mov
push
in
in
adc
cmp
pop
xor
push
fstps
in
and
add
out
push
loope
lods
or
orl
xor
not
and
lret
pop
inc
mov
out
push
mov
subb
int3
and
inc
into
mov
or
adc
add
in
sti
lahf
pushf
xor
sbb
mov
daa
mov
cmp
and
mov
ja
mov
enter
push
out
fwait
inc
movsb
or
dec
sub
shl
add
pop
enter
or
push
outsb
mov
inc
push
test
sbb
cwtl
push
jge
add
je
cld
push
pushl
inc
and
loope
adc
adc
shlb
loop
fisubrs
sub
xchg
mov
pop
sub
push
push
pop
stos
adc
gs
mov
mov
test
push
cli
rcll
ds
pop
xor
sub
xor
xchg
pop
dec
lahf
pop
jmp
in
jno
in
xchg
add
in
stos
loopne
mov
xchg
outsl
pusha
jne
inc
in
or
or
mov
adc
push
jo
test
xor
ljmp
mov
push
ljmp
dec
loopne
dec
inc
sub
dec
sbb
loopne
sbb
fucomp
pop
dec
push
and
clc
or
dec
loopne
sbbb
lock
mov
or
pop
insb
push
xlat
adc
mov
icebp
mov
inc
adc
or
cmp
pushf
popl
hlt
xchg
adcb
push
insl
cmpw
pop
repz
mov
faddp
push
pop
aad
fs
and
sub
cmp
sbb
xchg
adc
sbb
push
xor
mov
pushf
jnp
jmp
adc
fmuls
sbb
enter
imul
cmpsl
inc
push
inc
adc
xchg
lock
push
or
test
loopne
dec
mov
loopne
nop
sub
imul
scas
aaa
push
fnstcw
lock
inc
fs
xor
sbb
xorl
dec
push
shrl
loope
jmp
xchg
push
arpl
rcr
mov
lods
das
push
inc
ss
ret
cld
leave
pop
stos
dec
ljmp
adc
jecxz
popf
jmp
repz
push
ss
or
sub
ds
mov
clc
add
mov
loope
sbb
mov
add
cli
adc
ret
shrl
test
jns
les
jmp
and
mov
push
lods
ficoml
xor
int
cmp
adc
sbb
dec
dec
pop
jge
push
imul
rclb
ja
add
in
out
call
divps
test
inc
in
test
sbb
adc
or
jae
mov
xor
sub
xchg
fwait
jl
adc
push
inc
mov
outsl
outsl
sub
push
dec
or
ljmp
call
outsl
aad
xlat
fs
push
and
inc
push
sub
lcall
fstps
lcall
in
add
adc
or
jmp
xchg
aaa
or
adc
in
or
loope
sub
dec
or
mov
aas
mov
call
dec
std
sub
dec
test
push
adc
dec
xor
and
cli
pushf
arpl
xor
mov
and
jb
cs
push
testl
jg
mov
inc
add
in
sbb
add
cmp
aas
cmp
je
adc
cmpsb
inc
mov
sub
out
orl
inc
fildll
and
lods
movb
xorl
push
shl
add
cmp
mov
mov
sbb
add
and
mov
cs
push
sub
jbe
xchg
xchg
jg
fisttpll
xchg
adc
in
pop
or
iret
clc
and
pop
pop
mov
inc
and
fmull
or
xor
dec
jp
lock
cmp
je
fadds
decb
stc
add
or
add
add
cld
cli
and
push
push
adc
xor
dec
sbb
push
je
push
addr16
pop
lods
cltd
pop
pop
pop
sub
sub
arpl
xchg
mov
push
xchg
sbb
xor
pop
stc
pop
push
add
pop
sbb
cld
pop
mov
nop
sub
pop
inc
and
mov
push
inc
xchg
mov
movsl
xor
sbb
inc
into
add
movsb
stc
outsb
rclb
shrb
or
sbb
add
mov
adc
lods
and
sbbb
sub
jbe
jl
adc
sub
in
je
cmp
cmp
and
xor
faddl
call
fsubrp
or
mov
add
pop
fdivr
cltd
je
sub
rorl
insb
push
sub
sti
cmpsb
sub
cmp
push
std
cwtl
cmp
add
fwait
out
sub
out
or
data16
xchg
sbb
cmp
hlt
int3
fisubl
jo
movsb
cli
popf
sub
xor
jae
mov
test
fistl
jno
sbb
pop
jne
cld
adc
pop
sub
sub
fiadds
bound
push
fwait
aam
addr16
popa
cmp
and
adc
push
mov
add
es
outsb
insl
incb
adc
enter
aaa
lret
xchg
sbb
mov
addr16
sbb
jle
add
pop
push
gs
or
mov
and
xlat
inc
or
bound
daa
les
pop
outsb
xchg
in
sbb
adc
pop
mov
loop
hlt
arpl
sbb
push
or
test
cli
xor
repnz
xchg
add
sub
aaa
mov
mov
inc
push
push
mov
dec
gs
mov
ljmp
lods
das
xchg
jecxz
test
call
push
cmp
add
ret
jmp
inc
mov
pushf
and
fsubs
push
insl
mov
mov
push
and
call
int
add
jp
and
inc
lods
mov
or
xchg
sbb
insl
test
xor
arpl
ds
xor
sti
sbb
mov
inc
add
or
cmp
adc
and
mov
lds
add
mov
mov
dec
add
cmpl
jb
sub
clc
sub
sub
pop
jb
sub
ret
cmp
and
pushf
xchg
push
and
cmp
cmpl
and
add
add
outsl
push
cld
sub
mov
cmpsb
nop
sub
xchg
les
js
pusha
lea
lea
xchg
sbb
pushf
or
rol
movsb
fs
adc
push
dec
pushf
mov
inc
in
mov
push
shlb
rorl
dec
jno
rolb
out
in
orl
cld
addr16
je
jbe
mov
clc
inc
sbb
sbb
cld
sti
push
sub
sbb
and
hlt
adc
or
sbb
add
push
bound
lods
xchg
xor
mov
lea
and
xchg
pop
popf
notl
inc
jg
and
out
imul
xchg
pusha
pusha
xchg
pop
lret
leave
mov
loopne
out
insl
pusha
outsl
mov
jl
frstor
cmp
in
and
cmpsl
adc
adcl
aam
and
lret
orb
mov
or
scas
rorl
cmp
scas
dec
ret
lods
pop
push
je
dec
sub
out
pop
push
scas
sub
pop
mov
adc
mov
rclb
xchg
pop
je
pop
testb
cmp
daa
xor
jmp
ljmp
adc
mov
mov
fsubrs
pop
ret
nop
test
or
jg
cmp
jne
cmp
mov
xlat
and
and
shlb
enter
insl
or
adc
xlat
push
or
jne
mov
pop
out
cmp
jmp
mov
insb
mov
jp
pushf
gs
or
adc
in
test
xchg
lds
rcrb
pop
fs
mov
mov
data16
loop
or
cmp
cmp
cmp
pop
add
cs
push
int3
add
jmp
adc
mov
mov
or
lods
in
scas
sub
cmpsb
scas
mov
push
add
lea
or
mov
mov
jecxz
and
mov
cmp
incb
pop
sbb
cmp
push
xor
push
les
xor
push
je
aad
sti
mov
cmp
jbe
lcall
les
push
mov
xchg
xchg
cmp
pop
lock
or
mov
mov
rolb
or
sub
add
push
mov
sbb
loopne
mov
lea
dec
pop
cmp
mov
xchg
rcl
dec
loope
push
and
adc
push
mov
js
jne
adc
push
adc
mov
mov
sbb
or
je
fcoms
inc
or
insb
aam
xlat
add
add
ds
inc
pop
fsubr
lock
lret
add
xor
jecxz
int3
insb
rolb
es
push
cwtl
inc
hlt
pop
test
mov
mov
movsb
js
sbb
pop
mov
mov
push
fsubrl
ficoml
pushf
adc
jae
jmp
push
cmp
push
jae
cmp
xchg
sbb
sbb
add
aam
fwait
mov
es
test
loope
ljmp
int
rcl
jmp
and
adc
movsl
dec
dec
jo
aam
cmpsb
sbb
mov
sub
jb
pop
inc
cld
mov
push
gs
mov
mov
mov
xor
mov
xor
adc
xchg
xlat
sbb
xor
push
aaa
push
mov
mov
or
dec
stc
add
inc
mov
movsb
loop
push
xor
in
fdivs
cmp
leave
mov
add
cmp
and
jp
mov
mov
jnp
push
cmp
clc
jno
std
inc
add
add
pop
scas
jnp
push
fisubs
pop
pop
movsb
loopne
push
mov
inc
push
adc
xor
mov
or
adc
cmpb
jmp
cmp
aaa
cmpsl
cmc
sbb
mov
sbb
sbb
mov
mov
inc
adc
cwtl
test
notl
and
xor
pushl
mov
ja
add
cmp
jl
push
pop
or
cmc
xor
mov
adc
loopne
add
scas
mov
push
jbe,pn
lret
inc
jg
jns
cmp
loopne
inc
jo
push
inc
shll
push
cmp
inc
inc
daa
call
enter
sbb
addr16
add
push
stc
mov
cmpl
lahf
fbstp
mov
or
sbb
ficomps
fwait
jne
inc
sub
lea
pop
leave
and
decl
xor
xchg
popa
divl
push
loope
inc
mov
sbb
into
sub
fnsave
xchg
and
inc
jno
movsl
popa
enter
adc
orl
das
adc
andb
mov
mov
jbe
push
popa
nop
dec
jmp
jp
xchg
xor
repz
dec
lock
in
mov
nop
icebp
nop
or
adc
shlb
jmp
jl
popa
sub
push
rcr
loopne
pop
dec
movsbl
jp
sbb
or
insb
xor
sbb
movsl
xor
dec
mov
pop
and
xlat
and
push
push
push
jae
dec
and
ret
fwait
inc
jbe
and
scas
mov
inc
ds
pop
sbb
scas
mov
jne
test
push
aam
enter
xchg
repnz
subl
daa
mov
lock
or
fstps
imul
setbe
jmp
push
mov
push
roll
push
mov
mov
xor
nop
imull
xchg
pop
insb
push
loopne
adc
or
add
sbb
icebp
movsl
les
mov
nop
push
sbb
push
jecxz
mov
cmpsl
pop
adc
sbbb
pop
inc
call
loopne
into
inc
push
cltd
sbb
movsb
test
mov
sbb
scas
mov
mov
mov
enter
pop
push
mov
jno
mov
add
filds
sbb
out
sti
daa
pop
inc
fs
mov
push
es
fiadds
cld
sub
mov
dec
push
dec
ret
aaa
push
push
sub
je
lcall
rcll
adc
push
pop
les
pop
andb
ss
inc
pushf
orb
and
adc
sub
pop
jecxz
add
jmp
inc
les
jno
cmp
sbb
push
aaa
push
subb
mov
mov
mov
jp
lds
pop
sarb
mov
jmp
add
dec
xlat
orb
mov
pop
dec
xchg
cld
mov
fdivr
fmulp
test
stos
lea
jecxz
dec
adc
push
mov
hlt
orb
xor
cld
jg
nop
sbb
inc
sarb
mov
adc
inc
xor
push
xchg
imul
test
test
incl
and
sbb
inc
in
int
das
je
and
jno
or
rol
mov
in
mov
and
add
pop
js
or
push
push
and
fimuls
or
cs
or
mov
xchg
sbb
cmpsl
and
xchg
xor
iret
xor
dec
push
es
cmp
mov
outsb
rorb
add
sbb
fistps
push
inc
outsl
test
sbb
cmp
shrl
sarl
mov
and
popf
jge
and
rolb
inc
ret
xchg
jg
pminub
popf
test
xor
mov
add
stos
mov
fwait
orb
and
push
push
into
cmp
mov
ret
out
xchg
int
loope
fadd
jecxz
repz
push
push
jmp
mov
cmpsb
insb
repz
mov
inc
cmp
push
push
xor
aad
rcll
or
mov
addb
xchg
mov
inc
xchg
lret
and
in
enter
mov
cltd
push
jns
int3
mov
lea
sbb
sub
xor
cmp
xor
je
test
push
and
jle
aam
sahf
sbb
adc
jp
jns
test
int3
in
mov
mov
or
icebp
sub
or
pop
pop
hlt
es
out
fldt
pop
add
repnz
pop
sar
jne
push
outsb
pop
jl
negl
or
add
push
dec
pop
inc
pop
add
mov
add
mov
push
or
out
aam
mov
adc
xor
sarb
and
jo
jle
or
sbb
xor
inc
outsl
es
aaa
sbb
lcall
out
mull
movsl
sub
js
mov
pop
jp
cs
mov
sarb
roll
js
inc
inc
les
aad
arpl
add
or
push
test
or
mov
mov
mov
dec
inc
outsb
mov
mov
jmp
sub
or
mov
jmp
push
jae
movsb
push
sbb
enter
push
sub
add
sti
clc
dec
mov
fldl
cmp
cltd
jge
mov
or
int3
std
movsb
punpckhbw
add
mov
dec
mov
adc
inc
cwtl
push
jl
or
ret
pop
cltd
in
mov
push
popf
cmp
cmp
test
imul
and
addr16
in
inc
ljmp
lock
insb
insb
bound
cmp
dec
xor
mov
mov
mov
cmp
mov
xor
icebp
jecxz
sbb
jns
pusha
jge
fsubs
aad
xchg
jo,pt
jmp
or
mov
insl
in
mov
pop
cli
push
dec
test
sub
xchg
adc
daa
sbb
push
pusha
xchg
scas
inc
push
jb
xchg
xchg
lods
add
mov
inc
mov
lds
mov
call
add
dec
xor
xchg
stc
jns
and
sub
enter
or
les
dec
xchg
sahf
or
and
fcompl
or
push
push
dec
inc
mov
lret
jns
mov
nop
das
in
lahf
inc
enter
and
fidivrs
movsb
push
dec
xor
push
in
xchg
enter
mov
or
imul
inc
pop
mov
dec
xchg
mov
xor
mov
sub
cmpsl
or
enter
push
dec
or
add
mov
ja
mov
enter
lock
pop
mov
mov
push
cmp
mov
jbe
or
mov
xchg
inc
sbb
mov
nop
dec
in
cwtl
dec
test
sbb
inc
push
dec
push
cmp
mov
sbbb
nop
xchg
mov
xor
fsts
imul
lea
cmp
sub
popf
test
enter
pop
cmp
inc
in
enter
aam
mov
iret
jl
popf
dec
nop
inc
inc
mov
dec
adc
push
push
test
addb
and
in
popf
cmpsb
shrb
lock
dec
dec
gs
lahf
in
mov
mov
in
leave
data16
jb
push
sub
inc
dec
leave
test
call
or
mov
cmp
jb
mov
cmp
cmp
sar
in
jb
leave
rorb
add
test
sbb
sahf
loop
xor
ss
pusha
cmp
jnp
jne
scas
shll
imul
mov
mov
lcall
mov
lock
sub
cmp
adc
aam
sub
pop
fadds
stos
ja
mov
and
ficoms
push
sbb
sbb
xchg
mov
sub
mov
xor
arpl
test
inc
adc
in
test
push
mov
movsw
outsl
or
es
dec
loopne
insb
pop
movsl
aam
aad
xor
add
mov
test
cmp
pminub
pusha
clc
sahf
in
int3
cmc
cmp
inc
inc
fisubrs
icebp
insl
adc
cmp
mov
cmp
rcll
cmp
inc
enter
cwtl
cmp
js
inc
push
mov
and
jno
imul
or
ss
out
ss
test
and
mov
std
cmp
mov
in
push
mov
pusha
orl
push
mov
dec
mov
sbbb
pop
sub
sbb
pop
or
inc
mov
add
sub
xchg
cmp
mov
mov
inc
fld
sub
int3
loopne
inc
and
lds
ret
or
xor
roll
mov
pop
jns
je
add
or
leave
add
lds
insl
stos
xchg
and
cmp
clc
outsl
rcr
repnz
aaa
xor
pop
mov
dec
cld
jne
or
jne
mov
sub
cmp
lods
inc
or
adc
mov
adc
jne
push
dec
test
aam
dec
and
lods
xchg
push
push
dec
mov
mov
mov
add
gs
stos
jbe
and
or
or
clc
adc
in
mov
lock
sbb
in
xor
out
div
in
call
lock
ret
or
out
pop
aad
fsub
cmp
cmp
enter
sbbb
cmpb
xor
add
lods
stos
adc
push
loope
lret
cmp
add
fbstp
fadds
push
aas
cmp
cmpsb
ds
pop
stos
and
push
mov
add
mov
outsl
bound
add
mov
sub
and
sbb
popa
and
push
and
aad
mov
xor
pop
mov
push
div
adc
inc
sbb
lock
mov
dec
fimuls
fisttpl
and
ss
add
add
push
loope
push
into
xor
jo
movsb
adc
cmpsl
jno
lahf
mov
aas
sbb
or
add
roll
or
sti
adc
shll
pop
push
dec
repnz
out
pop
les
adc
sti
sbbb
pop
add
adc
mov
mov
mov
push
fsubrs
mov
aam
call
rclb
movsl
dec
sub
cmp
push
mov
mov
roll
das
and
mov
jmp
sbb
jno
and
int3
dec
cmp
in
add
dec
clc
push
cmp
sbb
scas
in
mov
sbb
mov
dec
int3
dec
mov
mov
int
enter
dec
scas
adc
push
jle
mov
lods
mov
adc
xchg
rorb
xor
imul
dec
das
push
aas
ja
pusha
cmp
jne
jle
movsb
cmc
cmpsb
ja
test
les
jp
je
les
xchg
js,pn
std
cmp
shll
pusha
and
movsb
fisttpll
std
xor
mov
shll
add
mov
adcb
cmp
mov
inc
shl
xchg
sbb
or
lret
push
inc
fs
je
mov
fdivrl
mov
push
inc
test
cmp
inc
push
call
push
hlt
int
mov
push
xchg
xchg
adc
and
lods
mov
jae
in
add
sti
and
add
in
loopne
add
test
lcall
jbe
cwtl
bound
dec
inc
mov
je
movswl
or
mov
inc
or
hlt
dec
mov
daa
or
data16
test
push
lock
pop
out
repz
test
roll
cmpsl
add
push
ss
mov
sub
cli
fwait
call
shll
mov
jmp
fidivrs
sub
rorb
mov
sbb
sub
sbb
jns
aas
xlat
xchg
inc
and
or
mov
rcll
fwait
cmp
les
inc
and
xorb
mov
dec
jmp
andb
mov
xor
test
ja
sub
sub
jle
testl
sub
adc
fcomps
push
std
adc
inc
xor
rolb
outsb
fprem
push
dec
inc
xchg
leave
jne
push
cmpb
dec
or
push
sbb
rcl
cmp
movsl
ret
adc
sbb
cmpsb
cmpb
sahf
addb
add
jmp
dec
addr16
fildl
pop
sub
cmp
push
mov
test
xchg
in
sbb
cli
out
cmp
aam
add
cmp
pop
and
add
push
enter
pop
inc
out
dec
add
test
push
sbb
shufps
stc
roll
test
stos
push
push
addr16
dec
aaa
rolb
add
mov
out
mov
in
mov
mov
aas
sbb
push
in
mov
mov
out
ds
sub
jo
addl
xchg
or
test
adc
cmp
pop
mov
mov
inc
movb
lods
xchg
sbb
and
outsl
std
or
or
insb
ja
dec
sub
stos
jecxz
push
dec
and
lods
sub
jo
pop
es
fwait
inc
mov
add
cmpsb
scas
rolb
or
xlat
push
adc
cli
test
xchg
jmp
pop
lds
push
add
loop
pop
adcl
mov
fldl
sahf
or
repnz
aad
test
jnp
pop
mov
nop
mov
xchg
and
inc
push
jle
leave
pop
mov
add
movsl
pusha
movsl
ficoms
jp
mov
sub
shll
mov
ret
pop
test
test
testb
neg
inc
sti
jecxz
lahf
hlt
add
sbb
pop
out
mov
mov
pusha
inc
push
pop
bound
stc
inc
fcompl
mov
xchg
lahf
push
andl
dec
loopne
sub
cmp
test
ljmp
add
inc
or
orl
lea
mov
add
add
jns
je
inc
push
jne
adc
ficomps
rcr
sbb
push
rcrb
aad
add
js
xor
mov
jnp
inc
cmp
dec
or
inc
pop
ret
jecxz
mov
gs
or
adc
mov
pop
push
mov
xor
sbb
data16
sbb
and
push
fdiv
fdivrs
inc
neg
and
sub
or
ficompl
leave
sub
add
loope
stos
adc
and
sbb
out
cmp
adc
loope
loope
sbb
movsl
cmc
popf
scas
mov
push
in
mov
shrb
adc
add
addb
adc
lods
pop
sub
cld
into
enter
adc
push
int3
lret
push
lret
mov
gs
rcrl
imul
add
test
ljmp
and
mov
add
int3
xor
iret
inc
rorl
pop
dec
mov
jne
and
pop
aas
shrb
arpl
sbb
je
stos
dec
mov
push
jo
jl
sti
mov
and
mov
and
mov
inc
or
popa
jmp
xor
or
jl
cmp
push
inc
pushf
fcomp
xor
fmuls
fcmovu
pop
xchg
add
cmp
or
rclb
mov
ret
jo
and
jmp
frstor
xor
mov
lahf
sub
cmp
sti
faddl
xor
jp
fsub
and
mov
fs
pop
push
scas
push
xchg
jno
out
xchg
rolb
in
jno
mov
int3
loop
xchg
arpl
arpl
fidivrs
pop
mov
inc
push
or
in
xorl
inc
pop
sub
cld
inc
mov
lea
sub
cwtl
sub
mov
sub
cs
pop
rcr
scas
push
test
adc
lds
mov
push
call
test
aaa
sete
icebp
xor
cld
jl
addb
jp
out
jbe
push
push
imul
leave
cmp
ret
aaa
jbe
lea
in
or
sub
pcmpeqw
cmpl
jae
cld
dec
incl
pop
scas
jle
push
cmp
mov
jo
mov
pop
push
adc
out
nop
push
subl
xchg
gs
and
jbe
fnstcw
and
ret
lret
jmp
dec
or
sbb
mov
arpl
jb
call
imul
adc
jb
push
out
orb
mov
das
scas
jbe
lock
repz
pop
push
push
out
xchg
push
push
sub
adc
cmp
in
ds
push
add
push
push
nop
adc
sub
fs
adc
in
mov
sub
lods
movsb
jp
mov
aaa
scas
mov
incb
lahf
movsw
adc
rcll
and
popf
inc
fwait
inc
jo
push
mov
and
into
mov
lds
popf
sbb
sbb
mov
mov
pusha
dec
lock
sub
inc
jle
fsubs
dec
xchg
clc
out
pop
rcr
jns
scas
xor
cltd
xor
mov
mov
inc
adc
out
add
xor
repz
test
gs
push
cwtl
push
push
inc
inc
adc
in
sub
fnstenv
cs
push
clc
xchg
inc
inc
jno
shrb
pop
out
adc
xchg
jo
adc
pop
push
mov
xor
jl
nop
lock
add
push
lea
sub
lahf
imul
and
adc
or
mov
enter
fldl
bound
mov
adc
ret
rolb
inc
pop
das
shl
outsb
lea
or
arpl
jl
pusha
fs
pop
scas
and
dec
push
jge
daa
pop
push
push
hlt
mov
dec
fadds
mov
push
pusha
and
imul
js
push
add
xchg
pushw
mov
daa
mov
jae
xchg
cmc
inc
sbb
ds
dec
dec
lea
mov
or
add
cld
dec
enter
ret
jns
leave
pop
lods
push
nop
loope
xchg
xchg
mov
adc
test
inc
and
insb
sub
mov
push
loop
test
add
lods
mov
ret
add
sub
cmp
lock
dec
dec
loopne
popa
add
outsl
cmp
sub
jl
and
lcall
inc
ss
and
nop
xchg
push
sbb
loope
sub
add
inc
out
imul
mov
rcrb
decl
shll
rorl
sbbl
lods
subb
fisttps
or
push
mov
lds
pop
push
add
xchg
sub
cli
mov
jae
loopne
sub
add
aam
sub
mov
negl
pop
popf
add
movl
das
fucomip
push
inc
or
aam
loope
dec
pop
adc
pop
js
ss
es
fdiv
inc
test
pop
fisttpll
cmc
cmp
add
sub
inc
sub
pop
add
mov
es
xchg
sub
daa
jnp
add
pop
and
sarl
insl
dec
adc
pop
test
ja
or
jl
subb
xchg
and
insb
mov
popf
mov
out
sub
addb
rcrl
adc
enter
cli
xor
es
lret
lds
call
scas
pop
int
fidivrs
pop
aam
jecxz
std
icebp
js
mov
xchg
int
out
mov
mov
xchg
cmp
jne
inc
xor
iret
xchg
sub
inc
pop
jp
in
lret
mov
add
jmp
loopne
sbb
or
sub
push
movsl
mov
or
hlt
mov
dec
push
inc
add
roll
xchg
mov
or
or
or
xor
cld
jg
add
jno
cmpsl
xor
cmp
cmp
imul
add
and
sub
sbbl
insb
add
pop
pop
inc
dec
xor
cmp
xor
call
enter
loop
insb
rorb
movsb
enter
sbb
inc
sahf
pop
out
int3
mov
sti
je
popf
xchg
xor
stc
clc
aaa
dec
dec
stos
xor
jns
ja
test
xor
mov
or
and
push
and
dec
pushl
lock
test
loopne
push
orl
jbe
inc
push
mov
cmp
nop
add
dec
shrb
fmulp
shlb
push
clc
or
mov
inc
inc
movsl
or
add
push
stos
sub
sub
outsb
inc
sub
jmp
mulb
into
push
jge
lcall
ret
mov
fdivrl
push
stos
into
cltd
mov
ds
lock
in
or
sub
inc
jmp
test
xchg
sarb
push
getsec
add
cmp
and
jno
push
hlt
outsl
divl
clc
ficompl
rolb
mov
push
and
cli
clc
adc
push
mov
add
xchg
cmp
loopne
je
sub
cltd
xchg
outsb
fs
mov
scas
ss
adc
or
enter
outsb
sbb
add
rcr
sarl
sub
xchg
out
shl
adc
clc
push
aaa
lock
adc
out
push
daa
hlt
adc
and
scas
loopne
pop
nop
inc
xchg
push
xchg
nop
fcomps
inc
and
and
leave
cwtl
movsb
mov
and
das
cmp
int
sub
cmp
pusha
and
out
mov
scas
rorl
mov
add
loopne
ret
pop
adc
adc
jnp
jg
jl
sbb
mov
dec
inc
dec
or
in
cmpxchg
loopne
lret
jne
pop
iret
cmp
ret
pop
cmp
psubsw
jno
mov
ljmp
dec
sub
enter
mov
dec
push
ss
test
pop
push
and
xchg
aad
xchg
imul
testl
mov
xchg
xor
inc
mov
fwait
xlat
movsb
and
jne
mov
xchg
jp
cld
push
jp
sbb
add
adc
fmuls
inc
inc
sub
and
arpl
test
cwtl
clc
push
addb
pop
icebp
nop
cs
adc
in
bound
mov
push
iret
insb
enter
push
xor
lcall
cmp
or
js
popa
lods
and
xor
xor
rorl
sub
pop
add
ja
cld
add
sbb
mov
xlat
into
outsl
mov
insb
or
es
mov
fwait
cmp
enter
jecxz
adc
and
pop
jmp
fucomp
ds
push
mov
cmp
mov
jo
es
popf
popa
iret
add
and
addb
shrb
hlt
dec
es
test
sbb
and
nop
movsb
lret
sti
pop
cld
jecxz
lahf
shll
push
loope
cmp
shlb
les
mov
sbb
xchg
or
inc
or
divl
shr
push
add
adc
test
stos
fs
xchg
add
pusha
and
add
pop
fsts
mov
pop
jp
mov
mulb
adc
scas
xor
mov
add
pop
push
cmpb
xor
inc
xchg
xchg
iret
or
mov
mov
mov
mov
jmp
mov
loopne
jnp
adc
mov
les
sbb
jge
or
sarb
pop
push
imul
les
mov
pusha
xor
jl
sbb
add
pop
imul
mov
dec
mov
scas
bound
ret
das
inc
loop
sub
and
and
push
int3
cvtpi2ps
sarb
call
orl
iret
dec
add
jnp
push
repnz
dec
rclb
jae
incl
cmp
xchg
fisttpll
out
sbb
insl
push
adc
or
add
into
xchg
inc
shlb
negb
jle
pshufw
xchg
xor
jnp
jl
push
push
push
pop
sub
xor
sbb
fiadds
push
dec
movsb
sub
repnz
sub
pushf
sub
dec
jne
int
push
xchg
pop
jmp
outsl
pusha
lea
inc
movl
test
adc
adc
dec
jo
jecxz
mov
add
add
push
jle
mov
add
jo
testl
jns
jle
sbb
add
je
and
enter
lea
push
enter
cmp
and
inc
xchg
mov
jne
movb
loop
imul
inc
call
lock
pushf
mov
loop
aam
or
add
xor
repz
les
lcall
and
test
fmul
mov
nop
adc
sbb
xchg
jp
nop
pushf
inc
push
in
int3
push
mov
sbb
sbb
sbb
jno
mov
and
shlb
hlt
daa
addr16
xchg
clc
mov
in
enter
test
jge
das
or
sbb
hlt
and
xor
push
add
imul
int3
imul
popa
inc
and
xor
push
dec
pusha
push
pusha
mov
mov
subb
and
or
pop
jns
cmp
sar
sar
in
das
sar
ficoml
jne
sti
rcll
test
xor
sbb
cwtl
rcrl
mov
mov
fisttps
adcb
dec
and
movsb
gs
imul
inc
arpl
stos
mov
xchg
in
loop
push
mov
sub
loop
fidivs
shlb
mov
shl
int
lock
loopne
jmp
mov
or
arpl
ror
scas
inc
popa
repnz
add
push
flds
aaa
push
outsl
aas
inc
push
mov
in
mov
mov
pop
je
add
inc
lock
add
pop
aas
push
adc
cmp
pop
sahf
pop
and
lock
push
cmp
mov
cmp
push
clc
out
mov
movsb
movsl
cmpsb
loop
pop
gs
pop
pusha
call
and
xor
out
jb
gs
add
or
xchg
frstor
movsb
ss
mov
stos
sbb
push
idivl
inc
push
leave
pop
dec
std
pop
xor
sti
dec
add
xlat
movb
add
add
push
sbb
push
stc
or
inc
lea
add
push
inc
clc
sub
mov
push
mov
or
pop
sbb
push
clc
jg
sub
jne
add
jmp
mov
inc
mov
inc
dec
fstps
loope
xor
aas
jne
pop
mov
mov
cmp
jecxz
je
inc
cmp
dec
jne
sub
pop
pop
ret
test
mov
and
xor
in
pop
cli
push
pusha
or
adc
add
mov
adc
xor
xor
mov
or
je
imul
ds
divb
ret
or
aaa
fildl
sbb
xor
add
cmpsl
xor
stos
or
in
mov
or
pusha
jne
inc
pop
movsb
int3
inc
push
outsb
test
inc
imul
mov
cwtl
orl
add
sub
mov
sub
dec
dec
aas
iret
ficompl
cmp
loop
mov
je
rep
je
inc
dec
js
jbe
xchg
or
add
jno
pop
div
add
add
or
lock
cmp
and
jle
inc
inc
add
sub
cmp
sbbl
dec
pop
sti
sub
nop
sbb
shl
inc
lods
incl
sub
mov
inc
pusha
loopne
add
insb
test
mov
mov
lret
or
rcll
mov
jl
les
xchg
cmpb
cmp
imul
lock
sbb
adc
push
pop
jmp
xchg
insl
repnz
push
in
subb
pop
mov
cmpsl
test
insl
mov
and
xor
jle
movzbl
mov
inc
mov
sbb
pop
test
orl
test
shrb
aaa
inc
cmp
mov
sub
insb
imull
jne
pop
xor
xchg
data16
jns
add
imul
pop
add
lea
popa
jmp
cmp
ret
jne
adcl
xor
insl
and
movsb
and
dec
loopne
in
iret
je
iret
xchg
filds
roll
add
cmpl
inc
sbb
add
std
adc
imull
imul
mov
push
xor
or
ja
push
lea
stos
sub
ret
adc
push
xchg
inc
push
std
cld
sahf
adc
push
jbe
sbb
jns
fisubs
iret
push
clc
mov
roll
imul
lea
test
je
cmp
pop
movsb
jbe
lea
add
inc
lret
pop
jge
iret
adc
insl
std
inc
ljmp
dec
mov
or
xor
inc
push
push
mov
jecxz
imul
mov
xor
inc
cmp
je
test
adc
pusha
cmc
pop
pop
pop
loope
mov
push
lea
mov
cli
std
mov
push
add
loopne
les
mov
sti
jae
cwtl
and
mov
push
imul
sbb
cli
loop
add
or
jge
mov
jecxz
lock
jg
ss
aam
cli
or
je
mov
dec
add
outsb
lock
push
jmp
jmp
js
pop
test
loopne
and
pop
add
daa
call
add
jge
mov
jmp
fcomps
pop
jecxz
sarl
push
or
fdivrl
push
jo
push
sbb
pop
pop
xchg
cli
adc
add
unpcklps
je
jg
clc
imul
mov
cmp
inc
push
mov
mov
pop
push
or
dec
push
sub
or
add
add
push
adcl
inc
adc
rclb
xor
out
out
add
xor
cmp
add
dec
jne
mov
andl
adcl
xchg
push
rcrb
mov
pop
xor
pop
ljmp
mov
and
pop
push
cmp
movsb
mov
and
sbb
jnp
cld
mov
scas
dec
mov
subb
xor
xor
pushf
adc
sbb
or
jmp
add
test
dec
ret
push
mov
xchg
mov
cmp
mov
sbb
or
push
pop
sub
mov
dec
aam
dec
aaa
sub
and
enter
inc
jne
jb
mov
xchg
adc
sub
add
add
fistpll
lahf
or
dec
cmp
jb
mov
xchg
cltd
xchg
ljmp
add
leave
movsl
pop
jge
or
sub
dec
je
dec
fsubr
sbb
and
jnp
mulb
add
push
in
mov
dec
jbe
cmc
adc
ret
adc
dec
or
imul
mov
jl
loop
xor
repnz
push
jne
lock
pop
imul
gs
int3
or
lds
xchg
sub
ret
dec
jmp
and
pusha
sub
loop
or
fcomi
pop
dec
ljmp
scas
sub
pop
push
ss
cmp
je
mov
loope
cmp
cmp
push
and
mov
test
adc
jbe
sbb
and
push
jl
jae
sub
imul
push
pop
inc
jle
nop
lea
push
clc
dec
cmpsb
xchg
jl
sbb
dec
pop
push
sbb
adc
cmp
push
adc
mov
rcll
adc
divb
cmpsl
add
imul
popa
mov
dec
push
dec
mov
rcll
test
inc
mov
xor
pop
and
jbe
add
sub
push
push
andb
rolb
mov
jne
pusha
or
push
dec
inc
dec
xor
sub
cmp
dec
fisubl
mov
mov
dec
add
mov
dec
daa
and
xchg
sbb
rorl
mov
pop
movsb
cmp
mov
add
sub
mov
cmp
pop
data16
sbb
pop
cs
aas
imul
cmp
sbb
adc
pushf
enter
rorb
lea
cwtl
xor
adc
cmp
lods
push
jmp
pop
sbb
or
scas
pop
rorl
outsb
push
movsb
and
push
push
ret
pop
add
cmp
movsl
cmp
out
jo
enter
jmp
std
jmp
or
or
sbb
pop
loopne
add
out
jmp
cmp
repnz
or
add
add
sarb
jo
dec
int
iret
adc
jb
and
push
cmp
push
stos
jb
cmpl
test
std
outsl
test
das
jae
sub
mov
sbb
add
sbb
lds
add
loope
jl
enter
lds
pop
pop
sub
mov
sub
sub
add
and
fmuls
andb
add
or
inc
loopne
cld
add
fdivl
ret
cmp
mov
test
jmp
wrmsr
loopne
add
sub
cmp
jb
xabort
or
movsbl
sbb
andb
pusha
or
dec
dec
dec
dec
or
test
loopne
dec
or
cld
lret
call
or
pop
mov
and
roll
sbb
pop
lret
cmp
jb
add
add
stos
mov
outsb
and
mov
inc
mov
pop
loopne
fidivs
test
nop
push
sbb
jle
push
mov
faddl
add
and
mov
mov
add
adc
xlat
mov
dec
xchg
add
add
inc
inc
inc
inc
jg
jg
out
out
or
push
fs
pop
push
dec
inc
cmp
jns
mov
mov
call
repz
in
lock
cli
repz
hlt
clc
clc
cld
cld
lea
mov
adc
loope
cmp
pushf
out
lods
shlb
nop
cmp
pusha
sbb
and
loope
mov
adc
lea
jl
cld
jl
daa
mov
cld
out
and
neg
fimuls
lret
lret
sub
sbbl
notl
pop
push
sbb
je
add
mov
jnp
dec
lods
mov
aas
jmp
out
add
cs
dec
dec
push
or
cmpsb
pop
add
mov
jnp
cmp
push
in
pop
fcomip
cmp
cld
add
pop
subb
out
sahf
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
aas
test
or
push
dec
pop
subb
xchg
xor
push
add
pop
andl
inc
pop
daa
outsl
adc
sbb
test
adc
test
fnclex
ret
ret
mov
add
ds
mov
adc
sbb
dec
negl
inc
call
dec
movsb
cmp
decl
mov
add
lods
xchg
pop
pop
pop
addb
adc
neg
add
insl
lock
nop
loop
int3
adc
jmp
add
mov
sbb
push
arpl
sub
test
std
sahf
pop
add
adc
shr
inc
fistps
xor
jmp
cmp
ljmp
div
mov
mull
inc
push
ljmp
jb
cmp
out
cmp
add
xchg
jmp
mov
mov
mov
push
push
or
push
jmp
fnsave
push
jnp
mov
sub
enter
adc
mov
push
or
sub
jns
jbe
and
or
neg
sbb
cmp
or
push
push
xor
jge
inc
push
fwait
sbb
mov
enter
sbb
aaa
or
sbb
sbb
lahf
loope
cmp
fdivs
push
mov
jmp
fnstcw
fcomi
sbb
orb
adc
dec
jne
gs
rclb
imul
dec
push
repnz
pop
cmp
je
test
out
lock
cmp
jne
inc
inc
dec
out
mov
cmp
jne
mov
push
js
cmp
adc
add
or
add
mov
int3
in
lahf
sub
repz
je
mov
mov
dec
adc
cmc
jne
sub
cmpb
out
shr
sbb
mov
hlt
in
mov
push
mov
cmp
jne
sbb
out
jne
or
jge
and
cmp
dec
mov
dec
cmp
aaa
jne
adc
inc
jl
mov
pop
jg
xchg
push
mov
sub
inc
std
fistps
and
or
inc
fsubrl
or
test
ret
jmp
jbe
out
mov
dec
mov
ret
in
aaa
xchg
std
xorb
or
or
or
test
xorb
add
mov
push
sbb
dec
xor
lods
clc
scas
int3
pop
adc
or
push
pop
cmp
orb
add
shll
mov
or
std
inc
add
sahf
add
jbe
jge
add
and
push
pushf
les
dec
cld
hlt
fstcw
fwait
repnz
sti
pop
out
fldcw
fistpll
or
pusha
mov
add
push
clc
sahf
in
xchg
fistps
iret
gs
jb
mov
and
sbb
rolb
or
add
ljmp
pop
inc
inc
push
orb
xor
push
mov
testb
aam
jg
sbb
pop
or
push
clc
out
jne
and
adc
dec
or
iret
and
mov
mov
inc
and
je
sub
cmp
and
mov
lcall
out
packsswb
dec
adc
dec
sti
xchg
je
cmp
jb
jl
adc
rcll
inc
sub
jae
mov
push
dec
lahf
out
icebp
inc
ds
adc
sub
pusha
mov
inc
push
aas
clc
sbb
popf
or
add
shrb
inc
divl
dec
inc
or
mov
sbb
dec
add
mov
add
xchg
cmp
pusha
sub
add
sbb
int3
or
fdivr
jle
out
pop
sub
aam
mov
cld
xlat
clc
adc
xchg
mov
daa
clc
xorb
jb
mov
das
sub
cmp
clc
jae
pop
push
xchg
je
cld
sub
sub
add
cmp
mov
sbb
or
test
jmp
xchg
cmpl
add
lret
movsl
mov
add
or
push
adc
ret
pop
test
arpl
rcr
outsl
cmp
dec
adc
jmp
sbb
push
into
adc
and
dec
xchg
mov
neg
pop
bound
adcl
cmpsb
pop
enter
dec
cmc
decl
mov
pop
xor
push
or
xor
or
mov
or
cmp
lcall
pop
pop
add
mov
adc
je
adc
and
mov
bound
pop
mov
pusha
scas
adc
sub
loopne
or
mov
push
and
push
dec
ret
add
mov
pop
cmp
cmp
jae
add
fidivl
jno
or
cmp
jbe
shll
imul
add
mov
pop
pusha
jnp
add
sbb
mov
cs
out
cs
fcomps
daa
sarb
cmp
add
jmp
sub
hlt
jne
adc
jne
inc
push
ss
or
xchg
movsb
jbe
idiv
aas
and
sti
pop
popf
jmp
mov
pop
neg
fnstcw
sbb
neg
add
mov
mov
pop
mov
and
out
pushf
or
mov
mov
sarb
push
aas
out
cmpsb
outsb
insl
sti
leave
push
scas
inc
les
test
adc
pop
and
xor
bound
xor
addb
nop
or
mov
xchg
es
inc
testl
mov
and
and
repz
mov
cmp
inc
clc
int
fimuls
not
mov
fmul
lea
inc
cli
lea
pop
ret
sbb
xchg
cmp
bound
ljmp
adc
je
ds
insl
inc
push
jne
or
push
jp
jbe
xor
adc
mov
mov
sub
cld
lret
mov
xchg
iret
xor
push
mov
add
jbe
gs
jbe
ss
rolb
rol
out
jne
push
dec
pop
movsb
ljmp
je
scas
out
cmp
je
out
inc
mov
adc
lahf
push
aam
xchg
pop
arpl
outsb
or
add
add
pop
pop
shl
rcl
and
push
pop
mov
mov
lret
sub
insl
and
test
shl
lea
sbb
jne
push
cwtl
jne
fsub
fcmovnu
pop
sub
add
lock
pop
push
shl
shr
cmp
loopne
in
pop
push
add
iret
stos
dec
sbb
adc
inc
push
sbb
pop
shl
dec
shll
mov
or
pop
or
sub
pop
or
mov
add
and
xchg
add
sarb
jg
jbe
jl
jp
xchg
insl
push
and
jmp
mov
inc
jle
ret
and
insb
pushf
and
mov
mov
pop
push
sbb
or
mov
lret
std
cmp
push
mov
mov
cmpw
inc
add
adc
mov
sub
sar
dec
xchg
inc
test
xchg
xor
cmpl
fidivl
in
mov
sub
xchg
xor
int
pop
shlb
mov
andb
push
push
inc
inc
push
push
mov
sti
push
js
adc
inc
mov
mov
mov
jp
vmwrite
mov
outsl
lea
rorb
jno
sbb
adcb
jge
add
inc
push
cld
fisubs
imul
cwtl
mov
add
jmp
pop
or
shlb
test
push
test
jo
inc
addl
add
or
dec
rcrb
js
pop
jnp
adc
stc
xor
mov
popa
sbb
mov
xchg
mov
sbb
xor
xor
data16
popa
cmpsl
jle
pop
repz
adc
sub
add
cs
adc
pop
sbb
or
sbb
inc
inc
jmp
mov
add
int3
xchg
jmp
sbb
jg
cmp
call
test
loop
sahf
cmpsl
repnz
repz
inc
and
jne
sbb
adc
into
push
push
fwait
sbb
or
add
pop
data16
sbb
jne
mov
mov
mov
inc
dec
mov
ss
inc
or
cmp
inc
in
add
mov
leave
icebp
daa
nop
adc
mov
addb
push
or
mov
aaa
xor
or
pop
and
push
sub
sbb
push
jne
rcrl
loop
xchg
shlb
test
push
call
cld
inc
jmp
sub
test
je
test
lock
push
xchg
incb
lods
int3
xchg
jp
ss
leave
add
dec
xor
or
mov
inc
pop
sub
or
or
pop
aaa
mov
mul
pop
push
or
or
loope
sar
cs
dec
pop
inc
push
es
lcall
mov
lahf
push
mov
nop
insb
rorb
push
iret
or
movsb
sbb
loope
add
adc
push
mov
pushf
push
loop
xchg
scas
pop
inc
mov
sbb
or
xchg
enter
loop
lcall
push
mov
les
or
mov
mov
push
mov
push
aam
add
add
or
pushf
push
jbe
fwait
pusha
lea
cwtl
and
jge
mov
dec
or
cwtl
push
push
push
ret
xchg
jnp
mov
cmp
insb
insb
loopne
add
loope
je
andl
icebp
pop
shr
sbb
pop
sahf
mov
andb
es
je
andl
pop
cld
mov
cmp
or
mov
in
dec
sbb
dec
or
test
or
and
push
inc
mov
push
rcr
sbb
sbb
rclb
or
pop
sbb
fdivrs
or
push
je
test
ds
add
lods
in
orb
sbb
dec
add
adc
pop
in
or
lock
push
and
sar
loope
inc
adc
sub
dec
inc
enter
insl
fsubr
push
addb
sti
mov
dec
shll
mov
mov
cs
ds
stos
movsl
cmp
pop
or
push
cmp
xor
or
jle
xor
cmp
dec
push
adc
insl
mov
inc
cmp
in
mov
pushw
adc
or
loop
out
aaa
inc
cmp
jl
and
js
push
test
push
and
loopne
mov
out
test
and
nop
add
pop
mov
cs
sbb
imul
int3
add
loopne
shll
mov
call
pop
cmp
add
pop
dec
or
lcall
inc
jb
or
add
and
addb
sub
pop
sarb
jb
mov
xchg
adc
adc
loopne
dec
test
fmulp
xor
jno
jmp
xchg
jge
sbb
aad
lock
jg
jbe
cld
jae
add
insb
imul
inc
jae
je
insb
jo
sti
ja
add
orb
and
ss
fdivrp
jne
cmpb
jne
inc
inc
dec
sub
aad
pop
mov
negb
sbb
and
into
mov
mov
xor
clc
addr16
xor
insl
and
add
jae
in
das
call
clc
jo
insb
and
mov
inc
cld
xor
cmp
adc
push
arpl
inc
adc
adc
sub
jb
or
frstor
add
rcrl
dec
test
inc
aam
adc
lock
int3
inc
ret
and
clc
push
mov
lcall
adc
push
push
pop
and
xchg
xchg
sbb
or
pop
adc
pop
ret
add
div
dec
xor
adc
mov
je
ja
mov
or
je
dec
clc
call
and
fs
jle
js
ss
add
add
and
test
mov
mov
rcl
ror
arpl
into
mov
sbb
push
add
adc
xchg
fadds
sbb
xlat
dec
sub
outsb
inc
mov
lock
ret
add
push
and
pop
push
mov
lock
out
mov
ss
or
dec
inc
in
lcall
sub
xchg
add
mov
ret
dec
gs
ret
xor
roll
add
sub
add
std
jne
lret
jno
ss
push
fnstenv
js
leave
cmpb
loop
mov
push
pop
in
aam
mov
mov
dec
cld
xchg
jp
cvtpi2ps
sbb
jbe
adc
hlt
fildl
test
inc
ljmp
fstpt
jmp
inc
or
test
test
sbb
jmp
das
and
mov
sbb
mov
jmp
push
or
fidivs
lods
jmp
inc
js
sarl
pand
pop
jmp
jnp
and
inc
fldt
jb
xchg
or
jbe
cltd
jmp
pop
popf
sbb
jmp
inc
or
loopne
xor
imul
jg
jl
jae
mov
rolb
push
fcmovbe
mov
jmp
pop
adc
cltd
push
or
jne
and
jle
insb
lds
sti
ss
testl
adc
fidivs
add
ret
xor
xchg
fdivr
push
push
push
sbb
jp
pop
push
les
mov
xor
and
sti
cmp
jle
add
cmp
push
cmp
mov
sub
add
mov
cltd
aam
cmp
cmpb
fsubrl
std
fiadds
movb
dec
lock
push
ret
mov
daa
pop
cld
test
pop
sub
test
adc
jmp
push
sub
sahf
adc
je
and
jg
loopne
jne
add
xor
sub
pop
pop
or
dec
mov
fucomp
sub
jmp
jl
add
mov
xchg
xor
inc
adc
pop
ret
fidivrl
sbb
fisttps
xchg
add
enter
lods
stos
inc
mov
cmp
sbb
dec
insb
add
mov
mov
ds
out
and
sub
xor
mov
out
adc
xchg
cmpsl
std
lret
xchg
inc
add
xchg
pop
sub
repz
cwtl
sub
ljmp
decl
js
mov
mov
decl
orl
pusha
or
lock
adc
sub
into
jne
addl
ret
pop
ret
incl
push
or
jno
and
jl
adc
cmpl
pop
inc
jg
sbb
loop
fidivs
bound
js
push
movsbl
push
sahf
xchg
arpl
aas
ret
dec
loop
push
addl
add
rorl
fadds
push
cld
cmp
dec
cmp
and
stc
mov
clc
out
mov
inc
jmp
mov
xor
sar
inc
push
add
popf
data16
ds
scas
addb
std
pop
cld
jle
xlat
mov
xor
or
xchg
dec
xchg
adc
iret
pop
add
js
or
sub
and
das
mov
je
xor
or
jg
incl
aas
jne
cmpl
cmp
xchg
add
xchg
xlat
or
mov
adc
pop
insl
dec
mov
sbb
pop
sti
dec
jmp
mov
mov
jle
ds
add
orl
add
pop
jb
xchg
jo
fiaddl
push
and
aad
testb
je
add
lretw
dec
loopne
add
or
mov
mov
push
and
ret
mov
cmp
out
mov
addl
out
lea
pusha
adc
out
mov
push
ret
lcall
add
mov
sub
fs
sbb
test
mov
or
in
cmp
mov
jmp
andb
je
push
mov
daa
lock
adc
and
sahf
cmp
or
stc
sub
or
daa
sbb
mov
data16
sti
into
jb
nop
cmp
push
test
dec
sbb
push
pop
or
push
inc
test
imulb
mov
imul
inc
sbb
stos
push
cli
sub
push
stc
add
loope
cmp
aaa
test
xor
xchg
sbb
fisubl
push
push
adc
jle
js
rcrb
and
pop
xchg
lret
jmp
xor
pop
push
test
icebp
or
add
cmp
jle
mov
mov
aam
imul
mov
pcmpgtw
imul
sbb
loopne
add
out
mull
clc
inc
cmp
dec
or
je
outsl
mov
test
mov
ja
hlt
in
dec
dec
push
or
mov
sbb
movsb
cmpl
lods
cmp
dec
in
push
lea
or
xorb
dec
adc
stc
and
stc
sar
lahf
scas
in
sbb
mov
and
inc
lcallw
in
jo
jle
mov
xchg
lock
inc
lds
push
dec
into
and
mov
and
adc
mov
add
push
jecxz
sbb
adc
popa
je
cmp
sarb
xchg
cmp
cmp
into
add
or
in
and
int3
pop
mov
inc
cmp
add
dec
fnstsw
rcll
test
push
jg
pusha
sub
je
or
je
fsts
test
scas
dec
cwtl
lods
mov
jle
add
leave
and
mov
loopne
stc
sub
inc
jne
adc
js
inc
jmp
pop
jne
cs
mov
pop
jno
or
or
adc
pop
or
or
cs
or
mov
jne
es
addb
ss
inc
cmp
js
jg
out
in
sub
pop
into
jp
mov
add
je
rclb
addb
movsb
inc
fucomi
and
cmp
ret
lret
jge
mov
sbbl
insb
cmp
mov
or
sbb
dec
aas
mov
das
jb
in
aad
jle
mov
jae
mov
cmp
je
testb
inc
pop
pushl
or
aas
mov
jmp
fcoml
lock
lods
and
out
push
std
mov
jecxz
pop
cmp
je
mov
or
in
cmp
fiadds
add
pusha
stos
outsb
int
or
icebp
push
stos
sub
lahf
and
cmp
clc
decl
mov
add
mov
mov
mov
mov
pop
and
addr16
lods
sub
cmc
int3
push
leave
inc
js
pop
sub
adc
insb
add
imul
aam
inc
dec
mov
push
adc
inc
pushf
inc
sub
push
outsb
mov
adc
cmp
add
add
jl
sbb
mov
and
adc
push
jl
dec
popf
lea
or
jmp
leave
shlb
mov
adc
jae
aaa
sahf
and
ror
mov
fdivl
push
dec
mov
cmpsb
cmp
cmp
into
sub
sti
jne
mov
jmp
repnz
inc
inc
aad
movsl
js
repnz
xor
and
xor
cmp
lods
dec
rol
add
pushf
or
mov
inc
and
clc
or
psadbw
icebp
mov
adc
or
or
xchg
or
and
cwtl
or
push
mov
mov
xchg
mov
pop
mov
aam
add
cmp
rorb
mov
enter
into
testb
mov
shll
adc
push
mov
pop
cmp
jmp
in
lahf
lret
int3
int3
test
mov
mov
jns
shr
mov
imul
inc
add
push
dec
xchg
test
adc
xchg
add
ljmp
subb
cmp
jne
sar
dec
jp
sar
cmp
jbe
push
pop
mov
dec
or
push
and
mov
inc
mov
shr
lea
not
and
decb
jne
add
mov
mov
sub
lea
inc
cmp
lret
inc
push
pop
add
cld
cmpsb
idivb
push
or
hlt
mov
push
cmp
jnp
ja
adc
cs
pop
enter
mov
hlt
jl
sti
fst
sub
and
sti
add
mov
dec
pop
cmp
jbe
xor
roll
jno
and
cmp
je
sub
int
jno
cmp
mov
and
rcrl
dec
add
in
clc
fimuls
cmp
push
pop
push
shll
xchg
xor
dec
pop
sbb
sbb
pop
or
adc
add
pop
roll
es
subl
outsb
or
sbb
ja
mov
sub
xchg
dec
push
jae
dec
jl
mov
inc
jo
clc
pop
pop
or
jmp
dec
adc
dec
loop
xchg
stos
push
mov
or
fldl
inc
xor
mov
sahf
xchg
jb
mov
out
or
mov
add
mov
jl
push
push
call
fcomp
mov
aas
gs
push
or
fwait
movsb
mov
scas
push
decb
jge
jmp
adc
inc
lret
fldenv
js
imul
push
sbb
and
jne
loopne
push
or
icebp
push
cmp
enter
fists
dec
adc
in
jl
sbb
decl
push
loopne
jmp
movsl
jp
add
fdivrl
bound
jb
fimuls
mov
loope
inc
sar
pop
adc
add
cmp
jge
inc
adc
push
jmp
mov
jmp
testl
inc
push
add
lods
mov
push
je
sbb
and
decb
iret
iret
add
adc
xor
nop
out
mov
mov
cmp
dec
adc
imul
out
jne
dec
jae
and
xchg
out
push
jle
outsb
jmp
es
stc
fimuls
or
mov
test
je
fcompl
mov
mov
pop
add
push
cmp
inc
mov
cmp
mov
fdivr
or
xor
xchg
mov
adc
xor
aaa
mov
ficomps
subb
jne
mov
cli
push
cmp
sti
mov
cmp
xlat
je
mov
xlat
xor
rcll
in
sti
mov
pop
test
jl
shl
inc
jmp
mov
stc
xchg
ljmp
xor
incb
cmp
jle
lahf
add
int3
pop
mov
add
test
xor
dec
popa
aam
sub
inc
xor
iret
shll
cmp
ja
js
repnz
mov
decb
add
movsl
shll
repnz
or
xchg
inc
adcb
cmp
or
push
insb
xor
int
adc
arpl
add
pop
mov
jns
ljmp
pop
stos
jle
hlt
mov
mov
pop
xor
push
mov
or
cmp
scas
push
std
xor
or
subb
mov
sti
pop
in
and
mov
or
adc
push
or
das
push
or
loopne
sbb
add
mov
movsl
pop
or
aaa
sub
aam
jmp
adc
mulb
push
testb
inc
add
push
inc
aad
call
jne,pt
cmp
cmp
lret
add
or
and
add
add
or
xor
mov
push
and
fiadds
test
fwait
adc
jnp
and
ja
push
add
lea
data16
push
and
test
xchg
and
sbb
mov
pop
add
inc
push
repz
push
and
dec
inc
push
leave
fidivrs
and
incl
or
ja
rolb
nop
inc
or
fildl
loopne
ret
outsb
imul
sbb
lock
add
roll
dec
cmp
or
out
add
push
push
addb
mov
fwait
or
ljmp
inc
out
les
jge
adc
inc
cld
lock
fiaddl
movl
lods
pop
lock
xabort
fimull
add
mov
dec
mov
dec
fnstsw
addb
sahf
inc
test
mov
adc
mov
hlt
mov
jne
or
mov
aas
ljmp
imul
jo
mov
xor
lea
sub
adc
ljmp
add
mov
push
pop
cmp
rcrb
test
dec
clc
mov
pop
popl
xor
loope
sbb
pushf
pop
sbb
adc
pop
pop
pop
dec
or
pop
cmpsl
adc
lea
nop
mov
add
mov
nop
dec
or
xor
jg
sub
add
int3
imul
adc
sar
dec
mov
cs
shrl
stos
pop
dec
hlt
lea
sub
cltd
jae
jg
or
dec
pop
ss
shll
pop
pop
pop
pop
add
pushl
bound
and
sub
iret
lret
and
and
inc
pop
test
jae
in
xor
xor
add
rorb
pusha
sub
sahf
dec
fistpl
loope
lea
mov
add
lods
mov
insb
pop
xor
and
in
shll
jbe
pop
jmp
add
inc
cmpsb
rclb
movsb
dec
popa
xor
push
xchg
xchg
push
xlat
dec
push
rol
push
or
in
repz
lock
ja
xor
xchg
add
shll
jnp
aad
add
add
unpckhps
pop
cmp
push
pextrw
dec
gs
xchg
cmp
ja
ret
jns
inc
xchg
test
xor
bound
push
hlt
pop
mov
push
jmp
push
shlb
lret
stos
adc
in
mov
filds
aad
mov
popf
and
xor
jns
cmc
add
xor
dec
jo
scas
mov
push
loop
les
bndldx
mov
mov
and
mov
lea
out
lea
lea
sbbl
push
xor
mov
std
adc
popf
ret
mov
dec
inc
mov
dec
daa
cmp
in
jl
push
add
test
sbb
ret
cli
mov
push
sbb
inc
add
movl
inc
lock
mov
popf
fisubs
jnp
cld
mov
lock
and
and
or
popa
fsubl
xor
ja
sub
andb
push
and
sbb
mov
rclb
aaa
and
adc
jle
cmp
test
pop
popa
mov
mov
lods
aas
jae
cmp
cltd
add
or
add
push
push
sub
mov
jbe
and
test
xchg
lock
mov
sub
test
jge
inc
push
dec
loop
sahf
mov
je
cmpl
push
add
and
or
mov
cli
out
punpcklbw
inc
pop
cld
jp
xchg
pop
cmp
or
cwtl
xor
testb
lret
adc
or
out
cmp
mov
lret
jmp
test
jne
lods
mov
rclb
cmp
jb
jo
push
inc
sub
faddl
rcrl
into
pop
fs
loopne
or
mov
or
enter
lss
mov
add
andb
cmp
add
jne
incl
and
adc
pop
xchg
push
push
inc
push
pushw
sbb
jle
rcrb
mov
test
sub
xchg
or
ret
fidivs
mov
clc
pop
mov
lcall
add
adc
mov
jne
sub
movl
outsl
jb
or
push
lods
cli
dec
dec
jle
push
adc
push
es
sahf
xor
negl
jl
cltd
adc
lcall
xorl
jb
outsb
rolb
mov
cmp
adc
cmpsl
dec
add
sbb
pop
lret
dec
shrl
or
or
imul
xlat
js
push
jmp
mov
xchg
sub
xchg
ja
cmp
jg
and
adc
aam
jno
or
movsb
movsb
add
pop
sbb
lods
push
jo
jne
mov
movsb
cmc
push
bound
jno
mov
jle
cmpsl
fisttpl
outsb
sbb
mov
leave
push
sbb
loope
sub
movl
cmp
mov
mov
insl
mov
inc
cmp
add
sbb
and
inc
or
lcall
push
lret
xorb
xorb
je
and
mov
push
sbb
jmp
std
push
daa
jle
sub
cmpsb
inc
shrl
push
sbb
shll
jne
inc
out
push
int3
adc
lea
xor
dec
add
mov
lea
mov
dec
jae
add
sub
sub
mov
sub
add
inc
add
loop
gs
jg
movsl
push
rorb
mov
test
jne
add
cmpsl
xor
add
jne
inc
inc
jmp
je
mov
push
add
call
push
push
mov
add
out
lea
jge
push
loopne
jae
hlt
push
data16
mov
insb
jae
push
cmp
mov
inc
inc
lea
or
sub
test
sti
mov
adc
adc
inc
sarl
xor
jmp
dec
add
jmp
pop
andb
push
ret
mov
dec
inc
call
leave
pcmpeqb
and
nop
sbb
clc
pop
adc
xor
lods
ljmp
lea
jbe
sbbb
imulb
enter
setle
loopne
shr
jae
movsb
add
push
and
add
mov
inc
shll
jne
xchg
inc
mov
hlt
in
jg
add
shlb
cmp
jbe
push
lock
mov
sbb
jne
cmp
lret
cmp
mov
jns
push
arpl
sub
rclb
sub
add
xchg
lds
and
shl
shll
mov
les
jbe
xchg
je
add
or
xchg
push
sbb
inc
add
jb
out
les
add
inc
xor
mov
xor
xor
fs
mov
push
sbb
pop
sub
cmpsl
and
dec
dec
pushf
jge
adc
das
cwtl
add
les
add
xor
adc
cmp
add
aas
or
test
and
mov
push
dec
xor
mov
add
lret
ret
cmp
stos
and
pusha
cld
lods
dec
movsb
jmp
mov
rorl
cltd
mov
jae
inc
test
push
or
movb
inc
mov
jae
xor
jno
scas
test
movsl
add
mov
mov
inc
mov
rorb
ds
mov
xor
push
enter
inc
ret
or
sbb
stos
mov
je
out
jle
push
shll
inc
stos
adc
pop
out
test
enter
sub
pusha
test
enter
and
inc
add
mov
cmc
inc
arpl
addl
cmpsb
cmp
inc
dec
popa
jns
cmp
push
inc
cli
js
fistpl
ror
inc
ret
std
es
add
mov
ret
test
test
je
push
push
add
ret
inc
bound
sarl
add
loope
adc
sti
test
dec
pop
mov
scas
repnz
mov
or
adc
movb
or
lea
stc
vrsqrtps
or
clc
sub
add
int3
sbb
icebp
mov
push
xchg
jl
adc
inc
jbe
mov
daa
jne
cmc
dec
adc
add
mov
mov
and
lock
jmp
xor
dec
dec
dec
mov
leave
or
mov
or
mov
xor
inc
ds
shlb
repnz
dec
in
lret
cmp
jmp
ds
cmp
add
out
dec
sbb
add
inc
js
clc
adc
lock
dec
icebp
mull
sbb
call
fnstsw
sahf
jbe
cmp
sahf
cld
fidivrl
daa
out
mov
push
nop
mov
fwait
inc
dec
ss
add
and
mov
outsb
pusha
subb
inc
xchg
xchg
cld
mov
push
and
test
mov
sub
push
data16
or
mull
stos
pop
repz
mov
sahf
mov
call
inc
shl
jge
cmp
and
sub
or
cmpsl
pusha
stc
inc
in
sbb
mov
call
cmp
jne
dec
mov
inc
aam
adc
sub
add
or
jb
pop
das
mov
je
and
pop
icebp
call
and
cwtl
xchg
dec
adc
adc
hlt
add
sbb
je
ljmp
sbb
leave
in
setg
push
sahf
cmovne
xchg
roll
push
or
xor
push
in
mov
and
jp
add
xchg
pop
inc
push
ds
shlb
fnstsw
addl
ficoms
adc
sub
mov
sub
shll
sbb
add
aaa
nop
xchg
adc
push
lock
sub
enter
insl
or
or
enter
in
mov
dec
cmp
pop
add
jns
neg
es
and
fs
push
fs
pop
idiv
jp
xchg
mov
adc
or
mov
andb
xor
adc
js
or
mov
adc
mov
inc
add
add
lods
sbb
cmp
jmp
jno
and
adc
jl
stos
int3
add
adc
cmp
aas
std
jne
movb
add
push
mov
pop
xor
jmp
add
cmp
mov
add
jbe
inc
les
pop
add
fsubrp
push
push
cmp
jl
sbbl
adc
mov
push
ret
rol
mov
or
push
inc
mov
into
or
das
rcll
aad
icebp
push
arpl
mov
cmp
pushf
rorl
push
add
dec
pop
cld
mov
adc
ljmp
mov
sub
fcoms
arpl
lods
clc
or
lea
lock
sbb
das
movb
jle
push
andb
in
adc
inc
or
scas
jmp
xor
inc
je
mov
fnsave
out
pop
dec
loop
mov
in
jne
sub
shlb
in
in
push
push
adcb
add
fcoms
clc
jbe
aad
inc
pop
pop
shll
rclb
out
les
mov
je
inc
mov
mov
push
sbb
stc
adc
or
sbb
push
mov
cltd
popf
testb
adc
lret
pop
or
divb
arpl
mov
pop
es
daa
sbb
js
pop
jle
or
lock
push
push
inc
adc
or
flds
and
aaa
in
inc
add
lds
call
jle
and
lods
dec
mov
add
clc
mov
dec
inc
bt
xchg
cmp
clc
subl
mov
mov
sub
and
das
arpl
or
xor
mov
push
jle
out
pushf
dec
add
jp
and
mov
or
mov
jmp
icebp
aaa
sti
int3
mov
mov
fdivl
fwait
gs
rcr
inc
scas
jmp
dec
lock
mov
xor
inc
or
add
inc
jl
lock
stos
jg
inc
and
lock
enter
pushf
push
decb
mov
data16
xchg
fbstp
shll
je
push
test
push
rcrb
incb
stos
dec
jg
cmp
jecxz
adc
or
mov
leave
inc
xor
xchg
cld
in
cmp
adc
sarb
xchg
dec
push
jb
xor
add
dec
cltd
mov
jg
mov
inc
sub
rorb
call
sbb
stos
mov
dec
push
xchg
dec
inc
dec
cld
mov
out
mov
lods
or
dec
out
loopne
adc
jle
movzbl
push
sarb
ret
xchg
dec
mov
mov
jmp
movsl
nop
lea
jge
cmpl
lea
sub
push
jl
push
add
dec
cmp
dec
js
cli
cmp
ja
mov
xchg
cmpsl
fnstcw
lea
cmc
inc
inc
mov
jne
push
ret
or
jb
inc
push
rcrl
xor
das
mov
mov
jbe
mov
fisttps
pop
mov
cmpb
push
mov
leave
pop
inc
out
add
and
jb
mov
push
hlt
push
pop
shl
or
outsb
push
and
jo
mov
push
mov
or
hlt
loopne
stos
xor
pop
add
repnz
and
and
pop
push
insl
xor
sub
push
daa
es
mov
je
push
mov
jo
adc
or
push
pushf
fcoml
fcomps
shrb
das
mov
das
and
sbb
add
ljmp
imul
cltd
mov
mov
inc
repnz
cmp
into
mov
sbb
ljmp
xlat
rep
push
mov
inc
inc
mov
push
rcrb
or
dec
sbb
sub
enter
mov
ret
xlat
cmp
mov
push
imul
cld
sti
insl
mov
les
in
sub
sbb
je
cmc
adc
enter
nop
shr
xor
je
and
and
mov
jecxz
mov
and
add
jb
xor
enter
mov
xchg
pop
xor
adc
ja
popf
add
and
loopne
xchg
mov
mov
pop
std
mov
lods
clc
push
mov
pop
clc
hlt
dec
mov
lods
loopne
xchg
push
jp
test
adc
popa
lods
arpl
mov
dec
cmp
call
testb
inc
inc
daa
lret
xor
sub
cmp
xchg
jne
jmp
andb
test
inc
add
pop
test
add
mov
imul
dec
or
popa
jl
xor
jg
cmc
lret
dec
pop
cmp
jge
jge
push
xchg
and
sbbb
dec
cmp
imul
popa
xchg
in
push
jp
bound
push
lea
test
and
js
sbb
inc
cmpsb
jmp
jb
cmpl
xor
int3
push
add
rclb
xchg
sbb
sub
rorb
push
in
xor
fisttps
enter
mov
adc
and
dec
outsl
nop
out
cmpb
fcomp
or
lret
push
call
jmp
xor
pusha
xor
mov
popf
or
xor
mov
add
test
adc
inc
loopne
movsl
rcl
add
hlt
jmp
fsubrl
sbb
dec
jg
je
or
je
or
push
dec
je
lock
dec
jne
inc
jmp
cmpb
jne
or
xor
inc
add
rolb
cltd
add
daa
inc
bnd
sti
push
insb
insb
ja
or
jmp
jbe
sti
jmp
and
rcrl
mov
jnp
adc
sbb
pusha
mov
inc
adc
aam
jge
mov
dec
sub
inc
stos
insl
cli
nop
sub
hlt
add
xchg
add
in
das
adc
xchg
xor
outsb
add
sub
arpl
inc
jb
or
mov
adc
scas
jo
sub
or
hlt
ss
push
es
push
outsl
pop
add
add
arpl
sub
fiaddl
out
div
mov
addr16
or
sbb
mov
loopne
push
and
data16
rcrl
add
mov
cs
push
add
sti
sub
mov
mov
cmp
xor
push
mov
sbb
mov
sahf
and
jne
andl
dec
dec
popa
adc
mov
xchg
adc
sbb
and
xchg
dec
shll
js
mov
out
into
mov
scas
in
push
inc
mov
js
mov
jne
push
jmp
ficompl
mov
push
inc
fstpt
add
or
and
sti
mov
or
push
gs
xchg
mov
loope
addb
dec
push
push
and
enter
dec
adc
cs
push
or
inc
fs
jo
adcb
dec
adc
andb
push
pop
cmp
lret
add
dec
jle
cs
and
je
mov
sub
loopne
mov
imul
test
mov
add
call
call
in
xchg
sbb
add
cmpsb
rorl
push
clc
aas
push
sbb
jmp
ret
js
sbbb
cmp
ret
inc
test
cmpb
dec
mov
xor
mov
xchg
ret
ror
sbb
xor
add
adc
das
inc
arpl
js
cmp
ja
outsb
push
pop
mov
jne
dec
fs
xor
xchg
sbb
sub
iret
pop
dec
or
push
mov
lds
cmp
jnp
mov
pop
jne
mov
inc
push
cmpsl
and
mov
pusha
cltd
mov
pop
inc
cmp
fwait
pop
cli
into
cmp
inc
cmp
jae
mov
jmp
loopne
filds
ret
cmp
ja
mov
inc
sar
inc
mov
mov
and
mov
sub
call
xor
jmp
mov
jmp
xchg
out
ljmp
loopne
pop
dec
in
lret
sbbb
fdivl
leave
mov
test
or
bound
cmp
orl
pop
insl
mov
sbb
stc
add
or
je
popf
add
xorb
inc
enter
or
ljmp
js
movsl
les
ret
aad
push
fistps
xchg
leave
sbb
jbe
xor
orl
jmp
push
push
pop
stos
lcall
jg
lret
loopne
les
sahf
aam
xor
jb
fsubrl
setl
out
jmp
push
fnstenv
lmsw
or
jle
sbb
dec
sub
push
sbb
in
aas
or
and
daa
push
std
lahf
mov
mov
pushf
push
mov
push
popf
hlt
xor
rorl
pop
mov
adc
lahf
add
add
add
mov
mov
cltd
add
adc
movsb
sbb
add
dec
dec
mov
add
xor
xchg
neg
adc
add
ja
stos
loopne
fs
aas
or
cmp
jbe
insb
shl
jmp
lea
shl
jmp
push
adc
add
or
mov
jl
shl
push
repnz
neg
jns
or
into
mul
xchg
popf
sub
out
data16
dec
jmp
ret
mov
pop
data16
adc
jmp
or
inc
jns
and
xchg
dec
and
pop
adc
dec
daa
shlb
push
enter
xchg
push
mov
dec
fsubrp
outsb
jne
mov
dec
fdivs
inc
rclb
mov
add
xchg
imul
lahf
push
imul
int3
push
test
add
push
pop
aaa
pop
call
jmp
test
adc
addl
je
sbb
movsb
out
out
pop
js
xchg
decl
decl
js
mov
or
ret
push
iret
out
cwtl
orb
movsl
xchg
in
je
loopne
pushf
addr16
cmp
or
inc
clc
push
xor
cmp
out
mov
and
push
mov
ja
mov
ja
sti
mov
add
or
xchg
jge
mov
adcb
add
or
insb
call
add
loope
mov
lea
adc
repnz
pop
dec
mov
inc
add
hlt
dec
or
pop
sbb
or
push
add
or
dec
sbb
sub
sub
cwtl
jge
add
mov
mov
addb
inc
sub
inc
inc
inc
xor
rcll
dec
cmpsl
sbb
pushf
adc
jbe
lock
jb
mov
and
push
cmp
sbb
mov
push
gs
psadbw
and
push
psubsb
jmp
js
push
adc
push
and
or
xor
push
std
add
inc
or
xchg
pop
adc
mov
adc
xchg
add
add
outsb
es
jmp
aam
sub
pop
mov
test
sub
xor
mov
or
std
fsubrs
fdecstp
ret
clc
sbb
mov
sar
inc
lret
jecxz
mov
mov
add
sarl
shlb
cmpb
dec
clc
inc
jmp
mov
xorb
mov
popf
jo
cwtl
test
xor
jae
push
scas
xor
push
je
sub
mov
dec
jp
add
push
loopne
rorl
rolb
push
and
pop
or
ds
jae
cmpb
or
or
cld
or
inc
ret
arpl
and
xchg
xlat
add
je
inc
sbb
int
sub
push
push
sub
or
iret
adc
clc
xchg
test
add
shrb
in
adc
pusha
or
mov
lea
jge
cmc
and
notb
mov
jb
inc
rcrb
pop
adc
test
cmp
lods
decl
adcb
jge
lea
sub
sti
inc
shrb
mov
and
or
jne
mov
push
mov
in
or
xchg
sbb
xchg
jo
nop
and
jb
xchg
dec
test
xchg
test
cmp
stos
dec
in
xchg
cmp
fwait
rolb
adc
mov
pop
pop
jmp
cmc
push
and
push
aad
stc
or
sbb
fsub
shlb
or
je
cli
es
in
pusha
rorb
cmp
jne
hlt
push
scas
lods
outsb
dec
pop
push
lea
mov
je
xchg
jbe
sbb
pop
mov
lea
rcrb
hlt
and
mov
push
aas
inc
fmuls
adc
imul
std
or
mov
inc
fdivrl
inc
or
jbe
inc
sbb
cmp
cli
push
leave
fucomi
sbb
and
in
mov
mov
xor
dec
cmp
je
cmp
je
inc
lret
add
mov
pop
decl
call
cmp
jo
stos
xor
addl
or
push
pop
mov
pop
inc
cmpb
and
rolb
fwait
mov
add
js
rcrb
std
outsb
jne
pop
decl
push
mov
mov
sbb
push
lock
inc
popf
pop
pushf
or
push
add
shrb
enter
mov
sub
push
ss
or
push
mov
vpand
test
lahf
test
dec
dec
xchg
imul
mov
cmp
shlb
frstor
sbb
pop
pop
fs
xorl
cwtl
dec
push
or
filds
or
xor
cmp
cmp
add
add
cli
jl
popa
shlb
insb
mov
jp
jge
fistps
push
mov
mov
inc
inc
pop
aad
into
sbb
mov
add
inc
cmp
imul
mov
testb
addr16
or
adc
jne
jbe
daa
ljmp
adc
add
int3
je
pushf
cmp
mov
dec
sar
xchg
add
enter
rolb
push
adc
or
or
or
and
xor
fidivrl
and
and
xlat
shlb
and
rorb
in
shr
mov
dec
mov
and
js
inc
adc
push
pop
inc
bound
pusha
push
add
loop
xor
adc
jp
cs
sbb
imul
jno
add
add
popa
pop
cli
mov
mov
andl
nop
push
cmp
mov
xchg
push
pop
call
xor
push
and
mov
push
inc
and
aas
addb
add
ljmp
add
jbe
inc
mulb
sbb
std
shl
cmp
out
pop
mov
daa
mov
dec
call
sar
sbb
test
mov
lcall
xor
sub
push
push
and
test
pop
fmull
push
push
cmp
push
push
or
adc
push
adc
cmp
mov
inc
test
idiv
or
sub
inc
aam
popf
dec
inc
pop
dec
xchg
imul
or
dec
cmc
dec
sub
inc
and
sbb
adc
inc
call
sub
sbb
test
ret
call
das
xor
add
movb
and
jl
mov
loop
mov
inc
mov
out
pop
mov
mov
xor
xchg
lea
jo
jnp
popa
lock
push
mov
addr16
nop
add
cmp
pop
lea
int
jae
andb
mov
ret
jnp
sar
stos
xchg
jl
pop
sub
mov
rorb
mov
sbb
lock
in
or
mov
push
fs
and
std
and
mov
mov
pop
mov
inc
inc
mov
push
mov
mov
lea
jne
test
add
push
pop
fwait
or
ret
dec
mov
shl
sub
cmp
xor
pop
push
int
push
add
mov
jae
add
or
add
addb
add
jno
dec
jmp
inc
movsb
pop
adcb
rorb
sbb
pusha
add
testl
push
addr16
mov
mov
lds
test
push
push
xor
xor
jle
mov
push
cmp
sub
testb
mov
mov
notl
pop
popa
aam
mov
call
ret
fs
pop
rorb
mov
out
sub
test
mov
cmp
orl
sbb
adc
mov
or
adc
or
in
mov
stos
imul
ret
rclb
mov
inc
xor
and
cmc
cmp
adcb
cli
testl
jne
rorl
fdivrl
fisubs
or
bound
scas
js
loopne
imul
push
pop
pop
orb
xor
in
lods
cmpsb
lock
push
and
js
push
dec
rcl
sbb
mov
mov
stos
or
or
mov
jmp
fldl
mov
xchg
jmp
mov
mov
jg
sub
jge
pop
sub
sbb
adc
jbe
testl
add
push
jnp
lea
xchg
pop
ljmp
pop
push
or
int3
sub
push
dec
dec
mov
test
daa
std
pop
inc
cmp
push
mov
out
cmp
push
dec
sbb
fincstp
fadd
in
or
push
clc
xor
push
icebp
and
iret
pusha
adc
or
inc
rol
fs
pop
mov
xchg
fucomp
cmp
sub
out
add
aaa
jmp
sarb
add
clc
push
insb
aaa
pop
adc
ds
push
sbb
call
mov
or
adc
dec
shl
mov
pop
jmp
daa
loop
xor
popa
mov
ja
adc
inc
setb
enter
add
daa
pop
out
adc
call
sahf
bound
or
mov
adc
ss
sbb
jmp
and
insl
adc
and
mov
mov
sbb
pop
pop
sbbl
xor
xor
into
mov
mulb
add
mov
cmp
jge
add
xor
push
pop
mov
scas
loop
and
das
test
loop
push
dec
sbb
in
push
and
mov
adc
imul
repnz
cmp
pop
add
sbb
orl
pusha
adc
pop
and
aas
jmp
add
adcb
call
or
nop
stos
sbb
sub
icebp
addb
in
ja
push
xchg
aad
sbbb
add
cmp
popa
xchg
jb
push
push
outsl
test
sub
or
enter
sub
mov
push
pop
divb
nop
mov
pop
push
shll
jl
adcl
adc
sbb
xor
sbb
mov
bound
jo
push
and
inc
rcr
xchg
add
ret
addr16
rclb
ds
sbb
push
pop
push
inc
mov
or
add
or
addb
mov
mov
repz
adc
or
test
add
push
mov
xor
popa
jmp
jmp
je
das
push
or
idivb
popf
lock
nop
test
jae
bound
mov
cli
inc
icebp
xchg
xchg
jo
xchg
sub
cmp
push
jl
and
dec
push
mov
andl
iret
hlt
cmp
shrl
xor
add
jmp
shl
fbstp
jns
iret
jne
dec
push
or
loopne
jae
in
cmpl
ss
pusha
add
test
das
push
mov
call
dec
xor
push
push
adc
or
jmp
testb
pop
and
movsb
inc
sub
stos
in
dec
or
and
cmp
andl
aaa
loop
imul
dec
dec
push
push
lahf
movsb
push
push
push
orl
or
sbb
fildll
in
std
mov
lea
addb
jge
cmp
xchg
shl
pop
jge
pop
and
or
fildll
daa
jno
lods
aaa
push
repnz
test
lahf
inc
rolb
call
mov
push
andb
push
add
dec
cmpb
test
mov
push
dec
incl
add
sub
sub
leave
push
sbb
aad
jo
dec
adc
adcb
sbbb
jae
clc
adc
and
je
ret
push
sbb
xchg
adc
xor
or
lcall
sbb
add
jle
enter
lret
je
cmp
je
add
filds
inc
outsb
push
in
lcall
jecxz,pn
out
aam
sub
push
push
arpl
andl
pop
rcrl
dec
add
ret
mov
mov
mov
and
daa
add
shrl
or
test
add
testl
mov
pop
ret
mov
iret
aam
jecxz
add
ds
mov
in
lock
xchg
shrb
add
mov
adc
mov
scas
inc
ja
fnstenv
pop
pushf
mov
or
mov
sarl
mov
or
pop
adc
or
in
dec
mov
jne
push
je
lock
nop
dec
jmp
je
out
push
fimuls
test
jne
sbbl
aas
insb
adc
push
xor
mov
mov
sbb
sub
pop
ss
lar
aam
mov
or
lea
sbb
sbb
or
push
mov
pusha
dec
xor
movsl
add
adc
mov
fsub
pop
es
pushf
addb
out
add
enter
sahf
out
mov
pushf
xchg
mov
jl
jg
or
loope
push
in
stos
loop
lock
jg
or
enter
call
mov
push
cwtl
push
shl
sbbb
fidivrs
or
push
and
sahf
out
sub
cmp
push
call
jg
adc
mov
push
mov
jg
and
mov
jle
jmp
cld
rorb
shlb
or
adc
sbbl
lock
mov
or
fldcw
cltd
add
xor
jbe
idiv
push
add
addr16
mov
dec
mov
ss
and
adc
fmulp
sarl
adc
and
jno
cmp
pop
scas
pop
or
mov
push
mov
mov
mov
jns
xchg
adc
mov
sub
lock
or
jmp
or
jmp
or
pop
sub
fimuls
fistps
adc
jbe
adc
mov
cld
xor
subb
or
add
test
sbb
lret
mov
jo
subl
imul
insb
pop
int3
or
or
or
add
ja
add
pop
add
pusha
jo
ljmp
pop
sahf
add
mov
sahf
adc
adc
dec
cmp
push
push
ret
sbb
mov
sub
or
shl
not
test
jne
add
adc
mov
decb
sbb
add
jl
test
inc
fimull
mov
xchg
insl
aas
lahf
sbb
popf
cltd
adc
cmp
sub
pop
add
add
push
mov
sbb
mov
mov
rcr
lcall
xchg
out
or
mov
shrl
mov
int3
ret
pop
cltd
addr16
sub
enter
jg
add
mov
mov
loop
and
xorl
push
mov
sbb
adc
add
lret
and
pop
das
sbb
inc
cmp
ret
jbe
or
call
fwait
cltd
and
ss
adc
xor
outsb
and
push
xchg
loope
xchg
jo
adc
xchg
or
loopne
jbe
in
adc
outsb
inc
push
inc
js
push
add
add
cmpsl
pushf
pushf
cmp
jle
cmp
xor
and
mov
insb
mov
and
or
pop
dec
push
push
lcall
rolb
or
jp
dec
push
cmp
jl
orb
leave
mov
in
inc
xor
loopne
sub
inc
jecxz
pop
rclb
jo
icebp
dec
or
rcrb
hlt
add
mov
and
aas
cmp
sbb
sti
add
incl
xchg
lods
sub
lret
andb
fldt
lock
es
outsb
adc
aas
and
call
inc
pushl
inc
fidivl
lock
inc
cmp
dec
xchg
xor
stos
loopne
jge
cmp
fdivrs
sub
mov
das
inc
adc
test
sbb
inc
inc
test
div
fdivl
pop
jl
movsl
pusha
or
dec
mov
orb
jb
aaa
in
scas
push
inc
push
js
and
add
sbb
adcb
cmp
jg
es
push
push
mov
pop
cmpsb
pop
inc
adc
inc
fsubrs
clc
sub
fmull
add
adc
jne
lock
popf
arpl
dec
sub
dec
loop
add
mov
test
jmp
je
fnstsw
and
pop
xchg
push
nop
and
movsb
ret
cmpsb
jle
movb
test
mov
jle
pop
xor
add
jae
adcb
rolb
pop
mov
inc
sub
pop
add
insl
cld
dec
int3
dec
jl
cmpb
jl
cmp
mov
cmc
incb
xor
inc
ret
dec
ljmp
adc
push
int
or
pop
in
push
cmp
nop
jno
fimuls
hlt
pop
push
test
movsl
sbb
adc
cwtl
sub
mov
add
or
mov
cmp
pushf
or
pop
data16
dec
cmp
scas
mov
mov
push
push
add
subb
mov
rclb
sbb
inc
setl
pusha
xor
je
xchg
dec
mov
in
add
jo
or
inc
lea
pop
cmp
data16
rcll
pop
push
jmp
dec
add
lods
adc
inc
or
pop
fimull
loop
mov
xor
add
mov
shr
or
lea
mov
movl
and
jmp
and
iret
cwtl
dec
loopne
cmpsb
adc
jge
jle
jecxz
pop
push
ret
push
js
inc
fisubl
adc
andl
sbb
push
adc
js
lock
out
add
loope
cmc
jb
add
mov
shrb
cld
jle
enter
das
dec
or
xchg
roll
mov
std
push
add
popf
push
jb
cmp
jne
out
pop
movsl
lret
test
jnp
push
mov
mov
jge
mov
popf
ret
push
push
addb
ret
sbb
lods
sbb
add
mov
cmp
jae
or
jae
movsl
ret
fistps
and
shl
push
xchg
sahf
pop
ret
inc
cwtl
stos
popa
adc
jo
xor
add
mov
adc
pop
inc
jnp
pop
or
add
inc
mov
notb
int
xor
cli
movzwl
jo
lcall
fcom
cli
incl
and
icebp
mov
loope
or
loope
pop
cmp
pop
shr
fidivrs
incl
xor
pop
test
xor
mov
push
push
sbb
pop
or
mov
fimull
and
loopne
jne
sbb
and
bnd
xchg
jo
fisubs
sub
outsb
cmpsl
or
inc
mov
fisttps
icebp
imul
add
daa
inc
inc
push
adc
jg
cmp
je
test
jne
or
pop
jle
ss
sub
pop
or
mov
sbb
aas
mov
out
int3
xor
dec
icebp
sub
mov
enter
pusha
aas
nop
das
int
pop
or
rolb
cmp
mov
and
add
xor
dec
and
and
lcall
add
arpl
or
or
pop
stos
lods
arpl
pop
pop
mov
in
sbb
jo
adc
push
pop
xchg
les
clc
sub
mov
mov
xor
xor
imul
outsl
push
sbb
xchg
jl
cmp
fstps
jb
cmp
inc
pop
or
cmp
xchg
add
pop
push
xorl
dec
lret
pop
xchg
xor
adcl
sbb
sbbl
xor
and
mov
out
insl
adc
sarl
adc
mov
cmp
jp
dec
ret
cld
add
bndstx
addr16
cmp
inc
sbb
push
dec
dec
into
loop
mov
xor
inc
inc
push
push
jmp
daa
push
sub
xor
in
and
mov
add
in
adc
clc
jg
hlt
jne
adc
shrl
out
ljmp
mov
mov
inc
cmp
andl
jmp
push
add
in
mov
add
add
inc
sub
je
mov
lcall
sbb
sarb
cmp
jl
mov
enter
bswap
jle
enter
data16
pop
adc
jg
pop
js
push
ljmp
stos
stos
xchg
push
mov
xchg
xchg
loopne
roll
lock
sbb
es
xchg
aaa
rcrb
jp
adc
sti
in
andl
push
sub
movsb
cli
mov
loop
pop
jmp
adc
xchg
mov
insl
add
jg
es
sar
stc
push
add
lea
fwait
jg
cltd
notl
sbb
push
pop
sub
add
rcll
and
sbb
or
jmp
cmp
lock
je
hlt
roll
sub
sub
jmp
jnp
or
pop
or
adc
adc
inc
es
sub
fcompl
mov
jnp
sub
sub
jne
add
adc
mov
in
sbb
stos
sbb
add
das
adc
dec
sbb
adc
cld
loope
fldcw
inc
and
mov
inc
or
movzbl
xorl
jne
cld
insb
push
push
and
push
xchg
inc
lcall
in
sub
inc
insl
cmp
icebp
pop
cmp
rorb
push
xchg
pop
pop
mov
cmp
sub
ds
cmp
pop
dec
fistl
movsl
inc
rclb
mov
test
add
mov
fwait
pop
cmp
roll
or
sbb
loopne
sbbl
adc
add
int
pop
cmp
dec
mov
xor
sbb
push
shll
adc
imul
cmp
adc
test
mov
push
jne
pop
loope
pop
cmp
je
jmp
inc
aas
and
jmp
xchg
stos
dec
cmpsb
add
es
in
inc
xor
add
das
testb
repz
sbb
adc
pop
lock
add
mov
sbb
and
add
loopne
add
mov
push
xlat
add
iret
push
xchg
and
or
enter
push
add
sbb
jmp
xor
dec
sbb
pushf
xchg
mov
push
les
lock
mov
and
or
bound
aas
and
push
push
dec
popa
adc
fisttpll
cli
setae
jmp
subl
inc
shl
add
mov
sbbb
or
cs
add
lret
lret
sub
dec
imul
dec
inc
sub
fstpl
or
and
pop
rorl
nop
mov
sahf
sbb
adc
xor
mov
xchg
lock
jae
sbb
or
scas
and
jl
aaa
pushl
add
xchg
pop
subb
xor
add
sbb
pushf
add
iret
aad
or
mov
jg
dec
jmp
mov
mov
add
sbb
je
aas
shr
or
add
decl
pop
shl
or
pop
jp
push
xor
pop
repnz
out
sti
sti
mov
mov
or
out
shr
or
push
mov
out
adc
sub
or
fistpl
add
or
push
xchg
add
outsl
cld
lea
movsl
movsl
push
or
and
movsb
enter
push
jmp
jp
gs
and
adc
push
ss
cmp
jne
pop
pop
fistl
nop
loopne
pop
dec
adc
inc
into
inc
adc
out
adc
loope
mov
or
lock
add
sarl
push
jae
adc
cmp
lock
aam
imul
jle
arpl
mov
lret
arpl
pop
adc
call
loopne
xor
cmpsb
aam
in
sbb
pop
or
xor
and
add
stc
or
push
pop
mov
pop
sbb
add
call
jl
or
jg
mov
pop
push
pusha
sbb
fstpt
out
xchg
push
add
sbb
lock
adc
sub
push
pop
push
add
aam
xor
jbe
sbb
fwait
pop
jmp
lret
loopne
push
adc
mov
jle
xchg
dec
and
xor
sub
push
inc
jle
fistl
jnp
jg
clc
push
sti
dec
push
cmovnp
dec
cmpsl
or
add
ja
lcall
lcall
adc
enter
and
lds
stos
jb
jae
mov
call
movb
rorl
adc
xor
int3
mov
mov
in
jp
repz
in
add
rcr
mov
lea
loope
sub
pop
stos
pop
ljmp
mov
lea
pop
dec
adc
je
mov
push
jmp
mov
cltd
add
add
repnz
jmp
push
or
pop
dec
adc
sbb
inc
jmp
cmpsb
add
fcoms
outsb
jecxz
mov
jnp
lea
mov
pop
pop
movaps
mov
or
sbbb
and
daa
xor
fidivrl
add
mov
je
rolb
jg
or
mov
icebp
xchg
adcb
push
rcrb
xor
fcos
das
mov
cld
jbe
cmpb
jl
incb
jae
cs
hlt
jbe
inc
dec
adc
lea
add
scas
mov
popf
xor
ljmp
add
leave
jl
in
xor
jge
add
js
xor
loopne
push
sbb
sub
cmp
cmpl
sbb
add
adc
movsl
xchg
fidivs
aam
xor
mov
in
in
or
cmp
push
mov
in
stc
shlb
js
nop
ret
mov
fsts
notb
ret
jecxz
sub
sub
cld
stos
or
pop
mov
mov
inc
or
cmpsl
add
adc
sti
repz
adc
cld
push
push
sbb
push
std
mov
mov
xor
in
push
mov
aas
es
mov
mov
ret
pop
outsb
test
push
movb
out
jns
out
call
fidivrl
in
out
sti
out
aas
lock
fadds
sub
and
push
fs
sti
pop
push
sbb
and
xor
add
fwait
cmpb
add
fdiv
sahf
data16
test
fmuls
xchg
data16
sub
jne
push
ret
maskmovq
testb
mov
add
sub
pop
leave
insl
or
fstp
sbb
cs
and
sbb
push
in
lea
mov
psrlw
push
push
push
pop
add
movzwl
iret
inc
jmp
dec
fs
data16
lea
cmpsl
lock
mov
dec
mov
lea
ret
loop
jl
movswl
jb
movmskps
mov
cli
aas
jb
xchg
repz
add
adc
xchg
push
dec
fadds
adc
out
lock
cmp
mov
pop
xor
out
and
cli
sub
dec
inc
ret
sbb
mov
pop
xor
sub
sbb
jne
fsubs
mov
ss
neg
lock
or
jbe
dec
xor
mov
imul
jle
mov
loopne
movsl
movsl
dec
fiadds
jnp
xchg
out
and
mov
je
mov
mov
adc
dec
xchg
decl
clc
adc
add
mov
mov
cmpl
add
xor
or
dec
jmp
pop
inc
decw
add
ret
sub
mov
andb
sbb
pop
cmp
lods
pop
hlt
flds
stos
xchg
test
arpl
push
xchg
pushf
add
mov
mov
dec
push
sbb
int
or
inc
or
js
ljmp
mov
add
pop
jbe
and
pop
icebp
daa
mov
or
or
cmp
inc
loope
mov
in
dec
mov
push
rorl
pop
mov
shll
mov
cmp
add
or
or
lods
jne
or
arpl
or
or
shll
inc
mov
sub
sub
pop
push
xchg
in
inc
jbe
push
stos
enter
xor
and
and
and
adc
frstor
lea
or
cmpl
in
andb
mov
sahf
add
sarb
dec
or
mov
test
lods
inc
and
push
adc
push
push
fprem1
xchg
push
or
push
cmp
push
cmp
jo
notl
mov
push
dec
mov
inc
js
imul
popa
loope
in
add
pop
jle
add
rorb
dec
fcomps
push
pop
andb
pop
sbb
push
adc
cmpsb
rcl
sar
lds
ret
push
pop
or
jecxz
or
subl
xor
mov
loopne
jne
and
imul
mov
pushf
andl
hlt
lret
jle
xchg
out
mov
pop
or
cltd
jle
in
jg
or
sub
insb
popf
inc
test
add
fdivrs
add
imulb
in
xorl
mov
ss
adc
mov
lcall
mov
inc
dec
sub
fiadds
movsl
mov
sbb
adc
xor
mov
push
jmp
xchg
push
jmp
fsub
jne
loop
ficoms
jae
push
jmp
and
or
add
push
je
or
dec
add
in
sbb
jmp
neg
sbb
mov
cmp
popa
idiv
add
push
push
pusha
or
jmp
cmp
je
jge
xchg
push
jle
mov
cmp
daa
fsubrs
or
aam
jp
dec
cs
outsb
addb
dec
rclb
mov
test
cmp
rorb
sbb
ds
addb
ret
rorb
jle
ret
add
iret
cmp
adc
aaa
mul
loope
loope
popa
pop
pop
stos
add
fadd
pop
insl
mov
shlb
aam
rorb
sbb
es
rolb
out
je
das
cmp
jl
cmp
sub
aam
or
stc
mov
sbb
mov
pop
push
jne
daa
and
jmp
enter
pop
xor
mov
rorl
mov
mov
out
or
int
aas
cmc
mov
insb
jmp
cmp
or
jmp
repz
add
insb
cmp
jle
sbbb
push
cmp
adc
and
sub
mov
ds
sbb
insb
cmp
fisubrs
sub
dec
jge
hlt
popf
add
pop
aad
or
or
pop
lret
xor
jle
jne
xor
inc
enter
dec
stos
mov
push
inc
outsl
das
cmpsb
test
add
cmp
cmp
je
or
xchg
lock
enter
lcall
add
inc
and
in
imul
movsl
jnp
popa
movsl
popf
add
xchg
xchg
sbb
jbe
subb
neg
dec
push
xor
inc
js
jb
push
les
lock
inc
cld
inc
inc
sbb
push
and
adc
iret
ret
and
inc
sbb
adc
out
leave
mov
mov
xor
in
jns
xchg
out
repz
jp
andps
frstor
sbb
cld
mov
adc
fldt
je
loopne
sub
push
dec
stc
push
sub
pop
or
std
pop
add
data16
imul
pop
cmp
dec
jle
sbb
add
imul
sbb
rorl
idiv
shll
into
and
loope
test
je
mov
jle
and
xchg
ret
cmp
jno
cmpsl
sti
push
mov
inc
cmp
sub
sbb
cmp
mov
pushf
subl
hlt
popa
push
jno
scas
popf
std
je
mov
addr16
xor
mov
dec
xchg
in
lahf
dec
mov
jl
cmpl
ds
xor
lea
add
or
insl
movsl
jmp
test
add
popf
inc
pushf
sub
add
xor
pushf
add
jmp
jp
jp
ljmp
mov
enter
adc
lock
mov
mov
fs
add
je
loopne,pn
dec
pop
inc
gs
cwtl
fiaddl
mov
inc
bound
pop
add
mov
sub
fcomi
shll
fsubrs
add
mov
popf
ret
repnz
aad
mov
leave
movsl
or
ret
inc
push
adc
mov
push
push
outsb
sbb
mov
int3
sub
pop
imul
hlt
xchg
sbb
test
pop
ret
ret
sbb
xor
adc
pop
adc
xchg
and
xchg
add
stos
push
add
mov
push
sbb
mov
push
andb
jge
push
pop
push
sbb
pusha
pusha
jmp
pop
xor
jne
cmp
or
sub
data16
push
shrb
andb
adc
pop
mov
cmp
adc
or
rcr
or
aam
jmp
into
inc
and
sarb
es
sbb
subb
nop
xor
mov
rcrl
pop
adcl
push
test
sbb
mov
and
inc
inc
sti
cmp
shr
inc
loop
cmp
ja
or
add
ret
pop
and
add
pop
add
mov
aaa
cmp
je
jmp
mov
sbb
test
inc
xchg
mov
xorb
cwtl
mov
sbb
inc
push
inc
pop
inc
xor
fcompl
inc
push
ret
xchg
enter
rcrl
mov
push
mov
clc
js
cmp
push
and
daa
inc
cmp
je
sub
and
sti
cmp
sbb
and
add
add
xchg
sbb
mov
sbb
push
decl
xor
fsubrs
xor
jp
adc
cmp
je
mov
mov
pop
int
pop
sub
ror
loope
adc
sti
push
adc
fsubr
push
xor
add
aam
in
jle
rolb
xor
xchg
pushf
decb
or
daa
sub
pop
xor
add
dec
sub
enter
sub
cmp
stc
mov
push
jo
push
push
inc
push
push
jns
push
mov
jne
out
dec
add
push
jo
add
push
add
jbe
cmp
cmp
jne
add
arpl
ret
test
xchg
jo
cld
or
test
lock
in
or
notb
jae
sub
in
insl
sub
lods
push
push
inc
jne
cmp
aam
decb
setg
fidivrl
fidivs
push
stos
mov
dec
lret
sbb
add
pop
aam
sbb
sahf
push
sbb
add
cmp
cmp
sub
subb
adc
or
fs
mov
insb
or
outsb
icebp
sbb
pop
and
and
jne
popa
cmp
mov
xor
push
adc
stos
or
insb
jb
and
cld
push
add
cwtl
into
orb
das
and
xchg
imul
or
or
jo
adc
int
cmp
cmp
push
jno
jno
dec
add
sarl
cmp
add
add
jge
pop
pusha
cmpsl
mov
sbb
or
and
jge
push
cmp
mov
rcrb
aam
aam
subb
test
roll
xchg
mov
or
jno
dec
lods
dec
inc
lea
imul
lea
lea
insb
push
jp
dec
popf
imul
jmp
cmpsl
outsb
mov
bound
inc
or
sub
ret
loopne
push
fwait
loopne
add
call
xor
ja
popa
push
out
mov
les
hlt
push
xor
call
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
incl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
decl
outsb
cmp
imul
addr16
add
aam
dec
std
test
pushl
mov
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
cmp
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
jmp
add
or
or
and
or
adc
stos
sbb
ljmp
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
cmp
mov
js
stc
jp
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
push
jmp
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
decl
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
call
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
lcall
xlat
pop
cmp
mov
cmp
lods
insb
mov
sarb
or
mov
lcall
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
or
aam
loopne
pop
jp
adc
dec
frstor
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
or
mov
cmpsb
fldl
mov
dec
ss
fisubrl
pop
lcall
or
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
incl
outsl
and
xchg
ja
int3
add
mov
das
es
lds
decl
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
push
arpl
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
jp
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
jmp
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
jmp
sbb
cli
jo
lret
pop
or
adc
pop
hlt
lcall
clc
sar
imul
push
js
or
push
addl
decl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
fistps
lock
aaa
push
scas
mov
fidivrs
mov
jmp
push
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
jae
out
add
add
add
test
push
push
add
or
push
push
add
sub
adc
bound
sub
push
pop
pop
or
jg
incb
aaa
xor
push
push
pop
push
and
add
pusha
push
out
int3
mov
pop
sub
add
out
mov
sub
outsb
add
insb
add
icebp
sub
insb
insb
adc
mov
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
das
dec
push
push
inc
push
push
xchg
pop
das
and
lock
push
jle
push
inc
push
cmp
inc
inc
dec
jae
jb
arpl
jae
jb
gs
je
jb
out
data16
je
dec
inc
push
dec
xorb
add
mov
lcall
or
mov
rcrl
push
pop
rol
jne
imul
and
mov
push
push
not
dec
sbb
dec
inc
sbb
inc
and
insl
sti
imul
cmp
sub
insb
je
jbe
push
push
imul
sbb
push
mov
dec
aaa
outsb
outsl
je
or
imul
addr16
arpl
out
insb
mov
jno
cmpsb
xor
outsl
ss
mov
fs
push
and
jb
inc
dec
arpl
jmp
arpl
insb
push
mov
in
pop
push
gs
das
mov
mov
lds
jo
pop
sti
adc
mov
inc
push
fs
push
push
pop
mov
arpl
fistps
scas
inc
aaa
insl
nop
mov
ljmp
arpl
outsb
sub
popa
divb
inc
inc
jb
add
les
mulb
popa
insl
inc
xchg
insl
insb
pop
fcmovb
inc
in
xor
lahf
and
fnstsw
popa
jb
orb
jne
jae
push
xor
jo
adc
add
or
xor
decl
shlb
shll
jae
inc
sub
and
dec
imul
lods
jns
or
inc
sbb
push
jl
imul
roll
lret
rorb
fsubrs
subps
pusha
push
push
incb
test
jne
push
or
inc
jb
push
popa
imul
bound
inc
nop
icebp
or
or
dec
add
inc
lret
jo
jge
sub
dec
outsl
jbe
ds
push
pop
push
inc
gs
popa
in
push
jge
or
lods
jbe
add
jo
pop
shr
pop
push
shlb
stc
sti
fstpt
inc
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
ja
inc
push
das
aas
sahf
or
mov
push
pop
or
movhps
insb
sahf
cmp
nop
xchg
mov
mov
or
repz
jmp
sub
int
sahf
stos
ret
xor
in
inc
fstp
mov
pop
out
or
jae
cmp
add
popa
sbb
je
orb
xor
xor
and
cmp
pop
outsl
inc
shr
jle
pop
add
push
fcoml
jmpw
and
gs
jb
cmpsb
das
sub
add
cs
aas
pop
push
pop
jg
imul
jae
imul
jae
push
pop
jae
inc
jns
jge
test
js
inc
daa
pop
push
negb
xor
cmovg
xchg
out
sbb
add
sarl
in
mov
lock
push
in
inc
daa
les
sti
cmp
test
dec
cwtl
push
mov
addb
add
outsb
out
xor
cs
add
or
jl
inc
insb
mov
jo
outsl
push
imul
aaa
inc
pop
push
add
add
or
xchg
dec
push
inc
cmp
xchg
dec
inc
push
push
pop
add
or
cld
popa
jne
jne
mov
testb
insl
jae
jbe
out
push
outsl
bound
arpl
jns
outsb
jo
pop
insl
and
push
jbe,pn
in
mov
add
andb
push
popa
xchg
popa
inc
push
inc
outsb
fstl
mov
sbb
add
jae
jns
jb
mov
xchg
imul
dec
jns
add
cs
rcrl
pop
mov
pop
push
pop
pop
inc
jne
outsb
je
inc
inc
mov
pop
xchg
push
jb
icebp
xchg
ss
jb
inc
arpl
and
daa
inc
popa
imul
push
fmull
push
gs
test
mov
xor
gs
insb
jbe,pn
add
jb
pushf
rolb
jae
rcrb
sbb
dec
dec
push
xor
daa
cs
push
jb
jae
xor
rcr
mov
popf
dec
push
cmp
shl
xchg
sarb
bound
loopne
sbb
jae
xchg
popf
rolb
sub
outsl
xchg
jbe
mov
inc
inc
and
dec
inc
mov
and
ljmp
cmpb
out
mov
or
imul
dec
daa
mov
cmpl
addl
ja
push
pushf
lcall
repz
ja
imul
lea
popf
pop
insb
imul
inc
imul
dec
imul
fs
xchg
clc
test
cltd
adc
dec
xchg
mov
pop
sub
dec
push
mov
shl
shrl
cmpsb
pop
push
add
arpl
das
jo
inc
sbb
dec
inc
inc
lock
subl
das
jae
cs
loopne
push
pop
loope
dec
cmp
push
insl
loopne
inc
push
scas
xlat
and
mov
fldenv
push
inc
sbb
cmpsb
push
and
test
or
xchg
pushf
push
movsb
dec
sbb
das
push
arpl
insb
xchg
sbb
jle
insb
insb
rcl
daa
jne
ss
fs
loope
jl
dec
add
clc
mov
outsb
jbe
add
sbb
seta
adc
fs
loop
push
rclb
add
fmuls
sub
dec
inc
in
gs
jmp
adc
sub
sbb
fiaddl
adc
adc
test
mov
jg
and
je
inc
andl
dec
adc
fbld
pop
cli
or
adc
push
jne
add
push
add
pop
xchg
mov
outsb
or
jge
adc
jnp
adc
mov
add
mov
call
pop
ficoms
adc
jmp
mov
push
xchg
lret
adc
or
mov
sbb
inc
lds
jns
imul
sti
push
push
dec
push
dec
push
inc
scas
addl
inc
inc
push
arpl
in
lods
test
icebp
jb
test
jo
fadds
cmp
loope
inc
sub
loope
push
xor
jbe
sub
outsb
ret
insb
insb
dec
push
push
dec
pop
loopne
jbe
call
les
insb
data16
push
mov
inc
push
data16
push
fcomps
or
inc
repnz
je
lahf
popa
aaa
lea
bound
test
inc
push
cli
imul
jne
inc
stc
gs
data16
pop
push
cmpb
pusha
pop
insb
cltd
mov
inc
sub
fs
daa
push
insl
loopne
sbb
jo
mov
dec
mov
je
mov
loope
mov
movsb
push
mov
cmpsb
popa
pop
inc
dec
inc
insb
jne
push
gs
pusha
add
bound
int3
sbb
mov
hlt
loope,pn
xor
pusha
outsl
sbb
add
inc
pop
mov
fisubs
fs
lods
pop
sub
push
dec
inc
xchg
scas
xchg
jnp
cmp
jl
dec
outsl
bound
fstp
xor
adc
pop
shlb
ret
push
and
push
xchg
pop
dec
arpl
inc
mov
xchg
inc
jae,pt
pop
popa
cmpsl
jns
icebp
aad
imul
outsl
jp
data16
xor
xor
jnp
loopne
dec
lret
outsb
aad
mov
mov
dec
testb
mov
push
jb
inc
daa
pop
in
sub
inc
adc
add
inc
dec
fs
lcall
push
daa
addr16
ja
jge
push
lds
pop
xchg
js
aaa
outsb
or
pop
xor
xor
arpl
imul
push
mov
pushf
ljmp
fs
arpl
in
jle
cmp
push
loope
in
adcl
outsl
jo
add
cmp
sahf
rcll
insl
lcall
test
push
jbe
pop
pcmpgtb
sti
or
outsb
sbb
iret
dec
rorb
jae
outsb
insb
ficomps
rcrb
pop
inc
pop
push
popa
inc
xor
or
andl
ret
gs
into
or
pop
dec
gs
iret
std
jmp
pop
sbb
dec
jae
imul
add
adc
push
jmp
fldl
ja
xor
xor
dec
bound
pop
inc
inc
testl
je
insb
sub
icebp
js
inc
insb
xor
frstor
sbb
inc
outsb
out
mov
push
push
mov
daa
fwait
lret
cmc
je
movsl
outsl
daa
inc
popa
mov
popa
inc
push
dec
les
loope
xchg
jae
inc
jb
xchg
ret
adc
outsl
scas
pop
out
call
jae
mov
insl
dec
pop
sub
insl
sub
outsl
decb
ret
inc
sbb
lahf
sbb
pop
inc
dec
lcall
push
into
push
loop
imul
sbbl
in
pusha
enter
jne
repz
sub
inc
pop
add
add
gs
inc
arpl
jnp
push
push
jb
sbb
orl
and
and
out
and
int
fs
ret
imul
addr16
pusha
sub
movsl
mov
js
push
jle
lods
fstp
push
cmpsl
and
mov
popa
push
fadd
fnstenv
push
orl
notb
mov
fs
inc
mov
ja
push
jae
in
and
jns
mov
adc
fiaddl
movl
xchg
jae
inc
mov
test
pop
imul
push
pusha
fcompl
cwtl
lcall
out
adcb
pop
push
inc
ret
jo
add
push
js
push
inc
jae
mov
in
xchg
fs
push
loopne
push
pop
inc
push
jb
pop
sub
dec
arpl
mov
mov
inc
pushl
add
mov
add
rolb
test
inc
dec
dec
mov
inc
scas
aam
push
outsl
jne
cmp
fs
fisubl
and
pop
mov
mov
jo
xor
imul
fildl
push
das
outsb
mov
or
aaa
xor
add
jns
pop
push
jle
stc
lods
mov
xorb
pop
repz
out
xchg
and
sbb
insl
dec
push
xchg
dec
arpl
pop
js
inc
scas
roll
je
test
and
std
nop
mov
cltd
xchg
push
mov
cmp
fidivl
xor
adc
xor
sbb
pop
and
pop
dec
jae
fiadds
out
out
adc
bound
push
cmp
test
inc
adc
inc
inc
inc
dec
push
xor
and
sbb
and
cmp
sub
dec
dec
inc
pop
pop
dec
dec
inc
sub
ljmp
jl
inc
inc
dec
dec
dec
inc
pop
push
pop
push
push
inc
dec
mov
je
popa
pop
dec
dec
cwtl
decb
inc
push
pop
repnz
sub
and
pop
js
mov
and
and
ds
movsl
add
cmpb
push
test
jae
fs
cmp
add
clc
stos
or
ja
popa
and
and
das
and
xor
jae
jae
arpl
rcrl
adc
inc
or
orl
xchg
in
dec
clc
mov
dec
inc
adc
mov
popa
mov
mov
pop
dec
jae
jne
adc
cmp
xchg
jns
and
xor
or
outsl
push
pop
and
dec
cld
pop
xlat
mov
inc
and
inc
push
xor
xor
inc
test
add
test
insb
sbbb
sbb
sub
add
jecxz
push
push
sbb
mov
xor
mov
xor
popf
nop
dec
mov
jo
rcll
sbb
dec
and
pop
sub
mov
inc
jb
pusha
adc
dec
push
rolb
dec
jge
push
imul
cmp
sbb
sahf
shlb
push
popa
jo
rcrl
jne
push
stos
cli
adc
daa
dec
inc
dec
push
repnz
adc
push
jns
lds
inc
push
or
gs
inc
adc
outsb
shlb
inc
sbb
jns
mov
imul
cwtl
test
icebp
std
pusha
cmp
dec
ja
outsb
jno
mov
jae
call
add
outsl
inc
jp
das
pusha
xlat
push
out
fldln2
push
inc
add
cmp
push
xor
xor
dec
jo
xor
adc
dec
gs
sub
in
and
xor
xor
sbb
mov
andl
and
fidivrs
inc
fwait
call
fnstcw
insl
jl
and
jle
push
mov
insb
das
dec
call
es
jp
sbb
mov
dec
inc
or
push
jns
inc
arpl
lds
test
cmpsl
adc
add
js
inc
andb
push
dec
push
push
inc
dec
dec
jno
cmp
mov
and
push
sub
and
add
jp
jb
dec
or
mov
xchg
addr16
jns
xor
or
gs
nop
push
xor
or
jns
outsl
cltd
add
dec
cwtl
jo
jge
inc
push
adc
sbb
sub
mov
inc
push
movsl
dec
jb
cmp
fisubrs
or
xorb
sbb
mov
cmp
outsb
xor
adc
movhps
xor
test
ja
or
popa
ja
xchg
mov
jmp
mov
jno
imul
inc
push
inc
jb
jb
sub
imul
ja
jo
add
jne
lods
lea
jo
cli
add
popa
js
cmp
or
jecxz
push
sub
xor
jnp
imul
pop
enter
and
mov
push
popa
loope
mov
scas
xor
inc
adc
movsb
pop
or
cmp
add
ret
push
push
push
or
cwtl
mov
push
mov
aaa
sub
xor
sub
add
jb
xor
adc
mov
jb
bound
dec
sbb
xor
adc
arpl
mov
data16
mov
mov
jae
add
andb
aaa
push
pop
ret
dec
sahf
je
adcl
mov
cmp
add
jle
and
dec
jo
out
sbb
cmp
into
loopne
test
out
gs
hlt
or
and
sub
dec
jno
add
mov
sbb
arpl
test
arpl
xor
cmp
mov
or
inc
dec
movl
stc
arpl
rol
inc
bound
repnz
sbb
fcomi
jbe
and
xor
jno
mov
push
test
sbbl
dec
insb
xchg
adc
add
test
add
aam
sub
xor
iret
fs
popa
cmp
popa
enter
jnp
dec
pop
pop
daa
mov
rolb
cmp
push
or
es
fsubl
push
dec
and
dec
lods
pusha
aad
lods
push
mov
push
lock
xor
std
xor
fs
xlat
push
fninit
sbb
push
inc
insb
outsl
jbe
cwtl
adc
ret
stos
pop
push
leave
aas
sub
adcb
push
push
and
push
pop
push
push
inc
push
pop
movsl
adcb
adc
mov
popa
dec
rclb
or
jae
xor
push
push
mov
rorl
jnp
push
mov
sar
inc
push
push
and
push
inc
dec
push
pop
sbb
movsl
add
lds
inc
dec
and
sub
lea
movb
jne
or
add
add
jo
gs
adc
dec
jno
and
call
in
add
daa
pop
push
rorl
inc
add
cli
das
cmp
adc
or
outsb
addb
xor
push
pop
int3
inc
inc
jbe
cwtl
iret
int
daa
add
inc
loop
ja
jl
or
xor
sahf
fnstenv
dec
ds
sbb
es
lea
leave
out
sahf
add
inc
outsl
jae
es
inc
pushf
repz
imul
in
dec
mov
jg
aas
add
xor
add
add
add
dec
inc
cmp
or
jnp
dec
push
xor
xor
shrl
pop
push
or
pop
add
pusha
int
out
xor
cmp
push
xor
out
fiadds
and
aaa
jl
inc
jne
jb
rolb
data16
mov
movsl
jae
or
test
dec
lods
pop
mov
or
or
ss
inc
cmp
pop
inc
das
gs
push
mov
out
push
inc
sbb
mov
filds
push
mov
mov
addr16
insl
inc
das
jno
nop
popa
cmpb
imul
mulps
mov
call
pushf
call
or
leave
mov
jae
incl
stc
cwtl
pop
faddp
das
mov
or
xchg
rcrb
dec
add
js
jo
lods
jmp
jg
or
jmp
or
cmp
rolb
lret
js
inc
and
fiaddl
pop
sbb
push
push
and
adc
in
rdmsr
inc
jne
mov
adc
je
adc
or
pop
dec
cld
ret
xchg
je
sar
sub
ljmp
outsl
loopne
out
je
je
and
andb
and
enter
call
mov
lcall
adcl
movsb
daa
sub
mov
rep
mov
stos
push
push
push
push
push
icebp
fwait
gs
push
push
les
ret
hlt
xor
xchg
ja
push
push
inc
out
adcb
sbb
inc
push
push
or
dec
ss
dec
dec
jp
and
dec
jbe
das
loop
jae
mov
cmp
cmp
xor
stos
cs
inc
jne
mov
adc
imull
inc
mov
js
add
mov
cwtl
cmp
inc
popa
sub
xor
lods
jnp
adc
or
push
jo
sbb
cmp
insl
cmp
into
mov
imul
dec
add
jns
clc
inc
jl
stc
jb
and
mov
pop
sub
dec
and
jb
cmpsl
dec
inc
push
das
inc
pop
add
out
das
dec
push
and
jge
dec
das
xor
dec
push
test
xor
inc
cwtl
es
pop
mov
jg
sub
xchg
jns
adcb
data16
mov
sub
jo
mov
mov
mov
pop
xor
sbb
pop
in
xor
push
fadds
push
pusha
hlt
pop
dec
add
pop
push
inc
imul
stc
enter
punpckhwd
jne
outsb
outsl
lcall
xor
jns
sub
jb
cs
adc
addr16
loopne
int
cwtl
addr16
mov
xor
xor
cmp
dec
and
jae
inc
push
ret
popf
jl
es
jne
je
push
dec
push
mov
scas
mov
bound
add
push
stc
addl
push
pop
dec
push
inc
sub
jbe
jp,pn
sub
mov
mov
jo
outsb
imul
lret
add
pop
push
jbe
test
sub
rcrl
or
or
mov
fisttpl
stc
outsl
dec
dec
shrl
xor
or
pop
xor
xor
scas
insl
ret
add
iret
repz
push
iret
repz
cmp
sub
sbb
cmpsl
stc
cmp
cld
jbe
in
in
jb
jns
fadds
out
scas
jnp
xchg
push
enter
jbe
xlat
popf
pushf
fisttps
jns
out
lahf
insb
push
fs
push
inc
iret
repz
sub
sbb
ficoml
sar
jne
lock
out
call
repz
out
mov
push
sub
pop
pushf
xchg
push
mov
push
test
jl
and
js
push
repz
out
insb
fs
push
push
dec
inc
cmp
in
iret
cmp
xor
sub
sbb
sub
add
nopl
out
aaa
or
imul
adc
lock
insl
aas
aaa
inc
bound
icebp
cs
packssdw
ja
jo
xor
mov
push
inc
inc
int3
mov
repz
dec
push
push
or
inc
push
push
mov
call
dec
jns
dec
fistl
dec
add
inc
inc
inc
dec
push
dec
ja
aas
jge
dec
dec
xlat
push
dec
fs
dec
inc
push
fbstp
or
inc
push
mov
in
jp
mov
ss
or
pop
addr16
add
inc
push
pop
sub
inc
bound
popf
xorl
inc
and
lret
xchg
and
data16
cmpsl
or
dec
bound
inc
dec
dec
dec
dec
xor
outsb
into
push
inc
push
lcall
add
xorl
lcall
fsts
xor
pop
popa
arpl
sub
or
sbb
jae
cs
add
in
and
xor
xor
aam
pop
xor
outsb
adcb
jne
pop
roll
jecxz
sub
pop
xchg
pusha
xor
jg
and
pop
enter
insb
sub
shrb
xor
bound
cwtl
pop
inc
xor
xchg
sarb
xor
add
aam
das
das
push
and
xchg
shrb
and
inc
push
add
push
sub
fwait
dec
jp
sub
xor
cmp
xor
xor
and
subl
inc
inc
dec
gs
inc
ucomiss
cs
inc
roll
inc
js
pop
jb
mov
add
loope
pop
mov
testl
or
and
add
jge
sbb
mov
cs
lret
adc
out
vpmadcsswd
pop
daa
pushf
pusha
ffree
xchg
fidivl
inc
mov
aad
xor
or
test
adc
or
insb
and
pushf
push
in
jb
pop
pop
or
jg
pop
mov
loop
jne
pusha
bound
dec
cs
mov
mov
dec
and
lods
or
test
mov
subb
call
enter
mov
or
or
jo
lea
xor
mov
bound
sbb
je
imul
out
in
add
mov
addb
jg
xchg
dec
outsl
dec
dec
cmp
outsb
xor
adc
sub
addr16
das
lea
das
test
mov
xchg
mov
movsb
pop
gs
cs
fstpt
es
jp
jo
stos
pop
arpl
pop
add
in
push
ja
mov
notrack
out
jb
cmp
outsl
cmp
fisubrl
jno
pop
arpl
gs
mov
push
icebp
popf
stos
push
scas
add
fbld
jo
dec
inc
cmp
mov
sub
pusha
adc
iret
ja
sti
movsl
dec
dec
push
mov
inc
fwait
cmp
and
cli
cmc
pop
mov
mov
and
xchg
add
outsb
sbb
inc
pop
mov
cmp
mov
pop
xchg
cmp
jae
and
pop
shll
outsl
dec
data16
arpl
enter
and
lahf
xorb
cmpsl
imul
mov
pop
or
mov
mov
push
mov
aaa
push
in
fimull
mov
lods
dec
jb
push
lahf
popa
rolb
or
inc
mov
sbb
dec
cs
mov
sub
sbb
or
lods
xchg
mov
mov
xor
scas
rcrl
in
jmp
bsf
push
inc
dec
push
aas
add
adc
pop
sub
mov
or
dec
or
xlat
jno
ljmp
pusha
mov
add
jg
dec
push
test
ljmp
mov
loopne
pop
negb
sub
js
mov
sub
pop
xchg
xor
je
or
sub
xchg
insl
xor
sub
add
test
lods
xchg
and
stos
pop
or
mov
inc
insb
and
imul
outsb
ret
cmp
pop
sub
cmp
cmp
inc
mov
dec
fs
mov
jo
test
jae
or
ret
mov
sub
and
jo
and
mov
or
les
addr16
cmp
cmp
mov
dec
repnz
adc
sbb
ja
pop
dec
fcoms
mov
jl
pop
dec
imul
popa
cmc
das
cmpsl
scas
xchg
push
movsl
push
push
popl
mov
sbb
xor
adc
add
arpl
xlat
or
add
dec
sti
nop
sahf
rcrl
adc
dec
push
lods
sub
mov
scas
jmp
push
cmp
lea
aaa
adc
andl
or
gs
jne
mov
mov
mov
adc
fwait
lods
sbb
push
jle
fs
pop
outsb
push
or
pusha
mov
clc
xlat
jbe
les
or
or
pop
pop
xchg
push
add
test
xchg
in
dec
les
test
lar
imul
ja
inc
aaa
psraw
movsl
ja
dec
and
mov
inc
jmp
std
lea
sarl
inc
and
nop
mov
adc
mov
pop
stos
push
dec
and
outsl
gs
push
sbb
mov
popf
xor
shrl
jae
jbe
loopne
fsubs
pop
pop
push
rcll
outsl
pop
insb
add
push
inc
shll
adc
xchg
xor
outsl
movsl
pusha
mov
and
idivl
or
sbb
xor
je
dec
mov
mov
lods
and
sub
ja
add
inc
outsl
pop
push
mov
imull
inc
jnp
rolb
dec
aaa
adc
mov
popa
int
je
shrl
push
mov
ss
movsb
mulb
inc
negl
int3
jge
insl
jae
aaa
aas
inc
jne
mov
jns
push
mov
push
mov
mov
inc
fnstenv
and
xchg
ja
add
mov
xchg
dec
mov
dec
outsl
add
dec
addb
ja
adcb
push
sbb
setg
popl
mov
push
mov
aaa
loope
jo
push
inc
outsl
outsl
sub
filds
jae
test
mov
push
out
in
lock
test
cmp
add
cs
xor
ss
sub
fisttpll
push
jg
lret
icebp
mov
dec
sub
scas
xchg
mov
mov
mov
cmp
ret
lods
sbb
icebp
push
jg
pop
mov
addr16
jl
dec
dec
out
mov
leave
outsl
add
and
outsl
mov
ficoml
ja
ja
mov
mov
xchg
call
push
mov
jecxz
sub
adc
xorl
xor
pop
hlt
pop
shlb
jae
rorl
mov
mov
xchg
hlt
adc
add
dec
push
loope
rclb
push
pop
out
jno
dec
push
notb
mov
adc
xor
fsubs
push
xor
arpl
addr16
adc
cmp
punpckhwd
mov
sahf
sub
xorl
ds
xor
mov
inc
inc
add
pop
loopne
dec
dec
inc
add
iret
mov
inc
and
lds
imul
add
movsl
sub
xchg
jl
cltd
loop
sbb
sub
adc
fadds
out
jbe
in
insl
int3
pushl
outsl
xchg
dec
xorl
lds
in
roll
mov
pop
and
jns
fs
inc
roll
insb
dec
cmp
call
jg
das
jo
loopne
ja
push
pop
and
cmp
or
sarl
arpl
ja
mov
std
pop
adc
add
jo
data16
shlb
sub
sbb
popa
cs
ja
or
and
scas
daa
sub
adc
inc
or
sub
inc
or
rolb
jb
bound
ret
sub
pop
jb
jg
add
pop
and
je
fsubrs
adc
push
ss
mov
add
sbbl
insl
nop
inc
dec
inc
insl
fwait
jg
xchg
or
pop
mov
or
fwait
xor
or
push
sbb
pop
or
jae
mov
pop
or
add
or
cs
xchg
dec
mov
pop
inc
pop
insl
mov
fistpl
pop
cmp
adc
popa
arpl
outsl
aas
bound
adc
inc
insl
adc
imul
sub
insl
pop
cmc
mov
sbb
jnp
addr16
jbe
jb
cmovno
addr16
pop
bound
push
or
push
rcr
shll
js
fists
pop
ss
aaa
jae
fistl
fwait
aas
rclb
pop
test
jb
fmul
sub
pop
data16
enter
je
pandn
imul
fidivl
pop
inc
inc
mov
push
daa
fimull
aam
fidivs
ret
jo
mov
cmpsl
daa
xchg
daa
outsb
ret
dec
fldenv
insl
pcmpeqd
xor
popa
ja
mov
mov
pop
arpl
mov
mov
sbb
mov
add
mov
lds
popa
mov
sbb
mov
push
cmpsl
hlt
lock
shll
mov
xor
cmc
xor
pop
pop
and
sub
cmpsb
push
inc
insl
icebp
das
xorl
bound
xchg
mov
xchg
mov
pop
adc
imul
sub
dec
jmp
and
jo
adc
rcrb
loope
inc
in
call
lret
pop
dec
lods
bound
mov
add
jno
loopne
mov
and
dec
xor
outsb
and
push
add
dec
and
cmp
dec
adc
inc
pop
test
imul
pop
test
pop
jmp
push
cmpsl
push
sub
xor
test
push
aam
stos
movsl
push
sti
jecxz,pt
xchg
jg
aaa
mov
je
call
lds
orl
adc
inc
loopne,pt
inc
aaa
jb
fadds
insl
pcmpgtb
mov
add
jns
outsl
ja
adc
jbe
cmpsl
pop
mov
pcmpgtw
popa
das
xor
push
xchg
fucomi
daa
jo
stos
out
inc
pop
dec
movups
push
outsb
pcmpeqb
outsl
outsl
wbinvd
mov
rclb
sbb
or
scas
xchg
or
inc
xlat
out
in
sbb
jno
jne
ja
shld
sbbl
imull
sub
je
add
xchg
popf
pop
push
cli
daa
dec
adc
xchg
jae
push
add
int3
adc
xchg
or
sbb
data16
mov
and
pop
fcmovnbe
dec
test
pop
xor
cld
jb
outsl
jge
in
sub
arpl
pop
leave
and
push
call
pop
or
pop
divb
addr16
insb
scas
pop
arpl
outsb
les
daa
dec
add
mov
adc
lods
xor
ja
sbb
dec
inc
clc
mov
outsl
pusha
outsb
sbb
add
pop
pop
xchg
inc
das
insb
push
push
push
jbe
adcb
mov
mov
ret
pop
into
jbe
icebp
out
dec
pop
xchg
pop
sbb
mov
dec
mov
btc
xchg
jae
sarl
scas
daa
adc
sub
data16
popa
jbe
mov
cmpsl
sub
outsl
push
sub
scas
insb
test
shlb
je
jnp
xor
dec
dec
inc
add
pusha
in
in
rolb
dec
fldenv
xor
je
push
pushw
leave
jae
jno
jno
shrl
shll
or
shr
daa
aaa
and
add
data16
and
jo
aam
dec
into
pop
pop
xlat
aad
mul
dec
outsl
lea
push
les
lods
dec
inc
in
aaa
cmpsl
idivb
inc
das
push
add
sub
jae
ss
inc
sbb
push
dec
pop
sub
mov
sbb
aaa
add
repnz
sbb
adcb
jp
les
ss
xchg
aaa
cs
pop
testl
push
add
jle
dec
add
push
pusha
fisttpl
dec
sahf
std
out
jns
outsb
dec
push
jns
std
xorb
dec
add
inc
inc
outsl
push
inc
popa
sub
jb
cmp
je
xlat
cmp
dec
mov
jg
ljmp
pop
addr16
mov
inc
movl
xchg
jae
bound
into
or
lds
sub
xor
aaa
jge
das
bound
dec
pop
xor
mov
das
outsb
add
cmp
pop
cmp
dec
int
pop
ja
cvtpi2ps
addr16
xchg
outsl
adc
invd
pop
and
mov
add
sub
jae
inc
push
inc
cmp
aaa
popa
outsb
cmp
adc
sbb
and
lret
jne
ljmp
aam
adc
pop
add
dec
push
push
test
shll
sbb
popa
iret
pop
call
movsl
aad
and
ud1
sub
push
lods
xorb
subl
test
and
push
push
sub
dec
fistpll
add
les
jo
or
add
cmpsl
loope
ret
stos
loopne
mov
popl
loopne
add
insb
xorl
push
rdpmc
xor
lahf
test
fildll
xor
js
das
xadd
xor
push
mov
mov
popa
add
mov
jbe
xor
xor
xor
inc
xor
push
xor
fistpl
push
add
dec
inc
sbb
or
jmp
dec
daa
and
and
add
mov
dec
push
push
dec
inc
pop
insb
cmp
push
jo
cmp
push
adc
das
call
and
test
pop
jb
and
inc
jae
repnz
and
pop
fiaddl
in
mov
mov
mov
test
out
pusha
push
mov
mov
mov
mov
pushf
pop
enter
insb
xor
outsl
jecxz
and
call
sbb
mov
push
sbb
mov
mov
daa
pop
xor
jb
fdivs
pop
enter
daa
adc
lock
mov
je
bnd
and
mov
mov
das
xor
push
or
in
enter
mov
mov
pusha
in
leave
test
xchg
or
mov
cmp
inc
dec
enter
scas
mov
pushf
mov
icebp
inc
insb
scas
dec
push
das
in
xor
xor
daa
adc
lods
test
ds
jb
insb
push
mov
mov
sahf
out
test
pushf
push
je
push
stc
cmp
ja
sub
or
stos
nop
xchg
adc
rolb
add
xor
hlt
mov
sbb
push
add
sub
gs
xor
jo
fsub
mov
xor
nop
imul
xor
adcb
jno,pn
imul
push
xor
ja
lea
imul
xchg
xchg
out
ficoml
push
cmovle
pop
mov
inc
insl
je
ja
insl
stos
insl
data16
jo
sbbb
insl
jo
pop
fidivs
mov
dec
xchg
inc
jb
push
je
or
or
testb
inc
outsl
jne
rorb
dec
gs
bound
sbb
adc
movsl
negl
int3
jecxz
dec
in
fsubs
xor
jb
in
xchg
shlb
dec
shlb
jecxz
dec
leave
and
jae
outsl
inc
push
or
cmpsl
decb
inc
add
cmpl
mov
jbe
fs
push
ja
cmp
push
lcall
add
push
cmp
out
mov
imul
je
ja
ss
ja
shl
push
imul
iret
push
out
mov
push
loop
call
adc
dec
sbb
cmp
sub
outsb
adc
xlat
jecxz
hlt
in
insl
and
je
aaa
add
push
ret
sbb
push
dec
dec
inc
dec
pop
outsb
arpl
jmp
arpl
inc
xchg
push
mov
mov
add
insl
leave
rcrl
pop
movb
xor
dec
dec
sub
xchg
orb
mov
in
insl
out
inc
mov
scas
mov
push
mov
out
mov
and
cmp
insb
sarb
xor
lods
shlb
inc
push
pop
mov
mov
xorb
shlb
adc
adc
iret
jnp
add
sub
mov
push
adc
jne
jae
pop
push
dec
lds
insb
mov
outsb
insl
push
push
sbb
dec
push
ja
sbb
imul
xlat
fwait
cltd
cmpsl
fiaddl
xchg
leave
testl
imul
add
mov
lcall
roll
add
or
pop
add
lahf
add
push
adc
movl
cwtl
insl
or
dec
and
jae
pushf
les
jge
cmp
pop
xchg
js
mov
adc
pop
pushf
js
or
xlat
fwait
xor
xchg
push
inc
sbb
push
push
push
stos
mov
testb
je
data16
push
or
push
pop
js
imul
cmp
inc
xchg
or
xchg
and
dec
dec
daa
fwait
push
mov
cltd
notl
xor
js
push
ret
ds
push
push
je
cmpsb
mov
rcl
add
popf
xchg
test
add
cwtl
arpl
pop
loopne
imul
andb
xchg
dec
inc
dec
cld
cmp
push
jo
andb
imul
push
loop
gs
xchg
adc
xchg
mov
mov
pop
leave
jne
mov
fmull
jns
sbb
jae
sbb
inc
push
arpl
cmp
out
xchg
movb
or
mov
out
pusha
aas
sbb
jg
sbb
push
lahf
pushf
dec
adc
dec
mov
in
push
ret
push
and
insb
jns
gs
jmp
or
mov
xchg
rorb
mov
lock
xlat
and
dec
dec
rorl
dec
or
mov
mov
pop
jbe
mov
xor
xchg
rorb
mov
aas
inc
int3
mov
sahf
pop
jo
jbe
pop
dec
outsl
push
outsl
outsl
inc
pop
sbb
imul
mov
imul
imul
or
pop
sub
cmp
mov
xchg
jae
ja
subl
xchg
push
sbb
sbb
cmp
lods
outsl
jne
or
nop
sbb
ds
mov
dec
adc
sub
inc
add
adc
loop
fadds
bound
sub
and
cltd
and
jp
psrlw
jge
sub
pop
lods
push
xchg
repz
xor
insb
cmp
outsl
je
jb
dec
xor
cmp
or
outsl
pop
nop
xchg
push
ja
repnz
mov
loope
inc
adcb
cs
fldt
push
imul
addb
in
dec
cmpb
insl
pop
inc
or
adc
sub
in
call
add
stos
stos
mov
add
mov
inc
out
mov
add
sbb
inc
daa
inc
or
ljmp
sbb
or
add
and
roll
xchg
xchg
aaa
sub
pop
xchg
dec
gs
mov
add
aas
imul
adc
cs
pop
mov
xorl
faddp
push
mov
inc
xchg
push
cmp
dec
inc
dec
or
add
iret
lods
xor
ljmp
sbb
scas
subb
sbb
fnstcw
mov
inc
push
and
push
push
das
push
inc
inc
jbe
mov
rcr
sahf
ror
jnp
insl
jns
ljmp
cmp
xchg
imul
or
in
cmc
adc
adc
sub
out
ret
adc
push
adc
jb
or
jp
ja
mov
imul
movsl
push
cli
cli
ja
pusha
fnsave
inc
dec
push
fdivr
xor
sub
ds
xor
and
mov
sub
dec
inc
sbbl
fs
sbb
cmc
pop
fwait
scas
dec
insb
imul
shlb
insl
dec
sbb
mov
push
hlt
aam
aaa
pop
aaa
sub
add
xorl
add
imul
sbb
sbb
jg
pop
cmp
push
mov
jg
adc
inc
and
dec
push
push
inc
dec
cmp
cmp
sub
ds
sub
push
inc
inc
dec
inc
adc
inc
pop
xor
js
clc
dec
dec
ds
mov
leave
notl
fstps
scas
cmc
jae
and
mov
mov
cld
imul
push
dec
and
popw
add
and
notb
dec
and
dec
inc
test
mov
xchg
imul
push
fwait
movsl
add
xor
inc
rcrl
lods
cmp
or
add
sub
stos
jg
das
jae
jb
push
scas
xor
cmp
push
bound
or
dec
inc
and
inc
inc
sbb
pop
outsl
ret
loopne
mov
enter
xor
inc
adc
sti
pusha
out
inc
dec
mov
add
add
and
jmp
sub
mov
test
mov
jge
mov
or
pop
add
popa
mov
or
rol
shrb
movb
ljmp
push
xchg
inc
push
push
lcall
aad
push
enter
out
push
jge
ret
dec
ret
and
lret
fbld
xchg
adc
adc
gs
or
inc
add
lds
or
ret
or
xor
jl
or
rorb
or
inc
push
inc
pop
daa
jo
xor
xchg
xchg
dec
dec
es
xor
and
xchg
jb
xor
mov
xor
xor
mov
ss
xor
jb
aaa
ja
enter
cmp
cmp
pop
xor
daa
jp
and
xor
mull
shlb
or
fildl
jns
xor
and
pop
es
fidivs
enter
and
pop
es
pop
cmpl
pop
aaa
outsl
sbb
insl
pop
es
sub
jns
and
pop
sub
repnz
into
fildl
sub
xor
cmp
or
das
lret
mov
out
adc
insl
sub
adc
arpl
adc
jecxz
pop
adc
xor
adc
add
adc
lods
shrb
add
iret
mov
jg
daa
fistpl
push
jns
and
jge
mov
sbb
popa
push
cmpsl
movsl
jge
insl
adc
ret
mov
icebp
add
adc
mov
addr16
add
mov
dec
push
das
in
or
lcall
adc
sbb
insb
adc
sahf
inc
inc
cmp
daa
and
cmpsb
inc
pop
pop
adc
xchg
adc
push
jge
adc
add
and
mov
adc
xchg
ss
adc
and
iret
and
and
mov
pop
in
inc
inc
jl
or
inc
push
push
dec
pop
sbb
pop
cwtl
pop
or
ss
or
fcomps
daa
push
push
sbb
dec
xchg
adc
dec
pop
or
sbb
push
pop
or
dec
inc
pop
or
sahf
and
push
pop
or
loopne
inc
inc
push
or
arpl
cmpsb
pop
or
aas
xlat
xor
inc
push
pop
or
pop
pop
mov
dec
daa
push
fmul
jnp
inc
dec
or
lahf
fidivs
nop
dec
dec
or
imulb
inc
sub
insl
mov
push
imul
cmp
in
xor
popa
xor
push
cmp
arpl
in
xchg
xor
dec
push
cmp
xor
nop
xchg
inc
aaa
push
pop
fistpll
dec
cmp
mov
stc
dec
les
and
mov
test
xchg
push
xchg
loop
das
insl
loope
icebp
and
xor
das
inc
mov
cmp
addr16
int3
leave
rcrl
in
pushf
cmp
iret
aam
les
lods
add
iret
nop
test
icebp
jae
lods
dec
fbld
push
das
and
nopl
mov
enter
ud1
jecxz
inc
sbb
aas
add
inc
jmp
testl
arpl
sti
jae
das
lea
fidivrl
lea
sbb
add
outsb
dec
add
sbb
insl
outsl
arpl
lods
imul
outsl
jge
dec
imul
cs
lods
jl
inc
call
outsb
sbb
stos
inc
jb
rorb
push
rclb
movsl
sbb
arpl
je
sub
aad
dec
fdivrs
inc
mov
imull
rorl
out
movb
idivl
push
push
outsb
adc
inc
dec
mov
mov
add
repz
jns
mov
mov
or
adc
ss
shrb
ret
lret
andl
inc
mov
pop
mov
fs
jbe
fidivl
mov
jb
orl
mulw
mov
jnp
xchg
cmp
aaa
xchg
jg
add
jae
js
or
inc
lods
inc
test
sbb
arpl
shlb
sbb
or
push
mov
and
daa
je
movsl
mov
xor
push
xchg
or
mov
sahf
pusha
out
into
xor
fs
arpl
addl
add
mov
and
cmc
inc
scas
dec
addl
arpl
xchg
cmpsb
inc
mov
call
pop
or
lret
icebp
jmp
push
pop
test
movl
mov
test
dec
jns
mov
rcll
pop
inc
sahf
adc
int
and
sbb
iret
addr16
xchg
xor
les
dec
dec
in
or
add
loopne
loopne
roll
and
fsubs
xlat
adc
out
popa
fcoms
push
dec
push
imul
sbb
bound
mov
and
sbbl
dec
sub
fadd
add
add
or
push
nop
movsl
inc
sti
fstp
sub
lahf
push
ss
sbb
xor
and
ss
and
ret
fdivl
cli
js
imull
mov
cmp
jne
adc
add
jnp
add
add
cmp
pop
jne
std
add
addr16
sbb
inc
cmpsb
pusha
add
subb
mov
mov
lock
cmp
push
inc
pop
lea
xchg
popa
js
out
xor
pusha
iret
and
daa
or
pop
push
sub
out
push
fs
fs
insb
cmp
jae
xor
add
pop
push
xor
xor
data16
add
mov
outsb
xchg
add
dec
mov
call
inc
add
daa
inc
data16
jmp
daa
addl
fwait
stos
and
daa
push
popa
xchg
and
dec
pop
xchg
or
adc
or
and
sbb
or
push
jbe
adc
aas
adc
clc
sarb
insb
aas
mov
scas
add
subb
add
sub
or
inc
dec
cmp
out
mov
sbb
jae
pop
or
or
insl
outsl
fists
and
gs
inc
lods
pop
test
xchg
xchg
sbb
filds
or
mov
or
outsl
addr16
jns
push
in
ss
js
jb
mov
and
adc
pop
mov
inc
outsl
mov
cmp
outsl
orl
xorb
mov
rol
mov
test
scas
add
data16
mov
sbb
bswap
fs
sub
ret
test
ja
and
aaa
leave
mov
mov
sbb
jb
pop
add
jne
inc
addb
sti
inc
xor
pop
adc
xor
dec
enter
jbe
arpl
jbe
or
imul
push
or
ja
int
mov
stos
imul
in
movsl
xchg
insb
sbb
push
shrl
or
rclb
decl
mov
xor
je
xchg
shlb
dec
pop
daa
andb
rcrb
je
fistpll
xchg
dec
inc
addr16
dec
cmp
imul
jnp
daa
enter
cmp
sbb
outsb
movsb
push
mov
cli
cmp
addl
dec
sub
inc
enter
and
sbbl
add
jb
pop
and
pop
and
enter
add
pusha
pop
and
enter
dec
in
or
sub
enter
inc
and
sbbl
add
sbbl
das
pop
cmp
aas
daa
sbbl
add
pop
enter
and
and
and
enter
enter
sub
sub
pop
enter
cmp
and
pusha
and
enter
push
add
outsb
ds
sbbl
add
fsubrs
das
jb,pn
push
sti
adc
and
pop
leave
add
mov
pop
push
or
and
stos
mov
or
and
sahf
shrb
scas
and
cmpsl
jbe
xor
pop
add
dec
push
mov
add
inc
push
pop
das
add
and
arpl
xor
add
andb
add
pop
sub
jbe
add
dec
das
pop
repnz
cs
dec
dec
mov
and
xor
inc
mov
cmp
add
pushf
addl
or
mov
out
add
push
adc
sub
hlt
pop
inc
push
pop
push
jne
jo
arpl
push
mov
add
mov
in
popf
sub
addl
pop
mov
inc
mov
or
and
ja
and
mov
idivb
add
arpl
scas
ss
jg
pop
pop
add
ret
pop
shrl
scas
mov
xchg
movsl
sub
pushf
adc
pushf
mov
adc
cwtl
rcrb
jo
into
add
push
mov
leave
dec
fistl
shll
lcall
pop
imul
pop
xor
arpl
sub
push
cld
inc
movsl
dec
pop
mov
cmp
jmp
inc
add
push
repz
es
jne
cli
std
int
sub
test
iret
sub
fdiv
mov
ficompl
pop
scas
add
in
jecxz
jb
pop
add
xchg
je
push
lahf
femms
mov
push
jnp
push
lods
mov
and
je
add
push
movb
mov
outsb
loope
adc
xchg
jbe
test
mov
jae
imul
sub
mov
fwait
xchg
lods
out
jnp
add
call
add
repz
inc
cmp
clc
mov
inc
push
inc
and
cmp
loope
sbb
pop
inc
loopne
mov
ret
xor
mov
addr16
insl
and
mov
add
add
jae
inc
mov
lods
rorl
jae
and
and
bound
sbb
dec
mov
inc
cwtl
enter
and
notb
add
or
in
xchg
jae
jb
ret
cmpl
add
lea
cld
jg
xchg
movsl
outsb
imul
sub
mov
fmulp
mov
add
and
movl
daa
mov
add
dec
jb
mov
lds
out
and
sbb
andb
xchg
scas
add
and
sbb
inc
lahf
addr16
sub
nop
or
mov
push
fwait
adc
cwtl
xor
jp
in
mov
xchg
jg
cwtl
or
fs
shl
mov
outsl
and
inc
out
jns
imul
clc
or
loopew
sbb
nop
fisubrl
add
and
mov
pop
shlb
sbb
fs
test
loop
xor
dec
int3
sbb
pop
sub
sub
push
je
pusha
dec
repz
pop
adc
sbb
repnz
pushf
rcrl
adc
jno
dec
outsl
adc
mov
mov
adc
xor
adc
shlb
jge
add
ss
xlat
inc
adc
jbe
fldt
out
xor
xor
leave
or
add
and
xor
dec
aam
push
fbstp
mov
ja
pop
cmpsl
fcomp
xchg
add
ja
sub
xchg
sub
adc
mov
enter
insl
aam
insb
movsb
jns
ficoms
ja
add
mov
ja
test
in
aas
ja
mov
dec
pushf
inc
pop
fisubl
add
ja
push
fs
dec
sbb
or
ja
push
inc
xor
add
dec
rcrl
enter
dec
dec
fiaddl
les
leave
jbe
ja
add
jp
cmpsb
mov
add
push
adc
cmpsl
pop
add
test
adc
mov
out
adc
shrb
aad
out
adc
fcomp
pop
sub
imul
xchg
adc
out
fbstp
sahf
test
fisttps
adc
sub
ret
push
inc
sbb
pop
arpl
or
add
scas
movsb
nop
push
pop
flds
mov
inc
or
mov
or
in
fidivl
jg
fs
insl
mov
addr16
dec
mov
add
pop
sbb
mov
sub
insl
shlb
push
loop
aad
and
sub
fistpll
out
jge
dec
inc
push
and
push
adc
clc
or
outsl
pop
inc
add
push
shrl
pop
jg
sub
das
not
arpl
test
xor
sub
aam
leave
push
push
stc
or
xorl
jmp
pop
dec
xor
incl
and
cltd
loop
fistps
jo
cltd
std
cmp
adc
test
icebp
xchg
std
outsl
adc
popf
shlb
jnp
icebp
stos
stos
or
out
ljmp
jno
mov
sbb
cwtl
push
int
cwtl
or
mov
add
fistpll
lea
inc
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
fildll
sbbl
hlt
std
cltd
adc
test
movsl
mov
jnp
pop
fnstsw
fcmovnu
or
mov
adc
int
enter
mov
repz
push
out
test
data16
push
lcall
fsubl
lcall
insb
stos
push
rcr
xor
lcall
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
xchg
rolb
lods
imul
xor
rcrb
fcomip
filds
pop
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
mov
xor
in
pushl
xor
jle
pop
loopne
pop
dec
jge
cltd
nop
out
xchg
cwtl
ret
fsts
fsubrl
inc
adc
xor
xchg
out
bound
xlat
jg
jg
lea
adc
shrb
rol
pop
popf
fdivrl
shll
jo
mov
push
adc
pop
dec
js
pop
mov
mov
mov
sbb
adc
jg
or
adc
lcall
data16
gs
or
repz
and
sti
push
repz
mov
fwait
sub
pop
sahf
rep
pop
adc
popf
clc
pusha
iret
iret
fcmove
lret
xor
insl
leave
leave
popa
mov
fstl
insl
cmp
rclb
pop
jnp
adc
mov
push
jl
lcall
mov
adc
xchg
iret
or
lcall
imul
mov
in
lret
jge
xor
shll
and
xchg
ja
mov
jg
mov
in
leave
jmp
cli
fdivr
std
jmp
ljmp
cld
fstpt
jae
sbb
cltd
fsub
lock
insb
lods
aad
cmp
in
outsl
or
lock
jmp
jmp
cs
fdivrs
fmul
push
repnz
in
sti
lock
jnp
jnp
cltd
clc
cli
jp
aam
cmc
imul
mov
cltd
nop
lahf
aas
pop
push
test
push
dec
inc
jb
push
enter
cmp
flds
push
inc
and
add
cs
sub
shlb
iret
sub
cwtl
ljmp
mov
adc
cmp
sub
aad
xor
xor
in
jbe
mov
inc
xor
xor
add
push
and
xor
pop
movsb
fidivrs
xchg
jae
adc
or
inc
add
or
mov
xor
xchg
dec
repnz
xor
inc
xchg
orb
or
outsb
and
mov
xorb
je
xor
adc
mov
inc
cmp
cmp
mov
push
or
nop
inc
cs
sbbb
movsl
add
out
repnz
push
add
adc
incl
call
mov
dec
add
sbbl
dec
sbb
adc
sub
addr16
ret
pop
data16
imul
ja
jp
pop
add
lcall
sar
cs
xor
dec
int3
inc
sbb
cmp
jmp
add
fs
add
or
add
add
fcompl
jp
fiadds
push
int
lahf
add
fldl
xor
inc
mov
adc
insb
mov
cmpsb
jo
jmp
pushf
and
push
mov
outsl
pusha
aaa
push
es
mov
pop
inc
movb
mov
mov
ja
adc
and
mov
adc
fldcw
cmc
add
lret
inc
or
pusha
mov
dec
mov
cld
orb
xchg
in
pop
testb
lahf
jl
mov
iret
jbe
daa
js
adc
stos
pop
cmpsb
jmp
and
push
lds
fisttpll
or
js
mov
xchg
inc
mov
mov
or
paddd
fcomps
add
leave
dec
jo
je
in
sldt
jo
insb
andps
test
leave
outsb
inc
mov
lods
clc
add
and
lock
sbb
add
outsb
pop
imul
sbb
pushf
add
aam
cmp
imul
popa
enter
aaa
ja
adc
daa
pusha
shlb
rcrb
push
xor
add
adc
pop
xchg
inc
push
insb
ja
imul
gs
sub
sub
sbb
lea
sub
mov
and
cmp
sbb
sub
add
jmp
add
xor
arpl
sub
jmp
gs
rolb
or
imul
cmp
sub
cmp
dec
add
mov
lcall
popf
ljmp
js
movsl
xchg
in
xchg
push
das
ja
pushl
and
std
int3
inc
fs
mov
pusha
pop
or
ret
xchg
jl
out
adcb
ljmp
dec
into
adc
outsb
jb
int
inc
push
inc
fnstsw
or
hlt
or
pusha
fiadds
dec
loopne
shr
inc
dec
push
xchg
mov
mov
test
das
mov
sahf
int3
add
das
fcom
fidivrl
les
int
sub
add
mov
aas
mov
pop
jb
pop
cmpsb
movsb
lods
ljmp
and
addb
adc
pop
xchg
scas
jp
inc
sahf
outsl
add
mov
incl
cmp
pop
data16
or
mov
pop
sbb
sub
addr16
neg
cwtl
xchg
cwtl
dec
rclb
test
adc
scas
or
inc
out
sbb
mov
push
out
sarb
incl
mov
orb
dec
xchg
or
outsl
jp
add
add
sbb
outsb
pop
fcomp
or
das
or
add
pop
mov
cmp
dec
adc
cs
and
and
mov
pop
and
notrack
sbb
pop
or
add
add
xor
xor
cs
arpl
cmpsl
xor
sbb
or
ljmp
testl
out
and
int3
loopne
jg
addr16
add
sahf
addb
push
fcompl
daa
sarb
pop
pop
add
fldcw
sub
pop
pop
and
push
rcrb
rolb
jo
mov
jb
and
mov
adc
sub
mov
mov
xchg
mov
mov
jecxz
movsl
outsl
mov
out
mov
inc
add
xor
push
jmp
test
popf
addl
or
int
inc
fisttpll
das
aaa
mov
cmp
mov
xor
pop
inc
inc
and
push
mov
loop
sbbb
data16
test
daa
sub
test
xor
mov
shll
or
push
sbb
inc
xchg
pop
add
pop
mov
cmp
sbb
mull
sarb
push
dec
inc
adc
push
push
or
dec
mov
je
sbb
or
xchg
in
cmpb
and
adc
jge
in
pop
xlat
add
pushw
outsb
and
and
pop
fdivl
dec
add
pop
insb
ja
sub
fisttpl
out
jecxz
push
in
pop
sbb
outsb
sub
or
xor
daa
xor
scas
and
mov
pop
jnp
sti
xor
mov
nop
add
sarl
add
mov
xor
mov
inc
loop
ficoms
dec
pop
aaa
xor
lcall
int
test
inc
loope
lds
adc
popw
push
pop
sbb
jns
fidivs
dec
int3
lret
fcomps
pop
add
mov
sub
push
mov
sti
xor
mov
sub
mov
data16
add
cld
je
cmc
lods
mov
add
in
mov
inc
ret
jo
mov
or
sti
call
inc
aam
add
outsl
insl
imul
push
jnp
je
cmpb
mov
inc
mov
xor
inc
mov
xor
pop
mov
in
in
repnz
xor
xorb
mov
adc
fmull
add
add
data16
dec
mov
add
lret
jnp
push
stc
popw
xor
pusha
shll
fnsave
ljmp
or
cmp
dec
push
pop
imul
cmp
mov
fldt
lret
repz
addr16
arpl
aam
shlb
fisubs
push
jp
test
pop
scas
rolb
jbe
lahf
adc
punpcklbw
add
ret
push
lock
jg
pushl
rolb
fcoms
xor
add
inc
add
idiv
inc
sub
sub
shl
shr
sbb
testb
sub
add
inc
pop
xor
add
loopne
fucomip
mov
pop
adc
jmp
cmpb
jmp
repnz
loop
push
push
pop
je
jne
ljmp
outsl
xor
xchg
jg
pop
sbb
mov
jl
mov
imul
fcmovb
in
mov
insb
sbb
in
push
cld
mov
sbb
call
jmp
ret
je
repnz
lret
jg
out
or
jl
and
int3
fimull
stos
int
test
stc
jns
test
lcall
fisubrl
lret
in
sub
fidivrl
cs
push
fimull
xlat
fldl
neg
pop
xchg
paddd
push
aad
inc
fisubrl
xchg
add
push
mov
incl
sub
shr
aam
jmp
mov
pop
xchg
subb
decl
fs
in
movsb
call
pop
push
xlat
push
in
in
pop
push
in
fistpl
aam
push
mov
jg
pop
add
aas
bound
shlb
bswap
lcall
jp
jle
sbb
fwait
and
shr
arpl
ljmp
leave
add
and
or
out
mov
add
lock
in
mov
cs
fisttps
push
mov
repz
incl
loop
nop
sub
ret
pop
mov
xor
test
jmp
in
subl
jg
mov
mov
orl
mov
cmp
std
call
js
shrb
inc
mov
pop
mov
mov
jle
out
pop
test
push
imul
lret
scas
das
mov
in
add
inc
add
mov
sub
shl
in
fmuls
repnz
pushf
xchg
and
pop
repnz
mov
stc
pop
pusha
or
dec
inc
jl
jns
cmp
and
sub
dec
ds
adc
iret
and
aam
xor
addr16
sub
insl
sub
leave
mov
ret
dec
repnz
xor
es
sub
dec
pusha
xor
cmp
jl
xor
in
xchg
iret
ret
aas
add
gs
add
es
and
push
test
addr16
iret
and
out
out
mov
loopne
jae
xor
or
inc
inc
sub
je
leave
rclb
es
hlt
xchg
cmp
xchg
and
dec
ds
cmp
mov
dec
sahf
test
push
and
ret
icebp
xchg
addr16
clc
and
pop
repnz
repnz
fsubrl
xor
inc
stc
pop
repnz
movsb
pusha
mov
es
in
std
and
cmp
and
jae
iret
and
and
jae
sub
push
les
jae
subl
dec
and
stos
sub
es
cmpsl
sub
and
jns
jns
or
in
and
dec
ss
sarb
mov
xor
leave
addr16
xor
leave
jae
jae
sahf
sub
or
aaa
lock
fsubs
inc
and
and
in
and
dec
enter
dec
and
sbb
cld
and
daa
in
loopne
les
dec
enter
and
jb
push
and
and
in
pushf
sbb
add
in
enter
enter
adc
dec
nop
pop
je
push
push
inc
add
push
sub
push
stc
jae
dec
lret
jecxz
and
in
and
inc
or
lock
push
lds
loop
sub
and
jg
push
dec
aas
mov
incb
out
and
xor
inc
and
testb
and
das
xor
enter
pop
xor
nop
add
outsb
aad
cs
jno,pn
push
adc
fisubl
xor
jne
nop
imul
mov
xor
nop
sub
xor
or
push
enter
cmp
aaa
jb
pop
and
xor
xor
adc
xor
cmp
cmp
add
adc
loop
mov
mov
jae
nop
sub
or
or
scas
nop
sub
jae
jae
or
scas
nop
sub
sub
or
cs
jae
jae
or
add
add
mov
jae
jo
stc
popa
and
xor
xor
test
xor
push
enter
xor
mov
cmp
nop
sub
or
or
scas
nop
sub
xor
xor
inc
xor
das
sbbl
add
jb
pop
and
xor
add
loope
jne
jbe
inc
push
movsl
jecxz
mov
aaa
outsb
insb
jmp
daa
xor
leave
xchg
pushf
xchg
xor
cmp
pop
leave
xchg
pop
aaa
ss
xor
leave
xchg
pop
leave
xor
xor
add
aaa
dec
scas
in
ss
xor
xor
adc
xor
pop
add
nop
sub
inc
dec
inc
das
sub
dec
sub
sub
ds
loopw
insb
and
outsl
outsl
outsb
inc
add
and
shlb
je
push
add
jge
sbb
xchg
push
xor
mov
pusha
arpl
in
or
or
and
sbb
mov
sar
imul
adc
adc
test
cwtl
xor
clc
jle
pop
add
push
mov
jbe
lock
or
fcoml
add
xor
shrl
popa
cmpb
and
mov
je
jecxz
jno
test
bound
out
icebp
data16
push
pop
mov
nop
rolb
cwtl
pop
inc
mov
pop
push
push
inc
push
push
fwait
inc
cld
ljmp
cmpsl
mov
xor
lods
test
rolb
sub
mov
movsb
pop
pop
sub
sub
or
scas
pop
lock
sbbb
dec
push
aas
add
loop
push
pushf
outsb
sub
loopne
cmc
add
sbb
xor
push
pop
daa
inc
adc
xchg
mov
push
inc
xor
and
addr16
fnstcw
add
sub
jmp
cld
or
xorps
shlb
je
aam
dec
or
push
pop
das
xor
dec
sub
lret
outsl
mov
mov
stc
outsb
add
or
adc
lods
ja
push
jno
adc
lcall
inc
dec
xlat
and
push
add
and
out
inc
adc
mov
int
add
dec
inc
mov
leave
sub
test
sub
cmp
pop
add
push
ficompl
sbb
sbb
xchg
dec
test
push
mov
xchg
push
push
sbbl
inc
sbb
mov
inc
cs
adcb
out
bound
mov
fs
inc
out
cmpsl
sbb
jae
loopne
insl
mov
and
inc
adc
sbb
xchg
mov
ja
mov
xor
ffree
in
popa
mov
pop
pop
aaa
pop
mov
and
mov
push
jnp
insl
pop
mov
fsubs
jne
mov
lea
shll
test
and
cmpsl
test
test
insb
add
test
pushl
push
jae
addb
add
lock
cld
xchg
sub
mov
mov
add
and
add
test
add
nop
dec
cs
sbb
jle
xchg
xor
add
cs
shrb
enter
jbe
add
xchg
icebp
xchg
inc
add
add
pop
in
or
xchg
push
push
add
cmp
in
add
add
add
iret
push
or
or
fstl
aaa
or
outsb
imul
daa
adc
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
pop
bound
out
sub
in
movsb
fbld
push
mov
pop
add
add
gs
jmp
cmpb
inc
into
pop
test
movsl
sbbl
subb
jmp
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
lods
out
push
or
xchg
xchg
out
rorb
sbb
xchg
out
or
mov
mov
pop
mov
out
xor
mov
sbb
mov
sub
insb
push
or
jns
or
lock
cmp
rcll
rclb
adc
repz
jo
cmp
adc
sahf
out
fsubs
sbb
out
js
jns
jp
imul
adcb
xchg
test
dec
sgdtl
push
lds
adc
pop
add
add
xor
call
inc
incl
inc
sbb
je
xchg
or
push
inc
lea
mov
sub
jg
cmpsl
jp
dec
pop
inc
push
subw
or
imul
repz
xor
dec
insl
add
divl
pop
popf
add
repnz
aad
sahf
dec
das
push
dec
insb
xor
add
enter
in
ds
pushf
or
ret
mov
adc
stc
and
adcb
sbb
leave
sbb
dec
mov
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
jmp
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
dec
std
call
mov
outsb
dec
leave
fwait
xchg
and
and
lahf
int
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
insb
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jmp
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
pop
ficomps
frstor
test
andb
nop
push
add
test
push
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
shlb
or
out
stos
push
adc
add
mov
dec
adc
add
jl
insl
dec
adc
mov
test
sbbb
popa
jb
imul
adc
mov
add
push
pop
inc
mov
lods
outsl
jno
dec
data16
loopne
sub
mov
add
jae
push
fnstcw
jae
jbe
pop
xchg
push
pop
inc
pushf
jnp
outsl
push
je
push
outsb
ja
xor
outsl
fisttpl
cmpsl
adc
mov
push
or
push
das
dec
jl
rorb
pop
xor
and
es
pusha
seto
das
jne
into
inc
jg
dec
inc
dec
inc
push
inc
dec
outsl
arpl
push
imul
and
mov
xchg
cmp
add
jae
ret
mov
lods
or
popa
adc
ss
cmp
sbb
ffree
add
pop
fsubs
push
fs
jmp
xor
xor
fistpl
andl
imul
loopne
mov
and
dec
outsl
add
in
sbb
adc
mov
adc
inc
and
add
adc
or
mov
sbb
js
mov
sbb
cmp
push
imul
js
dec
mov
jecxz
jo
rorl
outsl
add
imul
jno
daa
inc
adc
adcl
das
push
and
sbb
popa
add
and
push
sub
dec
and
xchg
xchg
push
and
mov
add
pop
adc
add
sbb
cmp
lea
sbb
cmp
adc
std
int
jp
add
movsb
addb
push
lahf
and
testl
jmp
adcb
inc
js
in
sbb
add
pop
pop
push
test
adc
dec
in
adc
nop
sbb
nop
cmpsl
adc
and
push
mov
imul
lods
mov
push
dec
into
jo
and
fisttpl
stc
sub
push
outsl
jmp
shll
gs
pop
addb
icebp
pop
lret
push
push
in
lahf
dec
xchg
push
stos
jg
push
imul
jb
addr16
jns
mov
sub
jno
cmp
fs
push
jl
xor
mov
add
xchg
jg
add
dec
cs
inc
test
mov
loopne
loopne
pop
and
dec
test
popa
inc
mov
aad
out
add
pop
cltd
popa
sbb
adcl
and
adc
dec
lds
mov
xor
mov
cltd
jo
xor
pop
push
lcall
je
dec
push
add
push
jno
movsl
sbb
scas
pop
insb
cmp
rorb
test
stos
sbb
add
stc
adc
push
adc
lock
ret
mov
fisubrl
or
xchg
xor
imul
imul
fs
adc
add
dec
insb
dec
add
push
test
std
push
add
or
push
adc
outsl
dec
and
sub
nop
fcmovne
lcall
adc
addr16
insl
push
or
mov
cmpsb
push
push
fisubrl
adc
or
mov
mov
or
shl
inc
cs
adc
jnp
lock
add
xlat
add
mov
imul
mov
pop
adc
add
mov
add
dec
xchg
out
fistps
or
push
ret
cmp
or
push
sub
add
and
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
repnz
pop
jae
addb
cmp
rol
xorb
pop
xchg
mov
mov
xorb
loop
xchg
jmp
popa
push
jo
add
or
popa
jo
add
add
add
or
mov
add
add
add
add
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
