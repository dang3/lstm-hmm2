std
call
in
sub
lea
push
xor
push
push
pop
cld
call
pushl
je
xor
jmp
push
push
push
push
push
xor
std
in
decl
cmp
je
lea
push
push
call
add
fistpl
data16
and
add
in
mov
add
scas
jns
movsb
adc
pop
imul
lock
cmp
in
add
pushf
or
inc
inc
add
jo
pop
std
pop
mov
mov
add
hlt
setp
push
jae
cld
push
fmuls
xor
insl
jns
xchg
push
push
push
aaa
inc
and
cli
push
or
lds
xor
xor
sub
mov
jnp
outsb
loop
std
out
jge
pop
test
push
sub
mov
pop
mov
dec
fmulp
pop
js
sbb
cmp
mov
push
push
gs
push
sub
pop
sub
jmp
outsl
xor
cmp
sarb
out
imul
mov
imul
add
sub
mov
adc
popf
mov
jnp
xor
push
jnp
cmp
insl
mov
jne
and
add
test
pop
stos
lea
adc
ret
fdivl
adc
aaa
mov
sub
inc
clc
lret
sti
jo
push
popa
push
push
adc
mov
push
popa
scas
mov
mov
sbb
jbe
inc
push
pop
inc
add
fs
les
jno
push
mov
xor
sub
mov
mov
add
add
mov
rcl
mov
pop
stos
js
insb
sbb
jbe
lcall
cmp
movsb
lcall
inc
out
adc
push
movmskps
andb
push
repz
fs
rcrl
cmc
pusha
imulb
std
bnd
cmp
sbb
xor
in
xlat
pop
xchg
dec
ljmp
pop
subb
and
js
pop
push
loopne
bound
push
negl
jmp
sbb
xor
in
fdivr
adc
outsb
mov
mov
push
fisttpl
int3
addr16
and
mov
cmpsl
xor
mov
mov
call
sub
push
push
pop
jl
pop
adc
and
inc
ja
push
mov
mov
push
pop
nop
push
or
nop
mov
push
inc
or
nop
hlt
adc
push
fistl
push
test
push
push
cmp
cmp
mov
inc
cmp
pop
jbe
mov
jno
enter
xor
sbb
add
add
dec
sti
or
enter
jle
int
mov
mov
jecxz
insl
and
pop
pop
mov
jno
movsb
adc
js
xchg
lock
xlat
cwtl
insb
inc
test
add
xchg
add
inc
jno
or
push
jmp
idivb
push
popf
repnz
clc
daa
clc
cld
in
xor
sub
mov
fildl
xlat
das
popf
mov
enter
test
push
shrl
push
fwait
push
and
sub
jne
cmpb
dec
adc
fucom
cmp
push
and
jmp
mov
add
push
pop
jmp
push
pop
cmp
or
pop
fsubr
or
outsb
adc
mov
hlt
aad
sub
mov
mov
mov
movsw
arpl
stos
mov
jl
xlat
inc
mov
pop
xor
stos
lea
adc
jmp
push
or
cmpsl
loopne
daa
mov
mov
mov
popf
icebp
shl
mov
jle
fcomps
mov
test
add
adc
xchg
aas
add
add
ret
jne
mov
outsb
shll
and
add
lds
mov
in
mov
or
pusha
pop
rorl
add
xor
push
push
ret
addb
outsb
int
pop
gs
push
cmp
mov
mov
loop
inc
pop
sti
add
ljmp
mov
jne
cmp
ds
cld
iret
adc
scas
sub
ret
roll
add
mov
xor
lret
in
loopne
loopne
jecxz
lret
push
sub
sarl
lea
iret
jns
mov
ljmp
jmp
xor
and
cltd
xlat
pop
idiv
cmp
sarb
mov
adc
add
jmp
rolb
and
push
push
shrl
inc
loopne
test
cmpsl
push
frstor
pusha
cwtl
push
and
pop
jl
imul
insb
repz
nop
push
xchg
orl
iret
incl
mov
xor
cltd
sub
sarl
add
add
lea
mov
jbe
push
or
jl
sbb
fs
xchg
dec
mov
mov
sbb
fs
int3
mov
lea
xchg
xchg
dec
adc
gs
mov
fnstcw
mov
push
push
or
xor
mov
mov
pop
pop
pop
cmp
loope
cmp
cmpl
jne
jl
lahf
jno
or
add
movb
and
enter
ja
jmp
sub
mov
imulb
rcll
add
rclb
mov
mov
rolb
js
mov
jg
mov
sbb
pop
lea
jbe
loopne
push
aaa
mov
ljmp
or
les
lea
jo
bound
loope
lock
pop
test
adc
mov
dec
push
icebp
outsb
fdivrp
sti
pop
cmpb
sbb
daa
lock
and
int
mulps
push
pop
cltd
add
sub
fsubrs
gs
pop
cmp
sub
testb
cs
cmp
clc
fistl
inc
push
add
or
xor
xchg
inc
fmuls
jne
xchg
or
fisubrl
mov
push
and
xchg
and
test
addr16
jne
pop
jmp
mov
ucomiss
jge
ret
add
pop
push
jge
rol
jns
hlt
je
mov
jno
xchg
in
xchg
push
pop
hlt
negb
adc
clc
jmp
dec
ret
sahf
sub
adc
push
mov
push
sub
daa
mov
std
jge
push
fs
dec
imulb
jl
push
adc
push
adc
jl
jmp
and
pop
inc
adc
int3
adc
xchg
xchg
test
adc
mov
cli
pop
cmc
add
mov
shll
rcl
pop
in
cmpsb
in
leave
inc
jno
shr
out
ret
xchg
out
add
pop
mov
ss
lods
out
push
roll
int3
mov
inc
and
inc
pop
dec
mov
in
xor
fnsave
test
dec
push
mov
or
pusha
shrl
rsqrtps
push
sbb
push
pushf
jbe
cmp
pop
add
mov
cmp
mov
test
push
out
mov
and
sahf
mov
or
mov
inc
mov
call
jmp
test
dec
push
nop
inc
adc
or
int
mov
lret
sbb
into
xor
rcrb
push
enter
or
adc
dec
in
and
sub
in
dec
cs
enter
sub
xor
jg
mov
int
inc
addr16
out
xchg
psubusw
enter
jle
or
sbb
fsubr
jge
outsl
adcl
add
add
or
cmp
adc
adc
push
push
push
jbe
das
dec
and
push
mov
icebp
mov
jmp
les
push
mov
mov
loopne
loop
mov
pop
aam
sub
and
mov
outsl
sub
addr16
or
clc
negb
addr16
js
test
add
add
pop
xor
in
sub
sub
mov
scas
inc
dec
push
call
sahf
xor
icebp
push
call
mov
sub
mov
pop
test
jno
or
sub
sbb
mov
ret
add
sysret
jb
push
nop
inc
pop
sub
mov
icebp
and
mov
push
cmp
and
lret
ja
ret
inc
or
shlb
imul
pop
sub
sbbl
out
hlt
popf
or
sbb
icebp
or
cmp
add
imull
or
or
call
pop
dec
pop
jl
mov
xchg
inc
insl
cmpl
xchg
rorb
aam
roll
jge
add
loopne
pop
and
ljmp
and
arpl
mov
sbb
mov
scas
call
jmp
push
test
lds
add
les
dec
enter
sbb
pop
sti
vcomiss
add
push
inc
lcall
adc
outsl
mov
push
mov
rcpps
sbb
sarb
push
push
xchg
dec
insb
dec
xchg
xor
adc
cltd
and
push
jg
movl
sbb
addb
mov
aam
mov
cmp
cwtl
push
push
cmp
je
push
ljmp
test
mov
cmp
jae
hlt
inc
mov
neg
pushf
adc
push
in
popa
enter
ficoms
pusha
daa
cld
push
unpckhps
mov
xor
inc
in
sub
cmp
xchg
lock
sbb
dec
inc
movsl
push
adc
jne
dec
in
adc
sub
pop
lret
pusha
jg
out
add
mov
push
dec
push
subl
cld
cmp
sar
adcb
clc
lock
js
xchg
and
push
mov
pop
and
pop
push
mov
repnz
and
mov
mov
push
sub
aad
repz
pusha
cli
add
mov
push
push
rorl
mov
pusha
es
shlb
fcomps
aad
push
imul
loope
or
mov
push
push
and
jne
xor
jmp
inc
lahf
push
sahf
cmp
mov
mov
mov
aam
push
sahf
mov
rcrb
aad
andl
in
jg
cmp
pushf
inc
std
out
mov
imul
out
sub
jp
or
jg
add
dec
cmp
jg
mov
xor
lahf
arpl
les
pop
in
inc
jg
sbb
jb
mov
std
test
add
add
cmp
jns
adc
or
xor
pop
aaa
cli
push
cli
push
inc
push
cltd
mov
enter
add
cld
lods
or
or
mov
pop
inc
imul
cmpsl
pop
pop
nop
mov
leave
daa
loopne
fsubl
jmp
nop
push
ret
mov
jns
jmp
push
out
cmp
xlat
imul
and
and
imul
leave
ret
pusha
sub
mov
push
cld
int
cmp
jl
mov
jbe
push
push
mov
push
rcll
or
push
ljmp
dec
jmp
push
repnz
xchg
in
lock
xchg
mov
sub
repnz
sub
mov
sbb
push
push
jmp
mov
or
cmpsl
mov
dec
test
add
sbb
int3
xor
pop
in
clc
push
push
adc
mov
sbb
dec
es
cmp
fs
loopne
nop
fistpll
sbb
iret
mov
out
fndisi(8087
jo
push
push
pop
nop
enter
enter
xchg
push
mov
enter
rorl
cmp
pop
inc
pop
ja
add
add
popf
fmull
mov
mov
mov
jmp
jl
rcrl
enter
jb
cld
aam
nop
stc
jno
out
fisttpl
and
dec
loopne
dec
push
pop
mov
clc
or
dec
movsl
je
mov
dec
xchg
push
xchg
xchg
iret
add
push
andl
jo
jmp
decl
cmpl
jae
adc
repnz
pop
mov
sub
int3
jno
push
jb
push
subl
or
pop
in
inc
dec
fisubrs
jle
xor
pop
test
xor
js
out
push
inc
pop
xor
and
cmp
les
pop
pop
lea
push
and
mov
mov
or
fs
inc
into
cmp
or
inc
dec
int
insb
sbbl
in
fidivl
mov
addr16
or
adc
pop
faddl
sarl
xchg
adc
xchg
push
push
push
sbbb
rcrl
popa
gs
jns
ss
rclb
cmp
xchg
jno
sbb
out
loop
test
or
pop
dec
call
xor
or
out
movsb
or
addr16
mov
fimuls
popf
loop
xor
hlt
dec
adc
rolb
jo
pavgb
loopne
addr16
cmc
xlat
incl
add
mov
cmp
jne
add
mov
pop
mov
ret
push
sarl
nop
cmpsb
or
xor
daa
push
outsb
xchg
pop
xchg
push
inc
push
test
adc
sbb
test
mov
xchg
pushf
popa
call
mov
xchg
adc
lcall
scas
dec
inc
and
mov
outsb
push
ds
lock
rorb
pcmpeqb
subl
hlt
sbb
test
in
jecxz
jo
fadds
inc
pop
add
and
xor
adc
cmpb
push
xor
mov
mov
sbb
lahf
mov
or
sbb
aas
and
inc
sub
adc
hlt
add
and
mov
jnp
stc
cmp
shrl
loopne
leave
aad
xor
pop
add
cmpb
popa
fwait
sub
stos
lock
pop
fmuls
test
je
inc
jns
cmp
pop
inc
repz
enter
ja
cld
or
and
or
pop
pop
movsl
jecxz
aam
aas
xor
push
and
jl
aam
outsl
dec
adc
out
add
icebp
mov
jg
rolb
lods
enter
or
sbb
and
mov
stos
jbe
xor
cmp
call
or
add
ss
mov
out
fdivs
inc
lds
inc
popa
mov
mov
mov
rclb
mov
test
add
popa
sbb
clc
mov
sub
and
cmp
jne
pop
jo
add
rolb
insb
data16
add
cmp
fiaddl
pop
sub
mov
push
fistpl
cmp
rolb
xor
sbb
push
xchg
pushl
cwtl
xchg
sub
xor
pop
mov
call
div
adc
inc
sbb
daa
push
in
xor
inc
test
mov
inc
adc
in
shrb
popa
sbb
or
xchg
inc
xor
popa
sbb
push
imul
sub
inc
dec
jecxz
or
test
ds
mov
call
mov
xorb
popf
xchg
sti
mov
xchg
xchg
maxps
sub
inc
xor
sbb
mov
call
aaa
cmpl
add
fdivs
push
clc
sub
and
sbb
pop
add
negb
rep
pushl
ljmp
test
sbb
adc
mov
adc
movsb
not
add
mov
pop
daa
in
push
push
pop
in
pop
mov
lds
mov
mov
sbb
rorb
not
mov
or
sub
cmp
push
push
jle
pop
pop
add
test
pop
pop
ljmp
in
loopne
gs
mov
push
or
mov
pop
hlt
je
cmpl
movl
clc
jbe
mov
dec
mov
cmpl
inc
or
mov
movsl
xor
push
dec
adc
es
mov
cli
lock
cmpl
clc
add
inc
jb
add
in
js
lret
cld
test
sahf
jecxz
push
fcoml
jmp
mov
loope
adc
test
lea
or
inc
jnp
in
or
loop
loop
jne
pop
sbb
and
xchg
add
xchg
pop
mov
push
clc
lds
or
or
push
push
movsb
push
and
sub
push
lret
lock
adc
mov
mov
mov
push
jbe
and
jnp
shlb
decl
cmp
fs
paddsw
icebp
popf
cld
rcrb
push
xchg
xchg
inc
cltd
xor
clc
push
inc
in
cli
mov
mov
add
dec
and
pushf
sbb
pop
cmp
call
jle
je
pop
cwtl
mov
daa
js
sbb
adc
jo
inc
pop
sbb
loopne
xchg
mov
jge
jbe
imul
jnp
lods
neg
push
sbb
hlt
lret
mov
fisubrl
sbb
xchg
test
inc
fadds
xchg
jne
test
je
sbbb
loop
cltd
fnstcw
outsl
push
push
mov
mov
xor
sbb
or
jo
lahf
sbb
xor
idivb
push
cmp
or
adc
adcb
pop
popf
push
sarb
jmp
add
push
add
push
inc
cwtl
out
jae
mov
sbb
cld
push
mov
lahf
inc
data16
xor
push
pop
ret
or
sbb
mov
test
popf
lret
rcrl
jmp
xchg
clc
jnp
in
lock
mov
int
xor
roll
push
push
fsubl
sbb
sub
adc
sub
out
inc
cmpl
cmp
push
jnp
std
mov
test
leave
cmpb
pop
test
sub
addr16
es
mov
and
mov
sbb
add
pusha
inc
test
outsl
xorl
mov
sub
push
pushf
push
inc
adcl
cli
ljmp
mov
sbb
ja
test
pushf
lcall
jmp
dec
cwtl
push
xlat
mov
cld
jmp
mov
push
cmpb
add
xchg
aas
or
imul
pop
push
pop
movsl
sbb
push
add
and
mov
insl
jae
sub
movb
loope
pushf
and
pop
aaa
test
and
xchg
xor
jp
jne
out
cmp
push
jnp
xchg
inc
xor
scas
int
xchg
pop
adc
mov
imul
or
or
push
roll
inc
mov
repnz
xor
xor
sub
jb
hlt
add
mov
pop
mov
or
xor
push
pusha
test
sbb
subl
and
and
push
movsb
inc
xor
insl
jmp
incb
pop
in
sub
push
shll
rolb
inc
je
dec
fbstp
mov
inc
dec
daa
and
and
or
add
fidivl
mov
add
pop
sbb
dec
cmp
popa
test
mov
and
adc
sbb
lahf
mov
push
or
lea
push
xchg
dec
orb
pop
mov
pusha
add
mov
out
or
lods
popf
nop
jno
mov
nop
and
out
inc
in
dec
mov
push
add
cli
xor
cmp
fstps
inc
cld
mov
inc
cmp
mov
mov
test
xchg
loope
pop
pop
and
repnz
sub
std
push
addr16
popf
js
inc
mov
mov
std
in
imul
and
jns
test
lret
dec
in
sub
je
push
adc
nop
mov
add
sarb
xor
inc
pop
push
in
pusha
inc
add
sbb
cld
push
fmul
and
fisubrl
mov
sub
cmp
hlt
and
cmp
rcr
mov
pop
push
mov
int3
pop
pop
mov
test
fldenv
clc
xor
clc
rol
xor
test
jne
sub
mov
lds
adc
xchg
inc
fsubs
pop
sbb
inc
sbb
push
pop
test
in
push
jb
mov
or
roll
cwtl
add
pop
jno
fnstenv
pop
xor
mov
cmpl
mov
fcomp
inc
ficoml
cld
out
mov
cmpsl
add
and
jmp
xchg
daa
mov
jle
pop
pop
pushl
fmuls
std
jge
jo
xor
dec
repnz
mov
pop
ja
arpl
stc
loop
cmp
add
jle
mov
pushl
mov
push
xor
lods
add
sub
insb
add
in
sbb
add
inc
mov
into
push
sbb
icebp
mov
cmp
in
and
add
inc
inc
mov
inc
xor
push
push
mov
hlt
push
sbb
push
dec
cs
mov
sbb
cmp
mov
mov
adc
js
sbb
mov
sbb
sbb
mov
add
nop
sub
pusha
pushf
add
jo
lret
or
jb
cmpsl
push
fistl
jge
bound
mov
push
inc
add
fists
sub
imul
cwtl
addl
rcr
cmpsb
xchg
push
xchg
out
sbb
aaa
and
sbb
inc
pop
dec
jae
dec
cmp
pop
das
inc
sbbl
fwait
ss
cmp
orb
lock
daa
jns
inc
push
pop
aam
and
pop
hlt
jno
sbb
in
pop
cmp
jle
popa
js
mov
sbb
repz
fsubrs
lods
adc
jb
fcomps
mov
andl
icebp
add
adc
pusha
cli
adc
xchg
push
push
push
cmpsl
add
adcl
push
adc
push
lea
inc
sbb
mov
out
outsl
xlat
dec
mov
js
sub
dec
mov
push
ret
push
jo
fnstcw
push
test
ss
rclb
adc
cmp
pop
dec
js
cli
mov
es
or
jbe
dec
repz
aas
int3
lret
inc
addr16
mov
inc
rolb
stos
ret
dec
sbb
aad
pop
mov
in
adc
test
hlt
add
scas
sbb
mulps
adc
jo
mov
mov
mov
push
jge
dec
cmp
outsl
test
sbb
scas
and
clc
cld
cld
loopne
jne
out
int
iret
sbb
and
adc
or
sbb
popa
loopne
add
mov
cmp
scas
roll
push
les
push
scas
lods
jne
outsl
adc
cs
jne
inc
in
cmp
jmp
adc
pop
xchg
pop
sub
loop
jno
in
mov
clc
cmp
adc
lahf
adc
cltd
loop
mov
mov
and
pop
movsl
mov
movl
fsubs
movsl
mov
pop
imul
sar
ds
cmpl
je
jl
lods
cmc
in
cmp
pop
jmp
push
movsb
cmp
lock
les
je
fists
das
xorl
inc
and
pop
enter
sub
add
test
fneni(8087
das
jnp
int
pop
add
test
push
in
pop
sub
negb
push
pop
pop
call
inc
es
push
cmpsl
xor
fwait
add
je
aad
scas
sbb
fprem
jmp
ffree
inc
dec
loopne
and
repz
xlat
xchg
das
jns
cmp
out
or
movsb
in
test
sbb
les
mov
shlb
sub
jb
call
adc
popa
dec
jecxz
mov
push
cmpl
in
fldl
push
gs
inc
orb
add
mov
sub
push
add
test
aam
dec
or
mov
sti
push
push
loope
shll
aad
push
faddp
bswap
dec
daa
imul
ljmp
add
xor
mov
roll
pop
xor
cmp
les
xlat
sub
push
lock
mov
xchg
ret
jno
ds
mov
fwait
jbe
add
mov
jmp
and
aam
divl
and
enter
add
imul
in
xchg
mov
pushf
mov
dec
sub
loopne
popa
dec
fcomps
inc
xchg
fstps
jl
cmp
push
push
call
inc
cmp
xchg
jl
lret
and
jge
insb
push
xor
notl
int
jmp
mov
test
add
push
pushf
mov
movsl
call
out
add
pusha
xor
mov
fsubl
or
stos
imul
pop
cmp
sbb
nop
aam
push
lods
mov
jge
andl
mov
test
outsl
popf
adc
add
std
sbb
pop
psllq
testl
jmp
mov
negb
push
sahf
je
push
jo
sarl
push
in
push
mov
daa
cmp
add
fdivs
or
in
push
nop
xor
fmull
or
pushl
mov
jbe
push
push
mov
pop
xchg
in
jo
add
push
inc
jge
xor
ss
lock
xchg
loopne
add
stos
dec
mov
push
jmp
js
jmp
push
jge
sub
cmp
jge
setle
mov
push
cli
or
lock
jecxz
div
out
inc
push
push
xor
or
sub
mov
addb
jecxz
push
and
adc
mov
jg
pmaxub
add
repnz
push
mov
push
push
incl
and
push
or
push
push
push
scas
cmp
dec
andb
or
mov
xchg
adc
movsb
sbb
pop
lcall
ret
rcrl
adc
mov
pop
xor
pop
pop
ljmp
hlt
incl
push
lock
mov
push
xchg
add
roll
inc
outsl
sub
push
sbb
mov
inc
dec
and
imul
push
jge
or
in
sbb
jge
pop
cmp
sbb
mov
and
ja
je
push
jmp
adc
rclb
xchg
mov
cmpsb
imul
and
fdivl
push
xor
or
xchg
cmp
repnz
push
insl
lahf
cmp
mov
mov
push
stc
xchg
cld
xor
add
sub
push
out
mov
loop
dec
adc
or
sbb
mov
pop
or
push
adc
insb
or
fstpl
add
adc
arpl
or
pop
add
push
mov
push
clc
cmp
or
test
xorb
add
or
add
sub
test
cmp
ja
sbb
jae
jge
cwtl
fldt
movsl
les
fistpll
in
or
lds
pop
push
sbb
mov
lds
adc
ljmp
mov
add
mov
cwtl
mov
mov
mov
mov
and
add
and
int3
adc
mov
adc
fsubrl
push
in
cmp
push
cmc
notb
clc
test
aam
fistpll
jge
xlat
imul
pop
stc
mov
fs
dec
add
out
add
loopne
add
lea
inc
xor
ss
test
lcall
inc
or
mov
rcl
xchg
inc
dec
mov
shll
fdivrs
aas
js
test
mov
pushw
stc
repnz
lock
mov
les
xor
pusha
lea
jmp
loope
push
xchg
push
push
test
fnclex
xor
push
in
xchg
push
in
or
insb
add
lret
nop
lods
aaa
das
imul
and
stc
cmp
push
sub
jbe
cmp
in
jmp
adc
pop
fistpl
jmp
adc
sbb
fnstenv
inc
leave
mov
push
push
push
inc
into
jno
push
adc
cltd
cld
mov
ljmp
mov
lcall
or
or
stos
jl
call
repz
outsl
push
ficomps
scas
mov
push
loopne
xlat
inc
xor
adc
sti
fxam
xlat
in
inc
sub
pop
or
in
sub
add
je
pop
adc
enter
arpl
xchg
or
and
dec
adc
sahf
icebp
sbb
mov
pop
mov
loopne
and
add
inc
or
inc
push
insb
pop
fiadds
add
lret
repnz
sub
in
xor
loope
pop
inc
and
cmpsb
cmp
sahf
bound
sahf
cmp
inc
xchg
mov
or
adc
bound
fdiv
sbbl
lret
push
dec
lahf
adc
xlat
sahf
sub
test
adc
sub
test
or
or
dec
xchg
jns
and
cld
adc
add
add
pop
push
jmp
xlat
push
shrb
es
pusha
push
mov
pop
int3
mov
rclb
add
int
shlb
mov
testl
xlat
sub
mov
mov
adc
push
mov
rorb
leave
mov
or
and
xor
mov
push
cwtl
dec
out
push
jbe
xchg
adc
adc
xchg
xlat
sub
adc
sub
xor
lods
dec
adc
add
sub
cwtl
xchg
xchg
outsl
and
xor
sub
outsl
jmp
pop
call
adcl
push
es
sbb
pop
jb
mov
jmp
push
push
sbb
jle
je
nop
scas
mov
pusha
adc
fcoms
test
sub
or
aad
lods
xchg
mov
test
cmp
xchg
lea
aaa
sbb
and
mov
stos
ljmp
and
in
pushl
dec
pop
call
mov
dec
and
and
xor
shr
mov
loope
lock
dec
jne
pop
rcrl
rcrb
cmpsl
or
push
xlat
dec
loop
test
mov
shlb
push
cmp
bnd
negl
inc
inc
push
lcall
pop
shr
inc
push
sub
jnp
sbb
inc
cmc
fmuls
add
mov
jb
cmpb
push
cmc
cmp
xchg
add
stc
lds
adc
cmp
lock
add
dec
pop
fs
fists
jae
dec
ds
and
sbbl
ret
dec
or
add
fldl
mov
fsubrl
dec
aas
loope
in
mov
mov
jno
add
jne
dec
out
mov
repnz
sub
xor
cmp
pushl
mov
adc
imul
pop
call
inc
pop
cmp
pop
cs
ret
cmc
lahf
aad
mulb
push
addr16
test
insl
pop
lea
in
or
inc
and
enter
stos
je
scas
push
or
mov
mov
mov
xchg
addb
and
or
inc
push
push
add
jmp
add
arpl
push
lahf
jb
push
out
rclb
rorb
cmp
push
cmp
xchg
fst
mov
clc
xchg
lods
adc
hlt
jno
fs
dec
pop
rolb
cwtl
add
loopne
testl
mov
cmp
jne
push
pop
jmp
movsbl
mov
divb
pop
dec
cmp
pop
lea
or
cmc
adc
push
push
shl
pop
ffree
bound
clc
jne
fmull
sbb
sub
jb
jecxz
adc
cmp
movsl
or
pop
mov
lcall
and
dec
cmp
ret
jl
sbb
aaa
push
loope
aas
mov
add
adc
sbb
sub
pop
add
ljmp
jbe
xchg
test
push
in
outsb
jmp
cmp
add
insl
sbb
and
jo
xlat
and
pop
jno
jne
mov
arpl
cmc
sbb
mov
adc
or
fcomps
cmp
aaa
enter
dec
addl
daa
mov
jnp
adc
fwait
test
cltd
add
cmp
sub
push
aaa
adc
lcall
or
adc
sub
mov
mov
call
xor
add
cltd
cmp
mov
pop
add
aaa
rolb
mov
pushf
xor
and
popf
ret
nop
add
cltd
pop
inc
adc
or
mov
fnstcw
push
movsl
push
dec
push
fmuls
add
push
les
dec
add
inc
loopne
sbb
and
fdivs
fucom
test
pop
sub
test
daa
sub
mov
add
loope
inc
repnz
mov
sbb
mov
cld
dec
pushf
mov
mov
loopne
dec
xor
xor
ret
aam
mov
loop
loopne
aad
lret
jnp
jmp
and
inc
add
arpl
lcall
fwait
jp
push
jns
das
add
push
jae
or
mov
xchg
fsubrs
mov
lcall
and
call
dec
inc
aaa
in
pop
popa
adc
add
in
add
icebp
xchg
fstps
cmc
xlat
jno
xchg
icebp
cmp
in
sbb
adc
add
adc
pusha
add
dec
js
sbb
dec
sub
jne
xchg
out
rcll
lock
insb
std
inc
and
lock
push
je
ljmp
roll
adc
sti
sbb
mov
roll
and
ss
jb
sub
insb
xor
jne
xor
lods
shl
xchg
pop
test
push
scas
mov
dec
mov
int
or
scas
icebp
gs
push
sbb
dec
and
and
clc
imul
rol
and
pop
push
int3
test
mov
mov
push
fcoml
gs
arpl
mov
jnp
inc
int3
inc
das
fbstp
mov
into
pop
jge
pop
rol
xor
inc
aam
aad
push
dec
faddl
lcall
dec
xchg
mov
cltd
mov
push
sti
push
xor
adc
in
inc
push
or
lahf
lret
dec
mov
test
or
cmpsl
stc
add
push
push
xchg
cld
add
jmp
push
int
or
mov
sbb
neg
mov
rolb
mov
mov
loopne
mov
cli
xor
and
add
inc
punpckhbw
xchg
mov
clc
imul
stos
add
pop
adc
inc
inc
leave
enter
iret
or
ret
mov
mov
sarb
jne
out
adc
imul
aaa
ss
mov
mull
fcomp
and
out
and
mov
inc
xchg
push
dec
rclb
push
fisubl
or
in
fnstcw
push
int3
mov
je
and
in
push
addr16
and
scas
inc
loope
inc
mov
or
and
movsb
sub
lock
pop
in
je
add
iret
hlt
aas
push
repz
jg
jl
lcall
mov
pop
add
xor
cwtl
jbe
mov
sbb
push
cmpsb
or
adcl
lea
adc
xchg
xchg
in
repz
jne
adc
mov
std
bound
pop
shr
dec
push
ss
test
sub
jb
inc
stos
fisttpl
call
cltd
mull
ret
inc
adc
mov
add
movsb
mov
sbbb
xor
mov
pop
inc
or
cs
cmp
dec
leave
inc
cmp
xchg
fcoms
jae
xor
enter
insb
cld
mov
out
cli
aam
std
xor
or
mov
pusha
push
lret
mov
js
es
sub
loopne
in
ja
sbb
shr
adc
aaa
bound
int3
je
mov
fstps
mov
popa
pop
ss
loopne
sti
jge
sti
jae
xchg
sub
cmp
push
out
jecxz
push
cld
add
sbb
ror
pushl
jge
ja
mov
shr
dec
mov
rcl
add
add
es
sbb
insb
push
bound
dec
xchg
pusha
pop
andl
add
jmp
insb
imul
outsb
pop
jne
imul
cmp
filds
mov
pop
inc
adc
shlb
loop
jmp
push
mov
pop
je
test
pop
shll
push
adc
push
lods
dec
adc
das
inc
mov
xchg
das
and
ljmp
and
dec
div
or
fildll
jge
fmull
imul
and
push
mov
sbb
rorb
sub
call
add
or
ficompl
movsb
rorl
hlt
mov
and
cmp
jmp
push
and
sbb
or
xor
pop
push
xchg
loopne
sarl
sub
mov
xchg
mov
movl
shlb
scas
in
mov
jne
or
shlb
inc
sub
cmpsl
sub
jmp
sbb
pop
stos
sub
jg
inc
stos
jno
mov
mov
xor
add
jg
sub
jle
mov
jo
xor
inc
cmp
jl
ret
ljmp
pop
dec
push
xchg
rorl
sti
cmp
or
add
mov
adc
shr
pop
or
ret
jle
out
test
add
mov
inc
and
call
or
or
mov
je
das
push
std
divl
cld
pop
cltd
idiv
test
outsl
movb
inc
jmp
mov
cmp
leave
mov
mov
inc
dec
lea
cmp
jae
pop
push
sbb
push
in
add
into
repnz
stos
call
sub
and
enter
mov
ret
mov
into
enter
and
sbb
inc
and
gs
mov
mov
out
sti
lock
pop
clc
call
fstps
call
enter
add
or
dec
pop
dec
jge
mov
into
adcb
and
repnz
aam
test
sbb
shlb
clc
cld
jmp
cmp
sub
rcrl
test
xor
add
cmp
mov
push
popa
hlt
lock
dec
xchg
sub
call
pop
repnz
mov
push
inc
aas
sbb
fdiv
ss
xor
jecxz
pop
and
pusha
push
pop
hlt
das
adc
add
into
mov
pop
mov
std
sbb
adc
cmpb
testl
and
push
jb
xor
ss
mull
shr
xor
subb
dec
xchg
daa
imul
lock
mov
adcb
adc
pop
mov
pusha
lods
sbb
pop
test
lret
push
cmc
adc
inc
fdivl
push
rcrl
outsl
daa
cmp
mov
je
push
push
cmp
push
xchg
aas
or
adc
lahf
outsl
cmp
jne
push
popa
ficoms
out
add
test
inc
and
cmp
jl
fcom
lods
pop
popa
mov
rolb
jmp
dec
dec
rcll
out
dec
es
jns
rcrb
push
fidivrl
cli
je
adc
pop
xchg
xchg
jns
push
es
in
pop
insb
iret
insl
and
sub
and
test
rcl
xor
clc
pop
sbb
adc
orb
shrl
lcall
test
add
or
sarb
pushf
add
andl
cmp
cmp
jmp
pop
pop
cmp
pop
mov
mov
adc
xor
mov
sub
fs
fisubrl
mov
add
sbbb
and
sub
cmp
mov
das
dec
gs
lods
adc
pop
fsts
xchg
js
cmp
mov
aas
mov
ss
idivb
adc
mov
call
jmp
je
mov
cmp
call
ret
inc
push
daa
push
adc
add
test
int3
out
push
pop
or
or
pop
adc
inc
bound
je
pop
add
push
out
scas
sti
cmpsl
or
push
mov
loopne
or
cmpsl
sub
mov
mov
jb
loopne
jno
add
xor
sub
mov
clc
add
or
hlt
lea
push
sub
fldcw
sub
les
int3
and
cmpsl
cli
push
lods
pop
sbb
and
scas
mov
xchg
xchg
pop
sub
es
cwtl
aaa
sbb
cs
outsl
or
and
fdivrs
push
mov
sbb
adc
bound
jge
pop
mov
add
mov
inc
cmpl
add
cmp
cmp
ret
cmpsb
incb
mov
subb
jmp
push
fnstenv
xchg
sbb
pusha
dec
inc
pop
inc
mov
pop
jmp
and
repnz
cmp
mov
cmpb
jmp
mov
and
add
xor
lock
push
push
dec
sar
psllq
push
pop
cmp
jnp
dec
inc
push
push
inc
push
rorb
outsb
sbb
pop
cmp
and
mov
mov
mov
sbb
push
sahf
jle
sbb
call
test
leave
mov
inc
cmp
mov
jb
adc
cmpw
jne
add
rolb
jae
fcompl
sub
inc
pusha
push
lea
lahf
test
mov
xor
loopne
mov
mov
and
pop
push
jbe
xor
addr16
rclb
dec
pop
pop
push
ret
add
jl
and
jbe
inc
add
mov
adc
sahf
fiaddl
push
sbb
lret
sbb
lods
or
bound
dec
js
arpl
push
dec
pop
jns
lock
adc
lret
fs
push
call
test
inc
fistl
xor
jl
xchg
inc
in
out
inc
mov
fbstp
lea
sbb
loopne
or
inc
lock
jg
sahf
addr16
mov
pushf
lahf
testb
push
sub
pop
lahf
stos
inc
jo
jmp
loopne
imul
and
cmp
jne
mov
roll
lds
mov
lret
clc
test
hlt
push
xchg
lret
cmp
cmp
or
pop
leave
pop
sub
add
int3
xchg
inc
add
inc
cmp
pop
push
clc
jb
jmp
pop
imul
inc
rcrl
fcoms
xchg
clc
in
movsl
test
aam
mov
xor
shr
and
mov
pop
and
sub
add
push
mov
sub
test
xor
add
cmp
lods
jecxz
or
mov
pop
xchg
mov
dec
cmp
fdivl
cmp
and
mov
mov
pop
das
sarb
sub
ret
loop
andl
repnz
pusha
xchg
fnsave
push
call
lock
mov
and
cmp
jne
fldln2
add
push
int3
xlat
dec
cli
loope
mov
gs
nop
push
xchg
dec
outsb
and
lret
push
int
xchg
push
xchg
lret
push
jmp
xor
xlat
jmp
xlat
sub
jnp
add
cmp
andb
pusha
inc
and
icebp
out
stos
jae
mov
or
or
rol
mov
icebp
add
or
loopne
cli
inc
inc
cmpb
or
adc
jmp
add
insb
push
mov
mov
inc
icebp
subb
xchg
pop
aaa
mov
mov
pmaxsw
leave
push
jno
inc
fstps
cmc
in
fmuls
add
cs
sub
loopne
rcrb
fxch
adc
fists
xchg
xchg
das
pop
pusha
nop
out
and
jp
rcrl
dec
cld
subb
and
mov
insb
gs
push
aam
adc
sub
dec
dec
xor
in
jmp
pop
fwait
out
jbe
cmpl
dec
mov
test
push
clc
not
mov
adc
jo
hlt
in
das
scas
cmpb
jbe
inc
inc
ljmp
add
jb
arpl
mov
sbb
sbb
mov
cmp
shlb
incl
es
enter
cmpsl
sub
movsl
jge
sub
repz
adc
add
ss
dec
out
xchg
add
and
inc
cmp
jl
xor
jns
mov
jmp
cmc
psubusw
repnz
or
dec
push
je
ss
les
rol
jmp
xor
fstl
push
xor
clc
ljmp
imull
cmpb
mov
jge
popa
push
push
cmp
jne
xchg
inc
sbb
jo
movsb
pop
adc
popf
fimuls
movsb
stos
dec
pop
push
lock
call
imul
pop
jns
mov
repnz
int3
scas
jge
sbb
inc
xorl
jae
je
imul
inc
or
mov
or
pop
pop
dec
push
or
mov
nop
notb
inc
jmp
dec
mov
aam
pop
sbb
cmp
and
cmp
adc
test
cmp
gs
mov
push
pusha
dec
pop
mov
addr16
inc
xor
and
mov
repnz
dec
cmp
loopne
shlb
inc
mov
cwtl
sti
and
add
roll
and
cmp
cwtl
xchg
and
inc
aam
mov
cmp
enter
or
mov
enter
das
sbb
mov
je
push
es
lock
mov
push
mov
add
and
enter
outsb
lock
lds
add
cmp
daa
aam
call
jl
mov
cmp
or
pop
add
fs
das
sbb
incl
push
sub
inc
jl
jl
mov
popa
add
jne
push
jns
aad
mov
sbb
cmp
xchg
cs
std
pop
dec
cmp
jbe
cmp
cmp
jb
pop
jne
cmp
jae
push
or
push
cmp
sub
push
push
lahf
ret
pop
sbb
stc
iret
jg,pt
mov
jbe
cmp
sti
fs
sub
mov
mov
push
inc
dec
ss
pop
mov
into
xchg
or
mov
pop
inc
aaa
xor
cli
repnz
lcall
xchg
popa
mov
inc
push
push
dec
rolb
adc
test
and
push
in
cmp
push
push
push
dec
and
fcomps
sub
dec
xchg
push
nop
or
sbb
cs
jnp
call
out
fstp
pop
fsubl
call
fdivr
rorl
xor
loop
xchg
lahf
sub
mov
ret
mov
movsb
popf
sbb
scas
add
jne
push
int
or
or
ret
jno
call
lods
xor
mov
cmpsb
sti
fidivrl
or
ds
mov
mov
into
push
fistl
sub
xor
inc
mov
mov
sbb
mov
lcall
in
mov
dec
xchg
mov
mov
mov
push
nop
pop
push
add
inc
push
in
lock
mov
mov
cli
jne
push
cmp
mov
sti
cld
add
or
stc
sti
cmp
jmp
and
xchg
xor
xchg
pop
lea
jle
sbb
shlb
inc
cmp
push
subl
mov
rclb
push
adc
mov
gs
jo
mov
int3
xchg
or
cltd
sub
mov
pop
fsubs
inc
pushl
jb
shlb
clc
or
nop
inc
xor
leave
test
ret
dec
imul
jne
mov
mov
or
sub
adc
mov
xchg
sbb
dec
add
insb
and
pop
or
movsb
pusha
stc
pop
mov
sbb
mov
pop
mov
sbbb
enter
sub
in
pop
or
fisttpl
mov
jae
lods
push
dec
loopne
pminsw
push
jge
lods
dec
and
loop
mov
loopne
mov
fsts
test
mov
andb
sub
in
nop
ljmp
jne
sbb
fbstp
add
iret
dec
mov
mov
sbb
adc
test
sub
in
mov
dec
fwait
inc
sub
pushf
mov
mov
clc
jne
dec
mov
adc
pop
insl
enter
lock
test
pusha
fdivr
lret
enter
lret
jne
cmp
jae
inc
mov
jl
roll
jbe
cmp
stos
adc
inc
sbb
mov
out
cmpsb
out
test
aam
pop
jg
dec
or
filds
cmpsl
rolb
mov
out
mov
pop
inc
cmp
mov
adc
adc
shl
push
mov
loope
mov
jmp
popf
andb
push
test
imul
mov
xchg
mov
mov
scas
dec
and
xor
push
or
shrl
setp
jb
sbb
and
lods
sub
pop
pop
das
cmp
xor
or
inc
push
inc
cmp
shlb
ud0
popa
add
cmp
push
add
clc
fs
jmp
pop
lahf
mov
inc
dec
sbb
and
imul
jae
pop
imul
insl
out
lods
addr16
out
pop
sarb
rorb
push
leave
stos
ja
and
xchg
jbe
sub
inc
sub
adc
pop
adc
addl
push
iret
out
adc
push
mov
sbb
adc
and
nop
cli
adc
inc
ret
pop
repnz
imul
sti
inc
lods
add
sbb
xor
dec
mov
dec
pushf
mov
test
fsubrs
insb
mov
or
fistl
loopne
mov
pop
mov
insb
test
iret
cs
xchg
daa
adc
sub
xchg
aam
pop
mov
jne
push
jmp
ret
jmp
icebp
je
mov
xchg
sub
in
jno
mov
insb
or
xchg
jne
jmp
or
test
sbb
mov
xor
adc
out
aaa
mov
cmpb
les
sub
push
lock
loope
popf
test
and
cmpb
push
sbb
int3
or
add
adc
test
mov
sbb
or
jge
push
adc
andb
xor
and
xor
divb
jnp
pop
cld
jne
inc
movb
jmp
xor
pop
mov
inc
lret
dec
mov
decl
inc
push
cmp
pop
add
or
arpl
push
daa
jne
mov
mov
lret
loopne
fwait
adc
inc
pop
adc
jg
xor
sbb
add
aaa
mov
popf
cmp
pop
call
adc
push
cs
xchg
sub
mov
xor
roll
int
mov
shrb
mov
jmp
or
inc
jle
int3
sub
dec
imul
add
inc
sbb
xchg
iret
adc
test
imul
js
xchg
xor
push
and
pop
aam
xor
push
xchg
add
mov
fs
pusha
inc
push
test
lea
cmp
test
dec
xchg
and
ss
es
lock
pop
xchg
add
fldt
mov
inc
sub
nop
es
or
mov
out
test
push
je
dec
xor
and
add
sub
insb
mov
test
stos
test
mov
arpl
cwtl
pop
fildl
je
pop
mov
in
adc
imul
das
or
add
movb
push
cmp
sbb
pop
pushf
cmpsb
in
xchg
or
popf
fcompl
xor
fcmovbe
dec
sub
add
cmpb
pop
je
ret
cmpb
je
dec
jne
inc
push
xchg
inc
pop
sbb
add
adc
and
or
xor
jns
fildll
mov
sarb
mov
inc
dec
popf
cmp
lar
cmpsl
adcb
mov
jo
add
add
sub
loopne
add
js
cmp
ja
sarb
hlt
xor
rorl
or
out
ljmp
xchg
and
popf
adc
lods
call
mov
loop
lret
or
aas
push
sti
push
xchg
mov
subl
jns
cs
sub
mov
cmp
adc
or
push
and
int
insl
loope
push
xchg
push
push
pop
fwait
shrb
xchg
sbb
or
jmp
das
push
add
rcrl
jae
push
repnz
pop
xchg
and
in
add
inc
mov
xchg
or
lods
xor
jb
fisttpl
xchg
xchg
dec
xchg
pushf
mov
jo
in
adc
xchg
mov
call
or
sahf
or
xor
push
adc
mov
mov
lds
inc
iret
int3
in
push
lahf
test
xor
sbb
sub
sub
ret
fwait
loop
adc
cs
aaa
je
sub
ret
out
pop
jmp
stos
and
mov
and
add
test
push
push
push
loope
xchg
mov
and
push
out
mov
push
shlb
or
insb
mov
cs
cmp
add
cmp
icebp
or
fdiv
data16
aaa
cld
pop
pop
push
es
xchg
and
pop
push
inc
or
jne
push
iret
adc
or
xor
decl
ds
jne
movb
push
inc
jns
or
lods
pop
inc
in
pusha
cmc
aam
roll
adc
sbb
mov
loope
sbb
shr
je
jmp
cltd
add
pop
push
mov
jecxz
mov
decb
push
push
pop
sbb
push
xor
and
cmp
push
sbbl
sub
pop
out
lret
push
rolb
sub
lods
stos
push
mov
sbb
cmc
mov
push
inc
iret
inc
test
hlt
cmp
movsl
in
pushf
sahf
push
sbbl
jne
movl
insb
lcall
fists
lcall
inc
cmp
dec
cmpsb
dec
insl
enter
jg
cmp
pop
push
sub
inc
mov
in
subl
icebp
cmp
add
mov
iret
sbb
test
enter
in
pop
lret
test
push
sbb
or
sbb
js
add
jmp
lcall
movb
out
rdtsc
aam
mov
push
or
in
inc
pop
orb
add
sti
mov
fadd
jecxz
adc
shrl
mov
sbb
mov
popa
pop
fwait
mov
pop
insl
push
bound
jnp
xchg
lock
andb
inc
bswap
dec
push
arpl
add
mov
and
add
adc
push
rorb
lcall
sub
push
add
div
cmp
jbe
xor
mov
hlt
jg
divl
shr
push
cmp
inc
cmpsl
rcrb
sbb
insb
negb
xchg
in
push
mov
sub
mov
loop
xchg
push
dec
sbb
jle
aam
dec
add
es
pop
loope
jo
mov
lds
jbe
movsl
orb
lock
adc
mov
sub
and
fwait
pushf
lea
or
mov
push
cmp
or
es
or
adc
cwtl
push
mov
mov
mov
dec
push
divb
inc
jmp
shlb
push
mov
add
mov
mov
mov
sahf
add
jb
cld
and
jb
dec
xor
pop
scas
and
xchg
cmpsl
stc
fmull
push
andl
and
leave
es
and
add
insb
inc
push
push
push
rep
inc
inc
je
aas
dec
dec
inc
rcl
mov
mov
insl
sbb
xchg
add
jnp
je
dec
mov
push
arpl
shll
test
rorb
mov
lods
and
add
les
test
add
push
scas
add
lock
push
inc
xchg
test
movswl
fldt
pop
mov
push
pop
jo
in
jnp
adc
jmp
pop
jle
cmp
shl
fistpll
or
adc
test
cmpl
adc
jg
cs
in
or
add
sbb
pop
add
mov
push
or
jne
lret
adc
or
lahf
decl
xchg
sbb
add
mov
fwait
rcll
inc
or
jne
sbb
push
mov
sub
adc
and
stc
xor
je
add
jne
or
dec
popf
mov
add
jne
subl
cmpl
cmpsb
pop
mov
gs
rcrb
mov
adc
clc
and
add
add
cmp
fstpt
repz
push
stos
push
enter
insb
sbb
mov
xchg
fldlg2
leave
test
stos
xor
xchg
xchg
jo
mov
enter
add
pushf
out
enter
andb
sbb
push
mov
sbb
test
jnp
mov
push
cs
mov
sub
sarb
mov
pop
or
mov
movl
push
insl
mov
ljmp
fldenv
mov
sub
iret
push
or
orl
cmp
sbb
xor
mov
and
xor
sbb
push
add
xchg
xchg
mull
test
loopne
sar
incl
in
mov
mov
xchg
daa
dec
sahf
inc
mov
mov
mov
mov
clc
mov
int3
inc
outsb
and
scas
mov
test
pushf
inc
inc
mov
repnz
test
cltd
popa
mov
insb
int
testb
mov
out
jl
pusha
in
insb
aad
mov
or
outsb
sbb
dec
enter
mov
and
and
adc
pop
cmp
add
pop
mov
mov
sbb
and
adc
mov
add
inc
outsb
out
subb
mov
pusha
cmp
cmp
test
test
mov
cmp
sbb
sbb
test
jo
cmp
test
or
inc
lahf
cwtl
cwtl
mov
mov
in
mov
mov
add
fs
test
nop
nop
xchg
add
sbbl
cmp
dec
data16
and
cmpsl
pushf
mov
dec
inc
inc
mov
mov
cmpb
lods
insb
lds
mov
call
andl
lods
xor
aam
leave
xchg
inc
push
pushf
and
mov
mov
and
dec
jl
js
leave
xorl
int
cmpsl
movsl
add
cmpsl
mov
sbb
inc
mov
shlb
pushf
dec
addr16
inc
daa
mov
lea
jnp
add
add
daa
and
inc
leave
insb
rcrb
xor
sbb
mov
cmpsb
movsb
enter
hlt
mov
fxch
enter
xor
mov
fs
aam
mov
mov
dec
or
cmpsb
cmp
mov
xor
pushf
cmp
test
fs
or
enter
add
sbb
mov
adc
and
ds
popw
add
push
mov
xor
repnz
cmp
add
in
xor
and
leave
inc
xchg
fxch
insb
mov
xor
mov
xchg
movsl
in
pop
movsb
lea
and
mov
sub
xlat
xor
jno
or
mull
jl
rclb
orl
mov
jo
nop
test
mov
enter
test
loop
in
inc
cmpsb
hlt
and
xchg
cmp
hlt
movsl
sbb
inc
dec
loopne
mov
and
daa
and
mov
dec
data16
xchg
xorl
jge
mov
push
je
cmp
fidivs
push
xor
and
js
sbbb
cmp
mov
inc
mov
add
push
loop
rcll
lret
mov
sbbl
mov
je
push
cmpsb
or
movsl
xor
pop
mov
mov
mov
ljmp
movsb
in
movsb
in
push
in
movsb
sbb
imul
cmp
jbe
xor
sbb
mov
in
or
cld
mov
adc
mov
nop
inc
dec
and
rclb
mov
enter
test
pushf
cwtl
dec
xchg
imul
adc
iret
leave
or
int3
mov
pushf
xchg
add
fs
mov
leave
hlt
mov
push
enter
xchg
sbb
lods
test
nop
daa
jns
mov
dec
lcall
inc
popa
js
cltd
or
in
sub
jnp
enter
mov
mov
ss
mov
mov
sbb
mov
or
jl
xor
loopne
xchg
mov
jae
mov
popa
and
iret
hlt
mov
jb
mov
sub
push
ffreep
les
and
sbb
aam
mov
cmp
mov
movsb
inc
inc
scas
int3
enter
or
mov
add
xor
adc
cmp
pop
adc
xor
leave
daa
jne
lods
and
sbb
and
cmp
jns
insb
mov
push
je
js
in
inc
jl
sub
jo
cs
mov
nop
xchg
cmp
xchg
inc
mov
nop
mov
sbb
sub
orl
leave
aam
mov
mov
xchg
pop
mov
and
test
mov
or
mov
cwtl
sbb
setbe
mov
jge
cmp
je
test
clc
fidivrl
jno
je
push
test
inc
jmp
inc
mov
decb
inc
jp
inc
sub
push
push
ljmp
inc
loope
sub
or
add
xor
push
add
mov
add
mov
push
add
dec
add
popa
rcrl
nop
mov
inc
lcall
cmc
inc
fmuls
sahf
mov
mov
add
out
daa
cmpsl
ret
mov
adc
cmp
je
or
mov
inc
cmp
jl
xor
inc
jle
cmp
lret
jge
cmp
sbb
lcall
jge
mov
jo
inc
cmp
jl
cmp
pop
in
lods
push
add
jne
aas
fsub
test
adc
xorb
lea
scas
lods
js
jl
loope
cmp
mov
add
decl
enter
inc
mov
mov
dec
cmp
jle
pop
jg
xchg
push
xchg
movsbl
xchg
mov
cmp
pop
adc
std
jl
cmp
jg
daa
pop
pusha
dec
pop
pop
cmp
lods
add
jbe
aad
call
out
lock
hlt
into
sub
jmp
adc
clc
mov
sub
pusha
push
dec
pop
or
clc
and
xchg
pop
mov
mov
mov
les
jle
mov
add
adc
xchg
lea
mov
jle
cltd
adc
push
mov
dec
dec
shll
dec
movq
lock
out
cmp
divl
jecxz
pusha
nop
dec
popa
call
out
push
jmp
cld
cmp
mov
cmp
jg
or
inc
icebp
ja
fadd
aaa
dec
lea
add
in
in
je
and
push
push
mov
dec
dec
cltd
lock
xchg
cmpsb
out
add
ror
mov
je
jp
mov
or
rcrl
add
and
add
inc
test
fs
mov
add
aas
dec
lods
lods
mov
out
je
jns
negl
add
jo
mov
rclb
add
jnp
dec
fcoms
push
and
pop
mov
add
sbb
testl
xchg
rcrb
sbb
add
pop
sub
clts
out
add
or
mov
mov
pop
add
cmp
add
repnz
pusha
pop
ret
or
cld
je
rorl
pushf
jg
shl
ret
mov
mov
addl
mov
or
inc
mov
in
fstl
cmp
daa
push
enter
mov
scas
push
pop
jo
mov
fmul
test
add
je
inc
jne
je
out
movsb
dec
inc
leave
pop
ret
push
repz
cmp
and
dec
or
pop
push
fistl
lods
lret
mov
decb
xchg
nop
jbe
inc
push
xchg
sub
xchg
mov
sub
sbb
sbb
xchg
lods
xchg
mov
push
test
push
push
test
test
stos
push
dec
and
pop
mov
and
mov
bound
dec
cmpsl
in
push
and
sbb
pop
inc
xchg
and
cmp
adc
cld
fidivl
insb
sbb
fdiv
rorl
adc
inc
dec
mov
dec
push
pop
test
in
rcr
inc
hlt
lds
inc
aad
out
ret
in
cmp
ds
shlb
dec
imul
mov
in
test
call
cmp
or
add
push
cmp
std
add
bound
jns
pusha
or
add
adcl
push
sub
or
or
push
inc
xchg
imull
add
fcompl
inc
pop
repz
dec
loopne
mov
or
je
jle
or
pop
lods
xor
jns
push
jmp
sbb
les
or
and
push
or
mov
cmpsb
rorl
jl
inc
cltd
xchg
cltd
add
and
mov
enter
cmp
add
adc
sbb
and
test
into
mov
cmp
mov
cmpsl
es
ficoms
scas
cmpl
movsl
je
lods
sbb
xor
jae
fmuls
jge
mov
jbe
pop
lock
lock
push
popa
ja
je
lea
adc
ja
movzbl
and
push
iret
in
mov
cmp
push
iret
iret
push
and
scas
sbb
js
dec
out
push
call
cwtl
test
mov
daa
enter
in
std
sbb
sti
mov
add
pop
push
push
out
dec
mov
int
or
adc
mov
add
or
pop
or
mov
push
sbb
mov
pop
in
add
cld
push
fdivl
and
movsb
xor
mov
adc
xchg
test
adc
test
lret
inc
or
inc
pop
xchg
gs
cmp
sub
adc
ret
outsl
loop
in
jecxz
mov
jb
movsl
jns
push
imul
mov
int3
or
lret
loopne
pushl
stos
jno
push
mov
cld
pop
mov
ss
inc
int3
je
adc
or
inc
add
and
mov
and
sbb
clc
insl
punpckhwd
adcl
rcrb
sub
sub
pop
out
pop
icebp
sub
pop
push
push
add
fimuls
adc
push
push
adcl
xchg
jle
pop
mov
scas
ljmp
xchg
inc
mov
loopne
lock
push
dec
cltd
test
dec
add
outsl
xchg
sub
and
inc
cmp
jo
push
or
pop
ret
dec
adcl
add
push
shrl
add
ret
fnstcw
mov
xlat
testb
jne
pop
add
flds
mov
out
jle
pop
mov
pushl
inc
or
jle
pop
pop
pop
or
mov
add
and
sub
sub
enter
and
loope
mov
and
lods
int
cli
mov
add
or
push
sub
mov
and
test
lahf
and
scas
jo
push
cmp
loopne
lock
inc
aas
add
add
pusha
cmp
push
shlb
mov
jl
sbb
lock
clc
mov
push
pop
jae
cmpsb
adc
sub
mov
mov
dec
sub
xor
push
nop
sbb
push
lahf
jle
and
je
adc
adc
cmp
lods
inc
xor
ja
pop
les
shr
jns
jb
mov
jbe
xchg
jnp
in
add
leave
test
jg
add
in
push
popf
xchg
mov
sub
cmp
popa
lock
lods
shll
push
repz
mov
clc
shl
fisubs
cli
gs
xor
sub
je
ret
mov
pop
cmp
lods
and
outsb
inc
pushf
and
add
sbb
adc
inc
cwtl
pop
dec
and
push
mov
enter
inc
movsl
xor
iret
mov
cwtl
or
mov
inc
mov
es
jne
fidivrl
xchg
mov
adc
pop
rorb
cmp
mov
push
cmp
clc
adc
inc
push
pop
in
push
push
mov
xchg
adc
ror
js
add
add
push
push
mov
outsb
lret
or
cmpsb
adc
fwait
test
mov
add
jno
add
call
bound
pusha
xchg
imul
mov
jo
popa
fcomps
mov
dec
inc
xor
cmp
push
or
pop
and
mov
jmp
dec
adc
pop
adc
lret
mov
or
int
mov
cwtl
mov
test
inc
xor
je
push
sbb
movsl
pusha
and
push
mov
dec
push
sbb
xor
sbb
or
cld
mov
orl
mov
xchg
inc
cs
cmp
xchg
inc
scas
xchg
mov
pushf
scas
xchg
inc
xchg
inc
xchg
pop
and
push
je
pop
dec
cs
pop
jmp
push
push
push
add
jbe
add
mov
inc
adc
pop
inc
sbb
dec
cmc
es
pusha
push
lea
fisubrs
jg
and
outsl
add
xchg
std
mov
sub
xorb
fldl
sub
in
clc
hlt
je
cmp
jne
pop
mov
mov
mov
jno
mov
xor
and
loopne
sub
jbe
adc
cltd
pushl
push
mov
out
xor
pop
adc
sbb
hlt
jb
jmp
cmp
out
mov
loope
dec
cmp
cwtl
push
push
shlb
imul
test
adc
ret
xor
dec
adc
xor
sbb
xchg
and
xchg
stos
jnp
pop
je
loopne
xchg
fistps
or
je
xor
sbb
movsl
adc
mov
push
loopne
sbb
leave
sarb
lods
clc
je
sub
dec
pcmpeqw
sahf
add
dec
jl
cld
cld
push
fwait
pop
jmp
aas
or
push
outsl
imul
pop
ja
je
sub
das
jle
idivl
jne
ret
mov
or
push
jle
push
pop
sub
pop
je
or
je
sub
mov
stc
jl
enter
test
jmp
test
stos
sbb
pushf
adc
mov
mov
or
xor
js
clc
xchg
mov
popf
xor
mov
mov
rolb
mov
sub
dec
push
lahf
sbb
jns
pop
adc
xor
int
mov
pop
push
or
pop
mov
push
mov
pop
imul
mov
movb
pop
sbb
sub
lea
xor
test
je
clc
cmp
add
push
movsb
cmp
xchg
dec
xor
xchg
ret
mov
iret
je
sub
xlat
adc
nop
lock
je
and
mov
add
in
ds
dec
ret
ja
push
mov
or
mov
cmp
mov
jg
jbe,pt
lea
push
and
add
cmp
jb
jmp
push
ret
cmp
lds
cwtl
rorb
insb
mov
test
mov
int3
adcb
es
adc
inc
push
jge
xchg
nop
xchg
fsubs
cmp
jg
mov
repz
mov
push
or
lock
rcrl
loop
adc
pop
lea
push
shr
inc
std
pop
pop
aas
mov
xchg
out
movzwl
add
inc
inc
pushl
pop
jmp
and
int3
add
mov
cmp
cmp
jmp
rol
mov
or
shl
ret
inc
and
add
pop
dec
ja
mov
sbb
xor
adc
data16
pop
and
xor
sub
xor
mov
push
cmpl
pop
sbb
mov
lret
aaa
jno
mov
mov
mov
push
into
jmp
xorl
cmc
or
cmp
fsubr
fadds
or
jge
mov
jge
jge
or
fwait
mov
icebp
pop
sarb
pop
pop
fwait
push
xor
out
jne
jle
mov
out
lods
inc
cmp
jl
pop
orl
mov
adc
push
push
jno
daa
nop
adc
popf
scas
pop
les
stc
push
pushf
push
das
jecxz
incl
addl
xorl
dec
pop
jne
xor
mov
int3
push
lods
mov
call
mov
cmp
inc
mov
xor
mov
pushf
jne
insl
fdivr
dec
insb
mov
imul
cmp
pop
mov
mov
or
cmp
jmp
push
xchg
inc
shlb
xchg
sub
xchg
icebp
jge
jle
or
mov
cmp
cmpsb
jl
jmp
dec
insl
or
pop
pop
dec
sub
mov
xchg
cld
pop
or
dec
jne
inc
sub
xor
movsl
or
cmp
jg
mov
inc
and
test
test
mov
xchg
push
sub
leave
pop
loopne
fimull
xchg
jl
push
sub
pusha
inc
jne
sarl
cltd
push
dec
clc
add
cmp
add
push
dec
adc
xchg
sub
popf
mov
fcoms
sbb
and
mov
clc
xor
pop
xor
repz
adc
and
je
add
dec
mov
pop
paddq
lods
jno
push
stc
les
je
xchg
or
add
sti
in
or
sub
int3
sub
push
xchg
cmpsl
fldl
push
lods
fisttps
cmpsb
adc
or
ret
sarl
fstpt
sub
dec
and
jge
inc
adc
pop
mov
adc
aas
jmp
and
insl
ret
xor
push
in
rclb
daa
sarl
adc
int
mov
add
add
add
mov
jecxz
pop
sti
nopl
xor
icebp
sub
or
fld
mov
cmp
test
lret
sbb
mov
and
add
push
jns
jo
add
pop
dec
push
hlt
insb
push
neg
das
imul
and
jnp
aad
add
shlb
faddl
mov
cmp
in
inc
pop
or
xor
adc
mov
sub
aam
jne
or
push
mov
mov
xor
mov
push
and
repnz
inc
std
gs
or
xor
pop
rol
in
pop
stos
push
push
dec
sub
ja
loopne
add
xchg
jp
inc
cmp
aaa
cld
leave
dec
ret
imul
lds
popf
sbb
dec
xor
dec
aam
dec
pop
enter
shl
bound
mov
sti
pop
enter
in
sbb
dec
and
fucomi
cwtl
add
adc
popf
sub
mov
gs
push
mov
ja
aaa
lods
pop
sub
loopne
mov
push
outsb
push
cmp
jne
mov
sbb
aaa
scas
or
mov
je
sbb
lahf
add
and
mov
gs
testb
adc
pop
and
gs
jne
xchg
adcb
inc
pushf
pusha
or
inc
ror
loopne
and
and
imul
jg
sbb
je
cmp
pop
mov
push
in
inc
sbb
or
push
add
movsl
cmp
lods
adc
movb
add
mov
test
iret
test
cmp
push
jb
push
add
push
mov
pop
inc
pusha
andb
icebp
mov
js
imul
push
inc
jno
in
add
cmp
mov
or
nop
add
dec
and
lods
add
testl
test
add
cmp
sbb
add
mov
ja
mov
add
or
inc
adc
mov
popa
xor
enter
adc
push
stc
fs
in
std
aaa
fldt
mov
push
or
test
mov
sbb
scas
xchg
add
je
popw
es
rol
and
add
inc
jns
adc
ja
sbb
xor
pop
jb
xchg
jmp
sbb
push
xchg
jmp
xor
adc
sub
xor
mov
mov
jnp
mov
sub
xchg
addr16
leave
sub
mov
aas
cmp
pop
mov
test
push
pushf
pop
push
sbb
xchg
testb
lds
or
dec
cmp
leave
xor
adc
push
mov
fcoms
xchg
sarb
data16
fdivrs
call
push
int
mov
fcoms
insl
sub
bound
loope
xor
jnp
or
mov
cmpsl
cmpl
cmp
idivb
mov
or
ja
lock
or
js
cmp
je
mov
out
pop
imul
sub
adc
push
ret
push
std
mov
sbb
insb
push
and
ss
sub
sbb
jno
pushf
adc
add
sbb
push
testb
xchg
and
xor
push
mov
sbb
int3
adc
outsl
sub
jo
std
popa
mov
sbb
jno
jae
mov
pop
push
cmp
jmp
jge
lock
sahf
cmp
lds
std
iret
mov
test
mov
ljmp
adc
dec
cld
push
clc
adc
out
push
jl
or
xchg
push
hlt
je
sub
sub
pop
adc
adc
push
and
lcall
cmp
xchg
inc
cmpsb
in
inc
les
pop
rolb
lahf
push
pop
mov
ror
inc
mov
add
in
xor
jo,pt
pusha
add
les
enter
dec
je
add
shrb
es
nop/reserved
lock
imul
out
test
idivl
movsl
mov
stc
int3
push
add
push
jl,pn
jno
dec
adc
insb
lock
jne
lods
call
sbbb
or
cld
lds
sbb
rcr
ror
jae
das
add
xor
leave
mov
xchg
pop
loop
xchg
adc
mov
imul
xor
mov
mov
inc
pop
repz
ficomps
int3
test
inc
imul
mov
push
xor
xchg
lock
mov
dec
jne
jecxz
xchg
aas
mov
push
inc
fists
shrl
add
jo
insl
sub
lea
sub
mov
inc
jg
aaa
imul
add
mov
xchg
lock
push
push
fbld
push
push
mov
scas
or
mov
mov
lahf
mov
hlt
sarb
cltd
cmp
dec
cmp
andb
push
cwtl
pop
mov
cmc
xchg
and
pushl
sti
adc
test
stc
dec
and
xchg
jecxz
por
sub
je
lock
popa
bound
into
hlt
movl
fistpll
sub
inc
in
push
pop
divb
and
xchg
and
rol
inc
call
jbe
pop
pop
cltd
in
xor
cld
sbb
inc
daa
loopne
out
sti
hlt
xor
mov
outsb
xchg
mov
jge
sbb
push
pop
push
or
int
inc
push
push
into
fisttpll
dec
mov
dec
ljmp
mov
aaa
addb
mov
pop
fbld
pop
jl
mov
lcall
lcall
pusha
test
aas
cmc
std
mov
lea
es
inc
cmp
jne
movsbl
mov
movb
not
sub
add
lret
popf
lock
je
clc
adc
pop
loopne
out
cmpb
je
cmp
jae
repnz
imul
and
aad
ds
adc
inc
gs
repnz
jns
adc
cli
dec
push
pop
mov
out
sub
pop
push
lret
push
repnz
jg
jo
sub
pop
enter
adc
int3
cmpl
adc
adc
push
mov
mov
add
cmp
cmp
das
push
scas
fcoms
push
dec
inc
push
push
and
mov
push
int3
push
mov
movl
pop
xchg
dec
sbb
mull
lea
fld
dec
das
mov
inc
push
mov
and
sahf
mov
pop
sarl
test
mov
shrl
mov
iret
adc
and
push
pop
or
sub
jnp
int
sub
ret
adc
adcb
xor
jmp
dec
and
mov
daa
add
inc
roll
mov
mov
pop
cmp
loopne
dec
jl
and
and
pop
jle
movb
inc
or
inc
push
rcll
testl
or
movsl
sub
and
movsl
cmpsb
sbb
loope
xor
mov
test
sbbb
cmp
je
sbb
jmp
mov
jl
jmp
pop
or
or
mov
xor
mov
mov
pop
ja
or
shl
xor
sbb
es
xor
jle
clc
pop
xchg
out
cmpsb
dec
ja
push
in
add
mov
cmc
or
inc
pop
lds
punpckhbw
and
xor
xchg
cmp
or
gs
insb
call
xor
test
xchg
lahf
lods
enter
sub
xor
jmp
shr
xchg
sbb
mov
cmp
adc
jmp
xchg
ret
movsb
cmovl
xor
sahf
cmp
ret
adc
in
stos
cld
test
int
mov
fadd
sarb
dec
lods
add
mov
arpl
push
dec
xchg
inc
mov
fs
or
clc
xchg
cmp
xor
popa
pop
jne
clc
out
adc
movsb
add
adc
xor
lret
ds
dec
mov
insb
and
sbb
or
xchg
daa
jl
outsl
repz
cmpsb
and
inc
or
mov
repz
pop
loopne
aas
inc
lods
clc
repz
fimuls
xchg
clc
adc
les
jns
cld
push
imul
rep
xor
jno
cld
mov
repnz
add
test
xor
xchg
lds
sbb
add
cmc
sub
loop
dec
add
stc
gs
js
cld
cmp
ss
sub
je
lea
sbb
cmpps
lea
adc
loop
sub
jge
push
lea
ficompl
inc
mov
push
lea
cmpb
je
mov
mov
cmc
or
push
push
pop
enter
into
std
cmp
fmuls
lcall
sbb
mov
push
cmp
sub
cmp
ret
dec
fistl
dec
ds
cld
sti
add
or
xlat
hlt
sti
xor
and
add
inc
adc
jno
pusha
loop
imul
inc
movl
enter
cld
jo
inc
cmp
and
xchg
pusha
enter
dec
and
sarb
lea
mov
cmp
fimuls
aas
loopne
test
jge
cmp
les
enter
and
call
sbb
out
jo
adc
xor
sub
rorb
orb
es
ds
mov
cmp
sbb
cwtl
aam
jo
mov
sub
mov
inc
fcomp
testb
lea
mov
pop
xchg
stc
roll
rclb
push
add
mov
push
hlt
xor
outsb
and
repnz
fdivl
jno
add
dec
and
hlt
push
pushl
hlt
scas
inc
push
sti
sbb
shll
clc
mov
outsl
jne
das
addl
sub
out
popa
sbb
inc
pop
pop
mov
jg
and
push
inc
bound
sbb
pop
addr16
pop
cmp
mov
sbb
adc
test
or
add
cmp
and
mov
sbb
xor
add
xchg
xchg
sub
push
push
push
xchg
mov
adc
imul
adc
mov
xchg
mov
ljmp
xchg
addr16
add
dec
sti
or
leave
add
sbb
xor
inc
nop
popa
jg
jle
push
dec
add
mov
fmuls
jecxz
andl
mov
int3
xchg
pusha
and
in
test
push
addb
add
push
movsb
ret
iret
or
outsl
lods
pusha
shll
push
xor
inc
push
test
dec
push
out
movsl
inc
sub
pop
dec
sbb
mov
test
loop
clc
mov
inc
jl
rorl
cmp
stos
lds
call
roll
or
out
jl
leave
clc
cli
lock
hlt
cli
cmp
lock
push
add
mov
call
cs
in
mov
fldenv
fsub
inc
sahf
pop
jl
aam
inc
inc
cs
das
fs
mov
nop
out
repnz
test
add
lret
cli
push
add
mov
push
dec
push
mov
mov
jo
mov
pusha
add
push
dec
cmp
mov
sub
adc
mov
or
clc
stc
and
in
stc
in
fsubl
xchg
cmp
punpckhbw
enter
cmp
push
push
mov
pop
add
push
test
repz
iret
mov
dec
jl
decl
mov
aad
repz
dec
pop
push
leave
dec
cmp
sbb
out
in
sub
push
xchg
or
pop
pop
or
cltd
fdivr
clc
sub
in
sbb
nop
iret
int3
dec
xchg
xchg
enter
imul
test
jns
clc
dec
enter
mov
sbb
das
mov
inc
ret
inc
cmp
sbb
sub
cwtl
clc
je
mov
mov
mov
rorb
adc
out
sbb
insb
ljmp
sub
pusha
popf
nop
xchg
or
pop
mov
pop
repnz
dec
pop
xor
ds
sub
jns
and
inc
cmp
inc
inc
lds
test
cs
and
cs
and
pop
enter
inc
adc
enter
or
and
out
test
sub
or
cltd
nop
idivl
xchg
mov
je
mov
fdivl
and
or
aam
inc
int3
lahf
mov
divl
pop
push
dec
lods
imull
test
xchg
sbb
ret
xor
adc
lea
sbb
insl
inc
jb
inc
push
push
repz
and
xor
or
inc
mov
mov
mov
test
jns
enter
idivb
sub
and
and
or
adc
cmp
jb
add
xor
and
and
sahf
cmp
or
pop
cmp
jne
cmc
notb
call
sbb
jno
stc
adc
adc
scas
push
flds
and
mov
ljmp
jb
lods
shll
and
jp
in
inc
dec
jne
or
and
sub
dec
cwtl
pop
xor
test
xchg
add
enter
xor
pop
sbb
inc
mov
es
xchg
xchg
mov
xor
nop
jl
in
sub
or
nop
inc
push
sub
or
in
add
es
jmp
inc
push
jb
inc
pop
xchg
jl
mov
sbb
ds
cmp
xor
nop
or
in
sub
nop
inc
cs
enter
in
sbb
enter
adc
adc
sbbl
cs
or
or
dec
enter
cld
cmc
adc
jns
xor
sub
or
sub
insl
or
and
in
test
sub
aam
mov
enter
inc
and
mov
sbb
test
add
arpl
sbbl
cmp
mov
adc
stc
test
repz
stos
xor
rol
xor
pop
pop
aas
push
mov
test
addb
fs
fdivp
je
sbb
mov
nop
std
cmp
int3
add
dec
outsb
dec
and
in
leave
adc
hlt
push
stc
cmp
pop
sti
push
xchg
push
jle
test
ret
lds
pop
leave
test
hlt
outsb
je
xor
hlt
cmp
xor
nop
adc
sbb
adc
hlt
push
xchg
pop
out
pop
es
mov
or
sbb
orl
sbb
and
sub
sbb
outsl
pushf
cmp
nop
mov
push
movsb
or
dec
jns
add
jecxz
mov
xchg
add
sets
enter
repz
test
repz
mov
mov
and
cmp
pop
pop
lods
test
ret
pop
jno
addb
movsb
loopne
or
aam
adc
lock
cmpsl
xchg
pop
adc
aaa
and
jo
int3
add
xchg
das
push
or
xchg
sbb
dec
push
adc
iret
inc
xor
add
cmp
loope
popf
movsb
pushf
or
and
or
add
sbb
test
xchg
xlat
stos
mov
adc
movsl
xchg
sub
int
dec
mov
lea
push
decl
or
cmpsl
sub
jne
adc
sti
inc
cmp
pop
je
insl
jmp
sub
ss
frstor
jle
daa
mov
pop
push
fidivs
xor
cmpsb
cltd
xor
sbbl
inc
push
fdivs
rclb
jg
pop
cmp
and
sbbl
sbb
rorl
cmp
and
cld
and
loop
incl
and
sub
sbb
je
or
xchg
or
in
and
test
pop
and
xor
fstl
sbbl
dec
nop
or
jns
push
inc
fists
inc
cmp
inc
push
mov
enter
sub
and
and
in
test
enter
nop
inc
cs
aam
xor
test
and
or
icebp
hlt
sbb
pusha
sbb
adc
mov
push
mov
sbb
jb
inc
pop
pop
fmuls
pop
enter
push
int3
or
in
leave
rcrb
mov
leave
gs
js
rcr
mov
dec
or
mov
sub
ja
mov
enter
inc
cmp
nop
sbbl
or
in
test
and
das
mov
in
or
jp
cmpb
push
xor
test
xchg
pop
push
or
sub
push
xor
or
sbb
add
sbb
fimuls
or
sub
pushf
mov
enter
xor
and
inc
dec
pop
int3
add
or
sbb
das
lds
or
add
xor
or
cmc
dec
xchg
and
inc
and
push
and
ja
jl
mov
xor
sbb
or
and
pushw
repz
sbb
and
xchg
les
add
mov
mov
sub
inc
inc
outsl
daa
popa
daa
movl
xor
xor
das
sbb
sbb
sub
or
and
enter
adc
or
das
mov
push
popf
nop
loope
pop
and
orl
dec
cmp
add
cli
mov
mov
rorl
mov
cmp
lahf
push
push
mov
mov
sub
dec
push
or
or
js
xchg
cmpb
inc
mov
inc
push
push
inc
adcb
sbb
lods
cltd
pop
or
arpl
int3
das
popf
out
stos
loope
pusha
dec
shrb
stos
xor
inc
adc
fidivl
popf
in
mov
mov
lcall
jns
inc
cmc
and
daa
xor
inc
pop
sbb
push
push
push
cmp
push
outsl
cmp
or
jmp
sti
loop
dec
inc
push
mov
pop
fsts
imul
mov
xchg
inc
dec
lea
pop
pushf
call
lahf
mov
sahf
push
adc
dec
add
jae
cmp
out
in
and
push
and
jge
out
cltd
sbb
sub
sbb
mov
add
popa
inc
rcll
repz
push
dec
out
adc
sarb
mov
add
cwtl
jns
sub
jo
sbb
ja
dec
push
sub
popf
inc
dec
and
inc
fnstsw
out
outsl
or
jp
or
ja
out
jb
xchg
je
adc
or
cmp
cvttps2pi
repz
adc
and
int
mov
sub
ret
in
out
scas
adc
lcall
pushf
mov
adc
fs
pop
jle
pop
daa
add
pop
cld
jno
jg
pop
add
pop
adc
stc
xor
xchg
mov
inc
sbb
mov
orb
xor
jl
jnp
dec
mov
movsb
mov
jbe
mov
subl
push
addb
and
out
add
jns
add
pusha
cli
sub
push
adc
or
and
or
cld
dec
pop
cmpsl
push
aas
push
dec
ljmp
mov
mov
mov
push
js
dec
inc
cmpsb
in
jae
cmova
pop
nop
xor
or
in
mov
lock
subb
inc
or
aad
sub
mov
sub
sub
sahf
or
js
cmp
sbb
clc
add
and
push
pop
adc
shll
mov
jae
and
repz
xorb
orl
lret
pop
inc
inc
jg
pusha
inc
push
mov
sbb
out
jne
adc
sbb
mov
jmp
mov
enter
leave
cmp
mov
adc
pop
sar
inc
adc
jecxz
loopne
add
and
aas
and
les
lret
dec
popa
js
loope
add
loop
into
sub
clc
jmp
loopne
or
cpuid
adc
jae
in
xor
or
inc
leave
adc
sbb
jne
xor
fistpll
cmpsb
and
add
outsb
inc
dec
mov
add
push
push
sbb
add
xor
inc
mov
cli
mov
call
das
jle
outsl
ja
add
movb
ss
cmp
inc
pop
cmp
das
jmp
mov
jl
cwtl
sub
mov
loope
lret
insb
nop
dec
xchg
je
pushf
adc
mov
inc
rcrl
loope
test
or
pop
les
or
jne
push
jmp
mov
sahf
pop
adc
jo
fs
mov
lea
jnp
or
push
sbb
fwait
add
or
stc
sbb
sti
fs
cmp
cmp
dec
mov
add
movsl
pop
cmp
mov
push
sbb
push
push
mov
adc
pop
push
dec
stc
hlt
push
inc
xor
xorl
jmp
in
add
mov
nop
aad
mov
sbb
inc
cmp
lea
push
in
jmp
push
add
outsl
das
mov
cmpb
dec
in
or
imul
outsl
sub
or
popa
sub
pusha
adc
sub
adc
dec
cs
and
push
repz
sub
jmp
cli
std
push
xorl
cld
pop
sbb
das
xor
push
outsl
pop
sub
fdivr
or
sti
jnp
ds
mov
leave
stos
lret
sahf
cld
jo
nop
out
fs
aaa
test
rcll
push
aam
loopne
pop
push
inc
pop
cmp
push
or
je
sbb
jno
inc
in
sub
in
xchg
roll
orb
cmp
loopne
out
dec
fadds
shr
fcomps
jns
loopne
repz
pop
mov
inc
mov
jp
push
pop
icebp
sub
sbb
and
cmp
and
fsubr
jb
call
test
jmp
out
pop
loop
and
lock
imul
clc
xor
mov
addb
sub
jo
ficoml
push
add
xlat
inc
xchg
or
jg
jne
das
in
mov
cmp
loop
loopne
test
push
lock
adc
repnz
nop
inc
push
cmp
jmp
adc
sub
jno
jb
cmp
mov
mov
xchg
outsl
xchg
inc
lods
bnd
sub
pop
push
mov
sub
in
push
les
or
out
mov
pusha
adcb
pop
pusha
pop
mov
int3
and
xchg
mov
rorl
mov
xorb
push
jns
in
inc
or
out
in
mov
cmp
and
adc
sub
mov
not
and
leave
imul
pusha
xor
fidivrs
loop
jecxz
jecxz
das
in
sbb
push
inc
in
ret
sub
int
or
jb
inc
sahf
in
sbb
ljmp
push
or
push
sbb
loop
nop
loop
gs
mov
xor
ljmp
cmp
jb
and
in
push
jmp
loop
push
pushf
jmp
aas
push
ljmp
jg
adc
add
hlt
push
ljmp
pop
lods
je
mov
jp
pop
pushf
ljmp
jmp
shr
push
enter
aad
jmp
pusha
repnz
lahf
ljmp
push
movsb
inc
cmp
std
sub
sbb
test
notl
xor
mov
dec
mov
dec
pop
clc
cli
push
push
mov
and
xchg
or
and
mov
cmp
ljmp
push
push
les
sub
mov
sbb
mov
cmp
cmp
lods
insb
call
int
pop
xlat
mov
lods
xorb
gs
xchg
xor
and
decl
in
popf
mov
inc
jmp
in
cmp
mov
jmp
int3
in
loope
ret
adc
push
addr16
scas
sbb
stc
and
cmp
out
jb
imul
and
aam
xchg
dec
adc
mov
adc
scas
dec
xor
xor
flds
sahf
pusha
sbb
pop
or
int
aaa
icebp
and
loope
into
cwtl
out
imul
xor
mov
xchg
xchg
js
and
shlb
sti
push
loope
push
loope
dec
xchg
sub
cltd
mov
adc
jp
jne
sub
or
add
jns
or
in
xor
test
push
popa
mov
aad
jns
sbb
insb
jecxz
repnz
mov
test
pusha
ret
dec
fiadds
cmp
and
call
lds
in
jno
push
sbb
test
inc
dec
in
and
js
push
pop
xchg
push
inc
mov
cmp
les
xor
data16
inc
call
popa
das
cmp
jle
sub
pop
adc
inc
shlb
xchg
sbb
adc
inc
xor
mov
dec
push
call
mov
push
mov
js
js
daa
ja
cld
out
push
jle
xchg
movl
inc
addl
or
or
inc
and
pop
or
call
or
stc
push
icebp
or
repnz
push
pop
jge
and
aas
mov
inc
lcall
outsl
pop
shl
addb
or
jo
jno
jmp
aad
outsb
or
nop
aaa
sti
ret
and
sbb
aam
nop
int3
fs
shll
inc
mov
test
stos
adc
adc
sub
ret
imul
arpl
outsl
adc
lret
das
pop
xor
mov
addl
test
add
push
test
mov
xchg
inc
push
jmp
inc
fisubl
mov
xchg
push
xchg
sbb
stos
sbb
adcb
xor
sub
or
add
out
popf
sbb
das
mov
cmc
and
inc
icebp
push
adc
je
push
imul
push
pop
maxps
or
fsub
xor
inc
xor
test
test
loope
mov
mov
jl
push
push
repz
in
popa
xor
adc
cwtl
je
outsb
push
and
and
nop
xor
pop
orl
insb
or
mov
in
sub
or
pop
das
dec
mov
ret
cmp
cmp
xorb
cmc
rorl
xchg
in
jne
add
or
dec
xchg
xchg
cwtl
and
mov
lods
sub
sub
adc
aas
jne
insb
jmp
adc
in
sub
dec
rclb
sub
or
add
imul
cmp
xor
insb
call
arpl
pop
pop
sub
cs
fnstcw
in
ja
jne
enter
jns
in
in
xor
shrl
or
pop
loope,pn
sub
je
sbb
popa
xor
inc
xchg
inc
sbb
push
sub
fs
adc
and
outsb
or
mov
push
push
lock
cld
in
lock
mov
mov
pop
pop
xchg
xchg
push
ret
xor
or
aam
pop
sub
jg
or
sub
inc
shrl
cmp
daa
or
cmc
sbb
movsb
mov
jg
push
repnz
nop
xor
fcoms
rorl
loope
mov
dec
push
and
into
in
mov
lahf
push
sbb
mov
pop
sbb
loopne
pavgw
loopne
or
pop
shlb
mov
out
insl
out
inc
je
cmp
add
sub
leave
dec
lea
out
call
xchg
pop
leave
gs
adc
pop
jns
lahf
mov
js
sub
aad
call
js
mov
out
call
insb
ret
sbb
fs
or
push
dec
push
adc
xchg
dec
imul
inc
jecxz
xchg
push
ja
pop
or
and
and
xor
inc
jp
inc
add
sub
stos
push
lock
enter
push
add
shrb
loop
or
inc
or
dec
jecxz
mov
mov
push
jmp
lds
adc
mov
sbb
xor
add
test
jle
pop
mov
pushl
imul
sbb
or
add
add
adc
push
inc
mov
into
push
xchg
arpl
lea
adc
bound
lods
push
sbb
in
dec
cli
fsubs
les
mov
mov
loopne
mov
insb
dec
pop
and
and
sub
hlt
aam
push
and
into
leave
mov
dec
jno
push
add
js
inc
inc
inc
xchg
add
sbb
bound
cwtl
xor
or
loopne
mov
dec
jl
mov
arpl
fldenv
mov
mov
in
hlt
icebp
and
adc
push
inc
lea
sbb
aas
lea
jmp
mov
mov
xchg
arpl
pop
xchg
pop
je
sub
enter
loopne
clc
fcmovbe
or
and
pop
leave
or
cmpsb
cltd
adc
cmc
gs
jnp
push
mov
or
push
xor
pop
test
xor
jno
test
mov
pop
pmaxsw
mov
mov
out
outsl
or
add
cmp
jne
xor
fwait
jmp
or
mov
out
mov
mov
dec
cltd
idivl
add
xor
mov
sbb
xchg
or
mov
outsl
xchg
jo
pop
inc
je
mov
and
lea
push
or
cmp
mov
xchg
mov
pop
inc
enter
sbb
or
test
add
sub
ret
push
jne
sbb
inc
mov
inc
cmp
mov
flds
cld
or
mov
or
and
push
inc
jno
pop
add
sbb
enter
push
ljmp
or
or
sub
add
je
jmp
sub
dec
pop
add
sbb
jbe
xor
dec
and
xchg
ja
loopne
clc
in
sub
iret
inc
fdivr
add
adc
jbe
pop
jne
inc
jb
or
arpl
loopne
je
jne
fnstcw
inc
cmpl
cmp
arpl
jmp
xor
push
lret
mov
push
insl
lods
int
mov
arpl
add
cmpsl
xchg
xchg
dec
add
xchg
pop
mov
jecxz
inc
and
dec
outsl
sub
loopne
cwtl
or
mov
out
xchg
daa
and
enter
xor
mov
cmp
xchg
inc
or
jns
in
adc
mov
jmp
rclb
jmp
mov
xor
adc
movsb
repnz
add
js
lcall
add
aaa
push
cmp
sbb
add
enter
icebp
cs
loop
out
add
add
mov
inc
mov
call
in
repnz
push
add
cmp
or
add
test
jmp
xchg
bnd
popa
das
or
jne
shl
dec
inc
inc
xchg
outsl
sub
inc
js
cmpsb
and
push
lret
sbb
aad
add
cwtl
loope
xchg
popa
sbb
rclb
imul
push
add
cmc
insl
cmp
and
in
push
adc
enter
dec
in
inc
cmp
mov
add
nop
pop
dec
and
mov
dec
cmp
andl
movsb
add
sub
or
pop
sub
add
ljmp
mov
ds
mov
sbb
shr
int3
out
or
loopne
push
mov
xor
fidivs
xchg
push
adc
or
incb
pop
leave
jmp
xor
aad
push
sbbb
dec
lcall
or
lret
or
rcr
dec
aad
pop
shlb
int
mov
cmp
inc
push
popa
jg
iret
scas
xor
inc
rolb
mov
or
add
jae
enter
fiaddl
dec
dec
adc
push
pop
mov
adc
push
cmp
aas
imul
adc
pop
jb
jb
sub
lods
std
push
add
cmp
push
and
jo
stos
mov
in
add
jecxz
popf
add
sbb
ret
or
and
fimuls
cmovs
push
jb
nop
pop
adc
test
std
jl
lret
pop
xor
add
or
psllw
sub
fsubl
add
and
jg
adc
mov
mov
sub
add
aad
es
mov
dec
inc
sub
stos
scas
incb
mov
or
test
sub
sbb
sub
jl
xchg
dec
fwait
xchg
xchg
popf
xor
mov
enter
in
sub
testb
pop
jae
gs
sbb
imulb
sahf
push
testb
lcall
inc
pop
ret
sub
cmovno
js
pop
adc
jb
cmp
sti
in
jo
dec
pop
les
sbb
popf
inc
inc
ret
loop
call
mov
add
xchg
fcompl
push
xor
adc
add
in
ljmp
fisubs
faddl
add
jnp
dec
mov
xor
int3
fmuls
mov
and
xor
pop
lret
mov
sbb
and
jb
aad
test
and
xor
inc
add
mov
push
sahf
insl
or
adc
sbb
cmp
mov
loope
fwait
add
dec
mov
dec
pusha
cld
inc
ret
cld
and
lds
test
push
arpl
pop
mov
and
fmull
call
insl
insb
sti
dec
in
stc
ret
in
int3
or
pop
out
fwait
arpl
jmp
mov
std
adc
sbb
xchg
dec
int3
jmp
and
cld
jp
pop
dec
and
add
cmp
cmp
pushf
bound
mov
aam
enter
and
cltd
mov
sbb
xchg
mov
inc
xchg
cmp
and
fidivl
push
cmp
adc
push
outsb
loope
dec
sub
ljmp
cmp
sbb
cmp
clc
add
das
cmp
pop
lea
sbb
pop
add
stos
add
mov
push
xchg
adc
sbb
add
movsb
nop
int
push
mov
adc
adcl
pusha
pop
je
lfs
ja
test
adc
cmpsl
jne
movsl
cmpb
cmp
daa
cld
fnstenv
and
push
cmp
cmp
pop
mov
inc
add
test
in
subl
out
fldenv
add
push
inc
sbb
fldlg2
push
dec
es
ljmp
xor
jns
add
inc
outsb
daa
movsb
push
push
push
cmpsl
push
inc
xor
fildl
insb
stc
mov
or
pop
jb
fnstenv
sub
xchg
push
and
or
mov
sbb
js
inc
mov
rclb
and
adc
add
jo
test
movsb
popf
fnstenv
fadds
add
sub
pop
or
sub
xor
add
xlat
fsubrl
mov
dec
push
push
pusha
repnz
inc
pop
aaa
lea
push
mov
add
jns
push
push
push
xor
and
xchg
jns
add
add
add
jno
repnz
shl
mov
shlb
subl
ficoms
fmull
jl
cmp
outsb
sbb
or
push
fnstcw
aam
or
es
fcoms
xor
and
pop
add
xchg
and
xchg
pop
fwait
stc
cmp
cmp
nopl
sbb
cmp
jne
es
mov
sub
loop
add
orl
mov
dec
mov
xor
lret
inc
lret
push
dec
push
push
rclb
pop
add
sti
inc
pop
sbb
nop
addr16
adcl
lcall
popf
decl
sub
sub
push
jmp
mov
or
sarl
add
mov
popa
pop
and
ds
xchg
loopne
in
dec
pop
adc
mov
test
or
pop
sbb
int3
lea
mov
mov
test
xor
loope
inc
push
cmp
push
push
rol
push
dec
repnz
dec
sbb
jmp
ret
leave
or
push
and
cmp
push
xchg
jne
test
jge
mov
or
cmp
adc
cmp
sub
ret
xchg
xor
ficoml
sub
mov
add
dec
fdivrs
js
or
movl
les
adc
jl
and
pushl
push
iret
sbb
xor
adc
push
repz
pop
jns
popf
push
mov
jge
add
pop
je
adc
push
sbb
enter
shrb
or
xorb
push
in
xor
inc
push
xor
mov
push
dec
dec
mov
je
or
inc
jo
je
mov
cwtl
jge
test
add
adc
movlps
out
or
push
add
fcoms
das
push
add
hlt
std
push
pop
ja
inc
sbb
sub
inc
dec
xchg
add
hlt
dec
movb
jne
bound
inc
jmp
iret
or
sbb
add
adc
std
bound
dec
sar
mov
cmpsb
or
cmp
jb
adc
in
add
stc
hlt
xor
outsl
fsubr
mov
push
and
insl
sub
int3
cmp
mov
dec
addl
scas
push
xor
lock
jbe
adc
test
sub
inc
ljmp
testb
or
popa
je
or
or
lock
cmp
xor
or
inc
push
movl
or
clc
ret
andl
out
mov
sub
fadd
sub
not
repnz
inc
sbb
push
and
jmp
aam
push
adc
les
mov
dec
mov
add
fnstsw
js
les
mov
popa
xchg
add
or
mov
pcmpeqb
lods
add
outsb
push
cwtl
mov
testl
inc
idivl
jnp
mov
inc
cmp
mov
jmp
push
push
cld
pop
pop
sbb
push
inc
ret
push
pusha
mov
cmp
xchg
xchg
mov
inc
insl
ds
adc
mov
cld
and
mov
add
cmp
bound
gs
cld
mov
mov
faddl
clc
addb
mov
mov
gs
hlt
push
rorl
imul
adc
in
xchg
mov
shlb
shlb
or
dec
add
std
decb
enter
sbb
sbb
lret
and
movl
lds
mov
loope
add
inc
packsswb
adc
or
call
fsubr
ja
aam
xchg
popf
jmp
pushl
pop
imul
push
sbb
mov
jne
jl
inc
adc
jl
pop
lret
sub
adc
inc
pop
sbb
movsb
jno
jge
add
inc
outsl
xchg
adc
or
aad
ss
lea
aad
xor
push
pop
testb
inc
dec
jmp
mov
daa
add
inc
mov
lock
out
je
test
fldt
popf
and
stos
pop
and
out
mov
pop
adc
test
xchg
push
mov
or
mov
clc
or
in
std
mov
out
pop
cli
js
icebp
dec
popf
sub
mov
push
push
andl
fsubs
mov
popa
ffreep
loopne
xor
xor
loopne
jmp
in
in
cmp
inc
xor
xchg
movsl
push
add
mov
add
cmp
or
jb
shl
push
push
add
add
sbb
cwtl
mov
sbb
or
dec
mov
hlt
or
icebp
je
adc
mov
xor
cltd
shr
sti
imul
enter
sbb
enter
push
mov
dec
movsb
inc
cwtl
icebp
inc
fldz
ja
and
mov
mov
lahf
enter
inc
mov
push
inc
xor
in
inc
xchg
dec
sbb
cmp
inc
in
pop
xlat
loope
mov
sbb
pop
add
or
rol
xchg
sti
pop
add
or
or
cmp
push
inc
js
cmpsb
sub
and
xchg
push
inc
xor
sarb
push
xor
dec
dec
or
push
inc
cmp
fcmovbe
pop
or
add
frstor
jge
orl
mov
pop
inc
cmp
jl
andb
adc
mov
pushf
jo
cmp
push
sub
or
and
cmpsb
push
jne
loopne
sbb
xchg
in
imul
dec
lcall
xchg
xlat
shlb
movl
out
daa
out
inc
adc
add
adc
inc
xor
adc
fwait
jge
xor
sbb
jne
mov
mov
pop
dec
or
mov
jne
mov
cmp
cs
push
pusha
jns,pt
pop
add
mov
xlat
sbb
repnz
inc
or
sbb
aas
bound
add
div
mov
mov
incl
ss
pop
add
and
push
lds
pop
mov
test
nop
push
jmp
dec
cmp
mov
int
jbe
mov
and
test
or
or
enter
mov
fmuls
es
lcall
cld
add
or
sbb
add
inc
in
pop
loopne
push
add
call
cwtl
clc
idivl
sarl
or
ret
or
push
xor
dec
mov
daa
cmc
dec
xor
ljmp
adc
enter
fimuls
dec
jnp
pop
adc
xchg
xorl
mov
shlb
je
mov
xchg
outsl
test
push
and
jmp
xchg
xor
adc
pusha
jg
repz
mov
ret
xor
cmp
repz
or
fcmovb
andl
xor
pavgw
and
les
sbb
clc
push
push
push
xchg
dec
bound
dec
lock
lock
add
cmp
je
adc
arpl
mov
cmpsb
aaa
mov
lret
pop
dec
mov
push
mov
xor
xor
lods
add
popa
stos
and
je
and
jmp
aas
push
mov
or
pop
add
cmp
push
jle
add
mov
push
push
adc
ljmp
push
mov
fstpt
xor
pop
adc
add
xor
sbb
and
xor
in
adc
fxtract
add
jmp
sub
push
add
push
cmp
jne
dec
mov
dec
mov
lcall
enter
pop
xchg
push
adc
roll
aas
jl
daa
nop
xchg
add
sbb
cmp
xchg
add
inc
push
xchg
cwtl
push
mov
add
xchg
jge
mov
add
mov
lock
pop
jae
and
cmp
add
lea
les
or
sbb
int
movsb
push
xor
ds
push
xor
cmpsl
stos
mov
push
jp,pt
aad
cmpl
push
cmp
pop
jne
adc
xchg
cmp
or
pop
add
mov
dec
push
sbbb
cld
jbe
scas
sti
subl
test
xor
pop
stos
add
inc
dec
or
sbb
or
mov
dec
xchg
cmpsl
cmpsl
leave
and
dec
push
dec
adc
push
mov
push
sbb
jb
loopne
push
push
push
and
test
pop
or
inc
enter
sbb
nop
inc
push
je
sbb
cmpb
add
fs
inc
sbb
pop
add
enter
int3
rcll
mov
loopne
sbb
nop
std
insb
or
jl
and
xchg
add
sbb
gs
leave
mov
cltd
in
repnz
jecxz
add
lcall
repz
xchg
mov
push
cld
or
and
push
rclb
mov
daa
clc
add
sbb
orl
add
pop
rorl
lods
ds
shrl
sbb
out
addr16
add
push
repnz
push
roll
pop
les
sub
push
cmp
inc
into
push
xchg
or
adc
xlat
inc
or
cmp
call
lcall
mov
adc
rolb
or
or
jmp
enter
push
adc
sub
or
pop
insl
pop
adc
ficomps
out
mov
xchg
not
mov
jns
dec
mov
push
dec
push
sub
je
dec
xchg
adc
add
lods
lods
jge
xlat
or
jmp
push
jmp
aad
mov
outsl
das
jbe
jnp
jnp
test
xor
adc
sub
add
pop
inc
rclb
rcrb
popf
adc
sbb
xchg
sahf
mov
loopne
jmp
pop
fidivl
push
pusha
cmp
jo
push
aad
jge
call
sar
ret
mov
mov
mov
pusha
sub
out
inc
add
roll
loope
shlb
sub
jne
jmp
mov
in
mov
cmp
jle
and
andb
or
dec
inc
js
dec
jbe
add
mov
mov
pop
test
jecxz
push
push
mov
icebp
pop
xchg
xchg
push
inc
test
mov
or
adc
or
loopne
cmpsb
adc
inc
xchg
xchg
xlat
push
loopne
lods
add
sbb
or
fcomp
fidivl
in
push
shlb
test
aam
push
loop
sbb
xchg
dec
hlt
pop
adc
dec
mov
ret
nop
out
jmp
jnp
or
mov
js
xchg
jae
sbb
negb
dec
std
xor
loope
or
mov
add
stc
or
aas
ret
je
movb
mov
inc
inc
out
lock
sarl
sbb
inc
push
daa
mov
ja
push
sbb
cmp
enter
cmp
lcall
jbe
mov
adc
add
and
daa
mov
in
sub
call
xor
dec
dec
ljmp
cmp
aas
push
int
cmp
je
cmp
or
dec
jbe
xchg
jmp
cmp
jne
mov
and
stc
pop
cli
sti
mov
mov
or
jmp
testl
xor
or
mov
or
imul
repz
dec
xchg
and
mov
cmc
or
push
sub
jne
hlt
mov
ja
jne
mov
leave
pop
fucomi
sbb
jne
sub
or
mov
sub
rcr
stos
popl
test
push
xchg
out
add
add
sub
sarl
jl
or
dec
cmp
pop
aad
dec
or
rorb
lock
cmp
adc
inc
aaa
adc
fnstcw
dec
inc
add
lds
je
push
fstl
push
mov
je
push
out
xchg
imul
mov
add
idivl
push
push
test
add
push
lods
std
xor
dec
dec
cmp
repz
lods
add
orb
icebp
stos
pop
dec
leave
hlt
ficomps
inc
adc
push
sub
xor
or
ja
cmp
ds
inc
push
xor
les
mull
xor
adc
pop
or
in
xchg
int
mov
pop
pop
pop
or
popf
cmpb
leave
jne
inc
mov
add
mov
add
add
in
mov
xor
jg
es
or
shlb
inc
mov
std
iret
popa
jbe
mov
shr
cmp
or
inc
cmove
add
push
sbb
loop
or
xchg
dec
sbb
cmovle
push
mov
mov
push
adc
test
jbe
mov
xor
xchg
fwait
sub
int
add
inc
cmp
in
xlat
mov
and
xor
xor
mov
nop
inc
or
jmp
jge
fcoms
inc
scas
addl
scas
and
popa
push
or
adc
add
mov
xor
mov
ret
adc
repnz
nop
loope
push
xor
pop
inc
shll
fildll
lret
pop
notl
cwtl
add
mov
xchg
xor
out
test
pop
cmp
add
add
and
pop
in
push
push
jle
or
int3
push
mov
push
sub
or
xor
xor
jbe
loopne
mov
ljmp
xor
sub
fdivs
xlat
xor
shrl
push
or
mov
pop
dec
dec
cmpsb
popf
sub
cmp
sbb
dec
shlb
je
and
xchg
adc
out
pop
pop
pop
xchg
add
sub
pushl
cmpsb
bound
dec
pop
inc
lea
cltd
cmp
push
stos
mov
cli
les
pushf
push
lods
cmp
in
fisttpl
xor
sti
cmpb
jg
cmp
popa
in
shll
repz
add
cmp
je
adc
es
sub
mov
adc
popa
sub
inc
adc
lods
xchg
or
movb
or
push
ja
inc
inc
sub
dec
pop
or
sti
mov
sbb
fwait
int3
xor
push
popa
pop
push
sahf
arpl
and
das
hlt
or
sbbl
pop
or
xor
push
test
or
push
sub
lods
les
push
fistpll
push
les
and
xchg
pop
add
inc
add
adc
stc
adc
add
iret
adc
movsb
and
and
mov
add
ja
stos
add
pcmpeqb
data16
pop
sub
add
pop
add
cli
add
je
jnp
jbe
sub
push
add
es
sbb
xlat
and
pop
mov
adc
add
test
aas
and
shlb
fsubrl
cmp
add
in
insb
or
enter
in
jo
fwait
shlb
adc
or
push
enter
hlt
je
pop
jb
hlt
push
adc
adc
mov
jne
movb
jb
mov
loop
out
inc
call
aaa
ret
inc
mov
jge
imul
aam
fcoms
flds
pop
sar
sub
fimull
std
nop
in
les
mov
adc
test
fdivl
sbb
int3
rolb
dec
pop
push
xor
jmp
push
mov
add
mov
cwtl
push
addr16
test
mov
mov
hlt
aas
cmp
enter
ret
cmp
jb
xor
nop
or
movsb
adc
and
add
add
lods
das
adcb
jge
mov
lods
push
pusha
pop
sub
sub
mov
xor
imul
maskmovq
mull
push
push
and
push
add
adcb
mov
sbb
aad
xchg
imul
cmp
pushf
jne
imul
sbb
aad
daa
mov
aam
aaa
shlb
jmp
outsb
outsl
inc
or
loopne
add
jmp
xchg
pop
pop
jne
xchg
sub
sub
xchg
mov
cltd
mov
and
push
sbb
push
test
jmp
jb
cmp
ja
xor
push
inc
loopne
orl
leave
pop
ja
jb
repz
jae
push
and
ja
push
inc
pushf
xor
dec
inc
cmp
xor
xor
dec
repz
push
sbb
fdivrp
pushf
or
jae
pop
sub
pop
sbb
stc
inc
dec
icebp
add
adc
ds
push
sbb
mov
fbstp
repnz
popf
cmp
and
popa
inc
sbb
fmuls
jne
xchg
jo
cmp
and
sarl
pop
jne
fs
mov
sahf
pop
in
jne
push
pusha
sub
add
in
and
push
enter
or
das
cmp
lea
add
daa
cltd
or
adc
or
es
sbb
mov
mov
lcall
cmpsl
mov
cmpsb
std
mov
scas
roll
xchg
ja
imul
cmpb
out
movsb
pop
pop
aaa
and
add
inc
ss
xorb
pushf
or
push
xor
addl
aad
loop
pop
push
xchg
xchg
mov
daa
aaa
lock
test
push
push
test
sbb
int
xchg
or
and
lret
xorb
and
cwtl
neg
cs
clc
adc
cwtl
stc
jbe
pop
shlb
push
cmc
sub
dec
fimull
movsb
std
repz
mov
or
push
xchg
imull
inc
decl
cmp
clc
fcomps
aam
lcall
pop
cmc
test
push
push
inc
cli
ret
sti
xor
repz
mov
orb
sub
cmp
push
aaa
test
xchg
imul
je
sub
repnz
or
lods
in
fcmovb
add
and
pop
mov
or
out
mov
arpl
movsb
iret
lods
xchg
xchg
test
add
sbbl
mov
dec
inc
add
adc
sub
sar
push
xchg
ss
adc
iret
pop
js
pusha
mov
add
and
push
xchg
xchg
xchg
and
sar
or
sbb
inc
sti
enter
mov
pushf
xchg
sbb
enter
sub
ss
int3
sti
fmuls
insl
mov
fistl
mov
add
fbstp
pop
mov
inc
jo
pop
pop
shl
or
adc
dec
lods
pop
test
pop
sbb
push
mov
sub
fs
dec
mov
movb
fidivs
inc
popfw
adc
or
add
test
xchg
push
pop
add
push
popw
xor
or
jmp
imul
adc
fcmovnb
adc
xor
mov
in
pop
add
jne
add
pop
aas
out
inc
push
stc
add
jmp
mov
mov
aam
int
cmc
push
outsb
dec
filds
or
or
mov
mov
push
cmpsb
lea
pusha
bound
cs
and
pusha
clc
inc
aam
in
mov
mov
cmp
loope
sub
adc
cltd
fsubp
mov
pop
cmp
shrl
xlat
sub
cmp
xchg
std
fnstenv
insl
ffreep
std
inc
nop
add
sub
inc
and
fadd
fldenv
push
sub
icebp
sti
sti
dec
xchg
dec
push
test
mov
sub
pusha
jge
lods
sub
call
adc
xchg
xchg
test
movsl
sbb
inc
scas
test
mov
adc
jne
add
ja
add
mov
cmp
push
and
cmp
pushf
ficoms
cmp
outsb
cmp
daa
arpl
jne
aad
inc
les
adc
sbb
movsl
sbb
bound
out
lods
adc
clc
jne
fisttps
pusha
push
xor
loopne
leave
or
inc
mov
std
xchg
fdivp
xchg
xor
dec
in
and
dec
mov
repnz
add
stc
push
int3
and
mov
adc
movsl
cmc
leave
add
insb
int3
sarb
xchg
jne
cmp
imul
orl
xchg
or
outsl
push
pusha
mov
daa
or
xor
mov
xor
jp
popf
sub
icebp
fldcw
add
pop
cmpsb
mov
in
sub
sbb
push
sub
daa
enter
loop
test
mov
inc
adc
clc
ret
outsl
stc
sub
cli
push
xor
loopne
mov
int
stos
push
and
push
push
lea
xchg
jo
push
sub
push
ror
lret
les
dec
test
pop
jnp
adc
xchg
int3
inc
fisubs
rcrl
xchg
es
sub
mov
adc
int
into
lock
or
xchg
cmp
fidivrs
inc
xor
and
sarl
fmull
push
movzbl
add
nop
scas
or
sub
push
cltd
jecxz
xchg
add
mov
hlt
pop
inc
add
and
mov
int3
shl
sub
out
lock
and
push
pop
loopne
popl
repnz
push
test
add
cmp
sahf
push
jne
sub
outsl
imul
vpunpckhdq
and
mov
rorb
cmp
sub
adc
dec
push
mov
pop
sub
mov
mov
add
inc
test
and
int3
iret
cmp
dec
mov
dec
daa
cmp
add
ret
ja
inc
push
mov
mov
adc
inc
cmpsl
test
rcll
push
inc
xor
cmp
mov
cmpl
sub
enter
data16
mov
add
mov
nop
and
mov
shlb
in
arpl
jo
jecxz
in
gs
mov
mov
jle
and
add
pop
sub
mov
xor
dec
imul
pop
inc
cmp
xchg
test
dec
adc
rorb
outsl
dec
aas
mov
pop
mov
jno
mov
iret
or
mov
adc
inc
outsl
loopne
and
dec
lock
std
adc
jecxz
cmp
je
adc
stos
lods
push
xchg
add
pop
outsb
add
xchg
inc
les
iret
cmp
sbb
std
sub
in
adc
sbb
movsl
out
mull
rorl
dec
jmp
pop
ret
xor
xorl
and
ret
mov
pop
xchg
mov
inc
and
and
adc
mov
mov
or
rcrb
fs
fucomi
dec
daa
sub
push
push
stos
mov
sub
lea
cmpsl
iret
xor
lret
mov
xor
xor
xor
cmp
pop
mov
xor
je
es
pop
inc
pop
mov
ljmp
orb
mov
jnp
dec
add
stc
push
xorb
loope
loop
shll
in
ja
nop
in
out
lock
gs
nop
mov
inc
lods
mov
or
jl
pop
lea
jmp
clc
jns
icebp
dec
pop
push
jne
ja
rclb
in
add
bound
push
shlb
inc
xchg
aam
mov
mov
push
aam
stos
mov
jb
add
sub
dec
mov
arpl
mov
enter
cmpsb
or
cld
jmp
sbb
dec
hlt
push
mov
dec
xchg
add
add
sbb
call
cld
sub
add
aam
aam
enter
aam
aam
push
jmp
movsb
mov
adc
int3
inc
sbb
movsb
mov
xchg
bound
push
imul
dec
stos
inc
and
movsb
stc
pop
sub
push
inc
mov
mov
dec
jmp
test
and
loopne
sbb
mov
pop
jbe
dec
dec
push
push
das
out
xchg
sarb
fdivrs
repnz
xor
aam
xor
loopne
nop
cmpsl
fsubr
call
pop
xor
add
fisttpl
cmpsb
mov
lcall
aaa
sbb
push
sub
push
mov
inc
sti
into
insb
or
mov
add
lahf
movsb
cli
cmp
lcall
sub
es
sub
jne
jmp
les
insl
jbe
cwtl
or
das
sub
repz
mov
test
movsl
inc
push
enter
push
lret
rorb
add
sub
and
pop
and
out
arpl
pop
fdivrl
shlb
xchg
jmp
movd
xchg
push
sub
pop
cmp
inc
mov
ror
in
enter
pop
sbb
jbe
pop
jne
inc
insb
push
in
in
inc
movsb
push
add
pop
or
movsl
inc
out
xchg
mov
mov
cmp
dec
jg
xor
pop
xor
lea
xchg
cs
add
jecxz
pop
xchg
mov
inc
add
xor
cli
mov
mov
aaa
nop
inc
push
fisubrs
cld
xor
lock
add
in
fcomp
fildll
push
add
push
push
jne
sub
int3
mov
test
stos
lahf
inc
jmp
lock
add
jmp
add
popa
inc
xor
cmp
dec
lods
ss
xor
divb
in
sbb
mov
sbb
cmp
pop
push
lods
push
out
rcl
insb
hlt
push
xchg
pusha
mov
push
sub
or
push
add
adc
pop
ret
mov
push
in
pushl
call
mov
test
je
cmp
je
or
je
xorl
sbb
push
inc
ds
mov
mov
lea
adc
sub
push
dec
mov
inc
mov
jge
call
or
add
mov
sbb
xchg
add
fdivl
or
or
movsl
adc
or
push
push
sar
arpl
and
inc
cmpb
push
mov
inc
inc
or
sub
jne
cmp
in
cmp
dec
call
sub
mov
mov
cmp
jge
cmp
je
std
jmp
inc
adc
sbb
adc
fdivrs
mov
into
and
add
gs
jmp
add
cli
stos
cltd
clc
daa
leave
adc
fisubrs
rclb
out
inc
jl
push
push
jg
inc
test
push
mov
loope
cmp
or
sub
adc
fisttps
xor
loop
add
push
mov
push
push
leave
jecxz
and
adc
fnsetpm(287
push
or
pop
push
push
inc
cmp
imull
lock
mov
jmp
pusha
je
sbbl
in
lds
jp
or
pusha
or
jecxz
ficompl
out
outsl
mov
adc
aas
add
sub
jmp
mov
adc
inc
add
sbb
mov
inc
pop
mov
js
mov
or
push
scas
cmp
xor
lods
fisubrl
insb
bound
cmp
lods
cmpsb
push
jne
adc
ss
xor
ljmp
or
mov
mov
or
mov
decl
lods
pop
cli
mov
mov
testb
out
dec
add
cmp
dec
das
mov
or
jne
rolb
movsb
pop
inc
shll
jo
sub
clc
pop
add
jb
mov
daa
jl
mov
and
add
add
test
and
je
ss
jge
pop
xor
nop
adc
pop
icebp
sub
jae
lock
andb
and
fdivs
adc
sub
inc
push
aas
cmpsl
or
stc
sbb
int3
int3
bound
outsb
push
jp,pt
ds
ljmp
add
aaa
or
cmp
xor
adc
sub
inc
add
sub
testl
add
add
xor
out
mov
ret
nop
psrlw
inc
ret
pop
xchg
mov
inc
mov
mov
inc
mov
inc
pusha
loopne
add
imul
addr16
lret
xorl
mov
add
or
std
mov
inc
mov
inc
and
jmp
add
add
sub
add
rorl
out
movsb
shll
dec
rorb
lret
xor
fidivrl
jmp
stos
je
inc
dec
jl
add
ret
mov
dec
cmc
jbe
jmp
sbb
aas
cmp
inc
add
add
xor
ret
decl
shrb
je
mov
push
xor
in
cltd
clc
jnp
or
jge
and
test
sub
ret
adc
std
test
pushl
mov
push
imul
in
or
jb
cli
test
decb
mov
sub
and
cmp
dec
jp
cmp
add
fstps
push
cmpb
subb
lods
pusha
or
sbb
repnz
fiadds
or
lods
adc
mov
xchg
int3
lea
dec
add
es
add
cmpsb
nop
inc
inc
mov
and
das
or
push
adc
xchg
dec
rorl
cld
xor
push
cmpsb
imul
in
call
lcall
jle
cmpsb
imul
lea
lock
xor
jmp
push
push
pop
jo
rclb
mov
nop
ret
cmp
repz
sbb
and
je
iret
jl
cld
jmp
popf
in
loopne
std
cld
out
rolb
out
adcb
inc
fadds
or
xor
add
add
dec
lods
mov
in
xchg
xchg
aas
inc
out
lods
or
add
nop
dec
xor
dec
lds
pop
add
fcmovb
push
clc
mov
mov
or
shll
movsb
lods
mov
cmpsb
cltd
movl
adc
adc
or
imul
aaa
sub
loopne
call
jb
mov
subl
jno
dec
adc
aas
push
cmp
add
adc
jnp
idivb
test
sub
jae
or
jge
mov
mov
add
add
cmpl
movzbl
or
add
pushf
mov
sbb
or
add
test
cli
sbb
ss
jmp
sub
gs
pop
adc
jne
push
xor
xchg
fiadds
adc
orl
xchg
dec
or
inc
shlb
push
cmp
ret
jne
arpl
inc
popa
jp
pop
and
push
xor
pop
and
cmpl
stc
xor
cmpl
inc
mov
mov
mov
and
sbb
dec
push
icebp
pop
ret
jge
sahf
ret
scas
jbe
pop
ja
jl
push
mov
lcall
push
pop
shlb
popf
sub
enter
xor
notb
ja
push
imul
jne
and
or
jo
and
mov
xor
sahf
sub
pop
mov
or
lods
fucomp
adc
jmp
xor
pop
cmp
add
xor
fs
mov
adc
pop
push
push
in
bound
fbstp
lahf
lea
mulb
sbb
cwtl
lret
cld
in
mov
cs
lods
adc
into
ror
iret
enter
leave
push
lea
fwait
pop
jo
pop
ret
in
test
aas
or
test
ja
and
push
loopne
pop
clc
je
mov
inc
pop
cmp
mov
rcrb
jo
movl
push
or
dec
out
jmp
cmp
stos
push
jmp
adc
sbb
mov
cltd
or
jmp
mov
inc
lock
mov
pushl
mov
inc
dec
je
cmp
xor
lcall
dec
jne
mov
pop
pop
shll
int
push
adc
adc
adc
inc
mov
mov
and
inc
fidivrs
pop
jo
jl
sub
ret
push
inc
mov
adc
sbb
pop
cmc
xor
int3
add
dec
js
or
push
shll
enter
dec
xor
jns
bound
sbb
or
jmp
cld
xor
fadds
sbb
sbb
or
arpl
sbb
in
nop
add
xlat
loope
xor
pop
pop
dec
daa
aam
jno
data16
add
sbb
inc
mov
jmp
sar
repz
sub
idiv
sar
and
push
add
popf
mov
test
mov
lea
stc
push
ja
inc
call
loope
push
cs
jp
fwait
in
jge
iret
adc
xchg
push
data16
xchg
js
xor
or
shlb
movsl
adc
pop
hlt
arpl
mov
test
fcmovbe
sub
div
mov
imul
or
xchg
sbb
hlt
add
adc
adc
or
cmp
sub
and
enter
ss
aam
xor
sub
add
mov
pop
mov
dec
cmp
jb
cmp
shll
push
ret
cmp
xchg
cmp
mov
ss
adc
jge
add
jmp
mov
cmp
sub
repz
or
adc
and
jbe
adc
xchg
adc
cmpl
jge
adc
aad
frstpm(287
jl
pop
mov
out
test
sub
call
add
or
add
xor
pop
mov
mov
push
nop
rcrb
mov
inc
aam
out
testb
movl
test
lock
movsl
dec
mov
push
xchg
sahf
incb
jge
rep
push
pop
in
cmc
incl
xchg
dec
lret
iret
shr
shl
lea
or
jnp
pop
pop
push
jne
push
test
insl
adc
divl
add
lock
pop
push
shl
shr
mov
test
je
mov
add
loopne
fiaddl
push
inc
push
dec
dec
cld
cmp
dec
shll
and
inc
push
or
loope
mov
xor
lods
jno
ret
push
jg
jg
fcmovb
or
repnz
inc
neg
dec
mov
std
adc
pop
test
push
or
shlb
mov
push
into
clc
imul
mov
xor
adc
dec
fisttpll
das
pop
stos
cli
pop
iret
sbb
lock
mov
decl
les
mov
mov
je
jmp
pop
push
xor
add
xchg
sbb
or
sbb
lahf
je
push
push
mov
push
arpl
push
ret
ds
outsl
jmp
shlb
mov
mov
jecxz
inc
sbb
push
fdivrs
das
dec
jecxz
lret
push
push
xorb
push
and
xor
in
test
cmp
xchg
subl
mov
xor
mov
out
and
add
shlb
jecxz
or
pop
mov
test
inc
dec
add
xor
pop
mov
ret
adc
mov
aaa
push
or
add
pop
fwait
popa
loopne
and
and
stos
mov
lea
pop
ret
pop
lea
mov
fcomps
add
mov
clc
push
pop
cmp
roll
fadd
or
push
ret
shl
push
adc
call
lret
stc
xor
sahf
iret
xor
js
pop
jle
and
or
roll
sub
jge
add
push
mov
fsubs
cmpsb
out
cmp
je
mov
in
iret
and
faddl
aam
xchg
pop
jae
in
add
or
cld
jp
rolb
xor
jg
add
ss
jmp
js
mov
roll
inc
mov
jmp
sbbb
and
push
xor
add
daa
jmp
cmp
pusha
lods
add
mov
cmp
movsl
lea
fistpll
sub
cmp
lods
sub
int
lret
add
xor
pop
ss
xchg
pop
in
xor
inc
subb
jne
add
sub
addl
shlb
je
mov
cld
dec
cmp
xor
cltd
fadd
in
sub
lahf
adc
sahf
push
sbb
insb
xor
jb
mov
push
nop
int
repnz
lea
xchg
xchg
sbb
jns
and
cmpl
ja
sarl
popf
adc
sbb
repnz
dec
adc
xor
std
adc
jbe
cmpsl
lods
cmp
aad
lock
mov
clc
out
std
jae
mov
shr
push
das
insb
movsl
addb
inc
and
or
aad
sbbb
add
test
jne
shl
xchg
pusha
popa
push
daa
pusha
pop
or
inc
sub
js
pop
or
psubusb
pusha
pop
popa
inc
mov
sbb
bt
add
ds
es
in
cmp
push
rorl
jne
ja
pop
sbb
out
ret
fisttps
andl
pop
jge
pop
mov
aas
or
mov
push
and
fmuls
push
cs
add
filds
int3
inc
loop
test
xchg
inc
mov
jns
push
adc
jns
je
mov
mov
sub
jmp
sti
sub
call
fiaddl
xor
fdivrs
jb
xor
add
scas
movsbl
das
or
inc
incl
dec
dec
or
dec
mov
test
jl
mov
sub
shrb
dec
out
addb
mov
enter
pop
rclb
jno
xor
or
outsl
push
imul
pop
xor
js
xor
or
in
fdivrs
adc
mov
dec
xor
iret
mov
adc
cwtl
cmpsl
lea
push
inc
mov
push
ret
xor
sbb
loope
or
mov
adc
inc
jg
jge
stc
pop
xor
jmp
lock
ljmp
div
mov
pop
sbb
mov
out
shll
cmp
or
cmp
add
fists
jno
insl
mov
inc
mov
fdivl
push
sub
enter
or
xlat
or
rcrl
push
or
jbe
and
or
in
aad
jnp
testl
xchg
das
push
push
push
push
xor
and
fadds
sbb
mov
mov
sbb
sbb
sbb
sbb
dec
ret
jle
adc
xor
loope
mov
jmp
icebp
push
cltd
fs
adc
js
cmpsl
inc
dec
sbb
pop
pop
gs
and
insb
mov
add
in
push
add
mov
sub
jl
jp
jmp
cli
and
sbb
jmp
lret
out
xor
sbb
cmpsl
je
cmp
jle
or
popa
cmp
sbb
pop
push
push
dec
lahf
aam
ret
and
sbb
sbb
sbb
xchg
xchg
mov
test
outsl
repnz
jmp
xlat
adc
std
std
mov
jne
inc
inc
dec
je
adc
jne
mov
mov
jecxz
push
stos
adc
pusha
insl
call
jl
jp
pop
loopne
in
push
ljmp
sub
cmpsl
je
repz
mov
dec
adc
cmc
jnp
mov
mov
adc
add
pop
mov
cli
les
lret
sbb
jp
sbb
out
jne
or
loop
add
jnp
cmp
dec
mov
inc
cmp
dec
dec
inc
hlt
data16
sahf
rcrb
add
and
pop
ret
clc
inc
sub
sub
add
rorb
ficoml
test
gs
lds
jmp
lds
xadd
mov
adcl
jg
add
clc
add
mov
mov
cmp
sti
cltd
mov
or
mov
cmp
add
insb
jne
aas
add
pop
add
jp
gs
cmpsb
test
jns
repz
sub
jecxz
sub
jg
loopne
xlat
or
mov
and
add
ret
push
lret
cwtl
pop
jl
pop
sub
clc
or
push
fimull
cmp
jb
inc
pop
mov
jg
cmp
jbe
add
or
scas
sbb
icebp
andl
mov
ja
test
adc
add
rorl
cld
jge
into
add
cmp
add
add
filds
jne
adc
jne
and
clc
mov
sbb
test
sub
push
clc
adc
jbe
imul
das
in
and
jmp
mov
mov
sti
jg
neg
sbb
neg
add
mov
mov
pop
xchg
jno,pt
jmp
imul
push
mov
adc
xchg
or
add
jg
rolb
dec
shll
cld
repz
jl
ljmp
sbb
lock
and
cmpsl
imul
pop
outsb
arpl
pop
mov
mov
mov
sbb
adc
jge
clts
aam
test
fmul
aas
pop
jmp
mov
or
iret
outsl
jnp
or
int
test
pop
or
pop
push
dec
lahf
lods
repz
test
add
adc
out
add
stos
jbe
dec
lret
int
and
sbbb
mov
out
pop
pop
pop
add
ss
rclb
test
dec
icebp
mov
cmp
add
cmpsl
inc
jl
adc
add
les
mov
sub
and
cmp
pop
jge
cmp
sbb
push
push
sbb
scas
jno
add
mov
jmp
mov
sarb
mov
testb
mov
mov
xlat
mov
or
sbb
adc
inc
sub
rolb
xchg
push
testl
push
lea
ja
or
pop
and
push
icebp
outsl
or
fisttps
add
lea
hlt
mov
mov
adc
dec
imulb
adc
imul
ljmp
jne
push
add
imul
inc
xor
imul
jecxz
push
xchg
xor
or
fnsaves
mov
andb
mov
inc
inc
lods
in
movsb
pop
or
lcall
popa
push
push
fisttps
jae
add
popa
dec
or
sbb
xlat
jp
lret
sub
lea
gs
lea
popa
ret
cmpl
sbb
jmp
leave
add
inc
push
and
ficoms
ret
enter
mov
jmp
pop
or
in
mov
lcall
shlb
adc
hlt
lea
push
fldenv
loope
push
call
push
or
xor
fldcw
sbb
add
pop
fiadds
into
or
inc
or
jno
and
pop
cmp
inc
insb
arpl
pushf
pop
inc
ja
mov
jne
mov
leave
cli
cmp
pop
xor
or
jno
sti
or
cld
cmp
jb
mov
das
sub
cmp
push
sbb
sbb
jns
and
fistpl
hlt
pop
sub
inc
filds
cmpsb
sub
jae
scas
into
adc
sub
test
add
pop
lock
jge
push
int
shll
jnp
mov
call
scas
cmp
mov
cmp
cmpsb
mov
ljmp
cltd
push
jmp
pushl
dec
not
mov
std
leave
pop
or
xorl
jne
jno
or
xchg
jge
mov
out
push
shll
xchg
sbb
into
mov
and
fildll
test
ljmp
push
jmp
xchg
adc
shlb
loope
les
inc
sbb
xor
test
repz
jmp
dec
std
push
imul
jecxz
mov
and
cmp
inc
leave
test
inc
push
iret
sbb
mov
rorb
test
jle
mov
hlt
or
or
lret
std
jns
or
adc
push
fwait
icebp
loope
mov
ret
push
fnstsw
test
inc
mov
ljmp
or
mov
cli
scas
shr
movsb
outsb
subb
cli
sub
je
add
or
cmp
clc
mov
loop
sub
addl
into
scas
push
or
loop
jne
cmp
scas
insl
xor
sbb
je
pop
hlt
push
add
lods
xchg
in
adc
data16
jecxz
jmp
and
pop
lods
sub
pop
adc
xlat
pop
mov
je
andl
das
sub
dec
or
mov
jb
xor
sub
inc
ljmp
jecxz
cmp
mov
out
je
lcall
mov
pop
and
or
push
je
test
ds
or
xlat
add
mov
dec
in
dec
add
adc
inc
shld
pop
add
loopne
stos
mov
cmc
jecxz
sar
loope
mov
je
mov
pop
call
arpl
inc
add
je
inc
push
ffreep
mov
popa
mov
dec
or
inc
lods
cltd
lods
movsl
mov
push
pop
or
cmp
jle
sub
cmpsb
orl
jl
xor
sub
fdivrs
mov
mov
lock
sti
out
jge
adc
push
in
jl
and
js
push
outsl
mov
xchg
mov
nopl
test
adc
xchg
add
pop
cli
inc
mov
scas
ja
cmpsl
inc
gs
adc
mov
add
push
xchg
in
pusha
xchg
dec
dec
in
mov
sub
cmp
add
pop
mov
adc
dec
pop
xorb
jae,pt
or
add
and
in
addb
out
sbb
xchg
test
cwtl
and
adc
jg
loop
ud0
orb
call
jge
sahf
and
add
add
cld
push
data16
imul
and
je
xchg
mov
dec
sar
adc
aas
enter
ss
cmpb
jne
inc
inc
dec
sub
sbb
cmp
rolb
out
int
int
sbb
or
ss
subl
aas
clc
addr16
and
testl
push
in
cs
xlat
sbb
jo
insb
and
rolb
pop
or
mov
cmp
pop
add
adc
xchg
outsl
mov
sbb
mov
add
int3
andl
or
adc
dec
add
dec
test
repz
jns
aam
adc
je
iret
jnp
inc
jmp
inc
int3
add
es
lea
jo
lret
sarb
cmp
les
mov
sbb
or
cmpsb
jo
cmp
inc
out
push
pop
enter
cmp
out
pop
rolb
inc
call
or
mov
dec
stc
call
je
pop
mov
aas
dec
cld
rcll
dec
add
cmp
subb
add
call
pusha
ror
movsl
push
fdivrl
cmp
mov
jl
mov
xchg
inc
add
rcrb
lock
dec
dec
mov
lock
inc
inc
mov
xchg
jecxz
nop
mov
xchg
mov
add
loope
xor
sub
int
xlat
mov
push
pop
mov
sahf
and
dec
lods
sub
mov
mov
popl
sbb
add
sahf
or
repz
testb
and
cmpb
xchg
sub
sti
mov
rol
or
pop
dec
nop
popf
flds
dec
cld
aad
push
xor
jge
test
je
mov
fdivs
filds
xor
and
add
inc
movsl
loop
or
test
jmp
das
and
ja
pop
loop
xchg
aam
das
add
xor
or
imul
jge
je
jne
pop
jmp
jp
and
inc
sub
pop
ja
cltd
jmp
pop
ficomps
jmp
inc
or
loopne
xor
jmp
je
jg
jl
jae
sti
ret
xchg
jle
rolb
aad
rorb
sub
mov
and
fs
sti
mov
sbb
cld
testl
mov
mov
lods
cmpsl
push
xor
pop
hlt
pop
or
push
dec
push
aam
aam
push
cmp
ret
xor
movl
jle
in
xchg
testl
clc
clc
mov
jmp
mov
or
fs
xchg
das
and
xor
dec
xor
movb
push
jge
adc
es
cld
test
es
das
fucomip
mov
sub
or
je
fimuls
in
loopne
jne
add
icebp
xor
or
mov
in
pusha
fmuls
jmp
jns
xor
arpl
jnp
nop
xor
inc
or
and
cmpl
clc
push
mov
mov
subl
xor
and
dec
mov
ret
jge
rorl
add
dec
sbb
add
repnz
jmp
adc
jle
out
inc
add
jns
fsubs
pop
arpl
sub
dec
add
push
mov
sub
adc
popa
or
add
xor
push
into
jne
sbbl
ret
incl
pop
lock
cmp
push
jle
ret
sbb
xor
stc
adc
push
mov
jno
imul
jbe
xchg
adc
ret
dec
jno
es
shll
mov
push
push
inc
sbb
insl
aas
ret
dec
call
jl
addl
bound
sbb
flds
jo
jle
push
cld
cmp
add
add
out
rolb
add
sub
bound
repz
mov
push
rclb
cmp
dec
jl
rorl
stc
and
jg
pop
and
mov
call
add
mov
out
inc
push
dec
push
lock
add
lahf
fcoml
mov
mov
pop
sarb
ret
xchg
dec
mov
lods
jge
mov
lea
xchg
adc
xlat
and
lea
popf
mov
mov
jmp
std
leave
jp
cmp
ja
cld
mov
mov
clc
mov
cmc
inc
inc
daa
jne
sbbl
cmp
jb
push
and
in
cmp
pushf
mov
pop
push
lcall
xor
mov
pop
mov
cmpb
pop
lock
sub
inc
cmp
int3
jb
push
jae
test
arpl
pop
shlb
stos
add
or
cmp
or
bound
dec
and
adc
push
xchg
and
out
inc
cs
cld
jne
mov
arpl
divl
call
add
dec
je
pop
mov
cmp
adc
or
push
and
cld
fstps
shrb
das
mov
inc
jmp
pop
adc
add
xchg
iret
adc
pop
cli
add
mov
cmpsl
inc
pop
hlt
popa
repnz
data16
and
add
jg
push
test
mov
jle
sbb
sub
lea
lcall
rep
inc
inc
mov
test
pop
pop
push
push
mov
cmc
mov
in
das
pop
mov
std
cmp
push
imul
cld
rcl
pop
xor
pop
outsl
cld
je
insl
in
adc
ret
repz
adc
add
jmp
xor
leave
je
and
cmp
jns
mov
mov
dec
jnp
sbb
xchg
mov
add
mov
jb
or
ja
popf
cmp
and
loopne
xchg
mov
pop
push
push
dec
dec
lds
jl
adc
cmp
clc
xor
cmp
js
mov
add
shll
add
das
loope
pop
pop
cmp
fistpl
xchg
mov
je
inc
inc
xor
sub
mov
push
lds
jno
fimuls
pushl
jmp
andb
or
inc
dec
js
jle
std
pop
popa
lea
adc
bound
mov
pop
pop
adc
cmp
cmp
inc
jmp
mov
mov
jp
mov
inc
filds
sub
mov
dec
cld
mov
push
repnz
fstl
call
mov
cld
fisttpll
inc
data16
dec
xchg
std
add
and
adc
in
push
loop
rclb
inc
cli
lods
movb
cmpl
js
cmp
rorl
sbb
push
cli
inc
sbb
sub
lea
push
push
test
push
loopne
mov
pop
push
xchg
das
js
adc
rolb
popf
ljmp
mov
mov
mov
adc
es
inc
cwtl
rclb
mov
cmp
pop
cmpsb
or
in
popa
jl
in
lret
out
sub
add
in
cmpl
jge
sbb
neg
push
jle
stos
pcmpgtb
pop
sub
popa
lahf
and
test
stos
xor
test
mov
add
sub
icebp
push
fcmovb
je
inc
inc
cmp
push
addr16
scas
and
cmp
sbb
ja
push
repz
cmp
mov
movsb
sbb
mov
shrl
cmp
out
push
pop
add
mov
xor
pusha
mov
inc
xor
mov
mov
mov
dec
jne
push
addb
stos
popa
in
sbb
adc
test
inc
out
push
pop
mov
xchg
add
lahf
adc
or
into
cmp
sbb
movl
cmp
or
mov
jae
pusha
sti
stos
add
push
or
cli
add
pop
fwait
adc
pop
adc
movl
hlt
inc
cld
sub
shr
mov
imul
inc
add
xchg
or
xchg
push
dec
dec
pop
add
lods
adc
punpckhwd
jae
rorl
add
adc
cli
decl
lea
sar
dec
cmp
jbe
push
pop
mov
cmp
lcall
jae
pop
subb
decl
shll
pop
mov
sub
and
and
sahf
xchg
cmp
pushf
mov
pop
xchg
icebp
ds
add
cld
test
push
push
or
jle
mov
add
mov
push
or
and
push
inc
xor
es
cs
pop
dec
test
push
sub
cmp
jne
and
cmpsb
out
sar
xor
fidivs
jnp
mov
sub
xchg
xchg
sbbl
cmp
je
mov
inc
adcl
and
shr
not
and
add
fwait
aam
jne
xor
cmp
cmp
mov
dec
add
lods
icebp
pusha
movsb
repnz
or
pushf
pop
or
adc
mov
add
daa
pop
bound
ja
push
pop
outsl
or
sbb
mov
mov
pop
sbb
jae
dec
bts
ljmp
data16
pop
or
jmp
dec
adc
dec
dec
lock
cmp
test
adc
das
add
push
mov
lods
or
mull
call
or
xor
add
movsl
mov
rcrb
mov
call
aas
mov
or
sbb
mov
movsb
mov
dec
push
decb
adc
dec
adc
add
and
xor
imul
adc
cwtl
mov
dec
jmp
adc
out
decl
fldcw
loope
pop
dec
adc
push
lea
xchg
pop
push
jns
fstp
or
mov
add
xchg
jmp
movsl
sub
jo
mov
jecxz
mov
pusha
popa
lret
cmp
decl
or
lock
sar
dec
cmp
jge
add
dec
push
popa
adc
mov
jmp
loopne
and
call
inc
lret
jp
and
ja
jae
inc
mov
and
decb
iret
mov
add
xchg
xor
push
insl
es
jne
mov
cmp
dec
adc
sbb
divb
jne
dec
jae
dec
jle
nop
xor
in
es
fcompl
pusha
movsl
mov
mov
repnz
jo
mov
loope
outsl
xor
scas
mov
sbb
movsl
mov
mov
pop
mov
adc
mov
jg
das
and
inc
or
xchg
adc
xchg
pop
cmp
lcall
xor
je
mov
push
call
rcll
in
mov
int
and
pop
test
jl
shl
inc
jmp
mov
stc
ljmp
xor
cmp
dec
sar
dec
cmp
jle
add
pop
lock
sub
xor
push
rorl
iret
shl
cmp
mov
and
mov
incb
jle
jmp
icebp
and
jmp
shll
pop
rorl
push
sub
or
push
insb
xor
dec
mov
or
add
pop
add
sbb
adc
enter
jle
fidivrs
icebp
mov
mov
or
cmp
jg
decb
jge
sbbl
add
into
shr
or
roll
jl
jmp
push
cmp
mov
or
push
jnp
bound
sub
or
call
mov
mov
xor
std
sti
push
jl
xor
mov
inc
lea
jne,pt
cmp
fdivs
xchg
cmp
push
cmpsb
outsl
cmp
and
adc
or
xor
xor
mov
sbb
mov
sub
and
xor
ljmp
add
loope
mov
xor
out
mov
mov
dec
sarb
stos
or
add
xor
stc
dec
inc
orl
insb
lea
mov
or
push
mov
inc
movw
test
rorl
add
xor
in
inc
or
inc
ret
dec
cmp
or
out
jns
adc
addb
mov
sbb
xchg
add
cli
ja
push
out
cmp
inc
out
dec
in
mov
cmp
mov
or
inc
cld
lock
mov
call
inc
cmp
sahf
pop
lock
push
jo
or
clc
in
dec
mov
clc
pop
push
out
dec
or
pop
inc
fs
inc
test
mov
mov
pop
test
hlt
mov
jne
or
jecxz
ret
xor
not
and
ret
pusha
and
clc
popl
jg
push
mov
lea
sub
push
aad
or
shr
or
jmp
push
pop
cmp
pop
xchg
movsb
mov
cmp
jne
popl
xor
loope
sbb
popf
pop
add
pop
dec
or
jae
cmpsl
clc
lea
nop
inc
cmp
sub
inc
xlat
pop
enter
dec
or
dec
leave
jg
sub
add
enter
push
mov
stos
sar
dec
mov
das
jmp
stos
sub
pop
dec
hlt
lea
adcl
pop
dec
pop
pop
xchg
gs
dec
pop
pop
pop
pop
add
mov
adc
add
and
shl
iret
lret
jno
and
jo
dec
mov
test
inc
add
jae
in
into
xchg
jmp
xor
loope
mov
fisttps
hlt
stos
push
or
jge
rcrb
sub
xor
add
push
dec
addr16
popf
add
jbe
adc
sbb
out
pop
mov
xor
imul
xor
into
je
repz
andb
xlat
dec
push
in
cmp
ja
ja
mov
and
cmp
fstpt
add
jl
dec
add
pop
pusha
inc
push
cmpsb
fisttpl
ret
jae
ret
or
ret
jns
add
bswap
ret
inc
dec
es
mov
add
sbb
mov
mov
adc
xor
inc
mov
push
push
repz
mov
fiadds
aad
popf
jmp
aaa
push
xor
add
imul
mov
lock
jecxz
fidivrs
push
sbb
jg
jmp
mov
mov
mov
mov
jge
lea
pshufw
adc
inc
in
mov
icebp
mov
setge
dec
and
dec
inc
mov
dec
jne
addb
cmp
cmp
and
cli
mov
jae
orb
pop
movl
lock
dec
orb
daa
jnp
jle
sbb
fwait
movsb
cmp
hlt
dec
sub
pop
mov
popa
frstor
jo
pop
imul
adc
push
mov
mov
rolb
push
js
xor
pop
and
xchg
lods
pop
mov
pop
pusha
mov
add
mov
jne
mov
add
and
or
sbbl
add
leave
ja
loope
sub
pop
sub
test
jge
test
jg
inc
lahf
mov
je
cmpl
sbb
and
or
mov
xchg
cli
out
punpcklwd
ficomps
cwtl
stos
movsl
xchg
or
pop
sbb
rcll
mov
inc
adc
jecxz
xchg
or
or
jmp
test
jne
jbe
lods
mov
and
bnd
xchg
mov
lock
lock
sbb
jecxz
loope
out
dec
jmp
pop
icebp
ds
stc
or
enter
movsb
jo
movzbl
and
cmp
cld
movl
test
sbb
lret
or
notl
push
xchg
sti
pop
mov
les
xchg
xor
jle
rcrl
mov
fwait
inc
sbb
dec
jp
mov
cmp
fbstp
jecxz
mov
cmp
pop
add
adc
ds
scas
popa
xor
adc
sub
outsl
jb
mov
inc
daa
dec
jle
ljmp
jae
xor
dec
test
adc
popf
sub
imul
xchg
xorl
adc
jb
mov
cmp
adc
adc
sub
test
cld
scas
pop
rolb
sub
push
or
push
aas
sub
call
daa
dec
aas
xchg
out
ss
xchg
in
out
add
loope
fdivl
add
jge
aam
xchg
pop
in
je
movsb
movsl
add
push
jo
jne
aam
xchg
add
ljmp
lret
jle
outsb
mov
dec
aas
sbb
push
sbb
mov
push
ss
inc
cmp
add
xchg
loopne
or
mov
insb
clc
insl
out
loopne
enter
testl
push
sub
or
cmpb
sub
ud2
faddl
sub
mov
xor
jle
jno
mov
push
sbb
jmp
js
in
fldpi
sub
cmpsl
inc
shrl
push
sbb
push
adc
lea
imul
int
cmp
fstpl
add
mov
push
mov
add
sub
dec
mov
adc
inc
sbb
psrad
incb
and
xor
mov
test
jne
testl
add
inc
jmp
mov
jae
cmp
add
mov
push
imul
add
out
lea
xor
mov
cmc
push
mov
jbe
push
lret
iret
in
add
inc
mov
inc
inc
lea
push
arpl
sub
test
sub
xor
mov
sub
ret
rorb
jb
fucomip
scas
jmp
out
lock
outsl
push
ret
sbb
mov
or
pmullw
xchg
jo
inc
inc
fcompl
dec
stos
jne
sbbb
cmpb
clc
or
lahf
movsl
decl
lea
jbe
adc
enter
nop
das
push
lahf
shr
jae
movsl
add
or
jb
mov
ffreep
or
hlt
ret
mov
inc
imul
daa
push
lock
xlat
iret
jae
jae
cmp
lret
inc
cmpb
jae
je
lea
arpl
xchg
cmp
xchg
icebp
add
xor
mov
lock
pop
lea
add
testb
je
sub
mov
aam
jecxz
flds
sub
pop
cmp
push
inc
add
jo
adc
push
in
cmp
mov
andb
je
push
pop
hlt
xor
jmp
jecxz
andl
add
or
out
ja
sbb
jae
pushl
stc
call
or
sti
or
call
or
lods
pop
and
test
pop
push
mov
testb
je
dec
xlat
sarb
pop
jne
mov
add
or
adcl
mov
enter
iret
imul
or
xor
sub
or
push
push
inc
invd
mov
mov
adc
std
pop
enter
pusha
in
push
pop
xor
cmc
popa
sub
idivb
cmp
mov
mov
cmp
jno
es
lahf
loope
adc
jne
push
data16
sbb
fidivrl
fnstenv
inc
cmp
shll
cltd
jl
jno
lret
xor
outsl
or
or
mov
movsl
clc
xor
or
xchg
or
shl
adc
push
iret
sbb
mov
enter
cld
loopne
mov
mov
ret
xor
scas
hlt
or
cmp
stc
sar
int
scas
pop
cmp
cmp
jmp
mov
and
inc
jl
cmp
in
jno
jle
orb
call
rcrl
push
dec
into
push
sub
push
adc
std
or
adcl
repz
add
test
inc
and
scas
fnsave
mov
pop
nop
lcall
pusha
mov
jne
mov
xchg
das
mov
bound
and
xchg
xchg
push
mov
imul
dec
add
jo
add
adc
sub
pop
push
pushl
lds
pop
rcll
jne
jnp
or
pushf
les
js
add
push
jp
pop
cltd
ret
add
or
sahf
pop
mov
pop
pop
inc
outsb
pop
ret
or
push
or
add
mov
or
and
mov
mov
imul
inc
or
mov
daa
mov
dec
cmc
push
xchg
mov
iret
xchg
push
or
movb
inc
mov
jae
and
ljmp
mov
adc
je
adc
aas
adc
mov
inc
mov
jmp
jmp
test
inc
dec
jge
xchg
movl
subb
je
mov
and
addb
push
inc
inc
adc
enter
cmc
add
push
les
test
les
dec
fcmovnb
aad
lds
sbb
lods
cmp
rclb
add
mov
jle,pn
mov
add
or
push
jmp
mov
inc
cmp
ret
cmp
pop
add
adc
test
push
jg
pop
jle
jge
sub
je
or
je
push
je
cltd
lods
xor
mov
cld
or
jg
xchg
or
jmp
sub
lods
mov
inc
jmp
mov
jne
sbb
pop
cld
pop
add
addl
enter
sub
sub
bound
xcrypt-ofb
cmpsl
sub
inc
adc
cmp
test
or
cmp
cmp
mov
cltd
sbb
and
cmp
and
pop
addl
movsb
dec
pusha
and
call
jge
mov
ljmp
mov
icebp
idiv
sti
pop
add
sbb
or
xor
adc
shl
aas
add
aad
jle
mov
cmp
je
testb
call
jae
ret
jmp
mov
add
incl
push
shl
iret
or
pop
mov
std
je
jg
ds
cmp
fidivs
mov
add
scas
in
or
pop
js
pusha
or
jge
sar
or
inc
cmp
push
inc
cmp
lret
and
fstl
jb
or
sbb
imul
cltd
testl
lret
add
mov
or
gs
mov
jmp
xchg
push
aam
fcompl
rorb
add
and
mov
dec
inc
scas
rcr
push
xor
std
rol
adc
rorb
jae
mov
ret
hlt
std
shrd
add
out
in
cld
add
out
cmpb
mov
rorl
push
lret
push
call
mov
or
cs
loopne
repz
cmp
rorb
loopne
add
scas
mov
loopne
inc
sti
std
mov
gs
jg
je
or
sti
repnz
je
dec
je
dec
jne
inc
jmp
cmpb
jne
mov
add
rolb
hlt
mov
jecxz
daa
inc
bnd
insl
push
repnz
ja
or
jmp
jbe
sti
jmp
decb
dec
sti
adc
mov
movsl
dec
loopne
jb
andb
mov
adc
aam
movb
sarl
xor
jg
cmp
je
xorb
xchg
add
xchg
xor
outsb
add
sub
pusha
adc
jmp
adc
sbb
or
loop
je
cmp
mov
pop
add
or
incl
sti
cmp
sbb
imul
mov
and
adc
pop
faddp
ror
rcrl
jmp
inc
jle
adc
fsubr
or
lsl
lea
psllq
push
mov
and
mov
test
adc
add
xchg
dec
loopne
jno
loopne
adc
insl
or
cmp
xchg
imul
ja
sbb
and
in
inc
sti
in
push
inc
mov
mov
push
pusha
out
sbb
pop
inc
mov
inc
fistpl
in
mov
sti
sbb
push
mov
nop
fsubs
gs
pop
xchg
test
cs
outsl
in
push
push
daa
and
dec
xor
inc
dec
adc
dec
jne
cwtl
das
ds
daa
push
push
fidivrl
inc
pop
mov
mov
iret
push
aas
dec
adc
andb
lods
shll
mov
xor
jo
out
mov
sub
loopne
jle
ljmp
ret
dec
add
jp
mov
into
aas
mov
call
sub
inc
shl
sahf
mov
stc
aas
pop
rolb
push
imul
ret
inc
lods
icebp
ds
cmpb
dec
cmpsl
jp
xchg
jecxz
and
pop
inc
cmp
mov
jmp
stc
push
ret
lcall
add
cmpl
das
and
test
addps
fdiv
ret
outsl
push
pop
mov
jp
inc
insb
jae
xor
jl
mov
subb
iret
pop
add
addl
jmp
mov
or
and
std
adc
lret
cltd
pop
je
inc
cmp
mov
cmp
inc
cmp
std
shll
mov
jmp
ret
cmp
ja
and
repnz
mov
mov
and
mov
imul
loope
pushf
or
inc
dec
jne
xor
jmp
arpl
testb
fwait
jmp
add
or
lcall
xor
int3
adc
push
inc
sbb
out
xor
mov
push
enter
aas
push
pop
call
add
icebp
pop
cld
xor
test
je
pushf
jne
or
xchg
mov
jg
nop
mov
movzbl
or
fistps
leave
jmp
add
sahf
mov
ret
in
ret
dec
dec
cmp
ja
xor
pop
push
cmp
jmp
cmp
sbb
xchg
xchg
sub
jg
lret
dec
add
jb
lahf
aam
inc
push
dec
dec
jno
pop
rolb
dec
jne
sbb
xor
imull
out
add
mov
cmp
enter
insb
aas
or
and
fmuls
mov
pop
sbb
push
mov
push
lcall
add
jne
outsl
cmp
add
xchg
outsl
inc
add
ja
mov
cltd
add
adc
mov
dec
leave
add
mov
mov
add
adc
cmp
dec
roll
jb
ret
pop
sbb
jnp
aas
or
cmp
repz
add
aas
lea
shl
jmp
fwait
xchg
and
imul
aas
adc
mov
jl
sarb
shlb
inc
xor
into
rcrl
rolb
sti
add
push
lret
or
push
stc
js
jmp
ret
repz
cmp
inc
loope
std
or
inc
jmp
sub
inc
addl
call
push
mov
aaa
lea
sbb
mov
xorb
jo
pop
and
ds
pop
in
outsb
jne
mov
lock
xchg
push
adc
sbb
push
or
lcall
adc
cltd
int3
adc
push
into
mov
sbb
jno
push
xchg
jmp
jle
xchg
sbbl
sub
push
jnp
hlt
loope
leave
out
out
pop
ret
jmp
decl
js
mov
cmpsb
xor
xchg
or
push
addl
fucom
sti
popf
mov
fadds
inc
clc
push
xor
sub
push
sahf
lock
mov
cmp
or
andl
jns
stos
icebp
inc
jp
push
andl
mov
push
lds
test
je
ss
inc
push
push
mov
add
mov
lods
shll
inc
mov
and
add
sbb
lcall
mov
adc
adc
adc
ja
xor
cmp
push
int3
mov
xchg
xor
repz
add
dec
or
into
rorb
loopne
add
jl
fmull
repnz
inc
inc
adc
aas
es
dec
rcrb
xchg
in
pop
or
insb
pop
cmp
rcrb
aad
enter
ja
jmp
sub
mov
ds
pusha
scas
leave
or
mov
xlat
pop
pushf
outsb
pop
cmp
fldl
les
dec
mov
push
ss
cmp
pop
add
adcl
out
stos
or
mov
and
clc
sti
sbb
fisttpll
dec
add
call
fcompl
sahf
jbe
sbb
jae
inc
sahf
in
and
clc
mov
push
rorb
popf
jecxz
rol
add
pop
sbb
sub
mov
push
sbb
adc
lods
jg
aam
or
xchg
iret
out
ffree
pop
xor
mov
or
repz
mov
lret
mov
sti
or
hlt
and
sub
or
sbb
in
sbb
ret
mov
je
cmp
jne
dec
mov
inc
stos
mov
negb
jb
push
test
lret
test
sub
in
popa
mov
clc
cld
and
out
pusha
and
xchg
lret
cmpb
sub
adc
movsl
push
leave
dec
and
mov
sete
add
cmp
sarb
imul
xor
in
xor
push
stos
in
fidivl
in
pusha
shlb
dec
jecxz
add
add
jo
mov
out
inc
pop
in
add
sbb
imul
push
jmp
push
sub
enter
js
add
xchg
outsb
enter
pop
out
jmp
dec
inc
dec
cmp
pop
add
jns
neg
daa
sub
das
loope
jl
movsl
fs
pop
idiv
jnp
adc
sarb
sub
or
dec
xchg
add
mov
jle
inc
xchg
push
or
sub
ret
pop
add
sbb
inc
push
push
pop
pop
add
cmp
xor
adc
add
ret
in
xchg
add
jne
movb
outsb
fisttpll
dec
lock
push
mov
pop
xor
jmp
add
cmp
cmc
mov
xor
pop
mov
adc
adc
pop
je
neg
jmp
clc
testb
fidivrs
pop
push
push
aad
xchg
adc
mov
repnz
jo
or
dec
jno
inc
xchg
and
pop
mov
aad
icebp
push
arpl
xchg
sbb
in
push
cmp
pushf
rorl
call
mov
jge
jg
stos
xchg
or
stc
and
out
push
inc
enter
xchg
lods
imul
imul
mov
lret
push
dec
cmp
xchg
or
adc
dec
dec
dec
or
adc
mov
data16
out
mov
loop
sbb
out
shlb
repz
push
pusha
add
xlat
addr16
enter
and
fimuls
fstp
inc
pop
pop
mov
daa
mov
mov
xorl
push
jae
pop
sbb
pop
push
push
mov
dec
scas
pop
mov
sbb
stos
mov
mov
inc
movl
cmp
sahf
adc
cmp
or
jo
fcmove
fldenv
nop
mov
add
out
jns
out
pop
and
and
sbb
adc
in
adc
xchg
pushf
into
add
or
imul
cld
nop
mov
loope
sbbl
jmp
and
mov
and
data16
scas
call
dec
icebp
xor
push
sarb
les
inc
or
sbb
and
movsb
rcll
cmp
jg
mov
loop
mov
out
imul
cmp
dec
insl
decl
mov
fmull
leave
enter
arpl
mov
ss
fbstp
enter
pushf
cmpsl
sbb
push
addl
add
mov
or
stos
js
inc
xchg
stos
or
jecxz
mov
mov
dec
lahf
or
sahf
jecxz
dec
lar
imul
repz
add
imul
cld
popa
jl
cmpsb
jl
or
test
popa
cmp
scas
sbb
push
sbb
xor
push
dec
pushw
sub
dec
das
cmp
imul
cmp
adc
bound
icebp
pusha
cmpsl
push
or
dec
jmp
test
inc
xchg
inc
push
in
mov
ret
xchg
and
sbbb
add
or
insl
jmp
lahf
pop
jle
inc
lret
ret
cmc
es
jl
imul
pop
ljmp
add
add
roll
ret
sbb
pop
mov
in
inc
or
fiadds
push
xor
imul
ljmp
add
jge
push
jl
je
or
pop
inc
inc
popa
add
sub
enter
cmp
push
push
ja
mov
rorb
addb
cltd
cmp
rolb
push
jno
or
loope
jns
push
and
std
jne
cmpl
add
and
and
pop
inc
inc
adc
add
add
pop
out
cmovnp
or
jge
mov
mov
jle
lcall
orw
lods
dec
xor
imul
pop
je
sbb
lea
loopne
je
dec
andb
andl
pop
clc
or
or
inc
inc
mov
pop
fs
push
and
pushl
xchg
jae
popl
pop
in
js
lea
testb
dec
and
jmp
les
sbb
xor
jp
fs
adc
mov
mov
fs
adc
jmp
rcrl
xor
fisttpl
bound
cmp
outsb
jo
fisttps
sti
das
rol
aas
adc
inc
jl
mov
int
shrb
jmp
or
clc
mov
inc
fsubrs
fdecstp
ret
clc
out
decb
mov
sar
jecxz
mov
rcr
add
mov
cmp
jae
cmpb
jne
sbb
jmp
popa
xorb
pop
push
inc
mov
or
ljmp
cmc
lods
shll
lahf
xorb
push
aad
rorl
loopne
sbb
or
loopne
orb
test
push
or
inc
or
dec
mov
or
jae
cmc
adc
mov
jmp
pop
cld
arpl
xchg
xor
in
add
lock
subb
mov
roll
and
add
je
and
out
stos
inc
pop
or
adc
dec
jecxz
dec
pusha
popa
mov
and
adc
add
data16
and
push
push
int
add
into
test
cmp
ljmp
fisttpl
adc
adc
jg
fildll
rorl
mov
and
or
jne
mov
in
jecxz
push
sbb
nop
jo
nop
and
xor
aas
add
aas
add
aaa
cmp
scas
leave
repz
shlb
adc
repz
cmp
je
inc
jmp
hlt
push
and
dec
andl
sub
xor
sbbl
pusha
or
je
loopne
sbb
pusha
shl
loopne
mov
cmc
add
pop
lea
push
enter
and
sbb
pop
add
or
push
sbbb
and
mov
cmpsl
jne
lea
hlt
adc
cli
in
cmp
out
mov
ds
or
jbe
inc
sbb
ja
imul
push
jmp
jbe
mov
mov
inc
loopne
sub
je
cmp
je
inc
sub
pop
inc
lahf
clc
dec
add
jmp
lea
push
push
xchg
adc
bound
lret
mov
or
and
sbb
push
mov
call
out
inc
cmpb
and
push
pop
outsb
push
pusha
jns
rcr
push
mov
jne
pop
decl
xchg
push
bound
dec
dec
push
push
pop
popf
or
call
jnp
addb
jecxz
loopne
mov
decb
push
push
cmp
into
rcll
fildl
or
mov
test
into
inc
or
imul
push
imul
mov
fs
sbb
mov
xchg
clc
cmc
rcrb
loope
and
inc
loopne
adc
add
or
or
pop
test
aaa
inc
mov
inc
addb
sub
or
or
negb
or
mov
mov
inc
inc
pop
aad
into
sbb
mov
inc
cmpb
inc
cmp
add
testb
sbb
lret
or
adc
scas
repnz
popa
dec
ja
lcallw
or
inc
mov
mov
dec
adc
enter
dec
popa
sbb
lods
or
xor
sub
push
mov
fistpl
cld
aam
dec
and
leave
mov
jmp
repz
cld
sbb
sbb
xchg
in
shr
mov
dec
add
aas
clc
fisttps
inc
adc
push
pop
inc
arpl
or
dec
add
xchg
cmp
or
stc
adc
and
mov
sub
lds
fdivl
jno
add
add
lea
sbb
mov
andl
pop
push
dec
adcb
xchg
mov
movsb
jmp
xor
rcll
add
or
lock
or
inc
jbe
fwait
sbb
ljmp
add
aaa
outsl
jmp
or
dec
ret
push
out
call
push
xchg
cli
jbe
stc
or
shl
mov
add
jl
ret
xor
divl
jp
jmp
xor
adc
daa
adcb
dec
inc
cmp
dec
cmp
rcll
pop
add
js
sahf
push
push
test
adc
push
aas
or
cmp
fiadds
insl
cmp
sti
or
sub
inc
cmc
and
aad
popf
and
and
es
outsb
ss
mov
rcrl
sub
aam
inc
xchg
shll
popa
add
mov
sub
dec
and
push
aas
sub
or
insl
movb
inc
cmp
mov
jno
and
ret
nop
add
inc
or
cmc
jns
mov
xor
mov
lea
push
lock
jge
mov
neg
movsl
and
mov
shll
pusha
popf
les
or
divps
sub
stos
xchg
jl
and
adc
sbb
jl
inc
mov
loop
mov
mov
jmp
push
std
dec
or
or
in
inc
adc
iret
push
mov
mov
pop
mov
xchg
lock
add
inc
jge
or
pop
sub
decl
lahf
add
ret
test
add
or
pop
mov
daa
add
dec
fwait
cmp
mov
pop
loop
xor
or
mov
int
inc
cli
mov
unpckhps
jne
or
adc
fucomi
add
addb
add
jno
xor
inc
mov
push
inc
push
add
mov
cli
add
sbbb
in
addl
sarb
mov
push
mov
mov
dec
pop
stos
cmp
push
lret
xor
pop
and
das
pop
mov
inc
cs
jg
and
mov
mov
gs
das
jl
add
jnp
ficoms
fdivrs
push
adc
std
jmp
popl
inc
cmpsl
mov
jns
shl
lock
jecxz
mov
in
add
ss
mov
sbb
adc
inc
cmp
add
imul
ret
shl
adc
push
inc
xor
pop
inc
xor
and
hlt
xchg
loopne
pop
int3
std
testl
out
enter
push
les
cmp
sarl
popa
lea
arpl
lea
mov
pop
pop
pop
orb
xor
dec
pop
cmp
or
xlat
movsb
addr16
push
sbb
cmp
xchg
out
insb
push
mov
negl
stos
or
or
mov
jmp
in
cmp
arpl
sbb
jmp
mov
sbb
ss
sub
push
nop
idiv
sub
sbb
ret
xor
daa
into
mov
add
cmpl
push
sbbb
dec
push
nop
cmp
sub
add
pop
addr16
mov
je
inc
cmp
icebp
sbb
xchg
xor
sbb
flds
inc
test
or
pop
cmp
les
in
insl
adc
pusha
adc
cld
sub
loop
pop
xchg
xchg
push
ja
mov
insb
loope
cmp
sub
push
jnp
jo
idivb
call
clc
push
xchg
xor
adc
cmpsb
rorl
negb
int3
cmp
int3
pushl
fidivs
sub
dec
push
lock
mov
divb
or
stos
mov
popa
push
and
push
inc
or
pusha
adc
pop
lock
jmp
fnstcw
orl
ja
xchg
adc
pop
inc
adc
sub
add
mov
push
lcall
test
orb
test
jg
mov
test
inc
mov
add
scas
jne
add
rcrb
push
cmp
jge
cmp
mov
jg
mov
fdivs
mov
nop
js
mov
xor
push
in
mov
dec
adc
mov
adc
adc
xchg
ja
mov
ret
adc
lock
add
notl
shll
fs
cmp
ret
dec
mov
add
pop
cmc
xor
hlt
shlb
adc
daa
data16
fdivrs
sarb
imul
jecxz
gs
jb
mov
mov
rclb
lods
adc
pusha
mov
nop
aaa
jmp
sbbl
sbb
adc
mov
mov
aaa
test
movsb
ret
pop
push
mov
adc
push
mov
ss
add
xor
jo
mov
xchg
push
pusha
sub
mov
cwtl
mov
ss
push
enterw
dec
ffree
xchg
pop
sbb
in
pusha
sbb
andl
cmp
fidivrl
arpl
lea
fildll
roll
fdivl
int3
xor
into
xchg
loopne
mov
cmp
sahf
xor
sbb
int3
es
inc
fs
and
stos
fildll
out
inc
out
pop
pop
mov
mov
push
mov
add
sub
pop
or
add
out
jg
mov
insl
pop
or
push
add
out
hlt
in
push
adc
xor
fsubr
fucomip
pusha
xchg
adc
loopne
push
dec
add
add
pusha
out
fistps
and
cmp
lock
enter
fidivl
nop
fcoms
clc
push
and
xchg
push
ffreep
lock
ret
inc
and
dec
shll
movsb
mov
add
fwait
outsb
aas
rorb
fadds
call
add
lret
adc
add
xchg
lock
add
sbb
lret
lds
stc
icebp
movntps
or
call
add
bound
inc
mov
dec
popa
cmp
xor
sbb
cmpl
xchg
adc
jmp
shl
mov
add
mov
push
jae
ret
aam
cmpl
ss
add
lock
or
adc
hlt
jmp
or
pop
in
jmp
and
dec
test
adc
pop
mov
loope
test
or
lcall
insl
int3
and
xchg
in
outsb
pop
stos
inc
repz
dec
push
sbb
orl
popa
dec
dec
adc
in
ret
testb
mov
jnp
sar
ret
jge
xor
shll
push
shl
pop
jge
add
push
fsts
jbe
scas
push
adc
sub
inc
dec
mov
test
push
pop
inc
loope
gs
inc
clc
adc
sub
jecxz
lods
in
mov
test
mov
cmp
incl
daa
rcrl
jns
inc
pop
add
repz
sbb
in
andl
adc
inc
jmp
cmpb
or
je
fadd
sub
xor
mov
jns
adc
sbb
dec
hlt
jb
or
sbb
and
mov
insl
mov
je
cmp
je
bound
cmp
push
xor
outsb
lods
clc
testb
fidivl
adc
in
sub
rcrl
aam
ret
shrb
jecxz
dec
add
insl
add
stos
je
daa
imul
adc
xor
cmc
push
adc
sbb
testb
les
mull
fsincos
mov
pop
loope,pt
adc
xor
iret
cwtl
adc
inc
inc
ljmp
test
lock
lods
add
cwtl
pusha
add
or
jne
jae
or
add
lahf
inc
mov
dec
incl
or
jecxz
pop
dec
or
loope
pop
jne
cli
cmpsb
jg
repz
or
in
mov
repz
jecxz
in
dec
mov
lock
div
add
or
in
sub
jne
cmp
push
jno
mov
adc
inc
cmp
add
jne
push
lock
loope
sbb
lock
mov
xor
lahf
cmp
aas
mov
pop
pop
sbb
int3
repz
dec
xor
jecxz
into
add
icebp
or
pop
push
inc
mov
push
add
xchg
adc
inc
filds
jmp
push
leave
rorb
xor
data16
lock
pop
aaa
add
adc
pop
leave
rorb
jle
les
jle
cmp
jl
xor
rclb
xchg
push
into
push
mov
imull
add
cmp
xchg
movhps
jnp
push
adc
jns
or
push
push
xor
fstl
and
sbb
std
cmp
jae
or
jae
shld
shl
push
rcl
and
shl
cmp
dec
or
push
or
push
je
xlat
adc
mov
add
adc
push
push
or
inc
or
and
add
adc
divb
clc
call
push
loopne
pand
add
and
ret
and
xchg
push
outsl
jecxz
and
cs
xchg
cld
fnsave
and
inc
not
and
fisttps
or
mov
inc
rclb
pop
fldcw
jle
inc
lock
mov
idiv
push
loope
imul
test
push
jnp
lods
cmpsl
test
mov
jge
or
mov
movsl
add
add
add
xor
test
mov
in
cwtl
out
mov
or
jmp
pop
not
jne
or
xchg
or
jns
int3
cld
xor
es
push
cmp
fisttps
iret
cwtl
insl
pop
pop
jne
pusha
div
adc
jbe
push
hlt
insl
or
mov
or
xor
fsubrl
and
ret
sbb
inc
dec
lock
or
pop
scas
fwait
add
cmp
scas
lret
int3
or
push
rcrb
add
lods
sub
scas
or
dec
or
pop
or
sarl
ret
add
add
lcall
ret
adc
cld
pop
aas
jg
push
not
test
jne
cmc
add
pop
mov
jge
lea
mov
mov
xor
rolb
bnd
cmp
xchg
nop
sti
scas
int3
in
pushf
cltd
adc
mov
pop
pop
push
jne
icebp
cmp
mov
dec
js
rcrb
insb
and
push
cmp
push
out
mov
mov
mov
jo
and
add
ret
pop
cltd
adc
dec
addr16
arpl
mov
dec
mov
das
loop
mov
mov
mov
mov
mov
and
jnp
add
and
adcl
mov
mov
and
shl
ja
rclb
xor
mov
pushf
jb
pop
pop
fldenv
cmp
dec
or
sbb
in
jge
pop
cmp
mov
lret
cltd
push
shr
push
inc
cmp
add
scas
out
add
add
out
dec
enter
imul
cmp
sbbl
push
fwait
mov
jne
mov
mov
pop
addb
jl
orb
flds
iret
pop
cli
mov
jne
dec
aas
jns
popa
lcall
aas
dec
pop
rorl
mov
pop
add
mov
hlt
add
mov
and
add
aas
cmp
sti
add
decl
xor
clc
mov
and
xor
and
and
mull
xorl
cli
pushl
push
push
outsb
movups
daa
inc
add
inc
leave
sub
imul
xchg
loope
jge
cmp
fdivrs
sub
lock
cli
adc
cmp
jnp
pusha
xchg
test
inc
xor
imulb
cmp
jl
movsl
xorb
popa
or
dec
testl
add
inc
push
xor
andb
xchg
rcll
add
inc
pop
adcb
jl
cmp
jg
daa
fincstp
pop
dec
addr16
mov
push
mov
inc
fldcw
push
jmp
fisttpll
inc
je
scas
pop
jne
or
imul
dec
aas
ret
add
fldl2e
leave
call
pop
cmpb
ja
call
je
in
xor
fsubs
pop
dec
push
sub
fsubrl
dec
nop
call
push
xor
pop
and
insl
jge
xor
adc
mov
inc
xor
adc
sbb
mov
insb
jae
jl
addb
les
mov
jmp
incb
ret
jle
incl
jns
aam
aad
push
int
ljmp
xchg
jle
adc
in
xchg
pop
lea
push
je
push
adc
cld
lcall
inc
mov
mov
mov
pop
movswl
lods
or
ss
and
scas
mov
mov
sub
popf
and
iret
aam
cltd
inc
sub
add
pop
pop
mov
arpl
xchg
fbstp
dec
mov
add
jno
or
adc
pop
adc
rcrl
push
lret
shlb
jmp
dec
add
cmpsl
mov
dec
adc
enter
mov
or
call
adc
leave
mov
shr
or
lea
mov
add
fbld
iret
cltd
and
or
int
dec
mov
incl
sbb
push
loop
in
mov
test
call
jl
call
pushf
lcall
and
add
push
jns
inc
and
add
shl
test
cmp
inc
mov
mov
icebp
imul
add
daa
inc
mov
sbb
je
jecxz
rclb
int3
or
fstl
lods
sub
test
xor
fistl
int
mov
jecxz
out
loopne
cmp
adc
inc
leave
mov
fstp
pusha
aas
xchg
or
ror
addl
fisttpll
jmp
cmpb
aad
es
mov
push
pop
arpl
popf
dec
loopne
add
xor
dec
and
adc
outsl
pop
mov
pop
leave
enter
jne
dec
sub
roll
add
sub
inc
roll
inc
mov
test
adc
aad
leave
mov
jno
pushf
orb
cmp
jl
cmp
mov
std
cmp
inc
jmp
popa
cmp
inc
pop
xchg
dec
repnz
sbb
add
pop
push
repz
inc
or
loopne
insb
add
xor
xchg
je
jno
dec
sahf
pop
rcll
xlat
add
mov
or
insb
and
insb
inc
repnz
leave
ja
add
mov
cmp
pop
pop
int3
cld
push
xchg
push
xor
int
xchg
push
xchg
nop
nop
mov
cmpsl
sbb
mov
dec
addr16
adc
out
fistl
dec
dec
bnd
and
jl
add
addr16
popa
lods
push
and
ds
and
fidivl
adc
js
cmp
fcoms
popf
mov
inc
cmp
push
ds
inc
push
jmp
push
add
icebp
mov
loope
pop
push
push
xchg
decl
mov
dec
sbb
sarb
cmp
jl
mov
mov
lret
jge
clc
daa
enter
ret
adc
jg
inc
dec
pop
out
jle
push
xchg
imul
or
push
xor
ja
xor
xlat
loopne
rol
fiadds
rcrl
sbb
jne
cwtl
fnstenv
ss
ds
add
andl
pop
mov
mov
jmp
xchg
or
les
add
imul
sti
inc
call
clc
das
stc
push
add
lea
xchg
inc
cltd
notl
push
sbb
push
pop
sub
add
loope
divb
cmp
add
jmp
cmp
mov
hlt
rolb
sub
sub
jmp
fwait
loopne
test
repnz
adc
and
mov
sub
js
jnp
sub
sub
jnp
add
loopne
push
push
in
das
mov
dec
or
rep
adc
or
jmp
mov
daa
sub
add
push
add
push
adc
sub
lds
mov
mov
pop
add
dec
add
xchg
or
icebp
das
and
mov
adcb
stos
js
movsb
mov
sahf
pop
inc
sbb
test
xchg
icebp
push
jo
push
pop
mov
add
popf
and
push
mov
or
push
dec
mov
push
icebp
mov
cwtl
cmpl
outsb
loopne
sbb
push
sub
lock
fidivs
adc
nop
movsb
mov
pop
fwait
sbb
cmp
push
add
push
or
jge
insl
jne
jmp
cmp
push
jne
inc
aas
push
mov
jmp
and
mov
jmp
pusha
xchg
xchg
dec
or
insl
adc
jmp
pusha
cmc
pop
sub
cmp
daa
pop
add
rclb
or
scas
test
adc
pop
inc
call
pop
sbb
and
add
add
add
mov
dec
jmp
adc
mov
xchg
dec
sub
xchg
gs
in
adc
das
jmp
pop
adc
out
sahf
push
outsl
call
add
lock
push
mov
mov
add
cmp
jge
push
push
mov
rclb
or
imul
or
xchg
push
stos
pop
dec
pop
ljmp
dec
and
cmp
std
push
jae
adc
ficomps
testb
mov
push
mov
mov
or
pop
sbb
lahf
addl
aas
pop
push
jecxz
jecxz
rorb
xor
add
jae
jo
and
sbb
or
sbb
aaa
inc
or
push
sbbl
daa
adc
rolb
mov
out
das
or
mov
jg
sub
add
into
add
ljmp
aas
shr
or
mov
xlat
mov
shr
roll
or
pop
arpl
aas
div
sub
out
jmp
inc
imul
in
or
out
shr
or
push
aas
mov
loopne
out
adc
mov
jnp
dec
inc
adc
nop
incb
adc
lea
movsl
movsl
push
add
fs
testl
dec
mov
imul
jbe
hlt
mov
adc
nop
sbb
out
xorb
pop
dec
test
pop
cmp
aas
dec
add
mov
incl
pop
shr
out
adc
loope
mov
push
lock
add
rcr
testb
mov
lret
cmp
mov
jmp
jecxz
data16
dec
out
push
inc
enter
and
rcrb
rclb
mov
fdivrl
gs
loopne
out
and
sub
pop
shlb
cwtl
and
or
pop
or
lret
push
inc
jmp
push
pop
cmpl
or
xchg
decb
pop
ds
jnp
xor
pop
pop
std
or
jg
popa
sbb
pop
cmp
lock
aas
adc
xchg
decb
je
test
add
sbb
stc
mov
out
lcall
rcr
adc
mov
jle
xchg
aam
mov
xchg
xchg
fbstp
or
push
inc
jle
gs
sbb
adc
gs
xchg
sti
dec
push
cmovp
dec
pop
add
cwtl
push
lcall
cli
pop
leave
sarb
out
xor
lea
inc
jmp
cwtl
sbb
jae
mov
orb
and
add
fcoms
mov
mov
dec
dec
into
mov
sbb
repz
mov
pusha
js
add
mov
jb
or
dec
add
mov
ljmp
xchg
dec
push
dec
adc
adc
inc
je
push
ficomps
jmp
mov
cwtl
add
add
fs
jmp
test
push
or
pop
dec
sti
ret
clc
adc
jmp
cmp
scas
ja
cmp
je
mov
lret
push
dec
sbb
pop
pop
dec
pop
pop
and
decl
and
xchg
cs
mov
testb
jo
leave
sbb
mov
lea
cmp
test
mov
cmpsl
mov
outsl
rorb
push
cs
or
xor
mov
call
je
sbb
cld
jbe
cmpb
jl
incb
fld
push
popa
hlt
jbe
inc
dec
adc
jns
xchg
xchg
ficoms
sub
out
fistps
sub
test
in
inc
loope
dec
lret
jge
mov
not
add
loopne
faddl
addb
sub
cmp
rolb
cmp
popa
movsl
adc
leave
aam
xor
mov
dec
mov
cmpsl
mov
pop
cmp
adc
sti
adcl
out
rclb
lret
jno
insb
daa
cmc
xchg
jmp
adc
push
jg
test
sahf
in
lds
jno
mov
mov
pop
fwait
inc
or
mov
inc
fisttpll
jne
or
subl
shrl
inc
xor
cmpsb
fisubs
dec
sbb
pop
ljmp
mov
mov
test
leave
push
dec
sarl
out
call
jmp
or
sti
out
aas
jecxz
sahf
jmp
addr16
add
or
adc
push
sbbb
sbb
dec
mov
andw
xor
add
add
comiss
data16
mov
push
mov
rorl
xchg
add
shl
jl
push
add
divl
pop
adc
sub
inc
jne
scas
jns
fisubrs
xor
and
sbb
add
add
jle
mov
add
movzwl
cmc
aas
jo
iret
inc
jmp
dec
push
out
or
sub
lods
pushw
test
decl
mov
dec
mov
lea
clc
add
jge
movswl
jae
sub
mov
cli
aas
jb
mov
fstpt
mov
sbb
xor
adc
push
daa
enter
jle
mov
and
pop
pop
jmp
and
mov
adc
inc
cli
adc
cld
push
pop
jne
mov
inc
jge
pop
neg
sub
and
push
out
jnp
xor
por
inc
mov
push
mov
dec
mov
movsl
movsl
dec
stos
ret
mov
sbb
pop
jne
jbe
sub
out
loop
xchg
decl
jne
cmp
xlat
mov
popl
cmp
dec
add
xor
pslld
push
ja
das
dec
jmp
pop
inc
lcallw
add
and
sub
sub
mov
add
test
xor
inc
repz
lods
pop
hlt
flds
add
imul
test
roll
mov
mov
fstps
mov
sbb
testb
adc
xlat
jo
iret
mov
in
imul
adc
adc
mov
xchg
fbld
mov
cmp
cmp
mov
xor
or
or
inc
cmp
adc
test
enter
rorl
das
pop
dec
adc
mov
bound
decl
repnz
add
or
outsb
lods
jne
or
sbb
or
mov
test
sbb
inc
jbe
insl
and
repz
js
lock
mov
push
dec
imul
mov
leave
stc
mov
ret
and
adc
std
and
jae
andb
mov
stos
ss
jne
mov
mov
or
ja
pop
rcll
jmp
lret
pop
pop
or
push
cmp
xchg
cmp
iret
leave
mov
add
mov
cs
or
lock
and
cmp
or
shlb
rcrb
xchg
jno
loope
pop
rcl
cmp
movsl
xor
or
ret
jno
inc
or
ret
pop
subl
loope
jne
and
orl
andl
cmp
mov
orb
push
mov
pop
insl
mov
jg
or
pop
fsubr
jge
in
and
insl
popf
test
fsubrp
addl
aad
mov
mov
test
test
sbb
inc
ja
arpl
fisubrs
adc
sbb
ret
or
mov
push
jmp
xchg
por
or
int
ficoms
jae
loope
and
fimuls
movl
xchg
divl
add
in
sbb
add
jmp
sbb
ret
inc
arpl
outsb
add
xor
push
mov
lods
xchg
popa
jmp
cmp
je
jge
or
int
mov
pop
int
fldcw
or
cmp
cs
outsl
addl
cwtl
cmp
dec
pop
std
scas
dec
cmpl
pop
push
rolb
idiv
pop
or
mov
jne
in
test
jle
ret
cmpsl
or
cmp
adc
jae
js
sub
add
in
aas
adc
data16
pop
sarb
sub
or
push
cltd
push
test
sbb
cmp
lods
daa
jg
insl
iret
adc
out
je
jne
js
das
cmp
and
xchg
inc
sub
lea
mov
push
mov
pop
adc
jne
sub
pop
into
and
cmc
mov
inc
xchg
jp
out
pop
jne
push
mov
cld
pxor
and
cmp
and
sbb
inc
loop
cmp
inc
mov
jle
stos
adc
xor
outsb
dec
inc
sub
mov
mov
adc
inc
sarl
mov
add
sub
lods
pop
repz
cwtl
xorl
lods
pop
lea
ss
jg
xor
es
mov
push
imull
push
inc
xchg
les
jb
cmp
lret
lret
repz
daa
popa
inc
push
ds
push
sbb
or
cmp
jbe
inc
and
or
push
movsl
jp
popa
movsl
popf
mov
sbb
jbe
mov
pop
and
nop
enter
test
inc
xorb
sbb
xor
inc
aaa
bound
push
inc
xor
sbb
enter
jg
push
jo
rcr
mov
icebp
jo
xchg
out
repnz
mov
dec
lea
mov
jmp
insl
arpl
dec
insl
arpl
scas
push
sub
test
sarb
mov
sub
sbb
pop
push
push
push
mov
test
pop
decl
daa
ret
and
sti
out
imul
jg
sete
cmp
push
imul
loope
sti
mov
push
xchg
je
sbb
adc
mov
test
add
neg
cwtl
imul
jne
xor
sub
sub
add
ret
dec
ds
adc
loope
sub
aas
inc
ds
xor
xor
das
movsl
icebp
mov
cmp
lods
sub
pop
das
sub
inc
jmp
adc
add
loopne
and
xor
xor
xchg
jne
xchg
xchg
fdivrp
mov
push
fimull
jae
loopne
or
xchg
pop
pop
or
andl
and
xlat
popa
mov
inc
adc
add
and
je
cs
daa
pusha
imul
pop
sub
pop
inc
arpl
pop
xchg
inc
neg
sbb
not
and
xlat
sbb
lret
mov
pop
ret
sub
imul
mov
mov
mov
mov
sbb
add
cmpsl
test
bnd
pop
sbb
stos
leave
xchg
nop
xor
xor
je
mov
and
test
scas
ds
loopne
add
jmp
insb
lods
or
mov
push
pop
dec
fbld
adc
adc
push
and
sub
fld
sub
jo
pop
inc
jne
out
enter
sbbl
adc
add
movsl
data16
xlat
add
aam
xchg
lds
rolb
mov
ret
test
jmp
and
cmp
or
jmp
mov
adcl
inc
mov
sub
ret
cmp
sbb
adc
adc
mov
adc
gs
int3
add
and
and
cmpb
xlat
cmp
push
outsb
jmp
mov
cmp
ja
or
add
and
ss
jmp
add
pop
add
arpl
cmp
pop
in
cmp
je
jmp
testb
push
inc
push
inc
dec
or
enter
sbb
inc
push
inc
pop
pop
shl
add
or
test
enter
shll
out
nop
shll
or
leave
aad
fldcw
fistl
dec
out
adc
dec
scas
jae
loop
mov
add
xor
xchg
pushf
decb
or
or
leave
add
jge
push
je
dec
fisubrs
insl
or
leave
shrb
int
fwait
mov
pop
push
push
mov
nop
push
mov
push
dec
dec
ds
mov
jae
add
mov
xchg
ret
je
cmp
xchg
je
jne
add
ret
dec
pop
add
std
or
jns
xor
clc
in
or
divb
xchg
lods
in
pop
stos
sbb
lods
movsb
mov
xchg
push
bound
mov
cmc
and
cmp
adc
xchg
fstp
lods
imulb
divb
je
push
push
stos
xchg
jno
xor
pusha
add
bts
cmc
cmp
sub
xchg
adc
push
inc
inc
in
gs
and
psrld
sub
int
lea
sbb
pop
sar
inc
sbb
mov
push
push
adc
xor
pop
pop
pop
and
cld
push
add
or
mov
gs
or
test
call
nop
xchg
pop
cmp
push
cmp
jb,pn
add
inc
mov
add
and
fcompl
shlb
sbb
jl
and
jge
push
and
aam
fisubs
test
aam
aad
add
cmp
subl
mov
test
mov
bound
cwtl
xor
xchg
mov
cmp
lea
insl
push
jnp
leave
shlb
jmp
in
outsb
mov
mov
sbb
add
and
daa
fst
lahf
loopne
inc
mov
jg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
mov
hlt
inc
test
adcl
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
lcall
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
pop
dec
dec
sbb
data16
inc
fdivl
jno
add
ljmp
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
mov
cwtl
push
loope
or
insl
or
pop
arpl
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
aas
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
incl
mov
insb
mov
mov
lcall
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
add
incl
imul
xorb
sbb
push
imul
aam
loopne
decl
xor
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
cmp
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
and
inc
lret
pop
or
aas
cli
call
lcall
clc
sar
imul
push
js
or
push
cmp
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
dec
loop
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
sbbl
mov
push
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
jns
out
add
dec
sahf
inc
add
push
push
add
scas
lret
lret
push
add
add
add
pushl
add
and
cmp
pop
or
aaa
xor
push
push
pop
fwait
outsl
fisubrs
or
pusha
add
jo
js
pop
lcall
add
sbb
sub
outsb
add
fcmovne
fiaddl
insb
add
repz
insb
insb
adc
pop
inc
dec
dec
inc
inc
dec
pop
dec
cmp
push
pop
push
inc
dec
inc
inc
push
inc
inc
cs
push
push
inc
push
push
or
aas
cmpb
fistl
push
cmp
inc
inc
dec
jae
jb
arpl
jae
jb
gs
je
jb
pusha
mov
outsb
je
dec
inc
push
dec
xorl
adc
sub
pop
push
pop
fidivrl
push
push
adc
adc
imul
and
mov
push
push
std
rcr
sbb
dec
inc
sbb
inc
repnz
fisubl
xor
adc
insb
mov
inc
imul
sbb
lahf
mov
push
jo
dec
aaa
outsb
outsl
je
or
mov
push
arpl
out
insb
cmpsl
imul
sbb
ss
leave
push
jae
fs
aaa
push
and
jb
inc
addr16
arpl
and
insb
push
mov
aaa
pop
push
gs
das
mov
mov
les
jo
mov
sub
push
fs
push
xchg
outsb
xor
lea
cltd
xor
push
inc
scas
inc
aaa
insl
leave
fistpll
test
jb
pop
insb
outsl
arpl
mov
sbb
imul
pop
add
add
loope
pop
jo
addr16
insl
inc
xchg
insl
insl
pop
xchg
pop
xor
lahf
and
push
insl
ficomps
lock
addr16
jae
push
xor
mov
outsb
addr16
and
sbb
decl
shll
mov
sub
jae
inc
sub
and
loope
mov
jb
jns
or
inc
mov
and
push
test
iret
push
and
dec
pop
imul
jne
loop
mov
rorl
pop
jg
push
xor
gs
or
cmpsl
call
inc
jb
push
popa
sahf
lods
outsb
dec
jecxz
xchg
or
dec
add
push
mov
dec
xor
jbe
aas
xchg
push
pop
pop
pop
jne
std
inc
gs
popa
or
out
loopne
std
add
push
shll
out
push
or
gs
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
xchg
lret
addr16
lret
add
push
push
cmp
cmp
lret
sbbl
sbb
sbb
sbb
lret
xchg
lret
clc
sbb
pop
push
add
mov
das
or
lods
inc
add
add
lret
and
adc
inc
add
xor
or
decl
mov
xchg
mov
xor
sbb
pop
frstor
loopne
and
inc
js
insb
outsl
imul
pushw
jo
das
das
sbb
add
push
mov
jae
gs
insb
xor
xor
fisttpl
and
ret
cmc
sub
or
ljmp
pop
dec
xor
mov
xorb
loop
jae
jg
test
cltd
cltd
ret
and
cltd
adc
incl
adc
ljmp
or
mov
lea
adc
sti
pushl
xchg
shrb
xchg
rol
pop
popf
fdivrl
adc
mov
lcall
js
pop
stos
push
call
xchg
sbb
cmpsl
mov
arpl
outsb
sbb
adc
lcall
xchg
lret
iret
data16
ficomps
mov
and
cwtl
repz
sub
fdivrp
ljmp
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
xor
dec
leave
leave
sbb
adc
inc
xor
adc
fbld
xchg
movsl
fstps
mov
xchg
adc
mov
iret
lret
dec
pop
fisubs
movsl
jb
leave
pop
jno
xor
dec
jg
enter
ret
shlb
ja
jno
addr16
in
dec
jmp
cli
fdivr
std
jmp
ljmp
in
cld
sbb
cltd
fsub
lock
sti
jmp
xor
idiv
std
aad
sti
jmp
jmp
xor
ljmp
fistpll
cmp
xchg
sti
lock
cmc
lock
cltd
clc
cli
arpl
in
cltd
mov
dec
dec
dec
dec
push
dec
xor
xor
jg
shll
pusha
mov
jae
pop
xor
cs
insb
ljmp
fmuls
push
das
mov
outsl
insl
arpl
xor
add
or
pop
push
aaa
sti
jnp
jno
ret
in
pop
aad
ja
fs
jo
iret
add
pop
inc
xor
pop
push
fcmovne
sub
dec
push
xor
ja
or
add
gs
adc
les
jne
es
gs
bound
outsb
gs
jae
jb
add
arpl
stc
fistps
test
arpl
and
mov
popf
mov
jne
arpl
xor
ds
std
aas
adc
adc
insb
jae
arpl
gs
mov
jno
imul
mov
and
sbb
je
push
shr
imul
inc
clc
jbe
loope
outsb
outsb
das
je
das
xor
aaa
outsl
pusha
jg
pop
xor
xor
xor
cs
add
negb
outsb
push
jp
jo
xor
xor
add
ss
xor
xor
cmp
insl
popa
dec
cmp
push
test
push
dec
mov
cmp
mov
or
adc
jg
push
rclb
mov
add
mov
mov
lahf
call
dec
pusha
add
jb
lods
popf
sahf
add
add
add
add
xor
xor
std
addr16
dec
inc
fs
mov
pusha
pop
or
hlt
mov
xchg
adcb
adc
outsb
jb
arpl
add
inc
push
inc
addr16
stc
mov
or
mov
push
add
shll
lahf
xor
packssdw
sub
add
or
jp
enter
fdiv
add
mov
pop
inc
les
int
fs
xchg
out
inc
sbb
xor
xor
and
stos
out
push
pop
xor
cmpsb
nop
inc
and
test
sub
scas
push
dec
mov
or
es
cmp
data16
or
adc
mov
push
vmread
or
shl
jmp
xchg
cwtl
dec
rclb
test
dec
stos
adc
mov
or
sbb
flds
punpcklbw
out
rolb
xchg
movl
push
jmp
mov
jp
add
add
mov
or
and
or
add
loopne
int3
xchg
adc
cs
dec
push
insb
pusha
inc
shll
scas
or
out
add
inc
add
push
xor
in
adc
stos
ss
add
shr
mull
add
das
and
mov
or
add
sub
jmp
sti
pop
push
pop
into
int3
loopne
jg
loopne
mov
push
cmp
fstpl
add
push
aad
or
inc
push
push
arpl
xor
inc
cmp
popa
outsb
jae
push
pop
jo
je
push
arpl
mov
pop
jo
jo
pop
gs
popa
jo
ja
or
xor
inc
cmpl
cmpl
jne
add
jle
jmp
nop
add
in
or
jle
aaa
xlat
xor
aad
sub
xor
inc
push
pop
pop
jmp
idiv
pop
addl
xchg
mov
ja
mov
sysret
cmc
pushl
cld
ja
dec
dec
push
dec
push
inc
inc
pop
and
das
icebp
daa
jle
jg
add
mov
pop
or
jns
xchg
cs
pop
dec
aas
jmp
movsl
and
std
cmp
pop
mov
or
fsts
outsb
push
popf
cli
test
icebp
fistpl
jmp
mull
adc
sbb
jne
dec
icebp
iret
lcall
movsb
flds
adc
notl
inc
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
dec
cli
or
ljmp
movsl
mov
out
jg
fs
fnstsw
movsb
adc
mov
adc
repnz
outsb
sub
leave
enter
pop
out
test
ljmp
data16
lcall
fsubl
lcall
lods
mov
rcr
xor
popa
xchg
daa
mov
push
xchg
sub
inc
fnstenv
mov
adc
mov
xchg
rclb
test
fnstsw
fistps
pop
jno
add
xlat
xchg
jne
sub
add
lcall
push
je
mov
jne
xor
jle
pop
loopne
cmpl
jg
das
add
mov
in
or
mov
jno
jne
dec
or
popa
movsl
shl
lcall
fcos
popa
xor
push
cmpsb
mov
test
cmpsl
enter
subl
jge
arpl
xor
es
cmc
imul
mov
push
sarb
pop
test
push
dec
inc
jb
daa
add
enter
bound
add
cmc
call
and
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
repz
enter
dec
add
sti
out
ret
or
imul
jne
sbb
dec
sbb
inc
xor
xor
dec
push
and
xor
mov
movsb
push
jae
or
sti
movsl
jecxz
incl
add
or
push
out
push
sbb
mov
push
adc
orb
packuswb
call
mov
add
icebp
pop
call
adc
cmp
inc
xchg
ret
dec
add
cmpb
pop
or
fisubl
dec
xor
push
lahf
add
add
ss
inc
inc
inc
cmovo
fnstenv
add
adc
add
or
lcall
jge
sbb
repnz
sbb
scas
xor
lret
sub
pusha
and
and
incl
jp
fidivrs
lcall
out
xor
aas
add
in
mov
add
xchg
push
jnp
jmp
sub
or
xor
adc
sbb
push
push
insb
mov
iret
mov
xchg
fistps
push
mov
sahf
aaa
mov
es
mov
mov
adc
or
add
push
sbb
or
mov
adc
fldcw
cmc
dec
or
jl
xchg
hlt
pusha
mov
in
or
or
in
cmp
or
or
in
test
xchg
adc
scas
jl
inc
mov
rol
das
jbe
inc
js
adc
stos
pop
cmpsb
jmp
sahf
adc
das
decb
pop
or
mov
sbb
in
lock
cmpsl
mov
mov
repnz
lods
or
or
fcomps
add
enter
je
leave
xchg
pop
add
push
test
insb
shrd
mov
lcall
xchg
push
popf
lods
mov
add
jmp
mov
ss
mov
pop
std
push
sbb
in
jae
pop
and
add
sbb
mov
in
add
ja
imul
orl
cmp
adc
clc
or
outsb
arpl
push
popa
data16
push
xor
add
insl
addb
je
or
sub
loopne
aam
pop
imul
xor
in
mov
scas
add
and
mov
cmp
and
insl
add
loop
or
or
pop
inc
inc
and
sub
arpl
arpl
jae
gs
and
and
std
sbb
and
inc
push
dec
fdivrl
push
cmp
popa
jge
push
and
nop
fnstsw
push
dec
inc
adc
push
push
or
fsubs
out
sahf
jg
sti
dec
outsl
je
sub
sahf
mov
loopne
lahf
lcall
xchg
or
adc
xchg
sbb
and
ja
jb
pop
pop
cli
imul
arpl
ja
pop
lock
pop
jae
ret
xor
outsb
je
cmp
inc
and
sbb
sbb
pop
lahf
jnp
xchg
ret
arpl
push
inc
pusha
mov
pop
into
or
xor
xor
jl
imul
xor
addb
dec
out
adc
sub
jge
sysenter
pop
or
gs
pop
pop
lock
lods
jb
xor
arpl
cs
std
outsl
push
lock
dec
dec
and
push
imul
das
lahf
pop
inc
inc
pop
inc
outsl
xchg
push
scas
outsl
xor
xor
xor
lods
lods
jbe
sbb
xor
cld
into
idivb
pop
outsl
jne
insb
imul
and
and
mov
je
popa
and
mov
push
sbb
fwait
daa
clc
lock
xor
push
push
inc
add
push
out
out
enter
out
xor
xor
xor
ss
cmp
aaa
jge
mov
xor
sbb
add
bound
jbe
adc
rclb
inc
pop
pop
fiaddl
sbb
jae
dec
inc
test
fadds
mov
jns
inc
in
cld
push
cmp
adc
push
ja
mov
inc
mov
mov
cmpsl
xor
enter
add
pusha
sub
adc
ja
in
es
xor
xor
int3
cs
add
adc
sbb
ja
imul
and
outsl
dec
dec
push
xor
add
and
jno
in
mov
mov
add
cmp
push
adc
bound
dec
outsb
arpl
xchg
adcl
add
jns
adc
aaa
or
ret
call
inc
mov
scas
adc
shrb
add
cmp
pop
andb
pushf
subb
or
insb
mov
and
filds
or
je
jne
outsb
jo
push
push
dec
mov
mov
cmc
jne
push
push
stos
test
insb
lret
or
jg
adc
xchg
cmp
pop
mov
push
mov
adc
or
popa
outsb
xor
nop
lret
add
and
dec
outsb
mov
adc
or
jb
push
inc
add
add
add
sbb
das
cld
and
popa
insb
jne
sbb
sbb
sub
pop
push
inc
cmp
dec
shll
push
pop
in
push
mov
inc
aaa
push
arpl
pcmpeqd
popa
jp
outsl
inc
jne
mov
jbe
pop
dec
push
adc
inc
enter
jmp
mov
sub
cmp
out
ds
pop
mov
or
sbb
test
ja
lea
imul
pop
pop
rclb
into
xchg
lret
push
js
mov
ret
push
mov
je
adc
adc
mov
punpckldq
or
lods
pusha
rcrl
inc
sbb
pop
aaa
cs
mov
or
ljmp
push
lret
xlat
sub
pop
cs
leave
outsl
pop
fcompl
xchg
mov
mov
fnstenv
sub
imul
js
andw
or
int
fadds
mull
xlat
dec
movsl
lods
insl
arpl
ret
lcall
xor
lods
pop
add
mov
jecxz
add
pop
inc
dec
arpl
outsb
out
pop
sub
sub
cmp
das
mov
mov
push
fistl
iret
dec
jb
daa
and
clc
fidivl
cmp
das
inc
gs
jle
xor
scas
adcb
decb
add
inc
dec
push
push
dec
inc
pop
add
xchg
lods
int
ss
movsb
imul
adc
test
in
loopne
int3
test
xor
test
js
shlb
rcrb
sbb
testb
test
add
and
cmpsb
cwtl
mov
inc
sbb
das
in
adc
xor
pop
mov
add
and
dec
push
or
andb
push
and
addl
sbbl
cs
enter
js
push
sbb
or
sarb
dec
mov
xchg
jle
jle
in
rcrb
pop
push
push
xor
lock
and
pop
in
aam
das
mov
or
xor
jl
and
repnz
mov
xor
or
fs
in
or
fdivrs
jnp
in
in
dec
xchg
jnp
das
pop
inc
xchg
jnp
adc
pop
enter
jp
fwait
and
fs
nop
je
jp
int
sub
sub
cmpsb
imul
lcall
xor
nop
daa
xchg
and
mov
aam
cli
dec
gs
cmp
xor
dec
imul
or
gs
mov
sbb
ret
push
loopne
mov
outsl
xor
mov
jo
aas
mov
add
xor
outsb
adc
add
arpl
cs
add
daa
dec
outsl
arpl
and
jnp
out
sub
push
dec
pop
imul
sbb
jnp
insl
stos
insl
data16
jo
push
bound
push
mov
jo
mov
fs
cs
fucom
lea
lods
jmp
dec
dec
and
xchg
dec
gs
jbe
pop
into
sbb
out
insb
insb
push
add
jmp
xchg
mov
imul
add
in
orl
xor
pop
cmp
notb
scas
dec
shll
mov
sub
shlb
outsl
push
pop
jecxz
inc
push
cmpsb
sub
jne
notl
ss
addr16
push
mov
dec
pop
aas
push
fwait
les
sub
fidivl
and
lret
dec
js
or
push
sub
mov
push
mov
push
xor
mov
bound
pop
clc
xlat
push
xchg
mov
jmp
sub
cmp
push
mov
ja
push
shll
and
je
or
lahf
bound
inc
push
inc
dec
push
dec
dec
inc
dec
inc
outsl
adc
inc
mov
dec
loop
jp
mov
inc
insb
aaa
out
jnp
lock
imul
movsl
jo
adc
pusha
insl
pop
arpl
ud1
xor
sub
mov
sbb
xor
fiaddl
xchg
jge
dec
inc
inc
mov
imul
xor
loop
nop
xor
mov
and
cmp
insb
scas
fs
push
inc
inc
dec
inc
rclb
push
pop
mov
scas
mov
aad
rolb
inc
adc
adc
adc
or
into
lret
jnp
pop
mov
jns
jg
inc
cmc
pop
adc
jb
jne
pop
dec
jo
pop
dec
and
aam
outsb
orb
insl
lods
push
push
sbb
js
add
cmp
push
rcl
cltd
cmpsl
fiaddl
inc
jb
add
imul
les
add
lahf
add
pop
ljmp
inc
xchg
bound
jbe
mov
mov
rclb
push
sbb
push
insb
mov
test
dec
mov
test
dec
outsl
pushf
mov
cmp
imul
mov
pop
jbe
sbb
and
pop
lods
xorb
fildll
mov
lahf
popa
inc
sti
imul
gs
cltd
je
mov
arpl
push
mov
inc
add
cmp
jmp
icebp
add
cmp
or
ficomps
jmp
xor
mov
push
dec
dec
das
mov
test
andb
sub
push
push
setg
fists
mov
cmp
adc
lahf
popf
testb
mov
mov
movsb
mov
bound
and
sub
inc
dec
and
test
and
movsb
or
imul
rolb
outsb
daa
sub
dec
loope
nop
sbb
xor
les
pop
inc
std
scas
popf
clc
ljmp
xor
out
jo
jae
push
arpl
sub
ja
or
mov
sbb
les
mov
dec
orl
imul
push
xor
jnp
sbb
outsb
imul
pop
push
and
lea
outsl
add
negb
mov
addr16
and
rol
cltd
imul
mov
stos
fbstp
xor
push
and
push
in
lcall
jb
pushf
pop
dec
outsl
push
outsl
outsl
inc
push
or
or
pop
mov
and
dec
imul
pop
inc
fimull
xor
loop
pop
mov
dec
push
or
ja
jno
les
dec
xlat
push
mov
lods
outsl
jne
inc
cmp
sbb
pusha
mov
jg
mov
js
test
sub
inc
mov
push
xor
jg
pop
ret
or
sub
test
xchg
les
mov
nop
dec
xchg
cwtl
in
dec
fwait
popa
add
jp
outsl
je
rep
add
xor
addr16
sub
push
push
jb
push
mov
jle
cs
push
and
das
push
dec
add
pop
ja
sbb
scas
xorl
in
and
add
imul
inc
dec
inc
cmpsb
add
xchg
pop
mov
xchg
fsubrs
xchg
mov
bound
inc
inc
fimull
dec
or
push
mov
adc
fwait
jecxz
es
insb
jg
sbb
push
push
aas
pushfw
and
push
or
sub
add
push
shrl
imul
loopne
imul
gs
sahf
adc
push
loopne
cmp
inc
das
jae
arpl
mov
fs
test
shll
dec
pop
push
or
jbe
add
jae
outsb
ja
push
add
sub
xchg
inc
xlat
pop
jo
loope
push
dec
adc
dec
push
mov
push
jo
mov
sbb
xchg
gs
imul
push
inc
xor
xor
rolb
mov
test
ja
mov
fsubrs
mov
cmpsl
lock
cmp
movsb
pop
and
mov
sub
sub
or
add
orl
popa
aaa
dec
inc
or
outsb
mov
mov
push
jno
xchg
dec
cltd
insb
fs
out
cs
cmpb
cmp
out
add
mov
xor
fs
pop
popa
jle
dec
push
inc
dec
add
nop
loope
outsb
loope
js
daa
call
jb
scas
inc
mov
mov
sbb
or
adc
jp
cs
pop
rorb
or
iret
aad
data16
inc
cmp
inc
dec
or
sbb
lret
test
inc
aas
movb
scas
idivl
adc
pop
pop
sub
es
dec
push
inc
push
push
cmp
es
bound
push
data16
pop
sbb
rclb
je
addr16
sarb
cs
mov
push
imul
subb
or
or
ret
shrb
jne
sub
in
test
insl
pop
clc
ret
cmp
out
daa
push
arpl
adc
icebp
cmp
pop
push
add
push
pop
or
fildl
mov
insl
dec
out
das
dec
es
adc
call
je
std
sbb
lds
fdivr
or
xor
push
dec
hlt
or
sub
inc
jne
xor
sbbb
sub
aaa
dec
arpl
xorl
sub
and
ss
std
pop
mov
cs
inc
outsl
lds
dec
daa
sbb
ljmp
int
dec
ret
push
fwait
mov
jo
jne
jne
pop
inc
popa
inc
scas
push
push
cmpsb
andl
add
adc
add
push
iret
dec
das
inc
mov
dec
add
cmpb
scas
mov
adc
add
enter
xchg
add
out
aas
mov
mov
push
xchg
lret
adc
or
mov
pushl
lds
jns
or
mov
inc
cmp
mov
xor
loop
xchg
mov
add
clc
mov
xor
or
adc
and
push
aad
out
ss
outsb
test
xor
mov
pop
pop
mov
neg
push
push
push
push
mov
dec
push
push
iret
jne
mov
data16
cmp
add
bound
daa
sub
sub
sbb
mov
scas
add
in
shlb
dec
push
inc
mov
and
pusha
in
mov
popl
not
push
mov
jns
xor
int
sub
inc
pop
dec
das
inc
inc
inc
clc
and
push
pop
push
inc
xor
and
sbb
xchg
gs
inc
in
sub
scas
mov
push
outsb
jns
je
xchg
push
mov
shlb
dec
fildl
imulb
push
xor
xor
pop
dec
adc
xchg
mov
fnstcw
lahf
hlt
and
sub
ja
push
or
mov
test
mov
je
mov
adc
aaa
and
loope
int3
lahf
jl
push
lea
dec
push
mov
jo
loopne
insl
jns
fnstsw
ljmp
sub
add
sub
jae
add
into
adc
js
stc
imul
xor
jb
sbb
lea
or
and
insl
icebp
or
imul
loopne
push
or
into
xlat
les
mov
dec
mov
adc
dec
imul
fs
push
xor
xchg
inc
cmpsl
or
lock
add
dec
inc
shrl
dec
cmp
cmp
dec
cmp
aaa
push
fs
add
jns
jno
push
push
or
imul
xor
push
adc
icebp
mov
push
mov
and
dec
mov
push
imul
or
test
dec
gs
fcompl
pop
imul
xor
sarl
inc
and
dec
push
mov
and
and
cmp
sub
iret
jle
out
sub
inc
adc
inc
push
sbb
mov
adc
dec
dec
mov
mov
adc
enter
bound
fstl
das
sub
mov
ss
add
xor
inc
jo
add
dec
sub
nop
pusha
pop
jns
and
addb
or
or
dec
push
gs
int
mov
cmpsl
inc
ds
das
or
jnp
loope
es
cmp
nop
xchg
jae
orl
sbb
stos
lock
repnz
shrl
scas
xor
sbb
jle
das
out
mov
xor
sbb
out
lods
or
idivb
xchg
xchg
xor
cmp
xor
inc
adc
or
or
pop
adc
or
icebp
sbbb
adcl
nop
inc
lea
push
lea
nop
sub
pop
test
imul
inc
push
adc
dec
and
icebp
rclb
push
inc
popf
cmc
pusha
inc
xlat
imul
ljmp
push
test
jnp
ljmp
fwait
xor
push
cmovne
dec
push
dec
push
mov
jge
ret
and
push
shrb
inc
les
or
mov
fisttpll
addr16
dec
lods
adc
inc
dec
push
jno
xor
popa
jae
cmp
mov
mov
mov
test
push
daa
add
mov
mov
sbb
shll
sub
cltd
pop
dec
inc
pop
movsb
xor
pop
mov
mov
iret
inc
test
jo
loop
add
sub
adc
rcrb
arpl
fsubl
insl
loopne
aas
push
mov
pop
bound
int
xor
nop
in
and
or
inc
push
inc
pop
pop
sti
mov
or
enter
jb
enter
xor
leave
leave
enter
xor
enter
jbe
enter
aaa
ja
leave
leave
enter
cmp
leave
dec
jnp
jns
xor
daa
jp
leave
enter
jnp
imul
add
ja
fwait
mov
xor
fwait
mov
xor
inc
fidivs
and
es
sbb
es
dec
xchg
es
pop
es
insl
xchg
pop
sub
pop
jns
and
sub
pop
sub
cmp
mov
push
cmp
sub
cs
movsl
jne
pop
or
mov
fst
jmp
shrb
mov
ds
fistl
adc
xchg
neg
movsl
pop
ds
sbb
push
inc
notb
iret
jo
daa
fistpl
insl
xchg
cmp
movsb
cmp
popa
push
and
ja
fistpl
out
adc
mov
ret
sub
outsb
push
daa
dec
push
lcall
pop
xor
dec
adc
enter
fisubs
insb
in
je
and
adc
rcrl
adc
fistl
xlat
adc
mov
inc
mov
add
sbb
fisubrl
imul
xchg
adc
jb
sub
mov
jb
mov
cmp
fcompl
test
mov
inc
push
push
dec
pop
or
lcall
push
loopne
fisubrl
es
push
adc
insl
xor
or
imul
or
pop
or
loopne
dec
dec
inc
pop
or
sbbb
jbe
inc
inc
dec
xchg
jns
or
and
out
cmp
imul
mov
push
pop
or
into
es
dec
daa
push
inc
dec
add
pop
scas
insl
lock
pop
or
test
adc
xchg
xchg
outsl
das
xor
insl
mov
and
pusha
xchg
pop
fmull
aaa
or
popa
inc
sbb
xor
sbb
xor
fs
inc
gs
es
fnsave
fistpll
insl
leave
and
dec
cmp
dec
or
xchg
inc
pop
aam
mov
movb
xchg
pop
inc
mov
out
bound
sub
test
xchg
mov
xor
inc
push
push
fs
aam
arpl
inc
cmp
dec
rorb
loop
jecxz
addb
fcmove
add
inc
adc
gs
dec
addl
popa
jbe
inc
mov
rorb
insl
cmp
lcall
inc
gs
sub
pop
sub
and
popa
cmp
or
pop
les
je
outsb
jbe
je
jb
push
mov
inc
arpl
push
dec
adc
rorl
dec
outsl
push
data16
xor
in
lods
lods
gs
popa
outsl
pusha
jo
pop
inc
jmp
ja
and
daa
adc
xorl
sti
lods
xchg
fsubs
daa
push
insl
jo
mov
adc
inc
inc
cwtl
sbb
pop
adc
and
xchg
mov
jo
insb
jo
icebp
arpl
pop
inc
outsb
jae
leave
xchg
dec
cmp
push
sub
xchg
jnp
inc
aas
cs
pop
pop
mov
jecxz
add
fisubrl
add
mov
insl
aas
pop
mov
inc
enter
lods
pop
in
push
and
iret
scas
popl
push
or
and
gs
outsl
bound
and
pop
rclb
cmovb
and
das
dec
arpl
testb
jnp
inc
mov
pop
cmp
pop
inc
push
icebp
jge
cmp
sarb
imul
dec
std
daa
insb
popa
das
xor
sub
and
or
aam
les
xchg
daa
push
pop
arpl
mov
push
jb
insl
push
and
or
pusha
mov
inc
adc
xchg
pusha
xor
gs
mov
cs
daa
data16
ja
and
imul
idivb
aaa
push
or
rorb
xor
cmpsb
mov
push
add
loope
ret
push
xchg
iret
bound
rorb
lds
cmp
outsb
insb
push
adcb
inc
aaa
xchg
sub
cltd
xor
xchg
adc
in
pop
shlb
je
pminub
rorl
jae
push
outsb
push
push
nop
pop
inc
mov
push
xchg
adc
or
mov
pop
and
sti
ret
jo
int
sbb
push
ret
cmp
inc
cld
adc
inc
dec
jae
push
inc
push
arpl
loope,pn
push
lahf
inc
pop
aam
into
lods
dec
cmpsb
iret
mov
or
pop
inc
int
cld
adc
es
mov
xorb
inc
ss
daa
dec
frstor
add
out
mov
push
mov
pop
mov
jecxz
jbe
outsb
fisubs
fs
movsl
push
xlat
popa
inc
push
push
dec
push
push
pop
jb
stos
ret
push
loopne
jns
outsl
scas
push
int3
inc
xor
push
cli
jae
mov
mov
add
or
xchg
and
mov
sbb
push
sub
push
add
mov
push
outsl
imul
testb
jo
fs
xorl
inc
push
sbb
inc
arpl
mov
rcrl
es
out
jo
and
andb
xor
mov
int3
sbb
adc
test
scas
or
adc
stc
mov
pop
testb
inc
inc
jle
sti
nop
xchg
ret
push
cmpsl
and
js
popa
loop
push
or
or
imul
sbb
jg
or
or
fwait
popa
ja
add
lea
sbb
out
inc
adcb
sbb
pop
sbb
jb
inc
mov
lods
orl
rolb
fstpl
aad
ret
aaa
imul
fmul
jne
and
call
add
sub
xchg
mov
out
dec
jne
daa
mov
bound
cmp
xchg
pop
mov
js
sub
dec
mov
inc
popa
hlt
pop
xchg
jns
or
cmpl
push
es
inc
and
pop
inc
test
add
xchg
inc
pop
pop
cmp
inc
sbb
add
dec
mov
push
cmp
cmpsb
gs
cmpb
dec
insb
test
push
iret
xor
or
dec
rcrl
das
push
daa
insl
add
ss
xor
inc
fs
fiaddl
in
xor
dec
js
mov
divl
push
movsw
pop
std
outsl
insl
dec
push
mov
rolb
xchg
imul
test
xchg
fidivrs
and
ficoms
icebp
adc
das
arpl
add
xlat
inc
add
or
into
icebp
test
adc
std
and
mov
adc
and
js
jnp
pop
dec
jae
ss
mov
daa
outsb
scas
mov
nop
jbe
push
sbb
inc
cmp
nop
xchg
xor
and
fwait
cmpsb
imul
mov
xchg
in
xor
clts
popa
push
push
pmaxsw
jo
test
push
punpckhwd
sbb
xchg
paddusw
adc
pcmpgtd
outsl
jl
push
loope
push
jo
xchg
mov
push
sti
and
sbb
loopne
push
movb
adcb
xor
mov
mov
scas
outsb
mov
inc
or
jecxz
pop
popa
insl
out
nop
insb
mov
xchg
mov
push
popa
adcl
or
lds
mov
and
jae
bound
outsb
cmp
insb
add
and
sub
cmp
je
add
imul
outsb
xor
arpl
mov
cmp
shrb
cs
ljmp
push
inc
adc
fs
int3
push
arpl
and
jbe
aas
jo
push
mov
outsl
shrb
sbb
inc
mov
or
inc
lods
loope
xor
ljmp
inc
lret
andl
add
test
ss
inc
in
popf
or
fs
dec
popa
nop
int3
push
xchg
divb
jb
sbb
xchg
mov
adc
adc
pusha
xor
xlat
inc
add
ret
stos
fld
pop
adc
push
and
sahf
popa
insb
in
nop
push
push
cli
mov
adc
mov
mov
jecxz
jne
or
insb
nop
or
pop
xchg
sub
dec
negw
xchg
lret
arpl
pop
inc
adc
loop
insb
adc
arpl
loop
and
xchg
add
arpl
movsb
jo
pop
push
xchg
push
sub
out
das
and
or
push
pop
mov
push
dec
mov
outsl
aam
fisttps
inc
les
sbb
mov
push
push
sub
out
xchg
bound
sbb
mov
sub
xchg
jmp
andl
cmpsl
and
add
xlat
mov
popf
ret
das
pop
mov
mov
imul
pop
pop
sbb
adc
sub
sbb
mov
dec
mov
push
mov
pop
jb
push
add
xchg
inc
add
mov
push
aas
aaa
add
sbb
inc
test
add
ss
loopne
popf
sbb
jne
xor
fsts
and
movsl
lock
mov
les
or
jno
xor
xor
or
sbb
aaa
jae
sub
mov
dec
add
xor
xor
push
xchg
push
adc
mov
aaa
cmp
sbb
mov
lea
aas
scas
idivl
push
xchg
push
add
xor
addr16
mov
xchg
sarb
jns
test
daa
jge
popf
xor
xchg
jne
push
add
test
dec
dec
inc
or
add
push
data16
and
dec
push
sub
pop
mov
data16
outsb
sbb
xchg
mov
jmp
int3
test
sub
ret
daa
inc
addr16
push
mov
inc
sbb
jne
ret
lods
inc
insb
movsl
ret
mov
out
dec
insb
int3
pop
pop
xchg
inc
ljmp
out
mov
cltd
imul
and
adc
shll
jbe
popf
and
jle
cmp
test
jo
mov
aad
add
dec
subl
lods
adc
stos
push
and
or
rolb
mov
adc
adc
bound
pop
cmp
lcall
or
insb
mov
rcrl
jmp
jno
movsl
das
insl
outsb
int3
jne
lods
add
sbb
outsl
push
test
sub
mov
bound
mov
outsb
movb
push
vpcomw
es
sbb
jo
jge
jns
cmp
sub
or
test
call
xor
jae
roll
pop
outsl
pusha
test
in
add
mov
sbb
lock
jns
adc
push
jl
insl
pop
fs
fldt
movl
pop
and
cs
sbb
cltd
outsb
dec
shlb
rorl
jecxz
mov
mov
cmp
and
add
cltd
rorb
jb
and
add
inc
jne
mov
dec
movsl
jo
push
dec
xchg
test
test
mov
push
jbe
popf
pusha
and
adc
mov
mov
jbe
dec
jnp
mov
movsb
pusha
add
repz
xchg
out
mov
sbb
test
sub
push
sbb
sbb
push
push
dec
inc
dec
dec
cltd
cmovp
jns
and
cmp
arpl
stos
cs
push
imul
movl
cmp
popa
in
dec
pop
xlat
pop
push
inc
lods
sub
test
dec
mov
inc
dec
dec
and
xchg
mov
push
xchg
inc
dec
insl
sub
dec
xchg
outsb
cmpsl
test
add
int3
notb
inc
mov
or
inc
or
das
xchg
sub
inc
aas
into
aad
rolb
les
push
test
cmp
jecxz
push
jnp
or
das
sub
inc
enter
adc
test
and
pop
es
adc
test
inc
das
pop
inc
enter
aas
daa
xor
inc
enter
popa
sbb
jbe
add
sub
nop
and
and
sbb
and
fs
sub
inc
xchg
or
aas
daa
sbb
nop
pusha
jle
test
imul
nop
sub
inc
nop
and
and
pop
xchg
sub
inc
das
pop
inc
xchg
or
daa
pusha
sbb
nop
jle
cmpsb
mulb
sahf
cmc
xlat
das
and
inc
and
push
adc
and
jae
lods
mov
das
or
adc
inc
enter
js
adc
les
and
stos
lods
test
mov
das
and
adc
movsb
or
loopne
inc
pop
push
sbb
mov
dec
dec
inc
dec
pop
cs
push
inc
pusha
bound
push
out
andb
mov
lea
xor
in
push
add
fdivr
subb
popa
jns
insb
pop
add
mov
sbb
dec
das
pop
cs
add
pop
cs
dec
dec
sarl
add
outsl
imul
cltd
sbb
add
dec
inc
dec
push
daa
icebp
loope
das
push
insl
inc
inc
xchg
pushf
test
loopne
test
pop
push
jne
jo
arpl
lea
inc
jg
and
or
lea
filds
lds
xlat
mov
pop
mov
xor
cmp
or
pop
or
add
inc
roll
loopne
or
ja
add
xlat
jge
bound
xor
adc
push
pop
dec
and
pop
cmp
popa
fldcw
inc
mov
arpl
pop
shll
outsl
stos
sbbb
jne
and
ret
addr16
bound
jecxz
repnz
imul
mov
lods
inc
insl
outsl
outsb
addr16
xchg
orl
pop
jbe
ljmp
or
mov
sbb
enter
push
imul
jo
sbb
push
mov
adc
cmpsl
adc
inc
or
lods
insl
add
push
sbb
fcom
test
lret
cmpsb
imul
insl
lcall
or
aam
cmpsb
imul
dec
rcrl
mov
insb
fiaddl
adc
rcl
xor
mov
int3
mov
lcall
rcl
push
dec
cmpsb
imul
test
pop
push
xchg
nop
mov
hlt
add
inc
fisttps
dec
ja
or
js
cmp
adc
pop
mov
flds
lock
in
push
xchg
addr16
rcrl
push
mov
imul
jl
adc
pop
add
cmpsb
imul
push
dec
mov
shll
xor
shll
push
hlt
int
lcall
enter
cmpsb
sarb
mov
cwtl
mov
push
test
imul
pop
cmpsb
imul
imul
dec
shll
in
aam
int3
cmpsb
imul
imul
cmpsb
imul
push
push
fisubl
dec
rorl
cmp
push
sub
imul
lret
shll
fcom
les
dec
mov
test
shll
movsb
addr16
xor
shrl
xor
jl
sbb
lret
cmpsb
imul
dec
shll
in
aam
arpl
mov
lret
imul
mov
pop
adc
mov
ja
outsb
add
jnp
sub
adcl
daa
cmp
test
imul
push
cmp
ss
pop
dec
js
mov
add
out
jae
push
shll
jo
xor
mov
and
outsl
bound
xor
xor
push
add
mov
or
pop
inc
fisubrl
es
pop
bound
adc
fistl
fisttps
adc
pop
pop
and
pusha
push
pop
push
mov
mov
aaa
bound
daa
mov
xlat
push
jne
dec
mov
ds
test
loope
pop
into
je
je
test
or
mov
pop
push
mov
stos
movq
sub
loop
fmull
push
les
bound
adc
jae,pt
cmp
test
daa
adc
and
outsl
push
and
jbe
cmp
push
outsl
jo
incl
outsl
bound
jno
jp
in
push
xor
lds
out
lods
mov
mov
pusha
paddq
imul
outsl
cmp
cmp
push
in
push
pusha
and
pop
outsb
cmpsb
pop
mov
fmull
sub
rclb
xchg
pop
shrb
outsl
inc
inc
cmp
outsb
xchg
std
insb
aad
insb
cmp
sub
pop
jb
mov
fcompl
inc
aam
lcall
iret
insb
iret
mov
mov
inc
push
mov
outsb
outsb
aas
xchg
dec
ljmp
fs
xor
xor
add
int
xor
pop
pop
pusha
subl
pop
pop
pop
das
aas
push
adc
dec
jo
out
xchg
sbb
adc
xor
into
xor
mov
popa
daa
xlat
data16
xchg
shlb
lods
shll
and
inc
or
xor
lret
sub
inc
iret
jmp
movsb
jecxz
push
xchg
ja
fdivrs
aaa
and
jno
pop
dec
push
ja
inc
pop
dec
int
dec
cmp
ljmp
mov
inc
addr16
jo
xor
xor
icebp
dec
std
and
cmp
test
mov
xchg
int3
and
movsb
xlat
xor
mov
push
cltd
jmp
inc
or
xor
cmp
decb
and
and
xchg
inc
dec
daa
sarb
inc
sub
push
jne
mov
rorb
insb
fstpt
shrb
dec
ficoms
adc
mov
imul
mov
addl
dec
insl
aam
fldenv
or
imul
or
js
and
and
ret
sub
sbb
imul
pop
and
add
inc
pop
sbb
insb
inc
shrb
sub
xor
xchg
lock
sub
gs
bound
cmp
mov
ja
pop
sbb
aad
popa
js
sub
sub
push
notl
sbb
imul
or
adc
push
clc
cmp
das
addr16
dec
xorb
imul
idivl
sub
xor
sub
sub
xchg
inc
lock
js
inc
adc
xor
adc
or
push
rolb
in
jno
pusha
xor
dec
and
cmp
lds
mov
xor
enter
mov
add
shrb
shrb
bound
xor
test
push
pop
xor
xchg
pusha
mov
fsubs
xor
addb
stc
insb
add
inc
outsl
popa
je
mov
cmp
jo
push
bound
jns
movsl
fcomi
cmpsb
notb
or
cmc
popa
lock
insl
sub
pop
jae
inc
adc
mov
inc
inc
pop
push
dec
dec
inc
dec
call
jns
fisubs
jbe
pop
xor
mov
scas
ljmp
das
nop
sub
inc
dec
aas
push
inc
outsl
add
data16
nop
lea
jle
jmp
sbb
lea
loopne
xor
dec
fisttps
scas
test
fs
inc
pop
inc
sub
mov
sub
ja
add
xchg
ret
lods
inc
push
and
sbb
xor
sub
cmpsb
inc
jb
sbb
outsl
mov
out
xor
or
imul
or
movsb
pop
xor
fisttpll
test
lret
insl
sub
pusha
push
xor
xor
inc
cmpsb
or
mov
or
and
subl
and
cs
xor
pop
jbe
push
shll
sbb
sbb
inc
rol
pop
scas
mov
outsb
sub
lods
inc
dec
mov
imul
cmp
out
aaa
int
ret
add
jns
jge
jo
add
das
cs
cwtl
adcl
ss
cli
out
fs
outsb
mov
ljmp
clc
push
js
or
inc
les
xor
movsl
dec
dec
jp
into
dec
dec
cmp
pop
inc
pop
xchg
jno
dec
push
inc
gs
and
xor
imul
insb
sbb
enter
add
dec
rolb
loopne
imul
pop
cs
sub
mov
pop
pop
and
jg
insl
out
daa
cmp
sub
pop
imull
sbbb
inc
push
dec
inc
xor
mov
test
decl
jns
loopne
inc
adc
and
add
or
jo
or
in
insb
or
mov
xlat
sbb
adc
dec
jae
mov
shlb
or
in
je
pop
bound
push
movsb
pop
add
pop
cmp
pop
gs
pop
lods
adc
lret
xor
xor
mov
xor
imul
mov
fs
and
add
gs
lahf
movsl
stos
push
test
arpl
cmp
jo
add
jecxz
push
dec
pop
xchg
loop
imul
inc
adc
xchg
and
xchg
jne
add
sub
xor
arpl
das
subl
xchg
xor
pop
or
in
mov
ret
loope
pop
movsl
dec
ja
and
cmp
in
or
and
out
inc
push
inc
xchg
xlat
shl
das
xor
popa
insb
fwait
sbb
xor
mov
sti
loope
cmc
fildl
lea
pop
icebp
pop
pop
hlt
rolb
filds
inc
adc
jmp
xchg
sub
xchg
adc
pop
mov
sub
jecxz
jb
pop
popa
xor
or
lods
fistpl
inc
shlb
lock
shrb
push
jp
and
or
icebp
out
out
pop
cmp
outsb
pop
dec
sbb
sahf
aam
movl
cmpsl
aaa
mov
rorl
lea
xchg
loope
cld
sarb
dec
cmp
inc
test
dec
inc
inc
lea
lahf
pop
push
inc
int
lahf
cmp
adc
add
fsubrs
cmpsb
push
or
insb
cmp
idivl
loop
push
imul
sub
loop
push
or
push
mov
loopne
clc
pop
push
dec
xchg
popf
sub
dec
mov
pop
dec
mov
pop
cmc
mov
inc
push
push
inc
cmp
inc
in
out
cmp
jo
outsl
and
andl
pop
dec
imul
adc
outsl
cmp
mov
lcall
or
sub
nop
add
push
aas
test
push
push
sbbl
inc
and
jg
sub
shll
xor
imul
cs
cmp
push
jo
aad
xor
adc
dec
xchg
pop
push
jmp
lea
push
add
outsl
dec
dec
lret
dec
pop
xlat
sub
testb
outsb
roll
les
outsl
jo
sub
mov
rorb
push
sub
imul
push
and
dec
lds
call
sub
inc
sbb
push
mov
ret
addr16
push
adc
sbb
subb
dec
inc
jne
outsb
xchg
push
and
ss
sub
lods
add
jg
mov
xor
mov
insl
sbb
sub
xor
sub
pushf
shlb
add
pop
dec
push
pop
and
fmull
rorl
mov
push
pusha
fildll
fists
sub
xchg
cwtl
mov
inc
test
rclb
and
or
out
loop
inc
mov
addr16
push
mov
xchg
or
fsubrl
xor
bound
das
mov
addr16
xchg
adc
push
mov
add
mov
into
mov
mov
mov
dec
add
les
ja
outsl
sbb
loope
mov
add
push
dec
dec
imul
mov
and
pop
cwtl
imul
jp
sub
dec
movsb
addb
xchg
push
lods
pusha
push
cmp
add
nop
mov
dec
mov
cli
ss
inc
imul
mov
stos
sti
inc
jge
jb
xchg
out
and
mov
push
inc
popf
sub
sbb
sub
and
shlb
mov
adc
xchg
bound
and
cmp
aas
out
push
mov
add
shr
scas
insb
pop
aad
push
push
aaa
das
daa
push
push
and
es
pop
cmp
dec
push
rcr
xor
ja
push
hlt
add
pop
sbb
lds
das
sub
imul
mov
xor
mov
es
adc
pop
add
test
inc
inc
pop
popa
out
enter
aad
aas
test
inc
testb
xchg
jo
mov
popf
inc
pop
jp
mov
jmp
pusha
xchg
push
vzeroall
insb
mov
push
dec
push
or
or
insb
pusha
dec
fcompl
aas
push
ja
dec
flds
jbe
mov
addb
mov
push
shrl
fadd
pop
push
cltd
sub
dec
mov
data16
pop
inc
mov
push
pop
sub
add
xor
nop
sbb
loope
inc
dec
int
aam
insl
dec
inc
packuswb
test
lods
xchg
gs
scas
shl
cmp
xlat
push
add
fcoms
xor
xchg
xchg
test
popa
pop
sbb
insl
jae
imul
push
xor
jg
out
inc
mov
out
sbb
jb
rcrl
rorb
dec
inc
dec
dec
dec
dec
push
jbe
lea
push
das
js
popf
mov
mov
aas
mov
ret
aas
call
loopne
es
inc
leave
js
mov
pop
mov
insl
xchg
out
addr16
daa
push
out
add
pop
push
idiv
cmp
inc
push
inc
sarb
add
ret
and
or
jl
or
mov
adc
cmpsl
xchg
leave
rcll
test
push
outsl
inc
or
dec
mov
lret
and
lods
push
jmp
push
dec
mov
adc
or
outsl
and
into
push
mov
pop
lahf
mov
orb
xor
rsm
nop
outsb
inc
push
out
arpl
sbb
outsl
shll
std
jg
addr16
in
sub
les
ja
mov
outsb
inc
insb
inc
dec
movsb
xchg
push
js
sahf
xor
cs
cli
aaa
push
mov
in
outsl
fimull
adc
sub
inc
iret
and
jg
inc
and
jg
test
pop
dec
mov
add
or
pop
add
ret
cmp
mov
push
dec
pop
inc
lock
pop
in
in
addl
xchg
dec
sub
js
mov
push
outsl
mov
fisttpll
cltd
push
fwait
icebp
jp
into
subb
insl
mov
nop
sbb
int
jae
pop
sub
mov
inc
adc
xchg
and
je
mov
insl
outsl
test
push
imul
jmp
inc
popa
inc
popa
xor
xchg
dec
call
and
or
stc
push
movsb
int
cmpsl
xorl
push
inc
outsb
push
adc
les
negl
xchg
xchg
ret
dec
add
dec
outsl
cmp
jae
xor
cmpsb
pusha
mov
add
and
mov
inc
cmpl
mov
insl
ss
mov
push
sbb
shrb
adc
inc
mov
inc
pop
pop
push
sub
fldt
pcmpgtd
mov
adc
and
dec
inc
lretw
dec
inc
lds
dec
andb
xchg
hlt
pop
inc
cmc
aam
dec
stc
jl
mov
stos
sti
out
push
adcb
inc
ss
mov
inc
pop
jecxz
adc
and
imul
ret
pop
enter
stc
scas
or
or
inc
adc
jge
dec
inc
fdiv
inc
mov
jb
cs
add
or
adc
jo
sbb
lods
dec
cmpsb
or
push
fcmovnu
insb
jnp
or
add
or
out
push
pusha
cmp
dec
loope
nop
xlat
inc
repz
xor
fs
add
pop
test
pop
popa
push
cmp
pop
jo
jp
mov
andb
imul
mov
push
lret
xchg
fwait
jp
bound
out
int3
aam
jbe
cmp
xchg
test
add
test
add
pop
popf
gs
push
push
mov
into
or
test
push
push
repz
mov
lock
insl
push
sbb
jb
data16
popa
ja
sub
mov
inc
lret
mov
pop
sub
jo
and
popa
xor
or
sahf
jmp
cld
sahf
push
pop
punpcklwd
mov
mov
cmp
add
popa
inc
popf
push
xor
or
stos
lods
movsl
and
jno
cmpl
in
arpl
push
xor
lods
mov
ret
aaa
ret
add
dec
push
loopne
push
mov
mov
mov
xchg
sbb
outsl
addr16
sub
dec
push
mov
pop
aas
jecxz
sub
aaa
push
imul
inc
sub
dec
lods
add
jge
test
fs
sub
xor
mov
fiadds
lock
mov
or
insb
xor
dec
dec
adc
and
fmuls
sub
push
stos
mov
stos
cmpsl
xchg
arpl
icebp
pop
test
push
fs
ja
and
icebp
jo
xor
sub
xor
jmp
lahf
out
je
inc
push
push
mov
push
test
outsl
adcl
push
gs
rcrb
or
ret
fnstsw
jne
push
xchg
cmp
mov
jnp
add
xchg
push
or
bound
mov
testl
xchg
jae
mov
push
inc
out
cltd
je
and
dec
push
out
mov
js
out
daa
jb
mov
sub
dec
out
push
aas
adc
xor
add
push
mov
and
xchg
jbe
jo
push
cmpsb
arpl
js
inc
jo
dec
pop
xchg
cmp
pop
outsb
xchg
cmp
push
mov
push
ja
rclb
push
pop
fwait
sub
xchg
lods
stos
pop
test
outsl
rclb
mov
push
iret
bound
movsl
push
mov
dec
or
push
add
cmpsl
push
cmp
sub
jae
insl
fimuls
dec
push
sbb
outsb
push
xchg
pop
shll
xor
push
jns
scas
or
and
adc
mov
sub
loop
mov
pop
or
mov
imul
movsl
pop
xchg
push
and
imul
inc
mov
dec
jae
sbb
inc
into
lahf
xor
out
lret
dec
cmp
adc
pop
data16
daa
push
jne
sbb
fbstp
mov
push
test
inc
push
inc
inc
fwait
popa
pop
popa
push
cmp
mov
scas
daa
data16
movsl
dec
xlat
outsb
dec
lea
ja
arpl
aas
insb
lea
push
clc
insl
cmp
inc
cmp
ss
imul
aaa
sbb
mov
cmp
push
push
add
dec
rcr
out
pop
and
xchg
adc
divl
mov
inc
out
iret
out
int
mov
fistps
dec
enter
out
insb
lods
fidivl
outsb
sti
fidivs
aas
nopl
inc
popa
or
sbb
js
loopne
outsl
and
sbb
sub
xor
imul
inc
sub
sub
in
jecxz
lea
outsb
cmp
jmp
pop
and
add
movl
mov
add
sub
notl
pop
mov
pop
rorb
insb
adc
jmp
fcomps
pop
push
or
ror
inc
mov
xor
out
inc
mov
mov
inc
mov
fcoml
je
cmp
push
pop
and
sbb
loope
mov
mov
push
into
and
mov
adc
adc
add
dec
and
out
popa
inc
sub
mov
fadds
inc
xchg
sbb
xor
test
add
mov
add
ror
int
add
dec
stc
xchg
jno
inc
xor
xor
inc
sub
inc
and
cmp
xchg
sbb
ljmp
adc
rcrl
add
outsl
negl
cmpsb
lods
inc
add
inc
test
dec
incl
pop
orb
lock
inc
subl
jno
jo
push
or
and
sbb
dec
pop
xchg
andb
lahf
pop
shrl
xor
sti
xchg
sbb
push
or
mov
add
pop
mov
sbb
xchg
addb
or
add
cmpb
movsl
mov
lahf
in
test
xor
add
mov
inc
or
jnp
dec
addl
adc
sbb
test
mov
pop
test
mov
pushf
sub
xor
movl
addr16
push
movb
push
add
or
imul
lock
sbb
mov
jmp
inc
sub
stos
leave
lahf
dec
or
pop
add
and
data16
and
or
dec
bound
mov
push
inc
es
sub
cmpsb
cltd
daa
add
jns
add
push
add
and
xor
jl
rclb
arpl
xor
inc
sbb
xchg
pop
setbe
cmp
dec
push
xor
jle
ja
mov
ret
sub
mov
mov
outsb
das
insl
xchg
and
pop
dec
add
psubb
hlt
lock
call
idivl
inc
inc
inc
dec
dec
dec
xchg
sbb
add
lods
add
arpl
cmp
xor
dec
mov
dec
pminub
ljmp
insb
cmp
xchg
sub
in
popf
cmp
jae
pop
adc
shll
xor
adc
dec
sub
push
jb
insl
int
and
outsl
inc
mov
inc
sub
mov
addb
jae
mov
or
or
js
sahf
lahf
in
addr16
xor
add
cmp
push
push
add
push
ret
es
mov
or
test
mov
inc
inc
mov
popl
das
jb
and
sbb
push
xor
sarb
ja
adc
xor
adcb
mov
pop
mov
push
xor
dec
xchg
adcb
adc
xor
add
and
xor
pop
push
add
adc
pop
jecxz
mov
or
inc
mov
adc
xor
or
insb
test
jns
sti
or
das
jno
cmpsb
popa
pop
adc
push
out
pop
sbb
adc
adcl
fiaddl
insb
test
or
xorb
sti
fists
les
pop
or
inc
loop
das
rcl
adc
push
fsubs
xor
jo
lods
or
or
or
xor
inc
jl
inc
cmp
rolb
lret
js
inc
and
ljmp
and
adc
fists
cmp
add
xor
ds
ljmp
add
xlat
mov
add
push
call
cmp
je
or
cmc
xchg
repnz
call
cld
shll
ret
call
pop
incl
pop
pop
push
sub
cmp
add
inc
mov
rep
mov
stos
push
push
push
push
insb
add
push
add
jg
les
ret
push
mov
imul
push
pop
fcomps
outsl
pop
dec
push
lea
jg
mov
pop
add
and
pop
jno
shrb
jg
cmc
and
stos
mov
iret
lea
adcl
and
and
xchg
push
lea
in
inc
int3
pop
lea
in
inc
pop
shlb
insl
dec
jp
lock
inc
dec
push
pop
inc
push
push
fmull
xor
push
adc
add
and
or
lods
lret
add
xchg
push
cmp
fcomp
xor
ss
loope,pn
sbb
push
das
outsb
mov
or
mov
imulb
inc
xchg
in
mov
sbb
push
pop
fsubrs
push
adc
push
push
pop
push
pop
or
leave
imul
or
cmp
or
adc
cmp
inc
xor
and
mov
lcall
push
loop
ret
icebp
add
loope
leave
cmpsl
push
mov
or
add
test
add
and
add
add
inc
adc
orl
test
add
popa
loope
add
js
fcoms
xor
pop
imul
mov
int3
aas
dec
inc
iret
popa
lods
mov
popa
int
mov
aad
rorl
or
inc
icebp
rorb
dec
out
sub
addb
cli
dec
inc
bound
subl
imul
mov
stos
rcr
adc
push
xchg
test
or
ret
cmpsl
arpl
or
nop
adc
push
cmc
dec
xor
daa
les
mov
das
lock
sub
mov
xor
xor
out
out
xor
aas
js
insb
adc
xchg
aas
popa
cmp
cmp
cmp
icebp
addr16
inc
inc
push
cmp
test
insb
adc
and
gs
sbb
and
lret
jo
outsb
imul
pop
das
popa
adc
add
imul
sbb
outsb
loop
nop
pusha
clc
mov
fisttpl
sbb
inc
mov
push
dec
and
mov
dec
mov
pop
jae
xchg
inc
add
aas
xor
icebp
cld
outsb
lahf
pop
jg
add
movsb
jns
shll
leave
mov
cld
inc
jle
test
popa
test
fisubl
and
pop
enter
inc
mov
iret
mov
in
call
mov
jle
adc
push
ficompl
mov
dec
mov
fcomp
loopne
jae
jle
ret
sub
push
lret
orb
dec
add
xor
add
and
addl
adc
add
push
add
test
add
adc
faddl
dec
sbb
enter
lock
push
push
dec
add
adc
ss
mov
add
add
imul
imul
or
or
insb
fmuls
scas
adc
adc
adc
mov
pop
and
or
push
das
push
insb
fdivs
pop
imull
dec
push
xor
and
jb
andb
pop
andb
addb
cmpb
test
fs
cmpsb
sbb
orl
fbld
sbb
into
aas
xlat
pop
sbb
adc
iret
cld
and
sub
incb
out
outsb
ss
shrb
add
xor
adcl
xor
and
xchg
xchg
xchg
xor
jg
mov
jg
add
sbb
xchg
mov
inc
pop
push
or
dec
shll
or
loopne
dec
mov
adc
xor
xor
sub
lcall
push
js
jns
jp
ja
in
cld
xchg
jl
loopne
dec
xchg
inc
loopne
lidtw
adc
add
lea
add
push
add
xor
scas
inc
mov
sbb
cmp
and
jo
icebp
dec
aam
dec
cs
cmc
push
inc
ds
pop
aam
dec
aaa
mov
lea
pop
outsb
push
icebp
push
push
push
scas
pop
shll
mov
repz
insl
lcall
add
push
xor
ja
mov
shrl
dec
das
push
dec
insb
xor
inc
pop
enter
xchg
cmp
xchg
inc
pushf
or
ret
mov
inc
jle
hlt
adc
mov
dec
pop
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
popf
imul
sbb
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
ljmp
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
das
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
inc
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
in
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fdivr
jmp
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
test
int3
add
sti
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
incl
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
std
call
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
lcall
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
and
mov
into
ror
add
cmpsb
fmuls
mov
xchg
mov
stos
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
int
push
add
add
add
cmp
mov
dec
cwtl
sbb
jmp
add
xchg
push
popa
jb
or
sub
inc
xor
adc
pop
dec
jb
addb
jno
dec
inc
add
and
mov
add
lcall
jb
insb
mov
lcall
add
xor
mov
adc
cmp
adc
mov
jbe
adc
jge
pop
xor
inc
push
adc
and
xchg
sub
push
insb
lock
inc
jns
mov
imul
cmp
mov
add
add
lahf
dec
das
jle
ficompl
je
cwtl
fs
imul
ret
imul
icebp
in
fsubs
push
imul
sti
xorb
jns
pop
lea
lret
repnz
js
loopne
mov
dec
or
daa
or
ret
or
dec
in
insb
inc
sub
push
inc
add
addr16
loopne
bound
or
andl
sub
dec
aam
pop
and
shll
inc
add
jg
add
movsb
cltd
pop
fmuls
jbe
iret
sbb
push
cmp
js
xchg
ss
pop
imul
mov
inc
mov
inc
ret
es
jp
xchg
out
mov
imul
sub
and
add
out
sub
xchg
add
pushl
sub
nop
sbb
xor
or
aad
lahf
dec
addb
loopne
outsl
pop
sbb
jmp
xchg
lods
cmpsl
aaa
mov
je
pusha
xchg
out
inc
adc
add
mov
add
fldenv
jo
adc
mov
pmaxub
jae
jo
gs
mov
sub
xor
mov
inc
sbb
jo
sbb
orl
out
jo
push
mov
ss
popa
jmp
pop
and
rcl
jne
push
inc
sbb
mov
pop
mov
pop
leave
xchg
jmp
test
add
inc
dec
imul
mov
fidivrl
lods
leave
xor
in
and
jp
jbe
fs
xor
mov
mov
addb
lods
inc
jb
gs
jbe
add
add
fistpl
orb
out
sbb
in
pop
push
outsb
outsl
fcmove
inc
jbe
sbb
rcll
test
fnsave
mov
or
fnstcw
sbb
dec
add
push
movsl
push
xchg
jl
jns
data16
cmp
adc
push
push
testl
fildl
adc
sbb
cmpsb
or
adc
jge
inc
sub
sbb
push
mov
js
jo
pushf
lahf
add
loopne
lret
mov
gs
fdivrp
or
adc
or
add
adc
jo
mov
mov
dec
add
cmc
stos
popl
loopne
sidtl
add
lods
lahf
push
add
push
sbb
popf
add
add
adc
addr16
divb
lcall
mov
add
or
sbb
add
cmp
add
lods
jmp
je
rorl
add
lock
pusha
add
add
popf
inc
add
mov
pop
imul
add
dec
sbb
cmp
dec
xor
sub
add
dec
adc
ds
cmp
das
mov
or
add
incl
add
add
lea
pop
or
out
adc
nop
mov
inc
mov
inc
add
jns
mov
xchg
cld
adc
jb
mov
add
push
sub
adc
adc
add
jae
jne
mov
sub
adc
add
jne
mov
xor
adc
adc
leave
sub
jb
shl
mov
dec
xor
js
sar
add
push
sub
adc
adc
add
jne
mov
xor
adc
adc
add
jne
mov
xor
adc
adc
out
jne
push
sub
adc
jae
add
test
add
add
test
add
std
cld
jbe
mov
inc
mov
inc
dec
jns
jmp
xchg
popl
add
mov
or
sub
ja
add
jmp
pop
mov
mov
mov
dec
sub
cmp
ja
addb
repnz
mov
shr
rol
mov
sub
test
call
or
mov
out
lea
popl
or
js
mov
lea
add
or
xchg
inc
push
or
cltd
mov
inc
or
je
stc
jns
adc
mov
push
add
or
js
mov
xchg
add
fdivr
xchg
inc
push
or
popa
in
jae
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
je
subl
add
mov
jmp
mov
jmp
add
add
xor
add
add
add
add
jo
add
add
and
add
add
add
add
add
loopne
add
sub
call
add
add
add
add
cmp
mov
add
adc
mov
cmp
add
add
inc
add
cmp
add
add
add
cmp
call
cmc
adc
adc
adc
sbb
add
aam
adc
test
xor
ja
call
ja
sbb
ja
dec
adc
inc
add
add
add
sbb
add
cmc
adc
inc
add
adc
sbb
ja
add
add
add
sbb
add
hlt
adc
cmp
sub
xor
add
sbb
add
ja
sbb
sub
call
add
add
adc
add
add
jne
ja
add
adc
fists
ja
add
adc
add
add
test
hlt
adc
and
add
inc
cmc
adc
clc
jmp
jg
add
add
cmc
adc
in
cmpsl
cmc
ja
in
std
jg
add
add
mov
add
jmp
jg
notl
add
add
add
cmc
ja
loopne
ja
in
std
jg
add
add
out
in
adc
pusha
notl
add
add
loopne
jg
cmc
adc
test
add
clc
jmp
jg
nop
add
aam
jl
adc
pusha
notl
add
cmp
add
cmp
add
cmp
add
add
add
mov
add
dec
add
add
loopne
adc
mov
add
.byte
