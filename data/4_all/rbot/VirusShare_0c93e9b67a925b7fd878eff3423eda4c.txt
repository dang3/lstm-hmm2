out
pushl
mov
aaa
pop
inc
test
les
pop
int3
or
das
adc
incl
pop
je
incl
sarl
js
mov
std
pop
or
idivl
sahf
push
inc
adc
xchg
add
inc
pop
xchg
out
fsubl
dec
mov
xor
loop
mov
sub
xchg
jecxz
and
push
push
dec
sub
adc
jp
sar
stc
fcoml
shlb
ss
icebp
push
loope
test
lret
dec
push
cs
push
lret
adc
adc
mov
sub
test
mov
add
mov
test
dec
or
shlb
mov
in
xchg
push
xor
cmp
outsl
adc
mov
pop
leave
int3
repnz
push
xor
add
rcll
icebp
sub
or
and
pop
sub
shll
std
mov
push
pushf
dec
testl
adc
pop
xchg
pop
adc
mov
pop
dec
pop
jbe
decb
jle
jns
mov
enter
jno
push
and
or
mov
daa
es
jb
lods
pop
xchg
cmp
loope
pop
fs
movsb
xchg
cld
mov
ss
pop
xchg
cmp
fwait
imul
dec
inc
inc
and
idiv
adc
jae
popf
test
mov
pushf
mov
jo
rcrl
pushf
cli
jl
dec
nop
push
into
daa
push
sahf
idivb
or
lea
push
inc
xchg
out
testl
in
js
mov
stc
dec
js
repz
test
push
dec
xchg
mov
jbe
rcr
dec
mov
ljmp
and
sub
xchg
or
mov
sub
sbb
or
mov
les
pop
cmpsb
jno
in
mov
in
xchg
pop
movsb
sbbb
mov
inc
add
xchg
cld
jb
mov
rorb
sbb
jnp
mov
cmp
pop
add
pusha
cmp
jo
test
into
incb
inc
mov
push
xchg
jge
cmpsl
scas
inc
jmp
mov
fdivp
and
jl
in
iret
loop
mov
dec
out
adc
xchg
cmc
hlt
cmpb
xor
scas
sub
arpl
mov
and
or
ret
loopne
inc
pop
hlt
repz
xchg
in
mov
out
adc
insb
jbe
orl
jmp
inc
adcl
mov
outsb
nop
stos
sub
sub
pop
hlt
mov
sub
jge
andl
test
and
push
cmp
mov
lods
push
data16
mov
test
jnp
loope
rorb
in
data16
sub
xor
xchg
aas
fs
inc
pop
gs
mov
xlat
or
mov
mov
sahf
pop
adc
inc
cmp
cmpsl
ds
in
xchg
cmp
xchg
sahf
movsb
dec
repnz
jb
loopne
cmp
lahf
or
pop
loope
shlb
jle
insl
mov
jge
ret
lods
aam
lds
out
sub
scas
mov
jp
mov
pop
lods
jb
mov
shrl
pop
add
mov
and
dec
pop
insb
rclb
inc
cwtl
into
mov
xchg
pop
push
nop
mov
clc
into
in
mov
lea
inc
repnz
fisubs
push
mov
mov
mov
jno
mov
ss
mov
lret
push
jb
lods
xchg
daa
sbb
mov
push
or
sti
call
shrb
movsb
pusha
or
fs
xchg
mov
scas
cltd
sbb
add
sahf
mov
stc
cmpl
imul
mov
rcrl
inc
and
incb
push
push
inc
je
iret
add
mov
adc
mov
ret
add
dec
int3
xchg
xchg
fs
sub
idivl
orl
div
imul
mov
lret
iret
test
out
ret
jnp
cmpsb
mov
imul
ficoms
data16
adc
sbbl
fwait
mov
sbb
push
xchg
xchg
mov
cmp
push
ret
sub
sahf
xchg
xchg
pop
or
or
or
mov
xlat
or
lods
cmp
cmpsl
xchg
dec
mov
inc
and
adc
add
es
adc
xchg
cli
and
xor
push
inc
pusha
push
and
clc
lcall
aaa
mov
and
aaa
cmp
faddl
popa
sub
test
mov
or
dec
repnz
jmp
scas
test
pop
cmpsl
loopne
ds
push
in
repnz
and
xor
loop
push
xor
mov
or
stos
mov
inc
jo
xchg
jns
push
iret
push
fidivrs
repnz
xchg
out
sarl
jle
dec
dec
inc
cmp
mov
lret
push
pop
fmull
cmp
mov
adc
xor
pop
dec
jle
mov
lahf
or
or
test
cmc
stos
fisubrl
scas
hlt
in
xchg
in
fisubs
mov
xor
notb
es
stos
shll
or
test
pslld
sub
adc
scas
lea
data16
push
jno
xchg
popa
and
popa
jb
dec
add
fidivrl
scas
cmpsb
dec
out
add
out
pop
push
jb
sbb
push
or
mov
inc
sub
xor
in
lea
clc
sbb
inc
ror
add
xchg
dec
iret
aaa
movl
mov
adc
dec
pop
pop
sbb
push
imul
pop
mov
sub
jge
int3
divb
jo
xchg
xor
mov
add
adc
paddusb
push
push
iret
sahf
push
stos
aam
adc
xor
jo
sbb
pop
mov
sub
mov
cltd
lods
pop
dec
or
push
jmp
imull
mov
mov
andb
jge
into
outsb
sahf
mov
rcrl
bswap
xchg
test
pop
in
sub
mov
fdivl
std
ss
mov
mov
cs
nop
test
lret
ss
cmp
dec
mov
sahf
int3
dec
mov
push
dec
pushf
dec
sub
mov
mov
xor
jne
pop
pop
add
push
xchg
inc
cmp
popf
js
mov
cmp
jmp
pop
push
cmpsb
out
subb
fmul
and
jnp
lods
xchg
aaa
adc
stos
repnz
and
xchg
dec
rclb
mov
ds
pop
les
mov
ficompl
movsb
les
shrb
clc
dec
pop
and
pushf
out
test
add
gs
bound
jmp
jp
push
jbe
xchg
and
inc
sub
inc
xchg
xchg
xlat
aas
jp
add
insl
pop
test
dec
pusha
xor
mov
pop
and
jae
push
xchg
test
dec
inc
xchg
cs
idivb
je
mov
adc
aam
pop
xchg
fistpll
mov
push
xchg
push
mov
rcrl
adc
xchg
sub
cmovne
jmp
or
pop
movsb
push
nop
cli
sub
test
and
pop
or
cli
sbb
iret
sub
sbb
jo
loopne
pushf
cmp
sahf
push
cmp
xchg
jb
sbb
daa
sar
test
mov
les
dec
or
inc
push
adc
sub
mov
mov
pop
and
cld
mov
loopne
mov
and
inc
fcomps
jbe
idivb
sbb
pop
inc
cs
lret
inc
push
add
dec
push
int
dec
sbb
or
cli
xor
or
mov
jle
mov
jo
cmp
std
lret
fcmovnu
clc
push
or
cmp
sub
pop
das
loope
push
and
push
jbe
andl
je
push
sub
dec
jge
sub
xchg
fidivl
into
mov
push
mov
jb
dec
or
mov
mov
jb,pn
xchg
insb
scas
aas
adc
mov
jne
pop
or
outsl
jno
bound
int3
adc
adc
mov
mov
lcall
or
in
push
es
es
xchg
loop
insb
adc
scas
pop
xchg
mov
adc
push
add
shrl
aad
pop
add
push
js
cmp
adc
test
scas
rorl
ret
cwtl
adc
pop
in
call
add
mov
push
outsb
xlat
outsb
dec
mov
xchg
in
test
lea
loopne
sbbl
xchg
jg
fs
aaa
je
dec
xchg
cld
dec
es
jo
cs
adc
add
cld
notl
jo
mull
push
popf
mov
sub
mov
pushf
bound
inc
pop
jl
or
add
xchg
dec
shrb
pop
clc
inc
and
adcl
adc
test
mull
xchg
push
les
dec
xor
rolb
lea
mov
pushf
sbb
and
jbe
adc
pop
sub
mov
and
pop
cmc
in
xor
out
sbb
xchg
jbe
test
mov
subl
sbbb
sbb
dec
jbe
dec
dec
mov
les
shl
jae
into
sub
loopne
pop
lret
pop
mov
or
imul
sub
roll
loop
in
push
mov
mov
xor
add
cli
xchg
push
xor
sub
adc
adc
push
les
jbe
daa
or
int3
push
ret
insb
xchg
pop
xor
pop
repnz
pop
add
jb
pop
inc
movsl
jo
push
mov
jnp
lods
inc
lahf
sahf
push
or
sub
popa
xor
or
pop
jns
or
mov
add
adc
or
scas
lcall
cmpsl
add
insl
sbb
adc
jp
push
ds
lret
cmpsl
xchg
iret
mov
movsb
jp
data16
jmp
pop
dec
xchg
fdivrs
mov
pop
outsb
shrl
movsb
jecxz
inc
pop
orb
pop
int3
xchg
mov
fidivs
fisttpl
into
dec
pop
xor
lea
or
cli
add
push
arpl
mov
insb
jne
lret
xchg
popl
mov
inc
adcb
and
arpl
mul
mov
mov
lods
in
jge
pushf
jo
mov
inc
cmpl
inc
shr
xor
pushf
hlt
subl
dec
aaa
hlt
rorb
outsl
das
xchg
shll
lcall
cmp
adc
ja
daa
je
cmpsl
adc
jno
dec
push
in
aas
jecxz
cmp
xor
cmpb
sbb
dec
bound
mov
xor
xchg
inc
xchg
cmpsl
dec
xor
hlt
mov
xchg
dec
mov
int3
lcall
movsb
icebp
or
pop
xor
aam
and
inc
ret
xor
int3
jge
inc
adc
mov
mov
inc
mov
push
xor
mov
add
mov
movsb
adc
add
jle
popf
add
pop
stc
mov
jb
fiaddl
stc
sub
cmp
jno
js
lret
or
ficompl
sahf
jecxz
test
add
sbb
nop
inc
adc
cmc
adcl
hlt
and
add
mov
xor
das
xchg
mov
or
or
cmp
adc
cltd
pop
das
dec
xchg
lcall
lock
lock
mov
repnz
mov
push
fsubs
push
cmpsb
cld
imul
xchg
xchg
mov
dec
sub
sub
lret
adcb
sbb
xchg
push
and
das
andb
cmpsl
pop
loop
and
sub
test
jle,pn
sub
inc
sub
push
mov
or
push
repz
push
ret
xchg
insb
arpl
cwtl
das
cmc
add
mov
mov
test
xor
sub
pop
nop
shrl
inc
sub
imul
mov
sbb
iret
push
jp
xor
sub
stc
jne
int3
push
xchg
mov
mov
adc
xchg
jns
xor
mov
adc
push
into
out
cmp
inc
mov
inc
and
xor
sub
notb
and
pop
push
pop
xlat
pushf
addr16
icebp
mov
pop
xchg
fwait
xchg
dec
ss
xchg
sahf
dec
fimull
jno
add
bound
inc
xchg
or
das
mov
push
push
addr16
lret
push
xchg
push
jmp
xchg
cs
adc
xorl
test
add
fmull
and
sbb
pop
idiv
call
cmpl
stc
stos
les
mov
inc
sarb
out
outsl
lcall
pop
int3
ret
js
pop
into
inc
push
lods
int
or
jnp
ret
push
xchg
adc
ret
xchg
push
clc
outsb
mov
arpl
mov
mov
fwait
pop
jle
cld
add
dec
lea
sub
stc
sahf
popf
outsl
xchg
mov
cmp
nop
nop
cmp
mov
dec
mov
jg
loope
mov
push
lcall
in
cmpsb
jl
imul
or
or
mov
add
shll
gs
cmpsb
popf
adc
popf
ss
enter
sbb
jbe
and
adc
sbb
and
dec
adc
cwtl
mov
mov
sbb
stos
sbb
jp
repnz
lods
nop
jp
in
jnp
dec
sbb
jno
sub
add
shll
sbb
lahf
outsb
xchg
jg
sub
mov
aaa
push
xor
scas
push
in
adc
cmp
pop
pop
xchg
xchg
cmp
push
mov
pop
jge
in
aad
arpl
cmc
ljmp
jp
popf
jb
cmp
or
ss
xchg
lret
adc
movsl
jge
in
push
mov
add
dec
orl
jo
and
push
lret
jbe
add
xchg
mov
sahf
inc
shll
out
jmp
xchg
adc
and
xor
adc
mov
pop
mov
and
inc
fistpl
inc
cmp
or
mov
sub
pop
xchg
mov
in
inc
es
icebp
cmp
inc
inc
pop
mov
cmp
shrl
xor
pop
inc
adc
stc
outsl
dec
cmpsl
js
add
xor
loope
mov
lock
es
xor
insb
jbe
in
jp
mov
mov
scas
lret
sub
lds
dec
push
loope
sbb
sar
cmpsl
adc
xchg
xchg
dec
lret
and
push
std
jp
xchg
mov
fisttps
adc
mov
notl
orb
jbe
shlb
jle
dec
xor
es
lret
pop
mov
xor
cwtl
clc
inc
jge
sbb
shrb
leave
jbe
adc
add
and
xchg
inc
imul
dec
add
repnz
sub
xchg
js
ss
xchg
pop
xor
jg
sub
and
ljmp
mov
and
pop
push
lds
repnz
int3
aas
ds
insl
push
into
dec
mov
movsl
rclb
mov
pop
xor
lea
lods
adc
add
add
sbb
gs
xchg
aam
mov
jnp
inc
xor
mov
les
ret
es
rclb
dec
fsubs
ficomps
and
lret
imul
xchg
popf
jns
jbe
cmp
sub
cs
pop
sahf
aaa
jb
push
in
cli
repnz
adc
les
nop
dec
pop
mov
pop
xchg
shlb
or
les
into
xchg
lcall
kandnw
cmp
xor
dec
scas
int
cmp
mov
mov
inc
jno
mov
cmc
mulb
and
xchg
cmpsb
dec
jns
cltd
adc
fidivl
testl
mov
mov
xchg
int
mov
ret
xchg
in
ret
cmp
or
inc
mov
out
ss
adc
jg
mov
test
adc
icebp
jg
pop
cld
sahf
stos
pushf
test
testb
lcall
sub
in
out
jno
repnz
pusha
push
sbb
mov
or
shlb
mov
popa
dec
jo
mov
mov
push
pop
pop
enter
pop
lahf
push
dec
ret
and
inc
mov
adc
cmpsb
or
stos
rorb
addr16
xchg
aam
repnz
sahf
inc
addb
dec
lock
les
jae
int
movl
test
fs
push
loop
sti
pop
lret
and
inc
mov
or
mov
pop
es
add
add
jb
inc
ljmp
enter
jo
adc
fcomp
mov
repnz
into
pop
insb
inc
xor
ljmp
aaa
jbe
mov
mov
mov
inc
fidivrl
test
mov
loopne
xchg
ja
inc
rcrl
scas
ret
pop
mov
jbe
add
outsb
out
andb
push
inc
mov
cmp
adc
inc
and
out
in
nop
hlt
or
fnsave
sub
xorb
mov
stos
xchg
insl
inc
loop
xor
loope
loope
movsb
mov
xor
das
std
xchg
jmp
xor
cld
inc
mov
in
push
icebp
jb
adc
pop
ljmp
jge
int3
or
popa
add
mov
sub
outsl
mov
cmp
data16
aaa
enter
mov
ret
push
add
jns
push
xchg
lret
je
xlat
push
mov
popf
xchg
adc
ljmp
sbb
push
cs
push
sub
in
dec
mov
xchg
jp
cmp
mov
or
ret
testl
fiadds
imul
dec
xchg
cmc
sarb
cs
jmp
fs
pusha
xchg
lods
xchg
adc
adc
mov
sbb
sub
adc
loopne
and
dec
cwtl
xchg
clc
rcl
mov
and
mov
mov
movsb
cmpsb
jno
sbb
out
xor
pop
imul
xor
ljmp
mov
mov
lret
in
vmwrite
mov
inc
pushf
cmpsb
lret
hlt
mov
push
mov
cli
in
not
mov
sbb
adc
push
scas
xchg
rolb
adc
ds
cmp
adc
popa
or
test
repz
xor
rclb
les
jnp
push
hlt
pop
bound
mov
mov
clc
es
push
mov
out
aaa
xchg
out
sbb
stos
lods
aas
ljmp
add
sbb
sti
imul
mov
lea
and
xchg
ss
push
mov
xchg
sub
push
int3
fisubl
push
jae
and
out
and
pusha
and
xchg
mov
pop
std
mov
jge
outsl
ja
jge
jp
xchg
pop
jmp
mov
dec
sahf
stos
inc
mov
outsb
inc
jge
xchg
add
or
add
dec
sahf
in
ret
jo
ret
call
jmp
sub
push
inc
stos
in
push
data16
xchg
shlb
mov
jb
jl
xchg
add
and
jo
pop
fdivrl
xchg
cmp
movsl
xchg
pop
mov
jcxz
mov
roll
mov
adc
daa
sub
in
jg
stos
adc
xor
hlt
popa
lret
in
cmp
xchg
lahf
and
mov
sbb
fwait
je
sub
mov
aad
inc
arpl
sbb
xor
clc
stos
fistpll
inc
push
mov
jmp
jle,pt
push
decb
int
and
ret
push
sahf
jecxz
cmp
out
pop
movsb
scas
mov
mov
ljmp
xor
scas
lret
fcomp
sub
nop
xchg
out
mov
outsl
ja
mov
cmp
aas
data16
lock
mov
pop
es
xor
adcb
lret
jnp
int3
jns
xor
adc
mov
mov
fmulp
xchg
lahf
adc
rcrl
das
mov
lock
mov
jge
jp
repz
xchg
mul
push
sub
add
mov
sbb
ss
mov
sub
push
xchg
fdivrp
in
push
add
push
das
frstor
mov
test
push
push
mov
pminsw
scas
xchg
push
or
mov
push
lcall
push
aam
rcrb
cmpsl
movsb
inc
cld
mov
jnp
pushf
scas
test
mov
mov
dec
push
test
mov
out
leave
in
mov
mov
divb
cmp
push
pop
and
jnp
add
nop
pop
dec
sub
inc
sub
sahf
xchg
sub
imul
js
stos
ficomps
push
pop
into
inc
mov
adc
test
inc
pop
mov
mov
lea
popf
lods
mov
lea
test
in
mov
cwtl
in
jle
in
lods
std
dec
or
iret
test
in
out
mov
lock
insb
int
sti
xor
in
out
hlt
sub
pop
daa
lcall
arpl
push
in
xchg
add
ja
in
pop
sbb
pop
xchg
xchg
std
push
aas
lock
flds
jae
lret
shll
and
imul
jecxz
insl
out
pop
jecxz
inc
test
dec
shll
cmpsb
aas
loope
popa
out
rclb
ds
jle
inc
dec
add
sahf
and
mov
fdivp
nop
int
pop
mov
dec
out
xlat
xor
icebp
or
or
clc
xchg
nop
xchg
adc
es
adc
jl
imul
loopne
popa
ss
xchg
xchg
int
jge
sbb
and
xchg
loopne
loopew
iret
adc
mov
pop
out
aam
push
jle
mov
lods
arpl
mov
subl
les
sbb
or
ja
leave
lret
ja
mov
into
scas
imul
mov
sub
bound
cltd
mov
add
mov
insl
sahf
ja
enter
dec
and
lret
adcl
mov
test
sub
mov
sbb
pop
adc
jmp
cmp
xchg
add
inc
lahf
dec
cmp
mov
das
popf
cmp
mov
data16
sbb
test
outsl
ss
sub
xchg
xor
cltd
inc
stos
das
dec
insl
xorb
sti
aam
mov
cmp
fistpl
jge
stc
cmpsb
xchg
std
or
sub
vpcmpeqw
adc
or
fstpl
in
in
fdivrs
xchg
stos
push
pop
xchg
xchg
jae
sahf
out
adc
in
sahf
xor
sub
je
pusha
inc
sbb
mov
dec
pushf
jno
xor
outsl
ficoml
lret
outsb
mov
dec
adc
push
sbb
and
clc
inc
sub
stos
push
and
jo
cmc
push
cs
stos
jle
mov
mov
lcall
push
xor
or
out
push
or
dec
push
sbb
lods
outsl
add
xchg
jno
sbb
inc
lods
push
scas
and
popa
and
inc
dec
jl
push
lock
jo
lds
cmp
cwtl
xchg
push
pop
and
sbb
dec
mov
dec
mov
cwtl
push
jle
andb
adc
dec
out
push
je
inc
and
and
ss
fsubl
icebp
pop
in
mov
xor
cltd
or
fstl
repnz
pusha
call
push
sbb
xchg
mov
jbe
out
xchg
aad
jle
or
sbb
lahf
loop
in
in
xor
gs
test
adc
jns
xchg
sub
jns
push
jbe
sti
add
scas
mov
jp
push
jo
mov
push
xor
push
cmp
push
mov
or
rcrb
jnp
dec
or
mov
test
push
push
fndisi(8087
sbb
xchg
movsb
out
test
faddp
sub
bound
jmp
mov
sub
sahf
push
or
adc
pop
test
data16
cltd
sub
xchg
xchg
jbe
add
pop
adc
inc
adcl
je
sub
push
sub
jb
mov
ljmp
test
dec
js
pop
xor
icebp
ljmp
jmp
mov
push
fistpll
std
xchg
pop
jne
xor
lret
pop
repnz
push
dec
in
test
leave
jmp
cmp
jb
mov
gs
fmuls
adc
cld
iret
mov
sti
cmc
pushf
gs
je
pop
xchg
adc
jmp
sbb
mov
mov
rclb
and
cwtl
xchg
inc
repz
dec
ret
sub
push
adc
xchg
pop
pop
mov
outsb
das
cmp
das
sbb
decl
ss
fldl
adc
dec
mov
in
inc
and
test
fbld
test
imul
pop
jne
jo
es
push
xchg
xor
push
dec
cmpsb
insb
push
cli
mov
bound
or
ja
stc
mov
and
enter
mull
das
mov
pusha
ds
xchg
ret
aad
mov
decb
inc
cmpsb
sbb
dec
mov
ss
or
fs
sbb
js
mov
xchg
mov
lret
pop
int
notrack
out
and
push
and
jge
or
sbbb
out
add
mov
jne
mov
stos
gs
mov
mov
adc
loop
mov
movsb
adc
or
and
dec
inc
or
pop
ret
repz
push
cs
cmp
dec
or
pop
enter
cmp
andb
or
aaa
adc
mov
dec
jnp
mov
dec
push
in
les
mov
out
add
push
insl
mov
pop
js
clc
pop
shlb
mov
and
xchg
decl
xchg
push
xchg
or
adc
std
sbb
xchg
dec
jbe
mov
mov
dec
and
pusha
sub
fsubrs
lods
jp
lahf
lock
test
insb
fdiv
cmp
push
mull
shll
cmp
rol
push
adc
cmc
push
pop
clc
test
jno
xchg
rolb
mov
inc
jle
lcall
and
icebp
pop
or
dec
in
leave
int
cmp
out
jno
and
in
push
push
cmp
sbb
mov
ss
movsb
ljmp
movsb
scas
test
hlt
push
dec
icebp
xchg
cmp
push
loopne
cwtl
adc
dec
ljmp
xlat
xor
push
mov
adc
inc
sub
push
push
mov
cmp
dec
outsl
sub
mov
mov
in
arpl
push
push
lods
jb
dec
and
and
fistps
sub
mov
mov
in
cmp
mov
xchg
nop
jmp
xlat
adc
test
fsubrl
jo
jno
xchg
lods
xchg
shrb
call
sub
add
dec
pusha
lds
out
xchg
push
out
lahf
adc
ljmp
mov
addr16
jae
fisubl
insl
xor
gs
dec
jmp
inc
mov
ja
adc
mov
mov
cmpsb
test
aad
pop
pop
or
dec
cmp
dec
mov
push
or
sub
rorl
push
cmpsl
xor
adc
pop
adc
jbe
stos
stos
jecxz
addl
es
stos
add
jge
idivb
scas
xchg
lahf
je
in
jge
in
out
jmp
mov
shlb
xlat
sub
scas
push
cwtl
outsl
pop
adc
adc
jecxz
fs
add
xor
adc
cmc
outsb
pop
push
mov
pop
into
lcall
adc
pushf
add
mov
int
xchg
cmp
popl
imul
aas
adc
xchg
sub
pushf
xor
inc
or
mov
lods
pusha
inc
pop
dec
mov
push
jmp
lea
shrl
mov
lea
dec
xchg
cmp
mov
je
sti
xchg
popa
add
sti
mov
cmp
lds
dec
out
mov
adc
jbe
push
popf
test
std
outsb
inc
test
mov
mov
daa
arpl
sub
mov
and
cmp
stc
push
adc
int3
int3
add
jns
ffreep
mov
out
int3
cmpsb
jbe
movsl
push
cltd
sbb
lods
outsb
popf
divb
pop
pop
jle
cmp
mov
add
repz
pop
enter
push
sub
jae
sbb
imul
sub
ja
jmp
xlat
push
jmp
jae
adc
push
mov
loop
sbb
mov
pop
pop
dec
mov
mov
inc
pushl
lret
dec
daa
xchg
push
pop
in
lcall
adc
push
je
pop
dec
cmp
lahf
jecxz
mov
aad
pop
in
aas
add
lahf
push
ret
and
mov
jl
xor
lahf
inc
jb
in
out
sub
xchg
sbb
pop
lret
mov
push
les
aam
je
mov
mov
pusha
xchg
loop
ret
dec
inc
dec
push
in
jnp
and
jecxz
dec
adc
cltd
scas
mov
cmp
jno
dec
popf
pop
mov
aaa
cmpsb
ja
outsl
stc
xor
psubsw
iret
ret
mov
les
out
insb
pop
cs
mov
dec
sub
push
ss
add
inc
push
add
inc
mov
imul
push
repnz
hlt
js
dec
pop
je
mov
aad
mov
push
test
jnp
sub
repnz
adc
test
out
push
in
mov
push
mov
ja
jmp
aad
dec
lea
push
cmp
xchg
popf
aad
lret
dec
adc
add
pop
cmpsb
dec
and
test
popf
pop
shll
scas
les
popf
push
fidivs
pushf
jb
dec
add
negl
push
sub
cmp
in
out
adc
cmp
lea
jg
jp
cmp
cmp
mov
mov
mov
sbb
xor
xchg
movsb
sahf
test
or
js
jbe
js
test
xchg
fwait
lahf
xchg
inc
es
clc
dec
xor
mov
loope
dec
roll
cmp
jno
mov
push
xchg
push
xor
sbb
shl
inc
shlb
mov
movzbl
sub
pop
std
dec
mov
sub
xor
dec
cmpsb
test
lods
test
jle
mov
cwtl
pushf
mov
fbld
pop
loopne
test
shll
cmp
cwtl
arpl
xor
dec
pop
mov
mov
adcl
mov
sub
repnz
xchg
mov
sub
sub
test
imulb
daa
in
jne
out
leave
cmp
and
cmpsl
stos
adc
and
jne
push
cmp
xchg
pusha
pop
mov
dec
aad
out
mov
ret
enter
rcr
adc
dec
scas
hlt
test
repz
and
nop
adc
lcall
cmpsb
out
xchg
movsl
bound
or
cld
lcall
pop
jno
push
adc
mov
repz
pop
sub
cmp
mov
or
xchg
jae
dec
imull
mov
and
jne
xor
mov
mov
movsl
fxch
ret
adc
jmp
test
pop
pop
push
mov
sub
adc
stc
test
sub
scas
outsl
mov
add
loope
sub
or
aam
sub
fsts
outsl
xchg
dec
mov
add
jge
cmpsb
into
in
sub
sub
in
xchg
dec
xchg
jbe
push
mov
jb
sub
movsb
mov
jmp
inc
push
jno
push
lret
dec
jg
dec
bound
ds
inc
test
mov
and
cmp
mov
add
cmp
out
sarl
inc
in
jns
cmp
jg
adc
insl
into
sub
shrl
icebp
ret
mov
pusha
enter
xor
iret
sbb
aas
bound
lods
pop
mov
mov
xorl
pop
add
sbb
std
and
pop
lcall
int
pop
or
ret
mov
pushf
adc
jg
sbb
jecxz
ljmp
movsl
gs
jp
out
fsubrp
iret
add
adc
sti
adc
repnz
adc
add
jne
and
dec
adc
mov
decb
je
or
fisubrs
dec
ljmp
lea
xchg
or
sbb
sbb
inc
jnp
mov
ss
dec
sahf
cmc
or
sbb
jl
sti
inc
shr
cwtl
xchg
ret
dec
adc
sarl
xchg
enter
cmp
test
pop
jns
or
mov
mov
mov
nop
adc
pop
xchg
fisubrs
sbb
scas
bound
adc
fistpl
cli
cmp
xchg
lahf
sub
sub
test
and
into
inc
mov
xor
stos
movsl
out
mov
jge
inc
popf
mov
cmc
sbb
jge
call
inc
jge
lods
iret
lahf
and
iret
jl
cmp
jbe
int3
lods
and
xchg
xor
jecxz
shlb
xor
and
out
cmp
sbb
inc
jo
and
adc
mov
jmp
imul
xchg
rcrl
mov
inc
ja
jne
daa
or
dec
mov
cmp
mov
subb
mov
mov
loop
pop
cld
mov
inc
outsl
repz
sub
mov
or
stos
mov
mov
pop
jo
repnz
cmpsb
mov
mov
fcoms
loopne
mov
mov
addb
mov
je
int3
xlat
jge
jp
rcr
scas
sbbl
or
sub
bound
push
mov
and
mov
cli
or
scas
dec
das
add
sbb
lret
mov
dec
lds
clc
push
in
push
cli
cmp
cmp
ss
dec
jno
out
into
mov
andb
inc
inc
inc
ljmp
jb
bound
ds
movsl
pop
pop
push
repnz
js
dec
jbe
cmc
mov
or
mov
je
ret
jb
cmpsb
fwait
xchg
jmp
xchg
dec
mov
xchg
pop
popw
aad
or
out
sub
aas
popf
lods
mov
dec
cltd
lret
cltd
mov
std
add
out
ss
jp
pop
mov
push
adc
dec
jmp
pop
pop
ss
fldt
sarl
gs
mov
cmc
ret
sub
inc
movsb
push
jg
mov
fwait
call
hlt
inc
add
jp
popf
rorl
pop
mov
jbe
hlt
jge
and
int
fsubrl
cs
mov
inc
les
push
aad
sub
jnp
jg
mov
sub
ss
in
fdivrs
jo
dec
adc
sbb
pop
sub
scas
jne
or
stos
lahf
sbb
hlt
xchg
cs
sub
in
test
and
push
enter
insb
adc
test
adc
add
test
shll
lods
jle
aaa
mov
repz
inc
push
xor
sbb
add
mov
jl
cmpsb
iret
add
fdivr
add
loopne
add
cwtl
aam
adc
into
xchg
notb
pop
pop
ja
push
xchg
cmp
adc
fldl
inc
int3
mov
ret
jne
das
fwait
xchg
xor
idivl
mov
in
enter
xchg
mov
sbb
add
lcall
cld
jl
jg
je
cmp
test
testl
data16
idivb
mull
push
push
add
ja
shll
sbb
mov
push
loop
inc
cmc
cmp
cmp
mov
lahf
daa
xchg
pop
jno
inc
mov
add
push
inc
pop
xchg
movsl
xchg
cs
inc
pop
mov
push
arpl
xlat
cmp
and
or
nop
xchg
jne
aas
or
mul
push
aam
fistpl
fcoml
cmc
mov
pop
stos
enter
and
pop
jp
jle
cmpsb
test
sub
movsl
outsb
sub
popf
fstps
adc
xor
pop
xchg
cmc
fcoml
add
hlt
out
arpl
ret
bound
sub
movsl
popf
push
mov
pop
lret
lcall
pop
int
xchg
popf
scas
popf
mov
cmp
jg
jno
out
incl
push
imul
out
jns
sub
dec
insl
shr
xchg
pop
or
or
inc
cmp
pop
pushf
addr16
icebp
jge
jno
shl
enter
cmp
sbbb
or
push
mov
or
dec
dec
pop
or
sub
andl
xor
sub
fcoms
inc
push
push
divl
xorl
ljmp
cmpb
pop
stos
orb
jl
sti
pop
enter
xchg
push
pop
push
inc
addb
addb
test
aas
popf
hlt
test
insl
cmp
inc
popf
cmpsl
add
ret
les
pop
sub
inc
and
xchg
add
ljmp
je
in
lret
into
das
dec
cmp
jp
push
push
cmp
and
push
dec
addb
in
push
out
fiadds
sahf
ljmp
orb
je
push
sbb
sbb
daa
push
fidivs
movsw
mov
or
xchg
test
mov
sub
je
or
daa
lea
movsb
mov
mov
or
das
push
jp
inc
rorb
loopne
addr16
enter
ss
ret
cs
mov
mov
in
adcb
and
adc
push
sbb
mov
xchg
sub
mov
xor
push
dec
insb
imul
movsl
adc
adc
lahf
push
add
xor
pop
xor
lret
test
icebp
lret
xchg
mov
sbb
jecxz
jle
mulb
jle
mov
add
dec
xor
cmpsb
and
adc
testb
mov
repnz
mov
jp
and
ret
add
push
movsb
lock
mov
inc
test
dec
and
adc
cli
test
cmp
push
and
mov
push
jmp
test
stc
mov
je
cmp
sbbl
cld
xor
fwait
les
data16
jle
xchg
cmc
jb
mov
popf
jg
mov
mov
adc
iret
or
dec
xchg
nop
inc
push
xchg
xchg
sub
mov
cmp
adc
idivb
mov
adc
out
test
imul
push
adc
cmp
push
imul
pop
outsl
adc
cmp
aaa
dec
arpl
iret
fsubrp
and
lods
pop
sbb
jnp
inc
mov
adc
jle
lcall
aaa
in
jno
mov
ret
cmp
cmpsb
xchg
clc
jno
adc
repz
ja
cwtl
adc
add
sub
sub
adc
pop
fidivrs
sbb
sub
dec
sub
mov
add
icebp
stc
ss
out
add
xor
xor
lahf
std
test
test
pop
es
jnp
dec
rorb
or
mov
sbb
sbb
xchg
enter
and
in
inc
aas
mov
jo
mov
lods
adc
inc
lret
sbb
jg
sub
jmp
sbb
push
loop
mov
cmpsb
popf
push
in
push
push
repz
in
push
and
xor
sbb
mov
dec
stos
enter
lea
jb
test
call
adc
shll
sbb
mov
sbb
push
dec
jle
shrl
aaa
into
jb
loop
insl
mov
ja
mov
lods
fistps
ljmp
sbb
sti
and
mov
add
std
adc
popa
pusha
mov
xchg
sub
xor
inc
mov
mov
fdivl
iret
rorl
jne
lods
xchg
inc
inc
movsb
push
pop
lret
scas
xchg
cmp
jnp
push
push
fistl
dec
mov
loop
ret
xchg
jle
or
cltd
jb
das
adc
jge
pop
es
add
jg
jb
push
hlt
inc
and
mov
dec
scas
into
ret
out
jae
fwait
js
fisubrl
push
lods
jmp
lds
push
jmp
push
lcall
xsaveopt
xorl
ljmp
dec
insl
mov
or
ret
es
push
gs
pop
sbb
jl
ljmp
mov
pop
dec
enter
test
pop
outsb
clc
or
inc
jge
scas
mov
add
scas
ja
dec
lret
fwait
popa
jle
mov
sahf
inc
sub
push
daa
and
pop
mov
mov
test
imul
mov
and
cmp
mov
fdivs
add
sahf
lret
repnz
sub
pop
pop
push
push
popa
gs
test
hlt
cmp
repz
jmp
dec
and
ror
nop
xchg
cmpsl
and
pop
into
fwait
sti
push
mov
cmpsl
sbb
dec
jo
dec
faddl
fdivrs
fcomps
insb
ds
push
lods
mov
sub
test
jle
test
dec
or
inc
push
ret
adc
xchg
mov
lock
outsl
stos
nop
inc
add
or
in
jge
inc
repz
and
outsb
sub
addr16
jp
lods
scas
or
pushf
mov
jb
movsb
int3
mov
cs
subl
mov
mov
adc
lods
pop
mov
dec
cs
mov
xor
jae
fs
bound
jae
adc
out
jmp
mov
add
in
jecxz
inc
shl
cld
adc
mov
repz
push
adc
int3
fcmovb
fsts
push
xorl
jno
xor
clc
lcall
dec
xchg
mov
mov
and
shlb
xchg
icebp
pop
ljmp
daa
in
test
push
pop
pop
dec
mov
adcb
fdivl
xchg
mov
sub
push
jb
ljmp
jecxz
idivb
push
sub
data16
mov
push
sti
inc
test
out
pop
adcl
xchg
imul
jo
out
test
ds
sti
adcb
sub
dec
arpl
xchg
stos
popf
jbe
or
or
and
sub
jl
jo
into
neg
pop
lret
out
call
cmpsb
xor
out
pop
outsb
lods
out
pop
and
insl
ja
ljmp
cmc
jl
rclb
xchg
mov
push
fldenv
pop
imul
mov
pop
pop
and
sub
xchg
push
xchg
adc
movsl
adc
fwait
adc
mov
mov
jae
sbb
std
or
imull
mov
pop
add
cmpb
add
jl
xorl
pop
movsl
ja
or
adc
sti
xor
call
test
jbe
insl
out
das
lret
xor
pop
pop
sbb
ljmp
div
testl
repz
jns
clc
les
lahf
jmp
cmc
inc
mov
or
pop
std
add
mov
mov
cmp
bound
shll
ja
pop
xlat
jmp
arpl
xchg
or
dec
imul
loop
in
and
movsb
pop
ja
scas
test
or
cmc
push
and
cmp
mov
arpl
xchg
jl
push
scas
lret
std
lret
and
lods
and
les
test
fistpll
mov
and
jbe
inc
inc
ret
mov
faddl
testb
jnp
pop
pop
test
inc
mov
aam
cmp
jg
mov
jmp
fcomp
cmp
push
jp
enter
fstpt
mov
aaa
pop
pop
xchg
mov
insl
and
lahf
jg
xchg
mov
push
addr16
sub
xor
or
lds
xchg
out
pop
cmpsl
subl
popl
push
fwait
jae
cli
lods
xlat
push
sbb
sbbb
out
xor
xchg
sub
or
je
ja
xor
call
int
adc
sti
lcall
mov
jecxz
into
fidivrs
cmp
inc
pop
xchg
pusha
and
push
inc
ja
mov
fsubl
stos
loopne
xchg
adc
cmpsl
mov
mov
pminsw
je
and
cld
inc
mov
sbb
adc
scas
inc
add
push
bound
iret
cmp
sbb
mov
and
test
scas
fs
sbb
mov
push
sbb
push
mov
jg
mov
leave
mov
xchg
mov
pusha
mov
cmpsb
fisttps
cmp
test
loopne
jbe
sahf
test
insl
cmp
cmp
hlt
cmp
push
out
pop
popf
jb
jo
pusha
shl
ret
push
adc
sub
push
dec
sahf
adcb
fwait
decb
imul
es
cwtl
sti
gs
mov
aaa
sub
js
sbb
inc
lcall
jae
icebp
and
cli
cwtl
jb
mov
sub
aam
cmpsl
xorl
sahf
inc
imul
inc
aaa
sub
push
jecxz
movsb
fadd
inc
xor
jo
add
pop
add
out
ljmp
mov
add
aas
mov
jne
es
mov
pusha
arpl
dec
filds
or
pop
ss
rolb
cmpsl
stos
and
push
scas
fnstcw
push
dec
stc
cmp
fwait
inc
cld
push
inc
mov
lcall
and
std
cmc
ja
sahf
sbb
loopne
adc
and
movsb
adc
push
jnp
mov
frstor
push
or
stos
add
das
cmovbe
dec
imul
mov
add
cmc
xchg
mov
sub
pop
dec
in
xchg
adc
dec
xor
je
add
adc
adc
mov
dec
stc
xchg
sbb
jns
and
notl
xchg
cli
adc
dec
and
clc
add
adc
xor
cltd
dec
in
xchg
mov
xchg
mov
jno
fcoml
hlt
jb
dec
out
pushf
or
cmpsl
out
add
test
and
lds
push
inc
pop
outsb
mov
xchg
sub
mov
pop
pop
lret
adc
loope
sbb
mov
push
fcomi
inc
mov
jecxz
mov
cmp
jae
test
xchg
pop
xchg
stos
or
lret
fs
jle
jle
std
imul
mov
pop
mov
sub
cmp
jg
cmpsl
dec
xor
mov
dec
mov
jl
or
orb
movswl
mov
pop
arpl
xchg
movsb
out
insl
push
xchg
repz
mov
fstpl
mov
movsb
cmpsb
mov
xchg
jns
push
xchg
and
pop
std
dec
cmp
pop
cwtl
jne,pn
lea
orps
rcrb
addb
cmp
cmp
sub
mov
xchg
movb
and
out
ss
stc
mov
call
sub
jbe
fwait
repnz
out
sub
test
mov
or
fstpl
loop
sub
cmp
test
shr
mov
mov
es
mov
mov
dec
dec
mov
adc
popf
sbb
aaa
dec
shl
sub
sbbl
push
lret
push
fidivrs
push
or
mov
adc
pop
arpl
loope
sbb
xor
cmpsl
cmp
or
in
cmp
enter
dec
jbe
testb
cmp
cmpsl
jbe
mov
fs
inc
xlat
jae
pop
pop
ja
add
repnz
pop
adc
loope
push
or
adc
ja
fcomps
mov
ljmp
lahf
sbbl
outsb
pop
and
xchg
push
jle
in
xchg
jge
xor
popa
push
inc
mov
xchg
data16
and
lods
loopne
enter
push
test
pop
pop
lock
pop
xchg
xorb
leave
out
and
mov
das
or
add
xchg
fs
into
pop
mov
pop
mov
mov
cs
fstpt
stc
jbe
call
mov
jbe
cmp
pop
js
int3
scas
sub
mov
cmc
sub
mov
imul
mov
mov
out
cwtl
shl
push
sbbl
xchg
lds
xchg
iret
shlb
cmp
xchg
in
data16
adc
cltd
jg
in
xor
mov
cwtl
dec
ret
adc
lods
fnstsw
and
inc
lcall
ss
adc
bound
aas
std
fimuls
push
cld
fiadds
dec
clc
xchg
jbe
jg
inc
sbb
sbb
add
loope
pop
xchg
scas
dec
cmp
push
jg
jmp
repnz
pop
push
rcrl
push
adc
mov
lods
cmpsb
push
mov
popa
enter
push
and
fwait
push
mov
mov
mov
pop
pop
lods
push
sub
int3
stos
roll
dec
fsubr
jb
in
xchg
add
xchg
mov
xchg
jnp
dec
clc
subl
sahf
shl
and
jbe
cli
fmull
hlt
add
je
loop
jns
adc
pop
adc
push
sub
lcall
jmp
lahf
and
inc
dec
out
pop
data16
cmp
loop
jp
push
inc
mov
sbb
and
scas
pop
aas
push
dec
cmp
xor
cmp
cmovbe
enter
aaa
inc
mov
xchg
fimuls
lcall
xorl
jmp
sub
xchg
dec
add
jp
inc
fisubs
mov
inc
jge
dec
xor
lcall
push
std
call
inc
xchg
cmpsb
out
divl
rcrl
testb
and
fdivr
imulb
sub
inc
hlt
test
lcall
call
jle
leave
lock
jmp
fidivs
pop
sub
pusha
aaa
js
mov
push
popa
bound
in
add
cmpsl
gs
cli
mov
jae
in
ljmp
pop
arpl
adc
jp
sbb
jbe
ja
stos
imul
dec
pushf
idivl
lcall
int
enter
dec
mov
add
test
xchg
call
push
outsb
pop
jmp
ds
mov
xchg
test
movb
pop
xor
repz
fs
dec
pop
ss
imulb
mov
mov
adc
mov
sub
aam
push
scas
mov
cmc
push
jno
sbb
repnz
andl
jno
mov
in
mov
movsb
aad
aaa
adc
cmpsb
in
pusha
cmp
mov
jecxz
int
and
stc
dec
dec
and
divl
push
sti
aas
mov
cs
cmpsl
stc
cmp
iret
mov
testl
sub
xchg
mov
mov
mov
push
lahf
repnz
push
adc
pop
push
jecxz
push
in
lcall
icebp
insb
lea
pop
les
cli
mov
dec
pushf
std
shr
stos
sub
sub
or
push
scas
loop
mov
stos
dec
push
clc
stc
enter
and
xor
inc
inc
jmp
mov
xchg
or
jp
pop
inc
push
dec
pop
pusha
popa
xchg
mov
repnz
mov
loop
int
aaa
aad
mov
mov
and
adc
aas
adc
dec
dec
cltd
sub
repnz
loop
sub
ljmp
stc
aaa
aaa
jg
mov
bnd
add
or
lahf
hlt
shr
add
leave
xchg
sub
imul
cmp
stos
cmp
scas
test
xor
ljmp
lock
mov
fimuls
xchg
adc
aaa
ss
and
mov
mov
imul
and
fistpll
repnz
xchg
cs
loop
or
mov
pushf
scas
es
adc
and
mov
mov
push
cwtl
stc
dec
scas
in
ret
fcom
add
scas
aaa
sub
mov
cmpsb
into
lock
inc
jb
pop
or
jl
sub
movsb
ss
je
outsb
jo
ljmp
mov
popf
addr16
pushf
arpl
mov
mov
push
jecxz
aad
mov
cwtl
inc
push
rclb
repnz
xor
std
dec
xchg
push
lcall
nop
pop
push
mov
mov
lret
push
stos
inc
and
push
or
rolb
in
lahf
jle
cwtl
test
test
xchg
jns
add
sub
mov
std
lret
test
add
dec
idivb
mov
jbe
push
inc
gs
std
cmp
pop
loope
dec
gs
push
ret
mov
fldt
fistpl
movsb
insb
inc
insb
push
xchg
fisttpll
test
xor
xchg
ret
sarl
dec
ja
push
pop
mov
mov
xchg
jg
ret
xchg
loop
mov
jbe
dec
and
nop
or
xchg
jge
loop
testb
fs
and
inc
cmpsl
sbb
jge
xor
jmp
jmp
sbb
ja
repz
out
fwait
or
cmp
sub
popa
inc
icebp
out
pop
popf
lret
out
add
fdivr
sub
cmp
sub
into
mov
test
inc
and
lods
or
jns
lahf
add
push
sub
repz
fwait
pop
pushf
mov
ss
push
cmpsb
adc
push
sbb
xlat
inc
push
outsl
push
in
cmovnp
and
cltd
fisubs
pop
xor
lea
mov
shrl
jae
pop
lret
and
mov
lcall
add
leave
inc
mov
or
pop
cmp
lret
xchg
daa
in
test
adc
daa
mov
inc
push
pop
sbb
jns
mov
in
jge
int3
jbe
mov
xchg
pop
push
inc
push
call
sub
fists
hlt
jno
push
enter
mov
dec
adcb
aaa
loope
hlt
mov
sti
scas
loope
popf
mov
test
mov
add
mov
pop
nop
cmp
mov
cmpsl
mov
out
adc
jmp
sub
mov
int
addr16
loope
lcall
mov
dec
movsl
es
imul
adc
push
mov
add
add
cmp
cmp
insb
xor
and
push
jbe
sub
bound
fistps
leave
cmpsb
push
sub
xor
lock
lods
jecxz
gs
mov
imul
mov
pop
and
mov
push
pop
movsb
mov
adc
dec
inc
and
out
bound
sbb
or
adc
jecxz
loop
adc
test
mov
jmp
imul
xchg
and
adc
sbb
lea
cltd
movsl
lods
stos
js
xlat
jbe
jb
sub
xor
loope
addb
mov
push
sub
pop
test
jbe
int3
mul
dec
xor
inc
push
mov
loope
dec
cmp
push
dec
add
out
andl
lret
cmp
inc
mov
dec
cltd
xor
inc
xchg
push
dec
mov
bound
and
jb
add
push
cli
xor
fs
idiv
and
pop
ss
push
push
mov
xchg
test
mov
les
lcall
pop
xchg
mov
dec
push
adc
loopne
ficompl
mov
leave
mov
adc
icebp
dec
xor
dec
xor
or
test
adc
sahf
adc
push
sub
xor
paddusb
pop
test
mov
gs
scas
shrb
lahf
xchg
test
stos
clc
mov
inc
pop
mov
jmp
jmp
mov
pop
jb
jb
in
and
cmp
mov
hlt
push
mov
cmp
xchg
jo
sbb
out
in
push
pop
pop
inc
ja
fmull
dec
fisubrs
mov
jo
femms
pop
lods
push
sbb
push
ds
clc
mov
and
mov
inc
cwtl
imull
push
dec
jge
enter
into
scas
aaa
insl
in
ja
pop
lods
pavgb
sub
inc
adc
mov
fs
mov
pop
xor
fstl
cmp
stos
sub
sub
cmpsb
orl
pop
cs
pop
push
fs
pop
mov
fstp
mov
std
pop
popa
aaa
dec
js
jl
sbb
mov
aam
xchg
icebp
lret
les
jmp
daa
jl
jg
xchg
add
dec
and
xchg
gs
and
sbb
add
sub
decb
es
or
inc
fs
fildl
jae
je
or
cmpsb
or
lcall
lahf
jbe
mov
adc
pusha
out
ds
add
and
andl
jne
jno
iret
ljmp
push
and
lret
inc
insb
adc
lret
push
out
mov
fwait
xorl
gs
dec
adc
mov
add
leave
lahf
ss
cld
ret
inc
cwtl
ljmp
xchg
int
ss
xorl
jbe
or
fildll
hlt
inc
ljmp
out
movsl
or
sub
push
sahf
fdivrp
mov
push
jbe
movsl
cmpsl
sub
jge
clc
jns
pop
in
cld
push
inc
xor
sahf
jo
repnz
sbb
inc
xor
outsl
sub
mov
add
jl
lret
xlat
pop
rorb
test
xchg
divl
jne
pop
pusha
inc
jae
dec
pusha
lret
in
pushf
gs
cmc
add
lahf
and
addr16
mov
push
push
in
cmp
je
imul
fcompl
adc
jo
daa
xchg
shrl
sbb
jns
mov
test
xchg
jmp
jne
test
sahf
or
push
jnp
imul
fdivrp
mov
negb
lahf
jo
nop
sahf
adc
cmp
inc
addb
fcompl
and
mov
push
and
mov
add
faddl
inc
mov
pop
in
in
jbe
mov
clc
push
dec
xchg
divb
sti
cli
andb
je
in
movsb
xchg
and
cltd
pop
testl
mov
jne
mov
aas
add
xor
xchg
lcall
mov
inc
mov
fchs
sub
xor
mov
sbb
push
xchg
adc
icebp
dec
xchg
mov
pop
sbb
dec
sub
xchg
mov
xor
dec
es
divb
sahf
fstl
pop
or
cwtl
push
and
jae
leave
mov
adc
sub
jp
and
push
pop
and
imul
or
popa
xor
cmp
lret
xchg
dec
notb
and
xor
add
mov
roll
ret
sar
pop
int3
adc
mov
fidivrl
sbb
jecxz
and
sub
rorl
pop
sbb
adc
xchg
sub
lret
add
negl
sbb
decb
call
add
or
cld
cmpb
test
cmpsb
rorb
jbe
pop
sub
loop
aad
jl
lret
sbb
cmp
rorl
into
inc
imul
test
xchg
push
scas
xor
xchg
add
mov
cmp
test
sahf
adc
ret
adc
push
daa
stos
jmp
bound
xchg
lret
lret
inc
jle
sahf
jmp
fwait
in
ljmp
cmp
out
add
jns
adc
adc
aas
xor
mov
and
dec
cmp
repnz
add
fists
out
lea
sub
add
dec
pop
xchg
and
jno
std
hlt
test
or
cmpsl
cmpsl
stos
test
scas
cmp
hlt
dec
outsb
std
lods
enter
fsubrl
int3
mov
pop
lcall
and
fistpll
push
pop
pop
and
xchg
xchg
xlat
cld
movsb
push
ffree
adc
pushl
in
jnp
push
jg
mov
xor
subl
pop
inc
cmpsb
xchg
ja
adcb
add
mov
push
lret
dec
jnp
fcmovnu
out
inc
cmp
cmp
dec
sub
lock
je
cmpsb
jbe
xchg
fadd
ds
xchg
sub
in
arpl
mov
mov
sbb
imull
movsb
jecxz
fnstsw
sbb
movsb
mov
stos
stc
fs
push
lret
pop
js
add
jb
sahf
mov
lret
shr
push
adc
cltd
push
mov
mov
stc
and
mov
push
sbb
sahf
jl
lcall
add
adc
push
xchg
inc
push
mov
jp
test
sbbl
dec
or
in
lock
out
aaa
xchg
shll
negl
mov
int3
push
pop
shrb
push
jae
sub
hlt
xchg
inc
xchg
push
jmp
insl
and
push
fcoms
xchg
push
mov
movsl
mov
xchg
mov
or
js
push
sub
add
lods
sahf
xchg
movsb
mov
sarl
mov
movsb
mov
ret
sub
cmp
push
dec
or
mov
lods
stos
add
enter
test
popf
add
test
fs
push
cmp
add
or
or
push
push
or
mov
sbb
out
sbb
and
ljmp
or
mov
push
std
out
shrb
ret
push
push
ss
push
in
rorb
in
aam
inc
cwtl
loopne
or
dec
in
ds
test
jle
dec
mov
jecxz
lods
and
sbb
and
jne
push
mov
lods
mov
xchg
jno
push
inc
or
mov
inc
test
xchg
pop
jne
push
fidivs
lods
sahf
or
jo
ret
movsl
or
mov
shrb
or
mov
mov
pop
push
jg
cmp
xor
jmp
adc
rcll
xor
gs
mov
loopne
push
mov
ds
lea
jne
lods
jp
sahf
nop
push
nop
or
lods
scas
add
lret
insl
jo
cld
push
mov
mov
stos
mulb
lods
lsl
lret
int
mov
test
pop
mov
ja
mov
push
in
xchg
mov
imul
sbb
lea
es
xor
or
imul
inc
insb
cs
jge
lcall
fmul
ss
xor
and
xchg
into
dec
mov
sbb
cmpb
cmp
dec
imulb
bound
xchg
sahf
js
movsb
add
shrb
movsl
out
test
lds
pop
xchg
fiaddl
push
dec
in
sti
mov
rol
dec
lahf
xchg
test
repz
mov
bound
and
jbe
cmp
lret
inc
cwtl
mov
mov
push
add
adc
aam
fwait
adcl
pop
dec
adc
mov
pop
jle
cmpsl
adc
lods
sub
mov
lods
fwait
ss
and
jge
jb
in
jp
loop
out
and
scas
inc
push
stos
popa
sub
cmc
inc
imul
xchg
stc
dec
test
icebp
into
push
sbb
mov
lcall
in
pop
push
imul
push
adc
jo
xor
scas
ficoml
and
or
mov
mov
and
pushf
fidivrs
cmpsl
scas
pop
stos
cmpsb
in
cmpsb
movsb
jl
mov
inc
rorl
punpcklwd
test
jmp
adc
shlb
inc
cmp
imul
das
cmp
pop
sub
xor
xchg
mov
jle
lret
adc
call
jecxz
xchg
lods
push
jo
out
out
aaa
push
insl
mov
cli
xchg
outsb
push
dec
imul
data16
ret
push
stos
inc
jb
cwtl
jno
dec
jg
pop
test
ds
jb
imul
divl
popa
add
cs
ja
add
enterw
movsb
sarw
cmpsl
iret
cltd
xor
in
cld
add
addb
and
jno
xchg
cli
mov
add
loopne
inc
sti
lcall
mov
fadds
frstor
xchg
sahf
call
push
fs
push
xor
sbb
lret
int3
movsb
sub
sub
and
or
cmp
push
arpl
bound
xchg
and
mov
mov
adc
xchg
roll
add
lret
mov
inc
mov
ljmp
cmpsl
pusha
addr16
fmuls
jp
adc
movsb
sub
cmp
inc
pop
movsb
les
ljmp
fildl
jg
mov
cs
mov
test
roll
and
out
iret
push
sub
outsl
nop
sti
clc
fadds
sbbb
popa
dec
pop
xchg
arpl
rcrb
aad
cmp
cmpsl
sub
and
fwait
sbbb
adcb
xor
push
push
loop
mov
fistpll
mov
movsl
js
or
rorb
cmp
sub
and
mov
ss
adc
cltd
das
add
jmp
push
cmp
dec
jbe
push
gs
subl
cmp
push
test
dec
jnp
and
ss
mov
pop
pop
js
mov
lea
push
jl
cmp
pop
inc
mov
daa
das
mov
jle
outsl
test
mov
jae
mov
sub
sbb
aam
or
fwait
sub
out
push
pop
add
mov
dec
xchg
pop
lahf
imul
mov
das
sbb
imul
push
jo
push
pop
xor
popa
mov
mov
fldt
sti
mov
shr
xor
leave
push
jle
jecxz
pop
push
push
add
bound
pop
imul
popa
pop
popa
testb
mov
sub
aam
cwtl
and
mov
jp
mov
or
pop
add
sbb
cmp
arpl
nop
and
pop
ss
jmp
leave
dec
pop
sbb
adc
push
imul
mov
or
shl
mov
sbbb
aaa
les
add
mov
std
mov
and
test
add
add
outsb
jb
movl
cmpsl
test
inc
pop
stos
rorb
lret
jno
inc
xor
sbb
jg
sub
mov
mov
stc
insb
mov
dec
into
jb
and
sub
sub
add
or
cmpsl
push
jle
xor
lea
mov
dec
cmp
push
adcl
call
xor
jbe
in
xchg
movsl
fwait
ds
and
cmpsb
dec
imul
shlb
sahf
in
mov
mov
fwait
shrb
sub
push
fwait
mov
enter
inc
insb
cmpsb
add
loop
cs
inc
gs
mov
mov
mov
xchg
cmpsl
adc
xchg
push
cltd
push
movsb
dec
inc
push
stos
cmpsb
cmpsb
cmc
insb
cs
ret
add
fsubl
pop
cmp
push
aad
or
popf
add
jecxz
enter
rorl
xor
cmp
cs
imul
or
movsl
sub
push
es
pop
mov
mov
fisttpll
inc
xchg
dec
cwtl
in
or
je
sbb
push
lret
push
cltd
mov
and
fistl
adc
orl
sbbb
push
cwtl
mov
stc
data16
cmp
and
cmc
xchg
out
imul
movsl
aam
cmc
scas
stos
test
outsl
outsb
les
cld
mov
inc
adc
gs
mov
std
andl
mulb
mov
or
jp
in
mov
mov
test
push
xchg
xor
or
jmp
mov
aad
add
mov
dec
gs
mov
xchg
lods
xchg
adc
int
jbe
aaa
adc
rorl
jmp
jno
ror
sub
arpl
stos
xor
sub
daa
insl
loop
mov
and
stos
popl
or
idivl
sub
lods
push
cmpsb
xchg
ret
neg
js
inc
pop
push
mov
mov
cmp
test
mov
inc
popf
hlt
loop
sahf
arpl
sahf
xor
and
dec
aad
push
inc
push
mov
adc
inc
mov
int3
or
int3
in
mov
pop
pop
lahf
cmpsb
dec
cmpsl
sbb
push
adc
inc
push
cmpsb
shl
jmp
pop
or
adc
xchg
test
mov
mov
cmp
stos
push
imul
cld
stos
std
pop
or
hlt
lds
or
testl
mov
fmull
rcrb
adc
xchg
cmp
es
outsl
orb
or
sbb
xchg
dec
pushf
cmp
sbb
lods
rcrb
rolb
pop
rcrb
aaa
and
movsb
pop
imulb
lret
dec
rorb
roll
adc
cli
xor
cmp
test
sahf
popa
sbb
adc
arpl
scas
adc
xchg
push
jbe
test
push
jg
out
cwtl
jge
inc
or
insl
imul
and
ja
mov
pushl
mov
jmp
cmp
in
aas
addb
sarl
sbbb
bound
int3
lret
mov
jb
sub
icebp
mov
int3
sbb
adc
adc
adc
jno
int3
add
sub
jns
mov
mov
je
nop
les
mov
loop
mov
or
mov
lock
das
mov
hlt
iret
jo
pop
movsl
lcall
int3
ljmp
lds
jle
insl
sbb
xor
jl
jge
mov
es
outsb
test
data16
lret
loopne
movsb
sub
inc
data16
cmc
push
sub
adc
push
jb
xchg
loope
push
mov
iret
add
out
mov
stos
es
jno
sub
adc
xor
adc
hlt
cwtl
sub
rcll
inc
ss
out
mov
ss
dec
mov
inc
cli
inc
push
lcall
jmp
dec
inc
test
jmp
icebp
popf
hlt
jno
mov
test
sub
push
push
xor
mul
aam
jp
negl
sti
mov
or
sub
sahf
shl
repz
cmp
or
test
negl
inc
jmp
stc
mov
shlb
or
mov
mov
lods
out
jno
fcoms
pop
ljmp
orb
out
dec
scas
loop
dec
pop
jns
iret
xchg
into
repnz
or
adc
sahf
push
cwtl
sbb
ljmp
push
add
lahf
or
xchg
into
adc
cwtl
add
xchg
repnz
adc
push
xor
mov
pop
sub
inc
push
loope
jb
movsb
pop
xchg
xor
rorb
mov
or
sbb
adc
cwtl
xchg
fimuls
negl
lods
insl
push
popf
cmpb
stc
push
dec
mov
enter
outsb
pop
push
and
jp
cmp
gs
out
dec
push
jp
mov
mov
jns
sahf
mov
aad
push
out
data16
ret
jp
xor
pop
and
sahf
movsb
mov
sbb
jo
dec
dec
cmp
movsb
adc
adc
stos
ljmp
cmp
mov
test
ds
push
add
pop
daa
shlb
in
in
ja
cs
jle
notb
je
lods
dec
sbb
fsub
sbb
cmpsl
lahf
mov
push
adc
data16
divb
movsb
addr16
jg
dec
data16
lock
cmp
xchg
lret
sub
je
mov
es
adc
mov
xor
arpl
mov
dec
xor
test
test
ljmpw
jo
mov
iret
shr
jns
cltd
pop
dec
dec
js
cmp
inc
xchg
es
xor
loopne
dec
adc
in
mov
imul
mov
push
dec
mov
cs
lret
cwtl
or
out
je
inc
pop
sahf
sbb
jl
cs
jmp
and
mov
fisubrs
mov
lret
or
adc
push
incl
push
outsb
pop
cmp
pop
and
mov
sahf
push
jle
or
mov
fcmovne
stos
adc
mov
lret
push
inc
pop
lea
mov
fs
mov
loop
cmc
ss
push
or
xor
in
loopne
arpl
cmp
out
sub
push
push
pop
lods
mov
inc
jmp
dec
cs
push
jge
call
rorb
sub
and
mov
ds
inc
in
xor
dec
jne
es
stc
push
mov
add
cmc
xchg
mov
dec
mov
cmpsb
and
mov
dec
pop
xchg
into
repnz
push
sub
cmp
out
jmp
or
inc
cwtl
fcom
jecxz
outsb
out
or
pop
addr16
xor
and
mov
inc
nop
mov
movsb
rorb
nop
push
push
xor
fidivrl
or
sbb
jbe
js
xor
loopne
fisubs
in
cmp
lock
jo
fsubl
scas
ret
mov
mov
out
loope
out
mov
addb
orb
sub
xchg
fsubl
mov
add
cwtl
jp
fildll
fisubrs
xchg
rcl
cwtl
movsl
jb
jo
dec
mov
or
sub
and
scas
repnz
dec
cmp
jmp
inc
rcr
dec
mov
je
mov
pop
fwait
scas
and
rorl
inc
ficompl
cmpsl
xchg
cmp
clc
mov
push
arpl
aas
aas
push
dec
jbe
shl
insb
mov
push
xchg
insl
shl
jle
push
ret
fwait
idivb
ljmp
dec
inc
xchg
sbb
cmc
sahf
cwtl
lret
mov
mov
dec
jbe
sub
mov
xchg
pop
jbe
sub
jbe
sub
jbe
sub
jb
lods
jb
lock
inc
stc
adc
inc
icebp
hlt
push
cs
mov
xor
cmpsl
cmpsb
insl
push
jne
aas
and
sub
jge
clc
push
das
mov
addr16
pusha
orl
gs
jmp
jbe
insb
mov
xchg
cltd
lcall
dec
push
pop
push
fs
data16
and
scas
test
cmp
xchg
ljmp
test
ja
sub
jbe
ss
xlat
pop
ret
xor
cmpsb
xchg
mov
fidivl
std
in
xchg
mov
ret
jmp
bound
xchg
push
and
jp
test
pushf
cmpsb
in
cmc
out
dec
clc
xchg
xchg
ret
jl
mul
insb
cmp
rolb
lea
fwait
push
jnp
sbb
jbe
out
jns
sbb
xor
stc
insb
jns
ret
xchg
mov
cmpsb
jle
cmp
push
jo
push
popa
clc
push
jl
fs
inc
lcall
cld
arpl
jb
xor
sub
adc
sub
test
repnz
lods
dec
or
and
jle,pn
sub
outsb
pop
push
sub
scas
jno
aaa
pop
sbb
rcll
cmp
mov
iret
shlb
cld
lret
xchg
adc
stos
movsl
sahf
pop
enter
pop
divl
xor
pop
xchg
adc
pop
push
scas
or
mov
in
jnp
ja
int3
insb
inc
push
negb
xor
outsl
xchg
fstpt
adcb
and
jbe
pop
fcmovbe
xchg
out
out
pop
in
shlb
insl
fcomps
jl
call
cmpsl
xchg
cmpl
add
xor
dec
mov
cmpsb
and
or
mov
mov
dec
jns
js
pop
pop
cmp
pop
cmp
fimuls
push
sub
sub
jno
push
insb
and
inc
add
rol
daa
push
inc
and
xlat
jb
pop
mov
imul
inc
imul
dec
lcall
push
dec
pop
add
and
sub
js
adc
popf
fists
bound
jbe
sub
nop
ret
scas
sti
xor
pushl
and
mov
andb
dec
mov
pop
cltd
dec
mov
lock
adc
bndstx
les
movsb
jno
jmp
in
gs
fildl
pushf
mov
mov
aaa
and
cld
xorl
daa
aam
xorl
jo
cli
bound
mov
je
dec
outsb
popf
pushf
or
xchg
insb
and
jns
je
adc
push
stc
dec
iret
aad
add
nop
push
or
pushf
push
pop
lds
or
bound
and
sub
dec
and
sbb
loopne
push
xchg
cmp
xchg
or
mov
xchg
leave
bound
xor
xor
push
fadd
dec
inc
incb
cld
xor
jge
mov
lock
mov
push
jmp
sbb
movsl
subl
xchg
adc
aam
ret
dec
nop
cltd
roll
jbe
xchg
iret
and
push
ret
push
mov
jnp
rorb
notb
ret
dec
cmc
ljmp
jmp
xchg
sub
mov
aaa
arpl
in
xchg
cmp
or
fcomps
sarb
stc
adc
mov
push
inc
add
dec
jae
inc
inc
sbb
icebp
scas
adc
int
cmp
es
push
mov
xor
push
dec
outsb
sub
pop
ret
adc
out
mov
in
mov
inc
popf
mov
pop
adc
ljmp
not
add
sbb
int3
dec
mov
lret
mov
push
jbe
push
int3
mov
mov
cmp
push
xchg
aaa
ljmp
push
inc
push
lock
dec
mov
inc
xor
pop
push
mov
nop
std
xor
adc
pop
jbe
js
adc
cmpl
xchg
stos
das
xchg
insl
xor
push
in
sub
ret
test
sub
aas
clc
xchg
dec
mov
movb
je
cltd
or
sahf
add
adc
xchg
adc
xor
rolb
shrb
arpl
inc
push
and
je
std
les
aaa
mov
lcall
mov
pop
jmp
bnd
mov
mov
das
scas
loopne
pop
mov
xchg
loop
push
inc
push
push
cmp
dec
into
mov
mov
cmpsl
mov
movsl
xchg
push
sbb
sbb
push
inc
inc
mov
insl
xchg
test
cmpsb
xor
jne
outsb
inc
push
inc
mov
xchg
js
adc
mov
inc
dec
test
inc
insl
cmp
cmpl
pushf
pop
cmp
or
dec
mov
pop
loope
xchg
fdivp
mov
xor
mov
dec
mov
inc
iret
int3
add
jnp
clc
cmp
js
mov
mov
int3
pop
jns
push
or
mov
or
xor
xchg
popa
push
xor
lcall
add
out
addr16
push
push
in
popa
nop
push
in
sub
pusha
inc
ret
pop
out
call
push
jle
dec
xor
adcl
rcrb
imul
jbe
mov
aad
push
add
cmpb
bound
and
fnstsw
outsl
cli
bound
outsl
push
xor
cmp
push
movsb
push
lahf
cmc
sahf
pop
mov
mov
pop
bound
mov
pop
sbb
cmc
xchg
mov
dec
fstl
daa
addr16
sahf
test
mov
dec
pop
insl
cmp
insb
cmp
fisubs
dec
imul
mov
adc
pop
mov
inc
inc
ds
mov
dec
push
aad
adc
int3
outsl
ss
mov
cmp
jecxz
mov
ds
movsb
ds
in
lcall
pop
mov
push
dec
ds
out
negl
gs
pop
xor
outsl
in
repnz
sbb
adc
cmp
rolb
js
popa
push
inc
pop
xor
bound
adc
push
in
fwait
inc
iret
clc
mov
movsb
jns
scas
xchg
sti
test
add
sbb
sub
xchg
lahf
in
scas
xor
js
movsl
out
jne
out
mov
mov
fsubrl
sub
fistpll
and
lods
jne
outsl
or
in
xchg
add
shld
jp
fdivrs
push
outsl
shrl
add
repz
mov
sbb
cs
and
mov
sub
test
inc
andb
mov
imul
mov
push
pop
jb
fwait
out
daa
outsb
cld
push
clc
and
pop
push
push
or
into
or
ds
sub
mov
arpl
mov
sbb
sahf
ss
pusha
rolb
fwait
out
lea
xchg
addb
cmp
lock
sbb
jne
pop
sbb
sub
push
enter
sub
sub
or
push
in
pop
xchg
jle
lcallw
stc
push
data16
mov
inc
pop
ljmp
mov
test
push
xchg
xchg
mov
and
push
push
mov
xchg
or
out
push
add
adc
cwtl
addr16
movsb
add
sub
dec
ret
adc
test
or
jns
jmp
sub
lea
push
mov
and
push
fisttpl
lods
hlt
xlat
ljmp
mov
pop
pop
push
lret
fwait
jb
leave
inc
lcall
push
mov
xor
xchg
mov
and
jnp
pop
lock
mov
popf
xchg
push
jle
cmpsb
jle
and
xchg
mov
mov
jns
out
inc
loop
pop
test
xor
lahf
out
fwait
lret
adc
shl
test
mov
call
xchg
sbb
jecxz
sub
xchg
xchg
xchg
les
pop
pop
sbb
jecxz
and
sbb
cltd
ljmp
sbb
adc
inc
ret
mov
fwait
push
lahf
rcrb
push
test
pop
mov
mov
orl
jmp
or
cmp
in
inc
movsb
cmpsb
mov
xchg
jnp
sbb
sahf
fcomp
push
cmpsl
inc
aaa
loope
loope
dec
add
xchg
or
pusha
inc
test
inc
cmp
sbb
inc
inc
loope
fs
dec
mov
jp
dec
dec
mov
arpl
mov
gs
mov
cmp
ljmp
push
inc
xchg
movsl
data16
dec
fs
call
pop
pop
adc
icebp
and
pop
mov
cmp
sbb
inc
dec
fistps
ret
or
push
lock
xorb
cmp
scas
arpl
push
mov
ss
mov
into
xchg
sbb
in
jne
sahf
bound
jbe
nop
ret
dec
shrb
mov
addr16
sti
and
mov
negb
push
adc
cmp
and
cmp
add
scas
jl
in
mov
dec
ljmp
pusha
test
mov
js
add
dec
imul
and
sahf
addr16
mov
dec
shrb
push
dec
xchg
lahf
jbe
shlb
pop
cmp
xchg
mulb
cmpsl
jne
movsl
cltd
lcall
dec
lret
inc
inc
cmp
jge
aam
dec
xchg
or
lock
xchg
jmp
jmp
or
ret
test
stos
je
repnz
dec
jmp
dec
rorb
leave
mov
mov
pusha
dec
rcl
mov
adc
in
push
lret
dec
loop
or
inc
ss
add
pop
adc
pusha
pop
add
ds
adc
mov
push
xorl
mov
sbb
adc
movsb
scas
mov
popf
xchg
testb
jb
jmp
out
mov
xor
dec
mov
aaa
mov
mov
cmpsl
sahf
jmp
push
insl
xor
cmp
call
mov
stc
jp
adc
add
xchg
push
je
pop
clc
push
dec
ficoms
pop
out
push
mov
mov
mov
out
js
cmp
inc
sbb
enter
adc
pop
test
pop
int3
xchg
xor
adc
jge
cli
inc
cltd
cmpsb
push
inc
int
xchg
mov
in
int
jle
pop
pusha
int
jns
enter
aas
or
xchg
jb
test
jbe
dec
xor
sti
push
or
leave
adc
mov
adc
mov
mov
push
mov
lcall
test
rcr
dec
mov
dec
mov
or
jecxz
xchg
test
cwtl
es
popa
mov
pop
inc
movsl
pop
jp
loop
popf
imul
mov
pushf
pop
inc
fdivs
gs
pop
sti
incb
xor
mov
fs
aam
rcrb
sbb
sub
mov
fs
cmp
rclb
adc
int
jno
ja
stc
sahf
loopne
jmp
pop
mov
cmp
lret
adc
push
push
cmp
xlat
adc
leave
cmp
mov
mov
or
std
push
mov
pop
mov
cmp
sti
es
insl
aaa
jecxz
mov
push
cmc
das
jecxz
ret
push
adc
fistpll
rol
jnp
pop
xchg
and
scas
loop
mov
xor
push
inc
or
outsl
or
inc
jge
icebp
lcall
in
inc
push
pop
rcrb
jae
sbb
in
notl
mov
dec
and
aam
cld
in
push
sub
pushf
pop
insb
fidivrs
mov
dec
xlat
decl
pop
sub
int3
push
mov
sub
imul
loope
outsl
xlat
xchg
jbe
loopne
jmp
xchg
stc
mov
cmp
cmpb
shlb
faddl
pop
mov
ja
ds
adc
js
adc
mov
add
xchg
les
dec
push
and
push
adc
push
add
insb
scas
inc
xchg
xchg
js
outsl
cmp
aas
jo,pn
xor
repnz
pop
mov
xchg
pop
inc
push
roll
mov
or
fcmovbe
out
pop
sbb
xchg
daa
push
les
jo
and
push
shl
out
mov
cmp
mov
mov
in
or
cmpl
dec
cs
mov
aaa
push
jl
mov
out
sbb
xchg
mov
arpl
sbb
dec
push
jb
mov
mov
loopne
test
les
xor
push
lea
mov
xchg
or
lahf
loop
pop
jle
hlt
jne
lcall
jge
stc
lcall
jl
jmp
mov
and
cli
mov
daa
les
arpl
mov
outsl
je
and
pop
sub
fcmovnu
or
lock
cmpsl
jecxz
repnz
sub
adc
sub
fcom
mov
xchg
addl
lods
data16
rolb
mov
repnz
pop
nop
push
jle
push
sub
psadbw
out
mov
jmp
sahf
fs
out
sub
aas
add
int3
stos
sbb
in
scas
inc
jo
call
sbb
xor
movsb
jbe
outsl
xchg
or
scas
lods
cmp
add
rorb
ret
or
jbe
imul
dec
jle
rclb
pop
sbb
or
pop
pop
aad
add
scas
in
jo
add
inc
mov
sti
inc
or
pop
jle
iret
sahf
int3
jmp
xor
cld
ds
data16
inc
lret
xchg
dec
push
and
insl
push
test
push
out
cmp
cmpsl
jae
fwait
push
pop
loopne
pop
leave
fs
mov
adc
pop
or
and
mov
notl
or
ret
es
cmpsl
inc
ss
sarb
notl
fadds
and
mov
mov
gs
adc
dec
lret
add
jns
sbb
aaa
lahf
sub
lret
push
call
cmc
and
dec
pop
int3
and
aaa
imulb
adc
jno
sub
les
pop
fidivrl
dec
imulb
dec
add
gs
gs
das
pop
pop
mov
mov
fists
mov
sub
cmp
push
sti
stc
arpl
dec
jne
sub
jns
mov
xchg
cmc
imul
jmp
loop
cmpsl
subb
mov
fsubrl
fs
sub
cmp
addb
std
jne
rol
loop
enter
or
xor
out
test
dec
movl
test
pop
jmp
xorl
xor
and
sub
push
testb
jne
cmp
push
mov
cmp
test
adc
pushf
dec
jns
mov
mov
push
pushf
bound
or
fidivrl
mov
lret
jns
adc
pop
loope
stc
pop
mov
popf
movswl
aaa
dec
hlt
enter
mov
cwtl
sbb
testl
mov
pusha
cmp
test
sub
mov
fbld
popa
in
jl
xchg
out
subl
push
cwtl
push
arpl
out
xchg
jno
arpl
xor
out
rorl
jae
inc
stc
sub
pop
mov
aam
out
pushf
or
outsl
mov
xlat
add
loope
mov
sti
dec
or
dec
xchg
rcr
pop
dec
insl
stos
lahf
mov
jne
leave
ljmp
ja
jle
fimuls
dec
dec
sub
or
es
pop
fwait
loop
sub
jns
gs
jno
es
sub
fidivrl
push
cltd
fnstsw
mov
mov
mov
test
adcl
ret
push
test
frstor
hlt
mov
mov
inc
sbb
outsb
imul
cmp
fisubs
and
ljmp
scas
adc
pop
push
and
lcall
out
outsb
jmp
imul
add
dec
out
mov
jl
inc
mov
int
sbb
popa
push
clc
pop
mov
mov
mov
add
lret
xor
jge
enter
rclb
dec
jnp
mov
mov
push
ss
push
push
push
in
push
shl
adc
or
jne
jbe
push
dec
out
fs
orl
js
push
fabs
in
mov
aas
jp
dec
inc
or
xchg
cmp
fcoml
shlb
jno
loop
jp
shrb
daa
test
jbe
adc
or
xchg
ret
sar
xchg
inc
or
adc
pop
dec
xchg
add
or
call
js
lret
cmp
mulb
insb
mov
xor
sub
mov
adc
data16
into
pop
in
test
mov
cmpsl
lods
mov
inc
xchg
xchg
out
sbb
xchg
sahf
jbe
aaa
daa
int3
push
push
pushf
mov
dec
add
aaa
cmp
and
rcrl
mov
movsb
roll
sbb
pop
dec
rolb
pop
outsl
test
out
adc
add
out
jg
mov
lret
movntps
dec
lret
stos
loopne
add
adc
xchg
out
mov
jo
mov
mov
enter
inc
out
clc
adc
nop
mov
fcomi
inc
ja,pn
lods
lret
pop
pop
mov
jg
push
lret
dec
out
inc
jg
mov
dec
push
mov
lret
ret
xchg
in
xchg
scas
add
cmpsb
mov
xor
stc
loop
pop
add
mov
xor
sbb
scas
and
inc
leave
mov
cmp
jnp
pop
insl
pop
sbb
push
xlat
out
push
or
and
xor
lcall
clc
cli
xchg
out
cmp
mov
aam
jecxz
iret
call
pop
mov
xchg
push
pop
testb
inc
xchg
sbb
pushl
pop
pop
leave
dec
push
lock
pop
cs
mov
and
pop
sub
fwait
rcrl
rol
xchg
shrl
mov
mov
cmpsb
jle
dec
loopne
or
rorl
inc
dec
jge
inc
movsl
ss
jb
or
inc
push
and
ljmpw
insl
sub
lret
addr16
jecxz
fstpl
cmp
cmp
ljmp
sbb
xchg
xor
cmpsl
jns
test
push
pushf
push
cli
cltd
jbe
fs
add
sub
cmpsl
push
ficomps
cltd
jmp
push
add
bound
inc
ljmp
push
hlt
xchg
push
test
movsl
mov
dec
xlat
jae
cmp
jecxz
ret
cwtl
jnp
sbb
sbb
das
adc
sbb
lea
int3
lea
repnz
imul
test
dec
mov
dec
bound
mov
inc
cmp
fstpl
xchg
adc
and
ljmp
and
loope
xor
push
sub
loop
in
mov
dec
sbb
xchg
arpl
test
sub
mov
mov
inc
mov
lret
adc
insb
cmp
mov
lods
fs
es
jo
pop
movsb
mov
jmp
xchg
mov
add
xor
sbb
jmp
cmpsb
mov
movsl
mov
push
subl
jg
nop
es
aam
stos
inc
cmp
les
xor
mov
es
fbld
add
adc
arpl
mov
cmp
jmp
pop
mov
xlat
mov
cmp
xchg
fisubrs
sti
mov
lods
test
movsb
jle
je
and
or
iret
stos
dec
cmc
bound
push
imul
fs
addb
fcomi
pop
pop
xlat
mov
and
pop
dec
mov
mov
mov
and
sahf
xchg
js
mov
clc
scas
cs
int3
sbb
lcall
mov
int3
ds
jbe
cmpb
loop
push
push
loop
scas
sahf
xchg
not
jle
das
lds
testb
mull
and
dec
push
xchg
mov
cmp
cmpsl
inc
jns
sub
mull
inc
enter
xlat
xor
gs
mov
aam
cltd
xchg
les
lea
push
arpl
nop
jne
cmp
es
xor
mov
pop
jmp
jns
in
add
mov
mov
lods
fidivrl
scas
xor
jne
push
pop
lods
sub
movsl
adc
inc
leave
ljmp
jne
bound
scas
inc
imul
stos
cmp
ficoms
icebp
mul
arpl
les
loope
fwait
pop
and
add
sti
lea
pop
xor
dec
in
inc
leave
mov
pusha
xchg
fcmovnu
repnz
out
bound
dec
inc
mov
nop
add
xchg
cmpsl
out
es
cs
sbb
push
lods
mov
sahf
push
mov
popa
dec
push
or
cmp
xorb
sahf
repz
outsb
push
xchg
adc
into
in
mov
sub
and
sbb
xchg
or
inc
xorl
adc
xchg
or
xor
push
incl
and
int
mov
or
pop
or
cmp
in
fadds
stc
mov
pop
je
sub
ret
es
pop
int3
lds
xchg
lahf
mov
movsb
cmp
inc
test
lcall
jmp
sbb
test
xchg
add
pop
cwtl
pop
lds
xchg
add
mov
lahf
pop
ret
pop
lahf
or
pop
cmp
test
nop
aam
lods
ja
sbb
adc
nop
fwait
pop
mov
test
cmp
push
inc
push
dec
xlat
inc
pop
jbe
je
mov
fstl
add
xchg
adc
movups
mov
pop
sub
mov
int
adc
mov
popfw
enter
data16
orl
push
test
ja
inc
movsl
je
jmp
cmp
and
inc
inc
sbb
xor
inc
ds
mov
movsl
xchg
jle
nop
jno
ficomps
pop
mov
add
loopne
mov
mov
jecxz,pn
push
push
into
jp
cli
mov
lahf
add
sub
jne
imul
mov
push
lcall
sbb
int3
sahf
jae
push
mov
pop
test
fstps
cmpb
mov
lret
outsl
push
push
int
add
dec
mov
aad
push
sbb
insl
outsl
sti
test
push
jecxz
cmp
cmp
lahf
out
push
inc
insl
cmc
add
decb
pop
shll
cmpsb
adc
cltd
fistpl
jg
push
push
or
in
stos
loopne
jae
pop
enter
jbe
adc
mov
xlat
jp
jae
mov
movsb
filds
je
aaa
xchg
lcall
pushf
xor
call
test
xchg
mov
cmp
dec
pop
aas
repz
dec
leave
int3
mov
insb
push
xchg
inc
sub
bnd
test
xor
cmp
mov
lock
out
jne
mov
incl
inc
dec
pop
push
pop
pop
sbb
pop
mov
std
mov
adc
insw
xchg
push
add
and
shll
cmp
cmp
dec
daa
nop
ss
push
xchg
pop
add
jg
sub
mov
sbb
jne
popf
mov
addr16
cmc
pop
mov
or
pop
dec
mov
cltd
lcall
xchg
jb
ret
cmpl
xor
cmc
dec
fidivl
test
xchg
lods
sub
jne
fs
push
jb
popf
stos
jno
mov
movsb
cmp
or
xor
push
add
and
data16
xchg
pop
fsubp
lcall
sti
jae
gs
rol
mov
mov
mov
mov
xchg
movsl
ret
mov
push
popf
mov
mov
int
insb
xchg
cmpsl
fwait
into
stos
dec
lahf
inc
xor
popf
test
xor
adc
jle
cli
loop
rclb
jbe
cmpsl
xchg
adc
fdivrl
sub
sub
mov
lret
test
pop
push
icebp
and
stos
fsubl
test
jmp
jns
inc
sub
adcb
inc
jbe
in
dec
into
pop
push
test
mov
push
pop
jns
cmp
aas
mov
js
and
inc
inc
sub
dec
mov
ja
lock
inc
aas
js
out
test
rorb
push
fistps
mov
outsl
and
fdiv
jae
push
push
adcb
inc
out
pusha
scas
xchg
in
adc
cmpb
pop
or
jo
pop
mov
ja
and
and
jb
ljmp
pop
mov
stos
and
clc
movsb
jnp
push
mov
aaa
jle
lods
out
add
popf
sub
jne
pop
pop
fstpl
adcb
pop
push
cs
scas
js
movsb
xchg
das
xchg
mov
dec
mov
and
xorb
pushf
movl
cmp
pop
movsb
inc
bound
cmc
cmpsl
imul
push
lahf
mov
mulb
pop
cmp
or
xor
push
pop
popa
mov
xchg
stos
cli
out
pop
cmc
aas
adc
int3
ss
call
xchg
pusha
dec
push
clc
push
cmp
mov
xchg
daa
fucomi
jg
xor
pop
nop
ja
xor
in
lds
jbe
adc
dec
adc
outsl
lahf
enter
xchg
adc
aas
mov
inc
ss
lds
in
cmp
push
pop
ss
ret
movsb
xor
adc
jno
fidivrl
inc
out
addr16
test
js
add
push
add
in
mov
adc
lcall
sub
and
adc
pop
cmpsl
lcall
mov
and
icebp
cmpsb
pop
into
push
or
xor
jg
test
ljmp
scas
push
stos
dec
std
dec
mov
shll
mov
std
push
jp
bnd
mov
jbe
cmp
bnd
icebp
movsb
addr16
repnz
sbb
sbb
xchg
mov
mov
rolb
xchg
fdivl
xor
mov
enter
mov
inc
stos
je
stos
jnp
or
inc
sti
sarl
dec
inc
jb
mov
cmp
out
adc
icebp
lcall
stos
xor
mov
sbb
cltd
out
sub
fs
push
and
ret
in
loop
push
lret
jbe
lods
xchg
add
mov
mov
pop
push
push
adc
fbld
mov
out
cmpsl
adc
cmc
int3
dec
icebp
out
arpl
pop
hlt
ret
into
mov
jnp
lcall
imul
sub
sub
cltd
jno
pop
imul
ud1
aas
ljmp
jb
addr16
arpl
add
dec
add
setno
lahf
ds
pop
sub
inc
adcl
loopne
iret
push
out
in
cmpsb
stc
and
xchg
outsb
loope
mov
lds
pop
decl
outsl
dec
inc
lahf
xchg
out
mov
or
jl
stos
inc
and
push
stos
mov
dec
xchg
pop
pcmpeqd
inc
or
stos
mov
leave
pop
mov
jbe
cs
xor
arpl
cld
popf
std
xchg
cmpb
inc
cmc
push
mov
dec
out
ss
fadds
fldt
mov
adcb
shrb
repz
push
out
xchg
adc
xor
repnz
ret
decb
loop
je
mov
test
inc
mov
and
js
sub
lea
and
inc
into
pop
cmp
arpl
loope
loop
cmp
cmp
cwtl
stos
iret
out
arpl
scas
jmp
lds
loopne
mov
stos
push
cmp
pop
insl
les
xor
bound
dec
loop
mov
into
dec
das
pop
repnz
mov
mov
pop
xchg
dec
loopne
xchg
data16
cld
lods
mov
test
jb
jae
xchg
mov
jecxz
lds
adc
leave
jmp
mov
adc
or
xor
fsubl
mov
in
test
sub
and
ss
mov
lods
adc
and
mov
xchg
adc
aaa
pop
and
sarl
jle
push
mov
outsb
ljmp
pop
push
insb
sbb
dec
hlt
jo
mov
sar
mov
gs
dec
loopne
mov
test
xor
mulb
pop
fistl
jo
mov
or
shlb
or
push
cmpb
mov
inc
cmpsb
out
test
and
out
mov
das
mov
icebp
ss
stos
mov
jo
jo
pop
cld
mov
adc
pop
test
jmp
and
scas
xor
dec
mov
cmp
xor
rcrb
jp
xchg
push
in
or
sbb
js
es
jb
inc
mov
stc
scas
sbb
jmp
aad
sbb
pop
movsb
cmpsb
testb
dec
add
in
in
or
cmp
sbb
sbb
and
and
cmp
test
jne
cmc
insb
xchg
jno
xchg
lods
ret
mov
in
mov
mov
jmp
mov
sub
es
adc
lods
bound
cmc
mov
xchg
repz
pop
mov
popf
xchg
push
outsb
nop
adc
jge
push
leave
lea
test
or
in
test
cmpsl
add
popf
jle
cmp
pop
xor
pushf
inc
dec
push
inc
cmp
insb
sar
shlb
stos
imul
js
in
sbb
data16
outsb
arpl
sbb
stos
jp
inc
lea
push
inc
and
pop
jecxz
fstpl
xchg
add
out
sub
ds
or
sub
insl
mov
pop
cmp
mov
inc
mov
inc
pop
ja
adc
cld
lds
jecxz
nop
add
loopne
clc
std
or
inc
stos
jbe
mov
mov
enter
inc
loop
les
inc
dec
clc
lcall
cmp
dec
jno
movsl
bound
fisubrl
xchg
mov
adcl
sti
scas
daa
imul
std
lods
jae
fldt
or
mov
enter
jns
fisubrs
dec
mov
stos
sbb
sar
inc
mov
jle
sbb
sti
xlat
cmpsl
mov
aad
out
mov
dec
inc
add
mov
mov
ficomps
mov
mov
xor
iret
inc
daa
push
inc
jns
cmp
shll
dec
cmpsb
push
int
cmp
in
adc
xor
push
loop
lods
leave
fisttps
mov
mov
int
cmp
mov
fabs
sub
notb
dec
imul
push
test
add
jns
bound
stc
jmp
aam
mov
into
ret
clc
insl
mov
jbe
imul
lods
mov
fstenv
xchg
movl
and
cmp
ljmp
jo
in
add
pop
call
xchg
dec
fisttpll
adc
daa
int3
jbe
ja
sbb
popa
mov
cltd
jno
popa
notb
inc
xchg
or
xlat
xchg
push
bound
dec
rcll
lret
in
test
aas
idiv
xor
dec
daa
push
dec
sahf
mov
ja
jbe
lahf
in
or
popa
push
mov
vpmovusqw
sub
add
xchg
clc
sub
test
test
pop
std
jle
push
dec
cmp
push
loopne
jl
pop
or
imul
push
push
xchg
mov
push
xor
mov
mov
pop
push
dec
pop
jne
aaa
mov
jmp
mov
jg
dec
jmp
add
mov
enter
es
cmp
stc
push
add
jnp
sbb
cmc
movsb
pop
rorl
lret
test
repnz
mov
ljmp
mov
add
ret
ljmp
jge
jecxz
jne
sahf
pop
mov
jns
add
inc
inc
repnz
jge
fwait
xor
lret
push
into
or
outsb
jae
add
push
dec
mov
push
sub
loope
jmp
lock
arpl
pop
mov
or
push
mov
mov
iret
ljmp
mov
inc
dec
dec
mov
stc
dec
push
xchg
or
data16
insb
fisttpl
test
imul
jb
data16
fcompl
pop
nop
movsb
inc
cli
jo
jp
dec
add
test
or
stos
cmp
pushf
dec
dec
push
pop
andl
jb
aam
xchg
jle
outsb
inc
les
lcall
movsl
es
daa
xorb
lahf
in
or
into
xchg
jle
movsb
call
inc
mov
pop
push
xor
sub
sahf
push
inc
popa
test
inc
repnz
dec
out
mov
fwait
push
jle
adc
or
push
jb
inc
add
ret
pop
dec
push
xor
jbe
sbb
mov
ret
ja
mov
loope
jge
mov
jne
xor
xchg
orb
inc
inc
xor
inc
ret
jb
inc
ja
int3
loop
repz
pop
push
enter
dec
imul
into
in
xchg
sub
sahf
aas
cmp
ret
mov
and
or
hlt
rorb
mov
pop
dec
scas
roll
mov
stos
sbb
test
or
sbb
data16
pop
jne
movsb
out
loop
sub
repz
dec
fisubrl
inc
mov
xchg
nop
rclb
pop
inc
inc
jbe
into
mov
ds
fistpl
sub
inc
nop
push
mov
xor
adc
and
int
aam
mov
fsts
xor
adc
fstpl
inc
stos
dec
inc
and
xor
insl
sarl
in
movsb
sub
mov
sbb
addb
int3
scas
lcall
lcall
sbb
adc
mov
push
fistpl
add
imul
add
mov
adc
xchg
push
ja
jecxz
sarl
push
jmp
mov
cmp
pop
xchg
pop
in
ret
jl
xchg
lds
fs
orl
xor
scas
insb
adc
mov
insb
iret
enter
jmp
outsl
mov
icebp
sbb
sbb
mov
cli
gs
pop
add
sbb
pop
cmp
cmp
ds
ljmp
mov
add
mov
xchg
and
mul
pop
jecxz
pop
cld
sub
nop
int
hlt
dec
fistl
lcall
or
xchg
lcall
dec
mov
cmpsb
xor
shll
pusha
add
movsl
cs
adc
pop
mov
hlt
fsubrl
pop
dec
add
cli
mov
pop
xchg
xor
cmp
xor
jg
push
stos
movsb
mov
icebp
lret
fstpt
jp
scas
frstor
pop
adc
adcl
andb
add
jne
repz
inc
inc
push
cltd
xchg
mov
sub
add
lahf
bound
std
loop
dec
fidivs
sub
sub
imul
stc
xchg
xchg
cmp
add
arpl
xchg
mov
popf
mov
cld
mov
scas
jmp
test
es
and
ss
lahf
sub
outsb
sbb
adc
cmp
std
mov
jecxz
test
inc
lret
test
xchg
lcall
dec
int
pop
xor
std
test
jg
es
sahf
ja
cmp
popa
arpl
sbb
xadd
add
repnz
push
into
sahf
push
gs
insb
xchg
loope
xor
subl
or
in
enter
mov
dec
jecxz
enter
cmp
leave
test
xchg
xchg
sahf
sahf
pop
sub
ljmp
mov
mov
mov
cltd
repnz
adc
das
popf
dec
mov
sub
xor
mov
popa
aas
sbb
sbb
push
je
js,pt
mov
inc
pop
sbb
jg
cmpsb
rcr
push
inc
xchg
xchg
test
xchg
mov
loop
and
or
jmp
lcall
fwait
ret
and
sub
cltd
cmp
into
or
cwtl
test
cmpxchg8b
jns
sahf
bound
push
mov
push
fdiv
mov
ficomps
int3
adc
imul
sbb
mov
lret
and
mov
imul
mov
push
out
lods
fs
mov
std
cmp
cmpsb
xor
mov
iret
frstor
out
int
les
mov
out
es
pop
adc
sub
icebp
testb
nop
test
outsl
cmp
xchg
mov
arpl
int3
push
pop
xor
mov
jge
out
ss
fsts
lcall
sbb
cmp
or
mov
and
lods
cmp
roll
aas
push
cwtl
repnz
xor
or
mov
sbb
adc
shll
arpl
inc
mov
adc
jne
push
ficomps
idiv
out
inc
loop
insl
or
movsl
cmc
mov
call
xor
lea
mov
jle
test
mul
out
out
jecxz
or
mov
jns
mov
sbb
pop
fisubl
pusha
outsb
in
fucomi
jbe
loopne
or
cs
aam
xchg
insl
xor
xchg
mov
out
cltd
mov
cmc
push
mov
gs
mov
gs
mov
cmp
mov
mov
pop
shl
xchg
sub
xorl
pop
lock
fs
jne
inc
outsl
mov
into
xchg
movsb
aad
jle
jle
das
mov
sti
push
sbb
ja
sub
mov
lods
adc
pop
imulb
dec
stc
jae
fldl
outsl
data16
call
mov
push
push
out
push
dec
xchg
imul
or
inc
repnz
inc
ljmp
push
dec
mov
lcall
cmp
icebp
pop
jns
mov
push
push
jno
push
xchg
xchg
fimull
inc
jbe
ss
push
ja
cmp
shll
testl
add
repz
cli
jmp
lea
sub
ja
cmp
mov
mov
mov
aaa
push
je
add
xchg
and
mov
dec
aaa
loope
lds
xchg
jb
sbb
sarl
xlat
sub
scas
mov
decl
mov
adc
push
ret
xor
or
pop
push
mov
repz
fbstp
jl
sahf
test
adc
add
inc
xor
jns
js
mov
mov
cmp
adc
std
enter
sub
xchg
and
sahf
sarb
cmpsb
ret
xchg
xchg
insb
out
fwait
adc
xchg
sbb
or
jae
out
and
lret
cmpsb
jmp
ljmp
add
xlat
in
mov
scas
dec
sbb
add
mov
repz
xor
sahf
shlb
mov
jno
leave
std
mov
lods
pop
jb
rorl
jo
adc
cmc
inc
mov
insb
mov
sbb
fwait
cmp
sti
in
cmpsb
add
push
decl
push
cltd
adc
or
lcall
jb
pusha
xor
push
imul
jecxz
andb
movsb
lods
movsb
and
xchg
into
dec
stos
lcall
insb
push
cmpl
adc
push
xor
add
and
cmp
aaa
mov
cmpsb
mov
lret
out
add
outsb
addr16
pop
dec
mov
insb
and
aaa
jno
or
into
dec
stos
cmpsb
push
nop
push
sub
push
inc
ljmp
cmpsl
inc
jge
or
xchg
or
imul
sub
hlt
outsl
sbb
dec
clc
fimull
mov
jmp
push
cwtl
rol
mov
jg
aad
pop
mov
sub
sub
int3
sbb
pop
std
lcall
cmpsl
scas
mov
xchg
dec
inc
cmp
jecxz
jae
jmp
cmc
bound
dec
xor
cmp
mov
sub
cmp
push
push
ret
jmp
sbb
dec
orb
pop
push
jns
mov
jbe
loop
inc
sub
out
xchg
loope
mov
insb
sub
lock
stc
inc
jo
cmpsl
in
leavew
and
push
jno
popa
push
sub
or
mov
cld
popf
test
dec
sbb
shl
mov
lea
rcrl
cmp
mov
ficompl
push
mov
fs
mov
push
or
mov
popa
xor
sbb
lea
add
stos
incl
or
ss
mov
mov
fsubl
leave
xchg
xor
loopne
mov
ljmp
imul
pusha
mov
xor
fstpl
xorl
mov
push
test
dec
dec
scas
adc
mov
mov
les
or
fiadds
out
lods
sub
adc
inc
push
loope
pop
mov
fidivrl
movsl
fnstenv
dec
fldt
mov
cli
mov
mov
fs
jnp
cmp
imul
xchg
inc
inc
jno
in
jle
je
push
xchg
mov
and
inc
rcrb
mov
cmp
fildll
cmp
mov
mov
std
cmp
leave
add
repnz
or
xchg
dec
iret
lret
or
leave
mov
push
xor
or
pop
loope
ret
dec
into
repz
jl
adc
lret
cmc
imul
lds
add
xchg
pop
add
jge
mov
add
adc
jecxz
mov
mov
hlt
cmp
dec
cmc
xchg
jne
lret
sub
cmp
cmp
or
lahf
push
jno
andb
lret
sub
out
inc
inc
mov
and
mov
test
insl
or
pop
add
dec
lea
adc
dec
mulb
popf
inc
test
es
cmp
xchg
movb
sub
cmpsb
sub
mov
xchg
and
sbb
nop
test
and
dec
popa
nop
stos
cwtl
xor
push
sbb
lret
xchg
xlat
jnp
negl
shrb
int
adc
cmpsb
sub
pop
pop
jb
jbe
int3
mov
fdivr
xor
xor
cltd
mov
repz
shlb
xchg
pushf
inc
dec
das
jmp
sub
xor
into
lahf
dec
std
lds
mov
dec
rorb
idivl
sub
notl
lock
xchg
clc
jnp
xor
xor
push
data16
mov
subl
pop
add
mov
push
mov
add
dec
or
jecxz
pop
jbe
cmc
mov
cltd
push
nopl
lds
lock
push
push
xor
mov
sbb
adc
xchg
jbe
xor
lods
xor
call
bound
mov
sbb
or
cli
test
adc
adc
xchg
cmc
pusha
sub
xor
std
xchg
inc
ret
dec
pop
pop
test
add
fbld
lock
icebp
hlt
sbb
push
cwtl
rcll
lods
insl
imul
adc
xchg
sub
rcll
and
sbb
mov
scas
mov
mov
sub
push
fstpt
push
push
insl
cmp
mov
lods
outsl
mov
jmp
pop
mov
cli
lock
out
enter
and
out
or
xchg
xchg
jnp
enter
ret
insl
sahf
add
add
xchg
lock
pusha
pushw
test
mov
sub
sti
addr16
jge
jg
test
ret
and
push
jecxz
pop
xor
movsb
cmp
mov
sbb
lret
cmp
pop
test
dec
jmp
pop
cmp
inc
cmp
aaa
xor
pop
scas
sbb
xlat
loop
aam
xor
jno
adc
inc
ret
jge
dec
or
movsb
xlat
push
out
xor
push
scas
dec
jae
or
jno
popf
in
adc
xchg
adc
lods
orb
mov
mov
jp
push
mov
push
and
inc
mov
lea
sti
adc
xchg
cmpl
cmp
sbb
adc
out
jge
cmpsb
inc
adc
pushf
sarb
insl
inc
jo
stos
jp
sub
sbb
lahf
xchg
in
out
jl
sub
fisttpl
xchg
sub
orl
cmpb
inc
pop
add
inc
cmpsb
filds
popf
stc
lahf
mov
push
sbb
mov
jecxz
je
push
jle
stc
jb
adc
jns
add
adc
ret
fs
mov
cmp
xchg
pop
xor
inc
mov
fxch
add
mov
ret
xchg
xchg
dec
lahf
lods
jns
pop
std
and
xchg
inc
je
cmp
aam
jge
call
dec
insl
pusha
xchg
lahf
cmc
jbe
stos
xchg
or
lret
jl
js
popf
cmpsl
daa
aad
and
mov
add
push
mov
sahf
cmpl
sti
stos
xchg
dec
call
sbb
and
jge
into
cmp
pop
dec
adc
xor
or
fildll
jp
leave
xchg
mov
lods
sarb
je
xchg
xor
outsb
shll
cmp
adc
add
ret
jle
jle
mov
add
lods
jp
sbb
addr16
movsl
dec
je
andb
mov
xor
dec
pusha
lods
mov
adc
leave
dec
subl
addr16
movsb
pop
cmpsb
es
fcmovu
mov
xchg
mov
push
adc
aas
or
dec
ror
fnsave
in
or
cmc
scas
push
cmp
pop
push
repnz
xchg
push
fwait
mov
jne
mulb
faddp
dec
subb
data16
ljmp
mov
mov
loope
mov
dec
fnstsw
and
loopne
andl
xchg
jae
and
xor
pop
push
mov
int
lcall
and
nop
mov
call
dec
inc
aaa
shlb
add
shlb
ja
clc
cmp
loopne
daa
das
inc
mov
es
mov
fiadds
dec
or
or
ljmp
cwtl
inc
in
pop
repnz
adc
test
cli
cmpsl
enter
dec
xchg
out
xchg
lfs
out
inc
dec
loope
out
jbe
ret
rclb
cmp
ror
cmpsl
sub
leave
adc
sub
out
fimull
pop
pop
and
sahf
outsl
into
ret
lock
pusha
cmp
or
inc
fmuls
mov
mov
arpl
aaa
call
addr16
mov
pushf
stos
jge
arpl
mov
data16
ret
cmp
push
bound
xchg
push
sbb
loopne
or
jb
or
mov
nop
nop
shlb
cmp
ja
sbb
dec
movsb
test
loop
pusha
push
iret
push
dec
xor
imul
jb
add
sub
repnz
pop
mov
pop
es
push
in
ret
cld
or
xchg
adc
cmpsb
popa
enter
ljmp
arpl
jg
rorl
cs
mov
shll
scas
lahf
pop
ror
pop
or
inc
sbb
test
push
xchg
imul
sub
cmp
lret
push
stos
sarb
int3
testb
dec
cmp
xor
adc
pop
sbb
sbb
add
fcmovnu
stos
mov
rcr
sub
loopne
mov
inc
or
cwtl
bound
ss
jle
stos
pop
and
mov
sub
std
test
xlat
jae
add
sbb
imulb
pop
pop
mov
adc
testl
and
orl
aas
cmp
mull
mov
and
and
pop
shl
sti
aas
adc
and
pop
out
add
mov
and
mov
push
pop
mov
sub
pop
das
pop
push
dec
jo
xchg
mov
and
in
mov
imulb
mov
pop
or
jo
xor
xchg
je
sbb
xor
adc
ljmp
sub
fnstcw
hlt
jb
iret
jmp
mov
mov
inc
xor
pop
jbe
xchg
out
fadds
push
scas
or
fcomps
add
mov
pop
les
push
popa
fldt
stos
add
cmpsl
mov
inc
cmpsb
cwtl
xor
test
mov
repnz
mov
xor
inc
mov
push
in
insb
mov
xchg
mov
jecxz
mov
mov
dec
subl
fsubr
mov
jp
addr16
xchg
ret
xor
push
sub
jns
xor
mov
dec
lods
loope
aad
pusha
push
aad
mov
cmc
pop
in
adc
mov
jae
lret
mov
mov
out
mov
push
dec
pop
mov
and
enter
mov
pop
lea
ret
sbb
cmc
adc
call
jg
fisttpl
leave
ss
xor
add
cmc
addr16
add
mov
adc
out
or
sub
in
sub
cmp
ss
sbb
inc
xchg
or
mov
test
mov
imul
dec
xchg
test
sub
jg
icebp
push
pop
in
cmpsb
jne
xchg
mov
mov
sbb
xor
outsl
xchg
lods
xor
icebp
xor
cmp
imul
push
clc
mov
scas
xchg
es
iret
mov
sbb
icebp
push
pmuludq
xchg
out
xchg
xchg
add
fldcw
and
sahf
insl
mov
push
push
sub
test
imul
sbb
in
xchg
xor
push
pop
cs
iret
enter
mov
mov
inc
inc
push
add
testb
stos
test
mov
cmpsl
jl
outsb
jle
bnd
xchg
scas
nop
andl
dec
lret
stos
mov
ljmp
mov
push
sub
xor
pop
xor
ljmp
mulb
nop
mov
jg
test
clc
inc
aas
mov
int
test
into
cmpsb
xchg
adc
orb
scas
cmpsb
shll
sbb
adc
xlat
xor
aas
movsb
xor
sbb
inc
cmp
adc
cmp
xor
xor
lods
lret
lock
std
add
sub
rcr
ret
mov
jle
fsubrl
adc
je
sbb
inc
stos
mov
ss
add
xor
out
cmp
sub
mov
mov
dec
push
cmpsl
shr
test
ss
ja
sahf
and
in
decl
ror
stc
xchg
xor
sub
push
pushw
xchg
out
dec
pop
cld
mov
and
popf
lahf
dec
push
sub
pusha
xchg
shll
push
jbe
push
inc
lods
ficompl
shrl
clc
adc
fs
insb
push
mov
pop
mov
mov
rorb
mov
inc
lods
ss
aad
jp
cs
push
shrl
movsl
adc
repz
sub
cmp
pop
mov
pop
jle
test
add
popf
mov
mov
adc
add
inc
lock
in
enter
inc
jge
mov
jns
fwait
cmp
lods
out
cmp
cmp
pop
mov
stc
bound
data16
in
arpl
sbb
lcall
ds
sub
ret
jle
lods
insb
jo
xchg
lea
inc
inc
xor
xor
dec
aam
mov
mov
repz
stos
bound
or
mov
stc
in
cmp
xor
popf
adc
ljmp
sub
cmp
fnstenv
jno
lock
hlt
and
lea
sub
mov
jnp
xchg
add
inc
ljmp
outsb
or
repz
test
jne
mov
push
sbb
ret
call
inc
jecxz
aas
mov
inc
add
pop
mov
sub
pop
lds
mov
or
out
test
adc
inc
push
sub
repnz
dec
into
sbb
nop
inc
test
mov
ss
les
cs
in
inc
and
in
mov
xchg
cmp
and
push
das
iret
fwait
imul
push
movsl
xor
je
iret
lock
inc
fwait
andb
xchg
mov
test
adc
push
ljmp
and
jmp
xchg
inc
xchg
int3
loop
xchg
mov
mov
add
xchg
pushf
ss
inc
addl
repnz
or
mov
enter
xchg
aas
xchg
xchg
sahf
aas
xor
outsl
pop
sub
add
outsb
notl
push
push
adc
in
push
fs
mov
sub
insb
jb
daa
aam
mov
int
pop
xor
jle
test
and
sbb
movsb
jge
aad
push
xor
xchg
push
pop
int3
pop
dec
xchg
cmc
sub
ficoml
insb
xchg
aam
xlat
test
sar
pop
adc
or
xchg
add
jmp
push
mov
iret
stos
push
cmc
dec
sub
sbb
lock
insl
into
cmpsb
outsb
pop
cmpb
fwait
add
aaa
cmp
ret
dec
pop
out
outsb
enter
pop
lods
mov
cmp
rolb
xor
inc
lcall
pusha
dec
sub
std
inc
inc
jle
lock
into
sbb
mov
jg
fsubs
mov
stos
xchg
jb
xor
into
pop
mov
cmp
mov
and
sbb
sub
pop
stos
xchg
andb
mov
mov
movsb
dec
adc
jle
cmpsb
xchg
icebp
test
lea
adc
pop
or
movsb
push
lahf
int3
stc
xchg
lret
repz
pop
and
add
repz
out
subb
inc
pushaw
test
push
fiadds
je,pt
das
dec
jo
subl
int
out
xchg
popf
push
cmpsl
sti
testl
pop
and
xchg
mov
insl
mov
in
cs
xchg
adcl
mov
pop
push
lods
mov
shl
xchg
sub
adc
pop
pop
push
xchg
dec
fmuls
or
add
jp
test
pop
xchg
mov
cmp
add
gs
mov
sbb
push
filds
or
dec
push
sbb
into
scas
inc
inc
mov
add
xchg
dec
out
nop
cmp
inc
imul
addb
icebp
rcrb
xchg
mov
push
sbb
mov
repnz
out
mov
sbb
dec
push
dec
ret
sbb
in
sbb
push
inc
lds
xchg
push
adc
roll
and
jo
das
push
test
and
mov
test
ds
lahf
or
xchg
les
out
adc
push
push
or
popf
pop
aaa
xchg
mov
pop
rclb
cs
call
pushf
mov
xor
outsb
movl
and
sub
xchg
pop
xchg
je
mov
inc
mov
sbb
xchg
xor
mov
imul
xchg
enter
movsl
movsb
mov
xchg
pop
std
xchg
xchg
je
mov
pop
test
sbb
mov
jge
cli
leave
jb
lret
mov
out
push
lods
xor
jne
lret
jmp
or
sbb
mov
lods
outsl
xchg
aad
push
dec
mov
xor
bound
pop
xchg
bound
jmp
out
cmp
dec
and
pusha
sub
xchg
scas
or
cmpsb
pop
lret
mov
js
subl
ret
into
fiadds
mov
mov
mov
lahf
sub
jns
cmp
cmp
jg
mov
aam
mov
sub
push
xor
cmp
faddp
jne
inc
mov
dec
pop
lcall
sbb
imul
insl
adc
mov
cld
mov
pop
ficoms
les
stos
outsb
and
cmp
push
ret
fwait
inc
sbb
cmp
push
aad
jl
loope
and
inc
leave
addb
jo
insl
mov
or
mov
cmp
cmpsl
nop
xor
clc
loop
inc
dec
mov
sub
inc
jb
aam
mov
and
loope
fimull
mov
sub
test
fnstcw
loop
rcll
jb
lods
dec
jo
jno
mov
lahf
sarl
mov
cld
int3
mov
pop
dec
lods
lods
cmp
jb
insb
push
sub
in
iret
cmp
pop
xchg
inc
and
bound
nop
out
mov
in
call
push
mov
stos
lods
inc
mov
dec
clc
addb
cmp
jmp
sbb
sarb
cmp
lds
mov
ds
outsl
dec
add
insl
jns
mov
cmp
ret
inc
adc
xor
outsb
inc
out
push
xchg
xor
pusha
aas
scas
popa
dec
mov
mov
mov
mov
xchg
jg
test
push
int
stos
mov
test
push
xchg
xchg
out
jg
mov
not
lcall
mov
lea
adcb
fisttpll
xchg
push
shlb
test
lods
mov
pop
les
pop
rorb
adc
inc
icebp
mov
mov
dec
nop
xchg
arpl
insb
inc
push
icebp
or
out
movsb
fcomps
xlat
mov
sti
cmc
mov
mov
lcall
jno
sub
ds
xchg
inc
push
xor
mov
xchg
inc
jb
fstps
test
cmpsb
dec
daa
and
lea
std
ret
push
out
rolb
dec
mov
pop
push
jl
cmp
ljmp
pop
sub
dec
call
nop
mov
fsubl
sbb
rolb
cld
mov
sbb
and
neg
les
das
lea
jmp
mov
mov
push
call
je
xlat
push
into
pop
xchg
inc
inc
test
icebp
lcall
cmp
mov
sbb
fstps
or
xchg
push
xor
mov
mov
jge
ret
jle
adc
push
xchg
push
loope
popf
push
loope
nop
daa
cmpsb
inc
dec
in
or
movsb
xchg
adc
cli
sub
jb
mov
push
in
dec
mov
cmp
jb
lahf
or
test
push
fisttpl
out
dec
mov
add
jmp
xchg
je
sbb
sbb
jnp
and
adc
push
cmp
lods
mov
push
sub
jle
mov
add
fdivs
test
int3
or
adc
leave
mov
js
scas
imul
xchg
xchg
sbb
fidivl
enter
cmp
inc
nop
sbbl
mov
movsb
data16
add
lods
pop
and
jnp,pt
xchg
ss
jge
dec
and
push
insb
sub
xor
loopne
in
adcb
mov
js
test
push
in
jne
adc
and
jmp
daa
repz
sub
adcl
cmpsl
bound
jo,pn
icebp
mov
insl
jmp
sub
test
in
repnz
insl
hlt
rol
js
daa
lock
arpl
xlat
or
mov
jne
das
xchg
cwtl
and
arpl
mov
xchg
and
add
mov
adc
jecxz
xor
nop
stos
pop
mov
in
pushf
pop
mov
xor
or
aam
test
int3
test
xchg
nop
out
test
adc
mov
orl
jnp
test
xchg
cmp
jl
mulb
scas
or
gs
orb
xchg
pop
mov
inc
pop
xorl
push
scas
push
int
adc
and
leave
into
and
fidivl
push
mov
sbb
call
outsl
and
inc
push
insb
pop
lock
jle
cmpsl
mov
cli
mov
or
je
xlat
filds
adc
insb
push
std
sub
mov
xchg
pop
push
mov
js
push
xchg
test
cmp
mov
push
push
lods
adc
push
xor
insl
test
popf
and
add
dec
jb
les
aad
popf
mov
scas
mov
stos
push
mov
sbb
les
ljmp
jp
jmp
arpl
and
bound
or
inc
push
daa
push
mov
mov
clc
inc
loop
xlat
out
imul
sahf
or
inc
jle
in
xor
imul
mov
dec
sbb
js
push
mov
push
adc
lret
mul
or
jb
sub
or
outsl
push
jg
jle
mov
inc
sbb
pop
arpl
jb
cmc
sahf
add
jl
mov
xor
ficoms
mov
pop
outsb
rorb
xchg
stos
push
shll
fimull
jle
sbb
cmp
push
pop
cltd
int
inc
sahf
in
dec
rcrb
aam
xchg
roll
xchg
jno
mov
add
lahf
push
rcll
and
jbe
insb
pusha
adcl
movsl
pop
scas
test
dec
mov
xchg
data16
lock
push
jne
inc
mov
and
mov
sarb
sarl
or
pusha
push
cmp
test
push
or
out
mov
pushf
iret
js
dec
xchg
mov
push
sub
fmull
mov
cmpsl
jae
lar
hlt
lret
in
inc
dec
sbb
adc
ficoms
xor
insl
decb
or
ja
xchg
push
pop
sti
and
movsl
mov
cli
addb
sbb
mov
mov
jae
push
and
mov
loop
mov
cmp
pop
sub
jbe
imul
sbb
lock
fmuls
imul
dec
push
scas
das
icebp
pop
daa
dec
scas
sbb
iret
pop
inc
mov
xlat
pop
push
xor
scas
cmp
pop
jge
ss
mov
dec
and
pop
inc
and
push
loop
pop
mov
das
ss
mov
gs
push
fcmovbe
xchg
rclb
add
pop
push
in
sub
cmc
jmp
mov
fnstenv
jbe
xchg
inc
fwait
addl
xchg
and
push
or
inc
jle
ds
cld
mov
push
aad
test
fs
adc
fwait
xor
out
je
and
movsl
pop
loopne
daa
push
in
mov
jbe
pop
fwait
imul
mov
xchg
rolb
sub
movb
push
xchg
mov
mov
add
push
mov
cmp
and
jmp
rcr
mov
push
sbb
imul
mov
mov
mov
xor
and
dec
sbb
jecxz
test
mov
ret
loope
rol
gs
jecxz
out
into
mov
dec
inc
inc
adc
cltd
lahf
add
xchg
pop
cmp
daa
xchg
adc
sub
cwtl
fucomip
sbb
fldt
rol
cmp
das
cld
ss
jmp
lahf
inc
rorl
je
mov
jp
inc
mov
xchg
add
cmp
nop
not
push
adc
js
sub
sar
testb
inc
mov
mov
inc
adc
mov
clc
data16
rolb
fmuls
inc
push
push
stos
fcmovne
mov
dec
xchg
movsb
mov
pop
imul
mov
les
test
pushf
orb
or
and
adc
scas
cmpsl
sbb
push
push
les
xchg
cmp
loopne
pop
or
xchg
inc
data16
and
jbe
jno
stos
adc
jmp
les
mov
inc
icebp
mov
xor
dec
ljmp
std
jmp
push
repz
ss
rcrb
ret
dec
xchg
dec
je
sarb
adc
inc
mov
shll
dec
call
pop
sub
cwtl
addr16
ss
ja
loopne
and
xor
sahf
dec
sub
inc
aas
adcb
lahf
icebp
lcall
inc
xchg
into
sbb
fsubrl
scas
or
mov
fstl
inc
dec
fisubrl
push
sub
int3
sub
inc
jne
push
mov
cli
xorb
es
push
and
adc
push
sub
fwait
and
es
sbb
add
enter
lods
test
pop
ja
push
inc
xor
inc
mov
rep
movsl
add
adc
or
test
xchg
push
inc
add
imul
gs
xor
lods
xchg
jbe
mov
arpl
pop
push
inc
lock
in
and
mov
ljmp
test
jb
cmp
mov
frstpm(287
inc
jb
pop
xor
ljmp
fcomps
aas
insb
addb
bound
cmp
push
and
clc
sahf
cmp
push
dec
lcall
or
and
imull
xor
push
lea
cmp
sarb
lock
popf
inc
hlt
cmpl
hlt
imul
lret
mov
and
cltd
pop
or
mov
or
cmpsl
mov
addr16
repz
mov
imul
or
test
mov
aaa
jbe
fidivrl
dec
push
clc
sub
lods
std
scas
mov
lcall
rolb
mov
sub
ja
push
leave
and
jns
jle
push
lea
scas
xchg
fiaddl
lahf
ret
jnp
dec
or
jge
cld
imul
lock
ficoml
sub
dec
rolb
cmpsb
pop
bound
dec
repnz
hlt
leave
pop
or
aaa
ss
int3
jbe
sbb
dec
mov
or
sbb
pop
and
inc
fcomip
adc
sbb
test
mov
lods
lock
orw
stos
out
jl
push
sahf
bound
cmp
dec
pop
mov
cli
adc
pop
in
push
pop
popaw
sbb
sub
lea
iret
outsb
jnp
xchg
aaa
pop
mov
jle
push
xor
imul
jl
shll
inc
and
imul
in
sbb
xor
shrl
and
pop
cmp
sub
mov
bswap
fldcw
int
and
xchg
xor
out
std
push
mov
daa
repz
lcall
aad
push
dec
xchg
xor
cmpsb
dec
jbe
test
mov
ja
mov
data16
repz
adcb
cld
loopne
cmpb
pushf
sbb
lock
adcl
xor
in
xor
popa
push
jno
push
testl
repnz
xor
icebp
adc
mov
cs
push
jmp
adc
sbb
pop
bound
int3
adc
sub
out
push
pop
inc
cmc
lea
push
jb
faddl
fistpl
into
rcll
cmp
mov
pop
out
jg
push
cmpsb
cmp
cmp
push
mov
jecxz
push
sbb
mov
mov
xor
dec
mov
push
and
js
mov
pop
test
fnstcw
psubq
movntps
dec
xchg
icebp
jg
cld
inc
xchg
or
mov
cmp
pop
test
out
test
cmc
cmp
shl
sub
cmp
les
push
nop
aam
xchg
iret
bound
and
mov
outsb
rcrb
cmp
into
push
jo
punpcklwd
sbbl
inc
mov
push
jge
or
in
stc
mulb
and
imul
loopne
xor
or
sub
dec
xor
and
dec
sub
jmp
dec
std
icebp
data16
lds
or
imul
jp
jl
jmp
jne
inc
jnp
push
jo
mov
into
fs
inc
mov
push
aaa
dec
repz
sbb
push
pop
or
pop
hlt
lods
jp
mov
fs
xchg
pop
pop
movsl
aas
mov
dec
mov
sub
add
dec
ljmp
je
pop
and
pop
mov
xor
cmc
jecxz
hlt
jne
mov
jl
mov
jnp
inc
cmp
mov
mov
sub
pop
pop
xchg
sbb
les
push
out
xor
test
mov
push
fucomip
pop
xor
dec
pop
loopne
mov
ljmp
jecxz
or
sbb
xor
mov
stos
cltd
gs
or
inc
add
lock
jge
ljmp
cmp
out
push
dec
jbe
jle
sub
xchg
out
test
jp
outsl
or
jo
add
sub
or
jnp
idivb
fiadds
imul
inc
lret
lret
dec
jle
cmp
iret
sub
xor
aam
xchg
jmp
leave
sub
test
and
dec
inc
mov
gs
push
in
pop
mov
jmp
aas
dec
mov
jb
or
fs
stc
jns
mov
inc
xchg
adc
out
cmp
xchg
push
mov
notl
jnp
adc
bound
stc
or
sbb
out
dec
cs
sbb
call
mov
popf
inc
sbb
das
int
or
adc
pop
out
decl
into
sbb
cmc
cli
pushf
xchg
xchg
je
dec
lods
push
mov
push
mov
nop
lret
mov
push
push
mov
ds
inc
cmc
inc
add
mov
icebp
scas
out
clc
hlt
int
or
pop
shll
sbb
adc
mov
insl
aaa
inc
sbb
jmp
jecxz
pop
mov
repnz
mov
and
inc
orl
sbb
insl
popl
sub
sub
xor
aad
inc
xor
or
cmp
jmp
pop
add
icebp
stos
xchg
pop
pop
cld
pop
sbb
dec
scas
dec
push
cld
xchg
scas
mov
pop
into
lahf
cmp
cltd
dec
insb
in
mov
xor
movsb
out
pop
sub
add
out
gs
les
hlt
mov
ficoml
xor
outsb
xchg
push
movsl
sub
jne
enter
pop
gs
xlat
test
sbb
xchg
fwait
jecxz
pop
adcl
cs
in
loop
aas
mov
fcomps
pusha
jb
and
xlat
push
dec
push
gs
inc
cmp
dec
mov
scas
adcb
jns
add
cmp
filds
inc
sub
ss
xchg
push
mov
mov
shll
hlt
pop
push
fcomps
ret
out
cmpsl
dec
cs
push
mov
es
les
pushf
jno
mov
repz
movhlps
sbb
xor
xor
jno
fldlg2
xchg
cld
dec
mov
jge
rcr
popa
ljmp
js
push
fcmovnu
xchg
dec
mov
out
insb
sub
fdivs
jne
sbb
jmp
xor
in
push
jmp
mov
push
cli
data16
sub
outsb
es
enter
test
sub
inc
adc
dec
pop
and
sub
sbb
popf
into
push
aaa
pusha
sub
xor
adcb
lcall
cld
inc
adc
js
inc
xchg
mov
push
data16
popa
in
xor
cmp
pusha
and
pusha
xchg
pusha
fisttps
pop
sub
push
add
push
cmp
popf
sub
loop
inc
cwtl
mov
push
sbb
cmp
xchg
icebp
mov
add
mov
in
xchg
dec
mulb
jg
xchg
inc
sti
in
sbb
add
test
popf
pop
sub
ret
aam
pop
call
pusha
adc
sub
std
mov
jb
mov
enter
mov
push
push
push
add
es
xchg
mov
mov
mov
es
sub
ret
push
clc
cmp
in
arpl
dec
adc
dec
xor
jmp
pop
cmpsb
loop
cmpsl
roll
adc
sub
out
xor
push
jo
sbb
adc
inc
pusha
jl,pt
pop
jle
adc
jb
addr16
pushf
sub
mov
xor
fwait
xchg
and
enter
inc
mov
xchg
sbb
mov
push
xchg
mov
int
add
punpckhbw
xor
ret
stos
dec
insl
jge
roll
sbb
push
cwtl
jnp
cltd
sub
js
pop
inc
mov
mov
sub
and
sub
dec
ss
xlat
push
ret
pop
sub
sbb
stos
out
jecxz
sub
pop
shll
ss
and
or
inc
sbb
ljmp
arpl
fisttpll
jmp
insb
fsubl
jae
pop
test
cltd
pop
sbb
mov
sub
into
inc
cwtl
sbb
mov
or
xor
pop
sub
jb
lcall
or
test
fwait
cmp
pusha
xchg
insl
push
outsl
mul
cwtl
insb
lret
shrl
mov
mov
test
sub
and
mov
int
sarb
iret
xor
popf
add
and
xchg
mov
sbb
call
jl
mov
xchg
jae
fwait
int
pop
lds
popf
dec
fsts
in
dec
outsl
testl
in
je
clc
inc
mov
lods
es
mov
pop
ss
outsb
ss
testb
gs
cmpsb
dec
sti
leave
inc
inc
js
pusha
or
dec
push
arpl
fs
cmc
dec
push
ss
push
in
mov
dec
shl
lahf
sub
pop
dec
mov
fdivs
push
into
adc
lock
int3
mov
xchg
out
jbe
in
sar
mov
jle
xor
movsb
ja
sbbb
cltd
pop
push
pop
lds
cmp
xor
repnz
outsb
jl
xlat
cs
addr16
jb
cmp
in
pop
jne
ljmp
jbe
fstl
cwtl
repz
leave
inc
and
xlat
sub
icebp
pop
enter
xchg
sbb
popf
fmull
lock
stc
sti
lret
pop
rcrb
adc
out
mov
jnp
outsl
xchg
dec
xchg
out
push
ljmp
int3
dec
xchg
jmp
int3
jle
jp
sub
out
in
cwtl
add
push
movsl
or
bound
pop
mov
mov
push
sub
push
das
in
subl
das
pop
adc
loope
mov
push
jl
aaa
movl
sbb
xor
adc
shlb
xchg
outsb
fisttps
push
cmpsb
mov
mov
lods
movsb
insb
sahf
xor
clc
pop
repnz
jns
or
stos
cltd
jno
pop
and
sub
and
out
pop
repz
adc
jp
fldenv
test
push
outsb
pop
lock
add
adc
pop
cwtl
fnstcw
stc
test
push
sti
xor
es
nop
xor
cmp
jb
sbb
andb
push
cmp
cmp
xchg
push
fsubrl
insb
pop
xchg
jb
pop
out
lahf
out
jne
pop
stc
imul
sbb
and
dec
pop
repnz
mov
jo
xor
dec
lcall
mov
jb
data16
mov
data16
hlt
push
fisttpll
orl
dec
out
sub
sbbl
and
dec
push
iret
cmp
push
fnstcw
and
icebp
mov
mov
lock
test
xchg
cmp
test
push
sub
fbld
jb
mov
dec
mov
dec
aaa
jp
inc
lods
bound
mov
cmp
pop
popa
fistps
mov
in
rclb
ds
fmull
cmp
inc
bound
xchg
into
popf
out
mov
pop
out
mov
stos
lock
or
mov
or
mov
dec
nop
test
mov
das
flds
xor
out
adc
pop
nop
inc
cmp
push
dec
shlb
add
pop
in
pop
inc
pop
jecxz
aaa
xor
cmp
lea
mov
movsl
test
xor
lret
call
lcall
jmp
inc
or
pop
inc
movsl
adc
je
sbb
cs
cmpsl
popa
hlt
mov
insb
ret
notl
mov
mov
loopne
cmpl
fsubrl
and
pop
fisttpl
sahf
popf
jae
lret
loope
insb
js
sub
pop
test
aad
or
fbld
push
mov
adc
lds
idivb
repz
ja
sahf
jge
pop
jge
push
cwtl
fldt
in
hlt
dec
insl
lret
imul
hlt
popf
fsubs
xchg
inc
adc
dec
cmp
and
cmp
std
cmc
imul
xchg
mov
xor
mov
pand
xor
mov
push
inc
push
xchg
dec
jle
add
fldenv
aas
jle
js,pn
push
pop
mov
lds
mov
adc
push
and
pop
sub
dec
testl
fstl
xchg
leave
sub
sub
mov
dec
in
aam
push
nop
mov
add
fildll
jl
pause
ljmp
inc
shr
sub
dec
and
in
mov
into
lods
xchg
movsb
dec
sbb
sub
iret
push
rorl
cmp
in
out
pop
fsubrs
jb
call
inc
cmp
aad
or
xor
not
xor
xchg
cmp
aaa
popa
cld
or
push
jp
popf
adc
daa
sbb
mov
jb
add
int3
pop
enter
cltd
or
adc
jae
imulb
xchg
iret
xor
xor
in
jmp
out
or
push
cmp
jbe
xor
push
rorb
xor
jmp
fwait
and
fdivrs
adc
out
inc
out
push
loope
jnp
jbe
shrl
test
subl
idivb
outsb
push
sbb
and
in
fimull
outsl
xlat
lcall
pop
mov
dec
sub
lcall
adc
pop
movsb
enter
shl
aas
push
jno
push
repz
adc
je
int3
or
scas
out
je
cwtl
dec
mov
push
inc
lds
jg
push
ljmp
mov
cmpsl
sub
cmp
jo
and
dec
fadds
jp
lcall
pusha
sarl
lcall
mov
and
add
and
sbb
xchg
inc
jg
mov
jno
sbb
std
jecxz
sub
call
mov
add
pop
stos
cmp
inc
cwtl
sub
push
dec
push
loopne
in
in
in
test
mov
xchg
mov
xor
rorl
test
jmp
xor
std
test
adc
xor
cmp
insb
cmp
in
mov
sub
mov
aam
stos
adc
mov
xchg
mov
push
inc
call
negb
cmpl
ja
sbb
mov
adc
jp
cmc
mov
in
notb
bound
cltd
mov
das
sub
cmp
push
bound
das
out
add
lods
cli
ret
enter
jnp
push
cmp
adc
in
push
test
clc
insl
jp
mov
sbb
rclb
cmp
xchg
and
dec
xchg
jle
mov
clc
std
orl
cmc
mov
loop
mov
sub
cmpsb
jecxz
orb
clc
ss
sub
cmp
movsb
push
pushf
mov
push
mov
cmp
ljmp
pop
outsb
jbe
cwtd
lcall
cmp
push
fisubs
xor
fmuls
cmp
or
dec
mov
cli
cmc
mov
pop
jne
inc
ljmp
pop
les
xchg
dec
push
mov
test
jo
dec
mov
add
cs
xchg
in
repz
ja
insl
dec
sbb
jg
pop
stos
gs
ljmp
pop
xchg
jg
clc
std
jnp
dec
sbb
xchg
sub
dec
scas
cmpsl
xor
inc
aad
stc
out
push
pusha
mov
push
cli
xorl
int3
test
pop
jp
jp
cmc
lds
hlt
pop
ja
fwait
ss
cs
loop
push
mov
push
push
leave
pop
xchg
in
in
and
insb
aam
cmp
int
ja
or
and
sbb
xor
push
pop
and
loopne
dec
sub
inc
inc
repz
adc
imul
cmpsb
mov
add
int3
mov
scas
sbb
ljmp
aam
dec
adc
ljmp
dec
adc
inc
pop
cmp
xchg
pop
in
fidivrl
mov
pop
sbb
jg
aas
jbe
ret
dec
sbb
push
data16
push
pushf
or
lret
icebp
dec
cmpsb
xor
out
adc
cmpsl
ja
ret
in
mov
ds
icebp
daa
shr
xor
pop
ss
sub
icebp
scas
push
inc
negl
mov
jl
jne
xchg
mov
cmpsb
mov
mov
xor
push
shr
push
pusha
into
xchg
push
push
dec
arpl
jnp
aaa
addl
jecxz
js
ljmp
pop
stos
jmp
dec
clc
testl
ds
mov
jg
lcall
mov
xor
ret
cltd
inc
dec
adc
cs
mov
test
push
test
pop
push
adc
cli
imul
dec
sbb
adc
movsl
orb
jbe
sahf
das
loope
cmp
lock
adc
cmpsb
pushf
pusha
enter
mov
mov
mov
cmpsb
pop
mov
test
arpl
mov
mov
xor
mov
jnp
xchg
pusha
sahf
pop
cmp
rcll
or
xor
dec
std
negb
not
das
sahf
cmp
mov
dec
push
movsb
or
sub
les
xchg
cmc
fsubp
mov
bnd
push
clc
sub
xchg
stc
lcall
jbe
nop
mov
lea
push
ja
pop
mov
push
push
push
addr16
icebp
xor
sub
jmp
adc
dec
push
jnp
mov
pop
enter
gs
and
or
movsb
in
arpl
divb
adc
pop
adc
dec
cli
dec
scas
fsubrl
cwtl
pop
inc
mov
out
jp
xchg
dec
cmpsl
sbbl
dec
jbe
sarb
lahf
push
inc
push
lds
mov
insb
sub
in
loop
add
out
stos
inc
pop
add
or
into
adc
mov
sbb
adc
and
mov
icebp
xchg
cmc
sbb
leave
cs
adc
pop
xchg
int
insl
loope
push
into
adc
ds
pop
mov
dec
push
jg
and
aad
movsl
sub
cmp
jg
in
movsl
mov
mov
cltd
cmp
sub
xlat
in
xorl
xchg
ljmp
xlat
sub
pop
adc
xor
lcall
jae
fs
and
cmp
mov
cwtl
xchg
push
sti
dec
adc
dec
fs
and
add
and
lock
into
scas
rcrl
ljmp
sub
mov
sbb
cmp
aas
sub
push
or
out
inc
sbb
fisubs
scas
jp
out
mov
dec
clc
jb
mov
pop
mov
mov
mov
pop
sub
inc
gs
repnz
and
sub
out
jg
push
jbe
xchg
inc
shr
mov
push
mov
push
xchg
mov
add
mov
add
dec
pushf
xchg
dec
inc
ljmp
and
mov
mov
pop
jge
ss
lahf
mov
fistps
cmpsb
jb
mov
ja
in
pop
mov
repz
sub
and
daa
movsb
inc
dec
pop
mov
outsl
jp
sub
icebp
dec
outsl
aam
jnp
ret
pop
mov
xor
jno
imul
jge
lret
in
xchg
repz
push
jno
push
dec
cltd
int
pop
inc
clc
mov
push
mov
cmpsb
and
lods
push
xchg
pop
mov
cmp
mov
push
mov
es
jp
mov
mov
inc
fsubr
add
loopne
addr16
cmp
loope
xchg
ljmp
and
inc
pusha
loopne
shrl
negl
pop
push
enter
xchg
lret
aaa
push
repnz
cmp
in
jle
cs
ret
mov
jns
fcom
xchg
or
jecxz
repz
mov
or
pop
lea
cmp
jge
mov
cmp
lds
insl
gs
aam
das
cmp
jl
mov
and
lods
jo
mov
repz
xchg
out
repz
sbb
dec
jb
jmp
shl
cmp
ljmp
and
pop
push
sbb
jle
lret
inc
cmp
adc
pop
mov
lret
mov
pushf
cmp
inc
sub
mull
shlb
cmpb
xchg
ljmp
inc
push
icebp
inc
arpl
push
ret
fstl
sbb
xchg
das
aas
scas
inc
ds
push
jns
shrb
pop
sbb
test
lods
ds
add
mov
sti
shl
pop
inc
movsb
je
fsubs
repz
outsb
dec
ret
xchg
outsl
sti
or
push
jle
push
push
cmpsb
push
push
sub
je
dec
jb
mov
mov
leave
ss
adc
repnz
pop
push
inc
decb
shrl
adc
addb
hlt
dec
mov
cmp
inc
pushf
cltd
push
xchg
outsb
inc
in
imul
loop
jp
pop
jne
xchg
mov
pop
mov
cs
std
jmp
loope
push
clc
addr16
mov
in
sbb
add
pop
movsl
cmpsl
addr16
fsubrp
ret
xor
pushf
loop
fmuls
mov
pushf
dec
fsub
das
jle
inc
mov
fcomps
or
and
daa
fcompl
cwtl
ret
sbb
and
test
lods
scas
adcl
dec
add
pop
ret
in
add
es
mov
clc
cmpsb
pop
jns
in
fcmove
xor
cmp
lret
dec
add
jmp
lcall
jno
sub
push
flds
shlb
sbb
mov
stos
je
jmp
rcrl
mov
test
addr16
out
mov
jbe
sarb
inc
pop
mov
push
xchg
push
cmp
iret
push
jae
gs
call
mov
loop
in
sbb
in
addl
test
movsl
mov
test
lods
cmp
call
dec
inc
and
fisttps
stos
push
inc
hlt
pop
call
test
cmp
sahf
mov
dec
inc
jle
adc
xchg
movsl
mov
clc
arpl
push
stos
pop
fsts
mov
movsb
dec
xor
pop
aaa
push
test
inc
sbb
mov
movsb
xchg
mov
push
cli
lods
fsts
pop
and
into
aas
jge
popa
cmp
out
fs
mov
adcb
enter
out
in
cmp
clc
fimuls
movsw
test
negb
push
lods
push
int3
adc
mov
popf
bound
fstpl
lods
sarl
ret
or
sbb
mov
xor
movl
aas
gs
cltd
mov
sub
hlt
imul
cmp
lds
and
aad
insl
pop
pop
pop
push
scas
xchg
fs
sbbl
dec
push
dec
repz
cmp
popa
adc
movsl
es
inc
push
xchg
and
decb
in
or
jp
ss
je
jbe
lret
inc
cmp
stc
test
popa
adc
push
mov
xor
pusha
inc
mov
jno
fnsave
mov
sbb
xchg
or
inc
push
lods
ficoms
fcoml
jmp
xor
jb
add
inc
pop
jmp
cmp
test
dec
mov
mov
push
jle
fdivs
mov
movsl
int
pop
pusha
cli
push
pop
cli
repnz
sub
cli
sub
fs
sub
mov
stos
int
imul
sub
insl
xor
add
sahf
cld
cld
stc
or
icebp
mov
ds
cltd
test
mov
adcb
jge
xchg
loopne
cmp
mov
dec
adc
jge
push
jb
push
jnp
lods
pop
test
movsb
addb
imull
and
lcall
gs
adc
sub
enter
rclb
loop
sub
lock
arpl
cmpsb
push
xchg
jne
inc
and
sbb
jbe
dec
cmp
sub
pop
aad
ja
lret
cli
push
or
mov
fwait
cmpsb
xor
sbbb
inc
cltd
cmp
movsb
test
ds
inc
pop
inc
adcb
jnp
jge
icebp
stos
pop
push
pop
jmp
xchg
cmp
pop
sub
cmc
inc
add
cmpb
addr16
cld
nop
push
sbb
shll
mov
sbb
in
mov
inc
subb
dec
sub
add
sub
popa
mov
lods
movsb
xor
mov
std
and
rcll
inc
adc
lea
scas
shll
inc
xor
pop
bound
xor
or
adc
push
imul
inc
test
sbb
aas
in
adc
push
stos
out
test
xor
pop
popa
mov
cmp
and
clc
fldenv
in
loope
sbb
adc
pushf
pushf
adc
pop
bound
sbb
sub
fcompl
cld
mov
sub
jp
jg
add
aaa
imul
repnz
add
and
ficoms
inc
les
ljmp
inc
test
dec
pop
sub
pop
inc
fs
bound
pop
adc
sbb
int
lcall
add
mov
sub
mov
push
sub
sti
lock
cs
lcall
cmp
cmpsb
loopne
repz
sbb
jmp
xchg
cs
add
mov
xor
mov
int
and
or
mov
jae
xchg
js
sbb
and
add
push
dec
cmc
mov
dec
jmp
mov
and
in
pop
dec
xchg
xchg
pop
push
icebp
cmpsb
mov
mov
inc
ja
mov
dec
lahf
xchg
mov
rcl
dec
imul
pop
mov
sbb
pop
sbb
enter
add
cmp
fisubl
lret
aas
gs
popaw
cmp
and
lahf
mov
xchg
xlat
orl
rcrl
lret
je
pop
loopne
nop
xor
gs
xorb
push
js
push
sbb
push
dec
sub
clc
test
mov
movsb
pop
shlb
aad
mov
sbb
or
push
mov
xchg
insl
sub
cmp
test
insl
xor
adc
pop
add
aad
popa
out
jmp
sbb
popf
mov
popf
xchg
push
fisttps
mov
jbe
jno
notb
roll
mov
sarl
sbb
rclb
pop
test
ret
inc
fsubl
and
pop
cmp
das
sqrtps
inc
sbb
sub
mov
cmp
mov
test
pop
daa
iret
xchg
les
popa
xchg
and
jle
sbb
dec
mov
pop
jmp
test
push
or
dec
lds
mov
add
icebp
out
inc
cmc
in
push
push
dec
and
push
jle
dec
movsb
test
fldt
push
push
sbb
xor
cs
in
pop
cmp
call
push
lock
testl
xlat
push
pushf
mov
push
dec
dec
ret
pop
out
inc
cmp
call
push
lret
insl
adc
sub
jnp
and
cmp
xchg
testl
sbb
mov
ljmp
cmc
or
jg
push
mov
loop
out
shr
cmc
adcb
jmp
sub
push
cmp
or
enter
sub
pop
cwtl
dec
ds
and
cli
clc
outsb
bound
mov
adcb
out
xchg
mov
es
out
out
pop
jae
into
out
adc
or
imul
sub
and
jp
mov
js
cmpsb
lods
and
xchg
imul
jnp
imul
jnp
imul
jnp
imul
jnp
imul
jnp
imul
jnp
imul
sbb
leave
mov
das
cmpsb
repz
aaa
popf
lods
rep
sbb
jb
sbb
pop
sbb
sahf
inc
ss
mov
xchg
ja
xor
inc
xchg
in
inc
fwait
inc
imul
pop
sub
mov
scas
imulb
in
sbb
out
scas
jae
add
dec
push
insl
or
testb
and
push
lea
mov
mov
push
mov
jb
fistps
sbb
mov
arpl
dec
mov
xchg
insl
jmp
jbe
movsb
cltd
xor
fadds
mov
ret
lea
fwait
cmp
lea
jl
pop
int3
outsb
pop
aad
xor
addb
inc
sbb
jmp
mov
mov
sbb
shl
dec
push
cmp
and
subb
sub
ret
frstor
in
xor
cli
js
xchg
lret
rol
xchg
mov
stos
inc
repz
sti
jle
les
jecxz
and
and
les
pop
or
repz
in
cltd
stos
push
cmp
fadds
sub
dec
jge
xchg
inc
shrb
xchg
cmp
xchg
jno
popa
push
inc
mov
and
adc
sti
scas
cs
lahf
inc
mov
movsl
int
mov
xchg
or
pop
push
cmp
cmpsl
sub
jg
sbb
pop
dec
ja
pop
stos
push
in
popa
mov
add
xor
cli
sub
stc
mov
je
mov
sbb
adc
xchg
jecxz
jg
xchg
add
out
ljmp
filds
iret
mov
orl
or
fildll
sahf
addr16
arpl
call
cmp
stos
xchg
fnstcw
cmc
mov
xchg
aad
out
pop
jae
or
sub
inc
rol
pop
fwait
add
cwtl
sahf
xor
lock
adc
and
ret
cwtl
mov
js
ret
rclb
jne
xor
out
jle
js
add
and
lahf
notl
pop
fldenv
and
call
mov
sub
out
add
out
mov
ret
ror
lcall
pop
jne
pop
xchg
dec
cwtl
addr16
sub
pop
ljmp
pop
mov
ljmp
fs
idivb
xchg
hlt
cmp
jg
pop
xchg
mov
stos
and
xor
in
addb
ljmp
lahf
inc
ja
decb
fisttpll
add
xor
dec
jge
adc
dec
add
or
gs
or
jp
loop
rorb
stos
popa
mov
rcr
dec
mov
mov
mov
xchg
adcb
lahf
jb
push
cmc
push
or
js
xor
ds
sahf
sub
js
ss
jl
jp
pop
xchg
push
push
sbb
loop
dec
data16
cmpsb
adc
lods
jno
ret
pop
mov
call
pop
adc
mov
push
fiadds
push
hlt
pushf
jg
cld
lock
leave
test
out
andl
ss
lods
or
aad
aaa
inc
subb
mov
add
mov
sar
adc
inc
fists
add
sbb
cli
test
iret
pusha
sbb
inc
lock
ljmp
xchg
add
sbb
push
adc
xchg
push
out
inc
les
mov
mov
dec
aaa
lods
daa
pop
or
xor
enter
sbb
rcll
push
and
and
add
and
bnd
inc
insl
jge
scas
push
ss
out
pusha
loop
mov
sbb
imul
loopne
aam
dec
inc
add
xor
addr16
loop
ja
mov
outsl
dec
cmp
outsb
jmp
cmp
stos
push
mov
es
and
outsb
gs
ss
fs
dec
xor
inc
push
dec
or
ret
sub
test
adc
out
inc
inc
inc
test
loop
and
loopne
daa
pop
out
aaa
cmp
lock
in
sbb
pop
arpl
push
xchg
add
cld
mov
cmc
xchg
lahf
mov
mov
or
mov
sarb
out
lret
test
clc
xchg
xchg
xbegin
and
ret
clc
fcmovnbe
ret
clc
and
cmp
rol
inc
es
clc
and
rcll
hlt
std
mov
and
ret
clc
and
ret
cmpsb
arpl
sar
shrl
clc
push
sarb
jge
popf
movsl
mov
fsubs
std
repz
mov
mov
ret
mov
sarl
lds
ret
std
call
rol
leave
or
or
arpl
and
bound
jo
rol
shlb
rol
clc
jnp
in
and
or
aas
dec
sarb
out
pop
and
cwtl
sti
jmp
add
clc
and
subb
shl
cmpsl
adc
sbb
leave
mov
jg
aad
cmpsl
adc
subb
shl
cmpsl
adc
sbb
leave
mov
jg
aad
cmpsl
adc
subb
shl
cmpsl
adc
sbb
leave
mov
jg
aad
cmpsl
adc
subb
out
lahf
sti
in
push
pop
icebp
imul
ret
clc
and
adc
sub
mov
and
mov
xchg
lods
jecxz
adc
sub
mov
add
ret
clc
and
mov
add
cmc
pop
lds
outsl
lret
lret
pop
subl
adc
sub
mov
xchg
scas
stos
xchg
sbb
pop
stos
test
and
or
or
and
ret
cli
cmc
pop
lds
outsl
lret
lret
pop
subl
push
and
rol
clc
xchg
mov
cli
and
ret
cli
cmc
pop
lds
outsl
lret
lret
pop
subl
pop
loopne
fidivs
pop
or
cwtl
cmp
stos
pop
icebp
imul
clc
and
mov
sbb
cmc
pop
lds
outsl
lret
clc
sahf
rol
insl
cmp
shll
loopne
shll
or
inc
jecxz
pop
jge
rcll
in
ja
in
rol
jne
outsl
divl
jecxz
shrl
std
lods
leave
stos
jne
test
in
ja
cli
and
ret
sar
xlat
ret
clc
dec
push
in
stos
push
in
adcb
clc
or
repnz
and
fisttps
test
cltd
shlb
aam
push
insb
ds
and
dec
clc
mov
outsb
mov
cmp
inc
sahf
xchg
pop
movsl
push
inc
mov
xchg
loopne
push
xchg
out
cmpsl
leave
push
bound
insl
adc
and
push
push
sahf
lret
sbb
mov
pushf
sub
and
out
cmp
cmp
lock
popf
pushl
fildl
and
push
xchg
mov
divl
shrb
mov
push
dec
orb
jg
roll
fidivs
in
hlt
lods
leave
pop
fstp
and
mov
dec
sarl
xchg
mov
mov
popf
test
fldcw
stos
push
into
pop
lret
das
js
dec
lods
stos
aas
jl
stc
xor
jge
ds
and
call
cmpsl
lock
sbb
xchg
sub
andb
pushl
xchg
es
lahf
shlb
push
lcall
jbe
nop
call
es
in
pop
mov
xchg
pop
hlt
aaa
push
or
dec
add
inc
jbe
mov
js
push
pop
mov
fstl
and
jg
ja
pop
lret
sbb
lret
pop
shr
fwait
mov
ja
xchg
jne
pop
dec
cmpsl
std
mov
jge
ficoml
mov
jecxz
sub
test
mov
dec
sub
sub
jg
js
fstpt
out
setl
ffreep
cmp
pushf
mov
out
mov
cmp
into
mov
jecxz
mov
lret
arpl
jnp
mov
nop
out
scas
sub
pop
in
cli
aam
xchg
rcrb
pop
adc
xchg
push
xchg
fdivrs
movsb
add
lret
pop
std
inc
mov
es
mov
ret
js
ret
stos
mov
mov
xchg
mov
pop
sbb
ja
popa
aaa
test
mov
cwtl
sti
jne
es
push
lods
jbe
jbe
pop
mov
rolb
hlt
dec
mov
mov
sbb
movsb
inc
pop
loope
outsb
push
in
stos
arpl
xor
jae
mov
xor
nop
sarl
cli
xchg
pop
dec
lods
pop
in
mov
cmpsb
hlt
dec
std
lods
inc
sub
add
pop
xchg
into
outsb
adc
out
inc
daa
push
jnp
xchg
sub
inc
mov
rcr
jl
pop
fidivs
addb
pop
adc
dec
inc
pop
aaa
jns
fildl
and
pop
fidivl
add
jge
sti
inc
pop
fadds
aad
sti
or
inc
mov
sub
lcall
mov
mov
lcall
push
mov
and
sahf
movsl
mov
add
int3
mov
scas
bound
jg
scas
add
cmpsl
aaa
mov
imul
adc
fsubs
in
clc
lods
cld
scas
pop
xchg
iret
jmp
stos
fldenv
adc
cmpsl
adc
mov
fadds
mulb
fcomip
imul
rolb
pop
out
fcmovb
pop
std
xchg
add
add
int
in
or
dec
pop
mov
dec
sub
or
cmp
adc
pop
pop
ror
mov
mov
fidivl
sti
repnz
aam
rolb
pop
data16
adc
xchg
fwait
xor
popf
das
jp
jge
mov
movsl
sbb
push
xor
dec
in
shlb
add
cwtl
jmp
icebp
inc
icebp
jecxz
mov
lods
or
enter
int
sbbb
pop
xor
repnz
stos
pop
scas
outsb
xor
dec
pop
lods
adc
pop
sbb
mulb
fsts
sub
xchg
lea
out
lds
sbb
je
pop
lret
push
xchg
loopne
movb
insl
cmpl
sub
in
scas
pop
shll
xcrypt-ctr
cmpsl
pop
push
sub
add
scas
inc
shlb
and
and
pusha
push
jns
sahf
dec
and
add
mov
pop
fsts
and
push
in
lods
loop
fsubp
push
pop
loopne
xor
xor
dec
and
xchg
xlat
adc
mov
or
addr16
jge
fmuls
adcl
jmp
sub
and
insb
inc
arpl
add
mov
into
js
pusha
jnp
ds
mov
aam
or
clc
push
popf
jg
andb
test
inc
frstor
mov
notb
test
cld
pop
outsl
lock
dec
out
ss
mov
xor
cmpsb
sbb
xchg
pop
out
pop
data16
rcrl
clc
push
push
aaa
xchg
cli
dec
jl
mov
jbe
xchg
push
and
pop
in
push
lret
and
ret
scas
mov
mov
jo
in
xchg
scas
jmp
inc
and
xlat
mov
popa
imul
jo
adc
daa
shll
cmp
scas
cli
jbe
push
cmp
test
xchg
sbb
scas
cmp
and
gs
xchg
pop
sbb
cmp
mov
mov
cmp
cmp
lret
lds
pop
inc
lcall
lret
fidivrs
mov
pop
mov
and
cmp
pop
scas
inc
dec
int
pop
rclb
and
test
cmp
adc
lds
inc
shlb
aam
enter
test
out
lock
insl
adc
cmp
shl
cmp
dec
stos
mov
je
push
mov
xor
call
or
test
shl
fmull
cli
xchg
inc
mov
jae
cwtl
les
jle
shll
das
jae
aaa
cld
pop
add
stos
aam
add
mov
push
dec
mov
push
cli
and
sbb
add
int3
mov
xchg
test
mov
lods
pop
fcoms
push
das
mov
sbb
jge
push
lret
test
insl
cmp
jno
mov
pop
pop
add
jecxz
mov
aaa
pop
outsl
sbb
loope
mov
adc
ret
mov
push
and
lret
rolb
andb
lcall
aaa
adc
sti
sub
dec
rol
lahf
push
jmp
aas
adc
adcl
pusha
ret
push
or
push
movsb
in
adc
adc
lret
stos
int
shll
pop
je
scas
inc
mov
in
jno
lret
mov
push
out
clc
imul
sbb
pop
lea
sub
js
or
xchg
jge
loop
clc
lcall
enter
inc
arpl
push
pop
test
push
sub
shrb
mov
jge
and
mov
cmpsl
xor
mov
fdivrl
xor
xchg
pop
clc
push
testl
mov
scas
jno
movsl
pop
and
fldl
test
mov
dec
inc
mov
ret
in
xor
cltd
dec
mov
ss
leave
outsb
out
cmp
and
adc
jno
mov
or
xchg
mov
jecxz
lahf
cmpsl
int3
in
idivl
fiadds
cmp
in
cmp
mov
rcll
mov
inc
out
mov
les
adc
jo
out
orl
push
push
push
pop
push
sbb
lock
xchg
rcrb
rcr
sti
cwtl
loopne
mov
adc
ja
mov
pop
stos
out
sbb
adc
mov
sbb
xchg
test
lahf
mov
pushf
jnp
xorl
cmc
movsb
mov
pusha
iret
es
sub
fcoml
mov
cmp
pop
push
test
sbb
rcr
test
push
push
outsl
ja
cmpsb
ret
push
scas
xchg
es
cmp
jp
jl
lods
sbb
jge
or
enter
jno
dec
or
fyl2xp1
pop
jge
sti
push
xor
ljmp
mov
mov
outsl
sub
and
add
pop
push
gs
push
hlt
in
mov
addr16
xchg
jecxz
pop
pop
jo
loopne
sub
jno
and
notb
stos
shrl
stos
xchg
sub
repz
mov
pushf
popa
jnp
sbb
mov
pop
mov
imul
xchg
or
jnp
add
fisubrl
pop
mov
ret
cmp
mov
test
orb
loope
inc
pop
bound
dec
test
mov
out
or
aaa
push
vaddpd
and
ljmp
jge
movsl
inc
jge
mov
ss
mov
cmp
shrb
dec
cmp
sub
sbb
adc
subb
mov
call
push
lods
cmp
lock
test
lea
pop
pop
fucom
outsb
andb
push
and
insl
sub
add
cmpsl
push
mov
cmpsl
popa
push
jo
mov
arpl
lods
and
pop
mov
sub
xchg
add
or
das
push
fiadds
push
push
or
daa
jmp
mov
sub
popa
or
leave
sahf
jmp
push
pop
call
sub
inc
shl
adc
cmp
push
or
rcl
jo
add
es
popf
mov
cmp
or
pop
ffreep
dec
push
nop
movsl
pop
lret
xor
and
cmpsl
cmp
jbe
orb
cwtl
cltd
xchg
xlat
add
mov
push
jecxz
or
dec
jmp
inc
mov
daa
xchg
mov
adc
cltd
pop
in
xchg
push
rcr
jne
bound
and
andl
cltd
insb
test
imul
sti
shr
faddp
and
inc
scas
cmc
sbb
mov
xor
test
sub
push
inc
xor
cld
sub
fs
sub
mov
clc
push
adc
mov
lods
and
insl
scas
les
mov
lock
dec
dec
cltd
mov
jl
mov
notl
jmp
out
inc
mov
cmpsl
mov
push
dec
popa
fwait
sub
push
movsb
in
mov
adc
adcb
int3
imul
rorb
icebp
inc
or
mov
shlb
xchg
sbb
or
sub
lret
jae
pop
jae
mov
test
outsl
push
mov
push
lods
stos
xchg
divb
push
jae
mov
mov
in
roll
fidivs
in
stos
xchg
js
bound
data16
rorl
lods
mov
add
mov
mov
or
pop
lock
xorl
jle
repz
imul
pop
popa
fsubs
pop
fnsave
addr16
stos
cmp
mov
ds
adcl
aam
push
lcall
jnp
data16
ret
clc
dec
sub
pushf
icebp
sti
push
imulb
sub
repnz
adc
mov
cltd
mov
rcr
and
pop
les
cmp
cmpsl
movsl
call
mov
ja
jecxz
mov
inc
add
fmuls
pop
jae
je
xchg
sbb
fistpl
mov
addl
aad
adc
lds
sub
lds
ljmp
push
add
stos
adc
enter
jl
stc
aam
mov
and
sti
fs
push
xchg
daa
and
lods
shlb
xor
sub
mov
xchg
or
fwait
and
jg
loopne
mov
mov
add
cmp
mov
cmpsl
or
ret
daa
shll
add
andl
mov
xchg
xchg
je
inc
cmp
inc
shrl
js
cmc
andl
jmp
inc
fstpt
daa
fildl
adc
imul
mov
outsb
inc
and
js
or
push
in
xor
repz
cwtl
loope
mov
aad
movb
push
add
xor
pushf
lahf
xor
or
rorb
aas
push
daa
jae
cmp
sub
es
clc
sub
sub
daa
sbb
popf
adc
push
inc
test
sub
aam
cli
iret
repnz
cmp
add
call
cmp
mov
loopne
xchg
pushf
xor
shl
inc
mov
add
sbb
xor
pop
fimuls
or
and
fldt
lds
cmpsl
ljmp
or
sbbb
adc
inc
or
and
jns
insb
add
mov
push
addl
mov
int3
test
roll
xchg
repz
test
pusha
mov
sub
sbbb
iret
pop
mov
mov
popf
sub
test
in
movsl
xchg
or
adc
inc
js
lock
or
sub
outsl
pop
mov
test
cmp
aaa
int3
fisubs
popa
lret
ja
inc
inc
rcl
push
mov
mov
or
ljmp
sub
xorb
and
sub
in
jmp
add
aam
clc
mov
xlat
lret
std
and
out
aam
ror
add
cmpsl
daa
in
xchg
dec
xor
loopne
fadds
testb
sub
enter
xchg
xor
sub
inc
loopne
or
sbb
icebp
aaa
imul
mov
sbb
mov
add
cmp
or
pusha
inc
jno
push
adc
adc
push
push
add
sub
xorb
mov
jge
les
ljmp
aam
sub
rorb
aas
and
fldt
add
shl
push
mov
xor
clc
cmp
jge
pop
mov
add
movb
adc
loopne
test
add
mov
dec
call
nop
in
cmpsb
sub
fnstenv
es
pop
mov
clc
not
stos
add
fs
ficomps
test
aad
ror
sahf
incb
or
mov
xchg
add
incl
test
mov
push
inc
cmp
insb
sbb
jno
and
shlb
xlat
jp
add
sub
adc
mov
jp
out
jge
xor
mov
xor
xor
fadd
xor
in
mov
xor
jne
or
mov
sub
loopne
sbb
push
dec
push
mov
enter
shrb
fisttpll
clc
inc
jp
shrl
clc
iret
mov
mov
fcoms
push
pushf
sbb
adc
cwtl
aad
cmp
jo
fstp
add
adc
pop
add
cmpsb
rclb
nop
xchg
mov
dec
add
imul
or
dec
or
xor
clc
push
js
sbbl
sbb
int3
rorl
or
js
or
lds
jne
mov
in
inc
sbb
mov
shrb
in
and
in
fdivrl
loopne
adc
mov
add
push
clc
jmp
and
push
add
push
mov
sbb
push
adc
clc
cmp
add
cmp
int3
or
or
shll
adc
adc
add
sarb
push
out
dec
sub
fcmovbe
les
push
clc
xlat
xor
std
fldcw
ljmp
mov
inc
dec
sti
iret
test
subl
add
dec
xchg
cltd
adc
or
pop
hlt
mov
hlt
movsb
nop
add
jp
add
shll
in
push
or
and
adc
mov
mov
mov
or
sbb
nop
sbb
fcomps
in
lds
or
shrb
pop
dec
ljmp
jbe
insl
in
lods
add
pop
repz
clc
push
in
adcb
and
jge
test
js
popw
leave
fstpt
or
adc
ret
hlt
adc
fdivl
and
xor
and
and
sub
xchg
add
mov
push
jae
loope
cmp
add
and
fldl
jo
xchg
jb
int3
or
repnz
and
fmull
xor
adc
mov
lcall
sbb
outsb
addr16
cmp
pop
mov
sub
and
add
cmp
test
fldenv
test
xchg
lcall
rolb
rclb
inc
leave
imul
jns
lods
push
mov
cmp
ret
xor
inc
jno
mov
or
jp
movsb
add
in
shl
jp
cmp
in
push
mov
or
sub
sub
ljmp
cmpb
and
mov
stos
ficoms
adc
int
out
mov
add
push
leave
dec
cld
inc
add
repnz
lock
mov
or
sub
dec
mov
cmp
cwtl
adc
sub
leave
xor
cltd
xor
wbinvd
aas
call
push
sahf
lds
in
mov
or
orb
js
lods
add
ja
or
lret
cmpsb
inc
sbb
ret
nop
rcr
jae
xor
repz
popf
rcrb
adc
cmpsb
adc
int3
push
mov
pop
adc
jl
rorl
push
clc
ffreep
inc
pop
push
fisubrl
push
and
data16
or
pop
pop
push
and
add
jp
adc
bound
and
aam
push
add
push
inc
in
mov
adc
push
hlt
clc
aam
lea
in
inc
testb
pop
adc
lret
inc
mov
sbb
or
adc
mov
jp
pushf
xor
ret
rcrb
or
cld
andb
int3
test
ljmp
pop
cmp
cld
jo
clc
mov
add
aaa
jb
mov
add
loop
int3
inc
syscall
aam
jno
imul
sub
pop
stc
xchg
sub
sbb
adc
and
and
push
mov
add
add
xor
add
outsb
dec
addb
jbe
or
xor
add
push
hlt
dec
sub
imul
push
mov
adc
and
inc
nop
and
push
sbb
sbb
rolb
idivb
and
or
sub
jo
cwtl
es
mov
in
sub
int3
pusha
sbb
jb
icebp
movsb
mov
addl
pop
mov
sbb
stos
mov
mov
cmpsb
fidivs
les
jle
mov
sahf
or
sbb
lods
out
bound
inc
ror
movsb
inc
xor
out
xchg
hlt
push
jg
hlt
mov
insl
xor
sub
dec
pop
lret
push
test
mov
mov
lahf
mov
dec
dec
adc
daa
clc
push
nop
mov
xor
sub
ja
and
xor
aad
orb
pop
out
pop
mov
sub
in
js
jl
mov
and
adc
pusha
add
fcoml
ds
test
je
daa
lods
xchg
pop
outsl
into
cmpb
in
pop
jnp
cmp
fildl
andb
loop
icebp
pusha
and
inc
jb
push
out
sbb
fildl
gs
fmulp
add
lods
xchg
add
dec
add
jns
cwtl
and
jnp
jl
lds
in
push
mov
popf
divps
xor
mov
shlb
push
xor
fs
add
out
sbb
pop
cmp
cmp
cmpl
add
dec
mov
add
inc
out
inc
jge
push
xchg
inc
es
and
jae
and
add
test
xchg
mov
or
test
and
and
push
outsb
insb
test
jne
rclb
roll
lods
inc
jecxz
or
inc
loopne
and
adcb
fildl
into
add
push
fnstenv
xchg
pusha
and
sahf
inc
jbe
mov
mov
mov
sar
push
fstpl
pop
jno
andb
or
imul
int
xchg
adc
fwait
mov
add
std
push
mov
sub
or
subb
in
dec
mov
adc
sub
add
ret
add
pusha
jns
sbb
or
lcall
adc
mov
loopne
call
shll
jne
loopne
hlt
fdivrs
cli
out
rclb
shlb
xchg
or
das
jb
js
in
out
shrl
pop
jo
call
add
push
jnp
mov
xor
sub
repz
or
dec
pushf
adc
and
xchg
mov
pop
cmp
push
arpl
insb
int
cwtl
daa
adc
pop
mov
fidivrs
inc
inc
jae
add
ret
push
pop
pusha
cltd
sub
ss
bound
inc
sbb
and
inc
mov
add
scas
das
push
movsb
out
sbb
fidivl
jno
xchg
pop
pop
js
push
out
add
pushf
lods
mov
pop
pop
sub
repnz
xor
add
flds
or
icebp
and
add
ret
and
mov
es
bound
add
xor
sbb
js
cmp
dec
and
jae
adc
lea
lods
notb
rorb
mov
inc
xor
nop
jne
les
sbb
cmp
loopne
jb
adc
test
cmp
and
imul
mov
sbb
fnstcw
pop
loopne
lret
add
mov
sub
jnp
cmpsb
or
pop
xor
xor
imul
mov
adc
sarl
dec
pop
jo
push
ja
sub
sti
pusha
lcall
in
lea
add
push
cmp
sub
imull
mov
into
and
or
test
cmc
xchg
xchg
enter
add
xchg
jge
int3
bound
call
inc
pusha
mov
cltd
loopne
add
in
add
aad
inc
cmp
sub
test
adc
push
push
lcall
push
add
sub
loopne
adc
lret
enter
lods
rcrb
inc
push
in
nop
loop
xor
xor
sbb
out
inc
in
jne
pusha
out
adc
das
lock
adc
je
dec
rcll
movsb
sbb
cwtl
jae
xor
jle
insb
cwtl
es
movsb
dec
jnp
pop
outsb
sub
xchg
fs
pop
pushf
mov
andb
dec
mov
mov
add
popa
fnstenv
adc
jbe
pop
inc
insl
out
sbb
jecxz
outsb
and
jnp
xor
dec
insb
fadd
jge
xor
sbb
mul
inc
outsb
lods
sbb
add
movsl
add
out
je
add
mov
cmp
cmpsb
into
push
pusha
fimuls
and
bound
popl
xchg
gs
xor
mov
lret
pop
or
leave
outsb
addr16
pop
pushf
adc
mov
imul
add
adc
and
adcl
pop
test
cmp
fadds
and
cmp
nop
je
cld
xchg
mov
or
adc
dec
inc
ficompl
add
pop
jae
or
add
mov
xchg
adc
lods
inc
test
mov
in
or
xor
dec
movsb
jbe
add
lods
imul
ret
pop
je
inc
adc
aam
js
add
shll
nop
adc
jo
add
cmp
test
pop
int3
jmp
out
and
enter
or
shlb
pop
dec
xchg
pushf
sbb
fildl
inc
cmc
and
lods
and
pop
in
jns
sbb
cmpsb
rorb
shrl
cmp
das
sub
xchg
add
aam
rcl
shrb
adcb
pop
imul
mov
cmp
xchg
test
and
in
pop
das
test
orl
movsb
mov
rcrl
aad
add
sbb
test
test
add
ret
fcoms
xlat
xorl
or
mov
add
mov
inc
mov
in
mov
pop
add
jne
ss
rcrb
daa
and
sbb
mov
push
mov
shrl
imul
popf
mov
mov
inc
or
inc
mov
mov
pusha
or
or
pop
add
aad
adc
push
insb
popa
or
mov
push
pop
cmc
sbb
inc
add
pop
mov
je
add
jl
das
ljmp
and
fstpl
cmp
pop
push
das
cmp
inc
add
jne
mov
dec
fsts
fs
cmpsl
and
xchg
mov
or
and
ja
add
outsb
xchg
inc
jo
sbb
fisttps
cmp
test
in
shrb
push
sahf
les
out
loope
jnp
in
pop
das
dec
xchg
fistl
mov
xchg
mov
inc
jno
mov
sub
insb
mov
adc
push
and
in
cmp
sbb
push
mov
enter
lret
lock
add
jmp
std
outsb
les
dec
inc
outsb
fs
push
xbegin
cmc
outsb
sub
nop
mov
dec
test
xlat
add
jns
iret
xchg
or
mov
mov
aad
daa
int3
mov
mov
ror
in
stos
cmp
cmp
add
push
clc
idiv
mov
push
fstps
adc
call
fcomps
jmp
clc
aaa
sub
cmc
ret
daa
nop
test
xor
rol
ror
and
stos
inc
sub
cmp
jecxz
cmp
or
ds
xchg
adc
add
fdivs
cmp
pop
sbbb
push
dec
stos
add
and
mov
xor
and
mov
add
jo
fidivrl
mov
add
stos
push
sub
sbb
adc
dec
lods
sub
mov
xchg
je
adc
stos
nop
mov
pushl
adc
cmpb
and
mov
add
testb
dec
pushf
adcb
rolb
mov
addr16
fiadds
cmp
dec
add
rol
test
jne
fmulp
loope
clc
ljmp
imul
stos
xchg
push
nop
mov
mov
push
dec
pop
les
shlb
push
daa
add
out
inc
in
mov
insl
mov
cmovs
subl
adcb
xlat
ficomps
cmp
cld
and
add
adc
outsb
pop
sbb
rolb
cmp
aaa
aam
mov
mov
xor
mull
dec
stos
lcall
sbb
jno
xor
add
and
jmp
mov
fisttps
mov
mov
pop
add
push
dec
pusha
inc
and
int3
je
mov
push
add
jnp
sub
popf
add
je
loope
int
jecxz
mov
and
add
sbb
add
imul
test
nop
pop
mov
lock
xchg
int3
bnd
cmpsb
or
rorb
mov
aam
mov
nop
int3
xchg
sahf
sbb
jle
add
test
mov
or
xchg
cmp
add
in
and
xchg
mov
cmp
lahf
and
xor
push
mov
fsubp
addb
iret
sub
and
sub
and
xor
out
add
xchg
outsb
or
ds
nop
sbbl
fidivs
je
adc
xchg
les
repnz
xor
repnz
enter
rcrb
pop
in
rcl
mov
adc
and
aaa
js
nop
cmp
xor
push
mov
or
cmpsb
cltd
and
adc
test
pop
push
mov
fcmovbe
mov
mov
add
push
mov
or
jp
sub
and
sub
les
insl
sti
fadds
add
imul
jbe
repnz
test
mov
pop
or
push
mov
and
adc
fnstsw
adc
mov
jp
add
inc
clc
pop
cmpsb
cld
dec
call
fdivs
xchg
jb
pop
imul
jo
mov
jp
outsb
dec
es
xchg
ja
push
xlat
inc
add
add
out
out
push
mov
shl
pop
rclb
inc
imul
sub
inc
lock
xchg
loopne
cltd
js
hlt
fidivrs
pop
int3
enter
sar
dec
outsl
stos
push
mov
in
popf
nop
jbe
lds
and
adc
inc
adc
mov
inc
inc
or
mov
sub
popa
add
xchg
jae
sbb
arpl
inc
cmp
mov
sub
lock
dec
dec
adc
fadd
cli
push
mov
out
cmp
add
es
xchg
jnp
cmp
sbb
adc
jmp
dec
test
xchg
fs
inc
insl
mov
pop
mov
pop
add
add
jo,pn
push
jl
add
mov
cwtl
and
xchg
adc
sub
sub
js
mov
mov
pop
shrb
inc
fdivrl
mov
sub
aas
pop
inc
scas
sub
dec
and
mov
daa
push
in
addb
xorb
fwait
shlb
aam
fdivl
push
dec
addr16
out
xchg
shlb
lahf
jns
arpl
es
cmc
add
cmp
cli
and
ljmp
daa
sbb
clc
or
adc
cmp
sbb
xor
int3
jae
jo
jge
mov
dec
mov
push
push
out
aam
push
mov
fcomi
push
aas
test
mov
xor
pop
mul
or
and
fldenv
pusha
je
call
add
clc
ud2
dec
mov
aad
sub
lret
xchg
inc
sbb
mov
dec
hlt
cs
add
scas
scas
loopne
fbld
push
cwtl
add
sti
xchg
adc
nop
rolb
jae
daa
adc
add
stc
jp
mov
pop
shrb
test
xchg
mov
adc
js
add
iret
or
add
inc
or
mov
add
push
cmpsb
aas
les
add
or
xchg
or
jns
cwtl
mov
addr16
inc
pop
fsubrl
add
jecxz
mov
cli
pop
mov
jbe
mov
inc
rcll
test
cmp
push
mov
in
pop
push
xchg
leave
sub
fisubl
mov
cmp
jecxz
xchg
dec
pop
lds
sbb
mov
rcrb
xchg
add
mov
inc
or
inc
mov
addr16
aam
sbbb
and
mov
test
sub
xor
dec
add
dec
lahf
fstps
push
movsl
dec
xchg
imul
adc
pop
loopne
cmp
lret
cmp
inc
sub
shlb
hlt
xchg
or
or
add
push
mov
mov
or
cltd
add
sarl
and
mov
inc
lock
mov
fidivrl
sbb
mov
xor
jecxz
mov
sub
shl
adc
out
dec
sbb
and
nop
fdivl
and
inc
dec
xchg
int
mov
mov
and
dec
fidivl
lds
popf
mov
xchg
add
dec
mov
faddl
xor
stos
fiadds
mov
add
nop
mov
jecxz
mov
fsub
cmp
and
xorb
xor
add
xchg
rcr
mov
or
aad
rcrb
es
jno
fwait
loopne
push
mov
fbld
add
les
outsb
sub
fldl
cmp
adc
jae
sub
ret
cmp
sub
in
pusha
add
repnz
rolw
ret
pusha
mov
xor
leave
xchg
sbb
into
imull
scas
adc
mov
outsb
cmpsb
or
stos
pop
pushf
rorb
aas
dec
or
scas
inc
pusha
mov
cs
mov
push
rorb
add
sti
mov
sbb
imul
das
rorb
and
lods
sbbb
decb
add
movsb
hlt
pop
adc
jo
clc
xor
inc
inc
xchg
das
add
enter
sub
or
cmp
lods
add
imul
jo
mov
js
adc
ss
mov
sub
push
push
clc
push
and
inc
xor
imul
sub
pop
sub
clc
push
xor
or
test
pop
cmc
test
cwtl
cmp
dec
insb
mov
bound
negl
les
inc
push
loope
movsb
js
mov
mov
cmp
inc
jl
cld
or
repnz
aam
js
inc
insb
add
rorb
xor
mov
pop
popf
rol
dec
add
xor
add
je
xchg
imul
cmp
push
pop
adc
mov
pop
sub
out
inc
inc
pusha
pop
push
dec
adc
cmc
push
loope
js
mov
or
push
fsubl
fcoms
or
dec
add
aam
sub
inc
pushf
xor
scas
je
or
jge
adc
cmp
int3
repnz
outsl
mov
mov
push
mov
mov
outsl
outsb
xor
xorb
sbb
les
out
dec
cld
inc
aas
int3
pop
rolb
adc
mov
cwtl
popa
das
mov
push
test
inc
rolb
aaa
mov
shll
dec
mov
scas
not
loop
add
adc
mov
inc
inc
add
mov
cmp
sub
cmpsb
inc
dec
dec
dec
mov
hlt
leave
scas
jne
sub
push
adc
lahf
mov
lods
mov
xor
inc
dec
ret
jns
sbbb
shlb
fsubrl
sub
fs
fidivrs
ja
loope
jmp
loopne
push
enter
add
mov
and
popf
add
xchg
sub
sarb
or
mov
out
lods
aad
stos
leave
stos
nop
js
movsb
gs
leave
movsl
lods
je
mov
ret
jle
xor
lods
sbb
inc
out
push
lock
push
add
adc
notl
jmp
sbb
sldt
int
mov
rcll
push
inc
inc
ds
dec
mov
loopne
aam
add
test
aaa
shll
and
add
ficoms
mov
adcl
mov
adc
out
cmpsb
aaa
push
loopne
pop
daa
jecxz
adc
dec
orb
mov
nop
mov
add
addb
or
jo,pt
ret
mov
push
inc
and
jmp
mov
ja
sub
movb
in
mov
or
push
nop
shlb
pop
inc
cltd
fstpt
mov
cmp
sbb
jnp
add
clc
sbb
adc
mov
push
sub
cmp
cmp
inc
sub
cmpsb
pushf
pop
test
add
cwtl
pop
cmp
lret
add
fsubrs
and
xchg
and
das
jge
enter
test
mov
inc
ljmp
and
xor
mov
cmp
inc
xchg
aas
lds
add
fildl
sar
and
add
xchg
add
and
xchg
mov
xor
add
lods
sub
pop
add
push
mov
mov
inc
pusha
repnz
stc
rcrl
sub
mov
push
stos
adc
cs
dec
xchg
or
jecxz
rclb
fdivl
and
lcall
lret
loop
rcrb
pop
xor
andl
lcall
push
or
out
inc
addr16
test
and
cmp
add
sti
insl
mov
add
fiadds
and
and
rorl
in
sub
pushf
inc
cs
add
dec
pop
pop
hlt
xor
jae
shlb
xchg
aam
xchg
sbb
sub
dec
test
jae
dec
inc
sub
pop
daa
or
pop
bound
lahf
subb
or
push
sbb
mov
xor
mov
fsubl
ret
nop
mov
test
push
adcl
inc
mov
inc
idivl
push
mov
leave
adc
lahf
loop
sbb
int3
jae
sbb
mov
sub
xchg
xorb
idivl
mov
enter
add
add
pop
push
cmp
int
dec
dec
or
and
nop
loope
sahf
pop
mov
test
rcl
mov
sbb
mov
in
nop
bound
push
adc
popf
fdivrl
dec
adc
notb
addl
jecxz
ss
sub
or
or
mov
sub
mov
add
and
pop
fdivrs
repz
sbb
pusha
fdivrs
mov
int
mov
cwtl
popa
mov
or
cli
xchg
call
aaa
in
and
stc
cmp
sbb
xor
adc
mov
mov
jns
sub
lret
rol
add
lds
imul
mov
and
mov
push
adc
sub
jo
iret
add
add
xchg
mov
and
insl
test
sub
in
fdivl
pop
and
and
push
sub
loopne
inc
loope
insb
mov
adc
jg
add
into
push
adc
lock
adc
xchg
fisubrs
sub
rolb
or
or
mov
or
loop
jno
adc
mov
or
insl
push
loopne
mov
sbb
jae
mov
mov
cmp
lret
fs
mov
pop
xor
popf
xchg
push
adc
inc
loop
es
test
or
sbb
lods
add
and
inc
or
rol
pop
push
or
mov
xor
sub
dec
cmp
xchg
clc
xor
xor
popa
in
mov
pushf
adc
mov
repnz
and
xchg
mov
mov
test
adc
inc
sahf
sub
popf
sbb
pop
add
sub
dec
enter
fisttpll
call
es
jo
dec
pop
add
jno
jns
sbb
outsb
fnstcw
fldl
mov
sub
add
bnd
or
sub
loop
ss
or
add
mov
or
or
cmp
cli
stos
add
js
mov
or
int3
pop
jecxz
xorl
add
outsl
adc
xchg
test
test
dec
mov
stos
xchg
jae
rolb
adc
das
subb
mov
push
scas
add
fstps
sub
call
push
xchg
ljmp
cwtl
push
cmpsb
xor
fiadds
sbbl
pop
aaa
int3
bound
or
incl
pop
mov
aam
dec
loope
cs
jp
mov
test
aam
push
xor
rorb
pop
test
cmp
lods
scas
add
hlt
and
dec
ffreep
test
push
repnz
xor
or
adc
and
fsubrl
adc
jp
insb
and
jl
add
mov
insb
repnz
xor
jae
dec
or
or
xchg
mov
sahf
lcall
daa
xor
pop
and
mov
and
cvtps2pd
fs
call
lods
pop
hlt
data16
add
js
mov
jno
xor
popa
popf
pop
pop
xor
xor
xor
mov
rorb
pushf
add
stos
adc
out
fwait
dec
and
roll
sarl
sbb
add
cli
mov
les
js
jge
push
cmp
cmp
jecxz
xchg
data16
dec
out
loopne
xor
gs
adcb
mov
mov
or
add
mov
fidivl
adc
pop
push
mov
ret
adc
add
add
sbb
ds
pop
mov
int3
mov
sti
inc
pop
jnp
sub
pop
pop
pop
cmpsb
jp
add
xchg
add
clc
push
sub
add
dec
jnp
sahf
xor
mov
ret
xor
xchg
ds
iret
xor
add
mov
cmp
mov
dec
sub
fisttpll
ret
sbb
subl
js
imul
lds
pusha
jo
adc
sbb
fcmove
and
les
je
inc
cltd
dec
pusha
repz
test
shrb
pop
adc
add
imul
ret
and
sub
mov
loope
cmp
inc
jmp
cmp
and
cmc
mov
add
add
les
rcll
add
fdivs
rclb
dec
mov
xchg
add
fildll
ss
clc
sarb
daa
xor
add
stos
mov
enter
jle
push
mov
adc
enter
cmc
in
push
mov
rcl
add
jne
xchg
stos
andb
cmpsl
test
adc
lods
dec
stc
movsb
add
sub
mov
ja
pop
andb
mov
mov
mov
jl
mov
xor
add
out
loop
inc
or
fimuls
movsb
mov
inc
cmp
addr16
dec
cmpsb
or
cmp
sub
imul
xor
push
repnz
in
and
fsubl
and
adc
loop
ss
jmp
sub
push
aas
jmp
adc
sbb
rolb
pop
push
xchg
loopne
mov
std
add
jl
outsb
insb
stc
add
lds
out
aaa
fimull
cwtl
sbbb
push
repz
add
pop
repnz
mov
pop
xchg
push
pop
push
mov
pushf
cmp
add
cmpsb
cltd
sahf
jno
xor
add
pop
add
cmp
add
xor
and
dec
loopne
cmp
pop
pop
and
push
in
add
mov
in
add
pop
sahf
dec
ss
dec
mov
sti
clc
loope
push
xor
mov
fcom
jns
cmp
stos
cmc
push
sahf
cmp
clc
ds
inc
sub
andb
rol
mov
adc
sbb
lea
aad
in
mov
mov
jnp
or
repnz
xor
xlat
mov
imul
lea
loopne
xchg
xor
mov
test
or
movsl
lds
push
mov
push
jl
inc
inc
imul
push
or
xchg
dec
mov
mov
or
xor
add
add
xlat
and
cltd
pop
or
dec
bound
pop
sbb
adc
hlt
popf
pop
shll
roll
mov
xchg
loope
jo
pusha
and
xor
push
repnz
fisttpl
mov
insb
adc
dec
shll
sub
cmpsb
jmp
jo
add
pop
insb
and
fldl
mov
sbb
or
push
adc
sbb
or
data16
loopne
das
shlb
cld
cld
hlt
xor
lahf
addr16
in
pusha
pop
xchg
jecxz
cld
add
mov
sub
xchg
sub
xchg
sbb
js
add
or
ds
into
imul
aaa
mov
mov
mov
lahf
leave
call
and
cvtps2pd
sti
pop
aad
or
cmc
jp
dec
xchg
adc
mov
push
hlt
int3
add
es
test
push
les
pop
out
xchg
movsb
xor
pop
cmp
xor
mov
dec
pushf
add
cmpsb
add
aam
adc
mov
push
push
inc
pushf
mov
daa
shll
jbe
dec
add
fiadds
outsb
push
pusha
nop
xchg
inc
mov
xchg
nop
hlt
xchg
jnp
pushf
sub
pop
add
mov
or
and
jae
xor
notb
jmp
mov
sub
or
adc
or
push
insl
testb
in
xchg
cmp
outsl
add
push
mov
sbb
adc
mov
enter
mov
pop
jl
pop
int3
or
loopne
adc
xchg
pop
jae
or
xor
add
cmpsb
xor
movsl
adc
cmpsl
inc
in
add
adc
fidivl
rorl
inc
inc
mov
or
lret
cmp
rcll
lods
or
cmp
mov
mov
pop
inc
xchg
add
add
push
scas
adc
mov
pop
inc
inc
add
push
push
add
push
sbb
and
sub
add
dec
fldt
or
fadds
xchg
xor
sti
and
add
testl
mov
es
sbb
push
shl
lods
push
add
sub
lock
add
pushl
xor
mov
mov
insb
inc
add
and
xchg
mov
add
stos
xor
lods
je
mov
lahf
cmp
adc
xor
rolb
andl
cmp
dec
mov
xor
add
aad
xchg
sbb
imul
rcll
subb
rcrl
lea
pushf
and
sub
dec
es
mov
adc
adc
sahf
jmp
xor
jle
dec
adc
sub
imul
pop
pop
xor
xor
arpl
adc
add
and
orl
mov
and
mov
outsb
push
clc
ret
mov
mov
pop
or
lods
test
push
jl
sbb
add
cmp
popf
dec
pop
clc
orb
jmp
rclb
int
sbb
mov
fwait
dec
jnp
lods
mov
ds
jo
xchg
add
mov
dec
and
lcall
dec
xchg
adc
or
pop
inc
nop
push
pusha
fs
ret
or
adc
ds
or
mov
push
lcall
add
lahf
testb
sbb
inc
cmc
mov
pop
adc
jle
inc
ret
cmc
xchg
add
or
jnp
sbb
adc
cs
push
aaa
or
filds
pop
test
cmp
arpl
pop
mov
or
sbb
and
or
sbb
adcb
addb
fs
sbb
push
pop
sub
xor
push
adc
sbb
sbb
shl
or
dec
cmpl
add
repz
inc
or
and
pop
inc
nop
ret
inc
mov
inc
mov
jno
or
hlt
xor
inc
push
bound
mov
dec
pop
inc
pop
adc
adc
and
xor
xchg
add
mov
movsl
int
repnz
xor
sbb
pop
mov
cli
jle
mov
or
jnp
les
or
xor
or
dec
outsb
arpl
and
rcr
add
inc
sbb
add
sbb
adc
subb
or
in
add
movl
jns
jmp
in
add
add
sbb
sbb
or
enter
inc
or
inc
pop
push
xchg
and
mov
cwtl
adc
jg
or
cld
sbb
mov
loopne
sub
cs
or
les
pop
cmp
pop
xlat
and
dec
sahf
or
mov
dec
mov
dec
and
out
or
adc
and
push
orl
push
cli
stc
adc
add
add
jg
mov
sub
push
mov
xchg
xor
pop
stos
add
add
adc
jb
sbb
sbb
inc
sbb
mov
cltd
add
fimull
aaa
bound
sub
movsb
add
xchg
clc
ffreep
add
mov
mov
sbb
inc
fadd
outsl
jg
insb
dec
test
xorb
add
loopne
jbe
dec
mov
int3
add
pop
aas
mov
scas
adc
mov
push
ljmp
stc
nop
aam
out
lar
jecxz
bound
add
arpl
pop
movsb
add
lock
jnp
andw
nop
ja
test
jnp
xchg
inc
jo
cmpb
mov
push
add
fistpl
adc
sarb
inc
inc
add
sub
sub
xor
sbb
xchg
dec
movsl
sbb
shll
adc
les
fcoml
cmp
dec
dec
out
fcompl
push
and
mov
adcl
inc
clc
scas
mov
add
fstl
add
mov
gs
aaa
test
add
mov
int3
lods
sarl
add
shrb
movsb
rorb
orl
mov
xlat
jmp
push
xor
lea
jecxz
mov
and
push
fadd
subb
cmp
xor
into
dec
push
add
pop
dec
jl
and
pop
add
sti
in
ret
jge
xchg
popf
xor
test
ret
jmp
js
push
inc
or
or
mov
jge
nop
stc
xchg
fcoms
sbb
inc
mov
sub
data16
in
cmp
and
inc
mov
insb
add
lcall
movsb
loopne
stos
add
clc
in
pop
mov
add
push
in
push
lret
adc
insl
fs
cmp
out
stos
push
jmp
or
in
mov
rcl
int
mov
dec
repnz
mov
sahf
jo
mov
mov
clc
sub
lods
lret
in
rcrl
pop
ja
xorl
clc
xchg
xor
loop
mov
push
clc
pop
jecxz
dec
loopne
or
add
sbb
xchg
or
aas
add
loop
jbe
push
inc
enter
sub
inc
sbb
shrb
fdiv
sbb
or
add
fs
shrb
dec
push
dec
lcall
dec
adc
cmp
adc
imul
mov
cwtl
inc
lock
sbb
and
subb
mov
add
jmp
pop
add
in
push
cld
jb
rolb
add
xor
cmp
mov
sahf
andl
lock
add
xchg
push
repnz
ja
cmp
or
pop
mov
xor
and
enter
or
outsb
push
rolb
push
jecxz
pop
scas
xchg
dec
add
subb
shlb
ja
xchg
mov
cwtl
dec
add
adc
pop
xor
add
scas
xchg
test
fiaddl
add
pop
outsl
mov
inc
bound
shrl
inc
insb
fldt
pop
lea
adc
testl
clc
loopne
mov
enter
mov
shrb
adc
adc
stos
inc
cwtl
lret
outsb
sub
loope
adc
inc
stos
adc
rclb
shlb
dec
stos
in
xchg
add
add
cld
add
popf
push
dec
pushf
jge
xor
lret
pop
jle
in
xlat
aas
mov
fdivrs
push
jg
dec
daa
add
pop
pop
mov
add
xor
addl
and
in
rcrb
andb
adc
sub
cld
jmp
or
cltd
popa
xorl
fwait
inc
add
lock
or
rcll
call
sar
les
js
cltd
mov
xchg
sbb
mov
into
and
push
loopne
inc
in
inc
add
add
add
stos
xor
outsb
and
nop
add
std
pop
sbb
clc
dec
and
fisttpl
push
pop
xchg
dec
fmull
xlat
xor
dec
or
xor
rorl
clc
fistps
mov
sbb
push
mov
xchg
pushf
adcl
nop
xor
adc
add
pusha
nop
and
pop
int3
sub
sub
inc
jne
test
pop
push
add
rorl
lcall
add
fistl
or
adcb
clc
aad
and
mov
mov
loope
mov
pusha
mov
add
cmp
pushf
mov
cmp
mov
push
add
andl
xchg
test
loop
loopne
adc
inc
adc
std
or
dec
pop
test
push
enter
dec
and
push
call
enter
mov
push
add
stos
cs
jo
popf
es
sbb
pushf
leave
jecxz
call
test
xchg
push
cmp
sahf
hlt
dec
push
lock
add
add
adc
mov
test
xor
push
aam
bound
ljmp
xor
add
call
repnz
or
lock
testb
daa
je
sub
test
jp
call
loope
test
stos
push
push
mov
add
add
pop
in
jbe
add
mov
xlat
adc
push
pop
adc
loopne
aad
dec
and
push
adc
or
dec
add
sub
or
sbb
xlat
and
inc
adc
int3
je
add
fisubl
cwtl
js
xchg
dec
mov
add
lods
sub
repnz
adc
mov
fwait
nop
xor
push
ja
mov
add
xchg
push
adc
repnz
sbb
pushf
es
clc
dec
inc
adc
and
aas
jl
int3
popa
sbbl
jns
test
xlat
jl
xchg
dec
inc
addl
pusha
dec
push
mov
or
or
add
fmuls
add
stc
fistl
pushf
mov
stos
and
lds
add
adc
jb
or
sahf
andb
loopne
pop
cmp
adc
sbbb
mov
push
xchg
addl
cwtl
sbb
xchg
shlb
dec
adc
xorl
insb
jl
ss
pop
mov
inc
jno
mov
adc
push
or
sub
mov
cmp
aas
enter
add
push
pop
add
lret
loopne
sub
loope
std
fisubrl
vcvtdq2ps
mov
call
cmpsb
sub
fsubr
inc
mov
sbbl
or
xchg
bound
outsb
testl
sub
push
rcl
xor
dec
push
adc
lds
es
xchg
fdivr
hlt
sub
inc
aad
add
imulb
jecxz
flds
sbb
push
jb
xor
add
andl
inc
orb
mov
cmp
andb
into
clc
pop
adc
push
lods
cs
cmp
xor
sub
sbb
jl
xchg
aaa
inc
push
jne
or
mov
lods
cmp
push
fdivs
pusha
adc
shl
or
inc
or
cmpb
dec
jnp
lods
add
fcomps
ljmp
mov
and
les
mov
cwtl
out
add
mov
xor
gs
cli
test
fs
or
mov
aad
inc
jnp
testl
fnstenv
nop
rclb
insl
jl
or
addb
call
ror
cmovb
push
inc
pop
in
mov
push
xor
loop
add
lods
fs
dec
pop
jbe
jp
add
movsb
insb
push
pop
cld
addb
sbb
adc
push
or
mov
or
dec
sub
inc
mov
in
mov
outsl
sub
xor
jne
fs
and
and
sub
mov
nop
fcomps
cmp
mov
dec
push
enter
dec
andl
jle
or
cwtl
dec
mov
mov
cmp
loopne
or
clc
mov
stc
rorb
sub
sub
mov
rcll
lods
add
cs
pusha
jae
push
imul
push
insb
or
subl
add
shl
jmp
pop
or
adc
add
mov
adc
sub
andl
pop
jnp
lock
mov
sbb
mov
mov
mov
loopne
sti
ret
call
test
sbb
fisttps
inc
or
test
les
mov
outsl
int
daa
xor
add
fldenv
daa
or
mov
jl
imul
adc
and
cld
addl
xorb
int3
xor
sbb
adc
ja
fisttpl
push
cld
push
or
pusha
subl
bound
adc
pop
mov
cmpl
jmp
ficoms
fmuls
xchg
sbb
mov
push
cmpsb
xchg
shll
mov
and
adc
push
adc
daa
fstl
mov
lods
test
add
mov
or
sub
and
lahf
cmpb
loopne
xchg
js
addr16
pop
es
cmpb
mov
test
aas
in
orb
cmc
scas
mov
add
pop
cmp
pop
lcall
xchg
popf
subl
mov
xchg
mov
xchg
loope
or
and
pop
in
aas
repnz
mov
inc
icebp
xlat
insl
and
jo
fcompl
push
mov
ja
push
add
imul
pop
ret
in
pushf
js
clc
inc
add
sub
fadds
test
xor
dec
pop
mul
push
movsb
mov
lock
pop
stos
test
push
add
pop
lods
cmpsb
sbbl
mov
adc
fmuls
mov
pop
push
sub
adc
xorb
fs
push
or
mov
fsubl
inc
adc
mov
scas
enter
test
sub
aam
arpl
inc
ja
cmpsb
pop
pop
sti
and
subl
fsts
repz
push
test
pop
cmc
xor
or
pop
xchg
jle
lods
xor
in
je
jnp
mov
xchg
or
dec
inc
rolb
in
or
xchg
jo
iret
and
pop
mov
cwtl
cmp
movntq
fcoms
je
pushf
sub
mov
mov
lods
cmpsb
add
dec
insb
inc
cld
mov
or
mov
fmull
push
mov
push
cmpsl
or
xor
addr16
push
adcl
lock
aam
imul
xor
jecxz
out
mov
push
cmp
dec
fsubl
xchg
sub
fldl
test
lock
iret
shrl
cmp
jle
and
sub
cmp
adc
pusha
icebp
xor
lock
adc
jne
sub
xchg
mov
sahf
les
out
andb
fstps
aam
cmp
xchg
enter
roll
xor
or
mov
test
pop
out
test
les
and
push
in
add
sbb
add
sub
ds
loopne
sbb
fbstp
sbb
fmull
in
xchg
sub
les
rcl
int
add
sub
mov
lods
ret
mov
cwtl
dec
add
inc
add
test
mov
xor
rcll
or
dec
push
loopne
jne
add
shl
rolb
pop
aas
push
lcall
jp
adc
pop
dec
and
shrb
popa
xor
pop
flds
and
adc
adc
repnz
mov
mov
add
lods
sub
cwtl
mov
fcoms
jbe
jecxz
inc
add
pop
jp
add
cs
xchg
sub
call
rcrl
lods
add
rolb
add
pop
aam
addr16
daa
push
add
fwait
mov
iret
jl
pop
pop
adc
and
nop
and
push
mov
jl
je
dec
fistl
pop
push
mov
adc
stos
test
mov
inc
adc
cld
add
and
pop
sub
add
push
stos
test
pusha
sbbb
mov
test
addl
fbld
pop
sub
jns
sbb
stos
inc
jg
add
and
ret
testl
shrb
sti
jb
adc
pop
icebp
cmp
repnz
mov
mov
dec
adc
push
jo
movsl
xchg
nop
xor
or
add
insb
inc
lods
mov
jnp
cmp
daa
mov
inc
cmp
pusha
pop
ret
sub
scas
xor
imul
sub
je
inc
mov
shr
mov
dec
push
das
xchg
xchg
and
and
add
jp
nop
bound
jns
stos
sarl
sub
sub
icebp
and
andl
cmp
jl
add
sub
lods
or
pop
inc
mov
jle
addr16
das
adc
add
out
inc
fildl
cmp
inc
rorb
fiadds
in
jo
sarb
lds
psubusw
jno
aad
pop
cmc
dec
mov
mov
mov
dec
adc
shll
sar
add
mov
add
cmp
push
fdivrl
cmp
lods
sub
repz
inc
hlt
pusha
out
add
mov
cmp
jp
mov
xchg
nop
add
jns
pusha
adc
jecxz
pushf
add
jae
cmpsb
inc
mov
test
jns
aam
mov
xor
push
xor
or
and
hlt
add
adc
jg
or
add
jnp
mov
inc
pushf
int
pop
data16
jo
or
dec
aas
jge
or
add
sub
aaa
add
mov
cwtl
sub
pop
int
mov
add
xchg
aam
adc
outsb
lret
sbb
pusha
mov
sbb
inc
add
movsb
ljmp
mov
cmp
or
cmpsb
jl
mov
mov
nop
push
fwait
outsb
and
fs
pop
and
aas
les
and
stc
mov
movsb
fcoml
lods
ljmp
icebp
xchg
nop
mov
outsl
adcb
fsubr
call
sub
add
movntq
stos
icebp
mov
cli
lret
shll
add
fiaddl
sbb
push
shl
mov
add
mov
fimull
lods
call
stos
mov
nop
add
clc
dec
xor
add
aam
into
adcl
test
pop
push
lcall
jp,pt
or
inc
pop
cs
lret
daa
sarb
fwait
adc
cmpsb
add
mov
mulps
adc
and
dec
addr16
mov
adc
and
jae
test
mov
lock
inc
xor
adc
sbb
fisttpll
mov
xor
sub
aad
and
je
xchg
xor
add
pop
imul
loope
or
xchg
addb
leave
shrb
pop
pop
add
cmp
lahf
xor
faddp
mov
out
out
inc
push
add
inc
mov
adc
cmp
lods
push
popa
xor
std
mov
hlt
sbb
sbb
mov
add
mov
or
xchg
xchg
adc
idiv
stc
into
mov
andl
sti
test
push
lcall
daa
jns
sub
dec
dec
add
subl
testb
adc
add
dec
add
pop
mov
xchg
iret
rorl
dec
insl
jecxz
jecxz
shll
mov
pusha
pop
pop
xor
jp
mov
rolb
add
andl
cmp
pop
add
adc
mov
fldcw
enter
xor
test
sub
xchg
xchg
dec
movsb
and
jnp
pop
in
add
scas
jae
test
xchg
add
mov
call
cmp
mov
cmp
popa
nop
clc
rcrb
sbb
mov
mov
lahf
in
mov
add
insl
and
mov
test
and
cmp
dec
xor
leave
fldcw
das
or
add
stos
mov
add
xchg
pause
loopne
in
inc
pusha
cmp
dec
xor
pop
xchg
js
jnp
dec
pop
pop
jo
pop
push
mov
sbb
xchg
push
cmp
sbb
cmpsl
adc
dec
add
movsb
xor
cmp
jne
lods
iret
mov
pop
dec
add
cmp
insl
jg
add
dec
mov
mov
insb
push
movsb
mov
sub
inc
rcrb
andl
pusha
and
insl
jo
filds
clc
inc
add
int
push
add
in
paddusb
imul
scas
movl
adc
xor
mov
ds
test
ret
into
and
ljmp
fcomps
dec
adcb
add
jmp
xchg
incl
mov
rorb
xor
mov
xchg
ja
jae
adc
sub
mov
jns
popf
xchg
ret
and
imul
pushf
sbb
mov
jecxz
push
shrl
sbb
mov
addl
outsb
addr16
xchg
sbb
dec
xlat
adc
xor
jge
mov
add
leave
sbb
out
in
pop
or
aad
push
adc
les
dec
rep
mov
fwait
and
ds
adc
add
pop
inc
cs
cmpsl
nop
or
jmp
sbb
mov
cmpsl
add
sub
aam
cmpsb
stos
pop
adc
mov
adc
ret
inc
into
push
inc
gs
mov
sub
sub
inc
adc
inc
rcll
movsb
es
jne
repz
fwait
xor
push
cmc
ss
push
test
sbb
call
sbbl
mov
ss
cmpsb
add
push
sti
leave
pop
test
pop
mov
add
or
ret
jo
push
sub
sbb
add
jnp
mov
ja
push
xor
pushf
add
sub
cmpsl
in
push
inc
jp
xor
xor
mov
add
inc
icebp
clc
lds
pusha
sbbb
arpl
add
cmp
xchg
adc
test
insb
xor
jno
mov
dec
sarl
xor
mov
push
out
shld
insl
outsb
shlb
sarl
test
fisttpll
add
mov
or
mov
pop
dec
dec
loop
add
scas
cwtl
push
push
sbb
cmp
sarb
and
pop
push
fwait
cwtl
aad
cmpsb
mov
sahf
sbb
add
pop
cltd
enter
rolb
insb
xor
pop
dec
cli
mov
mov
push
sbb
shlb
jl
add
sub
mov
adc
ljmp
jl
or
scas
pop
and
test
sub
add
pop
pop
add
inc
pop
ss
pop
dec
mov
or
out
sahf
nop
cld
mov
add
pop
ljmp
cmp
pusha
mov
test
jle
jo
sti
adc
in
add
aam
fadd
fisubrl
add
sbb
sbb
ja
and
sahf
dec
xlat
mov
sbbb
aas
and
adc
imul
add
mov
add
or
jmp
cmp
pop
dec
outsl
pusha
add
into
aam
cs
sub
sbb
mov
pop
lcall
mov
adc
adcb
pop
cmp
aas
xchg
lret
push
adc
sahf
mov
scas
xchg
or
cmp
aam
pop
pop
int3
push
mov
adc
cmp
xchg
push
pop
invd
mov
dec
jo
or
and
sbb
fwait
lds
mov
in
js
pop
and
sbbl
es
std
sub
cmpsb
cwtl
into
int
pop
dec
xchg
sbb
test
fcoms
add
mov
adc
inc
ret
mov
popa
or
fstps
ret
push
sub
aam
mov
add
xchg
pusha
dec
sgdtl
clc
test
pusha
pop
add
sbb
es
enter
lds
pop
push
call
adc
pusha
mov
cmp
sbbb
cwtl
bound
test
adc
int
icebp
push
xchg
cmp
movsl
repnz
mov
mov
call
inc
or
adc
lret
roll
loopne
nop
mov
mov
insb
outsl
pop
pop
cs
pusha
xor
or
sbb
pop
add
jg
jnp
sbb
sti
call
xorb
lret
shrl
dec
clc
add
mov
les
rcll
jge
add
sub
xchg
clc
imul
inc
dec
add
call
ret
cld
addb
scas
pop
add
lcall
ds
lcall
out
lock
cmp
xchg
or
jb
add
mov
pop
and
or
sub
dec
leave
ret
and
movsb
mov
xor
mov
lock
adc
mov
ret
sbb
cmp
adc
nop
mov
mov
jbe
push
sbb
lods
sub
sarl
dec
enter
les
fsubrl
dec
xorb
mov
repz
mov
mov
fildl
xor
mov
and
roll
inc
jb
pop
add
ret
pop
fs
xchg
adc
lods
xlat
sbb
or
loopne
js
dec
pop
and
or
cwtl
dec
rcll
or
addb
int
out
adc
mov
sbb
xor
out
sbb
insl
pusha
add
mov
add
sub
xor
xchg
scas
pop
dec
jae
adc
xchg
pop
adc
mov
dec
dec
add
mov
test
sbb
xchg
and
icebp
ss
add
xor
pop
cltd
jbe
rorb
mov
mov
push
ret
icebp
movsb
add
sub
mov
or
mov
lcall
add
and
insl
push
xchg
mov
add
lret
out
je
add
sub
dec
xchg
daa
sbb
lock
sahf
pop
dec
cmp
xchg
cmp
shl
sbb
stos
mov
xlat
insl
cmp
shrl
gs
scas
mov
popa
mov
push
test
add
sub
inc
cmpsl
inc
jg
out
jnp
mov
loopne
push
inc
dec
aam
adc
inc
jmp
mov
js
jl
addb
jl
sbbl
pop
call
pop
outsl
mov
movsb
mov
add
sub
arpl
and
adc
sub
add
data16
push
lret
aam
inc
mov
fs
dec
adc
in
sbb
and
jo
rcrl
push
stc
bound
lods
push
lock
push
mov
xchg
jo
enter
dec
nop
pushf
cmp
mov
push
insb
inc
test
je
lret
inc
push
pop
mov
into
aam
pop
adc
dec
clc
fbld
mov
and
js
mov
mov
dec
add
push
inc
dec
or
xor
mov
mov
add
mov
aam
imul
stos
in
sub
test
jg
sbbl
aaa
and
scas
and
push
xchg
ror
adc
fwait
enter
jne
add
and
mov
add
pusha
js
lods
pop
push
in
test
jle
rolb
andb
sbb
int3
rolb
cmp
xor
dec
inc
shl
mov
movsl
xor
call
jae
cs
ret
push
call
sbb
mov
and
rcrl
iret
shl
add
cmp
cmc
rcrb
loopne
adc
pusha
dec
adc
test
adc
mov
pusha
je
pop
push
mov
mov
cli
mov
lret
clc
testb
push
stc
rcr
jl
pop
test
push
fwait
add
lods
push
clc
icebp
jmp
mov
lret
mov
adc
stc
sub
popl
lods
push
shlb
lret
xor
dec
ret
xchg
loopne
dec
or
mov
dec
jb
push
adc
es
jo
and
pushf
cli
dec
sub
test
xorb
loop
push
jp
push
ret
cwtl
adc
and
arpl
out
in
outsl
inc
orb
xchg
scas
pop
mov
scas
push
das
sbb
sbb
and
rclb
mov
mov
nop
sub
sbb
dec
sbb
sub
andl
adc
repnz
cmpsl
std
pop
sarb
enter
ljmp
addr16
in
ja
push
mov
adc
inc
or
push
mov
ret
inc
inc
jne
pop
push
ljmp
and
dec
mov
sbb
xchg
neg
adc
shr
and
push
js
push
dec
fidivrl
cmpsl
adc
mov
or
outsl
sti
push
fadds
je
pop
rorb
push
mov
sub
orb
mov
pop
dec
addb
sbb
imul
out
in
inc
and
lahf
mov
xor
mov
mov
add
pop
test
add
xchg
adcb
imul
or
insb
jle
add
mov
call
lret
push
push
ret
mov
push
xchg
or
gs
pop
lock
ljmp
mov
pusha
push
mov
push
mov
inc
lds
ljmp
xchg
or
mov
jg
xor
cli
int
clc
imul
and
aaa
mov
pop
push
add
es
shrb
jecxz
or
lret
xor
popa
ljmp
std
lret
mov
push
addr16
popf
sbb
shl
sub
xchg
clc
push
pop
ljmp
test
adc
xor
adcl
addl
mov
sbb
mov
cmp
cmpl
aad
cmpb
lcall
xchg
push
movsl
xor
dec
mov
adc
stc
call
push
lret
mov
jmp
sbb
mov
inc
lock
fstpt
pop
ret
sbb
ljmp
cli
sbb
or
adc
mov
int3
xorb
es
pop
pusha
dec
testb
ret
imul
inc
push
js
cmp
inc
sub
scas
add
xor
or
and
pop
and
xchg
pop
aam
sub
mov
ss
lock
add
dec
pop
sub
in
or
dec
out
xchg
xor
xor
push
sbb
dec
ret
adc
mov
sbb
jb
cmp
clc
fsubrp
sbb
aam
jmp
jmp
mov
adcw
inc
bnd
pusha
orps
cmp
adcb
adc
loope
inc
mov
imull
fdivs
scas
add
clc
ljmp
dec
and
inc
idivl
pop
add
rorb
pop
mov
cmp
imul
add
pop
ljmp
loopne
mov
in
cmp
mov
imul
loopne
add
pop
mov
pop
push
pop
mov
daa
nop
add
sub
add
and
aaa
add
sub
adc
fsubr
mov
add
or
repnz
lods
leave
push
sarb
dec
rcrb
push
and
andl
cmp
or
sub
test
cmpsl
dec
cmc
xor
add
push
mov
xor
js
decl
inc
cli
mov
scas
ror
shufps
mov
and
xor
push
xor
test
jmp
jnp
inc
add
xor
cmp
out
adc
std
or
jge
dec
jmp
sbb
or
push
iret
add
and
shl
aas
imul
jmp
jg
lock
pusha
stc
ljmp
jle
sbb
add
loope
jmp
jp
sub
addl
pusha
rcll
push
jbe
sub
mov
and
sub
scas
sbb
jmp
mov
add
daa
and
jbe
outsl
add
inc
jmp
lret
add
push
mov
jbe
in
ret
or
and
push
decl
scas
mov
and
xor
add
stc
push
add
adcb
jmp
sub
mov
mov
xchg
push
leave
scas
icebp
aam
jecxz
ja
inc
daa
push
jmp
cld
push
sub
mov
push
jnp
ucomiss
loopne
and
push
jmp
mov
ret
and
add
xchg
and
adc
pop
push
or
push
repz
inc
sbb
loop
push
sub
pop
add
push
lock
pop
push
push
jmp
sub
mov
jmp
sbb
popa
sub
adc
loopne
add
out
push
popa
inc
out
aaa
loopne
push
jg
stos
mov
mov
cli
test
popf
adc
pop
pop
xchg
sbb
insl
mov
push
call
adc
imul
lds
pop
movzbw
push
or
adc
xor
push
or
enter
js
xchg
sbb
and
nop
cmpsb
jg
jge
xor
cwtl
sub
push
mov
sub
int3
add
push
adc
icebp
stc
or
xor
add
int
sbb
inc
sub
out
ficomps
or
pop
in
xor
je
popf
adc
pushf
push
push
push
arpl
loopne
sub
ds
pop
or
shl
xor
push
ret
jle
sbb
repz
push
push
jmp
jecxz
cmp
rolb
push
jnp
push
in
icebp
inc
or
push
pop
fsubl
adc
sub
xor
push
cltd
gs
push
dec
in
je
pop
pop
mov
fwait
xor
mov
cli
test
stos
inc
ds
and
ljmp
jno
xor
dec
adc
cmp
adc
lcall
xchg
dec
je
inc
push
pop
adc
adc
sbb
push
lock
dec
stos
and
xor
dec
jecxz
push
push
add
sbb
pop
mov
ucomiss
jg
addl
xchg
push
call
cmpsl
jg
adc
rclb
mov
lods
xor
push
inc
out
jne
aam
sahf
sbb
or
push
jp
sbb
push
push
addb
push
dec
fildl
fs
daa
dec
addb
cmc
dec
adc
push
hlt
loop
add
adc
rcrl
test
sbb
addr16
mov
inc
and
push
scas
cmp
and
push
mov
xor
sar
jmp
into
jg
add
pusha
dec
add
add
bound
repz
and
xchg
pop
int3
int3
xchg
inc
mov
inc
shr
push
fcmovb
jns
loope
jns
sub
iret
testl
sub
xor
pop
pop
int3
inc
nop
pop
in
push
push
inc
mov
arpl
insb
cmp
mov
jmp
or
in
and
or
pop
pushf
int3
dec
fcoms
cmp
or
aas
sub
sub
cmp
push
mov
jnp
mov
repz
insl
sub
fisttpl
mov
addb
push
psubd
xor
xchg
int
sub
pop
pop
cltd
push
xor
inc
xor
jno
es
pop
aas
arpl
fcomps
imul
mov
aaa
roll
or
loopne
lock
xchg
aas
and
into
xor
in
pop
aaa
xchg
jns
dec
fnstsw
or
push
js
or
rcll
sub
or
xchg
popf
and
pop
mov
movsb
xchg
sbb
mov
and
pop
push
sub
mov
mov
shl
xchg
push
repz
orb
dec
mov
or
dec
adc
adcb
ja
sub
icebp
push
nop
shll
xchg
fs
rorl
xchg
jmp
es
xchg
imulb
inc
pop
xor
jmp
mov
mov
push
pop
jmp
cli
mov
mov
popa
daa
cs
xor
jmp
cmc
jae
sahf
and
jmp
cwtl
int3
xor
dec
cwtl
push
or
sbb
addb
test
sub
push
mov
or
fldl
ror
and
jb
xor
rolb
iret
in
js
jp
ffree
pop
addr16
jno
out
addl
lods
insl
add
cmp
pop
lock
test
nop
mov
mov
add
add
clc
add
inc
pop
jbe
push
push
push
pop
add
jmp
add
rolb
push
xor
fcompl
or
add
jle
dec
xchg
mov
add
and
and
inc
jmp
add
addr16
shr
mov
outsl
mov
push
xorb
add
out
or
jns
add
or
ret
lcall
and
sbb
das
push
outsb
xor
jb
cli
popa
jo
add
xchg
inc
or
scas
cs
repz
testl
popa
je
jmp
in
gs
jae
divb
cmp
or
lret
or
aad
push
pop
mov
and
pop
add
xchg
cs
rcrb
out
pop
xor
mov
dec
adc
fsubs
je
jmp
push
inc
dec
mov
sub
neg
jae
std
dec
mov
add
test
rolb
testb
into
mov
xlat
repnz
or
out
push
testb
push
sbb
mov
roll
pop
mov
adc
fiaddl
cmp
xchg
pop
xorl
pusha
sbb
frstor
push
dec
inc
pusha
add
xor
sub
add
and
mov
jno
push
push
shrb
adc
call
ljmp
sbb
mov
sbb
pop
enter
sbb
icebp
jl
jo
or
pop
sub
add
movsb
cli
add
cld
lret
mov
ja
pop
sub
lds
add
test
lret
je
lods
test
xor
pop
mov
lret
dec
pop
dec
push
push
pop
mov
add
call
iret
repz
and
repz
call
data16
and
sbbl
jmp
iret
push
inc
femms
mov
call
push
jmp
inc
not
sub
outsl
add
push
idivl
adc
lock
popf
add
imul
mov
addb
or
or
mov
shl
mov
add
fcomps
cwtl
cld
xor
dec
ret
lret
inc
pop
nop
jb
sti
mov
aaa
outsl
arpl
and
mov
shrl
xor
push
sub
sub
push
fiaddl
pop
inc
jp
lahf
and
sub
add
push
jne
jne
stc
ret
into
or
jmp
mov
mov
movsl
push
dec
add
mov
xchg
mov
pop
add
inc
out
lahf
or
xor
out
je
ret
jae
ja
inc
adc
add
or
loop
shl
pop
sbb
dec
pop
add
in
adc
or
push
sbb
or
pop
mov
mov
xor
cmp
xchg
out
push
xor
pusha
jle
mov
jb
shlb
dec
xor
cmp
es
xor
imul
and
fnstcw
xorb
fdivrs
imul
dec
loop
pop
fadds
int3
add
jp
jmp
sub
mov
sbb
xchg
fiadds
adc
repnz
mov
push
int
in
adc
or
loop
ja
pop
add
sub
inc
mov
push
rclb
adc
test
mov
adc
jmp
cli
xchg
je
push
mov
add
insb
loopne
pop
sub
inc
sub
cmpsl
push
sub
dec
loope
sbb
in
pop
out
push
sbb
mov
inc
mov
inc
setge
repz
xor
lret
inc
jmp
cmp
jo,pt
scas
pop
shll
adc
test
imul
popf
sbb
or
pushf
xor
cmp
dec
add
cwtl
js
sbb
xchg
cmpsb
mov
jne
and
pop
sub
jecxz
push
pushf
call
out
jb
roll
rolb
mov
jae
nop
adc
sub
xchg
cvtps2pd
sti
movsl
int
dec
clc
adc
jge
stos
xchg
mov
inc
lret
xor
cmp
inc
inc
pop
push
les
adc
or
std
pop
push
cmp
outsb
nop
out
and
ds
xchg
xchg
sub
sub
sbbl
dec
iret
orb
sbb
adc
jl
roll
enter
shl
pusha
xchg
push
push
lret
adc
rolb
pop
fisttpll
xchg
and
jne
shr
add
ss
lret
mov
cltd
xor
into
lea
sbb
clc
pop
imul
or
or
jns
test
xchg
mov
add
xchg
stos
lock
add
push
push
dec
fmuls
mov
pop
inc
push
push
and
mov
and
test
std
mov
or
popf
out
cmp
and
xor
nop
daa
subb
push
push
add
cmp
popa
pop
neg
cwtl
shlb
out
call
adc
push
clc
pusha
inc
outsl
adc
rolb
pop
mov
icebp
lret
pusha
cmp
sbb
push
pop
mov
dec
mov
mov
add
fimull
adc
xchg
add
pop
sub
arpl
jns
pop
sub
pop
push
xor
xor
push
or
je
dec
arpl
xchg
dec
sbb
jmp
lods
dec
fldenv
xor
mov
mov
jmp
xor
push
out
xchg
lock
mov
js
ss
sbb
mov
adc
or
andl
push
pop
jl
les
jb
xchg
sti
out
cmpsb
or
push
add
adc
add
clc
add
pop
pop
add
pop
mov
push
push
jmp
sarb
and
and
stos
push
push
pop
and
jl
lcall
insl
mov
xor
int3
filds
jbe
add
add
sbb
push
enter
pop
and
ds
fmull
pop
pushf
add
shrb
subb
shrb
lock
pop
gs
outsb
or
pop
in
das
adc
mov
in
sub
cltd
mov
fnstsw
or
xchg
and
pop
fmuls
pop
and
xchg
fs
sbb
or
incl
dec
push
xor
jp
je
popa
lods
ficoms
loope
jmp
dec
mov
and
add
pop
inc
outsb
cmp
mov
pop
pusha
pusha
out
cli
or
adc
sub
popl
jmp
xchg
jne
push
repnz
rcll
faddl
mov
clc
outsl
jo
xor
cltd
mov
push
sub
xor
repnz
jns
or
pushf
in
test
cltd
pop
mov
xchg
pop
jns
inc
sub
pop
xor
aas
daa
xchg
fwait
push
leave
nop
test
cs
and
sub
movsb
es
mov
iret
dec
ret
bound
jle
sar
bound
cmpl
push
repnz
fs
not
shll
enter
add
xchg
add
push
push
jmp
icebp
mov
aam
loope
inc
dec
and
push
mov
sub
fcompl
jbe
add
cmpb
and
adc
jmp
call
mov
loopne
add
and
add
pop
ret
mov
inc
int
aas
jl
xchg
inc
stos
mov
sti
das
sbb
jmp
pop
push
push
js
xor
out
loopne
clc
in
andl
push
adc
addl
add
movsb
inc
xor
pop
jmp
push
repnz
push
jl
and
clc
or
jnp
movsb
jecxz
add
lea
insb
fisubl
rcll
pop
loop
xchg
push
je
addr16
aam
or
es
mov
lds
cmp
lods
mov
jnp
add
cmp
jae
xor
pop
and
nop
faddl
rolb
mov
jl
or
inc
sbb
mov
lret
ja
mov
mov
ljmp
jbe
jmp
hlt
fcoml
and
adc
fidivl
sub
add
pop
out
xor
shrb
fucomi
xor
mov
add
sbb
repz
jmp
mov
mov
sahf
mov
push
cmp
addb
jns
push
dec
and
es
dec
aas
je
scas
std
test
push
push
xchg
mov
jmp
xor
stc
mov
jl
sub
adc
and
cmp
adc
cmp
xchg
nop
sub
sbb
imul
out
add
movsw
cmc
mov
xchg
mov
and
jmp
mov
imul
add
push
mov
in
scas
lds
stc
pop
rclb
pusha
fisubrl
mov
js
push
vmovaps
adc
xor
mov
or
es
adc
fwait
bound
subb
add
xor
nop
or
int
and
mov
dec
or
mov
jbe
pop
xor
add
mov
loope
lea
dec
cmp
xor
insl
add
jmp
mov
pop
xor
iret
xor
xor
stc
mulb
leave
enter
mov
inc
or
mov
push
push
enter
adc
pop
xor
out
pop
mov
sbb
enter
sbb
cmp
inc
lret
pop
jmp
int
scas
xlat
sub
xchg
add
mov
push
rcr
dec
rolb
xor
adc
rcrl
movsl
and
and
aam
pushf
and
popa
vpshld
dec
lock
leave
sbb
lock
cmp
sbb
push
pop
push
cmp
pop
mov
xor
loope
jbe
jmp
xor
cld
loop
jl
cmp
out
pushf
xor
cwtl
repz
sarl
mov
sub
es
and
add
lret
cmp
mov
add
cmp
and
pop
hlt
inc
in
scas
adc
stos
and
push
ss
repz
pop
and
mov
int3
jns
add
aam
ja
aad
add
pop
and
pop
cs
add
inc
xor
or
jmp
mov
mov
push
out
jo
out
mov
sub
dec
je
add
loopne
fmuls
xorl
notb
jmp
cwtl
pusha
repz
sbb
das
sub
xor
mov
xor
lds
shr
call
dec
and
leave
inc
add
sarl
xchg
outsb
add
or
jmp
bound
push
shl
mov
inc
incl
push
sub
jmp
sarl
imul
lods
sub
aaa
fs
stos
shlb
pop
out
adc
jle
pop
sbb
and
aam
inc
loope
and
or
arpl
mov
and
sub
dec
add
clc
add
pop
cwtl
scas
push
cmp
push
shrb
pushf
jmp
movsb
ret
sbb
dec
sub
adc
push
sbb
popa
pop
push
jb
ljmp
cmp
aas
loopne
mov
cmpb
jecxz
test
sarb
je
cs
arpl
sahf
dec
sbb
sar
xchg
loop
and
fcomp
inc
or
in
mov
adc
inc
sbbl
adc
xor
aam
push
sbb
mov
push
xchg
and
or
or
and
test
ss
push
arpl
fwait
push
icebp
lret
pop
mov
push
pusha
mov
inc
roll
sub
repnz
xor
es
jmp
add
sub
je
in
je
push
mov
or
mov
aad
xchg
aad
imull
xor
std
pop
pop
mov
rcr
daa
inc
ret
mov
or
cltd
xor
iret
push
ret
inc
stos
pop
mov
mov
cmpsl
bound
add
cs
mov
out
popf
and
dec
cmc
push
push
loopne
cmp
test
roll
subl
sbb
shll
clc
loope
sbb
xor
lds
adc
mov
and
adc
push
or
add
insb
adc
mov
fmull
sub
push
mov
jmp
xchg
pop
ss
lret
or
enter
mov
or
add
add
push
pop
aaa
push
sbb
push
mov
and
push
test
fs
add
outsl
nop
cmp
mov
add
add
loope
ret
pop
inc
mov
push
int3
or
xor
jne
sbb
fcompl
add
std
shrl
pop
jo
pop
sub
sub
add
adc
mov
push
dec
out
mov
jp
xchg
pop
push
repnz
lock
cltd
mov
dec
enter
int
in
push
mov
pop
test
clc
shl
pop
push
aad
xchg
jne
add
ljmp
push
cs
sub
into
loopne
addl
out
jbe
xchg
dec
dec
jmp
sub
jb
lea
push
or
jp
icebp
adc
sbb
jp
negb
pop
or
dec
inc
inc
jno
xchg
dec
inc
subl
cmc
sbb
xor
pop
bound
push
ret
jne
loop
bound
cltd
aas
imul
rolb
adc
cmc
adc
arpl
sbb
add
lret
mov
adc
inc
pop
lods
mov
test
sub
jmp
stos
mov
out
mov
pop
xchg
stos
add
mov
clc
shlb
pop
sbb
or
mov
cmpsb
enter
into
jno
ljmp
les
lods
cld
daa
fimuls
stos
icebp
sub
xlat
push
inc
xor
sub
jecxz
test
add
movb
push
xchg
js
or
jmp
scas
fisttpll
mov
push
mov
inc
dec
pop
mov
in
addl
mov
fwait
dec
xor
push
inc
pop
loop
push
mov
push
push
add
inc
dec
push
jo
nop
add
jbe
pusha
or
jb
push
in
rcrl
mov
xor
and
popf
mov
jmp
adc
call
fsubrp
out
adc
inc
ret
test
push
mov
xor
mov
mov
mov
cmp
push
cmp
ljmp
xchg
in
mov
push
xchg
les
and
sub
jno
and
sub
mov
sti
jmp
out
cmp
xchg
and
dec
adc
sub
inc
jns
jl
int3
je
add
sub
pop
push
jmp
cli
and
xlat
sahf
aaa
inc
mov
inc
dec
sub
inc
int3
js
leave
push
std
adc
fldl
inc
inc
shl
xlat
je
nop
pushf
mov
shl
shl
in
dec
js
add
in
or
addb
insl
or
and
pusha
pop
ret
push
or
push
jmp
rcrl
xchg
in
cmp
inc
addr16
cwtl
cld
push
jo
out
adc
in
xor
or
nop
jb
rcl
dec
les
int
or
jae
data16
addb
lret
pop
and
cmp
fistpl
lea
nop
add
aad
pop
push
shl
and
jb
cmc
and
not
shr
pop
or
or
jns
cmc
mov
addb
xorb
jge
nop
pop
and
xchg
imul
in
push
call
xchg
push
mov
test
push
mov
div
inc
xchg
xor
or
xor
sub
pusha
xchg
ss
shrb
xor
pop
into
jmp
cld
xor
fildll
pop
pop
andb
dec
inc
inc
cwtl
or
imul
aad
je
adcb
hlt
pop
es
mov
xchg
pop
adcb
adc
add
loopne
test
cmp
push
push
jno
push
inc
add
add
out
pop
and
pop
push
imul
bound
and
inc
aas
mov
lods
xor
mov
adc
mov
sub
int
xchg
enter
add
rol
or
das
add
sub
sbb
inc
or
xchg
daa
sub
push
outsb
mov
and
in
outsl
loope
dec
fidivrl
cmp
loop
adc
pop
out
mov
fcomps
rcrl
push
dec
sbb
mov
cld
add
sbb
getsec
or
gs
test
add
mov
lahf
popf
and
jmp
pop
push
xor
out
jmp
xorl
subl
cmp
in
and
jmp
dec
add
adcb
xchg
push
push
mov
sub
pop
pop
adc
push
dec
and
sub
adc
push
aam
xor
divps
jecxz
or
cwtl
mov
dec
and
ja
cld
test
add
ljmp
dec
cmp
or
mov
cmp
mov
add
mov
repnz
addb
dec
orb
inc
cmp
shll
lret
je
xchg
aam
adc
pop
or
push
push
adc
or
cltd
js
jp
sub
aaa
lret
ljmp
push
cmc
ljmp
hlt
shl
add
mov
pushf
sbb
sbb
rol
add
push
pop
add
pushf
pop
cmp
andl
add
rcll
in
in
mov
fisubrl
in
fdiv
add
cld
in
mov
xchg
push
xchg
ljmp
add
or
dec
pusha
dec
jp
es
cmp
dec
xor
repz
jmp
pop
cmp
scas
push
add
mov
data16
pop
push
add
push
add
add
mov
push
mov
inc
test
push
xorl
das
mov
xchg
or
and
gs
and
data16
push
mov
scas
xchg
jecxz
rcrb
mov
xor
mov
aad
add
inc
mov
adc
sbb
mov
jp
mov
icebp
pop
xchg
cmp
pop
imul
push
les
repnz
mov
pop
jecxz
adc
inc
sub
xchg
xor
push
add
jmp
ret
arpl
aad
add
inc
shrl
and
xchg
sbb
and
dec
add
push
jae
dec
adc
mov
shl
inc
scas
stos
mov
clc
pop
cmpb
push
push
pop
negb
ficompl
adc
jl
and
pop
sbb
add
jmp
sti
cld
sbb
jns
jo
lret
in
lock
push
push
jb
pusha
pop
es
not
fwait
and
add
push
shll
imul
gs
xchg
je
inc
inc
push
dec
lret
jmp
arpl
xor
xor
jecxz
xchg
mov
leave
add
cmp
aaa
mov
mov
adc
mov
jmp
cmp
lret
push
mov
sub
sqrtps
xchg
fdivrs
aas
mov
dec
and
mov
sub
enter
jae
sub
into
dec
mov
sti
inc
mov
es
pusha
cmpsl
mov
pop
and
dec
xchg
and
inc
sbb
in
jmp
sbb
dec
sti
cmpl
jae
xor
push
out
and
ret
xchg
sahf
add
fiaddl
out
shlb
jns
or
out
add
dec
or
mov
lret
xchg
or
mov
and
jp
jno
xchg
or
aas
rorb
sub
aaa
imul
jbe
or
dec
sbb
pop
shlb
in
add
int
sbb
push
xor
sbb
shll
add
add
and
jmp
sub
push
pop
loopne
jmp
addr16
push
add
mov
dec
out
sbb
lods
cs
inc
decb
push
xchg
out
jmp
add
pop
and
aas
dec
xor
dec
dec
idiv
sub
or
imul
pop
rcl
and
jae
pop
inc
fcom
push
dec
imul
add
jae
push
jmp
repnz
push
in
idivb
push
push
popa
cmpsb
je
and
rclb
insl
lea
insb
mov
je
dec
sub
cmp
mov
sub
sub
or
push
sarb
das
push
inc
jmp
push
cld
ret
push
pop
in
cmp
push
mov
mov
stc
mov
fadds
scas
sbb
cmp
or
sbb
fucomp
push
and
and
adc
add
dec
dec
xchg
adc
mov
mov
dec
and
adc
outsb
and
lds
sub
test
lock
dec
pop
hlt
aad
xchg
repz
loopne
push
push
inc
inc
cmpsl
pusha
loop
das
fidivrs
imul
ror
sbb
push
and
nop
push
test
adc
stc
iret
and
or
pop
in
and
nop
das
rorb
dec
push
pop
adc
mov
inc
pusha
jecxz
mov
jno
andb
cmc
addb
pop
add
xor
add
jb
repnz
fidivrl
add
dec
and
xor
pop
cs
add
lock
fstpl
mov
mov
cmp
cli
inc
mov
leave
aam
jp
imul
lods
adc
daa
mov
sbb
inc
ljmp
jns
lret
arpl
mov
les
sbb
mov
orl
push
xor
or
nop
xchg
mov
add
dec
xor
adc
aas
and
add
fisttpll
sahf
pminsw
shl
pusha
js
add
sub
pop
jmp
fwait
pop
jmp
jmp
fmull
inc
mov
test
xlat
push
out
inc
in
idivb
test
jmp
lret
add
scas
jne
push
and
shrb
or
push
dec
add
dec
or
and
mov
dec
aad
push
mov
push
fs
or
aam
jbe
ljmp
int
inc
or
inc
sahf
ds
ljmp
out
adc
mov
aaa
push
es
pop
pusha
rclb
mov
xchg
enter
add
pop
add
sahf
inc
inc
sub
pop
dec
pop
loop
sub
jmp
repz
xor
fsubr
sub
sub
in
pop
or
jmp
movsl
jmp
into
xchg
dec
aas
arpl
push
xchg
notl
aad
mov
xor
je
addr16
or
js
sbb
call
adc
push
test
js
jmp
cli
jo
push
pop
shl
push
add
inc
mov
es
test
das
aas
or
rorb
xchg
pop
or
jl
test
insl
cltd
bound
mov
adc
out
imul
push
shr
inc
in
pop
data16
push
sub
repnz
out
and
pop
pop
and
pop
cld
xchg
add
lahf
dec
pop
inc
sub
xchg
lret
out
add
testb
dec
add
push
adc
dec
cli
pop
or
inc
or
addr16
mov
fwait
pop
sbb
insl
stos
aad
xchg
pop
inc
push
push
xchg
mov
enter
push
js
das
into
pop
gs
mov
sub
cvtps2pd
fucompp
imul
mov
mov
stc
inc
mulps
sbb
sti
adc
cmp
jne
fdivrl
fwait
inc
mov
lea
adc
push
push
and
stc
pop
aam
inc
repnz
inc
or
dec
push
je
push
lcall
ret
cmp
cs
out
test
pop
mov
mov
mov
sahf
rclb
sarl
int
iret
push
cmp
sub
pop
sbb
sub
pop
add
popf
enter
jmp
dec
xor
sub
mov
adc
stos
movsb
jge
imul
rolb
or
add
mov
outsb
add
and
stc
jge
mov
inc
sub
xchg
pop
pop
leave
push
push
add
repnz
or
adc
push
push
orb
xchg
gs
and
jp
lods
sub
enter
cs
push
loop
mov
orl
cmpsl
adc
cmp
inc
mov
add
pusha
xor
das
push
push
addb
inc
inc
in
sarl
daa
roll
mov
cmp
into
inc
jl
sbb
or
and
pop
mov
popa
test
xchg
jl
call
mov
jo
cli
xchg
aaa
insl
test
jmp
xchg
pop
or
mull
jmp
pop
pushf
gs
inc
xchg
add
addl
jno
or
xor
xchg
sub
mov
ret
in
mov
es
ja
mov
sbb
ret
and
jecxz
push
pusha
cmc
out
push
jne
push
add
rorb
shr
sub
xor
call
mov
nop
mov
sub
repnz
and
mov
testl
and
jl
or
movsl
aam
push
scas
xchg
mov
cli
out
jno
adc
sbbl
test
loope
les
add
subl
fcomip
popf
les
pop
scas
push
and
into
pop
in
pop
add
add
jmp
inc
faddl
popa
sub
jp
stc
xor
cmp
stc
xchg
das
lock
push
jo
or
push
jmp
lret
sub
lea
and
mov
or
imul
test
add
add
jnp
add
add
push
aaa
pop
pop
adc
or
jmp
sbb
popa
mov
mov
sbb
sub
fistpl
inc
push
inc
int
out
and
popa
pusha
cli
mov
jmp
js
cmp
dec
jno
sbb
push
and
mov
cmc
or
xor
mov
repnz
add
mov
mov
mov
and
stos
pop
mov
stos
out
imul
or
push
mov
sub
outsl
cmpsb
cmp
mov
mov
aas
ljmp
jnp
or
out
aam
add
xchg
adc
mov
addr16
ds
fcomi
push
sub
mov
or
jmp
adc
ljmp
ja
pop
add
and
movsl
adc
or
loopne
lock
outsl
cmp
pop
roll
lods
add
push
push
lock
push
pop
push
cmp
and
mov
sub
loopne
dec
sub
dec
in
subb
or
sub
fcomps
pop
inc
adc
or
outsl
dec
add
call
pop
sahf
or
pop
aad
mov
push
pushf
loope
xor
insb
popf
lret
push
cmp
movb
xlat
adc
in
push
add
xor
bswap
into
mov
leave
test
add
cmp
mov
inc
adc
and
lds
cli
outsb
sub
sub
and
inc
or
cmp
mov
xchg
fcmovu
mov
pop
pop
cmpsl
cmpb
jnp
call
xor
dec
pop
roll
scas
sbb
or
xor
pop
imul
lcall
xor
and
sbb
ds
sarl
pop
lcall
movsb
mov
inc
mov
or
hlt
rclb
xor
js
loop
pop
xchg
jae
mov
daa
pop
xor
mov
xchg
xchg
lret
sub
lock
push
push
xchg
adc
shll
scas
mov
inc
jno
test
jnp
das
pop
add
int
loop
mov
and
xchg
xchg
bound
sbb
jg
inc
mov
jns
pop
push
xchg
test
repnz
sub
pop
add
inc
mov
fs
fbld
out
push
xchg
inc
push
negb
sub
dec
repz
insl
test
push
shl
mov
das
cs
insb
adc
pop
ljmp
push
fs
sbb
nop
push
xor
jns
outsl
rorl
jge
rcrb
dec
or
fimuls
jmp
in
inc
or
ficoml
mov
rorb
std
or
jmp
es
and
push
inc
icebp
or
sub
xchg
xor
push
fisubrl
pop
pop
loope
mov
pop
push
add
push
shlb
mov
popa
nop
and
outsl
mov
pop
mov
or
jge
jle
mov
mov
mov
xorb
repz
pop
xor
push
push
mov
adc
dec
loopne
add
in
sub
adc
xchg
call
cld
add
js
hlt
push
push
jnp
add
pop
add
jmp
dec
int3
mov
or
push
xchg
mov
sub
sbbl
ds
les
testl
inc
popa
dec
int3
sbb
sub
gs
pop
mov
or
clc
stos
add
outsl
cmp
xor
jne
mov
adc
pop
jno
pop
popa
inc
jnp
sub
jmp
mov
push
les
daa
test
xor
aad
adc
fucomi
test
shr
lahf
inc
add
out
dec
pop
ds
push
sbb
fdivrl
out
pop
orb
test
xchg
xor
lds
idivb
pusha
pop
xlat
test
in
enter
push
lret
push
pop
adc
pop
pop
pop
xor
pop
cmp
adc
mov
fisttps
outsl
inc
cwtl
je
out
cmc
loopne
mov
dec
mov
mov
sub
fcoml
nop
sbb
dec
into
daa
inc
or
mov
mulb
repnz
aaa
jno
adc
inc
inc
xchg
or
push
cld
mov
or
repnz
pusha
adc
dec
or
mov
xlat
aas
out
xchg
or
jg
sub
ja
add
and
jno
add
xor
jmp
ja
lock
icebp
je
or
add
pop
or
pop
add
jbe
mov
insl
rcrb
call
ret
xchg
mov
es
loop
fdivs
mov
cmp
rorb
sub
add
jmp
push
push
mov
rcrb
fisttpll
subb
mov
and
push
adc
xlat
xchg
add
push
cmp
xchg
cmpsl
jae
sub
mov
hlt
enter
dec
or
enter
pop
sbb
movsl
ficoml
sub
xchg
fnsave
mov
xor
dec
popa
jge
es
mov
arpl
jne
pop
pop
push
mov
sub
xor
jmp
popf
add
clc
int
std
sub
in
shlb
pop
push
fisubrl
jbe
or
or
sbbl
in
sub
aas
inc
adc
lods
or
sbb
sbb
sbb
sbb
jg
push
sbb
mov
fnstsw
add
add
pop
mov
mov
je
inc
push
xchg
pushf
add
lret
stos
andb
sbb
rclb
insb
jb
dec
or
mov
and
dec
jp
jnp
push
jg
lcall
add
adc
cmp
mov
aad
mov
movsl
add
lret
or
mov
and
call
pop
pop
leave
sbb
in
push
add
loopne
mov
loop
pusha
not
call
pop
or
clc
push
push
jl
subb
sub
push
into
jmp
cmp
cmp
xchg
add
xor
movsl
pop
sub
adc
cs
cmc
mov
cmp
ret
mov
mov
mov
int
add
xchg
lcall
cmpl
pop
adc
pop
das
and
add
mov
pop
inc
pop
orl
fsubrs
or
pop
mov
lds
test
test
mov
mov
jl
push
pop
sbb
adc
mov
std
sub
dec
push
fistpl
inc
dec
jmp
push
repz
pusha
ss
call
out
adc
jo
nop
inc
leave
orb
sub
and
jns
xchg
test
rcrb
lds
adc
mov
xor
mov
mov
ficoms
leave
jbe
outsb
jnp
int
sub
aaa
adcl
push
fidivs
mov
jmp
adc
cltd
sub
sub
pusha
cwtl
jns
inc
push
xchg
inc
add
sub
loopne
pop
fnstcw
inc
mov
xchg
test
lret
push
testb
push
sbb
and
aaa
cmp
test
add
cmp
movsl
icebp
push
in
pop
sbb
jo
jnp
adc
inc
or
mov
mov
insl
add
cmp
jbe
andb
sti
jne
mov
dec
pop
sub
xor
hlt
mov
test
fstpt
mov
loop
adc
aam
sub
pusha
sbb
adc
add
xor
jle
add
or
mov
sub
push
mov
add
jmp
repnz
lds
mov
les
shl
mov
adc
movsl
fdivrl
daa
push
dec
inc
sahf
push
cli
pop
dec
push
dec
mov
pop
movsl
push
lods
addr16
icebp
cli
inc
cmc
adc
sarl
add
sub
cmp
cmp
clc
loop
add
loope
lret
mov
jp
or
push
add
aas
xchg
push
mov
pop
cld
push
fsubrs
dec
popa
or
push
movsb
repnz
pop
push
shl
lret
dec
rclb
jp
daa
in
sbb
jb
add
push
mov
adc
fsubr
je
rcll
cmp
out
leave
and
xchg
or
add
or
jmp
std
popf
ret
xor
cmp
rorl
movsl
pop
iret
pop
cwtl
filds
clc
inc
push
pop
push
jmp
xor
dec
aam
push
aad
pop
inc
pop
mov
jg,pn
or
cld
jnp
xchg
add
add
or
push
outsl
jbe
inc
add
shl
scas
mov
xor
jae
push
push
ds
jp
pop
dec
or
sbb
jg
add
push
lret
jmp
das
pop
enter
mov
push
push
jmp
mov
jp
inc
dec
inc
jbe
jb
sub
or
pop
xchg
dec
nop
negb
pop
mov
mov
mov
pop
pop
aam
fdivrs
or
push
push
jmp
movsb
mov
cmp
stos
add
sub
dec
loop
adc
and
xchg
divl
or
pop
inc
jns
test
xor
inc
and
shrb
icebp
out
xor
ret
push
push
add
pop
mov
daa
cmp
mov
cli
lcall
fisubs
fwait
ds
fldt
push
mov
or
cltd
in
inc
call
mov
pop
ljmp
sub
or
sub
pop
push
or
outsb
clc
in
mov
frstor
pop
call
fldcw
add
mov
jne
arpl
xchg
mov
sbb
stos
ret
xor
pop
push
push
and
push
jmp
shrl
loopne
push
in
dec
cmc
and
addb
in
sub
mov
mov
xor
jmp
mov
loope
fstpl
mov
mov
lahf
adc
push
cmpsb
adc
fucomp
stos
filds
sbb
add
repz
inc
mov
insl
jnp
std
add
mov
pop
repz
ffree
and
and
mov
push
mov
push
push
add
dec
cmp
inc
cltd
xchg
ret
and
insl
stc
or
pushl
ficompl
adc
fidivs
sarb
icebp
push
xchg
and
push
cmpxchg
loope
jmp
push
mov
xor
push
dec
ss
popa
lds
das
ds
mov
repz
add
rorb
fs
jo
lahf
int3
pop
mov
xor
inc
jmp
dec
jbe
andb
test
sbb
jbe
push
mov
or
push
popl
jmp
adc
sub
dec
ja
adc
and
cmpsl
inc
pop
iret
and
dec
hlt
nop
ljmp
jno
xchg
int3
std
add
xchg
in
iret
xor
loope
cmp
mov
aam
mov
fdivrs
xchg
cmp
add
pop
mov
mov
pop
sub
push
add
arpl
adc
mov
add
xchg
sbb
adc
jmp
xchg
push
inc
in
cld
inc
rol
jecxz
push
inc
nop
jl
enter
addb
dec
icebp
pop
lcall
cld
jns
rcrb
adc
add
xor
mov
ret
mov
push
aam
push
pushf
repz
lcall
push
sbb
add
in
dec
hlt
popa
jb
xchg
mov
or
inc
imul
inc
sub
adc
add
fsubrs
stos
adcl
out
je
je
movsb
and
push
clc
xchg
and
sbbl
loop
sahf
dec
adc
out
add
inc
je
push
testb
lock
xchg
inc
lea
jns
pop
shrb
hlt
mov
or
push
mov
sub
pop
movb
sub
pusha
fldl2t
das
pushf
push
gs
in
xlat
mov
sbb
mov
test
sub
jmp
mov
jmp
xchg
rol
mov
jno
jnp
shll
push
and
sbb
movsb
lea
mov
ret
pop
push
jb
and
iret
add
mov
add
add
subb
fwait
or
jmp
pop
jmp
push
cmp
jle
mov
aam
xchg
mov
or
fnstsw
paddb
pop
mov
lds
mov
or
push
mov
xchg
xchg
gs
sbb
add
jb
test
sub
enter
adc
dec
inc
mov
push
jmp
add
test
push
ret
or
sbb
roll
sbb
loop
and
sub
shl
rorl
mull
jmp
pop
fsts
stc
arpl
dec
loop
lret
punpckhdq
inc
sub
xchg
call
or
push
sub
cmpsl
lcall
and
push
and
pop
cmpsb
hlt
sarb
xor
je
lret
or
jge
add
in
jmp
inc
jl
stos
push
sbbl
jo
scas
add
inc
neg
jmp
jmp
les
ret
mov
jmp
fcomi
jg
dec
inc
test
cld
and
or
pop
repnz
dec
push
mov
les
cmp
sub
faddl
dec
mov
cmp
pop
xor
jmp
loopne
and
push
xor
jmp
ljmp
xor
and
jo
dec
or
pop
adc
stc
cmp
cmp
or
push
fs
and
add
pop
adc
add
iret
push
js
pop
adc
cmp
in
jge
lods
imulb
and
push
pop
fs
imul
pop
cmpsl
out
push
mov
push
jmp
mov
adc
scas
xor
add
enter
push
push
mov
or
loopne
loopne
mov
sub
jns
rorb
push
xchg
cmp
adc
lods
not
push
push
or
inc
pop
sbb
out
out
sbb
outsb
jno
mov
mov
push
push
push
or
jecxz
adcb
out
xor
pop
pop
int3
cmp
mov
mov
dec
js
shr
pop
xor
jp
cmpsb
clc
dec
sti
ret
js
pop
sbbb
jns
xchg
cld
pop
push
or
jmp
add
icebp
push
jmp
pop
mov
cmp
sar
adc
push
cli
fisttpl
ja
rclb
or
jnp
pushf
mov
imul
xor
xchg
cmp
pop
jmp
or
and
fimuls
cmp
xor
push
andb
xor
lcall
mov
add
jno
add
jae
jmp
rol
mov
adc
mov
ret
mov
mov
cld
pop
sub
inc
idivb
and
out
or
mov
lahf
sbb
ret
pop
nop
dec
pop
sbbb
inc
lret
jmp
or
xchg
mov
or
popa
pop
sbb
sahf
xor
pop
push
or
nop
test
xchg
dec
shll
push
pop
addr16
and
adc
jmp
mov
dec
xor
push
aas
xor
jmp
andb
inc
xor
sub
xor
loope
inc
jl
fs
dec
xor
pop
cli
rcrb
and
jle
sbb
fldl
xor
mov
lret
push
outsb
mov
inc
inc
mov
add
mov
loopne
shrl
clc
sub
in
fwait
xchg
mov
mov
add
jg
in
cmpsl
ret
pop
jecxz
mov
sub
hlt
mov
pop
scas
filds
orl
call
cmpb
mov
sbb
ret
jne
push
addr16
sub
and
mov
mov
out
out
fdivrl
inc
add
pop
xor
pusha
push
das
sbbb
iret
mov
mov
sbb
roll
aam
pop
jns
pop
mov
out
jns
fwait
inc
adc
aaa
mov
add
ret
jge
scas
mov
rcrb
mov
push
push
dec
adc
cmpsl
nop
ds
fucomp
pop
adc
jb
add
nop
jl
and
and
push
pop
adc
loop
cmpb
dec
or
out
call
arpl
xchg
out
jns
shrb
loop
scas
pop
or
jl
xor
pop
adc
outsl
mov
and
imul
jno
test
and
out
or
fs
sub
add
incl
dec
bound
xchg
add
in
and
mov
sbb
aam
jbe
aam
in
iret
add
xchg
adc
das
sti
or
mov
jmp
inc
pusha
movsb
scas
das
fsubr
inc
dec
cs
es
rcll
pop
mov
xor
arpl
icebp
out
add
jmp
mov
dec
fmuls
and
jp
add
push
rolb
lret
std
xor
hlt
das
sbb
push
push
xchg
mov
mov
clc
outsb
push
cmp
int3
add
push
sub
gs
pop
pop
jno
daa
mov
in
mov
inc
push
shll
jno
subb
out
jnp
loope
js
add
pop
jl
loope
popa
dec
push
xchg
or
mov
sub
pop
nop
sbb
add
jmp
or
push
mov
mov
fcompl
add
xor
lahf
rorl
add
sarl
out
push
and
push
jmp
push
push
push
mov
shr
arpl
inc
out
or
jno
jae
aaa
xchg
inc
xor
das
xor
push
jmp
test
aaa
jmp
sub
ret
cmc
loope
pop
aas
sarl
lds
adc
mov
pop
popa
mov
add
sbbb
adc
out
cs
jle
xchg
pop
jo
fcom
mov
pop
push
outsb
xchg
stos
sub
add
jmp
mov
and
sub
xor
mov
sahf
shll
dec
rol
and
rorl
pop
dec
aas
mov
scas
pop
jl
dec
fucomp
pop
xchg
loop
inc
loopne
addr16
jb
lahf
sar
jecxz
cmp
int
int
lcall
in
das
add
out
clc
inc
pop
mov
aaa
call
adc
sub
in
cmc
xor
adc
add
ret
pop
stos
out
or
loop
or
es
nop
fildll
jns
pop
mov
xchg
jmp
push
add
jb
push
loopne
ljmp
jmp
in
fidivrl
das
add
call
fwait
inc
ret
mov
lahf
popa
das
push
inc
and
lods
dec
mov
xchg
dec
mov
sbb
fxch
add
push
fisubl
inc
cmp
xchg
movsl
xor
fucompp
outsb
jecxz
loope
pop
out
xlat
fdivs
ret
mov
testb
ds
jns
mov
jmp
test
enter
dec
in
ret
and
fdivrl
mov
or
cmp
loope
rcr
mov
jmp
pushf
jmp
outsl
data16
mov
mov
sbb
mov
ja
lds
add
sbb
neg
mov
add
add
pop
and
jge
outsb
push
imul
sbb
sub
xor
cli
mov
adc
ficompl
push
add
jle
pop
mov
dec
sahf
push
adc
enter
imul
inc
push
mov
std
xchg
inc
or
push
sbbl
pop
sbb
jmp
in
dec
xchg
inc
lds
call
fs
nop
movlps
adc
shl
xchg
sub
les
jle
pop
and
cltd
add
aam
mov
mov
pop
in
incl
aam
push
add
mov
pop
add
stc
mov
lret
add
push
push
jae
das
inc
pop
jmp
push
and
jno
loope
sub
mov
in
add
sbb
add
inc
rorb
cmc
into
je
sbb
inc
push
and
ljmp
jmp
sarl
push
xorl
add
mov
fcomps
add
lret
jl
or
push
push
and
pop
shr
xchg
nop
lods
mov
xchg
test
mov
xor
pop
xor
mov
inc
jno
popf
or
insb
mov
jp
mov
hlt
ret
jecxz
mov
sarb
cmc
fbstp
call
data16
sti
jae
jmp
or
loope
stos
dec
clc
repz
jmp
sub
xor
inc
dec
mov
add
push
lea
outsl
shr
and
mov
jnp
inc
and
stc
add
or
lds
xor
mov
orb
std
dec
mov
xor
je
out
or
add
adc
fsubs
dec
sub
jge
das
dec
cmpsl
or
and
add
push
pusha
xchg
jno
mov
cmpsl
fcompl
imul
mov
and
in
add
xor
add
and
mov
fs
pop
sub
pop
xor
inc
push
lret
xchg
dec
or
mov
xchg
adc
rolb
mov
jbe
mov
jns
jmp
mov
ret
and
dec
pop
push
push
or
imul
rorl
mov
cld
jl
mov
jmp
gs
enter
dec
orl
inc
pop
xchg
and
aad
pop
jle
sub
dec
add
adc
adc
repnz
push
and
rorl
push
dec
cmpsb
mov
sbb
pop
push
shlb
sub
aam
imul
or
inc
push
popf
stc
pusha
adc
jmpw
xor
sbb
popa
int
movsl
ret
in
aaa
xor
add
leave
cmp
xchg
sti
push
lds
push
mov
xor
and
pop
xor
imul
xor
add
shll
jmp
and
lods
cmpsb
into
xchg
mov
mov
dec
inc
xor
sbbb
xor
sub
stc
pop
pushf
sub
outsl
das
fsubs
add
faddl
test
movsb
add
test
xor
lock
lcall
jno
mov
xchg
hlt
sub
aam
loopne
inc
dec
mov
mov
xor
aas
flds
xchg
mov
pop
bound
out
inc
adc
push
sub
add
lret
aad
adc
iret
add
lahf
aaa
outsl
push
fwait
cmp
mov
mov
idivb
sbb
mov
mov
pop
scas
je
add
sbb
mov
std
add
mov
xchg
test
dec
xor
pop
shll
leave
outsl
mov
push
mov
sub
hlt
inc
int
mov
push
pop
inc
mov
mov
push
sub
mov
push
les
pop
cmp
data16
sarb
jmp
lock
inc
cli
fistps
loopne,pt
aas
xchg
jae
add
jmp
and
push
jle
rcr
jo
xchg
shlb
ljmp
jg
jmp
lret
pop
test
adc
jno
jno
jmp
in
out
or
jecxz
outsb
and
and
adc
push
xlat
mov
dec
and
jle
add
jl
je
movsb
mov
jp
ja
dec
loope
push
cli
add
xchg
jle
enter
repnz
pop
mov
mov
fisttpll
cmp
daa
sti
cmp
out
xor
push
shrb
mov
push
mov
dec
and
or
shl
ret
clc
and
repnz
dec
ljmp
je
and
push
xor
pop
add
adc
fsubrs
out
popa
sbb
jmp
aad
inc
and
mov
jae
imul
outsl
xor
in
bnd
or
xor
nop
pop
cmp
sub
push
mov
pop
test
pop
call
cs
pop
xchg
ret
pusha
mov
bound
jmp
fsts
jmp
xor
xchg
sub
adc
hlt
inc
call
mov
push
fs
mov
cmp
push
mov
stos
loop
aam
and
xor
inc
std
jb
inc
pop
jmp
notl
sub
xchg
add
jle
push
push
loop
shll
cmp
mov
xchg
pop
ret
and
adcb
in
loop
std
xchg
loopne
mov
lahf
or
mov
inc
push
pop
sub
mov
add
or
dec
cmc
add
jns
lcall
sbb
push
shlb
test
inc
das
iret
mov
mov
ss
inc
ret
add
shrb
jmp
scas
ret
outsl
shrb
add
dec
dec
bound
lds
out
movsl
add
and
notl
xchg
enter
xchg
xor
lret
rcrb
out
push
push
push
adc
fdiv
add
dec
hlt
jnp
ljmp
add
or
adc
add
add
lock
fnstenv
fldt
adc
inc
and
jmp
es
jns
mov
lock
add
push
pusha
lds
add
dec
dec
movsl
dec
aaa
jae
pushf
pop
scas
adc
or
sbb
pop
xor
shr
jmp
mov
push
dec
inc
push
adc
jmp
mov
mov
test
cli
subl
inc
xor
pusha
cmp
les
notb
xchg
adc
jns
jb
xor
inc
mov
add
xchg
inc
repnz
add
int3
pop
test
pop
jbe
mov
pop
stos
add
xor
xchg
icebp
jl
insb
xchg
insb
push
push
sbb
push
test
mov
fcomps
movsl
pusha
or
mov
insb
mov
and
push
lret
adc
sub
push
push
push
push
xor
add
scas
pop
int3
mov
loop
fistpll
push
sar
fidivs
pop
sub
jmp
in
add
daa
pop
mov
pushf
testb
lret
xor
mov
sub
pop
or
jle
jno
ffreep
jns
push
ja
mov
xchg
scas
fldenv
xor
dec
pop
dec
add
push
dec
stc
inc
cmpb
bound
sahf
dec
pop
testb
pop
cltd
lret
sub
pop
sub
movsl
repz
mov
pushf
add
call
jno
mov
jl
dec
rorb
push
mov
ret
outsl
lret
inc
jmp
cs
call
pop
adc
mov
sub
mov
addb
add
jp
jae
fdiv
adc
or
adc
or
mov
jmp
xchg
pop
clc
flds
bound
add
lea
cld
lret
inc
add
push
cmp
fcoml
rcll
jae
jecxz
push
rclb
xlat
add
pop
push
ljmp
sub
xchg
fildl
xchg
or
cmp
push
fucomip
mov
inc
mov
pop
lods
mov
dec
mov
mov
repnz
mov
loopne
and
loope
notb
dec
adc
fsubrl
hlt
fs
push
add
add
out
xor
add
pop
push
push
mov
mov
ljmp
xchg
hlt
daa
jle
pop
adc
ss
dec
mov
push
xor
inc
pop
mov
mov
push
pusha
jmp
xchg
das
and
push
mov
mov
sbb
stos
ret
pop
sbb
mov
cmc
stc
cmp
imull
push
push
mov
pop
movb
adc
mov
imul
addb
push
cmc
sub
es
push
ret
jge
xchg
and
mov
daa
jmp
sub
lahf
cmp
xor
movsl
les
lods
push
dec
addr16
ret
sub
push
out
sub
cli
cmp
cltd
loope
push
fs
or
mov
pop
loop
inc
cli
decl
out
dec
pusha
mov
sbbl
jnp
add
add
ljmp
stos
mov
repz
or
sub
or
pop
cld
inc
or
sbb
pop
ss
mov
push
data16
addl
jmp
mov
inc
inc
adc
das
push
add
adc
xor
mov
and
jno
cs
pop
jnp
pop
dec
sub
ds
mov
das
inc
testb
fwait
lods
push
mov
stc
cmp
add
dec
data16
jl
dec
div
sbb
lods
cmp
mov
mov
popl
sub
add
sarl
in
adc
sub
dec
sarl
out
pop
aas
cmpsb
ficoms
adc
lcall
lret
pop
push
cld
cmp
into
ds
push
jmp
cli
add
mov
add
stc
pop
loopne
pop
pop
nop
mov
inc
sub
or
pop
push
sub
std
movl
xor
addb
xchg
movl
or
sahf
lds
lock
stc
mov
inc
pusha
sarl
jne
or
out
icebp
mov
jb
dec
adc
imul
lods
push
mov
mov
adcb
add
jl
das
push
push
push
push
xor
dec
mov
sub
lods
cmpl
add
stos
mov
push
gs
divb
ja
and
xchg
and
test
add
sub
xor
lahf
jno
jmp
fisubrs
pop
xor
imul
and
mov
testl
in
mov
jl
inc
clc
add
jmp
jns
and
xchg
or
push
and
or
jne
mov
pop
bound
cltd
or
mov
sub
xchg
stos
or
inc
pop
shll
mov
andl
mov
pusha
sub
repnz
test
pop
in
ficompl
sbb
and
jmp
mov
jns
or
dec
movsb
add
add
loop
and
sub
mov
stos
add
mov
pop
mov
inc
push
cli
rcll
cs
pop
ja
xor
stos
repz
and
das
test
dec
add
or
sub
sub
push
xor
and
les
popf
or
sbb
and
push
pop
xchg
insl
or
adc
xor
loopne
jmp
shl
xor
mov
mov
inc
adc
dec
das
popf
ret
pop
test
pop
push
add
add
pop
insb
jo
sub
add
fsubs
adc
sub
pop
mov
sahf
leave
out
cs
sub
fmull
cld
test
or
andb
inc
jmp
adc
mov
dec
imul
or
pop
inc
subb
bnd
sub
movsl
enter
xor
insl
or
aam
les
leave
repz
or
or
scas
popa
push
shrb
outsb
pop
cwtl
xchg
les
mov
push
pushf
mov
cmpsl
test
insl
push
pop
imul
sbb
xor
jmp
jbe
dec
imul
leave
shlb
cmp
jns
dec
jmp
lods
jge
inc
xor
add
fildll
insl
negb
xchg
dec
add
sbb
es
lods
mov
mov
test
lret
add
and
rol
mov
push
and
pop
adc
xchg
inc
movsl
jmp
insb
lods
jmp
dec
jmp
mov
pop
xchg
xchg
sub
jmp
notl
xchg
sbb
xchg
lock
adcb
in
lds
xchg
sub
fldl
into
mov
mov
mov
sub
leave
orb
fwait
xchg
or
mov
fldz
sbb
jb
add
or
jmp
or
fcoml
or
orb
shr
loopne
pop
jno,pt
in
in
int
push
popf
pop
jno
mov
inc
arpl
cld
and
dec
ficompl
sbb
or
adc
push
addr16
and
dec
or
or
add
inc
out
sub
es
xor
pop
push
sub
push
push
dec
je
jnp
or
jecxz
mov
pop
repnz
daa
add
data16
inc
pop
add
xor
or
mov
xchg
pop
jg
imul
add
dec
clc
xor
xor
jecxz
les
das
push
or
daa
ret
ficoml
add
dec
ja
sub
add
jnp
lock
sub
add
roll
lods
shlb
or
add
movl
mov
outsb
push
adc
sti
add
rolb
js
add
ja
adc
jb
daa
jl
sti
adc
push
imul
push
stos
mov
add
jmp
pop
adc
decb
in
pop
and
pop
pop
cmovp
push
or
inc
cmp
loop
cmc
addr16
imul
std
jmp
push
mov
mov
repnz
push
clc
int3
addr16
shl
jns
mov
leave
add
push
leave
lea
imul
mov
cmp
sbb
pop
xchg
and
mov
cwtl
push
loope
pop
adc
adc
inc
xchg
jne
add
dec
int3
add
fs
jge
xor
or
lret
das
pop
sbb
mov
and
dec
cmp
sbb
neg
push
stc
int3
outsl
test
mov
jno
fs
dec
mov
push
push
push
iret
je
loop
xchg
in
sub
cltd
test
lahf
pop
mov
pop
andl
imul
jmp
out
dec
push
out
pop
pusha
gs
bound
adc
cld
stos
xchg
or
and
cmc
xchg
pop
push
xchg
sbb
repz
pop
xor
sbb
repnz
sbb
or
pop
clc
daa
into
pop
and
test
loopne
test
mov
pop
sbb
xchg
lods
shrb
mov
leave
and
imul
outsb
sbbl
mov
push
jmp
dec
jmp
jl
add
inc
mov
sub
sbbl
mov
xchg
iret
sub
pop
push
push
pop
mov
pop
xor
fcoms
shrb
icebp
not
lods
jbe
lea
add
adc
mov
push
pusha
incb
push
push
pop
cmp
and
pop
xor
dec
xchg
add
fldl
outsl
shrb
and
or
mov
push
popa
testb
adc
or
adc
jno
mov
push
mov
mov
add
mov
pusha
inc
sbb
adc
push
sub
repnz
dec
mov
mov
adc
jne
mov
pop
idivl
and
cwtl
mov
gs
or
dec
loope
das
fadds
jb
subb
pop
int
test
jbe
aas
adc
or
pop
clc
dec
lahf
gs
test
ja
cs
and
notb
movsb
rcll
jl
aaa
into
mov
jmp
jns
and
dec
add
pusha
mov
and
xchg
popa
roll
mov
test
test
mov
push
push
mov
pop
lcall
dec
rolb
mov
fs
push
clc
mov
stos
adc
popl
xor
mov
xor
adc
cltd
enter
popl
shl
ja
push
popf
push
pop
xchg
imull
add
pop
mov
pop
mov
dec
mov
jnp
testl
add
aaa
dec
add
ljmp
fcoms
jmp
cmp
add
mov
jnp
add
push
xchg
pop
mov
sbb
cli
add
mov
lahf
fwait
inc
shll
cmp
test
add
shrb
or
dec
xor
mov
sahf
fstpt
repnz
inc
in
lock
sbb
cmpsb
stos
shrb
or
inc
mov
add
es
add
and
in
mov
les
pop
jbe
test
loop
bound
lcall
inc
mov
insb
sti
add
pop
fdivrl
mov
aad
sbbb
js
cltd
jb
cmp
mov
ret
sub
add
int
imul
outsb
xchg
mov
push
xor
outsb
lock
roll
xchg
pop
push
in
or
and
push
or
inc
roll
cmp
pop
jmp
mov
cs
push
in
xchg
bound
sahf
cmpsl
and
mov
or
jnp
add
daa
aaa
cmpsb
sbb
shrb
mov
add
xchg
out
in
sub
pop
push
push
push
insb
add
or
fmuls
xor
cmp
push
sti
addr16
clc
lea
sub
jmp
xchg
pop
into
lea
jo
add
sti
clc
sbb
ja
sbb
mov
aam
adcb
push
lds
daa
add
add
mov
xor
xchg
decb
das
rclb
dec
js
xor
jle
jmp
adc
push
pop
addr16
cli
lcall
flds
lods
push
scas
iret
cltd
mov
mov
dec
inc
add
pop
push
add
cmpsl
dec
mov
jae
outsl
call
iret
mov
add
je
aaa
pop
or
arpl
pop
xchg
or
ret
mov
sub
and
hlt
jle
mov
pop
sbb
xor
mov
lock
test
pushf
addb
imul
pushw
mov
stc
add
push
pop
shl
out
add
dec
int3
test
add
jmp
or
sub
inc
dec
pop
mov
xchg
mov
pusha
cmpsb
in
jbe
arpl
or
jno
add
sti
push
mov
inc
xor
xor
fs
call
fcompl
pushf
int
sbb
mov
nop
in
or
loopne
hlt
pop
push
mov
sub
mov
cli
popf
xor
cltd
xchg
les
adc
cmp
call
mov
fdivr
mov
push
mov
sbb
cmpsl
mov
aam
lods
pushf
cltd
dec
sbb
adc
sbb
sub
rolb
jmp
dec
pop
rep
xlat
sub
jno
test
push
xor
sbb
mov
mov
mov
mov
inc
imulb
pusha
mov
and
or
cmp
mov
or
dec
jmp
mov
mov
sbb
mov
push
xor
push
loope
test
jmp
ja
je
fildl
out
push
lods
in
mov
outsb
out
test
push
inc
sub
jle
sbb
icebp
cmc
xchg
loope
jle
jns
dec
ret
mov
jmp
mov
xor
jl
sarb
mov
xor
js
int
sbb
ja
mov
aam
mov
or
clc
addr16
ja
pop
push
inc
and
pusha
mov
add
jae
jmp
test
stc
inc
ret
sub
dec
jecxz
mov
pop
mov
push
mov
jge
jle
mov
jp
rep
out
mov
inc
push
les
roll
lds
es
sub
add
pop
inc
lret
andb
push
and
pop
add
stc
add
popa
sarb
pop
shll
bound
in
daa
jmp
adc
aas
stos
imul
dec
movsl
lock
andb
push
in
mov
fnstenv
add
ret
dec
ret
inc
pop
sbb
mov
and
push
daa
push
pop
pop
and
adc
push
dec
or
or
add
and
or
mov
push
jg
pop
or
sbb
push
stos
sub
jl
mov
int3
xchg
mov
jns
icebp
jae
out
and
dec
push
stos
pop
nop
adc
dec
xor
popl
ss
dec
mov
sub
xor
lret
sub
jne
sub
and
or
idiv
shl
mov
mov
cmp
stos
popa
pusha
fistps
pop
push
loopne
pop
and
orb
imull
push
push
es
fucomip
dec
lret
jno
fsubl
push
inc
lcall
arpl
pop
xor
mov
in
sarl
sahf
or
dec
cmc
sahf
adc
or
daa
cmp
sbbb
push
mov
mov
sbb
pop
push
test
cld
adc
xchg
xor
pop
loopne
adc
pop
and
push
push
mov
not
test
sub
cwtl
inc
lahf
test
fs
sbb
andb
out
push
andl
repz
pop
stos
inc
rcr
lcall
pop
xor
sti
inc
imul
insl
dec
jl
insb
rclb
mov
fs
xor
jmp
inc
stos
orl
movl
or
test
jo
xchg
inc
sbb
push
cwtl
lret
pop
pushf
daa
cs
jo
or
and
shr
shrl
imul
add
sti
addr16
push
inc
mov
aad
scas
pop
outsl
cmpb
push
push
cmpb
push
fs
sbb
inc
mov
and
mov
test
mov
sub
mov
sub
clc
test
push
and
pop
xor
mov
push
jns
lock
mov
push
jns
push
outsl
fsubr
dec
sub
pusha
dec
jmp
pop
fadds
pop
jge
mov
enterw
or
xlat
insb
mov
mov
push
dec
xor
adc
push
aaa
dec
arpl
sub
std
adc
add
or
jnp
cli
fsubs
jmp
and
cltd
cmp
pop
push
loope
insb
add
push
dec
xor
pop
mov
jnp
push
and
dec
mov
push
das
icebp
addr16
popf
mov
out
or
add
cld
lcall
in
es
inc
nop
cs
jnp
jno
out
jecxz
push
std
jmp
addr16
arpl
add
xchg
scas
adc
add
push
mov
rcl
jo
push
push
sub
in
mov
dec
ret
dec
dec
mov
sarl
sbb
dec
mov
push
jle
mov
imul
inc
cmp
push
adc
mov
imul
xchg
push
sub
and
jle
add
imul
jb
lods
push
xchg
mov
add
repnz
xchg
mov
adc
int
sarb
mov
stos
inc
jns
inc
inc
dec
dec
mov
in
fdivs
imul
and
push
push
int3
sbb
xlat
dec
xchg
mov
adc
add
mov
test
cld
rolb
cmp
jmp
or
sub
push
push
jmp
sbb
mov
jo
adc
push
fs
add
and
leave
and
ss
jle
mov
adc
push
jae
pop
loope
push
adc
inc
dec
push
idiv
es
add
adcb
xchg
dec
dec
lcall
xor
and
jp
mov
sub
or
mov
in
test
sbb
pop
ss
mov
adc
imul
xchg
inc
dec
mov
mov
gs
inc
test
dec
enter
stc
outsl
popa
push
jmp
xor
pop
fdivr
sub
push
xchg
dec
lea
sub
mov
sbb
inc
les
loope
or
insl
daa
pusha
add
adc
sti
mov
sub
in
dec
js
dec
call
stos
pop
adc
shlb
mov
in
andl
imul
dec
fucomip
add
sub
jae
lock
inc
push
adc
dec
and
popf
push
lahf
bound
mov
shlb
push
scas
ja
stos
jg
add
in
popa
mov
ja
xchg
jge
cwtl
push
mov
cwtl
sbb
outsb
test
ja
mov
adc
add
and
mov
adc
lds
pop
sub
sub
mov
test
movb
iret
enter
jmp
stc
fldl
leave
icebp
inc
or
sbb
add
xor
dec
shl
jno
inc
fdivrl
cld
cli
addl
aas
jecxz
dec
sarb
cs
cs
push
rolb
inc
xor
cmp
jecxz
push
cmp
mov
leave
mov
jmp
bound
jae
pop
subl
pop
dec
popa
jnp
cwtl
inc
imul
push
push
and
xor
adc
mov
ret
into
mov
pop
repz
jl
push
gs
xlat
js
jmp
lock
mov
les
shr
jno
xor
mov
mov
rclb
lcall
cli
sub
out
fcmovnu
xchg
cmpsb
xor
lret
pop
mov
or
je
cmc
and
jb
loopne
pop
jl
xor
int
xor
adc
sbb
idivb
sub
in
lret
pusha
jmp
ficomps
fwait
dec
jmp
shrl
sub
cmpsl
mov
or
pop
inc
mov
hlt
adcb
push
rorl
cmp
xlat
in
jle
mov
or
add
fxch
sub
or
shlb
cmpsb
gs
xor
divb
cmpl
and
sbb
or
jmp
sbb
adc
sahf
push
xchg
rcrb
scas
sub
adc
stc
mov
mov
psubsw
js
dec
pop
cmpsb
pop
dec
mov
adc
add
mov
scas
adc
add
mov
sbb
pop
and
xchg
sub
mov
jmp
fnsave
in
stos
gs
loopne
shll
adc
cli
sub
rcrb
mov
and
jbe
add
dec
shll
add
add
mov
int3
les
cld
aaa
dec
adc
xchg
pushf
int3
dec
in
inc
add
and
ret
and
lahf
std
sbb
dec
pop
rorb
insl
stc
js
daa
shl
xchg
dec
add
sub
ja
dec
mov
sti
sub
mov
fdivrs
pusha
in
jb
sub
mov
pop
xor
mov
imul
push
and
in
and
push
jp
sub
and
jnp
sbb
into
xor
add
das
push
lahf
push
out
pop
xlat
jp
icebp
cltd
lock
add
xor
jmp
fisubrl
test
shl
jb
iret
mov
ljmp
and
mov
mul
fsubl
sti
aaa
inc
fs
das
mov
jbe
sub
sbb
pop
shrl
int
ds
sbbb
int3
sub
movb
jmp
inc
int3
add
sti
test
cs
es
or
inc
aam
lock
push
add
fldlg2
jmp
fidivrs
jp
and
in
addb
fisubrl
adc
sarb
clc
ds
js
dec
sub
sbb
jns
idivb
sbbb
dec
mov
add
rcrb
cmp
scas
fsubl
hlt
fldl
sarl
jle
pop
jmp
mov
adc
js
cmp
fcomip
icebp
jle
mov
sub
fwait
mov
sub
data16
rcll
cmp
inc
pop
jns
scas
push
xor
lock
push
push
test
or
mov
push
sub
jne
popf
cmp
jae
repnz
and
adc
sub
mov
mov
or
inc
add
xchg
decl
xchg
jmp
mov
mov
shlb
or
mov
enter
push
xchg
push
xor
push
mov
sbbl
sub
add
inc
pop
xor
mov
mov
mov
pop
dec
notl
push
jne
inc
lock
xchg
cmp
fcomps
jb
sub
cmp
and
lret
jecxz
insb
add
add
out
cmp
and
ljmp
pop
xchg
dec
arpl
pop
sub
sbbl
shr
nop
adc
lods
push
das
das
loop
shl
sub
pushf
pop
leave
test
sub
lock
push
lret
out
leave
rcrl
mov
imul
and
test
in
fs
xchg
or
mov
xchg
shl
ret
test
adc
lret
push
inc
mov
sub
pop
push
inc
mov
pop
sar
gs
xchg
xchg
dec
cs
push
rcl
or
scas
aam
rcl
outsb
push
mov
lods
sahf
jns
and
repz
in
lret
sub
pop
adc
add
subb
mov
enter
lret
xchg
je
int3
add
mov
int3
pushf
imul
out
lahf
push
loopne
subb
inc
adc
sbb
ret
mov
testl
subb
xchg
mov
push
testl
mov
sbb
xchg
xor
les
mov
mov
lds
mov
xlat
cld
sub
cwtl
in
or
pop
add
loopne
jecxz
fst
jg
aad
inc
bt
mov
or
pop
test
adc
repz
inc
pop
sbb
dec
sbb
add
jmp
sbb
js
imul
add
test
aas
jnp
out
xor
dec
imul
mov
aam
or
pop
add
clc
push
pop
add
sub
sti
mov
mov
and
sub
xor
cmp
pop
inc
xor
dec
sti
sahf
in
inc
mov
dec
push
mov
adc
xchg
pop
arpl
mov
add
cwtl
pushf
ljmp
cmp
inc
stos
xchg
out
imul
cmp
push
ret
sbb
jmp
adc
fsubrs
scas
inc
pop
jmp
xchg
sub
adc
pop
stos
adc
mov
cwtl
pop
push
push
cs
jns
add
pop
xchg
lret
or
sbb
and
in
cmp
aad
inc
dec
mov
imul
jle
popa
push
in
push
sub
push
lock
inc
xchg
jp
or
cmpsb
dec
pop
lcall
push
xchg
add
pop
out
push
jne
subb
cmp
or
scas
sarb
or
arpl
adc
addr16
lock
scas
jp
xchg
movsl
inc
jle
add
hlt
sti
mov
dec
and
dec
mov
out
andl
push
daa
jle
push
enter
xor
in
mov
mov
xor
lods
and
and
and
jbe
adc
sbb
ja
or
jmp
bound
push
cli
pusha
xor
mov
adc
nop
push
inc
inc
ds
xor
popf
mov
aaa
fimull
orb
sbb
or
push
inc
scas
in
fists
add
ret
xor
enter
sub
push
insb
bound
and
push
cld
sub
cwtl
mov
jne
xor
repz
bnd
repz
aam
jo
ds
cmc
pop
add
cmp
in
inc
push
sbb
add
ljmp
call
pop
dec
jmp
mov
xor
mov
and
lahf
inc
imul
sbb
xchg
mov
pop
jne
inc
jno
pop
pop
cmp
in
jns
inc
adc
in
mov
jecxz
pop
cs
push
sub
cmp
pop
cmp
or
sbbb
aas
push
jp
jmp
shrb
sub
incb
pop
adc
dec
add
outsl
leave
ljmp
mov
dec
adc
push
inc
jl
insb
out
xor
push
or
adc
cmpsb
aas
mov
dec
push
or
pop
cmpsl
sub
pop
add
xchg
leave
sbb
loop
add
cmp
push
cmpsb
and
mov
dec
mov
adc
cmp
int3
loop
add
mov
sbb
cmp
add
mov
inc
cmp
rcll
cmp
push
test
popa
jmp
subb
inc
sub
push
xchg
sub
push
mov
out
push
cmp
xor
stos
stos
enter
stc
test
sbb
mov
and
dec
jge
rorb
mov
out
dec
dec
imul
sbb
lea
lods
repnz
sub
or
pop
add
test
cwtl
movsb
pop
js
repz
jmp
test
sub
add
push
or
ret
jo
mov
jo
sti
sbb
jmp
add
pop
lock
int3
shrb
mov
xchg
pop
push
jp
xor
pop
test
and
pop
rcrl
or
jo
leave
and
call
xchg
pop
or
mov
shll
enter
dec
outsl
inc
daa
js
lods
add
xchg
ljmp
in
in
or
sbb
adc
sbb
mov
sti
add
xor
negl
xlat
push
mov
push
mov
adcb
or
xor
es
mov
icebp
mov
iret
xchg
fiaddl
sub
mov
adc
xor
lahf
pop
int3
stos
adcl
in
fisttps
shlb
pop
shlb
ja
out
xchg
mov
lret
test
movsb
mov
jmp
jno
pop
rorb
pop
cmc
rolb
dec
cltd
cmp
imul
icebp
icebp
adc
int3
sub
dec
int
push
daa
test
repz
sub
and
mov
icebp
add
sub
add
sub
lcall
cld
ja
inc
setp
dec
sbb
adc
fnsaves
mov
cwtl
push
push
jp
add
jmp
inc
shr
xchg
sarb
or
not
addb
out
enter
clc
and
add
dec
jle
and
out
and
xor
hlt
dec
mov
fisubl
shl
xchg
sub
inc
and
pop
punpcklwd
add
outsl
sti
sti
jb
sub
mov
ja
add
test
jnp
mov
lock
es
fs
in
mov
int3
push
iret
bound
pop
shlb
scas
sahf
xchg
add
sub
push
add
enter
imul
lods
and
mov
dec
adc
pop
mov
sbbb
mov
xchg
push
outsl
mov
push
test
test
mov
dec
mov
fs
imul
lea
lea
int
addb
sub
xchg
sub
movsb
lea
push
push
xchg
and
adc
mov
es
and
movsb
xchg
imul
cli
pop
hlt
pop
jg
sbb
push
pop
stos
sub
mov
shlb
push
addl
push
xor
fildll
movsb
std
cltd
cld
push
mov
ret
inc
jmp
add
xchg
pusha
mov
and
loopne
xchg
cmpsb
rol
mov
lds
cltd
rol
jb
pop
mov
mov
or
add
push
mov
add
fiaddl
sub
add
jns
adc
in
or
fildl
add
lds
inc
adc
nop
adc
sub
add
adcb
xor
xor
inc
rcrb
enter
cld
adc
aam
adc
test
lock
push
cmpsb
jae
xor
adc
cmpsb
imul
sbb
and
mov
or
aas
mov
testb
jle
shr
loopne
pop
pop
cmp
popa
mov
in
and
add
or
add
xchg
push
jle
dec
pop
cmp
xchg
dec
xor
cld
adc
fld1
or
push
or
das
push
jl
or
add
dec
jns
or
fsubrs
or
jp
jns
or
mov
push
xor
and
or
sub
notb
out
imul
inc
ds
push
loope
sub
and
scas
and
or
dec
pushf
dec
push
xchg
cmp
pop
or
out
and
add
cltd
add
insb
call
push
testl
add
mov
jge
sbb
push
fmuls
adc
pop
xor
mov
jmp
push
xchg
pusha
nop
xchg
repnz
jno
jbe
or
mov
and
mov
xchg
sbb
and
add
jns
arpl
push
xor
int
xchg
roll
pop
pop
roll
push
sarb
sbb
insl
inc
push
jmp
fdivl
sub
ljmp
adc
mov
sti
repz
mov
pop
stc
sub
out
addr16
xlat
sub
add
mov
mov
divb
int3
repz
jno
fimull
test
dec
gs
popf
adc
rclb
stos
in
test
ficompl
pop
divl
insb
popa
rorl
pop
filds
pop
cs
jmp
jmp
shrl
sub
ret
inc
xlat
push
cmp
loop
rclb
and
pop
dec
xor
fsubrs
jae
cli
and
xor
pop
or
adc
outsl
loope
xor
add
dec
xchg
xor
xlat
sub
test
xchg
sbb
xchg
pop
test
mov
sbb
out
adc
aas
mov
sti
and
aaa
sub
push
sub
cmp
add
adc
mov
cmc
or
mov
int
out
loope
jle
jne
pop
jns
pop
push
test
sub
subb
pop
cs
add
push
inc
add
fisubs
nop
into
xor
pop
sbb
add
scas
push
sub
jnp
cwtl
loop
cs
inc
mov
or
sub
adcb
adc
icebp
inc
jae
leave
fsubrp
push
jge
shrb
dec
cltd
push
fs
mov
inc
clc
pop
pop
cwtl
xlat
jmp
out
push
cwtl
call
adc
sbb
sbb
add
cmp
dec
adc
cwtl
test
inc
sbb
leave
xlat
xchg
pop
or
mov
xor
test
push
addb
sbb
loop
shr
add
xchg
jle
and
mov
xor
mov
movsb
fucomp
add
push
or
push
sub
loopne
mov
add
xorl
popf
or
sub
sbb
push
roll
out
mov
cld
mov
mov
enter
icebp
loop
shlb
fidivl
xchg
popa
mov
dec
mov
sub
push
mov
and
out
test
mov
mov
or
or
xor
jmp
push
sbbb
push
mov
data16
or
cmp
cmc
adcb
fsts
das
lock
xor
aaa
loopne
sub
idivl
dec
icebp
xchg
xor
inc
add
lea
aaa
das
fmuls
add
push
sub
jne
aas
js
and
popf
cmp
add
mov
stc
or
cli
jp
and
mov
leave
test
xor
in
ja
mov
loopne
jl
dec
aas
mov
in
daa
xor
xorb
mov
stos
jge
xchg
out
push
test
lods
and
js
and
orb
sub
jg
xor
cmp
test
add
shrb
add
call
cwtl
neg
jbe
shl
or
cwtl
in
pop
add
push
dec
push
je
je
jg
push
push
fadds
gs
clc
mov
out
pop
popf
push
or
lret
cmc
push
jecxz
xor
or
outsl
xchg
iret
dec
or
jl
and
mov
xchg
call
add
test
rcrl
adc
xchg
not
notb
repnz
lea
push
adc
outsb
sbb
jge
aam
jne
test
cmp
lret
imul
and
std
push
cwtl
push
pop
inc
jge
mov
add
xor
push
jno
movsb
clc
dec
and
shl
cmp
jns
jecxz
sbb
pop
ljmp
mov
xorb
or
int3
adcl
mov
pop
rclb
sahf
mov
pop
je
imul
inc
dec
mov
test
push
fcoml
shll
cltd
repz
stos
sub
jo
and
pusha
not
xchg
cmp
into
mov
push
sub
xchg
dec
inc
mov
mov
pop
cmp
movlhps
lahf
in
fs
lods
stos
add
decl
movb
lods
sub
decl
inc
xchg
add
add
aad
sub
fildl
xor
jge
cmc
pop
lea
push
mov
js
cmpsb
push
cmp
daa
mov
jno
dec
lea
add
ljmp
jbe
xchg
mov
shl
outsb
adc
std
jecxz
pop
jmp
push
add
mov
dec
add
cmp
outsb
fs
lods
mov
xchg
mov
cli
push
jmp
test
cmp
movsl
clc
bound
mov
faddl
mov
sbbl
cmc
je
iret
ja
sbb
inc
sbb
andb
std
pop
jne
jne
xor
cmp
ret
aaa
pop
ficomps
or
and
inc
xor
sub
gs
add
xor
pop
out
cld
clc
jbe
adc
out
jge
xchg
imul
push
sub
push
iret
and
pop
out
ja
test
cmp
mov
xchg
aaa
sbb
fst
dec
repz
pop
stos
push
pop
loope
cmp
mov
jg
or
pop
sti
adc
or
xchg
or
icebp
lret
inc
mov
pcmpeqb
mov
pusha
loopne
or
jp
xor
add
push
bound
adc
adc
push
hlt
cld
jp
mov
dec
test
mov
sub
mov
sahf
xor
xchg
or
out
sub
mov
and
add
sbb
inc
in
bswap
dec
pop
inc
jo
aad
add
mov
or
jmp
loope
jecxz
pop
movsb
xor
test
ret
das
xor
js
dec
pop
sub
adc
mov
lock
push
push
mov
mov
add
fadds
jno
dec
add
pop
cmpsb
mov
out
xor
jecxz
jmp
xor
pop
push
dec
inc
stos
jne
ret
jmp
lods
dec
adc
dec
and
addr16
inc
xchg
in
wbinvd
jns
ret
xchg
sub
mov
movntps
jmp
or
or
xchg
and
lea
jb
imul
add
fcoml
pop
lret
jle
loop
test
xor
leave
adc
out
mov
outsl
sub
clc
in
adc
sub
mov
or
cwtl
addb
and
add
add
adc
adc
jo
dec
dec
xor
lock
lods
imull
xorl
inc
or
adc
add
add
push
adc
xchg
jns
push
out
add
push
and
lock
adc
cmc
andb
cmp
push
jl
push
push
in
daa
sbb
insl
test
mov
or
pusha
pusha
cmp
call
sub
push
rclb
pop
xchg
jne
push
rcr
pop
push
sub
adc
subb
shll
xor
push
jg
sub
add
xchg
sub
pop
jg
pop
add
jmp
sub
jmp
xchg
popa
xor
jne
cmp
pop
adc
je
add
jmp
xchg
mov
pop
xor
xchg
xchg
dec
mov
in
mov
mov
and
out
push
add
jge
jmp
bound
sarb
daa
mov
aas
adc
test
movsl
in
pop
test
and
mov
clc
hlt
sahf
jle
dec
cmp
add
jge
xchg
push
push
xchg
sub
add
cmpb
cmpsl
pop
lods
dec
subl
lret
mov
scas
dec
pop
js
les
clc
jecxz
lret
inc
cmpsb
fmull
or
jmp
fisttpl
pusha
push
rclb
pop
int
jg
jmp
sub
dec
adc
xor
inc
or
icebp
adc
add
lss
test
adc
dec
xor
xor
fstps
call
aad
leave
fdivrs
rcl
inc
add
push
mov
dec
fucomip
or
xor
xchg
push
xchg
pop
adc
push
lret
and
sub
jmp
jne
ja
sbb
lahf
mov
pop
js
clc
sub
sbb
mov
shl
add
pop
pop
inc
add
or
cmpsl
clc
pop
repnz
sub
push
scas
sub
pop
sub
push
lret
pop
les
dec
dec
rcll
and
or
pop
les
push
sarb
push
mov
xor
add
add
push
xor
pop
shr
xor
xchg
pop
mov
mov
push
std
and
ficompl
jmp
ljmp
mov
cmp
push
loop
mov
xor
xor
lods
dec
cwtl
inc
fucomp
xor
pop
sub
movsl
mov
sarl
aaa
sarl
ret
movsl
nop
add
imul
inc
lods
mov
and
aam
add
cmp
sub
pop
sbb
dec
sub
hlt
mov
and
pop
and
lds
ret
fwait
in
or
hlt
shll
dec
and
pop
add
mov
filds
dec
push
push
add
cmc
mov
rdtsc
jmp
dec
flds
pop
daa
lods
lods
hlt
xchg
lea
les
rcrb
mov
jno
outsl
movsb
scas
push
push
xchg
in
adc
xor
add
add
test
sub
adc
or
cmp
insl
sub
adc
mov
lds
inc
push
das
es
push
inc
ljmp
sub
in
stc
add
xor
je
xor
es
mov
add
push
aam
or
pop
or
jmp
pop
mov
xchg
jbe
adc
cmp
and
push
sub
arpl
fs
icebp
mov
xor
xlat
or
pop
sti
dec
out
out
push
and
pop
stos
fstpl
mov
mov
inc
pop
pusha
add
and
js
push
xchg
clc
sbb
jle
cmp
mov
cli
lret
push
stc
test
mov
inc
mov
int
loopne
jae
push
jbe
mov
fsubrs
xchg
push
adc
mov
sub
sub
sub
adcb
inc
and
clc
rcrl
shlb
bound
inc
xchg
push
push
outsl
pop
xlat
cmp
mov
les
and
dec
add
mov
mov
out
insb
addr16
jg
add
jno
clc
in
or
decb
xchg
nop
push
in
jbe
rcrb
cmp
jmp
mov
dec
mov
jnp
or
int
jae
sbb
adc
add
dec
das
sahf
negl
jo
push
imul
dec
mov
inc
daa
adc
fimuls
rorl
push
fldt
into
add
mov
lret
rcrl
bound
sbb
fisttps
xor
or
jecxz
adc
xchg
inc
fs
dec
jp
pop
movsb
out
and
outsl
popf
fsubs
mov
in
icebp
test
jge
push
mov
inc
add
rcrl
jle
stos
add
and
and
je
mov
add
add
jg
je
add
add
or
jmp
and
add
add
jl
out
jae
lret
negb
je
movsl
adc
xchg
add
xor
add
out
pop
sub
inc
cmp
int
popa
cmp
add
movsb
pusha
pop
cmp
dec
jbe
xchg
shl
add
xchg
mov
mov
pushf
jo
inc
sbb
dec
fists
sbb
xor
xchg
push
shlb
mov
test
sub
popa
push
or
add
neg
xchg
shlb
xchg
out
sbb
pop
and
xor
add
adc
ret
filds
adcb
xor
sbb
and
inc
push
lret
aam
sub
pop
jmp
andl
mov
lods
pop
inc
mov
xchg
xchg
mov
jnp
int3
inc
jb
fildl
mov
mov
gs
jmp
push
push
mov
xchg
stc
out
or
ja
xor
pop
push
mov
push
mov
out
push
and
inc
call
pop
push
push
inc
xchg
lock
and
sub
mov
inc
roll
int
enter
dec
fcmovne
adc
aas
xchg
add
add
pop
stos
enter
data16
push
dec
test
dec
fsts
jp
or
adc
pop
xorb
lods
mov
mov
mov
add
lea
orb
pop
dec
xchg
sarb
lds
and
sub
ljmp
jno
das
pop
pop
push
push
push
push
mov
mov
push
lahf
jnp
loop
jp
pop
jmp
cmpl
pop
stc
lods
pop
shlb
sahf
pushf
pop
push
mov
int3
add
mov
icebp
adc
popa
dec
push
iret
add
jle
data16
data16
jecxz
sbb
sbb
mov
rorb
jl
xorl
orb
sahf
mov
mov
mov
orb
mov
ss
xchg
mov
sti
cmp
cmp
addr16
adc
pop
addb
sbb
push
enter
jp
jno
xor
popf
mov
outsl
jnp
or
pop
cld
pop
inc
push
xchg
mov
adc
lret
rclb
loope
orl
xor
and
or
daa
pop
jae
push
and
cmp
int3
mov
adc
or
adc
inc
or
lret
mov
data16
ljmp
add
roll
bound
sub
in
cmc
imul
enter
dec
pop
fnstcw
hlt
mov
fsubrl
enter
xor
dec
mov
mov
mov
or
and
adcl
adc
or
pop
push
test
aam
mov
jmp
mov
mov
lret
dec
pop
clc
cs
or
jo
cmp
mov
dec
add
es
nop
push
or
addr16
push
testb
xchg
xchg
js
mov
or
jge
dec
xchg
sub
orl
imul
insl
aaa
mov
cmp
js
nop
clc
jno
adc
mov
test
mov
mov
mov
dec
rorl
lahf
sbb
je
adc
int3
stos
into
dec
pop
add
sub
cwtl
pop
jmp
pop
or
les
jbe
test
ja
xchg
mov
repz
add
hlt
pop
mov
jb
sti
xlat
sub
dec
sbb
xor
mov
pusha
or
pop
fbstp
push
xor
les
or
jae
cmp
and
add
loope
push
movl
xchg
out
adc
add
push
jle
and
and
and
xor
mul
cmp
mov
out
in
es
push
enter
cmp
jmp
and
imul
xor
sub
es
out
inc
jnp
mov
dec
push
mov
sub
mulb
nop
xor
push
mov
jns
push
imul
or
imulb
in
xor
jecxz
adc
hlt
dec
dec
sbb
mov
les
add
sub
clc
pop
lcall
std
mov
and
and
cmp
jmp
popa
nop
xchg
adc
and
mov
dec
add
shr
inc
and
xor
sahf
add
adc
sub
ljmp
hlt
incb
and
movsl
pop
inc
and
sub
scas
imul
fadds
xchg
jne
adc
outsb
idivb
add
jo
mov
mov
push
or
pop
pop
pop
mov
mov
dec
mov
add
into
or
mov
adc
pop
pop
push
sub
data16
add
das
mov
rorl
mov
cwtl
cmp
push
mov
add
sbb
add
dec
sbb
xor
lret
pop
jmp
push
push
mov
push
sbbb
notb
lcall
pop
jecxz
push
pusha
jbe
dec
cmp
jno
call
jge
push
adc
jae
adc
sbb
push
push
add
inc
int
push
mov
ret
mov
outsb
xchg
pop
std
add
xchg
std
das
push
and
jg
and
pop
sub
rcrl
unpcklps
inc
movb
or
sub
shr
lcall
dec
dec
les
les
or
cmpsw
dec
or
or
jmp
jp
sbb
push
in
jmp
movsl
shll
mov
xor
mov
xchg
in
inc
mov
stos
dec
pop
shrb
mov
xchg
mov
xlat
rcrl
inc
sbb
das
sbb
popa
nop
sbbb
or
or
adc
cmp
aas
mov
imul
cmc
ss
pop
aad
mov
addl
lret
in
mov
int
add
sub
pop
and
lahf
jb
mov
inc
dec
sbb
loopne
add
jmp
jnp
cli
mov
xor
std
data16
loope
orl
cmp
and
jmp
in
mov
or
mov
add
mov
add
sub
inc
push
and
test
inc
add
je
add
pop
mov
ds
test
incb
pusha
movl
mov
push
pop
push
push
es
push
sub
pop
pop
jnp
int3
stos
adc
dec
fsubr
add
mov
jp
sbb
inc
push
mov
rolb
nop
rclb
out
add
xchg
ffreep
pop
cmp
cmp
jnp
iret
xchg
sub
adc
pop
dec
sub
pop
ljmp
dec
leave
js
in
xchg
loope
jp
or
clc
pop
jle
dec
in
cmc
dec
lock
pop
clc
sarl
xchg
jmp
xchg
popa
sbb
lret
dec
lods
adc
out
push
sub
insl
testb
push
mov
jge
out
mov
add
xchg
loope
cli
daa
sub
sahf
ficoml
push
andl
shr
enter
add
or
push
lds
das
sub
add
or
repz
daa
nop
or
xor
cs
fstl
jmp
xchg
or
adc
jne
xor
xchg
pop
ja
rcrb
mov
roll
sub
orl
sbb
or
loop
add
aad
jg
mov
add
push
popf
sub
rcll
js
mov
xor
scas
jb
pop
jae
mov
push
stos
cmp
popa
dec
inc
fildll
and
and
push
and
push
icebp
out
sbbb
or
xor
movsb
or
sbb
jmp
sub
mov
pop
in
adc
dec
popf
bound
push
fadd
in
or
inc
push
pop
sbb
lods
hlt
xor
in
pop
rorb
jmp
scas
push
jg
inc
outsb
cmp
jmp
loop
sbb
sub
aaa
xorb
pushf
mov
add
jmp
pop
xchg
stos
test
xor
fwait
xchg
add
pop
inc
mov
sub
enter
pop
mov
test
push
andb
rclb
jb
jne
mov
and
test
sub
and
dec
dec
or
xlat
mov
mov
push
leave
sar
and
jl
jmp
and
pop
jge
fistl
jl
fsub
mov
jo
sub
dec
sub
jmp
movsl
notb
xchg
dec
stc
scas
pop
jmp
pop
movsb
sti
fsubrl
das
imul
mov
outsb
test
mov
xor
adc
rolb
jg
lock
popa
icebp
cmp
xchg
notl
xchg
pop
jne
pop
mov
mov
idivb
fadd
ss
inc
sub
pop
ljmp
jbe
outsb
push
stos
add
add
repz
sub
sub
pop
pusha
or
adc
push
and
mov
jmp
xchg
dec
hlt
lahf
sbb
or
inc
xlat
inc
rclb
daa
sub
ss
add
cwtl
mov
dec
push
loope
cmp
lods
xchg
mov
into
sub
push
mov
jmp
cwtl
cmp
push
cmp
sbbb
js
xchg
dec
or
push
mov
in
loope
cmp
xchg
push
cmpsl
icebp
out
inc
sub
push
orl
loop
push
scas
pushf
les
sub
inc
cs
mov
jmp
mov
xchg
test
mov
jno
arpl
movsl
cmp
push
or
adc
int
movl
cwtl
shr
sub
mov
push
cmp
cmpsb
pop
cmp
jp
imul
add
jmp
pop
mov
enter
inc
push
jp
aaa
nop
dec
popf
push
push
dec
sbb
sahf
cmpsl
add
push
or
and
xchg
xor
pop
cmc
call
cltd
adc
gs
mov
cmp
or
pop
les
xorb
rclb
ret
leave
scas
pop
sbbb
and
mov
lcall
add
jmp
lock
outsl
adc
pusha
ret
jg
adcb
fcomps
dec
test
adcl
jecxz
mov
add
lock
mov
jo
jmp
xor
add
imul
mov
mov
mov
lcall
mov
in
xlat
sbb
bound
dec
xor
aaa
shr
xchg
mov
jl
mov
xchg
inc
divl
jle
aas
movsb
sbb
clc
je
or
xchg
add
mov
xor
imul
pop
jmp
data16
sbb
mov
adc
ds
mov
pop
xchg
sbb
mov
cmp
hlt
push
push
push
dec
mov
adc
outsb
or
test
pop
and
push
notl
dec
call
sbb
jmp
into
add
sub
notl
push
rcrl
loopne
das
rclb
jmp
mov
sarl
jle
aad
fnstsw
dec
xchg
cmp
or
scas
cmp
mov
mov
or
shlb
cld
dec
jb
into
cmc
cs
mov
lock
mov
push
stos
pop
js
xchg
pop
aaa
ret
ljmp
cmpb
je
cmp
fdivs
or
mov
push
mov
push
fdivr
movsl
inc
test
cvtdq2ps
in
and
mov
pop
jmp
bound
in
sub
push
int
sub
xor
pop
div
mov
lret
jbe
stos
insb
nop
or
sub
ja
xor
add
adc
jecxz
shr
push
xchg
ds
data16
inc
jp
mov
lock
sti
fs
jne
out
add
mul
lods
mov
cmc
fidivrs
adc
mov
outsl
pop
in
push
pushl
std
mov
sbb
mov
xchg
mul
adc
push
rclb
mov
outsl
loop
inc
xorl
rcrb
in
add
sub
fsubs
iret
andl
fucom
in
cs
jecxz
push
jmp
stc
daa
mov
cmpsl
mov
out
jecxz
mov
addl
add
pop
xor
popa
dec
stc
sub
ja
daa
das
not
call
js
or
andb
push
or
test
inc
sub
nop
ljmp
shll
or
cmp
aam
fwait
rcll
js
cmp
add
ret
sbb
adc
add
fs
outsb
xor
jmp
add
stc
sbb
rolb
lock
pop
push
mov
aad
dec
push
add
popf
ret
jmp
scas
cmpsl
push
xchg
jo
xchg
jl
inc
cmp
pop
jae
or
test
mov
fmuls
mov
lahf
test
adc
aaa
dec
cmp
enter
testl
pop
pop
out
les
cmpsl
sti
pop
and
fstp
or
movsb
push
xchg
lds
xor
testb
mov
shll
push
lds
mov
loopne
enter
test
dec
inc
and
rorb
cmp
daa
cmp
ficomps
leave
cmc
ss
jl
push
and
cmp
xor
add
mov
add
fnstcw
push
and
fisttps
js
push
mov
out
dec
lods
pop
mov
sbb
sbb
mov
and
jp
clc
outsl
add
mov
or
jne
jmp
jmp
jns
hlt
mov
add
jb
sbb
mov
xor
mov
fucomip
ret
sbb
lea
in
or
ficoml
sub
mov
push
dec
pop
and
data16
outsl
hlt
stos
jb
rcrl
mov
adcb
lock
xchg
pop
ret
or
cmp
dec
mov
xchg
rolb
and
sbb
sar
and
jo
nop
clc
or
mov
aas
dec
sbb
dec
xor
mov
push
mov
outsb
jge
stc
sub
jb
add
dec
sub
loope
inc
push
les
sbb
std
repz
pop
jge
pop
into
rorl
push
frstor
ficoml
add
sbb
jge
pop
xor
jmp
ret
jno
xlat
adc
pop
into
jmp
in
lea
mov
outsl
aad
lods
idivb
fmul
je
or
jmp
pop
xor
mov
cmp
adc
push
mov
and
push
adc
stos
ds
push
mov
in
mov
fsubp
repnz
sub
dec
rcrb
xchg
mov
aam
pop
mov
push
push
xchg
into
aam
movsb
pop
std
adcl
hlt
push
lock
pushf
and
push
adc
les
xchg
push
inc
imul
add
push
fldcw
sti
add
fs
cs
xor
and
mov
popa
pop
jmp
pop
add
or
and
int
pushf
or
in
pop
adc
popf
mov
pop
and
mov
xchg
add
add
mov
dec
aad
fmull
mov
cmp
sub
test
or
popf
imul
xchg
jo
pusha
push
adc
and
mov
and
shl
je
popa
xor
imul
scas
add
inc
mov
rol
mov
fbstp
cmp
jmp
push
adc
sti
lea
clc
fiaddl
das
add
sub
clc
mov
popa
loopne
push
push
je
sbb
popa
cli
sbb
scas
xlat
fnstcw
cwtl
push
push
sbbb
or
mov
mov
cwtl
testb
dec
imul
outsl
loopne
push
ja
nop
add
mov
mov
push
cmp
pop
fstps
bound
xor
adc
lock
or
and
jmp
xchg
cmp
das
mov
and
in
sbb
and
jno
add
popf
inc
sub
cwtl
jae
or
xchg
aas
movsl
dec
push
ret
sbb
xor
mov
mov
sbb
lods
adc
add
add
icebp
lahf
mov
addr16
mov
mov
mov
imul
dec
fsub
inc
in
cs
xor
push
mov
mov
dec
test
or
jo
add
dec
adc
lret
hlt
mov
and
mov
pop
cmp
mov
adc
das
adc
mov
or
push
data16
mov
out
cs
sub
mov
pusha
mov
cs
push
popf
cmp
sbb
stos
xor
arpl
and
jl
rcrl
fnsave
inc
mov
test
mov
inc
stos
jno
and
add
mov
mov
push
nop
popf
or
sti
add
mov
mov
push
jmp
mov
gs
imul
xchg
cld
mov
pop
sub
stc
aas
sub
lods
pop
and
js
add
icebp
outsl
push
xor
roll
inc
add
jae
pop
xchg
sbb
inc
sbb
inc
aas
pop
mov
sub
lret
mov
dec
lods
mov
pusha
sar
sub
pop
pop
pop
or
xor
mov
add
rcrb
xchg
pop
push
cs
jmp
iret
sbb
cmpb
pushf
scas
jae
fstl
dec
aad
jecxz
mov
jb
ficoms
outsb
or
add
pop
push
mov
jno
imul
jmp
pop
xchg
cmp
jmp
dec
shrl
push
pop
push
pop
repnz
pop
jg
ds
push
psubsw
aaa
lahf
dec
fmuls
or
test
add
dec
or
or
jmp
pop
sub
loope
jo
add
fcom
sub
data16
dec
negl
imul
or
mov
push
lock
jp
dec
aam
mov
mov
stos
in
add
stc
out
fs
add
lods
cs
pop
adc
fsubs
leave
xor
mull
mov
vpaddd
and
sub
push
jmp
push
cmpsl
inc
inc
lea
call
sbb
xchg
mov
sub
stos
test
add
pop
jmp
jbe
push
imul
lods
push
aam
shrb
daa
xor
pop
push
mov
movl
inc
stc
push
sbb
mov
sub
lock
dec
dec
test
xlat
sub
xor
jg
pop
mov
cmpsb
xor
pop
mov
orb
cmc
adc
and
cltd
shll
sub
lods
ficoms
outsb
or
push
cld
addr16
pop
push
mov
les
and
dec
pop
sub
mov
jae
jmp
loopne
push
inc
mov
jnp
imul
daa
sub
push
push
sbb
dec
cld
dec
orb
xor
adc
call
jmp
xor
pcmpgtd
notl
pop
sub
out
xchg
lcallw
popa
imul
push
ffree
testl
std
push
ljmp
roll
test
sbb
mov
push
subb
xchg
or
or
xchg
or
push
dec
es
add
mov
sub
ja
mov
lods
lret
pop
mov
pop
cli
sahf
dec
or
outsb
in
cmp
inc
mov
jle
insb
and
daa
lret
insb
arpl
out
fs
push
enter
or
or
inc
sbb
loopne
aaa
dec
loope
lock
jnp
mov
ds
jl
leave
and
outsl
inc
xor
mov
call
lock
xchg
lods
ljmp
pop
icebp
or
sub
arpl
ss
adc
pop
or
fldl
mov
jecxz
cs
add
xor
fisttpll
cmp
dec
ljmp
mov
dec
cmp
or
jae
mov
mov
jp
testb
cmp
push
pop
int
out
pushl
iret
lret
or
loopne
cmpsb
stos
cmp
repnz
pop
pause
pop
add
subl
lds
arpl
add
mov
xor
xchg
xchg
cmpsb
pop
adc
mov
data16
dec
cmc
fistpl
jmp
out
add
push
push
cmp
rcrb
mov
push
push
cmp
pop
pop
repz
add
and
addr16
bndldx
fisttpl
negb
sbb
push
adcl
add
jb
mov
push
mov
cld
sub
add
push
pop
mov
aad
cmp
add
add
ljmp
mov
jl
mov
sub
sub
jbe
dec
test
das
les
lret
insl
or
cmp
test
outsb
cmp
add
cmpb
jmp
inc
mov
add
dec
subl
fdivs
mov
xor
jmp
xchg
push
sti
add
daa
and
and
lods
call
cwtl
sbb
ss
and
pop
aam
jmp
xor
arpl
dec
xchg
xor
shl
dec
mov
jmp
mov
mov
aam
stc
xchg
adc
stc
ds
add
gs
out
bound
or
test
push
call
addl
jmp
fs
int
test
faddl
sub
mov
mov
push
scas
lds
push
test
test
xchg
jmp
cmp
mov
insb
or
xor
int
fnstenv
pop
not
inc
js
or
add
fidivrs
mov
mov
adc
or
or
jmp
lods
dec
lret
insl
nop
mov
cld
js
add
sarl
addb
test
jbe
jmp
scas
repz
ror
dec
sub
push
push
add
rcrl
jno
mov
leave
lret
arpl
dec
mov
mov
or
andb
jmp
ljmp
push
mov
aaa
lahf
sbb
dec
add
in
jo
or
sbb
mov
je
mov
or
test
shl
sub
and
arpl
sbb
and
lods
lret
lret
jp
adc
pop
pop
dec
jbe
xchg
push
lret
push
adc
pop
inc
pop
dec
aam
fadds
adcb
push
dec
or
scas
jecxz
dec
mov
sub
push
pop
push
jmp
pop
aas
mov
cwtl
mov
aas
mov
stos
xor
dec
jae
rolb
mov
mov
aaa
xor
jmp
sub
adc
pop
aaa
pop
sbb
add
ficoml
sbb
pop
sbb
or
pusha
sbb
stc
lahf
adc
cld
or
add
out
mov
adc
pop
pop
insb
sub
mov
adc
and
sub
pop
shr
or
enter
inc
mov
outsl
add
cmp
add
cmc
repnz
add
mov
aaa
pop
push
xchg
scas
push
xchg
outsl
stos
mov
movsl
jbe
aad
mov
enter
fstpl
jecxz
mov
pop
and
or
mov
shrb
inc
cwtl
and
shll
mov
push
inc
lock
or
or
adcb
cmp
mov
pop
arpl
add
xlat
out
mov
sti
repnz
push
pop
test
sbb
push
mov
push
mov
cmp
out
dec
out
in
popf
mov
aas
out
xchg
popf
or
icebp
sti
cmp
and
nop
cli
mov
outsl
test
push
sub
imul
jge
sub
icebp
jle
shll
pop
sub
add
in
and
cltd
rcrl
jmp
or
and
push
push
dec
sar
cmp
repnz
mov
cmp
imul
mov
or
adc
out
imul
xchg
sub
mov
push
cmp
mov
nop
adc
pop
and
testb
insl
push
and
pusha
inc
int3
xor
or
aaa
daa
sbb
mov
pop
sbb
cli
add
mov
sbb
push
movsb
adc
out
or
sub
mov
jmp
test
push
inc
mov
daa
push
fbstp
add
sub
sahf
add
add
push
pop
xchg
scas
out
gs
cs
nop
ljmp
sbb
mov
push
xlat
or
fdivr
adc
sbb
sub
adc
loopne
mov
jo
pop
push
adc
dec
mov
outsb
sbb
dec
ret
dec
xchg
das
or
sarl
repz
stos
ret
popa
rcl
cmp
dec
xor
mov
in
pusha
pop
lods
and
mov
pop
mov
js
jbe
shr
stos
sub
lret
mov
mov
jg
shrb
jns
stos
pop
pop
movsb
adc
mov
jnp
inc
or
xor
ja
fs
push
and
push
sbb
addr16
jmp
inc
out
cmp
fnop
test
push
lahf
stc
incl
add
or
scas
movsb
in
dec
icebp
mov
or
mov
cs
pop
rcrb
sarb
pop
fidivrs
cli
fcom
inc
dec
das
daa
rolb
push
mov
dec
dec
inc
mov
movsb
lock
dec
push
jle
insb
push
mov
and
les
mov
push
sbbb
add
shrb
js
add
lahf
lock
loope
daa
and
ljmp
add
pop
sub
sbb
sub
add
enter
nop
into
push
test
pop
push
sbb
sub
inc
mov
repz
orl
mov
cltd
out
inc
enter
push
data16
push
leave
jge
jge
fs
jae
or
cmc
inc
sub
pop
movb
or
cmp
fisubl
fisubs
rolb
out
ljmp
in
inc
ja
or
scas
shrb
jmp
xorb
dec
add
push
dec
fidivl
rcrb
mov
pop
loopne
sbb
sbb
xor
xchg
sbb
push
cmp
jo
push
pop
adc
mov
mov
add
jmp
sarb
jp
xor
jmp
xchg
aas
fcmovu
dec
test
scas
xor
mov
jae
pop
call
imul
push
xor
pop
sub
push
jg
xchg
pop
add
out
ficompl
cltd
inc
dec
push
cmpsb
and
sarb
push
or
loopne
sub
add
pop
mov
jmp
fisubrs
push
push
popf
test
jecxz
adc
aas
mov
jns
adc
popf
dec
loopne
fnstsw
push
jns
dec
les
cltd
inc
mov
jmp
pop
faddl
push
push
clc
inc
das
out
inc
in
pop
jnp
adc
cltd
orb
scas
repnz
jmp
mov
mov
bound
arpl
jae
xor
or
or
sub
pop
jmp
aas
mov
mov
adc
ljmp
and
out
ljmp
pop
pop
loopne
push
mov
in
jle
xchg
add
mov
jge
push
rcll
pop
jge
xor
popf
lock
jmp
in
loope
sbb
neg
jne
pop
dec
movsb
dec
addl
test
sub
cmpsl
or
shrl
add
es
push
lods
mov
jp
sbb
add
andb
jge
add
andl
inc
outsl
push
lahf
sbb
jns
or
jmp
fiadds
push
adc
xchg
call
fldenv
push
push
fsubrp
pop
ja
sub
or
xchg
xchg
sbb
push
adc
add
imul
das
cmpsb
fcoms
mov
xlat
jl
xor
outsl
push
inc
pusha
js
lods
jle
pop
xchg
pop
hlt
adc
jl
sbb
sub
add
negb
sub
fwait
ja
ret
mov
ret
loop
push
or
pop
outsb
pop
and
mov
inc
dec
leave
mov
addr16
inc
enter
aam
aaa
lahf
je
push
add
inc
arpl
fdivl
fstl
dec
inc
sub
pop
fimuls
push
repnz
push
push
mov
xchg
jnp
loope
mov
sub
dec
xor
daa
and
push
push
adc
jno
mov
les
or
or
loope
push
adc
andb
nop
daa
repz
lds
push
lea
pop
in
sbbl
or
jns
loop
and
mov
je
inc
add
cmpsb
push
xor
sbb
addr16
das
inc
pushf
into
pop
test
push
sbb
repz
mov
xor
or
sub
jl
dec
adc
adcb
mov
or
in
subl
outsl
fcomps
adc
movsl
cmp
nop
sbb
dec
dec
out
inc
mov
inc
mov
sbb
jmp
add
lret
fistl
pop
or
cmp
orb
push
and
lahf
push
mov
xchg
fidivl
sub
mov
and
add
ja
jo
push
cmp
sar
and
aaa
scas
sbb
daa
repnz
dec
leave
and
xor
cs
push
int3
dec
sbb
jg
sbb
gs
orb
jns
es
sub
xchg
add
cmp
mov
cwtl
js
inc
mov
fnstsw
push
add
inc
cltd
dec
add
adc
in
cmp
loop
shll
add
and
dec
mov
inc
or
sbb
cmp
lcall
iret
push
mov
ret
fcoml
push
push
repz
push
pop
push
or
bound
jnp
cwtl
cli
adc
pusha
popa
out
dec
stos
dec
in
loop
mov
ljmp
jg
dec
inc
add
mov
data16
dec
add
incb
out
in
lret
sub
jmp
sub
cmpsl
adc
mov
sub
out
int3
fiadds
push
or
xor
or
add
js
pop
lahf
dec
mov
cmc
movsl
dec
sub
sbb
out
add
pop
xor
jbe
add
rcll
jae
iret
mov
in
mov
add
and
lahf
rolb
jbe
mov
es
xlat
jecxz
out
or
cwtl
pop
divb
or
and
sbb
adc
fidivl
in
mov
jle
les
jmp
adc
in
sub
mov
pop
ljmp
negb
in
incb
or
ds
and
add
push
push
mov
and
push
in
out
or
scas
dec
fiadds
addb
dec
aas
sbb
dec
sbb
adc
or
adc
cmp
pop
gs
inc
or
lcall
adc
test
pop
mov
xchg
fildl
dec
bound
sub
and
add
jmp
jg
push
mov
aaa
xor
xchg
mov
jmp
imul
sub
mov
dec
or
scas
dec
dec
cmc
loopne
es
pop
push
cmp
cmc
push
jne
inc
mov
icebp
pop
xor
or
arpl
xor
call
jb
jg
mov
jne
jl
ret
fnstsw
push
ja
jp
or
sub
xchg
and
int3
data16
lret
in
arpl
or
pop
sub
fldenv
pusha
ljmp
js
push
push
mov
jne
pop
hlt
jecxz
aad
mov
das
add
pop
and
jl
mov
jle
scas
add
or
cmp
or
pop
pop
push
add
adc
or
adc
js
sbb
fistpll
lock
jmp
xor
repz
sub
aaa
push
movsl
stos
or
xor
add
or
mov
ret
adc
mov
jmp
iret
int3
addb
or
test
pop
cmp
or
xlat
mov
sarb
xor
dec
add
xor
xor
push
add
sar
dec
out
or
jmp
pop
mov
lret
add
adc
inc
rorl
or
sub
jp
je
lds
scas
hlt
ja
pop
das
adcl
lds
add
test
mov
addb
push
and
add
in
jmp
dec
push
adc
xchg
inc
stos
fnstsw
not
push
push
jnp
hlt
inc
or
mov
inc
testb
adc
scas
ja
fadds
inc
jnp
sbb
push
test
test
mulb
push
stos
mov
mov
pop
lahf
js
add
add
fldcw
pop
lahf
fdiv
xchg
hlt
xchg
ret
shrb
xor
pop
jg
jbe
xchg
or
push
jo
mov
cmp
mov
adc
mov
push
fildl
neg
push
push
mov
popf
dec
arpl
sar
rorb
inc
push
mov
neg
mov
push
mov
mov
shl
add
sub
sub
pop
nop
mov
adc
jle
les
mov
push
pop
sarb
inc
inc
or
packsswb
loope
idivb
pop
dec
ljmp
xchg
mov
xor
addr16
in
jl
andl
cmp
push
cmpsb
stos
les
stos
push
push
jmp
mov
dec
movsl
pop
shlb
cmpsl
shll
out
aam
pop
add
xor
mov
sub
push
xchg
movsb
nop
push
mov
fsubrp
push
rcrl
mov
orb
mov
sar
cwtl
loop
in
or
xor
or
xor
movl
je
pop
movsl
and
pop
int3
sub
hlt
adc
sti
ljmp
pop
pop
sbb
cmp
jecxz
jl
je
js
jg
cltd
xor
popa
mov
roll
das
and
pop
sub
inc
test
testb
mov
pop
fisubs
mov
popa
pop
loop
xor
pop
cmp
jmp
sahf
jmp
push
bound
jb
and
or
mov
imul
shlb
push
pop
sub
addb
or
add
cltd
insl
push
jl
je
add
xor
pop
or
push
mov
jb
pop
jnp
inc
aas
in
jo
push
mov
jmp
lods
push
mov
lods
inc
jg
and
scas
pop
pop
cld
dec
push
sbb
cmpsb
mov
xchg
push
jge
adc
push
xchg
pop
and
mov
imul
dec
das
adc
mov
inc
clc
jae
mov
cs
push
mov
das
adc
mov
cmp
pop
jo
out
cltd
jb
cld
je
xchg
out
call
test
movsb
add
das
in
push
jae
daa
sub
inc
orl
adc
add
and
je
repz
in
pop
adc
push
inc
mov
mov
dec
dec
sbb
dec
cmc
add
and
rsqrtps
jp
lahf
pop
ljmp
or
cmp
mov
loop
insb
dec
andps
pop
mov
or
jb
xchg
jg
jmp
jmp
icebp
andb
loope
push
xchg
xor
shlb
jmp
push
inc
mov
frstor
add
mov
cmp
inc
add
call
pop
mov
or
ds
lahf
stc
jmp
lcall
jo
int3
push
std
push
out
push
jmp
nop
pop
je
jmp
ret
add
stos
mov
das
adc
mov
cmpsl
mov
ret
sbb
push
sub
inc
cmp
sbb
jge
les
mov
test
call
or
sub
das
mov
mov
in
push
loope
push
and
xchg
test
pop
xchg
shl
mov
cmp
aas
or
and
pop
sub
and
mov
or
fnstenv
fcompl
add
shr
xor
icebp
sti
lods
adc
inc
add
add
test
mov
and
in
cmp
movsl
adc
dec
cli
mov
push
ljmp
pop
pop
es
pop
out
daa
ds
adc
jae
xor
into
scas
add
stc
sbb
or
das
add
cmp
popf
hlt
loope
repnz
mov
or
sub
aaa
rcrb
sbb
add
add
imul
push
dec
lret
in
pop
or
ret
test
pop
out
pusha
test
inc
push
and
pop
sub
vcvtdq2pd
cmp
cs
in
push
add
popa
jnp
lock
cltd
jbe,pn
mov
nop
call
mov
push
in
addr16
ret
call
inc
ds
and
ljmp
repz
loope
in
ja
adc
adc
insb
push
pop
dec
shr
in
aas
stos
xor
push
aad
rorl
adc
jmp
cmp
dec
push
jmp
pop
loopne
out
pop
mov
js
adc
iret
or
mov
cld
and
jb
sub
xchg
adc
adc
xchg
in
adc
sub
cli
aam
aas
test
xchg
cli
mov
mov
cmpl
repz
ret
subl
add
sbb
or
lock
mov
add
xchg
dec
das
or
sti
push
lods
pop
aam
jge
pop
fwait
cmp
mov
test
cs
push
jno
xchg
cmp
jp
push
pusha
or
sbb
or
add
pop
add
adc
stc
jle
cmp
sub
call
mov
mov
icebp
call
push
cmp
orl
push
loopne
adc
cmp
push
cmp
shl
push
popf
fidivl
mov
dec
cmp
nop
lock
fiaddl
and
rcll
add
mov
cmp
cwtl
jmp
repnz
xor
inc
or
add
fldenv
mov
movb
pusha
lea
push
inc
push
loop
add
add
fdivs
sub
xchg
out
jmp
cmp
mov
dec
clc
cmp
pop
pop
push
jo
ret
push
or
pop
pop
mov
or
push
and
and
mov
cwtl
loop
inc
pop
je
fidivs
rclb
dec
mov
adc
es
and
inc
push
sub
fiaddl
ljmp
cwtl
jle
ljmp
jbe
aaa
jne
dec
push
adc
mov
shrl
out
add
push
cmp
pop
jmp
shrl
pusha
jns
pop
sub
dec
popf
sbb
or
pop
test
push
icebp
mov
repnz
pop
push
xchg
jmp
sub
jmp
and
fwait
jbe
in
sub
jecxz
sub
mov
paddw
sub
sbb
inc
mov
out
and
cmp
xor
adc
add
mov
sub
add
jmp
mov
js
shr
jne
shrl
sbb
jne
mov
sbb
sub
jno
or
push
xor
shll
adc
inc
or
sub
subl
cmp
cmpsb
xor
mov
mov
movsb
ja
jmp
push
push
repnz
dec
sbb
je
jmp
shll
cmp
and
jl
jmp
mov
sub
imul
mov
jge
aam
or
in
mov
sbb
imul
add
int
lods
dec
xor
sub
mov
or
sbb
outsb
xorl
stos
push
push
call
mov
xchg
push
sti
sub
jmp
dec
and
adc
push
movsl
fisttpll
jmp
cmp
sahf
adc
mov
push
nop
inc
sbb
jecxz
ja
das
mov
or
sub
out
jns
inc
aad
icebp
or
fsts
jmp
cwtl
inc
jmp
push
out
sub
cld
ret
mov
dec
push
and
pop
xchg
jmp
pop
negl
pop
mov
fiadds
dec
ss
push
push
jmp
stc
ret
clc
mov
adc
cmp
push
roll
and
cmc
add
cmp
fadds
jmp
add
adc
hlt
lea
out
add
inc
sub
sbb
lret
rcrb
or
jp
sbbb
mov
dec
mov
mov
int3
pop
push
mov
dec
cmp
loopne
jp
pop
fbld
jmp
mov
sub
adc
xchg
pop
aam
es
dec
adc
addl
xor
icebp
hlt
pusha
scas
inc
xor
not
dec
lock
xchg
or
mov
dec
sbb
adc
xor
pop
mov
loopne
dec
rclb
shr
or
test
sub
add
dec
cli
push
or
in
mov
sarb
xor
mov
imul
dec
pop
jns
pop
hlt
lds
outsl
add
dec
imul
add
or
sub
lahf
lods
lods
jecxz
fcomps
push
sub
push
jl
or
mov
jae
mov
dec
mov
adc
cmp
loopne
lods
sbb
mov
fs
inc
cmpb
add
add
adc
leave
or
nop
add
imul
push
lds
add
jb
add
call
scas
test
out
push
mov
loope
sub
outsb
sbb
add
xchg
or
or
mov
jne
je
push
push
lahf
inc
cmpsb
xor
call
rorb
je
lods
and
mov
dec
add
jne
cmp
dec
scas
int3
dec
jge
les
adc
cmp
push
jg
cmpsb
push
in
cmp
into
adc
or
std
sarb
lock
fildl
out
push
and
push
add
inc
and
mov
or
pop
cmp
push
lods
mov
sbb
pusha
cmc
mov
jmp
add
dec
or
cmp
jl
sub
imul
cmpsb
adcb
lret
jno
pop
shl
test
or
inc
and
inc
std
clc
jl
js
mov
dec
adc
repz
pop
lds
inc
and
ljmp
jg
les
jmp
mov
cli
and
or
loop
or
mov
cmp
mov
xchg
jmp
mov
push
mov
inc
add
jbe
aad
nop
fwait
add
xor
add
add
cmc
popa
gs
in
in
or
or
or
test
adc
sarl
cmp
xchg
xorb
or
mov
add
daa
icebp
inc
data16
lock
rorl
push
jmp
popl
ss
sub
insb
jg
and
cmp
ja
lcall
stos
ljmp
pop
xchg
fisttps
xchg
mov
mov
stc
sub
push
jae
and
mov
mov
int
sub
loope
mov
add
in
cmp
pop
or
push
or
pop
fdivs
out
sub
fdivl
add
pop
push
mov
shl
cs
xchg
xor
cmpb
dec
jmp
pop
test
or
insl
cli
outsb
dec
pop
cmpb
scas
punpckhwd
hlt
mov
out
xchg
shr
cmp
lds
cmp
je,pt
mov
cli
pop
rcl
pop
scas
pop
add
ljmp
jae
cwtl
rorb
jle
loope
sarl
insb
add
inc
pop
gs
not
int3
shr
push
outsl
pop
inc
mov
xlat
pop
mov
mov
jb
lds
add
mov
add
fisubrs
and
mov
loopne
imul
test
jmp
test
ffree
xchg
sbb
pusha
in
add
loop
push
or
mov
push
orb
xor
pop
mov
das
cld
stc
leave
aad
iret
adc
mov
sbb
out
inc
or
std
add
out
dec
ja
lahf
shl
pop
shll
and
in
rol
bound
jg
cs
repz
xor
add
push
or
icebp
and
inc
mov
int
jmp
xchg
inc
jecxz
loopne
mov
jno
jmp
pop
add
scas
cli
adc
xchg
stos
inc
mov
inc
push
lahf
jp
dec
movsl
pop
add
jmp
in
scas
int3
out
notl
add
shrb
or
incl
xchg
pop
nop
test
push
pushl
andl
jmp
cmpl
jmp
out
mov
enter
ss
dec
lahf
ret
mov
jns
movaps
js
or
xor
fistpll
jmp
in
pusha
jae
jns
jbe
xor
or
cmp
cmpsl
push
ficoms
adc
mov
lock
pop
ljmp
imul
adc
ret
push
jl
jle
enter
mov
pop
loop
push
jnp
popa
sbb
mov
and
dec
push
insb
out
and
out
add
add
aam
sbb
rcrl
inc
mov
jmp
loopne
adc
or
shl
push
add
and
popf
xchg
stos
push
repnz
fsts
sub
jne
aaa
dec
cmpsb
add
lods
jnp
ss
lret
pop
dec
out
xor
pop
push
mov
pop
push
icebp
outsl
imul
pop
dec
mov
repz
pop
lods
scas
cli
and
insl
dec
add
pop
push
push
daa
and
mov
orb
cmp
icebp
xchg
jecxz
add
imul
and
or
out
dec
and
sti
push
or
fnstcw
mov
loope
pop
add
je
cmp
mov
int
ja
lret
sarb
and
sub
sub
not
add
push
add
lahf
push
out
shll
lods
push
push
jns
dec
jge
jmp
sti
sbb
mov
jns
dec
dec
das
pop
faddp
push
inc
xchg
dec
aad
scas
andb
sar
cld
adc
aam
cmp
and
xor
jge
mov
xor
test
or
pop
pop
add
mov
lods
cmp
hlt
add
lahf
addb
inc
mov
ljmp
lret
mov
loopne
inc
lret
popf
inc
in
jnp
push
pop
imul
fidivs
iret
dec
cmp
daa
icebp
aas
sbb
sub
mov
subb
or
jmp
loop
mov
add
adc
jmp
clc
loope
push
mov
hlt
xchg
clc
pop
jmp
xor
add
mov
sub
dec
dec
pop
cmp
xor
loop
dec
pop
sub
rorl
pop
sub
test
andb
adc
fstpt
mov
in
and
bound
ret
in
cmpsb
or
push
mov
mov
pop
stc
imul
stos
sbb
imul
cmp
xor
and
sbb
pop
pop
negb
mov
add
andb
pop
and
lahf
cmp
sub
sbb
or
addr16
mov
stc
insl
repnz
jle
test
adc
add
addb
test
pop
cld
out
loopne
add
cli
lds
cltd
jecxz
imul
lahf
or
fstl
push
mov
or
push
lea
mov
add
in
fdivrs
jp
pushf
sti
cwtl
lret
mov
shll
lods
push
push
inc
enter
sub
pop
or
jp
jl
fcoml
jge
or
bound
sub
es
add
add
sub
sub
hlt
sub
xchg
inc
stos
loope
loope
inc
test
dec
sbb
and
push
fmull
mov
mov
xchg
sbb
popf
pop
sti
inc
pop
push
mov
das
jmp
sbb
pop
sar
add
mov
pop
sbbb
in
inc
pop
mov
add
add
push
sub
jmp
mov
jmp
mov
jmp
push
jmp
popf
js
mov
hlt
pop
out
jbe
shll
lods
xchg
cs
pop
bound
outsb
add
cmp
push
les
mov
inc
jmp
xchg
lods
pop
mov
pop
rclb
sub
mov
icebp
jle
dec
adc
sbb
jbe
lahf
addb
insb
decb
pusha
jl
jle
loope
mov
ret
jle
and
rolb
adc
pop
add
adc
cmp
xor
jae
std
inc
lret
fbld
outsb
call
lahf
lock
dec
adc
daa
iret
fists
inc
sub
ret
push
xchg
mov
push
fisubl
mov
jmp
add
ret
dec
mov
pop
inc
inc
das
aaa
mov
je
stos
loop
xchg
cli
sub
and
push
ret
out
or
les
hlt
dec
sti
inc
neg
hlt
push
sbb
cmp
or
inc
push
cli
sub
and
pop
mov
jmp
lods
add
adc
pmovmskb
pusha
imul
xor
mov
or
pusha
out
mov
daa
jmp
mov
call
stc
add
scas
outsb
je
mov
sbb
sahf
jno
pop
test
add
lcall
mov
pop
negl
nop
sbb
pop
jne
in
aaa
mov
fcmovne
pop
ds
xor
mov
fsubrl
jmp
inc
into
daa
rorl
pop
scas
add
jmp
dec
out
jnp
sub
xchg
sti
sub
fs
cmpsb
imul
cmp
or
fsubl
test
cmpb
fcmovb
imul
in
dec
aas
popa
icebp
push
sub
js
jmp
sahf
jl
xor
cmp
andb
aam
push
sub
or
pop
sub
xor
add
jp
mov
fisttps
sub
mov
and
sbb
cltd
sub
rcrl
adc
push
pop
and
jns
stc
push
mov
icebp
in
out
inc
xor
inc
pusha
sbb
mov
dec
fsqrt
popa
ja
sub
js
pop
sub
pop
push
inc
in
mov
add
sub
xor
dec
mov
mov
add
loopne
xor
xchg
clc
add
pop
fs
out
inc
insb
das
pop
cli
mov
mov
lcall
ret
mov
pop
jle
cmpsl
fistpl
add
push
shlb
mov
push
xor
mov
fiadds
dec
aas
jb
push
std
loope
cs
mov
jb
inc
arpl
loope
mov
adcb
mov
daa
adc
imul
rcr
js
movsl
mov
sbb
sub
push
lret
mov
dec
insl
xor
xor
xchg
push
imul
nop
push
clc
push
repz
mov
icebp
mov
addl
push
or
sub
aam
and
adc
sub
push
cs
daa
fldcw
pop
iret
icebp
fsubr
jo
dec
sbb
mov
mov
enter
rclb
into
out
mov
push
daa
dec
rcl
or
inc
scas
outsb
pushf
je
stc
and
aas
add
in
cmp
ljmp
loop
jle
sub
mov
pop
sahf
xor
nop
jb
addb
jo,pn
push
ss
out
dec
xor
cwtl
adc
cmp
test
mov
ret
pop
fs
lock
xchg
mov
xor
pop
loopne
nop
xchg
leave
cmp
jg
imull
dec
push
xor
testb
inc
adc
adc
pop
fcmovnu
jl
orl
sbbb
sub
inc
sub
idiv
xchg
mov
pop
out
addb
cmp
aas
or
fildl
push
mov
and
mov
add
insb
add
cmp
dec
add
mov
fldenv
stos
dec
cs
loope
or
mov
scas
add
adc
adc
js
xor
mov
sub
es
ret
mov
jecxz
pop
das
aaa
cmp
ret
cld
aam
fs
inc
xchg
orb
roll
or
sbb
sub
sub
mov
cmp
in
inc
xchg
arpl
fs
ja
or
daa
outsl
es
orl
or
pop
xchg
mov
loopne
pop
shrb
cmp
fs
addl
xchg
ret
push
mov
adc
add
xor
adc
or
mov
pop
loope
test
int3
xchg
daa
pop
sub
daa
add
flds
adc
dec
xor
inc
add
jmp
loop
sbbb
mov
xchg
insb
insl
sub
xlat
add
add
sub
in
js
mov
add
nop
ds
pop
jnp
cltd
and
jns
mov
popa
xor
sbb
mov
and
add
pop
test
xchg
cmpsl
cmpl
lret
or
rorb
gs
repnz
cmp
and
orl
sub
mov
ficomps
mov
lret
or
xchg
inc
loope
andb
mov
sbb
lret
cmp
scas
outsb
mov
push
push
push
pop
call
jae
pushf
sub
xorl
js
jns
add
dec
out
mov
xchg
fidivrs
sbb
jo
imul
jmp
add
fucomip
popf
xchg
rol
xchg
stc
jg
push
inc
ja
cld
test
lahf
or
or
call
aam
rcrb
inc
lahf
jp
bswap
daa
cmp
ret
lret
mov
scas
or
call
mov
or
loop
or
inc
outsb
fucomip
pushf
sub
cmpb
pop
sarl
inc
rcr
pusha
fimull
push
adc
mov
inc
cmp
push
jg
aam
pop
repnz
out
push
and
mov
pop
fldl
mov
nop
add
cmp
loopne
mov
clc
adc
sbb
and
sub
aam
repz
test
or
arpl
dec
les
and
jns
sti
cmp
mov
push
leave
std
add
pop
lods
fstpl
sub
sub
push
insb
mov
xchg
adc
dec
add
mov
and
das
aam
pop
adc
mov
add
cmp
cli
add
stc
out
in
pop
inc
push
in
scas
sahf
insb
or
push
xchg
enter
sub
or
add
sbb
adc
jge
adc
push
arpl
inc
js
push
or
sbb
sbb
gs
dec
das
lcall
cmp
dec
shl
mov
fisttpl
sbb
add
jnp
adc
out
cltd
push
ds
pop
in
mov
or
push
mov
insl
jmp
jp
add
jg
cli
sbb
jb
dec
stos
aaa
jbe
jg
add
push
mov
mov
sarl
add
leave
addl
call
loop
xchg
shrl
pop
addb
dec
mov
adc
sub
into
test
pop
shrl
push
mov
xor
rclb
call
xor
int3
mov
xchg
ret
or
sbb
lret
sub
cmpsl
pop
push
and
push
pop
test
mov
pop
fsubrs
aad
jge
pop
pop
js
sub
std
mov
fs
push
aad
xlat
push
mov
push
fsubr
lret
mul
call
xor
ja
jle
adc
cld
scas
push
pop
shrl
ret
and
or
rcr
int
cmpsl
lds
inc
ja
dec
mov
mov
mov
hlt
adc
pop
inc
daa
loope
dec
lahf
push
pop
inc
mov
sbb
not
add
and
sbb
add
xor
cmp
mov
pop
call
mov
adc
les
xlat
dec
mov
pusha
pop
stc
inc
xor
int3
fucomip
lret
mov
push
mov
inc
ja
inc
pusha
sub
xlat
xchg
pop
adc
pop
pop
stc
pop
pop
sti
aaa
es
test
dec
mov
das
rcrl
push
sbb
xor
sub
mov
scas
adc
pop
mov
pop
pop
push
mov
and
pop
push
insl
dec
xchg
jnp
pop
inc
xor
shll
addl
loope
fcoms
mov
dec
push
push
mov
dec
shlb
mov
mov
cmp
pushf
cld
lock
mov
or
outsl
mov
and
test
mov
xorb
adc
lods
add
push
mulb
jmp
xlat
ds
sub
out
adc
imul
push
insl
adc
sarl
iret
push
push
pop
jmp
inc
pop
and
pop
mov
sbbb
orb
mov
jmp
pop
stos
cltd
jb
mov
push
loop
pop
xchg
push
sti
std
and
add
hlt
fdivr
loop
inc
or
call
or
cmp
add
adc
sub
pop
xor
leave
or
pusha
notl
push
sub
adc
mov
inc
imul
jg
add
in
xchg
adc
pop
fbstp
sub
pop
clc
jp
push
mov
adc
xor
ret
iret
add
pop
pop
sub
mov
push
push
mov
mov
add
pop
sarb
lods
pop
add
jbe
add
mov
dec
pop
adc
add
cltd
lods
aam
mov
dec
out
out
mov
in
mov
cmpsb
mov
cmp
stos
sub
sbb
addr16
jbe
icebp
xchg
dec
sbb
shl
sub
fiaddl
adc
fstl
imul
imul
sbb
dec
or
mov
dec
lea
add
pop
rolb
loopne
out
push
cmp
rcr
ljmp
mov
repz
inc
and
jmp
cmc
add
or
mov
jmp
fcom
mov
pop
idiv
jo
cmc
cs
bound
gs
das
aad
xorl
out
iret
add
call
mov
push
sbb
aad
cmp
mov
inc
in
pop
das
loop
jg
sub
enter
xchg
add
pop
jp
outsb
adc
inc
push
repnz
push
or
mov
xchg
aaa
and
sbb
xor
inc
sub
or
sti
mov
clc
pop
cmp
adc
je
lods
imul
and
outsl
ret
fdiv
mov
filds
pusha
out
cmp
pop
push
xor
les
and
out
jo
push
dec
sub
pop
add
sbb
pop
out
mov
jmp
aaa
inc
imul
shlb
pop
push
pop
pushf
jne
mov
pop
cli
lret
int3
push
xchg
fs
mov
neg
rcll
mov
pop
add
rorb
jne
push
lods
xchg
in
fwait
lock
xor
mov
dec
cmp
sub
fldt
dec
xor
in
xor
add
jecxz
mov
and
leave
mov
imul
adc
inc
cli
dec
xchg
cltd
lods
roll
adc
lods
xchg
shl
and
cmp
pop
cmp
fldcw
jne
cmpsb
mov
and
aad
push
push
data16
dec
and
push
shlb
push
subb
and
push
lock
hlt
aas
stos
cmp
jg
aam
adc
inc
fwait
sti
popa
xor
enter
lret
cli
daa
loope
dec
lret
ja
dec
xchg
pop
enter
xchg
not
ret
or
cmc
xchg
out
int3
push
pop
xor
cwtl
or
pop
jmp
das
repnz
lock
cmp
test
pop
inc
adc
fs
xchg
movsb
stos
cmp
pop
js
jle
push
mov
adc
pop
dec
mov
inc
adcl
sbbl
and
jg
in
les
lock
shll
fidivrl
mov
or
mov
mov
mov
mov
pusha
ja
dec
push
inc
orb
inc
and
mov
or
xchg
sub
or
cmp
add
mov
xchg
sbbb
test
rcl
push
test
add
cwtl
rorl
push
out
outsb
mov
mov
cld
inc
xchg
fdivp
inc
mov
pop
pop
jp
jno
push
jnp
cmpsl
inc
fnstsw
add
sbb
notb
add
dec
push
data16
xchg
adc
sub
lea
pop
in
cli
cwtl
mov
or
dec
mov
and
jg
test
in
inc
in
mov
rcrl
daa
pop
add
cmpsb
and
fdivl
dec
je
jo
add
or
sbb
jb
or
adc
sbb
mov
push
adc
out
inc
bound
jg
test
lods
leave
mov
mov
sub
push
jg
cltd
bound
push
test
pop
incl
mov
sbb
dec
les
inc
mov
push
lds
ds
push
or
mov
or
pop
mov
sub
inc
inc
fistps
pop
test
jg
jmp
jecxz
cld
fists
jg
mov
scas
ljmp
and
pop
pop
stc
lcall
dec
in
cwtl
rorl
push
sub
pop
add
pop
fistps
enter
icebp
sub
jmp
adc
pop
outsl
xlat
push
pop
dec
adc
test
das
pop
sub
icebp
mov
out
pop
mov
and
mov
fs
imul
test
adc
fmulp
popa
push
rorl
sbb
imul
or
dec
mov
and
or
mov
push
adc
push
push
cmp
push
mov
das
inc
pop
pop
mov
fwait
aad
loopne
sub
sbb
add
pop
jl
push
adc
pop
dec
add
sub
jne
xlat
ja
xorb
or
shll
ljmp
push
jne
out
dec
loop
adc
push
mov
std
jns
jmp
aam
pop
sub
sahf
arpl
or
xor
pop
ja
adc
fildl
add
lock
pop
xchg
sub
xor
out
mov
mov
mov
lds
out
mov
dec
add
xor
push
sbb
mov
add
push
mov
addb
scas
dec
jmp
pop
sub
arpl
inc
mov
mull
out
pop
sub
fsubrs
dec
dec
enter
test
hlt
insl
test
mov
mov
push
pop
pop
inc
enter
fsubr
ret
dec
call
das
std
sbb
or
mov
clc
pushf
mov
jae
clc
or
out
imul
lret
es
data16
pop
iret
loope
stc
xlat
mov
xchg
or
aad
pop
pop
in
aad
mov
jge
sub
add
test
pop
shlb
repnz
push
pop
data16
rcl
pop
fsts
cmp
lock
sub
or
sbb
push
ret
add
mov
dec
add
jo
push
and
xor
add
mov
or
add
sbb
in
mov
into
or
mov
xorl
mov
fildl
in
dec
add
into
cmp
icebp
xor
pop
neg
jae
pop
jmp
lods
mov
mov
sub
push
ljmp
jmp
sahf
inc
or
fdivrs
sub
imul
jmp
mov
fmuls
jmp
inc
mov
sub
mov
addl
test
out
xor
pop
int
adc
xchg
lcall
sti
sbbb
add
clc
mov
or
xchg
int3
shll
sbbb
rcr
jnp
push
xchg
pop
mov
sub
in
mov
lds
xchg
add
jl
repz
bound
push
imull
adc
orb
lret
jge
inc
cmp
aas
lret
push
aam
sub
std
cmp
addl
push
cmp
or
pop
push
les
push
or
push
cmc
data16
mov
incl
adcl
outsb
cmp
add
ja
cltd
stos
add
imul
in
lcall
push
dec
push
add
mov
xchg
ret
sub
sbb
popf
adc
fcmovnb
mov
int3
and
add
cwtl
add
lock
ret
pop
pop
pop
xchg
pusha
or
rcll
lcall
pop
fnsave
rclb
cmc
rclb
nop
push
xor
sbb
shr
sub
sbb
loop
or
jp
add
xor
mov
push
add
jae
xor
jmp
mov
ja
fs
push
outsl
nop
loop
mov
shr
jo
movsl
cli
rcrb
pop
mov
and
xchg
xchg
rcll
mov
pushf
loope
push
xchg
pop
inc
clc
rorb
push
xor
les
rcll
pop
stc
sbb
pop
jno
jp
adc
push
clc
dec
jecxz
dec
das
loopne
sbb
jns
aas
rolb
mov
nop
pushl
inc
repz
jne
jp
gs
or
adc
adc
mov
ret
pusha
imul
ljmp
scas
nop
cmp
and
or
mov
call
pop
sarl
sbb
mov
daa
pop
pop
push
js
inc
lahf
inc
cmp
jae
rorb
sbb
sub
fsubr
out
imul
cmpb
sub
fucomi
or
lret
push
pop
push
fiaddl
ficoms
in
adc
add
cmpsb
sbb
push
cmp
nop
sub
adc
jbe
add
pop
dec
or
push
xor
add
ret
push
fsubrp
xchg
std
icebp
in
pop
sub
leave
out
mov
rcll
adcb
push
xorl
sub
ja
ss
cwtl
sub
add
loope
rcll
shll
mov
rolb
iret
jmp
in
jg
and
xchg
adc
popa
aaa
push
insl
or
outsb
xor
or
add
or
adc
and
push
cmpb
addb
pop
and
sub
jmp
insb
fmuls
mov
mov
pop
add
outsb
mov
stc
push
inc
clc
in
add
cmc
imul
test
icebp
push
and
pop
pop
ret
jb
loop
ficoms
sbb
push
adc
or
add
add
push
cmpb
das
outsb
push
lock
ficomps
inc
aad
fisttps
adc
inc
jg
das
daa
shrl
lret
ret
xor
ret
dec
pop
pop
mov
mov
popf
xor
test
add
xor
rorb
cmp
add
push
mov
jmp
stos
fsubl
mov
add
xor
int3
add
in
push
int
popl
lcall
clc
cmp
rclb
mov
ja
rorl
cmp
addb
inc
repz
sub
pop
mov
insb
add
lret
inc
mov
dec
dec
or
pop
outsl
jmp
mov
inc
add
popl
ret
pop
pop
out
je
fldenv
or
xor
jmp
dec
push
add
adc
sarb
xchg
divb
push
inc
add
sub
jecxz
inc
or
adc
adc
dec
sub
inc
dec
clc
mov
mov
cmp
jecxz
leave
adc
subb
or
mov
jecxz
sbb
pushf
sbb
sub
xchg
pop
adc
pop
scas
adc
add
sub
mov
jae
int3
cmpb
jmp
push
stc
cs
cld
js
and
cmp
stc
pop
mov
jg
inc
jo
jmp
enter
in
pop
sub
call
jno
pusha
ja
sahf
and
js
push
mov
sub
push
testb
add
pop
cmpb
movsl
push
andb
rcrb
mov
adc
pop
pop
mov
xlat
or
dec
adc
or
sub
inc
outsl
push
ds
int3
mov
sub
into
cmc
xor
ja
sub
not
rcrb
repnz
cmp
sub
mov
and
push
xchg
ljmp
je
lahf
rorl
fs
mov
dec
add
pop
pop
add
xor
mov
mov
cli
lahf
pusha
add
mov
pop
loope
push
je
sbb
das
fiaddl
jl
je
push
pop
mov
cld
xor
mov
cmp
xchg
test
mov
aad
in
aaa
and
mov
and
sbb
std
jno
mov
incb
add
adc
leave
jge
pop
jge
mov
push
into
out
cmp
idiv
xchg
or
dec
push
fstpt
mov
jecxz
push
sbb
ljmp
jae
or
pop
mov
or
and
ljmp
inc
pop
mov
sbb
fldz
sbbl
ja,pn
jg
inc
pop
inc
push
add
sti
popf
rclb
pusha
push
mov
add
push
mov
aam
dec
aad
rcll
inc
pop
repnz
fists
push
test
add
pop
pop
push
mov
andb
mov
jg
sbb
test
push
stc
lret
loop
fucom
sbb
pusha
add
stos
and
mov
mov
add
mov
and
call
sar
dec
fmuls
dec
jnp
xchg
adc
out
mov
adc
inc
rorl
and
or
out
or
adcb
pop
sarl
or
lds
hlt
or
xchg
cmovs
mov
cmc
jecxz
add
rcrb
xchg
jge
pop
push
adc
mov
inc
aam
add
mov
adc
jl
xorl
jno
jecxz
or
pop
ss
sbb
push
sub
test
mov
or
adc
es
jp
or
xor
xchg
adc
push
movb
pop
lahf
or
dec
test
xchg
push
out
push
in
inc
or
sub
push
hlt
int3
daa
mov
icebp
ficompl
ljmp
jecxz
aas
mov
pop
add
sbb
adc
pop
sub
shl
xor
pop
mov
jecxz
inc
inc
and
mov
push
mov
xorb
sub
push
lock
pop
pop
sub
pop
stc
fs
cmpsl
stos
fldcw
popa
mulb
and
sbb
int
push
cli
push
in
das
push
sub
pop
test
sbb
std
ret
add
loope
mov
aas
pop
and
and
jns
bound
vmovdqa
pop
sub
test
adc
and
push
mov
inc
cmc
mov
fwait
push
push
xchg
daa
aas
sbb
jne
jmp
pop
push
or
mov
jmp
dec
cmp
inc
cmpsb
out
roll
jno
add
sub
push
ret
mov
outsl
lret
ss
push
push
dec
mov
aam
add
arpl
or
cmc
sahf
sbb
bound
inc
xchg
rcl
jg
xor
dec
jle
sub
popa
pop
cmpsl
adc
inc
shr
jae
lret
sarl
xchg
mov
lcall
std
rorb
inc
sub
pushf
sbb
jmp
movsl
or
ljmp
orb
adcl
fs
push
or
lret
xchg
mov
call
mov
movsb
dec
pop
stos
cmp
inc
mov
mov
out
mov
in
fsubrs
lds
movsb
or
push
fnstenv
mov
sbb
pop
repz
adc
das
dec
lods
inc
test
mov
cmp
pop
add
push
mov
sub
mov
pop
popa
aaa
clc
cmp
movsb
jno
pop
xor
adc
mov
and
mov
loope
mov
jle
test
inc
jmp
mov
push
mov
cld
shrl
push
mov
aad
mov
cmp
outsl
jp
je
or
stc
daa
push
aaa
push
or
pop
or
icebp
pop
dec
xor
cwtl
dec
pop
nop
imul
push
xchg
imul
dec
and
and
out
adc
push
mov
jp
sbbl
mov
or
sub
push
sub
loopne
xor
jmp
lds
shr
mov
loopne
pop
pusha
outsl
dec
dec
mov
add
add
xor
pop
outsl
out
jp
sahf
sub
push
add
pop
inc
shr
lock
mov
mov
add
xor
push
dec
or
jmp
pop
pop
in
adc
push
leave
lock
into
mov
int
addr16
dec
sbb
cltd
rcrb
loopne
mov
jne
loopne
inc
push
pop
xor
ljmp
jmp
sub
or
mov
movsb
inc
mov
pop
call
out
mov
loope
adc
mov
add
push
and
movsl
jp
inc
jmp
add
shl
jno
pusha
mov
rorb
mov
pop
mov
jo
imul
jmp
push
push
mov
mov
or
jmp
cmp
shr
push
push
lret
push
sbb
push
xchg
xchg
jmp
cs
enter
sub
movsb
daa
push
jle
in
mov
rcrb
stc
mov
out
or
add
divl
loop
push
mov
pop
lock
in
test
inc
or
out
andb
popf
add
arpl
negb
cld
rorb
enter
es
pop
stos
xlat
adc
lahf
push
mov
popa
jmp
mov
mov
lret
or
mov
addb
jg
pop
xor
mov
pop
repnz
shl
push
in
push
nop
push
popf
imul
clc
das
pmulhuw
outsl
mov
bound
xor
add
idiv
and
and
mov
sub
jmp
lret
mov
push
pop
xchg
cmp
testl
lods
out
or
sbb
and
jmp
add
add
fcomps
mov
sbbl
or
pop
mov
ljmp
jns
mov
shlb
leave
insb
mov
xchg
cs
push
pop
add
add
icebp
imul
lods
or
or
loope
cmc
mov
jnp
mov
mov
mov
bound
leave
jle
repnz
lock
jnp
inc
cwtl
repz
add
inc
ja
push
cmpb
repz
jg
addl
sub
cmp
xchg
push
hlt
or
jbe
sbb
sbb
jl
sti
pop
mov
popa
mov
in
xor
pop
inc
aad
ret
push
test
repnz
mov
jl
sub
xchg
pop
xor
push
sbb
scas
push
sub
xchg
pop
cmp
dec
cli
jno
cltd
lds
jge
inc
adc
jo
cmpsb
mov
mov
push
push
jmp
mov
clc
adc
mov
lea
lret
sub
jmp
movl
cwtl
lods
push
xchg
sub
out
outsb
ret
or
pop
mov
add
add
out
sub
jmp
push
sahf
popf
dec
ss
or
popa
push
jbe
movsb
jno
sbb
aas
adcl
xchg
sarb
lock
add
fstps
dec
into
outsb
mov
mov
mov
jge
mov
add
neg
into
inc
mov
or
mov
ja
testb
pop
xor
inc
clc
push
jge
roll
icebp
pop
push
leave
mov
or
inc
jns
mov
dec
push
and
stc
cltd
mov
pop
or
pop
orb
mov
outsb
cld
xchg
jle
jb
lds
add
pop
xchg
pop
stos
sub
jns
cmp
push
mov
daa
push
arpl
sub
fisttpll
xor
pop
sub
mov
out
mov
fbld
adc
or
pop
pop
arpl
xchg
xchg
push
or
and
pop
cmp
pop
inc
pusha
mov
sub
and
fnsave
cmpsl
mov
add
lods
pop
sub
pop
jmp
pop
mov
orb
leave
jmp
sbb
lods
out
inc
sub
dec
je
jo
jno
das
xor
insb
test
mov
dec
neg
test
add
scas
das
jno
adc
jmp
xorb
pop
lock
pop
pop
xor
jecxz
dec
addr16
cmp
push
jns
std
insb
push
and
jl
add
adc
daa
push
xchg
pop
out
cmp
sub
les
repz
sarb
subl
xor
xchg
cmp
xchg
jns
aam
test
lods
ret
pop
imul
sahf
pop
or
or
cmpsb
inc
pop
push
push
imul
pop
rolb
pop
push
sub
and
scas
xchg
push
pop
jmp
xchg
xor
add
xor
jno
mov
out
pop
and
sbb
push
push
dec
daa
bound
ljmp
or
rclb
loopne
xchg
mov
pop
divb
dec
sub
incb
jle
shl
iret
push
fcmovnb
ljmp
pop
and
jge
pop
scas
inc
out
loopne
add
inc
xchg
movb
adcl
lds
mov
les
sbb
jmp
push
mov
mov
push
sti
jns
jg
das
add
inc
mov
dec
add
xor
orb
js
pop
fstps
xchg
int3
scas
repnz
xchg
rcrl
mov
int3
sbb
sub
sub
jno
add
add
inc
add
sub
mov
xchg
sbb
sbb
pop
and
cmc
jnp
xchg
cmp
add
clc
and
mov
push
jge
or
cld
hlt
orb
pop
mov
sbb
outsb
jns
xlat
cmp
shll
es
nop
or
add
pop
jo
fstl
ljmp
data16
jmp
or
fisttps
or
sbb
jb
jbe
pop
xchg
loope
xor
dec
or
mov
xchg
adc
pop
add
or
popa
mov
xor
test
fdivrl
xor
in
out
ja
and
iret
dec
push
jecxz
sub
jmp
push
fwait
push
push
pop
jnp
xchg
pop
daa
mov
or
jbe
cwtl
dec
and
push
movsb
push
inc
stos
push
add
xchg
adc
cmp
pop
adc
mov
push
nop
cwtl
lahf
loop
xlat
int3
xchg
xchg
hlt
int
xorl
dec
mov
jg
mov
or
sbb
pop
cli
insl
or
movsb
xchg
scas
xor
test
imul
gs
aad
idivl
daa
and
jo
lds
cld
lahf
xor
addr16
mov
cltd
push
push
movsb
mov
push
xor
push
movsb
jg
pop
lods
movsl
mov
sbb
inc
sub
jmp
fcmove
jne
xchg
push
sbb
sarl
xchg
push
in
data16
and
add
mov
mov
daa
mov
pusha
push
sub
ljmp
in
sub
aas
add
int3
shll
pop
cmp
rorl
ljmp
xor
add
push
movsb
js
loope
and
jge
in
and
lods
mov
nop
add
dec
mov
imul
lods
push
stc
mov
enter
sbb
and
xorl
mov
test
imulb
cmp
loopne
jbe
iret
jbe
int
inc
orl
cld
mov
xlat
fs
cmpsb
add
sub
jmp
stos
pop
jne
jbe
and
js
push
pusha
frstor
mov
cs
fsts
push
insb
jg
jmp
push
scas
cmp
push
cltd
add
inc
test
xchg
ret
sti
and
test
pop
dec
push
mov
call
into
jmp
mov
jl
ds
push
and
fsts
movsl
aam
shlb
xchg
push
push
add
mov
not
add
dec
xchg
inc
fimuls
call
cld
pop
pop
lret
add
call
push
mov
or
outsb
int3
pop
mov
mov
pushf
lea
cli
dec
mov
jmp
leave
xchg
inc
push
ret
mov
jmp
sti
stos
add
test
pop
pop
or
test
xlat
adc
lods
mov
pop
add
call
sbb
mov
cmp
popf
pop
imul
and
add
push
jnp
sub
loopne
pop
jecxz
or
xchg
repz
out
add
jmp
inc
mov
push
cli
sar
pop
dec
test
adcb
out
xchg
xchg
jno
add
ljmp
lret
push
or
pop
lds
in
shr
ret
cmp
adc
jmp
rcrl
insb
jne
sbb
out
inc
add
data16
mov
jmp
dec
or
cwtl
jno
call
mov
add
pusha
cmpsb
inc
pusha
sbbl
aad
gs
cmp
fisubl
sub
add
pop
ss
je
push
jmp
lock
shl
or
push
pop
subl
outsl
icebp
mov
cmp
xlat
pushf
mov
mov
ret
and
inc
pop
aad
pusha
jp
sub
adc
ja
dec
xchg
push
or
sub
push
xchg
mov
pop
xchg
mov
sarb
lret
pop
push
mov
add
loop
mov
and
cwtl
test
push
ret
int
sbb
test
mov
and
or
ja
mov
rcll
mov
shlb
add
xchg
add
loopne
inc
push
cwtl
int
hlt
cmc
cmp
mov
pop
push
das
pop
pop
jbe
add
mov
sub
xchg
jmp
pop
push
inc
cmp
mov
jns
mov
inc
fs
mov
pop
aaa
call
jns
jecxz
or
mov
dec
push
bound
xchg
sbb
dec
nop
out
popl
inc
jecxz
push
decb
cwtl
and
daa
push
movsb
sub
pop
xchg
and
jg
mov
cld
dec
leave
xor
push
inc
inc
cmpb
test
jg
inc
lret
or
xor
les
adc
fld
mov
mov
cmp
rclb
pop
cmpsl
out
js
jmp
rcl
ficoms
testl
mov
sbb
inc
sub
fwait
mov
xor
push
pusha
dec
inc
pop
pop
mov
ss
mov
mov
and
and
push
push
inc
fidivs
leave
lret
jge
sbb
add
bound
add
in
ret
repnz
in
xchg
loop
or
lock
cmp
and
push
xchg
dec
xor
popf
rcrb
cmc
sar
ja
movsb
and
lahf
fdivr
adc
negl
lahf
jns
mov
sub
testb
jns
mov
fldt
push
add
sbb
into
xchg
add
pop
in
cmovae
ret
add
repz
xchg
jl
stc
push
jo
js
cmp
mov
or
out
push
mov
fiadds
cmp
mov
ficoml
int3
pop
sbb
gs
cmp
in
data16
add
shlb
add
leave
inc
inc
outsl
pop
pop
lret
cltd
das
mov
dec
adc
sbb
sbb
fmull
stos
mov
daa
imul
inc
dec
mov
int3
mov
mov
add
orb
add
movsb
outsb
jmp
rcll
xchg
out
xchg
xlat
pop
daa
xor
scas
or
inc
shrb
or
push
cld
inc
das
inc
pusha
cs
imul
dec
repnz
adc
lods
lea
or
inc
xor
cmpsb
outsl
pop
lahf
mov
and
pop
stos
aam
push
shl
fistpll
pop
fiadds
xchg
push
pop
jl
pop
aad
push
rorl
and
int3
ret
iret
add
xchg
mov
pop
pop
and
xchg
jne
pop
push
cmp
sub
shr
xchg
cwtl
add
mov
stc
out
inc
or
jnp
inc
push
fdivrl
or
sub
mov
push
push
xchg
addr16
push
mov
pushf
jmp
jo
push
or
xchg
je
js
stc
and
pop
or
test
sbb
mov
aam
push
pop
adc
jmp
rcrl
bswap
xchg
sbb
push
jmp
mov
sbb
addr16
add
nop
cmpsl
orl
sbb
or
jo
repz
mov
inc
lcall
inc
pop
dec
pop
mov
inc
clc
add
dec
or
jecxz
mov
leave
hlt
imul
mov
call
movsl
jns
jne
pop
mov
data16
repnz
lcall
inc
loopne
mov
adc
add
add
out
adc
jns
xor
sarb
push
xor
and
call
or
add
mov
jp
mov
push
cmp
ret
pop
jo
and
fists
out
mov
inc
dec
out
mov
jle
pop
cmp
mov
dec
mov
mov
sub
scas
test
sbb
daa
dec
dec
aad
jno
pop
pop
mov
sarb
mov
pop
aas
std
in
movsb
andl
sub
in
jmp
dec
or
mov
and
pop
dec
ds
or
aaa
or
or
lcall
fldl2t
dec
lahf
jle
dec
fucom
jne
and
movsb
push
rcr
sbb
call
mov
inc
xor
sub
jp
sbbl
cmp
pop
xchg
sbb
lds
pop
cwtl
add
dec
mov
jl
pusha
mov
push
mov
pop
mov
stos
popa
cmp
rol
ficomps
jp
add
cmpb
or
insl
xor
push
add
int
push
cmc
jmp
mov
fisttps
sub
adc
or
loope
inc
adc
cmp
adc
test
js
or
pop
lock
inc
mov
imul
add
push
div
dec
movsb
inc
fstps
mov
push
cli
xchg
push
movsb
pop
and
in
aaa
push
add
mov
jle
lods
mov
sbbl
push
xor
call
mov
addr16
movsb
pop
rcrb
cmc
repz
adc
add
inc
aam
jp
dec
inc
push
and
add
aam
cmp
adcb
xchg
sbb
sbb
pop
pop
cli
mov
sub
inc
and
push
out
dec
nop
jmp
out
dec
xor
mov
cwtl
adc
mov
xchg
pop
pop
stos
popa
sahf
mov
shl
xor
call
sub
cmc
xchg
dec
sbbl
jmp
outsl
cs
clc
dec
data16
lret
jle
or
xchg
arpl
adc
and
jecxz
jns
xchg
gs
add
je
iret
sub
hlt
imul
daa
sub
pop
or
cmpsb
popa
shlb
xor
insb
std
xchg
cld
push
xchg
push
push
mov
sbb
pop
xchg
jmp
daa
pop
jmp
rclb
out
mov
mov
jp
jp
popf
daa
mov
adc
jne
js
popf
in
mov
pop
lahf
int
cmpsl
rcrb
mov
add
jmp
fiadds
shlb
mov
das
js
and
out
pop
cmp
push
lds
mov
ret
or
std
fdivr
pop
clc
in
inc
hlt
test
leave
jle
sbb
push
xchg
sbb
test
add
cwtl
mov
test
pop
dec
cmovp
push
fimull
add
out
lock
push
gs
add
hlt
mov
xchg
xlat
mov
mov
add
sahf
push
jle
scas
adc
inc
jge
add
loopne
jg
outsb
push
pushf
or
nop
sbb
push
data16
out
cwtl
scas
dec
fucom
mov
aam
cld
lret
add
xchg
mov
in
adc
cs
stos
and
pushf
bound
jmp
insl
push
mov
fnsave
dec
sub
mov
jge
xor
cwtl
mov
sub
cmp
arpl
cmp
mov
pop
xor
adc
adc
push
lcall
aam
lret
cmc
das
pop
jmp
imul
and
push
js
add
pop
sub
push
outsb
stos
push
xor
xchg
inc
mov
inc
leave
ja
bound
test
addr16
dec
jp
mov
dec
pop
xor
into
in
fldt
adc
clc
lret
add
push
mov
scas
add
pop
add
cli
mov
push
mov
hlt
add
sarl
jnp
mov
les
ljmp
das
iret
pop
pop
sti
mov
xchg
dec
lea
inc
dec
push
pop
and
neg
mov
mov
test
ja
outsb
cld
jnp
ljmp
pop
ds
movsl
les
xchg
or
stos
add
jmp
and
aaa
pop
jae
or
push
cld
data16
push
scas
push
xchg
and
add
insl
sbb
push
inc
push
jmp
sti
mull
add
repz
inc
adc
cmc
pop
cld
out
test
lods
shlb
adc
pop
out
jp
mov
push
mov
jl,pt
xchg
pusha
ja
adc
pop
shlb
cld
roll
pop
mov
jbe
push
dec
cmp
sarb
insw
in
mov
or
daa
lea
leave
sbb
imul
scas
push
add
cmpsb
subl
mov
sti
adc
xor
pop
ret
add
mov
jmp
or
pop
jmp
inc
push
in
sub
lock
xchg
in
mov
mov
cld
xchg
lock
shlb
int3
pop
push
insb
mov
cwtl
rorl
bound
add
xchg
or
in
int3
inc
add
add
add
scas
adc
aas
or
pop
cs
shll
ljmp
jno
sbb
jno
pop
rolb
mov
cmovge
add
or
in
add
mov
xor
xor
adc
adc
adc
es
stc
inc
fwait
xchg
subb
cmp
adc
pop
pop
divb
int
or
loope
addb
cmpl
icebp
loopne
or
mov
pop
push
dec
cmp
cmp
dec
nop/reserved
mov
mov
testl
inc
dec
fisubl
or
inc
dec
int
adc
icebp
push
inc
push
inc
add
cli
adc
ds
sub
push
stos
push
or
addl
or
adc
sbb
mov
mov
jg
and
xor
andl
push
cmp
pop
pop
sbb
add
inc
andl
pop
les
pop
push
push
sbb
inc
fdiv
inc
shrl
or
add
adc
and
jecxz
nop
push
adc
shll
enter
jge
add
out
add
xchg
push
push
int3
push
leave
lods
or
mov
test
popf
xchg
mov
mov
cmp
mov
push
adcb
enter
into
stc
out
mov
subl
xchg
aaa
xorb
imull
enter
xor
xchg
xor
sub
pop
mov
mov
loope
inc
cmp
or
sbb
ret
inc
imul
inc
mov
dec
adc
cmpsb
adc
loop
mov
xor
pop
sbb
in
sbb
sbb
pushf
cld
dec
call
movsb
xor
cs
jb
cmp
sub
jne
jmp
mov
aaa
mov
add
dec
dec
or
jne
mov
add
add
out
enter
rorb
dec
xor
pop
data16
arpl
sub
xlat
fwait
sub
pop
je
pop
and
adc
or
ljmp
mov
ffreep
enter
and
xchg
lock
mov
hlt
dec
add
xchg
mov
jp
aaa
add
pop
and
pop
xchg
testl
add
dec
inc
jo
scas
adc
mov
in
adc
push
mov
loop
shll
xor
scas
inc
stos
sar
repnz
push
hlt
lods
pop
jno
lea
jp
jg
cld
mov
cmp
push
jmp
jmp
inc
inc
fstpl
clc
in
jg
jecxz
inc
jp
scas
fdivrs
js
lcall
xchg
sbb
jge
pop
cmp
inc
xchg
sub
xchg
inc
or
push
xor
mov
or
fcoml
push
cld
pop
shl
sub
rolb
ret
push
jmp
xor
mov
push
pop
mov
xor
mov
mov
lods
rclb
hlt
lret
in
bound
hlt
and
shrl
adc
dec
fsubr
xor
lods
adc
rclb
mov
dec
pop
sub
xorl
lock
pusha
sbb
jbe
scas
pop
rcrl
jg
push
fwait
sub
inc
ds
aas
cmp
pop
in
pop
rclb
push
xor
add
data16
hlt
cwtl
jecxz
jbe
jb
cli
lret
push
gs
add
hlt
cwtl
mov
mov
rclb
inc
jns
jmp
leave
push
xor
fisttps
mov
mov
imul
ljmp
add
jl
jmp
xchg
stos
or
mov
fcoml
push
dec
or
or
aam
in
cmpsl
push
adc
jmp
and
ret
push
pop
sub
jnp
mov
test
ret
rcrl
add
pop
mov
in
jnp
push
fsubr
adc
pop
sbb
insb
sub
push
or
cli
mov
xor
mov
mov
lret
cmp
pop
push
aam
sarb
ds
cmc
imul
aas
cmp
fisubs
aad
add
pop
sbb
adcb
or
adc
clc
into
lahf
clc
pop
or
jmp
sbb
jmp
fstp
gs
add
add
testl
es
pop
push
sub
fiadds
add
rcrb
ljmp
push
mov
pop
scas
and
push
cmp
sub
cli
ds
cli
scas
adc
fs
add
mov
shll
sub
jmp
pop
cmpsl
add
lea
aam
into
jp
inc
cmp
cltd
scas
jp
orl
or
pop
adc
repz
or
rcrl
insl
and
inc
push
dec
ja
cmp
adc
lds
mov
push
jmp
xor
ret
jne
std
rorb
xchg
imul
jnp
dec
es
pop
frstor
cmp
mov
out
imul
adc
sti
cli
jo
push
xor
pop
jle
add
and
push
sbb
xchg
fmulp
xchg
xchg
jne
push
pop
leave
jp
push
push
pop
test
mov
push
pusha
test
push
xchg
sbb
inc
jne
out
lock
sub
mov
and
push
jns
xlat
xchg
jno
ds
pop
sub
xchg
inc
push
xor
or
cs
adc
icebp
out
pop
xor
pop
out
sti
push
ds
jbe
inc
outsl
loope
push
adcl
and
mov
loope
loopne
jmp
das
das
icebp
mov
orl
push
lods
xchg
xor
scas
pop
call
add
and
sar
sar
pop
push
cltd
leave
dec
pop
jno
imul
out
lds
shrb
pop
push
pop
imul
pop
and
rcrb
push
or
mov
mov
cli
jecxz
mov
lahf
add
clc
sub
sub
mov
push
sbb
bound
jmp
cmpb
mov
push
fistpl
out
or
adc
push
mov
sub
add
mov
notb
iret
adc
out
insb
mov
js
mov
ret
mov
or
js
clc
add
sub
push
xchg
xor
xlat
pop
jno
icebp
repnz
adc
rol
sub
push
dec
fadds
shrb
jnp
push
sub
pop
pop
pop
js
jl
out
mov
push
cmp
dec
lock
or
movsl
inc
mov
mov
std
aas
loope
xor
dec
pop
mov
adc
push
lock
mov
cmp
sub
flds
push
inc
mov
lahf
fsubrs
pop
cmp
cli
lock
es
inc
lods
mov
outsl
jb
sub
add
add
mov
popa
imul
mov
mov
xor
lods
cmp
mov
idivb
jecxz
pushf
movsb
ds
pop
sbb
movsb
sahf
movsb
movsb
add
lods
jecxz
stc
lret
or
cmp
js
ret
or
mulb
out
mov
xor
push
mov
or
push
push
ss
mov
loop
xchg
mov
add
and
push
clc
es
lahf
mov
cmp
push
arpl
clc
aam
movsl
cmp
push
mov
inc
test
orl
subb
unpcklps
add
data16
mov
clc
mov
rolb
icebp
jg
or
xchg
movsb
jb
adc
ljmp
add
pop
mov
test
add
mov
cmpsl
js
arpl
or
xchg
xchg
int3
cmpl
mov
aad
mov
adc
adc
lcall
cld
xchg
jne
data16
cmp
adc
xor
push
into
adc
cmpb
pop
clc
xchg
dec
xor
sub
xor
shr
jnp
cld
gs
clc
pop
dec
popf
mov
sbb
subb
pusha
filds
jnp
pushf
mov
push
shl
sbbl
sbb
aas
lea
xor
inc
cmp
mov
mov
push
shlb
add
outsb
add
adc
or
xor
push
push
push
push
cs
int
dec
sbb
mov
pop
cmc
sub
outsb
mov
pop
inc
sub
cli
cmp
repnz
xchg
dec
sub
jmp
in
pop
pop
xor
div
adcb
push
lods
and
xchg
push
jl
or
inc
xlat
mov
hlt
ffree
loope
ljmp
fidivl
push
sbb
pop
imul
negl
dec
mov
mov
mov
aad
xor
push
inc
adc
dec
fsubr
and
movsl
aam
inc
not
push
or
jmp
daa
in
fistpl
ja
fs
and
in
dec
std
add
lds
hlt
xchg
sti
int
xchg
xchg
data16
mov
and
and
or
or
jne
xchg
adc
sub
and
stos
mov
sbb
aaa
test
inc
fsts
cmove
rclb
ret
pop
pop
pop
ds
sti
cmp
clc
lock
test
push
jno
test
std
call
aam
insl
or
mov
sub
push
fsts
not
push
es
fisubl
mov
push
add
nop
imul
daa
add
or
mov
mov
jmp
leave
out
xor
or
push
arpl
fcoms
lahf
fstps
mov
orb
shll
stc
jne
and
repnz
sub
xchg
inc
mov
add
pop
or
in
out
dec
rcrb
mov
daa
pushl
ret
movsb
push
nop
andb
and
andb
daa
push
sarb
sahf
adc
mov
hlt
fs
adc
stos
mov
adc
adc
jae
fisubl
in
push
sbb
fidivrs
add
lcall
stos
jle
dec
daa
xor
add
add
push
sub
and
neg
add
pop
add
xchg
add
xor
mov
sub
pop
xor
ds
xchg
jmp
sarl
fs
sbbb
or
inc
cwtl
inc
add
pop
jmp
icebp
or
subb
mov
jmp
addl
and
inc
out
lcall
jecxz
loop
fdivrs
enter
add
aam
push
push
jp
pop
add
popa
into
movsl
aas
mov
das
push
inc
push
pop
jmp
movsl
jbe
mov
cltd
push
push
imul
adc
fbld
pop
sub
in
sub
push
sbb
jge
mov
adc
repz
pushl
repz
repnz
dec
icebp
and
js
clc
ds
out
subb
pop
sbb
pop
aaa
add
jmp
inc
sbb
push
aad
xor
or
mov
inc
inc
sub
ss
ret
mov
sti
testl
out
fcompl
pop
inc
in
aam
adc
stos
sbb
jg
lock
push
cmp
mov
les
fsubr
mov
popf
arpl
sarb
pop
dec
sub
adc
leave
mov
pop
andb
inc
rorl
jp
xchg
pop
sub
les
push
push
ljmp
test
pop
imul
fimuls
stos
adc
divb
mov
fnstsw
push
cmp
pop
insb
xor
sub
inc
dec
push
ja
sbbl
fadd
push
loop
or
jp
pop
inc
cmpb
add
jmp
cmp
dec
cltd
mov
jns
outsb
gs
fadds
cmpsl
mov
mov
pop
sub
int
cmpsl
cld
adc
inc
xor
ret
daa
scas
adc
in
cld
cmp
xchg
sbb
aad
jne
adc
xchg
add
sbb
testb
sub
es
dec
jmp
cwtl
push
push
iret
aad
mov
push
xor
inc
or
das
in
hlt
ljmp
mov
jmp
push
pop
push
or
lods
inc
sub
push
enter
mov
int3
sub
mov
mov
test
xor
stos
inc
aas
jo
arpl
adc
cmpb
loopne
mov
pop
mov
cmp
pop
adc
inc
mov
fstpt
adc
imul
aas
inc
imul
js
jb
xor
or
jnp
or
pusha
push
xor
popa
sti
or
roll
in
jne
push
xlat
cmc
xchg
in
push
push
jmp
pop
push
push
scas
mov
sub
sbb
inc
push
mov
jmp
sub
iret
push
jle
inc
xchg
loopne
ljmp
lret
daa
jl
je
add
popa
in
ds
fdivs
test
jmp
lods
xorl
adcb
clc
arpl
jmp
sub
mov
clc
jne
icebp
xchg
arpl
scas
xlat
cmp
sbb
or
loop
js
add
xorb
add
das
push
sbb
loopne
cs
mov
ret
inc
outsl
push
ja
pusha
cmpsb
add
xor
mov
or
push
lret
shrb
cmp
cs
or
push
xchg
mov
jmp
fldcw
pop
add
cs
mov
ret
scas
adc
aad
and
out
pop
jg
mov
cmp
in
ja
clc
in
or
jp
add
orps
sti
mov
loop
iret
push
test
out
lret
fmull
jmp
in
mov
push
pop
adc
jp
mov
mov
add
inc
lahf
addb
divb
mov
mov
icebp
cmp
xor
and
sub
daa
push
push
sub
adc
stos
cwtl
int3
cwtl
bound
inc
add
mov
xor
lret
mov
xchg
pop
adc
or
outsl
ficompl
push
push
mov
push
sarb
add
xor
arpl
sub
in
xchg
rolb
lcall
xchg
mov
pop
adc
call
inc
inc
or
mov
cmc
pop
daa
push
bnd
push
xchg
sub
jmp
add
enter
mov
xlat
jmp
xor
or
or
jle
cmp
push
adc
jae
and
in
or
xor
das
pop
or
mov
cmpsl
push
dec
xor
stos
and
fldl
out
and
shrb
popf
das
or
and
shr
inc
cmc
pop
adc
push
cmp
rcrb
ljmp
inc
fdivrl
out
out
divl
push
xchg
ja
pusha
sub
sahf
or
cmp
orl
push
pop
add
add
pop
pushw
sbb
push
mov
add
mov
daa
xlat
loopne
push
mov
repnz
push
jmp
add
pop
jp
adc
arpl
or
imul
inc
jmp
div
xor
insl
outsb
mov
nop
push
jmp
add
add
mov
jmp
les
daa
repz
sarb
pusha
in
popf
shr
add
cmc
jmp
mov
dec
sub
or
mov
push
jnp
cmp
or
xchg
pop
xor
pop
roll
mov
adc
testl
movsl
pop
xor
and
and
outsl
cmp
pop
lahf
push
aam
test
xchg
pop
add
pop
inc
add
repnz
insb
into
sbb
cmp
mov
cs
nop
add
xchg
xor
sub
aam
arpl
fidivrs
or
pop
jmp
adc
push
jne
das
and
lock
leave
add
mov
pop
sub
push
pusha
gs
dec
mov
push
stc
inc
andb
sbb
dec
push
cmp
mulb
push
jl
mov
shlb
jecxz
pop
push
shr
adc
mov
pop
pop
xor
or
cmp
xchg
xor
imul
add
jns
sbb
scas
sarb
repnz
push
es
sti
or
out
shrl
and
enter
push
flds
aam
cmpl
addb
push
pop
cwtl
lods
mov
ret
sub
pop
push
cmp
dec
andb
push
int3
mov
jbe
add
ror
das
jb
addb
xor
push
in
das
lods
pop
mulb
push
shl
mov
movb
sbb
push
sub
push
push
das
stos
sub
jmp
std
hlt
adc
xor
out
jnp
push
xor
shlb
stc
cmp
inc
dec
push
jnp
xor
push
mov
push
hlt
adc
je
test
enter
out
cmp
enter
in
sub
sti
jns
ds
repnz
dec
test
les
clc
xchg
scas
inc
popa
repz
xorb
xchg
test
loopne
aas
mov
jo
push
popf
jae
dec
jmp
cli
stos
and
testl
sbb
mov
loope
arpl
dec
inc
in
int
jmp
jge
in
icebp
in
pop
mov
enter
add
pop
cs
and
lret
outsl
and
sub
and
add
and
sti
jp
pop
insl
clc
adc
out
inc
inc
jmp
inc
not
xorl
push
xor
adc
fstpl
pop
push
and
mov
in
insl
aas
sub
lock
pop
out
cltd
push
outsb
lods
les
xor
mov
ds
and
iret
sahf
mov
sub
xor
pop
daa
pop
mov
dec
or
adc
data16
sub
mov
push
lods
negb
xor
xorl
nop
push
pop
aam
or
movsl
add
or
sbb
lea
xchg
cmp
in
sub
sbb
xor
xchg
data16
ret
scas
and
xchg
movsb
pop
push
mov
imulb
inc
jmp
or
nop
jecxz
movzbl
pop
pop
out
outsb
out
sbb
dec
add
mov
adc
sbb
adc
mov
and
aas
in
andb
inc
and
pop
loop
and
xor
push
mov
jb
dec
inc
push
gs
sub
mov
shl
push
shr
mov
pop
movsl
lret
jnp
add
test
leave
or
adcb
and
mov
push
cwtl
adc
in
out
add
xor
jns
xchg
push
movsb
mov
mov
andb
shlb
pusha
and
add
iret
dec
rorl
sub
pop
inc
push
js
mov
mov
jle
cld
mov
xor
mov
push
icebp
push
sahf
push
mov
les
das
call
jecxz
dec
lea
jp
mov
push
lret
sub
pop
mov
add
jle
mov
dec
push
not
lds
lea
pop
hlt
mov
cmpsl
pop
or
stos
jbe
xchg
fsts
je
cltd
and
and
sbb
sub
sahf
cmpsb
mov
mov
mov
data16
pop
mov
add
jmp
cmpsb
in
cld
add
gs
mov
test
daa
sub
and
inc
bound
jecxz
movsb
fildll
lock
dec
rclb
nop
bound
inc
cwtl
or
and
add
int3
cmp
scas
sub
pop
inc
pop
push
xchg
cmp
and
inc
inc
pop
ljmp
pop
rol
out
mov
xor
push
lods
xor
push
push
push
adc
das
and
insb
je
adc
jno
inc
mov
ret
sti
mov
cmp
push
icebp
lret
orb
xor
popf
push
jmp
outsb
cli
jne
dec
das
test
jecxz
pop
or
push
adc
das
jne
lods
push
add
sbb
test
fdivrs
jg
pop
sbb
je
bound
jno
jne
push
mov
movsl
or
addr16
scas
pop
repz
dec
aad
pop
cwtl
scas
faddp
dec
dec
xchg
movsl
jo
pop
ss
lret
mov
movsb
sbb
cmc
sbb
es
jne
add
pop
xor
and
das
jbe
leave
nop
loop
lcall
xchg
xor
rol
xlat
sub
and
es
pop
sub
out
test
mov
push
pop
sub
push
es
push
js
jmp
ficomps
cmp
push
sar
xchg
pop
or
xor
mov
fs
pop
aas
test
adc
sub
jge
mov
jne
cmp
adc
push
mov
clc
int
stc
push
lock
add
mov
orb
push
add
sbb
les
xor
adc
dec
js
add
or
mov
pop
sbb
cli
sbb
flds
cmp
nop
push
push
and
fnstcw
lret
mov
dec
dec
dec
xorl
xlat
adc
and
rorb
pop
jg
and
in
rorl
jno
out
push
leave
sbb
js
jo
mov
leave
or
or
clc
adc
and
and
cli
and
push
jge
mov
jmp
ja
ret
inc
divb
sti
or
jmp
cs
stos
or
scas
push
sub
clc
jl
adc
gs
nop
push
xor
daa
sub
cmp
imul
aaa
cltd
fs
sub
or
sub
jmp
les
xor
aas
leave
mul
ret
sti
cmp
rolb
jb
mov
push
repnz
test
faddl
pusha
or
jl
add
outsb
sbb
shr
pop
ljmp
and
push
rolb
mov
shl
push
mov
mov
inc
test
adc
in
in
or
xchg
add
jmp
mov
daa
gs
repz
rolb
and
push
mov
ret
dec
inc
dec
pop
cmp
push
ret
ja
push
loopne
adc
loop
cltd
jnp
xor
pop
sub
ja
or
mov
mov
xchg
fisubrs
inc
adc
repz
ret
jmp
test
sbb
adc
cld
jmp
push
lock
adc
sbb
cld
movsl
xchg
fistps
add
das
xchg
inc
xchg
cli
sbb
cmp
fidivs
dec
ja
sbb
mov
push
add
in
les
imulb
mov
cmp
daa
out
push
adc
inc
xor
dec
cmp
cmp
push
mov
rorl
and
and
je
sbb
push
cwtl
mov
icebp
push
cmp
sti
or
sbb
inc
std
add
xlat
xchg
scas
jne
xor
jae
movsb
inc
add
scas
sbb
push
int
fdivrs
inc
clc
jb
mov
aaa
pop
cld
out
mov
orl
xor
dec
xchg
lods
and
arpl
cmp
bound
add
jne
xor
adc
rcrb
scas
cwtl
push
push
xchg
cmp
push
mov
jmp
jo
pop
mov
xchg
cmp
ja
stos
mull
aam
dec
push
orl
add
pop
sbb
std
mov
add
add
push
and
aas
mov
ljmp
or
pusha
push
sub
dec
out
jne
out
xlat
outsb
xor
fiadds
xor
push
test
add
mov
push
sub
cmpsb
sub
xor
cld
adc
adc
faddp
jge
or
add
cmpb
push
pop
pop
in
lds
lods
aad
das
scas
sub
cmpl
sbb
pop
or
pop
push
cli
fsubr
or
cmpsl
cmp
repnz
inc
iret
inc
xchg
push
xchg
loop
dec
xchg
and
add
cmp
rorb
mov
mov
test
shr
lsl
adcl
rcrl
inc
jl
push
scas
adc
pop
xchg
mov
sub
mov
rcll
and
xchg
test
int3
or
addr16
fsub
or
sbb
xor
or
sbbl
insb
or
jmp
data16
push
pushf
pop
popa
gs
cmc
mov
lahf
mov
pop
add
inc
cmc
xlat
imulb
and
add
mov
mov
les
inc
add
icebp
push
cmc
pop
int3
adc
loope
xor
mov
mov
sub
add
test
pop
lods
adc
xchg
adc
cmp
xchg
push
push
jmp
fstl
or
cwtl
pop
outsl
add
xor
iret
and
and
popa
pop
mov
pop
icebp
and
push
fwait
add
fs
add
pop
popa
test
jae
shrl
or
jno
rcll
scas
jb
rcrb
mov
dec
icebp
in
xchg
stos
lcall
cmpsb
and
das
push
and
test
das
dec
rcr
pop
push
mov
ret
pop
adc
jl
loope
pop
imul
rorl
daa
pusha
adc
add
jecxz
loope
adc
and
inc
test
mov
stos
std
inc
push
cltd
fidivs
mov
arpl
dec
loope
loope
sbb
xchg
inc
or
cwtl
addr16
push
sbb
dec
add
insb
cmc
dec
adc
mov
nop
call
dec
lret
mov
xchg
push
repz
mov
fsubrp
and
xchg
and
xor
add
loop
in
out
cli
sbb
pop
add
push
sarb
cs
xor
icebp
pop
sbb
loop
jg
pop
jl
jle
dec
lret
shlb
cmp
jecxz
push
jno
bound
adc
arpl
popf
jp
lahf
dec
and
adc
sub
sahf
inc
add
jle
mov
rcl
fdivrs
push
lods
mov
pop
xor
lahf
imul
mov
or
mov
xchg
and
pop
push
enter
lock
or
pop
mov
fcom
or
and
mov
sbb
fsubrs
jmp
icebp
sbb
idiv
in
dec
clc
out
sub
cwtl
and
inc
scas
sub
pop
xor
sub
push
jmp
jmp
sbb
xor
mov
sub
push
xchg
or
into
xchg
lcall
lock
pop
jle
or
das
push
fildll
sub
mov
clc
sbb
scas
lahf
push
xchg
xorb
push
jmp
mov
sub
in
or
adc
mov
push
or
or
sub
push
xor
adc
stos
sub
pop
nop
daa
ja
enter
sbb
sbb
incl
shl
test
int
adc
lds
lret
jmp
push
cmp
push
sub
gs
pusha
cli
inc
ds
inc
fisubrl
and
push
std
imul
jne
dec
nop
out
int3
jne
addb
sub
das
or
push
in
notb
inc
push
lahf
clc
gs
sub
push
cmp
xor
and
push
das
out
pop
jmp
inc
into
sbb
daa
cmpxchg
lock
add
pop
lcall
into
dec
cli
or
lock
lds
mov
jns
mov
push
cmpsb
push
add
jmp
jp
pusha
and
jb
adc
sub
iret
push
inc
or
daa
sub
out
push
or
jmp
add
pusha
ret
push
push
sbb
addr16
ret
sbb
and
adcb
neg
gs
testb
nop
fisttps
and
imul
neg
movsl
xor
out
xlat
jp
inc
test
add
ja
stos
add
xchg
adc
cld
jbe
xchg
cltd
add
push
mov
mov
jle
jge
pop
sub
icebp
add
cmpb
dec
jae
xlat
inc
mov
jl
cmp
mov
decl
lahf
shlb
insl
mov
mov
outsb
cs
or
icebp
inc
nop
sbb
stos
push
cmp
jmp
pop
pop
add
rcrb
and
jmp
stos
cmp
leave
cmp
fisttps
push
dec
pop
ljmp
mulps
popf
sub
or
add
das
negl
push
imul
ja
or
or
pop
call
sub
add
loop
mov
mov
insb
cli
cmp
cmc
mov
aad
test
push
fs
jnp
cli
test
mov
into
stos
rorl
xchg
jecxz
js
or
pop
xchg
jo
loope
dec
out
adc
pop
sbb
cmp
mov
xor
add
adc
scas
fidivrs
jmp
stc
jno
popf
inc
addr16
or
pop
jmp
and
adc
add
jl
popa
pop
addr16
sar
xlat
cmp
inc
sub
pop
inc
sub
add
pop
xor
mov
add
inc
test
dec
inc
cmp
push
inc
xor
fadd
fsts
lret
mov
sbb
push
mov
and
push
shll
cltd
jae
sbbl
outsb
cltd
movsl
mov
loop
inc
popa
or
adc
add
jmp
sbb
flds
lret
adc
repnz
dec
jmp
push
shll
inc
pop
pop
mov
pop
or
add
mov
cmc
mov
lcall
push
std
jmp
inc
sbb
bswap
lock
pop
push
outsl
adc
lret
out
mov
and
or
rcll
aam
out
inc
aad
sbb
pop
mov
nop
das
stos
push
add
dec
adc
jnp
cmc
rcl
loopne
xor
inc
arpl
sub
pop
or
push
test
out
add
or
jl
add
jns
or
pop
insb
xchg
cli
test
ljmp
gs
xor
or
mov
or
sub
shr
jl
sub
ds
stc
add
loop
dec
mov
mov
mov
and
icebp
xchg
not
jle
es
shlb
ljmp
jae
lea
add
lahf
js
popf
push
sub
xchg
lret
jmp
inc
cmpsl
lea
dec
mov
pushf
push
or
in
sub
xchg
adc
in
or
add
xlat
loop
mov
jbe
pop
xchg
inc
or
or
ds
jl
adc
pushf
xor
inc
out
sbb
add
test
xchg
xchg
iret
shll
jecxz
inc
stos
sub
sub
cmp
mov
pop
clc
xchg
mov
icebp
loopne
jo
cmp
cmp
sub
add
gs
je
push
fdiv
add
push
and
xchg
lret
push
xor
ds
nop
jp
or
push
dec
movsl
adc
aad
push
out
pop
rcll
inc
xchg
lock
rcrl
mov
ret
sbb
jecxz
call
jmp
mov
cmp
lods
fsubr
aam
mov
pop
movl
jle
addb
sbb
fsubrs
mov
mov
pusha
sbb
xor
lcall
push
orl
stos
popa
dec
jmp
jno
lds
icebp
jecxz
rcll
mov
push
xchg
bound
rclb
sbb
pop
xor
inc
pop
inc
and
insl
inc
add
pop
dec
cmp
add
xor
or
test
xor
addr16
add
pop
test
cli
xor
loope
shll
xchg
fistpl
push
icebp
pop
testb
xor
mov
push
es
adc
adc
icebp
pop
mov
jbe
mov
pop
mov
and
push
inc
adc
xor
sahf
mov
sbb
mov
test
inc
pop
mov
add
inc
inc
das
mov
cmp
cmpl
mov
repnz
rcr
loop
sarl
inc
mov
jg
gs
clc
xor
pop
div
sbb
adc
scas
mov
or
jecxz
test
es
adc
cmc
pop
add
pop
fimuls
clc
sahf
push
lcall
mov
or
xchg
adc
jmp
stos
push
test
cmc
jo
dec
push
loope
icebp
bound
add
or
and
xor
lods
cld
loope
pop
addr16
rol
pop
push
mov
jmp
loop
iret
icebp
mov
jmp
pop
js
and
push
cmp
rcl
sarb
add
mov
jmp
lds
lods
in
jmp
mov
leave
or
ja
aas
addb
jbe
outsb
loop
dec
jns
hlt
ds
cmpl
subb
fcoms
and
movl
adc
jo
dec
push
push
out
shlb
test
sub
inc
out
xor
imul
shll
fcompl
nop
cmpb
sub
pop
mov
pop
and
mov
andb
fistpll
das
les
ret
xchg
mov
fcoml
add
ficoml
and
xor
pop
add
pop
push
pusha
mov
sbbl
and
push
aam
or
pop
push
push
cmp
rcrl
pop
or
mov
stos
pusha
xchg
jae
ds
dec
cli
and
xchg
int
push
mov
push
insl
dec
mov
add
outsb
xor
ficoml
test
pop
cwtl
push
and
sub
das
fsubrs
or
lcall
cmp
pusha
mov
pop
add
or
pop
sbb
dec
mov
iret
pop
xorl
mov
adc
add
and
aad
add
mov
or
sbb
bound
div
add
adc
cmc
sub
jmp
fwait
imul
xor
push
push
jmp
movsl
rcrb
in
adc
push
xor
jbe
cmpsl
sbb
int
loop
ret
ja
and
push
sbb
dec
xor
mov
movb
jno
shrl
cmp
sub
roll
mov
and
or
or
mov
add
jecxz
and
xchg
or
or
pop
lods
add
pop
cmp
pusha
js
and
push
and
out
sbb
push
cwtl
push
adc
pop
out
mov
and
dec
fptan
cld
loopne
call
neg
sub
xchg
sub
stos
adc
mov
push
sahf
pop
xor
push
jae
lods
jo
or
or
sbb
lea
rclb
xchg
mov
in
aaa
jno
imul
pushf
lahf
add
dec
jae
mov
scas
loope
cmp
mov
xchg
jmp
das
sbb
loop
jne
out
xlat
outsl
movb
arpl
xlat
das
sub
adc
mov
repnz
in
rorl
rolb
movsl
loop
fstpl
dec
gs
add
dec
mov
inc
leave
push
incl
pop
sub
jge
mov
push
mov
add
and
jl
xor
mov
call
inc
jmp
sbb
mov
add
lods
out
and
out
call
push
mov
fs
inc
pop
xchg
cwtl
icebp
jne
jno
sub
ficompl
hlt
cmpsl
shrb
pop
xorb
push
mov
or
pop
push
push
inc
shlb
loopne
pop
pushf
dec
lods
sbb
cld
add
sub
fldenv
sarb
jl
jnp
test
sbb
fidivs
push
cmc
in
nop
rcrb
ljmp
xchg
push
je
int
jo
pusha
sbb
aas
dec
outsl
xchg
sub
jmp
movsl
out
mov
call
jnp
jo
int
in
ficomps
inc
mov
mov
fsubs
pop
mov
push
sub
add
cmpl
clc
pop
outsl
add
iret
jmp
inc
js
lds
loopne
pushl
sbb
sahf
leave
pusha
sub
loopne
or
jg
ss
mov
add
adc
jbe
nop
ss
std
sbb
dec
and
aas
rorl
pop
adc
jbe
push
add
sbb
push
insl
sbb
popf
or
add
js
sub
stos
dec
mov
xchg
adc
je
and
shll
cli
adc
pop
add
push
add
jae
adc
das
pop
fcmovu
or
nop
sub
add
cmpsb
mov
pop
cmp
xor
iret
push
stc
addb
fcomip
call
inc
or
xor
lea
sub
xchg
add
or
xor
pop
dec
push
dec
call
inc
xchg
push
mov
rcll
cmpsw
repz
imul
adc
pushf
and
std
fmull
dec
ficoml
jge
lret
int
and
inc
push
jno
jne
stos
cmp
ds
call
iret
jle
push
bound
imul
pop
mov
out
mov
movb
lods
dec
sub
out
out
lds
les
mov
mov
or
or
pop
fildll
inc
and
jbe
inc
mov
jp
sub
add
clc
mov
jmp
cmp
movsb
adc
xor
push
push
fdivrs
xchg
xchg
daa
lcall
push
lret
jns
ja
pop
adc
test
or
pusha
jno
push
jmp
cmpsb
imul
call
lret
mov
ret
es
jne
add
mov
out
jns
scas
cmp
push
fldl2t
xor
cmp
ljmp
rorb
jbe
out
adc
jbe
mov
lds
and
notl
icebp
add
inc
jmp
sarb
lods
ss
popf
jnp
mov
jne
out
fistl
js
mov
jg
or
fimull
push
push
shrb
add
in
push
cmp
mov
xor
mov
adc
pop
popa
ret
inc
movsb
pusha
pop
movsl
mov
add
fisubrl
push
jecxz
sbb
shl
add
or
and
je
outsl
mov
sub
sbb
test
or
aam
push
push
or
fst
inc
xor
pop
ja
sub
sub
xchg
sbb
imul
lret
jnp
xor
inc
jae
pop
add
mov
inc
add
ss
pop
jge
adc
loop
jns
mov
mov
add
loop
jbe
xor
sub
jg
add
cs
cmp
inc
loopne
cli
xchg
fimull
sub
subb
int
mov
movsl
nop
adc
jle
lds
sarb
xchg
add
dec
add
stos
add
mov
mov
xor
cltd
xchg
gs
xchg
jle
into
ja
push
rolb
nop
adc
cld
sub
rclb
out
enter
pop
sbb
pushf
pop
cld
test
cwtl
fcmovne
inc
or
dec
inc
jae
pop
push
cmp
fildl
push
cmp
pop
int
dec
lahf
out
add
cli
mov
xor
sub
jmp
vcvtsi2sd
add
jo
xchg
push
pushf
pop
xchg
pop
out
fs
rolb
dec
sbb
ljmp
or
push
push
and
insl
insl
adc
inc
cmpl
mov
lea
mov
clc
adc
sub
inc
daa
add
add
push
inc
adcb
icebp
xor
sbb
iret
roll
inc
test
ljmp
push
ljmp
test
mov
push
pop
mov
jg
iret
and
lods
jno
mov
lods
push
bound
test
xorl
cmc
das
out
xor
idivl
orb
pushf
jne
insl
xchg
cwtl
or
outsb
adc
jle
mov
push
push
or
pop
icebp
xor
push
mov
loop
daa
jb
loopne
in
push
xchg
xrelease
ficompl
inc
cmp
das
xor
sarb
mov
sub
das
sub
add
fistpl
mov
movsb
insb
cmp
dec
mov
nop
mov
xor
pop
add
jns
out
cmp
cmp
add
push
pop
mov
dec
std
mov
andl
add
cmpl
addr16
insl
pop
mov
neg
les
stos
mov
dec
loop
mov
push
cld
rorb
add
out
add
jecxz
shr
jmp
or
jmp
outsl
ret
outsl
sbb
sub
fsubp
push
push
or
sbb
icebp
push
pop
push
lock
pop
add
andb
mov
incb
mov
mov
insb
dec
xor
jge
sub
in
js
in
jge
sbb
pop
jle
popl
stc
cmp
sysexit
std
or
arpl
jno
testl
inc
mov
idivl
push
xchg
out
and
xor
je
repz
push
sub
mov
inc
in
or
cmp
clc
or
jmp
inc
pop
cmc
xchg
lods
mov
dec
push
mov
les
cld
leave
lcall
mov
cmc
mov
adc
cmp
stos
sub
shll
sub
rcl
cmp
adcl
arpl
aaa
out
push
lea
dec
xchg
push
psrlq
xor
cmpsb
rcrb
add
inc
adcl
and
sbb
push
jne,pt
cld
xor
or
movsb
push
add
mov
cmp
in
dec
nop
sub
imul
sub
mov
sbb
cld
fwait
and
movsb
lods
add
orb
lds
js
add
pop
sti
cmp
daa
push
jge
mov
pop
notb
aas
in
push
pop
pop
push
mov
and
or
mov
shlb
loop
fstl
xchg
mov
arpl
dec
mov
aaa
and
or
jmp
sbb
add
pop
clc
xchg
add
add
test
sub
gs
repz
imul
test
clc
es
repnz
push
sub
call
out
add
ss
dec
pop
notb
test
sub
outsb
repnz
push
and
sbb
push
dec
mov
push
movsl
std
inc
fisttps
in
sbbl
daa
dec
adc
movb
jmp
add
ljmp
xor
je
ds
cld
pop
dec
or
mov
or
mov
or
fisttpll
in
sarb
inc
das
add
adc
clc
pop
jnp
std
xor
dec
cmc
push
jne
jo
xlat
loop
pop
adc
gs
test
or
jns
in
pop
out
rcrl
add
sbbb
mov
jmp
xor
add
sub
shl
add
outsl
lahf
fists
dec
push
inc
loope
mov
sbb
int
push
dec
jmp
adc
lret
xor
inc
ljmp
push
dec
loopne
inc
pop
add
mov
jecxz
or
dec
testb
lret
add
or
mov
and
aas
mulb
xor
rcrb
pop
repnz
sub
push
faddl
inc
ja
pop
xor
das
mov
and
dec
aas
mov
jmp
into
xor
je
xchg
lock
in
int3
imul
inc
cmp
pop
repz
mov
fnsave
scas
jl
or
push
mov
adcb
scas
pop
aad
incb
lcall
test
add
push
dec
rolb
xor
subl
lea
and
popa
cld
dec
leave
push
jb
jge
add
sub
rorb
imul
std
pop
sti
scas
gs
cmp
aas
cld
rcl
mov
lcall
and
mov
lods
das
pop
ret
enter
mov
or
adc
cmp
rcr
push
adc
adc
mov
and
imul
push
sub
add
cmp
sub
mov
mov
xor
pop
mov
add
jmp
shll
imul
add
mov
mov
pop
or
push
rorb
pop
dec
cmp
in
mov
mov
es
daa
enter
pop
xchg
pop
jns
mov
repnz
dec
test
adc
gs
push
or
and
popf
jl
outsl
aas
test
or
add
out
push
push
xchg
test
or
mov
mov
adc
dec
test
cmp
mov
adc
push
cmp
sub
ficoms
test
rcll
pop
inc
stc
loop
scas
xorl
inc
push
lcall
fsubr
bound
bound
pop
lock
repz
les
adc
sub
nop
mov
mov
outsb
negl
cs
les
inc
pusha
mov
sub
mov
ja
iret
and
xchg
jp
outsb
insb
jle
fs
aaa
scas
jmp
gs
lahf
jae
gs
loope
aas
test
enter
mov
cmpsb
fdivs
pop
adc
movsl
mov
push
mov
add
out
xor
push
negl
ss
or
repnz
cmp
pop
les
ret
pop
data16
pop
push
mov
sub
push
push
mov
adcl
pop
adc
je
mov
xor
mov
jge
loopne
clc
add
xchg
jp
loopne
andl
pop
shl
jl
mov
mov
clc
jg
push
pushw
mov
mov
roll
jne
cld
push
push
cs
loope
xor
stc
adc
mov
je
adc
and
adc
add
dec
xor
jns
jns
cmp
jl
sub
mov
inc
ljmp
lret
dec
inc
scas
sub
pop
adc
adc
es
push
pop
jmp
loopne
xor
mov
jmp
hlt
sub
cmp
aad
mov
insl
cmp
or
dec
enter
bound
in
mov
hlt
aas
movsl
jo
jp
push
mov
subb
mov
icebp
dec
inc
jmp
ficoms
lods
es
and
adc
shl
rolb
ds
lret
inc
adc
cs
mov
jmp
add
add
sbb
xchg
or
cmc
loope
inc
leave
push
fiaddl
add
xor
dec
jb
add
sub
mov
add
or
cwtl
mov
mov
mov
loopne
mov
fwait
adc
repz
mov
sub
sub
popa
sbb
rcr
test
ljmp
jmp
pop
ljmp
cs
dec
xchg
inc
inc
aas
lods
or
inc
testl
xor
xchg
dec
xchg
ret
pop
xor
mov
sbb
sbb
js
stos
out
jmp
push
sbb
scas
pop
cmp
sbb
je
mov
aaa
pop
pop
orb
jb
pop
sbb
rcrb
adc
cwtl
and
pop
out
cmpsl
repnz
lret
pop
cmp
push
out
das
dec
movsb
pushaw
lret
repz
or
mov
push
inc
add
out
jecxz
fmuls
dec
pop
push
out
push
xor
ss
mov
push
in
out
pop
push
jmp
pop
loop
or
or
pop
xor
dec
lock
and
cwtl
cmp
inc
xchg
inc
add
xor
push
dec
dec
dec
or
imul
je
mov
insl
sub
jo
out
flds
or
xlat
xchg
xor
cli
or
cld
insb
cltd
dec
mov
inc
and
mov
add
insl
fdivrs
sub
or
int3
cmp
dec
seta
dec
add
mov
xor
out
mov
dec
in
fnsave
and
mov
jecxz
pop
iret
loope
das
mov
jo
test
add
xor
jg
sbb
clc
bound
jmp
jbe
cmp
push
jno
insb
aas
inc
test
dec
sti
loope
sub
push
xchg
out
and
data16
testl
mov
ffree
or
fs
pop
inc
or
adc
xor
add
sbb
xorb
jbe
adc
imul
out
inc
pop
cmp
nop
mov
test
jns
sbb
inc
push
push
hlt
push
das
mov
shr
sbb
fldl
shrb
icebp
rcll
pop
ds
out
mov
adc
mov
jp
dec
xchg
mov
add
inc
mov
inc
pop
pop
push
pop
in
lds
mov
or
fld
jno
add
inc
and
ficomps
jle
into
jae
pop
out
or
cltd
adc
dec
sub
ror
stos
pop
std
pop
add
or
mov
faddl
dec
and
push
cld
mov
in
rorl
mov
lret
jp
loopne
adc
pop
data16
or
in
mov
es
inc
ja
dec
jle
dec
pop
xchg
divl
xor
adc
shlb
ret
es
pop
mov
add
push
lahf
pusha
lds
lret
in
add
scas
add
outsl
adc
add
std
or
and
or
and
add
xchg
dec
jecxz
xor
xchg
mov
jmp
mov
sahf
dec
andb
lock
je
xor
add
jmp
cmp
ljmp
mov
and
mov
mov
or
cmp
sub
fcmovb
adc
jl
stos
add
push
mov
clc
jp
test
je
and
fwait
xlat
xor
mov
and
hlt
push
xor
push
jl
sbb
pop
jae
jmp
cmp
ljmp
sub
sbb
insb
cmpb
push
mov
sbb
add
icebp
pop
pusha
in
jbe
mov
xor
cmc
add
cmp
push
xchg
xchg
add
add
jge
sbb
das
push
jno
add
or
outsb
sub
add
enter
adc
mov
pop
test
sub
lds
mov
xor
inc
sub
jne
mov
pop
dec
adc
adcl
xlat
dec
ss
cs
push
pop
inc
inc
add
ret
sbb
push
ljmp
hlt
pushf
scas
push
lock
call
ficompl
dec
idiv
cmp
dec
mov
jmp
sarl
xor
cmc
pop
adc
push
mov
cmovp
insl
pop
inc
frndint
int3
pusha
or
cmp
shlb
add
sub
xor
fstl
xor
dec
mov
pop
pop
dec
and
es
or
pop
rorb
lahf
pop
inc
movb
xchg
dec
xchg
pop
aad
mov
inc
cmp
or
push
loop
lret
mov
insb
je
xor
push
adc
push
add
std
push
pop
dec
sub
adc
add
mov
aaa
mov
xchg
push
fists
imul
leave
ja
enter
cmp
es
mov
mov
mov
push
xchg
mov
adc
add
adc
ffree
mov
inc
mov
add
daa
xchg
hlt
pop
and
lods
lahf
and
mov
cmp
sub
cli
ja
mov
lock
fldl
in
lret
push
in
insb
sub
mov
adc
mov
jnp
out
dec
adcb
add
push
in
add
enter
add
negl
and
lcall
cmpl
mov
rorl
aad
pop
mov
sbb
outsl
or
sbb
fmul
pop
pop
cmp
je
push
pop
mov
dec
jp
pusha
in
and
xchg
out
adc
lds
pop
and
and
sbb
push
popf
sub
outsb
in
jg
out
lahf
loop
pop
push
leave
lahf
pop
imul
ret
loopne
sbb
or
mov
push
shl
mov
mov
mov
mov
jle
cmc
xchg
in
jecxz
js
pop
clc
push
addr16
or
ja
std
add
jmp
out
jl
jmp
push
not
in
dec
xchg
jmp
adc
push
movsb
add
jo
sub
inc
jmp
pop
xor
or
je
jmp
xchg
dec
cmp
pop
pop
mov
mov
stc
cmp
mov
add
cmp
and
push
rorb
jmp
push
test
mov
xor
out
jmp
mov
mov
hlt
jg
push
in
jbe
add
out
nop
push
mov
test
mov
dec
inc
sub
pop
les
cld
rolb
test
cli
insb
mov
and
dec
add
push
shrb
jne
outsl
or
sbb
sbb
pop
mov
outsb
cmpb
push
ljmp
jmp
xor
xor
pop
jo
and
jl
movsl
out
out
pop
xor
js
fstps
sub
lret
adc
mov
xchg
push
mov
mov
testl
jl
sub
lock
dec
pop
inc
mov
outsb
sbb
xabort
rcr
adc
push
pop
mov
xor
add
xchg
inc
mov
dec
add
pop
popa
add
sub
jl
stc
or
adc
out
arpl
sub
xchg
and
daa
push
sar
nop
cltd
mov
lods
lret
lcall
xor
mov
push
inc
add
repz
icebp
nop
jg
mov
and
jge
aad
std
dec
or
cli
xchg
cli
xchg
cwtl
xlat
daa
pop
sbb
mov
stc
dec
dec
push
sub
es
mov
push
lret
rcl
jmp
mov
dec
mov
ficompl
adc
xor
inc
jns
mov
add
jmp
pop
add
xor
data16
addb
aam
sub
ret
inc
mov
fdivrs
stc
jp
pop
pusha
cltd
rolb
jmp
mov
shrb
js
in
adc
and
lods
data16
dec
cli
testl
cmc
addb
je
lock
add
push
cmpsl
push
lock
pop
xchg
ja
mov
mov
lds
aam
add
xor
shrb
fdivrs
fldl
mov
sub
lods
xor
push
sar
mov
cs
ja
push
jmp
mov
push
push
mov
xchg
inc
pop
add
pushw
or
xor
sub
jo
mov
jns
sbb
cmc
mov
jo
movhps
dec
inc
ja
jmp
cs
dec
or
sarb
push
cli
mov
mov
mov
jecxz
add
sub
pop
push
push
insb
jmp
in
dec
lock
jo
or
adc
leave
pop
repnz
or
push
sbb
push
fnstenv
stos
or
and
arpl
lea
loop
adc
ret
inc
out
test
xor
xor
gs
pop
push
stc
add
sbb
lcall
mov
addr16
mov
add
sub
out
push
insl
or
mov
add
xor
push
or
int
mov
loope
out
xchg
xor
pop
sbb
fwait
or
sbb
outsb
in
es
and
jne
adc
ljmp
loope
push
push
jmp
adc
xchg
dec
dec
push
test
xorb
imull
pop
dec
daa
js
daa
or
push
sahf
pop
mov
rclb
mov
pop
sbb
push
or
ja
cltd
jmp
scas
int
dec
add
inc
je
inc
pop
or
mov
dec
fcoml
push
pop
scas
lret
addr16
pop
push
mov
mov
out
push
mov
in
xchg
shr
or
push
xchg
push
neg
jne
xchg
jae
cmp
push
or
out
push
rolb
push
cwtl
dec
jmp
sub
int3
mov
lods
addr16
ja
shrl
xlat
sahf
pop
pushf
cmc
mov
sub
cmp
dec
jns
das
stos
sub
push
mov
lods
gs
nop
adc
rorl
pop
sub
js
mov
pop
push
pusha
mov
pop
insb
mov
add
sti
jmp
arpl
mov
rcr
jl
lock
sbb
je
push
jne
icebp
inc
sbb
cmp
mov
add
cmp
or
inc
mov
mov
mov
mov
adcl
scas
out
ds
xchg
dec
inc
shrb
adc
in
mov
cmp
pop
sub
sub
xchg
sub
scas
out
sarl
mov
push
adc
aam
pop
lods
enter
push
dec
imul
out
or
inc
xchg
adc
xor
xlat
loopne
push
or
jmp
inc
hlt
dec
fs
adc
lock
pop
cmp
fstl
push
cmp
jmp
outsb
mov
cmp
xor
jmp
addr16
xchg
xchg
sti
decb
cltd
push
mov
sahf
nop
xchg
jb
and
call
es
pop
add
out
cmp
mov
mov
mov
cmc
jle
jo
andnps
push
jp
inc
shlb
ljmp
pop
inc
arpl
lods
dec
pop
xchg
mov
daa
adc
sub
mov
cmp
sbbb
or
test
std
std
push
mov
dec
dec
xchg
push
in
add
cmpsl
mov
push
or
std
pop
pop
repnz
xchg
jno
ja
roll
push
std
mul
movsb
inc
loop
adc
pop
cwtl
test
xor
push
sbb
andl
repnz
jmp
ret
mov
cmpsb
aas
lods
imul
popa
sub
hlt
mov
push
hlt
inc
and
add
ret
test
ds
pusha
aad
in
div
inc
or
xor
fsts
pushl
push
dec
inc
aas
adc
sub
push
jp
mov
sbb
pop
dec
xchg
rorl
movl
jne
xor
ja
mov
jecxz
inc
pop
shll
insl
adc
xor
subb
dec
arpl
push
pushf
sbb
aaa
dec
sub
test
jmp
sahf
or
or
sub
cmp
ljmp
pusha
pop
dec
add
popa
add
sub
mov
sub
sbb
adc
outsl
xor
or
pop
jmp
addr16
cmp
fildll
cli
out
dec
sub
cmc
pop
das
pop
fistps
popl
clc
movsb
mov
scas
adc
add
nop
sub
ljmp
sbb
call
lods
add
orb
ds
jmp
xor
inc
clc
dec
std
sub
repnz
ss
xchg
jmp
call
xor
test
jmp
dec
fucomip
cwtl
dec
xchg
or
dec
and
out
bound
ds
ljmp
std
out
jne
mov
and
daa
add
push
test
or
mov
shlb
mov
das
popf
jno
movsl
sbb
jbe
mov
add
lahf
lahf
call
push
sbbb
jmp
add
inc
pop
neg
jbe
cltd
mov
push
xor
sub
dec
pop
dec
and
loope
pusha
lods
mov
sub
call
pop
jns
loop
ret
push
out
adc
and
sbb
xchg
mov
xor
mov
mov
arpl
pushf
sub
or
inc
mov
jl
cli
pop
std
mov
ljmp
std
test
std
shlb
add
sub
cmp
jmp
pop
mov
pop
jg
xor
pop
push
pop
or
in
fs
cmp
loope
inc
jmp
scas
pop
mov
xchg
jb
push
pop
xor
shll
and
jp
aas
or
pop
mov
push
pop
std
xchg
popa
xchg
jge
inc
jmp
jl
mov
popf
loope
pop
lret
jbe
sub
jb
cwtl
jo
js
cvtps2pi
repnz
inc
or
ret
jne
andl
popf
pop
mov
jmp
pop
pop
ja
pop
nop
aaa
or
push
xchg
inc
mov
sub
ror
dec
ret
dec
imul
imul
mov
pop
add
xlat
fisubrs
jb
clc
test
inc
and
mov
mov
xchg
and
or
and
pop
shll
dec
lret
and
sub
test
jl
xorb
add
fstl
xorps
jne
les
sarl
cmpsl
sub
insl
push
mov
pop
dec
jecxz
xlat
mov
pop
xor
pop
push
sub
push
cltd
ret
xchg
xor
insb
cmc
testb
cmp
xchg
push
mov
sahf
enter
add
ds
and
or
push
pop
add
sbb
xchg
xlat
push
mov
jmp
xor
jg
xor
or
cwtl
nop
cpuid
sub
imul
pop
pushf
test
add
sti
mov
jg
fadds
inc
mov
cmp
jge
icebp
sub
push
les
arpl
push
cmp
push
pop
pop
push
cmc
jo
icebp
sarb
pinsrw
imul
push
aad
test
jnp
mov
add
jne
sub
sbb
jmp
negl
fnstcw
les
pop
add
push
sbb
pop
jmp
jge
clc
jmp
aas
neg
or
mov
repz
enter
or
mov
enter
sub
lahf
or
pop
inc
cld
cmp
shlb
xchg
in
adc
add
cs
add
mov
mov
jne
scas
mov
xchg
cmp
sub
xchg
pop
add
cwtl
push
mov
cwtl
mov
jmp
int
test
and
inc
mov
mov
pop
jle
sub
add
shr
inc
pop
pop
sti
lret
jl
mov
push
push
jnp
clc
xorb
stc
push
pop
dec
out
xchg
sbb
xor
pop
ljmp
je
orl
or
pop
imul
sbb
pop
push
icebp
push
push
mov
dec
int3
aad
and
sub
and
cmp
inc
jmp
inc
in
loope
inc
mov
xchg
sti
adc
aad
or
adc
sti
adc
dec
movl
push
push
push
lret
push
cmpb
or
mulb
notl
test
les
scas
cmp
add
jmp
outsl
stos
cmp
xchg
or
push
push
dec
neg
add
push
pop
shrl
jns
add
iret
jp
or
xor
pop
push
sub
and
xchg
mov
das
xor
fidivl
mov
addb
sbb
push
xor
add
icebp
jo
jl
loope
inc
push
lcall
and
push
mov
xor
gs
nop
xchg
cmp
add
push
dec
adc
push
add
enter
sbb
inc
push
mov
push
mov
and
pop
in
inc
adc
rcr
push
test
cmp
add
imul
cmp
pop
ss
push
loope
out
xchg
testl
pop
fnsave
andb
shrl
add
inc
mov
fwait
jg
dec
inc
ffreep
in
jb
shl
rorl
cwtl
dec
lahf
pop
and
mov
mov
loopne
insb
imul
fcompl
or
adc
inc
push
and
pusha
cvttps2pi
and
in
push
mov
mov
cmpb
inc
pop
mov
pop
ljmp
mov
imul
into
les
sub
push
adcb
push
pop
pop
pushf
addl
lret
loop
cmpsl
leave
fbld
cld
or
aad
sub
pop
pop
inc
in
mov
inc
sbb
test
dec
pop
jecxz
cmp
jno
add
popf
inc
ljmp
add
out
mov
add
jg
nop
inc
cmpsl
icebp
mov
xor
es
andl
sbb
add
cmc
stos
pop
daa
shll
cltd
add
es
push
inc
cwtl
stos
xor
xchg
add
add
xlat
rcll
mov
test
mov
ds
mov
inc
adc
outsb
jbe
pop
inc
cli
je
mov
repz
shrb
nop
or
aad
xchg
pop
outsb
cmp
push
xor
test
adc
dec
xchg
add
adc
sbb
arpl
mov
jle
ret
jg
pop
ret
arpl
out
dec
hlt
mov
add
xor
sarb
loop
pop
push
and
cld
sbb
mov
xor
hlt
or
clc
add
cmp
iret
outsl
xchg
mov
push
popf
add
add
adc
mov
add
xchg
inc
cwtl
push
mov
or
pop
aaa
loope
and
xlat
pop
das
pop
jnp
fldenv
outsl
mov
xchg
lds
in
pop
jo
inc
push
pusha
inc
mov
jg
cwtl
ud2
ret
stc
add
push
mov
pop
mov
in
fmulp
ret
mov
and
inc
add
rolb
sub
jno
jmp
mov
jbe
dec
loop
lcall
arpl
outsl
sbb
pop
mov
daa
inc
fistl
sbb
sub
or
fisubs
fcompl
icebp
cmp
inc
in
rol
fdivs
ja
mov
and
dec
or
adc
pusha
out
sbbl
mov
push
xchg
icebp
push
icebp
aad
das
popf
scas
outsl
aas
sub
out
push
adc
subb
fwait
or
push
or
push
fimuls
ret
inc
add
neg
and
cmp
insb
or
jmp
imul
push
idiv
ja
cld
xorl
push
jmp
cmp
jle
add
gs
xor
arpl
fldenv
push
es
push
xor
test
add
icebp
inc
lods
je
inc
lea
xor
push
popf
mov
aaa
cwtl
ret
dec
test
push
add
or
syscall
jnp
dec
jmp
fistpl
int
inc
fs
subl
out
xlat
mov
sub
mov
push
ret
push
pop
ret
imull
sub
stos
sbb
xor
lock
sbb
pop
sub
inc
xor
nop
mov
sub
cld
les
jmp
push
arpl
inc
sub
sbb
cmp
mov
neg
shl
or
inc
add
jge
lret
dec
repnz
or
push
sub
push
mov
add
mov
jmp
fucomi
add
and
sbb
add
out
daa
leave
cmp
fs
adc
arpl
test
sbb
or
and
loope
add
add
push
jno
add
lret
test
add
pusha
inc
xor
shl
add
xor
rcr
subb
sub
inc
into
je
das
imul
movsb
roll
sbb
repnz
adc
fsubp
xchg
pop
sub
into
jmp
inc
mov
sti
inc
xor
pop
cwtl
and
add
pop
pop
pop
mov
mov
sub
lock
inc
jo
pop
stc
mov
rclb
xchg
test
std
push
movsb
xchg
cmpsb
mov
jb
ja
jmp
or
pmuludq
add
mov
addr16
sbb
cs
jmp
dec
stos
push
pop
adc
clc
dec
popa
xchg
pop
inc
sub
filds
test
push
jmp
xchg
lds
mov
loop
popf
add
push
sbb
jp
call
and
lret
clc
mov
in
or
pop
cwtl
lret
and
sbb
adc
movsl
pop
cmp
fmuls
jge
insl
or
fucompp
mov
iret
ljmp
sub
push
cmp
and
jmp
iret
sbb
fs
jmp
add
mov
lds
push
push
js
add
sub
inc
hlt
lcall
loopne
push
push
sub
inc
popa
pop
jmp
push
add
jns
ds
data16
jmp
popa
dec
push
xchg
jg
cmp
test
adc
pop
andl
into
imul
mov
or
hlt
push
or
ss
jnp
bound
pop
test
pushf
daa
loope
lods
rorb
xchg
push
inc
sbb
pop
and
stos
fcomps
sbbb
sarl
and
push
nop
test
adc
xchg
stos
repnz
fistl
enter
xchg
pop
cwtl
stos
cmp
movlps
out
popf
xchg
add
cmp
or
push
push
stc
cmpsl
ror
and
scas
push
fs
lock
lods
add
repnz
xor
push
adc
aad
dec
dec
gs
sahf
inc
xchg
sub
imul
rorb
add
pop
add
mov
pop
add
jmp
dec
or
jmp
adc
adc
pop
sub
xchg
push
sub
mull
mov
test
push
popf
adc
test
ret
negb
or
clc
pushl
aad
mov
xor
int
jmp
push
pop
inc
sub
sub
sub
push
sub
cli
jnp
ret
arpl
jl
push
push
fidivl
xchg
stc
inc
ret
aad
jmp
lds
mov
fmuls
mov
sub
or
test
mov
lods
or
or
aad
fcoms
dec
push
or
push
pop
sub
addr16
popa
les
scas
sub
stc
pop
ljmp
xlat
xchg
jle
rcrl
mov
push
rolb
add
movsb
push
sub
rolb
sbb
push
xor
jmp
mov
mov
mov
sub
mov
stos
cmp
mov
mov
add
jmp
sbb
sbb
sub
and
mov
jmp
jp
mov
sub
in
shl
xchg
push
popf
inc
push
rclb
dec
mov
idivl
test
in
inc
add
mov
icebp
orb
xor
aad
in
xchg
pushf
and
pop
push
jl
xchg
int
cs
xchg
push
mov
jae
xor
sbb
xchg
daa
in
mov
lahf
mov
dec
sub
popa
jb
pop
in
and
mov
cltd
mov
pop
popa
xor
js
push
sarb
sub
mov
lods
cmpl
inc
push
mov
mov
jmp
imul
cmc
dec
or
dec
ljmp
adcb
jo
and
aad
repz
pop
and
mov
dec
aam
lcall
test
repz
dec
pop
sub
nop
xchg
mov
lods
sbb
jmp
cs
in
sub
int
or
add
and
shl
mov
clc
cmpsb
nop
sbb
xor
adc
pop
insb
pop
hlt
imul
xchg
or
xchg
test
add
hlt
pop
add
mov
mov
out
add
inc
push
adc
test
mov
pop
mov
test
mov
cli
inc
sbb
push
cmp
or
xorb
inc
test
pop
jle
ja
rolb
xchg
add
shr
sbb
pop
mov
jle
adc
cmc
push
mov
pop
loopne
push
bnd
loop
lahf
lcall
push
inc
loop
cmc
arpl
lods
or
pop
jge
lea
mov
neg
inc
inc
jns
xchg
cmp
jmp
sub
cmp
push
movsl
mov
jmp
insb
mov
mov
push
xor
mov
les
call
in
rorb
jo
aam
or
lds
lea
push
mov
imul
ljmp
adc
mov
mov
push
subb
jmp
inc
or
mov
pop
rclb
cmp
or
mov
decl
test
pop
das
mov
aad
jp
es
out
or
push
std
mov
jmp
mov
cli
cs
xor
mov
add
adc
fwait
mov
add
add
pop
mov
insb
push
jmp
lods
push
fs
adc
dec
mov
mov
loope
mov
pop
icebp
addl
outsl
push
nop
push
and
and
add
ljmp
push
mov
hlt
fldl
rcrl
push
adc
dec
icebp
jmp
pop
cmc
rcrl
cli
arpl
push
flds
jg
and
push
das
or
lds
cld
push
push
das
or
bound
psubsw
cld
sub
push
adc
jb
inc
mov
or
mov
mov
rcll
lcall
outsb
hlt
sbb
sub
and
scas
shlb
mov
push
repnz
mov
mov
cmp
enter
push
rorb
jbe
std
loope
mov
ljmp
cmp
ja
add
shl
or
push
and
das
inc
outsb
sarb
ja
shlb
cld
lds
mov
sub
sub
push
xor
inc
gs
mov
fwait
sbb
dec
push
dec
fbld
or
es
mov
pop
insb
nop
add
shll
jge
ficoms
out
sti
fs
xor
sti
int
aas
test
xchg
movsb
xor
adc
dec
sbb
cmpsb
adc
and
jns
pop
call
push
dec
pop
cmp
pop
dec
int
stos
jp
add
jmp
push
or
imul
sbb
sbb
adcb
mov
cmp
pop
stos
pop
inc
adc
jmp
lock
and
pop
ss
jp
sbb
mov
rcrl
mov
push
jmp
dec
jp
bsr
dec
aas
int3
iret
jmp
fs
add
adc
jmp
imul
sub
or
cmpsl
pop
xchg
out
jmp
out
push
rolb
dec
add
pop
test
mov
shlb
pop
sub
cmp
imul
aas
add
imul
xchg
jo
inc
dec
cld
pop
mov
std
subb
push
into
enter
sbb
xor
xlat
mov
popa
das
jbe
add
inc
sbb
xor
clc
pushf
jnp
sub
ret
and
cmp
bound
jmp
fstpl
jmp
adc
adc
dec
insl
pop
dec
jp
bound
fnstenv
mov
mov
sysret
adc
push
push
shll
pop
jp
lods
dec
outsb
sub
loop
pop
add
xchg
and
pop
sti
sub
add
or
adc
xchg
jae
push
mov
mov
push
mov
sbb
sarl
popf
sbb
cmc
sub
add
ret
leave
lret
hlt
repz
sub
push
dec
jp
inc
in
lret
dec
hlt
fiaddl
in
jo
fiaddl
and
sub
test
fimuls
bound
flds
repnz
insb
lahf
jne
in
or
pop
adc
daa
nop
inc
shl
add
movb
imul
mov
shl
sub
adc
push
inc
or
mov
adc
sub
fs
jmp
test
or
add
sarb
xlat
and
xchg
movsl
dec
adc
jge
add
inc
adc
or
jmp
sbb
pop
xor
mov
aam
imul
fstpl
xor
test
xlat
popf
out
and
sbbl
cs
cli
mov
pusha
mov
inc
and
negl
scas
inc
and
add
jmp
xchg
sbb
pusha
dec
ljmp
sub
jp
add
pop
cmpl
or
jo
inc
mov
push
leave
pop
cmp
mov
mov
pop
insb
pushf
and
adc
pop
push
add
and
adc
xor
inc
add
mov
jbe
test
shrb
ljmp
movsl
fstpl
daa
xchg
cmp
pop
and
push
sub
or
sbb
pop
jno
loop
cwtl
push
stc
fs
push
inc
and
sub
mov
jae
cmpsl
mov
pop
or
and
loopne
sub
pop
xchg
mov
jmp
jge
jge
or
push
daa
pop
xor
ja
pop
mov
loope
push
loope
sahf
add
push
shll
and
or
mov
enter
jecxz
adc
fnstenv
dec
xor
adc
add
andb
add
lahf
jo
dec
pop
stos
xor
sti
mov
ljmp
xor
push
fisttps
mov
repnz
mov
fisubrs
repz
inc
xor
jo
shl
push
mov
js
cmpsb
ret
lea
loop
mov
test
pushf
icebp
idiv
push
jl
adc
das
or
sbb
dec
addl
cmpsl
sub
jle
dec
push
pop
jp
mov
mov
dec
mov
or
ret
out
pop
cmp
add
push
pop
pushf
dec
push
test
in
cmc
pushf
rcrl
sbb
add
add
out
in
sarb
call
fs
imul
or
shl
add
loop
jbe
pusha
stc
dec
mov
pop
and
cs
es
push
cmp
dec
push
mov
lock
lcall
add
pop
xor
loope
call
das
mov
sub
push
push
pop
mov
int
mov
xorb
fnstsw
lods
loopne
sbb
rcll
test
mov
pushf
repnz
js
jno
testb
mov
repnz
cli
fisubl
out
popa
popa
adc
loopne
pop
fnsave
sbb
ficoms
int
add
add
adc
scas
pop
sub
pop
sub
jb
mov
setg
leave
mov
mov
sbb
jg
notl
sub
cltd
clc
push
add
imul
movb
test
in
push
mov
jb
aad
sbb
add
add
jle
inc
sbb
add
add
mov
rcrl
mov
and
pop
nop
popa
xor
xchg
jg
ds
add
jmp
push
cmc
mov
js
cmp
ljmp
dec
mov
cwtl
mov
mov
bound
jecxz
das
mov
xchg
pop
mov
add
out
nop
dec
loop
sbb
enter
ja
add
inc
pop
dec
test
mov
sub
dec
mov
push
mov
cmpsl
idivb
addb
cli
outsb
dec
shl
cmp
pop
shr
push
xchg
cmp
std
sbb
adcl
ret
jp
jae
in
jbe
aad
xlat
sbb
add
dec
loope
adc
jge
sub
mov
pop
in
sbb
jbe
cmp
jnp
mov
add
aad
add
adc
mov
mov
aad
shrb
sub
push
repnz
test
jmp
inc
inc
push
push
jne
or
sub
addr16
ja
test
pop
cld
lds
lock
jecxz,pt
adc
and
sub
ljmp
pushl
sub
dec
aas
pop
cmpb
imul
les
mov
jecxz
sbb
dec
or
push
daa
icebp
pusha
idiv
mov
push
js
mov
add
mov
jo
sub
or
hlt
mov
orl
sbbb
mov
ret
loopne
add
addr16
shll
jbe
sub
cld
pop
ret
and
jno
ret
mov
jno
aas
test
ja
roll
mov
sti
mov
cmp
fildll
add
mull
mov
loopne
jl
or
dec
or
loopne
cmp
add
in
sub
push
dec
jmp
push
cmp
mov
or
inc
cs
push
push
decb
arpl
int3
add
mov
xorb
mov
pusha
ret
movl
jmp
scas
push
xor
inc
or
adc
adc
aaa
daa
push
mov
fstl
push
xchg
addl
sbb
adc
xor
xchg
cmpl
jnp
mov
test
lcall
js
add
or
imul
add
daa
sub
std
out
jno
not
inc
cld
fiadds
ror
add
mov
and
push
mul
push
inc
jecxz
subb
ljmp
cmp
shll
cli
add
dec
dec
adc
notl
imul
pop
gs
fs
sahf
dec
repz
xor
fbstp
rorl
mov
repnz
dec
dec
es
push
out
or
pop
jb
dec
push
call
mov
pop
sub
inc
ljmp
aaa
jecxz
adc
loope
cld
mov
int3
adc
pop
lahf
adc
mov
int
add
scas
push
rcrl
ja
add
xor
pop
ret
ja
lret
mov
mov
sub
rorl
jo
dec
test
cltd
cmp
mov
adc
xor
std
lods
mov
push
rol
mov
sub
cld
nop
sub
mov
dec
add
pushf
adc
popa
cmp
dec
jmp
dec
push
fimull
sub
xchg
sar
xchg
jmp
sbb
push
sbb
or
dec
dec
clc
adc
sub
cmpsl
adc
xor
insb
add
xor
add
xor
outsb
sbb
or
sbb
cmp
out
mov
sbb
push
nop
dec
add
lock
pop
cltd
movsl
fistpll
push
xchg
scas
or
mov
push
sbb
cmp
or
sbb
jnp
cmpsl
testl
sbb
data16
pop
les
xor
lds
inc
and
mov
pop
sub
add
bound
push
jmp
orl
shrb
pop
sbb
mov
add
sbbb
enter
add
push
mov
jg
clc
push
rol
xor
cwtl
mov
jge
ds
or
js
xchg
stos
jno
es
jae
pop
cmp
out
jmp
mov
mov
sub
aam
loope
add
jmp
jge
sbb
dec
or
sarb
popf
xor
or
inc
adc
xor
aas
or
ss
sbb
andb
push
repnz
addr16
or
mov
adc
adc
lock
add
out
xor
out
stos
je
ret
dec
out
daa
or
pop
xchg
test
enter
mov
adc
dec
add
inc
jge
mov
aaa
ds
aaa
add
sbb
mov
in
mov
stc
xor
jmp
outsb
fucom
jge
xchg
lock
jae
movsl
pop
mov
xor
dec
dec
popa
jbe
inc
insl
sub
divl
add
dec
jg
dec
insb
rolb
int3
call
add
mov
sub
xadd
pop
push
lret
int
mov
loope
and
or
or
jp
mov
mov
inc
icebp
test
jmp
cmpsl
mov
jmp
xchg
jle
push
shrb
sbb
mov
cmpsl
lds
insb
mov
push
lods
add
dec
cs
ds
test
push
mov
sbb
cmp
fnstenv
add
cwtl
push
pop
pusha
and
add
jle
and
dec
inc
shrl
cmpsb
outsl
mov
dec
jns
iret
sbb
shr
not
push
add
mov
cmc
sub
test
xlat
mov
or
lds
loope
enter
mov
out
dec
mov
pop
push
xchg
dec
in
pop
add
mov
and
aaa
jmp
push
or
pop
push
cmpsl
sbb
dec
adc
sbb
xchg
sbb
int
inc
sarb
or
addr16
in
sub
ds
jp
sub
push
in
add
out
loop
jle
sub
js
add
dec
rcr
adc
cmc
dec
add
push
stc
daa
pop
ja
ds
and
fnstenv
lret
mov
mov
rorb
fwait
aam
sub
test
inc
aam
rcll
sub
rorl
addb
jmp
jnp
stc
push
jnp
add
pop
xchg
mov
push
stos
pop
jle
dec
push
popf
pop
call
xchg
add
jp
lea
dec
clc
mov
pop
adc
or
aaa
rcrl
jmp
mov
lahf
push
xchg
test
push
shll
xchg
outsb
mov
call
sti
push
nop
popa
dec
push
in
pop
mov
mov
cld
repnz
into
das
and
pop
int3
inc
push
or
scas
pop
mov
test
or
pop
mov
or
mov
jecxz
add
inc
iret
cmpsl
aaa
out
aas
jae
ds
dec
jmp
pusha
lret
cmp
pop
pop
sbb
xchg
bound
jne
lds
test
xchg
ja
or
adc
out
daa
adc
jmp
jns
jae
mov
mov
nop
pop
or
in
js
iret
ret
dec
mov
mov
jl
fs
mov
push
lds
cwtl
adc
xor
sbb
adc
movsb
or
jbe
push
jmp
dec
ficoml
outsl
mov
push
mov
sub
inc
cli
aas
push
xor
mov
aam
cmp
les
cltd
xorb
and
push
jns
stos
sbb
pop
push
jno
je
mov
xor
shll
popf
jo
sti
add
jecxz
aam
inc
jmp
pop
lea
lods
stos
or
pop
adc
leave
movsb
xor
imul
dec
or
adc
sbb
bound
mov
xchg
mov
jnp
sbb
sub
inc
jb
push
mov
repnz
add
inc
rolb
and
pop
cs
xchg
in
pop
lret
mov
sti
xlat
mov
js
jb
aam
add
or
xor
imul
sbb
fwait
mov
lds
es
int
jne
loop
push
addl
jb
sti
lods
rcrb
and
push
add
and
insb
shl
rcrl
test
sbbl
inc
push
push
add
xor
test
cmp
jp
inc
push
call
jmp
mov
stos
xchg
lea
fsub
pop
push
lea
lock
or
add
sub
cld
cwtl
add
push
loopne
dec
push
or
lods
pop
sub
adc
jmp
push
scas
mov
imul
ja
jp
ficoms
mov
dec
xor
jb
sub
sub
and
lahf
jb
jno
sbb
test
imul
cmp
aas
push
int
frstor
push
add
add
xor
xchg
pop
cwtl
test
jmp
scas
mov
jmp
andb
push
rcrl
pushf
decl
jmp
test
es
test
sub
xchg
lds
sbb
stos
sbb
adc
and
pop
add
push
mov
pop
mov
xchg
addr16
push
mov
insl
mov
mov
jg
insb
shll
push
or
mov
jnp
mov
orb
or
sub
xchg
inc
dec
pop
mov
add
or
pop
and
or
scas
sbb
lret
mov
mov
xchg
or
jo
popa
in
fildll
sbb
out
and
add
dec
ljmp
call
sub
add
fs
inc
es
test
push
idiv
shll
mov
repz
mov
jmp
stos
xchg
dec
popf
push
lea
and
ret
or
aas
or
dec
clc
sbb
sti
pop
push
sub
mov
orb
cmp
mov
in
jo
mov
or
nop
or
mov
add
enter
push
add
aas
rcrb
sub
je
into
addl
xchg
les
addl
ljmp
push
inc
or
mov
sub
les
and
gs
pop
jg
pop
sbb
enter
dec
cmpsl
mov
pop
clc
sahf
test
lret
pop
jo
aas
sub
xchg
sbb
insl
mov
xor
mov
xor
andb
jb
mov
sbb
push
mov
push
mov
incb
int
aad
in
jo
in
lds
in
adc
out
push
adc
scas
insl
hlt
outsl
mov
jmp
sub
int
into
pop
pop
pop
adc
push
pop
sbb
mov
daa
out
icebp
dec
xchg
inc
mov
aad
jmp
nop
dec
sub
cmp
xchg
xor
out
add
adc
aas
cmp
add
pop
push
les
jmp
cmp
inc
lret
and
inc
mov
insb
movsl
adc
push
pop
repnz
adc
inc
dec
sub
add
ds
hlt
sub
sub
sti
das
mov
push
mov
sbb
ret
aas
ffreep
clc
cmp
cmp
xchg
pop
push
mov
push
or
mov
ss
not
sbb
jl
or
or
push
lret
pop
mov
jmp
pop
adc
pop
lock
mov
cmp
push
icebp
ljmp
mov
push
xchg
mov
and
or
lret
or
adc
cld
adc
jmp
sbb
xor
jl
dec
push
aas
add
test
inc
jnp
lea
imul
dec
sarl
xchg
in
pop
dec
lds
jmp
sti
lcall
xor
out
std
mov
movsl
stos
mov
dec
dec
jb
dec
mov
xor
push
negb
mov
mov
sub
fs
lds
xchg
xchg
adc
leave
jge
int
test
sbb
enter
lock
fiaddl
adc
push
in
insb
fnstsw
cmp
xlat
pusha
into
adc
stos
stos
jmp
adc
jmp
out
lods
loop
not
stos
ret
pop
je
insl
div
jb
movsb
cwtl
adc
dec
xchg
push
es
mov
inc
xor
cwtl
inc
add
not
jne
dec
dec
aam
and
add
and
inc
dec
ja
je
aas
jg
xchg
icebp
addb
jl
mov
push
add
shrl
sub
xor
pop
xchg
addb
jo
mov
xor
add
mov
mov
mov
jl
mov
push
mov
int3
scas
daa
add
pop
std
mov
dec
ret
mov
cmpsl
mov
into
fstpt
popa
repz
sbb
pop
sub
jmp
cmp
fdivr
pop
sbb
cmp
cmpl
out
cmp
repz
xor
push
inc
mov
dec
add
out
dec
push
pop
inc
icebp
or
xor
sbb
je
push
in
lret
push
push
inc
fdivl
sbb
popf
pop
push
mov
shl
add
orl
inc
pop
dec
push
aam
add
jmp
push
push
pop
push
xor
daa
pop
and
addl
gs
icebp
in
mov
inc
loope
fisubl
adc
mov
pop
xor
cli
inc
adc
orl
scas
adc
ret
inc
ljmp
call
arpl
jbe
push
adc
adc
mov
out
pop
subb
bound
xlat
dec
push
xor
dec
xchg
adc
or
jl
mov
call
loopne
popl
jmp
mov
mov
inc
dec
mov
sub
push
inc
or
cmp
mov
test
movsb
fisubrs
cmpsb
cmp
xor
cwtl
pop
push
cmpsb
cmp
push
std
sub
push
xlat
in
or
test
or
sbb
xchg
insb
in
call
inc
mov
inc
pusha
mov
sbb
jbe
mov
orl
je
das
sub
or
sub
dec
out
dec
not
add
xchg
lret
imul
fists
dec
push
aad
or
dec
outsb
mov
imul
pop
cmp
dec
scas
sub
xor
scas
subl
sub
js
mov
in
cmp
add
sahf
sub
icebp
mov
in
test
sbb
and
add
xor
xlat
ja
scas
fucomp
mov
nop
jne
ljmp
and
cmp
repz
ljmp
mov
scas
cmpb
sarb
adc
xor
xor
cmp
adc
mov
cmp
mov
jbe
xchg
mov
pop
xor
enter
dec
jnp
dec
hlt
adc
sub
scas
push
push
and
push
sbb
int3
jp
daa
cmp
adc
mov
shl
dec
jp
adc
in
pusha
adc
adc
dec
je
and
dec
and
push
loopne
sub
sti
mov
and
out
cmpsb
jo
dec
adc
subb
rcr
cmp
les
pop
pop
mov
or
aam
inc
xorb
in
mov
sbb
dec
inc
loop
cwtl
xor
jne
inc
lea
or
mov
adc
jge
and
jno
dec
fucompp
xchg
push
mov
lock
xor
test
out
js
jecxz
lock
sbb
push
cltd
ljmp
mov
inc
not
xorl
sub
mov
sbb
or
dec
add
test
popf
sbb
cmp
insb
inc
outsl
in
cmp
sbb
cmp
das
ret
in
or
adc
push
push
jle
js
cmpsl
jge
push
push
xor
push
ret
fsubr
xchg
push
mov
andb
pmaxub
out
rol
jmp
cmp
pop
mov
lock
xchg
bound
pop
pop
leave
push
lahf
addr16
sub
test
js
dec
add
jmp
mov
lret
aas
ja
add
shrl
lock
dec
cwtl
mov
iret
pop
pop
jmp
call
jno
xchg
xchg
mov
insb
insl
dec
es
fimuls
mov
decl
mov
or
bndldx
dec
dec
je
xchg
or
lods
stos
adc
pop
repz
cmpsl
aas
fisttpll
loope
clc
add
shl
dec
mov
pop
add
mov
and
daa
push
xchg
sarb
push
and
add
fs
or
movsl
imul
jne
jl
fdiv
cmp
repnz
aad
xchg
popf
iret
in
inc
cli
divl
addb
and
scas
and
and
in
lahf
fists
stos
rclb
add
push
cli
aas
stos
nop
pusha
and
add
mov
testl
in
or
test
pop
or
cmpsb
call
movl
enter
andb
scas
sub
dec
or
pop
adc
and
jle
gs
cli
xor
jmp
test
xchg
in
ljmp
lds
loope
cmp
xor
xor
fstps
add
fistps
das
lahf
and
nop
jg
pop
cli
popa
adc
mov
ret
dec
push
rolb
scas
lret
call
test
sub
fisubl
push
std
and
add
ljmp
hlt
stc
sub
insb
xchg
pop
pop
and
rclb
add
jmp
dec
loop
add
jne
pop
or
add
orl
sahf
jmp
lds
xchg
mov
xor
test
std
mov
ljmp
test
mov
jo
mov
fcmovnu
or
fistps
xor
stc
mov
cwtl
les
xor
xchg
je
orl
mov
push
adc
je
or
pop
jge
mov
xchg
jno
sbb
fstps
mov
lds
mov
jnp
adc
add
sbb
movsb
int3
xchg
js
sbb
dec
xchg
and
inc
mov
loopne
pop
push
std
pop
mov
repz
push
je
push
lcall
int
lock
popf
inc
push
mov
adc
push
xlat
dec
jge
aam
and
je
test
int3
adc
push
xor
dec
xchg
js
xor
cmp
in
mov
and
xchg
inc
jecxz
adc
mov
ret
shlb
lds
lock
inc
mov
add
aam
out
daa
mov
push
dec
jns
mov
xchg
adc
pop
popa
sub
adc
repnz
sub
cld
es
push
pop
xchg
push
and
adc
inc
adc
jecxz
xor
int
sahf
sub
push
in
xchg
push
scas
adc
cli
lea
jg
or
adc
mov
mov
jmp
inc
and
adc
out
push
sub
dec
andb
adc
subl
or
int
les
pop
inc
es
jo
add
shrb
pusha
scas
into
push
cli
enter
mov
jb
loope
push
in
ss
js
and
xchg
int
nop
xchg
add
sub
pop
push
mov
and
and
add
orb
cmpsb
mov
push
jmp
adc
repnz
or
test
lahf
ficoml
pop
sbb
sub
lret
lret
cmpl
add
insl
inc
and
inc
mov
cwtl
rorb
push
lock
adc
inc
lahf
or
pop
or
inc
fs
push
push
sbb
xor
rclb
pop
add
or
or
pop
jecxz
jmp
stc
pop
push
and
lds
mov
inc
sub
ljmp
push
outsb
and
cmpb
sbb
aad
mov
cmp
data16
pop
push
jecxz
in
adc
jl
pop
xchg
mov
hlt
xor
out
inc
mov
dec
stos
and
ss
hlt
aas
sbb
cmpb
jmp
adc
pop
mov
or
and
lods
cmpl
cmp
adc
aaa
int3
push
mov
stos
popf
mov
push
inc
jp
hlt
sub
dec
cmp
ja
push
mov
inc
jecxz
and
pusha
pop
or
or
daa
mov
push
or
mov
or
mov
jmp
mov
out
pushf
xor
pop
add
mov
rorb
push
sbb
nop
stc
aad
test
cli
add
pushf
push
sbbb
shll
lret
xor
xor
cmp
cmpsb
mov
repnz
mov
sub
pop
pop
rclb
nop
jle
add
pop
jmp
and
mov
inc
fistps
cwtl
scas
aas
mov
jg
fsubrs
push
mov
xchg
cmp
push
aad
lcall
repnz
xchg
cltd
inc
push
xchg
cld
jno
mov
faddl
loop
add
pop
cmp
xor
idivb
and
lahf
or
mov
dec
sbb
mov
fisubrl
andb
mov
push
adc
enter
push
push
jg
adc
in
cmpsl
cli
cmp
arpl
fistl
adc
adc
adc
inc
dec
jmp
icebp
or
xor
incl
or
push
push
jmp
jmp
push
push
dec
mov
imul
jnp
or
add
push
xor
pushf
and
push
mov
ss
xchg
fsubl
in
mov
sub
stos
pushf
rorl
cmp
xchg
inc
push
jle
push
rcrl
or
push
jae
cmp
lods
jmp
and
inc
test
rcll
or
cmpsb
adc
insb
lret
jge
pop
adc
inc
dec
mov
mov
push
outsb
cmpsb
add
js
add
pop
xor
mov
push
pop
pop
add
mov
mov
pushf
std
adc
or
lret
sub
pop
pop
add
xor
adcb
mov
es
imull
push
sbb
or
inc
int3
mov
add
pop
push
pop
lret
inc
mov
in
sub
pop
mov
jb
pop
inc
aad
mov
push
xchg
ret
dec
mov
push
repz
add
jl
mov
dec
add
pop
int3
in
mov
mov
ret
xchg
js
lods
subl
sub
push
dec
xchg
rclb
gs
adc
cmpsb
add
mov
popa
pop
ja
ret
stc
test
jp
push
mov
insb
scas
jne
mov
cwtl
dec
in
xchg
xor
adc
addr16
pop
aam
adc
pop
repnz
sub
jne
or
pop
xchg
xchg
not
and
push
adc
jmp
mov
lods
cmp
jo
push
sbb
icebp
mov
das
stc
sbb
rcll
movsl
rcl
xchg
and
jmp
std
sbb
lahf
mul
imul
push
test
jmp
push
jne
pop
add
pop
call
push
mov
fists
dec
mov
shrl
push
pop
push
clc
stos
push
mov
fsts
sub
int
push
pusha
xchg
addb
in
push
aam
iret
push
je
add
xchg
inc
mov
nop
jne,pt
sub
xchg
pop
bound
outsl
mov
push
adc
out
clc
pop
mov
sbb
mov
inc
or
sub
fsubs
pop
cmp
shr
or
push
and
push
push
inc
inc
jmp
jg
mov
das
out
shl
mov
jle
loopne
mov
mov
lods
adc
or
xchg
sub
and
sub
add
and
lret
and
sbb
add
sub
sub
std
and
dec
cs
dec
push
sbb
jmp
das
jmp
jo
int
sti
es
fwait
sbb
lods
sahf
push
mov
repnz
push
aad
jbe
ja
xor
xchg
adc
pusha
push
into
pop
push
dec
push
sub
xlat
lods
inc
dec
cwtl
daa
pop
dec
lods
xor
push
adc
cmp
testb
add
inc
cmc
jo
dec
jp
adc
js
mov
sahf
push
xchg
or
jnp
sub
mov
jp
jl
push
int3
mov
decb
dec
in
movsl
inc
out
vpor
loopne
call
dec
pop
daa
ljmp
cmpsl
add
rcr
dec
mov
xlat
stc
movsb
add
fwait
mov
into
jns
adc
sub
fcomp
mov
push
rolb
pop
fadd
xor
shl
xchg
and
pop
dec
mov
dec
pop
subl
outsl
push
push
addr16
leave
int3
sub
das
push
sub
jb
jl
popa
push
test
insb
test
ret
and
test
jmp
loop
sti
leave
sub
jmp
xor
and
add
bound
mov
jge
pop
xchg
fchs
or
fildl
lods
lret
mov
bound
push
ret
adc
cld
addr16
sbb
adc
pop
addl
jne
mov
orl
cmp
jmp
pop
mov
sahf
xchg
or
sub
daa
mov
gs
mov
sub
repz
inc
push
icebp
mov
shlb
lret
mov
outsl
mov
lahf
jns
add
mov
push
xor
push
add
mov
jmp
out
add
mov
pusha
and
iret
jge
int
jb
mov
sub
fldenv
lea
nop
std
pop
incl
xchg
mov
mov
dec
rorb
repnz
bound
fmuls
push
mov
rcl
push
inc
jnp
mov
ds
mov
notl
cmp
dec
xchg
insl
xor
xchg
inc
mov
test
int
jge
jmp
test
loope
adc
popf
mov
pusha
ja
rolb
cwtl
das
pop
nop
xor
jns
fs
push
ja
test
sti
cwtl
sub
cli
sub
mov
jmp
fstpl
sbb
pop
mov
je
push
out
xor
jae
enter
out
adc
std
cmp
push
or
pusha
adc
or
lods
fs
jp
adc
cmp
add
icebp
mov
test
cmp
lods
push
mov
enter
add
adc
mov
pushf
scas
mov
add
pop
or
gs
and
mov
pusha
ljmp
mov
add
inc
cmpsl
and
jmp
stc
pop
test
pop
push
mov
xlat
adc
rorl
mov
hlt
dec
fs
mov
inc
sbb
fldl
xor
fadd
lods
hlt
rclb
dec
or
sub
iret
xor
pop
dec
aad
add
dec
xor
add
jge
inc
add
jnp
stos
inc
xchg
jp
adc
stc
push
cmp
add
popl
mov
leave
repnz
xchg
jbe
or
sbb
push
shrl
add
or
popf
sbb
sbb
add
fwait
popf
mov
push
xor
jae
out
inc
add
icebp
xchg
in
add
or
mov
add
pusha
jge
pop
scas
fs
jae
icebp
dec
lods
js
pop
push
push
imul
push
add
out
pusha
ds
sub
pop
dec
pop
inc
pop
clc
push
adc
pop
xchg
pusha
adc
sti
jmp
mov
leave
pop
addb
push
sub
jg
xorl
pop
sub
pop
cwtl
jmp
lcall
jg
loop
sub
adc
push
in
sub
js
pop
cmp
lock
push
mov
stos
jmp
push
fistps
push
cli
repnz
mov
dec
lcall
push
in
scas
fbld
call
dec
jmp
jb
mov
repz
mov
jae
les
or
push
sbb
and
inc
lods
xchg
and
push
in
mov
enter
sbb
jne
adc
sti
mov
pop
mov
inc
inc
sub
cld
mov
xor
in
jmp
scas
pop
out
movsb
mov
xor
inc
sub
rcll
push
push
pop
shr
add
add
push
mov
loope
jmp
inc
or
fbstp
clc
into
cmp
push
daa
sub
pop
adc
mov
push
push
lahf
push
xchg
mov
xor
std
jge
sub
js
cmp
add
movsl
xor
adc
je
add
jne
mov
add
testb
rcll
fisubs
pop
xor
jb
and
pop
ret
pop
mov
push
movsl
adc
push
loope
or
and
je
add
loopne
leave
inc
bound
push
mov
inc
push
and
ss
push
lahf
call
repnz
bound
ja
add
repz
ret
mov
sbb
pop
or
outsb
ss
adc
orl
or
push
pop
mov
shl
push
xor
dec
cmp
ss
je
sub
and
inc
or
xor
pusha
push
xchg
outsb
in
cs
sub
mov
cltd
not
rep
call
data16
sub
push
nop
push
dec
xchg
mov
xor
xor
pop
jg
lods
inc
sarb
sub
pop
aam
push
add
repnz
or
lock
pop
cltd
sub
sub
imul
xor
test
popf
and
and
adc
sub
roll
adcb
and
sub
fildll
or
push
or
outsb
xchg
or
adc
jl
cltd
xor
pop
and
jmp
stc
test
roll
jno
imul
addl
shl
push
icebp
jnp
cmpsb
adc
pop
adc
mov
add
aad
cld
fnstcw
ret
lret
mov
shrb
stos
xor
stos
push
out
aad
pop
pop
or
sub
inc
ret
addl
mov
xchg
js
clc
mov
ja
adc
cmc
addb
popa
andl
dec
mov
roll
adc
enter
cmovp
dec
test
pop
mov
mov
nop
adc
jnp
or
sbb
pop
movsb
orb
cmc
dec
push
sub
xor
adc
mov
fcompl
and
dec
mov
lcall
lods
cmc
mov
or
adc
xor
ror
pop
in
mov
jmp
flds
aas
pop
xchg
jbe
sub
pop
pop
xchg
leave
mov
out
orb
ret
sbb
jge
jno
mov
xor
hlt
insl
scas
inc
test
adc
fsubrs
push
addr16
daa
or
je
cli
mov
sub
fisubrl
scas
jne
sti
mov
lahf
shll
add
and
icebp
mov
cmp
std
push
adc
out
fmul
repz
adc
fldl
jns
jmp
sub
mov
and
ja
jmp
adc
push
dec
lods
mov
inc
push
pop
pop
scas
sbb
sub
decb
xor
or
dec
inc
dec
add
stc
lret
test
sub
add
sbb
jo
aaa
icebp
jo
mov
ljmp
mov
aaa
lret
add
inc
lret
add
xor
add
jmp
add
lds
ficomps
pop
lds
inc
jbe
jle
add
dec
add
imul
mov
mov
inc
addl
out
inc
and
cmc
stos
jnp
sub
push
add
ficomps
stc
inc
xor
call
shrb
insl
xor
adc
adcb
add
scas
into
out
adc
push
mov
or
pusha
or
mov
cwtl
ret
lret
pop
jmp
xchg
push
leave
std
pushf
mov
mov
sub
pop
add
cli
xchg
xchg
push
and
ret
std
scas
fcomps
inc
jge
jo
popf
gs
loop
xchg
add
adc
jnp
add
push
ljmp
mov
gs
sahf
sbb
pop
fildll
pop
mov
inc
popf
cld
icebp
loopne
push
out
bound
repnz
cmp
fmuls
mov
xor
loop
xlat
mov
cmp
mov
in
or
hlt
arpl
push
mov
repnz
mov
mov
dec
jmp
repz
jmp
mov
jg
repz
rol
icebp
add
inc
hlt
aad
out
mov
lods
addr16
lock
xlat
mov
bound
pushl
and
push
leave
outsb
push
cmp
pushw
inc
add
pop
pop
repnz
mov
push
jg
scas
or
mov
addb
xchg
dec
or
add
orb
aaa
push
fists
and
mov
jle
rclb
mov
cmp
add
sub
aad
adc
pop
shl
lods
xchg
and
sbb
data16
and
sbb
xor
dec
mov
dec
nop
add
cmp
fldcw
dec
stos
push
rcll
jbe
sbb
and
jle
scas
fistpl
xchg
add
add
push
iret
pushf
rorb
mov
shll
inc
jecxz
incb
fidivrs
mov
add
sbb
icebp
out
push
jbe
xchg
add
sbb
push
lods
push
jl
inc
inc
jne
sbbb
and
aam
mov
xor
push
lcall
jp
out
fwait
addb
lret
push
pop
pop
mov
addl
adc
clc
movsl
push
or
or
sti
loope
pop
cmp
cs
inc
and
push
jno
mov
daa
jle
cmpsb
mov
pop
push
mov
xchg
mov
dec
idivl
imul
pop
inc
jnp
in
fiaddl
mov
jns
add
cmp
cmp
pop
mov
out
stos
adc
push
cmpsb
or
add
pusha
outsl
or
and
daa
nop
or
and
lret
das
mov
shll
outsb
push
sbb
jmp
xchg
not
xor
sub
sub
mov
push
xor
jmp
adc
cmp
lret
gs
popf
jns
leave
jne
xchg
arpl
out
push
test
cmp
rorl
dec
add
dec
mov
and
lds
int3
gs
adc
add
nop
add
mov
sub
inc
dec
lret
mov
aam
stc
add
hlt
add
aam
mov
loop
fwait
inc
add
sbb
ret
je
mov
std
pushf
arpl
sub
sub
mov
and
in
call
xor
ret
xor
xchg
mov
pop
dec
loope
aas
shl
push
jne
inc
loope
pop
fidivrs
jns
dec
sub
inc
or
add
or
fmull
dec
cmp
ret
push
je
bound
aam
mov
xchg
mov
mov
or
pop
jae
pop
mov
dec
callw
ret
mov
lret
mov
lds
dec
cmpsb
adcb
jge
pop
add
mov
pop
mov
nop
js
and
jne
sbb
dec
mov
xchg
jp
push
icebp
add
movsb
cli
push
pop
pop
mov
insb
loopne
in
mov
div
dec
fnstsw
pop
loope
add
cwtl
sub
ja
fldl
inc
mov
mov
mov
call
cmc
lods
stc
nop
adc
push
pushl
mov
dec
dec
sarb
mov
fldl
inc
adc
fsubrs
adc
mov
pop
pop
adc
hlt
cmp
xchg
js
dec
dec
in
add
sub
adc
dec
lods
movsb
shll
jge
inc
push
nop
repnz
add
xor
jle
rolb
jl
add
jae
jb
add
mov
mov
pop
push
nop
sbb
cld
shlb
pop
and
icebp
or
ret
mov
pop
pop
mov
push
icebp
imul
sbb
inc
add
mov
in
adc
push
insb
jp
jmp
add
adc
push
jl
or
inc
cltd
xor
in
test
lcall
add
push
aas
sub
or
dec
dec
sub
inc
sub
push
cmp
dec
lret
jne
rcrl
and
int
or
ja
cmpl
mov
push
pop
out
out
jg
cmp
sbb
add
rcl
outsl
sub
pop
popa
mov
add
add
push
mov
stos
mov
stc
fcompl
adc
pop
div
cmp
out
stc
push
adc
cmp
les
pop
shl
jmp
fiadds
add
jmp
inc
dec
cmc
jg
out
cmp
insl
push
jp
dec
mov
push
ret
push
push
mov
movsl
jnp
lret
xor
test
mov
data16
in
xchg
rcll
inc
in
xor
mov
mov
add
xchg
mov
ds
pusha
inc
cmc
out
imul
pop
loope
push
movsl
sbb
mov
mov
add
mov
addb
je
mov
dec
negl
sbb
inc
mov
nop
in
pop
es
dec
sub
dec
rcll
out
inc
and
xor
inc
sub
test
mov
sub
shr
int
jg
es
mov
jno
pop
jle
push
test
xchg
cwtl
add
jo
adc
inc
or
mov
push
cmc
mov
ds
add
push
jmp
xor
adc
into
idivb
movsb
pop
jl
dec
pop
inc
repnz
xchg
adcb
movsl
jbe
rclb
push
jmp
in
shl
inc
test
add
push
aas
es
cs
add
jmp
push
jmp
repnz
fsubs
lods
adc
mov
aad
push
insb
mov
stc
mov
dec
outsb
clc
popl
jg
ret
dec
or
clc
ret
pop
lods
ret
or
shl
rorl
dec
cmpsb
enter
das
inc
jmp
add
xchg
stos
mov
ja
mov
lea
icebp
loop
push
push
mov
mov
mov
filds
mov
add
dec
outsl
add
in
adc
inc
xor
jmp
inc
data16
jmp
mov
fidivrl
jne
es
cwtl
loop
in
mov
insb
fisubl
leave
and
jnp
data16
jae
bound
dec
arpl
pop
inc
or
out
sub
push
push
jbe
add
fistps
iret
cmp
or
imul
in
loope
mov
in
icebp
movsl
xor
or
cli
incb
mov
push
mov
js
fcoml
dec
push
push
jg
into
icebp
add
ljmp
or
into
jbe
dec
lods
inc
cs
jo
sti
or
jns
sbb
xchg
daa
cld
dec
pop
inc
stos
mov
loopne
mov
test
test
or
adc
sbb
cld
gs
or
cmp
fbstp
adc
mov
adc
pushl
ljmp
xchg
movsb
dec
rcll
arpl
mov
hlt
jmp
xchg
in
popf
xchg
sub
and
xchg
cmp
mov
inc
mov
lret
shrb
ss
jmp
and
add
push
out
sti
aas
and
push
pop
mov
dec
sub
sub
inc
dec
add
pop
stc
mov
jmp
mov
js
mov
rorb
and
orb
aam
jae
stc
stos
mov
push
les
mov
loope
mov
cmpb
leave
test
jle
dec
lods
ret
xchg
mov
mov
add
mov
lock
imul
ljmp
sbbb
or
mov
push
add
mov
push
std
pop
mov
sbb
lret
xchg
out
dec
pop
clc
les
jnp
cmp
or
stc
pop
addb
push
aam
adc
mov
mov
inc
xchg
add
pop
mov
mov
sub
and
movsb
mov
and
push
push
dec
mov
inc
out
popa
andl
cmp
and
sahf
sub
dec
mov
mov
fisttpll
scas
or
xchg
cmp
std
pop
and
add
pop
mov
jg
iret
cltd
in
lcall
rol
bound
mov
jae
sub
xchg
and
icebp
mov
int
jnp
jns
inc
mov
pushl
gs
mov
and
movb
icebp
rclb
sbb
ds
daa
push
scas
xlat
ljmp
add
jp
popa
jae
dec
jno
inc
cmpsl
stos
hlt
and
int
add
jg
pop
arpl
subb
sub
push
adc
fldt
or
popf
fnsave
outsb
test
inc
dec
pop
maskmovq
shr
inc
cmp
or
push
xchg
mov
imul
ds
rolb
dec
pop
xchg
test
in
leave
cwtl
mov
loope
das
call
push
sbb
adc
fs
outsb
loope
sub
and
or
dec
loop
push
xchg
es
adc
xchg
and
jae
sbb
and
adc
jp
jecxz
aam
pop
movsb
jle
ljmp
pop
pop
dec
inc
xor
sub
push
xchg
js
pop
cmpb
push
mov
incl
sbb
dec
pop
roll
jmp
pop
loope
mov
adc
jno
jbe
fmuls
stos
pusha
pop
push
pop
add
sarb
fcomps
and
nop
xchg
adc
dec
pushf
in
icebp
adc
sti
cmpsb
jecxz
mov
lea
or
sti
call
lods
ror
outsb
divl
lds
pop
inc
mov
aaa
out
hlt
inc
adc
or
inc
aam
jmp
rol
daa
push
cmp
cmp
or
pop
into
mov
outsb
mov
jle
out
imul
xchg
add
push
ja
testl
jno
jne
adcl
insl
pop
add
and
jmp
xchg
xlat
in
adcb
sub
adc
in
inc
fildl
into
ret
or
pop
lds
aas
cmpsl
mov
mov
pop
pop
jb
adc
push
lods
mov
ja
in
into
shr
and
clc
mov
loop
or
adc
or
sub
mov
xor
stos
ds
lods
sub
add
jb
int3
je
adc
mov
inc
dec
cmp
and
lret
push
mov
mov
adc
and
repnz
adc
addr16
popa
xlat
pop
dec
insb
int
pop
dec
stos
xor
enter
movsl
or
sti
xchg
sub
sub
pop
dec
bound
inc
xchg
ja
add
add
cmp
aaa
add
scas
xor
and
out
fsubs
cld
cmpsl
sub
or
xchg
xchg
pop
push
int
dec
cmpsl
mov
pop
push
cmp
rcl
adcb
ljmp
mov
iret
sahf
and
hlt
fidivs
das
xchg
jg
push
stos
jp
pop
mov
stos
jmp
scas
enter
ds
insb
inc
lahf
push
lock
frstor
inc
xrelease
push
xor
push
sti
jp
sub
xor
sbb
vmovups
pop
or
cmp
pop
mov
icebp
and
mov
stos
out
sbb
and
jmp
adc
pop
dec
pop
mov
movsb
sub
js
jle
iret
xchg
or
ds
sub
insb
inc
lods
jo
jmp
adc
push
xor
adc
dec
mov
or
pop
imulb
adc
or
imul
imul
and
mov
rcrb
xchg
xor
pop
in
sbb
and
inc
shr
adc
div
daa
jne
outsb
ja
mov
sbb
arpl
mov
mov
jmp
xchg
insl
pop
cmpsb
push
dec
imul
jne
pop
out
adc
sub
repnz
mov
jge
jl
out
in
inc
add
mov
push
push
das
inc
fdivs
adc
fsts
pusha
or
add
adc
outsb
mov
mov
cmp
jmp
out
add
lods
jb
inc
jb
push
mov
test
or
dec
cmp
dec
mov
add
add
cmc
mov
cmp
dec
aam
jbe
mov
push
out
fisttps
push
dec
push
push
adc
or
pop
jg
add
ss
sub
sub
xor
push
add
jmp
jg
ret
fistpl
cmp
or
pop
xchg
fsubr
lods
daa
sub
ret
jmp
jg
and
inc
and
rorl
jecxz
loope
ds
shr
loope
sti
cmp
jl
mov
push
ljmp
or
int
dec
cltd
push
pop
lock
popf
jno
dec
dec
movsl
fucomi
or
or
jmp
lahf
jne
in
dec
push
push
or
push
mov
cmp
repz
stos
push
outsl
fdivs
popf
rcll
push
sbb
cs
sbbb
and
jmp
shl
push
inc
in
pop
xchg
adc
ljmp
add
lcall
add
sub
jecxz
arpl
pop
add
lretw
pop
or
jno
test
shl
or
mov
mov
outsb
xor
pop
pop
stos
mov
in
xor
push
cmp
out
jne
mov
imul
mov
lods
rcl
cmp
dec
shr
loope
jno
inc
add
jp
or
jmp
pop
push
adc
mov
xor
gs
popa
mov
mov
mov
shrl
loop
mov
mov
sbb
pop
jbe
addr16
imul
adc
imul
mov
lds
daa
hlt
sbb
dec
pop
mov
add
pop
push
push
outsb
repnz
fstl
dec
fs
pop
in
lret
sub
fsubrs
pop
or
dec
add
rclb
push
ret
jmp
sub
jg
cld
stc
shr
or
fiaddl
xor
xchg
imul
dec
push
enter
into
mov
add
sbbb
mov
jp
jne
in
les
shr
adc
arpl
xchg
inc
jmp
pop
pop
loopne
and
push
mov
and
ret
dec
dec
pop
ret
ljmp
add
push
jo
jbe
jmp
fistpll
lret
mov
xorl
jne
lahf
cmp
inc
pop
loope
mov
sub
in
cmp
cmp
sbb
adc
add
inc
jp
pop
ret
add
imul
push
arpl
inc
sbb
or
es
xor
lods
dec
pop
dec
push
push
inc
mov
addr16
mov
lds
leave
imul
fcmovnbe
mov
fsubs
mov
adc
push
das
dec
cmp
mov
inc
aad
out
adc
push
mov
jns
nop
add
push
adc
mov
test
xor
pop
pop
lahf
fldenv
adc
adc
push
sbb
jmp
mov
gs
ljmp
dec
test
pusha
mov
dec
jo
rolb
inc
popa
shll
stos
pushf
rorb
sub
test
mov
adc
mov
push
add
push
fucomp
fwait
call
and
xor
push
push
mov
arpl
mov
test
xchg
jmp
jo
mov
cmpb
into
xchg
push
neg
xor
or
push
pop
shr
inc
lret
mov
dec
ret
cltd
push
mov
xor
xor
bound
shr
hlt
sti
cli
pop
jp
addr16
fiadds
pop
icebp
stos
pop
jnp
vpmacssww
in
push
loope
dec
in
inc
scas
ret
jp
popf
add
pop
testl
popf
jmp
inc
pop
fucomp
jle
leave
loope
insl
adc
comiss
lret
ret
popa
mov
scas
inc
mov
inc
add
loop
mov
add
out
aaa
pop
push
mov
or
cmpsl
dec
and
mov
inc
add
inc
add
jmp
add
into
enter
add
js
insb
adc
inc
orb
lcall
pop
jg
std
pop
faddl
sbb
into
cwtl
adc
je
inc
int3
loopne
add
out
enter
mov
and
add
pop
push
notl
das
mov
pop
and
xlat
dec
push
loopew
push
jg
mov
mov
cs
xor
inc
and
mov
jmp
or
pop
lock
ja
ljmp
inc
and
pand
jmp
in
cmc
jnp
imulb
jmp
stos
xchg
std
cmp
in
sbbl
pop
cmp
jge
xchg
or
adc
dec
insl
in
pop
stos
fs
loope
push
pop
or
shlb
sbb
sbbl
scas
repnz
inc
jne
lret
icebp
jp
xorl
sbb
sub
sub
cli
fwait
ja
jae
cmpsl
gs
adc
sbb
ret
jmp
movntps
push
pushf
shrl
push
in
dec
or
add
es
add
sub
ret
or
xor
pusha
shr
sub
aas
sub
add
push
add
and
xlat
ficoml
or
cld
popa
lret
xchg
stc
lcall
pushl
xchg
jg
das
mov
repz
sbbl
cltd
push
cmp
jmp
xchg
and
fcoms
pop
cltd
mov
lcall
jg
jg
sbb
repnz
aaa
mov
sub
inc
mov
idivb
inc
xchg
int3
lahf
inc
jne
add
sbb
scas
adc
jno
loop
movsb
sbb
inc
clc
clc
imul
jle
pop
sub
fstpt
insl
push
fs
shr
add
rol
fists
mov
jne
xor
les
jnp
push
push
xchg
pop
push
in
lret
or
ja
push
push
movsl
rclb
dec
add
dec
inc
and
data16
imul
popf
adc
cs
lcall
inc
and
fs
mov
mov
imul
ljmp
stc
pusha
pop
pop
jp
sub
pop
inc
sub
lds
mov
lret
popf
and
jge
in
in
sub
dec
pop
jge
and
sub
dec
test
lret
push
js
add
jmp
sub
add
in
cld
bound
sarb
or
loop
addb
push
xor
mov
stc
jle
mov
and
das
xor
xor
rolb
loop
xchg
aas
or
into
ficoml
pusha
mov
push
daa
shll
das
jb
add
leave
shrb
push
mov
out
sub
insl
subl
daa
pop
leave
pop
pop
lods
sbb
adc
js
test
iret
lret
lcall
mov
add
adc
adc
dec
lea
inc
int3
sub
adc
sub
or
jmp
add
daa
pop
shr
push
dec
inc
int3
push
dec
andl
add
cmp
fucom
out
es
pop
ret
fnstsw
nop
imul
xchg
add
dec
push
andl
adc
pop
decb
icebp
das
sub
daa
xchg
adc
ficomps
rcrb
jmp
fisttps
jns
leave
aad
and
jo
idivl
in
pop
push
push
dec
or
and
sub
pop
jnp
cltd
cmpsb
mov
add
das
xchg
sub
xchg
loope
cmp
xor
out
jnp
fisttpll
inc
leave
or
pop
xor
mov
out
or
pop
lds
xlat
repnz
insl
add
xchg
gs
cwtl
nop
aas
mov
test
es
push
or
leave
shrl
cwtl
loope
ds
fstl
cmp
mov
sbb
xchg
inc
jmp
call
inc
mov
in
stc
jmp
push
aad
outsb
or
ljmp
pusha
dec
push
add
insb
inc
jmp
dec
and
push
clc
stos
inc
push
notb
sar
lret
mov
or
mov
add
jmp
push
jge
adc
lret
shr
or
test
jge
push
add
and
mov
sbb
push
cmc
leave
in
add
stos
pop
addl
pop
clc
inc
popf
sub
or
push
or
test
xchg
push
je
outsb
andl
pop
mov
gs
cld
add
scas
mov
daa
mulb
or
adc
hlt
mov
add
cmp
loop
xor
add
inc
aas
dec
scas
hlt
nop
andnps
sub
mov
adc
fbstp
push
push
push
mov
mov
xchg
into
je
push
in
jg
xchg
notb
add
add
lret
pop
movq
addb
pop
pop
jmp
push
icebp
add
jo
in
sbb
or
push
inc
push
dec
cmpsb
jae
xor
jmp
jg
pop
es
pop
xor
sub
cmpsb
inc
pop
lds
loopne
or
aam
test
jns
mov
adc
fsubp
lock
add
aad
andb
xor
cmp
or
hlt
sub
lcall
sbb
in
xor
adc
mov
shll
xchg
scas
cli
or
scas
jns
jnp
int
test
les
imul
mov
fwait
sub
pop
xor
push
pop
or
add
jnp
shlb
aad
xchg
cs
mov
fwait
and
out
adc
test
test
enter
inc
jne
loopne
jmp
pop
xor
push
cmp
js
jecxz
sub
inc
das
stc
mov
sti
sbb
rcr
jg
xor
inc
inc
rorl
push
ja
push
push
sub
out
mov
pop
stos
pop
ja
leave
jmp
jnp
out
adcb
repz
dec
aad
lods
lret
es
test
mov
push
push
xor
add
sub
or
pop
jb
or
mov
lea
add
inc
dec
and
aad
or
fists
or
dec
sub
mov
add
mov
mov
jno
loope
bound
cmp
push
ss
cmc
mov
pop
scas
and
jno
ret
jg
xchg
dec
and
mov
frndint
das
push
rcrb
cmp
push
jmp
lds
call
inc
dec
test
inc
xchg
jmp
push
das
jne
aad
out
pop
popf
pop
pushf
sbb
adc
mov
sbb
fdivs
js
mov
adc
stc
call
addb
stos
test
xchg
out
lahf
push
sub
pop
dec
cmc
sub
sti
hlt
mov
inc
stos
push
push
add
cmp
jnp
insl
jnp
and
add
int3
std
mov
push
lahf
mov
cmc
out
xchg
jae
iret
adc
and
and
pop
cmp
lret
pop
jne
sahf
bound
jmp
jp
out
scas
add
imul
sbb
and
negb
int3
loope
lret
fnstcw
lods
movsl
cmpsl
add
xchg
pop
adc
clc
pop
adc
mov
jo
push
push
dec
mov
test
repz
pop
jne
sub
test
dec
enter
jo
and
jg
or
jmp
add
xor
cmp
pop
daa
loopne
push
pop
dec
xchg
movsb
sti
mov
rolb
movsb
in
fcoml
dec
push
mov
sub
ljmp
jnp
push
inc
nop
out
xor
dec
or
jno
mov
testb
mov
push
ror
sbb
outsl
mov
jle
shl
in
dec
add
jnp
push
dec
pop
in
push
adc
pop
add
inc
cmpsl
xchg
push
cmp
pop
cmpl
out
aas
mov
adc
cmpb
push
sub
nop
daa
cmp
push
cmp
jge
mov
cmp
imul
and
into
nop
idiv
push
xor
mov
adcb
pop
pusha
sarb
add
loop
std
cli
fmuls
cli
adcl
push
and
pop
xlat
pop
sbb
scas
out
fmull
rcll
sbb
pushf
inc
mov
sbb
add
cld
ret
mov
push
push
pop
or
add
out
add
push
sbb
in
icebp
pop
cmp
sub
inc
aaa
pop
push
lock
lock
sub
sub
popa
pusha
jnp
mov
jb
mov
mov
sub
push
dec
mov
cwtl
and
mov
pop
mov
pop
adc
aaa
imul
push
repnz
xor
bound
jae
push
or
pop
fs
and
xchg
mov
xchg
std
pushf
mov
pop
xchg
aaa
mov
cmpb
arpl
lcall
adc
xor
stos
jl
testl
std
add
and
pop
sbb
lea
loop
add
mov
mov
pushf
push
mov
not
rcr
pusha
inc
cmpb
out
jmp
sbb
add
ficoml
mov
mov
sbb
rcll
vmovlpd
pop
iret
mov
out
icebp
clc
mov
test
mov
jecxz
and
dec
or
adc
xor
iret
dec
lods
hlt
pop
aad
adc
pusha
mulb
jmp
mov
and
add
lods
pop
fimull
int
or
sti
dec
pop
in
dec
mov
das
mov
fldt
les
mov
int3
mov
pop
push
call
pop
push
std
das
and
add
or
test
jnp
mov
inc
adc
loop
loope
mov
outsl
mov
insb
dec
push
subl
mov
out
bound
addl
or
xchg
and
dec
daa
sbb
sarl
push
lods
xor
rcl
fistpll
adc
push
std
sub
cmp
test
xchg
shlb
shlb
jnp
jle
adc
test
dec
std
inc
movsb
out
xchg
sbb
jmp
loope
jno
add
das
stos
daa
cmc
adc
cmp
pop
inc
jno
aas
mov
repnz
mov
push
pop
subl
aas
jae
pop
xor
sbb
dec
mov
adc
or
or
pop
push
inc
jg
inc
pop
sbb
mov
xchg
or
lahf
dec
pop
stos
mov
jmp
add
jbe
sub
mov
add
pop
jmp
add
pop
out
aaa
jmp
jbe
sub
jmp
repnz
in
dec
scas
popa
sbb
fs
inc
pop
add
mov
pop
icebp
imul
orb
xor
push
push
pop
xor
subb
dec
int3
sbb
sbbl
xor
xor
lret
sub
mov
ljmp
sub
cmp
pop
icebp
pop
scas
adcb
pop
xchg
inc
lcall
test
sbb
add
pop
push
xchg
clc
sbb
cmp
dec
dec
aad
ljmp
jle
mov
testl
xchg
cli
roll
pop
ja
xor
push
pop
jg
mov
mov
mov
sub
adc
jbe
xor
pop
std
jp
data16
xor
add
mov
cltd
xchg
outsl
mov
cmp
cli
popa
sub
ret
sbb
adc
movsb
in
dec
cmpsl
cmpsl
dec
adcl
stos
mov
les
and
lret
rcll
sub
fsubr
test
mov
adc
pop
mov
sub
rorb
clc
cmp
fbld
pop
mov
add
ret
mov
add
pop
push
mov
sub
mov
sub
jmp
mov
lock
dec
push
subb
pop
sub
fs
lret
sbb
pop
repz
ret
sub
xor
ja
and
jl
add
les
fs
xor
mov
cli
push
cld
popa
or
sbb
or
pop
cmp
iret
jg
pop
fsubs
xlat
fsubp
bound
dec
jb
popf
cld
sub
cmp
or
popa
dec
xchg
repnz
pmulhuw
mov
inc
or
pop
sbb
sahf
add
add
xor
push
or
bound
and
pop
add
ljmp
mov
addr16
mov
add
jmp
and
pop
je
and
arpl
mov
lret
das
popf
sub
xchg
pop
out
add
mov
mov
xchg
dec
sub
push
pusha
cmp
adc
xchg
dec
mov
cmc
push
imul
fimull
lods
pop
xor
inc
jmp
sbb
push
pop
push
test
mov
fsubrp
imul
xchg
orb
and
mov
sub
add
sub
fcmove
mov
and
and
jecxz
xor
outsb
out
sub
push
pushl
xchg
cmp
mov
and
mov
xchg
push
adc
sub
xchg
int3
js
insb
xchg
jae
imul
scas
xor
mov
fucomp
cmp
insb
ds
xor
xor
hlt
addr16
add
add
push
mov
hlt
rclb
push
xor
in
jo
addb
ret
push
pusha
lds
js
sub
and
mov
mov
daa
insb
jl
call
mov
loope
xor
cld
mov
pop
mov
addl
adc
xor
mov
fistpl
daa
pop
sub
cmp
sti
cmp
ds
popa
xor
adc
push
pusha
push
les
rolb
pop
cmpxchg
inc
test
fbstp
js
add
data16
mov
sti
xchg
mov
lock
inc
ffreep
adc
dec
sub
lcall
scas
inc
repz
and
push
sub
push
add
jne
xor
jle
push
cli
mov
dec
xor
shlb
and
mov
cmp
les
inc
sbb
mov
inc
ret
das
push
add
repz
loope
adc
ret
mov
cs
fwait
and
pusha
imul
pop
jo
call
mov
popf
adc
dec
rorl
mov
mov
push
mov
ja
scas
call
dec
adc
es
inc
pop
icebp
icebp
inc
sahf
pop
xchg
popa
push
mov
repnz
dec
pop
and
sub
mov
dec
mov
push
out
and
ja
sbb
stos
in
and
xor
mul
push
mov
xor
fmuls
rcll
mov
add
test
popa
inc
dec
xchg
fmuls
es
or
mov
mov
cmp
ret
sub
pushf
popa
adc
mov
sti
js
rcll
and
or
push
cs
cmp
mov
jmp
lcall
xor
xor
dec
not
dec
xor
jle
sbb
add
jbe
add
sbb
mov
add
sbb
jae
cli
mov
shr
pop
cmp
mov
aad
pop
mov
mov
int
pusha
imul
xchg
daa
and
sbb
mov
xchg
jmp
mov
scas
and
movsb
out
out
adc
stos
lret
mov
popf
fdivs
pusha
adc
add
pop
call
xchg
push
cli
lock
ret
push
add
mov
adc
loopne
jmp
ss
cmpb
in
shl
scas
roll
fmuls
or
sub
cmpsb
loope
xor
push
sbb
xlat
lret
test
jmp
and
ret
incb
dec
mov
lock
mov
inc
or
movsb
lahf
ret
jbe
pop
mov
pop
or
sbb
push
xlat
out
rclb
sbb
leave
sbb
sar
jmp
ret
daa
pop
lods
adc
sub
pop
stc
or
sbb
add
or
jge
iret
add
push
fiaddl
inc
scas
clc
ret
xor
push
add
add
sub
mov
and
fadds
test
inc
push
or
mov
sub
push
ja
mov
not
jmp
xchg
mov
xor
push
jns
mov
xor
push
cltd
jnp
dec
or
add
ljmp
popf
jo
jae
mov
lods
hlt
test
add
jmp
mov
or
xchg
and
jae
dec
sbb
dec
subb
add
or
and
push
push
pop
pop
pop
push
or
aam
jmp
out
scas
jns
dec
jle
push
jmp
push
bound
out
divl
mov
ret
pop
ds
cld
adc
loope
fidivrs
lods
pop
mov
jne
cmc
mov
loope
popa
and
inc
adc
popl
jg
mov
shrl
jmp
inc
inc
jg
insb
add
daa
xor
pop
loope
and
das
mov
and
pop
dec
in
int3
sub
or
lret
pop
or
into
stos
jae
out
das
push
cmp
adc
bound
ret
dec
aad
sbb
xchg
push
jp
mov
push
inc
mov
das
push
adc
test
push
xchg
outsb
dec
add
rorl
add
icebp
out
push
cmp
lret
movsl
xlat
inc
bound
int3
fildll
adcl
dec
dec
loop
nop
repnz
push
nop
sbb
int
pop
adc
push
and
cmp
mov
push
imulb
dec
fimull
cmpb
inc
pop
jno
jmp
pop
je
cltd
jg
out
cmc
pop
and
popa
std
pushw
jg
and
jnp
cmp
mov
outsb
jp
stos
es
dec
repnz
pop
movsb
fistpll
lret
push
pop
and
jp
cli
sbb
xlat
test
push
ficomps
inc
mov
daa
cli
outsl
mov
cmp
fidivs
sahf
cmp
ljmp
mov
adc
or
push
js
push
sarl
sub
idivl
out
imul
pop
in
gs
mov
mov
dec
lea
pushf
test
dec
add
stos
jecxz
mov
dec
sti
insl
addr16
pop
inc
push
cwtl
cmp
or
pop
xor
mov
std
add
xor
sbb
cwtl
inc
dec
ja
mov
or
xor
push
or
lods
out
adc
out
nop
andl
or
pop
sub
xchg
mov
shr
lret
xchg
cli
sti
pop
pop
icebp
movsb
movsl
add
pop
je
add
pop
outsb
jmp
repz
jnp
and
ja
push
or
or
or
sub
and
repnz
rorb
fs
or
jge
scas
jb
pop
xlat
shr
push
jecxz
cmpsl
lds
inc
test
mov
ds
bnd
or
mov
xor
inc
call
daa
xor
jle
loopne
jns
sub
test
pop
xchg
call
sub
mov
mov
lock
mov
xchg
inc
inc
or
sbb
rcll
mov
dec
dec
add
xor
mov
lods
pop
cmc
push
scas
adc
insb
outsb
jmp
push
or
shl
adc
dec
push
test
les
dec
out
pop
jmp
push
pop
and
iret
inc
xchg
rolb
xchg
adc
jb
xor
mov
ljmp
sub
mov
cmp
pop
outsl
repz
jecxz
xchg
jecxz
jnp
dec
and
dec
sub
sub
mov
cltd
push
aaa
pop
xor
pop
cmc
test
mov
sbb
mov
push
mov
testl
ret
xacquire
jmp
push
lods
cmp
push
push
rorl
jae
test
int3
popl
outsb
stc
sub
test
or
andb
dec
loop
mov
dec
test
imul
nopl
sarb
test
repnz
dec
mov
cmpsb
or
jmp
pmullw
inc
cmp
fisttpll
outsl
stc
mov
jge
jnp
jne
push
sub
jne
sub
jmp
jle
xchg
mov
jl
push
cli
data16
add
dec
jg
stos
sub
pusha
push
mov
jbe
dec
gs
outsl
in
mov
inc
inc
mov
add
icebp
add
pop
xchg
jge
pop
mov
jp
sub
add
adc
daa
rorb
or
and
out
lret
inc
dec
jg
mov
inc
pmulhuw
gs
mov
and
shlb
frstor
mov
jbe
scas
jb
sbb
and
fldt
cmp
out
pop
sub
imul
dec
xchg
inc
cmp
add
add
js
sub
es
ret
add
mov
inc
jl
pusha
pop
sub
fs
les
js
push
jmp
in
fmull
adc
adc
sahf
les
dec
jae
and
ja
sbb
xor
pop
cmp
aam
inc
aas
adc
xlat
and
push
sbb
dec
mov
jb
andl
xchg
mov
notb
adc
sbbb
mov
sub
rcrl
add
aad
out
fdiv
popf
mov
pop
push
nop
jnp
sbb
jns
mov
loop
cmpsl
jmp
push
icebp
pusha
int3
arpl
xor
clc
adcb
inc
and
pop
adc
sbb
pop
add
stc
ret
pop
pop
push
pop
push
repz
xor
sub
ljmp
stos
nop
lock
mov
jno
push
add
dec
mov
sub
aas
sub
stos
sahf
xor
loop
jmp
loopne
aas
addl
mov
dec
jmp
flds
and
sbb
repz
nop
pop
nop
or
push
mov
fsubrs
dec
jmp
mov
push
cld
cwtl
pop
cmpsb
icebp
mov
std
pop
les
sti
push
sbb
stc
jg
ss
dec
test
push
cmp
push
enter
sbb
mov
or
cmp
sub
jmp
test
mov
mov
jno
sub
mov
adc
fucomp
mov
leave
sub
push
fnstsw
daa
mov
add
dec
inc
and
add
jnp
cmp
adc
imul
sahf
jnp
shll
dec
add
adc
dec
jg
pop
out
dec
js
sbbl
inc
jmp
pop
ret
fs
loop
inc
mov
inc
mov
xchg
stos
das
add
add
add
jmp
insb
leave
nop
dec
mov
xor
pusha
in
fucomp
idiv
xchg
dec
adc
ret
jb
rorl
mov
in
add
mov
dec
rcrb
pop
or
mov
iret
cmp
push
mov
pop
fisttps
rcrb
das
nop
jo,pt
sub
aad
sub
inc
mov
mov
and
push
xchg
out
cmpl
dec
dec
or
push
outsb
xor
adc
mov
push
sti
pop
push
sbb
test
mov
pop
lcall
movsb
add
cmp
mov
and
jmp
pop
lds
add
popl
push
mov
cmp
inc
add
scas
sub
rcll
subb
in
or
push
adc
add
and
adc
enter
mov
adc
clc
cmp
xchg
daa
xchg
cmpsl
adc
in
jb
push
sbb
push
pop
rorl
or
xor
subl
aaa
xchg
insb
das
add
hlt
sub
pushf
add
mov
push
mov
dec
add
sbb
mov
jecxz
mov
ljmp
addl
lahf
mov
bound
push
jmp
mov
xorb
adc
xchg
push
test
cli
mov
xorb
sbb
adcb
daa
pop
mov
or
xlat
jo
dec
mov
es
or
fwait
add
add
pop
push
mulps
adc
out
adc
or
shr
mov
add
lods
sub
xchg
or
aas
shr
push
inc
daa
push
cld
outsl
sub
mov
jmp
mov
xor
pop
mov
jp
jns
mov
xchg
add
das
inc
cld
and
pop
push
add
push
dec
xchg
jae
or
pop
push
out
outsb
lods
jbe
imul
test
xchg
add
imul
add
push
adc
cmp
mov
pop
dec
adc
adc
sub
xchg
cmc
and
pop
jmp
or
shrl
jnp
je
mov
push
call
sub
adc
inc
mov
lock
jge
dec
imull
mov
jg
dec
sub
lret
sub
mov
add
jae
inc
push
jo
ss
dec
je
int3
or
xchg
outsb
mov
pop
dec
iret
loopne
xor
push
push
pop
notl
cld
fs
or
test
mov
iret
jmp
ljmp
add
xor
test
cs
jecxz
sbb
adc
sbb
mov
or
int
add
out
mov
jo
cmp
cmpsl
ljmp
ret
push
arpl
cmpb
jno
jmp
mov
adc
mov
sub
add
into
mov
add
aam
fistps
pop
add
test
adc
sub
mov
jmp
vmovhps
call
ret
add
ror
cmp
pop
pushf
cmp
sub
push
mov
out
sbbb
jno
lods
xchg
pusha
shrl
shl
pop
add
aaa
xor
lret
push
adc
stos
lds
mov
cmp
enter
mov
cld
and
inc
add
mov
jne
mov
xchg
add
hlt
insb
jmp
insl
adc
mov
addr16
mov
fdivl
aas
xor
and
xor
lcall
xlat
lds
loop
push
push
add
and
filds
aas
aam
or
pop
aad
jmp
push
jnp
jmp
in
cmpsl
and
sub
or
aaa
cli
cmp
add
adc
lret
scas
cmc
add
neg
jge
or
sbb
mov
orb
push
push
sub
nop
rolb
fmuls
repz
stos
add
and
add
imul
add
inc
push
push
xorl
bound
jns
dec
sbb
adc
fmuls
add
jnp
aas
or
cmp
or
push
aad
lret
jo
sub
rcrb
lcall
jecxz
cmp
jmp
mov
fs
jne
xchg
push
xchg
sub
nop
xchg
cmp
dec
xor
ds
ret
add
xor
dec
push
pop
ret
pop
sahf
shll
xor
pop
mov
push
andb
shrl
xchg
pusha
dec
push
mov
sub
shr
pop
pop
lds
or
sub
pop
mov
add
inc
xor
mov
outsl
xor
sub
pop
dec
push
and
push
inc
adcb
jae
vpsrad
xor
add
sbb
rorl
cmp
daa
rorl
adc
or
push
fwait
dec
xchg
fldcw
fstps
incl
push
mov
inc
inc
hlt
dec
mov
pop
jmp
lock
pop
inc
and
push
or
mov
dec
push
data16
and
push
ret
pop
or
adc
shl
popa
mov
lods
lahf
pop
mov
sub
or
pop
mov
add
adcb
lock
adc
dec
scas
inc
je
test
leave
mov
adc
xchg
or
mov
pusha
or
lock
mov
subb
cmp
dec
movsl
aaa
add
adc
xchg
pop
daa
sbb
mov
pop
shll
push
popa
jmp
imul
or
adc
mov
jns
aas
mov
xchg
sub
es
mov
loop
std
insb
push
loopne
cmp
rorb
xor
xchg
ret
lock
cld
xchg
add
push
popf
fildll
movsl
push
pop
xchg
xchg
shr
sbb
mov
sub
ja
and
pop
sbb
aam
or
mov
outsb
pop
inc
lods
fisttps
lds
or
push
push
push
cmc
or
inc
pushf
orl
adc
in
adc
and
inc
loope
arpl
sbb
adc
sub
outsb
sahf
push
aas
add
notl
jmp
or
stos
jg
push
xor
shr
add
test
jo
jmp
fldenv
jge
adc
loop
dec
mov
or
jno
iret
xor
dec
inc
outsl
fisubl
test
mov
into
jge
push
adc
push
add
adc
sub
test
inc
dec
and
fisttps
xchg
mov
mov
or
push
movsl
addr16
into
sub
add
xor
mov
mov
gs
mov
call
mov
sbb
xor
jae
sahf
push
pop
inc
imul
cmc
push
inc
repz
cmp
jmp
pusha
jo
pop
and
pop
or
mov
int
sub
dec
shl
outsl
out
cmp
add
pop
pop
xlat
gs
into
pop
mov
mov
ljmp
aaa
xchg
xchg
out
jo
inc
mov
test
filds
pushl
adc
add
and
mov
mov
cs
push
leave
xchg
sub
ret
add
adc
push
pop
test
mov
xor
aad
mov
sub
jno
jle
jo
push
dec
stos
mov
xor
xor
out
sbb
mov
cmp
cmp
mov
jmp
adc
mov
sahf
pop
push
mov
or
pop
and
cwtl
mov
cmp
pop
in
incl
sub
repz
xor
and
mov
dec
sarb
add
bound
test
xor
or
pop
push
testb
loopne
jmp
pop
sub
push
les
adc
mov
dec
pop
sub
aaa
fdivrs
enter
divb
or
jecxz
jmp
jmp
mov
pop
cld
lods
adc
mov
dec
adc
cli
addb
in
cmpsb
js
add
test
popa
mov
pop
xor
adc
test
xor
movsb
add
or
dec
add
xchg
sti
scas
pop
push
in
xchg
pop
ljmp
loope
mov
jno
mov
aad
and
inc
cwtl
inc
cmpsb
stos
adc
sbb
or
adc
jbe
test
push
xchg
repz
int3
lahf
mov
ss
lret
mov
sub
hlt
sahf
dec
sub
and
push
dec
aam
push
sbb
sbb
mov
add
mov
imulb
scas
mov
aam
mov
aaa
and
ret
leave
xchg
in
jmp
leave
test
cmpsb
pop
xor
in
lock
fmull
pop
popf
push
sub
mov
sub
jno
ret
or
inc
out
lods
in
xchg
pop
mov
add
ds
pop
jmp
rep
or
stos
mov
add
dec
inc
pop
dec
push
bound
cwtl
xor
and
mov
stos
push
imul
out
test
jae
jo
mov
jmp
ficoml
les
aam
mov
mov
dec
test
jo
aam
jo
or
and
inc
cmp
add
cltd
xor
lds
iret
add
dec
dec
shr
mov
mov
pop
out
repz
dec
clc
adc
lret
mov
mov
in
cmp
nop
pop
cmp
xchg
mov
adcb
mov
mov
aas
and
pop
pop
clc
pop
xor
mov
adc
movsb
and
mull
or
loope
int
inc
repnz
xor
data16
pop
jmp
jmp
push
mov
xchg
rolb
mov
xchg
and
mov
push
mov
adc
lret
aam
jns
test
add
or
sahf
fldcw
cmp
loope
or
pop
arpl
sub
dec
xlat
stos
jge
bound
sbb
in
jne
mov
jmp
xor
stc
add
scas
add
cwtl
jmp
push
pop
mov
out
dec
fidivs
bound
or
cmp
cmpsb
dec
and
shrb
dec
arpl
subl
dec
ret
sub
cltd
adc
dec
xchg
std
rep
jmp
das
or
jge
xchg
mov
mov
out
add
rorb
sub
dec
stos
je
or
jp
cmpsb
mov
insl
sub
movl
dec
mov
jge
scas
inc
mov
inc
notb
push
inc
jno
jp
shl
testl
xchg
push
mov
pop
fidivrl
xor
xor
inc
xor
repnz
push
enter
sub
js
dec
jmp
pusha
pop
dec
pop
loope
jmp
mov
add
lods
pop
mov
pop
mov
jae
pop
hlt
pop
ret
jp
dec
inc
add
sub
cld
mov
imul
ljmp
pop
sub
or
arpl
inc
jle
pop
xchg
outsb
rcrb
pop
push
sub
add
sub
shlb
cmp
aad
cmpb
cmpsl
jne
pop
sub
push
mov
xchg
jge
xchg
jmp
xor
rorl
aad
ljmp
sub
pop
push
push
daa
jmp
out
add
sbb
push
inc
fcoms
adc
sbb
pop
jmp
adc
add
mov
or
daa
ja
push
pop
outsb
inc
sbb
jge
add
xchg
xor
cs
fwait
add
jns
outsb
lcall
or
imul
loopne
dec
pop
test
aaa
inc
fwait
leave
test
xor
jns
hlt
and
outsb
test
or
mov
push
icebp
lock
call
add
jns
or
mov
andl
insl
mov
sbb
dec
cmp
lods
or
add
dec
push
push
imul
stos
shlb
push
mov
inc
daa
add
cmpsl
pavgb
xor
ss
incb
pop
incl
mov
pop
inc
lds
cld
or
jmp
or
ret
sahf
pop
xchg
out
adc
or
jmp
mov
cwtl
out
adc
insb
add
xchg
and
aaa
mov
jmp
arpl
mov
inc
stos
dec
testb
xor
test
push
mov
adc
and
pop
sbb
cvttps2pi
mov
ja
add
or
or
push
imul
pop
ja
lods
xor
sarl
imul
xor
fwait
lods
and
sbb
pop
and
push
or
cpuid
insb
rcl
adc
test
jnp
scas
and
mov
jg
and
and
xor
mov
jle
fmull
arpl
dec
ljmp
lea
fdivr
push
mov
and
mov
sub
rclb
inc
lret
pop
cmp
stc
movsb
xorb
and
cmp
xor
out
ret
dec
pop
fldenv
mov
and
fdivs
add
orb
jge
mov
mov
in
push
sub
push
push
cs
aas
sub
jne
call
pop
xchg
mov
aad
in
or
xchg
rcll
sbb
mov
out
add
or
pop
popa
repnz
xchg
lock
out
adc
shufps
out
ficomps
icebp
loop
and
int
add
into
iret
arpl
mov
and
dec
and
xchg
shll
xchg
ds
xchg
sbb
dec
and
jmp
stos
and
jns
adc
pop
in
adc
mov
add
cmp
out
or
das
push
sub
fidivl
mov
ljmp
ret
mov
clc
sbb
addr16
add
ds
mov
add
push
scas
into
mov
mov
pop
mov
out
roll
fdivp
sti
sub
inc
scas
fs
std
jbe
stos
je
rcrb
push
mov
outsl
lods
in
dec
dec
inc
ret
jecxz
inc
popa
jne
pop
data16
jno
ficoml
pop
mov
jnp
dec
iret
repz
adc
adc
push
adc
ljmp
testb
arpl
daa
cmp
jbe
mov
xor
loop
sub
loopne
jne
or
pushf
and
or
dec
dec
inc
test
mov
pop
xor
inc
lods
push
xchg
ret
aam
sub
xchg
mov
or
add
addr16
stos
xor
xchg
insb
cmpsl
aas
leave
aad
popa
sti
popf
jo
cmovbe
das
adc
loope
adc
daa
mov
adc
pop
pushf
out
sar
aad
cld
les
sarl
and
or
push
lahf
outsl
repnz
push
shlb
or
or
outsb
sbb
cmp
add
int3
mov
add
xchg
fstpl
add
and
adc
pop
aad
add
jmp
push
mov
scas
add
inc
popa
in
movsl
and
insb
push
dec
push
pusha
jae
cmp
mov
roll
pop
jmp
test
fidivrl
and
fisttpll
jmp
mov
sub
hlt
mov
lds
mov
sbb
push
and
dec
mov
arpl
mov
pop
stc
sub
cs
scas
cmp
sbb
jmp
repz
cmpsl
andb
push
pop
add
sbb
fists
stos
aaa
xchg
add
cmp
es
gs
push
or
popl
lods
ret
std
fcomip
dec
xchg
sub
pusha
lds
dec
inc
or
add
testl
ja
pop
fmull
dec
ret
out
movsl
stos
add
push
fisttps
dec
cmp
scas
jge
subb
adc
aaa
push
adc
aaa
shlb
fstpl
mov
mov
add
rcl
xor
call
scas
jge
sub
or
inc
movl
adc
loope
in
adc
adc
outsl
std
xor
or
pop
call
push
inc
ss
jmp
fcmovnbe
add
jb
repnz
cmovs
and
aam
mov
ficompl
jl
and
push
jmp
ja
pop
mov
and
pop
adc
pop
jb
mov
int3
nop
push
jnp
aad
pop
push
or
xchg
ret
ja
rep
in
or
push
pop
out
movsb
sar
mov
les
add
pusha
push
in
nop
sbb
pop
xlat
dec
sahf
xchg
stos
xchg
int
icebp
inc
inc
xor
and
jbe
repnz
push
jmp
insl
roll
add
xchg
jecxz
pushf
push
addr16
add
xchg
pop
xor
daa
jmp
xor
aad
mov
imul
xor
mov
sub
or
loop
sub
push
pop
shl
sbb
leave
push
leave
icebp
mov
xchg
push
push
mov
inc
adc
mov
pusha
or
mov
or
mov
pop
ds
ror
stos
or
add
sbb
jbe
cwtl
mov
ss
mov
dec
les
mov
or
std
and
and
mov
sbb
sub
add
add
lock
xchg
cmc
mov
push
mov
push
dec
add
cmp
add
cmc
ret
or
sahf
cmp
insl
adc
testb
das
enter
dec
pushf
shlb
sub
stos
std
xor
or
and
xlat
mov
not
mov
in
daa
clc
mov
loop
arpl
xchg
test
and
popa
cli
or
inc
sbb
or
testb
sbb
dec
cwtl
mov
push
dec
imul
cmp
mov
xlat
ja
bt
ret
or
sub
xchg
add
popl
jae
aas
or
ror
jmp
lds
test
xor
pop
push
push
sub
out
rcll
add
pop
shlb
pop
je
mov
sub
sbb
pop
pop
or
push
dec
imul
pop
sbb
lahf
das
lds
cmc
adc
jb
pushf
dec
cli
xor
xor
and
add
jnp
add
mov
push
cs
mov
push
cs
adc
fisubs
push
sub
sti
xlat
lods
lret
add
das
addb
sub
loopne
sbb
cltd
and
adc
xor
pop
sahf
adc
push
mov
leave
or
addr16
inc
or
pop
ljmp
pop
pusha
jnp
adc
cwtl
mov
popf
push
xchg
dec
add
sbb
insb
mov
movsl
cld
cmpsl
xchg
pop
or
and
sbb
xchg
adc
push
daa
add
mov
dec
mov
sub
mov
ret
and
add
sub
add
cmc
jns
add
add
dec
cmpsb
out
pop
mov
addb
into
jmp
push
shl
aaa
or
gs
clc
mulb
xchg
std
in
lds
mov
shr
xlat
adcl
or
add
or
push
pop
push
dec
sbb
jecxz
add
adc
or
xchg
pop
fidivl
notb
lods
out
nop
sub
push
jge
jne
mov
jmp
cld
mov
inc
cwtl
dec
or
pop
gs
sti
push
ss
movsb
xor
sahf
push
fdivrl
push
les
mov
cmc
es
jo
es
push
notb
sub
cs
push
incl
add
jg
jp
and
lcall
xchg
dec
rcl
or
pop
jo
sub
push
or
cmp
mov
jle
dec
shl
loope
xor
add
xorl
rclb
inc
sti
cmp
mov
jbe
add
adc
sbb
cmp
jmp
movsb
test
cmp
push
adc
jnp
sub
mov
pop
adcl
enter
sub
push
imul
push
push
stc
jne
mov
insl
fs
add
fstpt
mov
pop
push
test
loope
adc
dec
jnp
test
mov
ret
or
outsl
sub
mov
cwtl
cmp
inc
lret
pop
dec
jle
lods
in
sub
addl
arpl
fimull
out
adc
pop
repz
push
neg
rclb
jmp
pop
ja
std
inc
out
and
dec
pop
mov
or
mov
jg
dec
jg
nop
push
jle
or
inc
push
push
add
dec
sti
filds
clc
sahf
mov
pop
stos
fucomp
das
loope
movsl
cmpsb
std
xchg
bound
lds
adc
pop
pop
dec
lock
enter
xchg
pop
and
pop
and
mov
mov
mov
xchg
adc
cltd
out
into
aaa
jmp
push
push
jne
and
ret
pop
into
or
sub
push
icebp
lock
mov
dec
jne
sub
xchg
daa
sbb
ret
shl
push
jle
and
sahf
sub
pop
ss
and
push
dec
push
or
jo
push
in
leave
aas
sbb
push
mov
push
in
sbb
mov
mov
repnz
stos
shrb
sahf
or
mov
les
mov
rcrl
pop
out
xchg
cli
mov
push
aas
aad
jmp
or
ret
dec
fsubl
dec
aas
daa
mov
icebp
fidivl
mov
cmpsl
fimuls
sub
cmp
cwtl
xchg
bound
add
les
pusha
sub
es
and
pop
inc
lahf
adc
icebp
nop
sarb
outsl
dec
sbb
push
je
inc
scas
inc
clc
nop
cmp
cld
pusha
push
fs
push
adc
lahf
ficompl
or
cmp
sub
add
add
movsl
or
cmpsb
pop
pop
jecxz
dec
mov
test
push
rolb
outsb
add
push
dec
or
xchg
pop
jne
adc
int3
js
std
xchg
jno
inc
pop
adc
lret
clc
jne
dec
inc
add
mov
sarb
stos
in
addr16
test
scas
inc
sub
sub
mov
xchg
cmp
mov
jmp
sbb
dec
or
in
add
add
testl
fstpt
movsl
repnz
scas
jne
adc
or
pop
mov
sub
pusha
and
push
aam
lea
xchg
arpl
jg
into
push
bnd
hlt
sti
mov
jge
jle
ss
add
lahf
pop
popf
call
mov
std
push
fwait
adcb
mov
mov
mov
jle
popf
dec
add
sbb
and
cld
mov
test
and
pop
pop
or
jmp
cmpsb
into
daa
pop
or
xchg
pop
xor
pusha
add
int
std
mov
and
in
mov
add
lahf
and
add
xchg
pop
call
xchg
jmp
or
sbb
arpl
add
add
and
jg
jnp
pop
pusha
jmp
xorb
mov
adc
pop
mov
cld
pop
outsl
outsl
pop
pusha
mov
inc
jle
aas
dec
add
pop
push
jne
cli
or
ret
andb
mov
push
add
jmp
push
in
dec
je
ret
jmp
or
loopne
cmp
daa
ret
sbb
sbb
subb
fidivrs
push
sub
or
fidivs
in
scas
in
das
mov
pop
out
lahf
adc
jge
sub
push
mov
add
xchg
pop
dec
ss
jb,pt
xchg
cmp
push
and
push
mov
orl
and
rorl
add
out
sti
out
jbe
por
sub
jge
mov
je
out
cmc
pop
add
fidivrs
inc
pop
hlt
add
jmp
movsl
fisubrs
movsb
sti
gs
in
pop
movsb
jo
aad
dec
imul
add
mov
test
repz
push
inc
jge
inc
sbb
testb
and
push
mov
xor
push
stos
cmpsb
outsl
ret
jmp
ret
jle
xchg
pop
lods
push
dec
ljmp
mov
jo
enter
fisubrs
mov
add
push
xor
pop
ljmp
pop
fstl
ret
cmc
xchg
jl
jle
andl
inc
or
add
adc
pop
mov
aam
shl
sbb
mov
push
negb
mov
mov
inc
shl
or
or
ljmp
jmp
pop
jns
imul
rcrl
or
jns
or
push
add
mov
mov
js
loop
pop
jns
adc
andb
pop
lods
mov
call
sbb
and
jmp
push
pop
inc
pop
ficompl
or
jmp
jne
stos
stos
testb
mov
and
les
in
adcl
pop
dec
stos
shll
aad
xchg
outsb
icebp
pop
add
iret
jmp
add
addb
pop
rolb
or
and
std
loop
add
push
mov
scas
xchg
xchg
ja
fimull
jmp
stos
mov
dec
scas
xchg
or
and
sti
or
imulb
rol
mov
ret
inc
pop
ljmp
mov
mov
sub
sbb
sbb
mov
or
or
adc
ffreep
pop
or
stos
adc
xor
negl
imulb
sub
icebp
sahf
mov
das
cld
mov
cmp
jo
sbb
mov
fcom
sub
inc
jp
dec
mov
mov
scas
jp
lret
sub
push
xchg
add
pop
adc
jno
jmp
mov
sub
push
mov
iret
pop
mov
test
enter
in
sbb
xchg
push
in
inc
mov
xor
dec
ljmp
sub
jnp
jbe
mov
shl
jb
mov
fisubrl
xchg
stos
xor
aas
inc
imul
mov
aaa
inc
jg
popl
mov
jnp
jmp
repnz
jmp
xor
andl
dec
pop
xchg
in
loopne
or
mov
adc
out
mov
jmp
decb
pop
xor
and
repnz
shrb
addr16
outsb
iret
adc
dec
mov
es
movsl
jmp
push
cwtl
lahf
test
lock
clc
xchg
push
add
addb
shl
not
ret
sub
jns
dec
or
push
dec
inc
mov
push
mov
mov
aad
sub
movsb
sub
pop
imul
push
imul
sub
and
fcomps
xor
dec
imul
add
or
cwtl
scas
mov
lods
xor
push
or
pop
push
dec
xor
inc
push
call
xchg
ja
and
test
scas
inc
aaa
notl
and
pop
test
or
inc
lods
stos
out
add
jbe
push
ret
fdivs
cli
fs
lock
pop
and
push
gs
out
shlb
adc
mov
jnp
rcl
mov
push
jmp
mov
jns
add
inc
in
sub
xchg
shrl
pop
roll
loopne
push
xor
aad
jle
mov
push
enter
or
jp
xchg
push
push
sub
jae
pop
ljmp
xchg
cli
xchg
jns
lock
or
jecxz
rcr
loope
bound
dec
icebp
add
test
mov
or
push
xlat
gs
scas
cmp
jmp
out
inc
mov
out
bound
leave
cmc
insb
mov
nop
inc
xchg
fcoms
lcall
out
pop
test
lods
test
sbb
popf
ja
push
es
add
pop
dec
xor
mov
movsb
push
fwait
xlat
ror
pop
js
loope
lahf
mov
add
pop
pop
mov
dec
lock
cmp
pop
xchg
mov
and
mov
enter
pop
movl
cmpsl
gs
mov
xchg
daa
push
xchg
xor
filds
out
outsl
add
pop
push
cmp
jnp
out
adc
ss
xchg
pop
mov
cmpsl
dec
jne
mov
dec
jbe
popf
lock
dec
rolb
sbb
stos
fadd
notl
add
aas
jg
in
jge
rcl
or
rcr
cmc
jmp
sub
sub
ljmp
inc
add
js
jno
imul
test
test
inc
sbb
sub
mov
push
sbb
xchg
inc
bound
mov
dec
inc
inc
jmp
leave
rcll
inc
jecxz
sub
push
push
imul
les
aad
sti
in
adcb
cmp
mov
add
fwait
mov
pop
iret
lods
jmp
add
pop
and
dec
jmp
sub
out
imul
mov
js
ja
pop
or
pop
dec
pushf
push
lock
ret
insl
pop
in
popa
pop
je
adc
stc
pop
jg
sti
das
inc
std
mov
inc
dec
or
push
cld
xchg
inc
jmp
pop
aad
sub
push
sub
shr
cmp
aas
in
arpl
aaa
adc
in
insl
add
orl
push
loope
test
daa
xchg
mov
push
push
out
rolb
inc
cs
test
or
jge
cld
pushf
cli
push
add
jle
jmp
jno
flds
sub
adcl
outsl
mov
shlb
xor
adc
cli
insl
sarl
pop
adc
push
add
sub
inc
sbb
jno
into
pop
xor
mov
movhps
sti
cmpb
int
add
cmp
sub
pop
xor
cs
aas
sbb
and
js
add
sbb
push
jns
add
mov
cld
add
and
jb
pop
cmp
adcb
test
dec
stc
js
xchg
cmc
xor
mov
jge
pop
mov
pushf
dec
inc
scas
sub
fimull
xor
jne
add
inc
jmp
rcrl
std
xorb
nop
into
in
scas
xchg
fadds
testl
daa
or
inc
daa
js
orb
push
addl
arpl
and
mov
push
fidivrl
adc
mov
jge
dec
xlat
inc
mov
shlb
je
or
add
sbb
cld
pusha
inc
ss
rorb
ja
inc
mov
or
das
lret
jns
pop
pop
push
jbe
lds
push
test
xchg
sub
mov
filds
add
jge
pop
les
subl
push
stos
xor
jae
dec
or
mov
mov
ja
push
mov
inc
mov
out
mov
in
mov
push
dec
mov
jns
push
sbb
or
ljmp
js
test
jmp
cmc
sahf
adcl
push
jbe
int
cmpsl
sahf
dec
hlt
cld
sbb
cmc
push
xor
jmp
inc
fdivrs
sub
pop
pushw
testl
bound
adc
lods
das
cmp
mov
in
sub
push
push
mov
fimuls
js
add
repnz
fadd
arpl
outsb
xchg
mov
cmpsl
dec
and
jmp
cwtl
jbe
stc
out
adc
pop
inc
lret
xchg
out
les
mov
mov
sub
lock
fstpl
orb
pop
mov
outsl
push
mov
in
mov
stos
mov
add
xchg
adc
out
jns
mov
push
mov
add
sbb
push
cli
test
imul
ljmp
pop
mov
shl
cmp
add
bnd
jae
push
jge
popf
pop
gs
xor
sub
dec
cmp
shr
dec
cmp
std
popf
push
enter
mov
cmp
jmp
mov
loope
fsubrl
jle
cli
or
xchg
inc
loopne
inc
sub
repnz
push
xor
xlat
xchg
or
jno
push
cmc
xlat
jle
fmuls
push
ret
lret
push
or
pop
pop
pusha
icebp
mov
jmp
js
adc
dec
adc
imul
and
rcll
mov
push
out
jns
or
ljmp
cwtl
jl
mov
das
clc
pusha
mov
dec
mov
outsb
add
xor
cmp
push
mov
or
sbb
or
and
dec
test
pop
mov
das
in
mov
and
jns
add
shll
cmp
aaa
insb
aas
lock
push
xchg
inc
jmp
add
inc
push
mov
fsub
outsb
lock
jnp
mov
push
pop
mov
sub
pop
cmpsl
push
or
in
pusha
add
jne
jno
imul
pop
jne
push
shl
push
cmp
lods
add
dec
loopne
shlb
sarb
je
mov
add
mov
imul
mull
inc
pop
and
shlb
into
movsb
lret
dec
decl
add
jle
jmp
fisttpl
js
imul
pushl
xchg
ret
mov
and
sbb
pop
or
mov
loopne
dec
jmp
pop
dec
je
int
es
adc
add
jg,pn
mov
push
or
inc
dec
xchg
sar
mov
cmpb
push
ss
add
sub
add
cbtw
and
push
or
jmp
jmp
cmp
shrb
lds
cltd
in
mov
aaa
lods
adc
inc
in
and
jmp
ljmp
mov
pop
mov
jge
pop
push
mov
lds
nop
ret
sub
out
push
loop
rcrl
cmp
test
cmp
dec
inc
pop
je
daa
das
inc
adc
std
mov
fcoml
push
add
ss
pusha
clc
sbb
xchg
fscale
lret
pop
mov
movsb
imul
or
cmp
cs
cmpsb
lock
cmp
scas
std
push
outsb
add
xchg
not
mov
sbb
sub
dec
negl
xchg
jmp
push
dec
or
cmp
or
inc
les
add
out
test
mov
dec
sub
or
mov
add
int
ds
lea
clc
mov
cld
lods
push
sbb
push
push
adc
repz
push
mov
or
fdivrl
mov
jecxz
mov
pop
or
or
push
adc
add
xor
sub
dec
push
inc
aam
push
mov
loopne
lods
mov
movzwl
dec
pop
mov
popa
rclb
jb
xor
jl
add
jae
stos
cmp
pop
arpl
outsb
add
inc
jbe
loope
or
test
mov
orb
push
inc
cs
fiadds
aaa
push
incb
jmp
fs
or
mov
jne
daa
dec
push
mov
or
jmp
mov
pushf
pop
xchg
add
xchg
lret
pop
jb
daa
ja
pop
mov
and
std
fisttps
inc
sti
lea
outsl
push
fwait
icebp
in
repz
add
push
repz
loope
sbb
pusha
xchg
sub
in
sbb
add
push
fdivrs
scas
xor
push
adc
sti
xor
or
andb
out
pop
andb
and
aaa
in
cmp
mov
inc
mov
xchg
test
add
std
int
pop
cltd
lock
aas
push
test
push
pusha
mov
imul
lahf
mov
daa
jl
dec
and
sbb
ds
mov
dec
fistpll
lret
shl
xchg
push
pop
jl
subb
hlt
mov
call
imul
xchg
clc
jge
popf
push
cmp
xchg
cwtl
pop
cmpsb
pop
mov
sub
push
iret
ds
pop
xchg
add
jbe
jmp
adc
adc
gs
push
dec
es
jle
cmp
pop
shrb
rcr
rcll
push
and
cmpsb
mov
add
jmp
pop
out
pop
dec
pop
cmc
scas
sub
inc
mov
hlt
je
addl
dec
or
add
fidivs
dec
pushf
mov
push
repnz
push
out
subb
mov
sti
sbb
das
clc
sbb
jmp
decb
das
je
clc
jmp
dec
subl
int3
push
out
insb
push
dec
leave
addr16
pop
push
mov
inc
repnz
stc
movsb
inc
adc
loope
ret
adc
push
and
cmp
sbb
das
ja
stos
je
add
dec
hlt
lods
mov
into
js
push
adc
push
cmpl
mov
sub
dec
fstps
or
jl
es
out
add
fstpt
lret
mov
cmpsl
mov
pop
push
test
or
ret
imul
clc
dec
outsb
add
sub
push
jmp
cmc
jae
inc
in
nopl
dec
test
or
loop
rcrb
xchg
imulb
fldenv
sbb
xchg
fnsave
pop
ds
je
xor
push
jo
add
mov
mov
mov
dec
sub
cmc
or
jb
fadds
not
xchg
mov
js
sub
pop
sub
lock
shl
push
cld
add
cmpsl
loop
into
lahf
xchg
mov
push
in
xchg
test
stc
das
push
jmp
icebp
and
xchg
fistpl
idivl
dec
scas
and
jg
jg
xor
inc
add
xchg
lret
push
push
add
sub
test
je
pop
jecxz
push
movsl
mov
pushf
inc
xor
mov
push
mov
je
or
mov
sbb
pop
aas
sub
popf
test
pop
add
adc
lret
in
add
mov
push
push
push
sbb
cmp
test
push
or
jnp
add
xchg
shrl
rclb
push
aas
sti
sub
shl
push
iret
cmpb
dec
pop
and
dec
fcoms
loopne
mov
adc
mov
add
pop
pop
xor
push
outsl
mov
les
inc
call
test
jmp
fcmovb
or
or
daa
jg
xchg
mov
bound
repz
pop
add
inc
sub
shrb
ja
dec
pop
test
pop
pop
sub
cmc
inc
sbb
push
ss
push
in
mov
jge
sub
sub
int3
adc
decb
jmp
mov
mov
cli
pop
sub
or
test
mov
mov
xlat
adc
inc
pop
push
add
das
lods
daa
fiadds
mov
mov
add
sbb
andb
loope
rcl
adc
mov
sbb
pop
addr16
fimuls
jb
out
fiaddl
jg
xchg
dec
push
popf
rolb
push
pop
je
outsl
aas
les
pop
jmp
mov
stc
and
mov
outsb
repnz
imull
bound
mov
jae
inc
clc
lret
add
xchg
adc
dec
pushl
lret
lds
enter
pop
mov
add
outsl
orl
push
std
shl
push
ljmp
mov
out
inc
das
loope
pop
jmp
push
adc
nop
or
ficoms
daa
flds
out
push
out
cs
icebp
and
mov
pushf
test
movl
rcll
scas
lret
push
xor
push
int
cld
adc
or
jmp
cli
inc
fisubrl
dec
jno
lret
add
sub
sbb
or
jno
decb
cwtl
pop
hlt
pop
xor
xchg
movsb
mov
push
xchg
push
or
inc
sub
iret
outsb
pop
and
and
mov
gs
bound
dec
push
and
es
ret
test
pop
out
iret
push
push
outsb
rclb
dec
xor
mov
out
adc
or
scas
test
and
test
push
push
jg
sub
mov
fidivs
pop
jmp
fidivrs
xor
outsb
jmp
xlat
jp
push
mov
mov
mov
or
inc
or
or
jge
out
hlt
or
dec
arpl
mov
dec
pop
adc
data16
adcl
aas
loopne
ljmp
mov
dec
push
mov
dec
lods
and
icebp
push
sub
xchg
and
inc
mov
dec
sub
pop
xlat
jecxz
xchg
fldl
in
add
aas
or
pop
add
pop
sub
mov
pop
push
ficoms
and
shrb
dec
xor
add
dec
cmpsl
add
out
cmp
sub
out
push
out
lods
add
push
pop
pusha
ret
cs
push
cmp
std
sub
pop
xor
sbb
add
ja
dec
inc
adc
xor
cli
dec
mov
sub
mov
pop
pop
push
negl
mov
iret
leave
jne
xlat
adcb
xor
fisubrl
pop
or
xor
adc
sarl
adc
add
add
adc
pop
mov
or
loopne
pushf
aaa
cld
loop
vsqrtsd
mov
adc
pop
enter
xor
mov
push
fsubs
mov
fmull
call
xor
rclb
jnp
arpl
adcb
out
xchg
out
daa
psubsb
cmp
jne
lahf
sti
add
push
push
add
jmp
stc
les
test
jmp
movsb
rorb
loopne
pushf
push
add
das
sbb
lret
add
sbb
adc
aam
add
jmp
imul
hlt
jne
test
sub
push
in
icebp
mov
and
lock
movntps
shr
mov
adc
mov
xchg
jno
movsb
out
add
leave
cmpps
jmp
fistpl
xor
clc
mov
pop
sub
test
addr16
cmp
push
add
or
jmp
enter
and
insb
add
push
push
mov
not
in
loope
mov
or
sub
not
leave
fistpll
cmp
mov
rcll
imul
pop
push
sti
ja
hlt
pop
inc
mov
or
adc
mov
push
pop
cwtl
xchg
dec
jae
sub
and
push
mov
lock
mov
add
jecxz
cmpb
mov
jge
adc
xchg
inc
movsb
daa
sbbl
mov
iret
bound
push
pop
out
mov
cs
prefetch
pop
add
ss
mov
popa
add
and
xor
loope
and
and
fnsave
xchg
icebp
xchg
add
sub
icebp
cmpsb
mov
loope
dec
xor
cld
int3
mov
pop
jp
lret
add
and
pop
cld
jmp
mov
mov
repnz
mov
in
dec
dec
cmp
imul
mov
inc
xchg
xchg
adc
xchg
and
push
push
and
dec
and
and
cmp
shll
ds
push
xchg
and
fcmovb
sub
mov
bound
lret
leave
test
les
add
cmpb
dec
scas
inc
push
loop
xor
adc
sti
dec
scas
fcmovb
sbb
pop
and
push
dec
aam
and
jge
movsb
pusha
xor
popw
sbb
mov
rcrb
push
inc
mov
lcall
push
add
mov
add
adc
pop
and
mov
or
out
pop
push
pop
xchg
mov
sub
sbb
or
in
ljmp
dec
or
outsb
test
inc
push
bound
pop
push
push
jmp
jg
sarb
outsl
mov
xchg
ljmp
stos
daa
and
jbe
mov
dec
and
pop
pop
lods
aas
shl
cwtl
xchg
cld
into
mov
adc
mov
sbb
jo
mov
xor
mov
clc
aad
nop
cmp
jns
inc
dec
pop
xlat
dec
scas
jl
xor
fisttps
pusha
test
add
jno
xor
cwtl
adc
outsb
sub
adc
dec
add
pop
sub
dec
js
ret
in
rorb
loopne
push
jp
add
mov
adc
dec
pop
pop
push
dec
adc
into
leave
pop
subb
xchg
mov
sub
sbb
and
jmp
icebp
in
repnz
mov
shll
cli
std
mov
imul
dec
sub
lods
test
icebp
push
pop
push
pop
pop
fs
cltd
lock
jae
or
jg
repz
mov
mov
xor
push
mov
jbe
dec
testl
push
shl
cmp
out
add
and
clc
jp
je
or
xchg
andb
sub
add
pop
mov
out
and
mov
jae
cmpsl
rorb
pop
add
and
scas
xor
mov
cltd
pop
cmp
and
sbb
xlat
fs
add
jl
sbb
xor
xchg
ja
jp
sbb
sub
dec
ljmp
enter
sahf
ljmp
lret
out
sahf
int3
adc
push
sarl
mov
xchg
icebp
push
add
bound
push
jb
pop
pop
or
pop
xlat
adc
stc
jnp
dec
lock
ljmp
push
push
jne
dec
jp
inc
jl
cmc
fstpt
mov
jo
inc
add
sbb
mov
clc
shrb
out
testl
adc
imul
xchg
add
outsb
jge
popa
popa
xchg
sub
cmp
or
lret
mov
sub
jmp
stos
xor
adc
inc
mov
push
rclb
adc
inc
mov
mov
pop
in
push
sbb
or
jecxz
mov
sub
pop
pop
fldenv
sub
xor
jge
daa
ret
ftst
test
lock
fcompl
cmc
rorl
leave
imul
out
mov
adc
nop
jbe
psllw
sbb
and
enter
mov
or
mov
xchg
sub
jns
pusha
cs
push
or
cmc
lret
push
pusha
pusha
xchg
idiv
fs
bound
imul
daa
dec
pop
mov
lcall
mov
adc
pop
push
mov
outsb
lods
data16
fs
or
pop
fsts
ja
sahf
orb
fs
xchg
cmp
lods
fists
push
push
dec
cltd
sti
jg
push
leave
mov
out
xchg
inc
pop
push
push
in
pop
and
add
push
shl
cld
shll
test
dec
shl
and
sub
call
addr16
lahf
jo
addb
lods
xor
add
jge
push
sub
je
add
imul
xlat
daa
cmp
loopne
shrb
sarb
push
into
jecxz,pt
pop
lret
mov
sar
imul
addl
push
sbb
pusha
xlat
sbb
dec
cltd
xor
sahf
inc
aad
xchg
fnstenv
sub
push
cld
adc
les
add
dec
cmp
les
adc
add
sbb
and
push
dec
test
xorb
pop
adc
add
aam
inc
daa
pusha
rcrl
cmp
pop
lret
hlt
jg
jecxz
mov
loopne
sbb
insb
or
xor
add
or
adc
push
sbb
dec
and
out
imul
insb
ss
xchg
push
mov
jmp
xchg
popa
xchg
fists
pop
push
into
inc
lahf
xor
addr16
rcrb
add
jmp
or
xchg
xorl
scas
pop
repnz
es
mov
add
push
cmp
das
or
jecxz
xchg
pop
sbb
xlat
sub
sbb
add
dec
xor
jns
adc
pop
out
pusha
xchg
mov
push
adc
cmp
in
xor
mov
jo
dec
sti
andl
out
mov
pop
mov
push
fsubrs
icebp
cmovb
push
inc
or
pop
stc
out
dec
repnz
and
xchg
lret
mov
pop
xchg
mov
popf
jecxz
cmpsb
loopne
add
out
jnp
lcall
or
xor
repnz
in
pusha
dec
pop
jmp
xchg
add
xor
sub
push
gs
testb
lcall
inc
push
push
push
cltd
dec
mull
and
pop
push
hlt
cld
int
cmpsl
lret
scas
sub
push
movsb
add
cld
dec
jmp
jmp
stc
cli
js
adc
push
inc
and
lea
cs
cwtl
sbb
pop
or
subb
mov
loop
dec
inc
subb
xchg
jge
addl
arpl
jb
mov
orb
pop
aam
and
sub
clc
sub
or
into
push
lds
jns
jmp
sbb
mov
mov
lods
sub
in
int
mov
not
popl
fstl
add
push
dec
subl
sti
clc
popf
popf
sti
jecxz
dec
cmp
pop
ss
sbb
or
and
imul
dec
xor
add
cs
nop
add
pop
mov
push
mov
dec
sbb
mov
pop
add
lods
aaa
dec
stos
lret
push
sub
add
hlt
mov
jae
mov
push
xor
and
or
aaa
add
enter
mov
mov
ret
mov
inc
inc
aam
popa
imulb
and
push
bound
xor
mov
mov
fmuls
std
sahf
mov
jnp
dec
icebp
scas
and
outsl
cmp
pusha
shll
push
shl
pop
sbb
dec
jp
js
xchg
push
int
movsb
push
xchg
outsb
mov
push
ds
sub
test
sub
inc
into
aad
pop
pusha
adc
mov
cld
adc
fmul
jmp
mov
cwtl
popa
push
push
sbbb
pop
outsb
ret
pop
loopne
inc
mov
sti
inc
mov
orl
inc
or
fnstcw
xor
fucom
std
or
inc
jmp
push
cmp
xlat
xchg
mov
into
mov
pop
or
and
cmc
scas
sbb
cld
mov
jmp
shll
cmp
push
jmp
inc
fnstenv
jge
sub
sbb
test
js
loopne
xor
sbb
mov
out
out
cmpsb
addr16
mov
scas
icebp
popl
mov
test
or
gs
jns
mov
and
pop
insl
jle
or
push
sub
pop
mov
add
or
inc
nop
dec
xor
std
clc
stos
call
dec
ficoms
in
mov
add
movd
push
jmp
mov
pop
sbb
inc
jg
lahf
lock
mov
cmc
adc
fimuls
sub
les
add
add
push
jmp
ret
cs
iret
adc
jl
xchg
mov
loopne
movsb
cmp
push
test
mov
pop
or
dec
adc
inc
lret
popa
iret
movsb
jnp
jmp
lcall
arpl
fidivrl
xchg
or
jmp
in
in
or
sbb
xchg
pop
pop
fwait
xor
sub
dec
ja
add
push
cmc
or
pop
jmp
out
and
dec
mov
mov
imul
dec
repnz
test
enter
cmp
adc
mov
mov
jl
testl
push
add
mov
adc
ja
bound
jmp
repnz
pop
repz
dec
repz
cmpsb
cs
sbb
mov
insl
shr
cs
and
shr
or
and
out
adc
loop
mov
lret
dec
cmc
jno
inc
push
mov
dec
jecxz
add
pop
inc
dec
or
movsb
mov
popf
jb
repnz
ret
mov
add
ja
cmp
int3
mov
std
movb
push
aaa
dec
popf
fnsave
out
rcr
adc
adc
inc
xorl
mov
call
or
push
xor
add
mov
test
lock
xchg
jge
pusha
mov
push
je
xor
mov
cmp
aaa
ret
jle
int
rcll
outsl
arpl
push
or
lret
neg
add
jb
rorb
ud0
mov
jg
sbbb
push
sysenter
rcrl
out
data16
push
add
scas
dec
enter
pop
or
sti
push
xchg
pop
aad
ficoms
add
push
and
out
dec
add
out
pop
out
in
aam
push
dec
pop
mov
rcrl
jno
sarb
mov
test
std
pop
scas
sub
js
stc
cli
pop
sub
pop
push
and
sub
inc
les
lock
or
fbstp
or
push
not
cmp
pop
lock
stos
push
insb
push
test
adc
cwtl
dec
fstl
out
jg
cmp
and
rcrl
or
shrb
dec
jns
ljmp
cmp
pop
jmp
adc
dec
clc
mov
cmp
cli
sub
push
outsl
orl
data16
jo
mov
add
aad
test
sub
cmpsb
xor
shll
mov
arpl
fwait
testl
data16
and
outsl
call
push
iret
and
gs
scas
jnp
push
pop
push
push
push
nop
outsb
dec
into
xor
mov
jmp
dec
icebp
xchg
mov
push
push
push
pop
xchg
adc
std
ja
lea
jnp,pn
movsl
pop
mov
and
sti
xchg
test
jb
dec
jg
lret
push
dec
sbb
push
cwtl
sbb
mov
fisubrs
jmp
lea
loopne
push
push
es
mov
shl
xchg
add
jmp
dec
jge,pt
or
mov
leave
xor
ret
aas
jmp
andb
cmpsb
push
mov
adc
cmc
hlt
xor
sbb
aad
out
jnp
cltd
popf
gs
lret
jecxz
pop
sub
pop
das
xor
dec
pop
pop
mov
and
fisttps
cmp
mov
add
and
push
clc
push
shlb
lahf
lock
enter
js
les
js
scas
pushf
aad
mov
ja
cmp
pop
mov
clc
push
inc
dec
push
sub
or
push
push
dec
ret
adc
inc
xor
push
loope
sbb
test
xor
out
clc
and
adc
jbe
pusha
bnd
inc
sub
adc
pop
dec
inc
pop
add
add
stc
sub
pop
pusha
push
clc
shl
jne
mov
fs
lock
adc
mov
lcall
add
xchg
sub
aas
cwtl
dec
mov
mov
aam
mov
orb
push
mov
cltd
aad
orb
jge
je,pt
dec
stos
mov
jle
mov
loopne
sub
ljmp
arpl
jmp
jg
repz
loope
jg
in
jle
jno
cmp
lods
or
sbb
addr16
mov
pop
mov
int3
in
loop
divb
loope
mov
jb
or
xchg
js
call
fsts
pop
out
and
mov
aas
add
xchg
and
bound
push
leave
int3
cmp
insl
shrb
outsb
mov
fldl2t
loopne
pop
rcl
aaa
dec
ss
in
call
test
or
push
mov
outsb
icebp
xchg
insl
push
cmpsb
push
xchg
or
and
pop
xor
inc
dec
std
test
js
or
fmuls
mov
push
orb
jmp
shr
je
notb
lock
pop
data16
into
les
jno
clc
jnp
mov
pushw
push
out
mov
mov
jmp
shr
inc
leave
shlb
mov
jno
popf
push
add
arpl
or
cmpsb
add
sub
aam
aam
jne
jge
fwait
aam
cmp
xchg
or
jge
movsl
pop
add
sbb
push
push
mov
adc
cmp
lock
mov
add
push
jg
mov
imul
pop
xor
aam
out
push
inc
call
shlb
addb
push
sub
xor
jl
cmp
sti
add
imul
xor
jbe
xor
push
pop
and
mov
out
movsl
popf
add
mov
in
mov
push
into
pop
scas
push
push
push
adc
mov
lret
in
pop
sbb
jmp
repnz
cmc
add
jbe
mov
cs
push
add
dec
cmpsb
or
adc
adc
mov
aam
ss
sub
out
jmp
scas
and
sub
and
fadd
add
imull
add
inc
jg
popa
xchg
or
les
push
push
in
mov
daa
push
inc
les
mov
pop
add
xlat
dec
sbb
push
leave
std
pusha
repnz
mov
mov
aaa
adc
mov
mov
mov
push
push
fiadds
jecxz
data16
xor
mov
in
push
adc
and
xor
jmp
neg
jmp
add
add
sub
movsb
cmp
clc
push
push
jmp
sub
sub
enter
pop
out
cmp
test
test
mov
popa
and
ljmp
jl
daa
jg
adc
pop
ljmp
pop
add
js
cs
xor
inc
pop
cmp
ljmp
daa
inc
fimull
or
push
push
mov
outsb
add
xlat
fdivrs
fwait
sub
imull
leave
push
sbb
shl
mov
inc
add
icebp
and
mov
es
andl
push
mov
mov
ret
outsl
dec
push
or
sub
or
sub
xor
or
add
dec
xor
add
subb
jae
pusha
cmp
je
sbb
nop
and
dec
jp,pt
xor
pop
cmp
cmp
xor
movsl
pop
add
sub
jne
mov
pop
sub
dec
shr
cltd
xor
add
daa
jmp
push
lods
das
jmp
sbb
les
stos
shl
cmp
jge
pop
shll
sub
bound
call
pop
add
ljmp
test
lds
das
fbstp
fs
xchg
push
sub
ljmp
popa
push
jle
mov
pop
pusha
lret
sub
dec
jecxz
pop
mov
faddl
push
inc
mov
adc
leave
xor
or
in
lcall
loope
pusha
sbbl
mov
fsubrp
xlat
mov
je
in
lcall
into
adc
jo
dec
ljmp
mov
lock
idivl
sub
daa
jns
test
jle
sbb
xchg
scas
mov
jge
aas
repz
jmp
xchg
aam
and
xchg
icebp
cmp
push
add
mov
pusha
notb
jnp
std
js
fcmovnb
mov
outsl
push
sub
daa
sti
mov
test
lea
sub
test
xchg
add
mov
sub
inc
shr
inc
add
ficoms
xlat
lds
fdivrp
fidivl
icebp
repz
and
popa
lret
ds
inc
jecxz
push
push
inc
ret
push
jbe
inc
inc
out
jecxz
pop
and
cmp
mov
pop
stos
ret
call
push
jmp
push
pop
and
xor
dec
ror
cwtl
jl
xchg
add
in
cmp
lods
push
pop
or
push
lock
in
xor
inc
pop
push
mov
cld
jge
sub
mov
mov
sub
cwtl
dec
popf
pop
shll
mov
clc
cmpb
jmp
mov
testb
hlt
mov
pushf
xor
push
pop
xor
iret
loope
ja
outsb
adc
dec
repnz
movd
sub
hlt
loopne
outsb
lahf
or
inc
sub
imul
lods
loopne
push
bound
mull
or
iret
sbb
icebp
int
or
test
sub
jne
adc
push
jg
jl
je
dec
cmp
xor
loop
mov
hlt
xchg
xchg
movl
invd
push
mov
lds
mov
les
xchg
ss
ja
adcl
sub
add
push
movaps
dec
insb
and
xchg
pop
leave
xorl
cmp
xchg
inc
movsb
outsl
xchg
jmp
stos
mov
mov
es
jl
jmp
add
mov
flds
pop
notb
or
xor
sbb
or
int3
scas
sub
pop
xchg
fnstenv
out
in
cwtl
loope
pop
les
subl
pop
add
push
jae
and
add
pushf
sbb
mov
sub
adcb
jl
jg
jbe
add
adc
jg
cld
cmp
sbb
adc
push
and
push
dec
sub
or
mov
sub
imul
and
shll
xchg
in
jecxz
add
add
fdivrl
out
push
push
push
push
jno
das
adc
or
and
sub
out
test
adc
adc
cmp
or
jmp
lahf
sub
jmp
mov
xor
in
lods
mov
add
aaa
xor
push
std
push
mov
xchg
in
xchg
xchg
scas
fmull
jae
pop
loop
cmp
sti
dec
mov
mov
popf
orl
notb
mov
jmp
call
mov
or
test
aaa
lret
sub
pusha
out
out
jg
out
stc
or
xor
inc
or
sub
and
jecxz
sbb
sarb
sub
add
add
stos
fcoms
add
es
out
popl
xchg
adc
jmp
movaps
add
inc
pusha
cmp
jbe
jl
daa
add
xchg
cmp
stos
lret
cwtl
mov
vmovd
add
xor
mov
fdivl
mov
pop
adc
std
movsl
or
in
sbb
popa
mov
dec
or
cmp
pop
jge
sub
imul
shlb
mov
pop
push
xchg
leave
jo
ficompl
sbb
mov
or
rolb
notb
or
ss
or
xor
cmp
scas
repz
scas
into
xchg
pop
mov
cmp
pop
pop
ljmp
cmp
jo
outsb
mov
lret
or
mov
push
cwtl
mov
rorl
out
ja
and
mov
nop
mov
lret
sub
in
sub
and
push
cmp
jle
rcrb
dec
shll
sbb
rcr
xchg
jmp
push
jnp
adc
sub
mov
dec
ds
pop
rorl
lea
ret
jb
dec
cld
je
xchg
pop
add
addr16
pop
adc
jmp
jecxz
shr
scas
or
jo
imul
dec
shlb
out
pop
mov
mov
add
mov
shrl
mov
pop
xchg
dec
or
gs
pusha
xchg
mov
xchg
dec
adc
test
jecxz
xchg
out
sub
cmp
or
inc
adcb
daa
jl
orl
xor
push
push
push
aaa
pop
add
mov
dec
dec
sub
sub
mov
mull
fs
xor
rcll
sub
and
inc
pop
or
lock
xchg
js
mov
push
je
or
sub
loopne
sbb
fisubrl
sub
lcall
jg
inc
mov
add
inc
imul
ror
jne
pop
or
sub
data16
ret
test
pop
push
into
ljmp
lret
inc
xchg
mov
movntq
testb
jo
add
jmp
pop
cmpl
and
jmp
mov
or
pop
or
and
nop
out
es
push
test
sub
adc
or
ja
xor
neg
mov
aad
jbe
jp
jnp
lods
cmpsb
add
cmp
add
jmp
shr
hlt
ret
and
and
xchg
adc
negl
jmp
adc
stos
jne
push
andb
daa
push
gs
cmp
push
cwtl
mov
xchg
mov
xchg
jl
pop
xchg
out
sub
gs
jl
pop
fsubs
shrl
scas
xchg
ja
sahf
xchg
cmp
pop
loope
add
out
scas
mov
jae
lret
cmp
in
push
mov
inc
je
mov
sbb
cmc
clc
stos
mov
jmp
popf
add
xchg
repz
xchg
es
hlt
and
insl
or
js
sahf
push
addr16
pop
bnd
dec
nop
les
shl
mov
and
push
mov
sarl
push
jmp
pop
mov
test
jmp
shr
scas
lret
push
inc
mov
push
outsb
arpl
add
sub
push
add
inc
pop
rolb
mov
and
jl
add
inc
jb
dec
push
aad
and
lock
in
inc
outsb
mov
or
jge
mov
add
add
dec
out
add
and
or
movsb
iret
xchg
add
fldt
add
fldcw
mov
pop
sbb
lcall
or
movsb
fisttpll
mov
xchg
jle
jns
jle
and
lods
pop
mov
lret
cmp
sbb
sub
push
sub
repz
outsb
sub
mov
ret
or
je
push
xor
rep
out
add
loop
stc
icebp
jmp
dec
xor
das
push
pop
add
xchg
sbb
mov
stc
xor
ficomps
mov
cltd
scas
lds
insb
jmp
jp
add
xchg
xchg
jmp
jbe
sbb
lods
test
sub
push
jae
cmp
xchg
lret
sub
mov
lods
inc
mov
jne
pop
addr16
fildl
add
dec
ja
je
pop
xchg
or
lret
push
jle
daa
xlat
cmpsl
mov
aaa
push
push
fwait
les
mov
pushf
sub
xor
ja
push
cmp
ljmp
jecxz
add
lahf
std
es
xor
insl
rcrl
out
sbb
pop
cmp
pop
pop
stos
test
jecxz
jle
outsl
xor
mov
add
push
inc
push
das
pop
mov
jge
sbb
xor
ror
mov
adc
test
or
test
cli
mov
mov
imul
push
dec
stos
mov
inc
or
dec
loopne
mov
xor
push
sahf
dec
sub
jmp
test
jg
movsb
mov
cmp
movntps
add
add
xor
jmp
cltd
and
mov
clc
rclb
test
xor
data16
rclb
cmp
lcall
and
or
inc
or
loope
jbe
shr
lods
sub
js
xor
nop
fimull
lods
and
push
mov
in
dec
call
jg
insb
push
jmp
pop
ficomps
xchg
cs
push
sbb
jae
or
or
into
cmp
adc
les
xchg
push
push
fs
mov
jl
cmpl
sbb
or
xor
bound
mov
adc
in
adc
sub
or
jb
mov
fists
jae
cltd
adc
mov
inc
mov
test
or
pop
or
or
sbb
mov
div
imul
mov
pop
or
sbb
call
xor
les
xor
push
xlat
jp
inc
mov
data16
test
sbb
mov
in
cmc
and
xor
mov
sbb
sub
sbbb
adcb
xor
xor
dec
or
push
pop
sbb
dec
mov
mov
rorl
and
inc
xor
je
inc
fs
imul
imul
sub
or
ficoms
and
inc
and
pop
xor
repnz
xor
add
xor
adc
sub
lock
sbb
lods
or
mov
push
mov
add
mov
fadd
adc
jo
gs
stc
jg
mov
sub
rclb
mov
roll
sbb
rcrb
cmp
and
sub
inc
push
inc
push
xchg
mov
arpl
punpckldq
cltd
es
xor
pop
or
or
shlb
stc
xchg
or
cld
or
mov
lds
stos
or
lahf
cmp
loopne
adc
out
push
mov
loope
popf
sbb
and
mov
adc
and
adc
les
mov
and
jmp
dec
repnz
and
cltd
sbb
sahf
lods
adc
mov
ret
dec
sbb
cmp
sbb
in
mov
movsl
pop
mov
xor
rcrl
pop
mov
mov
mov
sbb
pusha
scas
jg
inc
push
push
or
jmp
divl
pop
inc
jb
lret
pop
not
push
adcb
adc
sbb
das
and
xchg
je
jb
adc
jge
popa
mov
addl
ljmp
dec
mov
fstpt
or
sbb
jecxz
pop
packuswb
mov
adc
adc
clc
add
or
push
sbb
xchg
in
mov
or
pop
rcl
cld
pop
fiaddl
mov
sub
repz
sar
dec
cltd
xor
pop
pop
icebp
into
cs
add
bound
jbe
xchg
inc
pusha
add
pop
aas
add
shr
mov
fwait
sub
jle
out
out
das
inc
daa
hlt
js
xor
cmc
sub
gs
jg
jmp
mov
or
comiss
js
sbb
inc
movsb
dec
pop
lods
xlat
icebp
jmp
leave
ret
aam
movsl
xor
scas
or
into
xchg
sub
add
sub
add
and
adc
push
imul
jo
cmp
and
push
mov
sub
jmp
push
mov
and
rclb
repnz
rolb
jge
cmp
push
jo
fwait
cmpsl
jge
push
cmp
add
sbb
or
pop
push
or
cld
sub
mov
fcomps
pop
dec
js
inc
pop
pop
push
push
mov
loope
repnz
les
ljmp
lods
scas
fsubs
jecxz
call
test
jns
test
push
cld
out
pop
inc
lods
and
out
and
xchg
cli
jg
mov
mov
ds
call
std
test
mov
das
xchg
sub
loop
xchg
xor
and
std
add
push
repnz
pop
add
cmp
jb
fnsave
mov
cwtl
aas
rcr
add
adc
inc
mov
sarb
into
xchg
fdivrl
push
mov
jne
xor
mov
pop
inc
adc
push
mov
aad
xor
faddl
add
vpinsrw
inc
pop
out
cmp
std
nop
in
rorl
and
push
lahf
dec
add
sbb
sbb
adc
adc
pusha
arpl
xchg
dec
jg
jno
dec
mov
aam
rcll
push
mov
add
mov
mov
dec
shll
test
jbe
push
lds
popf
adc
orb
mov
jmp
sbb
scas
loope
sbb
aas
xor
pop
mov
sbb
cli
push
pop
gs
out
add
aad
push
addb
aad
push
mov
and
mov
sti
pop
call
pusha
ret
fwait
add
sub
push
fsubrl
push
dec
xchg
pop
pop
push
call
repnz
xor
or
in
lahf
pop
lods
inc
and
out
or
sbbb
insb
test
lret
push
xor
inc
dec
or
jnp
or
add
add
sub
push
mov
repz
jmp
dec
shrl
xor
jo
mov
cld
subb
cmp
sub
and
das
dec
jp
cmp
or
das
adc
sub
orb
ljmp
jmp
jo
jmp
mov
jmp
add
aaa
xchg
jns
lods
ja
pop
push
jp
movsl
ds
pushf
mov
adc
mov
sub
dec
mov
inc
gs
mov
outsl
mov
or
jne
and
and
pop
bsf
pusha
notl
orb
adc
dec
add
enter
xchg
and
nop
add
sbbl
adc
lcall
and
and
das
push
jecxz
jecxz
jbe
imul
sub
lret
pop
bound
loopne
out
cmpsl
jne
das
sub
xor
and
push
xor
mov
movsb
mov
push
cmpb
mov
pop
xchg
dec
dec
inc
test
testl
hlt
push
add
xchg
sar
enter
or
or
sub
mov
or
dec
add
cltd
dec
inc
and
adcl
fldl
rorl
sbb
lcall
jns
stos
sbbb
pusha
aad
jmp
cwtl
jle
addl
pop
test
pop
lods
movsb
jmp
js
xchg
mov
cmp
jmp
insb
clc
aaa
pop
stc
test
jbe
ret
pop
push
andl
add
push
mov
sub
out
outsl
es
rcrl
xchg
add
popa
inc
jmp
push
cmp
mov
pop
xor
pop
jmp
ret
gs
dec
pop
in
pop
mov
enter
test
les
sub
and
andl
imul
pop
or
pop
push
push
pop
aas
jmp
mov
les
dec
and
and
out
adc
mov
loopne
add
outsl
fidivl
push
mov
pop
enter
add
sbbb
fsts
or
into
leave
aad
inc
rcll
sbb
addb
sbbb
push
sub
xor
add
cmp
sbb
push
xchg
enter
repnz
mov
sbb
add
pop
push
sbb
or
sub
pop
sub
and
mov
sub
mov
xchg
movsb
aas
jnp
test
inc
sub
pop
mov
jno
and
fcmove
adc
xor
loope
insl
adc
and
xlat
and
pop
sub
jo
scas
jp
add
add
idivb
push
ja
hlt
addr16
movsb
pop
or
pop
pop
push
push
add
dec
ret
fists
shll
sarl
xchg
mov
movsl
pop
inc
mov
and
pop
shll
out
jae
add
btc
inc
ret
subb
testb
jbe
push
test
lock
jmp
enter
or
fnstenv
pusha
sub
inc
stos
xor
dec
jge
movl
or
arpl
stc
pop
or
nop
dec
pop
mov
incl
cmp
ljmp
repnz
or
sub
pushf
shr
popa
rorb
sub
outsb
pop
icebp
push
add
fimuls
jbe
xchg
inc
jmp
adc
or
sub
and
add
repnz
and
pop
or
shrb
sbb
jo
or
pusha
aad
lds
jmp
call
add
jae
adc
jg
inc
insb
out
outsl
pop
popf
clc
sub
mov
pop
inc
dec
inc
sub
mul
lods
add
sub
pop
pop
jg
pop
pop
adc
or
jmp
ljmp
das
enter
sub
push
xor
stos
icebp
xchg
add
mov
aas
lret
daa
arpl
jbe
test
test
add
pop
mov
addr16
pop
jmp
push
ljmp
and
js
frstor
pop
xchg
mov
pop
fnstcw
xlat
dec
mov
fwait
es
add
xor
fcmovnbe
and
sbb
dec
leave
in
sbb
idiv
jecxz
jns
loope
icebp
clc
nop
cmp
cmp
test
add
in
cmc
and
inc
or
xor
push
cltd
pushf
mov
cmpsl
repz
jmp
sub
dec
sti
push
fidivrl
pop
call
cli
lea
les
inc
ret
pop
call
pop
or
call
and
xor
pop
inc
sub
add
mov
mov
ljmp
sbb
incl
xchg
je
shl
testl
repz
das
into
xchg
imul
inc
rcrl
clc
push
inc
and
add
lcall
fists
addb
xchg
cmp
sub
frstor
mov
repz
jmp
nop
xor
call
or
cli
loope
or
push
mov
testl
lret
push
lret
repz
lods
ret
push
xchg
mov
into
das
mov
adc
data16
mov
sbb
and
mov
push
pushf
scas
jecxz
inc
mov
repnz
sub
adc
jg
push
adc
outsb
cmpsl
or
into
adc
shlb
test
add
movsl
and
cltd
gs
xlat
in
cmpsb
jno
push
and
ret
inc
or
in
sbb
lret
and
xchg
in
loopne
push
push
push
scas
jbe
push
push
pop
addr16
xor
mov
xlat
lcall
adc
stos
fsubs
mov
sub
lods
sub
pop
adcl
and
sub
mov
rcr
sbb
imul
push
pop
or
pop
imul
mov
adc
pushf
and
sarb
xor
push
xor
aam
scas
jmp
lahf
dec
mov
cmc
in
jle
jmp
push
movsb
xchg
cmp
sti
idivl
inc
into
xor
xor
outsl
add
movsl
jbe
mov
jbe
pop
push
stc
mov
pop
lahf
negb
adc
enter
sub
test
pop
fnstsw
imul
ret
xlat
sbb
add
fisubrl
dec
repnz
stos
jns
aas
enter
enter
call
cmpsl
jne
cwtl
subb
push
add
cmc
nop
sbb
sarl
add
push
jle
push
not
outsl
mov
add
inc
shr
sub
pop
vsubsd
test
cmp
and
fs
push
xchg
adc
daa
push
sti
jge
sub
lret
jmp
pusha
outsb
int
pop
adc
rorb
cmpb
outsb
jmp
leave
addr16
in
rorl
nop
stos
mov
pusha
stos
iret
arpl
sbb
punpckhbw
cmpsl
jge
sti
mov
mov
test
mov
nop
add
mov
fstps
in
cmp
jae
sub
mov
cmp
jo
in
loopne
sbb
xchg
inc
shl
es
scas
or
mov
push
pop
pop
sti
rorb
loop
add
sub
fs
bnd
bound
popf
mov
or
mov
fldl
inc
mov
xor
ret
imul
or
and
push
sub
and
jae
xor
repz
in
sti
and
jmp
mov
cmp
push
sub
or
jecxz
dec
test
jl
cmp
inc
jns
mov
sti
jge
mov
xlat
in
mov
ljmp
xchg
orps
mov
dec
push
add
cmp
sbb
xorb
mov
adc
mov
fldt
cmc
andb
mulb
or
icebp
cmc
jo
movb
push
test
xor
int3
mov
dec
sub
mov
push
ret
movsb
pop
popf
xlat
mov
or
add
movsb
pop
xchg
imul
and
lret
push
test
mov
push
incl
mov
shl
icebp
imul
inc
lret
dec
sub
ret
sbb
test
push
mov
pusha
lret
jp
add
cmpsl
cmp
jnp
dec
push
in
add
loop
loopne
add
jae
adc
mov
and
lret
aam
ds
jg
xorl
xchg
in
daa
ljmp
mov
lret
cmp
mov
decb
or
xor
sbb
xchg
and
mov
xor
sub
fists
adc
ja
pop
fstpt
orl
dec
rclb
push
test
jmp
movsb
add
add
ss
nop
jb
pop
fbld
jmp
mov
sub
lahf
push
lock
out
ret
adc
add
push
inc
repz
inc
lods
ljmp
sub
inc
movsl
dec
in
lods
mov
xchg
dec
adc
repz
ss
imul
sbb
jl
add
sub
out
xchg
fs
add
adcb
xor
sbb
loopne
pusha
dec
adc
ds
push
addr16
mov
aam
out
call
sub
dec
inc
jl
mov
dec
rcrl
sub
sbb
pop
push
jmp
mov
fs
shr
cmp
outsl
and
test
fwait
pop
cmp
call
scas
mov
sarb
add
mov
mov
hlt
leave
add
jns
xor
es
movsl
mov
add
test
insl
adc
addr16
das
pop
cmp
inc
rclb
dec
xchg
dec
pop
andl
push
fadds
mov
test
icebp
adc
adc
xchg
in
fs
bound
mov
ds
lds
or
mov
jl
lds
sub
push
clc
add
pop
enter
adc
pop
loopne
xor
stos
pop
pop
es
push
mov
push
sub
cmp
ljmp
xchg
pop
pop
stc
insb
pop
sbb
pusha
ja
jno
dec
cmp
jns
fmuls
xor
outsl
cmp
sub
mov
mov
inc
sub
addb
push
push
std
pop
and
lea
cmc
int
pop
sbb
pop
sub
sub
xor
gs
cmpsb
pop
pop
iret
rcr
in
pop
pop
call
imull
addb
sahf
mov
xchg
icebp
inc
rorb
add
inc
mov
xchg
dec
add
out
adc
popf
or
fildl
repnz
xchg
ret
pop
cmpsl
xorb
imul
cli
incb
jno
xchg
enter
clc
fucom
push
add
cmc
sbb
js
add
mov
jge
sbb
jecxz
imul
repz
mov
pop
push
ja
mov
jmp
pop
cmpsb
jmp
lods
movsl
adc
testb
sbb
push
adc
xor
jp
mov
inc
push
adc
std
mov
pop
arpl
or
shl
das
mov
lock
lods
mov
mov
sub
sub
cmp
sti
sbb
jge
rorb
or
or
push
inc
or
pop
cltd
adc
mov
pop
sbbl
mov
mov
or
imul
mov
scas
pop
xor
popf
jg
in
sbb
iret
cli
jae
sub
mov
call
shl
pop
ss
push
mov
sub
pop
push
fstps
in
insl
ret
shrl
lahf
xchg
and
and
bound
addb
scas
adc
xchg
cli
xor
pop
pop
lods
mov
cvtdq2ps
rcrb
imul
pop
enter
inc
cmp
popa
dec
and
aaa
add
and
adc
or
jmp
push
mov
push
push
mov
les
jnp
cwtl
int3
push
pop
xchg
ret
or
pop
xor
sbb
not
or
rcr
mov
jmp
fisttpll
push
adc
dec
gs
add
jo
hlt
mov
dec
inc
adc
inc
cmp
ja
bswap
xor
xorb
imul
pop
jnp
sub
sbb
cmp
pop
loope
or
push
in
and
add
cmpb
pop
out
movsb
dec
int3
lea
movsl
icebp
xor
push
mov
jg
or
pop
sub
orb
sbb
ret
imul
dec
popf
add
das
push
js
pop
ficomps
jecxz
nop
sub
cmp
scas
mov
xchg
mov
pop
cwtl
test
lret
pop
adc
roll
pop
mov
xchg
clc
sub
pop
std
cmp
jnp
add
cmpsb
xor
xchg
cmp
rcl
sar
dec
or
out
adc
fadds
and
fbstp
das
push
and
sub
repnz
push
pop
mov
sub
stc
das
jno
pop
or
in
shlb
cli
adc
jle
arpl
imul
sub
fucomp
cmp
test
xlat
in
mov
jge
aaa
test
dec
jecxz
pop
or
inc
cld
xor
stos
xor
out
add
mov
mov
xor
test
or
adcl
pop
push
addl
jge
jno
lahf
in
imul
mov
fld1
mov
cwtl
imul
jne
xor
add
add
jb
or
push
mov
mulb
sub
add
xlat
aaa
cmp
clc
pop
add
add
loopne
jmp
cmc
cmp
mov
into
rcrl
or
push
js
dec
pop
push
pop
push
cmp
pop
add
jnp
ss
cmp
jg
inc
push
mov
icebp
dec
lea
jg
shrb
popa
push
xorb
and
sbb
cmpsb
pop
test
adc
fnsetpm(287
daa
pop
int
inc
inc
jp
pop
cmc
adc
xor
inc
sbb
dec
repnz
pop
test
jb
bound
jg
add
add
test
sbb
filds
rorl
mov
daa
incl
jp
loope
rcr
ljmp
sub
sub
sub
xor
lods
jb
adcl
popf
cmpb
inc
outsb
stos
fidivrl
mov
repz
xor
push
mov
lret
lea
es
adc
insb
add
pop
jne
mov
flds
pop
add
xor
push
mov
cld
add
xor
outsb
sub
mov
out
pop
push
gs
daa
jl
cmpsl
pop
mov
jno
pop
mov
sub
add
dec
cltd
xor
das
add
movsb
or
xor
shll
aad
mov
sub
pop
mov
inc
pop
jge
iret
cwtl
lds
and
adc
dec
or
pop
sbb
push
mov
loopne
in
pop
push
sub
sub
push
mov
xlat
add
testl
shr
dec
sub
rolb
mov
pop
lahf
and
pop
push
inc
xchg
loop
cld
pop
inc
cmpsl
repnz
sbb
mov
add
and
ret
dec
cwtl
mov
lret
cld
shll
push
adc
xor
jne
arpl
jmp
mov
push
pusha
addr16
xor
int3
xorb
push
mov
add
sub
cmc
addr16
daa
sbb
and
add
mov
and
sub
dec
negl
pop
inc
or
fistps
decl
jnp
cmp
jmp
add
pop
pusha
lcall
mov
push
vandnps
sub
sbb
adc
das
pop
enter
subb
pop
pop
mov
enter
or
imul
int
push
and
cmpl
sbb
mov
jmp
pop
fsubl
jecxz
xchg
fstps
scas
in
xchg
mov
inc
pop
mov
int
push
mov
push
roll
lret
mov
push
add
ss
loop
xchg
push
mov
mov
mov
cmpb
pop
scas
fs
xchg
nop
pop
jmp
lret
sub
out
movsb
cmpb
sti
fisttpll
sbb
mov
xchg
xchg
movsb
add
mov
push
out
sti
fadds
mov
adc
jmp
add
jg
mov
jmp
or
cmpsb
sbb
mov
pop
xor
pop
pop
cli
add
mov
adc
lret
dec
xchg
and
sahf
aas
push
jp
out
jl
push
iret
call
pop
add
push
pusha
in
cmp
pushf
fs
inc
push
add
mov
je
mov
cmp
sbb
lods
aad
sti
inc
rcl
enter
ja
push
adc
sub
dec
adc
mov
pop
out
adcl
cmpsb
and
andb
xchg
xchg
jmp
test
or
xchg
imul
mov
jns
cmp
pop
push
mov
subb
in
adc
std
int
add
xchg
sbb
ss
add
sbb
aad
sbb
cmc
test
push
adcb
jmp
scas
and
in
add
pop
rorl
cwtl
imul
dec
cmovbe
mov
add
stos
dec
fwait
jne
into
pop
jge
out
push
pop
xchg
jo
mov
into
mov
dec
xlat
pop
addr16
rcl
loope
or
push
jg
fiadds
test
adc
pop
mov
dec
mov
sub
inc
and
cmc
mov
xchg
dec
shll
fdivrp
jmp
and
aad
inc
cs
xchg
add
dec
push
inc
xchg
push
xor
and
in
adc
dec
mov
lcall
testb
adcb
ja
gs
sub
mov
shrl
fisttpll
js
cmp
xchg
call
jle
add
dec
js
or
inc
mov
fwait
mov
pop
and
inc
pop
mov
rorb
add
and
clc
and
popf
fisubrl
dec
inc
adc
inc
pop
pushf
fcmovbe
jmp
bound
std
arpl
jg
xor
loope
mov
sbb
or
loopne
pop
pop
popa
rorl
lret
mov
jmp
jnp
int
stc
jne
jb
dec
sbb
jg
pop
sub
or
mov
repz
clc
pop
out
push
or
or
add
dec
leave
mov
sub
jg
out
pusha
out
dec
popa
adc
mov
lea
lds
and
jmp
dec
pop
mov
or
popf
rolb
inc
and
dec
push
mov
inc
push
inc
rcll
sbbb
push
and
jmp
sub
pop
mov
mov
shlb
push
cs
jno
cld
loope
shl
clc
add
stos
pop
dec
test
push
enter
push
jne
arpl
xchg
dec
push
aas
out
test
ljmp
and
add
lcall
std
lret
xor
push
lock
orb
jg
push
shr
sub
dec
cmp
pop
mov
cwtl
popa
cs
pop
test
jbe
push
imul
push
or
sub
xchg
adc
mov
ljmp
testl
test
mov
fwait
clc
lods
or
mulb
sbb
push
jmp
shr
or
and
scas
push
and
rolb
sbb
push
sbb
leave
adc
mov
int
out
jle
loope
jmp
shrb
arpl
js
out
xlat
cs
call
mov
sub
arpl
dec
in
add
ret
rcrb
int
jp
sbb
sti
jmp
not
dec
mov
es
jp
jp
xchg
xchg
movsb
mov
ljmp
sub
or
faddl
or
sub
jmp
xchg
xor
scas
outsl
test
add
div
popa
add
lods
add
cmp
out
xor
dec
sbb
add
icebp
sti
jg
insl
aad
pause
inc
or
add
addl
mov
and
testb
sbb
xor
hlt
stc
push
and
addb
pop
in
rcr
outsb
lods
scas
sbb
jmp
ret
inc
into
or
stc
lods
push
sbbb
popa
inc
xchg
comiss
imul
mov
push
jae
scas
jmp
or
ficompl
stc
mov
jbe
xor
fildll
or
push
push
repnz
mov
and
add
pop
out
add
or
in
call
sbbb
bound
shll
mov
jo
mov
and
pop
jb
add
divb
cmp
inc
orl
add
in
testl
mov
mov
popf
pop
enter
call
adc
inc
and
loopne
push
pop
addl
shlb
dec
mov
outsb
test
mov
mov
call
xor
dec
out
xchg
or
or
pop
pop
inc
push
test
or
neg
add
push
mov
xor
mov
fs
add
jns
add
outsb
mov
mov
cmp
dec
jmp
pop
or
push
mov
test
test
and
insb
jo
insb
inc
es
negb
fnsave
movsl
jns
push
fcmovb
push
cltd
loope
jo
add
dec
pushf
das
jmp
ljmp
jl
fbld
xor
add
mov
mov
cs
adc
pop
loopne
inc
jo
pop
insl
dec
sbb
jb
pop
jg
xor
outsb
inc
cmp
sbb
pop
jb
outsl
add
jne
sbb
es
loop
push
test
daa
stos
out
cmpl
cmp
xchg
pop
xor
repz
mov
pop
or
xchg
ljmp
ffree
cmp
sub
dec
mov
adc
sbb
fistps
and
pop
and
xchg
pop
movsb
and
test
xchg
imul
sub
mov
repz
rclb
xchg
push
xchg
ljmp
xlat
loope
imull
push
inc
xlat
pop
out
pop
cltd
test
add
inc
cmpsl
xor
fisubrl
fadd
test
dec
and
sbb
lahf
sbb
clc
outsl
mov
or
xchg
fcompl
pop
or
sub
mov
mov
adc
adc
mov
mov
push
mov
xchg
jnp
and
jno
xchg
outsb
mov
or
cmpsb
push
insl
bound
inc
les
lock
sarl
je
cwtl
pop
nop
or
and
jp
mov
insl
sti
mov
inc
push
scas
jge
mov
lods
push
push
push
mov
sub
ja
adc
xlat
roll
jno
fimull
mov
cmp
xor
in
icebp
inc
cli
ret
dec
insl
inc
or
daa
add
leave
inc
cs
jae
jmp
fildl
push
pop
push
push
imul
and
or
sub
push
jp
pop
flds
rclb
sub
mov
mov
push
fiaddl
pop
inc
cmc
xor
ja
or
mov
mov
push
adc
js
popf
notl
mov
movsl
add
cmpb
jae
pop
push
or
popa
pop
and
nop
add
dec
stos
xchg
aad
ret
xor
inc
xor
imul
xor
add
lret
jp
rorl
sub
call
loopne
pop
push
popa
push
push
sub
ljmp
mov
dec
pusha
cltd
sarb
jmp
pop
push
jmp
lahf
or
pop
add
push
dec
sub
xor
push
mov
dec
nopl
push
das
scas
mov
or
test
sbb
adc
xor
or
mov
pop
jmp
push
in
mov
mov
pop
std
insl
inc
mov
jbe
popa
jmp
push
test
out
and
mov
mov
mov
xchg
shlb
or
dec
sbb
jle
sbb
mov
adc
mov
pusha
cli
adc
mov
sub
add
cmp
push
mov
ret
adc
xchg
sub
sbbl
jb
mov
in
xlat
mov
int
lret
dec
dec
out
test
stos
xor
add
xor
dec
push
xor
xchg
add
out
pusha
mov
jno
xor
jg
cmp
clc
das
adc
scas
push
or
cmpl
lret
push
sub
pop
push
xlat
add
cmp
add
sub
cmpsb
in
or
jge
sub
add
ret
pop
push
int3
sbb
mov
xchg
fisubrl
sbb
or
jmp
addr16
jge
xor
das
pop
jecxz
scas
jo
adc
ljmp
adc
mov
pop
mov
fimull
fdivs
mov
pop
or
xor
pop
inc
jns
jg
cs
inc
movsl
rol
imul
cmp
insl
mov
aaa
dec
inc
pop
add
sbb
adc
jge
mov
jno
iret
push
push
add
sbb
dec
cmpl
pop
lods
fsubrl
jg
and
and
rolb
cmp
pop
sbbl
stos
outsb
adc
mov
xchg
lret
add
addb
fists
dec
addb
sub
cld
cmp
popa
jmpw
xor
add
mov
cli
mov
popw
int3
xchg
and
xor
mov
outsl
mov
loop
pop
jp
inc
mov
leave
push
or
push
sbb
test
xchg
push
jecxz
cs
push
mov
add
sub
jbe
or
push
fcoml
jp
mov
adc
or
clc
out
pop
cmp
sub
enter
inc
dec
jle
xor
neg
push
mov
call
lahf
iret
fadds
push
in
add
sub
fists
dec
and
les
negl
mov
xchg
push
leave
cmpl
inc
adc
cmp
ret
push
roll
push
cmp
cmp
test
in
stos
dec
sub
orb
cmp
push
sub
inc
negl
out
repnz
js
dec
xchg
ljmp
inc
pop
mov
mov
push
fcoms
or
xchg
jle
mov
sub
negb
test
push
dec
test
jns
add
jmp
jmp
dec
jbe
and
cmp
jmp
repnz
ljmp
fbstp
int
jecxz
add
hlt
ret
push
mov
cmpsl
push
xchg
sub
pop
and
pop
divl
scas
xlat
sbb
orb
and
mov
add
dec
call
in
inc
fstl
stos
xchg
push
je
shlb
push
test
mov
push
or
popa
mov
sarl
add
lods
mov
push
lods
and
mov
add
cmpsl
xchg
dec
inc
stos
push
pop
adc
inc
fildl
cmp
mov
mov
mov
or
xor
out
push
or
inc
xchg
xrelease
sbb
cmpsb
mov
cmp
jo
or
mov
daa
jl
pop
push
add
dec
inc
jmp
mov
add
sub
sub
jnp
jl
add
mov
rorb
add
lret
ret
cld
fists
insl
cs
lods
and
pushl
jl
loopne
lods
push
rcrl
push
add
xchg
cmp
jg
shr
ret
pusha
add
cmpsb
cmp
or
sub
mov
jmp
and
or
aad
add
nop
or
fsts
gs
jns
push
call
or
add
test
movsb
stos
iret
dec
pop
xor
push
dec
pop
mov
mov
and
pop
sbbl
std
lock
leave
roll
testl
pop
dec
pop
inc
jl
imul
lahf
jo
add
push
pop
mov
daa
jae
xchg
lea
sti
jge
and
mov
and
xor
inc
insl
in
mov
dec
xchg
out
adc
adc
sbbb
xor
fadds
push
jge
pop
cmp
and
sahf
scas
hlt
jnp
mov
pop
and
mov
xchg
push
cs
or
jns
pop
and
xchg
lock
cmp
pop
adc
xchg
pop
inc
add
push
dec
pop
mov
pop
mov
jno
cmp
mov
sub
notb
inc
ficomps
sub
mov
ljmp
push
ret
pop
addr16
mov
ljmp
xor
and
and
or
mov
cmc
or
repnz
mov
rclb
and
lock
cmp
insb
sbb
push
push
lcall
jmp
pop
ds
xchg
movsb
inc
out
or
sahf
dec
loop
push
ficomps
pop
mov
sahf
jo
push
add
stos
and
jb
lea
movl
xchg
lahf
out
std
xchg
fidivl
or
pop
cmpsl
hlt
lods
and
jge
jnp
stc
shll
push
xchg
mov
pop
movsb
ljmp
mov
lret
add
arpl
popl
sbb
fidivs
lret
sub
adc
adcb
sarb
aam
cmp
mov
xchg
sahf
in
loop
loopne
push
jge
rcl
shrd
addr16
mul
mov
daa
cmp
ret
add
push
fnstsw
add
sbb
sub
shll
loope
repnz
std
dec
or
pop
sub
popa
mov
mov
in
or
jb
loopne
xor
dec
call
jmp
and
jecxz
dec
insb
push
inc
popf
shlb
mov
lret
mov
mov
testl
cltd
popa
sub
int3
add
repz
mov
push
cwtl
nop
aaa
mov
aam
mov
inc
xchg
xchg
sub
or
inc
cld
mov
out
add
jmp
jge
lds
aam
lahf
dec
push
fldl
xchg
add
or
or
jp
pop
sub
or
into
test
sub
xor
add
outsl
shl
adc
ret
popa
pop
orb
sub
adc
psrlq
or
ss
push
inc
jae
push
push
fbld
inc
negl
fstps
decl
adc
jge
int3
ret
pop
pop
jmp
fldl
bnd
mov
or
sub
lret
aad
clc
std
loop
test
popa
aas
jp
add
pop
loopne
out
cmp
mov
data16
div
inc
push
xchg
push
jmp
mov
adc
mov
xorb
mov
aad
mov
filds
add
and
pushf
imul
pop
adc
loopne
scas
ljmp
push
cmp
hlt
pushf
ljmp
or
xor
sbb
pop
xor
adc
aas
aam
gs
call
repz
lds
dec
dec
xor
sarl
outsl
or
popf
and
mov
adc
insb
insl
add
pop
or
inc
lock
add
mov
push
test
das
mov
sub
icebp
pop
sub
adcb
jmp
out
sub
mov
test
sbb
add
js
xor
sub
ret
hlt
inc
pushf
inc
loopne
xchg
adc
cmc
and
test
inc
inc
mov
in
inc
insl
adcb
insl
pop
inc
add
push
push
add
dec
sub
mov
or
sbb
dec
or
xchg
mov
add
roll
push
lret
addr16
mov
gs
nop
pop
add
js
cli
pushf
stos
pushf
adc
pop
jno
pop
add
mov
ret
jmp
dec
in
jno
cmp
insl
cmpsb
ror
scas
sub
dec
xor
mov
mov
lret
cmp
dec
jns
ret
cmp
and
test
pop
push
es
inc
adc
test
daa
mov
xchg
mov
or
adc
jl
sub
das
neg
in
pop
or
sbb
sub
mov
pop
xor
scas
pop
xor
iret
nop
xchg
fiadds
jmp
dec
fnstenvs
jle
ror
pop
cmp
repz
jmp
xlat
je
scas
adc
scas
repnz
test
mov
jle
test
aam
add
dec
pop
jbe
xchg
sub
mov
out
or
arpl
push
sbb
out
stc
sub
mov
insb
adc
inc
push
pop
std
rorb
je
mov
jno
mov
mov
scas
add
push
mov
and
pop
repz
das
sahf
das
das
and
add
sub
clc
into
orb
cmpb
push
jo
shll
or
sbb
xchg
dec
and
cmp
jmp
dec
jno
add
xor
ret
shr
sub
cmp
sbb
sbb
adc
popa
sahf
xchg
cmp
pop
dec
hlt
pop
repnz
int3
in
insl
push
xor
jmp
dec
pop
sahf
mov
pop
lds
sub
mov
fwait
aas
jbe
cli
fidivs
xlat
mov
adc
daa
mov
icebp
imul
imul
fldl
or
ja
xor
dec
das
fbstp
dec
jp
sbb
gs
cwtl
mov
or
sahf
daa
jnp
hlt
dec
pushf
pop
clc
cmc
mov
push
dec
ret
call
daa
jno
popa
push
cld
pop
rcpps
jecxz
or
sbb
push
jmp
cltd
pop
adc
xor
jno
pop
hlt
js
or
cmp
mov
mov
mov
add
dec
cmp
mov
push
add
lahf
mov
dec
scas
lds
jnp
add
xor
or
aad
sub
lahf
push
rclb
fsubl
adc
jl
sub
lret
les
dec
test
in
mov
pop
out
xchg
mov
mov
sbb
loop
dec
clc
add
ret
jbe
sub
xor
inc
or
popf
add
cwtl
and
in
dec
and
xchg
stc
frstor
lahf
push
inc
jle
jo
jno
pop
cli
xchg
andl
loop
rol
push
push
pusha
jnp
cwtl
lods
orl
andb
cmp
je
insb
pushl
faddl
mov
cld
in
rolb
sub
push
pusha
mov
idivl
jbe
dec
mov
push
stos
gs
dec
in
mov
sbb
mov
or
sbb
sub
adc
ss
sub
xchg
inc
popf
dec
mov
adc
cs
and
call
and
out
jecxz
mov
fwait
jnp
cmp
mov
and
test
testl
popa
jge
imul
pop
push
mov
or
pop
xlat
xorl
mov
mov
rolb
inc
push
int
dec
pop
and
mov
add
mov
or
mov
jo
sahf
clc
adc
nop
subb
jl
inc
or
add
jmp
push
movb
or
int
aaa
jmp
jmp
cli
pop
mov
jp
dec
arpl
loop
xor
ret
int
push
xor
add
in
sbb
adc
in
pop
jb
dec
cmp
jmp
push
lock
dec
sub
push
sbb
outsb
inc
inc
jbe
xchg
nop
sub
clc
sub
or
xlat
mov
clc
movsl
cmc
push
popa
adc
jle
jne
add
fadds
cmpsb
and
and
cs
stc
dec
dec
jecxz
sub
push
loopne
pop
mov
dec
push
add
mov
and
movsl
pop
arpl
ret
mov
push
test
sti
cwtl
mov
cmpsb
dec
fadds
out
pop
and
adc
pop
testb
and
add
xchg
daa
add
sbb
xor
push
jmp
addr16
andb
mov
pop
pop
shr
inc
push
mov
repnz
sub
add
jmp
aad
and
push
push
cmp
cmp
cmpsb
xor
cld
movups
sarb
inc
sbb
popa
gs
add
push
ficoml
jmp
sbb
xlat
xchg
mov
jno
loop
lret
inc
push
mov
popa
jge
sbb
add
pop
mov
adc
mov
cmpsl
jns
or
fsts
mov
call
xor
push
or
mov
push
jmp
int3
cmpsl
sub
add
cmp
push
gs
icebp
add
or
je
stos
nop
ljmp
xchg
dec
cli
into
cmc
mov
mov
push
sbb
push
add
pusha
pop
loopne
push
add
push
sbbb
sti
stc
jle
aam
lret
fidivs
mov
enter
push
loopne
push
sub
jmp
mov
xchg
push
fiadds
sub
rolb
pop
frstor
lds
int3
adc
jo
mov
rcrb
xlat
icebp
inc
push
mov
testl
adc
pop
cmpb
push
mov
lods
add
clc
jmp
filds
or
add
out
sub
pop
mov
dec
push
rolb
cwtl
fcom
cmp
sets
mov
in
mov
movsb
xchg
push
lods
sbb
int
jmp
jmp
cwtd
fcmovb
ljmp
push
mov
sub
sub
icebp
daa
cs
xchg
jns
jo
jl
out
or
mov
inc
pop
mov
adc
mov
cld
fstps
push
mov
enter
mov
sbb
jne
mov
pop
push
push
sub
cmp
push
sub
dec
imul
sub
das
jl
pop
out
imul
or
out
pop
dec
fld
adcl
add
adc
inc
jbe
pusha
dec
call
xor
ja
push
clc
subb
inc
jge
jo
and
jge
ja
cmp
dec
xor
sbb
mul
pop
pop
push
mov
daa
add
cli
jmp
icebp
shlb
sub
add
and
dec
jle
add
jne
sbb
rcl
push
xchg
decl
inc
jmp
mov
or
jbe
rorl
call
out
adc
call
iret
sub
int
inc
sahf
fstps
or
cmp
mov
inc
ljmp
mov
stos
jle
ja
sbb
lcall
outsb
mov
push
mov
leave
mov
push
movsl
leave
pop
fisubrl
xor
add
xor
xor
outsl
mov
sbb
mov
push
pop
stos
pop
pop
les
lods
sbb
mov
fst
jle
clc
pusha
sbb
fbstp
add
mov
daa
les
cmp
jae
xor
or
xchg
cmp
test
or
dec
inc
xchg
cmovb
ss
orb
pop
jbe
in
push
arpl
xchg
jmp
push
test
add
lcall
xor
dec
jnp
pop
or
pop
dec
push
inc
jb
inc
outsb
jo
lret
adc
and
mov
xchg
cwtl
xchg
testb
push
or
jbe
jb
or
or
add
xlat
js
or
xchg
add
scas
xor
dec
std
pop
pushf
fsubs
push
mov
sub
mov
push
jp
jg
and
enter
or
push
pop
add
fmuls
aam
inc
inc
ja
mov
pmaddwd
mov
rcrb
mov
lahf
jl
mov
icebp
orl
push
jbe
jge
xlat
xor
jo
out
test
mov
das
pop
and
fcmovb
sub
cmp
fadds
enter
jg
push
sbb
sbb
ficomps
jp
mov
bound
sub
jl
xchg
adcl
sarb
jl
add
ss
push
inc
aad
into
jns
out
adc
inc
icebp
popf
push
push
or
fsubrs
push
mov
iret
cmp
push
push
loope
in
hlt
xor
fiadds
jmp
mov
pop
or
and
std
jmp
cmp
dec
xor
out
add
arpl
fstps
add
and
sbb
test
pop
shl
sbbb
addb
sbb
mov
push
add
repnz
adc
push
sbb
popl
inc
leave
repnz
dec
sub
pop
ja
mov
push
in
pop
or
js
sub
cmpsb
adcb
jg
ljmp
push
sub
add
pusha
adc
movsl
mov
cmp
mov
enter
xor
mov
add
adc
aaa
jmp
je
pop
inc
pop
add
ja
mov
add
bound
and
dec
adc
and
pusha
xor
or
jle
mov
ret
pop
call
or
sar
pop
stos
cwtl
int
lahf
push
dec
addb
scas
cwtl
in
push
dec
dec
xchg
lods
mov
stos
loop
sbb
in
and
xor
mov
subl
jp
arpl
push
push
mov
fisttpll
jbe
cmp
inc
addr16
jo
mov
dec
jp
add
je
sbb
bound
bound
or
add
lret
adc
jle
ljmp
push
leave
jno
sub
movsb
loopne
sbb
gs
jmp
arpl
adc
outsl
addr16
dec
push
insl
pusha
lret
push
cmp
enter
mov
in
or
push
les
add
push
push
negl
dec
add
loop
or
push
icebp
pop
or
mov
dec
inc
jo
or
movsl
lods
pop
push
push
push
jp
mov
add
enter
xor
adc
sbb
outsl
cltd
das
push
lods
lods
push
add
add
push
mov
xchg
jmp
insl
lret
std
mov
add
jns
lahf
jb
mov
jb
in
and
cmp
bound
shr
xor
aas
pop
inc
xor
cmp
mov
xor
mov
inc
xchg
adc
test
fisubrl
add
popf
xor
or
inc
fidivl
sub
test
jmp
add
test
outsl
pop
mov
arpl
dec
pop
nop
mov
add
cs
sbb
mov
mov
or
cld
bnd
dec
pusha
push
mov
cmpb
jae
out
clc
xor
pop
mov
pop
pop
psubq
cmpsl
int
xor
xchg
bound
adc
mov
adc
add
out
pop
push
dec
es
push
outsl
sub
jle
orl
dec
xor
sub
pop
test
ret
mov
cmp
add
cmp
jb
add
imul
mov
enter
dec
out
jmp
inc
mov
jns
push
xor
mov
js
adc
loope
sbb
xchg
lret
and
out
test
mov
jmp
and
jo
mov
and
sar
xor
in
not
push
test
int3
add
aam
les
adc
call
add
rolb
test
pop
in
xor
pop
test
inc
loopne
xchg
arpl
cmpsb
mulb
stos
sub
xlat
test
and
dec
sub
inc
ret
loope
push
push
jmp
jmp
mov
jmp
stc
push
jg
in
in
pop
add
je
neg
ret
dec
in
add
mov
or
push
ds
jnp
pop
or
sub
pop
push
push
aam
pop
mov
pop
fidivl
add
ficompl
xor
add
inc
popf
aam
mov
xchg
jnp
sbb
stc
sti
add
cs
and
in
arpl
mov
mov
in
out
push
es
shl
popa
rorl
jo
xchg
add
ficompl
mov
mov
pop
scas
inc
mov
xchg
lods
and
fcmovbe
fildll
push
imul
pop
jb
js
les
rcll
shrb
add
push
add
mov
pushf
jne
jp
ljmp
pop
xchg
push
dec
push
cld
and
jmp
push
push
jle
aas
pop
mov
jnp
mov
ret
adc
jp
mov
add
xor
ss
pop
add
das
and
sbb
pop
xchg
inc
and
pop
jmp
movsb
add
jns
dec
in
sbb
mov
or
or
icebp
sbb
xor
or
inc
and
lds
insb
push
mov
pop
and
inc
or
loop
add
fcompl
fucomp
sarb
js
xchg
mov
js
sub
pop
mov
mov
xor
scas
inc
enter
pop
fidivs
xor
andb
jae
inc
xor
ror
mov
test
mov
mov
jmp
pop
les
mov
sti
jno
push
add
loopne
sbbb
xchg
js
sbb
sbb
cltd
dec
jg
jmp
aaa
push
push
push
or
lock
sub
rolb
loopne
mov
add
inc
lcall
jg
lods
sub
ss
test
iret
add
sub
pop
mov
mov
pusha
pushw
sahf
aas
inc
xchg
lock
sbb
lds
sbb
adc
insl
adc
mov
jmp
mov
adc
jl
jns
pop
ja
jle
orl
inc
push
gs
adc
jmp
dec
adc
push
jb
mov
push
xchg
pop
inc
lcall
add
nop
sbb
lahf
add
arpl
sub
cmpsb
xchg
jle
pop
xor
les
or
stc
in
mov
addl
mov
clc
xchg
xchg
jnp
imul
pop
not
mov
movsb
mov
dec
ret
dec
sbb
enter
jmp
fcoml
hlt
mov
jmp
mov
in
add
mov
xchg
push
push
divl
aaa
pop
xchg
in
adc
jnp
dec
jle
inc
cmp
stc
sub
pushf
cs
jecxz
pop
addr16
movsl
pop
cmp
push
add
lahf
pop
call
aas
mov
push
add
dec
shlb
xor
jbe
or
and
xchg
inc
and
sub
adc
push
fsts
push
mov
mov
pop
ret
scas
rcrl
shr
and
pop
scas
lahf
icebp
jp
cmp
clc
std
in
sub
mov
jo
rcrb
mov
scas
lret
or
nop
cmp
hlt
sbb
dec
lahf
push
pop
push
mov
mov
ret
stc
pop
in
sub
std
jno
cltd
or
inc
sbb
andb
inc
xor
cmp
pop
ja
mov
jle
pop
not
xor
inc
xor
rcrl
pop
add
add
adc
lock
fs
push
ret
add
xchg
movsl
subb
push
cld
adc
cltd
dec
inc
dec
call
mov
inc
dec
in
jge
push
sarb
inc
push
xlat
loopne
dec
loop
or
push
dec
xchg
decl
daa
and
push
and
or
fiaddl
shl
push
mov
add
sbb
stc
lods
outsb
or
in
shrb
or
fs
adc
jge
add
jg
mov
jb
xchg
mov
stos
pusha
cmp
mov
or
fwait
inc
add
adc
adc
push
inc
push
cmp
mov
adc
add
lods
jmp
pop
std
jp
xor
mov
sub
dec
push
or
jg
scas
in
mov
push
add
dec
dec
or
out
outsl
push
adc
adc
stos
inc
dec
dec
fcoms
add
xchg
add
std
push
adcb
ja
add
push
mov
repz
js
stos
adc
adc
or
pusha
fs
orb
cwtl
orl
or
orl
xchg
jae
out
fdivr
dec
in
in
xchg
push
add
dec
or
in
jge
push
and
nop
lods
or
push
jbe
or
sbb
dec
inc
cltd
hlt
cwtl
xchg
icebp
testl
and
dec
jmp
mov
cmc
jnp
dec
lds
xor
and
jmp
xlat
pop
mov
cmp
dec
jp
jmp
sbb
xchg
pop
das
pop
lea
testl
xor
push
cmp
push
dec
imul
test
gs
cmp
test
jecxz
inc
push
imul
into
adc
stos
push
or
fsubrp
ss
fwait
xorb
bt
push
xchg
inc
faddl
aas
lock
push
mov
jmp
and
inc
hlt
mov
pop
push
pop
dec
rcr
push
das
sub
pop
lock
je
popf
pop
xlat
jle
cmp
jmp
xor
or
xor
aad
add
lods
adc
in
sub
jecxz
sub
and
daa
or
call
xor
jns
popa
dec
outsl
cld
je
adc
imul
and
jmp
cmp
pop
sti
cmp
enter
lods
push
mov
push
sbb
jmp
add
shrb
shll
loope
in
or
adc
lahf
xor
push
push
pop
lcall
dec
or
or
cs
dec
push
roll
addl
jmp
pop
pop
jmp
stos
mov
cmp
lahf
les
xchg
stc
in
add
insl
loope
mov
sbb
addb
and
mov
xor
and
mov
mov
orb
adc
bound
les
pop
xorb
xor
lahf
inc
inc
andl
ljmp
imul
or
lret
or
jmp
xor
std
or
push
es
cli
sbb
xor
cwtl
sbb
sub
mov
xchg
cmp
lret
repz
adc
cmp
scas
inc
jns
int3
push
push
pusha
push
jmp
mov
pop
sub
mov
sti
xchg
sub
pop
push
pop
scas
bound
imul
popa
out
iret
dec
adc
or
movsb
in
or
sub
aaa
jnp
subb
inc
gs
or
sbb
add
inc
hlt
pop
pop
shr
lods
into
pop
push
test
aam
adc
xor
mov
mov
cmpsb
pop
cltd
or
movsb
push
pop
popf
jmp
loop
mov
sub
hlt
dec
lods
jg
sti
sub
sahf
das
lock
sub
nop
popf
dec
lea
inc
pop
inc
repnz
pop
push
mov
jmp
fisubrs
scas
fs
push
mov
scas
add
push
stos
adc
cmp
cmp
dec
scas
or
or
add
xor
aaa
stos
xlat
dec
inc
xchg
pop
pop
pop
outsl
pop
dec
mov
or
pop
add
pop
cmp
xchg
add
sub
cmpsb
aad
roll
stos
inc
insb
sbb
add
addl
cmp
fiadds
pop
adc
add
xor
das
dec
dec
sti
xchg
add
add
orl
fucom
arpl
xchg
sub
aas
jp
loopne
push
add
add
mov
push
stos
inc
xchg
and
mov
xchg
cmp
neg
clc
leave
inc
dec
clc
xchg
mov
push
inc
addb
mov
inc
mov
orl
sub
pop
pushf
pop
popa
sahf
add
cli
ret
push
jb
popf
shr
in
jg
mov
sbb
cld
es
xor
xor
pop
loop
call
dec
jmp
mov
loop
pop
ja
lds
inc
hlt
test
int3
cld
adc
jae
out
outsl
mov
test
shr
nop
outsl
mov
and
into
test
aad
mov
fsubl
cli
jne
jmp
dec
sub
pop
or
loop
jb
loopne
pop
movsl
jl
push
icebp
cmp
pusha
xchg
outsl
push
mov
scas
add
dec
jns
imull
inc
sbb
xor
xchg
ret
gs
fs
add
jmp
out
mov
aam
shr
std
xor
adc
and
jmp
shll
push
jbe
push
mov
pop
push
push
ret
scas
and
shll
cmc
loopne
jge
xchg
inc
xchg
imul
add
lods
outsb
mov
sbb
jo
jge
inc
nop
sub
jmp
or
pop
negl
mov
clc
cmc
or
adc
mov
add
cmp
out
push
imul
notb
cld
mov
or
mov
mov
nop
mov
jle
add
pop
add
int3
mov
jae
xchg
or
fldl
sbb
mov
cmp
lret
in
xor
push
pop
jnp
sbb
aad
push
jo
mov
arpl
inc
jl
mov
in
add
daa
inc
inc
lods
push
or
rclb
fistpll
cmp
setp
push
clc
shll
mov
jle
sub
cmpl
mov
addr16
iret
pop
jg
sub
outsl
rol
test
or
xor
pop
inc
pop
push
xchg
xchg
es
xorb
pop
inc
push
je
in
fistpl
es
sahf
adc
sbb
sub
cld
int
sbb
cmc
icebp
xorl
adc
add
adc
sub
out
sub
dec
roll
out
ret
lock
add
push
pop
sub
scas
add
pusha
stos
mov
orb
aam
iret
mov
shr
dec
ror
pusha
shlb
jge
add
cli
and
fldl
pop
cs
cmp
movsl
sahf
jl
mov
outsb
sbbl
jb
shlb
fcomip
fisubs
pop
rclb
or
pop
bound
jle
or
fwait
adc
cmp
jg
xor
mov
outsl
and
add
xchg
rorb
in
insb
lods
fisttps
out
or
cmp
adc
pop
lods
je
xor
adc
push
aad
dec
dec
add
xor
std
pop
std
pop
cwtl
mov
pop
pop
sub
test
xchg
jle
mov
in
hlt
scas
sub
pop
cmp
mov
or
lock
xor
movsl
int
leave
push
and
pop
ja
daa
mov
data16
or
xchg
or
mov
pop
test
negb
movsb
ret
jne
xchg
sub
icebp
cmp
aam
jmp
test
mov
lods
lcall
movb
loop
add
mov
sub
mov
les
add
push
sub
repnz
adc
adc
pop
rclb
sbb
jmp
shlb
and
pusha
and
jp
int
pop
mov
dec
neg
push
mov
andb
insb
cmpsb
sti
xlat
imul
jmp
hlt
mov
mov
push
pop
pop
mov
insl
lock
pop
push
bound
stos
inc
dec
sub
jne
inc
out
les
mov
jbe
sub
dec
mov
imul
rolb
add
xor
jb
mov
lea
mov
adcb
jb
xor
pop
pusha
mov
cmp
mov
popa
idivb
cmp
imull
scas
aad
push
push
push
pop
and
sbbb
out
mov
pop
pop
pusha
pushf
pop
imul
stc
inc
mov
aad
call
xor
leave
cwtl
jecxz
icebp
movsl
adc
and
push
mov
mov
ds
std
lret
or
adc
push
or
cs
xchg
inc
das
xchg
stos
aam
imul
iret
out
push
daa
mov
add
loop
loop
hlt
ret
lods
imulb
pop
mov
sub
dec
sbb
pop
stc
xor
repnz
pusha
or
push
subb
inc
mov
dec
jmp
out
mov
test
shl
push
xchg
cmp
adcl
shrb
push
or
sub
pop
and
jecxz
xor
imul
into
adc
in
mov
adc
add
and
or
push
xchg
cmpsb
aam
insb
daa
adc
pusha
and
imul
xor
out
pop
adc
test
loop
cmc
movsb
pop
test
xchg
std
xchg
ret
mov
or
jnp
sub
and
cmp
por
cwtl
outsl
mov
jmp
popa
add
and
cwtl
lahf
or
jbe
sub
mov
mov
xchg
mov
cmp
push
bound
pop
les
adc
and
inc
rorl
sub
and
and
adc
or
push
cli
icebp
lahf
loop
ja
subl
pop
mov
mul
xchg
scas
in
test
outsb
mov
xlat
mov
adc
jle
rcrl
xlat
jecxz
sti
std
scas
outsb
xor
popl
outsb
inc
mov
cmp
push
pop
jle
imul
dec
jne
mov
push
pop
mov
mov
out
add
icebp
jmp
push
lods
mov
pop
or
hlt
push
pop
dec
mov
add
inc
sub
sub
sbb
mov
mov
mov
mov
jp
sti
std
or
mov
push
push
push
rolb
lahf
vmptrld
lret
pusha
adc
in
call
inc
jg
aam
leave
in
push
add
out
lds
clc
pop
sbb
dec
popf
lds
mov
add
mov
clc
cmp
jg
rcrl
and
push
sbb
add
loop
jg
jl
sbb
std
mov
pop
shll
or
gs
or
js
xchg
dec
stc
mov
jge
inc
or
pop
cld
ds
lret
or
fcmovnbe
jg
das
loopne
fmulp
inc
in
je
lahf
push
cmp
lret
pop
mov
loopne
fdivs
shlb
cmp
xlat
sbb
cmp
sbbb
mov
jle
mov
pop
push
push
inc
mov
popf
jbe
cmp
imul
insb
lahf
mov
aad
and
sbb
inc
shll
iret
inc
sub
jg
inc
andl
inc
cmp
inc
test
out
sub
divl
jae
lock
xchg
jl
bound
mov
push
xor
inc
pusha
inc
pop
pusha
cmpsl
lea
add
rcrb
adc
or
push
sbb
mov
jo
cmp
dec
mov
push
mov
bound
pop
and
mov
adc
push
push
fs
lea
ja
mov
leave
rcll
pop
imul
jp
jns
mov
xor
movsb
push
cmpsb
mov
ffreep
xlat
sub
ret
imul
divl
outsb
mov
ud2
ja
enter
or
xor
stc
scas
int
das
out
xchg
out
mov
test
sbb
jg
iret
test
test
mov
inc
lcall
out
rcr
push
sub
pop
mov
xchg
inc
scas
lds
pop
sbb
and
in
test
sub
sarb
inc
jmp
mov
add
mov
xor
mov
test
add
mov
pop
das
in
xor
ljmp
outsl
push
je
and
jge
pusha
xchg
cmp
jg
jnp
xchg
loope
sub
or
pop
adc
or
outsb
mov
data16
push
jnp
lret
scas
sub
stc
into
aam
out
fs
loop
xchg
out
xor
jae
mov
and
adc
sub
aam
dec
adc
stos
mov
dec
add
flds
call
pop
or
out
pop
mov
pop
ss
sub
std
mov
sbb
repz
jnp
shr
iret
jbe
adc
jmp
lcall
push
push
and
adc
push
ljmp
inc
xor
imull
or
loopne
adc
sbb
out
mov
add
roll
add
sbb
mov
ljmp
shl
sti
pop
lods
nop
rcpps
pop
fldenv
pop
pop
xor
add
aam
add
outsb
les
cvtdq2ps
lret
lret
lret
add
lret
inc
add
pop
or
push
in
add
cs
jmp
notl
out
push
nop
dec
pop
push
jle
push
mov
push
add
dec
xchg
mov
lcall
mov
iret
push
and
adc
adc
or
mull
mov
push
dec
inc
lock
sub
push
call
pop
sbb
inc
add
insb
jp
popa
stc
inc
int
push
push
roll
jg
mov
mov
jo
dec
and
push
cld
bnd
add
push
xchg
cs
es
outsl
ljmp
or
sbbl
jnp
fs
inc
aas
dec
and
jle
adc
pop
mov
xor
cmpb
mov
rolb
call
inc
cltd
pop
push
out
cwtl
fimuls
push
adc
or
gs
jmp
mov
inc
and
fmul
adc
push
pop
mov
pop
mul
mov
sbb
pop
ljmp
add
sub
push
mov
mov
cmpsl
or
pop
ja
and
mov
es
cwtl
push
push
and
add
or
scas
imul
sub
adc
out
inc
sub
jp
jl
add
jp
in
in
add
cmp
pop
jmp
xchg
inc
out
push
insb
dec
fwait
inc
mov
ret
pop
cmp
dec
pop
mov
insl
mov
bswap
mov
jne
mov
sbb
in
sub
xor
jnp
dec
pop
scas
sub
cmp
and
test
inc
dec
or
push
aam
jb
add
outsl
testl
dec
jmp
pandn
jns
leave
push
pop
mov
testl
mov
std
clc
insb
or
push
js
cmc
xorb
jo
aas
aas
sub
lea
adc
sub
xchg
ds
in
or
xchg
xchg
xlat
ret
add
pop
in
das
dec
xorl
add
addb
in
add
or
movsl
push
lods
push
add
sub
daa
fimull
mov
imul
out
add
push
adc
in
inc
insb
es
repz
xchg
xor
add
pop
mov
or
or
mov
mov
pusha
dec
or
mov
push
pop
pop
cmp
pusha
std
icebp
loope
ss
xor
mov
or
cmp
inc
and
add
push
jmp
scas
cmc
int
imull
test
dec
jle
cmpsl
inc
jne
call
sub
repnz
jno
iret
gs
sub
shlb
xchg
push
mov
mov
hlt
jae
mov
dec
jns
std
add
imul
and
ret
rol
jno
lahf
jns
inc
push
ret
and
pop
inc
or
arpl
xor
fbstp
nop
mov
add
adc
in
push
adcb
and
pop
pop
repnz
movsl
shll
or
and
add
pop
lret
pop
xor
pop
cmp
push
push
orl
cmp
enter
aam
pop
jo
out
pop
dec
outsb
push
xchg
cmp
mov
inc
addr16
mov
and
cmp
cmpsl
icebp
pusha
lahf
push
rolb
mov
pop
shrb
xlat
sti
sub
cltd
pop
jle
ficomps
or
fadds
adc
push
out
pop
or
push
jecxz
cwtl
dec
in
push
xchg
jmp
arpl
inc
or
fs
loop
add
orl
mov
outsb
mov
dec
imul
test
add
test
or
out
sub
jo
push
adc
pushf
rorb
dec
aad
dec
push
pop
jge
stos
popa
inc
or
pop
iret
and
clc
adc
xor
cmp
dec
mov
add
int
sub
jmp
loope
sbb
dec
jecxz
adcb
cmc
sub
jo
add
cmc
dec
inc
arpl
add
ret
mov
or
xchg
adc
mov
sub
adc
mov
inc
sub
stos
in
mov
jo
sbb
pop
aam
xor
movlps
or
movsl
stc
lret
or
adc
cmp
pop
lret
jmp
lret
pop
leave
push
mov
and
std
push
or
out
fcoml
sti
jg
inc
lods
shlb
adc
pop
bound
loope
iret
xchg
jg
dec
adc
les
out
cmp
push
push
push
inc
jmp
ljmp
daa
outsl
xor
mov
add
sbb
imul
pop
jns
jmp
mov
add
inc
xchg
rol
loope
sbb
adc
icebp
fs
mov
repnz
pop
mov
jno
mov
push
push
inc
push
pop
pusha
and
xchg
jbe
pop
mov
icebp
mov
jb
ret
fisubs
cmp
xor
out
in
sbb
popa
sbb
pop
pop
sbb
mov
sbb
fistl
daa
lret
pusha
sub
push
sbb
inc
sbb
push
pushf
das
pushf
cs
sbb
jmp
pop
dec
sarb
sahf
out
std
fcompl
adc
repnz
and
mov
pop
in
inc
jmp
imul
loope
and
cmc
sbbb
nop
adc
push
push
jmp
inc
or
cmp
add
push
outsl
and
int
and
mov
dec
cmpsb
mov
sbb
or
sbb
push
popf
push
xlat
or
sbb
xor
orl
or
adc
or
cli
dec
test
pop
mov
push
lds
add
mov
aam
out
movsb
jecxz
dec
aam
push
xchg
or
mov
cltd
xor
pop
test
loopne
fnstsw
mov
jecxz
mov
cli
rcll
add
inc
sub
leave
je
jo
nop
mov
xchg
outsl
cmp
xor
imul
mov
mov
adc
add
add
push
xor
dec
jmp
lret
mov
sbb
nop/reserved
jmp
js
jp
aas
test
lods
test
stos
pushf
jno
add
or
push
shrl
aam
push
lcall
mov
dec
in
call
addr16
mov
bound
dec
and
add
or
inc
adc
sbb
call
jle
dec
or
inc
mov
add
jl
adc
adc
fmuls
cmp
sub
iret
and
jnp
mov
jnp
filds
icebp
test
mov
ud1
test
fldenv
push
mov
mov
and
jmp
push
test
adc
cltd
ret
pop
mov
sbb
sahf
pop
xchg
cmp
dec
jp
pop
cmp
push
fbld
pop
cwtl
adc
adc
push
push
and
fsubr
into
pusha
xchg
pushf
push
mov
xor
mulb
mov
cmp
jbe
push
shll
jnp
mov
nop
sbb
sub
cs
sub
push
mov
xchg
notb
push
lock
not
and
psllw
mov
out
test
das
pop
jne
iret
insl
add
enter
test
xor
pop
mov
mov
push
rorb
pusha
push
and
not
mov
or
sub
or
inc
stc
add
dec
sbb
cmc
sub
sahf
cld
pop
cld
ja
mov
idivb
and
lock
orb
push
mov
mov
loop
ljmp
imul
mov
movsb
sti
add
dec
add
sub
fs
out
push
mov
or
shr
adc
push
sub
ljmp
imul
pop
pop
dec
in
shlb
and
gs
cmpsl
xchg
push
mov
push
sub
test
mov
adc
add
rolb
sub
dec
repnz
pop
hlt
in
xchg
mov
push
popa
xchg
jmp
ret
icebp
or
push
fldl
rolb
adc
dec
or
or
hlt
or
ja
inc
xchg
out
setg
imul
cwtl
sub
mov
or
into
or
rorb
or
inc
sub
and
mov
sub
in
jg
mov
sbb
push
in
addr16
pop
and
rcrl
pop
dec
dec
and
repnz
jb
lahf
jnp
add
push
je
loope
mov
and
xor
fldt
mov
pop
daa
xlat
in
xorl
pop
jp
mov
sub
xchg
push
sti
addl
or
jns
mov
jo
mov
mov
push
and
pusha
scas
sbb
cmp
add
inc
mov
push
popa
dec
stc
outsb
inc
ret
cwtl
push
pop
mov
xor
and
dec
or
sbb
or
push
add
daa
jge
in
testb
dec
or
fbld
stos
icebp
adc
loope
push
pusha
lret
movl
and
shr
mov
xorl
or
xor
xchg
sbb
xchg
adc
mov
addb
push
outsb
movsb
jmp
sub
inc
or
fidivrs
addr16
scas
into
ret
fs
cli
jle
sbb
fucom
repz
dec
cwtl
lret
mov
xor
sti
nop
adc
pop
addb
jp
pop
pop
test
push
xchg
fwait
dec
std
mov
in
lahf
sarl
adc
mov
ja
push
xchg
insb
add
lret
sub
inc
fnstcw
aam
daa
ret
push
cli
adc
add
fdivs
add
cmc
jl
sub
fs
sub
sbbl
sarb
dec
repz
pop
movsb
repnz
lods
cmp
dec
pop
adc
or
sbb
stc
jne
je
sbb
pop
ret
adc
jmp
inc
pushf
sub
stc
or
pop
push
sbb
cmp
es
loopne
push
or
daa
nop
popa
jmp
push
movsb
rclb
or
jmp
push
add
stc
outsb
xchg
cmp
repnz
test
inc
sub
dec
cmc
imul
repnz
or
add
mov
bound
lods
jle
pop
nop
inc
lods
in
or
inc
lods
pop
jecxz
js
pusha
push
jl
pop
add
jno
dec
xor
pop
sbbb
fsubs
or
pop
and
fisttps
cmp
push
adc
add
xor
sbb
sbb
fisttpll
or
jb
xchg
cmpl
sub
mov
or
add
adc
loope
and
in
and
call
int3
ret
xlat
push
stos
adc
or
lret
out
sbb
push
mov
inc
fists
inc
bnd
add
mov
imul
or
add
fsubrl
inc
push
mov
lcall
mov
in
int3
sub
push
pop
scas
int
mov
pop
lret
pop
fprem
fcomps
ljmp
movsb
ret
fimuls
in
clc
mov
mov
pop
mov
pop
push
pop
test
scas
negl
mov
jmp
inc
cmp
addl
xchg
imul
adc
mov
hlt
jmp
push
xchg
or
add
mov
add
lock
pop
mov
iret
cld
dec
shlb
int
in
stc
push
or
and
add
dec
stos
dec
xor
cli
clc
imul
fstpl
out
mov
insl
sti
mov
daa
pop
icebp
adc
aaa
movsl
jne
jo
push
pop
subb
pusha
sbb
lcall
shr
xor
pop
or
repz
dec
xchg
int3
jne
stos
stos
inc
adc
mov
mov
add
and
pop
sub
aad
mov
xchg
pusha
mov
hlt
mov
pushf
pop
sub
adc
ljmp
pop
bound
mov
and
dec
jle
test
dec
in
add
inc
fiaddl
mov
shrb
xchg
sbb
jns
pop
ljmp
dec
add
std
mov
dec
repnz
out
jne
jecxz
das
pop
in
int
cmp
and
or
enter
jecxz
mov
jmp
push
inc
push
push
dec
and
outsl
movsl
jb
out
or
addl
test
mov
andb
dec
outsb
outsl
jo
xchg
nop
pop
ret
pop
cmp
xor
cmp
adc
lahf
xchg
xor
outsb
sbb
mov
inc
cs
pop
jno
mov
inc
add
dec
adc
enter
sbb
mov
popf
pop
add
jmp
loopne
inc
or
aas
jb
out
dec
sarl
push
ret
dec
pop
sbb
enter
mov
int3
add
outsl
pusha
fdivrs
fidivrl
ljmp
mov
dec
fstps
std
inc
pop
sbb
push
adc
and
cwtl
pop
xchg
jp
jle
ja
jmp
test
call
jmp
mov
inc
ficomps
add
ja
shl
data16
out
push
mov
dec
mov
push
pop
push
mov
xorb
mov
fmuls
mov
mov
idivb
adc
cmpsl
shr
adc
sub
jo
push
lret
sub
test
shll
push
lds
leave
xchg
jbe
or
adc
jns
inc
xchg
test
cmp
mov
and
xor
inc
orb
popa
jmp
inc
and
clc
jmp
popl
out
cwtl
xchg
addl
mov
pop
adc
dec
mov
stc
mov
pop
aad
movsl
jne
dec
cwtl
rcrb
into
ss
imul
bswap
inc
or
inc
pop
mov
or
adc
mov
sar
int3
mov
dec
xor
sub
outsb
add
adc
and
push
cmpsl
es
mov
shll
inc
push
cmp
pop
mov
xor
pop
adc
mov
mov
pop
jmp
pop
jmp
dec
push
fimuls
fsts
daa
fstpl
inc
xchg
lahf
loope
sub
xchg
sbb
dec
fucomp
sub
sub
pop
pop
mov
and
sbb
dec
scas
sub
testb
sub
bound
add
pop
lds
jmp
call
mov
ret
jo
lahf
cmp
add
pop
pushf
push
xor
jo
push
inc
mov
jecxz
add
mov
jmp
inc
pop
cwtl
loope
sub
xor
push
mov
mov
xchg
aam
outsb
or
push
jns
mov
scas
mov
push
adc
add
rcl
inc
gs
rorb
add
dec
ret
aad
scas
mov
mov
jmp
pop
ja
cmp
mov
pop
lods
jo
push
imul
push
push
pushl
jp
lock
and
add
aam
adc
mov
adc
dec
ljmp
dec
sbb
test
pop
xchg
sub
pop
and
addb
pop
sti
lcall
cmp
push
mov
mov
cs
push
jnp
dec
test
testl
ret
mov
je
pop
in
mov
add
add
adc
add
clc
mov
add
mov
adc
or
mov
gs
xor
cs
fidivrl
push
push
cmpsb
push
push
xor
sub
ss
fisubs
pop
dec
cmc
add
jmp
jl
sub
or
enter
roll
and
sub
adc
inc
loop
daa
or
add
xchg
mov
fcmovnbe
clc
shr
mov
dec
rolb
leave
rcll
mov
jmp
mov
lret
loope
mov
and
cmp
pop
pop
fdivrl
jle
sbb
ljmp
repz
dec
adc
jmp
in
or
aaa
pop
xlat
pusha
or
lds
push
js
dec
lds
xlat
sbb
mov
cmp
sub
js
fidivl
adc
test
sbb
xchg
sbb
in
inc
inc
cmc
pop
sbb
xor
es
or
jmp
sub
inc
scas
add
int3
sub
push
rol
mov
mov
jmp
jne
ss
jp
icebp
sbb
push
movsl
mov
cmpb
in
add
ljmp
push
scas
loope
push
test
out
ljmp
sbb
sbb
adc
rolb
stc
sbb
notb
mov
sub
push
jle
adc
jo
or
dec
rcr
push
push
cs
movsl
jle
jle,pn
add
or
inc
jbe
mov
popf
cmpsl
push
adc
jb
mov
inc
shlb
jbe
dec
mov
add
ljmp
xchg
adc
add
in
clc
xor
rorb
decl
adc
sbb
mov
xor
stc
cltd
cmc
in
test
adc
xor
add
cmp
add
cwtl
popa
push
sub
lret
in
xor
das
ljmp
pop
mov
adc
push
add
loopnew
pushf
xchg
aad
test
push
cmp
rcll
pop
aam
jge
test
xchg
jle
pop
add
lods
sbb
repz
into
stos
or
or
je
jge
xor
xor
outsl
mov
xchg
dec
adcb
cmp
ss
add
inc
lds
js
ds
adc
pop
dec
xor
and
adc
popa
xor
or
dec
push
jnp
push
pop
and
cmovne
stc
inc
shlb
add
cmc
jmp
xchg
jmp
mov
add
or
enter
lret
out
outsl
pop
mov
push
mov
lahf
push
test
pop
ja
mov
mov
orl
xor
ds
clc
pop
ljmp
xchg
lea
loopne
mov
rolb
mov
mov
inc
add
sti
jno
add
push
pop
sub
jo
sub
scas
mov
xchg
lret
in
cwtl
mov
inc
push
xchg
dec
out
mov
movsl
adc
orl
sbb
pop
rorl
cmc
push
mov
jae
into
in
scas
int3
push
je
xlat
push
das
pop
mov
js
adc
cmp
out
mov
sub
mov
addr16
cmp
lock
fnstsw
cmp
cmp
jns
rolb
xlat
mov
or
mov
or
or
mov
pop
xchg
jns
inc
push
mov
movsb
mov
xchg
sub
and
push
add
outsl
push
sub
movsl
sub
mov
or
mov
cmp
pop
mov
or
dec
add
cmp
mov
mov
sbb
sbb
mov
fnstsw
add
lds
push
es
adc
rorl
dec
neg
mov
pop
sbb
mov
dec
or
in
and
lret
or
mov
xchg
pop
cli
and
fs
mov
lret
mov
andnps
mov
jp
pop
into
rcr
out
inc
inc
push
push
jl
stos
adc
add
pop
pop
xchg
xchg
xor
std
or
es
andb
sub
add
mov
sub
add
push
mov
sub
cmp
popa
push
mov
in
dec
sub
js
push
mov
push
incl
enter
jo
pop
in
test
pop
clc
rclb
mov
out
dec
add
ret
popa
inc
sbb
sub
lds
sub
repnz
test
imul
adc
insl
push
pop
inc
adc
mov
inc
lea
mov
push
sub
loope
ret
cmp
fnstsw
mov
cld
xchg
add
push
pop
and
cmp
movsb
inc
jge
dec
xchg
mov
xchg
nop
jns
push
dec
pop
add
sub
sub
push
scas
popa
in
jbe
into
mov
cmp
bound
jnp
bound
sub
push
test
pushf
mov
loopne
cmp
int
sub
loop
jae
call
pusha
add
mov
mov
mov
add
aad
pop
dec
cmc
bound
inc
jbe
das
xlat
lret
clc
cmc
dec
cmp
scas
popa
pop
in
data16
sbb
and
fisttpl
pop
xchg
xchg
inc
fidivrl
pop
jbe
cli
push
xchg
aad
cwtl
lds
xchg
push
cmp
sbb
add
dec
xchg
gs
call
lock
add
push
fs
pop
adc
lahf
lret
arpl
imul
insl
add
imul
inc
jns
jbe
mov
shr
adcb
inc
fadd
jne
jp
insb
add
lret
stos
sarb
adc
or
andb
jo
fs
in
pop
out
orb
dec
mov
and
in
das
fxch
mov
pop
ljmp
fdivrs
mov
inc
add
pop
out
jmp
nop
xchg
in
add
pop
mov
out
leave
lret
gs
push
int3
pusha
jge
add
out
out
cmc
outsl
inc
out
push
arpl
out
inc
mov
xchg
jmp
add
mov
mov
stos
inc
mov
cmc
andl
xor
cli
or
mov
sub
cld
dec
arpl
push
or
adcl
clc
sub
outsl
mov
testl
cmp
loope
dec
lods
push
fists
jmp
pop
scas
and
jb
ljmp
out
jo
push
adcb
jmp
dec
iret
std
test
icebp
adc
gs
mov
inc
test
pop
insl
popa
xchg
bound
sub
push
ljmp
fcoml
push
mov
inc
repnz
cli
lret
insl
pop
mov
xor
shrl
prefetchnta
jl
sarb
add
rcll
movsl
and
nop
dec
or
es
cmp
insb
test
dec
inc
into
out
es
push
aad
or
aam
pop
cmc
xor
mov
and
push
ds
pop
sub
mov
cmp
inc
jl
andb
push
lret
shl
jp
nop
mov
jb
xor
push
jbe
xchg
hlt
addr16
daa
repz
ret
jmp
jge
movsb
cmp
testl
pushf
sbb
popl
jmp
das
aas
sub
dec
loope
xor
sub
push
and
dec
dec
mov
mov
ss
or
mov
push
add
or
or
push
mov
cltd
cli
pop
push
das
sub
mov
sub
ret
sbbb
jb
aam
inc
push
push
mov
mov
js
add
ror
sbb
push
jmp
fnstenv
in
js
rcll
in
ljmp
cli
push
and
pop
test
das
dec
dec
pusha
fimuls
pop
lret
mov
dec
decb
in
in
sbb
mov
sahf
pop
nop
movsl
out
outsl
mov
fcoml
pop
data16
xchg
jns
clc
push
mov
inc
mov
ja
dec
sub
outsb
clc
lret
add
clc
popa
pop
inc
ret
mov
pop
or
pop
neg
inc
icebp
pop
inc
mov
mov
and
sbb
in
test
addr16
fnstsw
jmp
sub
pop
addl
popa
jmp
push
push
push
rcrl
jecxz
rorb
and
jg
or
add
cmp
fs
sub
repz
addb
push
gs
pop
mov
dec
xor
js
mov
neg
imul
xchg
or
outsl
and
mov
mov
mov
sub
daa
jmp
dec
cmc
js
clc
mov
adc
je
in
mov
push
adc
xchg
adc
fisubrs
push
jmp
jle
mov
add
or
or
aas
rcll
roll
les
jne
sub
imul
ss
push
mov
xchg
int3
pop
jne
inc
and
cld
pop
lahf
push
xchg
lahf
ds
out
xchg
repnz
and
lock
mov
lea
inc
into
fs
sbb
mov
xchg
cmp
pop
jae
ja
xchg
sub
ret
das
adc
mov
aam
pop
lods
pop
dec
xchg
jg
push
mov
lea
cld
sub
pop
push
pop
xor
movb
push
fs
ret
popa
adc
fmul
ljmp
sub
in
or
outsb
push
mov
fucom
clc
ret
inc
lret
jle
pop
sbb
sbb
jmp
xor
rcr
jno
test
ret
lret
bound
xor
sub
insb
jg
lret
push
rcrb
or
push
sub
jmp
pop
mov
repz
jecxz
test
iret
pop
sbb
sbb
movsl
dec
adc
push
out
add
repz
mov
add
aaa
adc
cmc
jl
adc
cwtl
aam
jmp
clc
or
push
mov
rorb
outsb
popl
rcrl
mov
pop
mov
pop
inc
xchg
movsb
jae
jmp
pop
das
mov
jl
daa
fistps
cwtl
push
sub
shll
es
xor
pop
call
std
mov
push
test
cs
or
add
loopne
out
lds
das
pop
pop
mov
fs
add
inc
dec
dec
mov
xlat
pop
fmulp
sub
pop
or
repnz
negb
push
xchg
jbe
and
add
mov
inc
mov
inc
jo
mov
scas
cmp
push
mov
xor
cmp
sbb
push
jo
fidivl
push
mov
adc
push
cmp
and
cwtl
push
divb
repz
mov
and
clc
push
xchg
or
test
cs
jmp
xor
adc
cwtl
pop
dec
les
clc
cli
icebp
jmp
jecxz
push
and
pusha
mov
jo
mov
xor
jae
sub
repnz
inc
inc
pop
push
jle
add
cmp
loope
das
out
jns
dec
sbb
jge
pop
push
add
sub
jmp
scas
sub
xchg
cmpsl
cs
mov
mov
pop
xor
ret
daa
iret
cs
push
jge
sub
and
pop
or
aaa
jmp
add
cmp
push
jb
dec
jnp
mov
cmp
and
pop
movsb
adc
pop
lahf
and
cld
jae
cmpsl
fldl
in
hlt
popf
mov
mov
adc
push
sbb
pop
rcll
sbb
and
xchg
pop
into
js
loop
loopne
out
mov
xchg
decl
xchg
leave
pusha
pop
push
or
jno
and
mov
mov
or
stos
xor
jo
imul
test
jo
fstps
inc
jg
and
cmc
cmpsb
ret
and
mov
adc
insb
inc
jno
sbb
push
loope
das
cltd
push
jg
js
pop
repz
xor
jmp
push
sarb
xor
mull
inc
cs
inc
jmp
xchg
mov
mov
mov
and
jnp
jmp
pop
lods
mov
jmp
xchg
push
gs
lret
pop
pop
ror
into
sbb
adc
xchg
jns
subl
and
ret
add
pusha
xchg
mov
cwtl
mov
lds
stos
nop
jle
cmp
mov
incl
jmp
lret
pop
call
inc
out
outsb
add
push
fistpll
xchg
cmp
lods
mov
mov
cwtl
add
sub
mov
push
xchg
mov
mov
push
dec
inc
add
xchg
adc
add
stc
mov
inc
pop
sub
sbb
mov
inc
pushf
sbb
mov
punpckhbw
jb
xchg
shlb
stc
gs
mov
clc
push
xchg
sbb
cmp
ds
pop
mov
insl
in
movsb
cmp
add
jmp
pop
popa
sti
cli
pusha
repz
shlb
pop
jmp
dec
in
dec
push
add
sub
jne
push
pop
jmp
cmc
adc
jp
cmpsl
or
pop
ja
cmpsl
divl
aam
dec
aad
repnz
rep
ret
test
jmp
adc
mov
adc
and
or
into
push
out
je
loop
adc
cmove
adc
movsl
dec
cld
fwait
mov
out
jle
inc
push
jmp
jge
mov
subl
or
je
pushf
inc
xor
push
or
std
pusha
cmp
or
mov
xchg
pop
jl
jbe
xchg
pop
add
push
jmp
sbb
xchg
inc
cwtl
adc
fwait
in
insl
mov
leave
push
imul
xchg
mov
scas
mov
pop
pusha
jecxz
cmp
sub
jmp
dec
mov
out
add
cmp
lahf
jbe
fcmovb
xchg
sbb
pop
and
dec
int3
hlt
mov
adc
and
scas
xor
jmp
pop
rolb
pop
push
or
mov
jnp
cmpsl
dec
mov
adc
xchg
push
jecxz
ja
mov
push
lahf
mov
sbb
enter
mov
pop
xor
jmp
movsl
pop
das
add
loope
pop
jnp
mov
lahf
adc
mov
xor
cmovb
push
loope
pop
int3
push
push
or
mov
lahf
jmp
pop
inc
testb
out
jne
inc
jmp
add
sub
jne
xchg
popl
imul
popa
and
jbe
add
cmp
cmp
push
iret
pop
test
cmpsb
mov
xor
add
add
cli
shrl
in
and
outsl
pop
cmp
dec
push
test
mov
pusha
mov
xchg
repz
or
add
lds
mov
cs
aad
xchg
mov
jle
adc
pusha
mov
repnz
ret
pusha
and
or
mov
incb
mov
add
jmp
jnp
inc
adc
sub
daa
insb
sbb
xor
push
add
add
ds
and
pop
pusha
popf
jbe
jae
sbb
adc
mov
jb
xchg
bound
lahf
inc
cmp
pop
adc
fcomi
push
rolb
ds
jns
adc
mov
inc
xchg
inc
xchg
andl
rcll
push
ss
scas
push
push
mov
mov
std
add
popa
les
xchg
inc
sbb
aaa
pop
sti
dec
pop
mov
add
mov
scas
adc
mov
push
andb
or
sub
inc
push
adc
mov
popa
pop
pop
mov
in
aas
mov
lods
pop
add
nop
mov
aas
jmp
ljmp
pusha
test
lcall
fdivl
add
mov
imul
jp
mov
dec
not
inc
fiadds
sbb
stos
push
xor
or
dec
add
xchg
sarb
push
inc
sbb
pop
mov
div
pop
cmpsb
lret
pop
jecxz,pt
adc
fs
jle
xchg
mov
xchg
add
sarb
jns
jbe
rclb
shl
shlb
shlb
lahf
pop
push
loop
push
cwtl
push
dec
adc
adc
dec
sub
mov
nop
mov
sub
jb
push
inc
mov
add
imul
insb
and
jmp
pop
mov
bound
mov
out
push
das
cmp
cwtl
or
adc
or
or
and
cmpsl
dec
shrb
gs
pushf
adc
das
pop
loopne
sub
mov
call
jle
mov
sub
push
mov
data16
out
inc
sub
inc
dec
inc
pop
and
push
adc
cmc
add
xor
mov
cwtl
cmp
ret
adc
cmc
popa
add
aad
sti
daa
das
mov
das
mov
xor
pusha
mov
jmp
sbb
sbb
or
mov
pop
lret
inc
xchg
repnz
mov
shlb
stos
or
js
shll
xchg
and
loopne
push
int
cmc
add
inc
and
jo
or
pop
and
add
mov
jno
pop
dec
adc
mov
adc
push
incb
add
hlt
pop
jmp
cmpsl
mov
test
inc
pop
cltd
jne
jle
es
pop
mov
aaa
mov
mov
xchg
mov
pop
mov
and
pop
xchg
jg
hlt
es
mov
cmp
rolb
sahf
imul
sti
jnp
push
stc
je
movsb
inc
add
push
mov
push
jg
push
mov
ss
push
arpl
scas
fstpl
mov
or
add
out
cli
adc
loopne
pop
mov
mov
orb
dec
enter
pop
push
mov
xchg
sub
xchg
movsb
cmp
jp
pop
pop
mov
fs
sbb
je
or
pop
sbbb
xchg
inc
movsb
imul
outsb
jmp
test
push
nop
add
and
ret
jl
push
std
inc
ljmp
popf
jae
ss
cli
int
outsb
shlb
xchg
adcl
adc
mov
je
cmpl
sbb
rcpps
arpl
jbe
pop
jb
imul
mov
and
cmp
out
addr16
xchg
xchg
pop
xor
fs
jecxz
mov
mov
pop
fstpl
adc
jmp
pop
mov
rcl
xlat
clc
daa
mov
sub
js
cltd
cmp
push
pop
jns
and
out
sub
inc
sbb
cmp
jge
out
push
call
stc
pusha
add
adc
sbb
inc
pop
out
mull
aam
pusha
xor
sbb
imul
add
jge
jmp
dec
addb
aam
pop
push
inc
sbb
loop
rolb
inc
stc
mov
ds
pushl
cs
idivl
and
mov
mov
call
jmp
scas
int3
lds
and
dec
ret
and
jmp
pop
jge
pop
popa
rclb
jl
add
sub
add
out
stc
xchg
cmpsb
scas
cmp
xchg
mov
push
xor
lret
mov
jo
cmpb
xlat
add
fisubl
ds
or
stos
jl
xor
shll
jle
pusha
adc
ret
xchg
add
sub
call
or
aas
fcoml
xor
mov
dec
or
pop
jg
std
scas
in
sahf
cmpl
test
pop
push
ret
fucomp
dec
cltd
jne
mov
js
movsl
bound
mov
sub
into
cmpsb
and
dec
ret
scas
pop
pop
fadds
push
repnz
push
shll
out
mov
cmova
adc
cmpsb
imul
cmp
push
pop
sub
dec
into
sub
ret
popf
test
push
pop
xchg
adc
add
adc
or
and
ljmp
imul
sub
sbb
loope
xchg
sbb
push
sbb
popf
movsl
loop
inc
jl
out
pusha
fidivl
dec
mov
daa
add
pop
sbb
push
aas
adc
push
add
jnp
dec
cmp
xchg
dec
test
js
pop
out
push
movsb
outsl
add
mov
or
xchg
stc
outsb
or
inc
add
jmp
dec
pminsw
pusha
dec
pop
cmp
neg
call
shll
out
addb
sub
or
push
add
test
sub
sti
cltd
mov
fsubs
mov
and
or
adc
add
imul
sbb
sbb
push
jns
fnstcw
xor
pusha
es
daa
fadds
inc
and
out
pop
std
out
pop
xchg
call
push
divb
jo
stc
sub
mov
adcl
iret
lret
lds
push
push
mov
push
jle
pop
dec
clc
cwtl
lea
mov
sahf
into
lahf
roll
aaa
xchg
daa
jge
push
lahf
popf
sbb
push
pop
subb
cmp
pop
jmp
adc
adc
outsl
loop
sbbb
shrb
pop
pop
dec
cs
lea
add
jmp
out
sub
pop
lahf
aam
inc
mov
repz
mov
shr
inc
push
std
scas
xor
loop
sahf
pop
adc
cltd
cmp
inc
fcoml
pop
clc
jne
pop
lods
push
sbb
sub
jnp
inc
out
fs
push
daa
iret
adc
push
je
jbe
cmp
pop
mov
jmp
push
pop
push
push
jns
push
cltd
pop
ffreep
or
cmp
scas
in
and
int
pop
xor
mov
clc
enter
subb
pusha
and
test
xchg
add
sub
mov
and
adc
ret
or
ror
xlat
or
mov
pop
mov
sbb
adc
push
or
je
xor
jg
daa
adc
pop
jb
imul
pop
inc
adc
popf
sub
stos
adc
out
xor
je
mov
dec
sub
leave
add
das
cmpsl
pop
or
sbb
pop
out
pop
orb
mov
sub
sbbb
push
mov
outsb
xchg
xor
in
mov
and
rclb
insb
push
dec
dec
push
mov
push
cld
push
inc
cmc
jle
push
push
ret
push
xor
sub
movsl
sbb
loop
dec
mov
mov
or
rcl
inc
lahf
xchg
pop
add
lds
or
mov
cs
imul
sbb
push
and
mov
cwtl
test
inc
loop
xchg
clc
outsb
xor
jecxz
mov
push
outsl
or
leave
ret
pop
mov
lret
dec
adc
std
inc
sbb
pop
scas
rcr
inc
mov
pop
mov
bound
pop
out
sbb
lock
in
ret
xor
mov
or
sahf
fsubr
sbb
mov
mov
add
movsb
insl
cwtl
mov
dec
push
or
dec
xchg
adc
add
xor
cmpb
or
cmp
sbb
adc
xor
add
mov
aas
lcall
rcrl
idivl
mov
pop
scas
popa
jbe
add
sub
or
inc
sbb
shrl
dec
jle
int3
test
pop
stc
jmp
xor
dec
inc
or
or
ja
add
jns
pop
inc
clc
mov
sub
xor
xchg
out
cmp
cmp
pop
push
lods
sub
hlt
addb
pop
mov
mov
sub
xchg
int3
lahf
xor
cmp
adc
jmp
mov
lahf
test
frstor
pop
sbb
xchg
push
add
push
jmp
push
pop
inc
int
xchg
and
mov
in
sub
adc
sti
cmpb
bound
mov
nop
lods
test
rcrl
dec
cmp
add
mov
movsl
mov
and
add
xor
mov
testl
popa
je
pop
xor
sub
and
addb
ret
sbb
inc
xor
dec
popf
sub
popa
jg
call
in
mov
xor
call
enter
test
adc
xchg
push
sbb
cmpsl
icebp
shrb
int
pop
call
mov
sbb
pop
lods
fidivrs
pop
lcall
or
jp
mov
not
sbbb
sub
jmp
sahf
push
mov
lea
adc
add
outsb
push
add
out
pop
push
lock
test
cwtl
jl
pop
gs
fldenv
enter
scas
sub
pop
inc
push
mov
jp
mov
adc
pop
jno
imul
jl
or
cli
in
xor
sbb
ss
lahf
inc
enter
pop
loop
nop
loop
push
shll
imul
in
out
jmp
dec
je
gs
mov
in
in
stos
test
adc
das
sbb
fs
adc
cmp
adc
jmp
mov
loop
push
in
add
test
jge
xchg
and
fstpl
xchg
cli
loope
mov
jmp
jmp
dec
pop
push
imul
mov
adc
mov
jae
sarl
xor
mov
push
js
pop
push
fimuls
jg
pop
pop
mov
inc
adc
mov
pop
xchg
adcb
pop
pop
addb
push
pop
push
das
stos
sub
jmp
stos
jge
xor
sub
mulb
add
xchg
insl
sti
aad
addl
cmp
sub
lock
js
cmpb
mov
fimuls
mov
es
jmp
dec
pop
in
mov
push
sub
pop
sub
push
pop
mov
push
mov
pop
add
xchg
cmp
mov
jo
pop
jmp
push
out
andb
pop
scas
shlb
fsubs
pop
and
stc
rclb
add
xchg
sub
add
insw
dec
jecxz
icebp
sub
mov
sbb
mov
stos
cmpsl
outsb
dec
and
test
cmpsl
pushf
movsl
fadd
and
pop
je
std
test
push
lock
sbb
fstpl
or
ret
pop
addl
inc
lcall
pop
subb
xchg
stos
addb
pop
inc
or
add
rorl
mov
not
mov
cs
push
push
push
push
adc
push
jmp
adc
pop
adc
insl
or
ja
pop
dec
in
sub
inc
andb
xor
sub
out
aas
push
fidivs
xchg
cmpsl
adc
mov
jp
ja
cld
repnz
add
or
clc
mov
pop
icebp
lcall
mov
add
dec
pusha
std
jge
int3
repz
lahf
mov
xor
cmp
loope
bound
jne
pushf
out
dec
cwtl
sar
repnz
insb
push
sbb
stos
push
xchg
sti
sub
dec
into
dec
mov
sbb
or
ret
and
or
mov
aas
sbb
and
ljmp
sbb
popf
xchg
popf
sbb
jmp
out
add
cli
enter
pop
sti
sbbl
or
int
leave
and
daa
xchg
ja
pop
push
cli
push
pop
sub
loope
icebp
and
out
pop
jge
pop
dec
mov
es
sbb
push
mov
aad
nop
outsl
sub
insl
cmp
pushf
imul
adc
pusha
nop
and
dec
xchg
jno
ljmp
mov
aad
rolb
pop
ja
scas
je
loop
cmpb
dec
out
jg
xchg
sbb
and
sub
jmp
xor
or
scas
mov
jae
or
mov
inc
dec
pop
gs
repz
push
adc
xchg
icebp
repnz
aad
mov
jb
outsl
mov
gs
or
fisttpll
xor
ficoml
cmp
popa
jle
fdivrs
push
outsl
add
mov
jmp
pop
sub
add
mov
les
insb
or
mov
sub
xor
dec
pop
pusha
dec
ret
push
mov
and
lods
jl
cmpsb
sub
jnp
add
xor
mov
mov
pop
xor
jne
mov
xchg
imul
cld
ret
cmp
outsl
decl
sub
or
daa
jns
push
in
xor
cld
imul
je
mov
dec
ds
lea
cmp
ficoml
dec
iret
dec
pop
jmp
out
shrl
leave
inc
inc
lret
dec
dec
scas
pop
dec
mov
imul
add
pop
stos
pop
mov
or
bound
or
arpl
arpl
cli
jno
lret
xor
sub
or
or
or
and
push
mov
mov
sub
jmp
test
cmp
sbb
cmp
adcb
dec
inc
push
add
sub
jmp
test
neg
div
push
xchg
mov
pop
pop
scas
adc
jne
into
and
mov
jno
inc
in
or
repnz
or
pop
xchg
fwait
or
adc
pop
std
scas
sub
pop
xorl
ljmp
inc
mov
add
jmp
dec
jno
sbb
inc
in
or
aas
inc
testl
stos
jb
icebp
pop
shr
cmp
dec
xor
test
pop
in
aam
cs
xor
jno
shl
cmp
loopne
in
popa
add
mov
pop
inc
jle
scas
stos
and
incl
das
add
ja
jo
ficoms
lret
or
in
orb
jecxz
mov
xchg
push
icebp
xchg
jo
mov
sub
ljmp
shll
pop
pop
popf
fdiv
imul
cmp
pop
adc
sub
mov
ret
pop
std
shll
or
adc
jle
clc
jmp
push
xor
sub
add
cs
push
ds
xor
inc
pop
sub
outsl
jle
sti
dec
subb
rol
xchg
xor
sub
pop
in
das
inc
xchg
fiadds
xor
std
mov
jl
mov
xor
loope
outsb
cmpsb
rcll
in
mov
divb
push
sbb
fmulp
lret
shl
inc
jecxz
ljmp
lods
js
inc
scas
add
pop
sub
mov
xor
adc
mov
lcall
ja
jge
cmc
xchg
add
movsb
pop
out
push
add
push
mov
repz
std
add
adc
sbb
push
or
pop
ficomps
std
xchg
sti
mov
dec
mov
ret
sahf
ss
fiaddl
dec
ret
idivb
mov
and
addr16
into
mov
jmp
mov
dec
push
daa
adc
jno
jmp
push
out
fldenv
push
mov
not
repnz
xchg
test
sub
pop
in
inc
sti
inc
inc
mov
sbb
pop
pop
mov
decl
cmp
jg
xchg
and
mov
adc
mov
dec
cld
movsl
sub
mov
mov
mov
xchg
sti
test
xchg
ficoms
dec
aad
and
pop
andb
sub
adc
insl
mov
mov
dec
jle
sub
arpl
add
mov
inc
or
aas
push
int3
cli
insl
ret
cmp
fsubl
dec
xchg
inc
fwait
std
mov
adc
push
lock
pop
inc
inc
add
jle
jmp
pushf
sarb
mov
adc
sub
rol
inc
sbb
push
or
out
add
fldl
xchg
orb
ret
dec
inc
mov
xchg
stos
movsb
mov
and
stos
push
add
addr16
test
pop
mov
add
pop
dec
notl
xor
ss
mov
add
inc
add
pop
push
push
push
subl
sub
addr16
inc
or
addb
out
roll
ss
dec
aam
es
repz
filds
addb
inc
shr
add
cmc
std
inc
testl
popa
lahf
cmp
stos
push
xor
sub
imul
sub
cmp
neg
ljmp
lock
cld
pop
dec
xor
jmp
stos
sbb
daa
not
push
mov
fistl
fbstp
sbb
cmp
sub
dec
lock
lret
inc
dec
jae
out
push
mov
out
push
add
std
lret
in
mov
jl
jmp
loopne
xor
pop
ret
daa
cmp
ss
xchg
stc
xor
push
mov
adc
out
and
ja
xchg
cmp
les
mov
pop
int3
or
lret
xor
stc
icebp
cmp
xor
call
mov
add
push
sbb
lock
jp
xchg
push
push
leave
stc
lret
dec
add
adc
add
es
mov
sbb
pop
inc
jmp
lds
dec
xchg
outsb
cmp
mov
shl
addl
dec
cmp
jns
jmp
sbb
out
push
or
mov
dec
cwtl
push
shll
xor
data16
sbb
and
out
mov
mull
push
mov
cmp
dec
jne
add
mov
cli
insb
mov
ja
sub
mov
je
sbb
mov
call
push
add
and
jnp
push
ret
pushf
repz
jne
and
xor
jb
das
call
mov
sti
lcall
adc
pop
inc
push
int3
ret
test
test
or
cwtl
or
pushl
into
imulb
mov
add
or
sti
xchg
inc
inc
mov
jb
push
je
scas
add
jmp
inc
or
adc
mov
cmc
dec
loopne
mov
incl
mov
clc
xorl
and
enter
and
add
lock
into
testb
add
aad
jl
xor
sub
xchg
inc
inc
cmp
mov
lahf
push
or
cmp
mov
cltd
roll
jmp
pusha
ss
cmp
pusha
pop
jmp
popf
test
or
cltd
enter
jmp
inc
dec
xor
sbb
xchg
jl
pop
mov
lcall
inc
jecxz
cltd
insb
sbbb
push
add
mov
add
sub
mov
out
push
and
add
adc
push
inc
sub
jb
pop
mov
jnp
lcall
sub
add
push
or
mov
pusha
mov
xchg
jo
mov
mov
sbb
push
dec
xor
das
push
dec
cld
push
sbb
xchg
das
lea
push
push
add
sti
lret
inc
aam
jle
aaa
es
add
insl
xchg
aam
and
rorb
pop
cltd
aaa
jnp
adc
aad
cmpsb
inc
inc
xor
xchg
cmp
aam
push
mov
or
sbbl
mov
xor
movsl
aas
movsb
movsb
test
mov
pop
scas
jae
cmp
pop
or
fidivrs
int3
inc
pop
and
or
je
hlt
and
cmp
add
neg
inc
out
sub
repz
push
inc
inc
and
add
push
xor
inc
movsb
dec
repnz
loopne
call
add
out
dec
leave
pop
bnd
outsl
ret
out
xchg
shl
push
leave
jg
popa
jns
push
and
adc
pop
neg
inc
movl
mov
out
sub
dec
popa
adc
je
sub
pop
xlat
data16
sti
push
jae
test
aaa
jmp
mov
or
and
scas
add
ds
icebp
push
pop
jbe
push
push
cmpsl
popf
in
add
subb
pop
add
dec
les
mov
jmp
and
shrl
and
leave
push
loop
test
jl
mov
mov
push
push
push
adc
add
cmp
xchg
add
repnz
dec
adc
iret
push
pop
jmp
dec
add
cmp
rolb
ficoml
int3
mov
mov
pop
dec
mov
jo
jmp
sub
sub
push
orl
rcll
mov
pusha
and
inc
sub
cmp
cmc
adc
es
inc
sahf
dec
leave
xchg
dec
or
iret
rolb
les
repz
cmp
sti
insl
push
lock
jae
dec
sub
gs
mov
call
push
dec
and
xchg
push
mov
jns
sub
pop
mov
or
inc
cld
add
mov
cld
adc
jo
cld
pop
push
adc
mov
or
inc
and
jmp
mov
sbb
mov
pop
mov
das
icebp
mov
or
inc
xchg
jle
fstpl
mov
jmp
push
jo
rcrb
and
adc
pop
call
jg
pop
xlat
popa
and
data16
xlat
stc
sub
push
and
daa
cmp
push
shr
cmp
ficomps
push
or
movsl
les
dec
call
dec
insb
scas
out
or
movsl
push
adc
sarb
or
lods
pop
mov
loopne
inc
lcall
push
jmp
xorl
adc
and
pop
test
and
movsb
add
pusha
jmp
scas
mov
mov
push
xor
jo
pop
push
nop
adc
scas
fld
push
outsl
dec
mov
adc
mov
or
addl
jb
into
add
jmp
add
fists
pop
fs
and
addr16
jae
mov
add
pop
fisttpll
inc
xor
or
xor
andb
loopne
hlt
push
inc
bound
sub
jo
ds
or
and
fdivl
push
pop
jmp
insl
cmpl
fiadds
das
jmp
std
add
inc
dec
adc
push
jns
sbb
stc
jne
add
pusha
sub
jmp
dec
not
popf
jns
add
outsl
gs
add
andb
jle
add
lret
push
lret
in
rcll
cmpsl
adc
mov
add
jge
xor
mov
add
and
jne
loope
pop
cltd
js
jg
xor
add
jne
pop
and
aaa
lock
inc
scas
loop
jg
and
push
mov
jmp
add
sbb
ljmp
xor
xorl
mov
adc
xor
xor
or
leave
push
rcll
jmp
add
sub
clc
jnp
ret
sbb
xor
mov
aad
dec
mov
call
lcall
add
pop
push
pop
xor
mov
jmp
pop
and
jae
adc
decl
adc
shrl
push
mov
std
jmp
dec
add
inc
jmp
jmp
lcall
rol
inc
stos
hlt
and
jecxz
cwtl
js
pop
in
xlat
sub
sbb
mov
sub
add
push
mov
xor
jecxz
test
sub
cmp
adc
xchg
push
sahf
and
lahf
pop
push
rcl
add
push
xorb
sub
pop
popf
mov
mov
or
xchg
js
lahf
dec
std
mov
nop
mov
ficomps
lret
jmp
add
ss
jmp
flds
sbb
cs
pop
push
and
jbe
pop
xor
xchg
ret
xchg
rcrl
adc
sub
shrb
insl
push
push
push
pop
and
orl
cwtl
pushl
sarb
sub
hlt
mov
sub
mov
push
lret
mov
notb
jmp
int
jnp
or
pop
mov
popa
adc
test
ficompl
add
dec
add
cmpl
pusha
dec
inc
pop
push
icebp
sub
sbb
insl
fstpl
push
mov
dec
imul
push
xchg
ret
sti
in
call
test
jbe
or
jno
std
popl
aaa
sub
loope
pop
js
xchg
loopne
dec
and
add
mov
aas
pop
push
out
ljmp
sbb
insb
sub
cmp
sub
mov
imulb
sti
and
inc
ret
stos
ret
ds
xchg
pop
pop
aas
loop
pop
data16
out
das
fdivrl
mov
adc
daa
fwait
sub
pop
cmp
or
into
sub
or
ja
inc
jmp
mov
or
ljmp
push
mov
dec
cmpsb
sub
movsl
push
movb
mov
aas
int3
mov
pop
cmp
sbb
es
cmp
push
inc
addr16
mov
xchg
or
push
lea
xor
cmp
and
jne
push
lahf
and
jmp
and
int3
incb
add
jl
adc
int
adc
rorb
daa
xor
adc
in
and
mov
pop
sub
popa
addr16
and
adc
xor
inc
scas
mov
mov
iret
sub
stos
or
inc
insl
test
jecxz
push
dec
repnz
mov
mov
jle
outsl
inc
mov
xor
divb
xor
push
pop
sbb
mov
loopne
enter
xor
or
push
inc
pop
dec
call
daa
or
add
adc
xchg
or
cltd
jne
sub
cli
adcl
xchg
dec
out
dec
dec
ljmp
push
ljmp
in
mov
adc
ds
js
lock
add
push
mov
pop
leave
pop
sbb
jl
inc
lcall
pop
xor
inc
inc
jo
in
insl
push
call
out
sti
lcall
or
pushf
daa
push
cmp
dec
jle
dec
lret
dec
stos
callw
jmp
push
shll
sub
enter
add
pop
or
in
bound
push
pop
mov
add
inc
push
sub
push
mov
adc
das
hlt
or
mov
bound
jmp
jge
xorb
jmp
push
mov
rcrl
cmp
jge
jle
das
sti
je
push
xchg
in
jmp
push
push
nop
sar
test
pop
mov
xchg
roll
scas
add
loope
add
popa
adc
out
pop
mov
mov
popa
ja
jmp
sub
mov
inc
add
fidivrl
mov
and
int3
sub
inc
push
cmp
adc
aas
and
lea
aam
sub
dec
or
xor
pop
adc
inc
jo
outsl
add
add
ja
in
dec
adc
lock
xchg
dec
arpl
jo
aam
cmpb
push
jmp
loope
push
and
and
pop
icebp
stos
pop
pop
pop
mov
push
aad
jae
in
faddl
mov
lock
pop
lret
mov
adc
loopne
xor
add
jmp
scas
jae
mov
ds
rcrb
push
or
neg
push
push
ja
push
jb
loope
mov
sbb
jnp
lea
jmp
pop
stos
mov
pop
cmp
cmp
cmp
mov
scas
lods
or
lds
fs
out
xchg
lods
adc
mov
sbb
mov
sbb
mov
inc
xchg
mov
and
sub
xor
cmp
lock
cmp
sbb
inc
repz
pop
mov
xchg
out
sub
pop
ja
add
mov
iret
or
push
les
xlat
lds
pop
or
and
xor
adc
dec
dec
jmp
in
das
test
add
sub
ds
dec
sub
mov
mov
xor
xchg
adc
into
jo
icebp
mov
or
push
push
cmpsl
xor
pop
das
test
mov
pop
push
push
sbbl
les
and
andl
aaa
adc
sub
std
pop
pop
jmp
kmovw
push
mov
shl
xor
inc
lea
jmp
cmp
pop
pop
push
daa
mov
inc
out
jl
lds
cmp
outsl
mov
js
orb
rolb
push
in
lret
subb
dec
leave
add
mov
push
stos
pushf
ja
cmp
sbb
adc
xchg
and
jne
fs
jnp
loopne
jae
cmp
mov
ljmp
repnz
dec
adc
jns
add
in
lahf
fists
mov
push
in
push
or
in
xchg
cmp
divps
mov
mov
orl
rorl
sti
xchg
jp
add
sbb
dec
pop
nop
inc
nop
faddl
insl
jmp
scas
sbb
sbbl
pop
xchg
cwtl
mov
push
push
mov
shr
xor
nop
inc
inc
inc
loopne
int
xor
and
adc
loope
outsb
lret
das
adc
and
lahf
dec
scas
cmp
xor
or
std
jl
jmp
out
adc
pop
not
sub
cmc
jecxz
adc
cs
sahf
pop
or
filds
push
imul
jo
loope
cli
cmp
adc
push
mov
hlt
xlat
cmp
inc
mov
pop
push
jb
das
ret
jle
gs
mov
add
inc
cmp
ss
inc
or
loopne
jmp
mov
xchg
test
addl
mov
xchg
lock
lahf
cli
mov
call
mov
mov
dec
loopne
push
movb
enter
mov
jmp
mov
inc
add
pop
xor
test
lret
mov
fwait
dec
ret
mov
outsb
repz
push
jecxz
cwtl
jle
mov
in
test
hlt
das
mulps
das
push
and
aaa
movsl
mov
mov
daa
cli
fs
mov
pop
aas
mov
popw
std
psubb
add
jmp
dec
fnsave
repz
adc
inc
add
adc
jmp
pop
mov
fcomps
std
ss
jns
das
fnstenv
dec
jne
or
mov
je
je
xor
sub
or
pop
dec
add
jbe
dec
dec
jmp
jmp
sub
fiaddl
adcl
inc
out
dec
xor
rorl
mov
sub
imul
loope
leave
add
or
xchg
pop
jle
mov
stc
sti
mov
lret
shrb
sbb
cli
test
ljmp
pushf
icebp
mov
pusha
sbb
sub
add
push
mov
cltd
adc
mov
test
aaa
cmp
and
xor
add
mov
jae
cmp
ficoml
jo
mov
in
rcrb
and
pop
dec
popa
push
inc
pop
mov
xchg
fildll
mov
xchg
mov
mov
jge
add
mov
hlt
cs
icebp
nop
lock
mov
mov
das
xor
push
xchg
push
push
push
mov
add
adc
out
das
rcl
outsb
dec
cmp
mov
fs
add
jmp
popf
stos
stos
fadds
pop
movsl
sbb
fdivp
xor
pop
aas
icebp
dec
dec
push
xor
or
adc
pushf
and
aas
gs
pop
add
cmp
leave
stos
dec
mov
in
xor
dec
sub
add
jnp
icebp
jb
sahf
and
sub
add
aad
es
xchg
inc
or
inc
push
dec
or
add
jno
mov
in
xor
addr16
cmp
and
les
mov
sub
push
fcmovb
ljmp
inc
sbbb
movsl
or
faddl
push
cmp
push
ds
pop
add
stc
push
popa
xor
jnp
pop
test
fisttpll
cld
cli
adc
pop
movsb
sbb
mov
xlat
jae
mov
dec
dec
xor
dec
adc
add
cmpsl
es
sub
cmp
shrl
pop
or
subb
popa
nop
cltd
sub
or
inc
cs
mov
dec
or
sti
aaa
jmp
shll
ds
push
push
push
mov
sbb
out
cld
xlat
jmp
rcr
pushf
rclb
pop
inc
and
sbb
mov
xlat
dec
pop
in
mov
test
and
and
pusha
neg
push
dec
dec
jp
loope
mov
dec
lds
pop
sbb
fld
push
mov
das
jp
cmp
push
or
cli
mov
pop
dec
pop
cld
into
movsl
adc
or
sub
push
mov
xor
rcl
mov
arpl
fcmovnu
sub
ficoml
test
int
xor
mov
mov
and
nop
leave
imul
jb
sub
add
xlat
xlat
mov
out
divb
repz
jl
out
jae
cltd
push
jne
pop
dec
push
jl
int
jo
add
dec
pop
push
fimuls
or
xlat
pop
sti
pop
add
into
loope
mov
lahf
jns
int3
fisttps
cmc
leave
sub
pop
xchg
sub
jg
jno
fldcw
pop
push
aad
out
and
mov
pusha
mov
or
push
adc
sub
aam
insl
adc
add
jmp
pop
xchg
cmpsb
pusha
jne
or
push
push
xchg
shll
cmpsb
es
int3
dec
call
movsb
xor
xorb
jnp
mov
cmp
mov
cld
sub
xchg
fwait
mov
ret
lods
fs
movsb
xchg
push
cwtl
outsl
jp
insb
dec
or
notb
bound
das
pop
push
dec
dec
and
mov
jl
rorb
pop
xor
push
xchg
lcall
mov
aam
scas
into
clc
imul
pop
pop
sahf
mov
push
es
or
aam
mov
sub
adc
out
loope
sbb
pop
nop
ret
xlat
dec
jecxz
dec
cltd
fwait
sub
lock
sbb
je
mov
jb
aam
inc
jl
es
aas
dec
or
sbb
in
inc
das
and
mov
push
mov
push
fdivl
jmp
nop
push
cmpsb
lods
in
push
or
xchg
incb
in
xchg
jle
jmp
xchg
scas
and
push
hlt
jbe
adc
and
adcl
jbe
pop
popa
loopne
xchg
jge
insl
jp
sub
sbb
cli
cmp
adc
inc
mov
lret
mov
ss
or
or
or
mov
bound
enter
leave
mov
pop
inc
dec
ja
and
les
dec
adc
add
ja
data16
or
out
rcrl
add
jo
repz
daa
pop
push
bound
mov
xor
stc
pop
imul
pop
out
push
add
mov
adc
test
fmuls
xchg
mov
insb
loop
ds
and
daa
sbb
out
mov
popf
or
or
jmp
push
sub
and
mov
xor
lock
js
das
and
cmpsb
dec
arpl
repnz
pop
repz
cmp
std
mov
or
ja
xor
pop
lds
sub
or
leave
jae
xchg
pop
adc
xor
filds
je
sbbl
jecxz
pushf
jne
pop
cmp
add
es
data16
ss
enter
inc
jnp
jge
sahf
enter
fdiv
mov
sti
cmp
xor
call
bound
push
out
jle
add
fimull
jp
aas
adc
mov
std
mov
push
cmp
xor
cmc
sub
push
push
xor
stos
movsb
lods
test
inc
push
cltd
or
mov
add
sbb
out
dec
adc
sbb
or
std
rol
jp
inc
dec
ss
sbb
push
pusha
cmp
fcmovbe
adc
adc
lcall
jmp
out
es
mov
inc
dec
xchg
jns
and
push
mov
add
rolb
jno
pusha
fwait
xchg
and
call
pop
cld
outsl
outsl
roll
mov
jg
and
jmp
fs
out
sbb
xchg
insb
fucomp
or
mov
and
inc
pop
mov
push
push
cmpsb
push
cmpsl
scas
sbb
in
mov
adc
fnstcw
sub
jge
push
lret
shll
or
in
lcall
push
pop
pop
sarl
test
and
and
xor
rorl
cmp
pop
rcrb
test
push
xchg
lret
mov
cmp
cld
fistpl
xor
adc
roll
pushl
mov
jno
and
pop
add
mov
push
pop
or
pop
or
inc
pop
dec
xor
sti
pop
mov
mov
sbb
xor
rolb
daa
int
pusha
add
dec
cmp
or
sub
mov
mov
and
pop
xchg
loopne
mov
add
add
fsubrs
push
pop
add
lcall
repnz
psubusb
iret
jnp
dec
mov
and
xchg
loop
mov
dec
mov
imul
adcl
in
inc
jle
repz
int3
fcmovbe
xchg
cli
and
inc
cs
mov
jl
mov
and
inc
mov
add
out
pop
and
pop
dec
nop
pop
dec
sbb
jno
in
dec
movsb
jg
mov
add
mov
pop
das
fstpl
dec
scas
iret
fistl
cwtl
inc
push
sub
or
or
test
mov
sbb
jl
sub
loop
add
add
mov
jge
mov
inc
add
test
insl
xor
push
jp
mov
inc
orl
and
es
in
sbb
or
and
sbb
pop
add
inc
shl
jp
xlat
sub
sahf
dec
mov
pop
mov
ficoml
and
add
subb
loope
dec
mov
pop
not
data16
cmp
jns
push
and
mov
fdiv
jg
xor
dec
cmp
adc
pop
mov
cmpb
pop
push
dec
push
out
push
lods
ljmp
test
push
arpl
jg
pop
inc
push
addl
cs
xor
dec
pop
lret
insl
loope
mov
gs
pop
out
lea
bnd
dec
insl
inc
adc
jmp
sar
inc
out
push
xchg
js
adc
inc
or
add
push
std
test
pop
loope
test
push
sbb
rorb
inc
cs
pop
cwtl
inc
movsb
push
fsqrt
loop
shll
das
push
pop
cmp
lret
test
rcrl
sbb
scas
push
push
stc
ret
mov
jp
dec
rcr
mov
pop
mov
add
js
add
adcl
fdivs
push
jl
movswl
pop
push
mov
lock
lock
push
faddp
mov
lret
dec
shl
xchg
rclb
sbb
out
or
enter
test
ds
cmp
in
mov
popf
push
inc
cld
push
inc
xor
push
loopne
mov
fsubs
xlat
and
cmpsb
pop
mov
mov
ja
push
adc
adc
inc
mov
or
outsb
int
ds
or
pop
xor
pop
fsubr
lret
add
lret
sar
jecxz
xor
push
push
es
outsl
in
aaa
pop
lods
xchg
cmpsl
sbb
cwtl
or
inc
push
xor
popf
xchg
sub
ja
add
cs
cmp
cmp
ljmp
mov
and
mov
inc
jbe
adcb
aam
mov
and
jns
dec
push
xor
mov
mov
test
scas
cmp
sbb
mov
test
pop
std
pop
mov
or
add
pushf
xchg
push
scas
lds
adc
les
rcrl
icebp
in
pop
aad
insl
and
inc
jecxz
cmc
test
cmpsl
loop
aad
add
push
pop
jb
or
out
cmp
dec
sub
pop
sbb
pop
mov
cmp
or
cmp
jo
add
mov
shl
fwait
pop
cwtl
insb
pop
in
mov
cmp
pop
dec
mov
lea
jo
fs
push
or
jno
jl
lret
cmc
adc
pop
jmp
push
and
mov
shl
enter
dec
inc
mov
adc
dec
pop
das
push
aam
imul
cmp
data16
hlt
popf
rol
lret
fstps
mov
scas
and
or
lods
inc
ret
push
push
insb
pop
cltd
ret
subl
xor
fists
cmp
jle
jl
and
pop
cmpsl
dec
inc
mov
je
dec
or
pop
mov
add
femms
mov
out
xor
sbb
rcrb
pop
bound
and
adc
shr
orl
sub
jl
pop
cmp
jno
dec
and
xchg
jno
push
jmp
nop
inc
or
push
shl
sbbb
jmp
mov
shl
xor
call
dec
les
add
jmp
idivl
xor
add
out
or
pop
aad
pop
cli
aam
inc
and
push
aas
pop
pop
push
out
movb
jge
push
repz
and
add
rorl
ljmp
sahf
mov
fwait
stos
gs
popl
mov
or
or
and
dec
cmp
mov
pop
inc
lret
pop
push
fistl
and
pop
jmp
mov
cld
xchg
mull
pop
or
push
sbb
jp
mov
inc
push
pop
or
fwait
sbb
inc
popa
lds
ret
icebp
jg
sahf
jle
test
or
pop
frstor
push
les
cmpsl
sbb
xchg
adc
ret
xor
icebp
adc
loop
iret
and
repz
xor
ljmp
dec
stos
icebp
cmovb
xchg
mov
jbe
sub
push
rorl
stos
xor
cmpsl
pop
dec
jp
jg
dec
xor
imul
jl
jno
loope
cs
pusha
and
jl
pop
push
jecxz
pop
adc
pop
jbe
mov
jo
pop
xchg
cltd
inc
xchg
xchg
arpl
sub
jmp
into
rol
scas
push
mov
outsl
jbe
out
cld
pop
cld
loope
das
ljmp
adc
pop
xchg
les
mov
shll
icebp
xchg
movsb
add
xor
add
and
sub
stc
andl
mov
adc
sti
and
inc
in
jne
sbb
mov
or
inc
fsts
jecxz
test
jmp
fldcw
nop
cwtl
sub
lods
inc
test
mov
mov
mov
adc
add
data16
stc
icebp
mov
adc
mov
dec
pop
jl
roll
imul
imul
xchg
mov
cmp
insl
pop
dec
outsl
cmc
jle
xlat
inc
adc
imul
push
push
push
push
push
or
and
out
add
mov
pop
xor
cmp
shrl
arpl
sbb
cmc
cmp
add
dec
inc
add
xor
xchg
in
add
jecxz
xor
loopne
ret
and
fldl
lahf
ss
and
loopne
int3
add
jmp
stos
adc
es
nop
push
aas
push
push
push
sub
mov
xchg
or
jmp
xor
mov
sbb
push
popf
add
adc
dec
mov
dec
push
xor
loop
mov
jg
sahf
arpl
out
jmp
sub
inc
xor
push
pop
sbb
and
mov
jns
scas
popa
daa
lret
in
sub
cmpsb
mov
mov
hlt
jmp
popf
sub
or
mov
adc
cmp
dec
add
lcall
cmp
mov
scas
jl
add
inc
jmp
cmp
add
sub
das
outsb
pop
mov
sub
lcall
daa
shl
push
fldenv
add
xorb
xchg
dec
daa
ds
iret
adc
clc
push
add
mov
shll
out
fwait
data16
es
idivl
mov
push
xor
xchg
pusha
cmp
stos
mov
push
cwtl
or
insb
out
ret
movsl
int3
dec
data16
jne
sahf
test
cmp
imulb
in
cmp
mov
ret
jmp
pop
fistps
rcrb
xorb
fistpll
inc
xchg
pop
aam
adc
not
push
or
xchg
and
mov
inc
mov
adc
popf
pslld
pop
pop
jnp
aas
adc
pop
sub
incl
bound
mov
xchg
mov
cs
sub
std
jo
and
inc
ret
jl
pop
mov
and
pop
lret
push
jmp
fsubs
push
lods
fs
nop
or
inc
dec
adc
popl
push
mov
lahf
pop
adc
or
pusha
mov
or
adc
or
test
shl
pushf
jne
imul
and
cmp
mov
push
or
or
repnz
sub
add
sbb
pusha
xchg
push
sub
mov
push
rorl
out
das
or
clc
mov
mov
dec
or
fisubl
add
popf
rcl
stos
lds
les
push
jmp
nop
jne
cltd
cmp
out
adcb
fsubrp
and
pop
sbb
xor
sub
and
mov
push
not
mov
sbb
ljmp
outsb
add
push
cmp
out
or
add
jno
mov
cmc
adc
jmp
loope
adc
mov
incl
cmp
pop
dec
stos
xchg
adc
push
dec
sub
cli
jp
hlt
loop
jmp
cld
in
stc
dec
loope
push
insl
fwait
cmpsb
lret
dec
stos
andb
push
rorl
std
push
xchg
xor
push
daa
jg
jne
dec
orb
lahf
cld
outsb
push
adc
push
dec
push
mov
ret
xor
pusha
lahf
dec
xchg
xor
xchg
rol
sub
or
loope
pop
ljmp
sbb
adc
cmc
pop
push
xchg
jae
or
mov
cmp
in
hlt
sub
jmp
inc
mov
aad
mov
or
add
data16
mov
sub
sbb
push
jl
or
xor
sbb
or
adc
sti
mov
mov
rolb
or
add
or
inc
sbb
ds
mov
jmp
jbe
fldl
call
push
or
jmp
add
jbe
jp
adc
call
jmp
sub
pusha
xchg
fcmovu
push
stos
inc
cmp
sbb
in
adc
lret
rcll
leave
jb
dec
push
in
pop
mov
jg
and
xlat
insb
adc
push
mov
xor
fs
add
lock
sahf
push
or
sub
push
jge
out
bound
sbbl
pop
inc
jmp
pusha
mov
mov
jbe
pop
pusha
enter
sub
daa
loop
jnp
push
push
push
jle
std
std
inc
adcb
xlat
xor
popa
popf
jns
outsb
nop
push
out
inc
xchg
stos
gs
sti
add
xor
outsb
or
pop
inc
sbb
adc
inc
call
aam
cmp
push
or
stos
add
push
ficoml
mov
insb
lea
addr16
dec
mov
adc
shr
add
data16
insb
jmp
jecxz
adc
inc
fcoml
stos
testl
add
mov
repz
addl
or
mov
mov
loopne
mov
pop
mov
les
subb
scas
pop
jge
mov
dec
xchg
jge
addr16
xchg
push
xlat
sub
push
leave
inc
stos
sub
jg
jmp
inc
imul
jg
lods
outsl
dec
hlt
rorl
int
push
popa
cld
testb
adc
jb
pop
xor
pushf
out
add
imul
lds
mov
adc
rclb
push
or
add
or
cmpsb
push
dec
mov
fnstenv
mov
imul
push
jbe
dec
call
cmp
call
cli
push
jg
add
jle
insl
dec
push
addb
pop
sub
out
jbe
inc
xor
jae
pop
push
fs
das
xchg
pop
add
add
push
xchg
xchg
jo
cs
push
sbb
sub
push
cmpsl
mov
push
add
push
mov
push
dec
lahf
jmp
ja
stos
push
xor
dec
xor
adc
and
std
scas
sbb
mov
scas
xchg
out
lods
aas
notb
jmp
sub
out
jle
mov
jp
sub
jb
push
lea
jns
sbb
pop
sbb
xor
or
sub
mov
in
rcrb
pop
mov
jnp
xor
add
fisttpll
adc
sub
mov
gs
out
push
jmp
dec
data16
gs
push
es
ret
pop
fimuls
bound
or
push
in
pop
insb
in
ja
sub
ljmp
sub
cwtl
scas
and
add
inc
pushf
mov
hlt
and
mov
jne
cltd
jmp
push
shll
test
idivb
les
pop
mov
loopne
dec
pop
and
push
cmp
mov
movsl
mov
fsubs
mov
lods
fisubl
fs
out
pop
dec
scas
push
lret
mov
add
jne,pn
push
adcb
ja
daa
or
rcll
shrl
cmp
js
adc
cmpl
xor
or
out
je
cmp
arpl
mov
movsl
arpl
pop
push
add
mov
pusha
xor
or
pop
je
mov
fldl
adc
push
mov
or
out
add
adc
daa
and
sub
lods
add
subl
add
adc
out
add
ret
ljmp
enter
mov
pop
cmp
dec
adc
bnd
pop
flds
ret
aam
push
popf
dec
pusha
nop
pop
and
pop
push
rcrb
imul
hlt
jecxz
pop
mov
or
xor
cli
xor
add
add
jecxz
add
test
push
cmp
sbb
in
es
push
pop
pop
xor
add
aad
sahf
push
sbb
jl
pop
test
push
add
push
sub
not
nop
jns
pop
mov
cmp
movsl
push
add
dec
push
test
push
pop
sub
fs
adc
xchg
fiaddl
arpl
nop
dec
dec
shl
rcrb
testl
stos
mov
jmp
sti
je
mov
cmp
insl
or
pop
push
pusha
jbe
rcr
movb
xorb
scas
mov
jb
dec
mov
dec
push
inc
dec
sub
jp
dec
push
enter
cmp
xchg
jmp
enter
stos
out
fidivrs
in
js
clc
pop
pop
mov
daa
push
push
mov
js
aaa
ljmp
imul
out
push
sarb
pop
mov
adcl
imul
cmpsl
jl
in
xchg
in
rclb
jae
add
lret
push
in
mov
mov
adc
arpl
jnp
dec
lock
cli
int
pop
movl
jmp
cli
dec
stos
mov
rcr
or
addr16
lods
and
add
shrl
stc
add
stos
lods
pop
pop
dec
sbb
push
xchg
icebp
inc
mov
outsb
jno
add
add
bound
bnd
gs
les
push
sub
rclb
xor
push
outsl
add
incb
mov
dec
xor
fwait
popf
push
xchg
inc
cwtl
push
mov
and
mov
test
mov
je
cmpb
jbe
xchg
rcrb
in
jecxz
fisttpl
push
mov
and
add
je
ficoml
sub
xchg
add
jmp
stos
andl
jmp
loope
push
pop
aad
mov
rolb
ljmp
daa
and
mov
or
push
sub
lock
stos
adc
or
xchg
lods
sbb
jg
imul
xlat
out
in
jae
lret
jmp
cmp
sub
jmp
hlt
inc
cmp
ja
popa
mov
shr
in
stos
cmp
add
or
jmp
fists
int3
mov
inc
out
dec
mov
adc
add
mov
js
sbb
insb
jl
pop
xor
ds
scas
cmc
std
fsub
or
push
addr16
mov
adc
out
jle
push
pop
adc
xor
sarb
jmp
inc
mov
and
lds
shrb
mov
negl
mov
test
dec
add
lret
pop
jle
and
shll
add
addr16
mov
loopne
lock
pop
daa
cli
or
sub
add
jg
jmp
mov
pushf
js
mov
inc
addb
mov
bound
fldpi
sahf
lods
push
jmp
pop
lea
and
jg
neg
ret
hlt
sub
les
int
jle
xor
in
aad
mov
das
clc
cmpsb
sahf
push
dec
jno
leave
aad
sub
adc
pusha
jecxz
fs
xor
cmp
rorl
jmp
rol
xor
add
pop
mov
cmc
stc
push
mov
in
les
shrb
sbbl
inc
pop
push
cmp
popa
mov
notb
shr
cmp
mov
rorl
sbb
nop
clc
xchg
pushw
adc
push
vmwrite
and
push
adc
cld
inc
sub
xor
inc
mov
add
clc
or
in
lahf
imul
dec
js
ret
and
xlat
pop
shr
cmp
xchg
cwtl
add
shrb
out
imul
xchg
add
popf
fs
iret
adc
sbb
popa
ja
popf
movsb
fs
hlt
sub
cmpl
ljmp
mov
add
adcb
mov
mov
lahf
inc
sub
nop
mov
out
lods
inc
cmp
adc
sub
aas
pop
pop
repz
es
fcompl
pop
int
shrb
in
sub
das
add
mov
adc
sbb
loope
das
jmp
xchg
jnp
inc
mov
and
movsb
mov
mov
cmpb
xchg
arpl
ljmp
pop
adc
mov
adc
sub
xlat
fsubs
jmp
lods
push
mov
mov
je
icebp
pop
repnz
or
mov
cs
adc
cltd
jmp
mov
inc
ret
out
and
idivl
out
push
rorb
dec
std
push
repnz
jmp
dec
push
lahf
rcrl
mov
or
daa
nop
fmull
sbb
push
dec
pop
icebp
fucomi
outsb
pop
pusha
or
xchg
loopne
pop
fs
call
lcall
mov
jmp
mov
jnp
cs
cmp
adc
mov
not
sub
aad
or
ja
aas
and
xor
mov
leave
dec
or
push
jle
cs
pop
inc
or
xor
push
sub
xchg
fdivs
push
push
cli
imul
push
roll
out
jecxz
sub
dec
dec
cld
pop
loopne
or
rcr
addr16
jbe
aaa
mov
ror
dec
pop
dec
and
lods
inc
jg
cmc
pop
pop
jmp
jp
sbbl
push
fistps
lea
mov
jp
stos
push
lock
jne
je
dec
mov
fcomps
add
push
clc
sub
mov
add
je
mov
popf
push
repz
aad
dec
shr
sbb
sub
mov
sub
xchg
daa
arpl
or
out
jecxz
clc
jae
adc
filds
jmp
loope
or
enter
or
adc
sub
and
xchg
xchg
jp
out
add
xlat
jp
mov
adc
xor
mov
in
add
pop
les
dec
pop
cld
sub
or
in
lock
aas
hlt
stos
jmp
xor
ds
xchg
add
mov
push
and
das
cltd
xor
sbb
sbb
adc
pop
shr
inc
pusha
adc
push
shrb
out
add
xor
or
adc
dec
rolb
mov
dec
or
push
aad
ficoms
cli
neg
xchg
xchg
xchg
das
pusha
std
mov
testl
dec
mov
clc
pop
in
pop
xchg
pop
push
cmp
sbb
je
in
ss
scas
mov
jmp
jne
mov
dec
mov
cmp
pop
shl
add
adc
sbb
sub
pop
push
push
stc
aad
inc
or
dec
stc
mov
cmc
movsl
xlat
sbb
and
test
jne
rolb
jns
sub
mov
pop
aaa
sbb
hlt
movsl
pop
add
pushf
imul
scas
fcoml
mov
dec
pusha
iret
dec
push
clc
testl
fcomp
rcll
push
icebp
lret
das
push
jmp
cs
sub
icebp
sub
xchg
dec
pop
repnz
inc
cmp
out
pop
faddl
pop
shr
andb
push
leave
or
mov
dec
xorl
adc
push
cld
mov
dec
push
insb
push
in
adc
mov
push
inc
stos
shl
add
pop
and
mov
jnp
push
mov
jno
sub
add
ficomps
push
les
add
mov
push
lods
inc
arpl
sub
inc
das
cmc
xor
rcrl
aas
mov
or
dec
inc
lds
ja
pop
popf
adc
pop
lock
sbbb
push
pop
les
xor
stc
xchg
jg
adc
stos
nop
aam
inc
inc
xchg
pop
cmovns
jmp
cmp
pusha
xor
mov
pushf
pop
or
pop
add
inc
sbbb
jl
loop
shlb
xor
inc
mov
inc
mov
pop
sub
fbld
adc
mov
pop
xlat
cs
lods
jle
inc
sahf
cli
add
xor
pusha
incb
push
cmp
jge
cmpsb
jp
repz
mov
enter
jmp
not
xchg
ret
xor
pop
xchg
or
in
scas
adc
in
cmpsb
mov
ret
cmpsb
mov
mov
pop
loopne
mov
iret
add
jne
mov
arpl
jmp
dec
inc
cmp
and
dec
rolb
add
and
inc
xchg
out
jmp
stos
pop
xor
addr16
add
sti
rorb
dec
mov
cs
scas
push
xor
addr16
fimuls
inc
dec
pop
jp
adc
mov
arpl
dec
sbb
push
push
das
jmp
xchg
stc
cli
xor
inc
shlb
push
push
mov
in
jg
arpl
mov
mov
xor
nop
aaa
and
xor
adc
jmp
adc
inc
stc
cmp
addl
iret
je
jmp
lahf
sbb
loope
jmp
xor
test
add
fisttps
icebp
mov
pusha
push
sbb
das
lret
fldt
lds
xchg
mov
and
jl
loope
mov
mov
addr16
push
or
adc
or
test
addb
pop
arpl
rclb
adc
or
or
inc
or
test
adc
inc
adc
pop
icebp
or
bnd
or
push
call
inc
adc
in
fwait
mov
mov
daa
add
sub
mov
imul
lret
pop
xor
out
cld
aas
sub
pop
mov
add
mov
jle
jle
push
mov
pop
loop,pn
pop
lcall
inc
into
imull
fstl
add
scas
inc
dec
xor
or
add
loopne
or
leave
imul
sbb
cmc
sbb
adc
add
inc
xor
das
and
add
add
sub
sub
inc
pop
cmp
add
repz
or
push
lods
add
dec
pusha
xchg
or
jg
out
jmp
mov
stc
cmp
sub
xchg
fadds
sbb
pop
sbb
xchg
aas
add
push
and
sub
mov
stos
xor
not
inc
out
ljmp
jb
mov
adc
or
rcrl
and
jl
jg
repnz
or
imul
subb
hlt
out
jg
nop
inc
dec
in
scas
pop
mov
ret
push
lcall
add
mov
push
pop
add
xor
adc
or
add
push
mov
add
add
dec
mov
cmc
lds
aad
cld
in
and
push
pop
inc
lock
ret
sub
or
or
sbb
orb
js
jmp
jmp
in
xchg
rcll
and
movl
add
jecxz
add
jmp
pop
fwait
and
fnstsw
push
mov
sub
rolb
inc
and
mov
mov
xlat
test
test
in
bound
dec
jnp
cmpsb
clc
int3
pop
and
xchg
shl
rolb
pop
sarb
cmp
cmc
adc
or
dec
cmp
movsb
push
sub
dec
adc
repz
add
push
adc
mov
mov
pop
push
ljmp
and
dec
fisttpll
adc
pusha
fldl
nop
andb
push
mov
ret
shll
mov
sub
into
outsb
bound
cmp
cmpb
std
repz
xor
daa
daa
or
sub
pop
loop
add
ret
jne
nop
inc
xchg
jmp
xor
outsb
adc
sbb
sbb
adc
jno
mov
push
mov
dec
ja
mov
ret
notl
out
test
add
sbb
addl
add
stos
cld
je
rcr
lret
push
cmc
xchg
ja
dec
test
adc
pusha
mov
jge
pushf
jae
cmp
js
mov
lods
add
hlt
call
lea
pop
jns
mov
xor
adc
out
add
cltd
xor
pop
dec
das
lea
mov
xor
or
push
sub
lds
shr
jg
jno
xchg
je
jb
jno
arpl
pop
aaa
mov
mov
or
enter
push
inc
imul
pusha
adc
dec
idivb
loop
cld
add
and
push
xchg
lock
jmp
dec
dec
adc
ds
push
in
mov
cmp
pop
mov
xchg
pop
out
scas
vcvtsd2si
jle
lret
jmp
pop
or
inc
daa
and
adc
mov
pop
add
push
insb
and
xchg
adc
das
dec
adc
mov
sahf
mov
repz
jnp
stos
adc
push
dec
scas
aad
mov
adc
inc
mov
scas
or
pop
sub
insl
jle
sbb
ret
push
mov
pop
or
jle
cmp
jmp
mov
jl
les
cmp
fnstcw
add
ljmp
add
int
mov
rcrl
mov
fwait
test
ret
push
push
mov
jmp
cmpsl
adc
and
xor
jb
movsb
or
mov
and
dec
or
push
jp
daa
pop
int3
nop
in
xor
es
or
mov
mov
in
vaesenclast
fstps
jae,pn
or
clc
sbbb
add
cmp
ja
inc
sbb
divb
cltd
cmc
das
dec
daa
push
sub
dec
ja
jp
pop
sub
adcb
pop
pop
xor
add
or
inc
fidivrs
mov
dec
mov
jmp
jecxz
push
arpl
movsb
add
ja
movsl
pusha
insb
dec
or
ret
mov
imul
and
xor
mov
sub
jo
loop
and
pushf
insl
leave
jge
xlat
add
jge
add
sub
adc
mov
dec
push
stos
sbb
in
in
or
xor
mov
mov
loopne
lods
push
push
mov
push
jae
xchg
mov
xor
mov
xchg
push
mov
jmp
int
mov
mov
sub
xor
ljmp
xchg
lds
cmp
and
lret
js
sub
adc
mov
scas
fdivs
mov
adc
fiadds
pop
sub
sub
mov
jnp
mov
int3
aaa
pop
xchg
xchg
cmc
or
pop
jbe
xorl
cmp
shlb
push
mov
cli
adc
shrl
xor
jge
cld
push
imull
mov
add
dec
fs
jg
in
or
fisttps
jns
or
addr16
jmp
mov
sub
sbbl
in
ljmp
xchg
sub
mov
idivb
insb
cmc
jne
jno
and
add
mov
inc
out
addb
jmp
push
jnp
jbe
add
cs
pusha
push
sub
aaa
test
jmp
mov
sub
or
out
inc
lods
mov
adc
ds
ljmp
add
call
jno
je
popf
mov
inc
push
add
repz
push
dec
sub
pop
adc
jmp
push
mov
xchg
loop
push
sub
xlat
lds
daa
les
test
pop
adc
fadd
leave
jge
imul
inc
mov
pop
push
xor
sbb
not
xchg
or
inc
ret
jmp
sub
add
cmp
in
add
mov
and
decb
mov
pushl
stos
mov
fsub
in
mov
adcb
push
cmp
add
mov
xchg
out
inc
or
outsb
out
pushf
pushf
jmp
ljmp
dec
popa
test
dec
sub
ret
les
ret
and
or
cmp
cmc
call
xor
pop
add
xor
lods
loope,pt
cmp
in
daa
push
sub
pop
mov
icebp
out
pop
jle
lods
and
pop
mov
loop
pop
jp
sub
dec
sub
notl
repz
xor
pop
loopne
xchg
push
pop
sub
ljmp
jle
pop
dec
or
push
into
pop
pop
xor
cli
cwtl
lea
xchg
mov
mov
cmpsl
cmp
pop
sub
iret
and
mov
mov
xor
pop
mov
sbb
sbb
jmp
mov
inc
andb
repz
jmp
or
pop
dec
jp
dec
mov
pop
movsb
mov
fcmovnb
pushf
adc
mov
sub
jmp
push
add
push
dec
sub
pop
je
icebp
jo
xchg
jns
lret
inc
cmc
movsb
jo
and
push
loope
sbb
pop
fisubs
inc
dec
sbb
add
mov
aas
jg
faddp
pop
hlt
xor
push
ret
push
pop
mov
sub
outsb
push
cmp
or
cld
xor
dec
and
xchg
adc
xor
xchg
and
pop
test
adc
jmp
popa
adcb
adc
rcl
fwait
aas
sbb
stc
add
pop
mov
dec
int
flds
mov
jnp
mov
loop
dec
mov
jl
pop
ljmp
jmp
in
mov
xchg
jnp
sub
daa
hlt
pop
in
filds
push
jp
roll
rorb
sbb
push
pop
add
mov
lret
xor
and
mov
inc
in
adc
cmpsb
bound
push
dec
mov
sti
mov
ret
leave
sub
jp
shrb
xor
sarb
and
je
insb
fiadds
mov
sub
mov
or
add
mov
or
cmp
aaa
out
inc
cltd
mov
clc
pop
aas
jo
add
mov
mov
adc
adc
imul
xchg
mov
inc
jmp
mov
dec
cmp
bound
inc
not
adc
mov
ror
in
lods
imul
dec
mov
sub
out
lret
adc
frstor
sub
xlat
or
inc
les
jb
add
jns
inc
pop
out
dec
or
cmc
cld
fldenv
mov
out
sbb
aas
adc
jmp
push
xor
repz
cmp
icebp
sub
lahf
ljmp
adc
jmp
inc
mov
xchg
js
test
pop
push
push
mov
mov
ja
mov
arpl
dec
ljmp
ss
out
push
dec
addr16
jae
add
shlb
or
inc
mov
les
call
adc
jae,pn
decb
icebp
xorl
in
mov
cmc
xor
mov
or
lret
aam
js
jle
fbld
cwtl
mov
push
out
out
mov
addr16
das
sbb
ljmp
loop
shll
mov
pop
cmp
test
lea
ret
cmp
xor
popf
icebp
pop
inc
push
mov
aaa
inc
jno
cld
xchg
fdivr
xchg
pop
jmp
aas
lods
mov
addl
lock
sbb
out
or
icebp
addl
repz
and
imul
call
sahf
sahf
daa
or
aad
lahf
rcr
cmpsl
mov
push
pop
std
and
ret
idivb
adc
sub
and
mov
xor
aaa
imul
mov
pop
push
add
mov
ljmp
in
imul
jmp
mov
sbbb
cld
and
lahf
enter
xor
ret
or
pop
pop
sub
jmp
mov
stos
sbb
ja
sub
mov
out
xor
fdivl
nop
or
add
bnd
popa
push
inc
push
test
jge
and
loopew
test
pop
es
cmp
adc
rclb
dec
hlt
jg
mov
or
push
and
int3
call
xchg
mov
mov
das
in
inc
outsb
inc
bound
mov
jle
mov
dec
sub
lahf
mov
push
sub
sub
pop
add
jno
test
call
or
aad
sbb
pop
push
mov
repz
inc
not
ds
and
addr16
cmp
jmp
ret
aam
inc
sbbl
das
pushf
or
add
popa
pushw
push
test
mov
jnp
and
dec
xchg
adcl
xor
pop
add
jmp
roll
repnz
pop
pop
lock
into
dec
loopne
dec
loop
dec
aad
dec
scas
fsub
jmp
mov
shl
jo
xor
es
pop
pop
sub
repnz
lret
xor
xchg
add
add
clc
jmp
clc
dec
and
rcl
mov
roll
jg
sbb
pop
in
add
rcr
adc
or
inc
add
lock
btc
mov
mov
add
adc
add
jmp
ja
sub
stos
cmp
dec
test
or
cs
sub
sub
adc
lock
shll
mov
je
jmp
stos
sub
jmp
test
or
pop
sub
es
roll
movsb
aad
ljmp
pop
jmp
je
mov
nop
mov
cld
add
dec
pop
mov
std
xlat
push
js
mov
push
leave
pop
mov
jns
mov
pop
adc
add
out
adc
sbb
stos
inc
jbe
mov
or
mov
sbb
loopne
pop
std
and
dec
call
jno
xor
not
jge
lock
push
mov
and
pop
bound
sbb
or
sbb
push
shlb
push
pusha
js
js
pop
das
jmp
insb
inc
outsl
jae
xchg
add
or
sub
mov
sub
clc
mov
sub
cli
test
push
cld
aam
scas
mov
and
add
xor
and
in
test
push
sub
dec
pop
add
insl
mov
push
cmp
adc
push
test
or
icebp
push
jge
jo
pop
jmp
xchg
sbb
add
xor
jmp
cmc
sahf
imul
les
out
mov
or
pusha
or
por
xor
mov
pusha
in
fistpl
pop
cmp
jp
or
and
jo
sub
dec
adc
pop
pushf
and
push
add
idivl
adc
sub
cmpsl
mov
ret
xchg
cli
pusha
and
sbb
ret
jecxz
jg
shrl
fistpl
shrl
xor
lea
inc
add
not
scas
push
ljmp
sbb
push
pop
or
sub
leave
fs
dec
adc
mov
mov
push
pop
push
sub
jle
rorl
jmp
pop
push
push
stos
add
pushf
push
div
enter
pop
mov
pushl
jmp
sub
sbb
push
cli
push
das
loop
imul
mov
pop
es
ja
or
add
insb
mov
aad
cli
mov
lret
inc
ss
dec
jmp
xchg
arpl
cmpsb
adcb
loopne
pop
and
outsl
syscall
clc
subl
push
mov
cli
xor
data16
sub
cmp
jnp
pop
or
xorb
loope
mov
mov
pop
pop
gs
aaa
movsl
xchg
aad
push
cmp
lcall
xor
jno
inc
lea
sub
dec
pushf
icebp
scas
push
mov
aas
mov
cmp
dec
fs
das
dec
fisttpl
dec
fiadds
xchg
xchg
mov
ja
fucomp
cmc
dec
aam
dec
pop
xor
xor
mov
loop
fisttps
mov
xchg
mov
push
lods
les
jmp
popa
or
cltd
mov
inc
inc
mov
ficompl
int3
inc
popf
inc
pop
xchg
sbb
cs
das
cmpsl
aad
out
lcall
xchg
mov
rorl
movhps
roll
push
lcall
inc
jl
mov
call
inc
push
shll
lret
in
in
rol
add
clc
std
sub
lock
xor
inc
or
jmp
enter
in
cld
add
into
and
push
and
dec
adc
push
insl
and
pop
imul
daa
popa
and
subb
icebp
sub
jae
cmp
adc
sti
xor
cs
pop
mov
xorb
and
adc
repz
push
sub
xor
ja
push
jl
sub
stos
bound
pop
fstpl
cmp
aam
shrb
divb
xor
fdiv
pop
pusha
xor
adc
daa
pop
test
andl
add
test
cs
loopne
into
jge
testb
jno
adc
or
in
jmp
mov
es
lea
lods
fldl
mov
ror
test
push
in
pop
push
in
inc
or
pop
push
aad
int
neg
and
push
xor
dec
sub
cmp
addr16
cmp
andb
loopne
addl
jb
inc
or
daa
sarl
test
popa
es
pusha
lock
cli
fcompl
cmp
int
std
leave
rol
gs
jg
roll
push
push
mov
ret
inc
add
sub
mov
sub
add
js,pt
inc
lds
pop
add
cmpsl
inc
and
adc
sti
cmp
les
ljmp
pushf
out
das
arpl
mov
pop
pop
leave
fisubrl
xor
lds
in
add
push
xchg
outsl
ljmp
fstl
jno
ss
push
sti
sub
movsl
mov
sbb
icebp
fnstcw
mov
xchg
adc
sbb
gs
push
orl
mov
xorb
dec
stos
cld
outsl
lret
pop
std
add
cli
sbb
ret
sbb
jnp
fldl2t
lcall
sarb
push
popf
jg
pushfw
pop
gs
call
cmp
jae
loop
in
and
jecxz
shrl
jge
and
iret
insb
sub
dec
pusha
add
jle
js
pop
orl
mov
scas
mov
daa
cld
aad
mov
sbb
xchg
lahf
jns
mov
xchg
faddl
xchg
mov
inc
stos
bound
das
sub
push
pop
xor
adc
push
out
das
test
add
insb
cmp
pop
mov
out
or
add
pop
retw
sbb
ja
xchg
pop
mov
jns
rcrl
dec
out
lds
sarl
test
popa
popf
fs
roll
loop
inc
cmp
push
xor
cmp
push
lret
xchg
shr
sub
adc
mov
mov
jb
pop
lret
mov
or
and
mov
inc
or
pop
mov
lock
mov
popf
shlb
lcall
inc
imul
loope
call
mov
lret
pop
jmp
sbb
ds
jmp
imul
mov
and
cmc
test
fs
jb
mov
mov
add
mov
add
neg
hlt
inc
pop
shlb
pop
add
push
lods
rcr
sub
push
clc
mov
sbb
pop
add
adc
inc
xchg
lret
push
add
mov
dec
test
cmp
add
jnp
cmp
xorb
test
mov
mov
adcb
mov
sahf
push
add
pop
mov
jp
mov
push
jmp
pop
push
sub
push
sub
das
cmp
inc
nop
push
mov
pop
jg
aam
ljmp
bnd
pop
mov
test
mov
loope
lods
mov
jmp
subb
cmc
dec
sub
add
cmp
jbe
add
or
fimuls
loopne
push
mov
inc
decb
mov
inc
push
mov
cmc
mov
lock
mov
out
jns
dec
arpl
adc
dec
xor
sbb
adc
and
jo
add
inc
mov
loope
imul
popf
push
jmp
jmp
or
inc
mov
jo
mov
mov
aaa
dec
mov
or
inc
jle
mov
das
add
les
or
loop
add
jle
lcall
push
mov
inc
shrl
std
lods
fisttps
jecxz
mov
es
inc
jg
jnp,pt
xchg
iret
and
sub
popf
ret
mov
adc
mov
mov
and
int
push
js
jmp
xor
push
dec
int3
adc
add
daa
dec
subl
xchg
mov
add
sub
cmc
mov
mov
inc
inc
jne
push
pop
cmc
xorb
mov
outsl
mov
andl
jecxz
cmp
pop
lods
mov
dec
mov
push
xchg
sti
sahf
std
pop
stos
sub
and
ret
outsl
cmpsb
sarl
push
mov
jl
add
fildl
dec
sub
scas
mov
cmp
mov
add
cltd
das
pop
or
sub
sbb
xchg
stc
mov
outsl
sar
add
inc
pop
ret
std
in
sahf
cs
jg
add
jbe
insl
orb
stc
test
je
bound
pusha
out
adc
mov
iret
pop
shl
lret
out
jp
dec
imul
jmp
pop
dec
je
dec
in
add
hlt
sbb
rolb
jo
sub
outsl
mov
inc
cmpsb
jp
jne
lds
daa
push
xlat
inc
xlat
in
pop
cmp
push
sub
inc
mov
push
pop
sbb
push
cmpsl
iret
inc
push
pop
out
fnstenv
das
pop
add
lods
dec
cltd
xchg
jle
es
imul
pop
mov
adc
mov
fldenv
icebp
dec
fs
scas
jg
pop
jmp
shrl
into
movsb
or
and
or
decl
xchg
int3
jmp
mov
div
xor
sbbl
lahf
shll
adc
test
popf
addr16
xchg
decb
jge
aad
add
cli
mov
xor
cmp
loopne
jmp
push
mov
mov
sarb
test
inc
dec
not
mov
lea
lods
pop
pop
int3
out
or
or
adc
repz
loope
add
pop
or
cmp
lock
mov
popa
stos
cmp
mov
or
mov
jnp
mov
inc
or
jmp
nop
divb
push
sub
xchg
add
or
and
aad
int
enter
shl
add
lods
sub
xchg
xchg
jmp
jge
fs
in
xchg
push
sub
mov
fucomip
stos
dec
pop
test
or
sbb
test
daa
mov
mov
sbb
adc
xchg
push
je
les
js
fstpt
clc
ret
xchg
pop
and
and
inc
sbb
push
mov
sub
rorb
sub
mov
xchg
push
add
cmp
repz
scas
jmp
orb
inc
sub
negl
sub
cmp
xor
push
adc
xchg
data16
lods
subb
mov
mov
rorl
ret
mov
ret
inc
or
pop
push
cwtl
pusha
or
aas
xchg
adc
xchg
call
in
and
inc
inc
fwait
push
dec
fmuls
imul
cltd
dec
adc
out
aad
adc
mov
test
imul
add
mov
pusha
mov
jmp
dec
adc
sub
adc
pop
xor
icebp
add
nop
adc
in
ds
push
test
dec
ret
mov
jmp
mov
cmp
xor
movsb
pop
daa
jg
dec
and
loopne
loope
out
mov
mov
mov
fldl
mov
mov
or
xchg
ret
cmc
jg
mov
add
adc
stos
mov
add
mov
es
mov
inc
or
cmp
or
in
xchg
aas
and
sbb
dec
addr16
aad
inc
inc
loopne
loope
insb
lss
mov
lahf
pushf
and
or
lods
and
push
and
loope
pop
fcomps
mov
inc
fwait
dec
sti
pushf
mov
mov
ficoms
icebp
ljmp
dec
dec
or
aad
push
fisttps
sub
or
pop
das
adc
adc
mov
test
nop
lahf
push
jl
mov
pop
and
ja
adc
or
fdivrl
sub
sub
sbb
mov
and
dec
sub
test
and
fidivrs
cmp
xor
iret
push
out
jp
in
ja
jmp
fstl
and
cld
xor
sbb
ss
test
sbb
out
fadd
insl
les
push
jg
pop
push
add
mov
outsl
mov
inc
dec
es
fdivl
cltd
dec
and
repz
lret
adc
cmp
mov
movsl
imul
or
sbb
sub
repnz
cmp
or
add
sub
jmp
or
jp
adc
jne
or
std
mov
pop
or
mov
out
xlat
int
jle
inc
sti
add
add
xor
add
mov
push
xchg
ficoms
jmp
pop
sbb
outsb
jae
push
jnp
push
sbb
enter
imul
stos
outsl
push
lds
jno
xchg
not
lods
out
push
jno
mov
cmpsb
stos
int
test
mov
stos
ja
fiadds
fnstsw
xchg
out
js
pop
jnp
cwtl
mov
and
aaa
fcoml
outsl
hlt
sbb
addr16
in
xchg
std
sahf
sub
leave
mov
hlt
mov
xor
in
add
sub
lds
or
and
mov
test
insb
pop
inc
jmp
inc
hlt
scas
notl
out
daa
pop
cmp
xchg
rorb
jmp
sub
test
mov
imul
popa
adc
scas
cs
daa
add
fistl
fists
rcll
insb
les
and
dec
add
gs
cld
jge
add
sub
repnz
std
cmp
int
push
push
sub
aas
mov
mov
mov
add
or
ret
push
push
add
cs
popl
dec
jb
push
xchg
gs
xchg
in
add
sbb
and
repz
bnd
sub
sub
adc
mulb
addr16
add
jb
pop
ja
sub
clc
mov
int3
pop
ljmp
sub
inc
es
xor
lods
add
lret
loopne
mov
dec
push
test
mov
sub
add
pop
adc
mov
mov
dec
push
mov
sbb
outsl
mov
aad
push
sub
mov
jg
int
clc
adc
and
and
shl
mov
andl
push
jns
inc
push
decl
or
push
pop
xchg
mov
jge
int
sub
cld
addl
jae
or
nop
out
testb
pop
clc
inc
pop
js
xor
sbb
in
cmp
fdivl
shrl
or
rclb
inc
int
cmp
mull
inc
and
roll
in
xor
xchg
mov
addr16
inc
mov
loop
add
adc
out
pop
ljmp
mov
sbb
fidivrl
add
jae
es
pop
enter
push
icebp
test
xchg
lea
mov
sub
add
and
fcoms
xor
add
iret
adc
xor
sbbb
frstor
fsub
outsb
gs
mov
mov
enter
or
or
fwait
js
xchg
sti
pop
xchg
push
mov
cs
scas
orl
movl
out
inc
cs
mov
lret
cld
nop
popf
mov
imul
insl
jns
dec
jecxz
or
fsin
adc
jne
cmp
mov
out
sub
adc
add
jmp
testb
pop
pop
callw
sub
pop
cs
addb
popf
jnp
ret
add
xchg
movsb
and
push
not
js
movsl
fadds
test
shlb
and
jecxz
orb
add
mov
push
pusha
out
data16
aam
cmp
pop
ret
cld
loop
adc
mov
dec
movsl
mov
lahf
lahf
rcr
push
ret
jno
and
mov
cmp
push
repnz
pop
push
pop
push
movsb
adc
in
lret
test
aaa
sub
cmp
scas
add
in
and
mov
cmpl
jp
out
pop
push
out
push
orl
push
jb
mov
popa
push
mov
jne
icebp
add
dec
or
and
inc
dec
jg
xor
outsb
jmp
mov
adc
es
sahf
testb
mov
jmp
aam
scas
ja
mov
cmp
adc
jmp
sbb
shrb
mov
push
pop
push
popa
popa
stos
imul
bound
jmp
ss
je
inc
or
enter
daa
adc
push
jg
repz
jge
sti
cli
mov
adc
scas
idivl
xor
mov
push
movsl
pusha
mov
repz
icebp
pop
pop
xor
enter
xlat
mov
adc
add
sub
jmp
push
pop
int3
mov
add
imul
fwait
sub
shr
jmp
out
add
inc
adc
push
mov
jmp
movsb
inc
mov
nop
jo
inc
mov
sub
stc
mov
jnp
je
mov
data16
out
sub
pop
push
pop
cmp
insb
jns
inc
xlat
sub
ss
adc
or
add
sub
push
mov
callw
dec
and
sbbb
sahf
inc
cwtl
pop
mov
dec
sbb
subl
and
pop
jmp
ficoml
adc
sub
ljmp
cs
jl
pop
daa
loope
mov
fcoms
imul
dec
or
or
imul
push
fdivr
mov
aam
or
and
int
movsl
aam
lods
cmc
fistpl
and
stos
sub
push
pop
jmp
sbb
lods
jg
aaa
or
test
mov
mov
add
rep
add
cmp
jnp
aaa
cmp
imul
and
jmp
dec
mov
mov
mov
pop
xchg
fs
add
sub
out
out
das
fst
sub
imul
or
fs
cmpsb
repnz
add
mov
arpl
lods
cltd
xchg
sub
sub
fldl
xchg
add
scas
sub
pop
shl
mov
push
jmp
mov
and
sbb
or
add
cltd
daa
push
sbb
flds
add
xor
jnp
sarl
clc
cmpsb
outsb
and
sti
xchg
mov
cmp
loope
das
sahf
outsb
adc
dec
inc
dec
push
push
mov
enter
mov
or
mov
call
adc
jge
xchg
stc
push
imul
push
and
inc
push
mov
jno
mov
adc
adc
push
dec
test
lret
sbb
push
and
adc
jmp
daa
push
cmp
repz
imul
or
arpl
mov
inc
into
mov
push
sysexit
shrb
out
sbb
add
out
fdivrs
jnp
stc
sbb
jmp
out
jnp
out
and
or
andb
out
push
cmp
pushf
loopne
push
and
ja
ljmp
sub
jns
bnd
ret
mov
addb
push
add
mov
xchg
push
subb
push
pop
hlt
sbb
cmpsl
xchg
inc
mov
push
clc
and
inc
test
push
mov
push
int
and
or
lods
ret
sub
in
sub
int3
dec
daa
cwtl
sub
lods
or
enter
add
jmp
push
daa
and
aad
xchg
push
jmp
je
adc
xchg
jne
sub
cmpsb
int
jg
lock
fdivl
inc
jbe
pop
cld
mov
test
orl
push
push
xchg
adc
out
sbbl
lock
add
call
fsub
or
jmp
adc
mov
es
repnz
jg
jp
mov
cmp
daa
cs
mov
xchg
add
iret
into
dec
mov
pop
ret
iret
mov
adc
xor
sti
mov
dec
les
pop
imul
aad
ror
mov
in
outsb
mov
sarb
mov
sub
cmp
or
in
adc
repz
jmp
jl
adc
and
or
das
xchg
sub
mov
bound
test
xchg
xchg
cld
out
out
ret
rclb
inc
jmp
xchg
pop
add
lods
mov
push
ljmp
jmp
xor
push
inc
stos
das
jo
adc
sub
out
inc
in
xchg
es
das
test
mov
mov
inc
jmp
dec
dec
inc
jg
idivl
mov
les
cmp
jns
sub
or
sarb
imul
icebp
inc
pop
mov
mov
or
add
testl
adc
push
movsb
loope
movsl
subb
hlt
pusha
cmpl
outsl
jb
in
jo
call
es
sbb
pop
ds
aaa
aam
pop
xchg
mov
fistpll
leave
rorb
mov
push
cwtl
lods
push
mov
sbb
mov
xor
lods
sti
sbb
lret
push
cld
movsl
loop
jne
call
inc
add
sbb
jp
in
cld
movl
add
and
mov
adc
cli
stos
xchg
aad
add
cmp
jmp
pop
push
or
rolb
jb
dec
and
inc
mull
cltd
cwtl
xchg
pop
jb
jnp
imull
pop
xor
bound
xlat
sti
xor
loope
roll
incl
aas
inc
jnp
cmpsl
movsl
fisubrs
jmp
cmp
add
pop
sbb
icebp
and
xor
mov
jmp
jnp
mov
jle
or
into
stc
push
pop
sub
dec
xlat
test
mov
sbb
jns
mov
cmp
inc
jns
cmp
pop
scas
cmp
mov
out
jmp
into
mov
mov
pavgb
jecxz
iret
inc
inc
lret
cmp
pusha
sahf
add
mov
push
xchg
and
inc
out
cld
orb
push
fwait
js
adc
sbb
mov
or
mov
jmp
mov
push
push
cs
or
je
pop
mov
push
xchg
inc
loop
xchg
icebp
out
push
icebp
pop
dec
jmp
lret
sti
into
sub
dec
pop
mov
push
add
or
lods
fists
and
movsb
sub
pop
ret
or
jmp
push
cld
cli
pop
dec
mov
jo
jecxz
mov
daa
pop
fstpl
daa
push
jno
add
and
pop
mov
inc
and
jae
dec
jns
inc
int3
cmp
test
jmp
mov
retw
out
not
mov
pop
dec
jl
add
adc
rol
pop
fdivs
and
aas
insl
adc
add
jp
xor
frstor
test
les
xchg
daa
add
xchg
insl
dec
fs
mov
sbb
lock
or
pop
ljmp
push
push
jmp
sub
add
jns
add
lahf
jae
out
sbb
cmp
hlt
fisttps
shlb
inc
lcall
out
stc
stos
shrb
adc
sub
jg
jbe
mov
dec
nop
mov
shlb
add
and
call
out
cmp
mov
les
icebp
adc
pop
loope
push
cmp
fadds
adc
inc
pop
mov
cmp
incl
into
cmp
push
outsb
subb
xor
and
or
aaa
or
add
pop
jnp
cwtl
add
daa
lret
sarb
daa
adc
aad
pop
xlat
adc
pushf
movsl
cld
jb
adc
movsl
mov
adc
jmp
cli
in
aad
mov
in
mov
cld
iret
lcall
sbb
xor
add
mulb
sub
aaa
cmp
cli
ja
int
add
and
xlat
add
rclb
orl
sub
lods
cmp
int3
jge
cmc
gs
cmp
jmp
push
add
lea
sub
ret
insb
stos
mov
cwtl
outsl
pop
test
mov
nop
jo
outsb
fdivrs
iret
sub
add
mov
xor
xor
jmp
fbld
mov
jmp
add
rcrl
cmpsl
test
jg
and
cmp
je
pop
int
sub
aas
lods
xchg
scas
xchg
clts
mov
addr16
sub
sub
or
dec
dec
test
or
aad
add
inc
sbb
pop
sub
mov
xchg
sub
adc
jmp
mov
pop
xchg
shll
adc
push
xor
pop
sbb
jmp
xor
jne
jl
push
sbb
rorb
or
mov
stos
fisubl
das
popl
sub
imul
in
pop
outsl
scas
pop
cld
jno
loopne
jle
repnz
add
push
jmp
xor
push
cld
sbb
jge
push
movsl
cmp
outsb
lock
aas
pusha
jae
clc
mov
mov
mov
in
mov
rclb
fwait
in
mov
mov
xorb
xchg
leave
push
push
aam
shlb
lock
push
mov
cmp
pop
lahf
hlt
rorl
in
mov
mov
inc
pop
stos
sub
sub
xchg
jmp
std
mov
xor
pop
jge
jg
into
dec
mov
xor
mov
test
mov
jne
dec
ret
add
mov
jmp
xor
in
jmp
jmp
mov
subb
ja
add
jbe
mov
or
outsl
and
push
push
cli
jge
cmp
adc
push
push
loopne
inc
xchg
or
inc
mov
or
rcl
ljmp
sub
jo
aas
inc
adc
out
mov
mov
ret
loopne
fcomps
push
enter
pushf
iret
ret
mov
cli
add
and
dec
or
sub
movsb
push
outsb
cwtl
push
mov
xchg
sub
loopne
mov
jg
pop
inc
test
imul
or
mov
idiv
jp
mov
loope
jno
jae
inc
iret
xchg
dec
sbb
sub
in
pop
jo
vcvtps2dq
sub
mov
mov
aam
out
add
inc
in
imull
int3
out
jge
push
xchg
outsb
scas
jmp
pop
jae
ret
pop
out
jl
push
pushw
mov
xchg
jnp
sbb
in
adc
pop
jle
pop
add
call
loop
add
jl
and
xor
adc
xor
enter
mov
mov
jns
loop
push
sub
int3
push
dec
mov
mov
rdtsc
lds
add
nop
cmp
outsb
data16
jmp
inc
mov
es
push
add
sub
sbb
mov
in
mov
push
mov
mov
scas
ret
aad
jg
adc
inc
mov
shlb
push
or
shll
cmpsb
out
popf
shll
cli
xor
es
mov
adc
jo
and
out
xchg
je
pop
push
and
add
loope
mov
pop
lods
mov
test
fistpll
push
sub
xor
lcall
test
jne
rcll
das
pop
icebp
jle
jnp
movsl
sbb
push
jne
adcl
xchg
xchg
xlat
push
rcl
out
jle
into
mov
inc
not
shll
mov
out
mov
popa
lods
jmp
or
sub
push
inc
rcll
push
bound
movsb
inc
adc
inc
shl
jle
add
jnp
mov
popa
pop
sub
and
pop
xor
pop
xchg
mov
jns
mov
movsb
lahf
icebp
push
gs
pop
and
hlt
cld
xor
xor
jmp
notb
insb
das
sub
popa
or
outsb
cmpsb
testl
mov
push
inc
cmc
fstps
push
testb
and
mov
pop
testb
mov
outsb
test
xor
mov
xor
pop
lods
mov
mov
cmp
mov
pop
sbb
add
or
add
dec
popf
hlt
popf
imul
jo
mov
sbb
push
adc
sbb
enter
pop
mov
inc
cli
jnp
and
imul
push
out
iret
das
inc
mov
add
pop
jmp
stos
push
fsubs
mulb
mov
cmp
mov
mov
adc
lock
loopne
push
clc
add
add
push
sub
jmp
rcll
or
loop
pop
inc
cmpsb
and
sbb
jg
push
xchg
mov
mov
add
out
adc
dec
jmp
xchg
mov
cs
divl
add
push
or
jmp
outsb
ret
movsb
cld
mov
leave
loope
or
jmp
cld
loopne
mov
pop
and
xchg
addr16
test
cs
or
addl
push
repz
stos
sub
ret
jnp
lods
xchg
push
add
xor
xorl
dec
jg
stos
mov
jp
test
pop
push
push
les
xchg
out
xor
add
aas
pop
or
jecxz
pop
sub
ljmp
loop
ss
imul
add
mov
xorl
sub
mov
mov
jg
int
pop
push
adc
mov
adc
insl
mov
popa
or
pop
and
sub
fdivs
pop
cmp
add
sub
xchg
mov
jl
pop
out
push
in
lret
ret
ja
js
stos
add
je
mov
mov
int3
adc
fadds
pop
cld
lret
in
cmp
adc
mov
cs
cmpsl
pop
dec
mov
xchg
mov
dec
in
cmc
xor
adc
pop
mov
push
dec
push
xor
and
loopne
pop
or
dec
adc
popf
test
push
inc
dec
daa
es
and
push
fadd
add
add
jmp
sub
call
xchg
test
cld
or
pop
call
sub
xchg
inc
fidivs
mov
or
and
enter
imul
ss
fsubrs
jae
in
mov
lea
jae
popa
cmc
cltd
jmp
ror
sub
inc
lock
jmp
repz
dec
andb
cmp
movsb
jge
mov
jmp
inc
jmp
enter
js
push
ret
or
mov
cmp
out
sub
mov
outsl
adc
sub
and
cmp
into
add
repz
dec
jl
test
jmp
ds
add
mov
inc
or
cs
push
notl
pop
sbb
sbb
and
scas
dec
sbb
cmp
xor
mov
fwait
push
rol
pop
fstpl
rcl
xor
cmp
adc
outsl
inc
or
inc
out
sbb
jmp
sub
out
out
sarb
pop
xor
sbb
push
mov
out
cmp
jmp
test
cmpb
ret
xlat
mov
fcmovnb
push
mov
lds
mov
jbe
lret
sub
jns
xor
dec
in
test
pushf
and
mov
popf
ret
mov
mov
fs
idiv
fcoml
pop
push
push
or
int3
insb
in
mov
clc
shrb
repz
dec
jne
cmc
inc
stc
pop
xchg
or
cld
ds
fneni(8087
push
or
mov
jbe
int3
xchg
mov
ficoms
loope
xchg
mov
or
add
pop
or
and
or
clc
mov
jmp
mov
mov
nop
push
jb
inc
push
push
daa
jmp
jo
sbb
in
lds
xor
data16
pop
loope
lods
std
mov
daa
cli
pop
jne
subl
clc
pop
dec
pop
sti
into
outsb
sub
push
es
out
xor
mov
shrb
dec
in
mov
dec
pop
push
cltd
mov
pop
or
movsl
inc
or
icebp
push
stc
cmp
mov
daa
xlat
dec
roll
sbb
test
sbbb
mov
mov
xor
inc
stos
shrb
cld
xchg
hlt
add
call
add
inc
rdtsc
pop
inc
dec
push
lret
add
stc
scas
loope
jmp
loop
push
push
call
xlat
clc
addl
outsl
push
add
inc
jns
loope
lret
clc
sbb
sbb
add
mov
arpl
ja
mov
mov
rcll
inc
dec
pop
jbe
push
cmp
sub
pop
negb
cmp
jmp
xchg
std
icebp
ret
lret
dec
add
jmp
pop
outsl
and
jo
das
adc
pop
std
test
stos
movsl
xor
mov
cmp
daa
mov
cmc
or
js
jl
in
lahf
mov
es
jge
jge
cmpsl
cmp
add
rcll
outsl
lock
repz
in
xchg
in
xchg
xchg
not
iret
push
or
sub
imull
add
pop
inc
dec
or
sub
sahf
mov
cmc
adc
aas
jno
pop
xlat
inc
test
xor
pop
xor
mov
add
aam
ret
les
pop
pop
xor
sbb
stc
inc
insb
cmp
lahf
lea
subb
adc
call
or
in
pop
pop
mov
imul
rorl
cs
mov
fistpll
ret
dec
push
push
inc
fcompl
jns
push
adcl
xor
arpl
enter
pop
push
std
push
mov
ret
lahf
aam
icebp
std
sbb
push
pop
push
add
adc
adc
push
jno
push
cld
mov
mov
mov
add
mov
je
call
push
and
add
inc
pop
ja
aas
shll
add
add
push
jmp
and
jb
das
inc
sbb
dec
cmc
mov
push
sahf
or
jno
or
and
push
cmc
stos
incb
push
and
aam
push
or
jo
jo
mov
adc
cmp
sub
jge
xor
nop
adc
push
add
pop
sub
mov
add
jo
jno
das
or
fsubrl
add
pop
or
adc
sub
ljmp
inc
outsb
push
push
push
les
aad
pop
sub
pop
pop
sub
mov
inc
jmp
mov
jne
xor
pop
pop
pop
push
push
addb
ret
cmp
loopne
xor
cmpsb
cmp
fnsave
arpl
xorb
js
xchg
adc
add
out
bound
push
inc
mov
leave
je
fwait
hlt
subl
dec
cmc
sbb
std
movsl
pop
nop
jp
or
mov
aas
add
and
jmp
mov
cmp
mov
ja
or
jmp
sbb
ret
js
cs
dec
cmpsb
inc
adc
inc
add
and
mov
mov
shr
jae
xchg
add
jno
add
es
int
and
ret
and
or
inc
filds
test
idivb
push
add
pop
jo
cmp
pop
pop
xchg
ja
test
mov
xor
das
divl
sbb
dec
mov
pop
dec
cmpsl
xchg
lds
add
and
ret
cmp
mov
xlat
imul
jmp
or
jo
cmp
inc
aas
jg
push
jo
xchg
mov
aas
mov
aam
add
mov
mov
scas
pop
call
dec
sti
jnp
int3
and
sub
dec
clc
out
push
imul
data16
and
cli
or
pop
out
aas
add
popa
or
dec
fidivs
jl
orl
mov
outsl
nop
lret
add
dec
mov
or
hlt
mov
repnz
bound
pop
jecxz
jmp
jmp
leave
xchg
xchg
jg
inc
test
ljmp
mov
adc
pop
or
ja
addr16
fs
xor
add
xchg
mov
icebp
xor
nop
dec
add
je
xchg
sub
sti
xlat
add
adc
adc
stos
push
cmp
pop
test
or
mov
push
mov
dec
xchg
in
or
sub
jae
push
mov
add
push
pusha
add
or
pop
mov
push
adc
add
rorl
lea
jmp
das
not
pop
rorb
push
ljmp
or
mov
adc
and
sbb
dec
fcomps
pop
inc
test
xchg
mov
pop
daa
adc
enter
add
push
adc
call
stos
mov
clc
mov
subb
mov
enter
popf
jbe
inc
sub
sbb
dec
push
mov
mov
std
cld
and
outsl
shll
mov
faddl
adc
sub
jbe
sti
and
or
pop
pop
lods
pop
dec
push
mov
shlb
xchg
xchg
cwtl
mov
subb
jecxz
stos
pop
mov
jmp
jbe
dec
or
test
adc
lret
outsb
jbe
sub
dec
faddp
loopne
in
scas
cwtl
les
stc
pop
inc
loope
add
out
jge
xor
push
cld
out
cwtl
cmp
pop
gs
ja
mov
push
sub
xchg
sub
out
sub
dec
push
sbb
in
jnp
pop
mov
dec
or
pop
add
loop
adc
push
add
pushf
cmpsb
and
cli
bound
stc
add
pop
cmp
insb
pop
mov
push
xor
mov
sub
rcl
cld
punpckhdq
dec
out
jne
cmc
push
or
jmp
imul
js
out
mov
popa
push
adc
adc
jns
jg
pop
jge
or
add
add
rcpps
sub
dec
js
lcall
sub
pop
ret
sbb
stc
fstl
out
mov
incb
push
sbb
and
fistps
sub
ret
dec
outsb
add
rcrb
dec
out
cmp
mov
ljmp
out
push
xor
jg
dec
dec
movsl
pop
add
add
loopne
add
inc
dec
sub
mov
adc
sbb
sbb
mov
shr
sbb
cwtl
sub
jno
or
sbb
jge
xchg
jg
sbb
push
jmp
cmp
insb
stos
clc
add
add
sbb
addr16
sbb
cld
rolb
push
pop
adc
mov
bound
inc
sub
out
sub
icebp
out
mov
xchg
shlb
mov
jmp
pop
add
or
and
loopne
popa
and
je
cmp
jmp
or
dec
push
imul
sub
push
popa
push
sub
ljmp
cs
imul
fidivrs
imul
mov
mov
outsb
sahf
ficompl
cmp
push
test
jmp
lock
mov
shr
bound
repnz
adc
adc
mov
xor
dec
and
movsl
mov
sub
or
mov
orl
call
mov
aaa
movsb
push
or
xchg
xchg
and
mov
cmpsb
int3
adc
adc
insb
sti
jle
iret
nop
cs
inc
xchg
add
pop
cmp
dec
jg
lods
into
out
daa
sti
jbe
dec
sbb
pop
insb
and
jmp
out
adc
repz
add
sti
xchg
cltd
pop
or
push
mov
pop
pop
mov
sbb
ja
sub
and
pop
lret
adc
add
testl
shlb
cli
popf
or
gs
add
testb
jnp
xor
push
fcoms
inc
das
outsb
inc
loope
mov
aas
xchg
jmp
xchg
sbb
jg
cmp
push
decb
and
pop
loope
ret
inc
or
int3
mov
rolb
jns
dec
divb
ds
pop
aas
in
or
addb
pop
outsl
lahf
add
in
mov
ret
daa
xchg
int3
lds
call
les
jp
cmp
rcll
jecxz
mov
fdivrl
pop
pop
xchg
movsl
push
ret
jno
mov
add
push
jp
sbbb
testl
sbb
mov
add
je
shlb
add
pop
pop
movb
mov
pop
out
jbe
sub
push
jmp
sarl
cmpsl
roll
cmc
fiaddl
pop
push
inc
mov
icebp
dec
pop
xor
jmp
xor
pop
bound
sbb
das
clc
aad
or
popa
out
shll
adcb
in
and
mov
mov
or
in
pop
sub
mov
mov
or
test
sub
pop
mov
pop
shll
jne
ret
mov
lods
sbb
inc
mov
add
mov
pop
pop
mov
fsubs
sub
sbb
neg
fidivl
cltd
mov
and
sub
add
rcrl
push
mov
mov
add
test
adc
pop
das
xor
cmp
bound
or
por
add
lcall
jb
pop
xor
or
iret
inc
jnp
scas
in
out
rcrl
push
mov
inc
inc
or
cld
nop
rclb
insb
daa
imul
or
pop
test
inc
aam
lahf
paddb
sahf
addr16
ja
daa
mov
lret
mov
push
mov
pop
es
add
movsl
pop
das
inc
mov
shl
adc
push
int
cmc
mov
sub
cmp
add
add
fdivp
mov
xor
subb
mov
add
add
inc
cmp
pop
or
jl
pop
pop
push
js
xor
or
ljmp
sub
addb
ljmp
sub
adcb
mov
neg
sbb
js
jl
pop
pop
decb
stc
fsubrl
loop
or
jecxz
pop
rcrl
pusha
adc
or
jnp
or
fisubrl
out
in
push
push
jge
push
add
fdivl
push
adc
xchg
jg
lods
arpl
mov
sub
dec
push
mov
cld
mov
xor
stc
adc
negb
push
jae
inc
sub
xor
or
pop
dec
or
jno
mov
fwait
jb
into
mov
or
or
fidivs
jmp
add
push
cmp
inc
adc
fists
xchg
out
push
lods
hlt
pop
pop
xchg
aas
or
pop
add
xchg
inc
add
add
insb
jmp
jns
inc
loopne
push
push
cmp
jae
pop
jmp
push
push
pop
or
pop
dec
std
inc
call
sbb
xchg
push
test
pop
loopne
nop
or
pop
scas
sub
inc
cmp
pop
push
mov
dec
cmpb
mov
js
shll
xchg
ja
scas
fwait
xor
outsb
pop
pop
jmp
mov
or
pop
mov
dec
dec
adc
dec
add
test
jmp
xchg
sub
stos
mov
mov
sub
popf
sub
dec
lods
pop
hlt
jno
addb
jmp
roll
loopne
adc
push
and
inc
push
pop
adc
mov
dec
shrb
repnz
mov
push
jle
jmp
js
and
adcl
xor
push
jmp
je
int3
es
sbb
jnp
xchg
or
add
addr16
sbb
icebp
aaa
filds
ja
pop
add
jbe
mov
out
ret
jno
insb
sbb
add
jns
into
aam
lds
out
add
in
or
test
cld
arpl
mov
add
dec
inc
test
mov
inc
les
push
popa
repnz
ds
test
sub
repz
mov
mov
inc
fnsave
ljmp
add
ljmp
jg
cmc
pop
or
mov
stc
or
aam
pop
test
sbb
pop
xor
inc
not
stos
orl
or
imul
push
pop
xor
cmp
dec
mov
fstps
mov
outsb
mov
stos
popf
inc
aas
inc
enter
push
add
out
in
cmc
test
xchg
fcompl
push
lahf
push
into
in
scas
xor
enter
mov
adc
neg
inc
popf
test
je
lock
jge
mov
jae
xor
aad
aam
lret
and
or
enter
rcpps
shlb
mov
mov
cmp
sub
inc
sbb
outsl
mov
sbb
pop
data16
nop
into
aam
sahf
jle
push
or
lods
cld
mov
sub
sub
cmp
cmp
cld
add
or
xchg
cmp
mov
sub
aas
jg
mov
mov
push
stos
dec
icebp
push
add
pop
push
mov
lret
jl
jmp
push
push
sub
add
push
push
pop
push
pop
adc
inc
pop
sub
pop
mov
out
bound
jmp
add
mov
mov
repnz
cmpl
push
add
dec
shl
adc
ja
mov
repnz
push
inc
lock
aaa
mov
xor
dec
daa
and
repnz
in
cmp
mov
mov
push
cld
jmp
fnstcw
push
out
stos
inc
dec
sub
shrl
cs
push
push
lock
xchg
sbb
andb
mov
repnz
les
and
bound
cmp
jnp
add
adc
mov
sbb
inc
sbb
or
mull
adcb
lock
or
mov
dec
jns
push
sbb
bound
or
mov
test
add
call
cltd
iret
shrl
adc
adc
xor
xor
sbb
adc
push
cmpsl
sbb
pop
mov
xchg
inc
and
cmp
and
xchg
in
jecxz
add
test
loope
add
xor
or
or
arpl
or
and
arpl
mov
and
aam
inc
lret
rorb
or
sbb
sarb
mov
sub
push
mov
mov
mov
mov
sub
xor
stc
or
nop
push
adc
repnz
dec
cwtl
ljmp
xchg
inc
pop
ret
arpl
and
pop
sbb
cmpb
lret
inc
dec
dec
add
or
inc
push
sbb
shrl
cld
aam
or
sbbb
dec
mov
pop
sbb
mov
dec
inc
mov
cmp
gs
adc
call
mov
and
out
add
add
clc
cmp
mov
mov
or
fstl
nop
adc
inc
mov
pop
add
sub
mov
bound
xor
inc
rclb
adc
in
push
xor
movsb
mov
mov
addb
mov
xchg
adc
adc
les
xlat
sub
ss
dec
sbb
mov
dec
test
arpl
xchg
les
sub
add
jmp
dec
add
or
pop
push
mov
jb
addl
outsb
push
xlat
and
sbbl
pop
movsb
dec
sub
inc
cmp
adc
scas
push
xor
adc
lds
mov
dec
dec
jle
imull
add
call
je
shl
jmp
stc
sbb
dec
jo
sub
das
mov
dec
pop
add
movsl
push
jno
rorl
cmc
jb
loope
mov
push
push
mov
mov
cmpb
xchg
sub
mov
push
push
push
mov
dec
in
xchg
and
mov
pop
xor
jmp
mov
cmp
ja
push
js
repz
negb
mov
cwtl
add
mov
add
jle
ds
orl
out
xor
cs
mov
lret
pop
cwtl
mov
push
outsl
mov
mov
adc
sbb
inc
repz
inc
jmp
dec
scas
pop
inc
or
jae
inc
push
mov
dec
pop
jge
sbb
xor
mov
shrl
out
dec
js
mov
dec
mov
cmc
mov
sbb
xchg
mov
or
inc
cld
cli
pop
rclb
mov
ds
push
mov
repnz
adc
sub
and
mov
mov
pop
sub
and
jmp
orl
shr
add
adc
nop
and
and
add
jp
dec
dec
mov
shlb
fisubl
nop
popa
or
bound
jb
add
push
cmp
pop
jb
or
movsl
xchg
adc
and
add
dec
int
ret
daa
add
ficompl
popf
push
push
cmp
lds
or
pop
or
mov
or
adc
xor
addb
sar
test
jmp
sbb
xor
movsl
push
jecxz
adc
or
std
pop
repnz
jo
popf
pop
cwtl
mov
movsl
mov
xchg
lahf
gs
fcoms
push
pop
into
sub
push
sbb
xor
or
jge
jb
ss
test
pop
push
sbb
push
pop
lahf
adc
dec
sbb
mov
je
aad
sub
ja
rolb
jmp
imul
inc
repnz
popa
mov
sub
outsl
mov
push
popf
pop
push
add
xor
repnz
aas
push
neg
sub
push
or
movsl
sbb
in
or
jmp
xchg
or
out
inc
test
dec
jp
insb
pop
add
push
ja
mov
lods
push
xor
jl
ljmp
inc
neg
push
push
xor
scas
dec
rorl
cld
pop
into
and
int
leave
cmp
push
not
add
sbb
js
insl
jo
inc
jne
jle
sbb
pop
xor
mov
push
xor
loop
inc
jmp
clc
add
sub
sub
xchg
ljmp
dec
pop
repz
jp
jno
dec
ja
adc
lds
inc
das
rclb
push
pop
lods
mov
imul
cld
daa
or
jecxz
push
xor
inc
push
jmp
mov
repnz
jmp
mov
out
js
cld
sbb
xchg
icebp
and
and
mov
loopne
pop
xor
jmp
aam
sub
and
mov
cmp
test
mov
push
ret
loope
shrl
mov
and
pop
push
xor
pop
mov
rcrb
inc
xor
fwait
dec
inc
mov
mov
push
mov
push
out
stc
mov
or
pop
adc
or
scas
lret
lcall
dec
leave
loop
incb
repnz
arpl
adc
negl
and
cli
add
inc
push
inc
pop
and
pop
in
mov
mov
es
test
insl
cmp
jb
daa
mov
ror
dec
or
cli
cmp
addr16
push
or
push
jecxz
or
mov
mov
ds
adc
or
std
push
xchg
fidivl
or
mov
push
je
pusha
mov
cmp
adc
inc
add
and
data16
imul
cmpsb
adc
dec
sbb
add
jnp
fadds
pop
mov
in
dec
ds
jnp
pop
hlt
ljmp
xchg
das
pop
aad
jo
jecxz
testb
fists
cli
stc
xchg
in
or
mov
cwtl
faddp
inc
cmp
pop
sub
out
mov
dec
pusha
repnz
sbb
jno
popf
shl
push
shrl
xor
pop
ds
shl
sub
cmp
cmp
mov
in
lret
pop
sbb
xor
add
mov
mov
pop
xor
rolb
jmp
xchg
js
dec
fs
bound
mov
in
insb
lock
push
xor
icebp
inc
scas
cmp
outsb
nop
ja
cmp
nop
sub
mov
insl
xchg
xor
add
das
push
push
or
and
inc
xchg
lret
adc
aas
sarl
xorb
outsl
pusha
addr16
and
and
dec
xchg
aas
xchg
add
sub
clc
adc
or
or
jb
lock
jmp
inc
jns
sub
fsubrl
iret
pusha
push
pop
ljmp
jmp
xor
xchg
neg
out
int
mov
adc
add
inc
and
cmp
add
xchg
dec
and
jns
ficoml
dec
xchg
addl
cwtl
sub
sub
add
push
sbb
or
sub
pop
adc
jmp
jmp
incb
ficoml
mov
rol
es
jmp
xorb
pop
xlat
add
out
dec
pop
loop
mov
mov
jb
pop
sub
pushf
dec
push
mov
xchg
out
std
push
mov
cs
out
adc
cmc
mov
push
jmp
test
mov
movsl
mov
cmp
adcb
inc
dec
not
sbb
cmpsl
cmp
fisubrl
shrl
sbb
inc
movsl
rcl
not
mov
popf
bound
dec
insl
adc
pop
cmp
push
les
leave
add
dec
mov
mov
jge
das
rolb
mov
lahf
orl
mov
mov
subb
xchg
xchg
inc
inc
icebp
cmc
mov
jne
test
iret
clc
jg
insb
push
sub
xor
mov
int
pop
cwtl
or
cmp
mov
lods
ja
fildl
ljmp
mov
jo
ret
dec
idiv
pop
dec
faddl
negb
dec
pop
or
pop
xor
or
test
push
pushl
popa
mov
leave
lret
icebp
loopne
sbb
dec
push
push
pop
repnz
jb
dec
sbb
insl
mul
xchg
dec
or
and
xchg
push
push
sbb
adc
add
movsl
cld
daa
add
mov
stos
shr
imul
add
jno
adc
jmp
lock
incl
aad
dec
shlb
mov
pop
pop
jmp
in
and
in
das
rol
ja
jle
movsl
adc
sub
mov
jmp
xchg
add
cli
addb
sub
push
add
sbb
push
jne
and
sbb
mov
hlt
push
fildl
ret
scas
push
add
stos
sub
icebp
lock
fnstenv
add
jp
repnz
add
jne
pop
and
or
mov
lods
sbb
cmp
test
nop
jae
jl
out
rcrb
push
jmp
fidivs
xor
pop
outsl
mov
xchg
or
mov
ret
sbb
jmp
jbe
sub
xor
popf
fistl
add
fsubr
leave
and
cmp
add
dec
pop
pop
daa
clc
scas
pop
enter
ss
lock
cld
fwait
or
ret
mov
inc
sbb
xor
ljmp
pop
jbe
andb
ret
fs
movzbl
ds
push
int3
inc
jnp
push
movsl
pop
fimuls
and
pop
pop
push
pushl
inc
dec
call
dec
dec
nop
mov
pop
scas
je
xor
sub
adc
pop
test
shl
push
aas
mov
xchg
lds
fsubs
mov
xor
mov
push
mov
push
push
xchg
mov
bound
jno
add
xor
push
ljmp
sub
dec
xchg
jg
mov
mov
sub
mov
cmpsl
stos
scas
icebp
out
sbb
ret
add
or
jmp
inc
xor
int
pusha
hlt
out
mov
xor
pop
jle
jl
pop
jne
jmp
push
pop
cli
dec
jg
lcall
stc
pop
push
in
pop
mov
jne
ja
arpl
std
repz
jb
add
pop
fldcw
sbb
inc
adc
add
in
ds
add
les
loop
pop
lret
or
cmpsl
mov
xchg
sbb
and
loope
push
dec
inc
xchg
xchg
imul
imul
mov
adc
ja
decb
mov
sub
mov
movl
aas
xor
pop
or
jmp
test
xor
mov
mov
jle
add
or
adc
iret
xor
cmp
mov
or
sub
mov
jg
dec
or
int3
push
or
pop
pusha
mov
jmp
out
lret
cmc
push
test
push
mov
repnz
cs
inc
mov
dec
out
xor
cmp
jbe
or
sub
test
xchg
and
lahf
inc
push
sub
cmp
jmp
sahf
mov
push
fwait
or
loop
or
jmp
sub
jmp
and
inc
movsb
bound
movsb
movsl
mov
mov
popf
push
fmull
jns
shrl
fisttpll
iret
or
and
inc
test
mov
pop
and
call
mov
out
mov
aaa
scas
sub
sbb
adc
daa
loope
fldl
pop
pop
fdivp
adc
adc
mov
push
add
test
test
and
adc
les
cmp
and
je
or
mov
adcb
js
ja
cs
pop
xor
mov
or
ficompl
cmp
and
and
rclb
cmp
ljmp
out
mov
push
push
cmpsl
aad
faddl
lret
pop
xor
insb
push
dec
test
psubd
mov
push
push
mov
mov
inc
and
mov
out
jmp
subl
sub
pusha
xor
es
sbb
dec
jle
push
add
lock
mov
mov
scas
gs
sti
add
in
pushf
pop
xor
and
repz
mov
push
inc
pop
or
and
adc
adc
test
adc
clc
out
scas
mov
mov
popf
push
jno
sbb
and
popf
shrl
dec
push
cmpsb
mov
push
dec
push
push
push
mov
sbb
mov
repz
add
dec
adc
hlt
xor
mov
sahf
cs
add
xlat
in
dec
mov
push
aam
repz
sbb
sub
aas
push
movsb
jp
mov
cwtl
or
add
add
add
mov
xchg
not
aas
incl
mov
adcb
cmpb
mov
icebp
or
fsubrs
push
push
test
push
orb
mov
nop
adc
jmp
add
mov
push
mov
scas
iret
sbb
pop
jmp
mov
mov
xchg
neg
lret
mov
xor
jmp
mov
jbe
pop
inc
mov
xor
int3
repnz
and
xchg
in
inc
sub
mov
hlt
imul
push
jnp
jp
test
dec
push
pop
leave
rol
jae
xchg
aad
push
inc
pushf
cmc
inc
dec
in
or
jne
jle
xor
int3
fiadds
add
sub
sub
stc
sbb
ret
bound
pop
shlb
stc
jo
jge
cmc
loop
push
jns
cmpsl
inc
fstl
pop
ret
inc
iret
xchg
nop
imul
mov
cmovs
xor
inc
loopne
xchg
aad
mov
jne
popf
push
jmp
call
add
adc
sub
imul
adc
push
or
jge
push
mov
mov
add
sub
jmp
aaa
and
adcb
sub
repz
and
mov
das
pop
push
xchg
andb
lret
push
fldenv
adc
push
mov
pop
dec
or
or
sbb
test
aad
pop
add
mov
add
push
outsb
mov
push
xor
mov
ja
mov
jbe
ficompl
jmp
sbb
loop
dec
inc
push
push
cmp
xchg
xchg
adc
pop
fwait
pusha
in
orl
repnz
push
add
jmp
pusha
lds
cltd
pop
or
lret
push
or
mov
rclb
call
jne
push
gs
cmpsb
movsl
add
pop
xor
scas
add
sbb
or
in
repz
inc
outsb
and
and
decb
add
or
lock
cwtl
add
data16
mov
or
pop
shr
jbe
or
xor
pop
pop
test
pop
push
rcrl
sub
popf
push
mov
inc
lcall
insb
ret
adc
mov
or
and
jb
push
pop
out
dec
and
jmp
dec
repnz
inc
or
push
stos
or
xchg
enter
dec
xor
cmp
pop
mov
push
inc
push
push
out
cmp
mov
jmp
jmp
jo
inc
fildll
sub
imul
out
sarb
pushf
dec
jbe
adc
push
add
or
mov
jge
pop
imulb
scas
lock
sbb
das
pop
sub
into
or
das
inc
dec
test
pop
ljmp
push
mov
xlat
sbb
shrl
sbb
inc
mov
jg
and
in
out
sub
or
lock
and
adc
daa
pop
xor
cmp
rolb
add
std
mov
adc
push
cld
aam
mov
lea
insl
or
pop
mov
ja
mov
mov
cmpsl
lcall
shlb
movsl
ss
addb
incl
daa
popf
cmp
inc
add
dec
out
cmp
cmp
fisubs
add
repnz
mov
or
sub
xlat
mov
adc
cmp
push
cmp
icebp
pop
sub
mov
add
or
jbe
adc
cmp
inc
and
lods
cmp
jle
pop
jb
lds
mov
cld
dec
add
pop
jge
pop
out
cmp
call
in
xchg
add
lock
shll
xchg
dec
xchg
ret
sub
test
push
in
jl
pusha
ret
inc
sub
add
push
add
jbe
aam
mov
loopne
clc
scas
shrl
jmp
adc
bound
mov
hlt
jnp
insl
sub
lds
mov
push
popa
sub
pop
daa
jecxz
loop
inc
jo
and
or
popf
inc
mov
shlb
mov
mov
xchg
inc
popa
jp
std
daa
cli
andl
mov
stc
pop
int
and
pop
sbb
subb
xchg
cwtl
and
mov
cmp
arpl
or
sub
out
add
sub
add
sub
dec
daa
jne
mov
sbb
add
mov
mov
adc
xchg
divb
adc
inc
xor
mov
imul
insl
dec
add
das
push
dec
add
fmuls
and
jo
add
mov
arpl
push
sub
jo
and
das
push
jo
jne
xor
push
sbb
std
sub
pop
or
dec
cmpl
sub
adc
jmp
add
clc
push
int
movl
cmc
test
or
mov
lds
sbb
jno
xchg
daa
cwtl
ret
mov
push
pop
and
out
push
in
or
sub
sub
add
push
mov
add
loop
or
lahf
addr16
popa
repnz
sub
mov
pop
mov
or
pop
or
push
outsl
pop
sub
movsb
popf
and
mov
add
ret
pop
and
cs
jmp
lret
inc
push
push
nop
push
push
pop
push
int3
outsl
sbb
ja
dec
daa
negl
xor
jp
shll
inc
pop
addb
es
xchg
pop
sbb
and
xchg
pop
roll
cmp
subb
cmp
dec
add
or
fisttpll
lret
jne
cmpsl
mov
pop
ret
or
dec
jo
sub
outsl
daa
jne
decb
mov
pop
repz
inc
push
ret
cmp
lods
incb
cli
les
movsb
adc
scas
pop
lret
mov
sub
sbb
daa
pop
mov
loop
es
cmpl
mov
add
lea
pop
cmp
xor
mov
sub
mov
into
mov
addb
and
iret
rolb
dec
data16
ds
xchg
std
sbb
das
sub
and
pop
hlt
jbe
out
test
push
jne
popf
or
jnp
inc
lods
add
push
cmp
or
jno
cld
push
inc
jno
dec
daa
add
stos
add
into
aas
adc
in
movsl
sbb
push
stos
fld
xor
adc
dec
add
notl
fucomp
mov
push
xor
push
mov
mov
pop
cli
pop
dec
jmp
dec
add
dec
loopne
mov
sub
bswap
push
pop
pushf
loope
or
jge
push
mov
scas
and
loop
test
jo
jmp
dec
adc
enter
xorb
or
negl
xchg
add
movl
sti
fwait
dec
enter
push
xor
sub
pop
nop
sub
bound
pop
xchg
push
push
or
sbb
lcall
out
loop
add
inc
mov
dec
fimuls
cmp
jmp
mov
imul
loop
sub
push
lret
lods
in
shlb
or
leave
inc
outsl
pop
sub
psubb
or
jbe
cmp
mov
jb
pop
pop
and
pop
clc
jmp
sbb
jl
dec
inc
cmp
out
mov
aas
lret
cmp
cld
daa
push
test
lods
xor
xor
pop
inc
xchg
sub
lock
pop
in
mov
pop
js
popf
adc
jns
jmp
pop
jl
ja
push
adc
mov
in
lods
dec
adc
mov
lea
out
push
out
add
lcall
pop
mov
mov
mov
or
dec
popfw
sub
lcall
outsb
pop
or
cmp
outsl
add
jle
mov
sub
pop
pop
in
cmp
add
mov
mov
mov
add
xor
fcoms
dec
inc
ret
sar
je
add
lret
icebp
jmp
add
mov
add
jbe
dec
sub
adc
test
mov
pop
cltd
shrb
js
xchg
jge
std
insl
dec
sub
loope
sub
jae
or
sub
add
repnz
jl
xor
mov
test
pop
xor
outsl
pop
test
shrl
adc
dec
cmpl
mov
jmp
sub
lock
xlat
xchg
rcrl
loopne
stc
pop
dec
adc
cmpsl
push
lods
sub
in
jno
adc
push
je
shr
daa
aam
or
inc
add
xchg
mov
repz
dec
std
cld
dec
cmpsl
jecxz
jg
xlat
ljmp
fimull
mov
les
mov
arpl
and
push
lods
mov
adc
push
mov
pop
pop
testb
cmp
cmp
roll
push
jecxz
cmpsl
or
jmp
loop
aas
pmulhw
mov
inc
push
push
outsl
dec
inc
cs
lods
dec
dec
sti
lret
dec
popf
stos
pusha
lods
push
mov
jge
inc
push
jmp
imul
pop
jmp
or
inc
pop
loopne
push
dec
pushw
pop
or
call
ror
or
inc
sub
jg
jne
cli
lahf
pop
das
xor
push
out
jg
sti
sub
cmp
push
xchg
jmp
ret
imul
cmp
and
push
mov
jp
mov
hlt
add
outsl
inc
jge
cmc
or
sbb
cmc
rolb
mov
imul
pop
pop
jns
push
add
dec
notl
add
aad
push
mov
xchg
shll
adc
fwait
inc
icebp
and
loopne
jmp
push
mov
mov
outsb
sub
jl
popf
rcr
push
xor
popf
push
pushf
in
push
push
jnp
ret
pop
lds
add
les
mov
or
lock
xchg
adc
ss
push
sub
roll
in
cmpsb
push
shl
or
pop
das
enter
push
jmp
mov
arpl
imul
add
pop
mov
mov
push
cld
js
pop
push
clc
movsb
rcrl
sahf
out
adc
adc
in
roll
push
inc
stc
out
jecxz,pt
jg
out
jo
bound
or
test
lds
daa
in
add
repz
jnp
push
cmp
mov
dec
call
adc
fidivl
imul
icebp
into
movlps
dec
das
sbb
cmp
sub
pop
pop
push
or
jle
jp
fstl
inc
pop
lcall
xchg
pop
movnti
pop
pop
subb
pop
shlb
call
push
mov
jl
jb
fsubrs
sbbb
and
xor
mov
add
test
or
jl
not
add
rcll
pop
test
dec
and
in
xchg
mov
sub
leave
fdivrl
je
xchg
fwait
add
cmp
push
daa
popf
notb
pop
xchg
jge
xor
shrl
or
lahf
dec
sub
add
cmp
ss
les
mov
inc
call
mov
ja
cmpsb
aad
das
sub
cltd
adc
cmp
out
out
leave
and
js
add
inc
add
ja
mov
xchg
fwait
lahf
cld
or
mov
mov
lret
loop
mov
popa
adc
and
das
pop
sti
ljmp
fisttpl
inc
in
and
call
mov
lock
push
push
sbbb
pop
dec
rcrl
mov
std
insb
jb
cmpsb
jecxz
jecxz
cmp
mov
jae
loope
add
aaa
imul
pop
mov
jns
add
adc
push
int3
imul
or
test
pop
notl
or
pop
jbe
inc
sub
stos
xchg
les
pop
cmpsb
fisubl
repnz
pop
cwtl
push
or
jae
repz
je
or
and
sbb
add
xchg
push
dec
jnp
xchg
int3
add
pop
push
xor
clc
pop
shl
push
push
push
jae
ret
insb
fdiv
sbb
inc
lods
icebp
adc
repnz
in
movsl
fwait
call
js
fisubs
sbb
dec
dec
sub
mov
jno
leave
icebp
fwait
das
repnz
les
sub
lret
es
enter
add
stos
sahf
pushf
pop
dec
jmp
sbb
das
mov
inc
rol
daa
jb
addb
push
jmp
mov
aam
inc
ja
notl
test
add
inc
mov
popf
pop
add
xor
cmp
pushf
mov
into
shll
pop
fs
mov
add
in
test
dec
flds
scas
hlt
jp
mov
jns
mov
push
adcb
push
pop
push
mov
add
clc
ss
mov
lret
mov
gs
pusha
sbb
mov
jnp
nop
adc
sub
push
arpl
das
loop
sub
jmp
sti
add
ja
jg
lods
ret
call
popf
rcl
xchg
xchg
loopne
push
pop
mov
inc
es
mov
rorl
pop
mov
sti
lret
adc
xchg
roll
enter
insb
rorl
jmp
mov
cld
mov
pusha
insb
mov
xchg
or
xorb
jmp
ds
mov
rcll
pop
pusha
add
xor
pop
in
mov
loopne
mov
jmp
enter
fdivr
popa
js
lea
cmp
pop
xchg
scas
hlt
dec
test
push
jle
push
xchg
add
add
subl
dec
mov
xorb
jmp
cmp
ds
mov
xchg
lret
test
or
jmp
or
inc
shl
ret
sub
add
jmp
adc
jle
mov
lds
jnp
add
in
mov
sub
add
in
dec
jbe
push
add
in
adc
pop
jns
add
sub
pop
popf
aad
cmp
xor
dec
or
loop
jge
and
mov
jl
mov
adc
adc
xchg
xor
aaa
adc
pop
xchg
lock
mov
aas
scas
daa
negl
xchg
adc
je
jp
or
push
test
mov
adc
xchg
or
aas
xchg
cmpsl
or
inc
xor
lcall
div
movsl
in
bound
push
lret
and
ror
pop
cmpsb
push
sub
lods
xor
or
inc
mov
pop
sub
mov
add
push
ret
repnz
sbb
mov
fstl
xor
fcompp
subb
sbb
cwtl
repnz
xor
cli
push
mov
and
daa
pop
mov
pop
push
lock
dec
or
lea
call
push
mov
in
adc
shrl
test
in
in
adc
out
outsl
dec
xchg
loop
push
fmull
and
movsl
or
fistps
fwait
xchg
add
pop
test
jb
jg
sub
xchg
sub
dec
fstps
popf
dec
xor
sbb
pop
lret
lock
push
out
pop
ds
add
aas
add
pop
push
push
cmp
inc
inc
mov
dec
test
mov
jmp
adc
add
lahf
mov
pop
add
mov
fnstsw
pop
aad
xchg
test
test
add
out
js
inc
push
and
adc
mov
jmp
add
push
das
cli
jno
ss
sbb
jne
bnd
repz
dec
push
adc
cmpsl
mov
pop
rcll
cli
pop
sbb
sub
add
adc
and
mov
in
pop
mov
mov
sub
or
lods
pusha
loop
inc
loopne
fidivrl
js
lret
loope
jp
out
jmp
cld
adc
imul
sbb
clc
pop
mov
xchg
cld
push
pop
jmp
mov
cmp
jl
jle
mov
push
push
in
jmp
dec
and
add
dec
cmpsl
sbb
add
add
adc
jg
out
mulb
sbb
cld
or
bound
push
aad
sub
sub
shr
das
sub
mov
or
jmp
cmpsb
push
dec
loop
insl
dec
add
push
jb
cwtl
test
rorl
ljmp
pop
js
pop
cld
or
pop
xor
cmc
js
jg
xchg
add
jbe
cmpb
mov
xor
dec
pop
imul
out
cs
je
xlat
push
and
iret
movsl
enter
and
or
push
mov
jmp
sarb
mov
subl
adc
out
push
cmp
imul
insl
cmp
jnp
mov
and
pop
mov
xchg
rcrb
jl
inc
add
mov
push
or
add
add
mov
pop
scas
push
in
sbb
add
mov
cmp
lret
and
loope
or
jle
pop
inc
call
push
mov
fimull
push
jb
repz
xchg
les
and
jecxz
pop
push
cmp
jmp
mov
js
xchg
out
push
mov
push
push
imul
testb
dec
loop
leave
push
push
pop
loope
mov
push
lcall
dec
mov
in
inc
cmp
dec
pop
pusha
push
subl
sti
jmp
movsb
mull
enter
xor
in
ret
std
dec
pushf
mov
jmp
js
out
sub
mov
and
pop
add
ljmp
jge
push
mov
fcoml
xchg
pop
push
dec
ja
jmp
push
call
mov
add
sbb
ljmp
add
sub
mov
lcall
jmp
stos
or
das
orl
addr16
push
add
mov
pop
or
xchg
nop
mov
aas
ds
sbb
pop
pop
add
js
gs
mov
mov
mov
and
xor
cli
cs
popf
ret
jns
push
stos
insb
test
jbe
jb
push
fimull
rorl
sarb
xchg
ds
cmpsl
es
vucomiss
or
ficoms
pop
mov
adc
inc
push
jg
cmp
shr
pop
push
aad
in
xor
mulb
scas
repnz
push
adc
push
push
nop
inc
cmp
adc
stos
add
lods
dec
enter
dec
xchg
cwtl
in
mov
pushf
loope
aas
test
out
repz
ljmp
push
mov
popf
push
jp
loop
push
fdivr
inc
dec
addl
xor
or
xchg
push
mov
testb
ret
push
stos
push
ret
out
divl
xchg
mov
sub
movsl
imul
cmp
push
insb
nop
aaa
sub
cmp
add
addr16
mov
jmp
lock
sub
jl
pusha
xor
mov
ss
jl
add
or
lods
nop
out
adc
out
test
cmp
xor
or
inc
stos
jmp
mov
mov
sub
je
xchg
stos
sub
mov
mov
adc
and
sub
test
lahf
rcll
int
sub
cmp
call
loope
xchg
mov
lcall
adc
sar
and
mov
xchg
and
push
push
in
xor
repz
test
nop
push
xchg
add
push
add
sbb
repnz
xor
pop
faddp
jmp
in
pop
jnp
insl
addl
pop
cmp
sbb
cmp
fcoms
icebp
jbe
out
push
sbb
es
xchg
mov
push
push
push
mov
jno
pop
fs
adc
pop
jge
pop
mov
push
arpl
push
lock
pop
jl
adc
or
add
mov
jp
lock
add
add
sub
lcall
mov
fisubrs
xor
adc
jp
sbb
sbb
cli
jnp
mul
sbb
shll
jmp
decb
fisubl
xlat
sbb
mov
pop
push
mov
or
mov
push
into
daa
push
es
pushf
push
jmp
and
lea
pop
inc
js
fisubrs
push
dec
xchg
pop
mov
xor
leave
fldt
add
and
mov
icebp
mov
jae
or
mov
add
and
jmp
mov
xor
insb
push
pop
pop
sub
mov
cld
int
xor
daa
js
popf
jns
dec
cmc
ljmp
call
pusha
sub
aas
dec
pop
sbb
pusha
test
sub
xchg
pop
addr16
mov
test
adc
or
sbb
push
push
cli
insb
or
insl
or
fldl
push
cmp
jmp
not
or
pop
fmul
fldl2t
imul
sbb
adc
out
push
fcmovne
pop
or
inc
or
add
mov
shll
add
mov
add
push
or
adc
jecxz
xchg
ljmp
negl
repz
push
mov
dec
lret
pop
pop
enter
push
xchg
or
adc
test
jg
xor
in
xor
icebp
add
push
or
jmp
ljmp
popf
ja
fs
int3
shr
es
pop
pop
push
mov
inc
push
mov
cs
mov
pop
js
sbb
cld
cwtl
leave
jo
sub
jns
sbb
scas
sarb
add
push
stc
dec
pop
loopne
sub
mov
inc
add
scas
jl
roll
dec
or
cmp
loopne
mov
and
push
mov
leave
or
inc
es
or
ror
dec
stos
shl
jl
jle
jl
adc
jg
or
pop
adc
pop
loop
in
sub
and
adcb
jl
pusha
lret
es
inc
imul
sub
jl
or
fxch
sbb
jnp
sub
ret
push
icebp
mov
push
je
or
push
mov
xor
inc
das
pop
mov
cmp
jl
ret
and
push
mov
mov
xlat
cmp
ret
jae
repz
mov
or
jbe
mov
adc
into
push
out
or
cmp
cmc
pop
sub
repz
aaa
clc
pop
mov
in
sub
leave
pusha
and
or
jne
xor
lds
nop
jnp
cmp
jmp
sub
cmpsl
dec
jne
shlb
jge
test
sub
out
jbe
add
subb
add
push
jmp
add
imul
pop
adc
hlt
sbb
aas
dec
or
mov
enter
ljmp
xchg
test
dec
and
or
test
test
nop
inc
imul
mov
lret
pop
adc
test
sub
test
add
push
push
pusha
sarb
out
adc
or
and
jb
jbe
scas
dec
fcoms
mov
push
out
loop
push
mov
push
sub
lods
cmp
dec
mov
repnz
test
xor
jge
or
outsl
std
xchg
movsl
stos
xchg
or
mov
adc
fs
inc
scas
test
sti
test
cli
cmp
sbb
xor
jnp
jnp
xorb
popf
push
shrl
in
and
push
in
or
cmp
adc
jmp
lret
or
fwait
pop
shlb
xchg
out
es
mov
loop
lret
and
and
pop
fnstcw
push
mov
and
push
stos
cwtl
cld
notl
fcmovu
les
sub
insb
fwait
add
or
inc
xchg
not
add
outsl
lock
pop
push
inc
pop
ja
adc
loop
or
jecxz
lock
icebp
imul
loope
push
imul
loop
test
or
inc
aad
fwait
shr
inc
push
push
dec
neg
pop
jb
xchg
push
bound
push
sti
test
frstpm(287
add
in
add
pop
dec
movsb
fsubp
out
mov
dec
stos
lret
jmp
xorb
in
sbb
sub
and
cmp
pop
jg
adc
nop
addb
mov
in
xor
mov
inc
lcall
jns
dec
fyl2xp1
adc
cmp
add
stc
in
pop
ljmp
outsb
xchg
call
inc
leave
pop
daa
sub
and
insb
nop
sbbl
orb
and
adc
flds
sbb
and
lods
loop
adc
lds
sbb
movsl
imul
pop
orb
mov
pusha
in
imull
pop
scas
xor
das
jmp
mov
pop
rolb
ret
fidivs
sbbl
and
and
push
fstpl
cmc
cld
orb
inc
pushf
jnp
push
mov
push
fwait
loope
movsb
dec
mov
rolb
fisubl
add
add
test
xor
lret
pop
pop
jmp
mov
lahf
data16
mov
jl
sbb
mov
inc
jns
push
fstl
cmp
jne
sbb
cmc
mov
fcom
cwtl
outsl
add
and
pop
xlat
scas
sub
push
mov
mov
pop
xor
adc
dec
sub
jmp
add
neg
fucomip
push
test
xchg
push
lahf
js
call
sub
cmp
fisubrs
push
mov
lahf
jecxz
cld
out
adc
js
xchg
test
push
sbbl
pop
add
sbb
pop
dec
add
loopne
es
add
mov
jmp
cmpsb
sub
imul
xor
xor
adc
arpl
push
lahf
nopl
out
addl
insl
fadds
dec
jecxz
xor
and
enter
pop
in
push
push
loope
aad
pop
test
jae
mov
outsb
push
fldt
out
pop
sbb
into
aas
push
sub
pop
and
jo
dec
pop
pop
adc
subb
fwait
rcrl
adc
fnsave
movsl
sbb
popl
iret
insb
aam
inc
sub
push
fstpt
add
dec
pop
and
not
push
push
cmp
loopne
dec
push
xchg
cmp
inc
loop
lea
xor
sbb
cmp
or
inc
add
inc
mov
cli
sub
pop
pop
mov
dec
gs
ret
add
and
jno
insb
and
fcoml
jp
pop
add
mov
mov
push
mov
lods
adc
add
push
xchg
sub
dec
mov
cmpsb
repz
stos
sti
ja
loopne
pop
jl
dec
or
cld
pop
mov
xchg
dec
js
cltd
aad
mull
fadds
jmp
int3
test
ret
es
in
mov
dec
lock
repz
aas
sub
cmp
pop
mov
push
mov
xchg
icebp
repnz
aas
mov
movsb
mov
jo
and
adc
adc
cli
sub
daa
fidivrs
adc
jl
icebp
push
js
fsubrs
mov
stos
pop
dec
push
or
mov
sbb
scas
addr16
push
scas
adc
lahf
sub
adc
mov
inc
fdivrl
aas
push
imul
jae
push
add
push
push
testl
inc
mov
add
cmpsl
mov
adc
shr
add
loope
leave
outsl
xor
out
push
ret
loop
movsl
out
pushf
cltd
lahf
xchg
and
fists
pop
in
cmpsl
and
xchg
push
add
shll
out
and
push
add
jb
int3
int
add
xchg
mov
push
jo
and
sbb
xchg
jp
add
or
repnz
xor
leave
xlat
add
xchg
push
dec
dec
popa
mov
xor
jmp
in
rcl
fistpll
fsubp
pop
and
mov
jl
push
in
dec
hlt
mov
cmp
or
fimull
xor
sar
rcll
mov
loope
mov
jmp
js
clc
imul
cmc
dec
mov
shr
aad
mov
int3
or
ljmp
mov
push
sub
fwait
stos
and
dec
inc
je
aam
add
pop
or
xchg
jb
mov
adc
sub
sbbb
mov
or
stos
sub
jne
pop
das
lock
sub
push
fisubl
or
es
sbb
in
add
cmp
pop
mov
push
or
cmc
mov
cs
pop
lret
lcall
jmp
and
daa
mov
cmpsb
mov
dec
push
movsb
xchg
jo
in
pop
dec
pop
jmp
sub
xchg
subb
and
testb
pop
das
rclb
popf
add
shld
enter
push
imul
jmp
lods
movsb
loopne
ss
cld
inc
pop
pop
xor
shr
jmp
jbe
icebp
jb
cld
popa
inc
xor
daa
and
js
mov
push
fldl
jmp
out
adc
jmp
push
outsb
xchg
addr16
dec
icebp
xor
dec
mov
sub
leave
ror
mull
lods
mov
lods
mov
mov
pop
xor
mov
out
add
jb
dec
add
bound
fdivs
pop
pop
nop
rcll
gs
jecxz
xchg
in
cmp
xchg
push
jl
or
pop
hlt
push
sahf
jb
inc
mov
jge
cwtl
add
rol
mov
dec
adc
adc
or
pop
repnz
jns
cmp
add
lds
mov
bound
xor
pop
push
in
mov
leave
mov
lods
xor
pop
push
and
mov
push
in
imul
std
sub
jle
or
pop
push
in
bound
jmp
xchg
arpl
jns
or
lds
jmp
gs
xchg
or
sar
repz
cwtl
mov
outsb
pop
je
out
adc
call
ljmp
cmp
movl
pop
daa
pop
push
or
push
cmp
cli
jmp
cmp
dec
insb
push
add
dec
jnp
push
mov
mov
inc
pop
mov
jbe
sbbl
scas
and
idivb
es
es
adc
cli
mov
add
mov
adc
mov
mov
scas
sbb
add
repz
pop
mov
ret
sub
push
jecxz
sub
sub
push
mov
sub
jae
int
cmp
rcl
add
push
jmp
dec
lret
jle
cmp
cmp
jl
sbb
xor
pop
xchg
pop
outsl
test
dec
mov
fs
mov
xchg
inc
not
add
add
sub
sub
pop
and
mov
push
jne
xchg
mov
inc
stos
jo
mov
pop
mov
push
jmp
mov
jle
jmp
or
orl
out
inc
movsl
or
mov
pop
push
jmp
movhps
push
jmp
in
add
lock
add
scas
fs
cmp
push
pop
push
stc
dec
push
lahf
adc
add
test
outsl
rorl
jmp
sub
xor
xchg
into
add
test
or
push
repz
adc
and
in
xor
leave
pop
cmc
and
and
push
or
jmp
jmp
lds
bound
push
hlt
cmc
cmp
pop
lock
and
imul
insb
dec
test
dec
sub
add
pop
cmp
adc
xor
pop
pop
jo
adc
dec
jge
push
sti
mov
jg
xor
pop
dec
out
notb
mov
add
sub
subb
ja
cmpb
jle
add
jp
mov
out
sub
sub
sarb
sub
jnp
push
adc
sub
or
shrb
pop
cmp
sarl
add
sar
jne
mov
icebp
pop
ljmp
mov
dec
loop
adc
inc
and
repnz
dec
inc
incl
push
mov
je
or
arpl
cmp
inc
fidivs
ret
mov
insl
leave
in
xchg
insb
jg
cmpsl
movsl
dec
cmpb
dec
sti
lret
xor
repnz
testl
mov
in
int3
movsl
xor
or
cmp
push
or
cli
and
mov
push
pop
pop
ljmp
mov
out
dec
jge
insl
jbe
and
mov
outsl
mov
stc
push
dec
sti
push
popa
lds
mov
push
sbb
pop
fnstsw
or
or
sti
or
aaa
cmpsl
sbb
adcb
cmp
out
dec
cmp
orb
jg
push
jmp
and
fisubs
or
repnz
outsl
es
mov
xor
pop
in
pop
or
out
inc
fisttpl
push
push
popf
add
inc
xchg
stos
cld
jmp
les
xor
mov
pop
inc
add
dec
fidivrs
dec
sbb
push
mov
jnp
pop
outsb
shlb
xor
xchg
lods
or
mov
add
jae
push
addr16
pop
sub
fucomi
mov
xchg
cmpsl
xlat
mov
fdivr
jo
rorb
jo
sbb
lcall
popa
mov
sub
xor
loopne
cmp
frstor
cmpsb
enter
xorb
xchg
or
jno
add
jmp
sub
pop
mov
sub
inc
shr
pop
cli
mov
or
xchg
xor
sub
pop
leave
ljmp
int
cltd
lahf
cmp
mov
icebp
xacquire
leave
cli
dec
push
or
and
insl
inc
or
sbb
push
mov
jns
mov
das
mov
or
cmp
or
jge
adc
jbe
xchg
ret
add
xlat
adc
ss
xchg
sbb
dec
leave
and
xlat
lods
movsl
add
ljmp
cmp
mov
aad
js
shlb
out
sub
push
insb
jmp
inc
push
mov
das
ret
xchg
xor
iret
add
sub
sub
push
add
lret
fisttpl
cmp
pushf
dec
mov
push
xor
mov
clc
jmp
out
sbb
sub
test
test
cld
add
movsb
pop
push
inc
mov
jle
arpl
sbb
mov
les
mov
test
mov
loope
aas
mov
adc
mov
jge
inc
cmpb
in
in
xor
stos
fildll
iret
inc
add
add
addb
pop
xchg
call
jp
pop
pop
sub
and
mov
add
incl
aaa
add
jb
sbb
mov
pop
push
pop
or
inc
xor
daa
adc
ret
sbb
pop
fists
repnz
xor
mov
sub
add
mov
mov
xchg
int3
inc
out
mov
push
jae
xchg
loopne
dec
pop
jno
nop
xchg
push
xor
je
xchg
push
test
xor
push
sub
popa
xchg
sbb
pop
enter
popa
dec
mov
mov
mov
outsb
das
rcll
mov
jo
xor
push
mov
ss
sub
fcomip
mov
push
mov
gs
cmp
lods
jl
sti
ds
add
adc
pop
or
add
fcoms
sub
jg
push
lcall
xchg
int
lods
or
nop
pop
outsl
adc
push
pop
sub
call
and
lock
inc
ret
push
fwait
push
daa
ja
pop
xlat
add
xlat
stos
sbb
add
or
sub
enter
clc
mov
add
push
jbe
int
mov
jl
add
sbb
sbb
mov
xchg
mov
cmp
add
ds
push
push
adc
xor
outsl
xchg
mov
or
push
imul
push
lds
mov
mov
or
pop
jae
xchg
inc
insl
add
mov
push
test
subb
insl
dec
inc
popa
pop
lods
push
add
jmp
sbb
mov
jmp
sbb
mov
loope
jmp
sub
and
push
shlb
out
movsl
and
and
movsb
stos
adc
andb
clc
test
das
pop
outsb
push
in
pop
shll
mov
rclb
enter
xor
and
push
cmp
cmc
pop
leave
xor
stos
stc
jno
aas
sub
and
sub
ljmp
add
or
sti
add
or
xorb
pushf
add
push
arpl
xor
cmpsl
imul
popa
push
rolb
cltd
mov
adc
ret
cmp
adc
pop
arpl
dec
movsb
addr16
jg
nop
gs
mov
test
lret
mov
push
sub
pop
rcl
mov
and
test
xchg
out
repnz
mov
pop
or
dec
cmc
or
in
or
xor
adc
inc
sub
in
scas
xchg
dec
cli
sub
mov
or
pop
xchg
inc
out
xchg
sbb
ret
xor
cmpsl
xor
js
dec
mov
add
insb
fwait
pop
push
js
mov
add
adc
clc
dec
daa
pop
xchg
ss
iret
loop
mov
dec
xchg
nop
cld
fisttpll
incl
rcrb
dec
push
push
add
jae
mov
sub
sti
add
jmp
out
imul
mov
xchg
or
lcall
popl
stc
adc
shlb
or
dec
sbb
je
sub
add
std
mov
xor
lock
xlat
pop
fisttpll
outsl
push
fstl
outsb
or
jg
sbb
push
in
add
mov
push
sub
movsb
lock
insb
rorb
addl
sbb
mov
sahf
cmpsb
sub
jge
sub
addb
push
ret
xlat
inc
out
stc
push
add
sbb
sahf
and
mov
dec
aaa
fnstenv
lret
lds
xchg
cli
push
or
psubusw
or
loopne
or
mov
aad
scas
pop
or
or
xor
fwait
cwtl
ja
xchg
sub
mov
dec
call
xchg
ficomps
subl
jmp
mov
cld
ret
and
ljmp
sti
push
repz
cmpsl
loop
adc
sahf
add
jae
xor
add
add
shlb
pop
inc
mov
or
pop
add
dec
test
mov
dec
jecxz
jmp
adc
push
or
pusha
xor
sub
dec
mov
and
pop
mov
pop
pop
insb
popf
test
in
inc
dec
xchg
jno
out
insb
ret
shlb
add
dec
pop
sbb
subb
xor
dec
aad
dec
jmp
sub
pop
fsubs
pop
mov
xchg
push
lds
pop
dec
or
fwait
and
push
sbb
sub
shll
lods
das
pop
push
sub
cwtl
scas
clc
xchg
pushf
cmp
repnz
push
add
sub
sub
push
sti
pop
rcrb
sub
xchg
and
nop
cmp
or
mov
test
add
jmp
mov
push
pop
mov
xor
pop
mov
test
lret
sbb
scas
dec
outsb
test
in
imul
cwtl
into
xchg
xchg
jmp
out
inc
dec
sar
add
dec
jg
jnp
add
push
pop
sub
or
or
jmp
xorb
nop
sahf
jb
jo
les
jae
mov
push
push
add
mov
adc
push
aas
or
mov
movsl
mov
pop
cld
push
or
sbb
push
mov
in
idivl
faddl
out
test
out
mov
push
pop
jnp
pusha
adc
sub
out
add
jno
or
push
iret
leave
dec
in
in
imulb
cli
mov
popa
adc
push
jbe
cmc
mov
sub
popa
cmp
adc
xor
push
call
pop
sub
and
jne
add
imul
add
jmp
sbb
mov
and
add
shll
dec
jg
daa
ds
inc
cmpsl
jns
mov
xchg
bound
sub
adc
mov
push
push
test
testb
sbb
sub
add
mov
sahf
les
push
jmp
cmpsb
jmp
loop
mov
lock
push
pop
xor
dec
push
lds
pop
mov
xchg
sti
xor
mov
loopne
mov
inc
inc
cs
push
adc
popf
test
mov
addb
lahf
gs
les
enter
cmp
ret
pop
mov
jb
push
xchg
add
add
cmp
inc
aad
add
dec
or
pop
jmp
adc
add
or
outsl
mov
enter
mov
nop
je
clc
cld
jle
loope
pop
cmp
cmp
sbbb
pop
add
push
mov
test
push
xchg
lds
andb
push
pop
pop
adc
inc
add
or
or
insl
push
iret
ljmp
in
ds
or
imul
stc
es
repz
mov
jns
push
pop
mov
push
ljmp
data16
stos
or
xchg
stos
fnstcw
cmc
outsb
cmp
jmp
hlt
cld
jo
sbb
test
icebp
out
cwtl
jmp
lods
bound
pop
pop
rolb
ficoml
sub
leave
inc
or
mov
loope
push
out
inc
call
jno
add
dec
add
mov
sub
adc
loop
mov
fs
add
sub
xchg
adc
and
jg
sub
das
int3
push
push
sbb
mov
adcl
cmp
xchg
clc
mov
daa
sti
jle
push
fsubrp
repnz
pop
dec
repnz
push
mov
mov
xor
cmpsl
hlt
add
test
xchg
jne
or
or
ja
or
xchg
pop
dec
test
scas
fisubrl
add
push
sub
push
push
icebp
xor
and
mov
int3
cmp
sub
sti
cmpb
jg
adc
or
and
pop
sub
and
jecxz
and
dec
inc
jmp
and
repnz
imull
mov
push
xor
adc
rcll
pop
push
mov
add
loope
imul
add
mov
pop
aas
jnp
adc
or
fidivs
lret
xchg
jo
jmp
mov
stos
inc
pushf
inc
cmp
movlps
in
test
mov
cmc
adc
dec
sub
testl
jne
xchg
lock
add
cmp
mov
mov
adc
or
sub
insl
xchg
pushf
mov
pop
sahf
ss
jge
shrb
inc
mov
push
test
push
sub
in
mov
scas
jge
mov
cmpsl
add
mov
xorl
clc
add
dec
lahf
pop
fnstcw
or
mov
sarb
fwait
jl
push
jmp
es
adc
xchg
cld
inc
pop
mov
mov
js
test
scas
and
add
clc
movsb
es
insl
orl
or
cmpsl
xor
push
orl
push
mov
mov
jmp
cmc
std
dec
rolb
jmp
clc
mov
andb
jp
push
out
sbb
pop
sub
or
push
dec
xchg
sbb
xor
xchg
and
cmp
or
incl
rcrl
add
popa
cmp
fs
inc
xor
hlt
pop
mov
ljmp
inc
sti
mov
xorl
std
pop
xchg
push
or
jecxz
sti
jno
sbb
sub
mov
lcall
push
adc
aas
cmc
shlb
sub
pop
sbb
scas
push
fwait
and
ss
outsl
cmpsl
stos
lret
sub
cmp
pop
cli
mov
call
test
or
push
or
daa
movsb
loop
hlt
std
sub
sub
insb
mov
loope
adc
pop
pop
xor
pop
in
lods
pop
pop
es
in
push
or
cwtl
pop
xor
pop
jno
scas
adc
js
sub
jmp
pop
imul
ljmp
push
xchg
hlt
inc
pop
addr16
mov
ret
ud2
jmp
lcall
sub
ret
pop
bound
cld
push
icebp
push
pop
jo
test
jecxz
dec
sti
cwtl
inc
sub
cmc
xor
or
mov
or
popf
sbb
pop
dec
sub
push
data16
adc
jmp
sbb
jb
je
xchg
mov
pop
mov
add
sbb
mov
not
fisttps
gs
pop
add
push
ret
sub
cmp
jle
mov
daa
add
aas
inc
ds
dec
jge
or
jmp
push
sub
movsl
xchg
loope
scas
into
push
pop
mov
movsb
cmpsb
adc
mov
in
inc
int
jl
loope
jle
inc
loope
push
jp
cmpb
stos
inc
call
push
lods
aam
into
lds
jl
out
fldcw
mov
xor
in
jmp
rorl
jg
push
ret
mov
jb
popa
jbe
sub
pop
add
pop
xchg
jae
dec
nop
or
insb
mov
popf
push
pop
div
daa
out
ret
outsb
pop
and
cmp
mov
imul
sub
sub
jo
add
rolb
sub
movsb
jmp
dec
jmp
pop
push
jnp
pop
or
push
orl
test
lods
jle
inc
aad
xlat
data16
or
jmp
xor
das
add
add
adc
aaa
xor
xchg
mov
lods
xor
sbb
add
push
gs
or
aad
popf
mov
xor
loop
leave
push
push
imul
jge
adc
dec
jmp
dec
ds
outsb
push
xchg
jmp
mov
jmp
aaa
xor
xor
fnsave
cld
dec
addb
cwtl
mov
leave
adc
cld
das
sti
cmp
std
ljmp
mov
sahf
rcrl
shll
fprem
mov
jnp
int
xchg
jbe
out
or
mov
inc
add
mov
jecxz
dec
sbb
mov
call
ds
push
pop
mov
js
roll
imul
mov
add
rolb
xchg
mov
stos
and
daa
mov
mov
fs
pop
cmpsb
cmp
outsb
add
cmp
ja
incl
or
dec
jmp
mov
test
dec
dec
pop
movsb
shr
daa
adc
jnp
lahf
push
pop
push
push
jns
cmp
sub
push
pop
push
jmp
jnp
dec
mov
stos
in
stos
adc
data16
insl
and
daa
pop
data16
fwait
add
aaa
imul
test
sbb
fcomps
cwtl
dec
dec
stc
add
inc
les
clc
rcll
pop
push
ljmp
xor
mov
xchg
push
xchg
sub
insb
int
sarb
cmp
lahf
insb
cmpsb
and
xor
fsubrs
xor
ds
mov
daa
jmp
push
mov
popf
pop
adc
bound
pop
imul
or
je
mov
push
adc
inc
pusha
jnp
jb
pop
fstps
add
push
popa
outsb
push
cmp
push
inc
sub
mov
pop
jge
sub
push
mov
dec
jmp
inc
add
push
mov
or
sub
xor
dec
iret
xorl
jmp
lods
mov
add
or
push
jns
imul
mov
rclb
mov
cmovo
pusha
scas
popf
movsl
icebp
das
and
adc
lods
cmp
les
pop
pop
ljmp
cmp
and
xchg
xorb
cmc
fists
mov
adc
in
or
pop
or
sbb
mov
mov
aas
fstpt
std
xor
pop
divb
rcr
ret
push
jmp
rep
popa
ljmp
inc
inc
push
test
jl
movsl
mov
cmpsl
test
stos
movsl
imul
lods
push
addr16
or
rcr
mov
test
sti
into
xchg
cmp
lods
sbb
sub
dec
movsb
add
inc
outsl
imul
or
mov
mov
mov
inc
xor
lahf
enter
ljmp
jae
repnz
adc
aad
dec
pop
mov
into
sub
sub
dec
jae
push
dec
pop
mov
push
or
adc
sub
adcl
pop
stc
roll
dec
pop
mov
loop
out
and
xchg
test
push
adc
push
orb
arpl
pop
jns
add
aaa
jmp
fs
inc
xor
jo
fwait
lds
jg
push
jmp
hlt
insb
push
lods
testl
inc
jmp
enter
enter
pop
sub
jb
xor
dec
or
dec
cmpb
and
pop
test
add
pop
push
js
in
inc
es
xor
dec
jmp
cmp
sub
adc
mov
call
add
ds
imul
pop
jmp
stos
out
or
jg
or
cmp
daa
jp
jl
mov
add
push
pop
cld
xor
lods
lret
mov
fwait
push
cmp
and
jae
movsb
stos
mov
jp
dec
jmp
xchg
push
pop
xor
pop
and
dec
imul
adc
xor
in
jmp
es
xchg
std
push
cmp
das
mov
fdivrl
jp
shll
xchg
testb
pop
and
and
pusha
add
jmp
clc
or
addb
inc
daa
pop
filds
adc
pop
jge
mov
scas
pop
inc
jmp
lret
negb
fcmovbe
ljmp
sbb
and
lcall
jo
push
sub
adcb
mov
xor
mov
ficompl
lods
icebp
into
sub
fadds
sub
aaa
pushf
push
cmp
cmpb
repnz
xor
movsl
fisttpll
push
push
pop
sbb
add
dec
and
jno
adc
push
adc
jecxz
inc
jl
andb
cmp
std
rclb
cli
xchg
pop
dec
call
std
mov
add
sbbl
push
mov
and
or
scas
lret
iret
nop
sub
cmp
pop
jnp
sti
les
nop
push
add
or
lea
xchg
fmul
mov
imul
push
sub
movb
ds
je
nop
or
pop
call
mov
or
fwait
add
lret
xchg
pop
mov
mov
jnp
cmp
dec
mov
adc
loope
pop
insb
mov
or
or
jl
sub
inc
outsl
push
add
ss
sbb
pop
sbb
push
push
jp
cmp
icebp
dec
outsl
into
pop
dec
ljmp
inc
out
sub
mov
mov
jno
mov
js
or
ret
or
mov
add
imul
pop
lahf
xor
jae
mov
popf
xchg
pop
neg
orb
mov
repz
mov
stos
jmp
sub
add
negl
shlb
dec
cmp
lods
add
lock
pop
push
stc
out
push
cltd
in
lods
fidivrl
pop
push
popa
push
jle
hlt
add
cmp
sub
jl
cmp
pop
xchg
dec
pop
or
in
popa
xorl
pop
push
sbbb
rolb
in
call
imul
mov
ljmp
es
sarl
rcll
push
jecxz
mov
std
mov
mov
xchg
adc
rorb
out
movsb
fildl
jno
fs
sbb
sti
dec
mov
push
add
imul
pop
aam
xor
inc
test
popf
add
pop
adc
adc
mov
xchg
popf
or
rcrl
xchg
ret
out
push
or
jmp
or
int
mov
add
xor
aam
xor
arpl
test
jae
cmp
mov
icebp
cwtl
aas
mov
xchg
divl
jle
ret
shrl
or
stc
cmc
add
pop
push
mov
or
das
outsb
push
mov
pop
pop
xor
aad
jg
or
mov
push
gs
test
add
xorl
aas
mov
sbb
add
mov
sub
add
je
in
ss
xlat
xchg
add
pop
or
cs
fnstenv
mov
inc
lods
push
bnd
das
push
pop
lock
and
and
hlt
mov
loopne
xor
jg
xchg
and
out
jo
cwtl
mov
xor
pop
in
add
pop
pop
mov
cmpsl
lods
dec
dec
push
sub
add
push
add
mov
insl
add
add
push
mov
rcrb
dec
mov
popf
xchg
pop
mov
mov
xlat
mov
pop
pop
pop
sub
test
pop
and
jecxz
and
lret
or
sbb
cmp
xchg
push
sbb
xor
jg
in
jbe
pop
pop
jg
std
lods
jmp
xchg
and
repnz
sub
into
stc
imul
mov
pop
add
pop
inc
or
xchg
gs
and
dec
fucomi
sub
push
scas
fadds
push
jg
xor
aad
add
dec
jl
fdiv
push
mov
clc
push
stc
push
sub
cld
dec
cmp
clc
daa
jp
fidivrs
mov
es
jmp
or
jl
daa
mov
nop
pop
shll
mov
sub
cld
pop
pushf
call
xchg
ret
outsl
mov
int3
scas
mov
dec
cs
or
jl
sahf
ret
mov
xchg
pop
mov
mov
pop
dec
mov
mov
push
out
pop
pop
movsl
out
imul
jbe
out
mov
icebp
icebp
int
jo
cmp
add
enter
inc
pop
test
inc
mov
arpl
pop
push
mov
mov
inc
subb
jno
xchg
dec
inc
pushf
mov
and
in
rorl
xor
daa
dec
insl
fs
ljmp
nop
mov
addr16
dec
adc
iret
add
sti
test
movsl
scas
mov
out
sub
cld
orb
shrb
iret
and
jbe
dec
jne
jle
iret
or
rol
lcall
popf
out
shrb
mov
jmp
mov
xchg
mov
fildll
push
xchg
popa
loop
cld
sbb
jl
hlt
aad
jmp
in
cs
adc
cmp
aad
jmp
fstpl
xor
cld
shl
sub
push
mov
and
mov
es
dec
xor
add
call
or
fcomps
adc
bound
cmp
jmp
aas
xlat
cvtdq2ps
sub
add
jno
ss
jmp
ffreep
out
and
xor
scas
js
mov
cld
adc
push
dec
dec
adc
rol
jecxz
or
pop
inc
mov
adc
pop
pop
repnz
call
ds
xor
xchg
leave
adc
hlt
js
mov
mov
mov
sub
incl
rorb
addb
cs
dec
and
mov
ret
jg
out
repnz
add
pop
pop
xor
sub
adc
ret
add
adc
dec
adc
or
mulps
pop
call
into
scas
add
les
inc
shrb
jae
sub
aam
pop
cmp
lcall
mov
push
mov
dec
neg
add
cltd
inc
dec
xor
cs
lret
das
or
push
push
loopne
dec
xchg
loopne
xchg
aam
imul
jge
mov
scas
dec
xor
lret
xor
add
xor
roll
cmp
mov
imul
xchg
xchg
adc
idivb
loop
or
push
addl
or
add
popf
cmc
icebp
xchg
test
add
in
imul
dec
add
adc
cmpsl
rolb
dec
imul
add
ljmp
or
mov
rclb
sub
cmp
inc
hlt
push
mov
sbb
inc
call
sub
fidivl
mov
lds
loope
jg
ljmp
and
pop
pop
jle
jne
add
pop
mov
jae
mov
and
inc
cs
and
xchg
add
aad
sbb
push
popf
push
push
add
and
add
inc
mov
mov
imul
sub
stc
sbb
xchg
push
jp
sub
out
lods
xchg
fabs
jmp
ret
lret
in
add
mov
pop
push
notl
lcall
lea
ja
iret
and
jmp
jne
subb
outsb
sbb
add
pop
out
mov
cmc
hlt
push
mov
leave
cwtl
stos
add
dec
xchg
movsl
ljmp
int
loopne
addr16
dec
mov
ucomiss
test
test
pop
pop
sbb
adc
add
cmpsb
nop
scas
and
push
fadds
loopne
pop
xchg
fwait
test
sub
psllw
add
ljmp
pop
fistl
sti
into
push
jmp
dec
popa
xor
icebp
test
repnz
sub
std
aas
adc
out
shrb
and
lods
mov
icebp
in
sub
cs
add
sub
inc
lcall
push
and
daa
pop
in
sub
imul
inc
nop
push
addr16
xor
aas
jmp
xchg
jo
call
push
fisubs
add
and
pop
stc
cwtl
dec
enter
sub
or
aaa
mov
sub
inc
movsl
dec
xor
bound
inc
add
push
call
das
out
sub
jnp
pop
mov
mov
mov
pop
xchg
in
xchg
push
lret
mov
mov
mov
stos
ljmp
add
lods
push
fwait
add
repnz
test
leave
push
imul
jl
sti
sub
add
push
push
sub
push
andb
sub
add
push
es
mov
adc
fdivl
inc
jmp
ret
movsl
ficomps
leave
xlat
sbb
jns
mov
mov
xor
mov
lret
or
inc
imul
push
pop
push
or
movsb
dec
scas
je
lret
int3
sub
xchg
sbb
dec
or
add
ffree
pushf
or
out
or
add
push
xor
cli
clc
shl
push
jnp
lods
sub
mov
dec
push
pushf
cmc
cld
lcall
out
xchg
jne
orb
cld
dec
pop
push
push
jmp
pop
push
mov
lea
xchg
or
fildll
pop
gs
stos
subb
push
sbb
enter
out
imul
das
gs
jb
xor
xchg
push
cli
jmp
fwait
adc
aad
repnz
les
adc
out
jecxz
add
bnd
adc
dec
nop
mov
push
push
push
pop
push
inc
jp
xchg
out
jecxz
push
cmp
jecxz
and
mov
add
add
jae
sub
sub
jmp
jmp
ficomps
test
and
mov
mov
jno
push
cmp
jno
pop
mov
sub
adc
mov
inc
cs
inc
mov
stos
mov
jno
mov
shr
push
fcoms
ds
mul
jbe
dec
dec
je
add
inc
cwtl
dec
scas
jp
pop
xlat
dec
adc
aad
jge
outsl
mov
enter
inc
call
outsl
xor
push
sbb
push
into
inc
insl
mov
and
add
mov
ja
int3
lcall
call
into
popa
adc
dec
sub
inc
shll
push
push
int3
js
add
mov
mov
mov
mov
addb
lods
adc
scas
mov
roll
addb
add
or
popf
adc
pop
test
leave
mov
ficomps
cs
test
daa
pop
icebp
popl
mov
dec
fucomp
test
or
push
mov
add
fwait
vpsubusw
mov
loopne
call
dec
imul
xor
adc
jp
js
aas
cmpsb
inc
or
mov
cltd
daa
sbb
ds
mov
fildll
and
out
or
adc
addl
adc
or
push
out
std
pop
ljmp
push
sub
dec
bound
add
jmp
mov
or
rorl
call
pop
sub
pop
aam
rcll
push
ret
or
aam
cmp
into
jo
loope
sub
pusha
daa
sub
mov
stos
xor
insb
syscall
mov
xchg
inc
cmp
push
jmp
pop
sti
lret
std
or
dec
mov
repz
stos
pop
out
test
or
imul
inc
mov
rorb
dec
das
sbb
fcom
int3
dec
inc
adc
arpl
push
je
sbb
xor
clc
cmp
add
push
mov
pcmpeqd
rol
xchg
or
push
jmp
sbb
pop
push
pop
popf
push
push
jmp
add
pusha
and
pop
mov
lods
pop
xor
or
push
lods
fldl
or
lods
pop
in
scas
addb
jmp
and
jge
mov
jns
and
add
lds
repnz
xchg
xorb
int
pop
cmc
stos
add
jmp
xchg
pop
and
add
daa
stc
out
add
dec
mov
mov
adc
jo
xor
mov
sub
loop
cmp
ja
and
adc
lods
sbbb
mov
adc
mov
mov
lcall
mov
rcrb
cwtl
mov
inc
xor
jmp
test
mov
es
in
adc
push
scas
insb
fdiv
loop
sbb
aas
adcl
dec
inc
pop
es
xor
pop
cmp
pop
test
jb
jae
jmp
jecxz
jp
add
xor
andb
inc
fwait
push
inc
mov
pop
mov
xchg
cmp
jmp
add
sub
jle
ret
flds
stos
cli
jbe
pop
ja
test
imull
outsb
mov
pusha
imul
ret
repnz
repz
xchg
data16
stc
lahf
cwtl
cmp
xor
pusha
test
dec
push
and
mov
xor
mov
add
mov
or
jecxz
sub
jp
or
and
loopne
or
pop
xchg
inc
std
das
mov
int
push
inc
sub
mov
inc
add
add
pop
scas
repz
or
lods
adc
out
rolb
jnp
insb
pop
mov
lret
push
push
add
and
cld
push
push
inc
xchg
cmp
faddl
repnz
scas
popa
out
xchg
jp
pop
test
jb
cs
test
dec
inc
adc
push
push
bound
fdivl
fldl
add
push
pop
inc
shr
in
jle
cmp
aaa
push
sahf
xor
cmc
pop
and
mov
cmpsl
pop
sti
imul
inc
mov
cmpxchg8b
pop
dec
adc
outsb
sub
and
mov
inc
or
pop
mov
loop
jns
test
fwait
or
sub
add
inc
or
xor
stc
and
jl
js
pop
scas
sub
jmp
adc
adc
mov
xchg
les
cmp
cli
or
sub
loop
pop
sub
mov
add
push
jbe
cmp
ljmp
fcomps
add
sahf
inc
imul
pop
jle
push
popf
imull
fiaddl
sbb
dec
jl
inc
rcrl
bound
pop
inc
mov
pop
pop
mov
mov
mov
xchg
pop
int3
pop
cmc
das
or
cmc
dec
subl
inc
pop
lods
arpl
add
lds
sub
je
or
cmp
dec
hlt
out
xchg
mov
ds
popf
sub
cwtl
xor
pop
pop
imul
push
xchg
xchg
add
mov
jmp
add
dec
lret
push
sub
andb
lcall
and
sub
enter
inc
jmp
in
outsl
test
mov
add
jno
outsl
pop
out
clc
imul
xchg
dec
aad
adc
lock
pop
add
loopne
inc
sahf
orb
sub
cld
jno
mov
inc
sahf
or
pop
dec
aad
jns
ret
pop
inc
push
push
xchg
add
or
sub
ljmp
push
cmp
adc
rorb
mov
pop
popf
pop
mov
jno
sbb
outsl
dec
fimull
mov
shlb
sub
gs
xchg
jae
jo
cmp
movsl
cmp
inc
shr
push
push
mov
mov
sbb
lock
sub
fsubp
cmp
sub
enter
nop
jnp
mov
push
mov
dec
pusha
cmp
js
in
mov
pop
pop
jbe
out
pop
xlat
out
scas
insb
cmp
pop
sub
fucomip
add
jmp
js
jns
pop
in
sub
xlat
mov
and
jmp
add
jecxz
repz
mov
pop
add
jmp
rcrb
in
mov
push
add
fdivs
pop
push
sub
mov
out
mov
pusha
cmp
mov
jbe
dec
adc
jne
out
movsb
mov
das
cmp
cmpsb
add
into
jmp
jne
cmp
arpl
ret
mov
push
mov
and
jbe
and
mov
push
and
adc
in
push
pop
aas
push
jmp
test
push
aad
cmp
pop
fdivl
inc
int
xor
and
inc
clc
daa
sarl
ja
xor
add
jg
loop
ret
sbb
mov
out
add
cs
shl
ja
mov
mov
mov
mov
mov
dec
es
ja
add
or
and
js
xchg
pop
xlat
fcmovbe
mov
stc
in
xor
mov
mov
add
mov
dec
xchg
je
mov
fdivs
movsb
jne
cmc
push
lods
sub
dec
fmull
pop
push
lahf
in
addr16
loop
roll
inc
dec
xchg
loopne
cmp
cmp
mov
and
pop
shrb
loopne
out
cmpsb
in
add
push
lods
or
xor
pop
sti
jno
jg
push
mov
xchg
sbb
xor
sbb
jne
inc
sub
scas
xorb
and
pop
push
stos
mov
or
mov
push
jmp
xlat
lret
pop
cmp
push
dec
stos
shrb
and
sub
fstps
and
cs
cs
sbb
in
es
lahf
stc
pop
fimuls
and
sub
outsb
cs
pop
inc
mov
out
std
andb
in
jg
and
or
xchg
inc
dec
dec
xor
scas
into
adc
and
stc
inc
jg
call
pop
dec
add
mov
out
dec
sbb
and
outsb
push
and
bound
test
or
in
test
push
jbe
jo
jbe
test
mov
dec
and
gs
or
add
stc
loop
sub
pushf
push
das
nop
aad
mov
or
fwait
and
in
lahf
add
in
cli
das
idivb
or
jmp
push
out
sahf
out
dec
bound
cwtl
fdivrl
in
cmp
fs
sub
test
jmp
lods
push
jmp
pop
into
cmp
sub
mov
inc
adc
test
xchg
mov
add
xchg
rcl
mov
fisttpl
sarb
pop
mov
inc
mov
testb
lret
shl
rcr
dec
and
jno
insb
sub
mov
arpl
dec
xor
or
lahf
adc
mov
icebp
cmp
mov
pop
jl
sbb
inc
es
sub
add
jns
dec
cmovs
lret
sub
add
mov
sar
mov
insb
push
pop
sbbb
xor
adc
jle
or
jecxz
addl
adc
dec
pop
cmp
sbb
sub
xor
pop
in
add
fcoms
std
push
push
or
mov
or
dec
ljmp
pop
jo
rcll
faddl
mov
dec
daa
jecxz
jno
or
pop
add
push
push
pop
push
jecxz
addb
cwtl
pop
jmp
push
push
push
cld
addl
sub
dec
xchg
movsl
sbb
mov
add
or
or
mov
outsb
popf
pop
push
sub
aas
mov
rcr
dec
fdivr
fwait
jae
stos
ret
dec
lods
dec
sti
jge
lods
sbbb
push
adc
jmp
scas
add
push
bound
iret
neg
mov
mov
sub
cmp
pusha
aaa
add
shll
pop
jo
jmp
inc
out
nop
test
dec
mov
fwait
xor
pop
jle
sub
hlt
mov
sbb
mov
test
fdivrl
loopne
push
xor
ljmp
cmp
pop
sub
jo
push
or
adc
jl
xor
and
push
loop
or
dec
jg
daa
sub
push
sbb
cmp
push
push
fucom
mov
shlb
add
mov
aam
stos
movsb
fs
mov
cmp
es
mov
push
jbe
shr
and
push
scas
pop
data16
adc
cli
in
mov
pop
nop
cmpsl
jle
lahf
ret
fcoml
jo
dec
mov
rclb
push
gs
outsb
sub
rep
das
jno
fcomip
arpl
outsb
loop
push
dec
sub
inc
std
and
jbe
in
jno
push
leave
dec
fistpll
mov
mov
xlat
push
jb
inc
or
mov
sub
popa
loope
jg
ds
jge
cltd
jp
sub
and
sbb
inc
js
add
jmp
out
pop
mov
data16
int
aas
or
sbb
jbe
add
mov
test
test
push
insl
stos
cmp
mov
pop
jg
daa
inc
or
out
imul
les
cld
repnz
out
sub
jp
cli
icebp
pop
das
cmpb
js
cmpps
xchg
jmp
jg
daa
leave
sbbb
sbb
lret
incl
icebp
jmp
mov
in
mov
test
imull
stos
xor
xorb
dec
out
adc
out
xchg
das
daa
fists
popf
fwait
mov
ss
and
adc
test
popa
call
clc
mov
je
js
idivl
fwait
push
pusha
mov
fists
add
pusha
push
nop
xchg
jp
mov
nop
int3
nop
jbe
dec
pop
pop
loop
shlb
sarl
jecxz
dec
add
cmp
add
pop
shr
ret
mov
xor
clc
jmp
mov
cli
sarl
test
jecxz
push
rol
inc
push
jmp
jp
pusha
lods
into
fnsave
push
pop
sahf
pop
mov
hlt
dec
cli
mov
repnz
jno
notl
sub
aad
jne
ds
sub
cmp
adc
std
rclb
fistl
fcmove
mov
add
mov
enter
push
xchg
jns
das
jmp
push
pop
push
dec
mov
add
gs
push
sub
loop
idivl
dec
imul
and
mov
push
and
adc
sbb
stos
cmpsb
dec
mov
xor
jbe
add
std
and
repz
fcomps
or
add
pop
adc
mov
in
push
shl
pop
jp
adc
pop
xchg
cmpsb
mov
dec
push
pop
test
push
rcrl
mov
je
and
dec
sti
mov
push
ljmp
cmpsb
or
add
inc
add
sub
pop
push
shll
dec
xor
loopne
rcrb
add
sti
adcl
adc
inc
pusha
inc
pusha
ret
jmp
sbb
rcrb
xchg
fcmove
sub
decl
jge
data16
dec
cmp
es
jmp
xchg
cmp
push
add
ds
sub
dec
mov
push
jmp
pop
adc
cli
push
cmpsb
mov
into
mov
mov
aam
inc
mov
lock
mov
or
xchg
inc
flds
add
xchg
sarl
pop
push
adc
rorb
inc
xchg
xchg
add
cmp
or
pop
jg
cmpsb
pop
clc
in
xchg
mov
cmpb
sbb
mov
ds
neg
jmp
xchg
mov
pop
jge
add
jmp
das
incl
push
push
das
cmp
aam
add
popa
jns
scas
loope
jne
fstpl
mov
adc
push
jmpw
rcrl
cld
stos
jmp
loop
xor
test
xlat
add
xor
bound
adc
pop
mov
and
add
sub
pop
mov
or
aas
mov
xlat
pop
lods
and
cmp
sub
pop
xor
mov
test
inc
addb
sub
or
ret
or
mov
adc
stos
in
int
sub
jmp
test
inc
aaa
subb
mov
mov
cmp
fs
cmc
pop
ret
rolb
cmp
pop
jmp
pop
hlt
push
push
xor
es
add
jns
add
loope
xor
in
lret
push
push
pop
pop
jbe
xchg
pop
stos
iret
push
dec
mov
adc
push
sub
push
mov
daa
jecxz
xchg
adc
pop
mov
aad
inc
push
inc
push
sbb
aam
daa
sub
or
es
jmp
cmp
mov
adc
sbb
out
dec
orb
rorb
and
ret
stos
mov
fmuls
sbb
or
dec
cmpsb
xor
mov
imul
mov
mov
sbb
test
clc
and
add
nop
mov
add
dec
and
push
pop
xchg
vandps
xchg
xor
mov
mov
sub
mov
enter
aas
sub
dec
and
adc
xchg
push
popf
xchg
outsl
and
int3
push
xchg
adc
int3
in
add
bound
or
insb
push
pop
out
sub
dec
pop
les
leave
out
ja
dec
mov
sub
sbb
jns
mov
cli
push
xor
or
dec
push
push
cmc
push
addr16
pop
push
mov
push
pop
lret
add
or
fistpll
bound
mov
pop
inc
adc
lahf
xchg
jp
lds
fisttpll
fucomp
adc
cltd
lahf
mov
pop
push
add
mov
nop
or
pop
mov
adcb
cwtl
leave
sbb
inc
hlt
cwtl
jb
stos
jne
add
fs
mov
bound
bound
jmp
nop
inc
push
loope
pop
ret
ds
pop
push
push
add
pusha
mov
inc
test
add
pop
pop
ror
imul
dec
sbb
adc
inc
ss
jno
out
in
and
push
cmp
add
mov
popa
sub
push
rclb
push
push
ret
loope
sbb
cld
mov
stc
adc
xchg
mov
push
dec
add
mov
iret
or
loope
mov
xchg
out
pop
pop
sub
fiadds
lcall
dec
add
movsl
xchg
mov
fisubrs
mov
push
add
sub
pop
xor
push
add
cmp
cmpsb
mov
mov
ret
pop
fcompl
std
repnz
sub
pusha
mov
cmp
lret
addr16
push
stc
icebp
fnstsw
pop
sub
inc
movsl
jbe
loopne
iret
push
psubsb
mov
lahf
push
cmc
mov
cmc
or
mov
pop
jb
sub
pop
dec
mov
sbb
add
in
mov
or
sub
inc
xor
mov
js
lret
mov
std
mov
add
cmp
or
adc
push
jo
out
add
shl
mov
in
mov
or
pop
das
and
add
mov
sbb
sub
sbb
popf
scas
add
sub
sub
sbb
daa
xlat
inc
fmull
mov
mull
popa
push
ret
mov
out
incb
pop
neg
das
add
cld
dec
xor
aaa
jmp
push
xorl
out
jnp
test
fiadds
mov
adc
ret
lea
adc
and
les
inc
push
pop
arpl
mov
adc
pop
outsl
pop
xor
out
jne
loopne
imul
das
ficomps
fcoml
inc
mov
cmp
and
and
out
ficompl
dec
jno
pop
gs
daa
aad
ret
xor
jecxz,pn
popa
out
jmp
xchg
and
loopne
dec
pop
notb
jl
add
dec
sub
fnstsw
add
or
dec
mov
ret
pop
jno
mov
adc
ljmp
push
mov
xor
add
in
cmc
rcll
pop
xchg
lock
adc
xchg
cmp
mov
mov
pop
xor
inc
pop
pop
cmp
sub
adc
lret
bound
xlat
fsts
inc
push
and
out
cmpsb
popf
pushf
jge
pop
and
pop
outsl
add
cmp
jns
imul
sub
xor
out
cmpl
scas
pop
mov
mov
cmpsb
or
lret
ret
nop
outsl
jmp
hlt
lcall
ret
cli
mov
push
fisttps
mov
in
dec
pop
std
fsub
jmp
push
fwait
mov
mov
mov
pop
repz
daa
enter
mov
push
mov
jnp
push
jl
pop
pop
push
sarl
sbbl
and
mov
adc
pop
sub
mov
jbe
shr
cwtl
repz
adc
add
mov
stos
lods
xchg
jmp
sub
mov
inc
mov
divl
sbb
mov
lock
or
dec
sub
adc
mov
out
je
rorb
or
fistps
and
mov
sub
add
sahf
arpl
gs
nop
jecxz
clc
mov
ljmp
icebp
mov
icebp
fcoms
fidivl
jns
loope
mov
sbb
adc
int
int3
gs
pop
mov
out
divl
dec
cmc
jmp
mov
cmp
push
lret
rorl
jmp
lds
ret
add
nop
add
or
js
mov
or
pop
adc
mov
insl
xor
adc
adc
movsb
shr
rorb
cmc
je
add
jge
sbb
addb
pop
outsb
jg
or
outsl
sub
dec
dec
enter
xor
nop
mov
push
popl
mov
adc
adc
dec
shrb
add
cmp
dec
mov
mov
fadd
fldl
iret
and
pop
jge
xor
and
pop
clc
aas
adc
mov
and
push
dec
in
sub
jb
jmp
cmp
push
jg
and
in
movsl
mov
iret
mov
shr
ja
xchg
data16
roll
mov
enter
pop
xor
hlt
mov
shr
inc
sbb
mov
sub
shr
sub
or
xor
or
inc
xor
pop
lret
imul
in
mov
hlt
aaa
fldl
dec
cmpsl
sbb
je
out
add
cmp
adc
jne
or
scas
sub
pop
mov
mov
pop
lods
pop
mov
cltd
fsubs
loopne
adc
jmp
mov
pop
fiadds
aas
subl
test
pop
mov
arpl
into
cs
movsl
hlt
adc
aad
jp
and
adc
add
scas
xlat
sub
in
add
idivl
loop
sbb
or
sub
add
ljmp
in
icebp
divb
insb
jne
sub
adc
xor
sbb
sub
iret
loopne
and
add
jmp
and
outsb
inc
pop
ja
pop
ds
xchg
or
pop
andb
push
push
mov
mov
sbb
add
and
mov
pop
add
push
popa
clc
mov
inc
mov
push
or
or
or
adc
jge
pop
sbb
sub
ljmp
mov
not
push
sbb
jno
jbe
dec
jb
add
jl
push
movsb
inc
daa
push
adc
sbb
xor
sub
cmc
addb
adc
div
adc
sbb
fdivl
pop
loope
xchg
adc
int3
sbb
and
add
call
sbb
shrl
les
sub
adcb
pop
push
mov
aas
xor
or
scas
sbb
movsl
lods
in
mov
call
xor
mov
xor
mov
das
fdivl
addb
int
pop
aam
add
imul
stc
jno
test
sbb
fbld
das
sbb
aad
outsb
outsb
push
daa
mov
cmp
shll
pusha
loope
inc
jo
scas
inc
jbe
mov
pop
loopne
daa
stos
orb
lods
dec
push
add
repnz
mov
mov
aam
cmp
jmp
sub
stc
mov
sub
xor
xchg
fnstenv
push
dec
adc
jge
sti
xor
pop
pop
jnp
push
enter
pushw
call
jmp
jg
in
jb
addb
in
in
or
loope
mov
add
mov
je
sub
or
sbb
insb
xor
jge
jmp
mov
adc
popa
and
pop
pop
gs
mov
cmp
xchg
or
mov
cmp
fsub
xor
arpl
pop
and
add
and
pusha
pop
mov
cmp
int
xchg
subl
lds
sbb
shlb
inc
inc
mov
mov
cmpsl
push
cmp
test
jmp
add
jnp
cli
cmc
xchg
enter
mov
pop
add
and
mov
push
dec
iret
dec
repnz
push
push
push
jbe
jmp
push
hlt
mov
xor
jmp
sub
pop
pop
mov
jmp
insl
cmp
int
jo
pop
pop
incl
es
dec
loop
xchg
test
mov
jo
xor
adc
stc
push
xlat
inc
mov
inc
or
xchg
out
fcompl
mov
mov
dec
cmp
pop
dec
xor
mov
out
and
jmp
pop
clc
mov
xor
jge
push
xchg
movsb
shll
testl
xor
dec
imul
popw
aam
mov
aas
mov
push
out
pop
mov
push
loopne
jmp
aad
clc
cmc
scas
jno
fs
in
sarb
and
xchg
cmp
clc
std
cmc
mov
int3
xchg
imul
stos
dec
mov
mov
lret
dec
lea
mov
pop
jmp
jmp
mov
adc
inc
xor
or
cmp
addl
and
out
lcall
lret
add
inc
xchg
test
add
mov
lock
addl
fnstsw
andb
sub
push
rcll
sub
add
xor
lock
push
adc
outsl
call
jge
cmpl
push
pop
sub
mov
insl
and
pop
inc
adc
cmp
push
jmp
insb
mov
movsb
cli
add
imulb
pop
int
or
xchg
jmp
sbb
inc
inc
jl
inc
leave
push
adc
pop
mov
pop
out
repz
fmuls
inc
and
or
cld
push
cld
push
or
mov
sub
sub
mov
push
jno
lahf
push
ret
or
inc
sbb
nop
out
leave
test
cmpsl
and
rcrb
daa
rolb
xor
fimull
dec
xor
imul
lret
mov
xor
add
inc
mov
dec
or
add
sbb
push
inc
pop
enter
pusha
fcoms
cwtl
push
inc
mov
ficoms
scas
mov
rcll
xor
add
add
in
or
sub
in
shlb
xor
gs
push
xchg
loopne
sarl
dec
jb
fwait
mov
sub
dec
pop
cmpsl
repnz
sub
lods
and
cwtl
ds
sub
push
aad
mov
pop
push
xchg
sub
and
andb
nop
cs
add
mov
cmc
mov
add
add
lret
push
insb
push
xorb
add
cmp
pop
pop
push
arpl
push
lock
inc
sub
mov
cmp
and
mov
inc
pop
sub
jmp
jle,pn
repz
dec
out
dec
imul
jmp
add
fsubs
mov
pop
xor
add
and
pop
rolb
call
loop
imul
rcrl
cld
xchg
mov
mov
sbb
sbb
gs
xchg
loop
xchg
or
loope
aam
and
xlat
pop
shll
xchg
push
jb
jecxz
lahf
out
mov
outsl
cltd
and
cmpb
or
xchg
dec
mov
dec
aam
jmp
pop
rolb
mov
repnz
mov
pushf
pop
rcll
sbb
nop
xchg
lea
dec
push
mov
cs
std
sahf
lret
adc
or
dec
or
sub
sub
cli
mov
mov
aaa
rclb
imul
jne
outsl
pop
dec
pop
pop
push
hlt
inc
mov
out
sub
pop
scas
sti
and
xor
cmp
mov
push
aad
pop
sbb
imul
xchg
push
loopne
clc
call
mov
push
cmc
sub
pop
divb
mov
adc
push
and
jnp
sahf
push
insl
push
test
xchg
cmp
dec
das
jmp
mov
push
xchg
jmp
xor
test
inc
adc
jle
lcall
push
pop
xchg
dec
mov
insl
pusha
js
dec
or
lret
lret
adc
push
icebp
inc
lods
pop
mov
repnz
lea
jo
add
mov
aaa
xor
or
pop
sahf
rorb
cwtl
lret
xor
cmpsb
xchg
je
sub
and
or
inc
jne
cmpsl
ret
mov
mov
or
std
adc
int3
sbb
push
popa
dec
adc
fcmovu
add
mov
inc
mov
mov
loope
arpl
rcll
je
jb
mov
mov
or
and
mov
cs
mov
add
iret
subb
push
jo
daa
js
cmp
pop
test
nop
scas
out
pop
sbb
mov
push
pop
vpshlb
jmp
mov
out
pop
jmp
fwait
js
sbb
adc
lods
adc
push
gs
incb
imul
loope
xor
dec
sar
fstl
jge
std
test
xor
push
xlat
in
push
jl
xchg
outsb
mov
sub
or
pop
and
pop
nop
popa
loopne
dec
xchg
dec
inc
ja
mov
data16
inc
push
mov
mov
outsl
mov
popa
gs
dec
stos
pop
loopne
js
push
out
cmp
stos
outsl
negl
pusha
adc
fsubr
xor
out
notl
sarb
imul
jecxz
shrb
pop
in
jo
mov
pop
inc
ficoms
jmp
outsl
push
cmp
mov
addb
jmp
dec
adc
add
aaa
pop
sub
adc
lock
or
mov
popl
cmp
pop
lods
adc
test
adc
xor
out
stos
push
push
cld
rorl
adc
outsb
sbbl
into
xchg
jg
dec
push
xor
fisttps
inc
out
push
in
and
xor
popf
push
pop
orb
jmp
loopne
imul
pop
jmp
xchg
and
adc
cmp
cs
and
fldl
lods
popa
jmp
fsubrl
inc
in
std
fildl
pop
into
in
leave
mov
xchg
add
mov
fs
mov
jo
ljmp
mov
push
sub
or
sub
popa
add
push
jecxz
push
cmp
mov
mov
xor
mov
in
std
movsl
inc
test
enter
and
jge
xchg
int3
mov
js
and
xor
or
sbb
iret
mov
pop
pusha
rcll
sub
push
xor
pop
xor
ja
shlb
mov
sbb
idivl
xlat
out
dec
and
aas
pop
lods
pop
pop
push
push
push
pop
dec
pushf
mov
mov
sub
lds
xor
inc
fwait
dec
sub
add
cmp
fildl
jae
fidivrs
out
mov
jge
mov
xchg
inc
loope
hlt
stc
sahf
xchg
mov
push
jmp
test
rclb
or
hlt
scas
loop
add
push
push
jmp
lods
sub
lock
add
push
ret
or
loopne
ja
repz
aaa
fildl
test
push
movsl
inc
jmp
sub
adc
xchg
dec
iret
add
cmp
clc
sub
dec
hlt
fcomp
dec
lods
add
xchg
dec
mov
or
jb
dec
cmp
lret
mov
popf
clc
pop
mov
mov
jle
jp
lret
mov
add
lahf
arpl
or
add
scas
cmpsb
xchg
sbb
jbe
push
das
xor
in
mov
cmp
and
xor
loopne
push
shlb
pop
xchg
lret
andb
mov
movsb
mov
scas
andb
rol
adc
aas
cmpsb
dec
and
sbb
or
mov
leave
std
outsb
xor
push
inc
push
cld
dec
filds
dec
push
mov
xchg
ret
test
push
rcll
in
icebp
adc
stos
popf
cmp
push
imul
out
or
jnp
fnstsw
mov
dec
sub
dec
subb
js
out
pop
mov
les
xor
add
jp
rol
jmp
mov
xchg
mov
fs
push
add
mov
test
pop
sub
out
in
push
push
pop
stc
mov
loope
loop
and
mov
adc
insb
xchg
adc
or
ja
cmpsb
pop
pop
iret
mov
inc
or
test
pop
sti
mov
push
jl
mov
adc
xlat
incb
xchg
pop
std
jns
and
call
push
or
xchg
stc
movsl
dec
push
mov
fsubs
xchg
lcall
mov
sub
into
jmp
loope
mov
lret
add
and
dec
xor
movaps
inc
mov
ss
pop
rep
add
inc
jp
loope
sub
addr16
cs
ljmp
std
push
rol
lods
push
je
pop
and
add
sbb
jo
fdivrl
test
aam
scas
xchg
lods
push
mov
pusha
stc
push
cmp
sub
jg
js
sbb
pop
adc
pop
fists
add
faddl
sub
in
shlb
jge
push
sub
addr16
pop
mov
adc
fwait
lds
dec
and
sarl
add
jnp
in
fwait
add
and
and
negl
sti
mov
ljmp
jg
push
popa
lcall
sbbl
aam
mov
sbb
cmp
mov
scas
dec
pop
cmp
mov
icebp
push
cvtps2pi
gs
mov
call
push
mov
insb
popa
inc
sbb
mov
push
inc
pop
sub
add
push
jo
inc
pusha
mov
sbb
fisubs
out
sub
push
sub
mov
pop
mov
adc
insb
dec
or
cmc
add
jmp
inc
jle
lods
ret
pop
shll
add
sub
fsubl
addr16
sarb
or
push
lret
inc
adc
mov
lahf
int3
push
mov
mov
icebp
or
shl
push
add
jmp
push
cmp
xchg
cmp
nop
jp
fwait
sub
orb
cmpsl
push
call
aas
xor
push
jmp
mov
popf
jle
lret
sarl
les
dec
nop
xor
jge
xor
mov
mov
ds
push
push
jmp
mov
xor
scas
jmp
leave
jae
jns
push
shll
pop
or
sub
sub
les
aad
jle
inc
cs
inc
adcb
mov
sub
je
pushf
int
and
outsb
psubb
sbb
sub
popf
dec
jno
gs
cltd
cmp
dec
pop
fsts
jnp
insl
cmpl
or
repz
aad
movsb
fcoml
shr
stos
mov
testb
mov
cmp
mulb
cmp
mov
fdivrs
rcll
and
pop
mov
loope
es
cmp
sub
jg
fcomi
inc
mov
in
push
push
roll
pop
cmp
sub
sub
push
das
push
push
mov
push
adc
lock
pop
or
push
inc
sbb
and
mov
adc
mov
xchg
scas
pop
icebp
scas
add
cmp
push
lret
lods
inc
adc
lret
int3
fwait
push
inc
jl
int
leave
mov
and
int3
xchg
pop
test
mov
or
add
fwait
mov
jbe
pop
jmp
lret
icebp
inc
jmp
sub
test
or
sbb
repz
or
mulb
jno
pop
adc
fs
outsb
add
std
iret
or
cmp
ja
incl
cltd
mov
mov
js
fildl
adc
lds
sub
cld
xchg
je
icebp
pop
adcb
sub
jbe
xchg
push
lret
in
dec
xlat
or
and
pop
das
adc
lods
rorl
out
jne
lock
inc
mov
std
ss
jno
and
and
xor
or
inc
jmp
and
add
mov
sub
xor
pop
or
stos
pop
dec
mov
mov
addr16
add
adc
sub
fs
test
pop
icebp
inc
jg
cmpsl
cmp
or
ljmp
pop
daa
or
add
gs
add
mov
cmc
inc
sub
jbe
in
imul
mov
adcb
xchg
or
xchg
jp
ret
and
mov
out
mov
addb
jmp
pop
xor
xor
lret
ret
adc
mov
and
cmp
les
mov
add
fwait
jle
push
aaa
shlb
push
mov
out
lahf
data16
push
shrl
cwtl
add
or
push
inc
or
out
mov
mov
push
push
jge
icebp
lock
add
inc
dec
cmp
jne
or
add
xor
insb
out
and
push
std
mov
adc
adc
adc
and
in
mov
scas
scas
adcb
cwtl
mov
or
aaa
pop
adc
ficoms
je
sbb
hlt
cs
pop
pop
and
push
sub
cltd
xor
bound
jecxz
aaa
sbb
out
add
not
xor
insb
test
pop
aaa
add
loop
mov
push
mov
pop
or
movsb
xchg
or
pop
push
movsl
jge
test
push
pop
xor
pop
cmpsb
in
xchg
mov
shr
or
popa
jmp
xchg
lahf
ja
repnz
movl
das
xor
push
loopne
neg
jmp
push
push
dec
int
int
aas
jns
data16
adc
ljmp
out
jle
and
add
mov
add
and
pop
pop
and
sub
pop
orl
or
pop
mov
and
movsl
dec
dec
mov
daa
lds
xlat
add
jno
loopne
jmp
pop
test
repz
rol
or
jo
mov
sub
sub
mov
out
popf
mov
lods
mov
jns
daa
hlt
loop
sub
insl
and
pop
mov
rep
pop
insb
push
xchg
aad
mov
pop
push
sbb
cwtl
dec
movsb
sub
out
cli
adc
cmp
inc
sub
enter
mov
pop
sub
pusha
pop
pushf
add
fcoml
or
psrlw
push
jmp
les
pop
out
sub
jno
xchg
push
push
mov
sbb
aas
inc
or
mov
sbb
adc
outsb
mov
pop
dec
pusha
push
outsl
pop
dec
inc
add
inc
ljmp
pop
cmc
test
daa
push
adcb
pop
jle
popf
push
in
cli
mov
imul
cld
ficomps
mov
mov
push
ret
mov
mov
not
pop
bound
adc
orb
xchg
xor
pusha
pop
es
push
pop
pop
sub
fiadds
sub
push
jecxz
sub
imul
push
jmp
mov
neg
orl
mov
test
cvtps2pi
jmp
je
jp
jb
jg
cmp
iret
std
popf
jnp
popl
mov
ss
pop
add
inc
pushf
sbb
cmp
ds
xchg
shll
pop
cmpl
mov
stc
add
sti
fimull
mov
push
jmp
and
inc
jp
lds
test
mov
xorl
jecxz
and
outsl
mov
std
and
dec
popf
jl
xchg
outsb
push
es
nop
or
jg
xor
je
das
aad
nop
pop
sbbb
push
sbb
mov
jge
fiadds
xchg
xchg
or
xchg
or
lret
ror
adc
shlb
push
rcrl
imull
es
push
cmp
mov
into
aas
sbb
cmp
mov
sub
shl
or
add
mov
jo
push
in
pop
dec
sti
out
dec
inc
rcrb
loope
pusha
fstps
add
jmp
ds
ss
and
sub
loopne
cld
clc
pop
mov
add
push
and
add
mov
adc
dec
and
push
loope
xor
insl
andb
dec
leave
or
or
mov
outsl
ret
roll
lret
pop
xchg
jb
orl
mov
xor
shll
inc
out
inc
clc
fsubrs
adc
sub
lds
jo
test
test
out
fildl
mov
mov
adc
push
push
sbb
push
mov
cmp
xor
and
stc
inc
adc
mov
cmp
inc
pop
mov
sub
mov
ds
jle
mov
dec
jge
negb
xchg
or
push
arpl
dec
jnp
std
sub
adc
jecxz
jnp
lods
ret
push
pop
push
test
and
pop
push
and
sbb
out
rcll
mov
ficomps
mov
sbb
add
cmpsb
testl
and
sbb
xor
sub
out
sub
mov
arpl
sub
adc
and
inc
nop
jge
pop
adc
and
adc
scas
xchg
sbb
adc
sarb
sub
imul
enter
add
mov
fnstcw
js
clc
inc
pop
jg
cltd
jnp
psrlq
enter
mov
iret
mov
in
jmp
add
and
sub
push
subl
leave
inc
jns
lcall
mov
repz
mov
pop
add
pop
shrl
push
pop
outsb
sahf
test
repz
mov
and
sub
lods
jbe
pop
push
test
adc
or
je
add
lods
pop
cs
adc
add
das
mov
imul
inc
cmpsl
add
xor
repnz
xorb
outsl
lret
xor
push
mov
jo
jl
pop
xchg
add
add
pop
mov
or
mov
adc
or
iret
push
mov
inc
jb
dec
mov
mov
nop
pop
sbb
sbb
sbb
push
push
loopne
ljmp
push
dec
mov
and
cli
daa
push
adc
lods
and
les
pusha
jp
or
push
imul
pop
test
push
mov
jns
cmpsb
dec
fidivrl
jge
pop
loop
test
dec
rorb
cmp
or
jmp
mov
dec
push
mov
das
das
push
sbb
sti
pusha
inc
lahf
rcrb
sahf
cmc
add
mov
mov
sub
fcmovnbe
ret
push
cmp
loopne
add
mov
inc
cmp
adc
fs
inc
xchg
inc
inc
xor
pop
test
ret
xchg
aad
mov
dec
pop
xor
add
sbbl
movsb
rcrb
pusha
push
jecxz
sbb
jle
ljmp
inc
lods
dec
xor
sub
inc
add
push
sub
cmp
pop
imul
scas
push
test
sbb
lock
mov
add
jmp
push
rorl
cmpb
loop
bound
dec
test
cli
inc
test
pop
or
ja
dec
and
sbbb
mov
sub
mov
or
inc
psadbw
cli
push
cmp
test
add
scas
push
mov
add
mov
mov
pop
jmp
sub
dec
cmp
push
jmp
out
jae
pop
or
jle
int3
jmp
xlat
ds
pop
div
xorl
add
fwait
pop
push
jp
jmp
negl
faddl
push
pop
out
push
sbbl
sti
jnp
mov
xor
pop
cmp
and
mov
gs
test
ret
cltd
stos
lahf
mov
dec
add
add
dec
push
cwtl
adc
xchg
jo
cld
mov
int
in
lea
push
sub
cs
add
inc
and
imul
jb
xchg
inc
in
jb
addr16
scas
xchg
jmp
push
jmp
dec
icebp
mov
ret
pusha
incb
shrl
lahf
add
mov
dec
rolb
loop
mov
mov
xor
push
sub
in
iret
nop
sbb
push
or
or
push
test
xchg
mov
push
ljmp
pop
jecxz
push
test
jae
outsl
add
sub
mov
mov
push
mov
ljmp
mov
pop
push
add
popa
xor
push
test
stos
pusha
sub
add
lods
adc
ja
jns
ret
dec
nop
aam
dec
pop
xchg
push
stos
out
dec
stos
rorb
jns
adc
mov
adc
aas
or
cmp
xor
push
xchg
mov
dec
push
pusha
push
cltd
dec
movzbl
out
pushf
adc
pop
cs
adc
xchg
dec
xchg
dec
rclb
mov
loope
pop
xchg
jb
fs
mov
rcll
or
ss
pop
fldl
lods
xchg
pop
ja
dec
movsb
push
jmp
scas
iret
mov
mov
add
or
ja
gs
or
jmp
out
xchg
popf
fimull
pop
cltd
adc
shrl
mov
test
sti
cltd
add
ljmp
fisubl
mov
sub
pop
imul
xor
nop
dec
jg
jmp
mov
arpl
mov
movq
jb
ret
pop
pop
dec
mov
push
adc
jmp
inc
jns
jmp
push
test
pop
cmc
pusha
push
sbb
add
cmp
mov
xor
push
or
sub
xchg
jb
dec
inc
adc
mov
lods
out
add
push
adc
cwtl
mov
sub
pop
mov
inc
jmp
das
sbb
repz
cmpsl
sbbb
js
push
jmp
add
sub
jmp
vpackssdw
mov
push
test
in
xchg
int
out
add
push
mov
dec
pop
pusha
jmp
jae
movsb
adcl
mov
push
mov
jae
adc
xor
push
push
scas
cmpl
inc
push
jle
sub
dec
aad
shrb
push
dec
cmpsl
sub
inc
jl
push
jp
adc
scas
cmc
jno
mov
dec
rcrl
je
mov
js
jbe
loop
or
les
mov
pop
jae
dec
packssdw
or
xor
xchg
das
ret
in
sbb
adc
or
insl
dec
mov
jmp
push
out
jmp
stos
in
pop
jnp
mov
dec
imul
pop
or
loop
and
jb
or
mov
pop
lods
add
jmp
or
das
sub
iret
add
insb
pop
and
pop
mov
jmp
les
mov
in
adc
test
popf
inc
out
and
adc
xor
stos
mov
adc
jae
push
daa
inc
or
jge
or
std
inc
cmp
xchg
outsl
mov
add
pushf
outsb
outsb
lret
rcll
push
sub
inc
inc
add
sub
icebp
shll
jge
xor
enter
push
repz
xchg
mov
push
mov
cmp
adc
iret
stos
dec
push
dec
xchg
jle
and
pop
xchg
fstpl
and
jnp
aad
test
lock
popf
mov
pop
mov
imul
ret
popa
cmpsb
jns
pop
push
add
xchg
pop
clc
push
hlt
lret
jno
mov
push
lret
in
cmpl
xchg
xor
jp
push
scas
or
sbb
adc
fs
ror
aam
push
ljmp
or
dec
enter
aaa
stc
xor
and
cmp
sub
mov
incl
pop
neg
shr
add
mov
mov
sub
jmp
in
ds
fisubs
and
push
pop
push
mov
xor
jg
mov
or
push
cld
dec
xor
add
ror
dec
aas
adc
cmpb
add
pop
jp
loopne
sub
sarl
dec
pop
push
lcall
fadd
outsb
adc
add
or
pushf
add
mov
jmp
cwtl
imul
mov
mov
test
or
push
mov
add
dec
mov
push
jmp
fisttpll
test
jmp
sbb
aam
push
mov
push
movsl
xchg
ljmp
out
mov
shlb
mull
shlb
or
popa
xchg
pop
popf
cmp
adc
dec
push
dec
data16
out
mov
jge,pt
call
push
divb
mov
adc
out
add
addr16
mov
or
ja
rorb
div
push
pop
out
outsl
dec
cmp
js
mov
push
sub
add
addr16
cld
aam
add
jle
dec
aad
mov
push
js
inc
sub
inc
rcrl
rep
ljmp
push
inc
cmpsb
bound
bound
mov
add
pop
mov
push
add
jbe
xor
sahf
in
push
sbb
lock
sub
add
jp
aam
ret
sub
sbb
pop
sub
push
jmp
mov
cmp
das
in
popaw
or
fsubr
sub
jge
mov
pusha
std
and
pusha
push
testb
ljmp
xchg
nop
mov
lret
xor
mov
mov
out
jmp
inc
and
sub
movsb
xchg
ror
repnz
fcomps
imul
push
sub
dec
jecxz
adc
test
add
push
mov
and
loop
jnp
jbe
add
ret
pop
shr
jmp
mov
jecxz
pop
stos
cmp
shlb
je
mov
ret
ficoml
imul
ljmp
xlat
out
lods
inc
mov
sbb
cmp
fwait
lods
xchg
push
sbb
es
shrl
scas
mov
jmp
pop
mov
mov
xor
sbb
adc
arpl
jecxz
cli
test
xchg
ret
in
test
adcl
xchg
scas
adc
rcrb
dec
pop
dec
xor
ds
sbb
test
jmp
and
movsb
push
pop
in
cmpsb
xchg
mov
and
pop
mov
mov
hlt
add
mov
pop
daa
push
insl
pop
cmpsl
ja
jg
xchg
push
lret
and
sbb
jmp
fstl
mov
push
push
jmp
cmp
xlat
xchg
out
dec
clc
loop
jmp
pop
push
cmp
test
ficomps
xor
ljmp
push
pop
mov
rolb
cmp
push
popf
jbe
jp
xchg
cmp
and
jmp
je
xor
push
mov
mov
mov
in
sub
fwait
dec
cmpsb
xchg
mov
xor
inc
fidivs
enter
in
xchg
adc
dec
sub
xchg
mov
loope
push
xor
stos
int
pop
mov
sarb
test
add
out
testl
push
and
lds
xor
pushf
inc
jae
out
gs
xor
push
loopnew
enter
les
out
lret
jmp
or
mov
mov
inc
push
jmp
mov
sti
sar
jb
pop
jmp
sub
push
orl
sbb
int
xlat
scas
daa
out
push
sarb
push
pop
ret
add
in
in
lret
pop
add
push
jl
mov
push
xor
inc
test
cwtl
mov
popa
cwtl
popa
subl
add
popf
shrb
mov
pushf
inc
push
or
inc
neg
add
sbb
inc
inc
pop
push
xor
sub
jge
pusha
inc
out
lock
sub
hlt
punpckhwd
in
or
cld
push
lret
xlat
sti
fucom
inc
mov
sbb
aaa
add
sbb
les
lret
pop
repnz
add
or
and
jae,pn
loope
pusha
bound
pop
fdivr
cmp
das
mov
outsl
lock
das
dec
mov
push
sub
xlat
jg
fsubs
or
cli
mov
dec
sub
fiadds
stos
or
mov
stos
fucomp
gs
das
and
andb
sub
xor
out
mov
jg
notb
pop
jmp
aaa
mov
fldcw
push
dec
or
idivb
sub
push
loope
cmp
std
sub
orb
xchg
stc
dec
xor
xchg
scas
lcall
pop
push
gs
or
jae
jmp
pop
std
stos
scas
add
pop
test
imul
enter
or
adc
pop
push
insl
not
inc
sub
and
pusha
mov
mov
add
pop
outsb
cmc
adc
repnz
repz
sbb
rolb
mov
dec
xchg
neg
or
jmp
dec
push
sub
subl
mov
add
fsts
clc
cltd
pop
cmp
xchg
insb
sbb
and
mulb
lret
pop
int3
dec
sub
aad
loopne
push
push
out
orb
inc
jbe
fcomi
pop
sub
push
pop
push
mov
xor
sub
adc
push
adc
lea
in
sbb
adc
adc
pop
bndldx
dec
addl
aaa
push
pusha
mov
sub
inc
dec
xchg
add
xchg
xlat
pop
sti
and
jmp
dec
js
lods
sbb
push
mov
outsb
aam
out
adc
or
jmp
into
loope
mov
xchg
cmp
xor
scas
inc
pop
addr16
lods
out
fs
mov
push
scas
push
mov
pop
inc
negb
pop
push
icebp
ret
adc
ljmp
sbb
dec
frstor
std
jecxz
aad
cmpsl
adc
gs
in
aam
dec
mov
repnz
repnz
imul
stc
sbbl
leave
add
xchg
dec
imul
add
pusha
inc
les
push
pop
outsl
inc
cmp
aas
mov
leave
sbb
or
lea
pop
add
mov
enter
into
mov
dec
je
adc
push
fnstenv
adc
mov
rorb
add
dec
jle
or
sub
push
adc
mov
fcoms
into
pop
xor
sub
sub
add
inc
sub
mov
sahf
fs
mov
fstpt
data16
int
and
mov
fldcw
mulb
mov
sbb
dec
jmp
les
out
mov
les
cmp
sub
daa
jne
lea
dec
xor
or
xor
add
cmp
adc
xor
neg
add
and
ss
push
lahf
lock
subb
push
test
mov
cli
add
in
jge
push
ret
sbb
rcll
scas
iret
cld
fcoml
ljmp
out
andb
dec
sbb
rcrl
pop
mov
adc
ds
outsb
repnz
movsl
movsb
mov
mov
cmp
or
dec
sub
sub
mov
jecxz
sub
ds
fldenv
test
pop
push
ljmp
pusha
adc
sti
icebp
mov
imull
pop
sbb
jbe
push
stos
pop
clc
cmp
pop
inc
lahf
or
pop
jmp
cmp
shrb
mov
mov
xchg
add
test
jmp
lcall
lods
fsubs
ret
iret
xor
jle
rorb
and
lea
outsb
sub
fs
daa
pop
rolb
loope
mov
inc
sub
fnstenv
mov
pop
jecxz
lcall
sub
add
pushf
lock
pop
pop
add
rdtsc
test
or
out
out
sub
cmp
cmpb
lods
js
dec
jge
adc
movsb
int
mov
call
xchg
cmp
mov
pop
movsb
out
jge
sbb
jnp
in
pop
cli
push
mov
cmp
mov
push
dec
xchg
add
or
xor
and
std
jl
cmp
sahf
out
faddl
cmp
sub
xchg
push
fldl
mov
sbb
ret
or
test
inc
inc
inc
idivb
push
cmc
test
inc
inc
inc
fcmove
add
inc
hlt
bound
cmovs
push
add
mov
in
arpl
sarl
test
mov
push
add
push
sbb
inc
jnp
pop
jle
imul
rcrb
adc
cmp
xorb
add
mov
dec
fmull
pushf
inc
and
rcr
je
das
add
sahf
add
cmpsl
cmp
data16
and
jo
adc
sbb
inc
mov
push
mov
xchg
or
adc
and
cmp
or
dec
daa
xchg
add
roll
das
add
daa
lea
aam
sti
add
mov
sbb
inc
pop
sbb
out
das
testl
cmpl
clc
sub
add
jnp
xchg
add
or
loopne
xchg
add
insb
pop
shlb
cmc
or
adc
scas
insl
jp
dec
into
cs
push
shrb
cmc
lock
push
or
ret
add
cmp
cld
jle
add
mov
or
sub
push
add
rep
inc
jg
and
mov
pushw
xchg
add
popa
outsl
mov
mov
lcall
dec
cmp
addl
xchg
push
pop
ljmp
push
pop
js
mov
inc
lea
cmp
loopne
hlt
push
or
aad
add
inc
cmp
mov
lods
das
xchg
sbb
stos
imul
sbb
pushw
ret
push
mov
scas
rolb
xor
cmp
inc
dec
icebp
sahf
add
shl
mov
test
loop
pmaxsw
insl
inc
cltd
lahf
in
repz
hlt
lock
popf
adc
dec
push
cmp
mov
cmp
mov
out
add
inc
inc
pop
mov
inc
js
cmp
aaa
add
in
into
imul
mov
sahf
cmp
inc
mov
sbb
fists
or
push
test
and
pusha
mov
movsb
scas
add
xchg
pusha
fmuls
add
sub
ja
cmp
adc
sbb
push
dec
xor
push
add
mov
pop
add
sub
loope
push
hlt
xchg
cmp
add
push
xor
and
add
test
add
cmp
and
pop
fadds
pop
cmpsl
mov
lret
push
mov
push
data16
lds
stos
loope
outsl
mov
jmp
jne,pt
dec
in
or
and
and
int3
es
xor
aam
mov
inc
mov
enter
fldt
mov
bound
loopne
lods
add
dec
in
stc
mov
pop
jge
fs
and
adcl
scas
xchg
cld
out
andb
lock
add
repnz
add
mov
xchg
lds
xchg
jle
repz
pop
or
add
into
lock
jl
push
scas
xchg
adc
add
stc
dec
push
xor
test
push
mov
push
inc
add
pop
add
xor
add
leave
nop
jno
cwtl
push
jecxz
push
dec
cmp
fld
in
addb
fcomps
divl
daa
and
jge
add
popf
pop
mov
leave
fcomi
ret
loopne
add
and
ja
jmp
push
fwait
and
dec
add
fildl
push
mov
lret
jp
inc
call
out
sub
adc
add
fiaddl
jne
add
ja
mov
ss
cltd
dec
xor
cli
inc
cmp
imul
pop
cmc
cmp
xor
mov
faddl
dec
iret
inc
lret
repnz
aas
add
std
or
out
xchg
mov
in
adcl
add
fadds
push
stc
popf
andb
mov
jl
lods
add
imull
mov
add
mov
sahf
jnp
mov
jno
cmc
fdivs
sbb
pusha
faddl
pop
js
add
test
in
jbe
push
adc
dec
mov
fcoml
addr16
rol
and
into
addl
sub
jmp
jo
add
repz
xor
push
inc
filds
sbb
cmp
jo
dec
dec
dec
pop
jb
mov
fwait
sbbb
or
fisttps
or
mov
mov
loopne
jmp
add
push
pop
ljmp
add
jp
mov
mov
xor
xorl
test
jl
shlb
fnstsw
dec
inc
add
rcrl
mov
and
notl
cmp
incb
sub
add
or
fmuls
pusha
xor
jno
cmp
add
out
outsl
xor
mov
xchg
push
push
std
push
xor
push
add
mov
lcall
rolb
movsl
roll
sbb
repz
pop
push
out
mov
or
jo
xlat
cmp
shufps
jecxz
popa
mov
rorb
adc
fdivrp
icebp
cmpsl
das
ljmp
inc
and
cmp
mov
xor
push
pusha
add
lods
mov
jns
add
js
adc
in
js
mov
movsb
ljmp
mov
push
aam
addr16
pusha
in
add
mov
lret
stc
xchg
sub
push
iret
adc
adc
cwtl
adc
leave
ltr
sbb
add
push
add
inc
in
das
jbe
xor
hlt
sub
jbe
add
in
sarl
fisubrl
mov
add
repnz
icebp
mov
or
inc
adc
aam
sub
mov
cmp
push
or
add
add
ret
mov
mov
sti
or
cmp
int3
das
add
imul
push
loope
and
insb
inc
add
adc
flds
hlt
cmp
or
add
and
xchg
cli
dec
loopne
pop
aas
add
add
pop
add
push
and
lret
movsb
add
xor
inc
sbb
in
jns
call
xchg
mov
lea
std
dec
mov
xchg
sets
jp
testb
sbb
add
scas
mov
jl
ja
sub
xor
cli
mov
push
int3
add
mov
lock
in
pop
xor
rorb
xor
sub
testb
and
lret
test
xor
idiv
fs
clc
add
and
add
adc
mov
mov
mov
add
dec
daa
rcll
xor
xchg
inc
ss
add
ror
mov
sbb
xchg
in
lods
push
jge
iret
pop
lock
jb
lahf
push
xchg
cmc
xchg
mov
pop
mov
pusha
jl
cmp
mov
pop
lcall
xor
mov
out
jl
cmp
sbb
roll
rcrl
fistl
jo
jle
add
jle
pop
and
cwtl
jmp
and
push
pusha
imulb
pusha
nop
str
rclb
add
mov
and
leave
xchg
adc
xchg
mov
aas
dec
imul
add
scas
jb
cmpsl
or
pop
add
sahf
les
push
subps
inc
stos
pop
cwtl
out
idivb
repnz
xchg
adc
add
xor
fstpt
add
test
sub
jb
dec
sub
jbe
addr16
and
dec
fdivl
lret
inc
shlb
lods
inc
movl
cmp
je
or
popf
cmp
dec
test
shlb
test
and
aas
push
repnz
xor
testb
and
out
ucomiss
or
incl
dec
or
sub
das
inc
adc
pop
cmp
push
add
add
mov
pop
inc
or
push
subb
lea
cmpsb
xchg
stc
loopne
enter
add
pop
jmp
mov
std
mov
push
add
dec
dec
sub
test
subl
fiaddl
sbb
pop
cmp
fwait
in
sub
int
mov
outsl
mov
xchg
pop
mov
inc
add
das
push
ret
add
adc
aad
lock
notb
lcall
mov
loope
xchg
idivl
or
cs
int3
dec
out
jl
je
aam
add
dec
xchg
lea
xchg
mov
adc
icebp
add
les
mov
das
and
js
jecxz
sbb
jns
add
xor
pop
dec
or
cmp
cltd
filds
sub
fwait
std
shrb
sbb
xchg
push
pop
addb
add
mov
adc
dec
je
repz
sub
adc
lds
fdivrs
push
inc
aas
or
push
in
cli
pop
lret
daa
add
bound
pusha
int3
sub
inc
xor
scas
dec
xchg
jge
insb
jbe
test
cwtl
aas
pop
imul
into
inc
inc
pop
ret
xchg
dec
add
mov
testb
aas
test
sub
fisttps
cmp
decb
lret
les
cwtl
mov
mov
ret
nop
enter
shll
fdiv
pop
call
in
jp
or
push
add
repz
jecxz
mov
inc
int3
rorb
mov
sbb
mov
add
cld
daa
sub
lret
add
push
clc
xor
cld
push
fadd
aaa
jg
jmp
mov
pop
add
dec
ret
lahf
pop
cs
dec
mov
add
out
int3
push
sti
add
test
lock
je
add
pop
adc
testl
call
adc
test
movsb
or
dec
pop
sub
in
std
add
outsb
mov
add
push
jg
xchg
aad
jae
fcoml
pop
pop
cmp
add
push
add
rcl
dec
mov
test
jo
imul
mov
jl
cli
pop
pop
sub
or
rorl
push
cmpsb
lcall
insl
jae
fnstcw
cmpsl
push
add
daa
xchg
outsb
js
jbe
add
shr
call
add
out
and
push
sbb
push
xor
lcall
lods
mov
push
xchg
das
mov
xchg
sub
push
fisttpll
xchg
push
mov
xorb
in
add
lret
pop
ss
insl
cmpsl
nop
bound
loop
aas
push
es
mov
lods
add
jge
ja
dec
adc
fisttpl
cmc
ds
aas
loopne
xorb
adc
add
enter
lea
dec
cmp
imul
arpl
lea
sbb
mov
rolb
out
adc
add
test
aam
imul
inc
daa
rclb
jp
add
hlt
inc
loop
pop
outsb
stc
cmp
ljmp
sub
sbb
add
in
negb
dec
mov
mov
flds
dec
mov
lock
aas
insb
nopl
dec
pop
xor
stc
test
pusha
adcl
fisubl
push
movsl
mov
inc
mov
and
push
movsb
mov
add
mov
xor
fadd
ds
mov
jae
cmp
or
or
pop
cmp
std
in
loop
add
cmp
cmp
and
jns
pusha
div
cltd
bound
push
cmpl
jo
int3
rorb
lea
movsl
mov
lcall
add
xor
mov
mov
or
loope
add
add
clc
dec
mov
jns
xchg
push
mov
add
inc
sbb
jp
add
pop
push
push
or
insl
pop
mov
push
repnz
sbb
pop
test
add
clc
xor
cmp
xchg
nop
pusha
and
adcl
push
insb
jns
xor
ret
adc
sti
int3
enter
push
push
loope
call
sub
add
inc
mov
adc
aad
pop
inc
cmc
lock
movsl
call
dec
add
cmp
test
pop
shl
adc
out
out
mov
xchg
cmp
insb
add
sbb
adc
mov
sbb
xor
es
aam
push
mov
es
outsl
mov
xchg
mov
out
xchg
cwtl
cmp
call
arpl
xor
mov
add
cwtl
pop
sbb
in
sub
aad
mov
clc
outsb
jle
fistpl
std
scas
cmp
mov
mov
cli
push
dec
adc
rcl
insl
xchg
stc
pusha
pop
scas
add
sbb
aad
aaa
pop
fwait
push
and
jg
xor
and
dec
add
inc
jno
add
mov
lcall
sub
sub
scas
fisttps
jno
dec
sbb
pop
mov
hlt
bound
test
repz
mov
sub
push
or
into
jp
xor
clc
push
or
push
in
jb
cwtl
rcll
xchg
int
pusha
and
fbstp
test
push
gs
or
pusha
test
or
lods
xorb
push
mov
gs
dec
and
xlat
sbbl
popf
ljmp
dec
sub
pop
dec
mov
cmp
pusha
xor
xchg
add
daa
js
add
lahf
stos
mov
test
leave
xchg
cmpl
jmp
lahf
rcl
add
in
xchg
out
ret
pop
nop
out
sbb
sub
pop
and
flds
pop
stos
int3
cmp
mov
add
and
aas
sbb
shl
rorb
pop
xchg
pop
lret
add
inc
flds
insb
dec
push
test
cmp
ljmp
out
push
add
pop
add
pop
repnz
push
sbb
mov
jge
orl
adcb
adc
sbb
imul
push
dec
jmp
and
aad
inc
add
in
add
pop
int
xchg
bound
sbb
imul
xor
cmp
mov
pusha
inc
dec
lock
enter
add
sahf
popf
xor
or
sbb
inc
xchg
rcrl
insl
push
in
leave
mov
pusha
notb
mov
pushf
sbb
xchg
inc
lods
dec
fsubs
repnz
into
leave
or
dec
int3
lcall
ds
pop
pop
add
lock
mov
icebp
sub
jl
inc
rorb
test
sbb
push
adc
mov
sub
scas
add
pushw
inc
sub
add
push
add
push
jae
rcll
popf
imul
add
or
aad
sbb
stos
add
imul
sbb
add
std
notb
mov
add
mov
sub
push
adc
ja
mov
mov
jp
mov
pop
cmp
enter
lcall
push
loop
pusha
rcr
add
inc
testl
jo
add
imul
jns
pop
push
int3
clc
mov
aam
sahf
add
sub
fs
jg
lods
add
push
divb
in
clc
inc
add
aas
cltd
inc
in
test
and
inc
push
aam
push
add
xor
mov
dec
mov
int3
mov
movaps
add
outsl
mov
call
pop
lods
je
dec
call
cmpsb
mov
lock
daa
add
inc
add
jne
fidivs
cmovo
fimull
punpckhwd
lods
inc
cmp
sbb
cmp
call
mov
leave
hlt
dec
and
hlt
cmp
jo
jb
adc
mov
jb
push
inc
jge
into
and
scas
sub
add
int3
es
cmp
jmp
xor
pop
rcll
loopne
out
add
es
into
lret
cmp
fstpt
add
loopne
push
sbb
das
cmp
xchg
push
lock
or
bound
pop
repnz
cmp
push
imull
lods
pop
pop
fstp
sbbb
movsb
push
push
mov
xchg
add
aaa
mov
in
test
out
sbb
cmc
dec
lcall
popf
scas
cltd
mov
pop
lods
add
cmp
mov
arpl
xor
out
mov
and
dec
or
cmpsb
enter
dec
repnz
add
subl
std
repz
lret
or
jb
fcoms
or
jl
dec
pop
add
cmp
sbb
jecxz
and
add
or
into
pushl
lcall
roll
mov
pop
fbld
sub
fadds
cmp
scas
mov
xchg
sti
test
mov
ret
dec
mov
dec
clc
rorb
cmp
es
shll
sbb
adc
and
popa
filds
mov
mov
xor
lahf
jle
mov
jge
test
pop
jb
insb
aad
adc
mov
test
out
or
es
and
jecxz
rcll
mov
test
cmp
sbb
cmp
xchg
ja
daa
loopne
and
and
pusha
adc
js
or
out
sub
pusha
pop
sbb
jmp
mov
pop
and
push
pop
ret
pushf
pusha
sahf
sub
add
mov
mov
add
dec
sahf
clc
call
push
imul
cmp
push
pop
add
pop
aaa
pusha
xlat
and
pop
add
pusha
add
add
sbb
jb
or
inc
adc
pop
dec
in
push
je
sbb
daa
clc
loope
jg
dec
dec
mov
out
or
enter
mov
mov
cmpl
mov
rolb
and
cmp
decb
and
adc
push
jg
cmp
seto
daa
repz
cmp
enter
mov
lock
add
lea
pop
into
je
push
add
adc
mov
dec
imul
add
adc
cmp
add
outsl
xchg
loopne
incb
push
add
fs
shll
xchg
cs
ljmp
loopne
pop
les
push
call
in
add
push
movsl
cmp
lcall
stc
fstpt
dec
or
dec
int3
adc
aam
shll
sub
mov
scas
adc
por
and
dec
adc
daa
push
mov
sub
cld
test
scas
push
sbb
mov
inc
idivl
inc
inc
xor
xor
sub
cmpsb
inc
sbb
fdivrs
inc
andl
or
or
jp
mov
push
push
sub
adc
jno
aad
nop
decb
mov
or
cmp
enter
dec
push
mov
or
xor
push
ljmp
cmpsl
mov
add
push
add
frstor
cld
add
sub
or
mov
xchg
push
cmpsl
push
mov
push
call
adc
dec
rclb
add
jle
dec
xor
cmp
push
dec
push
sarb
inc
lfence
pusha
test
call
jb
and
xor
lock
mov
test
sbb
pop
mov
jmp
xchg
js
js
jmp
or
js
add
loop
sbbb
pop
sahf
inc
xlat
pop
xchg
cmp
js
fisttpl
add
inc
mov
out
inc
sbb
ja
loop
cmovs
inc
shlb
cmp
xchg
dec
ljmp
pop
or
pop
and
xor
and
movsb
jmp
push
add
cmp
sahf
jg
inc
push
mov
movsb
out
add
jo
cmp
add
xchg
or
ret
test
mov
jge
or
pop
push
and
stc
sub
lock
pop
mov
mov
out
jmp
pop
sub
js
push
xor
mov
ja
ja
ror
fidivs
xor
inc
int3
sbb
daa
push
pop
mov
or
xchg
xor
mov
mov
rol
aam
push
dec
adc
mov
xchg
fidivl
inc
in
add
jl
xchg
movsl
xchg
lds
push
mov
cmp
mov
aam
adc
test
mov
and
mov
lock
add
clc
or
loopne
aam
pop
push
out
or
cmpl
ljmp
mov
in
pop
or
jl
cwtl
or
nop
xor
fdivs
cmp
ds
cltd
mov
fs
xchg
adc
scas
xchg
cwtl
inc
inc
aas
stos
loopne
jae
and
aaa
test
or
add
mov
stc
sub
push
add
sub
jge
les
inc
inc
cmp
xchg
xchg
jle
push
nop
enter
inc
xchg
scas
xchg
sbb
and
xlat
fs
sub
int
push
xor
cmc
or
cltd
sbb
dec
aas
inc
jl
pop
pop
dec
les
scas
inc
frstor
cwtl
xchg
pushf
adc
lret
test
dec
push
sysenter
clc
dec
adc
adc
fsubrs
sub
or
jnp
inc
cwtl
fbld
mov
fcoms
adc
pop
push
in
sub
add
aam
adc
adcl
xchg
and
and
jg
sbb
jmp
jae
jg
outsb
cmpsb
nop
in
movsb
ljmp
adc
sbb
sbb
cmpsl
dec
mov
test
sarb
orb
and
and
adc
dec
ret
je
cmp
and
addb
js
or
ret
inc
dec
mov
add
ljmp
add
or
add
push
stc
filds
xchg
out
jg
mov
dec
jmp
or
call
lods
and
jno
cvtpi2ps
addl
test
test
and
xorb
sahf
scas
mov
inc
pop
loop
setge
sbbl
leave
xchg
and
les
popf
add
adc
add
shl
add
lcall
dec
adc
jae
xor
jns
or
cmp
lret
subb
push
call
jmp
add
clc
inc
cmpsb
pop
addr16
dec
shll
pop
fists
nop
lods
adc
dec
into
cwtl
adc
cs
cmp
add
repnz
cmp
mov
jns
xor
pop
add
out
push
add
pop
or
pop
cmp
pop
call
jmp
xchg
mov
pop
in
mov
inc
popa
adc
mov
or
outsl
js
add
pop
loopne
jo
es
add
push
adc
sbb
mov
leave
rolb
in
sarl
dec
idiv
rcrl
push
repz
cmp
add
push
cmpsl
aas
inc
into
add
dec
je
mov
fldt
clc
push
inc
mov
dec
movsb
inc
dec
and
insb
xor
cltd
js
mov
rcll
lods
arpl
and
sbb
jae
fisubrl
jno
push
outsl
lahf
jne
or
insl
dec
xchg
cmp
cmpl
push
mov
mov
pushf
sub
fmuls
mov
out
xlat
xor
push
add
addr16
lds
sub
jbe
gs
dec
mov
sarl
sub
ja
fstpl
mov
sub
push
dec
xchg
add
add
xchg
dec
dec
adc
or
or
inc
pop
dec
iret
and
lods
or
clc
lods
mov
adc
lret
adc
xor
hlt
and
dec
int3
xor
pop
jno
mov
jbe
add
mov
clc
addl
mov
sub
or
push
lods
mov
adc
enter
lods
and
inc
lret
into
mov
adc
and
dec
lret
and
inc
rcl
mov
adc
and
dec
rcrb
sbb
jp
adc
sbb
test
into
add
mov
push
or
mov
mov
push
repz
push
add
jns
rolb
push
stc
scas
and
repnz
outsl
add
lret
prefetch
outsb
clc
sub
scas
push
pop
xor
outsb
add
in
ja
cwtl
mov
add
cmpsb
inc
dec
inc
pop
adc
loop
mov
cmpsl
jns
pop
inc
sub
xchg
sub
inc
cmpsb
adc
das
add
mov
add
dec
xchg
and
pop
hlt
cmp
popa
sbb
jl
xor
mov
push
hlt
sbb
jae
lds
lock
sbb
cmpb
mov
pop
mov
or
popf
sbb
jae
fdivs
sbb
add
stos
lret
faddl
add
stc
push
stos
cmp
insb
push
fimuls
pop
cli
sub
pushf
inc
int
daa
ljmp
flds
add
fstl
cmp
aad
dec
shl
pop
sahf
addr16
mov
fdivrs
stos
es
rorb
jle
and
mov
ds
push
jge
add
inc
adc
out
jl
add
subb
add
jg
stc
mov
jle
pusha
mov
xlat
mov
push
add
decb
adc
cmpsl
lods
push
xchg
cmc
pop
jne
pop
js
jg
jp
sbb
push
mov
dec
inc
push
xor
sbb
push
int
add
data16
test
mov
mov
mov
cmp
orb
mov
int
fcomip
lahf
aam
lret
mov
pop
push
mov
push
pop
adc
pop
in
fidivrs
in
loop
loopne
and
xchg
mov
mov
jb
outsb
lods
sbb
pop
std
add
movsb
mov
add
or
jnp
sub
adc
jae
loope
lret
xor
enter
imul
dec
pop
in
data16
xor
cpuid
insb
loopne
and
sbbb
adc
jae
jae
add
mov
sub
add
rorl
cmc
xchg
mov
cld
sti
cmpsb
scas
fnstsw
jnp
aad
clc
test
add
insl
add
or
faddp
push
add
hlt
mov
xor
inc
fldenv
and
cmp
cwtl
cwtl
ja
jmp
mov
imul
jns
je
mov
aad
roll
test
push
cli
sub
push
and
das
jecxz
and
add
fwait
add
js
sbb
out
ss
pop
pusha
add
mov
add
rcl
pop
sarl
iret
lret
loop
pop
sub
int
aam
and
cmp
and
rcrb
in
cwtl
pop
mov
sbb
add
mov
fadd
movl
fdiv
push
icebp
into
bound
cltd
lea
loopne
std
testl
les
lock
add
xor
cmpsb
loope
add
fidivrl
dec
mov
setns
add
out
xchg
dec
or
lcall
vminsd
mov
push
mov
add
and
ja
movd
cmpsl
push
aas
mov
add
push
inc
push
jg
add
mov
fsub
xor
mov
sub
ret
adc
pop
push
xor
mov
xor
lret
ljmp
loop
mov
cmp
add
and
lock
stos
sub
dec
hlt
push
mov
inc
cmp
add
mov
sbb
rolb
sub
test
xchg
add
adc
rorb
xchg
xor
in
mov
lods
add
add
cmp
insl
mov
push
loopne
bound
push
jnp
test
dec
sbb
jb
pop
bound
mov
faddl
dec
call
out
aad
movb
add
mov
nop
imul
int
in
sbb
mov
xchg
sbb
jb
xchg
mov
or
repz
xor
icebp
xchg
sbb
push
cmpsb
mov
xorb
jnp
or
cltd
cmp
and
push
aad
add
nop
pusha
testl
jns
stos
sbb
sti
pop
dec
pop
popa
pop
adc
add
scas
outsl
popl
sti
je
pop
movsl
or
add
pop
jl
sub
adc
mov
out
les
jb
popf
or
or
lea
xlat
push
push
jl
int3
add
fdivs
mov
jns
js
sub
mov
fisubrl
inc
mov
inc
idivl
sub
cli
test
fimull
fists
pop
nop
add
cmpsl
imul
adc
fnstenv
rcrl
pop
push
add
mov
inc
iret
add
cmp
or
adc
xor
cmp
pusha
mov
inc
mov
mov
dec
icebp
mov
aas
adc
sub
add
mov
mov
lret
xor
pxor
add
mov
movsb
dec
push
inc
add
ja
loopne
jg
add
repz
into
je
cmp
xchg
scas
inc
loopne
add
aam
xchg
jbe
mov
neg
add
push
cmpb
cltd
ret
sbb
pop
pusha
hlt
add
inc
mov
cmp
mov
loope
jecxz
pop
jns
mov
adc
repnz
je
ret
push
mov
dec
shrl
fwait
or
dec
xor
insl
add
pop
imul
add
mov
sub
dec
lea
popa
idiv
lods
test
jg
outsb
lcall
or
mov
adc
adc
mov
and
jecxz
mov
pop
add
test
pop
arpl
cmpb
sarb
gs
cmp
xor
in
push
add
ljmp
add
push
fstl
or
xlat
repz
mov
hlt
negb
inc
add
repnz
adc
movsl
pop
pop
in
lea
stos
and
jge
jp
add
xchg
push
mov
pop
lahf
jecxz
out
out
push
scas
sbb
mov
cmp
sbb
enter
shlb
inc
sbb
sub
fisubl
push
or
push
loope
jmp
sbb
sbb
in
add
cld
xchg
sbb
cmp
mov
pop
push
and
or
add
xor
imul
lret
sar
lds
cltd
out
add
adc
add
nop
push
popf
sbb
in
add
xor
xchg
add
or
outsl
sub
xor
add
out
stc
cmp
dec
add
lcall
pop
insl
mov
xor
or
fwait
sbb
mov
mov
pop
and
jge
sahf
mov
jae
sub
and
inc
jmp
sub
add
enter
add
lods
fadds
pop
mov
in
arpl
push
add
int
gs
iret
lock
fwait
cmc
push
scas
scas
add
pusha
adc
xor
lret
ficoml
jo
cmpsl
scas
insl
loopne
add
dec
nop
sub
add
daa
cmp
insb
add
cmp
cmpsl
cld
inc
subl
adc
inc
sbb
add
lock
mov
add
push
xchg
dec
pop
mov
add
mov
xor
cmp
je
inc
push
dec
and
lods
or
add
push
ja
sub
mov
subl
jl
add
adc
pushf
jge
movsb
sub
sbb
repnz
push
mov
ret
push
orb
add
mov
icebp
inc
in
push
lock
sub
pop
mov
adc
pop
lea
pop
jl
cmp
xchg
dec
mov
xorl
arpl
cmp
loopne
push
jle
xor
lea
dec
mov
dec
sub
xchg
enter
xchg
sbb
add
sub
cmpl
lea
xchg
cmp
aaa
push
ret
xor
xchg
or
xor
mov
aaa
adc
pop
lea
dec
ss
sub
test
jecxz
outsl
into
or
mov
jno
dec
adc
sbb
xor
mov
push
jno
cmp
lcall
sbb
into
iret
inc
aaa
pop
stos
dec
pusha
push
jp
push
ljmp
pop
push
sub
shlb
cmp
xlat
cmp
adc
movl
shll
sub
sub
sub
cwtl
aam
sub
sahf
pop
or
push
aas
xor
stos
sbb
sub
icebp
mov
and
loop
insb
pop
shll
ret
or
test
mov
xor
clc
push
movsl
add
xorb
roll
jbe
xor
add
inc
xor
or
inc
cmp
fldt
xor
cmp
mov
dec
test
data16
div
or
cmp
icebp
loope
mov
sbb
sbb
test
outsb
mov
and
fbld
jl
push
mov
cmc
xchg
xor
push
lcall
fwait
push
pop
dec
call
dec
push
dec
adc
subl
mov
dec
je
fildll
push
pop
mov
sub
inc
sub
js
or
test
out
repnz
push
jne
mov
test
sub
test
mov
cmp
dec
test
movsl
mov
aam
push
daa
inc
push
and
jmp
iret
adc
test
xchg
adc
add
and
xlat
mov
xchg
in
daa
mov
xor
xor
enter
xlat
or
push
sbb
cltd
pop
mov
adc
xchg
sti
sbb
add
cmp
jo
add
xchg
mov
inc
aad
ja
testl
shlb
jo
adc
movsb
and
and
xor
sub
dec
test
mulb
nop
aam
cmp
fldenv
mov
cmp
repz
sub
cmp
in
mov
pop
cld
and
lahf
mov
push
sbbl
pusha
in
jle
insl
fnstcw
scas
jbe
sub
sbb
push
jp
adc
in
pop
mov
mov
mov
sbb
ret
out
mov
mov
int
ljmp
lmsw
cmc
sbb
push
insb
add
out
push
mov
xor
and
or
and
adc
dec
gs
push
in
mov
add
mov
mov
add
xchg
jb
in
and
xchg
cmp
or
adc
xor
xchg
push
add
xchg
or
add
imul
or
mov
fsubrs
inc
push
leave
insl
sbb
pop
jle
adc
jno
or
lock
and
add
movzwl
adc
rolb
loop
push
or
jecxz
add
and
or
sub
js
data16
leave
and
adc
push
sbb
je
es
pop
ud2
test
addr16
sub
lcall
add
loop
cmp
pop
mov
dec
adc
cmp
and
loope
adc
test
adc
stos
pop
movsl
xchg
pop
cmp
sahf
aas
mov
xchg
inc
lods
add
mov
mov
es
adc
push
addr16
movb
add
jae
aad
mov
cwtl
inc
rclb
push
ficompl
js
cltd
and
and
int3
or
xchg
je
aam
mov
andb
call
mov
int
xchg
clc
std
testb
push
and
imul
push
xchg
loop
sbb
in
ret
adc
add
push
setge
or
adc
sub
inc
or
push
add
mov
jb
push
xlat
cltd
add
or
mov
cmpsl
mov
pop
je
xlat
lret
or
in
pop
bswap
adc
insl
and
cmc
push
cwtl
mov
ja
mov
push
and
push
outsb
add
sbb
cltd
push
mov
mov
ret
add
or
imul
loop
and
into
push
lock
in
cmp
fstps
cmp
xchg
and
push
jae
adc
insb
pop
das
imul
mov
or
adc
xchg
sub
mov
in
xor
frstor
fsubrs
or
push
adc
nop
mov
add
inc
pop
fdivs
push
pop
andb
ret
call
sub
and
sbb
fcoml
cltd
sbb
xchg
psubsb
push
jae
xlat
leave
pushf
call
enter
sub
cmp
mov
cmp
pop
jl
and
cwtl
les
sbb
in
or
jecxz
or
xchg
daa
cwtl
sbb
in
addb
pop
es
test
and
test
lcall
xchg
jno
and
insl
pop
pop
xchg
xor
outsl
jbe
je
sti
and
pusha
cmpsl
je
adc
xchg
clc
add
movsb
jnp
sub
mov
push
and
or
jno
int
aam
add
cmp
js
dec
push
stos
sti
shr
test
incb
add
insb
add
push
xchg
mov
cmp
decb
fldcw
or
and
sub
jns
add
out
shrb
or
ds
loop
ja
inc
sbb
sti
jb
cld
repnz
ffree
mov
fiadds
jle
inc
fidivrl
js
push
sqrtps
faddl
xchg
mov
lcall
ret
and
and
test
xchg
mov
leave
loopnew
pop
adc
pop
movl
sub
sbb
and
and
mov
mov
shll
mov
xor
and
rorl
out
aas
push
xchg
sub
pop
jle
inc
test
or
scas
jbe
pusha
add
aas
dec
mov
add
sti
lock
scas
lea
pushf
aam
mov
std
add
inc
mov
add
ljmp
sbb
pop
jnp
movsl
rolb
nop
sbb
jo
lock
lods
js
sbb
push
shll
aad
les
lods
cmp
add
xor
xor
push
dec
js
adc
popw
jne
sbb
dec
sub
fbstp
mov
mov
inc
fcomps
pop
and
dec
fcompl
clc
loopne
jno
add
negb
push
or
sbb
push
xchg
push
inc
je
xor
adc
jbe
insb
push
xor
and
and
sbb
cltd
adc
sub
jmp
movsl
pop
xchg
pop
aad
xor
fscale
jg
je
or
add
sub
outsl
clc
in
hlt
push
add
insb
scas
mov
mov
and
mov
fcoml
test
cmp
push
jae
dec
divb
icebp
cwtl
loopne
mov
dec
and
loope
push
imul
dec
mov
mov
cld
mov
sbb
jg
ljmp
adc
enter
imul
dec
divb
add
sbb
add
dec
cmp
sbb
inc
lahf
negb
mov
xchg
or
adc
or
shlb
xchg
mov
add
lock
add
cmpsl
push
mov
pop
inc
nop
pop
xchg
push
aaa
push
sub
loope
xor
jmp
je
dec
sbb
je
push
push
adc
cltd
cmpl
outsl
fsts
add
mov
icebp
ret
jnp
xor
test
sbb
inc
mov
js
sahf
shrb
inc
fbstp
mov
mov
es
dec
pop
sti
xchg
mov
inc
jno
enter
fldl
cli
inc
addl
dec
aam
imul
inc
mov
lret
adcb
mov
pop
sub
daa
add
insl
sub
cmpsb
les
mov
mov
fstp
and
aas
xchg
fcoms
mov
imul
test
add
and
mov
movsb
jmp
add
ss
ret
outsl
orb
jge
xor
sahf
cli
and
pop
int3
inc
lahf
decb
sbb
mov
nop
add
popf
mov
das
push
enter
sbb
mov
jge
cs
add
add
aad
xor
and
addr16
sub
adc
pop
and
ljmp
into
je
je
sub
mov
pop
mov
sbb
pop
daa
sahf
jmp
jo
rcrl
ret
lret
jae
fsubrl
loopne
pop
jo
adc
adc
mov
inc
jmp
add
stc
fmuls
add
nop
cli
xchg
push
sub
out
mov
pop
arpl
ds
sub
mov
cmp
add
adc
jae
lds
dec
enter
es
sbb
jp
cmp
cld
int3
add
dec
stos
inc
xchg
cld
xchg
mov
scas
ss
jmp
xor
sbb
jne
add
dec
repnz
and
add
push
add
sub
cltd
rorb
push
js
add
sbb
cltd
in
jae,pt
cltd
stc
sbb
popa
mov
icebp
sar
das
shlb
jbe
aaa
loope
jo
push
nop
xor
mov
outsl
or
push
jecxz
jl
jnp
dec
faddl
lods
fbstp
xchg
pop
adc
and
add
sbb
mov
mov
dec
add
push
inc
sub
add
inc
mov
test
dec
or
cmpsb
pushf
add
rol
jp
mov
cwtl
mov
les
cmp
jg
sahf
push
cmp
mov
inc
push
mov
into
add
dec
cmp
outsb
jb
pop
clc
xor
in
cmp
jne
or
add
mov
cmp
nop
movsb
out
adc
push
movsl
pusha
sub
mov
adc
mov
push
mov
add
in
enter
add
add
cld
sahf
call
push
adc
in
lock
mov
popf
cmp
lahf
popf
and
enter
mov
enter
xor
adc
dec
pusha
loopne
jp
dec
in
and
mov
cmp
ljmp
kmovb
cwtl
sbb
xchg
mov
cmp
jg
inc
mov
inc
xchg
clc
daa
leave
in
and
test
dec
insb
add
or
js
jbe
lock
xor
pop
rolb
jle
pusha
mov
aaa
int3
mov
add
add
jle
push
movsb
cld
lret
and
dec
pop
sub
cltd
lods
inc
icebp
mov
scas
test
addl
jge
mov
cwtl
adc
jl
or
ljmp
adcb
or
frstor
cmpsl
cmpsb
push
sbb
mov
nop
adc
mov
es
dec
pop
and
mov
sbb
mov
cmp
xchg
jg
mov
dec
cmp
push
scas
pop
pop
je
dec
test
rorb
and
or
mov
add
clc
push
cmc
or
dec
cli
mov
push
dec
cltd
push
cld
mov
mov
xchg
std
cmp
adc
mov
sub
xchg
nop
les
idivl
sbb
add
nop
std
lahf
hlt
xorb
add
pop
add
adc
jmp
sbb
cs
inc
enter
mov
test
lock
sbb
dec
fstl
fmuls
pop
mov
mov
in
add
cltd
add
add
cmp
lods
scas
or
jmp
es
icebp
inc
scas
mov
hlt
sbbb
adc
xor
shll
adc
imul
or
test
ret
ror
pop
int3
loopne
dec
dec
add
mov
add
xchg
xor
jne
dec
imul
sub
data16
add
nop
ss
test
sbbb
add
aam
sub
test
add
xchg
and
je
add
ds
inc
les
pop
inc
and
dec
mov
push
std
push
pop
and
jge
pop
mov
adc
sub
loop
fs
cmp
mov
add
xchg
push
xchg
and
push
mov
cmpsb
mov
and
jmp
add
sub
xchg
in
dec
mov
mov
push
lahf
in
inc
jb
push
imul
in
mov
pop
ljmp
int3
push
and
fdiv
sbb
lock
sbb
lock
les
mov
imul
aad
xchg
lods
xchg
mov
outsb
nop
mov
dec
idiv
es
add
dec
cmp
jmp
and
add
addr16
lret
sub
and
adc
scas
mov
cmp
mov
mov
jl
pop
outsl
push
mov
fwait
mov
xor
xchg
call
das
insb
dec
and
mov
jle
inc
sub
dec
data16
fdivrs
pop
cmp
add
jnp
xor
sbbl
or
test
stc
and
sbb
bound
jg
shlb
sub
ret
out
xlat
movsb
clc
sub
jl
mov
mulps
xor
xor
cmp
outsb
mov
push
in
push
or
and
out
pop
cld
or
addr16
test
add
je
mov
adc
xor
fmull
outsb
xchg
push
mov
jmp
push
cmp
add
sub
adc
pusha
add
add
and
add
mov
push
testb
mov
ret
scas
addl
out
sbb
jno
or
add
pop
mov
lock
xor
and
loopne
or
inc
cmpsl
mov
inc
add
aam
mov
xor
or
in
adc
mov
add
ljmp
push
or
push
and
loop
jns
sarb
mov
call
mov
xor
and
test
cmp
push
ror
arpl
pushf
and
dec
pop
jb
push
xor
movsl
cmp
or
jmp
loope
fs
sbb
mov
adc
mov
mov
inc
sbb
bound
lahf
sbb
rcrl
fmull
jo
scas
push
mov
scas
cltd
clc
inc
push
jb
je
mulb
rolb
lds
xor
dec
mov
imul
inc
add
clc
jp
lcall
les
inc
add
in
push
shll
je
adcl
xchg
aam
push
cmp
loop
fdivrs
mov
or
call
mov
dec
adc
pop
mov
fcomps
cltd
mov
dec
or
cmp
mov
js
in
adcl
pop
shl
jno
add
jbe
mov
and
jmp
lcall
ss
fs
gs
pop
adc
mov
fldl
or
sbb
das
nop
mov
mov
sbb
add
sub
sub
mov
sbb
andl
test
test
mov
inc
push
pop
js
sbb
scas
push
adc
xor
push
xchg
std
shll
pushf
xchg
cmc
push
fs
sti
pop
or
mov
in
inc
je
xor
jo
in
out
mov
adc
xor
movsb
mov
sbbb
outsb
jle
adc
and
mov
inc
lcall
mov
call
iret
push
mov
jg
dec
add
cmp
mov
sbb
or
and
add
loope
mov
cmp
inc
push
and
fyl2x
adc
test
adc
xchg
xor
mov
movl
cwtl
and
add
mov
and
adc
jle
js
pop
or
ljmp
push
cmp
hlt
lock
mov
sbb
and
or
mov
mov
xor
adc
lahf
xchg
ds
incb
cmp
or
in
pop
mov
xor
jmp
insl
jno
cmp
movl
xchg
clc
loopne
xchg
dec
es
lods
call
push
add
cmpsb
dec
shll
fwait
aas
dec
shr
and
add
popf
out
test
roll
pop
rcpps
enter
add
cli
adc
inc
fcomps
je
ror
and
add
mov
push
push
fiadds
testl
stc
xor
jmp
pusha
subb
lret
and
clc
cmp
add
mov
xor
aas
ds
xor
mul
push
cmp
mov
aaa
fsts
push
jle
sbb
push
repz
dec
loopne
sub
push
fcoms
inc
and
mov
insl
fiaddl
aad
add
dec
push
mov
bound
xchg
mov
sbb
mov
xchg
out
in
push
bound
mov
jmp
sub
sub
mov
cmp
out
std
les
sbb
ss
add
rolb
iret
cld
testl
addb
cmp
and
add
shlb
adc
out
push
or
repnz
jo
or
dec
mov
shrb
outsl
xchg
or
sub
add
in
add
mov
mov
ljmp
sub
rcrb
add
mov
imul
movsl
fcomps
sbb
dec
dec
pusha
sarl
sarb
lret
loop
jns
or
into
cmp
fdivl
sub
mov
mov
andb
out
aas
cwtl
pop
or
xchg
sub
jae
add
sbb
fsubs
cli
dec
aaa
or
cmp
jno
xchg
or
orb
add
aam
and
or
out
mov
inc
sbb
incb
fisubrl
scas
out
or
inc
gs
aaa
ljmp
mov
inc
lock
pushf
mov
push
mov
and
xchg
lock
pop
xchg
inc
push
cmp
sbb
adc
or
and
pop
pop
mov
fwait
inc
fdivs
push
add
int3
pushf
in
sub
and
imul
or
aas
sbb
jle
push
scas
push
hlt
inc
xchg
pop
cmc
and
es
int
cmpsl
bound
pushf
and
mov
dec
nop
adc
adc
lret
and
sahf
and
fmuls
out
iret
adc
pop
dec
hlt
add
cld
mov
nop
pop
mov
dec
or
out
mov
xchg
loop
fs
test
addl
pop
loope
sub
sbb
sub
hlt
dec
fwait
in
rcrl
sub
cwtl
dec
ret
cmpsb
jl
sub
xor
gs
xor
pusha
in
testl
push
int3
pop
add
dec
loopne
inc
stc
iret
lock
cmp
cmp
daa
call
test
push
add
cmpsb
push
nop
les
mov
sbb
xchg
rcrb
outsb
and
popf
add
dec
lcall
mov
stos
push
mov
test
adc
pop
pop
outsl
sbb
in
ljmp
enter
clc
add
scas
rcll
mov
push
push
ss
jo
jl
es
mov
mov
test
in
dec
dec
mov
push
and
xorb
out
iret
inc
fiadds
in
cltd
pushf
push
jmp
cwtl
pop
cmp
je
cmp
lea
dec
lock
in
and
inc
adc
jnp
push
push
pusha
mov
les
bound
les
cmp
je
and
xor
push
mov
fs
xchg
pop
or
adc
or
and
cmpsb
xor
add
add
enter
icebp
push
cwtl
dec
mov
pusha
cmp
mov
fistpl
or
data16
add
xor
cs
or
push
push
movsb
rorl
mov
sub
jo
rorb
add
mov
inc
lds
cmp
and
nop
add
addr16
clc
mov
pop
or
in
in
out
daa
shl
dec
sub
sub
mov
orl
or
or
sub
push
adc
stos
and
insl
daa
arpl
xor
nop
pop
mov
inc
cld
sub
xor
out
add
outsl
xchg
or
push
pop
lds
adc
push
xchg
faddl
stos
cmp
push
addb
jb
and
xchg
stc
ja
inc
hlt
add
imul
int3
in
mov
push
cld
add
int
call
enter
test
sub
stc
dec
push
aas
sbb
dec
rcl
pop
sbb
push
pop
cmp
xchg
mov
lret
add
cmpsb
daa
mov
jne
repz
lock
into
or
test
mov
pop
std
or
mov
inc
and
adc
bound
sub
lcall
inc
ds
or
je
pop
shlb
or
out
fimuls
rolb
jecxz
subb
cld
imulb
andb
scas
sbb
pop
inc
fiadds
aas
pop
and
xchg
mov
add
pop
inc
push
add
aam
dec
loope
xchg
fs
push
lock
and
mov
or
sbb
test
int3
in
inc
jmp
add
repz
test
popa
js
sub
mov
add
je
rcr
andb
mov
sbb
nop
in
and
andb
add
andl
xor
mov
sbb
push
push
leave
inc
dec
in
imul
imul
scas
int3
cmp
enter
cwtl
or
loopne
dec
mov
add
sbb
push
cli
cmp
mov
cwtl
ljmp
mov
hlt
mov
cltd
shl
in
fiadds
shlb
sub
dec
push
lcall
or
dec
insb
or
orb
jge
les
jp
xorb
pop
cmp
adc
daa
sub
inc
aam
call
arpl
call
fs
in
pusha
lods
push
mov
xor
test
sub
mov
or
or
insb
fs
in
lahf
jno
mov
popf
add
stos
mov
icebp
shl
incb
stc
sub
test
lret
andb
xor
xchg
push
pop
push
mov
mov
mov
daa
test
mov
xchg
xchg
and
lea
jmp
aad
or
cmpsl
push
or
jl
adc
sbbl
sub
adc
xlat
pop
xor
mov
rcrb
int3
cmc
adc
xchg
outsb
mov
inc
cld
and
pop
add
hlt
mov
test
pop
stos
mov
mov
into
add
push
test
ds
enter
out
or
jp
jno
add
pusha
sti
and
adc
add
and
adc
in
xchg
popf
push
mov
out
xlat
sub
notb
je
cmp
push
and
inc
sub
adc
aad
inc
dec
or
add
sahf
push
xchg
mov
sbb
and
shr
int3
adc
add
or
mov
adc
inc
pop
add
or
xchg
push
insb
repnz
sub
add
shlb
adc
js
sti
adc
pop
mov
sbb
push
loop
xor
inc
nop
call
out
push
stc
jno
pop
test
daa
test
rcr
popa
orb
fidivl
sub
xor
stc
ljmp
mov
adc
aam
fadds
dec
call
push
mov
enter
or
push
push
cli
add
sbb
lcall
xor
les
dec
in
adc
pop
add
cmp
in
inc
fcoms
xchg
mov
or
and
int
mov
adc
stc
cmp
adc
in
fwait
sarb
push
mov
dec
adc
and
loop
int
stos
leave
mov
sub
add
ljmp
lods
xchg
pushf
fiadds
shrl
xlat
push
add
test
jl
fisubs
cli
int3
or
and
xchg
out
subb
push
daa
iret
pop
sbb
addb
cmpsb
iret
mov
stos
dec
cmp
icebp
inc
hlt
sarl
or
mov
xchg
pinsrw
adc
and
adc
lds
sbb
jp
jge
xor
sub
in
pop
jbe
jg
pushf
faddl
fucomi
adcl
dec
iret
inc
pop
ficompl
mov
add
aas
and
adc
aam
hlt
adc
sbb
int
enter
sbb
fcomps
add
sbb
mov
add
aaa
in
ss
in
jns
arpl
je
mov
xor
xchg
adc
call
and
xor
shrb
and
icebp
jns
pusha
cltd
std
dec
jb
out
lds
js
ret
push
jns
in
sub
or
mov
adc
xor
adc
sub
inc
dec
or
imul
int3
js
test
bound
push
out
pop
jo
and
and
or
inc
xchg
in
loopne
cli
cwtl
and
mov
cs
icebp
add
into
out
inc
add
pop
dec
ret
sbb
clc
dec
fsubl
and
add
sbb
and
cmp
imul
xchg
inc
add
xchg
insl
and
test
subl
lock
xchg
sbb
fs
andl
std
addb
das
dec
loop
and
pusha
popl
popa
mov
adc
mov
adc
add
repz
and
dec
mov
pop
dec
fmul
and
fiadds
ds
inc
inc
sub
imul
mov
pusha
dec
mov
xchg
les
inc
les
adc
adc
fsubl
call
movsl
leave
rolb
jp
push
xor
adc
or
fmul
enter
mov
aaa
add
mov
xor
and
loopne
or
cli
push
pop
xchg
out
adc
add
xor
jmp
sub
or
inc
xchg
subl
push
dec
clc
sar
xor
mov
cld
pop
ret
push
add
mov
jmp
sti
jecxz
add
push
jge
pop
dec
xchg
mov
test
adc
pop
inc
mov
test
cmp
push
ds
mov
xorb
call
dec
mov
pop
dec
lret
pop
fcomps
push
scas
mov
and
inc
mov
or
repz
cmpsl
mov
out
add
or
imul
js
cmp
pop
push
mov
or
xor
fstl
scas
inc
push
or
push
aam
in
and
cli
js
hlt
add
cmc
push
or
add
add
pop
cmpsl
out
call
loopne
jle
pop
sub
sbb
gs
je
fcomps
or
in
mov
mov
cmp
test
orb
ret
jo
pushf
add
pushf
pop
addl
mov
leavew
cmpsb
push
mov
cmp
imul
cltd
ljmp
addr16
stos
or
loop
and
dec
or
push
movsb
std
scas
out
pop
fsubs
out
bound
mov
cmpb
nop
pushf
fs
or
inc
pop
and
pop
and
in
inc
mov
test
aam
add
das
inc
and
push
mov
call
jmp
push
add
fcmovne
inc
stc
pop
rclb
add
adc
inc
and
add
pusha
cltd
scas
pop
add
mov
call
and
subb
and
sub
bound
dec
jns
add
rcrb
push
sbb
adc
nop
or
pop
rcll
or
xchg
mov
rol
mov
int3
pop
leave
popf
pop
sbb
and
or
xchg
incl
sbb
cmpsb
insb
or
int3
or
das
mov
fcom
xor
aas
add
stos
pcmpgtd
adc
les
shlb
hlt
jo
mov
pop
dec
pop
pop
push
inc
push
xor
sbb
inc
and
xlat
fsubl
shl
dec
sub
in
xchg
xor
mov
pop
and
xlat
jo
dec
adc
xor
sti
pop
out
mov
inc
dec
add
into
mov
cwtl
or
add
add
pushf
jecxz
in
and
jo
inc
rclb
fs
lcall
push
cmp
es
cld
or
mov
jae
or
mov
jb
out
in
and
dec
or
or
sbbb
out
iret
lods
gs
in
ror
incb
mull
adc
and
mov
xchg
add
repz
add
sbb
pop
les
call
enter
iret
mov
mov
pop
push
cmovbe
inc
daa
pusha
jnp
xor
mov
shll
or
dec
dec
mov
mov
lock
mov
mov
and
adc
jg
add
sbb
pop
xchg
cmp
fadds
pop
pop
cbtw
arpl
call
inc
int3
adc
or
in
mov
add
add
inc
aaa
inc
inc
stos
adc
mov
add
nop
dec
dec
sub
andb
or
xorl
adc
mov
idivl
and
add
push
add
fists
xchg
cmp
and
sub
mov
inc
scas
rcl
cmp
sub
cmpb
sub
inc
add
je
aas
adc
nop
and
jae
sbb
mov
or
rclb
mov
pop
mov
inc
cmp
mov
dec
jnp
inc
add
xor
cmp
mov
mov
out
jmp
dec
cmpl
mov
or
mov
add
pop
push
jp
out
mov
adc
cmpsl
pushf
pop
inc
sub
add
scas
iret
mov
lods
pushf
test
pop
adc
les
cs
ja
shl
inc
cmp
pusha
test
xchg
mov
cld
sbb
and
aam
js
and
cmp
add
jp
ja
int
pop
xor
pushf
out
insb
adc
aam
mov
xchg
pop
sub
adc
mov
sub
or
loop
lock
push
test
push
out
loopne
pop
data16
lret
adc
in
addl
and
pop
pop
sub
inc
xor
lock
xchg
adc
sub
fmuls
sahf
call
or
inc
icebp
shll
clc
add
mov
in
aaa
add
mov
cmp
sbb
push
mov
and
bound
mov
test
subl
cmp
ret
psubb
test
pop
mov
ret
nop
les
cld
movsb
test
mov
clc
addb
xchg
mov
xor
adc
je
dec
sbb
test
gs
int3
fdivrs
sub
dec
pushf
and
push
fisubs
aam
test
lret
lret
and
nop
mov
stc
xor
xor
enter
cld
out
call
or
and
pusha
sub
rclb
pop
mov
add
or
and
mov
add
daa
sbb
es
lret
fcoml
rclb
mov
outsb
sub
movsb
jg
aaa
flds
test
mov
cmp
test
dec
jbe
test
xor
hlt
xor
add
out
push
loop
xor
and
xchg
mov
bound
add
xchg
rcr
jp,pt
out
push
mov
jl
add
leave
push
push
cli
stc
inc
in
mov
push
loopne
mov
sub
movsb
int3
sbb
lock
and
cli
mov
and
fwait
pusha
out
jmp
jecxz
adc
fisttps
testb
lret
push
and
mov
call
lret
mov
mov
sub
mov
push
jmp
push
filds
in
lock
add
push
loop
repnz
xor
stos
or
clc
mov
xor
cmp
outsl
mov
mov
cwtl
dec
pop
ficoml
sub
hlt
jae
adc
pop
xor
es
push
dec
push
fwait
inc
int3
loop
sbb
pop
fs
loopne
in
dec
xchg
lock
nop
jb
xchg
push
jecxz
jg
int3
insb
loope
test
mov
and
adc
mov
pop
dec
mov
pop
mov
outsl
or
imul
add
add
shll
sbb
mov
add
push
inc
add
loop
sub
pusha
popa
xor
jge
mov
cmp
sbb
imul
dec
push
push
inc
xchg
or
js
pop
adc
add
arpl
sbb
add
jno
in
shll
js
mov
sti
add
push
xchg
pop
or
bound
aam
push
pop
test
movsb
xlat
mov
lock
outsb
pop
dec
outsb
pop
or
getsec
add
out
dec
dec
mov
xor
inc
push
popa
inc
cmpsl
rclb
adcb
cmp
push
push
sahf
cmp
inc
pusha
ret
sbb
jnp
or
lea
je
push
add
push
out
arpl
and
push
stc
mov
cmp
pushf
or
ss
mov
inc
adc
xor
mov
add
insl
mov
add
xor
lds
mov
stos
xchg
daa
out
inc
js
popa
addl
add
or
mov
jnp
add
test
imul
or
pop
or
leave
jo
mov
add
iret
andl
aad
inc
clc
mov
and
idivb
ss
lock
test
pop
mov
mov
data16
pop
inc
sub
adc
call
loop
fmuls
ret
pop
shrl
pop
addr16
into
cmpsl
in
add
shl
imul
push
or
iret
mov
mov
mulb
lcall
in
loopne
out
iret
js
push
or
fs
add
dec
loope
mov
and
cld
or
cltd
icebp
jbe
rcrb
adc
push
cmp
les
sub
js
and
sbb
xor
mov
xor
mov
repnz
jge
add
clc
aaa
arpl
cli
rcll
addl
jp
lea
hlt
pop
pop
xlat
xchg
fsubp
inc
push
or
xchg
cltd
in
jge
push
lock
test
dec
aam
xchg
loopne
xchg
add
sbb
sub
sarl
add
dec
cmp
or
fs
jo
dec
xchg
mov
mov
sub
add
out
push
sub
in
out
das
dec
daa
dec
movsb
test
aas
jae
mov
xorl
mov
sbb
sbb
dec
mov
add
mov
clc
ret
shlb
testb
imul
in
sbb
xor
pop
jge
mov
or
dec
mov
sub
mov
mov
insb
mov
sub
or
sub
ja
mov
dec
bound
test
into
icebp
roll
rol
fldenv
or
push
mov
jle
loop
test
imul
or
jle
or
dec
xchg
arpl
and
push
add
shlb
sti
dec
mov
mov
enter
pop
mov
int3
and
dec
mov
shl
mov
add
fwait
push
sub
xor
dec
mov
pop
inc
mov
and
and
add
pop
fdivr
sub
mov
dec
mov
adc
insb
dec
mov
xchg
jl
insl
pop
push
aad
sbb
jnp
rcrl
cmp
adc
pop
add
push
enter
sub
push
pusha
pop
pop
arpl
xor
mul
enter
xor
inc
mov
xorb
lods
sub
lods
adc
xor
cmp
loope
je
mov
je
dec
inc
adc
int
sbb
or
outsl
add
xlat
xor
js
xor
and
les
inc
shlb
sbb
fcmovnbe
jae
lret
lret
add
lock
leave
add
pusha
idivl
pop
jb
jnp
out
mov
xchg
pusha
dec
rorb
mov
ds
andl
mov
sbb
sbb
or
push
stos
int
xor
sub
adcl
orl
inc
sbb
insb
mov
shlb
mov
push
lea
xorb
or
jb
insb
add
jmp
loope
or
pop
add
mov
in
fwait
add
adc
pusha
sbb
mov
jo
and
in
and
popf
sbb
scas
dec
int
lock
mov
pop
ljmp
mov
clc
xchg
cmp
mov
adc
add
fincstp
stos
mov
add
xchg
xorb
sub
lds
mov
jl
xadd
jno
add
and
xor
push
hlt
adc
lahf
cwtl
ret
ds
cli
mov
push
fcompl
cmp
jecxz
out
ret
hlt
push
adc
add
jno
mov
xchg
xchg
add
push
inc
and
scas
dec
icebp
fs
mov
pop
pop
cmp
adc
adc
test
xchg
mov
add
jne
test
xchg
out
clc
mov
jmp
pop
gs
inc
lcall
in
add
xor
xor
jo
push
add
rorl
es
add
ret
inc
test
mov
dec
lea
pushf
pop
mov
pop
push
xchg
leave
les
faddl
dec
nop
pushf
mov
cmp
inc
loopne
enter
cli
xchg
das
pop
fisubs
xor
bound
pop
mov
cld
movsb
mov
or
jns
jecxz
loope
or
and
dec
mov
pop
mul
mov
clc
mov
pop
in
in
inc
mov
sub
mov
lods
add
cmpsb
mov
add
inc
push
nop
add
add
and
call
ror
or
stos
mov
test
adc
bnd
cld
fidivrl
mov
cltd
loop
js
sub
in
incb
sbb
std
mov
add
cmp
mov
lods
test
cli
int
xchg
imul
mov
xchg
mov
insb
in
cmp
mov
jmp
cmp
out
mov
pop
shlb
push
int
incb
fsubl
jbe
add
lcall
add
out
add
fbld
sti
xor
stos
roll
fisubs
sahf
mov
ret
popf
add
pop
aam
out
dec
jno
test
xchg
ja
test
add
mov
sub
adc
test
mov
xabort
adc
sbb
add
andb
cltd
dec
xorl
or
ljmp
mov
sahf
add
xchg
xchg
inc
ja
push
and
add
adc
and
das
xchg
jnp
mov
pop
bound
add
or
sub
icebp
jg
cld
call
daa
inc
xlat
mov
and
add
in
repz
push
sbb
and
rcl
mov
dec
cmp
popa
mov
and
hlt
and
stc
mov
clc
shlb
sbb
sahf
cmp
in
jecxz
mov
jo
mov
xorb
das
leave
inc
lret
cmp
add
inc
add
add
cltd
popa
push
add
into
add
adc
xchg
mov
sub
stos
or
pop
mov
scas
clc
cmc
adc
pop
cmp
sbb
add
ret
adc
scas
loopne
in
jnp
hlt
mov
xchg
cmp
adc
or
mov
add
lock
adc
stc
imul
inc
push
scas
add
test
lock
sbb
arpl
jecxz
mov
add
sbb
adcb
fbld
mov
mov
addr16
movb
jmp
or
sbb
pop
add
rorb
and
out
add
push
jl
dec
into
call
sub
sbb
les
inc
lcall
sahf
and
add
jmp
lods
adc
out
cmc
bound
pop
ljmp
and
hlt
and
cmp
movsb
cmp
popf
xchg
shll
sub
dec
and
inc
mov
adc
sbb
dec
lds
and
inc
mov
pop
rcll
add
mov
add
add
not
add
in
out
frstor
neg
test
fwait
or
loop
inc
clc
xchg
inc
and
rcrb
movsb
call
sbb
fisubs
pusha
push
or
pop
dec
xlat
in
mov
push
mov
dec
jl
mov
sbb
inc
jl
mov
mov
and
nop
cwtl
pusha
and
ficompl
pop
aaa
ficomps
pop
inc
fs
notb
lea
ret
mov
mov
sbb
shlb
xorb
inc
or
enter
mov
or
lods
daa
mov
xor
in
add
or
outsl
add
add
call
hlt
jl
pusha
inc
sub
xchg
adc
adc
pop
clc
pushf
test
adc
nop
xlat
and
mov
pop
fcoms
test
mov
test
add
loopne
dec
and
test
inc
mov
rcrl
add
inc
jmp
lock
cmp
enter
mov
adc
inc
sbb
and
and
out
bound
xchg
adc
mov
sub
test
dec
pop
movsl
stos
sub
inc
xor
or
and
sub
add
pop
pop
negb
aam
add
hlt
clc
jmp
pusha
mov
jl
adcb
pusha
outsb
dec
mov
outsl
adc
xchg
adc
pop
ljmp
ds
sbb
adc
jg
push
mov
inc
ds
imul
xchg
push
cmp
mov
fldl
in
dec
sub
mov
xor
push
fsubrp
xchg
pushf
sahf
int3
mov
orb
aam
loopne
std
in
mov
nop
or
je
adc
popa
or
je
clc
daa
sub
xor
mov
std
les
scas
rclb
mov
int3
add
in
push
arpl
xchg
addb
lds
loopne
and
test
mov
cmp
inc
adc
icebp
cld
adc
and
mov
mov
mov
push
push
faddl
sahf
cld
dec
insb
push
pop
cmp
js
das
popa
andb
jae
dec
lds
and
xchg
insb
rcll
clc
stos
and
xor
leave
dec
pop
repnz
inc
out
and
dec
inc
sbb
jl
iret
dec
xchg
mov
add
nop
push
nop
sbb
daa
add
popa
mov
cltd
and
sbb
je
cli
xchg
mov
inc
sbb
xor
xchg
mov
add
repz
jne
sub
and
outsb
mov
xchg
sarb
roll
sub
outsb
ret
push
xchg
or
sbb
xor
aam
sbbl
sti
outsb
scas
push
in
adc
test
sub
xor
loop
push
pusha
or
xor
fptan
xor
sbb
xchg
rorb
push
add
mov
xor
out
xor
nop
push
or
add
xchg
insl
push
xor
call
test
inc
subb
xchg
add
mov
push
push
rcl
lcall
mov
aad
dec
scas
jecxz
mov
fs
xchg
mov
call
out
push
inc
lock
mov
fsubr
mov
or
call
xor
dec
xchg
mov
into
dec
add
in
mov
mov
inc
or
add
push
xchg
or
test
xchg
adc
fdivs
cmovle
adc
adcb
push
mov
out
inc
sbb
sbb
add
mov
inc
jle
int
or
inc
scas
out
enter
bndstx
repz
test
mov
cmp
in
pop
or
pop
nop
test
inc
xor
xor
fnstcw
mov
adc
scas
rolb
js
jecxz
lea
add
or
adc
mov
out
xlat
scas
and
daa
mov
lcall
in
xor
cmp
pusha
in
mov
ds
sub
mov
xor
inc
insb
mov
call
dec
mov
or
imul
mov
out
pop
jnp
cmp
and
xor
push
arpl
imul
add
cmp
das
push
inc
sbb
push
cmp
aaa
icebp
rdtsc
loopne
mov
lds
cmp
out
and
sbb
cmp
pushf
fwait
rcrb
orl
sbb
dec
push
xchg
cs
xor
mov
lds
inc
fcmovne
jo
pop
xor
sub
int3
sbb
gs
movsb
or
add
sbb
cwtl
cmp
add
mov
in
cld
addb
in
inc
call
and
sti
and
int
xlat
mov
mov
sub
jl
std
cmc
adc
add
push
sub
inc
xchg
mov
bswap
cld
mov
pop
test
xchg
mov
add
mov
mov
leave
cmc
stc
std
cld
jecxz
jne
out
das
cmpsb
arpl
dec
lret
int3
ds
add
enter
xlat
fsub
jo
add
mov
add
pop
in
adc
pop
shlb
push
iret
cmp
mov
out
fldl
xor
nop
repz
sbb
jo
subb
adc
or
adc
add
test
roll
nop
pop
pop
test
xor
lods
add
or
je
or
cmp
dec
fldt
jg
add
repnz
inc
pop
jmp
jg
or
jge
add
jne
icebp
pop
repz
sbb
push
into
add
pop
sub
jecxz
add
inc
xchg
fwait
mov
jge
mov
dec
add
xchg
sti
jmp
sub
or
std
jp
mov
or
push
mov
pop
xor
jle
mov
sti
sbb
jecxz
mov
add
xor
or
inc
xchg
adc
filds
aaa
shl
mov
xchg
xlat
aad
dec
mov
pop
pop
mov
shrl
lret
sbb
pop
cld
cmp
test
jp
mov
icebp
scas
cmp
mov
lods
add
and
scas
add
adc
xorb
icebp
mov
sbb
insl
jns
pushf
add
loope
les
mov
xchg
repnz
adc
lea
sbb
iret
fsubr
sti
mov
in
sbb
adc
jno
cld
inc
negl
push
push
add
push
fildl
aam
xor
je
and
dec
add
mov
scas
out
add
jbe
add
jno
mov
mov
mov
mov
and
lea
andb
sub
add
mov
fldl
test
aaa
jp
mov
pushf
pop
fadds
mov
sbb
je
or
mov
ss
add
mov
fst
in
popa
sbb
fildl
mov
or
ljmp
rorl
mov
lock
rclb
pop
jns
mov
inc
loopne
jbe
dec
push
cmc
sub
mov
mov
mov
push
and
in
in
je
add
mov
outsl
add
mov
lea
add
push
sbb
fmul
sbb
sti
pushf
mov
jle
add
ret
xchg
push
pusha
jo
mov
xlat
fidivs
sbb
or
scas
and
pop
add
push
jbe
loop
into
add
mov
in
outsb
add
mov
stos
jge
pop
add
xchg
fmuls
mov
jmp
pop
push
mov
ficoml
mov
mov
xchg
nop
aam
test
or
rcrb
adc
fsub
cltd
and
push
out
add
jno
lds
mov
or
mov
or
loopne
mul
mov
fiadds
sbbb
add
mov
cmp
xchg
cmp
bound
ret
add
cmp
dec
lods
xor
mov
add
lret
cmp
add
cwtl
push
mov
add
stos
xor
popf
jo
add
shll
jno
into
add
push
ret
in
sub
sub
xor
add
cmpsb
and
bound
mov
add
ss
xor
fdivp
pop
add
jb
jno
repnz
roll
push
push
clc
pop
cltd
pop
cwtl
mov
add
or
jmp
mov
sub
adc
sbb
pop
cmp
cli
call
fmuls
lahf
sub
sbb
add
std
sub
push
fildll
sub
ret
sbb
push
mov
cmp
mov
jg
mov
push
add
mov
ljmp
sbbb
mov
add
cmpsl
push
or
push
pop
pop
dec
push
idivb
outsb
sbb
and
add
icebp
mov
or
jecxz
pop
add
jge
and
add
les
xor
xor
icebp
push
out
pop
aam
sbb
and
and
and
xchg
jecxz
cmpsl
aam
jo
ds
filds
jo
push
jb
add
test
xlat
mov
leave
pusha
jg
xchg
push
pop
lock
push
mov
xor
add
stos
xor
add
xchg
imul
sahf
add
sbb
lahf
add
push
lret
push
add
mov
outsb
push
btc
loopne
test
mov
adc
pop
mov
and
pusha
aam
jg
cltd
psraw
imul
or
or
loopne
aad
push
in
loopne
cmpsb
repnz
pop
add
sbb
xor
cmp
and
test
repz
inc
in
dec
mov
add
inc
cmp
mov
mov
add
lahf
cmp
push
stc
add
cmpsb
mov
in
aas
xor
sbb
sbb
jmp
xchg
pop
add
pop
or
mov
add
sbb
movsb
popa
movsl
aad
scas
ficoml
outsb
add
sub
cmp
ja
out
xlat
mov
inc
add
inc
push
or
and
jae
add
hlt
test
das
pop
jge
std
iret
inc
add
enter
out
jns
add
push
inc
in
add
lock
dec
jge
cmpsl
repnz
push
hlt
and
xor
add
xchg
enter
add
sub
ret
mov
adc
insl
add
xchg
add
inc
leave
js,pn
add
rcrb
add
into
inc
int3
incl
add
pusha
outsl
ret
add
repz
sub
sub
popf
pop
mov
mov
clc
lods
add
jnp
pusha
sub
sbb
adc
mov
inc
pop
imul
subb
add
cmp
xor
add
mov
ss
jne
add
sub
jb
jl
pop
xor
into
add
pop
testl
ret
mov
sub
cmpsb
pop
cwtl
mov
push
fistl
mov
mov
cmp
add
sbb
jne
lea
xchg
push
push
pop
fbld
arpl
into
adc
mov
loope
push
sub
out
xchg
fiaddl
inc
add
xchg
jo
and
mov
mov
test
pusha
sbb
xchg
out
loopne
add
std
in
push
popa
sub
shrl
loopne
sub
mov
jl
mov
add
add
add
add
mov
xor
adc
rol
lods
add
imul
cmpsl
call
bndldx
push
sbb
das
lods
add
mov
mov
push
jle
cmp
mov
adc
add
xlat
add
fmul
mov
mov
adc
sbb
or
mov
ret
jmp
add
dec
clc
aad
or
mov
and
and
inc
lret
pushf
mov
push
mov
notb
lcall
mov
into
orl
cmp
lock
jno
push
lods
mov
dec
int3
sbb
rol
add
lock
cwtl
test
repz
cwtl
clc
les
lods
dec
mov
sub
cmp
add
sbb
mov
mov
add
jp
mov
cld
into
lahf
es
mov
cmp
roll
in
sahf
in
imul
xchg
pushf
out
pop
popa
hlt
lahf
jne
add
sbb
sti
push
clc
pop
xor
stos
mov
fdivp
add
push
inc
sarb
add
dec
mov
and
sbb
push
rorb
add
dec
jae
adc
push
mov
mov
push
xchg
adc
add
repz
push
lcall
inc
fdivs
cmp
inc
dec
pushf
add
test
fwait
dec
add
pop
push
lds
push
xchg
cmp
pushf
and
ds
shrl
dec
cmp
popa
mov
ret
cld
inc
fsubrl
aas
nop
xchg
or
mov
leave
hlt
or
xor
xchg
int3
inc
xor
mov
mov
aad
shll
fsubl
shrb
sub
jnp
adcl
sub
cmp
insl
pop
lret
iret
pop
add
dec
pop
sbb
leave
fcompl
and
push
dec
and
mov
or
add
pop
mov
aam
sbb
stos
shlb
movzbl
sbb
loopne
inc
add
jns
imul
rorb
push
add
push
cmp
adc
cwtl
fcomps
fcoml
or
mov
jle
int
jo
add
pminub
lret
ret
fwait
popa
push
nop
add
sub
jge
cld
add
ds
jns
or
pop
xor
and
out
add
out
push
sbb
incl
inc
mov
imul
jmp
xchg
pop
and
mov
enter
push
cld
adc
adc
imul
decb
enter
aam
loopne
push
mov
push
add
mov
inc
fs
mov
adcl
xor
cmc
add
shr
in
push
daa
xor
add
shlb
add
popf
inc
sub
mov
push
add
jmp
sahf
xchg
xor
shrb
cmpsb
fists
daa
push
in
xor
pop
adc
mov
in
imul
xorb
insb
mov
or
jne
aad
jmp
dec
jecxz
mov
cwtl
insb
add
adc
jle
add
rcrl
add
dec
mov
xor
lahf
and
cmp
cmp
and
orl
leave
add
add
push
test
push
mov
mov
adc
incb
into
push
jge
mov
cmp
lods
push
test
and
fidivl
jbe
or
sub
and
push
sbb
int
popf
aaa
cmovo
hlt
xchg
inc
ret
fscale
push
mov
call
cmc
cmpsb
mov
cmp
rcr
xchg
aam
aas
idivb
fcompl
insl
cmc
add
test
pushf
xor
add
enter
add
mov
push
or
and
fiaddl
xlat
rolb
mov
fwait
add
sti
out
jle
movl
adc
roll
mov
lock
add
insl
adc
fdivs
pushl
movmskps
inc
pop
pop
fsubs
and
out
in
or
xchg
mov
sbbb
sahf
jb
jae
add
inc
sbb
mov
movl
cmp
pop
iret
push
sbb
sub
and
dec
fcoms
popa
mov
ljmp
pop
mov
push
aaa
mov
leave
xchg
loope
shl
andl
lods
shl
pop
add
cmp
ljmp
push
cltd
sub
add
mov
cmp
sahf
fwait
inc
rcl
add
add
mov
jb
jo
pop
add
arpl
out
orb
stos
xchg
cmp
cmp
test
lret
nopl
ja
cltd
add
xorl
add
xchg
inc
fs
or
bound
cmc
lods
add
std
lahf
lret
decb
scas
cmp
push
xor
int3
cmp
add
aaa
sbb
loopne
add
mov
sub
add
lret
xchg
mov
mov
mov
aam
jo
cmp
movsb
movsl
xor
popf
orl
test
add
push
repz
add
sarl
mov
pop
xchg
cmp
bswap
ffree
pop
lret
mov
inc
lods
call
insl
jp
push
and
clc
int3
pop
movsl
sub
xchg
shll
in
out
cwtl
xor
ss
ror
bound
dec
or
rorb
cltd
decl
and
nop
aam
xchg
fxch
sarl
mov
in
add
xor
jmp
dec
mov
push
pop
add
cwtl
add
sbb
loop
rcrl
and
sbb
aam
loope
dec
xor
dec
lea
jne
and
das
mov
rcl
sti
shl
jne
cwtl
adc
mov
addb
jne
add
inc
cld
rolb
add
mov
test
add
jl
dec
scas
add
hlt
repz
add
aas
aaa
jae
pop
pusha
bound
add
out
std
add
cmp
fcmovne
pop
jo
xchg
pop
cmpsb
lods
sub
pusha
adc
scas
cwtl
test
mov
sub
outsb
andb
mov
rcr
xorps
fiadds
lea
or
hlt
push
loopne
ljmp
jp
test
push
adc
movsl
add
lret
loop
and
nopl
andb
add
mov
mov
or
adc
pop
add
lcall
or
jmp
jo
push
popa
add
roll
jae
out
push
negl
test
add
std
sbbl
pusha
fldenv
addb
cmp
movsb
int
pusha
lock
add
xchg
jg
inc
lea
inc
pop
pop
inc
lods
xlat
jl
imulb
xchg
pushf
inc
add
sub
xchg
aas
popf
xor
sahf
mov
pop
cld
mov
aam
mov
dec
mov
jno
pop
jle
adc
push
inc
dec
fwait
cltd
adc
mov
fnstsw
dec
mov
shlb
jecxz
js
inc
mov
sar
out
add
jnp
pop
dec
repz
adc
filds
xchg
stc
dec
add
cltd
sarl
add
pop
inc
lds
mov
add
pop
mov
nop
add
push
pop
pusha
mov
es
sub
mulb
andb
loopne
pop
adc
jl
push
and
cs
xor
xor
mov
cmp
test
nop
je
and
jnp
push
add
imul
xchg
jl
mov
mov
ret
add
add
xor
and
cli
out
into
pop
pop
adc
test
insl
mov
lea
adc
xchg
cmp
jae
mov
int3
femms
ficoml
push
repnz
in
dec
mov
cwtl
push
add
stos
cwtl
dec
jmp
rorl
ss
pushf
cmp
mov
add
mov
mov
pop
into
test
xchg
rcl
cwtl
sub
dec
aas
and
xor
inc
jl
xor
jp
loopne
std
fs
or
aad
cmc
mov
push
add
adc
mov
into
xchg
call
add
push
test
sub
add
cwtl
sahf
repnz
lods
jne
sub
hlt
add
xchg
scas
je
cmp
cmpl
xor
inc
out
hlt
pop
cmp
jns
rcrb
andl
mov
sub
jo
xlat
xor
je
sbb
iret
jo
jp
js
mov
imul
addr16
add
or
loop
sub
je
loopne
or
inc
das
lret
add
lret
cltd
inc
pop
in
jle
pop
loop
pop
inc
movsl
dec
loopne
xchg
lcall
pop
bound
push
outsl
add
jae
in
ret
xor
add
ja
pop
mov
push
mov
lcall
push
dec
jl
scas
add
cmp
push
addb
and
xor
lock
cltd
sub
or
into
mov
jb
and
push
aaa
and
sarb
add
pop
and
sub
sbb
sub
mov
popf
push
sbbb
leave
add
sahf
sbb
ds
xchg
xor
add
sbb
push
clc
mulb
cltd
mov
subl
and
add
xor
clc
add
fcoml
add
xchg
mov
pushf
repnz
ja
outsb
cli
popa
loopne,pt
adc
mov
lock
test
sbb
in
push
lea
cmp
mov
add
lods
ja
add
pusha
int3
testl
mov
ss
or
cmpsl
pop
fadds
xchg
lds
cmp
add
mov
dec
xor
dec
adc
js
xor
pop
fwait
inc
jno
jp
jl
add
push
fstpl
call
sbb
sub
or
jmp
std
add
rcr
mov
xlat
adcb
push
rcll
f2xm1
add
or
push
push
test
pop
flds
outsl
rorb
loop
dec
add
gs
jne
je
in
cs
or
jbe
add
imul
sub
add
dec
xor
dec
push
rcrb
ret
add
sbb
imul
es
sub
test
jmp
add
ds
sub
inc
jp
adc
movl
les
jo
js
push
fistpll
sub
mov
movsb
cmp
aam
and
les
js
push
or
adc
fsubrs
enter
sbb
pop
stos
push
stc
push
cmp
fdivrs
jo
adc
iret
or
cmp
in
nop
add
inc
sub
addr16
nop
cwtl
push
idiv
inc
setae
lods
jnp
aas
lock
mov
and
mov
cmp
xchg
pusha
jbe
xor
mov
push
mov
xor
push
gs
ds
and
jae
out
jle
mov
inc
cltd
jecxz
and
pusha
icebp
loop
rolb
mov
pop
or
mov
jbe
add
mov
push
pusha
push
pop
cmp
xstore-rng
cmpsl
add
flds
pop
add
mov
xchg
push
mov
push
fldl
lahf
js
sbb
enter
push
ficoml
repz
lcall
testb
fsubl
mov
sub
cmp
js
cli
pusha
add
add
psrlq
jle
into
add
incl
inc
in
pop
cmp
js
xor
xor
jge
jg
pushf
cwtl
xchg
sub
cmpb
popl
or
add
xor
add
call
fs
mov
int3
imul
popf
add
nop
test
pop
jmp
sahf
inc
enter
add
add
pop
daa
xor
mov
or
mov
loopne
push
cmc
jg
cld
adcb
add
push
add
fs
sub
popa
pusha
mov
test
loop
scas
fcompl
cmpsb
sbb
lret
stos
pop
ljmp
test
mov
push
imul
inc
mov
add
fadds
or
add
xchg
mov
mov
pop
je
mov
shlb
pop
mov
dec
pop
jne
orb
in
or
or
sbb
adc
add
dec
outsl
imul
mov
fwait
or
push
scas
add
repnz
push
sbb
sbb
loope
sub
movsl
shlb
pusha
je
cmp
sub
aaa
subb
inc
add
inc
jo
out
enter
add
fptan
cmp
dec
ja
push
pusha
mov
cmp
xchg
add
mov
call
test
aad
int3
in
xchg
and
cmp
in
repnz
hlt
pushf
mov
xchg
rclb
js
inc
js
add
testb
out
mov
push
or
mov
sahf
cmp
inc
rolb
inc
mov
xchg
and
inc
mov
leave
shll
test
sbb
mov
rolb
or
or
std
push
pusha
jecxz
xor
nop
add
clc
loope
jno
sarb
pop
ja
test
dec
xorl
rcr
shrb
gs
popa
scas
mov
sbbb
jno
add
nop
lret
push
fsub
ljmp
and
mov
shrb
xorl
test
dec
mov
mov
scas
jge
mov
add
push
orl
das
jp
movsb
pusha
push
ret
rcrb
sbb
inc
adc
xorb
mov
or
outsl
jl
xchg
inc
aad
pop
xorl
jno
add
loope
and
jg
fstps
inc
jl
push
push
enter
xor
cltd
mov
cltd
pop
jo
mov
js
mov
push
repnz
popa
cmp
adc
mov
jmp
xchg
sahf
mov
cmpsl
mov
out
repnz
or
add
inc
in
js
add
cs
daa
or
push
les
arpl
sub
mov
adc
mov
cmp
mov
dec
testl
and
scas
retw
daa
jl
sbb
sub
xchg
outsl
incb
sub
mov
hlt
cmp
les
shrb
je
dec
jns
push
mov
add
mov
enter
mov
insb
lcall
clc
push
push
std
es
push
pop
lds
adc
sub
loop
pop
mov
xor
push
add
jl
iret
loopne
mov
call
call
pop
push
cwtl
jno
lret
mov
mov
call
push
pop
stc
in
shrl
add
ret
pop
jo
add
cmpsl
iret
push
add
jecxz
lods
call
push
jbe
add
push
or
jmp
xor
scas
stos
xor
mov
jmp
in
add
add
mov
adc
scas
ss
inc
testb
adc
inc
xor
loop
fs
or
sub
adc
arpl
xor
ljmp
add
mov
or
push
test
out
mov
outsb
or
jecxz
mov
xlat
cld
jns
pop
and
adc
push
xchg
dec
sub
mov
mov
or
addb
mov
jns
or
xchg
lret
jecxz
or
dec
into
and
and
xor
push
adc
lock
or
inc
sbb
adc
rorb
popf
popa
add
cmp
cs
cmp
lods
jae
xor
lret
add
ss
add
std
sbb
in
add
jp
mov
or
pop
mov
mov
cmp
pop
cmc
imul
lea
movsl
cltd
inc
xchg
add
jg
mov
leave
or
out
pop
push
mov
aas
add
arpl
gs
pop
inc
add
std
fs
add
cmpsl
pop
out
mov
outsl
or
in
mov
sti
push
fdivr
popf
fwait
notl
out
jp
adc
pop
insb
aaa
add
in
sbb
cs
cltd
mov
leave
push
jge
mov
add
and
adc
pop
inc
enter
or
add
fwait
aas
nop
add
sub
add
iret
fs
fucomi
adc
jnp
add
int3
push
pop
dec
xchg
xor
ja
insb
pop
jmp
out
shl
lret
sbb
ja
add
mov
repz
inc
rcl
out
loope
int
lock
inc
andb
scas
movsl
pop
adc
inc
repz
add
inc
sarb
out
stc
add
lods
int3
insl
lcall
sub
jl
out
andb
sahf
cmp
in
adc
add
orl
ja
mov
lahf
cmc
gs
int3
add
and
pop
ljmp
adc
add
pusha
int
jp
testl
mov
mov
call
sbb
or
cmp
enter
sub
xchg
or
test
ss
fidivrl
inc
inc
dec
mov
mov
ja
sub
lods
cld
sahf
inc
mulb
popa
mov
fldl
out
lea
rcrb
pop
push
jo
and
pop
sbb
dec
pop
repz
rcrb
imul
lods
insl
loop
jns
js
sahf
ja
xor
insb
cmpb
push
and
mov
add
cwtl
leave
cli
popf
mov
xchg
aad
inc
pop
in
shlb
and
add
es
loope
push
dec
mov
push
adc
sti
test
add
dec
dec
add
out
push
dec
ds
push
mov
cmp
or
xchg
pop
mov
dec
add
push
adc
cwtl
sub
addb
add
push
and
add
in
sub
cmp
jne
add
add
aam
loope
inc
mov
add
lock
mov
sbb
cltd
xor
mov
mov
pushf
jne
xor
add
pop
xor
add
ret
mov
ljmp
decl
pop
in
add
arpl
mov
cmp
push
or
jge
test
add
pop
pushf
ds
xchg
out
jno
add
add
in
xchg
cli
bswap
punpckldq
dec
xchg
sbb
add
sti
sub
nop
xchg
sbb
inc
stc
adc
push
incl
cmp
repz
mov
test
pop
xlat
pop
jae
jb
lret
shlb
fistps
add
add
push
popa
ret
add
xchg
hlt
inc
ljmp
dec
push
icebp
out
bound
rcll
data16
add
iret
xchg
lea
jecxz
jg
lods
adc
frstor
add
dec
bound
add
lcall
add
loopne
sub
int3
add
push
cs
gs
push
add
sbb
xor
mov
rorb
scas
add
pusha
or
add
in
inc
es
xchg
mov
clc
jno
add
call
repz
cs
fildll
adc
test
addr16
fstpl
dec
movsb
stc
ret
pusha
jo
and
xor
pop
sahf
pusha
or
and
add
pushf
stos
sub
loopne
in
fs
xor
mov
add
inc
fdivl
ja
add
subb
incl
iret
cmp
cmpsb
imull
pusha
jmp
adc
scas
xlat
sarb
test
inc
add
int3
mov
mov
and
int3
jae
outsl
pop
aad
cld
add
cli
pop
stc
pop
sbb
add
xor
test
fwait
jb
adc
movsl
add
push
xchg
popa
mov
xorb
movsb
add
cltd
cld
stos
aad
inc
repz
adc
repnz
add
or
js
cmp
add
fisubs
adc
xor
ljmp
aas
or
adc
or
pop
xchg
xchg
and
jb
stc
loopne
mov
jne
js
push
dec
dec
pop
add
or
or
movl
fwait
mov
cmp
or
inc
adc
pop
hlt
push
add
jno
fimull
bound
mov
and
or
push
fistps
adcl
int3
or
test
add
xchg
add
ret
sarb
add
push
adc
into
pop
lock
mov
ds
scas
push
shl
enter
add
mov
adc
jg
cmp
aam
inc
xor
je
add
sub
push
cmp
pop
pusha
add
rcrl
mov
shll
sub
pop
adc
bswap
popa
xor
mov
jns
add
sarl
fisubrl
add
jo,pn
imul
jbe
aad
cmpb
jp
add
repnz
xchg
dec
loop
jp
pop
xor
and
xchg
pop
mov
mov
lea
jmp
cltd
cs
pop
jmp
inc
movsl
add
flds
fmull
outsb
or
or
xor
add
sub
add
xchg
jne
add
jmp
enter
sbb
out
or
fildl
push
lea
xchg
add
add
push
hlt
cmp
jp
call
sub
mov
cmc
inc
xchg
sbbb
loopne
sub
xchg
clc
repnz
inc
dec
jecxz
subb
jno
lock
pop
rcrl
push
loopne
cmpsb
test
pop
xlat
or
cmp
pusha
lcall
cmc
mov
jne
mov
push
je
notl
imul
xchg
out
shrb
mov
add
cli
mov
mov
dec
jg
add
mov
dec
mov
add
into
lds
xor
sbbb
fiaddl
push
mov
sahf
adc
pop
mov
push
xchg
add
push
lea
iret
cwtl
inc
shl
cld
mov
mov
cmpsb
xor
sub
push
pop
add
cmpsb
cmp
add
add
xchg
xlat
hlt
inc
add
jne
scas
push
sbb
fwait
push
jl
push
mov
mov
pop
out
add
addb
mov
jno
push
jae
cltd
sub
and
fwait
mov
mov
push
loopne
add
cmpsb
das
shrl
mov
sbbl
jns
call
andl
and
lret
jo
fistpl
pop
int
add
mov
enter
icebp
xchg
call
dec
push
leave
in
dec
push
pop
lds
add
jecxz
cs
add
jp
cltd
add
shlb
dec
in
adc
xor
lret
pop
out
sbb
das
lods
xchg
notb
cwtl
movsl
dec
sbb
pop
cmp
loope
push
imul
dec
push
sub
xor
pusha
mov
lds
das
jecxz
in
sub
leave
sub
add
xor
cmp
xor
mov
and
enter
xor
mov
fidivs
xchg
pop
push
mov
push
or
push
iret
pop
clc
pop
sbb
sbb
push
jne
lock
into
in
or
or
int
cmpsl
mov
cmp
jl
in
and
pop
mov
xchg
dec
add
sahf
xor
pop
cmp
jbe
in
mov
jmp
popa
add
mov
push
hlt
loop
add
fucomip
clc
lods
adc
pop
inc
outsb
pop
scas
test
or
std
jmp
pop
add
js
das
shr
movsb
enter
or
insl
pop
dec
add
daa
add
pusha
das
adc
inc
dec
les
add
sub
fiaddl
stos
or
xor
lods
arpl
in
jno
loope
mov
shrb
add
js
dec
or
lock
hlt
jge
std
mov
xchg
xchg
mov
pop
sbb
mov
sub
mov
fcomps
mov
sbb
push
lock
sbb
scas
pusha
sub
mov
pop
and
sbb
subb
adc
ret
cltd
adc
ss
jbe
aas
jb
add
and
pusha
add
add
xlat
add
imul
rorb
xor
sbb
push
xor
jae
jg
sub
inc
daa
imul
rolb
and
decb
jle
cs
add
mov
jecxz
and
fistl
rolb
mov
push
ja
sbb
xlat
ret
daa
adcb
mov
mov
mov
loopne
loopne
dec
in
or
repnz
add
inc
push
lods
ss
sbb
es
and
and
imul
sbb
pop
xchg
movsb
inc
ret
add
cmpsb
lahf
adc
mov
add
mov
rcrb
cli
add
mov
add
sub
cmp
sahf
pop
rorl
ror
in
rolb
push
xchg
sbb
int
add
clc
push
sbb
or
mov
rolb
xor
push
lcall
add
lods
cmp
imul
stos
lret
mov
add
ret
popa
and
adc
pop
loopne
jno
jae
add
lahf
out
mov
shlb
mov
lea
nop
sub
dec
xor
test
push
add
mov
mov
sbb
mov
aad
sbb
sti
cwtl
add
mov
mov
loopne
mov
jle
in
popa
aam
insl
sub
or
addb
in
test
xor
fwait
int3
sub
mov
into
mov
mov
out
sar
inc
dec
nop
mov
aas
sub
push
imul
rcll
add
pop
jae
add
mov
paddb
shlb
dec
pop
add
test
mov
xchg
mov
es
dec
addb
cmp
xor
add
movsb
xchg
je
ds
fidivl
repz
jle
push
inc
xchg
incb
hlt
pop
das
fnstcw
add
ja
mov
and
leave
cmp
stos
xor
jmp
test
pusha
fmuls
es
jmp
add
ss
movsl
in
dec
mov
insl
jge
sbb
ja
pusha
pop
sarb
roll
clc
movsl
lock
sub
cli
shlb
inc
adc
sub
rorl
sub
pop
sarb
data16
fildl
test
xchg
addr16
xchg
xor
pop
or
test
add
jb
or
sub
sarb
movsb
add
hlt
pcmpeqb
mov
sahf
pop
mov
mov
fistps
pop
add
mov
pop
inc
xorb
lock
push
roll
cwtl
insb
mov
mov
mov
subb
adc
ficomps
add
pop
fimull
mov
cld
add
sbb
mov
pusha
aas
cmp
lds
iret
inc
out
xorl
adc
bound
testb
xchg
cmp
hlt
xchg
mov
pop
add
mov
add
mov
xor
aam
pop
popa
icebp
popl
jae
fdivrs
rorl
pop
paddsb
arpl
jns
xor
add
notl
or
pop
add
sbb
and
inc
shlb
pushf
adc
add
xor
or
fadd
add
pop
add
lods
sub
fldl
cmp
jb
push
jl
movhps
add
addr16
enter
cmpsb
rcr
push
rolb
push
mov
pusha
loopne
jno
or
add
movsb
inc
ficoms
aaa
jnp
push
data16
add
outsb
adc
jo
add
stos
fcmovnu
pusha
cld
movsb
mov
scas
into
add
mov
cwtl
jnp,pt
add
jmp
icebp
cmp
ficoml
adc
cmpsb
pop
sbb
mov
jne
and
add
mov
xchg
dec
adc
bound
sti
ds
shlb
inc
loop
sbb
cmp
int3
testb
adc
xchg
inc
lods
jp
add
inc
aaa
lcall
xchg
mov
cltd
xchg
and
pop
and
or
mov
mov
loop
inc
adc
fimull
imulb
sbb
add
sub
cltd
loopne
lods
aas
adc
loop
add
mov
movsl
sbb
add
pop
rep
rcrl
arpl
js
pop
lds
cld
cmp
lea
std
jp
sub
add
cs
out
cmc
les
push
movsb
rorb
jbe
add
fidivl
push
cli
push
add
and
mov
mov
sbb
sahf
add
mov
mov
fwait
add
enter
dec
call
orl
loope
mov
cmc
rorb
jne
cmpsb
das
in
dec
xor
add
addb
mov
mov
xchg
xlat
mov
nop
mov
shrl
xchg
add
mov
adc
repz
pop
inc
add
je,pt
push
dec
add
or
insl
in
pop
dec
add
pop
jmp
xchg
daa
popf
pop
frstor
push
xchg
aam
add
nop
xor
inc
mov
jbe
mov
inc
or
scas
pop
leave
orb
shl
dec
iret
sub
lock
mov
jle
repz
push
add
mov
push
popa
test
push
push
pop
mov
pop
push
add
mov
aaa
mov
das
xor
outsb
sub
nop
add
leave
and
cmpl
add
stos
or
add
andb
xor
sub
sar
insl
int
rorl
enter
cmp
fwait
add
mov
sub
xor
fucomip
rclb
jo
ljmp
push
mov
xchg
sbb
mov
add
or
outsl
ret
cmp
inc
mov
pop
add
je
xchg
add
icebp
jnp
repnz
lret
sbb
mov
push
push
mov
add
dec
std
ljmp
push
push
xchg
mov
dec
sub
xor
adc
pop
mov
cld
or
pcmpgtb
jo
cmp
mov
clc
subb
iret
fidivrl
das
add
mov
shrl
repnz
add
inc
movsb
testl
or
mov
inc
cmpsb
loop
add
inc
fisubs
rolb
dec
sub
adcb
sub
mov
sahf
aad
cwtl
mulb
scas
imul
mov
jmp
xchg
jmp
in
jg
fstpl
add
pop
mov
add
push
es
or
xor
adc
mov
mov
test
cmp
add
iret
flds
hlt
push
sub
addl
lock
arpl
mov
fisubs
ljmp
std
or
movsl
jne
cs
js
add
xchg
arpl
aaa
ljmp
imul
jbe
into
adc
fwait
mov
cmp
fdivrs
fisubl
sahf
ja
push
ja
es
mov
pop
and
gs
std
js
add
add
add
jae
icebp
repz
inc
push
faddl
push
mov
les
aaa
adc
add
dec
ret
jae
je
xchg
std
cwtl
add
xchg
data16
xor
insl
out
pop
jp
je
cmp
fwait
add
mov
shrb
cmp
cltd
je
pop
incb
add
pop
pop
loop
sub
stos
nop
push
pop
mov
add
mov
outsb
or
sub
add
cmp
aam
push
add
mov
xor
inc
xchg
adc
cmp
loopne
in
add
shlb
inc
add
rolb
orb
lods
je
add
movsb
and
sbb
popf
sbb
push
xchg
adc
addr16
int
jb
add
or
les
jp
popa
shlb
mov
and
xor
mov
xchg
sbb
fcomps
ficoms
div
add
cmp
fcmovbe
lock
add
subb
lds
out
mov
inc
arpl
add
rep
in
jp
inc
inc
mov
inc
inc
add
les
jecxz
xor
cmpsl
add
add
clc
adc
cmovb
sub
dec
pop
sub
add
push
cld
add
fisttps
je
lret
jae
inc
test
sub
add
sbb
into
repz
add
sub
call
data16
aam
sti
jno
out
jle
scas
mov
in
sahf
cmpb
sbb
test
nop
mov
mov
pop
daa
push
cmp
add
subl
decl
push
add
mov
sbb
pushf
mov
adc
xor
and
xchg
sbb
push
fimuls
lea
test
int3
addb
popa
add
jns
cmp
mov
adc
mull
popa
ret
add
push
repz
add
fistpll
out
negb
sub
dec
xchg
int3
imul
orb
jmp
jl
pop
jecxz
sti
adc
push
sub
jae
sbb
xchg
rorl
add
jns
fstpt
pop
xor
and
enter
mov
mov
js
ds
movsb
divb
add
mov
js
mov
cmp
sbb
ret
mov
movsl
sahf
mov
add
in
pop
in
cmpsb
push
rcrb
out
xchg
js
jle
jnp
add
add
cmp
xchg
cmp
pop
nop
or
and
pusha
mov
icebp
add
push
sbb
xchg
adc
mov
mov
cmc
jne
lcall
xchg
add
stc
jns
mov
addl
cwtl
stos
out
mov
inc
ret
inc
verr
and
stc
add
mov
aaa
xchg
add
adc
and
nop
and
ret
push
mov
add
push
stos
fildll
pushf
loopne
push
jbe
icebp
ds
in
jp
push
adc
rol
cmp
xchg
cld
adc
cmp
add
jge
mov
add
dec
or
fildl
dec
adc
cmpsb
add
mov
push
push
nop
add
mov
pop
in
jl
pusha
mov
add
rolb
jae
jne
add
std
pop
lret
add
dec
inc
add
jp
nop
pop
inc
mov
aad
push
sub
hlt
mov
scas
mov
test
aad
cwtl
jns
xor
push
dec
and
xor
dec
adc
add
mov
dec
xor
mov
rolb
test
aad
out
outsb
xchg
scas
add
mov
lea
loope
push
and
sbb
push
xlat
or
lret
mov
gs
and
mov
xchg
push
dec
pusha
mov
mov
aam
xchg
inc
inc
cmpsb
cmpb
popa
incb
in
push
out
arpl
hlt
por
out
and
dec
and
inc
xor
add
mov
mov
mov
dec
aam
fiaddl
cld
pushl
insl
add
adc
pop
sbb
pop
adc
test
sub
adc
pushl
add
push
xchg
popf
aam
loopne
loope
and
and
add
dec
out
lds
pop
out
cmc
lret
xor
ret
adc
add
andb
sbb
dec
fcoms
adc
gs
cld
sub
push
push
push
adcb
xchg
push
xchg
call
shrb
nop
mov
mov
aas
out
cmpsb
gs
cltd
sbb
pop
pop
jns
out
jle
or
adc
inc
dec
adc
dec
push
and
vrsqrtps
cmp
mov
ss
jns
icebp
jp
adc
jge
incb
mov
mov
sbb
push
bnd
loopne
cmpsl
shr
adcb
and
adc
lods
push
lods
cmc
adc
dec
repnz
sbb
testb
sbbb
mov
push
and
es
jb
loopne
pusha
add
adc
push
movsl
xor
test
pop
mov
out
push
roll
pop
sbb
pop
mov
ljmp
add
adc
mov
adc
sbb
add
sbb
inc
jecxz
and
lahf
jbe
adc
mull
in
xor
jecxz
pop
push
add
add
dec
pop
fmuls
inc
testl
mov
mov
push
in
jnp
sbb
in
addb
repnz
icebp
aas
xchg
jmp
nop
sub
es
aaa
in
add
jg
dec
mov
sbb
cmpb
inc
cs
push
push
inc
hlt
add
fildl
dec
or
dec
add
inc
mov
fs
icebp
addr16
mov
negl
sub
addb
sub
shlb
icebp
xchg
mov
mov
insb
xor
dec
dec
out
dec
pusha
cld
iret
sub
cmp
pop
addb
sbb
mov
shll
nop
gs
imul
enter
faddl
lock
rclb
pop
xlat
sbb
xchg
xor
jb
jo
lea
test
pop
mov
aam
dec
pop
lahf
shlb
loopne
add
subb
push
mov
bound
fdivs
stos
icebp
jg
and
add
orb
lock
pop
or
inc
add
sbb
cmp
rclb
ss
dec
das
xchg
loopne
dec
and
cmpb
stc
push
stos
or
inc
mov
pop
inc
inc
push
dec
imul
push
push
sti
lods
add
dec
pop
or
shlb
pop
cmpsb
enter
loopne
pusha
and
fsubl
ret
rcl
nop
push
push
mov
add
add
add
dec
jae
sbb
add
cmc
sahf
mov
stc
jl
and
arpl
rcll
out
inc
dec
add
or
cld
add
cmp
lcall
pop
movsl
fiadds
sbbl
fwait
pop
adc
add
andl
aas
inc
dec
add
adcl
imul
das
iret
lods
pop
push
xor
mov
popf
mov
xor
stos
or
imul
dec
adc
xchg
and
les
pusha
add
xchg
fwait
stc
jmp
not
repz
adc
jb
je
leave
hlt
jp
add
mov
sub
addl
add
add
inc
mov
dec
std
mov
movsb
pop
cwtl
pop
mov
adc
nop
xchg
mov
dec
inc
call
mull
roll
xchg
nop
push
cli
mov
add
mov
cmp
jnp
dec
adc
push
dec
lret
pop
mov
aaa
clc
push
scas
xchg
pop
dec
leave
cmp
fs
adc
lret
xchg
sarb
mov
add
dec
add
and
sub
mov
inc
xor
and
in
insb
add
fldenv
addb
mov
add
ret
enter
xchg
std
incl
cwtl
mov
js
add
push
or
mov
or
pop
test
mov
test
add
call
pop
mov
roll
lock
fmulp
mov
dec
add
xchg
cmp
in
orl
jns
call
push
xchg
jnp
mov
xchg
sub
adc
add
or
dec
cmp
lahf
icebp
imul
subl
scas
and
shlb
mov
add
jge
enter
aas
in
mov
jne
or
add
push
dec
add
cltd
pop
dec
jg
sbb
pop
mov
aas
jo
mov
pusha
mov
sbb
jns
bound
xchg
shlb
jbe
xchg
dec
sbb
movb
lret
popa
jmp
fbstp
push
mov
jno
sarb
push
daa
pop
cmpsl
sbb
pop
and
adc
xchg
shl
addb
test
mov
sti
out
aam
mov
fnstenv
je
push
js
jb
pusha
push
add
imul
mov
inc
mov
add
lods
js
cmp
cmp
add
movsb
stos
mov
jnp
cwtl
or
and
mov
add
jno
cmp
add
jbe
cmp
imul
xchg
fildl
ja
jp
sbb
cmpb
leave
outsl
aaa
dec
pop
push
xor
mov
sub
lea
pop
mov
nop
arpl
mov
pop
cmp
add
lds
pop
out
dec
add
pop
lcall
cmpsb
int
jecxz
shrb
xchg
push
add
nop
cmpsb
popa
pushf
rcrb
sub
dec
push
xchg
test
stc
sbb
out
inc
sub
not
sbb
ljmp
dec
xchg
mov
int3
mov
sub
adc
push
xor
jp
or
insl
adc
ffree
add
lret
loopne
iret
hlt
push
pop
pop
xor
pusha
or
pop
lcall
in
inc
sbb
stos
faddl
mov
stos
mov
nop
add
bound
fcompl
add
jno
mov
cmp
movb
out
xlat
dec
lahf
jne
shlb
jecxz
push
nopl
xor
xlat
mov
test
cmp
js
sahf
pop
dec
or
add
xor
jg
jbe
sbb
push
into
stos
adc
xchg
adc
dec
or
loopne
sub
sbb
push
adc
jo
push
pop
mov
mov
and
je
cmp
addb
cmp
sbb
jns
stc
adc
repnz
xor
test
in
and
add
int3
in
leave
nop
adc
jge
dec
fsubl
cs
aam
pop
add
pop
repz
lods
mov
shr
cmp
mov
dec
mov
jne
mov
jo
insl
adc
adcb
jb,pt
divb
sub
push
jge
cld
outsb
push
jae
scas
shrb
push
pusha
xchg
daa
add
mov
pop
fildl
inc
cli
std
loopne
jns
sub
or
adc
or
faddl
sub
xor
scas
add
mov
add
lods
fstl
add
or
jecxz
outsl
pop
mov
push
out
dec
adc
mov
add
add
imul
pop
loopne
add
sbb
xchg
and
lret
push
cmp
adcl
mov
push
inc
and
push
clc
call
and
cs
pop
call
add
cwtl
sub
pushf
push
inc
and
in
mov
add
dec
clc
mov
xchg
add
je
in
pusha
mov
jb
test
and
pop
in
aam
or
mov
mov
mov
lret
add
mov
cmp
inc
push
fnstsw
xchg
cwtl
add
loopne
mov
cmp
stos
mov
imul
or
xchg
out
mov
pop
jns
addb
xor
inc
sahf
cld
inc
pop
adc
rcrb
in
ret
add
enter
lahf
addr16
add
push
pop
xorl
add
out
imul
xchg
xor
pusha
add
cld
inc
jecxz
xor
repnz
arpl
pop
add
fldl
jo
fistl
xchg
or
movsb
call
jecxz
adc
ds
arpl
push
pusha
xchg
popf
jp
icebp
ret
add
ds
xchg
enter
insb
xlat
push
dec
insb
jmp
lret
sbb
add
pop
xor
enter
push
ror
sbb
popa
sbb
lock
dec
aam
adc
add
gs
add
or
dec
xchg
lock
push
xor
push
push
sub
sbb
lret
jecxz
push
adc
push
push
push
mov
ja
add
sub
in
or
cs
aaa
sbb
pushf
sbb
cmp
mov
pop
push
add
and
ret
dec
jmp
add
or
sbb
mov
pop
sbb
xor
dec
cld
add
fs
and
in
enter
nop
and
mov
add
xchg
jp
gs
cmp
dec
outsb
shl
pushw
add
mov
push
mov
add
sbb
dec
clc
push
enter
ss
xor
fisttps
ljmp
xchg
sarb
pop
add
xor
cmp
aas
jnp
add
jae
jo
xor
sbb
mov
add
mov
cld
mov
add
sub
stc
out
arpl
out
or
add
or
js
rcrb
lcall
mov
add
test
popf
jb
dec
add
cmpsl
xchg
add
or
aam
lahf
cmp
add
fadds
fxrstor
jbe
lret
rolb
ds
or
in
cltd
xor
adc
dec
xorb
inc
jno
jnp
mov
adc
lret
dec
add
jae
add
in
dec
add
sahf
xor
add
loop
or
stos
adc
push
fwait
pop
lea
dec
add
pop
adc
das
dec
adc
mov
pop
xlat
cltd
test
stc
jb
add
fidivs
loopne
ss
pop
dec
sub
cmc
push
in
add
cmpsb
pop
jecxz
rcrb
stos
jnp
push
add
gs
hlt
loope
jp
add
js
sub
add
mov
bound
lret
cld
xchg
repnz
cs
xchg
pop
hlt
stos
arpl
test
ljmp
or
shl
std
shrb
mov
add
cmp
ret
inc
lods
sahf
fildl
in
lcall
ss
or
push
xor
rolb
push
mov
xchg
lea
icebp
dec
add
dec
adc
lahf
jnp
inc
roll
ret
cld
jg
aam
add
add
cmpb
add
dec
movsl
xchg
inc
in
je
pop
mov
in
mov
js
enter
adc
push
clc
cmp
add
jp
int
jle
test
adc
mov
dec
outsl
push
cld
jnp
negb
xor
mov
outsb
mov
sbb
add
scas
popa
mov
or
and
push
inc
sbb
pop
aad
out
mov
les
add
mov
lcall
pop
call
bound
xchg
movl
in
jne
add
push
or
fisubrl
dec
pop
mov
lock
sbb
add
jbe
fucomp
sbb
and
or
cld
push
mov
fildll
sbb
xchg
ret
shll
ret
add
mov
in
cli
pop
jne
push
add
and
add
add
pop
sbb
adc
cmovg
stos
and
orb
enter
adc
jae
outsl
fstpt
mov
mull
mov
xor
sahf
push
and
or
cmp
lret
add
movsl
adc
fmul
into
add
add
add
iret
jp
xor
xchg
shlb
aad
add
mov
cmp
stc
addb
jbe
mov
mov
push
xor
cld
lds
xlat
jge
lods
aaa
mov
and
fsubl
dec
xor
sahf
jge
js
daa
pop
testb
or
out
push
cmp
loope
jg
cld
mov
add
pop
mov
mov
shll
add
pop
out
sub
rcrb
insb
jne
mov
mov
adc
cmp
movl
push
outsl
inc
and
xchg
iret
vmwrite
fwait
add
in
pop
lds
mov
dec
or
insl
test
add
popf
inc
xchg
mov
dec
xchg
inc
cwtl
add
or
in
mov
jle
pop
xchg
cmp
sbb
push
shll
mov
dec
rorb
dec
insl
cwtl
in
cmp
leave
icebp
inc
xorb
mov
add
sub
fs
add
call
dec
add
sbb
mov
push
xchg
insb
call
nop
push
add
scas
and
add
ja
arpl
in
popf
add
sbb
call
xchg
adc
icebp
bound
push
ficomps
rclb
loope
aaa
add
push
xchg
imul
pop
mov
ds
mov
mov
inc
addl
sarb
addb
xchg
or
push
dec
insl
insl
mov
scas
cmp
sbb
in
and
push
js
add
dec
scas
ja
pushf
clc
roll
adc
xlat
jle
add
mov
loop
sbb
out
imull
pushf
xor
jl
sbb
mov
repnz
dec
test
xor
mov
mov
call
xlat
rolb
int
out
outsl
es
mov
pushf
or
dec
jo
and
add
cld
xchg
add
stc
js
rolb
add
fstpl
imull
jp
ljmp
add
fwait
outsl
repnz
pop
or
push
out
sar
sub
add
pop
push
add
mov
insl
xchg
lea
sub
lods
mov
mov
pop
xor
imul
sbb
mov
or
scas
popf
xlat
imul
ffree
cmp
cmpl
imul
lods
xchg
sub
outsb
and
imul
jp
add
enter
clc
jmp
or
dec
lret
jecxz
lret
sbb
adc
lods
xchg
shlb
fdivrs
xchg
jno
or
js
inc
and
sbb
mov
sbb
mov
mov
push
pop
leave
nop
imul
add
push
push
jmp
xor
or
mov
sub
mov
sub
outsl
ja
add
inc
mov
fistpll
clc
cwtl
sbb
xchg
aaa
cltd
shlb
adc
cs
mov
mov
mov
cmp
mov
test
push
add
call
sbb
inc
pop
stos
fcomip
add
sub
push
test
icebp
scas
cmpl
push
add
ret
pusha
ret
js
add
rcrb
lock
jb
iret
pop
in
addr16
cltd
das
sub
jle
xchg
sbb
mov
pop
pusha
inc
sbb
push
push
lods
add
fwait
and
fimuls
lret
filds
and
int
and
add
adc
add
rcll
add
lahf
lret
test
int3
push
andb
scas
add
dec
add
hlt
mov
cmp
test
adc
xchg
mov
addb
in
stos
mov
pop
arpl
fmull
cwtl
pop
add
sbb
mov
loopne
addb
sbb
jnp
inc
mov
cmc
addl
lods
push
in
fdivr
mov
pop
inc
insb
cld
cmp
repz
xchg
add
sbb
xor
mov
lock
sbb
sub
cs
mov
add
xchg
es
cld
and
inc
cmpsl
inc
loope
xchg
pop
or
xor
in
movsb
add
cmpb
rorl
add
fdivl
cli
cmp
mov
push
sub
fdivrp
add
mov
pop
adc
push
or
fsubs
test
mov
dec
jo
pop
popa
or
push
cmpsl
xor
sti
leave
add
jmp
stc
jb
insb
jge
dec
mov
test
mov
test
add
inc
icebp
mov
movsl
push
mov
mov
mov
stos
bound
test
jo
lcall
dec
push
int
and
stos
push
add
movsb
dec
ss
jecxz
es
int3
cmp
push
dec
shrl
add
xor
push
add
filds
ljmp
mov
repz
sub
inc
leave
cli
sahf
add
shlb
add
mov
push
jg
xor
inc
cmp
fidivrl
adc
xor
fnsave
inc
faddl
or
jg
das
fstps
ret
jnp
push
sbb
xchg
or
lret
push
push
jecxz
cld
pop
call
loope
sar
iret
jb
add
shll
adc
aaa
pop
insl
dec
lock
fwait
enter
jo
mov
push
testl
pop
or
adc
push
cwtl
mov
or
push
jl
add
sub
mul
mov
xor
dec
xchg
test
out
mov
add
mov
or
insb
dec
js
pop
pop
movsb
shlb
jg
out
add
out
repz
fldl
in
inc
mov
add
sti
sbbb
ret
push
mov
in
pop
das
adc
les
add
sub
sbb
cmp
fidivrs
clc
push
fstps
add
add
dec
cwtl
mov
mov
lahf
mov
cmp
hlt
push
and
in
in
add
xchg
sub
or
repnz
pxor
andb
sub
add
movsl
pop
jmp
jmp
mov
xor
cs
sub
cmp
cs
rcrl
push
mov
push
mov
icebp
xchg
jno
cli
and
xor
inc
xor
sub
and
loop
je
jl
roll
mov
jb
insl
add
inc
fistl
push
dec
outsl
fnstsw
push
pushl
aam
sbb
push
ret
jle
mov
push
std
add
lahf
in
cltd
cli
mov
out
cmp
add
jle
in
sbb
out
out
mov
pusha
flds
bound
rorb
jecxz
inc
or
cli
add
dec
jae
pusha
adc
or
and
mov
out
es
push
enter
lea
or
sti
scas
pop
fcompl
add
and
jnp
inc
push
rolb
cmpsb
stc
orb
lods
xor
lahf
rorb
in
mov
adc
ficomps
imul
aam
push
xor
jb
add
gs
pop
in
add
or
leave
push
outsl
nop
jmp
add
inc
cwtl
jae
addl
xacquire
inc
add
mov
adc
stos
push
or
mov
cs
loope
push
add
dec
push
cwtl
insl
rolb
cmp
pusha
add
push
addr16
hlt
jae
fmul
pop
lea
into
mov
call
icebp
add
ss
sub
add
scas
inc
push
fbstp
xor
cmp
and
int3
add
ljmp
pop
and
pop
das
mov
mov
fistpll
shlb
std
dec
push
or
movsb
push
mov
cmp
cs
cmc
add
add
test
sub
mov
fdivrl
jecxz
ds
sub
adc
push
add
mov
add
imul
jle
fcomp
add
mov
xchg
xor
jl
add
inc
mov
mov
push
and
pop
loopne
imul
and
lcall
pop
add
pop
fs
and
add
inc
popf
rcrl
xchg
sbb
xor
add
mov
mov
adc
xor
cmpsl
add
ret
dec
dec
cmpsb
xchg
stos
test
pmulhw
jne
enter
or
pop
sti
push
pop
cli
out
lret
clc
insb
ja
adc
jae
sbbb
cmp
ljmp
mov
pop
mov
pusha
icebp
or
fwait
add
repz
add
insl
xor
fs
pop
test
aaa
xorl
inc
add
mov
cmp
outsb
rorl
movl
xor
in
xor
sbb
adc
test
shl
sub
test
sbb
xor
shll
and
dec
aam
add
stos
popa
mov
ret
xchg
sbb
push
popf
or
adc
loopne
cs
add
xchg
add
inc
subl
inc
jbe
or
int3
cmp
cld
dec
jecxz
xchg
dec
stos
mov
ficoml
cmc
leave
je
add
fs
mov
mov
add
cli
test
call
add
scas
inc
push
loopne
adc
mov
int3
or
outsb
add
imul
test
int3
or
and
xchg
mov
dec
nop
enter
xchg
cmp
cmp
in
jg
pop
idivb
jp
add
jae
push
aam
addr16
ljmp
leave
push
mov
scas
add
mov
aaa
mov
push
mov
testb
add
push
cmp
mov
fdiv
aas
mov
pop
pop
xchg
add
dec
aad
or
dec
push
ja
cmp
cmpsl
and
sub
and
pop
cmp
adc
dec
push
cli
lods
xor
outsl
fcoms
roll
data16
mov
js
ja
sti
sbbl
jae
mov
cmpsb
faddl
and
and
add
pop
mov
orb
push
test
add
pop
shrb
mov
sbb
pop
mov
jle
adc
push
lret
insl
mov
cs
mov
scas
jle
xor
adc
outsb
inc
fadds
add
sbbl
btr
in
dec
popf
and
cmp
sbbl
sbb
fwait
ss
or
sbb
add
mov
sti
xor
mov
sbb
pop
xchg
in
pop
ljmp
std
mov
cmpb
add
bound
xlat
ljmp
movsl
fsubs
mov
lods
test
pop
je
inc
je
fsubrl
neg
or
in
or
xchg
lds
jae
data16
add
fisttps
inc
rcr
nop
jmp
aad
addr16
xorb
dec
movsl
ss
add
adc
and
mov
mov
xchg
test
add
or
sbb
fwait
in
mov
cmp
mov
out
xlat
sub
fdivrl
or
lock
cmp
add
cmp
shll
and
inc
mov
add
pop
sbb
fiadds
dec
or
mov
mov
out
add
cld
cmc
mov
or
and
daa
mov
sbb
and
cwtl
sub
mov
xchg
add
pop
out
and
js
add
mov
int
mov
dec
adc
mov
jmp
in
out
sbb
dec
movsl
or
imul
adc
clc
add
sbb
lret
mov
jl
jge
mov
xchg
nop
push
gs
enter
stc
out
add
add
movb
cmp
xchg
adc
clc
and
pop
ret
movsb
inc
mov
loopne
add
loop
jmp
cmp
push
negb
inc
cmp
ret
jle
add
insl
std
sub
enter
and
into
pop
fimull
incb
leave
nop
push
push
mov
divl
fdivrl
or
adc
jl
jl,pn
add
popf
xchg
arpl
orb
aad
cld
xorb
xchg
loopne
mov
sub
cmp
jle
or
push
adc
add
and
dec
sbb
mov
mov
xchg
and
arpl
adc
pop
in
movsb
add
out
add
push
add
push
sub
les
popf
mov
loop
pop
add
add
hlt
xchg
mov
test
add
idivl
jae
mov
fistps
mov
inc
orl
mov
mov
jge
outsb
scas
push
sarb
enter
add
and
gs
insb
cmp
dec
loope
jl
nop
in
add
sub
hlt
insl
pop
add
es
rorb
cmc
jne
inc
inc
loop
dec
add
jnp
mov
push
lea
icebp
mov
xor
push
jge
pop
cli
cmpsb
xor
pop
jbe
add
loope
jae
out
test
mov
dec
sbb
add
mov
iret
pop
add
ds
inc
and
in
cmp
jbe
inc
cmp
sar
pop
and
add
and
iret
jmp
mov
and
jnp
sub
lods
adc
mov
dec
lret
sbb
aaa
pop
fwait
cmp
sub
sub
in
lock
pop
cld
adc
xor
add
repz
fadd
mov
xchg
add
hlt
mov
or
cmc
pop
push
adc
add
mov
inc
rcll
add
xchg
or
pop
in
insb
or
fs
test
not
iretw
test
xchg
mov
xchg
repnz
test
lods
jno
ret
add
mov
fiadds
sbb
jo
or
xchg
dec
loopne
stos
mov
in
mov
and
bnd
add
xor
mov
push
push
mov
negl
jno
roll
sahf
mov
das
mov
push
sbb
jecxz
push
xor
int3
in
repz
add
icebp
rorb
mov
xchg
adc
cwtl
push
cld
pop
ret
mov
xchg
xor
loopne
pop
andb
cmp
xor
sub
adc
add
xchg
mov
pop
repnz
lret
mov
inc
sub
daa
cmp
mov
sub
rolb
dec
xchg
add
mov
fiaddl
add
in
insb
jbe
mov
movsl
mov
popf
or
in
mov
push
enter
stos
in
mov
int3
pop
loopne
mov
dec
mov
inc
or
lock
mov
sbb
lods
add
mov
mov
fwait
push
fcoms
out
add
dec
push
sub
mov
pop
mov
int
in
mov
sub
add
sub
scas
inc
in
leave
sahf
adc
addr16
cli
outsl
adc
cmpsb
add
andl
dec
or
mov
aam
in
lock
jge
and
loopne
push
pop
jne
pop
or
xchg
inc
add
movsl
sbb
cwtl
cmc
mov
rcll
or
aas
test
inc
add
lds
xchg
pop
add
or
insl
cwtl
js
or
inc
lods
xor
and
lret
mov
inc
or
popa
repz
or
dec
sub
addr16
cmp
add
mov
sarl
ja
pop
int
lods
das
dec
sub
dec
test
insl
mov
lret
sbb
cmp
xchg
jl
xchg
les
sbb
push
fs
ds
xchg
aaa
sub
mov
mov
addr16
xchg
inc
lret
mov
cli
cmpl
int
mov
pushf
incl
pop
std
ljmp
add
add
inc
sub
ret
test
in
push
add
inc
xchg
push
pop
rcrb
fidivrs
jns
mov
cmp
into
cmp
adc
add
mull
cld
aad
sbb
cli
jecxz
or
jae
sub
nop
lret
outsb
jmp
les
pop
add
or
jno
lock
mov
js
pushf
loope
cld
pop
les
aad
xor
fdivrs
test
jbe
add
add
ljmp
jle
or
shll
inc
jae
sub
fistpl
or
mov
movsl
scas
xor
add
pop
add
cmp
xchg
daa
adc
out
jge
pop
orb
mov
lahf
es
sbbb
jo
inc
lds
add
popf
mov
sti
add
mov
test
adc
movb
add
mov
in
cmp
xor
pop
in
cld
xlat
sub
stos
add
aaa
es
lock
add
cmp
addl
in
scas
cmpsl
movhps
scas
pop
out
popf
add
cmc
fbld
movsb
jbe
push
cmp
xor
xchg
dec
xor
iret
add
push
sbb
push
inc
daa
mov
movsb
add
and
inc
mov
outsl
outsb
sar
ss
add
mov
testl
xorl
add
pop
mov
xchg
xchg
mov
insl
movsl
stos
and
jno
mov
call
jne
push
repnz
jae
idiv
sub
sbb
mov
mov
add
mov
popf
jb
inc
mov
xchg
lock
cmpsl
test
xchg
push
in
sbb
fwait
mov
int3
insl
fcomps
pop
mov
inc
out
rolb
jne
stc
mov
or
std
add
jnp
pop
cmp
push
jl
or
aam
nop
push
mov
aam
lret
mov
push
cmp
loopne
repz
movsb
or
sub
add
add
idivl
fbld
arpl
cmpsl
xor
add
and
jl
xorb
xchg
aas
dec
jno
nop
xor
xchg
adc
jg
inc
fsubrs
cmpsb
bndstx
aad
ficoms
ret
into
dec
nop
out
pop
add
mov
jg
fldpi
dec
in
popa
push
hlt
in
xchg
cs
stos
test
add
inc
and
xchg
incb
and
add
arpl
mov
loope
mov
xchg
sbb
and
pusha
test
loopne
insb
add
mov
fmull
push
xchg
ljmp
test
out
mov
mov
hlt
add
dec
add
add
xchg
pop
sarl
scas
test
cltd
int3
jb
push
mov
loope
pop
mov
inc
dec
pop
and
popf
adc
lods
pop
sub
add
fwait
mov
lds
xor
mov
hlt
cld
jbe
test
call
sar
dec
adc
dec
push
testl
and
lahf
movsl
hlt
add
pop
lds
add
or
insb
sbb
sub
lret
adc
loopne
into
and
repz
add
scas
sub
in
jnp
or
addr16
pusha
add
adc
test
out
push
cmp
dec
pop
rcrb
mov
insl
in
iret
sti
and
jne
imul
or
adc
adc
fsubrl
push
sbb
add
mov
xor
je
inc
xchg
test
add
add
sbb
push
insb
addb
ret
sub
call
sub
cmp
add
jne
fnstsw
pop
add
out
and
inc
stos
pusha
fs
sbb
sub
dec
js
adc
xor
or
cmp
adc
test
add
dec
mov
inc
lods
or
mov
add
adc
icebp
mov
movsb
cmp
out
pop
ja
mov
or
push
jmp
jg
add
mov
mov
xchg
mov
cmp
mov
xchg
fs
or
adc
push
ret
add
mov
inc
inc
mov
add
inc
shlb
add
movsl
jg
cmp
mov
test
mov
cs
jbe
into
dec
sub
or
das
jl
sar
mov
xor
rcll
mov
mov
ds
pop
dec
adc
call
das
jb
push
int3
mov
add
push
test
jb
lods
xchg
add
cmp
iret
xchg
jno
add
imul
pop
inc
inc
xchg
je
inc
sbb
add
push
mov
cmp
int
ja
lea
mov
push
add
jns
mov
pop
lea
add
sbb
fs
pop
fwait
int3
inc
adc
and
push
lcall
push
add
sub
cs
loop
jo
outsl
mov
add
in
mov
jl
mov
imul
out
mov
sahf
mov
mov
add
rclb
pop
push
cld
mov
push
sub
lock
es
inc
in
jbe
add
ds
ja
in
mov
mov
sub
add
inc
jecxz
dec
scas
and
data16
inc
cmp
aam
push
sub
jo
cmp
xchg
add
mov
mov
pop
push
or
mov
push
add
out
test
js
dec
mov
enter
pop
add
and
sub
mov
rcpps
or
dec
call
les
icebp
push
lods
xor
jl
mov
loop
in
add
aam
push
jmp
cmp
jne
or
mov
add
mov
mov
ja
addb
mov
lods
push
pop
lds
out
js
and
xor
cmp
push
popf
aam
sbb
inc
push
nop
int3
push
sub
das
shrb
fs
and
mov
jg
inc
sub
add
cmp
mov
mov
jns
and
cmpsb
mov
movsl
shlb
das
shl
xor
test
pop
cmpsb
or
and
or
loopne
xor
shlb
cwtl
ljmp
fcoms
pop
pop
arpl
add
pop
fisubrl
je
int3
mov
add
cmpsb
jno
add
inc
bound
sbb
std
jne
repnz
sbb
push
pusha
mov
arpl
mov
pop
jecxz
in
movsb
add
adc
jle
add
loop
test
iret
jno
cmpsl
inc
jle
add
mov
add
mov
pop
sub
sbb
addb
push
shrl
mov
add
int
add
dec
cmpsl
test
inc
sahf
ja
add
cmp
lds
in
jbe
and
inc
fcomi
mov
push
push
lret
movb
or
jne
in
aas
mov
clc
pushf
loope
add
imul
add
or
stos
xor
shlb
fsubs
arpl
out
cmp
mov
adc
jp
orl
pop
out
addb
arpl
into
rclb
sarb
pop
xchg
xorb
and
xchg
sbb
mov
push
das
push
push
lods
add
jnp
sbb
add
rorl
scas
cmpsl
or
lahf
popa
in
inc
enter
mov
sub
cmc
mull
xor
bound
insl
dec
daa
aas
and
pop
test
push
movb
inc
mov
mov
cmpl
add
mov
test
adc
xorl
xchg
test
push
pop
or
pushf
add
mov
xchg
and
pushf
add
hlt
xor
add
jo
mov
add
lock
data16
mov
mov
popa
adc
add
inc
mov
hlt
lret
sbb
ss
js
add
ret
and
cmp
addb
or
mov
in
push
or
ljmp
ret
push
cmc
clc
jns
repz
shll
jns
xor
or
icebp
sbb
cmp
cmp
adc
add
cs
mov
fs
cmp
scas
add
cmp
lods
gs
sub
je
mov
pop
mov
jb
mov
arpl
push
lahf
jle
push
nop
les
push
mov
and
addr16
lock
or
std
jl
jg
cmp
sbb
lret
add
add
or
push
fcomi
ljmp
dec
stos
and
add
or
mov
pop
fildll
shrb
mov
inc
dec
add
pop
mov
icebp
mov
cwtl
into
into
add
add
add
stc
xor
fisubrs
inc
cmp
aas
repnz
xor
fs
popa
xor
pusha
fnsave
push
push
stc
sbb
mov
outsl
add
sbb
call
inc
loopne
jg
stc
cmp
loopne
int3
aaa
rcrb
ficoms
adcb
mov
add
ja
mov
sub
mov
and
loope
ffreep
add
add
push
into
stos
jg
and
ja
arpl
and
hlt
outsl
adc
jb
push
imul
insb
inc
stos
fsubs
mov
mov
cmp
out
xor
add
sub
stos
das
inc
mov
mov
dec
das
les
fs
jo
fcmovu
jle
insb
mov
xorl
cwtl
inc
pop
cmp
and
dec
sbb
sbb
imulb
push
sub
add
mov
stos
sbb
rorl
movsb
add
mov
and
movsb
mov
lock
out
or
adc
clc
setle
pop
inc
add
nop
es
call
xor
sub
or
faddl
add
dec
fwait
arpl
movsb
and
add
popf
bound
mov
add
loope
mov
xor
xchg
xor
add
push
or
xchg
stos
add
ficoml
inc
mov
mov
xlat
push
ja
je
aam
jae
loope
movsb
stc
xor
mov
cmpsl
in
jne
aam
dec
push
push
loop
iret
xchg
addl
pushf
add
inc
cmc
sbb
sbb
inc
in
and
lock
add
aas
fisubl
xchg
xor
xchg
adc
adc
pop
and
jo
ret
jl
add
ds
inc
mov
lock
sub
xchg
cs
mov
dec
idivl
add
ficoml
inc
pop
pop
jb
or
add
cld
mov
repz
cmp
mov
mov
icebp
test
adc
iret
out
andb
andb
cld
add
xchg
sahf
add
test
push
pusha
jmp
lock
adcb
mov
dec
in
xchg
scas
test
dec
test
add
push
pop
jmp
mov
pop
cmp
shll
inc
out
call
popf
push
fildl
mov
mov
dec
and
ds
adc
pop
imul
xchg
pop
in
addb
push
in
jle
lahf
in
add
dec
and
fstl
dec
jecxz
mov
sti
sbb
push
xor
call
xchg
add
inc
inc
repnz
push
prefetch
cmp
in
push
cmp
lock
mov
sub
add
xor
inc
adc
jnp
mov
push
add
jle
out
cmp
push
fists
cwtl
hlt
add
mov
js
inc
add
cmp
cmp
sbb
add
mov
push
adc
fdivrl
mov
les
lds
in
add
sahf
cld
push
daa
sti
push
sar
aam
testl
repnz
je
fsubrl
xchg
popa
sub
stc
xlat
adc
in
inc
or
loope
stos
xor
cmp
inc
vmovups
or
xor
pop
fidivl
add
mov
je
lret
pop
icebp
das
dec
cmp
mov
cmpl
aaa
jge
std
lock
pop
jl
xor
icebp
jb
jbe
add
hlt
pop
les
orb
sbb
add
and
or
sahf
rcll
nop
inc
popa
shl
add
cld
push
out
iret
jo
ret
add
out
mov
shr
imul
cli
pushf
jp
fidivl
or
aas
fildl
popf
cmpsb
call
pop
fnstcw
fadds
mov
add
bnd
filds
dec
mov
outsb
in
pop
mov
xchg
adc
adc
fmul
inc
pop
or
je
lcall
pop
push
push
negl
sub
enter
push
lahf
in
cs
repz
add
inc
cmpsb
push
pop
jl
adc
int3
jg
cltd
jo
cs
xor
dec
imul
shlb
loop
pcmpeqd
adc
inc
mov
add
rcll
loope
xchg
fnsave
add
lcall
add
mov
push
push
pop
and
or
xlat
push
sub
in
lods
mov
cmpsl
add
cmp
add
mov
sbb
jno
jne
sbb
inc
sub
jmp
mov
subb
cmpsl
cmp
or
inc
call
mov
mov
jns
add
pop
xor
fdivrl
in
inc
aam
test
sub
sbb
push
mov
dec
sbb
push
adc
jl
pop
push
inc
insb
rorb
icebp
rol
add
js
dec
ds
pusha
push
inc
in
mov
and
repz
xchg
sbb
push
pop
loop
inc
jns
pop
sub
jmp
xchg
jae
mov
in
fs
and
mov
add
add
stc
mov
push
mov
xchg
sbb
adc
mov
fstpt
sahf
out
add
mov
mov
add
fsubl
les
or
dec
inc
push
mov
mov
add
and
imul
push
js
into
add
add
xlat
mov
cmpsl
mov
inc
add
add
pop
sub
sbb
rolb
jb
pop
add
and
cli
js
pushf
mov
add
orb
insb
scas
test
fistl
mov
fmuls
cmp
jnp
in
mov
add
repz
mov
imul
pop
sbb
das
fiadds
in
js
insl
jo
xor
add
mov
inc
sbb
aam
iret
mov
mov
ss
subb
mov
fsubl
or
mov
add
insb
mov
xor
data16
sbb
push
add
xchg
mov
in
nop
or
add
aas
test
dec
or
jo
jns
roll
mov
pushf
test
push
sub
out
and
cmpxchg8b
mov
sub
fistps
nop
sbb
hlt
xchg
rolb
dec
dec
mov
out
popl
mov
in
xor
add
add
das
or
ljmp
shll
in
out
inc
xchg
orb
or
add
mov
shrl
dec
dec
add
xor
jbe
ja
dec
popf
and
adc
arpl
loop
std
mov
scas
imul
jne
jl
cmp
mov
or
ds
dec
inc
rep
jp
pusha
sub
mov
adc
and
xchg
fs
cmp
xor
inc
adc
cmp
mov
imul
jno
add
mov
repnz
jge
add
xchg
les
es
ljmp
sub
pop
subb
pop
and
jo
add
in
mov
jmp
sti
ret
mov
mov
fldenv
arpl
mov
xchg
xor
lret
xor
test
dec
inc
aad
ss
add
xchg
out
xchg
lret
mov
int3
sbb
add
jecxz
jnp
loope
add
jmp
jno
ljmp
in
mov
add
fidivs
stos
add
jp
clc
adc
add
mov
orb
add
add
stos
int3
jmp
mov
jge
rclb
xchg
cltd
lahf
xor
jecxz
add
cld
movsl
xor
data16
inc
je
aam
or
or
mov
scas
add
adc
outsl
dec
mov
test
lods
add
lds
sbbb
xor
es
daa
sbb
clc
mov
sub
repnz
dec
or
imull
test
cmp
jmp
out
xchg
mov
inc
aam
aaa
dec
sbb
pop
out
push
or
lds
test
adc
div
stos
comiss
inc
and
add
subl
loopne
xor
ret
push
daa
inc
dec
out
movl
cltd
mov
lret
rcrl
adc
shl
add
xor
orl
and
arpl
test
call
in
nop
add
int
jle
andb
xchg
add
mov
ja
push
out
ljmp
xor
cs
jns
mov
js,pt
push
add
pop
xchg
sbb
push
sub
lock
sbbb
xchg
sub
jecxz
add
and
movsl
shl
cmpsl
xor
es
out
add
ret
mov
jp
repz
rclb
xchg
cltd
push
sbbb
sbb
nop
mov
aam
adc
mov
jp
dec
sub
ret
xchg
sar
loope
imul
clc
sub
cwtl
jge
enter
or
cwtl
xor
sbb
xor
pusha
wrmsr
inc
in
ss
add
push
lcall
sbb
sub
nop
adc
les
mov
cmp
das
jns
cs
mov
xchg
xchg
pop
cmp
mov
add
pop
adc
mov
jo
add
into
add
ds
fisttpl
fisttpll
add
data16
mov
mov
xor
in
pop
frstor
lcall
mov
lods
sbb
push
lds
rcrl
add
pusha
cs
filds
movsb
into
push
outsl
aaa
adc
hlt
xor
movsl
adc
cmp
xchg
and
sub
outsb
mov
cmp
sbbl
scas
jl
sub
andb
mov
and
jns
push
or
add
orb
push
loopne
dec
scas
sub
bound
cmpsb
add
jg
jmp
push
nop
cmc
lock
push
pop
gs
add
xor
dec
add
mov
das
add
cmp
mov
pop
cli
ret
adc
and
cmp
add
mov
sbb
outsl
inc
xchg
sbb
xchg
and
arpl
out
loope
mov
add
fsubrl
jl
dec
add
sbb
adc
das
pop
test
mov
lahf
out
pop
rolb
dec
mov
adc
or
call
test
mov
xchg
jge
add
insl
sti
lods
mov
sbb
lds
clc
jbe
push
into
jle
lock
pushf
iret
dec
sbb
push
movsl
push
inc
or
jp
out
mov
ljmp
cs
add
aas
xor
pop
outsl
and
fbstp
divl
xor
inc
cmp
mov
adcl
ret
cld
push
sbb
testl
aam
sub
jle
mov
mov
lods
add
fistl
add
sbb
lcall
pshufw
adc
or
adc
out
adc
hlt
jb
push
add
cmpsl
loop
dec
jl
xlat
pop
xchg
mov
pop
add
int
shrb
imul
insb
ljmp
push
test
bound
cmc
jno
sub
mov
pop
insl
inc
and
sub
cltd
fisubl
pop
stc
shlb
scas
dec
sahf
cld
push
push
mov
sub
add
dec
and
dec
gs
es
inc
out
ljmp
mov
push
sbb
pop
sub
cs
lcall
jl
cmp
or
mov
cmp
jp
sbb
orb
jmp
clc
jbe
test
mov
das
or
jge
mov
xchg
repnz
aaa
and
gs
cwtl
add
push
test
sub
add
mov
adc
xchg
jae
cli
daa
add
add
inc
rcl
jbe
in
push
jo
nop
sbb
mov
lcall
mov
add
mov
incl
mov
cmpsb
sti
mov
mov
popf
bnd
sub
movsl
add
mov
fisubs
into
sub
cmp
test
sbbb
jg
sbb
loope
or
sub
lcall
mov
add
and
sbb
inc
popa
push
add
out
insb
imul
out
paddsb
add
stos
mov
mov
jp
inc
fistpl
lcall
sbb
imul
add
add
sbb
jg
mov
loope
jae
xlat
xchg
js
add
mov
int
mov
or
jae
and
mov
jl
mov
les
add
insl
ljmp
sarb
roll
movsl
adc
and
ret
mov
lea
adc
fwait
mov
jo
js
scas
xchg
rcrl
fs
mov
mov
pusha
push
xor
fwait
dec
jae
add
mov
enter
leave
push
out
nop
cmp
mov
jg
aaa
push
add
push
and
xchg
fldl
mov
test
lods
dec
stc
imul
aad
and
in
push
push
fcoms
push
lods
mov
mov
into
add
stos
xchg
xchg
mov
adc
dec
xchg
ret
cmp
add
andl
jmp
inc
xor
adc
cmp
mov
sbbb
push
leave
pusha
fwait
test
loop
mov
pop
nop
bound
pushf
fs
jl
and
data16
outsb
cmp
movhlps
cs
in
lods
add
imul
mov
mov
ror
orl
pop
pop
scas
pusha
mulps
cmp
in
ret
shlb
sbb
pusha
pop
stos
jb
or
cwtl
cmp
sbb
mov
mov
daa
fs
fstl
pop
push
jns
arpl
dec
daa
mov
in
adc
jb
push
movb
aaa
sub
nop
inc
sti
fdivrs
adc
xchg
shll
enter
sbb
aas
mov
push
addl
jecxz
jnp
and
popf
in
fsubrp
jb
adc
enter
mov
call
xchg
and
sbb
add
je
pop
das
fisttps
dec
xor
dec
sub
add
adc
call
nop
nop
pop
rcrl
imul
and
adc
mov
repnz
lahf
ljmp
subb
mov
ja
adc
mov
out
sbb
dec
cld
lods
add
sbbb
push
add
ljmp
out
fisubrl
mov
outsb
das
mov
daa
adc
sti
cmp
add
int
or
jle
and
jg
mov
add
and
out
inc
loope
add
call
inc
xchg
jecxz
inc
add
jo
xor
pop
in
push
popf
imul
cmp
xor
repz
aad
inc
ret
add
imul
adc
inc
ljmp
rcrb
add
sti
mov
push
xchg
mov
fdivrl
add
mov
cmc
add
dec
mov
addr16
fs
add
pop
or
dec
dec
or
int
mov
xor
or
dec
add
incl
xorb
das
pusha
jns
cmp
jo
shl
cmpsl
jp
loop
jb
in
popf
jo
jmp
imul
repnz
fs
bt
loopne
or
jb
sub
mov
add
jns
or
xchg
mov
imul
add
aam
cmpsl
mov
sbb
shll
or
into
or
repnz
sti
xchg
pop
or
test
popf
jecxz
icebp
nop
andb
xor
xchg
adc
push
xchg
out
inc
cmp
sahf
insb
adc
lods
jne
mov
rol
jae
lea
add
ja
adc
or
add
leave
sbb
push
das
add
inc
insl
push
or
mov
inc
gs
aad
mov
xchg
inc
fsubs
loop
and
inc
jmp
add
testb
pop
jne
in
stos
adc
jbe
mov
push
xlat
adc
repnz
inc
mov
insb
add
test
ss
or
add
xor
add
xor
pop
enter
push
movsb
fildll
insb
pop
cld
add
sub
mov
mov
jecxz
es
scas
jmp
cld
insl
add
cmpsb
not
adc
xor
int3
jl
out
mov
cs
and
jg
or
xor
mov
jg
lds
call
xor
and
arpl
adc
mov
dec
mov
hlt
pop
cmp
xor
pushf
adc
jne
inc
dec
cmp
fwait
icebp
sub
and
add
fisttpl
mov
xor
cmp
sub
cmp
push
add
jmp
pop
inc
jne
and
push
incb
cwtl
pusha
cmp
dec
cmpsb
pop
loop
ljmp
cmc
mov
mov
add
inc
cs
jle
rolb
add
arpl
adc
adc
pmulhuw
scas
ret
lock
pop
out
push
pushf
push
push
add
add
jo
cwtl
sbb
xchg
pop
sbb
add
out
add
mov
scas
adc
push
movsb
ja
andl
lea
sub
cmp
js
fdivs
add
subb
push
rorb
add
bound
test
add
je
and
jge
xchg
push
push
dec
jl
adc
add
mov
push
add
jae
andb
lret
test
popa
and
adc
sbb
pop
mov
or
adc
push
mov
push
and
pop
iret
rol
or
jbe
pop
movsl
adc
pop
or
xrelease
jne
loope
stc
mov
push
and
rcrl
add
push
xor
out
push
push
push
aam
add
mov
leave
add
push
das
jl
adc
push
inc
mov
jns
lock
lods
popa
dec
mov
into
cwtl
lret
dec
lods
sbb
andl
ljmp
lea
str
pop
sub
and
xchg
cli
xchg
cmpsl
xor
add
mov
fs
xchg
sub
xchg
fbstp
mov
mov
cs
aam
adc
mov
jecxz
movsb
or
jl
lock
testb
push
mov
aam
sti
mov
arpl
repnz
popa
cmpb
pop
or
xor
mov
ret
sti
fdiv
loopne
sbb
subb
ss
pop
negb
xor
jno
in
jp
adc
pop
nop
fidivrl
dec
dec
pop
mov
dec
or
or
pop
push
push
test
into
dec
inc
xchg
loopne
mov
inc
shrb
mov
pop
fadds
and
or
sub
sbb
ljmp
ret
cmp
mov
scas
dec
shlb
icebp
imul
das
clc
sbb
mov
rorl
fldenv
sub
fnstsw
and
push
arpl
pop
daa
inc
mov
mov
pop
pop
xor
rcrb
out
mov
adc
xor
imul
xor
mov
aas
mov
daa
mov
insl
cmp
push
and
fcomp
xor
mov
fisttpl
pop
icebp
inc
cmc
ds
iret
add
lock
ja
adc
ret
and
movaps
jbe
shlb
sbb
int3
xor
adcb
dec
adc
dec
int3
adcb
hlt
mov
leave
scas
gs
inc
add
dec
sbb
sbb
add
popa
sub
mov
or
add
enter
rorb
ja
xlat
add
mov
xor
loopne
inc
in
std
arpl
add
mov
xchg
add
ljmp
mov
or
pop
insl
sub
loope
mov
fildl
cwtl
ret
mov
sbb
jp
clc
add
pop
popf
cmp
mov
ds
stos
popf
sbb
inc
stos
jae
xor
lret
adc
cmp
pusha
mov
popa
cmpsb
and
fstpt
dec
push
adc
jge
lret
shl
nop
pop
out
pop
add
xchg
in
pushf
mov
xchg
xor
scas
add
pop
sti
int
xchg
xchg
popf
add
pop
xlat
cld
and
daa
and
movsb
adc
js
add
rorb
jb
dec
ljmp
dec
inc
push
inc
jae
mov
pop
mov
xchg
faddl
jne
pop
or
out
insl
add
mov
push
insl
mov
test
or
push
xor
das
rorb
mov
pop
inc
addb
inc
lret
add
mov
xchg
add
imul
daa
sub
push
mov
jno
fistpll
inc
push
std
scas
push
js
and
cwtl
jnp
pop
add
jl
in
es
scas
add
lret
xchg
mov
pcmpgtb
and
xchg
xchg
mov
xor
jno
jle
jg
jnp
pop
nop
jbe
sahf
inc
sti
mov
adc
sub
inc
clc
mov
mov
cmp
sbb
dec
std
cmpsb
add
mov
int3
test
add
or
add
dec
sbbb
pusha
fisttps
sub
sub
mov
xchg
call
or
leave
inc
stos
bnd
jno
inc
and
mov
ret
arpl
inc
push
push
cmp
lahf
inc
ljmp
int
dec
scas
fimuls
adc
das
cmp
dec
sbb
push
pop
leave
inc
inc
inc
add
mov
icebp
in
nop
dec
lret
add
pop
dec
add
jecxz
in
lcall
mov
jae
push
aam
ret
in
add
adc
or
mov
movsl
inc
mov
loopne
out
push
xor
loopne
dec
sbb
xor
sbb
pop
xchg
add
icebp
test
sti
std
add
inc
cmp
mov
sub
das
xchg
stc
jae
aam
cmp
add
push
add
adc
sahf
or
or
cmpsb
cmp
int3
mov
or
fsubrl
lock
es
cmp
pop
and
ljmp
out
mov
lahf
xchg
add
pop
insb
xchg
mov
xorl
inc
dec
jl
out
push
test
cli
pop
cmp
bound
mov
loopne
hlt
add
push
pop
mov
and
mov
and
adc
jecxz
in
add
das
fistpll
hlt
jg
lea
cmpsb
xor
or
inc
loope
test
lock
cmpsl
sub
aaa
ljmp
cmp
sbb
xchg
cmp
cmp
add
add
push
sbbb
adc
outsl
cmp
pop
jg
cmp
inc
pop
mov
int3
or
in
pop
add
aaa
into
xor
lock
rcrb
sbb
popa
loope
icebp
mov
inc
inc
xor
add
push
insb
dec
add
aam
mov
dec
testb
sub
mov
add
out
test
add
mov
hlt
xchg
inc
jns
push
addl
add
fmul
repnz
xor
and
xor
jmp
add
enter
gs
je
pop
hlt
das
out
xor
divl
arpl
ss
idivb
pusha
mov
add
push
into
push
mov
daa
pop
nop
jl
mov
loope
push
dec
dec
inc
or
push
aam
idivb
add
sahf
jnp
ja
push
and
push
icebp
add
rcrb
or
pop
shrb
ja
cld
pop
es
pop
and
sbb
es
outsb
inc
testb
pop
cmp
cld
and
add
mov
xor
call
outsb
orl
sub
xchg
incl
pop
dec
aaa
sub
aas
call
sbb
lds
push
xchg
xchg
and
js
sti
and
hlt
das
bound
jo
xchg
mov
lea
repnz
gs
mov
and
add
mov
add
data16
shlb
xor
rcrl
shlb
inc
sbb
push
sbb
and
dec
xor
pop
push
or
cmp
or
mov
das
in
add
repnz
xorb
mov
push
aaa
jo
ret
push
orb
stos
mov
push
push
jmp
fstl
adc
xlat
adc
mov
insb
ret
nop
inc
into
stos
add
jge
in
repnz
jp
add
mov
cmp
jae
add
push
and
aad
shlb
cld
cmp
aaa
cmp
daa
pushf
add
imul
and
mov
dec
sbb
insb
inc
or
xor
cs
int3
xor
pop
and
or
test
pop
xchg
xor
jns
cmpsl
faddl
push
push
lret
xor
addl
nop
xchg
add
xor
push
inc
rcrb
and
rcl
fldt
testl
add
xor
mov
je
sub
jg
xor
adc
mov
adc
jbe
dec
mov
nop
movsl
cmpsl
push
scas
arpl
fwait
adc
dec
mov
call
ljmp
add
fidivl
fucomp
xor
or
push
jo
add
mov
sti
fldenv
dec
vpsrlvd
add
int
push
pusha
sub
add
jae
leave
iret
xor
repnz
xor
hlt
movsb
cmpsl
lods
pop
dec
jmp
nop
sub
sbb
or
pop
add
push
sub
lods
call
sbb
jne
addr16
and
mov
jno
fs
fimull
xlat
movsl
jo
adc
mov
or
in
in
jge
adc
icebp
lock
int
dec
pop
add
sub
adc
adc
adc
out
test
adcb
jle
out
add
arpl
mov
xor
add
popa
jbe
inc
cmp
bnd
add
dec
xchg
inc
lcall
xor
sarb
ret
add
xor
or
xor
pop
mov
xchg
pop
leave
arpl
push
mov
add
or
and
xchg
add
cli
add
cmpps
adcl
in
pop
mov
and
js
xchg
out
inc
push
pusha
push
sub
mov
mov
pushf
dec
mov
je
xor
cmp
sahf
push
add
add
add
jmp
mov
or
in
fisubrl
xor
leave
dec
test
jge
cs
sti
fcomp
lods
add
mov
rcll
js
add
xchg
cmp
and
adc
mov
ret
add
xor
aad
adc
dec
roll
dec
push
add
icebp
imul
and
movsb
add
test
add
jbe
aaa
jg
sbb
repz
jl
pop
bound
fs
cmc
cmp
pusha
outsl
pop
xor
mov
xor
aad
add
insb
loopne
arpl
sahf
dec
jecxz
daa
add
cmp
jp
andl
repz
icebp
adc
je
enter
or
repnz
das
push
cltd
sahf
rorl
arpl
cmpsl
mov
add
mov
repnz
lahf
subl
int3
in
in
rdpmc
insb
and
add
lret
gs
out
and
mov
or
mov
and
in
rcr
adc
hlt
adc
xchg
and
subl
sub
xor
cwtl
add
or
jp
nop
gs
xor
popf
jne
insb
jne
je
push
or
jae
bound
in
and
or
or
sbb
nop
xor
pop
pop
aad
movsb
pop
sbb
imul
loope
lahf
cmp
loopne
movlhps
mov
cli
in
inc
mov
push
pusha
xchg
inc
mov
dec
rolb
pop
jp
popa
clc
and
inc
or
sbb
jmp
jl
add
push
and
lret
fisubl
xchg
pop
adc
inc
adc
stos
push
and
xor
aam
sbb
test
jg
repnz
add
sub
scas
test
sahf
mov
into
loopne
outsl
xor
sbb
cwtl
jmp
cmp
push
xchg
outsl
pop
pop
add
push
jae
inc
push
mov
inc
cmp
cmp
or
mov
lods
or
dec
add
adc
add
loope
mov
sub
jbe
nop
jp
dec
pop
sub
pusha
out
insl
pop
mov
sbb
lds
push
dec
sahf
or
add
add
xchg
rorb
mov
xorl
fldt
mov
push
in
pop
fildl
sub
inc
mov
mov
aas
sub
mov
dec
addr16
aam
flds
test
and
jno
cmp
sbb
sbbb
lea
or
fsubl
fwait
xor
test
push
cmpsl
loopne
inc
add
lret
add
mov
xor
sbb
dec
fs
cmp
mov
sti
add
xorl
pop
clc
fistl
aam
lahf
add
iret
mov
adc
leave
adc
out
jle
or
ja
subb
cltd
sbb
jo
add
adcb
adc
or
das
and
sahf
cmp
ret
inc
cld
jmp
inc
std
das
jp
add
cmp
mov
clc
imul
push
prefetch
xchg
add
mov
testb
js
dec
inc
push
pop
das
sub
fwait
cmc
or
sarb
cmpl
and
loop
subl
jb
pop
jge
mov
fs
mov
push
sbb
enter
out
shlb
or
mov
inc
jge
push
mov
mov
pop
ja
or
push
cmpsb
ss
add
sub
pop
popl
xorl
std
or
add
repz
push
sahf
inc
ja
mov
loope
fidivl
filds
add
jmp
into
inc
mov
or
add
sti
leave
shl
add
popf
or
mov
mov
pop
push
push
dec
daa
mov
fs
jge
imul
push
not
xor
sar
dec
sahf
add
add
sub
out
push
inc
mov
sahf
loopne
and
adc
sub
aad
and
out
add
push
fs
gs
std
inc
call
cmp
insb
jp
pop
sbb
pop
orb
xorl
bound
cmc
mov
jp
mov
push
sbb
mov
pop
call
pushf
or
add
or
mov
pop
sub
or
adc
jae
or
or
cmp
dec
push
shlb
xor
add
mov
mov
mov
pusha
mov
push
sub
pusha
add
mov
sub
addl
sbb
ror
clc
insb
jno
sbb
test
pusha
rol
add
sbbb
or
add
fisttps
adc
add
jo
stos
mov
push
movsb
add
fwait
pop
mov
decl
cld
xchg
and
push
mov
adcb
xor
lods
and
mov
ds
and
sbbl
addr16
ret
pop
repnz
cltd
imul
in
das
repz
lret
dec
popa
iret
add
xor
mov
fdivrs
mov
cmpb
add
or
adc
pusha
xchg
and
in
and
sbb
mov
outsb
jg
adc
jmp
lods
test
lret
pop
mov
sub
int3
or
and
add
pop
jp
jb
in
sbb
or
xor
sbb
sbb
sbb
mov
add
add
mov
xchg
mov
jge
sarb
nop
inc
cmp
sub
push
inc
push
xchg
jp
call
mov
in
mov
cwtl
and
or
addl
add
cmc
and
enter
pusha
and
sbb
mov
aam
mov
rcr
and
add
sub
push
shl
xor
test
lret
insl
adc
push
int3
mov
sub
hlt
cmp
xchg
jbe
mov
outsb
das
mov
ja
add
out
sbb
gs
jle
add
out
fcomps
xor
sbb
pop
push
mov
out
jo
add
fbld
aas
popa
aad
rorb
jmp
dec
in
add
pushf
sbb
clc
adc
xchg
nop
or
mov
xchg
mov
sbb
loopne
or
sbb
nop
test
in
out
adc
lahf
lcall
movsb
push
mov
test
jge
cmpl
jg
insl
adc
mov
xchg
inc
aas
inc
popf
xchg
and
sbb
cmp
scas
add
pop
ljmp
mov
imul
sbb
dec
and
inc
mov
xchg
or
int
and
add
mov
sahf
nop
mov
or
xor
into
jno
in
rcrl
sbb
push
lcall
repz
adcl
sbb
repnz
jg
hlt
js
cwtl
insb
pop
mov
cwtl
cli
shrb
jle
and
xor
sub
lods
dec
loope
into
pop
fdivrs
push
add
mov
cwtl
lods
xchg
roll
push
cltd
lock
jmp
push
jno
add
movsl
mov
jl
orb
or
movsb
adc
jne
ljmp
dec
push
lock
iret
or
sub
out
push
mov
clts
adc
lahf
loopne
push
andb
jl
scas
push
in
and
xor
xor
add
arpl
push
or
inc
mov
add
dec
mov
adc
out
inc
add
inc
std
push
add
divl
cmpl
stos
les
adc
ja
cmpsb
add
inc
stos
popa
punpckldq
dec
ss
addl
xor
leave
mov
fs
pusha
xor
ljmp
jge
les
push
jne
cwtl
and
cmpsb
mov
mov
add
mov
fildll
loopne
ret
mov
repz
les
test
jmp
push
popa
mov
sbb
aas
mov
cmc
ljmp
and
mov
dec
mov
in
add
fcompl
xchg
push
or
outsb
xor
addb
add
call
push
push
addb
out
add
iret
pusha
add
adc
mulb
sti
inc
mov
nop
in
add
and
add
addl
jge
inc
and
imul
sbb
movsb
out
mov
cwtl
pusha
dec
loopne
and
aas
cmp
sbb
movb
icebp
aad
xor
imul
fistpl
xor
mov
out
rcrl
sbb
xchg
inc
loope
js
adcl
xchg
add
add
jo
or
aam
push
add
jno
jmpw
mov
adc
mov
addr16
in
cmpl
xchg
push
aad
lret
adc
dec
pop
xchg
sbb
scas
dec
push
jmp
xor
std
test
pusha
add
push
mov
jae
mov
or
lock
mov
aas
call
inc
sub
out
and
jnp
adc
testb
inc
mov
or
or
popa
lods
add
ds
or
shlb
mov
scas
and
sbb
sbb
subl
push
in
add
ret
jg
movsb
notl
aaa
mov
pop
mov
enter
xor
shl
and
sbb
mov
sarl
mov
cmpsl
pushf
inc
mov
adc
int
push
jo
loopne
movb
dec
loop
pop
std
and
leave
mov
sbb
or
in
orl
xor
outsl
xchg
mov
sub
or
sbb
dec
inc
sbb
pusha
add
push
mov
std
inc
notl
test
or
inc
loop
sub
mov
add
dec
enter
clc
add
mov
push
mov
loopne
mov
sub
pushf
cwtl
test
fisttps
cmp
nop
sub
les
daa
ret
mov
imul
sub
xchg
rol
cmpsb
outsb
pop
cmp
mov
push
test
movsb
add
pop
fsts
mov
or
std
lea
and
out
pop
flds
pop
cli
into
adc
pop
add
cwtl
mov
or
sbb
dec
out
xor
in
mov
mov
pop
clc
insb
mov
jnp
add
mov
adc
jno
mov
push
push
popf
lock
les
imul
adc
push
in
cmpsb
nop
push
push
mov
out
adc
xchg
cwtl
push
lea
and
nop
mov
js
orb
inc
hlt
mov
jnp
add
fwait
gs
fnstenv
jmp
adc
mov
add
cmp
jp
sub
ret
cmpl
outsl
adc
mov
cmp
imul
iret
out
fcmovnb
pusha
xor
xchg
pop
filds
push
jmp
mov
add
jb
inc
mov
cli
inc
mov
inc
shll
adc
and
loope
pushf
adc
or
testb
loope
xchg
in
add
jbe
fs
movsb
out
test
stc
sti
jnp
movntq
mov
sbbl
add
mov
jb
push
fwait
call
mov
and
adc
jmp
xchg
mov
jb
or
xchg
mov
lock
jmp
xor
test
jno
mov
rclb
mov
pop
aam
rcrl
pop
lods
ljmp
out
xor
and
jle
pop
add
stos
faddl
or
or
lahf
loopne
add
rcll
js
dec
adcl
adc
add
mov
nop
js
insl
adc
push
lods
loope
mov
icebp
jl
mov
push
cwtl
rclb
mov
and
cwtl
mov
out
and
daa
or
push
sub
mov
lahf
push
push
or
dec
cmp
add
inc
mov
mov
mov
enter
sub
push
cmc
daa
add
loopne
lea
cmp
sbb
add
mov
in
scas
cwtl
lock
adc
les
xchg
mov
cmpsl
lret
pushf
add
lock
fsubp
mov
mov
xor
pop
jbe
xor
push
sub
rcll
sti
dec
pop
xchg
or
fs
je
mov
xor
pusha
adc
mov
jl
and
adc
add
fwait
icebp
ret
leave
fs
push
sbb
sub
pop
add
sbb
jmp
or
cli
mov
or
mov
into
dec
in
and
addr16
push
adc
stc
roll
les
rorl
pop
inc
repz
andb
ret
mov
enter
movq
add
mov
cltd
mov
inc
in
mov
push
and
fstl
add
dec
out
add
xor
pop
ss
js
in
xor
mov
jle
cmp
add
addr16
or
fnstsw
and
jb
sub
or
nop
xchg
inc
mov
scas
aaa
or
xchg
cld
test
mov
or
adc
shrb
aam
mov
aad
pop
pop
hlt
xchg
mov
pop
fldl
ljmp
sub
and
out
jmp
push
add
imul
rorb
aad
mov
xchg
add
or
ljmp
and
push
gs
faddl
sbb
scas
jge
shr
dec
pop
test
or
xchg
mov
add
iretw
or
lcall
pop
or
add
inc
lret
es
call
sbb
movsb
xor
cltd
sbb
loop
add
mov
or
jg
mov
aas
add
jle
es
je
mov
js
sbb
pushf
ss
jno
cmc
or
movsb
jp
or
fadds
mov
test
sarl
mov
lret
sbb
testb
xchg
arpl
or
lock
pusha
imul
add
and
in
fcoml
lea
jo
push
call
push
dec
mov
insl
add
and
mov
xor
aas
insb
mov
imul
add
sbb
add
jns
pop
xor
add
pop
push
mov
inc
sbb
cmp
std
lahf
add
cmpsl
rolb
mov
mov
test
adc
sbbl
ds
cmpsl
testb
mov
mov
add
and
xchg
outsb
add
stc
inc
movsb
cmpsb
lcall
outsl
mov
mov
mov
xchg
push
xlat
cmp
iret
movsb
mov
movsb
lock
dec
sub
cwtl
push
mov
push
jo
or
aam
leave
or
sub
mov
ja
xor
push
bound
push
mov
jnp
lock
fistpll
pushf
or
inc
mov
xor
adc
dec
es
cmpsb
push
ffreep
or
sbb
jno
fdivrp
mov
les
pop
leave
adc
and
mov
loop
aas
jo
and
and
hlt
add
jnp
es
fistps
jo
mov
decb
mov
or
ret
jo
cmp
inc
pop
dec
mov
add
xor
cmp
aam
dec
add
out
sysexit
hlt
popf
bound
sbb
or
ja
aam
sub
scas
mov
dec
sub
sbb
fnstenv
in
mov
pop
mov
mov
jbe
cpuid
mov
sub
xchg
loop
cmpsl
fiadds
xor
or
and
jno
sbb
mov
jg
mov
fadds
das
sub
sbb
test
cmpsl
xor
sahf
mov
je
stos
add
xchg
icebp
test
add
and
ljmp
sub
dec
lods
adc
sub
inc
outsb
sub
sbb
addr16
mov
movsl
add
or
mov
cmp
inc
push
in
jnp
sub
add
sar
dec
inc
jns
adc
addb
mov
push
call
repnz
adc
adc
ret
ljmp
daa
test
add
jns
jno
sbb
stos
or
xorb
mov
out
cld
add
jl
inc
and
xchg
icebp
aam
pop
jne
lock
add
or
cmp
in
mov
insb
or
dec
loopne
mov
dec
imul
xchg
cmp
loopne
mov
inc
xchg
sbb
adc
lret
mov
and
add
outsl
push
sti
aad
xchg
inc
add
fdivrl
mov
lds
stc
repnz
pop
or
cld
add
mov
fisttps
xchg
cld
pusha
push
js
aaa
mov
xor
jno
mov
fcomps
popa
movsb
adcb
mov
addr16
adc
lcall
jle
cmpsb
and
and
out
pusha
dec
cmpsb
dec
iret
mov
addb
fistpl
sbb
inc
enter
scas
xor
sub
out
xlat
pop
mov
inc
jmp
pop
js
mov
lret
int3
jns
pushf
sbb
inc
jl
pop
mov
push
mov
or
fisttps
pop
and
jl
arpl
push
leave
outsb
xchg
mov
add
cmp
mov
int
mov
add
lock
jae
mov
cmpsb
loopne
or
or
mov
xor
popa
add
xor
lea
mov
and
push
pusha
cmp
mov
inc
hlt
call
movsl
rcr
sub
mov
aam
das
jp
sar
pop
mov
call
pusha
je
jecxz
or
mov
mov
push
push
loop
add
cmpsl
cmpsb
clc
pop
imul
in
das
gs
add
fwait
add
xor
xchg
outsb
mov
rolb
dec
dec
subl
sti
or
inc
aam
mov
leave
pop
pop
add
fwait
sbb
aad
jno
cmp
mov
mov
rol
or
sarl
and
gs
cwtl
jo
mov
push
adcb
add
idiv
test
in
das
xor
loopne,pn
xchg
cmc
and
xchg
or
shl
pusha
pop
mov
movl
sbb
inc
jge
add
jnp
nop
repnz
push
jb
jmp
jno
aad
mov
jno
cmp
mov
sarb
adc
pusha
pop
inc
mov
dec
je
fadds
nop
mov
fimull
inc
rorl
cwtl
lds
and
adc
nop
shll
mov
push
out
sbb
add
in
movl
movsb
jecxz
push
mov
push
enter
adcb
adc
add
in
ror
mov
pop
fcomps
push
and
xchg
fwait
addb
mov
mov
pop
cmc
fistl
xor
pop
mov
sbb
jo
add
jnp
mov
clc
rolb
mov
les
or
push
add
and
call
mov
mov
xchg
in
pop
enter
jmp
js
lods
jo
cli
xor
popa
adc
adc
adc
push
or
cwtl
enter
outsb
sbb
popf
and
scas
add
push
movsb
rcl
add
inc
lock
rol
mov
pusha
mov
jno
cmpsl
pop
pop
shrb
sbb
adc
jl
sbb
add
les
int3
xor
test
cmpb
fimuls
or
mov
clc
push
arpl
add
testb
imul
call
xor
adc
dec
call
leave
add
or
sahf
mov
inc
and
or
loop
rol
lods
insb
jbe
in
lea
jae
fdivrs
out
or
push
cmp
popf
xchg
ljmp
xor
add
repz
push
test
movsb
push
in
aam
int3
test
fisubs
inc
lods
or
or
xorb
and
mov
bound
add
loope
xor
out
dec
pushf
mov
sar
or
or
in
add
dec
mov
shrb
call
pop
pop
inc
push
shl
or
stc
and
clc
scas
sub
ret
xor
sbb
sar
dec
adc
pop
inc
xchg
add
or
test
push
shrb
pusha
out
jno
add
xor
inc
nop
shl
add
int
pusha
lods
cmpb
aam
push
adc
dec
mov
push
add
mov
ljmp
push
and
add
mov
js
fs
jmp
rcll
lock
xorb
aaa
inc
add
pusha
mov
xabort
xchg
mov
sub
add
lcall
les
nop
popa
addr16
mov
clc
dec
adc
mov
inc
pop
dec
gs
jns
add
mov
cmp
jge
xor
das
add
pop
or
add
nop
pushf
shll
mov
xchg
adc
xchg
cmp
loop
aaa
sub
push
sbb
ja
cmp
and
mov
mov
movl
imul
xor
stos
or
jns
add
fs
dec
and
cld
lods
add
aad
inc
mov
ljmp
mov
pop
ds
pop
or
lret
jg
sbb
clc
out
inc
add
fcmovne
insl
jae
push
pop
adc
pop
and
mov
dec
popa
xchg
add
or
mov
adc
mov
call
das
xchg
dec
jno
mov
fsubrl
je
add
cmp
leave
sbb
jp
adc
xchg
mov
pop
outsb
cs
adcb
lock
push
add
adc
je
in
stos
mov
add
mov
cs
fildl
in
in
popa
addr16
jo
xor
or
ja
mov
mov
inc
test
sub
out
insb
add
push
push
or
fmul
insb
mov
ds
mov
call
lock
add
mov
jns
xor
mov
mov
pop
aas
int3
shrl
mov
dec
pop
mov
clc
inc
mov
xchg
cld
sub
pusha
stc
pop
cmp
fucomp
push
jecxz
sbb
mov
or
mov
jl
and
cld
test
in
xchg
test
add
outsb
negb
and
stos
or
adc
xorb
test
shll
pop
enter
mov
add
jl
xor
mov
or
or
mov
nop
lods
popa
in
lret
cmp
call
sbb
and
popa
ret
mov
jge
adc
in
push
fbstp
mov
jmp
and
fsts
and
popa
out
push
add
add
mov
shlb
cmc
jmp
pushf
nop
add
pop
xchg
rol
sbb
mov
add
call
jmp
mov
add
dec
shrb
ljmp
movsl
push
addl
and
fisubl
nop
lds
add
ret
jbe
in
stos
sbb
fsubs
pop
sbb
fdiv
pop
out
pop
push
inc
adc
enter
mov
mov
stos
sub
jne
int3
ljmp
or
add
xor
nop
test
mov
xchg
lods
cli
jle
and
add
pop
nop
daa
adc
jg
pop
movl
mov
jp
add
pop
iret
adc
sbb
adc
jmp
inc
push
clc
pop
xor
pop
and
jp
and
aas
mov
pop
lock
dec
sbb
push
mov
addb
fs
rcll
lret
add
dec
xchg
mov
mov
mov
iret
icebp
fcoms
mov
addl
loop
das
jg
push
call
adc
test
sub
mov
fs
add
mov
xchg
add
xchg
icebp
int3
xor
mov
push
loopne
pop
pop
mov
or
cmp
xor
pop
adc
sti
sbb
inc
xchg
push
push
insl
nop
pushf
adc
shl
andl
ds
testl
and
out
add
jo
sbb
xor
sub
insl
js
and
jg
add
bound
adcl
repnz
icebp
gs
imul
into
adc
andb
mov
clc
addl
frstor
cmpsb
xor
mov
xor
mov
mov
push
fxch
or
js
adc
and
aas
flds
fisubrl
and
mov
movb
out
adc
add
mov
sbb
pop
cltd
jl
inc
inc
cmpsb
repz
inc
pop
mov
jecxz
jnp
in
xor
add
and
clc
ds
add
cltd
inc
mov
sbb
fwait
test
pusha
imul
dec
scas
cmp
push
movsb
jno
push
inc
rcrl
jb
push
in
sub
leave
iret
roll
ss
sub
test
cld
mov
adc
icebp
sub
pop
add
in
fistpl
or
lea
rcr
add
pop
mov
adc
jns
cmc
or
adc
jb
xor
xor
fs
add
daa
xchg
cmp
cmp
push
mov
lea
js
add
ljmp
jge
mov
push
rcr
in
in
mov
rolb
rolb
pusha
test
and
jp
or
lret
mov
mov
inc
pop
bound
and
xor
test
push
adcl
cmpsl
lret
dec
or
jl
xchg
xor
icebp
aaa
in
push
xor
and
inc
das
fs
add
cmp
cld
mov
adc
adc
sbb
lea
xor
out
outsl
clc
xor
sbb
sbbb
or
sbb
dec
pop
ficoml
stc
pusha
mov
mull
jns
dec
enter
mov
fsubrp
add
test
mov
add
notl
lret
shlb
jge
filds
sarb
mov
imull
or
push
and
inc
andb
inc
and
daa
push
mov
add
dec
mov
out
push
xchg
adc
dec
psubusw
adc
mov
mov
sub
test
test
mov
in
loopne
sub
jge
adc
push
mov
or
push
mov
push
fsubs
jle
adc
sub
rclb
mov
and
arpl
test
mov
pushf
das
jnp
xchg
add
mov
sar
push
loope
cmp
and
jno
popf
into
bound
xchg
movsl
add
enter
hlt
push
xchg
inc
call
and
ds
push
test
or
xor
pop
aam
pop
push
mov
fdivs
gs
add
fcmovb
addb
sub
clc
and
aad
or
shrb
lret
or
ss
shll
add
xor
cmp
lcall
cltd
xor
in
bound
ficomps
jae
popf
pop
add
mov
xor
mov
aam
lds
repnz
mov
sub
addr16
add
cmpl
jge
sbb
pop
jnp
jmp
pop
fs
cmpb
push
pusha
flds
jae
lods
add
mov
ds
clc
push
cmp
jne
sbb
adc
sub
sbb
psrlw
sbb
fs
lds
add
divb
and
mov
cmp
xchg
xor
sub
mov
jp
add
lds
push
test
and
inc
or
popf
scas
in
in
in
xorb
jne
jmp
cmpsl
cmp
sub
push
stos
xchg
rcrl
je
xchg
dec
roll
sbb
shlb
dec
push
pop
es
add
mov
out
data16
cmp
out
into
dec
mov
andb
mov
adc
cmp
pushf
jae
adc
into
inc
inc
pop
xchg
sbb
or
mov
clc
lods
jle,pt
stc
add
lods
ret
arpl
sub
popl
cmpsb
insl
nop
mov
add
and
rcr
or
sub
mov
cmp
pop
jge
aad
lret
sarb
sbb
dec
pushf
shlb
popa
push
or
cltd
mov
mov
in
cmp
mov
mov
mov
and
sub
lret
or
cmp
hlt
cmp
xlat
sti
jnp
mov
mov
sub
xor
inc
mov
xor
js
mov
mov
addr16
sbbl
cmpsb
pop
add
xor
js
and
insl
scas
int3
mov
adc
jns
cs
add
out
sbb
mov
or
mov
js
sub
add
add
fs
cmc
jns
dec
insl
jae
sub
das
sub
cmc
cmp
enter
sub
xor
fcoml
mov
inc
mov
pop
rolb
push
cmp
rcrl
call
lret
add
adc
and
and
ret
ja
add
dec
test
cmc
and
notl
xchg
dec
shlb
inc
addb
jl
or
fs
mov
jnp
loopnew
jne
mov
jns
and
push
jo
mov
add
xchg
imul
adc
movsb
mov
cmp
adc
dec
push
mov
seto
shrb
je
add
popa
lock
lods
fs
mov
les
gs
sarb
lods
pop
or
movsl
jns
adc
in
jmp
dec
add
inc
xor
mov
sti
push
fisttpl
add
jae
imul
outsl
pop
xchg
pop
clc
int
mov
sbb
mov
sub
or
test
cmc
test
add
and
xor
or
mov
xor
mov
dec
enter
pop
mov
pop
rorb
xlat
xchg
sbb
xchg
out
add
push
xor
sbb
add
xor
fdivp
inc
jecxz
nop
pop
add
loopne
jne
in
dec
cld
cmpsl
mov
inc
add
sarb
push
clc
and
rolb
inc
scas
mov
js
and
add
add
jnp
add
sbb
dec
push
cmpb
add
jecxz
in
fldl
and
sbb
stc
outsl
dec
add
dec
pop
in
pop
rcll
inc
ss
xor
cmpsl
cmc
cwtl
orb
sub
repnz
pushf
sbb
mov
add
rolb
push
imul
cmp
jae
es
and
jge
add
sbb
sbb
pop
incl
push
shll
mov
xor
popa
jnp
jmp
pop
inc
insb
adc
into
adc
sar
add
hlt
pop
jnp
add
mov
es
cmp
lea
dec
and
test
mov
in
mov
push
and
mov
jbe
fiadds
and
pop
xchg
ljmp
or
lock
inc
iret
adc
add
jo
jns
insl
push
das
nop
cmovnp
test
mov
jb
flds
add
movsl
xor
jnp
jp
pusha
pusha
or
aam
and
xor
es
out
fstps
orl
pop
insb
faddl
cmc
sti
outsb
dec
cmp
ret
xchg
and
add
in
add
sub
jge
inc
push
pop
dec
mov
imul
adc
and
add
in
xchg
hlt
jne
fdiv
cmp
push
insb
sub
jo
push
movsl
inc
pusha
add
jae
dec
in
mov
sbb
push
nop
imul
bound
pusha
push
out
xchg
lods
jbe
mov
es
sbbb
adc
or
jnp
insb
jg
mov
imull
ret
movss
push
add
lcall
in
push
pop
inc
push
sub
sbb
xchg
sbb
pusha
daa
or
xchg
sbb
orb
sub
les
andl
stos
pop
call
daa
add
out
or
sbb
test
jecxz
loopne
addr16
repnz
daa
mov
xor
adc
xchg
pop
sbbl
sbb
ret
xchg
push
shrl
lahf
and
push
or
psllw
push
rcll
sarb
aaa
adcl
les
push
adc
mov
bndstx
mov
int3
shll
insb
pop
mov
add
mov
rsqrtps
imul
add
adc
push
test
mov
or
xor
aam
push
mov
push
push
inc
xchg
rcrb
shll
push
inc
push
cmp
mov
arpl
shlb
dec
push
pushl
push
adc
stc
pop
add
movsl
mov
nop
mov
fldcw
and
ds
mov
cmc
inc
add
sbb
and
mov
cwtl
xchg
fcoms
xor
push
xor
xchg
mov
ljmp
mov
cmp
call
cmp
int3
push
lods
fstps
popa
pop
lahf
xchg
jae
aaa
add
lcall
xadd
bound
xorl
aas
xchg
inc
sub
call
dec
push
adc
mov
xor
lcall
mov
add
or
inc
add
mov
dec
insl
jb
adc
scas
lea
fisttpl
les
test
cmp
dec
mov
pop
dec
push
xor
xchg
adc
mov
fistl
mov
jp
push
mov
loope
and
ret
bound
lret
sbb
push
adc
inc
dec
insb
lret
mov
add
fiadds
sbb
adcb
xor
add
sbb
ret
cltd
jge
mov
add
or
push
test
push
push
and
and
sbb
std
mov
sbb
mov
loope
shl
or
aaa
xchg
and
rorl
adc
pop
lock
pop
loope
dec
sbb
add
sbb
push
cld
or
cmp
fmull
add
mov
scas
pop
xor
push
or
enter
and
hlt
dec
cmc
cmpxchg
in
repnz
js
mov
lods
or
mov
jo
dec
inc
pusha
and
call
and
sbb
push
repz
mov
aaa
fildl
repnz
out
xor
cltd
add
mov
pusha
or
fimuls
push
js
pop
aas
lea
mov
repnz
and
mov
push
add
notb
xchg
cmp
xor
int
add
mov
dec
decl
scas
les
push
push
inc
in
pop
mov
stos
add
or
sub
cltd
pop
or
xorb
sar
cmp
rolb
mov
xchg
daa
std
mov
mov
mov
mov
jmp
cmp
add
insl
mov
push
pop
ds
dec
jmp
inc
icebp
aas
xchg
mov
lods
or
xchg
sbb
pop
jb
mov
fwait
cld
add
cmpb
daa
jnp
pop
dec
pop
xchg
in
mov
loopne
in
mov
cli
push
imul
out
mov
call
inc
mov
add
popa
sbb
stos
fildll
jmp
mov
lock
call
jecxz
iret
rdtsc
cmp
inc
inc
mov
insb
repnz
xor
sub
push
ljmp
lea
jl
in
in
pop
out
inc
jp
hlt
les
ficomps
sahf
dec
jecxz
fists
dec
in
add
push
mov
pop
adc
fmul
sbb
outsb
lods
sahf
add
mov
pop
call
inc
imul
repz
hlt
inc
and
push
fcomp
daa
das
lret
jge
lds
mov
sbb
sbb
nop
stc
mov
cmpb
push
jmp
inc
mov
inc
fcoml
sub
sarb
and
aam
lahf
ds
and
sub
sti
das
cmp
add
fisttps
add
xchg
pop
sbb
iret
pop
inc
dec
data16
inc
add
cwtl
jae
enter
fbstp
adc
mov
ljmp
mov
call
addr16
mov
cmp
add
je
mov
inc
mov
fadds
or
mov
mov
xchg
inc
imul
jl
ds
mov
pop
jo
js
repz
test
enter
cltd
xor
lcall
dec
cli
inc
or
sbb
push
xor
rolb
add
add
fsubrs
sub
loop
add
sbb
push
mov
aaa
sbb
push
cmp
dec
js
mov
inc
sbb
test
call
rcrb
ljmp
xorb
lock
inc
sbb
pusha
mov
rol
es
and
rorb
add
movsb
adc
mov
mov
lods
rcrl
jno
sar
add
arpl
mov
xor
or
ficoms
outsl
test
dec
fdivrl
sub
inc
sbb
and
ds
push
cmp
stos
sbb
mov
adc
out
cmp
sbb
flds
add
pushf
aas
lahf
add
enter
mov
push
mov
push
test
test
iret
mov
sbb
adc
add
mov
mov
inc
mov
outsl
push
jge
iret
push
sub
cs
inc
mov
cmp
and
in
or
in
inc
cmp
mov
push
hlt
icebp
mov
xchg
loopne
movsl
inc
sbb
lcall
call
arpl
mov
or
addr16
aam
or
mov
xor
sbb
addb
fwait
add
cld
xchg
xchg
and
mov
push
stos
movsb
add
inc
inc
aas
mov
dec
add
repz
ror
and
cli
or
mov
mov
shlb
dec
add
test
out
mov
shr
push
jbe
pop
push
push
and
lods
popa
push
inc
jo
mov
xor
lcall
sub
mov
ds
ficoml
mov
and
or
jp
add
out
or
push
xor
xchg
test
inc
and
push
push
or
ficomps
popa
pushf
fwait
pusha
loopne
inc
adc
inc
sbb
add
mov
xchg
sub
adc
mov
or
mov
or
pop
push
jno
xor
and
pop
mov
test
xchg
dec
es
js
aas
ret
adc
adc
mov
jo
push
lcall
loopne
pusha
and
jmp
xor
sti
add
iret
loope
int3
test
sub
adc
xor
cmp
or
mov
movb
mov
add
push
andb
jecxz
std
push
roll
sub
mov
inc
js
adc
mov
push
scas
pushf
mov
inc
pop
orb
aam
mov
inc
add
movsl
jae
jns
add
mov
mov
pusha
cmp
jg
out
sub
int3
shll
fcmovnu
andb
daa
test
cmpsb
lods
adc
sahf
ret
xchg
sub
pop
pop
clc
sbb
dec
not
movsb
loope
lcall
mov
add
hlt
push
aam
jno
or
xchg
cmp
pop
sub
les
adc
ror
xchg
jbe
outsl
mov
stos
shl
subb
adc
xor
and
leave
add
popf
pop
inc
or
jne
mov
test
cmp
inc
or
hlt
popa
mov
sarb
push
shll
push
pop
dec
inc
rclb
sbb
sub
sub
in
mov
jne
call
addl
sbb
enter
ds
lret
xor
sti
cmp
cmp
orb
stos
mov
pusha
add
dec
xor
mov
add
xchg
adc
push
cmpsl
pop
xlat
add
xchg
or
cmpb
adc
fs
and
aas
xchg
fisttpll
mov
adc
inc
cmp
loopne
stc
gs
shrl
hlt
fs
inc
xor
lea
push
imul
in
cwtl
push
cmp
mov
enter
inc
inc
enter
cmp
add
fldl
pmulhw
xchg
sbb
testl
sbb
sbb
ljmp
enter
in
add
mov
adc
xchg
adc
dec
sbb
idivl
sbb
xor
into
lds
in
xor
movsb
push
xchg
push
pushf
and
dec
hlt
mov
xor
sbb
test
shll
psrlw
mov
mov
and
pop
jno
mov
rcrb
sub
sub
out
sbb
add
mov
mov
cmp
xchg
add
mov
shll
lds
insl
rorb
or
pusha
or
mov
dec
add
xor
lret
rcrl
add
and
cmp
sub
push
cld
inc
hlt
mov
shrb
sbb
lods
dec
xor
jns
sbb
sub
jne
inc
shl
outsl
add
xchg
test
les
pop
push
add
sbb
test
add
mov
pop
adcb
xchg
mov
icebp
roll
pusha
push
jo
arpl
cmpsb
adc
mov
js
sarb
jbe
stos
pusha
cmp
test
sbb
bound
adc
xor
or
imul
mov
jp
xchg
mov
pop
fs
iret
lea
jl
outsb
scas
and
sub
out
dec
ljmp
cmp
ljmp
pop
xor
add
pop
add
data16
loopne
push
push
scas
jge
cmpsl
push
lods
mov
enter
mov
andb
stos
aas
ret
lock
jns
in
lock
sahf
lods
sbb
adc
into
aam
sbbb
mov
sub
sbb
clc
push
cmp
push
inc
cmc
lcall
push
xor
add
jno
sahf
sti
adc
mov
adc
push
mov
mov
mov
loope
in
jno
pushf
rol
nop
je
add
cmp
mov
imul
push
add
loop
jmp
push
xchg
inc
addps
mov
xor
mov
adc
add
enter
xor
shl
ds
jne
clc
fwait
sub
xchg
mov
enter
push
inc
hlt
orb
inc
mov
or
push
xor
push
inc
stc
pusha
addr16
add
add
sub
mov
mov
out
loopne
push
loope
mov
adc
add
pushf
mov
or
or
mov
pop
push
pusha
scas
imul
xor
fs
mov
dec
inc
pop
mov
sub
mov
or
xor
test
or
rolb
cmpl
push
jmp
add
int3
mov
add
mov
sub
cltd
insb
sar
mov
sbb
rorb
ja
inc
les
mov
mov
pop
xor
mov
push
sbb
cwtl
cmp
jecxz
inc
jnp
add
jb
and
hlt
and
jge
add
mov
mov
mov
adc
push
jbe
pop
sbb
lds
dec
sbb
xor
add
rcll
ljmp
outsb
in
add
sub
int3
icebp
mov
stc
jg
mov
add
mov
lret
pop
dec
mov
push
sub
xor
mov
pop
ja
out
push
xchg
nop
mov
sbb
mov
sub
bound
cmp
and
mov
add
mul
jo
pop
jmp
inc
jo
bound
adc
das
mov
enter
stos
push
and
sub
icebp
ja
xor
aaa
jne
and
out
adcb
mov
cwtl
jnp
add
fnstcw
out
inc
mov
into
add
mov
push
cwtl
fwait
cmp
fucom
cmp
lea
lods
fmull
pop
inc
jmp
test
cmp
lcall
cmp
mov
xorb
add
int3
add
ret
fmuls
add
stos
sbb
mov
dec
add
jmp
push
setne
cmp
shlb
xchg
cmp
jl
int3
mov
test
cmp
adc
test
inc
shll
sub
int3
dec
cltd
add
xchg
jge
fiaddl
pop
jnp
gs
or
sub
mov
xor
add
mov
sub
or
and
icebp
xor
orb
adc
enter
loopne
pusha
jnp
xchg
enter
inc
nop
jo
popa
mov
add
cmp
mov
jo
clc
pop
lods
aad
mov
sbb
push
xor
mov
or
xchg
mov
sbbl
xor
stos
jmp
mov
add
xor
decl
cmpsl
push
filds
dec
inc
add
fidivl
xchg
adc
sub
inc
repnz
jne
and
enter
cmp
or
pop
jmp
mov
fsubrl
addr16
out
aaa
in
sub
pusha
lods
jnp
add
mov
add
loopne
and
inc
fs
dec
push
cwtl
mov
sbb
or
xlat
insl
add
sahf
push
mov
sub
sbb
mov
daa
lods
mov
pop
scas
xchg
daa
cmpsl
ss
movsl
int
les
adc
bound
stc
add
lcall
pop
xor
xor
leave
les
inc
mov
push
mov
sti
ret
outsl
int3
in
xchg
sub
xchg
mov
push
add
sub
shll
cmp
push
cmp
and
pushf
dec
pop
aaa
sbb
js
xor
add
and
imul
and
ja
sbb
jge
push
adc
hlt
add
sti
mov
add
mov
mov
testb
add
inc
or
rclb
in
gs
leave
and
jge
pop
fwait
stos
dec
jg
mov
aas
xchg
xor
lods
inc
sbb
mov
mov
push
pop
cmp
mov
jnp
jo
in
sahf
cmp
mov
out
roll
lods
out
mov
je
and
mov
shrb
mov
or
hlt
cmp
ficoml
pusha
inc
aas
and
add
ret
dec
lahf
xor
cli
add
cltd
hlt
add
stos
fcomip
and
or
lock
mov
pusha
in
rolb
add
clc
hlt
les
mov
loop
neg
rcrb
scas
sub
jmp
addl
or
push
mov
xor
jle
int3
pop
inc
cmpsb
jb
sarl
insb
mov
mov
lock
rorb
sub
in
testl
add
pusha
xchg
flds
arpl
sbb
insb
adc
jo
mov
jp
int
pusha
rsqrtps
or
loopne
js
sbb
xor
cmp
rolb
push
int3
add
xchg
aaa
xchg
ljmp
add
cmp
pop
ss
xor
sbb
xchg
pop
sbb
ljmp
mov
push
cmp
lea
jb
xor
push
xlat
xchg
int3
movsl
orl
dec
xlat
fadd
push
shrb
popf
add
mov
loope
adc
nop
lcall
aas
repz
add
ja
sbb
imul
cmp
and
sbb
sub
sub
stos
xor
adc
sbb
add
adc
adc
add
in
daa
scas
int3
and
lcall
dec
add
inc
push
push
cmpsb
mov
xor
add
sbb
sub
aas
cmp
paddq
mov
dec
inc
test
popa
aaa
add
hlt
pop
mov
neg
adc
push
sbb
fs
arpl
pop
dec
push
adc
rcrb
test
add
btr
cmpsl
fdivrs
mov
and
jne
xchg
das
mov
jle
hlt
in
push
cwtl
jo
and
test
adc
or
and
test
pop
mov
or
add
icebp
xor
ret
add
sbb
add
mov
push
roll
rolb
add
inc
mov
push
cwtl
sbb
pop
inc
fstpt
pop
lcall
add
mov
inc
cmp
in
pop
add
pop
adc
add
jle
push
insb
push
fcoms
es
and
shlb
mov
xor
push
pusha
add
jp
lods
out
hlt
adc
add
cli
jns
push
add
hlt
adc
ds
loope
sub
pop
add
jns
lods
push
gs
add
cmp
movsb
int3
mov
test
fdivrp
inc
jbe
nop
ffreep
lods
add
aas
loope
ds
push
mov
or
inc
xchg
rolb
and
adc
mov
arpl
inc
test
mov
add
je
loope
jg
add
les
cmp
jp
je
xchg
push
jg
sbb
aas
mov
cmp
jne
xchg
dec
jecxz
pop
mov
sbb
orb
mov
cmp
loopne
aas
dec
mov
je
or
test
mov
rcrb
adc
ja
movsb
add
test
pushf
pop
pop
movb
sbb
jbe
sbb
or
or
inc
les
cmp
xlat
fadds
ljmp
int3
pusha
mov
out
inc
pusha
xor
fmul
insl
push
xchg
add
icebp
jno
sti
pusha
adc
aaa
pop
add
lahf
push
cmp
adc
push
call
movntq
out
push
jmp
repz
xchg
sub
adc
dec
or
sub
ret
enter
idiv
pop
pop
jne
in
mov
xchg
pop
push
sub
fdivs
addr16
test
pop
call
add
stos
pushf
sub
add
dec
cld
dec
mov
int3
push
in
out
add
mov
ret
pusha
mov
inc
test
jmp
push
dec
in
add
aaa
mov
jo
mov
cmc
add
cmp
mov
in
das
andb
vmread
iret
loop
mov
or
push
movl
mov
adc
call
inc
jo
dec
pushf
sbb
in
insb
or
imul
dec
cli
lea
and
mov
or
xor
rcrb
jp
jp
add
xor
push
incl
icebp
add
mov
sub
dec
add
dec
xchg
sbb
adc
andnps
mov
loop
xor
push
xor
or
int3
or
add
add
imul
jns
cmp
dec
ror
dec
cmp
lret
inc
add
xlat
lock
pusha
add
test
in
out
sub
lds
arpl
add
inc
mov
in
icebp
inc
and
adc
push
adc
enter
lcall
pop
pop
pop
rorb
fwait
pop
mov
add
jecxz
cwtl
jmp
pop
adc
push
rcrb
imul
out
dec
leave
or
scas
fdivrs
adc
call
cs
enter
movsl
in
xor
push
loopne
mov
aam
js
mov
cs
dec
in
and
mov
mov
test
or
sarl
lods
pushf
cli
and
stos
jl
dec
mov
or
mov
and
xchg
mov
push
push
sub
and
js
sub
andb
push
add
iret
sti
or
faddl
or
push
mov
cmp
cld
shl
and
adc
iret
adc
or
sub
mov
xchg
mov
mov
or
movsb
dec
inc
rorb
lods
or
pushf
imul
adc
or
xor
pusha
pop
xor
int
or
in
pusha
out
mov
add
int3
mov
mov
mov
xchg
xor
add
lcall
out
cs
jbe
test
lret
ret
lahf
test
push
mov
sbb
in
lds
push
icebp
sub
cmp
loope
sar
add
jno
cwtl
jno
mov
jp
test
mov
cmc
in
pushl
stc
sub
adc
or
sub
mov
loopne
jg
jmp
jbe
test
in
test
mov
int
add
push
int3
andb
aad
add
mov
push
add
push
ficoms
mov
ret
addr16
dec
mov
inc
jge
mov
ret
dec
or
mov
mov
push
dec
jl
xor
lea
push
push
loop
sbb
leave
stos
rcrl
mov
nop
push
loop
pop
push
repnz
rcrl
mov
dec
or
xchg
sti
push
pop
adc
adcl
mov
aaa
or
inc
inc
pusha
pusha
jnp
clflush
cmp
pop
pop
rcrb
xlat
push
mov
fs
rcll
fdivs
mov
xor
mov
push
inc
loopne
fstp
cmp
or
sub
push
mov
push
sub
sbb
icebp
outsb
adc
inc
cmp
add
pop
mov
jnp
popa
add
addl
repnz
test
cmp
enter
loop
xchg
jl
adc
fwait
mov
iret
adc
add
cmp
cwtl
dec
push
daa
lret
loope
pusha
add
jbe
pusha
push
testl
xchg
cmp
lcall
aas
pop
jo
sub
lods
pusha
push
add
pop
add
iret
xchg
and
adc
sub
cwtl
cli
mov
mov
push
push
adc
in
jae
cmpsl
or
xor
dec
iret
mov
ret
daa
cmp
ret
enter
inc
adc
push
loopne
push
mov
rcll
imul
mov
nop
xor
mov
push
nop
and
loopne
mov
subb
pop
sub
jns
inc
xchg
outsl
enter
add
loopne
adc
mov
xchg
repnz
push
adcl
ja
xchg
cmp
mov
pop
call
shll
cli
icebp
sbb
and
mov
mov
fmull
xchg
jnp
repnz
sahf
cmp
out
xchg
push
push
call
in
cmpsl
pop
sub
jge
push
dec
hlt
mov
mov
mov
inc
jae
fcomip
dec
sub
int3
adc
in
inc
gs
lods
fmuls
sub
jg
aas
in
stc
cmp
cmpsl
add
loope
xchg
mov
sub
sub
addr16
call
outsl
ret
cmpsl
cmp
rolb
daa
popa
lahf
clc
lds
out
sti
cmp
adc
std
fstpt
lods
aaa
add
outsb
or
lret
movsb
cwtl
adc
and
dec
nop
and
or
in
mov
jge
xchg
adc
dec
pop
repz
cmp
adc
sub
and
adc
xchg
ret
mov
add
jne
sbb
popa
mov
or
mov
mov
push
or
mov
pop
inc
mov
bound
sub
adc
aas
xchg
xchg
stos
data16
sbb
lods
scas
fisttpll
rcrl
adc
aam
or
cmpsb
cmp
cmpsl
or
xchg
gs
dec
pusha
leave
add
add
xor
mov
test
lahf
stos
push
pop
aam
or
lcall
mov
cmp
xchg
jbe
mov
test
mov
cltd
fnstcw
xchg
push
call
cwtl
xchg
add
cli
daa
lds
dec
or
leave
and
push
pop
sbb
arpl
lods
in
mov
subb
mov
inc
add
call
sub
rolb
mov
xchg
cwtl
push
roll
mov
mov
xchg
aam
and
sahf
add
cmp
jo
mov
add
mov
scas
mov
int3
test
addr16
add
mov
jecxz
test
outsb
pushf
lock
jg
clc
and
mov
or
popa
faddl
xchg
cmovg
out
scas
jb
cmpl
imul
movsb
stos
sub
adc
les
cmp
insb
loope
xchg
push
mov
movl
in
jl
pusha
std
flds
div
sub
insl
xor
mov
xchg
in
fs
cmp
cld
push
in
fistps
mov
shrb
leave
add
sbbl
push
addr16
push
add
jae
pop
mov
mov
sub
repnz
mov
xor
jge
adc
jmp
push
out
mov
cld
dec
sbb
pop
insb
inc
cmp
scas
xchg
ja
in
call
sub
and
lcall
sbb
add
fcmovb
imul
push
or
rclb
mov
test
cmpb
and
mov
mov
xor
cmc
add
and
cli
adc
inc
sbb
mov
sub
inc
xor
and
add
mov
stos
xchg
or
popf
lock
lret
and
enter
rcll
xchg
aaa
adc
add
mov
and
push
sbb
mov
mov
or
inc
pop
or
and
ds
fs
push
sbb
lock
inc
pusha
add
sbb
mov
aas
and
scas
cmp
movl
pop
roll
je
mov
inc
push
mov
lods
test
popa
pop
loop
jmp
mov
cld
insl
cs
add
sti
pop
inc
and
push
dec
fidivrs
xchg
xor
fimuls
pop
mov
cmc
adc
push
jne
or
les
add
fcomi
das
test
hlt
mov
sbb
imul
add
es
and
mov
js
ja
dec
sti
cmp
push
mov
mov
add
dec
cmpsb
fdivl
fadd
mov
stos
dec
or
xchg
sub
mov
mov
adc
sbb
lods
nop
in
jb
jg
push
xor
xor
and
mov
mov
lock
xor
mov
add
cld
mov
and
adc
jbe
xchg
cli
dec
sti
cmp
es
and
mov
push
cli
insl
mov
sbb
xchg
pop
jae
incl
sbb
add
mov
jns
inc
sarl
movsb
push
mov
loope
imul
test
or
stos
sub
lds
jl
addb
and
sbb
jle
mov
lock
mov
das
aaa
test
sarl
pop
sbb
insb
aam
dec
add
sub
leave
add
mov
jp
adc
sub
subl
mov
adc
add
pop
lcall
sub
das
cmp
fwait
push
sub
inc
pop
test
cmp
inc
jbe
lret
cmp
inc
jnp
stos
jns
xchg
inc
jp
outsl
cmp
add
jo
or
push
inc
rorb
and
cmp
lods
and
add
lret
roll
xor
pop
add
sahf
cmc
adc
outsb
test
or
xor
add
lahf
sub
push
inc
cmp
mov
pop
imul
pop
and
cmp
je
dec
aas
mov
jmp
fbstp
and
push
pop
and
mov
sub
cmp
mov
jae
mov
sub
mov
and
fdiv
mov
mov
jne
or
movb
sbb
insl
mov
cmp
sbb
mov
dec
insb
stos
jbe
or
out
dec
stc
cwtl
add
jbe
pop
cmp
dec
mov
loopne
sub
mov
or
and
pusha
xchg
push
add
movsl
pavgw
outsb
or
mov
stc
push
jl
pop
xor
das
aas
push
jmp
inc
pop
or
adc
mov
mov
or
inc
pop
inc
jo
jecxz
shl
test
mov
faddl
add
daa
mov
or
add
mov
movsl
push
mov
mov
insb
pop
push
shr
js
pusha
stc
fnstsw
jp
jle
gs
jecxz
cmpsl
fldln2
aam
sub
out
nop
js
mov
sahf
xor
aam
movsb
fcom
or
imul
add
scas
in
neg
daa
mov
jnp
xor
aaa
cmp
pop
and
add
xchg
lahf
mov
and
pop
pusha
push
and
addb
cld
shrb
insl
daa
jmp
mov
sbb
mov
sbb
dec
add
xchg
addl
mov
and
pushf
inc
adc
scas
daa
cltd
and
and
popf
add
inc
jae
nop
mov
sub
mov
cwtl
xchg
pop
sub
mov
inc
ret
stc
xchg
push
loope
xor
mov
push
lds
dec
add
mov
xchg
mov
ja
add
mov
sub
inc
xchg
pop
test
mov
inc
xlat
xchg
adc
ja
sbb
scas
cmp
js
add
outsl
fcomps
sbb
sbb
int
loopne
sbb
fadds
iret
jp
xchg
inc
xchg
add
add
rorb
jae
call
adc
mov
jp
push
or
push
xor
bound
push
xchg
ss
sub
mov
or
hlt
jl
js
mov
insb
clc
in
mov
mov
xor
inc
inc
lods
popf
xchg
sahf
inc
or
jne
fidivs
jmp
cltd
adc
sbb
pop
aam
repnz
adc
or
adc
sub
xor
mov
cmp
pop
jne
sub
daa
ljmp
mov
add
pushf
jb
mov
ret
loopne,pt
xorb
lods
xor
ss
mov
test
add
and
push
cmp
rolb
aas
repz
addb
jg
jne
popf
cmp
test
aam
fdivs
lcall
movsb
add
or
dec
enter
xor
test
add
jl
inc
add
jb
outsl
arpl
pushf
test
in
daa
out
inc
mov
and
into
cwtl
mov
test
cmp
enter
dec
jne
mov
pop
in
mov
dec
xchg
subl
inc
add
and
in
sbbb
dec
rorb
or
fldl
test
add
in
mov
sbb
shll
dec
jbe
sti
xchg
mov
add
fidivrl
outsb
push
add
fwait
mov
outsl
fs
inc
lock
test
aas
inc
and
jnp
push
push
leave
xchg
sbb
inc
shlb
push
pop
dec
adc
repnz
xor
xchg
or
sub
shrb
or
xor
sbb
cltd
adc
insb
add
fisubl
inc
mov
and
pop
sahf
sub
sbb
data16
adc
push
and
aam
fneni(8087
xorb
loopne
or
jno
sub
inc
cmpb
scas
and
scas
imul
push
mov
ljmp
out
add
or
ret
call
or
adc
aaa
add
xor
xor
out
jmp
xchg
jnp
add
inc
xchg
cmp
je
and
mov
test
pop
dec
xor
mov
rcr
mov
push
das
xchg
insb
clc
fs
test
pop
push
aaa
jo
testl
je
sub
repnz
cmpsb
in
mov
mov
repz
mov
movsb
nop
mov
mov
adc
pop
xchg
fnop
mov
sbb
inc
and
popf
xor
mov
test
scas
cmp
mov
jb
inc
adc
movq
xor
cmovnp
dec
mov
mov
cmp
add
mov
sahf
pop
push
js
mov
imul
push
and
xchg
add
mov
dec
xor
cld
in
or
mov
js
cmc
push
inc
mov
and
or
jns
leave
mov
add
add
adc
dec
clc
mov
or
jecxz
sbb
add
scas
das
mov
mov
sbb
add
add
mov
andb
sub
in
divl
mov
bound
mov
into
fldcw
rcr
insb
fiadds
mov
dec
mov
and
add
xlat
std
push
fbstp
test
push
in
or
push
rcr
clc
dec
sahf
inc
add
push
aas
xchg
mov
inc
and
or
push
push
aam
faddl
inc
subl
jge
faddl
xchg
mov
sbb
icebp
notl
mov
shlb
mov
insb
or
addb
cld
push
pop
mov
cmp
sbb
and
sbb
inc
sbb
mov
out
ss
add
adc
xchg
out
das
add
dec
add
inc
testb
dec
lods
and
je
or
xor
in
jo
xchg
sub
mov
dec
add
adcb
fmuls
add
jge
cmp
lods
lock
pushf
mov
mov
add
cmp
fadd
in
or
cmp
add
cmp
adc
lahf
lds
or
push
mov
shlb
cs
dec
add
out
sarb
rdmsr
pop
mov
dec
cld
mov
das
pop
loopne
inc
mov
xor
sub
ljmp
jo
lds
or
jns
sarb
stos
push
adcb
mov
dec
test
into
cli
xchg
scas
pop
sti
ja
mov
movsb
hlt
popa
add
das
lea
ds
aas
push
hlt
mov
jl
fs
sahf
and
stos
xchg
je
mov
ds
add
jecxz
push
js
inc
shrb
rcrb
or
inc
loopne
xchg
test
mov
in
push
add
xor
sar
pusha
add
and
add
mov
cmp
push
xchg
stc
inc
mov
sub
outsl
sub
daa
aas
out
pusha
xor
or
in
hlt
cmp
mov
add
adc
pushf
add
lods
and
ljmp
add
inc
sub
sbb
orb
add
inc
movsb
jno
flds
cmp
cmp
inc
add
and
push
cmpsl
stc
add
push
and
add
pop
lods
aaa
add
dec
jmp
dec
and
cmp
in
mov
sarl
mov
jae
stos
mov
add
int3
loopne
cmp
cmp
mov
rorb
xor
shrl
mov
push
int
ljmp
pop
pop
ja
xor
jge
and
mov
imul
jge
dec
stos
das
je
mov
mov
out
aas
push
add
adc
mov
adc
test
in
xor
mov
mov
clc
pusha
inc
scas
test
test
lds
js
xchg
gs
sbb
cmp
enter
xchg
outsl
mov
jle
pop
std
je
nop
and
push
and
cmp
ljmp
or
ds
stos
mov
mov
or
test
scas
mov
out
or
hlt
xor
ds
shlb
mov
out
bound
sbb
in
jno
rclb
cs
fcomp
cmc
repz
mov
xor
xchg
add
pop
pop
xorb
sbb
and
outsl
out
add
movsl
fwait
xor
push
sub
nop
mov
sar
xchg
enter
cld
ficoms
in
xor
add
insb
add
or
fbstp
xchg
and
pop
scas
or
sbb
sub
pushf
call
mov
les
mov
fadds
loopne
add
aad
aas
fwait
xchg
mov
inc
test
sbb
add
xor
call
out
and
cwtl
mov
cmpsl
js
mov
mov
ret
lea
ficompl
mov
mov
cmp
aaa
or
in
jecxz
lret
cwtl
out
add
xchg
xchg
or
add
mov
subl
sub
add
imul
bound
test
pop
icebp
ret
leave
mov
dec
adc
xchg
xor
inc
andb
sbb
or
adc
js
inc
je
pop
pop
orb
lock
xchg
je
insl
sub
sub
icebp
mov
ss
jge
rorl
outsl
lock
fs
add
jmp
mov
daa
mov
mov
jg
push
or
inc
mov
jb
jnp
pop
notl
mov
nop
stos
fstps
cmp
xchg
sbb
add
and
int3
or
out
loope
adcl
add
mov
bound
rorb
faddl
gs
call
or
jo
dec
adc
mov
pop
cmp
add
ja
mov
dec
inc
sub
pop
cmp
cmp
inc
in
inc
xchg
imull
adc
jbe
movsl
mov
nop
sarb
mov
lahf
scas
adc
or
movsb
adc
pop
imul
mov
jg
mov
sbb
in
xor
js
push
imul
ja
add
icebp
lcall
mov
cli
adc
mov
je
in
add
enter
pushf
jo
repnz
xchg
xor
aad
mov
aam
dec
add
mov
jge
sub
sub
ret
or
lcall
shrb
add
les
rorl
inc
das
aas
jo
adc
dec
sbb
loop
add
jecxz
outsb
mov
mov
xchg
daa
jae
jmp
adc
sub
add
lret
nop
lea
jle
and
test
jbe
mov
nop
inc
add
pop
incb
lock
add
jo
adc
sarb
notb
imul
lods
das
inc
ljmp
mov
pop
add
mov
add
pop
cmp
add
dec
add
lds
cwtl
or
and
pop
mov
loop
cmp
jl
inc
mov
or
popf
adc
cltd
nop
add
cltd
inc
lret
fs
ja
push
cmp
sahf
adc
add
push
icebp
mov
imul
add
movsl
add
jge
ja
add
cmp
mov
sahf
push
mov
xchg
shl
repz
and
inc
or
sub
xor
mov
dec
data16
dec
add
pop
in
pop
popa
dec
mov
push
mov
sub
inc
cmp
stos
mov
in
aas
mov
jo
adc
mov
mov
xchg
fsubs
call
in
adc
nop
test
or
pushf
and
popa
sub
dec
push
inc
fs
add
jmp
add
mov
cmpb
inc
sub
jge
pop
in
dec
cmp
pop
movsl
int3
inc
inc
pop
cld
shll
icebp
test
sub
or
je
jns
sbb
mov
sub
inc
lods
push
mov
xchg
outsb
lock
adc
add
les
jb
or
fbld
add
mov
xor
cmc
xorl
into
pop
mov
add
cmc
jecxz
ds
and
je
or
fdivs
jnp
push
dec
popa
push
mov
insb
add
clc
insl
adc
jp
mov
add
fld1
sbb
loop,pt
mov
hlt
movsl
or
add
push
push
or
jl
orb
add
mov
xchg
xchg
push
lock
inc
and
add
fbld
or
sbb
jp
or
adc
xor
add
add
or
pushf
add
xlat
lret
and
or
sub
fwait
dec
cmpb
jbe
mov
enter
inc
add
mov
adc
adc
subb
pushf
jge
add
lock
into
ror
sub
addl
inc
push
outsl
xchg
push
std
das
dec
and
add
imul
mov
mov
jne
bound
imul
sbb
aad
mov
xor
test
dec
stos
mov
loopne
push
stc
js
sub
sahf
mov
or
inc
and
jp
add
cltd
icebp
sub
sbb
pop
add
add
jnp
fldenv
sbb
add
out
icebp
cmpsl
mov
pop
add
xor
cmp
mov
roll
pusha
sub
nop
orb
lahf
inc
or
lds
mov
jl
push
cmpsb
idivb
xchg
add
jbe
nop
add
jns
enter
adc
sbb
push
add
jno
or
pusha
pop
inc
enter
add
cld
push
stc
mov
std
inc
pusha
dec
loopne
pop
push
mov
rcrl
dec
js
cmpsb
push
mov
jo
mov
xchg
nop
loop
icebp
lret
push
rcrb
mov
inc
xor
dec
pushf
pop
add
sub
mov
push
ret
inc
or
add
enter
pop
dec
push
or
das
xchg
and
jl
lea
inc
pop
sbb
jg
mov
inc
jnp
adc
stc
add
popf
testb
outsb
aas
jl
lahf
and
inc
fcomps
add
sarl
add
rolb
pusha
adc
incb
or
jae
lret
dec
mov
add
jmp
enter
mov
fisttpll
or
pusha
jne
xchg
adc
jp
loope
sub
jae
add
shrb
imul
cld
mov
pusha
mov
mov
cmp
adc
cwtl
lret
enter
movsl
sub
fscale
add
or
fisttps
dec
popf
ret
ror
inc
aas
adc
xor
xor
icebp
mov
in
stos
orl
sub
seto
jp
adc
ficoms
mov
icebp
add
aas
imul
in
add
mov
or
repz
call
add
and
push
shrl
fwait
adc
enter
sti
pop
ret
xadd
nop
jl
mov
ljmp
rcl
inc
mov
jge
add
movsl
mov
daa
cs
pop
cmp
fldl
adc
sub
in
and
test
jmp
clc
inc
add
add
stc
xor
jb
add
sbb
xchg
pusha
jl
std
sahf
jecxz
cs
hlt
cmp
inc
lods
sbb
loope
cmp
add
jbe
or
scas
and
jae
orb
mov
add
xchg
xchg
test
and
push
sbb
mov
lods
call
scas
imul
add
pushf
jp
cmp
xchg
mov
in
outsl
addr16
mov
test
adc
or
adc
test
das
pop
and
pop
xlat
sub
fmul
add
dec
or
dec
insb
das
and
aas
add
mov
rol
push
adc
test
mov
ds
icebp
andb
add
xchg
inc
mov
enter
add
jb
fistpll
and
rolb
ret
ss
push
arpl
cmpsl
pop
mov
movsl
add
and
out
dec
arpl
loop
xor
and
dec
xchg
nop
icebp
imul
les
lret
and
mov
roll
jno
inc
enter
int
mov
or
dec
jno
add
pop
decb
sbb
je
stc
cmp
in
mov
rolb
or
lcall
push
xchg
stos
jno
push
sbb
cmpsl
das
pop
pop
xor
loopne
pushf
jbe
jnp
mov
ds
enter
mov
popa
dec
pop
and
jne
add
jmp
dec
push
push
xchg
fldl
pop
jecxz
and
add
loopne
push
pop
dec
stos
fsubp
shlb
popl
aas
pusha
enter
shrl
inc
hlt
dec
dec
rclb
mov
mov
das
rol
popa
enter
pusha
sub
inc
aas
pop
pop
push
das
xor
in
add
adc
mov
xor
lock
inc
stos
movsb
and
iret
data16
mov
aas
stos
nop
rolb
pusha
lahf
xchg
push
add
lcall
fdivrs
clc
add
das
pop
sbb
hlt
pusha
rcl
mov
xchg
push
andl
les
fsubrl
cltd
push
xor
pop
js
or
pusha
sub
imul
pop
jle
and
fwait
add
adc
push
mov
inc
dec
mov
cmpsb
dec
inc
mov
les
scas
outsb
nop
loop
add
repz
pop
nop
push
into
mov
pop
shl
je
xor
clc
loopne,pt
mov
add
cmp
push
sbb
mov
add
add
loope
pop
dec
jmp
call
push
pop
pop
out
xor
cmc
movsl
test
les
call
test
add
adcb
shlb
mov
sbb
outsb
popa
add
lods
out
xchg
sbb
push
or
xchg
sbb
out
je
inc
es
or
jl
inc
adc
xorb
push
sub
lret
jo
pop
andl
enter
pop
sbb
add
mov
xchg
pop
lock
andl
push
push
insl
imul
push
test
sbb
test
testl
jno
sub
pop
inc
aam
push
xor
cmp
or
ja
or
push
or
daa
andb
test
pop
push
cmpsb
test
je
dec
add
add
push
add
push
and
mov
scas
cmp
imul
pop
or
adc
aam
addr16
pushf
pop
call
je
test
pusha
les
sti
pop
xor
xor
jbe
adc
and
add
shlb
hlt
lock
xor
jo
xor
out
mov
cwtd
xor
out
ret
data16
lock
adc
mov
pop
and
mov
insb
xor
pop
mov
fdivrl
jo
xorb
xor
adc
mov
inc
jbe
push
sub
dec
or
xchg
sub
jo
jnp
mov
add
ljmp
packssdw
add
imul
xor
mov
cmpsl
adc
push
movsb
add
adc
or
je
out
outsl
andb
mov
cmp
out
mov
insb
hlt
add
stc
mov
and
call
movsl
jne
jl
pusha
ds
in
jge
test
xor
jnp
sbb
mov
sti
push
pop
aaa
push
sbb
adcb
jge
fldl
shlb
jae
mov
repz
icebp
arpl
xchg
ja
pop
adc
add
cmp
and
fmull
test
test
lcall
cmp
jmp
ljmp
lock
testl
cmc
outsl
sub
dec
cwtl
cmp
in
pop
dec
cmp
shr
inc
jmp
sub
dec
xor
and
test
popf
and
xor
aam
test
mov
sahf
or
cld
add
sbb
lock
in
insb
add
leave
mov
or
outsb
mov
divb
mov
imul
cs
stc
push
or
pop
popl
jno
fistl
data16
insl
insb
add
push
push
jno
lret
add
or
mov
les
addb
pop
mov
clc
orb
pop
filds
dec
cltd
movsb
stc
pop
sbb
sbb
mov
and
pop
and
push
push
stos
mov
add
int
pop
xchg
out
add
lret
sahf
jle
xchg
das
inc
and
add
push
test
test
push
sub
xchg
inc
pop
add
push
cmp
stos
lds
xchg
movsl
mull
sub
pop
pop
inc
roll
jle
mov
add
enter
adc
into
orb
fstpl
mov
data16
add
mov
lahf
and
mov
ret
xchg
roll
push
dec
das
out
xchg
add
mov
push
cs
add
insl
repnz
or
int3
dec
mov
or
pop
pushf
pushf
lods
add
adc
xchg
mov
inc
imul
jns
popa
lea
fldl
inc
addr16
sub
or
andl
test
roll
pop
xchg
loope
aas
or
and
cs
add
inc
mov
or
sti
fidivrs
sub
xor
loope
add
pop
push
pusha
mov
divb
shlb
movsb
or
aam
roll
rorb
pushf
mov
add
add
xorb
push
mov
jnp
jno
add
jg
sub
lret
insb
insl
fists
sarl
add
rorl
pop
xchg
clts
rcr
mov
cli
pop
sbb
aaa
cmp
xchg
sub
adcb
cmp
jbe
or
inc
and
mov
sbb
fs
sub
dec
mov
lods
pusha
lret
xchg
fdivl
loopne
and
add
xor
push
arpl
or
sub
push
repz
sub
cld
rorb
scas
outsl
mov
mov
cld
es
and
movups
imulb
sarb
bound
enter
push
pop
lea
add
xchg
dec
or
cmp
xchg
cmp
popf
add
xor
sub
add
shlb
ds
mov
ret
ljmp
sub
inc
add
test
adc
int3
dec
mov
int3
les
gs
inc
or
nop
popa
sbb
repz
aas
les
clc
xor
stos
aam
jl
lcall
add
je
push
add
and
shlb
popa
sbb
stos
or
sub
add
xor
and
pop
and
rolb
movsl
or
in
jnp
stc
and
xor
push
int
mov
loope
xor
rcrb
dec
mov
mov
jl
sbb
add
pushf
cmp
or
jnp
sub
enter
add
jnp
sbb
insl
mov
adc
lds
dec
sub
or
mov
adc
add
jnp
mov
or
sbb
xchg
push
jo
and
jl
bound
jnp
int3
movb
stos
sahf
pop
cmp
sub
inc
add
mov
cmp
add
sahf
outsb
cltd
and
sbb
pop
push
les
dec
dec
jb
cld
push
lcall
das
add
ljmp
xor
add
sbb
cmp
push
and
pop
xchg
pop
sub
dec
pop
mov
sahf
pop
roll
jb
inc
out
std
dec
stos
test
daa
cltd
mov
mov
rcrl
cld
mov
xchg
int3
xchg
mov
cmpsb
enter
negb
repz
inc
pusha
inc
cmpsb
shrb
add
add
mov
mov
or
sbb
subl
inc
xor
pop
jne
fldenv
sbb
dec
cli
mov
xor
in
inc
or
sbb
leave
add
xor
daa
dec
xchg
push
rorb
mov
sub
and
loope
scas
leave
or
hlt
or
and
sahf
and
cld
test
add
xor
jb
inc
or
call
leave
fadds
mov
pop
mov
sbb
mov
or
mov
je
pusha
add
lds
icebp
push
cmc
push
pop
xor
adc
mov
jge
pop
out
aam
call
pop
int3
push
shl
or
xor
push
push
je
mov
jae
xor
sub
mov
xor
cld
xor
jmp
adc
xor
sti
or
shll
mov
push
faddl
cs
int
in
add
pop
fildll
xor
clc
push
or
lret
dec
pushf
sbb
cmp
lret
leave
pop
daa
or
and
mov
cmp
int3
lret
jnp
inc
test
jno
andl
xchg
nop
pop
cmp
and
dec
lds
xorb
sbb
inc
fcom
jg
xchg
enter
lcall
add
or
push
add
dec
lods
call
xor
mov
and
aam
pop
jo
jl
inc
dec
sub
lock
sub
dec
lods
dec
sbb
bound
dec
mov
or
sbb
les
xchg
inc
pop
sub
pusha
cmp
inc
shr
add
adc
cmp
mov
adc
aad
subl
fucomi
mov
dec
adcb
mov
mov
test
and
adc
jge
adc
out
rorb
pop
xor
or
mov
or
je
add
push
jmp
mov
jne
cmp
fmul
rolb
mov
jle
sbb
adc
loopne
or
pop
and
inc
and
inc
and
adc
mov
subb
sbb
inc
inc
arpl
dec
andl
xchg
add
xor
dec
nop
mov
add
aas
addr16
push
stc
rcll
cmc
dec
xchg
cmp
sub
push
mov
les
pusha
xchg
and
mov
aaa
mov
cmp
iret
sub
pop
mov
cltd
mov
inc
shl
iret
add
sbb
xor
jp
xchg
jne
add
sbb
add
mov
adc
pop
xchg
push
nop
xor
int
mov
dec
cld
call
cmp
jg
mov
add
adc
sub
pop
and
and
add
and
mov
sub
test
push
stc
sbb
pop
push
jo
sbb
ret
bound
mov
out
jnp
sbb
je
bound
or
sbb
xchg
sahf
in
xchg
in
test
gs
fistpll
jne
decb
pushf
add
xor
shlb
mov
lock
cmp
inc
xchg
cltd
jb
push
jmp
jmp
mov
add
fcoms
xor
sub
into
cmpl
mov
xor
je
sub
js
pushf
in
lock
aam
or
xor
std
jecxz
push
aad
add
sub
mov
dec
enter
xchg
mov
and
add
adc
clc
dec
fisubrl
cmp
sarl
fstpt
test
mov
fisttpll
shlb
push
mov
add
mov
jo
jb
add
popa
xchg
xor
pop
orl
sub
and
or
push
add
pop
add
lret
push
clc
add
adc
add
xchg
or
jne,pn
sub
je
and
adc
adc
and
push
sti
lds
scas
cwtl
and
push
dec
cmc
test
pop
or
or
in
lea
and
mov
xchg
jnp
or
sti
add
sub
push
and
push
mov
jne
xor
icebp
dec
xor
imul
jne
or
aas
int
in
rclb
mov
ret
call
cwtl
mov
xlat
into
cli
jae
icebp
cwtl
sub
pop
sbb
sbb
pop
mov
or
je
and
add
bound
and
enter
and
inc
mov
sub
scas
pop
nop
addl
in
pop
and
sbb
and
addb
imulb
shll
sbbb
cmp
lcall
fisttpl
inc
stos
sbb
test
insb
add
and
sub
sbb
xor
or
shrb
mov
addr16
or
mov
jmp
imul
rol
or
or
inc
mov
loopne
movsb
jg
pop
pop
adc
mov
xor
adc
mov
push
or
cmp
negl
jecxz
lahf
lea
enter
jnp
jle
add
add
subps
and
pop
addl
xchg
mov
outsl
add
dec
outsb
fcomip
stos
inc
rolb
cltd
mov
packuswb
sbb
hlt
pop
and
xor
pop
cmpsb
xchg
xchg
aad
or
mov
pop
jo
add
sub
lock
outsb
ljmp
push
and
adc
lock
stc
add
jnp
dec
push
rcrb
pushf
lods
push
push
fnstenv
fcomps
call
loopne
add
mov
andb
or
sar
shl
cmp
adc
xor
scas
or
fsts
pop
rolb
add
scas
enter
out
movsb
stc
push
pop
cmp
mov
mov
stos
fsubrl
loope
iret
xor
add
sti
out
cmpsb
loopne
push
xchg
int
add
ja
scas
bound
test
or
sbb
mov
fmull
xchg
or
sahf
outsb
inc
lcall
loopne
scas
add
stc
bound
xor
mov
jo
clc
repnz
mov
loopne
push
mov
sub
mov
ret
arpl
mov
daa
bound
and
cmp
dec
decl
cmpsl
add
mov
in
xor
xchg
shlb
in
int
into
push
pop
push
adc
cmp
dec
nop
or
dec
in
les
pop
lret
popl
dec
and
sti
inc
sbb
ds
add
or
test
mov
aad
adcb
pshufw
js
pop
pop
ret
leave
dec
xchg
call
les
cmp
lret
addl
adc
mov
or
add
mov
fwait
pusha
xor
cmc
add
lret
xchg
push
iret
mov
jl
movsl
subl
in
push
pop
nop
lcall
adc
mov
jmp
add
mov
cmp
jns
das
add
pop
jp
fldt
mov
icebp
xor
pusha
dec
xchg
sbbb
cmp
sub
jne
cmp
cmpb
cmp
add
mov
cmp
shld
mov
jno
pop
push
add
pop
mov
pop
pop
out
and
out
or
jb
cmpsb
and
cmp
es
jmp
pusha
insb
add
jecxz
popa
or
mov
and
arpl
sarl
enter
pop
fwait
sub
mov
jmp
sub
fwait
movsl
dec
test
pop
aad
into
jb
add
xlat
xor
push
fidivs
xchg
sbb
push
sbb
add
adcb
cld
lahf
les
aad
sub
mov
data16
or
and
in
cltd
arpl
pop
daa
push
outsl
sbb
add
add
push
jl
mov
dec
push
lods
or
jnp
pop
jb
jae
popa
and
and
jge
test
jle
scas
ret
test
cmp
mov
in
xor
sbb
add
pushf
popf
or
add
iret
popa
icebp
mov
shl
test
mov
adc
inc
adc
pop
cmpsl
mov
aaa
int
test
adc
call
or
std
or
and
mov
std
pop
sub
in
add
dec
xchg
push
cmovs
adc
loope
pop
sub
shrb
lret
imul
mov
fisubrl
mov
daa
cs
and
adc
rorl
xor
push
popa
call
bswap
loop
call
lods
aam
in
out
push
and
pushf
jle
stc
shl
or
pminub
and
jns
lret
andl
fsubrl
jbe
ja
jo
les
and
cmp
ret
cs
nop
sub
sub
push
cmp
xlat
sub
in
add
je
fdivrl
loopne
sti
aam
lds
cwtl
sub
js
add
popf
popa
shrl
jo
ret
inc
leave
pop
add
sub
cld
lret
movsl
in
add
or
test
sbbb
orb
mov
add
inc
test
imul
movsl
pop
or
and
insl
imul
and
divb
cmp
test
xchg
in
and
inc
or
xor
sbbb
and
add
jl
lods
or
mov
and
and
push
sbb
imul
add
adc
les
jl
sbb
fsub
sbb
push
push
pop
fneni(8087
and
cwtl
pop
push
mov
mov
xchg
push
dec
pop
insl
mov
jecxz
popa
stc
into
adc
lods
shl
out
int
sbb
inc
iret
mov
call
stc
movsl
loope
rclb
das
call
shrl
xchg
arpl
jmp
mull
lds
add
lock
nop
sub
jecxz
shlb
das
jl
cmp
subb
out
pop
sbb
ret
sub
adc
inc
fadd
movsl
pusha
fs
insl
fdivrs
xor
or
xchg
push
push
xorb
lods
pmaxub
pop
add
inc
jae
mov
add
movsb
out
inc
xchg
int3
shrl
jns
add
mov
push
inc
mov
mov
and
dec
sub
int
aam
fstps
iret
mov
repz
xchg
imul
mov
cmc
inc
test
loopne
imul
mov
add
enter
and
push
addb
sbb
ljmp
sub
lods
cltd
or
lods
inc
lcall
pushf
js
pusha
fisubrs
call
sbb
pop
pop
mov
cmp
mov
xor
imul
and
loop
or
sbb
sub
add
hlt
mov
xchg
clc
jle
and
int3
sub
loop
jo
fisttpll
sub
cld
addl
ret
dec
cmp
test
lcall
ret
sub
aad
pop
and
add
aam
call
movsb
sbb
dec
mov
das
mov
and
enter
gs
pop
inc
lods
xchg
nop
mov
nop
pop
adc
and
cmc
push
add
lock
inc
inc
push
xchg
lret
mov
inc
inc
int
ds
mov
add
mov
dec
jns
pushf
push
adc
lods
adc
inc
add
dec
cmc
jmp
lea
sbbb
lods
push
nop
add
cmp
lods
testb
js
push
sti
lahf
mov
and
jecxz
imul
mov
outsl
cmp
mov
mov
pusha
xchg
movsl
jbe
jno
and
mov
rcr
mov
icebp
fnsave
and
dec
jae
cmp
mov
mov
add
sbb
mov
jo
imul
cltd
sub
jo
sbb
sub
rorb
pop
aam
cs
andb
pop
cmp
pop
fdivs
and
dec
loop
cmp
adcl
mov
cmc
int
loopne
rolb
sbb
inc
int
mov
lds
cs
int
cld
xchg
adcb
cmp
add
mov
int
adc
xchg
add
xlat
sahf
xor
scas
pusha
jno
push
hlt
jl
inc
mov
movsl
and
pop
mov
test
sub
add
and
add
enter
mov
fsubr
or
in
xor
xor
enter
sbb
fsubs
enter
cmp
xor
cmp
lock
mov
push
cmpsb
jno
or
and
or
leave
adc
pop
fmull
insl
les
inc
in
imul
push
repz
mov
adc
enter
inc
leave
or
sbb
add
push
in
popf
les
test
sub
inc
add
and
or
imul
ficompl
aam
xchg
mov
addr16
in
mov
adc
cmpsl
push
add
movsl
and
sub
in
inc
rolb
in
inc
fwait
cmp
ret
es
pop
rclb
sub
out
dec
lcall
inc
cmp
xor
mov
and
xchg
push
push
movsb
sub
and
pushf
inc
sbb
xor
push
mov
pop
fmul
add
and
sbb
cmpsl
js
adc
ret
xor
test
jo
into
loop
and
adc
add
adc
clc
push
pop
sbb
jge
and
jl
or
sub
mov
jp
xchg
inc
aam
mov
popf
inc
in
xchg
je
enter
rorl
inc
adc
mov
mov
cmp
popa
add
pop
ret
enter
and
addl
ret
jo
add
mov
add
or
sub
and
mov
adc
push
call
xchg
mov
mov
pop
ret
lea
inc
mov
rclb
mov
mov
xor
sub
push
popa
pop
ret
enter
inc
adc
cmp
jns
ss
cmp
sbb
ret
and
inc
push
ret
orl
sbb
dec
arpl
jb
idivl
jmp
push
fwait
or
mov
stos
jo
lock
or
jne
sbb
add
rcr
dec
add
xchg
mov
push
and
cmpsb
xor
repz
cmp
sub
call
in
bound
pop
ret
adc
inc
push
ret
or
mov
ljmp
push
xchg
add
cmpl
bound
stc
add
dec
mov
mov
push
mov
add
inc
push
movsb
pop
cmp
adc
inc
push
ret
out
bnd
test
insl
ljmp
inc
mov
inc
or
addb
pop
push
test
nop
into
mov
cli
scas
fdivs
add
loop
nop
fsts
iret
or
push
fstl
pop
ret
inc
mov
and
ret
das
aad
cmpl
cmp
fldz
rorb
mov
fdivl
or
mov
std
mov
xchg
and
inc
pop
pop
lea
popf
adc
adc
ret
call
inc
dec
xchg
add
adc
add
cld
jmp
call
and
fldl
mov
add
rolb
inc
adc
je
sbb
sub
and
clc
jae
sbb
popf
pop
cltd
mov
sub
jecxz
jne
push
cmp
shlb
mov
sbb
mov
pop
popa
pusha
cli
repnz
and
addl
inc
and
xlat
jno
sbb
add
test
dec
or
mov
daa
and
data16
or
lods
push
fnstenv
test
mov
imul
sub
sub
cld
movsb
aas
loope
dec
push
mov
nop
add
jo
mov
add
mov
fwait
mov
push
sub
jns
sbb
dec
cmp
sub
mov
pop
out
or
sub
xor
jg
iret
add
cmp
pop
mov
add
bsr
sbb
mov
mov
pop
out
pop
add
add
mov
es
sub
dec
cmp
jnp
mov
in
mov
jbe
pop
lea
pop
sub
pop
sub
sbb
or
add
and
sub
sbb
and
cmp
jge
push
imul
sahf
cld
stos
test
xor
jecxz
sbb
incl
test
dec
psrld
pop
into
pop
dec
mov
and
inc
gs
pop
repz
push
cmpsl
mov
fcomps
mov
mov
xor
mov
push
shr
outsl
mov
daa
push
shll
notw
and
sbb
pusha
call
add
sub
jmp
jecxz
int
fstps
sub
movsb
xchg
inc
daa
xchg
sub
mov
jmp
outsl
aas
mov
cmp
loopne
clc
out
repz
jae
push
sbb
adc
cmp
add
xor
out
and
add
sbb
mov
adc
xchg
cmp
loopne
cmp
adc
sub
dec
fldenv
adc
mov
filds
test
fwait
call
ficomps
hlt
out
sub
sarl
pop
dec
pop
adc
and
xchg
sbb
mov
inc
andl
mov
cmc
cmp
mov
xor
mov
mov
and
xor
jno
sbb
or
xchg
add
ficoms
cwtl
sbb
adc
push
shlb
test
and
mov
loopne
or
out
sbbl
dec
xchg
jbe
dec
push
inc
adc
sbb
or
or
movsb
or
pop
sbb
add
aad
je
xor
rcrb
mov
sti
sub
cmpsb
mov
subb
adc
sbb
add
mov
jb
in
inc
push
pop
aam
cmp
xor
testl
xchg
lods
ret
dec
stos
loopne
mov
negb
and
lods
and
mov
out
add
imul
popa
sub
into
cld
mov
shlb
mov
dec
lret
add
gs
enter
in
adc
imul
and
sub
repnz
sbb
aad
add
mov
inc
ret
xor
sbb
dec
repnz
pop
icebp
rcrb
lock
stos
hlt
movsl
dec
inc
ja
mov
pop
ficoml
out
push
arpl
stc
pop
repnz
inc
push
or
mov
mov
pop
mov
pusha
add
sbb
inc
jae
cmp
adc
and
or
lret
sub
lea
add
mov
es
xchg
outsl
out
or
lahf
jmp
add
icebp
xor
lds
je
push
or
out
xchg
or
pop
sub
sbb
add
jns
mov
jae
mov
loop
insl
ds
pusha
pushf
pop
sub
dec
arpl
imul
aaa
mov
sbb
cmp
sub
add
fdivl
insl
push
pop
add
pop
lock
bound
je
mov
outsb
fistl
daa
mov
mov
ret
adc
lret
les
idiv
mov
add
xchg
int3
push
mov
mov
mov
pop
inc
rorb
inc
mov
add
mov
bound
mov
jmp
outsl
pop
jne
inc
cmp
add
xchg
adc
mov
sbb
mov
outsb
pop
and
sbb
sub
push
mov
daa
mov
mov
mov
push
fsubrs
pop
dec
pop
stos
pop
add
mov
push
lods
mov
xor
daa
add
testb
lea
push
sub
lret
inc
adc
insl
repz
add
push
push
push
pop
pop
pop
jmp
sub
push
pop
pushf
pop
nop
cmc
jo
jg
loope
xor
test
sbb
insb
loopne
lea
jns
cmpsl
mov
sub
add
insb
adc
pushf
sbb
imul
jp
daa
add
test
les
sbb
lods
hlt
ja
inc
jg
and
mov
les
loope
push
stc
sbb
out
add
mov
sbb
fisttpll
hlt
repz
or
stos
in
pop
sub
rcll
pop
pop
xor
pop
aad
dec
daa
jo
inc
and
arpl
aas
add
push
jge
mov
jmp
and
adc
sub
or
pop
lock
sbb
popl
pop
mov
dec
fisubrl
push
mov
test
xchg
insl
add
scas
dec
outsb
stos
sahf
call
xchg
clc
test
mov
xor
xchg
mov
in
ror
and
and
dec
cltd
movsl
stc
out
or
sbb
sub
gs
cs
adc
mov
jg
icebp
pop
adc
and
cmp
cmc
push
out
xor
test
stos
mov
add
mov
jno
or
call
cmp
ljmp
jo
andl
in
dec
andb
or
jl
inc
shlb
inc
adc
mov
mov
lock
cmpsl
mov
loopne
test
mov
push
cvtps2pi
or
push
add
jnp
sbbb
fsubrs
add
pop
adc
dec
sahf
or
shrl
repnz
sub
xchg
js
int
stc
xor
leave
xorl
mov
or
loop
dec
pop
lods
jno
mov
inc
cmp
aaa
add
icebp
inc
and
lahf
pop
or
arpl
pusha
cltd
test
in
lcall
roll
xor
push
pusha
mov
inc
cmpsl
mov
test
xor
pop
lcall
sub
dec
call
lds
pop
nop
pop
in
adc
cmp
shl
movsb
scas
inc
mov
xchg
xchg
jmp
sbb
stc
pop
jo
xchg
sbb
add
or
sahf
mov
sbb
das
popf
mov
lds
jo
and
in
loop
jnp
shlb
cld
add
mov
dec
iret
loop
aam
out
inc
xchg
mov
pop
jmp
or
mov
add
lahf
jns
rorl
imul
jo
bnd
and
or
push
jns
rcrl
sbb
ret
call
sub
ffreep
and
mov
test
imul
leave
mov
push
ljmp
push
inc
jle
sub
hlt
cmp
call
pop
cli
xchg
push
push
inc
pmaxub
push
addb
ret
adc
adc
test
mov
loope
cmp
mov
sbb
add
enter
xchg
mulb
mov
cltd
movsl
push
in
mov
inc
roll
and
nop
xchg
add
sub
push
sub
push
test
pop
add
lock
push
pop
sbb
in
sbb
adc
movsb
xor
dec
test
mov
pop
call
xchg
cmp
test
pop
sbb
ss
inc
inc
sbb
or
add
mov
fisubrl
inc
adc
xchg
mov
and
push
add
jns
in
push
mov
fcoms
xchg
neg
out
movb
sub
push
adc
cmpb
std
add
int
das
pop
and
movsl
adc
sbb
outsl
xchg
or
lock
inc
inc
or
nop
sub
stos
popa
mov
push
xor
cs
or
inc
es
inc
add
push
stc
in
cli
inc
in
adc
pushf
aaa
mov
lea
inc
jne
add
cwtl
repz
fs
out
loopne
adc
and
jle
daa
mov
add
lock
adcb
fadds
sub
or
mov
xchg
sbbb
or
sub
call
mov
and
add
fcomps
cld
push
cmp
lods
xor
pop
ss
int3
leave
sbb
adc
sbb
adc
mov
and
fwait
or
dec
stc
mov
jb
arpl
sbb
inc
subl
stos
in
adc
or
mov
adc
scas
add
jmp
outsb
add
dec
out
iret
int
add
push
imul
rcl
jb
outsb
push
insl
fcmovnb
bound
inc
out
enter
call
inc
mov
inc
jnp
aad
sbb
stos
add
sub
pop
pusha
mov
ss
jno
or
ret
mov
push
dec
jecxz
xchg
outsl
adc
imul
int
lret
add
sbbb
mov
std
push
and
or
xchg
popa
jle
in
push
add
sub
andl
push
mov
push
add
cmc
sarb
jno
add
or
das
sub
les
push
adc
ror
push
add
pop
outsb
push
inc
bound
pop
pop
inc
hlt
dec
loopne
mov
iret
cmc
xor
add
outsl
ret
add
inc
mov
sub
cwtl
or
in
pop
adc
add
fidivrs
pop
push
repnz
pusha
out
or
pop
cmp
lods
dec
dec
push
mov
orb
sti
push
lock
jp
rclb
movsb
ds
data16
sbb
sarb
pop
rorb
add
les
scas
add
mov
in
cmpsl
dec
or
mov
fldcw
iret
mov
stc
bound
jno
xchg
adc
sbb
in
lea
sahf
inc
cmp
fwait
out
jno
pop
cmp
xor
and
jae
add
sbb
jnp
jno
push
test
mov
add
out
inc
pop
testl
rcrb
pushf
add
xchg
rcrl
adc
loop
test
lahf
insb
add
pop
mov
aam
mov
add
mov
fistpll
add
fdivrs
sbb
push
popa
sbb
mov
cmp
dec
outsl
ljmp
in
and
ss
cmpb
imul
add
add
push
into
stos
subb
xchg
adcb
xor
rorb
xor
mov
push
clc
icebp
cmpps
mov
arpl
cmpb
fucom
xchg
mov
incb
adc
cmp
jns
test
inc
inc
mov
dec
dec
mov
jo
xchg
lods
or
sbb
pop
jg
mov
fdivl
pop
add
push
out
xchg
jmp
dec
imul
ret
loop
fldt
and
test
add
jl
nop
xlat
jns
and
cmp
pusha
push
sub
xor
je
jb
rcll
dec
iret
push
and
ret
repz
mov
scas
jle
shlb
add
fstpt
sbb
addl
ss
cld
insl
test
int3
sbb
ja
xchg
cmc
jns
push
hlt
mov
popf
cmpsl
jl
fldt
lock
hlt
xchg
add
fwait
push
insl
dec
adc
lahf
movsl
aaa
fucomp
adc
repnz
pop
in
pop
adc
push
lds
pusha
fistpll
cli
add
jge
arpl
push
je
imul
sbb
lods
sbbb
sbb
movsb
or
inc
and
xor
sub
andl
pushf
notl
mov
sbb
lods
imul
jp
jmp
call
push
or
or
or
stos
ljmp
inc
mov
call
mov
int3
lods
cmpsl
xor
add
xor
cmp
add
insl
or
add
cmpsb
xlat
add
push
hlt
mov
pop
scas
add
arpl
mov
adc
pop
stos
inc
inc
scas
sarb
stc
or
aaa
inc
jno
pusha
or
repnz
sbb
in
scas
aam
mov
add
add
push
jo
test
loope
jle
cmpsb
jmp
xchg
nop
stc
inc
inc
mov
cld
xchg
ja
jb
mov
andl
shlb
lds
stc
sbb
cmp
jno
lret
jne
pop
xor
sti
popf
push
cld
ds
add
mov
pop
push
in
xlat
dec
sub
xor
mov
adc
and
mov
adc
and
scas
call
sbb
enter
jge
dec
lock
push
add
movsl
test
xor
leave
cs
and
fidivrs
sub
push
cld
mov
andb
add
icebp
mov
cmp
xchg
adcb
xchg
lret
addr16
mov
xlat
test
divb
xchg
add
cmc
mov
push
adc
xor
mov
call
neg
xchg
or
and
shrb
and
pop
fimull
xchg
dec
pop
out
add
cmp
cmovns
out
cs
and
or
mov
lcall
fwait
push
lods
dec
mov
pop
push
push
pusha
ljmp
pop
pop
adc
jg
or
cmp
and
inc
aaa
add
push
pop
mov
jmp
pushf
jl
lea
xor
xlat
inc
subl
jbe
dec
mov
fadds
out
nop
mov
out
mov
and
daa
leave
div
adc
dec
xchg
icebp
add
fdiv
xchg
insl
or
test
xor
add
mov
add
mov
and
mov
test
inc
pop
data16
or
fisttpll
pop
add
cld
ds
xchg
sbb
inc
mov
add
xor
setbe
push
pop
imul
add
cltd
fucomi
fs
sbb
addl
pop
shrl
or
dec
cltd
scas
pushf
mov
sarl
loopne
stc
dec
cmp
stos
sbb
cmp
movsl
push
aas
xchg
test
loope
lock
mov
ljmp
cwtl
into
cmp
pop
addl
in
inc
add
cmp
mov
test
cmpsb
and
mov
frstor
sbb
data16
iret
leave
add
dec
dec
pop
add
adc
mov
aas
mov
mov
std
sahf
and
cmp
in
out
ja
icebp
lods
push
enter
xchg
hlt
push
hlt
inc
add
std
pushaw
mov
or
divl
xor
inc
inc
add
imul
add
clc
adc
insb
push
push
add
dec
out
inc
add
mov
notb
popf
test
dec
out
out
mov
and
rcll
xor
popa
sbb
and
sub
out
inc
sbb
sti
mov
mov
ret
std
mov
pop
and
jmp
stc
xor
add
jg
push
inc
cmpsl
mov
add
add
fstpl
es
lret
lods
adc
shlb
pushf
inc
cmp
sti
ds
add
jl
xor
or
mov
add
jl
add
test
mov
inc
sti
sbb
and
add
rorb
pop
mov
loopne
sbb
movsb
or
mov
xchg
adc
adc
pop
jb
add
das
add
js
sub
stc
cmc
add
jns
out
adc
cmpsl
inc
xchg
imul
setge
in
inc
addr16
add
xchg
cwtl
push
test
loop
shlb
mov
aaa
repnz
push
daa
xor
and
loop
or
xchg
add
leave
aad
test
sbb
mov
or
scas
mov
sub
fs
xorl
mov
push
mov
mov
inc
lret
mov
lods
and
add
sbb
jo
gs
adc
add
mov
aam
jne
sti
jbe
cmc
cltd
sub
and
lcall
dec
rol
fs
add
daa
push
mov
enter
arpl
ret
ds
bound
jae
inc
test
mov
add
gs
scas
push
dec
sysexit
xchg
fstpl
add
orl
push
sub
cmp
cmp
mov
jbe
sbb
sub
cmp
addb
push
inc
add
ja
inc
mov
add
jae
lds
pop
cmp
inc
adc
sub
fcmovnbe
jmp
cmp
enter
ror
xchg
sbb
mov
pushf
and
add
adc
fcoms
xchg
add
lret
loope
cmp
test
fs
ss
rorb
or
or
in
insb
add
inc
push
sub
inc
fsubp
popf
pop
mov
stos
les
movb
jle
sbb
lods
dec
dec
pop
jns
sbb
mov
dec
add
and
je
pop
addb
data16
fnstcw
aad
add
push
sub
inc
pushf
cmp
leave
or
pop
shll
ret
test
or
adc
add
xor
adc
imul
int3
xor
cld
cs
xor
sbbb
push
inc
mov
fdivr
cmp
shll
nop
cmpl
les
enter
sbb
push
or
inc
inc
lods
cmpsb
popa
push
ret
jl
push
adc
js
sub
lahf
in
pushf
dec
stos
dec
add
mov
jbe
pushf
stos
dec
jle
xchg
mov
pushf
cmpsb
cmc
ds
ficoml
mov
imul
push
cwtl
inc
gs
jno
jg
mov
pop
je
imul
lods
push
add
or
in
loop
push
lods
out
iret
or
gs
push
int3
xorb
sti
inc
sbb
mov
pop
jmp
rclb
jle
pop
mov
cmpb
das
lcall
shlb
mov
add
xchg
scas
jbe
leave
dec
mov
mov
cmpsl
xchg
xor
out
jns
in
scas
add
inc
das
call
sub
sbb
jo
bnd
xor
hlt
sahf
call
mov
fnstcw
pop
mov
mov
loopne
adc
push
lahf
push
pop
bound
rorw
loop
add
pusha
cli
dec
add
dec
outsl
adc
xor
sub
out
or
jg
aad
push
or
paddsw
add
incl
leave
mov
cwtl
mov
xor
into
sarb
and
pop
mov
popf
nop
cmp
test
add
es
sbb
cmp
inc
sub
adc
adc
inc
sub
bound
shll
outsb
lea
and
lods
jle
aaa
cli
lds
push
mov
adc
lock
sahf
hlt
pushf
mov
insl
xchg
mov
jl
add
jp
arpl
fs
into
scas
movsl
lcall
lcall
in
clc
pop
call
sbbb
dec
scas
cmp
mov
cmp
mov
sbb
mov
push
in
andl
dec
popa
fwait
jle
inc
jne
cmpsb
shlb
sub
adc
xchg
enter
push
ja
sub
inc
cltd
cmp
call
cmp
pop
cs
lea
sub
mov
mov
orb
push
push
pop
add
call
pop
aad
lahf
mov
xor
mov
push
adc
les
or
popa
push
test
push
movsb
cld
cmc
sbb
mov
les
add
mov
fmuls
push
sub
iret
or
les
add
xchg
stc
lock
dec
push
inc
dec
repz
jae
xor
sub
push
mov
in
pop
xchg
je
in
stos
xor
inc
pop
jp
add
das
movsl
fimull
or
mov
dec
xor
aam
inc
adc
mov
mov
dec
mov
add
inc
fs
scas
ja
call
test
push
add
ret
adc
aam
pop
add
and
pop
push
add
and
add
mov
dec
loopne
add
inc
loope
xlat
js
xor
rcrb
call
repnz
cmp
lea
add
mov
jp
xchg
or
cmc
mov
cmp
stc
aam
sbb
daa
jae
outsl
mov
jmp
adc
stos
add
push
inc
loopne
xchg
adc
add
mov
adc
inc
ltr
xorb
repz
add
std
popl
pop
movsl
test
cmp
out
jns
addr16
push
jle
subb
push
sbbb
fldcw
aam
pop
bswap
test
jbe
sub
dec
stos
inc
mov
out
xchg
pop
scas
dec
nop
fdivr
jb
dec
push
clc
add
test
or
enter
sbb
and
sbbl
sub
inc
mov
add
and
gs
mov
es
in
xlat
push
pop
mov
cltd
add
cs
popf
inc
lcall
aad
fisubrl
add
jmp
pop
jae
add
mov
ds
inc
movsb
jo
outsb
cmp
mov
and
and
mov
loop
sbb
subb
jecxz
adc
adc
jae
inc
or
scas
jle
add
mov
sti
cmpl
and
les
mov
mov
clc
sub
out
gs
push
adc
stc
adc
lret
add
das
add
movsl
add
into
loope
clc
ret
pop
cmp
mov
push
add
sti
jmp
or
dec
push
inc
pop
jns
jb
push
push
leave
rcrb
cmp
dec
pop
mov
add
add
cmp
sbb
push
mov
addr16
mov
ljmp
dec
push
xorb
inc
pop
das
jp
dec
jnp
sbbb
mov
sub
adc
mov
out
add
icebp
or
out
xchg
lahf
inc
lds
cmp
adc
repnz
shrl
lods
loopnew
iret
in
add
sbb
dec
sahf
and
fs
dec
clc
add
cmp
adc
xchg
stc
dec
jns
xchg
nop
add
scas
sti
call
in
fs
dec
stos
test
push
xchg
rorb
jl
mov
imul
add
leave
inc
mov
sub
fidivs
xchg
sub
add
adcb
leave
sbb
popa
push
add
push
jae
lods
adc
out
daa
pusha
movsb
les
jns
or
mov
not
jle
rorl
push
loopne
dec
mov
xchg
pop
add
inc
xor
xchg
jecxz
jnp
push
pop
mov
je
mov
pop
sbb
add
int3
hlt
fildll
sbb
cmp
add
movl
addb
xor
cmp
ljmp
mov
sbb
push
mov
adc
add
xor
es
xor
add
xlat
xchg
ljmp
loop
cmp
pop
xchg
inc
lock
imul
dec
imul
add
push
jb
push
mov
mulb
inc
jns,pn
enter
pop
shrb
mov
dec
dec
je
jg
lret
adc
adcb
sub
clc
mov
add
cmp
add
pop
jne
flds
lods
add
icebp
loopne
mov
cmp
out
ljmp
inc
mov
sar
add
pop
jp
inc
jo
mov
mov
ljmp
fisubs
push
add
dec
adc
jbe
add
imulb
movsl
std
jge
add
jp
jb
retw
cli
pop
push
es
xchg
adc
or
stos
adc
pop
jno
pop
call
mov
mov
iret
mov
lock
cwtl
inc
mov
jbe
sti
and
xor
mov
lock
out
or
push
movsb
pop
or
xchg
nop
jecxz
punpckldq
or
and
push
push
add
clc
and
sub
jnp,pt
jge
stos
je
cli
mov
aam
sti
push
push
fwait
add
icebp
push
cmp
das
shrb
add
push
add
fildl
icebp
cld
xor
ret
xorb
push
and
lret
pop
cmpsb
shr
and
cmc
fiaddl
xchg
faddl
pop
andb
mov
add
lea
leave
cltd
bound
js
adc
jg
pop
jbe
add
jmp
mov
mov
cmp
aad
in
add
pop
or
dec
cmp
adc
jmp
pop
inc
pop
scas
add
push
push
test
int
mov
rclb
subb
movl
mov
mul
or
mov
mov
iret
lcall
repz
sahf
fst
nop
js
repnz
std
dec
gs
mov
aas
add
daa
icebp
cmp
call
inc
push
jbe
add
mov
add
jo
pop
cmp
mov
xor
jnp
fildl
enter
push
loopne
sub
pop
cmpsl
sbb
mov
adc
sbb
pmaddwd
push
add
push
stos
aad
mov
sbbb
aas
add
sub
xlat
or
mov
fstl
adc
int
push
fldcw
adc
es
add
lods
paddd
imul
jns
push
lcall
pop
cs
cmp
inc
rcrb
pushf
call
add
adc
sahf
mov
add
jl
setg
mov
fistpl
loopne
scas
into
cmp
add
mov
adc
ret
push
mov
pusha
push
repz
sub
mov
adc
sub
rorb
cmc
add
cwtl
mov
popf
int
test
mov
fildl
and
mov
xchg
jg
jb
lock
repz
lcall
add
jl
pop
mov
shlb
add
jmp
adc
loop
push
pusha
ss
fcoml
pusha
lds
xorl
std
jp
xchg
add
jg,pn
mov
js
mov
inc
out
inc
imul
pop
sbbl
int
js
xor
in
pop
call
xor
mov
insl
xchg
push
shlb
fdiv
jecxz
push
out
icebp
xor
jo
cltd
add
and
sbb
call
out
fldl
movaps
adc
dec
add
daa
inc
xor
iret
jmp
out
int3
js
inc
int3
push
jl
add
ja
jns
xchg
test
cmp
adcl
and
mov
dec
cwtl
jmp
push
rcr
sahf
sbb
shlb
andb
mov
negl
add
xchg
add
jle
sbb
sub
and
insb
mov
inc
mov
dec
add
xchg
adc
xchg
lock
jge
adc
inc
cmpsb
lea
push
adcl
test
adc
dec
lods
mov
and
sub
mov
insb
jbe
pop
cmp
lock
jne
add
mov
cmpsb
mov
and
push
frstor
push
test
mov
pop
jne
push
push
mov
cmpsb
xchg
pop
cmpsl
cmp
lret
or
aaa
push
inc
jae
loopne
xor
cmp
out
xor
jge
xchg
movnti
push
jno
push
pop
test
cmp
sub
adc
xchg
mov
cmpsb
sbb
cmp
sub
test
xor
jb
xor
je
in
icebp
insl
lret
in
add
imul
jae
enter
jle
cmp
push
std
push
out
jno
jnp
mov
and
inc
xor
mov
fisttpll
adcb
scas
add
js
shlb
loopne
sub
test
icebp
xlat
es
add
scas
inc
or
cwtl
repnz
xchg
and
jnp
pop
mov
mov
add
inc
ss
and
es
adc
push
outsl
pop
arpl
scas
jge
out
mov
leave
icebp
fsubl
and
mov
sti
aaa
inc
add
ljmp
add
test
rcrb
xchg
fiadds
inc
icebp
add
arpl
lret
out
jno
cmp
push
jl
sti
sub
mov
push
out
xchg
pop
test
mov
movsb
cmp
dec
xchg
jo
int3
sbb
pop
stc
jmp
inc
es
pop
gs
add
inc
jae
loopne
or
or
test
adc
ds
icebp
rcrb
es
aas
popf
repnz
rorb
push
push
dec
mov
jb
and
jno
push
add
aam
xchg
mov
pusha
ss
mov
add
pop
loopne
cli
shlb
dec
ja
and
in
mov
or
mov
bound
mov
addr16
imul
in
stos
cmp
aam
adc
les
sbb
sti
addb
sarl
fistpll
and
or
dec
mov
inc
xchg
mov
fdivr
add
movsl
shll
add
pusha
mov
add
pop
pusha
and
and
stos
rolb
movq
pop
xor
pusha
jl
shrb
add
mov
pop
push
push
add
mov
jmp
mov
aaa
dec
rolb
dec
into
add
repz
sar
pop
popl
loop
sub
mov
nop
dec
mov
shrb
adc
icebp
or
lea
push
pop
rclb
mov
pop
lods
test
psubusw
xor
sub
or
jl
and
cs
push
add
test
lea
pop
pop
repnz
pop
lret
mov
or
mov
stc
call
pop
mov
or
jecxz
nop
xor
sub
or
sub
xor
adc
into
lar
jge
pop
stc
add
jbe
jmp
dec
sti
lea
js
push
rcrl
xor
inc
or
pusha
sub
daa
cmpsb
subl
jnp
add
dec
mov
mov
xchg
cmc
adc
adc
sbb
sbb
adc
jb
icebp
adc
push
add
jo
mov
insb
and
inc
dec
jo
pop
push
sbbb
push
dec
sbb
cmp
mov
js
movsb
sbb
adc
sub
pop
cs
je
cmp
aam
jns
add
stc
jecxz
pop
sbb
or
or
or
inc
mov
add
pop
or
lret
mov
pop
dec
mov
or
push
inc
pop
push
cmp
pop
adc
xor
das
sbb
sub
or
dec
dec
pop
arpl
and
xlat
xchg
fiadds
jecxz
and
out
or
adc
adc
dec
mov
cmp
aam
pop
or
adc
mov
sahf
pop
jns
mov
sbbl
out
ret
hlt
iret
stc
jo
or
and
and
cmp
mov
cmp
pop
push
or
mov
enter
fs
push
push
xor
jge
daa
mov
scas
fistps
pusha
adcl
push
popl
pushf
push
or
fs
mov
sub
inc
sbb
sahf
inc
pop
pmulhuw
push
xor
add
lret
popa
push
xchg
arpl
cwtl
daa
cld
xchg
push
aad
testb
out
mov
or
pop
cli
push
jl
or
cmc
stos
scas
add
pop
incl
dec
inc
xchg
aas
dec
imul
ret
jmp
js
push
movsl
imull
das
push
jb
add
jl
pop
addl
insb
xchg
leave
lock
scas
hlt
push
push
sarb
adc
push
jle
add
xor
nop
inc
add
push
in
mov
add
movsl
mov
test
adc
mov
add
aaa
xchg
das
pusha
or
and
xor
adc
clc
sbb
mov
mov
in
imul
adc
loop
add
in
imul
les
mov
or
pop
add
cmp
fsub
xchg
pop
fdivs
add
mov
aaa
sub
scas
aad
mov
mov
mov
mov
popa
cs
add
add
aas
shrl
pop
sbb
test
inc
inc
loop
xor
add
sub
ret
popa
adc
je
jbe
sbb
jo
cmpsb
adc
push
out
in
sbb
cld
fidivl
into
adc
mov
popf
sbb
cmp
rorl
mov
push
js,pt
fadds
popf
xor
cmp
add
cmpsb
jo
sub
mov
hlt
fistl
jo
pop
mov
add
xor
adc
jl
mov
jno
xlat
daa
jp
add
pusha
dec
sbb
xor
sub
adc
adc
push
cmp
sub
call
movsb
aas
sahf
cli
lock
ss
add
pop
arpl
sub
pop
xor
ficoml
es
inc
pusha
hlt
test
sub
and
clc
mov
pusha
popa
call
test
data16
mov
xchg
popf
or
pop
pop
xchg
icebp
inc
push
in
sub
mov
cmp
leave
in
push
fbstp
dec
popa
loop
repnz
xor
and
fwait
mov
repnz
and
pop
popa
popf
jmp
adc
dec
shr
call
and
mov
cmp
add
ret
sub
or
pop
mov
add
enter
jo
pop
sbb
sahf
mov
push
loop
mov
jmp
loop
mov
mov
xor
xchg
or
cwtl
add
cltd
inc
mov
addl
add
cltd
add
jg
loope
sub
push
dec
into
adc
lret
xchg
or
jbe
pop
push
or
adc
or
pushf
cs
imul
sbb
sbbb
mov
mov
cmp
or
ss
repz
incl
out
inc
loopne
rorb
add
loope
push
xor
push
lahf
dec
mov
pusha
scas
adc
addr16
ds
loop
sbb
out
pop
push
push
ss
push
call
adc
sub
or
mov
or
push
dec
in
push
and
jo
or
shlb
push
add
jge
mov
test
scas
push
movb
or
std
out
mov
or
ficompl
add
push
push
mov
or
jne
movzbl
inc
mov
jae
sbb
xor
sbb
dec
mov
dec
imul
and
stos
or
inc
cmp
leave
adc
lcall
push
iretw
sub
mov
adc
sbb
std
lods
in
call
mov
cmpl
xor
imul
inc
test
std
inc
lods
arpl
mov
cwtl
lret
mov
ret
shr
mov
mov
daa
sub
mov
inc
pop
ror
cmpb
rol
shr
test
shrl
pop
cli
mov
push
add
or
or
dec
pop
sbb
mov
push
pop
cmp
clc
or
and
es
in
cli
lret
ret
sub
cmp
push
and
repz
test
fwait
xchg
imull
test
or
fisttpl
mov
pop
jmp
inc
enter
sub
sub
filds
or
in
mov
add
or
insb
jmp
dec
add
nop
and
lea
push
xchg
nop
and
or
jne
sahf
xor
adc
insb
jmp
mov
jle
xor
mov
or
cmp
sbb
iret
pop
sub
sub
cmp
nop
or
ret
xchg
push
pop
mov
decl
imul
xor
daa
dec
sbb
pop
stc
pushl
add
add
xchg
add
jae
pop
lahf
arpl
aas
cmpsb
inc
xchg
mov
ret
dec
and
enter
pop
pop
clc
ret
leave
ret
sbb
mov
sbb
cmpl
mov
ret
mov
jno
nop
insb
add
ljmp
xor
dec
testb
sub
sbb
rcrl
pop
add
pop
xorb
jbe
arpl
test
push
and
jmp
ror
xor
popa
dec
ljmp
lods
adc
inc
and
sbb
xor
shll
push
or
xchg
adc
fs
loopne
mov
add
in
push
add
test
adc
rolb
loope
or
test
std
inc
push
aam
mov
push
mov
mov
clc
shlb
sbb
xor
shll
movswl
xchg
sarb
pop
inc
sbb
or
xor
je
push
push
lds
mov
test
push
sbbl
and
mov
and
xchg
mov
and
add
push
test
jmp
mov
add
call
mov
or
insb
lret
and
adcl
push
pop
call
and
pop
mov
mov
pushf
jno
pop
fwait
adc
andb
in
das
sub
push
iret
call
lods
stos
in
or
pop
fmull
mov
pop
hlt
testb
xchg
xchg
and
sbb
add
pop
rol
pop
mov
mov
call
rcrb
mov
sbb
int
scas
cmp
sbb
call
pop
lods
jb,pt
xor
mov
jge
inc
adc
cli
pop
call
in
sbb
add
sub
pusha
push
insb
fiadds
jo
in
jg
add
mov
call
int3
inc
pop
xor
out
mov
iret
les
call
js
andb
jb
sbb
pop
call
fildl
xor
cmp
xchg
adc
add
dec
dec
pop
sbb
adc
push
sbb
mov
cmp
ret
and
call
int
sarl
and
call
popl
daa
dec
cmpsb
mov
mov
call
pop
mov
pop
jae
dec
andb
inc
xlat
sar
mov
fcom
pusha
fistpll
lods
xor
jnp,pn
popf
dec
out
and
xor
pop
push
sbb
testb
push
adc
addb
fdivrl
pop
ds
and
fisttps
jge
call
fiadds
push
inc
cld
mov
test
adc
pusha
daa
rclb
add
dec
call
xor
xchg
sbb
xchg
aad
xchg
inc
adc
mov
mov
ja
into
mov
mov
loopne
daa
or
imul
loope
inc
pop
mov
popa
mov
mov
es
xchg
aam
std
mov
in
aam
pop
lahf
loope
jnp
sahf
stos
fwait
repz
mov
xchg
or
or
push
loopne
push
lods
cld
adc
mov
lea
xor
adc
pop
fs
pop
rdtsc
and
loope
pop
inc
or
xchg
mov
add
rcr
pusha
or
pop
sub
pop
add
test
arpl
adc
and
mov
mov
sub
sub
mov
jle
inc
iret
sarb
lcall
xor
inc
add
mov
popf
int
popl
xor
shrl
mov
push
mov
icebp
sub
popa
fcmovu
adc
jb
add
adc
cmpsl
sti
adc
stos
dec
pop
push
data16
loope
mov
mov
lods
or
rcrb
popf
jg
ret
lea
and
arpl
fwait
push
sbb
jbe
push
push
add
jge
xchg
push
std
stos
fsubl
lcall
pop
jnp
sbb
fucom
push
lret
inc
sbb
dec
je
add
stos
mov
or
mov
add
lock
dec
lods
mov
stos
out
add
int3
das
pop
mov
pop
test
scas
push
add
mov
jne
pop
mov
dec
xor
int
push
xchg
adc
mov
stc
sbb
dec
xchg
add
push
fsubrp
xchg
fisubrl
movsl
jnp
jo
cmp
mov
pushf
sub
rcrl
outsl
loop
xor
or
and
mov
pop
leave
dec
arpl
gs
rorb
sub
popf
adc
mov
xor
push
jb
in
jns
fs
jle
sbb
xor
inc
xchg
adc
sub
cli
xor
push
mov
dec
jbe
faddl
fsubrl
push
imul
pusha
push
pop
arpl
push
lea
in
ja
jne
stos
jg
push
inc
mov
cmpsb
jp
repz
mov
or
ror
and
mov
adc
mov
dec
dec
jp
andl
cmp
pop
repnz
add
aam
and
lea
and
andl
jl
call
add
sub
inc
jp
cltd
movsb
xor
xchg
dec
mov
jmp
scas
popf
sub
sbb
add
mov
xchg
add
stos
faddl
xor
out
xor
jp
cld
repnz
push
push
mov
ljmp
and
mov
loop
pop
inc
cli
xlat
or
shlb
add
xchg
scas
int
movl
mov
lods
stos
xchg
addl
adc
mov
cld
sti
je
lea
push
push
lock
cmpsl
mov
sbb
pusha
scas
xor
add
sbb
mov
push
mov
das
call
aaa
adcb
lods
dec
and
or
mov
into
sbb
daa
mov
jg
into
mov
xchg
es
clc
pop
test
dec
sub
or
popa
push
dec
ss
sti
add
lds
fcmovb
in
sbb
std
ror
addr16
cmp
mov
xchg
out
inc
pop
pop
setb
xchg
inc
faddl
sbb
mov
pop
pop
jp
add
inc
flds
adc
loop
les
jp
or
out
jecxz
sbb
and
mov
add
lcall
sbb
sub
mov
add
or
push
repnz
jnp
xor
xor
add
and
inc
repnz
and
lret
nopl
dec
je
lds
shrl
cmp
mov
scas
lcall
inc
jo
pop
push
fisubs
mov
xchg
add
adc
mov
and
mov
cltd
cltd
and
xchg
cmp
idivl
mov
push
in
iret
ret
das
jne
cli
pop
fs
mov
push
push
shrb
inc
and
aas
push
mov
lahf
roll
and
adc
push
pop
mov
xchg
jge
mov
mov
cli
and
mov
push
notb
shlb
dec
addl
mov
or
js
add
pop
out
dec
fisttpl
mov
sbb
pavgb
out
jp
repz
inc
popa
jo
mov
lods
nop
jle
sub
cwtl
cmp
aas
add
subb
jnp
stos
orb
sub
scas
orl
jecxz
rorl
addb
add
lods
inc
out
jae
cmpb
push
in
js
adc
xor
jnp
pop
sub
pop
pusha
testl
cmp
add
lods
push
sarl
mov
mov
pop
jmp
aad
or
test
adc
adc
cmp
movsl
sbb
mov
hlt
push
inc
mov
xor
fmulp
mov
lea
js
jno
leave
xlat
movl
insl
push
inc
test
xor
push
pop
add
inc
pop
pop
mov
in
pop
dec
push
push
rcl
xchg
insl
push
mov
cmc
adc
adc
xor
cmp
outsb
clc
mov
push
ljmp
adc
insl
adc
xorb
and
sbb
gs
int3
xor
push
ljmp
xor
roll
add
hlt
nop
jmp
sbb
stos
or
rol
xor
clc
inc
jge
or
mov
adc
inc
add
jge
mov
ja
and
push
xor
push
push
filds
sbb
rorl
shrb
fdivr
scas
add
mov
add
ret
leave
es
adc
jl
scas
faddl
add
mov
popa
fsubl
add
push
cmp
lea
adcb
lcall
loope
gs
dec
shll
add
stc
les
xor
adc
jp
add
mov
mov
add
es
adc
ljmp
inc
sti
mov
push
adc
dec
inc
add
jbe
hlt
add
sti
and
mov
repz
inc
xor
adc
lds
insb
sbb
and
rcll
outsb
fisttpl
mov
xor
mov
inc
test
xor
mov
xor
fcompl
mov
roll
add
mov
jp
pop
icebp
mov
leave
mov
les
out
call
fcmovbe
xchg
pushf
xchg
mov
mov
cmp
test
int3
dec
dec
fistpl
inc
add
xor
or
push
push
cmp
mov
xlat
enter
stc
sbb
cli
lahf
icebp
addb
or
add
orb
pop
mov
lods
mov
add
pop
aam
and
out
cmovnp
mov
cld
xchg
fldcw
push
out
lret
inc
ret
movsl
xor
inc
pop
mov
cs
and
fdivrl
repz
pop
mov
es
mov
nop
daa
leave
or
xchg
and
pop
jg
xchg
adc
cmp
rclb
push
lahf
mov
xorb
push
dec
pop
inc
mov
daa
xchg
rcrl
lods
in
and
xchg
sbb
mov
pusha
sub
dec
dec
or
mov
mov
mov
jae
stos
push
xor
stos
and
fs
arpl
sbb
call
add
stc
jecxz
mov
pop
hlt
sub
pop
and
add
ret
mov
popa
repnz
mov
push
ljmp
add
and
popa
pop
push
push
xor
add
xchg
mov
mov
add
inc
pop
sahf
jne
cmp
popl
cmc
push
push
sub
in
cmp
jle
into
fsub
addl
pop
pop
push
dec
mov
sbb
psadbw
push
or
lea
jo
and
test
push
xor
mov
fbld
lcall
adc
dec
fldl
mov
mov
sub
sbbb
sahf
push
mov
and
cmp
movl
out
sub
push
lret
xchg
or
fs
cwtl
loopne
mov
outsl
inc
pop
jmp
testb
out
loope
jmp
xor
add
icebp
xchg
sub
ftst
push
xor
jno
int3
add
cmp
xchg
pop
int
out
ss
sub
push
sub
and
add
sbb
mov
jl
ret
mov
xchg
lock
mov
ja
and
dec
ret
and
push
mov
je
inc
cmp
pop
lock
mov
push
fisttpl
push
les
adcl
jbe
or
out
or
lds
ss
add
testb
fdivs
xchg
xchg
bound
adc
or
divb
loop
or
sbb
and
leave
or
fcoms
adc
add
ljmp
cmpsl
jns
inc
jg
dec
je
add
test
js
orb
or
mov
mov
loopne
adc
cmp
jge
mov
movsb
popf
or
sbb
stos
inc
popa
mov
arpl
inc
ss
fldt
popf
sbb
cmp
ret
sub
or
sbb
push
stos
mov
ds
adc
outsl
or
nop
jae
mov
insl
and
or
je
add
jbe
fiadds
mov
popf
test
mov
push
sbb
push
faddl
ja
call
adc
jl
std
xor
mov
xor
push
cmp
adc
and
pop
and
xchg
add
shl
imul
outsl
sub
mov
pop
aam
adc
lock
pop
repnz
pop
int3
adc
mov
lds
cmp
and
add
mov
pop
xchg
or
or
cmpsl
jl
mov
je
or
pop
loopne
add
xchg
cmpsb
adc
mov
lret
inc
xor
push
repnz
or
into
add
std
sbb
lret
dec
or
adc
aas
cmp
das
pusha
mov
add
movsl
jle
jnp
jmp
shll
mov
jge
in
sub
hlt
pop
lock
mov
mov
sbbb
mov
cwtl
add
repz
sbb
dec
and
fstpt
jbe
jecxz
ret
sbb
inc
xor
push
loope
jp
add
fimull
jle
and
popa
test
fadd
xor
sbb
xchg
sbb
jnp
repnz
mov
enter
adc
and
jge
dec
shll
out
jecxz
cld
jg
cmp
sbbb
xchg
inc
fisttps
add
push
in
lea
out
pop
pop
push
pop
enter
xor
fcomp
into
and
nop
call
mov
mov
jle
mov
loopne
dec
and
imul
cmp
popfw
or
mov
outsl
and
push
insb
pop
imul
xchg
imul
add
push
pop
cld
inc
rcrb
jb
push
hlt
ficoml
pop
add
mov
stos
cmp
mov
add
call
mov
call
ljmp
sub
leave
cmp
in
je
add
scas
movsl
or
int
and
lcall
fs
lcall
push
jb
pop
jp
cmp
es
adc
daa
jmp
cld
push
popa
out
repnz
add
mov
pushf
add
mov
rolb
fistpl
loopne
cld
mov
divps
pop
or
clc
imul
orb
pop
push
fldenv
push
adc
push
lods
aad
loop
jecxz
xlat
jp
mov
pushf
test
or
jle
addl
push
stc
das
add
xchg
daa
cli
inc
mov
stos
add
ljmp
add
rclb
out
pop
dec
cwtl
inc
inc
and
add
les
sbb
cmp
add
jecxz
mov
pop
mov
mov
jo
addb
popa
in
add
movsl
mov
add
fadd
mov
push
mov
mov
popa
pop
ret
sbb
xchg
out
mov
ffree
lea
sub
push
scas
pushf
clc
rcl
inc
dec
pop
vpshaq
in
pop
xchg
sbb
ja
pop
call
add
add
pop
inc
xchg
pop
dec
jmp
std
dec
mov
jno
pop
loope
push
test
xor
and
fisubl
mov
mov
inc
xor
mov
mov
lcall
inc
cmc
mov
lods
scas
aad
int3
cmp
push
popa
mov
add
test
jno
push
adc
mov
and
mov
icebp
inc
mov
adc
fdivl
add
xchg
cmp
pop
stc
mov
imul
insb
fsubl
fmuls
test
and
out
xlat
cmpsb
lahf
clc
rclb
loop
or
sarl
add
sub
sbbl
jl
or
cmp
js
cltd
adc
adc
inc
daa
push
dec
sbbb
cmp
fwait
sbb
pop
cmp
xor
xchg
nop
repz
test
pop
pop
aam
push
stos
xchg
pop
cwtl
je
subl
mov
loope
imul
mov
adc
push
clc
pop
push
loope
test
jecxz
sub
fcmovb
test
pop
rorl
pop
adc
imul
mov
push
negl
in
lods
mov
jb
sbbb
or
enter
dec
push
mov
fsts
inc
in
sti
xor
rcrl
sub
dec
lret
in
imul
sar
movswl
out
jns
mov
mov
stos
add
jo
mov
faddl
sti
adc
add
mov
movhps
je
repnz
jg
cmp
add
and
xchg
sbb
xor
sbb
lcall
inc
sahf
adc
cmpsb
jg
jb
aad
ret
inc
rcrb
shl
ret
repz
xchg
sbb
inc
loop
cmp
mov
jecxz
mov
mov
addr16
pop
sub
or
test
jno
sti
scas
push
gs
std
add
rorb
cs
inc
fcmovb
xchg
adc
popf
aam
mov
xchg
adcb
add
cmp
lret
popa
jmp
sub
sub
and
sub
xor
jne
enter
push
inc
inc
aaa
test
mov
pop
int3
pop
dec
adc
adc
scas
pop
in
and
out
add
sahf
mov
mov
fsubl
pop
pop
and
fisubs
or
sbb
adc
xorb
filds
pop
and
mov
xchg
fstps
ret
mov
cmp
dec
cmp
or
imul
adc
lret
sbbl
inc
lret
insb
je
movsl
into
add
pop
push
cld
mov
or
jbe
pusha
shlb
cmp
adc
in
xor
sbb
ret
xorb
sbb
inc
dec
daa
mov
sub
js
add
xchg
mov
popf
pop
pop
jp
add
mov
xchg
scas
pop
js
or
and
pusha
add
shll
shll
aam
stc
mov
sbb
test
mov
daa
orb
mov
or
pushl
jne
hlt
jle
push
das
jbe
movsl
push
leave
pop
dec
rol
jae
fwait
stos
test
aas
xchg
inc
test
pop
movsl
dec
aam
fcoml
pushf
int3
xlat
sub
mov
test
xor
jp
xchg
insb
adc
out
in
rorl
mov
aad
movsl
shrb
jg
adc
outsb
or
cs
bnd
shl
and
mov
xchg
and
jl
mov
shll
and
adc
jle
adc
or
jo
ss
pop
mov
js
scas
add
popf
lods
roll
push
inc
sbb
and
xor
in
add
pushf
mov
add
mov
neg
pop
adc
nop
mov
mov
or
inc
js
in
push
pusha
sbb
add
inc
cmc
popf
mov
in
in
push
pop
cli
or
inc
push
sub
andl
mov
out
movsl
ljmp
cs
ds
fwait
or
xor
add
mov
sti
add
push
repz
mov
and
popf
sbb
push
add
rorl
es
incb
into
adc
jl
push
testl
sub
pop
in
mov
stc
inc
mov
outsl
dec
inc
dec
lret
pop
pusha
inc
push
test
xlat
popa
sub
jge
popa
inc
adc
sbb
xchg
pop
imul
xchg
sbb
icebp
int3
cld
loope
ss
popa
cwtl
lret
addl
jb
sbb
xor
sbb
jp
addb
mov
push
lds
sbb
mov
loopne
sbb
daa
loopne
inc
mov
mov
sahf
dec
mov
in
push
shrb
or
jmp
xchg
lock
lea
inc
lea
xchg
cmp
js
mov
mov
mov
rcll
cmp
jae
add
dec
call
inc
out
aaa
popf
sti
push
loope
das
mov
dec
pop
popf
sbb
fisttpll
mov
mov
scas
rolb
add
movsl
mov
mov
rsm
lds
les
test
mov
je
xchg
mov
jmp
inc
int
je
jmp
inc
mov
popf
aaa
orb
mov
imul
xchg
addr16
shrl
push
dec
push
mov
xchg
push
call
xchg
cmp
mov
pop
and
pusha
mov
negl
push
lods
adc
lock
jmp
aad
les
pop
and
pushf
sub
xchg
mov
lahf
mov
xchg
adc
pop
mov
sbb
int
rorb
push
adc
dec
stos
shll
and
ljmp
xchg
cwtl
sub
add
cmp
scas
rcll
sub
movsl
out
nop
jnp
lahf
xchg
nop
out
pop
xchg
and
repnz
or
shll
dec
das
mov
and
sub
je
mov
nop
imul
int
sub
xchg
loop
lret
sti
inc
fwait
sbb
loopne
rcrb
out
les
popf
clc
pusha
fdivs
loop
jp
lock
aas
lods
lret
mov
lds
out
loopne
push
lret
pop
rcr
push
pusha
mov
fisubl
pop
or
add
fldt
sti
cmp
and
mov
xchg
in
mov
orb
add
fwait
xor
add
push
mov
mov
test
popf
and
sti
mov
xor
enter
mov
leave
call
call
sahf
fcompl
xor
or
add
xchg
xlat
fcompl
xor
adc
int3
imul
add
dec
dec
cmpsl
daa
fiadds
insl
jp
xor
and
mov
pushf
or
mov
pusha
and
adc
insb
or
xchg
push
int
mov
inc
mov
adc
iret
inc
add
push
push
js
lods
pop
das
pop
nop
in
arpl
xchg
mov
adc
pop
jmp
mov
jmp
dec
xchg
mov
test
lods
cmp
cmpl
das
ret
test
push
pop
stc
cmp
test
jecxz
test
mov
mov
data16
mov
rcl
mov
test
pop
imul
packssdw
leave
and
mov
jp
or
loope
mov
out
push
jbe
add
in
cld
push
and
popa
jmp
add
cmp
out
sbb
mov
sbb
dec
sub
mov
mov
jl
or
incb
jnp
subb
jb
inc
jp
xchg
or
cmp
jne
add
sarl
sbb
or
or
in
mov
xor
adc
addb
cs
inc
jne
xor
adc
lahf
movsl
pop
add
adc
inc
xchg
std
sub
cs
popf
add
js
lret
add
jmp
jecxz
dec
leave
mov
in
mov
inc
clc
or
xor
repz
inc
movsl
dec
les
push
lea
cmp
inc
push
repnz
pop
nop
adc
sub
icebp
cmp
loope
adc
sti
lods
cli
fisubs
cmpsl
shr
jo
dec
add
mov
mov
repz
inc
test
loop
adc
push
cli
add
pusha
ss
pop
shrb
mull
mov
xor
add
push
xor
pop
mov
mov
sbb
mov
and
iret
in
inc
mov
je
pusha
or
scas
stc
adc
xchg
add
fmuls
mov
cmp
cmpsl
jmp
push
adc
jnp
testl
rcll
fnstsw
push
add
out
jle
aas
roll
adc
cmp
add
mov
sarb
xor
and
push
adc
and
shrb
cmp
mov
fisttps
cmpb
mov
out
jp
sbb
inc
add
jmp
out
xor
daa
fwait
dec
inc
push
sbb
mov
fs
negb
faddl
jmp
jns
cmpsb
negl
je
or
and
cmp
dec
adc
sbb
ret
leave
cmpsl
rcll
pop
mov
and
ret
pop
and
jne
add
mov
cs
jle
cmpsb
inc
mov
xor
pop
push
out
jp
mov
mov
push
inc
pop
and
sbb
popa
inc
mov
mov
fistps
push
adc
push
push
xchg
xor
push
pop
pop
inc
decb
iret
nop
sub
or
push
push
pusha
loopne
dec
test
add
push
push
test
sub
jnp
imul
sub
shl
mov
les
sbb
scas
fcmove
or
mov
and
jp
push
mov
clc
loope
nop
test
xchg
add
cmpsb
push
mov
mov
pop
mov
and
stc
jmp
mov
out
add
in
inc
les
and
cmc
xchg
ja
loop
dec
xor
addb
sub
and
or
or
jg
lds
xchg
mov
sti
jnp
fldl
xor
adc
dec
sbb
cmp
neg
inc
movsl
add
mov
xor
test
das
in
push
lea
jg
in
cmp
and
push
mov
cmp
sbb
cs
cmp
lds
call
jge
xor
testb
add
lret
test
add
add
push
push
pop
push
pop
andl
jg
ja
fmull
inc
pop
add
add
and
cmp
xor
daa
mov
and
dec
nop
pop
iret
mov
add
ljmp
imul
cli
adc
lret
pop
nop
mov
adc
xor
popf
cmp
pop
sub
int3
inc
popf
scas
lret
jle
jmp
arpl
adc
pop
popa
mov
out
dec
idivb
add
and
lock
inc
cmp
sahf
dec
xchg
dec
das
or
mov
out
jns
popa
dec
or
shll
js
mov
ja
mov
setl
xchg
jo
test
data16
mov
lods
pop
mov
adc
adc
mov
mov
pop
pop
test
cmpsb
aam
lahf
mull
scas
aaa
leave
mov
fldenv
adc
add
and
and
or
testb
and
mov
or
or
les
mov
add
imul
add
mov
daa
inc
cltd
ds
popf
sub
adc
fsubrl
fcomi
pushf
inc
jb
mov
push
sub
pop
lahf
sbb
imul
out
push
pinsrw
pop
in
test
push
ror
cs
adc
stc
mov
or
jb
push
movsl
fsub
imul
xor
xchg
cmp
push
lcall
inc
jnp
cli
stc
das
adc
fsubs
int3
mov
icebp
add
sub
adc
push
mov
pop
clc
cmpsl
cmp
mov
dec
rcrb
mov
rorl
mov
repnz
add
sbb
in
pop
add
mov
fs
cmp
add
fisubrl
dec
push
sub
stc
in
xor
xchg
adc
stc
ljmp
xchg
adc
mov
out
addr16
mov
adc
xchg
xchg
cltd
inc
and
dec
or
fcmovbe
repnz
push
ljmp
loope
pop
ds
jecxz
fwait
dec
test
test
mov
flds
jno
in
pop
test
xchg
mov
dec
xchg
mov
aad
mov
mov
pop
jno
out
adc
popf
mov
fadds
test
nopl
dec
pop
inc
gs
inc
in
and
test
inc
push
ss
and
addl
jne
imul
test
lds
mov
shl
test
test
icebp
movsl
jns
and
adc
cmp
pop
std
pop
mov
cli
jno
xchg
inc
jmp
adc
pop
movsb
add
add
test
dec
xor
movsb
orb
call
add
pop
cmp
xchg
mov
mov
pop
jecxz
dec
cltd
cmp
inc
push
pop
mov
adc
in
xchg
or
insl
cmpsb
std
mov
cmp
add
xor
mov
scas
clc
ljmp
je
push
inc
mov
popf
jb
inc
fucom
push
xchg
testl
stos
inc
pop
sub
add
add
sarw
fld
and
xor
sub
sbbl
idivb
lret
in
or
cli
add
leave
mov
stos
sub
popa
adc
jmp
adc
jg
jae
js
pop
pop
lds
scas
inc
sahf
jb
inc
in
dec
inc
inc
add
sub
add
pop
sti
mov
jl
cmp
mov
mov
je
pusha
xor
call
subl
mov
es
add
push
and
add
add
mov
seto
jns
adc
lds
mov
mov
lods
int3
inc
add
pop
jmp
pushf
push
push
nop
dec
xchg
sahf
sbb
push
or
and
test
out
and
add
sbb
xchg
pop
pushf
fwait
and
add
in
cld
xorb
pushf
mov
rcrl
or
inc
xor
inc
sbb
cmc
daa
sti
pop
jns
fwait
jge
lret
cmpsb
mov
cmpb
mov
inc
or
and
cmpsl
sti
sar
cmp
mov
jb
scas
aas
das
and
aad
and
ss
xor
mov
add
xlat
ljmp
pop
stc
xor
and
mov
cmp
sbb
ficompl
add
je
pop
rep
ficomps
shlb
xor
mov
sub
mov
sbb
inc
js
popa
es
mov
jge
sub
or
and
or
sarl
sbb
pusha
scas
add
cmp
or
mov
filds
xor
jo
sbb
addl
jmp
pop
cmp
out
dec
lock
dec
rolb
jle
dec
add
or
mov
push
cld
and
call
xchg
stc
jl
mov
sub
add
enter
cld
pop
lcall
sbb
popa
push
mov
mov
addl
or
shlb
sbb
idivl
dec
popa
cli
les
lahf
sti
popf
push
mov
daa
mov
and
pop
mov
push
xor
mov
pop
fs
js
movsl
int
test
out
popf
and
addl
pop
dec
mov
mov
add
lea
jp
pop
mov
mov
add
popa
adc
add
in
lcall
sar
push
lds
sub
cmc
mov
add
jle
repnz
daa
into
fs
in
movsb
idivl
cmovne
add
adc
rolb
lret
sar
cmpb
jl
clc
push
je
or
outsb
sbb
cmp
mov
push
push
mov
pop
or
ss
mov
and
fmuls
jmp
push
roll
pop
dec
pop
jp
cmp
ret
mov
cld
xchg
loopne
jnp
addl
mov
inc
jbe
andb
mov
xchg
adc
shlb
and
xorb
ja
xor
mov
add
sti
mov
mov
je
push
pop
sub
add
add
stos
xlat
in
pop
add
xor
add
shlb
xor
push
sti
cmp
sbb
xor
clc
dec
mov
cwtl
jmp
addl
call
lcall
mov
add
pop
ljmp
sub
ss
add
jl
cmp
call
jge
out
movb
popa
in
push
jnp
and
daa
mov
inc
mov
pop
push
mov
rorl
push
pusha
jl
fdivrl
mov
js
dec
or
lods
push
ffreep
xor
sarb
imul
in
popf
and
sbb
add
cmp
adc
mov
sbb
xchg
jns
imul
fisubrs
cs
and
pop
mov
cmp
movsl
cmp
pop
mov
fcomi
js
jecxz
fnstenv
mov
popf
and
xor
xchg
addr16
ljmp
jle
pop
xor
jne
adc
lods
pop
inc
mov
leave
mov
adc
int3
mov
xchg
lds
cli
aad
cmpsl
js
xchg
add
fisttpll
mov
or
mov
sbb
add
and
sub
push
cmc
push
dec
out
dec
fists
mov
or
pop
aaa
out
mov
stos
push
fld
add
pop
fidivl
adc
or
mov
dec
aas
inc
dec
repnz
aam
push
inc
or
add
clc
cmp
inc
ret
icebp
pop
stc
adc
sub
pop
jmp
call
sbb
jbe
or
fstps
mov
pop
hlt
dec
add
and
insl
cmovb
or
inc
or
shrl
mov
ss
mov
jbe
enter
push
gs
nop
mov
cld
add
dec
push
scas
and
pop
hlt
loope
pop
test
stc
and
cmp
setno
call
cmp
jl
aam
jne
adc
sub
into
adc
dec
fwait
and
add
and
jp
hlt
or
ljmp
cmpsl
sbb
lock
shlb
xchg
add
lods
pop
sarb
push
scas
mov
les
cli
stc
nop
push
and
mov
fnstenv
cmovs
mov
push
push
fld
jle
xor
and
popf
andb
jnp
es
popa
dec
rclb
mov
test
pop
lods
cmp
add
addr16
andb
xchg
sub
inc
xor
mov
enter
out
pop
sub
adc
jae
adc
dec
out
mov
sti
add
cmp
fcomi
shr
inc
imul
lds
mov
add
cmp
and
pop
sbb
jnp
adc
xchg
test
xor
add
mov
mov
jp
cmp
sbb
fiaddl
pusha
mov
imul
jl
sub
jmp
add
popf
jge
in
daa
int
aas
lret
inc
cmp
ss
pop
pop
xchg
mov
and
xchg
mov
jae
mov
mov
test
mov
in
test
sbb
sub
lret
or
movsl
cmc
das
cmpsl
mov
inc
les
pop
push
sti
jo
cs
pushf
mov
rorl
clc
imul
iret
ljmp
cmc
clc
je
sub
pop
movsl
mov
xor
cwtl
leave
out
add
out
repz
jbe
rcrl
sub
mov
jb
xor
sbb
pop
ret
push
sar
pop
adc
pop
dec
shlb
add
cmp
clc
out
pop
mov
test
jge
test
add
hlt
loop
add
mov
rorb
popf
mov
xchg
sbb
das
and
xchg
push
adc
pop
sub
jl
les
add
jmp
and
cmp
repnz
mov
sub
cli
jo
xchg
mov
push
jecxz
adc
mov
add
into
and
rclb
sbb
lahf
cmpsl
data16
mov
push
pop
movl
mov
mov
imul
fists
mov
push
icebp
shrl
jne
shrl
mov
mov
dec
pop
add
clc
jp
sbb
inc
idivl
outsl
lcall
dec
inc
lea
lret
or
adc
mov
in
lret
xchg
dec
fwait
jle
mov
adc
mov
loop
add
push
inc
mov
in
std
xchg
xchg
icebp
scas
sub
in
cld
lahf
cmp
test
xor
mov
leave
mov
dec
iret
mov
dec
mov
xor
scas
pop
fstpl
adc
sub
sub
mov
loop
jge
mov
fimuls
add
movsl
imul
fsubr
jnp
call
sbb
aas
popf
inc
loop
mov
push
add
repnz
lret
or
addr16
pop
sarb
add
and
jmp
and
xchg
lods
mov
rclb
and
sbb
push
jp
add
ss
lock
push
mov
mov
and
pusha
cmc
loope
fnstsw
aam
call
jae
inc
cwtl
mov
and
nop
inc
scas
push
mov
into
push
xor
fadds
pop
loope
ret
cmc
sbb
movb
mov
and
es
pop
movsl
dec
push
fcmovnbe
js
inc
add
push
cld
orb
lcall
pop
or
push
inc
mov
push
mov
outsb
loopne
lcall
out
cmp
add
insl
pop
mov
add
movsb
jb
mov
xchg
add
js
gs
adc
ret
cs
mov
jge
mov
cmc
cmpb
xchg
mov
or
add
jbe
or
lahf
divps
dec
lods
cmp
sarb
xor
xchg
dec
add
jl
inc
add
and
or
xchg
cmp
mov
xor
inc
scas
mov
add
mov
add
lock
adc
sbb
pop
adc
mov
dec
fldcw
cmp
jb
movsb
nop
ficomps
test
gs
pop
mov
adc
sahf
pop
ret
sub
dec
add
or
sbb
jbe
dec
jns
cmpsl
int3
in
mov
pusha
in
xchg
xor
ljmp
loop
icebp
inc
insb
sarl
enter
and
sub
icebp
rcl
cmc
popa
or
pop
adc
dec
inc
inc
pop
sub
xchg
sbb
dec
xor
jo
iret
or
fs
dec
aaa
notb
adc
mov
pusha
xchg
sbb
popa
cmp
sbb
jmp
mov
in
aas
xchg
and
sub
lods
xor
mov
andb
in
sub
cld
sub
scas
cmp
incl
adc
add
sub
es
repnz
and
daa
test
pop
idivb
xchg
aaa
sbb
mov
inc
out
dec
out
ss
mov
data16
cmp
scas
ds
ds
mov
xchg
jle
cmp
lahf
nop
fs
inc
mov
mov
jo
gs
jo
ficompl
les
mov
jno
aam
jae
movsl
xchg
sub
dec
adc
test
in
inc
mov
jbe
test
push
pop
push
mov
xor
in
push
mov
inc
jno
pop
fnsave
or
sub
lea
sub
add
movq
and
ja
mov
xlat
and
popf
fs
sti
je
fimuls
loope
or
mov
mov
int
mov
roll
mov
dec
add
xor
in
fldt
insl
fadds
mov
add
repnz
mov
inc
sti
sbb
insl
lods
add
into
jo
fucom
push
add
sbb
test
movhlps
cmp
cmpsl
fcoms
int
scas
int
push
adc
data16
add
ja
jb
popa
xor
or
push
mov
lock
mov
cli
mov
jbe
push
scas
jg
mov
shrl
loopne
adc
cmp
sbb
xchg
mov
jbe
xor
daa
mov
lea
mov
jg
sarl
addr16
lods
xor
stos
fadds
and
adc
add
jmp
popl
out
sub
cmp
mov
dec
cmp
xchg
insl
cmpsb
xchg
mov
mov
test
add
and
add
jg
data16
push
bound
dec
ret
popa
and
negb
loopne
mov
adc
sub
fistl
sbb
inc
or
sti
or
jno
jbe
xchg
push
out
sahf
repz
or
in
popf
xor
iret
add
mov
mov
xor
dec
xchg
mov
cli
arpl
mov
insb
lock
iret
iret
lret
push
ljmp
nop
mov
or
adc
enter
or
sbb
lock
mov
pop
push
pop
push
pop
popa
sbb
jg
sub
sub
fidivrl
or
jno
jae
test
pop
add
jmp
cmc
adc
andl
pop
pop
testb
xlat
and
sub
jp
adc
pushf
cmp
outsl
dec
cmp
mov
int3
mov
pop
sub
mov
add
int
fcoms
jecxz
push
adc
insl
sti
insb
add
jmp
mov
dec
jle
xchg
test
loopne
jo
add
stos
mov
xchg
sarl
mov
or
adc
decb
das
mov
in
mov
sbb
popf
aam
popa
mul
mov
cmp
fwait
cli
lret
fcomps
pop
xor
mov
stc
fsubrl
or
add
jns
jle
js
or
pop
push
out
add
cmp
lret
sub
add
iret
jno
dec
pop
mov
push
popf
lcall
outsb
popa
cmp
jge
xchg
loopne
mov
or
ja
xchg
sarb
in
sbb
push
repz
test
push
jb
push
ret
add
mov
dec
jg
test
and
icebp
xchg
pop
push
stc
xor
mov
jl
cmp
mov
enter
rcrb
jecxz
or
shlb
test
fwait
push
aaa
cwtl
testl
daa
adc
sub
add
jecxz
dec
popa
cmpsb
mov
pop
pop
mov
xchg
adc
aas
lods
pop
cmc
hlt
pop
cmp
xor
in
aas
mov
lods
sub
sub
push
jbe
jno
imul
shl
and
pop
cwtl
xor
rclb
add
ja
adc
movsl
dec
es
adc
cmp
incb
adcb
int
sub
mov
mov
pushf
and
and
adc
xchg
jnp
adc
test
shr
xor
mov
mov
inc
pop
jae
orb
or
adc
jo
pop
pushf
cmc
add
cmp
jo
mov
and
fdivl
rcrb
fnstsw
into
jge
fldenv
mov
pop
push
movsl
jnp
push
stc
ljmp
jmp
adc
push
add
inc
push
mov
dec
outsb
loopne
xor
imul
loop
mov
or
or
fcomps
xchg
dec
and
stc
test
dec
or
cmp
push
shl
push
aam
add
dec
jg
repnz
cmp
das
sub
pop
mov
or
cmp
mov
mov
xor
jge
outsl
in
lret
mov
mov
daa
jnp
add
add
fsubr
and
cli
dec
popf
mov
adc
cmp
lods
jns
out
push
imul
pop
xchg
xchg
nop
addr16
add
cld
xchg
aas
add
arpl
push
inc
cmp
js
and
push
pop
pop
jle
xchg
push
inc
xor
cmp
xorl
addb
sub
pop
mov
fsubl
ret
daa
mov
dec
mov
and
sub
dec
and
movsl
enter
sahf
fisubs
mov
mov
adc
outsl
jno
adc
jne
negb
mov
lock
dec
sub
daa
in
inc
xchg
mov
popf
pop
mov
jmp
jo
pusha
and
shll
mov
insb
add
mov
data16
mov
mov
pushf
mov
scas
add
xor
xor
popf
pop
dec
pop
push
sbb
popf
jecxz
add
push
jmp
add
aas
mov
add
mov
pop
shlb
testl
push
rol
jge
inc
xchg
popf
mov
adc
push
fbstp
push
xchg
pause
not
add
inc
repnz
pop
or
in
xchg
mov
mov
sbb
insl
out
adc
inc
and
pop
inc
movsb
sbb
mov
adcb
sbb
or
in
sahf
and
mov
bound
orb
push
and
mov
sub
fwait
ja
xor
aaa
repz
mov
loop
and
loop
sub
xchg
push
xchg
aas
call
mov
dec
xchg
push
mov
add
inc
rolb
lods
xchg
push
sub
nop
les
inc
outsb
jl
xor
push
loopne
sub
scas
xchg
add
push
cmpsb
push
sub
xor
or
inc
or
cmp
inc
shl
jmp
jg
shlb
push
shl
dec
adc
sahf
or
ljmp
and
int
add
stos
jae
push
mov
mov
popf
xchg
dec
add
fisttpll
xlat
jbe
push
adcb
add
xor
add
or
sbb
jo
sub
sti
outsl
sub
or
ss
jb
pop
adcb
adc
testb
lea
xor
arpl
nop
stos
pop
fsubr
ret
pop
inc
sbb
mov
add
push
mov
aad
jle
adc
es
xor
rolb
loopne
ja
cmp
sbb
jne
add
ljmp
mov
sub
cld
ljmp
dec
jmp
or
popf
push
rolb
dec
mov
or
enter
jmp
push
fs
sarb
xor
ss
inc
and
subl
daa
add
and
fmul
sbb
add
test
and
mov
seta
adc
sub
push
mov
scas
shl
cmc
xchg
pop
adcb
sti
inc
ret
pop
push
scas
add
jo
lret
mov
sub
das
mov
sbbb
das
mov
pop
dec
popa
mov
dec
lcall
aam
sarb
jmp
pop
or
xor
pop
in
mov
std
lods
inc
mov
push
add
dec
push
leave
add
fstpl
sub
xchg
int
shl
sub
mov
js
test
bnd
mov
das
add
stc
xchg
xor
mov
js
popf
xor
xor
gs
and
arpl
loope
inc
mov
or
inc
add
scas
sbb
fistpl
xchg
jno
add
mov
pop
cmp
jp
pop
outsb
add
call
mov
test
outsb
mov
lock
mov
loope
test
jno
xchg
jb
and
lds
cwtl
and
sub
rdtsc
adc
data16
push
mov
daa
clc
mov
mov
jl
fiadds
sbb
test
or
in
adc
subb
adc
xchg
stc
add
mov
add
clc
adc
adc
ljmp
lahf
ret
xchg
nop
push
cmovp
faddl
imul
rcrb
mov
cmp
adc
jo
cltd
xchg
fiaddl
xor
lret
dec
jo
jb
push
xlat
mov
xor
xor
push
or
aam
pop
push
bound
mov
pushf
and
xor
and
adc
sub
jo
pop
mov
and
mov
mov
popf
cwtl
in
leave
dec
pop
test
sub
mov
repz
xor
jno
cmpl
mov
bound
das
mov
jle
stos
xor
ret
push
call
out
testb
or
dec
comiss
mov
loop
pop
cmpsl
lds
fiaddl
aaa
push
cltd
mov
cs
cmpsl
mov
cmpsl
aas
mov
pop
outsl
mov
shll
push
adc
repz
pop
test
dec
adc
jl
adc
add
or
mov
sbb
das
or
cmp
jns
cs
jge
in
mov
int
dec
dec
add
cmpsb
sub
mov
xor
pop
insl
mov
js
pop
rcrb
pop
movsl
inc
and
mov
jb
mov
filds
ss
popa
insb
dec
add
xchg
push
mov
fwait
jp
xor
in
cwtl
rclb
imul
cmp
pop
ds
sub
repz
push
push
push
sbb
cmpb
fcompl
stos
scas
repnz
xchg
push
mov
outsl
cwtl
mov
xchg
enter
push
popa
add
add
mov
mov
aad
inc
pop
iret
lods
in
add
pop
adc
dec
jnp
dec
daa
lret
and
cmpsb
in
pusha
test
add
cmpsb
mov
xchg
fcoml
lret
push
and
jne
lea
outsb
mov
mov
inc
nop
das
hlt
mov
add
mov
sub
inc
add
cmp
xchg
pushf
sbb
aaa
daa
sbbb
jb
pop
faddl
rcll
pop
add
mov
mov
xor
inc
mov
jl
ljmp
cld
pop
andl
dec
sbb
inc
daa
es
imul
adc
add
fwait
pop
jns
cwtl
hlt
xchg
inc
push
push
pusha
push
dec
pop
cwtl
icebp
pop
bound
add
mov
pop
add
pop
xchg
push
jno
pop
xchg
cltd
fisubrl
std
orb
arpl
xor
ret
mov
lods
fisttpl
push
sbb
jg
pushf
dec
imul
out
mov
and
add
leave
pop
or
loop
mov
sbb
or
in
sbb
jo
jbe
xchg
jecxz
std
mov
sub
jge
add
test
mov
jg
in
ljmp
jmp
mov
dec
dec
xchg
adc
pop
mov
lea
xchg
pop
pusha
repz
ja
popa
out
std
sbb
push
add
or
movb
movsb
lret
and
lea
push
ds
sbb
mov
cwtl
mov
fists
dec
sahf
adc
add
and
xor
pusha
push
js
leave
add
cmp
adc
add
add
popa
xchg
adc
adc
fisttpll
mov
rorl
fisubs
testb
adc
gs
scas
daa
xchg
xor
sbb
add
mov
andb
insl
jae,pn
or
pop
mov
sbb
jl
cmpsl
xchg
xorl
sub
data16
ss
mov
popf
int
sub
outsb
in
cld
sub
dec
pop
gs
cmp
adc
repz
dec
mov
jae
outsl
or
inc
push
fsubr
jl
aam
sub
or
pop
add
jge
fcompl
mov
xchg
das
out
mov
stos
pop
insl
js
inc
xor
dec
rol
and
mov
push
clc
cwtl
les
adc
xchg
and
adc
lods
outsb
mov
ss
pusha
inc
iret
mov
cltd
sub
jg
mov
rorb
mov
cmp
jae
jbe
clc
mov
rclb
out
push
xchg
or
fwait
sub
mov
push
loopne
ja
sbb
sbb
push
stc
inc
lahf
push
dec
call
repz
add
dec
push
aam
lods
mov
mov
push
int3
push
pop
add
mov
xor
movb
jg
in
jb
in
mov
ret
repnz
push
fwait
in
cs
add
fisubrs
subb
enter
popf
jne
xchg
lock
test
das
xchg
push
add
jbe
mov
mov
cld
mov
je
adc
loopne
sub
mov
aad
sbb
xchg
sti
int
mov
sub
xchg
xchg
jl
rol
mov
int3
jno
add
xchg
rorb
imul
pusha
mov
out
cmpsl
add
mov
add
sub
add
push
test
mov
mov
push
std
xor
out
mov
loopne
rdtsc
sahf
jmp
flds
add
mov
mov
inc
lcall
push
pop
popa
aam
fistl
or
jge
ljmp
mov
adcb
out
push
push
sbb
in
jnp
pop
push
adc
orb
xor
jne,pt
iret
jns
dec
add
shlb
mov
cmp
mov
lahf
sbb
adc
out
pop
ljmp
push
out
pop
sub
hlt
or
pop
mov
js
dec
and
pusha
loopne
mov
popf
xor
push
xor
or
test
sub
xor
insb
shll
frstor
arpl
in
sbb
cmc
lds
xchg
pop
push
daa
cmp
mov
cmp
mov
cmpsl
mov
pop
sbb
mov
push
jne
push
pusha
cmp
popf
xor
xchg
lea
fldt
aad
mov
add
mov
addb
jle
jmp
imul
gs
push
loop
repz
pop
test
xchg
fdivs
in
lret
cli
call
jp
test
popa
xchg
mov
das
sub
xchg
insl
int
sbb
mov
cmp
sbb
movb
scas
mov
fwait
std
fstl
iret
dec
and
jmp
clc
push
jno
add
cmp
xchg
inc
and
mov
mov
jo
cmc
mov
pop
fsubr
in
adcl
push
inc
jg
mov
push
sbb
addl
jmp
add
push
pop
mov
mov
addr16
test
sbb
movsl
pop
jle
inc
lods
adc
scas
scas
das
add
pop
mov
xor
aas
mov
loope
push
pop
mov
sub
dec
or
arpl
xor
cld
stc
sub
jl
fcompl
repnz
sbb
repz
daa
test
jmp
popa
dec
or
lods
push
xchg
movsl
jns
jl
cmp
lds
xor
xchg
outsb
mov
or
mov
repnz
in
dec
and
imul
add
js
mov
push
js
sub
stc
pop
fistps
push
cmp
add
shlb
mov
add
jb
push
jg
js
sub
inc
dec
mov
jbe
jl
mov
cmpb
or
mov
les
add
lea
and
movsl
fisttpl
std
orb
mov
xor
loope
and
add
xorb
xchg
ss
add
and
addr16
mov
or
jmp
clc
add
jp
or
cmpsb
pop
xchg
jmp
xor
or
sub
aaa
push
add
lds
adc
mov
adc
sbb
jp
add
in
and
xchg
daa
jg
bound
pop
insl
test
into
push
push
cmp
xorb
push
xor
lods
cwtl
or
inc
in
ja
arpl
cmp
adc
push
lods
imul
mov
sub
outsl
cwtl
xor
xlat
jg
push
mov
pop
adc
movsb
inc
gs
dec
mov
push
enter
mov
out
xchg
adc
mov
inc
clc
icebp
inc
xor
shlb
rorl
addb
xchg
dec
in
adc
mov
jo
pop
push
adc
pop
fsub
adc
or
xchg
adc
add
jle
cmp
pop
sbbb
dec
push
andb
or
push
cmp
test
imul
stc
popf
je
mov
orb
sbb
jecxz
push
mov
sbb
mov
push
add
dec
data16
and
clc
lret
inc
sub
cwtl
sbb
or
cmp
add
sbb
mov
sahf
imul
mov
jle
pop
jg
movsb
int
sub
mov
jmp
jl
xor
outsl
popf
idivb
lcall
in
lret
popa
and
push
js
data16
ja
push
fists
pop
pushf
adc
nop
negl
popf
or
jae
lods
xchg
jmp
lock
dec
lds
push
shll
les
test
jne
into
inc
pop
pop
xchg
cli
xor
call
in
imul
cmp
sbb
cli
jp
jae
sbb
xchg
mov
add
mov
fmull
dec
or
cli
lret
mov
nop
cs
pop
clc
dec
and
push
and
adc
repnz
xchg
push
imul
inc
sbb
push
outsl
jg
cwtl
xchg
cwtl
lock
mov
xor
push
mov
jl
mov
hlt
imul
addr16
adc
mov
push
mov
adc
sub
adc
inc
aaa
mov
mov
inc
pop
cmp
jbe
xor
cmp
xor
adc
outsb
fdivs
add
out
fimull
arpl
dec
pop
cmpsl
ds
out
mov
and
add
test
lods
pusha
jg
xor
pop
adc
rcll
not
les
clc
lods
add
int3
loop
sub
push
test
jge
add
mov
aas
jb
sub
sbb
sub
sbb
lods
xor
mulb
out
jb
push
or
mov
pop
ljmp
and
ljmp
int
fistps
ficomps
fdivrs
push
sub
pop
push
sbb
sbbb
jl
lds
daa
inc
dec
mov
mov
add
popf
icebp
xchg
add
cmpsb
or
push
and
gs
push
rcrl
xchg
push
push
sub
lds
loope
sahf
mov
out
out
xchg
scas
js
add
mov
sub
decl
mov
fwait
push
dec
adc
scas
repnz
sahf
jo
sub
jno
inc
in
jg
add
mov
clc
sahf
cmp
xchg
lock
cld
inc
stos
mov
sbb
pop
push
mov
jb
fildll
aaa
in
mov
repnz
jo
dec
mov
fcmovnb
mov
dec
lret
jns
lea
mov
mov
icebp
add
movsb
inc
std
rcr
jae
add
mov
test
pop
je
enter
xchg
add
imul
add
xchg
bound
aam
lahf
jno
scas
mov
jg
es
repz
cmp
inc
fldl
xchg
add
out
or
insl
ljmp
aaa
cmp
scas
leave
jbe
lock
mov
dec
jmp
sub
test
popf
xor
lods
push
jg
pop
cwtl
add
xor
jmp
mov
mov
rcll
jne
adc
loopne
push
jo
notb
cs
lret
push
incb
pop
fnstsw
adc
or
or
push
inc
mov
mov
add
inc
stos
jne
dec
rorl
hlt
push
outsl
shrb
add
add
loope
or
mov
and
cmp
outsl
aam
or
or
bound
into
add
inc
sbb
pop
push
mov
mov
mov
cli
mov
outsb
dec
test
cmc
in
movsb
in
or
and
out
fistl
cwtl
pop
sub
mov
dec
das
aad
cmp
subb
mov
adc
jnp
add
lock
pop
mov
daa
mov
inc
rcrb
js
pcmpgtd
loopne
or
push
mov
nop
push
jmp
outsl
sahf
push
push
jmp
cs
dec
nop
out
loopne
xchg
or
jno
xor
lods
sbb
rcl
test
and
jmp
xchg
dec
or
dec
outsl
dec
add
loopne
test
pop
cs
jmp
jb
add
jne
lods
test
xor
arpl
xchg
jbe
cmp
or
inc
mov
jge
ljmp
lsl
xchg
rclb
jmp
cmp
movsb
test
mov
dec
mov
loopne
cs
jb
int3
mov
adc
call
dec
aaa
mov
add
es
inc
jmp
xchg
mov
fdivl
aam
scas
ja
xor
lret
pop
cmp
mov
or
popf
mov
mov
jne
xor
daa
sbbl
push
aas
pop
lea
mov
mov
popf
xor
dec
jo
shlb
and
mov
loope
nop
jg
pop
add
sub
push
cmpsl
mov
aam
jmp
lret
add
call
pop
hlt
daa
popa
addl
xchg
das
and
dec
push
in
add
xchg
pop
and
or
shl
in
sbb
sub
ucomiss
push
iret
shl
sbb
mov
xor
ret
jp
mov
pusha
pop
nop
jmp
jnp
clc
pop
xlat
add
inc
mul
push
mov
mov
inc
clc
pop
shll
mov
xlat
shrl
sub
dec
fisttpll
mov
pop
adc
jmp
fsubl
jbe
mov
mov
bound
add
push
fcmovb
sbb
movsl
mov
or
lods
mov
ds
loope
lds
pop
mov
mov
inc
push
pop
pop
push
mov
inc
pop
ljmp
inc
sbb
scas
dec
add
or
add
mov
push
push
jbe
cli
pop
adc
outsl
lds
pop
rcrb
mov
cli
inc
mov
loopne
xor
push
xor
inc
js
cmp
dec
into
jl
jb
bound
arpl
mov
push
mov
dec
push
xchg
jp
pop
mov
mov
add
pusha
daa
lea
pop
adc
jbe
stc
dec
cld
adc
pop
test
inc
rclb
mov
repnz
add
add
sbb
mov
pop
popa
pop
sbb
inc
bnd
add
cmp
pop
cmpsl
js
or
sbb
mov
and
fisttps
mov
mov
jge
adc
imul
imul
jl
jnp
jo
mov
push
adc
int3
and
sbb
jns
inc
xchg
cmp
jnp
jp
push
repz
xor
pop
xchg
cwtl
movsl
add
xchg
mov
divl
add
xorl
adc
jmp
outsl
push
add
fsubr
cmpsl
outsb
jge
cs
imul
les
inc
mov
shll
cmp
add
leave
daa
cmc
rcr
inc
movl
test
xchg
jl
xrelease
adc
fists
sub
xchg
ficoml
mov
and
cmp
push
test
mov
xchg
imul
inc
incb
jo
xor
popf
mov
in
out
rorb
sub
or
bound
pop
movsl
sbb
add
rcl
push
mov
stc
nop
es
fmull
mov
push
in
mov
stos
das
jp
repz
xor
sbbl
jg
inc
add
bound
sub
mov
arpl
xor
adc
mov
les
mov
sahf
add
data16
mov
add
and
outsb
dec
dec
test
sbbl
mov
xchg
push
int
nop
in
pop
lods
rcrb
and
or
pop
scas
adc
inc
pop
sbb
pusha
mov
popf
or
push
test
test
divb
add
rol
loopne
pop
nop
into
push
shll
add
idivl
add
dec
xor
mov
das
inc
mov
adc
xor
push
add
pop
je
push
sbb
in
cmc
movsl
fcomps
movsb
mov
out
icebp
loopne
hlt
cltd
sbb
es
pop
pop
and
or
aam
inc
sbb
in
cmp
ja
popf
or
stc
sub
mulb
push
clc
mov
pop
and
clc
cmc
inc
adc
stc
lods
and
int3
adc
xchg
gs
jns
insl
add
dec
mov
mov
add
sbb
jbe
daa
fdiv
inc
rcrl
hlt
dec
pusha
out
test
lods
dec
shr
and
les
ficomps
jmp
adc
sar
stos
insl
jle
lods
mov
mov
sbb
push
pop
xchg
sub
loopne
aam
aas
mov
xlat
addl
push
enter
xor
sbb
repnz
inc
inc
subl
scas
and
or
add
jno
insb
lcall
cmpsl
push
in
inc
lock
mull
xchg
adc
add
cmp
fadd
xchg
stc
or
fdivl
push
adc
lret
pop
nop
pop
fmull
xchg
sbb
mov
inc
pop
inc
xor
dec
pop
mov
cvtdq2ps
cld
jmp
dec
cmp
dec
push
jl
xor
push
dec
jb
or
adcb
js
jg
popf
pushf
xor
int
add
jp
enter
cld
mov
call
add
push
popa
mov
in
mov
test
rclb
pop
mov
ffreep
xor
mull
add
cltd
mov
push
mov
insb
nop
xchg
or
into
xchg
dec
popf
mov
add
mov
loope
out
pusha
outsb
test
js
push
dec
cmpsb
dec
scas
lock
pop
or
lock
and
xorl
inc
div
lahf
mov
faddl
add
sbb
scas
push
aas
adc
fisubl
cmpsl
loop
je
movsl
xlat
mov
add
push
jae
daa
or
daa
inc
adc
jbe
and
xor
or
mov
add
add
ja
mov
adc
popf
pop
mov
scas
sub
sbb
add
and
push
xchg
xor
sbb
fists
test
push
mov
and
and
add
mov
jg
inc
pop
add
ss
cmp
mov
cltd
ds
jmp
mov
es
les
sub
sbb
rcrb
movsl
or
adc
fdivs
sub
mov
test
dec
xchg
xor
push
xchg
popa
push
push
xchg
lods
jb
dec
mov
mov
push
fnstcw
enter
jbe
cmpsb
add
add
sub
mov
and
mov
pusha
add
and
adc
cs
adc
insl
push
in
cwtl
adc
add
and
addr16
jg
push
mov
adc
pusha
adc
push
add
mov
mov
mov
pop
pop
push
mov
ret
pop
int3
pop
or
mov
add
adc
cmpsb
sbb
sbb
xchg
sti
push
xchg
sbb
rolb
repz
stc
add
das
arpl
dec
jmp
iret
mov
popf
sbb
xchg
test
testl
mov
jb
sub
jb
inc
pusha
lret
in
fiadds
out
push
repz
fiadds
xchg
xchg
mov
fisubrl
dec
add
inc
add
add
lock
mov
pop
cltd
mov
jb
add
or
jecxz
insl
push
adc
fwait
mov
cli
pop
dec
sar
mov
adc
loop
shll
or
and
jne
jb
xchg
xor
sti
fistps
sbb
lahf
pop
enter
das
movzwl
stc
jmp
hlt
cld
add
out
adc
shrb
pop
xchg
inc
or
loopne
pop
insb
add
clc
mov
iret
das
bound
pusha
jp
xchg
dec
lods
incl
xchg
mov
add
push
insl
jecxz
jmp
jge
jnp
adc
pop
shrl
jo
add
push
add
cwtl
in
loopne
mov
add
hlt
xchg
adc
in
mov
out
or
add
mov
shlb
scas
add
lds
mov
fucom
xchg
push
stc
add
cmp
mov
pandn
mov
dec
add
pop
das
xorl
fwait
les
mov
in
sbb
adc
mov
push
xor
popf
add
push
cmpsb
xchg
call
mov
ljmp
cmp
je
mov
lds
sbb
push
or
fimuls
mov
inc
xor
add
aaa
negb
daa
ret
fstpt
addl
fiaddl
add
sti
dec
jbe
xchg
sbbl
cmp
test
mov
sbb
sti
inc
divb
add
pusha
outsl
mov
pop
and
add
jp
test
and
ss
mov
cmc
pop
add
sub
or
add
nop
lods
and
add
pop
cmp
insl
dec
add
push
mov
cmp
lock
add
jmp
jl
add
xor
mov
lret
add
call
cmp
add
sub
rcll
sub
or
inc
xchg
insb
addl
inc
sbbb
push
and
cmc
sbb
cmp
loop
scas
add
std
sbb
ja
fiadds
push
jp
mov
je
sub
mulb
push
add
mov
test
pop
add
and
daa
mov
mov
xorb
xor
xchg
xor
repnz
in
stos
jl
add
mov
pop
inc
bound
je
xchg
test
out
fnstsw
pushf
popf
pop
and
xchg
lods
jg
push
xor
xchg
mov
out
insb
mov
loopne
xor
ret
out
xor
mov
adc
xchg
in
ja
xchg
xchg
stos
ljmp
arpl
push
popf
decb
adc
pop
jbe
fiaddl
scas
fprem1
in
test
dec
adc
lods
mov
mov
int
fsubs
push
add
shl
ret
or
std
inc
mov
cmp
int
loopne
and
add
mov
pop
adc
or
xor
mov
and
pop
dec
adc
rclb
fstpt
jo
add
into
pop
mov
iret
dec
js
pop
fdivrl
clc
dec
add
sub
adc
adcl
cmpsb
and
dec
and
mov
xor
es
sub
dec
dec
out
sbb
add
mov
add
jl
adc
push
push
lock
int3
pop
sub
sub
pop
aas
test
cmpb
inc
outsb
sbb
popa
push
fwait
je
js
mov
push
sbbl
cmp
add
push
insb
iret
add
sbb
sbb
push
add
xchg
dec
iret
leave
pop
and
in
cmp
push
subb
mov
pop
adc
adcb
cltd
xor
xor
adc
xor
cmp
sub
xor
imul
or
pop
lods
adc
and
sbb
js
nop
mov
xor
fistl
orb
or
or
sbbb
push
popa
mov
aaa
mov
test
sbb
cmp
or
add
ret
and
pop
and
setg
decl
lods
decb
push
adc
dec
ds
cmp
fldl
mov
stos
adcl
stc
add
ds
push
push
or
add
mov
add
or
mov
add
mov
nop
and
xrelease
xchg
mov
sbb
cmc
pop
jp
xor
cld
pop
dec
sub
mov
pop
mov
sbb
loopne
sarb
gs
pop
popf
cld
cmc
add
aaa
add
jmp
out
add
sbb
inc
and
and
mov
add
lret
inc
pop
in
sbb
jle
iret
mov
push
adc
pusha
adc
cmpsb
icebp
push
movsl
add
aad
in
inc
rcrl
sbb
or
aad
mov
add
and
das
dec
adc
adc
adc
loop
pop
cltd
mov
jo
clc
rorl
ret
mov
dec
rcr
pop
add
inc
jnp
mov
pop
adc
adc
mov
bnd
nop
and
sub
xchg
sbb
adc
add
add
xchg
sti
mov
cld
cmpsb
add
in
inc
mov
sbb
sahf
push
push
mov
out
cli
pop
into
fstl
imul
push
and
aad
xchg
dec
add
sub
adc
not
stc
in
add
xchg
add
mov
sbb
adc
mull
push
test
inc
into
inc
add
popa
mov
testl
gs
ljmp
out
add
and
int
sbb
xor
sbb
aaa
and
test
out
cmp
dec
push
push
mov
xchg
and
push
and
mov
fldl2e
add
or
arpl
mov
fwait
out
pop
xor
pop
and
dec
inc
xchg
sarb
imul
test
push
test
shlb
add
lahf
mov
mov
pop
stos
mov
jle
aas
add
lea
adc
icebp
stc
and
sub
or
inc
xchg
roll
cmp
imulb
cltd
jns
lcall
add
add
inc
ss
in
add
popf
imul
mul
lea
sub
pop
pusha
shlb
je
cwtl
sbb
inc
xchg
fisubrs
xor
stos
cwtl
and
xor
add
cwtl
inc
test
enter
cltd
ljmp
outsl
xchg
mov
sub
jnp
or
add
mov
fiaddl
adc
scas
movsl
push
lahf
jle
xchg
push
and
fcmovne
pop
cs
fstpt
lea
cli
test
popf
test
push
fsub
mov
nop
imul
outsb
ds
fldpi
add
dec
dec
and
imul
imul
lock
test
xlat
repz
add
adc
cmp
push
jno
pop
scas
repnz
dec
push
or
lahf
push
in
add
adc
adc
loope
jecxz
or
rorl
jmp
rcr
leave
mov
les
and
sbb
xor
repnz
out
ss
out
pusha
cmp
mov
or
cwtl
add
adc
add
xchg
fldcw
adc
xorb
add
sti
lock
jg
ss
sbb
lret
sbb
mov
outsb
popf
cli
mov
lods
add
sbb
inc
xchg
mov
add
push
repnz
mul
shr
add
das
mov
es
mov
xor
pop
sub
and
nop
js
sub
sbb
enter
pop
mov
inc
lcall
shr
add
mov
ss
push
inc
nop
xchg
dec
ror
out
push
icebp
push
cld
mov
pop
movsb
push
jb
pop
add
jecxz
sub
arpl
or
mov
sarb
cltd
leave
js
cmp
and
lahf
cmpsl
inc
std
xor
xchg
scas
dec
leave
cmp
bound
mov
das
call
sbb
repnz
or
pop
aas
test
xor
or
test
mov
dec
and
pop
cmpsb
dec
and
jnp
jl
adc
push
jne
mov
pop
mov
roll
sbb
adc
addl
arpl
aaa
dec
jae
aad
pop
add
shr
cmpsb
andb
nop
mov
arpl
jb
mov
and
or
dec
xchg
call
std
loop
out
push
add
and
es
xor
push
cwtl
jmp
dec
mov
xor
push
rcr
push
es
and
pop
in
out
lahf
icebp
jo
mov
inc
pop
jnp
mov
icebp
or
roll
and
jg
add
aas
sub
gs
jnp
add
es
insb
pop
cmpsb
push
cmp
add
jle
cmp
add
mov
mov
add
cmp
mov
loopne
jg
push
daa
add
sar
add
jnp
fcomi
dec
rorb
imul
ret
mov
inc
ret
ret
cli
dec
cmovs
orb
jbe
cli
mov
pop
lahf
mov
xchg
xor
inc
shrl
ret
cld
shr
mov
add
xchg
mov
in
jl
cs
scas
add
push
xor
arpl
add
sbb
dec
dec
ljmp
ficompl
dec
je,pn
daa
aad
in
hlt
jno
push
lds
fdivrp
cmp
in
loope
mov
mov
mov
xor
adcl
pushf
clc
scas
dec
jo
ficoml
aad
out
jb
jp
shll
push
fildl
aam
inc
xchg
hlt
jecxz
rolb
xchg
ja
sti
xchg
sub
adcb
xorl
add
fiadds
movsl
into
jp
add
movsb
rcrl
xor
addb
or
and
pop
pop
add
adc
sahf
icebp
sbb
jmp
inc
inc
into
testl
jle
inc
xor
push
sarb
adc
add
jp
data16
sahf
add
inc
arpl
or
pop
jecxz
xchg
dec
cmp
mov
add
adc
xlat
sbb
dec
lahf
push
add
inc
sbb
sub
add
cmp
sbb
mov
dec
cmp
or
or
aaa
jp
sub
fwait
jno
jle
add
pop
into
xor
xchg
jae
and
xor
jg
xchg
pop
scas
and
inc
inc
mull
dec
int3
adc
test
add
data16
adc
popf
and
mov
jb
dec
mov
dec
cmp
xor
loop
lahf
push
fstl
push
cld
pop
or
adc
or
xor
aas
std
andb
mov
push
neg
add
cmp
fisttpll
pop
sub
jl
or
push
lahf
push
fisubs
xor
movsb
pop
xchg
pop
push
inc
or
call
xor
loope
stc
in
sarb
xchg
push
mov
pop
fidivrs
out
aaa
add
xor
outsb
mov
push
inc
xlat
imul
movsl
icebp
inc
jo
dec
mov
pop
outsb
iret
add
inc
inc
xor
and
fdivs
fsubrs
jp
and
outsb
arpl
mov
inc
roll
xor
push
jp
test
and
jno
jl
mov
xor
pop
ljmp
mov
xor
mov
and
movsl
pop
jno
das
ret
push
add
xchg
in
data16
adc
adc
testb
sub
jo
push
les
scas
sahf
test
lods
and
out
mov
or
add
jg
pop
mov
xchg
js
in
push
push
int
loopne
jne
sbb
cmc
bound
ret
int3
adc
sarb
fldl
push
fisubrs
add
fmul
bound
sub
adc
pop
aas
iret
lods
dec
out
xchg
fists
mov
pop
xchg
cld
sahf
faddl
adc
inc
mov
xor
outsl
scas
ss
pusha
add
push
rclb
pop
popa
pop
mov
popf
in
add
outsb
add
push
movb
mov
call
lahf
dec
les
in
cmp
or
mov
stos
jp
add
mov
or
cld
adc
imul
cmp
push
lret
in
mul
shlb
push
xchg
adc
pop
jmp
jmp
and
je
jns
addb
jnp
lahf
repz
jo
xchg
add
loop
movsw
sub
mov
push
inc
jge
pop
repz
push
fwait
add
sub
xor
cwtl
add
jnp
jno
and
inc
out
push
test
daa
in
sub
lret
add
mov
fistps
cwtl
rcr
and
and
sbb
mov
add
xchg
cwtl
movzwl
pop
popf
fxch
dec
shll
add
add
fidivrs
das
dec
inc
lret
in
sbb
imul
mov
fcmovbe
xchg
add
push
mov
add
leave
and
dec
ja
pop
jae
dec
pop
int3
aaa
and
cmp
addr16
add
adc
scas
xchg
jno
lahf
add
icebp
mov
mov
xchg
hlt
addb
iret
mov
xchg
adc
push
add
and
xchg
cmc
inc
push
les
and
xchg
sbbl
mov
xorb
mov
arpl
shrl
fs
push
cwtl
cmc
rcrl
cld
lahf
ret
shl
outsb
test
mov
or
cmp
or
mov
jbe
sub
push
adc
and
leave
je
pop
mov
outsb
jl
incb
rclb
lret
stos
adc
pusha
pusha
test
shrl
popa
pop
lcall
test
jbe
ret
int
xchg
mov
daa
sub
es
xor
andl
push
in
inc
stos
cmp
popf
stc
loopne
pop
xchg
int3
mov
lock
jg
add
cli
mov
lret
xchg
in
xchg
lret
aaa
lock
movsl
dec
mov
adc
int3
shr
and
push
popf
dec
add
loope
jl
fdivl
adc
scas
lcall
jbe
cmp
cmpsb
and
pop
pop
cmpb
shlb
jnp
jo
test
mov
enter
daa
push
jmp
imul
cld
cltd
inc
cmp
xor
sub
add
xchg
add
jo
add
add
push
pop
popa
mov
inc
mov
std
sarb
add
ja
mov
popf
and
mov
test
negl
fs
repnz
mov
pop
scas
cmp
mov
adc
pop
mov
push
mov
gs
dec
fs
cmp
adc
and
decb
pop
mov
loope
push
jo
mov
hlt
push
and
mov
xchg
lds
add
mov
jge
test
push
add
or
mov
push
xchg
pop
icebp
xchg
stc
sub
pushf
loope
andl
imul
orb
xchg
add
cmp
pop
dec
ja
dec
je
in
dec
add
aaa
xchg
in
arpl
stc
xor
mov
dec
pusha
pop
lret
xchg
dec
sahf
cmp
mov
jbe
mov
add
dec
loope
in
loope
cmp
loop
mov
ja
mov
fcoml
dec
sbb
inc
add
xchg
gs
sub
shlb
adc
xor
pop
inc
and
dec
jp
in
popf
roll
and
jge
mov
mov
inc
jg
lods
loopne
in
xorb
lds
scas
aaa
sub
mov
pushf
push
ret
or
js
ss
int
ds
faddl
add
push
pop
add
jnp
sahf
lahf
out
adc
repnz
sbb
sbb
mov
push
add
or
repz
jmp
mov
and
cmp
push
mov
xor
fs
mov
das
jecxz
sbb
push
or
leave
add
inc
xchg
pop
popa
push
sbb
clc
push
sbb
jp
in
add
push
loop
lock
leave
mov
hlt
or
mov
imull
fwait
cmp
and
and
xchg
pusha
jg
mov
and
ja
add
cmp
je
dec
call
cmc
jb
xorb
repz
xchg
mov
loopne
mov
iret
aaa
mov
loop
mov
sub
in
aam
jbe
divb
xchg
xor
xchg
fnstenv
pop
in
std
add
popl
scas
fistl
rcr
cmp
mov
andb
sub
mov
lret
shlb
mov
out
addl
cmp
mov
lock
mov
in
fsts
outsb
int
sbb
mov
add
data16
icebp
xor
mov
das
pop
and
and
xor
fidivrs
std
iret
in
popa
add
test
mov
and
pop
dec
mov
lahf
mov
aad
mov
aas
xchg
jle
ficomps
loopne
pusha
or
mov
popa
pop
xor
pop
or
and
or
mov
push
inc
scas
add
int3
imul
cmp
aam
add
jae
lock
adc
mulb
lock
jno
push
pop
mov
cmc
add
and
sub
std
daa
sbb
or
sub
pop
push
iret
cld
ljmp
add
pop
leave
in
push
mov
bndstx
mov
mov
and
dec
add
loope
aaa
outsl
adcb
lcall
loop
lea
or
add
sbb
xchg
decl
mov
sub
adc
and
test
pop
adcl
sbb
add
sub
hlt
and
inc
cmovp
out
mov
xor
jl
fsub
push
outsb
fwait
lret
ret
ss
inc
fldcw
xchg
int
inc
sbb
jecxz
lcall
test
les
pop
dec
addr16
das
dec
fdivl
loop
fnsave
bound
test
mov
jg
jge
cld
pop
les
outsb
mov
imul
and
clc
es
push
xor
movsb
and
in
fnsave
adc
mov
mov
mov
pop
cmpsb
fiadds
dec
and
in
les
les
mov
add
dec
mov
xchg
and
sub
or
sub
shll
add
mov
pop
outsb
jmp
mov
adc
stc
push
pop
or
pop
daa
pop
popa
hlt
push
mov
lock
fistpl
mov
stc
adc
insb
pop
dec
xchg
lds
add
add
lea
mov
and
outsl
jp
sbb
fstps
add
push
add
pop
stc
popa
xchg
adc
insb
lods
nop
inc
cltd
sub
movsl
or
fwait
push
adcl
test
mov
push
mov
mov
repz
nop
sub
fwait
dec
out
mov
or
jge
push
jmp
fistl
mov
xlat
call
pushfw
mov
sahf
inc
fbld
xchg
ficomps
pop
fisttps
subb
sbb
mov
add
jecxz
jae
fdivrl
pop
nop
hlt
xor
outsl
sar
rolb
arpl
mov
add
mov
fldl
aaa
pop
add
vdivss
out
pusha
xor
mov
cwtl
cmp
in
jl
popf
jmp
std
lret
pop
aam
add
nop
fldt
dec
int
pop
cwtl
mov
addl
jl
les
inc
push
xchg
or
push
sbb
outsl
sub
cmp
ret
stc
sbb
mov
pop
sahf
xor
popf
sub
add
adc
popf
xor
fstpt
add
test
push
out
mov
and
mov
mov
mov
fidivrs
cld
into
jp
and
pop
in
xor
mov
out
push
jno
jmp
cs
loope
lret
inc
push
outsb
mov
mov
mov
adc
imul
or
pop
push
test
adc
cwtl
xchg
mov
out
dec
pop
fstpl
subl
mov
jnp
hlt
cmp
and
popf
xchg
push
mov
or
mov
push
pop
cmp
pop
jnp
shl
pusha
dec
mov
ret
add
cld
add
add
cmp
add
std
mov
xchg
adc
mov
add
mov
fsubrp
mov
mov
testl
add
cmpsb
es
sbb
cmp
push
lahf
testl
ret
test
fbstp
and
jp
add
out
jno
pusha
jo
popf
inc
sub
sub
or
test
mov
inc
fistl
sub
push
imul
cmpsb
and
jns
jo
roll
sub
xor
push
mov
sbb
pop
inc
xchg
pop
jge
out
movsl
cli
adc
xor
add
fnstsw
add
xchg
clc
ds
pop
movsl
mov
mov
mov
xor
fldt
and
xor
inc
or
xchg
and
pop
cmp
jge
fldl
fcompl
pop
mov
movsl
insb
adc
aam
mov
lods
shrb
lock
adc
stos
daa
cld
imul
cmpb
add
pop
mov
jl
sbb
insb
roll
cmp
out
cmc
mov
adc
stos
or
ret
inc
jbe
enter
sub
jae
inc
cmp
jecxz
push
mov
jmp
adc
lods
lds
std
into
adc
xor
adc
xchg
adc
sbb
push
add
icebp
xor
dec
adc
push
push
xlat
js
movsl
or
cmp
test
add
aad
xchg
in
mov
xor
sub
cmp
pop
xlat
test
dec
fldl
cmpsl
dec
in
cmp
mov
inc
pop
cmp
sub
mov
stc
cld
adc
sub
and
cmp
jecxz
and
pop
cwtl
int
out
xor
sbb
mov
or
jle
repz
stc
in
ja
dec
jo
test
mov
loopne
fstpl
and
out
push
cwtl
sti
xchg
cwtl
ja
pop
xor
shlb
lea
fstps
fnstenv
sub
popf
dec
sub
daa
jo
insl
mov
pushf
push
es
jl
add
mov
out
dec
xor
push
add
loopne
popf
rorl
mull
gs
mov
popa
mov
mov
lahf
mov
clc
lcall
push
fcoml
repnz
jp
xor
add
lahf
cmc
sub
add
in
pop
jge
pop
push
push
and
cmp
mov
jmp
dec
dec
inc
hlt
je
push
dec
or
jno
mov
call
icebp
ror
add
fdivrs
ds
push
cmc
pop
je
sbb
mov
jo
and
out
adc
loope
push
sub
movb
xor
push
mov
mov
jae
js
gs
mov
mov
pop
adc
or
mov
repz
in
jmp
movsl
mov
cmp
push
push
mov
or
inc
jecxz
jecxz,pt
push
enter
pop
push
stc
cmp
xorb
add
nop
or
ret
xchg
add
dec
add
push
or
jg
pop
xor
jle
inc
into
and
lds
rolb
loopne
mov
aas
dec
sub
jg
mov
xchg
sbb
jecxz
cmp
outsb
sti
sahf
repnz
and
xor
scas
mov
sub
leave
insl
fldt
test
cmp
cmp
xchg
test
add
mov
add
jl
jle
inc
mov
push
xchg
shlb
gs
pop
cmc
mov
cmpsb
xlat
loopne
mov
dec
or
dec
mov
xchg
fcmovnbe
xor
cmp
xor
cmp
dec
push
pop
cltd
dec
pop
loop
insb
cmp
mov
sub
xchg
mov
fsubrl
movsb
add
sub
pop
mov
jp
mov
pop
cmp
lea
lods
dec
outsb
into
lock
test
fadds
dec
push
shrb
or
cmp
push
ljmp
and
adc
subl
dec
mov
mov
add
addr16
arpl
jecxz
mov
push
jmp
stc
call
mov
mov
xchg
cmp
and
add
loop
cmp
jnp
addb
pusha
loopne
add
sub
cs
xlat
aam
mov
jmp
fistpl
jmp
xlat
push
xor
add
cmp
push
imul
mov
daa
sbb
dec
mov
pop
clc
fcmovb
test
and
or
test
sarb
bound
popf
jp
adc
push
dec
push
adc
movsl
pushf
cmpb
pop
mov
lret
pop
call
jg
icebp
mov
out
mov
rorl
xor
imul
mov
xor
add
shrb
imul
add
repnz
add
xchg
shll
pop
mov
out
lods
lock
pop
adc
lret
in
push
pop
mov
sbb
pusha
imul
mov
jle
inc
push
cmc
add
js
xchg
in
in
hlt
popl
jns
mov
aad
xchg
in
popf
sbb
mov
cmp
adc
xchg
movb
sbb
pop
scas
push
xchg
js
mov
cmpsb
in
mov
loop
pop
cmp
sub
dec
sbb
das
xchg
call
sbb
sub
push
jb
push
lret
add
and
hlt
subb
mov
mov
je
mov
mov
fimull
mov
mov
add
dec
adc
xorl
inc
scas
leave
loope
outsl
ret
stos
out
movsb
out
adc
add
test
cmp
xchg
js
adc
lock
mov
mov
dec
ret
push
mov
xchg
ret
xlat
mov
xchg
sbb
or
inc
adc
fcmovnb
add
cli
push
bound
add
pop
xchg
mov
or
sbb
cmp
adc
sbb
mov
jno
add
add
in
xchg
sub
sub
xor
lahf
aam
mov
xor
insb
movsl
mov
add
pop
scas
faddp
mov
icebp
stos
add
ret
je
push
pop
add
push
mov
push
inc
sub
leave
ret
movsb
sahf
push
and
sti
fbld
sub
cmp
das
sub
mov
xchg
daa
mov
aam
fiadds
sbb
xchg
je
test
testl
mov
jbe
adc
mov
mov
cmp
pop
jmp
pop
addr16
jmp
mov
or
dec
or
and
sub
mov
jns
fbld
out
inc
insb
test
dec
pop
sbb
orb
pop
fmull
add
mov
cmc
popa
xor
in
xchg
mov
adc
std
nop
push
incb
pop
pop
jmp
arpl
aad
arpl
mov
imul
or
addr16
jmp
push
inc
or
sbb
movsb
cmp
repnz
and
in
inc
loop
nop
jl
ret
aam
cltd
pop
add
and
push
iret
inc
pop
mov
js,pn
and
flds
test
rolb
aas
insl
rcll
add
push
nop
push
mov
test
push
outsl
lcall
lret
xchg
mov
clc
xchg
lcall
fadd
stc
pop
scas
fcmovu
shll
mov
aas
mov
imul
test
push
pop
or
adc
pusha
jg
popf
mov
xor
mov
mov
jg
jl
sub
jbe
aad
xchg
sbb
jle
and
or
daa
jb
add
nop
daa
pop
in
dec
test
add
sar
pop
push
das
push
in
jno
icebp
dec
pop
cmp
lret
dec
mov
pushf
aam
pop
aaa
mov
hlt
add
mov
clc
repnz
out
push
mov
lods
sarb
add
aaa
into
mov
xor
insb
sbbb
or
add
inc
sbb
das
gs
push
push
fs
scas
mov
pop
push
push
and
add
lea
push
and
dec
add
pop
sub
loop
sub
ds
xchg
fnsetpm(287
pop
cmp
xlat
jno
in
enter
xor
rorb
mov
sbb
and
and
pop
stc
add
jo
int3
lock
lock
aad
mov
xor
addr16
xchg
adc
scas
push
and
adc
or
popa
mov
sti
xchg
fsub
pushf
and
das
push
shrl
shrl
pop
jmp
std
faddp
cmpsl
jge
adc
out
mov
dec
adc
aad
int
jmp
flds
add
mov
pop
enter
pusha
mov
cwtl
pop
or
fnsave
popa
jnp
add
lea
adc
mov
aaa
popa
xchg
push
sahf
ja
cld
xor
daa
sub
sbb
push
pop
fld
pop
fwait
or
xlat
cs
imul
mov
decl
pusha
add
dec
and
push
push
pop
pop
dec
popa
fmul
stc
adc
les
fcoms
add
shrb
sbb
cltd
fdivl
loope
push
sub
mov
pop
cwtl
push
lahf
cld
inc
dec
jno
gs
mov
ficoml
in
cmp
mulb
sbb
xor
or
push
mov
test
cwtl
cmp
cmpsl
pushf
daa
xchg
lahf
into
ja
lahf
mov
les
je
pop
xchg
sbb
xchg
loopne
stc
popf
or
enter
pop
add
mov
fdivl
push
push
mov
cmpsb
push
lock
rcrl
pop
pop
in
mov
mov
mov
mov
mov
stos
fcomps
dec
sbb
add
dec
ret
mov
push
test
sarl
xchg
lcall
loope
add
aaa
cmp
or
add
aas
in
out
fidivs
sbbb
stc
outsb
lahf
lds
mov
rolb
jmp
sbb
jecxz
xor
test
outsl
add
inc
fldenv
pusha
jb
cli
daa
jbe
insl
stc
leave
push
mov
dec
or
jmp
xchg
adc
or
movsb
mov
add
cwtd
add
push
stc
mov
subb
mov
imul
inc
out
insb
jle
sahf
or
adc
cmp
mov
jae
xchg
stc
or
sub
mov
sbb
mov
mov
inc
nop
mov
andb
std
mov
test
sub
or
stc
dec
push
lods
push
rcrb
je
cmp
jnp
shlb
cmpsl
or
test
sarl
fwait
sti
add
shr
add
sbb
mov
and
sbb
push
pop
mov
jle
jg
aaa
push
test
insl
dec
sub
cmpsl
dec
leave
xlat
js
or
mov
lods
jo
cmpb
or
iret
cs
aad
xchg
mov
dec
stos
sub
xor
popa
cmc
imul
adc
test
lock
jmp
fcoml
dec
push
iret
stc
inc
aad
loope
fwait
add
fistpl
cmp
rolb
xor
ret
in
pop
icebp
push
inc
das
adc
mov
out
cmpsb
clc
fcomps
or
add
and
inc
mov
pop
xchg
enter
rolb
sbb
rorb
cmc
pop
inc
in
pop
cwtl
ss
daa
rorl
fnsave
aas
std
aam
ds
repnz
repnz
sti
outsb
dec
add
cmpl
and
push
push
cmpsl
inc
movsb
add
mov
mov
sbb
fmuls
xchg
lock
out
loopne
push
or
test
push
cmp
cmp
addl
in
idiv
inc
add
push
adc
lea
adc
pop
jecxz
lcall
mov
hlt
pop
hlt
xor
mov
add
rcrl
mov
xor
lret
mov
cmpsb
add
mov
je
add
popa
sbb
dec
imulb
mov
repz
mov
lds
cmp
in
sub
in
into
lcall
inc
pop
pop
cmpsb
cmp
cmp
xchg
ljmp
daa
jle
xlat
add
dec
lods
test
aas
xlat
jge
mov
dec
add
push
xor
call
mov
cmp
cmp
pusha
xlat
adc
jb
ja
xchg
dec
test
jb
or
jp
cmpsb
push
popf
add
out
daa
inc
sub
or
mov
out
aam
mov
pop
stos
testb
or
sbb
push
adc
push
jbe
cltd
push
cs
adc
mov
pop
mov
loope
test
push
lahf
stos
push
push
push
enter
rolb
ds
pop
aaa
adc
dec
das
mov
dec
out
icebp
lds
push
cmp
add
jno
jg
rcrb
stos
or
jecxz
rcll
ds
jp
sub
cmpb
out
or
mov
jae
sub
iret
daa
mov
inc
fsubr
mov
push
shr
lods
popf
test
mov
cmp
psrad
mov
popf
or
mov
sub
or
jg
jnp
xchg
or
outsb
lahf
add
dec
mov
insl
sbb
loope
movsl
push
mov
add
xchg
das
add
jl
leave
pusha
push
mov
test
std
add
stos
pop
popa
fists
xchg
dec
sti
fbld
roll
xchg
mov
xchg
cwtl
int3
push
pop
xchg
xchg
leave
jo
fwait
lods
fadd
cmp
inc
xor
sub
mov
loop
sbb
int
push
std
enter
cmp
cmpsb
add
arpl
adcb
add
gs
negl
hlt
jno
jb
fs
ror
xor
scas
sub
xchg
outsb
push
popf
dec
mov
fldl2e
cwtl
or
sti
jecxz
cmpb
cld
mov
xchg
or
mov
cmc
stos
add
lds
ss
or
imul
pop
mov
gs
sbb
adc
sub
pushf
pop
xchg
insb
hlt
adc
pop
and
jge
addb
loope
out
lock
or
mov
xchg
xor
ja
call
and
adc
mov
cwtl
lret
pop
jnp
jo
incl
ret
out
xor
xchg
mov
daa
dec
push
dec
sti
adc
shll
dec
sbb
sub
sub
fwait
imul
adc
xchg
loope
xor
sub
cmpsb
pop
in
jl
and
mov
movsb
das
mov
cld
je
or
call
imulb
dec
inc
and
aad
xchg
xor
cmpb
test
push
inc
cli
ds
scas
shrl
add
iret
pusha
test
aaa
xchg
push
jnp
add
out
sub
loop
add
mov
das
fbstp
push
icebp
fldcw
mov
jg
ret
ret
inc
pusha
cld
call
xor
popf
dec
adc
cmp
xchg
pushl
mov
outsl
cltd
ret
sub
inc
out
fwait
sbb
mov
in
cmp
iret
lahf
cmp
js
sub
inc
push
fwait
jg
add
mov
mov
clc
adc
imul
je
and
xor
and
pop
int3
mov
push
pop
std
adc
lahf
icebp
inc
lods
ja
mov
mov
mov
mov
movsb
fs
xor
pop
cmp
loop
mov
adc
popf
xor
fs
insl
fsubp
cld
shrl
xor
pop
lret
jle
add
lea
jg
test
cld
cltd
bound
aad
sbb
and
notb
test
mov
roll
lea
leave
mov
ja
call
shrb
dec
addr16
add
sbb
inc
xor
popa
cwtl
cmpsb
and
dec
fisttpl
add
xchg
dec
pushl
fcmovnbe
rcrb
cld
out
jnp
or
add
mov
daa
and
cmp
in
xor
push
and
xor
cmp
std
mov
divb
fstl
outsl
jae
es
rorb
jmp
loop
mov
sub
xor
jp
pop
cli
sub
mov
icebp
shr
or
sbb
mov
inc
cmpsb
xchg
pop
popf
mov
adc
inc
mov
jnp
mov
add
inc
addr16
inc
ljmp
jne
repnz
or
sub
movsb
pusha
fdivrs
or
jae
and
jbe
adc
daa
pop
dec
loope
adc
adc
jo
gs
stc
jbe
aad
xchg
clc
fstpt
cmp
cmc
add
repz
aas
jle
cmpsl
sub
sbb
clc
mov
or
and
cmp
aas
addb
push
push
imul
jne
hlt
fcomp
xchg
testb
es
and
hlt
sub
insl
add
lcall
xor
rcrb
sub
mov
loop
fisubrs
hlt
adc
mov
pop
stc
hlt
mov
add
lods
ja
adc
cmp
das
sbb
push
fcompl
adc
xor
pop
jo
xor
or
xchg
push
push
push
mov
enter
inc
sub
lods
rcl
in
cmp
xor
mov
mov
mov
rcll
fsts
mov
les
cmp
mov
inc
mov
dec
js
rclb
xchg
fisttpl
mov
call
mov
adc
test
pop
push
lock
pop
mov
test
jmp
or
add
scas
mov
outsb
pop
in
cmp
mov
pusha
cmp
and
lcall
mov
out
cmpsb
inc
dec
inc
aad
or
jmp
fs
mov
add
mov
xlat
call
cmpsb
push
add
jae
sahf
sbb
xchg
pop
add
inc
inc
inc
out
mov
aaa
mov
sbb
mov
lods
aas
outsb
testb
int
add
iret
add
pop
rcl
les
out
and
pop
adc
mov
mov
push
adc
cmp
pop
pop
mov
negb
jmp
mov
push
sahf
mov
fisubs
ret
xchg
jmp
mov
das
jne
subb
jmp
clc
imul
fistl
mov
xor
push
add
mov
lret
pop
jo
je
fcoml
or
movsl
mov
pop
gs
shrl
ljmp
repz
push
sti
xor
test
test
jo
ret
or
icebp
add
pop
mov
int
adc
cltd
jmp
xor
xor
push
rclb
xchg
daa
pop
call
xor
add
bnd
bound
sbb
jmp
jb
cmc
xor
in
in
mov
fdivrl
xchg
cmpsb
nop
mov
popa
push
int3
xchg
dec
cld
icebp
popl
sub
xorb
and
pushf
cmpsl
ss
les
stos
inc
inc
lea
fs
in
inc
mov
in
lret
mov
adc
pushf
shl
sahf
mov
add
xor
xchg
jge
repz
in
xchg
jnp
pop
or
popa
iret
popa
imul
mov
pop
nop
pop
lret
xor
je
lea
cwtl
ret
fcompl
xchg
pop
popa
int
rcrb
scas
mov
inc
and
mov
push
sahf
adc
sahf
dec
leave
push
lret
lods
adc
nop
scas
jmp
add
mov
ljmp
jmp
es
pop
dec
or
in
das
rolb
or
jbe
call
inc
lods
inc
mov
aaa
fisttps
std
push
sub
jge
mov
fstps
in
stc
xchg
mov
xchg
sbb
mov
movsb
mov
mov
adc
pusha
mov
leave
mov
fcomps
es
mov
pop
outsb
mov
scas
and
xor
pop
xorl
imul
je
rorb
dec
dec
mov
adc
lea
insb
dec
fsubr
jne
scas
mov
or
add
es
dec
outsb
adc
sbb
andb
les
add
sbb
stos
xchg
rcll
ja
in
push
pusha
ja
xor
pusha
mov
add
pop
in
pop
stos
shll
mov
repz
int3
mov
mov
ljmp
pop
xchg
pop
aam
jmp
fwait
dec
loope
popf
push
cmp
add
or
sub
add
push
fistpll
cmp
sub
sbb
xor
arpl
cld
mov
popa
leave
iret
add
stos
lret
adc
popf
fcoml
in
inc
push
aas
out
pusha
mov
gs
dec
neg
loopne
inc
add
js
xor
xor
adc
aad
mov
adcb
pop
nop
mov
roll
push
xchg
push
and
mov
rcrl
inc
pop
inc
or
sub
imulb
enter
or
xchg
or
mov
dec
repz
jbe
mov
mov
sbb
orb
dec
or
call
stc
pop
cmp
negb
repnz
fnsave
add
pop
mov
imul
fstl
push
adc
pslld
mov
idivl
rolb
xchg
loopne
les
dec
sub
fldt
decl
dec
cmpb
mov
push
add
mov
jmp
cmpb
mov
je
das
insl
std
sarb
fadds
mov
fbld
xchg
jp
mov
jp
add
jl
in
xchg
das
dec
fdivs
inc
push
imul
popf
pop
movzwl
ret
frstor
and
xchg
inc
fisubs
add
loop
cmp
sbb
ror
xlat
xchg
sbb
and
rolb
cmpsb
test
popf
adc
mov
xchg
mov
fyl2x
ss
out
aas
mov
sbbb
mov
idivl
int
jbe
hlt
add
lahf
pop
push
popa
xor
das
xor
and
dec
call
imulb
mov
sub
add
scas
fidivrs
sub
and
icebp
xor
repz
add
ljmp
addr16
jae
mov
xlat
stos
xor
jmp
add
or
test
js
fcmovb
enter
xchg
jae
dec
lcall
insl
vmovsd
fcompl
xchg
faddl
aam
sub
clc
ret
pop
jno
nop
xchg
faddl
push
and
leave
push
adc
call
and
sub
cmc
push
mov
add
ret
add
in
mov
hlt
pop
mov
les
sbb
out
or
add
xchg
cwtl
out
mov
jns
nop
lea
arpl
push
xor
orl
dec
pop
movsl
mov
add
int
in
push
popa
loopne
out
pop
leave
pusha
sbb
incl
popf
mov
enter
out
jo
xchg
or
je
dec
xor
ljmp
xchg
adc
inc
jl
cmpsl
daa
xchg
push
cwtl
cwtl
push
shll
cmpsb
cwtl
test
icebp
sub
fldl
adc
popf
hlt
add
sub
push
add
jg
es
inc
jmp
mov
cmp
inc
sub
fsubr
imul
movsl
and
sub
and
mov
push
jmp
inc
mov
jge
scas
in
dec
add
das
scas
cld
pop
cwtl
iret
mov
push
stos
pop
mov
or
rcrb
addr16
cmp
mov
test
rol
cmp
xchg
and
xor
std
cld
pop
sti
ret
es
sub
pusha
sbb
cmp
popa
sub
mov
mov
cld
sahf
mov
mov
pusha
jmp
pop
icebp
or
mov
add
aam
aam
pop
fcoms
das
cwtl
xlat
cmc
test
mov
bnd
adc
xchg
lret
test
nop
xor
adc
ds
jnp
mov
jl
jge
and
adc
sbb
jecxz
inc
stos
fldt
jmp
sti
jno
into
pop
push
jne
mov
sub
mov
and
pop
sub
mov
xor
xorb
mov
mov
sub
bnd
int
mov
mov
sahf
cmp
xchg
ljmp
mov
mov
faddl
cmpsl
or
clc
jae
adc
pushf
iret
pop
aad
pop
sbb
jne
pop
loop
inc
add
les
pusha
mov
jmp
adc
cli
loop
xchg
scas
leave
imul
test
jnp
sbb
cld
jl
add
and
mov
sub
outsb
repz
dec
stc
insb
mov
lds
lret
stos
loop
daa
mov
dec
jge
jle
fiadds
and
call
adc
lret
jge
sbb
pusha
push
push
and
in
jno
fcompl
add
push
sub
pop
mov
popf
ret
xchg
dec
add
and
adc
aas
pushf
jo
sub
jae
pop
sbb
fs
add
enter
pop
fildll
sub
mov
mov
daa
xor
add
inc
pop
movd
add
add
xor
sti
lods
jecxz
mov
loop
pop
stc
imul
mov
xlat
or
and
fisubrs
jbe
or
popa
xor
push
push
dec
lret
arpl
jp
test
inc
loope
imul
push
out
loop
xchg
mov
stc
dec
das
outsb
push
add
xor
pop
jae
cmpsl
jne
sub
sub
pusha
fs
xchg
mov
and
ficompl
int
mov
jmp
scas
nop
dec
push
mov
jae
pop
adc
adc
iret
adc
stos
rorl
adc
xchg
out
stos
xchg
pop
fimull
pop
push
and
into
mov
daa
stc
mov
std
test
repz
ljmp
fsts
aaa
cmp
ret
lea
dec
dec
add
inc
out
movsb
or
and
xchg
sub
push
mov
xchg
or
mov
dec
push
mov
mov
mov
dec
loopne
sub
adc
xlat
add
jb
push
imul
add
add
mov
ss
mov
dec
aad
shlb
js,pn
sbb
movsl
clc
lret
dec
push
popf
add
fcomps
cld
sbb
adc
lret
mov
xchg
in
inc
sar
adc
movsl
ss
mov
mov
mov
jl
or
roll
es
or
movsl
mov
pop
gs
xchg
stos
add
movaps
mov
rcrl
sub
shl
mov
inc
popa
cmpsb
mov
add
clc
shlb
fisubs
shl
xor
mov
std
mov
and
hlt
cmc
adc
sub
add
popf
dec
fnstsw
andb
hlt
sub
mov
jge
or
std
jno
enter
shrb
sub
faddl
mov
lcall
add
cmpb
in
add
and
insb
lahf
dec
adc
sub
and
dec
bound
sbb
popf
je
and
or
xor
jle
push
das
xor
test
bound
add
pop
stos
or
add
test
repz
inc
mov
dec
nop
pusha
leave
lahf
popa
divb
xchg
xor
movsb
cs
loopne
or
and
pop
push
sbb
dec
test
adc
xchg
or
pop
mov
les
bound
fstps
adc
inc
mov
jo
cli
aam
sbb
xchg
jns
popf
out
std
leave
or
xchg
daa
pop
xchg
adc
out
mov
dec
xor
pop
shrb
sub
add
sub
mov
dec
push
mov
int
loopne
jo
ja
es
out
je
jnp
and
ja
iret
sub
faddp
ds
lods
add
popf
jns
lods
jnp
js
imul
mov
push
mov
ljmp
xchg
fisubrl
sub
iret
pop
or
mov
dec
shrb
mov
add
dec
test
inc
jo
test
stos
hlt
lcall
cmp
mov
push
clc
sub
ljmp
iret
push
mov
cs
or
mov
mov
lret
lods
movsb
shlb
push
and
cmpsl
push
xchg
add
jg
push
mov
repz
xor
in
jnp
std
pop
pop
in
mov
add
lea
sti
out
sarb
or
add
inc
sub
and
xchg
sbb
add
decb
repz
outsl
fwait
sahf
test
mov
cmp
arpl
clc
mov
mov
sub
mov
add
push
jle
sbb
lods
add
int3
jns
sub
add
pop
cmc
add
ljmp
outsl
frstor
stos
fstl
clc
jle
add
fs
mov
add
aad
jae
cli
pop
data16
jno
or
pop
int
push
xor
pop
ret
sub
xchg
mov
fmul
clc
popf
repz
jb
lds
adc
mov
mov
stos
pop
jg
fisttpll
jecxz
dec
les
out
sarb
sbb
jge
xchg
inc
repnz
testb
repz
mov
or
xchg
mov
nop
daa
and
jne
lock
or
inc
cmc
and
cli
sub
popf
mov
mov
and
push
shl
or
lea
or
inc
pop
fbld
pcmpgtw
or
out
cltd
add
push
sahf
inc
add
jmp
adc
cmp
add
mov
xor
pop
test
and
sub
adc
inc
push
pop
jnp
outsb
mov
ss
aam
mov
dec
lea
mov
and
lods
add
ss
div
mov
lods
sub
mov
push
dec
xchg
shrl
mov
xor
add
cmc
push
mov
push
push
jg
xchg
dec
and
les
and
or
imull
popf
add
push
adc
add
add
cli
push
adc
orb
jne
push
ret
dec
pop
adcb
inc
into
push
shll
add
pop
fsub
stos
jbe
mov
mov
std
pop
testb
sub
shrb
mov
in
test
mov
and
mov
xchg
shrl
add
push
xchg
sub
jl,pn
xchg
adc
add
adc
loop
lea
icebp
jae
cli
pop
fisttps
sbb
or
repnz
fbstp
or
bound
cld
lahf
pusha
dec
addr16
mov
pop
fildl
pop
fwait
or
push
repnz
jl
mov
mov
or
or
inc
mov
xor
fnsave
mov
stos
cmpsl
push
subb
sbb
mov
loop
insl
sti
loop
dec
pop
sub
hlt
add
mov
cwtl
rcll
jp
sarl
push
mov
in
mov
cmp
xchg
sub
xor
mov
pop
xor
insb
idivb
or
and
add
push
pop
pop
pop
nop
popa
xor
xchg
add
cs
sub
dec
lahf
jns
cmpl
jo
cld
add
sahf
add
js
mov
add
or
lods
mov
clc
stos
gs
shll
cmc
scas
mov
mov
daa
testb
xchg
hlt
cmp
cmp
in
cmp
lods
add
sub
dec
daa
pop
out
sub
adc
shrb
test
or
add
or
mov
add
push
cmc
cld
add
and
xchg
cmp
aas
cmp
and
pop
add
inc
popa
inc
xor
lret
pop
test
mov
leave
mov
incb
mov
add
and
cs
sub
or
popa
cmc
bound
fiaddl
jns
imul
scas
mov
jne
mov
and
pop
insl
pop
fistpll
cld
pop
add
pushl
adc
xor
aad
push
add
mov
cld
pusha
push
inc
inc
rorb
clc
test
and
push
fiadds
sub
xlat
jp
jb
loopne
setbe
aaa
inc
mov
es
inc
and
sbb
dec
pusha
sahf
aad
out
sbb
outsl
cld
testl
dec
inc
sbb
push
out
dec
outsl
adc
and
popf
sub
iret
mov
push
fs
fdivrl
add
xchg
sub
add
pop
xor
dec
sbb
mov
sub
aaa
orb
subb
add
dec
insb
repz
add
push
enter
dec
and
int
add
popa
ja
shr
push
out
or
lret
gs
popa
xlat
xor
cmp
jno
pop
or
sub
imul
mov
jmp
jle
dec
in
lods
mov
les
aaa
pop
jbe
dec
sbb
bound
dec
call
popf
and
add
fiadds
add
mov
push
mov
int
or
jne
sti
out
or
adc
jae
cld
mov
pop
popa
data16
sahf
or
into
mov
sub
add
sub
icebp
rclb
out
push
jmp
xchg
pop
popf
dec
jae
push
jns
jle
ljmp
jbe
iret
sbb
add
out
cmc
pop
in
and
adc
testb
add
sahf
ret
aaa
fadds
das
fisubl
push
out
pop
mov
jns
mov
mov
cmc
and
push
lock
adc
movsb
cmp
dec
test
jge
aad
mov
add
fldl
pop
push
mov
popa
les
lock
mov
adc
out
scas
and
in
inc
mull
or
pop
cmp
sbb
cmpsb
loopne
fstpt
jl
call
sbb
sbb
add
xchg
pusha
arpl
jns
mov
pop
push
sbb
imul
cwtl
push
lret
int
jp
nop
popa
push
mov
loop
mov
mov
xchg
push
clc
loop
enter
xchg
pop
pop
shll
out
mov
mov
adc
push
mov
mov
jnp
cld
jp
xchg
jo
xchg
sbb
xor
push
and
push
popa
pop
xchg
outsb
ficompl
fs
orb
sti
push
sub
xor
sub
test
les
xor
jg
add
mov
jno
lcall
xchg
adc
and
xlat
add
ljmp
push
insl
push
and
sub
cmpsl
int
inc
adcb
xor
pusha
mov
popa
jg
and
in
jp
dec
fidivrl
mov
and
push
push
das
repnz
cmp
lods
fwait
pusha
popa
test
pushl
adc
push
and
dec
ljmp
mov
push
pop
mov
xor
xchg
adc
adc
jno
pop
xor
sti
lret
dec
pop
dec
notb
pushf
pop
scas
outsl
inc
add
fisttpll
jbe
hlt
pushl
jle
fiadds
xor
adc
sbb
or
mov
and
js
xchg
insl
push
shll
jo
sub
push
cmp
mov
sti
add
sub
pop
dec
test
cmpsb
aas
pusha
out
xchg
or
popa
push
out
test
pushl
pop
subl
insb
pusha
pop
or
add
pop
cli
push
cmp
gs
push
add
xor
sti
mov
cmp
int3
test
test
pop
adc
dec
popf
hlt
inc
dec
std
sub
pop
inc
mov
and
add
sti
xor
lahf
mov
leave
cmp
add
inc
arpl
cmp
dec
les
add
mov
push
mov
lahf
inc
jmp
or
js
clc
call
popf
adc
and
add
mov
nop
std
push
cmp
cmp
in
jl
ds
imulb
push
mov
adc
or
push
jo
jg
insl
add
xor
loopne
push
pop
mov
adc
lahf
inc
inc
cli
mov
cs
sub
or
in
adc
push
and
inc
mov
add
shl
xchg
verw
sbb
add
and
iret
cmpsl
inc
mov
push
pop
or
filds
xor
sbbb
lds
popf
jp
or
cmpsb
push
jae
cmc
xor
mov
push
xor
movsb
daa
sbb
jle
push
jb
add
xchg
enter
dec
mov
mov
lret
sbb
lock
decl
mov
push
mov
je
imul
add
or
adc
int
scas
je
loope
ja
in
sub
mov
pop
mov
fiaddl
pop
xor
xchg
jno
sti
popa
popl
sub
divl
xchg
test
jns
stos
sahf
movl
adc
repnz
andl
mov
xchg
pop
fcomps
push
add
fsqrt
rclb
dec
std
lahf
cwtl
fcompl
cmc
loopne
sub
aas
xor
push
testl
inc
cld
sbb
mov
push
mov
movl
pop
and
gs
cs
loopne
repz
int3
hlt
jo
test
add
rorl
cmp
cwtl
je
mov
mov
cmp
xlat
add
cwtl
outsl
xchg
pop
jb
and
inc
incl
repz
ret
add
in
mov
mov
inc
adc
repz
or
sub
popf
and
cltd
daa
mov
mov
std
inc
nop
inc
xchg
call
dec
jo
inc
add
and
mov
fisubl
jecxz
inc
fisttps
fisttpll
add
mov
cmp
ret
push
mov
push
hlt
adc
jl
testb
imul
sbb
stos
xchg
call
lock
hlt
mov
das
in
mov
jne
mov
adc
mov
inc
jbe
xlat
mov
jne
sub
in
adc
cmp
pop
push
clc
test
cmpsl
mov
jmp
scas
pusha
and
cmp
dec
test
ljmp
mov
loope
test
repnz
dec
xchg
stos
int
imul
das
imulb
mov
and
dec
pop
fdivl
add
xchg
mov
inc
add
dec
or
and
push
and
les
adc
dec
dec
pop
jmp
adc
std
xchg
shrb
adc
lds
cld
in
popa
fsub
jmp
mov
jno
adc
add
sbb
pop
sti
pop
pop
fsub
mov
insb
xchg
adcb
outsl
stc
pop
test
jl
rol
add
out
sbbb
pusha
cmp
lcall
stc
imul
mov
jmp
add
mov
push
ror
scas
xchg
es
ffreep
in
xchg
mov
mov
stos
jnp
add
pop
pop
pop
and
adc
scas
fs
iret
or
cwtl
adc
test
imul
cmp
outsb
pushf
pop
mov
jp
jp
pushl
cmpsl
mov
shll
push
sub
in
dec
inc
adc
jp
cwtl
jmp
jns
mov
aas
and
sbb
push
daa
mov
pop
js
sub
and
push
push
adc
mov
out
mov
push
fwait
sub
mov
adc
and
shlb
fiaddl
mov
je
popf
fdivl
pop
push
push
lds
loop
add
push
sub
ret
jne
mov
imul
mov
add
mov
je
daa
xchg
mov
jo
xchg
pop
mov
add
adc
xchg
cmpsl
pop
pop
xchg
xchg
stos
testb
popa
fistpl
push
cmc
filds
das
add
cmp
popa
pop
pusha
pop
leave
mov
add
push
push
jb
add
cli
popa
cmp
pop
dec
fwait
add
pop
and
and
cmp
and
push
cmp
out
mov
pop
fsubr
dec
stos
sahf
xor
js
scas
mov
hlt
add
out
jecxz
mov
shll
push
test
loope
enter
sub
jo
xchg
mul
faddl
outsb
and
lahf
lret
sub
test
cmp
fstps
pop
mov
clc
lret
shll
call
cld
stc
push
nop
arpl
push
dec
fsubr
mov
aas
mov
add
pop
pusha
into
dec
and
sbb
mov
lcall
and
loopne
ds
xor
arpl
mov
fstpl
inc
mov
and
lods
xchg
fisubs
xor
cmp
mov
divl
arpl
dec
cld
mov
cwtl
daa
or
adcl
aaa
or
and
push
nop
in
mov
lcall
mov
gs
std
mov
movsl
in
adc
dec
lods
repz
icebp
dec
int3
add
adc
pop
clc
std
orb
push
jg
push
mov
out
jnp
fidivl
jae
add
jge
call
clc
or
test
push
sub
repz
dec
or
inc
push
sub
mov
inc
sahf
pop
sahf
dec
xchg
xor
sbb
ret
rorb
add
jnp
adc
addl
push
lea
pop
cltd
cmc
jne
outsl
mov
outsl
cmpsl
sti
and
mov
add
imul
xor
shr
pop
or
push
add
mov
mov
shlb
jge
mov
ss
mov
pop
or
inc
rolb
xor
cmp
pop
sbb
adc
inc
xchg
mov
insb
dec
mov
in
jge
and
jae
adc
add
xorb
hlt
pop
lock
dec
push
cwtl
and
push
jmp
dec
scas
fildl
and
outsl
mov
adc
dec
jns
adc
in
movsb
dec
lcall
addl
xorb
adc
bound
push
inc
sahf
push
cmp
cmpsl
cs
sub
mov
mov
mov
mov
push
xlat
cmpsb
ja
sti
mov
dec
scas
les
std
mov
jmp
daa
mov
ror
lret
pop
mov
push
push
xchg
pop
pop
xor
rolb
mov
cmp
stos
dec
push
mov
xchg
inc
gs
push
hlt
push
cltd
mov
push
jmp
cmpsl
push
lret
dec
or
sbb
push
call
pop
adc
cmp
sub
add
mov
adc
sbb
popf
or
cltd
loopne
or
test
aad
add
gs
cmp
sbb
cwtl
dec
mov
pop
xchg
mov
int
pop
sbb
scas
jg
pop
mov
es
jne
out
mulb
out
pushf
inc
gs
mov
push
insl
shll
jo
pop
shrl
or
mov
mov
inc
add
cwtl
inc
xchg
sahf
mov
mov
aam
cmp
mov
pop
fs
stos
mov
or
rclb
or
pusha
ljmp
xor
adc
cmpsb
imul
add
je
add
xchg
hlt
maxps
enter
movsl
outsl
and
xor
jecxz
in
das
xorb
popa
inc
enter
xor
mov
es
push
ds
je
xchg
cltd
fistpll
jmp
adc
xor
jmp
cmp
mov
push
inc
das
fs
js
inc
js
adc
outsb
push
mov
dec
jae
add
fnstsw
mov
mov
xchg
jns
jle
pusha
lahf
loop
cld
out
or
insb
rorb
scas
sti
cmp
hlt
add
mov
and
dec
jo
mov
outsb
inc
inc
pop
jg
adc
fcompl
repz
mov
in
lret
jae
popa
or
xor
sub
and
out
mov
inc
push
cmc
jo
add
popf
lea
popf
mov
xchg
cmp
pop
mov
add
imul
test
cli
stos
les
mov
repnz
shr
mov
movl
in
nop
add
dec
cmp
xchg
add
test
out
enter
outsl
lahf
loopne
and
mov
add
nop
sub
add
repz
test
mov
popf
adc
and
mov
sarb
or
ret
and
push
mov
push
pop
jb
mov
hlt
lods
add
mov
or
sarl
adc
aam
or
pop
adc
adcl
or
fnstsw
lods
jno
mov
jmp
sarb
pusha
cmc
mov
daa
xor
mov
movsl
out
fldl
cmp
mov
sub
cld
add
adc
fisubl
inc
jbe
pop
sti
and
call
xor
push
in
cld
xchg
in
sbb
jne
sbb
test
mov
sti
mov
pop
sub
push
movsl
or
add
pop
into
mov
add
int
scas
mov
dec
push
adc
push
jne
xor
lock
aaa
lret
push
std
in
ds
add
hlt
int3
xlat
repnz
pop
mov
pop
dec
shl
pop
xchg
cmpb
fwait
jae
xchg
shr
in
cmp
stc
dec
push
ljmp
stc
mov
pop
into
test
jnp,pn
fbld
addr16
sbb
add
mov
loope
les
call
daa
test
popa
mov
jne
in
xor
clc
jge
sarl
inc
add
js
dec
test
and
mov
les
ljmp
outsl
add
mov
popf
fstpl
cmp
xor
fcmovbe
sbb
fidivrs
dec
and
jle
push
or
and
icebp
cmp
lock
pop
cmpsl
insl
enter
insl
fcomps
jae
cmpsl
mov
ja
pop
sub
scas
mov
adc
xor
loop
push
adc
mov
cld
nop
imul
rcrl
mov
mov
mov
in
pop
scas
in
mov
and
aaa
jbe
inc
cmp
popf
inc
and
jg
ds
mov
jo
push
call
dec
adc
push
xchg
pop
mov
test
mov
inc
add
data16
into
test
mov
ja
imul
subl
push
add
cltd
cmp
out
jle
add
pop
pop
add
inc
lods
dec
lods
imul
cmpb
in
push
lock
into
or
pop
mov
fldcw
push
or
ret
mov
inc
or
inc
sub
add
mov
pop
jl
popf
clc
fimuls
push
lods
jle
dec
shll
lods
es
rolb
ljmp
or
popa
out
out
movsb
cmpsb
stc
push
outsl
into
clc
jno
mov
bound
mov
rorb
pusha
shlb
sub
mul
popa
mov
std
adc
jg
and
push
add
xchg
insb
pop
push
out
fldt
inc
or
sub
in
sbb
aad
add
mov
jle
push
pop
cmp
pop
fsubl
sbb
mov
popa
rcll
mov
cmp
std
jecxz
test
scas
mov
cltd
cmp
mov
or
pop
jne
pop
add
mov
sbb
inc
outsl
jbe
in
jo
mov
pop
sbb
cmp
repnz
xchg
sti
lds
jg
repz
or
xchg
sti
xor
xlat
aad
mov
mov
xor
test
mov
adc
loopne
loope
add
mov
lds
popf
mov
and
orb
arpl
scas
pop
cmp
ror
push
out
pop
xchg
fstl
adc
inc
out
inc
inc
xlat
mov
pop
stc
sub
pushf
mov
add
addr16
cmp
cwtl
push
mov
popf
or
orb
xor
adc
ret
jecxz
cmp
pop
inc
loope
data16
adc
pop
lea
sti
jo
loopne
jb
pop
adc
inc
jne
pop
fwait
aam
or
push
xchg
mov
add
fs
inc
pop
xchg
movsb
mov
cmp
or
pushw
push
jns
scas
xor
pop
popa
xchg
pushf
xor
add
ror
push
push
rcll
or
dec
popa
out
push
dec
fcomps
lock
mov
jns
lds
clc
cmpsb
popf
or
xor
inc
xor
xchg
sbb
or
add
lret
decl
fisttps
jle
imul
sahf
push
imul
sbb
pop
mov
xchg
pop
xor
sbb
inc
jbe
inc
call
jmp
mov
dec
popa
jl
into
ljmp
add
cltd
ljmp
popa
inc
sbb
add
mov
popf
sub
jl
cltd
and
imul
rcl
xor
cmp
std
inc
out
stc
push
push
aad
dec
pop
fmull
daa
jl
pusha
push
cmp
cmp
jl
push
mov
movsb
adcb
fldl
push
add
aad
add
mov
pop
sbb
pop
ljmp
stc
pop
aad
and
clc
or
cmp
mov
add
lret
mov
inc
sub
les
sbb
push
mov
and
xchg
in
add
adcb
lock
test
sbb
xlat
adc
adc
cli
push
loop
and
mov
shlb
mov
lret
jno
pusha
aad
fs
pop
inc
push
popf
add
mov
add
ret
test
add
jl
cmp
les
rcrb
testb
rcll
jno
scas
ds
add
call
rolb
dec
inc
sti
enter
mov
add
roll
pusha
jae
cmp
aad
xchg
push
xchg
inc
call
or
add
sub
xor
nop
repz
popa
pop
pop
pop
and
mov
sbb
cmp
push
stc
add
out
mov
cmp
push
or
pushl
scas
cltd
inc
adc
lock
in
xor
push
aaa
mov
push
add
popf
pop
jns
cs
push
add
sub
call
mov
pop
sub
testl
dec
inc
sub
mov
cld
push
lcall
dec
repnz
loope
xor
orl
xor
inc
jmp
inc
fwait
mov
add
popa
ja
inc
push
cli
rolb
testb
lock
adc
sub
imul
mov
aaa
or
and
inc
in
in
pop
jmp
test
mov
dec
and
mov
or
add
negb
test
and
in
adc
movsl
fdiv
push
rol
dec
or
mov
mov
xor
sarb
cltd
div
and
test
or
mov
xsavec
lret
mov
fldl
jbe
scas
out
mov
jle
push
mov
inc
in
push
sbb
arpl
or
pop
imul
xchg
jp
sbb
lea
add
or
xchg
stc
push
rorl
ror
lods
les
mov
ljmp
mov
pop
xor
lret
sub
ja
mov
jge
inc
scas
lock
add
call
scas
push
inc
or
push
mov
add
push
push
into
sarb
pop
pop
dec
mov
add
or
mov
stos
lea
rcrb
stos
push
loopne
pop
stc
in
xchg
add
inc
xor
imul
sbb
icebp
out
pop
arpl
inc
cltd
pop
dec
jle
push
jnp
loopne
xor
mov
movsl
mov
fcomps
icebp
jae
add
inc
mov
add
pop
dec
or
cwtl
push
jb
rol
and
dec
ror
aam
jno
jg
fcompl
sub
out
shlb
je
popa
iret
call
sub
push
enter
jp
pop
xchg
sarl
or
cmpxchg
and
cltd
mov
out
sbb
in
loopne
xchg
outsb
cmc
adc
dec
mov
dec
cld
lahf
add
jl
icebp
dec
adc
int3
or
faddl
or
jnp
jecxz
into
mov
xchg
xchg
aaa
xor
add
popa
test
out
imull
adc
js
sahf
add
xor
add
jecxz
lret
inc
fdivs
add
std
mov
jns
add
call
bound
test
xchg
rep
jge
add
inc
out
out
cmpsl
inc
mov
and
adc
insb
sub
jno
pop
inc
xor
push
aas
sub
inc
cltd
add
movsl
lods
into
aas
dec
jp
lahf
cmp
insl
mov
test
jecxz
lret
inc
bound
inc
loope
in
sti
rcll
jg
jl
inc
mov
xor
xor
xchg
sarb
push
aam
pushf
mov
ja
add
outsl
mov
cmp
or
push
clc
lcall
ljmp
add
in
repnz
mov
scas
or
lcall
mov
cltd
mov
push
pop
mov
ret
js
sbb
mov
test
ja
push
xchg
jns
add
fs
movl
test
js
mov
or
add
test
jne
bound
jl
or
add
cmp
pop
pop
aas
jl
cmp
testl
sbb
mov
arpl
inc
je
jle
stos
bound
or
xchg
push
popl
pusha
stc
cli
mov
dec
add
jns
pop
inc
ja
scas
js
es
cmc
insb
push
mov
lods
xor
add
lret
fsub
jle
jo
add
sub
mov
mov
outsl
pop
and
push
ret
mov
add
xchg
jae
inc
js
add
xor
fs
out
stc
flds
add
jb
ss
cmp
adc
inc
jle
ds
mov
out
stc
add
lods
lcall
cmp
jp
add
pop
les
push
ret
stos
in
aam
sbb
jl
sub
dec
repz
jne
add
sub
mov
aam
dec
fistps
xor
sbb
add
or
xor
loopne
push
inc
test
in
fdivl
add
aam
out
bound
mov
les
idivl
add
outsb
jge
bound
or
pusha
pop
or
outsb
add
sub
push
jno
xchg
flds
push
cwtl
push
jg
add
dec
or
icebp
flds
cwtl
shlb
lret
popa
lahf
adc
or
cmp
ljmp
and
add
add
leave
cltd
pop
jns
sbb
scas
pusha
dec
or
lods
xchg
push
pushf
push
stos
outsl
out
pop
fldcw
xchg
dec
xorb
clc
outsl
pusha
cmp
and
inc
sbb
and
sub
outsb
xor
dec
test
mov
test
test
push
iret
sysenter
push
movsb
cld
out
add
or
xchg
push
inc
mov
cmpsl
loope
pop
xchg
sub
hlt
xchg
add
js
xchg
popf
add
mov
add
insb
idiv
dec
out
cld
lret
inc
enter
test
or
aad
test
mov
xchg
es
fisttpll
incb
jmp
out
and
in
pop
adc
rclb
xor
mov
sub
mov
add
inc
lret
inc
adc
xchg
insb
add
sti
fdivrs
les
push
icebp
sahf
mov
xchg
inc
jle
pop
add
movsb
mov
add
xchg
add
and
push
rcrb
inc
mov
add
cmp
add
jg
adcb
movsl
xchg
mov
lret
add
push
jp
roll
pop
add
add
inc
or
and
rol
pop
shrb
andl
push
lret
add
enter
lods
lock
and
fiaddl
add
inc
popa
outsb
jl
add
mov
mov
pop
cmp
adc
rcr
inc
leave
mov
jle
not
jnp
rol
mov
nop
aaa
sub
mov
test
inc
cwtl
adc
pop
or
adc
add
rclb
das
add
daa
rolb
mov
orl
enter
rolb
in
cmp
jmp
add
or
lock
push
aas
mov
sub
sub
and
popa
bound
xlat
pop
stc
call
jmp
leave
dec
in
cmp
xchg
xor
sub
lcall
jo
testb
pop
outsb
lret
es
enter
add
sbb
dec
jbe
fprem
subb
sets
xchg
inc
in
xchg
fstl
mov
sbb
bound
cmp
add
mov
sarb
lahf
xchg
lods
or
lea
mov
repnz
addl
or
popa
push
adc
sub
mov
xor
and
out
mov
mov
dec
iret
jecxz
jnp
xchg
decb
orl
add
shll
push
stc
mov
popf
push
test
xor
inc
popl
pop
xchg
lea
mov
shlb
js
pop
fnstcw
divl
add
sahf
shlb
ss
sbb
js
adc
xor
add
add
popf
sub
sub
mov
loope
lcall
fwait
mov
pop
cmpb
fdivl
xchg
arpl
inc
inc
orl
add
push
int3
lret
or
inc
adc
or
inc
dec
sub
and
rclb
mov
roll
test
sub
and
arpl
lcall
sub
pop
sbb
pop
and
sub
addr16
inc
xor
or
push
ds
pop
jno
lret
sub
sub
mov
and
ss
into
add
cmp
clc
mov
loope
test
lcall
mov
cmp
fdivrs
sub
arpl
sbb
add
in
mov
and
leave
mov
jb
dec
cwtl
sti
xchg
movsb
inc
add
cli
lods
add
or
mov
sbb
push
mov
testb
and
lds
rolb
sbb
fcomps
pop
inc
xor
loopne
xor
ljmp
xor
mov
dec
dec
sub
add
jg
outsl
mov
fucom
sub
nop
pop
pop
insb
orl
xchg
pusha
out
jne
nop
pushf
sbb
inc
and
push
addr16
test
push
mov
sub
and
and
or
gs
add
mov
sbb
pusha
nop
mov
xor
cli
add
fbstp
add
jno
fiaddl
orl
in
in
outsb
or
xlat
push
cmc
pop
rolb
mov
ss
push
std
mov
andl
adc
iret
cmpsb
lahf
fildl
sub
dec
pop
push
mov
shlb
cltd
add
mov
jbe
add
and
xlat
into
pop
dec
cmp
xchg
xorb
out
js
push
cmp
add
cmc
xor
adc
shl
push
add
test
stc
add
orl
inc
mov
lret
mov
jae
xor
or
loope
add
add
mov
add
mov
in
pusha
aad
add
xor
testl
sbbb
add
adc
scas
and
sbb
lret
add
jno
jae
clc
fistpl
fists
push
lret
pop
inc
xchg
in
mov
cli
out
daa
ja
or
nop
clc
add
or
adcl
popf
xor
loop
inc
mov
jb
push
add
inc
adc
jo
cmp
imul
xor
sbb
aaa
add
bound
xchg
adc
in
push
sahf
popa
cmp
or
pop
outsb
add
dec
cmpsl
sub
jl
add
push
and
rcr
add
jge
inc
xor
js
in
push
ret
cwtl
sbb
sbb
sub
jl
repnz
jp
jb,pt
mov
in
int
cmpsl
cmp
add
jmp
mov
pop
xchg
je
cmp
mov
jl
sub
cmc
dec
add
movsl
add
je
sub
add
cmp
shll
inc
icebp
add
rolb
xor
out
xor
sbb
push
mov
push
inc
or
lahf
cmp
or
addr16
xor
cmp
xchg
stos
cmp
add
adc
jg
jp
add
add
ret
cmp
loop
jae
das
jp
arpl
out
scas
roll
outsl
insl
adc
pushf
inc
add
sbb
je
daa
push
andl
push
add
aaa
lahf
in
and
movsb
ljmp
jae
rclb
in
lret
imul
cmp
xor
push
xchg
lea
sbb
sbb
int3
push
roll
fnstsw
mov
dec
add
hlt
add
out
ds
andb
daa
push
adc
jb
imull
popa
outsl
ss
data16
sbb
stc
enter
or
cli
iret
xchg
add
and
add
push
pop
add
je
and
dec
jmp
add
dec
test
les
xchg
push
cld
shr
fnstsw
add
insb
adc
or
mov
scas
sbb
jecxz
jle
and
popa
mov
je
sbb
mov
and
xchg
dec
mov
or
scas
adc
mov
mov
movb
loopne
or
ret
rorl
aaa
xor
rolb
call
add
cmp
outsl
pop
mov
cli
add
pop
movsb
inc
ds
dec
je
add
cltd
push
ljmp
push
call
push
or
or
test
xor
inc
add
je
cmp
sbb
in
cmp
xchg
inc
insb
inc
add
out
sbbb
movsb
call
pop
mov
lahf
lcall
jmp
dec
scas
add
test
aas
ja
pop
pusha
in
cwtl
stos
pop
cmp
in
adc
test
xchg
or
xor
mov
out
or
popl
lea
pop
loope
faddl
addb
adc
rcrb
add
aad
xor
jb
jns
cmp
mov
jbe
add
push
push
sub
and
xor
mov
or
mov
cld
mov
add
aas
inc
mov
inc
cmpsl
pop
mov
push
cmp
add
mov
xor
std
enter
das
mov
inc
ss
cli
or
push
fndisi(8087
jns
jo
add
roll
test
sbb
push
sbb
test
stos
mov
pop
ficomps
das
add
imul
push
clc
lcall
dec
clc
cmp
push
insb
push
les
scas
and
sub
and
shr
in
mov
lock
mov
mov
andl
into
jbe
loopne
mov
add
js
adc
or
outsb
add
pop
loopne
shrb
add
or
mov
test
pop
add
scas
cld
shll
movl
xor
xor
cmp
mov
adc
jns
pop
stos
dec
cmpsl
rolb
pop
jbe
add
aas
rolb
mov
add
outsl
push
cld
lods
lahf
mov
jbe,pn
add
or
jb
inc
aas
mov
ret
mov
cs
roll
dec
adc
or
lods
add
push
cmp
sub
add
push
push
xlat
and
dec
adc
xchg
daa
push
add
add
stos
pop
mov
ret
sbb
cli
inc
mov
xor
pop
adc
clc
xchg
dec
inc
pop
mov
repz
call
testl
add
mov
cmp
dec
ss
mov
mov
add
jmp
cmp
out
and
add
outsl
into
aas
add
divb
add
mov
daa
push
out
mov
push
add
cmp
lea
push
or
jns
test
pusha
xlat
popl
mov
insl
addl
fsubrs
or
cmp
push
mov
mov
mov
mov
jne
loopne
jmp
pop
xchg
loop
lods
and
movsl
sar
cli
ret
lods
js
add
cmp
mov
jge
mov
mov
or
clc
add
fisubrs
push
xchg
out
dec
mov
dec
inc
push
adc
jns
add
popf
aad
xor
dec
sub
lret
pop
add
dec
add
sbb
pop
fldenv
sbb
pusha
add
sarb
test
add
leave
frstor
mov
add
ds
and
add
jne
jmp
mov
clc
popa
rcrb
add
pop
lsl
jecxz
ror
push
aaa
xchg
cwtl
add
iret
test
gs
sbbb
adc
sub
mov
sbb
daa
imul
shrb
ds
add
dec
mov
or
aaa
or
gs
repnz
xchg
jnp
adc
mov
mov
add
xchg
dec
outsb
add
cmp
lahf
loope
les
fistps
push
test
xchg
lret
add
dec
insb
mov
fnsave
or
inc
orb
lret
stc
cmpsb
inc
shlb
lcall
stos
push
pop
mov
jne
xchg
pop
aas
xor
cmc
in
adc
test
dec
cmp
add
insb
fwait
mov
sub
inc
cmp
xor
movsl
push
icebp
lret
data16
sbb
cmpsb
pop
and
push
fnstcw
jp
and
je
in
sbb
enter
enter
fisubs
and
and
mov
xchg
mov
mov
xchg
sub
ss
push
fcomi
clc
add
xchg
fiaddl
lea
ret
cmp
sbb
add
xor
mov
aam
dec
add
shll
pmulhuw
xchg
popf
adc
imul
pop
adc
jae
es
sub
out
mov
inc
add
pop
or
fidivrl
orb
aam
add
stc
jl
add
test
or
lret
stos
jnp
lock
out
push
dec
ja
es
imul
aas
sub
fiadds
dec
pop
stos
orb
inc
push
add
test
pop
bound
jmp
test
insl
cmp
mov
ljmp
jecxz
jmp
insb
adc
lahf
xchg
pop
jle
push
in
call
call
xchg
push
sbb
push
adc
or
and
mov
mov
arpl
loope
add
shrl
mov
outsl
int3
add
and
and
sub
andl
ficompl
pop
sub
and
lock
xor
or
push
addr16
push
cld
repz
popf
or
mov
cmp
lds
adc
ds
aas
xlat
xorb
pop
cld
adc
add
mov
movsl
rolb
add
scas
into
pusha
cmp
movups
pusha
repz
stos
sti
push
xchg
inc
inc
jecxz
fwait
dec
mov
icebp
dec
mov
mov
cltd
push
jo
push
or
aad
inc
movsb
adc
add
jne
sti
shrb
imul
xchg
loopne
add
mov
movsl
into
sbb
add
and
jmp
cli
inc
clc
in
cmp
sahf
mov
or
add
sub
popf
stos
in
dec
jnp
or
mov
mov
push
pop
lret
cli
rorl
mov
xor
loope
jnp
faddl
cmpsb
call
movsb
aas
mov
jo
mov
push
or
sub
fwait
ja
cltd
mov
dec
call
push
call
fnsave
test
ret
jns
movsb
std
or
sbb
mov
aad
add
aas
int3
jo
xchg
jo
and
stc
test
add
or
or
loopne
add
shl
daa
dec
into
sbb
in
push
call
xor
and
popa
mov
imul
fwait
mov
xor
inc
push
mul
cltd
lods
inc
and
insl
and
xor
adc
arpl
pop
and
xor
jnp
add
not
pop
ds
add
pmaxsw
xchg
out
fldt
pop
and
fisubrl
inc
xor
aas
ds
push
and
pop
xchg
sbb
or
or
hlt
repnz
inc
stos
sub
jb
sbb
adc
mov
or
push
fdivrp
loopne
bswap
pop
dec
movl
add
ljmp
rol
call
lock
lret
jg
call
add
mov
mov
int3
scas
xor
jbe
or
cwtl
movsl
mov
lock
adc
add
repz
xor
add
xchg
int
add
inc
enter
rol
add
and
fwait
jne
nop
dec
aas
cmp
out
xchg
xchg
jmp
xchg
add
cmpb
add
adcl
jnp
sbb
dec
pop
addb
jno
push
inc
test
add
call
mov
jmp
xchg
xchg
sub
test
flds
test
addr16
push
fstl
aad
subb
cmp
jne
mov
xchg
add
pop
mov
into
aas
aaa
pusha
add
stc
add
cli
in
loope
mov
mov
inc
mov
dec
dec
add
cmp
sbb
ljmp
shlb
test
iret
adc
jne
cmp
rolb
pop
ret
sub
sbbb
call
sub
push
into
shlb
add
in
sbbb
mov
test
add
cmc
jns
ffreep
sbb
nop
insb
call
cwtl
fisubrs
fisttpl
mov
iret
or
lock
and
add
pop
mov
stos
dec
add
scas
xchg
jbe
pushf
mov
repnz
ss
pop
pop
loopne
lahf
sbb
push
and
xchg
pop
mov
and
jmp
sub
add
pop
mov
icebp
les
rolb
icebp
dec
xchg
mov
repnz
push
push
or
aam
addb
push
addr16
mov
inc
lock
lahf
add
cli
call
clc
add
or
jb
push
xchg
adc
add
loope
call
lds
dec
inc
fs
xor
push
out
jl
add
bound
test
inc
subb
or
rcr
rep
mov
cmc
and
add
loope
or
pop
push
jl
scas
mov
and
movsb
mov
sarl
stc
pop
mov
insb
jmp
shll
ljmp
shl
mov
das
cmp
xlat
mov
push
xchg
mov
ret
push
push
orl
push
add
inc
cmp
movsb
ret
add
push
rorb
cmp
push
fs
aam
adc
xchg
repz
push
insl
pop
add
mov
leave
push
cwtl
sub
ss
mov
sbb
into
stos
jl
dec
outsb
jae
add
enter
clc
ja
and
adcl
pop
cmc
xorb
add
fdivr
xor
ss
int3
scas
push
lds
test
adc
xor
xor
adc
movsb
xor
sbb
adc
rcl
mov
push
xor
dec
adc
lods
push
stc
clc
pop
data16
dec
pop
push
nop
adc
mov
repnz
cs
stos
jns
add
inc
inc
push
rclb
mov
cwtl
into
push
out
adc
sahf
add
xchg
mov
and
ljmp
cmp
and
test
dec
pushf
mov
xchg
or
sti
dec
fldl
inc
mov
pop
in
add
mov
xor
addr16
stos
loopne
mov
call
jo
pop
pop
mov
aam
sub
insb
outsl
mov
push
inc
pop
dec
push
add
fistps
xchg
ror
outsl
or
push
int3
fcomi
imul
iret
adc
sub
cld
pop
gs
push
adc
data16
imul
mov
insl
add
xor
lret
inc
out
add
push
add
jne
daa
icebp
add
ljmp
cmp
loopne
or
imul
or
mov
ret
inc
or
mov
stc
adc
sub
sbb
sub
rol
xor
jl
cwtl
adc
inc
out
add
xchg
xor
mov
xchg
mov
pop
adc
push
add
push
pop
and
add
cmpb
stos
stc
insb
add
jno
add
loop
popa
mov
cld
add
in
mov
adc
add
pop
cmp
mov
add
gs
test
jb
adcl
lret
rolb
jnp
push
push
fdivs
pop
sti
mov
push
fsubl
nop
data16
add
pop
stc
std
or
mov
sbb
aaa
lock
fildl
jge
movsl
mov
rcll
add
pop
dec
mov
xchg
jo
lahf
cmpsb
add
aad
clc
int
adc
jns
add
xchg
push
mov
dec
sub
dec
dec
mov
dec
in
add
push
xchg
clc
add
data16
xor
cmp
jo
add
adcb
shl
and
pusha
out
fisttpl
shlb
push
jle
add
add
xor
and
jecxz
sbb
pusha
imul
mov
lods
xchg
add
or
add
pop
and
cmp
mov
pop
cld
mov
mov
jnp
nop
les
repz
mov
inc
fdivr
push
sbb
lds
inc
leave
maskmovq
mov
pusha
enter
int3
in
mov
cmp
fnstcw
push
add
imul
add
dec
lret
hlt
jl
add
jecxz
or
cs
pop
add
xchg
xchg
cwtl
adc
je
adc
push
adc
aaa
mov
das
je
add
addr16
pop
push
das
jno
add
mov
push
loop
add
xchg
fcomps
xor
dec
pop
pushf
or
sbb
cmp
pop
xor
popf
add
xchg
adc
adc
pusha
sub
leave
mov
jne
sti
add
add
and
into
rcrl
loopne
push
and
insl
in
or
clc
jnp
js
lret
out
adcb
xchg
pop
scas
ret
push
addr16
mov
mov
push
shrb
fstps
sbb
xor
dec
xor
pop
test
mov
add
cmp
and
inc
mov
test
add
loope
stos
push
add
and
shlb
xor
inc
dec
not
add
add
xchg
add
ret
orb
jo
subl
popf
pop
mov
lret
pop
aam
jno
pop
movsb
cmp
dec
mov
loop
stos
clc
adc
push
orb
and
call
jmp
je
add
outsl
cwtl
cmp
xchg
bnd
adc
jne
rcrb
mov
add
adc
add
push
mov
pop
sub
mov
or
inc
stos
aad
orl
outsb
sti
aam
adc
lods
mov
cmp
movsb
test
sbb
push
outsl
inc
add
sub
or
jns
fwait
inc
shrb
adc
xor
lret
adc
arpl
adc
or
leave
pop
subb
inc
popa
dec
push
push
adc
jmp
xor
loop
add
mov
aas
lock
or
mov
mov
sbb
fisubrl
dec
or
int3
stos
pop
pushl
sahf
test
lcall
mov
scas
add
aad
adc
enter
loopne
mov
stos
inc
in
pop
add
adc
enter
sbb
or
inc
push
sub
lret
shll
push
xor
add
or
push
adc
add
cmp
fwait
push
lock
add
sub
or
mov
push
add
mov
xchg
add
jo
test
or
enter
std
testl
cmpb
clc
add
stos
xsha1
cmpsb
or
dec
and
cmp
rcrl
aam
hlt
add
rcl
mov
fldenv
fcoml
aas
xchg
andb
push
mov
imul
lods
add
and
mov
mov
out
add
pop
nop
xchg
je
sti
pop
mov
push
mov
xchg
int
jmp
std
mov
cs
arpl
loopne
add
add
mov
ret
mov
in
jne
imul
sub
xlat
cmp
add
mov
dec
jb
push
test
dec
add
adc
sbb
shrb
sub
test
cmc
sbb
dec
repnz
rcrb
xchg
mov
mov
call
adc
add
sub
sar
add
jno
inc
adc
add
cwtl
mulb
or
jbe
pop
pusha
inc
lret
mov
lods
and
in
inc
sub
shlb
adc
pop
add
daa
psubusw
fisubs
add
movsb
sub
add
pop
mov
xchg
mov
push
or
xchg
adc
pusha
push
sbb
loopne
mov
sti
test
out
jge
add
dec
lds
add
xchg
mov
fsubl
and
add
add
idivl
fildl
lahf
mov
fsts
stos
add
add
pusha
lods
pusha
call
lcall
fimuls
jl
repnz
mov
stc
scas
and
adc
jmp
mov
push
inc
sbb
add
xchg
push
or
xchg
mov
pop
and
and
sbb
pop
adc
add
xchg
add
sub
add
test
sub
es
xorl
cmp
jo
mov
addr16
mov
andl
stc
sub
adc
xlat
pop
cli
adc
pop
pushf
dec
or
repz
add
jnp
pop
call
add
sbb
push
or
add
jmp
sbb
ljmp
pop
push
jg
add
xchg
cmpb
imul
adc
jns
jecxz
add
xchg
xchg
add
xor
jb
loop
push
and
dec
lds
inc
mov
mov
mov
cmpsl
fnstsw
add
or
insl
sub
cld
lods
aam
add
shrb
subb
int
mov
outsl
mov
decl
aam
or
les
lock
lea
cli
pusha
push
xchg
out
fmuls
dec
cmp
arpl
cmp
clc
ds
jl
pop
repz
push
mov
das
xor
cmp
add
in
arpl
in
pop
push
popf
rcrl
es
lret
or
inc
xchg
jno
movntps
mov
lcall
insb
test
push
sti
dec
mov
sarl
push
jns
mov
dec
adc
add
push
rcrb
and
dec
jns
add
push
mov
out
pop
lea
stos
shll
push
loope
pop
jle
push
push
cmpb
add
fxch
add
repnz
and
cmp
dec
lock
push
or
dec
popf
add
mov
jl
sbb
cmp
pusha
negb
and
movsl
sahf
popa
bound
jo
add
pop
inc
push
add
fstl
add
out
or
test
aad
cli
add
pop
lret
fisubrs
pavgw
roll
jo
dec
movswl
mov
str
xchg
iret
inc
xor
cmp
jmp
push
pop
ss
push
add
pop
mov
out
lods
scas
and
pushl
jge
pusha
sbb
pop
sub
lods
dec
mov
add
js
xor
xor
add
add
adc
mov
add
inc
add
mov
lock
dec
add
repz
adc
out
lds
mov
jp
add
pushf
pop
xchg
aam
jmp
popa
lds
sbb
inc
sti
add
lods
daa
cmp
jo
add
jb
in
scas
mov
sbb
cltd
add
add
jp
add
addr16
shlb
subl
push
outsb
repz
bound
inc
aad
cltd
jmp
aas
push
add
loope
sbb
cmovle
add
xor
outsb
inc
addb
push
fadds
sbb
faddl
jg
loop
xor
pusha
in
and
add
cwtl
bound
inc
jle
add
push
into
sbb
loop
adc
dec
bound
lods
dec
fiadds
lock
add
add
std
push
out
sbb
xlat
je
in
pushf
push
cmp
or
fidivs
int
add
mov
cli
aad
xchg
jno
jnp
add
inc
notl
shrl
addb
js
shll
or
clc
negb
sbb
push
pop
xchg
es
hlt
cs
cmp
cmpb
pop
out
inc
add
xor
inc
fadd
xchg
rcrb
in
jle
add
xchg
clc
lods
mov
or
add
daa
adc
pop
sub
xacquire
add
add
sub
lods
add
js
pop
aaa
inc
fcomps
pushf
xchg
pop
loope
clc
jb
icebp
in
mov
jg
sti
cs
insb
lock
loope
add
jnp
sahf
jmp
dec
aas
pop
pop
push
lock
cltd
push
mov
pop
add
shlb
mov
mov
mov
and
mov
xchg
loopne
sbb
adc
test
popf
add
mov
sti
add
shll
loop
push
xchg
shrl
gs
mov
add
push
sbb
or
mov
mov
sub
stos
and
lods
jge
add
imul
cmpsb
add
dec
jl,pt
xchg
add
insb
push
pop
ja
fnstenv
lock
in
fadd
or
sub
or
xchg
jge
fs
sahf
rol
add
std
dec
adc
imul
sbb
in
push
cld
xchg
pop
jl
sub
in
gs
sub
dec
add
sbb
jmp
mov
nop
or
push
mov
mov
or
popf
idivb
jl
jl
fsts
jne
push
fcompl
lret
out
pushf
fisttps
daa
clc
push
add
in
cmc
xor
jbe
scas
repnz
jae
movb
mov
nop
in
dec
ja
cmp
sub
mov
popa
or
cmp
adc
xchg
jb
mov
fiadds
addb
add
pusha
xor
lea
loope
arpl
mov
andb
int3
adc
addr16
pop
add
leave
jns
mov
imulb
add
scas
rcll
call
mov
lret
aas
lock
inc
and
jbe
jno
movzwl
jne
mov
and
loopne
or
push
ja
aam
jecxz
or
dec
jno
mov
inc
mov
pop
insb
mov
jl
pop
fcos
adc
cltd
lock
jb
adc
das
push
inc
sub
inc
xchg
pop
sub
ret
jae
xor
dec
sub
int
add
mov
jbe
dec
inc
pop
clc
add
pop
shrl
sbb
popf
or
cmp
dec
inc
xchg
inc
std
fnsave
scas
mov
cmp
daa
ja
inc
lock
mov
je
add
mov
mov
mov
xchg
mov
inc
cmp
add
xor
mov
inc
cs
mov
in
push
pop
ss
sbbb
shlb
ja
and
inc
dec
push
aaa
stc
fwait
and
mov
testb
fists
stos
cmpb
sub
cltd
mov
rcrb
call
push
jecxz
mov
dec
or
rcrl
lret
insb
and
int3
add
ss
jge
mov
and
inc
fst
xchg
add
ret
jns
add
push
jmp
mov
in
or
lret
js
inc
inc
add
and
xor
adc
and
ja
gs
dec
jecxz
fs
mov
add
jns
push
fdiv
sub
loope
fistpll
jne
xchg
stc
sbb
cmovp
test
ds
sti
mov
sbb
sub
or
inc
jg
add
icebp
pop
pop
add
push
push
xchg
flds
aas
scas
cmp
lock
imul
outsb
insb
xorb
add
pop
imulb
xchg
pushl
js
aad
icebp
loope
scas
ficoms
hlt
in
fcompl
xor
out
shr
sbb
xor
or
inc
pop
jge
or
pop
psraw
xchg
or
xor
mov
adc
decb
pop
mov
inc
xchg
mov
jge
xchg
dec
pop
dec
adc
icebp
mov
aas
loope
jae
std
ljmp
push
mov
les
jg
int3
or
loope
nop
cmpsl
out
add
mov
or
ds
popa
pop
xor
cmp
inc
jp
xor
jno
insb
xchg
push
or
je
xor
stos
push
pop
divb
leave
clc
adc
pop
mov
inc
cmpsl
outsl
pop
dec
pop
flds
mov
and
dec
xorl
sbb
aas
push
shl
xchg
add
pop
jns
lret
cwtl
fmuls
pop
pop
mov
ret
cmp
mov
xlat
add
inc
dec
sub
cmc
pop
sbb
repnz
test
mov
pop
add
push
das
jp
push
roll
mov
jmp
mov
jg
add
jo
ds
xor
push
xchg
inc
mov
lahf
push
scas
push
loopne
fwait
imul
daa
stc
imul
shrb
pop
mov
out
loopne
shlb
testl
add
jbe
mov
adc
rcr
add
add
sbb
add
add
aaa
fwait
pop
push
jo
iret
cmp
sbb
push
mov
pop
push
inc
jg
pop
cmp
push
or
dec
jecxz
adc
cmp
jno
adc
add
mov
mov
fsubp
push
cs
add
mov
mov
sub
fimuls
nop
out
je
push
adc
xchg
xchg
outsl
push
add
pusha
clc
jg
fbld
es
push
fidivrl
mov
pop
cmp
pop
lock
sbb
pop
fildll
cltd
shll
push
pusha
nop
pop
pop
jbe
ja
jle
loopne
add
lret
push
add
mov
pop
popa
jo
mov
or
add
add
adcl
adc
fsubrp
test
or
incb
add
adc
rcrw
adcb
sub
mov
shlb
jns
sub
call
sbb
je
pusha
xor
mov
or
adc
pop
fisttpl
nop
rorb
clc
or
idivl
add
int3
test
jg
sub
or
stos
ja
orb
fistpl
pop
adcb
adc
dec
inc
imul
movsb
cwtl
push
es
pop
inc
sbb
inc
subb
cmpsb
add
cmpl
cmp
inc
add
jle
sarb
push
jb
adcb
addb
in
adc
adc
mov
mov
add
push
mov
add
fdivp
xor
stc
hlt
add
add
sub
leave
rorb
pop
test
jecxz
imul
xor
xlat
cltd
mov
sub
cmp
cmp
pop
fs
pop
sbb
and
ret
adc
hlt
lock
test
mov
mov
popa
push
jmp
pop
sbb
out
sahf
movsb
int3
mov
xchg
js
and
cmc
nop
das
jnp
jo
leave
sbb
sub
scas
and
nop
fs
mov
and
push
jmp
enter
or
addr16
outsl
jmp
or
xor
sbb
pop
shlb
inc
adc
adc
or
mov
push
mov
add
fiaddl
mov
cs
inc
xacquire
sub
mov
xor
flds
push
mov
sbb
shlb
cmp
and
jns
pop
cmp
mov
cmp
pushf
cmp
mov
xlat
add
jns
cmc
shlb
add
gs
ds
lret
add
mov
xor
mov
jl
testb
fldcw
mov
add
fwait
pop
test
lea
test
js
hlt
subb
sub
adc
add
and
add
out
inc
or
jno
cmpsl
je
jg
cmpsb
add
aam
mov
inc
sbb
movsl
cmp
jno
les
mov
mov
sbb
repnz
inc
mov
pusha
mov
sbb
xchg
mov
pop
or
repnz
out
jno
fdivrs
add
shl
mov
mov
add
mov
pop
push
sbb
outsl
lret
mov
cmp
lds
pop
lahf
daa
fcoms
addb
repz
into
or
insl
lock
add
dec
push
mov
cltd
pop
and
xchg
push
add
testb
xor
pop
pushf
jno
cli
jle
inc
out
sub
and
lods
sub
das
cld
jae
jne
wbinvd
inc
scas
stc
add
push
outsb
add
mov
push
faddl
orb
add
out
inc
add
mov
add
bnd
int3
mov
in
and
fdivrl
dec
out
mov
pop
or
jne
mov
pop
loope
or
cmp
pop
or
inc
jb
push
repnz
out
mov
mov
xor
fdivs
lahf
call
cmc
xchg
mov
add
outsb
jmp
test
ficomps
cs
shrl
roll
stc
into
jno
mov
push
and
mov
jle
jmp
pop
stos
rclb
cld
adc
adc
aaa
sarb
inc
or
jae
add
lcall
add
push
sbb
cmpsl
xchg
push
orb
add
and
sbb
xchg
or
and
push
mov
add
ret
cmpb
loope
repz
out
cmpsl
jl
add
push
pop
lret
jg
stc
xchg
push
add
jecxz
mov
add
neg
movsl
add
xor
inc
pop
add
inc
js
pop
scas
and
lods
add
call
xor
add
push
pop
shl
inc
lock
mov
daa
xlat
lret
mov
js
pop
cs
fiadds
roll
push
lods
cwtl
lcall
and
sbb
nop
fs
xchg
aam
rclb
cld
pop
ds
xor
outsl
rolb
add
or
not
adc
add
fs
cmp
push
mov
adc
or
inc
add
mov
pop
shll
sub
rcrb
xor
in
xchg
insl
js
or
jl
shlb
addr16
pop
sub
lret
ret
or
movsl
xchg
test
sub
pop
dec
cmp
add
sbb
aam
mov
imul
fs
std
add
fistpll
push
push
andl
add
or
add
add
cmp
or
pushf
add
lret
jl
add
rcr
dec
or
fidivrs
jge
add
mov
sub
movsbl
sub
cs
stos
dec
call
inc
xchg
in
sub
insb
mov
mov
cld
rcr
bound
icebp
popa
neg
dec
add
imul
fisubrl
adc
cli
cmp
ljmp
aas
sbb
or
je
sbb
pop
cmc
inc
repz
sarb
jp
add
stos
fmulp
addl
mov
jg
add
out
jae
sahf
xor
test
adc
add
dec
in
or
mov
or
popl
sub
cwtl
xlat
push
lock
test
out
push
sub
or
cmpsl
andb
sahf
clc
loop
insl
pop
icebp
jns
add
jecxz
sti
pop
int3
lods
sbb
cmpsl
inc
and
sbb
int3
fists
sub
add
mov
jmp
stos
sub
popf
add
ret
add
jmp
cld
dec
lea
cmp
push
add
mov
xchg
and
std
lret
push
xor
pop
add
pop
mov
out
test
push
sbb
lahf
mov
je
and
lea
pop
sbb
and
insl
cmc
in
sahf
jb
jmp
add
or
push
stos
pop
in
xchg
ret
ljmp
add
arpl
dec
ficompl
add
adc
das
mov
nop
cld
add
call
int3
or
jno
aam
loope
and
dec
enter
inc
cmp
popf
frstor
test
add
into
xor
addl
jne
je
sub
add
add
movsb
cmp
pop
gs
shll
scas
inc
cltd
orl
or
xchg
dec
lret
arpl
popf
push
cmp
test
stos
add
pop
add
mov
sbb
lea
clc
sbb
gs
mov
into
les
add
inc
mov
mov
sbb
jmp
pusha
add
cmp
push
in
fwait
cmp
cmp
cmp
je
lds
js
add
sbb
out
adc
mov
es
push
mov
enter
add
cmpsl
ja
xchg
ss
lahf
add
ret
aad
xchg
add
les
mov
xchg
mov
inc
clc
lret
or
pusha
mov
mov
cwtl
stos
xchg
add
fisubrs
pop
out
lcall
mov
jae
aad
cmp
loopne
scas
push
inc
sbb
adc
xor
pop
adc
jle
fisttps
mov
addl
add
rclb
cmove
pop
ss
rcrl
sbb
arpl
pop
xchg
addb
xor
fsubrl
mov
adc
xchg
add
aad
or
into
pop
dec
xor
add
mov
sbbl
arpl
pop
inc
iret
fucomi
add
pop
stos
andl
cld
movl
hlt
and
pop
add
jmp
push
out
push
into
push
addr16
out
stc
enter
add
pop
inc
inc
add
jmp
inc
or
popf
and
test
xchg
loopne
and
out
add
sub
repz
xlat
jno
push
jno
jl
add
clc
ja
mov
add
push
pop
mov
jo
pop
movsb
sub
repnz
add
xchg
fwait
pop
out
dec
push
aam
daa
add
insl
rolb
add
adc
add
xchg
jg
add
cmc
xchg
push
insl
and
or
aas
add
jno
fildl
shlb
test
jb
inc
and
add
cwtl
movsl
and
ficoms
pop
pop
inc
sarb
add
mov
out
lods
xor
jb
ja
imul
movsb
add
in
push
xchg
jl
in
enter
sub
int
adc
shll
and
sbbl
shlb
add
mov
ret
int3
out
inc
hlt
xchg
mov
or
cwtl
mov
jno
int3
pop
sbb
jp
jo
scas
jl
jge
add
mov
fadds
nop
addl
insb
loop
cmc
add
pushf
xchg
pop
rol
sahf
test
inc
imul
jmp
jbe
cwtl
insl
add
push
mov
or
cmpsl
jo
mov
inc
orl
jo
mov
adc
mov
pop
mov
pushf
mov
pusha
inc
mov
jp
sub
shl
sbb
jne
sahf
add
sub
out
or
lahf
gs
icebp
add
shrl
add
arpl
in
add
sub
jle
aaa
jecxz
jle
adc
sbb
or
addr16
mov
aam
sbb
jno
and
mov
aam
sbb
fcompl
mov
dec
sbbl
fs
repnz
jle
aas
lret
sbb
xchg
iret
int
loope
push
clc
pusha
jns
notl
dec
dec
in
sub
and
inc
enter
inc
sub
jne
sbb
add
cmp
adc
or
stos
std
xor
sarl
mov
cmp
xor
jmp
jnp
add
clc
dec
xchg
ss
movsl
jns
es
add
mov
cmc
or
jb
decl
lret
hlt
xchg
data16
clc
mov
aam
repz
add
in
test
add
mov
push
imul
data16
stc
clc
loopne
inc
cmp
xor
sbb
add
jg
sub
out
jae
sbbl
test
xchg
cmpsb
sub
je
jns
add
cmp
or
xor
aam
add
jne
pop
iret
pop
aas
add
shl
popa
inc
inc
je
retw
jge
push
inc
mov
sub
out
test
sub
ret
push
mov
cltd
xor
mov
dec
push
fadds
cmp
int3
nop
dec
jp
add
out
sysret
lds
movsl
add
clc
inc
mov
dec
faddl
outsb
cmp
xorl
sahf
sbb
data16
jb
sub
andb
cmpsb
push
in
sub
mov
lock
imul
push
mov
dec
or
add
adc
es
push
or
out
test
cmpb
fbstp
imul
jne
stc
repnz
popf
sti
cld
sub
andl
test
or
adcb
aas
adc
imul
into
loop
mov
insl
mov
inc
xor
loopne
jb
paddq
scas
add
or
mov
mov
outsb
into
lock
lods
jb
ljmp
nop
lock
add
lahf
cmpsl
fsts
mov
mov
sub
nop
lea
push
scas
jmp
fisubrs
mov
movb
movsl
sti
sbbb
iret
push
mov
dec
inc
clc
popa
inc
out
pusha
mov
push
add
rcl
add
stos
clc
mov
aas
aam
or
sbb
add
lock
int
lods
call
sub
test
pop
mov
add
testb
inc
out
pop
dec
add
repz
mov
add
jp
movsb
jnp
or
add
mov
stos
cmp
fwait
push
insl
dec
imul
rolb
faddl
repnz
movsl
adc
pushf
xchg
jo
mov
sub
add
add
push
dec
push
cmpb
mov
out
add
adc
jae
xor
inc
push
and
add
lret
enter
aas
mov
xchg
jnp
paddusw
scas
mov
fdivs
inc
fiaddl
iret
pusha
out
cmp
test
jge
add
dec
js
stc
ret
jne
adc
fsubs
sbb
fldt
ss
popa
inc
push
mov
or
imul
aaa
mov
sbb
js
push
sbb
xor
fadds
mov
loope
add
in
adc
subb
out
lcall
inc
sbb
xchg
add
pop
push
inc
bound
sub
sbb
add
mov
add
sbb
jae
add
fstpl
mov
add
out
fmuls
sub
fs
push
inc
aas
mov
mov
mov
jnp
mov
fiadds
push
rclb
mov
xor
fisttpll
xchg
xor
sbb
sub
add
addr16
add
test
or
cmp
stos
adc
xchg
js
sub
call
mov
sbb
jecxz
cmp
test
mov
rcrl
ret
jl
add
xchg
mov
sub
add
sbb
cwtl
or
mov
mov
pop
test
mov
add
shr
fidivrs
push
mov
fcompl
add
jns
scas
add
addr16
test
shl
arpl
jge
or
jne
in
lret
mov
adc
jb
sar
add
insb
ss
sub
scas
pop
add
sbb
jecxz
aaa
verr
mov
in
push
pop
lods
mov
stos
outsb
push
dec
or
jnp
cmc
or
sbb
hlt
mov
pop
jno
xchg
loop
inc
push
pop
sub
add
sub
xchg
mov
fildl
enter
pop
mov
pop
cmp
or
or
jae
aam
xor
or
inc
add
jb
loop
filds
cmpsb
scas
sti
jg
sbb
xchg
lahf
sub
inc
push
mov
xor
push
fisubl
cmp
push
add
mov
std
or
test
mov
xlat
arpl
adc
lcall
mov
lahf
les
jae
and
pop
xchg
insb
cmp
repz
or
mov
leave
add
cltd
in
popa
in
add
sbb
push
fdivl
fwait
push
xor
cmp
pop
rcr
pusha
test
cmp
jns
mov
add
lea
imul
mov
cmc
hlt
outsl
fiadds
enter
je
orb
inc
in
push
lcall
jo
fcoms
addr16
xchg
adc
pop
inc
popa
adc
cmp
sbb
add
not
mov
or
ret
adc
inc
push
sbb
mov
stc
dec
addl
jnp
or
sub
xchg
sbb
cmpsl
and
out
or
imul
outsb
and
sbb
adcb
cmp
inc
adc
pop
lahf
add
dec
dec
mov
add
outsl
sar
pop
add
into
mov
lods
lret
push
faddp
hlt
xor
mov
jmp
loop
push
outsl
pop
sbb
or
dec
and
mov
call
cmp
inc
sarb
add
and
aad
dec
mov
dec
mov
sti
mov
outsb
mov
movb
rolb
insl
mov
test
sub
and
clc
and
daa
inc
dec
add
jbe
sub
lcall
subb
add
or
pop
sbb
pop
jl
or
add
rcl
or
int3
push
fucom
test
pop
inc
add
in
adc
loopne
pop
push
and
stos
repz
fmuls
lock
inc
mov
in
pushf
xorb
inc
pop
ja
mov
add
xchg
push
pop
xor
sarb
mov
int3
sbb
xchg
sbb
dec
shr
fs
add
and
sbb
ds
mov
and
push
icebp
cmpsb
inc
adcl
cwtl
sub
dec
clc
andb
cmp
cwtl
popf
jp
push
lods
punpckhdq
sbb
cs
add
xor
gs
iret
dec
xchg
pop
mov
xor
dec
pop
fwait
fwait
and
add
decl
add
or
lcall
sbb
cmp
push
sahf
push
shrb
es
or
pop
outsb
enter
pusha
push
fcom
adc
mov
insl
cmp
push
mov
dec
movsl
int3
inc
sbb
xchg
mov
popw
and
aad
push
sbb
add
idivb
sarb
fsts
xor
rcrb
out
loopne
or
subl
or
mov
xchg
sbb
fwait
add
in
mov
push
push
out
push
inc
push
add
inc
cmp
sbb
lods
pop
int3
xchg
adcl
loopne
and
xorl
pop
out
xchg
jae
mov
mov
push
jge
inc
add
js
pop
mov
mov
mov
sahf
or
jle
pushf
mov
lret
out
hlt
fsubrp
add
movsl
int
popf
jbe
jae
movsb
ror
mov
adc
lods
scas
jecxz
ret
push
add
xlat
adc
insb
jo
dec
xor
aad
push
icebp
lods
xchg
mov
cmpb
and
sub
sbb
jl
add
mov
sbb
in
out
cwtl
dec
icebp
sbbb
mov
add
mov
push
add
jl
pop
imul
dec
fs
add
mov
inc
add
cmp
lds
stos
add
and
pop
xchg
ret
rcrb
pop
add
dec
mov
or
pushf
str
xchg
jo
add
sahf
aam
mov
adc
sub
fisubrl
cltd
jle
add
cmp
push
test
mov
stc
sti
scas
faddl
cmp
das
lods
dec
adc
and
test
scas
mov
mov
hlt
cmc
pop
imul
pop
cmp
mov
pop
sbb
jb
adc
mov
inc
add
cmpsb
push
pop
add
mov
popa
push
outsl
and
in
data16
bound
sbb
add
or
pop
ds
add
fsts
cmpsl
aas
pop
cmp
push
mov
mov
pop
test
je
call
sbb
pop
ja
and
in
pop
es
add
repnz
mov
fdivl
adc
or
movl
or
cltd
push
jne
divb
into
push
add
cmpl
xlat
xchg
sbbb
mov
bound
add
rcl
pop
sbb
pop
iret
add
inc
cmpsb
fwait
pop
aaa
sbb
mov
sarb
sub
add
xor
stc
pop
push
xchg
jns
add
push
fistl
and
or
cmpsl
add
jae
or
or
jg
mov
rolb
fidivs
pop
fwait
push
adc
push
js
pop
add
movsl
sbbb
cmp
push
imul
int3
or
pop
sahf
jb
decl
cmpsl
and
adcb
add
mov
add
xchg
mov
loopne
dec
cmpsl
pop
or
fwait
cli
and
shr
out
testl
loope
cli
xchg
jbe
mov
mov
nop
mov
adc
clc
aam
push
xor
inc
add
jmp
popf
add
mov
inc
push
add
outsb
fcmovnu
cli
pmulhw
add
sub
jecxz
push
adc
cmc
xchg
and
add
and
pop
add
mov
lods
sbb
add
jae
push
mov
stos
shl
cmp
out
je
test
add
push
dec
push
roll
daa
in
inc
push
add
push
cld
xchg
add
or
jge
aaa
mov
repz
xlat
mov
pop
or
mov
icebp
mov
arpl
dec
inc
mov
fwait
repz
mov
iret
add
pop
les
mov
jg
dec
pause
add
sbb
adc
test
ja
call
sub
sub
inc
jae
ret
dec
pop
dec
pop
add
int3
jl
xor
fnstcw
add
fcomps
test
cmc
mov
bound
jo
cli
jecxz
lahf
add
inc
stc
xchg
lock
hlt
and
dec
shl
xor
pop
jl
push
dec
cmp
add
ljmp
jmp
loope
pop
cli
imul
lahf
outsb
xor
mov
loopne
adc
lock
into
out
lds
shll
mov
sahf
aad
negl
xchg
sti
add
ds
sub
rcrb
filds
lcall
add
ljmp
add
test
mov
dec
mov
add
push
dec
xor
pop
cld
push
inc
push
jmp
mov
xchg
pushf
daa
xlat
inc
jae
jno
mov
adc
inc
dec
or
adc
call
lods
mov
test
jge
cmc
pop
cmp
orb
adc
push
pop
sti
int
cmp
out
lret
std
stos
xchg
scas
add
jge
hlt
push
loopne
in
mov
sarl
jmp
and
fidivrs
jne
push
mov
push
and
add
mov
xor
mov
jne
xor
stos
xchg
jo
xchg
lods
xchg
mov
dec
lock
fwait
xchg
adcl
xchg
outsl
repnz
mov
push
insl
daa
fmul
add
out
mov
cmp
add
mov
cli
stos
call
dec
loope
jne
leave
inc
test
push
popf
push
inc
je
sbb
mov
movsb
mov
sbb
add
pop
sub
sbb
and
inc
mov
pop
push
jae
add
jbe
lock
add
hlt
cmp
mov
pop
mov
sahf
add
out
xor
push
xor
cmp
mov
std
add
sti
inc
cmpsl
insl
stos
sbb
add
cmp
das
add
bound
sbb
mov
add
je
stc
add
cs
fisttpl
push
xchg
cmp
lds
xor
insb
cld
add
pop
loope
rolb
insl
push
clc
imul
xchg
daa
cmpb
xchg
or
push
jb
and
pop
jle
mov
cmp
push
push
add
lds
mov
push
and
mov
out
stc
adc
pusha
add
push
sbb
shlb
int
mov
lahf
shrl
movsb
ret
mov
ret
sub
cmp
cmpsl
cmpsb
push
fmuls
rclb
jmp
dec
bound
jbe
inc
clc
xlat
lock
add
jl
xor
dec
and
imul
add
fsubs
add
push
pop
lcall
pop
add
sub
test
add
pop
outsl
or
adc
mov
mov
andb
in
test
repnz
xor
jecxz
lahf
ds
pop
add
mov
mov
into
pop
xor
sbbb
add
aas
add
add
push
push
test
mov
or
inc
add
push
lahf
shl
jne
add
repnz
sbb
mov
push
jb
jmp
mov
iret
stos
jle
xchg
fistpll
mov
add
rcll
iret
pusha
cmc
sub
push
or
mov
test
jge
push
mov
pop
call
inc
push
cmpl
xor
roll
fildl
mov
ret
loope
adc
popf
inc
pushf
add
lret
mov
push
xor
add
rol
scas
sub
xchg
jg
xor
aam
mov
rorl
push
push
mov
cmp
inc
push
repz
fildl
test
mov
jmp
add
cmp
loopne
add
clc
lret
lock
push
bound
aam
or
icebp
mov
dec
or
lahf
rclb
out
addl
adc
push
pop
pop
or
clc
out
filds
sarl
cmp
add
rclb
js
sub
outsb
add
in
maxps
sahf
fs
adc
sbb
add
imul
add
xchg
sbb
add
push
pop
sbb
pop
pushf
xchg
add
mov
adc
fldenv
lds
insl
test
loop
adc
sbb
pop
sbb
sub
ret
and
pop
or
mov
cmp
cmp
inc
inc
iret
fisttpll
push
pusha
and
lret
test
leave
jle
adc
loopne
out
es
pop
pop
add
xchg
cmp
push
enter
mov
sbb
aam
add
mov
jae
sbb
rolb
rcll
dec
shll
or
cs
pop
jge
jl
pop
sub
mov
call
xor
shl
lods
notb
cs
movsl
test
mov
jg
stos
lock
lea
add
insb
test
out
aam
push
push
fstl
stc
mov
std
or
enter
jo
cwtl
addb
and
pop
pop
inc
adc
outsl
ror
pushf
adc
add
or
add
imul
test
dec
roll
and
xor
test
mov
sbb
out
mov
stos
adc
adc
jnp
sub
jl
add
jne
dec
bound
add
add
popa
sub
add
push
mov
pop
mov
mov
int3
and
xor
fcomps
dec
mov
pop
mov
sbbl
mov
sub
adc
add
jmp
mov
cltd
mov
mov
fucomi
cmp
int3
jle
push
ficoms
add
jb
add
daa
leave
hlt
add
pop
dec
in
adc
jae
add
xor
push
imul
inc
nop
dec
lock
shlb
xchg
inc
push
pop
or
add
mov
mov
or
push
or
mov
mov
jp
inc
stos
outsl
in
icebp
sarb
add
je
popf
cmp
lret
add
insl
inc
push
sbb
cmp
add
mov
roll
pusha
adc
inc
add
sub
ret
mov
lahf
and
push
xchg
add
aad
idivl
shrb
faddp
xor
fisttpl
lahf
and
add
xor
and
sbb
sub
imul
jno
xchg
das
add
int3
aad
lahf
cld
push
mov
fcmovbe
fcomps
pop
shrb
jnp
dec
inc
es
inc
sbb
jecxz
cli
and
mov
sahf
adc
push
push
pushf
dec
andl
addl
cmpsl
sbb
mov
xor
jo
mov
roll
cwtl
fdivrl
enter
add
aas
mov
push
jl
add
pop
mov
mov
mov
cmc
cli
inc
jl
ud0
add
into
push
aam
hlt
adcb
jnp
add
mov
mov
jp
inc
stc
push
imul
cltd
das
into
sbb
mov
jne
add
xor
pop
icebp
mov
lret
pop
pop
cld
cmp
push
mov
inc
into
sbb
push
push
add
out
pop
cmp
adc
push
cmpsl
xor
xchg
lods
scas
call
dec
mov
mov
dec
add
lods
add
in
stc
xchg
sbb
add
test
pusha
test
xor
dec
pop
xor
xor
inc
in
aaa
out
mov
clc
sub
add
jp
mov
jle
scas
pop
je
or
mov
push
bound
aam
adc
data16
push
rcll
aas
sub
push
sbb
push
cmc
push
cmp
iret
push
sbb
or
addl
mov
aad
testl
add
daa
inc
add
das
loope
es
push
js
roll
mov
lahf
push
push
shl
adc
mov
lods
leave
or
dec
fdivrs
lock
sub
add
or
xor
xchg
sti
xor
add
sbb
and
mov
enter
cmc
cmp
jle
out
outsl
add
xlat
gs
add
inc
cld
adc
pop
mov
fistl
lock
dec
add
cmp
int3
fidivrs
adc
leave
fcompl
jge
test
sbb
loop
dec
addb
and
dec
add
imul
mov
xor
push
push
roll
inc
loop
iret
jns
outsb
add
aas
pop
fdivl
inc
pop
mov
adc
pop
add
cmp
pop
sub
mov
mov
fcompl
test
mov
inc
ds
cmpsb
movsb
xchg
scas
stc
in
or
mov
inc
xchg
add
or
in
pop
nop
mov
pop
sub
jl
dec
jo
pop
aam
add
jmp
mov
add
and
pushf
add
cmp
dec
add
pop
inc
dec
xchg
aam
and
in
sbb
sbb
cld
jmp
pop
divl
add
sarl
pop
imul
push
mov
scas
out
sub
add
xlat
mov
daa
adc
cmp
adc
lcall
loope
add
repnz
push
fildl
mov
leave
stc
shlb
pop
add
loope
jle
lds
cmp
lock
inc
jl
adc
insl
add
dec
imul
in
jmp
sti
dec
jne
es
ret
add
orb
fnstcw
leave
jnp
aaa
and
inc
add
stos
ret
jae
xor
call
mov
pushf
fs
test
add
add
repz
out
cli
inc
xor
sbb
or
dec
outsl
add
and
add
sbb
inc
xlat
and
push
and
out
jb
add
and
mov
sahf
and
add
cmp
add
pop
jns
sub
shlb
pushf
or
pop
mov
pop
pop
in
add
cmpsb
out
mov
push
cmp
cwtl
outsb
cmp
cmp
xchg
pop
stos
xorb
lds
push
sbb
cmp
fiadds
lea
jge
mov
iret
sub
mov
mov
divl
add
mov
out
xchg
int3
sbb
mov
push
sti
daa
jo
jne
add
std
dec
sub
insb
out
andb
pusha
mov
sub
stc
cmp
je
fldl
ss
inc
addr16
add
mov
jmp
cltd
sbbb
lds
pushf
xorb
add
xor
outsb
pop
dec
hlt
add
lcall
inc
pop
fs
inc
mov
pop
dec
in
add
ja
add
jmp
leave
adc
mov
mov
sub
mov
add
adc
cs
cmc
notb
xor
lret
lcall
jle
inc
jmp
loop
lds
dec
mov
add
jo
lahf
ja
add
cmp
add
inc
enter
jns
int3
sbb
insl
add
or
aad
mov
lret
dec
pushf
mov
movsb
xor
push
inc
mov
or
call
in
jne
addps
jmp
pop
inc
movsl
push
xor
fdivr
stos
neg
push
cltd
add
or
mov
jae
test
push
fdivp
dec
add
inc
cwtl
stos
in
std
cltd
je
sub
sbb
mov
inc
imul
cmp
cmp
xor
jecxz
idiv
test
jne
inc
cli
addb
and
add
push
mov
cmp
lret
bound
add
xchg
or
mulb
mov
pop
inc
cmpsb
call
shlb
in
movsl
into
fnstcw
add
fcom
lea
or
mov
jae
add
mov
jne
add
mov
jmp
fst
mov
pusha
or
daa
pop
mov
scas
inc
mov
es
pusha
jae
jne
push
push
cli
fmul
add
test
lods
dec
dec
cmp
xchg
insb
and
add
out
push
dec
push
push
mov
pop
adc
add
inc
popa
fstpl
inc
pop
leave
dec
and
addb
fs
and
in
add
call
push
add
add
out
inc
add
mov
sahf
add
sbb
pop
repnz
add
and
shlb
rcrl
jae
popa
add
mov
mov
pop
outsb
mov
out
push
xchg
enter
jle
jb
add
xlat
cmpsl
add
xor
xchg
sub
jg
aad
and
push
xlat
jb
add
jmp
sub
xchg
hlt
out
add
mov
mov
add
ror
outsb
int
add
mov
testl
pop
pop
andb
add
iret
dec
lcall
repz
in
cmp
adcl
fs
jl
das
add
aaa
adc
sub
cmp
xchg
repnz
mov
test
mov
pop
fcoml
repnz
push
jle
test
pop
aad
jmp
loop
pop
out
and
add
rcrl
lcall
in
sub
fsts
jg
ret
je
add
in
sahf
jmp
sbb
cmc
add
int3
cmp
and
sub
fiaddl
mov
mov
mov
adc
or
sub
push
clc
rorb
cmp
cmpsb
cmp
xchg
stc
inc
xor
add
mov
hlt
cmc
add
inc
ficompl
dec
dec
lahf
add
insb
inc
inc
rolb
push
add
data16
push
add
cmp
mov
fwait
idivl
or
push
and
add
xorl
dec
cmp
lods
clc
enter
repz
push
addb
jb
das
dec
gs
je
and
ljmp
add
sti
dec
pop
add
mov
sub
adc
mov
jae
jmp
xor
aas
je
movaps
sbb
xchg
xor
popf
add
pop
ret
filds
mov
add
in
lea
stos
clc
pop
jo
add
xor
cmc
sahf
cs
add
rclb
xchg
xchg
call
cmp
call
pop
cli
mov
std
out
and
jl
add
mov
sub
jo
loopne
loopne
std
add
xor
and
cltd
mov
ret
into
rcrl
lds
shrl
push
jb
jg
add
cli
xor
add
dec
push
cmp
sub
jl,pn
xor
mov
lods
sarb
out
popa
aas
jo
gs
jo
cltd
mov
mov
clc
outsl
rorb
adc
aas
ja
add
imul
push
rcrb
mov
add
push
xchg
clc
add
and
xor
stc
icebp
inc
cmp
cmc
int3
lods
lea
inc
add
in
and
xchg
mov
es
xchg
test
sbb
out
roll
push
fadds
rorb
into
je
cmp
or
add
and
inc
jb
cmp
sub
add
imul
imul
sub
dec
popf
sub
lea
jg
test
in
iret
jp
add
push
dec
push
or
sbb
dec
je
dec
xor
clc
repnz
int3
add
pop
aaa
add
pop
fisttps
in
icebp
es
push
popl
mov
jno
adc
cmp
ror
cs
adc
loopne
add
icebp
mov
jae
insb
clc
je
enter
xchg
movsl
frstor
loopne
xor
ljmp
add
shr
pushf
sub
fimull
inc
test
movsb
roll
xchg
xor
sbb
adc
xor
bound
aam
push
mov
add
sub
sub
pop
add
push
pop
jb
enter
xor
dec
fstps
add
mov
inc
sldt
lcall
add
push
loope
add
mov
loop
test
jne
rcrl
aad
cmp
push
add
mov
mov
mov
ret
aaa
enter
cmp
fwait
arpl
add
pop
inc
mov
test
mov
add
roll
fimuls
mov
ror
clc
push
movsl
cwtl
dec
xor
in
scas
test
sub
stc
cmp
das
mov
cmp
ds
cmp
sub
mov
mov
pushf
mul
fstpt
out
inc
ds
sahf
stc
add
rcrb
ret
add
ss
daa
adc
mov
out
lcall
add
outsb
mov
shl
cmp
inc
fwait
jle
es
sub
leave
scas
mov
rorb
ljmp
aas
add
pop
ret
sbb
and
addr16
mov
insb
inc
xlat
adc
cs
xchg
inc
add
jnp
push
jge
push
sbb
fwait
dec
pusha
cltd
xchg
lods
pushf
in
add
inc
out
hlt
adc
hlt
sub
pop
stos
out
jbe
mov
fldl
je
xchg
add
enter
andl
rcr
jmp
adc
subl
add
sbb
cmc
dec
jle
mov
daa
xchg
push
roll
inc
rclb
clc
adc
and
stos
jle
push
pop
dec
call
mov
dec
jno
pop
adc
inc
add
fisubl
mov
hlt
test
sub
repz
mov
ret
sbb
jl
add
inc
sbb
fs
add
pop
ljmp
push
scas
jbe
clc
hlt
cld
ja
mov
push
adc
mov
xor
mov
xchg
pop
jne
dec
pop
mov
bound
repnz
mov
xor
push
stc
mov
dec
add
notl
imul
jb
lret
repz
push
add
ret
subb
fcomps
adc
ss
cld
js
daa
fbstp
popa
push
add
insb
pop
into
int3
loopne
and
push
fstp
dec
pxor
jns
in
pusha
add
mov
push
js
and
push
and
shr
mov
repz
dec
cltd
pop
shlb
add
mov
add
add
jecxz
mov
add
lahf
loope
add
adc
aad
fdivrs
or
and
mov
adc
hlt
sub
push
push
outsl
rolb
les
push
loopne
scas
xchg
mov
test
mull
out
sahf
out
fadds
add
jns
lods
mov
jge
or
jecxz
lock
mov
cmc
add
mov
and
xor
lcall
pop
fidivl
pop
and
mov
jnp
loop
sti
jecxz
stos
movsl
movl
pop
and
int
outsl
std
xchg
sbb
mov
mov
das
shrb
jmp
inc
inc
cs
leave
add
xor
mov
test
das
aad
xchg
add
scas
mov
sbb
dec
fs
or
pushf
lcall
test
pop
ja
push
adc
xchg
out
xchg
inc
and
cmpsb
out
add
mov
pmuludq
enter
mov
mov
dec
mov
ds
movd
sbb
mov
cmp
mov
adc
jae
add
or
in
or
test
hlt
add
push
orb
sahf
add
fisubrs
das
add
pop
or
add
push
ds
jne
xchg
inc
add
rcll
movsb
jae
push
pusha
pop
lahf
inc
add
sub
int3
jp
add
jnp
jmp
gs
or
mov
dec
notl
pop
push
add
inc
push
xor
or
fsubrl
pop
add
daa
test
sbb
add
pop
lcall
in
cmp
cwtl
or
outsb
add
jae
xchg
push
incb
jl
jbe
jno
add
in
xchg
mov
enter
cli
mov
mov
mov
lock
sahf
scas
in
add
inc
pop
lds
push
sbb
test
adc
insl
xchg
pusha
pop
add
imul
add
pop
add
sbb
dec
testl
sti
add
gs
orl
add
jbe
inc
cmp
mov
mov
fdivrs
sbbl
jo
add
xchg
pop
ret
or
inc
loopne
inc
inc
popa
jae
test
adc
jno
addl
clc
xchg
add
adcb
cmp
add
cltd
test
loop
add
outsb
std
iret
push
test
cmc
add
hlt
loopne
adc
add
push
pop
mov
cmp
int3
cli
pop
loope
outsl
sti
loop
lods
pop
xchg
in
cmp
or
inc
pop
mov
jge
pop
xchg
loop
push
sarb
out
push
enter
cld
add
mov
mov
pop
add
in
es
cld
in
mov
movsb
repnz
sbb
in
pop
xor
fwait
push
jno
unpckhps
bsr
sbb
inc
gs
dec
xor
add
in
cmpsl
loopne
dec
jo
dec
sbb
mov
ja
xchg
cs
mov
pop
jbe
iret
sti
add
aas
aam
movl
adcb
jae
jle
pop
push
push
inc
add
dec
in
pop
arpl
fnstenv
xchg
out
mov
add
jb
xor
and
shrb
mulb
mov
in
fidivrs
subl
cmp
push
push
cmp
add
mov
mov
loope
or
jge
test
test
bound
jl
push
scas
xchg
pop
mov
adc
mov
push
popf
int
mov
bnd
add
insl
addr16
ret
add
adc
add
outsb
test
cmp
push
xchg
dec
add
mov
or
add
fidivrl
inc
clc
das
add
xchg
jge
mov
aas
notl
add
pop
in
add
or
push
add
mov
jle
or
jno
andb
hlt
add
daa
scas
scas
cmp
xchg
mov
push
in
jle
pop
add
into
mov
add
xor
in
scas
stc
inc
fsubrp
pop
mov
in
dec
and
insb
pop
add
and
sbb
pop
in
leave
mov
cld
add
nop
mov
rcrb
and
ds
pop
push
lret
ljmp
jmp
mov
push
arpl
insb
add
mov
add
hlt
out
les
push
ds
gs
pusha
mov
bound
lret
pop
add
xor
dec
add
fnstenv
cmpsl
mov
sub
push
push
inc
dec
insl
mov
fs
in
lcall
lock
jmp
icebp
jns
lcall
pushf
stos
loopne
scas
out
enter
bound
xor
mov
mov
mov
inc
sbb
lcall
mov
xchg
and
and
sbb
sub
mov
cmpsb
cltd
nop
inc
outsb
aam
jg
mov
jae
dec
add
insb
jmp
push
in
filds
sarl
sbbl
daa
addl
inc
fucomip
scas
add
popl
xchg
mov
stos
jns
jae
imulb
mov
sbbb
jg
add
cmp
push
divl
jns
add
pop
pop
in
mov
or
shll
dec
sarl
lods
test
xchg
jae
add
stos
leave
and
add
sbb
add
mov
nop
outsl
rolb
lea
rep
jecxz,pt
aaa
ljmp
icebp
addr16
enter
out
pop
fistl
mov
ja
inc
cmp
mov
inc
xor
cmp
fadds
jo
jecxz
ret
lods
push
or
stos
icebp
jb
rolb
push
neg
or
inc
fdivl
sti
add
inc
jle
add
jb
rorb
mov
or
sub
dec
mov
add
mov
xor
in
jne
add
and
or
imul
inc
cmc
lar
or
adc
cli
inc
lock
loopne
stos
adc
and
add
push
loop
sbb
jbe
sub
in
insl
test
repnz
mov
sbb
push
mov
cmc
leave
xchg
push
mov
rcll
mov
cmp
cwtl
dec
cltd
loopne
addb
pop
stc
fisubrs
pop
push
xor
push
xchg
or
cmp
outsl
pop
pop
dec
flds
mov
fidivs
add
das
pop
push
inc
into
ds
in
scas
add
mov
data16
jp
xor
mov
in
shl
dec
sbb
insb
jl
mov
adc
and
ds
add
aaa
sbb
push
add
in
or
ret
xchg
mov
cld
xchg
add
jl
lea
and
add
mov
xor
pop
cli
add
or
xor
and
cltd
adc
cmpsl
mov
sbb
add
mov
adc
in
pusha
sarb
add
sub
loopne
mov
add
test
ss
pop
data16
mov
imul
aaa
jae
mov
mov
lahf
or
push
xchg
jbe
mov
xor
add
or
clc
mov
shrl
add
mov
js
add
int
jge
mov
add
aad
or
xchg
dec
pop
shrb
mov
seta
dec
add
inc
jo
int
dec
push
push
je
push
rolb
xchg
pop
shrl
jle
push
or
push
icebp
std
adc
and
or
fidivl
add
jmp
and
adc
inc
add
sub
addl
sbb
dec
lds
pop
movsb
push
les
mov
adcl
sbb
cmc
mov
jno
jmp
xor
xchg
pop
inc
das
hlt
mov
insb
nop
cwtl
add
cmp
hlt
add
pop
mov
add
int3
stc
cltd
fisubrs
mov
cmp
insb
add
jb
xchg
shll
adc
and
pop
daa
push
add
popa
js
mov
dec
xchg
pop
mov
ret
adc
xor
lods
testl
push
fisubs
cld
mov
add
mov
sbb
iret
add
jmp
out
add
stos
sub
push
push
ljmp
add
loopne
xor
lock
fwait
pop
mov
xchg
imul
iret
add
inc
stos
or
pop
cwtl
mov
ret
popl
roll
jb
in
in
int
jne
push
add
cmpsl
xchg
in
rorb
xchg
mov
divl
mov
cmp
outsl
pop
sbb
pop
imul
data16
sbb
add
jnp
adc
insb
mov
and
jg
imul
fdivrs
sbb
sahf
and
scas
push
add
out
adc
dec
cmp
or
fucomp
iret
pop
pusha
imul
insl
int
addb
or
pop
mov
add
jns
lock
mov
push
xchg
or
cmc
push
rcrl
ljmp
jb
dec
pop
inc
rcrl
xchg
gs
add
and
and
sbb
jmp
jp
inc
rdtsc
mov
adcl
pop
mov
movsb
cmp
inc
dec
cwtl
cltd
lods
xchg
dec
subb
call
xchg
cmp
cld
add
arpl
sbb
mov
mov
add
push
push
add
jb
add
out
es
jge
ret
repz
mov
xor
xor
adc
pop
leave
fcoms
loopne
js
idivb
pop
and
shr
xchg
add
bnd
vmwrite
pop
int3
add
cltd
pop
decb
repnz
add
dec
xchg
push
sbb
jg
xchg
enter
pushf
clc
jb
cmc
mov
and
or
dec
mov
dec
call
jl
mov
test
hlt
rcrl
lods
pop
xor
dec
xchg
xchg
and
inc
fwait
aas
xchg
stos
add
xor
gs
bound
in
divl
add
mov
insb
and
insl
cld
add
cwtl
js
cmp
push
pusha
cli
push
jnp
jb
pop
inc
es
movsb
adcl
pop
push
fisttps
adcb
adc
sub
xchg
mov
sbb
test
test
fcmove
push
ljmp
cmp
in
nop
inc
cmpsl
pop
xor
and
and
loope
mov
lods
push
pop
add
push
leave
adc
mov
mov
shll
add
inc
in
xor
inc
mov
pop
lcall
and
gs
movsb
dec
add
test
mov
cltd
fstpt
jge
arpl
adc
mov
pop
les
fimuls
testb
fistpll
nop
sbb
lcall
mov
xor
cs
out
loopne
mov
and
dec
enter
pop
pop
dec
scas
adc
xor
mov
daa
push
jo
iret
movsl
lret
arpl
jmp
cmp
pop
xor
mov
adc
lcall
rorl
inc
push
and
and
fwait
add
adc
out
jo
xchg
add
add
mov
add
jb
or
add
mov
add
or
data16
mov
push
jae
ljmp
imul
inc
sbb
sahf
push
orb
roll
ret
jae
cwtl
push
repnz
add
xchg
pop
or
sub
leave
test
mov
enter
add
sbb
aad
dec
dec
sbb
das
rorb
movsl
inc
cmp
or
jecxz
jns
lret
adc
mov
add
dec
pop
adc
pushf
jnp
and
retw
sub
jae
adc
dec
sub
flds
inc
inc
mov
iret
nop
in
mov
adc
mov
stc
pushl
pushf
cmp
in
adcb
out
es
pop
and
icebp
cmpsb
add
mov
dec
or
das
sub
jle
add
xchg
vcompressps
shlb
clc
test
lcall
xor
push
test
repnz
mov
push
cmc
pusha
int3
push
pusha
mov
sarl
xor
xchg
pop
pop
fwait
aad
add
push
mov
xor
adc
add
cmp
pop
call
ret
cmpsl
dec
stc
mov
je
or
es
push
stos
xor
icebp
xchg
jo
or
xor
pop
add
push
inc
pushf
dec
in
add
sub
or
dec
fcoml
add
pop
roll
repnz
dec
pop
sbb
loope
jo
and
cmp
push
clc
xchg
sbb
cmpb
pop
loope
jl
hlt
adc
inc
out
mov
cmp
or
adc
dec
out
cmp
jnp
das
xor
push
frstor
pop
xlat
add
inc
xchg
jae
notl
sbb
inc
popa
shrl
into
adc
out
mov
push
andb
sbb
inc
xchg
and
int3
pusha
jge
xchg
mov
push
cmp
add
addb
and
jnp
cmp
out
mov
sub
ljmp
loope
cmp
aad
jmp
push
mov
ficomps
inc
call
sub
pop
fists
lods
push
add
or
inc
and
nop
add
cmp
jmp
pop
add
mov
movsb
cmp
cmp
jo
mov
imul
ja
sbb
xchg
cwtl
fwait
add
push
sub
mov
add
rorl
add
fistl
rolb
push
out
mov
pusha
popa
rcl
sbb
jo
cltd
add
in
xor
cmp
test
add
lret
add
sub
cmp
add
scas
cmp
jo
mov
jne
add
test
loope
adc
insl
jb
rcll
add
cs
cmpsb
lods
jno
xchg
fidivs
lahf
mov
jp
add
adc
xor
scas
add
mov
arpl
push
lds
cmp
ja
fcoml
inc
and
inc
loop
and
push
push
or
loopne
push
fwait
sti
out
add
movsl
pop
sub
push
dec
rorb
testl
jl
add
gs
xchg
mov
loopne
inc
jne
scas
sub
dec
sti
es
hlt
add
pop
push
imul
outsl
add
inc
push
fstpt
dec
adc
lcall
dec
addl
cmpsb
xchg
jle
loopne
add
rolb
add
xchg
sbbl
repz
jge
loopne
or
outsb
mov
and
inc
popa
and
movsb
xor
mov
jge
xor
xchg
push
sarb
push
in
lret
adc
add
stc
xchg
adc
scas
add
sub
mov
int3
xor
jle
iret
in
adcb
clc
call
cmc
add
in
add
ja
jle
fcomps
rolb
insb
sbb
sub
arpl
fwait
lods
dec
lea
jne
jnp
xchg
push
or
pop
inc
add
mov
nop
lods
loop
add
dec
mov
sbb
aad
adc
cmovle
test
shlb
stc
and
sub
push
mov
dec
rorb
inc
cmp
cmp
dec
add
incl
out
pop
add
mov
mov
aaa
sbb
pop
dec
mov
add
dec
shll
iret
pop
inc
incl
sarb
xor
xor
in
std
add
pop
imul
add
xchg
sbb
test
hlt
pop
daa
add
popa
cmp
jmp
loopne
es
pop
dec
mov
addr16
sti
and
mov
aas
ret
sti
loopne
adcl
inc
push
int
xor
leave
das
xor
jbe
outsb
add
pop
insl
mov
inc
jnp
dec
cmpsl
add
movsl
cmc
push
or
lea
xchg
jo
lcall
add
iret
loop
sub
and
mov
fdiv
dec
jns
add
or
xlat
jns
movsl
loopne
insl
add
clc
frstor
pop
aad
xchg
in
or
sbb
add
push
js
push
jno
rolb
xor
push
push
loop
add
pop
orb
add
push
xor
xchg
inc
jns
cmp
jmp
push
jle
and
bound
xor
ret
mov
movsb
popa
add
xorb
loop
lret
push
test
mov
in
mov
stos
int3
cmp
inc
mov
sbb
adc
pop
pop
inc
add
icebp
dec
cli
xchg
movntps
adc
cmc
adc
sub
jnp
mov
sbbb
mov
and
add
push
xchg
outsb
repz
and
mov
mov
int3
pop
jge
iret
cld
add
mov
xor
lea
dec
das
roll
dec
mov
enter
add
mov
dec
sbb
xchg
add
mov
add
rclb
roll
ljmp
and
imull
sub
mov
outsl
push
adc
dec
or
adc
in
cmp
mov
clc
scas
pop
hlt
addl
mov
call
mov
pop
lock
enter
jno
add
call
out
add
push
mov
sub
stc
jl
mov
pop
add
mov
pop
mov
nop
mov
add
or
inc
pop
push
cmp
inc
andl
fnstcw
into
mov
call
inc
enter
idiv
mov
dec
jecxz
cs
in
mov
lcall
cmp
sbb
adc
mov
jno
sub
sbb
add
icebp
aas
xchg
xchg
push
in
and
call
jp
mov
pop
add
mov
pop
sarb
and
repnz
push
in
jb
out
ljmp
out
roll
add
jge
cmpsb
std
add
add
cs
test
lods
stc
mov
in
add
test
adc
push
xchg
add
addr16
sar
movsl
add
xchg
enter
sbb
add
jl
add
icebp
cltd
push
mov
push
in
popf
pop
jne
push
cmp
add
cli
adc
push
adc
adc
std
jg
das
mov
ret
arpl
pop
jp
inc
pusha
stos
and
push
jbe
add
and
fldt
dec
in
dec
repnz
push
lcall
mov
scas
add
clc
lds
or
iret
outsl
or
enter
add
test
rcrl
push
jmp
sahf
pop
mov
xchg
out
xor
rolb
popa
fcmovu
fiadds
jmp
pop
dec
scas
sub
sbb
shl
cmpsb
sahf
mov
and
add
xchg
in
into
psrlq
and
jo
add
pop
adc
adc
mov
or
sub
pop
cmp
mov
iret
aaa
add
repnz
cltd
pop
call
insl
lods
mov
cmp
in
inc
rcl
mov
push
xor
jb
jp
cs
ds
pop
aaa
loop
add
shlb
or
notb
ljmp
lret
movsb
add
adc
cltd
push
and
sarl
inc
aas
mov
pop
or
lds
lock
push
mov
add
push
in
movsl
stc
pop
add
mov
outsl
xchg
sbb
dec
push
adc
mov
mov
in
or
fisttpl
pusha
adcl
clc
push
scas
add
mov
adc
lret
add
sub
sbb
sub
fisubs
shll
mov
imul
mov
pop
lods
insl
inc
pavgb
mov
mov
jmp
subb
jnp,pt
mov
add
cmp
inc
mov
add
ljmp
outsl
sbb
push
add
jmp
cltd
lret
in
inc
or
testb
and
mov
inc
mov
push
mov
scas
loopne
loop
icebp
outsl
add
cli
xor
loopne
add
lea
out
iret
in
imul
mov
xlat
loopne
fnstenv
es
add
mov
es
lds
sahf
mov
clc
xorl
pop
jmp
inc
add
rsqrtps
sbb
movsb
add
push
dec
mov
pop
hlt
add
jle
bound
in
xor
cmp
sti
fwait
cmp
sub
repnz
cli
dec
aam
fnstenv
loop
shlb
in
test
cmp
out
mov
cmc
imul
inc
test
push
ror
popf
cltd
inc
add
aam
pop
push
roll
add
outsb
mov
sbb
ret
lods
pop
adc
dec
aam
jecxz
mov
fisubl
aad
or
ljmp
cmp
in
xchg
add
sub
add
push
push
xlat
add
xchg
in
dec
and
push
xor
ss
insb
pop
mov
xor
cli
add
pop
pushf
jb
push
clc
popf
lock
xchg
addb
psrlq
and
push
test
jno
add
sti
into
cmp
fisttps
mov
loope
add
es
adc
not
jnp
pusha
sti
and
loopne
pusha
pop
cs
add
and
add
push
les
out
pusha
add
mov
lret
bound
dec
loop
jp
xchg
sbb
rcl
or
inc
xchg
pushf
dec
pusha
in
xchg
mov
xchg
jp
mov
fwait
push
mov
call
in
add
loop
imul
xchg
and
cld
enter
sahf
or
add
mov
push
add
insb
outsl
sbb
es
xor
mov
cmp
insl
adc
cmp
loopne
test
lods
push
mov
call
out
add
xchg
insb
rep
mov
lcall
je
or
add
dec
dec
xchg
xlat
sub
test
cld
movsb
xor
rcrl
inc
cli
shlb
shll
add
pop
jmp
out
sahf
pop
in
xor
sbbl
push
dec
jae
fwait
mov
jno
dec
push
add
xor
pop
mov
add
dec
xchg
shrl
fimull
mov
cmp
jbe
addr16
sub
xchg
std
das
shl
movsb
enter
push
mov
or
popa
push
jmp
pushf
hlt
dec
add
adc
ljmp
and
pop
sub
inc
ret
jle
add
mov
and
sub
add
sub
xchg
add
mov
push
pop
add
and
popw
xchg
fnstcw
test
neg
add
xchg
arpl
js
mov
xor
subb
jo
mov
ficompl
cmp
mov
pusha
push
xchg
arpl
add
dec
aad
push
gs
repz
or
aaa
push
or
add
inc
dec
shrb
mov
adc
fdivp
add
push
mov
mov
mov
add
add
ret
cld
jae
in
loopne
sti
push
mov
pop
out
mov
subl
xchg
push
pmaddwd
lret
out
add
hlt
inc
push
xchg
sti
xchg
add
les
push
add
add
add
mov
nop
leave
add
adc
ja
xchg
fsubs
test
add
daa
xor
add
jge
into
pop
lock
iret
sbb
sbb
arpl
addl
out
sahf
add
lret
xor
mov
aad
incb
jecxz
mov
add
cli
mov
xor
arpl
add
jmp
jge
xor
and
js
sahf
push
or
aas
jbe
mov
ret
mov
pop
adc
add
pop
mov
push
scas
je
flds
mov
jo
movsb
add
adc
incl
add
and
xlat
push
mov
or
dec
lahf
inc
das
add
dec
and
fs
pop
lods
xchg
xor
cmp
push
push
int3
cmp
cmp
push
fisubl
mov
loop
fisubl
push
add
pop
mov
jo
push
sbb
or
sahf
testl
inc
clc
push
add
test
dec
enter
fwait
fs
sbb
sub
mov
add
mov
movsl
ja
test
mov
andb
add
dec
jae
icebp
pop
mov
loope
xchg
incb
test
mov
add
xor
inc
sbb
add
andb
int3
cli
nop
push
push
lock
roll
movsb
or
cmp
lock
loop
inc
add
xor
add
shll
mov
adc
jb
in
cli
cmpl
cmc
add
sbb
xchg
push
in
adc
out
pop
cmp
add
sbb
jne
aad
mov
sbb
push
xchg
fdivrl
add
push
aam
cmpsb
outsb
ds
pop
cmp
xchg
aas
stc
mov
xlat
roll
mov
loop
adc
ljmp
sub
inc
notb
cmpsb
cmp
das
xor
add
mov
add
fildl
xor
in
mov
and
pop
xlat
mov
dec
inc
fs
addr16
loopne
sbb
jl
fwait
leave
adc
fidivrl
add
lods
xchg
or
lock
mov
mov
and
add
std
stc
outsl
inc
xchg
ss
mov
addr16
or
sub
jns
add
jno
arpl
adc
mov
popa
mov
ficoms
jo
int
imul
aam
dec
add
clc
out
xchg
outsl
mov
pushf
cwtl
loope
jg
adc
push
mov
stos
iret
add
data16
shl
nop
adc
mov
dec
js
les
jae
mov
jb
call
dec
test
xchg
imul
pop
jbe
add
xor
add
jb
xchg
inc
push
outsb
pop
inc
mov
add
hlt
sub
hlt
mov
mov
dec
pushw
frstor
sbb
pop
cmp
cmp
ret
sbb
sldt
xor
mov
mov
sbb
inc
add
movsl
cmp
add
ss
dec
sbb
adcb
add
mov
out
sti
mull
jnp
sarl
dec
add
orb
and
xlat
jecxz
pop
fcmovbe
cld
inc
inc
sbb
je
push
incl
sbb
cli
cmp
insb
cmp
and
cmpsb
les
xchg
add
cmc
repnz
frstor
cwtl
jbe
jl
scas
jb
or
add
orl
mov
fnstcw
mov
xchg
add
ficoms
jmp
sub
int3
jg
daa
add
das
flds
xorl
add
loop
jns
cs
hlt
sbb
xlat
xor
add
xor
inc
mov
or
sbb
adc
add
add
outsb
daa
add
pop
mov
insb
jmp
dec
jne
sbb
cmpsb
lret
mov
dec
adc
mov
add
lahf
js
pop
inc
movsl
pop
xor
mov
add
mov
stc
pop
add
xchg
push
add
leave
add
ljmp
rcrl
cmp
adc
in
push
xchg
cmc
fldt
mov
pushf
nop
adc
cld
cwtl
xor
and
mov
or
daa
test
dec
lcall
bound
xchg
add
popa
xchg
xor
pop
adc
cmc
inc
lcall
fiadds
jno
test
cmpb
mov
sbb
mov
les
pushf
push
jge
xchg
mov
sbb
and
dec
sub
inc
jge
dec
insb
add
add
xor
scas
mov
mov
mov
sbb
imul
lds
add
fsub
add
mov
flds
adc
call
jae
stc
rorb
jns
lock
xchg
and
jle
mov
ds
add
test
dec
andb
icebp
test
clc
roll
inc
mov
cli
push
andl
add
mov
inc
hlt
jp
push
aam
push
sahf
into
lret
add
fisttps
add
pop
jle
jecxz
jmp
in
clc
cltd
adc
xchg
cld
subb
adc
sahf
add
xor
push
inc
adc
and
dec
mov
or
xchg
cs
jmp
pusha
add
sub
mov
pusha
repnz
mov
ror
inc
test
fidivrl
add
adc
ja
dec
roll
in
push
cmp
mov
sub
loop
scas
dec
out
ss
outsb
mov
dec
mov
add
pop
lods
xor
je
sbb
call
jg
inc
add
xlat
daa
scas
sub
xor
add
and
outsb
add
shlb
xchg
les
sub
jo
dec
sarl
push
loopne
aaa
add
inc
or
jle
add
sub
adc
ds
loopne
sbb
fcoml
add
out
pop
mov
loopne
and
cmp
mov
arpl
mov
add
mov
test
dec
add
jmp
mov
popf
test
sub
aam
bndstx
in
inc
pop
das
cld
pusha
dec
movsb
test
ds
and
jp
fnstsw
into
xchg
negl
adc
and
pusha
xchg
or
pop
out
inc
jl
jecxz
add
dec
lret
push
lds
adc
sbb
add
pop
fsubrl
pop
icebp
xchg
adc
aaa
sub
or
iret
jnp
rol
xchg
push
inc
pop
ljmp
push
mov
add
cmp
mov
jae
aaa
addr16
test
add
push
pop
insl
nop
cmp
out
mov
leave
lods
daa
adc
push
fs
test
fdivrl
rcll
xchg
mov
mov
inc
in
mul
push
or
cli
push
data16
pop
inc
mov
test
push
movsb
jae
jecxz
scas
bound
cmp
fmull
imul
fisttpll
or
push
add
fildll
jle
sbb
adc
jp
or
push
jecxz
movsl
dec
add
cmp
dec
test
dec
dec
mov
in
mov
xor
mov
loope
rolb
cmp
in
dec
cmc
es
dec
rclb
cmpsl
nop
inc
add
ret
add
notb
mov
xchg
add
jmp
aad
xor
in
cmp
pop
add
mov
icebp
xchg
add
fs
add
jle
movsl
jns
jg
add
fwait
push
btc
into
add
pop
jnp
les
std
add
push
xor
add
cmp
test
push
push
inc
cld
les
aad
ja
cmpsb
and
mov
xor
pusha
add
popa
or
loopne
push
mov
adc
pusha
adc
xchg
cltd
mov
inc
jns
add
xchg
stos
jg
testl
nop
fisubs
scas
out
decl
sbb
int
mov
jo
lret
fwait
xchg
cmp
js
dec
push
cmp
loopne
rolb
jmp
push
leave
into
incl
add
inc
xchg
pop
adc
cwtl
add
fnstcw
add
add
add
inc
xchg
sahf
add
and
cmp
xchg
add
and
add
movb
repz
jns
push
add
pop
add
pop
aas
mov
sub
lret
xchg
pusha
aas
mov
pop
add
sub
jb
pop
enter
shlb
dec
fnsave
jnp
mov
adc
insb
sbb
pusha
dec
cmp
add
sbb
aas
jmp
and
sub
loop
fists
rcl
xchg
and
or
jle
xchg
rcrb
cs
xor
pusha
sbb
jge
add
mov
add
and
add
pusha
scas
sub
mov
bound
lea
cmp
mov
in
jg
sbbb
add
mov
adcl
scas
add
std
add
xor
sub
cwtl
cld
jb
pop
dec
in
pop
bt
and
cli
dec
add
ljmp
cmp
xrelease
add
push
rclb
mov
pop
dec
call
add
loope
mov
dec
pop
inc
loope
stc
addl
sysret
cld
and
dec
fsubs
add
hlt
into
sbb
add
nop
mov
in
pop
std
sub
adc
loop
cmpsl
jo
add
popf
out
hlt
call
rorb
jmp
shlb
arpl
mov
pop
inc
nop
outsl
test
adc
xchg
sbb
sub
in
add
les
add
pop
je
lods
sub
test
nop
mov
push
jp
mov
add
lods
add
cmpsb
inc
shlb
fsubrs
dec
das
add
and
pop
sub
rcrl
jmp
inc
adc
sti
not
or
add
or
add
xchg
out
addr16
adcl
in
sbb
jns
mov
loopne
xchg
push
andl
add
push
testl
mov
pop
or
add
imul
cmp
add
testb
test
xor
call
repz
andl
add
dec
test
outsl
rcl
es
push
add
movsl
pop
sti
sbb
lds
mov
dec
sbb
insl
fidivl
test
add
repz
or
xor
sub
nop
inc
imul
or
cltd
je
aas
add
push
or
arpl
popa
add
aad
imull
iret
push
add
xchg
sbb
in
sbb
int3
jle
add
cmp
push
rorb
mov
fstp
aam
inc
ret
xchg
push
dec
in
icebp
add
sbb
add
and
pop
scas
pop
jge
sbb
cmp
into
sbb
out
push
xchg
clc
inc
add
clc
pusha
out
mov
mov
shlb
xchg
push
push
shlb
pop
mov
jecxz
jl
add
add
sarb
jns
mov
mov
add
xchg
or
fs
pop
test
push
add
sub
cmpsl
icebp
scas
out
or
pop
adc
cmp
mov
adc
sub
jg
call
clc
add
pusha
lods
xor
pop
adc
nop
mov
adcl
out
push
subl
mov
rcrb
add
into
mov
mov
add
out
outsb
xchg
shll
sarb
orb
add
mov
sbb
adc
cmp
das
or
cmp
sub
jno
shrb
xor
mov
aad
and
jle
add
jp
clc
pop
andb
add
mov
pop
lcall
add
jbe
rdpmc
lahf
int
cmp
in
and
outsb
mov
sub
xchg
ljmp
inc
adc
add
jmp
aas
lea
inc
fildl
sahf
mov
jp
lret
mov
aas
inc
int
cwtl
outsb
jge
jae
pop
movsl
cmp
arpl
add
inc
aas
popl
adc
or
pusha
jo
test
lock
in
scas
fists
mov
and
mov
push
add
xor
js
call
mov
add
mov
jmp
dec
or
mov
push
xor
push
pop
cltd
call
in
mov
sbb
sbb
sbbb
pop
or
jl
mov
add
mov
in
pusha
push
push
mov
xor
insl
or
push
jl
fadd
and
call
decl
icebp
adc
test
jmp
js
push
or
inc
or
in
cmp
cmp
lods
add
mov
les
jnp
push
lds
movsb
ja
add
sbb
loopne
loopne
adc
pusha
xchg
icebp
jb
pop
push
add
pop
or
cs
or
pop
mov
int
into
imul
jge
push
cwtl
mov
ficoml
add
cmp
movsl
rclb
lds
out
mov
shr
add
data16
ljmp
or
mov
outsl
sub
add
lret
pop
jmp
add
sbb
fdivrs
sub
iret
push
daa
inc
fcoml
inc
push
cld
and
or
or
add
push
and
xor
or
scas
sub
mov
mov
and
lods
mov
lock
test
push
pop
sbb
cmpsl
inc
mov
loop
pusha
mov
xchg
pop
mov
stos
loope
pop
pop
ficomps
inc
arpl
roll
daa
push
xchg
sarb
das
stos
andl
or
add
fbstp
add
jecxz
inc
sub
fucomp
xchg
jb
add
lret
sub
sbb
pop
fcomi
or
sbb
pop
and
and
xor
mov
gs
add
pop
mov
fwait
dec
ret
mov
or
fs
insb
aam
xchg
fcompp
filds
das
xor
inc
xor
lock
mov
mov
testl
movsl
xor
inc
add
orb
pop
xor
bswap
xor
jecxz
call
mov
mov
ret
push
and
add
push
orb
addb
add
cmp
cmpsb
sbb
or
jo
sub
dec
mov
sbb
pop
push
ret
mov
dec
push
pop
andl
loopne
or
add
adc
add
jg
push
or
int
pop
or
xchg
shll
movl
push
jecxz
cmpb
daa
divb
inc
jmp
bound
shrb
lret
nop
add
dec
cmp
jecxz
mov
add
fwait
and
add
sub
cmp
je
addr16
and
ror
mov
cltd
adc
orl
std
jnp
inc
push
dec
lods
push
adc
and
inc
call
lds
sub
sub
mov
test
push
and
sti
es
and
aaa
vmovapd
inc
xchg
subb
sahf
adc
icebp
sbb
outsl
jle
in
lcall
push
or
nop
xor
sub
or
inc
inc
mov
stos
ror
sbbl
cmpsl
add
incb
adc
push
gs
lods
xchg
mov
inc
xchg
daa
inc
or
mov
ret
pop
lcall
push
shrb
inc
shll
outsb
xlat
add
in
pop
imul
rcrb
mov
push
add
repnz
addl
add
outsb
shlb
dec
mov
lret
cmp
pop
jl
aas
push
clc
fldl
inc
or
xchg
mov
mov
mov
lcall
loop
fwait
gs
call
cmp
shrl
or
mov
cmp
bound
outsb
je
and
push
int3
std
jo
lret
sbb
fidivrs
jns
add
sti
add
pop
mov
dec
and
push
movsl
mov
pushf
and
xchg
add
sub
mov
nop
in
addl
or
xchg
fldl
bound
xchg
pushf
add
lret
movsb
push
jmp
pop
and
add
pop
adc
add
shll
mov
pop
add
sbb
mov
mov
lock
sbb
and
aaa
lret
jecxz
or
pop
arpl
aam
dec
inc
dec
push
sarb
add
into
cmp
mov
xor
out
push
andb
out
mov
scas
decb
sub
dec
add
bound
inc
push
inc
out
xor
aam
rcrb
lock
cmp
xor
es
cld
mov
rcll
aaa
rcrb
icebp
add
lahf
into
mov
push
add
add
jno
repz
mov
push
ljmp
bound
pop
fnstcw
xor
mov
lahf
adc
add
inc
stos
movl
sbb
test
mov
sbb
sub
lcall
pop
mov
push
arpl
or
mov
je
sub
movsl
xchg
fcmovnu
push
ss
bound
cmp
sbb
mov
fiaddl
addr16
cmpsb
add
stc
pop
jmp
or
push
leave
inc
adc
cltd
add
mov
pop
sbb
adc
cmp
cmp
xchg
cmp
mov
and
add
fadd
xchg
jno
rorb
dec
add
inc
insl
mov
and
jbe
mov
xchg
add
cmp
adc
js
add
loop
std
sbb
bound
cmp
jl
int3
push
add
mov
push
insl
enter
or
in
jae
dec
add
jo
jns
mov
push
inc
xor
add
and
aad
jb
add
jg
xlat
push
xchg
pop
hlt
or
out
xor
inc
xor
and
std
bound
leave
add
stos
mov
stc
call
je
ds
fiaddl
test
pop
dec
stos
jo
movsb
dec
add
inc
jno
int3
jmp
add
test
sar
loop
xor
int
fistpll
andb
ret
push
ficoms
xchg
fldl
data16
iret
or
lds
cmp
xor
mov
lret
mov
cmp
imul
fisttpll
cmc
xor
jae
clc
clc
sbb
ffree
ja
cmpsl
outsl
shlb
frstpm(287
pop
mov
inc
andb
shr
cwtl
jl
ja
xor
mov
push
imul
sbb
add
sbb
cmp
add
pop
cmp
insl
fsub
add
jne
aas
xor
out
add
pop
sbb
sub
data16
jns
lret
add
lods
lds
dec
roll
dec
iret
cwtl
insl
jecxz
das
xorb
xchg
icebp
dec
xor
ljmp
out
or
nop
xchg
icebp
nop
push
add
push
mov
or
and
inc
mov
sbb
rcl
inc
cmovge
sub
std
or
xchg
fisubl
nop
add
iret
dec
mov
adcb
das
lods
add
or
fists
in
gs
add
push
testl
fdivs
loope
add
stos
push
push
xlat
jl
ds
mov
add
testb
jp
sub
pushf
cmpsl
mov
nop
std
add
jp
int3
sub
jg
fildl
test
jne
add
hlt
shl
fisubrl
addr16
push
movl
adc
push
in
xchg
mov
adc
pop
cmp
out
add
repnz
xchg
fidivrs
add
pop
inc
cmc
xor
std
or
sbb
mov
data16
mov
movb
or
xchg
dec
and
add
scas
ds
ja
mov
cmp
pop
or
dec
push
cltd
mov
dec
sbb
pop
add
andl
fcmovne
dec
push
pop
add
add
lods
stc
add
mov
imul
cmpsl
cmovb
jnp
fs
jbe
add
mov
or
sub
sub
test
shll
cmpsb
fcomp
dec
pop
outsl
pusha
adc
cld
popa
sahf
adc
pop
imul
outsl
xor
add
pop
stc
out
loopne
adc
sar
pop
cmpl
sarb
pop
les
add
mov
fdivs
xchg
add
push
lcall
add
cld
out
pop
pop
sbb
xor
enter
cmp
popa
jo
xchg
push
pop
mov
loopne
push
jecxz
add
js
stos
add
or
jae
mov
loopne
jp
sahf
mov
icebp
xchg
add
addl
inc
xchg
and
shrl
cmp
add
pop
pusha
dec
add
orl
ret
clc
clc
inc
add
pop
or
add
in
sub
mov
cmpsl
add
and
popa
adc
sub
xorl
jo
ljmp
movsb
js
clc
dec
sbb
xor
scas
mov
mov
fcompl
aaa
lock
daa
mov
cmpsl
pop
xor
add
push
lds
sbb
add
mov
shlb
inc
xor
in
or
fsubr
popl
mov
or
add
pop
sahf
dec
xor
lcall
aaa
dec
pop
loopne
jge
out
inc
xor
mov
sbb
test
adc
adc
cld
repnz
inc
lea
movsl
pop
imul
push
and
push
dec
add
call
add
xchg
adc
inc
mov
push
and
push
and
cmc
xchg
rorb
sahf
add
add
pop
sub
dec
pop
int
jl
jle
ret
sub
out
adc
xorb
outsb
pop
adc
and
lods
pop
or
int3
and
je
sbb
dec
in
stos
cmp
push
lds
inc
sub
pop
out
jno
sub
cwtl
dec
in
pop
push
lret
xchg
adc
add
scas
in
pop
outsl
iret
and
dec
add
xchg
add
stos
mov
nop
lds
mov
mov
sub
or
or
pop
cmp
dec
int
mov
sub
mov
out
dec
in
fadds
dec
cmp
xchg
add
jnp
xor
add
sub
icebp
cld
xadd
sahf
and
push
add
lcall
push
repz
rolb
add
pmaxsw
cmp
jp
rclb
cmc
pop
insb
in
inc
inc
icebp
xchg
jo
outsb
mov
push
add
out
scas
popa
pop
sbb
sbb
lcall
or
pop
push
xchg
xorb
ljmp
or
insl
in
test
loopne
in
add
add
loop
adc
add
cltd
lock
add
popa
jnp
mov
rcll
inc
and
xchg
or
call
push
push
xor
lock
sub
and
push
mov
add
enter
jb
mov
sub
hlt
pop
xor
pop
lods
add
jg
xchg
jnp
jl
jp
or
insl
sub
mov
add
jbe
call
push
add
push
incb
jmp
mov
sbb
rclb
clc
movl
pop
leave
jl
jns
mov
add
add
mov
in
dec
mov
pop
mov
cmpsb
jo
mov
mov
push
add
andb
sbb
sbb
sub
xorl
cli
nop
je
in
jae
jle
aaa
les
inc
enter
add
mov
mov
ret
shrb
sbb
xorb
mov
jecxz
leave
sbb
movsl
xchg
add
stos
nop
ljmp
sbb
pop
inc
int3
inc
mov
add
cmpl
ficompl
aam
sub
pop
sbb
stos
adc
loopne
dec
mov
pusha
icebp
rorb
loopne
cmp
call
add
jo
inc
repnz
add
xchg
inc
mov
cli
aaa
divl
imul
ds
clc
out
in
aad
push
aam
and
sbbb
aaa
nop
out
jo
outsb
jnp
add
andb
or
repnz
mov
mov
inc
adc
xchg
sbbb
mov
pop
or
sahf
orb
push
sti
cli
pop
rcl
jbe
cmp
psubsw
sahf
mov
shll
jecxz
push
lret
or
pop
pop
test
pop
jb
push
mov
loope
sar
in
sub
pushf
or
sbb
cmp
leave
ret
das
add
fcmovb
or
iret
mov
add
fwait
and
add
mov
pusha
fcom
xchg
add
cli
pop
int3
adc
ds
insb
add
in
scas
mov
dec
popa
and
mov
push
add
mov
imul
lds
enter
inc
mov
mov
jnp
add
push
and
xchg
push
mov
pop
inc
and
rclb
mov
sub
out
loopne
push
adc
test
ss
xchg
loop
pusha
add
mov
aas
pop
out
mov
je
add
mov
mov
xlat
aas
imulb
add
add
or
add
jmp
mov
push
addr16
int
aam
and
push
into
adc
das
pop
pop
inc
movntps
dec
push
inc
add
mov
xor
pop
enter
pop
and
push
fs
mov
fldt
stc
js
test
gs
mov
cmp
jb
in
repnz
cld
add
jbe
and
fstl
adc
or
push
gs
cltd
mov
repz
mov
push
sbb
scas
or
xor
cmpsl
bound
insb
nop
int
addb
ret
cli
add
adc
dec
sbb
addl
push
in
xor
popf
inc
or
popa
lahf
add
mov
add
mov
mov
xor
aad
jb
mov
movsl
mov
mov
jl
cmp
add
pop
aaa
loop
cltd
mov
push
cmp
movsb
or
outsl
aaa
pop
cwtl
scas
call
call
dec
testb
mov
jecxz
jae
dec
add
pop
jp
ror
add
aaa
or
repnz
out
push
in
mov
inc
add
jle
fs
out
jmp
or
add
fwait
mov
subl
hlt
fs
or
sbb
lahf
mov
popa
mov
push
push
inc
decb
push
mov
and
subb
mov
add
jg
iret
adc
pop
xor
sub
add
ffreep
cmp
in
call
pop
jo
sub
mov
aad
jecxz
add
sub
pop
add
and
in
push
pop
push
mov
in
les
stos
xchg
jbe
pop
jnp
dec
cmpsb
sbb
or
mov
ja
cli
popa
cmp
popf
cli
scas
xor
xchg
add
lret
mov
and
add
fiadds
imul
add
push
enter
and
xchg
lcall
xchg
mov
push
or
cmp
pusha
aad
xchg
cmc
cwtl
add
movsl
fcoms
add
out
mov
mov
insb
test
push
mov
ret
add
lock
out
ficoml
in
test
inc
adcb
pop
pop
adc
cltd
dec
push
push
inc
inc
jbe
add
sbb
xchg
push
test
sbb
jmp
daa
imul
add
sbb
aad
fimuls
jo
ljmp
mov
sti
jne
add
xor
ret
lcall
add
sahf
pop
mov
movsl
add
out
add
test
fdivrs
add
push
lret
jle
loop
pop
int3
mov
add
xchg
push
cs
sub
add
gs
add
into
aam
clc
aad
add
sub
pop
cmp
dec
test
cmp
mov
clc
notb
data16
mov
add
mov
dec
pop
fs
dec
mov
loope
je
pusha
hlt
testb
push
ja
jp
mov
int
lea
fdivs
mov
inc
fwait
mov
xchg
add
add
inc
test
out
mov
jg
xor
add
mov
or
sbb
or
jbe
and
xchg
in
mov
mov
iret
jmp
pop
test
ss
add
stos
insb
lcall
lods
cmpl
cmp
loop
add
adc
les
push
adcb
outsl
lahf
push
jns
dec
jbe
mov
jns
inc
sbbb
inc
push
mov
jmp
pop
pop
sub
or
loop
sbb
push
rolb
cmp
mov
data16
add
sub
mov
inc
je
push
icebp
dec
adc
add
or
mov
pop
repnz
mov
adc
aaa
sbb
ret
aas
popl
loopne
push
andb
cmpsb
add
mov
mov
enter
push
add
mov
or
jne
dec
inc
cmpsl
inc
inc
loopne
adc
enter
jo
jg
pusha
add
int
ret
pushf
sub
lock
idiv
push
push
nop
roll
jge
mov
jns
sbb
movb
sbb
imul
loop
jae
mov
fildl
adc
mov
testb
xchg
or
lahf
into
add
push
mov
lcall
adc
adc
das
in
sarl
sub
cli
mov
addr16
test
pop
add
pop
sti
icebp
mov
stc
add
lods
add
push
pop
subb
inc
inc
inc
je
rcr
add
cmpsl
inc
les
add
int3
mov
add
cs
call
add
aad
cltd
ficoms
adc
out
pop
aam
jge
add
int
mov
pop
mov
inc
push
mov
add
cmp
and
cmp
add
add
sbb
pusha
jnp
or
cltd
scas
pop
loop
add
adcb
loopne
sahf
enter
shlb
add
hlt
testb
fcompl
ret
repz
shlb
and
imul
mov
add
scas
adc
add
mov
clc
add
repz
dec
mov
test
or
ljmp
sub
jnp
pop
xor
xor
aas
mov
pusha
fistl
nop
jnp
xchg
cli
add
sahf
mov
push
ljmp
inc
icebp
pop
cmp
lret
and
test
pop
lahf
sbb
out
mov
mov
imul
pop
push
or
repnz
sub
mov
loope
cmp
out
pushf
int
and
xor
je
xchg
inc
pop
lcall
in
mov
sub
push
or
ror
mov
pop
sbb
add
cmc
sub
test
adc
enter
movsl
jo
or
adc
lods
inc
and
xchg
pop
add
pop
add
mov
pusha
mov
out
pop
xchg
inc
xchg
rclb
out
fildl
or
sub
test
stos
pop
sbb
bnd
fnstcw
pop
out
loop
push
mov
loopne
cmpl
rorb
cmp
outsl
inc
add
jae
mov
jg
push
adc
cmovbe
or
xchg
stos
push
mov
push
jmp
add
int
insl
in
inc
ds
xchg
lock
loop
add
stos
sarb
push
es
pmullw
popa
ja
iret
and
push
sub
enter
inc
inc
mov
ja
add
sbb
sub
jg
sub
push
add
jp
xchg
cwtl
popf
fs
sbb
rorb
aaa
pop
add
cld
pop
data16
add
fimull
fsts
xchg
mov
in
fadds
mov
je
and
nop
lods
nop
int
or
pop
movsb
add
aam
and
mov
andb
clc
sbb
jge
pop
adc
add
adc
add
sbb
or
mov
js
in
adc
xor
add
mov
shrb
mov
lahf
and
push
gs
and
sahf
jne
sub
in
pusha
shll
iret
add
fadds
pop
cmp
mov
aad
mov
mov
fisubrl
sub
stos
mov
lock
into
adc
add
dec
cwtl
rol
or
in
jne
bound
in
add
and
xchg
int
dec
sub
mov
sahf
cmc
je
or
fwait
pop
mov
clc
sti
jbe
add
adc
xchg
xchg
push
xchg
outsb
mov
push
jae
lahf
filds
es
jecxz
cmp
popa
out
add
mov
arpl
es
ds
pop
repnz
les
and
mov
sbb
mov
inc
dec
jns
push
push
icebp
xchg
dec
mov
xlat
mov
jbe
mov
mov
sub
add
xor
mov
push
add
push
ret
push
test
sti
push
ds
outsl
scas
pop
les
and
lret
mov
jns
sub
add
inc
dec
cmp
int
and
iret
les
xchg
roll
sub
rolb
mov
dec
mov
in
cmp
pop
cld
adc
push
in
add
rorb
les
pop
sbb
adc
fsubr
jecxz
daa
lret
popa
cmovle
pop
jl
mov
mov
cmp
adc
rorb
inc
sub
mov
ret
test
push
push
testl
xchg
incl
mov
nop
das
mov
inc
pop
add
adc
add
sti
inc
in
inc
fcoms
mov
add
mov
push
pop
add
in
pop
nop
pusha
scas
push
jnp
arpl
pop
cmp
lcall
and
or
mov
dec
add
jmp
nop
cld
mov
add
js
popf
inc
data16
adc
add
mov
mov
push
mov
sbb
jae
and
mov
ja
fildll
xchg
add
bound
fdivr
mov
subb
cwtl
lock
push
adcl
jnp
aaa
jo
iret
popf
add
gs
sti
add
or
scas
mov
and
cmp
rcrl
cmpsl
xlat
xor
pop
xorb
aad
dec
ror
add
mov
inc
les
add
fbld
xor
stos
add
mov
mov
daa
sub
push
data16
sub
or
cmp
add
mov
test
repz
int
shll
or
loopne
hlt
add
fbld
jecxz
sbb
rorl
sti
clc
add
adc
mov
push
dec
add
ja
stos
ret
xchg
psubd
mov
and
pop
hlt
lods
cmp
push
push
pop
aad
shlb
cmp
lds
inc
sbb
je
int
rcrl
add
push
push
dec
imul
rcrb
adc
sbbb
inc
stos
mov
push
inc
andb
pop
mov
nop
sbb
mov
cmp
andb
testl
and
mov
repz
and
es
or
lahf
dec
adc
jo
inc
aad
add
dec
jne
adc
jae
dec
sbbb
pop
xchg
icebp
lods
outsb
add
mov
mov
pop
fidivl
mov
xchg
fidivl
pop
aam
xor
jge
mov
jbe
xchg
mov
movsb
imul
add
scas
pop
fldcw
or
sub
mov
mov
add
jmp
push
cmp
ja
add
lds
addr16
insb
add
movsb
repz
cmp
mov
jns
xchg
ret
subl
aas
inc
add
flds
jle
sbb
cwtl
jecxz
movsl
sbb
cmp
add
jl
mov
mov
ja
pop
cmp
fnstcw
mov
adc
cld
enter
nop
fisubl
fdiv
arpl
mov
pop
hlt
ljmp
push
fwait
add
pop
jmp
es
int
test
pop
and
sti
sbb
fwait
pop
inc
repnz
xor
imul
outsl
cmc
dec
jo
jnp
ret
and
loop
mov
scas
lock
mov
cmp
cmp
add
cwtl
jmp
or
in
popa
cmp
add
movsb
inc
add
xor
add
xchg
pop
ret
sbb
ds
insl
repnz
xlat
aam
add
bound
shrb
add
sub
rcl
stc
sub
popa
ret
or
pop
push
dec
add
movsl
adc
repz
xorl
inc
and
pop
call
push
mov
daa
scas
push
nop
mov
cmp
fs
cmpsl
leave
sti
add
sub
insl
inc
xor
sbb
movsl
int
push
add
sti
xor
mov
movsb
cmp
filds
popf
cmpl
or
or
shl
push
mov
ss
imul
jbe
and
sbb
pop
add
and
fldenv
movzwl
aas
pop
inc
hlt
xchg
in
es
pop
mov
outsl
add
xorb
mov
pop
dec
cmp
pusha
jae
icebp
add
xlat
aad
or
cmpsb
nop
dec
andb
andl
mov
mov
cmp
sbb
pop
cmp
ds
cmp
addl
xor
push
aam
add
mov
cld
leave
je
into
out
add
test
add
or
add
nop
xchg
sbb
xor
or
fcmovb
add
dec
and
add
or
add
add
mov
jno
mov
test
push
mov
and
push
or
xchg
jnp
imul
pop
cltd
sbb
push
out
add
pop
adc
out
cmp
into
stc
lea
es
dec
inc
fwait
addb
pop
xchg
jo
jne
add
cmp
js
loopne
and
or
sbb
pop
adc
xchg
lahf
dec
es
add
sub
pavgw
test
daa
push
add
mov
mov
push
les
xlat
in
roll
inc
cwtl
insb
or
adc
pushf
fstl
pop
out
stc
xchg
fisubs
push
ds
imul
out
inc
jbe
cmp
add
sub
add
nop
lret
icebp
sub
les
sub
loop
out
add
xchg
add
pop
lcall
add
pop
bound
into
push
cld
aas
mov
add
imul
out
or
lock
js
mov
out
mov
add
stos
aas
mov
or
pop
loope
aaa
lds
pusha
mov
fwait
imul
lret
xchg
clc
push
cmovl
cltd
add
and
add
sarl
mov
push
add
mov
mov
add
sahf
rcll
cli
and
imul
jg
pop
xchg
roll
outsl
push
cmp
dec
pop
scas
jl
inc
cs
cli
add
mov
stc
and
add
cmp
inc
in
add
sub
rolb
fiaddl
jp
fistpl
push
add
insl
std
mov
lods
mov
adc
cmp
sbb
add
xor
mov
or
aas
and
add
adc
stos
inc
or
in
jb
dec
sbb
or
mov
jg
add
repnz
xchg
rorb
dec
add
sti
ds
add
pop
fisttpl
jmp
hlt
sbb
jg
jp
rorl
add
sub
or
xor
std
and
inc
jg
jge
add
or
mov
mov
shl
cmp
or
loopne
or
out
test
iret
je
ffree
add
lcall
add
ds
shl
cmp
jg
stc
xchg
or
push
cmp
add
mov
jle
add
movsb
mov
test
add
xor
jp
mov
mov
inc
daa
sub
ds
dec
add
cwtl
cmp
ret
lcall
mov
or
inc
cmp
stc
pusha
xchg
push
add
xchg
data16
inc
rolb
daa
fnsave
pop
pop
jg
add
ja
or
js
aad
mov
fdivl
insb
mov
fsubr
lea
ja
sub
leave
rorb
push
add
imul
add
mov
std
call
add
cs
ret
testb
add
dec
loop
cmp
scas
mov
cmc
fucomip
inc
pop
add
rcll
cli
clc
jmp
test
sub
test
dec
call
stos
mov
and
add
test
es
xchg
loopne
aaa
jo
add
cmp
dec
and
add
test
jno
dec
add
je
les
mov
xlat
or
pop
pop
push
xchg
push
xchg
push
push
add
inc
ret
and
aad
add
test
add
fadds
push
outsb
js
mov
ss
xchg
sub
ret
jmp
aas
add
fistps
jno
out
cs
add
enter
push
push
inc
or
adc
movsb
add
mov
add
sahf
outsb
mov
mov
ffreep
test
cmc
mov
push
adc
jge
aam
ljmp
pop
sub
add
add
jle
add
hlt
rol
insl
mov
sbb
dec
loop
push
dec
sahf
sub
mov
push
out
xchg
inc
lods
cmpsb
lret
loope
xor
adc
outsl
pop
xchg
pop
sbb
stos
mov
rcl
dec
push
mov
cli
aad
paddusb
insl
push
or
xchg
jg
add
std
sbb
and
loope
sbb
pop
test
xor
nop
add
push
aas
jg
cmc
push
cmp
push
mov
xchg
xor
push
cmpsb
xor
test
out
xchg
rolb
adc
pop
mov
xor
pop
mov
pusha
pop
add
imul
add
jecxz
testb
pop
sbb
jl
mov
outsb
jae
adc
add
fistl
add
or
les
push
ds
cmpb
mov
jns
clc
add
mov
nop
test
inc
mov
or
push
pop
add
push
arpl
add
ja
and
add
scas
ror
out
sbb
and
ja
lret
mov
daa
imul
add
sub
sbb
out
sbbb
je
add
test
fsubrl
ficomps
xchg
dec
add
adcb
jge
jno
dec
into
fs
mov
repz
sbb
lock
jbe
add
xchg
js
ja
add
out
ja
mov
add
ret
out
cmp
push
mov
mov
or
lods
scas
data16
dec
mov
adcl
cmp
xor
mov
or
jbe
add
xor
ss
popl
inc
pop
shll
pop
enter
add
sub
add
pop
scas
jne
pop
inc
add
mov
xchg
xchg
sbbb
sbb
and
stos
and
cld
or
add
insb
rorb
add
ja
cli
inc
add
jmp
sarl
imul
hlt
mov
filds
mov
addl
pop
fisubs
jl
add
shlb
inc
add
xor
push
inc
in
add
add
pop
aaa
xor
cmpsl
aam
add
jle
cwtl
unpckhps
and
rorb
dec
mov
insb
outsb
xor
sub
cltd
nop
cs
imul
mov
push
jl
push
adc
sahf
lahf
inc
jo
jp
mov
pusha
jecxz
out
pop
push
mov
mov
fiaddl
add
lret
mov
inc
cwtl
js
pop
push
sub
or
in
or
add
lret
lds
cmpsl
daa
add
mov
lock
loop
or
xor
sbb
add
outsl
xor
dec
pop
test
bound
push
and
int
sub
std
add
cmp
lds
test
cld
dec
ljmp
push
das
pcmpgtw
jge
mov
pop
inc
inc
cmp
mov
jg
lea
add
pushl
in
aaa
lds
pop
sbb
pusha
cmp
inc
pushf
mov
nop
dec
pop
rolb
movsl
in
pop
addr16
pop
push
add
shl
mov
cltd
subb
push
ficomps
sub
call
ret
push
sbb
inc
add
mov
orb
idivb
ror
stc
cwtl
push
add
jnp
icebp
pop
fcompl
nop
popa
or
xchg
pop
das
jno
lods
add
sbbl
pushf
movb
or
cmp
xchg
iret
xor
cmp
sbb
dec
add
idiv
nop
mov
push
or
lock
sbb
lcall
loopne
xor
rcl
clc
add
jge
cmpb
xchg
adcb
add
sbb
sub
cwtl
add
mov
in
push
add
out
jbe
cmp
mov
dec
jae
sahf
add
sub
jge
xchg
push
cli
lahf
aas
inc
fdivs
and
jo
gs
mov
cmp
repnz
jnp
dec
pop
xchg
dec
cmpxchg
hlt
sbb
or
xchg
mov
or
out
jecxz
add
mov
inc
out
ret
add
or
les
jne
rorb
dec
inc
add
mov
push
jno
call
cmp
shll
leave
adc
movsb
pop
sub
push
mov
out
bound
ret
std
rdtsc
dec
pop
and
xchg
add
repnz
lods
add
push
inc
popa
ss
lret
paddq
enter
adc
fmull
add
xchg
outsb
add
sub
fwait
or
sub
ljmp
mov
fcompl
adc
pop
sarl
out
mov
lods
mov
inc
sub
js
loopne
notb
loopne
pushf
in
push
cmp
test
jae
mov
sbb
dec
or
js,pn
add
jno
in
cmp
scas
xchg
add
dec
cmp
cmp
push
cmpsb
add
and
xor
fdecstp
add
mov
fldl
add
bound
lcall
cmp
enter
add
popa
mov
addr16
cld
jmp
xchg
repz
lret
add
mov
mov
outsb
push
jns
test
add
adc
mov
popa
scas
dec
mov
add
dec
mov
enter
out
add
mov
insl
mov
nop
pop
testb
stos
xor
add
cmpsl
inc
add
test
jge
popf
jecxz
add
decl
aas
pop
xchg
xchg
fcmovnu
jbe
repz
aaa
mov
xor
add
mov
dec
mov
adc
call
cmpb
test
insb
inc
dec
cli
shr
or
dec
pop
popa
xor
and
test
test
aad
and
adcb
pusha
pop
ja
movb
or
inc
sub
add
jns
push
ljmp
icebp
vmread
imul
outsb
movl
fwait
mov
ds
out
sahf
pusha
jecxz
aas
mov
scas
into
jle
and
push
pop
scas
bound
out
inc
adc
aas
mov
ficoms
cmpsl
xor
jo
data16
jbe
popa
adc
loope
and
imul
aam
pop
mov
add
lahf
push
clc
pusha
testb
shl
cs
test
nop
sub
shrd
scas
add
fwait
pusha
xchg
sub
add
aad
sahf
mov
pushf
aaa
add
ficompl
add
test
rcrb
lcall
add
cmpsl
mov
addb
add
stos
cmp
lds
dec
pop
pop
pusha
jns
mov
andb
adc
mov
lret
das
imul
imul
push
sti
movsb
pop
pop
xchg
mov
sub
sub
inc
stc
mov
imul
adcb
inc
fmul
movsb
jns
cmp
cmp
xorl
add
mov
mov
out
push
in
testb
imul
movl
mov
andl
adc
mov
dec
and
mov
add
aam
frstor
sahf
subl
xor
pusha
jge
adc
es
or
lret
insl
add
ss
enter
loopne
jle
jns
test
mov
xchg
push
int3
push
repnz
xchg
add
pop
jo
or
and
addl
mov
push
fidivrl
xchg
adc
mov
xor
js
subb
inc
nop
movaps
jmp
add
push
mov
rolb
mov
pop
lods
test
add
fstpt
lea
pop
jb
xor
lock
nop
inc
push
xchg
xchg
xchg
or
pop
jle
push
jbe
loope
shlb
in
sbb
add
outsb
ror
pop
cmp
add
cmp
jecxz
mov
pusha
jg
lcall
scas
xchg
mov
ret
out
scas
rclb
addr16
stc
xchg
ss
lds
xchg
mov
sub
xchg
mov
loop
pop
jmp
add
jg
call
pop
cmpsb
paddb
jge
add
xchg
fcoml
xor
orb
jnp
roll
dec
call
pop
inc
cmpsb
andb
out
movsb
xchg
push
mov
sub
add
les
in
jmp
ljmp
es
nop
mov
mov
jns
aad
cmp
daa
push
lret
mov
xchg
jne
xchg
add
cli
and
mov
add
lods
arpl
pusha
sub
ret
loopne
mov
out
jge
pop
cmp
cmp
mov
mov
mov
sub
imul
inc
dec
push
mov
outsl
daa
lea
clc
test
dec
xchg
xor
jp
add
or
or
or
stos
leave
neg
stc
out
push
xchg
add
xor
mov
dec
adc
jge
int
rol
incl
aaa
bound
inc
xchg
xor
lock
xchg
xchg
xchg
nop
xchg
inc
pusha
add
sub
or
xchg
and
subb
sub
andb
ljmp
push
mov
adc
add
sti
dec
add
pop
xchg
push
xor
outsb
pop
mov
push
push
lds
fadds
sub
jno
cmp
add
mov
test
mov
incb
mov
cld
fisubs
lods
sub
mov
sarl
fadds
mov
jle
fucomi
pushl
ja
pop
popf
cmp
xor
adc
add
lcall
out
jbe
xchg
into
sarb
js
dec
inc
push
and
icebp
test
rcrb
stos
mov
mov
js
mov
add
xchg
add
sti
adc
pop
dec
or
cmp
add
push
xchg
push
jp
add
insb
imul
sti
ret
or
or
jne
jp
xchg
imul
jo
rcrb
pop
add
dec
aaa
inc
leave
loopne
dec
add
pushf
pop
inc
xchg
push
add
pop
mov
nop
mov
icebp
and
add
lcall
cpuid
add
stc
sahf
mov
pop
lahf
scas
add
pusha
push
xchg
int3
scas
mov
or
sbbb
das
sbb
adc
adc
jl
mov
loopne
imul
mov
fsubr
push
cmp
inc
lahf
inc
test
mov
add
nop
leave
pop
imul
mov
aad
add
mov
cs
push
test
add
cmp
sar
outsl
pop
xor
jno
test
add
add
stc
out
fildll
pop
pop
loopne
jbe
adc
js
add
cmp
mov
push
dec
add
bound
mov
mov
xchg
add
adcb
add
test
inc
std
xchg
out
mov
xorl
add
es
movsl
cmp
dec
xchg
call
cmp
and
pop
jmp
aas
or
addl
lock
adc
xor
pop
cmp
xchg
jae
jne
fistl
faddl
lea
xchg
loope
js
push
dec
sbb
mov
lods
imul
inc
pop
add
rolb
adc
stos
add
sarl
lahf
and
fimull
out
mov
mov
sub
push
shlb
xor
popa
gs
pop
pushf
and
sub
outsb
das
inc
jp
add
out
scas
test
push
outsl
xchg
ds
popf
sbbb
movsl
adc
mov
sub
insl
add
icebp
jle
fimull
imul
notb
cmp
and
inc
xchg
daa
mov
out
xlat
jmp
mov
xchg
pop
dec
fadds
sub
xchg
cmp
loopne
add
ret
add
or
rcrb
mov
xchg
push
xchg
je
lea
in
mov
scas
aas
stc
add
loopne
sub
mov
dec
lcall
outsl
dec
out
repz
add
into
loopne
add
mull
add
xor
int3
mov
in
fcomip
lds
jp
add
sub
ja
push
xchg
add
lahf
subb
mov
add
adc
mov
xchg
leave
add
int
bound
ja
iret
and
add
adc
insl
out
pop
sbb
xlat
lea
add
ds
cli
ljmp
add
add
inc
mov
dec
pop
mov
popa
popf
add
sbb
into
xor
jae
push
mov
popa
inc
xor
pop
add
push
das
cwtl
cmc
outsl
enter
enter
lods
clc
push
push
stos
addl
add
popa
cmp
add
in
pop
mov
jp
jnp
inc
sub
xlat
cmp
shr
cmp
flds
xchg
cld
cld
lcall
add
sub
lahf
adc
lret
andb
leave
or
add
fldl
add
and
js
fistl
int3
cmp
adc
popa
lret
rcr
in
mov
jmp
push
inc
icebp
jbe
add
repz
fnop
jecxz
arpl
rcrl
push
fisubs
jb
cmp
loopne
dec
cmp
jns
mov
inc
addb
xor
mov
sub
shlb
or
ret
sbbl
cli
mov
bound
cmp
add
cmpsl
mov
mov
sbbl
sbb
pop
in
lods
js
mov
out
dec
mov
fcomip
leave
mov
inc
add
js
pushf
sub
add
dec
std
shrb
cli
movhps
inc
or
add
and
addr16
pop
jmp
push
push
xor
lock
adc
fists
bound
sbb
shlb
jle
nop
ja
pop
sbb
cli
test
mov
jno
pop
nop
aam
add
push
add
jle
mov
lcall
inc
subb
popa
add
int3
aaa
dec
cmp
pop
or
sbb
jae
stos
popf
scas
pop
xor
subb
pop
inc
pop
pop
sub
adc
mov
mov
imul
popa
add
pop
mov
add
lret
mov
pop
imul
dec
push
leave
rolb
cs
repz
or
mov
loopne
cmp
pop
add
enter
cmp
add
push
subl
mov
mov
add
xor
call
and
cmpsb
jnp
mov
add
xor
mov
add
setb
jbe
lret
inc
pusha
lods
push
sub
pop
jge
cmp
pop
inc
ficompl
aas
push
loopne
xchg
xchg
cmp
fcoml
pushf
sub
add
mov
jecxz
in
cmp
fwait
aam
and
fcom
lds
and
pop
es
hlt
cmp
inc
and
dec
in
in
pop
lahf
push
push
inc
adc
aas
orb
inc
lcall
add
xlat
loope
sub
push
jno
lods
add
jb
adc
xor
xor
imul
xorb
xor
mov
mov
cltd
mov
cmp
xchg
inc
add
jae,pt
jecxz
mov
inc
lea
call
sbb
aam
repz
les
lods
jne
add
cmp
mov
dec
mov
mov
push
add
pop
and
add
sbb
stos
rclb
jmp
cmp
sbb
popf
movsb
stc
push
add
jg
mov
mov
fdivp
roll
test
pop
add
mov
loop
jmp
pop
cmp
xlat
lock
xchg
cmp
in
aam
mov
out
rcll
lea
sbb
add
daa
add
dec
out
mov
push
outsb
jmp
or
add
xor
or
or
js
and
xchg
push
add
movsl
in
sbb
leave
add
data16
mov
loopne,pt
js
add
lret
mov
dec
add
rorb
and
in
ret
or
pcmpeqd
dec
mov
inc
add
sbb
idiv
hlt
add
push
mov
call
jg
paddw
loopne
andb
stos
add
or
add
adc
add
lods
lock
adcb
rolb
inc
xor
fs
push
movsl
scas
add
test
push
subb
cltd
in
pop
pop
scas
aad
frstor
rclb
dec
xchg
xorb
push
add
cmp
xchg
mov
adc
push
je
jmp
inc
jo
cmp
rorb
movsb
lea
sbb
inc
mov
dec
pop
or
sub
xchg
mov
fcomps
and
out
xor
imul
add
idivb
cmp
rcrb
dec
sarl
sbb
movsb
ss
mov
add
push
fists
insb
mov
add
sub
in
add
dec
mov
filds
adc
cld
mov
enter
es
test
call
xor
ret
push
pop
shrb
add
add
add
add
in
clc
gs
loopne
push
rcrb
popa
sbb
jno
add
aas
lock
add
mov
mov
int
jbe
int3
out
mov
mov
setg
test
repz
adc
xlat
add
push
loopne
out
push
popa
jns
add
add
add
push
cs
mov
jb
push
lock
test
sbb
daa
roll
inc
add
dec
cmpsl
and
or
lock
movb
mov
jmp
and
push
or
jmp
add
imul
jp
mov
or
adc
push
push
xchg
sbb
movswl
xor
cmp
ret
add
rcrb
mov
and
test
adc
mov
popa
in
hlt
jo
or
add
lea
jne
xor
add
xchg
inc
in
pop
rorl
push
and
dec
sub
insl
xchg
push
pop
popa
cmc
scas
rolb
push
imul
or
and
cwtl
add
popa
loopne
dec
ret
loopne
xchg
adc
sbb
cmp
add
je
mov
stos
int
add
fxch
sti
inc
add
and
mov
loopne
cmp
mov
mov
cmpb
lds
xor
sub
sub
add
test
cmp
dec
aas
movsb
add
iret
std
pop
mov
mov
dec
xchg
mov
pop
adc
jge
cld
push
addr16
inc
inc
das
test
cmp
push
and
in
or
push
inc
xor
jmp
imul
call
pop
dec
mov
cmp
xchg
mov
roll
sub
mov
inc
lea
push
aas
sub
popf
mov
add
rorl
ffree
insb
jecxz
sub
add
push
or
imul
icebp
and
mov
jg
out
nop
movsl
test
cmp
in
hlt
nop
mov
inc
movups
and
mov
mov
xchg
rcll
aam
out
and
std
xor
pop
nop
mov
mov
popf
or
jg
mov
inc
xchg
sbb
adc
inc
inc
inc
add
dec
fwait
sub
inc
push
push
mov
and
aaa
cwtl
pop
mov
adc
imul
loopne
mov
push
xor
lahf
push
scas
mov
movsb
cld
test
jbe
pop
jmp
xor
inc
sbb
xchg
dec
stos
push
add
test
mov
xor
lret
xchg
mov
mov
pushf
cmp
les
pop
imul
ss
data16
add
mov
les
stc
add
shll
pop
mov
dec
pop
sahf
fs
in
outsb
cmp
sbb
pop
cmp
add
cwtl
sahf
sub
lea
jae
mov
jnp
aam
in
push
pushf
repz
pop
add
popf
cmp
xor
lret
sti
sbb
rorl
and
imul
cwtl
dec
mov
in
imul
test
vucomisd
nop
pusha
mov
ja
jge
add
into
xor
lods
adc
call
inc
addb
add
je
test
shlb
mov
ja
pop
or
cmpsl
lods
lock
es
jbe
and
and
fnstcw
dec
xchg
sbbl
and
inc
repz
add
mov
jae
ds
aam
push
mov
ficompl
push
sbb
pop
and
jo
inc
adc
add
xor
jl
push
jecxz
add
je
mov
add
lock
fldt
adc
mov
cmpb
mov
fidivrl
add
jo
arpl
mov
rorl
lcall
fidivrs
xchg
jl
add
pop
jo
inc
cmpb
or
mov
fwait
and
jo
ds
add
mov
or
js
jbe
movsb
jo
add
push
cli
pop
aad
rorb
xor
add
inc
sti
cmp
xchg
and
scas
dec
cld
add
rcrb
or
pop
cmp
add
in
xchg
and
dec
jo
outsb
mov
test
push
push
push
add
lahf
sbb
mov
sbb
pusha
add
cmp
dec
rolb
ja
add
enter
pop
aad
add
inc
rolb
push
jge
push
xchg
adc
xchg
cmp
add
mov
inc
cwtl
add
fimull
movsl
jo
add
or
enter
add
pop
mov
js
push
fiadds
jae
inc
mov
sbb
in
punpckhdq
or
and
sbb
jo
out
pusha
lcall
ret
lcall
in
ret
cltd
cwtl
cltd
inc
push
in
or
rolb
add
jmp
gs
xchg
hlt
out
bound
iret
jecxz
outsb
roll
xor
and
mov
add
push
jo
add
imul
jnp
fisttpll
aas
jno
rcrl
std
mov
mov
add
pop
clc
orl
pop
cmp
hlt
add
pop
ret
shl
clc
jp
pop
in
adc
cmp
popf
and
cmp
shufps
mov
fcomps
pop
pop
sar
adc
push
inc
or
adc
inc
xlat
int
pop
dec
inc
xor
sub
mov
sbb
push
xor
pop
outsb
sub
fwait
inc
ja
mov
fdivrs
aad
pop
lock
fisubrl
dec
push
fstl
in
inc
dec
mov
cli
mov
movsl
push
or
fnop
jl
pop
cmp
clc
jne
fiadds
gs
je
xor
and
jnp
or
orb
add
mov
cmpsb
add
inc
jg
adc
sbb
stc
lds
adcb
xchg
mov
pop
je
out
in
cmp
xor
add
gs
jmp
lock
jle
xorb
xchg
loopne
cmp
inc
andb
shrb
cli
int3
ret
aam
insb
in
mov
and
jge
scas
lret
mov
dec
xor
cmp
movsl
mov
xchg
sub
push
enter
mov
add
mov
lea
jg
mov
mov
xor
mov
xor
arpl
clc
arpl
mov
adc
add
adc
fdivl
add
into
xchg
mov
cmp
mov
mov
movsl
aad
into
dec
fimull
pop
push
jl
mov
fstpl
add
mov
mov
sbb
stc
add
addr16
fnstsw
jo
add
pop
ja
add
xor
cmp
sbb
push
ds
mov
fadds
pusha
rcll
mov
shlb
mov
cmp
xchg
pop
mov
shlb
ljmp
andb
dec
iret
or
aam
xchg
inc
cmp
xchg
insb
add
or
lss
ficompl
xorl
add
les
jbe
sub
cmc
sub
out
add
jmp
incb
outsb
xor
rolb
dec
in
mov
pop
xor
cmc
mov
sbb
fisubs
into
notb
add
add
loop
sbb
decb
aam
add
int3
adc
mov
cmp
sbb
pop
daa
pop
add
fsubrl
adc
add
icebp
loopne
inc
add
mov
lahf
add
xchg
cli
add
adc
and
pop
movsb
mulb
sub
in
test
add
push
pop
shl
add
xchg
pop
movsl
call
mov
insb
inc
sbb
add
sub
pop
cmp
hlt
adc
xor
adc
add
imul
mov
es
addr16
icebp
in
xor
jg
loopne
call
mov
aam
xchg
mov
pusha
add
aas
jecxz
sti
pop
repnz
shrb
icebp
pop
cmp
popf
fwait
jecxz
dec
push
mov
ret
add
in
pop
aaa
xor
jle
pop
imul
and
jl
mov
mov
xchg
movsl
aaa
add
popa
mov
leave
add
popf
add
cmpb
cltd
arpl
nop
pop
mov
pusha
mov
pusha
dec
push
xchg
pop
mov
repnz
adc
adc
mov
gs
pushf
inc
and
lcall
out
data16
dec
sbb
mov
lods
xor
dec
pop
pushf
mov
aam
rclb
push
adc
loopew
mov
in
fsubr
negl
adc
pop
pop
leave
xor
lock
add
push
jecxz
loop
stc
movsl
push
jg
and
mov
in
mov
fidivl
in
dec
add
push
jae
fcomps
mov
sbb
jmp
jle
test
addb
aaa
mov
repz
imul
add
add
arpl
jbe
inc
dec
pop
cmp
or
add
scas
push
and
or
pop
bound
inc
popa
inc
xchg
pop
insl
inc
add
or
lods
push
shlb
outsl
add
xorl
rclb
xor
popf
sub
in
ljmp
lods
mov
dec
dec
push
add
add
mov
into
call
es
sub
btc
shlb
js
pop
data16
subb
jnp
add
push
mov
jl
jae,pn
add
arpl
pop
sti
out
shlb
xor
call
mov
dec
icebp
js
add
insl
lods
ss
out
dec
roll
fstpt
ret
scas
inc
add
int3
enter
pop
jmp
adc
or
mov
mov
or
test
cvtdq2ps
flds
idivl
or
add
cmpsl
js
sbb
into
pop
out
jp
insb
bound
les
push
add
mov
add
adc
pop
jns
add
ds
add
and
mov
add
mov
jnp
xor
aas
mov
imul
fists
push
or
arpl
add
inc
xor
adc
mov
pushf
xlat
dec
sbb
cmp
aam
cwtl
aas
lcall
mov
sub
xchg
sbb
add
jg
add
jp
jmp
lds
sbb
cmpsb
mov
leave
mov
and
stos
sub
mov
add
cld
or
notb
and
jne
jnp
mov
add
shr
add
jo
notb
xor
pop
fldenv
push
pop
pusha
add
in
stc
mov
and
mov
jle
inc
pop
imul
iret
sbb
fsubs
sbb
inc
pop
popf
shl
mov
xor
shlb
add
mov
xlat
btl
cs
ljmp
mov
std
push
add
adc
and
xchg
push
push
mov
adc
les
cli
sahf
add
ret
sbb
pop
add
out
les
add
mov
and
sbb
add
in
testb
adc
adcb
or
aad
jp
repnz
std
out
jo
addl
pop
cmp
movsl
add
lds
and
add
pop
pop
jg
cmp
fwait
add
push
bound
adc
add
cmp
add
jl
cmp
imul
dec
in
cmp
les
jns
mov
stc
ja
sti
mov
loopne
imul
lea
into
repz
xor
mov
sub
adc
cmp
jne
mov
lea
xor
sub
pop
in
jmp
xchg
sub
add
nop
pusha
test
or
mov
mov
lock
add
fsubrl
ljmp
fimuls
cmp
mov
pop
cmpsb
clc
test
mov
jo
iret
dec
outsb
rclb
mulb
fwait
jge
push
xchg
adc
lahf
xchg
addl
pop
add
lods
xchg
scas
mov
or
outsl
jp
enter
add
push
mov
lcall
add
out
mov
jmp
push
xorb
adc
dec
loop
push
fisubl
repnz
sub
add
add
mov
mov
jnp
add
mov
add
lret
aam
dec
int
jg
sub
xchg
xor
adcl
add
roll
jno
in
enter
pop
or
mov
repnz
movsb
add
sar
add
adc
repz
mov
jo
add
sbb
shrb
nop
mov
pop
ficomps
imul
sub
inc
je
add
cmpsl
pusha
push
xchg
imul
and
add
or
mov
jle
push
cs
pop
movsb
add
data16
sub
inc
pop
add
pushf
subl
out
call
add
lret
add
stos
lds
add
ljmp
fadds
cwtl
les
jae
incb
shll
pop
or
push
movsb
test
push
arpl
push
mov
test
add
mov
sahf
add
xor
cld
test
add
loope
stos
push
repz
add
int3
filds
xchg
ror
pop
mov
xor
and
push
mov
mov
sbb
ljmp
add
psrlw
dec
popf
pusha
ljmp
mov
dec
incb
scas
iret
xchg
shlb
push
or
dec
sahf
rcll
sbb
mov
push
jle
add
shr
mov
add
dec
in
ds
add
xchg
fs
imul
and
leave
adc
mov
add
xor
sub
cmp
or
mov
pop
cs
xchg
pop
mov
and
pop
add
and
dec
jp
mov
push
adc
inc
add
push
int3
push
jae
add
out
pop
sbb
cmp
fs
enter
icebp
pop
xchg
mov
add
jp
add
mov
out
mov
repz
comiss
fbld
enter
addb
sbb
int3
pusha
pop
add
adc
and
das
inc
jge
sub
pop
push
push
cmpb
cli
xchg
mov
sbb
add
xchg
add
pop
jae
add
jmp
aaa
mov
ljmp
lock
add
mov
imul
dec
aas
pop
lret
and
sub
or
inc
sbb
cmp
mov
xlat
push
inc
push
pop
out
adc
mov
xchg
sub
xor
outsl
add
jo
add
jmp
pop
adcl
mov
stos
lock
mov
lea
cld
pop
cmp
jae
jnp
add
mov
or
xor
addl
rcrb
aad
out
jne
aam
into
add
mov
ds
inc
xchg
sahf
pop
rcrl
add
mov
aas
push
sbb
sahf
xchg
cld
jo
xor
lock
cmp
mov
cmp
dec
mov
xor
push
lock
into
jno
rol
push
xlat
add
jnp
les
add
cmpsb
imul
flds
filds
nop
ljmp
adc
rcll
push
lock
mov
int3
add
push
ds
rcrb
insb
addr16
fwait
test
mov
push
pusha
loope
cmpsb
clc
pop
add
push
and
add
mov
push
dec
fsubs
push
loopne
dec
adc
hlt
and
add
xchg
jno
movsl
mov
in
mov
add
pushw
cwtl
dec
neg
jg
movsl
mov
jb
add
bound
es
ret
pop
add
lret
inc
add
xchg
add
mov
leave
sub
add
mov
hlt
aaa
jbe
jno
pop
mov
dec
ret
adc
add
mov
sbb
mov
cmp
test
jne
jl
mov
sbb
mov
std
add
ds
push
cmpb
or
cwtl
jo
and
inc
repnz
push
push
leave
sbb
cli
ds
cmpsb
inc
mov
orb
and
mov
pop
es
enter
dec
push
add
sbb
ret
pop
clc
scas
cmp
pop
mov
adc
data16
mov
leave
insb
in
add
fsubrs
cmpb
add
scas
std
sahf
movsl
adc
loopne
das
add
icebp
insl
mov
mov
jne
add
daa
xchg
test
clc
psllw
or
xchg
jne
cld
adc
lock
aas
cmp
push
and
rorb
dec
and
sub
push
mov
fwait
add
jp
lahf
subb
out
jle
insb
fucomi
push
add
ficompl
nopl
and
push
movb
inc
cmp
xchg
and
mov
andb
sub
inc
mov
fs
stos
jle
push
std
pop
ljmp
rolb
in
mov
xor
dec
mov
add
dec
push
push
jge
add
inc
lret
xor
xchg
pop
xchg
sbb
cmpsb
loop
repnz
shll
sub
mov
adcb
lea
int
add
sbb
adc
shlb
add
ret
cmc
cmp
subb
lock
lds
push
stos
mov
pop
ds
int
mov
and
cld
cwtl
insb
or
shrb
and
in
sub
jp
mov
je
add
ret
shll
rcrb
imul
mov
xchg
push
popa
adc
push
in
xor
iret
jge
add
adc
jmp
add
js
dec
lahf
lods
cmpsb
arpl
inc
xor
scas
cmp
jnp
add
sub
sahf
push
push
mov
mov
xchg
mov
scas
gs
repnz
add
ds
xor
pop
lock
in
xchg
add
push
or
popa
insl
ja
negb
xchg
pop
out
mov
xor
dec
fwait
and
xchg
cmp
out
std
add
adc
and
iret
mov
mov
cmp
bndldx
mov
aam
add
lods
xchg
add
add
sub
addb
pop
jge
mov
jle
add
xchg
inc
and
sub
mov
lahf
or
sbb
movsl
out
pushf
dec
fdivl
sar
xchg
adc
add
xchg
mov
xchg
add
jecxz
les
mov
add
pop
add
ljmp
sbb
aaa
add
loop
lea
in
call
jge
lods
fwait
cli
pop
sub
sbb
cmp
mov
push
test
pop
or
jl
pop
and
add
xor
je
loopne
ja
cmp
add
inc
lock
mov
cmp
rcll
aam
rclb
into
les
pop
jo
mov
add
sbb
test
xchg
add
fs
and
mov
push
add
and
test
or
dec
add
mov
iret
mov
and
or
sbb
xchg
mov
jg
xadd
jae
add
in
bound
out
pop
popf
push
mov
pop
or
add
sub
add
rolb
and
ror
mov
xor
adc
ss
jae
repz
push
add
push
outsb
add
mov
or
idiv
push
or
sub
lar
adc
xor
xor
test
xchg
mov
and
fldenv
sbb
hlt
ja
dec
lcall
shrb
mov
sub
leave
cmp
or
jb
and
test
add
hlt
xor
nop
pop
add
push
add
mov
sahf
sbb
adc
inc
xor
rolb
aas
add
movsl
push
add
lds
hlt
and
sbbb
and
add
jae
sub
inc
cmp
rolb
xor
aas
in
shrl
jp
xchg
daa
add
adcb
into
loop
push
mov
or
dec
shrl
dec
pmulhw
xchg
add
pop
push
test
xor
or
inc
inc
xor
sar
add
loopne,pt
adc
das
fldl
rclb
enter
add
jno
jo
push
sahf
loop
xchg
outsl
sub
pop
and
fiaddl
dec
xchg
fimuls
pop
lret
dec
rolb
addb
dec
xchg
loopne
popa
arpl
add
adc
mov
stc
out
rcrl
mov
shl
loope
and
dec
push
sbb
jnp
and
or
jmp
push
fisttpl
mov
jns
daa
add
add
or
pop
mov
push
xchg
fcmovu
in
sbb
cmp
and
xchg
out
lock
lock
popw
sahf
cmc
mov
add
mov
sbb
jge
pcmpeqw
push
cmp
or
mov
inc
fcmovnu
inc
mov
mov
fldcw
xchg
lahf
add
data16
movsl
xchg
cmp
adc
pop
sbb
pop
inc
jnp
mov
insl
fimull
adc
mov
cmp
adc
imul
mov
fdivrl
mov
call
or
sbb
sarl
inc
jo
in
and
jecxz
out
je
ja
pusha
add
mov
fdivrs
sub
les
xor
shrb
mov
movsb
dec
pop
add
cltd
ja
scas
push
negb
lock
add
lods
sbb
in
into
fmull
lea
mov
test
xchg
or
jmp
push
jecxz
push
repz
hlt
les
shlb
or
pop
pop
push
push
scas
rcrl
in
je
pop
cmp
inc
dec
add
add
mov
lret
in
and
jbe
pop
bound
inc
xchg
xchg
jle
inc
movl
jl
mov
movsb
pop
aas
jg
jge
inc
test
cmp
shlb
inc
pop
cmp
push
outsl
and
xchg
adc
add
push
fisttpll
push
mov
inc
jae
ja
in
out
jp
pushf
push
cli
xor
call
mov
or
flds
lods
sub
ret
aam
add
push
loope
shl
jns
add
xor
xchg
lock
inc
mov
das
cmp
bound
add
add
rcrb
hlt
xor
or
sbb
pop
leave
lea
lock
btsl
shlb
sbb
jno
pop
test
inc
or
loopne
std
cmp
test
inc
sahf
push
jnp
loopne
push
shlb
rcrl
xchg
test
cmp
lods
adc
in
in
aaa
jbe,pn
enter
add
inc
push
dec
mov
popa
pusha
sub
add
jno
and
hlt
ret
int
cmp
adc
add
adc
add
xchg
cmc
jns
pop
mov
adc
xor
cld
adc
push
rclb
add
jno
mov
jl
dec
arpl
rorb
out
js
mov
add
adc
cltd
jo
pop
add
jg
xchg
mov
inc
inc
add
scas
enter
in
cmp
sbbb
pushl
pusha
pop
sbb
xchg
adc
cmp
add
test
sub
rcrb
push
mov
js
add
ja
adc
pop
dec
not
cmp
popl
ret
jl
das
lahf
xchg
aad
aad
xchg
push
mov
inc
sub
add
stos
mov
test
fsub
add
add
nop
cmp
int
add
sub
and
and
icebp
mov
aaa
test
xchg
adc
xchg
call
mov
pusha
je
add
iret
les
push
dec
fs
add
fsub
adc
add
test
cwtl
rcrb
ds
mov
fidivl
icebp
rolb
popf
add
xchg
aad
test
jmp
cmp
lds
add
mov
mov
mov
js
and
loope
add
jmp
icebp
and
add
dec
xchg
ja
and
lock
sahf
pop
in
rcll
pop
jg
pop
xchg
iret
and
add
jno
xchg
xlat
jl
push
push
mov
add
repnz
xchg
popa
int
loopne
or
lahf
inc
or
adc
je
sub
and
es
xor
jnp
pop
inc
jl
push
iret
xor
mov
loop
cmp
xchg
sub
inc
inc
lods
mov
repz
xor
adc
jle
push
xor
call
enter
xchg
add
sub
push
xchg
pushf
add
je
add
ja
dec
push
xlat
or
enter
dec
out
xor
add
cmp
jne
loopne
out
jo
or
sbb
ja
mov
dec
frstor
pop
int3
sahf
or
jmp
stos
jb
ret
add
idiv
xchg
test
inc
orl
call
push
pop
call
or
dec
rorb
xchg
xchg
push
add
dec
mov
cmp
orb
mov
sub
push
cmp
es
pushf
mov
dec
add
mov
add
lcall
xchg
insb
outsl
cwtl
aaa
adc
cld
out
imul
les
pop
xor
mov
mov
xchg
sub
sub
mov
movups
testb
loopne
dec
dec
sbb
mov
in
repnz
mov
sarb
mov
xor
aaa
jo
stos
xor
xor
movsl
sub
into
add
push
push
addb
cmp
add
adc
add
xchg
mov
mov
mov
push
push
add
stos
inc
adc
push
push
or
pusha
sub
cmpb
xor
xor
adc
in
cli
and
nop
bound
mov
test
mov
ja
fldl
dec
mov
mov
out
lret
into
pop
mov
test
movl
mov
ljmp
jae
hlt
movsb
jge
adc
mov
mov
int
movsl
imul
sbb
or
or
inc
mov
or
cmp
inc
add
mov
pushf
call
out
mov
cltd
scas
mov
cmp
push
and
add
imul
mov
shlb
pop
fwait
cmp
jbe
jnp
and
lret
loopne
adc
or
pop
xlat
repnz
test
adc
adc
divl
jnp
mov
sbb
inc
mov
push
jo
jmp
adc
push
push
hlt
out
out
inc
push
mov
add
add
inc
hlt
mov
pop
repnz
dec
popf
rorb
pop
ja
mov
out
nop
jno
and
mov
push
jge
insb
dec
shl
leave
add
pop
lcall
int3
ret
lahf
cmpb
pop
add
jl
fwait
jb
and
aaa
lods
push
pop
xchg
loopne
add
pop
fistpl
jg
repnz
add
shlb
sub
fmuls
clc
les
imul
out
icebp
mov
add
sbb
add
mov
push
and
ss
dec
jne
and
add
push
imull
add
in
pop
add
pop
dec
dec
ds
in
xor
rolb
mov
add
es
fwait
cmp
add
adc
int
sbb
aad
sbb
not
sub
shrl
in
dec
cmp
inc
add
sbb
cmc
divb
orb
xchg
sbb
repnz
repz
pop
or
ds
push
sbb
inc
aaa
sarb
sbb
lret
je
addr16
add
jns
jno
fsubrs
mov
in
pusha
loopne
aam
cmp
movsb
xchg
cmp
sub
adc
push
sub
cs
push
or
push
shl
cwtl
sti
xor
push
jl
lcall
test
leave
mov
loop
nop
add
in
das
add
and
mov
loopne
ljmp
rcrb
add
iret
sahf
add
push
jae
add
cld
add
adc
mov
add
pop
xor
packsswb
in
hlt
out
shll
shr
je
pop
hlt
jbe
jg
test
xor
loopne
lea
or
inc
add
xor
sbb
xchg
jo
add
pop
les
call
popa
push
scas
out
add
lds
mov
icebp
push
fstpt
int
cmpsl
mov
jno
cli
push
mov
mov
in
dec
leave
cmpb
inc
lea
test
in
loopne
data16
adc
adc
mov
xchg
xor
mov
js
fadds
xor
sbb
sub
xlat
mov
cld
out
xor
inc
adc
sbb
orb
ror
in
pop
jg
das
jno
int
jns
push
cwtl
movl
movsb
pusha
mov
add
ds
inc
dec
in
cmpsb
add
push
jb
add
out
popa
dec
lea
inc
add
mov
loopne
stos
bound
loopne
jp
jle
lds
add
push
mov
sub
and
imul
sbb
testl
xorb
pop
or
add
aas
cld
lock
imul
rorl
outsl
add
pop
add
xchg
out
loop
divl
inc
out
add
and
shlb
loopne
push
dec
mulb
inc
push
mov
dec
daa
or
sahf
movsl
clc
andl
ja
mov
jbe
sbb
mov
scas
ret
call
sbb
adc
stos
push
add
das
or
adc
cmp
sti
stc
nop
ljmp
repz
mov
or
mov
mov
out
xchg
add
out
sar
add
lods
mov
dec
xor
mov
mov
dec
jno
ljmp
push
sbb
inc
adc
jge
mov
mov
out
pop
and
add
fiaddl
cmpsb
push
fcomps
cmp
jns
add
por
add
sbbb
and
inc
test
in
push
mov
in
dec
push
pop
xchg
add
add
cmp
imul
iret
xchg
lcall
add
in
inc
cmp
adc
jp
out
cwtl
repz
cld
nop
push
add
ja
cmp
loopne
movsb
pop
pop
xchg
adc
test
test
call
sbb
inc
das
sti
dec
xor
inc
add
gs
mov
mov
xchg
lods
popa
int
xchg
inc
jge
jnp
out
mov
orb
inc
js
cltd
mov
scas
and
sub
xchg
hlt
dec
clc
add
in
sub
mov
pop
add
adc
inc
xor
rcll
mov
sbb
mov
pop
data16
xchg
call
mov
jb
sarb
mov
lds
inc
xor
clc
mov
push
lods
cld
and
sbbl
adc
cmp
aas
sbb
sub
mov
cli
push
insl
sub
in
repz
push
sbb
out
fadd
mov
pop
aam
cmpsb
add
lods
rolb
push
gs
rolb
add
xchg
mov
add
inc
xor
dec
add
inc
mov
cmp
jne
sbb
add
std
lea
movsl
sarl
bound
call
add
push
and
cmp
mov
cs
jle
lret
and
or
xor
sub
out
mov
arpl
subb
push
mov
je
inc
mov
hlt
aaa
add
or
sbb
push
push
repz
xchg
add
cltd
mov
or
pop
cmpsl
inc
mov
add
mov
popf
into
pop
jne
aam
jo
aam
lea
test
or
add
push
add
insb
loop
mov
std
push
xor
push
jl
subl
cltd
push
in
stos
sub
jbe
loop
inc
pusha
push
test
jge
pop
pop
add
rorb
dec
add
adc
or
cmp
inc
pop
add
cmp
xor
mov
add
adc
dec
jg
sub
imulb
aad
shrl
sub
in
leave
jo
push
push
inc
jae
add
sbb
dec
call
cld
addl
pop
daa
rorb
dec
or
add
mov
aas
jbe
adc
leave
ret
mov
add
nop
mov
add
and
lahf
shrb
add
add
popf
stos
xchg
mov
sbb
or
and
adc
mov
jb
je
add
add
or
cld
add
fwait
xor
cmp
std
dec
stc
or
gs
sarb
lea
and
sbb
or
cmp
adc
pop
cltd
pop
repz
cmp
cmp
std
mov
lahf
push
jb
sub
sti
mov
and
sbb
sahf
or
xchg
fucomi
daa
test
mov
mov
mov
cmp
pop
or
imull
sbb
cmp
jl
int
add
pop
and
pop
lock
xchg
mov
add
imul
testb
jmp
dec
mov
mov
es
daa
ret
loopne
fwait
clc
call
and
out
dec
lock
loope
jne
mov
jns
mov
add
rorb
sub
lret
in
add
stos
aam
into
gs
fiaddl
mov
push
add
scas
je
jb
arpl
or
add
idivl
inc
mov
mov
and
ljmp
es
mov
adc
xor
inc
add
push
or
or
sti
or
sbb
add
cmc
xor
icebp
sarb
jne
dec
das
rorb
shll
shl
repnz
inc
orb
je
mov
test
jbe
xchg
xor
int
mov
ss
mov
xchg
imul
sbb
mov
in
inc
jl
inc
lods
sbb
mov
jb,pn
rclb
add
adc
add
int3
roll
add
and
ss
push
mov
ja
int3
loop
push
repnz
push
es
push
ror
add
sub
js
mov
loopne
in
int3
cmp
add
push
or
pop
clc
stc
fwait
in
xorb
cmp
test
cmp
sbb
shl
inc
add
rcrb
or
addl
add
fsubl
pop
lret
rorb
xchg
icebp
scas
jp
mov
jmp
pop
rolb
outsl
push
sbb
movsl
inc
add
sbb
in
cld
addr16
loop
jnp
js
sub
aas
ljmp
push
mov
xchg
add
add
mov
mov
nop
rolb
arpl
add
icebp
outsl
add
xor
xchg
in
add
mov
test
adc
repz
lock
pop
in
test
sbb
mov
and
sbb
sub
xor
push
dec
cltd
jecxz
arpl
or
push
pushf
mov
cmp
cs
mov
sub
push
pop
sub
sbb
loope
sbbb
xchg
lods
fisttpl
xchg
dec
add
inc
pop
and
ja
mov
mov
fs
imul
sub
sbb
flds
shl
imul
int3
jno
inc
push
xchg
gs
cmc
add
outsl
mov
clc
cltd
sub
mov
ret
push
in
std
pop
add
sub
sub
out
mov
jg
xor
js
inc
dec
sbb
dec
pop
incl
dec
add
add
test
daa
jge
sbb
dec
sbb
hlt
lock
imul
into
js
dec
pop
orb
cmp
lds
cmp
pushf
xor
leave
sbb
jbe
lea
dec
das
xor
enter
aas
mov
jno
add
lret
addr16
scas
call
aaa
loopne
fdivr
rcll
jo
nop
add
pop
addl
xor
xchg
js
arpl
loopne
fisttpll
mov
outsl
ret
add
pusha
cmp
jne
ljmp
dec
mov
cmc
dec
ljmp
mov
sub
lock
or
and
test
mov
mov
mov
ja
sbb
fisttpl
sub
mov
test
mov
lret
adc
push
jo
fldt
filds
mov
aaa
idivl
xor
and
pop
cmc
cmp
push
mov
sub
mov
mov
pop
mov
int
xchg
ret
or
cmpps
sub
nop
mov
adcl
fiadds
push
inc
loopne
jp
mov
add
fldcw
cmp
enter
add
push
shlb
xchg
mov
push
add
cli
mov
shr
add
mov
and
mov
ljmp
push
and
fsubr
test
or
adc
xor
add
daa
inc
fcomps
cmp
test
setp
mov
mov
xor
idivb
mov
popf
pop
and
dec
add
xlat
subb
pop
lret
push
out
add
mov
neg
mov
push
push
sbb
mov
adcb
cs
mov
js
loope
jns
jno
cwtl
adc
mov
add
arpl
sub
mov
fstps
popf
jno
into
jecxz
nop
mov
notl
repz
inc
or
mov
mov
jle
cld
mov
test
pusha
les
or
incl
sbb
push
std
cwtl
sbb
mov
add
sbb
pop
push
mov
subl
or
subb
leave
cld
or
jns
sub
pop
outsb
push
sbb
in
popa
test
cmp
add
popl
sub
loope
inc
rcr
pop
cs
add
jge
jns
xor
daa
clc
leave
call
divb
mov
xor
jmp
add
out
or
cmp
sbb
add
shrb
mov
cmp
arpl
inc
mov
cs
inc
dec
xchg
loope
roll
mov
repnz
popa
out
je
push
sub
comiss
popf
aas
scas
fwait
rclb
pop
mov
xchg
testb
dec
out
js
add
cmpsb
vshufpd
add
mov
ljmp
lea
jo
add
inc
mov
and
cld
add
out
pop
dec
mov
jl
add
test
add
mov
lcall
sub
mov
mov
add
je
inc
mov
aam
cmpsb
inc
add
mov
je
std
nop
add
lods
pop
adc
pop
push
loop
inc
int
pusha
add
pop
fldcw
jns
mov
or
mov
push
cmp
mov
cld
repnz
outsl
or
add
mov
ljmp
movsl
xchg
adc
data16
jb
jge
sbb
add
xchg
sub
mov
call
sub
ret
leave
pop
lock
dec
and
jg
cmp
getsec
push
mov
pop
dec
add
rorb
in
movsb
shll
xor
fmull
sbb
inc
shrb
jge
pusha
xchg
cmp
mov
and
cmpsb
mov
js
es
and
stc
xor
rcr
mov
xchg
sbbb
add
nop
enter
cmp
int3
add
inc
and
adc
mov
outsb
iret
into
cmpsl
mov
lahf
out
mov
sti
mov
in
sbb
and
fdivrl
pushf
in
dec
test
adcb
mov
add
sub
xor
popa
sbb
nop
add
out
push
fs
jmp
addl
pop
shlb
pushf
sar
test
add
push
sbb
scas
lcall
stos
mov
add
jns
xor
xor
mov
das
enter
and
xchg
mov
fisttps
cld
or
add
dec
or
sub
and
add
loope
pop
rolb
jbe
push
adc
push
addb
mov
ret
int3
orl
add
mov
pop
add
imul
fcoms
add
cmp
popa
lret
loope
dec
inc
aam
data16
pop
fiaddl
pusha
sub
and
test
or
push
mov
add
sbb
dec
ds
pop
xchg
mov
xchg
sbb
xchg
inc
scas
xor
add
ljmp
mov
in
add
xchg
loope
shld
pusha
shrb
xor
je
mov
add
cmp
outsb
xchg
add
test
testl
sub
push
push
or
jmp
pop
cmp
adc
les
out
lock
icebp
pop
jp
fucom
sarb
inc
fstpt
test
mov
and
fiadds
add
gs
fstl
insl
pop
js
popf
add
lods
xchg
jo
outsb
jl
and
fsts
mov
xor
lods
push
adc
fadds
sub
decb
or
repz
cmpl
out
xchg
in
dec
rclb
rolb
mov
sti
lods
cmp
add
jge
push
ljmp
clc
aam
pop
mov
call
add
push
mov
test
mov
add
xor
jno
loopne
ds
in
or
add
add
fildll
inc
out
call
popf
mov
cld
andb
shr
add
push
mov
xchg
jnp
into
sub
or
jg
mov
lahf
shlb
dec
pop
shrl
cwtl
shrl
loopne
in
dec
mov
adc
adc
clc
push
rcrl
jns
call
fdivs
cli
inc
sub
into
add
out
inc
pop
or
jo
add
jmp
in
clc
lahf
add
insb
aas
punpcklbw
add
rcl
sub
jl
sub
dec
sub
push
out
mov
cltd
mov
cld
subl
cmpsl
subb
sub
pushf
cmp
lods
jecxz
aad
cmpsb
std
mov
mov
add
loope
imul
ficoms
xor
jl
nop
loop
cmp
cmp
mov
pop
nop
roll
cmpxchg
adc
sub
xor
lods
cmp
psllw
out
lock
inc
cmp
loop
mov
inc
rcl
add
jne
fwait
lods
popl
dec
test
sbb
ljmp
push
or
out
nop
jnp
and
fdiv
mov
loope
add
pop
add
sbbb
js
dec
add
cmp
fcom
ljmp
dec
xchg
lret
or
mov
cli
out
xchg
in
popf
adcb
sbb
lods
pop
roll
mov
cltd
loopne
or
movsb
inc
push
sbb
xchg
ret
add
jno
pusha
xrelease
xchg
mov
test
aas
xchg
add
xor
aaa
imul
shrb
mov
mov
jae
pop
xchg
enter
out
or
or
add
fbld
sbb
pop
lret
push
xor
pushf
add
aaa
scas
jne
or
insb
add
sub
xchg
dec
xchg
mov
cmpsl
jo
les
add
andb
and
add
xchg
loop
inc
mov
cmc
lods
ss
js
fs
jle
cmp
pop
or
adc
pop
test
imul
repz
mov
out
cmp
mov
cltd
adc
in
incl
test
cmc
cmp
mov
movsb
mov
add
lods
sub
cmp
push
movsb
xlat
push
imul
jo
sbb
outsb
add
enter
xchg
cmpsb
push
dec
sub
imull
mov
pop
test
push
add
icebp
jne
shr
cmp
aaa
into
fdivrl
out
add
aas
pop
mov
in
mov
xchg
dec
jns
cmc
or
xor
add
les
in
mov
push
push
fisttpl
mulb
aad
out
add
xchg
push
inc
fwait
add
test
filds
dec
pop
jns
jg
lods
mov
xchg
add
jp
pop
xchg
test
or
or
push
ljmp
test
pop
mov
or
pop
fsubs
adc
pop
clc
add
dec
mov
xor
add
sbb
cmp
add
sub
xchg
pop
inc
adc
dec
stos
add
std
push
cmc
fdivr
orb
jnp
add
cmpsb
jge
imul
push
cmp
mov
jb
cmp
mov
cwtl
movsb
add
sbb
add
call
xlat
pop
dec
adcl
js
adc
cmc
push
fsts
out
jle
mov
or
test
mov
repz
xchg
push
aam
stc
mov
je
jp
push
or
cmp
and
lods
popf
call
clc
popa
mov
dec
ficompl
add
push
pop
cltd
push
loop
inc
sahf
arpl
out
push
pop
sti
xor
xorb
add
fistl
scas
xchg
pusha
mov
xor
sub
jo
add
push
mov
mov
cmp
out
inc
mov
mov
lds
xchg
push
and
arpl
out
or
cld
cld
stc
ja
and
enter
movb
adc
inc
ret
rdpmc
jmp
fdivl
pop
int3
fldl
popa
loopne
push
rol
push
xchg
add
and
add
jb
pusha
enter
mov
lods
rolb
inc
add
cli
and
in
subb
cmp
push
mov
shr
popf
out
inc
and
mov
push
xor
push
mov
cld
dec
lods
imul
lret
sub
std
xorb
or
insb
add
jp
add
xor
inc
add
pop
test
or
or
xor
and
mov
jbe
jp
sub
add
push
pop
add
loop
sbb
jno
movsb
mov
scas
je
adc
jge
ficompl
stc
adc
or
mov
mov
addr16
add
fadd
add
nop
stos
int
test
movsl
sub
sbb
in
add
movd
cs
and
mov
mov
mov
adc
lods
rorb
pop
inc
mov
hlt
les
aas
addr16
orb
hlt
sbb
cmp
add
xchg
or
push
or
hlt
call
movsl
mov
mov
sbb
stos
roll
rclb
sbb
xchg
jp
lods
mov
popf
add
adc
adc
out
repnz
lods
pop
call
aam
xlat
mov
rclb
aas
or
add
out
hlt
sub
fcmovb
insb
sarl
xchg
adc
pop
adc
add
lahf
jmp
pop
js
das
sbb
cmp
inc
xor
push
dec
clc
je
rcll
mov
orl
or
pop
or
loopne
push
aam
mov
ja
adc
testl
mov
push
divb
addr16
dec
scas
mov
xor
adc
in
add
inc
mov
cmp
orb
pop
jo
arpl
add
push
out
sbb
sarl
fcoml
mov
xor
push
mov
cmp
mov
add
jl
pop
daa
xchg
iret
mov
mov
movsb
adc
or
lock
dec
popf
mov
mov
add
aaa
loope
insb
dec
add
out
lods
sub
push
add
add
loopne
stos
mov
jle
orb
fwait
pop
div
add
sbb
jmp
pushf
add
sbb
adc
xchg
loopne
ja
sti
sete
xor
inc
xlat
lds
movb
into
scas
sub
mov
add
or
cmp
lds
xchg
push
xchg
mov
jno
and
je
sbb
dec
xlat
jo
flds
adc
mov
dec
inc
les
movsl
bound
jg
push
std
pop
out
add
insl
scas
ds
filds
inc
inc
pushf
mov
aad
in
imul
mov
jno
rcrb
inc
add
mov
add
push
stc
ret
add
push
jle
shll
xchg
in
add
ss
pop
lock
sbb
adc
push
sub
enter
jg
scas
mov
xlat
add
pop
mov
push
add
je
stos
sbb
mov
fldenv
xor
or
xchg
add
jg
add
or
in
push
scas
pop
push
add
sub
jp
add
std
lock
incw
test
out
xor
div
sbb
pop
pop
push
or
addb
dec
pusha
sbb
out
or
test
shl
jne
notb
add
xchg
pop
mov
sub
lret
inc
pop
push
js
and
add
push
jmp
mov
and
mov
mov
scas
add
push
rcrb
sub
aaa
cmp
js,pn
or
add
xchg
dec
or
mov
inc
jno
add
push
popf
xor
jl
fdivr
lock
mov
jp
fimull
cmp
inc
rorl
aam
add
add
das
push
subb
add
push
jg
xchg
pop
aad
adc
inc
mov
add
pop
in
out
stos
pop
dec
add
xor
shlb
push
loopne
dec
jbe
rcrb
stos
add
sbb
jno
rolb
add
sub
mov
and
add
ja
dec
inc
daa
add
inc
mov
lock
rcll
xor
mov
jle
jge
popa
jb
stc
scas
lret
rcrb
or
and
sub
pusha
add
js
fisttps
imul
inc
sub
jae
jo
rcrl
xlat
ds
js
sub
pusha
or
and
mov
out
inc
jl
daa
pop
jns
inc
pop
push
pop
adc
pushf
mov
inc
adc
divb
dec
xchg
or
std
mov
add
sub
or
pop
add
inc
int
aad
pop
add
pop
sub
into
dec
add
cmpsl
push
push
add
mov
xchg
movsb
xchg
mov
leave
sbb
test
push
push
mov
xchg
xlat
push
add
loopne
jg
fidivrl
xchg
js
push
jmp
dec
mov
xor
std
xchg
int3
adc
mov
inc
sub
pop
sub
scas
push
rolb
mov
fimuls
js
aaa
test
or
or
mov
testb
pop
mov
loop
in
sbb
pop
jg
mov
lock
or
out
inc
cld
cltd
sub
push
fiaddl
or
ret
dec
mov
js
cmp
mov
lret
pusha
mov
push
sbb
and
adc
mov
out
push
mov
xchg
and
ja
mov
sbb
xchg
out
add
push
dec
call
add
repnz
jle
and
cwtl
jbe
rcll
push
jne
mov
dec
adc
cmp
insl
aad
cltd
fsubs
ljmp
xchg
flds
call
insb
nop
jecxz
mov
add
cmp
addr16
inc
mov
or
mov
xorb
push
ret
push
mov
leave
fs
orl
cld
adc
jecxz
cmp
mov
or
call
cli
and
fisubl
lahf
and
loop
mov
subb
add
cmp
lret
nop
push
mov
mov
cmp
std
popf
xchg
and
adc
cmc
push
outsl
mov
mov
andb
jae
lahf
cmpl
mov
add
mov
movsl
sbb
adc
insl
add
jle
mov
add
outsb
cmp
xchg
in
ds
daa
add
test
aad
mov
mov
lock
mov
rcl
fwait
sahf
inc
leave
inc
xchg
add
repz
loopne
stc
loop
movsl
add
pop
out
inc
inc
jmp
add
outsl
and
push
jb
sbb
insl
aam
push
dec
out
into
js
sti
xor
lahf
or
fistpl
dec
test
jbe
fadds
cwtl
pop
call
es
xchg
loopne
xchg
adc
xor
add
mov
add
pop
lcall
add
adc
push
sbb
push
sbb
in
insl
pusha
jns
ret
xor
ljmp
jle
or
dec
loop
add
xchg
mov
mov
and
movsl
cltd
xchg
xor
sbb
dec
fnsave
add
adc
or
sub
fdiv
push
mov
or
xchg
loop
push
mov
mov
add
add
inc
out
fcomps
hlt
and
loop
xor
ficomps
lret
in
pusha
add
insb
fsubrl
sbb
imul
add
setp
dec
shll
jo
jns
in
cmpsb
loopw
push
xor
inc
je
add
adc
hlt
pop
dec
push
dec
add
js
andb
add
fdivl
mov
nop
ds
adc
mov
adc
add
fistl
in
jo
mov
idivb
in
jl
add
cmp
ljmp
jmp
subl
dec
fs
inc
dec
in
pop
mov
je
cmp
mov
lret
mov
add
mov
mov
incl
xlat
add
or
popf
lds
pop
pop
mov
cmp
xchg
testb
jne
icebp
nop
mov
add
hlt
mov
scas
add
daa
fildl
add
adc
mov
loopne
mov
ficomps
inc
test
mov
mov
sbb
pushw
jp
jl
je
pop
cmp
mov
add
push
lcall
in
lds
fildl
sbb
or
sbb
inc
add
neg
sti
hlt
mov
mov
lret
jmp
adc
sub
ret
inc
xchg
fwait
add
nop
xorl
mov
mov
mov
mov
push
or
movsb
mov
or
mov
add
aaa
pop
push
aad
ds
add
dec
jg
mov
xor
inc
xchg
sub
sub
enter
shlb
and
pusha
adcl
in
test
inc
cmp
inc
inc
mov
dec
pop
pop
push
mov
push
xor
lods
sarl
mov
pushf
jg
cmp
fsub
inc
scas
mov
cmp
test
and
movsb
hlt
adcl
int3
push
sub
aad
lods
pop
mov
jle
xchg
jmp
ljmp
xor
mov
mov
lahf
imul
add
xor
nop
aad
jl
sbb
mov
inc
and
adc
and
or
or
icebp
rcrb
add
ret
fucompp
mov
ss
int
adc
xchg
mov
testb
jb
sbb
add
cmp
mov
or
xchg
daa
dec
xchg
add
addr16
repnz
insb
repz
das
fldt
xchg
nop
cmp
jns
add
mov
pushf
add
inc
pusha
scas
mov
xor
jae
enter
dec
add
sbb
out
mov
jmp
adc
les
jle
enter
mov
and
push
nop
cmp
in
jbe
xor
lods
pop
rcll
pop
das
jb
scas
pop
or
cmp
jne
int
pop
shrb
pop
enter
mov
lods
and
xor
arpl
pop
insl
int3
fidivrs
mov
push
imul
and
adc
push
lret
or
sbb
addr16
xchg
dec
mov
scas
imul
adc
mov
and
mov
push
enter
mov
adcb
cmp
jno
popf
jp
ret
inc
movsl
pop
add
mov
sbb
cmp
cli
addr16
lds
out
dec
add
hlt
pop
and
sti
addr16
cli
pusha
xchg
dec
jmp
add
test
xchg
cmpsl
mov
rep
adc
and
in
adc
sub
sub
scas
dec
mov
add
push
mov
test
push
cmpl
add
ja
and
xchg
dec
cmp
add
into
jecxz
add
data16
leave
cmp
add
movl
ds
inc
push
xchg
sbb
push
dec
scas
bound
mov
clc
loopne
popf
dec
add
gs
movsb
push
imul
dec
pop
push
pop
sbb
mov
mov
std
cmp
rorb
rcrb
push
shrl
lods
popa
ja
inc
sbb
xchg
adc
ror
push
pusha
adc
insb
add
pop
push
pop
jmp
mov
sub
andb
xor
popa
adc
cmp
faddp
dec
add
hlt
leave
jo
mov
mov
aam
ret
cmp
sub
mov
movsb
or
cli
dec
rclb
and
sbb
fnstsw
pusha
jl
inc
mov
xor
adc
andl
inc
filds
dec
popa
pop
add
cwtl
push
leave
roll
movsb
push
sub
or
bound
in
mov
inc
add
and
sahf
push
and
loop
mov
pusha
mov
daa
lret
outsb
sbb
jnp
insb
jmp
std
nop
data16
add
out
cmp
outsb
loopne
adc
sbb
lcall
push
fbstp
test
jge
je
push
push
cmp
icebp
inc
add
jle,pt
adc
daa
push
or
pop
pop
sbb
je
lock
or
add
push
cld
cli
sbb
sub
out
shrb
dec
test
movsb
xchg
imul
xor
mov
ljmp
pop
xchg
ret
add
enter
repnz
add
fidivrs
mov
pop
cmp
inc
mov
adc
pushl
ret
loope
xor
cmp
sub
and
outsl
or
sbb
inc
aad
mov
inc
pop
cmpb
std
add
insb
cwtl
xchg
popf
lock
nop
roll
xchg
ret
pop
mov
sbb
mov
test
xor
sbb
divl
push
add
stos
mov
add
inc
mov
push
jne
rcrb
mov
add
pop
xor
pop
outsb
xor
add
xchg
adc
jp
nop
jne
sub
or
fsub
push
adc
push
pusha
xlat
enter
ljmp
push
cld
orb
jo
push
iret
stc
pop
add
xchg
lea
cmc
bound
leave
cmp
adcl
inc
add
js
and
add
hlt
push
enter
lock
mov
sub
push
dec
push
lcall
mov
push
lahf
mov
add
xor
jo
dec
add
jmp
stos
test
or
dec
loop
add
jbe
lds
test
xchg
add
and
push
mov
cmp
mov
mov
bndstx
leave
sti
add
es
pop
mov
das
dec
syscall
fsts
sbb
sbbb
subb
sub
pop
add
test
push
or
ret
subb
xor
or
pusha
xlat
out
xor
hlt
adc
inc
stos
insb
jns
push
cmpsl
cltd
daa
sub
and
or
lahf
incl
repz
xchg
xor
or
imulb
push
add
pop
scas
movsb
scas
sub
in
sub
add
stos
cmpsl
sti
loope
ds
jmp
pop
js
aas
call
outsb
leave
and
scas
sti
lods
add
add
cmpsb
rcrb
ljmp
js
sti
popa
mov
repnz
sub
icebp
popf
sbb
push
in
mov
jbe
sbb
gs
or
popa
cwtl
pusha
loop
ror
lock
sbbl
dec
jle
add
test
xor
hlt
test
mov
stos
aad
inc
pop
aas
inc
sbb
cmp
add
sbbb
in
stos
into
add
int3
imul
cs
or
dec
cmpsb
dec
or
jge
xor
cmp
push
push
int3
in
jb
lods
pop
push
mov
fdiv
mov
mov
dec
jo
ds
cwtl
pop
pop
leave
bound
enter
adc
sti
out
add
lahf
mov
add
fwait
or
insl
movsb
enter
mov
inc
adc
mov
sti
add
push
cmp
lcall
mov
pop
stos
sbb
xchg
add
cmp
in
push
rorb
lea
pop
mov
mov
adc
pminub
or
stos
loop
add
pusha
cmp
push
cwtl
add
mov
xor
pop
sbb
cli
lds
inc
sbb
cmp
pop
add
lahf
repz
lds
cmp
sbb
and
mov
cmpsl
push
fldcw
std
jno
sbb
cltd
cmp
mov
xchg
mov
dec
lahf
ds
fdivs
add
sub
lds
add
pop
loop
mov
lret
sbb
xchg
lock
push
test
mov
mov
jno
or
fisubrl
jno
add
add
scas
push
rorb
sahf
xor
ja
insl
push
add
shlb
shrb
jno
nop
sti
push
or
flds
mov
ja
fiaddl
je
mov
in
sahf
out
xchg
out
in
sub
mov
stos
shll
mov
popl
movsl
inc
inc
xchg
leave
xchg
nop
push
mov
sbb
xlat
sbb
dec
cmp
fmull
inc
aas
fsts
in
pop
mov
inc
mov
add
out
jnp
dec
test
in
loopne
mov
mov
call
push
jno
add
and
jb,pt
and
ficomps
mov
cmp
adc
repz
sbb
inc
add
xchg
xor
push
repnz
jl
add
test
mov
xlat
add
push
lret
lds
fdivrs
add
mov
sbb
cld
xchg
add
pop
sbb
or
scas
dec
dec
mov
imul
fnstenv
icebp
test
add
mov
push
in
and
adc
xchg
str
repz
add
mov
fidivs
pop
std
push
aas
lock
mov
les
rol
xor
lds
cwtl
out
or
jle
ret
push
js
mov
adc
mov
mov
int3
sub
outsb
or
movsb
inc
adc
inc
inc
cld
pop
and
adc
add
mov
rolb
pusha
pop
negb
dec
mov
call
out
std
pop
and
mov
repnz
loope
adc
add
jp
dec
test
int3
xchg
arpl
cmp
mov
daa
fcoml
adc
or
int3
push
xor
es
frstor
cmp
cli
mov
inc
mov
pop
cltd
sbbb
push
pop
mov
and
xor
cmp
inc
cltd
aas
xchg
hlt
scas
ret
jmp
pop
std
mov
cmc
mov
call
push
mov
ds
test
mov
cmpsl
movsl
jns
add
fbstp
adc
dec
inc
sbb
sbb
push
test
adc
lea
sub
add
andb
push
add
mov
in
ret
shr
sahf
cld
subb
clc
add
adc
sahf
loope
adc
cld
cmp
xchg
xorb
int
jo
rorl
int3
out
mov
pop
sarb
fcoms
inc
pop
scas
pop
inc
test
orb
cmpsl
xchg
jno
add
mov
push
call
stos
inc
cltd
scas
add
mov
inc
jecxz
pop
clc
imul
call
add
ficompl
mov
pop
aam
adc
adc
loop
add
loope
or
insb
add
jno
addb
ljmp
inc
sub
inc
inc
loope
dec
xor
mov
into
or
inc
dec
cmpsl
dec
mov
push
cmp
test
or
js
sub
mov
pusha
fs
dec
cld
add
cwtl
das
pushf
hlt
pop
rorb
sub
shll
arpl
cmp
sbbb
lret
imul
add
outsb
ret
fsubr
test
rcrb
pusha
hlt
sbb
sbb
loop
pop
pop
mov
sub
push
fadd
mull
movsl
dec
gs
in
mov
or
adc
add
and
xlat
sub
test
xchg
sub
dec
dec
inc
mov
es
cs
movsb
cmp
incl
add
jg
xor
out
add
sbb
xchg
jge
lock
inc
popa
jo
ljmp
lret
arpl
adc
fiaddl
pop
jo
mov
cmp
ret
inc
inc
loop
or
fisttpll
push
mov
cmp
mov
sbb
out
pop
lret
shll
xor
pushf
pop
sub
outsb
xchg
pusha
ret
cmp
cmc
pop
cld
repnz
add
mov
outsb
jb
or
xor
mov
add
jmp
add
sahf
sbb
pop
push
sub
xchg
stos
mov
sub
aas
fsubrl
fcomi
xchg
lea
sahf
cmp
cltd
je
jge
insb
scas
aam
inc
in
data16
sbb
ror
mov
pushf
fdivrp
dec
add
into
add
mov
les
or
aam
imul
fidivrs
add
push
push
xchg
pop
sub
pop
and
xchg
lock
jl
adc
cmp
les
pop
testl
pusha
sbb
jl
push
xchg
mov
rorb
pop
sbb
notb
out
fwait
add
dec
ja
xor
jle
shlb
add
pop
imul
adc
aas
mov
cwtl
add
cmp
jne
ljmp
repz
mov
push
adc
cmc
jbe
jl
push
push
sti
stc
add
in
mov
or
out
cmp
shrb
jg
dec
aas
xchg
outsl
adc
and
maxps
jae
cs
cli
repnz
mov
lret
insb
sub
add
push
aad
aam
fistpll
daa
aas
mov
mov
mov
adc
dec
arpl
add
push
xchg
jno
pop
mov
push
aam
sbb
jge
sahf
add
push
roll
or
mov
ljmp
add
jb
xorl
inc
jecxz
dec
mov
scas
add
dec
sub
aaa
mov
xchg
add
xor
cld
aas
pop
adc
push
pop
mov
stc
dec
out
ljmp
fdiv
xchg
shlb
jp
icebp
add
ret
mov
add
lret
push
test
arpl
and
imul
sub
cmp
rcrl
cmp
subb
sub
sub
mov
mov
jae
mov
daa
nop
out
rclb
push
imul
pop
shll
insl
mov
int3
imul
mov
xchg
xor
adc
loop
enter
dec
xor
or
rcrl
xchg
mov
sbb
mov
pop
pop
xchg
add
jns
test
sbb
jo
pushf
pusha
inc
js
xor
mov
mov
cmp
sbb
dec
rcrb
xchg
xor
lcall
sub
mov
popl
test
and
pusha
orl
lock
arpl
sub
xor
insb
xor
or
loope
rorl
movb
push
sti
jecxz
enter
add
pop
add
sbb
fs
and
pop
cld
repnz
adc
inc
in
add
jecxz
mov
out
pop
sbb
orl
sub
jmp
mov
rorl
push
xor
push
mov
add
xchg
xor
cmc
idiv
das
cmp
rolb
jns
mov
add
lds
test
dec
in
push
iret
pushl
lea
or
mov
adc
inc
cs
es
shrl
inc
push
loopne
clc
pop
orl
lcall
xchg
stos
or
mov
cltd
mov
popa
mov
push
push
call
push
addl
jmp
cmpb
je
mov
das
mov
ficompl
pusha
andl
test
inc
add
jb
add
pop
sub
addl
adc
add
je
push
add
mov
push
nop
and
aas
popa
add
call
xchg
jecxz
je
out
cmp
xlat
subl
lds
loop
cmp
or
cpuid
les
push
jecxz
jnp
loop
and
aas
sarb
pop
add
cmpsl
loopne
xchg
sub
mov
test
mov
inc
stos
call
mov
into
int3
imul
test
xor
stc
add
bnd
mov
or
test
add
mov
sbb
and
xchg
add
mov
lock
or
xor
orb
test
ret
sbbb
dec
mov
jmp
scas
sbb
int3
sub
add
lods
subb
pop
outsb
add
jmp
mov
add
xor
mov
clc
rolb
jne
add
lret
pop
lds
subb
pop
cmpsb
popa
rep
shlb
adc
mov
ja
xor
ljmp
adc
in
pusha
fistps
xchg
out
push
xlat
int3
insb
fsubs
lods
sub
mov
pop
cmp
mov
addr16
jno
inc
sbb
ja
inc
push
popl
fisubl
mov
inc
jmp
xchg
sbb
fs
pop
jle,pn
cwtl
fistpl
inc
push
jb
pop
or
push
inc
xchg
call
add
icebp
pop
out
loope
es
sbb
add
jmp
jae
xchg
mov
cmpsl
enter
add
loop
or
add
ret
daa
cmpsb
test
shll
or
add
cmp
lcall
mov
xor
ljmp
test
nop
movsl
into
mov
cmp
nop
inc
cmpsl
pop
rcl
cmp
add
shrl
data16
and
lret
or
dec
cmp
pushf
movsl
scas
gs
mov
dec
aam
lret
mov
sbb
and
mull
mov
or
call
aam
sbb
sub
test
rclb
pop
shlb
std
hlt
push
dec
add
cld
cmp
aam
cmpsb
fcoml
out
movsl
sbb
cli
sub
dec
roll
xor
pop
pusha
pop
call
add
leave
cld
gs
dec
shll
xchg
pop
je
and
and
jl
add
jo
pop
insl
push
xchg
add
cmp
mov
xor
jo
flds
data16
pushf
adc
lea
push
fsubs
out
call
pop
sub
inc
iret
jge
in
xchg
jbe
fwait
dec
lret
mov
add
pushf
adc
add
add
fdivs
mov
hlt
mov
add
shll
mov
push
lret
inc
flds
mov
es
loopne
and
jmp
dec
add
lcall
mov
or
pop
cwtl
lods
sbbb
or
jle
out
pusha
push
add
sti
inc
xor
xchg
xchg
add
adc
js
push
pop
fstpl
stos
mov
mov
in
and
cmp
jb
cwtl
loope
in
bound
push
fdivrl
cs
adcb
shlb
cmpsb
xlat
xorb
add
cmpsl
sub
add
sti
hlt
adc
pmulhw
nop
sbb
aaa
out
or
in
stos
add
mov
xor
add
mov
fldenv
mov
pop
in
mov
cmpsb
dec
push
jns
sbb
mov
mov
inc
mov
add
cmp
std
xchg
pushf
in
push
movsb
jbe
jo
jae
push
sbb
cmp
mov
pushf
das
inc
stos
push
add
xor
xchg
add
add
rcrb
mov
add
pop
cmp
adc
pop
push
pusha
roll
pop
add
lods
xchg
imull
rolb
push
add
adc
pop
int3
out
sbb
cmp
add
or
inc
lahf
push
add
pushl
adc
add
or
add
or
pop
add
lods
js
cmp
and
addl
or
loopne
xchg
and
pop
lock
jecxz
js
pop
pusha
push
icebp
hlt
leave
jbe
push
add
idivl
mov
add
cltd
push
push
sbb
loop
popf
add
inc
inc
mov
dec
add
lods
jecxz
aas
dec
mov
repz
dec
subb
sbb
lock
pop
xchg
jmp
sub
jg
sbb
push
data16
xorl
pop
mov
test
mov
xor
lock
sbb
loopne
fldl
test
insb
mov
sbb
push
dec
sbb
fistpll
pop
add
repz
sbb
fsubrs
or
push
mov
add
push
scas
shl
push
inc
add
subb
sbb
je
xor
ret
mov
dec
dec
add
mov
inc
mov
je
in
add
jp
cwtl
and
jbe
cmp
std
sbb
mov
outsl
cmpsl
push
add
fistps
data16
pop
in
sub
inc
in
rorb
sub
pop
mov
stos
sub
insl
movsl
test
roll
out
test
cs
lods
add
pop
or
add
data16
cmp
js
push
jl
adc
add
adc
test
in
scas
and
dec
lahf
inc
dec
insb
hlt
ja
and
xchg
rorl
adc
js
outsl
stos
add
loopne
jmp
add
cmc
ljmp
lcall
in
push
jl
cmpsb
and
mov
daa
in
outsl
push
jmp
pop
rolb
fcmovnb
lea
pop
cmc
data16
add
out
clc
add
mov
mov
inc
add
or
lret
dec
push
add
mov
add
push
movsb
add
cmpsl
xchg
lods
loop
sbb
add
mov
bound
mov
inc
add
adc
lods
pushf
pusha
lcall
sahf
sub
jle
arpl
cmpsb
add
mov
cmp
ljmp
xchg
cli
add
cmpsl
lds
lahf
iret
lods
int3
dec
xchg
push
and
xchg
ror
in
push
add
cmpsb
repnz
sti
clc
fwait
sbb
add
lods
add
inc
add
test
mov
fstpt
xlat
subb
mov
xchg
xor
and
sti
add
sbb
or
ret
mov
sti
cmpb
inc
stos
push
mov
pop
cwtl
orb
add
inc
inc
ljmp
stc
sbbb
or
cmc
in
push
adc
lock
pop
jge
push
incl
inc
xchg
sub
gs
loopne
cmp
inc
sbb
loope
adc
out
mov
inc
or
out
js
ljmp
test
fiadds
adc
sub
lret
dec
mov
dec
sarb
xchg
mov
add
in
mov
dec
aad
jnp
mov
add
add
xlat
cmp
mov
dec
xchg
add
sub
rcll
fbstp
add
shlb
cs
xor
in
add
sbb
jnp
mov
xchg
call
je
daa
push
in
mov
push
fiadds
push
test
loopne
in
add
inc
or
cmpsb
jb
jno
jns
out
push
dec
mov
mov
inc
adc
jae
dec
jmp
jbe
xchg
cmp
xor
mov
das
push
dec
add
xchg
add
jecxz
add
add
mov
add
fsubr
out
xor
pop
mov
icebp
fwait
ret
xor
push
add
ret
dec
sub
enter
add
call
out
and
sub
add
cmp
in
pusha
mul
mov
lock
outsl
je
inc
clc
shl
ss
inc
jb
pusha
add
jno
cltd
add
xlat
aam
sub
or
add
mov
cmpsb
dec
jne
mov
add
and
decb
mov
int3
inc
negl
jnp
fidivrl
add
jl
fwait
add
iret
arpl
or
shlb
add
dec
stos
out
add
push
xadd
jo
jl
pop
cwtl
inc
in
push
push
jnp
dec
mov
and
fiaddl
sti
dec
test
sub
add
pop
scas
es
xchg
add
inc
xchg
lea
mov
sar
add
push
out
or
xchg
push
push
adc
loopne
imul
lea
cmp
xchg
mov
xchg
add
pop
adc
enter
add
pop
jecxz
insl
shl
clc
loop
stc
dec
mov
pop
outsl
fcomps
call
mov
jecxz
js
jne
sub
sub
data16
lcall
dec
fidivl
hlt
outsl
mov
insl
out
repnz
xchg
inc
mov
sbb
pop
movsb
loop
mov
xlat
mov
stos
jno
add
pop
inc
push
punpckhwd
and
ret
in
pop
add
lcall
pop
daa
test
xchg
inc
xchg
push
pop
add
mov
lret
gs
push
imul
and
mov
in
stos
enter
pop
inc
add
inc
sahf
pushf
dec
cmp
and
movsl
adc
or
clc
mov
mov
add
fsubrs
push
cmp
scas
mov
or
fmull
pusha
adc
add
iret
mov
pop
and
jmp
sbbb
mov
dec
sbb
mov
add
push
sahf
lds
aaa
push
jl
fmuls
xchg
add
inc
xchg
push
pop
add
mov
add
je
add
inc
cli
fidivrs
test
dec
jns
sbb
mov
jbe
out
push
add
pop
cwtl
xchg
int
and
ja
add
xchg
dec
lods
pop
inc
sub
lea
lcall
call
mov
mov
pop
insl
andl
repnz
adcb
push
test
pop
add
mov
cwtl
rcl
pusha
add
ror
sbb
add
cmpsl
sti
cmp
add
mul
aad
jp
mov
lret
sbb
insb
push
add
in
pop
subb
mov
pop
insl
push
cmp
mov
add
aas
cs
lock
cmp
sar
jmp
sub
jecxz
pop
xchg
aam
pop
cs
sub
xor
pushf
adc
mov
adc
shlb
add
push
add
push
mov
inc
out
and
push
xor
ss
mov
outsb
loope
xlat
add
es
in
inc
nop
mov
leave
callw
or
std
add
andb
jo
in
scas
loop
std
gs
out
out
add
xchg
mov
sub
into
dec
rolb
and
sbb
stos
ret
or
orb
mov
mov
jno
int
enter
sub
stos
loope
or
xor
mov
pop
jmp
cmpsb
stos
arpl
xchg
add
inc
outsb
movsl
mov
repz
add
sub
lret
out
popf
call
mov
js
add
dec
adc
pop
pop
jl
cmp
sub
shlb
push
mov
cs
in
test
dec
rorl
rol
insb
jl
add
sbbl
cmpsb
call
mov
mov
pop
loope
in
loopne
cmp
andb
mov
nop
repz
loopne
mov
jne
push
pop
stc
inc
arpl
add
xchg
jle
das
mov
pop
sbb
push
inc
adc
cld
add
sbb
sbb
fdivrs
xchg
push
dec
push
dec
pop
int3
add
fcompp
dec
subb
out
cmp
cmp
dec
aas
repz
lock
and
sti
xor
mov
out
js
sbb
cmpsl
jns
add
mov
imul
mov
pop
pusha
jecxz
popl
sub
imul
aad
cltd
inc
xor
mov
ds
idiv
xchg
add
in
mov
push
push
enter
jb
add
enter
xchg
inc
push
xchg
jle
jb
pop
daa
xor
add
cmp
dec
mov
mov
fldt
out
gs
call
scas
xchg
arpl
add
idivb
and
push
sahf
add
cmp
call
cmp
pop
push
cmp
or
jns
mov
xchg
popa
xchg
aaa
mov
add
jb
lcall
fwait
es
push
add
popf
and
pop
and
mov
ret
pusha
jbe
adcb
xchg
dec
add
push
test
stc
ja
add
dec
lds
push
test
mov
push
push
jb
into
inc
push
ljmp
cmp
push
jp
loopne
aad
sbb
add
cmp
mov
fwait
lock
mov
adc
aam
fildll
enter
add
das
cmpl
int3
sub
add
xchg
dec
mov
add
push
adc
jp
repnz
divl
mov
leave
cmp
hlt
lea
xchg
aas
pop
xor
pop
jl
jp
dec
js
add
adc
add
xchg
les
xchg
cmpsl
add
and
aas
cmp
jno
add
hlt
shrb
mov
repnz
add
cmp
push
jo
push
sahf
lock
fidivl
push
add
push
sbb
ret
cmpsl
lcall
jl
adc
cmp
xchg
mov
add
insl
cwtl
jecxz
and
push
add
aam
pop
ret
or
hlt
add
lods
mov
push
mov
sahf
shrl
sbb
jb
add
fnstcw
add
sbb
imul
or
in
cli
add
neg
and
push
mov
dec
mov
jge
scas
sarb
or
pushf
out
andb
add
or
cmp
addl
xchg
add
test
rcr
push
mov
stos
cmpsb
addl
in
fsub
xchg
add
hlt
lret
xlat
cmc
inc
cmpsb
jg
sarb
xor
add
cmp
adc
and
cmp
push
push
fs
dec
lahf
aad
aaa
sarl
jns
add
or
push
add
jno
mov
push
dec
test
call
sub
sub
insl
jne
jo
mov
rcll
stos
inc
aas
cltd
mov
adc
sbb
andb
pop
xchg
cmp
push
lds
jne
daa
jo
mov
inc
push
in
pop
pushl
adc
xchg
adc
xor
and
es
fadd
sub
cmpsl
add
lret
mov
popa
dec
add
cmp
jnp
pop
fdivrs
xchg
aad
dec
jp
xor
fsub
add
dec
pop
jnp
fs
add
or
icebp
subb
mov
imul
pop
add
lret
outsb
scas
es
stos
inc
testb
add
xlat
loop
addr16
pusha
loopne
lret
jae
pop
insl
dec
lods
or
dec
clc
in
dec
add
xor
lahf
add
inc
in
cmc
mov
loopne
inc
adc
pusha
jnp
repnz
out
pop
adc
add
mov
scas
push
xor
sub
and
cmpsb
mov
fstpl
add
out
int3
or
in
add
fcomps
pop
mov
mov
imul
lds
loope
in
cmp
inc
push
sahf
adc
add
xlat
cwtl
jle
fistpl
loopne
out
cmc
xor
xor
fmull
mov
aam
pushf
out
add
fadd
fdiv
pop
mov
and
jle
push
test
pop
hlt
fwait
and
add
mov
fidivrs
fistpll
popf
imul
test
push
cmp
pop
ljmp
imul
inc
jo
jge
cmp
jl
add
mov
jle
imul
add
inc
in
mov
pop
jmp
xchg
mov
adcl
and
fwait
call
dec
mov
add
inc
fstps
adc
lcall
hlt
add
fiaddl
adc
adc
add
mov
add
push
pop
mov
mov
push
repz
adc
sub
aaa
add
faddp
test
out
mov
roll
sub
push
add
lret
mov
repnz
mov
ds
add
mov
cwtl
lock
mov
cmpsb
insb
mov
and
lret
cs
add
shlb
addr16
cmp
adc
xchg
mov
cmp
int3
and
or
andb
cmpl
mov
sub
push
cmp
mov
mov
jg
rclb
loope
loopne
in
lea
inc
shrb
mov
cs
test
push
mov
fmulp
cmp
push
mov
cltd
clc
loope
and
stos
add
cli
add
outsb
add
jo
xchg
inc
cmp
pop
popa
testb
jno
add
adc
scas
loop
aas
xchg
mov
xor
add
je
mov
jmp
out
sarb
push
add
dec
jbe
sbb
nop
cwtl
into
cld
jg
adc
inc
nop
fldt
rorl
sldt
iret
cmp
mov
push
into
jg
ret
push
dec
push
andl
loopne
lock
push
mov
pop
out
dec
add
shlb
cmpsl
xchg
sbb
and
sub
mov
sub
cmp
add
sbb
mov
cmp
add
dec
jl
and
jno
lret
daa
movsb
iret
aam
lds
add
adc
and
or
sub
xchg
lock
mov
inc
jb
pop
flds
cs
shll
mov
es
or
push
or
data16
adc
clc
scas
sbb
lahf
pop
ret
sahf
xor
outsl
pop
das
pop
bound
shlb
scas
xor
mov
pushf
sub
adc
lcall
adc
je
std
aam
add
cmp
or
sub
sbb
jl
lea
in
les
sbb
flds
movsl
insl
std
mov
push
push
xchg
pop
rol
test
jns
cmpsb
jecxz
pop
std
pop
mov
xor
adc
insl
aam
jp
cli
sub
xchg
add
inc
or
lods
ljmp
push
addr16
mov
mov
aas
fwait
add
cli
pop
add
fwait
mov
inc
adc
pop
add
mul
push
or
pop
inc
sbb
imul
lock
jmp
sbb
mov
sub
cpuid
or
loopne
out
mov
add
aad
cmp
gs
mov
adc
add
loop
add
cmp
sahf
push
lret
inc
push
mov
push
add
add
iret
rol
xchg
popa
cmp
push
push
pop
negb
dec
icebp
sbb
pop
je
jb
mov
loopne
add
pop
add
cmpsl
and
js
mov
cmpsb
dec
add
sub
shlb
jl
push
xchg
aad
das
mov
out
nop
in
cld
add
or
inc
les
cmp
cmp
orb
jno
test
inc
pop
cli
or
sub
int3
and
movsl
iret
dec
jbe
mov
lret
lret
and
add
pop
mov
dec
lds
nop
add
push
out
mov
push
decb
inc
iret
mov
adc
into
mov
add
sub
add
jp
inc
lods
inc
xor
movntq
mov
dec
push
add
pop
icebp
lret
testl
std
enter
push
mov
bound
add
xchg
add
dec
das
mov
inc
out
and
test
mov
push
test
mov
and
out
mov
in
addl
jo
add
xor
push
inc
fiadds
adc
aad
or
lcall
xor
add
xchg
push
xchg
xchg
push
addb
in
ds
inc
adc
jnp
add
imul
inc
cmp
add
ret
sub
shll
or
sbb
out
jne
pop
add
cmpsb
rorb
nop
push
pop
xchg
sbb
mov
xchg
mov
or
arpl
sbb
add
jbe
push
sbbl
add
scas
mov
add
dec
shlb
pop
add
lds
pop
fcoms
mov
mov
popa
mov
add
push
ljmp
movsl
bound
mov
in
jle
fs
div
jg
lods
lock
push
je
cltd
dec
add
add
push
jp
or
lcall
icebp
and
sti
add
ja
pop
sub
cmp
pop
mov
popl
xor
hlt
adc
inc
add
add
inc
adc
mov
or
jne
push
ja
cmp
xor
pop
fwait
stc
iret
inc
add
leave
jp
xor
mov
shll
hlt
stc
add
mov
imul
adc
shlb
add
mov
addb
xchg
and
hlt
sub
out
imul
sbb
into
pop
mov
rolb
push
xchg
xchg
enter
in
aad
sbb
call
mov
and
jne
add
cld
push
lods
pop
mov
add
jl
jp
cmpsl
adc
scas
add
cli
sbb
xchg
inc
adc
cs
movsb
add
add
sbb
clc
dec
hlt
jae
mov
jp
xchg
inc
add
mov
xchg
xchg
mov
cmp
enter
push
cmp
lock
test
pop
cmp
lret
adc
mov
ucomiss
lods
shlb
sbb
int3
or
inc
or
bound
add
push
pop
ret
sbbb
imul
and
add
cmc
fcmovnb
mov
or
pop
sahf
popa
mov
cli
mov
daa
push
push
add
lods
add
test
xor
jo
add
xchg
sbbb
test
test
mov
and
pop
nop
pop
mov
int
sub
or
das
pop
sbb
jb
lock
jo
add
je
mov
arpl
stos
frstor
xchg
push
pop
mov
outsb
es
fsubl
and
xor
mov
or
adc
inc
les
push
in
add
out
add
das
sbb
push
sub
dec
sub
pop
or
xchg
movsb
add
xchg
add
xor
jns
jp
mov
inc
adc
xlat
daa
in
adc
xor
sbb
fldl
addl
mov
jmp
add
sub
jb
xor
fcmovnbe
test
in
idiv
add
rorl
mov
adc
fsubrl
clc
rol
and
jae
adc
dec
fbstp
lahf
mov
add
fidivrs
xor
call
xchg
shlb
add
mov
adcl
xor
inc
rol
mov
push
std
xlat
push
fsubs
cli
bound
popf
xor
pop
es
push
fldt
sub
popl
mov
push
mov
pop
cmp
pop
cld
jg
out
mov
pop
adc
hlt
int3
cmp
pusha
addb
mov
cli
add
jae
call
outsl
pusha
mov
pop
add
call
imul
push
es
add
lret
mov
cltd
adc
mov
jp
and
adc
push
ja
pop
test
mov
int
lods
cmpsb
xor
or
mov
ds
inc
add
jbe
fsubrp
adc
add
loopne
imul
aas
add
fistl
dec
add
sti
insl
lock
dec
push
je
xchg
jg
add
dec
mov
pop
xor
movsl
dec
pop
movsb
push
add
dec
sub
ret
mov
pop
das
dec
dec
cli
add
jae
or
sbb
out
jnp
mov
mov
pop
add
faddp
add
dec
add
xchg
in
push
dec
movsb
lods
out
adc
pop
cwtl
dec
mov
add
xchg
pop
and
add
rcr
sti
cmp
js
int
sub
jae
and
fwait
sub
mov
push
lcall
jno
and
into
sub
add
push
rcrl
int
add
mov
mov
cmp
js
repnz
aas
push
gs
sbb
stos
push
pop
pop
push
mov
jo
fildll
jno
bound
incb
xchg
jbe
sbb
loopne
daa
add
inc
mov
add
mov
rolb
lods
jmp
lret
sti
int3
mov
add
movsb
jae
je
data16
mov
xchg
roll
xchg
pop
cmp
adc
dec
in
std
xchg
push
icebp
inc
mov
into
mov
add
icebp
ds
sti
mov
inc
pop
dec
xor
out
and
xchg
dec
pusha
ret
daa
pop
add
negl
andl
xchg
out
shlb
lock
jno
inc
mov
int3
dec
pop
jb
mov
xor
adc
stos
add
mov
ss
add
incb
jne
add
nop
sub
lock
adc
jno
sub
mov
dec
stos
add
pop
mov
sbb
xchg
pushf
adc
mov
lock
orl
lahf
mov
xor
aaa
mov
mov
pop
pusha
add
push
ss
cmp
hlt
or
ds
jns
data16
ja
test
push
lea
cmpsl
rcll
dec
dec
pop
or
negl
in
mov
push
mov
push
and
jnp
mov
adc
sbb
cmpsb
and
add
jb
add
imul
popf
xor
subb
pop
in
pop
shll
clc
pop
mov
add
or
inc
outsb
cli
add
jb
mov
pop
mov
sub
fildl
mov
xor
add
cmp
test
iret
mov
or
mov
adc
daa
jp
outsb
or
ss
sbb
add
ja
jne
cmpsb
pop
cltd
test
inc
push
ret
sbb
lock
and
mov
add
jmp
sbb
loop
nop
push
pop
out
imul
sbb
mov
sbb
scas
mov
jge
add
sti
xchg
sub
repnz
pop
push
and
lea
or
mov
sub
js
movsb
cmp
rcr
inc
xchg
mov
loopne
jmp
out
jnp
pop
add
add
pop
inc
int3
dec
adc
loop
add
jmp
sub
or
orl
adc
pop
jmp
imul
test
das
add
add
mov
cld
repz
or
xchg
mov
loopne
sbb
mov
cmp
xchg
repz
add
pop
inc
addr16
mov
cmpsb
clc
shll
add
and
stos
push
and
outsb
pop
mov
fiadds
out
rolb
dec
mov
fstl
dec
cmp
add
xchg
mov
pop
or
mov
fldcw
out
shlb
bound
mov
jl
add
cmovge
add
scas
and
stos
add
imul
add
gs
mov
cltd
mov
mov
mov
pushf
rcl
sahf
xor
jns
mov
cmp
addb
pop
jecxz
inc
insl
adc
es
sbb
ja
add
or
pusha
sarb
lock
and
pop
test
cmp
nop
stos
int3
dec
xor
ljmp
adc
jbe
fimuls
loop
cmp
addl
mov
xor
mov
adc
adc
pop
loop
or
mov
push
adc
xchg
jle
xchg
addr16
lds
adc
test
pop
out
cmp
adc
xchg
mov
outsb
mov
adc
add
mov
fsub
jl
push
sbb
lcall
subb
in
in
pop
cmpsb
inc
sbb
not
mov
insl
leave
andb
or
cmp
sbb
push
push
movsb
jne
lret
sbb
and
cmp
stos
sub
jmp
mov
push
pop
test
rcll
add
stos
clc
rcll
iret
lds
dec
dec
cwtl
test
mov
lods
lret
add
mov
sbb
in
inc
inc
cltd
xor
loopne
imul
pop
es
cwtl
xor
cli
add
orl
mov
cmpl
adc
xor
or
mov
inc
hlt
iret
add
dec
lret
jbe
test
xor
outsb
jmp
imul
xchg
and
in
adc
lret
lods
lods
cld
and
push
adc
test
in
dec
adc
rclb
cld
adc
add
inc
call
push
fst
clc
test
out
inc
icebp
add
push
bound
stos
cwtl
push
in
cld
or
adc
orl
pushf
int3
lret
xor
xlat
pop
jnp
in
in
adc
ds
shrl
movlps
adc
mull
add
xor
sbb
jecxz
dec
cmc
imul
add
pushf
xor
cmc
sbb
xor
xorb
fisttps
pusha
push
add
xor
jae
out
or
or
nop
dec
scas
jmp
subb
fdiv
and
pusha
pop
adc
jecxz
push
sbb
cmpsl
shrb
in
xor
flds
in
push
add
dec
sbb
pop
daa
jb
flds
xorb
inc
in
cmpsl
dec
arpl
adc
fsubp
add
pop
lock
adc
mov
pop
out
fstpl
fwait
push
js
sbb
ljmp
jmp
es
push
arpl
pop
leave
sub
mov
or
fistps
add
dec
test
push
es
push
sarl
inc
cmpb
inc
push
hlt
stos
jge
dec
stos
jne
xchg
mov
add
jg
xchg
mov
enter
mov
cmp
call
enter
cmp
shlb
xorl
fisubl
add
inc
je
jbe
xchg
push
or
aaa
lods
add
rcrb
or
mov
insb
mov
dec
or
sub
sbb
ljmp
jno
gs
add
ljmp
push
pop
xlat
adc
add
enter
es
dec
add
add
mov
cmp
jno
cmc
lret
mov
mov
aam
sub
cmpsb
mov
push
test
cmpsb
pop
cmp
mov
add
in
mov
scas
mov
adc
sub
and
test
adc
mov
cwtl
pusha
sub
adc
cltd
clc
inc
in
subb
scas
daa
mov
inc
rcr
mull
mov
push
clc
add
daa
lcall
insb
pushf
mov
andl
outsl
mov
dec
rclb
and
add
fwait
mov
sbb
mov
and
leave
test
iret
inc
enter
ja
jae
sti
push
jl
ret
and
pop
iret
adc
inc
ljmp
bound
push
sbb
inc
ret
cwtl
lock
mov
pop
sti
hlt
mov
adc
stc
out
andl
call
add
scas
push
jmp
cmc
out
les
aas
push
or
add
sbb
cmp
adc
hlt
and
cltd
and
mov
outsb
int3
movsl
pop
jecxz
pusha
adc
dec
xchg
xchg
mov
roll
or
cmp
xlat
inc
pop
mov
orb
in
movsl
jl
mov
xor
dec
rcrb
in
add
call
pop
mov
enter
push
or
and
adc
xchg
clc
add
xchg
stos
repnz
xor
add
sub
mov
movsl
jecxz
jmp
mov
or
andb
rol
mov
sbb
popa
xchg
or
dec
mov
mov
cmp
inc
outsb
add
cs
shll
push
pushl
push
xchg
and
and
mov
aad
cld
xchg
mov
int
dec
gs
or
or
adc
sahf
mov
add
xorb
shll
cmp
testb
sti
or
test
hlt
cltd
stc
dec
xchg
push
add
leave
push
aam
add
inc
aad
add
mov
in
in
cmc
loopne
jnp
and
cmpsl
inc
inc
in
xchg
add
mov
sbb
cmp
and
aam
out
dec
xchg
inc
clc
std
dec
shlb
bound
and
loopne
movsb
aas
inc
adc
jo
mov
xchg
fsubl
fisttpll
roll
xchg
sbb
arpl
inc
in
xchg
addb
int3
dec
int3
add
add
jl
xor
jb
and
daa
sbb
push
cmp
push
pop
enter
or
dec
movsb
jecxz
lock
adc
sub
jg
icebp
add
cmp
fmul
inc
cmp
clc
lret
push
dec
mov
addl
aam
inc
imul
cwtl
push
negb
roll
sub
and
or
outsl
jo
push
js
pop
cli
leave
rclb
add
sti
fcomip
scas
pop
sub
jnp
dec
loopne
ss
inc
in
cmpsl
subl
inc
inc
cmpsl
repnz
mov
adc
dec
and
notl
mov
dec
cmp
lods
cmpsb
xchg
dec
mov
add
pop
leave
mov
scas
test
testb
ret
lods
sub
repz
ror
imul
and
inc
pop
ret
pusha
dec
dec
lock
jmp
or
addb
push
xor
scas
jge
gs
inc
movsb
xor
adc
or
fistps
sti
or
divb
gs
add
mov
cs
das
mov
lahf
in
lahf
adc
pushf
and
ja
rolb
xor
adc
repnz
out
inc
test
into
aas
push
lret
xchg
or
iret
es
test
dec
rol
lock
fisubs
jno
mov
cwtl
inc
jg
add
push
jb
inc
xlat
or
add
rclb
fnstsw
cmp
pop
lsl
and
dec
mov
pop
mov
dec
jbe
cmp
dec
sbb
sub
cmp
mov
xor
pop
adcb
pop
sub
in
nop
dec
popf
test
and
movsl
ljmp
cs
and
xor
pop
jnp
test
call
rcrl
sarb
call
mov
addb
or
push
mov
dec
outsl
je
in
shr
and
add
mov
pop
adc
test
enter
hlt
testl
mov
rorl
inc
jecxz
jae
loop
cwtl
pushf
ljmp
adc
ja
sbb
add
xor
pop
stos
loopne
cmp
push
pusha
inc
jmp
add
daa
push
lds
fldenv
push
test
outsb
pushf
push
pop
out
clc
add
and
sub
push
hlt
cwtl
or
mov
adc
and
fdivrp
add
sub
sbb
test
inc
adc
fisubs
xor
inc
lea
add
cwtl
test
aaa
js
xorb
insb
pop
insl
dec
push
inc
or
xchg
add
in
mov
lcall
xor
test
xchg
and
pop
dec
and
call
cmc
out
xor
add
into
pop
adc
mov
int
js
inc
dec
cmp
stc
add
scas
icebp
mov
pop
or
imul
adc
xchg
add
sbb
insb
sbb
int3
loop
mov
pop
add
add
les
sbb
push
dec
std
cmp
adc
jbe
int
mov
les
and
popf
cmp
pop
out
inc
push
aas
and
stos
xchg
cs
cmp
cmp
jo
arpl
sbb
int3
dec
add
and
jno
add
xchg
es
rcrb
inc
aas
enter
daa
jb
sbb
pushf
mov
in
test
out
aas
pop
cmp
inc
add
test
xchg
xor
cmp
rcrb
pop
add
pop
mov
pop
mov
mov
fs
inc
sbb
sub
cld
inc
adc
jmp
xchg
je
push
mov
aad
sub
and
pmuludq
pop
xchg
add
mov
inc
pusha
pop
and
mov
ljmp
jnp
and
jecxz
jae
mov
gs
jp
clc
inc
lahf
mov
rorb
sbb
call
dec
and
es
imul
lret
and
enter
call
ffreep
sahf
pop
adc
xor
fiadds
iret
daa
call
jl
and
cwtl
test
cmp
mov
sub
add
scas
dec
push
sbb
cmp
sahf
movsb
insl
jns
xor
cwtl
pop
xor
inc
icebp
or
movsl
and
add
mov
add
stos
mov
dec
loope
loope
testl
inc
cmpsb
mov
mov
sbb
adc
jo
or
insb
inc
xorb
sbb
iret
or
adc
add
outsl
sarl
adc
dec
popf
enter
push
pop
pop
and
call
mov
adc
mov
inc
outsb
shl
pusha
jo
jno
sbb
sbb
test
or
jns
sub
nop
adc
sbb
call
dec
inc
ljmp
sub
inc
xor
mov
mov
xorl
dec
int
adc
ja
and
enter
xchg
fwait
xor
xor
jmp
mov
lret
mov
rorb
adc
add
ljmp
sarl
adc
pop
movsb
mov
movsb
iret
cmpsb
test
push
ja
jge
pusha
inc
adc
push
xchg
jbe
add
ficoms
cmp
aad
add
lods
dec
call
push
xchg
adc
fmull
adc
dec
ret
enter
add
in
mov
pop
push
or
rcl
fadd
cwtl
adc
sub
inc
lods
nop
fldenv
dec
and
popf
addl
and
xor
pop
adc
mov
xor
dec
dec
cmp
out
cli
cmc
rol
add
cmp
xchg
add
mov
jbe
xor
es
or
scas
std
and
daa
stos
lcall
in
outsb
push
sbb
insb
pushf
sti
negb
andb
outsb
mov
mov
inc
inc
dec
int
pusha
loopne
mov
inc
xchg
movsl
sbb
adc
sbb
push
cmp
push
add
movsb
adc
mov
and
pop
add
outsl
adc
fbld
jl
and
push
call
mov
add
add
pop
pop
mov
push
or
ret
add
or
xchg
mov
push
sbb
loop
xchg
add
push
fsubrs
mov
mov
lods
ds
repnz
jbe
rolb
sbb
call
sbb
jg
out
sub
jb
aas
adcl
pop
fcmovnb
cmp
cwtl
nop
sahf
mov
and
pop
inc
int
leave
add
dec
std
ficoml
lret
scas
add
dec
fstl
or
xchg
ss
xlat
movsb
cmpsb
and
int
sub
push
pop
jl
push
mov
stos
adc
scas
shll
sub
mov
pop
addr16
lea
fs
in
dec
sbb
mov
fmull
xchg
jl
subl
sbb
and
shll
push
fsubs
not
in
lds
std
and
test
js
adcl
inc
inc
outsl
pop
pop
sbb
add
sbb
mov
and
shll
sub
add
sbb
sub
icebp
cmpsb
pop
push
pusha
pushf
dec
lea
es
jae
mov
jo
pop
cwtl
mov
andl
and
sbb
adc
dec
add
and
xor
or
mov
push
mov
push
bound
or
addl
lods
sub
out
cmp
and
call
imul
pop
pop
lock
dec
int3
sub
or
in
adc
sub
les
nop
pusha
inc
fisttpl
fidivrs
push
xor
out
mov
add
push
shlb
in
and
rorl
mov
lret
lret
push
add
and
add
pop
and
scas
fcmovnbe
add
or
loope
cld
pop
and
mov
sub
inc
inc
push
rcll
adc
rolb
lods
push
flds
outsb
add
or
pop
and
data16
es
mov
aas
test
jle
int
pop
mov
testl
push
add
xchg
xchg
adc
jp
xor
shl
cli
in
sbb
or
dec
int3
jecxz
bound
test
pushf
jge
lahf
xchg
sbb
out
jl
in
loopne
pushf
sbb
add
and
ret
sub
addb
jbe
mov
xor
arpl
dec
test
cwtl
negl
xchg
mov
sub
pop
clc
or
std
adc
cmp
or
out
dec
and
jns
adc
shl
inc
push
sbb
xchg
cmpsb
xor
push
test
add
outsb
mov
mov
test
jecxz
outsb
enter
movsl
jle
cmc
xchg
shlb
pop
push
dec
pop
jo
rolw
jo
xor
dec
mov
add
mov
and
jno
hlt
inc
inc
mov
cmp
adc
lods
cmp
push
and
xorl
bnd
adc
cmpsb
adc
and
pushf
insb
icebp
add
lcall
hlt
cmc
out
stos
lahf
mov
jg
in
inc
loopne
pop
daa
mov
enter
add
inc
dec
std
lret
gs
add
and
int3
sahf
sub
xorb
pop
movsb
push
sbb
lds
ret
jmp
xchg
movsb
rolb
int
push
sub
adc
push
xor
push
sbb
mov
inc
scas
cwtl
icebp
mov
push
inc
inc
add
out
mov
inc
pop
adc
inc
stc
sti
adc
and
es
pop
xchg
incb
or
adc
mulb
insl
leave
icebp
jnp
lds
cmc
or
xchg
mov
jns
xchg
mov
pop
xchg
and
adc
mov
xchg
pop
daa
push
pop
icebp
mov
call
add
iret
push
push
lods
add
sub
mov
cmpsb
imulb
adc
and
add
mov
sahf
insb
jecxz
add
add
leave
adc
sub
lret
pop
cld
add
mov
aam
or
les
jl
xchg
add
ds
add
or
add
and
mov
dec
in
sub
gs
or
int3
mov
roll
dec
xchg
add
push
xor
testb
jecxz
cmp
and
jns
scas
aas
cli
adc
mov
shlb
jne
mov
push
mov
out
stc
mov
add
sti
push
adc
outsl
cmpsl
or
shrb
lods
mov
and
push
inc
je
xor
mov
in
adcb
cwtl
nop
or
or
addl
loopne
push
sub
and
bound
push
adc
sbb
xchg
xchg
imul
push
sbb
add
cmpl
loope
pop
shlb
icebp
push
inc
or
cs
inc
ret
outsb
out
add
mov
or
stos
adc
adc
iret
fiadds
cmp
mov
lcall
xchg
loopne
add
xchg
bound
cmp
enter
add
lds
sti
lods
imul
add
adcb
cmpsl
add
div
mov
sahf
xchg
aad
adc
jg
fmuls
ret
bound
clc
dec
shrb
add
push
fbld
pushf
add
mov
sub
mov
in
mov
mov
orb
push
dec
add
jmp
imul
nop
pop
pusha
xchg
shr
mov
bound
sbb
push
add
es
cld
sbbb
pop
popf
cmp
aad
add
fsubrs
adc
jns
add
xchg
sbb
jo
cmp
clc
stc
inc
pop
mov
addr16
add
xor
movsb
add
js
sti
xor
add
mov
and
out
pop
rolb
and
pop
outsl
ljmp
add
mov
shlb
adc
cmpsb
jp
pusha
add
add
push
popf
pop
add
lock
xchg
mov
dec
shlb
js
add
das
out
loope
fs
pop
xor
fadd
dec
sub
add
or
add
and
push
push
cmpb
add
clc
and
pop
inc
leave
add
je
cmpsl
sbb
mov
mov
mov
push
push
movl
inc
push
je
xor
jbe
and
jno
push
add
aas
add
sub
jae
fadds
sub
and
inc
inc
cli
and
cmp
rcrb
cs
rcrb
sbb
or
aas
int
adc
testb
and
cmp
xchg
ret
fs
pop
mov
insl
add
fdivrs
pop
xchg
popf
syscall
cld
int
push
cltd
iret
pop
outsl
push
shrb
daa
xor
lods
push
loopne
ret
int3
pusha
jno
xchg
call
outsb
dec
inc
mov
dec
ret
sahf
pusha
inc
scas
lret
lcall
rorb
clc
int
push
dec
add
cmp
enter
pop
popf
inc
add
filds
add
jecxz
fcos
das
repz
insb
dec
shl
cmp
jo
mov
outsl
push
mov
adc
push
and
enter
insl
push
pop
dec
sbb
mov
add
rorb
cli
je
mov
or
in
inc
dec
or
sub
fisubrl
outsl
mov
lcall
and
mov
enter
or
les
aad
jb
rorl
and
orb
aas
sub
push
sbb
in
inc
xor
loope
xlat
addb
adc
mov
test
jae
and
and
adc
loope
mov
sbb
inc
add
das
cs
adcl
mov
sub
clc
mov
nop
mov
ret
push
repnz
mov
mov
push
aam
imull
popf
dec
inc
in
and
mov
ret
push
clc
das
mov
inc
sbb
mov
adc
xor
jl
and
pop
push
xor
and
mov
jno
mov
lret
push
adc
cmpsb
adc
mov
js
dec
cwtl
insl
mov
dec
jl
cli
pop
es
sbb
shlb
dec
enter
shll
psubusb
test
stos
and
and
mov
in
fwait
icebp
add
xor
imul
sub
hlt
das
sbb
xor
pop
aam
int
pushf
loopne
imul
mov
lret
hlt
loopne
pushf
dec
cmp
mov
jo
roll
in
out
and
xchg
pushf
pop
lea
inc
bound
hlt
jb
shlb
repnz
and
outsb
bound
clc
jbe
clc
or
xchg
or
faddl
das
aam
mov
enter
aad
icebp
aas
and
and
les
adc
test
mov
cmpsb
popa
add
and
pop
add
loop
xchg
mov
call
or
call
pop
push
or
mov
and
xchg
adc
add
mov
movaps
into
fsubl
or
mov
je
les
add
and
cmc
xor
dec
mov
jnp
and
mov
orb
add
testb
int
and
es
push
adc
fdivrl
loopne
xchg
inc
mov
cmpl
bound
test
xchg
inc
outsb
dec
lods
dec
rcrb
aaa
jecxz
in
icebp
bnd
adc
fmull
clc
pop
and
lods
sti
pusha
mov
mov
xchg
rcrl
add
adc
popf
sub
movb
sbb
dec
adc
repnz
mov
test
bound
stc
in
add
incl
jb
inc
add
or
hlt
jl
pop
outsl
and
inc
and
inc
fcmovbe
call
lcall
insb
das
cmc
mov
mov
add
mov
ss
repnz
js
dec
jnp
push
das
fstp
nop
int3
je
add
adc
icebp
fbstp
fldl
add
and
aad
xchg
dec
pop
adc
add
and
xor
fstl
pop
or
mov
mov
add
pop
ret
sub
stc
push
shlb
add
push
inc
int3
les
fdivrp
mov
repz
int3
sub
inc
adc
and
add
out
jp
push
push
jo
push
and
add
clc
jmp
dec
or
add
hlt
mov
add
data16
mov
or
ljmp
jecxz
pop
pop
lcall
lods
and
out
and
sub
push
sub
xchg
subb
push
add
fwait
inc
jns
and
stos
adc
add
jno
test
lret
mov
sbb
clc
adc
rorl
inc
jnp
outsl
add
adc
fninit
push
lcall
pushf
jno
sbb
cmc
mov
cmp
xchg
xchg
dec
lds
pop
adc
fcoml
cltd
push
leave
add
xchg
test
dec
mov
in
aam
outsl
cld
mov
repnz
cli
push
adc
lods
inc
and
add
lock
ret
popf
cmc
mov
arpl
sti
push
mov
pop
push
push
decl
dec
jle
cmp
aaa
orb
cmp
int
test
inc
je
lods
jle
insb
ror
and
add
sub
outsb
cmp
test
sbb
movsb
add
adc
stc
push
test
sbb
sub
jg
sub
rcrb
jbe
pop
jo
or
inc
sarb
aam
es
push
add
das
lcall
and
add
add
fldt
jle
test
add
lods
sub
inc
pcmpeqw
mov
popf
add
and
call
mov
jns
add
or
mov
fprem
and
xchg
add
inc
mov
bound
enter
scas
and
int3
lock
sub
pushf
add
sbb
jecxz
pop
rclb
cld
in
adc
lcall
pop
scas
inc
pushf
gs
mov
inc
cmove
clc
xor
fwait
sarb
add
inc
ret
jl
call
cmpsl
int
mov
outsl
push
sbb
insb
lret
loopne
ret
mov
cmp
movsl
scas
add
clc
int
pop
loop
pusha
inc
mov
and
xchg
call
mov
mov
test
sbb
cmpb
mov
cmp
push
sub
adc
popf
sbb
out
clc
enter
mov
rolb
pop
lock
adc
xor
cmp
xorb
and
push
mov
cld
repnz
hlt
dec
sti
enter
or
jbe
lods
xorb
dec
inc
mov
adc
aam
jno
lahf
adc
add
mov
xchg
xor
xchg
sub
inc
rorb
mov
repnz
aas
push
bound
shll
pop
in
cmpsl
mov
fimuls
shl
fs
push
pop
xchg
cmp
in
add
add
mov
shrb
movsl
inc
pop
shll
xchg
lret
lock
lock
push
jno
sub
add
test
loopne
lods
or
fcmovbe
adcb
dec
in
orb
mov
add
mov
lea
lcall
inc
adc
add
pop
test
push
push
ljmp
lock
int
sub
outsb
into
add
ljmp
rolb
popa
inc
mov
cwtl
sub
ja
fsub
out
xor
push
push
add
jbe
mov
bound
bound
mov
cli
add
or
add
cltd
mov
xchg
das
gs
pushf
pop
out
add
pop
les
mov
xchg
add
movsl
lret
sub
cli
inc
fmul
jae
cmp
enter
mov
fdivp
mov
in
ret
inc
lock
call
cwtl
scas
iret
bound
sbbl
and
add
cmc
pop
enter
adc
push
bound
nop
mov
mov
add
sbb
lock
cmp
jecxz
outsl
shll
lret
sahf
pop
enter
clc
dec
or
adc
daa
shrb
popf
adc
add
jae
orb
pop
sub
cmp
mov
andb
or
iret
mov
fstl
test
add
inc
in
movsb
cmp
pop
popa
hlt
xor
repnz
inc
inc
lcall
ret
jmp
adc
mov
popa
pop
outsb
add
xchg
in
pop
cmp
call
mov
add
into
aam
popf
aas
out
and
cmp
xchg
jl
add
sub
and
jnp
add
enter
or
jmp
ret
jbe
es
inc
xor
bound
inc
add
add
adc
sarb
adc
pusha
pop
adc
in
femms
test
jp
dec
add
push
xchg
or
inc
cmc
je
dec
mov
aam
filds
mov
and
in
xorb
idivb
xlat
and
negl
pop
scas
jae
cmp
dec
mov
cmpsb
dec
dec
jae
adc
mov
add
mov
mov
add
test
mov
mov
lds
inc
nop
add
sbb
iret
stc
mov
pop
out
mov
fcomip
pop
push
mov
mov
dec
mov
pop
mov
rclb
je
es
aas
cmp
lahf
rclb
add
add
sbb
insl
sub
mov
add
es
push
adc
xlat
mov
xor
pop
fs
fadd
inc
js
or
mov
cmp
sbb
aam
test
adc
xor
cwtl
js
addr16
ret
rcrb
loop
clc
add
mov
xlat
add
xor
mov
sub
and
imul
xchg
cmp
mov
iret
dec
cs
fwait
bound
and
and
jbe
jecxz
or
xor
outsl
mov
xchg
shlb
jp
arpl
sbb
shll
lret
out
xor
enter
add
test
add
cmpsb
pushf
pop
dec
daa
enter
nop
xchg
js
int
cs
mov
bound
add
mov
movsb
add
jne
xor
insl
inc
fidivrs
adc
out
xor
xorb
and
jae
pop
out
fbstp
fstenv
add
into
pop
in
data16
dec
and
in
pop
out
inc
mov
addb
and
push
js
cli
add
das
enter
rcrl
mov
mov
mov
subb
cmp
scas
pop
sub
mov
add
mov
jne
gs
outsb
mov
scas
loopne
leave
pusha
int
cmp
es
insl
enter
sbb
ficomps
sbb
and
cwtl
cmp
mov
push
xchg
std
cwtl
and
add
bound
push
mov
sub
pusha
scas
add
adc
xchg
add
popa
test
cmp
pop
negl
mov
lret
and
add
and
pop
add
pusha
ds
loope
fistpl
or
lods
std
jae
or
repz
test
mov
adc
arpl
dec
shll
es
les
and
in
test
pushf
mov
and
xor
xor
pusha
pop
adc
sub
in
xlat
pusha
cmp
dec
cmc
nop
mov
pop
pop
push
mov
jg
inc
push
clc
hlt
xor
jo
cmc
add
fidivrs
rcrl
cmp
mov
out
inc
add
stos
pushf
in
cmp
mov
add
out
or
pop
scas
or
sub
subb
xor
rcrb
mov
push
ja
pop
add
mov
inc
push
lahf
jl
pusha
jle
imul
cwtl
or
outsb
loop
add
mov
sbb
fmuls
mov
rolb
in
add
hlt
sub
or
add
sub
xchg
add
jno
push
and
jbe
pop
in
push
ret
movsl
ret
out
in
mull
jae,pt
sbbl
fisttpl
mov
and
xlat
push
mov
jno
inc
sbb
test
movsb
mov
leave
aam
out
sbb
lds
sub
and
repnz
je,pt
mov
add
in
movb
stc
push
adc
test
xchg
int3
adc
jge
adc
shll
pop
or
push
insl
out
pop
test
out
jo
sbb
call
in
mov
test
push
fiadds
xchg
jmp
sbb
test
jnp
sahf
push
aaa
ret
lock
or
in
add
fdivrs
xchg
mov
xchg
pusha
inc
lds
add
popa
nop
cmp
jnp
je
xlat
jns
sbb
add
int3
clc
inc
test
inc
and
adc
sbb
inc
js
nop
xor
pop
sarl
or
sti
les
mov
test
dec
mov
inc
out
push
dec
inc
jnp
enter
add
sbb
movsl
das
sarb
adc
lods
roll
orl
fdivs
and
jge
fdivp
jo
pop
lods
and
ja
adc
idiv
pusha
xor
rclb
add
mov
sarl
clc
enter
out
lahf
mov
inc
out
fisubl
adc
test
rorb
jno
mov
stos
add
ret
cmp
rorl
sarb
pop
add
lock
cmp
push
adc
stc
les
mov
add
cmp
mov
add
popf
and
adc
inc
test
mov
add
aad
lds
hlt
add
rcll
mov
push
loopne
test
inc
cmp
jns
inc
and
xchg
xchg
sbbb
adc
bound
and
and
ljmp
cmp
add
incb
lcall
mov
mov
notb
int3
shr
cs
std
enter
xor
ss
sbb
xor
orl
pusha
call
push
gs
bound
mov
add
mov
dec
pop
movsl
rol
sbb
sar
jl
mov
mov
lock
int
jecxz
out
cld
mov
sbb
xor
sarb
mov
mov
xor
and
psraw
ds
loopne
mov
and
imulb
call
xor
mov
mov
js
push
aaa
shlb
test
bound
nop
pusha
in
jno
or
push
mov
insb
mov
in
cmc
ljmp
rolb
and
pushf
dec
mulb
fwait
lds
scas
add
repnz
pop
cli
mov
dec
adc
jmp
push
aam
sbb
inc
inc
or
jb
adc
loopne
std
aam
push
scas
std
int
pop
mov
mov
push
mov
mov
ret
sbb
xchg
into
mov
xchg
adc
adc
sqrtps
int3
rcr
mov
jge
repz
mov
xchg
add
inc
out
and
dec
sub
jmp
roll
inc
aam
jns
mov
hlt
lods
scas
add
pop
loopne
push
shlb
rclb
add
inc
movsb
imull
cld
push
and
es
add
and
inc
incb
adc
jbe
xchg
shll
sbb
adc
add
inc
sar
inc
cmpxchg
xchg
sbb
shr
xchg
loope
xor
aaa
xchg
add
or
cmp
shr
add
xor
ficoms
push
pop
mov
fucomp
int
movsl
mov
addb
and
cmp
out
cmpsb
add
pushf
enter
and
push
jle,pt
lock
push
push
mov
outsl
jbe
push
mov
fldenv
cld
rorb
mov
outsb
test
pop
xchg
aaa
out
cmp
mov
and
xor
lcall
cwtl
adc
inc
add
mov
shlb
adc
ds
push
or
ss
addr16
mov
jmp
sub
popf
cmc
adc
out
inc
xlat
sar
dec
adc
jmp
lret
rcl
inc
into
pusha
add
test
int
cli
loop
inc
mov
sub
dec
inc
orb
jbe
xor
vpaddw
add
dec
out
sti
das
data16
cmp
ja
xchg
inc
lahf
movsb
outsl
add
std
ret
mov
xchg
int
popl
cmp
push
add
pusha
pop
fsts
repnz
mov
outsb
jae
fdivrl
jmp
pop
mov
fwait
add
je
cmpsb
jnp
xor
inc
imulb
sub
cmp
ret
std
and
cs
mov
jo
push
inc
pushf
xor
add
pop
pushf
out
inc
push
pop
in
loopne
push
insb
and
loope
das
aad
sub
dec
sarl
or
mov
in
pop
ret
and
shll
fdivr
popf
adc
xor
adc
fldenv
add
sub
cmp
pop
add
add
and
les
add
xchg
xor
inc
or
popa
icebp
mov
pop
add
ror
std
lods
rolb
and
insb
loopne
jo
and
dec
fnstenv
pop
mov
xor
out
sub
or
in
xchg
push
or
movb
mov
repz
adc
sub
jl
add
dec
and
pop
aaa
sbb
add
outsb
mov
mov
hlt
push
iret
or
jmp
xor
push
add
popf
xchg
jmp
sub
negl
jle
inc
add
mov
pop
add
inc
out
mov
in
iret
inc
test
mov
adc
dec
adc
xchg
jae
psrld
cld
in
adc
inc
std
in
in
jecxz
push
cmp
pop
mov
and
xor
xor
xchg
loop
cmpl
mov
and
addr16
in
je
adc
pushf
enter
jo
addl
dec
mov
sub
inc
inc
daa
pop
nop
cld
jnp
add
or
and
repnz
sub
loopne
enter
mov
push
inc
sbb
inc
ret
mov
pop
andb
scas
clc
add
inc
shll
inc
in
test
dec
add
dec
pusha
push
jo
stos
int3
mov
inc
out
sti
push
add
mov
fbld
adc
mov
and
xor
push
dec
outsb
bound
and
or
inc
cmp
out
sub
dec
add
cli
aam
sbb
xchg
dec
sbb
int3
fmuls
fs
sub
les
dec
insl
adc
adc
in
add
pop
les
mov
cmp
push
cmpsb
and
dec
cwtl
fsub
fistps
test
cwtl
pop
jns
mov
xchg
pop
jle
sahf
pusha
std
push
andb
nop
pusha
dec
insb
add
mov
mov
nop
cli
ret
loopne
shll
add
loop
pop
insb
inc
movsl
sub
gs
shlb
xor
cmp
mov
imul
test
bound
add
jp
mov
mov
push
add
add
arpl
popf
adc
es
add
sbb
inc
inc
push
js
les
rcll
lcall
in
or
iret
dec
bound
lret
orl
test
pop
daa
pop
cmpsb
nop
shlb
mov
or
rclb
inc
dec
pminub
or
lret
repnz
popf
add
xor
push
les
mov
xor
sub
dec
int
das
jo
dec
enter
mov
mov
sub
jo
push
in
arpl
adc
daa
shrb
adc
pop
mov
and
orb
enter
jns
cmp
test
add
scas
lds
movl
clc
add
mov
into
in
daa
push
arpl
sbb
dec
add
adc
jo
shlb
in
mov
mov
outsl
ja
scas
insl
mov
adc
jnp
cmp
add
pop
push
mov
mov
xor
pop
aam
dec
push
mov
add
imul
sub
orl
pop
mov
fnsave
mov
aas
jl
dec
leave
xorl
in
jnp
add
pop
stos
insl
push
add
cli
int3
das
imul
or
mov
shl
push
pop
aad
in
inc
xorl
ljmp
jae
jo
push
popa
negl
in
xor
push
adc
pop
sbb
insb
xor
xor
push
add
cmpsl
adc
gs
mov
adc
stos
sbb
lods
shll
test
adc
std
mov
mov
mov
xor
push
or
gs
cmp
inc
popf
daa
pop
lock
mov
xchg
inc
and
xor
inc
mov
jp
popf
nop
adc
dec
add
sbb
cmp
in
push
repnz
pop
inc
pop
jl
rorb
jl
inc
das
mov
mov
lock
das
jae
into
dec
add
lcall
sbb
add
xchg
mov
cmp
add
pop
pop
sbb
js
mov
and
push
fwait
pop
adc
sbb
roll
ss
pushl
sbb
push
or
jecxz
adc
mov
inc
int3
pop
inc
and
jle
imul
and
and
test
in
cmp
xor
aas
mov
mov
push
dec
dec
enter
jle
mov
test
in
outsb
add
pop
xchg
inc
mov
push
pop
xchg
insb
adc
cwtl
in
adcl
sub
dec
sub
sub
fisttpll
dec
pusha
into
xchg
xor
les
loopne
dec
sub
jnp
enter
inc
fiadds
adc
mov
dec
faddl
and
jmp
adc
fisttpll
xlat
sbb
dec
fadds
dec
rcl
sub
int
inc
rolb
adc
add
mov
adc
enter
orb
push
cwtl
out
add
test
gs
pop
inc
fnstcw
fwait
loopne
adc
jecxz
iret
std
es
add
jbe
xor
push
int
and
mov
dec
subl
sbb
pop
add
mov
into
add
and
adc
cmp
xchg
out
add
test
add
and
pop
call
daa
rolb
pushf
add
pushf
dec
pop
pop
lahf
rcrb
add
sub
test
push
orl
mov
cs
cmp
adc
stos
dec
in
cmp
or
dec
dec
divb
and
cmc
mov
ret
cld
aam
ficompl
das
and
pop
pop
and
mov
xor
jae
xor
mov
das
inc
dec
shll
xor
sbb
xchg
dec
mov
sub
idivl
mov
push
jle
in
ds
xchg
sub
mov
pop
add
xor
adc
add
les
sbb
sahf
sub
pop
clc
or
add
enter
add
sarl
hlt
xchg
add
push
or
shlb
push
cltd
or
mov
repnz
lret
or
aam
pop
cmc
mov
and
xor
out
in
repnz
pop
pop
mov
push
jge
sub
mov
or
mov
lret
add
lea
icebp
sbb
cmpsb
add
cltd
dec
adc
push
push
aam
int3
adc
cs
jo
movsb
xor
pusha
add
pop
lods
add
leave
push
mov
cmpb
lea
pop
dec
jne
xchg
adc
in
adc
or
ret
faddl
mov
flds
daa
mov
xor
jl
and
pop
jnp
mov
cmp
bt
test
idiv
test
insb
add
jmp
mov
push
outsb
div
sbb
roll
mov
jb
insl
daa
xor
mov
cmp
xchg
shl
mov
sub
call
push
push
dec
cmova
nop
sub
dec
rolb
in
cld
addb
and
add
inc
xor
sbb
or
push
es
pop
inc
in
lods
cli
cmpsl
sub
inc
sbb
xchg
jbe
lea
push
mov
xor
xchg
test
js
or
push
cmp
add
adc
cwtl
xchg
stc
add
pop
scas
fs
pop
shll
int
repnz
int3
aam
mov
cmp
and
stos
push
in
idivb
out
das
xchg
cmp
xchg
or
rclb
gs
sarb
mov
jmp
or
out
inc
push
cmc
cmp
xchg
pop
sbb
scas
sbb
nop
mov
pop
repnz
pop
loope
clc
jle
jnp
jne
xor
nop
add
push
sub
adc
sub
mov
add
sbb
mov
mov
cwtl
mov
mov
ljmp
out
mov
xor
pop
pop
pusha
cmp
inc
inc
jl
jo
xchg
jb
add
stc
cmp
cmpb
xchg
inc
jbe
mov
sahf
mov
cmpsb
mov
add
int3
mov
add
add
inc
inc
hlt
das
adc
cltd
mov
enter
aad
mov
adc
add
int
mov
pop
iret
mov
daa
sti
test
or
dec
mov
in
add
adc
and
cli
mov
pop
sti
pop
enter
adc
pop
sbb
movsb
adcl
add
scas
push
add
xor
add
aam
push
gs
fwait
popa
or
dec
int3
rcll
dec
pop
inc
xor
test
sti
popf
adc
lock
sar
in
out
mov
add
ljmp
divl
sbb
inc
pop
add
cli
aas
clc
or
jle
mov
jmp
mov
sbb
and
cld
ret
nop
add
lcall
adc
sub
movsb
and
mov
pusha
add
xchg
jle
es
and
loop
and
push
in
add
fwait
leave
sbbb
and
dec
adc
icebp
adc
divl
xchg
dec
jbe
fs
mov
inc
push
inc
into
pop
pop
cmovs
aam
cli
mov
out
int3
lock
in
dec
cmc
sbbb
mov
sbb
mov
and
mov
or
outsb
sahf
jp
mov
movsb
addb
adc
adc
sbbb
or
adc
sbb
and
add
xor
mov
add
inc
mov
xor
inc
or
dec
jmp
sub
lods
pop
loope
xchg
or
std
xor
in
mov
out
subb
flds
aad
xorb
adc
adc
and
pusha
mov
data16
sbb
jge
or
add
out
divl
mov
sub
cmp
incb
jl
cld
cmp
cmp
add
adc
pop
insl
inc
mov
mov
add
add
test
mov
sub
mov
loop
adc
xchg
ret
inc
out
loope
lahf
lock
xchg
movsl
loopne
add
mov
les
add
addr16
mov
fildll
shl
cmp
mov
lock
out
add
ret
xchg
lret
mov
cmp
fimuls
repz
push
push
mov
sbb
adc
pop
je
cwtl
lds
mov
xchg
xor
mov
mov
add
mov
lods
das
and
cld
dec
mov
and
mov
insb
add
ror
rcrl
xchg
mov
lcall
add
test
hlt
jno
andb
movsb
add
dec
add
int
fdivrs
or
xchg
mov
out
push
sbb
add
inc
mov
icebp
dec
in
add
push
mov
adc
popa
jl
cmc
adc
mov
mov
daa
xchg
dec
aas
arpl
add
ss
lcall
pushf
add
test
orb
fwait
push
add
add
ljmp
aas
mov
push
insb
mov
adc
adc
cwtl
lock
mov
sub
and
mov
sbb
and
add
bound
lret
out
adc
xor
pop
add
pop
mov
mov
stos
jo
ret
adc
mov
pop
hlt
xor
sub
dec
fs
or
dec
adc
push
adc
fdivl
je
cmp
rorl
lock
push
jo
enter
out
cmpsb
jl
shlb
lods
add
and
push
and
add
and
rolb
or
fidivrs
pop
lahf
call
dec
mov
push
lea
sbb
add
mov
add
xor
push
sub
cmc
inc
xor
pop
jne
cmp
test
add
adcl
outsb
loop
pop
mov
pop
lods
std
dec
clc
loope
pushf
daa
dec
mov
gs
xchg
jmp
test
dec
add
int3
mov
mov
jbe
inc
es
push
add
dec
add
nop
cmc
add
lcall
outsl
loopne
sbb
push
mov
cmp
mov
mov
cmp
sbb
and
add
pushf
mov
lret
cwtl
shrb
nop
lahf
and
add
jmp
push
popl
sbb
jmp
or
test
mov
arpl
in
jp
or
jo
push
push
inc
pop
xchg
dec
cld
push
pop
mov
out
inc
clts
jecxz
xchg
into
and
mov
add
leave
xchg
stc
loopne
pop
daa
in
not
lock
fwait
mov
xor
and
push
inc
or
and
sub
les
vcmpsd
jg
sahf
int
test
cmp
cwtl
outsl
pop
mov
dec
pop
sbb
je
adc
xor
mov
or
shrb
adcb
add
cltd
out
call
fildl
andps
add
scas
jne
in
in
add
fiaddl
data16
pop
aaa
je
jp
push
dec
ljmp
add
inc
in
lock
cmp
popf
cltd
sahf
pushf
or
xchg
aas
push
in
ljmp
pop
dec
int3
mov
jl
mov
pop
adc
xchg
jecxz
ret
js
rolb
rdmsr
cmpsb
ja
jge
mov
je
xor
push
scas
inc
adc
jmp
xchg
lock
add
stc
hlt
inc
gs
sub
ret
mov
das
fcomps
outsl
pop
or
enter
clc
rcrb
popf
es
mov
add
mov
out
fwait
sbb
popf
das
sahf
push
js
addr16
push
enter
js
pop
adc
clc
mov
sub
inc
xor
rorb
out
nop
clc
bound
pusha
fwait
in
jne
add
lods
ds
xchg
test
rclb
repnz
rcrb
dec
out
jecxz
add
fdivrs
add
cltd
push
push
lock
lock
addl
and
stos
cmp
xor
add
faddl
jne
cwtl
inc
mov
or
add
push
adc
and
xor
add
rolb
andb
dec
dec
lret
divb
adc
mov
rcrb
sbb
mov
xor
and
push
mov
ficoml
adc
adc
fidivl
cmp
add
lock
fsubr
cmp
mov
sub
mov
popf
push
adc
xchg
pop
jle
pusha
mov
js
sub
and
das
mov
daa
in
cmpsl
xor
ret
push
mov
jne
xor
fwait
mov
fadd
add
jecxz
xor
mov
adc
push
push
xor
add
or
mov
mov
mov
add
sbb
cltd
jecxz
imul
add
cmp
nop
xor
imul
add
in
sbb
data16
inc
push
movsl
cmp
or
int
cmp
or
xchg
loop
jae
adc
negb
or
cmp
cwtl
cmp
pop
xchg
sbb
fdivs
iret
pop
pop
and
cld
xor
lods
cmp
popf
arpl
inc
xlat
pop
and
add
rolb
xor
scas
fxch
mov
mov
leave
sarb
xlat
and
movsl
add
mov
add
lahf
dec
dec
pop
aas
loop
mov
dec
scas
push
jmp
xchg
mov
add
popa
jg
add
xor
sub
bound
pop
mov
pop
jl
std
sbbb
pcmpeqb
adc
loopne
mov
jno
inc
cmpsb
add
mov
adc
ret
insb
and
mov
add
mov
addb
mov
mov
in
jne
pusha
arpl
adc
add
out
movsb
cmp
ds
sub
dec
xchg
bound
pop
jo
xor
cli
int3
fwait
sti
sub
out
adc
ret
adc
in
mov
shrb
xlat
fbld
stc
adc
and
jnp
add
xchg
mov
shll
and
out
mov
in
arpl
xor
dec
adc
add
mov
mov
shlb
mov
xchg
add
jns
dec
jnp
out
mov
in
sarl
or
dec
data16
fldl
stos
add
int
xor
lcall
sub
sarb
bnd
mov
inc
icebp
sbb
adc
popf
les
rcrb
adc
mov
inc
addr16
jmp
ds
fists
out
shrb
cmp
fldt
dec
dec
inc
xorl
int3
loop
pop
loopne
incb
mov
adc
cmp
dec
out
sti
movsb
sub
add
leave
xchg
test
dec
es
mov
fsubr
inc
es
add
dec
enter
inc
inc
add
push
sub
xchg
sub
or
jo
add
inc
push
fidivrs
push
xchg
cmp
adc
adc
arpl
add
push
mov
sbb
add
nop
dec
mov
cmpsb
in
dec
jnp
out
sbb
enter
ljmp
pop
jno
repz
std
fld
fwait
pop
loopne
adc
aaa
xchg
leave
cmp
mov
cmp
xchg
mov
adc
aam
cmc
add
xor
jmp
pop
pop
and
cs
sbb
mov
pushf
aam
imul
lds
leave
xor
or
mov
push
dec
add
inc
sti
js
shrl
push
ljmp
cmp
sbb
add
in
int
cmpsl
or
push
cmp
push
into
mov
mov
lock
jle
adc
jne
dec
add
sbb
enter
dec
sti
dec
stos
mov
scas
shl
xchg
xor
cmp
jmp
pop
add
lock
push
lahf
in
or
inc
int
lods
pop
cmpb
sbb
or
jmp
add
sbb
clc
pop
ja
cld
scas
add
push
es
sub
xor
mov
mov
cmp
pop
test
bound
loopne
xor
pop
leave
cmp
scas
das
ret
pop
sbb
arpl
jp
ret
push
mov
ss
mov
adc
inc
incl
jb
mov
rcrl
xor
add
inc
sub
cmp
jo
or
out
jecxz
sbb
push
out
sub
jg
cmp
xchg
xchg
pushf
pop
mov
in
in
sbb
jns
jae
repnz
cwtl
stc
aam
adc
rorb
pop
jne
lahf
repz
sbb
mov
int
fidivrl
iret
add
imul
leave
or
xchg
xor
mov
and
or
cmc
or
in
pop
inc
loopne
push
mov
pop
shrb
mov
insl
lcall
mov
push
push
outsb
out
dec
out
clc
ret
loopne
int3
push
adc
cwtl
add
hlt
cmp
push
addl
shlb
enter
xor
sub
stc
fistpl
sarb
or
mov
loopne
jge
outsl
sbbb
aad
add
dec
cwtl
call
sbb
insb
pusha
shlb
mov
push
push
enter
shlb
xchg
push
mov
adcb
xchg
sbbb
lea
enter
les
sbbb
add
dec
cmp
popa
movb
nop
inc
add
mov
loop
xchg
cld
add
push
mov
enter
pop
icebp
es
out
sbbl
ljmp
dec
roll
rolb
adc
push
lds
mov
incb
ftst
insb
mov
out
rcrl
fdivs
dec
adc
jae
out
sbb
push
ffreep
test
aam
outsl
push
stos
imul
mov
out
fstps
leave
add
jg,pn
int
je
mov
dec
pusha
fsts
add
xor
xor
nopl
cmp
cmp
pusha
jmp
dec
jne
add
cmpps
push
cwtl
test
push
clc
sbb
loopne
jp
jo
xor
loop
push
movl
add
or
data16
cltd
jne,pt
adc
cs
or
sbb
iret
add
push
inc
std
add
add
adc
sub
leave
pop
iret
add
jbe
mov
rorb
mov
lock
aas
jne
xlat
add
jl,pt
cltd
adc
xor
data16
test
xor
add
dec
or
inc
mov
mov
fwait
icebp
in
xor
or
insl
filds
xchg
jo
inc
ljmp
inc
je
or
xor
sub
inc
dec
daa
stc
jnp
fcmovu
ret
xlat
test
rorb
popa
das
add
imul
arpl
dec
notb
xor
mov
js
rclb
aam
notl
and
mov
dec
lock
jns
int3
pusha
add
lea
jne
movsl
adc
pop
testl
mov
add
sbb
or
sbb
mov
add
dec
fld
add
lock
cld
add
leave
mov
inc
and
mov
sub
pop
out
icebp
push
xor
mov
mov
test
mov
push
cmp
test
stos
inc
jp
push
cli
jl
sub
add
dec
stc
imul
add
jnp
xchg
push
popa
mov
sub
xor
int
add
lret
dec
sbbl
inc
in
cmc
rorb
je
ja
in
jno
sbb
push
loopne
adc
mov
stos
dec
xor
loopne
add
or
mov
std
or
loopne
clc
sbb
and
jnp
or
in
push
mov
je
mov
mov
push
popa
mov
push
mov
lahf
shrb
dec
and
cmp
ljmp
fmull
push
mov
ret
jmp
push
xor
loop
mov
dec
sub
dec
mov
int3
add
loop
popa
loope
lods
fdivrl
add
and
pop
sarl
mov
xchg
lcall
add
push
outsl
imul
sbb
cmp
neg
int
mov
xchg
or
xor
inc
int
pop
xchg
es
push
add
leave
or
xor
adc
xchg
addl
fidivrl
cmpsb
add
sbb
inc
faddl
std
inc
dec
inc
imulb
insl
inc
push
sbb
mov
lret
das
adc
out
nop
cmc
mov
enter
cmp
inc
loopne
arpl
mov
dec
mov
pushf
cmp
mov
enter
sahf
adc
dec
and
mov
sti
in
test
jmp
mov
push
andb
mov
outsb
adc
bound
fists
adc
std
loope
mov
enter
jnp
lock
rclb
sbb
mov
andl
pushf
popl
rorb
mov
hlt
pop
fiadds
push
les
xchg
mov
push
fcmovne
cmp
test
xor
lock
sbb
mov
xchg
push
adc
mov
scas
andl
clc
movl
mov
push
cmpl
stc
xlat
sbbb
jb
sbb
rolb
nop
cmpsb
ljmp
mov
fbstp
mov
dec
sub
cmp
xchg
das
icebp
push
adc
sbb
add
mov
mov
inc
rclb
push
inc
hlt
sbb
loope
andb
je
pop
or
and
xor
out
mov
lahf
test
xor
push
loop
dec
jno
pmaddwd
xchg
dec
cmp
repnz
xor
cmpsl
add
nop
sarb
add
test
pop
inc
hlt
sbb
ljmp
jno
out
dec
andb
outsb
mov
popf
push
stos
mov
dec
add
lds
sahf
arpl
fnstenv
nop
mov
shrl
pop
push
loopne
cmpsb
jle
xor
adc
hlt
xchg
add
inc
mov
les
or
mov
and
notl
mov
movb
push
loop
lret
mov
data16
xor
add
push
mov
push
rorb
mov
sti
add
ja
data16
push
sub
rorb
adc
pushl
int3
push
and
xor
add
js
movsl
push
and
mov
mov
add
cmp
clc
cld
xor
rorl
xor
add
mov
push
insl
sbb
push
pop
cmc
xor
loopne
lds
or
cmp
inc
sbb
inc
inc
aad
xor
dec
mov
cmp
mov
mov
xchg
push
rorl
out
mov
push
in
aam
or
popa
lods
mov
sbb
mov
mov
jns
xchg
lret
pop
pop
cld
int
pop
sbb
mov
inc
loope
in
aas
jmp
or
adc
xor
or
andb
push
imul
shrb
xchg
into
jno
cmp
sub
dec
imul
or
xchg
repz
mov
jno
leave
sbb
add
pusha
pop
repz
pop
push
sub
data16
add
mov
stc
jg
add
mov
mov
popl
negb
call
xchg
sub
inc
call
imul
add
add
cmp
scas
sbb
imul
pop
adcl
or
fadds
sarb
enter
leave
notb
shl
or
xor
into
push
lret
call
mov
push
dec
inc
xor
xor
mov
test
cmp
out
add
xor
mov
ror
ret
mov
xchg
adc
pusha
xchg
or
mov
lahf
dec
add
shr
sub
add
and
imul
add
adc
cwtl
mov
mov
push
sarl
xorl
add
push
dec
mov
movsl
mov
dec
push
inc
rorl
call
loop
stos
mov
cmp
sub
xor
lret
add
jl
jne
test
les
mov
movb
or
jno
mov
mov
call
and
add
hlt
jbe
jns
jle
or
mov
rclb
add
fistpl
add
adc
xchg
je
jo
cwtl
add
nop
fadds
add
pop
shrl
aas
sub
add
or
mov
shlb
mov
mov
add
xchg
add
lret
mov
push
push
loope
jo
jp
daa
aaa
jo
pop
gs
mov
rorb
mov
cwtl
inc
pop
add
or
mov
subl
xchg
xchg
pusha
adcb
fcoms
add
sahf
cmpl
sub
pop
add
mov
call
sbb
pusha
out
cmc
inc
sahf
addr16
subb
mov
inc
ret
rclb
adc
xor
cmp
pop
mov
xor
lock
xor
adc
or
fildl
in
add
sbb
rorl
fcoml
sub
xor
push
movsb
xchg
test
pop
add
push
xchg
in
inc
cli
lods
inc
push
lock
popf
inc
or
or
mov
out
push
push
fcmovnb
add
mov
mov
and
ja
shll
ret
lods
mov
leave
push
std
imul
pop
fstpt
add
sbbl
int3
adc
xor
pop
rol
xor
loop
add
jbe
subl
addr16
pop
and
ffreep
add
repz
pop
mov
xchg
sbb
shll
adc
mov
mov
add
addr16
cli
mov
cwtl
out
cmp
and
in
jae
cmp
icebp
xchg
cmpsb
paddb
and
cmp
mov
xchg
rorb
sub
xchg
dec
test
dec
shll
leave
das
dec
dec
les
xchg
leave
xor
mov
mov
leave
sub
sbb
jmp
push
icebp
add
out
inc
sub
pusha
dec
sbb
mov
push
push
pop
inc
lods
lock
jmp
mov
xor
stc
and
cmpsl
scas
inc
cs
dec
jmp
repnz
pushf
ljmp
and
mov
jo
xchg
je
and
nop
adc
add
aas
sahf
and
pop
stos
xchg
and
add
push
cld
jno
pushf
lods
adc
jo
pop
pop
and
int
push
cld
lsl
repnz
movsl
add
xor
nop
fdivrl
scas
inc
and
jns
es
nop
or
mov
pop
js
cmpsb
jg
mov
scas
adc
cwtl
in
xchg
test
lods
int
push
fsts
movsl
fs
add
lock
adc
inc
insl
call
loope
mov
decb
dec
outsb
add
scas
inc
sbb
or
pop
mov
add
cmp
mov
pop
and
int3
leave
stos
sahf
dec
jb
add
pop
aad
or
or
and
adcb
in
movsb
mov
xchg
adc
out
fdivr
cld
addl
dec
enter
adc
shl
pop
xchg
xor
cmp
jle
in
int3
xor
inc
shlb
jno
mov
inc
jmp
or
add
data16
repnz
mov
test
stc
out
mov
in
insb
mov
mov
cld
out
or
repz
cmpsl
adc
shrl
adc
in
add
push
fcomps
ret
cwtl
dec
jge
es
cmp
cmp
sub
clc
adcb
pop
aas
mov
or
addl
in
dec
mov
mov
loopne
push
pop
gs
mov
lock
mov
pop
loop
or
fs
and
and
or
das
xchg
lods
sub
call
add
hlt
movsl
lahf
cltd
js
xor
or
rolb
mov
push
call
add
lret
or
mov
cmp
lcall
andl
push
xor
mov
ret
rolb
fadds
fucomp
es
int
out
mull
popf
and
cmp
shll
pop
jg
xchg
arpl
in
add
popa
push
xor
pop
mull
sub
jbe
ficompl
roll
notl
imulb
inc
add
out
add
mov
andb
lock
scas
add
inc
push
cwtl
stos
fcoms
add
jg
in
fidivs
rcr
sbb
push
iret
rcrb
fld
sbb
jbe
push
je
sub
sub
insb
add
imul
xor
ret
mov
mov
add
jne
daa
rclb
shrb
jmp
jl
add
sti
sub
mov
scas
divps
mov
add
xchg
dec
dec
inc
clc
add
sub
shlb
test
sbb
sbb
pop
add
mov
push
loopne
or
cld
movsb
fistpl
mov
pushf
stc
insl
mov
imul
pusha
xchg
or
pop
je
movsb
loope
adc
test
popf
mov
inc
and
adc
sar
in
movl
sub
push
js
out
sbb
add
or
mov
test
mov
jo
push
sbb
cwtl
outsl
push
call
mov
jp
add
push
ret
mov
inc
mov
test
pusha
lcall
icebp
adc
jl
mov
or
loopne
movsl
ljmp
or
adc
arpl
outsl
add
mov
inc
jecxz
add
je
imul
fnstcw
add
and
add
sub
out
stos
daa
mov
jb
push
sbb
or
cli
fstp
out
cmp
test
adc
or
fwait
lret
adc
or
pop
jo
and
push
cmp
frstor
sar
out
mov
xorb
scas
pusha
stos
sbbb
push
xor
lret
add
rol
xor
mov
cmc
shlb
add
decb
mov
xor
push
sar
adc
pushf
ja
cmpsl
aas
jmp
add
jge
cmp
add
mov
add
insl
cmp
das
lahf
lret
cmp
mov
cmpsl
add
ds
dec
push
scas
mov
stos
inc
scas
jns
addl
mov
leave
xor
push
add
popa
push
fstpt
or
scas
pop
out
pop
test
shll
sbb
push
add
subb
adc
xchg
in
and
cld
mov
ret
jno
xor
pop
or
andb
or
imul
inc
inc
add
addl
push
in
add
and
std
add
imul
or
icebp
out
sbb
cmpb
inc
lock
dec
pusha
jne
dec
or
add
inc
or
and
pusha
out
mov
push
jns
js
pop
ljmp
sub
icebp
lcall
jb
dec
sub
adc
push
add
xchg
push
cmp
xchg
mov
test
lods
pop
addr16
negb
mov
push
jmp
mov
add
sarb
int3
add
pop
fsubp
and
and
loopne
ja
add
dec
inc
lods
add
es
in
rcl
outsl
pusha
or
inc
mov
enter
push
mov
outsb
popa
inc
xor
dec
clc
imul
cli
jb
cltd
std
jo
repnz
jmp
cld
or
lret
pop
add
iret
pop
scas
out
mov
popf
pop
gs
xor
jge
xchg
or
movsb
cmpsl
je
mov
mov
repz
cli
jno
inc
or
call
dec
fimull
outsl
add
push
decb
inc
sbb
xor
or
adc
pusha
pop
xor
or
daa
iret
movsb
add
sub
aam
inc
or
xor
and
pop
sub
enter
aad
or
loopne
mov
sub
js
or
cltd
lock
cli
lea
xor
flds
pop
rolb
mov
add
cwtl
push
outsb
cmp
sub
dec
pop
psubusw
inc
push
cmpl
psadbw
mov
push
jmp
dec
push
xor
mov
stos
add
push
jmp
xchg
push
incl
lret
psllq
xor
xchg
lock
iret
adc
pop
mov
jl
arpl
jmp
orl
jb
adc
popa
mov
jnp
rol
mov
and
add
dec
adc
and
pusha
add
loopne
scas
idiv
repz
cmp
add
push
lock
aaa
sbb
xchg
jbe
jnp
das
push
dec
mov
filds
jg
test
adc
mov
nop
scas
sbb
push
faddl
inc
xchg
shlb
std
jecxz
cmpsb
fldl
or
add
adc
mov
add
push
mov
loope
add
mov
sub
fwait
mov
xor
add
add
iret
incl
pop
enter
insb
bound
jmp
fstpl
mov
out
mov
push
fwait
dec
add
repnz
fsubrl
push
add
in
inc
int3
sub
add
pop
adc
and
enter
or
loop
add
pop
ret
nop
jl
inc
cmp
dec
mov
or
int
ja
pusha
invlpg
test
push
cmpsb
test
mov
cwtl
pop
push
sbbl
or
or
pop
fabs
fidivl
mov
add
imul
ret
adc
xor
and
xchg
cli
subb
add
adc
or
add
xor
mov
cmp
in
jp
pop
add
repnz
inc
mov
sub
rcrb
int3
ret
adc
add
leave
sub
inc
in
addl
sbb
int
and
lret
add
addr16
mov
mov
fwait
pop
daa
icebp
fcoml
aas
add
in
aaa
int3
dec
or
mov
movsb
mov
adc
xchg
adc
jb
add
cmp
add
push
sub
lcall
push
add
mov
add
test
out
data16
or
jo
xor
imul
cmp
jecxz
sub
rolb
mov
xor
out
test
dec
mov
push
add
cmp
sub
pop
fildll
dec
loopne
add
add
nop
cmp
jp
stos
sub
adc
add
dec
pop
popa
push
push
daa
shrl
jl
loopne
add
loop
push
dec
stos
adc
adc
ucomiss
inc
lods
mov
data16
xchg
les
dec
sti
out
ss
imul
mov
adc
sbb
addb
sbb
add
jp
andb
xchg
test
dec
xchg
orb
add
mov
push
mov
push
je
int3
cs
sbb
add
sbb
cmp
scas
cmp
xlat
sub
jp
or
mov
jge
cmp
add
and
add
and
pop
xchg
movsb
pop
or
xor
test
bnd
out
push
int3
cmpsb
mov
mov
inc
xchg
fimuls
clc
ja
add
insb
pop
sub
shlb
add
pop
sub
xor
sarb
mov
pushl
adc
adc
movsb
insl
push
cmp
out
cmp
add
ret
into
roll
dec
xchg
or
sbb
mov
xor
pop
sbb
fsub
addl
repnz
sub
test
inc
divb
adc
xor
andl
int
sub
adc
cld
xor
and
test
jnp
xor
adc
movb
ret
test
pminsw
dec
pop
shl
call
xor
xlat
rolb
pop
testb
cmp
nop
inc
add
dec
fistps
adc
xchg
dec
stos
xorl
cli
inc
jo
out
mov
and
dec
jmp
sbb
pop
or
add
add
lock
add
cmp
jle
add
inc
xchg
and
mov
jecxz
int
and
cwtl
push
add
mov
aad
inc
add
aam
outsb
scas
xor
leave
add
pop
in
jge
aam
test
dec
mov
lcall
fwait
pop
xor
mov
cwtl
inc
mov
outsl
arpl
fstpt
pop
xchg
loopne
lods
adcb
sub
mov
aam
lret
movsl
add
adc
jae
sbb
popa
jo
xor
add
pop
push
pop
dec
loopne
hlt
dec
jp
sahf
sbb
push
das
shlb
in
mov
mov
daa
inc
sub
add
adc
xlat
pop
outsb
push
push
pop
xchg
mov
push
push
xchg
push
ds
and
pop
add
push
popa
js
xchg
adcb
and
xor
rcrl
push
xchg
loopne
mov
lcall
or
add
xchg
xchg
push
push
test
test
dec
xchg
add
daa
sub
fcom
pop
push
or
pop
sbb
dec
fdivrl
imul
mov
add
add
cwtl
sbb
or
mov
xor
test
scas
sbbl
dec
jmp
in
aam
mov
cs
repz
sti
add
rcrb
mov
add
pushf
cmp
dec
or
mov
loope
or
or
jg
mov
sti
in
push
cmp
cmpb
jbe
mov
mov
mov
std
jle
cmc
dec
mov
pop
mov
mov
xchg
add
sub
sbb
xchg
shrl
cmp
adc
mov
bound
lret
out
gs
das
cmp
icebp
or
outsl
sti
xchg
sbb
add
push
imulb
dec
cmp
jo
adc
fcmovnb
mov
lahf
icebp
adc
leave
outsb
mov
push
imul
fcompl
cwtl
sbb
test
sub
repz
aam
xchg
loope
cmp
scas
mov
push
lods
xor
mov
fisttps
push
inc
jg
cmp
mov
push
sbb
push
xor
xchg
xorb
pop
add
sub
push
sahf
jge
add
stos
ret
cmp
inc
sarb
xor
insl
in
dec
inc
mov
ljmp
adc
aaa
add
imul
scas
jo,pn
jb
add
jl
imul
lahf
cmp
insl
add
adc
add
std
inc
stc
push
push
cmovb
dec
stc
add
pop
adc
rolb
xchg
mov
sbb
and
add
insl
or
and
cmpb
out
movsl
mov
add
sbb
outsb
lret
pop
shrb
mov
fdivrl
inc
mov
push
outsb
pop
fimuls
les
scas
sub
sahf
arpl
push
gs
sbb
or
js
cmp
sbb
cmp
dec
loopne
add
mov
add
add
xchg
or
add
negl
loopne
ja
jb
roll
or
loop
add
and
out
mov
xor
adc
add
andl
je
call
aam
das
dec
ret
shl
icebp
add
jbe
or
add
out
dec
mov
jp
add
mov
outsl
push
inc
add
xor
cmp
scas
arpl
fnsave
cmp
mov
add
and
push
add
lods
lcall
dec
sahf
xchg
inc
sub
and
bound
jnp
xor
jns
dec
add
xor
iret
add
sbb
pop
cmpsb
jbe
adc
ror
add
inc
push
icebp
lods
add
mov
leave
mov
pop
sub
add
sbb
inc
or
push
aam
xor
dec
or
jns
mov
sti
mov
add
dec
mov
popf
xchg
mov
xchg
jnp
pop
pushf
and
aas
dec
sub
loop
lea
test
add
jae
icebp
scas
sub
or
pushl
add
popl
adc
cld
or
popf
ljmp
mov
xor
lea
ud2
and
outsl
mov
push
addr16
enter
or
jge
fimuls
add
pop
fadd
std
lods
push
sbb
outsb
add
mov
test
insb
add
mov
push
jl
jo
lods
push
addr16
aas
outsl
stc
andb
dec
add
fimuls
ja
pop
push
add
sbb
je
pop
pusha
jp
and
pop
cmp
sbb
dec
loopne
jmp
jae
ja
add
popf
or
pusha
jns
ret
xchg
pop
dec
jge
mov
sbbl
dec
xorb
xchg
sbb
aas
sbb
mov
imul
gs
dec
lret
jne
pop
int3
xchg
inc
mov
mov
adc
add
inc
int
cmp
cmp
inc
add
scas
ror
jecxz
xlat
add
push
mov
out
mov
or
iret
mov
shl
adc
das
add
fdiv
sub
xor
jbe
add
stc
mov
je
mov
outsl
cmp
sbb
xor
add
in
sbb
cmp
jbe
inc
adc
movsl
rcll
jecxz
mov
nop
sub
rorb
lret
adc
push
leave
sbbl
sub
faddl
add
addb
add
jnp
cmpb
jle
add
fld
cld
in
int3
repnz
inc
adcb
aas
bound
rclb
dec
pop
or
fists
push
pop
ljmp
inc
movsl
and
xor
cwtl
adc
sbb
test
call
addb
movsb
add
ja
pop
mov
popl
xor
or
mov
cmpsb
cmpsl
test
inc
add
pop
xchg
push
repnz
sbb
xor
xor
adcb
daa
scas
pusha
push
mov
cwtl
roll
push
add
sub
jno
lock
imul
add
jmp
imul
lret
fiadds
mov
pusha
dec
add
add
push
test
and
lcall
mov
xchg
cmp
jl
push
dec
jmp
fisubs
movsb
add
sbb
jb
imul
arpl
push
sbb
addb
fnstcw
xor
cmp
mov
mov
add
push
mov
dec
sub
or
cs
popf
stos
pop
push
mov
push
add
push
xchg
repnz
add
sahf
pusha
sbb
mov
sarl
pop
pop
in
push
push
add
addr16
add
cmpsl
xchg
dec
xchg
orl
lea
sub
add
or
insl
jg
and
push
push
inc
ljmp
enter
cmp
xor
jnp
fucomi
loop
lock
sbb
mov
nop
mov
add
jb
inc
cmp
xchg
clc
inc
cwtl
add
xchg
das
pusha
and
fnsave
call
bound
add
roll
rcl
cmp
or
xor
or
xchg
or
sbb
push
test
and
xchg
mov
mov
xchg
cmpsl
sbb
sbb
mov
rcrl
sahf
adc
mov
add
pop
nop
icebp
jp
pop
notb
pop
int3
jmp
cmp
fidivrs
int3
popf
xchg
sbb
iret
dec
xchg
dec
jno
or
rolb
stos
cs
sbb
psubusb
fchs
loopne
pop
and
push
aam
inc
ja
jno
jb
cmp
scas
inc
into
es
data16
add
and
cmp
ficoms
fldcw
jp
add
mov
pop
mov
cmp
jo
in
lds
jp
xchg
jno
sub
mov
add
push
pop
adc
jns
mov
cmp
test
jle
mov
je
xor
lea
cld
in
repz
test
fstpt
rclb
mov
ds
cmp
pop
cmp
leave
mov
jae,pn
shlb
add
inc
mov
insb
dec
mov
add
push
flds
pusha
cmp
test
dec
mov
add
lret
add
jo
loop
mov
test
repnz
pop
movsl
mov
push
or
bound
add
addl
stos
lds
add
clc
mov
ret
and
add
pop
dec
and
icebp
jo
leave
sbb
xchg
add
lret
add
cmpsb
cli
mov
test
jg
xchg
mov
aad
in
das
imul
or
push
testb
add
mov
pop
sbb
stc
out
adc
jbe
add
and
scas
std
rcl
jl
add
into
jbe
or
cmp
ja
std
inc
add
push
aaa
pop
dec
sbb
xor
lret
jmp
outsb
jns
add
les
sub
add
imul
xchg
arpl
xchg
int
pop
es
and
adc
sahf
sbb
adc
in
pushf
add
les
push
out
adc
dec
sbb
add
mov
add
inc
popa
into
lahf
stos
mov
loope
pushf
dec
notb
pop
and
sahf
dec
pusha
sbb
cmp
add
mov
pop
or
sti
clc
aad
repnz
lret
dec
mov
xchg
xchg
in
mov
jecxz
shrl
pop
add
xor
hlt
mov
push
add
cltd
pop
cmc
add
fiadds
xchg
pusha
jo
and
fistl
add
cmp
mov
add
cmp
add
add
call
add
sbb
add
push
lret
pop
add
nop
mov
lsl
add
adc
addb
pop
xor
leave
sti
xchg
sub
aad
lods
sbb
mov
pop
mov
rcrb
add
fucom
leave
mov
mov
add
cmp
add
in
popa
or
jne
adc
leave
sub
sbb
add
in
sahf
mov
data16
mov
mov
add
mov
cmc
push
inc
movsb
mov
pusha
mov
push
cmp
sub
inc
mov
add
jmp
pusha
jge
mov
jae
scas
out
sub
push
clc
dec
mov
push
add
es
cltd
jno
sbb
ljmp
add
pusha
jo
inc
addr16
ja
add
adc
pop
jmp
or
add
adc
test
ljmp
js
jns
loopne
mov
dec
add
or
aas
cwtl
mov
or
dec
sub
add
ret
loop
sub
xor
mov
jmp
scas
add
jge
out
sti
push
cmp
ds
push
sub
sahf
add
mov
mov
dec
sar
pop
fistl
jp
mov
jmp
outsb
cmp
in
add
adc
jg
sbb
mov
mov
pop
mov
cltd
imul
adc
rolb
cmpb
sbbl
sub
add
push
icebp
push
movsb
dec
rcll
pop
inc
add
call
add
jp
roll
pusha
or
push
jmp
ror
testb
sub
aaa
push
mov
xchg
add
lods
dec
cmp
pop
fdivrs
adc
add
push
roll
jmp
fmuls
or
jge
insb
mov
or
xlat
fistpl
hlt
gs
cwtl
js
aaa
imul
ljmp
bound
add
inc
inc
adc
xchg
loope
aad
and
adc
aam
mov
sar
scas
je
lds
fwait
movaps
add
mov
add
cmc
cmp
mov
inc
push
sbb
sbb
pshufw
mov
fs
outsb
add
jmp
and
imul
data16
xlat
add
sub
xchg
jle
and
sbb
sti
pop
add
and
add
mov
add
scas
adc
inc
push
ds
pusha
pop
pop
filds
xor
movsl
test
popa
imul
andb
mov
push
push
add
shrl
imul
xchg
les
sub
and
loope
sub
cmpsl
insb
add
xor
sub
pop
test
aad
leave
lahf
sbb
push
add
mov
and
gs
aad
lahf
adc
add
xchg
xor
push
shr
sahf
xor
and
loopne
jbe
mov
inc
jl
add
fisubrs
mov
push
pop
xlat
stos
aaa
jbe
cwtl
mov
add
adc
mov
and
fmull
mov
pop
add
inc
add
add
push
test
add
es
imul
repnz
cltd
outsl
hlt
xor
and
jp
add
ja
add
pop
in
fdivs
add
cmpl
pop
push
icebp
rcrb
xchg
cmp
fdivrs
push
ret
jp
and
add
inc
push
call
lods
jae
movsl
or
dec
mov
sbb
push
jge
rdtsc
lret
loopne
sub
leave
ss
mov
arpl
mov
test
int3
inc
fists
dec
mov
push
movsl
xchg
roll
mov
pop
mov
add
stos
call
in
add
in
xchg
dec
aaa
add
add
or
loope
pushf
jo
sub
arpl
pop
add
add
enter
bound
push
mov
lahf
add
add
popa
popf
lods
mov
sub
shlb
cmp
rolb
push
mov
mov
and
sti
push
int
pop
add
fwait
int
mov
dec
loopne
lock
fistl
add
incl
add
xchg
push
mov
ds
or
mov
add
pop
push
or
push
lret
jne
mov
and
push
add
mov
loop
adc
xor
mov
repnz
jno
pop
adc
jo
add
jge
sahf
mov
cwtl
mov
mov
xchg
cli
add
les
dec
stos
fldcw
sub
or
addr16
inc
add
and
mov
xor
xchg
and
stos
pusha
and
mov
sbb
fsubs
imul
dec
push
mov
call
jmp
cmp
loope
xchg
add
mov
push
add
psubd
pop
adc
xchg
xlat
test
movsb
std
adc
push
inc
add
rcl
pop
sub
imul
or
loop
mov
inc
cmp
insl
cmp
jp
add
pop
aad
mov
inc
or
lret
mov
test
cmp
jb
mov
fdiv
and
shll
iret
jle
pop
out
add
mov
xor
pushf
add
adc
push
aam
data16
jbe
or
jbe
sbb
and
inc
lret
sub
pop
xchg
sbb
out
push
add
movsl
xchg
subb
lock
out
sahf
dec
cmpsl
sbb
mov
daa
cmp
xor
xchg
cmp
pop
sub
add
lret
xchg
int3
inc
push
ds
filds
sub
das
xchg
adcb
scas
push
pusha
xchg
mov
loopne
cmpsb
in
daa
in
mov
in
jg
lds
insl
inc
sarb
add
jb
ffree
xor
stos
imul
fsubrl
inc
addr16
cmp
mov
js
repnz
xchg
adc
insb
mov
xchg
popa
add
sub
push
das
add
clc
push
ret
mov
add
fimuls
inc
aad
add
xor
aas
dec
xlat
cmc
ss
andb
ja
pop
stos
fnsave
or
lcall
jg
add
push
lds
add
cmc
js
mov
aad
jns
push
add
or
orl
shlb
xchg
jp
fldl
movsb
jmp
jg
jnp
add
cmc
loope
gs
jecxz
aas
pop
and
pop
push
dec
add
mov
out
test
cmpsb
lock
flds
push
adc
push
dec
fistl
scas
inc
add
jecxz
aad
push
mov
mov
and
adc
cmp
jbe
lahf
mov
mov
add
adc
out
adc
andl
pop
pop
lock
sbb
std
inc
inc
sbb
jle
hlt
adc
or
inc
leave
xchg
pushf
clc
mov
add
int
cltd
mov
add
insb
and
lock
mov
jecxz
cld
fs
sbb
mov
add
inc
dec
jmp
pop
repnz
inc
les
adcb
arpl
std
addr16
mov
shll
in
sub
test
fwait
enter
ss
or
sub
push
mov
cmpb
add
adc
fs
inc
iret
test
cld
xor
mov
jle
loop
loop
inc
xor
loopne
out
sub
pop
shl
xor
xor
pushw
inc
jle
lds
repz
fs
push
pop
les
cmp
out
lea
inc
rclb
fidivl
cwtl
ret
push
lds
icebp
dec
push
mov
sahf
xchg
nop
push
add
mov
add
stos
xstore-rng
cmpsl
inc
mov
xchg
test
scas
add
jb
mov
mov
ror
jle
inc
add
and
in
test
sbb
stos
cltd
cmp
fiaddl
pushf
sti
das
mov
int
ret
sbb
arpl
sub
pop
scas
sbb
xchg
xchg
mov
ja
not
sbb
pop
pushf
addb
aaa
js
mov
loopne
lock
ficomps
mov
sahf
lods
xchg
adcb
lahf
cmpsb
adcl
jecxz
jns
je
push
add
gs
sahf
fsubrs
add
push
inc
mull
mov
ss
into
fnstcw
xor
mov
add
cmp
fmul
out
add
sahf
cld
xchg
add
mov
stc
pusha
xor
push
loopne
pop
sbb
adc
dec
add
fninit
inc
mov
fsubp
popf
testl
pop
cmp
add
cmp
mov
in
into
lods
xchg
rorl
and
nop
cmp
sarb
xorb
sbbb
mov
adc
pop
aam
xor
into
add
push
pop
jbe
or
cmp
call
xor
xchg
clc
add
test
push
arpl
rcrl
sbb
jns
sub
pushf
jg
add
cmp
pop
repnz
orb
rcrl
add
ljmp
mov
ja
add
daa
lds
pop
repnz
mov
addb
lcall
sbb
add
xchg
insb
stc
subb
stos
maskmovq
divl
or
add
pushf
mov
stos
and
sub
fadds
push
pop
add
jne
and
test
add
lret
sbb
push
and
call
mov
add
into
sbb
pop
pop
rcrb
jg
pushw
pop
sbb
loope
add
xor
push
jmp
xor
jno
mov
fiadds
icebp
outsb
lock
pop
or
test
and
push
mov
add
loopne
add
and
and
dec
add
inc
test
insb
add
xchg
sub
pop
add
xchg
nop
je
jbe
add
loopne
addr16
test
fisttpll
bound
cmp
cli
push
shrb
nop
aaa
add
add
data16
dec
test
fisttps
imul
xchg
pop
aas
scas
rcl
push
add
adc
pop
sbb
xor
mov
jbe
add
jp
popf
push
aad
clc
imul
mov
movsb
add
jle
mov
jnp
add
popa
popf
jmp
roll
mov
cmp
jno
ja
addr16
mov
jb
cmpb
mov
pop
int
ja
add
popf
or
fdivs
add
enter
sub
jns
shlb
push
incl
adc
movsl
xchg
mov
popf
andnps
jg
inc
loope
lea
mov
jle
add
ret
push
jne
mov
mov
mov
xor
insl
popaw
andb
pop
clc
cmp
jne
mov
add
mov
es
js
ds
push
sub
add
daa
je
rorb
sbbb
out
dec
inc
push
add
ss
int
add
push
stos
rclb
aam
clc
sub
and
mov
inc
pop
popa
dec
nop
sub
testl
ljmp
pop
inc
bound
frstor
add
data16
dec
push
andb
mov
xlat
pop
and
lods
and
inc
loopne
test
or
pop
dec
cld
or
in
jl
xchg
push
addr16
pop
sbbb
dec
loopne
stos
sahf
xor
add
sbb
xchg
add
popa
bound
cmp
fwait
xchg
nop
add
xor
sub
sub
fisubrs
cmpsb
lods
and
inc
rcrb
push
sti
dec
out
mov
add
test
push
iret
xor
add
dec
stc
nop
cs
negl
cmp
sbbb
mov
js
scas
add
in
cltd
push
or
xor
mov
icebp
adc
out
dec
xchg
pop
xchg
cmp
movl
in
loope
lea
jge
outsb
jnp
repz
dec
add
in
inc
mov
pop
xor
add
jge
jbe
aad
and
loopne
push
inc
jae
fstpl
mov
int
out
sti
add
pop
dec
dec
add
xorl
fists
into
mov
std
aam
repz
push
push
jb
test
sbb
imul
xor
mov
jge
pusha
cmp
sbb
shrb
outsl
repnz
les
cmp
scas
sub
mov
flds
out
mov
or
adc
jne
push
rcll
outsl
out
jo
mov
mov
cmp
xchg
xor
das
dec
pop
adc
sti
or
jno
fdivrp
jge
fs
jo
leave
mov
jae
or
cmp
add
add
inc
xchg
sbb
fstps
popa
out
inc
xchg
sbb
vmwrite
bound
add
dec
pop
xchg
xchg
xor
hlt
jbe
add
xchg
add
jae
push
sbb
mov
add
cmc
sti
ret
pop
idivb
movsl
inc
add
mov
add
lahf
in
cld
or
and
add
push
repnz
and
cs
call
push
xor
pop
add
push
stos
lods
add
ftst
aam
sarb
scas
add
pop
add
and
outsb
mov
loop
mov
add
xorb
in
push
push
sub
xor
mov
pop
cmp
or
cmp
add
ds
fwait
add
sbbb
fcoml
sbb
cltd
or
mov
dec
dec
adc
add
cmp
pushf
notrack
aas
shll
stos
add
push
aam
jb
scas
mov
out
mov
sbb
or
mov
add
mov
leave
add
jns
fsubr
addl
cs
repz
int
jl
jo
loopne
pop
sub
loopne
mov
imul
mov
cmp
scas
or
sub
push
movsb
xor
mov
and
sbb
loop
push
addr16
js
pop
pop
push
dec
orb
in
push
call
popf
jmp
mov
jl
sbb
aad
add
loopne
push
popf
add
adc
dec
int3
sti
stos
cmpsb
popa
call
ljmp
ret
adc
push
jl
cld
repnz
call
enter
xchg
jg
scas
sbbl
es
fcomip
add
xor
popf
stos
ss
sub
inc
test
out
in
adc
mov
fwait
pop
add
stos
rclb
mov
fnstsw
xor
notb
jmp
dec
sub
add
scas
stos
outsl
adc
loope
out
add
out
dec
push
cmp
fcmovne
mov
add
lods
cmp
enter
sarl
jecxz
rorb
pop
aas
mov
test
dec
cmpsl
std
pusha
mov
pop
sbb
or
cmp
mov
sbb
or
std
and
add
xor
leave
out
inc
push
and
jae
pusha
push
xchg
push
into
pop
ret
fcoms
pxor
pop
int3
inc
pop
cmp
jl
add
jnp
inc
xchg
cmp
pusha
fwait
add
dec
pop
or
loop
push
lea
add
pushf
xchg
cmp
std
sbb
into
mov
lock
aam
nop
add
pop
inc
cmc
jo
mov
loopne
jbe
into
add
pushf
pop
mov
jmp
push
pop
rorb
ljmp
xor
adc
mov
fsubs
add
jne
dec
jmp
insl
cs
mov
add
enter
push
sarb
ret
xchg
adc
je
cli
mov
cmp
and
add
adc
int
and
ret
hlt
shl
shrb
scas
mov
jl
pop
clc
ja
inc
enter
lcall
pop
imul
or
inc
sub
add
out
lret
test
inc
loope
xchg
pusha
mov
or
pop
gs
movsb
iret
or
dec
test
loopne
mov
push
inc
add
jbe
iret
in
daa
shll
add
jp
pop
add
sbb
es
enter
dec
push
jne
cld
sarb
les
cmpsb
xchg
inc
and
push
inc
movsl
adc
add
repz
nop
fucomi
enter
jl
xor
insb
or
call
cmp
lods
inc
in
jno
stos
inc
push
push
add
jg
jle
push
adc
cmp
addr16
mov
add
mov
and
add
jecxz
mov
add
lret
and
jg
lahf
mov
mov
lods
add
push
js
add
movsb
mov
add
fmul
jns
push
cld
sahf
add
adc
adc
or
daa
sahf
out
xchg
add
inc
icebp
jp
push
xchg
jne
xor
xor
sbb
data16
ss
int3
sub
jo
cmp
add
xchg
fnsave
rcrb
lods
es
pop
mov
out
add
adc
in
sbb
sub
push
cmp
cmp
frstor
lock
stc
mov
or
xchg
rcr
xor
enter
out
xchg
cs
pushf
and
add
imul
add
push
fsts
rol
sbb
rolb
sbb
mov
jle
insl
inc
or
test
sub
add
call
pop
add
mov
jp
scas
loop
add
dec
stos
mov
pop
popl
sahf
inc
insl
popf
mov
jle
shrl
aas
xchg
mov
iret
scas
fnstsw
push
and
push
xchg
pusha
popa
xchg
lret
dec
in
pop
push
insb
add
fstl
subl
scas
aad
scas
lea
shl
add
jo
xor
mov
aaa
not
pop
pop
adc
add
rol
rcr
out
sbb
sahf
outsb
inc
adcb
mov
jl
pop
ljmp
xor
add
test
out
add
lds
ds
cmp
or
add
daa
cmpb
in
das
inc
sub
outsb
mov
adc
pop
lea
pop
inc
icebp
outsl
and
std
add
fstl
jns
adc
in
cmp
push
mov
mov
mov
pop
repnz
mov
push
js
and
xor
cmp
dec
add
add
cwtl
add
adc
sub
add
testb
movsb
push
insl
add
lea
jge
leave
neg
or
add
addl
fimuls
bound
mov
cmp
in
add
pop
dec
lock
stc
add
pcmpeqb
fldcw
add
mov
daa
or
cld
cmp
mov
mov
adc
xor
push
lcall
push
jle
cltd
sub
push
js
adc
outsb
outsl
push
rclb
popa
fidivs
mov
add
fwait
xor
movsb
push
scas
sbb
pop
stos
xchg
fmull
mov
or
jecxz
pop
pop
int
icebp
out
stc
data16
add
nop
mov
or
push
and
int3
xlat
hlt
scas
add
mov
jl
cwtl
pop
stos
dec
sub
push
lea
pop
neg
xorl
or
push
scas
in
sbb
mov
cld
mov
gs
add
jmp
imul
mov
decb
pop
inc
into
int3
mov
cmp
mov
sbb
push
dec
pop
icebp
out
fsubl
repz
arpl
inc
imul
icebp
jg
add
shlb
ret
cmpsb
repnz
lcall
mov
mov
sbb
popa
adc
pushf
xchg
push
repnz
add
pop
dec
sbb
inc
popf
mov
push
add
cmp
add
sub
pmaxsw
and
add
adc
add
push
pop
push
lret
mov
or
int3
jo
pop
push
pop
or
push
test
mov
push
lock
fdivr
mov
inc
pop
or
aam
cmpsb
and
mov
cmp
xchg
outsb
imul
and
clc
je
cwtl
nop
cmp
mov
inc
mov
testl
in
cs
adc
inc
mov
es
adc
dec
aaa
sbb
mov
lods
pop
cmp
cmp
movsl
data16
add
adc
fistps
xchg
es
shl
xlat
and
add
jge
push
add
nop
mov
sbb
add
test
add
push
sbb
movsb
sub
or
add
leave
mov
sbb
inc
test
loop
shrb
out
jae
mov
and
dec
testb
mov
jg
insl
mov
iret
mov
test
add
sbb
push
mov
dec
in
inc
jb
clc
push
push
add
ror
jl
xchg
repz
out
pop
inc
add
lret
xchg
push
pushf
femms
cmp
adc
js,pt
pop
cmp
test
int3
add
add
in
rcrb
mov
cli
jg
cmp
xchg
sbb
rcl
rcrb
adc
cwtl
cli
mov
mov
pop
add
adc
push
les
jns
jl
inc
repnz
es
or
aad
mov
stos
add
mov
ljmp
lahf
add
bound
add
mov
movsb
pop
div
sub
in
mov
jge
push
js
push
stos
mov
mov
in
xor
sbb
add
mov
jecxz
ficoms
testl
sbb
out
pusha
add
popa
mov
cld
xchg
and
cmp
repz
orb
xchg
sub
xchg
mov
sub
pusha
in
cmp
jmp
stc
xor
sbb
inc
sahf
int
jp
fs
scas
dec
mov
ret
decb
shll
movsb
sbb
add
popf
push
movsl
mov
mov
aam
call
movsb
mov
mov
jmp
stos
mov
and
imul
fidivrl
stc
mov
lret
mov
test
test
cmp
popf
push
add
add
xor
addr16
add
xor
xorps
mov
dec
das
hlt
ljmp
mov
mov
xchg
adc
jle
add
shlb
pop
enter
das
fsubrl
add
mov
mov
jmp
pop
in
fildl
jg
out
shlb
cli
add
push
je
xchg
icebp
pusha
mov
and
sbb
mov
push
or
dec
in
add
fisubl
pop
adc
mov
dec
mov
push
cmpsl
dec
repz
inc
sub
push
mov
mov
add
mov
and
and
cmp
cmp
inc
in
movsb
lock
fsubs
out
pop
arpl
std
in
setns
add
repnz
jbe
aam
xchg
cmc
mov
test
into
stos
testl
push
mov
hlt
xorb
or
mov
add
ljmp
in
call
lock
add
test
add
fs
sbb
filds
lahf
push
cmp
dec
lret
int
and
mov
sbb
mov
mov
push
out
and
xor
clc
mov
sub
rclb
inc
jg
sbb
inc
cmp
cmovne
fadds
dec
mov
int3
sahf
aad
add
jns
arpl
sbb
add
into
add
test
ja
fs
subl
imul
dec
rorl
mov
gs
inc
jle
push
icebp
fstpt
mov
repnz
lcall
mov
mov
cmp
adc
roll
dec
mov
cmpsl
dec
cmc
imul
or
xor
rorb
xchg
xchg
push
loop
cmp
mov
inc
or
pop
or
lret
sbb
jecxz
test
add
sbb
lcall
testb
pushf
hlt
or
add
cwtl
repnz
inc
add
add
adc
test
ret
and
dec
loopne
imul
sub
adc
add
sti
add
mov
add
loopne
incl
inc
nop
lods
rclb
xchg
pop
inc
dec
mov
test
mov
push
rclb
push
push
dec
pop
test
pop
add
popf
or
jbe
add
and
nop
sahf
movsb
add
call
and
pop
push
add
enter
out
rorb
cltd
mov
loopne
fmul
jbe
add
pop
jae
das
mov
sti
add
hlt
push
mov
call
lds
xor
movsb
cmpsl
mov
shrb
cmp
sub
sar
and
leave
and
cmp
bnd
add
push
sbb
lock
fsubs
loope
add
mov
repz
into
xor
iret
add
jae
addb
popf
lods
mov
add
sbb
outsl
add
or
cmp
add
pushf
add
inc
push
in
mov
pop
push
adc
pop
ljmp
jne
adc
sub
mov
enter
dec
outsl
into
or
imul
add
pushf
push
add
or
in
mov
popl
bound
push
lea
add
jmp
inc
jbe
push
jp
punpckhwd
push
cmp
sbb
cltd
xchg
movsl
pop
sbb
mov
push
mov
add
rol
ret
icebp
xor
add
pop
xor
cmp
add
andl
fistpl
test
add
adc
and
jne
pushf
lea
mov
adc
push
add
push
ljmp
and
jge
enter
test
jo
pop
fnstenv
pop
push
gs
in
or
shl
out
push
inc
pop
or
int3
daa
leave
ds
inc
xor
add
add
sbb
cmpsl
cmova
rorl
fistpl
mov
inc
xchg
jnp
jecxz
hlt
add
lods
loop
mov
push
dec
mov
test
filds
fnstcw
jecxz
lahf
sub
add
cmp
mov
in
inc
cld
xchg
jle
iret
or
pop
jmp
and
sub
xchg
push
mov
fdivrs
in
and
sub
or
inc
jmp
stos
jb
dec
lock
sbb
sar
sub
xor
sbb
imul
jle
push
imul
and
int
sbb
addl
fstl
jmp
add
push
mov
call
dec
rclb
gs
mov
pusha
add
leave
fwait
mov
dec
dec
push
fisubrs
mov
mov
add
jp
mov
cs
adc
mov
subb
lods
imul
dec
add
inc
js
sti
popa
cltd
cmc
add
movsl
in
lds
lock
clc
push
dec
and
rolb
xlat
add
pop
pop
xchg
in
or
imul
out
es
insl
aam
icebp
jne
add
pop
inc
jge
out
sahf
or
xchg
dec
sbb
lods
add
stc
push
add
adc
add
hlt
xchg
push
add
pop
adc
jl
paddd
sbb
in
xchg
nop
mov
cmpsb
push
lds
arpl
add
xor
push
mov
xor
leave
sbb
rcr
dec
xlat
js
sarl
mov
pop
mov
pop
loope
or
pop
adc
dec
in
out
cmp
jb,pn
mov
movsl
aam
jl
add
inc
or
pop
dec
iret
xor
aaa
push
jecxz
rol
popa
and
and
mov
adc
movsb
or
and
stc
or
mov
les
nopl
sarb
push
jne
subl
push
jmp
and
test
sbb
fnop
sbb
sbb
inc
outsl
cwtl
cwtl
push
or
add
rorl
and
stos
add
int3
sahf
xchg
shrl
dec
add
dec
cmp
push
dec
ss
or
sbb
push
sbb
in
inc
or
gs
sbbb
adc
add
xchg
aam
ja
dec
xor
add
cmpsl
jo
daa
subb
stos
push
sbb
call
lods
jp
int
std
aas
cmp
mov
fstpt
mov
add
out
scas
dec
psrlq
jmp
in
int
xor
pop
jns
jecxz
and
pop
and
aaa
inc
mov
std
fsubrl
add
pop
xchg
es
add
and
pop
iret
add
jp
in
or
jb
or
pop
cmp
in
and
test
faddl
sbb
jle
mov
mov
jno
push
adc
vpavgw
ljmp
aam
cmp
xor
clts
imul
xchg
cmp
shr
pop
stos
nop
jb
lahf
add
xchg
dec
add
mov
gs
mov
add
or
fs
push
xchg
push
aad
shl
xchg
out
inc
add
lock
mov
cmove
xchg
xorl
in
mov
nop
sub
xchg
jp
call
imul
pop
adc
mov
outsb
jno
cmp
mov
popf
test
or
jmp
pop
addb
fnsave
mov
flds
push
push
dec
adc
cmpb
sahf
add
jnp
arpl
hlt
adc
subb
test
lahf
in
cmc
mov
add
lcall
sub
pusha
aas
add
es
in
cltd
arpl
pop
aam
add
jno
add
icebp
add
in
fcom
lds
cmpsl
add
add
adc
add
andps
add
stos
ret
add
call
dec
add
push
sbb
mov
pop
mov
push
loopne
outsl
xchg
add
ljmp
pop
lret
dec
add
inc
fcmovnbe
addr16
sbb
add
sub
xchg
test
int3
repz
xchg
xor
iret
call
shrl
xor
sbb
and
or
test
xchg
pop
push
xor
dec
mov
addr16
push
mov
jge
sbb
fadds
aad
inc
push
insb
aas
mov
push
orb
out
subb
xlat
dec
mov
mov
leave
lock
popa
pop
add
push
jo
inc
xchg
inc
sbb
cmp
jae
scas
xlat
pop
push
mov
les
js
dec
dec
inc
and
add
push
jae
xchg
mov
dec
daa
lret
sbb
clc
sahf
inc
and
pop
add
cs
cmpsl
push
mov
dec
rolb
and
nop
ret
pusha
ret
test
push
sub
cs
mov
sbb
or
scas
mov
leave
cwtl
inc
cmp
xchg
mov
sarb
add
mov
repnz
cltd
rorl
cli
les
fisubl
push
dec
inc
mov
pop
pop
inc
into
mov
or
inc
or
add
fdivl
pop
jns
lcall
xor
sbb
cltd
or
int3
inc
fs
or
mulb
add
dec
psubsw
pop
dec
inc
idivl
or
lahf
out
sub
cmp
add
insl
shlb
add
mov
lock
insb
add
mov
iret
add
lds
mov
sub
fsub
nop
pusha
xor
mov
aaa
movsl
cmc
out
sub
clc
add
jns
sahf
mov
loopne
cmp
adc
xor
add
mov
stos
dec
add
mov
jo
inc
fldenv
add
in
push
nop
add
stc
or
addr16
test
jge
fdivrp
and
popf
sub
sbb
test
std
ja
add
xchg
data16
out
pop
mov
push
mov
test
jbe
lock
nop
out
jge
mov
lret
cld
add
cld
push
xchg
xor
sub
pop
hlt
test
in
ja
fidivl
int3
add
shl
js
push
and
int
inc
icebp
jnp
sbb
je
jns
push
loop,pn
sbb
rol
adc
xor
fiadds
sarl
lock
add
jle
push
ret
add
pop
sbb
dec
sbb
sbb
mov
icebp
push
add
mov
add
insb
pop
sub
sbb
sbb
inc
popa
and
sub
xchg
cmp
aas
mov
jge
pop
lret
sbb
xchg
sub
filds
loop
cmp
add
sbb
jecxz
jo
mov
dec
mov
les
adc
or
mov
jnp
mov
sub
gs
lock
fiadds
loop
pop
mov
dec
pop
pusha
jb
adc
in
fmull
nop
sub
push
test
ds
xchg
add
dec
testl
shlb
lods
xor
pop
or
mov
push
add
sti
int
add
xor
js
add
sbb
add
add
iret
arpl
mov
add
adc
pop
add
jle
jns
add
xor
testb
popa
cmc
mov
lds
pop
mov
push
ja
inc
cmpsb
cld
add
dec
int
add
into
xchg
adc
add
in
ds
xor
pop
stos
clc
int3
popf
inc
xchg
aaa
lock
cmp
and
mov
cld
inc
incb
shll
aam
push
mov
movsb
sbb
sbb
jmp
nop
shl
adcb
shl
ja
add
sub
push
add
cwtl
mov
ljmp
incl
mov
pop
addb
xchg
lock
jnp
add
out
shl
sbbl
leave
inc
fldt
mov
rcll
pop
and
in
cld
add
lret
sub
add
adc
bound
mov
imul
lock
inc
push
jo
rcrb
jge
add
popf
cs
adc
cmp
icebp
xor
xor
enter
add
xchg
loopne
push
lods
test
testb
in
xor
test
push
pushf
mov
jp
pusha
or
outsl
mov
adc
jns
xchg
arpl
shrl
or
cmp
sub
or
inc
lcall
or
mov
xchg
sub
add
cli
in
sbb
jo
in
xor
nop
sub
movsb
push
adc
push
pop
mov
add
jge
in
das
add
cmp
cmc
into
pusha
jns
int3
sbb
add
lret
ds
jge
sub
push
jae
movsb
mov
sar
jo
add
add
repz
out
divl
daa
pop
mov
mov
test
test
aaa
bound
cmc
outsb
dec
sbb
add
notb
mov
ret
and
inc
jle
fadds
pop
in
out
fcoms
mov
pop
in
gs
add
enter
lods
mov
cmpsl
je
mov
pop
inc
lods
or
scas
add
call
js
mov
xchg
movsb
lahf
arpl
out
sahf
xor
push
pop
sbb
inc
cmpsl
push
sbb
test
xor
xchg
cmc
add
xor
dec
inc
jl
and
dec
mov
inc
jns
jp
clc
int3
sbb
inc
mov
dec
lret
gs
test
js
rcl
mov
jo
fwait
xor
cmp
cwtl
xor
add
pop
inc
rorb
lcall
mov
test
add
or
dec
mov
push
add
sbb
pop
mov
and
xchg
adc
test
cmp
mov
das
mov
xorb
add
lods
loopne
sahf
lea
add
cmc
cld
call
pusha
idivb
jne
jb
mov
mov
add
add
sbb
xlat
mov
stos
mov
mov
dec
push
mov
cmpsl
test
mov
sub
jns
nop
roll
scas
dec
xchg
insb
sbb
push
mov
mov
add
out
mov
add
push
aaa
cmpsl
outsb
sbb
adc
mov
fimull
xlat
cmpsl
xchg
mov
pop
or
pop
ja
adc
add
dec
movsb
ficoms
dec
mov
add
sbb
pop
ffreep
cmc
add
cmp
sarl
jmp
push
outsb
sub
dec
cmp
pushf
or
sbb
sbb
sahf
jne
aam
filds
mov
cwtl
lock
sbb
inc
cli
push
sub
jns
jle
stc
scas
mov
cli
inc
andb
jae
and
out
mov
repz
jmp
jno
add
jp
push
inc
fidivrs
add
out
mov
xor
jmp
cmp
icebp
mov
fs
pusha
je
ljmp
mov
add
mov
xrelease
cwtl
inc
sbb
aad
loopne
xchg
add
mov
add
pop
sub
insl
shrb
pop
inc
shl
aaa
les
inc
testb
add
mov
xor
cmp
xchg
lds
cmp
xchg
shr
sbb
or
inc
es
mov
mov
mov
push
popa
add
mov
iret
xchg
add
int
outsb
scas
daa
mov
xchg
add
and
inc
lock
pusha
jecxz
movsl
inc
add
xlat
pop
hlt
push
dec
xor
xchg
repz
arpl
lret
rcll
or
call
ret
lods
fmul
mov
insl
rorl
lds
fldt
aaa
cmp
test
sbb
adc
jb
daa
in
cltd
dec
and
jmp
and
jecxz
mov
cltd
cli
sbb
icebp
leave
add
imul
call
xor
rorb
lods
xor
sub
imul
sbb
pop
xchg
adc
lea
pop
hlt
mov
in
sbbl
sbb
sub
int
mov
xchg
jbe
add
fsubr
daa
pop
jnp
roll
fs
shlb
add
jbe
push
ja
mov
sbb
addr16
cmp
mov
add
xchg
fstl
mov
add
mov
push
nop
lahf
lds
cmpb
inc
pop
sub
sbbl
repnz
pop
in
xchg
or
ficomps
pop
jno
mov
repnz
fmul
iret
rcl
push
movsb
je
mov
je
push
rorb
add
lret
bound
sub
add
test
cmp
dec
add
fildll
add
lret
lcall
out
mov
das
jo
shrb
cwtl
fimull
pop
das
loopne
cmp
mov
pop
dec
pop
jg
add
dec
xor
jb
pop
bound
or
push
sbb
add
shrl
push
pop
loop
sbb
cmp
add
lods
dec
mov
sbb
leave
mov
imul
add
data16
adc
pop
inc
or
scas
add
lret
data16
lds
dec
or
test
aaa
sahf
fmull
cmp
jo
dec
sub
pop
call
cltd
rcl
mov
add
push
lcall
sub
stc
adc
loopne
push
nop
add
add
xchg
call
jg
jmp
push
mov
repz
in
and
xchg
loopne
adc
lock
jle
add
or
ljmp
xor
cli
add
cmp
cmp
test
cmp
pop
popf
ss
add
nop
push
outsl
add
mov
or
icebp
mov
out
add
adc
movsl
pop
fistps
stos
mov
subb
jge
mov
in
xor
je
jns
outsl
add
and
add
ja
push
add
adc
jne
mov
pop
xchg
pushf
add
inc
and
cmp
sarl
mov
sbbb
adcb
or
xor
push
or
and
int3
jp
call
out
fld1
ret
add
and
cwtl
mov
fwait
aaa
es
or
pop
add
bound
cltd
lods
or
sub
les
ja
push
mov
testb
inc
or
loop
sub
repnz
jl
inc
cld
cmp
mov
pop
lea
xchg
stc
imul
mov
mov
xchg
frstor
sbb
in
jle
loopne
xchg
in
int3
push
scas
mov
icebp
mov
adc
cmp
adc
cmpl
iret
in
mov
mov
mov
mov
setge
jno
orl
stc
pusha
jecxz
xor
data16
lea
incl
dec
cmp
sub
clc
nop
test
pop
and
add
xor
mov
and
xor
dec
ret
jg
pop
in
push
repnz
add
mov
push
shll
push
sub
and
popa
clc
cs
int3
cmp
push
jmp
push
mov
adcb
adc
add
in
fs
jecxz
jb
inc
mov
insb
pop
xchg
sub
pusha
xor
xor
jo
add
rorl
cli
jbe
add
and
xor
sub
sti
movsb
setle
inc
sbb
push
cmp
pop
mov
lret
add
cs
pop
data16
xchg
in
fstpt
inc
jae
add
and
test
into
nop
adc
dec
mov
rorb
dec
mov
add
dec
add
jmp
inc
add
stos
mov
mov
pop
cmp
icebp
adc
fdivs
lahf
cmp
cmp
add
mov
add
jle
andb
dec
testl
cmp
sbb
dec
mov
push
in
add
dec
push
sub
jge
cmp
push
xor
push
jmp
cwtl
test
movsl
xor
cmp
bound
fdivl
in
call
add
ds
xchg
lds
mov
pop
out
sub
cmp
jnp
lret
jno,pn
or
mov
addb
or
push
dec
add
or
add
aad
int
ret
and
cwtl
out
repnz
les
jge
insb
outsl
push
sbb
mov
and
stos
cmpsl
inc
vmovaps
orl
imul
fdiv
sbb
add
int3
shll
stc
mov
xchg
popf
in
mov
sti
jl
shlb
pusha
push
cmpb
mov
je
je
push
repz
mov
push
sbb
xor
addb
xor
jb
and
test
pop
add
xchg
fs
inc
outsl
mov
add
je
mov
dec
sub
add
sub
aas
mov
movsb
sbbb
shlb
mov
fisubrl
in
push
gs
add
xchg
lods
sti
add
cmp
pop
or
add
not
xor
lds
add
call
jbe
mov
fwait
xlat
data16
cmp
add
in
add
mov
dec
adc
gs
lds
push
or
dec
and
adc
in
filds
add
fsubs
add
xchg
xor
inc
cmp
repz
stos
pop
jo
push
incb
inc
mov
push
sarl
adcb
mov
xchg
jl
xorl
pop
jp
nop
loope
mov
cmpl
shrb
jecxz
in
or
popf
add
mov
or
cmp
in
mov
int3
add
add
dec
push
cmp
add
push
add
xchg
lods
mov
shrb
jle
pop
int3
mov
aaa
ss
pop
adc
outsl
sbb
pop
data16
pop
xchg
mov
loopne
pop
loope
je
add
ret
rol
adc
mov
pop
lahf
or
and
in
cmp
xchg
push
in
loop
and
xor
jne
add
fwait
push
lcall
bound
push
mov
add
inc
int3
pop
xchg
push
aaa
jo
push
stos
movsb
mov
xor
nop
js
in
and
das
bound
jns
and
sub
xchg
cld
sbb
popa
jns
inc
or
sahf
sbbl
sbb
mov
xchg
in
xchg
xchg
scas
out
xor
test
mov
dec
in
push
test
or
cmp
cmc
adc
popf
daa
mov
bnd
lcall
xchg
xchg
nop
adc
fwait
inc
add
arpl
push
imul
in
jbe
cmp
adc
andb
add
shr
cmovge
shlb
or
in
test
adc
cmp
add
mov
cmp
fists
sbb
mov
mov
xor
add
mov
cmp
sbb
mov
das
hlt
cmpsb
add
test
mov
jns
testb
xchg
movsl
sub
jb
add
lods
sbb
mov
pop
orl
jecxz
test
bound
pusha
mov
add
aad
aam
cmc
push
push
movsb
lcall
scas
stos
or
or
jbe
out
mov
add
int3
lds
cmpb
xchg
sbb
sbb
cmpsl
icebp
add
cmp
lods
inc
add
dec
das
xor
jne
xor
mov
add
out
leave
mov
call
jbe
jo
push
pop
jns
jmp
jg
scas
lea
xchg
add
test
fwait
add
xorb
pop
cmc
imul
call
xchg
sbb
fiadds
cli
jb
bound
out
loope
movsb
add
lahf
add
call
mov
outsb
sahf
ficomps
jae
iret
imul
dec
pop
pushf
ds
add
push
jge
add
cmp
and
xchg
inc
and
xor
sbb
fdivs
add
into
es
orb
lret
add
add
pop
test
jp
jno
leave
jle
call
or
and
pop
or
add
fldt
addl
dec
add
stos
sub
dec
adc
addb
jmp
push
add
xor
ficompl
inc
fldl
notb
bound
in
or
mov
scas
sbb
jg
add
mov
adc
lods
or
rcrl
mov
cmp
cmp
push
jmp
add
lock
jns
or
mov
cmp
mov
xor
xor
addl
add
jecxz
sbb
cmpsl
scas
push
test
pop
cmp
fsub
and
add
iret
mov
and
cld
cmp
nop
add
sub
mov
mov
cmp
js
dec
push
add
hlt
cwtl
in
clc
imul
mov
push
mov
icebp
into
inc
inc
hlt
ss
mov
lods
add
int
adc
test
xor
mov
adc
fimull
inc
mov
add
fstps
in
sysexit
add
lcall
ss
in
pop
xchg
xchg
lret
inc
mov
and
aaa
pop
or
mov
inc
out
nop
add
xchg
xchg
fisttps
roll
sub
or
pop
sub
shlb
packuswb
and
bound
dec
lds
pslld
push
jg
jl
add
imul
mov
repnz
loopne
insl
xor
jge
rolb
mov
mov
inc
add
cmpsb
and
xlat
cmp
mov
jp
mov
lea
mov
les
push
shrb
add
sub
adc
mov
clc
hlt
lods
pop
jge
sub
add
sbb
test
inc
adc
out
je
dec
incb
insl
out
pop
bound
pop
icebp
mov
cld
hlt
xchg
sbb
pusha
mov
mov
aam
pop
mov
cmp
inc
lahf
rorb
add
pushl
pop
jmp
pusha
pushf
mov
xor
ja
ja
add
into
dec
addb
pshufw
adc
or
aad
sub
pop
mov
out
ja
insl
loope
pop
sub
and
cmp
insb
jns
ror
sub
add
cld
pop
mov
out
fistps
jno
in
data16
xchg
mov
mov
cmp
mov
scas
jbe
nop
adc
xor
sti
loope
lock
cmp
cmp
xor
fmuls
cwtl
lock
push
add
clc
out
mov
and
std
mov
out
arpl
xchg
add
sbb
and
sbb
cmp
nop
int
xchg
dec
xor
xchg
xor
mov
add
insb
mov
jnp
popf
jge
dec
fldl
js
inc
adc
ja
ljmp
mov
dec
pop
pop
loop
push
ja
jl
pop
mov
cmp
add
push
cli
shlb
and
jno
add
xor
add
xchg
pop
inc
clc
rolb
push
cmp
sti
addb
pop
mov
add
jb
or
jae
mov
dec
adcb
and
out
loopne
add
inc
in
scas
cmp
and
mov
iret
sbb
and
lahf
cmp
scas
fstp
dec
cmpb
jno
mov
jmp
push
or
shlb
mull
stos
into
add
fcomi
cwtl
pop
inc
mov
lods
stc
and
xor
xor
xor
loopne
add
lret
sbb
pusha
and
daa
sbbb
adc
lahf
adc
enter
mov
pusha
stc
xor
popa
popf
lock
xchg
in
push
pop
push
in
xchg
loopne
cmc
pop
jnp
adcl
jl
enter
inc
and
and
xor
pop
arpl
add
xchg
mov
add
mov
sbb
xor
int3
lods
test
iret
rorb
les
mov
int3
sbb
and
dec
into
push
adc
adc
adc
mov
jns
out
mov
add
xor
lock
sbb
stc
pop
adc
fsubp
sub
aad
cwtl
lcall
jo
nop
mov
aad
rcrl
add
jae
jb
push
bound
jg
bts
jnp
adc
movsl
cmp
out
sarb
cmp
and
sbb
aad
scas
flds
imul
cmp
sbb
add
jg
mov
push
and
push
xchg
xchg
sarb
cmp
cmp
and
dec
jmp
sar
add
pop
and
mov
add
pop
jge
add
push
mov
dec
xlat
jno
add
hlt
sbb
push
fildll
mov
inc
mov
nop
and
cmp
stos
shll
xchg
xchg
push
add
dec
sbb
or
test
cmp
mov
lea
cltd
mov
jo
xchg
cmp
mov
clc
cmp
dec
add
mov
push
std
fisubs
add
filds
dec
pop
add
idivb
pop
jbe
xor
incl
jns
adc
int3
inc
ror
mov
xchg
ljmp
mov
mov
cmp
cli
mov
xlat
ficoms
mov
dec
and
mov
dec
dec
sbb
daa
jp
out
sbb
popl
push
lahf
pushf
xchg
out
fisubrs
mov
fsts
sbb
add
lret
pop
push
add
cmp
insl
add
lds
ret
rcrb
in
xor
add
gs
sub
imul
lea
add
iret
mov
fnstenv
ljmp
in
xchg
mov
insb
jo
mov
int3
in
jbe
adc
cmp
jl
arpl
inc
movsb
add
mov
test
ret
add
push
popf
inc
test
add
pusha
pop
push
icebp
insb
pop
andb
add
js
sub
inc
cltd
mov
adc
aam
std
add
cmp
popf
add
inc
push
sbb
mov
add
or
pop
push
add
push
and
add
call
push
out
sub
adc
xlat
xchg
mov
nop
or
movsb
sub
mov
mov
sbbb
mov
fwait
test
mov
fbstp
leave
add
mov
pop
lock
sbb
adc
insb
add
scas
ja
loopne
xchg
arpl
inc
movsl
popf
popw
and
push
pop
scas
stc
push
add
cmp
add
sbb
addr16
adc
mov
add
dec
add
repnz
xlat
addl
dec
insl
in
xor
and
cmpsl
or
xchg
add
frstpm(287
into
pop
ficoml
out
mov
sub
adc
pop
daa
nop
jg
aaa
rcrl
lret
add
cwtl
cmc
push
mov
add
arpl
pop
add
add
mov
scas
pop
mov
test
add
xor
push
or
push
add
movsl
jae
test
test
pop
sbb
out
sbb
jmp
mov
rorb
or
push
push
stc
push
loopne
in
popa
cmp
mov
cmp
in
movd
scas
push
loopne
jp
outsl
daa
add
sbb
out
loope
lsl
dec
push
test
xchg
pop
cmp
sbb
lds
cwtl
add
call
pop
testb
out
add
cmp
mov
push
dec
mov
add
cli
add
lods
ret
lods
or
popa
cmp
sti
mov
add
lds
add
pop
iret
mov
test
jp
xchg
jne
add
shlb
popa
shl
mov
add
push
and
push
cmp
mov
test
test
pushf
repnz
add
adc
jle
mov
add
test
cmp
outsb
lock
pop
scas
and
loope
pop
dec
orb
es
call
xor
inc
add
and
lcall
jno
or
jl
jo
pop
pop
fs
test
add
mov
clc
fstps
push
or
test
imul
add
xchg
lret
jp
int3
sbb
pop
inc
dec
mov
fsubrs
cmc
xor
pop
add
sbb
sbb
sub
ja
xor
inc
aaa
add
pop
outsl
pop
push
subb
add
sar
add
add
inc
mov
aaa
mov
out
mov
add
xor
mov
cs
add
cmp
out
lret
mov
pop
repz
shlb
xor
or
pop
xlat
mov
out
inc
add
sbb
xchg
repz
pushf
xchg
pop
rcl
xor
add
popa
lahf
add
adc
jbe
dec
movntq
cmpb
enter
stc
sub
dec
add
xchg
inc
into
dec
pusha
data16
and
mov
jg
mov
adc
fsubrl
xchg
and
pushf
in
add
enter
cmp
pop
mov
in
add
movsl
mul
add
sub
out
and
mov
insb
shlb
jl
jo
adc
lret
or
mov
push
mov
add
cmp
fiaddl
cmp
lds
cmp
dec
movsl
das
out
aaa
add
lret
add
push
sbb
cmp
in
push
mov
sbb
and
hlt
sub
ficompl
or
xchg
xchg
insb
mov
add
inc
test
iret
sbb
rorb
outsl
arpl
out
or
je
stos
adc
xorb
mov
ret
test
out
add
cmp
and
xchg
aas
fidivl
add
sub
ret
adc
mov
mov
cmc
insb
push
xchg
fsubr
add
or
pushf
sahf
sbb
imul
test
mov
ljmp
push
add
or
and
bound
scas
pop
fiadds
int
pusha
ret
sarb
mov
adc
insl
rorl
inc
call
pop
mul
inc
jae
mov
dec
sti
mov
sbb
cltd
jp
adc
adcb
testl
mov
xor
jb
add
xchg
mov
rcll
and
sbb
leave
ficompl
shrb
dec
lret
test
je
insb
add
aaa
popa
jecxz
pop
pop
fistps
xchg
imul
sbb
movsb
inc
inc
aas
fdivrl
ljmp
xorl
adc
fcmovnb
rorb
ret
cli
aaa
sbb
mov
insl
push
jl
int
jp
add
lret
fstl
fnstcw
ret
js
stos
cmpsb
pop
lods
add
add
aaa
into
mov
mov
setae
outsl
cmc
popa
sub
mov
add
mov
stos
add
ljmp
add
sub
xchg
and
add
sbb
int
addb
add
fs
add
aas
jae
add
jbe
or
nop
add
pop
dec
and
mov
cmc
jae
pop
test
fstp
push
sbb
add
push
jp
ds
repnz
dec
cld
jbe
jnp
aad
fs
fwait
sbb
int3
nop
rcll
out
add
cmp
add
out
push
xchg
cmp
lods
pop
cmp
rolb
push
and
add
cwtl
cmp
clc
push
mov
jge
pop
loop
inc
test
or
ja
unpckhps
arpl
sbb
add
scas
jb
mov
mov
mov
ret
fcomp
adc
sbb
test
pusha
mov
stos
inc
add
lds
test
outsl
adc
cmp
adc
add
fcomip
sbb
jp
leave
data16
popa
add
movsb
fcos
rol
inc
lds
sbb
inc
sahf
je
add
lcall
push
adc
mov
lea
cmp
or
or
add
ret
mov
push
cmp
mov
stc
test
cmp
fstps
addr16
call
jbe
movsb
aam
out
or
rolb
or
sub
test
xlat
add
outsl
sarb
les
xchg
add
push
lret
out
jbe
lret
pop
daa
mov
stos
enter
add
push
iret
dec
sbb
add
inc
lret
dec
mov
xchg
jle
insb
cmc
dec
bound
fmull
jl
xchg
xchg
leave
or
pop
hlt
add
subl
fimull
imul
add
idiv
sti
bndldx
pop
loope
push
je
push
popa
sub
jge
les
xchg
or
pushf
add
push
negl
imul
jle
pushf
cmp
lahf
cmp
pop
jg
cmp
adc
mov
jle
pop
cmp
jmp
adc
jnp
mov
pop
insb
test
mov
outsb
imul
pusha
xchg
dec
push
add
push
add
push
js
cltd
or
pop
test
out
and
mov
stc
inc
pop
add
fdivr
dec
jbe
add
jecxz
xor
cmp
cltd
mov
sbb
add
les
add
mov
insb
and
xor
or
or
jne
inc
mov
mov
imul
pop
lcall
mov
push
mov
out
cmp
je
mov
jg
dec
fst
dec
testb
test
jo
mov
es
inc
push
mov
add
in
out
in
pop
push
scas
mov
add
inc
js
add
add
call
arpl
or
leave
jno
cmp
test
call
ljmp
dec
arpl
inc
add
fs
mov
mov
push
and
shrb
movsb
repz
xchg
add
in
cwtl
cs
xchg
sub
inc
fiadds
push
std
inc
fcompl
fwait
pop
int
daa
cs
in
or
mov
addb
inc
inc
lock
sub
xchg
movsb
and
xchg
fidivl
js
neg
mov
aas
cmp
sbb
insb
mov
rclb
xorl
in
dec
scas
clc
rcrl
icebp
inc
ljmp
lcall
cwtl
clc
xchg
in
add
movsl
cmp
rclb
or
push
out
cltd
clc
and
add
in
mov
inc
loop
add
dec
je
add
jmp
cwtl
shl
jnp
pusha
xchg
call
dec
repnz
sub
push
mov
xchg
divb
dec
jo
add
imul
mov
call
xchg
mov
add
arpl
mov
add
loopne
call
jns
or
rcrb
or
jns
and
jg
inc
aad
shlb
insl
push
pop
insb
loopne
xlat
and
push
shrb
jmp
add
add
mov
and
nop
push
inc
mov
and
xor
insb
call
cmp
cs
mov
jp
jecxz
nop
push
iret
sbb
cli
xchg
add
xchg
push
pop
jb
jg
add
xor
repz
rcrb
add
mov
sti
mov
add
stos
mov
js
loopne
lahf
addr16
adc
adcb
push
jne
stos
arpl
enter
xor
fwait
inc
mov
pop
sarb
xor
cmp
test
add
add
cwtl
leave
ficoml
imul
sahf
rcrl
js
mov
mov
inc
add
adc
std
fildl
cli
notl
mov
lods
data16
fs
mov
sbb
xchg
lahf
sbb
inc
bound
out
mov
xchg
xchg
mov
popa
or
mov
in
jp
cmpsl
int3
xor
add
insb
enter
in
xchg
scas
sahf
adc
inc
push
add
sub
data16
cmp
into
cmp
xchg
sub
add
adc
push
mov
xchg
push
and
jmp
test
out
dec
inc
stc
cmp
inc
xchg
jb
stos
imul
add
mov
add
add
jns
dec
inc
or
add
cltd
ficomps
cmp
ret
or
rcrb
enter
add
loope
pop
ljmp
hlt
out
push
movsl
outsl
push
aad
add
push
daa
mov
adc
mov
paddusb
mov
inc
shlb
inc
jecxz
dec
insb
dec
dec
test
stc
mov
pop
mov
rcrl
inc
jl
fiadds
add
jg
or
adc
push
xchg
pop
cld
xchg
je
in
pusha
daa
pop
shrl
push
testb
jecxz
mov
sbb
mov
xor
stc
repz
jae
add
push
lock
or
inc
stos
jmp
push
outsb
ret
push
mov
mov
aad
rolb
or
push
jg
daa
add
dec
adc
in
das
add
in
lret
jae
add
dec
inc
sarl
push
sbb
scas
and
test
cpuid
ss
fsts
adc
ret
mov
lahf
pusha
test
pop
pop
mov
dec
cld
inc
cmp
movsb
and
out
xchg
sub
push
mov
cwtl
sbb
add
mov
outsb
or
stos
inc
mull
in
pusha
repnz
push
xchg
dec
jne
jbe
mov
pop
add
push
iret
add
cmc
jmp
adc
sbb
sbb
inc
pop
shlb
nop
cmp
add
mov
sub
cmp
xor
mov
add
mov
inc
mov
test
add
shlb
mov
adc
pop
fwait
xor
ja
push
mov
mov
jbe
pop
test
mov
ja
jnp
add
imul
mov
inc
popl
sub
aam
jns
push
inc
add
cmpsb
and
xchg
cmp
popf
adc
pop
push
push
popf
into
sar
add
pop
pop
mov
dec
add
jle
adc
mov
push
sub
pusha
inc
or
gs
clc
add
mov
dec
jae
sbb
mov
pop
jmp
cmc
fwait
xchg
daa
in
adc
insb
and
ss
cli
test
repnz
ret
sbb
pop
add
adc
pop
daa
addb
testl
imul
xor
sbb
and
andb
repnz
data16
jo
cmp
rolb
sbb
aas
jge
lds
xchg
add
mov
add
mov
push
adc
add
add
cmp
and
mov
sub
movsl
push
sub
adc
testb
pop
pop
push
lea
xchg
pop
xor
add
push
enter
or
aam
das
adcb
mov
icebp
in
adc
jb
mov
add
popa
loope
and
pusha
sbb
dec
sub
push
pop
add
icebp
adc
adc
add
pop
adc
sub
add
sub
xor
cmp
cmp
cmpsb
fldcw
ljmp
push
pop
mov
push
adc
cmc
push
xor
clc
mov
fucomip
fs
sbb
dec
lret
ljmp
mov
cmc
movsl
and
inc
bound
test
cli
inc
mov
jno
es
xor
ret
or
xchg
add
popf
sub
cmp
popa
sbb
xchg
add
imul
xchg
popl
cli
or
add
hlt
inc
les
jbe
or
imul
fimull
popf
and
add
ret
jne
or
mov
add
push
dec
fisubrs
bound
es
add
fdivl
cmp
call
sbb
inc
icebp
add
rol
mov
adc
insb
imulb
and
xor
adc
mov
fwait
and
cmp
and
or
mov
sub
add
mov
sbb
push
add
dec
mov
aaa
fwait
inc
adc
or
pop
mov
adc
lods
rolb
movsb
add
jmp
mov
sub
mov
rcrl
xor
in
mov
jecxz
xchg
popf
mov
push
mov
sbb
call
int
sub
pop
adc
or
sub
sbb
or
psrlw
mov
loopne
dec
push
test
dec
mov
inc
adc
mov
rcr
cwtl
sbb
mov
lahf
or
pushf
and
mov
into
or
incb
in
add
lret
pusha
and
and
sbb
movsb
adc
xchg
repnz
in
add
rolb
sub
sbb
nop
out
clc
aad
sbb
fldt
ljmp
pop
lods
inc
add
or
mov
loop
fmull
cmp
jl
mov
outsl
cmp
jmp
les
lds
test
aad
pop
lods
fdivs
sub
in
fadds
cmp
inc
dec
inc
mov
add
jb
mov
fwait
push
andb
lcall
leave
lods
das
mov
je
jo
mov
or
orl
cmp
dec
jne
sbb
push
adc
outsl
pusha
jmp
add
lahf
cmp
mov
test
aad
sub
lahf
xchg
mov
jae
rcr
stos
stc
out
cmp
mov
in
or
movntq
fs
sbb
inc
jb
das
sbb
add
mov
pop
cmpsb
inc
adc
xchg
repnz
flds
push
dec
mov
aam
fsub
rorl
bound
roll
js
stos
int3
xor
push
push
push
push
fcompl
push
fcoms
jmp
out
sub
adc
mov
mov
jb
add
cmc
xchg
mov
jnp
add
mov
stos
mov
jae
mov
ljmp
sub
addl
jp
shlb
jl
test
lahf
pop
mov
xchg
test
add
xlat
mov
sbb
imull
pop
fldl
push
inc
and
test
je
mov
xchg
shlb
push
insl
incb
jp
mov
mov
into
add
jl
lret
xor
imul
adc
xorb
fisttpl
cmpxchg
or
push
xor
stos
lret
nop
adc
shrb
int3
sbb
push
sbb
cld
mov
in
rorb
mov
push
rclb
dec
or
cmp
cmpb
lds
adc
add
mov
es
dec
pop
jno
sbb
add
push
stc
test
add
filds
or
sbb
mull
cld
add
test
fcmove
clc
movsb
or
ds
call
fistpl
ret
mov
dec
push
in
fdivs
aaa
pop
add
push
negb
xor
sti
jmp
pop
sub
stc
orb
lahf
jnp
jb
add
shrb
mov
rorb
add
and
mov
sub
xchg
movsb
add
mov
add
cmp
push
sar
ljmp
mov
cmp
cld
add
fiadds
in
std
pop
lods
mov
fbld
and
clc
sbb
adc
shlb
hlt
inc
push
in
mov
inc
xor
add
inc
add
cmp
mov
sbb
mov
test
nop
clc
stos
fadds
push
cs
mov
inc
sbb
loope
add
pop
test
or
push
sahf
shlb
sti
in
push
sub
adc
sbb
out
daa
add
dec
nop
movsb
int3
adc
rorl
mov
add
jmp
pop
ss
mov
mov
iret
add
mov
mov
shrb
add
pusha
leave
aas
adcb
inc
dec
repz
pop
dec
addb
test
jmp
nop
mov
fidivl
add
shrb
or
mov
pop
and
add
aad
ljmp
push
push
dec
mov
fidivs
cmpl
aad
add
xor
test
mov
cli
mov
pop
cmp
outsb
or
fwait
mov
ret
cmp
arpl
adc
add
std
mov
sub
cmp
add
mov
je
add
and
push
push
stos
sarl
add
adcl
ret
int
pop
mov
add
pop
xor
sub
aam
scas
in
jns
and
pop
daa
add
and
lds
add
push
loop
mov
roll
sahf
mov
mov
test
add
add
test
mov
ja
in
add
push
add
xor
aam
mov
lods
inc
add
aam
push
xchg
add
or
lcall
pop
pop
add
inc
lea
sbb
out
xorb
testb
cmp
adc
lea
lret
scas
int3
sarl
mov
out
inc
ljmp
add
sub
les
xor
outsb
int
or
cld
jns
repnz
call
shlb
xchg
mov
cltd
repz
jns
and
add
dec
and
call
add
sub
loopne
pop
add
scas
ret
stos
add
sbb
and
sarb
dec
jmp
es
into
cld
aad
xor
mov
xchg
add
mov
test
or
call
pop
dec
fisttpl
imul
mov
sahf
dec
pop
add
push
xchg
dec
lods
dec
add
pop
xchg
test
out
mov
sub
addr16
icebp
rcll
test
add
xor
jbe
lret
cmpsb
or
lods
mov
add
jp
sub
sahf
inc
insl
clc
fiaddl
xor
scas
lahf
testb
xor
xchg
repnz
je
or
mov
push
add
push
add
in
push
mov
dec
lock
add
dec
leave
xchg
jnp
sbb
dec
or
lea
pop
mov
out
ret
inc
mov
pusha
add
rcrb
adcl
or
lret
mov
xor
pusha
sub
cmp
cmc
dec
lret
fs
add
inc
iret
fists
dec
push
cmp
adc
aaa
sahf
sbb
mov
add
cltd
push
cmp
cmc
cld
dec
loopne
pusha
ret
repnz
xor
in
add
psubb
pop
ss
add
inc
or
out
adc
cmp
das
mov
call
iret
hlt
mov
and
es
cmp
add
pop
dec
mov
and
in
push
cmp
mov
add
xor
xorl
out
les
aaa
xor
add
and
adc
sbb
sbb
cmp
pop
inc
add
jns
push
and
mov
mov
adc
jae
roll
dec
cmp
xchg
push
jb
push
out
stc
negl
fcoml
inc
pusha
push
jmp
or
ja,pt
add
push
imull
test
xorl
pop
and
inc
cwtl
adc
mov
popa
lock
test
ja
add
xchg
mov
add
int
js
dec
dec
fcomp
add
jl
movsl
mov
inc
add
test
add
adc
mov
cmpsb
add
cmp
cmp
shll
push
popf
clc
jo
dec
leave
test
xor
adc
dec
test
mov
enter
adc
push
pop
push
sbb
les
pop
rolb
pop
add
mov
add
je
jbe
mov
daa
aas
sbbb
dec
loopne
xchg
inc
mov
sub
jnp
xchg
inc
adc
cld
add
in
inc
add
add
popf
into
ret
pminub
and
sar
loop
repnz
add
adcb
rcll
lret
loopne
lcall
or
test
outsl
sahf
add
testb
pop
sub
add
lods
gs
add
rclb
add
pop
pop
and
push
call
int3
enter
test
add
mov
cld
fisubs
lods
mov
lods
imul
xor
insl
mov
and
xchg
test
dec
rolb
or
call
sbb
or
dec
sbb
icebp
xchg
fldl
or
and
pop
jo
mov
add
sub
les
xchg
pop
add
cmp
cmp
fnstenv
test
js
add
lds
jne
sbb
push
gs
lods
add
hlt
jp
or
xchg
mov
xlat
inc
lock
push
cmpsb
push
fwait
push
inc
jg
int
in
xlat
popa
add
out
and
add
sub
outsb
filds
adcb
mov
leave
jb
dec
aas
das
lods
ss
sbb
gs
repz
sbbb
mov
in
jb
lods
push
add
xchg
and
fadds
mov
sub
xchg
mov
fists
div
mov
insb
outsb
mov
lret
sti
add
aam
xor
push
xchg
cli
jno,pt
in
add
adc
xchg
adc
inc
shrl
out
cld
mov
insl
int3
lsl
lret
negb
and
xchg
test
movsb
mov
subl
cmp
ret
and
je
xor
addr16
push
add
or
fstp
add
sub
adc
fildll
add
fmuls
rcrl
pop
add
xor
lods
inc
sub
pop
xor
sub
les
push
jmp
push
test
adc
xchg
dec
push
fld
inc
sti
add
jne
mov
sahf
sbb
inc
xchg
lods
mov
ljmp
jns
sub
out
mov
cmp
lds
aas
pop
mov
in
sbb
sub
mov
movsb
shlb
cmp
mov
lock
or
mov
fs
movsl
inc
cwtl
push
add
fiaddl
mov
ljmp
cmp
cli
iret
lock
int
cli
imul
mov
in
inc
jb
sub
xchg
jbe
inc
and
dec
pop
push
cmp
pop
lods
mov
xchg
jmp
add
adc
stos
clc
and
mov
dec
dec
inc
pop
popa
mov
jmp
imul
jl
add
hlt
inc
mov
add
mov
pop
shlb
pop
ds
mov
inc
std
add
fidivs
scas
jmp
aam
fsubrs
cmp
cmc
sldt
pop
mov
adc
add
shlb
addb
mov
aas
xchg
add
fisttpl
push
add
aam
ret
loop
enter
or
sti
xor
sub
ret
add
or
sub
scas
add
cli
add
imul
push
or
push
lsl
xchg
pop
add
dec
gs
mov
mov
rclb
cwtl
or
or
jge
sub
mov
jns
add
dec
adc
inc
cmovns
add
xchg
call
int3
call
mov
adc
add
imul
sbb
shr
fwait
xchg
js
add
mov
mov
ret
mov
clc
xchg
add
mov
jae
mov
add
push
das
int3
lret
iret
push
mov
mov
fiadds
mov
mov
add
loope
push
add
addr16
jno
lods
or
add
popf
mov
push
add
fdivrp
mov
jge
into
subb
jp
add
outsl
xchg
push
enter
add
shr
sub
or
sbb
jmp
popa
iret
repz
enter
mov
mov
ss
mov
jnp
push
rorl
pop
push
push
cltd
lock
inc
cwtl
add
ret
movsb
push
adcb
add
sbb
dec
xchg
inc
jecxz
mov
cmp
stos
rep
cmp
add
or
in
mov
aad
and
pop
jns
cwtl
loopne
test
movsb
push
psubb
mov
mov
add
lea
push
jbe
pop
out
fsubrp
push
xor
in
sbb
js
outsb
inc
mov
sub
test
xor
es
lods
mov
add
xorb
ljmp
pushl
cwtl
je
inc
clc
sub
xor
xchg
dec
icebp
pop
adc
in
out
xchg
mov
add
mov
fwait
popf
mov
pop
add
inc
mov
sti
add
inc
add
dec
sbb
data16
mov
xchg
repnz
lods
push
jmp
pop
push
pop
insb
cs
loop
ds
dec
addb
ja
inc
sub
rcll
push
jle
gs
sbb
xchg
jnp
mov
xor
jbe
mov
xchg
das
sbb
sbb
lcall
or
movsb
sub
xlat
mov
add
test
sub
outsl
aaa
add
arpl
repnz
jae
jnp
test
std
iret
mov
popa
sub
rcr
popf
ja
mov
shll
add
cmp
push
add
cmp
adc
xchg
jo
sbb
inc
xor
cli
add
mov
mov
jge
les
call
add
xorl
pop
cmc
xor
roll
pop
xor
fidivl
arpl
lock
imul
cmp
jbe
sahf
add
mov
push
cltd
add
imul
xorb
popf
push
fsubr
and
jge
add
sbb
test
addb
ljmp
lods
add
cmp
imul
push
dec
jp
fiadds
add
ljmp
mov
push
add
xor
mov
std
repnz
rolb
loope
xchg
pop
dec
insl
dec
lods
xchg
flds
push
test
inc
dec
repz
xchg
add
pop
add
loop
add
push
push
mov
add
loope
orb
dec
pop
pop
mov
int
xlat
add
dec
and
and
cs
test
icebp
cmp
fiadds
sbbb
add
loopne
inc
dec
sbb
pop
add
mov
and
sarb
pop
in
lods
cli
dec
shr
and
mull
or
add
ret
add
cwtl
daa
pop
jne
les
add
cld
pop
sbb
push
pop
push
mov
dec
add
xchg
arpl
add
add
jb
fwait
add
pusha
fisttpll
nop
call
xor
adc
adc
mov
mov
out
push
sarb
xchg
fisttpll
psubusw
std
inc
mov
lods
pop
and
loopne
mov
adc
mov
or
inc
jecxz
out
mov
xor
call
test
mov
divl
mov
adc
addr16
out
or
xchg
add
lock
inc
push
jl
add
jle
jne
imul
and
aas
jo
mov
call
add
sti
test
inc
js
add
stos
push
repnz
mov
test
fwait
jecxz
mov
jp
add
test
and
jmp
fmull
pop
mov
iret
pop
xor
push
push
push
jae
inc
push
ja
nop
mov
popf
mov
lret
sbb
inc
hlt
movsl
les
add
stos
test
out
sbb
out
js
inc
add
xchg
adc
cmp
xor
inc
lods
dec
je
fwait
lcall
call
inc
fcoms
cli
rolb
sub
jb
les
in
mov
cltd
in
aas
and
mov
std
mov
add
cmc
xchg
dec
aad
inc
js
mov
pop
bnd
jp
test
mov
adc
mov
test
cmp
fists
mov
fwait
pop
pop
iret
inc
pop
add
divb
popa
sub
test
fadds
push
cmp
pop
and
add
mov
scas
mov
mov
lahf
xor
push
add
imul
add
imull
das
test
mov
sub
push
pusha
xor
sbb
sbb
fs
addl
mov
adc
repz
je
cmp
cmp
filds
sbb
add
cmp
xor
cmp
test
add
jns
dec
xor
roll
sub
mov
mov
movsl
outsl
mov
sbbl
mov
push
add
pop
and
xor
push
add
xorb
bound
std
xchg
mov
lods
add
andb
adc
mov
pop
push
adc
aad
cmp
pusha
add
push
push
mov
push
clc
aam
xor
jo
out
pop
fwait
call
adc
inc
mov
orb
pop
add
leave
test
fiadds
push
int
aaa
xor
pop
add
pop
lret
cwtl
popa
mov
mov
fmuls
or
jae
pop
mov
mov
sbb
mov
add
lret
or
hlt
test
ret
std
sub
mov
add
cld
bound
cmpsl
jo
cmp
add
adc
push
mov
sarb
and
mov
aas
xchg
insl
add
lods
mov
push
and
add
scas
add
or
idiv
fs
in
add
dec
arpl
test
or
mov
ret
cmp
add
and
test
pop
mov
in
sub
xchg
inc
xor
fadds
add
insb
and
adc
mov
cltd
push
ds
add
lds
pop
xchg
popl
xchg
iret
mov
int
fcompl
pop
jno
sub
add
mov
nop
inc
xchg
push
mulb
push
out
adc
dec
cmc
ljmp
push
pop
dec
or
sbb
pop
push
dec
loop
jo
jns
lods
jecxz
sub
add
pop
mov
les
add
daa
pop
cmp
fsubrs
jne
cld
and
mov
add
fldt
sbb
and
cli
jns
out
push
aad
inc
push
or
ds
mov
mov
call
inc
adc
xchg
add
adc
nop
cmp
push
mov
imul
hlt
add
in
dec
gs
aad
push
mov
das
testb
or
or
xlat
bound
mov
outsb
pop
dec
lahf
fdiv
es
add
cmp
sub
or
cmp
mov
xor
xchg
inc
repz
popf
out
pop
test
loopne
js
mov
lahf
sar
aas
cmpsb
iret
add
enter
clc
inc
adc
test
pop
lret
push
add
mov
inc
orl
je
loopne
fimuls
add
push
sub
or
pop
pusha
pusha
xor
jle
add
xor
inc
add
gs
imul
push
and
sbb
push
in
adc
add
bound
xor
pop
add
bswap
into
mov
cltd
xor
hlt
daa
add
cmp
scas
pop
jo
adc
rolb
js
xchg
clc
add
sbb
test
mov
dec
orl
scas
test
add
xchg
cmpb
and
and
jo
sub
mov
fstpl
ret
pop
shr
fdivl
fisubl
add
pop
enter
add
mov
mov
xchg
psubb
or
pusha
aas
push
add
lahf
or
rolb
push
xchg
loop
repz
add
xchg
test
mov
addr16
adc
add
cmc
add
fmuls
xchg
sahf
mov
bound
jecxz
push
adc
sub
cmp
push
xor
jno
pop
add
lcall
and
pushf
jmp
cmp
lock
loope
sub
sbb
add
out
xchg
jb
mov
in
aaa
dec
adc
push
and
lret
cmpb
jnp
pusha
dec
mov
pusha
dec
fwait
push
cmp
fcompl
sub
andl
ja
push
add
xor
dec
inc
mov
je
push
shr
mov
insl
hlt
xchg
addl
fstpl
and
mov
lcall
push
mov
test
xor
lock
repz
push
imul
cmpsb
sar
rol
aam
lret
adc
fwait
mov
cmp
xor
add
jbe
pop
push
out
push
xor
loope
and
std
int3
fisubs
push
xor
xchg
mov
sbb
nop
jns
cmp
inc
add
outsb
mov
dec
mov
pop
mov
and
sti
jl
sbb
pop
xchg
cld
cmp
sbb
dec
mov
or
pop
add
inc
mov
loop
add
mov
js
out
xor
icebp
push
je
add
in
mov
mov
sub
sbb
lcall
in
pop
out
sbb
cmp
sub
push
ret
xor
je,pn
leave
jl
add
js
sub
add
jo
pop
pop
ja
add
sbb
sub
jg
sarb
add
push
lret
cmp
test
fdivl
jo
add
sbb
lret
or
xchg
adc
std
lahf
and
or
fldt
lods
int
cmp
fstps
mov
dec
inc
adc
lods
mov
push
imul
push
enter
out
mov
xchg
fs
pop
sbb
xor
adc
inc
loope
lds
inc
cmp
out
push
sbb
in
xor
call
sub
fstl
jp
inc
add
les
test
add
es
xor
aaa
js
std
out
xchg
shll
or
stos
push
je
xlat
cs
clc
loopne
and
pop
pop
stos
dec
jns
mov
dec
xlat
push
mov
mov
test
mov
xchg
sub
int3
add
aaa
add
or
xchg
mov
jmp
or
sarl
sbb
into
call
push
sbb
and
idivb
dec
dec
movsb
or
add
xchg
lock
jo
add
jae
push
icebp
gs
add
pop
bound
inc
add
fidivrs
jae
pop
or
outsb
push
loope
and
ja
test
adc
pop
add
repz
add
aas
dec
into
xor
sbb
push
addl
jb
adc
in
jno
mov
call
loope
ja
or
frstor
testl
dec
addl
xchg
lret
cmc
mov
jg
leave
shll
das
popf
add
aam
out
sub
sbbb
add
push
jmp
loopne
out
xchg
or
mov
mov
add
adc
mov
add
lods
push
jno
xchg
fldt
in
fmul
aaa
or
lahf
stc
out
icebp
add
xor
mov
repnz
lock
dec
sbb
cltd
jno
add
xchg
sbb
cmp
rclb
mov
mov
cmp
stos
mov
or
fdiv
jge
popf
add
or
aad
gs
sbb
add
popa
out
xor
and
or
adc
nop
jbe
idivb
push
add
lret
xchg
adc
inc
daa
cld
mov
xchg
add
test
lods
cmp
call
xchg
jp
add
add
mov
add
je
add
das
clc
cmp
inc
std
adc
rclb
movsb
push
pop
jnp
into
sahf
add
jecxz
dec
add
hlt
sbb
std
mull
xor
add
mov
mov
wbinvd
dec
xor
add
out
in
hlt
mov
push
pop
mov
in
iret
add
mov
or
ret
loop
push
rcrb
xchg
dec
frstor
add
inc
stc
inc
mov
mov
sub
aad
lret
ficompl
jl
push
inc
gs
or
adc
popf
lahf
addb
or
inc
inc
pop
sbb
and
mov
gs
cmp
test
mov
bound
inc
push
add
popa
mov
rcl
dec
mov
add
dec
inc
test
loopne
inc
mov
ror
mov
add
movsb
loop
aas
movsl
xchg
imul
pop
add
sbb
mov
xchg
inc
add
xor
mov
rolb
adc
shll
xchg
inc
sub
sbb
cli
pop
mov
xor
cmp
or
mov
andb
add
clc
pop
enter
bound
xchg
insl
lds
imul
pop
call
out
push
push
sbb
pusha
enter
ljmp
cmp
and
adc
sbb
mov
add
das
sub
data16
aas
cld
and
cld
push
and
push
insl
jge
inc
jno
push
int
mov
add
in
add
add
outsb
xor
ret
add
inc
movsb
stos
clc
jbe
imul
ret
mov
and
das
mov
mov
rol
divl
rep
jnp
or
cmp
out
sub
enter
pop
or
push
mov
inc
loop
lret
and
jmp
xchg
add
sub
push
popl
inc
stos
pusha
hlt
outsb
xchg
js
dec
mov
jecxz
fidivrl
ret
xor
test
pusha
in
xor
add
clc
pop
popf
add
lods
or
add
nop
aad
add
fiaddl
add
pushf
ror
xorb
inc
xor
jl
push
cmp
inc
push
mov
adc
dec
add
fsubs
dec
xchg
mov
cltd
stos
mov
loop
xor
cmpsl
jle
push
push
jnp
jge
add
xchg
sub
add
xlat
fstl
add
loopne
mov
push
pop
cltd
bound
add
rorl
xor
adc
test
mov
loop
cmovp
sub
xchg
insb
jl
jbe
xor
adc
lds
push
add
add
cwtl
rorl
nop
push
add
jle
enter
jmp
aam
and
adc
jb
mov
addr16
xchg
pop
push
pop
es
psubd
push
rol
cmp
add
push
and
push
ja
cmp
jb
or
nop
sti
loope
add
cld
xchg
shrb
mov
pop
cmpsl
shl
das
add
jg
cmp
push
inc
lods
inc
xchg
adc
cmc
xor
fldcw
movsl
mov
jmp
mov
std
lods
mov
dec
jle
popa
jg
dec
leave
cmpsb
movsb
mov
jl
dec
add
add
xor
adc
jmp
xor
sbb
add
push
stos
xchg
popa
dec
mov
jb
add
cld
pop
test
pushf
cwtl
negb
fmulp
addb
and
pop
xchg
cmp
sub
es
inc
out
adc
cmp
nop
adc
fnstsw
mov
add
movl
pop
mov
push
out
xor
test
mov
jns
inc
pop
lret
add
mov
cwtl
mov
jae
loop
cmp
sub
jns
ljmp
pusha
add
mov
aad
add
out
jnp
sarl
jp
add
mov
int3
daa
add
adc
movsb
add
mov
mov
lods
andl
xlat
std
mov
add
mov
xor
add
and
add
sbb
push
lcall
loop
mov
loope
mov
testl
or
je
sbb
xchg
lcall
lods
hlt
test
adc
push
test
add
rolb
add
adc
add
shrb
popa
or
jne
push
pop
push
ret
loopne
pop
aad
xlat
out
sub
mov
cltd
jge
pusha
outsl
pusha
or
add
insl
dec
sbb
imul
pop
sbb
sbb
adc
push
add
xchg
jae
xlat
into
add
mov
or
xchg
pop
movsb
nop
add
icebp
ss
sbb
dec
and
scas
xlat
add
jns
push
add
mov
ljmp
call
fwait
dec
paddw
mov
ret
add
pop
mov
movb
notl
pushl
hlt
mov
inc
and
fadds
pop
fwait
add
xor
push
dec
mov
or
sbb
sub
add
xchg
dec
xor
sar
sbb
or
ret
pop
add
mov
mov
jae
mov
lds
jg
dec
sbb
dec
data16
xor
mov
cmp
insb
in
add
add
lahf
xchg
adc
rorb
and
sub
push
mov
pop
mov
in
repnz
inc
and
int
pop
inc
add
pop
insl
les
inc
push
jp
xor
ficompl
dec
pop
add
ret
lds
aaa
int
lret
mov
btr
pop
movb
mov
or
push
jecxz
pop
mov
jg
inc
aam
mov
repnz
mov
sub
icebp
pop
push
adc
popf
inc
gs
push
fiadds
lcall
inc
test
ss
sbb
mov
mov
pop
bound
and
push
adc
add
or
mov
add
in
popf
test
inc
inc
inc
xchg
adc
add
ds
add
nop
roll
push
aad
mov
adc
add
xlat
int3
lahf
dec
cwtl
stos
in
repnz
jge
pusha
iret
adc
add
clc
and
push
jg
or
jle
scas
and
stos
and
cmc
aam
movl
xchg
je
jle
mov
sbbl
testl
int3
pop
mov
adc
inc
jmp
jno
loop
sbb
xchg
pop
cmp
cltd
pop
idiv
fcmovb
pusha
push
cmp
dec
out
cmp
fadds
or
xchg
inc
jb
add
xchg
out
jo
add
insb
or
fsubl
sbb
sahf
mov
mov
mov
pop
repz
pop
jae
inc
adc
out
xor
cmp
mov
lock
add
adc
jg
inc
push
insl
imul
add
icebp
cmp
or
decb
sub
jle
adc
push
push
gs
mov
push
mov
movsb
adc
test
cmp
gs
add
sbb
das
inc
pop
push
jle
push
xchg
dec
mov
ret
add
xor
orb
pop
mov
add
scas
or
pop
inc
add
sar
and
mov
add
push
mulb
add
xchg
and
insb
push
mov
lock
sbb
test
push
pusha
xorb
mov
jae,pt
add
jg
xlat
cs
push
jmp
inc
pop
ret
sub
and
in
aam
mov
jp
mov
movsb
les
add
adc
jg
popf
test
aas
push
add
jb
dec
or
mov
pop
add
sarb
cwtl
add
in
pop
testb
outsb
sub
std
mov
insb
mov
cmp
mov
pop
push
movsb
mov
dec
rcll
push
add
jae
pop
imul
pushl
movl
add
mov
decb
cmc
add
mov
outsl
jle
xchg
ds
push
adc
fsubrl
mov
add
repz
sub
stos
mov
pop
xlat
inc
sbb
in
cmp
add
adc
sbb
ret
popa
outsl
mov
fistpl
ja
adc
jnp
xchg
jge
loop
pusha
pop
loope
push
xchg
pop
clc
jns
push
sbb
out
add
cmp
dec
push
fmuls
popf
xchg
scas
jo
fsubrs
rclb
xchg
sub
dec
js
add
jge
pop
dec
rcrb
imul
pushf
std
add
sarl
jno
into
mov
add
pushw
xchg
aaa
add
sbbl
fadds
outsl
push
loop
cmp
insb
test
add
add
ret
add
aaa
aam
cmp
nop
push
add
mov
push
pop
add
sahf
jns
lods
dec
mov
push
ja
and
xchg
cltd
mov
inc
push
test
cld
shr
inc
fcoml
roll
mov
push
ja
cmp
and
lcall
and
cmp
add
push
into
add
sbb
aaa
idiv
ret
call
mov
and
mov
inc
inc
in
sahf
push
lock
in
add
inc
out
mov
dec
add
jmp
push
out
mov
stos
mov
popf
test
data16
pop
ljmp
adc
hlt
pop
sub
inc
inc
shrl
sub
adc
adc
fisubl
inc
push
adc
pusha
ret
nop
and
and
inc
push
add
adc
sub
jecxz
sub
out
push
stc
les
shrb
nop
ret
sub
rcll
and
test
sbb
pop
and
add
xchg
push
sub
or
pop
add
jae
add
imul
add
or
lcall
mov
hlt
xor
add
into
cmpl
test
seto
andb
into
pop
adc
pop
lret
sbb
cwtl
add
loope
add
jg
add
jecxz
andl
add
ret
call
push
mov
adc
add
pop
pop
sbb
add
fdivl
test
push
xor
and
nop
shlb
add
dec
lret
mov
xchg
insl
les
cmpb
add
xchg
mov
das
outsl
jle
int3
dec
cli
aad
mov
push
mov
and
push
ja
add
scas
push
dec
mov
lds
or
xchg
add
xchg
dec
enter
mov
daa
xlat
push
jb
subl
xchg
push
sub
lock
mov
jg
mov
popf
mov
and
or
xor
pop
repnz
and
and
cli
and
push
cmp
inc
cmp
enter
add
xchg
or
mov
xchg
push
add
scas
cmp
inc
lock
loop
jae
faddl
push
xchg
sub
add
in
aad
jns
shrb
dec
imul
lea
addr16
cmp
adc
addb
xchg
cltd
pusha
fwait
mov
out
icebp
gs
adc
push
cmp
dec
fdivrs
push
test
inc
out
leave
cld
xor
cmp
les
cmp
mov
mov
jo
xlat
or
add
outsb
pop
adc
test
mov
clc
dec
push
pop
ja
add
mov
adc
pop
add
clc
jmp
ds
aaa
shr
adc
mov
cmpsl
fiadds
pop
rclb
call
fmull
ds
cmpsb
imul
lods
int3
sbb
and
adc
fnstcw
cmp
lods
pusha
add
test
das
add
xchg
pop
mov
push
nop
pop
dec
push
inc
mov
daa
cmp
add
outsb
fs
mov
push
js
movups
and
add
sbb
outsb
gs
add
sbb
insb
sub
add
out
xchg
scas
scas
xlat
mov
rcrl
in
push
adc
pop
stc
and
lret
adc
cmp
sarl
sbb
add
fidivl
stc
cli
xchg
lahf
xlat
ret
sbbb
pop
mov
cli
cmp
lcall
mov
mov
jmp
arpl
fwait
sub
mov
sbb
frstor
andl
push
push
sub
sub
add
aad
add
adc
adc
push
sub
popf
push
adc
popa
leave
inc
jnp
popf
sub
xor
outsb
jns
popf
mov
sahf
inc
leave
adc
inc
and
mov
lahf
popa
rcll
add
xchg
fldenv
jmp
sbb
out
and
call
add
mov
xor
mov
sahf
and
or
jp
mov
inc
iret
fs
add
adc
movb
js
movsl
leave
fdivr
enter
sub
sub
push
sti
popa
pop
xchg
mov
rclb
ja
add
leave
call
int3
cmp
or
mov
decb
dec
pop
adc
mov
mov
add
xor
and
or
add
sbb
cmp
add
jmp
mov
inc
add
mov
sub
daa
fwait
pop
add
push
xor
std
pop
inc
repnz
dec
sbb
movzwl
add
mov
hlt
add
stc
jne
cmp
imul
incl
repz
add
pop
add
dec
imul
fidivl
xchg
aad
add
stc
mov
out
in
push
push
pushl
sbb
add
push
or
pop
rcl
push
add
js
mov
and
test
xchg
aas
push
mov
pop
cmp
jno
xor
xchg
cli
add
jg
push
and
les
mov
mov
add
pushf
test
push
pop
ret
movsl
ja
adc
xor
clc
and
sub
mov
xchg
data16
add
sbb
inc
mov
out
popa
imul
add
sahf
inc
sub
mov
mov
verw
push
xchg
add
fcmovnbe
jg
rclb
lcall
dec
xor
cs
sbb
cmp
mov
loop
inc
xor
pop
dec
sahf
jl
cmp
cvtps2pd
out
roll
push
sbb
into
mov
sbbb
xorl
ja
sbb
pop
push
jbe
add
mov
add
xchg
add
ret
cltd
dec
popf
add
lods
cmpl
dec
mov
xchg
inc
fcompl
add
loope
push
popa
xor
fadds
mov
mov
dec
cmp
sbb
or
sbb
faddl
mov
in
pop
push
rol
dec
or
dec
mov
mov
adcl
mov
and
sbb
cli
inc
xchg
repz
cmp
xor
cltd
pop
call
jns
stos
mov
cmc
sbb
inc
jle
jns
add
fmul
stos
cmp
add
jg
lds
pop
or
mov
clc
adc
in
scas
add
fildl
rcrl
push
in
es
add
add
test
push
mov
pop
test
pop
movsl
orb
mov
add
ret
jbe
add
or
xor
je
inc
mov
xor
js
mov
xchg
insb
adc
call
filds
jnp
add
or
cmp
adc
inc
pop
dec
addr16
lds
cmp
pop
lods
test
add
cwtl
push
pop
xor
inc
add
add
cmc
jbe
in
adc
test
inc
xchg
pop
push
adc
sbb
add
test
jne
mov
add
mov
mov
js
add
pop
ret
int
inc
sbb
lea
pop
mov
mov
pop
mov
pop
call
jns
imul
or
roll
aaa
dec
leave
push
mov
add
stos
nop
ds
arpl
and
mov
inc
pusha
inc
pop
sub
push
add
or
jo
push
sbb
cmp
cmp
sub
xchg
stos
loope
es
sbb
jo
mov
add
mov
xor
daa
mov
jp
add
push
lea
cwtl
fcomps
mov
xor
clc
add
lods
test
rclb
add
jmp
push
enter
cwtl
pop
ljmp
add
sbb
pop
dec
not
out
es
cmp
sub
insb
mov
xlat
dec
bound
and
pop
lret
enter
add
inc
bound
mov
loopne
out
fistpl
movsl
xchg
ret
jp
cwtl
or
push
and
or
je
je
add
fs
fnstcw
add
loope
rcr
inc
lcall
inc
pushf
mov
and
cli
sbb
sub
xor
insb
add
imul
insl
popf
ja
push
mov
cmp
inc
xor
inc
dec
imul
hlt
dec
lahf
aam
pmulhuw
xchg
test
add
icebp
jns
cmpsl
sbb
lea
in
insb
ljmp
xchg
popl
stos
inc
inc
and
out
arpl
add
push
ror
je
push
fiadds
dec
xchg
pop
pop
int
sahf
xor
scas
add
xchg
ss
out
push
mov
inc
inc
mov
mov
test
push
mov
add
cmpb
mov
ss
inc
jg
scas
sub
add
imulb
iret
rorb
cwtl
mov
icebp
out
cmpsl
stos
push
notl
or
int3
testb
lock
rcrl
fldcw
add
lea
cmp
mov
add
inc
call
jmp
xor
pop
sub
pop
xor
rcrb
int3
test
add
aam
lcall
and
mov
push
xor
jns
je
inc
repz
pop
hlt
mov
push
jae
jae
add
sbb
pop
add
fildll
lds
xchg
cmp
add
das
add
sub
popf
jmp
insb
add
fisttpl
mov
add
jno
incl
add
push
jmp
mov
lods
add
mov
pop
scas
add
fld
ja
push
and
push
inc
pusha
jo
jnp
in
jne
add
call
out
mov
mov
in
xor
in
daa
sarb
or
inc
pushf
stc
repnz
or
rorl
lock
adc
and
push
jmp
lret
xchg
imul
or
subb
rolb
test
inc
xor
sub
add
mov
das
sar
cli
iret
pop
inc
inc
int
dec
jo
movsb
jo
add
into
rcl
add
inc
dec
push
mov
add
and
repnz
and
hlt
cmp
add
xchg
jne
fdivrl
stos
inc
push
subb
add
cmpsl
adc
loopne
cmc
add
mov
aas
ljmp
inc
push
jbe
add
ja
icebp
rorl
std
in
incb
inc
and
mov
sub
add
gs
pop
into
enter
cs
rcll
add
xchg
sti
in
mov
and
add
fwait
repz
cmp
add
fsubrs
mov
xor
jge
repnz
cmp
cltd
loop
daa
fidivl
or
add
xchg
aad
or
mov
jbe
ja
push
xchg
dec
pop
add
sub
xorb
addb
cs
fsubp
mov
sti
add
dec
dec
xchg
insb
pop
xchg
push
jb
add
ret
mov
inc
orb
add
fistpl
out
int
push
mulb
and
cli
jno
add
repnz
das
mov
mov
pushf
cli
pop
inc
and
std
adc
fisubl
add
add
rorl
imul
lahf
sbb
xchg
xor
mov
cmp
movups
push
test
sub
lods
jns
rol
jo
adc
ret
mov
pop
push
les
or
xor
cmp
dec
pop
mov
dec
cmp
mov
aad
fucomip
mov
xchg
insl
in
xchg
push
lods
sub
jb
pushf
in
mov
sub
cmp
aad
fnstenv
cwtl
sub
dec
std
mov
call
popf
inc
sahf
imul
bound
icebp
out
cmp
jae
cwtl
add
dec
aaa
pop
arpl
std
add
xchg
js
test
imull
pavgw
rorb
xchg
or
imul
in
shrb
fistpl
jne
ret
pop
pop
mov
mov
out
rol
mov
scas
jno
mov
scas
lods
mov
inc
pusha
pusha
enter
ds
pop
sub
inc
jl
leave
add
mov
sti
mov
add
adc
push
les
enter
test
sidtl
add
push
sbb
sub
cmp
jo
into
push
fsub
cmp
divb
dec
xchg
jae
or
outsl
sub
sub
iret
pand
ret
xchg
mov
add
pop
cmpsl
lret
adc
mov
lock
clc
jmp
mov
add
in
push
dec
push
lret
cs
jo
inc
iret
sbb
mov
sub
add
out
lods
out
popa
mov
lahf
xor
lret
push
sbb
aad
addb
pop
nop
jecxz
push
push
sbb
xchg
add
fnsave
add
mov
pop
sar
loopne
pop
add
cmpb
add
push
sub
out
sbb
jo
add
mov
and
lods
lret
inc
sti
inc
lods
mov
or
sbb
mov
es
push
adc
and
add
or
and
add
repz
jae
add
loope
push
jb
cmp
add
hlt
test
add
dec
pop
mov
cwtl
jg
mov
pushf
push
dec
mov
das
rcrb
test
inc
stos
lcall
loope
nop
mov
ljmp
stos
inc
xchg
push
and
push
add
pop
cli
movsb
add
xchg
loope
or
pop
fadds
test
jno
aaa
pop
mov
jo
popa
movsb
rcrl
imul
shll
xor
cltd
shufps
cs
popa
xor
pusha
push
mov
dec
scas
add
mov
xchg
lsl
outsl
sub
enter
add
cmp
cwtl
pop
les
aam
clc
rol
xor
jae
push
test
add
push
sti
imul
out
xor
test
cmp
test
add
mov
adcl
jb
xchg
jp
hlt
and
push
and
out
repz
lret
mov
into
cmp
outsl
outsb
push
dec
add
pop
sbb
or
cmp
jg
orl
jno
sbb
add
mov
adc
mov
mov
pop
push
ffree
add
fisttpl
cmpsl
add
jnp
ret
jmp
jbe
cld
xchg
add
cmpsb
xor
clc
jg
xchg
int3
sbb
mov
add
jae
and
cmpsl
mov
mov
test
scas
or
push
jno
add
cmp
pop
loopne
outsb
cmp
repz
decl
adc
in
jb
pop
fadds
adc
mov
je
movsl
xlat
icebp
sub
js
pop
outsw
ljmp
rol
jg
add
jmp
sub
movsb
add
pusha
mov
xorl
xchg
add
add
jb
ljmp
sub
jl
aaa
aas
out
add
call
add
fcomps
pop
jne
mov
cltd
inc
pop
fwait
bound
dec
loope
add
and
adc
push
mov
inc
add
dec
pop
popf
in
stc
add
xchg
push
fs
cmp
add
xchg
popa
jmp
add
sbb
addr16
in
in
shlb
add
movsb
lock
adc
leave
pop
add
and
lret
adc
pop
cld
xor
repz
hlt
add
mov
sbb
repnz
test
adcb
mov
jge
sbb
xlat
jno
sub
jbe
loope
pop
in
dec
rep
xchg
push
add
outsb
add
pusha
mov
push
lock
sbb
andl
pop
daa
pop
sub
das
mov
ljmp
xchg
jecxz
cltd
inc
push
jo
mov
mov
lods
mov
popa
sub
pop
pop
out
or
lods
std
add
adc
call
inc
xchg
xor
xor
push
cli
push
adc
dec
add
fmull
add
mov
mov
mov
fwait
xchg
idivl
add
mov
inc
pop
repz
push
sub
out
sar
dec
jbe
testb
cmpsl
fwait
xchg
sti
mov
lret
sbb
push
bound
jge
hlt
xchg
xorl
imul
orb
adc
add
sub
add
xor
sbbl
inc
lods
mov
loope
fwait
push
and
jnp
add
mov
sub
insl
mov
jmp
adc
or
xlat
aad
fsubs
stos
icebp
mov
mov
add
add
xlat
sbb
push
pop
mov
fidivs
sbb
inc
dec
int3
call
addl
test
mov
lahf
sub
not
jecxz
inc
mov
stos
loopne
fists
mov
sbb
pop
cld
mov
mov
stc
xchg
arpl
inc
xchg
gs
inc
mov
adc
pop
lea
fs
add
aas
mov
mov
sbb
or
xor
add
mov
popf
packsswb
xchg
add
mov
jge
cmp
push
push
ret
sbb
xchg
popa
lcall
shlb
repnz
jl
jg
xchg
mov
idiv
nop
into
add
jmp
fadds
add
mov
ss
lret
pushf
dec
mov
dec
adc
and
jecxz
rorl
sarl
test
push
les
cmpsl
add
mov
dec
int
sarl
frstor
in
push
lods
popf
pusha
mov
dec
or
jnp
mov
aam
and
cmp
push
shlb
xchg
add
xchg
subl
cli
or
or
mov
daa
test
jns
jbe
pop
push
xchg
inc
in
rorl
pusha
jp
or
pop
jl
jo
pop
dec
mov
jno
rclb
inc
in
pusha
jl
and
rclb
mov
sahf
mov
add
int
mov
fwait
mov
xor
xchg
jnp
call
push
orb
add
dec
fs
lret
mov
pop
inc
inc
inc
lods
dec
rorl
mov
popl
and
les
aam
andb
mov
fadd
std
add
sub
mov
mov
cmpsl
test
dec
add
adc
pop
sahf
in
fcomip
in
pop
mov
hlt
and
push
dec
jmp
ja
loop
ds
mov
or
sub
mov
mov
fisubrl
cmp
add
movsl
push
fwait
daa
jmp
cld
add
in
lods
and
aas
xchg
loope
mov
cmp
ret
add
fldenv
dec
ret
mov
cwtl
stc
or
data16
mov
push
lret
sbb
sub
divl
in
pop
jge
mov
pop
mov
andb
xchg
add
neg
lods
dec
nop
popf
add
pop
es
lret
sbb
add
lcall
add
or
add
sub
call
add
ljmp
cltd
mov
pop
xchg
dec
sub
imul
hlt
cltd
dec
xlat
fcoms
lods
fwait
adc
mov
pusha
xorb
sbb
push
jp
inc
movsl
add
daa
insl
in
push
sub
mov
shlb
add
dec
lods
pop
loopne
sbb
add
inc
mov
push
add
mov
mov
and
std
lahf
popa
jo
divl
stc
jp
or
mov
xchg
les
dec
sbb
mov
hlt
pop
cmp
pop
movsb
mov
mov
psubusb
cmc
add
das
pop
mov
aam
add
aaa
adc
mov
xchg
jmp
insb
mov
push
push
cmpsb
cli
cmpl
ret
cwtl
add
mov
add
mov
fldl
cmp
cltd
mov
nop
lock
ret
mov
sub
rcll
insl
add
cltd
add
mull
and
add
dec
push
popa
inc
xor
in
incb
dec
dec
ds
and
jp
pop
push
in
das
xchg
aad
nop
dec
cmp
cld
jp
pop
pop
dec
popa
mov
mov
adc
in
cmp
mov
dec
jns
or
sbb
adc
add
pop
clc
add
jns
add
out
sarl
sub
inc
faddl
pop
jl
int3
scas
pop
rcl
jg
mov
add
and
int3
cmc
dec
add
sub
push
mov
loope
mov
mov
xor
mov
jb
sub
adc
add
test
addr16
push
stc
fs
icebp
je
xor
cwtl
cmpsl
lods
xchg
testl
add
cmp
stos
leave
fcmovb
or
std
jp
add
inc
lds
insb
push
add
sbb
cltd
and
popl
icebp
add
mov
add
cmpsl
fsubs
push
data16
cltd
inc
push
add
push
pop
add
and
sub
dec
add
jne
rcrb
sbb
inc
cmpsl
mov
test
push
add
cmp
add
xlat
jle
jbe
add
lret
ficoms
es
push
and
pop
in
jmp
mov
sub
add
pusha
push
imulb
add
icebp
sub
adc
testl
inc
push
scas
mov
nop
sbb
repz
int3
imul
rolb
les
pop
ja
call
out
outsb
mov
sbb
ljmp
cld
test
loope
filds
fsubs
jae
xchg
add
dec
cmc
ja
cld
fisubrs
cmp
cmp
loopne
lcall
mov
mov
fwait
or
cmp
mov
add
dec
add
clc
and
add
out
cmp
add
stc
jbe
test
cltd
cwtl
lahf
fcomps
cmp
fsubl
jmp
add
mov
in
mov
pop
je
add
sub
adc
xor
add
inc
xchg
xor
cmc
add
pop
pop
mov
lcall
xor
bound
jb
mov
push
xchg
faddl
push
mov
out
rcr
xchg
add
push
push
pusha
xor
add
je
pop
ss
pop
add
push
out
scas
jbe
cli
jae
add
sub
stos
push
pop
fsts
mov
rcrb
out
insb
jmp
jae
mov
out
popl
push
dec
enter
in
adc
xor
add
fs
and
mov
insb
es
inc
pushf
or
xor
addr16
mov
add
add
mov
sbb
lsl
ficomps
testl
add
dec
ret
push
mov
push
cmpsl
repnz
sahf
hlt
inc
out
in
add
dec
push
mov
add
out
mov
lret
out
add
icebp
inc
mov
bound
mov
cmp
cli
cmc
pop
mov
aaa
xor
mov
and
out
xor
je
xchg
lret
cld
dec
leave
mov
rolb
dec
inc
and
pushf
ret
add
sub
pop
out
push
add
push
xchg
xchg
add
int3
mov
push
leave
dec
or
insb
add
push
pop
add
popl
cs
add
in
inc
pop
sysret
xchg
push
outsl
add
lret
mov
jmp
and
dec
sbb
add
dec
loopne
sbb
addr16
dec
mov
jne
push
cmc
add
roll
dec
push
jo
dec
lds
mov
mov
iret
fs
test
or
jnp
add
pop
or
sarl
xchg
aam
sbb
push
lcall
and
sub
add
inc
push
lea
inc
cltd
dec
or
mov
jl
add
push
decb
add
xchg
push
push
js
pop
arpl
imul
popf
add
rcrl
es
mov
jecxz
out
add
adc
outsb
ja
push
stos
and
loopne
jne
repnz
out
in
lods
xchg
add
cld
add
std
inc
inc
xor
pop
add
into
clc
cmpsb
mov
or
dec
jg
xor
shl
fwait
les
dec
fiadds
add
pop
out
cltd
int3
xor
pusha
mov
inc
popa
add
scas
adc
lea
dec
addb
fidivl
adc
push
fs
add
loop
xchg
scas
sub
cmc
jae
add
rcrl
sahf
cmp
inc
mov
das
sbb
add
xor
add
addb
pop
in
call
les
cmp
jmp
pushf
in
shll
data16
add
fdivr
mov
add
lods
divb
popa
sub
pop
sub
popf
rol
in
incl
sub
xchg
mov
cs
adc
insb
roll
cmpsb
stos
fdiv
add
mov
push
xchg
call
adc
call
cmpl
add
leave
loopne
repz
add
in
cmpsl
and
xor
pop
inc
popf
adc
jae
xchg
into
fldl
js
pop
ret
pop
jp
add
push
cmp
inc
mov
loopne
xor
inc
pop
outsb
and
push
pusha
pop
inc
fucomip
add
shrb
mov
data16
fsub
inc
shrl
stos
outsl
arpl
lds
lea
and
dec
mov
test
adc
add
mov
push
add
leave
fcoms
add
pop
jge
popf
add
loop
ficomps
and
pop
gs
andb
roll
mov
sub
add
andb
add
xchg
mov
aaa
add
fldt
test
rolb
sbb
into
jle
and
clc
test
or
mov
popl
adc
pop
fsubrs
loop
jl
add
rcr
mov
add
pop
xchg
adc
sub
loopne
ljmp
neg
pop
ret
push
and
mov
dec
inc
hlt
pushf
cmpsb
pop
out
test
scas
lock
pmullw
add
insl
cmp
gs
mov
fcmove
andl
add
cmp
and
es
adc
add
push
into
cwtl
fwait
arpl
cmp
lret
test
enter
sbbb
test
sbb
testb
addr16
jo
add
xor
mov
mov
xchg
mov
cld
daa
xor
inc
or
hlt
loopne
movsl
add
icebp
xchg
sbb
sbbb
mov
out
lods
and
mov
in
loope
sarb
add
fwait
nop
cs
xchg
add
xchg
test
inc
inc
shlb
xor
stos
mulb
in
dec
loop
add
cmp
out
fdivrl
add
sbb
fimull
cmp
adcb
icebp
mov
xlat
stos
mov
pop
dec
add
int
shlb
cmpl
push
xchg
enter
sbbb
mov
icebp
mov
xchg
mov
scas
je
dec
test
add
lcall
rcrl
js
jne
inc
push
xlat
add
dec
jno
jmp
dec
dec
cld
and
mov
aaa
add
cmp
out
cwtl
test
adc
push
jge
xor
add
outsb
jnp
mov
jle
add
inc
ds
mov
push
add
ret
adc
add
movsb
outsl
inc
aam
mov
jl
loope
mov
cmc
add
loopne
in
test
jbe
divb
es
stos
lahf
mov
and
mov
hlt
push
push
aaa
inc
pop
or
mov
mov
sbb
test
insl
popa
jl
cld
push
subl
arpl
pop
push
mov
stos
add
gs
sub
ds
jns
pusha
pop
lock
nop
add
iret
pop
adc
mov
add
and
clc
mov
daa
add
es
and
sub
adc
dec
ss
ds
loopne
push
jg
jmp
add
pop
ret
and
fsubl
sahf
mov
pop
add
and
mov
push
jne
repnz
sbb
fisubl
std
or
or
cli
xor
jmp
clc
sahf
xchg
mov
pushf
add
sub
stos
pop
cwtl
call
test
push
mov
pop
cwtl
stos
inc
in
aaa
jge
jle
adc
xor
and
mov
mov
cmc
fcoms
cmp
shll
out
add
in
jns
jecxz
jge
add
sub
push
add
inc
jno
mov
fsubs
push
jne
outsb
out
add
cmp
subl
add
inc
clc
adc
test
dec
jb
push
icebp
add
dec
das
xorb
inc
ja
mov
add
lods
sbb
das
dec
adc
rcrl
mov
ja
pusha
pop
push
or
pop
lcall
mov
sub
add
pusha
sti
pop
add
dec
mov
add
inc
lds
dec
push
push
cmp
mov
mov
addr16
test
in
pop
cmpsb
xchg
sbb
bound
test
add
scas
xchg
mov
xor
push
fistps
testl
iret
shlb
sbb
sbb
loope
lret
pusha
ja
jns
add
mov
hlt
in
jbe
in
dec
dec
fmul
jo
add
push
arpl
incb
mov
jns
adc
scas
cmp
cmpsb
add
pop
sbb
into
dec
push
add
add
aas
or
lea
push
mov
inc
stc
sar
cmp
rorb
hlt
xor
icebp
clc
mov
arpl
stc
cmp
cmp
add
ja
sbb
push
pop
and
enter
pop
popf
fst
fnstcw
fcmovne
add
imul
cmpsb
outsl
movsb
sbb
adc
test
sub
sti
fsubrl
mov
xor
int3
stc
add
clc
loopne
scas
sbbb
mov
cmp
xchg
int
add
mov
jo
jp
add
xor
out
dec
dec
add
pop
cmp
fildl
nop
adc
add
cld
inc
loopne
pushf
jg
add
cmpsb
test
repz
dec
adc
fwait
and
sbb
test
jo
pop
ds
rol
js
mov
add
in
fdivp
mov
sub
dec
orl
jl
xor
movsb
iret
adc
sub
in
sbb
faddl
adc
sarb
cmp
cmp
jecxz
pop
lods
push
push
out
cli
scas
pusha
lcall
and
arpl
xor
movsl
add
out
mov
xchg
pop
mov
add
mov
dec
add
xchg
in
mov
sub
mov
shrl
ljmp
inc
add
adc
rcrl
inc
add
lock
jns
jmp
dec
stc
jg
xchg
cmp
add
imul
push
dec
jl
or
add
lahf
xchg
stos
ds
pop
sti
xchg
push
and
add
rcrb
bound
add
and
cmp
and
rclb
cmp
cmpsl
xor
sub
xchg
xchg
clc
jno
dec
mov
subl
int
cmovs
mov
roll
je
xor
aaa
and
adc
orl
fldenv
add
jno
or
cld
sbb
inc
jb
jns
cs
pusha
jbe
add
or
add
test
mov
pop
loopne
add
fisubl
fwait
add
ds
jno
or
add
fisttpl
jg
and
out
jecxz
add
in
lods
pop
daa
and
add
add
outsl
cmpl
fiadds
xor
out
mov
push
loope
das
mov
aad
test
jp
repz
and
adc
sub
push
dec
add
ds
sub
mov
and
add
xor
sub
inc
jne
fcmovb
fsubl
sahf
jae
add
addl
or
lcall
and
int
sbb
fnstcw
push
sbb
aas
inc
mov
bound
push
pop
push
jnp
add
imul
xchg
add
mov
out
cmp
loop
mov
outsl
cmc
out
xor
lret
scas
pop
out
jo
jp
in
in
push
es
xor
cld
add
leave
sub
xor
inc
aas
outsb
arpl
pusha
cmp
xchg
push
add
pusha
mov
add
rol
popa
add
sahf
mov
fiadds
xorb
and
push
aad
test
inc
fcoms
add
xor
and
push
dec
sbb
xchg
jns
icebp
ret
add
test
dec
jbe
cmp
sbb
xor
push
pop
add
sbb
bound
mov
lahf
add
fmuls
movsl
add
stos
cmp
in
and
les
push
add
sbb
mov
stc
scas
adc
adc
sti
jo
gs
orb
xor
in
add
xlat
addl
ror
mov
leave
out
pop
fstpt
xchg
sub
repnz
into
int
mov
jg
mov
mov
lcall
rcll
adc
push
outsl
in
add
and
dec
dec
mov
out
add
adc
lock
jno
fwait
or
add
and
add
push
push
xor
sbb
mov
cwtl
daa
mov
pop
lcall
add
std
lock
aam
stos
mov
pop
mov
inc
repnz
and
dec
in
cmp
cmp
adc
sub
mov
mov
adc
adc
and
add
dec
mov
int
or
pop
xor
test
mov
fwait
push
fcomp
lds
mov
cmp
pop
add
outsb
add
shl
orb
leave
add
shlb
notl
lods
pop
mov
icebp
sbb
aad
aas
insl
add
ja
adc
jbe
pop
mov
jmp
dec
mov
nop
movsl
mov
test
add
mov
jg
stc
inc
imul
and
mov
stos
int
repz
jp
and
pop
loope
hlt
rcl
add
push
pop
fwait
aam
inc
add
xchg
dec
or
test
lret
add
paddsw
lea
loopne
outsl
sub
xor
xorb
xchg
push
lret
sbb
mov
cs
sbb
or
add
jg
mov
in
dec
sbb
mull
xchg
out
sbb
je
or
std
shll
jge
jne
add
adc
mov
mov
pop
and
lea
mov
jne
cld
and
cmp
push
lret
add
dec
movsl
loopne
imul
adc
mov
mov
or
dec
ja
push
loopne
xchg
add
fcompl
ja
cli
add
test
push
cmpsb
call
addr16
xchg
fmull
mov
out
jnp
rorb
daa
out
cmp
push
sbb
sbb
cmpsl
test
push
sbb
stos
push
mov
leave
clc
sub
mov
icebp
cwtl
xor
call
lret
das
and
cwtl
mov
push
jne
or
leave
jnp
pop
pop
bound
push
pop
xchg
add
ret
cltd
jo
add
cmp
add
subb
dec
mov
inc
mov
or
add
hlt
push
rol
push
add
imul
add
mov
sbb
mov
lds
shr
je
icebp
prefetch
or
mov
das
push
arpl
jne
orb
adc
adcb
cmp
or
clc
cmp
sub
xor
mov
mov
cld
sub
and
loop
cmp
mov
arpl
add
int
jle
xor
push
clc
fstpt
add
push
out
inc
in
inc
cmp
pop
call
into
cmpl
push
xchg
add
mov
mov
and
sbb
xchg
fsts
pop
and
inc
rcrl
sbb
dec
fidivrs
gs
ficoml
or
cli
cmp
les
push
add
out
lods
cmp
lea
nop
movsb
or
add
pop
xchg
cmp
pop
sub
add
in
test
sbb
pop
lret
out
jl
lcall
adc
push
in
test
mov
testb
add
jno
mov
repnz
add
mov
jo
mov
bnd
imul
das
jae
rcr
and
adc
xor
andb
add
mov
dec
adc
rclb
xor
pop
rolb
dec
jle
fistl
cmp
sub
xor
scas
cmp
lahf
mul
adcb
cltd
dec
cwtl
inc
mov
pop
ja
iret
sub
xchg
add
mov
mov
call
mov
xchg
jo
ja
xchg
sub
mov
dec
push
add
xchg
sbb
ljmp
sahf
jne
add
sub
cs
movsl
cmp
repz
xchg
shlb
bnd
xor
pop
pop
xor
sub
int3
mov
test
jae
dec
stc
or
cmp
xor
mov
push
hlt
arpl
sub
cmp
roll
mov
add
lret
inc
sahf
or
push
add
fmulp
inc
add
mov
shll
repnz
in
xchg
push
int3
xchg
rol
lret
dec
xchg
inc
pop
pop
insl
pop
inc
divb
jns
int3
loopne
jecxz
and
pop
xor
icebp
test
jns
rcrl
mov
adc
jo
aad
leave
dec
mov
push
add
xchg
mov
lahf
into
mov
add
hlt
fstps
add
adc
cmp
mov
je
roll
dec
sub
es
adc
cld
add
xchg
popa
inc
add
xor
cwtl
and
fwait
jnp
aaa
ljmp
es
xor
add
repnz
jg
fwait
scas
or
cld
xchg
add
push
sbb
mov
mov
inc
xchg
push
pushf
inc
pop
test
add
adc
xchg
cmp
cltd
mov
jg
loop
push
clc
lods
pop
or
jns
pusha
out
pop
add
js
mov
rcrl
scas
sbbl
jae
push
cmp
cli
sbbb
mov
cwtl
pop
loopne
sbb
sbb
push
cmpsb
pushf
nop
nop
add
or
mov
data16
pop
or
cmp
lods
in
popa
dec
add
int3
jle
lret
pusha
mov
add
push
jns
je
pop
call
jo
adc
add
arpl
sub
scas
in
mov
sti
add
imul
mov
add
je
clc
popa
pop
adc
add
in
loopne
add
fidivrs
mov
add
movsb
mov
sub
xor
mov
push
add
jle
inc
pop
rclb
mov
stc
jge
imul
icebp
je
xchg
add
cmp
push
jmp
mov
insl
adcw
add
loope
fidivrs
movsl
sub
es
subb
jne
rcrl
popa
xor
ja
inc
out
pop
add
cmp
lea
cmp
int
popa
add
mov
stos
cli
or
adc
add
sbbl
outsl
jbe
sub
fdiv
lds
add
push
push
pop
xadd
test
sbb
mov
inc
mov
adc
pop
cmp
imulb
xchg
fisttpll
sub
ljmp
dec
pop
jne
out
jo
add
cs
mov
mov
jns
add
inc
pop
cmp
push
sub
incb
aas
fs
mov
rcr
add
jg
test
mov
clc
nop
add
ret
jmp
xor
fldenv
icebp
mov
sbb
iret
adc
sub
shlb
rclb
add
movsl
adc
xor
xchg
pusha
push
fs
jns
jg
insl
fnstcw
mov
pop
pop
in
mov
andb
in
lea
adc
xor
push
add
dec
or
repz
inc
cmpsb
idivb
mov
ret
cmp
add
jp
cwtl
sbb
nop
pop
or
andb
sarb
mov
hlt
sahf
mov
xlat
jnp
inc
iret
xchg
push
decl
lds
jp
and
filds
dec
push
pop
mov
mov
adc
in
sbb
jle
repnz
inc
mov
mov
add
add
cmc
cwtl
adc
jg
xchg
nop
or
or
add
cli
dec
push
cld
add
pop
subb
sub
jp
add
adc
add
rcll
mov
jmp
arpl
cmpsb
add
xchg
lret
inc
add
loope
out
cld
adc
dec
adc
sub
iret
mov
gs
mov
incl
loope
mov
les
out
dec
xchg
add
adc
mov
popf
inc
push
xchg
mov
or
mov
aaa
add
jecxz
test
and
andb
or
dec
mov
pusha
and
xor
in
adc
cmp
sahf
add
nop
sbb
icebp
xchg
js
insb
push
jg
pusha
shrl
pusha
add
xchg
out
add
std
scas
outsb
cmpsb
pop
jo
add
enter
subb
jmp
mov
add
movsl
jae
add
clc
sbb
movsb
fsubrl
out
add
gs
adc
adc
jl
leave
sub
lret
hlt
icebp
add
xor
lds
cmpsb
push
push
add
ljmp
pop
imul
mov
insl
mov
inc
repnz
xchg
jl
pop
add
je
iret
ret
test
push
roll
lret
xchg
fcmovne
push
mov
stos
add
rol
sbb
push
pop
lock
inc
mov
adc
inc
and
jno
jmp
in
cmpsb
add
shr
and
mov
add
mov
add
iret
jo
add
sti
out
mov
add
out
push
les
adc
jge
ss
pop
repz
stc
cmp
add
outsl
in
inc
lret
or
imul
push
pop
cmp
inc
dec
jmp
and
scas
add
add
in
mov
add
aas
stos
xchg
in
out
lcall
cmp
mov
add
cltd
or
outsb
add
dec
dec
idivl
jl
dec
add
xchg
inc
sub
add
jne
sbb
add
add
je
jl
iret
or
aaa
dec
mov
and
jp
add
stc
cmc
lret
incb
stos
add
es
pushf
lds
inc
aaa
adc
mov
test
mov
sbb
add
in
inc
adc
roll
lds
fwait
jns
aam
mov
adc
mov
add
lahf
or
repnz
add
test
cmp
sub
test
add
jb
test
call
dec
in
and
mov
xor
repz
fistpll
inc
add
add
sbb
jmp
push
pop
adc
mov
add
fcoml
push
mov
stos
test
mov
repnz
xor
pushf
xchg
push
mov
call
pop
mov
add
and
repz
orb
fldl
dec
cmp
mov
add
out
sahf
adc
add
jmp
out
add
sti
or
stos
mov
jo
push
inc
add
pop
push
int
mov
and
test
inc
mulb
or
arpl
outsb
repnz
xchg
inc
add
mov
xor
insl
add
add
jae
sahf
push
loopne
cmp
add
fdivrs
es
addb
xchg
bound
jle
dec
outsl
sub
add
arpl
pop
shll
jmp
add
out
scas
jne
dec
js
mov
jns
sub
loop
jecxz
lods
push
clc
push
popl
loope
jp
les
out
popf
push
xchg
add
popa
into
dec
add
mov
or
gs
decb
and
pop
push
mov
fiadds
jl
add
add
adc
jae
and
pop
stos
int
inc
fistl
cmp
add
cmp
add
push
aam
lods
jp
das
add
dec
mov
and
imul
movsb
add
push
test
dec
push
sub
into
leave
imul
adc
mov
mov
add
cli
cmpsb
cmp
out
add
icebp
ret
push
mov
or
and
or
test
sbb
ret
dec
xor
test
adc
push
ljmp
pusha
xchg
movsb
faddp
add
dec
xor
or
cwtl
jp
in
pop
add
mov
loop
add
sbb
sub
adc
jmp
mov
loop
incl
hlt
enter
ds
ss
push
and
leave
shlb
inc
add
js,pt
jns
add
das
lods
push
mov
popf
add
scas
or
jbe
ja
jge
div
pop
xor
sbb
mov
push
or
les
lods
push
pop
iret
mov
fld1
imull
shlb
jg
add
xchg
insb
cmc
sbb
lods
pop
gs
and
jecxz
jno
add
mov
ss
fisubrs
jmp
add
addr16
lret
pushf
rcll
inc
sbb
rorb
and
xchg
add
decl
mov
sub
lds
aaa
pop
add
jecxz
test
adc
pop
inc
fsts
fdivs
lods
outsl
cmpsl
mov
mov
add
repnz
xor
incb
push
add
out
xor
add
push
push
sbb
out
mov
adc
cltd
ret
fimuls
push
sti
lret
addr16
shld
mov
daa
xchg
in
add
sbb
sbb
fstl
xchg
mov
add
clc
dec
scas
mov
inc
sbb
lods
insl
int3
cltd
lcall
mov
adc
add
inc
mov
add
loopne
stos
add
push
ds
cmpsl
mov
loope
add
inc
ja
lds
mov
in
cltd
push
mov
call
jle
cmp
inc
add
push
icebp
ds
aad
ja
lds
xchg
fnsave
hlt
sbb
mov
sbb
xchg
ret
mov
mov
push
ljmp
rclb
cmp
rcl
mov
add
dec
adcb
pop
or
cmpb
add
bound
int3
jo
push
jb
cmp
daa
add
and
sar
cmp
int3
xchg
fldcw
pop
sbb
aaa
loopne
out
xor
js
xor
in
add
stos
push
xchg
sub
loopne
icebp
cmp
add
pop
je
es
add
aas
ja
mov
popa
js
jle
add
push
rolb
add
xor
add
in
popa
mov
in
enter
stos
add
icebp
or
and
popf
xchg
loope
push
push
test
add
sub
sbb
rcll
add
aas
enter
in
push
pop
push
jo
cmp
mov
cmp
fmul
add
popf
aad
lds
js
out
mov
cmp
mov
cld
add
addr16
add
sub
pop
dec
call
mov
xchg
cwtl
cltd
inc
adc
nop
pop
push
adc
in
mov
push
and
mov
test
mov
gs
or
xor
mov
jbe
xchg
les
repnz
xor
add
cmp
xchg
push
add
outsb
hlt
dec
cmp
jg
add
cmc
je
in
xor
fdivrl
js
add
popf
add
add
cmp
rcl
mov
add
lock
or
shrb
add
fucomip
inc
test
inc
add
cltd
ja
add
bound
jne
insb
icebp
sbb
das
pop
inc
dec
clc
inc
mov
add
lods
jns
cltd
lcall
js
push
je
leave
cmp
mov
jmp
sti
pop
cli
sbb
mov
sahf
jmp
add
popf
sbb
out
push
jns
ljmp
inc
test
popa
ds
faddl
rolb
adc
xor
cmp
pop
insl
jl
insb
adc
test
clc
xor
xchg
fistpl
pop
inc
mov
leave
jns
test
push
inc
pop
loopne,pt
adc
push
ret
or
jne
cltd
outsb
adc
xchg
and
add
int3
test
les
add
jmp
jge
ret
xchg
aam
in
sub
mov
cmp
jae
mov
in
outsb
pusha
pop
mov
and
or
add
cld
mov
mov
push
push
shl
popa
fstpl
clc
adc
or
mov
add
inc
std
xchg
and
pop
push
add
dec
add
or
fmulp
inc
add
mov
cmp
movl
xchg
arpl
pop
int3
inc
in
in
sub
fstpt
ret
push
insl
pop
jnp
jns
adc
nop
xor
push
out
or
sbb
adc
mov
xchg
push
mov
jl
push
movsb
or
jecxz
movsb
sub
cmc
imul
dec
pop
adc
xor
pop
cmpsb
sbb
or
xchg
xchg
cmp
out
mov
dec
rorb
imul
sub
data16
xchg
int3
dec
ja
and
inc
mov
mov
mov
and
cmpsb
jg
shrb
outsb
arpl
jmp
add
mov
hlt
cltd
or
mov
mov
out
scas
mov
int
inc
icebp
sbb
dec
jb
add
jb
mov
pusha
xor
jne
add
mov
pop
add
enter
jb
sub
xchg
pop
insl
dec
sbbb
loopne
lea
stc
cli
push
or
movsb
aam
repz
add
nop
ljmp
es
push
lods
in
cmp
pop
dec
mov
movsb
cli
jno
insl
pop
add
add
loopne
mov
and
pmaddwd
push
sbb
jecxz
xor
mov
xor
movsl
sub
jns
inc
aas
add
es
nop
mov
adc
aam
mov
jge
lods
adc
mov
xor
push
lods
popf
cltd
ret
ja
push
sahf
push
add
icebp
sbb
xchg
cmc
dec
js
test
icebp
pop
loopne
fnsave
andl
adc
fsubl
pusha
inc
adc
loopne
stc
lea
aas
jp
movsb
mov
jae
js
cmpb
pop
jecxz
jne
cmpsl
mov
out
testb
fwait
out
nop
loop
lock
mov
adc
shrb
xchg
dec
test
mov
dec
inc
out
xorl
idivb
add
int
and
mov
imull
mov
jmp
xor
xor
mov
sbb
cmp
adc
add
fadds
frstor
lock
mov
add
mov
arpl
cmp
leave
lret
push
jnp
movsb
mov
add
mov
dec
pop
push
lahf
add
or
movb
nop
pop
push
les
rolb
push
in
xor
test
cmpsb
cs
fbstp
sub
pop
sub
jne
shrl
aam
rolb
xor
sbbl
je
rolb
cmpsl
repnz
lods
and
add
data16
jnp
add
dec
adcb
bound
call
sub
add
or
jg
add
movsl
cmovae
das
rcll
push
cmp
and
rolb
mov
cmpsl
lds
in
jo
jl
lcall
call
aaa
mov
pop
push
add
es
add
mov
mov
add
mov
aam
inc
add
adc
and
popl
lcall
data16
sarb
ds
out
add
mov
add
sub
mov
xchg
xchg
cwtl
pop
orb
test
add
in
mov
xor
push
fcomps
sbb
pushf
outsl
inc
loop
inc
inc
jae
cwtl
sub
inc
inc
loope
faddl
aas
or
cmc
jg
daa
pop
push
add
xchg
out
add
lods
sbb
rorb
clc
lods
jmp
jmp
fists
cmp
bound
pop
mov
add
push
jnp
aas
add
jl
pop
pop
dec
add
mov
mov
aaa
sub
cltd
mov
and
sbb
xchg
jno
ret
mov
add
jbe
pop
cmp
loopne
stc
es
mov
push
int
sahf
inc
sub
aas
out
incb
jg
flds
mov
inc
test
add
mov
mov
in
stos
ljmp
add
ja
fwait
leave
xor
pusha
and
ljmp
int
dec
xchg
ja
push
add
fidivl
cmp
push
add
xor
imul
sti
add
or
jns
dec
push
add
cmpsl
pop
dec
cwtl
popf
mov
xchg
subl
pusha
enter
mov
fiaddl
xor
out
or
ds
or
subb
jae
push
mov
sbb
add
bound
add
ljmp
lds
data16
cmpl
int
imulb
mov
inc
xor
add
insb
popf
dec
cmovl
add
in
sub
cmp
rolb
add
sbb
addb
fs
nop
aad
int3
in
push
sbb
jbe
ret
aam
or
jae
add
inc
dec
mov
push
idivb
sarl
sub
in
and
popf
jo
xor
mov
ja
andb
mov
es
push
sbb
dec
call
mov
fistpll
adc
bound
and
mov
add
jl
cltd
clc
push
xor
add
mov
add
cmp
int
nop
fiaddl
stc
push
inc
mov
and
mov
add
neg
pop
jnp
loopne
xor
add
inc
insb
push
inc
add
mov
jne
add
int
pop
rcll
xchg
fcoms
testl
cmpsb
mov
pop
filds
push
xchg
mov
fadds
inc
pushf
jecxz
inc
seto
decl
mov
xlat
dec
repnz
fsubrp
mov
add
mov
inc
bound
lea
pop
adc
and
cs
flds
ss
imul
adc
fistps
jmp
imul
out
scas
mov
imul
loopne
cmc
cmp
dec
dec
cmp
lods
push
add
push
daa
xchg
cmp
fcmove
loopne
mov
pusha
sbb
mov
add
addr16
dec
popa
jae
jns
inc
jo
pop
pop
sbb
inc
aas
pcmpeqb
xchg
ds
fbld
in
js
loope
adc
cmp
pop
add
in
adc
add
mov
fs
pop
push
out
add
imul
xor
add
aam
mulb
addb
cltd
sbb
jo
mov
subl
push
push
sbb
add
inc
jb
add
sub
inc
pop
xchg
xchg
fldcw
xor
pop
dec
jno
pop
hlt
cmovns
and
or
call
lahf
sbb
out
fnstsw
sbb
leave
inc
xchg
loopne
cmp
push
in
mov
mov
push
pop
mov
mov
fucomip
loopne
pop
pop
add
jb
lds
and
add
cld
mov
inc
xor
jnp
cmc
inc
lret
imul
es
push
daa
add
xchg
mov
clc
js
in
emms
stos
xlat
inc
and
pop
jb
sbb
cmc
add
pop
sub
mov
psubsb
inc
sti
mov
lea
sub
mov
mov
fwait
loopne
lds
clc
mov
out
hlt
and
sbb
cmp
pop
pop
mov
xor
iret
mov
pop
cmpsl
xlat
add
inc
gs
xor
adc
lock
rclb
test
cmpsb
push
sbbb
cmp
insl
xor
adc
adc
pushf
fistpll
add
imul
push
mov
mov
mov
push
cmp
jne
add
or
mov
je
shlb
mov
in
mov
ds
jb
push
fwait
xorb
sbb
mov
clc
adc
call
das
lcall
xorl
rolb
nop
lea
cmp
mov
xchg
sbb
arpl
rclb
inc
cmpsb
and
mov
mov
rorl
jb
pop
add
add
int3
out
lods
mov
mov
add
jae
add
mov
push
pop
not
xchg
lahf
add
and
add
mov
mov
jno
pop
add
daa
push
mov
cmpsb
inc
test
xchg
add
test
ja
add
add
mov
dec
or
push
fadds
int
or
hlt
test
add
mov
movsl
pop
das
negb
pop
pusha
in
or
mov
cs
imul
rcll
stc
cld
loopne
filds
cwtl
shll
les
shlb
push
jbe
std
andb
push
add
cmovb
scas
jg
add
repnz
lret
cltd
cmp
jne
lcall
push
stc
inc
cmc
lahf
add
addr16
jo
int3
jne
fbstp
fldl
inc
xchg
cmp
ret
daa
or
push
pop
mov
and
gs
xchg
inc
adc
das
add
or
testl
mov
cmpsl
or
xor
lea
cmp
jge
insb
dec
push
inc
pop
xor
add
xchg
decl
pop
sub
es
mov
stc
add
fwait
inc
fmul
nop
mov
insl
loop
and
jo
mov
add
in
hlt
nop
sbb
add
adc
sbb
es
ljmp
insl
into
mov
negl
pop
lret
cmp
jecxz
xor
adc
stc
add
pop
test
popf
adc
lret
aaa
bound
xorb
push
inc
push
xchg
jp
insl
add
lea
sub
divl
cs
fidivs
stos
jne
cwtl
add
sbb
sub
push
scas
das
fsubrs
enter
add
add
dec
loop
adc
pop
push
sbb
push
xchg
nop
push
cld
push
aad
push
add
rcrl
in
shlb
jmp
and
xor
push
sub
mov
dec
inc
jecxz
adc
cld
sahf
lahf
sbbb
and
mov
add
gs
adc
add
xchg
dec
in
loope
sarl
out
jmp
data16
pop
pop
lret
cmc
cmp
in
test
add
fxch
sub
jno
aaa
pop
adc
aaa
xor
shl
add
push
sub
add
fistpll
xor
pop
sti
mov
lea
cmp
pop
lret
push
add
sbb
jp
cmp
xor
dec
in
inc
flds
sbb
imul
lds
test
add
push
mov
insb
jne
add
mov
sbb
xchg
dec
subb
jae
push
push
outsl
add
pop
arpl
jg
call
rolb
add
fists
icebp
cwtl
pusha
test
decl
dec
lret
pop
mov
pushf
cld
test
fnsave
es
adc
add
sbb
jae
loop
cmp
ss
jle
or
imul
or
in
mov
negl
add
rorb
fildll
inc
aas
leave
and
test
ljmp
shlb
add
je
cmp
xchg
sub
add
pop
mov
cmp
lods
enter
dec
or
int3
inc
xor
pusha
pop
jge
pop
rorl
and
add
outsl
nop
adc
push
arpl
jae
push
lods
add
inc
lods
faddl
xor
ret
mov
mov
lahf
cli
aam
scas
add
adc
add
mov
fs
add
call
sbb
inc
add
xor
pusha
jecxz
imul
pop
insb
cs
mov
xchg
add
pop
or
mov
mov
clc
cmpsb
jp
dec
add
and
push
sbb
mov
ret
add
cmc
xor
add
mov
cmp
cmp
inc
call
das
rol
addl
xor
jb
addl
pop
pop
in
add
insb
cmc
xchg
not
stc
add
pushf
cmp
jecxz
add
jb
hlt
dec
fiaddl
sub
sti
daa
mov
pop
xor
mov
stos
mov
add
and
icebp
xor
dec
shrb
add
shl
imul
add
or
sbb
nop
les
and
dec
push
jge
lahf
mov
add
lock
mov
mov
int
adc
mov
jle
xchg
jbe
cmp
mov
ret
inc
and
adc
push
je
lock
inc
mov
mov
aaa
pushf
push
xor
scas
sar
movhps
stc
cmp
mov
daa
xor
repnz
push
subb
inc
jge
mov
mov
call
sub
xchg
insl
clc
mov
pop
ds
fcmovnbe
push
cmpsl
add
push
xor
adc
push
jge
clc
sbb
test
sub
sbb
mov
sbb
and
pop
les
sbb
mov
movsl
xchg
movsb
mov
dec
cmpl
add
cmp
in
inc
xchg
jmp
add
sahf
or
mov
add
adc
push
cmc
sbb
jmp
test
cli
add
stos
push
xchg
insl
xorb
sbb
int
add
cmpsl
or
gs
stc
sbb
xchg
adcb
sbb
sbb
mov
add
jecxz
stc
pop
inc
pop
mov
fdivrs
push
subb
add
sub
add
cmp
aam
push
add
enter
mov
scas
add
adc
sub
jmp
add
mov
enter
pop
or
ds
mov
pop
je
rcl
test
cwtl
inc
add
or
loopne
outsb
add
add
ljmp
add
jge
andl
adc
inc
add
xchg
inc
fldenv
ss
jb
shlb
push
mov
pop
dec
xchg
cmpsl
rorb
rcll
aas
jo
addb
leave
sbb
addb
dec
pusha
jae
inc
push
outsb
cwtl
test
inc
sahf
pop
fsubs
in
sbb
iret
xchg
push
sbb
les
ja
test
xor
inc
test
call
stos
jbe
or
movsb
pop
add
into
loop
mov
jmp
jle
outsb
or
lcall
mov
jge
mov
negl
out
jle
add
push
push
mov
xchg
in
add
dec
jne
add
imul
xchg
or
movsb
mov
sbb
or
and
cmc
std
fiadds
lcall
hlt
add
int
outsb
icebp
dec
or
shlb
aaa
sbb
pop
add
add
pop
imul
cmp
pop
push
mov
cmpsb
add
vpsadbw
add
lock
xchg
jecxz
ljmp
popa
add
jle
xor
adc
mov
lahf
ja
pop
pop
aaa
push
jno
loopne
lret
loop
rcrb
xchg
pop
add
push
insb
xchg
jmp
jecxz
pop
cli
testb
aaa
nop
jmp
call
das
in
ja
lds
sti
push
fsubrs
xchg
xor
insb
sbb
loop
pxor
pop
andb
inc
es
mov
push
adc
je
insb
push
dec
sbb
add
test
add
push
shl
push
push
out
addl
mov
pop
or
adc
dec
rcrl
clc
scas
or
nop
push
out
jl
sarb
mov
or
mulb
sbb
xor
test
ds
push
mov
jne
cmp
jle
mov
sbb
lcall
or
cmp
cmc
mov
stc
mov
add
xlat
cwtl
push
adc
stos
sbb
enter
mov
rclb
dec
adc
add
test
add
out
jecxz
mov
xchg
fbld
nop
fildl
fidivl
ss
mov
push
mov
andb
mov
dec
jb
or
cmpsl
pop
call
dec
rolb
mov
lock
rcrb
stos
jnp
mov
rolb
adc
arpl
push
rcll
inc
bound
or
insb
cmovle
in
vcvtdq2ps
inc
rolb
shll
cwtl
xorb
out
insl
rorb
mov
sbb
or
xor
stc
mov
pushl
jl
xor
fs
jno
add
idivb
dec
mov
add
push
mov
add
sub
aam
push
bound
lahf
sbb
outsl
adc
inc
lea
cmp
xchg
inc
add
arpl
mov
pop
dec
sub
add
add
xor
dec
add
clc
insl
sbb
shl
icebp
xor
sbb
xor
xlat
dec
adc
add
mov
daa
jp
dec
xchg
cmp
dec
xchg
jbe
test
sbb
inc
push
test
jmp
lods
test
movsb
fiaddl
jne
out
add
mov
popa
fldenv
icebp
sub
ds
add
adc
shl
add
mov
or
push
adc
xor
jle
adc
xor
xchg
sub
xchg
aam
insl
outsl
repnz
fadd
push
mov
cld
dec
dec
mov
setle
lds
push
enter
mov
mov
stc
jbe
call
add
xchg
add
xor
daa
mov
sub
cmp
cmp
sub
add
loopne
xor
add
or
push
or
fwait
add
mov
mov
and
add
aad
inc
lret
adcb
pop
pop
pop
mov
adc
repz
icebp
xor
mov
pop
jmp
add
sub
sbb
in
and
inc
aaa
jecxz
shrb
add
hlt
pushf
add
daa
dec
dec
ljmp
in
cmpsb
movsl
add
add
mov
dec
or
pop
shlb
jge
jae
lods
dec
sbb
call
pop
lahf
push
xlat
enter
xchg
add
sub
mov
lods
cmc
adc
cmpsl
sbb
subl
and
pushf
cmp
pop
dec
lahf
mov
jno
clc
repnz
jno
add
add
in
jl
push
aas
sarb
ret
fldenv
ret
hlt
mov
adc
pop
adcb
loop
add
push
add
das
lock
enter
out
inc
and
inc
dec
pop
sub
mov
add
test
mov
lock
call
aad
loop
mov
testb
xor
push
mov
sbb
xchg
test
jne
fmul
inc
test
xor
sahf
sbb
add
dec
call
add
lret
aad
dec
cmp
jmp
stc
add
sub
data16
rcrb
add
mov
andb
jl
cmp
cmpsb
pop
hlt
sub
xchg
fiadds
dec
in
mov
pop
mov
stos
sbb
std
push
add
ljmp
lds
rolb
scas
add
test
add
or
xlat
repz
inc
dec
aam
into
cmp
mov
push
pusha
ss
mov
inc
outsb
ffreep
xchg
shl
stos
add
loop
push
cld
push
popl
mov
sbb
pusha
movb
arpl
ficompl
out
fwait
in
mov
test
add
add
push
cltd
rolb
mov
push
mov
fsts
add
fs
fstpt
arpl
add
pop
flds
data16
cld
sbb
xchg
addb
cmpsl
push
lret
and
jo
aam
aas
mov
pop
incb
out
dec
cmc
mov
in
clc
xor
add
cmp
incl
inc
adc
fwait
ss
and
out
or
mov
std
or
mov
shll
add
mov
ljmp
leave
bound
fidivl
sbb
pop
or
push
andb
bound
push
and
push
xor
add
rolb
push
mov
mov
push
fwait
popa
lods
push
rorb
add
sbb
jp
mov
pop
in
add
xchg
iret
rolb
dec
or
outsl
add
addb
shrd
lret
push
mov
xor
lea
gs
adc
repz
jmp
xchg
in
testb
cmp
jmp
mov
fmull
das
ret
out
addr16
inc
mov
dec
mov
add
mov
repnz
push
out
jg
lods
add
in
lods
and
mov
cmp
fisubrl
cmp
add
rorl
sbb
test
jo
mov
clc
xchg
jge
and
in
nop
jmp
call
inc
cmp
nop
mov
xchg
into
add
into
pop
mov
dec
or
mov
fcmovbe
sub
hlt
into
cmp
call
mov
inc
dec
pusha
gs
add
xchg
loop
jecxz
push
add
pusha
movb
ja
js
dec
addr16
add
f2xm1
mov
pop
push
lock
sbb
lcall
out
gs
out
add
fldt
sub
inc
add
pop
mov
jecxz
cmp
adc
sahf
or
sub
inc
push
andl
push
out
or
adc
add
aas
imul
xchg
inc
or
mov
subb
les
dec
pusha
add
mov
add
sbb
adc
cmpl
push
xorb
mov
xorb
push
cmpsb
xor
add
xor
add
cmp
cmp
fistpll
fmul
add
xchg
nop
popaw
rcr
andb
and
test
roll
add
xchg
and
add
mov
and
dec
adc
adc
and
fstpl
inc
dec
cmp
popf
call
add
jmp
rorb
subb
ret
pop
mov
in
sub
or
mov
and
jnp
inc
nop
jle
and
inc
aam
iret
inc
js
xor
pop
in
add
rorl
add
fucomp
orl
jmp
leave
in
andl
fs
push
mov
mov
mov
rorb
mov
aas
std
add
int3
insb
lock
int
repnz
inc
js
jmp
scas
cmp
and
jns
dec
adc
adc
add
dec
add
pop
in
pop
in
out
add
outsb
xor
les
pop
or
shrb
rclb
or
jecxz
ss
adcl
enter
dec
add
call
loopne
push
es
addb
mov
push
orl
out
fadds
push
and
scas
add
mov
int
and
cwtl
xor
rclb
add
in
and
sub
ds
addl
dec
test
loope
out
pop
inc
mov
clc
cli
mov
add
cmp
add
jp
in
roll
dec
jg
inc
mov
xchg
gs
inc
jno
add
daa
push
add
jb
and
js
add
pop
adc
fs
add
jne
add
cmpsl
pop
sbb
xorl
push
pop
pusha
cli
jo
xor
hlt
mov
mov
mov
add
aad
jge
nop
add
and
pusha
data16
lods
popa
add
push
xorb
push
lock
sub
outsl
out
xor
insl
cli
cltd
fiaddl
iret
xor
lahf
jg
xchg
ss
pop
cmp
sbb
outsl
dec
cwtl
fcmovnbe
mov
int3
pop
scas
cmp
mov
cmp
pop
out
rclb
push
sub
sub
repnz
pop
jmp
xor
pop
nop
fiaddl
inc
xchg
in
add
dec
test
loopne
xor
add
mov
push
lds
or
mov
sub
cmp
mov
dec
add
popa
rcrb
push
divb
add
and
jp
jle
ds
sbb
xor
fisttpll
out
or
sub
fs
jg
add
sub
add
bound
dec
lock
sti
sbb
pop
dec
adc
xor
add
lahf
in
push
xchg
int
call
sbb
sub
sbb
pop
cmp
add
mov
xchg
scas
sbb
or
shrl
mov
les
add
aad
stos
dec
fidivl
add
xchg
rclb
xor
jne
arpl
in
mov
popa
jge
and
push
popf
xor
mov
int
dec
mov
lods
inc
xorb
cld
shrb
repz
jae
mov
shr
int3
clc
arpl
inc
push
lret
movsl
xor
push
pushf
add
lods
neg
push
pop
xor
pusha
je
mov
jo
jbe
add
mov
sbb
jg
or
out
sbb
xchg
lcall
leave
mov
inc
out
dec
mov
mov
adc
sub
add
xor
cli
fidivrs
addr16
dec
add
add
adc
pop
mov
push
cmp
or
xchg
cmp
leave
movsl
or
xor
sub
lods
inc
sub
movsb
add
xchg
roll
ret
rcrb
jmp
xchg
cmp
enter
scas
dec
fsubrl
jne
sub
loop
sub
add
ss
xor
lods
lcall
movsb
add
add
addb
fdivp
pusha
adc
enter
sbb
loopne
add
stc
into
push
sti
inc
dec
cmpsl
fistpll
push
lcall
add
jo
enter
sbb
mov
mov
sbb
push
xor
test
jge
in
je
push
fisubl
sbb
add
lret
push
adc
insl
shrb
push
jo
in
dec
or
rolb
mov
in
je
shrb
mov
dec
fs
into
mov
popf
cmpps
push
orl
and
inc
mov
dec
jl
mov
mov
es
push
xchg
ljmp
pop
sbb
dec
and
outsb
inc
jnp
add
jmp
in
hlt
mov
adc
xor
mov
cmp
je
pop
popa
jmp
bound
sub
sub
pop
inc
xchg
push
add
sti
loop
nop
cmp
inc
add
jbe
flds
fwait
push
mov
cmpsl
push
scas
mov
sub
and
aas
cmpsl
cmp
notb
jo
inc
cli
scas
cmp
imul
jg
fwait
pusha
mov
inc
dec
mov
inc
and
rcrb
jl
mov
icebp
xchg
add
mov
aaa
mov
add
fs
xchg
jae
ds
add
fdivl
sub
pop
fcompl
lock
sbb
add
lret
pop
stos
out
test
add
scas
mov
ds
test
loopne
and
inc
xor
add
mov
inc
push
add
mov
mov
push
adc
or
mov
cmp
pop
inc
add
pusha
stc
scas
pusha
or
ljmp
jg
push
push
cmpsl
lcall
mov
xchg
enter
add
movl
xor
adc
add
insb
loope
xlat
jp
sub
or
add
sub
sub
std
mov
xchg
jno
sub
push
mov
xor
xor
and
xor
push
stos
sarb
call
add
pop
xchg
rcrl
push
push
fsubr
sub
ja
pusha
vplzcntq
in
mov
inc
sub
lret
fisubrl
mov
sub
inc
mov
jb
fcomps
mov
cmp
sbb
mov
and
add
jmp
sub
inc
pop
in
add
jo
or
int3
adc
test
lock
add
aas
lcall
add
mov
pop
jnp
add
lods
stc
mov
inc
roll
and
push
cmp
ja
and
inc
xor
add
cmp
leave
mov
jg
inc
cld
lods
add
lock
jb
out
cltd
aaa
or
je
js
testl
fldt
test
pop
cmp
and
adc
add
push
xor
ss
push
xlat
sub
mov
inc
add
addl
inc
lret
popw
sti
jg
pop
movsb
mov
add
xor
xorl
jne
mov
jp
add
sbb
repnz
imul
xor
lret
push
sbb
out
sbb
push
adc
adc
push
pop
hlt
adc
mov
add
sbb
mov
xor
pusha
pop
add
xchg
add
mov
mov
cmp
leave
add
shl
aad
add
push
and
cmp
inc
je
add
push
inc
scas
mov
add
ret
or
je
mov
xchg
scas
add
cmpsl
stos
cmc
add
data16
rorb
push
dec
dec
add
mov
cld
add
adc
add
xchg
add
rol
out
pop
sub
jno
testl
push
std
leave
add
jl
stos
mov
movsl
mov
adc
cli
cmpsb
insb
out
add
pop
mov
lds
sbb
sub
lods
add
addr16
mov
arpl
add
outsl
mov
clc
xor
push
dec
mov
in
xor
push
mov
or
add
into
shrb
pusha
push
stc
inc
cmp
adc
pop
add
ss
out
jle
in
add
imul
ljmp
add
mov
imul
fldenv
mov
clc
in
dec
pop
adc
insl
cmc
loopne
cmp
add
sub
add
mov
xchg
repz
add
in
sub
mov
mov
shl
mov
mulb
push
lods
test
repz
dec
hlt
sub
jo
and
lea
jae
call
push
sbb
mov
push
cltd
adc
sub
lods
mov
add
lret
mov
ret
or
out
inc
push
cmp
or
aaa
xor
mov
push
add
jecxz
pop
adc
mov
or
cmpsl
test
enter
or
jno
add
push
fcom
adc
loop
xor
sub
test
mov
mov
inc
mov
xor
outsl
add
cmp
aam
repz
xchg
cmp
xorb
in
test
jle
loopne
add
int3
into
or
or
loop
add
xchg
pop
test
mov
inc
sbb
mull
add
add
aam
inc
pop
mov
mov
add
imull
mov
pop
add
es
add
aad
outsb
jnp
inc
and
movsl
or
les
arpl
jl
pop
cmp
testl
lds
and
push
add
fsubs
push
push
movsb
arpl
xchg
add
rclb
insb
adc
xor
loopne
fdivrs
sbb
dec
cmp
mov
adc
dec
pop
push
jbe
gs
add
mov
jae
cld
cld
add
stos
stc
or
sbb
sbb
mov
inc
into
push
pop
test
fsqrt
xchg
add
aas
jle
mov
int3
adc
push
add
mov
jbe
stc
aad
mov
push
pop
addr16
fiadds
pop
clc
repnz
and
mov
cmpb
sti
pop
lahf
in
add
imul
roll
cmp
stos
mov
test
out
push
lcall
xchg
dec
nop
and
cmp
adc
cmc
int3
cli
pop
jle
or
mov
add
insl
adcl
sbb
faddl
jbe
into
xor
mov
shlb
call
mov
and
push
mov
cmp
pop
lods
out
test
movsl
ljmp
notl
dec
roll
cmpsl
test
mov
das
inc
add
orl
mov
pushf
mov
add
daa
fiadds
and
or
push
cmp
inc
icebp
clc
mov
xchg
push
adc
and
cmp
xchg
popf
clc
sbb
sub
xor
mov
cld
add
dec
nop
pop
sub
cmp
addr16
jae,pt
add
js
mov
inc
aad
dec
dec
popf
ret
adc
or
jecxz
mov
mov
cmc
and
adc
fldenv
add
cwtl
sub
adc
int
push
mov
enter
jl
cltd
jbe
add
cmp
dec
pop
add
pop
das
out
cld
es
dec
or
popa
xchg
mov
add
repz
jb
add
jl
cmp
jge
cld
pop
clc
sub
jno
stc
xor
pop
add
fadds
in
lcall
std
cmp
js
xor
rclb
test
nop
cmpsb
dec
pop
pop
add
jns
or
aad
je
and
push
roll
aaa
loopne
ficoms
dec
jle
add
push
loope
js
inc
imul
rcr
popf
push
shrb
pusha
sbb
mov
push
xchg
adc
mov
and
add
lret
or
pushf
in
add
aas
jmp
scas
pop
sub
add
jo
jge
inc
stc
into
and
out
pop
adc
pop
push
out
jmp
loope
clc
add
mov
test
pop
dec
push
push
add
movsb
cmp
fldcw
insl
ret
test
jge
sub
xchg
add
subl
stos
add
jmp
inc
xchg
pop
iret
fwait
inc
jge
mov
inc
loopne
lock
ret
nop
in
popf
shlb
mov
jns
add
lret
cwtl
mov
out
add
lahf
sbb
frstor
add
ds
add
push
out
sbb
xorl
add
jne
ret
add
jb
pop
and
lds
rclb
int3
ss
mov
mov
scas
cmp
jecxz
sbb
mulb
pop
mov
hlt
and
test
ds
dec
sbb
add
adc
push
xchg
jne
push
mov
out
add
push
add
xchg
pushf
in
movsb
in
push
and
jae
in
and
and
adc
ficoms
lods
mov
pushf
fsubs
xor
into
cmp
xor
jnp
mov
lcall
ss
pop
add
jmp
mov
pop
mov
aaa
add
out
sub
and
fcomps
xor
rolb
insb
je
xor
mov
pop
adc
cwtl
mov
pop
pop
xchg
fs
push
dec
pop
xchg
or
iret
dec
jns
cmpsl
rolb
jno
lahf
xchg
lea
pop
out
mov
mov
clc
leave
jmp
lea
jge
mov
mov
cltd
addr16
mov
gs
das
rcrb
icebp
pop
testb
test
pop
cmpsb
jp
mov
cmp
outsb
add
pusha
sbb
jmp
jae
js
jb
sub
add
push
xchg
notl
test
add
nop
stos
and
add
dec
jbe
dec
test
jl
pop
add
inc
pop
jmp
jecxz
jle
push
out
xor
ret
test
push
dec
rolb
pop
aas
aam
xchg
loope
addr16
lods
dec
lahf
mov
xlat
js
lods
mov
add
and
add
daa
pop
add
stos
or
add
faddp
jge
stos
arpl
test
lcall
icebp
jno
inc
jle
or
jnp
add
add
pop
cmpsl
hlt
pop
mov
mov
and
repnz
jmp
xchg
andl
xor
add
jno
xchg
icebp
testl
mov
cmpb
sub
dec
fwait
lret
push
inc
loop
add
in
call
pop
push
pop
pushf
mov
out
test
and
push
out
int3
jno
movsb
fsubrs
dec
pop
lea
pop
ljmp
sahf
movsl
call
addb
subl
inc
out
and
cs
add
clc
add
daa
mov
ss
and
add
int
sub
inc
add
and
mov
push
sbb
and
add
xor
ss
mov
int
fsubrs
sub
add
iret
loop
enter
hlt
fmulp
aaa
stos
add
rcrb
outsb
mov
and
cwtl
or
xchg
test
mov
mov
jns
mov
incl
mov
and
adc
loop
sti
add
and
dec
js
xchg
in
pop
ret
inc
adc
push
mov
xor
mov
fiadds
iret
or
rcrb
fiaddl
test
jae
inc
add
ret
fdivrs
fidivrl
xchg
jmp
inc
hlt
mov
in
stos
dec
pop
rclb
or
and
push
pop
sbb
js
jo
lods
inc
xor
cmp
pop
add
fldt
push
adc
jb
addr16
sbb
ja
add
xchg
cmp
rcl
fidivrl
cmpsb
adc
sbb
sub
rorb
add
je
add
iret
clc
test
into
icebp
add
dec
push
xchg
daa
sbb
add
aaa
mov
sub
push
or
lods
outsl
loop
add
stos
in
cli
push
inc
add
inc
mov
add
pop
movsb
sarb
jae
fwait
addl
mov
aam
push
mov
sub
add
loop
das
int3
mov
iret
xor
rep
xchg
sti
add
inc
mov
outsl
rcr
cmp
into
inc
or
gs
inc
xlat
cwtl
mov
add
cmc
cltd
mov
xor
ss
add
adc
lret
mov
push
add
testl
repnz
add
rclb
pusha
inc
pop
pop
insb
add
cs
jle
fbstp
add
loop
iret
popa
dec
inc
ficoml
pop
pop
out
repz
dec
sbb
sub
sahf
call
add
pop
mov
pop
inc
fdivrl
into
iret
das
add
xchg
adc
add
push
jmp
xchg
add
popa
sbb
insb
and
add
push
add
cwtl
movsl
pop
fadds
fimull
in
xorb
or
inc
or
out
lock
dec
pusha
and
inc
cmpsb
int3
sub
int
sbb
xchg
lret
cmp
pop
mov
jb
and
lods
pand
incb
xchg
xor
mov
pop
stos
daa
out
and
pop
mov
add
addr16
xor
into
or
mov
add
fwait
test
jo
pop
xor
icebp
lock
or
push
xor
fwait
jg
pushf
pop
xlat
mov
sub
add
loope
in
pop
movl
ret
sub
add
adc
dec
shr
xor
lret
add
inc
cltd
aad
cmp
sbb
push
adc
jnp
ds
mov
or
lret
jb
test
mov
push
divl
jle
and
push
ffreep
cmp
lds
stc
pop
orb
add
mov
dec
fldcw
lret
setp
shll
outsb
add
add
xchg
add
ja
add
call
cmp
pop
push
add
lock
xchg
sbb
xchg
dec
lock
jno
push
xor
dec
add
cmpsb
lods
fimull
push
fs
testb
test
mov
push
mov
xor
popa
ret
cmp
loop
xor
subl
jge
mov
jmp
lahf
cli
ja
jo
aam
and
push
dec
subb
adc
scas
popa
or
push
inc
add
xor
or
aad
add
lods
insl
aaa
out
fcoms
or
out
jg
pop
or
scas
fmull
jne
mulb
lock
aad
add
add
sub
add
mov
mov
hlt
xor
fstl
jae
add
cltd
mov
icebp
cmp
cmpsb
enter
idiv
fistps
inc
pop
xchg
and
repz
pusha
add
loope
mov
xchg
push
fldlg2
jg
lret
add
repnz
mov
call
leave
lret
cltd
ret
sbb
jl
push
mov
dec
dec
mov
imull
add
loop
iret
sub
jg
sbb
inc
sub
add
sub
cs
roll
jg
inc
and
loopne
pmuludq
push
or
hlt
aam
ds
cltd
sahf
push
dec
shll
cli
cld
and
rolb
mov
mov
ljmp
aas
and
int3
popf
xchg
add
add
jae
stos
mov
loopne
test
ret
and
aaa
sti
ret
sub
sbb
inc
pop
xor
ret
inc
lcall
jge
add
nop
dec
loopne
outsb
rclb
sbb
xor
add
test
and
enter
divb
je
or
and
or
or
push
inc
or
fisubs
nop
xor
icebp
or
out
or
push
in
cli
xchg
test
out
sbb
pop
and
ficoml
nop
fcmovb
pusha
add
or
sbb
mov
push
inc
sahf
xor
dec
adc
add
aas
or
lea
or
mov
jge
subl
mov
ret
in
dec
or
add
add
xor
mov
dec
mov
push
sbb
faddl
repnz
or
decb
adcl
fldcw
sbb
add
mov
fadds
in
cs
or
push
add
fstpt
nop
jl
jl
xchg
mov
insb
xor
stc
or
mov
js
fnstcw
jg
in
jns
mov
mov
jle
sbb
pop
jge
xchg
xchg
jp
cmpb
sbb
cmp
aas
lea
mov
leave
bound
mov
adc
mov
pop
inc
push
jg
mov
sub
lock
pop
jo
add
aad
rclb
mov
clc
mov
lea
mull
mov
enter
jnp
dec
or
cmp
mov
mov
push
push
jecxz
and
jp
sub
jnp
jns
add
jb
andb
enter
shll
test
mov
and
mov
ficoms
sti
or
or
push
jns
cmp
faddl
mov
hlt
push
mov
aaa
or
push
mov
pop
adc
or
mov
adc
dec
mov
inc
fsubl
clc
xchg
pop
test
add
inc
iret
mov
rcr
pop
push
mov
mov
ret
fidivrs
adc
rolb
sub
addr16
mov
or
mov
or
arpl
add
xchg
xchg
fcoml
test
mov
enter
push
add
or
mov
movb
xchg
add
mov
cmp
out
fldl
stos
add
xchg
cmp
cmp
shl
push
insb
push
je
lods
loopne
push
push
fsubrl
add
sub
les
adc
rorl
aam
mov
in
push
pop
sub
addl
mov
test
insb
std
jae
xor
int3
mov
sub
add
add
push
add
cli
cmpb
xchg
out
pop
scas
cmp
cwtl
add
add
in
pusha
jno
inc
sbb
xor
adc
push
add
push
add
sarl
roll
repz
inc
fwait
mov
add
out
movb
mov
pop
xlat
andl
aaa
faddl
xorl
in
fs
mov
stc
add
adc
nop
js
inc
inc
mov
adcb
in
dec
pop
mov
lods
cmp
adcl
push
loop
add
mov
addb
out
scas
add
andl
loop
mov
or
sbb
push
lds
mov
in
jb
xor
xor
bound
add
dec
jmp
xchg
sub
and
hlt
push
clc
add
push
fs
loope
or
inc
aaa
sbb
shll
mov
std
shll
ret
sbb
or
fs
jbe
add
out
cmp
jl
sub
hlt
and
aaa
enter
rcl
inc
call
aas
les
shll
inc
jg
jns
jno
or
lock
mov
or
call
add
es
mov
add
andl
mov
add
jmp
outsb
add
aas
adc
push
mov
mov
xor
sbb
fidivs
jne
mov
in
inc
sbb
fiaddl
nop
push
add
push
dec
jns
addb
pop
add
or
or
lods
push
cmp
jmp
or
cmp
clc
jmp
out
add
xchg
lea
xor
sti
test
scas
mov
call
xor
push
sub
push
add
in
fsub
into
add
adc
dec
rolb
mov
nop
mov
jge
dec
in
es
popa
dec
insb
pop
repz
adc
sar
or
outsb
pop
aad
addb
inc
push
jae
addr16
push
lret
push
nop
pop
inc
fcmovu
or
test
lret
in
sbb
cmp
xor
mov
dec
dec
clc
adc
xlat
int
ljmp
lret
push
fwait
inc
and
xchg
cmp
popf
jmp
and
xchg
adc
jae
jbe
pop
jg
add
testl
in
popa
pusha
scas
and
add
lods
roll
inc
ja
cltd
mulb
push
scas
mov
dec
cmp
mov
xchg
jg
in
addr16
fldcw
mov
inc
rolb
movsb
add
jle
inc
lock
stc
dec
cmp
std
add
test
popa
ljmp
xor
sahf
in
or
ds
add
add
dec
mov
repz
inc
add
test
scas
je
add
pop
rolb
and
add
mov
popf
mov
loopne
add
pop
outsl
sub
fildl
gs
les
pop
stc
push
es
add
nop
stos
and
jmp
lock
push
es
xchg
subb
inc
jns
xor
lcall
movsl
xor
incl
test
arpl
jl
sbbl
ret
xchg
push
cmp
pop
or
repnz
cli
scas
pop
ret
into
das
mov
les
rolb
add
nop
add
je
cli
sti
cltd
jl
pop
and
ret
jo
pop
fldcw
pusha
jb
pusha
jl
push
push
jmp
dec
add
mov
dec
xchg
pop
popa
loop
sub
add
sbb
int
rcrb
mov
jbe
or
subl
mov
icebp
int
xchg
mov
pop
mov
aas
rolb
aam
pop
sti
mov
subb
add
lahf
fwait
scas
shrl
add
jge,pt
adc
mov
adc
xchg
and
shlb
iret
push
mov
rolb
ret
pop
call
ret
push
xor
mov
and
aas
and
test
stc
add
and
lret
jp
push
or
push
leave
dec
call
or
pop
sbb
dec
sahf
cmp
push
add
stos
pop
adc
fwait
or
pop
adc
test
jne
or
cmp
clc
jbe
test
sub
inc
or
mov
add
add
pop
adc
cltd
in
test
fninit
fiadds
xorl
fs
mov
sub
mov
push
cltd
ret
out
mov
les
push
stos
pushf
cmp
sar
or
jno
pop
adc
mov
xchg
lea
adc
inc
out
jae
jmp
lods
addb
popf
xchg
js
jg
imul
add
inc
lret
sub
mov
cli
sub
or
sbb
cld
sbb
add
push
fsubrl
into
xlat
jbe
mov
test
sbb
ret
mov
shl
js
hlt
dec
ljmp
or
aas
adc
push
icebp
in
add
mov
shll
add
mov
and
mov
push
bound
rolb
fmul
movl
lods
in
dec
adc
push
add
cmp
push
pop
lock
add
or
xchg
dec
test
sbb
jp
push
adc
fsubp
repnz
add
fwait
inc
xor
and
lds
inc
jns
hlt
xchg
testl
fs
mov
mov
sub
xchg
push
ret
in
dec
arpl
rcrb
out
jb
add
out
test
jne
pop
out
ja
cld
xor
or
aad
jmp
fdivs
add
lock
pusha
stos
push
pop
sub
mov
int
add
dec
ds
sbb
pop
dec
dec
or
inc
xor
adc
rorb
xor
cmpsb
add
or
ljmp
orb
sub
in
test
pop
add
push
dec
stos
pop
cld
jo
or
data16
mov
sbb
aad
aas
cwtl
and
adc
dec
lahf
out
add
pop
imul
add
adc
push
and
mov
in
fistps
into
data16
subl
outsl
jo
add
ja
add
test
adc
fsub
xchg
es
or
cli
add
aaa
subl
sahf
dec
add
test
scas
mov
lods
in
dec
and
push
push
jns
shlb
dec
mov
jbe
lret
pop
xorb
pop
add
fadds
push
mov
jnp
cmp
jnp
add
inc
daa
pushf
js
add
xor
in
popf
mov
test
cmp
testl
add
pusha
aas
cmp
push
mov
add
dec
adc
add
jg
add
xchg
loope
out
rorl
xchg
jbe
pop
pusha
pop
adc
mov
sub
pop
ds
and
add
out
in
xor
sub
test
add
xor
dec
add
mov
int
es
mov
jnp
push
rcl
pushf
push
mov
ficoml
out
cli
push
cmp
aad
enter
pop
mov
xor
cmovl
movsl
popf
and
out
xchg
addb
adc
add
xchg
mov
add
je
sub
mov
jge
dec
lds
adc
inc
add
andb
sub
dec
test
in
jo
popa
ja
or
push
sbbb
popf
fdiv
add
call
xchg
add
enter
inc
sub
xor
fsubrl
adc
pop
outsb
mov
cmpsl
push
aam
jmp
cmp
les
in
fnsave
add
popf
insl
outsl
sbb
fcomps
stc
loop
out
push
ret
add
mov
add
mov
loope
cmp
pop
sub
dec
adc
repnz
xchg
pushf
sbb
test
jbe
dec
loopne
out
xor
loop
adc
fsubl
mov
add
dec
lds
adc
insl
test
mov
and
bound
add
sub
cmp
outsb
andl
imul
pop
sbb
and
mov
xchg
ljmp
insl
out
aas
xor
mov
xor
jge
adc
add
ret
or
dec
adc
or
shlb
js
popa
dec
cli
mov
adc
add
jb
sub
cmc
and
dec
mov
dec
add
mov
repz
out
mov
call
jae
shlb
inc
xlat
jecxz
xor
mov
cmp
mov
pop
repnz
sarl
dec
js
xor
sbb
lds
lret
lea
sub
push
int
pandn
pop
decl
and
out
add
xorl
and
push
insb
fdivrl
mov
shll
xchg
les
jnp
and
pop
add
mov
ss
into
and
shlb
nop
sbb
iret
dec
out
enter
add
lock
push
add
enter
and
scas
inc
mov
adc
xchg
add
fisubl
es
mov
nop
and
jmp
sti
push
in
test
mov
add
icebp
add
and
push
imul
popf
rclb
divb
out
fs
test
pop
sub
add
xchg
and
or
dec
or
lret
loopne
mov
mov
iret
or
orb
clc
dec
mov
ss
imul
mov
sub
jl
shlb
incb
loope
test
mov
pop
loopne
push
mov
ljmp
sub
or
add
mov
pop
fstl
xor
xchg
ljmp
mov
stos
and
test
les
fs
add
cmpsl
out
sub
sub
add
and
add
jnp
pop
sarl
push
add
sbb
pop
inc
cmp
mov
add
shlb
mov
ret
mov
or
or
sbb
push
movsb
cs
or
add
adc
jge
add
xor
inc
repz
lahf
fdivrs
add
into
mov
sti
rcrb
cmp
movsl
add
fwait
test
sbb
and
adcb
add
iret
insl
mov
cmp
adc
in
sub
int
add
idivb
sub
mov
mov
sub
les
push
loope
jmp
in
loop
je
mov
or
lret
out
decb
les
add
jge
nop
ljmp
mov
mov
jp
inc
xor
daa
into
test
jecxz
lock
fcoms
add
push
ror
subb
mov
and
ss
std
add
sub
mov
push
int
push
imul
and
enter
push
aas
mov
loopne
add
lods
test
inc
clc
shl
rorb
dec
inc
sbb
pop
int3
inc
or
xchg
es
sbbb
orb
mov
mov
add
jg
xchg
jb
jno
add
pop
inc
clc
inc
xor
sahf
shll
insb
daa
pop
ja
jl
push
hlt
jbe
xchg
inc
and
movsb
add
imul
add
in
fwait
push
inc
jp
jne
add
aaa
out
ss
cmpsl
arpl
leave
int
shlb
jle
add
inc
sar
mov
ss
jne
add
inc
fcoml
add
out
aas
data16
sbb
add
fimull
mov
cmp
lret
mov
test
jns
cmp
cwtl
cmpsl
push
xchg
mov
lock
lcall
bound
push
mov
add
mov
in
push
adc
or
js
mov
push
sbb
mul
inc
xchg
dec
dec
add
cmp
movl
add
xorb
sbb
cltd
add
jecxz
cmp
int
xchg
inc
outsl
lock
and
mov
jge
das
test
stc
popf
add
pushf
call
es
imul
cwtl
icebp
ret
jg
in
orb
sbb
out
and
add
inc
imul
stos
sbb
add
aad
add
xchg
cld
pop
mov
jnp
loope
ljmp
mov
in
adc
out
ljmp
jnp
cmp
lds
push
pop
adc
mov
jbe
addb
pop
xchg
pop
push
xor
mov
nop
jno
outsb
pop
cltd
jnp
sbb
out
mov
pop
cmc
dec
add
aad
les
cmp
sti
in
lock
cltd
fistpl
insb
into
xor
add
xor
test
add
adc
inc
mov
mov
pushf
adc
and
cld
and
and
xchg
cli
lock
sub
ret
xchg
pushf
daa
xlat
xchg
and
add
popa
push
push
hlt
dec
add
add
mov
fnstsw
add
popa
pop
jbe
mov
arpl
push
scas
ljmp
insb
cs
dec
jecxz
sbb
jge
add
mov
inc
dec
in
sub
lret
aaa
or
sub
testb
push
xchg
cmp
add
clc
out
xorl
add
cwtl
cmp
les
subb
mov
jg
jo
jne
adc
dec
add
movsb
xlat
add
add
and
test
mov
ret
cltd
add
dec
roll
ljmp
xchg
xor
testb
add
in
ffree
jno
pusha
dec
add
sbb
add
or
cmp
rclb
cld
arpl
push
lods
cli
jnp
mov
das
ja
rcl
cmp
cwtl
cs
pop
add
add
adc
fcoml
and
cmp
daa
dec
sbb
sbb
insb
movsl
xchg
les
dec
cld
pushf
add
mov
mov
lret
add
jne
or
xor
cmp
sbb
shlb
xor
add
cwtl
xchg
xor
add
cmp
mov
pop
jmp
jecxz
sbb
add
adc
in
rol
sub
fdivrl
mov
subb
xchg
movsb
dec
scas
call
je
test
add
inc
out
les
iret
adc
jp
popa
fcmovne
or
sub
stc
sub
mov
add
or
jl
dec
jo
or
mov
lret
int3
out
repnz
addb
rolb
mov
repz
add
faddl
push
lea
imulb
hlt
jecxz
repz
inc
roll
push
jb
arpl
pop
push
movsb
ss
mov
add
sahf
push
stos
sub
jl
insl
jecxz
or
lods
dec
pop
sub
and
lahf
push
sub
dec
sbb
add
faddl
cmc
add
roll
jnp
add
pop
sub
jge
sbb
xor
aam
rcrb
hlt
in
xchg
jne
es
mov
and
push
insb
xchg
mov
adcb
xchg
pop
fwait
test
js
xor
push
call
daa
fwait
jmp
add
mov
mov
es
sbb
adc
xor
fists
test
shll
lock
jne
pop
mov
push
cmp
testl
jae
cltd
sbbl
inc
pop
mov
stc
sub
mov
sub
fsubrs
xor
fsubl
mov
loopne
add
push
stc
int3
leave
push
rclb
xor
arpl
testl
movsl
or
push
add
stc
arpl
push
add
sbb
add
xchg
test
mov
int
sbb
push
pop
lock
mov
into
add
loop
pop
add
std
inc
leave
add
int
cmpsb
imull
and
push
or
loop
sub
or
xchg
push
std
adc
outsl
fldl
add
arpl
or
push
filds
leave
sbb
add
in
out
cs
adc
mov
sbb
nop
sbb
and
jns
mov
and
dec
push
jmp
sub
xor
mov
pop
loop
inc
pop
xor
add
xchg
add
push
repnz
cmp
mov
out
xchg
vandps
enter
pop
bound
test
dec
test
add
xor
xor
scas
lahf
add
repz
inc
push
cwtl
add
adc
fsubr
xchg
sbb
add
sub
faddl
outsb
pop
or
cmp
mov
sub
and
sub
orl
sti
sub
pop
pop
fsubr
push
add
loopne
cmp
test
enter
pushf
stc
and
add
mov
adc
push
xchg
les
je
fisubs
or
xchg
cwtl
jno
sbb
roll
psllw
inc
cmp
sub
mov
sti
jns
dec
pop
mov
sbb
inc
test
inc
imul
sbb
sub
enter
jnp
pop
mov
jae
add
lock
xor
mov
lcall
aas
cmp
lock
stos
add
cmp
ja
adc
fildl
sahf
mov
aas
cmp
inc
adc
inc
add
aas
and
pop
sarb
mov
aam
cltd
dec
jle
and
loopne
call
pop
and
fldl
adc
xorl
enter
push
add
sbb
add
sbb
movswl
ret
add
ds
add
sub
cli
sub
shlb
in
xor
cmp
jge
add
test
cmc
sbb
push
and
repnz
xor
cmp
xlat
add
fldenv
pushf
mov
jae
int3
dec
call
mov
pop
mov
push
in
sbb
add
outsl
push
pop
jb
and
adc
dec
push
xor
and
pop
imul
push
push
push
lcall
subl
sub
mov
stc
add
cmc
out
repnz
add
pushf
xor
shlb
aaa
mov
sbb
cmp
dec
pusha
out
cld
outsl
fimull
pop
and
add
or
dec
fbstp
add
pop
pop
cwtl
add
test
ret
adc
push
xor
xchg
subl
xor
add
adc
sbb
js
cltd
sbb
push
jmp
shlb
add
pop
sahf
xor
faddl
stc
dec
dec
ret
mov
adc
add
cmpsl
and
pop
pop
stos
pop
push
mov
imul
shlb
cmove
adc
mov
push
daa
fs
repnz
icebp
iret
add
mov
gs
fisubl
add
mov
or
mov
shr
cli
push
inc
sbb
cmpsb
sbb
sti
cltd
adc
loopne
sahf
dec
and
push
stc
mov
xor
pop
xor
dec
lret
or
mov
jl
add
popf
mov
jl
pop
popl
pop
test
sbb
pop
jae
inc
add
dec
scas
shll
ror
test
jb
das
sbb
leave
nop
dec
repnz
repz
les
sbb
lock
jg
sbb
mov
daa
pop
outsl
jle
loopne
jmp
faddp
sub
adc
out
scas
mov
xlat
add
hlt
cltd
ja
int3
add
incb
jbe
sti
shlb
add
mov
xlat
vandnpd
add
icebp
pop
in
push
test
sub
pusha
mulb
sbb
mov
shr
inc
and
mov
fnsave
inc
push
mov
cwtl
lds
mov
orb
add
bound
inc
mov
add
xchg
sbb
mov
add
shlb
inc
add
dec
in
lret
adc
sar
add
imul
mov
fsubrs
movsb
add
call
fiaddl
popf
cmpb
sbb
or
ss
mov
fbld
add
sarl
add
in
push
push
mov
pop
into
add
push
aaa
filds
outsl
xchg
call
in
mov
sbb
add
insb
adc
push
jb
pop
add
fsubs
arpl
shrb
ljmp
pop
sub
inc
sub
repz
je
dec
js
cmp
movsb
adc
add
int3
incb
andb
leave
mul
or
xor
divl
push
nop
jmp
jg
cmp
or
cmc
dec
jp
js
add
lods
fidivs
inc
mov
adc
inc
lret
xchg
add
mov
sarl
xor
add
pop
std
jbe
cmp
xor
int3
fcmove
fisttpl
lea
pop
loopne
push
sub
push
add
mov
add
cld
jb,pt
adc
scas
dec
sti
adc
and
pcmpgtb
lret
add
sub
and
and
jb
pop
lahf
cwtl
mov
inc
or
aas
out
pop
mov
jne
mov
cmp
mov
cmp
mov
sub
add
stos
xchg
lahf
or
loop
jo,pn
imul
add
scas
dec
loopne
lahf
pop
sbb
pop
xor
out
int
pop
bound
jmp
in
jbe
push
xchg
mov
lock
lahf
cli
add
jno
pop
cltd
rorb
add
mov
ret
inc
add
sbb
int
jecxz
insl
adc
loop
pop
mov
adc
add
and
add
js
mov
das
iret
dec
aam
add
adc
test
aad
shl
mov
or
add
push
add
push
push
xchg
pop
outsl
push
mov
int3
mov
jbe
sbb
cwtl
sbb
dec
add
das
mov
clc
adc
and
ret
dec
mov
imul
aas
and
mov
adc
cmp
adc
out
aaa
or
fisubs
pop
xor
sbb
dec
add
xchg
mov
test
cmp
xor
add
inc
xor
cmp
lahf
push
push
pop
lods
mov
cmp
int3
ret
sub
das
icebp
and
xchg
sbb
fmull
rep
ja
add
or
xlat
sahf
movsl
loopne
push
fcmovnu
add
pop
mov
add
je
mov
in
dec
std
adc
or
enter
add
ret
push
or
add
add
loopne
add
sbb
xchg
or
rorl
out
sub
mov
adc
add
stos
or
adc
jns
add
sub
clc
bound
cli
loope
jb
or
cmp
fcoml
push
xor
cli
test
repnz
mov
mov
jno
cmpb
adcl
daa
jmp
dec
mov
lcall
test
mov
cmp
call
or
add
xchg
loopne
inc
cmp
inc
repnz
cmpb
call
popa
and
lcall
mov
test
sbb
add
cmpsl
jbe
call
mov
fchs
jge
add
insl
mov
mov
ljmp
cmp
stc
faddl
cld
xchg
dec
std
lock
or
add
sbb
adc
rcr
lock
and
jg
pop
aas
add
dec
inc
mov
ret
mov
mov
inc
sahf
je
loopne
iret
icebp
loop
stos
cld
sbb
cmp
add
xor
pushf
pusha
jb
add
test
mov
adc
pop
inc
jns
lahf
in
jne
jbe
rcll
push
stc
sbb
dec
mov
rolb
ja
pushf
and
dec
cmpl
cs
icebp
cmp
mov
sarl
clc
fcompl
push
pop
sub
rclb
pop
push
daa
and
jb
add
icebp
bound
cmpsl
mov
jl
xchg
fildl
subb
sbb
add
dec
into
in
jg
sahf
sub
repnz
stos
fs
cld
nop
add
xchg
jmp
mov
cwtl
xchg
dec
push
pop
push
filds
mov
loop
jmp
mov
add
out
and
mov
xchg
push
jbe
into
inc
aad
outsb
jnp
push
mov
enter
cmp
clc
sub
orl
mov
test
add
jns
lock
stc
cmp
xchg
daa
jp
adc
ds
sub
mov
cli
les
shlb
add
enter
js
clc
sub
add
pop
sbb
or
add
in
clc
add
pusha
sahf
lret
cld
aad
lahf
bound
sbb
jp
or
mov
cs
cwtl
cmp
mov
jecxz
cmp
sbb
fs
push
pop
add
mov
and
fdiv
add
outsl
and
jmp
jmp
mov
pop
pop
enter
push
inc
repnz
push
cmp
faddl
sahf
and
pop
cltd
pop
jbe
test
ret
insb
subb
dec
add
cli
add
lods
ret
or
les
mov
or
and
cmp
add
movl
xchg
test
test
gs
lods
out
jb
dec
jo
add
push
adc
int3
call
dec
mov
xchg
repz
int
insb
mov
ljmp
repnz
test
mov
nop
hlt
add
add
inc
dec
mov
xor
mov
aam
add
xchg
xlat
orb
jae
sti
add
scas
jno
add
mov
or
cld
leave
sbb
add
pop
pop
adc
aad
inc
outsl
sub
shrb
stc
xor
dec
sub
mov
cmp
pop
xchg
hlt
adcb
cmpsl
dec
cwtl
cmp
or
daa
add
mov
cs
lods
add
dec
add
jnp
xor
rclb
cmp
je
ret
add
sbb
pop
cs
jb
add
xchg
inc
jbe
stc
push
add
add
mov
adc
scas
cli
arpl
std
or
sub
add
pop
sbb
js
add
mov
add
pop
cmp
aas
jno
imul
fyl2xp1
dec
jmp
mov
cmovo
repz
xchg
xor
pop
inc
adc
orb
cmp
add
lret
add
js
dec
pop
push
imul
ss
sub
scas
lock
inc
ja
add
call
add
and
mov
sub
or
cmpsl
pop
shll
push
or
or
incl
jmp
nop
mov
add
cwtl
xchg
test
test
xor
add
and
sbb
int3
sub
addl
adc
jbe
out
sahf
cli
xorb
call
mov
or
xor
lock
add
sub
stos
mov
mov
pop
push
pop
insl
pop
mov
pop
ficomps
testb
and
sub
arpl
pushf
add
dec
jno
lcall
mov
xchg
leave
pop
cli
pop
dec
dec
shl
push
test
cmp
test
outsl
adc
jo
add
inc
jp
out
sbb
pop
iret
mov
cmp
add
stos
repnz
test
xor
pushf
adc
sbb
test
pusha
inc
or
pop
adc
push
fisttpll
call
mov
loop
mov
jne
xor
in
lods
add
inc
and
cmpsb
ror
das
push
mov
nop
add
add
adcb
cs
add
pop
add
or
mov
xorl
pop
cwtl
xor
pop
push
lock
jl
add
and
xor
and
es
into
mov
mov
mov
add
xchg
pop
xor
add
push
mov
jmp
in
adc
pop
inc
push
outsl
call
je
sahf
mov
fisubl
add
push
sbb
jo
daa
lret
orb
mov
fs
dec
adc
lock
lock
and
lahf
fdivl
and
cmp
imul
push
jg
cltd
out
ret
jge
pop
clc
inc
lock
jmp
in
pusha
cmp
mov
daa
cmpsl
sub
lods
stos
adc
push
jp
add
xchg
sbb
jns
stos
inc
fnstenv
mov
add
pop
pop
inc
out
shrb
jl
fimull
cmpsl
popf
add
jp
ds
js
add
lcall
dec
sub
add
jl
pusha
mov
cwtl
add
cmpsb
adc
or
pop
js
dec
jae
and
jno
dec
pushf
adc
out
jnp
and
push
or
mov
cmp
cmpb
cs
or
inc
xchg
push
mov
xchg
and
sbbb
pushf
push
jne
or
hlt
int
add
int3
sbb
jb
jo
sub
mov
insl
fwait
add
repnz
sub
and
loop
add
divl
pop
stos
and
sub
mov
pop
test
shlb
pop
add
daa
rcr
push
filds
popa
fs
cmc
cmp
or
lret
rcl
sub
sbb
xchg
cmpsl
and
int3
jle
pop
movsb
push
push
mov
or
out
popa
dec
push
dec
pop
jae
orl
aas
pusha
loopne
mov
or
jno
xchg
sub
int3
adc
into
add
push
bound
sti
cs
and
add
and
mov
cwtl
les
das
xor
movsb
add
pop
push
push
add
in
cli
aam
ljmp
ret
out
nop
fcoms
aad
adc
xor
lea
enter
jp
sbbl
test
sbb
mov
pop
imulb
pop
aaa
dec
div
jge
or
rcrb
shrl
testl
fstl
dec
xchg
aaa
or
cltd
jnp
call
addr16
sub
sbb
xrelease
push
add
aaa
and
sarl
dec
push
jo
push
adc
int
daa
frstor
pop
xchg
lods
and
fistpl
or
add
mov
add
mov
andl
sbb
and
movsl
add
inc
sbb
push
mov
addr16
add
lcall
pop
cmpb
cltd
dec
cld
adc
aaa
cmp
lahf
je
xchg
dec
xor
shl
mov
sbb
sbb
cmp
scas
aas
push
std
add
mov
lods
jmp
popf
inc
in
test
mov
dec
mov
sbb
sbb
and
add
xchg
es
inc
mov
aas
xor
inc
cmpsl
in
and
cmpsb
or
adc
pop
lcall
fwait
ret
dec
add
mov
aad
add
sbb
std
add
inc
cmc
scas
or
mov
idivb
push
mov
push
in
push
sbb
mov
addr16
xor
movsb
add
lods
icebp
sbb
add
jae
lcall
imul
xchg
add
cli
add
jb
pop
cmpl
cmp
mov
daa
add
lret
add
aas
roll
gs
sar
add
or
pop
enter
out
call
fsub
leave
mov
push
or
inc
and
add
xchg
jmp
insb
inc
icebp
mov
js
loope
clc
mov
cmpsb
gs
push
test
xchg
sub
pushf
leave
shlb
insb
xchg
imul
xchg
add
pop
or
push
cmp
in
pop
and
pop
sbb
movsl
arpl
imul
pop
cmp
adc
test
es
add
mov
dec
mov
mov
jl
or
pop
cwtl
add
aas
sbb
add
xchg
sbb
in
sbbb
add
test
test
loopne
pop
call
sub
ror
nop
add
inc
dec
cwtl
adc
mov
lods
repnz
push
nop
mov
sbb
push
push
xchg
sbb
add
jo
add
subb
adcb
inc
ret
push
jp
add
sub
mov
movsl
fldt
testl
jecxz
push
and
inc
cmpsl
sbb
push
xchg
dec
mul
mov
add
cmp
subb
and
sub
les
fiaddl
cmp
mov
lds
filds
jbe
or
sarb
cmp
jae
add
fcoms
outsl
push
enter
pop
add
mov
stos
lret
add
xchg
mov
pop
add
adc
cmpsl
add
movsb
sub
mov
xor
daa
xchg
cmp
pop
shll
or
pop
push
mov
add
mov
mov
or
sub
cmp
ret
add
mov
jge
or
sbb
je
and
add
or
xor
adc
shll
lcall
jno
add
push
in
mov
in
push
or
jo
add
push
sub
fldenv
mull
popf
sti
std
cs
imul
xchg
mov
imul
add
xorb
xchg
fcomi
subb
xor
dec
pop
xor
jmp
lea
rcrb
mov
mov
cli
xor
clc
mov
jno
cwtl
xchg
pusha
fs
mov
jae
pop
adc
add
icebp
fcoml
loopne
add
imul
iret
mov
test
add
imul
and
mov
push
gs
adc
pusha
cmp
cwtl
out
inc
cmpsb
es
jb
add
loopne
ja
shl
ja
add
and
add
movsb
js
es
fcoms
jb
aam
in
mov
dec
lahf
add
in
mov
sub
and
sahf
push
add
xor
jecxz
popf
mov
mov
add
dec
lods
push
and
pop
xor
xorb
dec
sub
push
ja
cmp
sbbb
jnp
subb
inc
xor
cwtl
add
es
and
mov
pop
sbb
rcll
jo
addl
rcrb
xor
pushf
shl
loope
jb
dec
jp
fmull
push
push
mov
add
jg
cld
fs
ja
pushf
pop
add
int3
add
ret
xchg
mov
or
scas
sbb
add
sub
push
or
add
add
inc
add
shll
add
fdiv
push
cwtl
or
enter
inc
and
pop
or
nop
sahf
ljmp
and
push
icebp
imul
mov
mov
ja
jl
add
sti
leave
xor
pop
inc
je
loopne
or
jns
add
xchg
lahf
jb
or
stos
or
std
inc
dec
je
ss
add
sahf
dec
inc
daa
test
mov
add
lea
je
dec
and
lods
lcall
inc
adc
mov
cmp
jmp
pop
push
add
shll
cs
in
in
and
xchg
add
mov
pusha
pop
orb
add
pushf
adc
imul
add
cmpsb
jne
repnz
lahf
jg
push
jno
nop
and
outsb
enter
sbb
mov
cwtl
pop
xchg
lods
mov
and
or
pushf
and
in
out
cwtl
lcall
popa
or
test
pop
call
cmp
andb
hlt
mov
popf
jne
in
inc
add
in
pop
pop
push
loop
jo
in
inc
sub
sbb
xor
xchg
addb
pop
pop
aad
pop
insl
fld1
in
inc
sub
fdivl
loopne
jb
add
ja
out
mov
add
popf
push
ds
dec
imul
cmp
xor
icebp
ja
mov
loopne
mov
add
inc
test
jno
out
sti
sbb
sub
xor
xor
mov
stc
inc
ss
je
ret
cmc
mov
lock
lods
mov
loopne
pop
mov
pop
lods
ljmp
mov
sbb
mov
andb
out
push
dec
loop
pop
mov
push
cmpb
jle
inc
xchg
das
inc
movsl
add
mov
lret
push
stc
inc
add
and
loopne
daa
cmc
loop
ret
add
jl
add
stos
add
mov
cld
xorb
jecxz
sub
lds
out
inc
aad
jns
fldl
enter
loopne
lds
sub
bound
flds
cmp
mov
xor
les
in
push
xchg
hlt
mov
je
add
xor
push
mov
loopne
lret
call
mov
add
shl
mov
push
enter
inc
mov
pop
hlt
add
addr16
aad
dec
add
sub
and
subl
int
jl
ret
loopne
pop
pop
lea
or
test
clc
sub
scas
mov
inc
lret
push
cmp
pop
xor
pop
add
cmp
mov
add
sbb
lret
lds
pop
jge
push
push
imul
aas
xor
sbb
push
test
mov
adc
notb
pop
add
cmpsl
popf
fdiv
add
sub
mov
cmc
dec
out
xchg
adc
jp
lock
test
cmp
test
mov
pop
adc
inc
push
inc
push
gs
movlps
mov
insb
mov
add
movsb
pop
and
xor
stos
sbb
aas
imul
iret
bound
sbb
mov
pop
add
popa
arpl
mov
sbb
xor
fistpl
sti
adc
aad
pop
xor
insb
pop
lods
adc
bound
repz
cltd
xor
shlb
test
dec
pop
add
mov
mov
mov
sub
dec
mov
aad
cli
loop
outsb
add
fwait
xchg
sarb
out
mov
mov
std
je
sub
xor
out
dec
and
es
cmp
test
or
in
js
pushf
int3
and
out
outsb
adc
sbb
shlb
inc
push
lsl
add
es
cmc
lahf
jns
dec
add
dec
inc
xchg
mov
test
adc
das
mov
enter
cmp
call
push
adc
repz
add
sbb
add
aad
or
mov
push
daa
insb
dec
je
insl
xor
sub
sbb
mov
sub
scas
popf
roll
mov
cs
call
sub
add
push
cld
out
repz
subb
adc
mov
mov
loope
popf
jge
mov
pop
lods
mov
pop
and
and
and
pusha
cld
adc
insb
stos
fisttps
adc
scas
outsb
pop
lds
mov
mov
std
add
lock
add
cmp
call
add
dec
ret
jmp
mov
sbb
add
pushf
outsl
aam
adc
sub
add
sub
and
fucomip
jp
xchg
jle
fiadds
fildl
cwtl
sahf
push
mov
nop
pushf
jbe
es
fs
push
mov
xorl
fsts
add
std
mov
test
in
mov
add
pop
jg
dec
jbe
negb
icebp
xchg
lock
je
inc
cmp
fidivl
add
push
sbb
cli
daa
lcall
mov
xlat
pop
andl
and
aaa
enter
scas
iret
pusha
fsubrs
adc
lods
mov
xor
scas
cli
clc
leave
xor
push
adc
push
or
inc
cmpb
push
jge
jbe
test
sarb
pop
push
mov
mov
daa
stc
dec
popf
cmp
int
cmpl
cld
mov
ret
mov
sub
push
sub
adc
inc
outsb
add
loop
sub
enter
push
shlb
cwtl
add
adc
dec
xorb
or
and
add
rorb
in
cmp
inc
js
test
jno
push
xlat
out
adc
out
add
dec
add
mov
lock
repnz
out
mov
sar
push
cmpb
and
xor
mov
mov
add
das
adc
cmp
fcompl
lret
outsb
or
fdiv
ret
mov
lds
mov
pcmpeqd
adc
cmpsl
jo
mov
mov
inc
ja
add
or
dec
add
subb
popa
mov
cwtl
cmpsl
insl
mov
in
in
dec
cmp
add
sbb
cmp
insb
push
test
add
cmpsl
std
sub
mov
neg
and
jno
clc
sub
es
add
mov
popa
add
aam
push
nop
inc
mov
idivb
sub
jmp
sbb
lret
andb
cvtdq2ps
call
fisubrl
rorl
ja
je
sub
push
insl
cmp
adcl
add
cmp
adc
cwtl
jbe
sub
cmp
add
pusha
adc
adc
outsb
aas
dec
adc
push
cmpsb
data16
mov
pusha
add
mov
loopne
adc
mov
pop
cmp
sub
mov
je
ret
test
sti
mov
sbb
and
fistl
push
mov
or
and
jbe
insl
pop
test
fwait
add
in
adc
and
test
ds
inc
sbb
xor
es
cmp
push
and
cmp
int
jmp
orb
xchg
dec
shlb
sub
and
and
sbb
mov
into
push
rcrb
add
cmpsl
pop
xorl
cmpsl
add
test
adc
test
or
add
and
ds
dec
push
adc
adc
repz
and
mov
mov
cmp
call
bound
andb
sti
imul
popa
push
daa
mov
sbb
mov
ja
sbb
and
jno
pop
fbstp
sbb
or
es
jne
movsb
shlb
or
push
fnstsw
fdivrs
aas
inc
xor
add
mov
lods
rcll
shrb
mov
or
xchg
pop
fwait
dec
orl
push
add
sbb
dec
mov
popa
dec
mov
pusha
in
or
rorl
je
push
cld
or
push
push
sbb
adc
mov
add
jmp
cmp
popf
xchg
mov
cmp
daa
add
add
inc
lds
mov
orl
nop
push
fsubl
subb
mov
sbb
or
std
movsb
and
fwait
ljmp
dec
inc
adc
jnp
in
dec
out
cmp
inc
rol
push
cs
cmpsb
aam
gs
arpl
xor
insl
mov
rolb
aam
sbb
enter
es
mov
jo
push
xor
push
mov
iret
rolb
or
sbb
into
faddl
or
sti
mul
mov
or
pusha
outsb
adc
int
and
pop
in
mov
xor
loopne
std
rolb
cmp
movsb
or
lcall
xchg
adc
imul
mov
loopne
pushw
popa
and
pop
aad
cwtl
mov
dec
out
adc
push
add
and
and
fldenv
cmpsl
xchg
fiadds
sbb
inc
sahf
mov
jns
xor
sti
push
pusha
cmp
lret
mov
mov
lods
dec
popa
movsb
js
fsub
insl
sbb
xchg
incl
sbb
and
cmpsl
mov
or
adc
xchg
popf
fistpl
xchg
cmp
std
xchg
jmp
test
mov
xchg
xor
adc
push
fistpl
movsb
pop
nop
pop
or
sti
lret
add
in
push
insl
rolb
jnp
cmp
inc
lock
and
push
adc
out
pop
push
xor
nop
fmuls
dec
and
mov
in
inc
cwtl
mov
dec
in
cmp
in
mov
cltd
adc
cmp
cmpsl
cmp
or
xor
or
sbb
xchg
mov
pop
and
xor
aaa
call
sub
lcall
test
loop
add
lods
push
out
movsb
push
pop
mov
xlat
lods
mov
or
add
cmp
add
enter
or
mov
arpl
jno
mov
xchg
xchg
adc
xchg
cmpsl
js
add
xor
icebp
loopne
mov
rolb
xorl
enter
dec
adc
sbb
or
call
mov
push
subb
xor
pusha
mov
js
cld
xchg
mov
pop
inc
adc
call
sbb
in
and
ret
jmp
adc
xor
and
xor
and
inc
popa
inc
cli
add
call
adc
mov
mov
stos
push
dec
fildl
sub
mov
in
flds
pop
xlat
mov
inc
add
add
sub
jle
call
cmp
add
cmpsl
cmp
insl
fists
or
push
jnp
lods
adc
cmp
add
xchg
pusha
adc
ret
loopne
mov
jb
lret
je
movsl
cmp
adc
aam
and
push
and
mov
stos
cmp
inc
outsb
adc
xor
jp
sub
dec
inc
ffreep
xor
outsl
mov
cmp
jne
sub
xor
sub
sbb
lock
and
fldl
dec
addr16
rol
iret
pop
mov
sub
sub
mov
cmp
cld
int
into
leave
daa
jecxz
sub
mov
std
cltd
repnz
xor
xchg
out
and
in
arpl
sub
inc
inc
jo
es
fbld
or
adc
or
aas
and
test
adc
or
loope
push
xor
push
fwait
test
movsl
or
adc
imul
and
lret
sub
lods
adc
imul
adc
in
adc
inc
scas
xchg
mov
adc
mov
cmc
push
mov
adc
inc
test
cmp
pop
pop
inc
fildl
fs
data16
fbld
and
js
orl
add
push
jmp
and
sub
push
xchg
sbb
xchg
sub
xor
or
js
cltd
add
out
rolb
movsb
mov
adc
shll
adc
out
cmp
fisttpl
hlt
adc
or
ret
cmp
cmp
xor
and
fnstenv
or
fistpl
pushf
insb
jne
adc
pop
pusha
adc
lods
cmp
and
fisubrs
scas
mov
dec
xor
addl
sub
mov
fdivs
push
pop
fbld
je
les
sbb
cwtl
jo
mov
out
sub
dec
fs
js
xchg
je
sbb
and
fisubrl
cmpsb
aas
add
push
in
addl
pop
adc
arpl
push
out
dec
ds
or
inc
fstpt
or
dec
sub
sub
add
mov
pop
rep
push
jmp
mov
push
xor
jmp
arpl
nop
sti
rclb
lods
mov
xor
loopne
sub
sub
lock
xchg
call
stos
dec
leave
push
mov
adc
adcb
pop
push
into
push
lcall
fcomps
sub
mov
xor
mov
sahf
adc
fistl
adc
popa
inc
pop
dec
inc
pop
rcrb
cmpsl
pushf
cmpl
push
inc
pop
and
add
sbb
jo
lds
aas
jmp
addr16
inc
pop
shrl
dec
adc
jo
and
mov
lods
add
aam
sbb
rolb
jb
inc
pop
adc
or
ljmp
push
dec
cltd
inc
and
cmc
shlb
cmpsl
xor
push
out
sub
aas
test
cmp
pop
xlat
fidivrs
mov
leave
fisubrl
xchg
xor
sbb
or
adc
lock
or
push
inc
insb
into
push
loopne
adc
inc
or
loope
in
sbbb
mov
jle
push
sbb
ret
dec
and
and
mov
cmp
inc
mov
add
mov
loope
lods
push
test
inc
or
sub
mov
int3
mov
aas
and
and
push
les
pushf
dec
or
and
repz
fisttpll
add
or
nop
jg
popa
sbb
outsb
jo
add
add
jae
stos
xor
ror
out
or
or
call
adc
fldl
and
push
inc
les
sbb
pop
pop
nop
clc
xchg
movsb
fcomps
lods
das
sbb
mov
cmp
js
movsb
out
mov
dec
inc
add
xchg
mov
inc
js
dec
push
cmp
shlb
adc
mov
lock
add
cwtl
dec
cwtl
call
and
dec
jl
sub
pop
sub
adc
xor
sub
ds
pop
sbb
xchg
add
adc
or
and
cld
push
add
sbb
fcoml
mov
repz
dec
dec
and
pushf
ljmp
les
push
push
shrb
ja
sbb
insb
pop
callw
shrb
xor
movsb
add
lcall
cmp
cs
rcr
ja
idivl
lds
and
add
sub
in
push
rcrb
adc
in
stos
mov
lods
shlb
stc
ja
sbb
scas
jo
hlt
sbb
jnp
or
adcb
add
pop
jl,pt
dec
loopne
inc
mov
gs
bound
cmpsl
adc
pop
dec
or
test
mov
add
add
cmp
ror
or
inc
in
and
outsb
into
dec
push
out
test
sbb
fcoms
and
ljmp
pop
push
push
dec
ret
pusha
jne
and
adc
mov
inc
popa
xorl
or
inc
fst
mov
cmc
scas
mov
add
lods
cld
add
testb
testl
insl
or
les
sbb
adc
jge
push
jl
mov
add
push
in
adc
mov
xor
call
aaa
cwtl
or
or
add
sti
adc
xor
out
or
dec
dec
and
sbb
or
movsl
mov
pushf
sbb
or
xchg
addr16
or
rcll
push
dec
enter
or
add
add
sub
mov
or
in
lds
or
sub
push
das
sarb
adc
addl
or
cmpsl
adc
faddl
add
mov
jge
xor
fldenv
sahf
adc
sbb
cmp
xor
add
or
aad
fucomp
pusha
xor
mov
inc
leave
test
movsb
clc
mov
push
test
sbb
les
in
add
or
or
or
inc
mov
aad
jno
lods
nop
adc
push
push
aam
lea
dec
cmp
pop
int3
xor
movsl
xor
xchg
push
insl
mov
and
xor
test
and
inc
pushf
adc
test
rorb
imul
pop
sub
cwtl
movsl
bound
inc
gs
mov
fwait
jecxz
inc
or
fnsave
mov
jo
adcb
jp
mov
mov
out
xchg
sbb
pop
sarb
in
push
cld
add
xor
idivl
cmp
adc
xor
xchg
nop
xor
or
or
xor
cmp
adc
jno
add
mov
sbbl
inc
pusha
dec
jo
xor
add
icebp
xor
push
lret
adc
sbb
xor
or
imul
dec
xacquire
sti
or
ds
adc
bound
lock
mov
inc
mov
orb
enter
outsb
orb
jecxz
cmp
lds
jnp
pop
ds
sarb
mov
push
shll
mov
xor
sahf
push
nop
add
ja
imul
cwtl
andb
rcrb
and
add
testb
add
pop
xorl
mov
cwtl
add
jmp
cmp
xor
imul
fstps
xchg
sub
inc
mov
cmp
rcll
ret
std
or
mov
push
dec
dec
mov
jg
enter
jmp
add
fstl
xchg
ja
add
adc
mov
lret
test
and
mov
xchg
pushf
sbb
add
jg
cmpsb
ja
jg
add
add
adc
mov
stc
push
popa
add
in
addr16
mov
jmp
insl
add
bound
or
jg
adc
and
jge
and
je
mov
sbb
sub
jecxz
inc
dec
push
sub
nop
cmp
adc
out
aam
js
mov
inc
out
pusha
jle
add
movups
add
icebp
dec
dec
push
stc
mov
add
test
mov
add
in
adc
imul
add
dec
hlt
sbb
pusha
incb
notl
nop
or
in
jnp
or
cmp
clc
out
daa
mov
rcl
cli
push
fdivs
test
add
rcrl
jno
or
cmpsb
mov
sub
clc
pusha
mov
add
mov
xchg
and
fwait
mov
cmc
push
jl
xchg
mov
add
inc
cmp
adc
jg
ds
add
test
jns
add
popa
cwtl
aas
add
das
mov
push
movsl
clc
or
int3
outsl
ljmp
add
arpl
outsb
xchg
add
aam
inc
add
aas
popa
fdecstp
sbb
loopne
movsb
rolb
je
dec
cmp
add
lahf
loop
cmp
test
lock
or
mov
add
in
test
inc
sbbb
sbb
add
jb
cwtl
bound
pop
or
jo
push
out
mov
or
mov
inc
test
pop
dec
pop
add
jae
nop
cmp
mov
mov
push
test
xor
cmpsl
hlt
cvtpi2ps
sbb
push
outsb
lcall
add
or
mov
add
cltd
movsb
xchg
mov
mov
add
test
jge
push
mov
and
fs
loopne,pn
add
test
push
inc
enter
shll
fisttpll
or
jae
in
add
mov
mov
cmpsb
or
mov
inc
jns
ljmp
cmc
pop
pushf
call
jmp
cmpsb
sub
mov
aas
mov
mov
or
je
scas
and
sbb
cmp
call
aam
dec
in
add
cs
dec
add
cmp
andb
test
cld
test
xchg
loopne
lcall
inc
adc
push
mov
fadds
xorl
fistpll
outsl
or
insb
mov
sub
out
fistpll
rcrb
cwtl
test
dec
jb
pop
mov
movsb
data16
std
nop
in
xchg
hlt
pop
dec
ret
push
punpcklwd
xchg
shlb
xor
popa
dec
mov
mov
stc
adc
mov
fisttpl
fbld
pusha
or
aas
xchg
mov
faddl
jae
std
push
push
inc
and
pusha
mov
push
rclb
fisttps
add
movsb
push
pusha
outsb
jge
inc
pop
add
ljmp
xchg
loopne
and
adc
add
jo
push
inc
push
add
cmovb
push
dec
add
shrl
lods
addb
mov
cltd
shll
ret
jmp
mov
pusha
in
xchg
xchg
xor
movl
fs
hlt
xchg
lock
dec
sub
lock
dec
dec
mov
xchg
and
mov
popa
sub
pop
andb
rol
cmp
aad
mov
xchg
add
test
sbb
das
test
ror
xchg
cs
mov
in
fbstp
and
or
push
aam
test
adc
data16
test
and
bound
mov
pop
xor
cmc
je
lods
cwtl
add
popa
mov
xorb
push
inc
cwtl
and
add
mov
inc
mov
inc
pushf
add
test
js
pop
xor
add
xlat
add
popa
jns
cmc
fsubrs
dec
mov
outsl
rorb
sub
in
mov
pop
or
add
push
inc
div
jmp
setbe
adc
test
mov
pusha
mov
call
cmovne
sub
jns
adc
or
pop
push
jl
push
mov
icebp
mov
nop
xor
popa
je
lcall
in
movsb
outsl
orb
bound
sbb
and
push
or
popa
cmpsb
or
push
repz
lcall
fisubrs
icebp
sbb
xchg
adc
outsb
call
aam
popf
inc
inc
mov
sub
sub
add
inc
ret
testl
cmpsl
and
inc
lcall
sbb
cltd
js
add
dec
xorb
imul
or
adc
sbb
insl
pop
add
jle
pop
sbb
and
fildl
dec
add
fdivs
jecxz
mov
mov
push
or
adc
and
xchg
inc
add
sub
out
jnp
add
lea
fwait
or
int3
test
xor
or
or
loop
inc
xor
gs
enter
in
push
jne
or
mov
call
adc
ret
inc
mov
scas
jp
in
outsb
addl
mov
adc
sar
add
repnz
imul
or
inc
pop
sub
les
push
push
adc
outsb
fnstcw
pop
cmp
inc
fcomps
fwait
in
and
pushf
cmp
adc
cmp
or
adc
mov
push
shl
lea
imulb
adc
addb
inc
cmp
and
jnp
pop
rcrb
outsl
dec
sbbb
lret
xchg
jle
inc
data16
jg
sub
lds
pusha
les
xor
enter
sarb
les
add
mov
pusha
adc
mov
int3
adc
js
add
mov
mov
sub
pop
iret
adc
hlt
insl
xchg
mov
es
dec
push
adc
pop
js
in
add
jge
cld
and
or
popa
xlat
mov
and
xchg
dec
scas
addr16
add
or
jne
push
sarb
enter
dec
mov
jno
mov
jecxz
xchg
hlt
adc
roll
lahf
ret
xchg
xchg
cmpsb
dec
or
sarl
test
arpl
xchg
or
inc
pushf
test
add
jnp
mov
or
insb
xor
jmp
and
xor
das
scas
xchg
sub
fdivrs
test
jbe
adc
cmp
fsubl
mov
insl
jns
call
fcoms
popa
inc
out
les
and
dec
fwait
lock
js
add
stos
push
xchg
fsub
enter
cmpsb
lods
imul
push
add
lea
fsts
add
je
mov
and
test
sbb
add
fidivrl
imul
cmp
mov
fimuls
add
rcll
jnp
add
or
mov
jno
push
lods
mov
sub
loop
stos
add
movsb
push
mov
push
pop
imulb
loopne
int
imul
inc
inc
inc
ja
or
xchg
push
insl
sbbb
add
and
jg
push
add
fidivrs
int
mov
nop
int3
loopne
mov
lea
or
stc
push
inc
rorb
in
sbb
sbb
pop
mov
jae
jge
cmp
or
int3
gs
fwait
mov
cs
add
fadds
add
jmp
add
adc
clc
add
icebp
test
addr16
sbb
sub
lahf
add
sub
jno
pop
mov
mov
add
xorl
xor
adc
sbb
pop
add
and
sub
int3
cmp
cmp
dec
packuswb
push
add
rorl
lret
dec
and
push
sbb
ret
test
jb
cli
cmpsb
mov
mov
stos
add
test
addl
shll
jb
add
int3
out
neg
and
movmskps
mov
pop
lods
inc
lods
push
andl
add
rclb
sbb
fadds
lods
and
xchg
pop
cmp
lock
xor
js
xlat
add
adc
sbb
xor
mov
iret
cmp
push
mov
mov
or
add
add
add
movsl
xchg
add
stc
repz
lods
pop
mov
mov
add
popa
ret
cmpsl
loopne
or
add
adc
fmul
inc
unpckhps
mov
loope
mov
movsl
xor
mov
sub
cmc
ja
jle
add
adc
mov
lcall
mov
adc
imul
xor
mov
jo
inc
mov
lea
cmpb
add
shll
sub
mov
mov
outsl
cmp
rolb
xchg
xor
in
add
out
scas
leave
pop
adc
nopl
cmc
pop
test
jne
int3
ja
ljmp
xchg
add
cltd
push
xlat
fwait
rol
or
test
and
cmpb
mov
or
pushf
test
pop
stos
xchg
jns
sbb
je
ds
xorb
inc
pop
aam
inc
gs
cmp
add
sub
ret
nop
jno
pop
or
sbb
enter
std
call
add
imul
xchg
jbe
mov
fldt
aam
imul
or
bound
ljmp
jno
test
pop
call
sbbb
adc
pop
out
xor
xor
leave
inc
daa
shlb
lahf
add
pop
sbb
add
nop
aam
pop
or
sbb
mov
add
icebp
aas
add
jae
mov
movb
push
mov
mov
imul
add
out
test
inc
and
sbb
add
movsb
jb
adc
pop
fidivrl
fisubrs
add
rol
sub
add
jle
pop
popf
ud2
add
iret
and
cmp
popl
das
xabort
push
jo
pop
loop
bound
push
add
movsb
add
mov
shrb
and
cmp
push
movsb
ljmp
and
sahf
xchg
imul
mov
adc
lret
pop
dec
push
cmp
lcall
mov
or
adc
js
add
and
adc
out
add
push
fld
insb
push
mov
cmc
pop
leave
or
fldl
pop
cli
push
orl
fdivs
stos
pop
adc
or
inc
aad
mov
mov
inc
lods
xorb
loopne
add
push
sbb
cli
out
add
pop
adc
jb
sub
ret
jbe
les
mov
adc
call
add
mulb
and
out
fadds
aam
mov
adc
cli
int
xchg
mov
cld
mov
ds
shr
scas
roll
sub
je
adc
push
hlt
stos
or
cs
sub
or
mov
rcrb
mov
je
in
pop
adc
cltd
dec
pop
shll
cmp
int3
test
out
add
mov
push
inc
add
jecxz
xchg
and
es
dec
leave
enter
pop
sub
sbb
into
scas
add
in
movb
dec
shrb
js
add
sbb
lcall
and
or
inc
push
aaa
mov
inc
add
and
lret
mov
jnp
mov
mov
ss
fcoml
sub
leave
je
call
sub
fisttpll
test
add
mov
stos
xor
sub
jmp
mov
fmulp
scas
push
mov
mov
cmp
xchg
subb
roll
or
sub
popl
mov
call
loopne
stos
aam
xor
shlb
add
adc
fxch
stc
sti
sub
xlat
imul
fadds
xchg
pop
ja
jne
lret
mov
add
and
add
test
aad
add
or
cli
or
filds
in
sbb
adc
jne
fsub
inc
cmp
dec
in
mov
sbb
add
sub
mov
and
cmp
mov
add
loop
imull
cmp
into
ficoms
add
adc
popl
sub
fisubs
pop
cmp
adc
fnstcw
or
paddb
lods
pop
test
push
bound
fnstenv
push
mov
inc
wbinvd
dec
xchg
sahf
sbb
test
add
xlat
or
lret
jno
fbld
jl
add
xchg
icebp
pop
lods
pushf
add
jecxz
scas
mov
add
sbb
fisubl
roll
mov
lods
jno
add
xchg
and
cli
add
and
pop
xor
or
std
dec
mov
mov
xorb
mov
mov
mov
sub
add
xchg
xor
adc
adc
or
sub
add
or
dec
add
or
mov
xchg
jbe
pop
add
push
or
mov
lock
pop
mov
outsb
mov
adc
adc
loope
mov
add
mov
jg
mov
mov
fldcw
out
pop
pop
cmp
cmpb
inc
rcll
pop
rcrl
addb
inc
adc
rclb
add
inc
push
jae
and
rorb
mov
pop
sbb
sub
lret
lds
call
or
aas
fidivs
ja
cmp
inc
jl
xorb
mov
push
stos
cwtl
inc
add
adc
sbb
mov
adc
ss
and
les
mov
adc
pop
push
sbb
ja
cmpsl
add
adcl
cs
lock
clc
rorl
iret
jle
fstpt
pushf
cmpsb
push
add
loop
lods
or
cmp
add
insb
push
mov
shrb
mov
cltd
xlat
pusha
ret
ds
add
inc
mov
fistpll
enter
jne
add
mov
mov
cld
jae
push
gs
mov
push
mov
add
lret
jne
xor
movsl
icebp
rol
leave
int
fnsave
add
sbb
in
jbe
adc
leave
loope
and
cld
add
jne
inc
icebp
add
ljmp
add
push
mov
xlat
loop
aaa
jmp
popa
in
lcall
mov
push
fcoms
push
add
js
ss
jae
lods
pop
int
adc
inc
lea
add
out
stos
fs
mov
mov
shlb
clc
adc
insb
add
outsl
in
sbb
add
ljmp
jne
fcoms
push
push
or
and
mov
mov
es
or
ss
push
or
push
jbe
sbb
sti
or
dec
cmp
aad
bound
add
std
scas
fistpl
dec
decl
imul
imul
mov
cmp
push
push
sub
add
pop
mov
js
add
sbbb
dec
sub
nop
mov
xchg
loope
mov
cltd
test
movsl
arpl
add
int
mov
add
inc
cmp
push
mov
add
test
sbb
xchg
adc
aas
cmp
inc
push
xchg
adcl
mov
pop
dec
dec
xchg
lds
aaa
mov
andl
stc
xor
add
mov
add
add
pop
cmp
in
mov
jno
adc
out
jo
hlt
cmp
outsl
xor
pop
sub
mov
mov
adc
pop
rolb
add
iret
push
inc
pop
jae
add
in
cs
rolb
movsb
sbb
cli
outsb
dec
mov
imul
test
or
dec
inc
pop
or
adc
sbb
cmp
mov
add
cmpsl
rcll
push
stos
push
aas
push
jb
sbb
lods
sub
pop
jne
je
mov
fcoml
jecxz
repz
into
in
pop
pop
dec
lret
xorl
add
clc
repnz
xor
jp
insb
add
inc
out
push
sbb
add
sub
rolb
mov
dec
daa
pusha
ja
loopne
cs
and
cmp
test
and
ficoml
jle
outsb
sti
out
jo
push
push
out
ljmp
jp
pop
sbb
push
inc
mov
mov
or
and
add
es
jle
sbb
js
sub
add
enter
ja
xor
imul
sub
push
and
dec
xbegin
add
sbb
sbb
add
fdivrp
psubsb
inc
or
and
arpl
insl
ret
rolb
cmp
rcl
clc
jle
add
popf
or
je
cmp
imul
roll
stc
push
inc
xchg
adc
pusha
mov
pop
cmpb
lods
add
jmp
call
sub
xchg
or
in
gs
out
xor
pop
rdpmc
ja
mov
and
pop
jl
mov
cmp
mov
fsub
outsl
sub
push
mov
sbb
mov
gs
leave
popf
rcl
xor
and
aam
push
mov
daa
pushf
xchg
add
mov
loopne
adc
mov
add
add
add
pop
and
cmp
js
pop
add
and
inc
addb
push
sbb
adc
add
popa
ja
sub
lret
aas
xchg
inc
xorl
add
add
mov
data16
stos
inc
outsl
add
stos
add
and
cli
ret
xchg
aad
xchg
lods
jge
add
inc
adc
lcall
and
loopne
jp
ficoms
es
xchg
ret
add
repnz
sub
add
lret
js
xor
int
mov
cmc
data16
fs
push
daa
leave
push
adc
bound
adc
push
mov
sbb
fdivrl
xor
mov
rcrb
push
mov
rorb
lock
add
aaa
mov
pop
sbbb
das
lds
cwtl
add
mov
loope
jbe
add
adc
mov
pop
in
jl
push
sahf
fidivl
aam
xchg
cmpsl
aam
jl
or
dec
xor
add
pop
pusha
and
xor
and
push
dec
outsb
popa
les
or
mov
and
pop
and
push
rcrb
outsl
add
scas
movsl
or
add
pusha
mov
clc
or
adc
pusha
pop
mov
leave
mov
add
push
dec
addl
jl
popf
xor
pusha
dec
pop
sub
lods
add
jne
xchg
call
mov
pop
mov
jb
movsb
and
les
sbb
jae
pop
push
test
mov
add
add
cmpsb
into
mov
add
sbb
sub
dec
sbb
lods
scas
add
push
fldl
xor
es
mov
cmp
dec
pop
sub
pusha
pop
inc
add
add
pop
jle
test
push
cmp
push
cmp
xchg
outsb
xchg
adc
add
loop
mov
mov
daa
jge
xchg
xor
inc
lcall
fmull
mov
pop
push
cmpb
pop
pusha
xor
xor
sub
add
js
add
sbb
lret
stc
mov
add
fildll
sbb
in
add
pop
dec
mov
mov
sbb
lods
add
mov
stos
shll
mov
in
add
out
mov
and
test
loopne
rolb
jp
scas
fs
dec
arpl
xor
daa
push
jecxz
pop
lret
fadds
popa
aas
xchg
hlt
dec
or
or
cmp
push
and
cld
sub
dec
mov
adcb
jo
les
fwait
outsl
lods
ficoml
mov
in
int3
mov
mov
sub
xchg
cmovbe
xchg
mov
ds
ds
stos
aaa
call
push
test
cmc
add
shlb
hlt
add
sub
pop
xor
mov
sub
test
and
stos
sahf
inc
mov
addr16
jl
decb
js
fadd
mov
add
push
add
mov
mov
mov
mov
add
dec
es
outsb
add
mov
mov
xchg
adc
lds
aad
add
sbb
fsubs
inc
pop
rolb
add
sbb
test
jbe
std
and
pop
popf
cmp
pop
add
loopne
jp
pop
dec
in
and
mov
inc
jge
pop
inc
xor
add
or
xchg
negb
cmp
popf
out
jle
add
sbb
mov
loop
repz
lret
and
jne
int3
xor
testb
xchg
add
jo
or
sbb
push
fdivr
xor
sub
cmp
mov
movl
and
mov
lock
adcb
xchg
add
rcll
sbb
lea
inc
daa
and
pop
mov
inc
repnz
les
test
push
or
cli
fiaddl
outsb
ja
cmp
cmpb
push
movsb
jne
add
xchg
pusha
add
jecxz
sbb
mov
stos
xor
add
pop
lea
pop
ja
pop
adc
pop
pop
cmp
nop
add
mov
sbb
sahf
arpl
pop
cmc
fisttps
or
and
cwtl
and
or
out
sbb
add
lock
mov
xor
cmp
or
add
das
push
pop
add
sub
mov
xchg
add
cmpsb
imul
xchg
fcoms
out
push
decb
in
cmpsb
mov
sbb
add
xorb
add
aad
js
inc
adc
jb
add
adc
sub
stos
ss
push
popf
add
inc
push
cld
adc
and
mov
jge
lcall
fs
jle
rolb
lret
js
bound
cmc
ljmp
test
add
mov
pop
loopne
js
jl
out
sub
test
or
pcmpgtd
add
scas
sti
imul
mov
push
cs
add
pop
dec
pop
sub
add
cmpsl
cwtl
inc
sbb
or
xchg
fists
call
adc
add
movsb
aam
dec
xchg
jns
mov
sbb
add
mov
ret
mov
add
out
dec
add
loopne
mov
testb
dec
aaa
add
push
dec
sub
mov
fwait
ds
stc
pusha
sub
mov
outsl
ljmp
clc
ret
jo
xor
js
add
cmp
push
bound
or
popa
mov
mov
mov
roll
or
mov
mov
xor
out
mov
sbb
sti
sahf
fiaddl
ret
inc
imul
mov
scas
mov
mov
fimull
dec
ja
or
iret
xor
mov
adc
insb
lcall
mov
cmp
fnstsw
add
lods
insb
int
push
xchg
loop
cmpsb
icebp
ffree
pop
mov
or
add
movsb
popf
jmp
lret
push
add
lret
stos
sarb
std
xchg
movsb
or
test
sbb
add
mov
mov
add
pop
mov
push
loop
mov
xlat
insl
jle
push
cmp
cmp
pop
data16
aas
sbb
inc
cwtl
mov
fcmovbe
hlt
faddp
xchg
add
pusha
fbld
dec
cmp
lds
rcr
adc
and
aad
ds
arpl
cmp
aaa
incl
adc
cli
add
xchg
push
pop
mov
int
xor
stos
clc
pop
inc
adc
add
std
inc
xchg
repz
add
cmpsl
adcb
icebp
sahf
jne
sarb
pop
mov
inc
add
inc
in
iret
mov
sbb
jg
sbb
addl
stos
mov
imul
add
pop
sahf
mov
push
mov
mov
aaa
enter
sbb
push
inc
pop
and
xor
add
push
repnz
or
pushf
aam
cwtl
add
into
or
cmp
push
mov
nop
jo
cltd
sbb
jbe
jecxz
lock
scas
pop
and
add
cmp
test
pusha
es
outsl
adcb
pop
add
xorl
shl
add
std
shll
push
add
push
cmc
mov
mov
aaa
pop
pop
sub
mov
cmp
push
sbb
loopne
pusha
add
adc
push
in
or
push
movl
or
cmp
cmp
mov
es
test
sbb
cmp
subl
cmp
loop
vpmulhw
xor
sub
add
push
js
clc
fwait
ror
mov
cmp
sub
testb
scas
add
in
mov
test
loop
add
in
mov
cmp
add
sub
pop
add
fs
loopne
stc
add
leave
sbb
xchg
js
jno
sbbb
lea
cmp
loop
mov
mov
and
in
dec
loopne
add
adc
and
add
inc
scas
jnp
inc
add
imul
xchg
mov
jg
add
dec
push
inc
add
mov
iret
add
fadds
cs
pop
sub
scas
enter
into
jne
ret
cli
mov
pushf
push
xlat
and
in
mov
jns
setp
xchg
jne
popf
or
roll
fdivl
cs
mov
add
inc
and
push
mov
arpl
loopne
sub
lret
out
cwtl
mov
out
mov
ss
jmp
push
pop
jge
scas
in
movsl
dec
sarb
jb
sub
push
divl
ljmp
hlt
mov
stc
scas
lock
jecxz
stos
or
hlt
xchg
es
pmaddwd
add
mov
sub
fdivp
pop
add
inc
daa
mov
add
call
pop
pop
pushf
mov
outsl
addr16
nop
xchg
je
lsl
xchg
mov
or
xchg
into
lret
shlb
sub
sbb
mov
cmpsl
cmp
or
popf
cwtl
aam
mov
inc
insl
incb
push
les
or
in
add
sub
lds
xor
xor
sbb
ret
add
das
inc
pop
add
div
push
cmpsb
cmp
insl
sbb
xor
int
add
das
mov
shl
mov
sbb
or
cmp
and
or
ja
ss
icebp
gs
lcall
add
push
mov
sub
xor
fsts
lahf
add
mov
mov
fsub
push
in
dec
or
scas
sti
or
ljmp
add
add
sbb
adc
scas
daa
jne
inc
lcall
pop
sbb
jg
jne
cltd
shr
int
add
fs
fwait
hlt
or
sbb
int3
xchg
xor
clc
push
add
adc
pop
fnstenv
and
popf
test
adcb
xor
retw
icebp
mov
out
jecxz
cld
push
xchg
ret
test
or
mov
int3
daa
cld
cmc
push
push
and
enter
adc
or
jb
xor
add
lret
mov
add
je
ds
mov
mov
das
add
jo
inc
adc
adc
xchg
scas
out
scas
add
add
mov
and
cltd
push
pop
shl
pop
rclb
mov
fldl
sbb
data16
adc
lret
mov
xlat
jne
xor
shlb
mov
subb
outsl
cmp
mull
aas
pop
clc
xchg
sub
enter
aaa
mov
adc
pop
call
je
push
adc
mov
and
movw
out
inc
mov
sbb
lds
push
stc
mov
push
fldt
mov
pusha
add
or
stc
pop
add
add
adc
cmc
adc
lahf
add
stos
call
mov
push
dec
aaa
add
pop
pop
mov
cmc
adc
dec
popa
add
cltd
test
push
mov
arpl
add
mov
insl
cli
outsb
icebp
std
nop
add
dec
mov
and
sbbb
in
inc
inc
sahf
mov
test
imul
mov
jp
pop
inc
lret
dec
test
ficompl
icebp
xorb
add
cld
inc
ss
in
xchg
push
lods
or
dec
mov
jl
rorl
lcall
imulb
add
or
lcall
fnstcw
rolb
xor
enter
or
aam
test
stc
sub
inc
or
dec
xor
js
add
push
jne
idivl
add
lds
cwtl
lock
push
or
adc
xor
in
mov
test
imul
or
loope
into
imul
sarb
cmpsb
push
int3
sub
cld
sub
ja
or
mov
cmp
cmpsl
dec
nop
into
cmp
or
and
mov
xchg
loope
in
fistpl
bsf
adc
xchg
ret
mov
cmp
mov
wrmsr
jp
into
paddw
add
xor
pop
push
sbb
aam
dec
jle
in
stos
add
bound
xchg
sbb
clc
mov
cs
dec
aad
enter
das
jae
push
mov
dec
shll
adc
cmpl
mov
xor
xchg
clc
pop
add
insl
subb
cmp
js
dec
xor
sarl
test
jo
mov
dec
imull
mov
je
add
popa
and
add
jae
jno
sub
lds
mov
pop
test
ds
popf
lock
rolb
int
push
fwait
stc
xchg
xchg
lods
lret
rorb
dec
cmp
xor
mov
mov
and
push
pop
adc
push
std
in
aaa
jns
xchg
mov
fadds
or
idivb
push
add
and
movl
jle
test
or
shr
add
gs
test
mov
mov
pop
mov
xchg
xor
dec
mov
lahf
sbb
sbb
inc
add
lret
dec
incl
test
lock
dec
mov
cmp
dec
sub
add
xchg
add
cmp
adc
arpl
or
cmp
adcb
loope
call
mov
adc
add
les
and
add
or
cmp
dec
inc
mov
leave
add
jo
mov
ljmp
ljmp
dec
add
test
daa
adc
addr16
pusha
fmul
idivb
dec
xor
adc
ret
mov
jle
cld
shr
imul
jns
add
mov
add
push
mov
stos
cmp
movsl
push
inc
mov
flds
pop
cmc
leave
add
test
xchg
std
pusha
mov
sti
inc
aam
lcall
roll
sbb
nop
sahf
add
pop
fcomip
mov
add
lds
pop
mov
xor
bound
ret
add
addl
ds
sti
xor
fdivl
leave
mov
test
pushf
adc
pop
outsl
jmp
mov
add
scas
test
div
clc
add
cmpsb
in
rcr
cmpsl
pop
mov
movsl
jp
add
cmp
adc
add
mov
sti
add
leave
in
push
test
dec
adc
or
add
mov
cwtl
test
mov
sahf
add
je
and
sbbl
push
int3
imul
add
pop
fiadds
sub
cld
inc
lret
rolb
push
hlt
int
shlb
lcall
fistpl
add
adc
sbb
jno
insl
or
shrl
sub
mov
cmp
add
dec
adc
and
insl
pusha
fsubrs
xchg
add
push
mov
sub
mov
jmp
xor
mov
mov
sub
jo
dec
or
shl
mov
lock
xchg
out
ljmp
and
add
icebp
imul
xchg
dec
add
rol
lcall
adc
loopne
xchg
add
jge
lea
jb
push
not
cmpb
lret
and
pop
xchg
add
test
ds
push
xchg
mov
pop
add
add
mov
push
cmp
mov
gs
insb
jmp
unpckhps
jl
rolb
mov
cmp
xchg
popa
fsubl
add
or
testb
xchg
sbb
ss
and
into
inc
cld
arpl
and
cmc
rcrb
dec
add
ret
data16
ja
into
add
mov
sbb
xchg
js
inc
sbb
test
shll
jp
add
dec
inc
fwait
subb
xchg
sub
enter
out
lahf
aam
add
decb
mov
int3
mov
lods
nop
add
pop
jge
shr
add
cmp
cmp
iret
fsubrl
sub
imul
jns
mov
cmpsl
add
pusha
push
inc
scas
mov
ficomps
push
pop
and
cmpsl
mov
add
jge
add
cmp
pop
adc
pop
sub
push
in
add
inc
sbb
lret
cmp
popa
and
cmp
out
mov
les
lret
xchg
add
xor
nop
insb
aad
add
jg
xor
mov
mov
fistl
add
imul
out
lds
inc
adc
push
enter
jle
movsl
popf
push
str
sahf
pop
negb
mov
out
jp
pop
movsl
push
mov
andl
xchg
rclb
add
rolb
dec
xor
pop
jae
sub
mov
pop
cmpsl
cmp
xor
shrl
mov
pop
mov
pop
xchg
mov
mov
sbb
mov
jle
ljmp
sbb
add
jge
add
mov
pop
add
cmp
cmp
and
inc
aas
push
add
mov
inc
call
mov
or
xchg
stos
inc
js
add
jne
cld
xlat
out
sahf
push
dec
testl
inc
test
sub
repnz
cmpsb
mov
aam
add
jecxz
xorb
mov
aaa
out
add
nop
jmp
cli
sbb
pop
fucom
add
mov
inc
jne
sbb
jle
sub
movsb
sarb
jns
mov
cmc
lods
add
aam
js
test
sbb
dec
fstl
xchg
mov
pop
add
ja
inc
add
cld
sahf
out
sub
aam
cmp
add
imul
xor
out
faddl
add
push
outsb
sti
cltd
adc
sarl
bound
ljmp
adc
add
in
mov
mov
sti
ret
pop
cmp
mov
icebp
leave
cmpsl
jl
cmp
shrb
xchg
nop
add
sub
jp
insb
jecxz
jl
out
lods
mov
xchg
lods
jne
call
rcr
sti
inc
mov
push
repz
add
jmp
fwait
push
add
ja
push
and
add
xchg
je
mov
cmp
leave
jno
sub
add
in
sub
jbe
add
pop
inc
sahf
add
inc
xchg
add
xor
cli
sbb
mov
xchg
pop
or
push
loope
sub
test
mov
inc
or
dec
cmpb
sti
std
pop
outsb
push
in
mov
shrb
cwtl
jl
aam
ja
jg
mov
gs
fistpl
add
divb
lods
jns
pop
add
sub
xchg
cmp
add
scas
out
add
loop
sbb
xchg
mov
sti
aas
dec
xchg
jno
je
fnsave
cmp
add
imul
add
jecxz
lods
das
adc
mov
sbb
add
or
in
cmpps
ret
scas
or
mov
pop
insb
not
dec
call
sbb
rolb
fistpll
add
test
cmp
adc
jae
out
or
fsubr
push
add
pop
cmp
jp
add
loopne
xchg
ljmp
lds
dec
add
insl
and
cwtl
test
sub
xchg
mov
add
xlat
sub
or
std
popf
cs
pop
jl
pop
addb
test
add
cmpsl
mov
rorb
add
cmp
add
push
mov
pop
xor
cmp
fadds
mov
mov
repz
mov
cld
adcb
imul
roll
sub
fwait
mov
or
dec
ds
push
mov
arpl
repnz
cmc
dec
pop
enter
sbb
or
ss
add
mov
xor
sbbl
mov
push
call
mov
xchg
mov
outsb
and
arpl
xchg
fsubr
jb
add
je
jecxz
pop
jnp
add
gs
inc
loopne
in
dec
or
bound
int3
adc
xchg
pop
jo
pop
xor
or
sbb
jge
mov
dec
pop
js
mov
push
push
loope
push
cmpsb
and
scas
jo
add
sbb
add
xchg
add
pushf
out
adc
or
add
mov
ret
enter
fmuls
sbb
cwtl
pop
cli
repnz
faddl
clc
mov
nop
adc
daa
enter
stc
clc
cmp
add
loopne
insb
call
cmpsb
xor
test
or
add
aaa
bound
out
hlt
adc
gs
cwtl
or
and
or
ss
nop
aam
pop
add
fs
add
fmull
xor
lea
add
imul
mov
in
dec
int3
rcrl
ss
fsub
push
adc
cmp
push
cmp
add
add
add
jo
mov
sbbb
dec
cmp
stc
movb
jecxz
das
add
lret
mov
sbb
daa
inc
push
js
add
insb
push
call
fiaddl
push
pusha
or
ljmp
or
xchg
xchg
insl
ds
push
scas
adc
or
sub
mov
xchg
fsubrl
loopne
dec
mov
aam
jnp
cmp
adc
pop
add
adc
dec
les
add
mov
je
inc
xchg
jo
lea
sub
cmpsb
cmp
lcall
xor
into
mov
test
gs
fwait
dec
mov
mov
or
dec
stc
adcb
sti
cwtl
add
cmp
std
decl
jo
nop
lods
add
sarl
adc
add
lods
add
cli
mov
es
pop
rclb
push
sbb
imul
add
push
add
jecxz
lret
inc
call
stc
enter
outsl
add
aaa
add
lret
adc
xchg
jno
jp
mov
faddl
or
pop
daa
test
jns
je
cmp
sub
and
xor
outsb
ret
push
cmp
shlb
fisttpll
mov
lods
push
push
add
icebp
inc
mov
xlat
xor
out
cmp
es
add
mov
stos
add
incl
les
pusha
in
data16
mov
push
add
xchg
sub
lea
mov
jns
add
push
cmp
cmp
pop
pop
scas
ds
add
xchg
push
dec
cmc
repz
push
adc
clc
cli
or
jno
add
mov
add
mov
movsl
bsf
jbe
jecxz
or
in
dec
add
pop
cmpsl
rorb
pop
sbb
and
dec
xlat
inc
loopne
popa
pushf
hlt
lahf
or
adc
rolb
enter
jno
or
xchg
push
daa
out
repnz
sbb
mov
aaa
and
jbe
mov
inc
sbb
in
add
sub
cmp
rcll
cmp
jl
cmpsl
sub
mov
arpl
lahf
lret
push
out
aam
mov
xor
clc
hlt
mov
mulb
scas
adc
inc
mov
jecxz
das
daa
lods
mov
xchg
cld
xlat
dec
push
jle
xchg
repnz
insb
outsl
xor
or
and
ljmp
add
sub
cmpsb
pop
cld
imul
hlt
xor
scas
icebp
xor
addl
dec
mov
add
xor
sbb
adc
push
into
pushf
and
mov
scas
cmp
fdivrs
sub
mov
movsb
dec
les
neg
daa
jne
add
cmp
jns
popa
leave
or
call
test
pop
jl
iret
sub
xor
add
pop
ss
shl
xchg
jb
xor
xor
and
mov
jmp
add
cmpl
dec
sarl
push
ljmp
or
mov
sub
mov
lods
pop
jmp
mov
add
push
data16
lock
add
rcll
imulb
js
ficompl
lock
leave
test
dec
push
add
mov
pop
jo
mov
push
xchg
roll
lcall
pop
divb
add
add
pusha
mov
or
add
xor
lock
add
xchg
xchg
lods
pop
xchg
ficompl
out
and
popa
sub
push
mov
pop
jmp
add
pop
mov
cmp
jmp
jo
xor
add
sarb
repz
pop
cmp
mov
in
adc
xor
shrb
mov
pop
mov
cmp
push
push
jns
sbb
or
bound
ret
pop
add
add
push
pop
sbb
add
loope
outsl
push
lret
dec
add
movsb
add
mov
mov
out
pop
pusha
cmp
out
cmp
mov
inc
andl
and
add
add
nop
mov
loope
pop
outsl
shlb
jp
add
ret
aas
and
push
pop
lock
test
push
and
orb
loop
insl
clc
or
cs
add
inc
dec
push
xchg
or
test
xor
ds
mov
enter
mov
push
and
add
mov
idivl
rclb
ret
cli
popf
inc
jne
xor
cmp
or
lcall
push
test
pusha
enter
pushf
mov
pop
xchg
sbb
les
xor
lret
popa
negl
sarb
push
xchg
outsl
in
popa
pop
loope
hlt
sar
add
repnz
fwait
or
add
xchg
inc
xor
loope
dec
mov
inc
add
add
enter
xor
cmp
pop
and
inc
push
mov
mov
or
daa
and
or
aas
adc
inc
leave
out
cmp
add
pusha
aaa
add
in
inc
xchg
rolb
add
or
adc
cli
int
loopne
mov
mov
add
aaa
mov
or
dec
mov
add
fs
je
pop
push
jge
addl
pop
cmp
xchg
mov
shlb
adc
mov
outsb
add
mov
inc
cli
mov
les
dec
loop
lods
push
push
push
adcb
mov
sbb
jge
sbbb
pop
cmpsb
xorl
cmc
nop
lret
add
lahf
or
daa
loopne
cld
nop
add
ret
bound
or
aaa
xchg
pusha
jmp
in
pop
ja
mov
fwait
mov
add
push
xchg
out
jg
roll
adc
stc
push
scas
add
negl
bound
sarb
outsb
lcall
lret
xor
add
or
and
pop
add
dec
cmp
test
add
inc
cmp
movsb
push
jl
mov
popa
mov
mov
insb
bswap
sarb
push
add
pop
sbb
jbe
sarb
sbb
jmp
cmp
push
insb
loopne
add
in
or
ss
lock
sbb
clc
add
pop
fimuls
add
sbb
cltd
cmpb
test
sbb
jbe
aas
int3
add
insb
shll
mov
jl
mov
stos
test
mov
pop
shl
loopne
lret
shlb
jp
mov
vmaskmovdqu
loope
mov
paddusb
cmp
sbb
ret
inc
dec
dec
add
lock
add
or
push
xor
inc
movsb
jecxz
lods
dec
dec
cmp
jnp
push
push
les
mov
dec
xchg
adc
cmp
adc
inc
sub
mov
in
sbb
fcomps
imul
cmp
adc
add
xchg
xchg
mov
mov
pop
insb
inc
lret
cwtl
xor
dec
pop
shlb
push
ljmp
push
ret
xchg
outsl
inc
mov
js
jg
add
stos
push
mov
shll
insb
mov
roll
mov
sbb
addw
bnd
cmpl
sbb
cltd
loope
dec
mov
es
aad
daa
stos
add
dec
sub
or
jae
push
rolb
fnsave
cmp
adc
mov
dec
mov
call
mov
adc
incb
fistps
sub
push
bound
dec
and
xchg
iret
add
in
jg
add
push
or
lock
xchg
xchg
push
les
int
out
loope
in
push
push
dec
xchg
filds
cmpb
shl
add
mov
movsb
daa
sbb
dec
jmp
inc
mov
mov
imull
sahf
fucomp
xor
shrl
std
xorl
add
enter
insl
dec
lods
or
imul
add
aas
push
jns
mov
outsb
add
push
sbb
add
xor
call
inc
adc
push
add
add
pop
sbb
leave
add
mov
fildl
mov
lock
mov
sbb
xor
stc
adc
jb
enter
push
sub
inc
test
and
fcoml
xor
les
push
pushf
lret
pop
mov
mov
mov
lret
inc
sbbb
jge
out
and
mov
add
mov
int
push
in
insb
aad
shrl
loop
sbb
mov
movsl
leave
jmp
mov
shrb
stc
xchg
sbb
push
or
test
sti
into
add
jbe
lcall
cmp
sahf
sub
rcll
mov
lods
mov
mov
repz
andb
xor
shll
idiv
lds
jmp
mov
pushf
cmc
xor
rolb
loope
add
outsb
xor
cwtl
je
roll
imul
in
call
cwtl
mov
add
add
lods
dec
fcoml
jns
mov
ret
sahf
out
jnp
mov
pop
jo
and
jecxz
fisubrs
xor
into
mov
in
imul
dec
shlb
rorb
sub
sbb
lods
jmp
add
jo
jns
push
mov
insl
jecxz
add
pusha
adc
std
rolb
jno
rclb
cs
dec
mov
add
add
sub
xchg
aaa
pop
stos
or
add
jbe
das
add
dec
js
stc
or
ljmp
outsl
cmp
cmp
xor
dec
push
mov
add
lock
rclb
pop
mov
adc
sub
ja
or
js
sbb
jp
push
les
pop
jns
test
adc
add
dec
push
adc
les
inc
cmp
push
in
add
jno
push
add
ret
or
and
mov
mov
daa
mov
push
jecxz
add
and
add
fs
add
mov
add
hlt
lea
dec
pop
clc
mov
sbb
or
mov
xchg
lret
push
dec
int3
fwait
xor
jecxz
mov
adc
stos
push
js
sti
push
add
or
adc
jge
decl
and
ds
add
mov
lret
mov
push
lock
xor
sti
or
sbb
push
cli
cs
jb
pushf
add
aas
mov
sbbl
inc
xor
push
add
mov
outsl
int
sahf
add
push
xchg
adc
andb
push
or
fldl
imul
movsb
pop
add
push
push
push
xadd
dec
or
cmpsl
sti
mov
imul
fisubrs
sub
sahf
add
pop
icebp
insl
xlat
in
cmp
addr16
idivb
lahf
addl
imul
cwtl
mov
rcll
adc
cmp
add
xor
cmp
jge
xchg
ret
xor
ret
sub
mov
pop
les
push
or
cld
shl
and
jb
add
test
shll
dec
sub
js
pusha
std
dec
mov
inc
pop
cmpsl
sub
lea
stos
or
test
mov
xchg
add
dec
mov
pop
push
std
icebp
pop
add
mov
and
bound
pop
jne
fcomps
xchg
aam
mov
cld
add
mov
ds
xchg
add
arpl
ficoms
fdivl
sbb
xor
stc
fwait
pop
adc
shlb
or
cmp
ja
mov
sub
lods
cmp
mov
xchg
enter
pop
scas
jo
add
cmc
pop
mov
mov
sbb
push
dec
jg
mov
add
pusha
add
jae
loope
mov
mov
data16
cmpsl
sbb
add
and
push
test
fildl
jg
scas
testb
repnz
add
test
mov
mov
lea
cmpb
das
mov
add
rolb
adc
fistpl
xchg
out
add
jl
add
inc
testb
xchg
test
pushf
push
push
mov
cmp
or
add
jns
lret
mov
sub
das
dec
add
cmpsl
mov
pop
add
int
jns
mov
add
mov
push
mov
lods
add
es
aad
mov
pop
ret
lds
loopne
cmp
daa
adc
mov
mov
sub
das
inc
pushf
stos
add
add
pusha
cmp
mov
cmp
shr
push
cmp
ljmp
int3
ja
push
adc
mov
jnp
xchg
sub
xor
or
push
and
inc
andb
xor
mul
popf
rep
add
or
inc
ret
cmp
fbld
pushf
add
daa
add
scas
loop
push
jae
jns
or
testl
add
aaa
jmp
and
rolb
pop
in
push
sbb
push
and
add
scas
adc
int
or
or
mov
nop
loopne
imul
mov
push
fsubrs
push
cmpsb
cs
fs
jmp
inc
dec
ds
or
push
or
mov
jns
jg
int
xchg
xchg
decl
pop
and
sbb
loopne
add
dec
nop
push
mov
pop
mov
dec
xchg
dec
push
cmpsb
mov
shrb
jno
lods
jns
sub
mov
xchg
add
lds
inc
xor
lret
add
pop
fmull
xchg
dec
adc
cmp
stos
das
and
aas
jo
rol
xor
sahf
loopne
pop
test
mov
add
xchg
push
add
mov
mov
add
inc
repnz
addr16
or
cld
and
icebp
movsb
ret
aad
pusha
dec
imul
xor
shlb
mov
add
sub
jmp
int3
add
adc
mov
jae
adc
add
dec
out
mov
ret
inc
fldenv
jo
add
pop
jmp
cmp
jge
rorl
sbb
xor
mov
add
arpl
xor
fwait
dec
nop
aaa
add
mov
jle
jo
inc
stos
push
pop
lock
pusha
lods
add
arpl
push
ret
nop
mov
push
add
inc
xor
lock
loope
dec
or
das
js
cmpsb
gs
inc
xchg
jno
fdivs
in
xchg
mov
add
leave
lret
dec
add
xor
adc
rorb
xchg
add
js
mov
mov
lret
adc
adc
inc
mov
and
jo
andb
xchg
add
mov
shll
cmovl
outsb
add
in
jno,pt
cs
fdivs
addb
xor
mov
sbb
ds
insl
xor
mov
push
je
repz
nop
dec
and
dec
not
xchg
lds
lods
pcmpeqd
sahf
cs
sub
repz
aas
mov
pop
cli
mov
cwtl
je
out
add
sub
cwtl
hlt
jo
add
aas
pop
vdivps
and
jmp
mov
test
enter
add
flds
imul
mov
movsl
or
push
push
mov
jns
cmpsb
push
jmp
dec
fwait
lea
inc
loope
sbb
imul
scas
ja
mov
mov
dec
mov
xchg
loopne
sub
test
stos
or
test
not
loope
clc
lret
adc
sbb
inc
into
adc
push
adc
test
lahf
aam
mov
and
add
lods
add
add
mov
cwtl
xor
aad
mov
call
mov
and
enter
movb
data16
dec
js
push
add
ss
jo
stos
repnz
mov
enter
shr
adc
pop
and
hlt
call
jl
outsl
cs
mov
mov
lcall
subb
xchg
push
xlat
arpl
adcb
ficomps
add
dec
in
std
mov
pop
mov
cmpsl
les
fsts
pop
or
add
mov
add
bound
faddl
jbe
popa
cmc
pop
pop
pop
and
pusha
popl
cmp
mov
pop
aam
jp
jbe
add
ret
outsl
pop
rep
es
xchg
cmpsl
ds
sti
addb
cltd
lahf
push
pop
sub
and
enter
add
mov
jg
mov
mov
popf
pop
loop
add
in
inc
mov
pop
insb
mov
add
fs
mov
add
push
inc
int3
jae
pop
mov
lret
mov
mov
add
in
inc
fldenv
and
push
jp
add
ss
mov
and
mov
adc
rorl
pop
cltd
rclb
mov
ds
push
or
xchg
ds
out
add
call
dec
cmpsb
shlb
mov
pop
add
pop
xchg
push
pop
mov
xor
inc
outsl
sbb
mov
jecxz
jno
mov
enter
call
bound
cmp
int3
fldt
mov
cwtl
das
inc
xor
or
mov
icebp
sub
add
adc
lds
and
rorb
or
and
add
stos
jl
xlat
pusha
sub
and
inc
mov
inc
pop
or
cmp
add
jecxz
out
je
mov
pop
push
or
mov
enter
lcall
xchg
subb
inc
lret
cmp
loop
add
push
dec
dec
xor
in
mov
and
add
xchg
cmp
inc
xchg
mov
sub
sbb
dec
fcoms
pop
sar
dec
sbb
sub
cmc
add
push
mov
es
sbb
lods
inc
test
jl
mov
push
add
push
adc
loope
loopne
filds
sub
imul
sub
aam
sahf
out
mov
les
fs
sub
mov
bound
test
jb
add
add
mov
lahf
dec
adc
sub
ljmp
push
cmpl
and
xor
dec
pop
faddl
inc
lcall
adc
add
mull
adc
or
or
sub
incl
lods
dec
fwait
push
xchg
out
pop
inc
mov
dec
pop
sbb
ljmp
cmp
add
mov
es
in
andb
pop
jmp
loopne
xchg
or
aad
push
fiaddl
test
and
iret
mov
pop
ljmp
adc
sbb
jbe
inc
loop
sbb
dec
xor
adc
pop
sbb
lcall
xor
pop
pop
insl
xor
outsb
rolb
xorb
mov
mov
jo
ret
roll
jno
cwtl
xchg
add
cli
sbb
and
mov
enter
ja
fsubs
push
es
iret
add
std
cmp
adc
or
dec
ljmp
adc
insl
out
or
pop
mov
add
push
test
push
adc
add
cmp
gs
cmc
outsl
cmp
jle
loopne
rolb
xor
fidivl
lock
or
aas
inc
add
dec
or
add
xchg
sahf
cs
cmpb
pop
or
sbb
cwtl
sbb
sub
xor
or
adc
int3
les
adc
and
and
cmpsl
cld
push
adc
icebp
test
inc
jl
or
xchg
xor
cmp
cmp
adc
adc
sarl
jb
add
loopnew
xchg
or
sahf
add
inc
cld
mov
mov
mov
stos
in
add
pop
nop
ss
or
orb
xor
mov
and
cmp
in
fsts
sbbb
rcrb
addr16
adc
xchg
subl
or
scas
insb
add
imul
inc
lahf
mov
cmp
jne
add
lods
in
inc
add
dec
xchg
das
sub
mulb
pop
cmp
andl
je
rcrb
and
fstpl
dec
cmpsl
add
and
shrl
adc
mov
sbb
inc
jae
add
stos
cld
mov
cmp
push
lds
adc
mov
xor
subl
popa
loop
pop
aas
inc
loopne
inc
add
outsb
pop
in
inc
je
in
adc
test
inc
les
fdivl
add
pop
call
xchg
std
push
sbb
dec
js
cmp
inc
cwtl
insb
repnz
push
repnz
test
or
sahf
ret
pushf
pop
ja
mov
andb
sbb
in
cmp
rolb
adc
mov
fs
cmp
cmc
mov
sbb
in
rolb
arpl
outsb
or
mov
xor
jns
insl
xor
call
pop
add
aaa
ljmp
ret
jmp
mul
callw
mov
int3
pop
xchg
adc
sub
dec
insb
stos
add
out
test
push
cmp
andl
fisttpll
mov
mov
lods
insb
add
mov
push
pcmpgtb
sbb
and
add
add
insb
repnz
jle
add
imul
xchg
mov
jp
add
testl
imul
test
adc
add
add
cld
ljmp
sbb
outsb
jmp
call
addb
stos
mov
incl
add
pop
loopne
or
adc
lds
incb
mov
sub
xor
mov
fwait
lahf
dec
add
mov
add
jg
sti
in
push
inc
scas
add
repz
mov
dec
roll
xchg
mov
ds
mov
push
jp
add
pop
inc
sarl
pop
stc
sbb
inc
out
xchg
push
mov
add
subl
add
ficomps
cltd
add
mov
dec
mov
ffree
sub
inc
xor
add
mov
xor
movsl
sahf
and
notb
add
arpl
add
fadd
push
xchg
enter
aam
add
mov
xor
call
movsb
jns
add
mov
jno
dec
shll
mov
sti
jne
fs
pop
sub
fisubs
rclb
push
add
movsb
inc
push
mov
sbb
das
cli
loopne
and
cmp
sbb
ja
clc
adc
std
icebp
adc
les
mov
dec
in
stos
sub
add
xchg
test
ret
mov
aas
loope
testb
add
xchg
cmp
mov
nop
pop
out
pop
mov
imul
sub
xor
xor
rolb
push
add
scas
lret
out
jae
lcall
mov
int3
stos
lock
icebp
ja
add
and
xor
pop
sbb
fdivr
es
mov
xchg
mov
fstps
or
jae
repnz
ds
in
je
loopne
pusha
cmp
add
cmpsb
jmp
jmp
test
lods
pusha
mov
cmp
mov
movq
mov
imul
mov
jno
pop
sti
add
repz
push
inc
pop
pop
add
enter
mov
push
or
sub
aam
jnp
add
pop
xchg
adc
lds
out
shlb
cmc
icebp
jo
add
push
dec
inc
pop
idivl
sbb
add
jmp
push
or
add
cmp
inc
push
sub
mov
add
jg
arpl
sbb
rolb
mov
loop
add
cmp
daa
dec
lahf
add
lods
aad
add
neg
out
fstps
mov
popf
subb
js
adc
lods
xor
jnp
mov
cwtl
adc
es
sbb
add
outsl
lds
add
adc
bnd
pop
add
mov
mov
pop
xor
bound
mov
cwtl
das
jmp
cld
cmp
inc
jge
xchg
pop
and
cmp
dec
int
push
adc
pop
decl
ret
mov
and
imul
jo
call
outsl
add
adc
cmp
in
xor
add
mov
imul
sub
add
shll
shll
icebp
xchg
cmp
test
movb
faddl
test
rolb
int
jge
fcmovu
or
pop
pushf
pop
and
mov
insl
add
or
inc
in
cwtl
ss
xor
addb
sahf
add
sbb
shlb
incb
pushf
icebp
fdivrs
test
mov
cld
mov
dec
ret
aas
pop
arpl
sbb
inc
pop
adcb
pop
dec
test
outsb
jns
cmpsl
lea
xor
cmp
add
add
jp
mov
sbb
insl
sti
jl
add
mov
push
xor
xchg
add
or
adc
sbb
aas
stos
shll
mov
pushf
jecxz
xchg
pop
mov
sbb
add
sub
hlt
lock
pop
lea
adc
add
xor
test
pop
and
xchg
rcr
js
or
jg
sub
jno
pushf
hlt
movb
repz
arpl
shll
pop
dec
add
loopne
test
jmp
add
shrb
sar
or
and
pop
arpl
rcr
mov
jp
jo
jle
and
dec
imul
les
mov
and
mov
addr16
adc
clc
and
notl
inc
add
or
sbb
aaa
cmp
pop
fimuls
outsb
outsl
cmpb
or
arpl
push
add
dec
subl
adc
pop
jp
pop
mov
hlt
js
clc
sbb
mov
out
sar
sbb
add
adc
and
js
cmc
add
adc
mov
add
into
push
mov
and
and
lea
mov
or
int3
add
pop
mov
cmp
or
aam
add
add
mov
fmul
movsb
or
sbb
cmp
addb
out
jge
jbe
add
inc
repnz
mov
push
jne
fiadds
mov
stos
movsl
mov
push
mov
sbbl
add
test
nop
push
sub
adc
lret
mov
arpl
and
sbb
in
dec
test
imul
pop
aam
into
add
stos
add
add
in
add
pusha
mov
inc
jo
xor
adc
pop
clc
sub
push
add
jle
add
pop
sub
shrl
or
adc
push
addl
mov
loopne
xchg
fdivs
pusha
and
sahf
adc
les
add
inc
push
mov
jl
fsubl
add
lds
sbb
lea
and
mulb
push
mov
lcall
mov
inc
fsubl
mov
cs
mov
add
push
rcll
or
test
enter
popf
add
pop
addr16
dec
pop
push
push
lock
jns
je,pt
cmp
mov
sbb
aas
enter
fcmovb
inc
add
dec
push
mov
mov
add
mov
and
scas
adc
fs
call
pop
popa
xchg
stc
out
into
sub
mov
rcrb
jecxz
fs
ret
and
aam
push
adcb
mov
push
and
mov
xchg
mov
push
lcall
push
insl
sbb
arpl
js
out
cltd
lcall
ror
pushf
mov
inc
or
test
xchg
lcall
inc
shlb
jne
pop
or
jbe
daa
xchg
insl
pop
imul
sbb
sub
add
adc
dec
xchg
add
adc
pop
sarb
mov
daa
pushf
push
clc
ret
movb
cmp
inc
aam
add
and
ljmp
xor
xchg
cmpl
lods
adc
or
negl
mov
sbb
add
divb
mov
push
xchg
movsb
les
xchg
pushf
add
xor
sbb
add
hlt
sbbb
push
mov
add
xor
xchg
sar
mov
popf
sbb
divps
ljmp
daa
ja
clc
pusha
cwtl
aam
mov
cmpsb
bound
and
ja
imul
jecxz
xchg
pop
cwtl
pop
mov
mov
inc
dec
hlt
mov
dec
mov
fsub
outsl
and
aas
add
mov
xor
mov
in
loopne
cmp
add
clc
jbe
jns
nop
add
ds
add
mov
outsl
or
add
mov
call
nop
insl
rcrb
sbb
mov
in
add
out
xchg
enter
sbb
sub
sub
outsb
or
ret
sbb
clc
dec
jbe
inc
arpl
mov
les
and
jae
push
add
mov
aam
xlat
jp
add
jns
shr
mov
out
iret
add
dec
xor
daa
add
sub
rol
sarb
push
cltd
lods
lock
sub
and
lcall
std
and
xor
imul
push
push
pop
pop
dec
and
add
push
out
xchg
mov
add
push
sub
inc
fwait
popa
iret
add
cmp
pop
test
jno
in
add
movsl
jl
sbb
scas
ja
ljmp
cmp
mov
or
popf
sbb
repnz
sub
push
sahf
add
push
or
mov
cld
jnp
dec
fldcw
and
sbbb
rorl
in
fnstenv
mov
fsubrl
sarb
pop
inc
xor
fsub
pop
lods
loopne
mov
jecxz
push
inc
cmp
xchg
arpl
fwait
mov
lcall
pushf
dec
ljmp
cwtl
add
mov
dec
xchg
add
out
repz
push
and
adc
loope
sbb
lock
add
push
xor
cmp
mov
xorl
shr
pop
int3
outsl
es
in
add
xchg
adc
adc
sub
jno
aam
nop
popf
mov
faddl
xor
es
pushf
add
dec
xchg
dec
call
mov
add
fwait
add
xchg
pusha
mov
das
xchg
sub
pusha
jnp
xchg
inc
xchg
add
ret
in
pop
jg
test
xchg
push
test
cs
jmp
out
add
push
data16
pop
pop
fsubs
subb
mov
mov
lods
jmp
adcb
arpl
outsl
add
dec
xchg
fstpl
popa
jecxz
cmpb
jbe
ds
and
clc
add
add
jp
xchg
inc
push
nop
cmp
in
push
maskmovq
divl
pop
mov
call
negb
xchg
add
jne
cmp
ss
mov
xchg
loopne
mov
fwait
adc
das
xor
mov
push
cmpsb
pop
jb
pop
scas
clc
fiadds
jg
test
ljmp
xchg
gs
add
push
inc
testl
mov
mov
test
xor
pop
pop
add
mov
and
push
fwait
cmp
sbb
adc
jecxz
lcall
dec
or
mov
cs
push
jae
loopne
ret
mov
ljmp
adc
xorb
adc
cmp
jle
add
icebp
add
adc
xor
jg
mov
imul
xor
adc
add
leave
or
push
movsl
addl
sbb
stc
add
jecxz
and
out
and
dec
sbb
add
jecxz
xchg
cmp
mov
addb
in
add
or
sub
mov
sbb
and
push
enter
pop
push
in
mov
add
jae
dec
cmp
scas
mov
lods
add
push
repnz
rclb
inc
add
cmp
cmpsl
sub
addl
into
inc
sbb
add
push
shlb
gs
outsb
add
pop
cltd
test
or
adc
int3
je
aas
mov
shl
jecxz
push
inc
jno
pop
hlt
cld
adc
add
or
or
add
mov
cmp
mov
add
push
lods
pop
pop
sarb
add
outsl
popa
call
add
mov
andb
add
jbe
addl
sbb
icebp
add
lods
sub
pop
jno
push
mov
adc
sub
lret
adc
movsb
pop
daa
repz
ljmp
lods
hlt
sbb
sbb
aam
xor
add
aaa
push
adc
pop
shrl
or
add
in
cmpl
sbb
fsubl
out
iret
js
push
add
adc
pop
loope
push
push
mov
add
mov
xchg
add
add
inc
add
mov
push
add
lea
fwait
inc
sub
mov
sbb
mov
xor
pop
cmp
pop
add
repnz
dec
cltd
dec
add
push
jmp
xor
jno
add
xchg
bound
insl
loopne
push
dec
mov
mov
imul
and
repnz
add
fs
nop
lock
push
aam
or
aam
rorl
pop
verw
out
insl
idiv
jmp
mov
fwait
call
push
mov
mov
jne
or
mov
pop
leave
jp
add
sbb
adcl
add
sarb
fninit
jmp
add
icebp
sub
sbb
sarb
add
inc
mov
push
add
ja
or
jp
sub
jnp
add
cmc
or
call
stc
pop
mov
push
add
xor
mov
pop
add
mov
insb
popf
push
scas
cmp
cld
add
cmp
add
sti
fstpl
push
xchg
aaa
add
les
pop
add
lock
xchg
add
mov
push
loopne
in
push
repnz
jl
clc
add
mov
or
sub
loopne
fsubr
outsl
pop
loopne
int3
adc
cmpsl
jmp
sbb
push
movl
stc
mov
subl
shll
pusha
pop
sub
ss
sbbb
adc
lods
out
int
sub
rcll
add
add
pop
xorl
sahf
add
or
pusha
cwtl
mov
in
mov
and
das
cmp
aam
loopne
add
ds
fadds
pop
lds
and
mov
iret
add
mov
cmp
fldl
xchg
add
fimuls
or
or
hlt
into
nop
lods
add
sub
or
orb
sbb
mov
jns
mov
scas
pop
pop
inc
out
xorb
mov
stos
cmp
fldl
sti
add
and
or
pop
mov
mov
mov
into
cmp
rcrb
add
pop
cltd
bound
add
dec
mov
scas
clc
ret
stos
rolb
sbb
add
ds
pop
outsb
lret
sbb
mov
cmpsl
push
inc
lods
pop
imul
and
dec
mov
add
cmpl
aad
add
adc
mov
rcll
test
dec
and
call
and
sub
in
lret
movsb
xor
nop
fcomps
jge
cmp
repnz
jb
rclb
js
rolb
xchg
cmp
daa
add
test
mov
fs
sbbb
pop
push
and
or
pop
and
les
stos
xchg
shlb
mov
out
xchg
loop
or
and
pushf
add
dec
inc
pop
or
cmpsl
rorl
mov
xor
adc
fidivrs
mov
nop
cwtl
jo
jmp
and
and
add
inc
daa
test
decl
ret
inc
jg
les
ja
add
jne
and
mov
cs
mov
sarb
sub
inc
add
mov
lcall
shlb
fdivs
cwtl
mov
ret
xlat
loop
inc
mov
cmpsl
cmc
inc
lds
xchg
sbb
inc
mov
and
std
in
sub
les
repnz
movsb
add
imul
ret
mov
test
test
adc
out
les
bound
mov
sbb
cmova
dec
pusha
mov
jne
push
sub
add
add
sbb
mov
repnz
in
and
push
outsb
add
sbb
jnp
xchg
sarb
xchg
enter
cmc
xchg
addb
push
push
inc
mov
mov
ja
xor
add
dec
stos
scas
pop
inc
repz
xsha1
cmpsb
mov
jbe
loopne
add
add
or
xor
mov
sbb
fdivs
out
sub
dec
lock
data16
jo
pushf
xchg
add
or
cmp
sidtl
jle
mov
add
xchg
ror
neg
and
ret
xchg
pop
ja
jb
nop
cld
or
adc
cmp
in
dec
mov
mov
fnstcw
or
add
sbb
or
test
sbb
pop
add
ljmp
xlat
dec
sub
in
ds
xorb
push
jns
xchg
leave
add
ja
cmp
hlt
stc
insb
test
add
jne
or
sub
sbb
das
dec
js
push
mov
or
out
rcl
lods
mov
xor
xchg
icebp
add
add
out
add
mov
or
stc
adc
jno
mov
fcomps
outsb
out
in
loope
adc
inc
push
push
pushf
add
addl
pop
jmp
test
fcomip
add
sbb
add
test
popa
jmp
lock
jg
xchg
bound
adc
cmp
mov
add
cmp
mov
orb
scas
adc
jp
leave
add
fldl
clc
ret
out
add
pushf
pop
insb
push
dec
sub
enter
and
out
add
lock
out
fldl
pop
or
shll
cmp
push
add
dec
ret
adc
daa
xchg
cmc
ret
test
cld
cmp
ds
and
dec
scas
cmp
outsb
sub
ds
inc
ja
add
adc
es
xchg
dec
pop
pop
cmp
call
insl
mov
jnp
inc
cmp
aam
jo
dec
add
sbb
cmp
lock
inc
xchg
mov
stos
rcr
test
mov
mov
add
aam
test
fmuls
push
outsl
jecxz
popl
cmp
ss
add
mov
inc
and
add
pop
iret
dec
push
sbbl
popa
adc
imull
adcl
mov
mov
aad
test
repz
ror
repnz
sbb
insl
push
adc
sub
jo
sahf
test
add
mov
xchg
cmp
inc
int3
or
push
cmp
jno
push
mov
inc
dec
add
pop
out
and
call
cmp
test
push
loop
leave
andb
cs
in
iret
push
icebp
push
add
add
mov
rolb
sahf
push
jb,pt
out
sbb
loope
shll
or
clc
nop
movsl
cmp
aad
rcr
sti
cwtl
lods
fldl
lret
das
mov
fcomps
pop
mov
or
push
push
negb
add
mov
sahf
add
or
mov
loop
dec
adc
aad
add
inc
mov
sbb
add
test
mov
ret
daa
mov
nop
mov
int
sbbl
sarb
cmpb
push
mov
add
fcmovbe
std
rcll
pop
xchg
test
repz
or
cmpsb
out
mov
clc
dec
in
mov
gs
inc
imul
jns
add
pop
mov
and
inc
push
sub
push
inc
or
imul
aad
mov
pop
cld
addr16
pusha
insb
addl
cli
cltd
cmc
adc
lock
pop
mov
and
cmpb
lcall
add
cmp
lahf
addl
xchg
or
cmpb
stc
fadd
pop
fucomip
fnstcw
mov
xorb
sbb
divb
mov
gs
cmc
imul
add
xlat
xchg
add
in
in
sub
push
jp
dec
cmp
add
cmp
lea
adcb
cmp
dec
leave
pop
push
adc
xor
add
repz
dec
gs
xor
add
loope
adc
orl
femms
or
nop
inc
fbstp
dec
addr16
rcll
mov
cmp
scas
loop
cmp
outsl
cltd
mov
mov
jae
int
hlt
jl
mov
test
mov
jp
xchg
add
popf
dec
and
js
inc
push
and
sub
and
push
loopne
mov
add
jmp
aam
jecxz
fmuls
aad
sar
add
leave
pushf
and
call
push
jl
push
dec
out
test
and
mov
addb
xchg
mov
daa
je
pop
mull
cmp
stos
add
cld
add
ja
mov
nop
xchg
test
pop
add
movsb
faddl
subb
sbb
int3
add
movsl
adcl
in
psllq
lahf
rolb
movsl
lea
pop
xor
add
mov
icebp
sbb
cmc
cld
fiaddl
jno
add
pusha
dec
mov
sub
ss
jnp
jb
push
movsl
add
sbb
xchg
add
sti
int3
cmc
fildll
je
mov
int
add
xchg
pop
je
and
add
cld
imul
push
add
jo
ds
add
dec
aam
in
xlat
cmp
add
pop
dec
ljmp
lahf
inc
sbbb
or
mov
pop
add
pop
pop
adc
sub
add
jbe
inc
add
mov
aas
push
add
in
pop
repz
hlt
adcb
mov
jno
pop
cmp
and
dec
add
cmpsb
xchg
pop
pop
out
add
call
sahf
inc
insl
mov
add
sti
rolb
add
addr16
outsb
sbb
lock
jbe
pop
lcall
insb
loope
or
ja
jg
pop
push
ss
fisttpll
mov
mov
jge
fs
test
test
shlb
add
lahf
outsb
jmp
rcl
mov
testb
push
test
cld
mov
jb
fdivl
shll
add
sbb
mov
jb
imul
jo
adc
sbb
loope
popa
pusha
jmp
loopne
add
jns
shlb
xor
movsb
loope
or
xchg
xor
or
push
mov
in
push
jle
mov
add
xor
xchg
mov
adcb
in
xor
in
js
pshufw
lret
mov
loope
add
out
sub
aam
test
mov
out
add
sub
jae
jecxz
adc
add
test
imul
xchg
into
push
nop
add
xor
pusha
jg
add
rep
sahf
add
and
rcrb
xchg
pop
push
arpl
subb
lds
data16
xchg
sbb
cmp
push
fs
dec
xchg
dec
xchg
inc
xchg
outsb
pop
or
inc
das
xor
call
icebp
sbb
push
add
add
or
adc
and
sub
cmpsl
lock
hlt
xchg
cmp
dec
pusha
fcoml
sbb
dec
call
push
loope
cmp
xor
test
mov
pushl
addb
add
std
xor
xchg
mov
imulb
jle
lock
push
xchg
inc
rcrl
fiadds
mov
jecxz
pop
addr16
ja
add
mov
stos
negb
bound
add
jle
cwtl
bound
cli
sbb
nopl
test
adc
jmp
mov
cwtl
jns
bound
lods
jnp
add
add
mov
jo
push
jle
jmp
add
mov
cmp
ss
std
outsl
or
sub
in
lods
loope
add
xchg
ljmp
mov
shll
add
inc
xor
cmpsb
sub
in
adc
dec
mov
cltd
jns
cmp
mov
clc
gs
lds
dec
aam
mov
push
pop
sbb
mov
push
scas
mov
add
jmp
inc
in
sbb
push
adc
nop
bound
add
cld
shl
movsl
jge
add
std
test
lods
dec
je
data16
subb
lock
in
loopne
push
dec
rorl
xchg
mov
int3
pop
mov
xchg
mov
pop
adc
add
mul
mov
adc
lods
je
cwtl
xor
mov
adcl
rol
xchg
inc
inc
fsts
push
add
dec
add
dec
out
jns
cltd
jne
outsb
cmp
loope
jge
call
ret
jle
xchg
loop
cltd
pop
stos
sub
inc
adc
out
mov
and
arpl
push
mov
stos
or
lock
xor
mov
loope
cmp
mov
adc
lahf
add
stos
testl
mov
test
adc
sub
sbb
fsubrl
sub
cmp
push
jg
and
adc
fbld
add
cmp
adc
ret
scas
push
xor
sub
hlt
adcb
rcr
cmpsl
orb
push
or
dec
cmp
in
out
popa
je
pop
push
sbb
inc
and
and
jle
xchg
ljmp
imul
adc
mov
enter
jp
inc
adc
inc
fcompl
and
xchg
cwtl
inc
dec
or
addb
orl
ss
inc
cwtl
jg
rcr
xchg
fiaddl
add
xchg
dec
and
push
fxch
test
inc
loope
mov
in
add
add
dec
dec
nop
sbb
adc
cltd
je
pushf
push
fsubrp
push
cmp
lock
or
cmpsl
adc
loopne
pop
pop
sub
lcall
mov
popa
or
add
stos
cmc
push
addl
inc
fmuls
add
cmp
sbb
hlt
add
mov
dec
loope
jg
add
sbb
add
mov
shrl
icebp
and
xchg
pusha
jne
and
add
inc
xlat
jg
fadds
dec
push
cmp
je
mov
push
loopne
sub
sub
push
in
in
cwtl
lret
lods
and
movsb
inc
xchg
sti
add
mov
mov
push
xchg
adc
bound
sbb
cmpsb
xchg
adc
add
sbb
add
sarb
jl
jl
add
inc
add
loopne
pop
add
push
cmpsl
shlb
mov
xor
testb
inc
out
inc
mov
xor
test
xchg
testl
fisubrs
repz
xchg
jp
xlat
add
loope
lahf
lds
add
push
xor
jbe
sbb
add
in
int3
out
nop
push
call
ror
movsb
push
mov
inc
mov
out
cmp
imul
subb
push
outsl
sbbb
adc
imul
xor
bound
mov
pop
add
lahf
popf
out
push
dec
xor
add
dec
adc
sub
stos
fidivl
movsl
pop
add
fstpl
loop
mov
push
and
add
pop
add
jo
or
enter
inc
pop
cwtl
mov
ljmp
push
adcb
or
or
sub
leave
call
sub
xchg
push
fidivrl
scas
adc
sbb
jg
sbb
fstl
pop
leave
pop
xchg
faddl
iret
iret
cmpsb
cmpb
loopne
inc
mov
cmp
xor
dec
add
movsl
mov
fmuls
mov
flds
mov
enter
ret
xchg
clc
xchg
push
lods
out
add
test
cld
pop
xchg
insb
cmpsl
cmp
push
pushf
push
cli
xor
adc
test
pop
jecxz
adc
pop
sbb
arpl
add
scas
repnz
push
lds
mov
loopne
stc
cmp
rorb
mov
aad
iret
pop
std
add
sbb
test
cmpsb
mov
or
dec
sahf
add
xchg
push
add
jb
jge
or
lods
and
adc
push
xor
cmpsl
mov
add
call
scas
mov
ss
iret
mov
jb
xchg
lods
jo
sbb
add
dec
push
add
add
mov
mov
add
sbb
sti
add
inc
in
out
jno
add
daa
addl
fcom
cmpb
cmpsl
sub
shll
stos
push
add
popf
sub
inc
lcall
add
insb
mov
mov
cltd
fiadds
jae
jo
xchg
mov
ja
adcb
sbb
dec
aaa
rcrl
ds
stos
shrl
sbb
aam
cltd
sbb
out
adcb
dec
outsl
jno
add
mov
lds
imul
pop
lret
dec
jg
ret
adc
aam
or
sbb
cmp
scas
les
ficomps
adc
mov
pusha
cmp
sub
dec
push
push
out
inc
ret
add
or
popa
dec
out
pop
and
xchg
mull
in
mov
dec
test
cmp
dec
sahf
push
jle
test
fildl
mov
mov
out
mov
stos
sbb
mov
add
fnsave
jnp
out
jne
fmuls
and
imul
add
push
pop
dec
ret
jmp
lock
push
add
push
loopne
add
ja
fiadds
dec
pop
push
jle
jne
add
mov
mov
add
test
or
add
ret
sub
sub
inc
jg
add
xchg
es
jmp
jb
sbb
ucomiss
and
xor
xchg
add
dec
ja
add
jne
mov
cmpb
adc
loopne
add
add
aam
pop
push
mov
addr16
cmp
add
cs
push
xor
sbb
repnz
pop
addl
dec
call
jno
sbb
cwtl
ret
xor
add
inc
movsb
incl
inc
ds
test
mov
add
dec
xor
outsb
in
sbbl
arpl
dec
and
faddl
inc
scas
pop
adc
out
sbb
add
leave
sbb
pop
cwtl
mov
mov
scas
movsl
imul
cld
call
cmp
dec
adc
pop
xchg
add
sub
fs
xchg
je
add
iret
mov
lret
sub
inc
mov
add
ret
mov
inc
repnz
sbb
outsb
fwait
add
sbb
inc
fs
mov
add
aas
cmpsl
rcrl
push
add
popf
repz
cwtl
loopne
aas
add
mov
int
cmp
cmp
cmp
mov
cmc
in
add
es
call
clc
mov
jno
fsub
fwait
pop
cmp
mov
pop
mov
fwait
jmp
dec
add
xchg
das
test
mov
js
movsl
in
pop
into
jg
pop
push
push
lret
dec
les
sbb
mov
xor
add
pop
cli
dec
push
cmpsb
insl
xor
daa
and
aam
test
enter
cmpb
inc
rol
out
pop
or
and
inc
jp
inc
jb
sbb
rolb
add
inc
inc
sbb
mov
sbb
adc
cmp
adc
cs
xchg
inc
dec
pop
out
add
jge
popa
or
outsl
inc
mov
stos
add
xor
test
adc
mov
add
imul
cmp
fisubrs
mov
add
nop
test
testb
out
ret
adcb
loopne
push
insb
testb
pushf
pop
ljmp
mov
sbb
test
pop
out
add
cmp
jge
aam
mov
int
mov
or
pusha
jne
adc
test
jns
sbb
add
mov
mov
xor
cmp
push
add
xchg
jmp
movsb
and
add
rcrl
dec
mov
out
sbb
add
adc
push
xor
mov
add
inc
ja
mov
xchg
add
xor
add
add
push
pusha
push
ja
push
imul
stos
mov
add
adc
enter
inc
sti
mov
xchg
cmpsl
inc
cwtl
cmc
in
pop
add
push
dec
daa
inc
mov
imul
mov
dec
lcall
or
stos
inc
inc
repnz
cld
or
dec
outsl
pop
mov
lret
add
xor
xchg
sub
mov
mov
sbbl
push
pushf
rcrl
lea
xlat
shlb
pusha
mov
xchg
add
push
orl
inc
xor
push
xor
dec
jg
mov
fsts
mov
sub
rorl
pop
pop
or
adc
xor
adc
cs
arpl
mov
ja
pop
enter
add
dec
js
movsl
mov
cs
mov
ds
pop
rolb
sahf
mov
mov
adc
leave
jno
add
xchg
xchg
lcall
add
pop
shll
insb
cmp
cs
or
outsb
add
xor
loop
ret
in
push
or
add
add
andb
shlb
add
stos
cmpsl
mov
add
mov
pushaw
mov
add
inc
mov
in
out
rep
rolb
outsb
lods
orb
lock
cmpsl
xchg
add
nop
sub
stos
ret
xchg
cwtl
add
jl
outsb
in
adc
pop
add
dec
jg
jecxz
cwtl
xchg
add
jno
push
lea
loopne
cmc
aad
add
inc
jle
sub
mov
fcoms
repnz
mov
fwait
lcall
inc
jbe
mov
pop
les
sub
ja
jne
pop
pop
jmp
pop
or
jge
and
insb
loope
fucomi
push
add
orb
sti
jp
sbb
pop
lock
loop
cmp
leave
pusha
sub
sbb
cmp
mov
daa
pop
repnz
imul
out
test
fstps
nop
and
cmp
mov
mov
jg
inc
das
mov
repz
or
pop
mov
add
pusha
rolb
cmp
rclb
pop
mov
imul
loopne
dec
mov
sti
cmp
sub
cltd
test
popf
cs
or
dec
loopne
cld
mov
xchg
bound
lahf
add
jecxz
test
ret
mov
add
fstpt
lea
lds
add
or
dec
add
mov
fidivl
arpl
stc
into
mov
ja
add
mov
add
in
sub
pop
sub
dec
cmp
loopne
adc
xchg
ficoms
in
push
fcoml
inc
sbb
inc
lahf
pop
sub
adc
sub
lret
and
dec
pop
andb
popa
ja
cmp
add
idivl
dec
cltd
or
jbe
add
pop
sahf
addb
add
jp
xchg
sub
sub
dec
pop
jl
sahf
xchg
lcall
dec
inc
mov
je
and
lods
adc
mov
push
cmpsl
mov
incb
je
add
daa
insb
ss
movsb
aam
movsl
pop
aas
lcall
mov
pusha
xor
cs
push
loopne
add
repz
add
adc
call
mov
pop
push
sub
inc
ljmp
movsl
ja
mov
int3
inc
addr16
cwtl
popa
adc
movnti
fisubrl
xchg
call
repz
mov
mov
and
xchg
test
movsl
daa
cld
push
sub
and
cmp
xchg
push
mov
push
sub
jle
cmp
sbb
and
add
into
add
jle
js
or
andb
ja
andb
popa
sub
sbbb
in
jecxz
pop
xchg
sbb
hlt
mov
inc
sub
add
xchg
dec
mov
mov
clc
mov
test
and
add
imul
push
cli
and
adc
pop
sbb
mov
xchg
stos
or
scas
scas
movsl
adc
jo
push
enter
add
push
fbld
or
lret
pop
inc
and
sbb
test
mov
lds
pop
sub
add
pop
in
lret
lods
add
sti
xor
aas
aad
pop
add
lock
in
insl
and
push
and
mov
inc
add
incb
jae
push
rcrl
add
mov
enter
sbb
inc
out
cmpb
movsl
in
sub
add
add
mov
in
test
lcall
addr16
cmp
aad
int3
sahf
xor
sbb
mov
push
sti
outsb
repnz
add
adc
jbe
pop
and
mov
add
movb
les
xchg
enter
cmp
xorb
pushf
jns
adc
gs
jmp
lock
jno
in
sub
std
mov
loope
imul
add
mov
mov
push
pop
cltd
enter
pop
jmp
idivb
sahf
stos
fmul
scas
pop
aam
sub
shl
movsb
imul
pop
mov
popf
outsl
movsl
add
mov
jae
push
sti
rorb
std
cli
pop
add
xchg
ret
dec
scas
sbb
movsb
in
mov
xor
addb
int
lcall
adc
ficoml
mov
inc
shll
add
dec
in
add
ss
jp
rcrb
call
stc
dec
sysenter
mov
in
add
xor
sbb
xchg
inc
adc
sti
jae
sub
mull
lods
jle
adc
fcompl
mov
xorb
aad
and
nop
adc
ja
sub
in
jae
scas
add
mov
or
inc
sbb
fdivl
sub
mov
movb
leave
loop
iret
mov
das
ret
push
cmp
xchg
and
movsl
cmp
mov
dec
je
shll
aas
add
iret
or
jo
add
push
fs
push
and
pop
add
mov
add
adc
xor
lea
push
loopne
lahf
mov
mov
test
mov
mov
pop
addr16
in
pop
das
cmp
lods
das
out
add
out
push
jmp
pop
jg
mov
jge
and
inc
add
adc
adc
ret
jl
mov
fmuls
lock
inc
cmp
mov
add
jb
sarb
fdiv
cmp
add
scas
xchg
pop
flds
mov
mov
xor
roll
and
inc
or
mov
rolb
pop
cs
mov
sarl
scas
mov
in
add
inc
xor
iret
cltd
jae
add
leave
sbb
cmpsb
mov
inc
es
add
push
fisubrs
bound
add
dec
jmp
nop
out
loopne
push
pusha
lock
pop
xlat
ljmp
xor
jne
shll
outsb
in
addr16
jg
mov
fists
ret
sti
add
sub
pop
add
pop
pop
rcrb
fs
movsl
jbe
imul
adc
fiaddl
js
fcoms
loop
into
mov
std
xchg
popf
cli
dec
hlt
sbb
mov
mov
gs
imul
lods
xor
jmp
jle
ret
call
lea
aas
cmpsl
in
xchg
xchg
or
stos
cli
and
mov
cld
ffree
enter
stos
testl
dec
leave
insb
dec
cmp
mov
mov
cmp
add
testl
fistpl
push
mov
test
fidivrl
lcall
jp
insl
mov
jmp
add
fcmovnb
clc
mov
cmp
in
add
inc
add
rolb
inc
push
mov
add
add
mov
add
loop
add
stos
lret
pop
push
jecxz
imul
adc
movsb
lds
push
inc
and
add
lret
sbb
pop
mov
adc
adc
iret
sbb
jno
psubq
lds
push
das
or
int
popl
mov
add
xor
hlt
push
sahf
inc
outsb
add
mov
and
adc
inc
xchg
out
rcrb
pushf
adc
add
in
shlb
add
push
outsl
mov
jae
out
mov
xchg
add
imul
div
icebp
mov
add
xchg
lods
test
push
sbb
mov
hlt
and
and
xchg
add
xor
lock
adc
cmp
out
loopne
sbb
dec
cs
adc
push
daa
call
add
inc
setge
cmp
xor
es
sub
leave
insl
in
sub
fmuls
add
xor
adc
cmc
loop
mov
repz
pusha
lock
sub
mov
lods
test
cmp
cwtl
out
mov
pop
sbb
cmp
cmc
add
sbb
outsl
call
ds
insb
cmp
jb
imul
and
add
cmpsb
push
mov
add
jo
lahf
adc
xor
push
sti
push
sub
sbb
into
mov
xchg
cmp
scas
repz
add
lahf
jecxz
inc
sub
add
pop
and
push
xor
fnsave
sbb
das
in
add
pop
inc
std
add
mov
sbb
xbegin
loopne
ljmp
hlt
add
mov
fdivs
sbb
dec
and
sbb
jno
inc
xor
loop
fstpl
push
and
mov
add
inc
or
add
in
cmp
adc
ret
jle
add
jl
or
adc
gs
or
jg
std
rorl
sarb
mov
jb
pusha
cwtl
cmp
xor
add
jno
mov
add
push
bound
incb
insb
sbb
sbb
in
add
add
sti
adc
pop
rorb
push
pop
cmc
cmp
add
dec
pop
adc
daa
cmpsb
dec
xchg
jle
push
in
movb
mov
jle
add
lods
int
pop
fld
add
fisubrs
mov
sbb
sahf
inc
lods
jg
cwtl
ss
and
xor
mov
lret
movsl
add
mov
push
je
pop
test
push
push
add
sub
dec
nop
sbb
jge
push
inc
add
xor
rorl
aas
mov
insb
ret
jns
loopne
lds
pusha
mov
dec
add
int3
add
mov
lock
xchg
add
sbb
scas
shrb
add
div
aas
aam
sbb
mov
sahf
push
cmp
shlb
lods
jbe
add
popf
popa
stos
mov
mov
movsb
lock
or
fwait
aaa
sub
loop
std
and
add
sbb
push
cmp
push
loopne
addb
cmpsb
mov
adc
dec
add
sbb
scas
sahf
aas
pop
pop
push
push
add
pop
and
add
subl
xor
and
popl
or
add
movsl
pushf
jg
add
lea
mov
imul
andl
hlt
pop
mov
cmpsb
sahf
std
test
inc
adc
xchg
in
xor
dec
jo
xchg
sbb
in
loopne
add
adc
ret
add
and
dec
mulb
xor
rorl
jo
add
pop
test
cmpsb
scas
adc
lock
aas
fstl
std
add
ds
adc
mov
lock
jle
dec
shrb
sbb
ss
lret
push
sub
or
cmpsl
add
and
arpl
sbb
icebp
adcl
js
scas
and
cld
pop
fwait
inc
push
xor
add
popa
and
test
cmp
add
roll
enter
lcall
mov
add
sbb
add
mov
xchg
cltd
adc
enter
xchg
sub
popw
leave
popl
andb
sahf
add
nop
pop
lock
in
addr16
mov
dec
xor
test
inc
pop
adc
push
aas
xor
jmp
or
fbld
adc
or
pusha
leave
dec
push
inc
push
add
jmp
pop
mov
std
jge
dec
jo
repz
mov
int
or
add
daa
xchg
lods
hlt
mov
add
xchg
int
rorl
sbb
sbb
mov
add
popf
or
cli
jge
lret
aam
xchg
jno
loop
orb
fwait
addr16
push
add
sarl
adc
add
or
mov
pop
loop
les
sbb
shlb
mov
mov
xchg
dec
fadds
add
test
in
loope
lcall
bound
je
add
insb
fs
call
mov
push
ljmp
rclb
mov
cmc
pop
int
add
adc
testb
repz
dec
jo
cs
pusha
sbb
mov
aaa
inc
in
inc
inc
mov
adc
push
fildll
push
rcr
inc
add
ret
dec
pusha
cmpsl
sbbl
cmp
mov
push
in
jecxz
nop
stos
ret
addr16
sbb
lahf
stc
scas
cld
sub
adc
fsubrs
je
sbb
lea
xchg
mov
sub
push
fldl
ljmp
int
arpl
xchg
jns
mov
stc
popa
in
sbb
cwtl
sbb
lea
lods
mov
sti
inc
out
lock
loopne
cwtl
jnp
mov
add
sbbl
lods
movsl
pop
pop
add
cmp
nop
adc
cmp
lea
cmc
rorl
xor
mov
cld
fsubl
mov
jl
add
lods
rorl
adc
dec
loop
inc
mov
mov
movq
add
jne
pusha
pop
xor
or
add
clc
push
adc
enter
shll
outsb
iret
add
fdivs
cmp
adc
and
mov
cmp
jo
les
cwtl
std
or
add
out
ret
test
push
push
add
cmp
lods
push
push
or
dec
xchg
or
jmp
dec
mov
mov
cmc
inc
or
outsl
mov
add
push
repnz
adc
cli
into
daa
addr16
push
xchg
add
dec
cmp
imul
out
pushf
inc
je
fildl
dec
sarb
xchg
stc
adc
sub
jbe
roll
adc
in
xor
or
icebp
jns
xor
push
call
popa
outsb
pop
push
jae
sbb
cmpsl
dec
sub
mov
icebp
xchg
add
mov
aam
pop
in
add
sbb
xchg
cmp
add
into
push
int
add
and
add
stos
cmpsb
push
add
sbb
pusha
sub
insb
scas
into
add
ss
adc
daa
int3
sbb
add
jg
cmp
mov
lahf
or
insl
insl
xor
sbb
jp
call
inc
push
sbb
hlt
or
lock
aas
pop
loop
pusha
inc
and
add
mov
sbb
adc
push
sbb
xchg
add
daa
fs
xchg
loope
in
fdivs
mov
les
out
or
nop
inc
call
subb
faddl
mov
loop
jg
imulb
fimuls
mov
or
stos
xor
inc
pusha
fildl
pop
add
imul
and
cli
xchg
add
add
dec
das
and
mov
lods
xor
pop
ret
inc
mov
dec
lods
jb
jno
pop
cmpsb
fadds
mov
push
mov
call
add
out
outsb
dec
xchg
fcomps
mov
cvttps2pi
rorb
adc
nop
xor
adc
lods
cltd
lock
cld
addb
popa
sbb
sbb
lret
cmp
jne
in
stos
sub
sbb
add
in
shl
add
rcl
sbb
cwtl
inc
pop
rorb
add
dec
or
add
mov
pusha
adc
loopne
or
mov
jge
add
sub
pop
mov
xchg
adc
mov
stos
cmp
mov
add
das
mov
pop
nop
daa
testb
sbb
out
sub
xor
in
xchg
cs
loope
add
dec
insl
aam
jo
cmp
cmpl
add
jmp
mov
lret
notl
orb
and
pop
xor
push
xor
push
sbb
fadds
xor
cltd
adc
mov
cmp
movsb
sub
push
roll
dec
add
adc
add
mov
icebp
or
adc
jmp
pop
dec
pop
mov
add
push
fsubrl
out
push
dec
ds
nop
add
jne
sub
and
mov
ret
add
flds
out
std
in
add
mov
push
movsb
dec
xchg
mov
int3
insb
leave
nop
adc
cmp
test
out
jo
pop
and
add
pop
emms
ljmp
jmp
xor
add
fildl
or
dec
stc
or
adcl
mov
xor
sbb
add
xchg
pop
leave
aaa
mov
out
pop
xchg
pop
imul
aam
lahf
les
ret
fs
or
das
xor
pop
xor
mov
iret
xchg
std
add
mov
add
sbb
adc
xchg
fdivrs
pop
movl
out
fs
sbb
and
cmp
inc
stos
repz
push
xchg
test
pop
loopne
cmp
jmp
sub
cmp
add
outsl
ficoms
inc
inc
pop
sbb
ss
adc
sar
jbe
mov
and
add
cli
insl
sbb
xchg
adc
xor
add
les
add
xor
test
sub
xchg
rolb
or
aam
sbb
inc
pop
jmp
flds
jo
pop
mov
sub
xorl
dec
nop
sahf
dec
pop
add
xchg
stc
cmp
cmovb
sbb
popa
sub
test
mov
add
fstpl
popf
inc
xor
hlt
add
jl
test
push
add
pop
mov
cmp
xchg
jmp
mov
fwait
aad
add
sub
dec
cmp
sbb
movsl
out
ret
add
scas
lahf
push
fidivl
and
movsb
hlt
mov
out
jle
add
insb
aaa
sbb
dec
cs
xlat
sbb
fcmovb
subb
rcll
xchg
pop
mov
ret
add
mov
cmc
push
out
fimull
rcrl
inc
jno
and
mov
mov
add
dec
cs
mov
or
add
lcall
dec
sbb
fists
shlb
add
fwait
jns
rolb
mov
enter
sbb
mov
test
add
je
aas
dec
jno
sbb
dec
add
jo
les
and
cwtl
in
je
jo
lock
jnp
scas
xchg
pop
pop
xor
sub
and
js
jecxz
dec
mov
or
jne
cld
mov
push
jnp
push
daa
xchg
cmp
add
mov
cwtl
insl
rcrb
add
adc
adc
sbb
cltd
pop
pusha
aaa
jmp
pop
test
add
push
pusha
out
dec
loopne
cmpsb
pop
push
ffreep
iret
adc
and
jno
cltd
push
and
fs
enter
bound
shll
inc
jmp
lea
lahf
cmp
pop
popa
add
push
repnz
leave
xor
or
popa
cmp
or
sbb
sub
andb
add
xor
cltd
mov
sub
pop
and
xor
stos
fdivrs
pop
xchg
lods
jmp
jge
push
int3
clc
out
sbbb
in
mov
and
sbb
mov
add
arpl
test
sbb
mov
xacquire
pop
xor
sub
and
dec
xor
cwtl
je
sub
loop
cmc
xor
pop
push
fst
sbb
dec
loopne
outsl
imulb
push
mov
iret
cmp
rcl
pusha
mov
sahf
pushf
add
roll
xor
dec
push
insl
stos
xorb
adc
ret
jnp
add
jo
pop
callw
shll
stos
test
fdivrp
xor
cld
dec
add
xchg
mov
adc
jno
imul
adc
inc
mov
and
pusha
xor
cmp
add
jmp
js
add
push
pop
add
add
sub
add
fs
and
inc
insb
sbb
xorb
addr16
jp,pn
lds
add
lcall
or
xchg
lock
cmp
xchg
filds
add
testb
movsl
pop
or
out
iret
inc
stc
xchg
xor
adc
inc
popf
add
mov
or
pushf
cmp
add
cwtl
xor
pop
mov
jns
push
addr16
daa
sub
fsubr
xor
outsb
pop
pushf
inc
ja
or
sub
lock
sub
pop
pusha
inc
and
pop
fldcw
mov
or
in
filds
adc
mov
test
sub
and
mov
imul
pop
daa
fisubs
mov
add
rolb
outsl
lds
xchg
sub
xchg
lahf
scas
add
mov
and
fadds
negl
popf
pop
rorb
cli
jge
add
and
shlb
lds
add
mov
ja
pop
repz
pusha
or
add
add
jns
fstps
outsb
adc
aad
cmpsb
add
iret
mov
xchg
mov
ja
add
dec
cmpsb
or
push
cmc
out
or
jns
popf
fdivrs
in
pop
cmc
jo
scas
lret
imul
jo
inc
pop
jne
loope
shr
adc
ret
js
icebp
push
adc
add
cld
std
jnp
xchg
adc
xchg
xor
mov
hlt
xor
fisubl
ret
add
xor
scas
push
es
nop
or
xor
addl
ss
push
push
rcll
fdivrl
add
movsl
xchg
push
add
adc
mov
dec
shlb
rcrb
dec
repnz
add
sbb
cmpsb
lds
add
movsb
inc
test
push
xchg
push
cmc
in
lods
int3
push
xor
xchg
sub
ret
inc
leave
add
push
aad
add
rorb
add
rcl
shrb
sbb
dec
sub
pop
add
insb
mov
add
lcall
dec
scas
popa
xorb
adc
andb
or
in
xor
scas
cld
mov
push
jns
rolb
nop
sub
push
sub
mov
inc
insb
shlb
mov
add
mov
cmp
pop
cmp
xchg
dec
jb
dec
add
and
addl
loop
add
cli
dec
cmpsb
popa
data16
add
inc
add
mov
dec
add
shll
sti
hlt
dec
xchg
push
add
mov
loopne
divl
into
or
add
ds
add
jle
and
jge
pusha
ds
xor
lret
data16
or
lods
out
orl
jbe
rclb
fisubl
test
hlt
stos
and
xor
das
data16
xor
loope
movsl
pop
push
mov
out
push
psllw
repnz
nop
mov
adc
testl
out
in
push
iret
mov
and
leave
cmp
jl
push
les
lahf
fistl
int
pop
int3
mov
jo
add
dec
sbb
xchg
pushf
repz
loope
lea
stos
rcrb
popa
shrb
add
push
inc
lret
lret
cmp
add
lock
sbb
and
mov
leave
dec
jl
cmp
rorb
dec
imul
je
lcall
sbbb
lea
je
notl
add
lods
inc
jge
aaa
cmc
add
mov
je
xchg
push
gs
cmp
jne
jae
add
sbb
sbb
jnp
xchg
pop
adc
xor
cmp
mov
ljmp
int
sbb
add
loopne
sub
jl
sbb
adc
mov
dec
adc
add
push
xor
jbe
xchg
incb
adcl
pop
sar
and
fadd
in
popf
stos
xor
cmp
jo
mov
test
and
addl
add
dec
gs
lock
rolb
loop
xor
rcrb
jnp
add
sti
fmuls
test
mov
add
pushf
andl
sbb
push
data16
push
push
or
cwtl
add
add
and
ret
pop
add
push
or
mov
jnp
sbb
pop
inc
iret
and
outsb
jmp
lods
stos
add
adc
sub
movl
cvttps2pi
cwtl
aad
loope
std
push
cmc
xor
or
fs
sbb
xlat
add
cmc
js
bound
mov
call
pop
insb
jmp
push
loop
mov
bound
add
aas
scas
or
inc
xchg
testl
push
cltd
add
add
loop
inc
cmp
popf
push
mov
lret
cld
mov
loopne
push
xchg
pop
test
and
stc
mov
add
shlb
or
jae
aaa
add
mov
add
push
mov
in
ja
add
push
mov
mov
cwtl
and
cltd
mov
outsl
cmp
adc
data16
movl
cmp
cmpsb
push
aad
cmpsl
leave
imul
sbb
adc
xor
repz
pop
pusha
add
xchg
loopne
loopne
pop
or
mov
mov
jo
add
pop
pop
push
daa
rolb
or
cmp
adc
shll
cmp
dec
inc
push
jns
into
loop
mov
or
loopne
mov
mov
and
dec
add
ljmp
mov
add
jbe
push
loopne
imul
xlat
aam
inc
int
mov
clc
hlt
into
popa
js
shl
mov
mov
jl
movsl
mov
mov
cmp
ss
add
and
xchg
aas
sbb
add
cmp
test
jne
add
pop
aas
pop
sbb
dec
pusha
cld
xor
sbb
ud2
or
sub
jo
add
jp
cmp
sub
test
movsl
pop
pop
mov
in
in
test
leave
cmp
adc
mov
js
fnstsw
movups
push
jno
ret
push
sbb
sbb
fsubs
inc
icebp
sub
and
les
nop
lock
mov
pop
pushf
scas
xchg
addr16
xor
lret
cmp
shl
or
rcll
fwait
int3
popa
je
push
out
add
pusha
mov
adcl
add
fcmovbe
lds
scas
lret
push
adc
add
xor
adc
lock
roll
rcr
adc
push
mov
push
nop
sbb
dec
movsb
mov
int
sub
push
mov
dec
push
jbe
dec
add
or
rcrb
testb
inc
jl
add
cmp
les
and
add
xor
mov
or
dec
idiv
loope
popf
add
xchg
int3
ds
aad
test
adc
pop
mov
xchg
or
jecxz
push
stos
je
hlt
push
sar
mov
inc
sub
add
inc
add
or
ret
push
cmp
movq
ja
add
add
shll
pop
out
sbb
mov
xor
mov
sub
in
inc
nop
inc
dec
add
nop
push
push
pop
lahf
incb
popf
mov
mov
cmpsl
dec
inc
or
sub
sub
cmc
int3
push
data16
cmpb
add
fwait
adc
pushf
sar
xor
mov
cmp
push
mov
aas
mov
dec
add
push
test
addl
and
test
dec
cmp
xor
dec
add
sub
mov
rclb
or
inc
push
xor
add
and
ret
push
fstpl
add
lock
cmp
adc
push
lahf
adcb
test
shlb
rcrb
dec
int3
lods
add
lahf
sbb
xchg
xchg
inc
addr16
pop
cwtl
jnp
xor
aad
jne
or
mov
in
into
mov
lret
sahf
sub
decb
cmpl
lret
fiaddl
push
mov
cmp
xor
pop
movsb
inc
and
cld
pushf
dec
mov
add
sub
orb
dec
add
stc
lock
test
jno
push
cmp
je
mov
cmpsl
cmp
xor
aad
dec
movsb
jbe
add
jno
ficoms
inc
mov
loop
add
sbb
je
out
sti
jns
test
xor
shr
or
sti
mov
dec
shlb
cmpsb
add
push
mov
push
sub
ds
mov
add
pop
dec
subb
inc
add
or
test
add
outsl
mov
and
add
adc
fwait
js
push
mov
add
mov
nop
cwtl
add
test
outsl
lds
push
inc
cmp
dec
mov
and
je
aad
add
inc
sahf
mov
addl
andl
and
mov
push
add
cli
xchg
test
pop
push
adc
orb
mov
shlb
fcomps
lcall
in
enter
sub
add
cmp
daa
lret
add
shl
int3
imul
sub
pushf
aas
add
push
cmp
lcall
sub
mov
in
addb
pop
addb
dec
xchg
push
or
push
or
hlt
ss
or
fdivl
cwtl
push
xor
mov
adc
test
xor
cmpb
scas
dec
xor
push
or
pusha
stos
cli
sbb
xor
sbb
ret
cmp
or
dec
xor
adc
test
sub
sub
pop
rcrl
add
jl
sbb
inc
mov
insb
cmp
test
aas
cmp
scas
ret
in
add
inc
into
and
roll
add
mov
dec
sub
add
xor
and
mov
dec
cwtl
loop
inc
out
lahf
xor
adc
xlat
add
stos
lcall
movsl
test
or
pop
cld
mov
and
cltd
test
sbb
shr
ret
and
inc
ljmp
scas
gs
push
cwtl
push
xor
leave
incl
cmp
sbb
add
dec
pop
add
in
xchg
sbb
mov
insl
in
ffree
popa
aas
rorl
aas
ret
xorl
and
aad
pop
adc
inc
mov
cmp
add
addr16
cmc
push
sbb
in
faddp
rolb
push
aas
adc
aam
inc
push
dec
fs
add
icebp
lret
cmp
jecxz
dec
add
cmp
mov
je
cltd
fs
add
aad
jmp
fcmovnu
dec
adc
adcl
in
add
int
add
loopne
dec
rcrb
mov
add
jl
mov
add
fildl
out
inc
push
fcomp
test
adc
loopne
cwtd
jo
cmovp
jnp
mov
mov
or
adc
adc
push
clc
xorl
xor
lcall
aam
pusha
and
adc
insb
add
add
imul
sub
int
shlb
loop
int3
es
int
jmp
push
add
arpl
lock
push
rcll
rolb
repnz
add
inc
xor
popf
jne
test
mov
fwait
and
subb
test
xchg
inc
adcb
or
push
inc
jp
sbb
inc
inc
xchg
push
icebp
test
dec
jb
dec
jae
inc
adcb
add
imul
xor
pop
pop
cmp
xorb
aaa
adc
add
mov
inc
dec
repnz
loope
jno
fisttps
lods
add
ljmp
push
fldl
mov
cmp
adc
dec
add
jge
test
stc
inc
mov
rolb
das
cli
mov
lahf
xchg
adc
insb
jecxz
jge
add
sbb
inc
aad
sub
mov
pusha
int
shlb
pop
ret
popf
add
fbld
pusha
gs
aas
dec
mov
rcl
cmpsl
xchg
rorl
sub
adc
insb
xor
out
into
nop
in
push
add
xchg
xchg
or
stc
es
pop
inc
stos
testb
fimull
rcl
cmp
adc
and
push
sbb
imulb
pop
inc
push
sub
das
fdivrs
sarb
repz
bound
imul
xchg
or
in
fiadds
inc
dec
stos
adc
xorb
hlt
dec
add
fcmove
ret
add
mov
jno
in
pushf
lret
adc
push
imul
pop
js
orb
cmp
xor
mov
sub
cwtl
fildl
add
rorb
pop
jno
mov
and
aas
sbbb
xchg
add
in
mov
mov
or
loopne
ror
xlat
add
adc
sub
cmpsb
ret
add
icebp
aas
mov
loope
dec
or
mov
add
int
mov
jmp
or
dec
outsb
jle
sti
pop
fs
fdivl
push
shrb
shll
push
aaa
cmpsl
add
pop
les
pop
ret
lret
add
jge
clc
add
stos
xor
test
dec
lcall
pop
sbb
push
add
xchg
mov
xor
jnp
mov
dec
xorl
push
add
loop
mov
fcoml
insl
mov
sub
hlt
in
and
cmp
xor
mov
rclb
and
xchg
pusha
cs
add
xor
repnz
fisttpll
mov
pop
cli
and
sbb
lods
sub
dec
inc
pushf
call
pop
test
ret
xor
xor
jp
sahf
mov
clc
and
add
sbb
lret
adc
sbb
push
dec
out
pop
mov
leave
dec
mov
sbb
sub
add
lea
iret
lcall
mov
rcrl
lcall
mov
adcl
lea
push
add
mov
int
jo
cmp
rorl
enter
add
jge
test
and
xlat
aas
pop
and
lods
cmp
mov
sarb
xchg
stos
or
cwtl
dec
lcall
pushf
sub
add
cmp
rol
push
adc
loope
and
cwtl
shl
dec
fneni(8087
sbb
and
inc
or
or
dec
inc
inc
add
jge
nop
lods
add
loopne
pop
loope
sub
xor
roll
cmp
ja
fs
lea
insb
pop
test
icebp
cld
dec
adc
rcrl
cmpl
fbstp
fiaddl
mov
jmp
je
push
mov
pusha
mov
pushl
mov
jecxz
mov
or
clc
cmp
and
pop
mov
xor
or
lret
mov
mov
ret
add
cwtl
lea
call
mov
jo
pop
out
rorb
add
mov
and
push
and
aas
mov
add
cli
pushf
pop
sub
jl
test
mov
sahf
movsb
mov
xchg
mov
push
xchg
push
and
flds
xchg
sub
js
ds
fiaddl
jbe
lret
popa
mov
add
ret
push
sub
in
add
test
inc
popf
out
pusha
call
push
adc
loope
js
fsubrp
call
test
cs
fsubrl
xchg
cmp
xor
add
jb
mov
cmpsl
mov
xchg
mov
fdivrp
jecxz
pop
in
shrb
sbb
xchg
mov
fbld
and
mov
call
loope
out
hlt
idivl
loopne
cmpsb
push
xchg
lretw
enter
xor
jl
jns
jl
adc
sbb
addb
stos
push
add
bound
cs
adc
xor
adc
pop
loopne
loope
adc
inc
mov
add
sarb
jge
mov
unpckhps
cmp
mov
and
fcoms
lods
out
adc
out
mov
movsb
mov
movsb
test
out
lock
push
or
dec
lret
fwait
inc
xchg
roll
out
push
cli
mov
roll
std
jmp
adc
xor
and
imul
outsb
inc
add
xchg
sbb
nop
mov
nop
push
dec
add
dec
and
popa
jns
or
aaa
lcall
sub
ret
pusha
xchg
in
lods
mov
mov
mov
fs
and
inc
xlat
outsl
sub
cltd
inc
mov
mov
pop
stos
xchg
clc
cmp
dec
in
xor
fildl
idiv
lret
pop
push
add
test
mov
adc
add
jnp
mov
xor
inc
mov
daa
scas
jge
push
fcoml
xor
jp
loopne
mov
add
mov
xor
dec
mov
dec
xor
pop
cmp
ds
movsb
rclb
lock
xor
aaa
rorb
push
inc
mov
jecxz
mov
fsubs
add
mov
jo
into
cmpsl
jae
jbe
jle
and
xchg
dec
and
movsl
pop
adc
inc
dec
fidivrl
add
or
push
lret
sub
inc
sbbl
pusha
sub
jge
ds
mov
dec
pusha
adc
and
fwait
not
std
sbb
jb
lret
or
sub
les
fwait
cmp
sub
pushf
inc
push
jns
cltd
add
test
sub
and
stc
pusha
push
in
addl
cmpsl
xchg
imul
movsb
cmp
add
xor
in
fcmovb
jp
xchg
jo
outsl
xchg
or
add
mov
add
icebp
mov
mov
pop
scas
es
data16
mov
dec
rolb
cmp
sbb
fsubrs
or
shll
mov
pop
insb
or
test
aas
testb
jnp
mov
or
jbe
inc
or
out
gs
shlb
int3
rcl
add
in
mov
dec
and
outsb
cwtl
push
aad
add
adc
cmp
pop
sbb
mov
mov
or
fdivrs
in
mov
sahf
jo
ror
and
jl
out
inc
ljmp
jns
sbb
and
imul
fwait
cmpsb
nop
push
cmp
jnp
ret
sub
scas
dec
push
sub
movsb
push
inc
out
mov
add
mov
loopne
push
fidivrl
jne
mov
dec
fldl
adc
fildll
loopne
mov
sarl
nop
jno
cmc
pop
lods
out
stos
xor
inc
add
mov
cmp
aam
push
pop
xchg
xor
xchg
xchg
push
sbb
add
mov
add
lods
add
movsb
and
jb
cmp
outsb
pop
pop
add
sbb
inc
or
cmc
sbb
test
cmp
cmc
cmp
add
nop
mov
xor
sbb
arpl
insl
lds
xchg
adc
sub
xor
mov
fsub
loopne
pusha
adc
xchg
call
push
jmp
xor
inc
sbbb
fiadds
gs
dec
sub
mov
popa
sub
mov
mov
add
sub
adc
and
or
popf
push
loopne
push
adc
jbe
in
pop
dec
mov
sti
adc
movsl
les
mov
sub
pop
pop
mov
and
add
sub
and
lidtl
push
mov
nop
or
adc
sub
cmp
add
imul
add
mov
cwtl
pop
or
add
lcall
xor
adc
xchg
mov
xchg
ss
push
pop
pcmpeqb
push
out
or
inc
sbbb
test
dec
add
mov
add
cmp
jge
les
adcb
mov
push
sub
ja
xor
jl
mov
xor
add
add
repnz
sbb
mov
jge
add
test
sbb
lea
addr16
sarb
xchg
enter
push
jnp
adcb
add
xchg
inc
lds
inc
nop
pop
dec
mov
das
mov
ds
es
sub
add
ret
cltd
push
scas
hlt
adc
sub
mov
add
aaa
xorb
inc
push
push
sub
loopne
inc
sti
lods
out
jne
or
mov
aad
inc
sbb
sti
lock
dec
das
and
xchg
add
std
andl
mov
xor
adc
scas
add
xor
orb
inc
add
cmp
lret
or
arpl
mov
fldt
pop
add
adc
sub
mov
fildll
dec
mov
and
cmp
nop
popf
sti
add
mov
arpl
mov
dec
mov
fadds
call
pop
push
add
jae
dec
rcl
fcmovnb
add
cltd
push
sub
inc
jbe
xchg
andb
shll
cltd
pop
jbe
dec
jnp,pt
mov
in
adc
ret
repnz
push
retw
sub
adc
daa
dec
loopne
mov
mov
cmp
or
adc
nop
push
push
dec
inc
mov
pusha
dec
rolb
xchg
xor
mov
cmc
cmp
ret
sub
dec
shll
mov
xchg
add
popa
in
jmp
dec
sub
sbb
scas
mov
daa
cli
nop
sbb
out
xchg
sbb
fsubrs
xchg
add
pop
cmp
pop
inc
xor
xor
mov
jbe
ljmp
mov
test
push
dec
add
out
shlb
cs
hlt
jg
unpckhps
fsubrs
and
sbb
dec
add
adc
add
mov
xor
int3
add
push
xchg
mov
clc
arpl
xor
inc
test
jae
xchg
addr16
and
fs
imulb
cs
ja
pop
and
outsl
add
shlb
in
mov
xchg
add
int3
dec
pop
test
sub
ret
mov
mov
and
in
push
add
loopne
push
adc
and
out
add
or
test
lcall
bnd
add
adc
sub
mov
scas
or
inc
movaps
insl
push
inc
das
mov
call
sub
je
or
scas
or
nop
pop
iret
sbb
lcall
mov
and
in
test
cmp
dec
push
mov
push
dec
cmp
lock
or
rclb
fdivs
inc
sub
or
in
rol
sbb
and
orl
mov
sub
xor
inc
daa
jp
testb
mov
xchg
and
sbb
xacquire
dec
pop
jp
add
add
popf
or
sarb
push
cmp
mov
iret
movsl
leave
loopne
test
mov
cmp
jl
cwtl
pusha
faddl
mov
pop
cmp
pusha
inc
push
add
mov
mov
inc
push
aaa
sahf
dec
pusha
aad
fsubrs
sub
leave
xchg
add
jmp
cmpsl
push
loopne
add
outsb
sarl
sub
incb
xchg
push
cmp
jo
add
jle
fmull
daa
inc
sub
push
test
mov
inc
pushf
xor
stc
rolb
sti
sbb
pusha
jo
sub
repnz
enter
xchg
daa
push
sbb
sub
in
rcl
add
es
xlat
inc
loope
movsl
and
push
mov
sub
add
mov
adcb
add
inc
xor
fbstp
mov
hlt
xlat
inc
xchg
lret
outsb
out
cmp
add
pusha
inc
push
mov
adc
lcall
mov
movlps
nop
pop
cwtl
inc
outsb
and
xlat
inc
xchg
movsbl
jns
add
pop
pop
enter
movsb
popa
add
rcr
adcb
fsubs
pop
icebp
add
insb
jge
loopne
jl
and
enter
add
mov
loope
stos
pop
imul
in
fcoms
add
into
rorl
xor
lret
add
mov
es
jp
dec
xor
sbb
pusha
and
aam
pop
popa
xchg
aad
add
cmc
imul
pop
adc
mov
mov
fisttpll
adc
in
add
adcl
testl
into
shl
mov
cmpsb
loop
push
pop
orl
addr16
mov
pop
call
push
ljmp
add
int3
pusha
jo
les
xlat
xchg
loopne
jae
ret
sbb
lods
sarl
jo
or
jp
inc
sbb
add
fistps
cli
lock
in
lods
add
cmp
sub
lret
sbb
push
pusha
mov
push
movsb
fiaddl
setg
leave
sub
inc
leave
xor
mov
lret
mov
jbe
out
push
ret
and
test
sub
xchg
push
les
or
lret
pop
sub
test
sub
or
add
fs
imul
cmp
jle
mov
adc
cltd
mov
shlb
jno
int3
add
test
pop
or
jl
mov
cmpsb
int
add
mov
sub
movsl
mov
mov
fiaddl
into
stos
or
xor
mov
lret
sub
int
cmp
push
dec
add
aad
dec
arpl
mov
sbb
rcl
sub
pop
stos
test
outsb
sub
push
adc
rolb
mov
icebp
in
xchg
vpackuswb
mov
xchg
adc
add
lret
mov
ss
dec
mov
out
into
stc
jg
loope
jo
popa
or
sub
pop
sub
sbb
outsb
inc
cmp
mov
jmp
je
fnsave
jne
cmp
xchg
inc
and
ret
sar
pop
and
js
add
xchg
fwait
adc
ja
xchg
inc
adc
cmp
subb
je
xchg
adc
imul
cmp
loopne
js
jp
cmp
mov
les
cwtl
outsb
mov
mov
inc
fwait
jno
xchg
push
and
pop
lcall
aam
adc
inc
mov
mov
mov
and
or
gs
cmp
mov
inc
sub
cmp
lcall
fcmovnbe
add
cmpsb
cmp
jo
enter
cmc
loop
or
jbe
xchg
mov
enter
inc
push
sub
add
xchg
dec
mov
push
push
scas
mov
xor
in
jo
fs
xchg
jo
mov
inc
addr16
push
mov
pop
mov
or
mov
int3
and
test
ss
sbb
push
cltd
dec
and
jns
out
mov
sub
bound
push
dec
and
ror
xor
add
adc
adc
add
xchg
push
js
out
mov
pusha
popa
in
pop
xchg
adc
xchg
sub
sbb
or
push
cmpsl
adc
sub
jl
add
int3
loope
ret
mov
push
xor
daa
subb
jp
pop
nop
popf
pop
dec
cli
inc
and
and
daa
lret
push
fs
xor
cs
loopne
jmp
fbld
aas
addr16
mov
ret
mov
repnz
std
add
mov
or
lret
pushf
add
mov
inc
adcb
inc
shl
hlt
loopne
gs
enter
clc
repnz
adc
je
push
inc
mov
jmp
adc
adc
or
lods
pop
mov
in
pmullw
sbb
mov
dec
push
loopne
lahf
add
shlb
les
cmp
pop
push
and
ret
sbb
and
ret
add
out
push
loopne
call
adcb
jmp
add
int3
mov
sti
push
push
scas
dec
inc
and
jp
adc
and
jo
add
das
mov
test
and
insb
test
pop
add
xchg
mov
scas
mov
dec
iret
popa
pop
inc
cmp
dec
cmp
fistps
leave
out
add
repz
xlat
cwtl
sub
inc
fbstp
enter
pop
jb
stc
rcrb
and
inc
dec
pop
push
jno
sbb
add
lret
adcb
imul
inc
aam
push
imul
test
cmpb
dec
xchg
mov
fsubs
cli
push
dec
push
cmpsb
mov
mov
dec
sub
push
pop
addb
pop
pop
adc
lock
xor
xchg
rcrb
sbb
fmull
jb
xchg
adc
xor
push
sbb
add
inc
sub
cs
adc
cmp
mov
and
jmp
or
in
cmp
xchg
loopne
pop
aas
das
insb
sub
dec
shr
stc
add
cmp
push
cmp
rclb
ljmp
inc
aam
add
movq
mov
repnz
add
pushf
xchg
aaa
sub
pop
addb
jae
add
iret
mov
jecxz
loopne
jl,pn
or
xchg
mov
sub
xchg
loop
add
push
mov
or
dec
add
cli
xchg
mov
adc
jmp
adc
push
enter
call
xchg
lahf
mov
sub
adc
add
dec
sbb
das
push
xor
mov
in
fs
popf
pop
lods
pop
adc
stc
bound
imul
xor
rcll
push
add
sbb
mov
mov
inc
inc
xor
or
imul
and
sbb
bound
xchg
dec
push
rcrb
addr16
cmpsl
les
xlat
test
cmpl
push
mov
fldl
sub
dec
mov
push
xchg
in
xor
add
or
pushf
je
clc
fldenv
mov
or
movsl
xchg
pop
dec
add
cmp
add
stc
fs
add
jns
cmp
mov
xchg
dec
in
ss
das
adc
xchg
gs
jae
add
adc
lret
cs
pusha
add
dec
xchg
dec
inc
cmpsl
or
pop
lret
sub
add
or
push
lahf
add
test
jnp
jl
mov
xchg
sub
outsb
int
lret
sub
jno
push
add
lret
inc
pop
or
aas
add
xor
mov
arpl
popa
pop
scas
push
add
add
inc
inc
pusha
inc
cmp
mov
aam
and
rorl
push
mov
aas
aad
and
inc
add
dec
adc
stos
insb
into
repnz
xorb
addr16
jmp
shlb
or
pop
push
mov
mov
push
nop
mov
ret
dec
mov
jge,pn
push
scas
pop
mov
xchg
mov
xchg
xchg
mov
add
jne
jo
jbe
dec
cmpb
dec
xlat
sbb
mov
mov
adc
inc
and
push
add
fists
push
or
cmc
int
add
cli
pop
cmpsl
pop
loopne
lret
rolb
sbb
aas
out
add
mov
add
in
sub
aad
lret
adc
xor
pop
les
pop
insl
pop
iret
daa
test
fimuls
and
jg
jge
shrb
je
loope
add
scas
xor
add
xchg
mov
int3
xor
pop
lock
pop
arpl
add
jl
sarb
es
sbb
int
xchg
xor
pop
inc
push
add
mov
ds
inc
mov
xlat
mov
nop
shl
mov
jl
cwtl
or
jne
ljmp
xor
mov
cmpsl
icebp
comiss
es
adc
jb
jb
inc
pop
and
cmp
sub
mov
outsl
lsl
test
mov
add
inc
dec
je
lahf
mov
data16
test
andb
xchg
sbb
xchg
adc
mov
stc
xchg
repnz
push
loope
xchg
sahf
je
mov
aad
jns
lods
imul
add
insl
push
lret
jbe
and
rcrb
mov
scas
jb
and
movsb
push
sahf
jp
add
jno
les
and
insb
push
xchg
sub
int
mov
aaa
jo
es
pop
xor
jl
xchg
pop
sub
jle
icebp
test
lret
add
mov
insb
in
jbe
push
push
repz
sub
test
add
sub
leave
inc
shlb
add
test
outsl
hlt
lods
mov
mov
push
add
loopne
enter
lds
dec
lcall
and
sbb
push
or
gs
mov
jbe
insl
mov
mov
mov
ljmp
xor
enter
mov
pop
stos
push
mov
add
test
nop
xchg
outsl
or
xchg
cmpsb
sub
lods
pop
nop
aam
rorl
xchg
dec
hlt
lret
jg
sub
movsb
add
mov
or
mov
or
out
cmp
shrl
dec
test
mov
dec
jno
inc
add
pop
pop
cld
adc
and
xchg
in
and
pop
repnz
xor
jns
xchg
sub
jo
fnstsw
inc
iret
xor
cmp
and
cwtl
xor
add
sub
add
sub
sarl
sub
xchg
test
mov
mov
xor
push
sarl
lods
jo
sti
add
test
movb
xor
cmp
or
stos
in
jae
push
adc
test
fmuls
orl
add
or
add
push
addb
cmp
push
dec
int
les
cmp
adc
lcall
jp
dec
and
out
sbb
mov
xor
movsl
and
sbb
or
pop
imul
testl
sub
cmpsl
jge
mov
loopne
mov
dec
add
dec
and
shlb
loopne
add
data16
add
push
insb
push
enter
data16
pop
pusha
pop
jnp
repnz
insb
andb
mov
mov
inc
nop
inc
mov
add
fcoml
fsts
adc
les
nop
bound
push
stc
and
flds
in
pop
adc
add
scas
ja
push
adc
lcall
or
or
mov
cltd
in
rclb
lret
je
mov
pop
mov
jecxz
lea
push
packuswb
pop
imulb
frstor
lea
lcall
pop
mov
hlt
and
add
int
jne
xchg
fidivl
pushf
ret
mov
cmp
cmpb
test
xchg
pop
shrb
mov
lock
mov
pop
ss
test
fstpl
add
cmp
add
iret
into
add
pop
and
jp
cmp
and
add
les
in
lods
push
add
and
add
mov
jns
adc
mov
shll
pop
add
rorl
movsl
inc
std
dec
sbb
pop
ja
lds
hlt
push
popa
call
pop
out
add
inc
mov
and
push
ficoms
jo
es
push
sbb
adc
mov
hlt
clc
push
and
iret
lret
and
add
lods
fstpt
jo
and
jno
ret
enter
movsb
ror
and
push
cmp
add
sub
push
test
inc
xor
inc
cwtl
inc
or
les
daa
mov
rep
enter
insl
xchg
xor
mov
adc
lcall
mov
add
outsb
cmp
rcrb
ret
push
pushf
rol
sti
pusha
sub
shlb
adc
push
and
or
test
add
sub
inc
sub
xor
add
mov
xchg
ds
sbb
mov
cmpps
aaa
cmpsl
lods
and
sub
add
pop
mov
jp
sub
jns
fiaddl
mov
mov
ja
inc
sarl
test
fildl
xor
dec
pop
add
mov
add
dec
jmp
popa
imull
loope
xorb
ret
sahf
lcall
xchg
data16
in
lock
xchg
lods
adc
jg
add
dec
pop
movsb
sbb
filds
mov
jl
testb
mov
and
mov
fcompl
jp
jb
pushf
rcrb
cli
or
test
js
aam
cltd
sub
add
add
push
nop
or
push
mov
fsubs
shlb
mov
add
loopne
mov
push
mov
mov
in
rcll
and
mov
mov
adc
lcall
gs
mov
jp
icebp
mull
add
mov
movsb
mov
or
cmp
xchg
add
loop
fcomps
cld
inc
cmp
enter
xchg
mov
les
and
push
xchg
addl
xchg
rcl
stos
add
in
mov
pop
dec
mov
xor
jge
shl
sbb
pop
sub
pop
push
nop
call
movsb
imul
icebp
call
sub
insb
insb
jae
add
dec
hlt
sbb
xor
test
test
adc
push
and
dec
cmpsl
mov
addl
push
aam
outsl
jle
out
add
mov
mov
add
loope
cmpsb
push
or
int
and
lret
push
aad
adc
into
xor
push
jne
js
mov
insb
int
sbb
pop
loop
add
rcrl
dec
lods
test
ljmp
xor
clc
stos
xor
js
mov
add
ret
push
lea
fwait
adc
cmpsb
imulb
insb
scas
xor
sub
mov
sets
add
inc
add
xor
xchg
dec
sti
or
pop
or
ss
mov
clc
xchg
in
cmp
mov
add
dec
ja
jmp
mov
nop
data16
sub
sbb
popf
sbbb
add
mov
jb
xor
and
push
xor
add
and
rep
sbb
mov
jo,pt
add
cmp
adc
and
or
filds
rorb
imul
sub
dec
or
xor
and
sub
inc
or
out
mov
cwtl
pop
lea
or
dec
adc
movl
sub
outsl
push
add
pop
or
js
jl
xor
ja
fisubl
xor
xor
decl
mov
sbb
stos
stc
les
mov
add
icebp
sub
loop
icebp
mov
shrl
mov
and
dec
inc
mov
cmc
xchg
lock
mov
outsl
sub
xchg
call
cli
cmp
add
fldl
cmpsl
mov
stc
scas
jge
lds
sub
rorl
pop
push
cmp
movsb
add
jg
mov
add
pop
lcall
xchg
dec
xor
pop
rorl
xlat
scas
pushf
inc
jmp
test
movsl
loope
scas
inc
add
or
jns
popf
call
dec
jne
imull
rorb
test
dec
add
mov
pop
cmpsl
scas
add
fildl
push
clc
xor
jnp
cmp
mov
add
sub
lods
mov
dec
pusha
rcrb
mov
js
jge
add
test
and
mov
cmp
loopne
dec
or
nop
xlat
in
addr16
inc
or
cmp
cwtl
nop
sbb
xchg
je
inc
rcll
insl
enter
pop
cmp
push
and
stos
outsb
and
pop
insb
popf
hlt
mov
pop
adc
adc
and
add
aaa
add
movsl
fcmovnu
fisubl
in
jl
aam
pushl
add
imul
jo
add
add
cmp
insb
test
lret
pop
sbb
popa
or
sub
inc
cmp
pusha
xor
fwait
mov
xchg
inc
inc
hlt
std
dec
add
ja
and
cmp
or
cwtl
lods
daa
insl
adc
dec
shlb
int
sub
out
iret
test
dec
dec
and
mov
xor
sub
mov
js
and
cmpl
xor
test
mov
mov
cltd
or
rolb
inc
sbb
subl
loope
inc
test
mov
mov
es
pop
add
xchg
dec
pop
movsl
jno
add
and
das
ds
pop
scas
adc
ret
iret
add
jb
xor
and
insb
rolb
in
fcoms
pushf
pushl
sub
mov
arpl
clc
iret
pushf
push
pop
ds
xor
fs
add
adc
fwait
sub
pop
adc
pushf
mov
push
sub
sub
pop
rorl
adc
mov
lock
pop
adc
push
mov
push
xor
sbb
jl
jg
add
js
clc
cmpsl
pop
jp
inc
dec
aad
sub
adc
in
add
ljmp
jecxz
imul
add
data16
pushf
mov
add
js
pop
aam
sbb
loop
nop
lea
sbb
push
test
adc
js
push
cmpb
lret
jno
ret
add
pop
add
jle
and
sub
push
xchg
mov
mov
mov
adc
pusha
jne
lods
jnp
cmc
adc
xor
and
sub
jl
enter
pop
add
in
add
push
fldt
mov
jnp
rolb
add
mov
xchg
xor
js
je
loopne
out
cld
dec
add
cmp
lock
insl
lret
loopne
xor
add
aas
shl
sbb
mov
add
mov
hlt
xor
pusha
cmp
cmp
fwait
jb
fildl
in
adc
and
data16
mov
hlt
add
mov
jne
pop
jmp
mov
xor
jb
sbb
or
lods
adc
add
outsb
or
mov
push
lods
push
adc
adc
aaa
jbe
jno
mov
mov
xlat
push
add
push
popf
xorb
cld
mov
bound
test
inc
mov
clc
xchg
popa
cmpb
mov
add
xlat
out
xor
and
imul
lock
cmp
push
stos
cs
in
movsb
inc
inc
pop
jno
scas
add
sbb
or
push
insb
xor
test
in
mov
scas
lods
pop
addr16
insb
xor
cmp
mov
jl
push
or
sbb
mov
gs
mov
lcall
rolb
mov
push
push
out
or
inc
fists
mov
fmuls
mov
mov
sub
mov
add
and
cmc
and
or
mov
cmp
adcb
lea
pop
add
mov
mov
or
push
shl
pop
nop
add
stos
or
repnz
or
push
lods
dec
scas
and
out
bound
add
mov
sbb
sbb
cld
sub
jl
or
sbbb
rol
out
jge
stc
popf
cli
inc
or
mov
inc
cs
hlt
popf
sbb
or
add
enter
push
and
fdivs
cmp
jnp
je
cmpsl
cmc
add
lds
add
push
mov
add
mov
imul
mov
add
shr
dec
mov
mov
loopne
sahf
add
add
clc
ret
add
popf
push
mov
add
test
scas
ljmp
lea
cs
push
mov
xchg
enter
dec
rcrb
add
jo
add
sub
mov
cmp
test
js
and
pop
push
stc
ret
xchg
inc
and
lds
int
add
mov
cmp
add
lret
push
push
xor
insb
add
out
add
pop
test
jle
add
cmp
push
test
nop
mov
jne
pop
arpl
cmp
pop
sub
xor
add
or
roll
push
jae
pop
jo
std
and
arpl
mov
lret
jo
lret
outsb
lcall
or
add
cwtl
mov
xor
in
stc
js
jmp
push
imul
lret
cmp
std
sbb
inc
leave
dec
add
dec
scas
sti
jnp
out
pop
add
subb
nop
jb
test
inc
ss
or
testb
inc
hlt
outsl
xor
aas
iret
ja
cmp
int3
dec
jnp
aam
sub
and
dec
pcmpgtw
dec
pop
lahf
shrb
shlb
sub
fs
adc
xchg
rcrl
pop
lcall
add
inc
inc
es
cs
xchg
nop
dec
sub
pop
mov
push
leave
arpl
mov
push
pop
int
fdivs
add
xchg
jle
shrb
and
dec
mov
add
push
push
add
or
lret
sub
xchg
jl
add
adc
cmpsl
adc
into
add
cmc
daa
dec
add
orl
movsl
add
popf
fdivl
scas
incb
jp
sbb
mov
adc
jl
sub
or
xlat
or
push
xor
jecxz
sti
inc
ljmp
add
leave
in
dec
pop
sbb
jl
mov
les
fs
push
add
mov
xor
inc
push
adc
mov
cld
add
leave
inc
mov
adc
loop
cmp
or
add
push
xlat
ret
push
loope
push
stos
add
jbe
mov
stos
pop
add
dec
divb
hlt
push
mov
push
add
mov
push
adc
add
mov
mov
mov
gs
bound
dec
xchg
nop
in
dec
ror
lcall
aas
movsw
cmp
js
mov
mul
sarb
aad
sahf
dec
mov
adc
adc
adc
sub
das
inc
mulb
mov
mov
and
fdiv
and
xor
add
fwait
and
stc
or
sbb
stos
or
jns
test
pushf
popf
add
xchg
rorb
pushf
mov
sub
js
mov
pushf
cmp
popa
add
push
inc
sub
dec
mov
cmp
inc
imul
hlt
xor
dec
sbbl
push
int3
mov
jmp
cmp
push
inc
sub
int3
and
inc
mov
inc
cmpb
jge
add
cmp
adc
push
cwtl
jnp
lods
cmpb
sahf
mov
inc
push
dec
mov
andb
mov
mov
aaa
jecxz
push
mov
stos
or
dec
jle
mov
cmc
push
cmp
add
mov
adc
in
add
add
cltd
xchg
out
mov
xchg
shll
dec
and
mov
add
sub
into
cmpsl
sahf
mov
pop
movsb
mov
pushf
cmp
xor
pop
std
andb
xchg
xchg
nop
xlat
adc
xor
lcall
mov
cmp
cmc
or
adc
and
scas
roll
stos
pop
clc
fwait
test
sahf
adc
fnstcw
lea
or
mov
ror
jl
shr
adc
insl
mov
out
add
push
and
inc
pop
mov
dec
outsb
jae
jg
jo
pop
sti
ja
pop
sub
add
cmp
insb
mov
push
pushf
add
js
inc
mov
add
adc
ljmp
cltd
push
or
xor
xchg
lods
pusha
mov
popf
add
pop
jno
mov
das
pop
imul
add
daa
cmp
sub
mov
ja
iret
mov
ret
mov
push
and
imul
test
fmull
pop
jae
cmp
jg
je
add
nop
mov
pop
add
adc
mov
mov
xchg
mov
xchg
mov
stos
push
rolb
repz
sbb
mov
imul
aam
test
cmp
pop
jp
adc
sub
enter
or
inc
mov
dec
mov
sub
icebp
and
push
mov
lret
es
cmp
hlt
aam
pop
mov
pop
aad
aaa
xchg
cmp
subb
xchg
rclb
mov
mov
inc
aam
mov
mov
add
mov
mov
dec
jae
fistl
incl
mov
lahf
rclb
sbb
pop
cmpsb
inc
inc
test
pop
mov
mov
inc
push
push
cwtl
mov
push
sub
sbb
mov
shrl
xchg
fdivr
inc
inc
push
and
pop
pop
int3
fldcw
daa
push
adc
pop
nop
mov
adc
mov
js
shr
dec
add
cltd
enter
fwait
cmpl
pop
pop
mov
jnp
pop
fisttps
std
mov
jns
adc
bswap
mov
mov
jmp
das
or
and
push
adc
dec
xorb
push
jo
arpl
stos
cmpb
adc
outsb
or
add
lcall
xor
adc
push
jne
mov
inc
lret
push
mov
mov
cltd
push
and
adc
add
push
jl
pusha
add
fsubrs
dec
lock
add
jnp
mov
jo
xchg
test
sbb
push
mov
xor
dec
mov
aaa
popl
inc
sub
inc
mov
mov
sub
std
fdivs
test
add
test
xor
add
xor
js
mov
movsl
add
add
mov
pop
pop
dec
imul
adc
mov
in
sbb
dec
add
xchg
push
cmp
mov
jnp
dec
dec
and
das
hlt
or
enter
jns
xor
mov
icebp
orl
lea
push
lock
cwtl
or
ss
mov
rolb
mov
mov
fdivrs
xchg
mov
add
lds
mov
jae
lods
loopne
das
iret
imul
add
push
sbb
inc
pop
popf
rclb
nop
xchg
ds
push
cmpsb
push
frstor
xchg
and
lds
fs
sti
cmp
test
test
adc
add
sub
mov
sub
and
xchg
sbb
ljmp
xor
add
and
pop
ret
adc
les
cmp
js
dec
insb
movsb
sub
mov
add
mov
add
enter
inc
push
loope
out
les
pop
fs
roll
je
add
nop
out
xor
xor
xor
mov
push
add
in
movb
addl
adc
je
inc
xor
xor
es
add
negl
sahf
inc
loopne
in
adc
mov
dec
cmc
mov
and
ja
add
cmp
pop
mov
mov
outsb
xor
xor
xor
data16
aas
adc
pop
je
dec
nop
mov
xchg
push
add
cwtl
lcall
jae
push
push
mov
subb
add
scas
mov
lret
add
or
mov
push
and
add
mov
or
inc
mov
scas
lock
add
push
out
outsb
adc
mov
gs
xor
std
andl
loopne
pop
inc
mov
jo
rolb
mov
clc
lods
add
dec
xchg
ror
mov
ja
stc
xor
pop
aam
adc
testl
lods
mov
jo
jle
sub
jbe
lock
and
gs
add
dec
cmp
mov
sti
add
sbb
dec
inc
in
out
and
sbb
pop
lret
lods
push
push
lock
or
in
ret
subb
pop
ja
mov
mov
loop
inc
jl
cmc
stc
add
insl
sbb
add
imul
xchg
dec
idivl
sub
fstps
adcb
add
popf
sbb
pop
or
push
add
ja
and
add
xchg
fiadds
push
cmp
lock
xor
aaa
adc
mov
pop
cmp
jg
nop
mov
sbb
mov
xlat
mov
sbb
or
fisubrs
jo
xchg
xchg
cmp
push
mov
add
or
sub
fisttpll
inc
push
mov
add
xchg
cmpb
mov
xchg
pop
sub
inc
add
lahf
out
gs
fisubrl
sbbb
add
popa
mulb
pop
adc
cmp
les
andl
xchg
insb
inc
sub
sbb
and
and
jmp
decl
and
xor
push
insb
add
int
fldcw
jecxz
into
int
das
shrb
mov
push
adc
mov
mov
and
fadds
or
test
cmp
dec
in
mov
sarb
jae
addb
inc
repnz
xor
lock
push
pop
js
test
pop
or
scas
sbb
xchg
lahf
mov
mov
sub
xor
jmp
sub
add
pop
scas
jge
cwtl
ficoms
and
mov
push
fsubl
adc
loope
or
hlt
xchg
nop
xor
push
adc
jl
es
adcl
jecxz
dec
imul
fbld
xchg
mov
jo
mov
es
add
and
insl
cli
mov
loopne
mov
add
xor
nop
xorb
xor
pop
push
cmpsl
enter
push
popa
mov
adc
in
inc
clc
out
push
addb
clc
sub
push
dec
cmp
jp
xchg
fsubs
in
mov
les
pop
stos
add
dec
mov
and
xchg
sub
sub
imul
mov
push
push
test
enter
adc
mov
xor
push
lret
pop
mov
addr16
jo
mov
xchg
ficomps
rol
fadds
adc
pop
jg
mov
dec
jae
adc
lcall
adc
add
and
inc
or
add
lds
les
adc
sbbl
fisubl
jnp
mov
leave
dec
mov
movb
sub
popa
out
push
mov
lahf
les
add
jnp
pop
test
pop
or
scas
sbb
pusha
dec
loope
popf
add
or
mov
in
pop
and
aas
loopne
loop
clc
cmp
jno
dec
xchg
rcrl
adc
ds
inc
jbe
popf
pop
cs
mov
sbb
or
push
and
out
pop
scas
sbb
mov
jnp
mov
inc
and
mov
decl
jp
ret
and
cmc
sub
dec
inc
xor
xlat
xchg
push
dec
adc
jge
lock
mov
jo
lret
aam
clc
mov
sbb
ret
mov
add
pop
adc
or
cld
and
jle
lods
in
out
sub
outsl
orb
mov
xchg
and
xchg
gs
js
mov
or
fadds
sti
mov
std
push
push
sbb
inc
ss
sbb
nop
mov
mov
movsb
xchg
mov
or
inc
loopne
rclb
mov
mov
mov
stos
shll
xor
aam
es
sbb
adc
inc
xchg
and
negl
xchg
mov
add
shlb
arpl
mov
out
cmp
xchg
inc
pop
inc
add
ja
jns
jns
jo
add
cmpxchg
add
pop
xchg
addb
adc
shlb
fimull
cwtl
adc
push
out
cmp
push
cwtl
out
jl
mov
jo
inc
add
test
push
or
pop
stos
das
aas
add
xor
adc
fisttpl
sbb
imul
out
mov
sarl
test
and
inc
add
pop
jmp
shr
into
imul
mov
loope
gs
cmp
mov
call
or
adc
mov
outsb
add
xor
sub
xor
add
mov
xor
pop
push
shll
or
push
js
or
pop
fistpll
cld
pop
mov
ret
mov
in
lock
and
lock
pop
jge
cmpl
aam
inc
lods
inc
and
sbb
adc
js
pop
inc
pop
mov
sub
jo
jge
movsb
jnp
fcomp
loopne
and
push
xchg
and
aad
push
pop
clc
jmp
pop
xchg
cmp
xchg
or
test
popa
orl
sar
add
insl
into
pop
add
mov
adc
nop
popa
pop
mov
add
cld
xchg
gs
lock
dec
pop
jno
adc
sub
xor
test
inc
fs
mov
das
cmp
in
sub
xor
rcrl
mov
out
sti
mov
sub
negb
aas
into
mov
xlat
in
xor
xchg
pop
int3
add
outsb
stos
mov
loopne
in
jno
xor
shll
sahf
or
popf
fisttps
add
repz
jo
dec
test
sarb
jmp
jecxz
sbb
xor
push
ret
add
push
mov
xchg
xor
cmp
or
jmp
and
out
push
ds
loopne
scas
pop
dec
fldenv
add
jl
xor
xchg
mov
dec
pop
addb
and
pop
out
dec
sarb
jno
add
jp
aad
push
xchg
cwtl
add
fiaddl
push
push
mov
clc
in
sbb
pop
neg
lret
or
outsl
aam
js
jecxz
push
push
mov
pop
sarb
or
mov
pushf
xlat
scas
fsub
mov
jg
push
je
lahf
es
adc
cld
adc
push
mov
clc
flds
test
pop
nop
inc
fdivr
shrb
push
jae
or
xor
mov
daa
pop
fdivrl
imul
rolb
push
call
lret
movsb
inc
fwait
je
loope
out
adc
aam
xor
rolb
mov
xchg
xchg
test
ret
xchg
push
sbbl
ror
stos
clc
psadbw
je
push
call
cmpsb
jno
sbb
dec
ss
into
leave
jecxz
xchg
add
xchg
mov
xor
divb
addl
adc
mov
call
or
add
test
nop
cmc
mov
outsl
cs
adc
add
inc
nop
bound
jne
mov
push
xor
and
pusha
and
ds
or
addb
cmp
and
dec
push
rorl
add
jmp
add
mov
lret
cltd
add
mov
push
mov
add
sahf
dec
pushf
scas
cmp
rorb
and
es
jl
movsl
push
sub
xchg
jl
dec
or
mov
inc
sub
sbb
inc
test
std
add
outsb
int3
xchg
push
sbb
mov
lahf
je
xor
mov
mov
bound
loopne
cmpsb
push
and
push
sahf
cmp
cmp
push
lcall
sub
push
push
xorl
add
dec
jp
push
and
shlb
xchg
out
fsubl
add
mov
pop
ret
xor
sub
and
add
lods
mov
je
jl
aam
push
les
and
inc
pop
flds
mov
lret
mov
aam
enter
push
jmp
push
sbb
enter
data16
lahf
xchg
je
cmc
cmp
test
mov
jnp
mov
pushf
adc
jo
cld
outsb
fildl
fdivrs
roll
insl
loop
lock
pop
mov
test
or
xchg
mov
aad
fldt
cli
dec
sbb
stos
je
add
lods
adc
push
xchg
rolb
push
filds
std
lcall
add
popa
jb
mov
mov
dec
cmp
xchg
in
leave
mov
mov
push
xchg
adc
fcoml
add
shl
sti
mov
decb
add
out
fdivs
xor
in
popf
rorb
jne
adc
inc
cli
movsb
clc
xor
leave
or
iret
add
stos
adc
push
jmp
les
add
dec
xchg
insb
sbb
es
add
or
sbb
add
nop
push
shl
and
and
and
add
dec
inc
cli
dec
push
imul
fdivrl
jne
es
jl
mov
test
add
push
loop
jno
daa
add
sbb
add
adc
xor
or
push
adcb
and
outsl
inc
fistpll
pusha
shl
test
clc
pusha
jp
lret
add
das
or
adc
add
adc
jo
insb
subb
cmc
mov
iret
add
xchg
sbb
add
cli
jl
push
jecxz
scas
fistpll
push
sti
add
cmpsb
cmp
adc
sub
inc
jne
out
or
lea
fucomip
lock
mov
dec
xor
leave
jp
jno
inc
je
in
add
popa
inc
movsb
adc
iret
mov
jnp
pop
xor
mov
and
faddl
push
sbb
cld
andl
lods
in
mov
filds
and
add
inc
sbb
add
int
mov
adc
decl
xchg
inc
shl
daa
loopne
sub
leave
mov
xchg
adc
dec
std
dec
xorb
dec
ret
jae
inc
push
sti
mov
jg
mov
loope
pop
addl
or
push
mulb
dec
rcr
shlb
rorb
push
pop
inc
sbb
cmp
jns
inc
repnz
push
mov
push
mov
push
sbb
adc
xchg
loop
out
mov
pop
mov
mov
push
enter
mov
out
xchg
movsb
jge
idiv
outsb
scas
add
inc
mov
xchg
sub
inc
push
pop
arpl
sub
lock
lds
fwait
push
pop
dec
adc
and
cmpsb
push
movsb
mov
fnsave
cs
fcoms
xchg
js
or
xor
sbb
jne
or
hlt
pusha
push
add
iret
sub
in
filds
or
nop
fcomps
mov
pop
imull
inc
shll
stos
sbb
xor
add
sbb
fs
in
sarb
or
and
dec
mov
xor
jmp
xor
in
popf
and
mov
nop
jnp
daa
xor
js
jne
and
cwtl
and
out
cs
fsubr
add
xchg
push
push
xlat
dec
cmp
adc
add
lock
mov
sti
mov
stos
pushf
or
scas
jns
cmc
xor
inc
imul
cltd
rcl
adc
outsb
xchg
lahf
mov
push
mov
sub
cmp
adc
aaa
int3
jle
mov
imul
popa
cmpsl
xchg
sub
xchg
mov
mov
dec
int3
lock
outsb
mov
cmp
in
jle
out
push
add
inc
mov
popf
adc
call
and
adcb
xlat
in
cmp
shrb
nop
xlat
enter
push
stc
xchg
loopne
mov
in
cmp
popf
mov
out
add
mov
jno
push
out
stos
push
aas
xchg
sub
adc
in
and
add
jnp
sub
xor
inc
jbe
sbb
lods
inc
dec
je
xchg
sub
lret
dec
inc
gs
adc
add
insl
push
and
adc
iret
dec
aas
sbb
add
loop
fnstcw
out
and
mul
int
dec
cmp
and
dec
cmp
cmpb
insl
inc
outsl
ss
cmc
or
test
loope
sbb
xchg
andl
hlt
dec
and
inc
ret
push
jg
or
adc
lods
mov
pusha
scas
xchg
jl
cmp
mov
add
std
scas
sub
or
ret
movsb
and
xchg
push
daa
pop
lea
loopne
dec
xchg
push
lods
add
lcall
and
outsl
jne
push
add
testl
mov
adc
jne
adc
pop
mov
adcl
dec
mov
mov
ja
add
cmp
cmp
add
mov
test
fwait
idiv
jl
mov
dec
sbb
subl
loop
add
notb
add
lea
mov
mov
fbstp
aad
fldt
xchg
sub
jg
pop
and
pop
stos
dec
in
or
sbbb
je
outsb
in
or
mov
repnz
inc
rorb
sbbb
or
inc
xchg
aad
arpl
mov
or
stos
lea
shlb
ja
aam
or
sbb
mov
inc
jns
test
aaa
jnp
add
push
int3
lods
shrb
dec
xor
lret
mov
sbb
insl
aaa
add
lret
push
clc
dec
and
mov
pop
mov
and
pop
fcmovnb
inc
jl
add
test
movsb
cmp
popa
xor
jb
fs
sub
sbb
aas
jne
mov
adc
ja
aas
pop
xor
jae,pt
aaa
in
add
xchg
loop
pop
jbe
or
and
add
pop
cmp
shrd
adc
lret
xor
imul
int3
je
cs
jae
cmpl
jmp
adc
pop
js
dec
iret
popf
aam
adc
push
jo
pusha
xor
clc
push
cmp
mov
push
pop
je
mov
enter
xchg
xchg
pusha
scas
rorb
or
dec
cmp
addl
and
call
sbb
sarb
mov
rorl
ds
add
mov
xchg
sub
les
insl
push
xor
cmp
dec
and
or
mov
inc
call
out
push
jmp
addb
pushf
loope
xchg
lret
xchg
mov
mov
sarb
pop
roll
pusha
lds
xor
lret
xlat
icebp
add
mov
enter
push
jb
adc
iret
stos
into
jp
clc
les
add
sbb
loopne
imul
mov
adc
push
sub
push
aam
test
jo
leave
adc
xchg
sbb
and
add
mov
mov
shrl
imul
mov
push
sub
fdivrs
int3
xor
xchg
push
add
cmp
icebp
shrl
jl
xchg
mov
je
neg
xorl
popf
sbb
add
daa
inc
pop
dec
les
testb
shl
mov
mov
enter
sahf
push
fstps
lea
lcall
inc
add
test
sbb
mov
adcb
fwait
jecxz
movsb
adc
jnp
mov
push
cmp
jle
das
add
add
fs
xchg
add
bnd
lock
add
sbb
fwait
sahf
loop
pop
or
ljmp
testb
xor
add
jmp
mov
ja
jl
add
inc
cmp
xchg
jne
pusha
and
cmp
jp
cwtl
add
mov
ficomps
insl
or
add
fstps
lds
add
adc
aaa
imul
bound
into
cwtl
lods
arpl
add
cld
subb
push
pop
sbb
call
inc
add
loop
movsb
sar
into
ds
cmc
add
nop
mov
dec
cmp
add
and
sub
and
loop
mov
pop
fbstp
or
mov
push
das
sub
add
inc
clc
movsb
add
into
scas
xchg
mov
dec
add
mov
out
shrl
ljmp
push
and
cmpsl
add
inc
dec
mov
roll
pop
push
xor
inc
cltd
rcll
add
dec
push
into
xor
flds
mov
push
shrb
add
jge
outsb
and
sarb
pop
add
rcrb
sahf
popf
inc
add
lods
mov
jbe
adcl
cs
pusha
repnz
push
sub
pop
orl
lods
test
add
adc
lahf
add
jno
sub
subb
mov
add
leave
fnsave
xlat
enter
mov
xchg
add
shl
cmp
addb
repnz
enter
add
inc
sahf
fsubrl
adc
or
testb
cmp
jmp
jle
push
test
ret
in
sub
jecxz
pusha
repz
out
pop
add
mov
shrl
cmp
test
bound
and
push
cltd
push
dec
push
xor
mov
jmp
setne
add
std
or
addl
loopne
notb
cmp
inc
push
pop
andl
imul
xchg
mov
mov
mov
inc
sti
and
jl
in
add
and
jle
test
icebp
mov
or
push
sti
pop
clc
loope
mov
mov
adc
out
lods
les
call
scas
ror
jns
add
cmpsb
out
inc
push
fwait
add
mov
int
test
xchg
pushf
repnz
adc
and
dec
es
pop
cltd
push
movsb
add
adc
and
stos
pop
add
je
add
push
mov
test
aaa
jmp
loope
add
mov
negb
outsb
repnz
test
test
js
dec
imul
mov
cmpb
xchg
dec
cmp
repnz
cmpsb
outsb
sbb
cmp
mov
mov
sti
mov
mov
pop
jl
pop
inc
out
jne
pop
sub
aam
clc
xchg
test
subb
xor
sbb
push
add
add
rcrl
je
add
xor
adc
add
xor
popa
dec
fiaddl
jb
pop
xlat
cwtl
insb
sub
jge
clc
xchg
xchg
jl
cli
adc
shlb
in
in
bound
mov
imul
fsubl
add
sub
xchg
loop
add
cmp
cmp
insl
mov
rorb
xchg
inc
fcoms
aad
out
repnz
push
add
pop
ret
rcr
mov
add
mov
add
xchg
icebp
add
das
jb
orl
pop
lods
in
fldl
add
idiv
shlb
add
sti
pop
in
xor
mov
and
adc
rorl
push
ds
nop
xor
jae
mov
lods
in
add
and
jnp
pop
movsb
adc
mov
inc
push
es
mov
test
out
hlt
cwtl
aas
add
xlat
jns
jg
mov
imulb
and
clc
and
mov
je
xor
add
shr
arpl
pushf
add
cmc
or
popf
add
mov
je
sbb
push
add
push
sub
les
test
lcall
fisttps
and
jo
pop
jnp
add
ss
mov
mov
in
sti
js
mov
mov
test
jle
scas
pop
and
call
push
push
dec
sub
test
inc
in
pop
lods
subl
pushf
ror
out
push
mov
sub
rolb
sahf
mov
arpl
and
fwait
and
out
cmp
or
mov
and
jge
mov
xchg
movsb
and
sarb
add
jo
add
xchg
or
testb
ljmp
lods
in
enter
xor
std
jbe
fcom
jl
sub
repnz
call
pop
lret
int3
mov
jmp
push
stc
dec
loopne
sarb
andb
daa
clc
mov
nop
lods
aam
adc
dec
jno
adc
mov
and
mov
lods
hlt
andb
mov
jnp
xor
int
sahf
fldt
mov
and
fwait
lahf
cmpsl
lret
xchg
sbb
adc
xor
leave
sub
add
xchg
je
fucomi
add
into
mov
jne
mov
xchg
add
gs
jno
test
adc
add
lds
cmp
call
repz
pushf
mov
jbe
xchg
adc
rolb
movsb
jns
mov
dec
xor
ret
stc
stos
inc
lock
lods
outsl
daa
mov
int3
jmp
add
push
mov
lods
sbb
fidivrl
js
adc
mov
test
mov
ljmp
add
jns
mov
xlat
mov
dec
xor
pop
or
popf
scas
roll
ficoml
xor
add
fcompl
and
xchg
add
pop
cmpl
andb
cwtl
and
mov
icebp
sub
mov
fwait
mov
sub
mov
sub
rcll
or
add
andb
add
xorl
jg
or
rcrb
xor
int3
and
add
dec
jb
dec
jnp
insb
cmp
test
call
fistpl
movsb
test
and
mov
jl
sub
jae
shll
xchg
daa
les
js
mov
add
xlat
add
out
push
xor
cltd
je
push
rclb
ror
into
xchg
mov
test
pop
rolb
push
add
hlt
adc
mov
enter
pushf
push
aad
add
mov
xchg
xchg
mov
adc
pop
arpl
cmpl
shlb
xor
adc
adcb
xchg
mov
subl
lock
js
sub
je
xchg
and
test
repz
and
test
and
add
or
xchg
jge
sbb
test
and
aad
or
xchg
mov
add
mov
dec
jmp
fadd
cmp
push
mov
jg
mov
or
pop
dec
mov
push
call
inc
mov
add
pop
push
inc
rorb
cmc
push
jmp
mov
cld
push
in
scas
xor
jae
push
sub
insl
cmp
add
mov
test
dec
loop
inc
push
jnp
les
popl
adc
xor
inc
and
pop
adc
jno
sub
and
add
dec
int
lahf
cmp
add
xchg
add
gs
add
jmp
scas
add
fisttps
xchg
shlb
sub
cs
xor
pxor
fs
push
sahf
push
clc
sub
push
repz
jo
in
or
cltd
test
mov
inc
push
out
adc
and
dec
ss
xor
stos
jbe
mov
loope
clc
pop
fmuls
in
push
test
adc
test
enter
ss
xchg
add
scas
jle
popf
sahf
add
or
mov
dec
pop
mov
repnz
fwait
pop
dec
add
jne
pop
cmp
fimuls
clc
mov
inc
in
aad
arpl
dec
roll
jp
jl
data16
pop
clc
sbbb
pop
mov
push
jno
ljmp
cmpl
add
dec
in
pop
icebp
iret
les
test
cmp
push
pop
mov
jmp
sbbl
pop
adc
xor
sub
pusha
and
add
adc
popf
outsl
push
out
mov
add
mov
sarl
cmp
mov
add
xor
xchg
and
jp
cmc
mov
push
std
add
idivl
mov
cmp
ret
ja
dec
setb
mov
add
and
cmp
xchg
xlat
add
dec
add
jne
fistpl
xchg
adcl
mov
lret
cmp
push
cmp
dec
sub
iret
and
cwtl
dec
call
add
sbb
lret
add
push
mov
cmc
imul
add
adc
dec
adc
pusha
mul
or
or
add
xor
inc
or
pop
add
faddp
sub
fdivrs
mov
xor
adc
jno
adcb
in
push
add
rcrl
push
in
imul
iret
xor
add
dec
sub
data16
rclb
lods
aad
add
iret
xchg
and
mov
xor
jns
push
orb
or
sbb
imul
push
dec
or
cmp
ret
aam
dec
xor
rcll
lahf
fmuls
add
test
insl
sbb
aas
mov
in
pop
clc
mov
mov
xchg
out
mov
sbb
inc
cmp
cltd
xor
sub
aam
mov
fisttpll
insb
test
mov
shlb
stos
dec
jo
fadds
push
aad
loop
sahf
jl
or
jbe
pop
fadds
lds
sbb
add
imull
add
add
pop
jg
in
and
popa
add
push
push
cmpl
fildl
loop
xchg
ret
rcrb
pop
mov
fwait
out
xchg
add
inc
ss
jo
jne
cs
test
mov
pusha
scas
leave
stc
jecxz,pn
pop
orb
inc
jo
inc
out
xor
sti
xor
je
push
out
or
jo
testl
push
in
sub
push
pop
adc
mov
or
add
lret
fadds
pusha
jp
gs
push
sbb
mov
add
popf
cmp
out
cmpsb
addr16
movsb
imul
jmp
sahf
and
rcrl
adc
cmp
les
mov
pusha
xor
jb
add
rorb
sub
add
movsl
insb
scas
jne
cmp
push
push
xchg
add
or
or
je
jne
addr16
add
cmpsl
into
jo
enter
and
sbb
pop
add
test
push
or
cli
adc
cli
mov
push
lds
push
add
pop
jecxz
aas
inc
outsl
enter
mov
cmp
faddl
hlt
add
lea
or
or
out
cwtl
jae
sub
mov
ret
stos
pop
and
or
movsb
inc
clc
cmp
dec
repnz
inc
daa
loopne
setae
nop
fsub
sbb
cmc
sti
sub
push
add
mov
idivl
add
pop
xchg
jecxz
and
stos
push
pop
movsb
test
pusha
sub
das
add
pop
or
mov
outsb
orl
fwait
lock
add
adc
cmp
or
in
add
daa
adc
inc
xor
add
lods
jne
pop
mov
dec
mov
nop
add
jecxz
out
pop
cwtl
mov
add
mov
dec
xor
add
mov
sub
test
add
data16
loop
and
js
subl
dec
nop
mov
mov
push
nop
pop
loopne
sub
mov
mov
rorl
sahf
mov
jle
aas
clc
leave
popa
adcl
xchg
movl
arpl
push
add
out
inc
clc
add
jge
aas
rcrb
stos
mov
push
push
pushf
sbb
cwtl
add
adc
cmp
add
les
sar
incb
sub
fs
adc
bound
mov
nop
add
jle
arpl
push
or
adcb
mov
sbb
test
add
pop
inc
mov
jae
cs
aam
xor
xor
xchg
add
push
sub
xor
jbe
and
cmp
mov
and
pop
add
jle
add
sub
jge
add
ja
and
mov
pusha
es
pop
rclb
dec
and
sbb
jne
es
pop
mov
or
or
adc
lods
jo
inc
adc
inc
repnz
or
push
mov
scas
inc
and
adc
stc
out
ja
push
mov
je
push
mov
fadds
inc
lret
sbb
jg
mov
cmc
add
cmp
int3
mov
mov
cltd
push
inc
xor
pop
mov
or
dec
stos
xor
add
adc
mov
loopne
push
les
scas
icebp
xor
inc
jb
out
in
add
dec
or
add
adc
jnp
aad
cwtl
outsb
ret
xor
jecxz
out
mov
xor
and
cmovns
test
and
add
mov
add
js
pop
add
lret
cmp
sbb
dec
js
add
fwait
xchg
loope
cmpsb
popa
call
mov
nop
movsb
or
mov
dec
dec
xchg
pop
andb
cwtl
mov
cltd
push
or
mov
or
add
inc
adc
sti
pop
mov
scas
mov
nop
sbb
nop
cwtl
clc
sbb
sbbb
push
pop
push
add
icebp
mov
lahf
dec
mov
loopne
cmp
fisubs
mov
sub
fcmovnb
mov
test
mov
cmpsl
movsb
xor
xchg
enter
pusha
sub
push
pusha
mov
movsl
add
out
test
mov
mov
add
jg
test
sub
pop
hlt
shr
call
inc
pop
out
outsl
add
or
or
mov
mov
mov
xlat
jmp
add
dec
or
out
and
push
movsb
lock
fs
xchg
pop
out
cs
and
xor
add
xlat
mov
ficoms
mov
push
sub
stc
jns
xchg
aad
adc
mov
std
movsl
mov
xor
fdivr
jae
cmc
fsubs
movsl
dec
dec
add
loope
and
in
sub
jbe
outsl
pushf
shl
xor
or
into
and
rorb
add
push
and
jbe
jo
inc
sbb
jae
pop
test
push
call
xchg
pop
mov
icebp
and
adc
fiadds
cmpsb
mov
add
jno
std
add
dec
inc
mov
adc
xchg
dec
enter
mov
sub
divb
pop
or
and
inc
mov
pushf
dec
xchg
orb
out
ret
jge
mov
shlb
in
ss
add
fldl
add
les
fwait
add
outsl
cs
jo
add
inc
cmp
lods
jmp
pusha
pop
jno
inc
xchg
addb
cmc
movsl
add
push
repnz
adc
jp
or
mov
loop
mov
punpcklbw
push
mov
inc
mov
sub
jle
popf
inc
pop
outsb
jg
pop
mov
ss
cltd
and
fstpl
add
out
adc
int
sub
jns
imul
push
adc
pop
mov
lock
cs
cmpsb
cmp
add
out
mov
dec
sub
sub
mov
jg
cmp
adc
or
jmp
cmp
ds
data16
add
out
or
stos
ja
mov
dec
subl
add
mov
or
or
push
js
and
jbe
in
shl
rorb
push
mov
mov
outsb
clc
nop
rclb
mov
jo
mov
push
add
sbb
dec
negl
pusha
inc
add
sbb
imul
adc
hlt
insb
push
stos
or
push
mov
or
sbb
mov
add
in
push
push
sub
add
push
add
sub
clc
cmp
mov
idivb
add
sub
aaa
incb
je
cmp
adc
das
xor
loope
sbb
test
adc
add
pop
jbe
add
out
enter
in
loopne
das
stos
jb
pushfw
arpl
cmpsl
movsb
fsubs
aam
inc
cs
sarb
add
hlt
insl
ficompl
jnp
add
inc
xor
test
xor
add
inc
movsb
pop
insb
inc
fadds
js
add
cwtl
lods
dec
mov
push
in
jl
push
sbb
xor
ret
sbb
je
lret
outsl
aaa
cmpsl
mov
jo
jo
dec
ds
push
sub
xchg
andb
ss
add
and
cmp
adc
or
in
mov
and
sbb
xchg
jmp
mov
in
add
inc
out
shll
call
push
pop
inc
mov
add
cld
add
das
pop
adc
psadbw
adc
inc
sbb
push
mov
call
cmp
add
xor
add
cwtl
sarl
mov
mov
xor
mov
aam
mov
clc
rorl
icebp
mov
call
xchg
ss
push
jo
popa
adc
adc
lahf
in
xor
sbb
in
xchg
mov
out
lods
cmp
ss
out
faddl
sbb
pop
cmc
push
inc
push
or
mov
inc
push
or
xor
xchg
loop
addb
nop
xor
adc
pop
daa
aaa
les
cmp
rorl
mov
dec
add
daa
xor
add
dec
test
xor
sbbb
inc
add
orl
daa
leave
jge
jmp
xchg
cmp
jle
sbb
sub
xor
push
fs
adc
and
xor
sahf
add
rol
neg
int3
push
pop
mov
loopne
movsb
inc
xchg
nop
and
and
mov
push
inc
jo
mov
inc
fisttps
in
pop
xchg
test
pop
or
fdivrl
les
lds
inc
inc
ss
add
or
hlt
hlt
add
or
add
scas
enter
in
and
xor
test
lahf
sti
lret
roll
inc
int3
jg
jecxz
enter
add
xor
es
xlat
call
push
dec
data16
pusha
scas
fiaddl
es
aas
cmp
or
dec
aaa
stos
js
add
rcrb
test
mov
test
sub
lock
sbbl
mov
sbb
mov
pop
xchg
push
cmp
add
int
icebp
push
and
lods
dec
shl
cld
adc
movsl
adc
xor
and
push
movb
aad
xor
aam
cmp
orl
dec
adc
pusha
jns
gs
rorb
clc
cmp
outsb
test
mov
rcr
xor
ficomps
add
mov
sti
add
popa
pop
ret
sbb
or
mov
xor
ret
sbb
dec
jbe
add
sub
mov
mov
xor
inc
out
rol
pop
lea
ret
adc
xchg
or
mov
cmp
xchg
and
or
adc
dec
shll
test
add
or
adc
mov
push
jl
cli
mov
xchg
repz
pop
and
test
repnz
and
aas
fwait
push
ja
clc
in
push
stc
js
stos
jne
add
incl
add
in
or
movnti
or
test
jl
nop
es
pop
loop
inc
mov
sbb
repz
xor
add
sbb
in
jno
add
arpl
pause
cwtl
imul
addb
call
enter
adc
inc
push
sbb
xor
xchg
add
es
gs
inc
xor
cmp
push
je
pusha
and
adc
add
mov
lock
shll
fldl
mov
in
lret
xchg
insl
cmp
xor
mov
cmp
sbbl
clc
add
or
into
stos
jo
test
dec
pop
add
rcrb
ja
add
repz
jbe
sti
mov
aaa
outsl
jge
mov
mov
adc
inc
sub
adc
add
pop
pop
cwtl
add
icebp
pop
out
cli
pop
pop
rcrl
push
hlt
lcall
leave
roll
add
addb
pop
adc
in
pusha
xchg
sbb
out
push
lds
cwtl
sbbb
aad
sub
pop
push
fisttpll
dec
pop
js
or
pop
std
outsb
sbb
add
orl
push
and
in
fiadds
adc
xor
shlb
inc
add
push
je
in
leave
and
sbb
divb
inc
stos
movsb
sbb
add
mov
adc
mov
cmpsb
stc
cmp
sbb
jl
xchg
aam
push
sub
sbb
push
sbb
pop
je
push
insb
in
push
cmovl
mov
adc
cmpsb
mov
rcrb
jne
addb
aaa
shrb
cwtl
cld
dec
add
sahf
pop
fdivrl
test
lock
bound
bound
and
movsb
xchg
subl
sub
cwtl
cmp
pop
leave
or
cmp
and
iret
add
mov
mul
cmp
xor
or
adcb
lea
negl
loopne
lret
add
in
cmp
fldenv
and
in
mov
xor
in
xor
sub
mov
xchg
add
pop
and
test
dec
dec
movsl
mov
pcmpgtb
mov
and
mov
pushf
pop
rol
stos
sub
mov
stos
xor
inc
cs
push
sbb
insl
add
jno
or
lock
push
push
dec
cmp
shll
pop
pop
or
xor
cmp
xor
jae
push
dec
and
inc
mov
add
pop
imulb
jbe
push
add
cltd
push
movsb
mov
mov
std
sub
pushf
jbe
sbb
inc
andl
fwait
jp
arpl
sbb
aas
cmpsl
dec
push
lahf
mov
add
movsl
in
and
ret
sub
and
fisubs
push
lcall
sarl
cld
cmpb
hlt
adc
mov
xchg
mov
cmp
inc
push
ret
xor
push
push
ljmp
push
fildll
mov
push
inc
cld
fwait
mov
lcall
cld
daa
repnz
mov
das
add
dec
dec
mov
ja
xor
or
pop
ds
and
rcr
test
cs
inc
lahf
insb
add
xor
mov
nop
and
xchg
add
jp
dec
adc
add
repz
sbb
sub
testb
pusha
sbb
arpl
cmp
js
xor
xor
mov
xchg
adc
ja
cld
sbbl
push
rorl
lods
sub
or
in
call
dec
cmp
pop
dec
insl
or
pop
cmp
stos
sbb
pop
addb
inc
mov
add
xchg
call
jno
je
movsl
mov
or
mov
ja
lock
pop
pop
dec
inc
inc
aam
xorb
add
xor
stos
inc
add
push
dec
dec
ret
inc
add
mov
mov
subl
mov
lcall
push
sbb
inc
leave
add
inc
loope
add
inc
rorl
adc
pop
jecxz
fistl
or
aam
mov
test
ret
es
adcl
push
add
mov
shrb
or
inc
idiv
jbe
and
nop
add
cmp
inc
push
pop
fwait
mov
push
lret
subl
push
test
push
and
jbe
loopne
add
cmpsl
mov
mov
adc
jns
repnz
cmpsb
xor
pop
jmp
mov
sti
shll
lds
rorl
mov
mov
inc
hlt
and
cmovo
adc
xchg
mov
sarl
pop
inc
mov
jb
inc
jle
cmp
dec
cltd
pop
push
push
mov
mov
inc
lcall
ljmp
repz
add
jae
pop
and
and
imul
stos
pop
mov
loopne
and
push
mov
call
and
add
outsl
les
inc
lahf
dec
fdivrs
call
jge
cmp
fldl
dec
rclb
add
push
mov
cwtl
xchg
rolb
xchg
jo
add
or
sub
pop
pusha
xchg
mov
add
pop
shlb
add
lods
mov
cmp
je
nop
jnp
sub
daa
pusha
xorl
jecxz
add
jge
push
enter
lock
sbb
loope
inc
or
inc
jo
mov
mov
add
ret
inc
test
jo
add
sbb
lcall
add
xor
rorb
adcb
push
inc
incb
ss
lahf
js
fcomip
cmp
mov
inc
add
rcrl
cmp
lock
add
mov
cltd
je
call
popf
xor
mov
out
push
mov
jae
and
arpl
mov
xlat
pop
mov
jbe
jle
repnz
imul
aam
push
mov
push
mov
mov
pop
mov
jo
cmpsb
xor
gs
adc
js
inc
sub
add
fs
jb
jmp
adc
std
and
push
mov
in
mov
sub
int3
inc
pop
mov
gs
popf
xchg
pop
cmp
pop
xor
cmp
enter
add
fsubrs
or
add
dec
jmp
movsb
pop
in
sahf
cmp
xchg
jg
mov
cmpsb
roll
xchg
ffreep
and
out
mov
pop
push
sbb
outsl
or
jae
push
mov
rorb
fs
icebp
out
or
lcall
rolb
dec
std
add
leave
xchg
mov
rorl
mov
ljmp
scas
cs
cmp
stos
add
stos
xchg
jmp
jecxz
shlb
push
stos
clc
fdivl
popf
mov
test
lret
dec
add
push
ret
sbbl
xchg
add
and
fwait
xchg
enter
lds
mov
jb
add
gs
xor
adc
mov
jp
insl
add
xchg
inc
scas
push
jmp
out
mov
jecxz
mov
fstp
cmp
popf
add
test
push
cmp
call
xor
movsb
sub
xchg
or
sub
cltd
in
adc
popf
adc
xchg
add
scas
je
or
sarl
add
mov
pushf
les
dec
pop
shrl
xchg
js
add
sub
test
sbb
mov
rol
jns
movsb
fwait
push
and
add
shl
xchg
dec
cltd
jns
xor
pop
shlb
insl
rcll
dec
lahf
adc
hlt
xchg
mov
decb
ljmp
dec
leave
pop
push
stos
pop
iret
lods
rcrl
in
add
inc
xor
push
add
fistpl
faddl
cwtl
movsl
pop
test
in
add
fwait
xchg
mov
adc
push
xor
dec
scas
add
push
outsl
mov
lcall
enter
test
shr
stos
mov
add
repz
cmp
rcll
in
mov
xor
adcb
add
pop
mov
lahf
add
pop
and
xor
lods
stos
add
mov
clc
test
sbb
or
cmp
inc
in
bound
scas
sub
xchg
xor
push
cmp
sub
or
mov
imul
mov
shlb
shr
mov
shll
inc
clc
mov
mov
push
sbb
mov
sbb
lcall
inc
out
bound
sub
cvtpi2ps
enter
add
and
cmpsb
mov
cs
mov
popa
cmp
aas
sub
pop
adc
mov
les
add
cmpsb
jo
jge
mov
jne
repz
sti
xchg
xor
pop
icebp
add
aam
int3
fstps
mov
mov
outsl
lock
inc
stos
enter
test
in
inc
jae
hlt
mov
mov
xchg
jb
push
movsb
test
int3
jp
cld
xchg
mov
cmp
shll
jno
es
and
or
pop
adc
lds
xor
mov
shrl
shll
mov
or
cmp
call
cmp
sarb
sub
mov
movsb
mov
xor
cs
jnp
sub
insl
mov
inc
or
inc
adc
cwtl
push
jl
sarl
dec
hlt
pusha
add
mov
add
js
dec
test
or
push
imul
cmp
arpl
jge
pop
sub
and
jl
push
or
mov
mov
mov
xor
xor
fchs
clc
adc
adc
push
mov
mov
popf
rolb
add
cmp
dec
jl
cs
add
loopne
or
ret
sub
jp
sub
in
or
pop
shll
jmp
mov
adc
lea
fldt
adc
lahf
popa
les
add
cmpsl
push
adc
jae
add
out
dec
movsl
add
mov
mov
pushf
xchg
sub
sub
push
in
fistps
test
arpl
pop
scas
add
shl
fnstcw
movl
ja
dec
and
add
aas
or
test
subl
ljmp
xorb
pop
pop
jns
push
call
cwtl
and
push
sub
lret
fmull
and
cmpsb
and
add
lcall
loope
add
inc
mov
fwait
xor
or
push
pop
addb
pop
xorl
nop
pop
mov
add
movsb
fstp
or
jns
call
in
mov
dec
mov
pop
xorl
cs
add
mov
add
push
xchg
cmp
fs
push
add
push
sbb
daa
pusha
push
loopne
xlat
push
xchg
pop
pop
hlt
adc
sub
test
popa
rolb
xor
cmc
sbbb
xor
dec
add
ja
ret
call
inc
cmpsb
out
push
arpl
rcrb
imul
add
sbb
rol
add
imul
mov
test
rolb
mov
or
and
lret
dec
add
sbb
cwtl
mov
xchg
xor
mov
cmp
rcr
dec
or
mov
in
jg
sub
adc
test
xchg
cmp
mov
add
mov
les
xchg
shr
inc
or
fldl
xor
out
add
out
ret
int3
add
loope
cmp
cs
jle
js
or
sub
jno
add
into
add
pop
cmpsl
mov
popf
out
addb
or
sbb
pop
sbb
or
data16
jb
mov
and
xor
mov
add
fld
aam
sbb
xor
add
mov
fmull
mov
movsb
pop
mov
sub
ficoml
push
je
data16
aas
adc
add
jno
jbe
orb
clc
mov
nop
sbb
sub
jecxz
or
sti
mov
jmp
lcall
and
add
cmp
xor
add
fwait
mov
and
ret
add
or
jae
and
sub
loopne
or
xchg
cmp
inc
xor
mov
sbbl
mov
sbb
dec
mov
cmp
test
xchg
test
inc
inc
mov
lcall
fwait
adc
sub
stc
mov
add
inc
cmp
imul
add
into
loopne
mov
pop
jmp
mov
decb
add
mov
cmp
jne
dec
pop
add
pusha
je
add
push
mov
push
stos
add
jb
mov
lds
mov
push
cmp
movsb
mov
repnz
cwtl
add
shl
cmpsl
popf
adc
ss
lock
sub
inc
sub
xchg
pushf
rcrb
xor
dec
mov
add
das
pop
push
or
and
ljmp
dec
scas
or
xlat
push
mov
add
xor
sbb
xor
js
andb
adc
add
shrl
je
add
xchg
lds
mov
divb
cmp
inc
mov
rcll
cli
inc
pop
mov
mov
loop
mov
mov
xor
sbbl
add
push
cmpsb
orb
xchg
scas
lret
aas
inc
jmp
cmpsl
inc
call
inc
mov
aam
jmp
and
ds
incb
inc
dec
jp
push
ret
mov
add
add
xor
dec
insb
loope
add
jmp
and
mov
insb
jo
mov
add
aaa
sbb
dec
add
cmp
out
jb
cmp
popf
es
cmp
dec
mov
push
cmpb
jo
nop
sbb
aas
pop
cltd
dec
mov
data16
jmp
add
leave
cld
out
pop
sbb
rol
inc
jae
and
dec
sbb
mov
jb
push
dec
push
and
xor
adc
or
jl
daa
push
mulb
sub
stos
adc
fsubl
inc
movsb
js
or
lds
cmp
nop
xchg
xchg
add
movsl
popf
mov
ret
out
popa
adc
dec
add
xor
add
fmull
push
cmp
push
add
idivb
sub
mov
mov
cmp
jle
in
adc
and
adc
js
xor
mov
add
push
clc
add
insl
fmul
sub
in
stos
or
adc
cmp
push
mov
movsb
daa
push
or
test
inc
mov
dec
jbe
mov
inc
adc
cmp
mov
and
push
mov
push
xchg
lcall
pusha
clc
hlt
mov
mov
mov
add
mov
daa
iret
es
loopne
pop
pop
pop
mov
sub
xor
inc
popa
push
shlb
pop
sub
push
pop
leave
pop
or
dec
pop
inc
fmul
xchg
loopne
jb
inc
addb
cwtl
testb
or
clc
cli
jno
pop
sub
fadd
pusha
and
adc
pop
and
popa
sub
and
pop
pop
enter
out
scas
pop
inc
ficoml
sub
lds
inc
loop
dec
mov
arpl
and
or
adc
js
pop
stc
pop
and
or
sarl
cwtl
and
lcall
mov
add
lock
adc
mov
adc
aam
inc
dec
insl
sahf
dec
incb
lea
mov
push
cmp
jae
jle
pop
xchg
test
rcrb
and
pop
pop
aad
aaa
and
or
pop
dec
jmp
rolb
add
xchg
pusha
aam
outsb
push
cltd
or
xchg
or
aaa
mov
shrl
mov
icebp
imul
js
push
fbstp
cmp
fdivrl
add
mov
cmp
dec
pop
jo
or
inc
test
jl
pop
cltd
mov
jp
mov
mov
add
inc
fs
bound
mov
daa
fisubrl
outsl
fadd
sub
out
mov
inc
inc
outsl
roll
push
sbb
sub
aad
xor
sub
cmp
add
and
fstps
pop
push
xchg
jl
subl
fistl
add
fbld
nop
pushf
push
ret
cs
xchg
enter
int3
pop
std
es
lods
loopne
add
xor
mov
xchg
stos
adc
mov
xchg
add
lods
mov
mov
or
in
pop
in
add
orb
repnz
pushf
imul
or
cltd
test
cmp
sahf
mov
or
daa
sub
sbbl
adc
xchg
and
xchg
pop
add
xchg
lcall
pop
pop
inc
test
andl
sbb
adc
and
add
xlat
xor
add
in
arpl
add
push
xchg
jnp
pop
add
repnz
add
and
fildll
fsubrp
sahf
xor
pushf
dec
movsb
add
adc
cwtl
mov
or
mov
pop
inc
sub
addb
sti
ja
enter
divl
sub
fdivrs
xchg
add
pop
lcall
cli
orb
xchg
data16
jbe
cltd
pop
sbb
and
mov
imul
sbb
xchg
push
rcrl
xchg
int3
inc
cmpsb
pusha
sub
ja
pop
es
and
nop
lea
xor
cltd
clc
inc
sbb
fadds
xor
pop
shlb
call
mov
lcall
outsl
dec
xor
or
scas
and
mov
rcr
jns
add
into
jo
jecxz
pop
jle
mov
mov
push
clc
add
pop
xchg
shrb
dec
test
adc
mov
test
mov
and
pop
mov
xor
rol
scas
aaa
sub
jp
and
stc
dec
sahf
adc
mov
test
xchg
rclb
sar
add
inc
test
out
adc
sbb
idiv
xchg
mov
dec
in
add
lret
das
cmpb
out
dec
dec
and
xchg
mov
es
aas
mov
mov
jp
sahf
int3
add
loope,pn
test
addr16
call
loop
cmpb
iret
mov
inc
ja
sub
icebp
or
fisttpl
mov
mov
fsubr
mov
xor
xchg
mov
cs
fdivrs
add
and
push
fadds
in
push
mov
dec
lods
add
dec
cmpsl
popf
xor
es
sub
pop
movl
pop
mov
shlb
out
out
pop
test
xchg
mov
mov
sbb
jne
inc
jle
arpl
jge
scas
add
mov
lock
jbe
ret
add
push
push
jnp
push
dec
into
out
mov
inc
in
popa
add
rcr
mov
dec
mov
or
in
inc
sub
hlt
cmpsl
add
outsb
xchg
push
pop
cmp
lds
xor
psubsb
cmp
js
js
push
int3
lock
inc
and
sub
sub
mov
shlb
sbb
aas
gs
add
test
addl
inc
js
jmp
xchg
inc
push
sub
sbb
xlat
sbb
arpl
mov
notb
dec
mov
xchg
dec
movsb
shlb
xor
sub
fs
jmp
pop
mov
and
xor
sub
and
inc
xchg
ret
insb
or
rorl
clc
sub
in
add
jo
jae
cli
shrb
mov
adc
adc
xor
stc
or
and
mov
adc
andb
cmp
scas
fisttpll
mov
lock
pop
mov
sub
mov
lds
cmpsb
lcall
pop
into
jb
or
dec
xchg
sub
dec
roll
sub
xchg
xchg
xor
test
pop
fcmovnb
movsl
stc
es
mov
inc
jae
xchg
sub
xchg
lods
clc
xchg
pop
dec
xchg
fdivr
sub
or
pushf
cmpsb
jnp
jno
add
repnz
push
pop
cmp
mov
adc
pop
sarb
and
add
xchg
mov
add
call
xor
mov
mov
arpl
ret
shr
inc
daa
mov
loopne
sub
roll
xor
nop
stos
mov
inc
out
sar
xchg
pop
dec
cs
adc
pusha
ret
fsubr
or
dec
sbb
adcb
lcall
push
push
iret
ret
xchg
inc
mov
loopne
mov
xchg
push
ret
clc
lods
adc
lods
jbe
aad
loopne
dec
mov
and
test
mov
jo
or
insl
and
iret
sub
mov
loope
ret
add
jnp
mov
cmpb
mov
and
out
cs
sub
adc
lods
in
psraw
cmp
mov
pop
jne
add
jl
mov
fdivs
jo
pop
rep
add
out
mov
mov
and
inc
ljmp
xchg
add
les
pop
inc
pop
fisubl
repz
arpl
neg
repnz
dec
hlt
add
push
xchg
jecxz,pn
xor
movsl
pusha
test
sub
aad
aam
jle
orb
lea
cmpb
scas
in
add
jb
adc
mov
add
mov
insl
cmp
mov
out
cld
add
fisubs
mov
xchg
xor
push
pusha
hlt
jmp
aam
adc
out
add
or
cmpl
popa
dec
xor
test
or
enter
fildl
loope
shll
in
and
push
sub
mov
mov
and
cmp
cmp
add
arpl
jns
add
rcrl
add
push
and
fcompl
js
mov
pop
stc
cmp
inc
test
addb
jle
inc
leave
dec
mov
mov
dec
dec
adc
cmp
subb
and
in
lcall
lods
or
cmp
mov
push
pop
mov
xchg
insb
add
add
inc
lods
mov
sahf
int3
adc
jae
les
enter
mov
xchg
popf
outsb
add
inc
adc
xchg
shl
cmp
mov
inc
push
cmp
shrl
or
and
orl
fnstenv
xor
dec
mov
sub
test
push
sub
es
insl
sbb
dec
mov
mov
shlb
bound
dec
xor
push
pop
imul
sub
ret
enter
sub
mov
movsb
xchg
mov
xor
mov
inc
sahf
and
rcll
add
mov
leave
out
pusha
stc
jb
mov
pop
xchg
enter
pop
xchg
xchg
add
lock
dec
push
mov
jb
sbb
mov
dec
sbb
data16
pushf
es
sbb
pop
cltd
adc
in
out
pop
adcb
movsb
add
push
cmp
and
sub
inc
insl
sub
and
in
imul
xor
push
insl
out
scas
mov
pusha
add
test
repz
fbstp
add
fcomps
aas
roll
mov
sub
stos
xor
xchg
cmp
test
fnsave
adc
add
addb
adc
xchg
xchg
dec
adc
ss
cmp
lcall
enter
stos
mov
rcrb
mov
test
mov
cmp
hlt
loopne
scas
clc
and
inc
fcmovnbe
push
pop
adc
mov
mov
arpl
out
dec
jnp
mov
add
in
or
fs
and
push
imul
and
mov
aad
jo
add
push
inc
sub
and
mov
je
mov
mov
fs
add
push
ja
stos
inc
or
cwtl
cmp
mov
sbb
xchg
loopne
inc
push
mov
sbb
out
mov
pop
out
cmp
and
pop
and
je
add
adc
fadds
movsb
orl
in
sahf
pop
movsb
mov
jbe
sub
push
add
mov
test
lock
pushf
out
cli
outsl
sbb
movsl
add
and
xchg
push
or
jl
xor
cwtl
cmp
mov
ljmp
es
addb
inc
fisubl
dec
call
mov
add
outsb
aad
mov
add
add
lahf
fsincos
sub
mov
mov
dec
push
inc
stc
int3
cmp
idivl
leave
movd
or
push
movsl
stos
dec
loope,pn
cmp
jne
adc
in
loopne
add
push
mov
add
or
inc
adc
xlat
pop
nop
and
xor
int3
les
loopne
add
dec
lret
inc
or
dec
movsb
movsl
bound
inc
negb
mov
mov
sub
out
pop
add
add
js
scas
cmp
shrl
enter
test
sub
sbb
or
dec
xor
cmp
jns
and
and
pop
or
in
xchg
imul
daa
mov
loopne
xchg
and
stos
push
dec
cmp
mov
notb
adc
mov
or
dec
cmp
pop
es
add
cmpsl
sti
pop
js
mov
inc
xchg
dec
jecxz
add
in
xchg
jge
mov
js
or
or
rcr
push
sub
cmpsl
stos
xor
cmp
inc
push
jno
loope
jnp
or
in
scas
pop
mov
add
fdivs
add
add
aam
mov
push
sub
cmp
jg
js
push
in
or
pop
add
inc
lods
add
in
mov
mov
jno
xor
test
fldl
or
sub
push
xchg
mov
leave
stos
add
inc
pop
push
fisubs
int3
out
push
pop
and
jo
mov
fdivrs
ror
mov
and
jmp
shlb
lods
nop
or
sbb
xchg
addb
leave
cmp
adc
lock
add
mov
inc
bound
addr16
pmulhuw
add
lods
test
bound
and
stos
add
repnz
mov
adc
pop
mov
and
fsubl
pop
test
xchg
xor
jns
subl
scas
outsl
or
fwait
mov
inc
dec
sub
push
pop
adc
inc
xchg
xchg
add
rolb
add
into
cmp
inc
inc
adc
sub
repz
jle
pusha
jg
inc
jbe
sbb
lret
pop
push
cmp
stos
ja
lods
imulb
sub
shll
fnsetpm(287
cmp
lcall
push
mov
shrb
add
add
pop
mov
jns
jmp
dec
add
pop
mov
ret
dec
push
shlb
xchg
mov
cltd
add
jne
ret
sbb
stos
pop
pop
stc
outsl
jne
and
insb
lahf
sbb
ljmp
movsb
adc
mov
mov
dec
mov
mov
daa
push
sti
inc
js
xor
aas
shll
or
jp
out
xor
mull
fisttps
push
fs
jge
scas
pushf
dec
iret
mov
dec
inc
mov
fsubs
push
sbb
push
dec
or
fdivrs
mov
ljmp
sub
sub
dec
xor
xor
cli
ret
push
pop
lods
push
je
sbb
fistpl
mov
mov
jae
movsb
xor
inc
fsubrs
adc
cmpl
xor
or
add
inc
mov
les
cs
adc
imul
pop
fwait
add
xchg
shll
lock
sub
mov
cltd
mov
scas
lahf
add
in
stc
sub
insb
pop
push
pusha
orb
jl
inc
cmp
dec
jb
adc
sbb
cmp
mov
inc
cmp
or
pop
mov
loop
in
push
jae
inc
pop
add
inc
das
iret
leave
and
stc
hlt
in
dec
dec
jb
and
hlt
adc
aad
add
adc
inc
outsb
ret
std
pop
stos
fmuls
add
jb
fistpl
loope
inc
mov
daa
sub
adc
outsb
shll
inc
scas
mov
popf
out
sub
sahf
pusha
mov
adc
ficoml
add
adcl
je
and
xor
pop
inc
mov
clc
sbbb
leave
fwait
pmullw
adc
ljmp
xchg
mov
fadds
push
adc
xchg
loop
inc
jne
jb
xchg
push
mov
pusha
arpl
icebp
adc
xor
adc
fsubs
xor
sbb
mov
add
sarb
je
in
js
add
scas
rolb
lods
leave
mov
test
or
sbb
adc
cmpsl
test
cmp
mulb
mov
dec
rcrl
aas
test
add
ret
ret
or
stc
xchg
inc
dec
cmp
in
xchg
rol
xchg
or
cs
test
xchg
jne
sub
int3
or
fptan
add
inc
xor
inc
bound
inc
and
fistl
adc
or
xor
inc
js
sub
cld
add
lds
jne
rcr
pop
push
jo
push
pop
rclb
sbb
sub
inc
out
aas
subb
pop
das
arpl
call
shrl
cld
push
add
jecxz
gs
fs
aam
ret
and
pusha
movsl
jno
push
inc
scas
add
js
hlt
jb
scas
and
imul
push
mov
mov
or
scas
jae
adc
xchg
mov
nop
je
les
shl
lock
mov
push
and
cmp
mov
adcb
in
bound
mov
je
insb
push
fcomps
or
cld
cmp
add
stc
xchg
shr
jnp
pusha
sbbb
rcl
adc
fbstp
xchg
adc
pop
xchg
adc
ror
lret
push
sbb
imul
xor
mov
jmp
ret
jo
js
dec
mov
push
lods
and
data16
filds
sbb
add
inc
adc
xchg
cltd
add
push
pop
in
or
arpl
push
inc
adc
repz
sbb
xor
add
mov
pop
mov
xlat
and
jl
sarb
das
hlt
pop
add
ret
and
mov
fldlg2
cltd
sahf
mov
or
ds
stos
fimull
hlt
bound
out
mov
js
pop
in
dec
dec
mov
insb
add
add
jmp
lock
sub
adc
std
dec
mov
imul
loope
clc
adc
out
jnp,pt
sahf
rorl
cltd
jns
daa
popf
push
adc
arpl
jbe
enter
xchg
jns
fs
sbb
dec
add
pop
xchg
and
sbb
xchg
inc
jb
and
or
push
mov
lock
or
imul
loopne
jb
or
add
add
add
mov
push
mov
adc
dec
sbb
shlb
add
mov
xchg
psubusb
daa
jb
xchg
nop
dec
cmc
jbe
xor
mov
or
out
mov
and
mov
gs
cmpsl
jns
add
or
add
sub
hlt
xchg
pop
rorl
jg
add
subb
mov
mov
ja
addb
mov
sub
orb
dec
mov
or
cltd
cmpsl
adc
fidivl
pusha
pop
adc
test
hlt
fisubrs
js
mov
adc
pusha
push
or
cmp
push
sbb
lock
push
add
sbb
ret
andl
das
clc
add
xor
pusha
and
cmp
adc
fisubl
cmp
push
add
out
shrb
push
imul
jp
imul
sbb
jg
and
cli
mov
xor
dec
xor
mov
add
in
ljmp
out
add
mov
cld
repnz
mov
xor
or
cmp
lahf
cwtl
or
or
xor
in
add
push
adc
push
lods
push
jmp
pop
jge
das
je
fadds
out
mov
xlat
add
and
mov
lods
push
dec
xchg
aam
push
test
add
push
fs
jp
or
sub
sub
and
cs
in
faddp
push
rcrl
clc
xchg
add
xlat
jo
cmp
dec
addb
and
test
shrl
and
cwtl
cwtl
adc
data16
lock
jo
mov
dec
leave
mov
insb
cltd
lock
dec
lods
fwait
jae
mov
andl
adc
mov
sub
or
icebp
je
roll
inc
add
mov
test
mov
jns
inc
pop
and
sub
pop
inc
xor
pop
aas
add
mov
jae
sub
sub
cmpb
push
lds
sahf
xor
dec
les
ljmp
add
cmp
add
fisubl
les
push
in
xor
cltd
pushf
sbb
add
and
jo
or
cmpsb
shrl
add
dec
push
and
pop
sub
add
and
pop
insb
add
mov
outsb
aam
mov
in
ret
jb
jnp
add
das
xchg
lcall
sub
popa
sbb
xor
sub
push
push
jle
adc
pop
lods
test
xchg
push
test
add
fnstcw
jo
loopne
push
fistpl
add
xchg
add
mov
add
stos
arpl
popa
mov
dec
push
add
in
adc
cmpsl
and
mov
and
popa
or
and
lods
lods
xchg
out
sbb
mov
xor
ret
jne
add
and
mov
mov
push
dec
and
add
pop
mov
pop
inc
or
xor
mov
lcall
jnp
add
aas
dec
add
dec
loop,pt
mov
mov
inc
cld
mov
jnp
xorb
inc
xchg
cmpsl
mov
xor
lret
mov
adc
and
inc
shr
and
xor
add
aas
dec
arpl
insl
fucompp
adc
sub
mov
pop
aam
test
jp
push
jo
out
dec
inc
dec
add
testl
lea
and
adc
push
add
stos
mov
adc
jb
pop
and
shlb
add
inc
scas
add
pushf
sbb
xchg
xchg
outsb
rolb
push
imulb
fdivrl
xchg
int3
dec
add
cmp
xchg
push
movsb
sbb
mov
pop
mov
xchg
push
test
nop
mov
in
in
xrelease
out
js
or
jb
aad
cmp
xchg
mov
dec
push
add
fcoms
push
adc
xchg
nop
addb
dec
xchg
pop
subl
stos
mov
sbb
lock
sub
shlb
mov
adcb
out
mov
movsl
ret
add
aaa
in
sub
scas
jno
ljmp
pop
push
aad
adc
mov
inc
add
dec
jb
inc
stc
test
fidivrl
shl
or
leave
xchg
jns
push
sbb
pushf
fnstcw
pop
loopne
cmc
out
push
and
repz
push
push
cmp
inc
adc
lock
jo
sbb
repnz
lea
je
push
in
daa
xor
jl
orb
sbb
and
jbe
movsl
mov
cld
scas
mov
ror
add
cmp
push
js
or
xchg
mov
inc
jb
in
jmp
mov
mov
fistps
jl
fsubrs
jecxz
or
and
pop
xorl
xlat
push
cmp
scas
sub
sbbb
jmp
push
leave
rcrl
std
loope
mov
insb
jno
nop
scas
inc
push
or
inc
inc
imul
popa
bswap
je
outsb
mov
imul
push
xchg
push
sarb
mov
lea
fnsave
jb
test
pusha
sbb
pop
inc
sub
add
and
in
push
in
add
push
enter
xor
into
or
cmp
sbb
js
test
sub
cmp
test
add
insl
sti
jl
cmc
jnp
dec
int
loopne
loope
jg
push
push
sbb
out
jge
add
xchg
out
dec
js
add
jmp
test
add
es
mov
jb
push
subl
repnz
cld
sub
mov
inc
cmp
andb
psllw
jmp
sub
mov
jg
mov
jecxz
push
bts
shl
add
mov
insb
test
add
cmp
add
xlat
jb
mov
xchg
push
sbb
cwtl
mov
or
andb
add
push
adc
push
test
add
scas
aas
and
pop
add
ficoms
popf
cmpsb
cmp
mov
scas
sahf
and
add
je
cmp
data16
out
fisttpll
or
popf
inc
lahf
or
mov
into
inc
scas
add
aad
xor
pop
cld
add
mov
faddp
xchg
add
jg
nop
dec
xchg
mov
adc
sarl
or
xchg
cwtl
pop
add
lea
pop
and
inc
pusha
cli
add
inc
roll
cmp
addl
mov
add
add
test
pop
jge
xchg
fldl
shll
sti
loope
addr16
mov
sub
mov
push
nop
enter
cmp
movsl
jb
hlt
cmpsb
add
push
push
add
fistps
ljmp
cmp
addb
jmp
test
xchg
add
cmp
jmp
add
sbb
cmpsb
mov
dec
aad
repz
nop
out
jge
and
lret
push
push
adc
mov
sub
loopne
lods
pop
add
scas
stos
icebp
das
xlat
roll
test
mov
lock
pop
and
lock
mov
andb
lea
stc
nop
jno
mov
shlb
add
push
cli
orl
add
clc
sbb
inc
ds
cmp
inc
scas
push
inc
cmp
fucom
cmp
test
lods
pop
sbb
adc
ffreep
or
jg
loope
cmp
sbb
arpl
and
add
jae
js
cmpsb
push
dec
in
sub
push
xlat
daa
fst
pop
add
and
cmovl
fiadds
aaa
push
sub
mov
stc
pop
std
sbb
push
subb
add
sbb
mov
dec
rcrb
rol
jnp
mov
cld
jle
or
xor
xor
cmp
aam
mov
paddd
fs
and
inc
insl
inc
iret
call
movsl
xor
jnp
sub
in
imul
add
out
rclb
sbb
into
popl
enter
jle
add
addl
cmpsl
rcl
dec
mov
add
push
xor
xor
clc
sub
jmp
xchg
test
add
pop
das
stc
add
idivl
cmc
and
add
js
lea
lock
inc
je
addb
repz
push
fsubrp
xchg
sub
arpl
or
orl
daa
pop
adc
jb
add
sub
test
movsb
adc
push
cs
clc
jbe
add
jle
jno
add
cmp
mov
or
in
leave
xor
mov
std
cmc
add
lret
stos
dec
rcl
push
ffree
adcl
test
push
pop
cmpsl
stos
add
das
or
call
cwtl
enter
lret
stc
jecxz
or
jmp
inc
add
mov
push
push
or
inc
add
ljmp
sbb
add
jl
and
cmp
cld
add
xlat
cmpsl
jmp
adc
and
sub
mov
or
cmp
add
add
jo
add
mov
pusha
add
fs
gs
sub
jb
sub
mov
xorl
movb
aam
repnz
jb
or
push
pop
pop
mov
out
add
sub
rorb
std
cld
or
jo
add
loop
rclb
sbbl
sub
idivb
push
pusha
xchg
adc
xchg
mov
add
jmp
xor
js
int3
add
aas
dec
andb
xchg
fiaddl
pusha
test
jle
pusha
push
xor
xchg
mov
sbb
mov
mov
pop
in
int
lahf
js
or
sbb
gs
movsb
push
in
and
ret
mov
lock
jo
pusha
mov
stc
mov
in
daa
inc
inc
loop
data16
sub
add
enter
ja
jo
insb
nop
inc
add
cmp
add
inc
jp
pusha
sbb
add
xchg
pushl
jne
sub
js
jb
addb
scas
mov
add
jl
mov
sahf
outsb
add
sbb
adc
and
mov
xchg
in
cwtl
inc
jno
add
fimuls
xor
and
cmp
cld
out
nop
arpl
add
das
or
dec
ja
add
mov
add
mov
into
mov
arpl
add
mov
inc
rclb
test
pop
mov
int3
hlt
add
and
ret
add
popa
fisubrs
or
add
cmp
inc
inc
pop
mov
or
das
adc
inc
ret
loopne
xchg
cmpsl
add
incb
ficompl
xchg
and
xchg
adc
jno
mov
push
stos
xor
into
test
in
sub
and
sub
lods
repnz
stos
fwait
inc
jge
add
and
je
or
movsb
dec
das
and
sbb
xor
push
pop
faddl
sbbl
sbb
add
sub
je
push
cmpsl
push
add
push
inc
pusha
jo
add
int3
inc
push
mov
pop
das
les
nop
pop
add
mov
push
addr16
add
and
dec
add
jge
dec
repz
fsubs
sbb
pop
and
cmp
ret
dec
sub
sbb
xor
pop
cld
mov
ja
inc
sub
jne
fs
outsb
cli
mov
add
mov
cmp
sub
movsl
add
mov
add
push
sbb
sbb
mov
into
push
add
lret
in
dec
sbb
xor
sub
dec
add
push
stc
jae
jmp
shll
xchg
popa
mov
push
pusha
cmpb
sti
sbb
xchg
add
lea
in
aaa
dec
adcb
pop
aad
addb
cwtl
jne
sahf
ja
add
jge
cmp
push
lahf
enter
pop
add
and
stos
xchg
mov
xor
or
jp
js
lgs
jbe
and
leave
add
cmp
insl
out
es
in
xchg
jmp
add
xchg
push
sbb
push
add
inc
decl
or
loop
cmp
and
ja
mov
adc
pop
add
push
jbe
shl
js
outsb
dec
mov
or
arpl
add
adc
push
lcall
adc
mov
cmpsl
add
stos
push
adc
push
idivb
cli
push
xchg
mov
sub
inc
int
sub
xchg
add
sahf
gs
scas
add
xorl
mov
popf
lea
fdivrs
test
fs
cmp
mov
filds
stos
testb
mov
fiaddl
inc
loopne
lcall
popl
sub
cs
add
push
push
and
mov
dec
outsl
imul
sub
mov
sub
push
mov
cld
adc
inc
xchg
lock
xchg
sti
fucomp
sahf
or
pushf
sysexit
lret
push
arpl
mov
testb
aad
scas
dec
cwtl
loope
pop
push
clc
add
jne
pushf
sete
cmc
add
shrl
mov
and
mov
mov
cmp
jbe
mov
xor
jb
xor
mov
add
icebp
fsubl
add
push
pop
and
aas
sbb
insb
dec
dec
mov
in
les
add
clc
inc
repnz
insl
bound
ja
cmp
orb
addr16
pop
and
and
xor
xchg
icebp
in
movsb
aam
in
cmp
out
sub
push
jne
cltd
mov
aad
mov
cld
and
mov
mov
pop
lods
fists
stos
jl
add
sahf
xchg
mov
sarb
cmp
popf
in
add
xchg
aad
push
mov
pop
mov
add
dec
call
sbb
mov
add
lcall
cmp
add
jle
dec
in
adc
dec
stc
adc
jb
inc
std
mov
in
sbb
cwtl
and
push
fdivp
test
outsb
dec
xchg
inc
mov
and
iret
adc
inc
cld
add
enter
adc
sbb
add
dec
pop
jp
pop
out
push
incl
push
pop
inc
add
add
pop
ja
fsubl
cld
int3
fistps
pusha
cmc
jo
lock
dec
add
jecxz
fiaddl
enter
adc
dec
lods
push
ja
xchg
pop
add
hlt
fistpll
add
into
pop
sub
push
push
mov
xor
dec
cld
sub
sti
addr16
pop
into
je
imul
fidivrl
adc
mov
mov
shl
xor
mov
and
ja
add
dec
lea
and
rclb
xor
mov
sti
inc
jp
xchg
adc
jb
cmp
inc
mov
lods
mov
in
push
movsl
adc
outsb
inc
and
add
add
loop
dec
loopne
scas
stos
add
imull
mov
out
test
push
and
pushaw
icebp
rorl
dec
xchg
add
inc
or
xor
mov
popa
push
inc
mov
cmpsb
je
pop
leave
xchg
or
xchg
adc
sbb
cmpsl
sbb
xchg
fadds
lods
mov
in
pop
mov
in
mov
fwait
push
jbe
lahf
mov
fsts
push
dec
gs
jecxz
popa
pop
mov
pop
or
pop
sbb
fdivrl
aaa
leave
xchg
arpl
xchg
mov
sarb
add
insl
cmc
sahf
sub
or
and
xchg
adc
shlb
jp
pop
add
add
stc
mov
xor
inc
addb
loop
adc
inc
add
es
cmp
leave
push
adc
mov
push
out
xchg
mov
cmovl
jecxz
pop
pusha
in
les
xor
clc
and
scas
insl
ljmp
add
jne
subb
inc
pop
pop
lret
arpl
adc
movsl
add
mov
inc
sbb
add
cvtps2pi
cmpsl
addl
dec
into
test
pop
add
daa
int
push
add
test
lock
js
jne
in
push
or
xchg
imul
cmpsb
add
push
add
inc
xor
mov
lods
fs
mov
lcall
ret
outsb
mov
sub
adc
cmpsb
adc
movsb
adc
fbld
push
push
out
mov
and
add
gs
mov
mov
push
stos
or
addr16
inc
cltd
mov
test
jnp
inc
subb
xchg
test
xor
popf
pop
sahf
mov
sbb
jmp
pushf
mov
sub
subb
add
lock
jae
scas
add
aam
arpl
ficompl
lods
rcl
out
jb
add
int
or
mov
pushf
cmp
data16
add
jno
mov
call
cmp
mov
andb
lret
inc
mov
ljmp
xchg
dec
sbb
pop
orl
sbb
add
ljmp
gs
iret
or
mov
add
fs
popa
add
pop
cmp
out
push
or
repz
jl
xor
daa
mov
sahf
roll
addr16
xor
out
pop
leave
jmp
add
push
xchg
into
jecxz
pushf
jle
add
and
mov
xchg
faddl
sbb
pop
mov
in
dec
push
aaa
mov
shll
clc
cmp
sbb
mov
or
ds
pand
cli
in
mov
mov
sbbl
jmp
int3
pusha
mov
push
xchg
add
jmp
data16
test
xchg
push
jecxz
fmull
cmp
sub
mov
push
rcrl
add
nop
ljmp
lret
jns
or
iret
adc
sub
push
pusha
sbb
ret
es
and
inc
std
testl
jo
inc
aaa
sub
xchg
sbb
jle
sbb
add
push
repz
jne
adc
insl
fisubl
add
inc
mov
mov
nop
add
loopne
mov
adc
mov
imulb
xchg
xor
lods
xchg
push
ficomps
lret
pushl
pusha
and
lock
lea
inc
dec
cmp
push
rolb
sbb
xor
sbb
jl
or
pop
arpl
imul
std
andb
add
test
fadds
add
fisubrl
add
daa
cmp
gs
incl
mov
pop
mov
test
fs
bound
add
jg
dec
arpl
nop
sub
aas
inc
xor
lds
add
int
dec
imul
inc
fstps
mov
and
add
jne
sub
ja
add
and
mov
add
testl
or
out
cmp
xchg
lock
push
adc
jle
aaa
int3
push
cwtl
adc
out
sub
dec
sub
fldl
push
icebp
fadd
lcall
add
push
pop
mov
adc
and
cli
loop
pushf
sbb
repnz
inc
push
xchg
cmp
shl
or
add
hlt
mov
dec
divl
jp
add
mov
sub
add
adc
cmp
iret
inc
sti
ja
jl
test
scas
lcall
adc
loope
jg
cwtl
lret
pop
nop
adc
cmp
movb
in
aaa
inc
sub
push
cld
inc
rolb
dec
nop
sub
inc
or
insb
xor
dec
sbb
aam
mov
ds
push
jae
nop
subb
sti
int3
pop
xchg
adc
incb
aam
aad
shlb
ss
ljmp
aam
or
fidivl
pop
ret
iret
jp
jno
dec
gs
sbb
dec
jmp
subb
adc
add
cmc
js
call
popa
das
in
or
adc
add
pop
and
lds
add
loope
jp
adc
or
xor
jnp
insl
mov
push
repnz
push
jg
jno
add
or
add
pop
das
adcl
pop
mov
mov
jecxz
aas
sahf
and
dec
lret
jl
push
ds
leave
add
push
repz
lods
push
mov
add
sahf
lock
popa
sarb
ret
sbb
push
mov
add
xchg
sub
sbb
pop
out
inc
pushf
stos
test
fcompl
sti
lods
outsl
adcb
or
lahf
out
sub
push
inc
scas
imul
add
insl
aam
mov
inc
sub
add
xchg
ds
out
inc
pop
enter
sahf
add
jae
add
enter
jbe
lret
adc
iret
add
xchg
cs
jo
fildl
out
jle
fsubr
jge
lret
js
call
sbb
lea
add
jo
flds
aad
push
pushf
mov
or
jb,pn
add
insb
and
jge
adc
xchg
mov
ror
jbe
cltd
pop
lods
mov
enter
pusha
add
mov
mov
xchg
sub
mov
shlb
in
or
sbb
pop
fdivr
add
jno
sbb
rep
adc
repnz
fucomi
je
add
xchg
fsubs
aaa
push
xchg
lock
or
fsubp
ds
into
out
insb
push
push
inc
addl
mov
or
xchg
pop
xor
add
cmp
stos
add
push
fnstenv
call
mov
rcrb
in
xchg
add
pop
pop
pop
pop
shrb
mov
fdivrs
repnz
mov
mov
jns
scas
pop
push
test
or
mov
add
and
mov
cltd
pop
xlat
pop
xchg
mov
imul
sarl
or
cs
faddl
sbb
add
mov
inc
push
test
out
and
pusha
shlb
sbb
add
xor
pusha
and
aam
push
test
push
in
pop
sbb
cmp
mov
arpl
in
add
adc
movsl
push
jg,pn
xchg
mov
add
push
ret
mov
mov
add
inc
nop
and
lahf
or
mov
fimull
inc
xlat
in
iret
clc
mov
jo
add
jnp
adc
mov
jp
xor
mov
mov
or
js
pop
gs
adc
adc
add
adc
cmc
mov
sub
pusha
inc
lcall
addr16
add
mov
cmp
in
add
jbe
test
lods
mov
mov
xor
xchg
out
push
add
scas
xchg
cmc
loop
cli
mov
sbb
out
je
add
xchg
add
jne
lret
add
push
or
push
subb
sahf
in
icebp
adc
cld
lret
mov
add
or
daa
add
adc
inc
pop
fadds
nop
and
push
add
pop
movsl
or
inc
mov
add
outsb
push
iret
mov
lods
jae
rclb
jb
pop
scas
inc
dec
test
mov
loopne
imul
jg
jmp
xorb
xor
inc
ljmp
mov
jb
pop
dec
xchg
or
add
jge
add
test
jne
addl
sbb
and
xchg
call
push
ss
mov
cmpsb
rclb
pop
jns
and
xor
or
push
out
mov
mov
lds
add
inc
push
xchg
in
cmp
stos
int3
and
sub
add
cwtl
jb
je
and
mov
or
mov
push
push
leave
cmpsb
and
add
lods
lock
pop
lcall
push
lods
inc
add
daa
out
add
fxch
mov
or
nopl
add
mov
dec
jg
psrlw
xor
add
push
mov
das
add
pusha
dec
lret
repz
add
fwait
or
xor
inc
mov
mov
push
stos
mov
in
enter
xor
dec
lcall
and
fcoml
xor
lock
sbb
mov
xchg
xor
test
jecxz
add
es
adc
sbb
fdivs
addr16
fcomi
xchg
int
dec
mov
or
loopne
scas
call
sbb
push
test
dec
and
std
inc
fnstsw
rdtsc
sbb
mov
pop
push
repz
dec
jae
or
mov
fcomps
or
pop
jmp
les
in
mov
push
stos
or
hlt
incl
jmp
push
mov
xchg
sar
adc
mov
test
js
or
addb
xchg
sub
test
xchg
rolb
sub
stc
ja
mov
outsl
jle
imul
mov
cli
cld
cld
jg
subb
pop
xor
inc
mov
dec
movsl
lods
xchg
pusha
adc
adc
inc
pop
xor
inc
sahf
test
push
sbb
mov
sbb
push
sbb
mov
gs
push
adc
mov
or
icebp
mov
cmp
push
push
test
jp
repnz
xchg
jns
clc
push
push
fsub
add
sahf
loop
jne
enter
xchg
cld
ss
andb
cmp
push
jmp
sbb
fcoms
add
xchg
shl
sub
mov
cmp
mov
setae
rolb
dec
bound
notl
sbb
dec
stos
push
nop
cwtl
add
cmc
jb,pt
rcll
lods
into
push
xor
mov
inc
xor
mov
mov
add
cmp
outsb
inc
iret
testl
or
jnp
and
cs
clc
mov
aaa
adc
insl
sub
sub
pop
movsb
je
add
ret
push
ja
sbbb
add
xor
pushf
ljmp
mov
sbb
and
dec
stos
cmp
in
cmp
out
xchg
inc
popa
mov
ret
sahf
push
jecxz
add
sub
loope
shll
inc
sahf
inc
fcoml
notb
dec
jp
out
mov
add
call
push
xlat
punpckhwd
cli
dec
loopne
add
in
jecxz
adc
lods
in
cwtl
xlat
add
in
outsb
call
lock
add
push
lods
dec
and
and
roll
in
adc
push
pop
jne
dec
pop
call
loopne
insl
jecxz
rcrb
ljmp
shr
hlt
cmp
in
add
fs
fadds
in
cwtl
push
sbb
xor
jmp
push
pop
mov
add
les
sarb
js
add
iret
pop
xor
enter
or
aas
adc
and
xchg
add
push
imull
pusha
inc
call
xor
push
add
fcoml
adc
mov
das
loope
lahf
insl
add
xchg
rcrl
int
in
addb
bound
or
push
scas
ljmp
cmp
xchg
cmp
lcall
outsl
pusha
and
push
fwait
out
pop
rol
or
cmp
ror
in
clc
sub
xchg
pop
repnz
pusha
and
inc
pop
cmp
mov
fs
loope
push
hlt
mov
movsb
cmpsl
adc
cmp
fisttpll
repz
test
cld
loope
int
xor
lcall
or
fwait
test
adc
out
dec
jle
inc
call
xor
adc
xchg
fsubs
adc
push
loopne
sbb
js
pop
ljmp
fadds
je
pop
out
inc
movb
movsl
xor
lock
jl
jne
and
add
sub
addr16
pop
jle
add
les
cmp
inc
or
sub
fsubp
sub
pop
pop
or
andb
add
cmc
mov
pop
shrb
adc
pop
aaa
add
or
movsb
cmpsl
popf
add
sub
fisubrl
adc
cmp
add
push
popf
inc
repnz
sti
loopne
loopne
in
push
inc
out
or
inc
imul
jle
lods
add
jo
push
fs
and
aad
jbe
mov
mov
subb
bt
notb
mov
sti
int3
mov
push
add
int
mov
add
addr16
das
lret
xchg
mov
mov
cmp
sti
adc
add
lock
ja
mov
movb
pop
cmc
sub
adc
pop
cmp
pop
sbb
nop
fdivl
push
and
nop
incb
adc
sub
xchg
test
xchg
push
jecxz
cmp
and
xchg
and
add
mov
or
loopne
jnp
and
xor
mov
sub
inc
pop
cs
adc
xor
fwait
add
into
sahf
lea
cmp
pop
ss
add
loopne
xor
or
dec
pop
enter
sbb
pop
ljmp
sbb
adc
adc
add
mov
fidivs
add
adcl
pop
push
adc
fwait
in
aas
stc
notl
out
test
test
outsb
inc
in
sbb
add
ljmp
mov
add
xbegin
add
pop
std
arpl
and
cmp
mov
sub
fcoms
out
xor
xchg
shll
inc
pop
pop
fnstsw
outsl
sbb
jle
pop
or
or
pusha
mov
cmp
or
scas
or
test
cmp
add
sbb
push
mov
fwait
das
sbb
mov
and
sub
lock
pushf
adc
repnz
rclb
push
xchg
add
mov
jecxz
add
orb
or
inc
mov
in
mov
xlat
adc
add
pop
int
and
mov
and
add
inc
push
out
arpl
and
or
call
add
dec
mov
dec
je
add
or
rclb
jo
movsb
std
sbb
scas
incl
stos
or
cld
sub
sub
inc
sbb
xchg
dec
in
sub
adc
jnp
pop
add
inc
fs
dec
add
push
subb
xor
aaa
or
cld
sbb
mov
jo
pop
push
add
test
insb
add
jae
push
loop
test
add
test
xorl
enter
pusha
out
sub
inc
mov
push
testb
jl
xchg
sbb
rorb
leave
add
push
pushf
cli
scas
mov
test
mov
pop
cwtl
add
ja
jge
push
mov
xor
sbb
add
ljmp
ss
ret
dec
dec
in
nop
test
and
sbb
cli
xor
push
popl
or
mov
add
dec
add
add
out
inc
add
jne
push
mov
call
out
lret
jns
loop
add
repnz
shl
sarb
dec
inc
jle
pop
push
fsubl
addl
sub
adc
sub
cmp
mov
dec
pop
scas
xorb
or
jle
cwtl
cmp
aaa
ficoml
mov
add
popf
cmp
jbe
iret
fcoms
das
push
xor
cmp
add
push
cmpsb
mov
dec
aas
xor
icebp
fildl
popa
and
dec
adc
loope
add
fsub
or
sub
xchg
sbb
cs
sarb
add
mov
mov
push
lahf
movsb
inc
pop
imul
or
mov
mov
add
sub
xchg
flds
cmpsb
lds
mov
jbe
pop
pop
ret
lcall
outsl
setnp
push
push
add
mov
mov
dec
ret
fisttpl
push
pusha
jo
lock
scas
dec
stos
push
xor
adc
adc
add
add
addb
or
sub
sbb
cli
dec
sbb
adc
pop
sbb
mov
addr16
repnz
je
add
mov
xor
test
xchg
xchg
mov
adc
jge
push
sbb
jle
dec
add
dec
mov
pop
cmp
jecxz
pop
lret
lret
or
mov
lahf
int3
cs
add
push
adc
stc
mov
cmp
xlat
push
mov
dec
movsl
lock
mov
xor
push
das
mov
mov
sbb
roll
sar
mov
rcrl
mov
and
xchg
clc
int
xchg
add
add
repnz
cmp
scas
pusha
dec
out
shlb
xchg
adc
mov
fisttpll
mov
clc
or
lds
enter
adc
add
lret
lods
or
in
cmpb
sub
jge
pop
cs
inc
or
movsl
xorb
loope
sti
and
add
jnp
call
pop
push
aas
xchg
sub
dec
and
ss
add
icebp
inc
call
add
sbbb
add
fmul
iret
add
jae
add
pop
es
fisubrl
out
push
jle
and
pop
adc
xor
arpl
lods
push
and
push
shlb
repz
add
pop
mov
stc
jno
pavgb
aaa
gs
or
imul
inc
adc
test
adc
dec
out
sbb
cmp
pop
js
or
sbb
in
notl
add
fbstp
mov
sbb
outsb
add
fidivrs
mov
mov
addb
sub
das
add
and
roll
inc
wrmsr
ficomps
dec
shl
les
xor
dec
pop
shrl
push
cld
mov
mov
jmp
jle
pop
test
loopne
dec
fucomip
add
lds
add
add
adc
movsb
xchg
lock
lret
and
add
fmul
or
add
inc
xor
test
cmpsb
jo
push
dec
or
loopne
pop
sbb
push
loop
loopne
sub
xchg
lcall
add
cmc
dec
in
roll
cmp
les
adc
pop
xor
push
adc
push
or
dec
lahf
call
shrb
inc
add
inc
and
lock
add
test
push
idiv
pop
xor
ljmp
jp
stc
adc
clc
adc
cmpsb
or
les
add
scas
mov
inc
add
lcall
daa
jl
mov
or
sti
add
mov
sub
push
mov
out
xor
and
call
jp
add
fstl
inc
mov
pusha
xor
and
out
cmpb
lods
test
adc
cmp
sub
jo
pusha
push
mov
cmc
add
jmp
fwait
dec
popf
add
int3
push
subl
sub
fsubs
pop
sbb
dec
mov
leave
arpl
pusha
cmp
jg
push
add
or
dec
enter
nop
mov
add
sub
add
xor
cmovo
vmovaps
lcall
daa
add
sbb
das
mov
pop
push
jp
xchg
stc
pop
xor
mov
add
ret
pusha
arpl
mov
pusha
rcrb
add
rdtsc
lahf
test
lret
sub
mov
mov
add
outsl
sbb
cwtl
and
mov
rolb
add
fs
sbb
orb
dec
decb
ret
fwait
mov
add
pop
scas
cwtl
jp
add
out
and
sub
sahf
adc
cmp
shlb
iret
test
andl
adc
cmp
mov
sbb
mov
add
in
dec
dec
add
cmp
notb
add
stos
call
add
pop
push
stc
jae
inc
add
mov
dec
mov
call
imul
out
mov
aam
pop
rol
nop
sbb
ds
cmp
paddq
pop
int
push
jecxz
je
add
ds
mov
sbbb
aad
mov
mov
dec
negl
shlb
cmp
cmp
movsl
jne
push
inc
lock
cmc
sbb
sbb
in
adc
push
into
addb
xchg
cmp
or
add
sbb
xor
push
and
sbb
popf
push
scas
das
adcl
mov
pop
dec
call
sbb
mov
jmp
push
jp
lahf
sub
movl
shlb
les
sub
or
mov
es
cmpsb
lock
push
add
cli
imul
add
dec
sbb
stos
pop
mov
mov
jecxz
mov
push
mov
mov
push
icebp
add
cmpb
fwait
ret
inc
sub
xorb
int3
out
add
and
cld
add
adc
cmc
push
xchg
adc
vmovaps
add
sbb
push
ficoml
cmp
cmpsl
shll
add
pop
xchg
cvtps2pd
jbe
dec
addl
inc
push
pop
xor
mov
sbb
or
sbb
xchg
cli
add
cs
nop
sbb
pop
mov
push
jb
cmpb
push
xchg
jg
add
adc
add
sarb
sbb
orps
add
mov
add
nop
movsl
cld
push
and
test
daa
jnp
jo
add
push
ficompl
pop
ret
nop
jo
repz
cwtl
pop
or
add
mov
fisubrs
cmp
movsb
scas
dec
lea
xor
adc
mov
adc
adc
pop
sub
dec
xchg
addb
gs
xchg
mov
loope
insb
out
add
lods
push
fadds
and
and
cs
dec
sbb
shld
sbb
cmp
nop
sub
mov
clc
or
insl
mov
jmp
sbbb
inc
mov
or
repnz
sti
mov
or
dec
ss
jl
sbb
lods
xchg
add
dec
into
mov
nop
fdivs
out
clc
add
lea
mov
xchg
pop
lds
add
xor
add
or
sbbl
lcall
roll
dec
cmc
adc
std
out
add
xchg
call
cltd
jle
add
dec
test
pop
xor
popf
sub
roll
adc
or
mov
jp
dec
mov
add
hlt
push
xchg
bound
jge
insb
lock
mov
dec
add
lea
shlb
ss
dec
or
mov
xchg
dec
in
ret
inc
push
push
jno
add
int3
icebp
add
mov
push
lock
add
shlb
icebp
xor
in
add
mov
add
push
scas
ds
mov
jb
mov
shl
or
pop
push
cld
roll
adc
in
xor
std
push
sbb
sbb
jle
mov
icebp
inc
mov
in
mov
jmp
push
add
stos
mov
lock
sub
dec
xchg
push
push
mov
adc
popa
add
xchg
mov
mulb
sbb
pusha
outsl
adc
arpl
jecxz
in
fwait
add
ljmp
jle
std
into
popf
mov
js
lock
cmp
lret
mov
ss
popf
aad
out
jbe
add
out
or
lods
ss
xchg
inc
jp
jne
add
xchg
fistps
popl
xor
fldl
shll
adc
push
add
pop
mov
stos
add
push
ljmp
sbb
add
subb
lock
pushf
add
daa
sbb
stc
mov
add
xor
fisubs
in
in
adc
in
and
leave
inc
int
icebp
jecxz
rclb
shlb
mov
push
mov
js
addb
add
sahf
mov
mov
sbb
dec
or
jbe
mov
jns
inc
nop
loopne
sbb
adc
mov
jnp
push
and
shrb
pop
cmp
or
or
lcall
pop
or
push
sub
cwtl
insb
pop
jl
in
mov
lret
mov
xor
jl
jae
ret
and
dec
inc
add
je
xchg
or
and
bnd
leave
cltd
les
es
fidivs
add
mov
dec
add
daa
sub
add
pop
ljmp
adc
fistps
xchg
dec
push
push
sbb
push
pop
mov
add
inc
xchg
jmp
add
mov
pop
sahf
decl
or
add
int
xchg
sahf
add
pushf
je
das
jp
mov
pop
in
add
push
push
ficoml
leave
cmp
orb
enterw
pop
sbb
xor
sbb
jno
xor
in
mov
sbbl
add
or
cmp
dec
sarb
jo
push
ljmp
add
scas
aad
or
xchg
dec
nop
adc
xor
mov
and
stos
add
jne
cmpsl
sbb
ss
lock
add
test
jb
inc
dec
add
shrb
add
clc
nop
adc
lret
adc
mov
scas
push
mov
in
arpl
cmp
add
mov
push
cli
lahf
je
sub
fadds
stos
stos
add
iret
sti
faddl
and
push
dec
sahf
xlat
pop
pushf
sub
or
jle
cld
fsts
call
in
jnp
add
addr16
lret
and
enter
insl
clc
in
sub
ljmp
sub
cmpb
ret
int
sbb
jo
push
cwtl
inc
inc
aam
rol
fmull
adc
sti
iret
call
rcr
xchg
je
add
mov
push
jno
add
xchg
je
jb
add
sahf
jo
add
lods
es
mov
insl
test
out
rcrb
pop
in
loop
js
dec
icebp
das
add
stos
jbe
lods
xchg
pop
mov
jecxz
js
imul
xor
cmp
add
inc
dec
fiadds
push
xchg
pop
adc
mov
add
xor
sti
add
inc
or
adc
mov
mov
rorb
shll
inc
andb
xchg
xlat
push
and
pop
stos
pop
insl
add
jne
xchg
sbb
dec
cli
or
lods
inc
loope
mov
mov
sbb
out
popf
xchg
inc
fildl
dec
cmp
dec
xchg
orb
cmp
dec
pop
mov
sbb
ret
pop
stos
mov
add
mov
test
xchg
xor
sti
add
mov
in
and
shrb
jo
cmp
push
dec
mov
addl
loopne
cwtl
inc
mov
enter
add
dec
jbe
xchg
pusha
sbb
mov
add
add
xchg
xchg
je
invd
cmp
mov
inc
daa
xlat
jb
add
xchg
fcomps
fistps
cmp
add
mov
scas
jnp
push
add
and
cs
movsb
add
ds
sub
mov
bound
add
aas
mov
add
sbb
lahf
mov
cmp
jae
add
adc
add
pop
loopne
push
cmpsb
add
adcb
rolb
add
outsb
sub
js
sbb
stos
loopne
int3
cmp
dec
jmp
out
add
mov
or
cmp
ss
lahf
mov
xchg
add
mov
int
xor
aam
pop
cmp
fidivs
add
pop
jecxz
sub
mov
dec
into
sub
dec
imul
movq
pop
pop
pusha
push
ds
fld
mov
add
jbe
or
cmpsl
lods
dec
mov
icebp
aam
xor
cmp
call
or
push
sbb
pushf
add
or
arpl
data16
cwtl
pop
jo
sbb
add
or
mov
push
loopne
xchg
push
add
lods
gs
add
cmp
or
movsb
insb
fildl
fs
adc
or
rcr
inc
adc
jecxz
arpl
xchg
jns
cmp
mov
mov
jge
nop
mov
adc
push
scas
mov
jp
sub
inc
jae
movsb
add
mov
xchg
xchg
add
cmp
push
xchg
xor
xor
mov
arpl
inc
cmp
and
in
nop
je
das
inc
add
xchg
pushf
es
cmp
pusha
cmp
in
add
xchg
dec
add
mov
mov
inc
rolb
xchg
cmp
push
shrb
xor
loopne
iret
add
sub
cwtl
push
add
imul
add
pop
outsl
jge
inc
add
xor
dec
fadds
insl
pop
loopne
shlb
inc
test
ja
sub
jmp
dec
nop
mov
mov
jecxz
pop
dec
jnp
add
fisubs
pop
test
cmp
dec
fsubl
cli
push
push
lods
sbb
add
jle
in
xchg
add
stos
jne
mov
or
andb
jno
push
jecxz
clc
pop
add
out
add
push
fsubl
mov
add
xchg
aas
inc
mov
sub
adc
and
inc
leavew
add
cmp
lock
call
jmp
mov
sub
jnp
xor
add
inc
std
lea
push
add
xchg
add
mov
in
pop
pop
mov
sbb
or
mov
sbb
movsl
jl
push
adc
jbe
loopne
stos
insb
mov
mov
mov
cmp
mov
cmp
in
ret
add
mov
test
xor
or
mov
jl
pop
ret
ret
push
lret
rcrb
add
fdiv
rolb
int
addr16
mov
cmp
js
pushf
push
cmp
popf
mov
jo
iret
lock
add
jge
cld
adc
je
jb
jne
add
add
pop
ss
jb
into
imul
add
mov
push
fidivrl
jnp
add
jmp
sbb
pop
cltd
adc
test
shlb
shrb
ret
add
and
sbb
push
fadds
push
or
jmp
or
lret
and
push
fldcw
push
mov
and
cmp
mov
mov
push
loope
pop
loope
xor
clc
pop
cmp
sahf
std
mov
lcall
jne
insb
mov
cs
faddl
adc
mov
add
xchg
pusha
aas
push
dec
cmc
mov
add
adc
cld
orb
jmp
popf
mov
add
sti
stos
jae
incb
int3
mov
xor
movb
mov
icebp
out
daa
in
inc
inc
pop
jl
add
mov
add
mov
push
loopne
shl
push
fucom
gs
jl
jo
idivb
inc
add
stc
std
xchg
cmp
dec
shlb
and
jp
xchg
fcompl
imul
inc
fbld
movsb
add
out
inc
push
cmp
es
out
push
mov
mov
dec
cmc
repz
mov
mov
add
sbb
adc
jmp
pop
sahf
jb
ficomps
dec
lock
add
mov
out
pop
test
shr
add
add
ficoms
into
mov
loope
test
lods
pop
push
push
enter
add
or
popf
mov
add
cmp
popa
mov
sbb
mov
je
add
push
dec
pop
popa
add
test
jg
dec
rol
mov
adc
add
xchg
adc
dec
jns
pop
xchg
pop
add
jae
pminsw
push
add
into
lcall
adc
cmp
dec
or
xchg
xor
lock
add
xor
push
dec
dec
add
sti
mov
mov
cmp
data16
out
insb
shll
push
addb
daa
pop
scas
dec
xchg
les
jg
pusha
jbe
push
mov
aaa
cmp
pop
out
ljmp
cld
mov
xor
pusha
rclb
push
ficomps
movl
cmc
jb
or
push
scas
adc
into
mov
mov
dec
cmp
mov
fisttpll
ret
outsb
dec
cwtl
cmp
xor
jae
lahf
cli
test
mov
xchg
add
rclb
and
lcall
push
add
push
sub
insb
sbbb
xor
aas
jmp
xchg
jl
sbb
ficoms
add
pop
add
lcall
adc
and
faddl
ret
fisttps
mov
and
mov
add
add
sbb
mov
or
mov
or
xchg
sbb
adc
nop
xchg
jmp
es
sub
add
clc
notl
mov
fwait
repnz
dec
and
add
mov
jne
inc
inc
orps
add
pop
fnsave
pop
mov
cmp
mov
add
in
push
mov
mul
mov
push
pop
bound
inc
loop
pop
js
orl
jno
out
cli
mov
push
add
dec
ljmp
leave
jecxz
adc
subb
stos
push
movsl
mov
jge
call
scas
les
sub
jnp
jg
add
stos
mov
mov
add
jbe
adc
dec
pop
shr
pop
test
add
xchg
push
mov
data16
rorb
test
sub
mov
fcmovne
sbb
jge
mov
add
aam
pop
push
inc
cmpb
mov
sbb
out
leave
inc
jecxz
jle
and
add
jmp
push
xor
sti
mov
cmp
inc
repz
je
pusha
pushf
mov
in
xor
jl
jae
xor
and
or
add
xor
into
xchg
cmp
push
scas
ret
cltd
lock
xchg
aad
adc
imul
adc
loopne
xchg
add
sahf
sub
and
dec
adc
xor
mov
dec
repnz
dec
jb
test
xor
cmp
roll
popa
iret
shlb
or
jmp
inc
jne
decb
pusha
mov
inc
aam
cmpb
xchg
divl
adc
das
out
inc
in
push
add
jg
mov
repz
enter
mov
add
lcall
cli
shll
mov
cmpsb
add
scas
in
vaddps
jne
jno
add
fistpl
jns
push
pop
jb
fsubrl
add
xor
int3
inc
add
pop
or
pushf
cli
push
jge
xchg
xor
sub
add
stc
sbb
cmpsl
in
add
test
mov
mov
ret
nop
sti
lds
shl
mov
cmpsb
add
cmpsl
push
clc
add
popf
jg
inc
mov
mov
xorb
cmp
shr
adc
imul
cli
inc
ficoml
hlt
pop
lock
ficoms
aas
mov
out
jb
fcoml
rolb
jae
lock
shrb
out
xchg
xchg
insb
add
and
loop
lret
push
mov
inc
bound
pushf
jecxz
pop
dec
adc
sahf
sub
mov
and
cld
or
or
loopne
adc
add
mov
outsb
or
xor
jns
or
pop
aam
jb
sub
mov
shl
add
scas
sbb
pushf
or
aas
mov
push
inc
add
sub
push
mov
mov
jae
pusha
dec
loopne
hlt
sub
xlat
mov
stos
jne
sub
pop
mov
popf
sbb
in
xor
mov
mov
fmul
push
lea
dec
rcrb
cmc
outsl
cld
stos
jb
mov
js
adc
sub
xchg
add
or
mov
rolb
jge
cwtl
fldenv
xor
test
les
fcomps
push
cmc
pop
jge
nop
orb
call
rcl
mov
rolb
test
test
adc
xchg
ds
lret
or
pop
push
iret
lock
ret
jp
adcb
lods
sbb
xor
adc
push
mov
sbb
cmpsl
cmp
dec
scas
xor
addb
push
inc
or
out
inc
adc
mov
test
popa
inc
dec
adc
xchg
push
fwait
sub
leave
sbb
test
inc
fdivrl
in
sbb
cmpsl
outsl
hlt
shll
lea
sub
cwtl
jo
push
mov
jmp
lret
in
xchg
or
and
fld
add
adc
mov
xchg
sub
add
clc
xor
sarb
pop
add
push
mov
xor
add
out
pushf
aad
add
lret
lea
sub
push
and
push
push
jne
add
jo
cwtl
and
pop
add
sbb
stos
add
aam
pop
or
fdivs
or
add
nop
clc
imul
sbb
jno
sbb
adc
rolb
mov
enter
add
pop
popf
mov
mov
mov
ljmp
js
sbb
enter
lahf
pop
aas
rclb
pop
int3
mov
and
outsl
hlt
rol
sbb
rorb
shlb
dec
add
mov
imul
sub
jmp
fnsave
fidivl
and
xor
int3
sarl
jmp
lods
add
jnp
sbb
push
sub
ret
mov
add
rol
push
add
fisttps
cmpsb
xchg
sub
orl
jnp
mov
rcrl
jmp
dec
mov
fisttpll
mov
fdivrs
mov
rcrl
sbb
push
shlb
imul
imul
adcl
leave
xor
push
enter
std
and
lods
inc
je
aaa
shrb
push
dec
in
push
test
clc
fdivrs
movsb
and
push
jl
sbb
and
push
cmp
jo
mov
imulb
push
add
add
in
xchg
int
add
fdivs
or
aas
and
jns
sub
rcrb
int
arpl
dec
leave
push
dec
loope
test
xorb
call
mov
jmp
sbb
inc
or
dec
nop
pop
shlb
add
push
cmp
push
xor
cltd
jmp
cmc
loopne
jns
sbb
jo
xchg
pop
aam
add
xor
and
fwait
pop
add
mov
xchg
lods
scas
stc
pushf
shl
add
cld
fdivr
mov
addr16
pop
lods
cmpsb
mov
add
out
xor
or
sar
adc
xchg
adc
mov
mov
lahf
adc
push
loopne
jle
lods
out
enter
fwait
adc
and
dec
mov
sbb
movsl
aad
jge
enter
dec
push
and
add
scas
inc
xchg
xchg
outsl
push
stc
sub
dec
cmp
or
imul
jnp
pop
pop
leave
mov
pop
iret
and
call
scas
pusha
add
leave
repnz
or
fbstp
jo
fdivrl
jecxz
push
or
incb
in
inc
add
aas
stos
or
lock
xorb
aam
or
dec
jne
add
xchg
jo
sbbl
add
subl
add
add
andl
xor
mov
push
push
add
fstpl
movsb
test
add
mov
mov
add
nop
dec
add
ror
movsl
dec
out
add
shll
icebp
mov
mov
pop
xchg
inc
or
out
mov
add
push
push
insl
push
div
sbb
leave
xchg
dec
arpl
shlb
andb
add
in
js
push
mov
ja
mov
int
push
sub
pusha
data16
xor
lock
fiaddl
push
mov
movsl
mov
lahf
xor
jo
jne
or
mov
add
dec
imul
sahf
mov
sbb
ja
jg
int3
or
pop
daa
push
ret
push
shlb
fcoms
push
nop
jne
repz
test
testb
je
add
fnstenv
test
xor
stos
into
movq
mov
movsb
pop
cmpb
push
xchg
adc
pop
add
outsl
dec
in
rcll
ret
and
add
mov
push
xchg
adc
cmc
mov
lret
add
dec
call
shll
jns
push
int
test
xor
dec
mov
subb
add
frstor
xchg
mov
imul
icebp
addb
dec
dec
mov
add
or
xor
xor
pop
jp
push
jno
cld
dec
push
push
bound
xor
cmc
test
or
popa
mov
in
imul
and
shll
pop
or
mov
rolb
int3
push
popa
xchg
stc
dec
inc
jnp
scas
mov
sbb
notl
test
push
mov
xor
fmuls
repnz
xchg
enter
je
jo
push
mov
inc
in
scas
fcomp
cmpsl
push
cmp
ret
sbb
or
popf
and
dec
popl
lcall
xchg
addl
fisubl
mov
out
pop
add
and
xchg
jae
mov
mov
mov
or
mov
leave
sbb
pop
rolb
and
fdivs
loope
inc
cld
mov
and
mov
popf
insl
scas
nop
lods
cmpb
roll
outsl
mov
sarb
mov
jae
adc
push
mov
cld
mov
cwtl
cmp
filds
lock
mov
fiadds
or
lcall
test
aam
out
inc
movsl
push
add
les
mov
dec
adc
fstl
outsl
cmpsl
je
call
in
push
sbb
or
cmpsb
push
outsl
les
push
adc
xor
pusha
fsubl
or
inc
ficoms
aas
lds
cmp
scas
lcall
adc
mov
loopne
add
push
inc
fwait
or
jecxz
adc
xchg
call
pusha
pusha
cmc
stc
mov
xchg
rcrl
roll
call
xchg
loopne
pop
ljmp
mov
inc
dec
push
jns,pt
inc
mov
sub
cmc
int
aaa
inc
add
cld
dec
lcall
and
add
fisubs
mov
sub
andb
sub
dec
test
ror
xchg
fcomps
jle
inc
call
add
dec
xor
cmc
mov
add
gs
push
sbb
mov
movsb
push
xchg
cmp
fimuls
lods
mov
clc
rcll
loopne
and
or
aas
push
jae
pusha
pop
lcall
movsb
test
cmpl
sub
mov
ds
hlt
or
in
loop
loope
test
lahf
mov
dec
cld
mov
dec
jnp
subb
sbb
inc
dec
xchg
push
adc
dec
mov
sbb
add
bnd
jg
inc
int3
dec
fsubs
dec
pushf
add
clc
add
pop
ja
mov
sbb
pop
fistl
imul
outsb
lcall
fsubs
mov
and
and
popa
testb
into
add
pushf
ja
clc
int3
push
mov
push
pop
scas
insb
sbb
sbb
jae
mov
jl
insb
jo
push
mov
push
add
fisubrl
sbb
sar
mov
jnp
fsub
pop
or
je
cmp
rolb
jg
adc
cmp
ds
in
andb
dec
xor
js
add
enter
sub
in
mov
and
mov
push
test
les
xor
iret
inc
call
or
sub
push
add
bound
mov
xor
push
nop
mov
add
sbb
lods
aad
or
adc
xchg
push
pop
cltd
cmc
shlb
rolb
mov
sbb
insl
loop
or
into
shl
add
mov
xchg
mov
lret
and
add
sub
inc
int3
lods
xchg
icebp
add
mov
outsb
movsl
dec
add
ret
mov
jbe
mov
fadds
sbb
xchg
rorb
dec
adc
mov
and
dec
insb
cs
cltd
add
or
add
sub
scas
movsb
rorb
outsb
into
xorb
jnp
test
dec
and
adc
add
inc
test
push
fmuls
test
subb
out
ret
cmp
popa
jbe
mov
mov
mov
and
adc
dec
xchg
inc
wrmsr
loopne
sub
inc
call
jae
dec
fcomps
or
mov
xor
lds
ret
ficoml
mov
and
shll
or
mov
or
loope
sbb
mov
cmp
nopl
push
arpl
mov
call
test
push
mov
add
rcrb
push
int3
shr
push
mov
das
sub
xchg
adc
dec
dec
xchg
add
push
add
mov
test
insb
jns
dec
jl
mov
inc
xor
inc
push
add
fisubrs
push
mov
ficomps
or
adc
js
cmpsb
nop
fsubrl
mov
push
sbb
sub
and
or
inc
orb
addr16
mov
jl
cmpsl
pop
pusha
or
lods
mov
xchg
popa
sbb
pop
push
mov
fidivl
dec
sub
xlat
daa
xchg
andl
adc
jp
add
push
push
cmp
int
and
xor
fucomi
xor
out
insb
adc
fsubl
inc
lcall
xchg
pusha
push
je
fists
jl
push
divl
dec
add
xchg
inc
lret
ret
and
xchg
add
fcomps
aad
push
test
xor
cmp
jecxz
cmpl
daa
jb
jl
jp
pop
fcomi
or
push
lea
clc
pusha
aad
mov
nop
repz
or
dec
ds
jl
pushf
add
ds
fcomps
inc
mov
xchg
in
pop
jp
add
loop
js
inc
inc
and
jo
sub
into
test
call
les
jge
addb
sbb
mov
add
lea
sub
mov
mov
call
push
dec
mov
lds
outsl
inc
sbb
sub
adc
mov
cmp
and
je
call
add
nop
into
mov
enter
shr
lods
jge
ret
cmp
sub
mov
mov
pop
add
leave
adcb
or
unpcklps
pop
shr
jecxz
sti
ljmp
aas
xor
add
and
push
mov
std
cmpsl
mov
shll
js
cmp
and
loope
push
and
and
js
mov
push
out
adc
insb
shrl
rorb
test
push
scas
lods
and
andb
sbb
mov
push
mov
cs
or
mov
shl
xchg
mov
fmul
bound
icebp
pand
xor
sub
jp
sarl
jb
fsubrp
xor
sahf
xorb
sub
sti
push
adc
mov
out
int
add
insb
jbe
pusha
ret
sti
adc
ret
dec
js
mov
mov
push
stos
add
scas
add
stc
in
push
push
loopne
mov
add
mov
roll
push
mov
fs
les
fisttps
pop
xor
sub
lods
jecxz
mov
lock
xchg
pop
push
mov
push
add
or
lret
jne
add
in
icebp
mov
popf
incl
scas
insb
and
cmp
adc
test
mov
popf
inc
add
push
mov
inc
mov
insl
cmp
imul
jb
push
pop
sarb
pusha
dec
push
pop
push
ficomps
and
pop
adc
mov
in
push
aaa
dec
sub
push
mov
lods
inc
jnp
fdivr
mov
add
int3
ljmp
or
shlb
cld
clc
add
lret
movsb
cmc
jae
xor
outsl
imul
shlb
das
mov
sub
sbb
sbbb
jecxz
popf
mov
mov
insl
iret
add
mov
adc
int3
clc
fisttps
cltd
cld
xlat
das
add
pusha
mov
lock
cs
pop
inc
push
push
in
push
add
nop
add
pop
or
es
test
add
call
insl
mov
xor
jg
mov
inc
test
add
xchg
cmp
outsl
mov
add
pusha
sbb
xchg
sbb
imul
icebp
popa
jg
rorb
dec
les
call
ss
jne
fs
and
xor
lcall
add
orb
fs
and
add
mov
xorb
idivb
fwait
push
imul
jecxz
scas
mov
inc
das
test
test
lret
hlt
adc
in
call
adc
iret
test
mov
notl
sbb
dec
repz
outsb
and
pop
inc
add
lock
fstpl
inc
pop
mov
add
jae
adc
iret
mov
add
mov
fnstcw
mov
jecxz
lock
add
push
add
xchg
dec
lods
xor
xor
push
aad
add
imul
cmp
int3
cmpsb
mov
rolb
xchg
sub
jle
sub
out
sbb
jae
sub
fisttps
test
jp
push
cmp
fs
bts
out
shrb
cmp
scas
imulb
popa
repnz
ret
pusha
test
jge
mov
loop
ja
add
pop
fstps
xchg
add
push
out
in
mov
adc
or
call
je
in
pop
dec
and
xchg
aam
push
jbe
or
cwtl
jp
roll
xor
sub
test
or
xor
mov
sbb
add
out
or
cmpsb
dec
test
cmp
fwait
add
cli
jo
faddl
repz
loopne
fs
fnstcw
adc
sbb
push
cmc
mov
mov
or
sub
dec
xlat
mov
mov
hlt
jo
mov
lods
adc
xchg
mov
fiaddl
xor
pushf
test
sarb
or
adc
arpl
xchg
push
enter
in
sub
orl
mov
ja
add
fwait
xorl
subb
call
stos
ljmp
push
sbb
int3
pop
lret
mov
jo
cli
pop
add
sbb
sbb
cmpsl
out
pop
mov
int3
out
inc
or
popa
adcl
out
pop
xchg
mov
test
mov
add
mov
mov
pop
xchg
lods
add
mov
sarb
ljmp
xchg
scas
cmp
lret
sbb
popf
repz
sbb
pop
mov
test
push
xchg
mov
inc
add
shlb
ds
or
pop
lret
or
add
add
adc
jge
gs
ss
inc
pop
aaa
mov
imul
movsb
sub
enter
call
mov
in
dec
add
jecxz
fwait
lock
mov
addl
push
lds
add
fwait
dec
jae
insb
push
out
cmp
and
xchg
push
inc
loopne
add
outsb
je
shl
push
mov
add
popa
push
mov
xor
loopne,pt
mov
pop
pushf
stos
or
jne
xorb
xchg
rcrb
sbb
mov
scas
leave
hlt
fptan
popf
add
lcall
or
inc
mov
and
jns
add
into
sub
add
andl
adc
aaa
std
sti
jae
mov
imul
call
add
add
xor
dec
add
jg
test
in
mov
cs
cmpl
enter
jmp
and
jmp
popa
hlt
pop
pop
scas
or
insb
inc
sbbb
dec
push
pop
add
insl
jmp
lea
cmp
call
fstl
in
sahf
add
jo
push
repnz
add
or
or
add
mov
repnz
sbb
xor
pop
das
sysenter
leave
shll
push
push
add
add
lods
dec
outsl
repnz
pusha
pop
cwtl
dec
xor
jno
testl
dec
out
ss
push
lret
dec
js
sbbl
cmp
call
add
pop
sahf
sbb
push
push
in
mov
fildl
adc
pop
dec
add
mov
mov
iret
test
add
mov
fildl
insl
push
jb
mov
in
xor
mov
je
fadds
inc
mov
inc
ja
call
clc
test
scas
aam
cltd
add
push
call
pop
dec
rorb
repnz
inc
mov
fsubs
push
rcr
ds
dec
rorb
sub
test
clc
lock
in
or
jp
add
ss
loopne
iret
add
je
sbb
loop
scas
outsl
mov
jb
add
pop
dec
std
push
push
add
xchg
and
and
xor
ret
mov
jbe
fldl
pop
xlat
push
fwait
movsb
testb
insb
sbb
add
jp
stc
add
subb
sbb
pushf
mov
inc
cmp
cmp
mov
and
cmp
aaa
mov
cli
and
fnsave
bound
pop
in
push
xlat
mov
cmpsl
cmp
pusha
lcall
fdiv
es
movsb
add
sahf
push
rorb
movsl
loopne
add
push
and
and
aas
sbb
ds
faddl
cmp
inc
movsl
dec
adc
cmp
or
loopne
ja
pop
sbb
aaa
jge
mov
lret
sub
sub
scas
fistps
push
das
arpl
test
testl
lret
outsl
decl
arpl
cmp
fadds
pop
add
fimuls
pop
or
adc
add
pop
add
mov
jno
add
push
mov
mov
test
push
cmp
pop
popf
mov
lods
jmp
out
add
push
rclb
dec
add
and
jg
xchg
jl
adc
cltd
dec
mov
stc
cmp
xchg
out
and
cli
aas
clc
add
dec
push
bound
adc
sub
dec
das
xor
jae
add
hlt
push
cmp
xlat
jle
push
add
mov
mov
pop
inc
dec
push
mov
sar
mov
dec
jnp
add
sbb
sbb
or
mov
loopne
std
add
daa
push
inc
mov
mov
mov
push
cli
bound
iret
inc
push
or
and
leave
dec
je
add
roll
cwtl
in
adc
inc
inc
push
mov
sahf
inc
cmp
sub
add
data16
jnp
jle
rcl
int
repnz
in
mov
scas
adc
cwtl
inc
mov
cmc
sbb
rclb
mov
stc
mov
or
ficoml
pop
fabs
out
ret
mov
out
js
arpl
xor
add
add
add
and
or
movsl
aas
fs
push
hlt
mulb
sbb
rcl
mov
das
dec
adc
sbb
clc
xchg
adc
push
lret
push
sbb
rclb
jno
add
ror
mov
adc
push
dec
dec
icebp
adc
add
fadds
add
or
in
push
addb
inc
jns
orb
fsubl
xor
stc
iret
xchg
xor
pop
ret
pop
cltd
adc
imul
and
imul
mov
add
aam
in
cli
ja
cmp
stos
sub
cmp
jns
stc
add
xchg
xchg
mov
jecxz
test
add
add
inc
andb
in
or
xchg
and
ret
lock
call
sub
icebp
mov
mov
jnp
lods
ja
addl
sub
outsl
sbbb
sub
cmp
les
jo
roll
pusha
ja
mov
arpl
mov
fsubrl
add
mov
and
sbb
and
add
sbb
adc
and
mov
and
lcall
push
jb
xor
and
xor
test
xchg
call
popa
cmp
fstp
leave
add
or
setle
add
out
sets
ljmp
push
cmpsb
mov
xchg
vcvtps2pd
add
sarl
xor
movsb
add
xor
pop
in
pushf
andl
mov
ja
cld
enter
xchg
sub
add
jl
and
inc
imul
inc
and
push
cltd
pop
dec
add
push
sbb
pop
mov
pusha
jo
pop
jns
ljmp
add
into
rcrb
jle
insb
cmp
jmp
add
fiadds
mov
hlt
pusha
push
mov
jne
pushf
xorl
mov
cmp
dec
fstpl
xor
cmp
adc
pop
jb
and
jmp
aam
jo
in
add
cmp
inc
sbbb
ret
sub
jno
xchg
sub
add
add
lds
lcall
bound
in
sub
sbb
push
sub
xchg
out
push
scas
roll
sub
mov
adc
jne
cmpb
mov
rcrb
loope
mov
push
jge
add
adc
ret
sub
cmc
mov
sub
inc
mov
shl
mov
or
mov
xlat
dec
insl
add
dec
xchg
add
mov
jg
fsubrs
ret
repnz
sub
test
cmp
xor
rcr
inc
dec
int
push
add
ljmp
add
insb
pshufw
jge
dec
loop
sbb
cwtl
rcll
jnp
js
shlb
lock
add
movl
pusha
add
or
push
adc
iret
sub
pusha
jo
mov
pop
pop
jae
dec
add
inc
cmp
stos
add
add
lds
filds
ss
icebp
add
repz
add
into
addb
fmull
shlb
xchg
or
xchg
cmp
and
add
inc
pop
jns
dec
js
add
inc
mov
rcrb
shlb
rorl
or
lcall
stos
hlt
cmpsl
cld
add
gs
jge
push
adc
sbb
push
adc
loopne
ficomps
sbb
and
jbe
outsl
cmpsl
loopne
daa
in
inc
jle
je
add
sbb
xor
nop
inc
je
push
mov
push
mov
dec
pop
rol
iret
inc
inc
std
pop
ds
xor
jno
mov
mov
add
pop
scas
jge
loop
add
out
push
pop
stos
or
dec
movl
js
inc
rclb
in
add
es
mov
add
mov
xchg
xchg
mov
in
call
mov
add
mov
gs
jl
jmp
inc
push
inc
cli
repnz
mov
cmp
ja
push
popa
fisubs
cmpl
jb
add
cwtl
jo
cltd
push
fsubrs
pop
mov
insb
sarb
pop
fadds
test
aam
push
and
insb
nop
pushf
add
adc
mov
add
jecxz
leave
sub
insb
add
test
add
ss
xchg
push
lcall
sbb
out
dec
sbb
xor
stos
imul
rorb
ds
ret
pop
inc
repz
icebp
sahf
je
dec
sbb
jl
sar
mov
divl
ja
sub
mov
dec
pop
adc
pusha
sub
ficomps
cmovns
loopne
rep
out
mov
pop
jnp
inc
adcb
xchg
adc
or
into
jecxz
movsl
je
add
dec
dec
xor
xchg
ret
lret
enter
or
lahf
xchg
lret
cmc
inc
jl
ds
mov
cld
jg
mov
add
pop
imul
outsb
fstpt
or
and
bound
cmpsl
add
xchg
pop
setne
sub
pop
inc
nop
add
dec
insl
fs
inc
andl
aad
cmpsb
push
mov
sbb
cmp
add
mov
scas
rolb
cmp
xor
mov
insb
in
cmp
mov
roll
in
pusha
stos
push
daa
push
and
cli
cwtl
inc
sbb
loopne
cmpsl
mov
fnstenv
and
testl
mov
add
xchg
nop
flds
in
pop
adc
arpl
cmp
xchg
add
lcall
sahf
addb
cmp
dec
sub
add
mov
dec
add
jae
hlt
jo
or
out
push
iret
cmp
adc
xchg
pop
movsl
sbb
test
mov
inc
xor
push
mov
and
gs
or
ds
add
movsb
fsubrp
orl
pop
and
roll
mov
add
cmp
out
aam
push
pop
mov
inc
imulb
dec
call
lret
int3
xor
bound
jne
cld
pop
jmp
aam
add
xlat
inc
adc
cmp
std
rolb
insl
mov
sub
subl
and
sahf
add
jnp
mov
mov
mov
add
xchg
outsb
jno
xchg
daa
push
adc
mov
add
add
jne
out
mov
mov
jbe
fcmovnb
add
iret
push
jle
add
add
fadds
mov
sbb
rol
push
add
push
sahf
loop
cmp
xor
add
pop
push
es
ret
jns
js
loope
das
mov
add
out
popf
push
fidivrs
add
outsb
xorb
lock
mov
data16
lret
push
lock
xchg
cmc
sub
push
sahf
and
xor
outsl
xor
jecxz
mov
sbb
sub
jge
add
mov
or
testl
ret
gs
add
push
pop
sub
imul
outsl
dec
into
xchg
imul
add
movsb
add
outsl
pop
sbb
shrb
flds
push
mov
mov
add
stos
movsb
out
add
push
pop
mov
out
and
xor
ret
sub
cwtl
repnz
xor
jge
cltd
lock
imul
push
rolb
in
dec
scas
push
shlb
mov
addr16
jne
dec
stos
pop
and
cmp
pop
jns
add
rorl
xor
mov
out
add
or
fcmove
add
push
mov
push
pop
xor
mov
add
cmp
or
lods
sbb
sub
or
add
mov
pop
loope
inc
lods
ret
add
cmp
push
mov
idivl
nop
inc
in
out
aaa
imul
inc
int
sub
mov
cmp
rcll
fildl
adc
inc
stos
cmp
push
xchg
add
jl
mov
call
push
push
fadds
rclb
pop
push
dec
sbb
out
stos
out
loope
test
push
dec
xorb
shr
cmc
insb
shlb
popf
pusha
jo
sbb
insb
add
mov
sbb
mov
mov
pushf
ds
add
std
test
lds
or
mov
ret
mov
aam
ss
int
sub
mov
add
and
aam
jl
add
xor
mov
add
out
jle
jl
out
cwtl
inc
or
cli
repz
mov
call
imul
fisttpl
adc
out
pusha
or
ljmp
pop
adc
add
push
xchg
lahf
fbld
mov
pop
out
in
sub
pop
cmp
lcall
jge
dec
sahf
insb
jp
or
flds
push
xor
and
and
xchg
shlb
push
je
es
push
mov
shll
outsl
adc
add
negl
sub
popf
add
pop
or
push
js
dec
movsl
push
dec
xchg
rcrb
add
cmp
mov
mov
clc
jecxz
iret
add
fnstenv
xor
add
or
pusha
inc
ljmp
or
dec
leave
xor
rcr
rolb
popa
fisttpll
add
lret
and
add
push
inc
pop
jne
add
addr16
rclb
cmpb
mov
mov
adcl
aad
adc
adc
dec
add
cmp
mov
and
in
sub
cmp
push
lret
sbb
rol
cmp
pop
pop
or
and
add
mov
push
lock
in
iret
or
mov
xchg
mov
in
sbb
in
jbe
xchg
clc
or
decl
subb
cmp
mov
mov
xorl
adc
push
data16
std
sub
clc
lahf
sti
mov
add
pop
xor
add
adc
lock
xor
add
dec
sub
pop
push
subb
fisttps
sbb
movsl
adcb
mov
or
sub
ds
rol
and
push
fwait
adc
imul
cmp
add
jo
and
mov
inc
or
movsb
push
insb
cmpb
test
adc
std
inc
fdivs
add
mov
inc
popa
outsb
pushf
pop
loop
cmp
jp
mov
add
lret
sub
inc
test
or
mov
cmp
and
stos
jno
jbe
pop
xchg
add
push
pop
xor
add
dec
sub
xchg
or
jae
jp
in
test
movsl
mov
pop
test
and
rcrl
sub
jae
fs
clc
mov
dec
js
mov
andl
aas
push
mov
xor
xchg
add
mov
mov
jg
jns
push
and
jne
movd
hlt
pusha
pop
popa
mov
and
cs
aas
add
out
add
negl
add
orb
add
xchg
pop
adc
lret
sbb
cld
scas
jl
or
in
add
lea
iret
nop
push
inc
mov
fs
jmp
out
cwtl
enter
scas
sbb
xor
mov
and
mov
push
add
pop
jae
adc
out
cltd
mov
and
fstps
mov
mov
add
adc
sbb
xchg
or
test
test
daa
xor
lcall
outsb
cs
jno
and
ss
into
mov
pusha
sbb
cmp
fstps
xor
pop
decl
scas
aam
add
jns
loopne
insb
mov
stos
mov
jg
int3
mov
sbb
insb
mov
mov
mov
jl
movsl
cvtdq2ps
cmp
out
sbb
rcrl
dec
and
cmpsb
and
mov
rolb
jbe
sti
pop
ss
stos
into
cmp
js
xor
mov
repz
or
lcall
add
mov
test
dec
popa
shll
add
mov
mov
add
std
fcomps
pop
loopne
popa
push
das
add
cmpsb
jno
add
loope
or
es
xor
call
insl
cld
dec
pop
push
add
shlb
cltd
data16
adc
xchg
pop
cmp
cmc
aas
mov
or
jae
ret
pop
test
pop
jge
stc
push
aam
ja
in
push
in
arpl
xchg
sysenter
sub
mov
pop
mov
and
sahf
push
loop
pop
fadds
adc
xchg
xor
dec
add
inc
je
sbb
xchg
adc
idivb
arpl
cmpl
cltd
aam
popa
jo
add
loopne
cmp
add
add
cs
loope
jns
ror
jno
and
pusha
inc
pop
leave
add
mov
imul
or
sub
add
mov
scas
adc
test
ja
aam
add
xchg
pop
add
xor
call
add
xchg
add
iret
inc
insb
in
and
sbbb
insl
jbe
pop
add
mov
jns
add
fs
fldt
cmpsb
lret
pop
mov
scas
pop
add
inc
cld
scas
addb
mov
cwtl
jo
push
test
cli
inc
mov
leave
enter
add
push
jne
sub
add
out
push
daa
add
dec
mov
or
xchg
inc
rcl
xor
mov
icebp
mov
arpl
inc
stos
adc
push
and
iret
cmpsb
pop
add
std
xchg
jb
and
xor
xor
aad
xor
dec
add
jmp
clc
push
pop
outsl
push
in
add
sub
orl
sbb
jecxz
loop
shll
pop
int3
cli
pusha
dec
loope
mov
lods
aam
or
add
dec
and
fnsave
jbe
add
into
mov
pushf
inc
xchg
pop
lods
adc
test
mov
mov
imul
adc
leave
add
add
js
daa
pop
mov
xor
fcomip
add
mov
popf
cwtl
mov
jno
add
pop
mov
jne
push
insl
add
sub
test
jbe
add
je
lds
and
mov
dec
add
int
lods
int3
hlt
jno
pop
push
push
shl
out
xchg
out
add
pusha
adc
int3
lods
cmpsb
sub
xchg
inc
add
hlt
push
xor
sti
ja
add
pop
mov
rcrb
cmp
lock
lahf
mov
nop
dec
data16
push
jg
sahf
add
xchg
loopne
test
pop
lods
in
jno
iret
mov
or
push
lds
cltd
sarb
aaa
jle
rcrb
mov
mov
or
push
adc
push
sbb
inc
fstpl
aaa
mov
or
add
call
add
cmp
leave
mov
cwtl
fbstp
sub
add
mov
lret
bound
push
pop
mov
jle
sub
xchg
jge
iret
insb
cmp
inc
fnstenv
in
out
jg
dec
and
jmp
or
add
loope
dec
add
repnz
xor
add
xchg
and
add
mov
and
mov
jle
repz
mov
inc
outsb
xchg
adc
mov
adc
pop
cld
pop
stos
mov
inc
and
mov
int
add
xchg
mov
add
push
mov
cmp
daa
cld
jae
jns
cwtl
inc
mov
stos
stos
add
sahf
ds
add
lcall
sbb
jg
orb
or
orl
bound
push
xor
pop
adc
loop
sti
add
je
push
arpl
insl
sbb
sbb
adc
fmul
dec
pop
mov
aaa
out
fldcw
add
sahf
movsl
xchg
push
les
or
in
xchg
lods
xchg
addr16
push
cmp
add
imul
in
out
add
or
lea
push
add
sbb
xor
push
cmp
sahf
insb
mov
sbb
mov
xor
call
mov
inc
je
pusha
add
add
gs
lea
cmpsb
cli
or
mov
add
arpl
in
in
loop
add
xchg
pusha
jns
inc
fadds
icebp
pop
xor
int
fwait
xchg
cmp
clc
cs
adc
jae
sbb
rolb
cmp
movsb
jecxz
mov
dec
icebp
push
cmp
arpl
std
orl
in
xchg
add
repnz
cmpb
adc
add
hlt
shrb
negl
sahf
mov
rolb
loope
push
jae
xor
loopne,pn
sub
call
push
outsb
aas
lods
inc
xchg
in
mov
rcrb
dec
call
push
xlat
sbb
arpl
jne
lock
cmp
pop
cwtl
call
push
push
ja
in
in
dec
push
cmpsb
sbb
rcrb
jns
add
or
cli
inc
mov
sahf
pusha
add
stos
out
mov
mov
inc
sbb
xor
enter
adc
lock
push
and
xor
stos
add
add
xchg
pop
sarb
inc
pusha
mov
or
add
or
mov
gs
add
shlb
mov
jns
push
les
or
dec
xor
rcrl
ret
inc
nop
rcrb
mov
add
mov
mov
aad
aas
dec
loopne
fwait
inc
add
stos
adc
jnp
mov
adc
or
inc
cmp
lcall
out
movsl
pop
or
xchg
push
loopne
mov
adc
rorl
test
add
adc
ljmp
mov
mov
and
mov
pop
int3
cmc
push
loopne
adc
jo
add
sub
roll
pop
scas
js
movsl
xor
add
sub
add
mov
adc
aam
ror
pop
je
jmp
cltd
pusha
jl
or
add
jo
hlt
pop
gs
jle
add
adc
fs
inc
ret
fnstenv
in
inc
push
xorb
repz
xor
cmc
aam
add
sub
mov
mov
pop
out
mov
out
cmp
xchg
lret
jp
sbb
adc
shr
call
pop
rcll
cmp
xchg
cli
sub
in
out
jecxz
cmpsl
cmpsb
int
mov
pushf
flds
in
lret
push
mov
push
shlb
movsb
sbb
mov
or
and
in
add
mov
loope
sbb
add
and
mov
xchg
add
div
mov
shll
jl
mov
std
loope
push
pop
addr16
adcl
add
or
xor
call
mov
mov
std
adc
iret
out
stos
adc
scas
pop
je
outsl
aad
xor
xchg
jecxz
mov
sub
lret
pop
add
cld
mov
out
stos
shl
mov
add
lcall
xchg
xchg
inc
in
enter
mov
add
cmp
inc
out
push
int
test
or
dec
jae
adc
and
ficomps
mov
sbb
stos
cs
mov
mov
mov
in
push
daa
xor
cmp
cmp
or
add
mov
xor
js
add
movsb
cwtl
aaa
add
addr16
add
mov
jge
lahf
jo
and
lret
cmpsl
mov
popa
add
std
jge
or
and
pushf
roll
add
shrb
mov
add
sub
inc
cmp
mov
inc
fisttpll
aaa
add
pop
xlat
cmp
pop
imul
pop
int
les
jp
loop
fdivrs
mov
push
pop
mov
jo
xchg
roll
addr16
shlb
je
and
aam
ret
test
or
call
jmp
out
fmul
rcrl
push
xchg
out
cmpsb
or
outsl
fsubrs
add
inc
and
das
xorb
test
add
or
insb
sti
cmp
add
dec
or
mov
rcl
popa
mov
sub
in
push
inc
xor
test
mov
sbb
push
out
gs
lcall
add
loopne
xchg
pop
inc
add
outsl
add
add
mov
rorb
movb
data16
pop
and
add
outsb
inc
lods
sub
lock
rcrb
lock
sub
sbb
jo
add
mov
add
je
out
add
mul
mov
pop
sbb
xlat
lahf
jb
addr16
add
das
sbb
adc
mov
xor
filds
ja
pop
mov
outsl
mov
inc
adc
arpl
daa
add
sar
cmp
andb
mov
bndstx
push
sub
xor
xchg
in
add
add
filds
jle
xlat
mov
push
ds
cmp
mov
xchg
add
mov
ja
test
nop
lcall
xor
out
je
add
jnp
sub
dec
inc
mov
scas
add
jb
pop
add
arpl
or
repz
rolb
jmp
add
mov
subb
sbb
fs
sbb
ror
add
fwait
xorl
jns
push
adc
mov
aad
lret
call
imul
xchg
xor
icebp
addl
lea
push
xor
push
fstpl
cwtl
cs
das
lods
add
add
lods
mov
sahf
xchg
jp
sub
add
push
test
cltd
push
sti
jnp
add
cmpsl
dec
ja
into
add
aas
xchg
out
pop
test
jb
dec
add
fadds
aaa
push
loopne
pop
adc
cmp
xor
mov
les
rorl
je
xchg
jl
dec
enter
dec
in
xor
push
or
jnp
or
add
ret
cwtl
cs
lock
test
icebp
inc
lods
inc
mov
sbb
sarl
loopne
ja
push
int3
add
stos
dec
adc
inc
shlb
data16
bound
xor
mov
add
repnz
pop
dec
add
not
inc
adc
xchg
movsl
int3
dec
sarl
fs
lcall
sarl
aam
out
mov
bound
xor
cmpsb
or
iret
jecxz
or
in
rolb
cmp
aas
pop
add
xor
cmp
xchg
push
push
add
jge
gs
mov
mov
lret
loope
inc
mov
pushf
dec
stos
sub
push
pop
outsl
sbb
add
mov
cmp
pop
mov
out
pushl
andb
mov
mov
add
jo
loope
or
lds
shl
clc
add
dec
cmp
pop
out
or
test
cmpsb
popf
inc
pop
add
add
fidivs
xor
add
mov
aas
mov
push
es
inc
pop
ret
out
dec
mov
cwtl
movsb
das
lahf
jl
add
int
les
add
xchg
inc
inc
add
lea
mov
pop
add
push
dec
adc
aad
add
fsubr
stos
or
std
loop
hlt
xchg
lods
mov
sub
sbb
enter
jp
cmp
addr16
xor
pusha
mov
xor
lods
and
lds
out
push
loop
add
cmpsl
xorb
aam
gs
and
lahf
add
aad
rorb
add
cmp
mov
fcmovb
stos
nop
xor
loopne
xlat
inc
mov
sub
add
add
xor
add
loope
aad
add
call
adc
adc
leave
icebp
mov
add
addr16
das
push
mov
int3
add
mov
movsb
jle
cwtl
sbb
pop
mov
filds
adc
dec
ret
jl
insl
mov
adc
push
jne
sti
bound
aaa
dec
jbe
xchg
push
jno
aas
loop
dec
add
pop
jp
mov
sub
add
xor
pop
mov
mov
loopne
add
in
add
xchg
fistpll
dec
inc
cmp
push
rcll
lods
js
fimull
in
add
mov
mov
inc
popa
xor
dec
pop
jo
pusha
rcll
add
out
mov
and
loope
inc
or
fisubl
sub
xor
push
nop
aad
xchg
push
mov
sbb
adc
xlat
mov
inc
sbbb
sti
stos
add
sub
mov
or
fucomp
adc
mov
bound
jmp
xlat
rcr
jle
jae
add
shrl
add
mov
lds
adc
add
mov
iret
cmp
mov
ret
mov
lahf
shlb
jns
orl
and
or
cmp
lock
cmp
mov
lods
ltr
call
adcb
jae
sub
pop
add
xor
jbe
add
fwait
sub
pushf
cs
rolb
sbb
test
sub
push
cli
lcall
sarb
add
cmp
insl
dec
mov
popf
mov
ret
mov
add
sti
fcmovu
pop
jmp
and
add
pop
lahf
xchg
dec
add
dec
push
xchg
in
je
mov
add
and
cmpsl
jle
arpl
ja
sbb
sbb
lahf
mov
hlt
jne
or
add
add
js
dec
cmp
fstp
out
pop
shlb
cli
lea
add
xchg
mov
mov
sub
jbe
je
orb
add
call
dec
pop
cmp
cmp
adc
js
daa
popl
stc
pop
lock
fiadds
out
cld
les
cmp
push
aas
ss
add
data16
or
adc
add
xor
push
gs
popa
add
bound
dec
ficompl
push
push
and
jp
inc
sbb
inc
or
add
loope
repnz
popf
ja
pop
enter
aas
mov
mov
lods
ds
inc
jo
cmpsl
dec
or
add
insl
push
out
shlb
push
mov
dec
shl
dec
sub
dec
push
jmp
add
cltd
jnp
add
pop
pop
adc
mov
test
popa
sarl
add
fsubl
pop
or
inc
add
xor
mov
jle
fisubrs
jb
adc
and
lahf
jle
add
or
sub
adc
fs
pop
add
popa
ds
popf
and
jl
cmp
jmp
xor
lods
adc
insl
roll
sbb
push
pop
out
mov
mov
add
pop
inc
fcoml
fadds
mov
mov
lea
jb
pop
or
mov
sbb
fcompl
mov
sub
fwait
cmp
decb
fmulp
cltd
imul
xor
sub
js
and
jo
sbb
sbb
mov
js
push
mov
loopne
out
or
dec
lock
iret
add
addr16
shrb
mov
add
iret
adc
xor
push
cmp
xchg
add
aad
divb
sbb
mov
xchg
dec
fwait
adc
inc
lods
sbb
lret
adc
sub
pop
stos
orb
cmpsl
loop
xor
sbb
sub
xchg
jno
pusha
ds
push
mov
mov
mov
cmp
xchg
inc
cli
jb
lcall
lods
xor
add
aas
mov
jmp
inc
pop
imull
jns
mov
adc
add
jne
push
add
js
es
mov
xchg
jne
jae
xchg
sbb
shr
inc
shlb
subl
push
stos
in
add
mov
sarb
out
add
test
inc
or
sub
pusha
mov
pop
mov
scas
inc
push
and
cmovl
mov
cli
pusha
jmp
push
mov
mov
adc
and
or
lret
lahf
mov
jns
pop
xor
or
fs
mov
into
mov
dec
sbb
sti
data16
insl
into
ds
shrl
mov
pop
inc
xchg
mov
mov
jnp
adc
mov
xchg
pop
push
lahf
pop
ret
cmp
cmp
pushf
aaa
nop
cmp
ja
fs
pop
pop
data16
or
fwait
dec
pushf
pusha
stos
call
cmp
pop
sahf
mov
add
loop
mov
lods
pop
mov
js
cmc
sub
mov
push
inc
gs
std
inc
jo
je
dec
lock
mov
cmp
dec
jle
sar
imul
pop
and
test
add
push
loop
jo
cli
jl
ljmp
stos
mov
cmpsl
push
bound
dec
dec
mov
or
add
js
shrl
mov
sahf
enter
lods
fcomps
lds
inc
jb
add
or
or
outsb
sub
rcl
mov
shll
hlt
xor
sub
sub
je
add
cmc
insl
push
in
sbbb
pop
mov
lods
popf
sti
cmpsb
push
loopne
pop
cmp
subb
nop
js
add
test
pop
jge
push
in
pop
xor
fwait
scas
in
ret
sub
add
ffreep
dec
and
or
nop
bound
mov
inc
pop
mov
jmp
in
push
adc
mov
add
cmp
test
adc
or
in
jnp
push
testl
rorl
add
pop
jae
outsl
inc
push
fdiv
lea
popa
daa
pop
inc
outsb
push
xchg
jo
mov
in
rorl
rcrb
movsl
rolb
rcll
out
mov
pop
cmp
cmp
push
or
pushf
sub
cmp
add
add
stos
popa
mov
push
in
and
add
enter
xlat
add
and
pop
inc
xchg
sti
inc
cmp
aam
jbe
ror
ret
add
pop
mov
sbb
fists
dec
movsl
mov
sbbb
push
add
cmpsb
pop
add
pop
rorb
call
pop
cwtl
test
pop
cmpsl
push
jl
arpl
fadds
roll
bound
cmp
mov
les
sbb
xor
and
mov
ret
mov
sahf
js
add
mov
mov
add
adc
jnp
ja
jae
inc
push
cld
and
ret
sub
sub
ljmp
dec
ret
jo
cmp
jge
adc
mov
push
cmp
dec
jno
cmpb
js
sar
addr16
push
adc
dec
mov
add
mov
pcmpgtb
xchg
or
push
and
mov
outsl
ret
fidivs
or
pushf
add
sbb
add
sub
mov
ret
fsubl
dec
sbb
test
mov
stos
jmp
mov
and
out
test
pop
adc
fistpll
rolb
mov
cltd
push
cld
mov
xchg
stc
add
push
lods
mov
add
dec
sbb
push
mov
into
mov
lret
pop
ficoms
add
ja
lcall
sahf
mov
add
loopne
outsl
add
fs
jns
decl
push
cs
movsl
push
aad
lret
mov
jge
add
jmp
gs
mov
pop
push
clc
cwtl
mov
xchg
jae
jl
jne
test
jbe
sbb
leave
test
or
push
push
mov
btc
or
sbb
adc
mov
das
ja
sbb
lret
dec
ret
adc
inc
push
rcrb
sbb
fmull
sub
sub
and
push
xchg
bts
push
bsf
test
leave
mov
adc
add
cmpsb
lds
add
ret
daa
rolb
mov
push
sub
adc
pusha
jbe
jge
push
push
mov
adc
inc
ljmp
call
dec
or
jnp
add
pop
pushf
adc
movl
bound
add
into
or
adc
in
test
add
push
mov
pop
inc
push
andb
sub
outsb
and
xchg
push
jno
repz
xor
dec
iret
orb
int
cmp
call
loopne
mov
aaa
lret
addb
lock
lock
mov
sbb
outsl
push
test
movsl
mov
push
addl
in
xchg
cmp
or
mov
sti
imul
jmp
repz
gs
push
fisttpl
lcall
add
mov
das
insl
loope
add
mov
pop
out
and
mov
cwtl
jnp
mov
jecxz
add
ljmp
lds
xor
inc
inc
mov
jnp
insb
lds
test
xor
mov
mov
or
data16
pusha
push
lds
ja
or
push
mov
sub
add
xadd
mov
gs
jns
sti
lods
cmp
sbb
mov
sbb
lcall
xchg
fistpl
or
fmull
ljmp
or
add
pop
fs
push
lahf
sub
xor
push
rclb
bound
fisubrs
mov
sbbb
ret
cmp
lods
push
cmpsl
dec
mov
inc
xlat
pop
jbe
into
sbb
fldenv
aam
scas
add
pop
cmp
add
lds
aam
shr
inc
icebp
xchg
dec
cli
push
pushf
out
mov
test
jp
dec
mov
scas
add
push
stos
daa
add
mov
jmp
push
push
add
aaa
inc
pushf
addb
loopne
dec
fistps
cltd
or
mov
mov
pop
insb
adc
sbb
or
xchg
pop
mov
lcall
dec
xorb
leave
inc
cwtl
ljmp
icebp
xchg
xor
mov
pushf
add
xchg
stc
call
jle
test
pushw
xchg
push
dec
mov
add
add
call
ja
add
loopne
jp
jne
inc
push
pop
hlt
xchg
add
xchg
sbb
insl
lods
pop
or
add
xchg
xor
inc
mov
inc
scas
rclb
cmp
mov
or
push
imul
add
sub
out
xlat
lods
dec
arpl
xor
bswap
int3
adcl
jnp
mov
int3
cmp
xor
popa
repnz
movsb
adc
fnstenv
xor
mov
int3
into
pop
or
cld
test
cmp
aas
in
cmpb
mov
jmp
mov
inc
pop
dec
or
xchg
les
inc
je
outsl
or
orb
addl
test
or
xchg
add
pop
xor
ja
fwait
xor
push
xor
inc
dec
pop
shrl
pop
push
pop
mov
pusha
jecxz
xor
cmpsb
add
sbb
in
sbb
sbb
dec
and
and
cltd
push
or
and
or
jecxz
mov
aad
sub
mov
push
sti
mov
jnp
jmpw
icebp
mov
lret
pop
inc
pushf
dec
scas
dec
pusha
push
popa
cmp
cltd
adc
adc
add
and
sbb
jmp
push
mov
sub
xchg
inc
cwtl
jg
cmp
movsl
jmp
pop
rol
dec
jmp
xchg
or
scas
sub
dec
ds
dec
nop
lods
outsb
fiadds
or
mov
and
push
lock
xor
sub
btc
xor
jns
mov
aam
jo
ljmp
test
or
cmp
lcall
xchg
enter
popa
aam
sbb
leave
popa
lret
lods
mov
xor
jbe
shlb
in
sub
cs
add
inc
mov
mov
lahf
xor
inc
dec
mov
mov
or
pop
int3
add
aaa
xchg
push
into
cmc
je
fisubs
sub
pop
incl
xchg
cmp
or
fs
push
jge
add
nop
pushf
dec
pop
add
div
test
outsb
test
lret
dec
fwait
or
sbb
aad
jbe
mov
and
imul
push
test
add
out
insb
orl
inc
insl
add
lods
popf
hlt
cmc
pop
dec
loope
clc
add
cld
or
adc
fdivrl
lret
scas
xchg
xor
loopne
or
add
sub
in
and
dec
jle
fldl
adc
jno
xor
lret
push
mov
adc
push
test
test
xor
inc
or
aaa
inc
push
cmp
addr16
push
push
ret
mov
add
pop
in
ret
repnz
xchg
sbb
pusha
mov
out
pop
xchg
adc
sbb
lds
jp
and
ret
shlb
fnstsw
mov
pop
jmp
lahf
mov
popa
popa
inc
movsl
cmp
and
test
aaa
push
sbb
mov
add
imul
mov
or
jnp
mov
pusha
mov
jo
mov
cwtl
add
dec
imul
and
mov
xor
ficoml
jbe
lret
int
jecxz
xor
or
loope
mov
subb
or
in
les
out
jg
iret
pop
inc
pusha
pop
test
loopne
or
gs
xchg
pop
xchg
push
jmp
in
push
pop
lds
jno
in
inc
xor
out
ljmp
inc
push
sbb
xor
adc
inc
stos
movsb
loopne
jge
pop
add
sbb
pusha
test
add
out
pop
cwtl
dec
jne
jo
loope
lcall
sahf
add
rolb
stc
outsl
mov
add
sub
xchg
in
pop
lock
inc
sub
ljmp
cmp
add
push
and
leave
jns
mov
push
dec
mov
aam
nop
iret
dec
rorb
mov
cmp
popa
cmp
sbbl
jg
pop
arpl
inc
pop
xchg
fnsave
mov
add
stos
sarb
mov
mov
xor
data16
scas
cmp
hlt
pop
sarb
and
adc
cmpsl
mov
mov
xor
pop
int
shr
mov
adc
out
addb
adc
or
shl
xchg
mov
add
cmp
fists
xor
mov
ja
pop
push
push
rol
mov
in
int
and
outsb
imul
jl
pop
pop
stc
test
lret
pop
call
mov
pop
clc
or
sbb
mov
hlt
bound
fbld
int
inc
rcr
js
adc
push
dec
dec
xchg
hlt
add
add
cmp
and
movsl
add
sarb
add
out
xor
in
add
andnps
dec
adc
inc
jge
inc
mov
xorb
push
in
jo
inc
add
xor
or
jns
sbb
loopne
ljmp
jno
je
cltd
mov
push
adc
and
cmp
mov
or
cltd
jecxz
and
inc
fisttpll
popa
das
outsl
adc
inc
call
ja
cmp
mov
mov
inc
inc
cmp
sub
es
inc
movsb
pop
mov
add
adc
jns
andb
aam
ds
xor
mov
testb
hlt
jmp
xor
pusha
ljmp
xlat
lea
stos
pop
pusha
pushf
or
pop
loope
adc
call
xchg
shll
cmp
lret
pop
clc
mov
push
add
bound
mov
mov
mov
mov
les
or
imul
add
mov
rcr
call
jbe
scas
add
mov
pop
ss
add
icebp
mov
xor
mov
ficoms
in
or
and
aad
xor
mov
cmp
mov
or
push
fnstsw
imul
and
pop
aaa
ja
add
xor
pop
faddl
stc
sbb
and
adc
ljmp
rclb
jp
sub
lcall
xchg
sub
and
sbb
imul
push
add
ss
test
dec
or
test
in
cltd
mov
cmp
sub
sar
ljmp
cltd
adc
enter
push
insw
das
pop
shrb
popf
adc
mov
andb
or
inc
add
fwait
sahf
fsubrs
ds
dec
dec
or
xor
push
adc
xchg
icebp
add
addr16
adc
dec
cltd
pushf
and
pop
loop
cmc
pop
adc
ret
cltd
enter
add
push
dec
xchg
add
add
mov
mov
test
mov
add
ljmp
pusha
testb
mov
loopne
or
or
test
ljmp
pop
mov
xor
and
cltd
test
scas
std
pop
loope
add
lcall
int3
dec
loope
mov
jle
pop
test
mov
xchg
fiadds
enter
movsl
out
sbbb
add
pop
pop
or
add
addr16
loopne
rorb
cmpsl
mov
sahf
leave
mov
inc
push
fbstp
lcall
inc
mov
cli
add
sbb
push
mov
add
cmp
lods
ds
mov
sar
add
or
dec
out
add
inc
jg
xor
xor
arpl
add
ja
pushl
lcall
sub
sub
xor
adc
cwtl
sub
mov
imul
sbb
xor
pop
add
out
sub
sub
ds
add
add
mov
inc
and
clc
adc
pop
adc
roll
ds
stc
test
sbb
mov
mov
mov
mov
inc
out
mov
imul
int3
xor
test
adc
jg
add
cbtw
pop
mov
cmp
cltd
adc
faddp
pushf
or
popf
mov
add
mov
rcrb
scas
push
pop
shr
jo
add
or
add
cwtl
hlt
and
and
xchg
test
loopne
cmp
add
imul
rcll
xor
loope
test
pop
and
or
push
cmp
mov
clc
mov
int
xlat
xchg
out
push
and
pop
jge
sbb
cmp
jo
fimull
data16
stc
mov
rcrb
jno
sar
add
sbb
fs
iret
add
push
loope
js
sub
sbb
int3
rol
xchg
mov
in
pop
stos
add
pop
jg
dec
inc
out
pop
pop
mov
inc
push
cwtl
mov
mov
movb
inc
ja
push
movsb
pushf
xor
movsb
andl
popa
arpl
mov
scas
sub
mov
insb
mov
add
add
xor
mov
adc
and
aad
or
jge
adc
add
xchg
cmp
xor
add
andb
sbb
sbb
mov
ds
pop
je
lahf
add
addr16
call
in
mov
sub
out
inc
lds
inc
add
sub
adc
xchg
shlb
rcll
mov
inc
pop
inc
add
adc
xchg
ret
jne
jp
mov
cwtl
adc
xor
mov
xchg
add
jg
mov
dec
inc
add
daa
jno
rorl
lods
mov
out
insb
add
dec
rorb
push
sub
adc
stos
bound
xor
imul
loop
add
shll
rorl
xchg
mov
fiaddl
pop
jmp
fsubrp
loopne
mov
pop
lds
jmp
pop
push
cltd
lea
adc
mov
jl
and
out
fcmove
pop
ds
adc
js
out
lock
mov
sub
nop
or
pusha
out
xor
dec
rorb
pusha
mov
fisttpll
dec
dec
or
out
and
push
jae
push
inc
fildll
adc
test
inc
add
je
jae
jb
push
add
inc
adc
add
jne
xor
mov
loope
pop
popf
scas
cwtl
mov
out
fyl2xp1
mov
adc
cwtl
imul
in
cmp
testl
and
cmp
lods
loopne
mov
pushf
jb
out
loopne
pop
or
call
cmp
or
ja
cmp
ffreep
and
jb
and
cmp
out
fildl
aaa
and
ret
nop
inc
add
int3
out
in
pop
cli
rorb
mov
daa
push
add
sbb
clc
inc
decl
and
loop
subl
and
out
roll
cwtl
test
add
add
and
and
jmp
adc
test
outsb
inc
push
add
xor
jns
pop
shrb
push
xor
and
cs
mov
mov
arpl
add
xchg
inc
fs
pop
call
in
jns
into
lret
bound
ficoms
mov
pusha
push
pop
shlb
ret
add
mov
add
cmp
cmp
ja
push
inc
mov
pop
loopne
clc
add
xor
scas
in
mov
repnz
js
out
sub
aam
dec
xchg
mov
cmp
dec
sub
addb
pop
fcmovnbe
in
nop
shlb
and
add
xchg
insb
add
ret
cmp
add
lds
push
jns
or
adc
out
mov
enter
adc
inc
inc
adc
notl
daa
mov
leave
sbb
mov
jmp
xchg
enter
adc
add
xchg
sarl
sbb
loope
loope
mov
fwait
push
mov
pop
or
add
roll
add
xor
enter
loop
jnp
jae
add
movsb
push
paddb
inc
and
mov
mov
loop
add
xchg
icebp
pop
shrl
insl
js
sub
sbb
bswap
in
and
popa
inc
pusha
stos
shr
repnz
nop
mov
cmp
mov
dec
add
xor
add
pop
sub
dec
insl
test
add
push
jo
xchg
js
xor
inc
inc
add
in
jle
data16
mov
pop
xchg
inc
xor
mov
or
mov
pusha
jp
or
jae
add
stos
data16
ret
inc
fcomi
or
in
dec
incb
push
jns
add
and
icebp
mov
add
cltd
pop
mov
pop
mov
sbb
jmp
mov
add
fadd
adc
in
xchg
fmulp
cwtl
das
add
xlat
sarl
test
ficompl
sub
int3
mov
pop
sbb
add
sbb
xor
jo
hlt
dec
or
loopne
fdivs
cld
ss
add
inc
add
mov
dec
cmp
and
cli
into
jns
xchg
dec
out
add
sub
add
inc
xchg
les
adc
xor
xchg
push
add
xlat
jo
mov
push
lcall
xchg
cmp
add
je
movb
nop
fisubrs
add
cli
mov
add
imul
loopne
ljmp
int
and
pushf
jns
hlt
jno
jp
scas
add
sbb
sbbb
clc
jg
add
sub
jg
sbb
add
push
cmpsb
in
sub
add
psrlw
test
jmp
lods
stos
sahf
xchg
jno
and
leave
rorb
fs
mov
pop
xor
in
addb
and
rorb
cmpsl
in
cmp
xor
cmc
add
mov
je
add
into
sub
std
xor
jp
cmp
jnp
or
sub
or
sbb
jge
add
fidivl
or
sahf
push
nop
mov
mov
cmp
pop
icebp
or
add
xchg
cs
mov
mov
add
mov
cmp
xor
mov
cmp
out
add
adc
push
mov
mov
adc
add
sub
lock
jecxz
movsl
orb
test
cmpb
xchg
and
push
movsl
loopne
lds
in
out
and
mov
jle
out
mov
pop
movb
nop
pusha
dec
lock
enter
cmpsl
mov
jl
insl
adc
pop
xlat
push
sub
inc
push
or
aad
and
push
movsl
or
xor
das
cwtl
mov
cmc
leave
push
add
mov
enter
pop
stos
sub
test
fs
popa
dec
inc
push
shr
pusha
insb
sub
push
push
mov
adc
xor
xchg
xchg
xor
jno
mov
cmp
movsb
aad
sub
xchg
addr16
cmp
hlt
aam
jl
dec
pusha
adc
xchg
iret
roll
ficomps
add
jecxz
les
push
add
aad
mov
inc
push
xor
add
ss
mov
mov
fdivrl
imul
push
xorb
pop
mov
inc
xor
sbb
sbb
aas
out
mov
in
add
stc
push
lods
add
pop
lds
pushf
int
sbb
out
and
cs
or
add
xlat
jge
xchg
ljmp
mov
rolb
push
jmp
dec
int3
sbb
out
push
inc
dec
repz
mov
gs
cmp
mov
adc
or
xchg
je
cmp
hlt
test
and
daa
jge
ljmp
add
fcompl
xchg
rcr
adc
cltd
xor
imul
add
push
sub
add
jb
add
add
mov
daa
add
test
sub
or
in
rolb
bswap
cmp
out
clc
push
stc
mov
sbb
cmc
pop
sub
cmp
and
and
add
inc
mov
inc
push
imul
andb
push
insl
enter
aad
test
jl
dec
or
dec
lods
in
addb
jmp
jmp
in
adc
mov
push
cltd
call
or
movb
pop
sbb
adc
or
lods
faddl
sbb
repnz
xchg
xchg
leave
adc
andb
into
sub
lret
sbbl
add
dec
and
cwtl
mov
dec
adc
add
rcll
fidivrs
push
cwtl
adc
or
cmpsb
push
nop
add
mov
push
mov
mov
lods
jle
outsb
and
add
dec
push
add
hlt
add
addr16
in
adc
cmpsl
add
mov
test
inc
lods
xchg
push
push
popa
sub
adc
cld
idivb
and
icebp
push
cmpsl
test
sahf
inc
xor
scas
dec
lods
shl
fmul
test
cli
in
jmp
or
inc
inc
jae
add
mov
mov
cli
repnz
lcall
out
sbb
cmp
outsl
push
xor
into
shll
xor
cld
in
les
push
jo
xchg
out
cmp
shlb
rcll
nop
je
lds
cmp
repz
sbb
sub
sbb
inc
fdivrl
insb
jbe
nop
imul
pop
mov
and
adc
add
mov
xchg
mov
sbb
loop
add
mov
aas
fs
bswap
xchg
jne
pop
fldl
and
mov
xor
imul
jnp
add
pop
mov
and
roll
adc
cmp
add
fsts
inc
out
jmp
adc
rolb
insb
mov
js
dec
imul
out
sub
fadd
inc
nop
jl
mov
mov
push
xchg
sbb
shlb
mov
add
push
xchg
add
imul
mov
jmp
inc
cmp
int
sub
xchg
add
out
push
addr16
cmp
pop
cltd
fmul
add
lret
xchg
lcall
dec
xchg
cld
or
sti
or
xor
adc
aam
inc
xor
hlt
test
cld
add
outsl
sub
push
pop
lea
lock
dec
ljmp
and
mov
pop
addr16
mov
pop
arpl
dec
sub
and
inc
fisubrl
or
and
cs
test
push
inc
rolb
mov
ficoms
arpl
shrb
xor
mov
cmp
xchg
push
into
in
popf
or
mov
pop
test
pop
sbb
enter
xchg
nop
ficoms
dec
lock
or
push
ds
mov
stos
insb
pop
mov
mov
mov
seto
jmp
leave
adc
ds
sub
xlat
add
pop
add
loope
pop
cld
push
negb
imul
mov
pop
addr16
add
cwtl
pop
addr16
dec
js
jo
imul
mov
add
shlb
shrl
sub
les
rolb
adc
pop
mov
sub
mov
cwtl
cmp
cmc
dec
insl
pop
and
test
sub
and
cmpsl
aam
mov
xchg
add
jle
stc
add
cwtl
fnstenv
cmp
movsl
xchg
mov
inc
or
sbb
sbb
add
andl
mov
mov
mov
ljmp
cmp
sbb
push
scas
mov
leave
mov
xchg
shlb
xchg
push
xor
cmpsb
mov
hlt
adc
push
adc
cwtl
xchg
add
cmp
pop
push
push
daa
pop
cwtl
and
lock
xor
fidivrs
or
movsl
push
filds
cmpsb
dec
mov
mov
out
xchg
add
mov
jge
nop
les
jns
adc
sbb
mov
xchg
test
test
add
iret
jbe
sub
sbb
popf
push
es
inc
inc
out
movsl
out
and
lods
das
popa
dec
xchg
or
adc
inc
dec
shlb
xchg
jge
add
fidivl
jmp
popl
test
or
pop
hlt
fdivrl
cmpb
loopne
in
cld
push
inc
dec
imul
enter
in
fadd
xlat
sub
mov
pop
aaa
push
or
cmp
ret
add
push
dec
test
jmp
mov
imul
fidivrs
cmp
pop
lds
loopne
push
pop
xorb
pop
jne
nop
add
push
popf
mov
cmpb
xchg
call
inc
cltd
mov
sub
cmp
rcl
call
add
sub
add
xchg
adc
dec
jp
push
add
add
test
fistpll
add
dec
add
mov
sahf
fnstcw
mov
jns
arpl
cltd
dec
rcl
add
enter
jecxz
adc
mov
mov
mov
mov
push
sahf
shl
imul
in
mov
push
jg
jmp
outsb
pusha
adcb
push
dec
and
and
in
lods
shll
enter
enter
adc
pop
iret
bound
mov
shll
cwtl
lret
mov
cmp
int3
push
ret
xor
hlt
aaa
adc
jo
in
and
out
push
mov
in
gs
add
add
aam
movsb
add
cs
jb
and
mov
bound
dec
xchg
mov
mov
jle
cwtl
dec
add
mov
cmc
mov
out
arpl
adc
push
cmp
dec
add
sbb
lock
xchg
pop
gs
cltd
daa
adc
and
jle
add
push
mov
add
dec
xchg
pusha
arpl
cmp
daa
or
in
pop
ftst
xchg
mov
es
add
fs
adc
into
push
mov
loope
jae
add
or
in
mov
xchg
nop
lea
cmp
inc
mov
out
mov
inc
shl
adc
push
add
out
adc
or
roll
dec
xor
lds
enter
inc
add
jl
mov
xchg
imul
pop
push
loope
add
icebp
cmp
mov
or
mov
push
jp
jle
std
mov
add
pop
push
fs
and
aad
adc
mov
add
out
call
sbb
pop
sarl
in
and
jmp
or
sub
add
xor
dec
sbbb
shlb
xor
or
xchg
adc
pop
int3
shlb
add
inc
in
mov
les
or
shrl
in
ljmp
adc
pop
pop
and
jp
and
lahf
enter
cmpsb
add
ficoms
jle
loopne
cmp
cwtl
stc
fadds
scas
and
add
stc
loopne
dec
add
pop
mov
inc
inc
jp
incb
sbb
ljmp
addr16
jae
mov
push
jl
loopne
seto
jg
adc
mov
fsubrl
test
loop
add
mov
rcrb
in
mov
and
fsubrp
push
mov
lcall
enter
xchg
aas
jnp
add
ljmp
and
ret
hlt
add
xchg
add
icebp
jnp
jg
or
mov
lahf
jno
cmpsb
add
scas
and
fwait
je
push
pusha
cmp
mov
call
lret
imul
sbbl
push
adc
pop
sarb
outsb
cltd
test
aad
add
push
jnp
movsl
pop
add
and
sbb
sbb
roll
sbb
mov
push
add
jnp
xor
adc
jmp
pop
ja,pn
lods
mov
sbb
insl
cmp
mov
stos
cltd
add
sub
cmp
mov
add
ficoms
sub
enter
dec
lock
pushf
popa
push
inc
lods
sbb
xchg
mov
je
jns
ds
sahf
cmp
psrad
mov
inc
inc
adc
rorb
inc
cmc
fsubrl
cmp
jbe
in
mov
add
enter
sbb
or
jno
jnp
cltd
and
push
stc
les
cmc
jnp
test
add
inc
pop
inc
dec
sbb
das
fdivs
mov
hlt
inc
pusha
dec
sub
in
mov
xchg
cmp
ret
jno
daa
dec
and
pusha
nop
std
mov
inc
outsl
out
pop
fptan
xor
jno
enter
mov
pop
mov
xor
inc
and
ror
aam
jg
xchg
flds
ljmp
fs
jl
sti
mov
shrb
dec
call
test
rcr
jg
add
add
mov
add
lds
dec
pop
pop
arpl
add
repz
pop
call
hlt
out
jmp
or
orb
arpl
in
ja
pop
jb
or
inc
scas
add
lock
xchg
imul
lods
data16
je
xor
and
das
lods
cld
add
in
sbb
dec
cmp
add
adc
ds
daa
fadds
testb
or
add
dec
mov
mov
push
fbld
or
das
add
out
in
and
jo
xor
xchg
dec
inc
mov
add
or
adc
pop
lahf
pusha
xchg
adc
pop
sarl
and
jp
add
jne
aam
add
push
sub
jmp
sbb
adc
cmp
or
testb
fchs
out
adc
add
jg
ss
outsb
push
es
add
movsl
mov
mov
xor
sbb
stos
add
adc
testb
mov
mov
adc
add
or
and
pop
addr16
add
fisubrl
add
mov
pushf
add
push
loopne
daa
and
push
and
inc
rorl
cs
push
add
cmpsb
mov
or
pop
inc
cwtl
cmp
lods
aas
or
filds
pop
push
sbb
pop
add
inc
daa
inc
cmp
xchg
data16
lock
jno
mov
dec
mov
and
xchg
shll
xor
lock
mov
push
push
loopne
jge
pop
gs
in
mov
sbb
hlt
int3
inc
movsb
sub
mov
lods
add
loop
cltd
mov
ret
mov
in
or
mov
sub
cmp
outsb
mov
jl
iret
add
ret
pop
sbbb
pop
inc
adcl
jns
loope
ljmp
sti
lock
movsb
and
jnp
mov
and
pop
scas
sub
mov
xor
out
ds
and
sub
in
loopne
cltd
or
add
mov
dec
out
mov
loopne
inc
adc
push
loop
push
shrl
call
mov
icebp
xchg
pop
add
pop
adc
shrb
pop
xor
fisttps
insl
jnp
mov
test
addl
dec
mov
adc
cli
push
pop
in
add
mov
hlt
outsl
jno
test
adcl
and
xchg
sub
sti
cmp
adc
push
add
adc
adc
test
cld
out
in
sub
inc
add
lock
fdivr
inc
adc
pop
dec
sbb
dec
xchg
push
ljmp
cmove
pop
into
lea
stos
shlb
mov
xchg
adc
or
nop
loopne
in
push
sbb
adc
ss
cld
add
es
in
sub
and
pop
jl
push
dec
pop
add
fldenv
mulb
adc
sbb
and
es
out
mov
inc
add
pop
out
xchg
rcr
xchg
add
push
xor
mov
xor
int
push
sbb
mov
or
cwtl
mov
je
frstor
mov
adcb
cld
mov
add
inc
jl
xor
cmc
cmpsl
data16
push
xor
in
in
sbb
xorb
lret
enterw
xor
imul
mov
sbb
jp
lret
dec
xor
enter
xlat
cmp
add
pop
push
adc
int
cmc
mov
dec
mov
sbb
push
outsl
stos
add
cmp
xchg
add
rclb
inc
add
call
pop
hlt
test
pop
ljmp
xor
pusha
pop
inc
in
faddp
int3
xor
or
and
xor
jbe
xchg
add
sbb
adc
xchg
stos
nop
sarl
fistps
aad
add
jge
or
pusha
mov
out
jmp
add
mov
rcr
hlt
scas
inc
ds
repnz
push
cmp
add
xor
xchg
nop
push
pop
jle
in
in
imul
icebp
aaa
add
dec
push
mov
dec
push
loope
cmpb
dec
add
xchg
mov
add
and
cwtl
pusha
cmp
mov
mov
ljmp
icebp
popa
inc
js
pop
stos
dec
lcall
and
mull
popa
inc
movsl
inc
xor
sbbb
cmpsl
pop
push
andl
std
stc
shr
mov
lahf
fistpl
mov
or
dec
xorb
jge
fcomps
push
arpl
bound
incl
sub
jnp
xor
shl
or
mov
popa
xchg
xchg
jl
mov
sbb
add
mov
shl
add
mov
jo
in
out
loopne
add
mov
add
jnp
adc
mov
sub
jle
repz
pop
or
arpl
mov
insb
xor
dec
std
and
outsl
loopne
sub
add
and
dec
xchg
dec
xchg
addb
jnp
mov
add
mov
lahf
xchg
sub
mov
ret
cmp
push
push
inc
cmpsl
push
and
jne
xor
add
arpl
cmp
enter
cmp
cmp
mov
setg
push
dec
add
pop
lret
out
add
in
fildl
loope
sub
jno
cmc
mov
and
shlb
adc
jae
imulb
lahf
gs
mov
jbe
adc
push
out
add
sahf
out
and
push
mov
outsl
fucomip
call
test
ss
test
sub
and
loope
xor
cmpsb
addl
add
jae
push
loope
push
pusha
cwtl
mov
shll
mov
inc
pop
xchg
icebp
jecxz
jmp
ss
rcll
leave
arpl
xchg
cmp
mov
lds
mov
fiadds
stc
sub
test
fwait
add
cmp
pop
mov
mov
add
xchg
or
pop
adc
jl
or
mov
jge
add
cli
sub
jns
repz
push
add
aas
cmpb
dec
adc
stc
sbb
adc
iret
mov
add
aad
mov
xor
adc
and
sub
mov
jmp
test
std
shlb
in
jge
add
aas
nop
les
scas
cmp
add
cmpsl
inc
cs
cmp
push
movsl
hlt
adc
add
or
hlt
add
popf
add
mov
lahf
in
out
cmp
add
xchg
xchg
add
xor
mov
add
xchg
push
jecxz
push
mov
inc
cmpsb
inc
pop
cmp
jne
sub
lret
push
mov
xor
pop
mov
aad
mov
and
hlt
shlb
into
adc
ret
sub
sub
jne
jge
or
sahf
mov
pop
pop
push
inc
or
test
insl
out
push
sub
adc
or
sub
push
mov
sbb
add
leave
xchg
movsl
mov
sbb
inc
ds
mov
pop
mov
sbbl
jae
and
jmp
shr
adc
jb
cmpsl
push
or
aaa
cmpsb
mov
mov
push
xor
pusha
mov
adc
jmp
inc
movsb
fisttpll
ds
and
mov
mov
xchg
adc
imul
inc
mov
hlt
dec
rcll
add
loope
pop
sub
push
je
push
arpl
push
ret
stos
fcmovne
add
and
repnz
scas
jl
inc
push
adcl
dec
adc
out
and
dec
xor
add
or
adc
lods
cmpb
pop
lds
popf
adc
pop
or
decl
inc
or
pop
or
nop
mov
add
fbld
in
add
jne
pop
lods
pop
jl
add
mov
out
enter
movntq
adc
iret
popa
loope
add
psllq
es
sub
outsl
mov
xchg
mov
cs
stos
movsl
or
in
mov
inc
daa
add
xchg
add
pop
jns
jge
or
sub
ljmp
mov
int3
and
and
pop
sbb
stos
push
cmp
and
xchg
nop
call
sub
mov
jl
dec
mov
cwtl
pusha
arpl
movsl
add
fdivl
leave
pop
je
xlat
ljmp
add
mov
pusha
call
cmpxchg
mov
loopne
pop
xlat
add
rcll
sub
aas
lock
ss
push
pop
fidivrs
daa
xchg
sub
inc
sbb
ficompl
push
mov
jmp
out
pop
add
in
jo
sbb
loope
xchg
adc
mov
jmp
inc
sbb
cs
add
pop
and
rclb
rclb
mov
fmul
pop
jecxz
add
add
mov
adc
sub
lock
add
mov
adc
shlb
mov
loopne
xor
and
dec
repnz
faddl
dec
addb
xor
xorb
in
dec
gs
stos
mov
nop
jne
adc
mov
shll
cmp
das
jl
in
add
jecxz
enter
arpl
pop
clc
lahf
stos
imul
loop
add
or
add
mov
cwtl
add
dec
mov
mov
adc
mov
mov
xor
or
in
mov
ds
aam
lcall
aas
jo
lock
clc
add
bound
in
daa
addr16
in
aaa
pop
mov
dec
xor
or
sahf
mov
sub
jg
aam
repnz
rcrl
js
ret
jecxz
mov
mov
add
xor
jno
adc
or
mov
mov
sub
pop
inc
xchg
insl
pusha
nop
sub
loop
add
daa
mov
jmp
fldpi
cmpb
add
lods
push
pop
pop
mov
lock
xchg
std
sbb
mov
mov
inc
in
xchg
push
and
cwtl
cmp
pop
add
adc
aas
jp
popa
inc
inc
mov
mov
js
xchg
les
daa
cmp
sub
push
lds
inc
pusha
sbb
dec
mov
outsl
pop
out
pop
add
jnp
sti
call
jp
adc
mov
push
popa
and
dec
xchg
add
sbb
pop
lods
xor
push
cmp
jne
inc
shll
xchg
cmp
clc
adcb
mov
or
lcall
add
or
icebp
jae
cmp
andb
jecxz
push
repnz
mov
lods
sbb
cmp
fcompl
jl
add
and
pusha
das
adc
enter
repz
xchg
xor
adc
test
fsubs
add
pop
add
loopne
pop
dec
pusha
xor
jg
aad
xor
mov
push
jmp
jno
adc
mov
add
push
cmc
mov
xchg
jg
inc
popa
imul
sbb
add
shrb
rcrb
shrb
loop
add
inc
dec
add
mov
xor
mov
pop
test
andl
inc
xchg
lcall
mov
stos
and
pusha
iret
sub
mov
mov
sub
pop
dec
cmp
cmpordps
sbb
leave
das
jno
dec
inc
mov
push
mov
addps
imul
cwtl
je
and
push
shlb
pop
add
lahf
xchg
dec
roll
add
mov
push
pop
stc
hlt
test
xor
add
iret
push
fists
test
repz
cli
jno
inc
call
sub
enter
adc
add
filds
and
movb
mov
inc
fidivs
les
jae
rcrl
rcrb
sahf
pop
mov
push
rcrb
and
add
inc
jg
mov
outsb
add
mov
ret
xor
ds
xor
push
pop
mov
add
lahf
enter
add
imul
cmp
inc
les
pop
test
sbb
fcmovb
push
add
sub
and
mov
sidtl
xchg
dec
insl
and
adc
mov
pop
outsl
xchg
adc
int3
xor
adcb
aaa
fbld
mov
rol
xor
xor
enter
aaa
push
pusha
push
jno
fidivl
testb
test
adc
push
mov
push
fnstcw
mov
adc
mov
sbbb
test
sbb
xor
cmpsl
in
add
into
leave
add
cwtl
mov
lock
xor
ss
les
adc
adc
jae
ja
sub
adc
inc
inc
mov
in
movsb
repz
cmpsl
icebp
aaa
or
fstp
mov
xor
test
pusha
add
adcl
jmp
mov
push
xchg
ss
pushf
sbb
pop
jle
cmp
xor
andl
ljmp
adc
loop
ss
dec
add
lret
jne
in
add
scas
lea
call
push
mov
nop
mov
xchg
fidivrl
clc
addb
lods
fsubr
aas
xor
xor
das
test
dec
sub
mov
mov
sub
push
stc
add
pushf
in
add
clc
in
rcrl
jg
sbb
aam
push
mov
int
add
adc
cmp
xorb
push
test
xor
movsb
cmc
lock
movsl
hlt
ud1
popa
xchg
sub
int3
jge
adc
xchg
add
xor
arpl
nop
xor
pusha
idivl
xchg
and
mov
sub
out
rclb
add
in
inc
cld
divb
jecxz
loop
les
fcoml
add
pop
jns
ss
orl
int3
sbb
bound
shlb
add
mov
fwait
inc
xchg
sbb
icebp
stos
loop
lcall
add
ret
fmuls
mov
es
add
xor
stc
dec
sbb
push
lock
add
jp
mov
mov
sbb
outsl
sbb
pop
js
push
aam
add
add
inc
mov
js
insl
xor
gs
xchg
mov
lods
mov
rclb
inc
repz
sbb
sub
sub
leave
ret
cmp
mov
mov
ja
jl
add
inc
cmp
adc
xor
adc
dec
xchg
mov
or
cwtl
and
adc
sub
pusha
add
mov
mov
push
sahf
jl
dec
or
add
clc
mov
push
mov
aam
js
mov
pop
sbbb
out
and
xor
mov
test
push
add
inc
pusha
jns
stos
pop
mov
xchg
roll
and
or
and
lret
and
pop
pop
jb
cmp
xor
testl
in
mov
cmp
or
xor
jmp
xchg
shll
jle
push
mov
adc
jl
mov
inc
xchg
and
shlb
int
jg
xor
test
jge
inc
sbb
xchg
das
add
jns
stc
adc
jl
fimuls
add
cmpsb
sub
jmp
mov
add
cmp
mov
jecxz
out
jb
push
js
add
xor
loopne
clc
test
xchg
addr16
jmp
jl
cmpsl
pop
stos
push
out
mov
jbe
loop
push
rolb
adc
sub
add
and
je,pt
notl
scas
dec
adc
dec
adc
outsl
addr16
xchg
xchg
push
and
mov
pop
fwait
imul
lret
pop
outsl
inc
dec
xchg
aas
in
sbb
sub
movsl
dec
xor
add
mov
vmread
inc
or
sub
aas
loop
xchg
addr16
cmpsl
xorb
filds
arpl
adc
add
xor
sti
jo
adc
adc
insl
add
xchg
inc
mov
xorl
sbb
mov
mov
es
ja
add
lods
mov
loop
adc
push
testb
dec
mov
loope
ffree
lods
jae
xchg
in
sub
cmp
jp
loopne
ljmp
out
es
push
adc
cmp
ljmp
xor
add
push
add
sbb
int3
into
add
stc
ret
adc
inc
cmp
xchg
nop
sub
stos
push
xchg
add
or
addl
pop
jne
xchg
dec
push
lds
stos
push
call
adc
mov
aad
dec
sbb
or
add
add
movntq
out
js
jp
add
loope
mov
jns
cs
arpl
jmp
mov
mov
push
ret
cwtl
cmpb
call
iret
mov
jno
jl
out
adc
add
and
sti
nop
sub
cmp
mov
and
mov
add
mov
cmp
adc
je
add
adc
lea
push
cmpsb
test
push
int3
fisttpll
mov
ret
mov
outsl
shlb
movsl
call
mov
push
sti
cmp
mov
bndldx
lret
popa
push
push
test
dec
cmc
jle
xlat
cwtl
mov
test
add
fnstsw
movsl
add
sub
sbb
mov
cltd
les
sahf
scas
int
repz
lods
jecxz
js
cs
sub
add
sbb
add
jl
in
sahf
cltd
je
or
movsl
or
aas
and
out
xchg
sbbb
movb
testb
iret
out
call
call
addr16
push
leave
insl
sbb
add
lods
inc
fdiv
outsl
fsubrp
in
xlat
add
mov
pop
jge
or
bnd
shll
or
jl
push
decl
mov
add
inc
popa
xor
addb
inc
loope
and
nop
or
cmp
adc
add
mov
sub
xor
in
adc
add
cmp
enter
rcl
lea
xor
pusha
cmp
jl
cmp
rorl
or
pusha
adc
mov
lret
scas
lahf
dec
sar
out
add
subl
adcb
clc
mov
push
jecxz
and
pop
add
dec
shrl
cmpsb
cmp
adc
pop
cwtl
and
test
ret
rcl
aam
add
dec
jg
inc
lea
test
insl
das
jo
sub
scas
pop
cwtl
push
popa
pop
ja
in
mov
cmpsl
xchg
nop
enter
adc
vmovntps
add
int
mov
mov
clc
movsb
xlat
in
and
out
or
and
push
cmp
in
aam
cs
mov
push
aaa
daa
iret
es
aam
mov
adc
lock
test
data16
jge
ficoml
add
sub
mov
popf
fcoml
aas
jl
test
jle
insb
mov
in
int3
and
arpl
jnp
add
inc
dec
cli
daa
adc
repnz
mov
or
inc
and
and
out
jb
add
cmpsb
push
push
movsl
add
sti
test
sub
enter
stc
jae
aaa
inc
push
and
sub
push
sbb
addr16
lock
js
pop
mov
rolb
das
sub
movsl
adc
jecxz
rolb
lahf
arpl
pop
jnp
fsts
add
ret
clc
in
je
out
mov
lods
sub
add
icebp
dec
mov
and
int3
aam
fildll
jl
rolb
xor
xor
push
mov
sbb
lods
xor
jb
cmc
sub
fdivl
add
rclb
add
test
add
push
popf
and
cmc
out
push
bound
inc
pop
adc
sbb
push
nop
call
add
mov
cmp
push
sub
rcl
mov
test
mov
shl
jno
cltd
into
push
shrb
mov
incl
in
mov
mov
pop
subl
add
pop
repnz
fcoml
lea
stc
adc
jae
jno
iret
call
xchg
xorl
pop
dec
imul
stos
test
fcoml
push
std
pop
xor
jbe
pop
add
xor
int3
pusha
rcrb
lahf
fsubrl
loopne
loop
pop
sti
xlat
jp
aas
xor
mov
aaa
jecxz
add
cwtl
jno
and
cmc
daa
push
pop
push
mov
movsl
inc
cmpsb
pop
cmpl
or
test
int
or
and
or
and
pop
out
sub
aam
test
lock
popa
add
push
adc
ret
inc
mov
out
mov
subb
jl
push
aam
aas
out
add
in
mov
mulb
fdivrs
and
add
mov
dec
aad
and
inc
fmuls
sbb
adc
roll
insb
pop
mov
sbb
fidivs
sbb
popa
jecxz
lods
push
pop
add
loop
pop
cmp
mov
dec
nop
adc
dec
or
and
add
xor
push
and
xchg
add
inc
dec
gs
cmp
aaa
rorb
in
test
aad
and
out
push
lret
pop
sub
inc
cwtl
mov
xchg
pop
add
les
jecxz
aas
and
push
int
inc
dec
cmpsl
or
xor
add
popa
sti
ret
icebp
sbb
pusha
inc
repz
hlt
inc
jp
mov
add
test
add
push
hlt
sar
stos
pop
and
into
push
icebp
sub
imul
in
mov
loop
fcoml
dec
add
add
jmp
int
add
hlt
sbb
jg
or
fmull
adc
out
test
nop
jnp
mov
dec
xchg
into
add
lea
mov
and
pop
jo
lods
inc
sti
xchg
stos
push
shrb
and
outsb
add
jbe
xor
loope
jne
mov
mov
shlb
inc
lds
cmp
and
inc
push
out
je
or
jle
hlt
imul
mov
jl
xor
add
cli
cmp
jp
push
popf
dec
mov
outsl
mov
shrb
mov
mov
clc
adcb
push
adc
ret
pop
cmp
fildl
dec
out
pop
mov
aad
cmpsb
mov
and
test
xchg
or
pop
mov
xchg
dec
adc
add
or
cmp
aas
push
arpl
fstpt
add
data16
mov
fiadds
or
mov
mov
mov
jge
sbb
aas
inc
addb
ret
popa
test
popf
jmp
mov
or
pop
xchg
sbb
imul
push
jno
add
imul
mov
xor
int
clc
add
lcall
jnp
jl
and
fildll
fldt
dec
add
insb
jle
add
or
pop
sub
add
or
je
cld
push
sarb
das
add
lock
mov
add
mull
sahf
cltd
loopne
cmp
mov
out
mov
in
add
daa
cmp
add
dec
sarl
das
add
daa
or
add
pop
shlb
and
mov
mov
add
mov
jno
stos
pop
inc
loopne
mov
mov
lret
add
ljmp
sub
push
push
call
int3
pop
mov
inc
sub
sub
add
cmpb
jne
movb
mov
push
push
push
push
call
add
mov
pop
pop
ret
push
mov
pusha
mov
mov
shr
mov
mov
jmp
xor
add
add
dec
or
jne
popa
leave
ret
push
adc
pop
inc
jmp
insb
push
movsbl
pop
bsf
mov
sub
shl
btc
not
adc
push
btc
pop
inc
test
lea
sub
mov
bsf
lea
mov
mov
push
jmp
aad
shl
movsl
testl
pop
xadd
test
add
mov
xchg
lea
shld
push
shrd
test
shl
mov
pop
bswap
push
mov
mov
mov
mov
btc
pop
movzwl
imul
xchg
repnz
adc
shrd
push
mov
not
shld
pop
inc
inc
mov
neg
add
xadd
adc
bt
xadd
add
mov
sar
test
add
adc
inc
shld
sub
not
mov
test
shld
push
mov
btc
push
shld
lea
bsf
shld
pop
shld
mov
adc
and
cmp
push
pop
add
bsf
mov
cmp
xadd
add
lea
bswap
mov
dec
and
push
sub
neg
adc
adc
test
xor
xadd
rcl
rcl
sub
inc
inc
adc
push
mov
xadd
pop
xadd
mov
cmp
bsf
sub
btr
btr
xor
add
sar
movsbl
add
xadd
imul
dec
xadd
mov
push
mov
imul
sub
inc
mov
adc
test
test
add
lea
mov
shld
and
cmp
mov
cmp
shld
adc
xor
test
btc
btc
add
bsf
xadd
add
mov
add
inc
adc
sub
adc
sar
xchg
lea
lea
push
push
sar
sub
inc
test
pop
test
add
test
mov
sar
not
adc
push
mov
neg
pop
imul
test
adc
mov
imul
push
shl
shl
imul
pop
imul
mov
shl
bswap
imul
add
adc
lea
shld
add
dec
test
mov
test
mov
add
rcl
cmp
inc
sub
inc
movzwl
btc
mov
cmp
bsr
xor
adc
test
add
mov
xadd
not
add
shld
add
xadd
imul
repnz
xadd
mov
cmp
dec
neg
sub
mov
add
mov
test
bsf
btc
add
rcl
shl
bswap
jmp
xchg
mov
add
lea
btc
add
btc
adc
xor
xor
sub
add
shrd
sbb
shrd
dec
bt
add
dec
jmp
sti
add
xchg
test
mov
shrd
dec
add
xadd
add
mov
rcr
mov
add
imul
bt
bt
sbb
add
test
bsr
xadd
add
mov
mov
lea
mov
add
dec
rcr
dec
test
add
mov
push
xor
add
xchg
xor
add
mov
xor
lea
add
test
add
imul
mov
imul
mov
xadd
pop
push
push
push
add
cmp
mov
shrd
push
bts
pop
mov
inc
not
xor
mov
add
jmp
inc
and
add
jmp
hlt
shld
and
inc
add
bts
mov
sub
bt
shrd
bt
pop
push
and
shld
mov
imul
popl
shld
shl
bts
lea
shld
sub
inc
inc
sub
inc
jmp
add
dec
pop
add
imul
mov
sub
shld
sub
bts
inc
mov
bts
sub
xchg
bsf
mov
repnz
xchg
xchg
movzwl
jmp
test
add
jmp
cmc
jmp
lods
mov
mov
sub
and
jmp
lea
adc
cmp
cmp
imul
sub
lea
bt
add
and
shl
movzwl
add
mov
bt
mov
add
shld
shl
bsf
add
and
mov
not
not
bts
inc
cmp
bts
movzwl
test
xchg
add
not
bts
jmp
sub
add
bts
sub
lea
jmp
jno
ljmp
inc
dec
sub
shl
mov
cmp
bts
and
sub
shl
sub
mov
mov
neg
xadd
bts
sub
xadd
inc
bsf
push
add
cmp
cmp
sar
sub
lea
ror
bt
dec
bt
sub
inc
mov
add
bsf
movzwl
mov
and
dec
imul
mov
bt
cmp
mov
repz
shld
xor
shl
and
mov
sub
bsr
xadd
sub
test
mov
sub
and
cmp
jmp
scas
test
dec
sub
test
xadd
xadd
mov
sub
neg
push
sub
test
mov
movzwl
bswap
repnz
test
mov
movzwl
xor
test
mov
inc
sub
mov
imul
repnz
jmp
add
test
cmp
shld
bts
not
popl
and
mov
shld
cmp
bsr
test
neg
xor
bsr
mov
dec
dec
sub
movzwl
repnz
dec
sub
shld
shl
lea
sub
neg
movzwl
sub
imul
imul
sub
xchg
mov
mov
and
xchg
sub
mov
dec
mov
sub
inc
xchg
imul
sub
shl
and
and
sub
sar
and
mov
not
xchg
sub
test
pop
add
repz
mov
dec
xor
neg
pop
xor
movsbl
dec
mov
xadd
mov
mov
pop
pop
sub
jmp
bound
shl
out
sub
bsf
rcl
not
test
add
mov
pop
cmp
jl
jmp
jmp
xchg
shld
test
not
cmp
xadd
test
mov
push
repnz
pop
rcl
add
adc
imul
add
test
mov
shl
pushl
imul
mov
pop
xor
test
push
shld
xor
pop
repnz
sub
imul
repnz
xor
adc
inc
xor
btc
shld
shld
inc
mov
add
shld
mov
mov
btc
sub
xor
btc
mov
add
shld
shld
test
imul
rcl
add
mov
shl
xor
add
bsf
btc
shld
add
shl
mov
xor
not
mov
add
adc
inc
xor
sub
bsf
xor
xadd
imul
mov
imul
imul
or
mov
jmp
lret
mov
jmp
inc
sbb
dec
xor
shrd
dec
shrd
bswap
imul
add
xchg
test
add
repnz
inc
bswap
movsbl
add
or
rcl
add
or
ror
jmp
xor
arpl
jnp
add
test
sub
mov
sbb
rcr
sbb
xor
shrd
sbb
imul
sub
shrd
mov
mov
sub
lea
or
mov
sub
adc
imul
xor
xadd
cmp
xchg
inc
not
test
xor
sub
xor
shld
sub
shld
sub
btc
lea
imul
rcl
xchg
sub
inc
btc
bts
sub
shld
test
adc
bsf
repnz
imul
inc
test
not
pushl
inc
and
inc
movzwl
pop
bts
bswap
add
mov
add
mov
test
add
shld
add
bsf
sub
bts
xchg
xchg
bts
bts
and
push
pop
mov
push
mov
push
add
shrd
mov
imul
pushl
pop
sub
bsf
pop
push
add
adc
add
sub
cmp
shrd
xchg
dec
pop
add
push
add
lea
test
mov
sub
mov
bswap
mov
add
bsf
inc
mov
sub
rcl
bswap
pop
add
pop
cmp
jae
inc
jne
jmp
mov
inc
jne
xor
bswap
test
sub
neg
pop
pop
push
lea
bsf
pop
sar
dec
and
push
pop
and
inc
push
mov
push
add
shrd
bsr
sar
not
add
sub
bswap
repnz
inc
sub
add
dec
dec
imul
mov
sub
jmp
int3
add
rcl
mov
sub
repz
imul
xadd
mov
add
rcr
mov
sub
mov
movswl
bt
add
lea
mov
sub
dec
xchg
add
pop
add
mov
xor
dec
pop
dec
jne
xor
xchg
and
pop
xor
adc
inc
shld
bsr
pop
xor
or
mov
repnz
add
imul
mov
shld
test
sub
bsf
add
inc
mov
sub
bts
not
ret
cwtl
xchg
and
sahf
jne
mov
push
lea
jmp
pop
pop
fwait
sbb
std
rcl
xchg
loop
jb
loop
xchg
or
mov
jae
mov
fsubl
loopne
sub
mov
xchg
das
push
mov
push
test
in
sub
cld
ja
hlt
inc
outsb
mov
and
lret
inc
cmp
adc
enter
aam
sbb
fdivrl
pslld
xor
ljmp
adc
and
mov
mov
insb
fwait
adc
fisubs
pop
int
rorb
in
je
dec
pop
dec
adc
les
dec
mov
cmpsl
or
lds
mov
mov
sbb
dec
fidivrl
jmp
int
xchg
xlat
sbb
in
xrelease
jb
arpl
jns
xchg
inc
popa
push
cmp
cmp
and
inc
mov
or
push
mov
and
out
pop
sbb
gs
lea
sub
test
xor
loop
xchg
out
fstps
or
add
insl
je
sub
add
push
aaa
mov
fisttps
and
mov
insl
fbstp
or
pop
loop
mov
scas
pop
and
insb
test
lret
xchg
mov
sarl
push
mov
mov
cmp
cmp
out
inc
out
loop
icebp
xor
push
xchg
aas
xor
mov
popf
inc
lea
in
xor
push
inc
push
test
xchg
xchg
jo
and
lds
cmp
mov
rorl
xchg
int3
int3
aam
dec
adc
add
icebp
call
sbb
sbb
lgs
mov
sub
jg
lock
ljmp
in
or
test
jmp
xchg
mov
push
mov
push
cld
xchg
push
cmp
mov
mov
movsl
std
add
outsl
jbe,pt
dec
xor
outsl
lret
sbb
xchg
push
pop
andb
xor
cmp
lea
sbb
jp
inc
mov
push
add
insl
out
xor
add
outsb
test
jmp
mov
mov
repz
aaa
aam
jecxz
cmp
fistl
lret
cli
push
lods
cmp
shl
sahf
jnp
or
das
or
add
lods
xchg
fisubrs
xor
fwait
jbe
in
push
nop
aaa
stos
shlb
outsb
inc
inc
push
inc
in
sub
xchg
push
mov
ja
add
jge
in
sub
insb
fmuls
in
ret
addr16
mov
in
push
add
dec
cmc
sbb
pop
outsb
sub
push
sub
cmc
mov
inc
inc
jge
rcr
ret
lret
mov
xchg
and
data16
daa
adc
mov
ss
sbb
popf
clc
fcoms
push
mov
push
sahf
mov
push
je
jnp
ret
fcoms
or
cmp
je
and
mov
dec
sbb
mov
sbb
add
xchg
cmc
add
push
testb
or
add
leave
testl
push
inc
stc
add
add
jne
add
xor
add
in
cld
add
test
incb
xor
incl
dec
fdivrp
add
add
test
add
into
add
fmuls
add
adc
add
add
push
add
add
scas
or
mov
daa
or
lock
add
or
sub
inc
sbb
add
add
or
add
les
add
adcb
or
adc
inc
mov
add
add
adc
add
popa
pop
add
sbb
sbb
and
sbb
pop
push
sbb
je
sbb
nop
xchg
lods
inc
sbb
add
mov
pop
add
and
cmp
and
push
stos
and
jo
and
mov
