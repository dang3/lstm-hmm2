int3
mov
add
add
add
cmp
or
add
mov
add
add
add
call
mov
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
or
add
or
add
add
or
add
or
add
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
mov
add
mov
add
mov
add
dec
add
push
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
add
add
add
add
ljmp
aaa
sti
rclb
jecxz
test
and
or
mov
jl
jne
stc
mov
inc
daa
dec
outsl
inc
sub
or
inc
inc
das
lar
add
rolb
fldt
lock
pop
cltd
cmp
jle
aad
pop
stos
push
rcl
bound
or
push
fdiv
sti
ss
xchg
add
and
iret
add
mov
movsb
mov
adc
mov
and
iret
imul
add
dec
add
push
data16
movsl
inc
and
mov
xchg
cmpb
add
lds
inc
and
cwtl
mov
and
sub
mov
adc
les
dec
pusha
fwait
xor
adc
test
mov
xchg
and
mov
adc
jo
fcoml
aaa
es
int
into
or
in
mov
jne
insl
ds
sti
xor
aaa
mov
push
fsubrl
xor
mov
add
adc
aam
sub
add
dec
cmpb
sub
sbb
sti
mov
mov
in
iret
add
sub
or
mov
fwait
rorb
jmp
getsec
test
and
popa
mov
in
mov
push
mov
cmovo
inc
neg
movsb
rcll
sub
xor
popa
in
jae
imul
loopne
push
or
add
xor
mov
aad
ss
std
lods
scas
lret
push
aas
cwtl
divl
sub
push
inc
add
push
ret
subb
dec
mov
sub
dec
pop
push
inc
mov
insl
mov
addb
pop
push
mov
sub
out
roll
lods
mov
mov
ret
add
push
aad
add
dec
hlt
mov
sbb
xchg
add
popa
or
add
js
sub
insl
or
add
and
xlat
push
pop
mov
ss
insl
mov
arpl
xor
pop
les
pop
aad
ja
shll
mov
fimuls
hlt
test
cmpl
aam
test
les
es
mov
pop
xchg
mov
imul
shl
insb
xchg
adc
push
out
sbb
sbb
pop
adc
loope
jmp
mov
add
pop
mov
mov
push
sbb
push
jg
pop
fdiv
cltd
wrmsr
fisubrl
xchg
shlb
sub
mov
rol
pop
pop
sarl
jg
mov
cs
inc
movb
outsb
inc
dec
inc
pop
mov
pop
sbb
push
fnstenv
inc
cmp
adc
ja
dec
lcall
js
push
bound
outsb
mov
sub
in
ljmp
xlat
std
scas
cmpl
loop
or
or
adc
and
inc
pop
in
loopne
add
cmp
in
cmp
inc
push
push
sbb
dec
mov
jl
mov
jp
aam
mov
sub
pop
movsl
lds
or
decb
gs
fs
xchg
outsb
nop
mov
fists
loopne
fcomps
jbe
cmp
push
xchg
sub
cmc
enter
push
sbb
cli
dec
push
xchg
cmp
bound
cmp
int
insl
repnz
int3
inc
sbb
mov
cmp
outsb
push
rcl
adc
rcll
int3
or
pop
rcl
xor
xchg
xor
ret
sbb
dec
add
lods
jmp
push
loopne
aam
xchg
insl
lcall
enter
ret
cmpsl
addl
sub
shlb
inc
xor
push
add
mov
or
inc
add
addr16
pop
xchg
insl
bound
negb
test
sub
push
inc
sbb
jecxz
push
mov
cld
mov
repnz
stos
xchg
push
adc
push
cmp
jo
inc
rcll
pop
nop
push
or
push
cmp
sbb
pop
mov
rorb
sbb
ret
or
lock
push
mov
fld
out
es
popf
push
stos
push
lcall
add
sbb
aam
push
jb
inc
movsl
and
inc
ss
fucomip
or
in
stc
adcb
cwtl
das
sub
testb
mov
adc
std
sub
push
jae
movsl
pop
sub
xchg
or
fildll
rorb
shll
enter
rcl
orps
stos
inc
push
ret
repz
mov
add
add
and
pop
add
pop
std
mov
mov
push
add
mov
inc
fwait
pop
sarl
xchg
mov
or
out
scas
xchg
cwtl
sbb
daa
xchg
ror
dec
push
add
dec
pushf
mov
cmc
mov
cmp
adc
incb
popa
mov
hlt
jl
adc
call
dec
cmp
push
add
mov
orb
xor
mov
inc
mov
shlb
sbb
ss
mov
test
adc
pop
cmp
push
add
sahf
and
shlb
xchg
push
leave
sbb
jo
xchg
or
and
pop
push
pop
je
jae
jae
mov
js
lds
je
jns
dec
add
cmp
negl
mov
push
js
into
push
inc
les
xchg
outsl
mov
imul
xor
test
sub
aad
or
inc
test
in
sbb
adc
inc
ja
sbb
mov
mov
mov
in
xor
inc
lea
mov
xor
icebp
mov
dec
imul
call
shr
iret
fldt
iret
cwtl
mov
fldenv
add
inc
push
add
push
mov
adc
dec
pop
xor
push
add
popa
adc
xchg
cmc
std
repz
inc
or
adc
sahf
xchg
mov
mov
adc
push
mov
mov
push
shll
push
jb
out
pop
add
cmp
in
insl
aam
in
shr
or
gs
nop
jge
and
xor
inc
or
enter
fwait
icebp
inc
fisttps
push
xor
test
test
mov
mov
ret
and
jb
push
jmp
andb
mov
xchg
jmp
inc
subb
mov
and
jg
sarb
shl
and
das
xor
clc
mov
loop
pop
adc
sub
xchg
sub
aas
ror
jno
mov
xchg
gs
pop
outsl
sub
mov
rcrl
in
lea
mov
leave
xor
sub
fsubl
add
and
mov
and
or
add
fwait
shll
into
movsb
mov
jge
rorl
push
add
inc
test
cmp
mov
push
mov
pop
jg
xchg
fldenv
mov
xchg
int3
imul
addb
cld
sbb
addb
mov
xchg
jnp
mov
xor
daa
pop
push
sbb
daa
jb
aam
or
stos
in
dec
xchg
mov
dec
cs
or
in
hlt
sub
push
push
and
flds
loope
movsb
mov
mov
rorb
repnz
sarb
mov
jne
imul
pop
test
jge
stos
dec
test
xor
in
pop
jecxz
push
imul
lods
jnp
popf
sub
and
cmp
xor
pop
movsl
mov
arpl
rcrb
pop
pop
gs
movsl
inc
xor
and
or
mov
mov
and
inc
add
sar
jne
sub
sub
sarb
sub
inc
pop
int3
push
push
jnp
push
mov
sbb
and
repz
stos
or
adc
jle
or
mov
stos
or
cltd
inc
cmp
mov
lock
rep
jmp
stos
ljmp
sub
inc
dec
mov
xchg
cmpsb
xchg
inc
hlt
sub
aad
test
inc
pop
mov
imul
push
and
xchg
rolb
sbb
pushf
xor
pop
sbb
idivb
add
pop
or
popa
mov
movsb
fisttpll
rorl
addr16
cwtl
aaa
push
push
push
shlb
dec
lods
shll
or
sahf
fucom
pop
mov
out
cld
mov
pop
adc
dec
in
adc
or
cs
lret
push
sbb
adc
push
mov
repnz
shrb
icebp
push
push
jne
adc
inc
mov
fdivl
ds
mov
pop
add
inc
sub
xor
mov
in
pop
inc
or
xchg
shll
cmp
and
popf
push
or
cmp
iret
movsb
jge
xlat
jne
xor
push
enter
out
stc
sbb
std
mov
lds
mov
test
sub
xchg
jb
sbb
pop
xchg
inc
ficompl
add
pop
sub
sarb
mov
rorl
aad
cmp
bound
sti
fwait
or
repnz
dec
sub
lods
mov
ret
lret
sub
mov
scas
out
bound
insl
xchg
aam
add
pop
pop
pushf
lea
fsubrs
or
dec
adc
cwtd
push
lahf
loopne
lret
lcall
add
push
sbb
sub
lock
lea
and
adc
mov
sub
int
cmc
inc
xchg
movsb
add
imul
push
lea
inc
loope
xor
or
pop
sbb
incb
inc
shlb
jp
int3
cmpsb
mov
andl
add
xor
mov
xor
icebp
xlat
subb
sub
xor
adc
jmp
cmp
cltd
sbb
imul
sbb
jge
mov
mov
aas
pusha
inc
push
xlat
js
ljmp
add
push
lds
sub
lods
cmp
clc
and
add
adc
les
pop
mov
pop
aas
nop
or
rcr
std
mov
adc
mov
int3
pop
mov
push
dec
mov
inc
push
test
mov
add
inc
dec
mov
loopne
add
sub
xor
add
outsl
xchg
pushf
das
adcb
cmp
xchg
xor
mov
jb
inc
sbb
xor
pusha
rorl
or
jg
lock
repnz
ret
loopne
stos
push
cmp
mov
test
cmpsb
lcall
sbbb
push
testb
xchg
and
pop
out
mov
jmp
loopne
xchg
jae
enter
adc
xor
jl
arpl
lds
sbb
mov
int
inc
rorb
daa
fmuls
jae
out
sbb
sub
popf
adc
fnstcw
dec
push
fstpt
dec
adc
inc
mov
out
inc
xor
sub
outsl
imul
adc
ljmp
repnz
in
or
sub
roll
inc
and
loopne
sbb
stos
push
inc
xor
add
xor
inc
mov
sbb
xchg
add
fsubr
add
xchg
popa
popa
push
inc
aaa
pop
mov
sbb
out
jbe
loopne
idivl
inc
cwtl
push
rolb
fdivrl
scas
leave
jge
scas
in
rcll
jg
jge
and
rclb
add
add
push
add
adc
adc
jg
sbb
lock
add
inc
les
loopne
sbb
pusha
cmp
push
sbb
xchg
inc
shrl
andb
push
sbb
dec
enter
xor
out
mov
push
sbb
jno
mov
lahf
sarb
daa
mov
push
enter
or
loope
fcoml
jb
adc
jmp
push
pop
in
adc
push
dec
mov
out
inc
into
mov
push
sbb
insl
mov
pop
lods
aaa
add
sbb
sbb
push
mov
sti
adc
add
pop
jecxz
inc
aam
sub
test
addr16
sub
push
mov
rcll
cmc
xchg
cltd
push
push
add
pop
jnp
add
subb
adc
jo
inc
xlat
jecxz
push
test
movsl
imul
gs
subl
push
in
leave
xor
mov
stos
jns
cs
aad
mov
xchg
mov
mov
add
push
popf
adcb
into
and
push
sti
jge
pusha
xchg
push
push
fcoms
test
stos
imul
and
xchg
shll
call
and
stos
push
push
fnstsw
xchg
cwtl
je
insb
mov
out
aaa
mov
mov
and
fdivl
shrl
xchg
add
push
ss
mov
das
and
imul
push
fists
mov
pushf
inc
or
out
fstpl
pop
jno
in
or
push
orb
sti
sbb
dec
imul
cmp
jae
adc
mov
rcll
lock
ljmp
ds
ss
movsl
divb
push
mov
idivl
adc
and
or
lods
push
shlb
inc
dec
xor
nop
cmp
test
push
fcomps
mov
mov
mov
or
pop
and
fwait
sti
bound
sub
cmc
scas
test
pop
pop
or
mov
push
gs
mov
ret
insl
sbb
cwtl
hlt
shrl
pop
sub
psrld
in
fwait
sar
sub
sbb
mov
unpcklps
sub
dec
cwtl
jg
jge
inc
push
and
popa
fdivs
mov
ljmp
pop
lret
sbb
dec
add
andb
sbb
pmaxsw
cmp
hlt
push
mov
xor
mov
cmp
imul
pop
movsb
in
scas
fwait
movsb
pop
mov
mov
pushf
pop
add
and
mov
jp
or
bnd
popa
pop
outsl
mov
xchg
cmp
add
dec
or
mov
adc
ss
pop
lcall
adcb
jb
push
out
mov
or
out
ret
and
repnz
cmp
jno
mov
paddd
xor
adc
int3
lret
stos
dec
jae
jbe
push
lods
lock
sub
adc
mov
ja
stos
outsb
pop
mov
enter
imul
inc
insl
sub
mov
popa
sub
shrl
xchg
push
pushf
in
or
and
sti
mov
mov
xchg
fsubrl
stos
push
mov
rol
hlt
mov
ja
ds
jg
adc
lcall
xchg
adc
xor
mov
inc
mov
push
shr
scas
cmp
shrl
lods
and
jl
add
int3
or
xchg
sbb
or
clc
mov
lock
cli
pop
xchg
test
inc
inc
sahf
es
icebp
sub
xchg
inc
std
xor
insl
cmp
cs
jae
mov
loop
jno
fwait
sub
std
clc
sub
sti
cmpsl
mov
stos
jmp
icebp
sub
inc
loopne
ret
mov
ja
push
popa
pop
pinsrw
cwtl
mov
jle
cwtl
in
jbe
pop
stos
stc
sti
inc
cmpsl
ja
in
hlt
pop
sbb
xchg
xchg
cs
lock
cmpl
sbb
mov
inc
sbb
inc
xor
sub
jg
or
add
cmp
pop
add
adc
push
call
xor
xlat
lea
pop
nop
lahf
mov
andb
lods
cmp
sbb
bnd
pop
adc
subb
or
jp
in
sbb
or
or
mov
into
leave
insb
xchg
sahf
jo
inc
push
out
inc
push
mov
rolb
sbbl
inc
mov
jecxz
addb
ret
inc
push
dec
fwait
jbe
mov
or
xor
push
pop
pop
mov
jp
pop
shll
imul
cmpsl
xor
xor
test
hlt
sub
test
push
sbb
jle
jae
movsl
roll
test
pop
jp
idiv
mov
jge
xchg
ja
in
stos
pop
mov
mov
out
inc
mov
inc
pop
add
jle
int
adc
add
test
shrb
and
mov
incb
xor
inc
add
das
iret
pop
cmp
dec
xchg
sub
cmp
test
inc
daa
or
jnp
test
mov
mov
sbb
sbb
add
push
push
xlat
imul
popa
add
testb
inc
adcl
test
xchg
adc
xor
dec
sbb
xor
movsb
sbb
jo
mov
mov
fcmovu
push
jl
dec
mov
movsl
cwtl
scas
loope
xchg
cli
adc
adc
and
out
icebp
popf
xor
bound
scas
mov
adc
fldl
push
inc
pushf
or
loope
jno
pushl
jbe
stos
test
or
lods
or
dec
xchg
pop
jno
inc
nop
cs
out
psubsw
pop
mov
mov
sahf
shl
int3
nop
xor
popa
mov
pop
jo
gs
arpl
int
popa
xor
push
jo
jmp
mov
mov
pop
cmp
mov
pushf
jle
ljmp
jns
xlat
xchg
imul
dec
jle
add
mov
xor
xor
add
lea
addr16
in
xchg
cltd
pushf
add
sahf
mov
fstps
or
mov
cmp
push
popa
in
sbb
push
adc
into
pop
jp
inc
dec
arpl
ss
or
inc
dec
pop
jnp
mov
sti
jbe
xor
mov
adc
push
stc
scas
inc
jno
sbb
pop
xor
dec
mov
gs
xor
mov
jl
jbe
adc
shlb
xor
jle
jl
xlat
jp
pusha
dec
mov
aas
sub
outsl
xchg
les
xor
inc
mov
adc
xor
push
dec
pop
mov
push
pop
mov
or
pop
push
adc
push
or
xor
mov
mov
mov
in
cltd
mov
bound
stos
out
mov
mov
in
jmp
cli
and
mov
adc
adc
outsl
movsl
int3
fisubl
icebp
icebp
inc
ds
jo
jg
push
jo
mov
lods
stos
das
pushf
shll
testb
subb
pop
inc
scas
sbb
jle
pop
mov
fistpll
inc
sbb
sbb
add
xchg
into
popa
cs
pop
ss
shl
lcall
in
clc
in
or
bound
ja
add
add
xor
sbb
adc
mov
lcall
sbb
jg
add
dec
add
mov
in
add
pop
jno
pusha
ret
sbb
xchg
sahf
jg
cmp
jno
lods
bound
dec
push
or
insl
jl
pushf
sub
mov
dec
aam
or
inc
and
sub
lock
ret
xchg
iret
adc
add
popa
cmp
loopne
sub
mov
sub
fadd
sbb
jb
dec
mov
out
and
sti
int3
lods
outsl
mov
insl
jmp
push
add
dec
push
sbb
addb
jge
xlat
and
dec
dec
bound
push
adc
mov
inc
add
xchg
fs
inc
leave
fldt
or
pop
inc
cmc
mov
divl
insl
into
jb
adcl
mov
pusha
pop
mov
aaa
sarl
les
xchg
push
cmp
cmp
movsb
popw
dec
dec
and
nop
dec
dec
inc
push
addl
movsb
mov
and
pusha
pusha
pop
pusha
jnp
or
movsb
cmp
movsl
pop
mov
push
dec
js
or
mov
inc
shl
mov
inc
and
mov
sub
pop
xchg
out
fbstp
es
cmpsl
sahf
push
jns
out
pop
add
pusha
or
and
fistl
call
and
xor
sti
push
sbb
pop
sub
fwait
lretw
lret
scas
test
bound
adc
xor
addr16
pop
push
sub
push
sub
shrb
push
mov
test
or
rolb
shl
lcall
int3
pop
sti
out
mov
into
mov
sbb
adc
jmp
xchg
das
jb
aas
xchg
movsl
sub
sub
mov
std
add
xchg
adc
sti
scas
js
ja
jmp
and
bound
shll
idiv
shlb
rcr
pop
inc
cmp
add
mov
pop
lock
rorb
push
sub
dec
rolb
jl
adc
and
sub
sbb
cwtl
xchg
les
roll
loop
push
sbb
pop
nop
and
loopne
push
mov
lret
test
test
scas
mov
sub
fcompl
inc
mov
sbb
add
iret
cmp
call
pop
lahf
cmp
je
bound
sbb
push
push
sti
fisubrl
push
loopne
sub
cltd
loop
push
ret
and
push
push
push
sbb
movsl
sar
sbb
dec
jbe
stos
jno
mov
sbb
xor
cmp
push
enter
mov
sbb
js
inc
ret
mov
push
sub
mov
js
outsl
inc
out
repnz
shlb
cld
push
and
std
inc
cs
jp
mov
loop
bound
push
mov
adc
add
mov
repz
or
jl
and
lahf
add
mov
mov
clc
or
shll
xadd
ret
sbb
jno
jns
jns
pop
and
cwtl
xorb
push
lods
mov
testb
mov
leave
aad
push
movaps
lds
and
cmpsl
loope
jne
call
stos
jle
pop
insb
and
stos
or
xorl
jns
cli
mov
outsb
sbb
sbb
das
xchg
dec
add
insb
scas
xchg
sbb
jb
inc
xchg
inc
into
out
add
xchg
push
sub
loop
and
add
mov
test
push
and
inc
push
in
ret
sub
fildl
std
ja
mov
push
sub
push
imul
xchg
mov
sub
pop
push
mov
sbb
jl
push
je
jp
outsb
mov
xor
mov
cmp
pop
inc
lods
xor
or
scas
out
add
xchg
nop
orb
push
pop
and
xchg
mov
dec
mov
sbb
mov
decl
add
incb
ficomps
pop
fldcw
jp
sub
stc
call
jp
es
pop
push
fwait
jle
push
bound
ret
aaa
jae
push
add
sub
dec
xor
int
cld
adc
push
call
into
cmp
jp
push
mov
push
adc
in
cwtl
shl
mov
test
and
setae
das
inc
scas
into
add
mov
dec
mov
inc
out
adc
adc
es
mov
mov
adc
push
leave
add
and
mov
insl
loop
push
test
test
in
add
sub
outsl
mov
es
jno
out
sbb
arpl
xchg
aaa
jg
in
mov
sbb
loopne
xor
sbb
push
adc
dec
add
push
dec
rolb
test
cmp
dec
fcoml
mov
sub
or
lahf
cmp
test
push
and
xor
aaa
js
and
sahf
mov
stos
lods
add
cmp
into
hlt
fisubs
inc
or
clc
lret
jae
sbb
inc
pop
gs
aaa
push
jae
mov
jno
mov
mov
pop
push
dec
xor
pop
sahf
mov
adc
pop
xchg
imul
inc
bound
push
addr16
jne
adc
in
or
cli
fnstsw
mov
pop
pshufw
adc
loop
and
sub
cli
ret
fistps
mov
xorb
leave
inc
mov
cmp
fistl
aaa
fsubrl
stos
dec
mov
cwtl
and
jmp
mov
ds
ss
andl
jae
test
xchg
stos
or
jbe
movswl
pop
inc
xor
add
lds
ja,pn
and
aad
subb
cmp
fs
inc
imul
popa
ffree
jl
cmpsl
and
mov
pop
shll
ds
movsb
dec
pop
jno
mov
jnp
inc
dec
cmp
sub
or
push
dec
mov
loopne
and
ljmp
hlt
imul
loopne
rcrl
dec
push
faddl
add
inc
cs
imul
mov
inc
mov
push
test
popf
out
sbb
inc
pop
iret
cwtl
push
std
hlt
push
push
cmp
jbe
loop
shr
or
cwtl
pusha
mov
mov
add
push
dec
pop
out
sub
xor
sbb
mov
xchg
cs
cmp
mov
sbb
lock
jns
shr
cltd
rorl
push
push
cmp
gs
iret
push
and
inc
and
lret
xchg
push
sbb
push
mov
add
add
push
add
push
mov
clc
popl
stos
sub
or
addr16
and
xor
push
or
dec
mov
mov
fwait
pop
outsb
dec
aaa
stos
addr16
fisubrl
cwtl
inc
test
jp
std
mov
cmpsb
mov
jle
jl
dec
adc
xor
xor
xor
scas
sbb
or
rol
out
addr16
mov
je
jg
shll
lock
jo
lods
sbb
aaa
fs
pop
push
mov
push
incl
loopne
pop
shlb
nop
pop
xchg
xchg
mov
out
and
rolb
lret
push
push
das
or
mov
iret
add
xchg
xchg
call
or
mov
pushf
xchg
xorb
xchg
fsubs
shlb
jg
jmp
rcr
aam
mov
pop
lret
leave
jns
lock
push
jge
pop
mov
mov
pop
inc
mull
cmpsl
add
sub
lods
pop
lahf
in
sub
lahf
add
dec
and
mov
dec
jmp
push
inc
cmp
sbb
xchg
movb
sub
mov
dec
or
mov
jle
xchg
add
ljmp
mov
int
mov
dec
cmpsb
shlb
xchg
ss
pop
xchg
out
sti
xor
sbb
in
arpl
inc
aad
pop
lds
sub
cltd
ljmp
lods
arpl
cltd
loopne
loopne
pop
adc
mov
jg
aas
sbb
mov
stc
scas
mov
push
in
bound
rolb
popa
inc
inc
inc
xor
pop
rcl
jp
cmc
pop
xchg
stos
inc
jmp
outsl
mov
sbb
inc
loope
sbb
aas
jnp
xor
and
fcoml
mov
std
int
pop
aaa
push
mov
or
fcoms
mov
cld
decb
adc
mov
jecxz
and
outsl
sbbb
mov
xchg
cmp
xchg
mov
lcall
cltd
add
mov
jmp
pop
inc
and
mov
addr16
fwait
hlt
into
xor
cmp
adc
lock
push
xchg
mov
dec
jae
mov
loopne
inc
sbb
xor
inc
and
inc
call
sub
int
sbb
loop
add
mov
jbe
or
pusha
sub
push
inc
fbld
in
subl
sbb
in
imul
mov
sets
sbb
add
jae
jecxz
and
pop
add
jbe
outsl
js
dec
cltd
std
flds
or
aam
add
test
xlat
rolb
mov
push
push
lea
mov
jl
push
or
addr16
loope
and
in
pusha
cltd
mov
xchg
scas
add
xor
sub
and
fistpll
xchg
and
adc
adcb
add
adc
call
mov
aad
je
pop
nop
push
xor
clc
je
dec
std
jno
dec
test
sub
shlb
adc
in
push
xchg
xor
or
adc
cmc
lret
and
popf
mov
aas
icebp
pop
sahf
inc
inc
in
pop
or
push
push
addl
pop
jl
cmp
push
xchg
or
push
adc
jl
or
cwtl
add
loopne
or
add
mov
adc
add
inc
dec
add
fcoms
adc
pop
dec
pop
daa
mov
push
mov
inc
push
lret
add
or
xor
cmc
fdivr
add
add
lds
stos
lods
pop
sub
adc
jp
lods
push
mov
stos
sti
divb
out
pop
hlt
push
add
sbbl
push
loope
or
in
mov
lds
adc
and
and
cli
shlb
push
icebp
fldcw
jb
mov
mov
sub
fimuls
fsubs
daa
es
repnz
dec
add
rorb
insl
sub
lods
in
sub
imul
unpcklps
mov
cld
daa
bound
pushf
pusha
nop
out
inc
inc
jg
push
inc
cmp
push
xchg
movsl
mov
mov
outsl
xchg
aaa
test
hlt
xchg
add
jns
mov
jecxz
dec
jo
jp
adc
mov
jae
sarl
js
out
push
hlt
inc
pop
jl
rolb
pushf
adc
ret
stos
out
hlt
cmp
mov
inc
lret
aad
inc
pop
mov
pop
jns
mov
mov
iret
insb
push
outsl
push
push
cmp
scas
stos
loopne
enter
mov
aas
add
cmc
call
mov
add
das
rcll
in
addl
popl
cld
pop
or
lcall
int
cmp
jne
mov
movsl
dec
push
sti
mov
scas
jg
call
push
mov
andl
mov
add
insl
push
les
push
in
sub
cmp
or
sub
jge
push
fwait
lea
pop
pop
cmp
stos
ss
pushf
icebp
dec
xchg
mov
mov
roll
pop
ds
rcl
movsl
dec
sbbw
int3
ficomps
jb
out
pushf
push
cs
jne
in
cmp
adc
mov
mov
jns
cmp
nop
mov
xchg
jl
or
sbb
jno
into
xchg
fs
les
lods
fdivrs
or
test
push
sarb
add
into
adc
daa
xor
aam
xor
shlb
mov
mov
and
adc
lret
push
jo
push
lds
pushf
and
scas
mov
pushf
lock
push
mov
daa
adc
dec
addl
pop
into
or
out
or
pusha
jmp
sbb
mov
lock
xchg
in
add
fisubrl
sub
or
inc
fisttpll
sti
mov
fmull
add
add
insl
mov
mov
cmp
inc
xlat
imul
sub
mov
adc
pusha
sarl
adc
push
lock
or
pop
cmpsb
sarl
push
mov
sbb
cmpb
xchg
mov
and
push
xorb
loopne
cmp
push
xchg
xor
repnz
mov
cmp
and
nop
sbb
lds
pop
fidivl
stos
in
jo
lock
sbb
add
pop
cwtl
inc
and
or
and
mov
pop
add
cmpsb
mov
cwtl
and
inc
push
dec
lret
adc
jecxz
lret
ja
into
dec
sar
dec
pop
imul
push
sbb
stc
and
push
stos
stos
ret
fstpt
xchg
push
add
mov
fsubrl
in
ret
imul
add
mov
cwtl
daa
push
aam
adc
mov
mov
nop
push
inc
inc
fistl
aas
ljmp
inc
sub
adc
call
inc
mov
push
bound
and
sbb
cmpsb
jl
adc
mov
xchg
jecxz
pop
xlat
js
push
push
mov
cmp
es
push
inc
in
aam
add
test
shl
iret
jno
test
push
jae
in
jmp
xchg
insb
adcb
sub
popl
mov
xchg
ret
loopne
push
gs
inc
jo
loope
inc
fsubrl
rorl
pushf
outsl
push
call
repz
add
inc
mov
lods
jns
add
ret
cli
dec
push
les
pusha
dec
ja
shrl
jle
pop
fnstsw
loopne
add
push
add
jg
scas
dec
mov
sub
andl
arpl
push
mov
sarb
aam
mov
mov
in
pop
push
aaa
mov
mov
stos
dec
push
adc
jbe
ljmp
cmpsb
ljmp
fcmovu
mov
adc
shrb
jle
icebp
sarb
test
jg
hlt
inc
xor
inc
popa
xor
mov
dec
mov
jo
pop
mov
lods
or
sarb
inc
ja
pop
leave
aad
mov
jp
or
inc
clc
sub
clc
adc
dec
ds
stos
mov
gs
lcall
sub
out
mov
or
add
das
dec
shrl
cmp
jno
push
adc
mov
push
enter
or
rol
push
call
mov
and
into
movsb
lret
mov
cmp
push
jno
in
enter
push
rolb
xor
dec
mov
pop
adc
jb
mov
mov
sub
inc
pushf
cltd
jmp
dec
stc
rolb
imul
sbb
and
push
test
leave
and
push
pop
les
sbb
sub
inc
fmuls
adc
fnsave
ret
mov
sbb
mov
adc
cld
sahf
iret
xchg
ds
test
inc
jge
xchg
sbb
orl
daa
lret
jle
popf
push
jge
inc
xchg
adc
movsb
xchg
lahf
or
scas
cs
push
push
or
xchg
sbb
inc
adc
mov
xor
inc
repnz
mov
mov
jbe
in
sub
insl
and
icebp
push
shll
push
or
mov
sbb
movsb
jno
cld
sbb
out
rclb
sub
hlt
jecxz
add
leave
iret
mov
jbe
jae
out
mov
popa
das
add
in
add
pop
repnz
adc
adc
and
aam
in
lock
xor
test
add
mov
push
push
push
dec
mov
cwtl
inc
adc
sub
icebp
rcll
sarl
add
mov
sub
or
pusha
hlt
jmp
addr16
or
rcll
inc
in
mov
loop
push
and
ret
pop
fs
mov
cmp
pop
bound
and
int3
inc
out
ret
sbb
adc
mov
repz
incl
mov
pop
roll
add
sbbb
sub
fidivl
sbb
in
cmp
sub
movsl
pop
add
inc
test
jecxz
mov
xchg
xor
dec
rorl
or
dec
scas
sub
push
mov
add
mov
mov
cwtl
inc
inc
jb
ljmp
sub
inc
sbb
fwait
sub
pop
or
call
sbb
or
mov
mov
add
movd
inc
push
push
mov
sub
daa
aad
movsl
add
insb
dec
jnp
test
jg
popf
push
push
add
push
call
cmpsl
test
add
adc
mov
push
or
int3
inc
mov
inc
mov
xchg
vpsubb
cmp
cmp
pop
and
in
pop
mov
ss
andl
leave
outsl
arpl
dec
or
sbb
pusha
or
jne
dec
and
mov
js
int
jno
in
sub
es
add
rcll
jo
cmp
shlb
lret
pop
sub
scas
int3
int
insb
outsb
mov
push
inc
pop
sarb
sbb
dec
pop
cli
in
adc
and
sub
and
jmp
pop
rcrl
out
dec
cmpsl
jge
push
shll
bound
adc
ficoml
lret
adcb
into
cmpb
mov
mov
push
add
insb
xor
and
xchg
inc
hlt
int
sbb
arpl
test
leave
push
jo
lahf
add
mov
cmp
or
sbb
add
das
orb
cmpsl
and
push
adc
and
dec
or
xor
movsl
push
xor
inc
sub
add
mov
int3
stos
movsl
mov
cmpb
adc
pop
push
mov
in
mov
xchg
lods
mov
pop
subl
leave
xor
mov
cmpsl
mov
jae
roll
icebp
push
push
xor
je
xchg
movl
icebp
mov
pop
inc
mov
arpl
jg
cmpsl
sub
mov
enter
dec
sbb
je
scas
mov
dec
iret
lcall
push
adc
inc
adc
in
cmpsl
adc
add
pop
into
mov
movsb
fidivl
xor
movsb
sarl
je
lret
xor
cmp
mov
aas
xchg
dec
out
inc
clc
iret
pushf
jmp
sbb
adc
dec
add
jno
pop
jl
in
mov
jbe
rorl
and
adc
in
mov
dec
mov
jbe
shlb
push
push
pop
inc
fildl
mov
ret
clc
dec
andl
popa
sbb
or
pop
fs
sub
aaa
pop
fdivs
jl
or
pop
clc
dec
loop
xorb
scas
testl
and
push
mov
cs
hlt
mov
cmp
les
mov
nop
std
out
testb
test
mov
pop
xchg
aas
cs
stc
push
fs
scas
pop
imul
mov
xor
mov
xchg
cltd
iret
inc
cmp
xor
mov
stos
push
int3
dec
fistpll
sub
sbb
mov
outsl
incl
into
pop
or
lock
fidivs
jl
test
call
es
rol
jne
or
dec
fists
push
shr
or
pop
xchg
mov
mov
adc
cmp
lds
pop
repnz
out
xchg
js
push
test
mov
fists
js
and
jp
or
fcmovbe
push
in
je
jb
mov
adc
repnz
addr16
ljmp
lret
and
test
sbb
or
add
xchg
xchg
push
inc
xchg
dec
xchg
dec
je
xchg
dec
push
xchg
push
pop
push
bound
xchg
pop
push
jb
mov
push
jbe
jle
cwtl
jp
addb
mov
jl
cmp
mov
icebp
cmp
rcrl
jne
push
inc
and
sbb
or
inc
xor
sub
or
jp
sbbb
lret
sub
dec
pop
cli
cmp
pop
pop
mov
mov
stos
jp
nop
pop
out
std
inc
jg
mov
jg
sub
adc
pop
aad
js
inc
jns
repz
xor
dec
mov
aaa
push
jmp
add
adcb
pop
adc
sbb
sub
icebp
fwait
aaa
add
lret
push
sbb
pop
enter
adc
and
pop
int3
cmp
fdivr
add
mov
andb
bound
sbbl
jge
lds
ljmp
rclb
mov
aaa
loop
mulb
mov
test
mov
pop
jns
mov
sbb
and
inc
xchg
sti
pop
mov
add
adc
mov
mov
mov
add
cltd
pop
loope
adc
dec
mov
jmp
scas
fstl
jnp
aam
ja
and
aad
ficoml
or
sbb
test
sbb
call
in
shlb
adc
arpl
jne
lahf
rcrb
or
pop
daa
jo
mov
in
jb
push
ret
sub
in
leave
dec
add
xor
lock
loopne
mov
outsb
test
pop
mov
inc
in
rclb
outsb
inc
add
mov
adc
lret
outsl
stos
xlat
enter
sub
sahf
in
out
xor
js
dec
and
nop
loope
mov
dec
scas
lcall
and
sbb
sbb
stos
xor
and
xchg
jmp
cmc
inc
pop
lcall
lret
sub
les
xlat
cmc
gs
icebp
adc
push
mov
jp
insb
add
pop
mov
sbb
in
lock
fistpl
dec
popa
es
mov
sar
sub
negl
call
lret
push
sub
pop
cli
into
sub
out
lods
xchg
xchg
pop
rorb
mov
mov
jns
and
movsb
adc
adc
xchg
add
and
pop
lcall
cmpsb
cli
sub
imul
lods
pop
aad
std
jo
lahf
or
add
lret
loop
push
and
cltd
aam
jbe
iret
sbb
add
imul
mov
xor
dec
mov
or
insb
sbb
fidivrl
lahf
inc
outsl
adc
jge
in
ret
fadds
mov
and
test
mov
jp
mov
mov
int3
cmp
or
adc
movsb
cli
jl
repz
bound
xor
push
jb
lea
and
jns
int
in
jno
stos
mov
mov
into
lods
push
arpl
mov
loopne
inc
mov
mov
pop
xor
int3
and
out
cld
leave
mov
sbb
mov
pop
aad
fs
jne
or
jge
add
scas
adc
loopne
mov
or
ret
jbe,pn
mov
push
adc
mov
jbe
jae
addr16
mov
push
lock
cmp
movsl
shrb
jmp
std
mov
sub
sub
pop
adc
daa
xorb
and
pop
mov
push
xor
shrl
push
lret
test
or
es
mov
pop
mov
sbb
push
xlat
inc
ljmp
sub
loope
outsb
sub
jge
in
lret
pop
lea
cmp
lret
mov
add
arpl
mov
inc
xor
subl
je
das
insb
popf
sti
xorb
fs
cltd
sub
xchg
fs
mov
adc
push
and
sti
jns
push
push
hlt
lea
jns
adc
jb
pop
pop
pop
adc
es
nop
lahf
out
imul
dec
adcb
dec
call
sub
ret
int
stos
push
je
pop
pop
iret
adc
popa
xchg
cmp
mov
pop
lret
in
lret
aad
add
aaa
sub
xchg
faddl
fsts
dec
fidivl
ret
xor
and
pusha
dec
mov
popa
sahf
lds
xchg
dec
xor
jo
xchg
outsb
push
or
push
mov
push
mov
loopne
fcomps
add
pop
jmp
xchg
cmp
pop
std
or
cld
mov
sbb
cmc
cmpsl
outsl
dec
pushf
ret
rol
jmp
cmpsb
inc
mov
push
int3
jb
adc
bound
inc
roll
push
sbb
or
imul
sbb
adc
scas
or
dec
rcrl
imul
mov
das
fs
iret
sahf
push
jne
addr16
lods
je
or
jbe
pop
sbb
inc
or
jl
dec
sbb
fwait
sbb
out
xorb
adc
cli
inc
or
and
push
movsl
sbb
adc
cmp
pushf
dec
ficoms
xor
sub
add
fisttpll
jnp
clc
insl
or
int3
popf
test
push
cmpsb
push
inc
sub
sbb
cs
add
pop
lods
aam
inc
pop
es
sar
cwtl
inc
dec
out
xchg
mov
lahf
xor
mov
fldl
call
or
rcl
push
mov
cmp
mov
push
incl
fwait
sbb
imul
jp
or
sub
loope
shl
std
adc
mov
cmpsl
ljmp
int3
and
stos
lahf
push
je
fwait
pop
mov
repz
inc
and
add
gs
fisubrs
push
insl
push
push
enter
call
inc
iret
add
cmp
push
fcoml
push
adcl
xor
cmpsb
test
mov
lods
das
inc
mov
lret
xchg
out
fiadds
inc
jne
push
xor
sbb
stos
rcrb
andl
mov
movsl
xchg
rcll
call
inc
sub
pop
add
mov
jp
lea
pop
cld
das
testb
jb
mov
cmp
sub
sub
lock
adc
aad
jne
sbb
sub
jb
shrl
stos
arpl
ja
pop
cmp
and
lret
pop
and
add
mov
dec
add
fimuls
loopne
lahf
sahf
mov
or
push
call
negb
jle
test
cmp
xchg
cmpsl
push
pusha
out
mov
or
lds
mov
push
xor
fwait
cmpsl
jne
fcoml
popa
jns
mov
cmpsl
adc
lret
daa
ja
inc
xchg
movsb
pop
mov
movsl
in
pop
xchg
clc
cmpsl
push
in
sbb
test
cld
shlb
xchg
push
dec
jecxz
testb
out
adc
stc
push
ss
xchg
xchg
sbbb
lret
jne
mov
mov
std
and
mov
add
mov
lahf
fimull
lret
jne
jb
sub
aam
lcall
enter
data16
push
cltd
out
clc
inc
ljmp
pop
jmp
int3
into
xorb
xchg
mov
mov
and
push
ss
mov
bound
push
orl
add
and
jle
cmp
enter
movsb
je
andb
or
sub
loop
fs
notb
lds
mov
xchg
sbb
pop
imul
mov
loop
pop
fmull
inc
push
pop
call
inc
sahf
repz
mov
loope
adc
fwait
insb
out
mov
pop
loop
inc
sub
jo
mov
xchg
lock
testb
add
or
dec
adcb
jle
out
rclb
inc
sbb
adcl
add
jb
les
xchg
in
cmp
clc
jno
imul
es
add
lods
jge
xor
dec
cmp
imul
aaa
lea
fistl
jg
xchg
push
cmp
mov
push
cld
roll
loop
loopne
xor
cmpsb
insl
test
lds
jmp
cmp
push
and
aam
cwtl
in
cmp
push
lock
repnz
cmpsb
out
dec
lods
test
loopne
inc
mov
dec
nop
cmp
xchg
nop
jecxz
jle
sub
add
hlt
adc
loope
sbb
mov
push
mov
repnz
mov
test
sub
fcomps
xor
sbb
fbld
aam
xlat
xor
mov
js
push
or
dec
pop
cmpsb
jl
mov
test
push
enter
or
loope
lds
cmpsb
xor
and
jge
jecxz
adc
pop
lret
xchg
push
or
pop
into
jg
push
lea
loope
test
pusha
cmpsl
inc
adc
mov
fildll
cmp
push
arpl
inc
das
and
adc
fs
adc
cmp
jg
call
test
inc
dec
fmuls
insl
in
cmpsl
inc
dec
add
mov
cld
sbb
adc
sbb
mov
inc
hlt
adc
fsubrl
push
sub
je
xchg
cmp
decb
inc
mov
aad
push
cli
jp
dec
std
push
out
mov
xor
push
xor
in
mov
pop
fs
bswap
sub
inc
test
sahf
adc
lds
mov
aas
push
popa
insl
add
push
xor
cmc
lds
aas
push
ret
mov
push
std
add
out
pop
outsb
lds
inc
pusha
pop
jg
cwtl
mov
sbb
mov
jmp
sbb
adc
pop
jge
and
ret
or
xor
loopne
out
mov
mov
add
mov
pop
xchg
ret
stc
mov
test
xchg
andb
mov
push
or
test
fs
fs
nop
out
push
stos
cltd
lods
popa
and
cs
mov
mov
cmpsb
mov
xchg
mov
arpl
ljmp
jbe
xchg
mov
add
jo
xlat
mov
and
lods
jle
rcrl
push
push
lea
out
popl
inc
xorb
sub
and
xchg
dec
testl
push
xchg
popf
fs
lahf
push
xor
mov
cmp
aad
inc
xor
mov
aad
fidivrl
addr16
xchg
dec
je
repz
mov
aaa
pop
mov
dec
push
clc
mov
sub
ds
movsl
and
adc
xchg
fbstp
mov
add
adc
aam
loopne
inc
ficoms
jo
sub
lds
adc
aam
mov
adc
rcr
fwait
das
int
mov
xchg
or
nop
mov
inc
movsb
pusha
int
fsubs
dec
imul
icebp
mov
xor
stos
fnop
dec
jne
movsb
and
and
je
adc
sbb
dec
loop
out
bound
and
mov
in
xorl
inc
pushf
aad
rcr
sbb
fiaddl
mov
lods
ret
push
inc
xchg
sbb
inc
dec
xor
leave
mov
jge
je
jp
daa
and
xor
mov
arpl
bound
movaps
pop
mov
add
or
ljmp
mov
cmc
outsl
ljmp
sti
jae
mov
inc
cld
add
arpl
xchg
aam
in
dec
inc
cltd
mov
lea
xor
pop
bound
shll
lods
ret
add
or
sbb
mov
pop
push
push
daa
pushf
ljmp
mov
dec
add
mov
iret
ja
sub
push
inc
inc
ret
or
pop
xor
cmpsl
js
jmp
xor
sub
dec
shrl
cli
pop
adc
in
lea
mov
scas
jmp
out
int3
scas
pop
jne
scas
lods
mov
xchg
daa
adc
loopne
mov
mov
mov
ds
out
xor
sti
pop
nop
jns
or
xor
xlat
add
push
js
sbb
rcrb
in
sub
xor
push
add
scas
sbb
mov
and
xor
or
loope
xor
in
dec
inc
lock
inc
xchg
push
imul
sbb
ds
mov
mov
sub
jae
push
repnz
jbe
out
push
roll
mov
inc
mov
xor
sub
mov
xchg
scas
and
call
stc
rcrl
jle
sub
mov
xor
repz
add
xor
mov
sub
push
sbb
int
popf
push
mov
ljmp
popf
dec
dec
pushf
xor
jns
aad
add
sahf
lock
nop
adc
inc
add
lret
jl
dec
rorb
iret
push
push
push
dec
pop
and
jb
subb
xor
sub
rcrl
hlt
movsl
mov
xor
clc
into
dec
testl
adc
sbb
jo
bound
inc
mov
in
xor
dec
orl
test
aaa
xchg
push
sbb
loopne
shrl
inc
inc
and
jle
cmpsl
add
lods
jo
leave
fldcw
shll
sti
insl
mov
push
mov
fs
push
add
xchg
xor
adc
outsb
xor
mov
stos
adc
or
mov
cmp
fisubs
cmp
and
mov
movsl
orl
into
push
ds
jp
lret
hlt
mov
push
or
cli
jp
mov
int
lock
mov
cmp
movsb
mov
add
adc
clc
inc
dec
pop
xchg
enter
cmp
std
stc
sub
mov
xlat
fidivs
outsl
push
push
ds
fisttpl
add
mov
int
int3
imul
or
scas
shr
fwait
inc
dec
push
leave
in
push
jmp
push
cmp
mov
mov
xlat
cs
cmp
test
pop
dec
dec
lock
fisubrs
jp
adc
test
and
inc
add
cmp
push
int
gs
roll
mov
mov
mov
sub
popa
jb
shlb
inc
imul
dec
pushf
or
out
imul
mov
add
lahf
jecxz
lods
dec
jge
push
dec
fs
notl
or
xor
lds
jbe
cmpsl
jle
pop
dec
dec
rorb
push
das
into
cmp
and
mov
mov
xchg
and
ds
call
popf
in
sub
mov
mov
mov
cwtl
sub
cwtl
stos
cmp
dec
lods
adc
aad
sub
sub
cmp
lcall
jmp
sbb
lret
add
inc
push
popf
in
js
add
mov
fstps
cmp
xlat
and
xor
loop
inc
lea
sbb
aaa
pushf
xor
dec
sub
mov
mov
or
push
lods
push
add
pop
pop
test
adc
cmp
inc
xor
push
test
mov
mov
leave
inc
inc
call
shll
inc
int
push
inc
inc
adc
jb
mov
push
mov
sbb
jb
xchg
inc
or
pop
xor
push
lret
test
inc
cmp
adc
adcb
fwait
mov
and
movsb
fildl
jo,pt
push
push
lea
enter
xor
mov
dec
or
push
imul
stos
and
por
das
and
std
out
stos
or
push
pushf
lret
add
push
outsl
into
and
in
test
call
jge
shlb
jne
lds
sub
inc
fnstcw
push
xchg
push
test
popa
mov
pop
scas
push
sbb
mov
idiv
dec
movsl
int3
ljmp
ud0
flds
xchg
je
gs
std
dec
mov
xchg
or
outsl
mov
dec
clc
mov
std
inc
nop
in
push
inc
add
mov
pop
fmuls
cmp
lret
mov
bound
lret
cmp
mov
movsb
push
gs
or
xlat
jns
jge
mov
movsb
rcrb
cli
in
mov
jne
pop
enter
fs
sbb
jo
cld
rcrb
inc
ljmp
sbb
fcompl
mov
push
in
push
pop
push
aam
shr
push
and
popa
mov
cld
push
xor
jmp
push
mov
in
add
xchg
jge
pop
in
lds
je
push
shrb
and
out
xchg
in
mov
fwait
adc
clc
cs
adc
lcall
mov
shr
dec
ror
inc
aad
daa
adc
loop
lods
cs
dec
dec
sti
mov
pop
or
es
and
xchg
push
adc
or
sbb
or
xchg
and
push
stos
mov
in
imul
mov
imul
mov
xorl
ja
in
or
dec
push
adc
fidivl
in
outsl
test
push
mov
xchg
lret
mov
add
xor
stos
arpl
sub
mov
mov
aaa
cmp
aad
or
mov
or
jno
rclb
xchg
or
sbb
cltd
pop
lock
and
push
pop
jne
inc
or
mov
dec
mov
popf
pop
adc
mov
xchg
xor
jo,pt
xchg
mov
cwtl
jg
push
movsb
add
jb
andl
std
test
dec
fdivrl
push
mov
push
pop
cmc
adcl
adc
popf
push
mov
push
nop
ss
mov
das
push
int
xor
imul
out
hlt
sub
test
les
sub
testb
cmp
sbb
or
scas
adc
in
in
xor
xchg
addr16
loope
or
or
sub
mov
or
scas
dec
pusha
rcl
push
lods
or
mov
andb
lods
sub
adc
lods
inc
dec
sahf
mov
sbb
fidivrl
data16
in
push
xor
cmpsb
dec
and
cli
push
test
dec
stos
or
repnz
mov
outsb
aas
jno
sbb
push
or
jmp
adc
int3
or
mov
aas
sbb
add
pusha
dec
inc
push
fldpi
cmc
repnz
scas
test
test
test
call
jnp
ss
pop
mov
jbe
nop
sbb
jl
adc
pusha
cli
add
cltd
push
aas
mov
daa
add
and
stos
xchg
stos
rorb
in
sub
xchg
sahf
test
dec
cli
mov
sbb
and
int
mov
mov
adc
mov
or
mov
bound
lea
xchg
loop
inc
pop
or
ljmp
or
daa
adc
pop
scas
in
gs
loop
add
xor
dec
mov
stos
lods
test
mov
xchg
xchg
mov
jb
or
sub
pop
sti
mov
outsb
and
test
jl
addr16
out
arpl
push
push
cvtdq2ps
jne
testb
dec
add
cmp
xor
mov
movsb
repnz
je
xor
ret
mov
fsub
jb
stc
fbld
call
pop
movsb
fs
dec
push
jle
add
cmp
dec
mov
adc
push
or
adc
testb
pop
add
jne
xor
aad
lahf
jle
inc
mov
jle
jno
pop
mov
adc
sub
inc
mov
je
inc
mov
cmp
push
call
idivb
jg
mov
pop
repnz
push
jp
les
aaa
nop
xor
negb
jnp
out
dec
repz
jmp
xor
pop
cmc
mov
fcmovnbe
mov
decb
dec
je
or
jne
sub
pusha
gs
or
in
mov
ds
stos
es
pop
mov
jl
adc
outsl
sbb
aam
pushf
xchg
or
stos
push
aad
mov
hlt
mov
mov
xor
repz
adc
xchg
dec
jne
mov
arpl
jne
push
shll
mov
mov
mov
dec
enter
cmpsb
cs
dec
aad
ret
mov
pop
rcrl
push
bound
pop
pop
cmpsl
ficoml
jle
scas
adc
repnz
mov
push
sbb
jge
test
and
js
inc
aad
or
lds
push
jge
arpl
mov
sarb
xchg
test
shl
mov
dec
mov
push
mov
pop
xor
stos
sub
or
in
mov
adc
rclb
xchg
js
mov
lods
jo
into
jle
addb
cmp
in
push
test
pop
jle
or
mov
mov
sbb
mov
xor
jecxz
sahf
sub
imul
fcmove
pop
add
dec
int3
push
inc
push
push
mov
xor
arpl
dec
xchg
cs
jle
mov
push
mov
jp
lods
clc
ja
rcll
ret
xchg
ficoml
daa
jae
lods
lock
fdiv
out
leave
mov
cld
inc
addl
pusha
popf
sbb
lods
lahf
sbbl
pop
iret
mov
aam
out
stos
jge
add
push
andb
popa
nop
pop
aas
popa
ja
pop
lcall
pop
pop
mov
sub
lahf
mov
insl
pop
dec
sub
test
in
into
push
sbb
pusha
xorl
std
pop
xchg
push
stos
jecxz
mov
jle
lcall
push
jno
mov
cmp
aas
insl
outsb
addr16
loope
insl
test
subl
out
mov
sub
fisttpll
xlat
ficoms
lods
or
sub
mov
or
gs
mov
push
add
repnz
sub
sarb
and
sub
cmp
out
int
dec
dec
xlat
enter
cmc
pushf
adc
movsb
in
sub
cmp
push
clc
rclb
lods
ljmp
cmpsl
sbb
cmpsl
pop
mov
outsl
push
jmp
ljmp
and
scas
xchg
fs
push
cmp
jno
and
mov
dec
daa
mov
xchg
sti
sub
inc
loop
sub
jle
xchg
loopne
fdivrl
or
add
inc
sub
inc
scas
adc
push
dec
add
jmp
add
out
out
jp
jg
enter
lds
adc
mov
dec
push
xchg
aaa
andb
dec
cmc
push
fsts
subl
or
pop
les
popa
lds
pop
das
jns
mov
pop
add
cmp
mov
sbb
mov
lcall
sub
and
cltd
dec
or
mov
pop
hlt
xchg
dec
and
add
cmpsb
jno
notl
out
enter
imul
stos
push
popf
xor
jle
je
inc
pusha
jbe
mov
sbb
rcrb
pop
stc
xorl
xor
mov
dec
mov
stc
fimull
add
pusha
jne
dec
mov
xchg
addr16
jns
sar
or
addl
xor
daa
dec
pusha
mov
das
or
sub
dec
mov
ror
add
jae
jecxz
test
mov
aas
push
ja
or
add
in
adc
movsl
lods
ss
push
mov
inc
xchg
jp
add
stos
jl
mov
fwait
movsb
cwtl
or
mov
cmp
in
jo
sbb
and
cmp
or
mov
rclb
xor
ljmp
adc
push
popa
stc
scas
fists
pop
and
jbe
filds
mov
push
sbb
cs
push
clc
cmp
cmp
xchg
mov
and
in
xor
insl
push
mov
std
jno
mov
aaa
mov
mov
pop
cmp
stos
aam
in
mov
or
xchg
aas
repz
jg
push
pop
sbb
xor
dec
in
cld
insb
push
push
imul
add
pop
int3
ror
mov
sbb
shll
and
or
rolb
mov
fmul
lahf
inc
clc
movsb
pop
cmp
mov
pop
adc
aas
imul
inc
repnz
ja
jg
add
lcall
je
mov
jle
mov
xlat
daa
xor
or
rol
loopne
rcll
xor
test
jle
subl
ret
mov
outsb
mov
sbb
jp
cmpsb
adc
adc
mov
call
xchg
adc
ljmp
popw
and
faddl
jle
lret
cmpsb
test
movsb
inc
adc
stos
loopne
pusha
jge
loopne
pop
push
pop
idiv
pop
lods
sub
xlat
cmp
stc
mov
dec
or
adc
aad
pop
xchg
insb
icebp
jecxz
shlb
jle
push
push
sub
cs
addr16
push
movsl
or
arpl
push
into
bound
rcrl
andl
mov
sahf
out
filds
in
push
outsl
push
andb
movsb
xchg
sahf
test
adc
int3
insl
int
xchg
ljmp
lahf
pop
jb
faddp
xlat
xlat
add
mov
xorb
inc
pop
lods
push
sbb
push
pop
dec
popf
movsb
pop
xchg
xor
addr16
test
stos
insl
dec
sbb
cmp
or
jae
lods
xchg
cmp
fucomi
pusha
mov
mov
mov
lds
push
addl
add
push
jo
xchg
movsl
and
lret
cmc
sbb
jo
mov
push
in
inc
xlat
and
adc
movntq
lea
mov
lods
in
in
sub
in
mov
mov
xorb
int3
or
scas
add
mov
pop
xchg
sub
mov
out
jge
jp
loopne
mov
xchg
mov
in
aaa
loop
ja
dec
jg
add
addb
mov
pushf
cmp
pop
pop
xor
and
xchg
lahf
adc
push
push
sub
dec
sahf
sbbb
pop
xchg
pop
jge
cltd
cmpsl
jp
mov
push
xor
stos
fnsave
fucomp
data16
addr16
repnz
loopne
inc
mov
xchg
cs
or
mov
push
fcmovb
pusha
push
adc
and
jecxz
mov
jnp
jne
or
sub
dec
out
push
push
out
popa
jge
pusha
jae
sub
shl
gs
in
fadd
or
jmp
adc
push
nop
mov
cli
push
sbb
stos
loope
rcrb
xlat
adc
xor
inc
ret
enter
fmul
ljmp
inc
inc
xchg
dec
mov
sbb
popf
ds
cmp
sub
popa
xchg
stc
jl
mov
sub
mul
sub
mov
rcll
cmp
rorb
jne
or
aam
fnsave
xchg
addr16
jne
movsl
adc
lahf
mov
stos
ljmp
cltd
pop
push
gs
fcompl
cmp
jmp
shlb
mov
cli
inc
cmc
fadd
mov
and
fstl
jnp
mov
mov
leave
fcomps
sbb
jns
pop
jb
test
test
adc
mov
mov
or
gs
arpl
jecxz
pop
sub
sub
xor
negl
mov
rcl
mov
sub
sub
jge
sbb
dec
dec
mov
xor
aad
imul
mov
mov
pop
int3
shll
pop
fsub
outsl
push
sti
movsb
test
push
lahf
std
iret
cs
movsl
jne
inc
lahf
sbb
nop
inc
leave
popf
icebp
out
dec
lock
call
fsubl
scas
clc
dec
cli
dec
inc
and
subl
ja
pushf
xchg
jne
inc
aad
jbe
sarb
and
fstpl
movsl
insb
pop
or
sub
cmp
mov
push
xor
adc
test
pop
pop
iret
scas
mov
dec
push
push
jb
pop
adc
imul
add
xor
mov
shl
hlt
pop
or
and
enter
jb
aam
mov
adc
enter
mov
lods
ret
cs
cmc
mov
cmp
sbb
mov
adc
loopne
or
cmpsl
shll
arpl
scas
pop
cmp
scas
cltd
adc
and
mov
jb
in
aaa
add
out
gs
adc
jo
dec
sub
sub
lock
mov
and
fwait
mov
pop
lock
test
mov
pop
shr
stos
dec
mov
mov
adc
movsl
pop
stc
mov
repz
test
xchg
fcoms
push
outsb
fsts
mov
adc
rolb
lds
dec
push
lcall
pop
aad
mov
push
sbb
out
jb
inc
je
mov
into
add
je
push
fadds
mov
mov
cmp
adc
std
loop
xchg
and
xchg
daa
sub
inc
mov
icebp
sub
pop
mov
hlt
lret
test
add
out
push
or
ds
loop
mov
sub
sub
adc
mov
scas
cwtl
sub
sub
and
add
lds
push
rclb
stc
sub
fimull
pop
or
or
inc
push
and
data16
jbe
or
mov
pop
subb
xor
mov
mov
and
dec
xor
test
and
sbbb
add
adcb
lock
pop
adcb
mov
arpl
ja
imull
das
leave
cli
lcall
shlb
xor
outsb
arpl
popf
data16
stc
cs
cs
cmp
mov
pop
mov
cmp
dec
pop
mov
jg
mov
add
xor
push
nop
inc
lea
dec
add
fistpll
jp
cmp
dec
xor
mov
std
dec
test
inc
xchg
or
adc
add
inc
xchg
mov
into
dec
subb
mov
lock
sbb
jp
loopne
iret
shll
push
add
add
data16
data16
mov
sbb
insb
add
pushf
pusha
call
cs
lret
xor
mov
icebp
sub
ss
sti
mov
sub
pop
sub
mov
push
xchg
xor
rcr
add
es
mov
ja
outsb
add
and
sbb
scas
sbb
insb
sub
pop
loopne
outsl
add
int
pushf
or
addb
ficoms
cmpsb
loopne
pop
dec
mov
andl
pop
push
mov
mov
fists
and
or
adc
data16
add
xor
pop
cmp
and
push
pop
adc
mov
push
scas
js
xchg
mov
aad
xor
adc
and
inc
mov
push
jl
subl
push
jns
dec
out
loopne
inc
cmpsb
or
xchg
or
mov
fwait
in
fcomps
mov
mov
aam
push
inc
push
push
and
push
insl
out
sbb
cmpsl
adc
lret
lret
dec
and
mov
sbb
aaa
insl
or
jbe
shr
daa
ljmp
sub
bound
into
je
inc
je
sub
add
mov
imul
cmp
divl
fcomps
xchg
inc
push
rorl
or
push
mov
add
lea
shrl
arpl
sar
arpl
imul
sbb
xor
xor
push
add
cwtl
sbb
and
push
icebp
out
sub
pop
insl
mov
sub
dec
jae
dec
aaa
mov
sbb
or
or
sbb
mov
sbb
mov
mov
mov
mov
sub
pop
or
or
stc
sbb
xor
jo
adc
adc
dec
sbb
xchg
cmp
and
repz
push
push
sbb
pushf
xor
jne
push
cmpb
sbb
lock
test
or
jle
jl
add
adc
clc
fildl
lret
test
xor
xor
and
push
mov
pop
or
add
add
movsb
mov
mov
xchg
lock
js
mov
inc
sbb
sahf
orl
xor
dec
sbb
int3
inc
fisubrs
xor
pop
mov
test
push
pop
loopne
movsl
adc
or
add
xor
ja
jmp
popf
adc
adc
xor
push
insl
into
dec
rorb
dec
shlb
mov
push
sbb
test
fnsave
sbb
add
jo
xchg
add
cltd
jo
push
es
cltd
fcomp
add
incb
mov
xchg
into
mov
test
addb
jo
sub
cltd
test
fisubrs
jl
jno
adc
add
cmpsb
jb
inc
pop
mov
std
jg
aad
or
xor
ljmp
push
mov
jnp
shl
int3
inc
jns
mov
add
add
xor
jp
gs
pop
in
adc
sbb
cld
mov
jnp
ss
rorb
mov
pop
shll
fiadds
insl
mov
test
lds
ret
hlt
push
cld
rorl
xor
mul
lret
sub
push
stos
push
pushf
pusha
mov
and
mov
cmpsb
fimull
enter
in
inc
dec
rorb
xchg
push
xchg
cmp
mov
lods
sub
mov
xor
push
adc
mov
mov
daa
inc
mov
push
dec
xor
lret
push
iret
inc
pop
cltd
or
xchg
inc
arpl
inc
cwtl
inc
hlt
jns
test
out
cmp
arpl
mov
or
lock
out
adc
jbe
in
loope
inc
sbb
insb
outsl
xorb
out
dec
fisubrs
arpl
mov
bound
dec
push
sbb
push
test
mov
popa
test
ss
daa
inc
cmpsl
dec
jo
rorb
sub
and
and
xor
ficompl
inc
ret
jb,pt
xor
xchg
ja
mov
mov
jne
stos
xor
stos
js
push
xchg
shrb
aam
sbb
repnz
dec
addl
daa
fcomps
loop
test
sbb
pushf
dec
enter
popf
and
fisttpll
cmp
fdivs
mov
daa
inc
mov
dec
loopne
push
add
and
not
mov
adc
or
sub
xchg
mov
pop
shlb
mov
call
mov
es
out
ljmp
cld
cmp
enter
xor
sahf
xchg
or
pushf
bnd
mov
cmc
insb
das
pushf
adc
pop
in
pop
lret
dec
mov
push
add
or
or
stos
cmp
jmp
ds
icebp
lcall
loopne
bound
std
jno
jge
push
xchg
inc
jmp
cwtl
adc
lcall
scas
pop
xchg
inc
pop
sub
clc
into
mov
xlat
popf
pop
iret
daa
push
mov
call
sub
scas
push
mov
sub
cmp
outsb
ja
cmc
jo
jp
enter
jge
pop
cmpsl
dec
push
int3
in
dec
inc
dec
inc
or
or
outsb
xchg
dec
std
jecxz
or
aaa
pop
cli
dec
mov
movsb
jo
or
sti
popa
add
jge
sub
mov
fdivrs
push
lret
ss
cmp
icebp
js
inc
mov
xor
xor
inc
mov
mov
jae
fsubrp
std
popf
jo
fcomps
loopne
loope
pop
xorb
in
add
cs
add
enter
mov
incb
lds
mov
or
lds
jp
mov
pusha
dec
movsl
add
test
jmp
push
pop
icebp
xor
cli
push
cmp
ret
sub
mov
lock
faddl
or
inc
add
les
pop
inc
adc
push
jbe
loopne
shll
xor
dec
mov
xor
lret
push
and
lods
xchg
out
fsubrp
fsubl
xchg
into
and
inc
popf
xchg
pop
mov
jle
or
dec
pop
inc
or
loop
and
xchg
inc
jb
ret
or
mov
xchg
jmp
jns
repz
outsl
test
rcl
ja
cmp
les
aam
fists
xchg
jno
sub
cmp
xchg
mov
mov
add
ja
rolb
outsl
scas
push
lea
push
pusha
xchg
ret
xorl
popf
nop
xchg
or
sub
loopne
add
mov
mov
sbb
mov
sub
test
sbb
mov
scas
stos
inc
leave
jge
or
insl
sub
call
mov
sbb
mov
push
cmpsl
ds
in
test
stos
jle
xchg
mov
jl
pop
push
xchg
iret
lahf
push
shll
jbe
jns
stos
lods
push
fsts
cld
or
pop
pop
xchg
and
in
inc
sbb
addr16
mov
stos
adc
xchg
loopne
ret
enter
outsl
xchg
gs
scas
testl
pop
jne
jne
notl
push
cmp
xchg
arpl
pop
push
lahf
add
sub
cmc
leave
adc
imulb
lret
mov
push
cwtl
rcl
pop
scas
dec
pop
pop
jl
call
clc
adcl
or
in
mov
add
and
xor
fisubrs
in
dec
addr16
pusha
pop
push
push
xor
pop
dec
sahf
push
test
jae
adc
pop
push
lahf
sub
push
pop
inc
mov
xchg
jne
mov
rcll
lods
mov
arpl
roll
jno
aad
hlt
fldl
shll
cli
jnp
mov
adc
inc
dec
xchg
inc
fnsave
push
mulb
mov
shlb
add
es
jge
xor
leave
jne
push
fisubs
lds
mov
dec
bound
mov
dec
jl
adc
pusha
mov
mov
decb
lea
adc
pop
xor
xor
test
out
xchg
call
jo
shl
or
adc
add
cmovle
aad
lret
mov
xchg
mov
fidivs
fldenv
jge
cmp
sbb
ret
ja
or
adc
inc
push
xor
movsb
shll
popa
lcall
jmp
popf
sub
xchg
cmc
adc
sbb
xchg
add
jl
movsl
neg
jb
xor
mov
icebp
cmp
pop
rorb
cs
push
push
push
mov
push
xchg
int3
mov
xchg
loop
and
add
xor
jp
adc
mov
xor
xor
mov
push
pop
dec
int3
dec
sub
xchg
cmc
andl
into
xor
adc
nop
adc
dec
shll
lds
dec
sbb
add
jle
add
and
mov
shl
jo
mov
inc
xchg
add
add
orl
stc
or
xchg
sub
ja
mov
fimull
mov
add
mov
aam
mov
mov
in
jb
adc
inc
mov
ret
mov
cmp
clc
push
mov
cmp
ss
add
and
es
jg
rclb
inc
and
sbb
adc
xchg
or
jbe
outsb
mov
jl
push
inc
or
dec
pop
adc
faddl
jo
in
push
cmp
dec
inc
inc
pop
stos
sub
and
mov
xchg
addl
loopne
add
mov
xor
pop
daa
xchg
add
ret
ja
inc
dec
aaa
pop
inc
jmp
je
jg
or
dec
imul
scas
or
push
xor
mov
fiadds
inc
fs
push
ljmp
inc
mov
push
jg
cmp
add
js
inc
adc
leave
add
mov
xchg
popw
nop
inc
leave
mov
movsw
sbbb
fsubrp
add
dec
ret
ljmp
int3
mov
mov
mov
test
push
pop
popa
lods
mov
sub
nop
or
xchg
fisttps
fneni(8087
inc
add
loope
scas
mov
or
sbb
mov
ret
lcall
sub
fst
int
push
jb
repnz
stos
mov
jne
icebp
ja
movsb
pop
cmc
mov
add
and
sti
out
lret
pop
enter
aam
scas
jmp
shrl
stos
sti
and
xchg
mov
nop
jmp
sti
add
sub
faddp
sti
mov
push
jge
dec
sarb
sbb
ja
cmpsl
jle
lds
cmc
fisttpll
sub
js
std
jmp
ss
jno
lcall
add
int3
mov
mov
or
cwtl
inc
dec
and
sbb
scas
pop
jge
leave
xchg
sbb
repz
pop
ret
xchg
add
cwtl
add
add
sub
in
aas
popf
call
mov
pop
ja
movsl
dec
lcall
imul
mov
scas
sub
pop
lret
ss
cs
push
mov
fwait
mov
cmp
dec
push
lods
sbb
lcall
push
push
incl
sbb
and
sbb
xlat
add
test
stos
cmp
lret
jb
sub
dec
orb
fcomps
mov
xchg
pop
cli
sub
cmp
inc
xchg
xchg
ds
arpl
stos
bound
mov
or
jo
into
push
cld
and
ret
aaa
ljmp
ja
mov
jo
push
xor
jge
mov
pop
jnp
add
push
mov
fcomi
and
jmp
data16
stos
pop
sbbb
push
test
inc
mov
lret
sbb
mov
orl
ljmp
movsl
jno
dec
inc
push
fisubrl
lods
loopne
add
subb
or
fs
lret
push
out
mov
xor
cmp
es
push
pop
stc
imul
fiaddl
jmp
shlb
pop
mov
or
lret
test
jmp
push
loop
mov
mov
sahf
cmc
lods
lcall
int3
sbb
jmp
pushf
aaa
lds
test
mov
fs
shll
push
dec
in
adc
insb
imul
push
imul
ljmp
push
sub
inc
mov
rol
icebp
add
inc
test
pop
cmpsb
push
je
stc
movsl
inc
nop
and
lcall
xor
aad
mov
stos
mov
test
mov
sar
incb
push
shl
scas
jae
iret
int3
adc
cmp
movsb
aas
and
or
xor
mov
xchg
jns
push
mov
pop
daa
fmuls
push
xchg
inc
mov
inc
movsb
push
lret
arpl
scas
rolb
cmp
dec
les
xor
mov
call
movsb
aas
xorl
daa
mov
sub
jmp
dec
sbb
cwtl
push
jne
jmp
and
xchg
les
nop
popf
jo
popf
cwtl
jb
add
dec
movsb
lret
jbe
xor
pop
inc
addb
in
lods
loopne
aaa
mov
mov
call
test
xchg
or
sbb
hlt
pop
adc
stos
testl
dec
add
fucomp
shll
mov
mov
cmpsl
or
sbb
mov
jge
icebp
mov
leave
xchg
and
push
lret
mov
ret
xchg
sti
call
lret
mov
dec
daa
clc
jbe
loop
push
pusha
xorl
xor
sbb
jecxz
into
mov
mov
mov
xlat
add
les
inc
sub
mov
adc
in
mov
lret
push
mov
lock
dec
mov
cltd
push
inc
sub
or
repnz
mov
fnstsw
ja
push
dec
inc
push
pop
adc
stc
leave
test
xor
add
or
or
nop
inc
inc
sbb
test
adc
cmp
pop
fldt
jle
pop
cmp
call
jl
ljmp
nop
push
loop
adc
add
fistpll
arpl
jp
fdivl
repz
mov
or
test
add
xor
xchg
pop
xchg
rcll
add
adc
add
ficoms
negb
orb
movsb
pop
or
inc
mov
add
inc
ret
shrb
push
sbb
fldl
fwait
mov
enter
sahf
clc
mov
mov
rcrl
cmp
cld
cmp
pusha
loope
lret
adc
inc
sbb
xor
mov
popa
aad
mov
mov
test
stos
mov
std
lock
cmpsb
push
jl
mov
dec
jecxz
xor
test
icebp
jmp
cwtl
fcmovnbe
push
subb
jbe
lods
xor
jg
and
pop
stc
lahf
test
ja
fnstenv
test
movsb
imull
pop
test
cmp
cmp
mov
sbb
pop
dec
out
rol
lret
addl
das
enter
add
cli
jge
loope
xchg
inc
and
dec
push
cmpb
fmul
cli
repnz
xchg
ljmp
push
add
xor
xor
inc
mov
mov
scas
push
mov
jne
xor
xchg
xchg
jmp
mov
adc
sub
pop
dec
popf
xor
and
daa
inc
push
lret
push
ffreep
sub
add
loope
mov
shll
pop
test
xchg
add
out
add
dec
stos
out
sub
ja
test
xchg
push
mov
loop
xor
cmp
cmp
and
pop
mov
shl
cltd
and
cli
int
cmc
jmp
inc
scas
jl
sub
xor
pop
ds
xchg
mov
ret
sub
pop
sbb
outsb
jae
adc
mov
inc
jecxz
jge
out
jb
xchg
stc
sub
pop
cmp
jl
jns
sub
lret
dec
lahf
dec
and
out
mov
inc
mov
jp
sti
call
in
lds
fisttpl
xor
jp
mov
add
cmc
pop
cmp
adc
push
testl
xlat
hlt
shll
ljmp
arpl
clc
movsl
clc
fwait
lcall
lock
cli
lds
xor
test
mov
inc
and
loope
setl
push
test
jle
add
adc
inc
int3
aas
sbbb
call
or
sub
mov
js
les
mov
mov
orb
push
push
clc
jle
cmp
xchg
popf
pop
sub
push
add
push
aaa
pop
cmp
in
mov
jmp
popa
out
mov
push
adc
es
je,pt
popf
rcll
jmp
sahf
mov
sub
add
popf
add
test
cmp
bound
iret
push
xchg
nop
test
dec
js
jo
xor
pop
adc
cmp
aaa
cmp
mov
ljmp
fucomip
xor
add
stc
cltd
xchg
cld
ret
adc
push
in
sbb
inc
dec
pop
dec
int3
ja
fmuls
or
hlt
sub
cli
push
std
jns
in
and
mov
pop
mov
xchg
outsl
cli
fiaddl
xchg
lods
rorl
nop
insb
into
fidivrs
lock
jge
inc
aas
out
lds
or
inc
mov
xchg
ja
or
shld
jge
fsubl
push
fwait
mov
sbb
inc
add
inc
test
cmpl
jle
jae
sbb
jne
mov
int
enter
movsb
cmc
jns
mov
ljmp
and
push
sub
jmp
out
pushf
imul
jge
mov
mov
jg
idivb
clc
mov
mov
and
dec
mov
jl
xchg
int
xchg
fiadds
aas
mov
int
pop
scas
mov
inc
pop
sbb
inc
cld
dec
aas
mov
sahf
scas
lods
lock
iret
inc
mov
test
mov
jle
cmovne
addr16
arpl
fsubrs
movsb
pop
push
out
out
das
xor
mov
xor
imul
xchg
dec
pop
cltd
pop
rcrl
shrb
jo
clc
lds
or
or
mov
sub
and
mov
sbb
cmp
sub
xor
out
sub
lds
mov
lahf
mov
andl
mov
mov
out
shll
cli
xchg
pop
cmp
inc
and
push
popf
adc
insl
jne
pop
adc
int
xor
xor
jecxz
inc
repnz
add
push
or
mov
int3
fmull
mov
mulb
in
mov
movsb
dec
sbb
movsb
les
jmp
inc
sbb
pop
xlat
cmp
test
outsl
and
add
adc
nop
fdivs
addl
test
xor
pop
stc
xchg
inc
push
adc
daa
inc
int
push
loop
and
aaa
dec
inc
jl
add
loop
fwait
add
mov
cmp
xchg
cmp
jne
dec
pop
mov
or
xlat
and
mov
and
pop
pop
inc
sbb
jno
jmp
inc
clc
and
jne
xchg
shlb
dec
push
add
lods
stos
cmc
push
pop
jl
and
in
pusha
push
cmp
aad
sub
xchg
adc
jg
in
dec
xor
mov
inc
mov
inc
cmp
inc
insl
dec
jmp
test
int
scas
lcall
or
test
data16
dec
mov
mov
jecxz
push
pushf
lcall
jle
dec
dec
xlat
xchg
shll
hlt
or
push
in
sub
bound
jnp
fndisi(8087
dec
xchg
mov
sbb
push
orb
fidivl
lahf
test
mov
stc
mov
xlat
lahf
test
lea
jecxz
icebp
sub
fimuls
mov
cmpb
jle
repz
xchg
ja
push
xchg
sti
cld
mov
mov
shrb
ss
mov
adc
fstl
mov
sti
addb
mov
push
aaa
pusha
repnz
xorl
mov
or
popa
xchg
fimull
mov
mov
push
lock
pop
or
mov
push
maxps
imul
sbb
ja
mov
imul
push
leave
pusha
rcrl
and
mov
sub
pop
incl
gs
pop
into
pop
inc
mov
data16
and
or
xor
xor
inc
jmp
jne
lds
andb
adc
mov
sub
pusha
fldz
adc
ret
add
add
aad
push
xor
jg
inc
push
cmp
into
cli
mov
fistpll
push
mov
fidivrs
push
in
jge
inc
sbb
scas
cmp
mov
cmp
dec
call
shr
add
jge
ret
in
psubsw
lods
loopne
add
adc
repnz
inc
shlb
test
and
scas
scas
aas
jmp
scas
cld
or
push
sbb
nop
mov
ss
scas
je
mov
mov
in
or
fadds
add
pop
inc
into
movsl
pop
cmpsl
xchg
and
adc
sar
and
rol
xchg
dec
mov
sbb
loop
test
push
mov
and
adc
xchg
push
dec
adc
push
adc
test
enter
sub
xchg
adc
fiaddl
xchg
inc
outsb
sub
or
push
or
cmp
or
cltd
sbb
jmp
sub
leave
lods
cmpsb
insl
mov
xor
cld
cmp
mov
lea
mov
and
mov
and
sub
and
popf
xor
xchg
rcrl
in
rorb
rclb
jnp
sbb
sbb
cmpsb
lcall
push
inc
mov
mov
out
clc
dec
lds
cmp
mov
fwait
mov
jae
push
and
adc
lcall
cmp
lret
ss
fsubs
cmp
stos
mov
xor
jp
lret
xor
adc
adc
fldt
or
test
pusha
lds
cmp
jmp
push
sti
sti
xor
push
stos
lret
push
adc
insb
inc
pusha
ffreep
sub
jne
pushf
movsb
icebp
scas
jecxz
jmp
stos
and
inc
je
cmpsl
pop
mov
mov
ret
push
scas
popa
roll
pop
arpl
inc
orl
xor
ljmp
testl
push
mov
adc
lea
jo
xchg
cld
sub
xchg
loope
or
or
adc
mov
in
mov
lods
push
cld
loopne
cmp
sbb
and
test
xor
lock
fbld
mov
lods
dec
sahf
jne
ficompl
xchg
jmp
xor
or
sbb
adc
cltd
pop
sbb
std
aas
nop
outsb
push
push
jp
jge
mov
pop
arpl
push
push
test
add
jle
gs
gs
scas
mov
xor
xchg
sub
mov
cmp
mov
add
cmp
xchg
xor
push
add
and
mov
mov
aad
push
add
pusha
sub
cmpb
pop
sub
nop
scas
in
rcll
sub
mov
inc
add
mov
pusha
sub
xorl
inc
fsubrl
xor
push
aam
je
stos
mov
lods
scas
pop
cmp
cmp
mov
xlat
int3
jae
lahf
pop
mov
lret
aas
or
mov
sti
shll
dec
add
jbe
imul
lret
inc
and
cmovle
sub
and
out
push
lods
or
sub
xchg
jecxz
out
loop
stos
cmp
test
and
nop
xor
mov
ret
in
sbb
ss
fcomps
outsb
ss
inc
gs
push
arpl
mov
mov
dec
and
xchg
addr16
mov
shlb
or
jno
mov
mov
insl
aam
jns
sbb
ja
fnstenv
lahf
fs
scas
and
in
leave
jecxz
push
pop
out
test
xlat
jmp
fs
stc
dec
repz
xchg
mov
std
shrb
dec
push
stos
inc
mov
shlb
add
lods
sub
pop
adc
xchg
and
fiaddl
inc
mov
mov
push
movsl
fistpl
mov
fcos
adc
pop
loopne
scas
lcall
int3
pushf
xor
and
add
lods
lret
sub
out
stos
test
add
dec
test
outsl
mov
jg
jmp
add
popa
xlat
mov
push
mov
aam
and
or
and
scas
loop
pop
bound
adc
lret
sbb
push
and
push
adc
mov
mov
rclb
loope
out
das
and
bound
mov
dec
push
pop
push
fdivrs
or
cmp
mov
sbb
add
jne
mov
adc
mov
cs
fcompl
inc
loopne
push
dec
push
lds
pop
dec
pushf
addb
ss
loope
mov
pop
test
es
jecxz
mov
mov
and
jo
sub
stos
push
sbb
jno
fcom
or
dec
imul
pop
pop
xchg
mov
push
xor
leave
insl
inc
mov
dec
loopne
cltd
xchg
mov
sub
pop
add
mov
push
mov
sub
inc
or
pop
push
sub
outsl
jle
rcll
pusha
pop
push
dec
mov
jecxz
fcmovnu
pusha
dec
mov
xchg
adcl
scas
sbb
test
xor
xor
rolb
jle
outsl
js
pop
pop
adc
xchg
fs
or
inc
push
gs
inc
pop
inc
mov
inc
sub
cmpsb
mov
or
push
or
lcall
jno
popa
mov
xchg
push
mov
push
cmp
sbb
xor
in
or
pop
jno
sub
xor
addr16
xor
dec
xchg
xor
mov
dec
xor
les
fidivrl
mov
cs
lcall
xchg
mov
nop
lret
xor
data16
add
dec
cltd
fimull
in
dec
mov
into
out
sub
bound
mov
ret
imul
sub
lds
inc
stos
imul
repz
jae
push
pop
int3
pop
daa
add
or
lcall
inc
mov
cmc
mov
pop
data16
addr16
push
insb
adc
and
mov
aad
rolb
orps
inc
ja
add
xchg
mov
shlb
pop
xor
push
xor
ret
pushf
pop
xchg
xchg
aad
pop
pop
int
add
mov
mov
or
movsl
and
sbb
xor
shlb
mov
push
lds
rcl
xorb
xor
xor
movsb
mov
int3
or
xchg
addr16
lea
mov
pop
cmp
and
xchg
jle
and
gs
inc
imul
sbb
inc
inc
stc
in
push
stos
mov
mov
mov
inc
inc
js
ret
cld
or
mov
aaa
jae
and
pop
mov
cmp
xchg
adc
cltd
popa
push
xor
movsl
popa
fwait
mov
sub
xchg
daa
repnz
mov
mov
shrb
adc
cld
lret
adc
lea
dec
or
fstps
sbb
mov
cmpsl
xchg
shll
jne
mov
push
cmp
or
push
loop
xchg
lock
cmc
and
mov
pop
and
xor
movsl
cmpsl
out
inc
es
dec
add
jb
jmp
loopne
and
fildl
movl
stos
faddl
outsl
mov
mov
jbe
add
xchg
jmp
cmpl
mov
sbb
jp
sti
jo
xlat
mov
add
sbb
mov
push
inc
stos
outsb
nop
div
pop
jecxz
gs
imul
and
jae
stc
dec
psubd
sbb
or
mov
scas
push
in
cwtl
loopne
mov
cld
sahf
fmull
lock
xchg
jmp
fistpl
push
add
test
testb
outsl
xor
jno
sbb
pop
sub
mov
aam
aad
push
repnz
pop
push
sub
jp
xorb
fldl
pop
jle
nop
mov
dec
lret
or
mov
push
jg
sub
xor
push
lock
pop
mov
xor
pop
pop
pop
fiaddl
jmp
int3
data16
jb
in
xchg
pop
pop
mov
inc
std
inc
pushf
or
inc
iret
mov
into
mov
lods
sub
cmp
xor
dec
sbb
mov
shrb
hlt
xchg
push
mulb
lcall
adc
scas
int
sbb
push
dec
jne
fdivl
aad
jecxz
les
xor
sub
mov
adc
push
lea
in
and
aad
test
movsl
test
cmp
mov
shl
lea
rclb
pop
jne
mov
jge
lea
popf
mov
mov
push
pusha
adc
out
jl
xchg
inc
mov
cli
lcall
iret
jge
mov
mov
and
xchg
add
dec
mov
pop
sub
add
cmp
xor
test
dec
push
test
adc
cmpsb
mov
xor
sbb
enter
nop
pop
sub
mov
sbb
inc
adc
xor
inc
xchg
lret
pop
push
inc
mov
adc
and
dec
xchg
xchg
jo
jo
mov
pop
repz
push
negl
imul
xor
rorl
mov
mov
sub
mov
dec
mov
jo
inc
jle
loope
jne
repz
xchg
ds
jnp
sub
repz
cli
ljmp
mov
jecxz
sti
pop
das
loope
roll
nop
popf
dec
cmpsb
push
adc
sub
sbb
and
ret
mov
add
pop
out
xchg
fisttpl
fildll
xor
pop
mov
scas
mov
inc
and
pop
inc
pop
push
jns
fldenv
jb
ret
fimuls
or
lods
inc
mov
push
enter
clc
push
mov
dec
mov
push
adc
leave
insb
mov
int
pop
in
push
cmp
inc
sbb
aad
test
adc
in
jg
push
cmp
lret
gs
sbbl
push
stc
cmp
push
jbe
cmp
stos
push
push
lods
scas
push
push
stc
int3
xor
ret
movsb
sub
or
or
sbb
cmp
lea
and
mov
sbb
bound
rcrl
cli
lock
mov
push
fs
cmp
xor
cld
sbb
in
push
dec
sahf
mov
clc
jns
sbb
pop
mov
iret
push
je
call
cmpsl
jns
sbb
es
and
adc
and
xchg
xor
jge
push
inc
xchg
mov
mov
adc
mov
sub
cmp
fdivs
shl
sbb
mov
dec
hlt
and
jb
or
and
adc
mov
dec
xor
loop
adc
inc
ds
xor
scas
cmp
repnz
and
push
arpl
lods
inc
cmp
add
enter
daa
cli
mov
mov
adc
adc
fidivs
jbe
repz
call
jb
mov
lods
pop
in
bound
loope
xchg
add
dec
test
insl
inc
cmp
add
inc
enter
cmpsb
cmc
cltd
roll
pop
add
push
dec
sahf
sbb
jns
into
adc
cmp
ss
and
insl
and
adc
adc
mov
jno
test
cld
es
shll
mov
leave
jp
xor
sarb
push
adc
inc
outsl
lods
int3
adc
push
or
rcl
lea
sbb
repz
shlb
xchg
inc
inc
and
sbb
jb
adc
icebp
xor
adc
cmp
xor
lcall
jns
adc
daa
lods
jl
and
daa
mov
shll
popf
cmp
in
adc
jns
adc
insb
mov
lret
add
nop
mov
into
adc
cmp
ss
and
xorb
mov
mov
mov
pop
fs
lods
xchg
ret
stos
stos
loope
jmp
mov
cmp
ljmp
pop
je
mov
jle
inc
lret
lods
jns
mov
inc
mov
or
push
jnp
push
ss
mov
clc
cmp
popf
daa
mov
les
stos
inc
xchg
loop
and
and
xor
xchg
inc
sahf
shlb
and
orb
popf
stc
jns
int
data16
dec
adc
mov
stos
mov
and
loop
in
enter
in
in
add
dec
push
in
repnz
sbb
repnz
adc
dec
fdivrp
xchg
sbb
scas
or
dec
lret
cld
scas
inc
popa
in
imul
call
cmp
dec
repz
fwait
sub
pushf
mov
in
adc
call
ljmp
cmp
je
dec
sbb
xchg
xor
sub
jns
jns
daa
mov
adc
fadds
dec
ret
pop
daa
xchg
cmp
stos
enter
cmp
out
das
push
sahf
clc
cmp
or
mov
jns
into
adc
popa
jbe
adc
cmp
jbe
fmuls
in
je
daa
xchg
lock
cmp
es
sub
popf
dec
inc
fisttpll
xor
repz
daa
in
jmp
loop
adc
xchg
mov
mov
cmp
xchg
lret
fstpt
shl
or
adc
mov
sub
xor
ret
push
sbb
out
in
rorb
inc
stos
xchg
xor
pop
pushf
fdivs
cs
mov
aaa
cmp
sbb
push
dec
int3
adc
xchg
int
cmp
fadds
ja
jb
je
pushf
lds
mov
sub
sbb
sarb
inc
sub
aas
mov
sbb
out
imul
jge
xor
outsb
cmc
stos
iret
negl
jne
cld
mov
push
lea
int3
cmp
push
and
dec
adc
out
adc
aaa
shlb
push
test
popa
data16
sub
and
js
and
sbb
mov
test
lea
mov
leave
xor
xchg
dec
and
repz
je
fisttpl
push
test
xlat
xchg
stos
sub
stos
inc
xchg
jbe
int
cmp
insb
cmp
loop
dec
pop
pop
pop
add
popa
stc
add
mov
jmp
push
inc
aad
push
pop
dec
stc
inc
fcom
popa
pop
mov
fisubrl
or
cltd
inc
push
leave
mov
scas
sbb
scas
xor
in
pop
xchg
mov
push
mov
xchg
sbb
dec
ret
push
mov
xchg
mov
cmp
pusha
dec
mov
sbb
jns
add
es
push
shll
xchg
xchg
inc
fiadds
sub
pop
fwait
cmp
xchg
add
push
ja
pop
lcall
mov
addr16
inc
sub
push
orl
dec
movsb
cli
and
dec
jg
jg
xor
mov
aam
xor
lret
ja
jb
sub
mov
test
sbb
aam
sbb
pop
jp
xor
repz
dec
stos
lret
inc
and
outsb
popf
add
ret
gs
mov
psrld
xor
cld
roll
aad
imul
inc
push
xchg
scas
and
mov
add
xor
push
adc
sub
lret
enter
mov
mov
mov
es
xchg
xchg
adc
and
fs
test
cmp
out
push
push
sahf
cmp
in
outsb
sahf
pop
repz
fwait
or
popf
inc
push
test
enter
cmp
lcall
xchg
daa
ljmp
es
ja
add
adc
in
cmp
out
cmp
adc
mov
sub
mov
je
insl
fimull
test
popa
popf
popf
nop
repz
and
fdiv
rcrl
sub
pop
popf
test
les
loop
test
mov
test
cmpsl
test
adc
xor
stos
adc
sub
out
cmp
daa
mov
adc
sbb
push
dec
adc
fldt
mov
cmpsb
mov
imul
add
and
popf
inc
int
icebp
pop
cmp
or
imul
cmp
pushf
sahf
cwtl
xor
mov
xchg
in
sub
ffree
pop
dec
or
xchg
adc
ret
rol
and
faddl
movsb
test
popf
clc
dec
sub
inc
xor
loope
pop
fwait
cmp
adc
xor
sbb
sahf
cmp
in
loopne
sahf
inc
repz
jo
shrl
xor
add
mov
fwait
sub
ljmp
xchg
bound
dec
sbb
jge
aam
imul
and
test
xchg
loop
push
jns
cmp
sub
aad
push
lret
cmpsb
push
addr16
mov
iret
and
stc
test
mov
xor
add
leave
cwtl
in
sbb
imul
data16
xchg
jecxz
stos
into
mov
lret
adc
pop
js
icebp
shrb
pop
out
outsl
jge
mov
test
popa
or
jnp
xchg
sub
mov
pop
mov
jo
pop
pop
out
or
les
cmpsl
insl
loop
popa
pop
faddl
adc
fdivs
and
jle
into
sarl
fisubl
repnz
mov
dec
xchg
shlb
out
outsl
cmp
add
push
adc
pop
scas
es
dec
jl
add
mov
jns
adc
mov
or
data16
arpl
sub
lods
adc
and
stos
repnz
stos
ret
dec
or
fldcw
jmp
adc
cmp
add
cmpsl
lods
add
sub
push
mov
push
push
addr16
shll
gs
and
shll
sbb
and
rclb
jp
pop
push
jge
addr16
jne
sbb
xor
imul
loope
jg
xor
pop
dec
lcall
jne
call
cmp
out
stos
mov
call
shr
push
push
inc
fwait
ljmp
je
push
xchg
scas
ret
add
gs
mov
ds
mov
insl
cmpsb
xor
xchg
mov
inc
cltd
push
adc
out
cs
inc
mov
sbb
or
fdivs
pop
lea
inc
aad
dec
mov
mov
ds
dec
loope
out
and
hlt
scas
iret
stc
add
sahf
adc
jmp
mov
xlat
adc
xor
cltd
das
jg
or
pop
aaa
push
or
mov
out
enter
jmp
add
push
pop
jb
mov
add
addr16
subb
scas
shrb
aas
jb
das
mov
movsl
pop
imul
cwtl
loop
repz
push
or
pop
or
mov
sbb
or
xchg
inc
mov
icebp
xor
dec
inc
aas
jb
adc
sub
push
fisubl
lea
jne
out
cltd
cltd
mov
std
cmp
rcrw
push
xor
rolb
jbe
ds
clc
xchg
clc
popa
insb
push
mov
jge
mov
xor
push
sub
es
je
dec
movsb
mov
adc
mov
adc
divb
push
sahf
xchg
lods
and
lea
lock
cli
in
call
jbe
div
test
test
lret
xchg
inc
cld
mov
xchg
add
inc
aaa
push
into
xor
into
lods
cmp
push
data16
sbb
mov
mov
mov
and
mov
out
xorl
jns
push
cmp
push
sbb
leave
insb
xchg
adc
add
lret
sbb
cmpsl
jno
testl
and
mov
lock
pop
mov
sysexit
orb
mov
clc
movsl
clc
icebp
jg
pusha
rclb
sub
mov
aam
mov
mov
les
pop
mov
dec
fsubrs
frstor
sub
xor
ljmp
xor
or
push
mov
mov
mov
pusha
shrb
mov
mov
paddusw
push
or
mov
mov
adc
mov
or
lret
hlt
sti
mov
fsub
rcrl
fimuls
lahf
mov
pop
loop
repz
xchg
sbb
out
popf
lea
lods
mov
mov
mov
icebp
pop
pop
push
sbb
dec
adc
int
sub
sarb
loope
jl
js
bound
and
add
pop
in
div
cmc
push
sbb
je
loop
inc
sub
push
mov
dec
xor
sub
jp
mov
clc
outsb
add
fadds
nop
mov
xor
push
push
aad
insb
insl
insl
jle
push
mov
push
ficoml
push
loope
push
shll
xor
jbe
int3
je
or
repnz
test
popa
cmp
mov
inc
add
call
ret
sbb
push
add
addl
sbb
pushf
test
pop
mov
push
rcrl
xor
xchg
adc
and
or
es
xor
stos
cmp
xor
fisubrs
xchg
cmp
pop
decb
dec
and
add
jne
fld
push
mov
fimull
popa
mov
sub
mov
inc
sbb
les
xchg
fdivrs
cmpsb
xchg
enter
sti
cld
out
sub
xchg
in
lret
fsin
stos
std
add
cmp
cwtl
stc
outsb
pop
in
sti
cmpsb
push
adc
fsubrl
fisubl
mov
or
or
add
dec
in
sub
dec
push
xchg
insb
int
push
add
jg
fiaddl
dec
pop
das
inc
fwait
jle
in
les
popa
in
ficoml
loop
mov
xor
in
inc
jge
movsl
sub
mov
mov
imul
push
pop
sub
xor
add
arpl
xchg
popa
adc
mov
adc
iret
push
and
xor
jb
cli
fnstcw
punpckhbw
fs
sbb
adcl
and
jg
cmc
stc
xchg
cmp
add
daa
mov
lock
jno
mov
adc
mov
mov
xchg
popa
fstps
add
int3
xor
dec
pop
fdivrs
imul
xchg
pop
push
jl
lahf
xor
sbb
aad
call
repnz
xchg
stc
add
mov
cld
shlb
jecxz
out
mov
aam
and
mov
lds
out
iret
cmp
sub
sub
mov
or
cmc
or
data16
mov
fstl
mov
xchg
les
mov
or
mov
in
adcl
jle
sub
jmp
jbe
rcr
xchg
mov
inc
pop
jecxz
add
iret
cltd
cld
xor
sbb
adc
iret
cltd
cmpsl
daa
repnz
cltd
lahf
call
shr
sbb
sbb
insb
inc
int3
aam
repnz
xorl
icebp
cwtl
cmp
and
fstps
setns
shrb
push
cli
pushf
push
xlat
les
and
into
test
dec
cs
dec
push
mov
xlat
ds
rcll
cmc
xor
pop
add
ds
adc
clc
mov
or
insl
pop
push
dec
lock
dec
jmp
ss
mov
jne
ret
cmp
xchg
sbb
pcmpgtb
cli
in
jle
inc
mov
arpl
pop
cmp
aas
xor
aas
pop
popf
scas
sbb
lret
xchg
enter
ja,pn
dec
fisubrl
aas
lock
xor
shlb
inc
xchg
mov
dec
mov
push
jle
and
cmpb
sub
cmpsb
lea
in
loop
test
outsl
xchg
sbb
jg
pushf
add
cs
int
rcrb
push
scas
xor
add
mov
lods
fbld
jmp
mov
and
jb
clc
out
and
xchg
imul
xchg
mov
add
setge
pop
rclb
inc
push
sbb
dec
inc
test
hlt
mov
into
inc
push
es
adc
icebp
aad
fxch
in
inc
movsb
jns
sbb
inc
dec
adcl
push
mov
stc
xor
out
ffreep
lods
lret
rorl
inc
mov
daa
inc
stos
cs
add
fnclex
mov
xchg
adc
out
rcrl
sahf
lcall
mov
pop
dec
scas
dec
pop
mov
hlt
lcall
inc
and
mov
testb
jae
xor
mov
iret
imul
push
xor
sti
mov
jbe
imul
cmp
sbb
push
das
decl
dec
jne
push
hlt
pop
jbe
xor
stos
xor
inc
lahf
imul
cmp
pop
inc
xor
lds
adc
icebp
push
pop
movsl
mov
dec
or
jns
push
push
imul
scas
shrb
aas
movb
cld
fcompl
sub
les
pop
int
sbb
stos
lods
fsubs
les
sub
leave
adc
pop
imul
in
roll
gs
mov
rolb
jmp
int
push
sbb
out
rcrl
jo
mov
or
mov
int
sbb
sbb
inc
mov
sbbl
fs
adc
sub
test
cmp
arpl
into
lahf
popa
lock
and
push
jns
xor
jbe
fistl
push
imul
test
push
mov
mov
pop
dec
aad
popf
dec
stc
gs
fs
sub
scas
push
in
shl
adc
mov
data16
jns
cwtl
daa
mov
cmp
imul
mulb
mov
out
xor
dec
mov
out
xor
push
dec
ficomps
pusha
ret
mov
out
pop
mov
pop
iret
into
push
fwait
xlat
pusha
cwtl
or
imul
jp
mov
test
movd
insb
mov
jae
ret
testl
sbb
xchg
gs
repz
jne
xor
dec
push
cmc
sbb
popf
sbb
xchg
add
es
dec
mov
fwait
adc
inc
mov
ret
pop
xchg
repz
popf
mov
and
imul
es
push
adc
push
or
in
aad
pop
stos
inc
icebp
mov
loope
adc
inc
and
cmpsl
and
dec
inc
fildl
pop
andw
int
pop
push
dec
cmp
jl
and
cmp
shlb
imul
cmpsl
fidivl
test
mov
pop
xlat
and
jbe
push
mov
mov
aad
and
inc
or
push
cs
xchg
loopne
sub
jbe
pop
cltd
mov
sub
pusha
xchg
pusha
xor
pop
orb
dec
inc
or
sub
sub
add
gs
sbb
addr16
and
xchg
inc
pop
lret
mov
xchg
arpl
rol
fstpl
xor
pop
mov
test
cmp
test
add
sbb
push
test
sti
aam
fcmovb
jns
push
pop
ja
push
imul
sahf
mov
aas
push
outsl
gs
dec
retw
and
mov
or
lret
mov
jmp
in
mov
push
insb
adcl
test
test
sbb
push
popa
movsb
stos
mov
xlat
lcall
jmp
pop
lods
mov
je
sbb
mov
push
mov
cmp
stos
outsl
insb
mov
and
cmc
adc
dec
push
xchg
mov
xor
sbb
push
xchg
dec
pop
xor
and
push
mov
scas
in
mov
cmpsl
adc
movsb
sbb
mov
sub
jge
int
enter
adc
js
sbb
ja
ja
aad
cld
xor
bound
dec
jmp
dec
pop
hlt
les
inc
sbbl
mov
movsl
push
hlt
mov
add
fldcw
daa
add
imul
mov
fsubrs
adc
lods
inc
sub
int3
sub
cltd
pop
pop
adc
aam
into
mov
stos
push
sub
js
stos
stos
lods
or
je
pop
pop
mov
pop
shrl
rorb
xor
mov
jne
sahf
push
cmovne
test
mov
aas
lret
popa
sub
fwait
adc
dec
mov
cmp
mov
push
push
lcall
js,pt
push
cld
out
mov
add
mov
lea
cwtl
xchg
mov
xchg
fcompl
add
fisubs
push
in
xor
nop
and
testl
push
popf
push
cld
gs
scas
dec
adc
popf
sub
or
mov
pop
addr16
and
push
sub
shll
xor
sbb
notb
mov
in
lcall
movsb
lock
mov
int
call
loop
dec
sbb
push
aas
push
adc
mov
sub
push
pop
adc
leave
mov
fisttpll
push
rcrb
sub
clc
out
xchg
add
or
lea
pop
lods
cmp
mov
into
or
popl
jae
adc
adc
pop
or
mov
sub
mov
xchg
mov
xchg
data16
xchg
and
jl
outsb
cld
lea
sbb
cltd
insl
sbb
in
popa
mov
out
ja
mov
test
popf
stc
fwait
lock
insl
mov
sub
xchg
lds
incl
cs
dec
inc
sbb
and
lret
pop
lods
aad
fisubrl
push
dec
fldl
outsb
adcl
aad
adc
and
xchg
pop
inc
lods
or
movsb
fidivs
and
mov
and
xchg
das
jbe
popa
jo
in
xlat
int
xchg
mov
adc
cltd
or
repnz
lods
repnz
divl
mov
into
cltd
lret
xor
adcb
pushf
pop
bound
and
cs
sub
in
sbb
xor
sti
push
mov
lret
gs
arpl
in
pop
notl
sub
repnz
in
dec
cs
pop
hlt
xchg
push
mov
mov
mov
lahf
cli
int3
dec
dec
dec
cs
adc
jb
sbb
mov
jle
xchg
cmp
pop
jge
dec
out
add
xchg
inc
pusha
jno
cli
dec
cs
xor
inc
xchg
mov
popa
xor
data16
and
jg
mov
shrl
mov
push
in
lods
fcomps
testl
push
outsb
sbb
mov
sbb
jno
loopne
push
sbb
cmpsb
rclb
repnz
aad
cli
and
jo
pop
lods
std
cwtl
fcompl
push
mov
stc
movsb
call
in
adc
int3
pushf
iret
sub
mov
out
dec
aaa
nop
xor
in
xchg
add
pop
push
mov
out
stos
mov
jbe
leave
pusha
in
lcall
cmpsb
ror
out
loope
add
jns
fcom
xor
push
scas
cmc
cmp
cmc
or
jl
scas
popa
mov
testb
mov
in
iret
push
jnp
lea
cmp
sbb
push
pop
mov
outsb
mov
inc
mov
adc
test
push
roll
repnz
repz
fstl
cmovbe
stos
adc
fnstcw
popf
movsb
pop
push
sbb
xor
or
mov
jae
cmpl
in
sahf
movl
pop
lea
inc
dec
pop
push
dec
or
dec
test
or
mov
sbb
xor
out
test
and
sub
dec
inc
mov
out
mov
or
mov
adc
outsl
inc
in
mov
or
sub
popf
inc
nop
stos
adc
push
std
push
lahf
cmp
imul
sub
push
mov
push
aad
jb
xchg
arpl
add
movsb
add
mov
jl
fs
cmp
push
mov
or
push
and
mov
sti
aaa
xor
sarb
cmc
sub
cmp
mov
int
imul
mov
sub
shll
fimull
mov
fsubl
cmpsl
push
xchg
in
aaa
xchg
jb
inc
mov
arpl
mov
push
push
inc
testl
rcll
adc
sarb
push
or
mov
sub
ss
mov
bnd
lods
fs
inc
pop
xchg
and
scas
ret
fdivrs
cwtl
scas
dec
or
xchg
add
daa
xor
jle
jns
xor
or
add
jge
leave
inc
test
nop
lahf
push
jp
out
lea
bound
mov
shll
test
xor
stos
sub
xchg
jne
sub
inc
clc
jg
cmp
mov
xlat
loopne
adc
loopne
cmp
jg
ljmpw
arpl
and
mov
out
into
fnstsw
or
popf
bound
lods
mov
and
ror
cmp
or
dec
cld
cli
mov
jno
push
subb
lods
mov
mov
xchg
lea
lods
scas
rol
fimull
mov
movsb
and
xchg
inc
mov
in
das
mov
call
jp
hlt
jp
pop
std
or
adc
sub
or
lret
push
xchg
mov
push
lret
pusha
sbb
mov
leave
fst
data16
xlat
xor
addl
shr
mov
dec
ljmp
fildll
imul
dec
mov
xor
hlt
push
adc
lods
pushf
and
and
data16
sahf
aad
outsb
sahf
jge
ds
js
jns
int3
jb
push
sbb
inc
imulb
imul
sahf
clc
jns
sbb
fs
sub
adcl
mov
adc
mov
and
divb
movb
sbb
lea
cwtl
fidivl
ret
add
je
and
mov
insb
inc
pop
std
pop
push
les
shll
jp
xor
out
and
inc
int
sbb
stc
jb
pop
outsl
les
hlt
and
aaa
sbb
push
sbb
push
shrl
sbb
cmpsl
movsl
imul
leave
jg
lods
mov
cmp
and
push
xchg
push
jo
jp
add
fwait
jns
push
cmp
cwtl
jne
inc
cmpsb
loopne
ror
sub
ss
je
lahf
aam
cmp
sbb
or
fisubl
xor
repnz
mov
and
loope
jno
mov
imul
aad
jb
rcrl
jns
or
lods
std
aam
movb
xor
test
dec
popa
test
fnstenv
sub
lcall
jns
lcall
sbb
push
lds
aad
adc
add
mov
xor
mov
pop
xor
push
gs
roll
push
or
ljmp
xlat
and
movsl
push
out
cwtl
scas
ss
adc
xlat
and
stos
ret
fwait
jge
pushf
add
adc
lcall
add
cmpsb
test
insl
aaa
and
je
and
cmpb
sub
lods
je
mov
and
loop
clc
mov
xchg
inc
cwtl
insl
insl
sahf
mov
cltd
movsl
push
hlt
ss
xchg
mov
xchg
sub
add
ljmp
lret
and
push
sbb
mov
dec
add
insb
es
or
pop
arpl
rol
call
cld
inc
cmpsl
xor
jecxz
std
mov
jle
cmpsl
lods
sbb
jb
sub
fcompl
jne
loope
sbb
add
push
dec
pop
fs
dec
insb
int3
sbb
pop
jbe
mov
pop
jecxz
xchg
icebp
sbb
fisttps
inc
mov
bound
popa
jmp
mov
jno
jns
dec
lods
imul
mov
pop
mov
std
stos
pop
push
out
lods
sub
xor
mov
notb
jbe
out
andl
in
or
adc
xchg
xor
push
mov
loop
inc
push
mov
rclb
jge
stos
xchg
in
dec
mov
mov
sub
mov
cmpsb
addr16
jecxz
aad
add
mov
mov
fdivrs
dec
xchg
in
mov
outsl
push
cwtl
adc
dec
sarl
leave
mov
inc
outsb
and
leave
in
push
push
js
cmpl
jae
mov
popf
out
jp
es
ds
adc
jle
mov
jg
outsb
inc
xchg
adc
add
mov
and
adc
cld
dec
pop
sub
test
lock
adc
ja
out
ja
cmp
sbb
push
aaa
inc
stos
mov
push
xorb
or
jg
add
jge
cmp
mov
loopne
mov
movsl
arpl
cmp
adc
bound
sub
stos
or
dec
ds
push
or
fildll
addr16
in
repz
xor
xchg
pop
mov
mov
jmp
in
pusha
psubusw
jp
lods
push
sub
cmp
lds
das
sub
daa
mov
fdivrs
mov
dec
ja
insl
adc
cltd
pop
jb
and
call
mov
stos
xor
jae
cltd
adc
loopne
fs
hlt
mov
stc
cmp
jmp
outsl
dec
in
test
sbb
loopne
mov
xor
mov
pop
dec
push
fists
sbb
sahf
aaa
addl
call
cmp
mov
or
scas
mov
jecxz
and
in
push
outsb
icebp
jns
pop
orb
xchg
dec
int
pop
stos
out
fstpt
neg
mov
mov
ss
xor
fnstenv
ficompl
push
dec
cld
repz
cmp
negb
push
mov
xchg
cmpl
push
rorb
and
stos
inc
pushf
sti
enter
ds
or
push
movsl
add
lcall
push
and
aaa
push
ljmp
arpl
aaa
jge
iret
pop
outsb
in
jno
imull
rcrl
pop
jbe
ds
sub
lret
gs
int3
les
push
xor
or
push
jmp
addr16
jmp
ds
mov
sbb
mov
and
pop
adc
jne
outsl
mov
jmp
ffreep
or
inc
gs
cmp
dec
pop
dec
sbb
mov
aaa
stos
push
sub
adcl
ret
sub
adc
inc
fucomip
xor
imul
pop
jns
xor
or
mov
lods
popa
cmc
dec
inc
int
in
jmp
pop
loopne
jb
mov
movsb
mov
mov
mov
and
pop
outsb
adc
or
or
data16
sti
mov
in
push
cmpsb
cld
mov
jb
jne
jno
xor
lds
cltd
mov
lahf
paddb
inc
sbb
orl
push
rcl
xchg
and
call
jno
lock
lds
js
sub
mov
push
jne
clc
xor
mov
lret
fxtract
mov
jo
adc
or
cli
fdivr
pop
test
or
and
cmp
push
sub
jno
leave
leave
sub
les
sbb
repz
mov
or
sbb
push
push
scas
in
cli
or
xchg
test
faddp
mov
push
nop
scas
int3
arpl
push
std
mov
rcrl
movsb
popaw
scas
fsubl
mov
or
lahf
mov
ret
insl
adc
fwait
cmp
or
imul
mov
in
jne
adc
addr16
xchg
sub
push
lret
pop
js
lahf
movsl
cli
mov
mov
adc
or
sub
xchg
test
enter
nop
cmp
sbb
cs
cli
push
arpl
flds
cmp
inc
cmc
inc
cwtl
roll
addr16
adc
jb
insl
sbb
mov
xor
xor
push
into
jno
nop
add
mov
and
xchg
sbb
fwait
lods
out
lock
pushf
sbb
gs
out
push
push
lahf
hlt
into
dec
xbegin
test
jmp
daa
arpl
xchg
and
pop
inc
xor
aaa
cli
push
and
mov
push
stos
imul
cmp
mov
add
in
dec
dec
or
paddusw
sbbl
rcll
xchg
jnp
incb
xchg
xor
in
jno
test
pushf
cld
adc
ja
dec
xor
push
scas
push
lret
nop
test
andl
inc
cs
dec
xor
and
inc
cmp
fsubrl
shrb
fs
xchg
fisttpll
pop
cmp
sub
js
imul
jg
inc
jecxz
ja
iret
xchg
lock
daa
stos
sarb
cmp
xor
icebp
mov
inc
mov
jne
jg
cmpsl
inc
mov
mov
mov
cmc
inc
int
lock
inc
adc
jae
js
pusha
imul
cmp
out
pop
adc
add
xchg
fcos
fisttpl
sbb
or
aam
ret
mov
cmp
loope
scas
xor
xor
xchg
fimuls
xchg
call
ds
mov
cmp
xor
cmp
dec
adc
adc
in
push
lods
push
lahf
inc
mov
fcomps
pop
xor
dec
test
in
fstpl
enter
mov
mov
fisttpll
fwait
sbb
cwtl
push
mov
mov
push
push
dec
or
and
jnp
cmc
not
rcll
aaa
shrb
fs
inc
and
stos
push
xchg
pop
mov
in
jae
scas
clc
test
out
mov
cltd
pop
adc
sub
sbb
inc
lret
push
movsb
dec
mov
js
dec
fnstsw
adc
sub
jl
mov
and
das
mov
push
or
or
testl
mov
sub
outsl
or
mov
pop
hlt
imul
cmp
xchg
and
xchg
sbb
jl
scas
and
repnz
vaddsubpd
xchg
pop
adc
xchg
jns
sbb
movsl
pop
repnz
scas
lods
ja
lret
test
adcl
outsl
add
cld
xorl
push
addl
imul
or
cmpsb
sub
ds
rolb
ds
sbb
insl
jo
test
push
bnd
andl
jns
lret
lock
xchg
jno
mov
dec
mov
xchg
xlat
jnp
mov
mov
adc
and
cmp
jno
dec
xor
arpl
pop
test
mov
adc
inc
popa
cmp
int3
fstl
dec
push
and
nop
imul
inc
and
mov
leave
adc
and
cmc
xchg
push
in
lods
cmp
mov
std
xorb
push
xchg
pop
aad
mov
ljmp
inc
dec
dec
mov
push
data16
arpl
aaa
test
push
xchg
mov
xor
bound
sub
mov
adc
or
jo
pop
fnstenv
pop
out
out
mov
or
outsl
or
loopne
cmp
pop
inc
sar
in
cmc
iret
adc
push
cld
mov
or
ljmp
and
aad
ja
ljmp
and
sbb
push
xchg
pop
sub
push
pop
jl
into
mov
insl
scas
mov
dec
push
rcr
jge
dec
je
xchg
nop
arpl
sarb
jmp
movsl
adc
movsb
sbb
lods
mov
stc
clc
lret
shlb
and
push
mov
push
ja
mov
mov
xor
mov
mov
add
call
mov
push
cmc
lods
xchg
jg
push
addr16
jle
xchg
out
stc
ja
xor
loop
jp
das
dec
sbb
movsb
aas
mov
pop
inc
jo
mov
jge
std
sti
loop
rclb
push
gs
int
push
or
xor
sahf
push
xchg
xchg
int3
push
xchg
fucomp
push
adc
addr16
jmp
addr16
in
or
testl
jg
or
lods
inc
push
test
stos
sub
add
mov
cs
pop
xor
orb
sbb
xor
mov
aam
xor
xorl
xlat
mov
loopne
call
scas
stos
or
aas
push
int
dec
xor
or
jne
sub
shll
cmp
adc
lods
mov
pop
inc
scas
mov
xchg
and
cmp
mov
pop
das
mov
xor
iret
xor
std
adc
xchg
test
xlat
or
pop
inc
push
push
shr
jge
cltd
push
mov
xchg
push
pop
clc
out
cs
sbb
push
pop
in
lret
or
add
ljmp
xor
xchg
jmp
les
stos
cs
mov
aad
mov
sbb
inc
or
test
sar
pusha
out
daa
mov
mov
jmp
gs
xor
jno
or
arpl
idivb
sbb
bound
sbb
mov
xor
cwtl
dec
inc
mov
and
mov
mov
inc
push
dec
mov
add
test
lock
lcall
nop
out
sub
mov
sub
cmpsl
std
mov
push
mov
sbb
movsb
mov
repnz
loop
adc
dec
sti
adc
stos
jo
rcrb
mull
push
scas
or
pop
sbb
sbb
mov
add
sub
xor
adc
lock
push
xor
sbb
repz
scas
icebp
out
mov
mov
movsl
shrb
loop
aas
clc
mov
add
dec
push
mov
xor
cltd
aad
fbld
in
sti
in
adc
sbb
xor
popa
mov
inc
cld
xchg
fnstenv
pop
ja
fcoms
cmp
arpl
xor
pop
jge
jg
and
mov
inc
and
sbb
cmpsb
jg
arpl
push
sbb
int3
mov
addl
outsl
pop
push
movsb
movsl
iret
mov
mov
loop
xchg
notb
jl
in
jns
mov
sub
sub
aad
jno
cmpsb
mov
mov
jno
lahf
jmp
xchg
mov
loop
sbbl
cmpsl
out
xor
push
mov
push
in
rcll
jge
push
mov
in
mov
test
jl
mov
adc
sti
push
lret
outsb
inc
dec
je
add
int3
jmp
and
int3
xchg
test
lock
mov
gs
dec
nop
repz
test
adc
or
mov
cmc
mov
add
push
rclb
mov
cwtl
shll
dec
shlb
out
add
stc
adc
inc
rcr
notl
jl
adc
stc
sub
neg
rcrl
mov
jmp
mov
lds
gs
mov
inc
adc
stos
scas
rorl
or
push
clc
popa
test
scas
xor
test
scas
je
add
pop
adc
inc
xor
stc
in
cmp
or
ds
pusha
push
add
loop
cmp
mov
mov
stos
or
jo
cmp
pop
xlat
daa
or
dec
add
push
push
xor
scas
scas
inc
aad
push
mov
pop
pop
cld
push
shl
pop
in
rol
mov
ljmp
inc
fists
ja
mov
jmp
or
cmc
call
rcrb
fisubs
mov
adc
cmpsb
xchg
push
pop
lea
inc
aas
outsb
mov
scas
or
ljmp
pushf
inc
xor
hlt
cmp
and
mov
xor
repnz
pop
and
adc
lods
add
mov
jg
jmp
in
loop
in
arpl
sub
in
mov
adc
pop
or
js
mov
les
fmul
pushf
add
rcll
mov
push
leave
lret
pop
push
cmc
adc
sub
mull
xchg
fdivrs
psubsw
adc
ja
sti
fisubrl
aad
mov
cld
ja
int3
push
nop
mov
test
jl
ljmp
mov
pop
int3
mov
ror
loop
in
jp
xor
sbb
or
xchg
das
push
fcomps
push
jmp
stos
mov
stc
dec
sub
and
inc
repnz
dec
dec
push
test
cmp
pop
stc
cmp
scas
loope
movsb
frstor
and
mov
mov
pop
pop
push
and
pop
sarl
fdivrs
lock
xor
jp
insb
or
ljmp
add
adc
test
pop
push
ds
mov
lods
pop
adc
jne
lds
rorl
setb
or
stos
lods
or
or
push
dec
loope
aam
sbb
sbb
or
repnz
sub
mov
pop
cltd
addb
sbb
repnz
jne
jecxz
jmp
fcmove
cld
rcll
mov
xchg
cld
jno
lahf
jmp
mov
mov
and
xor
cmp
push
sub
add
clc
or
push
in
cld
or
fldcw
mov
clc
bt
push
arpl
sub
mov
mov
fadds
jne
mov
add
adc
sbb
test
test
add
popf
mov
into
loope
sub
stc
pop
sbb
mov
stos
xlat
outsb
cwtl
shrb
push
adc
add
adcl
mov
rcrb
push
sub
sub
sub
jmp
loopne
mov
roll
pop
nop
jp
test
dec
loopne
fmulp
adc
cmp
subl
xor
insb
inc
push
movsb
xor
aad
sahf
pop
and
push
das
or
jbe
sbb
dec
xor
inc
and
sbb
jo
mov
sbb
icebp
rcrl
enter
mov
lods
and
sbbl
sub
dec
adc
lds
mov
push
or
sub
pop
imul
bound
push
and
mov
sub
inc
insl
sub
out
arpl
dec
cmp
pop
aas
inc
push
pop
xor
and
sbb
sbb
mov
loopne
out
cmpsl
or
lds
cmp
jg
adc
test
add
push
pop
push
lea
pop
ja
xchg
mov
xchg
fisttpl
out
popa
mov
repnz
dec
pop
lock
cwtl
rorl
mov
mov
les
scas
leave
or
bound
mov
jae
mov
jmp
repnz
in
bound
movsb
repz
leave
dec
shll
sbb
fdivp
push
iret
out
stc
sbb
sbb
xor
push
or
dec
sbb
int
pop
mov
mov
mov
pop
leave
ret
in
xchg
jp
jecxz
jb
pop
lea
icebp
jbe
repnz
addr16
nop
cwtl
push
cmp
lds
es
in
leave
inc
outsl
dec
push
fdivr
pop
xor
or
dec
jg
sub
sbb
test
and
dec
loopne
cs
fisubrs
scas
push
pop
pop
das
add
inc
jmp
loope
jns
pusha
xchg
lock
shlb
mov
lods
scas
stos
push
aad
sub
adc
dec
int
jp
xor
cwtd
ret
data16
pop
loope
mov
or
mov
jnp
out
pop
ficomps
mov
test
dec
dec
and
dec
mov
in
outsl
jp
sbb
scas
ja
mov
stos
sbb
int
out
js
xchg
mov
jns
jns
jle
push
out
in
jb
jl
mov
cld
stos
jae
pop
adc
mov
add
jae
or
jne
out
mov
or
sub
lret
fsubl
push
push
mov
cmc
fsubp
push
sbb
mov
mov
in
sub
mov
push
xlat
push
pop
mov
push
dec
xchg
xchg
cs
mov
mov
les
in
inc
push
pop
adc
enter
mov
rclb
addr16
mov
push
fxam
fisubrs
call
sub
sbb
mov
jae
lods
pop
mov
inc
in
mov
out
and
adc
rorl
add
xchg
scas
mov
mov
addr16
push
stc
add
xchg
xor
rol
and
ljmp
inc
cltd
stos
mov
xor
jne
ja
jge
inc
or
ja
cmovge
popa
pop
dec
test
add
or
adc
jne
push
add
ja
int3
inc
add
jnp
adc
push
mov
aaa
ds
xchg
mov
in
loop
or
jg
xchg
and
push
fdivl
push
lds
sub
inc
add
jmp
out
inc
in
cmp
pop
sbbl
sub
inc
ret
push
or
lret
push
add
pop
sub
icebp
popf
cld
xor
icebp
cmp
xchg
cmp
fs
sub
adcb
arpl
dec
mov
sar
pop
nop
jb
and
push
push
sub
enter
lret
mov
inc
push
lds
sub
xor
pushf
mov
sbb
addb
and
jnp
inc
sbb
rcrl
mov
push
std
into
push
lret
pop
adc
ja
mov
jle
mov
jno
popa
int3
nop
aam
loop
pop
test
insl
xlat
ja
loope
fistl
dec
pop
loop
xchg
mov
lea
popa
and
xlat
push
loopne
jle
sub
scas
pop
cmp
test
jne
mov
das
data16
insb
jg
sub
mov
lret
push
mov
popf
mov
sbb
sbb
cs
ja
xchg
sbb
jne
sub
lds
leave
or
lods
adc
sub
or
dec
mov
add
cltd
test
movsl
fwait
inc
cmp
nop
xchg
dec
leave
and
inc
push
fwait
stos
nop
mov
mov
push
scas
lret
test
repz
xchg
aas
jmp
push
inc
mov
outsl
sub
jbe
lea
or
add
push
dec
insb
adc
add
pop
cmpsl
push
pop
jp
clc
or
test
xchg
inc
arpl
sub
test
sub
andb
adc
pop
sbb
cltd
testb
scas
inc
sbb
dec
rcl
xor
imul
or
mov
call
and
sbb
adcl
sub
push
sub
mov
xchg
cmpl
js
lret
mov
mov
xchg
or
loop
pop
shlb
test
mov
push
sbb
in
sub
mov
stc
mov
icebp
ds
cmpsb
out
negl
lds
dec
mov
pop
loop
fisubs
and
jge
sbb
mov
rcll
test
out
adc
jae
jg
pop
loope
mov
insb
sub
rcrl
sub
lods
push
pop
jge
rcr
xchg
xor
lea
jp
inc
arpl
bound
jp
add
pushf
sbb
jecxz
jg
push
jns
cwtl
inc
pop
pushf
mov
or
andl
imul
int
cmp
mov
sub
dec
cli
call
into
pop
sub
push
pop
and
scas
sahf
pushf
sarb
adc
fs
xchg
shlb
and
fimull
addr16
inc
mov
adc
gs
mov
dec
aaa
insl
lock
ss
push
jns
icebp
sbb
gs
xchg
outsl
jl
shll
dec
adc
sbb
pop
xchg
add
sub
arpl
aam
push
mov
jnp
outsb
xor
push
cli
pusha
daa
faddp
aam
xchg
push
adc
out
mov
pop
pop
lods
stos
push
pop
in
dec
jge
or
mov
pop
shlb
mov
cmp
pop
xor
sub
pop
pop
sbb
call
aaa
insl
dec
pop
lret
sub
int3
cwtl
idiv
xor
std
push
pop
and
hlt
adc
repz
mov
sbb
or
mov
fisubrs
cmp
and
loopne
int3
bound
mov
jecxz
mov
test
or
push
mov
mov
fstpt
push
add
fwait
inc
push
dec
inc
repz
insb
mov
sub
mov
stos
test
inc
push
dec
pop
xchg
cmp
sub
subb
mov
lock
sub
fidivrs
call
test
add
fadds
dec
jg
lock
jbe
add
mov
adc
loop
push
fsts
orl
sbb
cmp
imul
iret
mov
fistps
adc
adc
test
cmpsb
sub
sub
cwtl
rol
pop
mov
out
mov
test
push
loope
cmc
xor
pop
je
pop
mov
std
icebp
inc
cwtl
ja
aaa
stc
addr16
sbbl
lods
dec
add
test
insl
clc
push
cmp
test
iret
xchg
pop
roll
popa
mov
dec
jge
test
mov
lea
mov
sbb
jmp
out
push
sbbb
pop
jae
mov
jl
xchg
hlt
addr16
lret
adc
in
push
mov
mov
pop
adc
test
test
cmp
add
jge
ds
in
pop
ljmp
pushf
fsubs
pop
pop
xchg
xchg
cwtl
sbb
and
and
cwtl
and
cwtl
pop
dec
inc
movsb
popf
adc
xchg
andps
js
sub
cmp
pop
jns
jno
push
scas
fwait
stos
xchg
pop
lock
mov
lds
dec
inc
stos
std
lock
or
adc
push
iret
add
loope
outsb
xchg
mov
sbb
xor
aas
jno
jl
and
mov
cld
rcr
cmp
shl
pop
mov
scas
sbb
mov
rcrb
outsl
popa
or
xor
into
fcompl
xor
mov
cmp
aas
push
add
icebp
repz
pop
inc
or
jnp
decl
xor
test
or
test
fs
pop
pop
inc
push
imul
je
adc
push
sbb
std
in
jne
xchg
dec
sub
cmc
xor
dec
push
push
xor
add
xor
add
jne
aaa
popf
dec
inc
sub
xchg
dec
add
mov
bound
adc
sbb
pop
cmp
and
push
cmpsl
mov
rcr
out
test
insl
add
imul
outsb
dec
mov
mov
inc
test
adc
xchg
imul
into
mov
adcl
xchg
ret
fiaddl
xchg
ret
add
and
lret
push
cld
push
xchg
insl
test
mov
flds
insb
dec
mov
pop
nop
gs
iret
sbb
add
fiadds
pop
adc
pusha
push
xor
test
stos
in
add
add
stc
stos
icebp
xchg
or
cmpsb
or
out
xchg
aas
cld
mov
pop
hlt
jmp
mov
mov
movsb
int3
test
fcmovne
and
mov
inc
mov
cmp
cld
mov
sub
out
mov
into
mov
add
push
push
lods
addl
fwait
mov
mul
jge
cmp
into
mov
and
xchg
push
movsl
sahf
das
jmp
lods
cs
out
push
stos
sti
mov
cmc
sahf
sub
cmp
lea
add
and
or
xor
push
bound
mov
insb
mov
xchg
test
mov
push
dec
divl
notb
push
sti
mov
dec
das
or
cmp
cmpb
sub
stos
dec
push
inc
setnp
sub
repz
xor
push
popf
ljmp
mulb
jmp
decb
cmp
lret
pop
mov
lcall
lahf
xorb
xchg
fdivs
inc
and
sbb
jbe
scas
sub
sub
or
cmp
stos
xor
cmpsl
mov
pop
jg
imul
sbb
cmpb
test
push
sbb
js
insb
es
in
or
mov
xor
arpl
mov
je
push
xchg
fcoms
cmpsb
sub
jge
pop
ljmp
jb
dec
jne
inc
add
adc
inc
lock
out
cli
sahf
cltd
pop
add
mov
mov
loope
push
inc
mov
push
dec
and
lret
ret
inc
adc
clc
into
andb
scas
loop
cmpsb
cmp
inc
and
popa
mov
scas
inc
push
pop
loope
jmp
pop
or
call
cmovle
into
and
pop
outsb
mov
bound
mov
arpl
pusha
add
xchg
shll
xchg
xor
mov
xchg
bound
xchg
leave
jmp
shll
mov
loope
add
out
mov
insb
add
fsubrl
jge
jbe
ja
imul
inc
sbb
push
jmp
push
fdiv
add
inc
mov
cli
es
push
mov
or
pop
sub
adc
imul
dec
xlat
js
lcall
stos
push
and
pop
enter
dec
hlt
add
pop
mov
pop
gs
aam
cmp
add
pop
add
inc
sub
jmp
stc
sub
add
aam
movsl
movsl
adcl
push
mov
negb
adc
arpl
fs
lods
xor
pop
add
sbb
gs
push
lret
cmc
push
push
jp
jae
jp
shlb
pop
ja
cmp
mov
hlt
xchg
es
dec
mov
ds
ret
icebp
add
mov
dec
aas
incl
mov
xor
imul
push
loopne
mov
xchg
test
lods
pop
xchg
and
and
pop
jmp
in
add
mov
sub
xlat
mov
sbb
lock
ficompl
pop
pop
inc
jl
movl
jae
push
jno
sbb
or
in
and
jp
insb
add
inc
ds
clc
mov
nop
pop
lds
inc
sub
dec
leave
dec
pop
sub
cli
xchg
test
int3
add
push
cld
jge
out
xchg
adc
or
push
mov
addr16
in
xchg
and
pop
cltd
icebp
and
sbb
jmp
dec
sub
jge
ret
imul
popf
adc
adc
add
inc
push
bt
ret
ror
rsqrtps
cmp
dec
test
sub
mov
test
ljmp
inc
add
imul
cmp
mov
jle
std
andb
addb
mov
push
sbb
shl
and
jnp
loop
rolb
es
add
repnz
test
aad
and
xor
push
scas
pushf
fwait
mov
cmc
xchg
lds
mov
in
mov
and
push
sbbb
orl
test
add
test
lret
jge
out
push
sbb
xchg
cmp
or
jmp
jae
mov
ja
add
adc
ret
retw
mov
rolb
shrb
cmc
jae
add
mov
inc
sbb
fadds
inc
and
add
aam
arpl
add
scas
call
inc
lock
test
mov
and
inc
adc
testl
adc
or
add
popf
icebp
adcb
fsubrs
or
sub
aam
inc
or
pop
push
sub
pushf
pusha
rcll
lret
mov
mov
sub
adc
in
inc
adc
mov
sbb
imul
ds
or
xor
bnd
ret
add
bound
jl
jmp
fcoml
sub
pop
or
addr16
rcrb
arpl
jns
jg
inc
inc
stos
inc
aaa
mov
rolb
roll
inc
mov
pushl
ficoml
sbb
add
fidivrl
adc
int
in
ds
stc
inc
mov
xchg
pop
shrl
jle
sbb
sbb
mov
inc
bound
xor
adc
jmp
popa
mov
js
adc
pop
xchg
xor
andb
fmul
or
pop
fidivrl
jbe
hlt
testl
pusha
dec
mov
sub
mov
cmpsb
inc
inc
adc
in
call
pop
cmc
mov
dec
repnz
inc
sbb
pop
lahf
add
pop
mov
push
xor
jg
dec
int
shlb
pusha
imul
sub
mov
jecxz
xor
cmpsb
lcall
xchg
sti
dec
sub
pop
adc
sbb
and
mov
sbb
mov
pop
cmc
xor
push
and
add
fwait
aaa
inc
mov
push
test
add
les
dec
aad
and
and
inc
lahf
sbb
and
adc
xor
rorb
subb
cmp
xor
adc
cmpsb
stos
push
adc
pop
adc
cmpsb
and
adc
bound
clc
int3
dec
or
push
test
push
gs
aaa
mov
or
outsl
inc
lds
mov
enter
addl
push
inc
fidivrl
inc
sbb
imul
push
push
out
or
xor
dec
adc
inc
dec
push
xor
sbb
cmc
inc
push
and
adc
imul
sti
in
btrl
mov
push
push
cmpb
outsb
push
push
push
clc
xor
jo
cmp
jo
les
inc
add
xchg
or
es
repz
sbb
fcompl
and
adc
sahf
push
push
sub
cmp
fldz
arpl
cmp
adc
es
cmpsl
adc
add
inc
shll
mov
lret
loope
inc
and
fiaddl
aam
pop
or
dec
add
jl
inc
mov
pop
adc
outsb
xor
cmpsl
pop
sub
pop
xor
mov
and
inc
lea
hlt
loop
or
aam
pop
xor
mov
mov
mov
push
xchg
jno
scas
push
aam
adc
pop
dec
sub
add
bswap
push
gs
jno
mov
lret
lock
cltd
jne
jge
cltd
xor
imul
xchg
fcompl
xchg
inc
aad
mov
out
mov
div
push
pop
jmp
adc
cs
add
jnp
dec
xchg
xchg
pcmpgtb
mov
inc
bound
add
adc
cwtl
xchg
pusha
data16
imul
loopne
shl
rcl
inc
adc
mov
shlb
hlt
adc
or
clc
pusha
das
mov
sub
pop
or
jo
pop
shl
sbb
xlat
orb
sub
push
add
in
cs
pop
clc
add
push
push
lds
mov
or
mov
sub
mov
sub
jo
dec
xchg
xor
loop
pop
pushf
mov
into
rolb
inc
imul
pusha
inc
inc
aad
pop
inc
add
adcl
xchg
lret
mov
insb
shlb
int3
frstor
cmp
xchg
jge
push
icebp
dec
es
or
mov
inc
xor
mov
xor
out
popa
adc
mov
add
mov
sbb
push
test
push
xchg
icebp
sbb
jp
and
adc
jp
mov
test
push
dec
movsb
mov
pop
mov
sub
sbb
leave
popa
adc
fwait
add
cmp
lds
jo
adc
and
lret
jp
cs
mov
xlat
and
mov
add
xor
test
idivb
cwtl
sbb
pop
dec
xchg
pop
jb
pop
mov
movsb
or
movsb
punpckhwd
sahf
mov
push
sbb
in
gs
enter
adc
imul
adc
test
pop
mov
sbb
rorl
xchg
jmp
out
jb
repnz
mov
cmpsb
push
and
xor
xor
enter
dec
sub
leave
gs
test
loope
inc
mov
mov
inc
lea
add
inc
movsl
mov
sbb
inc
add
rorl
push
addr16
push
or
jp
add
pop
mov
ret
add
push
xor
aad
dec
lahf
sbb
rcll
jo
push
lea
shll
daa
subb
movsb
pop
adc
push
inc
sub
mov
jecxz
sahf
cltd
stos
in
js
cmp
loopne
roll
sub
aas
mov
adc
lock
mov
iret
dec
dec
add
fldt
push
or
enter
cmp
or
push
andb
inc
or
xlat
sbb
and
gs
sbb
lahf
sub
push
sub
addl
mov
jnp
test
adc
adc
scas
jae
xchg
xor
push
mov
push
and
frstor
adcb
dec
mov
xchg
add
in
shlb
sub
inc
test
sarl
shl
dec
inc
adc
mov
loop
dec
or
xor
cmpsl
sbb
mov
jb
sub
sub
sbb
push
outsb
xor
mov
add
cltd
jge
jmp
xor
mov
add
xor
sub
iret
adc
sub
sahf
mov
icebp
arpl
outsl
dec
mov
dec
inc
pusha
add
sbb
pop
enter
adc
xchg
adc
mov
and
pop
dec
imul
jp
js
mov
inc
mov
add
ret
aam
push
movsb
pop
adc
xchg
int3
and
sub
xor
adc
jmp
and
stos
arpl
rorb
or
add
pop
fcompl
cmp
fistps
sub
add
lahf
outsl
nop
vshufps
jo
inc
jo
lods
sbb
lea
in
sub
dec
jae
mov
data16
dec
lcall
stos
cmp
sahf
out
popa
cltd
sub
enter
ret
jns
jns
cwtl
aad
pop
sub
mov
aaa
mov
and
and
repz
out
out
jns
jne
lds
or
andl
cmpsb
adc
and
popa
lods
cmp
fstpt
insb
sbb
cld
inc
push
lods
stos
push
or
add
call
pop
xchg
mov
cmp
adc
adcl
dec
daa
adc
push
sbb
dec
adc
push
pop
out
jne
lods
cmp
inc
and
cmc
lods
test
sbb
xchg
dec
mov
cmpsb
xor
ret
outsb
push
push
loopne
loop
or
mov
in
rorb
cwtl
push
mov
ds
fdivr
dec
mov
int
xlat
mov
mov
mov
sub
mov
dec
nop
add
jae
sub
cmp
mov
mov
or
mov
cs
xor
lock
aam
cmc
add
xchg
xchg
pop
sbb
cmpsb
jbe
push
adc
test
inc
xlat
outsb
xor
push
add
sub
gs
daa
pop
ljmp
xchg
ret
test
mov
xor
adc
leave
jl
sub
test
dec
and
cwtl
addb
dec
arpl
add
xchg
add
add
push
cmp
push
and
fstps
jge
sbb
jb
outsb
iret
nopl
cmp
adc
fs
lcall
pop
cmpsl
mov
arpl
mov
sbb
jae
pop
pop
xchg
or
lds
ret
test
sbb
or
sbb
push
jae
push
mov
sbb
cwtl
pop
jne
sti
add
inc
jne
pop
sub
pop
xor
jmp
loop
add
cmp
sarb
push
mov
mov
outsl
push
aam
les
sub
lret
mov
gs
inc
cmp
in
and
mov
dec
sub
jmp
sbb
pop
pop
xlat
or
lcall
sbb
test
cmpsb
mov
jecxz
inc
ljmp
or
cwtl
or
add
push
cwtl
push
popa
and
push
xor
inc
add
sub
sbb
sbb
push
cmp
sbb
rclb
loopne
xor
js
ljmp
dec
mov
pop
push
lret
out
mov
sub
fidivrl
push
cwtl
call
ret
test
inc
xor
jle
add
push
aad
fwait
mov
dec
cmp
mov
int3
mov
int3
repnz
lea
push
xchg
sub
sub
inc
adc
adcb
xor
ljmp
mov
movb
mov
arpl
bound
xchg
mov
cmp
fisubl
shll
roll
adc
inc
mov
sub
mov
sbb
push
jp
mov
and
lods
adc
add
pop
jle
nop
rorb
xor
cltd
sub
fldt
xchg
test
icebp
inc
and
jns
push
ja
mov
mov
int3
xchg
jl
sub
test
push
pusha
push
inc
dec
xor
add
and
rolb
divb
andb
mov
cmpsb
push
and
add
lret
les
push
stos
jecxz
lret
mov
jecxz
pop
arpl
lret
xchg
insl
sub
cwtl
jns
mov
xlat
xchg
movsl
sub
and
bound
rcrb
dec
sub
xchg
add
inc
clc
pop
mov
jno
in
cmp
push
push
pop
adc
xchg
cmp
xorb
mov
sub
inc
inc
or
jmp
lret
cmc
inc
push
rorl
fimuls
stos
and
jl
push
fsubr
sub
loop
sbb
shrl
jns
int
sarl
mov
fcoml
mov
mov
xlat
dec
adc
in
push
xor
int3
and
jne
cmp
sbb
mov
bound
roll
mov
push
sbb
mov
xchg
imul
aas
or
inc
dec
lock
pop
pop
inc
sbb
xor
inc
shll
loop
and
push
pop
fcoms
xchg
out
mov
insb
xchg
outsb
sub
imul
or
repnz
inc
adc
xor
popa
call
scas
mov
es
in
xchg
pop
insl
cmp
andb
std
shlb
lds
mov
arpl
hlt
sbb
movsl
mov
and
xor
js
sti
shlb
jne
xor
pop
pop
push
cltd
inc
lea
cmc
mov
sbbl
pushf
mov
out
jo
mov
push
jg
sbb
test
jmp
adc
dec
aas
mov
movsb
aam
xor
arpl
es
aam
dec
xchg
lret
outsl
pop
inc
fstp
data16
push
sub
mov
fwait
mov
das
pop
mov
sub
mov
push
inc
mov
adc
mov
xchg
sbb
pusha
add
sbb
scas
testl
pushf
jno
arpl
clc
out
outsb
xor
data16
clc
imul
mov
rcr
xchg
or
xchg
jb
nop
mov
movsb
cmp
inc
shr
scas
fwait
hlt
pop
gs
mov
lret
shll
push
data16
mov
testb
mov
movsb
xchg
xchg
mov
push
dec
push
pop
cmp
pop
xchg
js
mov
adc
xor
popa
jle
xor
xor
roll
aaa
inc
test
imul
mov
add
push
pop
add
inc
add
or
bound
pop
and
xor
xlat
inc
sub
push
mov
bound
sbbl
imul
insb
xchg
aas
and
test
sbb
and
sub
int
loopne
and
xchg
sub
cmp
and
out
cli
adc
or
subb
xchg
call
mov
dec
jg
adc
pcmpeqb
dec
icebp
pop
enter
push
xlat
sti
and
xchg
jmp
adc
jmp
push
cltd
movsb
cwtl
xor
push
fsubs
push
xchg
mov
incl
in
mov
xor
loopne
push
push
push
xchg
mov
enter
test
xchg
or
jo
les
cltd
or
cld
fisttpl
inc
fmull
sbb
fxch
adc
addb
data16
bound
push
mov
xchg
lcall
inc
loop
rorl
movsb
repz
sbb
lret
adc
adc
sub
inc
test
xchg
sub
inc
int3
lods
and
adc
leave
js
les
fmuls
arpl
xor
pop
sbb
rdtsc
sub
sahf
xor
sbb
mov
dec
cmp
xor
add
ret
ljmp
jle
or
push
clc
or
dec
aam
push
loopne
pusha
pop
jnp
cmp
adc
or
xor
and
jns
out
lods
test
data16
xchg
push
es
jp
shl
test
sub
jb
ja
repnz
adc
mov
dec
shl
xlat
inc
add
or
adc
add
mov
stos
test
mov
mov
loop
or
push
push
jnp
jge
dec
fildl
add
dec
lret
mov
mov
sbb
mov
daa
icebp
jmp
andb
pop
xchg
shrb
add
ret
dec
push
sahf
outsb
pusha
inc
fucomi
daa
xchg
or
and
pop
and
inc
pop
adc
add
popa
push
es
push
stc
inc
in
fbld
hlt
fsts
outsb
mov
call
jb
inc
mov
rorb
imul
into
stos
pop
dec
sbb
lret
dec
add
movsb
repz
dec
add
fildl
jo
sub
std
pop
push
push
testl
adc
mov
sarb
or
dec
jp
push
imul
ljmp
cli
loopne
cmp
ficoml
popw
ja,pt
in
mov
repz
inc
enter
pop
loopne
mov
cld
nop
sub
xchg
adc
pushf
push
out
xchg
jne
jno
inc
std
and
adc
aaa
push
xor
ret
nop
scas
push
mov
int3
inc
pop
and
dec
divl
push
sbb
ja
cmp
xor
xchg
arpl
out
fwait
mov
inc
xchg
jo
loope
cmp
testl
pop
push
adc
rcr
xor
jge
pop
xchg
cs
jae
add
push
push
and
test
or
imul
mov
pop
push
lods
shlb
inc
pop
mov
push
fistpl
aas
icebp
int3
or
das
add
and
or
adc
sub
js
add
cmpsl
lret
lea
or
dec
pop
sahf
int
mov
cmpsb
add
insb
popa
out
push
jbe
push
fisubl
add
jge
jnp
stc
mov
cwtl
aam
mov
inc
arpl
repz
xchg
inc
movsl
daa
mov
sbb
fdivs
and
jecxz
pop
pop
add
loop
fstps
aas
xchg
test
cli
push
pushf
nop
push
or
jo
lods
xor
dec
mov
and
mov
sub
clc
xchg
or
sub
ds
inc
mov
mov
sbb
rol
stos
push
xor
mov
jle
mov
les
cld
cwtl
push
aad
xchg
sub
dec
pusha
lods
adc
cmp
and
in
cmp
lcall
add
adc
popa
movsb
and
pop
pop
rol
ret
add
mov
xchg
out
push
test
mov
xor
sub
jns
or
push
add
shlb
fcoms
sbb
mov
push
sbb
jbe
mov
add
lods
mov
jb
in
mov
sub
insl
movsb
dec
sub
push
loop
dec
inc
push
lds
es
sbb
adc
adc
in
sarb
aaa
xchg
push
push
and
mov
or
xchg
dec
jge
cmp
in
pop
push
inc
in
and
fcoms
sub
testl
lcall
sub
rol
movsb
shl
aad
jecxz
adc
inc
ja
mov
sahf
cmp
popa
loope
mov
mov
lcall
pop
popf
inc
cltd
or
cwtl
or
loope
or
icebp
sbbb
sarb
mov
arpl
xchg
ret
daa
cmpsl
icebp
outsl
rcll
repnz
ds
xor
adc
adc
fistl
inc
daa
adcb
pop
insb
adc
sub
push
pop
push
lock
ficoms
js
xor
and
icebp
pushf
les
js
ljmp
divw
or
pop
inc
xor
add
aad
sbb
lret
add
cwtl
sub
xchg
sbb
push
jb
test
lods
inc
xlat
mov
sar
push
or
push
adc
pusha
rorb
xor
test
lds
ss
js
ret
and
das
sbb
loopne
cld
dec
add
insb
fabs
jmp
mov
cmp
cli
out
dec
aam
xlat
xor
dec
icebp
xor
adc
les
xor
sub
xor
xchg
and
and
fcomps
adc
rcrb
pop
iret
jno
pop
scas
sbb
cmc
les
mov
rclb
pop
add
sbb
fs
roll
jg
sahf
mov
icebp
cli
push
in
scas
push
adc
int3
and
inc
and
add
dec
dec
xlat
xchg
adc
cmp
add
add
push
fnsave
stc
push
dec
rorl
cwtl
push
sbb
inc
insb
sbbb
sub
xchg
cwtl
cmpsb
and
addb
in
jecxz
cld
mov
inc
and
dec
inc
push
loop
movsb
pop
in
or
stc
adc
outsl
or
cmp
or
pop
fdivs
lahf
and
mov
or
lret
vpmovmskb
mov
mov
imul
xchg
je
jb
int
cmpsb
daa
lods
mov
into
nop
xor
cmp
daa
lds
mov
push
stc
inc
cmp
push
push
sbb
neg
inc
dec
sbb
xchg
pop
dec
aaa
pop
lods
loopne
mov
dec
dec
in
ss
pop
mov
sbb
add
dec
stos
sbb
dec
mov
fscale
fdivl
movsl
pop
and
xor
mov
repnz
cmpsl
mov
adc
push
or
movsb
lods
lahf
testl
rcrb
cmpsl
cmp
dec
aad
pushf
ret
bound
scas
jae
pop
sarb
push
mov
cs
ljmp
mov
in
hlt
xor
dec
and
mov
fwait
gs
cwtl
sbb
fcoml
mov
add
jecxz
push
inc
inc
pop
shlb
mov
fcmovbe
andw
jne
xor
ret
xchg
sahf
jns
xlat
add
mov
push
mov
movups
inc
lock
adc
popa
bound
push
jbe
mov
xchg
pop
loop
outsb
mov
push
mov
or
dec
sar
push
iret
push
xchg
jb
movsb
xchg
enter
nop
add
fidivrs
mov
lret
daa
sbb
pop
fadds
sar
mov
lret
test
les
call
lods
fcoms
xor
pop
gs
dec
fmull
mov
sub
scas
pop
inc
rcrb
pop
int
scas
cmpsb
addr16
imul
fs
dec
rol
dec
mov
push
mov
push
cmp
les
pop
pushf
pop
push
imul
cmp
jecxz
push
loopne
jmp
inc
jecxz
outsl
icebp
push
lods
gs
or
repnz
jle
aam
push
sti
idivl
adc
xchg
in
inc
pop
mov
scas
or
iret
pop
pop
add
adc
pushl
mov
push
sbb
jl
mov
dec
cli
pop
sbb
and
sahf
test
and
adc
sub
popa
out
test
scas
lahf
add
pop
arpl
out
fldl
stos
and
pusha
rolb
push
test
cwtl
hlt
or
hlt
call
add
clc
das
and
add
or
fisttps
add
cltd
inc
and
cmp
and
sbb
mov
inc
shlb
cmc
pusha
test
lods
xchg
mov
cmp
inc
movsl
pop
adc
mov
xchg
dec
out
loopne
int3
shll
cli
or
push
dec
lahf
xlat
xor
and
mov
adc
fdivr
fiadds
adc
jae
cmp
popa
mov
push
xchg
movsb
inc
das
jp
mov
mov
or
cmpsl
pop
out
jbe
inc
inc
inc
or
pop
int
mov
ret
add
xchg
jns
adc
and
sbb
sbb
push
xor
xor
jmp
mov
mov
lds
mov
sbb
fildl
push
adc
cmp
dec
leave
imul
lcall
ret
mov
mov
jmp
mov
cmpsb
xchg
scas
andl
dec
mov
sarl
or
jbe
mov
dec
or
shlb
and
das
xchg
repz
dec
add
movsl
das
xor
sbb
mov
xor
mov
pop
xor
dec
scas
mov
imul
jp
mov
jnp
push
mov
fwait
or
addb
pusha
sbb
push
in
cmpb
and
mov
xchg
push
imul
add
sub
push
leave
sbb
mov
pop
sub
lods
pop
pop
repz
sub
sbb
mov
dec
dec
sbb
dec
ret
xchg
push
pop
nop
or
inc
test
popf
es
inc
fstpl
mov
sbb
push
push
ds
push
adc
aad
sub
cmp
adc
cmp
pop
push
sub
scas
call
xor
jnp
xchg
mov
pop
jle
dec
mov
lods
mov
in
jp
sar
shr
inc
cmp
adc
cmp
adc
and
fsubrl
les
mov
testb
sub
or
sub
pop
sbb
xor
sbb
lods
fistl
sbb
lret
fldcw
and
out
mov
leave
lods
mov
push
dec
sbb
sub
into
pop
cltd
insb
add
pop
mov
push
aad
shlb
jp
sti
cmpsl
fs
jecxz
xchg
pop
fnstcw
dec
xchg
scas
dec
out
mov
jp
inc
pop
jp
jg
add
imul
fidivl
push
js
in
mov
jae
mov
out
out
or
fadd
add
lea
popa
dec
leave
pop
pop
adc
cmp
inc
lods
inc
aaa
xor
aas
adc
xchg
push
in
sbb
je
out
dec
bound
xor
mov
lret
fisttpll
inc
and
sub
dec
mov
orl
out
stos
arpl
int
js
imul
or
cltd
mov
dec
sarb
ljmp
jecxz
mov
add
xlat
arpl
pop
shrl
call
sbb
dec
adc
das
sub
or
mov
test
xor
call
push
adc
test
in
sbbb
xor
jg
gs
or
mov
sbb
inc
test
rcl
or
and
lods
aaa
add
nop
lcall
leave
test
shlb
gs
and
push
clc
jp
mov
rolb
xchg
imul
jecxz
xor
inc
movsb
and
cmp
or
inc
shl
stos
pop
sarl
xchg
test
mov
lret
lock
jmp
subb
xor
fcoms
rcrw
cmp
cwtl
in
sub
mov
cmp
movl
stos
popf
dec
std
push
repz
sbb
xchg
pop
jg,pt
sar
pop
outsb
ljmp
mov
adc
mov
mov
sahf
add
pop
pop
mov
dec
fldenv
scas
lods
xchg
adc
nop
lcall
jno
orb
cs
pop
loopne
ret
filds
loope
adc
imul
scas
cltd
mov
ss
ffree
push
out
or
fs
shr
repz
sub
test
pop
insb
data16
cld
adcl
push
cmovne
push
js
adc
imul
push
or
and
mov
shrb
in
mov
sbb
ja
mov
jg
xor
xchg
out
inc
adc
mov
andl
jbe
leave
or
int3
popl
clc
sbb
icebp
mov
inc
sub
sub
xchg
inc
dec
jecxz
mov
fmull
inc
movsl
and
pusha
sbb
xchg
inc
imul
add
jo
adc
repz
xor
adc
mov
xorl
push
fdivr
outsl
push
ja
loope
rclb
std
or
or
or
inc
stos
adc
xchg
push
sbb
imul
mov
movb
aaa
mov
bound
fldl
repnz
and
sub
xchg
sbb
push
es
fwait
loopne
sahf
dec
movsl
insl
fwait
adc
pop
cmp
mov
xchg
pop
add
imul
xor
inc
roll
in
xor
inc
sub
dec
push
jnp
cmp
add
push
push
xchg
sub
test
int3
xchg
imul
stos
lret
ret
mov
mov
xor
xchg
pop
mov
das
aaa
xchg
lock
ret
dec
and
push
mov
cmp
dec
push
ja
test
test
adc
cmp
push
mov
cmp
cmp
push
mov
jae
add
jge
scas
loop
lods
movsb
and
mov
les
mov
cwtl
mov
push
or
shll
xor
push
fists
int3
sbbb
imul
or
sti
rolb
cwtl
mov
loop
mov
push
pushf
ss
test
arpl
jno
test
mov
lock
xor
loopne
aam
test
jecxz
inc
push
cmpsb
adc
add
push
in
jp
mov
and
xor
and
in
jne
and
rcll
xchg
movsb
or
aam
pop
pop
jge
and
dec
jecxz
add
les
sub
movsl
jbe
insl
mov
pop
adc
fs
xor
and
enter
push
jg
push
mov
rolb
xchg
in
testl
xor
push
shr
loop
ret
add
in
mov
in
push
js
mov
adc
add
xor
adc
sub
fwait
cmp
fwait
adc
add
sbb
mov
insb
xchg
test
push
out
into
push
xchg
push
fs
aas
mov
xchg
in
jp
test
daa
lret
sbb
sub
sub
popa
rorl
outsb
lcall
mov
cmp
test
mov
cmp
jne
roll
jge
add
lea
lds
or
ffree
rorb
ja
inc
mov
xor
dec
adc
jns
test
xor
mov
adc
hlt
dec
js
mov
sub
sbb
push
sbb
mov
aaa
add
out
rolb
xchg
sbb
insl
inc
push
xor
stos
popf
das
dec
cmpsl
sub
dec
push
mov
inc
dec
sub
lcall
add
scas
or
push
add
pop
jge
bound
leave
pop
pop
cmp
ds
mov
or
jge
stc
adc
cmp
mov
cmp
imul
xor
popa
or
arpl
inc
cld
or
sub
mov
jb
and
lret
gs
out
inc
mov
pop
insb
or
mov
mov
sti
inc
stc
push
pop
movsb
jg
or
divb
push
rolb
mov
jb
push
mov
sarb
loop
adc
test
and
cltd
ljmp
mov
dec
fcmovnb
leave
loop
or
push
mov
mov
int
xchg
push
mov
lret
push
addl
imulb
or
ret
add
pop
sbb
mov
jl
xchg
sub
aas
push
jno
xor
js
je
stos
lahf
lret
mov
mov
mov
jle
sar
out
push
shll
mov
rcll
xor
xchg
loope
lret
fs
jae
int
fcoms
lahf
xchg
lds
add
xchg
dec
xor
les
add
sbb
rolb
and
les
pop
xchg
pusha
push
aam
pop
sahf
or
sub
stos
test
inc
pop
mov
xlat
or
lods
pop
mov
push
xchg
add
push
push
add
mov
lret
es
sub
ret
mov
mov
mov
ds
sbb
pushf
loope
cltd
cmp
js
xchg
jl
icebp
pop
pop
call
xchg
movsb
dec
aam
push
mov
push
jmp
and
jmp
mov
dec
inc
cmpsl
xchg
dec
add
push
xchg
loope
in
pop
shll
xchg
addr16
dec
sbb
sub
mov
daa
int
les
loope
adc
xchg
loope
rcrb
dec
xor
push
jge
mov
mov
cwtl
js
jecxz
cmp
pusha
and
addb
les
out
mov
in
sub
push
cmc
outsl
xor
add
inc
xchg
arpl
in
sahf
cmp
xchg
xor
gs
push
ja
push
fstp
push
clc
in
lods
test
insb
inc
dec
jns
lds
sub
int
lcall
add
add
cmc
arpl
loopne
cmpsl
jno
jge
ret
sub
fstl
mov
and
mov
call
mov
inc
cmpsl
lods
mov
push
test
sub
or
mov
mov
adc
sub
mov
fwait
les
ljmp
clc
inc
add
pushf
fadds
mov
js
movsb
mov
cmpsl
xchg
or
das
les
inc
mull
xchg
pop
mov
jae
jp
pop
push
sub
insb
jecxz
lret
push
adcb
stos
or
fnstenv
rcr
xchg
xor
out
jmp
dec
xor
lods
cmc
pushf
das
out
and
movb
fidivrs
ficompl
dec
inc
cmp
mov
scas
and
bound
push
jbe
fwait
mov
or
pop
pop
lods
mov
lods
fwait
mov
jno
gs
xor
in
push
cmpsl
repnz
mov
ret
or
inc
mov
ret
xor
punpckhdq
pop
dec
leave
pop
dec
sbb
lock
orb
scas
push
rclb
ficomps
out
add
test
xlat
add
adc
mov
enter
shlb
push
aas
testb
xchg
aam
or
mov
jbe
or
adc
inc
pop
mov
lea
repnz
fidivl
xchg
jge
push
sub
pop
xor
push
pop
out
fsts
and
loope
rol
xchg
nop
stos
in
lds
lds
fnsave
sub
das
dec
adc
imul
andl
aaa
test
cwtl
or
enter
scas
jp
inc
test
sub
dec
lret
push
mov
push
mov
sbbl
mov
jne
push
pop
sub
sub
lret
inc
mov
xchg
add
mov
inc
jp
jmp
std
rcll
xchg
push
outsb
adc
jno
inc
roll
xchg
pop
rorl
sahf
fwait
inc
fbld
or
lahf
inc
lret
aam
icebp
dec
sbb
xor
enter
es
ret
add
mov
xor
xor
fwait
sbb
sub
adc
cmp
pop
sub
cmpsl
into
add
cmp
cld
mov
push
jecxz
popf
xor
mov
jle
shrl
out
mov
push
icebp
mov
mov
xor
mov
xor
popa
aad
mov
cld
dec
and
inc
jae
mov
nop
and
xor
mov
sbb
mov
adc
add
xchg
cwtl
jno
mov
hlt
add
inc
daa
inc
xchg
jns
cs
sbb
mov
mov
inc
fisttpll
lret
push
dec
and
dec
jge
shrb
in
adc
aam
loop
mov
dec
cmpsb
pop
sahf
xchg
stos
or
rolb
push
movsb
sbb
in
cmc
sbb
pop
mov
sbb
pop
mov
push
mov
repz
xchg
fsubrl
push
mov
scas
cmpsl
xor
mov
xor
push
xchg
sbb
aaa
xlat
jnp
nop
jns
add
add
rcrl
scas
movsl
push
add
inc
xchg
orb
sub
sbbl
and
in
sub
cld
ss
jp
mov
or
in
stos
call
popa
shl
test
inc
add
push
aaa
inc
sbb
lret
mov
mov
je
xchg
mov
cmp
lcall
or
inc
cmp
test
sub
add
sbb
sub
mov
mov
adcl
dec
xchg
sbb
lcall
or
sbb
mov
test
mov
sti
outsl
or
xchg
into
mov
inc
mov
pop
inc
adc
and
adc
add
lock
pusha
mov
pop
cs
setb
dec
push
movsl
mov
dec
mov
xchg
pop
fsts
xchg
adc
lret
mov
mov
and
push
adc
inc
lret
ret
sub
cltd
xor
mov
sub
xor
or
and
pop
scas
sbb
inc
lahf
and
pusha
jbe
leave
pusha
pop
xchg
sbb
xchg
aaa
lret
mov
push
xor
leave
and
in
nop
mov
inc
fcmovnu
gs
insl
mov
or
adc
hlt
lret
cmp
fstps
test
inc
and
jno
jle
dec
xor
lods
inc
loopne
pusha
in
leave
mov
jns
inc
fisubrl
pop
ret
subl
push
sbb
fldt
mov
mov
testb
xchg
cmp
mov
and
fldcw
adc
sub
cmp
xchg
and
addr16
lret
or
fisttpl
push
jbe
mov
lea
mov
inc
loopne
cmp
popa
cwtl
sub
and
cs
mov
xor
ljmp
xor
adc
sub
repnz
cmp
and
jecxz
inc
clc
inc
out
fcoms
mov
test
adcb
mov
cs
sub
mov
inc
adc
mov
das
dec
cmp
outsl
xor
pop
dec
pop
sub
loop
and
ret
mov
pop
and
cmp
inc
add
aaa
ljmp
cs
dec
test
test
lods
inc
push
jp
mov
fsubr
cmp
sbb
lret
or
sub
loop
aas
cs
jecxz
push
push
pop
add
cmpl
hlt
jo
clc
roll
scas
xlat
sub
daa
jbe
les
xor
pusha
sbb
push
push
jo
mov
xchg
xchg
into
mov
incb
push
xchg
popf
lods
out
fwait
insb
test
ret
push
sub
sarl
jb
aas
jns
adc
pop
sbb
jbe
shrb
cltd
xchg
mov
or
lock
repz
dec
rorb
jbe
loopne
push
push
xor
mov
inc
aas
out
js
or
xlat
das
xchg
push
xorb
mov
test
pop
xchg
int
cli
ss
push
add
or
ds
rol
imul
cmpsl
sbb
and
add
aad
hlt
mov
fnsave
and
sbb
mov
loop
push
aam
mov
adc
popf
lea
mov
in
dec
xchg
sbb
loop
popa
stos
std
jge
inc
inc
scas
stos
sbb
pop
in
add
leave
test
xchg
sub
mov
push
push
xor
scas
ficompl
inc
pusha
flds
bndldx
adc
in
lock
and
adc
outsb
test
push
shlb
xchg
cmp
sub
and
inc
sub
pop
test
xchg
out
xor
mov
push
inc
mov
ret
add
inc
lods
xchg
pop
icebp
jo
dec
add
scas
js
xchg
add
dec
jns
test
lea
clc
movsb
xor
out
add
jno
pop
mov
loopne
mov
dec
pop
xchg
in
push
cmp
sub
mov
jecxz
push
cmpsb
sbb
push
adc
sub
sbb
jno
inc
cwtl
call
test
xchg
mov
lcall
xchg
outsl
sub
pop
mov
dec
imul
xor
nop
out
pop
loope
lock
adc
inc
dec
xchg
dec
and
std
xchg
or
push
inc
stc
push
xor
lods
dec
sub
jb
cmc
mov
jge
idivb
mov
jb
sbb
or
inc
mov
popf
cwtl
outsl
out
mov
cmpsl
stos
aad
std
psraw
sub
lock
lock
xchg
stos
mov
adc
imul
test
cld
mov
ljmp
jp
ret
mov
adc
inc
scas
daa
xchg
mov
push
call
pop
xchg
das
cmp
push
sbb
sbb
cwtl
jle
sbb
dec
adc
jl
shll
pop
xor
cmpsl
sub
push
ja
or
cmp
arpl
mov
in
inc
fldcw
ljmp
cmp
add
sbb
in
scas
pop
inc
out
shrl
sti
rcrl
push
sbb
pop
dec
sbb
shlb
push
push
negb
and
clc
cmp
loopne
daa
push
mov
sub
incb
jge
cmpsb
xchg
ss
and
push
jmp
bound
pop
pop
mov
das
bound
repnz
pop
popa
int
mov
shll
sub
sub
scas
or
mov
inc
add
push
push
sbb
lret
push
xlat
gs
roll
enter
cmpsb
test
int3
jp
aaa
rolb
or
inc
movl
cmp
xchg
outsb
dec
rcll
adc
cmp
out
bound
cwtl
test
and
fisttpll
pop
mov
xchg
inc
cwtl
push
aaa
and
cli
popf
call
dec
push
sub
mov
xor
cmp
ljmp
jecxz
insl
cs
sbb
push
push
jb
jle
mov
inc
mov
dec
dec
sarb
cli
add
or
lret
in
adc
cld
xor
mov
nop
or
xchg
inc
mov
je
arpl
test
pop
lods
push
and
cmc
dec
mov
aad
jp
iret
jmp
imul
jecxz
and
es
xchg
rolb
cwtl
movsb
jno
or
inc
les
inc
and
xchg
sub
and
mov
loop
lds
rcll
xchg
xchg
cmp
mov
into
cmp
inc
mov
push
out
mov
cmp
cmp
pop
push
insb
int3
or
pop
xor
pusha
sub
adc
ficoml
lret
mov
inc
aam
outsb
dec
dec
push
je
lea
inc
dec
lods
pusha
push
cwtl
adc
pop
shufps
repnz
mov
lds
aam
ja
dec
arpl
mov
cmp
adc
jbe
out
sbb
idivb
sbb
jb
fisttpl
test
or
mulb
xlat
dec
sub
push
xorl
cs
pop
int
xor
mov
aad
sbb
jmp
pop
outsb
and
ror
adc
dec
pop
jnp
adc
mov
aaa
imul
dec
push
hlt
jns
stc
ficoms
sahf
xor
cld
mov
std
fmulp
mov
mov
push
pop
cmpl
sub
inc
pop
mov
sub
and
test
add
sbb
push
sti
mov
faddl
pushf
test
in
xor
mov
inc
std
or
movl
jb
stos
test
lret
push
mov
jl
cltd
fwait
jnp
insl
imulb
push
adc
cwtl
dec
or
pushf
ret
sub
dec
xor
ss
ficoms
jnp
aad
lahf
pop
xchg
push
lret
vpshuflw
rolb
cmc
call
scas
or
sub
inc
ljmp
test
test
and
or
test
imul
push
andl
mov
push
ret
add
sbb
cmp
or
mov
mov
sbb
push
jae
xor
mov
cmp
inc
xchg
addr16
adc
xor
jnp
unpckhps
test
bound
or
cmpsl
add
mov
mov
fsubrs
hlt
test
and
pop
xchg
sbb
inc
mov
rol
adc
push
add
stos
ret
cmpsl
dec
inc
fildl
std
inc
stc
mov
lretw
shlb
repz
rol
fisttpll
sbb
push
loope
pusha
cmpsl
inc
mov
addl
sbb
lret
imul
ljmp
xlat
mov
stos
popfw
shlb
mov
loopne
inc
jb
push
sub
xchg
aad
shlb
test
mov
pushf
xor
cmp
adc
jl
int3
mov
rcrl
lock
popf
in
addl
dec
mov
out
or
loope
push
je
or
push
inc
xor
pop
lea
jne
cld
sahf
lds
mov
adcb
lret
xor
add
or
je
add
stc
mov
sarl
leave
mov
mov
sbb
dec
jmp
mov
mov
cmp
cmp
xor
push
mov
in
shr
mov
mov
nop
shll
adc
pop
out
shll
les
pop
lret
cmp
add
rol
jbe
inc
sub
rcrl
sbb
adcb
mov
cld
lret
loop
jmp
mov
ret
into
add
dec
push
mov
mov
dec
repnz
arpl
pop
inc
jns
sbb
push
loop
fs
addb
mov
clc
dec
mov
adc
mov
sahf
lcall
ret
in
mov
mov
mov
clc
cmpsl
mov
jo
push
push
repnz
ja
sub
std
dec
adc
push
mov
push
and
pop
dec
int3
cmpsl
mov
adc
xor
push
push
push
pushf
xor
pop
fbstp
pop
push
icebp
jg,pn
inc
mov
or
mov
push
aam
ss
pop
mov
jne
and
fdiv
filds
addl
in
sub
shrb
repnz
jge
or
je
sbbl
mov
sbb
enter
dec
pushf
leave
shlb
xor
xchg
rcrb
cmp
mov
push
push
movsb
adc
jnp
jge
mov
popf
adc
add
push
int3
adc
into
sbb
sub
into
sub
test
insl
test
xor
daa
fcoml
das
mov
adc
adc
push
pop
push
je
addr16
mov
std
jbe
inc
xor
and
adc
cli
cmp
push
xchg
hlt
jle
sbb
rep
adc
f2xm1
lret
and
mov
pop
ljmp
dec
scas
test
jne
flds
inc
sub
xchg
sub
adcl
int
in
leave
dec
push
in
sbb
mov
int
ljmp
sbbl
pop
out
jnp
jo
clc
jb
push
push
aaa
lds
daa
lods
cmpsl
xchg
mov
push
jp
cmp
insl
fs
out
add
ror
push
test
leave
jb
addl
mov
mov
mov
test
pop
shll
lds
or
dec
nop
repnz
push
std
call
out
popf
push
add
dec
pop
out
add
and
dec
das
xchg
pusha
ret
inc
cmp
jne
mov
repz
push
fimuls
ret
sahf
pop
xor
sbb
jnp
das
sbb
lock
cwtl
out
push
cmp
repnz
mov
mov
sar
aam
inc
xchg
in
test
icebp
pushf
fcmovb
xor
and
cmp
inc
shr
mov
popf
shrl
shr
adc
jge
shll
jecxz
fisttps
or
mov
pop
push
js
mov
xchg
call
test
mov
fwait
push
push
stos
rcr
cli
adc
arpl
jmp
jmp
inc
add
add
outsb
xor
push
xchg
movsl
or
or
mov
pop
in
cmp
mov
aaa
push
cs
dec
aad
xorb
push
loop
jmp
testl
xchg
pop
dec
mov
and
pushf
les
pop
and
pop
inc
push
jp
cwtl
mov
fs
push
das
jmp
mov
enter
fmull
adc
xchg
imul
orl
cld
xchg
mov
mov
mov
adc
mov
out
dec
shlb
roll
add
cmpsl
inc
addr16
dec
out
js
sar
sti
ljmp
pusha
mov
enter
xor
bound
lds
add
inc
lcall
into
std
clc
xchg
loop
sti
mov
inc
jno
sbb
or
fisubrl
incb
pop
sbb
pusha
adc
pop
shll
mov
jl
sbb
sub
movb
and
or
push
loopne
leave
or
or
jp
ss
mov
or
sbb
filds
add
xor
sub
cmp
cwtl
xchg
test
or
insl
mov
sub
xor
mov
inc
jge
cs
pop
push
inc
push
addr16
push
pop
lds
scas
ss
test
sub
orb
ja
cmp
aas
push
pop
mov
inc
xchg
mov
sbb
inc
fstpl
js
mov
cmp
les
or
push
mov
fxch
xor
sub
clc
popf
fsubl
sub
in
jp
or
mov
out
or
rolb
pop
sti
and
adc
fsubrs
insl
int3
sbb
movb
xchg
int3
and
arpl
popa
ja
cltd
push
lcall
pop
mov
dec
aad
rclb
pop
fcomp
cmc
or
je
jecxz
mov
or
jae
nop
mov
pop
mov
pop
insl
mov
outsl
sub
les
add
cmpsb
push
jl
xchg
outsl
inc
jmp
sub
sbb
inc
sub
or
or
js
sub
addr16
pop
mov
or
mov
or
add
or
sub
and
and
pop
mov
sbb
xchg
aas
gs
add
insl
sub
sbb
pop
int3
adc
push
push
and
adc
cmovg
adc
loopne
loopne
cli
push
out
les
push
cwtl
pop
mov
int3
bound
cmp
mov
push
fs
push
xchg
dec
es
cmp
push
pop
or
push
sub
sub
fimull
test
rcl
sarb
cltd
push
rclb
roll
push
shlb
xor
out
outsb
inc
sbb
cmp
mov
mov
xchg
or
adc
jnp
inc
rcll
nop
enter
sub
mov
push
sub
inc
xchg
pop
adc
shlb
and
and
movsl
pop
mov
jne
dec
into
jle
in
and
jg
push
mov
movaps
add
ret
add
push
push
mov
push
xchg
icebp
xor
and
jmp
and
inc
mov
nop
sub
mov
fwait
rcl
insl
stos
mov
pop
scas
dec
test
pushf
push
jp,pn
lret
jge,pn
and
sub
dec
fcmovnu
iret
adc
pop
jne
loop
and
lret
dec
or
shr
test
dec
pop
mov
xor
shl
icebp
cmp
sti
fdiv
cmp
and
jmp
fbstp
xorb
sub
lcall
addr16
mov
scas
xor
or
ret
mov
inc
push
dec
mov
push
enter
xor
push
cmp
pusha
add
outsl
aam
sub
pop
das
add
sbb
adcb
or
xlat
mov
rcrb
insb
loope
pop
inc
xor
std
add
sbb
mov
pop
rorb
mov
rcll
test
dec
ss
dec
pop
lahf
adc
stos
xchg
aas
das
rcr
xor
mov
sbb
testl
movsb
mov
mov
and
aad
mov
rorb
sub
stc
sub
mov
mov
pop
inc
sbb
mov
pusha
int3
clc
repnz
xchg
sbb
push
ja
cmp
mov
mov
xchg
adc
push
aad
xor
inc
cmp
sub
in
jne
and
mov
cs
enter
mov
rcl
lds
sub
inc
iret
push
add
mov
push
and
pop
lock
mov
xchg
mov
pushf
sbb
dec
sub
xor
mov
mov
cmpsl
or
mov
add
mov
sub
mov
cli
ret
mov
enter
adc
sub
cwtl
fprem1
js
negb
jmp
and
jp
out
jbe
in
xor
addr16
xchg
pop
cwtl
aam
imul
lea
stc
fs
dec
push
popf
mov
lea
xchg
hlt
outsl
popf
push
mov
icebp
lret
push
mov
lret
psubusb
jp
mov
addr16
jb
inc
jo
fdivs
and
sbb
popf
aam
inc
aam
add
sub
mov
ficoms
mov
stc
loope
stc
out
push
push
icebp
movsl
push
xor
mov
add
mov
sub
mov
nop
adc
dec
push
imul
loope
fbstp
pushf
jecxz
jno
in
test
jp
adc
or
jae
add
xchg
push
adc
movsb
adc
push
sub
rolb
cld
xchg
push
mov
mov
and
pop
lcall
adc
test
jb
outsl
push
inc
sbb
dec
stc
jmp
add
daa
fcomps
and
loopne
push
sbb
and
frstor
adc
sub
divps
shll
les
mov
popa
and
enter
out
inc
adc
test
cmp
mov
fmull
mov
cmpsl
mov
pop
xor
outsl
adc
xchg
jne
adc
inc
adc
icebp
rorl
test
out
bound
lcall
and
cmp
adc
inc
out
je
addb
loopne
cmc
in
jne
cs
jle
nop
sbb
jnp
psubw
outsb
sahf
mov
popf
cwtl
and
dec
in
dec
fistps
or
enter
gs
adc
popf
cmpsl
fdivs
arpl
movb
push
adc
pop
out
mov
pop
rorl
jne
roll
pop
sub
lods
push
push
adc
push
xchg
repnz
dec
xchg
in
sub
lret
add
jns
push
xchg
jb
in
addb
into
sub
repz
subl
in
in
mov
rclb
test
mov
mov
rorl
fmuls
mov
mov
mov
int
clc
mov
push
fs
sub
jb
pushf
xchg
rol
pop
frstor
pop
call
sbb
mov
stos
sbb
sub
jecxz
xor
jmp
pop
mov
mov
mov
xchg
xchg
lds
adc
adc
mov
inc
sahf
xor
push
add
adc
adc
pop
pop
dec
test
mov
cmp
lcall
out
add
data16
in
dec
mov
xor
hlt
mov
pop
jno
pop
dec
mov
iret
fcoms
cmp
jno
sub
sbb
popf
or
push
dec
insb
and
push
push
es
lahf
or
adc
lods
xor
inc
or
inc
push
add
es
or
data16
cmp
repnz
adc
repz
movsl
adc
pop
pop
xor
dec
imul
stc
aaa
xor
cmpsl
fsubrl
mov
inc
cmpsb
bound
cmp
dec
mov
lcall
aaa
pop
fadd
xor
dec
mov
fsubrs
mov
in
movsb
movlhps
cmpsl
addr16
lds
test
outsl
adc
out
lcall
pop
pop
in
jge
in
xchg
in
rorl
sahf
push
imul
xchg
or
push
and
jle
dec
mov
in
xor
pop
push
sub
daa
in
mov
xchg
push
cmc
mov
imul
mov
pop
xchg
popa
jns
ss
aam
lret
in
jecxz
jae
push
lods
cmp
in
cmp
mov
jp
jae
into
add
mov
bound
and
mov
lret
movntps
push
in
sub
sub
lods
adc
daa
jne
mov
loop
or
xchg
mov
jle
stos
xor
push
push
fldl
sub
add
jl
add
push
mov
wbinvd
or
cltd
lcall
rolb
nop
int
push
mov
add
mov
pop
mov
jb
hlt
test
jae
cld
popf
cmp
sub
inc
int3
out
xchg
dec
and
sahf
fldl
jns
xorb
jne
jae
add
hlt
es
fcoms
or
fldenv
cltd
or
mov
pop
mov
and
xchg
or
arpl
inc
cld
std
insb
inc
popa
mov
jecxz
sub
adc
sbb
mov
cs
clc
inc
sarb
sbb
inc
xchg
lret
lds
dec
sbbb
js
jb
xchg
mov
mov
jae
shll
sbb
cmpsb
lods
dec
mov
cmp
in
sbb
jne
aas
and
adc
arpl
adcl
repnz
hlt
dec
xor
add
or
dec
xabort
scas
pushf
sbb
or
in
xor
sahf
inc
jb
mov
jl
mov
lret
jg
inc
cld
std
inc
out
add
mov
rcr
push
ret
data16
test
xchg
in
fs
mov
lods
mov
fs
jg
and
in
jae
inc
dec
sbb
cli
cmpsl
jecxz
ds
cmp
cmpsl
dec
out
ficoml
sbb
arpl
pop
inc
sub
adc
adc
xchg
adcb
mov
cs
lea
shrb
inc
pop
and
into
cmp
addb
rcll
pop
inc
adc
leave
dec
jge
xor
js
pop
clc
rorb
xor
scas
mov
lods
cmp
rcll
lock
add
mov
sub
jno
lock
xchg
inc
lahf
or
xor
adc
mov
popf
jbe
jge
xor
mov
mov
mov
repz
outsl
inc
mov
pop
push
add
lods
mov
push
xor
adc
adc
dec
or
add
add
sub
fstps
push
sub
push
fs
cltd
cld
rolb
shlb
dec
test
jp
cmp
pop
int
or
es
pop
and
bound
aam
decb
mov
outsb
lea
xor
mov
ficompl
pop
adc
test
inc
mov
rorl
addb
mov
insl
pop
jg
mov
xchg
arpl
and
sbb
orl
cmp
loope
adc
add
insb
xchg
sub
or
push
xchg
ret
jle
sub
cmp
push
loope
dec
mov
mov
negb
movsl
sbb
mov
jo
inc
std
sbb
js
mov
test
lock
out
jae
add
xor
jbe
mov
pop
xlat
call
dec
add
and
add
push
les
add
jae
icebp
daa
push
popf
mov
pusha
mov
inc
add
sahf
lahf
cwtl
add
add
leave
dec
pop
add
sbb
adc
push
aam
into
push
adc
ret
or
mov
in
icebp
test
or
stc
or
inc
jb
ret
or
jl
lret
je
inc
scas
popf
pop
xchg
jmp
enter
and
cs
pop
dec
and
xlat
jb
push
call
mov
pop
push
shlb
out
cmp
jp
mov
adc
xchg
scas
or
add
test
loop
ret
inc
push
std
jmp
dec
popa
push
jmp
sub
test
push
mov
ret
dec
es
dec
pusha
adc
push
sbb
push
nop
rolb
or
pmullw
sub
bound
or
pop
mov
gs
sbb
leave
arpl
dec
aad
or
add
fcomps
addr16
lret
sarb
fs
sub
clc
inc
pop
sub
out
repnz
push
pop
in
cltd
cmp
cli
jecxz
fimuls
jl
mov
dec
push
stos
jb
and
in
inc
mov
jne
sbb
and
imul
and
sbb
cs
aaa
pop
sub
shll
mov
je
xor
xchg
mov
in
inc
jae
jecxz
pop
mov
mov
repnz
arpl
push
jmp
inc
mov
in
and
ljmp
test
mov
lds
jl
mov
rclb
icebp
cmpsb
pop
call
mov
and
dec
pop
aam
inc
pop
pop
push
or
adc
cmp
sub
cli
mov
in
out
js
lahf
insb
sbb
cmp
int
push
rolb
ret
add
pop
mov
inc
dec
mov
cmp
xor
inc
pop
jbe
add
iret
adc
fsubrs
mov
or
shl
or
cwtl
inc
adc
push
add
mov
add
dec
sbb
aad
or
les
cld
mov
loopne
adc
or
outsb
in
repnz
pusha
mov
cmpsb
loopne
lods
jl
sbb
testl
shrl
fidivrs
or
jecxz
shlb
inc
jp
repnz
stos
inc
sbb
cmp
enter
xor
and
lea
lahf
lods
and
cmpb
sub
filds
and
popa
inc
mov
cmpsb
lret
sbb
nop
jbe
and
lea
clc
stos
addr16
push
push
jg
dec
mov
mov
xchg
mov
dec
xchg
lds
jl
lcall
flds
aaa
jg
push
add
add
inc
cmpsl
popa
cltd
pop
cli
call
lds
mov
mov
outsl
push
push
in
pop
cmp
jae
xor
mov
lcall
clc
clc
push
pusha
jecxz
and
pop
outsl
xchg
ds
in
mov
cltd
jmp
push
sbb
bound
sbb
arpl
int3
pop
mov
mov
and
xor
push
pop
bound
test
sub
xchg
iret
mov
les
loope
mov
fnsave
dec
inc
pop
lcall
or
shrl
add
and
fmuls
pop
or
call
dec
btr
fiadds
inc
cwtl
clc
in
lods
inc
lret
or
outsl
pop
jge
bound
test
daa
js
cwtl
xchg
orl
ror
sub
aas
stos
cmp
les
into
fsubs
andb
pushf
lret
sahf
or
iret
aaa
js
fiaddl
das
mov
push
inc
xchg
lcall
mov
xor
and
mov
rclb
test
repnz
nop
and
ljmp
movsb
pop
xchg
sbb
idivb
xchg
scas
lock
jp
stos
jne
jl
dec
ja
clc
hlt
jge
fisttpl
mov
mov
rcl
pushf
sbb
lret
cmp
pop
mov
data16
cld
push
sub
mov
jae
loop
xor
in
add
mov
add
rorl
test
ss
data16
shll
push
sbb
mov
or
mov
lds
or
pop
mov
orb
leave
cmp
aam
or
mull
lods
int3
cli
push
mov
or
out
call
sbb
loop
adc
orl
sbb
xchg
adc
outsb
rcr
push
push
mov
push
sbb
sbb
rorl
adc
lds
sub
fnstcw
xor
cs
add
xchg
stos
in
pop
push
cltd
ficompl
test
cmp
sti
xchg
mov
inc
test
mov
jl
ja
out
fs
shrl
xor
scas
call
cmpsl
imul
loope
and
adc
dec
mov
mov
lret
sub
test
sub
push
scas
inc
vaddsubpd
lahf
test
push
scas
rclb
lods
movsb
or
xchg
push
hlt
or
adc
push
rorb
push
scas
out
jns
xchg
cmp
xor
ljmp
mov
or
popa
fsubrs
pop
bound
fsts
pop
push
add
mov
xchg
push
sbb
jmp
mov
xchg
cmpsl
push
int
adc
out
negb
or
adc
shrb
outsb
rcrb
push
mov
inc
std
loope
rcll
jno
and
in
rcrl
mov
dec
es
jbe
xor
int3
ljmp
int3
or
inc
or
xor
pop
call
mov
movsb
dec
sbb
inc
xchg
inc
sbb
mov
cmp
mov
jnp
jecxz
mov
mov
jp
mov
sub
lcall
xchg
jmp
popf
frstor
in
or
and
mov
adc
mov
push
xor
fldt
xor
lcall
sub
leave
popf
push
incb
movb
lahf
fcmovbe
loopne
movsl
or
mov
mov
into
jo
sub
fiadds
mov
and
pop
mov
icebp
aas
mov
icebp
fisubl
xchg
jae
jl
daa
adc
lea
repz
and
sbb
scas
add
and
and
cmpsb
lret
or
xchg
dec
inc
es
mov
mov
jne
inc
jl
jbe
clc
dec
enter
stos
in
cltd
sub
or
mov
push
mov
pop
push
in
sub
cmp
adc
sub
pop
scas
in
or
pushf
sbb
jbe,pn
outsb
out
jp
aam
outsb
scas
xchg
test
lret
pushf
movsb
mov
popa
jmp
in
add
and
jne
or
daa
dec
mov
leave
or
addr16
xor
test
sbb
inc
lds
mov
add
outsl
bound
dec
stos
adc
jecxz
lret
push
xor
mov
cli
dec
aad
add
cmp
adc
shlb
or
pop
aad
in
repnz
sub
pop
sbb
shl
xchg
pop
das
mov
les
test
pop
lods
pushf
dec
shll
sub
cmp
roll
clc
push
add
dec
lcall
mov
xlat
iret
push
pop
dec
inc
xchg
repz
out
xorl
sub
push
mov
fistl
push
imul
movsb
hlt
cltd
mov
jge
sub
mov
stos
roll
fdivr
jp
and
sub
sub
out
inc
mov
fadd
xchg
jp
mov
sbb
add
mov
dec
mov
es
lahf
dec
cmp
aad
stos
mov
dec
ljmp
test
pop
mov
lods
fs
mov
jne
mov
in
test
cli
inc
arpl
gs
jge
ds
pop
loopne
xlat
cwtl
out
arpl
aaa
cmc
mov
dec
fcoml
pop
les
cmpsb
pcmpeqd
or
mov
shlb
xlat
dec
mov
or
pop
cwtl
sbb
xchg
pusha
push
into
dec
icebp
push
xor
cmp
mov
outsb
loopne
pop
fstpt
int3
add
lret
dec
adc
pop
mov
cld
mov
jp
push
in
or
or
add
mov
pusha
dec
or
inc
jmp
aas
push
gs
mov
lock
add
pop
ljmp
pusha
das
mov
cmc
sub
je
popa
push
inc
sbb
mov
adc
sub
jbe
adc
sub
xor
mov
sub
mov
lret
push
fmulp
js
dec
pop
push
adc
jne
packsswb
push
dec
sbb
shrl
mov
sti
xor
add
nop
push
shl
mov
adc
or
mov
pop
sti
nop
xchg
sbb
sbb
dec
aas
je
pop
jns
push
fisttps
mov
test
inc
fsubrl
adc
add
cmc
add
adc
sbb
mov
dec
xchg
xor
sbb
jo
pop
add
or
sub
cmpsl
pop
fcoms
fcompl
or
jne
addr16
adc
mov
mov
mov
cmp
in
inc
out
mov
sbb
adc
stc
or
pop
jecxz
add
inc
sahf
js
addr16
dec
lods
sub
ret
xor
sub
fidivrl
or
mov
bound
test
mov
cmp
pop
pop
sbb
mov
jbe
xchg
mov
lea
push
mov
push
cmc
push
mov
lods
test
subl
inc
repz
addb
cli
adc
push
inc
movsb
ret
inc
pop
sbb
fisttps
aad
les
test
add
or
adc
mov
mov
or
lds
sbbb
test
test
andb
movhps
mov
enter
xchg
test
sub
cmp
adc
test
dec
xchg
add
sbb
push
and
sahf
pop
cmp
mov
push
adc
lds
daa
sti
jge
dec
inc
lea
jge
pop
arpl
and
mov
mov
lods
sbb
mov
icebp
dec
into
into
xor
imul
les
imul
dec
sbbl
sub
addl
sub
push
xchg
sbb
fwait
mov
in
pop
sub
fs
aam
sub
mov
pop
push
pop
jb
add
mov
push
dec
fcmovnb
hlt
mov
dec
jo
ret
sbb
ds
rcl
or
mov
push
inc
jle
push
pop
out
clc
addb
mov
out
xor
mov
mov
or
adc
test
shld
inc
lds
add
pushf
je
sub
push
clc
fdivl
sahf
lds
popf
jg
mov
fwait
push
les
shr
movsb
inc
push
xor
adc
lods
add
test
or
arpl
mov
mov
sbb
adc
out
andl
lds
jo
in
cmpsl
ljmp
jb
and
popf
leave
sbb
rol
jp
fisttps
jns
shrl
push
pushf
jns
js
pushf
add
add
out
push
jne
push
inc
and
push
sub
out
push
out
das
inc
bound
imul
mov
push
push
cli
pop
sub
imul
adc
inc
insb
enter
and
mov
sbb
sbbb
test
dec
xlat
mov
inc
stc
adc
xlat
lahf
add
hlt
inc
pop
mov
jle
push
sbb
push
xor
xchg
cltd
sbb
adc
xlat
xchg
cs
out
nopl
sub
pop
repnz
push
xor
pop
outsl
pop
xchg
daa
insl
xor
gs
add
mov
push
xor
add
push
xor
inc
and
cmc
adc
jnp
lds
sbb
xchg
sbb
dec
xchg
inc
es
in
fcmovnb
mov
cmpsb
cmp
ja
ja
pop
adcl
sub
imul
xchg
roll
fidivl
test
or
push
les
jns
call
ss
mov
and
mov
xchg
xchg
repnz
icebp
or
and
mov
mov
fcompl
andb
imul
iret
add
test
jmp
xor
stc
add
nop
iret
xor
push
jne
movsb
or
fists
mov
pop
jae
add
add
mov
mov
xlat
and
sub
addl
fidivrl
push
pop
or
iret
jle
rcrl
scas
int3
xchg
push
or
cwtl
add
std
push
sahf
stos
shll
dec
repz
dec
fmuls
shrl
adc
cltd
push
mov
mov
xor
cmp
mov
adc
inc
cmpsl
fstpl
jge
sub
es
sub
stc
push
sub
pop
inc
movb
or
mov
or
cmpsb
arpl
mov
inc
ret
sbb
repnz
add
jp
je
xor
push
mov
xchg
addl
or
fnsave
mov
dec
outsb
push
into
in
fadds
push
push
sub
add
and
push
cld
mov
or
out
dec
loope
xchg
jno
xchg
pusha
rclb
fistps
and
jl
xchg
and
into
dec
inc
add
cmp
pop
movsb
lds
jne
push
mov
jmp
xchg
inc
pop
dec
and
mov
stc
subl
into
push
aam
in
push
inc
inc
pop
add
shrl
and
pop
pop
mov
leave
hlt
push
test
pop
test
sbb
push
out
adc
jb
mov
xor
int
xor
shrl
xlat
shll
lret
pop
aad
jne
popf
sbbb
out
inc
hlt
shlb
int3
mov
aas
sub
adc
adc
popf
xor
mov
inc
lcall
inc
jl
sbb
push
and
inc
or
xor
mov
or
test
iret
add
fcompl
out
sbb
xchg
add
jo
test
inc
imul
dec
std
mov
test
inc
pop
inc
arpl
mov
out
sbb
fidivrs
mov
ja
inc
test
mov
dec
jmp
xchg
movsb
inc
cmp
mov
jns
sub
xchg
jl
rcrb
int
rorl
rol
inc
or
or
pop
lret
movsl
xchg
and
adc
and
add
into
shlb
xchg
sahf
ljmp
pop
or
mov
dec
test
pop
inc
movsl
xchg
xchg
add
xor
nop
add
and
sbb
pop
call
adc
inc
les
nop
mov
fisubrs
jmp
pop
ja
shl
out
leave
stos
and
cmp
stos
mov
std
shlb
push
gs
push
lret
dec
xchg
les
adc
push
ja
and
xor
and
sub
sub
sub
std
add
cld
cmp
xchg
movsl
repz
xchg
mov
and
pop
and
addb
xor
repz
cmpsb
add
loop
mov
outsl
jg
outsb
in
in
ret
add
fldt
adc
adc
fwait
xor
std
enter
jmp
popa
adc
cmp
xor
fmull
aad
or
lods
std
dec
roll
jno
and
pop
int3
push
lods
mov
xor
inc
dec
es
cs
lea
ror
loop
test
ret
divl
insl
sarb
test
sahf
sub
js
xor
scas
add
xor
inc
inc
aaa
andb
sub
sbb
mov
arpl
or
fidivrs
daa
mov
push
adc
xchg
ljmp
xor
mov
jmp
mov
mov
pop
inc
popf
push
cwtl
pusha
rol
stos
mull
inc
cmp
or
push
mov
test
mov
sbb
loop
push
jb
sbb
jns
jo
daa
push
inc
xor
jo
xchg
push
inc
inc
jns
inc
xchg
daa
mov
int3
adc
jo
rcll
sti
sub
add
dec
mov
mov
repnz
repz
jmp
mov
out
int3
xor
fcoml
cli
mov
and
hlt
mov
adc
mov
leave
pop
push
mov
sti
pop
pop
pop
ret
popa
pop
cmp
mov
ret
subb
xor
in
inc
sbb
xor
push
sbb
mov
or
jp
popa
pop
push
lea
adc
stos
lcall
hlt
lods
shll
or
push
sub
outsl
push
mov
iret
int3
cltd
pop
push
faddp
movsb
jb
adc
xor
sub
sub
rcll
mov
leave
leave
jo
pop
scas
movsb
add
sbb
or
and
jp
fsubrl
das
int3
mov
int3
sbb
add
gs
jo
inc
jb
adc
push
lds
xor
adc
dec
scas
pop
jns
shlb
js
jl
xor
into
int3
cmp
inc
inc
gs
in
mov
mov
adc
into
mov
inc
push
xchg
in
loop
pushf
adc
fsubr
cmp
mov
sar
inc
in
addr16
add
add
cli
mov
mov
jmp
lea
and
lahf
les
inc
sbb
shl
call
lahf
and
sub
adc
inc
and
repnz
sbb
fsubrs
mov
shlb
pop
dec
mov
adc
jne
xor
ja
and
daa
ja
mov
scas
push
or
dec
and
adc
mov
dec
jp
sub
divb
lret
push
pop
adc
lea
and
mov
adcl
mov
inc
fs
add
shlb
jae
push
inc
mov
repz
mov
imul
add
add
sti
inc
int3
rcrl
push
enter
cmp
and
cmp
shl
scas
and
add
nop
jno
aad
ljmp
sbb
sbb
add
dec
inc
test
stos
adc
jp
sub
inc
add
lcall
xor
and
and
inc
adc
inc
xor
or
outsb
sbb
sbb
mov
xor
cs
les
movsl
loopne
pushw
push
outsl
lcall
or
push
jmp
xor
adc
aam
cmpsl
js
sahf
stos
ret
fidivrs
mov
jl
pop
inc
test
sub
jp
mov
push
rcrb
jns
mov
sbbl
adc
and
cli
std
and
pop
adc
xor
pushf
movl
dec
scas
mov
arpl
out
popa
push
data16
and
push
mov
subl
dec
and
or
fnstenv
popl
in
mov
push
cs
adc
inc
adc
xchg
pop
movsb
or
push
cmp
dec
dec
rorb
fcompl
call
adc
dec
shrl
jb
lret
lret
inc
cltd
sbb
or
xchg
gs
shll
add
dec
mov
fcmovbe
xchg
seto
std
imul
xchg
push
test
sbb
inc
adc
dec
adc
in
and
test
cmpb
nop
popf
ds
xor
mov
lret
daa
call
adc
or
push
jp
cmp
sub
int3
out
jb
mov
sub
xor
and
pushf
inc
pop
and
shlb
and
inc
shrb
les
push
stc
xor
shlb
push
fcomi
or
int3
mov
xor
pusha
jle
xchg
mov
xchg
and
add
ret
pop
mov
clc
pop
dec
sti
push
xor
dec
add
pop
add
push
mov
xor
push
lahf
jge
sarb
sub
adc
push
jp
bound
pop
dec
push
sbb
xor
loopne
movl
dec
adc
andl
adc
lods
mov
out
sub
jp
aam
popf
sub
mov
jp
faddp
ds
pop
mov
push
iret
jbe
movb
pop
adc
out
jns
scas
hlt
cmp
adc
aad
and
outsb
stos
aam
es
mov
out
loop
stc
inc
mov
data16
test
fistpll
mov
stos
in
pop
js
and
sbb
pop
jp
mov
and
push
scas
dec
push
dec
xor
loop
pop
addr16
inc
xchg
mov
bnd
inc
push
sarl
arpl
push
add
lahf
adc
jle
xchg
inc
cli
sbb
aas
mov
xchg
adc
out
push
rclb
mov
lds
mov
pop
sub
das
jno
rclb
das
lock
cwtl
and
lds
and
push
test
push
out
lret
mov
ljmp
sub
je
js
lea
repz
orb
clc
insb
add
add
sbb
lahf
dec
cmp
mov
js
add
or
pusha
mov
dec
out
shrb
add
fs
jmp
jmp
or
jb
mov
fcoml
icebp
pop
sbb
out
ret
loopne
xchg
shrl
repnz
enter
xor
mov
push
inc
or
inc
xor
xchg
xchg
and
lock
mov
jge
ret
mov
mov
dec
cmp
stos
imul
add
xchg
shrl
sub
mov
pop
je
push
xor
insb
imul
add
add
add
or
outsl
lods
mov
iret
or
inc
add
pop
in
dec
mov
sub
rcll
test
repz
aam
popa
cs
data16
pop
add
add
pop
fwait
mov
adcl
mov
rorb
jl
dec
ss
outsl
mov
mov
scas
adc
std
loopne
addr16
jns
push
jge
popa
addr16
popf
fmuls
mov
stos
out
ss
mov
pop
testl
int
stc
cli
data16
hlt
mov
jns
cli
jge
mov
inc
sub
add
adc
sub
lea
mov
push
sub
insl
xor
lret
cmp
mov
mov
sbb
test
sbb
daa
xchg
or
call
cmp
add
cmpsb
lods
iret
outsb
push
adc
xchg
and
mov
xchg
test
mov
mov
jg
call
nop
jo
rolb
cmp
fildl
dec
inc
pop
xchg
insl
cmc
jle
sub
xor
out
mov
ret
adc
mov
inc
inc
roll
dec
jbe
std
push
xor
xor
je
rcr
fnstsw
pop
mov
xor
sbb
push
sbb
or
in
repz
mov
mov
adc
cmp
stc
dec
and
xchg
or
cmpb
or
inc
jle
je
add
jp
imul
jl
jmp
shl
mov
mov
xor
add
pop
jl
mov
or
add
inc
ds
dec
and
ror
mov
push
aas
xchg
fdiv
jl
inc
sarl
cld
sbb
cs
pop
sbb
sub
mov
pop
test
mov
or
pop
push
cmp
sti
mov
je
or
mov
orb
mov
push
dec
sub
push
mov
dec
aas
loop
aam
imull
add
push
lret
nop
roll
lcall
scas
add
and
cld
ljmp
xchg
xor
inc
dec
icebp
inc
ret
push
push
adc
hlt
mov
xrelease
xor
scas
test
sbbb
cli
ret
xchg
inc
shll
inc
clc
pop
mov
xchg
roll
scas
negl
ds
or
cmp
pop
or
sarb
push
into
add
scas
cmp
and
mov
or
mov
pop
mov
in
dec
lahf
mov
inc
sbb
out
dec
push
test
and
aad
dec
push
push
test
adc
push
pop
add
mov
or
jecxz
out
out
bound
inc
mov
aam
sub
ja
daa
xchg
cmp
add
scas
push
pop
aas
adc
jl
clc
sub
movsb
jnp
adc
push
xchg
pop
lock
fcompl
call
hlt
das
mov
loopne
sub
hlt
dec
in
insb
and
les
pusha
push
test
scas
dec
icebp
xchg
mov
in
mov
sub
fldcw
push
pop
xchg
and
xchg
adc
xor
pop
mov
loop
jo
cltd
adcb
call
mov
divb
xchg
clc
pop
add
sbb
add
shrl
inc
in
and
dec
bound
out
jb
icebp
inc
xlat
mov
jmp
sbb
or
or
les
jo
cli
bound
test
pop
and
push
pop
pusha
stos
lret
sub
push
cld
xchg
mov
fisubrl
or
cmp
or
aad
shlb
push
pop
cmp
jne
hlt
sbb
fadds
dec
cld
nop
cmp
pop
or
lret
and
pop
out
adc
jno
inc
xor
inc
fcoms
dec
out
mov
pop
popf
loopne
mov
enter
jecxz
aas
sub
jbe
cmp
movsl
sbb
push
gs
scas
mov
cmp
cli
insb
js
add
jne
sarl
rsm
jb
stc
out
popf
dec
orl
stos
lods
js
push
shrb
lods
sbb
ds
xor
in
adc
mov
dec
or
aaa
mov
frndint
ljmp
jbe
lods
imul
push
fsubl
xchg
in
push
xchg
in
push
sar
stos
mov
jle
mov
clc
mov
mov
and
xor
xchg
lds
ss
addr16
pop
pop
mov
cmp
lds
push
fnsave
xchg
lock
mov
test
cmpsl
das
lret
xor
lods
mov
mov
jne
rorb
add
dec
out
sbb
pop
bswap
pop
lret
jnp
in
ret
imul
xor
bnd
or
pop
push
push
add
loope
jb
xchg
lods
lret
sub
shl
loop
fmul
lds
ljmp
pop
jo
add
lods
popl
jecxz
xlat
mov
inc
fstl
popa
test
sti
inc
inc
sbb
pop
and
sub
push
mov
or
sbb
ret
int3
inc
mov
or
hlt
test
dec
pop
fwait
mov
in
test
data16
aaa
pop
lods
mov
lods
dec
mov
xchg
xchg
adc
out
mov
popl
aad
pop
xchg
mov
cwtl
mov
sbb
pop
das
sti
sub
shll
push
fiaddl
in
xchg
mov
push
ja
lea
or
mov
fisttpl
mov
in
lea
aas
inc
cmp
cltd
push
and
call
repz
cwtl
enter
ret
mov
cmpsl
fst
fdivs
movsl
cmp
xchg
and
push
js
call
cmp
sti
out
fisubrs
pop
pop
adc
or
mov
xchg
testl
and
mov
lret
out
fisubs
xchg
test
scas
mov
repz
popa
sar
push
fsubr
and
mov
sub
clc
fisttpll
aad
sbb
lock
cltd
iret
pop
xchg
xchg
xor
jmp
stos
jl
pop
test
add
cwtl
inc
out
stc
outsb
sbb
jmp
fiaddl
iret
stc
cld
int3
jg
mov
cmp
adc
jmp
xchg
adc
mov
sub
pop
push
scas
int
pop
xor
loop
lahf
xor
xlat
lods
mov
jb
or
sbb
jae
pop
and
jg
mov
inc
jp
or
push
or
movsb
mov
xchg
pop
inc
popa
push
mov
enter
lret
mov
sub
adcl
xchg
enter
rorl
xlat
push
xchg
mull
roll
add
push
mov
in
or
addr16
pop
mov
mov
cmc
fs
mov
add
push
mov
out
mov
sub
add
xchg
sub
scas
xlat
in
ja
pop
mov
imul
out
mov
pop
cmpb
xor
outsb
enter
jge
adc
pop
lock
loop
mov
xchg
das
cs
outsl
push
xchg
aaa
xor
mov
insl
popa
lock
xchg
mov
jo
test
clc
pop
sahf
out
test
mov
lods
push
lods
sub
sub
pop
mov
dec
ficoml
push
movsl
call
lea
mov
mov
mov
jno
cs
aam
in
sub
cli
jp
inc
mov
mov
xchg
aad
push
mov
xor
lods
leave
jae
mov
push
repnz
pop
hlt
out
fsub
and
add
test
pop
rcr
jo
iret
cltd
lahf
ror
stc
cmp
dec
jge
xchg
orl
psrad
mov
lcall
loope
mov
pop
ret
jae
xchg
andl
shll
adc
enter
push
call
cmpsb
cmpsl
repz
xchg
sub
lret
test
ret
or
test
inc
pusha
cwtl
das
lret
stos
and
mov
ret
mov
shlb
ret
fsubrl
xchg
imul
lret
inc
push
push
mov
inc
mov
lret
daa
sti
mov
lods
insl
int3
rclb
push
add
jb
out
cmp
pop
sub
mov
sti
lods
cmp
hlt
rcr
push
xchg
sbb
cmpsl
inc
test
fdivl
mov
cmp
aam
xor
enter
push
pop
or
addr16
dec
loope
xor
mov
mov
pop
xchg
out
adc
cli
xor
stos
mov
scas
xor
sbb
mov
loop
xchg
and
push
xor
ljmp
ret
dec
insl
sbb
xchg
sbb
ja
xchg
xchg
sbb
shrl
mov
pop
ljmp
enter
or
pop
mov
pop
das
fs
inc
pop
cmp
inc
ja,pt
sub
sub
inc
call
mov
inc
inc
jge
roll
in
jmp
mov
cmc
mov
out
adc
xchg
dec
imul
xchg
mov
pop
loop
jnp
in
pop
or
mov
movsb
mov
ret
out
call
mov
in
cmp
cmp
sbb
cwtl
sbb
sub
push
aad
movsb
or
shrb
mov
aas
and
mov
jp
jmp
pop
clc
xchg
rcr
mov
sahf
jl
mov
adc
adc
dec
std
sbb
outsl
mov
and
insb
or
cmp
or
fisttpll
sti
int
pop
fcomps
decl
jne
and
xchg
pop
mov
push
add
sahf
inc
xchg
push
mov
sub
add
mov
mov
sahf
aaa
cmp
les
dec
lret
inc
adcl
test
in
lock
dec
mov
jno
inc
bound
outsl
dec
test
or
xchg
inc
movsl
hlt
out
loope
sub
rcrl
push
imul
jge
cmovl
xor
jg
push
or
bound
cmp
ja
add
pop
xor
ret
bound
jne
rcrb
test
sub
push
or
test
cmp
call
jg
xlat
cwtl
imul
in
lods
or
dec
xor
mov
cmpl
in
dec
xchg
dec
loop
inc
out
enter
add
push
dec
stos
mov
adc
jle
xchg
out
mov
inc
clc
ds
mov
movsl
nop
cs
cmp
cmp
pop
xchg
inc
and
push
mov
jno
push
cli
pop
pushf
and
lea
loop
push
loopne
jl
dec
ja
add
sub
mov
add
es
aam
cli
stos
jg
pop
or
dec
mov
pop
stos
inc
adc
mov
sbb
add
xchg
pop
imul
jo
jns
scas
push
mov
fstpl
imul
sbb
xchg
lods
push
lahf
int3
out
loope
mov
sarb
push
jg
sbb
push
ljmp
enter
test
out
lret
or
add
mov
adc
aam
mov
add
mov
push
dec
add
fsubr
sub
cwtl
cmp
dec
xor
jp
mov
aam
outsb
sbb
xchg
shlb
pop
shrb
add
add
sarb
mov
mov
sub
or
mov
push
mov
jbe
pop
pusha
push
icebp
in
iret
loop
mov
into
je
cmpsl
inc
inc
in
mov
push
dec
out
and
cmp
or
sarl
push
std
jbe
outsb
out
popf
xchg
push
movsb
cmp
xchg
jmp
fldcw
pop
sub
imul
dec
pop
out
lods
hlt
lock
push
clc
addr16
or
and
push
add
mov
mov
adcl
lea
xchg
mov
add
sub
cltd
faddl
or
push
jns
pop
int
popf
fldl
lea
xor
rcll
pop
test
jg
push
fldcw
cltd
jmp
sbb
adc
insb
pop
imul
imulb
pop
and
mov
cld
or
inc
sbb
xlat
adc
mov
adc
scas
fsubs
adcb
ficoml
and
sbb
push
add
sbb
lds
sub
rcl
or
and
into
pop
mov
ss
pop
add
xor
pop
lock
fcomps
sub
popa
jo
jne
mov
sub
mov
lds
cmp
push
cmp
jl
aam
scas
mov
mov
push
popf
les
arpl
cs
pop
sbb
mov
jmp
into
mov
or
sar
jno
or
push
aaa
pushf
adc
adc
insb
pop
xor
xchg
sub
test
fstl
shlb
xor
cwtl
or
inc
push
aas
mov
out
cwtl
dec
iret
pusha
imul
sar
mov
insl
sbb
mov
lahf
lea
pop
mov
or
dec
push
pop
adc
xor
int3
cltd
scas
pop
push
push
push
ds
int3
xor
or
add
pop
inc
inc
sub
push
fucomp
inc
or
jb
jle
sbb
inc
rcrl
in
gs
pop
pop
sub
inc
sbb
push
mov
push
push
inc
fildll
out
cmp
adc
test
mul
mov
add
and
icebp
xchg
notb
fwait
push
pop
mov
nop
mov
xchg
adc
nop
push
popf
andb
int
jns
adc
sbb
repz
faddl
lea
jbe
mov
cmp
aam
jns
mov
dec
add
lods
sub
das
xchg
xor
out
mov
xor
dec
pop
jp
fsubrs
push
lods
shll
addb
sarl
sbb
loope
adc
std
jge
push
or
mov
and
adc
sbb
mov
dec
push
into
iret
lock
testb
mov
dec
mov
out
sbb
mov
pop
es
jge
lret
jecxz
test
not
pop
xor
inc
pop
jmp
fld
sub
sbb
int3
pop
mov
mov
gs
xchg
push
mov
test
cmp
push
mov
int3
xchg
inc
mov
movsb
mov
jecxz
stos
sbb
ds
add
push
hlt
leave
sub
nop
push
sub
stos
adc
push
notb
inc
mov
shrb
push
scas
dec
dec
je
mov
test
push
or
jl
lcall
jmp
or
jl
lea
or
or
cmp
rcll
sub
aam
cld
inc
aaa
lcall
cmp
push
hlt
mov
jp
pop
push
xchg
outsb
pop
in
dec
xchg
lret
jne
adc
test
or
push
push
popa
hlt
insl
std
mov
xchg
fnstenv
cld
mov
dec
mov
or
pop
inc
mov
arpl
dec
dec
push
cmpb
adc
dec
mov
jp
cmp
cmp
hlt
rcrb
cmp
in
mov
inc
mov
imul
test
and
jno
jp
pop
cmpsl
xchg
mov
hlt
rol
int3
ljmp
pop
pushf
cwtl
mov
push
jae
mov
sbb
clc
cwtl
add
jl
add
mov
rcl
les
and
imul
xor
mov
lock
mov
orl
mov
std
inc
pop
subb
push
add
hlt
sbb
cmp
xchg
sbb
mov
push
pop
int
push
inc
imulb
mov
adc
rorl
loop
xchg
jb
test
inc
dec
jb
add
xor
dec
add
scas
out
add
or
and
aam
loope
out
iret
dec
xor
mov
add
cmp
sub
subb
popf
mov
sub
arpl
add
xchg
push
pop
sub
shl
jl
push
sub
pop
and
cli
movb
std
in
fmuls
dec
mov
sub
inc
xor
adc
mov
in
rcrb
mov
mov
loop
cwtl
ret
js
icebp
pop
cmc
adc
add
push
xor
adc
in
scas
dec
pop
pop
pop
cmc
fldenv
pop
mov
mov
fadds
jmp
lahf
stos
add
mov
outsl
movsl
lret
mov
and
push
xor
add
xchg
int
xchg
jb
psubb
mov
lret
stc
adc
subb
scas
mov
fstpl
icebp
test
mov
adc
lret
add
push
fsubrp
push
or
mov
iret
or
adc
scas
sub
ja
in
xor
cmp
in
push
add
out
mov
in
and
in
or
cmp
pusha
inc
mov
mov
clc
leave
lret
mov
xor
cmpsl
cmc
or
mov
jo
and
sbb
mov
add
jne
adc
lret
add
shlb
mul
jmp
mov
sbb
loope
inc
repnz
cmpsl
cmp
jns
call
jns
cmp
lahf
add
xchg
loopne
or
and
push
sbb
sbb
lods
insb
mov
shl
cld
xchg
dec
das
pop
and
push
inc
sarl
sbbb
mov
sub
sbb
cwtl
in
testl
aad
loope
adc
sub
call
dec
cwtl
out
adcl
sub
mov
inc
mov
xchg
push
mov
ss
cmp
xor
cs
inc
jg
sti
add
pop
mov
pop
sbb
sub
icebp
or
inc
adc
lods
jno
dec
fsubs
sub
and
lods
and
rclb
outsl
mov
fwait
out
je
pop
dec
mov
fcompl
pop
or
push
ret
dec
mov
jno
movsl
scas
pop
test
test
imul
cmpb
mov
inc
xchg
in
pop
sbb
or
or
pop
mov
cmp
sub
aam
fisttps
push
aam
mov
cli
enter
fidivl
repz
js
pop
sti
cmp
inc
sbb
sub
mov
ret
addr16
add
shr
xor
lds
push
jl
gs
nop
mov
mov
mov
test
mov
mov
movsl
loope
lahf
repnz
xlat
sahf
lock
lcall
outsl
inc
inc
scas
cwtl
sub
jne
sub
jg
pop
sti
and
fstpt
cmp
adc
int
stos
and
xchg
cmc
sbb
cmpsb
mov
cmpsb
cmp
adc
dec
pop
cltd
pop
xor
shl
mov
pop
hlt
test
lea
imul
xor
dec
out
or
adc
mov
pop
cli
xchg
dec
test
jb
movsl
lret
jecxz
int3
xchg
xchg
cltd
iret
fisttpll
lret
not
ror
inc
sbb
cmp
add
inc
call
push
add
or
adc
loopne
lods
in
jecxz
sub
mov
loopne
rcll
inc
xchg
xchg
psraw
inc
xchg
mov
fbld
mov
nopl
lcall
pop
mov
je
xor
mov
out
addr16
in
mov
ds
add
sbb
hlt
xchg
scas
ss
aas
sahf
add
mov
mull
div
xor
sbb
inc
or
cmp
daa
ss
sbb
loopne
mov
adc
scas
int
dec
adcl
lahf
aaa
lcall
mov
pop
and
push
shll
mov
dec
movsb
cmp
enter
data16
sbb
inc
jb
repnz
ds
fcomps
js
push
les
lds
inc
cmc
jp
pushf
sahf
jecxz
push
jle
fistl
push
mov
inc
insl
into
mov
out
repnz
jb
add
sub
add
and
rcrb
xchg
push
cmp
adc
data16
sbb
dec
push
imul
pop
xchg
add
xor
push
in
xchg
mov
inc
out
aaa
dec
out
shlb
lea
xchg
out
lods
shl
mov
dec
xchg
les
xchg
bound
inc
xchg
inc
ficomps
lea
xchg
jns
and
lods
repnz
lods
and
jl
lea
jecxz
mov
sub
pop
adc
mov
test
jns
jle
repnz
sbb
pop
and
push
in
cmc
push
sbb
imul
stos
lret
rcll
pusha
push
inc
or
sub
jae
leave
jl
pushf
dec
xlat
mov
push
bound
pop
dec
inc
mov
sub
inc
mov
push
repz
dec
sahf
repz
sub
or
push
xchg
std
inc
cld
cs
pop
clc
xor
lret
psubd
fcomp
mov
sub
fildll
mov
lods
das
xor
out
sub
mov
int3
and
pushf
hlt
cmp
cmp
cli
inc
pop
xchg
dec
or
jne
cmc
sbb
pop
movsl
sbb
in
fs
sub
add
and
mov
push
and
push
xor
push
cmp
in
xchg
xchg
les
push
mov
pop
cmp
dec
inc
loope
push
push
inc
pop
cs
pop
inc
push
push
pop
inc
stos
jb
leave
inc
sbb
cld
popf
sbb
in
xchg
sbb
inc
mov
pop
jmp
cmpb
repz
jmp
enter
loop
push
dec
push
cwtl
int3
aas
fiadds
fdivrl
popa
sahf
orb
scas
das
lahf
or
sub
add
jl
mov
into
shl
test
loop
loopne
and
std
push
push
push
mov
popa
xchg
push
icebp
sbb
mov
test
mov
adc
add
pusha
and
adc
or
repnz
or
adc
sub
push
add
shll
or
push
rorb
pop
or
inc
pusha
or
adcl
dec
gs
fsubrl
add
xor
ror
pop
lock
cmpl
addr16
lret
sub
jle
mov
push
xchg
or
stos
pop
mov
popa
mov
add
loop
mov
inc
dec
xchg
mov
cmp
push
mov
pop
mov
ljmp
cmp
xchg
and
stos
test
icebp
dec
bnd
sbb
jle
jg
movsb
pop
fbstp
faddl
push
cwtl
mov
imul
dec
or
and
fs
adc
gs
mov
add
in
xor
dec
xchg
adc
data16
mov
pop
iret
in
mov
and
loopne
aam
mov
xchg
aam
dec
rol
push
ret
xor
mov
adcb
cmp
imul
xlat
fistps
dec
jmp
aas
inc
sahf
push
xor
lahf
out
inc
jmp
cmp
cmp
mov
sbb
xor
nop
jmp
cmp
notb
add
outsb
add
mov
lock
and
mov
mov
aas
mov
sub
mov
shlb
sub
xor
xor
xchg
popa
ds
cmpsl
out
shl
inc
xchg
stc
inc
xchg
cmpsl
add
add
enter
gs
jne
inc
out
scas
fiaddl
lret
ljmp
and
jge
push
push
mov
addr16
cmp
mov
cwtl
push
jle
hlt
pop
jo
mov
inc
xor
adc
pushf
or
loop
popa
shlb
cmp
stc
add
fsubl
bound
into
in
cltd
push
jns
xor
dec
adc
mov
daa
mov
das
andb
jmp
sti
jge
mov
push
cmpsb
incl
xor
sub
inc
xlat
mov
mov
cs
pop
fucomp
mov
add
mov
mov
loopne
lods
inc
js
push
aam
lods
lret
notl
add
cltd
dec
xor
test
cltd
mov
cmpsb
mov
jnp
rorb
inc
rolb
ficoms
stos
sub
movb
xor
repz
lret
inc
stos
mov
mov
aaa
push
lock
and
aam
mov
mov
lds
std
push
push
fwait
test
add
cmp
mov
scas
aas
mov
cld
mov
loope
loope
cli
jl
mov
les
out
mov
jl
cltd
shl
xchg
inc
jo
pop
push
push
addb
mov
pusha
pop
xor
aaa
jle
mov
dec
xor
inc
sub
cwtl
mov
cltd
mov
xor
cwtl
insb
cltd
popa
pop
test
mov
xor
nop
sbb
dec
xchg
imul
mov
mov
divb
fwait
push
mov
pop
dec
and
movsb
push
pop
in
sub
inc
xor
leave
xor
lret
pop
pop
xor
pop
mov
aas
outsb
inc
pop
hlt
movl
xor
push
fidivrl
sarb
xorb
pop
or
dec
dec
and
icebp
sbb
mov
rcrb
inc
test
pop
fsubp
mov
xchg
adc
xchg
mov
xlat
add
inc
sbb
imul
repnz
xlat
in
mov
cmp
std
dec
sbb
ret
pop
nop
xor
jnp
cmpb
stc
dec
mov
cmp
dec
les
adcl
pop
xor
inc
test
cli
pop
imul
sub
incl
jns
mov
adc
ss
out
add
fidivrs
jne
sub
movsb
ret
add
dec
add
inc
mov
ret
pop
inc
mov
or
js
divb
bound
xchg
and
jl
fimull
mov
xchg
mov
cwtl
les
push
aaa
rclb
push
xor
xchg
push
dec
cmp
test
xchg
mov
fnsave
js
fwait
add
push
lahf
push
in
jle
mov
xchg
mov
mov
clc
test
and
cld
lock
jae
test
test
xchg
push
adc
negb
and
ret
outsb
aas
cwtl
mov
into
aam
push
dec
dec
jmp
aas
enter
sbb
sub
stos
add
and
bound
mov
test
push
add
dec
mov
jl
ficoms
and
pop
pop
ja
add
loop
fsubl
test
push
xor
push
cmp
lods
inc
push
into
cld
into
popf
inc
mov
in
mov
cltd
jp
jle
xor
ror
cs
int
das
orl
mov
xor
pop
inc
shlb
and
sub
inc
xor
xchg
sub
inc
pop
jg
and
das
negb
dec
fadds
xchg
je
rclb
stos
sub
mov
cmp
sahf
and
mov
push
inc
mov
pop
in
mov
lea
xchg
xchg
mov
shl
ljmp
xor
mov
xchg
pop
bound
dec
leave
arpl
popa
and
inc
scas
add
nop
cmpsb
dec
imul
jo
sub
cmp
mov
pop
push
sub
xchg
xchg
sub
mov
lods
adc
daa
cwtl
xlat
mov
dec
inc
sbb
repz
sahf
dec
je
in
ja
mov
inc
pop
push
cmp
xchg
or
jle
imul
das
xchg
or
test
and
fldt
xorl
repz
mov
inc
mov
pop
or
mov
cltd
jl
mov
scas
fists
stos
mov
fcoml
xlat
push
in
imul
inc
imul
shll
dec
or
movsb
loop
loopne
pop
or
loopne
cwtl
iret
js
repz
push
adc
pop
hlt
fisubs
cmp
and
push
sub
add
outsl
int3
lock
xchg
orb
test
pop
ss
jmp
fisubl
mov
jnp
stos
jbe
fs
stc
sbb
pushf
and
out
adc
andl
fldcw
lods
cmp
inc
fiaddl
mov
mov
das
xor
cld
add
mov
inc
adc
dec
push
and
xlat
mov
mov
or
inc
popf
movsb
mov
data16
push
xchg
or
pop
jb
jno
mov
jg
loope
inc
stos
mov
fwait
jne
push
das
sarb
faddp
cld
push
inc
insb
inc
push
imul
inc
lods
xchg
scas
mov
jo
inc
mov
mov
notl
scas
or
nop
mov
push
fcom
mov
movsb
call
addr16
jne
mov
adc
push
inc
cmpsb
rcl
movsl
pop
and
sub
mov
mov
test
imul
das
add
inc
push
xor
scas
popa
mov
xor
js
xor
sbb
and
arpl
lahf
jns
adc
dec
fadds
cmc
mov
adc
xchg
push
jmp
sbbb
inc
inc
add
fidivrs
pop
lret
shrb
dec
adc
clc
jmp
or
call
sbb
adc
lds
aam
mov
scas
adc
cmp
xchg
std
sub
lea
lahf
testl
nop
inc
stos
xchg
sbb
orl
mov
out
jecxz
pushf
xor
inc
xchg
repnz
jge
cmpb
mov
popf
or
push
cld
push
stc
rclb
sbb
inc
arpl
bound
lods
repnz
xchg
mov
cmp
aas
jnp
adc
sbb
mov
js
movsl
mov
out
and
in
sbb
loopne
std
mov
mov
aas
inc
and
jle
lock
leave
lret
sub
jnp
adc
jne
inc
mov
mov
mov
push
test
add
push
inc
scas
cld
sub
mov
adc
cwtl
sbb
in
pop
out
ret
fcmovbe
adc
loopne
cs
fisttps
aaa
ljmp
ret
stos
mov
jb
bound
enter
mov
xchg
jle
stos
sbb
test
int3
inc
aas
les
jmp
dec
xchg
xchg
flds
cmp
orb
pop
lea
clc
mov
mov
mov
cltd
add
mov
sbb
shrl
outsb
das
add
sub
sub
pop
xor
adc
or
pusha
push
data16
stc
push
out
movsb
bound
adcb
jae
push
jge
rorb
mov
push
jp
cltd
jmp
adc
in
mov
inc
mov
pop
std
arpl
std
cmp
hlt
cld
xchg
jo
stos
push
nop
sub
sbb
push
cmp
nop
lods
repz
out
pop
mov
pop
mov
inc
and
pop
inc
xchg
ja
stos
test
xchg
in
xor
out
test
sub
ss
stos
les
jmp
pop
xchg
add
fs
dec
or
mov
clc
pop
lds
mov
jecxz
mov
mov
sahf
test
out
and
lods
lods
mov
out
cmp
in
mov
sbb
shrb
adc
push
cwtl
popf
jmp
sti
push
inc
fmuls
xchg
popf
cmpsl
test
int
stos
push
ja
mov
or
mov
ja
sub
outsl
insl
sub
stos
outsb
scas
pop
stc
out
inc
inc
loopne
jp
or
xchg
pushf
aas
push
adc
jmp
inc
or
lods
sahf
push
in
sbb
pusha
mov
dec
and
loopne
mov
int3
dec
dec
ror
adc
cmp
fs
subl
mov
and
cmpsb
push
xchg
iret
add
cmp
aam
sub
in
xchg
inc
aad
dec
push
movsb
adc
shlb
les
arpl
xchg
int
outsb
lods
pop
loope
cs
sahf
dec
scas
push
xchg
and
ja
jge
or
push
int3
mov
into
loop
mov
daa
adcl
xchg
inc
cli
xchg
lods
or
dec
xchg
mov
movsl
ret
jnp
push
ret
out
xchg
adc
mov
mov
push
mov
sbb
sbb
jns
andl
push
stos
aad
push
scas
mov
jae
orb
mov
test
mov
xchg
inc
pop
push
push
inc
push
and
mov
sbb
int3
daa
mov
pop
mov
push
push
jo
sbb
arpl
push
xor
mov
xor
inc
lds
clc
aad
mov
movsb
jb
mov
stos
push
sbb
xor
movsl
out
flds
cmp
sub
or
cwtl
and
or
stos
inc
imul
mov
add
fldenv
fsts
mov
clc
xlat
jae
scas
mov
fs
fs
sahf
cmpsb
adc
or
faddl
push
lret
ret
jl
shrl
jl
or
shlb
dec
sbb
lds
cmpl
pop
add
adc
ss
jl
testl
mov
test
push
arpl
out
lds
mov
sub
xchg
lods
fdivs
push
inc
xchg
lds
mov
xchg
xchg
icebp
aas
addb
mov
imul
hlt
mov
sbb
ja
sahf
test
xor
push
int3
sub
xor
add
out
pop
pusha
cli
add
jge
pusha
sbb
cltd
lret
mov
pop
fxtract
cmc
and
jl
and
xlat
mov
push
jle
cmp
jecxz
inc
xor
push
mov
add
jno
sbb
rcr
stc
stos
mov
bound
mov
sub
xchg
cs
test
and
cs
scas
hlt
adc
sbb
push
dec
mov
push
outsb
sbb
xchg
jno
push
test
dec
jecxz,pn
add
mov
cli
jp
dec
sub
gs
inc
lock
xlat
pop
insl
sub
inc
pop
loope
cmp
bound
lods
jecxz
stos
andl
adc
cmp
ror
push
pushl
das
imul
sti
mov
sub
subb
xor
pop
xchg
in
mov
xor
cmc
cmc
lcall
adc
add
push
pop
pop
jp
lock
jne
mov
or
sub
adc
add
and
dec
add
lock
add
jmp
sahf
outsb
test
xchg
addl
xor
movsb
jmp
mov
mov
sbb
rorl
ds
xor
xchg
rorb
sbb
jo
fcomp
mov
add
sub
pop
mov
mov
sub
mov
test
aas
sbbl
imul
jge
int3
cs
nop
repz
mov
cmp
cli
mov
cmpsb
xchg
cmc
subl
push
lea
or
lret
or
sub
imul
dec
cwtl
add
ljmp
dec
data16
sbbb
rclb
ss
inc
xchg
lock
mov
vmwrite
dec
daa
add
push
push
lret
pop
add
push
sbb
push
data16
push
or
mov
sbb
data16
sub
add
mov
sub
and
test
adc
pop
inc
addb
push
push
jns
subl
xor
lret
sbb
jmp
xchg
scas
insl
lods
mov
cmp
push
sbb
repnz
dec
out
inc
xchg
test
adc
lret
orl
inc
pop
pop
insl
lea
movl
sbb
xchg
dec
cmp
jns,pn
fiadds
in
das
cmp
cmpb
jmp
or
mov
lock
lret
or
cmp
xor
jns
dec
repz
fnstenv
fwait
mov
fiadds
in
int
rol
fxtract
cltd
cmp
mov
cmp
pop
or
adc
and
stos
mov
inc
lea
pop
xor
push
sbb
arpl
jno
mov
in
outsl
mov
jle
stc
aaa
pop
fwait
jae
orb
fmull
aam
jecxz
fsubs
cmp
and
stc
pop
xchg
insl
sub
stos
jp
popf
jno
rorb
push
jge
gs
inc
inc
dec
push
jl
mov
cli
repz
ret
mov
out
mov
test
popa
push
test
jne
test
js
test
icebp
sbb
jbe
jl
push
fs
aam
testl
xchg
mov
pop
mov
imul
test
pop
xor
push
pop
jne
xchg
jle
push
jmp
sbb
xchg
adc
cmpsl
cmp
lea
xor
lods
or
push
ret
rep
and
jp
xor
in
mov
pop
dec
sbb
scas
inc
push
cmp
and
sub
call
mov
and
mov
and
dec
int3
mov
xor
inc
and
jne
dec
pop
inc
divb
hlt
rcll
in
push
and
sbb
inc
push
add
push
stos
mov
sub
push
and
lds
xlat
movq
inc
pop
rcrl
push
leave
clc
lret
clc
jne
in
jmp
por
jecxz
sbb
out
mov
dec
leave
jne
add
cli
hlt
bound
inc
push
and
addr16
decb
cmc
push
and
sbb
cli
lea
icebp
jns
fiadds
mov
cs
ret
rcrb
inc
dec
movsl
adc
pop
cmpsb
push
inc
inc
mov
cmc
xchg
das
pop
arpl
scas
clc
fistps
imul
movsl
or
aam
sub
jne
mov
in
in
shl
mov
xor
push
cwtl
cmpsb
mov
pop
sbb
mov
xor
sbb
arpl
push
dec
push
or
push
inc
icebp
xor
cs
pop
push
push
js
or
sbb
jge
jnp
mov
xor
xor
pusha
repz
xchg
jb
add
xchg
js
test
nop
jae
push
bound
loope
sbb
pop
inc
into
lret
lds
add
ss
mov
and
add
or
test
lea
xchg
enter
xchg
insb
push
mov
pop
mov
adc
dec
jmp
push
pop
mov
mov
cld
mov
test
dec
inc
mov
add
mov
scas
mov
fxch
push
mul
xchg
mov
adc
and
sbb
pop
adc
sti
jp
loope
push
sbb
repnz
inc
pop
je
inc
and
shll
iret
or
mov
mov
xchg
push
cmp
leave
lret
push
xlat
or
mov
push
dec
repnz
sub
fnstcw
addr16
fmuls
in
shr
les
inc
mov
mov
data16
repz
in
or
mov
into
shr
shr
ret
cmp
sub
sbb
push
sub
push
cmpsl
daa
dec
rcll
das
and
test
sub
push
stos
pop
adc
shll
and
popa
in
xor
mov
push
nop
sub
add
fsubrs
mov
bt
xor
gs
xchg
out
int3
cli
lret
jae
std
in
push
jnp
dec
pop
push
xchg
popf
jp
mov
subl
push
andl
xchg
or
mov
and
scas
movsb
xchg
and
dec
add
mov
push
addr16
pop
jno
test
and
mov
mov
daa
mov
cmpsb
lret
pop
xor
test
mov
cmpsl
add
push
mov
push
arpl
pop
xchg
mov
adc
mov
xchg
push
pop
dec
je
scas
jle
jge
add
jg
stc
popa
inc
cmp
and
xchg
clc
ret
arpl
mov
jl
jg
scas
jb
loop
mov
xchg
adc
cmc
dec
add
inc
movsb
pop
adc
or
xor
orl
rcl
cwtl
push
xor
inc
das
lods
xchg
popa
scas
cld
mov
pop
cs
sbb
mov
fmuls
mov
lcall
bound
push
ss
out
movsb
xchg
cmp
cs
dec
pop
ret
push
out
add
xor
sub
int3
mov
call
jmp
pop
dec
fdivs
icebp
mov
push
xchg
push
test
bound
pusha
pop
push
pop
cmp
fbld
js
loopne
sti
mov
jl
mov
int
scas
mov
scas
mov
int3
pushl
in
inc
movsb
clc
cmpsl
sub
ja
or
pop
inc
inc
test
out
loop
push
jecxz
test
lret
xchg
pushf
pop
push
jle
lds
mov
jge
repnz
shll
mov
in
loop
cli
sub
cmpsl
or
cmpsl
rol
fmull
out
sub
dec
ror
rorb
push
push
fucomip
inc
imul
pop
paddd
or
lea
mov
mov
mov
rolb
ficoml
push
mov
push
mov
rcll
int
adc
dec
pushf
push
cli
rep
xlat
je
xlat
sbb
mov
out
dec
mov
cmp
popa
movsb
add
test
leave
sbb
leave
xchg
cmp
vxorps
sbb
sub
xchg
adc
sahf
or
pop
inc
jae
daa
inc
pop
cmpsl
xchg
inc
repnz
out
adc
pop
or
adc
idivl
sub
xchg
mov
inc
jmp
push
cmc
cmc
push
inc
mov
lret
pop
popf
test
mov
out
add
sbb
cld
pop
push
push
cmp
out
lods
fstpt
jnp
mull
mov
jp
mov
stc
mov
in
inc
imul
pop
and
out
jne
sub
test
mov
scas
stos
outsl
add
and
cmp
out
insb
cmp
imul
fs
repnz
cmpsb
inc
cld
cmp
push
testl
cli
loope
pushf
mov
jp
xchg
addr16
fsubl
pop
lcall
xchg
pushf
cmp
mov
xchg
adc
dec
mov
mov
inc
fbstp
mov
pop
mov
inc
in
dec
sub
sub
adc
outsl
lea
ss
dec
push
mov
aaa
test
cmp
in
stos
lods
mov
subb
loop
or
xor
or
lock
int3
jmp
fnsave
mov
movsl
adc
inc
pop
fsts
hlt
fidivrl
into
nop
mov
dec
sbb
addl
movsl
mov
cmpsb
dec
jmp
pusha
add
rcrb
xor
sbb
or
imul
and
sti
cwtl
insl
sbb
pop
pop
inc
jbe
dec
cmp
arpl
or
inc
loop
stos
or
sub
push
mov
push
mov
fimull
mov
insb
sbb
test
pop
pop
xorl
sar
scas
xchg
mov
mov
loope
divl
jne
ficoml
mov
mov
mov
xchg
pop
mov
lahf
xor
bound
test
das
mov
hlt
jle
nop
lcall
push
cli
bound
or
push
adc
jae
pop
mov
cmp
pop
add
ds
pop
or
das
scas
ljmp
inc
adc
push
and
jp
pop
out
or
les
cli
js
inc
ja
out
lcall
inc
mov
mov
push
mov
push
cmp
sub
repnz
sbb
aam
xor
cwtl
es
add
inc
jge
cwtl
fstps
xor
add
add
sub
add
fcompl
xor
inc
cmp
popa
pusha
inc
and
push
lods
and
xor
in
sbb
sti
push
jmp
dec
lods
in
int
inc
mov
xor
inc
adc
in
sub
inc
mov
or
add
clc
mov
out
testb
pop
push
cmc
cltd
add
xchg
pop
nop
push
ja
cld
arpl
es
xchg
enter
adcl
je
inc
pop
fisubs
sarl
jle
xchg
add
ljmp
push
movsb
or
push
mov
cmp
inc
inc
cwtl
lahf
mov
bound
xchg
sub
jmp
and
jmp
packssdw
mov
das
adc
jg
push
pop
adc
mov
prefetcht1
mov
stos
or
lods
out
inc
adc
ja
movsl
lret
jle
roll
xchg
dec
andb
out
syscall
and
sarl
pushf
aaa
neg
xchg
cmp
insb
jle
adc
loopne
push
lock
frndint
into
lods
loop
hlt
jo
das
jae
cmp
dec
jns
movb
fistps
cmc
dec
and
loopne
fisttpll
mov
add
jecxz
push
xor
mov
inc
xchg
mov
mov
mov
decb
jle
fstps
pop
push
dec
pop
mov
add
or
mov
enter
sbb
jmp
add
mov
push
xchg
bound
arpl
mov
adc
sub
mov
mov
pusha
xor
int3
sahf
daa
jmp
inc
adc
cmc
inc
sbb
out
iret
or
mov
push
jge
nop
repz
mov
int3
sub
aas
fs
add
adc
iret
movsb
dec
jns
test
xchg
sub
mov
sarb
stos
fldl
xlat
cmpsb
sbb
mov
jae
xor
inc
inc
pop
test
xor
stos
xchg
mov
push
inc
int3
rorb
jno
rclb
fsubrl
shlb
bound
pop
movsb
sbb
loop
xchg
pop
push
test
das
xor
and
pop
loopne,pt
adc
sbb
sub
fsubrs
mov
mov
lret
or
cwtl
mov
aad
dec
sbb
bound
mov
popf
xlat
mov
pushfw
mov
cmpsl
nop
add
sub
and
or
cmp
lret
push
cmp
loop
xchg
imul
movb
mov
fs
or
sub
inc
push
xor
scas
sbb
mov
sub
fisubl
inc
fcmovbe
xor
dec
adc
inc
mov
inc
mov
jp
sbb
aad
add
adc
xchg
fsubs
push
sarl
sub
sub
adc
xchg
push
insb
add
xchg
dec
pop
push
inc
movsl
inc
lods
sbbb
rorb
dec
in
sti
add
sbb
dec
pop
and
cltd
dec
sbb
sub
or
mov
clc
add
fistl
shl
movsl
mov
das
adcl
pop
jbe
scas
cmp
mov
push
add
out
push
add
or
mov
add
lock
mov
jno
pop
imul
mov
xchg
inc
mov
enter
lock
xchg
shlb
addb
and
jne
clc
fs
mov
sbb
aas
mov
sub
cmp
fisttpl
mov
dec
dec
fwait
jmp
imul
cmpl
cmpsl
dec
out
fs
dec
pusha
repnz
jns
cs
dec
xchg
test
jb
arpl
cmp
pop
mov
outsl
lea
shlb
mov
jnp
push
inc
mov
daa
popa
insb
cmpsl
loop
addr16
mov
lods
cmp
lods
inc
lock
mov
out
stos
sub
adc
xchg
enter
push
or
inc
push
push
call
stc
ljmp
sub
sbb
loop
lods
xor
xchg
xor
pop
cli
sub
repnz
push
xchg
addb
iret
mov
inc
sub
pop
sub
jb
cs
daa
xchg
inc
xchg
push
sbb
add
sahf
ret
sti
mov
push
roll
les
inc
popa
js
popa
adc
mov
insl
test
add
adc
rcrb
imul
add
lret
add
pusha
xchg
jge
inc
and
pusha
inc
jne
push
dec
or
int3
lret
sti
pushf
cmpl
pcmpeqd
push
leave
jecxz
inc
cmp
mov
mov
pop
xchg
sbb
sarb
lods
sbb
fmuls
das
cs
adc
repz
jge
add
sbb
movsl
xchg
iret
sets
dec
ret
cmc
cmp
out
push
xor
nop
je
adc
jae
in
outsl
push
sub
loopne
jl
sub
ss
xchg
repz
sub
or
xlat
stc
cmp
jmp
dec
and
push
mov
mov
in
jge
jns
sbb
xchg
lret
mov
popf
data16
leave
mov
cmp
aad
mov
jbe
mov
mov
sbb
dec
inc
std
mul
xchg
out
roll
loopne
mov
adc
inc
imul
int
mov
fsub
test
jo
or
js
stos
mov
js
movsl
push
sub
ret
jno
push
mov
push
jp
add
push
loop
sar
in
xchg
mov
in
andb
jnp
aas
mov
push
test
sbbl
lret
dec
and
bound
jecxz
dec
jns
push
loop
nop
or
and
ljmp
mov
inc
outsl
loopne
mov
mov
push
shlb
pop
std
lods
push
pop
inc
mov
mov
dec
push
shr
jge
mov
ljmp
cltd
push
ja
stc
adc
adc
cltd
cmp
push
movsl
push
pop
inc
popf
in
push
daa
sbb
mov
in
push
cmp
xor
add
jnp
jecxz
imul
nop
mov
fidivrs
lret
jecxz
icebp
arpl
aad
lea
lds
add
mov
and
xchg
dec
int
inc
out
icebp
andl
in
sub
and
add
jbe
sub
test
int3
es
nop
mov
jb
push
ljmp
push
es
mov
adcb
dec
adc
add
xor
or
outsb
out
pop
xlat
mov
test
loope
add
sbb
sub
movsb
push
test
xor
add
mov
mov
and
pop
rcrb
push
scas
dec
lds
popf
xor
inc
push
push
pusha
out
lret
mov
je
in
sbb
out
xchg
cwtl
push
and
jge
adc
xchg
or
fwait
popa
ds
int3
mov
xchg
jge
dec
mov
pop
popa
mov
mov
xorl
cwtl
scas
add
in
cmp
add
mov
popf
jmp
dec
test
inc
and
mov
roll
jl
in
call
xor
xchg
cwtl
xchg
cmp
insb
pop
cmp
push
dec
add
add
icebp
shll
cmpsb
mov
adc
stos
int3
add
lods
jns
push
sub
mov
inc
mov
test
aas
sub
push
test
inc
pop
xor
js
mov
xchg
faddl
and
mov
dec
mov
test
mov
pop
dec
cmc
pop
or
lods
cwtl
ss
adc
add
push
xor
xlat
test
fildl
and
adc
cmp
fs
cmc
mov
mov
dec
xchg
sar
in
aam
sbb
lock
daa
cmc
xchg
push
dec
mov
movsl
xor
xchg
cmc
push
inc
inc
or
mov
repnz
popa
push
ret
loopne
mov
xchg
mov
inc
pop
loopne
lret
sbb
sbb
gs
sub
lret
cs
jne
sub
imul
dec
jp
and
outsl
stos
in
in
mov
mov
inc
pop
popf
jo
nop
roll
cmp
in
call
inc
and
cmp
popa
test
mov
cmp
push
xchg
sbb
push
shrb
cli
fildl
jnp
mov
push
je
test
push
mov
inc
int3
inc
pop
cwtl
das
mov
xor
xchg
movsb
scas
mov
add
ret
push
js
fcmovnu
jae
lcall
lret
push
imul
sbb
cli
in
add
hlt
jl
movsb
stc
pop
divb
mov
push
xor
xchg
fmul
in
push
dec
mov
shll
nop
pop
nop
mov
dec
dec
insl
mov
movsb
adc
sub
lods
mov
adc
fmull
cmp
sbb
xchg
inc
cli
sbb
std
xor
push
sub
xor
sbb
lods
nop
divb
xchg
sarl
inc
pop
loope
lock
hlt
xor
push
xchg
out
xchg
aad
lea
fiaddl
jo
shrb
jecxz
pop
iret
adc
insl
mov
scas
mov
or
add
inc
xor
push
fs
add
inc
leave
loope
pop
fmul
mov
pop
test
xor
or
imul
mov
adc
les
rcrb
popa
xchg
push
out
xor
int
lret
sub
inc
jae
ja
and
push
aaa
add
xchg
pop
iret
int
imul
and
ds
sbb
adc
pushf
js
push
aas
push
jo
or
dec
mov
adc
pushf
and
and
lds
in
add
lods
pop
popa
add
jmp
jmp
pop
add
test
mov
inc
dec
shll
lock
cs
out
int3
mov
sbb
jp
dec
pop
cmp
xlat
jno
add
rorb
fwait
jno
inc
inc
bound
adc
cmp
inc
leave
or
das
fsubrl
pop
sub
push
dec
clc
pop
push
in
sub
jecxz
add
and
adc
xor
fisubl
imull
scas
jecxz
imul
ljmp
loop
cmp
lea
cli
lods
je
aas
std
xor
cmpl
xchg
fistps
es
xchg
mov
or
aam
push
adc
dec
cmpsl
rol
scas
jno
mov
cmp
je
lds
inc
push
outsb
inc
fcoms
cmpsb
sbbb
cmp
repz
pop
ror
push
push
xor
mov
xor
lea
mov
punpckldq
out
jns
cmpsl
lret
jl
ret
dec
xchg
lds
leave
jno
add
jns
cmpsb
in
and
and
pop
mov
push
test
jp
jbe
mov
mov
call
js
xchg
fsubrs
xchg
and
sbb
push
test
pop
scas
mov
loopne
lock
push
shr
fimull
out
jo
push
into
push
jecxz
jnp
mov
pop
inc
cs
or
cli
and
pop
adc
call
sub
pop
fmull
cld
mov
sbb
or
xor
push
xchg
hlt
mov
add
data16
mov
inc
cmp
scas
mov
jg
dec
adc
push
test
scas
sbb
sub
inc
mov
imul
add
pop
iret
andb
arpl
pop
xchg
xchg
jle
add
xchg
ret
jge
loopne
ja
sbb
jns
xchg
sub
fbstp
adc
imul
in
dec
js
test
cmp
add
and
outsb
shll
jnp
stc
push
add
and
mov
add
mov
and
int
fwait
scas
xchg
jge
sarb
outsb
aam
mov
sub
scas
pop
add
dec
mov
js
insb
mov
bound
push
jge
jne
roll
adc
xorb
mov
lods
into
inc
adc
push
inc
out
mov
and
sbb
or
adc
pop
pop
and
inc
inc
mov
mov
jmp
inc
dec
pusha
inc
cmp
add
rorb
icebp
out
insl
dec
add
xchg
daa
adc
mov
jo
leave
adc
adc
add
rol
fsubrs
lock
mov
lock
sub
test
jno
adc
xor
sub
popa
out
lcall
dec
or
mov
add
pop
das
aas
cmpsl
scas
sbb
cltd
or
lds
xlat
cli
inc
pop
push
bound
scas
and
iret
popa
push
and
jge
inc
ds
and
sbb
adc
adc
push
adc
in
or
clc
shrb
sbb
call
out
xchg
lcall
adc
sbb
mov
inc
lea
lahf
cmp
mov
je
xchg
dec
mov
test
rorl
or
cmp
mov
and
adc
cmp
and
test
stos
mov
mov
jne
stos
jae
dec
test
cld
jecxz
jmp
shlb
cwtl
push
fcoms
push
gs
rorb
lds
pop
pop
and
enter
imul
test
cld
mov
scas
sub
les
sbb
roll
inc
ja
in
repz
dec
test
xchg
popf
pop
pop
xchg
adc
test
mov
or
add
dec
icebp
sarl
sbbl
testl
adc
add
mov
inc
adc
leave
xor
cs
add
jb
push
insl
pusha
push
out
aaa
rcrl
or
pop
jg
test
push
pop
fistpl
sbb
subl
and
lods
loope
mov
iret
in
inc
sub
inc
cmp
push
inc
std
fistl
mov
insl
lods
stos
adc
cmp
push
nop
mov
xor
mov
and
lods
pop
inc
sbbb
push
push
fsubs
lahf
sarl
or
jmp
inc
push
mov
fs
ljmp
sbb
je
lcall
push
xchg
test
or
mov
ret
push
push
or
ffreep
jl
cwtl
inc
cmp
cmp
jns
in
sub
push
mov
adc
cltd
loope
mov
dec
cmp
pop
jbe
pop
fidivl
add
sbb
sbb
cmpb
test
js
pusha
sbb
jle
std
add
xchg
or
lods
mull
addr16
dec
push
xchg
test
xor
or
push
cli
ficoml
gs
and
sbb
mov
daa
clc
aaa
cmc
mov
loop
adc
push
popa
jl
fsubrs
sahf
arpl
push
jg
aad
cli
roll
ret
enter
stc
push
mov
adc
rcll
test
shll
adc
enter
and
pop
fdivrl
ljmp
sahf
inc
jge
cmpsl
test
cmovle
jo
lea
inc
add
int3
scas
enter
mov
adc
dec
fcomi
ljmp
push
add
mov
add
shrb
ffree
subb
test
in
mov
xor
mov
sub
out
push
lock
das
mov
hlt
repnz
lock
xor
stos
mov
loopne
mov
iret
mov
dec
repz
nop
adc
movsl
test
movsl
push
popf
adc
and
inc
mov
mov
and
pop
pop
arpl
sub
rcrb
lds
mov
or
pop
jmp
mov
jp
fwait
ljmp
sub
add
nop
pusha
add
mov
sbb
dec
sub
daa
sub
leave
xor
adc
pop
lret
pusha
add
sub
push
pop
mov
inc
divl
bound
fimuls
roll
inc
xor
mov
xchg
pop
lods
insl
add
jg
jp
lods
xlat
sub
clc
inc
or
mov
sub
or
xor
in
rol
mov
dec
lods
push
inc
xchg
sbb
repnz
loope
push
sub
push
loopne
rcrb
add
cmpsb
inc
fwait
mov
sbbb
pop
data16
dec
and
xchg
lds
push
push
hlt
lea
jne
mov
dec
sbb
inc
outsl
xchg
or
cmpsb
cltd
adc
push
adc
es
jbe
push
lods
or
dec
dec
sub
xchg
les
inc
jmp
adc
fsubp
loop
dec
das
pushf
fiadds
jmp
push
adc
dec
inc
and
push
and
test
aaa
sub
aaa
xor
fsubp
adc
dec
dec
and
cmp
mov
adc
fisubs
faddp
adc
cmp
pop
sti
mov
dec
aas
lea
add
mov
and
ficoms
jnp
push
in
dec
inc
lea
mov
mov
cmpsb
es
rcrb
dec
test
out
jl
push
xchg
push
or
push
add
fdivrl
jecxz
jmp
mov
mov
mov
or
ds
movsb
and
xchg
push
add
inc
mov
push
adc
inc
xchg
mov
and
loope
inc
inc
test
push
sub
mov
test
push
bound
call
test
mov
adc
cwtl
inc
leave
pop
and
in
cmp
pop
add
pop
popa
testb
mov
and
add
inc
adc
test
andb
out
mov
pop
push
pop
out
hlt
cltd
stos
pushf
cmp
fildl
push
mov
mov
test
sbb
push
int3
out
scas
les
aam
popa
mov
je
sbb
cwtl
jmp
pop
test
jo
jb
imul
pop
mov
cmp
sub
jmp
pusha
adc
aaa
inc
sub
enter
fadd
into
push
adc
xor
mov
or
sub
les
pop
test
sbb
or
bound
insb
or
and
adc
and
jmp
clc
shll
push
int
xchg
mov
lcall
adc
xor
popf
test
fsubl
xor
sbb
mov
test
or
stc
repnz
cmp
adc
jns
lea
jo
dec
or
lods
inc
adc
fs
or
push
mov
jbe
add
xchg
das
dec
push
jecxz
push
inc
iret
adc
push
lods
dec
dec
pushf
iret
mov
mov
xchg
mov
sbb
and
pop
or
outsb
inc
mov
pusha
loope
sbb
pop
mov
inc
or
sbb
in
test
imul
imul
in
flds
out
movsb
cmp
sbb
test
insl
cmp
std
pop
sarl
xorl
cli
sbb
int
add
loopne
sbb
push
push
pusha
push
je
cmp
into
xor
jnp
inc
aad
sarb
adc
test
inc
mov
and
inc
push
test
sub
loop
scas
adc
xchg
fiadds
jmp
movsb
adc
inc
sub
test
outsl
mov
sarb
scas
inc
sub
lcall
aas
inc
sti
xorb
jmp
mov
rol
mov
into
aam
out
shlb
lret
mov
mov
dec
push
xor
gs
lahf
clc
mov
test
mov
stos
sub
mov
in
lcall
push
in
sub
xor
mov
sarb
repnz
sbb
or
lods
call
bnd
pusha
push
add
push
mov
jne
loop
mov
mov
rolb
cwtl
push
test
mov
mov
int3
jmp
sbb
call
stc
push
sbb
adc
cmp
insb
lock
gs
jo
or
adc
jno
xor
icebp
pop
repnz
lea
adc
movntps
adc
std
cld
dec
clc
dec
in
mov
sti
in
and
ljmp
roll
and
mov
nop
push
adc
stos
and
xchg
out
jmp
cmp
lock
loop
dec
jle
adc
dec
add
jae
jmp
dec
fcomi
sub
test
mov
push
icebp
rclb
pop
test
pop
jne
xchg
dec
adc
push
push
out
mov
clc
jecxz
leave
pop
mov
in
stc
push
sbb
cmp
push
jecxz
pop
xchg
xor
leave
adc
lea
stos
cmpb
movsb
aas
cmp
mov
cmp
add
xor
lock
out
xor
cmp
out
inc
xor
aaa
and
sbb
push
and
push
push
sbb
movsb
mov
mov
xchg
shlb
out
or
adc
push
or
sbb
outsl
jne
mov
xchg
pop
dec
push
sbb
mov
jne
push
and
in
mul
bound
aas
test
shlb
jge
mov
mov
dec
adc
inc
push
and
sbb
sub
dec
and
push
call
jbe
call
push
pop
pop
sub
or
sbb
or
dec
inc
cmp
pushl
mov
mov
xchg
test
repz
cld
push
jbe
xchg
aas
xchg
es
mov
jb
pop
xchg
outsl
sub
scas
sbb
or
sub
push
push
rclb
lea
stos
mov
ljmp
bound
sbb
push
jmp
aas
dec
xor
mov
push
cmc
sbb
xor
xchg
mov
and
ror
shrb
jno
jmp
or
sub
or
xchg
xor
in
inc
dec
pop
dec
int3
dec
pop
pop
nop
pop
insl
pop
movsl
bound
ja
cmp
jmp
push
fldl
xchg
pop
sbb
mov
xchg
dec
rol
lock
movsl
mov
lods
movsl
pop
jmp
mov
add
cmc
push
nop
fldpi
ret
cmpsb
xchg
mov
xchg
sarb
xchg
xchg
inc
add
or
call
loopne
lea
imul
sbb
xor
in
cld
pop
sti
push
and
xchg
popf
sbb
adc
xor
call
stos
jecxz
lock
cltd
pop
int3
aam
mov
sbb
push
xchg
cmpsl
sbb
pop
cmc
dec
pusha
scas
and
stos
lea
push
test
or
sub
pusha
xchg
gs
jge
roll
enter
push
jle
repnz
cmpsl
cld
jo
jo
cmpsl
add
out
xor
inc
mov
dec
jne
loop
dec
push
cmp
push
or
push
sub
inc
mov
fstps
sub
adc
or
dec
push
loop
inc
jp
cwtl
jno
aad
ss
mov
imul
mov
inc
mov
jo
or
xchg
adc
pop
outsl
xor
hlt
cmp
in
je
roll
les
jbe
sbbl
sbb
pmaxub
fiadds
mov
sub
jp
inc
daa
cld
in
sub
add
jo
mov
ja
test
mov
test
mov
divb
out
lock
ljmp
or
fsubs
fdivl
fcoms
ja
ja
push
cmpsl
adc
addr16
push
ret
aaa
repnz
dec
inc
fdivl
cltd
ret
outsl
inc
inc
add
push
cli
flds
shlb
sbb
aad
cmp
enter
xchg
adc
pop
rolb
cmpsb
push
dec
inc
xor
lods
cmp
popa
enter
mov
mov
jb
cwtl
push
sbb
stos
movsl
mov
ds
jg
sbb
rorl
sub
ss
xor
jno
push
stc
ret
outsl
push
shl
mov
popf
ljmp
sbb
mov
and
xlat
lock
sub
int
fs
add
adc
fdiv
xchg
nop
xor
scas
jbe
rclb
sbb
adc
fs
pop
das
int3
inc
dec
insl
push
adc
sbb
movsb
adc
shrl
sub
gs
gs
pop
lret
and
sahf
jmp
mov
inc
shlb
push
mov
jmp
mov
jno
sbb
inc
out
stos
mov
mov
mov
mov
mov
movsb
ljmp
fldl
sub
inc
push
cmpsl
mov
movsl
ja
dec
into
incb
cmp
or
xchg
aam
rcll
jmp
mov
mov
cmp
xchg
xchg
popa
stos
repz
roll
inc
and
mov
sub
addr16
das
popf
in
pop
inc
shl
int3
stos
lods
repnz
aas
dec
test
add
inc
add
xor
in
adc
int
or
rorl
cmp
xchg
bound
fistpll
or
adc
dec
icebp
stc
cmp
cld
imul
ja
jno
xchg
cmc
ja
lods
add
mov
push
fbld
ror
fmuls
fistpll
rcrb
sbb
and
outsb
dec
cmp
cmpw
pop
loop
jle
mov
xchg
push
cmp
or
shl
pusha
push
sub
lret
add
xor
sbb
add
inc
mov
dec
ds
xchg
cmc
push
movsb
shlb
add
sbb
jo
daa
sub
push
and
dec
test
daa
mov
inc
daa
movsb
adc
cmp
shll
aam
bound
subb
push
xor
mov
adc
iret
leave
or
fcoml
adc
mov
sub
mov
cmp
into
aaa
xchg
adc
aas
cmp
rol
lock
ja
inc
mov
or
xchg
outsb
fs
pusha
jno
and
pop
icebp
pop
ja
jne
sbb
pop
repnz
rcrb
enter
jmp
ret
dec
nop
shlb
inc
mov
sub
in
inc
clc
loopne
popa
jmp
orb
lock
xor
lret
repz
inc
cmp
mov
loopne
fildl
aas
pop
jo
inc
or
scas
cld
rolb
and
inc
adc
dec
cmc
mov
xchg
aad
mov
lods
into
shlb
shll
dec
lret
sbb
cmpsb
mov
out
scas
mov
add
dec
mov
ljmp
mov
das
in
add
sub
ret
pop
adc
or
mov
lcall
shll
ret
clc
inc
jp
pop
pop
dec
jb
outsb
clc
push
jbe
cmpsb
or
push
dec
jne
lret
add
push
imul
cltd
call
stos
test
push
push
jge
popf
jb
fwait
or
adc
mov
lcall
and
and
or
add
stos
xchg
inc
cmpsb
lds
cmp
cmpsl
mov
push
xchg
push
shlb
mov
dec
mov
cmp
cmp
call
xor
pop
pop
rclb
pop
inc
adc
scas
or
xor
sbb
jp
xchg
sub
inc
add
or
jmp
jb
pop
test
and
xchg
adc
movsb
jg
out
pop
lock
lret
insb
ss
rcl
push
je
or
shrb
sub
cmp
xor
pusha
stos
rclb
mov
das
std
shl
loope
cmpsl
andb
cli
clc
int
lock
xchg
sbb
sbb
dec
dec
or
leave
xor
sub
popf
mov
stc
xorl
cltd
mov
dec
push
mov
cmpsl
and
jmp
sbb
mov
scas
mov
cmp
pop
mov
jmp
call
ret
mov
rcll
push
xchg
scas
mov
mov
and
clc
int
fisttpll
orl
ljmp
arpl
call
nop
mov
aas
jb
incl
dec
mov
cmp
sbb
mov
loopne
sub
push
loop
lcall
inc
dec
jns
mov
scas
stos
add
cmpsl
push
loope
push
ja
out
fsubrs
mov
xor
stos
add
lret
std
das
pop
push
sub
shrb
xor
into
xor
jb
cmc
xchg
push
stos
or
test
xor
or
call
outsb
mov
stos
int
lock
xor
mov
adc
rorl
mov
adc
xchg
hlt
je
incb
push
cmp
test
pop
es
jns
in
imul
pop
in
ja
ret
cmpsl
sub
insl
pop
ja
cmp
push
nop
fcompl
inc
ljmp
and
adc
mov
or
pushf
push
adc
fidivs
pop
lds
inc
rorb
aaa
or
adc
adc
int3
fidivrl
sub
stos
xchg
sbb
enter
sbb
testl
mov
fldt
ret
sub
xor
inc
sti
ret
push
icebp
jae
xor
pop
adc
pop
jl
cmp
bound
ljmp
dec
mov
push
inc
sub
ja
ror
add
cltd
jge
cmpsl
mov
test
lods
frstor
in
pop
pop
call
movsb
cmp
inc
mov
in
lret
dec
jnp
cmp
add
test
xchg
aas
mov
xor
es
and
mov
adc
hlt
xor
add
aad
or
dec
or
push
mov
add
jnp
xor
jmp
jmp
xchg
adc
push
loopne
ss
inc
push
add
jge
dec
add
mov
js
push
sbb
pop
mov
mov
loop
or
loopne
idivl
inc
adc
subl
xor
out
mov
cmpsl
in
imul
xchg
and
xor
push
rcr
jb
les
xchg
inc
mov
sbb
int3
ds
or
mov
pop
pusha
mov
sub
and
xchg
shll
dec
movsl
pushf
roll
cwtl
push
mov
pop
sub
xor
push
pop
in
daa
cmp
add
jo
cmp
lea
js
xchg
test
leave
jnp
cli
xchg
inc
and
pop
cltd
and
jae
mov
xchg
movsb
ss
lahf
pop
lock
mov
cmp
mov
mov
nop
cmp
pop
xor
mov
mov
push
scas
xchg
inc
negb
adc
sub
adc
sbb
xchg
out
dec
mov
orb
adcl
rolb
orb
dec
fistpl
or
push
je
add
lods
mov
into
dec
lods
lret
das
inc
and
aas
cwtl
mov
pop
cwtl
pop
test
pusha
xchg
dec
sub
dec
sub
adc
imul
cmp
jmp
fwait
mov
pop
or
xchg
lock
cli
sbb
mov
lcall
cmp
sbbl
mov
cmc
in
xchg
push
xchg
or
sub
mov
sbb
leave
stos
xchg
cld
fnstenv
add
insl
add
mov
adc
sub
mov
fdivrs
subl
xor
dec
cmpsb
sub
mov
stos
add
lret
dec
inc
ret
fnstenv
and
push
shl
stc
mov
test
out
jb
xchg
pop
sbb
sbb
sub
mov
movsb
mov
dec
mov
sbb
xor
andl
lahf
stc
in
xchg
inc
in
push
sub
outsb
cli
sub
call
rclb
mov
mov
push
mov
call
mov
and
adc
sub
out
test
out
lock
mov
in
repz
jg
leave
in
popf
sub
stos
and
push
jle
adc
mov
jge
mov
and
inc
enter
bound
cmpsb
push
pop
sarb
loope
jle
mov
out
cmp
popf
cmpsl
in
add
xor
sub
adc
popa
jmp
mov
leave
and
bswap
shlb
mov
int3
mov
add
mov
sub
stos
stc
and
popf
loopne
inc
ficoml
es
mov
ja
int3
sub
jecxz
mov
xor
test
xchg
adc
scas
xor
es
arpl
fistl
push
xchg
aas
imul
dec
jp
xlat
add
and
pop
sbbb
push
push
mov
adc
inc
pusha
rcrl
jge
jae
inc
jp
pop
ret
mov
call
inc
jg
pusha
pushf
in
sbb
or
fiadds
jb
pusha
sbb
rcrb
mov
or
push
mov
movsb
dec
popf
stos
xor
stos
and
mov
sub
dec
sbb
stos
mov
popa
push
inc
cmp
sbb
icebp
insb
aad
fimuls
movl
jmp
xchg
or
cmp
xor
xchg
fsubr
je
nop
add
enter
or
scas
sub
add
inc
and
and
cmp
dec
pop
inc
and
int3
sbb
inc
fdivp
nop
and
ja
jns
adc
popf
xchg
imul
int
inc
je
shrl
adc
aas
into
repnz
push
xchg
xor
in
cmp
out
adc
rolb
inc
stos
xor
pop
push
xor
inc
pusha
orb
clc
sub
notl
hlt
xor
inc
pop
cmc
fsubrl
xor
sbb
adc
add
push
test
imulb
inc
mov
sbbl
sub
hlt
mov
mov
fisubl
call
cmp
fdiv
push
mov
fiaddl
into
arpl
sub
mov
sbb
inc
jmp
addr16
fistpl
pop
lahf
out
mov
inc
xorb
xchg
cmpsl
jno
sub
aaa
xchg
ja
adcl
cmp
hlt
sbb
insb
call
inc
xor
mov
cmpsl
xor
or
rcrb
fcompl
mov
addr16
pop
xor
jge
xchg
shrl
xchg
sbb
add
pusha
pop
sahf
jne
xchg
inc
movsb
push
pop
arpl
xor
pop
in
sub
arpl
out
mov
xchg
fdivs
and
fimuls
lea
insl
cmpsb
es
in
mov
jl
jg
test
xchg
pop
leave
call
adc
inc
xor
mov
push
test
pop
jno
sahf
mov
add
xchg
decl
mov
in
cmpsb
xchg
arpl
add
jge
lea
nop
push
rorb
loop
loop
xor
cmpsl
dec
int
dec
test
sbb
mov
push
insl
mov
inc
jno
xor
add
cmp
pop
and
cwtl
dec
inc
fucomi
sub
pop
or
xor
inc
and
stc
add
add
mov
mov
mov
push
or
adc
xchg
pop
push
add
mov
lds
ljmp
xorb
mov
adc
data16
sbb
ljmp
push
add
inc
inc
sub
or
call
push
addr16
jle
pop
cwtl
xor
xchg
pop
mov
pop
xor
mov
pop
and
sbb
dec
fstps
test
icebp
repz
jno
jp
hlt
cmp
mov
push
adc
adc
mov
rclb
lea
arpl
mov
pusha
bound
lea
in
xchg
dec
lods
pop
les
cmpsb
xchg
xor
mov
popf
sub
mulb
imul
fs
enter
std
leave
mov
imul
or
cs
lret
lcall
les
push
mov
ret
lret
push
xlat
shrl
pop
or
dec
es
leave
cs
mov
arpl
mov
scas
and
aaa
aad
pop
leave
fisubl
scas
xchg
pop
jnp
cs
inc
outsl
adc
or
gs
push
fdivrl
sub
sbb
sarl
dec
fwait
mov
dec
out
add
mov
bound
dec
push
mov
add
pushw
pop
imul
xchg
int3
or
inc
je
sbb
sbb
mov
insb
dec
adc
or
xchg
inc
mov
addr16
xchg
push
in
lahf
movsl
sub
push
mov
mov
sbb
push
sub
inc
push
lods
rorb
rcrb
cwtl
ss
lock
cmp
sbb
cmp
mov
lret
xor
clc
push
adc
addr16
add
sbbb
add
xchg
xor
test
cmpl
xchg
mov
cmpsl
mov
pop
pop
pop
cmp
pop
adc
inc
add
jle
dec
enter
mov
test
xor
ret
adc
adc
bound
mov
inc
lret
inc
fimull
mov
int3
mov
xlat
xchg
lock
add
test
xchg
adc
pop
and
ds
call
mov
pop
dec
popa
pop
or
ljmp
mov
ret
in
hlt
jo
loope
cmp
sub
mov
xchg
jp
addr16
outsl
inc
push
rorb
ljmp
pop
arpl
mov
imulb
call
jmp
mov
sub
or
push
js
inc
lahf
or
dec
or
inc
lret
inc
push
and
jbe
or
divb
inc
int3
inc
push
clc
sbb
pop
rcl
in
popf
sub
shll
sbb
add
dec
and
dec
stos
loope
jnp
mov
lea
je
fbstp
cmc
jno
mov
cld
imul
add
cmp
and
icebp
ds
arpl
push
out
jg
sub
mov
mov
push
xchg
lods
loopne
dec
xchg
sbb
sarl
ja
xor
ljmp
mov
push
sub
enter
sub
ja
call
inc
out
xor
xor
xchg
ss
mov
push
test
ja
outsb
inc
inc
imul
dec
inc
inc
xchg
or
pusha
push
or
inc
shl
mov
adc
and
nop
jmp
jge
pop
popa
xor
push
jo
outsl
mov
mov
mov
xchg
lock
mov
push
inc
sbb
scas
ljmp
imul
ftst
mov
xor
mov
cmp
int
inc
and
icebp
dec
lods
and
mov
pop
sbb
insb
dec
insl
dec
mov
aas
outsl
inc
sti
add
rcr
fiadds
cmp
rcl
loopne
fs
inc
popf
add
or
scas
sub
adc
jecxz
sub
fists
push
and
sbb
mov
xor
je
sub
hlt
mov
out
popf
int3
mov
adc
inc
rolb
lock
in
or
pop
clc
push
push
rcl
mov
mov
sub
xchg
imul
lahf
dec
xor
pushf
or
lods
or
fildl
push
nop
std
cmp
add
jne
cs
xchg
pop
inc
mov
xchg
push
int
cmp
aam
mov
xor
sub
sub
mov
push
add
adc
data16
aaa
lods
loopne
ds
popf
nop
mov
xor
lods
jno
mov
shr
xor
insl
push
rcrb
lret
pop
jge
jb
and
pop
adc
add
scas
js
ljmp
movsb
jns
rcrb
mov
cs
imul
lahf
je
sub
mov
je
and
or
mov
pop
add
fs
sub
and
xor
daa
sbb
fs
mov
test
inc
or
enter
add
repnz
inc
int3
push
and
mov
xchg
rclb
dec
subl
adc
enter
std
hlt
xor
addb
je
arpl
pop
adc
dec
add
nop
rclb
jmp
in
nop
hlt
in
popf
lods
sbb
aad
fistpll
hlt
hlt
subl
out
and
mov
fwait
or
ds
into
lock
cmp
mov
dec
fistl
jne
cmpb
xchg
sub
lds
out
sub
lods
mov
mov
out
popf
sub
pop
mov
pop
jecxz
inc
pop
mov
jmp
add
scas
ds
mulb
inc
mov
adc
xor
fwait
lret
lods
lret
mov
test
xor
test
imul
inc
mov
sbb
lcall
mov
jbe
and
les
mov
std
ret
jne
and
pop
repnz
movsl
mov
xchg
push
inc
roll
push
sub
xor
jg
orb
test
test
test
icebp
aaa
cld
fistpl
pop
mov
filds
leave
mov
test
mov
mov
ja
in
lds
ds
jnp
sub
dec
bound
pop
inc
imul
cmpsl
jbe
les
mov
cmpsl
pop
xor
xchg
adc
jmp
in
andl
fcomps
sti
inc
or
pop
inc
mov
stc
cmp
jmp
add
add
gs
sbb
sub
jmp
jae
inc
sub
mov
mov
xchg
add
xor
bound
lea
inc
fs
fnstenv
out
mov
or
xchg
gs
loope
xor
popa
test
bound
adcb
sub
push
das
jmp
lods
in
xchg
dec
add
dec
push
pop
mov
stos
hlt
or
mov
dec
lds
mov
ja
repnz
jae
xchg
loope
cmp
inc
dec
pop
cmp
outsl
jo
sbbl
fnsave
cltd
inc
cmp
shll
pop
cmpsb
push
sti
sbb
pop
inc
lds
jno
into
test
gs
and
or
out
jns
xor
pusha
sub
sub
popf
mov
push
xor
xchg
mov
xor
repz
leave
fdivs
push
adc
inc
pop
pop
movsb
lcall
add
hlt
dec
and
pop
push
xchg
notb
lds
fwait
notl
cs
dec
mov
xchg
ja
daa
mov
arpl
je
sbb
push
bound
sarl
cli
sbb
adc
jo
lcall
or
fs
nop
outsb
xor
push
or
adc
out
push
sub
adc
mov
test
or
rcl
shrl
bound
scas
sbb
xor
xchg
push
ret
pop
xor
dec
sbb
lods
and
gs
idiv
aaa
pop
pop
dec
mov
sbb
in
rcll
cld
jo
jno
sbb
pop
call
adc
adc
pop
loop
rcrl
cmp
fdivrs
add
jmp
jg
inc
push
pop
loopne
ja
lcall
shlb
sbb
rcrb
xchg
lods
dec
jge
mov
filds
xchg
mov
clc
adc
les
shrb
sub
arpl
das
rcrl
add
cmpsl
leave
and
imul
jbe
xchg
jae
ds
dec
cmp
mov
jbe
movsw
rol
bts
dec
imul
fcmovu
test
stos
pushf
addl
jnp
out
out
mov
adc
or
inc
cmp
jb
jl
outsb
cli
cmp
dec
in
mov
push
or
popa
lcall
xor
sbb
out
jge
loope
push
pop
test
loopne
xor
mov
roll
jmp
ret
test
enter
rorl
test
xchg
adc
je
dec
push
mov
xchg
ret
pop
or
orb
xor
mov
jb
inc
or
pop
push
sahf
push
decb
jecxz
rorl
out
or
rorl
xor
cs
or
mov
test
clc
movl
repz
stc
ret
sub
add
xor
aad
lea
popa
xor
dec
cs
insl
lea
int3
or
push
xor
cld
call
outsl
cmpsl
ljmp
push
lcall
iret
xor
fistps
or
cmp
les
xor
movsl
lea
dec
pop
push
mov
pop
pop
repz
pop
xchg
pusha
and
or
or
jbe
mov
lret
cltd
jne
sbb
cwtl
sbb
xor
stc
movb
xchg
enter
roll
lret
push
mov
and
jb
or
lret
inc
add
jp
xor
sub
shl
xor
pop
sbb
and
and
dec
or
push
jo
adc
inc
push
adc
fwait
xchg
clc
or
push
test
arpl
insl
pop
inc
push
add
xor
stc
xchg
or
cld
loopne
adc
loope
loopne
sub
sbb
and
xchg
add
adc
dec
in
push
push
movsb
enter
mov
repz
stos
fcomps
daa
push
xchg
xor
test
pop
pop
push
iret
scas
xchg
scas
std
mov
sbb
jns
xchg
outsb
push
ljmp
test
jo
pop
fs
mov
xchg
mov
mov
xor
leave
and
fucomip
jg
jns
sbb
sbb
dec
mov
xor
out
cmc
jl
incl
add
rep
lret
movsb
push
mov
mov
sub
jno
into
xor
in
arpl
repz
icebp
push
stc
test
cmpsl
adc
int
mov
push
fcom
and
and
mov
pop
lds
xchg
shld
out
push
mov
adc
sub
test
pop
or
shlb
cli
cmp
enter
jns
jns
push
arpl
sub
arpl
in
fildll
cmp
insb
cmp
cmp
or
leave
and
and
and
mov
push
sbb
outsb
shl
cli
nop
mov
rcrl
xor
sete
sbb
icebp
lcall
fbld
add
ret
fcmovnb
out
mul
stos
test
add
add
in
jge
lahf
ret
movsl
adc
and
pop
rorl
lret
adc
xor
loop
pop
shll
test
and
lcall
and
mov
xchg
xchg
call
jge
sbb
adc
push
or
push
jge
icebp
ljmp
or
aas
leave
in
dec
jns
push
pop
lret
insb
dec
cwtl
jmp
pushf
push
jo
mov
gs
pop
inc
popf
sbb
or
pop
pop
loop
or
mov
jl
rcrb
clc
hlt
adc
mov
out
mov
mov
adc
gs
push
pop
pop
arpl
push
jne
lods
js
fld1
cmp
mov
in
scas
ljmp
and
push
hlt
test
pop
loopne
pop
add
leave
stos
add
jmp
pop
cmp
cmp
scas
imull
push
mov
test
push
outsb
push
adc
push
cs
pop
jne
int3
mov
mov
xor
hlt
adc
push
xchg
jle
lret
cld
add
xchg
jle
test
mov
not
dec
int
mov
fisubrl
enter
int3
mov
loop
enter
and
ljmp
push
mov
sbb
out
push
inc
and
pop
or
pusha
push
rolb
sarb
dec
add
addl
and
popl
das
fldl
sub
mov
sbb
out
pop
inc
sub
scas
test
lods
push
adc
jecxz
sarb
mov
in
and
mov
mov
imul
jg
push
mov
push
pushf
lahf
xchg
dec
push
mov
add
jnp
lcall
mov
mov
pop
pop
lock
es
sub
and
std
das
xor
mov
fcomps
pop
stos
cld
inc
push
adc
push
nop
mov
adc
sub
cmpsl
mov
add
push
xchg
addb
das
test
jb
sti
insb
add
xchg
je
add
scas
cmp
gs
loop
push
cltd
and
xor
lret
mov
fnstenv
pusha
xor
add
fs
ror
xchg
mov
xor
jp
xor
xchg
pop
shlb
ljmp
push
mov
mov
test
and
pop
adc
pop
jne
cltd
test
jp
add
pop
mov
push
out
add
aad
add
xor
mov
jmp
adc
sub
or
inc
cmp
add
cmpsl
stos
call
adc
test
test
aas
fwait
pop
out
pop
scas
icebp
and
rcrl
popa
faddl
cmc
adc
mov
test
pop
cld
lds
jle
cwtl
jg
pop
paddsw
aam
test
pop
sbb
mov
and
mov
ja
cmp
out
and
or
bound
and
arpl
call
push
inc
nop
push
out
pop
jo
in
sub
leave
inc
sub
int
gs
pop
push
rcrl
sub
stos
or
adc
mov
lcall
cmp
mov
xor
mov
in
cwtl
mov
je
and
sub
jmp
rclb
pop
stos
mov
mov
lret
sbb
or
cmpsb
cmp
mov
mov
push
ljmp
insb
imul
or
hlt
push
rorl
xorl
adc
popa
dec
add
and
dec
sbb
arpl
dec
push
pop
fs
pop
fs
aam
push
ljmp
mov
cwtl
loope,pt
pop
sub
jg
push
xor
or
lock
pop
push
clc
dec
mov
add
aad
outsb
xchg
int3
and
xor
pushl
popf
jp
xor
lret
or
aam
aas
xor
adc
push
inc
add
push
push
sti
das
mov
lahf
cmp
and
jbe
ss
inc
sbb
push
jbe
xchg
clc
mov
clc
cld
jle
out
push
jp
cmp
sbb
pushf
pop
lds
mov
rorl
loop
cli
movsb
mov
xchg
cmp
mov
mov
lds
or
stc
pop
fwait
addb
jl
push
adc
stos
and
mov
test
pop
jmp
xor
loope
mov
aam
add
ret
hlt
ret
mov
pop
sub
ljmp
sub
add
jne
push
xor
insb
pop
sbb
cwtl
inc
jl
dec
pusha
mov
cmp
pop
push
sbbb
jle,pt
xor
mov
jmp
imulb
stos
das
stos
cmp
ja
js
dec
dec
dec
jo
sbb
les
in
bound
mov
cli
stos
jge
or
in
mov
in
fldl
jno
mov
jecxz
xor
iret
xchg
popa
add
or
stos
cli
lret
loopne
mov
pop
movsl
pushf
push
ljmp
push
cmp
addr16
and
mov
stos
cmp
mov
mov
sbb
hlt
xor
dec
push
das
jno
xor
and
xor
popf
push
stc
lret
lcall
loopne
mov
pop
pop
sub
imul
loopne
jmp
sub
jge
xor
shl
add
repz
pop
popa
and
das
hlt
aas
mov
cmpsl
fsubrl
push
cmp
or
jmp
dec
shrl
xchg
pop
xor
mov
ljmp
pop
and
repz
mov
jg
mov
leave
in
xchg
adc
int3
lods
jmp
ret
adc
jb
and
cmpsb
lcall
in
push
adc
adc
push
inc
shlb
xor
lahf
xchg
aaa
jle
mov
out
push
jge
leave
xchg
pop
pop
jl
sub
sub
inc
sbb
mov
xchg
fdiv
rorb
mov
loopne
shl
jbe
pop
inc
pop
in
in
inc
loopne
sbb
push
sbb
cmp
je
pusha
in
or
mov
or
in
inc
sbb
xor
daa
or
mov
fwait
cmc
in
pop
daa
add
jo
xchg
loope
in
cli
shlb
not
add
mov
gs
push
shrl
aas
lea
insb
pop
and
xor
add
jg
inc
dec
sahf
xlat
xor
mov
sub
pop
je
nop
xor
cmpsb
stos
xlat
xor
cmpsl
scas
or
in
lret
push
dec
daa
scas
repnz
stc
das
clc
fdivrs
adc
lock
cs
dec
sbb
push
push
fimull
ss
mov
adc
adc
pushf
scas
rorb
cs
repnz
adc
sbb
repz
into
and
ljmp
and
mov
aas
sbb
out
jne
mov
lahf
call
dec
rorb
rol
xchg
insb
neg
pop
je
mov
or
out
jle
inc
mov
add
add
adc
shrb
sbb
mov
mov
push
xchg
jl
scas
cmp
mov
push
add
pop
jle
out
mov
mov
lea
test
testb
xchg
sbb
sub
mov
into
adc
xor
mov
push
and
jo
xor
mov
sub
out
test
mov
pop
int3
aad
cmp
sub
in
dec
pop
cwtl
inc
in
inc
sahf
das
or
pop
jbe
jg
les
mov
push
mov
mov
xchg
pop
ret
cmpsl
hlt
lret
lcall
icebp
imul
imul
fcoml
pop
fidivs
dec
lods
sbb
sbb
stc
stos
sbb
jle
into
hlt
int3
jno
cmp
mov
sub
mov
adc
fs
jp
dec
xchg
stc
mov
and
and
push
out
aaa
push
or
test
orb
je
add
xor
jle
inc
daa
int3
jne
int3
jne
mov
movsl
test
pop
subl
shr
or
hlt
call
sbb
flds
jecxz
cltd
loopne
inc
lds
out
jl
pop
mov
pop
ds
rorb
sub
xor
mov
nopw
subb
jnp
push
xor
in
cmp
push
mov
add
add
mov
sarb
xor
push
mov
xor
jno
dec
je
movb
ljmp
je
sbb
imul
xchg
shll
ja
jo
jo
mov
sub
cmp
jmp
jne
cmpsl
push
hlt
aaa
mov
fidivrs
nop
fidivrl
loop
outsb
add
lods
or
push
or
pop
adc
and
jg
xchg
and
add
aaa
pop
xchg
sbb
adc
ljmp
test
mov
cmp
mov
cld
pop
aaa
mov
gs
in
pushf
cwtl
mov
jne
loope
sbb
call
mov
ja
test
fwait
sbb
ret
pusha
fstpt
cmp
rclb
adc
scas
jo
xchg
cmp
sahf
idiv
or
lea
sbb
and
icebp
pop
mov
ds
lock
push
lods
mov
push
bnd
cmp
incb
jae
enter
mov
xchg
cmpsb
sarb
popf
lds
lock
sub
dec
pop
cs
loopne
jne
insl
add
add
inc
mov
je
pop
lret
fcomp
call
in
sbb
data16
mov
mov
add
clc
pop
inc
test
cwtl
xchg
pop
pop
and
aad
or
mov
daa
pop
fmull
pop
mov
inc
subl
mov
dec
mov
dec
mov
call
int3
loop
xor
scas
push
ljmp
push
mov
in
popa
outsl
inc
scas
out
mov
pop
insb
aam
cli
icebp
push
ffreep
or
pop
and
dec
aaa
stos
ljmp
popf
xor
loopne
in
es
cmp
divb
sahf
cmp
cmp
jnp
xor
mov
sarl
jecxz,pn
ja
jb
xor
movsl
sbb
movsl
push
icebp
sbb
push
lea
adc
and
mov
lret
filds
xlat
and
and
add
and
inc
ficompl
in
xor
ja
add
mov
popa
jecxz
and
scas
movsb
mov
pop
pop
ss
sbb
mov
mov
js
mov
sbb
test
pop
inc
filds
cmp
mov
xchg
scas
or
icebp
imul
dec
stc
dec
sbb
push
xchg
pop
test
jae
shlb
push
or
jbe
inc
lds
mov
jmp
ffree
pop
fistps
lods
out
jae
cld
sub
loopne
lcall
sti
inc
push
mov
adc
mov
movb
push
lds
push
push
lea
pop
lcall
xor
xchg
js
lret
push
mov
mov
sti
fistpl
dec
notb
cmpsb
test
outsl
push
jle
sarb
mov
insb
xor
adc
mov
xchg
adc
aaa
mov
inc
dec
movsl
adc
xlat
aad
sub
xchg
pushf
loop
insl
fdivr
and
mov
ss
mov
cld
roll
jno
sti
adc
shl
sti
pop
jg
sub
jno
push
out
lods
scas
mov
jo
fs
xchg
and
clc
es
or
mov
push
mov
ds
sub
pop
sti
pop
push
lea
jl
mov
mov
jecxz
dec
cmp
std
mov
xchg
push
pop
addr16
icebp
iret
push
jno
pop
mov
mov
jns
sbb
scas
ret
mov
sub
dec
mov
std
shrb
stos
stos
jl
dec
stos
pusha
push
repz
mov
shll
xchg
ljmp
sub
lods
lcall
sbb
cmp
cmc
lcall
cmpsb
xchg
and
dec
notb
sbb
adc
ret
out
sbb
push
xchg
cmp
nop
pop
pop
int3
sbb
or
xor
push
out
cwtl
xor
jnp
pop
add
inc
ret
testb
push
in
mov
mov
dec
vsqrtss
mov
mov
mov
pop
xchg
iret
in
mov
inc
xchg
bnd
hlt
mov
push
pop
xchg
pop
sbb
or
xchg
xchg
sbb
ret
nop
mov
xchg
or
jo
inc
jge
mov
inc
sti
jnp
enter
xor
stos
call
arpl
stc
lds
lcall
inc
div
or
cwtl
ja
xchg
push
xchg
cmp
mov
jnp
mov
pop
mov
or
dec
mov
addr16
jp
jge
xor
test
aas
sub
sti
lret
inc
mov
fdivr
les
mov
adc
xchg
je
add
insb
movsb
mov
xlat
hlt
mov
sbb
dec
mov
jbe
fmul
sub
or
jnp
or
arpl
fidivrs
mov
aas
mov
add
and
mov
cmc
adc
inc
mov
inc
imul
into
pop
push
add
imul
daa
cmp
rorl
test
xchg
jne
add
dec
sbb
lea
dec
and
adc
mov
mov
or
mov
shl
add
inc
jg
inc
cmp
mov
lea
outsb
dec
and
adc
imul
and
adc
push
aam
sbb
mov
pop
lea
or
shll
lock
rol
or
pushf
lea
sbb
rolb
or
les
loopne
mov
subb
cltd
sbb
add
inc
inc
cld
push
sbbb
jg
leave
outsl
add
sbb
call
adc
mov
push
xor
push
dec
and
adc
imul
and
inc
push
or
inc
aad
sbb
mov
lea
popa
rorb
call
mov
pop
mov
bound
mov
inc
pop
mov
mov
and
inc
fimull
outsb
les
in
inc
aam
mov
mov
lea
sbb
and
inc
adc
or
xchg
aaa
subb
pushf
sbb
cmp
aas
add
mov
daa
mov
push
gs
pop
mov
xchg
dec
inc
pop
stos
jecxz
lods
call
add
sub
jbe
je
add
push
scas
xchg
xor
cmp
rcrb
daa
xchg
test
shl
xchg
xlat
mov
stos
repz
arpl
stos
rcl
xchg
mov
ficomps
sub
and
test
inc
cs
sub
test
jp
testl
mov
popf
add
adc
inc
pop
hlt
jge
imul
out
mov
subl
mov
rolb
cmp
xor
aam
lret
xlat
rcrl
xor
scas
adc
icebp
mov
jb
adcb
xchg
xchg
push
fistl
cmpsl
adc
rclb
sarl
push
push
mov
mov
add
adc
cmp
mov
scas
int
and
push
in
pop
lds
hlt
lds
stc
adc
clc
das
or
or
in
jne
push
ds
and
gs
jmp
imul
scas
out
jbe
sbb
ret
mov
pop
lret
test
xchg
inc
mov
imul
inc
arpl
cmc
aam
mov
add
cmp
mov
lret
pop
mov
cmp
scas
pop
dec
jae
cli
sub
lea
ljmp
int
in
aas
or
sub
movb
lcall
adc
xchg
nop
sarb
aas
test
push
mov
shrb
sub
sbb
pop
add
sub
push
mov
mov
or
pop
pusha
or
mov
and
fnstenv
dec
push
mov
mov
sahf
pop
push
rcrl
cmp
std
push
out
dec
idivl
add
add
fwait
mov
cli
sub
jbe
mov
mov
jnp
inc
mov
cmp
lds
mov
divb
cmp
iret
sub
sbb
sub
lods
cmp
push
shrl
fwait
mov
arpl
lds
aad
push
shll
xchg
or
ja
sti
imul
out
inc
adc
xchg
unpcklps
jbe
mov
mov
fildll
cwtl
dec
lahf
das
adc
std
insl
adc
outsl
sub
adc
cwtl
add
repz
movsb
jns
les
fsubl
jbe
in
outsb
pop
sub
adc
inc
into
sbbl
std
stc
jne
out
or
inc
or
rorl
iret
sarb
jbe
pop
mov
push
sub
les
mov
lds
dec
mov
repnz
xchg
out
or
cmp
fsubrl
movb
jge
mov
lods
test
das
mov
sub
das
stc
push
or
aad
mov
scas
lock
mov
adc
xchg
cmpsl
push
dec
fs
sub
or
push
and
ja
jnp
pusha
in
dec
push
comiss
jbe
add
xor
inc
fldenv
es
rorl
add
mov
ret
push
xor
aad
pop
in
xchg
mov
out
push
inc
rorl
xchg
and
and
push
loop
sbb
xchg
pop
jp
sub
loope
jl
int3
xor
cmp
dec
loope
dec
pop
js
adc
jno
add
mov
or
push
push
cwtl
sbb
add
push
xorb
loopne
shl
insl
in
fimuls
mov
shl
dec
test
add
add
addb
add
add
add
add
add
add
test
and
add
pusha
add
out
movsb
mov
push
bound
je
repz
or
ret
mov
push
dec
frstor
pop
orb
aaa
cltd
shrb
sbb
inc
add
or
loop
out
std
leave
mov
push
mov
jge
mov
dec
lret
inc
xchg
notl
sbb
pop
jnp
adc
pop
mov
cmpsl
pop
pop
mov
fmull
dec
cmp
arpl
popf
add
mov
inc
fisttpl
cli
int
jns
sub
xchg
fistl
leave
push
ss
stc
jae
inc
stos
ja
out
repz
out
dec
fdivr
cmc
sbb
rcl
aam
loopne
test
mov
fnstenv
pop
das
mov
fincstp
enter
insb
mov
or
leave
pop
subl
ss
roll
sbb
xchg
pop
sbbl
das
and
cmc
xchg
push
pop
mov
sub
data16
mov
ja
mov
out
pop
jmp
fdivp
jns
cmp
cmc
ljmp
push
mov
adc
xchg
dec
imul
xor
cli
loope
dec
cmp
out
bound
and
jnp
jp
fcomip
cmp
ret
jbe
lea
roll
insb
fistpl
mov
xchg
cwtl
movsl
cmp
cmp
pop
dec
inc
mov
aam
jle
pop
xor
stc
imul
and
push
sbb
ret
or
imulb
fcmovne
jb
sbb
cli
out
push
lods
fs
rcll
cmpsl
test
in
repnz
jp
pusha
subl
stos
pusha
test
xlat
jg
cld
pop
fcomp
lea
aad
lea
repz
xor
aam
mov
cmpsl
jnp
lahf
cmp
dec
gs
dec
pop
sub
lcall
aas
jnp
mov
hlt
dec
sbb
mov
notl
jmp
cmovge
mov
mov
jbe
mov
scas
sbbl
stos
push
xchg
testl
add
adc
addr16
push
mov
dec
jns
js
int
dec
mov
out
call
mov
imul
jmp
addr16
cs
or
popf
jne
insl
jge
pusha
nop
ror
fstpl
js
lcall
dec
aaa
mov
ljmp
adc
outsb
mov
out
push
pop
pop
mov
or
pop
push
aaa
insb
repz
out
dec
fsubp
xchg
xchg
adc
mov
mov
idivb
outsb
mov
loope
jmp
mov
in
lcall
or
jbe
sar
outsl
mov
cli
dec
lock
aad
mov
jg
mov
and
arpl
test
addl
push
cmp
cmp
jl
jbe
jns
movsl
js
shr
fistpl
dec
in
dec
gs
outsb
in
addr16
and
out
xchg
mov
stos
shrl
into
sbb
insb
movb
mov
int
pop
repnz
lret
mov
pushf
loope
mov
mov
jl
testl
pop
push
leave
mov
and
pop
stos
sub
cli
pushl
mov
out
enter
pop
sub
in
mov
popa
pop
mov
or
pushf
test
mov
setle
lods
push
jo
jp
push
mov
jno
lea
inc
fistpl
dec
xchg
out
jbe
ljmp
in
filds
cs
cli
das
loop
sbb
insb
cld
icebp
pcmpeqd
mov
sbb
mov
divb
repnz
neg
arpl
int
mov
push
loopne
scas
data16
adc
scas
sarl
data16
das
sbb
mov
pop
mov
ja
loopne
stos
pop
into
push
out
lods
leave
mov
pop
mov
rol
fstpl
fstp
out
cmp
in
sti
inc
mov
out
test
ficomps
js
iret
jp
aas
std
push
fnstcw
ret
lds
mov
dec
popf
cmp
dec
subl
jecxz
push
push
ss
aaa
push
jp
mov
adc
insb
mov
adc
stos
jb
mov
stos
jl
xchg
in
test
xor
fbstp
push
clc
mov
mov
jbe
dec
test
xchg
dec
lret
dec
mov
je
mov
or
mov
adc
mov
daa
and
add
dec
push
lds
inc
outsb
shll
orb
push
shl
jp
xor
xchg
push
pop
cmp
push
push
xor
add
out
bound
inc
pop
scas
js
je
push
sbb
arpl
into
add
popa
add
lock
sub
push
out
sub
lds
iret
mov
jle
addl
sub
pop
repz
push
mov
aaa
lods
dec
flds
add
dec
cmp
mov
lret
sbb
sub
adc
cmp
add
cmp
frstor
stc
sub
dec
xchg
sub
lods
push
imul
cli
insb
xchg
popf
pop
jne
mov
push
js
or
xchg
xorb
aam
rorl
xchg
repz
xor
push
mov
jne
add
xor
add
test
aad
adc
fiadds
es
inc
adc
pusha
mov
jo
add
lret
push
or
mov
loop
sub
sub
divl
adc
mov
xchg
cwtl
stos
sub
pop
lods
int
popa
pop
mov
js
cmp
call
loop
test
dec
xchg
sbb
inc
test
fnstcw
mov
insl
and
es
pop
adc
data16
mov
mov
push
xchg
inc
xchg
mov
movsb
push
xchg
sub
dec
movsl
sub
outsb
into
dec
mov
jns
push
out
into
sub
divb
mov
xchg
jns
mov
fwait
popa
sbb
pop
mov
popa
lret
dec
sbb
fnstenv
xlat
fwait
pop
mov
sub
xchg
jle
loope
adc
int3
jb
pop
inc
sub
push
call
cmp
in
pop
outsb
imul
xlat
rcr
mov
pop
mov
jno
incb
dec
xchg
test
push
movsb
pop
dec
adc
xor
push
xchg
fcomps
mov
or
loop
cs
sub
fstl
or
push
inc
and
mov
stc
jle
and
mov
mov
cmp
jo
adc
hlt
pusha
repz
hlt
test
push
dec
dec
xchg
test
nop
mov
lds
cmc
mov
adcl
gs
movsl
mov
cmp
pop
sub
push
ret
dec
insb
pop
loopne
fwait
mov
mov
ljmp
cld
das
xor
sub
and
into
mov
popf
sbb
mov
xchg
lea
push
and
aas
sbb
and
rorl
nop
fcoml
ret
out
lret
or
dec
adcl
loop
ret
xchg
mov
leave
xchg
lock
xchg
xchg
sub
xchg
push
xor
mov
js
loop
add
adc
lcall
imul
cmp
xchg
pop
push
iret
nop
or
inc
pusha
mov
inc
outsl
gs
mov
rclb
xor
mov
jmp
jl
sub
cs
ja
cmpsb
loope
rorb
push
xchg
inc
ret
or
out
mov
cltd
frstor
push
xchg
sbb
lods
sub
rolb
dec
gs
mov
mov
cwtl
pop
dec
dec
cwtl
dec
push
push
dec
cmp
mov
or
sbb
adc
inc
sub
shlb
mov
mov
ss
cmc
sbb
cltd
bound
mov
aam
mov
xor
mov
push
or
cmp
jb
xchg
mov
mov
dec
or
add
jo
imul
sub
sbb
imul
push
mov
jl
in
add
push
push
popa
mov
mov
cmp
adcb
push
inc
cs
push
imul
cmp
shrl
rcll
mov
cltd
xor
mov
fwait
ret
test
imul
xchg
mov
xchg
jnp
and
adc
sub
movsl
addb
adc
adc
or
push
pop
nop
fs
sbb
gs
pop
imul
lods
dec
cmp
mov
bound
push
mov
add
fimuls
pushf
in
xchg
push
xor
inc
orb
and
mov
inc
fldt
sbb
push
lods
or
inc
jb
stos
andl
lods
pop
and
pop
outsl
add
pop
add
sub
inc
orl
add
add
xchg
jb
leave
into
xlat
inc
cmp
into
xchg
adc
or
shrl
gs
enter
cmp
and
xchg
jl
add
dec
cltd
push
push
gs
test
popa
sarb
mov
and
sub
pop
or
cmp
adc
mov
add
aam
sti
aad
jbe
adc
and
or
insb
pop
movsb
push
imul
xor
sub
mov
dec
adc
jo
inc
add
xor
nop
mov
adc
daa
mov
pop
xchg
shlb
sub
adc
add
das
adc
xchg
or
or
add
aam
mov
pop
outsb
push
lcall
pop
jne
cmp
mov
shll
xchg
fstpt
addb
loopne
push
sbb
repz
inc
sti
ss
outsb
cmpb
or
cltd
in
add
jo
mov
mov
adc
fwait
add
add
insb
xchg
sbb
rorb
sbb
adc
lea
xor
subl
mov
adc
push
xor
dec
push
pop
push
xor
mov
outsb
outsb
push
js
enter
inc
sarb
je
mov
test
rcll
dec
and
xor
cwtl
add
pop
pushf
add
stos
mov
add
mov
push
lods
and
add
jmp
push
mov
dec
sbb
xchg
ret
push
inc
gs
push
lds
or
mov
dec
or
cmpsb
and
or
push
adc
enter
xchg
jbe
in
or
xchg
dec
inc
mov
rcll
mov
daa
scas
loop
scas
push
rclb
adc
add
sahf
cmpsl
cwtl
lea
mov
add
dec
lods
cmp
push
mov
wrmsr
cs
imul
dec
xor
lcall
arpl
add
pusha
jns
rorb
mov
popa
cs
loopne
call
pop
ficoml
mov
test
ret
push
pop
jle
fdivl
gs
aad
test
xchg
jbe
les
xchg
push
test
sub
lds
in
xchg
stos
mov
cmp
outsb
mov
loopne
fldl
mov
ret
mov
repnz
lds
arpl
jecxz
icebp
dec
jno
es
xor
sub
lcall
cwtl
jo
test
xor
loope
cli
push
lds
repz
movsb
pop
nop
xor
and
fbstp
sahf
test
sub
add
nop
es
into
bound
mov
mov
and
lods
dec
shlb
xchg
je
mov
xor
xor
lret
dec
lods
test
inc
das
push
int3
imul
jl
ds
or
cmp
gs
push
push
je
sub
sbbb
subb
mov
or
adc
pop
jo
and
fwait
push
movsl
jecxz
pop
sbb
dec
pop
push
push
loopne
jg
out
movb
cmp
scas
call
mov
ss
sub
pop
mov
lret
ret
cmp
scas
adc
push
mov
xor
rcrb
aam
jb
push
jle
in
mov
mulb
loopne
or
ret
xchg
add
cmp
ret
jge
adc
mov
jmp
dec
xchg
shll
mov
and
mov
inc
or
dec
cli
add
dec
push
in
sbb
or
mov
xor
pop
adc
dec
imul
test
push
insl
mov
cmc
les
rorb
mov
xlat
hlt
mov
test
adc
stos
das
mov
stc
cmpsb
rorl
sub
xor
inc
sbb
add
test
sub
adc
xor
shll
loopne
mov
adc
ret
popa
cmpsb
dec
add
or
sub
mov
arpl
inc
fists
bound
push
or
imul
jae
lret
dec
inc
inc
fnstcw
insb
loopne
addl
enter
add
mov
orb
mov
bound
inc
pusha
lea
mov
push
mov
arpl
out
xor
les
stos
push
test
mov
movsb
cmpsb
ficompl
out
and
sbb
and
adc
push
mov
test
out
shlb
stos
xchg
inc
sbb
cmpsl
add
dec
and
inc
imul
inc
shlb
lcall
add
sbb
inc
aaa
or
mov
pop
push
aam
cs
or
inc
lret
push
inc
and
enter
sub
mov
gs
xor
popa
push
xchg
sbb
sbb
push
cwtl
adc
mov
inc
cwtl
add
xorb
pop
push
popa
cmpsb
cwtl
inc
push
sarl
inc
cmp
lea
mov
pop
push
test
adc
mov
sbb
mov
sahf
mov
test
leave
adc
mov
push
nop
and
lods
adc
xor
faddl
jno
sbb
pushf
push
and
jno
and
or
pop
inc
or
sub
add
aaa
stc
or
cmp
popa
test
gs
add
testb
in
jae
jb
or
xchg
lret
rcrb
in
xchg
mov
imul
xchg
or
les
sbb
mov
mov
jb
pusha
imul
dec
add
jecxz
ret
push
mov
int3
movsl
xchg
sbb
mov
add
mov
mov
mov
sbb
lea
mov
mov
mov
int3
mov
ja
cli
fstpt
xor
mov
cmp
out
movsl
and
cmp
out
adc
lret
add
adc
clc
popf
dec
and
cmp
mov
gs
cmpsl
add
out
xchg
add
inc
and
inc
xor
jnp
or
mov
stos
inc
sbb
ficoml
dec
es
popa
or
adc
pusha
or
ljmp
xor
xchg
movsb
and
mov
rcll
cmp
fs
pop
mov
lock
and
xor
inc
dec
mov
and
ds
jb
sarb
sub
repz
add
mov
mov
and
sub
mov
mov
test
xchg
nop
or
nop
enter
push
inc
xorb
lods
and
push
imul
or
adc
xorb
inc
xor
mov
inc
adc
inc
push
dec
adc
cmp
pop
adc
nop
popf
inc
lret
sub
add
push
pusha
add
mov
sub
inc
pop
fldenv
jno
pop
jns
adc
shl
or
loope
test
jbe
or
pop
xorb
jae
ret
inc
inc
pop
inc
lds
dec
xchg
and
xor
push
and
mov
and
mov
test
sub
mov
xor
call
jb
out
pop
mov
roll
dec
je
mov
cwtl
cltd
movb
fnstcw
and
add
lds
push
cmp
jl
out
stos
inc
jge
xchg
gs
mov
add
test
orb
out
pop
dec
push
inc
and
pusha
and
aas
movsl
xchg
pusha
pop
and
cli
sbb
add
cli
pop
sub
les
loopne
pop
add
or
lock
addb
movnti
mov
push
pcmpgtw
arpl
cs
or
adc
fs
mov
fwait
lea
js
ds
push
xchg
lret
sbb
mov
aas
daa
int3
and
fldenv
rcll
and
push
xchg
sbb
dec
sub
pop
cli
push
lds
repnz
inc
add
fsubs
cmpsb
add
and
push
sub
push
or
mov
nop
sbb
add
sbb
pop
mov
or
mov
dec
sbb
nop
orl
cmp
push
sbb
call
or
test
mov
or
in
ss
push
sbbb
jbe
adcl
aaa
add
lods
inc
jne
push
ret
mov
mov
call
jecxz
mov
inc
clc
jmp
add
add
add
inc
add
add
add
dec
xchg
and
inc
or
inc
inc
cmp
xchg
mov
adc
sbb
shrb
out
xor
mov
arpl
and
sbb
incb
rolb
sub
xchg
add
lds
adc
or
rolb
in
les
dec
into
jno
test
aas
push
sub
xchg
sub
adc
pop
rcrb
inc
xchg
and
add
sbb
dec
push
data16
cltd
testl
jmp
je
xor
inc
or
or
add
mov
pop
es
stos
xchg
les
sbb
jmp
sbb
mov
aam
mov
ficoml
add
ds
mov
cmp
shl
inc
xor
inc
nop
pop
add
bound
xchg
or
inc
xor
shlb
rcrb
ss
sub
cmp
cmpsl
imul
dec
stos
test
or
lea
pusha
test
inc
insb
sti
push
movsb
add
sub
xor
rolb
adc
or
loop
jno
inc
xchg
xor
inc
jmp
xor
or
push
xor
setge
insb
mov
push
sbb
sub
or
add
loopne
loop
cmpsb
ja
js
and
push
lds
mov
push
repnz
pop
add
mov
dec
ljmp
xor
xchg
sbb
test
loop
movsb
hlt
dec
pusha
fs
inc
and
add
xchg
mov
sbb
enter
loope
pop
subb
xchg
mov
or
mov
add
test
adc
int
add
lock
pop
sbb
jo
add
popl
es
xchg
adc
or
pop
add
inc
cltd
pop
push
loop
movsb
test
xor
fstpt
add
push
stos
xchg
cmpsl
push
or
enter
push
or
insl
ficoml
test
fisttpll
jno
mov
addr16
outsb
cltd
pop
rolb
mov
inc
pop
call
mov
dec
lea
shrb
fstl
cs
repz
ljmp
ss
jle
pop
mov
inc
jae
mov
add
fwait
add
addl
inc
cmp
xor
dec
cmp
loop
mov
ds
hlt
cmc
std
pop
out
jmp
dec
mov
add
sti
push
mov
sub
mov
mov
jno
xchg
stos
inc
sarb
cld
int
add
iret
mov
mov
and
test
add
scas
int
movsl
mov
pop
pop
into
push
mov
in
jbe
push
sub
imul
sub
imul
pop
cli
mov
sbb
xchg
adc
hlt
sahf
shrb
pop
incb
sub
test
jle
add
jle
lret
jmp
dec
repz
jbe
jb
aam
jns
adc
jne
mov
dec
mov
repnz
and
jge
or
jo
cli
dec
push
shl
imulb
pop
mov
sub
ljmp
insl
or
aad
mov
aas
into
pop
xor
imull
in
sti
test
lds
xchg
jg
cmp
xchg
ss
push
dec
and
push
lret
in
jl
addr16
cmpsb
add
jae
iret
xchg
mov
add
stc
enter
ss
pusha
mov
jp
scas
and
dec
jmp
movsl
inc
into
fisubl
sbb
adcb
pop
add
jmp
mov
das
jbe
call
dec
xor
out
pop
lcall
add
in
sti
sub
sub
or
push
out
pop
push
sub
lock
cmpsb
push
inc
xor
pusha
lods
mov
xchg
cltd
sbb
push
adc
fistpll
je
xlat
daa
outsl
iret
aas
jbe
div
fwait
mov
in
icebp
arpl
jae
or
cmp
int3
sbbb
add
sub
lahf
pop
cmp
fs
sbb
inc
add
out
push
outsl
test
jp
movl
mov
stc
jmp
jmp
nop
sub
fcmovne
adcl
sub
push
jne
test
adc
sub
cmpsb
lret
cwtl
dec
xor
add
lods
jb
inc
sub
test
cltd
cmp
mov
cmpsb
lret
test
lret
mov
popa
add
or
andb
idivb
pop
out
sbb
andb
mov
ljmp
cmpsb
add
dec
and
cltd
test
adc
push
mov
xchg
repnz
inc
lcall
adc
test
pusha
fs
and
xchg
push
inc
lahf
bound
fstl
sbbl
add
mov
addb
inc
sahf
inc
push
push
xchg
in
and
xchg
xor
jp
mov
lcall
aam
inc
add
and
and
inc
jae
sub
lods
dec
add
mov
or
sbb
and
sub
mov
or
sub
mov
add
adc
cs
push
lods
test
jbe
xchg
push
mov
stos
or
push
and
fisubl
outsb
sub
cvtps2pd
test
cltd
adc
js
cmc
out
int3
adc
popa
stc
ljmp
jle
pop
les
xor
test
add
dec
xor
mov
and
dec
ret
mov
add
xchg
sub
sub
mov
xor
enter
outsl
jp
cld
adc
sub
sub
pusha
push
mov
or
movsb
cltd
fcoml
divl
inc
mov
cmpsb
xchg
sbb
inc
sub
inc
outsb
nop
xor
pop
add
lret
rorb
xchg
ret
inc
and
sbb
pusha
jno
pop
test
adc
je
lods
outsb
rcll
add
out
xor
dec
add
dec
popf
scas
cmp
roll
add
es
cs
es
or
divb
cmp
inc
sahf
adc
adc
mov
jbe
lods
popa
stos
out
loopne
sbb
adc
push
xchg
and
and
mov
dec
fistl
inc
pop
addr16
mov
popf
jl
mov
mov
xor
sub
dec
dec
sub
or
arpl
movsb
mov
aaa
insl
fldl
xchg
inc
out
or
call
push
sbb
inc
insl
sbb
pop
ss
incl
scas
pmullw
add
pop
cmp
push
mov
call
es
or
add
adc
and
mov
aaa
lods
imul
inc
xor
lret
aas
cmp
mov
test
and
rolb
sbb
mov
mov
adc
loopne
mov
jecxz
add
push
mov
push
dec
insl
test
stos
push
cmpsl
dec
mov
stos
aad
ret
push
mov
fnstenv
sub
jge
mov
mov
fnstsw
imul
fwait
xor
sbb
pop
or
stc
pop
push
adc
mov
test
xchg
add
sbb
jl
hlt
xchg
fidivrs
lahf
sbb
sbb
mov
jp
lahf
adcb
aad
mov
movsl
arpl
inc
nop
sti
push
shrl
jmp
stos
lcall
pusha
js
xor
inc
sbb
fldl2e
cmc
and
addl
or
sbb
cwtl
das
sub
jae
xchg
add
cs
cld
and
shll
add
bound
inc
jbe
or
frstor
xor
jmp
cli
mov
ret
bound
ret
jl
dec
das
jb
jno
push
sbb
cmp
jo
inc
mov
shrl
call
mov
mov
adc
negb
push
sbb
insl
push
mov
inc
sub
add
jb
leave
ss
js
lods
mov
push
jp
popl
movsl
pusha
pushf
jecxz
addr16
dec
push
jg
negl
dec
pop
mov
aas
jg
icebp
orb
dec
or
jmp
mov
add
sub
in
mov
sbb
hlt
push
loope
cmp
or
cli
inc
fdivrl
fsubs
lahf
cwtl
out
sahf
jnp
scas
pop
scas
rcl
lret
mov
popfw
sbb
push
and
inc
xor
gs
add
jo
loopne
enter
or
inc
lds
psllw
dec
pop
or
push
pop
cli
filds
mov
jle
scas
sbb
fildll
cwtl
sub
out
rcrl
jge
out
mov
in
fcompl
adc
addb
sub
push
fs
and
mov
aas
lret
or
and
ds
or
mov
in
fimuls
and
adc
push
lods
jbe
loop
scas
pop
dec
mov
mov
mov
fldenv
push
sbb
pop
rol
fistpll
mov
mov
mov
data16
lods
cmp
lock
pop
jno
mov
push
unpckhps
or
mov
jbe
fimuls
jl
pop
icebp
mov
mov
jmp
sti
xor
sahf
jbe
aad
or
lret
ja
shr
mov
je
fistpl
fistpl
fisubrs
lods
loopne
jbe
cmp
je
push
dec
mov
test
pusha
lret
or
pop
out
jbe
jl
mov
fnsave
push
dec
add
jg
jb
xor
inc
imul
pop
fsts
sbb
shl
ja
std
push
loopne
in
pop
notl
push
scas
jp
idivl
movsl
lea
ret
loope
frstor
ficoml
sbb
and
cwtl
fldcw
repz
xlat
cltd
xlat
icebp
pop
cltd
mov
cltd
adc
dec
jl
push
fists
jmp
fidivrl
outsl
ffree
xor
into
sub
movsb
loopne
jle
jle
sbb
out
dec
xor
lea
out
inc
and
xchg
adcb
xor
sti
aaa
std
lret
sbb
dec
shlb
cmpsl
sbb
and
or
and
test
pushl
dec
mov
stos
push
rclb
rcl
add
dec
lcall
mov
xchg
mov
xorb
push
pusha
cmp
mov
or
pop
in
sub
cmp
iret
inc
mov
sub
ret
mov
push
mov
xchg
sbb
filds
dec
xchg
mov
mov
pusha
mov
and
fwait
xor
sub
or
test
sub
xor
or
sub
scas
push
fwait
sub
xchg
xchg
or
push
jnp
mov
xchg
push
sub
and
pop
stos
scas
xor
hlt
or
mov
adc
jns
add
fwait
lock
ret
push
add
sarl
call
movb
loopne
enter
and
js
sub
inc
cmp
inc
mov
and
adc
mov
fs
inc
inc
out
sarl
shlb
rclb
xlat
enter
sbb
loope
pmaxub
int3
scas
mov
scas
mov
les
xchg
and
pop
sub
in
mov
jae
sti
sbb
xlat
mov
neg
cli
mov
push
es
push
jns
cmpsl
dec
mov
mul
iret
sti
dec
fbld
mov
xchg
cmpsl
jae
push
mov
shlb
xchg
push
dec
inc
std
xor
in
rcrl
in
mov
cmc
std
mov
sahf
cli
popf
push
fidivs
out
push
mov
aaa
fcmovnbe
adc
xchg
out
in
cld
xchg
lods
shll
mov
lret
cmp
negl
test
mov
in
aas
xor
mov
mov
push
ror
xor
mov
stos
adc
inc
fidivrs
push
test
add
jle
xchg
mov
in
std
jmp
lret
add
pop
sarl
adc
popf
or
cmp
loopne
hlt
push
fisttpll
imul
and
faddl
add
jl
shr
ret
fidivrs
scas
out
lret
xchg
int
inc
cmp
in
or
push
push
stos
add
fstl
loopne
fsts
cmp
mov
leave
and
push
popf
testb
pop
inc
add
lods
cmp
fnstenv
mov
sub
jno
loop
or
lret
mov
xchg
sub
or
jmp
orb
in
sub
push
xor
clc
add
mov
fldenv
add
xchg
sti
xchg
stos
bound
push
inc
stos
sub
sub
push
add
incl
fdivrs
inc
into
add
sar
add
xchg
xor
or
hlt
adc
pop
pusha
pop
fdivrs
add
add
sar
add
or
hlt
jg
pop
pusha
ljmp
add
push
cmp
xchg
mov
jb
mov
call
sahf
dec
mov
daa
testl
xchg
cmp
fs
mov
or
and
mov
pcmpeqw
es
mov
leave
adc
in
jle
mov
push
adc
ds
les
lods
sbb
fdivr
movsb
jg
mov
sbb
call
rorb
ficomps
pop
scas
int
mov
xor
scas
mov
imul
ret
popf
fnstsw
neg
shll
movsb
ljmpw
iret
lret
test
dec
test
std
loop
mov
cmp
aam
jg
mov
pop
stc
in
sub
dec
popf
iret
ud1
or
sub
mov
pop
push
add
push
andb
mov
lock
in
ret
gs
push
sub
cwtl
insl
stos
out
jns
lds
mov
aaa
lods
fimull
jne
lea
sahf
or
loop
xchg
adc
fwait
sbb
cmp
push
out
push
stos
in
js
mov
rorb
mov
add
mov
push
push
ds
pop
mov
js
and
test
pop
or
xor
test
xchg
mov
jg
test
sub
xchg
push
lea
shlb
fs
data16
mov
inc
add
cmpsb
pusha
rorl
cmp
xchg
bound
inc
xchg
test
add
add
mov
and
pop
icebp
cmp
cmp
adc
cmp
jecxz
pusha
scas
pusha
cmp
pop
dec
leave
add
imul
xchg
lcall
sbb
push
mov
outsb
loope
mov
rol
js
xchg
gs
outsb
in
test
stos
out
mov
orb
popa
icebp
mov
sub
mov
jns,pt
enter
jae
into
movsl
jns
jmp
xorb
loope
rol
je
or
je
add
add
dec
mov
inc
sbb
or
pop
cmp
int
pusha
je
push
jae
rcrl
pusha
xor
sbbb
mov
adc
in
pop
mov
push
insl
in
inc
dec
xor
ss
dec
mov
fnsave
lret
es
jp
xchg
ret
fisubrl
scas
mov
xor
popf
fnstcw
and
pushf
std
dec
rorb
je
cwtl
lds
mov
insb
xor
mov
mov
lcall
xchg
mov
xor
adc
xchg
pop
push
or
ds
sub
insl
pop
mov
inc
xlat
xor
and
dec
add
adc
ret
xchg
push
daa
inc
test
bound
mov
fiadds
xchg
inc
test
fldenv
sbb
mov
adc
pop
mov
add
mov
add
repnz
adc
js
scas
sbb
les
dec
mov
lcall
mov
cli
andb
push
adc
and
pop
xchg
pop
clc
adc
or
fstpt
inc
sub
add
push
inc
nop
inc
lret
in
push
cmp
sbb
icebp
or
popa
scas
xchg
mov
test
cwtl
dec
xchg
call
mov
pop
mov
fdivrs
lods
mov
xchg
sub
and
adc
faddl
inc
inc
mov
add
pop
cld
sub
push
mov
int
xor
sub
test
mov
fwait
bound
push
add
xor
insb
shlb
mov
inc
inc
or
inc
mov
movsb
fadd
mov
lret
and
nop
and
mov
dec
mov
orb
adc
cwtl
dec
adc
adc
aaa
jne
pushf
inc
lahf
jb
imul
and
lods
mov
mov
test
and
insl
ficoml
orb
adc
mov
push
and
adc
aam
adc
lret
xor
add
push
xchg
push
push
mov
sub
push
pop
loopne
pop
xor
aas
mov
push
and
dec
mov
dec
inc
lods
push
mov
adc
jne
outsb
push
in
lret
fidivl
std
nop
bound
test
inc
add
jne
sahf
sar
fmuls
mov
test
aad
xchg
mov
inc
mov
mov
add
lds
mov
call
push
push
xor
xchg
dec
scas
mov
lds
pop
insb
lds
sbb
mov
stos
mov
jbe
xchg
test
mov
pop
pextrw
push
imul
addr16
inc
pop
push
adc
xor
insl
sub
xchg
test
nop
xor
fwait
ds
orb
xchg
add
sub
push
fisttpl
cs
call
and
sbb
shrl
pop
mov
imul
ror
pop
mov
pop
out
or
cli
fs
imul
call
xor
jmp
int3
mov
lea
cmp
push
gs
mov
jl
cmpsl
sarb
adcl
ret
nop
inc
sbb
mov
sbb
push
inc
jmp
xor
adc
cwtl
pusha
add
into
sbb
jmp
mov
sbb
imul
add
call
syscall
xor
jbe
cmpsl
mov
dec
stos
fs
jno
pop
add
fwait
leave
lods
or
in
pop
ret
sbb
and
pusha
mov
ss
push
xchg
xor
test
test
fbld
lods
add
call
loopne
jo
and
sub
loop
js
xchg
jo
rcrl
das
pop
fcmovnb
imull
xor
test
mov
bound
mov
popf
sub
das
add
andl
in
orb
arpl
movsb
push
mov
inc
in
jl
dec
xor
jo
pusha
dec
rclb
mov
fisubs
sahf
cmp
stos
dec
jecxz
shl
xor
sub
jns
mov
xchg
adc
data16
jns
mov
push
lods
add
roll
mov
adc
movsb
cli
jo
mov
cwtl
cs
std
push
bound
sbb
fdivl
mov
mov
unpckhps
shl
adc
push
push
out
insb
adc
push
xchg
add
push
cmovge
std
push
loope
insb
cmp
cmp
test
stos
pop
inc
push
sub
inc
insl
data16
jmp
stos
push
loope
jo
xor
add
lods
push
lock
stos
je
xor
jp
xor
sbb
icebp
inc
leave
sub
mov
or
sub
push
xor
and
repz
and
lahf
xor
xor
sbb
pushf
push
fs
push
pop
sub
out
lcall
aam
lret
push
lahf
mov
cmp
pop
pop
into
sub
mov
nop
mulb
sti
ja
mov
sub
lods
mov
loope
and
stos
push
mov
je
pop
mov
lods
clc
call
outsb
lds
xor
and
adc
mov
cmp
cmp
js
enter
dec
dec
pop
pushf
pusha
aaa
cwtl
mov
sbb
pop
and
fists
dec
ret
push
das
popa
mov
orb
dec
loope
aad
cmpsl
and
dec
popa
repnz
cmp
and
sbb
sbb
cmpsl
push
roll
xchg
bound
dec
jnp
xchg
xor
push
pop
arpl
xor
enter
clc
jmp
daa
push
pop
sub
xchg
sbb
loope
shlb
mov
add
mov
dec
fsubs
sbb
outsl
jb
mov
mov
dec
jl
popf
pop
fnstenv
sbb
adc
icebp
leave
mov
mov
movsb
aaa
or
or
xchg
fs
push
out
aas
data16
mov
dec
xor
repz
pop
sub
ds
and
jae
mov
xor
pusha
dec
int
and
adc
add
add
popa
adc
and
mov
mov
sti
test
das
adcl
sub
cwtl
cmp
stos
adc
or
ret
xor
outsl
mov
and
mov
and
popa
daa
fcoml
insb
or
adc
or
xchg
adc
sbb
sub
pop
mov
cli
les
push
mov
leave
sti
test
and
and
testb
test
sub
or
lret
sbb
dec
push
jns
ds
xchg
loopne
push
and
sbb
xor
daa
hlt
adc
pop
dec
popa
adc
or
dec
xchg
shl
nop
sbb
or
xor
out
adc
mov
repnz
popa
pusha
xor
dec
mov
movsb
add
daa
add
out
lock
lods
lea
mov
enter
push
adc
movsb
dec
cld
and
int3
sub
orb
add
sub
add
andl
adc
sbb
add
inc
adcb
mov
lds
fsubs
inc
movsb
sub
push
and
aam
sub
xchg
mov
xor
arpl
or
dec
and
adc
rorb
mov
fldenv
mov
das
xor
enter
dec
mov
lods
enter
ror
mov
mov
repz
jne
lcall
mov
inc
xchg
cltd
inc
lods
adc
aaa
push
rolb
popf
pop
jns
xor
nop
sbbl
ljmp
add
fwait
push
fisubl
fisttps
jmp
stos
mov
fsub
jb
dec
aad
xor
xchg
jo
mov
push
jo
sub
arpl
out
lret
pop
push
cltd
push
push
jmp
sbb
data16
sub
pusha
imul
or
ret
dec
imul
mov
pop
mov
jl
adc
pop
int3
sbb
inc
pop
fstpl
inc
pop
push
enter
mov
sub
push
cmp
orb
in
pop
pop
int
popa
or
or
add
ret
sbb
nop
lods
popf
pop
mov
cmp
rcll
ja
in
xor
ljmp
pop
pop
push
mov
lcall
or
ror
lret
or
mov
clc
push
imul
sub
repz
es
mov
and
subl
aaa
call
xchg
cmc
cld
aad
jbe
mov
adc
lcall
dec
adc
sbb
inc
pop
lahf
xlat
and
xor
add
repz
int3
and
xorb
add
cs
mov
rcrb
push
mov
shl
cltd
mov
insb
fidivrl
push
jle
jo
cmp
pop
push
stc
aad
adc
fisubrs
push
cmp
jmp
xor
mov
push
divb
jge
ror
mov
clc
daa
mov
inc
insl
ret
jnp
push
xchg
jg
pop
mov
sbb
adc
mov
adc
sti
lock
jbe
cwtl
xchg
outsb
fldl
bound
fldcw
data16
out
or
mov
daa
xor
aad
rcll
xor
loop
push
les
adc
dec
or
xchg
cltd
push
pop
ds
cli
out
push
sahf
push
xchg
rorb
les
pop
iret
jmp
daa
hlt
adc
mov
dec
cwtl
mov
lret
inc
add
xchg
xchg
cwtl
imul
and
aad
mov
cmp
cmpsl
or
dec
push
pop
adc
unpcklps
ljmp
add
jl
xorb
out
es
sub
in
pop
test
xchg
data16
add
push
loopne
push
rcll
mov
dec
popa
xchg
adc
cmpsl
adc
repz
sub
and
out
xchg
cmpsl
popa
lret
movsl
jo
jae
push
inc
add
adc
lods
lcall
shlb
add
and
test
int3
pop
pop
push
lcall
lds
stos
sub
imul
and
sub
mov
fld
dec
mov
repnz
stos
in
pusha
pop
js
bound
mov
or
and
pop
out
movsl
cmp
ret
aad
addl
imul
inc
dec
ficoms
jg
jge
mov
inc
or
adc
insb
cs
sub
shlb
mov
insl
push
or
aaa
cmp
fisubrl
sub
int
sub
and
push
outsb
lds
ja
loope
push
dec
stos
cmp
mov
popf
pop
xchg
clc
push
adc
push
cmp
push
pushf
inc
mov
or
cmpsb
cltd
and
cmpsl
pushf
rcrl
int3
pop
sbb
push
popf
fs
push
pushaw
push
test
mov
xchg
in
or
pop
test
mov
das
inc
adc
out
lods
mov
shlb
aam
push
inc
and
movsl
mov
adc
call
sub
inc
push
push
sub
lods
or
inc
sbb
jns
sarb
jnp
push
fldl
in
push
pop
push
cmpsb
adc
dec
mov
push
adcb
test
xchg
sbb
scas
pop
lods
sbb
movsb
sub
pop
adc
mov
cwtl
dec
mov
lock
mov
mov
stos
or
dec
movsl
cwtl
mov
lret
mov
inc
pop
inc
neg
push
or
dec
loop
mov
rcl
mov
les
stos
xchg
xor
je
push
mov
imul
push
mov
sub
sbb
mov
jbe
inc
movsl
notb
je
mov
sub
adc
mov
and
and
inc
inc
test
mov
jge
mov
mov
scas
nop
add
push
or
jno
pop
inc
xor
in
dec
inc
shlb
inc
or
push
xor
push
lock
insl
sub
into
or
mov
scas
mov
sub
in
push
lret
or
sbb
inc
mov
ret
mov
cmpsb
adc
enter
andb
push
cmp
sub
mov
lret
pusha
mov
arpl
or
fistl
sbb
jo
sub
mov
pop
stc
aad
shlb
pop
pusha
test
mov
imul
jnp
or
test
jo
icebp
add
inc
ds
pop
mov
add
mov
iret
xchg
push
and
push
in
mov
icebp
sbb
popa
in
add
cmpsb
inc
pop
popa
cltd
adc
movsl
imul
mov
mov
cmp
pop
aam
dec
subb
mov
xor
cld
dec
outsl
imul
insb
dec
mov
loop
or
stos
clc
ljmp
scas
fdivr
mov
sub
aam
loopne
imul
subl
xor
or
jo
out
xor
xchg
scas
xor
inc
ret
das
mov
pop
dec
fsubs
push
cwtl
int3
mov
xchg
cmp
lds
pop
addb
or
mov
es
sbb
pop
sub
aam
sbb
and
int3
dec
push
in
pop
xor
pmuludq
adc
sbb
xor
mov
int3
or
lcall
mov
movsb
lcall
jp
cmp
adc
or
and
lds
push
mov
loope
dec
mov
subb
int
jno
test
sti
xchg
add
imul
xchg
sub
loopne
lahf
and
mov
adc
cmp
jno
cmpsl
inc
xchg
xchg
push
scas
push
or
pop
mov
ror
dec
mov
or
cmpsl
inc
mov
movsl
push
std
jo
jbe
stc
int
push
test
adc
insl
mov
aas
mov
pop
test
aam
pop
xor
loop
jl
aam
sub
adc
lret
movsb
dec
sbb
pop
test
push
mov
out
shlb
add
lahf
cmpsb
dec
and
lds
fwait
mov
cwtl
push
loope
sub
cmp
dec
stos
sub
addl
mov
or
or
and
loopne
pushf
jns
mov
xchg
mov
pop
gs
and
push
data16
dec
jns
pop
jo
addb
cmc
sub
fldenv
xor
sub
push
lods
pop
ss
lea
xchg
mov
call
aam
iret
push
push
pushf
mov
lods
adc
in
adc
mov
xor
popa
sub
xchg
dec
add
cmpsb
push
sub
repz
loop
test
int3
and
jns
shlb
add
sarb
inc
xchg
add
pusha
sahf
lcall
int
fsubs
out
out
adc
pop
int3
xor
jo
mov
cmp
imul
or
pop
testb
mov
cltd
push
fcomps
jbe
push
add
shlb
push
xchg
ret
push
adcb
mov
shrl
xor
lcall
mov
ss
les
dec
or
cmpsb
push
mov
loope
dec
adc
pushf
shrl
xorb
cmp
or
xor
fwait
sub
sub
adc
mov
add
rolb
jg
add
scas
out
pop
inc
or
cmp
loopne
pop
int3
sbb
gs
into
xor
loopne
andb
lock
lds
jo
insl
fisttpl
mov
fstl
mov
pop
mov
push
cmpsb
adc
mov
mov
pusha
fs
lods
daa
repz
stos
mov
dec
jne
cmc
test
adc
mov
add
cmp
pop
sbb
dec
scas
add
add
inc
testl
and
mov
je
cltd
dec
dec
or
inc
xadd
pop
sbb
cs
fcomp
or
lods
push
add
pop
xor
push
xchg
daa
hlt
xchg
daa
jae
rcr
dec
shl
add
mov
adc
ds
rorl
ret
filds
fwait
and
movsl
mov
cs
mov
and
aad
scas
dec
movsl
push
loope
cmp
jmp
add
fists
ror
mov
mov
cmp
sbb
repz
push
mov
js
pushf
sbb
arpl
push
in
mov
inc
pop
out
dec
aam
mov
jmp
idivb
enter
daa
stos
addl
shrl
sbb
arpl
jmp
rolb
lods
lds
out
icebp
adc
xlat
xor
mov
in
pushf
popl
test
pop
popa
sub
scas
mov
mov
pop
or
mov
pop
pushf
push
fs
popa
sub
ret
and
sub
jo
and
fs
xchg
or
sub
xchg
and
sub
xchg
xchg
and
sub
jo
arpl
and
sbb
je
mov
inc
jle
mov
jp
lods
hlt
sbb
ret
sbb
rorb
sub
xchg
scas
fcoms
dec
or
scas
insb
ret
sbb
sti
dec
out
and
push
rcrl
dec
mov
lret
push
repnz
dec
xchg
mov
cmpsl
test
movsl
mov
rcrb
movsl
add
pushf
cmp
ret
jge
xchg
rol
mov
out
ficomps
test
add
mov
out
or
mov
mov
test
aad
mov
rclb
outsb
or
das
and
pop
adc
sbb
add
and
je
xchg
scas
dec
jle
aaa
jl
dec
subl
push
scas
mov
test
mov
in
out
cwtl
out
out
out
add
fmuls
adc
call
bndstx
push
mov
lret
sbb
clc
pop
adc
mov
mov
rcr
jmp
sub
mov
lret
in
imul
inc
pop
push
push
and
jo
cmpsb
cmp
jmp
or
addr16
dec
addb
cwtl
out
jl
xchg
cmpsl
fsts
adc
test
ss
popa
and
fistpll
popl
xor
cmp
xorb
mov
add
mov
loope
jns
sub
test
or
jmp
and
flds
arpl
leave
mov
cmp
dec
pop
jnp
mov
ja
lahf
xor
and
inc
jecxz
sub
cld
loopne
mov
icebp
or
scas
sub
mov
sbb
ret
or
jle
mov
push
pop
cmp
or
sub
cmp
inc
roll
loope
dec
mov
or
cmp
inc
push
orb
test
addb
or
mov
xor
fnstenv
mov
sbb
fiadds
popa
pop
xor
or
xchg
inc
inc
jge
sahf
inc
daa
pop
and
arpl
shlb
lock
fisttpll
ljmp
add
test
add
mov
add
lods
dec
pop
inc
scas
fs
je
and
xchg
or
adc
adc
addb
les
addb
leave
pop
add
and
add
inc
movsb
jl
jns
push
bound
subb
nop
das
dec
xor
ret
sub
sbb
pop
sbb
mov
mov
mov
mov
mull
aaa
push
push
mov
pop
pop
fs
daa
mov
sbb
adc
inc
inc
push
popa
push
cwtl
inc
pop
popa
roll
jbe
mov
xchg
test
adc
test
mov
inc
loopne
shl
xor
pop
cmp
cmp
aaa
ljmp
xchg
lods
rcrb
pop
xor
popa
inc
loopne
ss
add
mov
sub
or
pushf
or
or
xor
jecxz
xor
sbb
adc
xchg
xor
clc
mov
call
sub
sbb
push
in
test
loop
in
sbb
fs
rclb
stos
cmp
sbb
mov
jne
cmp
inc
cmpsl
test
ds
sbb
push
aaa
mov
xchg
ret
es
mov
icebp
dec
pusha
enter
mov
dec
pop
xor
push
loop
cli
imul
xchg
dec
popa
pop
pop
aad
shll
xor
in
push
rol
mov
push
mov
adc
adc
fwait
xchg
pop
lcall
cmp
pop
jae
iret
daa
stos
adc
sub
and
xor
jecxz
dec
daa
push
addb
mov
inc
cmovbe
repz
pusha
sub
or
stos
sbb
push
das
adc
cmp
pop
push
clc
test
ss
movsl
stos
mov
fs
js
cmp
mov
or
mov
sbb
xor
adc
pop
sub
xor
cmp
sbb
xchg
adc
inc
dec
push
xor
pop
sbb
and
or
fstps
push
push
cmp
push
and
pop
arpl
rclb
sub
mov
xorb
push
xchg
sub
inc
stc
addb
dec
push
adc
adc
push
not
enter
lds
push
and
ss
cwtl
or
cmp
rol
and
sub
and
add
cmc
imul
ja,pn
push
push
inc
pop
test
cli
xor
cmp
stos
adcb
push
fdivl
ficoml
xchg
and
xchg
jp
imull
jmp
push
addl
das
mov
cmp
clc
int3
loop
pop
inc
rcll
sub
arpl
fisttpll
mov
push
rcll
xor
aam
push
imul
xor
add
lea
cmp
add
xchg
pusha
push
adc
cltd
adc
xchg
stos
xchg
and
dec
ret
xchg
mov
mov
bound
dec
and
in
je
inc
sarl
pusha
movb
add
aam
push
pushf
bound
dec
fs
cmp
adc
or
lea
js
xor
das
rolb
ja
rcrb
aam
sub
pop
push
ja
xchg
mov
add
jbe
push
push
pop
xor
push
mov
push
pop
lcall
leave
icebp
leave
adc
popa
or
mov
out
jb
mov
xchg
lcall
mov
push
cltd
lret
scas
xlat
pop
push
xor
cld
repnz
aaa
push
ljmp
xor
cs
xchg
sub
addb
test
jnp
push
rcl
add
add
pop
xlat
les
cmp
and
push
mov
xchg
push
or
fdivrl
das
out
arpl
into
add
or
iret
stos
jno
xlat
sub
paddq
addr16
xchg
in
sub
adc
lock
add
push
mov
mov
mov
js
or
xor
js
sbb
mov
scas
repz
push
dec
pop
pop
iret
push
xchg
mov
fistl
push
pusha
cld
push
push
mov
popa
insb
mov
cmp
mov
cwtl
inc
jno
sbb
xchg
lea
daa
pushf
sbb
pusha
jns
adc
xor
andl
pop
xor
dec
pop
cwtl
adc
push
mov
mov
ss
mov
mov
fstpt
mov
mov
fsub
push
dec
in
mov
rclb
jl
stos
add
dec
shlb
sbb
push
adc
or
xor
pusha
xor
or
mov
sub
shr
sub
loopne
cmpsb
cmpsb
loop
push
les
mov
xor
dec
sbb
shrl
je
adc
xor
sub
popa
cld
mov
mov
into
mov
test
push
aam
dec
rol
fldt
imul
mov
int
push
js,pn
mov
lods
cmp
or
cmp
or
xor
sbb
imul
or
push
int3
and
subl
push
cmc
stos
fidivrl
shll
jg
pop
dec
das
ret
arpl
gs
xchg
push
xor
pxor
jnp
popf
mov
dec
das
aad
sub
lret
sub
lea
xorb
stos
mov
bnd
and
ret
push
mov
xchg
push
mov
repz
mov
arpl
xlat
add
adc
bound
xchg
out
adc
jb
fldenv
pop
addl
add
or
sub
pop
dec
push
dec
lods
push
ja
add
lahf
sub
mov
xor
jmp
mov
aas
or
xchg
and
lret
arpl
mov
xor
lret
pushf
popf
ret
sarl
loop
imulb
jecxz
xchg
fists
movsl
sbb
insb
mov
lcall
inc
mov
mov
mov
cmp
adc
sub
cmpsl
test
cwtl
ljmp
xchg
mov
jle
dec
add
js
cmpsl
add
pop
mov
xor
pop
mov
ror
push
aad
sub
lea
rol
xor
sarl
adc
fmull
aas
push
in
popf
push
dec
ficoms
dec
push
stc
inc
mov
push
std
sbb
mov
fsub
pop
addl
pop
das
and
sub
in
lret
sbb
and
mov
lock
fs
insl
movsl
cmp
add
sbb
jg
sti
xchg
cs
je
inc
inc
xchg
mov
mov
push
adc
inc
arpl
pop
adc
adc
mov
stos
sub
xchg
aaa
fwait
push
ds
in
jmp
jl
inc
sahf
xchg
lds
cmp
imul
adc
xor
pop
cmpsb
enter
xor
stos
scas
adc
roll
int
sub
mov
adc
mov
mov
cmp
adc
inc
inc
jns
cltd
xchg
xor
aaa
xchg
in
pop
xor
pop
jecxz
fs
int
outsl
clc
lret
ret
pop
cmpsl
imul
fdivrs
sbb
lods
cwtl
call
xchg
sbb
lcall
jo
das
sbb
xchg
adc
cld
jmp
pop
lahf
sub
push
cvttps2pi
mov
pop
or
push
andl
mov
jle
ret
add
lds
cmp
push
lret
jp
mov
fidivl
pop
mov
pop
or
jno
je
shl
xor
xchg
in
aas
aaa
test
iret
rclb
lea
pop
and
sbb
adc
gs
imul
scas
movsb
cwtl
mov
sahf
xchg
ret
mov
pushf
push
mov
add
push
frstor
lock
bound
aad
test
pop
xor
sbb
test
repz
cltd
xchg
fisubl
push
movb
add
cwtl
fs
sbb
add
push
les
push
dec
bound
scas
or
dec
and
xor
xor
xor
add
push
cmpsl
or
pop
ret
in
push
mov
cmpsb
jmp
jmp
sbb
orl
xor
aaa
pop
xor
js
sbb
ret
sub
mov
cmpsb
sahf
jbe
rep
jbe
bound
xchg
and
bound
mov
xor
fiaddl
xor
mov
mov
sbb
jo
mov
pusha
inc
sarb
mov
mov
adc
xchg
jmp
ss
sbb
addl
pusha
mov
jno
cmp
pop
add
add
mov
insb
add
add
mov
mov
xchg
mov
sbb
ljmp
xor
and
pop
or
leave
push
or
cmp
into
mov
mov
gs
mov
into
aad
bound
push
dec
fwait
push
sbb
xor
cmp
or
push
sbb
jo
lea
adc
rol
jmp
pusha
inc
pop
int
aad
fxch
fwait
test
xor
ret
sbb
clc
test
adc
loope
sub
ret
xchg
mov
gs
or
or
lcall
sahf
dec
mov
dec
lcall
insl
sub
dec
roll
cltd
mov
sub
mov
jb
inc
fldenv
sbb
inc
adc
cltd
mov
mov
into
xlat
add
es
outsb
and
pop
or
pop
into
addr16
lods
test
movb
mov
je
test
add
mov
add
pusha
test
aam
rcrb
lret
popa
popa
ss
pop
jae
and
adc
mov
aad
lock
xor
ficoml
lods
imul
xor
test
cs
ret
sub
int
dec
cmpsb
mov
inc
sbb
scas
cmc
or
mov
rcrb
ret
mov
mov
test
mov
and
popf
or
cwtl
cmc
adc
or
subl
loop
or
sbb
pusha
push
ret
or
push
mov
lds
jo
roll
add
mov
mov
stos
aad
inc
rorl
addb
add
mov
dec
adc
or
loop
lret
xchg
test
mov
sbb
xor
fs
xchg
loop
nop
xchg
pop
jb
cmpsb
inc
in
dec
xor
inc
arpl
sub
inc
cmpsb
clc
sub
ss
inc
sbb
aad
push
fbstp
sbb
subb
in
movb
pop
ret
push
sbb
xchg
or
insb
adc
loopne
sbb
fs
movl
xchg
scas
loope
inc
insl
push
jo
inc
ja
mov
and
adc
adc
aad
or
ja
xchg
xor
repz
rorl
dec
or
repz
insb
insl
jo
xchg
and
add
insl
mov
add
xor
lcall
mov
int3
sarb
pop
jne
xor
xchg
add
adc
or
leave
push
ror
add
lods
lods
arpl
shrb
sub
push
test
push
sub
bound
call
inc
or
addr16
xor
adcb
roll
or
enter
fbstp
sahf
lea
int3
push
push
or
mov
or
add
mov
push
jno
ss
cwtl
xor
or
jnp
adc
lret
jo
cmc
xchg
data16
mov
or
xor
cltd
dec
xchg
clts
adc
sub
push
xchg
imul
sub
leave
xchg
and
jmp
nop
cmp
push
loope
or
push
and
xor
test
data16
mov
jmp
xor
mov
pop
xor
sbb
push
pusha
xor
lds
jo
lds
xor
sbb
mov
or
pop
fld
push
dec
xor
out
cltd
sub
movsb
sub
addb
or
jmp
mov
leave
fstl
mov
inc
add
pop
push
or
or
mov
cmp
cmp
ss
sbb
lea
dec
xorb
mov
shlb
cmp
insl
lds
cltd
rolb
add
adc
aad
cmp
sbb
adc
dec
pusha
fcomps
mov
cmpb
repnz
cmp
popa
rclb
stos
xchg
xchg
test
sbb
push
adc
adc
repz
and
jmp
cmp
in
push
cmpsl
inc
movl
sahf
or
xor
and
xor
pop
adc
inc
adc
xchg
icebp
test
sub
data16
and
lock
push
lods
popa
das
push
add
dec
or
mov
cmp
xor
test
sbb
or
roll
add
dec
xor
push
mov
cmovnp
rorb
pusha
and
std
fsts
pop
push
xor
dec
or
pop
adc
or
fs
mov
lret
adc
cmp
lods
add
loopne
movsl
in
push
mov
addps
orb
push
xor
rcr
imul
jae
and
xor
enter
insl
sub
mov
subl
mov
inc
shlb
andb
mov
jo
xchg
adc
arpl
insb
popa
xor
pop
out
dec
lds
aad
in
or
mov
insb
adc
mov
in
pop
icebp
mov
leave
fs
arpl
daa
stos
dec
cmp
es
stos
cmp
pop
jne
fs
dec
outsb
data16
inc
es
cld
insl
add
adc
ret
xchg
lods
mov
pop
pusha
jbe
mov
mov
js
jo
sub
data16
push
lret
mov
loop
add
popa
stos
jecxz
pusha
jne
ds
inc
sbb
sbb
lcall
add
or
xor
jp
xchg
push
dec
movsb
xor
inc
pusha
or
inc
xor
xor
in
cmp
adc
pop
push
xorb
and
daa
or
jmp
and
lods
adc
xchg
or
insb
or
jle
inc
jecxz
lcall
test
pushf
jp
shrb
cmpsb
mov
fs
dec
cltd
stos
inc
ret
xor
rcrl
xchg
ret
lods
or
and
or
ja
popa
rclb
sbb
and
imul
xor
sub
inc
test
out
mov
push
insb
outsl
dec
in
int
xor
adc
arpl
or
jo
add
xor
jo
mov
test
addb
je
xchg
mov
push
push
insl
inc
adc
or
mov
xor
mov
lret
inc
repz
cmpsb
adc
or
inc
frstor
lret
sbb
pop
insb
shrl
fstpl
or
cmp
xchg
cmp
adc
inc
loopne
jae
jmp
inc
xchg
jno
xor
dec
xchg
mov
and
cli
arpl
lea
or
sub
sbb
push
xchg
icebp
rol
aaa
add
jl
into
bound
mov
mov
mov
popf
shll
sbb
rolb
shlw
jne
jp
adc
and
ljmp
mov
push
mov
sbb
cmp
mov
fcompl
lock
sub
mov
dec
int3
adc
pop
leave
fs
stos
push
inc
adc
je
sbb
cmp
test
sarl
and
gs
push
into
lret
lcall
pop
mov
lds
test
mov
orl
push
mov
add
hlt
mov
sbb
mov
lods
cmp
or
fnstcw
cmp
in
ret
sbb
push
roll
sbb
pusha
cmp
inc
mov
or
jno
or
in
or
xor
test
sbb
mov
rcrb
out
cld
jle
cmc
cmp
dec
jns
sbb
movsl
mov
pushf
insb
inc
or
pop
sub
insl
push
andl
popa
movsb
cmpsb
pusha
lea
push
adc
imull
or
push
push
out
xchg
pop
pushf
rcrl
adc
sub
int
shrl
push
dec
ja
mov
mov
adc
cmp
lds
dec
sti
sbb
sbb
lods
mov
sbb
mov
push
clc
stos
andl
loop
or
js
cltd
test
test
add
mov
orb
jne
push
jo
jbe
jnp
adc
andb
sub
and
ss
sbb
call
mul
sub
jno
aaa
leave
aaa
jmp
inc
cmp
repz
xor
pop
push
ret
xchg
dec
mov
sub
lds
xchg
lds
push
cmp
lock
xchg
jnp
lcall
arpl
or
xchg
fwait
cmp
pop
add
xor
outsl
fs
or
xchg
fs
pop
mov
lret
jno
adcb
inc
out
dec
popa
inc
mov
cmp
insb
sub
pop
repz
dec
or
sahf
enter
je
mov
call
fs
insb
sbb
cmp
iret
inc
loopne
or
or
popf
pop
xor
cmc
outsl
push
mov
sbb
pop
lds
aad
jecxz
inc
jmp
out
push
adc
adcb
cmpsb
pop
jb
out
hlt
test
sbb
sub
shll
sbb
in
inc
mov
rcrb
push
mov
test
mov
cmp
cmp
dec
xchg
loope
push
test
movups
lock
adc
add
mov
mov
mov
sbb
fdivs
inc
add
popa
xchg
adc
jne
inc
clc
sub
lds
inc
test
inc
data16
aad
xchg
scas
inc
cmp
mov
clc
clc
lcall
inc
ret
inc
imul
sub
jns
push
int3
xchg
stos
cs
aaa
jge
inc
inc
push
xor
icebp
push
js
je
mov
jno
sub
xor
outsb
repz
pop
push
data16
pusha
push
lods
jb
or
cmp
stc
aam
dec
mov
lods
adc
cmp
pop
addl
adc
stos
cmp
stos
xchg
scas
jmp
jecxz
loopne
popf
popa
inc
popl
inc
test
or
inc
jne
nop
xchg
add
xorps
push
xchg
cmpsl
sbb
gs
xor
aaa
or
aad
in
sub
or
push
lds
xchg
fcoms
rcll
push
je
inc
push
sbb
pop
sub
mov
pop
push
mov
jl
xor
pop
mov
rolb
cmp
inc
sub
ja
loop
scas
out
lods
or
mov
add
in
mov
test
push
pusha
jae
mov
arpl
adc
cmpsb
and
jge
cmc
icebp
arpl
ret
aas
sbb
ror
push
jmp
sbb
clc
pop
dec
cs
xor
andb
pop
imul
push
and
add
sbbl
ficoml
pop
and
enter
add
adc
mov
enter
mov
dec
test
add
adc
movsl
dec
push
and
mov
ficoml
imul
adc
les
mov
hlt
cmp
cwtl
adc
nop
dec
add
add
adc
dec
movsb
and
pusha
mov
adc
test
and
inc
add
shll
mov
popa
xchg
or
pop
and
dec
in
and
lock
push
test
test
push
and
lock
push
insl
or
adc
pop
mov
mov
cwtl
dec
inc
and
mov
adc
jo
lods
pop
mov
mov
outsb
and
orb
loop
inc
bound
int3
adc
xchg
jo
add
subb
jle
mov
dec
mov
dec
and
mov
add
subb
mov
xor
loop
sub
and
cwtl
dec
inc
push
inc
sub
mov
adc
xchg
push
cs
adc
and
test
adc
sbb
pop
and
add
and
loopne
or
sub
adc
fmuls
and
mov
adc
mov
das
jno
adc
or
sub
pushf
scas
add
add
pop
or
cwtl
and
mov
adc
or
jno
and
push
inc
sub
push
or
sub
inc
pop
inc
test
jl
and
push
stos
xor
and
sbb
pop
bound
dec
call
xchg
lock
inc
test
lods
adc
lock
push
insl
or
adc
xchg
enter
loop
movsb
inc
adc
pushf
adc
mov
dec
and
or
adc
jo
lods
pop
mov
mov
scas
sub
inc
ret
pusha
and
mov
adc
clc
dec
loopne
test
dec
adc
cmpsl
sub
mov
rclb
mov
das
popa
xchg
xlat
mov
and
dec
dec
inc
push
mov
mov
mov
shrb
inc
xchg
cmpb
inc
mov
jo
xor
sub
pusha
mov
adc
xchg
pop
dec
inc
pop
and
adc
mov
and
mov
mov
pop
xchg
inc
dec
nop
pop
and
sarl
mov
adc
and
pusha
lods
test
mov
dec
mov
or
adc
test
inc
les
sub
push
or
sub
xchg
loopne
add
loop
adc
loopne
in
gs
xchg
push
ret
dec
or
adc
mov
scas
dec
movsb
and
pusha
mov
adc
and
pusha
dec
and
sub
pop
or
adc
pop
bound
dec
in
out
sub
xchg
loopne
or
push
and
clc
dec
push
insb
mov
jno
test
inc
pop
inc
das
mov
add
rcll
mov
dec
sbbb
popa
je
mov
adc
sbb
mov
push
mov
add
xchg
or
adc
js
mov
mov
mov
adc
and
pop
lods
test
rclb
or
dec
mov
mov
adc
lea
les
or
dec
or
sub
xchg
mov
inc
pop
and
adc
dec
enter
adcl
xor
jo
adc
stos
dec
andb
mov
adc
dec
in
and
dec
mov
adc
xchg
rorb
loop
adc
mov
les
test
dec
push
mov
and
test
dec
push
bound
andl
adc
nop
dec
test
das
and
push
mov
cwtl
dec
cmp
bound
adcl
xchg
jo
lods
pop
subb
das
mov
in
pop
dec
or
adc
movsb
outsb
sub
or
lock
jg
xchg
sti
jecxz
aas
sub
add
cs
or
xor
jecxz
push
pop
push
xchg
add
and
lret
inc
mov
jne
inc
mov
fcompp
xlat
or
jnp
xor
aam
dec
std
mov
enter
aad
call
mov
test
std
call
popl
adc
xchg
push
sti
push
test
adc
xchg
cli
pop
cltd
cli
xchg
mov
xchg
stos
cli
shrl
mov
pop
popf
cli
sar
sti
adc
mov
pop
adc
jle
ljmp
inc
movsl
ljmp
movsb
scas
jle
ljmp
inc
mov
inc
jle
scas
jle
ljmp
sub
std
test
imulb
push
sbb
ljmp
and
ret
mov
ret
add
mov
jno
mov
sahf
ljmp
push
sbbl
cwtl
sub
jne
add
cmpsb
and
pop
test
movsb
xchg
xor
inc
daa
cld
push
popa
push
aas
push
jae
lret
push
cmp
sbb
push
cmp
data16
pusha
int3
or
sbb
test
mov
xchg
mov
xchg
and
and
cltd
mov
stc
and
sbb
dec
popf
xchg
mov
xchg
jne
xor
dec
ret
mov
out
mov
fs
pop
mov
mov
inc
jp
cmp
scas
in
push
push
mov
call
shrl
adc
xchg
adc
scas
mov
mov
stos
in
sar
adc
popf
or
sahf
lea
sub
or
scas
mov
out
ljmp
lock
in
out
dec
xchg
xchg
pusha
inc
xchg
addl
popa
mov
in
dec
and
inc
lahf
jecxz
add
push
mov
cmp
cltd
add
scas
mov
fwait
jbe
or
xor
hlt
imul
insl
fldenv
mov
stos
pop
ret
push
push
add
shrl
pop
loop,pn
mov
cmpl
int
repnz
gs
xor
rorl
adc
or
bound
xor
mov
popa
hlt
int3
addb
add
xchg
pusha
push
jne
pop
or
test
or
in
popa
add
ret
aaa
cltd
and
dec
push
and
insb
popl
and
pop
mov
test
cmp
push
jbe
dec
adc
test
int3
and
or
ret
xchg
sub
push
inc
sub
push
test
or
cli
inc
gs
push
adc
ss
pusha
dec
jge
rolb
sar
push
gs
hlt
scas
pop
int3
dec
subb
or
mov
add
popa
andb
or
insb
or
pop
daa
icebp
pop
mov
mov
stc
sbb
adc
xchg
xchg
fmuls
or
and
adc
push
stos
ljmp
xor
inc
scas
stos
sbb
jo
lret
jno
mov
cmp
mov
xor
jmp
mov
xchg
mov
jno
decb
mov
mov
xor
add
pop
ret
outsl
das
repz
insb
inc
mov
mov
loopne
push
fidivrs
adc
addr16
cs
fsubrl
pop
inc
jge
or
loope
pusha
adc
mov
pop
call
ja
mov
or
aad
addb
pusha
sub
adc
scas
jne
jb
cltd
inc
movsb
push
shlb
sbb
lret
lret
or
pop
imul
sub
fwait
dec
add
mov
not
rcl
or
repz
movsl
xor
mov
das
test
rcrb
and
or
push
cmp
xchg
mov
enter
xor
adc
ret
and
or
xor
sub
pop
push
cmp
mov
cltd
mov
pop
es
jmp
add
and
dec
jns
scas
cmc
inc
sbb
add
stos
hlt
and
test
sbb
pop
mov
or
les
sbb
imul
add
add
xchg
adc
test
int3
and
or
xor
and
xor
push
add
adc
cmpsb
dec
dec
and
mov
inc
push
adc
cmp
and
mov
adc
rorb
subb
shl
mov
jno
and
adc
mov
sub
push
and
cmp
pop
and
test
mov
pop
mov
mov
adc
xchg
clc
subb
test
xchg
adc
jo
xor
inc
sub
pop
mov
adc
xchg
or
pop
mov
mov
mov
cs
xchg
cmpb
jle
and
push
dec
and
mov
cmpsl
test
adc
xchg
rorb
pop
ret
arpl
mov
cwtl
and
inc
mov
adc
enter
push
test
daa
jne
jge
xchg
xor
pop
pop
dec
test
loop
adc
mov
xchg
mov
movsl
pop
jp
mov
sbb
fbstp
lods
add
lahf
push
sti
pop
repnz
jns
lods
adc
pusha
xor
cltd
add
jmp
jmp
sbb
and
lds
in
sahf
lret
icebp
sub
cmp
lds
pusha
xchg
imul
add
and
mov
sub
popa
and
ja
dec
jb
pop
shrb
das
aaa
sbb
fisubl
add
and
je
adcl
cli
sub
mov
jecxz
mov
mov
push
je
xor
dec
pop
push
mov
iret
xchg
inc
dec
jge
fsubs
adc
or
std
out
mov
call
fs
fnsave
push
mov
aas
fwait
or
pop
add
inc
insl
pushf
lea
xor
aaa
add
pop
frstor
jecxz
sub
std
adc
adc
mov
arpl
xchg
lret
mov
add
pusha
xor
addr16
mov
nop
xor
mov
adc
pushf
andb
push
xchg
scas
adc
outsl
dec
push
ljmp
jns
push
sub
mov
mov
clc
jae
pop
insl
lock
jne
push
mov
sub
inc
xchg
in
push
push
dec
sbb
add
dec
xor
sub
add
mov
mov
and
or
test
popa
push
sub
inc
ret
fisttpl
adc
push
inc
sbb
idivl
cs
sahf
lret
loopne
int
or
and
push
and
addb
int3
push
andb
sbb
xchg
cltd
push
dec
test
dec
mov
fsubr
sub
cmp
adc
inc
jmp
sbb
jge
gs
ret
xor
cwtl
mov
scas
popa
int3
add
jo
jle
inc
popf
aam
cmp
mov
cltd
ret
mov
jmp
push
es
pusha
and
shrl
xchg
cmp
push
push
inc
lahf
mov
enter
cmpsl
ds
scas
les
ljmp
fs
je
shr
movsb
inc
and
jae
adc
mov
es
test
inc
lahf
test
aam
mov
and
mov
jo
push
out
in
fadds
sub
fs
push
and
ljmp
sbb
inc
xor
int3
inc
pusha
sbb
test
sub
fstpl
mov
in
or
sti
je
add
mov
pop
jge
adcl
cmpl
sbb
loop
int3
and
out
stos
inc
mov
sbb
cmpsl
shll
lds
in
add
enter
bound
loopne
push
in
in
outsl
push
lds
xchg
xchg
fnstenv
pusha
xor
push
xchg
cmp
mov
popf
push
adc
add
push
call
mov
add
insb
xor
adc
push
add
or
or
cmp
adc
out
ja
or
hlt
aad
mov
test
inc
in
shr
mov
pop
stc
adc
xorl
shll
jl
fs
push
addr16
lods
adc
lea
adc
arpl
ljmp
imul
and
jno
gs
xor
mov
cli
push
lret
adc
cmp
adc
mov
mov
scas
or
push
mov
and
and
int
mov
and
shl
pop
push
movsb
outsl
aad
daa
xor
cmp
popa
mov
push
ljmp
daa
cmpsb
inc
rcl
insb
sub
push
pop
xor
push
mov
pop
adc
adc
sbb
add
push
add
daa
lea
inc
test
mov
jmp
push
or
pop
sbb
push
xchg
mov
or
mov
sbb
or
xor
pusha
add
adc
pop
mov
cmp
loopne
adc
mov
sbb
ret
or
scas
mov
jl
notb
mov
add
mov
mov
xchg
adc
popf
inc
into
adc
hlt
icebp
xchg
shll
push
outsb
inc
pop
or
mov
shrb
int3
ja
mov
pop
pop
loopne
xor
iret
mov
mov
pop
xchg
jecxz
arpl
into
and
cs
sub
inc
inc
test
std
inc
test
or
sbb
daa
jb
popa
cwtl
loope
cs
mov
jmp
ja
sub
inc
addr16
adc
shrb
sub
adc
jo
rcl
inc
ret
or
sub
push
aaa
sbb
dec
or
addb
stc
add
push
xorl
pop
and
out
mov
aas
xor
icebp
adc
outsl
dec
cmp
popa
mov
or
pop
aaa
xchg
mov
addb
loope
repnz
enter
adc
mov
add
adc
xor
je
in
xchg
inc
xorb
inc
inc
xchg
mov
add
sub
inc
inc
inc
or
push
aam
jne
mov
addb
mov
daa
adc
pop
int3
leave
ljmp
push
stc
pop
mov
jb
cmp
icebp
divb
sbb
adc
pop
add
mov
test
fs
push
jae
xor
call
outsl
scas
int
sbb
xor
loopne
mov
sbb
mov
sub
sahf
mov
sbb
xchg
pop
or
or
cmp
cltd
mov
inc
sub
loopne
sub
movsb
push
sbb
sar
pop
cs
je
xor
fisttpll
pop
icebp
jle
mov
push
js
adc
xchg
je
mov
leave
pop
sub
add
movsl
rol
ror
aad
push
or
mov
in
pop
pop
pop
in
shll
push
idivl
sub
sbb
rolb
fcom
add
bound
and
arpl
xorb
test
sbb
call
pushf
jno
popa
push
xchg
or
xchg
repnz
call
mov
setg
je
sbb
lahf
imul
xchg
push
jmp
sbb
in
sub
notb
into
pop
jb,pn
lcall
add
shld
cmpb
aaa
jmp
fldl
lods
mov
dec
xlat
mov
jg
pushf
ficoml
lods
sub
add
xchg
ds
mov
std
rcl
pop
and
loop
sub
xor
hlt
and
aas
ja
cmp
jle
mov
inc
int3
xchg
and
pop
stos
stos
cmp
jo
icebp
push
and
ljmp
xchg
dec
shlb
or
pop
in
movsl
das
xor
fsubrl
mov
in
jl
popf
aam
sbb
mov
xlat
inc
out
xor
mov
shrl
push
adc
push
sbb
pop
sub
mov
int3
fistps
sbbb
push
in
adc
jmp
or
insb
je
stos
xchg
imul
and
or
sbb
je
lcall
xchg
push
push
pusha
mov
pop
adc
mov
cwtl
imul
dec
mov
outsb
orl
xchg
scas
es
daa
call
pop
jg
adc
push
xchg
push
rol
xchg
test
inc
in
xor
push
repnz
jle
insb
or
outsb
js
pop
test
addr16
in
popf
mov
out
mov
sbb
outsb
les
out
xlat
mov
xor
adc
js
inc
fistpl
mov
loopne
push
shrb
inc
push
inc
sbb
loop
inc
cld
sub
inc
lcall
push
pop
mov
jne
rcll
adc
push
cmp
mov
fcomip
mov
xor
lret
in
icebp
out
push
pop
sub
or
mov
sar
or
imul
mov
enter
es
or
or
mov
repnz
ds
test
mov
cmp
out
xchg
sbb
adc
inc
in
xor
cmp
cltd
js
popf
movsl
push
ret
lret
add
add
adc
test
stc
popa
hlt
sub
lret
sti
push
push
xor
sbb
sbb
push
mov
aas
fdivrs
xchg
inc
dec
scas
push
addb
lret
or
das
cmp
add
adc
cmp
into
push
push
pop
in
idivl
arpl
pop
sbbl
int3
fstps
hlt
clc
sbb
pusha
mov
lods
mov
dec
stos
jae
aad
mov
ret
or
adcl
inc
xor
push
rorl
inc
or
sarl
pop
in
sti
int3
or
xlat
xor
xchg
out
shr
sbb
pop
lock
push
mov
paddsw
lea
dec
cmpsb
sbb
lret
add
cmp
fldcw
pop
jl
addr16
xor
adc
out
lret
scas
popf
in
sbb
cmc
int3
cmc
and
mov
jno
outsl
xchg
cmp
sbb
pop
sbb
pop
in
daa
fstps
fs
adc
ds
pop
xorl
popa
mov
lods
pop
push
xchg
outsl
mov
add
jl
adcb
clc
js
push
inc
push
sbb
mov
pushl
lret
jg
mov
jno
or
mov
cltd
dec
mov
cmp
loop
sub
data16
xlat
push
jge
cmp
sub
stc
jo
and
dec
fnsave
cli
lret
push
pop
push
and
push
adc
jo
cmp
into
cmpb
leave
ljmp
add
test
sub
pushf
pop
sbb
test
les
vcvtdq2pd
arpl
push
sub
shrl
jns
xor
or
cmc
ds
daa
cmpsl
mov
aaa
fstl
and
dec
scas
xchg
mov
cmc
out
xchg
vsubpd
lock
jmp
xor
adc
shlb
insl
dec
xlat
mov
mov
jns
in
xor
int3
mov
gs
lds
cld
fstl
push
mov
inc
insb
sbb
ss
mov
push
in
out
xchg
add
jno
mov
push
inc
push
xor
lods
pop
sub
jle
adc
int3
mov
mov
ja
mov
push
pop
adc
ja
ljmp
jge
xchg
xchg
dec
jecxz,pt
cmp
ficoms
cmp
mov
dec
aad
jb
sub
sbb
aam
addr16
sbb
add
pop
push
gs
sbb
xchg
popa
fsubs
xor
sub
xor
and
and
jbe
adc
mov
jo
stos
inc
mov
lods
ret
cmp
push
not
sub
lods
in
dec
mov
mov
decb
mov
inc
int3
lods
mov
mov
je
pop
dec
fwait
cmp
or
or
lahf
or
subl
xlat
test
lea
hlt
xchg
cmc
pop
push
adc
test
push
xchg
shll
sub
mov
sub
stc
iret
ja
les
and
test
xchg
lret
pop
cltd
int
ret
lea
or
insb
mov
mov
mov
jb
add
mov
pop
push
out
adc
pushf
in
int3
movsl
rorl
mov
popa
push
push
adc
stos
loop
cmp
pop
sbb
cmovnp
pop
push
test
jmp
sub
cmp
inc
mov
test
insb
push
sub
aas
mov
xor
dec
adcl
pop
jne
stc
pop
sti
pop
out
dec
rcrb
add
mov
inc
or
mull
js
out
loope
mov
popl
repnz
dec
lcall
sub
mov
sbb
mov
lock
inc
stos
shrb
fs
cli
push
fwait
add
adc
xchg
xchg
mov
lds
jae
pop
pop
stc
jl
mov
iret
and
mulb
sub
iret
das
fildll
add
and
ja
sahf
pop
adc
sub
popa
jl
xchg
mov
lods
cmp
mov
lds
push
scas
cli
push
mov
pop
sbb
fwait
xor
fs
push
jmp
sbb
pop
xor
sbb
into
inc
lret
pop
mov
loope
sub
fisubrs
xor
stos
push
les
dec
pop
in
mov
xchg
or
pop
xor
push
mov
mov
lahf
test
mov
mov
dec
test
in
sti
push
push
subps
daa
sbb
call
filds
popf
inc
mov
bound
addr16
add
jno
mov
cmp
ds
mov
jbe
lods
push
dec
aas
dec
arpl
insb
mov
scas
mov
out
neg
push
ds
xor
insb
sbb
call
push
aam
addr16
xchg
xchg
rcrb
push
shlb
adc
mov
cmpsb
pushf
xchg
push
je
fimuls
loop
add
scas
mov
dec
jne
ja
movsb
call
addl
fcoml
cmp
bound
or
inc
push
add
cmp
repz
mov
stos
mov
and
jb
rcr
mov
inc
pop
stos
cmp
xchg
sbb
jae
fdivrl
sub
adcl
mov
adc
xorb
add
fimull
inc
mov
inc
mov
and
int3
les
lds
addl
lret
xchg
sub
add
sbb
sbb
ss
and
popf
lret
fsubs
add
sub
push
add
inc
and
pop
pop
mov
out
mov
or
adc
dec
add
adc
add
xchg
pop
clc
hlt
gs
mov
xchg
or
lock
mov
call
or
gs
jne
jecxz
cmc
adcb
lock
add
test
or
test
jp
in
xchg
cmp
adc
xchg
xor
xchg
pop
movsl
push
mov
sbb
test
xor
js
add
aaa
je
js
sub
cs
xchg
insb
pop
pop
xor
or
xor
aas
xchg
ret
sarb
std
or
lret
mov
push
sbb
cmp
repnz
pusha
pusha
testb
dec
xlat
mov
dec
inc
ucomiss
inc
sbbl
add
lahf
cmp
int
nop
add
pop
bound
dec
dec
add
and
lds
mov
add
rcl
pop
outsl
repnz
push
nop
and
scas
add
inc
jmp
adc
inc
loopne
and
sbb
pop
loop
adc
pusha
popa
repnz
insl
in
sbb
sbb
jno
xchg
push
jl
aam
test
and
aas
sbb
popa
pusha
or
sbb
adc
add
pop
push
cs
add
in
sub
and
sbb
loopne
les
cmp
pop
xor
imul
arpl
jae
mov
or
jge
push
push
psubw
out
and
ret
adc
mov
stc
or
mov
stos
xor
mov
rorb
cld
jnp
inc
ja
mov
pop
add
push
mov
mov
jge
pop
jae
mov
xchg
inc
mov
out
popl
stc
and
or
ss
or
and
mov
fsubs
xor
nop
adc
arpl
insb
pop
outsl
xchg
out
stos
sbb
dec
sub
xchg
mov
stc
pop
testl
add
add
push
mov
push
outsl
pop
leave
dec
pop
lar
leave
lcall
shll
pop
add
ret
repz
add
rcl
add
bound
or
cmp
dec
jbe
push
mov
xor
sbb
dec
call
inc
shlb
inc
inc
sub
out
inc
rolb
ret
out
cmp
sbbb
mov
inc
and
push
add
push
or
cmp
pop
mov
adc
or
or
mov
and
cmpl
insb
pop
or
xor
stc
xchg
data16
add
int
mov
lock
ret
add
add
sbb
aaa
push
adc
lret
add
add
inc
sbb
shr
sbb
push
add
aad
addl
push
loop
das
xchg
call
jo
mov
leave
mov
iret
add
shlb
inc
loopne
sbb
add
push
and
or
jnp
stos
sbb
ror
push
out
out
xorb
xchg
cmpsl
rolb
sub
orb
les
std
pop
les
jb
fisttpl
movsb
sub
adc
mov
xchg
jae
add
daa
loop
add
push
pop
push
push
adc
add
xor
orb
arpl
push
les
mov
xor
push
int3
dec
cmpsb
sub
inc
es
add
in
or
push
in
jge
fstpl
xchg
test
jbe
loope
ret
js
jl
out
push
mov
adc
inc
stos
sbb
adc
sub
adc
xchg
inc
mov
arpl
inc
mov
std
mov
pop
sbb
mov
inc
dec
sbb
pop
jns
nop
addl
addb
gs
dec
or
xchg
jp
jbe
mov
add
in
and
pushf
arpl
add
fucom
dec
push
pop
add
add
or
andb
xchg
loop
dec
in
sbb
ds
bound
xchg
xlat
inc
mov
jne
ja
adc
xor
push
in
fldt
mov
adc
push
add
cmp
mov
add
mov
inc
cmp
loope
pop
aaa
pop
notb
cs
nop
fcmove
mov
or
cmpsl
pop
fs
cmp
dec
pop
mov
and
adc
fwait
je
andb
and
push
repnz
pusha
repnz
arpl
mov
lods
adc
inc
or
push
popl
aam
and
lods
jns
adc
adc
addr16
shrl
mov
sub
inc
sub
xor
sub
and
cltd
cmpsb
jge
aad
subl
push
dec
mov
mov
and
mov
ds
pop
inc
sub
pop
sbb
push
imul
sub
push
lods
sub
enter
les
hlt
adc
add
jo
filds
push
cwtl
push
or
or
inc
or
and
cmp
jno
and
add
lahf
push
add
jmp
jge
or
in
lds
out
mov
mov
sub
cmc
mov
inc
add
lods
and
jmp
test
mov
loop
call
add
fsubrs
cwtl
mov
adc
mov
push
sbb
and
and
mov
pop
mov
cmp
addb
test
mov
add
inc
lock
xor
cli
enter
fidivrs
int
cmp
sahf
or
xlat
dec
data16
and
mov
adc
and
inc
add
pop
pop
pop
mov
xor
je
add
sti
sub
inc
sarb
add
repz
dec
push
stc
mov
mov
popa
add
lods
push
arpl
pop
jb
xchg
cltd
mov
insl
and
or
iret
add
or
and
pop
cmp
test
aad
enter
jo
cmp
mov
orb
or
sbbl
testb
dec
arpl
sbb
es
cwtl
pop
addb
fdivs
mov
push
ficoml
test
mov
scas
mov
dec
rcrl
jmp
rolb
loopne
mov
addb
or
cmp
sbb
mov
jg
add
push
int
pop
sub
pop
mov
push
movsb
stos
xlat
mov
xor
push
mov
mov
out
rclb
dec
cltd
clc
repz
lods
ja
or
sbb
push
cwtl
jle
rcrb
fildl
push
add
sbb
mov
inc
ror
sbb
mov
xor
dec
mov
pop
jne
flds
lods
imul
mov
out
inc
nop
mov
cmp
js
or
or
call
mov
fwait
adcl
adc
add
xor
push
jl
xor
cltd
lcall
pusha
dec
xchg
call
daa
cmpsb
out
sbb
adc
push
fmull
push
add
dec
dec
idivl
add
mov
cmp
addl
test
hlt
in
sbb
xor
data16
mov
or
push
movsl
inc
rcrb
frndint
inc
cmpsb
sub
pop
xor
leave
test
pop
xor
popf
rolb
and
mov
test
cli
test
and
add
mov
inc
dec
dec
out
cwtl
and
movb
sub
ret
dec
add
adc
xor
xor
mov
in
jnp
mov
lahf
mov
cmc
fcoms
or
dec
jg
sarb
adcl
shll
pusha
xor
xor
popa
adc
mov
daa
add
push
das
add
pop
and
push
rcl
xor
jb
add
adc
sbb
dec
add
shlb
shrd
add
jl
xor
inc
push
xchg
lea
hlt
lods
shll
cmp
jb
dec
je
or
push
imul
int
je
pop
or
mov
decl
xor
inc
inc
cmp
or
rcll
cwtl
daa
xor
add
out
ja
pop
add
pop
add
jnp
push
sub
or
xchg
inc
cmp
fcoms
jge
icebp
xor
pop
movsb
inc
cmpb
inc
rolb
mov
mull
adc
imul
adc
cmp
push
mov
jl
int
cltd
or
cmp
inc
mov
ss
pop
jae
add
adc
mov
loope
sbb
int3
add
cmp
add
xchg
inc
cmp
add
jbe
aad
mov
cmp
inc
push
cmp
cs
or
int3
jnp
push
orl
add
inc
rcrb
xorb
jmp
add
jne
adc
int3
cmp
or
adc
lock
out
sbb
dec
xchg
insl
and
or
xchg
test
push
add
xor
pusha
lods
pop
inc
pop
pop
in
or
and
mov
mov
mov
push
add
enter
lea
inc
jp
je
sbb
bound
or
fwait
sbb
cmp
xor
iret
push
out
repnz
fwait
ds
push
cwtl
sub
adc
les
dec
push
imul
xchg
push
add
push
add
push
or
fwait
gs
adc
dec
dec
sbb
add
adc
dec
xchg
in
adcb
or
xchg
mov
inc
pop
pop
gs
pusha
out
enter
xchg
mov
inc
sarb
cmp
and
movsb
shlb
out
add
insb
jb
inc
push
and
cmp
jle
call
mov
cmc
pop
adc
or
mov
lahf
in
rcrl
ljmp
inc
sbb
fwait
pop
jmp
arpl
adc
jmp
add
out
xor
fildl
cmp
in
sub
jge
inc
sub
adc
cmovge
push
push
aad
add
lar
mov
ret
ljmp
add
lret
xor
ds
sar
data16
inc
adc
fldcw
lds
scas
jns
add
and
addl
gs
pop
push
mov
add
mov
push
loop
inc
jle
inc
pop
push
out
dec
and
mov
jb
push
add
and
sbb
insb
mov
mov
sub
and
inc
shlb
pop
xchg
dec
or
aas
add
adcl
es
adcb
xor
mov
pop
mov
inc
orb
xor
or
push
popf
ljmp
push
sbb
cmp
mov
sub
push
add
push
add
imul
sbb
push
mov
mov
add
inc
cmpsb
bound
push
inc
sbb
out
cs
out
and
adc
inc
shlb
sahf
sbb
add
sub
lcall
adc
or
add
add
daa
pop
in
mov
push
mov
sbb
inc
in
lahf
test
fsubr
adc
or
movsl
adc
push
push
inc
shlb
xor
xchg
push
js
pop
or
jmp
and
and
rol
or
push
shrb
jno
mov
lret
rol
xor
mov
sub
mov
add
and
fwait
xchg
adc
push
rorb
shl
frstor
or
mov
sarb
leave
xchg
add
pusha
xor
pop
scas
pop
inc
cmp
jle
or
loopne
in
cwtl
inc
or
and
sbb
add
pop
mov
add
add
xchg
shll
repnz
iret
mov
sub
sub
xor
dec
add
cmpsl
daa
or
mov
fwait
addl
enter
rcrl
mov
xchg
mov
leave
cmp
sbb
mov
int
jns
subb
inc
inc
cwtl
push
hlt
pusha
push
adc
sub
sbb
push
mov
sbb
enter
add
xor
adc
push
xchg
pop
push
jns
or
in
test
mov
mov
xor
add
les
sbb
je
into
les
fcompl
mov
mov
mov
xor
ret
outsl
mov
lock
mov
rcrb
gs
roll
mov
mov
adc
pop
add
sahf
adc
sbb
and
test
test
lret
dec
xchg
movsb
aad
add
sub
out
ret
add
pushf
mov
mov
scas
inc
pop
dec
lret
push
or
addl
mov
jo
cltd
and
cltd
inc
dec
pop
in
push
adc
rcrb
xor
inc
test
push
xor
mov
shll
add
stc
rorb
push
shlb
jb
mov
pop
add
push
add
xor
or
sbb
xchg
dec
adc
out
xchg
sbb
add
lahf
xchg
addb
or
or
out
shrb
dec
and
sub
mov
or
nop
lock
in
mov
iret
mov
mov
cli
and
mov
sbb
and
into
ljmp
shll
addb
and
xchg
gs
xor
pop
sbb
ret
daa
add
add
sbb
lret
enter
adc
fmuls
xor
inc
dec
ficomps
push
inc
or
aam
push
mov
xor
or
fildl
popa
subb
bound
jo
xorl
mov
xor
lsl
and
add
shlb
lds
int
push
push
dec
push
mov
cld
sub
popa
pop
add
rcrl
pop
jae
add
sbb
fldt
sub
stos
or
in
or
out
dec
push
lods
cmp
call
shl
divl
sbb
inc
test
or
adc
sub
xor
in
add
mov
mov
inc
pop
pop
hlt
jle
xor
rorb
adc
rolb
mov
sbb
and
sahf
inc
enter
and
sub
loopne
inc
cmc
push
ret
dec
sub
adc
aaa
sbb
out
ret
nop
add
mov
sbb
add
adc
xchg
mov
dec
adc
idiv
mov
push
scas
pop
add
or
sbb
mov
add
xor
pop
rcrb
or
je
cmp
mov
clc
pop
clc
add
mov
ds
sub
add
or
dec
push
sbb
fcom
inc
pusha
ret
and
roll
dec
mov
and
clc
repnz
jne
sarb
lods
stos
and
and
and
and
xlat
push
or
add
add
xchg
xor
sub
cmp
movsb
or
inc
shrb
andb
test
jbe
or
add
ljmp
lret
gs
sbb
xchg
iret
subl
jo
jp
addl
test
adc
adc
mov
push
pop
stc
adc
test
push
inc
shr
mov
pop
sub
jno
or
nop
das
sbb
and
cmpsb
xchg
ret
add
pop
add
sbb
mov
mov
mov
push
nop
dec
imul
inc
stos
or
pop
adc
pop
jecxz
push
hlt
add
int3
sub
add
sahf
mov
inc
sbb
adc
test
das
aas
sub
cmp
daa
pop
pop
sub
cltd
push
xchg
es
xchg
add
push
cwtl
sbb
or
sub
les
xchg
lds
rolb
mov
inc
subb
insl
add
in
ds
mov
adc
popf
sbbb
movsl
ret
pop
add
inc
enter
add
test
enter
cwtl
rcrb
and
mov
sbb
mov
repz
or
fisttps
and
xchg
stos
adc
adc
mov
add
sub
dec
pop
inc
shlb
add
add
xor
push
pusha
in
addb
mov
or
pop
dec
pop
add
and
or
fildl
add
add
pop
push
movl
scas
rcr
or
jp
xor
sub
les
adc
mov
jb
clc
insb
xor
arpl
or
add
jne
inc
sti
js
adc
add
or
pusha
ror
push
mov
call
xchg
dec
sbb
sbb
sub
andb
movl
fadds
inc
mov
pusha
fbld
stc
cmp
stos
mov
push
sub
inc
or
cmp
movsb
gs
hlt
mov
add
in
add
outsb
adc
movsb
pop
mov
and
jmp
sub
hlt
sbb
xchg
mulb
in
xchg
cwtl
adc
or
je
insb
cmpsl
mov
rorb
retw
popf
inc
xchg
movb
fadds
inc
xchg
sbb
hlt
mov
jno
in
lret
jae
js
xor
cwtl
fs
rclb
ljmp
mov
pusha
push
xchg
xchg
dec
xchg
mov
xor
test
add
sub
inc
and
out
test
pushf
xchg
dec
cmp
lock
sbb
xchg
add
adcb
addr16
shlb
adc
stos
ret
lods
cwtl
mov
jnp
or
ss
or
add
dec
add
addr16
cwtl
xchg
sub
adc
popf
sbb
adc
push
mov
adc
xorb
xchg
mov
fidivs
xor
orl
gs
shrb
jbe
pop
data16
add
push
push
lock
fiaddl
push
or
add
add
pop
xor
pop
in
test
cmc
pusha
sarw
pusha
lock
mov
add
add
clc
push
push
xor
push
or
or
test
inc
xor
add
xchg
xchg
xor
inc
popa
pop
add
int
and
mov
ja
and
xchg
and
push
das
add
leave
lret
adc
ret
mov
xchg
add
sub
xor
adc
int3
jl
cmp
add
xor
addl
and
mov
adc
pushf
xor
sub
xor
test
pop
aaa
verr
mov
pop
add
ss
or
add
lahf
scas
test
rolb
add
ficoml
add
data16
add
imul
xchg
mov
test
mov
insb
jbe
pushw
and
or
or
inc
or
push
ret
add
push
push
mov
or
pop
daa
dec
mov
lods
sub
insl
xchg
cltd
or
sbb
mov
jo
shlb
movsl
rolb
ja
dec
int
mov
xchg
xor
inc
sarb
addb
dec
mov
lods
inc
sub
in
sub
xor
inc
je
pop
push
cli
adc
les
filds
pop
fucomip
roll
testb
outsl
and
sub
sub
jbe
cmpsl
test
sub
ds
pop
jl
xor
jmp
adc
mov
insl
adc
xchg
add
imulb
sbb
stc
and
aam
xorb
add
xor
inc
dec
sbb
pop
lahf
lret
and
mov
mov
xor
pop
adc
mov
les
xor
pop
cmpsl
cs
loope
test
cmpsb
cwtl
fmuls
push
add
mov
mov
add
and
add
dec
push
cmp
add
push
movsb
mov
mov
sub
cmp
cld
or
cmp
xor
or
xchg
xchg
push
sbb
loopne
and
js
enter
inc
aaa
outsl
inc
jl
jle
inc
mov
mov
cmp
sub
insb
or
adc
and
clc
dec
hlt
inc
test
test
sub
dec
or
lods
les
mov
dec
test
mov
adc
test
int3
pop
inc
das
jno
mov
aaa
dec
and
push
cmpsb
rolb
dec
push
and
mov
adc
push
dec
mov
js
mov
adc
xchg
clc
dec
sub
jle
test
cmpsb
adc
mov
sub
push
and
inc
dec
xchg
pop
mov
mov
adc
xchg
clc
dec
sub
andb
push
or
dec
pop
and
or
adc
push
dec
mov
jne
mov
adc
xchg
call
sub
dec
or
sub
or
adc
and
pop
add
test
and
mov
add
inc
das
cmp
mov
dec
dec
sbb
mov
test
adc
dec
pusha
pop
ret
or
adc
xchg
push
dec
inc
pop
loop
adc
mov
sub
xchg
fsubs
or
push
and
adc
bound
dec
pop
or
adc
sbb
pop
loop
adc
mov
int3
and
mov
inc
pop
bound
mov
inc
xchg
pop
dec
and
rcll
stos
test
adc
xchg
add
pop
ret
insb
or
mov
adc
push
inc
or
xor
jo
inc
push
bound
adc
lods
dec
js
mov
mov
pop
mov
mov
and
mov
jnp
test
adc
movsb
dec
cmp
cwtl
stos
les
adc
or
and
mov
adc
mov
rcrb
das
xchg
inc
mov
cmp
and
push
stos
test
adc
lock
jo
inc
sub
xchg
or
adc
jo
mov
bound
adc
mov
adc
and
inc
xchg
adc
orb
ret
xchg
or
adc
dec
sbbb
inc
insl
mov
adc
or
sub
test
movsb
test
lcall
pop
mov
adc
xchg
add
pop
mov
mov
les
cwtl
mov
adc
xchg
sbb
push
and
jno
mov
adc
pop
ret
mov
cs
xchg
pusha
mov
adc
clc
dec
hlt
and
push
ret
dec
or
adc
nop
dec
inc
push
loop
adc
lods
dec
mov
sub
adc
rorb
and
adc
push
inc
or
adc
xchg
pusha
dec
adc
and
and
loopne
les
aam
mov
mov
subb
xchg
mov
jl
test
sub
dec
or
lods
test
mov
dec
andb
mov
pop
and
mov
das
popa
jg
mov
adc
and
cmp
dec
adc
mov
adc
xor
pop
bound
test
and
rorb
push
loop
mov
adc
jo
xor
or
pop
xchg
clc
dec
je
subb
mov
push
xchg
cwtl
dec
inc
pop
loop
adc
mov
push
ret
dec
mov
adc
push
subb
pop
mov
and
sbb
push
orb
mov
and
xchg
loopne
call
adc
mov
sub
xchg
subb
mov
dec
jl
loop
inc
xchg
mov
adc
mov
das
popa
jle
mov
adc
inc
xchg
adc
adc
sub
or
pop
xchg
add
pop
subb
mov
inc
xchg
nop
dec
add
ret
jge
mov
subb
test
movsb
test
lcall
push
loop
inc
pop
mov
adc
sub
pop
inc
sub
dec
shlb
mov
add
inc
mov
inc
mov
pop
dec
and
loope
and
rorb
pop
ret
or
and
push
loopne
call
xchg
push
orb
dec
or
adc
mov
xor
mov
test
enter
jno
mov
cmp
and
dec
dec
rolb
dec
pop
and
enter
mov
pop
dec
movsb
and
or
adc
lock
lock
sub
dec
or
sub
mov
adc
cmp
and
mov
adc
enter
mov
mov
and
and
pop
test
adc
call
sub
xchg
or
adc
pusha
dec
test
inc
cs
loopne
mov
xchg
rorb
inc
ret
adc
push
dec
and
mov
adc
clc
dec
jo
mov
mov
int3
and
mov
inc
pop
bound
cmp
mov
pusha
dec
and
add
loope
or
adc
loopne
push
imul
js
inc
pop
bound
adc
mov
inc
or
or
adc
jo
xor
sub
pop
mov
adc
adc
pop
ret
insb
or
cs
xchg
cwtl
mov
adc
and
dec
dec
sbb
mov
mov
adcl
or
sub
add
adc
mov
mov
adc
mov
sub
push
bound
dec
adc
cwtl
scas
inc
push
loop
adc
xor
and
or
adc
loopne
loopne
cmp
mov
dec
sub
pusha
stos
test
adc
loopne
fs
or
adc
push
add
mov
adc
or
push
xchg
sbb
adc
mov
dec
and
or
adc
xor
pop
bound
inc
fsubl
enter
mov
mov
push
and
xchg
and
call
sub
imul
orb
ret
adc
mov
mov
dec
adc
sub
mov
adc
pop
inc
sub
dec
shlb
mov
and
xor
push
bound
orl
dec
add
inc
sub
pusha
or
sub
test
call
dec
fsubs
sahf
mov
and
and
pusha
dec
add
inc
sub
pop
or
sub
xchg
lock
pop
fcoms
push
nop
dec
shlb
mov
adc
and
or
push
subb
push
mov
sub
xchg
call
fcoml
insb
mov
cs
xchg
and
clc
dec
hlt
xor
sub
dec
or
stos
inc
push
bound
dec
js
ret
xchg
or
adc
dec
les
cs
jle
mov
adc
inc
xchg
adc
adc
dec
inc
and
mov
pop
xchg
adc
pop
ret
cmp
mov
xchg
shl
adcb
pusha
inc
mov
adc
stos
dec
mov
sub
inc
lds
add
pop
loope
mov
scas
fs
mov
aam
push
stos
lret
pop
pop
pop
push
adc
push
and
jne
ror
jle
push
or
aad
roll
cld
mov
dec
outsb
orb
nop
inc
add
sub
xchg
pop
xchg
sub
push
movsl
les
rolb
push
daa
push
sbb
adcb
push
daa
push
push
or
xchg
iret
xor
inc
movl
std
cmp
and
and
push
fstpt
pop
test
call
mov
ficomps
mov
fidivs
and
mov
mov
pop
cmc
inc
in
xor
imul
aas
aad
cld
mov
push
cmpsl
sbb
pusha
cmp
repnz
sbb
cwtl
pop
pop
xor
sub
inc
ret
cmpsb
jb
xorb
lds
mov
andl
incl
mov
test
xor
movsl
cmp
call
test
sbb
push
cmp
movsl
mov
or
in
sbb
jnp
dec
sbb
popa
cmp
adc
imulb
sub
popf
dec
jmp
fisubl
mov
enter
cld
fmul
mov
arpl
stos
cld
js
xchg
cmpsb
mov
jae
jns
xchg
roll
insb
scas
mov
adc
xchg
jp
popa
mov
xor
jecxz
rol
bound
push
mov
jno
dec
ss
push
inc
fst
popf
ds
xchg
movsl
and
pop
je
pop
or
jo
out
pop
mov
int
sbb
add
push
les
popa
push
pop
loopne
or
scas
sbb
push
and
call
subb
xor
sub
sub
and
dec
mov
aad
in
or
inc
jb
outsl
pusha
mov
jle
mov
push
push
adc
or
dec
sbb
fucomi
fiaddl
decb
inc
mov
sub
push
and
mov
xorb
ja
int3
lock
test
jbe
jo
mov
in
mov
pop
inc
jmp
xor
inc
ficompl
jne
push
fcoms
dec
push
stos
lahf
pop
adc
decl
mov
adc
jg
or
fsubp
roll
inc
or
jbe
xchg
cmpl
pop
loopne
pop
add
je
pop
je
mov
fucomi
pushf
loop
fadds
jno
gs
test
inc
pop
lds
loopne
sbb
jmp
pop
inc
cmp
adc
and
cmc
fwait
jno
out
inc
push
add
mov
into
cltd
mov
adc
lods
pop
aad
pop
and
jmp
fimuls
add
jno
jge
gs
js
and
lcall
fs
dec
jmp
mov
movsl
pop
movsb
cltd
mov
mov
sbb
stc
cs
hlt
xlat
adc
sti
mov
xor
xor
fldcw
push
sub
nop
jg
leave
push
or
dec
addr16
popf
rolb
jbe
nop
out
jne
lea
orl
or
push
jae
push
out
or
xchg
xor
xchg
mov
cmp
call
movsl
and
sbb
or
and
cld
mov
xor
sub
or
in
inc
pop
rolb
push
stos
pop
inc
jge
or
jge
pop
cvttps2pi
hlt
jno
inc
pop
pop
pop
ss
push
negb
imul
lock
or
sti
test
in
mov
push
out
cmp
pop
icebp
or
aaa
push
insl
add
cld
popa
adc
pop
pop
inc
hlt
data16
bound
push
ret
push
jno
mulb
jle
mov
xor
xchg
jmp
popa
or
ret
mov
mov
or
xchg
cmpsb
shl
iret
loop
ss
stc
add
mov
mov
xchg
xchg
sub
mov
test
loop
sub
cmpl
in
sub
insb
mov
inc
leave
lret
xchg
sbb
fnstcw
js
xchg
push
push
add
iret
cmp
mov
dec
or
jo
les
fs
icebp
push
pop
mov
jae
ficoml
dec
nop
inc
mov
xchg
jno
inc
call
sub
js
jbe
sbb
fistl
inc
xor
in
and
xchg
add
addl
dec
add
lods
cmpb
adc
addr16
add
add
or
pop
jg
add
pop
lahf
nop
jecxz
adc
dec
jmp
mov
add
cmp
add
insl
sub
sub
inc
cli
inc
add
jge
push
popa
sub
dec
popl
xchg
sub
xor
dec
adc
call
adc
adc
sub
xchg
sbbb
jno
xchg
js
sbb
and
or
adc
cmp
mov
imul
add
and
push
dec
inc
pop
stos
sub
arpl
mov
icebp
xchg
and
adc
inc
dec
movsl
sbb
adcl
mov
lock
mov
jle
and
in
mov
push
xlat
stos
ljmp
adc
icebp
push
xor
push
pop
adc
push
aad
or
pop
and
ficoml
adc
insb
sbb
stos
adc
in
loopne
pusha
aas
dec
daa
rorb
popa
inc
nop
push
jl
push
inc
dec
vcvtsi2ssl
cwtl
push
xchg
pusha
or
les
jp
pop
or
and
xchg
call
adc
mov
add
rolb
js
push
inc
lea
inc
lds
push
push
add
rcrb
cmpsb
repnz
push
cmp
dec
addl
icebp
stos
add
push
aad
sub
adcl
mov
and
out
push
test
scas
stos
aad
push
gs
lret
push
or
adc
adc
pop
nop
clc
imull
movsl
nop
xor
pop
adc
and
xor
push
inc
push
or
xor
cmp
pop
cmpsl
test
dec
inc
mov
dec
cs
fmull
bound
inc
enterw
push
pop
push
push
xor
adc
je
clc
cmp
pusha
mov
mov
mov
sarl
aas
repnz
xchg
leave
or
stos
sub
in
aas
xchg
in
sbb
pop
daa
call
dec
pusha
aam
or
or
adc
sti
je
or
pop
out
mov
adc
sbb
sub
enter
inc
sub
jbe
add
mov
add
inc
push
cwtl
jb
or
inc
cmpsb
sub
mov
xchg
fs
repz
push
push
sti
cmp
sbb
test
pusha
xor
ret
in
fadd
cmpsl
dec
or
cltd
xor
mov
dec
and
shrb
push
pusha
cmc
cltd
inc
lock
jmp
push
xchg
mov
rorl
push
dec
aam
push
orl
xchg
icebp
pop
rolb
outsl
fcompl
adc
andl
addl
xchg
dec
movsl
jns
inc
and
add
cmp
outsl
cmpsb
xchg
jge
xchg
cs
inc
mov
sbb
xor
lods
rclb
inc
jmp
cs
mov
mov
dec
mov
lcall
lcall
repnz
adc
mov
dec
int3
cwtl
xchg
mov
ret
adc
or
xor
rcrb
sbb
les
adc
pusha
enter
mov
js
cltd
gs
cmpsl
es
and
ljmp
xor
sub
push
sub
push
cmp
insl
mov
lea
test
lods
xor
cmp
rcl
mov
mov
pusha
mov
lods
mov
arpl
aaa
daa
mov
inc
and
shrl
data16
cmp
dec
adc
dec
pushf
dec
and
movb
roll
sub
and
mov
xor
sbb
dec
aam
ljmp
test
arpl
push
in
or
xchg
add
adcb
and
lods
int
add
outsb
or
test
mov
xor
inc
subl
cltd
nop
roll
test
add
jnp
test
add
and
jb
xchg
es
and
mov
cs
cmpsb
mov
dec
test
outsb
mov
sub
add
bound
add
push
movsl
fs
adc
test
pop
test
inc
inc
mov
movsb
push
xchg
pop
mov
pop
adc
dec
rcll
mov
jge
mov
daa
adc
mov
je
dec
ss
jecxz
add
sub
shlb
adc
sub
loopne
add
mov
rolb
adc
xchg
and
xchg
xchg
rol
xor
add
or
mov
cmp
inc
lret
mov
xor
push
and
or
dec
xor
adc
sbb
xor
add
int
inc
dec
pop
mov
addl
test
bound
rcrb
jno
xorb
or
movsb
pop
inc
add
adc
mov
sbb
addr16
push
or
rorl
add
push
sbb
mov
xchg
pop
test
and
xchg
sbb
add
or
shll
push
add
mov
gs
inc
add
xor
cmp
push
sbb
ret
test
stos
jmp
and
test
inc
int3
test
pop
lods
xor
add
sbb
xchg
imul
add
cmp
add
aas
aaa
lcall
mov
push
rclb
and
add
add
sbb
rolb
add
les
int3
add
cltd
push
and
pop
test
lea
andb
push
xchg
ret
mov
mov
ljmp
rolb
shl
pop
loop
adc
dec
test
clc
stos
les
mov
dec
inc
and
mov
adc
cmp
push
subb
in
mov
ds
cmpb
or
adc
pop
bound
jbe
movsl
test
mov
movsl
and
mov
dec
mov
movsb
test
mov
stos
sbb
aam
or
pushf
xor
and
push
cmp
and
or
xor
js
repnz
out
fs
jmp
pop
imul
loope
fstpt
fidivs
iret
clc
aam
jecxz
push
jo
in
push
ss
dec
adc
out
and
subb
ljmp
xchg
lock
outsl
cld
insl
in
shll
cmp
jns
inc
repz
loope
outsl
pushf
mov
loopne
fnsave
jmp
ja
xor
push
in
lcall
push
es
xor
dec
scas
cli
and
sbb
cli
jmp
shl
xchg
cmc
ds
mov
inc
cmp
sbb
sbb
fsubrl
lds
ss
lcall
cltd
jae
divb
iret
xchg
addr16
in
jns
dec
arpl
imul
shl
xor
dec
adc
jge
jne
adc
mov
fldln2
stc
into
pop
pop
jb
mov
getsec
daa
addr16
sub
pusha
out
dec
or
cwtl
aaa
std
mov
jnp
sub
pop
cmp
cld
hlt
sti
dec
adc
pop
outsb
lock
std
shrl
cli
mov
adc
cli
in
jl
mov
je
ss
rcr
jl
ja
into
in
lods
aaa
pop
mov
mov
jmp
xchg
inc
sbb
xor
fidivs
repz
sub
mov
dec
jb
ja
aam
sub
daa
fidivrs
scas
xor
cmp
cwtl
out
mov
aam
pop
faddp
popa
arpl
stos
xchg
mov
adc
dec
std
cmc
into
xlat
sbb
jge
inc
je
into
hlt
movsl
daa
push
std
dec
dec
pop
test
mov
pop
lahf
test
inc
ja
jmp
ljmp
mov
push
addr16
les
pop
sub
xlat
sti
inc
jo
xor
popf
arpl
mov
xor
pop
test
and
jne
fdivrl
mov
push
pop
and
jne
mov
pushf
mov
add
movsl
sub
insl
cmpsl
and
inc
xchg
call
mov
and
pop
out
cmpsl
xor
arpl
mov
mov
sbb
lods
mov
std
int
repnz
pop
inc
pop
jbe
push
aas
into
hlt
pop
pop
lret
fidivs
bound
iret
dec
ja
mov
jno
or
lds
push
lahf
inc
mov
cmpsb
gs
pusha
adc
mov
jge
jmp
rcrb
pop
pop
and
test
les
xchg
outsb
mov
test
xor
pop
stc
cmpl
incb
mov
add
adc
add
add
add
add
add
add
aad
xchg
and
inc
std
adc
push
jp
jmp
jns
add
xor
loop
xchg
lret
inc
clc
push
or
or
ret
jmp
jo
add
or
test
stos
test
mov
lods
and
xchg
lret
pop
add
scas
je
clc
ret
ja
add
fmuls
add
inc
or
call
nop
daa
inc
inc
addr16
add
scas
adc
inc
mov
orb
sbb
popa
or
je
mov
mov
inc
xchg
cwtl
aas
adc
push
sbbb
adc
cs
lahf
xchg
and
loope
and
pop
sbb
sub
insb
xor
mov
xchg
test
jns
ljmp
jg
push
inc
dec
out
or
fstl
jecxz
push
lahf
xchg
inc
cmpb
add
int3
mov
add
sbb
out
inc
popa
sub
mov
inc
jae
mov
add
pop
and
xchg
inc
add
stos
jb
rolb
push
outsb
outsl
cmp
dec
push
add
nop
lods
or
and
cmp
add
and
addr16
repnz
sub
push
adc
js
adc
xor
pusha
add
push
and
into
fiaddl
push
cmp
adc
shl
test
push
adc
xlat
mov
loopne
adc
add
imul
nop
inc
cmc
addl
push
or
hlt
xchg
das
add
push
fdivrs
data16
scas
or
push
sbb
xorb
std
xor
nop
inc
or
jo
add
pop
jmp
adc
dec
add
or
push
inc
or
dec
or
or
dec
inc
adc
add
add
add
add
add
add
add
add
add
or
and
sbb
dec
and
push
cmp
cmp
xchg
dec
xchg
cmp
inc
addb
repz
jle
dec
add
inc
leave
popa
mov
adcl
aaa
sbb
adc
and
das
mov
pop
mov
call
xor
dec
std
sbb
lret
loopne
fsts
dec
cmpsl
cld
adc
addb
into
and
inc
out
mov
push
cmp
sub
adc
mov
je
or
cld
lds
adc
push
fdivrl
add
pop
outsb
mov
lea
pop
cmpsl
dec
mov
pop
addb
lret
sbb
jg
mov
push
aas
xor
xor
das
clc
inc
pop
push
lcall
sbb
clc
cmpsb
mov
fstpl
adc
icebp
clc
loope
repz
mov
loop
inc
pop
in
subps
jmp
mov
xor
jle
cmpsb
jl
sarb
xor
in
subb
mov
loopne
adc
xor
push
push
mov
push
mov
push
push
xor
push
mov
pop
imul
push
inc
mov
fcomps
sahf
jg
clc
add
mov
movaps
xor
xchg
jecxz
dec
pop
push
ss
scas
int
mov
add
push
scas
fldt
pop
sbb
lds
push
push
mov
loop
xor
jmp
mov
jl
push
dec
xchg
jb
js
je
repnz
cmp
jb
hlt
or
out
mov
fstpt
push
icebp
aam
mov
push
push
jb
or
mov
lahf
mov
jnp
xor
inc
mov
idivb
call
xorb
in
xchg
or
lret
mov
xor
ret
ror
fnstsw
xchg
xchg
add
sub
jb
sbb
cwtl
pop
stos
aad
cmp
ret
sbb
pop
sbb
fcmovnu
loop
xchg
lds
mov
icebp
xor
shlb
roll
jp
and
jmp
pop
mov
sbb
mov
or
loop
repz
pop
cs
sbb
push
inc
test
push
rol
les
adc
fisttpl
loop
xorb
ja
orb
mov
test
add
jno
jl
push
mov
pop
testl
push
xor
mov
iret
adc
push
test
popa
mov
xchg
out
xor
loopne
iret
sbb
xor
cwtl
pop
mov
dec
cmp
mov
inc
sub
imul
lock
jg
pop
rep
sub
cmpsb
adc
divl
mov
outsl
dec
sti
mov
or
push
test
sub
popf
cmc
pop
popa
lods
cmp
mov
fnsave
push
popf
aam
or
pop
in
clc
loope
xor
cmc
cmp
test
in
sbb
pusha
dec
sub
fldz
pop
loop
mov
sbb
fidivs
inc
dec
jns
addb
negl
roll
cmc
jg
add
ljmp
lock
fists
addl
xchg
xor
cltd
and
jnp
icebp
pop
shlb
cld
push
lods
inc
pop
aad
or
mov
inc
inc
push
pop
mov
inc
aam
xchg
push
lret
adc
loopne
adc
or
inc
lret
mov
cmp
mov
jp
xchg
or
pop
push
out
stc
mov
dec
lods
ja
cmp
int
js
or
lock
sbb
cmp
jmp
push
test
out
dec
jmp
jp
inc
pop
fidivrs
imul
mov
iret
xorl
dec
arpl
or
adc
jno
mov
movsb
icebp
pop
mov
aaa
scas
add
mov
cld
out
cmpsb
adc
and
in
fsubrl
add
rorb
lcall
mov
push
dec
sub
jle
xor
and
add
in
lods
or
cmp
or
aad
sub
pop
mov
clc
std
test
xchg
test
fcmovbe
fnsave
stos
fildl
lods
lret
jo
push
mov
das
clc
ret
out
cmp
lods
add
pop
sbb
push
mov
cli
sbb
jl
adc
pop
cs
mov
nop
stos
stc
rclb
cltd
into
in
aaa
mov
into
inc
jge
adc
jo
lock
sbb
jne
pop
in
gs
sub
add
xchg
pop
mov
aad
repz
cmp
adc
mov
adc
xchg
adc
arpl
idivl
in
loopne
sbbl
mov
xchg
orb
into
clc
and
jns
pop
pop
negb
addr16
push
lea
test
add
mov
cwtl
jmp
stc
inc
mov
repnz
ret
pop
push
lcall
into
mov
push
mov
mov
mov
mov
fcoms
ret
cltd
push
std
lds
mov
ja
lods
in
and
sbb
xchg
mov
ljmp
arpl
aas
out
pop
jns
jb
mov
inc
jo
push
xchg
sarl
hlt
sbb
shlb
push
in
lods
test
xor
inc
adc
cmp
fnsave
pop
ret
and
mov
lcall
fldt
push
repz
dec
leave
mov
lods
dec
and
je
sbb
and
pop
ret
lods
adc
push
inc
and
shll
aaa
jae
insl
push
pop
mov
fs
sbb
fists
lods
xchg
push
je
and
mov
lahf
and
sbb
out
incb
mov
lock
mov
mov
into
xchg
mov
call
xor
inc
sbb
dec
sbb
loope
test
xlat
lcall
jp
shrl
and
adc
jl
add
cwtl
pop
add
ja
xchg
and
adc
loopne
inc
sbbb
add
pop
shll
and
jno
sbb
in
mov
adc
fsubrl
cld
nop
mov
lds
mov
add
insb
scas
vfmsubsd
icebp
mov
jb
sub
pop
das
setae
and
pop
je
pop
jb
in
movsb
push
sub
mov
aad
cwtl
jp
cwtl
js
clc
fs
sub
xor
inc
mov
jp
popa
inc
xchg
sbb
mov
sahf
jbe
mov
mov
int
ffree
fstps
data16
jne
add
mov
subl
outsl
mov
sbb
into
mov
xchg
fpatan
les
arpl
cltd
popf
pop
mul
insl
fsubr
sub
in
pop
xchg
mov
decb
ret
pop
or
shrb
rorb
adc
or
cmp
mov
rcrl
mov
js
sbb
psubusw
imull
imul
dec
xor
in
outsb
add
test
adc
popf
hlt
iret
ror
xchg
mov
pop
or
mov
pop
or
fisubl
outsb
in
jge
dec
cs
sahf
push
lret
pop
data16
aad
lods
fwait
ljmp
xchg
scas
adc
mov
repz
mov
add
sbb
cmc
mov
aas
pop
gs
aad
pop
cmp
punpcklwd
push
ljmp
mov
and
stc
and
movsb
jns
in
or
push
pop
insl
sbb
xchg
sarb
rcll
in
lahf
clc
shlb
cmp
inc
cmp
mov
xor
clc
lock
pop
movsb
ds
push
cmp
jle
fwait
pushf
add
jmp
mov
arpl
fbld
rol
dec
cltd
test
adc
mov
and
add
mov
je
pop
jo
dec
push
insl
pop
mov
mov
faddl
lock
add
pop
nop
cmp
mov
aas
les
sbb
stos
push
xlat
cmpl
insb
cmc
out
mov
sarl
sbb
cmp
push
cld
shrd
mov
jecxz
mov
subb
bound
cmp
pushf
in
mov
inc
xchg
jmp
push
jle
jle
mov
mov
lcall
shrl
into
lock
cltd
out
mov
jno
lods
sarb
mov
or
and
mov
clc
mov
pop
sbb
push
sahf
in
sub
adc
mov
test
fwait
stos
jns
test
aam
sub
loopne
push
xchg
cmp
fstl
cltd
popf
pop
movsb
push
lret
mov
fwait
sti
sub
rep
adc
jns
adc
sub
add
jo
cmp
sbb
add
or
pop
js
negb
das
inc
push
sti
mov
push
outsl
or
shll
icebp
pop
cmp
or
aas
jp
and
es
sar
inc
stos
lock
mov
mov
or
pushf
xchg
negl
dec
or
std
jno
test
mov
inc
cltd
xor
mov
xchg
cvtps2pd
pop
inc
mov
dec
pop
cmp
outsb
test
push
add
mov
out
daa
sbb
xchg
push
push
std
dec
xor
push
push
imul
adc
movsl
pop
push
cli
loopne
insb
mov
std
repz
cmpsl
addr16
mov
push
sub
ret
sub
mov
cld
jg
popf
jnp
cmp
das
iret
add
ljmp
xchg
push
mov
cmp
lcall
sahf
popa
ljmp
push
sahf
in
push
loopne
mov
mov
and
mov
mov
cwtl
sub
icebp
mov
sub
inc
add
insb
rorl
shrb
fs
jmp
lret
xor
and
ja
mov
insl
push
cmp
loopne
sub
into
pop
add
test
std
xchg
mov
mov
loope
daa
push
and
test
adcl
mov
push
jno
add
mov
jns
sub
stos
enter
into
gs
shlb
mov
mov
cmp
stos
shlb
ds
movb
shll
dec
fs
lock
sbb
pop
lret
or
outsb
in
loope
mov
shlb
xchg
lock
outsb
sub
in
enter
sarb
inc
pushl
cmp
jg
add
jle,pt
xchg
stos
and
imul
dec
pop
inc
lret
inc
xchg
pop
push
pop
jp
loop
and
sahf
leave
push
test
mov
sbb
jno
xor
push
fdivrp
ret
int
or
int3
push
sahf
out
mov
jo
push
mov
pushf
mov
sub
mov
pop
xchg
ds
test
insb
xchg
roll
call
stc
movsb
es
cltd
xchg
inc
das
cmp
and
xchg
mov
std
pop
mov
mov
dec
in
psadbw
jecxz
or
mov
mov
mov
dec
cmpsl
and
or
add
adc
into
push
cld
adc
pop
test
mov
pop
cmp
inc
int
out
ret
xor
push
out
mov
and
pushf
and
sbb
imul
mov
pop
lret
ss
and
fsubs
inc
add
mov
xlat
cmp
test
sub
es
bound
or
out
and
outsb
adc
fnstenv
push
xchg
jns
dec
in
fcompp
lods
ljmp
dec
push
push
movsb
jbe
ficoms
sub
xchg
inc
mov
mov
dec
fnstsw
xchg
insb
dec
mov
xor
bound
xor
dec
out
shrb
mov
sub
pop
es
mov
sarb
in
loope
push
je
cld
sbb
clc
stc
or
xchg
jnp
das
mov
cmpsb
jbe
adc
jo
push
push
push
pop
xchg
mov
xor
das
dec
sar
lea
push
push
jl
mov
jno
push
lds
jmp
mov
stc
insb
int
jle
push
sbb
ja,pn
dec
xchg
jl
lahf
jg
hlt
icebp
pop
push
outsl
push
pop
cld
neg
loopne
jle
push
and
sbb
mov
dec
mov
mov
cmp
mov
mov
loop
jmp
xlat
sub
les
dec
nop
es
arpl
int
cmpsl
ret
mov
xchg
xor
test
inc
je
ret
mov
cmpsb
fidivrl
sub
mov
cltd
aaa
sub
paddusb
mov
mov
addb
sti
mov
leave
fsts
test
movsl
jge
ds
loop
dec
add
les
mov
into
pop
sbb
lret
mov
mov
lret
test
out
ret
pop
xor
iret
stos
adc
jmp
push
mov
jns
and
add
lds
cwtl
rcll
das
jb
aas
push
ds
adc
shl
push
xchg
sub
movsb
jge
adc
adc
or
pop
or
add
out
mov
cmp
xchg
pop
jmp
push
xchg
sub
loopne
sbb
mov
movsb
test
xor
pop
push
inc
bound
dec
ret
repnz
xchg
enter
xor
jae
or
inc
dec
and
nop
mov
xchg
or
jecxz
std
lret
pop
out
test
repz
push
inc
mov
sub
or
incl
adc
mov
mov
xlat
mov
adc
sbb
adc
das
push
dec
inc
div
pop
and
fsubrs
std
repnz
daa
or
mov
das
clc
lock
aad
lret
or
pop
fprem
subl
mov
aas
lds
inc
add
nop
mov
into
push
fcoml
push
dec
aas
mov
mov
outsl
jmp
cwtl
jge
fisubrl
rcrl
adc
mov
pop
mov
lods
jp
and
ficoml
jae
sahf
cmpsb
xchg
repnz
push
and
mov
sar
jge
clc
sbb
cmp
and
out
mov
lea
jns
sbb
in
mov
mov
test
cmp
xchg
dec
call
test
test
inc
adcl
aaa
sarl
xchg
lret
test
imul
xchg
add
repnz
dec
dec
pop
jo
push
push
cmpsb
pop
xor
rclb
pop
lods
ljmp
out
pop
xchg
orb
ret
add
xchg
jns
mov
inc
push
and
aaa
or
sub
pop
pop
adc
cmpl
into
icebp
stos
cmc
outsb
mov
stc
cmp
dec
pop
je
btr
sahf
or
xchg
cmp
xor
jns
test
das
rcrb
sub
out
das
push
pop
and
loopne
aas
xor
mov
jle
movl
add
mov
or
add
pop
fmuls
shlb
pop
scas
xchg
sbb
mov
call
lds
jl
sbb
mov
jb
aaa
int
inc
jecxz
mov
ljmp
push
xor
aam
mov
or
mov
pusha
stc
adc
loopne
in
sbb
or
sbb
add
arpl
mov
mov
push
outsb
mov
mov
jbe
xor
sbb
int3
jno
daa
pusha
mov
xchg
sub
ret
cltd
cmp
xchg
adc
ljmp
ret
inc
dec
sub
fidivl
gs
xchg
dec
mov
cmc
push
lods
neg
shll
scas
and
jmp
jge
or
push
arpl
jo
jl
mov
repnz
xorl
push
jnp
mov
sbb
pop
mov
movl
sub
jl
cld
sti
pop
fcoms
lret
ret
xor
int
xchg
js
loope
fwait
xor
sub
inc
inc
sbb
movsb
loopne
shrl
pop
fld
fmul
mov
daa
or
jle
ljmp
das
sbb
ss
xchg
jmp
cmpsb
lock
mov
mov
sbb
rcrb
dec
lock
imul
fiadds
clc
fnstenv
push
in
xor
xor
dec
sbb
das
scas
sub
push
jp
xchg
sbb
loope
cmp
lods
push
stc
inc
mov
sub
insl
lea
jae
jge
sbb
aad
mov
cmp
add
imulb
mov
ret
popa
mov
or
lock
xchg
jbe
cmp
xor
push
aad
adc
sub
fisttpl
cmp
in
call
xor
loope
xlat
cltd
aaa
daa
lods
xchg
mov
testl
lods
jae
dec
clc
and
and
or
jg
hlt
iret
pop
xor
ficoml
test
dec
pop
shlb
jge
sub
push
pop
ja
filds
hlt
xor
mov
and
shlb
dec
imul
xchg
into
adc
xor
fsubrl
in
jmp
add
pusha
je
pusha
ficompl
rolb
pcmpeqw
lea
movsl
adc
mov
and
aaa
push
and
sub
lods
aad
pop
inc
rcll
jecxz
xor
add
or
push
shrl
jge
lret
inc
jle
sub
sbbl
mov
dec
push
add
mov
sub
sbb
adc
lcall
sbb
pop
enter
imul
leave
inc
test
punpckhwd
icebp
push
mov
mov
push
jns
scas
rcrb
mov
jnp
adc
fs
rclb
inc
mov
cmp
ret
cs
xchg
push
add
loope
mov
jo
cltd
add
dec
movl
stos
pop
clc
leave
popf
fcoml
jno
mov
imul
jl
sbb
mov
mov
pop
mov
mov
mov
mov
pop
dec
cmp
xor
jecxz
mov
inc
ljmp
and
cmpsb
sbb
lods
adc
add
ds
ljmp
ljmp
add
add
push
pop
mov
clc
inc
clc
jo
inc
fnsave
ljmp
into
add
pusha
mov
mov
int
out
inc
cmp
or
int
movl
adcl
inc
faddl
in
shrb
jo
jp
ret
loope
add
shr
movsl
pop
xchg
stos
mov
sti
fdivrs
fisubrl
push
xorb
jecxz
inc
push
shll
repz
stos
pop
insb
and
ja
sarl
cmp
ret
push
test
sbb
out
test
std
int3
lea
stos
sbb
xor
inc
fwait
push
xchg
cmc
rorl
dec
add
push
aad
scas
mov
fwait
push
jno
and
pusha
stos
inc
cmp
stos
ficoml
arpl
enter
stos
cmpsl
aad
clc
mov
adc
mov
mov
mov
mov
or
or
mov
jmp
cmpsl
test
mov
dec
dec
aad
xchg
ljmp
hlt
test
cld
add
inc
push
pop
xor
adc
or
inc
es
pcmpeqb
cli
les
lods
nop
adc
in
ljmp
mov
stc
push
into
xchg
and
fmuls
inc
jns
pop
push
mov
xchg
movsl
mov
xchg
mov
xchg
fwait
pop
dec
add
lret
fs
inc
dec
aas
pusha
mov
adc
loop
xor
xor
jne
xchg
jno
jae
jl
dec
divb
outsl
or
lea
lods
repz
into
cmpsb
js
outsl
xor
adc
jle
inc
xor
in
sbb
imul
out
jle
jmp
jb
jmp
add
jp
mov
or
xchg
movsb
dec
add
ret
jo
test
pop
jno
xchg
int
loop
js
lret
adc
lods
inc
fwait
mov
xor
js
enter
mov
adc
ret
es
movsb
push
fstps
stos
jmp
enter
sub
fisttpll
cmp
mov
fiaddl
lods
fidivrs
sub
cld
scas
cmc
icebp
cltd
mov
gs
loop
or
xor
dec
dec
sbb
mov
or
cwtl
sbb
lahf
inc
lret
stc
lods
test
cmpl
arpl
cmpsb
mov
sbb
dec
pop
push
cltd
aaa
and
pusha
pop
cmpb
test
aas
inc
cli
sbb
addl
into
or
jae
mov
pusha
push
test
and
sbb
negb
je
and
gs
loope
cmp
subl
pop
sub
jp
and
incb
out
push
xor
scas
lret
idivl
lods
mov
js
xchg
xor
xor
jecxz
jge
in
push
mov
and
cmp
mov
mov
dec
clc
fidivrl
enter
iret
and
movsl
outsb
and
inc
sbb
sbb
lock
fmull
or
ja
loopne
addr16
cmp
shll
sbb
shrb
inc
mov
pop
fwait
jno
mov
xlat
sub
adc
jecxz
jecxz
pusha
or
xor
je
mulb
icebp
scas
lock
shll
xchg
push
and
mov
orb
adc
jmp
aaa
pop
std
gs
fsts
pushf
dec
clc
inc
movsl
xchg
xchg
mov
test
xor
movsl
out
pop
pop
ss
pop
jp
shl
aad
loope
sarb
push
imul
imul
pop
insl
mov
ljmp
mov
jo
jae
push
idiv
add
pop
adc
mov
pop
rcrb
mov
es
jle
mov
jge
mov
pop
popa
sbb
repz
cs
push
stos
pop
decl
dec
scas
jne
jae
jo
lahf
sub
or
call
faddl
fdivs
mov
std
loop
adc
imul
cmc
incb
adc
addr16
insb
lods
sti
mov
fpatan
test
ja
sub
sub
cld
pop
movsl
ficompl
scas
mov
stos
stos
jne
popa
jb
jge
xlat
popf
and
lds
shll
push
mov
jl
xor
dec
mov
mov
fsubrl
data16
jle
xchg
cmp
sbb
xchg
xchg
arpl
cld
nop
rol
hlt
jge
repz
xor
push
pop
leave
push
mov
dec
and
add
test
lods
shrl
fisttpll
sub
out
jp
cwtl
push
jb
imulb
xchg
and
movsl
and
ljmp
mov
icebp
mov
repnz
out
mov
sbb
fsts
fsubr
adc
cli
add
neg
or
mov
or
inc
push
negb
imul
lahf
cwtl
repnz
mov
and
stos
sub
movsb
sahf
pop
out
aas
or
add
stos
fucom
repz
xchg
lock
lock
aam
into
xchg
sub
dec
xor
xor
pop
jnp
adcl
insb
jge
push
or
mov
daa
mov
or
pop
ds
aas
je
mov
xchg
add
ljmp
push
pop
lret
dec
push
mov
jle
and
icebp
mov
dec
aam
lahf
in
inc
cmpsb
or
mov
dec
adc
je
lods
mov
sub
xor
push
jp
jle
cmp
or
fnstsw
jle
bound
test
hlt
lods
mov
outsl
xchg
mov
mov
cli
xchg
push
adc
mov
lea
das
adc
jge
push
inc
adcb
pop
dec
test
push
xchg
cmpsb
sarl
xor
sub
outsl
stos
nop
sub
sti
xorb
xor
bound
cmp
inc
out
leave
fsub
roll
jnp
lcall
inc
adc
add
sahf
lret
pop
insl
subl
pop
sbb
adc
lods
cwtl
clc
lods
inc
push
mov
out
cmp
sar
inc
aas
mov
push
fnsave
push
mov
shlb
pop
insb
pop
mov
pop
addl
enter
movsl
lret
jge
add
test
fwait
insl
xchg
sub
xor
dec
adc
and
jecxz
pop
cmp
int3
ja
and
lods
pop
popa
mov
in
pop
mov
cmp
adc
jmp
sbb
inc
and
insb
push
xchg
jp
sub
jne
iret
lcall
mov
rclb
pop
scas
je
mov
lcall
test
mov
pop
cltd
in
add
sahf
int3
nop
repz
sub
dec
and
outsl
adc
mov
nop
inc
jne
sbb
fbstp
imul
mov
cmp
std
cmp
das
xor
repz
sbb
shl
loopne
inc
mov
and
and
jmp
aas
cltd
call
cmc
stos
aas
cmp
mov
mov
fisubl
dec
mov
pop
into
popf
push
xchg
mov
adc
pusha
and
js
or
xor
jns
sbb
jmp
mov
pop
lock
scas
icebp
arpl
ja
nop
dec
cmp
ja
push
push
lret
mov
adc
mov
mov
xor
lahf
push
movsl
clc
jbe
or
inc
inc
jno
xchg
or
arpl
sbb
fdivr
mov
testl
std
test
xchg
int3
cld
daa
cmpsl
add
subb
jae
push
shl
push
lods
mov
insb
push
movsl
sbb
mov
mov
pop
sub
insl
stos
ds
leave
insl
out
adc
ret
xor
imul
cmp
enter
outsl
mov
push
push
insb
jl
iret
mov
pop
fmuls
xor
out
enter
xchg
adc
std
or
icebp
ljmp
in
rcr
ret
add
into
dec
cmpsb
sbb
or
in
in
xor
mov
movl
scas
or
dec
int
cltd
movsb
or
and
mov
sub
out
test
es
movsl
mov
cmp
out
stos
ljmp
jne
adc
pushf
test
cmp
clc
cmp
mov
insl
loope
stos
lahf
push
and
inc
mov
insl
rcrb
inc
or
xchg
filds
mov
pop
sbb
cs
rol
xor
xor
incl
out
pop
or
jp
shlb
inc
push
adc
jae
inc
shl
aas
cmp
mov
cld
loopne
rorl
jecxz
lock
lar
cmp
and
push
fdivl
scas
mov
mov
cwtl
pop
push
clc
xchg
mov
aas
cs
outsl
jbe
adc
lret
aas
mov
adc
subb
mov
bound
and
add
aaa
dec
mov
jge
adc
add
fisubrs
test
fldl
std
out
subl
out
test
xchg
stos
sub
orb
pop
jg
xlat
nop
pop
add
xchg
inc
in
dec
add
push
mov
cmp
jge
scas
in
sub
mov
xor
push
in
adc
or
xor
in
fidivrs
sbb
cli
mov
imull
jne
stos
dec
fldl
loope
outsl
inc
frstor
subl
jnp
and
gs
sarb
mov
pop
into
mov
cmp
addr16
add
xor
mov
mov
fimull
iret
jp
jge
cmp
jmp
out
inc
jne
mov
xor
dec
pop
inc
sti
xchg
sub
js
push
push
test
add
setbe
negb
iret
mov
push
sub
inc
mov
cld
jmp
paddw
jb
lds
scas
mov
lods
cs
cmp
cmp
or
and
outsl
dec
adc
inc
daa
cmc
in
aad
loope
sbb
es
mov
push
popf
leave
jno
mov
les
pop
scas
imul
xlat
and
xchg
and
test
mov
jecxz
popf
subl
insb
mov
dec
test
mov
mov
mov
push
push
stos
jle
hlt
stc
nop
lahf
fbstp
dec
xor
mov
bound
inc
mov
mov
sub
mov
iret
push
in
inc
dec
adc
dec
pop
je
pop
jg
sbb
cmp
shr
repnz
lock
imul
fcomps
fstpl
fisubl
cmp
push
add
pop
ficomps
inc
js
lahf
inc
dec
lea
mov
test
ds
mov
dec
rcrl
outsb
mov
dec
ss
or
cltd
mov
std
or
jae
bound
imul
push
sub
icebp
or
jnp
out
fisubrs
paddsb
gs
por
fdiv
out
or
ret
push
mov
insb
mov
imul
nop
mov
mov
dec
sub
hlt
pop
mov
out
inc
sbb
insb
xorb
push
shrl
cltd
push
inc
out
push
lods
cltd
xchg
inc
xor
js
out
rcll
cmp
cmp
lcall
pop
jge
aas
pusha
cmp
and
mov
hlt
data16
or
inc
jmp
sub
orb
test
call
in
xchg
adc
sub
insb
pop
ds
pusha
arpl
das
dec
jns
addr16
mov
push
fcompl
pushf
adc
sbb
jo
jge
and
push
cmp
mov
jmp
les
enter
pop
or
sbb
imul
sub
inc
jp
cmp
adc
inc
fisttpl
mov
and
push
jbe
xchg
and
icebp
fs
das
inc
sbb
pop
xor
pushf
push
sbb
into
xchg
scas
xchg
xlat
push
sub
clc
push
clc
fcomp
aas
jno
shlb
idivb
negl
shlb
push
cld
aad
out
pushf
lock
pop
jo
outsb
and
iret
pop
xor
pop
jge
jmp
jg
in
stc
es
cmpsb
je
jmp
or
adc
lods
push
popf
sub
dec
outsb
xor
xor
or
in
jmp
mov
sbb
stos
mov
push
inc
fmul
pop
addr16
xchg
jb
cli
mov
scas
pop
jl
outsl
push
aam
add
movsb
int3
data16
xchg
dec
inc
das
sbbl
call
add
pop
sbb
jne
jno
into
add
push
ret
repnz
cmc
cmp
push
xchg
aad
sub
sbb
xor
paddd
cld
xor
arpl
mov
mov
ljmp
repnz
sti
push
xchg
orl
sub
xchg
pop
push
push
ljmp
mov
mov
outsb
sbb
push
mov
roll
out
cltd
imul
ret
imul
mov
mov
mov
shlb
lret
pop
stos
stos
sbb
dec
push
push
sub
aad
loop
sar
push
idivb
xor
nop
push
xor
outsl
rcll
sub
and
cmp
out
pop
test
xchg
xchg
dec
out
shlb
dec
jge
cmp
pop
outsl
xchg
arpl
xor
repnz
dec
mov
std
pop
scas
sub
sbb
pop
sbb
push
leave
adc
enter
movsb
scas
sub
test
popf
pop
add
push
inc
mov
mov
test
lahf
pop
pusha
pop
out
add
mov
sahf
jl
mov
ds
inc
popa
lret
fldt
cmpsb
icebp
dec
jno
jecxz
sbb
sbb
popa
scas
loop
insl
out
pop
lcall
pop
aaa
pop
stos
stos
je
mov
sbb
mov
das
cmp
pop
je
inc
push
push
outsl
iret
mov
adc
mov
xchg
addr16
pop
syscall
jge
add
pop
pop
cmpsl
in
leave
test
fwait
jo
mov
rorb
inc
mov
cmp
xor
mov
imul
es
lock
mov
out
sub
xchg
lcall
add
es
es
push
xchg
popa
mov
lea
mov
push
push
mov
mov
jnp
scas
test
lahf
push
push
cld
adcb
test
mov
pop
jo
insb
mov
ljmp
dec
loopne
jnp
lods
int3
pop
xchg
inc
aas
mov
push
scas
movsl
dec
xchg
dec
pusha
inc
rorl
dec
add
lds
cltd
add
jb
icebp
nop
mov
repz
ficomps
imul
jp
push
fwait
lcall
sbb
pusha
pushf
movsb
xor
jl
sbb
loop
jo
outsb
pushl
mov
mov
add
pushf
pop
or
mov
scas
aaa
lock
nop
bnd
jmp
call
sub
subb
psubd
mov
movd
push
mov
sahf
xor
push
das
fcmovu
fisubrl
or
dec
aam
jecxz
fstps
test
loopne
hlt
shrb
fsqrt
repnz
inc
ljmp
push
in
icebp
imul
shll
adc
mov
xchg
inc
loope
out
mov
pop
adc
inc
jb
std
in
pop
mov
cmpsb
mov
sbb
pop
out
jle
insl
sub
lea
dec
mov
jnp
popa
in
mov
add
adc
inc
unpckhps
mov
jmp
mov
pop
stos
add
mov
pop
adc
jno
cmpsl
shl
cmp
ret
mov
cmp
adc
adc
jne
ret
cmp
pop
inc
cs
cmpsb
scas
or
aaa
or
sub
rcrb
mov
mov
cld
xchg
pop
adc
xchg
dec
pop
icebp
mov
mov
push
fstl
lea
outsb
or
mov
xchg
push
mov
adc
dec
add
push
imul
push
mov
mov
mov
xor
cmp
adc
push
ret
mov
xchg
pop
ror
push
movsl
popa
fidivrl
movsl
and
test
out
cs
adc
jne
mov
inc
or
lret
loop
frstor
or
aad
mov
xor
aam
int
movsl
aam
cmc
sub
mov
neg
add
mov
ljmp
clc
loope
cmp
mov
add
dec
enter
mov
xor
mov
das
cli
lret
fiaddl
ss
data16
or
mov
sub
push
ret
xchg
rcl
hlt
in
rcll
fldcw
ja
lock
lds
lds
add
push
shl
scas
lret
nop
inc
cmp
je
lods
sbb
daa
xchg
push
std
mov
pop
adc
jne
or
mov
jg
fldl
testb
out
mov
dec
stos
and
clc
popf
test
imul
cmpsl
pop
adc
cmpb
bound
jl
xor
inc
xchg
fiaddl
or
repnz
nop
clc
adc
iret
loop
mov
pop
push
jle
add
mov
ret
fstps
outsb
mov
rorb
lcall
popf
ja
sub
mov
leave
xchg
adc
cmp
inc
in
mov
add
xor
movsl
data16
mov
and
xor
sub
push
mov
out
mov
inc
dec
adcb
sub
insb
push
inc
sahf
ljmp
xchg
out
push
test
aad
insb
pop
xorl
dec
and
cmpsb
stos
sahf
adc
mov
adc
aaa
fiadds
jne
xchg
pop
cmp
fs
loope
add
mov
cmp
sbb
loopne
aas
lahf
mov
xchg
jl
pop
popa
loopne
and
fidivrl
or
out
pop
add
fstp
ljmp
or
jae
pushf
je
bound
xrelease
aaa
insb
xchg
fisttpll
pop
scas
cmp
movsl
aaa
push
dec
cwtl
xchg
push
adc
push
sti
cmp
cmp
dec
mov
xchg
aam
dec
lods
mov
mov
jns
and
stos
jns
aas
xor
or
and
orb
mov
jle
repz
daa
loop
xchg
and
jmp
out
jb
xchg
bound
mov
sbb
pusha
ja
push
xchg
sbb
popa
iret
mov
clc
add
add
icebp
push
fucomp
fsubs
jg
push
ss
sbb
mov
stos
push
ficoml
dec
or
jbe
in
mov
xchg
mull
inc
fwait
test
adc
mov
scas
jle
stos
pop
mov
in
push
lods
jge
mov
sbb
icebp
inc
out
lret
adc
pop
mov
shll
jmp
xchg
mov
cmpsb
fistl
fistpll
stc
jnp
push
xor
mov
movsl
aam
and
incb
push
repnz
popa
lahf
cmp
test
adc
incb
lods
outsl
mov
stos
jl
sub
jecxz
cwtl
jle
inc
aam
lret
xchg
jp
pop
or
ds
call
icebp
movb
inc
pop
icebp
clc
xlat
xor
movsl
jae
adc
pushf
pop
test
cmp
dec
rorl
or
mov
mov
shlb
xchg
outsb
in
fidivrl
inc
gs
cli
sub
dec
sarl
jno
xchg
pop
adc
add
mov
dec
lcall
mov
or
jge
mov
cs
data16
xchg
shl
mov
sub
rclb
push
lcall
adc
mov
cld
add
out
std
xchg
jns
xor
std
inc
xor
rcrb
outsl
pop
or
scas
cs
movsl
stc
movb
push
dec
iret
iret
shl
into
sbb
repnz
rolb
push
jns
cltd
out
call
push
push
adcl
adc
xchg
dec
dec
push
vpmullw
push
xlat
jbe
scas
jmp
imul
insb
das
jle
jbe
xchg
mov
nop
adc
pop
ja
lods
pushf
ret
dec
cltd
adc
add
cmpsl
push
repnz
loop
das
shrl
imul
mov
invd
or
jne
xchg
into
adc
dec
mov
mov
sub
test
scas
mov
push
fmuls
cmp
and
push
mov
mov
mov
fneni(8087
xchg
dec
or
jbe
loopne
mov
push
aam
repz
aam
mov
push
mov
mov
push
cvttps2pi
mov
xor
fistpl
pop
push
xchg
adc
inc
mov
sbb
nop
jo
sub
in
inc
aam
sub
stc
inc
call
subb
out
dec
mov
clc
loope
hlt
clc
pop
add
call
xlat
cld
inc
test
popa
adc
lods
inc
in
and
sub
mov
loope
push
js
xor
imul
jecxz
mov
sbb
sbb
iret
pop
or
pushf
fsubrs
dec
nop
or
and
es
mov
xchg
push
lret
sbb
cmp
cs
stos
jnp
out
inc
sub
pop
pusha
addl
push
cli
push
imul
into
out
pop
inc
shlw
test
pop
add
shr
push
push
test
or
jne
pop
cld
stos
push
in
push
ret
fwait
in
mov
dec
jae
fisubrl
adc
test
sub
es
mov
sub
mov
leave
xchg
cmpl
inc
and
mov
push
inc
cmpl
xor
xor
in
jb
or
jg
push
or
pop
fnstcw
xchg
push
pop
xchg
das
mov
scas
aas
xor
mov
jp
cmp
stos
movsb
shlb
inc
loope
jl
fimull
push
stos
fs
dec
int
inc
int
repz
xchg
ljmp
stos
loope
imul
mov
call
mov
jmp
dec
jnp
mov
loopne
out
popf
cmp
pushl
fldt
outsb
pop
in
jl
clc
movsl
loope
mov
pop
xor
into
jl
pop
jno
icebp
fcom
loope
dec
adc
xor
loope
test
fistpl
ja
daa
sbb
push
stos
cwtl
lock
dec
xchg
push
int3
cs
movsb
test
repnz
outsl
mov
aad
cltd
fmul
or
mov
fidivs
addb
movsb
sti
imul
cmp
xchg
cltd
and
movsl
cs
or
rolb
arpl
lret
stos
sub
ret
out
mov
xchg
int3
mov
mov
lret
mov
mov
dec
cmpsb
push
pop
jno
xchg
add
sub
in
je
enter
cmpsl
cld
out
scas
das
lea
push
idivl
scas
lds
push
lret
js
push
pushf
insb
lahf
sub
leave
loope
sahf
xchg
push
cmpsb
inc
mov
cmp
orl
pcmpgtw
daa
jns
adc
and
inc
jmp
push
ss
in
jo
mov
jge
fwait
rcll
dec
cld
jne
hlt
in
lcall
movsb
bound
add
push
and
mov
push
pop
fwait
dec
out
icebp
rclb
mov
pop
popf
in
jnp
cmp
aam
jne
fstl
fcoml
cmpsl
dec
pop
roll
movsl
fcmovnbe
sbb
shll
ss
imul
cmp
adc
inc
cmpsb
cmpsb
movsb
jp
fchs
mov
cwtl
jb
xchg
push
jae
jnp
iret
mov
mov
xchg
stc
std
mov
jecxz
ret
jae
cmp
mov
ds
testb
xor
mov
mov
mov
push
pusha
inc
pusha
sbb
es
das
imul
mov
mov
add
pop
xor
jp
push
jne
inc
push
sub
cld
lock
into
adc
sbb
xchg
and
jge
out
push
add
xor
mov
xor
outsl
sbb
sbb
add
mov
mov
dec
loopne
jno
jno
fstl
lods
cmpsb
push
subl
int
push
cli
clc
and
scas
leave
jne
add
dec
adc
lods
clc
int
mov
pop
js
inc
inc
or
cmp
add
push
mov
popf
aas
pop
sahf
push
xchg
mov
xor
mov
and
mov
icebp
adc
lret
aaa
jle
sahf
fwait
lahf
xchg
cmp
cld
imul
popf
or
and
nop
ljmp
pop
enter
sub
dec
dec
adc
add
notl
test
mov
imulb
negb
adc
aaa
pop
mov
or
xlat
inc
sti
pushf
push
mov
push
jecxz
ret
push
int
in
insl
cmc
and
push
jae
stos
ss
cmp
int3
out
jnp
fildl
fstl
mov
int3
cmp
xor
fsubr
lcall
imul
inc
xchg
inc
and
cwtl
jnp
mov
lret
and
jne
mov
mov
lret
and
add
xchg
lods
jp
push
repnz
push
enter
daa
int
shrb
gs
mov
mov
adc
mov
scas
xchg
shl
les
ljmp
fisttps
pop
xchg
push
dec
pop
test
out
adc
loop
jle
mov
js
mov
add
xorb
or
mov
push
and
mov
push
leave
mov
fwait
mov
jae
or
movsl
out
aad
sbb
repnz
pop
ficomps
xchg
inc
push
push
push
inc
add
mov
aas
pop
pop
aam
pop
roll
mov
jae
pop
aas
sbb
push
lods
into
cld
pop
out
clc
das
sti
mov
comiss
fnsave
xor
fldl
jnp
pop
jns
rcrb
addr16
sbb
clc
bound
mov
xor
pop
cmp
jmp
cs
sub
mov
dec
mov
daa
cli
or
call
aam
xchg
xor
and
push
cmpsl
imul
incb
mov
cmpsl
enter
push
testl
adc
xchg
sub
push
lds
test
xchg
fildl
mov
mov
xchg
and
es
and
stc
out
cmp
popf
adc
mov
out
mov
and
sahf
shll
notl
jge
ret
icebp
inc
mov
movsb
lods
fxch
dec
mov
pop
adc
popl
xchg
mov
pop
outsl
clc
loopne
mov
mov
jb
repnz
roll
cmp
mov
imull
add
out
push
cmp
loopne
push
daa
pop
stos
and
std
cmp
adc
mov
xor
and
adc
cltd
sub
and
jp
in
imul
jl
sbb
fildl
outsl
icebp
mov
sbb
mov
ljmp
popa
movsl
sub
xor
addb
pop
xor
xor
cli
push
sahf
cmpl
cmp
jae
sub
mov
dec
nop
scas
and
cmc
sub
and
adc
add
mov
ja
pusha
push
and
int3
test
adc
xchg
pop
adc
cmp
inc
pusha
or
shl
sub
mov
push
push
dec
add
sub
js
rcrl
dec
xor
adcl
push
inc
push
add
add
add
add
rcll
and
icebp
inc
lret
jno
gs
repz
mov
sti
loop
cli
cmp
outsb
push
push
adc
jns
cld
jge
in
pop
loop
call
add
xor
push
pop
lret
fiadds
in
mov
arpl
subb
outsb
inc
xchg
mov
pop
stos
xor
test
dec
out
orb
mov
icebp
ljmp
add
lock
popf
pop
repz
daa
lret
lods
dec
test
jns
dec
loopne
mov
lods
xor
sub
mov
and
dec
std
aas
push
jl
pop
cmp
pop
jge
mov
xchg
dec
cmovg
ja
stc
into
sub
jp
fisubl
repnz
icebp
and
push
dec
pop
test
xor
jge
mov
mov
xchg
jb,pn
mov
ret
aad
mov
jecxz
movsb
lret
xor
scas
and
mov
xor
sahf
jle
pop
outsl
add
xor
andl
cmp
insb
mov
pop
jp
jb
push
jge
sbb
fwait
stos
push
insl
lods
inc
les
fcomps
push
xchg
dec
sti
imul
add
pop
mov
add
inc
loope
fsts
adc
lds
jb
inc
outsl
pop
push
popa
xchg
cmp
movsb
jle
cmp
inc
imul
outsl
push
dec
aas
iret
scas
mov
fstl
push
and
ja
test
negl
loope
nop
xchg
or
mov
and
mov
rol
inc
stc
sub
cmp
es
cld
lahf
sbb
cs
insl
adc
dec
hlt
pop
icebp
jp
cmp
sarb
pop
fcmovnb
mov
sbb
test
mov
jle
mov
daa
xchg
sbb
cmp
add
sbb
cmc
jb
mov
stos
jae
xchg
mov
pop
adcl
and
push
pop
pop
jl
out
xchg
jno
lcall
popf
jnp
mov
xchg
fbstp
pop
xlat
dec
mov
stos
sub
imul
call
in
and
pusha
push
push
push
mov
lret
cmc
out
jge
mov
fistpll
jno
call
daa
pop
xor
or
popa
in
sub
push
or
dec
sub
fistps
or
mov
sub
sarb
mov
pop
inc
push
aam
mov
stc
mov
xchg
int
add
ret
icebp
in
mov
loopne
jo
xor
xchg
mov
adc
dec
movsl
add
adc
cmp
jb
or
out
gs
sub
jp
testb
iret
addl
adc
aaa
push
adc
push
outsb
into
cwtl
lret
cld
pop
and
shll
jno
jge
clc
loope
int
sub
sbb
and
jle
lret
das
push
add
mov
push
pop
push
cmp
cmp
insb
dec
outsl
sub
daa
rclb
stos
in
pop
mov
xchg
repz
int
pusha
jecxz
loop
xchg
cltd
jmp
repnz
sbbl
hlt
xor
dec
dec
mov
sti
and
lret
jbe
in
int
lea
mov
dec
pop
insb
gs
xchg
and
imul
cmp
cmpsl
cmpsl
dec
or
repnz
lea
movsb
or
aaa
inc
dec
ret
mov
adc
mov
xlat
dec
lock
mov
fsubrl
sti
inc
dec
xlat
mov
shl
pop
into
fnstenv
dec
fistps
fisubs
shlb
repz
xchg
sbb
sub
sti
fs
mov
pop
pushf
mov
mov
fstpl
or
pop
outsl
mov
mov
loopne
sbb
jo
sub
or
push
fnstenv
adc
sub
push
ror
outsl
pop
subb
jmp
inc
jmp
cmp
dec
scas
add
mov
mov
adc
ljmp
int
lcall
popf
ja
in
jp
jno,pt
lcall
sti
xor
sub
std
push
cwtl
ret
pop
or
pop
xchg
pop
data16
push
xchg
push
mov
inc
int3
cltd
xor
xor
pop
jb
andb
dec
lods
jp
add
iret
fcmovu
push
addr16
cmp
adc
mov
xor
adc
push
filds
lods
cmp
icebp
out
hlt
incl
cmp
mov
push
sub
loop
out
out
out
orb
out
ljmp
lret
push
adc
enter
jns
and
icebp
es
fdiv
sete
mov
and
repz
fwait
cltd
ds
and
icebp
pop
inc
orb
cmpsl
jg
inc
sbbl
or
pop
negb
push
or
repnz
mov
jne
add
add
dec
add
add
add
add
add
add
adc
and
lahf
sub
test
add
test
mov
pop
mov
jne
jae
adc
mov
movsl
pop
idivb
fisubrs
and
adc
inc
add
adc
cmp
add
ja
xchg
nop
push
jo
xor
push
outsl
pop
stos
adc
mov
pop
dec
pop
add
sbb
test
test
mov
sub
or
xchg
and
aad
xor
pushf
or
or
enter
sti
ds
and
out
add
mov
add
add
add
in
cli
and
adc
iret
add
jecxz
cmp
aas
xor
das
arpl
jl
add
pop
test
roll
inc
fyl2xp1
or
dec
inc
scas
pop
push
test
mov
jmp
jne
dec
sbb
xor
out
into
int3
pop
adc
jno
je
xor
lods
cmpsb
sahf
and
pusha
bound
jl
xchg
cmpsl
test
sbb
lcall
mov
sbb
inc
pushf
fimuls
aas
out
and
ljmp
mov
jns
inc
loop
sbb
add
incb
add
out
out
push
jno
cmpsl
sub
mov
mov
push
push
shlb
into
cld
rcrl
mov
xchg
pop
das
es
icebp
mov
pushf
imul
mov
out
pop
fdivrs
jmp
icebp
adc
repz
jno
xchg
pop
repz
add
push
add
popa
jp
cwtl
std
ljmp
pusha
imul
add
adc
dec
imul
inc
sub
imul
or
outsb
push
in
push
and
jb
orl
jbe
adc
adc
loopne
clc
in
cmp
pop
cld
out
mov
and
inc
adc
test
jg
pop
imul
icebp
add
ljmp
mov
insl
jmp
and
cmpl
sub
sub
ljmp
dec
shlb
popa
pop
into
cmc
pop
adc
lret
push
mov
mov
mov
into
into
xor
out
cmp
or
or
push
leave
jns
fmull
pusha
sbb
sub
jge
sub
insb
pop
shlb
or
ret
es
add
lret
loopne
inc
add
shll
fldcw
outsl
or
mov
lds
xor
imul
adc
inc
loopne
xor
dec
sbb
push
aas
push
scas
add
add
inc
xchg
sub
push
ds
test
cmp
stc
mov
jnp
fwait
and
stc
out
inc
cltd
xchg
out
inc
and
jae
cmp
jmp
cmp
jge
and
out
xchg
cmpsl
add
inc
mov
cli
jns
inc
imul
xchg
inc
scas
lods
mov
mov
insl
add
mov
xorl
ret
clc
loope
test
scas
insl
push
sub
cs
test
clc
dec
dec
or
pushf
movd
push
imul
int
sbb
push
leave
mov
mov
sbb
mull
mov
out
xor
inc
dec
cmp
lock
subl
push
dec
addb
clc
mov
outsl
push
pop
xor
cld
fstps
pop
or
std
xor
outsb
jo
mov
or
jg
adc
mov
and
dec
insb
sbb
inc
out
outsl
inc
test
cmpb
std
mov
or
into
in
lock
pop
pop
rolb
test
dec
pop
lcall
lahf
mov
push
out
mov
and
fidivs
push
std
hlt
jp
in
sbb
cli
and
mov
mov
mov
dec
or
push
pop
js
mov
jno
aam
xchg
dec
jp
sub
push
mov
stos
mov
xor
xlat
out
or
mov
xor
jl
push
push
fistl
xor
int
push
cmpsb
jns
pop
stos
mov
lods
cld
mov
mov
loopne
add
xchg
or
sbb
sub
ss
sub
pop
repz
outsb
ja
add
imul
dec
jl
subb
push
push
jno
iret
mov
testl
idiv
movsl
lret
enter
movsl
int
lea
outsb
lds
pop
lock
add
sub
xchg
aaa
into
out
pop
mov
imul
push
data16
or
inc
out
cli
jns
addr16
jns
inc
or
fsubr
ds
xchg
xchg
cmpsl
rcrl
inc
push
mov
imul
bound
test
inc
cmpsb
or
add
and
outsl
mov
add
mov
addl
jno
into
pop
mov
in
jle
pushf
sub
push
add
push
setl
testb
adc
insl
push
sbb
ds
jp
cmc
loop
push
int3
loope
inc
lea
push
paddb
sbb
aam
mov
mov
push
repnz
das
jns,pt
mov
je
aam
mov
push
in
pop
call
pop
jge,pn
fs
sbb
ret
and
add
dec
or
mov
rclb
cmp
dec
mov
test
jg
inc
sbb
push
dec
sbb
mov
shrb
test
les
lcall
mov
pop
fldenv
jbe
lods
add
jg
sbb
inc
mov
mov
pop
or
stos
aas
or
pop
xchg
mov
sarb
leave
cmp
jbe
repz
mov
xchg
sbb
xor
pop
mov
jmp
adc
adcl
add
mov
fistpl
add
cld
aaa
in
hlt
xor
mov
jecxz
mov
jl
lods
rep
jae
sub
jne
rcll
mov
test
lds
and
aam
es
lret
sub
repnz
dec
mov
sbb
pop
jnp
push
or
mov
iret
aad
or
ljmp
out
dec
pop
cmp
aam
jge
lcall
sbb
jo
rorl
jl
mov
lds
and
push
popf
cmpsb
test
sub
mov
shl
lahf
imul
sbb
stos
dec
test
mov
test
stos
xchg
jno
ret
rclb
sbb
jb
inc
sti
sbb
je
adc
mov
inc
mov
bsf
mul
pop
sub
xor
sub
lds
push
roll
adc
mov
mov
pop
test
stc
shlb
lods
sbb
adc
cltd
sbb
aam
cld
js
and
bound
movsb
and
mov
dec
mov
xchg
iret
andl
sub
jmp
imul
test
sub
mov
neg
aaa
icebp
jnp
lret
adc
cwtl
add
subb
jecxz
int
sbbl
ja
inc
adc
inc
into
je
mov
cmpsb
ja
aam
mov
into
add
aas
mov
pusha
ja
icebp
inc
mov
pop
out
push
ret
cmpsl
inc
inc
mov
xchg
call
in
fnstenv
int
pop
roll
insl
inc
stos
imul
xor
mov
cli
aam
in
adc
fimull
pop
aas
popa
jno
adc
inc
push
mov
or
jle
xorl
std
mov
fcom
sub
pop
movsl
mov
dec
jno
xchg
sbb
test
xchg
aaa
mov
and
push
cmovnp
pop
lcall
push
pop
int3
jg
mov
xlat
sbb
sbb
leave
std
call
xchg
loopne
jnp
ljmp
lock
mov
inc
lret
cmpsb
adc
xchg
iret
out
mov
ret
add
mov
call
dec
stos
inc
call
inc
orl
mov
jbe
neg
add
fdivr
push
das
pop
into
rorb
xchg
pop
mov
sbb
sub
into
and
sub
imul
loopne
ljmp
insl
or
jb
push
sub
pop
pop
xchg
pusha
test
leave
repnz
mov
bound
stos
outsl
or
arpl
mov
js
lds
add
adc
mov
or
dec
xor
insl
fildll
lds
xchg
add
aam
mov
jne
lock
add
mov
add
sti
clc
into
sub
mull
inc
or
add
divb
jb
sub
push
cmp
shl
imul
jo
fisttps
call
add
cwtl
pop
outsb
inc
add
jle
and
mov
inc
data16
fs
movzwl
xchg
xor
outsb
mov
je
mov
aas
cltd
pushf
pop
mov
movb
jl
cs
repz
jne
xchg
xchg
xor
pop
pop
shrl
repz
cmpb
inc
scas
xchg
mov
scas
inc
xchg
ds
lock
enter
fisttpl
dec
std
jl
add
fwait
push
out
cmpsl
sar
inc
fsubrs
dec
fldt
or
and
sbb
pop
aam
scas
push
push
sub
lock
adc
std
xchg
adc
orb
repz
mov
rcrb
or
popa
test
mov
negb
outsl
cwtl
mov
std
test
shlb
dec
stos
mov
and
mov
adc
ficomps
mov
iret
cs
adc
imul
mov
lods
pop
int3
imul
jno
or
cmp
rcrl
jge
divb
aas
out
jns
rorl
sarl
lds
dec
test
lock
jo
filds
stos
lods
mov
ror
or
xchg
fistps
pop
and
in
jp
add
inc
xor
sub
jl
sti
mov
cmp
inc
loope
pop
sub
sti
jl
dec
add
insl
loope
mov
push
ljmp
pop
repz
xor
sub
popf
dec
sbb
sarb
lret
aam
mov
add
push
pop
mov
aam
jne
addr16
xchg
xor
xor
dec
cmp
jnp
pop
aas
dec
push
push
sub
pop
xor
jnp
lods
push
test
sahf
or
push
mov
mov
sahf
sub
inc
xor
fadds
out
push
push
cltd
sbb
pop
cmp
push
imul
jecxz
fwait
and
push
mov
mov
sbb
dec
xchg
pop
push
mov
mov
jno
sbb
xchg
jp
pop
push
mov
imul
and
imul
shlb
shr
jl
dec
adc
push
xor
fdivl
shll
into
jmp
xchg
sbb
pop
pop
testb
pop
cmovns
or
xor
scas
or
cld
sahf
pop
lcall
fdivl
jmp
test
cmp
fcomi
repz
adc
jno
jmp
jecxz
sbbl
loope
cwtl
mov
adc
push
xor
movsl
sub
adc
inc
scas
enter
mov
aad
xor
lds
popa
mov
pop
cmp
xlat
jecxz
lods
out
cmp
imul
nop
jg
mov
dec
outsl
xorb
aam
outsl
sub
fbld
push
in
mov
add
or
push
test
mov
data16
mov
pop
and
call
or
imul
aam
lds
aaa
sbb
mov
sysexit
das
xchg
scas
icebp
gs
mov
popf
jne
add
rep
pop
jo
sub
adc
rorb
and
aam
dec
das
jne,pn
test
pop
cmp
pop
int
jle
adc
cs
sbb
sub
pusha
bound
fcmovnu
stos
and
jg
adc
sahf
data16
addr16
jnp
mov
add
push
test
xchg
dec
add
xorb
or
cmpsb
and
movsl
jg
lds
and
btr
fcomip
sbb
mov
add
mov
stos
shll
negl
sub
jbe
mov
mov
pop
adc
ja
lret
bound
sbb
mov
sub
movsl
fisubrl
into
inc
mov
mov
sub
dec
push
pusha
mov
mov
adc
dec
sbbl
loope
mov
enter
sub
nop
roll
add
mov
lahf
fwait
push
sbb
cmp
jne
sub
sbbb
pop
jecxz
test
icebp
lcall
push
outsl
push
cli
xchg
fs
movl
call
jne
pop
in
movsl
pop
cmp
stos
icebp
fisttpl
adc
and
hlt
jl
sbb
arpl
pop
mov
das
shrl
inc
roll
or
enter
pusha
iret
out
ss
fs
xlat
inc
movsb
jbe
push
shl
in
fwait
cmp
add
ficoms
dec
add
bound
das
pusha
bound
sub
sti
cmp
adc
dec
pusha
repz
xchg
insl
fs
and
mov
clc
xchg
mov
dec
mov
ds
adc
push
xchg
loope
ficompl
or
pop
pop
js
inc
int
negb
cli
xchg
subb
and
xchg
sarb
sbb
pop
aaa
loopne
push
test
test
sbb
clc
mov
add
fstps
mov
daa
mov
or
ljmp
jae
and
icebp
xor
inc
sarb
jo
fidivs
rcl
bound
test
aad
xor
xchg
dec
popa
inc
mov
inc
adc
mov
sub
mov
cwtl
or
imul
ds
or
hlt
mov
jno
add
lcall
orb
pop
or
and
pop
shll
xor
arpl
in
mov
sahf
rol
je
bound
stos
clc
mov
push
mov
pop
dec
in
push
imul
xchg
adc
pop
into
mov
out
inc
pusha
push
out
test
lcall
inc
mov
adc
cmpsl
sbb
call
int3
in
aad
jbe
fs
sbb
rcrb
notb
and
push
call
test
aas
ficoms
icebp
jnp
out
repz
dec
cmc
ret
or
test
and
enter
fsubp
popf
lcall
aaa
jb
sbb
lea
and
insl
push
stos
movsb
push
clc
xchg
mov
mov
cmpsb
sbb
or
and
xchg
or
push
sub
pop
xchg
cwtl
push
in
pop
test
push
cld
lock
mov
cmp
rorl
jns
cmp
xchg
jbe
jnp
setnp
jp
pop
pushf
in
das
jo
daa
fisubs
and
dec
bswap
sbb
cmp
pop
and
lahf
or
lods
sub
sbb
xchg
sbb
mov
jns
imul
aad
mov
cmc
popf
lock
xchg
pusha
rcrl
rcll
call
mov
repz
das
push
popf
in
popf
ja
cmpl
insl
mov
neg
add
lods
imul
inc
aas
mov
sub
pop
enter
xor
pop
scas
aad
dec
fs
std
ret
push
cmp
xchg
ljmp
xor
divl
shrl
and
das
int
dec
push
pop
jmp
jle
pop
sbb
lods
xchg
dec
aad
jns
and
lods
cmp
add
pop
aad
mov
in
ss
jo
cs
lea
sbb
add
and
stc
mov
icebp
das
push
jge
inc
cltd
or
call
inc
jecxz,pt
mov
or
xorl
xor
repz
dec
jmp
into
pop
push
jle
jne
push
add
xchg
cmp
cmp
sub
lret
nop
xor
in
and
and
pop
ficomps
out
mov
cmpsb
add
aaa
sub
lcall
sub
lret
push
jno
ret
jl
pop
push
push
cld
or
test
popf
inc
test
or
push
push
jl
fmull
scas
xlat
pop
sub
xor
push
jmp
sub
daa
das
hlt
sti
cmpl
jbe
adc
in
mov
mov
mov
push
jns
jo
mov
push
add
loopne
pop
movsl
dec
and
jo
mov
dec
xor
call
insl
add
jb
or
ds
mov
es
dec
inc
into
pop
mov
movsl
sbb
sub
popa
mov
loopne
mov
cwtl
call
mov
test
in
sub
out
mov
cmp
lahf
push
xor
data16
stos
sub
push
cmp
inc
sarl
pop
mov
pusha
pusha
idivb
repz
add
mov
inc
cmc
cmp
and
fisttpl
mov
xchg
and
jnp
imul
mov
or
ret
inc
insb
mov
adc
push
dec
cmpsl
ja
mov
arpl
jnp
roll
mov
scas
and
scas
pop
mull
test
or
out
or
push
push
cs
jg
or
add
popfw
lcall
xchg
adc
outsl
jnp
add
xchg
mov
cmc
xchg
adc
mov
xchg
dec
pop
or
clc
pusha
stos
mov
shll
aam
sbb
add
pop
pop
sbb
sbbb
shll
aad
and
cld
stc
loop
daa
mov
pusha
fstpt
int
repnz
push
popf
or
ret
dec
ret
dec
lds
ret
imul
in
push
test
sub
xlat
mulb
je
mov
dec
imul
movsl
stos
bound
lea
ret
xchg
xchg
pop
sub
add
mov
mov
pop
scas
mov
nop
imul
cld
dec
or
add
loope
push
cmp
sti
sti
shl
jnp
sub
xchg
out
inc
pop
inc
mov
in
sbb
sub
pop
pushf
and
mov
mov
sbb
sbb
repz
inc
fs
inc
jno
insb
ds
test
dec
imull
sub
lret
lds
adc
fnstcw
int3
jne
jge
and
dec
sub
sub
cmp
mov
and
jne
sbb
in
mov
lock
push
jge
inc
and
push
mov
into
xchg
inc
rcrb
das
or
inc
aad
sti
ret
inc
xor
jbe
sbb
mov
pop
lahf
fstps
sti
adc
sub
cmp
cmp
push
adc
cltd
lods
inc
stc
and
stos
ja
ret
xchg
out
fadds
das
shrb
pop
rorl
mov
dec
add
pop
lret
das
adc
push
stos
push
sbb
ret
ret
das
adc
mov
loopne
ss
ds
xor
icebp
and
std
mov
mov
mov
sub
divb
fdivrl
in
mov
cltd
stos
fcomps
push
lods
adc
nop
push
jg
jno
imul
aam
xor
cli
jp
mov
or
xor
lahf
push
cmp
imul
outsl
xchg
jle
mov
sbb
das
out
pop
test
ja
decl
xor
sti
xchg
stc
shlb
adc
cmp
dec
adc
sahf
sub
ds
xor
mov
fidivl
xlat
xchg
leave
mov
jmp
jmp
push
jg
mov
pop
push
cmp
sbb
mov
addr16
ljmp
sub
fadds
jg
xor
pop
ret
pop
sahf
cmp
repnz
xchg
pop
mov
ljmp
inc
inc
jl
push
or
pop
add
jne
sub
push
mov
loope
jbe
mov
or
mov
jnp
sti
sbb
cmp
adc
daa
jbe
cmp
ror
imul
mov
sub
arpl
imulb
pop
fistpll
push
lret
sub
or
int
sbb
pop
jae
cltd
add
or
lock
and
sti
push
push
je
adc
jno
inc
sbb
in
push
lods
out
cld
nop
sbb
add
pop
cwtl
int3
push
adc
sub
out
inc
fisttpl
push
mov
jns
stc
adc
xorb
pushl
cld
inc
jne
push
loopne
gs
ret
cmp
push
push
push
rcl
enter
push
cmp
lds
adc
xlat
hlt
mov
jne
pop
dec
daa
push
mov
xlat
mov
mov
movsl
jae
mov
mov
fsts
mov
jg
pop
aam
aas
inc
jl
mov
jno
lds
mov
sub
sbb
push
xor
cmp
jo
out
aaa
add
in
inc
lds
xlat
out
icebp
lock
dec
lahf
pushf
cmp
in
mov
push
jbe
pop
and
lea
daa
mov
pop
cmpsl
jnp
stc
dec
stos
cmp
loop
jb
sbb
lock
sbb
push
mov
je
mov
and
pop
or
push
mov
roll
inc
imul
jns
or
icebp
ret
in
dec
mov
lock
mov
in
sub
jae
sti
jb
fistps
pop
dec
add
cmp
repz
mov
sub
shll
xor
stos
sub
sub
sahf
and
pop
aas
adc
mov
sbb
jne
mov
mov
mov
shrl
lds
aam
pop
pop
cmp
or
xor
xor
pop
in
mov
fidivl
int3
stc
dec
les
movsb
xchg
adc
lock
jp
popf
mov
cmp
pop
jno
test
or
sbb
outsl
popf
pop
sub
xchg
pop
nop
inc
mov
test
jae
cmp
fstp
pop
add
push
test
ficoml
das
pop
into
push
dec
pop
cld
jno
xor
mov
push
cmpsb
fldcw
push
cmpsl
jl
adc
and
je
lock
in
jle
cmp
jne
mov
enter
pop
mov
push
dec
adc
test
aaa
test
fldenv
dec
mov
aad
sub
rcr
inc
into
sub
mov
jmp
or
mov
pop
ret
fwait
add
outsl
jle
add
xchg
inc
mov
stos
push
mov
lret
jmp
fcoms
push
addr16
lea
cwtl
in
pop
ss
add
dec
in
outsl
cld
movsl
gs
jle
rolb
inc
mov
enter
stos
jge
jp
lods
scas
cmp
test
pop
xchg
sti
push
cli
sbb
push
gs
pavgw
sbb
mov
mov
mov
das
mov
cmp
sbb
hlt
std
ret
aaa
sub
cmpl
pop
subb
adc
mov
or
adc
xchg
cmpsl
les
fcomp
cmp
mov
rol
outsb
adc
test
dec
movsl
icebp
and
push
sbb
fs
insb
cmp
insl
clc
insl
mov
and
xchg
or
mov
shrl
push
flds
pop
jb
push
in
or
test
and
lds
sub
add
gs
or
repnz
and
xlat
inc
jb
adc
xchg
dec
xchg
sbb
fprem
sbbl
ja
adc
mov
push
or
or
or
outsb
xchg
cmpsb
mov
sub
int3
sub
in
xchg
push
stos
fwait
mov
adc
pop
fcomps
jno
icebp
jns
pop
pop
scas
mov
cmp
test
push
dec
or
enter
jo
iret
mov
mov
jno
cmp
dec
cmpsb
dec
imul
into
xchg
jo
mov
mov
jmp
adc
loop
inc
bound
push
xlat
xchg
mov
inc
mov
stos
shll
sub
idiv
cmpsb
cmp
cltd
mov
mov
and
aas
xchg
dec
hlt
mov
jne
sbb
imul
addr16
into
icebp
out
or
dec
push
xchg
jb
fcomps
cmp
lcall
mov
mov
pop
add
mov
push
lcall
jb
mov
push
imul
mov
jmp
adc
outsl
lock
jbe
and
stos
jae
ficompl
inc
cs
sbb
xchg
loopne
pop
into
insb
scas
mov
xor
cmp
rcll
or
mov
cmp
lcall
jecxz
cmovl
mov
fs
adc
psraw
loopne
fwait
dec
pop
loop
lock
loopne
outsb
sub
test
cvttps2pi
push
jmp
into
das
adc
aas
sub
xchg
pop
jp
setns
movsb
sub
cmpsl
pop
inc
cmpsb
addr16
mov
dec
or
inc
push
das
ds
decb
sub
jmp
and
sbb
pop
hlt
cli
je
lods
inc
pushf
push
adc
add
and
xchg
adc
add
out
test
mov
mov
data16
jmp
scas
or
stos
call
sub
or
cmpsl
call
inc
je
dec
pop
popf
push
xchg
inc
cmpsl
mov
movsl
bound
push
int
rolb
cmp
push
mov
fisttpl
shlb
sub
xchg
iret
mov
push
rcrb
repz
and
lret
mov
ret
cmp
adc
scas
cmpsb
pop
sub
sbb
push
pop
pop
cld
ret
fnsave
outsl
and
cmpsb
add
xor
shlb
int3
rcrl
testl
mov
dec
lods
mov
xchg
xor
je
lods
dec
mov
or
dec
test
shlb
loope
mov
push
pop
xchg
stc
fs
push
in
test
je
mov
mov
loope
adc
imul
cmp
cmp
cmp
fstps
scas
dec
out
fs
jo
popf
push
lock
repnz
std
in
ja
sub
xchg
dec
jle
iret
mov
lahf
negb
jg
aas
inc
mov
aas
xor
int3
enter
adc
mov
sbb
ds
xlat
xchg
or
loopne
jp
inc
mov
sahf
or
pop
enter
push
xchg
mov
cmp
jae
jl
mov
dec
pop
mov
adc
lcall
loopne
bound
mov
mov
mov
sarb
xor
push
scas
fsts
sbb
or
jecxz
mov
xchg
inc
imul
test
pop
sub
les
mull
mov
stos
paddd
add
cmc
cmp
movsb
repnz
mov
cmpsl
lods
sub
xchg
dec
jne
loop
jle,pn
pop
dec
subb
pop
fdivrp
mov
popa
pop
dec
pop
xchg
mov
xchg
into
push
outsl
inc
add
out
daa
xchg
pop
mov
sub
fdivrl
iret
dec
dec
addr16
sbb
pusha
xor
je
mov
xchg
jbe
popf
pop
push
jmp
jmp
push
test
cmp
jecxz
cmpsl
cmp
jnp
xchg
sarb
in
mov
aaa
and
jne
into
add
inc
fucom
jle
sub
enter
movd
and
pop
xor
jecxz
roll
in
push
mov
in
mov
aaa
lods
icebp
cmc
pop
data16
ljmp
pusha
push
lret
dec
in
xchg
dec
int3
push
jecxz,pn
inc
or
pop
cltd
pop
sbb
jecxz
lea
std
addr16
mov
ror
push
lds
fimull
xchg
mov
xor
jecxz
inc
pop
ret
mov
in
mov
push
mov
out
pop
loop
pushf
ret
xacquire
push
pop
fwait
cmp
jl
rclb
insb
sbb
in
out
stos
mov
scas
lods
mov
inc
or
xor
push
sub
cmpb
stc
and
jle
aas
je
cli
sub
xchg
paddusw
lea
xchg
xorb
adc
add
pushf
fnsave
rorb
bsf
mov
pusha
aaa
cmp
mov
cmp
ret
push
pop
push
gs
push
fcompl
cmp
xor
cwtl
push
mov
cmpsb
jne
bswap
scas
xor
aam
add
pop
addr16
pop
sti
xor
inc
cmpsb
dec
fstpl
ficompl
mov
sbb
add
data16
mov
inc
fsub
or
out
jns
or
pop
adc
clc
in
loopne
xor
cmp
lock
loop
femms
clc
cmp
xor
jg
push
push
add
repz
and
sub
rclb
aam
or
pusha
pop
sahf
mov
repnz
dec
aad
adc
dec
jns
cmp
ljmp
hlt
sbb
sbb
push
dec
pop
dec
fistpl
mov
mov
inc
sub
mov
scas
dec
cmp
and
cmc
out
mov
push
out
icebp
rcrb
je
push
sbb
pop
out
jg
scas
push
scas
movsb
aam
and
sub
lret
loop
jb
pop
sbb
jne
push
sub
in
pop
sbb
pop
mulb
popf
shl
xchg
add
jns
mov
and
mov
sbb
lret
sbb
in
sub
mov
ret
mov
iret
pop
and
mov
inc
jmp
or
sub
push
std
testb
add
cmpsb
xor
mov
inc
inc
ficoms
cmp
scas
cmp
push
mov
xorb
or
push
testl
out
xchg
lods
mov
mov
pop
pop
xchg
add
mov
push
movsl
mov
jp
test
cltd
or
mulps
mov
call
xchg
ret
pop
inc
or
cmp
xor
popl
pop
test
ljmp
repz
in
out
mov
xorl
ret
call
loop
leave
or
scas
test
ss
lahf
cmp
mov
test
js
and
lock
fstpt
test
lea
mov
cmpb
stos
pop
cmp
hlt
daa
sbb
xor
xchg
lods
inc
loope
jg
or
imul
or
aas
pop
jbe
mov
cmc
testl
push
cmpsl
jmp
js
repz
xchg
sub
cld
mov
pop
mov
lock
mov
xor
dec
dec
xchg
into
rcl
ret
mov
stos
mov
mov
mov
cmpsb
add
or
shl
lock
jmp
pop
sub
rorb
iret
push
popf
mov
mov
adc
jnp
inc
xor
inc
sbb
repnz
sub
addl
addr16
clc
inc
lahf
loope
dec
push
ds
clc
mov
jg
sbb
imul
push
inc
sarb
jl
ss
fsts
cmpl
inc
mov
mov
mov
and
jp
sbb
jg,pt
sarl
and
or
push
cld
push
mov
js
jmp
hlt
jno
loop
jmp
mov
ja
pop
addl
popf
mov
data16
insl
xchg
ljmp
sub
int3
pop
pop
lds
mov
mov
in
mov
repz
mov
and
fwait
ja
cmc
das
pop
stos
mov
in
push
mov
and
sbb
cmp
into
mov
xor
mov
jg
mov
or
ljmp
mov
xlat
lea
mov
cmp
in
ja
movsl
push
out
xor
scas
inc
fnsetpm(287
mov
pop
cmpsl
mov
cmp
or
aas
add
mov
jb
scas
mov
sub
and
xor
je
in
jo
out
nop
gs
pop
daa
xchg
xchg
mov
in
xor
in
mov
adc
mov
test
jb
in
data16
js
in
fs
mov
mov
addr16
shll
mov
sub
mov
pop
scas
arpl
adc
insl
sbb
test
sub
push
cmp
jl
adc
mov
sbb
mov
clc
mov
movsl
stc
lock
jno
inc
pop
hlt
jmp
lods
and
inc
mov
xchg
mov
out
xchg
sub
cmpsl
push
pop
out
repz
lds
cli
dec
xor
jno
push
rcrl
les
in
adc
sbb
xor
clc
fists
and
mov
or
mov
minps
mov
insb
stc
orb
into
add
dec
xor
lods
pop
mov
xchg
sub
jmp
lahf
dec
fmuls
sub
aas
stos
jle
sbb
bound
nop
mov
pop
mov
daa
repnz
jns
inc
int
xchg
inc
mov
xchg
cltd
cmp
js
and
repz
in
cld
movsb
mov
or
orl
int
xlat
test
test
movsl
and
mov
lea
cltd
dec
movsl
dec
pop
jecxz
sti
scas
out
xor
mov
cmp
dec
mov
xchg
mov
stos
pop
lahf
jnp
dec
mov
ljmp
cmc
sbbl
sar
sub
and
mov
lods
xor
sbb
ds
gs
mov
mov
dec
lock
ds
sbb
push
ds
push
mov
push
cltd
movsl
or
lods
mov
sub
sbb
sub
sub
inc
in
pop
pop
sbb
xchg
jmp
jp
cmp
add
cli
popf
sti
and
movb
sub
push
ret
sbb
rcll
pop
rcr
mov
push
outsb
mov
lcall
aas
mov
xchg
adc
push
testl
ficoml
rcr
adc
movsl
fwait
adc
pop
dec
and
mov
xchg
out
cmpl
sub
mov
mov
stos
xchg
xor
cmpsb
jl
push
call
jle
sub
outsb
pop
cmp
pop
lock
inc
arpl
js
mov
arpl
ja
xchg
push
sub
add
mov
movsl
pop
xchg
das
sub
or
aaa
notl
gs
xchg
inc
cld
das
pop
dec
sbb
mov
outsl
inc
mov
ret
push
cltd
inc
fs
notl
pop
mov
sbb
push
ret
add
insl
subb
or
out
cmp
push
loop
cmp
pop
subl
outsb
dec
test
insl
sub
clc
fnstenv
sarb
adc
xchg
lret
xchg
mov
loop
ret
inc
adcb
xchg
loop
pusha
dec
mov
iret
lcall
fimull
push
test
adc
dec
mov
arpl
sub
inc
inc
clc
cmp
fiadds
fwait
dec
jne
adc
lds
jne
dec
pop
push
xor
or
mov
cli
fidivl
push
loopne
xchg
mov
daa
adc
add
loop
mov
les
add
mov
loope
rcrb
leave
push
sahf
sbb
lahf
jle
sub
xor
lret
cmpsl
arpl
mov
mov
mov
push
stc
sbb
cmc
add
adc
aas
andl
lods
sbb
out
adc
xor
loope
int3
repz
iret
and
mov
pop
and
fnsave
bound
cli
outsb
test
stos
push
sbb
test
sbb
mov
fs
adc
jp
adc
int
pop
addb
mov
cld
dec
dec
mov
dec
cmp
fiadds
cmp
test
fldl
xchg
jbe
sbb
bound
pop
and
scas
push
pop
jne
paddusb
sbb
addr16
aam
clc
bound
test
testl
mov
cmpsl
lret
fisttps
cmp
in
push
imul
nop
mov
loope
ficoml
addr16
cmp
pusha
pop
jns
sbb
dec
inc
fisubrs
movsb
hlt
test
inc
cmpsb
call
hlt
repz
mov
cmpsb
rcrl
lahf
or
mov
cmp
orl
cli
add
push
push
xor
pop
jne
cmpsl
or
call
inc
mov
push
test
pop
iret
mov
movsb
mov
jl
inc
cmp
ss
mov
movsl
inc
mov
pop
icebp
lods
jg
call
cmpl
arpl
xchg
fsts
jne
daa
push
int
inc
mov
lret
idiv
repz
jnp
sub
pop
into
fistps
adc
fstl
add
stos
pop
and
rcll
and
shll
out
pop
aas
mov
daa
push
je
icebp
ss
rorb
ja,pt
fmul
mov
rcrb
movsb
jne
sub
mov
fs
push
push
add
push
push
stos
xchg
mov
inc
jnp
pop
and
xchg
push
mov
loopne
cmp
subl
jle
in
fmull
jo
aaa
gs
pop
pop
in
jl
outsb
loop
jecxz
test
jmp
dec
jno
sub
insl
lods
jns
femms
jno
int3
pushf
sub
mov
sbb
imul
sbb
rolb
cmpsl
sub
clc
clc
xchg
xchg
scas
scas
rcr
pop
imul
scas
pop
mov
call
insl
repz
scas
xorb
loop
mov
dec
movsb
xor
mov
ret
jb
outsb
mov
jmp
aam
ljmp
cltd
jno
push
pop
mov
clc
mov
sub
jno
lods
outsb
mov
push
int
sahf
jb
out
mov
mov
push
enter
nop
pusha
mov
stos
sahf
cmp
repz
call
pop
icebp
data16
rclb
cmp
sub
jg
mov
xor
xchg
inc
mov
fwait
cmp
fsubp
out
pop
mov
lret
ja
jae
cltd
jle
stc
xor
jp
test
imul
lods
popa
repz
dec
shl
pop
lret
mov
jns
pusha
pop
jae
in
adc
cltd
push
inc
jns
xor
int
pop
pop
adc
fisttpll
lea
repz
pop
ret
xchg
movl
pop
stos
scas
mov
and
xor
in
xor
lock
sbb
xor
dec
xchg
int
xchg
mov
lock
mov
jge
dec
adc
mov
test
jle
or
loop
jg
push
je
push
cmpsb
int
dec
jle
push
xchg
lock
ret
push
cmp
fs
jmp
pop
mov
sbb
pop
xor
fbld
mov
cmp
stos
mov
and
shll
rcll
setge
fwait
lea
imul
sbb
mov
xchg
xlat
cmc
pop
pop
or
cli
fildll
sbb
clc
adc
in
push
pop
mov
test
ficompl
xchg
inc
jle
jp
lahf
xlat
or
cmp
outsl
sbb
push
clc
loopne
or
icebp
cltd
aam
xchg
lock
inc
loop
in
cld
scas
xchg
mov
mov
popl
popf
fsts
push
std
jo
mov
cmp
xor
cmc
xor
aam
fcoms
aas
in
gs
mov
jecxz
mov
push
jnp
sarb
pop
jns
push
lea
dec
andb
fildll
dec
jge
cmp
mov
movsl
int3
in
insb
mov
or
dec
je
dec
push
std
or
notb
cmpb
pop
ror
add
incl
cli
inc
scas
mov
push
mov
fimuls
imul
ss
sti
je
pop
ret
fdivl
stos
push
cmc
cmpb
mov
stos
mov
adc
ds
push
sub
test
mov
cmp
add
out
out
pop
leave
inc
push
adc
pop
add
mov
inc
and
add
nop
imul
cmp
mov
sub
xlat
pop
lret
lds
dec
imul
push
ljmp
jle
adc
ss
adc
xor
adcb
push
leave
add
sub
rorb
cltd
mov
mov
xor
paddb
jo
and
lods
mov
adc
push
les
pop
add
enter
mov
push
data16
xchg
out
inc
jne
dec
jo
outsb
push
imul
pop
rcrb
and
sub
movsl
addr16
jg
data16
out
jnp
inc
and
fwait
adc
xchg
testw
inc
stos
insl
cli
mov
jbe
inc
push
fisubrs
lods
lea
cmpsb
pop
sbb
xchg
xchg
orb
movb
xchg
or
insb
pop
call
std
hlt
int3
add
xor
fdivp
cld
mov
xrelease
shrb
stos
xchg
mov
cmp
fildll
adc
cld
mov
clc
mov
std
repnz
fsubrp
into
sub
into
sar
cli
pop
arpl
mov
cmpsb
add
nop
not
jnp
scas
mov
and
or
lret
and
sbb
cmp
pop
test
bound
sub
lret
incb
add
hlt
xchg
insb
dec
fdivrs
sbb
dec
in
aam
mov
mov
jg
mov
adc
mov
aam
sbb
mov
iret
ss
mov
inc
mov
pop
popa
inc
lret
mov
jno
leave
inc
mov
mov
jne
sub
sub
mov
roll
jae
mov
out
sahf
das
popf
mov
les
mov
into
mov
mov
push
mov
lock
mov
mov
arpl
out
rolb
std
jle
lret
stc
sbb
pop
std
in
inc
jp
and
cmp
jmp
aam
push
push
jbe
arpl
pop
jl
xor
movsl
ja
sbb
rcrb
lret
stos
aaa
sbb
add
push
or
mov
push
ret
mov
test
aaa
cmpb
push
pop
xchg
out
std
and
sub
lds
icebp
jp
mov
movsl
and
mov
dec
pusha
add
push
mov
clc
stc
mov
dec
sbb
out
enter
jg
sub
enter
push
dec
add
enter
stos
jns
lret
sbb
xchg
xchg
out
adc
and
jle
jne
adc
mov
mov
out
push
out
inc
stc
jmp
enter
mov
insl
pop
mov
lds
sub
insl
push
jecxz
xchg
js
xor
out
cmp
dec
lret
pop
add
std
mov
in
js
inc
dec
mov
aad
iret
fwait
clc
and
pusha
movsb
jge
pusha
xchg
std
push
out
and
outsb
pop
addr16
ret
xchg
adc
xchg
lods
sti
inc
enter
loope
pcmpgtd
jecxz
inc
int
jae
jno
movsl
push
aas
sbb
xchg
cltd
adc
in
fwait
push
push
sahf
lock
mov
imul
lock
push
add
incb
aaa
mov
mov
cmpsb
push
xor
iret
and
gs
cld
jecxz
lods
adc
jle
mov
popa
rorb
cmp
div
push
fsubl
inc
ret
inc
lods
cwtl
jae
sub
shll
mov
mov
mov
outsl
stc
les
adc
sbb
nop
rorb
ds
xchg
outsb
loope
cmp
fs
stos
mov
movsb
sub
movsl
mov
cmp
sbb
je
aad
outsb
lahf
xor
fidivrs
popa
mov
dec
mov
jge
cmp
sub
lret
or
mov
out
imul
mov
or
fwait
push
sti
sub
jge
adc
cmp
cmpsb
dec
nop
cltd
add
cmc
scas
ja
mov
ds
ret
mov
mov
mov
sub
gs
mov
out
or
iret
les
clc
push
cmp
xchg
mov
mov
gs
loope
dec
pop
dec
mov
xor
xchg
xchg
movsb
sub
sub
xchg
sti
mov
mov
jle
push
push
repnz
mov
cmp
gs
bound
mov
sub
push
and
ficoms
xchg
scas
push
xchg
jge
cwtl
mov
mov
out
jo
push
sar
mov
and
movsb
out
mov
test
int
mov
jne
pusha
aaa
dec
outsb
sub
pop
lods
xor
dec
daa
mov
stc
pop
stos
arpl
mov
jae
mov
mov
cmp
and
je
lods
sub
jbe
mov
stc
dec
cmp
fcompl
out
push
mov
inc
sti
stos
sub
bound
and
or
xchg
pop
outsl
xor
pop
stc
fistpll
and
push
nop
loopne
adc
scas
xor
cmp
stos
fcomip
mov
xlat
sbb
lret
into
scas
sti
xor
rcll
test
push
aam
push
call
jle
sti
mov
jge
push
lret
mov
cmpsl
cs
dec
sbb
add
mov
ja
test
or
test
cmp
push
lret
mov
push
js
cli
ljmp
fisubrl
jp
lret
cmp
cltd
fs
or
jae
mulb
daa
inc
mov
repz
aas
jg
mov
pop
insl
ret
dec
pop
sub
mov
int3
and
jae
sub
push
inc
mov
pop
mov
inc
cmp
push
xor
scas
jle
lods
mov
pop
pop
push
je
shr
mov
inc
add
dec
mov
std
lcall
dec
adc
push
les
jnp
sbb
stc
hlt
and
iret
sbb
cmp
mov
inc
xchg
or
inc
xchg
xchg
fistps
inc
pop
sub
lea
mov
xchg
mov
pop
test
jns
arpl
pop
sub
and
cmp
cmc
out
ret
rolb
fisubrl
xchg
call
fwait
pop
push
ficoms
cmp
mov
std
fdivl
cmp
mov
incl
xchg
push
or
mov
popf
pop
cmp
hlt
sbb
adc
in
je
mov
mov
mov
sti
out
ja
lds
movsl
push
sub
pop
dec
aaa
sub
push
clc
mov
cmp
bound
movsl
shl
das
iret
fstpt
repz
mov
mov
jbe
jnp
xchg
bound
decb
add
aaa
pop
dec
mov
inc
mov
aam
mov
xchg
adc
add
pop
pop
dec
sub
pop
cs
jle
pop
icebp
out
negl
xchg
out
add
push
cmp
loope
imul
xchg
sub
movsb
fisubs
mov
sub
xchg
ja
or
push
dec
mov
imul
jmp
xchg
cs
xchg
aas
scas
pop
adc
cmpl
aam
js
repnz
mov
out
pop
and
aam
aam
or
mov
out
adc
pop
mov
neg
cld
sub
call
pusha
ret
lret
push
leave
jae
fmulp
and
jl
clc
add
inc
push
rorb
adc
movl
gs
loopne
and
pop
aad
gs
mov
pop
fsubs
movsb
outsb
lret
rcll
ret
sub
mov
mov
jbe
xor
push
inc
popa
dec
repnz
inc
sub
clc
jl
push
lock
cmc
fld
pop
call
imul
mov
insl
xor
xchg
daa
mov
ja
mov
mov
aas
adc
and
mov
popa
lods
movsb
sub
or
es
divb
jmp
enterw
cmp
push
fldl
inc
pop
clc
mov
mov
std
mov
aam
jno
sti
jo
mov
test
cmp
icebp
test
es
mov
cmpb
xchg
inc
outsb
mov
mov
hlt
xchg
lret
dec
jl
in
hlt
add
mov
out
mov
sub
fldt
jl
int
dec
sbb
daa
lahf
roll
movsb
jecxz
in
push
xchg
jge
testb
aam
mov
pop
mov
jo
fwait
mov
mov
mov
scas
je
cmp
pop
add
xchg
les
shlb
jecxz
xchg
jmp
leave
js
fimuls
cld
rclb
cmc
cmp
rol
stos
into
jge
scas
inc
xchg
test
xor
sbb
mov
sbb
addl
sbb
or
sahf
fcomps
gs
push
sbb
cli
and
cmc
int
test
xchg
and
sti
in
imul
fstp
lea
adc
mov
mov
popf
dec
test
sub
enter
push
inc
ljmp
xor
push
xchg
adc
sub
je
xchg
add
push
mov
and
lcall
add
adc
popf
fwait
dec
mov
in
fs
push
add
out
pushl
sbb
add
test
jge
mov
push
ds
mov
cmc
mov
cmp
inc
fnsave
xchg
test
push
loop
dec
pop
lods
ret
and
push
stc
in
sub
nop
iret
sub
imul
stos
int
fimuls
repz
call
sbb
jns
test
mov
xchg
pop
aad
out
push
fwait
int
cmp
sahf
leave
lock
pop
push
jo
cld
outsb
repnz
sbb
push
dec
daa
pop
out
mov
hlt
loope
dec
fistpl
mov
pop
cmp
das
adc
btc
mov
cmp
sbb
sbb
fucomi
sub
adc
roll
arpl
push
loop
iret
mov
push
scas
lds
loop
idiv
pop
das
inc
xchg
gs
into
pop
mov
repnz
sarl
inc
lock
adc
mov
jecxz
int
cltd
out
sub
pop
cltd
aaa
xchg
inc
dec
popf
mov
or
movsl
mov
mov
fwait
pop
in
fcmove
testl
pop
jg
sub
push
jb
xor
cmc
addl
repz
jp
xor
pop
jns
jnp
push
mov
add
sbb
sbb
cmp
adc
or
imul
mov
cmc
dec
add
pop
out
jbe
cmp
ucomiss
sub
stc
cmp
lahf
iret
xchg
fisttps
clc
enter
neg
js
lret
mov
stos
pop
sahf
scas
jle
scas
lods
xchg
adc
mov
push
xlat
and
inc
ds
loop
aaa
cmp
add
jb
xchg
mov
adc
adc
cs
push
sti
roll
repz
dec
pop
adc
movsb
lret
into
jne
mov
push
pop
mov
cld
push
cmp
cmp
pop
sbb
iret
test
mov
jnp
or
fisubl
imulb
rcll
lods
dec
push
lods
and
hlt
inc
stos
enter
fsubr
mul
dec
rolb
fwait
mov
lret
outsl
and
sbb
jb
pop
les
int
adc
pop
pop
adc
pop
push
nopl
sbb
popf
fwait
mov
mov
mov
cs
push
xchg
mov
add
xchg
mov
xchg
push
cld
adc
pop
jl
les
je
push
ficoml
jo
xchg
movsb
les
add
push
ret
dec
mov
clc
inc
out
sbb
jo
push
adc
sti
es
mov
pop
lcall
cmp
dec
out
popa
mov
pop
iret
ds
push
jge
dec
add
mov
push
fstpl
insl
and
xor
xor
sbb
xchg
jo
loop
out
lea
out
xor
jae
push
sub
sub
loopne
leave
out
daa
incb
sub
mov
movsb
ret
aas
mov
lock
arpl
lock
push
adcb
xchg
push
jg
out
xchg
lahf
loope
fstl
fldcw
cmp
ljmp
cmp
in
loope
adc
int
stc
aaa
push
fnstsw
mov
andb
nop
and
xor
out
leave
sbb
or
mov
mov
xchg
mov
rcr
jb
adc
cmp
mov
pushf
jb
cmp
int
mov
mov
jno
pop
aas
call
push
push
lds
bound
inc
sbb
jae
xor
pop
pop
pop
mov
push
aad
mov
push
push
sub
cmpsb
rclb
scas
shlb
pop
pop
repz
scas
add
rolb
inc
mov
or
lret
xor
outsb
sti
jne
cld
cmc
orl
mov
adc
imul
cli
imul
fbstp
push
push
and
pop
cmc
push
clc
pop
out
or
in
push
cmc
mov
and
bound
stos
adc
mov
mov
push
sub
outsl
fbstp
fcomi
jge
dec
cmpb
aaa
xor
in
and
stos
aam
fistpl
sbb
popa
mov
lea
bound
popf
sbb
ds
stos
adc
mov
cmpsb
cmp
inc
inc
push
add
fisttps
jp
mov
out
loop,pt
lahf
fcompl
leave
pop
push
cmp
nop
cmp
setl
inc
push
sbb
push
dec
into
push
push
mov
mov
stos
dec
cmp
cmp
rorl
insl
stos
xorl
out
stc
mov
ret
repz
push
dec
pop
jns
xchg
jae
sti
out
lock
inc
mov
into
inc
loopne
push
cwtl
sbb
repnz
cmp
hlt
repnz
sub
pop
lods
ror
mov
in
xor
daa
jl
cmp
ljmp
cmp
subb
inc
hlt
adc
mov
adc
cli
sbb
je
pop
daa
mov
ret
inc
sbb
fsubl
icebp
nop
jg
lret
pushf
repnz
pop
ffree
pop
movsl
mov
adc
sbb
jl
or
subb
mov
adc
fsubrs
and
adc
shrl
daa
aaa
loop
fwait
sub
xchg
inc
add
outsb
rcll
xorl
cld
mov
popf
push
clc
mov
inc
pop
push
clc
shlb
cmc
stos
xchg
pop
rclb
add
ss
push
push
cmpsl
call
cs
lret
mov
out
cmp
sub
sub
out
xor
fldenv
test
mov
lret
push
repz
push
clc
jae
stos
inc
lds
in
inc
push
scas
pop
orb
shr
out
xor
out
cmpxchg
sub
sbb
add
ds
psubusw
mov
cmpb
aam
push
and
mov
iret
cmp
and
xor
dec
inc
and
or
ret
xchg
out
xchg
mov
xor
sbb
xchg
push
push
stc
mov
fisttpll
jbe
push
into
repz
sbb
mov
mov
repnz
pop
adc
in
ja
sti
xchg
insl
cld
pop
int3
push
lods
repnz
sub
inc
xchg
stos
insb
mov
jns
jmp
add
lcall
cmp
mov
sti
loop
orb
ljmp
or
jno
xchg
push
rol
shr
popf
inc
fmull
push
inc
pop
and
pop
mov
mov
push
mov
clc
jge
push
lods
mov
xchg
cs
or
ss
cli
sub
jo
lcall
cltd
mov
movsl
sub
mov
repnz
icebp
sti
ret
push
cli
aad
insl
push
mov
fistps
ljmp
add
dec
mov
mov
int
imul
dec
jmp
sti
stc
icebp
inc
test
pusha
jg
mov
xor
jle
sub
jae
mov
xchg
push
cmp
nop
xchg
jne
jp
xor
adc
xchg
mov
mov
mov
jmp
jae
cmp
cmp
clc
clc
sub
shll
add
jns
sub
paddsb
adc
sbb
fiaddl
movsb
stos
ds
add
add
push
and
fists
cmpsl
adc
inc
cmp
jg
stos
or
pop
sbb
out
mov
adc
xchg
inc
mov
xor
pop
loop
cmp
sbb
add
mov
aaa
add
in
aad
add
rcrb
lods
sahf
or
les
cmpsb
sarb
fucomp
lret
jge
sti
sub
ljmp
mulb
mov
pop
or
mov
adc
xchg
sub
and
ds
lret
into
mov
xchg
jb
push
cmp
movsl
jmp
sbb
call
jbe
iret
out
mulb
test
stc
loopne
xor
pop
outsl
jecxz
stos
pop
pop
xor
es
jge
xchg
pop
sub
add
ret
cld
inc
adc
scas
mov
lahf
jnp
sbb
hlt
push
cmpsl
in
cs
dec
pushf
fidivl
or
fimull
xchg
push
inc
aaa
mov
jb
and
scas
adc
pusha
addl
ret
dec
or
rcll
jle
shlb
pop
and
xchg
jns
out
jne
sub
fbld
and
sahf
inc
sub
movsl
jl
in
iret
std
push
insl
jge
push
sbb
je
out
cmp
cmp
dec
jle
dec
clc
sub
test
sub
xor
cmp
jno
mov
and
inc
in
push
sub
jnp
lea
ja
sti
stc
mov
icebp
inc
mov
jl
or
out
xchg
jge
cld
stos
ficompl
cmc
nop
xchg
scas
push
xor
and
sub
pop
inc
sbb
push
pop
push
stc
orl
adc
xor
or
ljmp
mov
push
repz
push
scas
mov
xchg
lss
imul
mov
aam
bound
fmul
lock
mov
stos
jb
mov
cli
xchg
lret
mov
mov
cmp
inc
addl
in
in
int
popa
aam
dec
fstp
mov
adc
lods
and
pop
int
sarl
inc
adc
add
fcompl
lea
dec
stc
in
movsl
test
stc
mov
push
inc
lea
rclb
mov
jne
sub
roll
xchg
xchg
cmp
scas
fcmove
out
mov
mov
shl
lods
push
in
adc
test
scas
jbe
das
rcll
test
daa
add
mov
ss
in
sbb
loope
cmp
lds
mov
push
cmpsl
mov
push
dec
xor
and
pop
arpl
jno
or
xchg
cmp
cmovle
ret
push
shl
imul
les
test
cli
test
jnp
into
cwtl
rol
add
or
fucom
push
das
xlat
es
jne
inc
jg
js
inc
mov
and
pop
mov
aaa
js
jo
inc
js
xchg
xchg
stos
aaa
sbb
push
out
into
lahf
sub
test
adc
mov
jns
lahf
ja
adc
aam
mov
cs
mov
repnz
loop
filds
add
push
jp
shrb
lock
mov
insl
sub
lret
mov
dec
gs
inc
push
push
push
sbb
dec
stos
in
mov
and
jge
test
mov
jbe
cmpsb
jl
mov
scas
sub
inc
sub
xchg
xor
dec
and
out
mov
mov
sbb
pop
sub
movsb
mov
jecxz
push
adc
mov
fidivs
push
or
ljmp
iret
out
cli
insb
cli
fisubrl
roll
aaa
pop
test
pop
jl
insl
stos
jmp
mov
inc
lahf
sub
std
movsl
iret
sub
inc
test
js
and
test
jns
ficompl
push
inc
mov
add
dec
roll
jg
fnstenv
mov
or
in
jle
cli
push
sti
mov
test
lahf
and
ret
jl
xor
push
jmp
push
sbb
mov
xchg
mov
icebp
ret
pop
in
dec
mov
addb
xor
dec
leave
push
loope
mov
sbb
movsl
xchg
cmpb
popa
xchg
cs
dec
dec
jbe
loopne
xor
pusha
jecxz
out
add
xor
out
jl
out
fistps
fidivl
mov
mov
or
adc
shl
aaa
ljmp
cmp
xorb
sbb
cmp
or
cltd
cmp
xor
movhps
stos
in
mov
adc
lea
inc
mov
push
lock
outsl
push
test
lods
ret
repz
icebp
ret
mov
cli
or
clc
or
loop
fistpll
push
xchg
cmp
jmp
in
loopne
cltd
xchg
push
cmp
shl
imul
scas
call
lock
clc
mov
mov
inc
notl
push
xchg
adc
shlb
inc
testl
mov
jg
fstl
and
add
or
repnz
popl
mov
test
pop
fadds
movsl
pop
out
pop
pop
push
mov
jp
fprem1
push
cli
rorb
pop
pop
adc
pop
mov
ja
add
mov
push
cmp
lods
sti
in
sarb
dec
pop
xchg
mov
fcompl
xchg
jp
ficompl
sub
repz
push
loop
test
movsl
jns
test
clc
mov
test
arpl
lock
pusha
in
mov
rol
xchg
dec
cld
push
cs
arpl
jl
ficoms
push
sub
mov
mov
mov
cwtl
push
xchg
insl
mov
addr16
sarb
iret
out
hlt
pop
mov
pmaddwd
scas
movsl
inc
mov
testb
xor
xchg
movsl
push
cmc
adc
les
pop
js
push
adc
scas
adc
test
ja
out
xchg
inc
fdivrp
push
dec
out
pause
stos
inc
cmpsl
adc
push
sti
shrb
xchg
mov
decb
fucom
jbe
sbb
lcall
es
insb
mov
inc
pop
inc
popf
push
les
jno
or
popf
subb
push
std
insl
insb
xchg
in
ljmp
mov
stos
stos
lahf
jg
loopne
xor
es
int
and
loopw
fnsave
jmp
test
and
jne
andb
fidivrl
xlat
add
add
clc
push
sti
loopne
xchg
fwait
push
ret
in
jl
mov
jmp
jecxz
push
mov
inc
pop
outsb
in
rcl
stos
iret
jae
lds
rcll
push
stc
push
push
daa
data16
push
sub
dec
push
xchg
jno
ds
arpl
adc
aas
adc
in
sub
mov
xor
cmp
outsl
jno
ds
or
xlat
outsb
jno
sahf
cltd
leave
int
push
imul
add
icebp
mov
movsl
sub
dec
les
out
pop
and
dec
pop
pop
and
lds
ss
jecxz
push
cmp
mov
pop
iret
pop
sbb
ret
mov
sti
test
inc
mov
fisttps
mov
outsb
sub
pop
fwait
addr16
mov
orl
sub
jo
fwait
cvttps2pi
xor
jae
enter
push
push
lods
push
mov
leave
test
push
mov
mov
cltd
into
and
ficoms
inc
dec
stos
xor
in
and
fadds
outsl
mov
push
jmp
or
add
repz
push
stos
loop
adc
enter
sub
xchg
xchg
dec
sub
mov
fldcw
insb
inc
cld
add
aaa
divl
push
xchg
test
dec
and
repnz
adc
pop
outsl
call
in
loop
mov
ret
enter
shrb
gs
and
push
pop
dec
mov
movsb
iret
test
dec
cld
pop
insl
mov
imul
jno
les
mov
adc
mov
adc
repnz
adc
out
cli
mov
sbb
mov
xor
jge
add
sbb
lcall
rol
or
ja
push
xor
pop
push
fistps
sub
sub
flds
mov
bound
outsb
outsl
jl
mov
sub
arpl
les
add
call
mov
nop
ret
rorb
aad
or
sub
imul
push
popa
and
sbb
pop
xchg
clc
mov
dec
jnp
icebp
divl
mov
xchg
mov
dec
mov
dec
mov
pop
mov
lcall
out
jl
inc
sub
sbb
sub
xchg
loop
nop
mov
arpl
mov
dec
and
pop
scas
mov
in
cmpsl
jb
xlat
ret
imul
stc
push
push
scas
or
mov
and
mov
test
pushf
pop
push
sbb
sbb
cmpb
xor
dec
mov
add
mov
rol
sub
mov
jge
fcmovb
mov
dec
dec
cmp
push
inc
mov
and
mov
je
out
sbb
cmp
xchg
fwait
stos
and
sbb
lret
mov
adc
sub
and
jnp
stos
xchg
sbb
addr16
pop
pop
cmp
pop
pop
jge
or
movsl
and
cwtl
sub
mov
cwtl
out
add
rcl
mov
pop
xchg
mov
aad
add
sub
lahf
in
add
int3
jnp
xor
push
fsubrl
mov
shl
mov
cld
test
jp
enter
clc
adc
fnstenv
cmp
cmp
js
mov
lods
mov
fsincos
xor
xchg
add
mov
xorl
rolb
repz
test
aad
in
inc
and
pushf
jg
mov
dec
sti
sbb
es
fwait
push
dec
clc
cmp
jbe
lock
jge
add
add
sar
lea
jmp
in
xor
and
test
inc
xchg
repnz
pop
mov
imulb
dec
xor
gs
lret
adc
lods
mov
out
mov
nop
ss
sbb
push
push
push
jbe
dec
xchg
das
nop
sbb
or
push
jae
shl
mov
mov
repnz
rol
xor
xor
dec
cli
ficoms
lret
cmpsb
mov
pop
lcall
int
aam
jb
lods
jae
sub
mov
xlat
loopne
testb
lret
scas
lods
dec
mov
loopne
int
call
fs
sbb
pop
cld
adc
jle
pop
mov
sub
sbbb
push
cs
sbb
popf
or
cmc
dec
loopne
or
divl
lret
pop
jl
xor
push
stos
jo
aad
sub
lret
movsl
fldcw
movsb
sub
jb
lret
das
cmc
mov
test
outsb
or
dec
aas
sbb
inc
ret
jno
stos
fimull
scas
js
lods
push
lea
sbb
js
mov
idivl
xchg
dec
jmp
and
insb
dec
gs
incb
sarl
adc
shrl
cmovbe
rcl
cmpsl
jbe
jb
fld
or
adc
mov
adc
pusha
mov
lret
sbb
cli
aam
xchg
popf
imul
cli
sbb
in
jno
mov
mov
sarl
es
nop
push
ret
xor
outsb
leave
mov
clc
ds
jecxz
cwtl
lock
inc
cld
in
fbld
outsl
add
push
jmp
xchg
and
mov
or
mov
xchg
push
sbb
add
jle
mov
pop
ss
sbb
xchg
and
adc
cmp
lds
push
dec
mov
cs
lret
xchg
push
lock
scas
xchg
jp
sbb
sbb
sub
ror
xor
mov
jne
loope
ds
rcll
loop
inc
rcrb
sbb
movsl
jbe
mov
lcall
lock
or
lods
loope
mov
daa
ja
mov
pop
hlt
shl
pop
sub
mov
movsb
push
fsubs
adc
cs
fs
fistl
adc
in
lret
scas
mov
push
mov
das
lcall
lock
std
cmp
lcall
pop
jno
clc
in
pop
stc
pop
and
ss
add
ss
mov
das
adc
push
add
jmp
std
sbb
or
dec
subb
mov
mov
bnd
stc
stos
std
push
and
mov
pop
out
lcall
adc
jl
clc
std
loope
cmpl
out
test
movsl
pop
mov
push
ffree
lea
fisttpl
adcl
filds
pop
ja
mov
lock
jecxz
mov
aas
loopne
enter
out
push
sbb
popa
sbb
sbb
adc
fwait
mov
hlt
xchg
mov
dec
orb
cs
test
sub
ss
das
or
ficomps
outsl
pushf
jecxz
cld
sub
outsb
stc
jmp
test
and
enter
ret
clc
xlat
out
add
js
fistpll
mov
data16
jno
or
xchg
mov
mov
jno
xor
incb
xchg
add
pop
xchg
or
dec
xchg
lds
mov
daa
pop
shlb
push
clc
scas
jns
divb
jnp
pop
js
gs
jl
dec
jmp
add
xchg
jp
in
sarl
mov
jmp
and
push
mov
push
int
push
inc
sub
mov
sbb
int3
ror
jecxz
les
add
fists
fwait
xlat
outsb
mov
sti
lods
aaa
cmpsb
adc
test
adc
sbb
enter
dec
push
je
fiaddl
jbe
loop
inc
arpl
lea
pop
xchg
addr16
sub
mov
sub
adc
xchg
cmc
clc
xlat
rcll
mov
jle
or
ljmp
mov
add
xlat
ja
push
out
outsl
jle
jnp
jle
dec
jno
dec
push
lds
adc
push
fimuls
daa
jns
xchg
test
hlt
inc
mov
lret
imul
sub
negb
aad
xor
xlat
inc
pop
loop
jb
stos
das
cmpsl
je
into
jp
jo
and
pop
jp
push
and
lock
aaa
mulps
in
sarb
loop
cli
xor
jae
mov
pop
test
aam
sbb
sbb
push
mov
pop
aas
insl
notb
shl
stc
mov
mov
jbe
mov
lock
mov
add
or
mov
out
mov
psllw
jnp
stos
pop
shl
xchg
ret
ficoms
jle
sub
cmp
xchg
mov
arpl
daa
adc
jl
cltd
cwtl
xor
add
out
xchg
scas
test
lea
pusha
mov
add
mov
cmp
das
mov
or
or
cmc
adc
out
pop
rcrl
xchg
mov
or
clc
mov
mov
out
jg
add
aas
test
outsl
mov
icebp
push
cmp
sub
mov
call
in
lahf
sub
fnsave
push
mov
clc
ret
aas
into
clc
inc
pop
daa
stos
sub
addr16
mov
adc
subps
jns
sub
psadbw
testb
loop
insb
jg
fxch
jnp
pop
or
fisttpll
sub
sbb
jg
stc
mov
test
xor
sti
jne
pop
iret
sbb
mov
xchg
jge
ss
xor
jbe
and
push
movsl
xor
repnz
cmpb
int3
aaa
pop
jmp
or
pop
inc
xlat
jl
pop
repz
lods
add
and
mov
or
dec
movsl
sbb
filds
jmp
sbb
outsl
pusha
jmp
dec
sti
mov
lods
xor
cmpsl
pusha
inc
mov
pop
popa
in
pop
push
xchg
mov
test
push
lahf
mov
xchg
push
cld
mov
mov
push
stc
push
xor
repnz
xchg
dec
cld
adc
pop
cmp
andb
imulb
jo
test
fstps
or
push
movsb
dec
dec
popf
or
adc
inc
add
shl
sub
loopne
cwtl
mov
repnz
fistl
push
gs
xchg
jle
or
ljmp
jp
mulb
lea
jo
mov
jne
mov
ror
hlt
pop
leave
mov
mov
ret
pop
test
lods
sub
lret
es
jns
decb
ds
call
pusha
cmp
and
adc
cld
int3
dec
push
daa
cld
inc
jne
mov
sbb
cs
add
dec
out
insb
mov
cmp
sub
cmpb
ljmp
mov
mov
sbb
imul
stos
subb
adc
ret
std
cmp
shl
xchg
mov
push
push
jnp
jmp
dec
aam
adcl
mov
push
movsb
sub
aad
mov
jle
aas
pushf
dec
cld
scas
xchg
sbb
ljmp
sub
sbb
pushf
dec
pop
xchg
pusha
fidivrl
jge
xchg
es
push
sub
popf
pop
push
inc
lret
mov
jmp
mov
or
jmp
imul
cwtl
pop
mov
imul
mov
push
xchg
mov
push
in
cmp
clc
xchg
and
jecxz
dec
faddp
lret
ret
dec
cmpsb
enter
dec
movsl
sbb
sbb
inc
cmp
movsl
repz
das
pop
je
fdivp
lcall
stos
fidivs
or
cmpsb
mov
aas
pop
mov
sub
adc
mov
jno
es
movsl
in
test
jp
in
ds
aas
movsb
popf
jne
gs
xchg
test
inc
into
jle
add
test
xchg
cmovb
xlat
cmp
xchg
push
pop
push
insl
cmp
xchg
xchg
and
int3
jnp
loop
xchg
in
ljmp
xchg
adcb
xor
push
sbb
int3
or
push
or
cltd
ss
lret
nop
test
scas
xchg
xor
outsl
push
lcall
or
push
and
push
cmp
outsb
mov
out
mov
jp
pop
mov
sbb
and
fidivrs
fcmovnu
adc
test
nop
cmp
aam
or
insb
dec
jbe
aas
shl
cmc
fisubrl
mov
cli
inc
mov
mov
sub
pop
push
jmp
ret
xchg
jae
sbb
cltd
cmpsl
inc
cmp
ja
cmp
push
adc
bound
rcrl
loop
pop
cli
cmp
les
dec
in
xor
lea
shll
ljmp
mov
inc
or
xor
jne
add
aam
inc
hlt
fdivp
in
jo
les
psubq
idivb
push
xchg
push
jl
mov
outsb
dec
scas
sahf
or
mov
shll
cld
ljmp
lock
fld
pop
aad
pop
daa
test
ljmp
in
pop
loop
mov
push
push
aas
in
dec
ss
add
xchg
inc
or
mov
iret
sub
push
sbb
push
sub
xor
mov
push
insb
push
lcall
in
enter
and
test
pop
jl
repz
loope
in
xchg
cmc
shll
outsb
cld
sbb
push
lds
mov
sub
mov
and
sub
in
out
outsb
xchg
push
mov
aaa
inc
inc
loope
sarl
add
ret
push
or
inc
mov
dec
in
lret
mov
xor
xlat
jmp
adc
pop
hlt
and
xchg
push
sbb
orb
cmp
imul
std
mov
xor
cmp
xlat
fsubrs
rcll
push
fcoms
fwait
mov
les
dec
xchg
scas
aaa
fldcw
cli
fildl
stos
mov
push
mov
ficoms
jecxz
inc
xchg
testb
xchg
lods
test
inc
fnstcw
adc
mov
popf
mov
push
sbb
jl
mov
fisubrl
cmp
leave
fdivrl
mov
and
clc
mov
pop
insb
icebp
mov
outsl
or
xchg
dec
stc
sub
std
divl
mull
adc
cmp
xchg
pop
cmp
mov
ss
sbb
cmp
inc
and
pop
imul
jg
test
in
cli
outsb
ds
pop
xchg
push
loop
adc
in
ljmp
shll
jge
inc
add
insl
mov
out
dec
add
cld
js
dec
stos
mov
std
mov
mov
popf
pop
xor
push
and
sarb
rcl
sbb
adc
add
jecxz
dec
sub
fistl
mov
sub
movzbl
mov
and
mov
jmp
xor
add
add
xchg
xchg
lods
out
or
dec
pusha
mov
data16
sbb
into
test
mov
or
sbb
mov
je
push
inc
xor
arpl
push
or
fld1
mov
mov
xchg
sub
addr16
xchg
imul
idivl
aam
jae
stos
sub
xchg
andl
jg
loopne
call
scas
xchg
fbld
repnz
mov
inc
decl
lock
push
or
das
jl
enter
mov
out
jns
test
cmp
ret
dec
in
out
push
popf
sbb
bnd
jne
orl
gs
cmp
mov
jl
xor
leave
jo
mov
xlat
in
jno
add
stc
out
mov
push
xchg
popa
mov
subb
xor
xor
aas
fildll
jne
dec
les
test
mov
pop
data16
loop
sti
inc
jne
jb
pop
bound
dec
loop
sub
fmull
mov
adc
aad
push
test
add
xor
lds
stc
das
fcoms
outsb
lret
lods
cmpb
ficomps
pusha
popf
dec
sbb
and
call
in
cwtl
mov
std
pusha
pop
dec
lahf
sbb
mov
pop
out
fidivl
das
xlat
sub
scas
iret
xor
push
mov
in
insb
add
adc
mov
mov
imul
mov
in
or
jne
daa
fsubp
int3
xchg
ret
fs
jl
and
sbb
pop
scas
push
leave
ror
dec
pop
imul
cmp
hlt
neg
push
push
pop
aad
xchg
ret
add
fs
pop
sbb
mov
repz
adc
and
xchg
mov
loope
xlat
mov
pop
divb
outsl
test
or
mov
out
and
sbb
mov
adc
mov
fisttpll
sub
cli
lret
pop
jmp
outsb
ja
inc
movsb
lea
mov
inc
adc
adc
push
push
jmp
add
jnp
nop
imul
xchg
scas
xchg
add
mov
xor
xor
dec
loope
scas
jg
mov
aaa
and
scas
int3
pop
jne
lea
adc
xlat
gs
mov
jnp
ss
aas
lret
lock
lret
xor
push
jmp
inc
je
cltd
adc
adc
ds
std
xchg
cmc
jne
loopne
in
lret
jge
push
xchg
pop
out
dec
pop
es
cmp
cltd
es
xchg
cs
int
add
push
jae
out
inc
test
cmpsb
arpl
mov
ja
shll
stos
aaa
pop
add
test
mov
cmp
testb
lret
fdivs
shl
pop
sbb
repnz
and
mov
lods
jae
xchg
jp
repnz
or
loopne
loope
push
out
int
popa
mov
mov
scas
cmp
pop
insl
stos
mov
mov
or
mov
dec
loop
pop
push
out
cmp
sub
fdivs
aad
push
cmp
popf
push
sub
dec
lcall
and
idivl
sub
xor
mov
test
test
pop
les
leave
pusha
lock
ret
repnz
popf
bound
stos
test
das
and
loopne
sub
imul
lcall
or
inc
jns
cmp
xor
inc
cli
sbb
pop
ret
jnp
ja
push
mov
push
lods
jmp
inc
sub
repz
mov
fdivrs
out
fsubs
mov
jns
dec
insb
dec
push
sti
jb
ret
addl
dec
js
fstpl
je
jle
and
nop
push
mov
push
lret
leave
cld
shl
jl
insb
sub
movsb
mov
sbb
shll
fsubl
lods
sbb
shl
mov
shrb
cli
dec
mov
xchg
incb
dec
sbb
ret
sbb
cltd
cmpsb
int
push
aaa
aam
rorl
popl
and
jmp
mov
or
mov
jbe
fwait
adc
clc
cmp
std
clc
pop
jb
stos
cwtl
cld
cmpsl
subl
jl
inc
pop
enter
ret
xor
scas
sub
shrl
push
sub
pop
loopne
and
out
and
sub
repz
mov
mov
and
mov
aaa
subl
jg
in
mov
mov
rol
inc
mov
addb
sbb
lock
inc
test
mov
xchg
stos
adc
icebp
push
xchg
mov
mov
je
and
ret
test
mov
sahf
lods
fsubrp
sbb
pop
mov
neg
cmpsl
gs
bound
ror
lds
pop
cld
jo
dec
xlat
negb
cltd
mov
push
xchg
dec
orl
cli
add
in
test
push
and
jbe
popa
rolb
mov
cs
xchg
adc
cs
pop
scas
push
mov
push
mov
push
sbb
rorl
gs
dec
push
loope,pt
inc
jle
sbb
into
push
pop
add
mov
sbb
ret
repnz
in
in
or
iret
loopne
shl
clc
dec
lret
int3
push
mov
sbb
das
movsl
inc
adc
or
sub
ret
inc
mov
lods
cwtl
cmp
cmp
mov
arpl
movsl
test
pop
sbb
lret
sbb
push
faddl
out
bound
sub
rcrb
js
shrb
dec
enter
ds
scas
cmc
shll
push
test
aad
push
rolb
push
test
mov
add
lcall
inc
push
jp
call
jge
das
push
clc
pop
mov
inc
idivl
lret
daa
or
xchg
and
inc
xor
mov
lock
ss
faddl
insl
jg
daa
fisubrs
xchg
mov
cli
fsubrs
push
adc
mov
jbe
lcall
aas
ficoms
or
push
icebp
lds
cmp
mov
je
loope
in
mov
pop
cltd
or
add
pop
pushl
xchg
notb
je
inc
ficoms
jo
xorl
and
pop
out
push
inc
in
sarb
xor
cmp
leave
fwait
pop
pop
pop
rcll
push
arpl
rclb
es
mov
mov
or
mov
add
ljmp
mov
ret
fs
xchg
les
out
inc
fsubrl
clc
movsl
fdivrs
pop
cmp
cmc
addb
fwait
dec
or
cmc
pushf
dec
mov
pushf
pop
xor
or
cmc
and
popf
pop
push
fdivrp
xchg
mov
movaps
jne
jne
mov
jle
scas
testl
sub
leave
cmpsb
push
je
mov
mov
xchg
xor
sahf
cli
into
aas
sbb
mov
lods
and
add
push
shr
stos
mov
mov
or
mov
filds
mov
jl
mov
test
repz
ja
mov
js
repnz
test
mov
xor
repnz
outsb
shl
imul
stos
mov
jle
inc
jle
loop
divb
mov
and
dec
mov
sarl
sub
repz
inc
sub
mov
push
xchg
enter
roll
ret
adc
xlat
xchg
adc
pop
out
int3
data16
rolb
aas
xchg
lcall
xchg
ljmp
jge
inc
inc
inc
gs
fwait
add
repnz
lcall
std
cmp
imull
xacquire
dec
mov
push
jg
into
add
sub
push
mov
add
jb
mov
cmc
or
scas
mov
shlb
mov
stos
test
ds
sub
cmc
scas
mov
pop
clc
iret
sub
sbb
mov
ja
mov
jns
cld
imul
cwtl
bound
dec
aad
rcrb
mov
inc
push
incb
inc
mov
int3
mov
pop
loopne
mov
pop
addr16
lret
or
repz
js
adcl
dec
shrb
mov
inc
xchg
mov
in
mov
dec
in
pop
fsts
jbe
movups
xchg
jl
jl
pop
xlat
enter
idivb
cmp
xchg
mov
add
scas
xorl
xor
inc
test
or
xor
dec
add
and
pop
pop
mov
es
push
int3
lahf
cld
shlb
pop
mov
jae
inc
push
mov
ret
jecxz
ds
and
fldl
jl
xlat
jnp
mov
push
xchg
or
test
stc
and
incb
outsl
mov
jl
jge
jns
pop
inc
or
jmp
call
dec
sbb
add
xchg
or
scas
pop
cmp
rcll
push
insl
loope
mov
dec
jp
sarb
lret
mov
cmc
sub
or
out
icebp
mov
jmp
popa
outsl
cmp
dec
or
inc
sbb
push
popf
hlt
loope
mov
int3
jge
andb
sub
addr16
repz
pop
movsl
outsl
mov
inc
enter
lock
pop
sbb
ja
push
jb
repz
sbb
imul
in
and
ljmp
push
sub
scas
in
and
scas
xchg
call
push
jle
cmp
mov
test
cli
jge
pop
lcall
in
push
shrb
jecxz
mov
leave
sbb
pop
test
lock
inc
xchg
push
push
popf
das
out
rcll
jnp
and
clc
xchg
xchg
flds
dec
in
aam
xchg
dec
mov
cmp
push
shrl
xor
pop
inc
dec
lcall
out
adc
dec
mov
pop
lret
aaa
xchg
arpl
mov
push
lret
mov
lahf
cmc
xchg
jno
pop
imul
leave
or
jle
hlt
mov
shrb
data16
test
mov
jb
inc
out
pop
mov
jmp
pop
or
mov
std
pop
mov
adc
xchg
adc
add
lods
inc
pop
mov
daa
mov
dec
nop
clc
testl
lret
dec
xchg
subb
data16
repz
lods
insl
pop
pushf
out
ror
sbb
cmpsl
sbb
ss
mov
push
decb
pop
fstl
mov
shll
clc
nop
push
fwait
mov
adcb
cmc
movsl
int
xor
inc
add
mov
shll
mov
jg
mov
jo
mov
mov
popf
or
std
xor
sarl
sub
bound
cwtl
xorl
push
push
xor
in
cmp
cld
psadbw
insb
shrb
cmc
cmp
call
mov
aam
pop
cmp
add
and
icebp
mov
in
lods
lock
das
notb
repnz
jg
or
hlt
jae
pusha
in
stc
mov
into
stc
aas
dec
mov
shl
mov
rcrb
enter
sbb
lret
js
push
xchg
or
inc
jo
rorl
das
loopne
inc
sbb
xor
mov
mov
iret
pop
fidivl
jo
gs
test
pusha
insb
jg
mov
cmp
push
test
cli
and
ja
leave
xchg
icebp
shll
mov
sub
lods
adc
in
ficoml
aas
dec
mov
fcomip
nop
shl
lret
inc
jecxz
cltd
mov
mov
cmp
pop
sub
xchg
in
test
push
cmp
or
dec
pop
mov
es
test
das
sub
mov
fmull
out
scas
xor
popa
or
stos
iret
rorb
out
inc
mov
cmp
popa
inc
fwait
ss
mov
push
jmp
push
or
dec
out
bound
mov
popa
add
dec
xchg
inc
xor
sbb
add
xchg
jg
ss
pop
pusha
cmp
xchg
xlat
pop
dec
inc
in
icebp
dec
ljmp
or
lock
or
cltd
push
and
mov
das
xchg
dec
std
cmp
xchg
lods
sub
shrl
test
add
mov
xor
imul
xor
dec
stc
pop
mov
lods
test
and
mov
dec
in
test
xor
or
xchg
ret
clc
ret
xchg
sub
call
xchg
jmp
add
fistl
xor
push
testl
pop
push
xchg
pop
arpl
shr
ds
pop
cmpsl
push
arpl
cltd
cmp
jmp
xchg
cmp
or
push
inc
dec
mov
out
jmp
sbb
mov
imul
ljmp
mov
dec
dec
dec
inc
inc
out
pop
ret
inc
data16
std
ror
push
lods
sti
or
dec
fsubr
fcomps
dec
test
out
xchg
mov
fildll
jbe
lods
test
sbb
scas
xchg
loop
inc
inc
loop
outsl
pop
negb
mov
push
fdivl
and
ror
lret
rcrl
sub
pop
cmp
ja
orl
ljmp
xchg
fwait
sbb
lock
sub
in
test
xor
lock
ret
cmc
dec
cmp
mov
stos
rsqrtps
pushf
int
push
inc
ljmp
lods
in
scas
sub
scas
fldenv
adcb
mov
mov
testl
xlat
loopne
jge
leave
int
repnz
pop
les
outsl
std
decb
js
jb
cmp
test
push
inc
mov
out
inc
adc
push
push
pop
aaa
push
inc
lahf
sub
dec
mov
xchg
adc
fcmovne
adc
fbstp
sub
std
mov
xchg
in
and
popa
xchg
sbb
xor
pop
lods
pop
test
and
int3
push
std
std
out
pop
sbb
arpl
popf
ja
loope
mov
shll
and
jl
ret
aam
xor
xchg
xor
sbb
mov
push
sub
arpl
jle
loope
adc
cwtl
cmp
push
cmpsb
add
enter
mov
pop
push
jl
movhps
inc
xchg
mov
out
push
pop
and
sbb
mov
pop
loope
ret
dec
or
sub
mov
mov
fsubl
xchg
cli
xor
jae
cmp
ss
je
jb
jbe
test
iret
xchg
mov
jge
in
mov
jmp
adc
dec
imul
into
xor
nop
in
aad
mov
stc
js
out
ds
jl
test
jg
push
pop
jle
fwait
lods
test
push
subb
inc
pop
pop
sub
inc
cmc
aad
jecxz
loope
sbb
jns
sbb
loopne
or
cmc
imul
and
ljmp
dec
cwtl
mov
adc
xor
lret
andb
inc
imul
iret
push
cmc
out
outsb
xlat
lds
push
test
push
into
inc
in
push
cld
jge
cmp
xor
cli
insl
sub
outsb
mov
in
pop
ja
testb
repz
inc
mov
push
jns
into
faddl
jbe
cmp
push
add
sub
les
aad
ja
dec
and
int
mov
adc
jecxz
lcall
jno
imul
cmpsb
mov
sbb
cmp
jmp
dec
mov
aaa
or
clc
loopne
scas
add
push
sbb
nop
mov
les
pop
pop
cmp
fwait
push
out
loop
sbb
andb
cmp
add
imul
test
clc
ljmp
mov
sti
ljmp
int3
pop
leave
stos
test
ja
std
clc
shlb
dec
pop
push
or
loopne
in
inc
mov
popa
clc
sub
xchg
fistpl
rcr
xorl
faddl
mov
sbb
mov
jle
inc
jg
pop
pusha
call
popf
ljmp
call
cs
rorl
inc
add
cmpl
int
fwait
push
popf
aam
jge
shll
mov
sub
mov
inc
ljmp
push
in
test
push
cmp
cld
sub
out
in
cmp
out
imul
cmp
ret
repnz
push
sbb
pop
mov
pop
xchg
mov
jp
leave
out
enter
cmp
lret
mov
ljmp
stos
pop
push
jbe
mov
enter
aad
mov
mov
and
mov
mov
jge
nop
leave
int
adc
fnstenv
pushf
lahf
and
icebp
inc
xchg
lcall
ljmp
lds
or
sti
mov
sub
cmc
lea
cmp
fidivrl
fadd
push
jle
fdivrl
gs
mov
loopne
push
mov
mov
das
pop
push
sbb
insb
push
jbe
loop
imul
mov
ret
pop
aam
pop
pop
cmp
aam
aas
lds
stos
xor
decb
mov
inc
jae
inc
in
dec
mov
cld
dec
mov
out
lds
pop
and
or
mov
sti
jo
popa
push
push
jp
mov
cmpsl
lock
mov
inc
push
iret
mov
mov
ds
test
mov
push
pop
lahf
jne
mov
movsl
adc
outsb
fists
pop
adcl
xchg
sti
scas
ret
mov
xchg
das
mov
fistl
stos
xchg
mov
out
lock
out
and
adc
mov
jmp
jnp
cmp
pusha
xchg
lret
mov
cli
xor
sbb
inc
incb
jl
insb
sub
xor
incb
pop
loope
dec
xchg
mov
mov
cltd
xor
cmp
movsl
call
icebp
aaa
pop
ret
rolb
or
inc
out
pop
jmp
pop
hlt
popa
sbb
dec
mov
enter
insb
xor
mov
fcomps
stc
loop
jbe
mov
lea
cmp
dec
lcall
test
add
ljmp
inc
adc
push
dec
mov
aas
jbe,pn
scas
mov
cmp
dec
push
lds
mov
pop
inc
mov
mov
or
and
jp
adc
vmovshdup
movd
and
and
out
nop
repz
insl
shll
adcl
push
xchg
xchg
push
in
mov
aad
xchg
fs
mov
xchg
test
je
mov
cmp
pop
mov
and
pushl
inc
mov
mov
std
loope
inc
outsb
xchg
mov
lods
sub
sbb
mov
mov
dec
inc
cld
int3
mov
aas
jb
in
pop
mov
pop
mov
ret
mov
add
adc
rcrl
daa
in
cmpsb
out
jns
sub
cmc
in
pop
int3
and
mov
fildl
popf
in
mov
pop
sub
push
bnd
stos
cmp
push
or
cmp
pop
xchg
lret
out
cmp
into
pop
cmp
pop
sbb
sub
les
push
jbe
je
cmpsl
xchg
mov
dec
shll
es
mov
xor
jnp
pop
sub
sahf
mov
mov
adc
inc
sub
push
sahf
adc
out
int
sbb
rorl
pop
aaa
addb
xor
mov
add
lret
mov
push
lods
push
imul
ljmp
mov
push
ds
sti
jl
push
lea
mov
jno
pop
cmp
cs
lds
test
mov
lahf
pop
push
pop
test
xchg
pop
lods
out
push
dec
push
imul
out
maxps
mov
out
pop
or
fiaddl
cs
dec
add
ror
jmp
icebp
sub
das
inc
pop
fisttpll
fsubrs
mov
xchg
out
sbbb
fnsave
push
add
mov
add
out
addl
ret
dec
dec
cli
dec
dec
call
movsl
lods
lea
jle
inc
inc
pop
sub
iret
push
test
push
call
subl
orb
dec
xor
popa
loope
scas
sbb
or
push
mov
sbb
in
xlat
pop
xchg
and
mov
psrlw
mov
fimull
and
movsl
fistps
add
add
mov
outsb
mov
and
cmpb
inc
xor
js
lds
adc
dec
fiaddl
adc
inc
jp
adc
xor
push
sarb
roll
pop
dec
repnz
idivb
add
je
cmp
jg
pop
lret
jl
or
fdecstp
pop
pop
sbb
jg
pushf
insl
lret
mov
mov
sbb
mov
lret
cmp
pusha
sub
and
cmp
push
xchg
lds
shr
push
jmp
loopne
sub
repnz
imul
ret
sti
bound
in
push
out
int3
mov
xchg
es
lea
mov
fisubrs
mov
stos
xchg
dec
nop
imul
xchg
movsl
jge
mov
push
lret
mov
negb
dec
xchg
test
subb
int3
pop
aaa
jecxz
rcrl
inc
jnp
mov
dec
pcmpgtd
jp
jbe
int
sbb
fidivs
cmp
dec
sbb
adc
adc
in
addr16
dec
divb
cmpsl
fdivl
sahf
pop
mov
ret
divl
lahf
fstps
clc
loope
test
jmp
cmp
push
mov
ja
dec
sbb
orl
mov
lods
iret
push
dec
outsl
mov
lods
outsb
pop
insl
insb
add
mov
lahf
xchg
es
cmp
rcrl
int3
inc
pop
and
lret
xchg
jmp
jnp
mov
in
icebp
loop
pop
xchg
push
lds
icebp
pusha
std
arpl
push
push
mov
lds
mov
mov
pop
je
xchg
subl
sbb
pop
dec
adc
jp
ss
dec
into
jnp
jle
sub
push
in
into
fstl
mov
inc
lods
or
fwait
mov
cmp
es
sub
push
add
fcomps
adc
outsb
pop
subl
cmp
repnz
scas
test
sbbl
cli
sbb
push
mov
xor
and
mov
stc
popa
cmp
sbb
leave
mov
jmp
and
shrb
ret
les
fcmovu
in
cwtl
arpl
and
cmc
cmpsl
xlat
sub
cmp
add
jo
mov
mov
ficompl
lret
scas
sbb
add
xchg
adc
pusha
arpl
cli
mov
pusha
lahf
hlt
inc
xor
pop
jle
pop
adc
and
ljmp
pop
mov
dec
hlt
push
int3
test
jecxz
mov
sbb
lahf
jno
jno
clc
imulb
fisttpll
adc
mov
out
add
int3
sbb
jmp
aaa
cmp
cmp
test
popa
sbb
cmp
repnz
stos
rclb
sti
jno
int3
sub
test
pop
xlat
sbb
lds
pop
cs
sbb
dec
pop
fnstcw
dec
negb
push
lcall
dec
popa
jl
dec
xchg
ljmp
jle
jp
sahf
daa
xor
cli
xlat
sar
test
xor
adc
xor
sbb
jle
repz
cmc
push
mov
pop
mov
js
lret
mov
adc
lret
cmp
jmp
mov
xor
popf
out
fstps
mov
daa
js
leave
testl
cmpl
pop
scas
jmp
pop
xor
and
repnz
xor
push
push
and
outsb
sub
in
cmp
jno
cmp
in
jnp
cmp
sub
xchg
or
pop
pop
cli
cltd
out
cmp
xchg
inc
das
div
dec
jbe
pushf
rolb
out
xchg
out
loop
movsb
jbe
mov
lods
in
sbb
stc
loope
pop
loope
mov
loopne
dec
mov
jmp
xchg
rolb
clc
aaa
insl
ds
jecxz
imul
lea
jo
in
cmpl
andl
shrb
lahf
mov
push
sub
loopne
in
push
fstp
jno
ja
push
jecxz
clc
xchg
mov
mov
jo
pusha
or
push
cmp
cmpsb
jns
sbbl
ss
scas
repz
stos
daa
adc
out
fstl
es
add
jmp
xlat
cmp
ret
xchg
cmc
inc
lret
scas
pop
scas
lret
test
repz
rcrl
jb
es
adc
ljmp
push
ficoms
lock
aas
and
jecxz
jb
test
pop
xor
std
jae
ret
push
pop
cmpsl
repnz
loop
jno
scas
movl
mov
subl
sub
fdivs
adc
fcomps
fdivl
pop
pop
add
mov
cmpl
pop
sbb
push
aaa
movaps
das
xor
lods
test
iret
and
arpl
adc
mov
aas
cld
lock
xorl
and
pop
pop
pop
or
je
dec
out
mov
lret
or
jp
push
adc
inc
in
andl
movsl
xchg
int
test
test
cmp
out
int
gs
js
xchg
lods
push
add
or
bound
cli
xbegin
dec
pop
negl
mov
mov
push
mov
das
adc
lret
mov
insb
mov
out
mov
fstl
stc
fistps
pop
les
pop
add
and
cmpsb
sub
jg
mov
sbb
push
scas
lds
add
cli
pop
push
jns
pop
mov
mov
push
in
in
lock
mov
pop
fisubl
stc
int3
and
insl
and
aas
mov
add
ret
jl
mov
pop
daa
cli
aad
stos
fdivrs
add
jbe
iret
pop
pop
shlb
test
mov
orb
xlat
push
push
movsl
push
lods
outsb
fs
outsb
sub
fs
imul
addb
xchg
gs
push
xor
stos
push
and
fisttps
mov
or
cltd
or
sti
lret
adcl
xchg
xchg
icebp
ds
sub
mulb
lods
pusha
xor
dec
pop
pop
cs
lods
sbb
mov
or
into
insl
sbb
repnz
adc
push
dec
leave
xchg
inc
fwait
adc
fidivs
icebp
leave
xorl
std
and
push
cmp
subl
mov
xor
cmp
lea
scas
pop
std
adc
pop
cmp
sahf
iret
add
movsb
lahf
add
out
movsb
sbb
das
jne
test
insl
adc
sub
pop
test
test
das
push
movsb
mov
test
push
push
cmpsb
outsb
pop
movsb
dec
aad
jno
stc
sub
sbb
xchg
cmpsl
pop
inc
cli
jnp
testb
scas
lods
mov
mov
fistps
mov
lds
jae
mov
repnz
test
repnz
xor
or
fldenv
inc
dec
sbb
lods
bound
icebp
xchg
movsb
mov
inc
in
pop
cli
lock
call
pop
mov
sahf
cmpsb
mov
jecxz
xchg
sbb
jg
in
cmp
cmp
mov
pop
push
push
loope
icebp
ret
fwait
aam
jne
ljmp
inc
and
in
ds
mov
lret
mov
stc
loop
sub
and
dec
ret
subb
into
xchg
icebp
fildll
ja
mov
pop
test
mov
jae
dec
inc
or
lahf
adc
int
out
xchg
cli
das
mov
inc
pop
mov
aad
stos
sub
and
insl
mov
xchg
shrl
mov
and
inc
sar
mov
cmc
lret
mov
das
std
lret
sub
fsubrp
loop
es
xlat
cltd
mov
stos
testl
sarl
xchg
loopne
add
push
clc
fcoml
inc
sti
adc
rcr
inc
jo
inc
in
push
pop
lahf
jmp
out
imul
inc
mov
arpl
test
mov
pop
icebp
jb
inc
xchg
lds
lods
test
das
movl
inc
ret
cmpsl
outsl
data16
sbb
paddusb
pop
mov
mov
mov
cli
sbb
cmp
scas
sahf
dec
lret
mov
jns
pop
pop
jmp
sahf
cmp
lods
pop
pop
scas
stos
add
lret
mov
repnz
inc
lea
dec
aaa
push
push
lret
cltd
xchg
pop
cmp
mov
push
push
lahf
cs
mov
mov
pop
inc
sub
cmp
jne
std
add
xchg
rcrb
mov
inc
and
rcl
hlt
loop
test
out
push
dec
and
rep
ljmp
and
pushf
jecxz
inc
pop
dec
adc
aam
incl
movsl
js
sub
nop
xor
cs
out
pop
mov
push
js
jae
xchg
pop
enter
aaa
fstp
pop
aas
xchg
xchg
mov
pop
aas
outsb
add
pop
cmpsb
cmp
push
mov
dec
jp
lahf
in
push
pop
gs
inc
aas
movsb
cmc
sub
rcll
stos
and
gs
mov
iret
inc
adc
sub
lret
sub
int
pop
call
lods
icebp
add
in
mov
ja
push
in
or
xchg
ret
dec
dec
dec
push
out
and
and
push
imul
push
inc
popf
or
pop
shlb
ret
cwtl
pop
pusha
mov
in
insl
xorb
rcrl
testb
and
into
add
and
call
in
fidivrl
adc
fdivrl
cmp
xchg
push
stos
add
sub
add
das
cmpsb
or
or
push
push
sub
mov
call
push
add
mov
push
jae
sarb
sub
stc
repnz
pop
mov
out
push
mov
stos
xor
test
add
xor
fdivl
sub
push
pop
pop
lret
mov
faddp
pop
movsl
int3
je
outsl
cs
in
cmp
and
mov
jle
sbb
hlt
mov
and
ja
std
stos
jne
jge,pn
push
pop
push
dec
mov
pop
out
or
ret
decb
xlat
and
loopne
push
ja
scas
lcall
add
sbbl
inc
mov
clc
xchg
into
xor
xchg
pusha
cmp
dec
or
lods
imul
lret
ss
sti
push
cmp
bound
repz
out
enter
cmp
pop
or
jl
push
insb
repz
mov
xor
jecxz
xsha1
cmpsb
dec
xchg
push
push
clc
mov
inc
filds
and
mov
pop
pop
and
sti
jb
fsubrp
pusha
mov
push
push
imul
cwtl
sbb
sbb
cmp
fiaddl
insl
lock
dec
cmpsb
cld
movsb
andl
mov
mov
push
jle
fisubl
jg
ljmp
push
cli
add
loope
scas
cmpsl
imul
xlat
rolb
dec
pop
mov
dec
push
sti
cmpsl
mov
fimuls
cli
mov
xlat
gs
xchg
mov
clc
jle
mov
push
push
mov
jl
lods
cwtl
cmp
stc
std
mov
int3
shll
loopne
add
sub
and
loope
es
xchg
insl
daa
cmp
nop
shlb
adc
adc
xchg
dec
fnsave
repz
das
lods
mov
lods
sbb
adcb
decl
push
add
fistl
mov
sbb
into
ja
xchg
inc
loopne
andl
aaa
mov
cld
push
xor
test
repz
mov
mov
in
and
xchg
enter
push
or
sub
xchg
fwait
mov
std
mov
push
push
fistpll
dec
cmc
xlat
icebp
jo
push
and
dec
pop
mov
push
in
push
inc
imulb
mov
mov
mov
into
pop
lret
lock
mov
mov
pop
andb
sub
xor
adc
mov
xor
ret
mov
jo
sub
cmp
jno
mov
mov
push
ds
cmp
popa
push
fimuls
xchg
cltd
lcall
stos
xchg
negl
or
sub
pop
pop
scas
lret
cmp
xorb
test
inc
jecxz
jnp
orl
jbe
add
cld
adc
fbld
out
dec
mov
mov
add
jl
imul
orb
or
lret
jne
pop
adc
pop
pop
std
repz
push
aam
stos
fstpt
mov
cmp
das
cwtl
sbb
adc
std
int
in
mov
add
pop
sbb
mov
imul
aam
scas
inc
ds
lods
sub
aaa
push
outsb
mov
dec
imul
cmp
into
fldt
inc
leave
xchg
gs
mov
mov
push
bound
test
and
xchg
fcompl
jecxz
es
in
sti
push
xor
xchg
sub
pop
stos
xchg
fsubr
push
sub
icebp
fcoml
test
in
dec
test
jle
dec
xchg
cmpl
mov
adc
dec
outsl
push
cmpsl
std
loope
out
jge
and
lret
scas
shl
test
cs
decl
sbb
xor
mov
push
daa
jle
es
mov
stos
lret
insl
xor
xchg
mov
and
in
sbb
mov
hlt
fmulp
adc
pop
sub
out
mov
lahf
push
sub
lcall
int3
fidivrs
sbb
mov
sar
push
popa
ja
jecxz
pop
stos
out
mov
dec
inc
jmp
add
bound
adc
pop
dec
enter
add
aas
and
mov
jl
cwtl
or
pop
dec
adc
stc
mov
xor
hlt
sub
inc
scas
mov
adc
hlt
lods
cmc
dec
cltd
push
jp
push
mov
jnp
push
rol
jmp
cld
sub
enter
stc
hlt
loop
jb
jne
fs
stc
lods
movsl
push
ret
cld
add
xor
jne
fcoms
push
out
adc
xor
ds
lock
pop
push
movsb
scas
or
pop
cmc
or
aam
xchg
sub
cmc
cs
mov
xor
aad
mov
repz
mov
sbb
dec
cli
mov
je
aad
xor
test
test
jge
mov
jne
add
pushf
or
mov
mov
mov
cmc
pop
lock
fimuls
shrl
lahf
or
in
and
dec
sarb
add
imul
push
out
shrl
sub
inc
mov
mov
icebp
lcall
sub
lcall
popa
rol
sub
jle
fisubrs
inc
push
adc
jecxz
mov
outsb
cmpsb
gs
nop
adc
dec
jo
fwait
mov
repz
pop
dec
xlat
xlat
mov
xchg
stos
mov
xchg
inc
pop
jg
test
in
add
das
jge
dec
test
popf
loopne
pop
dec
or
xor
push
jo
call
jb
ret
aas
inc
loope
xor
jp
pusha
cli
inc
lock
and
stos
or
pop
test
test
adc
clc
fs
and
mov
xchg
pop
insb
mov
sar
in
iret
pop
push
ss
adc
movsl
jmp
pop
jae
xor
sub
rclb
movsl
pop
enter
test
ljmp
loopne
push
loop
pop
sub
outsl
sbb
mov
data16
cmp
xorb
sbb
cli
lret
inc
icebp
enter
cmp
cmp
or
sbb
adc
movsb
xchg
notb
ja
xor
jb
mov
rolb
sbb
push
fsin
dec
cmp
push
push
pop
inc
std
aad
leave
mov
push
ret
jo
movsl
lret
in
inc
loope
xor
xlat
fsubr
cld
fnsave
int
clc
pop
xlat
fucomi
dec
popf
push
jmp
pop
cmp
mov
leave
out
cli
rclb
adc
in
into
daa
cmpb
out
and
adc
outsl
call
pop
sbb
xchg
mov
mov
std
dec
adc
scas
dec
loop
add
cwtl
xor
das
sub
mov
add
std
std
aas
inc
pop
aas
mov
lahf
jae
ds
sahf
add
and
adc
lock
fwait
lahf
sbb
outsl
ljmp
adc
jp
test
bound
xchg
inc
push
je
addl
and
pop
push
int
das
push
gs
ret
loop
subw
out
mov
add
orl
lods
lret
or
jg
push
mov
aaa
or
xchg
shrl
mov
fsubl
mov
lret
nop
loope
call
and
adc
pop
or
sub
pop
pop
leave
cld
js
popa
js
xchg
bnd
mov
aam
xchg
dec
int3
cwtl
xor
or
fsubrl
loope
mov
jb
sub
dec
ret
dec
and
stos
mov
push
or
sub
outsl
add
sbb
mov
out
cltd
inc
mov
mov
out
fidivl
out
and
out
imulb
adc
repz
lods
fisubrl
popa
dec
repz
mov
adc
inc
addb
pop
add
addb
mov
mov
xchg
mov
xchg
jg
out
jg
mov
je
adc
cmc
mov
int
push
fs
or
cs
push
jmp
mov
push
loope
mov
ret
xchg
std
sub
push
nop
test
inc
cli
ljmp
add
push
out
lds
std
out
push
sarb
push
fcoml
sub
pop
ret
jge
mov
icebp
push
cmp
push
ja
push
jne
call
mov
test
lret
jecxz
cmc
push
lea
cltd
cvtps2pd
jno
cmpsl
scas
lret
outsl
sub
mov
test
ljmp
rcrb
pop
mov
aad
lret
xchg
mov
leave
cs
stc
sbbl
fdivp
xchg
mov
sub
push
in
sarb
pop
push
and
out
test
and
mov
add
loopne
xor
push
daa
pop
aad
jmp
dec
jg
pop
fs
insb
push
sbb
mov
sub
test
ja
jg
jecxz
inc
sub
fldenv
sub
sbb
pop
cwtl
push
stos
or
fwait
xchg
mov
test
lea
in
sbb
outsb
dec
fs
mov
lds
sarb
orl
rcll
mov
stos
and
mov
das
outsb
push
lds
sub
inc
pop
cmp
pop
imul
iret
mov
sbb
mov
mov
aas
testl
inc
clc
lods
mov
popf
mov
inc
ja
fildl
imulb
mov
rcrl
xor
pop
push
ja
pop
in
mov
push
xchg
fiadds
cs
dec
jnp
cmpsb
lods
mov
mov
out
ds
js
repz
push
das
sarb
outsl
adc
or
jle
sahf
xchg
xor
ss
mov
adcl
dec
loope
sbb
mov
mov
jl
xchg
jne
loope
les
sbb
lahf
jge
gs
mov
out
jmp
push
push
cld
fiaddl
repnz
out
inc
jge
ret
xlat
mov
sbb
cmp
jge
pop
iret
pop
std
out
inc
push
mov
or
clc
loopne
pop
pop
jae
and
loopne
sbb
adc
pop
and
mov
xor
cmp
xor
loopne
push
cmp
sbb
sub
ficoms
push
fdivl
pop
jge
and
jge
inc
adcl
and
sub
mov
loope
cli
fisubrl
mov
lcall
push
jle
data16
sbb
add
addl
cmpsl
push
inc
sti
test
cltd
incb
mov
xchg
fimuls
movb
outsl
push
js
popf
pop
fistpl
sbb
or
mov
cmp
mov
sub
jb
nop
cmp
lods
jmp
fldt
mov
fildll
jmp
mov
shll
lock
mov
int3
pop
stos
sub
mov
push
xchg
kmovb
popa
lcall
inc
lcall
sbb
fdivrs
lds
int3
xchg
in
out
stos
or
push
mov
xchg
filds
in
mov
dec
lds
jle
fsubrl
jno
sub
mov
jg
xchg
push
das
shrl
push
pop
ja
insb
push
stos
sbb
push
loope
ljmp
fnstsw
mov
pop
mov
xchg
push
mov
sbb
int3
add
cmpsb
dec
cmc
adc
add
lods
inc
inc
dec
movsl
xchg
rolb
pop
mov
pop
cli
sub
imul
pop
mov
js
loopne
push
test
and
test
jl
divb
push
sub
dec
mov
push
shl
push
lods
ss
cmp
mov
xchg
mov
into
xor
push
daa
cmpsl
arpl
in
cmp
or
sub
mov
sub
test
sub
jns
scas
jns
add
in
cs
sete
cmc
push
sub
inc
dec
outsl
insl
push
scas
add
jecxz
idivb
push
out
stc
fucomi
pop
daa
pop
cmc
cmpl
imull
aas
pop
shr
cmp
outsb
mov
inc
lock
scas
jnp
mov
dec
mov
lahf
repnz
lds
push
pop
and
pop
mov
mov
and
enter
jge
mov
ds
cmp
leave
cmp
movb
xor
shlb
inc
adc
aad
mov
push
jl
inc
xor
dec
and
xchg
cmp
lcall
mov
ja
adc
gs
adc
ss
pop
jecxz
inc
mov
fnstcw
and
fildll
dec
dec
add
mov
popa
int
int3
int3
in
mov
scas
jns
cmp
xor
mov
pop
in
sub
hlt
into
fadds
inc
aad
sub
jns
or
rcrl
add
push
inc
insl
add
mov
in
sbbl
xchg
xor
imul
mov
add
shll
xchg
mov
or
mov
ja
jns
or
pop
cmc
nop
loopne
lahf
std
or
and
dec
add
push
pop
dec
jmp
cmpsb
int
in
stc
loopne
mov
idivb
cli
das
je
pop
idivl
cmp
in
dec
je
fmull
adc
roll
push
xchg
das
cmpsl
inc
push
or
test
sbb
push
xor
aaa
inc
dec
icebp
es
jg
push
push
cmp
stos
into
mov
into
lahf
popf
jge
pop
cmc
lcall
inc
aam
cmp
mov
imul
and
in
scas
hlt
scas
into
push
push
mov
mov
jl
pop
imul
inc
lods
insl
out
add
adc
and
or
and
out
or
sbb
adc
in
sbb
push
fcmovbe
add
iret
pop
aam
sti
shlb
xchg
fwait
imulb
xchg
sbb
sub
in
jle
bound
mov
push
shrl
test
div
fs
sar
gs
shr
push
aam
pop
repnz
cmp
sbb
xor
cwtl
xorl
lods
push
test
dec
jnp
filds
mov
mov
arpl
out
in
push
out
mov
mov
mov
nop
mov
cli
shlb
lahf
inc
ja
imull
mov
push
outsb
inc
into
out
xchg
push
mov
in
pop
aam
inc
mov
sub
int
inc
imul
test
push
in
testb
mov
mov
xlat
insb
test
jp
jne
into
cld
test
js
pop
lods
iret
in
clc
loope
jmp
imul
xor
push
xor
cmpsb
inc
xlat
push
xchg
adc
mov
lret
into
lea
xor
test
push
pop
mov
push
pop
sub
out
add
dec
cmpsb
lds
xchg
and
mov
mov
cmpl
mov
push
rcrl
pop
jmp
ja
ljmp
pop
push
push
dec
idivb
scas
sub
stc
in
lea
mov
lock
pop
pop
pop
mov
mov
daa
out
mov
jecxz
jmp
into
stc
jno
andl
cmc
sarb
cld
sbb
push
loop
xlat
aam
jae
jne
out
add
cmpsb
pop
sbb
xchg
aam
inc
stos
imul
xor
adc
mov
popa
pop
or
mov
shrl
test
xlat
aad
cwtl
aas
add
loopne
jmp
ror
jnp
cmp
iret
pop
push
sub
dec
xchg
pop
mov
jg
and
cmp
cltd
xor
stc
adc
movsl
dec
mov
movsl
pop
xchg
inc
fsubl
mov
fcoml
fdivs
push
mov
mov
xchg
hlt
sub
sti
adc
jb
mov
std
jns
pusha
mov
pop
cltd
mov
mov
dec
ljmp
stc
outsl
adc
test
out
or
mov
in
daa
pop
ret
fbstp
or
cli
mov
jmp
iret
out
je
push
out
cmp
jno
add
lcall
xchg
mov
sbb
ljmp
jp
cmc
mov
add
xor
hlt
cmp
adc
jae
sbb
cmp
mov
add
int
sub
js
loopne
gs
jmp
gs
leave
dec
pushf
fildl
xchg
mov
adc
popl
push
sub
dec
cmp
inc
in
or
popf
xchg
jecxz
jne
daa
pop
or
mov
lret
inc
insl
mov
stos
cmp
mov
es
daa
ds
push
pop
push
icebp
sbb
mov
xor
push
add
fistpl
xor
push
xor
stos
jmp
leave
push
lds
fldt
cli
push
push
outsl
mov
mov
outsl
jne
push
std
push
stos
stos
push
lods
lahf
cs
fcoms
push
xor
sarl
lahf
enter
into
jne
xchg
movsb
inc
sub
jge
sub
push
dec
jnp
test
jp
add
mov
sti
lahf
or
loopne
push
pop
sbb
add
adc
pop
movb
movsb
push
push
rcrb
mov
push
shll
in
stc
sarb
rcrl
push
jb
into
sub
push
cwtl
ret
pop
xchg
insl
inc
mov
mov
icebp
cli
mov
jge
jmp
push
lods
rolb
cld
push
or
xchg
in
idivb
push
imul
stos
mov
loop
adc
aaa
daa
fcompl
cmp
scas
cmpl
in
xchg
or
je
out
and
adc
rep
addb
mov
dec
repnz
rorl
lret
xchg
dec
fdiv
cmp
test
imul
ret
cmpsb
loopne
dec
sbb
jecxz
stc
arpl
xor
jo
rcll
dec
add
icebp
pop
xchg
movsl
inc
push
and
cmc
adc
jl
into
add
fildll
adc
fiaddl
xchg
mov
arpl
clc
dec
iret
jno
stos
shll
shll
adc
fistl
jecxz
fcmovu
jne
pop
addb
xor
repz
lods
add
dec
dec
xchg
dec
aad
mov
sbb
pop
ret
xor
jne
iret
and
inc
ret
iret
into
lods
js
xlat
mov
mov
in
aas
push
aad
adc
rorb
pop
push
inc
push
ja
test
xchg
pop
add
xchg
push
clc
adc
xor
outsb
or
sbb
js
mov
jae
cmp
mov
lahf
into
jmp
inc
rorl
addr16
ljmp
and
xchg
sub
jns
fidivrs
hlt
mov
mov
adc
cld
leave
hlt
fs
pop
push
lods
clc
mov
pop
adc
mov
pop
outsb
aam
jo
ffreep
lock
xor
shll
or
shr
sub
dec
mov
jle
loope
jno
lahf
es
es
fmul
dec
pop
aam
outsb
jle
pusha
fsts
mov
insb
sub
into
push
popa
jne
pop
popf
js
mov
cmpsl
xchg
mov
lods
jns
loop
sub
mov
insl
std
das
jg
aam
pop
in
xchg
cli
cmpsb
test
dec
pop
sub
outsb
inc
sbb
call
mov
cmp
sub
pop
cmp
xlat
je
lea
aas
mov
jns
cmp
push
add
adc
mov
mov
aam
lret
pop
ret
les
pop
mov
fisttps
lds
jo
xchg
lret
push
loope
sub
jge
lods
loopne
cltd
or
jae
mov
cmp
mov
rcr
imul
xchg
sub
push
fldl
jl
cmp
add
xchg
adc
rolb
jmp
mov
adc
xor
xchg
test
aam
push
popa
aaa
loopne
fwait
aas
and
icebp
or
and
mov
push
push
push
mov
mov
lock
divl
lret
cmp
sarl
add
sbb
imul
cs
nop
mov
fisubrs
lock
rclb
sbbb
jno
out
mov
sbb
test
insl
mov
leave
sbbl
insb
add
or
push
dec
rcrb
movsl
mov
xchg
mov
in
xor
mov
incb
iret
xchg
popa
cmp
add
inc
fimuls
mov
ja
mov
jge
mov
mov
push
test
cmc
das
pop
jbe
mov
imul
adc
aad
in
lahf
mov
std
or
pop
stos
das
jbe
and
movsb
jnp
mov
addl
mov
in
ds
xchg
inc
leave
jp
stc
mov
mov
jno
stos
jl
jne
scas
push
je
adc
sbb
sti
in
in
icebp
sarl
inc
pop
rorl
addr16
aaa
call
in
out
push
cmpsl
sbb
sub
daa
push
xchg
fwait
dec
xchg
fbld
xchg
in
data16
adc
cmc
or
lea
leave
sarb
xchg
in
jl
cli
xor
ja
mov
or
cmpb
js
cltd
sbbb
or
jge
popa
add
cli
fstpt
mov
fldcw
cvttps2pi
stos
jmp
sbb
add
mov
xchg
sbb
sarb
xor
loope
in
ja
in
mov
int
inc
int
and
loopne
push
inc
mov
push
add
out
and
dec
out
mov
js
enter
lds
or
lcall
loope
fwait
outsb
mov
and
jmp
sub
jge
fadd
inc
insl
pop
mov
rcl
fsubs
sub
xchg
imulb
orb
sbb
leave
rcl
sbb
in
les
inc
push
sub
jp
push
cmp
out
mov
icebp
sub
xor
in
lcall
fdivrp
and
lods
pop
shll
sub
mov
call
in
addl
xchg
or
popa
dec
pop
popf
bound
test
subl
push
xchg
mov
test
stos
mov
mov
or
fcoms
icebp
cltd
pop
repnz
cmp
popa
lahf
jp
xchg
push
ja
das
jnp
mov
inc
mov
scas
fstps
clc
aaa
and
test
into
loopne
inc
movsl
cld
sub
int
add
test
fcmovbe
pop
jl
fldt
movlps
xchg
sti
popf
xchg
sub
pop
popa
mov
push
test
push
push
jns
mov
mov
xlat
dec
mov
stos
pusha
int
in
ss
push
nop
cmp
sahf
cmpsl
int3
pop
mov
jmp
movsl
cmc
mov
jb
push
cmp
jecxz
ret
in
and
and
lcall
push
and
mov
icebp
loop,pn
pop
mov
sbb
fwait
jmp
paddq
inc
outsl
jae
jo
push
scas
mov
lods
cltd
in
pop
movups
mov
mov
shlb
or
incb
xchg
dec
nop
mov
mov
les
xchg
dec
sahf
scas
scas
dec
sbb
js
inc
or
mov
inc
in
push
js
sub
in
push
jno
clc
sbb
jmp
mov
mov
insl
fmull
jg
lods
int3
inc
imul
inc
dec
push
gs
dec
pop
or
loopne
aam
mov
pop
dec
cmp
pop
fldl
cmp
clc
and
push
pop
lea
add
dec
femms
in
aam
in
xlat
lods
leave
mov
sahf
xor
aam
xchg
inc
les
sahf
icebp
cmp
push
aas
xchg
or
sub
sub
xchg
sti
movsl
pop
xor
xchg
cmp
das
jne
mov
jne
mov
cmp
cld
jmp
push
mov
int
jp
jns
jno
into
pop
sub
or
sub
dec
dec
pop
cmp
shlb
test
movsl
push
pop
mov
mov
scas
mov
mov
das
mov
lods
and
sub
mov
mov
iret
push
jp
out
fldl
mov
inc
inc
cmp
add
les
adc
hlt
sub
cmp
rclb
fsubrl
xchg
mov
subl
punpckldq
or
adc
aas
out
mov
ror
dec
xlat
les
xor
mov
mov
rorb
das
stos
mov
xor
in
mov
rclb
push
sbb
inc
bnd
jb
cmp
or
dec
es
jnp
scas
in
sub
inc
data16
inc
push
roll
jo
fists
divps
pusha
xchg
imul
cmp
clc
and
inc
pop
jo,pt
inc
dec
cmp
adc
movsb
lock
ds
and
adc
int3
pop
bt
cmp
and
es
jmp
loopne
bnd
push
dec
add
dec
movhlps
add
mov
decb
jo
xlat
inc
mov
outsl
movsl
insl
call
dec
xor
inc
mov
sub
roll
xchg
mov
add
addr16
jle
imul
add
adc
adc
insb
cwtl
mov
jle
jbe
fcoml
insl
sbb
pop
mov
push
je
aam
lret
cmpsb
rol
stos
movsb
add
js
repz
cmp
fs
mov
mov
movsl
xchg
xor
loopne
test
mov
mov
xor
lahf
sarl
stc
and
sub
or
jo
add
jne
decb
enter
adc
dec
cmpsl
insl
idivl
repnz
sbb
xor
and
jo
movsl
push
insl
mov
xchg
scas
cld
test
in
lahf
push
call
jne
mov
or
and
mov
mov
pop
push
pop
adc
mov
xchg
je
mov
jo
mov
neg
or
ja
xor
dec
lahf
sbb
and
insb
bound
dec
jmp
insb
pop
add
int
mov
push
adc
idivl
or
cltd
sti
sub
stc
out
addr16
push
cmpsb
lock
test
mov
cmp
xchg
sahf
movsb
pop
adc
jnp
dec
sub
adcb
cli
pop
jae
cwtl
aam
and
cmp
orb
std
mov
jg
sti
stc
mov
movsl
andb
shrd
out
repz
push
mov
testb
das
movsl
adc
out
adc
popf
repnz
push
stc
xor
lahf
jmp
cwtl
inc
out
out
pop
or
psubusb
sub
stc
lods
sbb
jg
cli
sar
fcmovne
fwait
leave
mov
jno
test
std
test
cmp
xchg
or
das
mov
xor
jns,pt
mov
cmpsb
xor
repnz
push
mov
je
stos
add
pop
test
cld
xchg
lcall
push
jle
outsb
jmp
push
movsl
inc
inc
mov
or
sahf
cwtl
add
jmp
aam
shll
ja
adc
out
push
cmp
insl
ss
fiadds
push
pusha
push
jge
adc
xchg
andb
lds
sbb
jne
xchg
mov
push
or
loop
mov
lea
sbb
movsl
jg
xlat
xchg
adc
pop
icebp
subb
popf
push
sbb
mov
lods
icebp
jmp
rorb
mov
movsl
into
sub
xchg
in
xchg
cmc
outsb
test
and
sub
mov
fsubrp
adc
das
push
xor
mov
mov
mov
xchg
les
testl
ja
sub
mov
subb
enter
std
and
cli
sub
or
xor
stc
hlt
jge
push
xor
jmp
pop
out
pop
repz
jne
inc
gs
sub
inc
cmpl
js
inc
jg
stc
stc
out
iret
pop
jb
xchg
xchg
test
xchg
jle
loop
jns
dec
add
out
sbb
cld
icebp
mov
mov
adc
push
mov
push
inc
stos
scas
cmpl
call
cli
or
jl
loopne
movsl
jl
hlt
clc
out
jb
outsb
outsb
add
fsubr
adcl
mov
lret
mov
mov
mov
sub
and
and
push
jl
xchg
pop
repnz
dec
mov
push
add
pop
inc
sti
shll
cld
scas
fidivrs
jb
mov
imul
subl
xchg
or
aas
mov
mov
add
aad
sub
sti
out
stc
andb
cwtl
mov
incb
loop
mov
xchg
or
scas
mov
nop
cmpsl
cmpl
cltd
pop
lea
sub
stos
push
in
cmpb
push
jae
fdiv
push
and
inc
je
mov
push
jge
xchg
fs
ss
sahf
bnd
sti
or
jg
pop
xor
jecxz
aad
std
or
and
push
aam
mov
cmpsl
push
repz
loope
dec
mov
in
sbb
movsl
cmp
jns
pop
sbb
fwait
mov
pop
jle
pop
aam
rol
lret
add
jp
outsl
in
outsb
int3
pop
movsl
sbbl
jnp
cmp
jp
add
mov
sbb
cmc
aam
jb
test
xor
aad
push
inc
icebp
inc
pop
mov
lea
jnp
mov
add
pop
lret
add
or
jl
push
lcall
aaa
xchg
pop
out
sbb
andb
loopne
imul
ja
stc
scas
and
das
shrb
or
stos
js
push
dec
mov
mov
push
aaa
jmp
scas
jb
dec
scas
sbb
cmp
lret
clc
cwtl
cmp
decl
clc
jl
cld
shr
mov
xchg
pop
sbb
out
sbb
aaa
cltd
outsl
fstpt
cwtl
jbe
sub
jne
mov
test
mov
mov
std
stos
repnz
adc
mov
jl
and
pop
daa
push
dec
insl
clc
mov
and
jecxz
push
xchg
sbb
aas
mov
xchg
sbb
lea
sbb
addb
outsl
or
jne
sbb
out
inc
lahf
loopne
push
sti
scas
add
mov
mov
inc
gs
push
xchg
bound
xchg
add
mov
lahf
xchg
popa
icebp
imul
das
jle
cli
inc
or
clc
xlat
cwtl
stos
jp
push
mov
shll
cmpsb
or
mov
loopne
cmp
adc
jne
enter
sub
mov
mov
mov
sahf
push
out
jmp
mov
adc
arpl
sti
pop
adc
push
jbe
pop
adc
or
int3
jns
popf
ja
or
test
loop
sbbl
jl
mov
int
fs
push
dec
sti
push
push
or
mov
stc
fstps
mov
dec
je
push
jne,pn
cmp
cmp
xchg
jle
and
in
sub
mov
xor
pop
inc
movsl
jecxz
push
data16
adc
scas
xchg
scas
das
mov
popa
sbbl
stos
popa
cmc
push
aam
inc
repnz
mov
jp
pop
cmpsb
pop
outsb
aam
sub
jne
jl
or
push
pop
lcall
ret
inc
xchg
mov
pop
in
dec
mov
out
ja
push
mov
pop
sbb
adc
dec
test
push
jae
popa
xchg
pusha
in
int
dec
insl
mov
or
jo
jmp
je
lock
popf
sbb
es
jle
aad
fldt
aas
xlat
pop
aaa
pop
js
jo
cwtl
xor
mov
xchg
pop
mov
setl
xchg
stos
rorl
push
leave
or
rcrl
pop
mov
mov
pop
or
push
sub
xor
mov
sub
dec
jle
jno
cmp
cld
loope
pop
cmpsb
or
dec
mov
add
rcrl
into
and
jo
mov
pop
std
dec
mov
popf
mov
xchg
std
fs
scas
loopne
lret
mov
sbb
add
ja
out
add
cmp
dec
mov
notb
mov
test
jge
inc
addr16
sub
mov
adc
push
sub
adc
jmp
xor
jmp
and
adc
pop
stos
dec
push
xchg
test
jl
jne
ud1
loope
scas
dec
mov
cltd
xchg
pop
push
jb
mov
adc
pop
rorb
jge
add
mov
fimuls
pop
aad
sbb
adc
test
pop
into
ss
repnz
jno
push
ret
cwtl
inc
mov
int
adcl
mov
cmpsb
fbstp
dec
sub
pop
mov
shlb
testl
sbb
cwtl
loope
adc
add
bnd
lfs
or
das
push
je
out
sbbl
jl
das
out
nop
adc
fimuls
in
lahf
clc
out
stos
or
mov
lods
movsl
fsubl
sar
shr
sbb
scas
pop
scas
std
dec
test
inc
sbb
or
std
rcr
push
cld
sarl
jge
adc
jecxz
mov
jo
in
sub
xchg
jg
aas
jne
in
mov
ret
mov
mov
sbb
xchg
lods
adc
dec
pushf
repnz
cmp
clc
mov
inc
jge
sti
stos
sbb
or
cmp
hlt
test
mov
in
xchg
ss
sub
imul
les
jae
or
loopne
adc
push
movsl
je
dec
cmp
sub
push
xchg
stc
mov
lahf
xor
xor
imul
adc
les
jbe
cmp
or
stos
mov
repnz
std
js
sbb
pop
sarl
stos
ljmp
call
xor
out
mov
das
cmp
xchg
jnp
jl
adc
inc
mov
outsl
xchg
les
inc
adc
pop
cli
sbb
movsb
imul
cld
lock
or
das
cmpsl
lods
push
loopne
into
addl
js
push
cs
les
fsts
lret
lods
pop
or
fldcw
lock
sub
jae
xlat
jge
pop
lea
push
test
push
pop
push
jl
daa
psrlq
push
mov
push
sbb
lea
pusha
sarb
adc
lea
out
push
fldenv
int3
lahf
mov
fwait
xor
push
int3
mov
addr16
stos
ret
mov
jno
lret
fldt
cmp
int3
stos
negb
push
mov
mov
imul
cmp
jo
adc
mov
mov
adc
lret
aad
test
mov
in
inc
dec
jmp
mov
xchg
xor
push
jae
es
divl
mov
shlb
cmc
pop
cmp
stc
jl
jecxz
out
xchg
and
in
fcmovbe
aaa
cmp
fldl
xlat
movsb
insb
push
or
xchg
ja
dec
movsb
mov
xchg
xchg
jmp
bound
push
jge
push
aas
jp
mov
insl
daa
sahf
jmp
mov
cbtw
jo
xor
pop
aaa
jle
pop
and
jnp
pop
pop
push
cld
xor
ret
jp
pop
mov
pop
je
dec
inc
mov
mov
pusha
cmpsl
inc
sbb
cmp
or
jle
lret
lret
adc
cmc
xor
lds
jg
jno
cwtl
testb
out
stc
pop
add
fimuls
pop
idiv
xchg
jns
mov
mov
lods
stos
sbb
mov
fidivrl
arpl
out
imul
stos
lcall
add
jne
adc
jb
or
xor
pop
lods
fcoms
hlt
push
jp
push
test
sub
test
fisubl
sub
pop
xchg
nop
xor
cld
aam
sbb
lods
jecxz
mov
rorl
mov
pop
dec
sbb
inc
mov
and
loopne
jg
pop
mov
jecxz
outsl
push
enter
dec
shl
test
cmp
cmp
iret
mov
sarb
jg
outsb
jno
ds
jae
and
mov
stos
sti
js
mov
shl
cwtl
in
es
adc
jl
sbb
xchg
imul
inc
dec
push
enter
outsb
call
fchs
mov
lret
sub
lahf
add
ret
movsl
das
rcll
je
fwait
dec
adc
xchg
iret
or
pop
xor
or
lock
insl
das
pop
push
jmp
aam
inc
cs
cwtl
into
cmp
out
sbbl
mov
hlt
sti
adc
fistpl
call
leave
inc
je
ja
lret
pop
cld
test
dec
inc
mov
fsubrs
push
call
scas
sbb
fisttpl
fsubs
mov
cmp
in
dec
mov
jns
pop
sahf
fsubrs
sbb
hlt
in
push
fcoms
cli
sub
popf
loop
and
testl
xor
outsl
lret
add
fdivs
imul
xor
pusha
mov
xor
scas
dec
cld
shl
jmp
inc
popf
dec
mov
mov
inc
ljmp
int
mov
js
push
in
jge
cmpsb
lock
mov
and
push
sahf
setge
mov
pop
out
ret
inc
notb
lods
stc
pop
sbb
sbb
out
mov
jmp
pop
add
push
incb
mov
push
sbb
in
jg
mov
cld
jmp
mov
push
rorb
xchg
lret
xchg
outsl
idiv
jne
int
popf
pusha
pop
dec
into
add
mov
icebp
or
jne
fwait
mov
xor
lcall
jp
js
sub
mov
cmpsb
dec
dec
push
or
das
out
pop
fstl
unpckhps
sub
mov
mov
dec
daa
dec
mov
mov
leave
pop
into
sbb
fcomps
std
or
sub
push
loope
push
test
add
sbb
mov
fsubrl
pop
mov
mov
push
stc
decb
sub
fldt
jne
clc
dec
aam
and
in
sarb
fistpl
adc
div
jnp
js
adc
jecxz
mov
sbb
xor
pop
pop
repz
nop
push
and
mov
loope
mov
xor
mov
cmp
jne
movl
shlb
sbb
inc
fildl
pop
push
pop
mov
faddl
dec
popf
and
psubq
dec
mov
pop
les
or
rcll
inc
mov
std
loope
push
lea
jne
mov
pusha
loop
idivb
mov
inc
imul
mov
mov
xchg
rorb
cmp
jl
and
les
cs
push
and
lea
fistl
cmp
sub
fsubr
adc
cmp
inc
mov
fs
pop
xchg
int3
loope
jnp
into
pop
jno
xor
clc
lea
mov
push
mov
push
mov
aam
push
add
rol
test
pushl
cmp
fnstenv
ja
add
jp
xchg
loop
stos
add
push
pop
pop
cmp
cmp
mov
out
inc
notb
addr16
xchg
sub
out
xor
mov
mov
in
in
jnp
adc
pop
ljmp
int
lods
in
scas
jge
pop
gs
mov
icebp
and
xchg
jmp
pop
sub
sub
xor
pop
xchg
and
mov
sub
adc
xor
das
jmp
add
data16
inc
mov
lcall
int3
icebp
adc
clc
enter
dec
ds
fnstcw
jmp
pop
pop
dec
and
xchg
sub
cli
xchg
into
int3
repz
sub
int3
scas
jle
cwtl
fildl
pop
nop
inc
mov
adc
fistps
insl
push
jo
add
out
int
loope
jecxz
cwtl
jmp
int3
lea
sub
push
sbb
mov
out
sbb
ficoms
fisubrl
stos
mov
sbb
mov
and
jb
repz
push
dec
mov
in
insb
mov
int3
outsl
cmpsb
push
xor
jno
or
repz
sbb
cwtl
and
daa
int
je
int3
pop
adc
sbb
es
sub
je
nop
addl
mov
test
enter
popf
pop
cmp
je
jecxz
jnp
push
out
imul
xor
pop
test
dec
cmpsb
aas
ds
mov
ds
cmp
pop
out
inc
push
mov
jae
test
ficompl
into
sbb
fsubl
pop
cmpb
sbb
cmpsl
movsb
jle
nop
jle
xchg
insb
jmp
and
ret
mov
xchg
mov
xlat
cmp
sarb
dec
sbb
adc
adc
pusha
lcall
sub
scas
jno
lds
lret
lcall
mov
cs
std
repnz
push
push
lahf
inc
xchg
mov
dec
out
dec
and
push
out
push
cs
push
jmp
inc
jae
addl
ret
dec
int
mov
adc
stos
cli
mov
fdivr
out
fs
cmpsb
xor
lock
cld
or
out
mov
mov
hlt
mov
lea
push
xor
scas
xchg
cmp
addr16
into
jp
pop
loope
cwtl
out
fisubl
adc
push
aas
jge
or
dec
subl
mov
push
outsl
inc
and
fdivs
iret
xor
mov
icebp
mov
aaa
repz
jmp
stos
mov
cmc
idiv
mov
rcrl
mov
cmp
jmp
mov
dec
push
in
sub
rcrb
sbb
inc
ja
push
xor
mov
mov
movsl
add
push
mov
rol
and
push
and
mov
insb
mov
jg
jne
mov
mov
pop
mov
in
xor
cmc
xchg
cmp
loopne
loop
add
mov
push
pop
xorb
shlb
test
mov
popl
cmp
push
dec
out
sub
adc
mov
jno
lret
stc
or
mov
dec
jmp
jbe
add
sbb
lahf
push
mov
popfw
push
mov
aaa
mov
je
cmp
loope
mov
mov
jne
sub
xchg
test
ljmp
idivb
rcrb
mov
mov
fwait
lcall
jp
push
dec
mov
pop
jb
or
idivb
stos
aam
notb
jno
aaa
xchg
mov
pop
add
cld
ds
cli
push
dec
lods
pop
sbb
dec
push
testl
outsl
pushf
mov
lds
mov
push
push
js
cmpsl
sub
andl
in
lea
inc
mov
in
lock
das
mov
xchg
subb
outsl
xor
pop
jb
jl
incb
mov
inc
push
dec
sbb
aad
iret
rcll
mov
bound
dec
add
fadd
addr16
in
filds
fcomps
pop
xchg
inc
pop
dec
aas
in
cmp
js
repnz
dec
fidivl
jae
fdivs
cs
repnz
adc
jne
je
jle,pt
cmp
data16
cli
imulb
divb
cmpsl
sbb
sbb
add
repz
cmpsb
push
inc
mov
jne
cmpsl
hlt
in
arpl
ljmp
dec
dec
pop
or
pop
cmpsb
jo
xor
cs
mov
xor
mov
pop
xchg
in
push
out
mov
adc
out
popa
adc
es
insl
data16
nop
scas
std
loope
lret
lods
dec
lods
jnp
xchg
pop
pop
dec
js
ljmp
sub
push
loopne
aad
filds
loop
jnp
aad
pushf
sbb
inc
out
lea
jp
test
and
mov
test
lods
cli
mov
fildll
mov
add
imul
mov
xor
xlat
aad
mov
dec
ficomps
lds
cmp
push
jno
add
scas
ficomps
shrl
add
loop
pop
sbb
push
pop
cli
fisubrl
fdivrp
dec
ljmp
out
jnp
or
jecxz
adc
ret
in
mov
dec
jno
imul
jo
pop
pop
in
ss
jo
ret
xor
incb
jg
clc
mov
mov
jnp
stos
fsts
bound
mov
pop
fiadds
leave
test
add
xchg
mov
jo,pt
hlt
jae
pop
mov
cmp
fwait
aad
in
adc
idivb
pop
jmp
xchg
fstpl
or
mov
aad
fildl
push
daa
pushf
imul
jl
repz
pop
push
fisubs
and
mov
cs
mov
sub
shr
mov
inc
inc
pushl
ja
dec
decl
out
pop
insl
cmc
adc
ds
hlt
xchg
jbe
pop
icebp
fadds
jle
mov
fwait
js
fxch
pop
test
pop
negl
mov
mov
shlb
hlt
rcrb
push
and
movsl
ficompl
gs
out
jbe
mov
jb
lahf
jmp
rclb
mov
ljmp
xchg
testb
push
sarl
clc
gs
lds
pop
jmp
cmc
out
and
loopne
addb
scas
call
ljmp
aas
inc
push
pusha
and
repz
mov
nop
int3
out
push
mov
out
sub
adc
sbb
inc
or
fistps
loopne
push
fildl
inc
jl
clc
lret
xchg
and
ja
dec
leave
mov
and
or
jnp
mov
dec
sbb
cmpl
in
movsl
push
jl
mov
and
sub
sahf
fcoml
xchg
in
pop
ficomps
fsubrs
push
mov
notb
and
push
je
dec
popf
insl
xchg
movsb
mov
aad
ds
push
adc
scas
popf
xor
insl
jns
leavew
out
lahf
inc
stos
jno
loop
cmpsl
push
aad
xor
cltd
adc
mov
ja
mov
hlt
xchg
inc
jne
jle
leave
test
out
xor
pop
inc
out
js
mov
or
jns
repz
rclb
jae
and
ret
mov
mov
shl
clc
mov
std
xchg
sub
pop
mov
jns
int
xchg
jno
sub
pop
ret
mov
or
sub
inc
push
cli
jp
jmp
jge
loopne
jg
adcb
cmp
out
fcmovu
or
pop
std
jbe
sar
xor
ret
mov
shl
jg
clc
ret
xor
sub
push
jg,pn
push
add
inc
or
mov
xchg
xchg
daa
lock
sti
xchg
pop
adc
xchg
test
out
notl
das
sbb
xchg
push
cmpsl
xor
ret
jge
loopne
xchg
pop
out
mov
in
mov
lret
jge
in
or
adc
scas
div
jb
push
mov
pop
mov
push
loopne
push
sub
in
push
clc
stos
mov
insb
cltd
ja
popa
mov
xchg
aaa
cld
mov
mov
idivl
jns
cld
cmp
add
mov
lret
sub
je
jo
leave
gs
mov
gs
push
in
mov
notb
and
xor
fwait
test
lock
cmp
jno
push
loopne
outsl
fs
mov
dec
push
push
pop
fucompp
int
sti
mov
sub
std
out
fstps
insl
push
pop
test
inc
dec
setge
push
cmp
imul
push
push
sahf
lods
mov
sahf
fs
xor
mov
hlt
sub
cmpsl
stos
lret
jo
xlat
je
adc
xor
adc
pop
pop
sbb
lcall
pop
pop
mov
adc
pop
xchg
in
sti
repz
pop
jle
mov
add
popl
or
inc
mov
insb
shrl
jle
cmpsb
xchg
in
pop
aaa
mov
xor
insb
cmp
test
jae
mov
xlat
mov
xchg
inc
cli
and
xchg
xchg
jecxz
clc
dec
or
shlb
inc
jnp
dec
adc
cs
in
inc
aad
fdivrl
nop
sarb
add
das
loop
imul
imul
push
je
fsubrp
test
sti
sub
out
push
push
dec
aaa
fs
ret
pop
xor
into
insl
sbb
sbb
stos
pushf
and
ja
mov
imulb
mov
xor
inc
inc
cmp
imul
cmp
push
inc
lods
add
fstpl
xor
stos
or
jnp
sub
jno
push
jbe
icebp
inc
je
push
addr16
lcall
shr
or
mov
or
lss
std
das
aam
cmp
jg
mov
lret
inc
sti
inc
and
mov
jbe
push
fldlg2
fcomps
jle
dec
mov
cmpsb
mov
clc
pop
xchg
mov
push
nop
call
lret
push
cmpsl
cmp
sti
jge
rorl
and
push
pop
jge
in
mov
add
pop
insl
fidivl
scas
push
xor
fisubs
xchg
and
mov
push
lret
and
stos
icebp
outsl
aad
xor
repz
cwtl
xor
lods
or
mov
push
fs
mov
cltd
mov
mov
jne
das
cmp
pusha
mov
ret
scas
dec
loop
jae
gs
scas
out
push
xchg
xchg
aaa
pop
pusha
iret
pop
adc
ret
mov
pop
icebp
je
xor
popf
sti
cmp
push
xchg
cmp
sti
into
fxtract
sbbl
xchg
fildll
xchg
jno
jecxz
rol
inc
dec
stos
push
in
in
outsl
out
repz
inc
xor
jo
jnp
loope
sub
fldenv
inc
arpl
in
lock
mov
test
push
pop
incl
cmp
sub
xchg
xor
mov
pop
mov
jbe
mov
xlat
mov
sub
mov
mov
bound
imul
cmpsl
adc
aas
call
dec
jmp
push
pop
cmp
fdivs
jp
lods
mov
inc
jmp
test
dec
test
nop
push
add
cmp
cmp
push
into
mul
cmp
lea
fs
filds
jecxz
loopne
int
lods
xlat
scas
fsubs
int
loope
in
in
add
jmp
and
test
dec
popl
stos
faddl
adc
dec
mov
shll
inc
popf
flds
movsl
inc
push
pusha
fsubrs
mov
cs
andl
push
pop
int
inc
mov
fnstsw
and
inc
rclb
push
mov
mov
adcl
inc
mov
xchg
sti
in
inc
fimull
mov
imull
xchg
jno
jnp
jmp
jne
dec
out
popa
testb
ljmp
cmpsl
pop
jbe
fcomi
mov
daa
std
xchg
clc
inc
rorb
addr16
jp
outsb
add
ficompl
or
outsl
and
mov
push
addr16
mov
inc
movsb
push
int
mov
inc
idivl
repz
push
lea
stos
test
loope
mov
xchg
push
ret
popa
pop
jmp
jp
ds
into
bound
cmpsb
mov
nop
imul
out
test
cmp
outsl
roll
enter
outsb
pop
daa
jle
xlat
add
or
mov
ja
mov
in
ja
movsl
xchg
popf
mov
stos
ss
and
add
cwtl
rcrl
in
cmpsl
out
mov
arpl
mov
mov
in
cmp
mov
mov
ds
je
xchg
sub
addr16
push
vmovd
push
sbb
scas
daa
inc
add
or
xor
jno
or
fwait
inc
ljmp
cmp
aaa
xor
popl
xchg
push
fistpl
dec
test
mov
in
cld
jnp
push
jae
dec
sahf
arpl
shr
ja
jecxz
push
repnz
mov
es
mov
out
in
and
scas
shr
out
negb
mov
mov
cmp
dec
rcrb
adc
ss
jle
arpl
js
sub
loope
jo
jl
adc
mov
cli
cld
lahf
mov
bnd
outsb
dec
mov
adc
sub
ficomps
pop
cmc
mov
xchg
add
mov
mov
inc
rcll
fbstp
sti
inc
icebp
jmp
mov
fimuls
jne
movsbl
push
sar
or
repz
inc
pop
movsb
adc
les
mov
decl
sub
adc
imul
fimull
aas
ljmp
adc
insb
loope
addr16
add
inc
shr
sti
pop
loop
subl
mov
das
stos
loop
adc
sbb
mov
negb
dec
mov
pusha
xchg
push
lock
cmp
fimull
fsts
push
lods
leave
dec
jo
mov
mov
iret
xor
imul
add
jbe
push
outsb
pop
sub
mov
adcb
adc
push
dec
jle
push
jl
push
outsl
cmp
das
pop
push
testb
cmp
outsl
fnstsw
stos
jmp
out
jnp
xchg
dec
xlat
pushl
in
push
cld
cs
imul
ja
repz
cmp
loope
fistl
pop
in
repz
loopne
cmc
cmp
and
rcrl
nop
imul
fdivrs
int3
dec
stc
into
std
adc
mov
or
in
push
and
cmc
sub
pop
rcrl
pop
xchg
sub
push
lret
sbb
loop
dec
xor
scas
mov
das
pushf
test
scas
repnz
mov
test
cmpsl
push
push
test
jg
aaa
or
scas
sub
pop
je
out
dec
iret
cmp
fsubrl
repnz
pop
sub
test
test
jecxz
jle
jle
int3
dec
mov
mov
jp
arpl
dec
dec
repnz
or
jns
mov
mov
pushf
xchg
out
sbb
cmp
popa
filds
clc
inc
mov
pop
mov
imul
add
rorl
dec
pop
lods
mov
testl
clc
mul
outsb
data16
ret
xchg
out
adc
mov
arpl
loopne
ss
loope
cltd
mov
in
xchg
push
icebp
or
lret
jbe
scas
bound
mov
sbb
fisubrs
xor
insl
mov
out
adc
mov
movsl
jns
push
push
mov
enter
adc
loop
mov
aad
call
test
pop
push
addr16
rol
jbe
dec
mov
jne
neg
fcmovbe
das
decl
inc
or
sub
mov
cmp
jmp
mov
sub
push
sub
leave
mov
mov
les
cmp
mov
jns
call
mov
mov
pop
arpl
inc
gs
lea
lock
sub
out
movsl
popa
pop
xchg
in
ds
int
xlat
in
jne
or
decl
stc
outsl
bound
adc
jecxz
cwtl
fmulp
fcoml
lret
adc
push
ds
push
jo
jge
mov
repnz
in
insb
dec
adcl
imul
andl
sti
mov
push
in
lcall
cmp
jecxz,pt
nop
lods
jl
add
mov
mov
iret
dec
and
in
xor
cld
inc
sub
pop
or
mov
xor
neg
lahf
xlat
in
outsb
cmp
and
inc
add
mov
or
sub
cli
lods
xor
push
sub
push
cli
into
pop
mov
movl
cmp
jge
mov
imul
push
int3
out
test
xchg
jl
fsts
stos
in
inc
sub
jbe
mov
aam
addl
jge
movl
pop
xchg
dec
outsb
stc
ds
mov
notb
in
dec
aad
lds
gs
pop
int
dec
push
mov
push
jnp
push
mov
jae
jl
lods
push
pop
mov
iret
das
push
pop
fs
push
cmp
add
pushl
out
or
js
and
mov
nop
jle
dec
add
std
lea
push
loop
mov
xchg
fmul
pop
out
pop
fwait
shll
dec
mov
and
jecxz
xchg
sbb
aad
dec
neg
ret
jb
lcall
xchg
push
clc
push
bound
fimuls
lahf
xchg
mov
popa
mov
popf
ret
cmp
repnz
pop
ret
mov
sub
push
dec
sub
sbb
adc
jbe
imul
out
stos
push
dec
sbb
les
pop
mov
aaa
dec
outsb
jnp
push
dec
lret
daa
enter
aad
cltd
arpl
mov
sbb
lcall
stos
jg
mov
subl
stos
add
pop
out
fnstsw
pusha
movsb
xor
out
scas
dec
xorb
pop
push
movsb
mov
mov
fdivs
decb
out
inc
sub
xchg
das
call
xchg
push
push
adc
or
mov
fdivl
dec
cmpsl
xchg
arpl
cmp
cmc
das
sbb
rorb
xorl
mov
aam
push
cld
xorb
ljmp
in
mov
repnz
xchg
jge
sub
ja
aaa
stc
jl
insb
mov
lahf
notb
mov
fisubl
into
mov
ja
ljmp
stos
mov
leave
loopne
and
or
movsb
je
sbb
jb
or
adc
je
fstps
mov
sti
jmp
push
out
mov
mov
and
test
dec
xchg
gs
fisubs
repnz
in
lret
pop
sbb
mov
sti
repz
jp
ljmp
jne
mov
xor
adc
pop
into
int3
imul
mov
test
aaa
out
add
mov
mov
dec
imul
jecxz
das
dec
movsl
push
jae
andl
push
inc
aad
fists
push
sub
xchg
push
xor
ljmp
fiaddl
or
sahf
test
push
aas
xor
fldenv
cltd
add
jmp
dec
dec
cmp
fsubrl
push
lahf
mov
je
dec
lea
loop
fwait
daa
pop
inc
je
popa
lods
mov
js
test
insl
jmp
sub
stc
mov
sub
lods
out
cmpsb
pop
xchg
int
movsb
dec
addr16
or
pop
pop
adc
inc
or
mov
jo
sub
cld
rcrb
ss
ss
sti
in
mov
adc
out
xor
inc
dec
jecxz
lret
lahf
fnstenv
ljmp
aas
ljmp
js
sbb
jg
pop
sub
mov
scas
mov
jne
and
gs
cmp
aaa
jle
sarb
lods
ljmp
pop
aas
fdivrs
xor
push
inc
cltd
fcoml
lahf
mov
add
dec
inc
mov
xchg
pop
sbb
mov
sbb
mov
mov
gs
mov
jl
and
push
ficomps
leave
fimuls
push
jb
dec
out
ja
xchg
push
or
test
insl
bnd
shr
mov
xchg
sub
jbe
jbe
and
cmp
xchg
jle
mov
sub
sbb
fwait
xlat
dec
mov
clc
stc
jo
ret
ljmp
mov
push
imul
mov
jo
cmp
push
call
mov
pop
pop
ljmp
popf
mov
popa
ja
push
hlt
imul
xchg
mov
or
neg
insl
mov
xchg
lods
lock
and
xchg
lret
stc
and
movsl
jge
add
mov
mov
mov
scas
mov
arpl
sbb
mov
outsl
pop
notl
test
and
lds
pop
scas
je
jmp
je
pushf
xchg
dec
lcall
mov
mov
lds
pusha
sub
mov
cmpl
lahf
leave
pop
dec
inc
lret
pop
jmp
mov
cmp
in
mov
mov
shll
je
inc
aad
mov
xlat
sub
repz
pop
out
out
and
push
mov
loopne
ljmp
mov
addb
sahf
sub
popa
adc
ljmp
dec
cli
jns
notb
and
fcmovne
push
xchg
lret
pop
mov
cltd
cld
and
addr16
xchg
pop
adc
outsl
aad
loope
fsub
mov
iret
cmp
and
sub
pop
xchg
push
pushf
pop
ss
ss
fistpl
int
mov
movsb
and
stos
pop
jno
mov
lds
jb
pop
add
dec
popf
sti
sarb
sub
inc
pop
jnp
mov
iret
gs
cmp
sbb
movsb
mov
loopne
movsb
push
iret
cmp
xchg
jg
cmpsl
inc
xor
sbb
jbe
fucom
cmc
sti
imul
cmp
mov
decl
test
cmc
into
jecxz
pop
pop
xor
out
cmp
dec
fildl
pop
xchg
cs
cmpsb
jp
arpl
fucom
xchg
shr
mov
inc
es
adc
sub
fwait
mov
rcll
xchg
outsl
daa
nop
cmp
and
mov
lcall
or
mov
stos
in
pop
divl
repz
sbb
popf
sub
xor
aam
xchg
or
enter
ss
push
jecxz
mov
stc
adc
jmp
aaa
int3
mov
shlb
in
jecxz
loop,pn
call
lcall
call
jo
int3
xchg
inc
pop
addr16
mov
xchg
push
es
jne
inc
aad
jno
dec
fnstenv
mov
sbb
push
jno
popf
sahf
xchg
xchg
cmpsb
pop
pop
sahf
loope
inc
xor
fldl
rorl
shll
std
in
push
sti
jns
mov
outsl
in
push
sub
pop
mov
adc
and
pop
jb
cwtl
rcrl
pop
mov
or
ret
cmp
cmc
mov
inc
roll
jp
outsl
cmpsl
and
dec
push
test
pop
xlat
mov
adc
mov
xchg
ffree
mov
xor
mov
int
ffree
or
dec
mov
mov
xlat
xor
ds
into
fistpll
add
sbb
sti
pop
jne
pop
imul
loopne
pop
dec
sbb
ret
sub
dec
cli
sub
and
cld
fs
out
gs
imul
jb
push
clc
fidivrs
jnp
pop
or
cmp
shr
mov
sti
aaa
push
pop
jne
push
loope
repnz
mov
or
sti
mov
xchg
pop
aam
add
daa
icebp
push
std
outsb
cmp
lea
ss
jecxz
pop
adc
push
enter
add
pop
sahf
aas
lret
icebp
mov
xor
dec
mov
adc
stos
sub
sti
adc
sub
sti
lea
getsec
xchg
and
mov
shrl
subps
into
sub
pop
jecxz
and
mov
enter
and
push
repz
test
jmp
xor
stc
repnz
fs
enter
mov
lcall
sti
fwait
mov
pop
out
adc
sub
mov
push
mov
mov
push
mov
inc
test
out
shrb
pop
addr16
sub
out
lret
roll
push
jecxz
ret
adcl
jge
sbb
loop
pushf
sbb
ret
gs
mov
repz
pop
adc
out
mov
push
xlat
adc
lcall
dec
sub
cmp
xchg
push
test
pop
mov
mov
clc
stos
mov
jp
insl
subl
mov
loopne
icebp
mov
fimuls
sbb
test
lds
jmp
pop
xor
sub
lret
rep
push
cltd
sbb
adc
pmuludq
call
int3
pop
bound
mov
inc
jnp
mov
xor
mov
mov
mov
inc
adc
mov
in
iret
sbb
xchg
stc
idivl
rorl
enter
fcoml
or
lds
movsb
or
stc
dec
jecxz
movsb
or
mov
push
bound
scas
mov
sub
fistpll
cmp
fsts
repz
fs
mov
dec
mov
sti
shrl
dec
push
mov
andb
mov
add
enter
push
pushf
pop
shlb
ja
inc
movsl
jbe
aaa
mov
and
mov
add
pop
stc
fstps
aas
lds
sub
inc
fldenv
pop
mov
push
sahf
inc
sub
add
xor
fistps
push
inc
mov
es
scas
jle
or
cmp
ret
cmp
out
xor
push
nop
inc
iret
mov
scas
mov
aaa
jns
jnp
sti
or
aaa
es
fmull
add
lret
pusha
jge
adc
pop
in
sub
sbb
jb
out
jmp
jne
jmp
xlat
test
into
pop
push
js
daa
scas
into
shll
sbb
push
mov
push
mov
sahf
xchg
test
and
aaa
rcrb
jl
bound
mov
sub
pop
mov
push
jecxz
leave
in
adc
sub
outsl
dec
repnz
insb
mov
outsb
jmp
scas
popa
push
push
jmp
pop
ljmp
icebp
ret
popf
in
push
cmp
pop
aad
pop
and
nop
mov
xchg
inc
push
fnstenv
ss
negl
arpl
sub
pop
sub
aas
out
add
scas
subb
int3
pop
add
scas
jno
xlat
in
fstl
fistpl
scas
push
cmp
int
cld
xchg
mov
test
mov
mov
into
push
fwait
jns
pop
cmpsb
jl
aaa
je
inc
jmp
pop
cmpl
xchg
pop
mov
xchg
mov
or
mov
inc
int
inc
xchg
scas
mov
xchg
jno
inc
sbbb
push
add
mov
inc
test
xor
sub
and
imul
cmp
jmp
adc
aam
add
cmp
mov
mov
inc
ret
in
leave
ret
es
cmc
movsl
jmp
cmpsl
rclb
cmp
cmp
sub
stos
mul
cmp
das
ljmp
outsl
ljmp
addr16
jbe
dec
sarb
add
xchg
push
lcall
loop
aam
cmp
adc
in
and
mov
pop
and
shll
jbe
xchg
cmc
les
repnz
or
ficomps
xlat
popf
imul
jp
mov
scas
inc
lea
insb
daa
sti
out
les
jmp
and
pop
mov
data16
out
inc
xchg
repnz
inc
sahf
scas
call
add
pop
jb
movsl
sti
adc
push
xchg
pop
mov
pushf
xchg
push
dec
ss
mov
dec
mov
shll
lods
adc
xchg
xadd
push
and
ja
sub
gs
adc
inc
shrl
inc
dec
pop
pop
aaa
mov
scas
mov
gs
pop
inc
jne
popf
bound
fldt
bound
xor
aam
jg
addr16
cmp
mov
ja
push
xchg
pushf
lods
and
inc
fcompl
cmp
sub
push
dec
int
mov
iret
stos
jecxz
mov
jmp
jle
sbb
cmp
fildl
xchg
jae
jbe
popf
mov
lods
pop
pushf
cmp
insb
inc
cmp
lret
shrl
mov
pop
cmp
fimull
xor
mov
lock
ja
mov
jae
xchg
test
jmp
lret
jne
sub
and
cld
push
icebp
push
or
adc
es
sbb
dec
cmp
xor
bound
stc
flds
jb
orb
jne
adc
mov
or
push
mov
ret
adc
scas
cmp
push
jbe
add
pop
jg
xor
dec
movsl
in
popf
cmpb
out
add
out
imul
jecxz
out
jo
push
lock
mov
jecxz
shrl
xlat
dec
mov
dec
lds
cmp
mov
mov
pusha
sarl
pop
scas
inc
out
lods
into
jmp
pop
popa
or
mov
movsb
push
jae
cmp
jno
push
pop
lods
mov
cmc
add
jp
xchg
dec
xor
push
lods
mov
jb,pt
into
ret
pop
nop
imul
fcmove
rcrl
out
cld
mov
inc
shll
mov
test
adcl
pop
jp
pushf
nop
test
ja
pop
adc
in
into
push
int3
and
lock
cmp
repz
dec
mov
pushf
rolb
sbb
pop
mov
mov
sub
dec
cld
jmp
xchg
fidivl
fisubrl
and
loopne
movsb
fwait
cli
pop
or
mov
jl
push
aaa
insb
aad
into
inc
fmull
movsl
cmp
adc
sbb
mov
int
sbb
ja
mov
mov
popf
xchg
jo
and
pop
mov
jbe
call
out
fistpll
sub
push
test
xor
hlt
mov
out
pop
fsubr
dec
mov
in
mov
rorb
mov
mov
add
pop
sub
inc
mov
in
insl
aad
mov
xchg
stc
mull
and
or
lods
out
lahf
and
insb
push
push
test
and
lahf
jb
cmp
sbb
and
add
mov
mov
rol
stc
es
push
xchg
in
aad
testl
std
sahf
add
cmpsb
jl
gs
cmpsb
mov
pop
mov
and
or
cli
cmp
push
popa
das
mov
aaa
pop
mov
xor
jne
jle
fildll
dec
test
pop
add
mov
xlat
aad
fbstp
cld
push
pop
push
dec
adc
pop
loope
repz
add
ss
sbb
addr16
insb
push
push
dec
mov
test
sahf
gs
dec
fdivrl
mov
push
test
bound
and
pop
jecxz
or
addr16
and
cli
pop
push
sbb
pop
sub
gs
inc
leave
xchg
xorb
and
push
push
xor
mov
xor
fwait
pop
negl
fmull
jae
dec
cmp
subb
adc
pushf
mov
gs
jb
cmp
inc
outsl
jl
popl
pop
cmp
and
js
cs
xchg
xchg
cwtl
mov
les
xchg
xor
mov
mov
push
arpl
setnp
push
aad
jl
mulb
sbb
and
pop
adc
dec
jno
add
xchg
xchg
frstor
xorl
sbb
adc
imul
push
fdivrs
sbb
cld
sbb
pop
bound
imul
lock
xorl
ljmp
cmp
jns
add
adc
lock
in
les
idivl
sub
repnz
add
inc
cltd
iret
sub
adc
lds
jmp
jnp
inc
in
inc
das
mov
ljmp
stos
or
pop
pop
jge
loopne
les
xchg
pop
or
adc
clc
sbb
test
push
inc
push
inc
inc
sbb
jns
popa
fwait
xor
insl
repz
cmp
dec
mov
jg
xchg
ja
pop
mov
push
mov
lea
ljmp
out
stos
inc
sti
rep
push
dec
sub
xor
fwait
dec
rcrl
dec
in
push
jp
xchg
sbb
push
add
sub
mov
jns
cltd
fs
shr
stc
les
sub
xlat
jl
in
inc
mov
mov
nop
ds
add
inc
mov
dec
push
adc
stos
cmp
fbstp
dec
mov
inc
imul
dec
mul
push
out
mov
mov
mov
and
gs
dec
add
fisubl
lds
and
adc
adc
sti
out
xchg
repz
ljmp
in
mov
inc
or
ljmp
mov
cmpl
or
dec
test
in
sbb
in
das
movsl
push
sbb
mov
push
mov
imulb
sbb
nop
sbb
pop
scas
pop
lods
mov
popa
test
rcr
sbb
jne
das
pop
add
jle
adc
int3
mov
dec
int3
in
xchg
das
cmp
xchg
into
lret
cld
sbb
mov
push
iret
popa
addr16
xor
call
in
mov
scas
mov
pop
inc
aam
enter
fsubrs
dec
jecxz
xchg
push
lods
push
push
movsb
jno
inc
cmp
dec
gs
popf
stos
push
sbb
stos
fidivrl
pop
push
mov
xor
shll
and
pop
arpl
fsts
dec
insl
lds
iret
lea
fisubrl
push
pop
xchg
push
jle
stos
lahf
outsb
sub
hlt
fists
nopl
pop
add
cmp
int
mov
pop
push
mov
clc
pushf
push
je
mov
repz
push
mov
aad
jo
push
xlat
dec
cli
jge
jge
pop
mov
clc
aaa
test
loop
imul
in
sahf
pop
fucomp
or
leave
lret
repnz
mov
push
adc
inc
cwtl
inc
aam
punpcklwd
aam
cmp
std
clc
mov
sahf
and
mov
xlat
push
into
lds
mov
add
adc
jp
jae
mov
inc
out
xchg
icebp
inc
cltd
add
and
fwait
mov
sub
cmpsl
cltd
push
out
fldl
ret
mov
inc
push
int
sbb
mov
sbb
cmc
jae
pushf
mov
bound
add
rcrb
cwtl
jmp
sub
xorb
lods
mov
cmpsl
test
pop
stos
mov
pop
or
dec
mov
in
pop
mov
scas
outsl
out
leave
mov
fidivl
fstpl
xchg
push
push
adc
sbb
in
in
lret
sbb
insl
mov
mov
jle
into
mov
lret
fsin
or
dec
push
out
jno
xchg
mov
fs
inc
jns
and
mov
sbb
cmp
adc
sub
aam
clc
out
out
adc
cmc
lret
jp
imul
push
mov
out
cwtl
popf
stos
push
aam
lock
stos
jmp
jmp
shrl
cmp
mov
fmull
popa
jg
les
push
test
inc
sti
ds
imull
repz
bound
and
pop
cld
mov
and
sbb
mov
jo
sbb
pop
jl
mov
or
ljmp
sub
pop
aad
int
adc
sbbl
test
rcll
inc
or
mov
push
and
cmpsl
dec
sbb
mov
dec
or
mov
pop
push
flds
std
lea
test
push
push
lcall
push
dec
ret
ds
and
or
pop
xchg
xchg
outsl
mov
nop
pop
jo
sbb
mov
mov
and
lret
push
shlb
pop
out
or
mov
ljmp
fistpl
push
ret
ret
sbbb
push
push
fst
out
std
shll
mov
mov
lahf
mov
xchg
cmp
jnp
cmc
cltd
inc
mov
inc
lret
mov
jg
test
pop
fildll
cwtl
push
out
push
xlat
dec
push
scas
xchg
fistpll
fwait
xchg
pop
jge
inc
out
jne
insb
pop
outsl
inc
aad
out
inc
pop
push
pop
xor
stc
rcr
push
into
popa
push
pop
jle
stos
pusha
je
mov
sarl
adc
popa
dec
pop
sbb
xchg
outsb
es
jl
sub
push
adc
xchg
push
jbe
push
and
aad
xor
sub
and
xor
mov
stc
mov
mov
int3
adc
jo
push
dec
add
out
cmp
sti
fimull
sub
mov
xchg
or
mov
std
ret
aam
mov
call
inc
inc
popf
push
cmc
je
inc
test
cmp
push
pop
mov
js
sahf
mov
mov
pop
addl
mov
push
mov
dec
fwait
insb
mov
gs
jle
lea
mov
inc
mov
aas
push
pop
jge
ret
pop
push
mov
sub
jns
cmp
xchg
pop
stos
inc
int3
lcall
insl
dec
mov
adc
push
cmp
mov
xchg
repnz
push
ds
lahf
aad
sbb
pop
cmp
loop
push
stos
in
jle
pusha
lea
std
xor
push
push
xchg
and
inc
mov
cmpsl
ljmp
popf
mov
test
push
aam
or
inc
into
sbb
ds
adc
ficompl
push
pop
mov
xor
fistpll
insb
xchg
daa
subb
pop
mov
xor
mov
pushf
into
out
lds
icebp
aas
mov
movsb
das
xor
mov
xchg
cmc
inc
and
roll
cli
dec
mov
jno
jmp
sub
repz
or
mov
push
ret
scas
pop
lods
pop
faddp
mov
mov
mov
push
ljmp
test
cmpl
mov
or
sbb
mov
and
xadd
inc
vaddsd
jmp
idiv
add
movsb
lea
add
popa
lods
stos
in
sbb
loop
stos
sub
into
int
sti
stos
mov
fnsave
aad
jne
testl
adc
jnp
test
sub
test
divps
imulb
in
mov
xor
mov
push
push
gs
call
jae,pn
mov
mov
jmp
add
mov
sub
in
jg
sub
lahf
out
sahf
loopne
cmc
ljmp
mov
jecxz
inc
dec
adc
shrb
jle
test
dec
int
iret
aam
outsl
popf
sar
push
dec
loopne
add
xor
test
imull
stos
imulb
mov
or
sbb
aad
sahf
mov
arpl
das
mov
jae
jae
cmp
cli
lds
cli
sub
cmp
add
scas
cmp
fistps
lds
jmp
or
fsubr
xor
xchg
push
adc
push
cmp
pop
pop
fdivs
xchg
scas
push
push
jmp
mov
push
dec
mov
fldenv
fisubrl
pusha
sbb
stos
mov
pop
or
dec
mov
xchg
clc
pop
xchg
incb
and
push
mov
push
inc
add
cs
push
outsl
add
fnstenv
pop
pop
repnz
jmp
mov
xor
cs
sub
push
aas
sub
mov
dec
mov
out
add
je
xlat
movsl
sub
loope
adc
hlt
shr
inc
das
xchg
loopne
lret
jne
lret
gs
lods
sub
pop
and
cmp
out
cld
in
gs
dec
mov
cs
mov
mov
xor
shl
inc
jl
pop
mov
or
push
fbld
or
movsl
ret
mov
cmp
add
sti
mov
nop
xchg
insb
mov
mov
cmp
cmpsl
adc
pusha
lea
pop
out
cmp
test
mov
repz
shl
sub
adc
scas
push
lods
sub
fdecstp
mov
inc
shll
push
ljmp
mov
lahf
enter
addr16
sub
or
xchg
ret
out
cld
testb
outsb
loopne
pop
push
inc
add
adc
and
movsb
shll
ret
aaa
cmc
dec
xor
femms
push
mov
loopne
mov
cmp
fdivrs
sub
jmp
std
addl
repz
mov
cmp
push
and
adc
sub
mov
jns
dec
lock
fldenv
jns
sub
pop
in
rorb
mov
je
inc
xchg
push
or
xchg
xor
leave
adc
cld
or
lea
cli
jno
cmp
stc
pop
das
ljmp
mov
mov
aaa
ret
sbbb
bound
andl
xchg
add
stos
jg
rorl
pop
imull
lret
xor
fsubl
pop
test
cmpsl
hlt
inc
daa
pop
and
mov
icebp
outsb
push
mov
test
insb
fstpl
test
mov
dec
scas
outsb
lret
aaa
push
ret
sub
dec
ljmp
lods
adc
popa
orb
test
loopne
mov
mov
loope
mov
or
pop
jecxz
call
loop
clc
movsl
mov
outsl
mov
sub
xchg
pushf
adc
cmpsb
and
mov
inc
rcrl
cmp
jge
dec
ds
adc
mov
cmpsb
mov
dec
lock
insl
xchg
fidivl
xchg
xor
sub
fisubl
sti
loop
nop
decb
dec
es
das
data16
outsl
adc
cs
mov
sbb
cmp
or
in
pop
adc
fldenv
push
movsl
insb
xor
cmp
jge,pt
mov
mov
dec
mov
xchg
mov
in
fists
shr
xchg
and
outsb
scas
hlt
aam
mov
js
cmc
cmp
pop
leave
push
jg
in
dec
xchg
lea
xchg
mov
pop
insb
iret
fistpll
xor
mov
cmpl
inc
loopne
mov
fildll
mov
mov
push
jge
ljmp
cld
test
or
jnp
sarl
push
testb
shll
pop
pop
inc
xchg
mov
leave
push
es
aam
sbbb
sub
xlat
ss
ret
out
and
mov
mov
jg
ds
hlt
fcompl
les
shll
cmc
leave
adcl
inc
loope
ss
pop
lock
mov
jmp
mov
cli
sahf
inc
leave
mov
pop
out
mov
das
sti
mov
cmp
xlat
das
adc
push
icebp
jmp
lods
mov
aad
negb
in
jge
pop
js
cli
mov
adc
insb
pop
je
out
mov
int
mov
jnp
adc
bound
std
or
jle
insl
enter
mov
jae
mov
dec
jbe
dec
dec
sbb
mov
add
stc
fldenv
clc
into
jmp
mov
jmp
aad
lods
fwait
cmp
lahf
inc
xchg
das
mov
fcmovnbe
xchg
mov
sti
lret
sbb
sbb
inc
push
sti
push
or
daa
add
lret
imull
adc
mov
xor
cmp
pop
gs
cs
bound
sbb
and
icebp
ret
cmp
mov
push
inc
push
dec
lret
in
pop
jns
push
js
mov
out
adc
xchg
imul
rcll
aas
cmp
shrb
movsl
mov
jnp
int3
jmp
rorb
insl
adc
or
inc
sbb
lds
jno
sbb
mov
push
ds
repnz
xchg
aas
shlb
sub
in
xor
jb
adc
dec
push
push
xor
xor
jo
lock
std
jae
sub
out
pop
inc
scas
popa
int
popf
pop
pop
fidivrl
aam
ret
testl
xchg
ret
xchg
xchg
jb
in
dec
dec
out
jecxz
ficomps
cltd
in
and
lods
lret
xchg
mov
lret
jp
cwtl
insl
stc
rcll
sub
lcall
icebp
xor
cwtl
pop
test
das
pop
jge
dec
mov
jmp
ffreep
fadds
add
out
out
lret
movsb
inc
divl
inc
cmpsl
or
fldenv
add
cmovp
imul
frstor
arpl
nop
mov
cltd
popa
imul
clc
push
fistps
xor
loope
xor
out
pop
insb
mov
movsl
xchg
xor
cmp
push
pop
hlt
inc
rolb
sub
inc
in
mov
jo
mov
pop
cmc
or
xchg
push
xchg
sub
testb
xor
arpl
push
cmp
lods
icebp
dec
fisttpll
lods
popa
add
push
pusha
call
ret
jl
inc
call
add
or
call
pop
daa
push
insb
pop
decb
shlb
sub
cmp
pop
out
repz
fmull
out
mov
cltd
insb
cmp
sbb
daa
inc
mov
jmp
test
pop
pop
push
xlat
pop
inc
push
push
push
dec
adc
dec
fildll
push
out
enter
adc
push
or
sub
or
ljmp
out
mov
adc
into
and
push
outsl
mov
fidivs
sbb
inc
fldenv
inc
clc
cld
pop
nop
ret
xchg
pop
fiadds
in
lret
out
enter
cmp
shll
lock
shll
pop
cs
aaa
jne
loopne
pushl
hlt
cmp
cltd
subl
hlt
lea
pop
jl
mov
add
cmp
loope
dec
data16
jne
mov
jp
repz
into
stos
fcoml
loope
lcall
fwait
push
inc
adc
adc
xchg
insb
mov
scas
leave
push
or
lock
and
out
mov
in
pop
jge
jmp
scas
mov
test
dec
pop
stos
rolb
push
and
sub
jp
inc
enter
lret
xchg
call
mov
pop
mov
rorb
or
mov
lds
mov
inc
insb
push
xor
in
push
shlb
mov
int3
xlat
cmp
test
mov
push
jne
xor
cld
jae
insb
loop
clc
data16
jl
in
mov
mov
js
pop
jg
das
ret
clc
cmp
mov
ja
jbe
das
call
mov
jge
dec
repz
popf
adc
xor
dec
in
xor
test
loopne
cs
mov
push
xchg
shl
orb
ja
mov
test
xor
xchg
lock
xor
cmp
hlt
sti
mov
push
push
jnp
pop
mov
movsb
addr16
sub
push
mov
dec
xor
pop
cli
cmp
sbb
xchg
mov
pop
push
mov
clc
sub
fldt
mov
jecxz
jle
xchg
lcall
mov
imul
out
sbb
bound
push
loop
stos
mov
dec
je
cmp
add
and
jne
push
mov
mov
dec
pop
mov
pop
dec
adc
outsb
mov
inc
int
js
jo
movsb
sub
mov
sbb
push
gs
loope
imul
sub
mov
dec
mov
jg
pop
push
ffreep
addr16
xor
mov
lret
movsb
pop
mov
cmp
lret
push
cli
xchg
stc
push
push
popa
or
cmpl
push
cmp
push
mov
lcall
fstps
fwait
dec
and
hlt
pop
xchg
xor
mov
mov
sub
adc
pop
aaa
rcrb
test
add
xchg
enter
mov
sti
out
sub
pop
rcrb
std
push
dec
pop
subl
loop
cmpb
mulb
pop
mov
or
mov
test
pop
and
stos
and
std
into
lcall
adc
imul
dec
stos
addl
sbb
xor
roll
cmpsl
out
repnz
pop
repnz
iret
jne
cmc
cmpl
les
pop
les
pop
lods
adc
or
aam
add
jne
rcl
add
leave
inc
daa
cld
sub
sub
out
sbb
lahf
pop
sarl
push
in
sub
inc
stos
test
lods
jecxz
jmp
lcall
or
push
push
or
pusha
arpl
xchg
scas
rcrl
jno
outsb
cmp
loope
shll
push
mov
insl
cmp
mov
repz
mov
stc
adc
adc
xlat
lds
add
popa
xchg
or
pop
xchg
and
mov
fnstsw
ds
insl
and
pop
aas
inc
lcall
mov
pop
ficoms
repnz
or
addr16
cs
jns,pt
outsl
ljmp
ss
test
jle
mov
std
xor
sub
in
pop
pop
sbb
arpl
aam
or
xor
jle
cld
push
push
sbb
cmp
add
out
arpl
into
cmp
into
frstor
jecxz
out
push
iret
push
add
cli
or
aas
pusha
bound
add
push
lods
jp
mov
movsl
lret
xor
pop
je
inc
in
pop
lds
sahf
fwait
sbb
adc
inc
in
lcall
adc
out
out
sbb
stc
jle
sub
cmc
xchg
imul
cwtl
stos
mov
ds
xor
test
dec
adc
or
dec
sub
sub
mov
mov
pop
out
mov
mov
lcall
jo
pop
xchg
and
in
mov
fwait
or
pop
or
addb
bound
mov
jecxz
inc
fidivs
pop
xor
inc
mov
clc
insl
clc
movsl
out
push
push
xchg
sbb
dec
sbb
test
ja,pn
stos
jge
fcmovnb
jg
jno
clc
pop
sub
xchg
insb
popa
mov
jmp
lock
inc
pushf
ja
fisubrs
test
mov
jns
pop
mov
dec
sarb
lock
jno
inc
jmp
clc
cs
ljmp
cwtl
cwtl
mov
push
xchg
push
sarl
nop
int3
add
iret
sbb
jg
ljmp
mov
mov
int3
movsl
fdivs
imul
clc
dec
xor
call
fldenv
roll
pop
xchg
out
cmp
in
pop
test
out
repz
ror
add
cltd
push
ja
inc
and
xor
mov
test
outsl
add
inc
mov
push
sub
cwtl
lods
rorl
cmp
lret
int3
cwtl
addr16
ss
sbb
pop
pop
in
pop
inc
or
jp
movsb
mov
jbe
ds
sbbl
aas
fwait
in
adc
outsb
sub
mov
gs
push
or
pop
pusha
mov
push
pop
mov
scas
scas
hlt
stos
mov
cmc
int
sbb
jle
jb
mov
iret
mov
rolb
das
lret
repz
dec
add
pop
mov
cmp
scas
push
jo
pop
lea
cmp
mov
pop
aaa
pop
mov
push
in
mov
sbb
ss
adc
les
mov
data16
mov
mov
inc
pop
cwtl
mov
push
and
jae
mov
ja
movl
jmp
addr16
ret
mov
ds
mov
sbb
push
mov
lods
pop
insl
leave
loope
push
pop
in
push
sbb
sbb
outsb
movb
pop
in
outsl
inc
mov
sub
push
mov
mov
out
lahf
enter
jge
in
sbb
cmp
movsb
js
jp
dec
sahf
inc
bound
cmp
and
inc
cmp
mov
icebp
add
mov
imul
ljmp
add
dec
insb
mov
jecxz
mov
mov
jae
call
into
cld
dec
add
fmull
xlat
xlat
test
mov
cmp
adc
fcoml
inc
das
pop
lret
xchg
loopne
subl
fbstp
outsb
in
cmpsl
mov
nop
jno
add
fistl
lea
arpl
das
loope
push
leave
or
jne
sahf
jbe
mov
stos
xor
divb
loopne
push
mov
jge
or
movsl
out
pop
adc
gs
sub
clc
mov
jg
pop
insb
mov
in
push
pop
fcomps
ror
add
sub
dec
stos
aaa
imul
add
rorl
orl
fwait
in
sbb
inc
xor
stos
testl
push
shl
sbb
clc
loop
in
xchg
scas
adc
sbb
lea
call
std
adc
cmp
cmp
xor
inc
out
fdivr
std
movsl
sti
add
sbb
ror
and
loop
push
jns
adc
sti
mov
into
jp
cmp
js
mov
add
inc
adc
outsl
add
jnp
shrb
add
inc
mov
rclb
jmp
jns
xchg
rolb
jo
lods
mov
add
xchg
pop
cmp
lcall
in
or
dec
push
repnz
inc
dec
mov
int
push
jecxz
ss
test
xor
stos
dec
negb
mov
pop
gs
or
int3
mov
cmp
lea
repnz
out
inc
xchg
xor
sbb
scas
sbb
push
fiaddl
aas
shl
sbb
je
ret
subb
adc
shll
aas
push
clc
addl
fisubrl
xor
loopne
ret
or
jns
lds
repnz
sbb
dec
push
push
into
dec
imul
call
xor
stc
mov
xor
xor
sbb
les
cld
lds
jnp,pn
jmp
mov
enter
repnz
insl
mov
lret
push
inc
xchg
pop
cmp
pushf
xor
mov
add
push
xor
push
sarb
mov
cmc
icebp
mov
sbb
inc
lods
movsl
pop
jb
daa
sub
in
roll
push
mov
je
fwait
jo
popf
insl
cs
or
out
ret
idiv
ljmp
jge
mov
ljmp
enter
sbb
xor
cmc
cli
mov
mov
cwtl
dec
and
movsb
popa
fidivs
imul
cmpsb
adc
and
mov
mov
imul
stos
aam
pop
sub
or
lret
insb
sahf
outsb
sahf
imul
or
cmp
shlb
fdivl
aas
xlat
mov
scas
jb
loop,pn
fldt
sbb
inc
jbe
arpl
xor
dec
jg
in
lahf
icebp
lahf
stc
jle
xor
inc
fistpl
or
jbe
add
scas
xchg
xor
push
inc
xchg
push
pop
imul
mov
cmp
loop
inc
imul
or
in
dec
push
loop
shl
sbb
push
das
mov
xor
adc
xchg
inc
cmp
xchg
pop
pop
clc
in
ficoms
in
into
sub
push
int3
enter
sbb
mov
clc
ja
mov
mov
mov
lcall
inc
mov
fistps
scas
pop
cmp
aam
sub
lods
mov
jmp
push
pop
scas
ss
ret
cvtdq2ps
push
lret
pop
mov
push
or
inc
pop
xchg
mov
jmp
mov
jp
out
and
sbb
cli
popa
mov
mov
scas
jns
xchg
lods
or
aam
out
mov
imul
xchg
mov
imull
jbe
push
add
xchg
hlt
mov
loop
popf
xlat
xor
xchg
xchg
cmp
mov
and
inc
leave
xlat
leave
lret
out
pop
jl
pushf
dec
pop
dec
into
stos
pop
nop
mov
gs
xchg
inc
cwtl
loopne
aaa
mov
and
mov
jg
xchg
lcall
adcl
or
test
imul
outsl
sbb
jl
xor
ret
add
xor
scas
lret
in
lods
ljmp
aam
sub
mov
pop
mov
sbb
imul
scas
add
or
inc
mov
xchg
lock
xor
idiv
lock
sub
insb
lahf
adc
mov
cmp
adc
out
mov
pushf
leave
in
scas
loopne
inc
or
cs
imull
stc
into
lea
std
movsb
lret
jae
out
sub
mov
stos
cwtl
lahf
leave
repnz
ds
into
mov
ret
xor
mov
fcmove
ds
push
fdivrs
aad
or
jmp
inc
dec
aam
pop
xchg
loope
mov
rorb
int
sub
mov
or
icebp
cltd
ret
int3
sub
ret
adc
std
jns
cli
and
dec
sub
pop
pop
das
push
push
push
jl
inc
mov
sbb
push
imull
xor
sbb
xchg
popa
push
mov
loope
rorl
jecxz,pn
cmpsl
jle,pn
mov
pop
xchg
popf
ss
sti
xchg
xchg
nop
dec
jne
leave
mov
rorl
add
or
das
pop
pop
lods
push
or
jmp
sbb
in
ret
int3
std
inc
cmpsb
add
xchg
mov
jp
mov
jnp
stos
cs
fwait
int3
pop
mov
cld
lea
dec
lods
pop
inc
sbb
jb
mov
or
fsubl
jl
lcall
popf
aam
lods
push
inc
mov
popf
jg
mov
sbb
cli
cmp
daa
push
dec
xor
cmp
ds
fidivrs
jnp
pop
and
jo
pop
sub
mov
push
lahf
aas
mov
aas
popa
mov
leave
pop
lcall
jno
addr16
das
fisubs
jns
subb
das
sub
in
push
int3
pop
loopne
jmp
ds
jg
pop
sub
shll
mov
mov
mov
bound
mov
or
mov
aas
clc
fmuls
xchg
test
dec
stos
rcrb
je
ficomps
lock
xchg
aad
xchg
jns
rolb
ja
cmp
inc
pop
lods
pop
add
int3
mov
fwait
mov
into
test
or
inc
sub
shr
dec
mov
repnz
iret
push
inc
das
insb
xchg
push
mov
pop
sarl
aas
cld
cmp
xchg
push
jle
loopne
out
cmp
cltd
fistpll
adc
cmp
fxch
mov
fists
out
add
pop
fistpll
dec
les
insl
scas
sbb
rcl
adc
idivl
sub
add
js
sbb
fwait
xor
mov
cmpsb
dec
mov
pop
inc
xchg
cmpsl
fistl
int
ds
sbb
cli
mov
pop
test
jns
sbb
cmp
cltd
lods
lods
inc
shrb
outsl
imulb
gs
push
mov
xchg
or
pop
and
loopne
movsb
cwtl
push
dec
jp
fldt
mov
sarb
add
mov
adcl
in
lret
out
clc
shl
pop
adc
cwtl
and
fldenv
sti
stos
rcrb
inc
jnp
xchg
mov
and
push
inc
leave
aas
and
test
outsb
mov
xor
mov
nop
js
mov
lret
pushf
sub
mov
jp
imul
imul
outsb
inc
sub
xor
insb
lcall
in
pop
pop
pop
dec
xchg
ja
mov
push
rcll
pop
aas
sub
ds
mov
mov
repnz
cwtl
mov
mov
pushf
insb
sbb
fwait
mov
pusha
stos
mov
in
ja
sti
xchg
sub
mov
loope
dec
out
push
inc
dec
flds
dec
cmp
adc
aam
call
xor
lods
repnz
and
pusha
mov
mov
cmp
pop
or
aam
mov
fwait
repz
dec
cld
xor
test
inc
aam
cmp
sub
aaa
sarl
push
ficoml
pusha
outsb
dec
enter
adc
and
sbb
sbb
pushf
or
neg
scas
scas
or
scas
xchg
idiv
movsb
inc
push
cmp
pusha
adcl
fmull
cmp
inc
mov
cli
jmp
jmp
dec
cmp
lods
scas
xlat
pop
lods
sbb
jp
mov
hlt
fmull
pop
pop
mov
jbe
imul
insb
cli
jl
or
popa
push
pop
or
adc
fidivrl
into
shrl
decb
out
loope
xlat
cmovl
int3
cmp
ret
xor
aam
clc
rorb
mov
dec
imul
fiadds
ss
in
imul
outsl
jmp
push
or
outsl
mov
std
xor
enter
jp
pushf
cs
inc
fidivrl
mov
lods
or
fidivrs
arpl
ja
test
ja
in
mov
sti
mov
popa
xchg
dec
xor
movsb
inc
lea
lret
shlb
bound
or
cmp
xor
mov
clc
dec
pop
add
mov
divb
insl
push
je
loop
ret
clc
mov
js
mov
enter
sub
sbb
push
pop
dec
or
inc
rcl
cmc
aam
dec
xlat
nop
imul
push
aad
xchg
insb
jmp
out
pop
es
xchg
popa
shlb
sbb
sahf
clc
cmp
pop
dec
insl
imul
nopl
mov
outsl
cmp
add
jg
les
aam
pop
cmp
mov
sbb
fstp
mov
outsb
in
arpl
lcall
or
cmc
fdivr
add
dec
push
push
push
negl
popa
pop
rcrl
loop
xchg
in
loop
cmpsl
mov
bound
int3
mov
insb
xlat
xor
daa
xchg
jp
pop
push
out
push
incl
jno
push
jge
out
jbe
xchg
insl
sbb
mov
and
xchg
into
push
outsw
outsl
fcmovnu
mov
add
add
lods
test
push
test
jl
inc
test
andb
add
xor
fst
dec
sbb
call
push
call
push
xor
lods
inc
in
jns
jne
sub
pop
scas
inc
inc
jecxz
fcoms
mov
push
ds
dec
push
es
mov
mov
stos
jo
adc
sbb
pop
sti
cmp
xchg
pushf
call
mov
xor
xchg
fmull
mov
mov
xor
loop
lret
add
xlat
xchg
sahf
xchg
cmp
mov
daa
fisubl
insb
inc
mov
test
mov
sbb
in
mov
icebp
ret
xchg
fcoml
jle
jno
into
push
movsl
jbe
or
sub
jns
push
roll
idiv
iret
adc
xchg
outsb
notb
push
or
scas
dec
jp
lgdtl
sti
sbb
popf
das
ret
scas
imul
mov
push
ds
andl
ret
jns
jle
fsub
rorb
arpl
inc
fwait
pop
ja
sbb
das
aad
xor
sbb
ret
jl
loop
fwait
inc
outsl
mov
jmp
xchg
jo
ja
dec
cmp
pop
cmp
or
ret
pop
addr16
shl
pop
adc
shll
pop
sbb
repnz
dec
dec
scas
dec
add
inc
rcr
test
je
lock
loope
in
pop
mov
mov
sbb
or
sti
cmp
mov
and
mov
jbe
out
mov
mov
cmc
push
call
jge
xchg
outsl
stos
insl
int
out
loope
mov
cmp
xorl
data16
and
sbbb
shrb
daa
pop
dec
pop
pop
adc
es
push
mov
outsb
jno
push
pop
insb
add
fcmovb
sub
gs
pushf
lretw
sbb
xchg
cli
jl
cmpsl
movb
das
fildl
cmp
scas
mull
push
in
pop
std
xor
orps
repnz
outsb
lcall
mov
jae
std
inc
fiadds
dec
mov
xchg
shrb
movsl
and
push
jl
idivl
call
sahf
mov
ja
mov
in
mov
cld
adc
sub
lret
dec
iret
mov
jp
lahf
mov
call
mov
cmpsl
mov
add
cli
sbb
movsl
or
pop
cmp
addr16
nop
mov
stc
in
inc
push
mov
mov
inc
jecxz
cld
sbb
aad
cmpsb
push
pop
test
pop
push
push
jmp
add
scas
fistl
in
xlat
mov
iret
dec
sbb
xchg
popa
add
test
inc
ja
fstp
push
xchg
out
mov
out
sbb
rcr
push
cmp
jbe
lock
ret
mov
je
ljmp
adc
push
xchg
sbb
mov
mov
pusha
nop
call
and
inc
dec
jne
dec
fs
stos
scas
and
mov
ret
rol
aaa
xchg
stos
repz
mov
fs
dec
stos
insl
mov
mov
adc
jmp
dec
sarl
inc
xchg
inc
jnp
mov
inc
jns
cmpb
scas
rol
push
ja
jg
scas
movsl
pop
mov
inc
in
adc
fmuls
addr16
pop
mov
mov
aaa
aad
shll
xorl
movsl
mov
scas
stos
and
mov
jno
enter
out
jnp
int3
mov
cltd
cltd
insb
in
mov
push
lods
add
mov
call
pop
sub
jle
cld
mov
sbb
cwtl
pop
stos
xchg
idiv
movsl
scas
pop
fldcw
dec
jne
xor
dec
or
mov
scas
cld
xchg
cmpb
dec
or
mov
ljmp
das
sar
loope
outsl
cmp
adc
test
mov
popf
dec
mov
aad
pop
or
lret
mov
jl
push
test
sub
push
enter
add
dec
clc
aam
sub
mov
repnz
mov
xor
and
loopne
pop
gs
int3
idivb
jo
inc
inc
shrl
das
mov
mov
or
ja
out
jae
mov
dec
aad
jmp
jb
push
dec
into
jbe
cmp
popl
xor
xor
and
repz
loope
fwait
loop
pop
icebp
dec
repnz
mov
mov
jl
int3
jp
lock
into
pop
ss
jecxz
mov
ds
add
push
inc
mov
push
lods
adc
pop
fs
xor
dec
roll
jae
push
lods
mov
pop
data16
mov
xchg
mov
lahf
aaa
sbbl
stos
jle
mov
scas
or
mov
adc
stos
xchg
lds
xchg
xlat
stc
rcrb
test
imul
pop
jle
cmp
dec
pop
xchg
fs
sbbl
ds
xchg
pop
jl
pop
dec
aad
das
scas
mov
push
pop
mov
leave
cs
cmp
mov
and
and
mov
dec
pop
js
outsb
stc
shrl
cmp
jno
movsb
xchg
xchg
xor
jo
popf
adc
xlat
sahf
fwait
mov
stos
ja
xor
fsubr
es
xor
out
jns
add
sbb
movswl
addr16
lret
stc
test
aad
jg
in
mov
push
add
inc
sbb
mov
inc
dec
hlt
xorl
lea
xor
stc
or
sahf
mov
pop
mov
cmpsb
cltd
xchg
popl
mov
addr16
frstor
hlt
ds
std
xchg
sub
enter
into
mov
into
inc
and
lea
mov
jb
je
lock
mov
es
jbe
pop
bound
adc
bound
nop
push
das
sub
push
ret
faddp
jns
leave
jle
push
sbb
les
stos
adc
fcmovu
ret
dec
aaa
pop
mov
mov
stc
into
jnp
aaa
or
xor
mov
dec
sti
lea
adc
ds
std
arpl
movsb
and
loop
das
sub
addr16
popf
pushf
into
and
mov
call
aas
cmpsl
adc
dec
mov
ret
imul
jg
cmpsl
shrl
add
lea
cld
aad
sti
loop
repnz
in
insb
and
pop
test
clc
mov
jp
dec
pop
in
loop
sub
call
rcl
jmp
ds
jg
out
adc
mov
mov
or
fisubrs
aaa
pop
jg
out
xchg
xor
outsb
clc
cmpsl
and
pop
fstps
movsb
lahf
icebp
jo
pop
adc
sbb
or
sub
and
and
insl
mov
bound
push
inc
and
mov
fwait
mov
jecxz
fcoms
lcall
ja
adcb
and
pusha
jbe
xchg
dec
outsl
test
sbb
or
adc
dec
pop
cmpsl
stos
rolb
jecxz
leave
inc
lock
xchg
out
addr16
jae
rorl
mov
scas
sbb
stc
jp
movsl
adc
cmp
add
mov
inc
jmp
outsl
jbe
xchg
xor
es
in
mov
call
je
adc
and
stos
cli
mov
sahf
mov
popf
in
cwtl
dec
clc
clc
jecxz
insb
in
pop
mov
out
add
mov
bound
inc
arpl
cmp
sarl
test
inc
xchg
or
les
icebp
sub
fidivs
jle
dec
jns
xchg
xchg
lds
adc
in
or
push
jae
dec
insb
test
out
sub
hlt
cmp
push
jno
lret
lret
jns
imul
test
or
mov
cmp
scas
xchg
fnsave
push
rorl
lfence
shrl
rcrb
dec
iret
ljmp
fistps
sub
out
aam
push
hlt
mov
js
clc
or
int
les
push
call
bound
stos
adc
hlt
bound
mov
icebp
push
dec
mov
jbe
pusha
sub
pop
shlb
add
stc
mov
int
jbe
mov
add
cld
mov
icebp
xor
nop
hlt
adc
xchg
xchg
inc
adc
mov
cmp
cmpsb
rorl
jecxz
jg
int
xchg
sub
fists
subb
rolb
jg
in
ljmp
int
add
mov
mov
das
jge
xor
imul
mov
lock
dec
into
xchg
outsl
push
out
aad
out
sbb
lahf
add
scas
or
adc
fwait
outsb
out
daa
lret
pushf
mov
aad
out
sti
cmpsl
aas
out
inc
dec
push
ret
push
dec
cmpsb
mov
mov
push
adc
aas
dec
in
and
repnz
fcmovnu
push
and
mov
mov
outsl
in
int3
dec
arpl
pop
dec
stc
jne
negb
out
insb
fldenv
addr16
les
mov
dec
xor
mov
mov
pop
mov
inc
pop
les
cmp
loopne
icebp
sbb
adc
clc
divb
ljmp
addr16
xor
jno
stos
lods
lahf
sbb
cmc
imul
jae
test
mov
pusha
repnz
adc
pusha
jmp
in
push
repnz
data16
ss
xlat
mov
push
aaa
or
mov
push
stos
jg
sub
popa
xchg
into
stos
cmp
mov
push
pop
loope
out
rorb
and
les
and
mov
xor
mov
push
les
jb
adc
out
inc
cld
mov
fstps
fwait
pop
lock
stc
xlat
push
mov
popa
fimull
xor
or
pop
mov
dec
push
xchg
leave
dec
fdivr
lds
pop
mov
jg
lret
or
xchg
sub
pop
sti
int
and
pop
cmpsb
push
dec
push
int
mov
mov
mov
add
test
mov
xchg
fisttpl
fcmovu
xchg
test
jae
jae
cmp
mov
sbb
cmpsb
enter
jge
or
adc
dec
dec
push
mov
or
push
mov
loop
addr16
inc
aad
inc
mov
or
or
cli
scas
mov
xchg
cmp
mov
jbe
xchg
lahf
jmp
mov
call
or
xor
jle
adc
clc
add
add
sbb
pushf
movsb
int3
fisubs
lods
rolb
ret
shl
dec
add
insl
dec
sbb
lds
add
lret
imul
aaa
mov
pop
sbb
das
mov
leave
loope
inc
cmpsb
xor
pop
sbb
sub
dec
roll
and
mov
das
in
mov
repz
rclb
sbb
sub
or
std
mov
add
jecxz
pushf
test
lods
test
cmp
jno
cmp
les
xchg
mov
out
mov
dec
sbb
xor
divb
test
and
pushf
mov
push
xor
jnp
repnz
rorb
lods
inc
xlat
push
fwait
inc
dec
rorl
jle
xor
int3
xchg
push
sub
rorl
cwtl
ret
sbb
lds
fnsave
repz
loope
mov
lret
xor
sbb
pop
icebp
adc
stos
and
test
dec
into
cld
cmc
xchg
idivl
fdivrl
xchg
mov
movsl
mov
dec
into
jmp
cmp
loope
ja
repz
lahf
andl
lret
lods
fdivrl
inc
test
jg
cmpl
push
cmp
adc
or
popa
xchg
push
divl
pop
aas
xchg
pop
lahf
jg
ljmp
add
jecxz
bound
aad
stos
mov
test
pop
mov
jle
cmc
lahf
in
cmpsl
dec
xchg
int
dec
clc
andl
or
sub
sbb
js
cli
loopne
pop
pop
std
les
jne
sbb
cwtl
aad
repz
pop
roll
dec
push
adc
sahf
cld
ret
test
stc
cmp
push
push
sti
cmp
jae
lds
decb
sahf
sti
and
mov
push
pop
in
dec
test
push
jge
sbb
pop
int3
sahf
jmp
insl
pushf
inc
cmp
pushl
bound
mov
enter
xor
or
das
rcrb
or
sub
outsl
es
sbb
fwait
lahf
lea
pop
dec
mov
faddl
sub
mov
lds
out
xor
fmull
rorl
mov
pop
aaa
pop
adc
arpl
xchg
jno,pt
jbe
xor
cmp
cmc
and
test
in
das
loopne
ljmp
popa
xor
jg
out
inc
pop
fldz
xchg
test
lcall
mov
cltd
aaa
js
test
push
inc
lock
sbb
sahf
stos
add
and
inc
faddp
sti
jle
rclb
cmp
mov
aaa
pop
lods
ljmp
jmp
pop
test
movsl
into
xchg
gs
not
sbb
fisubrl
xchg
xor
xor
mov
lds
scas
lret
rorl
and
mov
insb
std
cltd
xor
inc
mov
pushf
in
push
sbb
dec
fcoms
jl
ret
decb
dec
addb
and
aas
lea
mov
inc
imul
test
sbb
sub
xor
mov
mov
and
push
jne
aad
jne
sbb
xor
js
inc
cmp
rolb
sub
push
repnz
jmp
add
push
xchg
in
sbb
cltd
call
test
in
ret
fcmovnbe
and
lock
aaa
xor
or
push
out
in
jg
cld
xchg
pusha
shll
dec
add
cli
inc
lcall
aad
xchg
lods
pop
xor
fucomip
cwtl
fcmovb
ret
push
jle
push
lcall
fwait
pop
push
dec
rol
jmp
repnz
stc
adc
ja
mov
xor
mov
pop
mov
xor
fisttpll
mov
lret
xor
cmp
dec
push
cmc
movsl
or
mov
insl
sbb
xchg
push
mov
inc
cmp
and
pusha
xor
aam
mov
mov
lcall
jecxz
pop
xchg
rorb
sub
pop
inc
and
jns
mov
adc
adc
add
scas
mov
stos
xlat
pop
dec
mov
xor
rorl
dec
jno
cmp
jl
inc
inc
mov
dec
mov
lret
dec
icebp
adc
cmp
sbb
add
idiv
scas
loop
into
pusha
fwait
in
mov
pop
inc
out
out
cld
movsl
push
cmc
sarl
data16
aaa
aad
aaa
or
add
or
arpl
arpl
daa
jbe
add
and
mov
xchg
es
lds
fstpt
sbb
fisubrl
xchg
jle
sbb
cmp
dec
sti
mov
and
sbb
pop
cwtl
push
cmp
mov
aad
popf
mov
mov
sbb
in
pop
ss
mov
cmp
test
int
pop
push
xchg
cltd
stc
mov
add
repz
cmc
arpl
mov
rep
popa
je
or
mov
jg
aas
scas
add
or
lret
xor
xchg
and
sahf
add
clc
pop
push
stos
aam
adc
fisubl
sub
fiadds
iret
stc
xchg
ret
jle
lea
iret
jg
aaa
or
mov
iret
sub
adc
lret
outsl
xor
adcl
push
popf
sub
cli
aam
jbe
cmc
push
pop
int3
mov
xchg
mov
sahf
fildll
jl
add
xor
scas
push
jno
lea
mov
push
jecxz
cmp
pop
push
insl
xchg
mov
xor
std
xchg
fdivrl
jle
dec
call
jnp
enter
js
mov
xchg
rcrl
push
push
xchg
leave
push
ds
popa
push
mulb
lods
jno
loope
repnz
sub
iret
int3
clc
bnd
xchg
clc
jmp
shll
dec
repnz
cmp
pop
cli
inc
mov
pop
in
mov
mov
sub
dec
pop
int
sub
and
jle
insb
lods
insb
jb
inc
xor
leave
ficoml
sbb
mov
xor
jns
and
test
aad
jbe
movsb
loope
push
shll
pop
cmpsl
into
sub
cmpl
stos
jbe
rdpmc
dec
push
into
popf
scas
bound
inc
out
fsubl
mov
das
lods
fsts
and
fdivl
lock
and
insb
in
hlt
ljmp
leave
lret
mov
ljmp
inc
movsb
repnz
sarb
in
add
ffree
xchg
cmp
sbb
mov
sub
xor
gs
mov
and
dec
add
push
jns
fcmovbe
mov
addb
or
mov
pop
test
cmp
loopne
push
mov
sub
stos
mov
int
out
jne,pt
add
daa
ljmp
sub
jo
pop
ja
pop
dec
mov
pop
test
ds
repnz
or
jle
push
dec
jo
jle
inc
adc
imul
or
xchg
addr16
div
ja
test
dec
mov
mov
jmp
int
push
or
pop
mov
lret
mov
in
loopne
xor
fsubs
movups
je
jnp
mov
sub
test
scas
stc
xchg
pop
aad
or
mov
daa
ret
or
ftst
ss
cmp
pop
pop
test
sbb
sti
xchg
xor
pop
pop
adc
mov
mov
push
pop
fldenv
shl
xchg
out
dec
fcmovu
sub
cs
test
jo
out
inc
cmp
sbb
or
mov
imul
popa
sub
sbb
pop
xchg
jae
lods
ret
mov
jp
mov
push
xor
fdivrl
add
sub
pop
das
dec
movsb
fsub
sub
sbb
pop
mov
sbb
repnz
movzwl
testb
std
shrl
iret
mov
pop
cld
cltd
lea
ds
dec
push
rorb
ljmp
leave
stc
popf
inc
mov
jnp
subl
inc
fadd
repz
int
lahf
push
negb
sub
cld
mov
jge
mov
jbe
inc
inc
cwtl
popl
aam
cld
nop
mov
shrl
in
enter
lcall
xor
cmp
sub
xchg
and
jne
sbbb
stos
xchg
jno
rorb
aaa
jae
fdivp
lods
jb
mov
std
add
mov
iret
aad
pop
xchg
adc
sti
mov
popf
mov
inc
icebp
cld
xorb
lods
cs
mov
adc
or
cwtl
fwait
int
xor
arpl
in
out
xor
and
fcoms
add
push
lret
sub
mov
mov
scas
jbe
xor
lods
or
fwait
in
test
scas
ja,pn
jle
add
or
inc
out
push
in
sub
inc
mov
out
aad
jg
sbb
sub
pop
loopne
sbb
xchg
fcmovu
sub
pop
inc
dec
lahf
je
test
scas
inc
push
pop
out
push
mov
push
shll
xor
mov
sbb
outsb
sbb
jnp
test
mov
add
mov
mov
sbb
jp
aaa
pop
sub
mov
bound
fnstsw
or
orb
outsl
sti
pop
cli
push
jg
dec
flds
aad
add
enter
in
xchg
adcb
movsb
add
mov
cmp
repnz
mov
ret
dec
jne
mov
mov
dec
mov
daa
mov
mov
sbb
jae
rclb
push
xor
scas
xchg
sbb
pop
test
inc
pop
pop
mov
mov
push
mov
pop
das
dec
es
ljmp
cltd
ret
xor
xchg
pop
cvttps2pi
xchg
movsl
movsl
jg
insl
inc
push
lret
cli
fwait
andb
jg
inc
fstl
pop
xchg
out
sub
shlb
out
pop
xchg
mov
ljmp
les
lods
sub
stos
or
das
inc
std
ror
cmp
jecxz
jne
clc
in
bound
in
or
jl
testb
cmp
lds
dec
jae
sub
inc
dec
mov
sub
les
push
stos
mov
adc
mov
in
push
movsl
in
inc
xchg
icebp
xchg
sbb
inc
dec
mov
jnp
std
sub
div
xor
cmc
cmpl
stos
inc
inc
sub
xchg
xor
sbb
xchg
inc
push
jae
or
rol
dec
mov
push
mov
pop
scas
push
dec
ljmp
pop
stos
std
pusha
loopne
inc
fstpl
fmul
je
adc
outsl
test
mov
adc
cmp
fcompl
lock
lods
stc
xchg
call
popa
out
mov
fsub
mov
dec
cmp
stos
mov
push
stc
bound
das
xor
scas
or
popa
adc
in
mov
movsl
bound
mov
test
pandn
sub
mov
jnp
cmp
jle
jge
sbb
in
repnz
inc
fs
push
popf
xchg
sub
adc
pop
bound
pop
lret
mov
lea
add
mov
xchg
out
mov
xchg
xchg
leave
lods
test
pop
add
jmp
jno
mov
int3
mov
arpl
cmp
adc
js
jmp
out
aaa
jg
insl
pop
xor
ret
iret
push
mov
xchg
push
pushf
pop
mov
das
clc
ret
push
and
enter
fs
xchg
movsb
pop
arpl
mulb
sbb
test
xor
dec
xchg
dec
xor
mov
clc
jno
stos
pop
push
xchg
movsb
mov
in
roll
repnz
push
insl
push
insb
add
aad
mov
mov
gs
sub
shrl
mov
xor
testb
daa
adc
and
xor
cwtl
call
imul
rclb
mov
and
or
sbb
sbb
and
jns
pushf
inc
push
into
xchg
jmp
or
jne
out
sbb
imull
repnz
lahf
js
add
mov
imul
xchg
aaa
mov
test
push
cmp
inc
or
loop
divb
xor
scas
lret
lods
pop
cltd
fwait
dec
cld
sahf
cmpsl
jnp
cli
or
lret
inc
jge
or
popa
push
jae
stos
dec
scas
dec
lret
adc
push
jns
adc
loope
pop
cmove
add
shll
pop
inc
stos
mov
or
fidivs
sub
ficomps
cmc
sub
xor
mov
inc
rol
fwait
mov
movsb
pop
mov
xchg
dec
loope
js
adc
mov
cmpsb
out
mov
flds
mov
and
xor
cltd
jp
in
jmp
mov
nop
xchg
pushf
std
popa
stc
cmpsl
stos
jle
xchg
mov
mov
and
mov
pop
and
repz
scas
fs
fucomi
imul
cld
addr16
test
cld
idivl
jnp
cli
pop
sub
add
cwtl
dec
bound
repnz
inc
jmp
push
push
shrb
cmpsb
push
cwtl
loopne
mov
mov
insb
in
xchg
mov
popf
adc
pop
divb
das
mov
cmp
jecxz
mov
adc
stos
insb
rcl
sub
in
lods
lret
mov
cld
inc
rcrl
clc
test
clc
xchg
cmpsl
cmpb
iret
mov
daa
pop
mov
add
inc
sahf
mov
ljmp
lods
sub
aas
out
xchg
cmp
iret
or
cmp
xchg
ss
mov
fnstsw
and
xor
repz
xor
loope
cmp
mulb
jg
or
gs
mov
ret
inc
xchg
stos
mov
das
and
loop
cwtl
aas
sbb
notl
jge
sbb
sub
loop
repz
gs
data16
imul
int
je
fwait
sub
out
and
into
mov
xchg
mov
cmp
push
popa
cli
jge
xor
cli
mov
dec
dec
mov
pop
jg
cs
push
mov
or
xchg
pop
popf
push
pop
je
mov
add
cmp
jne
xlat
mov
aam
xor
mov
adc
scas
insl
dec
loop
adc
int3
mov
das
int3
ja
dec
leave
std
rol
sub
popa
jecxz
pop
adc
scas
mov
push
jl
push
sbb
into
sbb
jbe
sub
mov
sub
stos
mov
fisttpll
adc
test
mov
cmp
sub
add
inc
push
push
and
enter
jae
test
jns
mov
ja
sub
rclb
adc
and
pop
outsl
adc
shrb
fcoml
cld
pop
cld
fsubrl
sbb
popa
pop
loopne
cmpl
and
aam
std
xchg
pop
jbe
out
xor
dec
roll
xchg
test
popa
js
mov
outsb
cmp
daa
cmp
test
movsb
sbb
bound
mov
scas
pop
stc
ss
arpl
jo
pop
nop
shrb
xlat
inc
xlat
int3
popa
and
ljmp
gs
fisubrs
mov
xchg
push
push
pop
mov
mov
sbb
pop
push
and
pop
pusha
mov
adcl
dec
push
mov
fidivrs
loope
ljmp
repz
test
push
sub
loopne
xchg
cmp
mov
cmp
sbb
cwtl
rorb
cli
into
das
popf
jmp
gs
loope
xchg
mov
pop
inc
lock
mov
pop
xlat
call
mul
sarl
lods
cmp
dec
fsubrl
mov
shll
pop
out
mov
push
jle
sti
lret
push
mov
jl
push
jno
aam
adc
stc
sub
lret
inc
xor
lahf
add
loope
sti
sbb
daa
xorb
sub
pop
adc
sub
jecxz
add
pop
push
push
incb
ror
in
imul
negl
loopne
pop
test
add
pop
pop
push
call
mov
sbb
push
push
xor
pop
xor
jle
out
jne
filds
ds
adc
mov
shlb
cmp
cmp
push
pushf
fistpl
lret
mov
xchg
dec
arpl
jle
mov
call
push
lcall
cmpsl
addr16
jmp
outsl
mov
xchg
xlat
push
lods
lods
in
mov
inc
in
lret
loope
inc
mov
enter
cli
push
insl
adc
ljmp
lods
adc
out
lds
xchg
aaa
sub
aam
std
fstpl
adc
jmp
pop
or
ss
and
cmpsl
mov
push
pop
jbe
sub
js
mov
out
shr
es
mov
stc
cwtl
and
cld
mov
daa
or
push
out
or
ret
mov
outsl
mov
adc
ja
xlat
fwait
dec
das
push
aas
cmp
test
adc
jl
in
pop
push
daa
test
mov
aas
test
aaa
push
sub
hlt
shll
dec
xchg
mov
loop
xchg
inc
aas
xchg
cmp
fmul
adc
xor
add
mov
hlt
pop
mov
dec
lcall
cwtl
int
dec
pop
leave
or
scas
inc
jg
inc
imul
xor
or
scas
stc
xchg
mov
mov
cli
pusha
addr16
in
xor
adc
xor
jnp
xchg
mov
jp
push
cmovle
mov
jge
or
in
les
sbbb
pop
push
fsubrp
cli
push
les
subb
dec
gs
jl
in
pop
lock
mov
pushf
lods
test
sbb
mov
aas
std
repz
jl
fisubs
jle
adc
ja
inc
adc
cmp
ds
jmp
mov
outsb
cmp
sbb
ret
push
xchg
imul
in
shlb
pop
les
mov
shl
nop
ss
out
lret
and
cmc
stos
mov
in
lods
and
push
and
out
js
pop
out
mov
xchg
cmpsl
in
sbb
repnz
mov
les
aam
jge
jnp
int3
jg
fsubrs
add
cs
dec
lcall
sbb
imul
dec
div
inc
or
ja
mov
les
pop
loopne
mov
fsubr
into
sub
int3
pop
push
add
push
testb
das
push
out
xor
sbb
mov
xchg
jp
push
mov
dec
lcall
cmc
push
ja
sbb
hlt
cld
pop
lcall
in
sbb
out
sbb
jns
sbb
ret
iret
pop
mov
fsubs
inc
ljmp
lcall
arpl
pop
clc
nop
sbb
fdivrs
inc
cs
neg
rolb
or
pop
dec
inc
popf
mov
aas
push
fsubs
xchg
fwait
test
pusha
sub
cwtl
pop
das
imul
pop
inc
lock
das
dec
outsl
mov
xor
sarl
adc
dec
add
cld
test
addr16
push
lea
test
daa
push
cltd
into
jge
xor
jns
mov
adc
mov
loopne
jns
movsb
mov
xlat
fistps
fcompl
bound
mov
sahf
mov
jl
aaa
mov
aad
clc
lock
dec
xor
cmpl
shll
sbb
fisubrs
mov
outsl
mov
aas
fcoms
test
scas
les
xor
sub
out
int3
std
mov
test
push
xor
jns
xchg
mov
jl
ret
xchg
cmp
xchg
push
loope
lcall
add
mov
mov
pop
test
or
push
hlt
xor
loope
cltd
loope
icebp
adc
ret
popf
dec
cmp
mov
xor
jae
lret
lock
xchg
sbb
cmpsb
inc
jns
test
test
push
mov
mov
int
clc
jmp
repnz
lea
mov
mov
sub
push
ljmp
xchg
neg
mov
sub
inc
mov
sub
orps
js
loopne
sarl
sub
dec
push
inc
mov
push
cmc
insb
mov
repz
add
jp
dec
sbb
arpl
data16
test
sub
lods
ror
out
inc
add
cmc
cltd
loopne
roll
or
ljmp
ja
and
pop
aaa
aas
and
mov
sbb
sub
fsubrs
adc
test
push
pop
mov
jno
push
sub
pop
or
sbb
mov
push
push
call
push
fists
pop
movsb
iret
lods
dec
mov
stos
xchg
push
mov
inc
mov
out
aad
dec
insb
int3
aaa
in
dec
sbb
jg
scas
pop
push
push
loopne
outsl
mov
je
cmc
fs
fistpl
jmp
dec
jne
popf
sahf
add
mov
pop
sub
mov
xchg
test
test
sti
cmc
adc
orl
loop
lahf
sub
mov
aam
jnp
pop
mov
cmpsb
sub
and
in
mov
xor
pop
mov
scas
mov
xor
into
pop
jle
clc
sahf
mov
sbb
bound
mov
pop
test
dec
lret
lock
stc
arpl
movb
jecxz
pmaddwd
fld
in
mov
inc
xor
rcrl
out
adc
out
xchg
jbe
in
movsl
mov
arpl
dec
and
out
pop
pop
stc
and
shl
scas
aad
in
ret
movsb
jge
cmp
adc
mov
in
pushf
xor
insb
iret
ljmp
cltd
xchg
inc
out
pop
push
bound
scas
psrad
imul
adc
mull
lret
mov
icebp
inc
inc
sbb
sahf
shll
dec
mov
addr16
mov
sahf
jmp
push
in
mov
push
bound
inc
mov
into
pop
mov
mov
push
jbe
push
in
pop
cli
and
push
out
mov
or
sbb
lods
sbb
addr16
jmp
add
add
icebp
loopne
ret
sarl
sub
cmp
xchg
fwait
jb
jg
mov
sahf
into
lcall
push
imulb
cld
lds
jae
jmp
push
mov
dec
mov
xchg
lcall
or
aam
mov
lods
mov
pop
leave
and
pop
jnp
push
pop
iret
insl
push
popa
cmp
mov
dec
notb
inc
sub
add
sbb
call
ja
lcall
fidivrs
inc
sbb
cmp
and
in
icebp
adc
xchg
sub
pop
lods
lret
nop
jle
loop
mov
icebp
inc
lahf
icebp
jo
xor
xchg
dec
outsb
ja,pn
ss
dec
loop
jmp
fnstsw
adc
sbb
xchg
bound
scas
ss
loopne
jnp
jecxz
push
xchg
test
cwtl
sti
shlb
jge
les
push
and
call
std
sarb
add
sub
insl
push
out
inc
pop
push
mov
mov
dec
imul
jg
cmp
stos
outsb
jp
fsts
add
roll
ja
mov
in
js
or
pushf
loop
daa
in
sbb
test
fs
mov
mov
xchg
cld
sbb
and
cmc
repnz
mov
xor
dec
in
test
lods
fcoms
pop
sbb
je
daa
pop
in
xchg
sub
mov
push
jmp
fadd
jge
clc
rclb
hlt
ss
mov
cmpsb
lret
icebp
addr16
add
mov
push
fcomps
cmpsl
aaa
mov
je
add
into
lods
js
rcrl
xchg
xchg
mov
sub
jns
jmp
fcmovu
push
xchg
cmpsl
jl
push
popf
out
repnz
fdivr
rorl
dec
lahf
adc
jmp
lods
addr16
xor
call
xchg
push
lods
lds
int3
outsb
dec
es
or
rorb
clc
andb
sbb
pop
sarl
je
leave
mov
mov
loop
xchg
jl
cld
push
imul
jg
rcll
mov
imull
cmp
cmpsl
push
xor
lock
sbbb
or
inc
cld
inc
mov
inc
or
daa
pop
iret
push
cld
sub
adc
stos
pop
jb
mov
sbb
sub
imul
and
dec
xor
rcll
cmpsl
mov
and
fcompl
inc
jnp
test
cmp
out
sti
mov
mov
dec
and
cmp
ror
sti
inc
cmpl
mov
or
outsl
mov
pop
push
cmpsb
jb
sub
bound
ret
sbb
push
add
les
ss
std
pop
jo
inc
test
jns
arpl
sub
pushf
mov
pop
dec
adc
cs
or
out
scas
mov
or
into
in
mov
cmp
xlat
into
jns
lea
inc
sub
pop
out
adc
push
sub
and
sub
icebp
xor
rclb
pop
or
sbb
xchg
test
movsl
sti
xorb
mov
std
xlat
ds
mov
lock
mov
out
pop
dec
sub
mov
cmp
std
js
daa
inc
repnz
pop
cmc
vmovsldup
mov
jl
popf
sbb
ja
and
out
dec
mov
fwait
pop
int
adc
inc
push
sub
or
loopne
add
ret
movsb
add
out
xor
cmp
data16
xor
pop
pop
jg
call
scas
cmp
inc
fistpl
mov
out
adc
xor
xchg
jge
notb
ja
xchg
push
dec
pop
pop
out
cmpsb
pop
jle
dec
and
cmp
pop
add
loop
arpl
es
leave
fidivrl
outsb
aad
sub
in
hlt
in
mov
repnz
ja
iret
imul
and
lods
out
addr16
mov
cmp
fs
test
out
loope
fs
cmp
sbb
loope
mull
xchg
imull
ret
repz
ljmp
es
pop
jns
jo
hlt
add
xchg
cwtl
bound
jbe
jle
ficomps
add
mov
xchg
xchg
icebp
sub
adc
jns
and
mov
inc
out
adc
hlt
mov
push
dec
movsl
dec
jnp
or
cmp
repnz
lret
lret
mov
dec
push
and
mov
cli
mov
sub
std
dec
imul
mov
test
and
pop
mov
das
addr16
mov
jl
rorb
mov
stc
push
loopne
dec
popa
or
stos
aam
aas
mov
ss
cmp
stos
pushf
ljmp
orb
out
loop
sbbl
xor
aaa
xchg
clc
mov
adc
mov
mov
add
fistpll
or
mov
mov
scas
add
into
cli
xchg
mov
push
mov
jmp
pop
and
loopne
or
lds
test
mov
faddp
hlt
push
sti
icebp
leave
in
and
pop
push
addr16
sti
repz
inc
jg
or
cmp
int
scas
cs
jnp
fcomp
xchg
cmp
push
mov
cmp
gs
jbe
lods
stos
xchg
nop
out
pop
popf
xor
sbb
or
xlat
mov
movsl
push
mov
pop
test
cmp
rol
rep
cmp
cs
lods
cmp
stos
or
test
lods
push
cmp
dec
mov
push
les
ud2
pop
sbb
roll
sub
inc
dec
rorl
inc
cwtl
push
jp
cmp
xchg
lods
push
stos
xor
cmp
xchg
push
ret
xchg
xchg
lea
bound
jg
popa
icebp
push
clc
and
fimuls
sbb
xchg
insl
mov
test
adc
fs
xorl
incb
xlat
jmp
inc
jnp
inc
mov
jbe
std
jnp
sub
jns
mov
test
out
insb
dec
fstpt
mov
jge
pop
mov
fs
jl
negl
ss
rcrb
in
div
jo
int3
jbe
lock
fnstsw
xchg
scas
ljmp
or
test
mov
or
sub
enter
add
xor
fnstcw
mov
shrl
js
in
push
shlb
adc
and
cs
sub
imul
ljmp
hlt
sub
sub
push
pop
pop
push
sbb
dec
or
push
imul
popf
push
jmp
cwtl
lods
shll
in
inc
jb
pop
cli
call
lods
adcl
sub
xor
cld
pop
lcall
sub
mov
xchg
push
mov
inc
testl
adc
mov
pop
gs
shll
into
push
cltd
mov
dec
cmp
ljmp
jnp
js
daa
mov
loopne
cmpsl
xchg
jge
out
mov
lds
cmp
sub
lahf
out
ficomps
mov
int
mov
int3
fstps
push
not
dec
jl
clc
pop
mov
mov
aam
mov
insb
stc
jle
clc
std
xor
pop
sub
push
insl
push
mov
push
xchg
pop
jle
das
test
push
ret
push
loop
out
or
adc
fildll
xorl
loope
les
cmp
pop
aas
data16
insl
std
pop
mov
jl
scas
fmulp
daa
adcl
data16
dec
mov
adc
aad
in
inc
stos
mov
subl
lret
scas
fsubrs
aam
bound
mov
xor
mov
mov
fstpl
inc
aas
jg
jmp
jb
or
es
test
cwtl
fidivs
aas
mov
cli
stc
sysexit
sti
inc
bsr
lds
sti
xorb
shl
xchg
int3
sub
in
sti
push
push
add
mov
rcrb
pop
pop
gs
lret
xor
xchg
ljmp
push
imul
mov
pop
and
test
and
or
filds
and
scas
stos
adc
and
movsl
xchg
cmp
cmc
movsl
mov
mov
mov
inc
xchg
outsl
cmp
inc
and
int3
repz
xor
lea
rcrb
fisubrl
fdivrl
popf
es
mov
add
and
outsl
in
sbb
lcall
out
mov
pop
add
push
xlat
sub
jle
aaa
in
push
xchg
mov
mov
and
addr16
iret
leave
jg
sahf
jmp
rcrb
sbb
jne
xchg
push
mov
imul
mov
add
mov
mov
mov
or
cmp
aad
out
inc
movsl
in
or
mov
inc
jge
jmp
imul
fnsave
mov
sub
nop
add
inc
dec
repz
int
adc
adc
subl
iret
lcall
cmp
in
addr16
test
xor
cmp
xchg
sub
push
xchg
sbb
frstors
xor
mov
fstps
loop
push
mov
push
pushf
jge
aad
fstps
aam
mov
mov
rcll
lret
sbb
or
xchg
adc
clc
sub
inc
nop
mov
mov
cli
adc
ss
xorb
hlt
data16
daa
gs
xchg
xchg
adc
fisubrl
jmp
loope
pop
xchg
jnp
hlt
fisubs
test
push
xor
dec
addr16
movsb
std
dec
pusha
jnp
cltd
or
idivb
mov
adc
inc
call
test
adc
xchg
das
mov
pop
cmc
xor
fstpl
aam
into
cmp
pop
push
pop
xlat
test
adc
xchg
pop
jg
fstpl
xor
mov
scas
jge
sub
aaa
aad
xor
jo
mov
push
dec
push
cmpb
xor
shrl
imul
mov
mov
push
sbb
stos
bound
mov
lods
jecxz
cs
sub
sahf
dec
and
ret
push
xchg
fdivl
mov
shrl
jae
clc
loopne
in
std
adc
dec
imul
jno
lret
stos
test
sarl
mov
rol
cli
cmpsl
mov
popa
cwtl
dec
push
sbb
xor
and
shll
cmp
pop
mov
movsl
inc
cmc
push
shl
add
mov
fisubl
pop
or
inc
popf
enter
int3
cmp
pop
push
lret
lock
lea
ds
pop
in
stc
xor
lcall
mov
scas
xchg
adc
ljmp
cmpsl
addr16
push
jmp
dec
mov
xchg
sbb
stos
testl
jp
jmp
mov
daa
mov
std
or
addr16
jge
mov
cmp
mov
gs
repz
pop
or
adc
mov
adc
lea
inc
mov
mov
mov
pop
jg
insb
pop
mov
popf
mov
std
aas
push
cltd
jae
orl
push
cwtl
mov
inc
test
icebp
in
jbe
int
cmp
xor
inc
xlat
jmp
inc
mov
jp
out
andl
jp
jo
or
push
mov
aaa
pushf
stc
mov
sbb
add
out
sbb
insb
rorl
sbb
mov
mov
push
aaa
adc
test
jmp
cwtl
sub
mov
sub
ret
into
adcb
hlt
xor
mov
addr16
lret
pop
pop
aam
into
adc
int3
shll
pop
divl
in
jmp
ss
mov
push
inc
dec
lahf
cmp
scas
in
mov
mov
mov
cmpsl
mov
mov
sti
rolb
mov
push
lods
aaa
insb
inc
inc
or
out
adcl
sbb
into
dec
xlat
ret
cltd
int3
je
loopne
mov
mov
out
loope
fidivrs
loope
dec
jne
push
pop
mov
inc
gs
shll
pop
push
fcomps
movsb
mov
sub
lods
cwtl
not
sbbb
cmpsl
daa
mov
mov
jb
xchg
lcall
xor
sub
or
cli
scas
sub
inc
mov
cli
out
push
xchg
add
lahf
mov
shr
or
lret
lock
lret
mov
in
pushf
dec
popa
add
adc
fcomi
xor
mov
mov
pop
sti
adc
cld
rol
mov
test
push
xchg
stos
fmull
loope
or
push
xor
scas
jae
push
out
int
mov
mov
les
not
scas
cmp
adc
subl
pushf
pop
xchg
or
push
pop
stc
mov
dec
sbb
stc
scas
mul
outsl
adcl
in
add
inc
mov
shl
imul
sti
daa
fldcw
pop
adc
lock
cmp
push
popf
mov
jbe
cwtl
xor
xchg
popf
fisubrs
mov
xor
loope
add
out
inc
sti
mov
push
xorb
hlt
push
dec
xor
call
lds
ja
lock
mov
jp
icebp
lea
inc
rcl
or
jo
push
jne
lcall
sub
jnp
xchg
cli
push
js
fwait
push
fs
sarb
pop
xchg
push
call
mov
mov
in
test
adc
jo
pusha
jl
sbb
movb
std
pop
push
xchg
out
pop
pop
xor
push
das
sub
shll
xchg
mov
pop
in
clc
dec
jmp
fildl
jb
imul
jge
mov
mov
push
push
push
cmp
insb
scas
sbb
iret
push
mov
lret
cmc
adc
cld
pop
dec
dec
jo
in
mov
push
push
jle
stc
pop
cmpsb
ficompl
out
push
xchg
sti
or
dec
pop
fisubrl
daa
shl
sub
jbe
jae
xor
cmpsl
mov
lods
add
out
ffreep
mov
mov
sbb
repnz
daa
mov
add
pusha
inc
inc
popf
mov
mov
rolb
lea
cmpsl
je
lods
pushf
push
pop
je
inc
test
jmp
xchg
jb
sahf
jb
ljmp
insb
inc
icebp
or
jmp
xchg
nop
mov
test
jle
adc
cltd
xor
push
adc
scas
sub
mov
test
inc
jle
xchg
pop
stos
rcrb
clc
and
lret
pop
ss
lret
and
mov
xchg
cli
out
cltd
lods
mov
rcr
decl
mov
jge
xchg
inc
sti
sti
lea
ret
jns
jmp
pop
popa
pop
daa
outsl
add
jp
imul
testl
mov
sbbb
jmp
push
aas
xchg
fwait
pushl
test
addl
lods
aad
test
in
push
mov
mov
out
push
xlat
sub
inc
cmp
int
lea
aaa
adc
aas
lds
and
outsl
cmpsl
push
or
shrl
jge
push
jo
pop
stos
insb
mov
mov
clc
mov
popf
nop
mov
lock
dec
mov
loopne
push
xor
in
mov
in
mov
push
xor
ljmp
jno
mov
xchg
jnp
fimuls
sub
arpl
xor
in
lret
aad
je
test
lcall
aad
dec
mov
push
sub
dec
clc
jge
mov
in
stos
and
repz
sub
push
jg
imull
fsubrs
mov
int
pop
dec
movsb
sbb
stos
mov
fldenv
scas
outsl
adc
cs
push
leave
sub
nop
addr16
mov
int
out
pop
test
cs
insl
xlat
dec
stos
xorl
ljmp
fnsave
mov
inc
pop
xchg
mov
push
loop
hlt
jb
mov
dec
jmp
mov
lahf
pop
adc
push
push
sub
pop
das
cli
cli
insb
popa
cmovnp
xchg
popa
jnp
movsl
iret
cmpsb
ret
imul
dec
add
push
pop
mov
cli
jmp
jmp
insl
add
cmp
comiss
aad
arpl
pop
into
out
setge
outsl
pushf
sub
cmp
pop
jge
rcrl
xor
movsb
jl
dec
ret
sbb
mov
add
pop
fs
movsl
xchg
lcall
inc
push
daa
loopne
int
pop
push
sub
push
xchg
stos
pop
mov
lds
aam
add
inc
gs
xchg
arpl
mov
pusha
jg
sub
xor
es
mov
mov
mov
xor
xor
fsub
mov
cwtl
idivb
aad
xor
js
sbb
jne
std
jp
push
xchg
out
dec
dec
sbb
out
outsb
mov
cmp
pop
js
sbb
loop
out
inc
mov
fistpll
je
aad
pop
popf
mov
jmp
in
rcr
outsb
xlat
mov
xor
inc
cltd
call
aaa
jl
mov
dec
mov
lods
or
pop
mov
adc
dec
jg
push
lcall
stos
xchg
fsubs
fnstsw
pop
push
mov
lods
negl
or
xor
pmaxsw
pmaddwd
mov
movsl
in
push
jbe
fsubs
into
lcall
cli
ret
sbb
jle
jecxz
push
dec
movsb
stc
bound
push
out
int3
adc
lock
pop
pop
lcall
into
into
cli
out
inc
cs
inc
out
repnz
mov
popf
clc
mov
jge
inc
stc
shll
fisubl
imul
dec
mov
mov
jno
loope
jbe
jbe
mov
hlt
outsl
outsb
pop
jge
mov
or
xlat
sarb
ss
js
add
int
mov
mov
cmpsl
mov
mov
rol
push
fdiv
pop
js
out
add
repnz
xor
push
orb
or
jb
in
pop
and
std
in
pop
xchg
pop
std
push
mov
mov
push
imul
inc
jno
jmp
mov
fs
mov
and
fnsave
and
ret
add
push
mov
leave
xchg
aam
mov
mov
push
ljmp
dec
ret
int
sbb
outsl
or
or
imul
shlb
adc
add
pop
push
mov
sbb
mov
mov
fcoml
aas
mov
test
adc
lret
in
in
ja
pop
push
js
fucomip
aaa
xchg
ljmp
sbb
rclb
out
fidivrl
imul
cwtl
cmc
icebp
jp
cmp
stc
popa
and
dec
ja
jl
clc
daa
xor
vunpckhps
inc
push
mov
push
stos
inc
loop
lcall
dec
push
xchg
pop
dec
mov
jle
ficomps
cmp
andb
repnz
jbe
aaa
lock
mov
sub
sbb
ja
push
scas
mov
or
push
push
mov
pusha
pop
hlt
pushf
push
test
in
xor
mov
pop
ret
int
dec
jg
mov
lds
lgs
clc
loope
pop
dec
ljmp
into
xor
sbb
cmpsl
and
addr16
hlt
mov
gs
jne
xchg
in
cmp
cmp
cltd
fsub
and
pop
jb
mov
fildll
mov
pop
sub
setl
in
mov
sbb
push
outsl
in
cmp
gs
sub
shll
icebp
push
sahf
xor
lock
dec
dec
scas
sti
adc
inc
xchg
xor
fmuls
mov
sbb
jne
push
insb
cli
xchg
jne
cmp
repz
xor
loope
loopne
js
fildll
repnz
clc
test
dec
sub
cmp
cmp
push
cmp
icebp
jle
lcall
aas
cs
xchg
mov
and
lea
sbb
mov
mov
fisttpll
sbb
ror
mov
rorb
std
ja
int
push
sub
cld
or
lret
jle,pn
test
cltd
xor
pop
cmp
pop
push
jbe
pushf
lret
popf
jnp
adc
jg
lret
test
inc
inc
xor
mov
stos
movsl
push
or
sbb
push
jae
arpl
sub
je
xchg
aaa
mov
call
dec
cmc
mov
arpl
sar
inc
add
int3
cmpsb
inc
andl
ret
mov
stos
jns
dec
stc
pop
fwait
clc
std
xlat
pop
inc
js
cmp
sbb
into
test
xchg
in
movsb
sub
fcmovbe
mov
mov
or
gs
jle
pop
arpl
cmp
push
or
mov
pusha
mov
dec
leave
lock
lock
lds
or
popa
cwtl
sbb
dec
push
cmp
in
sbbl
dec
iret
daa
rcrl
and
push
add
jne
aaa
cmp
push
int
sbb
stos
cmpl
sbb
scas
call
dec
ljmp
ret
dec
stc
mov
mov
sbb
mov
inc
adc
in
hlt
ja
aad
out
stc
push
xor
out
mov
jnp
jne
jle
mov
and
mov
xchg
pop
mov
cld
aam
pop
push
mov
mov
or
jecxz
add
xchg
dec
dec
movsl
shl
adc
jne
aaa
mov
lds
xchg
xor
pusha
mov
ss
mov
loope
shrb
rcrb
sub
cmp
cmp
outsb
stos
jmp
shl
dec
mov
imul
daa
repnz
lcall
addr16
cli
in
mov
cmp
cltd
daa
fisubrs
mov
jg
shll
push
aaa
jg
cwtl
push
dec
lods
out
mov
mov
cmpsb
pop
add
sub
test
ret
push
inc
sub
fstl
push
push
fidivrs
push
lods
push
out
sbb
push
aad
mov
sub
xchg
es
repz
fcomps
clc
call
dec
pop
in
or
push
enter
lea
cmc
jl
ljmp
insl
dec
fistpl
addl
xchg
lahf
mov
pop
clc
pusha
pop
sbb
mov
sti
stos
out
lahf
mov
bound
cmpsb
hlt
cmc
mov
pop
xchg
fistpll
cmp
cli
imul
and
add
mov
inc
inc
icebp
jle
das
jns
je
hlt
cmp
sub
jne
sarb
mov
ret
in
xor
add
pop
aad
int3
stos
push
push
add
pop
inc
in
out
sbb
aaa
cmp
scas
cmpsb
adc
xchg
push
cmp
push
test
sbb
adc
mov
pop
push
jp
imul
test
enter
loop
loop
es
pop
pushf
or
je
mov
adc
mov
stos
cltd
push
loope
inc
adc
sbb
inc
xchg
ror
iret
ret
mov
hlt
jo
cli
das
xor
ja
jg
sbb
add
pop
inc
or
stc
dec
and
jnp
jno
push
jge
xchg
addr16
out
adc
push
xor
mov
mov
imul
xchg
iret
mov
mov
loope
and
ficoml
sbb
arpl
cmp
icebp
and
outsl
pusha
das
lea
sbb
mov
lods
arpl
mov
mov
loope
dec
xchg
and
mov
and
outsl
stc
mov
shr
mov
mov
cli
daa
mov
jae
xchg
xchg
push
xchg
adc
and
je
das
enter
imul
fwait
shr
out
cmp
xor
shr
stos
mov
mov
fmul
mov
mov
pop
jle
jmp
mov
daa
pop
cmp
test
lcall
jmp
inc
xor
or
jb
inc
cmp
stos
xlat
lods
inc
pop
aaa
es
notb
or
fwait
push
fs
leave
push
pop
int
cmp
inc
imul
dec
std
outsb
or
fwait
mov
stc
fistl
mov
ljmp
addr16
sub
rorl
jns
add
fidivrl
mov
daa
insl
lds
imul
add
pop
leave
scas
btc
mov
into
jbe
push
xchg
lds
cs
or
mov
push
sub
mov
aam
cmp
xor
cltd
ss
stc
adc
and
out
pushf
add
sub
push
sub
inc
popa
das
fbld
jne
add
sub
inc
lcall
pushf
mov
xchg
lret
pop
mov
cmc
cmp
out
enter
movsl
xlat
in
mov
mov
sub
stos
mov
imul
iret
ret
jb
or
push
movsb
stos
and
jne
mov
add
fs
push
mov
aaa
pop
into
fisttps
cmp
das
or
lods
aaa
cmpsb
sbbb
fisubrs
xor
repnz
adcl
mov
stos
lret
clc
idivl
outsl
out
mov
dec
mov
mov
sahf
jns
mov
mov
std
icebp
test
movsl
push
mov
push
jbe
pop
repz
cmovg
movb
in
ret
popa
xchg
scas
aad
test
lret
jnp
out
pop
cmpsl
adc
sbb
pop
cli
dec
adc
fidivs
jmp
lods
stos
scas
fcmove
push
std
and
jmp
inc
test
and
jnp
dec
loop
das
push
xchg
pop
in
into
xchg
mov
loopne
jbe
popf
ds
push
mov
cmp
xlat
jbe
test
mov
cmp
ljmp
cmp
bound
test
movsl
orb
fcomps
insb
cmpsl
fildl
outsl
mov
dec
xor
mov
mov
scas
iret
mov
sub
push
mov
idiv
loope
sar
pushf
lcall
test
sbb
jle
mov
xchg
jne
mov
and
mov
cmp
or
jle
cwtl
scas
jecxz
outsl
mov
cmp
popf
pop
or
and
sub
xchg
lcall
repz
sub
pop
cmp
xchg
fwait
and
mov
ds
push
inc
out
and
test
mov
xor
hlt
fisttpll
iret
arpl
hlt
dec
push
xchg
mov
movsb
mov
in
fs
sub
loope,pn
test
push
pop
test
and
into
cmpsb
rol
adc
aas
push
icebp
movsb
adc
fnstsw
push
inc
sbb
push
mov
adc
das
jnp
cmpsl
popf
pop
call
dec
pop
xlat
clc
xlat
push
xlat
sub
les
ljmp
inc
push
jp
xorb
cmpsb
adc
sub
popa
push
out
fcmovb
cmpsl
mov
mov
cmpsl
std
cmc
pop
and
nop
fisubrl
mov
icebp
bnd
inc
stc
mov
repnz
add
sqrtps
or
aas
push
push
mov
and
lods
mov
adc
popa
aad
and
jno
daa
cmp
push
outsl
cmc
jl
push
mov
imul
movsb
pop
rolb
or
inc
inc
add
add
cli
push
fnstcw
or
and
shr
sub
inc
sub
jg
gs
leave
ljmp
fistpll
sbb
sar
or
in
fcomi
push
daa
je
pop
push
lret
fisubrs
out
fstl
pop
popf
mov
cltd
ret
cli
cltd
aam
fs
xor
cld
int
aas
push
mov
jnp
jo
lret
sub
js
xchg
test
xchg
mov
jecxz
dec
mov
fwait
aas
in
es
pop
pop
ret
jno
das
cmp
adc
aaa
push
xchg
pop
imul
pop
test
jecxz
mov
xor
idivb
jg
pop
mov
or
dec
fwait
mov
fdivrl
bound
mov
push
hlt
sub
push
stc
sub
xor
lods
aas
lds
pop
movsb
in
mov
jns
inc
xchg
pop
sub
popl
mov
mov
jo
sbbl
xor
jns
int
xchg
sbb
mov
sub
pop
cltd
enter
mov
int
pop
cltd
shl
das
stc
out
xor
insb
and
xchg
movsb
into
inc
pop
inc
insb
push
icebp
dec
mov
adc
fwait
imul
pop
test
jne
nop
adc
out
pop
xchg
lods
sarb
add
scas
movlps
push
addr16
insl
xlat
insl
popf
pop
pop
lahf
sub
mov
es
mov
cs
mov
mov
outsl
xchg
adc
leave
xor
scas
je
and
push
out
push
push
enter
mov
pop
ret
cmp
mov
int3
lahf
xchg
icebp
or
or
mov
leave
adc
mov
mov
adc
mul
call
fs
out
bound
les
push
ljmp
icebp
fs
cmp
int
and
push
int
push
inc
iret
fists
adc
shlb
sub
pop
outsl
test
mov
es
sub
loope
inc
jge
loop
jg
pushf
scas
test
add
jb
push
mov
inc
repz
mov
jnp
mov
ja
sti
cmp
ret
xcrypt-ctr
cmpsl
push
jmp
stos
cmpsl
imul
push
inc
das
pop
sub
loopne
shrb
push
mov
inc
stc
loop
mov
in
aas
cli
mov
jb
mov
stos
xor
cmp
icebp
pop
xchg
fwait
mov
mov
jnp
pop
mov
inc
cli
mov
scas
stos
cltd
sbb
fnstenv
out
mov
in
adc
incb
out
fcomps
sbb
mov
outsl
xchg
sub
out
fstl
mov
cmp
pop
js
jle
scas
jg
sahf
outsb
mov
adc
jmp
jle
jno
mov
cmp
pop
pop
cmp
ficompl
push
mov
mov
int
push
shll
sbb
xlat
mov
test
or
pop
lahf
aas
pop
ficoms
add
sahf
add
das
pushl
imul
iret
pop
dec
adc
mov
push
push
mov
fs
sti
adc
xor
rcrl
jae
nop
arpl
add
lahf
ret
inc
nop
adc
push
inc
xchg
mov
icebp
push
push
lods
call
push
das
pushf
scas
hlt
mov
or
fstpl
cmp
push
repnz
ret
push
scas
clc
fsubl
and
mov
stos
popf
xchg
mov
dec
mov
dec
add
jge
pop
int
popf
pop
mov
xor
jb
dec
popf
and
mov
mov
and
adc
cli
xchg
jmp
pop
sbb
dec
jge
lea
jns
pop
stos
xchg
and
adc
and
mov
dec
pop
mov
and
enter
xor
cli
scas
iret
pop
dec
imul
mov
jmp
mov
test
pop
push
jle
jnp
je
inc
lea
mov
inc
rorl
cmp
mov
pop
adc
fcompl
cmp
inc
dec
push
pop
jp
in
dec
dec
dec
int
push
icebp
iret
lock
repz
push
ficoml
mov
stos
add
xor
mov
dec
mov
mov
cld
sbb
scas
in
inc
xor
enter
push
jno
sub
jmp
lods
xchg
ljmp
mov
push
mov
test
xor
out
dec
fadds
pop
orb
imul
sti
pop
lods
rorb
xchg
xchg
push
in
aad
mov
sub
lahf
push
inc
push
daa
xchg
cmc
pop
pop
cltd
jbe
cld
sub
dec
loop
fbld
mov
jle
scas
mov
scas
mov
dec
out
gs
mov
scas
out
push
test
divl
pop
fdivrs
shl
lods
sub
jecxz
jl
mov
mov
in
daa
outsb
lahf
cld
aad
fwait
lret
in
dec
sbb
sub
or
aaa
loop
sti
jmp
dec
pushw
jne
sbb
out
pop
imul
sub
fdivs
add
cmc
and
xchg
les
clc
mov
and
adc
int3
stc
ret
cltd
pop
mov
jno
rclb
into
shrl
inc
daa
adc
out
xchg
xor
push
or
dec
add
fldl
gs
fcmove
or
cmp
cltd
sub
mov
sbb
or
mov
enter
jmp
ret
jle
jmp
push
sub
add
cmp
mov
inc
mov
mov
mov
add
dec
popf
pop
mov
mov
shll
adc
or
inc
shll
jne
adc
push
xchg
dec
out
lret
mov
loope
mov
mov
popf
out
and
xor
stos
xchg
imul
xchg
xchg
mov
pushf
add
or
xor
dec
pop
mov
cmc
xchg
pop
sti
sbb
int
adc
aas
leave
jmp
xchg
pop
mov
les
push
push
mov
pop
push
jae
mov
lock
jl
imul
sub
xchg
imul
shll
daa
aaa
in
scas
into
dec
add
stc
sbb
cltd
sahf
movsb
or
pop
jo
sarl
test
pushf
mov
mov
shll
cmpsl
rcl
icebp
in
sbb
fldl
sub
push
add
mov
imul
jge
hlt
mov
pop
sub
xor
mov
pop
sbb
fbstp
cmp
xchg
outsl
mov
dec
subb
mov
rcrb
mov
das
cmp
mov
cmp
jl
xchg
sahf
lock
gs
jo
inc
dec
cmp
jp
dec
imul
xchg
imul
cmp
imul
push
inc
out
inc
fistpl
fistps
mov
push
sbb
mov
ja
mov
loope
das
scas
mov
enter
cmpsl
pop
stos
gs
push
xchg
dec
daa
jne
fnstcw
aam
cmp
jae
iret
dec
enter
pop
mov
push
fimuls
cmc
fs
cmp
push
into
xor
xchg
add
mov
pop
in
push
test
lcall
jmp
fwait
js
lock
pushf
sub
sub
roll
mov
sbb
or
push
and
divl
sub
cmc
lea
test
loopne
mov
xor
cmp
loope
ret
ret
push
jno
push
test
mov
adc
out
out
jne
les
sub
stos
loope
push
aas
xchg
xchg
lock
jl
ja
cmp
inc
mov
je
sub
fwait
sub
lea
add
mov
scas
call
inc
fisttpll
divb
sbbb
movsb
das
lcall
loop
out
cld
xchg
cmp
bound
inc
mov
repnz
jg
mov
mov
or
lea
mov
pop
ds
test
sbb
outsl
aaa
pop
and
test
xchg
pop
fldenv
dec
inc
pmaxub
xchg
adc
xchg
lahf
jp
jmp
loopne
pop
aad
adc
loope
gs
adc
pushf
ret
cld
shrb
aaa
jb
adcb
out
fwait
sub
lds
inc
and
mov
cli
xchg
mov
cltd
popa
pop
or
jmp
sti
lods
mov
jecxz
sub
aas
cmpsb
xchg
stos
iret
xor
or
outsb
sub
lea
imul
scas
mov
ret
xor
xchg
adc
mov
loop
xchg
xor
cli
sahf
mov
movsl
imul
aad
inc
stos
mov
push
pop
xchg
lea
push
sub
pop
jmp
xor
push
jg
mov
jne
movsl
sub
jno
mov
lea
aaa
push
outsl
sahf
sbb
lret
add
jno
inc
lret
push
mov
inc
add
dec
mov
ds
in
mov
sub
movsl
outsl
jno
mov
xchg
addr16
mov
stos
fisttps
and
bound
stc
enter
lret
xor
frstor
lods
pop
sbb
mov
bound
dec
inc
pop
xchg
push
icebp
pop
int3
gs
push
sbb
clc
push
mov
je
aas
jp
pop
xor
int
lahf
adc
cltd
lods
insb
outsl
ja
cltd
ljmp
std
inc
sti
jmp
mov
scas
mov
sub
loopne
mov
loope
popa
out
lcall
loop
stos
push
and
mov
mov
dec
sarl
icebp
pop
pop
call
insl
movsb
pop
cli
ret
jle
int3
in
aas
jp
sbb
scas
dec
dec
jmp
mov
xchg
popf
push
fnstcw
out
hlt
ds
das
popa
jge
or
outsl
mov
lock
gs
push
cwtl
sbb
mov
adc
fldcw
js
test
dec
xchg
sub
out
fsin
sbbb
vsubps
filds
or
enter
mov
mov
push
mov
xor
fcomps
sub
mov
cmpsb
or
popf
aas
insl
into
sub
shrl
adc
imul
sbb
mov
dec
mov
jecxz
test
lds
sarl
int
sub
rcl
mov
cmc
js
in
inc
insb
push
mov
sub
in
shl
in
nop
mov
dec
sbb
iret
xor
outsl
ret
or
in
mov
daa
je
jbe
adc
cmp
adc
popf
int3
mov
ljmp
push
fwait
loope
push
inc
sahf
lcall
push
das
loop
sbb
popa
rorl
call
adc
aas
fimuls
mov
mov
in
adc
in
pop
fnstenv
xchg
jle
pop
jb
pop
mov
mov
xchg
sbb
sub
jnp
cmpsb
mov
inc
or
leave
outsb
adc
popl
fistps
addr16
push
cltd
sahf
enter
fwait
insb
stos
lahf
jp
stos
inc
or
and
mov
xor
inc
out
add
sub
and
or
cli
js
mov
je
cmpsl
popf
lcall
xor
stos
in
push
mov
mov
or
inc
push
push
jae
push
testl
fwait
adc
or
aaa
pop
mov
mov
cmp
pop
mov
mov
inc
fchs
cmp
or
pop
jnp
das
shrl
aaa
scas
jmp
pop
addl
or
aam
inc
and
mov
xchg
cmp
pop
or
sbb
jg
imul
lcall
ret
mov
xchg
ja
ds
fwait
movb
xchg
xchg
call
inc
inc
idiv
adc
dec
ror
sbb
jl
jne
mov
insl
mov
inc
jnp
mov
cmp
adc
mov
mov
clc
add
push
mov
jne
mov
push
pop
fdivrs
test
jg
sub
idivb
sti
jne
popf
stc
mov
or
jl
mov
cmp
adc
sub
lds
fimuls
enter
jg
aam
inc
pop
sarl
clc
mov
aad
pop
push
jbe
outsb
mov
int
popa
mov
mov
rorb
cmp
outsb
jle
sub
lds
pop
lahf
push
jmp
mov
jo
mov
arpl
cltd
adc
dec
out
int
dec
lods
cmp
adc
xor
push
inc
and
xchg
pop
pushf
cmp
push
xchg
pushf
jp
int3
test
sub
stos
les
int
std
pop
xor
pop
mov
lcall
test
pop
mul
fwait
stos
pop
mov
inc
push
push
mov
arpl
in
insl
and
lock
jp
imul
movsl
call
xchg
pop
mov
push
insl
xchg
je
pop
sub
fwait
pop
ja
in
sti
ud0
jg
outsb
loope
rcr
pop
jecxz
in
mov
pop
cmp
mov
mov
stos
adc
add
sbb
push
xlat
cmp
jbe
movsb
cmpsb
inc
and
fadds
in
and
sub
sub
outsl
add
push
movl
iret
loop
xchg
dec
int
xchg
mov
aad
stc
scas
lret
fcmovnb
jecxz
pop
test
fisubrs
xlat
mov
pusha
mov
dec
repnz
xchg
fcomi
in
divb
mov
ljmp
or
out
test
inc
je
clc
cltd
mov
arpl
shrl
les
mov
jae
xchg
popf
out
push
add
iret
jae
push
jbe
jmp
gs
fildl
dec
add
clc
repnz
loope
nop
outsb
aas
inc
jg
add
xchg
jp
jl
push
jbe
fsubs
or
pop
ret
arpl
cli
sbb
mov
jnp
sbb
pop
mov
test
icebp
ret
outsb
fs
xor
imul
in
dec
lea
add
rcr
mov
leave
adc
add
outsb
popa
punpcklbw
cwtl
test
mov
rcll
loope
stos
sbb
push
lds
in
fidivl
ljmp
scas
sbb
push
scas
mov
pop
ficoml
lods
test
cli
gs
sbb
jg
jnp
xor
xchg
sub
sub
inc
lea
xlat
ret
xchg
xor
dec
scas
stos
clc
sbb
pop
adc
dec
mov
fs
outsl
jp
nop
gs
mov
pushf
push
push
jmp
adc
cmp
sbb
pop
call
fcomps
mov
test
dec
pop
pop
pop
pop
mov
mov
out
fldenv
fs
fmull
in
insb
push
leave
lahf
cmpsb
xchg
mov
mov
js
test
pop
push
push
sbb
pop
stc
sbb
insb
or
test
cli
call
push
sub
in
push
push
adc
mov
xchg
jecxz,pn
movsb
push
in
in
scas
xor
ds
icebp
iret
mov
arpl
push
jg
add
sbb
pop
in
shrl
test
loop
push
mov
rorl
loop
mov
imul
or
pop
xchg
jbe
dec
rol
push
repnz
dec
iret
fadds
cmp
xor
sbb
pop
jnp
xchg
adc
divb
stc
or
mov
sub
arpl
js
sub
gs
inc
xlat
stos
ljmp
ficompl
adc
aam
mov
and
or
push
fsubrl
pushf
roll
pop
stos
jns
push
pop
adc
mov
jb
xchg
ret
repnz
sti
mov
pop
cmp
iret
imul
dec
iret
pushf
in
inc
mov
clc
popa
enter
repnz
imul
insl
lea
inc
in
scas
fsubl
mov
insb
sahf
mov
mov
jg
call
and
int3
cmp
ds
stos
pop
push
rcr
push
xchg
jl
and
pop
push
fcoms
stos
pop
push
imul
in
xor
in
dec
int3
negl
lds
sub
clc
and
pop
fldenv
jle
cmp
jmp
sub
sub
xor
mov
xchg
or
mov
pop
xor
ret
mov
push
or
aas
enter
xor
jge
xchg
push
sub
adc
mov
cld
ljmp
pop
int3
in
mov
mov
jmp
inc
pop
pushf
cmc
int3
call
jg
cmc
push
mov
sti
int3
je
movsl
add
repz
lcall
mov
mov
jbe
xchg
cwtl
adc
or
cli
push
enter
shll
mov
mov
mov
mov
inc
into
stos
jp
xchg
movsb
pop
jge
or
jecxz
sub
and
xchg
xor
out
dec
daa
outsl
xchg
rcll
or
xchg
cmp
push
fs
jge
je
mov
add
lds
mov
xchg
xlat
mov
xor
imul
jle
fcoms
sub
out
pop
iret
pushf
mov
aaa
scas
mov
je
dec
cmp
pop
cmp
xchg
sarb
mov
xor
divb
dec
mov
push
subl
inc
mov
ds
mov
push
insb
cmpsb
jo
ds
xchg
push
int3
in
xor
dec
int3
movb
hlt
ljmp
rolb
test
inc
idiv
test
stc
inc
aaa
out
pop
xchg
mov
lcall
je
mov
mov
std
jns
xchg
sahf
mov
or
test
mov
enter
xor
in
mov
add
arpl
into
pop
ljmp
push
xor
les
cli
pop
and
cltd
test
mov
xor
fwait
inc
jecxz
lds
and
daa
push
out
mov
fwait
lret
lcall
lods
insb
push
sbb
addr16
sbbl
fldcw
jae
leave
xor
outsb
in
jb
call
push
lret
mov
or
jns
mov
test
leave
mov
mov
sub
cld
xchg
jg
hlt
or
cmp
cltd
aad
bound
insb
jecxz
ja
movsb
mov
lds
mov
arpl
divb
out
mov
daa
stc
loopne
lods
cwtl
mov
push
test
fsubr
fucomi
jb
and
push
xor
into
arpl
mov
sbb
mov
fistpll
xchg
mov
push
addr16
sbb
push
cmp
fdivs
js
xchg
jg
nop
xor
push
loopne
cmp
js
mov
mov
dec
jmp
addr16
jp
insb
cwtl
or
aad
test
xor
add
test
lahf
xor
lods
xor
call
rol
push
push
dec
xchg
mov
jns
jae
jecxz
repnz
sub
xchg
sub
inc
arpl
fidivl
in
into
repz
jno
mov
scas
imul
xor
aam
jle
push
inc
dec
lcall
xchg
test
mov
addr16
ret
aam
pop
lea
jge
or
jae
xchg
aas
push
mov
test
fmuls
fs
mov
ja
or
push
mov
xlat
notl
into
popa
sbb
xor
pop
imul
pop
mov
mov
jecxz
loop
scas
pusha
adc
ret
add
sub
je
lret
pop
mov
fwait
les
mov
mov
les
adc
mov
xlat
pop
mov
dec
mov
cmp
fldenv
jne
push
mov
pusha
cmp
out
sbb
or
mov
mov
and
mov
mov
setp
ds
ss
int3
xchg
cwtl
xorb
pop
imul
cmp
pop
pop
add
push
repz
mov
mov
testb
pop
test
cld
adcb
nop
cmp
cltd
push
inc
shll
or
iret
mov
insl
mov
xchg
bound
jmp
mull
pop
daa
jno
rcl
popf
aas
lds
cld
js
ja
mov
add
movsl
aaa
cmp
out
xchg
sbb
pop
pop
xchg
push
fsubl
cli
leave
pop
push
ljmp
cli
push
js
insb
push
out
std
pop
push
xor
mov
jns
hlt
cs
pop
es
push
call
inc
nop
add
fisubs
in
cmp
fsubrl
xchg
inc
xor
loop
popa
mov
out
popa
cmp
fbstp
adc
ret
mov
dec
mov
dec
daa
adc
popf
xchg
mov
jg
loop
in
sub
pop
stc
cmpb
mov
mov
push
sbb
not
shr
dec
out
ja
cmp
sbb
dec
dec
jg
subl
push
mov
out
xchg
mov
push
push
test
fsts
jo
int
cwtl
pop
pop
les
lahf
dec
hlt
fcomps
out
scas
sbb
ja
ds
mov
insl
jg
cmc
rorl
in
pop
addr16
push
lods
cmp
fdivrl
mov
outsl
mov
les
call
xor
les
rorl
rolb
dec
fldl
popf
dec
or
inc
int
ds
imul
mov
jo
ficoms
or
push
xchg
jge
orl
jmp
lods
inc
and
cmpsl
xlat
fldcw
in
stc
rcll
sub
nop
xor
sbb
mov
fdivl
scas
inc
dec
ljmp
daa
imul
mov
xor
dec
pop
push
adc
out
fstpl
dec
cmc
lods
int3
and
sub
mov
push
mov
inc
je
xchg
mov
aam
jnp
dec
pop
lret
mov
pop
lods
fwait
push
repz
cld
pop
sbbb
les
cltd
mov
frstor
lea
ret
movsl
stos
jmp
negl
mov
les
dec
adc
mov
mov
push
pop
bound
dec
mov
or
adc
xor
inc
sub
test
cltd
es
imul
fcompl
lods
test
dec
mov
pop
jmp
sub
hlt
repz
sbb
mov
jb
loope
inc
mov
loopne
inc
xchg
cmp
stos
adc
jae
xlat
push
nop
pop
lcall
aam
ljmp
scas
xchg
mov
xchg
cmc
andb
and
pop
jecxz
push
sbb
out
mov
xchg
mov
out
inc
push
push
pushf
jl
jge
std
xor
sbb
les
fbstp
pop
std
movsb
sub
not
in
cmp
daa
push
fistpl
fwait
pushf
mov
into
pop
push
mov
push
test
xchg
mov
and
xchg
in
jno
pop
js
lahf
mov
push
subb
clc
lods
divl
cmp
cmp
fs
aad
ss
and
inc
mov
loope
mov
in
sbb
jp
sti
mov
cld
xchg
xor
insl
cmp
adc
mov
push
sahf
jle
xor
pop
jns
inc
fcomip
pop
pushf
jmp
push
iret
lock
movsl
mov
push
sub
rorb
jle
stos
shlb
mov
jg
in
je
enter
inc
pop
jge
test
outsb
push
cltd
inc
or
stos
mov
jnp
push
xchg
stos
jg
mov
lahf
inc
dec
test
push
or
jb
scas
scas
jae
jno
push
or
inc
cmp
out
sti
imul
xchg
fidivrl
jle
lcall
data16
jge
jnp
jg
lcall
dec
mov
pop
aad
add
out
les
mov
jg
or
fiadds
push
pop
fwait
imul
hlt
rcrb
push
push
mov
fdiv
aas
inc
nop
sub
fadd
adc
add
arpl
adc
mov
push
pusha
or
sahf
int3
xlat
jne
std
call
pop
imul
cltd
xor
shrb
movsl
pop
jnp
out
bswap
mov
jg
xchg
xchg
pop
pop
aam
pop
lcall
jle
getsec
cli
mov
sub
pop
int3
lock
pop
pop
xor
test
pop
in
js
shrb
das
ret
cmp
test
ss
push
nopl
imul
lret
stos
push
enter
je
repnz
pop
inc
stc
scas
int3
dec
adc
lds
cmc
js
xor
das
pop
adc
out
sbb
stos
loop
dec
adcl
outsl
mov
inc
lcall
push
repnz
mov
loope
dec
jg
inc
mov
stos
ss
dec
aad
stos
jle
mov
pop
inc
int3
cmp
xchg
inc
pop
cmp
fbld
xor
lock
in
in
or
in
fisttpll
cmp
and
inc
in
into
cmc
jne
shll
sub
inc
xor
out
cmp
test
adc
push
and
or
imul
lret
dec
sub
mov
cltd
mov
ljmp
into
pop
pop
mov
rorb
js
or
scas
or
lock
sub
lahf
std
jmp
mov
jo
enter
cli
std
scas
inc
jp
cs
jnp
xor
call
or
test
cmp
imulb
loopne
or
lahf
sahf
mov
jle
mov
pop
lcall
sarb
outsl
mov
insl
int3
cmp
movsl
jecxz
jb
sub
gs
dec
imul
pop
inc
mov
fbstp
jmp
scas
dec
aad
aam
jbe
repz
jp
fs
pop
icebp
enter
sub
sub
cmp
push
ret
xlat
pop
pop
pop
sub
or
and
aas
les
pop
cmc
xor
sub
aas
xor
fnstenv
or
pop
ret
loopne
lahf
jbe
in
xchg
fwait
pop
sbb
in
decl
pop
xchg
cmp
call
adc
adc
lds
jp
cli
dec
pop
jmp
add
sub
addb
pop
call
inc
rcl
das
jmp
fwait
jge
fidivrs
jl
or
arpl
outsb
cmp
subl
and
mov
push
lock
xchg
test
jb
data16
inc
call
jmp
cmp
add
bound
mov
sub
mov
pop
mov
sub
popa
out
lret
mov
sub
xchg
lcall
aas
xor
lods
xor
or
movsw
mov
cmp
loope
mov
scas
lods
xchg
je
and
clc
adc
fiadds
stos
outsl
jg
repz
loop
push
pandn
data16
xchg
daa
xlat
pop
or
add
insl
out
or
jns
sbb
push
add
jne
xchg
insb
lahf
push
outsl
lret
dec
in
je
out
cmp
inc
fistl
sub
stos
lods
inc
xchg
xchg
mov
xor
sub
xchg
fidivrl
jp
mov
out
mov
adc
fisttpl
outsb
repz
cmc
fbstp
scas
shll
shrb
adc
repz
inc
mov
sbb
jl
jge
pop
jl
mov
pop
xchg
mov
imull
leave
push
mov
rclb
xchg
jno
push
loopne
jno
add
lret
clc
sub
dec
mov
push
pop
jp
aaa
lea
mov
cmp
lret
push
xchg
mov
mov
fists
stos
jo
leave
dec
or
xchg
and
out
cmp
je
mov
in
aaa
mov
loop
out
jne
inc
fs
cs
push
inc
sti
ja
insb
or
jae
push
mov
jns
pop
pop
xchg
sub
push
das
incl
cmpsl
or
lods
or
add
cmp
imul
dec
imul
jno
mov
cld
repnz
jno
mov
sahf
mov
xchg
push
insb
xor
mov
dec
in
roll
and
adcb
fwait
push
push
dec
jp
sub
mov
enter
pusha
bound
scas
clc
lret
test
inc
in
pop
cwtl
dec
pusha
fdiv
cli
lret
fbstp
loope
dec
adc
outsb
cmc
xchg
push
add
lock
xor
sahf
mov
pop
aad
cld
ret
jg
dec
scas
add
pop
lds
stos
jo
push
shl
sbb
xor
add
sub
cs
inc
and
or
out
imul
jmp
mov
out
jmp
fdivrs
cmp
inc
and
sub
dec
sub
cmc
loopne
dec
jo
icebp
pop
jns
mov
push
rep
jl
int3
gs
cmp
repz
pop
mov
push
sub
lds
sti
mov
je
push
adc
jb
in
rorb
lahf
add
fidivl
std
sbb
stos
sahf
cmp
xchg
adc
jecxz
mov
stos
fidivs
stos
jne
or
xor
leave
adc
int
push
lcall
push
repz
imul
es
imul
mov
lahf
movsl
icebp
ret
mov
test
leave
cs
repz
mov
adc
pop
xor
cmp
lock
enter
xor
jmp
lea
jmp
popa
or
pop
jmp
test
aas
call
scas
pop
popf
or
push
pusha
mov
xlat
fidivs
std
or
sub
andb
lock
clc
psubd
jbe
mov
or
leave
cmp
jge
dec
jo
adc
inc
insl
jae
xor
mov
inc
popa
push
add
lods
dec
ret
cmp
ja
push
in
test
popa
aaa
xchg
mov
repnz
sbb
test
add
mov
and
test
sbb
lret
pop
in
call
mov
or
jp
nop
mov
xor
fstp
cmpl
imul
or
pop
stos
jmp
mov
mov
push
icebp
pop
jg
popf
repz
xchg
stc
pop
scas
cmpb
rcll
mov
mov
pop
jecxz
cmpsl
mov
nop
rcll
xlat
xchg
mov
cmp
in
popf
jmp
sub
lahf
out
stos
fsub
frstor
push
mov
cmp
int3
jg
stc
and
sti
cwtl
into
inc
addr16
xchg
cld
or
pop
pop
inc
out
mov
dec
xchg
daa
fcomp
aam
pop
je
ficompl
pop
mov
jns
cmp
adc
lea
ret
mov
sub
mov
pop
jns
fisttps
and
insl
sbb
popf
add
push
daa
loop
mov
ret
orl
insb
dec
jb
repnz
push
lret
xchg
out
xor
lcall
lcall
xlat
mov
push
mov
inc
mov
xchg
fsubrl
jmp
in
or
dec
xor
popf
dec
push
mov
mov
jmp
ljmp
dec
lea
sti
rcl
and
sub
icebp
push
popf
arpl
loopne
sbb
jo
mov
cmp
dec
mov
mov
leave
lea
repz
or
jns
add
sub
xor
dec
ret
idivl
mov
mov
lods
dec
mov
mov
daa
jmp
inc
stos
mov
dec
pop
adc
inc
test
inc
mull
jne
add
in
and
ljmp
les
call
stos
mov
lahf
jle
pop
pop
imul
mov
xor
insl
out
push
adc
sub
and
add
mov
mov
mov
mov
cltd
push
pop
icebp
mov
mov
push
jge
jle
sti
mov
pop
adc
loope,pn
cmp
ret
lds
ret
out
out
push
inc
nop
and
pop
rcr
stc
push
out
icebp
sub
xchg
adc
jp
cmp
pop
imul
test
je
cli
mov
lods
js
cmp
test
test
cs
jge
push
xchg
fdecstp
mov
les
lods
in
subb
out
out
and
and
mov
mov
stos
xor
add
imul
inc
adc
bound
push
decb
cmp
jbe
dec
lock
dec
xchg
inc
sub
shrl
xchg
cmp
lret
dec
fwait
je
arpl
and
fs
int3
jmp
sbb
roll
popf
pop
scas
stos
add
cmp
lahf
stc
pop
dec
mov
into
sbb
push
jmp
add
cmp
jle
jbe
enter
loopne
pop
and
xorl
pop
repnz
xchg
cmp
xchg
mov
andl
adc
push
out
jae
mov
xorl
data16
or
xchg
lcall
ja
lret
xchg
movaps
cli
pop
ret
add
dec
movsl
cltd
aad
inc
push
les
jge
cmp
pop
and
cltd
push
pop
out
xchg
stos
xchg
cmc
xchg
mov
rolb
cmp
xor
cmp
pop
ret
fwait
sbb
stos
jne
jne
movsl
into
push
lahf
pop
and
pop
adc
and
sti
adc
add
mov
outsb
scas
xchg
jbe
bound
femms
cwtl
jecxz
push
sub
arpl
sub
shlb
mov
cwtl
jae
or
adc
not
sub
inc
mov
xlat
inc
sti
lret
adc
fstps
paddusb
outsb
mull
aad
sbb
sti
fldcw
aaa
fiadds
cld
mov
cmpl
mov
dec
pop
ja
jno
xchg
enter
test
lahf
xchg
sub
xor
popa
mov
xor
pushw
or
rcr
scas
arpl
insl
inc
push
xor
mov
lock
ljmp
inc
lret
lcall
or
test
cmp
mov
insl
dec
jle
fs
mov
xlat
sbbb
cs
sub
jle
inc
enter
inc
icebp
mov
testb
outsb
xchg
dec
out
mov
add
mov
mov
dec
ljmp
ret
shlb
ret
loope
mov
xor
push
mov
jg
int3
test
movsb
xorb
test
and
fldenv
adc
push
jbe
sarb
mov
pop
icebp
montmul
cmpsb
xor
hlt
mov
sub
pop
mov
insb
add
mov
sbb
jecxz
or
ret
aas
xlat
dec
fdiv
popf
lds
xchg
icebp
mov
cltd
xor
xor
sub
aas
inc
out
cmp
jmp
fwait
loope
push
cmp
jns
scas
cli
mov
es
mov
rcrb
bound
sub
das
dec
jne
cld
xchg
sub
in
pop
in
negl
rcrl
outsl
cmp
scas
arpl
or
das
pop
fistpll
pop
sub
and
adcl
sub
mov
mov
adc
popa
and
or
dec
lret
sub
push
jg
lret
in
cmc
cmp
jnp
aam
and
and
imul
add
mov
xor
pop
je
add
rorl
push
pop
mov
iret
lret
aam
dec
push
mov
fucomip
mov
sti
and
test
xchg
xchg
cmpsl
xor
cmpsb
mov
rcr
jmp
pushf
mov
push
mov
bound
xchg
push
in
stos
stos
sbb
pop
pop
xor
dec
arpl
pop
xchg
mov
sub
jno
xchg
and
fadd
xor
lret
fcoms
cmp
std
lods
pop
cs
lret
mov
insl
mov
adc
cld
scas
in
xor
in
pushf
dec
and
lock
sbb
fxrstor
dec
divl
out
icebp
lret
pop
mov
fwait
jno
cwtl
ret
pop
test
rcl
int3
dec
lds
adc
mov
mov
insl
addr16
dec
out
mov
rcrl
int3
mov
ret
pop
cmp
push
inc
push
xchg
jo
jecxz
dec
out
out
es
pop
mov
mov
leave
sub
jmp
sbb
dec
repnz
or
jl
divb
ss
movl
mov
mov
fstp
ficoms
sub
ds
inc
data16
xchg
sbb
mov
cmp
fdivs
test
jb
mov
pop
sub
lds
cmp
adc
xchg
inc
int
dec
mov
xchg
adc
inc
lods
sub
imul
push
pop
lcall
decb
out
sub
ds
in
iret
cmpsb
xchg
lret
hlt
out
dec
mov
iret
and
shlb
xchg
cmp
std
sub
int
outsl
or
repnz
xor
push
dec
imul
mov
mov
inc
divb
inc
xchg
orl
fbstp
fdivrs
arpl
insl
dec
popf
jnp
sub
xor
cmp
stos
jp
xchg
into
or
cli
into
or
rep
out
mov
jge
std
adcl
popa
stos
jmp
int
and
cmp
sbb
repz
or
decl
xchg
mov
mov
and
sti
xor
negb
jmp
inc
jg
add
cmp
fdivs
dec
cwtl
sahf
pushf
test
shlb
jl
cmpl
dec
loop
xor
fcmovne
jg
pop
or
dec
repnz
add
in
push
mov
orb
fnsave
inc
push
jmp
adc
or
mov
xchg
arpl
mov
cli
push
int3
and
movsl
inc
lds
arpl
shlb
in
mov
mov
dec
imul
push
lcall
stos
push
movb
sub
lea
cli
xor
adc
push
pop
pop
test
aaa
ja
mov
lods
and
mov
cmovae
xor
mov
sub
pop
push
push
jnp
rcl
fdivrl
push
lret
sub
shr
add
mov
dec
andl
shl
push
stos
test
and
stos
adc
or
cs
jecxz
ss
xchg
dec
js
ljmp
push
in
movq
sbb
sar
push
add
pushf
imul
inc
jg
sbb
stos
inc
fstl
add
and
mov
or
lret
inc
dec
pusha
nop
jecxz
jl
mov
das
lods
lock
sub
sar
lods
dec
mov
mov
mov
mov
sahf
gs
pop
into
cmp
out
andb
fists
sbbl
xchg
int3
pop
lods
les
out
ss
shl
inc
divps
pop
push
jg
outsl
jbe
pop
popa
mov
dec
ja
repnz
hlt
cmp
xchg
mov
fidivs
imul
sbb
icebp
mov
xor
scas
jecxz
aad
dec
push
inc
or
stos
stos
or
jb
scas
add
fcmovne
sbb
pop
mulb
addl
jl
jne
int3
and
loopne
clc
lret
mov
mov
scas
sub
sbb
out
cmp
dec
test
daa
clc
sub
mov
jge
and
sbb
lret
bnd
xacquire
push
adc
jecxz
cmp
jnp
sbb
push
cs
fsub
idivl
push
mov
out
orb
loop
jmp
sbb
mov
cmp
and
and
fimuls
scas
mov
data16
dec
sarl
add
ret
or
sub
mov
cmpsb
add
mov
insb
dec
push
leave
ljmp
sti
inc
xlat
xchg
pop
xor
mov
clc
or
add
jne
daa
mov
jnp
push
out
push
fwait
push
sub
mov
jg
rcr
sbbl
das
dec
mov
out
stos
dec
repnz
loop
divl
push
mov
scas
incb
pop
pop
xchg
inc
outsl
inc
fidivrs
mov
sbb
sar
inc
arpl
rcrl
inc
das
aad
mov
loopne
pusha
cltd
pshufw
shll
xchg
jns
pop
fldcw
arpl
fldl
shlb
scas
frstor
push
dec
lcall
ss
inc
ljmp
clc
cwtl
cmp
add
aas
mov
or
mov
das
mov
cwtl
jno
mov
mov
ds
jae
xor
pop
into
test
pop
jo
test
dec
ffree
sbb
and
mov
jne
orl
out
sub
dec
vdivsd
pushf
mov
push
pop
mov
into
in
xor
jo,pt
fisubl
loopne
hlt
hlt
and
cs
pop
ljmp
es
xchg
cli
or
push
das
fbld
cmp
cs
ret
loope
fdivl
rcrb
mov
in
aaa
mov
lea
pop
into
xchg
push
ds
pop
xchg
xor
sub
xor
addl
sbbl
sarl
das
scas
adc
mov
mov
aas
mov
imul
xchg
scas
sahf
mov
negl
stos
or
cmp
gs
fadd
mov
addr16
pushf
push
mov
pusha
cmp
push
adc
push
mov
mov
mov
std
mov
adc
popa
mov
xor
repnz
push
mov
or
pop
jo
sbb
test
cli
xor
stc
jo
adc
xor
push
pop
dec
pop
adc
imul
push
lcall
and
adc
sbb
or
mov
stos
cmp
out
in
call
mov
cmp
lret
sbb
nop
sbb
in
inc
out
stc
dec
or
out
repnz
adc
push
lods
jns
add
lods
into
xchg
or
fwait
sti
mov
call
imul
mov
outsl
xchg
mov
out
and
push
int
and
mov
or
xchg
push
fdivrl
into
pop
xchg
inc
xchg
dec
mov
cmp
mov
nop
jecxz
fsubl
dec
mov
mov
dec
loopne
int3
fs
cmp
push
mov
xchg
mov
lds
mov
shlb
adc
pop
cmc
int3
mov
inc
pop
fs
adc
decl
push
dec
lahf
aas
pop
mov
in
icebp
or
xchg
out
ja
out
jl
pop
out
xchg
mov
mov
int
xchg
out
lea
std
into
popf
mov
imul
fidivrl
sbb
test
pop
cwtl
jae
nop
fiadds
cmp
jecxz
push
push
lahf
jns
scas
mov
outsb
cmp
xchg
push
cmp
mov
fimuls
sub
mov
inc
scas
rcrb
push
jmp
mov
ljmp
sarb
and
pop
adc
test
sbb
xor
mov
shll
imul
cmc
push
sbb
pop
inc
mov
lahf
xor
xor
mov
adc
xchg
adc
xchg
xor
sar
into
push
push
xor
sbb
fnstenv
sbb
jne
fnsave
dec
gs
mov
add
je
fstl
cmp
push
lods
out
rorb
fdivrs
mov
aam
cmp
aam
mov
jecxz
mov
inc
mov
xchg
cli
jge
nopl
mov
xor
stos
inc
bound
js
pusha
xchg
cmp
fimuls
dec
cs
jne
cmp
loopne
movsb
daa
aam
aam
or
sbb
cmp
pop
or
lea
adc
fisubrl
std
add
mov
pop
outsb
xor
jmp
outsb
lods
jmp
push
mov
xchg
jle
ror
rcr
test
stos
stos
rep
adc
xchg
jne
pop
out
xchg
rclb
sub
loope
stos
xchg
lea
cli
xchg
xor
xchg
mov
and
adc
dec
mov
nop
fbstp
inc
pop
notl
lods
fsts
hlt
push
jecxz
mov
scas
lret
popf
cmp
lea
dec
and
in
fs
dec
lahf
es
mov
push
fidivrs
cmp
jb
xor
stos
packssdw
jmp
sarl
loope
and
adc
shrd
pop
xchg
push
push
les
dec
or
xchg
test
scas
jge
pop
test
cmpsb
xor
xchg
inc
or
and
pop
rorl
mov
loope
imul
dec
scas
das
xor
inc
orl
shlb
lcall
in
imul
dec
dec
dec
lds
jp
sub
arpl
cmpsl
push
sbb
aam
test
cmp
xor
xchg
fiaddl
gs
adc
dec
aaa
xor
rcr
xchg
fimuls
jle
lea
dec
mov
mov
test
jl
jg
aas
and
scas
push
fnstcw
loope
and
mov
icebp
out
add
loop
mov
jmp
shl
shlb
xor
repz
pop
mov
push
in
cmpsb
test
adc
out
push
sub
jle
sbb
and
sbbl
lock
xor
jp
scas
pop
xchg
mov
push
dec
in
cmpsb
jl
mov
pop
adc
pop
fs
or
mov
xor
leave
push
sub
xor
pop
cmp
add
push
or
pop
fwait
les
cli
and
lock
test
je
mov
xchg
fwait
cmc
out
das
daa
pop
jle
sub
mov
out
popf
daa
notb
jo
cmc
out
dec
call
fxch
ja
jle
ja
dec
and
leave
push
in
fsubrs
addr16
jno
aad
aas
lods
hlt
aad
loop
xor
clc
and
movsb
movsl
sub
or
sub
pop
js
aad
xor
repnz
mov
lods
xor
xor
mov
mov
cmp
push
rcrl
jb
ja
push
scas
xchg
inc
pop
stos
mov
dec
lods
sub
fbstp
mov
fs
push
popa
mov
repnz
in
fbld
jbe
jl
repnz
xchg
push
sti
jge
mov
ret
pop
mov
int
in
rcrb
inc
cmp
imull
dec
add
push
inc
into
or
pop
sarl
clc
mov
rorl
sub
ja
mov
lock
cli
jle
push
jl
sub
pop
push
lods
lahf
leave
sub
adc
fldcw
data16
lods
popf
inc
mov
jmp
push
push
sbb
sahf
or
sub
fcom
pop
gs
sahf
popa
xlat
lock
xchg
int
or
xchg
jae
push
sub
mov
dec
fcomps
push
jne
outsl
cmp
movsl
mov
jmp
mov
insl
notb
inc
adc
adc
jg
jle
ja
sub
mov
jge
outsb
hlt
fisubrs
cltd
out
ss
xor
cld
sub
pop
inc
aad
pusha
loop
and
divl
fsubrs
mov
and
xor
rorb
dec
pop
lret
inc
clc
cmp
sbb
addr16
jmp
pop
into
call
je
adc
scas
sbb
bound
insl
leave
leave
fldenv
push
xchg
jb
movl
inc
cwtl
aad
pop
cmc
cld
popf
ss
loopne
add
leave
inc
lcall
sbb
popa
and
ljmp
or
call
add
inc
imul
pusha
in
push
das
fisttpl
cltd
jg
cmp
pop
mov
push
mov
out
aaa
aas
outsb
outsb
push
add
mov
push
xchg
mov
imul
or
mov
les
repnz
adc
cmp
inc
mov
test
insl
jae
sbb
cmp
pop
jecxz
into
das
icebp
das
sbb
int3
pushf
repz
sti
subb
imul
cmc
shll
ffree
dec
cmp
push
jg
lods
repnz
adc
in
das
adc
pop
test
outsb
xchg
insl
push
sbb
ret
enter
dec
int
fldenv
pop
stc
stc
mov
cltd
cmc
push
inc
xchg
cmovge
inc
xchg
pop
jl
aas
les
int3
push
xor
inc
fmull
fcmovnb
add
cld
dec
xor
out
push
pushf
lock
mov
mov
enter
mov
shll
dec
mov
leave
stos
shll
or
sub
movsl
in
stc
sbb
jg
loopne
inc
jbe
in
dec
mov
push
jg
jno
and
cmp
lds
inc
push
rcll
scas
xor
mov
les
cmp
inc
decl
pushf
lds
cs
sbb
mov
sub
shll
pusha
pop
in
insl
es
cmp
add
mov
and
fimull
mov
sbb
mov
pop
ja
cmp
jne
mov
loop
ja
jle
xor
mov
mov
cmc
xor
sbb
fisttps
lock
and
xchg
iret
dec
bnd
fidivs
mov
dec
jle
out
pop
es
test
jle
cmc
outsl
jb
mov
leave
inc
pop
lods
shll
mov
stc
mov
add
pop
xchg
mov
mov
xchg
outsl
sti
push
xchg
sbb
ljmp
mov
nop
ss
push
aad
in
push
inc
mov
fsts
fwait
lods
stc
and
mov
shrb
or
mov
or
jge
push
in
xchg
daa
stc
nop
cmp
fstl
shll
mov
mov
pop
xchg
dec
pop
aad
or
testl
adc
js
in
sub
out
push
lods
hlt
iret
dec
int3
idivb
mov
mov
jbe
push
adc
mov
jecxz
aaa
dec
mov
add
lock
sahf
stc
jnp
jns
push
mov
jecxz
lds
push
or
inc
or
or
fnstenv
sub
adc
cmp
sub
test
adc
sahf
shll
hlt
add
dec
in
mov
sub
aad
lock
cld
push
push
fs
cmp
mov
sbbl
test
xchg
filds
mov
and
sub
shrb
gs
int3
cmpsb
cmpsb
mov
sub
and
js
cmpsb
out
xor
dec
out
js,pt
hlt
stos
xor
lods
xchg
outsl
int
pop
fdivl
fisubl
pusha
adc
shll
cltd
lea
pop
push
push
jnp
negb
xchg
out
push
xchg
test
call
jae
push
stos
jne
shl
mov
loope
fisubl
push
stos
frstor
std
jbe
cli
mov
leave
fs
mov
xchg
in
sarl
jno
in
rcr
inc
push
sar
cli
mov
mov
repnz
sub
cmp
int3
stc
rcrb
jne
mov
std
pushf
sbb
fnsave
stos
roll
or
shll
sbb
fidivs
inc
adc
clc
sahf
sub
mov
arpl
das
adc
jmp
add
jmp
cmp
cmp
in
cltd
aam
scas
sub
faddl
fisttpll
in
cld
mov
adc
fstpt
lret
je
mov
mov
ljmp
loop
aam
mov
xor
in
xchg
jl
sarl
dec
sub
fisttpll
test
lret
jge
repz
test
cmpsb
push
cmpsb
jo
ret
sbb
sub
sahf
fldln2
inc
subl
push
cmp
pop
sub
xchg
scas
xor
xchg
out
push
movsl
xchg
pop
or
dec
cmp
lock
or
mov
xor
adc
mov
mov
aad
cmpsb
xor
scas
imul
jbe
pop
repz
test
int3
je
dec
jp
jg
cmpsl
out
and
sbb
pop
bound
leave
add
mov
mov
aas
add
push
xor
iret
dec
sahf
nop
fisubrl
int
cli
dec
dec
lods
out
int
or
pop
mov
decl
xor
xchg
test
jg
sub
cwtl
mov
adc
fs
mov
andb
push
cld
shll
xchg
cmpsb
xor
bsf
cli
cmpsb
pop
test
xchg
icebp
std
pop
fdivr
sub
pop
sbb
jb
sbb
shll
leave
pop
sbb
xor
cwtl
ret
ds
mov
fnsave
rclb
adc
add
xchg
lods
xorl
fnstsw
enter
add
leave
jmp
lea
testb
stc
inc
mov
mov
mov
adc
push
scas
or
cmpsb
pop
lds
inc
xchg
es
filds
jg
jge
jle
lock
sbb
xor
test
pop
push
aaa
inc
je
daa
xchg
in
imul
xchg
mov
dec
icebp
out
jp
aaa
imul
popf
xor
lcall
loop
rcr
in
cwtl
jge
sbb
mov
cltd
in
lcall
adc
lea
pop
in
lret
jb
add
lret
mov
pop
pop
cmp
cld
out
push
sub
push
pop
mov
inc
mov
and
cmp
xchg
add
nop
cmp
sbb
movsl
jbe
sub
icebp
jae
lahf
push
out
ljmp
sub
ja
testb
out
call
neg
mov
rcr
ss
loopne
add
jp
xor
dec
push
clc
mov
cmc
and
maxps
xchg
loope
sub
ljmp
sub
push
push
sub
mov
into
out
js
test
movsb
adc
lcall
xchg
nop
pop
bound
pop
pop
mov
icebp
jae
xor
xchg
scas
lods
scas
add
aaa
xchg
adc
adc
sysenter
add
test
jne
mov
mov
sub
out
vcvtsd2ss
xor
inc
int
adc
inc
fs
inc
cld
pusha
negl
xchg
pop
mov
cmpsb
rcrl
test
psllq
xor
inc
outsb
pop
repz
in
pusha
push
xchg
cmpsb
mov
je
xor
dec
xor
lods
pushf
pop
pop
lods
or
rclb
fcoml
fnstsw
inc
xor
adc
pop
xchg
sbb
sub
pop
push
ret
jbe
bnd
xor
popa
je
jg
jne
push
xchg
call
hlt
push
icebp
xor
cld
adcl
xchg
xor
ljmp
mov
stc
fcomip
pop
sub
push
jl
rcll
xchg
adc
jg
and
stc
sbb
jne
sti
xchg
xchg
stos
mov
imul
loopne
jge
loopne
jg
pop
push
and
sarl
sub
popf
sahf
inc
adc
sub
push
inc
cld
xor
cli
mov
lods
xor
mov
mov
mov
push
mov
cmp
aad
popf
sbb
mov
push
cli
sub
iret
push
mov
ss
clc
jnp
ds
arpl
mov
cmp
out
xchg
in
push
negb
jne
in
aas
xor
test
std
cli
nop
icebp
or
loopne
leave
test
cmp
xchg
das
inc
and
mov
push
in
sbb
xchg
push
insb
vhsubpd
dec
push
das
test
jp
jg
push
je
mov
xchg
jge
lods
int
pop
aas
sub
movsl
ja
push
mov
xor
ficoml
cmpsb
xchg
leave
negb
insl
and
mov
mov
jp
push
repz
sahf
stos
adc
bnd
sahf
sti
mov
push
xlat
push
or
jns
ja
idivb
jns
xor
push
xchg
pop
cmp
mov
pop
mov
mov
outsl
cmp
xor
push
xchg
mov
aam
aam
shll
push
mov
and
push
sbb
cmc
cwtl
cmp
xchg
gs
test
shlb
scas
mov
mov
mov
gs
pop
lret
mov
pop
jg
and
jne
jle
pusha
mull
lock
jno
mov
xchg
xor
xchg
jne
jmp
push
lds
imul
adc
pop
hlt
dec
pop
dec
jle
jnp
adc
jmp
mov
daa
xchg
nop
pop
push
inc
cli
xchg
in
aaa
daa
cmc
es
push
mov
lods
sub
imul
pop
movsl
mov
fdivrl
clc
mov
push
in
cmp
pop
inc
mov
mov
dec
pop
mov
or
ficoml
mov
xor
mov
movsl
or
clc
mov
pop
repz
aaa
pop
mov
dec
lret
push
scas
push
adc
ficoml
push
pop
mov
loopne
sbb
outsl
inc
xchg
xor
dec
or
push
fimull
arpl
fst
push
adc
xor
sbb
mov
mov
adc
inc
push
cmp
adc
xor
jae
in
fidivl
out
jbe
das
xor
push
xchg
jnp
cmpsb
mov
dec
pop
xlat
add
or
push
mov
lret
shrb
adc
repz
jne
pop
loopne
pop
xchg
mov
or
test
pop
shll
jg
aad
scas
xchg
lret
ss
insb
gs
pop
sbb
mov
jnp
or
push
imul
std
sub
dec
in
jb
imul
shl
fisubrl
aas
bnd
in
sub
adc
ja
das
mov
lds
jg
into
rclb
xchg
mov
mov
dec
cmp
scas
popf
jl
js
iret
or
pop
dec
clc
mov
sbb
aam
cltd
sbb
xchg
pop
mov
test
mov
xchg
int
pop
jne
pop
pop
in
ret
mov
push
jne
mov
shlb
fs
ss
mov
add
sahf
enter
insl
rcll
sahf
dec
test
addr16
notl
mov
lret
lods
lods
fwait
pop
icebp
in
je
out
clc
das
xchg
cmovno
mov
rcrb
pop
imul
cmp
dec
pop
clc
fs
dec
xor
pop
daa
gs
in
push
mov
mov
stos
xchg
lcall
cmp
mov
out
cld
push
fcmovne
in
filds
sub
jno
pop
mov
lock
sbb
out
and
test
sbb
das
fwait
jge
cmp
pop
shr
dec
idiv
or
sub
and
fwait
popf
xchg
adcl
push
insb
dec
ljmp
push
orb
and
scas
arpl
fistpll
pop
dec
js
mov
xchg
clc
sarb
fidivs
pop
stos
mov
arpl
rcl
aaa
lahf
addr16
xchg
cmp
sbb
mov
lret
lds
dec
rol
push
jbe
rcrb
subl
pop
ds
mov
shll
xchg
aaa
lret
sbb
addr16
sbb
rclb
std
pop
push
cmp
cmpsb
ror
int
aam
mov
and
xchg
test
or
pop
negl
roll
jg,pn
je
mov
movsl
rcll
mov
aam
inc
call
xchg
imul
test
fs
jge
fldcw
cli
inc
std
fstp
dec
stos
pop
in
in
cld
adc
push
sub
jp
mov
mov
jle
pop
pop
fdivrs
mov
insl
fstpt
lods
ja
lea
std
pop
add
or
bound
stc
and
fistpl
popf
stos
xor
jo
sbb
call
es
dec
adc
adc
inc
jge
lods
or
ljmp
stos
in
stos
neg
or
xchg
inc
sub
loop
into
ret
loope
jns
mov
stc
fldt
pop
jno
sbbb
jne
adc
inc
pusha
cmpsl
pop
bound
xor
repz
idivb
xchg
sub
cltd
enter
or
mull
push
out
rorl
xchg
pop
je
fcmovnbe
xlat
jp
gs
aas
in
dec
and
push
sbb
subb
lahf
jle
dec
xlat
adc
stos
stos
mov
shl
outsl
movsl
testl
stc
xchg
lock
cwtl
outsb
lret
jne
xchg
mov
out
cmp
shr
xchg
je
adc
pushl
pop
sarl
or
sub
or
fisubrl
mov
push
data16
fs
pop
repz
lods
and
cmp
pushf
das
cwtl
std
mov
rorl
jno
jno
and
inc
dec
lcall
shl
lret
fs
fmuls
ljmp
test
aas
setne
cs
push
xor
fwait
cmp
sub
mov
sahf
ljmp
dec
xor
jl
add
pop
sbb
repnz
lds
pop
jle
and
dec
lods
dec
jne
pop
mov
aas
sbb
jmp
push
in
fdivrp
xlat
pop
sti
daa
sbb
aaa
cld
mov
pop
pop
movsl
stos
or
lret
cld
jle
jecxz
cmpsl
dec
maskmovq
arpl
push
addr16
negl
pop
dec
int3
push
mov
mov
sbb
inc
xchg
cli
and
fidivs
add
or
dec
lahf
cmc
mov
out
adc
rcrl
pushf
pusha
pop
mov
xchg
dec
push
dec
pop
sbb
test
sahf
xchg
loopne
adc
aad
push
out
cmp
int3
rcll
push
dec
daa
push
inc
jl
inc
dec
mov
mov
inc
cmpsl
or
xlat
fyl2xp1
cmp
pusha
and
jecxz
fistl
pop
jo
outsb
in
fwait
dec
dec
cmp
push
pop
fadds
mov
sub
stos
in
std
adc
add
loope
add
ret
and
mov
adc
xchg
lds
xchg
or
int
jo
leave
clc
pushf
or
adc
sarl
inc
mov
dec
stos
and
sbb
sbb
sub
fisubrs
cmp
pusha
push
out
inc
in
leave
aad
fildl
mov
mov
pop
mov
ja
fsubl
push
fldt
lods
sub
mov
mov
loopne
jecxz
test
call
and
sbbb
mov
add
sub
push
and
sahf
lea
push
out
add
shrl
and
inc
lea
mov
mov
mov
stos
mov
sbb
mov
aad
cwtl
dec
add
cmp
xor
addr16
clc
mov
rcll
faddl
pop
hlt
lea
lret
cltd
dec
fcomp
sbb
shrb
addb
rcrb
cmpsb
mov
and
lock
mov
repnz
ds
pop
dec
or
rol
pop
mov
cltd
rcl
mov
test
lcall
aam
push
mov
call
vmovhps
or
insl
inc
xor
mov
xor
fistl
mov
inc
dec
lods
mov
call
sbb
inc
inc
cld
xchg
gs
mov
idivb
sub
and
push
out
outsb
cmpsl
outsl
inc
bound
mov
in
pop
adc
js
mov
xchg
pop
lahf
icebp
ret
mov
push
jle
push
pcmpeqd
sbb
adc
sbb
in
cmpsl
in
icebp
jl
dec
mov
outsb
inc
loopne
test
jge
mov
mov
loopne
loope
xor
fsubr
mov
pop
stc
push
sbb
jae
stc
sbb
in
pop
fcmove
pop
sub
mov
mov
and
pop
and
jp
aaa
jnp
aaa
sub
xor
clc
jge
jge
bound
push
inc
jmp
xchg
scas
out
add
sub
mov
movswl
fadd
std
clc
push
or
xchg
xlat
outsb
push
add
push
lea
sbb
or
or
das
loop
mov
and
xlat
aaa
pop
xchg
xchg
sar
jl
dec
lods
outsb
js
arpl
pushf
dec
loopne
pop
jo
jo
cs
xchg
jle
xor
xchg
mov
das
loop
rclb
cs
cltd
cld
xchg
call
clc
mov
mov
repnz
adc
insl
pop
mov
adc
repnz
jno
and
pop
push
dec
or
out
jg
out
loop
bt
lahf
mov
pusha
repz
test
testl
and
insl
jle
stos
fidivrl
dec
xlat
or
sbb
inc
inc
mov
mov
scas
mov
int3
mov
test
out
fdivrs
sub
loop
jg
jnp
mov
dec
sub
icebp
int3
call
sar
pusha
push
notl
mov
mov
add
dec
sbb
pop
shr
sbbl
sub
mov
mov
mov
or
cmp
enter
xchg
std
stos
out
mov
mov
inc
or
pop
or
scas
popf
pop
aad
push
sti
jmp
push
je
jb
pop
call
mov
pop
in
inc
push
stc
loop
mov
imull
cmpsb
push
fbstp
mov
idivb
cmp
push
push
popf
aas
shll
lods
fucompp
mov
repnz
stos
mov
mov
out
sub
out
jmp
das
test
cmpl
shrb
ljmp
fstpl
ljmp
sbb
mov
mov
stos
dec
ret
jo
ret
sub
mov
test
jae
jp
addr16
fdivrs
loopne
ljmp
dec
movsb
push
popa
pop
fdivrs
addb
and
stos
sti
in
fcoms
push
mov
shll
test
push
sub
pop
es
into
aad
test
inc
jecxz
addr16
dec
sub
mov
xor
out
fucomi
loopne
stos
aaa
repnz
shll
jo
mov
aaa
mov
inc
insb
out
mov
fldlg2
nop
push
dec
sub
call
xor
add
ss
cwtl
mov
push
js
gs
cld
xchg
sub
push
ljmp
push
and
cmp
push
lock
jecxz
sbb
icebp
call
xchg
into
lahf
jo
push
ljmp
test
test
push
lock
fs
xchg
jg
push
shl
je
pop
dec
adc
mov
mov
pusha
das
hlt
mov
imul
xchg
sbb
mov
inc
pop
and
and
imulb
sub
test
push
sbb
in
pop
add
jp
int
rcl
jb
pop
sbb
cld
jae
jmp
pop
mov
mov
loop
andb
mov
jg
idivl
sub
push
sbb
pop
shrb
hlt
jbe
stos
in
pop
scas
jbe
ret
lret
repz
orb
pop
inc
pop
jne
sahf
dec
xor
psubw
idiv
cmp
fistpll
icebp
and
push
fcoml
aam
fsts
pop
dec
mov
inc
lods
mov
sub
ja
mov
pop
adc
stos
shrl
mov
aad
lods
scas
and
jle
pop
jecxz
aam
mov
into
and
fisttpl
fidivrs
or
aas
xor
mov
lahf
pop
std
sub
orb
les
lret
sub
ficoml
lods
rclb
pop
fdivs
push
les
or
mov
int3
add
dec
cwtl
aaa
pop
daa
lea
cmc
sub
fadd
call
jle
inc
aam
mov
mov
jl
adc
lret
mov
inc
movsl
iret
popa
inc
shlb
lods
in
arpl
sti
lcall
jle
or
inc
fdivrs
shr
es
adc
out
lret
sub
jp
fs
out
mov
jge
test
push
mov
popa
cmp
mov
in
stos
jge
pop
insl
insb
iret
inc
push
mov
cmpsl
push
cltd
ret
sbb
xchg
je
addl
in
sub
outsl
or
mov
mov
mov
xor
lock
jbe
paddd
mov
adc
pshufw
inc
std
jp
pop
mov
popf
mov
and
aaa
mov
sbb
mov
xchg
and
adc
rcrb
add
inc
cmpsl
pusha
std
mov
fidivrs
dec
je
or
mov
inc
or
lahf
cmpsb
add
pop
push
mov
pop
fiadds
sub
int3
jne
jge
gs
cmc
shll
cli
enter
jne
mov
aas
push
movl
decl
mov
ret
and
push
push
dec
out
leave
into
adcb
scas
adc
addl
cld
test
sub
leave
and
stc
xchg
jecxz
dec
rcl
ja
pop
dec
adc
ret
test
dec
cmpsl
push
pop
adc
pop
test
xchg
sbb
and
iret
and
jno
inc
das
mov
xchg
sbb
mov
fs
lret
lods
loop
stos
sbb
mov
sub
shrb
inc
mov
jbe
decl
xchg
fnstcw
daa
push
arpl
dec
mov
jns
adc
mov
mov
out
inc
aam
mov
out
stos
clc
data16
mov
ficoms
stos
sti
mov
mov
inc
xor
insl
pushf
sahf
data16
push
loopne
inc
stos
jge
cld
fimuls
popf
test
aam
out
mov
mov
and
mov
sti
or
mov
cmc
imul
mov
je
and
pop
int
ret
adc
jno
out
or
pavgb
loop
sub
cld
mov
mov
cli
add
cmp
sahf
imul
xchg
or
jge
js
pop
sbbb
sbb
adc
jno
mov
sub
and
lahf
push
mov
xacquire
xlat
or
pop
xlat
loop
cmp
adc
jmp
mov
shll
mov
jp
pop
pop
in
inc
xchg
fs
push
test
mov
pushf
xor
add
ds
popa
jle
cmp
cmp
out
int3
xorl
add
aam
negl
std
jo
adc
cmpsl
or
mov
aas
es
dec
mov
xor
stc
pminsw
push
jecxz
mov
mov
cltd
cmp
pop
test
mov
es
adc
outsb
jb
and
dec
mov
inc
cwtl
lret
cmp
dec
negb
subb
push
rcrl
and
inc
lds
pop
cmp
mull
cltd
shll
pop
sbb
fucomip
sahf
dec
movsl
lock
fs
int
int
jne
outsl
sub
push
inc
pop
sub
imul
push
ret
addr16
sbb
xchg
vunpcklps
ja
push
push
lods
pusha
jle
ficoms
push
jmp
cmc
movsl
jns
inc
sti
mov
dec
mov
mov
popf
xchg
test
lret
dec
dec
ljmp
gs
out
jbe
repz
call
lcall
push
jne
jp
push
lea
insl
lods
cmp
into
lret
push
push
jmp
inc
pop
xchg
mov
add
cwtl
fimull
ss
xchg
aam
xchg
repnz
xor
jmp
jg
mov
lahf
outsl
jp
insb
mov
in
mov
enter
ljmp
stos
mov
pop
call
or
or
cmp
sahf
lahf
outsb
loopne
or
aas
pop
mov
lods
dec
inc
push
std
outsb
inc
mov
stos
sahf
push
sub
mov
pop
jmp
push
cmp
scas
aaa
stc
scas
mov
fsubl
xchg
jmp
xchg
adc
push
sbb
xchg
popa
in
jnp
xchg
pop
adc
pop
std
sub
mov
mov
jge
and
cld
movsb
add
sub
inc
stos
jle
mov
cmp
adc
aas
dec
pop
test
push
push
sbb
cld
fimuls
mov
push
rolb
test
xchg
sti
xchg
ja
or
cs
sub
push
cmpsl
clc
or
or
out
lcall
hlt
xchg
lcall
lcall
aad
xchg
sub
sub
pop
test
xchg
int3
add
sti
inc
icebp
cld
ficoml
notb
or
sub
insl
je
and
xchg
int
push
jmp
mov
xor
mov
jbe
ficompl
pop
lock
into
sti
ljmp
mov
mov
jg
sbb
jmp
jg
sbb
xchg
in
ja
jae
mov
xor
inc
mov
mov
jno
cmpsb
push
fistps
sbbb
jae
out
inc
mov
mov
jmp
in
jp
jecxz
mov
fwait
mov
mov
test
push
popa
lea
cmp
xchg
jae
js
dec
push
insl
cld
sub
push
loopne
sarb
dec
jne
lahf
jecxz
and
nop
mov
fidivl
mov
jecxz
dec
lret
stos
dec
mov
xor
jb
xchg
cmp
inc
lcall
sbb
ret
cmpsl
jae
lahf
xchg
adcb
std
inc
mov
pop
push
in
aaa
gs
mov
sub
inc
mov
clc
loope
cli
cld
cmpsl
jle
jle
adc
pop
push
loop
shr
stos
clc
test
jno
and
out
cmpsl
and
mov
adcb
or
inc
mov
add
pop
arpl
insl
jmp
ljmp
xchg
xor
bound
cmp
fdivrs
mov
stos
test
ljmp
jge
inc
scas
xor
fisttpll
iret
test
test
into
jmp
pushf
lods
push
jle
jecxz
push
cld
xor
je
bnd
push
loope
fimull
clc
inc
adc
mov
push
test
jle
adc
test
push
lds
sbb
xchg
or
js
sub
into
out
loope
ja
mov
xor
mov
shr
mov
and
pushf
imul
and
cmp
push
push
push
add
cmp
inc
or
push
pop
and
dec
push
in
cmp
sub
and
or
push
push
mov
mov
push
stos
ffreep
stc
jge
pop
push
mov
adc
add
and
mov
jmp
jo
sub
mov
pop
sti
aad
ret
cli
xchg
pop
dec
imul
gs
mov
lods
push
mov
lret
push
push
idivb
cmp
push
add
sti
mov
sahf
in
pushf
hlt
jb
xor
sbb
jmp
push
sti
movsl
pop
out
bound
mov
mov
daa
data16
mov
test
int3
dec
movsl
push
dec
push
push
lret
ret
sbb
imul
pop
push
lods
pop
push
adc
test
call
stos
xor
std
call
pop
lcall
jae
cmp
inc
rorl
xor
jge
lret
mov
icebp
jle
iret
add
in
mov
negb
jp
adc
push
pop
cli
cmp
test
mov
add
mov
addl
or
mov
repz
fdivrs
call
lahf
and
iret
add
cld
fisubrl
scas
inc
or
jmp
rorb
test
rolb
not
jmp
loop
jbe
mov
ljmp
or
sub
cmp
jbe
sti
pop
mov
jae
int
sub
stc
test
imul
push
sbb
lds
jmp
mov
ss
lret
data16
leave
pop
xlat
xchg
jo
xchg
ja
mov
mov
sti
mov
dec
and
repnz
es
arpl
jp
dec
dec
mov
into
xchg
jl
xchg
cmp
push
push
lcall
inc
push
xor
push
push
xchg
popa
add
cmpsb
fcmovnu
outsl
adc
adc
in
pop
push
cmp
dec
pop
pop
loop
cmpsl
arpl
clc
sbbl
jbe
push
jl
stc
pop
aaa
adc
or
pop
leave
add
int
pusha
lret
cmp
ja,pt
ss
xor
xchg
add
and
or
in
je
hlt
dec
bound
dec
sti
ljmp
xchg
pop
daa
jp
mov
popf
hlt
pop
movsb
aas
mov
lret
bound
push
in
mov
mov
setne
cmpsl
and
pop
dec
insl
sbbb
js
sti
mov
mov
shrb
sbb
pop
xchg
ljmp
inc
add
mov
push
pusha
jne
fldenv
mov
int
sbb
dec
shrl
mov
mov
cli
or
xchg
out
mov
mov
xor
sbb
out
aaa
jne
aam
or
mov
jae
inc
dec
sar
cs
jg
mov
outsl
aaa
sbb
push
add
add
mov
bound
loope
jecxz
jecxz
call
sbb
testl
hlt
push
in
ds
mov
call
movsl
cs
insb
mov
cmp
outsb
xchg
sbb
and
dec
jle
jle
aad
scas
out
xlat
adc
xchg
pushf
imul
fldt
lods
pop
jo
pop
push
cmp
cli
iret
and
adc
mov
or
out
sbb
outsb
push
testl
test
leave
neg
clc
push
das
icebp
inc
jbe
dec
mov
xchg
movsb
pop
insl
int3
xchg
cmpl
mov
cli
std
movsl
sub
fcom
das
pop
mov
dec
inc
push
jb
push
call
pop
lret
filds
inc
pop
jne
arpl
cmp
xchg
ja
call
fdivl
mov
xchg
insb
andb
fs
jl
mov
dec
xchg
sarb
xchg
xchg
mov
xorl
lea
xchg
xor
dec
jle
mul
mov
ficomps
xchg
outsl
rcrb
js
xchg
jg
dec
mov
repnz
pop
dec
movsl
and
push
movl
jmp
dec
xchg
sbb
mov
mov
popa
push
scas
mov
fdivrs
pop
xchg
lahf
pop
jbe
out
call
jo
shl
pop
dec
daa
xchg
sub
pop
jb
movsl
mov
inc
clc
adc
push
out
adc
jl
mov
test
cltd
jge
rcrl
int
and
inc
stos
movsl
jbe
mov
addr16
into
test
push
mov
inc
testb
in
pusha
fstps
cld
js
xchg
pop
daa
cmp
push
pop
xchg
xor
jno
push
jle
mov
addr16
jle
mov
xchg
and
out
pop
push
stos
popa
rol
lds
cmp
mov
je
xor
sbb
cwtl
jae
push
ja
sub
xchg
testb
jg
imull
fimull
aad
pop
xchg
icebp
xchg
sub
jns
inc
sbbl
or
gs
push
inc
mov
pop
pop
xor
pop
test
jg
mov
fisubrl
xor
jmp
xchg
adc
sbb
jge
adc
mov
scas
and
dec
in
or
xchg
mov
mov
and
dec
mov
mov
movsl
insb
jle
dec
add
jne
scas
sub
mov
adc
mov
sub
ss
push
jbe
addr16
add
cmp
les
xor
and
stos
inc
popa
data16
push
xchg
ss
mov
fdivl
jmp
mov
clc
hlt
sbb
cli
sbb
arpl
mov
and
outsb
mov
jmp
push
xchg
sub
in
mov
inc
inc
repz
lret
mov
mov
or
imul
mov
iret
cmc
mov
mov
mov
bound
sbb
and
das
jbe
stc
jb
call
pop
stc
or
and
pop
cwtl
rol
or
das
sbb
fdivrs
popa
int
in
dec
sbb
mulb
xlat
adc
dec
push
jmp
or
arpl
fnstsw
jo
mov
fsts
stos
iret
das
fisubrs
mov
dec
adc
cmpsb
hlt
inc
div
loopne
fwait
push
pushf
not
das
mov
decl
fbstp
das
rcll
ss
stc
and
adc
lahf
sbb
xor
scas
mov
dec
mov
in
popf
bndldx
pop
and
pop
dec
cmp
out
ficomps
negl
das
xchg
outsl
jp
rcr
cltd
dec
adc
es
bound
es
pop
and
mov
sub
inc
rclb
daa
mov
mov
jnp
pushf
jmp
cld
mov
hlt
decb
dec
mov
insl
je
pusha
cli
dec
pop
mov
push
cmpsl
cmp
inc
ja
das
inc
mov
pop
je
lahf
lret
push
shlb
fisubl
xchg
ds
push
adcb
dec
clc
xor
aas
loope
cltd
push
push
cmp
imul
ss
cmpsl
sub
mov
mov
repz
repnz
lods
mov
dec
xchg
scas
push
jecxz
adc
sub
push
sbb
aaa
scas
mov
lock
inc
and
adc
outsl
xor
adc
pushf
xor
or
lahf
jge
mov
dec
mov
clc
loope
test
mov
mov
jg
pop
stos
push
lds
hlt
dec
and
cmp
and
pushf
insl
stos
mov
scas
sti
repz
sbb
cwtl
dec
lods
push
aam
cltd
insb
adc
js
mov
in
cli
lret
aam
xor
out
cwtl
cmp
jo
es
mov
cli
repnz
jle,pt
mov
sub
push
stos
cmp
imul
psubb
push
push
dec
or
jmp
cmpsb
fcomps
hlt
pop
mov
nop
add
cli
mov
pop
adc
iret
into
push
dec
cmpsl
push
mov
and
idivl
fdivrl
mov
push
cltd
xchg
sbb
leave
xor
inc
and
adc
mov
popa
aad
cltd
es
add
movsb
sbb
pop
sti
mov
xrelease
popa
cmp
bound
xor
sbb
pop
sbb
xor
dec
mov
sahf
call
xchg
es
bound
add
or
scas
scas
das
pop
fstl
ds
sbb
fiadds
push
cmp
out
cmpb
push
cmpsl
divl
xchg
inc
rorl
mov
cmp
and
ret
and
xchg
cmp
jne
pop
movsb
stos
push
or
movb
fnop
xchg
js
out
mov
fs
push
js
lcall
dec
jg
pushl
addr16
jnp
sahf
jno
mov
and
lret
das
jmp
test
mov
sbb
push
hlt
dec
imul
dec
movsl
hlt
inc
fwait
es
icebp
test
lahf
movsl
inc
push
fcomps
cwtl
cs
lock
mov
jb
outsl
test
adc
push
pop
add
ds
cmp
mov
ljmp
jg
dec
pop
int3
fs
lea
xchg
push
jne
rorl
fisubs
aad
push
int3
jecxz
pop
cmc
jmp
jnp
xchg
scas
fdivrs
test
lahf
fildl
jle
jmp
loope
jg
jbe
mov
jecxz
loope
jmp
jp
ja
xor
xchg
mov
movb
js
xor
pop
addr16
jg
xor
loop
cli
sub
je
jecxz
lcall
lock
gs
push
push
cmp
mov
in
fs
out
ret
jno
pop
outsb
sahf
dec
int3
sub
pop
sarb
sbb
rcr
push
adc
pop
jge
mov
nop
push
push
out
repnz
mov
fwait
xchg
adc
mov
cmp
test
dec
fimull
mov
outsl
push
pushf
in
xor
pop
sti
fucomp
in
inc
cmp
popa
shlb
xchg
hlt
sub
ja
xor
mov
fwait
push
stos
orb
lods
lods
ds
int
mov
frstor
or
pop
sub
std
cmpsl
xchg
add
aad
arpl
pop
out
std
cmp
sbb
call
mov
in
push
outsl
movsb
mov
imul
mov
inc
and
xorl
movsb
or
jle
dec
jecxz
mov
scas
insl
push
sub
fisubrs
jmp
dec
test
sbb
pop
cmpsl
cmpsb
mov
mov
flds
and
insb
cltd
xchg
mov
dec
out
popa
cmp
xor
sub
mov
jle
sub
dec
inc
icebp
mov
push
lock
ret
jno
xchg
mov
repz
mov
push
mov
pop
adc
out
int3
pushf
jnp
sub
mov
bound
push
xorl
cmc
dec
sarb
push
notl
das
mov
add
data16
testl
push
jmp
sbb
inc
ret
mov
xlat
imul
jle
je
inc
subb
xchg
jmp
aad
es
ja
inc
add
mov
outsl
fldenv
dec
mov
xor
jle
or
loop
cmpsl
mul
mov
mov
aad
push
cs
mov
xchg
cmpsl
and
fbld
into
pop
push
scas
into
aas
lret
mov
pop
call
sub
inc
or
xchg
test
mov
pusha
cmpsb
data16
mov
sahf
xchg
push
mov
rcr
add
sti
fs
aaa
jp
and
and
test
fstl
ljmp
cmp
cltd
inc
add
or
test
pop
aad
loope
dec
xchg
push
adc
mov
roll
pop
mov
icebp
xor
scas
into
popa
arpl
iret
mov
sub
jns
adc
mov
inc
shl
lea
sub
leave
and
xchg
pop
pop
push
fnstsw
pop
sub
jle
sub
arpl
cli
pop
xor
or
xor
insb
push
mov
scas
mov
mov
add
sahf
push
push
mov
pop
out
das
stos
test
daa
cmc
jecxz
hlt
inc
mov
ljmp
popf
addr16
out
divps
arpl
pop
or
mov
or
mov
jecxz
sub
das
mov
jecxz
clc
mov
mov
clc
pushl
mov
shll
lds
cld
add
scas
cmp
jl
sarb
pop
mov
fdecstp
aad
movaps
sarb
xchg
lcall
xchg
fsub
lret
cli
sti
xlat
fnsave
ret
gs
stos
mov
aas
jo
enter
fisubrs
add
cmp
jmp
dec
loope
jne
test
daa
pusha
clc
mov
dec
xchg
arpl
xor
mov
xor
hlt
cmp
and
out
xchg
nop
loope
jns
outsl
dec
adc
mov
xchg
fwait
pop
sub
notl
sub
push
xor
add
cld
dec
leave
mov
xor
test
sahf
mov
add
dec
adcb
cmc
lds
std
xchg
mov
icebp
test
or
or
aas
out
pop
sbb
outsb
aam
mov
jp
gs
push
pop
decb
xchg
outsb
ss
bnd
xchg
push
xlat
bound
les
adc
xor
data16
push
cmp
pop
jge
cmpsl
mov
xor
jbe
lret
sub
fsts
cmpsl
jbe
jno
sbb
xchg
outsl
dec
outsb
gs
test
jp
inc
mov
push
adc
icebp
stos
mov
mov
or
fidivs
fldcw
ja
jnp
bound
xchg
inc
fsub
call
cmpsb
push
and
cmp
insb
mov
ror
xor
sbb
in
mov
mov
fisubs
adc
fsub
xchg
sub
mov
in
inc
movsl
fcmove
push
sub
push
test
or
mov
dec
pusha
clc
inc
mov
or
cltd
pop
pop
fdivrs
jno
push
jmp
add
fldt
aas
xlat
jl
iret
and
data16
adc
insl
js
push
fsubl
mov
cmpsl
ret
mov
xlat
jg
jno
mov
pop
icebp
sbb
dec
and
jnp
xchg
xor
jle
cmpsb
in
addr16
mov
test
rorl
stos
dec
data16
cwtl
sbb
push
push
jbe
or
inc
hlt
inc
jle
jl
mov
loopne
sbb
sti
xchg
mov
mov
stc
clc
pop
dec
pop
pushf
mov
fmul
loope
pushf
cmc
es
lea
ficomps
xlat
dec
cld
add
aaa
ror
out
add
jl
xchg
xchg
push
mov
push
push
dec
push
out
cmc
add
and
mov
sub
fstps
mov
arpl
lods
mov
xchg
mov
dec
cmp
sub
inc
cmp
push
sbb
frstpm(287
std
pmaxsw
movsl
fadds
and
push
iret
mov
mov
pop
xchg
xor
mov
fucomip
or
ds
cmp
and
and
testl
addr16
mov
xchg
cmpsb
mov
sub
inc
in
fs
repnz
mov
pusha
shl
mov
cmp
fnstenv
mov
int3
test
dec
cmp
sub
test
iret
xor
shrb
push
movsb
das
push
mov
imull
cwtl
out
and
aad
sub
or
cltd
and
pop
add
push
lock
ret
out
push
into
xchg
mov
fcmovu
sbb
mov
jg
ret
adc
loopne
idivl
sub
push
lret
in
pop
sub
sbb
pop
mov
mov
movsb
mov
loope
cmp
insl
test
call
sbb
cld
inc
cmp
aas
inc
scas
jge
and
das
ja
in
fwait
mov
fdiv
cmp
mov
fwait
ret
sbb
dec
mov
dec
ret
cld
test
mov
sub
hlt
nop
mov
cmpsl
mov
pop
mov
into
test
repz
sbb
push
nopl
repz
xor
jge
bound
rcl
dec
aad
outsl
dec
test
push
adc
cmp
sti
cmp
rcll
xchg
mov
pop
les
cltd
mov
jae
in
fadds
lods
leave
scas
mov
shlb
scas
aad
sahf
popa
jne
test
and
pop
xchg
dec
xor
loope
xor
gs
ljmp
mov
jmp
in
movsb
in
aad
jbe
aad
sbb
adc
loope
xor
sub
mov
sub
fldcw
add
inc
add
je
inc
jmp
mov
mov
xor
and
int3
in
jb
out
ja
xchg
out
xchg
mov
mov
out
inc
ret
push
jbe
nop
sti
pop
fst
sbb
adc
adc
mov
mov
pop
mov
push
sahf
dec
negb
js
mov
or
and
incl
outsl
or
mov
movsl
imul
pop
jmp
arpl
jmp
je
shl
pop
out
stos
xchg
fldenv
fnsave
push
jecxz
mov
loopne
inc
jmp
es
sbb
jae
push
subb
xchg
jp
aad
mov
pop
jle
stos
lret
into
or
ret
es
stos
les
popf
pop
pop
repnz
idivb
or
fs
test
add
aas
fistps
adc
scas
jb
in
sbb
mov
es
jg
lret
jb
cwtl
cwtl
mov
lret
jne
and
lods
lock
xchg
cltd
mov
push
jbe
xor
les
adc
js
cmp
push
pop
shll
outsl
sbb
push
ss
mov
or
test
push
in
fdivl
in
imul
sti
or
mov
fmuls
or
dec
nop
mov
daa
lcall
movsl
lret
jo
mov
mov
sbb
mov
jmp
out
push
aas
mov
test
jecxz
push
or
dec
jbe
add
mov
test
mov
sbb
sub
pop
mov
fsubl
lret
dec
movsb
aad
imul
fucomi
jne
arpl
test
cli
inc
mov
add
lret
data16
push
mov
pusha
jle
xor
test
mov
scas
adc
ret
push
popa
fisubrl
ss
and
adc
lret
mov
gs
cmpsb
nop
ljmp
repnz
fistpl
xchg
addb
icebp
je
in
pop
mov
mov
inc
in
adc
stos
into
inc
dec
xchg
push
es
divl
fstps
xor
push
push
insb
notb
sbb
fcompl
ds
mov
inc
es
imul
pop
pop
or
pop
push
inc
fisubl
sub
cld
test
push
xchg
aam
xchg
outsl
push
push
cmp
loop
add
lret
cmp
push
mov
push
jno
cwtl
xor
in
push
roll
sahf
or
sbb
or
loopne
idivb
pop
es
sbb
sarb
test
mov
mov
loope
movsl
pop
mov
and
xchg
aad
mov
mov
push
sar
fsub
vsqrtsd
mov
je
inc
int3
std
xchg
mov
pop
inc
jbe
jo
ret
outsb
movb
dec
inc
mov
xchg
fistpl
jb
and
mov
sub
dec
fdivrl
sub
in
test
lods
movsb
mov
in
adc
pop
xchg
idivb
lea
ret
pop
jns
arpl
pop
mov
add
cmp
dec
mov
test
or
dec
jbe
inc
loope
rolb
and
sbb
xor
fs
mov
push
dec
out
ljmp
cmpsb
clc
mov
sbb
movsb
jmp
test
adc
mov
pop
and
popa
mov
sti
xchg
test
ror
shll
add
sub
push
test
xchg
scas
int3
push
pop
movsb
jg
outsb
mov
scas
cmc
jle
dec
pushf
shlb
mov
jl
stc
inc
loope
scas
pop
stos
pop
dec
data16
sub
inc
call
or
loopne
sub
outsb
es
and
cli
inc
cs
xor
clc
loope
sub
inc
jbe
sbb
mov
loope
mov
xor
xchg
push
xchg
dec
adc
cld
lods
icebp
rolb
aad
outsl
mov
mov
xor
ficoml
ds
popa
cmp
jp
pop
sub
jnp
icebp
in
popa
adc
cmp
jmp
dec
in
pop
push
int
sbb
loopne
cmc
das
sbb
test
stos
andb
mov
dec
out
lret
das
jae
mov
and
mov
inc
xor
pusha
and
and
jmp
fwait
out
sub
sbb
cmpsb
cmpsl
push
push
imul
stos
movsb
clc
lea
daa
ds
std
mov
fcomp
out
movsb
daa
mov
stos
jnp
mov
daa
in
lods
pushf
push
xlat
pop
mov
stc
sbb
and
push
jle
pop
fstpl
call
mov
scas
icebp
decb
or
out
insl
cld
fidivs
aaa
int3
dec
xchg
sbb
fstps
data16
lods
mov
xchg
cltd
lret
dec
or
aas
mov
fs
cwtl
mov
fcoml
cltd
fdiv
ret
repnz
sbb
dec
addr16
jo
imul
sub
jns
cmp
fistpll
addr16
add
adc
sbb
or
inc
xlat
fld
xchg
mov
sbb
sub
jne
mov
mov
aas
out
dec
inc
xor
dec
pop
xchg
cmpsb
jp
cltd
mov
sbb
push
jb
pop
scas
bndldx
fidivrl
push
sti
mov
scas
mov
lods
sub
xchg
fcomps
daa
fwait
lds
dec
aad
cli
enter
test
sbb
stos
in
inc
lds
insb
hlt
pop
out
cmp
out
popf
lret
das
lds
and
mov
sbb
cmc
test
mov
pop
test
aas
scas
mov
push
push
std
xchg
enter
push
loope
lret
insl
or
and
cmp
aas
cmc
sbb
jecxz
lahf
cmp
daa
jmp
imul
fs
jg
pop
pop
bnd
adc
cs
xchg
mov
pushf
sbb
xorb
popa
sarb
dec
dec
xchg
ja
cmp
scas
cltd
in
arpl
xor
ja
inc
mov
xchg
loope
cmp
popa
nop
stos
adc
sub
cltd
jbe
fld
lcall
gs
clc
mov
sub
cmc
fbld
loop
pop
pusha
fs
repz
mov
lods
fwait
add
fildl
mov
mov
dec
inc
scas
inc
cltd
sti
mov
push
aas
pushf
mov
fnstsw
pop
pop
pop
push
out
jp
sbb
cmp
stos
lock
shrb
push
xor
jl
lret
das
lahf
sub
js
mov
sbb
imul
mov
cld
bound
xchg
jo
fcoms
sub
ficoms
lods
xor
xchg
loope
sbb
bnd
xchg
shl
movsb
push
adc
cmp
movsl
in
add
sbb
mov
repz
jbe
fs
mov
rclb
pop
subb
or
fstp
jle
or
push
pop
push
lahf
or
fnstsw
push
into
sarb
xlat
mov
and
ss
mov
inc
aam
push
inc
leave
sbb
xchg
cmp
enter
clc
dec
data16
mov
pop
idivb
push
in
out
xchg
repnz
call
das
cmpsb
mov
arpl
in
pop
mov
and
loope
repnz
gs
fwait
or
sub
mov
fcompp
pop
aaa
push
and
sahf
push
int
rolb
scas
push
inc
out
mov
cmp
jp
out
add
sbb
out
in
dec
mov
repz
test
fcmovbe
sub
xor
xchg
insb
insl
push
rolb
sub
cld
in
fdivr
fistpl
orl
xchg
push
sbb
jne
pop
testb
mov
xchg
enter
jb
mov
loope
push
subb
push
ja
loop
sbb
aas
mov
lods
xchg
dec
cmp
push
mov
push
xor
or
xor
divl
mov
fsub
decb
loop
lcall
xlat
push
push
loope
sub
sahf
or
stos
xchg
xor
stc
fimuls
clc
add
and
jge
ljmp
test
jnp
dec
mov
lods
rorb
mov
fisttps
js
cli
xchg
pop
cmp
inc
outsl
test
rcl
out
gs
jne
mov
xchg
out
in
rorl
scas
sub
mov
bound
shl
cld
mov
jp
inc
xchg
les
enter
sahf
call
xor
insl
lock
dec
cmp
dec
lods
mov
movsb
aam
jo
xchg
pop
or
xchg
lret
add
jnp
inc
and
int3
push
push
pop
sub
aad
stos
push
shl
adc
nop
cmp
jno
jge
lods
cltd
movsl
lock
pop
repz
pop
sbb
mov
push
jb
push
cmovbe
dec
into
bound
test
repz
int
ficoml
mov
dec
jb
popf
js
sub
push
mov
xlat
jmp
out
mov
nop
stos
cltd
popf
mov
adc
lret
loop
inc
stos
sub
movsl
and
xor
xorl
insl
mov
jmp
outsl
jne
pop
outsl
xchg
push
pop
cmp
or
and
inc
cli
shrl
test
jmp
inc
xchg
mov
sahf
pop
clc
cmp
sub
push
pop
mov
imul
data16
pop
cli
into
outsl
pop
pop
out
shrb
pop
dec
aad
xchg
mov
pop
cmp
scas
cwtl
movsb
jae
mov
das
mov
arpl
rol
jmp
mov
frstor
ljmp
je
sub
add
xchg
push
popa
in
pop
int3
fwait
and
out
dec
icebp
adc
repnz
ss
jb
flds
mov
sbb
mov
inc
or
push
lds
ret
push
cmp
mov
mov
mov
outsb
int3
popf
fdivrs
out
aas
test
xchg
mov
pop
xchg
lea
push
div
push
cmp
dec
gs
adc
jle,pn
push
mov
cmp
jae
pop
or
repnz
pop
out
fsubs
jns
loope
mov
mov
cs
scas
mov
icebp
mov
arpl
lods
enter
or
ret
pop
cmp
mov
lea
repz
nop
psrad
pushf
loop
pop
push
add
sbb
mov
sarb
and
dec
imul
rcrl
scas
jno
inc
test
push
mov
mov
xorl
sbb
cmc
roll
mov
lock
mov
and
leave
fists
ljmp
movl
mov
fldl
shlb
into
ljmp
loopne
xchg
jecxz
insl
jbe
fnsave
mov
jmp
jg
sar
aas
nop
insl
inc
mov
test
mov
cltd
sti
aam
mov
push
ja
adc
push
in
mov
test
pop
dec
mov
adc
js
jnp
aas
push
pop
insb
cmc
dec
stc
xchg
inc
lret
das
test
lds
lcall
add
ret
mov
dec
sbb
sbb
insl
imul
cmp
adc
push
add
stc
xchg
cli
push
and
rcrb
out
cmpsl
sub
push
flds
ss
inc
xchg
getsec
pop
rcrl
lds
cwtl
push
je
push
push
lahf
fisubrl
xchg
cltd
rcrl
incb
mov
jmp
aaa
jp
cltd
lcall
mov
mov
fmulp
push
icebp
xchg
pop
clc
and
push
sub
pop
into
js
pusha
rcrb
movsb
cmc
out
shll
nop
dec
cmp
mov
sub
push
mov
les
in
mov
and
and
aam
add
jmp
cmp
mov
mov
cmp
lret
dec
in
fimull
lsl
xor
hlt
stos
rcl
out
lret
or
inc
xchg
add
adc
push
sub
sbb
cmpl
ret
push
test
jbe
jge
xchg
dec
and
in
lahf
jle
fstl
jecxz
push
pushf
out
mov
mov
repz
pop
scas
int3
mov
cli
xchg
mov
cmp
cmpsb
int
push
daa
jle
jg
jg
out
cmp
inc
js
or
push
jmp
xorb
pop
xor
pop
sub
in
das
inc
jne
inc
dec
dec
aas
add
out
cmp
out
clc
push
adc
leave
test
adc
and
in
sbb
insb
out
jno
jno
nop
xorl
inc
inc
push
xchg
in
andl
lret
mov
adc
jg
dec
mov
in
pop
dec
lods
decl
pop
mov
xor
stos
ret
les
xchg
sarl
ficompl
pushf
cmp
dec
dec
pushl
ljmp
scas
cmp
mov
decb
imul
xchg
xchg
sub
ds
mov
sbb
lahf
push
or
dec
jle
mov
pop
repz
pop
pop
push
pushf
sbb
mov
adc
push
inc
pop
stos
repnz
data16
or
dec
jne
mov
cli
es
sub
push
lds
cmp
xor
out
inc
sub
jnp
jno
mov
push
icebp
outsl
faddl
sarl
jge
enter
cmpsb
mov
repnz
xor
jno
hlt
addr16
sub
push
repz
xor
std
inc
pop
pop
xchg
hlt
adc
pop
cmp
loopne
add
mov
xor
lock
mov
sub
movsb
stc
mov
popf
xor
jmp
jne
arpl
aas
testl
pop
in
xor
xchg
xchg
jb
mov
cmp
jge
popa
sbb
xchg
push
mov
add
cmp
xor
leave
dec
or
jo
jae
adc
mov
pop
push
std
jecxz
bound
icebp
xchg
gs
sbb
inc
cmp
lock
xor
push
imul
or
cmc
jge
fsubs
outsl
clc
mov
push
icebp
add
and
call
and
repz
scas
sahf
or
jecxz
inc
jbe
dec
mov
add
jbe
mov
mov
insb
adc
je
inc
imul
pop
insb
lret
inc
xor
sub
movsl
mov
std
sub
mov
push
and
jne
cmp
xlat
pushf
xchg
cmp
dec
lret
leave
or
xor
add
jmp
and
adc
dec
int
pop
orl
aaa
and
lcall
pop
cmp
xchg
xor
mov
sub
icebp
jmp
inc
pop
insl
in
sbb
repz
addr16
in
xlat
inc
mov
mov
lds
xchg
sub
mov
inc
jp
xor
sub
mov
popf
dec
je
xchg
lret
iret
out
mov
scas
jle
rorl
mov
ja
negb
rep
lods
int
dec
xchg
fidivrl
xchg
jno
push
or
jle
xor
dec
jge
pop
xchg
cld
push
push
mov
insb
ss
enter
rcll
scas
clc
stos
dec
imul
xorl
daa
cld
dec
mov
mov
inc
lret
mov
out
pop
sbb
push
adc
out
and
xchg
xchg
push
fists
mov
mov
lahf
fcoms
jmp
inc
push
and
lock
jmp
jbe
ljmp
ret
and
fs
iret
sbb
adc
lds
cmc
mov
and
in
ljmp
pop
or
lahf
add
arpl
in
loope
cmp
das
sarb
jp
dec
cmp
jns
xor
rcrl
mov
dec
push
jl
push
push
ficompl
inc
mov
lret
jne
ja
daa
sub
push
stos
push
cltd
lds
cwtl
push
into
pop
dec
adc
push
aam
jae
gs
mov
push
out
mov
pop
mov
mov
leave
mov
mull
sub
lods
ret
mov
mov
mov
xor
jge
out
das
and
fs
sub
out
or
inc
sti
ds
push
push
imul
push
cmpps
test
dec
icebp
js
outsl
roll
xchg
mov
faddp
mov
pop
jge
pop
cmp
psubsw
inc
pop
push
stos
xorl
test
dec
push
sti
jo
mov
in
xor
add
sub
leave
dec
insb
lahf
popf
les
lock
in
mov
xchg
mov
xor
add
fcomip
mov
pop
daa
stos
ret
rolb
ljmp
sbb
lods
out
dec
or
mov
cmp
mov
dec
cltd
out
add
sub
loope
xlat
add
stos
mov
cmp
inc
bnd
jmp
cmovnp
fistpl
jl
bound
ret
push
push
inc
xor
cmp
aaa
leave
ljmp
pushf
aas
lock
mov
imul
cld
mov
jp
mov
and
sbb
cld
gs
xor
sahf
mov
pop
xor
cmp
xchg
clc
lret
sub
loope
popa
scas
mov
outsb
inc
xchg
cmc
lret
sub
inc
sub
stos
scas
jp
repnz
je
pop
jge
icebp
inc
sarl
clc
dec
das
fdiv
sbb
loope
repnz
adc
xchg
fisubrl
dec
pop
cmp
jge
popa
fistps
push
dec
xchg
loopne
lea
and
push
cmp
scas
push
cld
push
rorl
dec
vpsrld
jl
ljmp
sub
dec
xchg
cli
rorb
int3
test
stos
mov
dec
jnp
or
popa
push
inc
shrb
fcoms
imul
jp
mov
das
imul
xor
cmp
pop
jp
cld
jmp
fdiv
inc
or
jmp
cmp
inc
xor
xchg
pushf
mov
cmpsl
loop
lods
lcall
and
inc
mov
inc
fcomps
sbb
lret
xor
xor
push
loop
aas
push
cwtl
mov
test
add
divl
jg
xchg
sub
mov
filds
scas
vpaddusb
mov
push
dec
outsb
mov
jecxz
lds
mov
ja
ret
ds
stos
pop
pop
inc
dec
push
mov
fcomps
movsl
std
repnz
loop
call
js
movsl
jb
mov
mov
psrlw
int3
and
addr16
xor
sub
fbstp
popf
sub
pop
xchg
arpl
aad
xchg
into
jbe
cmc
sti
or
test
sbb
not
mov
mov
fimull
jg
xchg
mov
xchg
and
fsubl
jae
insl
inc
mov
pop
dec
pop
mov
cmpsb
stos
cli
push
aam
out
cmp
xor
repnz
popf
add
test
sbb
dec
xor
je
mov
and
jl
insl
xor
ja
sti
mov
sub
mov
jbe
adc
push
mov
xchg
sbb
xchg
lods
pop
stc
sahf
pminub
cmp
je
addr16
jle
in
push
adc
pop
fidivrl
inc
not
mov
scas
cmc
adc
cwtl
jo
addr16
dec
adc
sti
int3
dec
movsb
xchg
xchg
sbb
call
inc
xchg
xchg
pcmpgtd
pop
movb
cmpsl
mov
test
test
mov
das
jne
stos
add
inc
inc
inc
cmp
xlat
pop
or
pop
stos
dec
fsts
fisttps
pop
lea
arpl
push
cmp
js
lea
xchg
cltd
in
or
scas
adc
mov
sarl
sbbl
mov
mov
pop
inc
or
cmp
lahf
sbb
mov
ja
xlat
orb
int
aaa
add
mov
mov
push
cmpsb
pop
cmp
adc
add
pop
lahf
lods
jns
enter
out
lret
push
ss
imul
repz
mov
lcall
test
sti
mov
loop
push
filds
repz
or
lret
sub
cmpsb
popf
mov
ret
fisubs
mov
cltd
ljmp
iret
or
sbb
add
outsl
in
test
pop
ret
jo
test
outsb
sbb
mov
stos
shll
or
adc
bound
xlat
jno
mov
ja
fidivs
cmp
xchg
jbe
mov
push
pop
lret
loop
mov
scas
mulb
xchg
data16
rcrb
add
add
push
aaa
imul
dec
adc
xchg
dec
or
pop
xchg
out
leave
xor
xor
mov
fsubrs
stos
iretw
adc
and
jge
mov
lcall
mov
sbb
fstl
loope
xchg
pop
xlat
lret
jnp
enter
mov
lods
mov
lea
mov
repz
mov
mov
fisubrl
pop
jg
mov
jbe
pusha
pop
inc
aaa
sub
loop
leave
add
or
push
mov
pop
fwait
dec
mov
ljmp
push
cmp
add
loopne
shr
sti
mov
jb
lds
xchg
pop
out
mov
out
nop
push
ret
xor
and
sti
cmp
jbe
jg
xlat
lahf
dec
and
imul
int3
pop
cmp
adc
loopne
mov
mov
lea
xchg
packuswb
scas
push
dec
and
pop
cwtl
and
pop
or
sub
lret
shrb
mov
fadd
inc
mov
shrb
push
add
ret
shld
dec
outsb
clc
adc
xor
push
jo
out
mov
test
daa
loop
add
push
ja
push
mov
in
pop
sub
fsub
lods
aaa
push
inc
xorb
outsb
jne
pop
dec
adc
in
scas
in
sub
push
jl
pusha
mov
sub
imul
xor
rcrl
or
out
cmpsb
cmp
xor
and
pop
xchg
cld
lock
push
xchg
pop
adc
lret
lcall
pusha
in
inc
mov
mov
leave
int
mov
jb
push
js
popl
lahf
mov
fistl
leave
mov
stos
xchg
jge
clc
xchg
adc
or
jle
in
in
mov
sub
cmovs
add
insb
push
testl
push
jns
testl
scas
xchg
xor
pop
mov
enter
jo
clc
sti
jae
aam
mov
push
sub
and
insb
sub
xor
mov
cmp
pop
fs
scas
in
xchg
fcompl
xchg
test
inc
imul
mov
test
inc
push
call
jno
stc
push
inc
or
dec
insb
mov
movsl
xor
mov
and
stos
out
lret
xor
jae
fisttps
jbe
lret
xchg
stos
inc
outsl
aas
mov
ja
clc
push
cmp
fdiv
int
and
xchg
into
leave
push
idivb
lahf
xchg
inc
jmp
call
stc
shl
lcall
cmpsb
mov
test
push
or
lods
jle
scas
and
stos
inc
bswap
mov
inc
sub
mov
imull
adc
pop
stc
scas
pop
ljmp
in
cmc
es
rorl
push
mov
rcrl
ss
paddsb
cli
popa
into
adc
flds
fidivrs
rclb
inc
push
adc
mov
aad
cmpsb
and
xlat
outsl
es
ret
int3
mov
dec
cltd
lahf
inc
int
loopne
fisubs
icebp
or
or
fisttps
push
xchg
cld
jo
inc
or
iret
outsl
fsubrs
inc
lods
pop
fwait
sbb
push
cmp
adcb
lds
inc
hlt
mov
aaa
js
cli
popf
sub
mov
inc
xchg
ja
xchg
and
dec
es
xchg
mov
or
push
lods
sub
std
into
test
cltd
out
mov
pop
pop
punpcklwd
push
and
lea
adc
int3
cmp
clc
mov
cli
xchg
inc
xchg
sbb
jae
lds
jb
pop
mulps
mov
cmp
adc
aas
jl
jmp
pop
pop
adc
dec
aam
push
xor
loopne
int3
cmpl
dec
jg
add
adc
bound
scas
insb
inc
lret
sti
push
pop
aam
leave
ret
ret
cwtl
push
xor
mov
sbb
sbb
fstl
xor
xchg
pop
imul
scas
out
test
dec
pop
int3
int3
pop
xchg
in
orl
push
dec
sti
in
ror
push
add
addl
loope
les
pop
mov
dec
cmp
popa
loop
sub
cmp
mov
hlt
push
out
test
sbb
orb
fisubl
push
out
fwait
int3
inc
inc
push
push
stos
out
mov
sbb
prefetch
push
fisubrs
fistpll
in
cld
jmp
fcmovbe
inc
push
setg
fstp
stos
mov
dec
div
pop
inc
ret
sub
das
fidivrs
pop
ljmp
lret
and
pop
mov
mov
ret
mov
insl
mov
push
sbb
xor
pop
movsl
std
cmp
mov
cli
inc
icebp
hlt
pop
xchg
lock
inc
fidivrs
pop
fsub
adc
xchg
mov
add
adc
fbstp
xor
mov
mov
cld
or
adc
jle
lcall
cwtl
fidivrs
sahf
adc
xchg
clc
and
out
mov
and
sbb
call
pop
mov
ljmp
cli
daa
and
clc
lahf
sahf
adc
repnz
mov
movsb
jecxz
cmp
test
mov
jmp
fisubrl
jns
stc
mov
xchg
pop
jp
stos
and
and
push
pop
cmc
and
negl
movsbl
pop
mov
outsb
rol
xchg
bound
xchg
ret
lret
mov
lret
xchg
jno
int3
sbb
add
push
fisubrs
shl
das
loop
jne
fcmovb
into
mov
pop
fcomps
je
lock
stc
aad
cs
addr16
dec
call
stos
inc
push
xor
cmpsb
add
imulb
lods
adc
clc
es
fs
push
sbb
fiaddl
mov
xchg
push
push
out
insl
and
psubb
cmp
lods
sbb
popf
sbb
mov
mov
int
test
sub
push
ret
inc
ret
cld
xor
js
mov
push
js
sub
jecxz
les
xchg
je
ja
dec
cmp
inc
test
push
cmpsb
fcmovbe
or
mov
xchg
in
cmp
jo
nop
test
rcrb
std
outsl
in
imul
dec
stos
xchg
mov
and
push
dec
pop
xchg
popa
jno
push
cmp
sub
pop
dec
nop
push
sbb
adcb
divb
rorl
std
sbb
sarb
mov
jge
movb
cmpsl
mov
cld
nop
pavgb
inc
adc
jo
jge
push
pop
dec
popf
cld
enter
repnz
xchg
adc
and
movsb
dec
jmp
jmp
or
cmc
sahf
nop
data16
cli
push
inc
and
inc
sbb
popf
push
pushf
push
xchg
sahf
and
cmc
jmp
hlt
mov
mov
arpl
mov
test
sarl
ficompl
xchg
inc
xchg
imul
cmpsb
popa
pop
xor
dec
mov
outsb
mov
invd
xchg
mov
in
aaa
mov
rcll
cmpsl
iret
outsb
gs
hlt
pop
int3
sarb
dec
fcoms
ds
dec
cli
shl
rorl
jmp
shrb
and
loopne
mov
fldcw
loop
add
dec
int3
sbb
call
data16
shlb
dec
in
imul
push
push
filds
cltd
outsl
mov
dec
dec
mov
xlat
mov
cld
shlb
loop
lock
lahf
pusha
sub
aaa
push
mov
cltd
mov
mov
lahf
dec
aaa
mov
pop
push
jo
repnz
sbb
pop
dec
push
mov
or
pop
jne
inc
out
add
or
popf
cwtl
xchg
fistpl
adc
pop
mov
mov
xlat
push
push
vpshlb
xchg
mov
leave
push
nop
dec
test
add
mov
scas
arpl
cmp
mov
pop
fstpt
ficompl
mov
pop
mov
add
je
popf
and
mov
fadds
mov
std
rorl
mov
cmp
stos
scas
mov
inc
adc
jle
push
lea
xlat
cwtl
enter
push
jnp
xchg
xchg
mov
outsl
aaa
jbe
ret
clc
mov
iret
ds
subl
ja
mov
cld
shr
jle
stc
shl
mov
add
aaa
sbb
xlat
int3
imul
int
pop
inc
outsl
faddl
pop
jmp
cmp
sahf
mov
pop
and
mov
out
xchg
aaa
dec
imul
dec
xchg
mov
nop
mov
cmp
cmc
dec
push
orw
dec
push
testl
imul
mov
mov
push
ja
mov
aad
mov
imul
pop
rorb
pusha
sbb
lret
mov
cmc
ret
inc
je
stos
fmuls
push
mov
stos
xchg
or
push
jb
scas
fiadds
sbb
pop
xor
mov
adc
cmc
jp
inc
movsl
loope
dec
pop
pop
jge
decb
test
out
sub
and
test
inc
push
es
push
jns
push
loop
cmp
xor
daa
mov
mov
std
stos
sarb
xchg
int
std
fistl
xchg
lock
mov
scas
les
cmpsl
insb
lods
fst
ljmp
ret
in
jmp
faddl
sub
dec
scas
push
and
xchg
sahf
sub
cmp
negb
mov
pop
repz
cmpb
inc
int3
stos
xorb
aad
push
std
sarb
enter
xchg
repz
inc
dec
clc
test
mov
mov
mov
xchg
adc
jl
dec
jecxz
push
fwait
stc
outsl
xchg
std
cmp
push
sarb
mov
jno
rcrb
scas
ret
push
cli
cltd
shl
mov
jmp
sti
addl
push
push
push
xor
lea
mov
cs
push
mov
in
pop
fisubrs
lds
mov
std
jmp
outsb
fdivs
push
push
jge
jno
push
stos
mov
movsl
sub
cmp
aaa
mov
test
pusha
ljmp
xor
add
fcoms
xchg
or
es
mov
bound
xchg
insl
sub
cmp
jnp
mov
repnz
cmpsl
cmp
int
mov
lods
push
aad
dec
mov
es
mov
out
stos
mov
sbb
lock
clc
mov
sub
iret
rsm
jae
xchg
mov
ljmp
ds
call
adc
pop
adc
jne
mov
jmp
fs
xor
jl
xchg
jp
mov
and
xchg
daa
cmp
mov
jle
and
into
fs
mov
mov
lock
inc
adc
push
inc
insl
push
insl
stc
jbe
clc
insb
sub
aaa
xchg
lock
jle,pt
push
pop
pop
push
mov
ljmp
push
insb
das
push
decb
int3
out
aas
scas
mov
nop
mov
xor
xchg
fbld
xchg
icebp
mov
repz
pop
imul
loopne
cmp
sbb
popl
inc
xor
or
enter
inc
adc
div
shlb
stos
rorb
push
fildll
fsubr
shrb
loop,pn
jge
fildl
std
dec
mov
push
mov
inc
lret
lock
in
les
je
pop
shll
jle
dec
jbe
out
rolb
dec
movsb
mov
cmc
dec
stc
xlat
jns
arpl
lret
sub
inc
pop
lods
cltd
add
pop
mov
sbb
cwtl
xor
mov
dec
adc
loop
stos
ljmp
add
sti
mov
dec
dec
push
dec
pushf
cmp
jmp
cmc
sti
enter
or
or
fstl
movsb
mov
cli
daa
ds
cld
arpl
jne
xchg
std
cmc
aad
mov
push
sbbl
lcall
xchg
pop
stc
mov
pop
jle
inc
and
ret
cmp
mov
sub
dec
into
sub
test
int3
in
xor
test
pop
mov
aad
into
mov
or
lret
mov
cmp
add
inc
mov
sbb
push
repnz
fsubr
mov
and
in
or
sub
ret
shrl
arpl
jne
xor
mov
ljmp
mov
lahf
inc
xchg
loope
lock
ret
jecxz
movsl
xor
sub
pop
cmp
pop
stos
lret
xor
stos
arpl
test
out
repz
fcompl
push
xchg
mov
pusha
xchg
loop
arpl
hlt
flds
gs
adc
cltd
xor
loopne
shlb
jo
jnp
mov
cwtl
or
rorl
mov
lret
mov
dec
adc
into
mov
hlt
outsl
in
repz
pop
add
mov
mov
adc
mov
stos
lods
out
jnp
imul
daa
mov
sti
insb
dec
leave
or
xchg
lcall
cld
mov
adc
jnp
das
sub
mov
nop
jl
sbb
ficompl
stos
cmp
loop
mov
mov
stos
test
lock
lock
add
jge
sbb
test
sbb
dec
addb
leave
adc
cmp
dec
loopne
es
add
jnp
lock
add
out
mov
movsl
fsubs
mov
fbstp
xchg
outsb
icebp
icebp
jge
test
sub
repz
imul
xlat
jno
ja
xchg
adc
iret
rol
fst
sub
and
xchg
mov
xchg
daa
sub
pop
xchg
push
js
mov
add
ficomps
push
lods
push
or
push
cmpsb
ret
clc
aam
cmpsl
mov
imul
stc
dec
inc
or
out
or
aas
dec
add
push
inc
testb
mov
arpl
sub
sbb
arpl
cmpsb
pushf
xchg
pop
push
inc
call
dec
cmp
pop
in
jne
mov
incb
sub
js
loopne
pop
push
aam
xlat
xor
pop
testb
mov
mov
loopne
insl
cli
xchg
shr
popf
int
leave
push
stos
mov
lcall
and
xor
adc
in
sub
jns
sbb
mov
or
out
or
pop
stc
mov
dec
bound
jmp
add
jne
jnp
mov
sahf
cmp
add
xchg
imul
movsb
dec
or
pop
mov
add
js
dec
lahf
and
sub
mov
in
ret
mov
test
movsb
lret
sub
adc
gs
enter
leave
outsb
lods
fcoml
ret
cmc
mov
mov
mov
je
inc
ljmp
cmp
nop
mov
mov
scas
push
int
addr16
push
bound
daa
movsl
out
xor
jg
insl
jmp
push
and
push
mov
or
mov
stos
in
inc
js
mov
jmpw
mov
enter
int3
out
mov
push
xor
inc
xor
mov
mov
and
roll
dec
rolb
mov
jae
cli
mov
add
sarl
movsl
inc
lcall
sbb
jecxz
jl
addr16
std
add
pop
sbb
xor
mov
jle
shr
dec
mov
bound
scas
sub
jnp
pop
xchg
jmp
mov
cmp
fidivl
sub
into
fldcw
xor
jae
out
imul
mov
lods
dec
pop
stos
sahf
pop
jp
scas
les
hlt
jno
or
repz
fldcw
lds
jmp
je
mov
leave
dec
sbbb
lds
repz
pop
into
out
popf
sub
popw
aas
adc
jl
xlat
mov
adcl
aam
lods
mov
mov
fisttpl
out
int3
xor
jle
mov
cmp
xchg
mov
stos
in
fs
insb
mulb
inc
cwtl
adc
sub
repz
and
pop
mov
mov
or
cmp
jb
stc
rorl
mov
roll
cmp
in
xchg
sti
mov
imul
cmp
jp
out
sub
pop
ja
push
scas
lds
push
gs
adc
stos
sahf
ret
dec
das
push
cli
or
in
cli
ds
out
arpl
add
movsl
mov
add
ja
jle
xor
stos
push
popl
xchg
mov
rorb
push
scas
cmpl
sarb
imull
push
dec
mov
out
dec
mov
gs
inc
adc
aad
mov
xlat
insb
fnstenv
mov
xor
pop
push
xchg
aaa
sti
sahf
push
sahf
pushf
into
adc
jecxz
bound
aam
xor
add
ljmp
mov
push
scas
cmpb
dec
movsl
or
sbb
ljmp
mov
mov
jecxz
adc
and
pop
xor
jo
pop
adc
mov
dec
cmpsl
push
push
dec
push
adc
add
mov
inc
movsb
sub
mov
inc
repnz
test
sbb
ret
lcall
cmp
mov
cmp
stos
hlt
dec
jo
bound
push
rol
jmp
rcr
call
test
std
outsb
fldcw
lods
dec
inc
mov
sub
mov
or
add
sub
sub
mov
cli
enter
and
fisubrl
sti
fwait
insl
pop
mov
cmp
dec
inc
xchg
aam
mov
out
cmp
int
jns
jp
ja
push
jae
jmp
mulb
mov
mov
test
scas
sti
and
cs
sahf
std
pop
mov
mov
mov
sub
in
jg
and
pop
push
jne
mov
push
dec
mov
jmp
pop
jle
fsub
pop
clc
addl
dec
push
jnp
sti
push
aam
jnp
fcmovnbe
ds
enter
inc
pop
test
xchg
xor
in
cmpsb
xor
stos
adc
dec
push
xor
test
out
das
sbb
xor
test
mov
xchg
push
pop
pop
inc
fdivr
cmp
fisttpll
in
dec
icebp
xchg
rcl
jl
sbb
add
mov
xor
sbb
mov
data16
outsb
call
jb
pop
cmp
popa
mov
clc
fldt
inc
movd
cld
stc
pop
ljmp
sub
jbe
pop
ret
inc
shlb
out
insl
sbb
mov
fsubs
jmp
xchg
mov
incb
movsl
dec
popa
out
mov
fdivrl
movsb
sarb
sbb
das
dec
arpl
lock
loopne
and
mov
inc
pop
loopne
mov
cmp
and
ret
stos
lods
mov
and
cwtl
cli
repnz
popf
mov
mull
add
pop
jge
cmpsb
add
movsl
mov
in
cmovae
and
jecxz
sbb
pusha
cmpl
div
inc
sub
repnz
jo
xlat
leave
xor
inc
lods
cwtl
sub
mov
imul
jge
lds
cmp
iret
push
xlat
stos
sub
adc
xchg
arpl
fwait
mov
out
pop
imul
push
dec
cmp
sub
jbe
jle
lds
pop
enter
std
aaa
mov
xchg
mov
das
pushl
in
cld
cltd
shll
push
push
adc
and
mov
popl
daa
sbb
jno
sbb
and
in
sbb
das
or
sub
pop
mov
cmpsl
sub
mov
dec
cmpsl
jne
dec
add
test
pop
xor
ss
sub
jns
rol
adc
push
ss
lds
pop
gs
bound
sub
and
repz
or
stos
inc
cmp
sub
sbb
cld
xchg
inc
nop
jl
testb
add
and
xor
jns
inc
mov
push
mov
cmp
pop
lahf
mov
lea
inc
pop
lcall
xchg
push
xlat
int3
aas
hlt
sub
leave
mov
add
loop
and
aam
pop
jb
adc
icebp
lret
lea
and
int3
and
mov
adc
sbb
sbb
push
xor
xchg
fnstsw
nop
loope
cmpsl
adc
mov
rcrl
jg
cmp
in
stos
mov
popa
mov
gs
ja
inc
imul
inc
movsb
cmp
dec
jmp
std
mov
add
and
ja
adc
dec
rcll
arpl
jle
movb
push
push
add
das
pop
stc
xor
out
push
out
leave
test
mov
nopl
mov
andl
jmp
out
stos
mov
xchg
pop
jge
lcall
xor
cld
xchg
int
nop
cmp
or
mov
lahf
out
lock
add
data16
lret
sbb
bound
mov
mov
test
push
icebp
push
idivl
and
rcl
inc
jns
lret
sbb
hlt
icebp
int3
mov
dec
js
mov
push
pop
jge
ljmp
ds
scas
lds
jnp
fistl
movsl
stos
mov
mov
pop
fwait
sbb
xor
mov
rep
lahf
mov
outsb
jl
mov
and
mov
jnp
test
dec
int3
jnp
repz
ficoml
or
sub
xchg
and
mov
xor
ja
fsub
push
xorl
popa
cmp
mov
dec
mov
fidivrl
stc
and
pushf
jle
push
ljmp
sub
lea
cmp
into
rorb
cmpsl
push
out
lret
adc
cmp
dec
in
ss
pop
int
jl
xchg
jg
test
push
test
mov
scas
fiaddl
or
cmp
in
out
mov
mov
daa
rcl
sbb
fsubr
sbb
cmp
ljmp
jae
and
cmp
xchg
inc
shlb
adc
xor
jecxz
jne
fldcw
negl
repz
addr16
jns
cmpsb
es
mov
stos
test
add
hlt
ss
push
mov
adc
xor
adc
adc
sbb
cmpsl
ss
dec
loope
fbld
xor
sahf
xor
movsl
insl
inc
imul
outsb
adc
add
stos
or
inc
dec
pop
lcall
shll
cmpsb
cmp
dec
mov
scas
dec
leave
add
inc
xchg
test
cmp
push
xchg
jl
call
cld
pop
push
and
push
out
fmul
ret
and
push
or
jae
outsb
lea
dec
icebp
push
iret
push
sbbb
mov
jge
ljmp
ret
and
test
imul
aas
and
popf
or
sbb
rcrl
clc
popa
adc
mov
movsb
imul
scas
inc
or
adc
lods
xchg
cld
pop
pop
inc
sub
movsl
stos
in
mov
mov
push
cmp
les
xchg
fsubrs
push
sub
out
stos
stos
pop
mov
jne
shlb
scas
push
jae
insb
mov
push
or
mov
add
xchg
push
outsb
mov
pop
adc
adc
jb
aas
pop
call
sahf
xchg
adc
xchg
movsb
inc
mov
popf
sbb
inc
in
ret
mov
push
pop
cs
pop
xchg
push
insl
mov
xchg
sbb
jne
repz
add
push
mov
push
iret
fisubs
jne
xor
jecxz
je
rorb
or
in
stc
ds
jae
std
push
ret
push
dec
popf
dec
aas
inc
andl
ljmp
fwait
out
pop
mov
mov
test
std
stos
adc
fidivrl
jae
and
cmp
mov
push
test
loope
lret
push
jg
dec
jg
mov
jle
outsl
add
lahf
aam
nop
push
xor
xor
or
mov
jg
pushf
sbb
scas
dec
stos
sub
loop
mov
arpl
dec
jns,pt
xor
ret
cmp
pop
or
sbb
into
mov
mov
fildll
call
rcll
cltd
xor
addl
sbb
in
imul
cmp
fsts
mov
aaa
sbb
mov
push
jnp
and
lea
jecxz
scas
daa
inc
mov
and
lret
mov
ret
jmp
mov
jge
das
sbb
int
fdivr
inc
fcomi
stos
xor
xchg
out
lahf
adc
test
cmp
test
pop
call
imul
aam
xchg
and
push
inc
jl
mov
sub
or
cmc
cmpl
into
adc
insl
jns
mov
movsl
popf
adc
push
lcall
clc
rol
sbb
aaa
jg
scas
les
shlb
inc
push
pop
xor
stos
dec
sti
push
add
mov
inc
ljmp
inc
and
arpl
mov
aas
jg
cwtl
pop
mov
aad
push
mov
xor
pop
xchg
add
add
xor
jle
sbb
pop
jb
jg
push
push
rolb
lret
adc
notl
sbb
dec
push
push
jb
inc
dec
mov
test
pop
out
xchg
test
fxch
pop
cmp
and
and
mov
lahf
mov
out
mov
lret
sbb
mov
xor
mov
adc
int3
sbb
or
sti
daa
mov
pusha
push
mov
sub
imul
inc
aaa
jg
inc
outsb
les
xchg
inc
stos
insl
inc
fisttpl
daa
insb
xor
mov
dec
ss
popf
push
sub
jae
xchg
out
fcmovbe
pop
movsl
pusha
movsb
sti
das
dec
sub
xchg
adc
scas
test
inc
pop
mov
cld
jae
sti
mov
mov
mov
pop
icebp
fsub
cmpsl
pop
mov
push
fcoml
call
dec
mov
sbbl
test
aas
in
or
stc
ja
rorl
and
out
fst
out
outsb
mov
out
mov
push
insl
inc
aad
ljmp
mov
cmp
or
cwtl
push
fnsave
outsl
push
imul
sbb
addr16
jo
mov
pop
add
aam
mov
sbb
fs
notl
sbb
and
cs
fdivp
xchg
repnz
repnz
push
jl
mov
pop
or
fbstp
fimull
insb
arpl
mov
add
ret
add
popa
push
mov
shll
mov
shl
mov
lds
jb
loop
jmp
push
mov
or
daa
in
or
adc
mov
cmp
mov
sub
fmuls
mov
pop
and
xchg
push
insl
fwait
je
lcall
push
dec
push
shll
dec
xchg
out
roll
dec
inc
loop
test
jne
ljmp
sahf
outsb
jae
push
sbb
scas
fcmovne
dec
push
jae
sub
das
jns
mov
jge
aas
jmp
aas
lahf
nop
mov
outsl
sbb
insb
pop
sarl
subl
ficoml
fst
mov
mov
pop
orl
fdivl
sub
scas
mov
xchg
stos
rolb
sub
aad
pop
aam
jb
or
shl
pop
stos
jmp
and
dec
and
mov
shl
pop
data16
out
xor
mov
push
ds
leave
and
in
and
add
clc
std
fisubs
dec
cmp
dec
mov
mov
mov
sti
mov
int
insb
stc
mov
lret
jecxz
sub
wbinvd
jb
add
xchg
xchg
cs
cmpsl
test
sbb
or
mov
cmp
jo
push
stos
ljmp
jge
xchg
std
push
add
adc
add
lods
lods
inc
push
mov
es
sbb
lsl
pop
and
xchg
lcall
fidivrs
dec
fmul
jae
mov
mov
ret
cld
ljmp
jne
popf
hlt
ds
into
xchg
int3
xor
pop
stos
sub
lcall
and
jecxz
adc
pop
jmp
ljmp
test
xor
ds
addl
dec
movq
ljmp
aad
mov
dec
fisubl
pop
jo
mov
add
xchg
lret
dec
mov
aad
pop
jge
negb
mov
mov
inc
mov
xchg
xor
sub
rcl
adc
sbb
scas
mov
out
andl
mov
je
aas
clc
adcl
jg
movl
jl
push
int3
sbb
sub
lahf
push
inc
cmp
dec
cmpsl
sub
pop
dec
adc
enter
movsl
test
in
pop
adc
rcll
and
inc
out
jb
jns
jne
or
out
ds
push
sbbb
into
cmpsb
popa
mov
mov
rcll
jbe
push
push
into
xorb
sub
outsl
mov
mov
inc
push
cmc
mov
jae
addl
and
mov
sub
pop
out
dec
adc
std
stc
pop
adc
jbe
outsl
sbb
push
ret
inc
sub
test
das
fistl
out
dec
outsb
dec
or
push
fistpll
and
out
pop
icebp
ds
cmp
xchg
push
pop
pop
hlt
test
xor
pop
popf
movsb
insl
push
mov
mov
out
mov
bnd
mov
mov
adc
fcompl
scas
frstor
xchg
fucomip
lahf
xor
std
sbb
int
mov
enter
and
fidivrl
add
cmp
ja
out
sbb
outsb
imulb
or
dec
dec
je
add
add
xor
stc
mov
cmovne
add
stos
pop
pop
gs
mov
inc
imul
mov
mov
jns
ret
pop
cmc
iret
push
cmp
xlat
pop
lret
loop
add
ds
pop
int3
mov
jnp
push
push
out
icebp
mov
xchg
outsb
ljmp
mov
data16
or
pop
imul
insb
dec
push
aam
fxch
daa
dec
ds
push
fstl
jne
xor
xlat
ret
push
mov
sub
sarl
jp
fs
jno
cmc
lret
sub
insl
jle
int
inc
mov
dec
loopne
mov
jle
mov
xchg
jle
lret
imull
adc
mov
lock
repz
lret
ljmp
jp
shlb
inc
stos
lea
sbb
inc
and
cmpsl
fildl
jbe
fdivl
decb
repnz
imul
dec
sbb
sbb
mov
divb
mov
enter
pop
jg
xor
adc
jb
cmpsl
xchg
jns
fidivrl
scas
out
xorb
fildll
jecxz
loopne
pop
fwait
in
xchg
cmc
pop
xchg
mov
mov
lcall
aam
mov
sbb
sub
jle
adc
cmp
shrl
and
sub
cwtl
je
cltd
jo
loopne
jnp
outsl
mov
pusha
into
addr16
ja
mov
pop
div
and
sbb
sbb
std
xor
lods
and
movsb
mov
mov
push
das
pusha
inc
push
shrb
sub
aad
bound
ja
stos
ljmp
xlat
jecxz
add
cmp
pop
xor
in
imul
and
adc
or
sub
xchg
sub
lock
inc
stc
add
out
in
xor
cmpb
push
push
adc
xor
out
xchg
cmp
psubsb
test
sbb
xchg
mov
cmp
data16
int3
flds
ret
popa
lods
ret
adc
sarl
shl
xor
insb
or
jg
loope
jo
jb
ret
fwait
mov
xchg
jge
repnz
xorl
inc
mov
mov
aas
sub
lods
cmp
loopne
pop
push
jge
or
es
adc
mov
push
jo
mov
push
sub
cli
mov
loop
push
mov
ljmp
and
mov
push
daa
repz
push
aad
clc
mov
iret
add
xchg
sbb
mov
push
add
push
jmp
stos
xor
mov
jmp
cmp
mov
test
fildll
pop
mov
insl
pushf
lret
push
movsb
lahf
mov
jne
ss
sti
pop
in
push
fistpll
inc
add
fisttpll
lahf
out
jae
or
insl
test
stc
mov
pop
loope
js
ficomps
cmp
adc
decb
sub
fisttps
leave
push
dec
sbb
iret
shll
jecxz
push
cld
cmc
les
clc
pop
mov
fsts
pop
divl
or
sub
leave
je
rorb
out
lfs
lods
test
fidivs
scas
das
iret
xor
sbb
push
mov
scas
jae
rcr
pop
das
inc
push
mov
adc
ret
pop
mov
xchg
pop
cltd
push
inc
mov
xor
adc
sbb
dec
or
leave
xchg
out
inc
call
mov
loopne
and
jnp
inc
bound
negb
std
sbb
pop
cmp
cmpsb
and
cs
pop
sub
pusha
push
cmp
out
jecxz
out
sbb
dec
dec
sarb
sub
jo
sti
fidivl
dec
xchg
daa
xchg
cmpsl
jge
imul
pop
lods
das
inc
xor
outsl
stos
push
rsm
mulb
stos
fstl
push
gs
repnz
jns
popf
repz
mov
push
icebp
cmp
xorb
addr16
push
jle
outsl
loope
loopne
fdivl
sub
mov
pop
subl
andb
bound
add
mov
repz
fidivrl
lea
sbb
dec
dec
xor
or
inc
aad
and
stos
adc
mov
sbb
shlb
push
dec
and
mov
addl
adc
jg
pop
fwait
ret
gs
mov
xchg
lods
sub
mov
lods
mov
jp
jnp
push
jl
ret
pop
xorl
movsb
imul
mov
sbbl
je
mov
in
std
cmc
mov
js
dec
dec
cmpsl
stos
jecxz
cld
cmp
xor
or
clc
cmpsb
inc
mov
mov
scas
xchg
mov
pop
mov
push
mov
cwtl
or
out
fimull
add
xchg
lret
xchg
inc
mov
or
in
movsl
dec
jg
mov
test
mov
dec
lcall
outsl
and
les
mov
inc
shrl
xchg
jno
lds
aam
dec
xor
mov
inc
lea
cld
ds
adc
cmp
jge
pop
cmc
pusha
or
push
adc
mov
cld
dec
pop
negl
rcl
addb
xchg
push
cmp
cld
sbb
js
cli
cmp
pop
out
jo
pop
lock
xchg
xchg
mov
cltd
xchg
jbe
mov
iret
push
push
cwtl
cmp
aas
aam
inc
inc
imul
clc
jl
stc
mov
addr16
cvttps2pi
aaa
push
jno
mov
das
std
mov
clc
sub
rorl
xchg
in
pop
xchg
fiadds
pop
scas
ret
xor
push
mov
inc
ret
scas
pop
scas
adc
aas
fistpll
dec
pop
movaps
out
xor
xor
and
push
fstps
xchg
jmp
add
jg
jp
in
inc
dec
pop
fwait
dec
sub
sarb
dec
fdivr
in
jg
addr16
xchg
pop
cs
mov
jge
sti
xor
jle
push
adc
pushf
pop
mov
cltd
cs
pop
push
mov
mov
inc
lret
or
icebp
loopne
call
adcb
pop
push
stc
scas
in
mov
repnz
in
xchg
pop
test
into
icebp
dec
scas
jnp
repnz
adc
xor
das
pop
push
inc
and
pusha
pop
cltd
je
or
push
and
aas
mul
loope
aad
mov
in
jns
out
xor
push
jns
je
shlb
sub
insl
or
and
cmovge
test
cmp
gs
pop
mov
or
aas
pop
mov
into
xchg
push
push
test
sahf
pusha
cmp
out
jb
fwait
mov
xor
mov
cmp
lock
sub
std
xor
mov
outsb
jg
dec
popa
outsb
in
int
test
imul
mov
mov
int
aas
mov
stos
sahf
mov
inc
or
or
sbb
aam
iret
adc
out
cmp
aas
mov
sti
and
mov
jne
lret
xor
stos
out
ss
push
leave
je
repnz
fs
xchg
es
insl
push
jns
push
dec
repz
leave
mov
jle
jno
vxorps
xchg
sub
rol
cmp
js
fnstenv
ret
jl
jecxz
filds
xor
push
lods
loop
mov
adc
mov
push
jo
xchg
lea
or
out
lcall
xchg
adc
jle
adc
or
inc
xchg
and
imul
or
jmp
lods
cld
and
adc
dec
push
pop
lahf
jge
lcall
mov
cli
ja
and
mov
xchg
or
dec
idiv
jmp
jbe
subb
dec
sub
pop
inc
int
loop
ret
shrb
inc
test
cld
push
std
inc
pop
cmp
and
or
mov
fidivrl
add
not
dec
push
mov
jno
call
lret
or
sub
mov
lods
jae
movsl
into
in
fdivrs
hlt
les
pop
mov
shrl
push
xor
lock
sub
xor
push
xorb
stc
mov
mov
cmp
les
jnp
dec
outsl
push
jmp
popl
sub
dec
cmpsb
xor
pop
daa
push
cwtl
push
adc
out
shll
inc
or
mov
dec
jg
out
mov
rcrb
push
ljmp
mov
fstp
mov
dec
lods
int
pop
and
xlat
dec
stos
imull
arpl
sbb
mov
mov
xchg
xor
repnz
je
jae
dec
inc
pop
cwtl
outsl
aas
pop
jmp
pop
mov
mov
lret
mov
jb
push
mov
sub
in
mov
mov
scas
psllq
test
sub
ja
mov
fcompl
mov
jmp
outsl
popf
out
inc
pop
mov
dec
daa
mov
aaa
shlb
js
and
mov
sub
gs
pop
leave
dec
adc
add
pop
stc
clc
fs
dec
mov
clc
or
add
sbb
jbe
pop
sub
hlt
jp
dec
jl
flds
xchg
adc
sub
mov
and
jae
or
es
test
aam
mov
test
xor
and
negb
or
dec
mov
push
roll
flds
in
hlt
dec
lahf
inc
fucom
movl
jle
push
cld
inc
xchg
out
lret
cs
adc
aas
lods
sub
sub
jno
pop
mov
je
pop
mov
das
fs
lret
inc
push
push
xchg
sahf
sub
mov
scas
adc
imul
cmc
push
push
fimull
notl
jecxz
sbb
sbb
movsb
and
out
xchg
test
hlt
fcoms
sbb
or
aaa
mov
rclb
stc
cld
sub
adc
lret
mov
jae
add
sub
repz
jno
sti
test
inc
sub
out
xchg
mov
mov
cmc
aas
mov
adc
dec
adc
and
addr16
repnz
es
dec
pop
add
xchg
outsb
loop
jnp
xlat
jae
push
in
lock
shr
repz
aas
cld
aam
sub
insl
iret
jno
jle
push
rcrb
out
mov
imul
fwait
dec
mov
lea
sbb
adc
repz
loopne
shlb
test
js
cmp
cmpsb
pop
sar
sbb
push
mov
out
and
fisubrs
push
lea
ror
loope
xor
out
sub
stc
sbb
jp
cmpsb
mov
mov
dec
jle
fcoms
sub
ds
jle
sbb
inc
mov
dec
sar
rcll
jno
int3
and
outsl
xchg
test
gs
cmpsb
mov
lods
dec
out
es
movsl
adc
ret
lahf
fldl
nop
jo
xchg
xchg
pusha
push
stos
or
icebp
cmovne
or
loope
out
lret
clc
jmp
call
mov
mov
pop
jns
and
iret
jg
mov
xchg
out
mov
adc
dec
jnp
push
sub
push
pop
bound
fdivs
add
lahf
testl
mov
cmp
movups
scas
das
insb
inc
sti
mov
lret
add
subl
pop
movb
rorl
sub
push
fists
out
ja
imul
lods
test
fidivrl
cli
xor
sbb
mov
dec
pop
cmp
xchg
cs
and
lods
scas
inc
in
mov
xor
pusha
fistpl
jmp
mov
out
adc
push
scas
int3
mov
dec
sti
mov
adc
faddp
jg
and
pop
adc
lea
xchg
fists
mov
ljmp
mov
xor
sti
mov
add
cmpsl
inc
xchg
xchg
cmp
inc
pushf
push
and
aam
cwtl
jecxz
shlb
lret
sub
rcl
push
xchg
xchg
mov
lds
pop
pop
test
sbb
loopne
pop
xchg
jecxz
cmp
jp
push
lret
push
push
xorl
mov
pop
pop
mov
sbb
call
popa
sub
jge
cmp
loopne
rorl
clc
stc
iret
pop
pop
push
sbb
jl
push
sar
insl
aad
pop
and
xchg
push
movsl
xchg
jb
mov
xchg
lods
out
xchg
sbb
ficompl
stos
mov
ds
cmp
push
adc
scas
push
or
mov
stos
sbbb
es
push
push
nop
jb
ja
inc
dec
pop
negb
out
mov
add
mov
test
push
add
stos
xchg
loopne
fisubl
sub
cld
push
loopne
loopne
repz
sbb
repnz
lds
inc
out
push
sub
sub
outsl
ja
pop
mov
or
pop
mov
mov
adc
jl
imul
subb
xor
cltd
pop
test
scas
test
enter
push
fidivl
daa
pop
push
dec
fsubrl
mov
cli
mov
cltd
hlt
cmp
pop
test
fidivrl
lds
push
andl
hlt
jb
pop
insb
jge
dec
clc
js
mov
adc
mov
shlb
test
stos
pop
fcomip
push
inc
int
sbb
ret
mov
clc
and
jne
loopne
lds
sbb
mov
sti
pop
inc
pop
push
dec
sub
mov
ret
dec
popa
inc
xor
fadds
or
push
outsl
sahf
push
xchg
mov
data16
dec
lret
repnz
test
adc
gs
mov
pop
lcall
push
jmp
test
push
xor
push
loop
mov
pop
adc
xor
jge
add
pop
mov
mov
je
loopne
pushf
sub
mov
pop
mov
jo
clc
xlat
mov
insl
pop
jecxz
clc
pop
loop
int
push
xlat
orb
iret
sub
mov
pushf
data16
fimull
outsb
dec
mov
stos
jle
negw
or
jbe
dec
push
xchg
pop
mov
xor
ds
ljmp
sub
fsubs
inc
std
testb
fcmovbe
clc
fs
in
xor
jne,pn
inc
mov
jmp
lahf
mov
inc
rorb
push
xchg
out
lods
out
jns
and
hlt
and
imul
fistps
gs
in
mov
push
negb
jecxz
stos
mov
dec
mov
adc
sub
xchg
loopne
sub
popa
xchg
lret
mov
out
ret
into
jmp
test
xchg
cmp
repz
jp
xor
out
mov
sub
int3
jne
lcall
jecxz
xchg
xor
mov
jne
sub
aas
jne
lock
push
idivl
das
in
cmp
mov
movsb
aam
lods
dec
imul
mov
inc
movsb
loope
pop
nop
int
sbb
mov
in
pop
pop
cmp
lcall
add
cmp
add
jne
lahf
inc
mov
js
xchg
jle
pop
cs
inc
sbb
mov
pop
sbb
sub
ljmp
cli
addb
cmpsb
call
mov
in
push
movsb
pop
mov
xor
adc
push
cmpsb
ljmp
jae
lods
icebp
sub
and
arpl
jle
aas
maxps
mov
sbbl
mov
jmp
stos
ficoms
push
inc
cwtl
mov
sarl
repz
push
push
push
pop
cmp
popf
add
xor
jb
jb
bound
addr16
enter
fcmovnbe
clc
sub
sbb
jmp
ds
pop
stos
jmp
loopne
sub
pop
mov
lods
popf
aaa
adc
add
in
mov
jns
mov
data16
lret
or
insl
xor
dec
sub
roll
scas
sbb
sti
pop
fsubr
ret
mov
cmpsb
stos
xor
sub
dec
mov
sub
cmpsb
jne
hlt
cmp
sub
cmp
sbb
jle
or
and
cltd
stos
rcrb
mov
inc
lock
pop
cmpsl
pop
arpl
mov
into
clc
mov
and
out
ljmp
mov
sbb
xchg
xlat
push
test
inc
pop
movsl
push
cwtl
cmp
jecxz
add
ds
pop
jne
in
out
lret
loop
lods
pop
loope
in
lret
pushl
mov
pusha
mov
add
pop
scas
ljmp
movsl
xchg
js
movsb
sbb
mov
cmp
xchg
repnz
icebp
ljmp
pop
mov
pop
push
push
es
push
jbe
aas
dec
cmpsb
subl
jnp
in
arpl
jno
add
mov
out
mov
decb
sub
jno
mov
pop
jl
fmul
cmp
out
mov
adcb
or
lods
push
leave
outsb
mov
pop
mov
loop
jnp
lods
add
mov
aad
mov
xor
fadds
cmpsb
stos
jne
push
push
mulb
xor
cmpsb
lds
sbb
lcall
pop
sub
jle,pn
loope
lcall
scas
mov
adc
mov
jmp
je
fstpt
xor
sbb
outsl
in
mov
scas
sti
xchg
ja,pn
xor
jne
jae
mov
imul
cld
scas
cmp
clc
or
mov
repnz
movsl
bsr
pop
xor
mov
repnz
mov
pushf
pop
mov
fimull
lods
sub
and
std
inc
push
movsb
ja
jg
test
jo
fidivl
mov
sub
je
xchg
scas
in
dec
cmp
ds
lods
fiaddl
cmc
dec
push
adc
xor
lcall
daa
lea
test
ja
push
mov
xor
je
jns
inc
xchg
movsb
mov
pop
push
mov
mov
mov
ret
cwtl
mul
stos
sar
insb
jl
jns
shlb
movsl
loopne
into
in
dec
mov
ds
xor
lods
hlt
in
or
add
inc
call
mov
jno
mov
pushf
ja
inc
cld
fdivrs
imul
adc
mov
data16
xor
dec
mov
sbb
out
inc
aad
sbb
inc
hlt
in
nop
mov
lret
subb
sahf
popa
sbb
call
or
jmp
mov
loopne
in
adc
mov
mov
in
in
xchg
fistpll
mov
sbb
mov
sbb
mov
inc
inc
cmp
std
sbb
aaa
outsl
dec
dec
lret
pop
rcl
ret
push
je
mov
cmp
xlat
lcall
push
cwtl
inc
jnp
fbstp
mov
mov
jb
out
lcall
and
insl
mov
sahf
movsl
pushf
lods
in
mul
out
mov
adc
add
ret
cmpsl
cmpsb
xor
dec
pusha
fwait
cmpsl
ss
mov
pop
lods
repnz
push
sub
nop
sbb
call
push
cwtl
outsb
arpl
jle
mov
pop
stos
xchg
add
mov
cwtl
lea
xor
stos
or
lods
xor
push
jp
push
cmp
stos
mov
int
jge
xor
les
push
loop
push
cmp
push
xchg
sub
jns
inc
mov
push
push
and
jb
js
sub
cli
fisttpl
clc
iret
jo,pn
mov
mov
test
jbe
push
pop
out
push
rol
fwait
xor
dec
jns
sub
icebp
movsl
cmp
movsl
fsubrl
sub
fcomps
js
inc
mov
dec
and
xchg
jg
aaa
push
mov
jbe
cmp
mov
inc
jmp
nop
icebp
divb
dec
out
mov
call
jbe
std
or
subl
mov
mov
xchg
sbb
scas
sti
push
cmc
subl
jbe
scas
orb
dec
mov
sub
outsb
dec
inc
jae
stos
xchg
cmp
scas
add
cmp
mov
shrb
rcrb
jae
lcall
lods
lahf
or
sub
sbb
outsl
pop
out
cwtl
outsl
out
adc
test
popa
int
sbbb
lock
rorb
repnz
pop
push
scas
inc
jns
out
jns
ror
dec
lea
sub
sbb
lret
cs
pop
lds
js
ljmp
jbe
repz
lods
cmp
jmp
dec
sub
add
insb
cld
mov
cli
jno
outsb
ljmp
jl
and
rcl
pop
call
loopne
in
test
xor
insb
and
cltd
jb
cmp
addr16
fsub
cmpsl
pop
fucomip
sti
or
int
xchg
xchg
xchg
pop
loop
jl
mov
inc
pusha
std
xchg
push
pop
outsb
clc
mov
scas
fdivs
stos
jl
test
xor
add
push
clc
lcall
out
jbe
push
test
fcompl
in
outsb
lea
mov
pop
je
adc
add
ss
sbb
movsl
mov
iret
icebp
inc
loopne
inc
rcr
sbb
fucomip
mov
stos
and
dec
leave
xor
cmp
test
jg
stc
xor
shlb
xchg
sub
testl
loope
into
insl
jg
mov
jb
and
push
dec
and
xchg
call
jp
fwait
dec
out
xor
push
push
jmp
cmp
push
push
ss
sub
scas
out
bound
sub
jle
shll
push
jmp
sub
push
push
es
sub
pop
dec
clc
int3
dec
sbbb
push
lods
imul
mov
xchg
lods
cmpsl
dec
jp
aaa
push
jmp
adc
push
pop
lds
movsl
aad
subb
xor
sbb
loopne
xchg
mov
sbb
idivb
fisttps
les
dec
insl
les
mov
scas
mov
inc
push
inc
mov
iret
cmp
or
dec
idivb
inc
xchg
push
xchg
cmc
dec
cld
iret
mov
dec
mov
mov
xor
fs
or
out
outsb
or
lret
jno
jnp
push
sub
test
jb
out
cmp
cmc
out
aas
jl
cmp
jg
sbb
mov
pop
jns
outsb
clc
mov
add
aas
jb
decb
sub
ret
xlat
in
jno
or
ret
add
sbb
scas
lret
xor
movsl
stos
inc
dec
addr16
push
or
or
push
ss
icebp
in
in
das
mov
pop
fwait
push
fbstp
pop
ret
jns
dec
mov
adc
cmpsl
out
fcmovnbe
inc
xchg
xchg
stos
pop
and
xor
stos
pause
xlat
mov
shll
xchg
pop
dec
scas
xchg
clc
loopne
pop
outsb
ds
test
adc
mov
out
lds
out
and
clc
sbb
ret
push
jb
jns
xlat
pop
or
mov
add
adc
xor
iret
pop
or
xor
jl
mov
insl
jge
test
out
lds
bound
adc
std
push
pop
mov
bound
ja
xchg
push
stos
pushf
or
sbb
jl
mov
mov
loope
scas
push
es
test
jns
jne
adc
xor
add
jmp
hlt
cmp
outsl
cltd
inc
ljmp
pop
mov
inc
adc
shlb
pop
pop
or
dec
leave
adc
int3
std
dec
and
and
cs
fs
mov
popl
outsl
or
add
ret
movsl
or
inc
dec
incb
cmpsl
outsb
add
mov
lods
pop
or
push
out
or
pop
leave
gs
and
xchg
mov
pop
cwtl
stos
dec
push
jp
ss
xor
xchg
xor
lret
pop
lods
xor
mov
xor
xchg
pop
scas
or
gs
or
shl
and
push
mov
test
mov
xchg
loop
jne
pushf
xchg
popa
and
push
ja
gs
pushf
aas
test
inc
or
sti
xchg
mov
or
ret
pop
pop
sbb
dec
push
sbb
dec
mov
fisubl
lds
fidivrs
out
es
mov
or
jne
xor
stos
mov
sub
pop
out
lahf
xor
pop
ja
dec
mov
clc
aaa
add
cmp
inc
and
sti
clc
les
add
in
das
mov
mov
in
inc
jecxz
sar
cs
stos
or
aaa
push
mov
scas
hlt
add
out
xor
pop
mov
jecxz
mov
pop
pop
into
add
mov
int
stos
stos
dec
mov
push
paddb
inc
mov
je
dec
mov
jmp
ljmp
ret
cmpsb
lock
mov
rolb
xlat
pop
add
mul
andnps
loope
xor
mov
push
sub
insl
inc
or
insb
sub
push
ljmp
jle
add
test
ret
xchg
dec
jmp
mov
call
call
loop
inc
cmp
push
pop
loopne
fidivs
push
jae
or
fsubr
jmp
lds
int3
jns
push
mov
xchg
mov
in
loopne
aam
xor
mov
fistl
inc
mov
cmp
xlat
aam
push
ror
shr
iret
xlat
popa
sbb
jno
push
fldenv
xor
cli
and
lods
pop
adc
rclb
sbb
xchg
jnp
mov
and
stos
jl
test
cld
xchg
xchg
jo
ret
xchg
mov
in
push
cmp
or
and
repz
out
inc
and
jle
jge
xchg
xchg
clc
enter
arpl
cmc
mov
orl
in
loopne
push
scas
or
sbb
int
xchg
loop
lret
cmp
fcoms
cld
imul
adc
jmp
cmc
jl
push
cmp
outsl
shll
shll
mov
inc
rclb
test
out
cmp
clc
xchg
push
js
aad
cmp
dec
xlat
mov
or
xor
sbb
lods
faddl
ljmp
pop
cld
sbb
inc
inc
mov
stos
cmp
dec
xor
xchg
imul
out
aam
cmp
dec
mov
pop
enter
daa
outsb
test
movsb
stos
xchg
sub
jns
int3
mov
pop
sub
lds
jl
mov
rcll
pop
mov
mov
sahf
pusha
imul
mov
inc
or
sarl
lods
fs
mov
sti
ja
push
adc
xlat
icebp
jb
sbb
popf
mov
lea
fs
adc
or
jb
mov
mov
jbe
out
jp
clc
test
jle
jecxz
bound
pop
movsb
lods
cmp
xchg
outsb
cmpsb
movsb
lods
jbe
js
out
add
adc
in
mov
cli
dec
cmpsl
dec
add
mov
push
test
cmp
lahf
xchg
push
xchg
adc
jle
pop
pop
imul
bound
sbb
lods
pop
xlat
lods
cmc
lret
jns
fbstp
test
shlb
and
fcmovne
sub
jns
icebp
lods
in
dec
leave
sub
mov
cli
xorl
fnstsw
jle
outsb
fbstp
ss
xor
sub
add
notl
test
aaa
je
mov
inc
add
jmp
out
and
leave
xor
add
dec
inc
xchg
test
xor
mov
mov
ds
push
inc
roll
lret
mov
in
push
or
mov
inc
syscall
mov
bound
sarl
aas
aas
icebp
pop
xchg
dec
lods
xlat
mov
cmp
jl
clc
popa
sub
cmpsb
pop
cs
xchg
shl
mov
dec
inc
movb
add
jp
or
cmp
test
adc
cmp
test
push
jmp
cs
in
xchg
es
scas
mov
push
test
lret
popf
cmpl
add
jl
sar
fsubl
notb
imul
sub
addb
rclb
lds
pop
dec
popf
shrb
addr16
mov
push
xchg
sub
insl
je
and
inc
sahf
mov
pushf
adc
inc
shrb
and
gs
test
out
pop
es
mov
sti
sub
inc
adc
orl
ret
clc
stc
and
test
aad
mov
mov
or
dec
scas
jne
notb
call
and
jp,pn
fistpll
sub
shlb
inc
ret
cld
test
dec
jp
xlat
and
mov
out
push
dec
pop
pop
adc
pop
aaa
shrl
nop
loope
jne
stc
dec
movsb
dec
cmc
adc
jae
imul
scas
mov
xor
or
mov
jno
mov
push
ja
or
jp
insl
add
imul
call
xchg
cltd
cmpsl
add
push
rol
lret
popa
or
mov
fcoms
mov
shrl
les
pop
xacquire
cli
std
rcll
mov
pop
ljmp
xchg
mov
sub
adc
mov
jne
pop
adc
inc
jne
in
xchg
xchg
in
mov
mov
popf
pop
shlb
aad
fsubr
loope
xchg
mov
jno
cmc
test
inc
xchg
popf
sub
inc
jg
mov
adc
pop
stos
aaa
push
jg
sti
mov
pop
xor
in
nop
imul
or
mov
jp
jmp
cmp
adc
imul
les
enter
pop
pusha
bound
sahf
adc
pusha
loopne
dec
lret
pop
cmp
lock
subl
pop
push
shlb
dec
or
js
add
enter
pop
jae
aas
inc
loope
xchg
insb
int
orl
int
pushf
or
cwtl
cld
mov
vmovaps
lea
mov
jnp
cwtl
push
mov
daa
shl
inc
pop
pop
aas
stc
popf
stc
rclb
sahf
mov
mov
push
movsb
push
sub
jbe
scas
ss
and
ljmp
pusha
sbbl
rol
mov
int
mov
sub
mov
mov
mov
pop
mov
aaa
repz
loopne
inc
hlt
dec
add
sub
dec
mov
shrb
or
loope
fistl
or
and
std
lret
jb
cli
mov
or
inc
mov
aam
aam
jno
jmp
sbb
clc
pop
inc
mov
jmp
xlat
cltd
mov
add
xor
pusha
mov
jl
sti
dec
mov
jns
mov
and
cmp
jmp
mov
popa
movsb
stos
out
push
fwait
icebp
xor
in
push
movb
stos
mov
aam
sbb
inc
xchg
push
mov
push
rcl
adc
decl
bnd
pcmpgtb
xchg
loopne
in
xchg
daa
mov
xor
pusha
shl
rep
xchg
lret
movsl
xchg
sub
pop
mov
ja
adc
movsl
dec
pop
movsl
jae
arpl
popa
cmp
lods
aad
xchg
loopne
mov
sub
cmp
aaa
cs
inc
pop
mov
test
pop
ljmp
or
scas
pop
mov
inc
mov
mov
mov
out
pop
mov
stc
sub
xor
fildll
xor
test
mov
in
sub
pop
or
shl
inc
mov
aad
mov
shr
dec
cmp
mov
sub
adc
xor
aas
jns
xchg
xor
dec
lret
shl
jg
jg
into
add
arpl
enter
mov
sub
fisttps
mov
adc
push
inc
sbb
stos
vmwrite
pop
push
xchg
les
xor
mov
mov
sub
mov
testb
subl
sbb
pop
push
pop
pop
push
fucomip
jp
insb
xchg
xchg
sub
push
mov
addl
lea
xor
mov
in
or
pop
xchg
xchg
pop
push
push
xlat
mov
leave
jbe
popf
adc
out
jnp
xor
sub
fucomi
cmp
xchg
movsl
mov
jl
out
push
add
int
cld
push
push
mov
mov
push
inc
cltd
xchg
fcomi
in
inc
popf
adc
addr16
jnp
scas
jbe
idiv
push
mov
ja
inc
daa
loope
out
ljmp
jp
sbb
adc
lret
imul
insl
or
inc
out
mov
data16
repnz
pop
lods
into
xor
bound
push
out
sbb
jg
xchg
and
das
fwait
xchg
xor
or
addr16
pop
repz
sti
jecxz
and
int
es
mov
xor
dec
test
sbb
jecxz
dec
push
imul
sbb
mov
xor
rcrl
inc
pusha
leave
mov
mov
mov
out
inc
pop
dec
or
fbld
shr
jne
ja
push
add
loop
dec
adc
ffree
inc
mov
stos
imul
das
int
ret
mov
out
xchg
icebp
xor
sbb
scas
xor
push
je
test
loop
stc
or
scas
inc
ljmp
mov
add
dec
mov
jle
pop
repz
add
mov
dec
dec
rorl
xchg
sub
jbe
pop
cmpsl
insl
cmp
lcall
sub
out
icebp
sarb
mov
popa
lock
imul
sbbl
icebp
sub
fcoml
pop
imul
adc
popl
sub
into
sub
sub
ds
pusha
fcmovne
xor
xchg
repz
mov
mov
shld
outsb
jae
in
test
dec
adc
sub
sbb
push
scas
xchg
and
pop
fiadds
pop
pop
jge
ffreep
ljmp
es
icebp
push
movl
jb
mov
adc
insb
dec
xchg
and
mov
xchg
dec
lock
jmp
inc
std
add
adc
mov
cmp
in
data16
fdiv
loope
mov
jb
pushf
pop
shrb
ja
fsubp
out
rcrl
popf
lock
stc
je,pn
ret
jmp
lods
push
mov
pop
arpl
pusha
lret
jne
lods
inc
lss
scas
cmp
fstpt
sbb
xor
test
push
aas
xchg
lods
xor
pop
push
push
ret
push
add
pop
push
jp
ljmp
divl
sub
stos
and
ret
dec
push
sub
jp
aam
aad
jae
cltd
int
push
jbe
mov
and
cmpsl
jmp
aad
adc
decb
add
gs
aad
pop
aaa
fisubrl
pop
rcl
dec
or
cld
mov
mov
jae
cmc
pop
or
popf
movl
inc
sub
scas
stos
pop
out
xchg
push
pop
mov
ds
frstor
cmc
mov
jge
aam
mov
mov
xchg
cmpsb
xchg
mov
clc
ds
dec
ja
push
pop
test
sbb
aas
loope
push
mov
dec
cmc
jns
ds
fsincos
cmp
aaa
push
mov
push
mov
xchg
inc
mov
mov
out
stc
dec
mov
push
dec
cmp
jecxz
call
inc
jmp
and
ret
xchg
ljmp
lea
je
outsb
arpl
sti
out
and
xchg
jecxz
cltd
dec
sub
leave
outsb
dec
pop
pop
fdivs
pushf
xor
cmp
adc
mov
pop
leave
jecxz
in
sub
mov
xor
push
mov
cli
mov
mov
cmp
out
ret
cmp
xor
sbb
cmpsl
bound
stos
push
pop
daa
inc
in
test
or
mulb
xor
cmpsb
cld
pop
daa
xchg
sbb
das
insb
inc
inc
jne
push
cmp
call
xchg
xchg
pusha
stos
pop
call
xchg
or
insl
not
test
pop
cmp
xchg
inc
aas
movsl
jne
xchg
dec
sbb
mov
lret
cmp
inc
rcr
inc
dec
mov
loope
in
loopne
cmp
mov
jno
les
daa
xchg
push
aas
dec
pop
push
xor
jg
mov
add
fstpl
mov
inc
mov
rep
scas
pop
std
dec
sbb
cli
cltd
adc
mov
mov
aad
imul
xchg
xchg
lock
movsb
inc
sbb
push
sbb
jle
pop
sbb
mov
pop
cmp
into
cmpsb
pop
mov
sbbl
loop
mov
rcll
mov
stos
je
mov
outsb
aad
xor
xchg
jae
ss
mov
push
inc
or
test
push
scas
sub
add
iret
imul
xchg
inc
aad
xchg
jae
lods
scas
xlat
aas
inc
lods
fnstenv
cmc
lock
shlb
lea
xor
enter
pop
sbb
jb
sahf
inc
jbe
lret
mov
mov
loop
jnp
and
repz
fistl
adc
jg
lahf
mov
cli
xor
stos
jnp
pop
push
pop
mov
push
xor
and
fistl
and
ficoml
inc
mov
or
inc
neg
lods
pop
out
and
stos
inc
cmp
ficoml
add
stos
xchg
fnsave
and
scas
cmp
insl
hlt
sub
xor
push
push
or
mov
les
inc
aam
or
cmp
repz
dec
inc
mov
sahf
sahf
lock
shll
leave
fnsave
inc
lea
test
or
cmp
loopne
jns
bound
push
fimull
jno
mov
inc
fst
int
sub
xorb
orl
mov
dec
aaa
xchg
xor
adc
out
test
pop
clc
test
mov
dec
int3
lock
lret
sbb
mov
ret
jl
callw
imul
cmpsb
in
fs
fidivrs
dec
out
add
mov
xchg
mov
xchg
mov
and
push
pop
test
pop
add
pop
push
push
test
popf
mov
shrb
icebp
les
cmpsl
out
sub
insb
jg
fnsave
mov
sub
ret
pop
nop
mov
cmpsl
cltd
sub
pop
jae
ficomps
xor
in
movsb
int
incb
test
das
call
repz
sbb
cmp
aad
sbb
pop
mov
rorb
hlt
jl
lods
mov
mov
aad
dec
pusha
mov
jp
mov
aas
iret
push
push
icebp
xor
cmpsb
or
movsl
push
or
test
fdiv
jle
push
jecxz
pop
cmp
xlat
inc
insb
dec
lea
inc
hlt
test
xchg
push
inc
imulb
jecxz
pop
add
pop
adc
pop
pop
lods
xor
adc
popf
inc
in
xchg
notb
jnp
jge
xor
ljmp
push
mov
rorl
ljmp
movsl
push
pop
leave
xchg
ret
dec
mov
push
out
mov
outsb
xchg
mov
jmp
sub
jecxz
outsb
je
ret
dec
mov
lds
fucomip
push
es
mov
sbb
ljmp
int
sbb
xlat
jg
in
out
mov
xor
loop
push
ret
xchg
in
or
loop
aaa
fs
cs
inc
sti
iret
adc
ds
call
push
xor
lea
and
xor
pop
js,pt
fbstp
jecxz
add
xchg
jae
rorl
sbb
ret
mov
das
sbb
push
hlt
mov
jno
sbb
lds
mov
pop
jmp
xor
mov
mov
adc
jb
mov
int
xchg
or
movsl
jb
push
stos
cs
lret
lret
push
sbb
subl
js
test
xchg
jp
imul
mov
mov
add
cmpsb
xor
in
prefetch
pop
pop
jne
dec
jle
imul
jns
mov
pop
cld
adc
dec
cmp
je
push
inc
push
push
jg
loop
cli
jl
mov
adc
mov
dec
push
rcr
loope
push
arpl
jg
mov
nop
pop
xchg
incb
out
push
xor
ja
insl
jmp
das
leave
call
ljmp
fldt
cli
cmpsl
xchg
cli
insb
movsb
hlt
ja
mov
cmc
sub
scas
imull
dec
call
cmpsb
sbb
mov
pop
xlat
lock
pop
mov
push
pop
mov
je
cmp
lock
push
mov
scas
mov
insb
clc
xor
xchg
jnp
or
or
dec
bound
cmp
mov
jmp
xor
popa
jo
mov
cmc
pop
or
push
out
out
ja
bsr
enter
shrl
lock
mov
cmp
jge
mov
cli
stc
jbe
int
aas
jo
cwtl
mov
scas
shr
adc
loope
imul
adc
in
mov
out
mov
or
enter
inc
push
add
data16
aad
out
decl
popa
insl
in
jle
mov
mov
shl
mov
shlb
mov
xchg
sti
out
pop
mov
pop
gs
loope
in
std
int
mov
loopne
fsubp
jmp
dec
jge
ret
fisubrs
xor
jae
push
test
jo
jg
pop
xor
stc
jg
aam
pop
pop
ret
fmull
lea
jl
cmp
cltd
data16
xchg
les
mov
out
mov
bsf
test
push
and
pop
filds
jg
xor
test
xchg
xchg
clc
in
mov
sub
mov
mov
call
cmp
int3
pop
xchg
push
push
ret
shll
jg
mov
push
lods
or
in
push
mov
repz
outsb
ret
push
ljmp
pop
js
and
ss
insb
ret
inc
push
xchg
movsb
lock
cld
rorb
sbb
jmp
stos
mov
repz
push
mov
adc
mov
lret
adc
ret
test
push
loopne
gs
mov
pop
sub
and
pop
imul
lcall
jns
cmpsl
addr16
repnz
pop
mov
xchg
in
sub
dec
or
in
dec
imul
jbe
push
xchg
in
rcll
inc
xchg
mov
mov
ficompl
in
ds
fsubl
or
ds
ret
popf
out
out
loope
aaa
enter
dec
enter
gs
daa
lret
ret
lahf
xchg
adc
mov
jo
insb
clc
rcrb
jp
pop
jmp
je
out
push
int
out
xchg
pop
cmp
jns
je
lcall
inc
add
push
aad
xchg
xchg
add
ss
movsl
cltd
adc
mov
addr16
cli
je
or
lcall
adc
mov
adc
inc
mov
xor
jbe
in
sbb
and
sbb
lahf
mov
xchg
xor
sbb
xchg
bound
mov
sbb
and
mov
mov
icebp
gs
jnp
mov
inc
mov
arpl
cmpsb
dec
mov
cmp
and
dec
and
xor
sub
sbb
pusha
jno
ss
cwtl
out
sti
je
arpl
mov
push
insl
sbb
xchg
int
dec
jmp
pop
rorb
mov
sbbl
or
mov
outsb
pop
sub
popf
and
into
stos
xor
mov
out
add
test
cmpsl
pop
gs
cmpsl
fsubs
xor
popf
pop
push
xchg
ljmp
test
popf
mov
mov
outsl
mull
hlt
mov
mov
cmp
xchg
mov
mov
loop
insl
sahf
les
into
fidivrl
xchg
iret
test
icebp
sti
out
mov
rol
sub
push
lret
xchg
cs
ds
pop
mov
mov
sub
dec
scas
mov
sub
cmp
repz
and
push
pushf
mov
rcrb
outsb
inc
jno
pop
adc
cmp
out
lahf
or
lods
jnp
sahf
lods
sub
pop
cmp
xchg
icebp
inc
inc
repnz
ja
mov
xor
push
add
arpl
ret
dec
lods
fld
mov
cmp
push
cmp
lret
das
dec
add
xchg
or
movsb
shrb
test
ljmp
cld
or
pop
adc
ror
and
lds
add
mov
xor
jg
test
mov
leave
pop
vmulpd
cwtl
jns
lods
cmp
sub
dec
aad
daa
fstpl
cmc
roll
pop
cltd
mov
jmp
lahf
jge
inc
pusha
lods
push
pop
mov
stos
push
mov
sub
arpl
enter
repnz
loopne
gs
cmpsl
in
arpl
adc
lcall
xchg
scas
in
push
ret
pavgw
add
aas
loopne
sub
fistps
push
mov
push
in
scas
out
dec
nop
call
stos
jbe
dec
ret
xor
test
mov
adc
sbb
jp
out
mov
lock
repz
xor
cmp
clc
dec
test
mov
xchg
jno
xor
icebp
sbbb
js
scas
fs
mov
sti
push
lods
mov
push
xchg
lret
sbb
pop
jne
and
ret
insl
stos
int3
push
in
popf
hlt
mov
aas
sub
xor
jns
xchg
idiv
mov
xchg
scas
aam
mov
jg
inc
fstl
fs
inc
dec
jno
sub
test
notl
lock
cmp
in
js
mov
dec
sub
mov
adc
xchg
insb
cmp
push
xor
mov
pop
mov
add
mov
test
mov
inc
push
in
negl
mov
jnp
cmp
fwait
hlt
push
dec
jp
lret
mov
ret
jle
dec
mov
stos
repnz
mov
fucomp
fstps
mov
cmc
jbe
ret
mov
fisttpll
push
xchg
xlat
push
loop
jge
or
mov
sbb
clc
cmp
xchg
mov
test
jnp
xor
mov
lcall
pop
mov
daa
pop
fmuls
pop
int
jle
imul
loope
stc
sti
in
in
mov
das
cmc
push
dec
mov
aaa
adc
mov
fnstenv
and
xchg
andl
sbb
mov
inc
sub
jle,pt
rolb
inc
xor
add
aad
mov
ja
addr16
ja,pt
sub
cs
mov
test
jb
sub
add
sub
adc
push
es
rcll
sub
popa
sbb
shr
and
mov
incl
xchg
test
lret
inc
or
push
inc
hlt
inc
mov
fcmovbe
pop
in
sbb
jl
jne
fldt
jle
movsl
jnp
pushf
in
aaa
hlt
cmp
pop
icebp
ret
mov
mov
into
out
push
in
mov
mov
jle
push
call
sbb
outsl
mov
push
inc
faddl
loop
rorl
stos
pushf
mov
cmp
aam
fisubrl
sti
sahf
lods
xchg
mov
sbb
inc
dec
push
aas
jp
mov
mov
or
sbb
scas
ss
mov
mov
xor
mov
mov
in
push
dec
out
cmp
lret
js
fidivs
mov
mov
fisttpl
xlat
outsb
xlat
ljmp
into
jno
mov
lret
pop
sub
arpl
mov
clc
imul
add
sbb
fsubrp
fdiv
cmc
imul
cltd
mov
in
xor
xchg
inc
roll
arpl
sub
dec
add
je
xlat
loop
or
loope
mov
dec
cmp
mov
out
in
mov
jmp
leave
inc
test
aam
push
jmp
stos
pop
dec
in
ss
bswap
xchg
repz
mov
test
lahf
lret
ret
scas
mov
jmp
mov
fnsave
inc
mov
leave
ret
or
lret
fndisi(8087
and
sub
pop
sbb
adc
insl
mov
dec
sub
std
pop
ljmp
push
cli
cmpsl
mov
xchg
pop
rolw
lock
divl
ds
cld
fadds
mov
movsl
cmp
cmp
rorb
insb
repz
inc
out
divb
adc
or
aas
push
pop
cmp
pop
aas
fs
faddp
movsl
and
lahf
scas
jmp
xor
jb
cwtl
mov
mov
pop
cmc
jg
push
adc
outsl
mov
ds
sbb
ret
push
pop
rclb
mov
hlt
cmp
xlat
cltd
rclb
pop
fs
push
dec
push
and
cltd
repnz
cmp
cmp
mov
inc
dec
imul
je
jbe
mul
xchg
adc
xor
jecxz
push
inc
or
push
mov
mov
jge
xchg
pop
xchg
lods
push
pop
fs
pop
jge
pop
xor
sbb
jae
mov
inc
jmp
add
sbb
cmp
out
iret
daa
pop
xor
scas
push
mov
mov
pop
jo
inc
mov
sub
ret
in
aas
pop
js
jecxz
sub
jae
pop
xchg
push
lods
shrl
xchg
or
fisubl
add
jg
sub
inc
sbb
fdivrl
or
cli
aas
sarl
dec
adc
sahf
shrl
inc
add
jge
xchg
xchg
push
ret
shrl
pop
cli
mov
sub
pop
lods
pop
fwait
jae
aaa
mov
mov
mov
mov
cmp
xor
les
jo
inc
sbb
lret
out
dec
dec
rep
lahf
rcr
cld
mov
pop
or
ret
icebp
test
rorl
out
out
stos
clc
cmpsb
adc
push
insl
sbb
mov
fdivs
stos
ret
cmp
rolb
stos
sti
jg
psllw
mov
movb
fld
gs
inc
popf
sub
test
aad
push
mov
pop
addr16
adc
ret
daa
inc
mov
dec
out
xor
cmp
test
aaa
movsl
xchg
arpl
inc
mov
out
sti
dec
push
outsb
xor
aaa
mov
mov
fstpt
fnsave
jnp
push
or
inc
stos
push
out
test
sbb
mov
mov
inc
xorb
jecxz
dec
pop
cmp
stos
movsl
sbb
out
fsubrl
jne
pop
sbb
aaa
push
jg
dec
ja
mov
pushf
aas
mov
imul
xor
xor
sbb
mov
add
lods
push
push
mov
fidivrl
sbb
mov
inc
jnp
pop
jge
mov
sub
or
mov
adc
cmp
mov
into
test
jg
sub
outsl
jg
ds
out
sbb
cmpsl
lahf
sarl
push
fcomps
lea
out
jle
fidivl
dec
jle
pop
sbb
movsb
jecxz
fwait
setl
addr16
mov
stos
into
std
loope
fwait
das
das
notl
into
sub
negl
pop
fldenv
push
inc
lahf
lcall
sbb
out
xchg
xor
repnz
shlb
and
std
insl
push
mov
mov
fsubrs
shr
sbb
jb
mov
repz
mov
mov
fists
xchg
mov
dec
pusha
call
out
jle
push
dec
push
rcrb
mov
test
mov
inc
sahf
push
inc
aam
lock
sbb
popf
dec
jbe
fwait
add
stc
cs
lahf
fsts
shlb
pop
test
je
mov
mov
mov
ljmp
leave
pop
pop
je
fstps
adc
ret
sub
or
xchg
cmp
pop
cmpsl
jne
aas
jg
push
mov
lea
movsl
rcr
lret
setl
sub
int
and
aad
mov
cwtl
jne
movsl
mov
mov
or
mov
mov
sub
dec
sub
push
fnstsw
jno
loopne
in
dec
mov
scas
push
sub
add
mov
or
jle
push
and
sub
aad
popf
out
loopne
cmp
sub
aam
pop
lds
jl
xchg
iret
ds
out
shrb
iret
or
push
dec
test
stos
sbb
jo
bound
push
mov
cmpsl
adc
mul
adc
call
mov
mov
std
imul
mull
popa
pop
sub
lds
arpl
pop
pop
pop
lret
test
and
and
jno
mov
out
xor
xor
ss
rclb
fmuls
mov
cld
jne
jbe
xlat
sbb
fldcw
sbb
aas
sbb
cmpsl
test
cs
xchg
inc
mov
sub
cmpb
in
ret
jne
bound
dec
repz
add
jge
scas
jo
nop
push
jbe
mov
cwtl
shlb
ljmp
and
sub
outsb
lea
push
xchg
call
jecxz
movsl
lock
and
jo
fwait
cmp
and
pop
sbb
xchg
test
jecxz
inc
push
pop
inc
pop
neg
das
int3
pop
mov
scas
jmp
shlb
out
jp
mov
insb
push
xchg
lock
testl
mov
lds
sbb
cmp
fxam
lahf
lret
decb
cmp
hlt
test
jns
ja
lods
lahf
inc
mov
push
in
jg
pop
xchg
sub
inc
mov
cmovle
out
mov
mov
add
xchg
repnz
xor
pop
test
mov
jg
xchg
and
clc
rorb
imul
lock
aas
mov
shr
inc
mov
mov
ficoml
arpl
int
jle
mov
test
sbb
daa
pop
and
jmp
repnz
in
outsl
mov
mov
les
cmc
mov
pop
mov
cld
inc
mov
aaa
dec
cmc
das
test
std
sbb
divl
call
fistpl
jae
rclb
enter
push
sbbb
stc
mov
shlb
daa
and
mov
iret
daa
adc
fucomip
aam
jl,pt
xchg
popa
xor
in
arpl
pop
repz
inc
inc
stos
idivl
and
and
inc
fsubl
fimull
imul
std
dec
sahf
push
fcomi
sub
jg
mov
addb
std
inc
xor
cmp
mov
cli
in
or
and
pop
stos
addl
ret
mov
xchg
pop
xor
sahf
or
ret
mov
out
ljmp
xlat
and
test
into
in
mov
mov
shlb
push
mov
js
mov
test
dec
pop
push
mov
pop
aad
xchg
test
or
mov
ficomps
fwait
setp
mov
xor
mov
xchg
sub
sbb
sub
cld
psubd
lds
aas
lods
arpl
cmovle
mov
pop
stos
mov
mov
fs
xchg
cli
mov
outsl
sub
jb
jmp
sub
stos
lret
xchg
repnz
aas
ds
mov
rep
out
cmp
mov
sub
stos
ljmp
repz
insb
sub
fdivl
test
gs
mov
outsl
jecxz
xchg
divl
stos
push
fidivrs
cmp
sbb
jle
cmp
xor
xchg
push
ss
pushw
cmp
lret
sbb
daa
dec
jle
xchg
mov
jecxz
cld
or
ljmp
pop
aad
adc
int3
or
fnstenv
inc
push
sub
inc
mov
aam
jmp
adc
es
jae
add
ljmp
aam
xchg
lret
inc
xor
add
mov
sbb
and
cmpsb
dec
push
cli
fldenv
add
push
iret
mov
loop
rclb
jle
loope
out
lods
cmc
jnp
test
lret
sbb
mov
pop
and
std
dec
or
jne
adc
ds
mov
sub
sbb
fimuls
in
or
mov
cmpl
insl
enter
push
in
filds
push
frstor
repz
flds
fsubr
test
cmp
inc
loope
aas
in
ds
outsl
pop
pop
fs
call
xchg
xchg
jne
clc
loope
in
xchg
fistpll
fdivs
dec
insl
fistl
call
imul
xchg
mov
dec
mov
mov
fidivl
mov
imul
out
push
push
push
std
imul
mov
cmp
inc
add
push
push
mov
or
psllw
adc
pop
or
adc
mov
mov
insl
insb
xor
bound
dec
jns
or
jge
or
cltd
sbb
int
stc
mov
lahf
xchg
mov
adc
xor
fsubrs
leave
in
loop
dec
mov
mov
xorl
sbb
pop
pop
add
sbb
mov
and
lcall
mov
jg
jb
mov
out
je
xchg
push
rcrb
inc
cwtl
mov
add
xor
pop
push
data16
imul
push
mov
fwait
sbbl
mov
js
or
stos
cltd
push
les
sub
sub
nop
dec
fsubl
repnz
in
mov
mov
adc
pop
test
ss
lods
jg
stc
sbb
fs
mov
jg
push
mov
dec
jg
push
jp
aaa
jg
dec
loop
cli
stos
cld
xor
ss
pop
xchg
inc
jb
push
adc
mov
mov
lods
mov
mov
xor
adc
adc
sarb
mov
jns
pop
aad
mov
push
or
scas
loopne
or
cmc
shlb
inc
das
mov
add
js
cmc
jbe
es
into
jnp
ja
fsincos
repnz
jne
jae
mov
xor
ljmp
test
cmp
mov
js
xor
mov
scas
repnz
and
mov
in
lahf
lret
inc
int3
push
addl
lahf
ret
mov
daa
mov
push
fisubrs
push
pop
lcall
cmp
and
test
or
push
push
xor
sub
in
call
mov
xchg
in
pop
jae
std
fildl
loop
xor
and
add
push
and
mov
ss
jne
es
jo
pop
paddb
insb
xchg
sbb
aas
mov
pop
sbb
jb
mov
inc
push
lcall
loopne
xor
push
xchg
loope
adc
sub
mov
imul
pop
stos
std
push
push
sbb
inc
pushf
in
dec
in
mov
xlat
ret
pop
mov
jno
outsl
ljmp
dec
xorl
out
mov
shlb
push
push
push
sbb
pop
ret
aas
push
repnz
mov
nop
mov
sub
push
iret
pop
insl
mov
mov
xchg
adc
push
sub
in
push
mov
in
fildll
rolb
sti
or
or
adc
pop
sbb
pop
cli
dec
jge
mov
and
inc
sti
lret
adc
out
pop
movsl
pop
adc
jl
scas
and
outsl
sbb
lret
mov
xchg
push
lods
mov
es
xchg
and
jecxz
mov
cmp
pop
aas
push
inc
fwait
lahf
daa
fcmovu
in
push
xchg
inc
cmpsl
inc
icebp
jbe
pop
leave
push
mov
test
sbb
jb
mov
notl
xchg
or
pushf
jns,pt
mov
imul
in
in
popf
lret
pop
fbstp
ljmp
mov
mov
or
ret
imul
lods
cs
push
push
push
fwait
add
repz
or
aam
pop
sbb
lock
inc
cmpb
adcl
add
dec
stc
push
and
push
retw
das
dec
pop
dec
lods
in
mov
dec
cmp
xchg
mov
movsb
movsb
stos
cltd
scas
lret
sbb
sub
push
inc
testl
out
mov
test
and
pop
xchg
ja
out
inc
sahf
scas
cli
mov
in
inc
or
pop
push
repnz
push
lahf
testb
or
push
jge
mov
subl
cmp
sbb
andl
mov
and
popa
jno
je
adc
or
or
push
add
loopne
pop
outsb
mov
jmp
push
adc
hlt
test
push
and
test
dec
test
cwtl
sbb
mov
lock
outsl
mov
sub
mov
in
sub
xor
cmp
dec
sbb
pop
je
inc
mov
push
pop
cwtl
pop
jp
pop
iret
dec
clc
cmp
add
pusha
xchg
bswap
jae
pop
idivl
jmp
dec
push
pusha
dec
les
mov
out
cmp
dec
test
dec
loope
test
push
or
xchg
adc
xchg
push
fidivrl
xor
jg
int
dec
inc
pop
aaa
sub
cmp
testb
xchg
roll
dec
sti
lret
popf
popa
cmpb
inc
xchg
sub
fsub
cld
fnsave
pop
out
sbb
pop
cmpl
sbb
add
psubw
xchg
in
gs
sbb
cwtl
sbb
mov
cmp
mov
dec
and
lcall
or
mov
push
push
icebp
inc
lahf
xchg
ljmp
push
cli
aaa
push
rorb
loope
xor
int
pop
xchg
notb
les
mov
sbb
add
cmp
pop
ficompl
fadd
sub
fcmovnbe
pop
aas
std
rol
repz
push
enter
cltd
lock
lret
dec
pop
cmp
pop
add
or
mov
mov
fidivl
nop
ss
out
push
push
push
pop
push
or
rorb
jl
out
outsb
jmp
pop
fsubl
mov
cmc
out
cmp
out
nop
xor
shlb
mov
jae
pop
jb
inc
pop
sbb
mov
sub
mov
sbb
addl
xchg
cwtl
dec
inc
fdivs
mov
cmp
mov
outsb
jmp
cwtl
and
inc
push
call
jl
imul
in
mov
mov
lcall
mov
scas
test
pop
xor
lret
xor
xor
in
jle
sub
insl
mov
push
jg
shr
adc
cld
cmp
jns
popa
sub
pop
mov
mov
adc
add
cmpsb
and
inc
std
sub
sarl
popl
bound
movsb
dec
inc
cmpsl
xor
and
ljmp
out
add
or
addr16
fcom
nop
test
sbb
fldt
cmp
std
fistpll
xchg
hlt
fildll
fsubrs
xchg
pop
fsubrl
ss
mov
cmpsb
test
pop
iret
jle
inc
xor
imull
cs
mov
sub
mov
test
data16
xlat
adc
pop
push
push
comiss
movsb
mov
lahf
jge
cmpsl
xor
imul
sbb
repz
add
mov
orl
jns
outsb
int3
inc
lds
iret
jmp
loopne
mov
decb
hlt
imul
push
sarl
xchg
dec
ds
sub
or
pop
sbb
sub
inc
jmp
cmp
shrb
flds
cs
loop
inc
and
dec
pop
sbb
mov
lods
cmp
outsb
es
insb
cld
mov
arpl
xchg
enter
mov
fwait
roll
je
repnz
xchg
push
mov
adc
out
loope
inc
inc
stos
push
mov
stos
xchg
sbb
call
bound
xchg
sbb
fxam
fsubrp
jp
xor
pop
xor
and
jo
cmp
cmp
enter
xchg
xchg
and
jle
scas
cmpsl
mov
scas
cwtl
clc
adc
leave
xor
mov
adc
xlat
xchg
jae
outsl
cmc
xchg
mov
jne
adc
dec
mov
pop
cmp
in
xor
leave
pop
stos
pop
mov
sahf
adcl
cmp
stc
insl
push
mov
icebp
lahf
out
lcall
daa
add
sbb
repnz
cmp
outsb
imul
add
lahf
out
aas
insl
jmp
fndisi(8087
jl
inc
xor
add
daa
mov
aas
mov
or
sub
push
std
inc
rcrb
xor
inc
mov
adc
je
mov
inc
jle
mov
dec
pop
pop
mov
inc
or
dec
lret
test
mov
repz
subb
cmp
jg
int
mov
push
adc
adc
adc
push
cmc
aaa
dec
aad
mov
mov
mov
clc
sbb
jb
mov
xchg
inc
lods
hlt
mov
inc
daa
adc
int3
sti
mov
mov
cli
fstps
jl
sahf
push
movl
es
int
sbb
push
cmp
sub
int
loope
mov
out
cmp
mov
mov
in
mov
adc
fwait
stos
callw
xor
push
inc
inc
stos
in
cmp
dec
pop
push
jecxz
mov
add
inc
lret
in
xchg
inc
dec
aam
sbb
lods
jp
dec
imul
pop
xchg
daa
mov
loope
loop
pusha
lock
adc
cmc
je
push
jbe
cwtl
push
mov
lods
sbb
push
cld
scas
test
mov
loop
xlat
dec
leave
fsubl
out
das
ficomps
xchg
dec
pusha
bswap
lods
lahf
arpl
sbb
sbb
push
clc
and
jecxz
cli
inc
cmp
push
in
lcall
xor
iret
rcrb
test
jge
leave
pop
jg
push
loope
and
mov
sbb
jo
mov
cmp
xchg
add
dec
mov
pop
jne
jmp
ss
pushf
stos
add
lods
jmp
loopne
popa
ja
and
lea
aaa
mov
iret
int
pop
jg
xor
popa
push
jmp
push
aad
fwait
out
and
test
lds
lahf
int
fists
mov
inc
push
push
sbb
inc
push
xor
mov
std
lds
jmp
jecxz
jmp
repz
cmc
mov
mov
daa
stos
xchg
loop
mov
xchg
int3
mov
sbb
jl
test
mov
jb
mov
shll
into
stos
pop
cmp
dec
jmp
icebp
xchg
cmpsb
ss
int3
cltd
dec
into
dec
fstl
sub
je
repz
xchg
loop
inc
fcmovbe
rol
lahf
mov
sbb
and
inc
or
xor
test
stos
add
cmp
jecxz
std
sub
nop
or
and
int3
mov
pop
loope
and
push
push
loop
sub
scas
lret
outsl
out
mov
push
cmc
jl
push
mov
xlat
aas
jbe
sbb
in
dec
lods
mov
out
je
mov
mov
dec
jne
lahf
xchg
sub
shll
out
and
cmp
sbbl
mov
sub
hlt
jb
sub
pop
rclb
mov
jns
repnz
stc
sub
inc
dec
push
push
fadds
jo
out
aad
jnp
inc
imul
clc
mov
mov
push
cltd
divb
add
jmp
lret
pop
negl
xchg
pop
push
jl
jns
hlt
mov
add
rol
mov
lock
dec
mov
ret
mov
sbb
mov
mov
repnz
or
out
xchg
test
jp
cmp
or
mov
scas
shlb
push
mov
or
jecxz
jae
and
aas
jnp
sub
xor
mov
sti
call
rcl
test
sti
dec
mov
sub
enter
cmp
push
mov
jl
repnz
lods
xchg
maxps
out
in
push
jbe
lahf
lret
imul
je
pop
mov
ret
test
gs
mov
repz
stos
bound
iret
popf
movb
sub
mov
jge
fcmovbe
icebp
pop
popf
into
sti
push
bound
call
sub
les
cmpsl
std
sub
test
outsl
scas
imul
cwtl
aaa
repnz
sbb
inc
sub
xor
mov
loope
std
hlt
scas
xlat
faddp
xor
dec
or
and
sub
jae
in
mov
out
loop
sahf
nop
addr16
outsb
aad
mov
and
push
into
fiadds
mov
xor
fldl2e
enter
jmp
mov
dec
xchg
fnstcw
int
stos
inc
and
mov
jp
das
sti
sub
rorb
in
pop
ljmp
and
jp
and
adc
push
pop
jecxz
mov
adc
inc
sub
cmc
jnp
into
xchg
fwait
outsl
pop
sub
sub
setp
lea
xchg
das
mov
lahf
mov
pop
inc
adc
jo
data16
cmpl
xor
xchg
inc
int
sub
insl
adc
and
cmpb
call
xchg
les
idiv
sti
xchg
jae
cld
xor
outsb
cmp
lods
es
pop
or
adc
test
dec
fimuls
sbb
lods
and
jo
sub
ss
icebp
mov
mov
cmp
out
addl
mov
aas
outsl
push
daa
popa
hlt
cmp
rolb
movsl
xchg
and
fsubrs
mov
sahf
mov
insb
data16
mov
fwait
loope
dec
xchg
inc
push
mov
sub
imulb
lods
mov
push
pop
cld
enter
inc
mov
push
dec
xchg
and
dec
add
dec
ljmp
dec
xor
mov
adc
leave
leave
xor
sahf
fwait
cmp
adc
pop
pusha
into
or
lock
jmp
mov
sbb
test
push
ljmp
testl
sti
sub
testl
mov
jmpw
test
cld
lods
push
faddl
mov
std
sub
ret
mov
ds
movsb
sub
addr16
cli
xchg
aas
ret
loope
popf
or
bound
sarl
xchg
jne
sub
xchg
daa
pop
and
mov
mov
xchg
aaa
int
jle
mov
jge
repnz
sbb
push
fisubrs
sbb
pop
icebp
adcl
mov
cmp
adc
mov
jmp
lods
mov
jo
jo
repz
push
das
test
arpl
fiaddl
lea
repnz
je
or
cmp
or
in
out
jae
icebp
dec
cmpsl
adc
ret
outsl
cmp
xor
notl
cmpsl
repz
mov
pop
mov
lahf
xor
std
jge
ret
jge
sbb
in
dec
and
sub
adc
out
stos
sub
out
adc
sub
imul
mov
testb
ss
aad
mov
incb
sub
push
movsb
fstp
sti
cmp
push
loope
les
lea
out
and
sub
dec
add
jbe
xchg
aas
std
movsl
icebp
insb
pop
test
testb
daa
js
jno
scas
fstpt
add
inc
repz
xchg
add
jbe
mov
rcll
jbe
lret
ret
push
fcoml
loop
mov
mov
jmp
mov
push
aas
test
roll
sbb
sub
mov
xchg
and
push
cmp
dec
faddl
mov
fistl
icebp
out
jbe
stos
call
jbe
cmpl
test
js
pop
cwtl
mov
shl
push
inc
stc
xchg
in
or
mov
scas
push
jg
xor
pusha
mov
mov
mov
jle
xchg
xor
push
lcall
dec
add
in
sbb
lret
mov
mov
push
cmpsb
jge
inc
push
adc
fisttps
mov
add
lret
or
jb
js,pt
jecxz
fyl2xp1
jns
popf
pop
mov
xchg
movsb
dec
xor
adcl
ljmp
das
ret
cmp
fs
stos
add
popf
loopne
fmull
pop
dec
icebp
std
lock
je
xor
out
lock
in
mov
push
sub
icebp
lret
mov
je
leave
rcl
sub
dec
xor
push
repnz
mov
and
fwait
jbe
outsl
dec
inc
jo
das
idivb
orl
sub
pop
xchg
cwtl
dec
sub
fsubrp
mov
or
ret
push
lods
xchg
in
fstpl
outsb
fidivrl
add
mov
sbb
push
adc
inc
xchg
cmp
icebp
push
outsl
call
and
les
mov
jbe
shr
ret
mov
into
xchg
jg
push
jg
xchg
mov
add
cmpsl
test
inc
cmp
dec
int
cmc
pop
fnstcw
xor
fstpl
aam
fdiv
inc
cmp
fst
cmp
data16
js
adc
mov
incb
or
mov
sahf
mov
test
sbb
jge
pop
dec
sub
push
imul
je
fcoml
mov
xor
and
and
loope
daa
pop
ret
sub
lret
movsb
jg
jl
hlt
mov
pop
int
shlb
fwait
mov
sbb
insl
into
push
xchg
ljmp
sub
sbb
push
or
shrl
movsl
xor
adc
pop
xchg
out
sbb
adc
dec
xor
insl
push
bound
xor
jle
pop
out
mov
insl
in
int
outsl
pop
js
nop
loopne
inc
xor
lods
rorl
enter
fiadds
sub
lcall
pop
clc
hlt
imul
out
and
sarl
repnz
mov
in
mov
mov
lea
test
aad
mull
jae
push
sub
fbstp
push
fcomip
push
xchg
addr16
repz
pop
loopne
inc
jl
dec
enter
push
mov
mov
popf
leave
pop
push
mov
sbb
jns
sbb
and
sarl
fstl
xchg
push
mov
icebp
call
jns
adcb
jp
cld
adc
aam
pop
xlat
sub
cltd
lretw
les
inc
setbe
cmc
pop
mov
inc
mov
pusha
pusha
loope
fdivl
in
pop
cmp
mov
jg
repnz
push
mov
pop
out
mov
pop
imul
xor
stos
mov
push
jbe
sti
arpl
iret
or
shll
imul
lahf
cmpsl
loopne
out
ret
add
data16
enter
shrl
jl
pop
lret
push
test
adc
jns
mov
fiaddl
dec
xor
fsubl
push
ljmp
jbe
divb
fistl
push
arpl
add
pop
in
shl
or
xor
ficoms
push
or
cmp
addr16
dec
cmp
fld
icebp
inc
mov
insb
adc
dec
sarl
cmpsb
popa
pop
sti
popa
fld
adc
add
and
inc
xchg
adc
inc
cmove
clc
push
mov
popa
or
xchg
fnstcw
aas
jmp
dec
cwtl
mov
inc
push
sahf
jne
dec
xchg
xchg
inc
xchg
adc
xchg
pop
mov
in
scas
outsl
lret
push
lock
inc
icebp
repnz
mov
cmp
mov
mov
test
adc
fiaddl
repz
rcll
mov
lcall
iret
jle
cmp
adc
xchg
jmp
lods
loope
je
jno
nop
jmp
cld
jb
and
sub
subl
sbb
scas
shr
popf
pop
cmpsl
pop
je
jge
jb
dec
xchg
xchg
and
xchg
push
aaa
pop
adc
shlb
imul
cltd
fstpl
push
dec
adc
pop
mov
shll
cmp
das
je
out
cmp
in
sbb
ja
pop
scas
mov
scas
punpckhdq
push
lods
mov
ss
pop
or
cmp
iret
in
stc
lret
mov
sarb
inc
jbe
loope
ja
aaa
lea
out
mov
pop
push
xor
push
xor
push
or
imul
and
imul
mov
in
sub
leave
cld
add
mov
cwtl
cwtl
mov
sahf
xchg
jne
lret
aas
mov
ret
cltd
icebp
lret
pop
leave
clc
ficompl
stos
mov
cli
out
jl
dec
jl
push
push
or
xchg
push
cwtl
repnz
nop
repz
lods
mov
popf
jae
pop
dec
outsb
mov
xor
icebp
sub
pop
aad
les
sarb
fs
cmp
ljmp
pop
ljmp
in
cmpsl
xor
pushf
pop
les
aaa
mov
das
mov
pop
lahf
xor
popf
xor
xor
push
jge
adc
cld
stc
push
out
jmp
adc
fs
jbe
fmul
pop
xchg
xchg
fisttpll
mov
add
jmp
sahf
mov
ret
popf
push
sbb
jo
xor
call
xchg
mov
orl
dec
popa
andb
std
int
mov
xchg
out
paddsb
fstps
push
pusha
jns
scas
xor
push
pop
xchg
jl
sub
movb
pop
and
scas
arpl
sbb
shlb
fcmove
bound
jne
pop
sbb
daa
fstpl
xchg
lock
jbe
fildll
pusha
sbb
add
push
cmp
outsl
fists
int
cmp
cli
and
jb
dec
pushf
xor
popf
repnz
dec
ret
cmp
popa
mov
aas
mov
rolb
mov
not
xor
adc
test
clc
jnp
popf
push
or
mov
cwtl
jnp
adc
pop
in
imul
sbb
into
cmpsl
inc
lret
mov
lods
imul
dec
mov
loopne
mov
mov
out
jecxz
ljmp
aam
cmpsb
lahf
ret
mov
outsb
mov
dec
into
mov
sbb
inc
enter
sbb
mov
out
sub
push
cmp
in
mov
aam
xchg
jmp
lods
pop
popf
fidivrl
leave
jbe
jne
aad
sub
popa
ljmp
push
xor
dec
test
cmp
fdivp
jge
call
dec
fidivrs
je
cmpsb
inc
xchg
xchg
jns
inc
mov
cmpsb
sahf
std
in
testl
cmpsl
arpl
ret
ss
xchg
insb
add
pop
sbb
or
mov
cmp
jg
int
hlt
cmp
xchg
mov
adc
lret
push
mov
test
jno
pop
xchg
stos
adc
dec
pop
add
out
je
mov
arpl
fdivs
and
push
xchg
pop
out
pushf
scas
fcmovb
into
and
ss
inc
cld
jno
xchg
push
clc
xchg
lret
push
jmp
scas
xor
lret
dec
lea
pop
pop
xchg
es
lds
xchg
scas
mov
or
fwait
sub
sub
insb
mov
ret
cmovge
sbb
out
sbb
add
jmp
insb
call
xchg
and
adc
pop
stos
sbb
insl
mov
leave
pop
insl
push
inc
adc
dec
lods
clc
sub
inc
jmp
xchg
rcr
jo
pop
pop
mov
add
push
cmp
push
dec
and
out
popf
xor
jl
inc
jae
loop
dec
les
mov
scas
and
cmp
mov
pop
sub
mov
inc
mov
jecxz
in
mov
les
aas
jb
insb
cmp
cwtl
sub
xor
or
sbb
cld
sub
adc
jbe
cmp
pop
jne
or
xor
lret
sbb
clc
push
mov
aaa
and
aas
loope
mov
into
xchg
das
jnp
sbb
dec
sub
mov
cmp
adc
jecxz
shlb
sbb
xchg
sbb
xor
aas
mov
jb
sub
mov
dec
in
fst
mov
fwait
xchg
xor
lahf
sti
movsb
xchg
push
and
xor
jo
ret
mov
pop
cwtl
leave
sbb
scas
bound
jp
popa
into
aam
sub
push
mov
div
addl
jnp
xor
pop
dec
mov
out
mov
sbb
aad
ljmp
gs
jge
xchg
mov
flds
insb
adc
js
fld
test
nop
sub
pop
imul
mov
arpl
dec
or
cmp
sbb
xorb
stc
out
sti
mov
push
test
ds
ret
shll
mov
stos
repnz
jl
je
mov
fimull
rorl
jecxz
fidivs
movsl
ret
xchg
aad
xchg
cmp
xor
push
sahf
or
cmpb
xchg
xor
push
out
scas
dec
ss
sbb
push
inc
cmp
sahf
inc
sbb
adc
mulb
test
or
mov
xor
inc
mov
cmp
mov
push
jno
cli
lret
pop
shlb
icebp
mov
negl
mov
or
in
ja
dec
mov
inc
or
push
insl
mov
cmpsb
neg
and
jecxz
sbb
pop
sbb
xor
movsb
stos
cmp
pop
xchg
mov
pop
pop
cmp
sbb
lods
rcrb
cltd
leave
push
shll
shlb
lahf
loop
fdivp
sbb
mov
mov
adc
inc
adc
xor
xchg
shl
cmpsb
cmc
push
push
idiv
and
fisttpl
xchg
jns
xor
dec
mov
fstpl
jl
lea
push
xchg
push
daa
icebp
inc
mov
mov
out
cld
ret
and
jmp
jp
insl
cmpsb
outsb
cli
fisubrl
adc
jbe
stos
fwait
std
push
std
das
sti
loop
cmc
and
sub
xor
outsb
mov
xor
insb
or
or
adc
pop
jno
imull
fs
movsl
orl
mov
stos
es
sbb
mov
dec
test
imull
cltd
lret
sbb
mov
lahf
fnstcw
jno
roll
out
dec
add
loope
mov
add
xchg
dec
mov
or
test
in
movsb
fs
xchg
lahf
ficoml
xchg
cmpsl
mov
xor
leave
pop
lods
jle
int3
fadd
mov
ljmp
leave
inc
push
mov
adc
daa
or
lahf
out
clc
lret
mov
jle
xor
loope
test
push
jg
pop
aaa
aam
xchg
pop
in
xor
jmp
mov
push
adc
mov
xor
fwait
jge
lret
rclb
cmp
add
das
outsb
rorl
push
lds
cmpsl
gs
inc
jl
pop
push
jb
cmpsl
lahf
xchg
add
rol
ljmp
add
mov
mov
fildll
dec
xlat
ja
and
lret
mov
pop
cmpsl
movsl
stc
cli
cmp
mov
subl
cmp
xchg
icebp
sub
lcall
ljmp
dec
jne
push
popa
clc
loopne
fisubrl
ljmp
daa
gs
pushf
push
mov
push
xchg
fadds
ljmp
bswap
jnp
jo
jecxz
rcrb
fnsave
lock
decl
or
dec
jo
aaa
adc
cmp
pop
cmpsl
or
pop
data16
xchg
push
jno
cmp
push
andl
xchg
cmp
push
lahf
add
scas
test
or
jmp
lock
push
mov
and
sub
leave
ret
mov
push
dec
das
lock
lret
movq
pop
idiv
in
lods
ficoml
imul
pop
dec
loope
mov
test
rcrb
in
fistpll
sbb
popa
stc
out
fwait
lock
lds
inc
pop
fists
fisubrs
dec
pusha
mov
outsl
dec
jg
add
lock
sbb
inc
inc
je
scas
cmpsl
xor
fwait
inc
scas
int
or
lret
or
pop
int
cmp
pop
imul
je
fwait
shr
pop
shlb
imul
in
mov
inc
lods
pop
cld
pop
push
mov
in
mov
jl
cmp
clc
inc
pop
sti
jp
or
xor
pop
dec
mov
and
mov
push
out
or
lret
jb
shlb
adc
mov
pxor
repnz
xchg
outsb
add
adc
popf
scas
aaa
mov
xchg
int
push
cmc
push
xor
dec
push
jno
rolb
mov
test
mov
out
fucom
xchg
sub
pushf
and
sbb
movsl
aam
and
push
add
push
pop
pop
xchg
sub
mov
xchg
pop
test
rorl
dec
incl
add
daa
jnp
mov
repnz
sarl
push
jo
mov
stc
push
cld
xchg
dec
jb
shrb
xchg
push
mov
dec
mov
xchg
out
xor
call
ficoms
sti
daa
xlat
int3
sbb
das
ret
in
imul
sbb
aaa
jmp
movsl
and
pop
dec
stos
movsb
stos
clc
jnp
adc
jno
lret
jb
dec
scas
pop
call
or
push
mov
mov
lcall
in
pop
pop
pcmpgtd
jecxz
mov
dec
xlat
pusha
lcall
mov
sub
push
push
pop
and
lods
push
cmpsl
ljmp
pop
imul
stos
icebp
sub
cli
roll
sub
mov
jns
mov
fisubrs
addr16
cmp
sahf
fwait
or
jecxz
sbbl
sbb
andl
leave
fisubrs
push
xchg
fwait
pop
add
push
and
cs
sti
mov
in
arpl
cmp
cwtl
js
jbe
out
sub
inc
mulb
jmp
inc
stos
mov
adc
push
xchg
xor
xchg
xchg
inc
pop
loope
shrl
sbbb
inc
mov
mov
imul
ja
cmp
pusha
jo
cmp
dec
mov
into
lret
movsl
in
ficoml
mov
lahf
in
cmpl
and
call
mov
mov
clc
mov
mov
pop
incb
jns
in
pop
pop
test
dec
mov
out
repnz
movsl
arpl
mov
cmp
sti
nop
and
push
push
pop
dec
movsl
sti
ss
or
jge
fwait
sbb
arpl
ficoms
rcrb
dec
popf
and
add
in
jg
pop
popa
loope
jp
add
sti
clc
jge
or
sub
xchg
mov
stos
sti
movsb
jne
repnz
stos
fistpl
mov
test
cmp
lret
push
sbb
xor
sbb
rcll
jo
pop
cmp
sub
sbb
test
ljmp
pop
and
fstpt
cs
adcb
out
repnz
in
push
shrl
clc
xor
cmp
addl
mov
jb
mov
out
xchg
jae
xchg
dec
sbb
hlt
arpl
mov
jmp
imulb
shll
mov
add
lret
push
inc
lahf
dec
sub
cmpsb
fsubrp
mov
push
aas
mov
lods
dec
movsb
sbb
jmp
arpl
pop
jg
push
decb
xlat
rcll
insb
loop
fisubrs
sub
aad
mov
inc
or
icebp
push
mov
mov
cmp
jle
into
pop
aas
cmp
mov
in
hlt
sub
clc
inc
mov
in
mov
inc
mov
in
cmp
icebp
lds
gs
repnz
jp
mov
movsb
rcrb
in
mov
or
popl
decl
xor
push
sbb
call
sarl
hlt
rolb
pop
dec
adc
fsts
xor
dec
push
xor
imul
test
jae
in
inc
pop
or
test
aaa
imul
or
pop
adc
mov
cmp
pop
cmp
iret
je
push
test
push
addr16
and
repnz
jns
push
das
mov
pop
mov
xchg
mov
repz
leave
inc
sti
cwtl
mov
or
filds
pop
jg
or
sbb
mov
gs
or
mov
outsl
mov
push
ss
enter
stc
jge
cs
sub
xchg
iret
xor
or
mov
popf
int
mov
std
in
repnz
loope
fsubs
xor
aas
and
mov
sub
leave
cs
mov
andl
pop
mov
fcomps
inc
cld
push
mov
sbbb
repz
mov
lahf
jecxz
adcl
addr16
fstpt
mov
cld
aad
cld
xchg
pop
xor
sub
cmp
cmp
decb
jbe
out
xor
inc
ds
ja
out
xchg
jmp
fwait
out
test
mov
push
aaa
sbb
fwait
sti
pop
jge
mov
fdivs
scas
inc
dec
stos
push
popf
lock
ret
daa
mov
out
fdivrl
pop
pop
cmp
clc
add
mov
ss
mov
mov
in
or
mov
jecxz
lods
in
jge
cmpsb
ret
pop
and
jbe
mov
add
pop
loope
out
pop
popf
imul
xchg
and
inc
xchg
ja
test
push
pop
lods
xor
cmp
mov
mov
jb
mov
sub
push
jmp
jg
daa
in
mov
insl
add
adc
imul
int
cld
and
fdivl
inc
imul
cs
sahf
div
test
rorb
arpl
inc
fisubs
outsb
dec
push
jno
and
sub
lock
pusha
cwtl
fiaddl
sub
and
pusha
std
fxch
inc
push
fldcw
fistpl
scas
scas
sti
sub
mov
add
add
pop
push
dec
gs
mov
xchg
dec
xlat
fistps
mov
xlat
clc
fsubl
adc
fbstp
dec
ja
inc
repz
jecxz
lds
adc
movsl
ss
imul
adc
int3
pop
fsubrl
aam
icebp
cs
fcomi
pop
xchg
and
gs
xlat
mov
push
mov
cwtl
dec
icebp
push
lea
movsl
ror
inc
dec
mov
cmp
and
pop
push
adc
arpl
mov
lods
push
sti
std
lret
pop
outsb
adc
outsb
dec
mov
cmp
ret
add
dec
in
neg
fnstenv
lcall
jg
push
das
sbb
sub
insb
aad
andl
pop
cmp
ss
cmp
mov
pop
xchg
dec
adc
ds
popf
sub
popa
mov
cli
lret
insl
inc
jg
mov
loope
mov
ss
mov
dec
mov
repz
loope
pop
inc
xchg
sub
sub
cli
jb
outsl
jmp
or
jmp
in
mov
comiss
mov
imul
ucomiss
sti
sub
cmpsl
js
push
fnstsw
sub
sbb
push
pop
cmpl
in
sbb
add
pop
int
xchg
dec
addr16
pop
mov
imul
dec
roll
mov
enter
xchg
xchg
jb
js
es
cmp
stos
push
pop
in
cmc
jg
unpcklps
scas
jne
push
mov
sub
fnstcw
inc
mov
mov
inc
out
leave
push
sbb
and
pop
xorb
adc
push
inc
pop
scas
and
dec
inc
push
jmp
aas
repz
xor
pushl
fldln2
pop
push
mov
xchg
sti
scas
sbb
clc
sti
in
xor
jbe
add
lret
stos
and
outsl
sub
sbb
adc
scas
sub
lret
adc
les
and
int3
xchg
std
jns
dec
repz
ret
sahf
jns
icebp
mov
idiv
push
xchg
push
int3
test
out
pushf
enter
push
xchg
leave
js
clc
mov
jb
cmp
xchg
pop
and
ljmp
xchg
rcl
bound
test
pushf
mov
mov
insb
jno
pop
std
gs
or
in
aas
pop
sbb
sub
sbb
js
push
into
rorl
fsubl
sub
inc
jecxz
cli
xorb
lret
fmull
stos
cmp
inc
mov
out
iret
sbb
scas
movl
gs
push
nop
rorl
in
jecxz
ljmp
add
pusha
fisubs
mov
nop
lea
jecxz
sbb
testb
movsl
push
adc
icebp
in
stos
sbb
mov
sub
inc
hlt
and
cmc
or
je
push
movsb
test
in
imul
jb
inc
test
shrb
sahf
add
cmpl
andb
repz
fisttpll
cmpsb
jle
mov
xchg
daa
gs
ret
js
bound
dec
mov
ja
push
jnp
pop
je
ss
mov
or
cmpb
push
repz
fisttps
jae
jno
mov
jne
data16
jmp
sbb
idivb
cvtps2pd
jne
jo
sub
add
stc
xchg
aas
push
mov
mov
aaa
fdivs
or
movsb
test
inc
enter
dec
xor
mov
scas
les
negb
out
adc
pop
inc
shrb
cmp
jg
mov
fstpl
sub
into
add
test
or
mov
or
xlat
push
sub
pop
ret
out
sbb
jbe
into
sbb
or
inc
insb
stos
lret
sbb
mov
pop
aas
in
sub
cmp
mov
sub
xor
out
and
cmp
xlat
sti
cmpl
cld
pop
imul
xchg
jns
fcompl
xchg
movsb
cld
in
shl
cmp
lahf
mov
jecxz
cmpsb
and
mov
and
addr16
push
cltd
fsubp
and
rcrb
sti
adc
notb
lcall
popaw
dec
or
pushf
and
lea
stos
cmc
sbb
dec
cld
je
mov
pop
pop
sub
test
out
daa
aas
addr16
lcall
and
cmpb
mov
cmp
pop
mov
dec
xor
scas
shrb
imul
pop
xchg
mov
insb
in
lret
dec
xor
in
rcrb
sbb
xor
pop
fs
int
mov
dec
idiv
bound
mov
dec
inc
daa
cmp
xor
xchg
pop
das
pushf
cmpsb
cmpsb
mov
push
inc
lahf
daa
test
adc
fwait
dec
xor
mov
out
fwait
push
push
test
push
addr16
mov
add
dec
fsincos
add
fsubr
jle
mov
and
pop
rorl
cmp
fs
jo
out
pop
push
sub
pop
and
mov
xchg
mov
jns
movsb
cmp
lock
dec
push
loopne
repnz
sbb
rorb
or
outsb
cmc
mov
mov
lea
jecxz
out
rolb
push
shrl
ds
mov
in
imul
adc
mov
mov
pushl
das
fnstcw
lret
push
jb
sub
push
mov
mov
es
mov
mov
lcall
dec
nop
outsl
and
movsl
mov
cltd
out
xor
adc
mov
xchg
popa
pusha
mov
jno
bts
fdivs
mov
lahf
lock
lock
xor
adc
mov
jo
push
pop
mov
mov
push
movsbl
loop
addb
mov
insl
or
fldt
lret
mov
shll
mov
mov
mov
add
lods
sbb
adc
xchg
xchg
iret
pushaw
fcomps
in
std
insl
aaa
cmp
pop
adc
push
lods
mov
dec
xor
lods
sub
and
xlat
mov
roll
sub
add
lds
shr
jecxz
sahf
jmp
xchg
mov
add
cli
movsb
stos
sbb
out
lcall
adc
mov
mov
mov
in
dec
lahf
and
iret
xlat
dec
cmp
cmp
cmpsb
sarl
push
xchg
cld
mov
xchg
add
add
mov
add
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
imul
out
cmp
adc
repz
sti
ret
ds
and
sbb
pushf
push
ljmp
movsb
fmuls
mov
ret
jbe
sbb
or
xor
push
and
xor
cmp
inc
dec
sub
push
xlat
pop
xor
subps
mov
adc
pop
xchg
enter
pop
dec
enter
into
rolb
mov
bound
mov
lods
sarl
cmp
jbe
mov
xchg
jmp
xchg
rcr
hlt
mov
jbe
inc
in
jecxz
xchg
test
xchg
addl
sti
lods
add
mov
pop
and
inc
mov
sar
cmp
sub
sub
cli
cmp
das
sar
stos
pop
mov
and
mov
cmp
inc
orb
shll
loope
cmpsl
push
mov
xor
imul
sbb
or
invd
add
movsl
mov
shr
jb
mov
ljmp
pop
add
pop
push
insb
movsb
xor
std
jge
mov
push
sahf
xchg
jne
rorl
aas
test
mov
xchg
shll
and
cmp
or
clc
mov
inc
cmp
lcall
imul
lahf
cmc
sub
ss
mov
xchg
fsubr
sbb
test
aad
and
icebp
mov
fmul
shl
xchg
xor
sub
js
int
pop
xchg
fbld
pop
push
cli
adcl
and
daa
ret
jbe
sub
fnstenv
dec
mov
mov
jbe
mov
pop
rol
xchg
push
jmp
push
sbb
leave
daa
orb
cmp
dec
or
adc
std
adc
sub
add
fbld
bnd
dec
or
aaa
sub
xor
sbb
mov
xor
jp
adc
shrb
enter
sub
xor
adc
xchg
popa
inc
sub
pusha
in
rorl
and
out
ljmp
movsl
push
cmpsb
mov
lods
or
clc
psllw
mov
mov
das
push
sbb
aas
and
dec
add
jo
or
test
or
sbb
ljmp
cli
mov
movsb
cltd
ror
lcall
and
add
push
mov
jl
loopne
inc
jo
lret
dec
int
das
jae
sbb
mov
test
rorb
insb
ja
dec
fiaddl
addr16
cmp
xchg
jo
and
cmp
pusha
xchg
gs
push
out
xchg
mov
mov
mov
xlat
jle
mov
adc
push
cmp
and
fistl
inc
jne
movsb
sbb
rcrl
xor
jl
mov
test
notl
rorl
mov
loopne
aaa
push
test
xchg
fwait
sub
mov
test
loopne
jle
and
inc
pop
aam
mov
mov
xor
mov
jb
pusha
mov
xor
popa
rcrl
xor
xor
lcall
inc
icebp
pop
cltd
mov
inc
addr16
shl
insl
pop
cmp
enter
sbb
sti
std
into
pop
push
mov
adcl
gs
test
bound
jmp
xchg
mov
sbb
rcrb
call
aad
or
out
mov
leave
pop
fwait
cwtl
clc
jnp
roll
repnz
xor
mov
test
nop
adc
cmc
xor
stos
mov
daa
xor
divl
out
add
mov
jne
jae
mov
push
mov
cmp
fiaddl
outsb
outsb
inc
les
push
loope
push
cmc
push
sub
adc
loop
or
pushf
push
sub
mov
lock
movl
and
sbb
sbb
inc
enter
pop
fdivr
xchg
lret
dec
sub
hlt
pop
insb
rorl
push
lahf
mov
adc
stc
dec
pushf
cmp
push
fstpt
cld
dec
sub
hlt
and
bound
mov
adc
push
fistpl
call
les
mov
mov
adc
sub
push
xor
std
lods
xchg
test
popa
sti
dec
js
jae
xchg
push
int3
ljmp
pop
fnstcw
lahf
cmc
pop
notb
sbb
lret
hlt
xchg
xor
subl
icebp
sbb
sti
mov
movsb
mov
lock
jmp
outsl
xchg
xor
jmp
inc
into
lcall
fwait
movsb
movsl
movsb
mov
loop
mov
in
mov
pop
and
push
test
cmpl
ja
and
addr16
mov
xchg
add
fsubrs
mov
test
fcmovnbe
enter
push
add
or
pop
adc
inc
inc
imul
cmpsl
push
out
sbb
xlat
jecxz
mov
push
repz
js
xlat
cvtpi2ps
sbb
rcrb
bound
jae
andb
xor
jl
mov
repz
mov
loop
inc
lock
cmp
adc
cld
adc
cli
repz
lock
clc
cmpsb
popa
aaa
insl
push
rcrb
mov
hlt
add
pop
scas
inc
and
movsl
xchg
push
outsl
test
pop
outsl
add
push
jle
pop
inc
push
icebp
xchg
shr
inc
pushf
sti
in
xchg
xchg
leave
clc
pushf
lods
pop
sarl
int3
push
addb
and
inc
imul
mov
dec
int
push
dec
push
push
push
push
call
jg
inc
jne
pop
mov
xchg
and
pop
fimull
jno
shl
adc
push
inc
popa
sbb
stos
jg
inc
adc
cmpsl
xchg
sub
jecxz
nop
std
jno
mov
mov
clc
loope
mov
in
xchg
movsl
pop
sbb
js
rcrl
jmp
mov
ss
into
dec
ljmp
and
inc
pusha
aad
push
loope
pop
xchg
push
inc
pop
pop
je
mov
scas
dec
jp
xor
mov
in
fcoms
into
mov
jg
xchg
sbb
ret
jecxz
lret
imul
icebp
xlat
fidivl
sti
inc
sar
sbb
sahf
pop
mov
add
mov
shll
mov
xchg
mov
push
cmp
in
ficoml
cmp
inc
out
pop
and
sbb
push
sub
and
mov
ret
mov
ret
fildl
mov
stos
mov
and
stos
clc
adc
sub
popa
lods
addr16
dec
mov
notl
icebp
hlt
or
fdivl
rorb
imul
fcomps
inc
loope
das
lods
lret
push
jp
mov
scas
push
in
dec
ja
inc
ret
pop
inc
or
out
call
xor
or
imul
cld
adc
aas
ljmp
inc
push
es
sbb
shld
push
cmpl
xadd
sbb
out
movsl
int
mov
test
movsl
fcomps
lds
bound
mov
inc
dec
xchg
stc
push
shll
roll
pushf
cmc
xor
mov
sysexit
cmp
dec
call
sub
and
push
lahf
dec
rcr
xor
sub
rep
mov
ffree
mov
inc
pop
sbb
inc
mov
pop
jmp
test
iret
pop
lock
movsb
in
loopne
fldenv
adcl
daa
or
pushf
pop
dec
pop
pusha
adc
mov
cmpb
or
mov
adc
mov
inc
in
jecxz
adc
sub
mov
clc
loopne,pn
push
cwtl
mov
jo
cmp
mov
mov
fwait
stc
int3
mov
lret
sub
test
mov
sbb
dec
sahf
fidivs
push
sarl
aam
cmp
dec
cmp
jle
push
cs
out
push
sbb
cmp
imul
jbe
test
js
jns
sbb
fs
mov
lods
pop
das
add
hlt
sbb
push
lods
sub
jno
cmp
sarl
jmp
cmpsb
aaa
andl
cmp
push
or
pop
jbe
mov
xchg
xlat
mov
mov
and
xchg
push
jge
addr16
or
in
hlt
mov
movsb
jmp
mov
and
test
xor
movl
and
inc
fcoml
ret
and
movsb
push
lahf
dec
pop
sti
pop
lods
jp
mov
scas
movl
pop
pop
mov
rorl
inc
or
xchg
dec
test
setbe
outsl
shl
add
bound
hlt
mov
jg
sub
in
cltd
pushf
add
out
fildl
dec
sahf
pop
je
sub
cmp
inc
jne
or
loope
rolb
hlt
mov
xchg
gs
cli
and
dec
push
je
cmp
loope
test
inc
stos
test
mov
lahf
jae
xchg
mov
xchg
test
jb
fistl
sub
pop
outsb
push
hlt
inc
cli
iret
mov
test
fsubp
fistl
movsl
lcall
cmp
pop
lret
rolb
cmp
cmpsl
jmp
and
cld
cs
imul
aam
mov
push
mov
cmp
pop
test
push
xor
int
mov
inc
ljmp
ret
or
aad
loopne
ficoms
fxch
arpl
mov
xchg
mov
mov
sub
aaa
mov
cld
fnsave
or
pop
ja
push
and
inc
lret
cmp
add
shll
aas
je
lea
je
adc
lea
xchg
pop
into
fdivrl
lcall
icebp
mov
aad
push
mov
test
ss
mov
sub
divl
sti
jecxz
jmp
fisttpll
js
andb
jbe
dec
test
out
lea
add
push
and
xor
push
stc
xor
cmp
clc
xchg
int
cwtl
cvtps2pi
sbb
fmull
or
ss
lahf
clc
insb
mov
push
xchg
pop
les
ja
call
mov
pop
ja
adc
mov
dec
xlat
jp
call
add
xchg
jb
pop
adc
inc
inc
gs
lods
mov
fucomi
iret
je
mov
movsl
cmp
scas
fst
hlt
in
push
xor
scas
push
andl
shrl
mov
mov
loopne
in
fsubr
scas
or
push
pop
mov
sbb
mov
lahf
jns
push
lcall
xor
mov
dec
loope
sub
sbb
push
inc
jge
or
enter
rclb
loope
push
pop
jp
or
dec
cmpsl
or
ret
fldl
in
hlt
add
xchg
fsubrp
mov
std
pop
insl
movsl
adc
jo
cmp
lea
mov
dec
cmp
mov
fistpl
jmp
mov
add
add
or
mov
dec
mov
repz
sbb
dec
xor
repz
repnz
and
jo
stos
push
dec
lret
jl
fdivs
int3
add
mov
add
stos
inc
icebp
inc
hlt
inc
mov
rcl
fnstcw
hlt
push
cmpsb
xor
lea
shll
sbb
pop
or
push
sbb
sub
shlb
mov
sbbl
sub
mov
mov
lds
cmc
std
cmp
sub
out
repz
ret
lods
mov
cwtl
push
or
ret
in
sbb
icebp
iret
pop
fisubs
cmp
setbe
mov
push
stos
mov
push
fimull
mov
adc
inc
cltd
rorb
xor
lret
xorl
sbb
cmpsl
imull
and
lret
jl
mov
cmp
and
xor
dec
mov
scas
xchg
js
pop
ljmp
sbb
sub
jp
lock
mov
mov
gs
inc
or
or
loope
adc
xchg
mov
lcall
pushf
mov
mov
lret
decb
xor
push
dec
and
cmp
push
mov
push
xor
inc
nop
popa
mov
sarb
or
aas
jge
xchg
fnstenv
sub
clc
imul
dec
sub
hlt
sbb
xchg
sub
fwait
ret
dec
push
pop
pop
adc
mov
lret
loop
pop
mov
data16
imul
pop
sub
out
dec
movsl
pop
jle,pt
adc
jne
mov
adc
adc
push
cmc
repz
xlat
or
ficoms
sar
lock
mov
addr16
jb
sbb
push
dec
insl
test
and
push
sub
push
loope
hlt
arpl
sbb
and
stos
push
rclb
mov
mov
pop
dec
movl
pop
outsl
lods
cmc
and
jns
fcmovnbe
out
push
xor
ret
jbe
add
sbb
push
xchg
push
lock
xor
js
cmp
daa
add
mov
fdiv
push
add
push
pop
fs
or
hlt
dec
aad
repz
and
push
std
lret
ret
push
pop
loop
cmpsl
inc
out
addb
and
adc
es
fsubs
sbb
bound
gs
js
jp
inc
xor
xchg
mov
pop
in
movd
stc
sbb
adc
gs
dec
aas
mov
shlb
or
shrl
movsbl
sbb
xchg
das
ficoms
jb,pt
popf
lahf
test
mov
dec
cmp
in
loope
sub
cmp
and
subb
out
xchg
and
jns
add
lods
and
jo
cld
jge
leave
cmp
xorl
and
pushf
and
out
les
push
push
mov
dec
mov
jg
sarb
add
pusha
js,pt
das
gs
sub
movsl
mov
sti
cmp
hlt
dec
insl
gs
fdivl
iret
ror
mov
pop
call
aad
and
inc
mov
les
mov
jmp
jmp
mov
pop
jl
stos
in
test
cmp
loope
inc
flds
push
adc
loopne
dec
popf
pushf
fucomi
hlt
test
xchg
mov
bound
mov
cmp
lcall
mov
rolb
ret
sub
icebp
pop
repnz
dec
out
fwait
mov
sub
adc
adc
lcall
imull
das
movsl
inc
mov
push
dec
and
xchg
lock
pop
loop
sub
pop
cmp
cmp
cltd
xchg
jb
aad
sahf
adc
sbb
js
stos
aaa
jne
stc
in
cli
xchg
scas
test
push
std
cwtl
push
push
aaa
xor
stos
xchg
fisttpll
pusha
cmp
mov
stos
inc
jecxz
sub
xchg
movsl
sbb
add
roll
ljmp
lcall
jp
pop
sub
and
inc
push
mov
js
scas
add
icebp
mov
or
test
data16
jmp
cmp
arpl
mov
pushf
scas
das
pusha
mov
pop
lods
pop
rcrl
mov
push
addr16
mov
ljmp
out
out
xchg
cmovp
loopne
mov
fcoml
js
mov
dec
mov
jo
pop
xlat
test
mov
cs
and
fdivrl
mov
mov
scas
test
xchg
xor
ds
or
mov
push
push
sbb
cs
inc
push
add
jns
mov
cmpsb
out
jmp
ss
pop
rcll
je
and
fdivl
sbb
mov
or
jo
fisubrl
mov
pop
push
sbb
jnp
fildll
cmc
fsincos
jo
or
dec
les
adc
mov
lods
fidivrs
movsl
push
jle
int
cmc
xchg
mov
lret
mov
dec
inc
ficompl
decl
outsb
jl
jl
mov
addl
cli
int3
loop
lahf
push
mov
test
sbb
sub
push
dec
jns
aaa
aam
xor
and
jecxz
lds
mov
lret
sub
add
xor
cmc
mov
pop
test
je
mov
ss
sub
sti
pop
jae
jmp
in
xchg
cmc
adc
imulb
ret
xor
dec
out
mov
dec
mov
xor
in
cmpsl
out
fsub
pop
cmpsl
std
addr16
mov
xchg
cld
in
lock
loop
aam
lahf
pop
inc
les
stos
in
and
push
fsubs
or
shl
add
adc
xor
sub
push
outsl
shl
push
sub
sbb
fisubl
push
lret
or
mov
aas
adc
xchg
sbb
les
loope
stos
sbb
imull
xor
jecxz
mov
mov
insl
lock
jl
mov
pop
jbe
xlat
insb
in
jb
cmpsl
cmp
mov
inc
jmp
cmp
movsl
pop
push
out
mov
dec
mov
hlt
sahf
pop
movsl
xchg
sbb
xlat
leave
or
hlt
loope
adc
movsb
mov
aaa
dec
push
jnp
icebp
repnz
aaa
cmp
lods
rcr
out
add
ret
add
popf
arpl
mov
jp
lret
lret
sbb
popa
add
icebp
shlb
pop
cmpb
ret
xor
pushf
movsl
int3
decb
xor
ret
hlt
pusha
mov
lret
inc
push
inc
arpl
and
xchg
stc
inc
fldenv
shl
pop
pop
inc
fwait
jl
and
ljmp
lock
mov
xorl
cwtl
mov
sbb
rol
scas
inc
xlat
jle
std
adc
dec
add
out
jp
and
in
add
cli
mov
xchg
ret
out
push
push
movsb
cmpsl
clc
shlb
rclb
daa
fwait
ja
dec
sbb
sub
jmp
pop
add
adc
or
in
mov
sbb
outsb
adc
inc
jecxz
adc
fprem
inc
movsb
lods
test
jb
repz
mov
sub
shl
in
jecxz
nop
movsl
sub
dec
mov
and
or
shrl
xlat
dec
hlt
ds
and
xor
rorl
xchg
ret
pop
into
ljmp
jl
rol
js
cmp
inc
or
cmpsb
arpl
cmpsb
mov
hlt
and
jecxz
loop
dec
adc
cmpsl
test
pop
cmc
movsl
sub
mov
and
push
pop
lahf
ret
pop
mov
fs
mov
out
sbb
out
jg
sub
in
push
xchg
in
adc
loop
pop
mov
mov
jbe
xor
loope
lahf
aad
outsl
jb
pop
mov
and
repz
sbb
sahf
or
cmp
pop
dec
push
sar
cmpsl
lret
shlb
xor
lret
mov
call
or
push
sub
sarl
pop
dec
cs
add
sub
mov
pop
sbb
jmp
aad
xchg
push
xchg
dec
sbb
out
shr
or
incb
mov
sbbl
out
popf
fwait
es
adc
cmpsb
cwtl
scas
adc
adc
jb
cwtl
lds
aaa
es
jge
push
imul
lds
hlt
dec
mov
out
or
pop
cltd
sbb
mov
mov
data16
jne
ret
stos
add
dec
in
or
aaa
pop
out
push
outsb
jne
jbe
inc
ja
test
xor
or
mov
mov
add
push
fiaddl
sub
in
sbb
push
lea
mov
pusha
mov
mov
xchg
out
pop
stos
movl
cmp
mov
ss
dec
leave
pop
sbb
insb
rol
negb
mov
gs
cmp
push
mov
and
test
sahf
adc
into
int
jo
adc
dec
xchg
icebp
jns
jge
loop
mov
inc
jno
pop
pop
mov
sahf
sbb
mov
nop
in
push
pop
hlt
xchg
sub
inc
push
fwait
xchg
jl
std
or
insl
dec
mov
outsl
mov
cmp
xchg
ffreep
adc
mov
fwait
aas
sbb
imul
xor
or
push
idivb
sbb
push
lahf
rcl
jp
pop
hlt
ds
imul
imul
fldl
xchg
hlt
shrl
xchg
int
in
and
out
scas
push
imul
loopne
rol
lret
pop
lods
jno
mov
popf
pop
pop
outsl
dec
rcrb
push
fistpl
sbb
sub
sub
fcompl
rcrl
icebp
lret
andl
push
mov
shll
jp
pop
ds
or
dec
push
mov
xchg
repz
out
sub
and
mov
inc
sub
rcrl
or
aam
sbb
sbb
dec
dec
lods
mov
repz
insb
jp
inc
pop
or
andl
jg
outsb
cmp
cmpsb
xchg
cwtl
mov
mov
adc
xchg
jo
or
xchg
movsl
sarb
pop
xor
stc
fyl2x
js
repz
out
xlat
pop
sub
sbb
and
std
mov
outsb
and
int3
pop
pop
gs
push
jns
sub
icebp
and
xchg
cmp
push
fcoms
lret
ret
adc
cli
rorb
sbb
out
mov
mov
icebp
in
push
js
insl
jl
call
popf
pop
and
sbb
fwait
pop
leave
mov
out
stc
sub
and
ret
roll
sbb
push
push
mov
int
jns
or
fcmove
je
ljmp
and
daa
add
repnz
nop
cwtl
mov
add
and
das
inc
jne
js
cmc
mov
lock
sub
xchg
xchg
sbb
inc
test
shll
stos
inc
inc
lock
fdivrl
push
decb
adc
imul
fdivrs
jb
ret
jl
ret
clc
xlat
std
iret
or
inc
aad
int
pop
adc
out
out
dec
adc
cmp
cwtl
sahf
mov
pop
sub
cld
clc
loope
pop
dec
lods
adc
ja
cmp
ja
mov
lock
je
inc
out
ret
pop
hlt
das
aam
xor
mov
sub
jg
jno
fdivl
out
flds
daa
push
jns
in
in
in
out
into
shr
arpl
ret
sti
bound
add
push
scas
insl
mov
mov
or
add
ljmp
ljmp
fwait
loop
imul
sub
iret
cmpsl
mov
addr16
push
xor
loope
daa
jg
clc
or
adc
xor
or
cmpsb
push
stos
mov
stos
lds
sbb
ja
push
es
stos
mov
xchg
outsl
scas
pop
dec
stos
mov
aaa
movsl
xchg
jb
fbld
hlt
test
insl
rorl
shrl
int
lahf
sbb
fsubr
or
pop
sbb
loopne
sub
push
aaa
fimuls
shlb
ficompl
fmull
jno
lods
xchg
inc
push
stos
push
mov
je
pop
data16
add
mov
lcall
mov
sarl
mov
sbb
addr16
push
rcrl
push
push
out
test
mov
mov
dec
nop
mov
lea
push
addr16
or
adc
sub
scas
push
stos
test
bound
stos
loop
lret
mov
cmp
roll
out
ja
adc
icebp
mov
and
aaa
fs
jb
cmpsl
pop
jg
xor
popf
adc
ud2
fwait
adc
jl
enter
push
xchg
outsl
push
sub
sbb
test
pushf
mov
inc
push
movsl
ss
jae
clc
popa
insb
sti
sub
mov
mov
clc
sarb
fisubrl
inc
js
dec
out
lea
cld
hlt
shll
xor
ret
call
sbb
inc
lret
movsl
lods
nop
jl
adc
gs
out
mov
imul
insb
mov
mov
lcall
in
push
mov
cmp
push
in
addr16
push
insb
push
movsb
xor
pusha
inc
jl
pushf
repnz
in
cmp
cmp
test
adc
add
push
pop
mov
mov
inc
sub
xlat
dec
out
jl
pop
push
mov
pop
jnp
jno
jle
sub
outsl
pop
leave
ret
jne
shll
in
sub
pop
or
int
mov
rorl
in
dec
in
jecxz
cs
push
sub
xor
mov
ds
inc
jg
test
cli
aam
movhps
ret
movsl
gs
cmp
mov
pop
mov
out
sahf
cmp
addr16
shll
bound
cmp
xorb
mov
lret
mov
jg
mov
push
cmp
aam
dec
stc
jae
outsl
pusha
out
adc
inc
push
test
sbb
call
jg
inc
pop
stc
sahf
sti
movsl
inc
jb
ret
lock
ret
cmpsb
out
hlt
ret
jnp
and
mov
jecxz
rcrb
scas
push
mov
adc
sbb
fdivrl
into
and
sbb
ljmp
push
aad
dec
push
dec
outsl
int
iret
in
lcall
cmc
repz
xlat
fnstsw
jmp
xor
aas
and
sahf
inc
nop
push
inc
je
inc
aaa
stos
xlat
nop
jge
xchg
mov
pusha
scas
lds
add
fdivrs
cmpsb
sbb
dec
lcall
cmove
call
dec
mov
pop
decb
mov
pop
shr
push
movl
jg
and
pop
adc
push
lods
push
xor
out
xlat
outsb
loope
add
and
inc
dec
push
aaa
jl
imul
stos
mov
out
mov
cli
xchg
jecxz
ljmp
xchg
dec
loopne
dec
popf
mov
outsb
shll
dec
push
sub
aad
pop
add
add
inc
xchg
and
cld
scas
xor
pop
cmc
lds
xor
add
mov
nop
cmp
pop
jmp
or
cmpsb
daa
jg
mov
sub
mov
cmpsb
adc
and
dec
call
loope
mov
push
add
in
fwait
hlt
mov
mov
add
and
lea
stos
xchg
pop
js
leave
cmp
int3
dec
imul
push
loop
pop
sbb
jl
dec
repnz
or
lret
ljmp
mov
fmull
jle
xchg
xor
aas
into
cmp
rol
push
stos
cmp
adc
pop
insb
jmp
into
das
cli
mov
jns
or
mov
or
jb
fstl
stos
cmp
mov
or
mov
daa
fnstcw
insb
or
addr16
jmp
jle
sub
sbb
and
rcl
sbb
loopne
popf
jo
stos
mov
xchg
lea
ds
das
dec
mov
mov
push
jmp
jb
ja
sub
mov
pop
cmpsl
xchg
loope
lds
les
jo
repnz
lds
fmull
repz
xchg
jns
jmp
sub
jle,pn
push
leave
sbbb
lds
push
mov
sub
cmpsl
rcrb
es
dec
mov
addb
xor
aaa
pushf
push
mov
repnz
mov
jnp
rclb
stos
pop
pushf
cmp
inc
cmp
stos
pop
stos
cmp
mov
push
pushf
clc
loopne
cmpsl
mov
adc
les
inc
ficoms
push
and
cld
ret
fs
cmp
dec
sub
cwtl
push
out
push
sub
daa
stos
movsl
out
aaa
push
mov
inc
xor
mov
mov
push
push
cltd
aas
jo
pusha
push
mov
mov
push
pop
lahf
repz
sbb
ret
push
cltd
xor
repz
mov
mov
adcl
cli
ret
jbe
into
or
add
pop
stc
jb
mov
mov
out
jle
push
enter
mov
adc
and
jae
ror
or
sarl
mov
ds
jae
bound
mov
cmp
cwtl
out
mov
popa
sub
push
dec
nop
dec
out
lods
pop
push
push
adc
dec
inc
jl
mov
mov
push
es
subl
mov
or
mov
sti
mov
cld
pop
push
daa
fwait
jg
movsb
push
add
sbb
pop
cmpsl
and
notl
push
mov
outsl
cmc
mov
mov
sbb
adc
xor
out
in
inc
popf
inc
cli
sub
inc
and
decl
mov
push
inc
mov
xorb
loopne
enter
mov
push
fisubrs
adc
mov
mov
neg
mov
cli
mov
or
cmp
outsb
xchg
sub
xorl
inc
push
pop
push
jl
adc
sbb
test
mov
dec
outsb
pop
xor
pop
adc
sbb
sbb
mov
cmpsl
lea
jle
insb
addl
movsl
gs
jle
inc
rcll
mov
inc
scas
mov
pop
cmp
ss
clc
sbb
xchg
mov
fcmovbe
gs
in
popf
and
fimull
aas
aaa
loop
xlat
inc
dec
mov
lds
aad
and
push
inc
test
lahf
inc
xchg
xchg
clc
fcmovnb
rcll
xlat
xchg
lods
andb
sub
leave
sub
cs
mov
pushf
jne
jae
lret
inc
push
mov
sbb
adc
jae
std
outsb
scas
xor
cmp
stos
notb
jnp
ss
lods
loop
mov
or
pop
call
xchg
inc
jno
sbbb
xor
cmpl
out
std
mov
cmp
jno
adc
fwait
jnp
cmp
jge
pop
out
repnz
jae
fimuls
jp,pt
subb
xchg
sbb
movsl
bound
dec
jnp
dec
xchg
push
xadd
sbb
and
xchg
jo
stc
into
or
pop
mov
or
cmp
clc
in
cmpsb
xchg
das
and
movsl
dec
stos
scas
mov
jle
fdivl
mov
sub
insb
or
push
gs
divl
push
jle
or
mov
push
shl
and
pop
or
adc
push
cmpsb
das
ud0
adc
pop
xchg
int
cmpsb
inc
mov
popa
or
cmp
sub
sub
mov
push
mov
popf
xchg
mov
pop
add
stos
mov
pop
mov
cmp
cmpsb
les
out
xchg
dec
iret
sbb
in
fnstsw
jb
and
dec
adc
or
mov
in
jp
repnz
shlb
in
cmp
mov
scas
push
imul
push
daa
mov
mov
test
push
mov
or
sub
and
std
stos
jno
or
pop
xchg
push
xor
test
hlt
shr
sub
mov
mov
add
jnp
fcomps
pop
aaa
pop
outsb
in
negl
ds
stos
jo
inc
gs
cltd
aam
mov
cli
ds
jno
pop
faddp
mov
jns
mov
sub
dec
mov
push
sbb
cmp
mov
mov
and
popf
in
fsubrs
cltd
jae
in
in
mov
out
jae
shrb
add
xchg
mov
lods
xchg
sub
push
lods
push
ror
adc
jb
sub
cs
fs
inc
vorps
jno
cmpsl
sub
inc
std
lods
int3
xchg
and
push
xbegin
push
and
push
mov
lret
mov
lock
xlat
test
jl
hlt
out
mov
mov
sub
inc
and
pop
pushf
dec
aad
push
xlat
dec
lock
fisubrl
dec
out
xor
mov
enter
andb
loope
push
mov
fisttpll
lods
adc
lret
cmp
pop
int3
push
mov
mov
jle
jmp
mov
fcom
xor
clc
stos
movsl
loopne
movsb
stos
pop
lds
sub
ljmp
lods
in
xchg
xor
mov
mov
or
repnz
pop
adc
lds
dec
push
adc
xchg
mov
mov
push
or
mov
xor
ret
lret
scas
push
mov
dec
ja
in
push
adc
xchg
pop
jg
ds
mov
sub
lcall
adc
popf
gs
mov
xchg
adc
mov
call
out
mull
jl
mov
roll
jecxz
in
and
push
xlat
sub
lds
dec
scas
jecxz
inc
adc
adc
fildll
and
lcall
cmp
xchg
jg
pop
popf
rolb
outsb
clc
daa
sub
adc
mov
loope
aad
out
xchg
add
outsl
data16
sbb
adc
cmpsb
jmp
cmpsl
aam
aas
in
popl
mov
xchg
mull
test
ss
adc
out
or
cmp
pop
ss
fcompl
lahf
lahf
sbb
imul
addr16
lcall
scas
jg
cmp
insl
scas
out
sub
movsl
fs
adc
divb
push
outsb
iret
leave
push
hlt
or
sub
cmp
out
or
cmp
into
xor
loope
mov
popf
rcll
mov
pop
push
mov
aam
sbb
or
add
bound
ljmp
inc
pop
xchg
sbb
arpl
cmp
fsubr
pop
or
jns
mov
inc
sub
out
xchg
lret
ret
jmp
mov
lock
cmp
repz
add
pop
pop
jae
add
inc
mov
mov
xchg
jl
pop
sub
inc
fisttps
mov
hlt
pop
movsl
out
mov
jecxz
xchg
push
mov
inc
shll
inc
out
es
inc
add
jle
test
xchg
stos
subb
test
ds
in
ror
out
imul
xchg
ds
add
or
pop
pop
mov
push
scas
mov
inc
outsb
setge
addb
scas
inc
out
mov
gs
test
rorl
test
inc
scas
pop
dec
out
xor
push
in
push
mov
notl
in
or
shr
xchg
xchg
stc
ds
in
mov
out
xchg
push
and
lcall
test
cmp
ds
call
out
hlt
inc
imul
je
out
lahf
mov
xor
jecxz
popf
les
mov
mov
cmp
xchg
fsubrs
push
iret
shr
mov
sbb
repnz
sub
or
sarb
insb
xchg
shll
or
xor
pop
mov
lahf
jecxz
nop
jb
lds
mov
std
std
cmc
jp
aas
cmp
push
lods
sbb
mov
jl
filds
aas
insb
add
enter
sub
inc
xchg
sbb
lret
mov
add
pushf
adc
ljmp
mov
cmpb
repnz
bt
ret
dec
mov
push
ficoml
jle
cmp
lret
jecxz
sbb
sti
sbb
lret
ds
test
ja
in
pop
imul
lret
into
popf
imul
inc
inc
push
jae
sub
jnp
scas
test
andl
outsl
cmp
jno
mov
cmp
sub
jne
addr16
push
push
mov
cmp
in
cmpsl
jae
call
cwtl
fstpl
push
cmp
movsl
sub
rolb
mov
mov
push
xchg
rclb
inc
push
jge
lods
rcll
push
pop
adc
subl
cmc
mov
outsl
mov
mov
sahf
xchg
ror
rcrl
cmc
mov
push
xchg
sub
xor
mov
or
xchg
adcb
jbe
int3
mov
ss
xchg
int
xchg
test
mov
adc
cwtl
clc
push
mov
mov
adcl
in
cmpsl
shrl
jne
lods
gs
xchg
mov
push
stos
les
cli
cwtl
or
mov
jmp
aad
xorb
dec
sub
fxch
arpl
rcl
mov
and
mov
dec
addr16
movsb
sbb
push
xchg
lods
and
cld
mov
stos
sbb
push
xchg
mov
mov
jbe
mov
mov
pop
int3
sbb
xchg
fdivs
je
cmp
cmp
in
lock
das
pushf
mov
jp
movsl
xchg
test
pop
in
jge
push
cmp
xchg
pop
xorl
inc
aas
push
stc
mov
movsl
stos
mov
pop
xchg
xor
unpckhps
call
sbb
in
cmp
idiv
sbb
adc
push
xchg
cwtl
aas
stos
jb
cmpsl
push
sub
push
push
add
out
mov
sti
paddq
mov
lret
sub
stc
bswap
aaa
fidivrs
shlb
jae
dec
or
jp
mov
push
mov
push
and
call
push
addr16
shl
dec
insb
shl
pop
cmpsl
pop
mov
pop
cmpsb
adc
fildll
loope
imul
xchg
jmp
jmp
cli
sahf
xchg
inc
hlt
sbb
int3
mov
cmpsb
daa
cli
pop
dec
mov
or
lock
negl
je
push
pop
stos
inc
inc
adc
xor
sti
fcmovne
push
xor
mov
adc
in
mov
fdivrs
jp
shl
out
hlt
adc
test
imul
mov
xchg
fldlg2
popa
mov
adc
loopne
cs
mov
inc
jae
jg
xor
add
leave
sbb
mov
pop
les
rcll
xor
and
or
sahf
pop
nop
inc
xchg
push
repz
loopne
inc
inc
and
sub
xor
out
xor
sub
add
pop
dec
add
and
shl
pop
add
mov
jno
or
xchg
pop
popf
ret
testl
cmpsb
std
jns
fs
fmul
push
aaa
inc
jg
mov
jecxz
pop
fwait
jb
cmp
pushf
pop
jbe
decb
adc
cmc
fdiv
push
mov
shll
mov
lret
cld
js
popa
xchg
shr
aam
xor
stos
pop
arpl
mov
popf
popf
stos
xor
inc
call
movsl
push
pop
in
aaa
or
or
out
psubsb
add
out
test
rcr
lea
push
out
sahf
roll
or
pop
push
cmp
mov
push
mov
jge
lahf
clc
and
dec
and
gs
movsb
in
mov
leave
lods
push
cmp
mov
ljmp
mov
ja
mov
dec
lock
xchg
adc
push
dec
mov
pop
pushf
test
inc
lret
dec
movsb
mov
dec
iret
lret
sub
xchg
mov
popf
add
ds
pop
jp
int
jbe
adc
sub
xor
pushl
mov
or
aad
sub
pop
sahf
in
jb
aad
xchg
filds
mov
sbb
fwait
shll
cmpsb
je
es
jne
test
or
fidivl
xor
data16
mov
cs
push
sbb
out
mov
fisubrs
push
or
push
fcomi
mov
adc
mov
fisubs
cli
push
xchg
test
xlat
repnz
and
pop
popf
std
loope
int
inc
pop
push
loopne
sti
cmpsl
sub
out
xchg
ja
mov
loop
push
pop
push
cmpsb
jno
cmpsl
or
imul
cmpsl
push
cld
mov
dec
dec
pop
fsub
add
fists
jg
pop
in
or
dec
jo
sub
push
lods
inc
stos
movsb
lret
loop
icebp
push
xchg
cmc
sub
dec
and
xchg
mov
push
sbb
jne
jg
mov
jle
jno
in
cmp
loopne
mul
clc
inc
ja
aad
movsl
lret
dec
jnp
jle
or
sti
add
outsl
xor
cltd
loopne
shrl
and
popa
in
ret
mov
mov
xor
sahf
int
mov
shll
push
repz
lahf
or
call
int
jmp
test
fstps
sti
enter
sar
out
scas
mov
pop
jmp
or
neg
cmpsb
cmp
sub
and
arpl
mov
addr16
inc
jecxz
es
mov
xor
dec
movl
dec
aad
sub
ljmp
out
xor
jle
xlat
les
ds
inc
mov
xchg
mov
sar
lods
stc
pop
pop
mov
jno
inc
mov
mov
cmc
shrb
pop
mov
and
call
sarb
sbb
adc
mov
jmp
icebp
push
or
in
mov
cmp
outsw
push
outsl
imul
add
scas
jae
sbb
add
aaa
xor
movsl
pop
test
fs
sbb
mov
cmp
out
dec
mov
clc
push
clc
bound
das
hlt
sti
lret
cmp
or
loop
push
shll
ja
mov
das
cmp
push
jno
adc
xor
stos
pop
sub
jmp
rorl
jmp
xor
insb
dec
xchg
orl
leave
add
call
dec
lret
stos
dec
fdivrs
mov
mov
sti
cltd
inc
cld
cmp
xchg
movsl
arpl
cmpsl
jge
cs
and
lds
aam
lea
lods
lret
jnp
push
push
fwait
mov
mov
pop
fdivrl
adc
adc
xor
sahf
push
cld
and
stc
dec
imul
jb
lds
fwait
popf
cmp
adc
lock
rcr
mov
mov
js
mov
xchg
mov
sub
pop
cmp
and
sub
mov
lock
in
stos
fucom
adc
mov
lods
add
cld
jge
out
cld
pop
pop
cmp
or
inc
mov
mov
mov
mov
movsl
adc
sub
jns
pop
mov
mov
lock
cmpsb
push
mov
in
or
pop
pop
incb
hlt
or
cmp
pop
sub
mov
jne
dec
lret
push
inc
ja
int3
mov
inc
ljmp
pushf
popa
call
cltd
lods
inc
loop
out
mov
test
mov
cmp
shrb
push
fwait
inc
lret
xor
popl
sub
xchg
call
jge
sub
popf
push
mov
dec
iret
add
push
fwait
addr16
xor
push
jns
jle
xor
push
push
in
shl
stc
in
cmp
decl
xchg
mov
dec
inc
pop
jle
dec
je
mov
es
les
je
inc
jns
cmp
scas
cmp
jbe
jmp
in
mov
aaa
aas
ljmp
xchg
ja
out
add
mov
fisubrs
out
hlt
jmp
js
pushf
cs
pop
mov
cmp
add
pop
test
adc
loopne
inc
mov
iret
pop
or
pop
add
mov
ja
lods
mov
jno
sbb
popl
xchg
cld
lods
dec
adc
jae
sti
mov
scas
loope
cltd
cmpsb
hlt
dec
repnz
mov
jg
jmp
push
int3
std
inc
add
int3
push
and
and
les
rol
dec
lret
fs
notl
jnp
mov
lock
nop
inc
and
pop
lret
pop
add
sbb
lret
loope
push
rolb
sub
js
jb
pop
shlb
mov
imul
xchg
stos
addl
das
lret
dec
jae
subl
jbe
shll
pop
lea
pop
mov
mov
lret
jecxz
cmpl
lcall
wrmsr
ja
mov
xor
mov
or
call
ja
mov
inc
je
je
jbe
rolb
inc
cmp
xor
mov
cmp
scas
mov
xchg
mov
pop
sahf
or
scas
dec
pop
xor
and
mov
inc
sbb
pop
jb
mov
pop
pop
sti
je
push
mov
dec
outsl
pop
lcall
sub
leave
hlt
mov
in
clc
inc
lods
pop
dec
pusha
mov
xor
out
sbb
and
push
jb
jnp
stos
and
dec
test
or
lods
mov
test
xor
shrb
fsubrl
push
cmp
data16
ja
mov
push
test
addr16
ja
push
jns
mov
cmp
fdivrl
shlb
imul
lods
lret
xor
pop
icebp
mov
lods
mulb
sbb
push
scas
mov
sbb
out
add
inc
rolb
mov
pop
stos
test
leave
sbb
jb
pusha
iret
ficompl
sbb
xchg
int3
call
cmpsl
fisubrl
imul
clc
push
mov
pop
loopne
setnp
mov
jge
mov
pop
lahf
fcos
lcall
add
psraw
sub
aad
out
jne
push
pop
clc
hlt
cld
das
in
test
dec
loopne
pop
fcoml
lods
jmp
pop
ret
cmpsl
adc
out
stos
call
into
mov
movsl
ds
lock
mov
add
outsb
push
jbe
xchg
push
jge
jo
push
lods
repz
xchg
xchg
cmc
push
icebp
imull
sub
pop
in
adc
int3
pop
pop
jle
aad
lods
test
xchg
cmp
jbe
push
cltd
pushf
clc
cwtl
jle
lahf
int
push
xor
pop
aas
pop
xchg
xor
mov
int
dec
scas
mov
mov
xchg
fisttpll
aaa
cwtl
ret
jl
arpl
mov
in
push
pop
ret
pop
insb
pop
sti
stc
rcl
imulb
lods
mov
sub
clc
mov
rorl
jmp
loope
mov
sub
and
stc
call
dec
shlb
dec
jge
cmc
insb
add
inc
pop
xchg
pop
sbb
cmp
pop
cmp
mov
lcall
fsubs
lods
xor
or
mov
sub
or
cmpsb
test
scas
gs
in
ja
out
in
sub
aad
cmp
in
fcom
stc
dec
lea
xchg
lahf
push
cltd
dec
push
hlt
xchg
aaa
fisttpl
mov
das
pop
pusha
mov
dec
rclb
add
sbb
jae
aad
adc
jne
xchg
inc
ljmp
cmp
add
adc
call
add
sbb
adc
into
lcall
enter
jp
mov
dec
repz
push
sub
sub
add
loop
cmpsb
jae
jle
aas
add
incb
cli
push
mov
jmp
mov
push
inc
aas
jne
into
xchg
popf
mov
and
pop
jl
cld
cmp
sahf
adc
fcomi
call
mov
push
lods
fwait
cli
pop
outsl
inc
lcall
xchg
dec
shrb
mov
jne
or
in
cmp
lcall
outsl
out
sbb
cld
pushf
xor
cmp
fisttpl
or
push
mov
hlt
add
loop
daa
xchg
add
mov
mulb
fwait
pop
scas
in
pop
inc
mov
pop
shl
fisubrl
fnsave
imull
aas
jp
xor
jmp
push
push
std
mov
mov
cmp
add
imul
adcl
mov
cli
xchg
or
mov
or
push
aam
xchg
sbb
dec
popa
fstpt
movsl
or
pop
push
in
xchg
loopne
mov
mov
jle
push
cmp
dec
scas
shll
xor
sub
mov
xor
test
dec
jae
xor
jno
push
sub
and
sub
test
ds
xlat
adc
movsl
ret
mov
xchg
push
sub
jecxz
cltd
outsb
adc
pop
gs
mov
lock
push
jmp
pop
xchg
insl
in
int
sbb
in
sub
aam
pop
xor
mov
and
xlat
icebp
std
fistps
pop
pop
jnp
scas
xor
jbe
out
mov
cmc
lret
cli
inc
fbld
test
mov
push
in
scas
daa
inc
cmp
out
lcall
hlt
cmpsl
jne
xor
icebp
outsb
test
outsb
jnp
gs
jmp
pop
test
add
dec
pop
cmp
cmp
inc
xor
aam
push
inc
dec
insl
mov
and
je
xchg
in
lds
ss
cmp
arpl
cmp
sub
fdivrs
cmp
pop
xorl
stc
icebp
xchg
xchg
lret
aad
jg
cli
dec
push
loope
push
pop
xchg
mov
out
leave
ret
loop
loopne
sbb
sub
push
outsl
sbb
mov
add
dec
and
ja
movq
jge
dec
jge
cwtl
cmp
pop
mov
addr16
push
pop
arpl
loope
icebp
fsub
subb
jno
into
mov
cli
stc
cmp
xlat
fcmovne
jnp
sub
push
push
lret
or
pop
and
mov
push
not
jne
pop
sub
stc
push
int3
xchg
das
dec
pop
std
mov
xchg
cli
cmpsl
push
pop
mov
js
clc
or
inc
cli
dec
add
cli
cmpb
int
pusha
push
shlb
flds
aad
pop
add
cmp
push
out
inc
xchg
inc
and
xchg
push
inc
outsl
xchg
or
out
insl
mov
add
icebp
hlt
lods
jno
rdpmc
jg
flds
lods
dec
lods
mov
and
ret
scas
stos
and
subl
cld
call
mov
xor
pop
jge
popa
shl
das
jle
dec
or
adc
sub
in
data16
adc
push
mov
lock
mov
aam
or
mov
push
xor
test
push
movsl
popf
pop
lret
jmp
cmpsl
test
cmp
cld
gs
movsl
imul
push
or
push
and
or
lea
inc
dec
pop
pop
dec
lahf
jmp
insb
push
faddl
xchg
mov
int3
ss
mov
cmp
xchg
mul
sbb
fwait
dec
pop
sbb
lret
pop
cmp
rorb
lahf
mov
jmp
mov
adc
sbb
add
imul
mov
lock
pop
packuswb
push
punpckldq
fistpll
inc
jne
hlt
dec
jg
xor
fistpll
imul
ret
push
push
fldl2t
pop
loopne
outsl
pop
pop
test
jmp
mov
and
js
sbb
outsl
cmp
sub
mov
scas
add
lock
fsubl
xchg
daa
iret
std
and
lahf
cmpsl
std
sub
pop
or
loopne
loopne
lods
lret
stos
xchg
dec
mov
xchg
xchg
jp
cmp
leave
ret
inc
leave
jo
idivl
fsts
sbb
mov
fxtract
nop
jno
lret
mov
jne
pop
dec
scas
xor
dec
movsb
mov
push
shlb
jb
cmp
mov
jp
cmp
stos
and
sbb
das
rcrl
sbb
or
jnp
mov
dec
or
adc
jecxz
scas
ds
cs
lods
aam
loopne
clc
pop
sbb
mov
es
mov
xchg
aaa
out
lret
loopne
sub
loope
push
cmpsl
jnp
cmp
jp
and
out
jbe
out
dec
clc
cmp
pop
sbb
mov
movsl
outsl
stos
es
xor
pop
dec
xchg
shrb
pop
sub
enter
mov
aas
test
push
mov
mov
inc
sub
inc
outsb
sub
push
xlat
sbb
movsb
clc
outsb
cs
sub
lret
fucomp
int3
mov
lods
fcoml
jge
mov
xor
testl
inc
ja
inc
stos
sub
push
aas
push
cmp
pop
in
xchg
leave
dec
add
nop
enter
jp
leave
stos
xor
mov
std
sub
movsl
shrb
popa
scas
xlat
test
divb
sub
rclb
cltd
gs
hlt
sti
jp
add
xor
fldcw
test
or
mov
mov
cmpsl
adc
xchg
mov
nop
lcall
and
pop
enter
cmpsl
adc
xchg
shrb
or
cmp
sub
mov
repnz
push
adc
arpl
adcb
xor
outsl
pop
or
and
dec
dec
pop
in
std
xor
test
pop
dec
xchg
jp
mov
jbe
adc
cs
fadd
jns
xorb
shll
insl
mov
fcoml
mov
mov
scas
pop
ja
in
mov
pop
mov
and
cmpb
arpl
in
or
movsl
or
fs
shlb
sti
das
mov
scas
push
aam
sub
push
mov
das
out
insb
jb
fidivrs
ret
xor
gs
stos
filds
cwtl
xor
jo
adc
cmp
loope
jae
fnstcw
dec
adc
bound
add
das
xor
jge
cmp
shr
jl
push
loope
scas
mov
mov
cmpsb
dec
iret
or
cs
aas
in
pushw
fdivrs
adc
ljmp
rol
mov
and
pop
das
ja
dec
push
add
std
cli
inc
pop
jp
pop
pop
or
call
fimull
int
shlb
outsl
xor
sahf
push
jg
sub
fiadds
adc
mov
jns
sbb
mov
pop
ds
lea
rorl
scas
sub
dec
cmc
sub
mov
mov
daa
ljmp
lods
or
repz
in
mov
jae
into
in
mov
dec
ds
mov
xchg
push
ljmp
and
xor
iret
daa
adc
mov
test
mov
push
cmp
pop
test
jp
adc
sbb
gs
jnp
push
cmp
mov
inc
loope
fucomp
dec
mov
jl
jnp
push
inc
out
arpl
js
and
sbb
iret
xor
push
mov
fildl
xor
and
hlt
test
adc
dec
jmp
ffreep
sub
add
rorb
cmpsl
rcrl
push
fisubrs
pop
lfs
push
mov
jns
xchg
sub
push
jns
lcall
insl
inc
push
test
mov
sbb
xor
decb
and
push
fwait
jae
mov
stc
mov
jbe
xorps
mov
lds
sub
je
clc
loope
jp
pop
aad
push
mov
test
aad
mov
pushf
xchg
sub
sarb
dec
inc
fnstenv
fnstenv
push
push
mov
hlt
sti
jmp
inc
fsubl
inc
sub
push
mov
clc
jns
sarl
cltd
jb
push
repz
inc
pop
push
insb
or
bound
push
cmp
jecxz
lock
pop
andl
push
clc
inc
roll
lods
mov
sarb
ret
lods
add
int
sub
inc
stos
aad
sbb
hlt
dec
inc
stos
xchg
stos
jp
mov
mov
inc
test
adc
jmp
lahf
xlat
imul
jno
adc
sbb
rcll
ja
pop
or
push
mov
ds
push
in
ja
aaa
clc
jns
push
mov
cmp
sbb
pushf
sbb
stc
xlat
push
lret
stc
int3
pop
mov
xor
cmpsb
xchg
daa
aaa
aas
sbb
pop
sub
cmp
in
lock
inc
ja
push
in
fbstp
cmp
mov
pop
dec
test
imul
push
leave
sbb
pushf
push
icebp
jo
sub
cltd
out
jb
shrb
insb
xlat
bound
pop
push
in
in
mov
push
mov
inc
stos
push
push
sbb
lods
xor
sub
imul
shrl
lcall
ret
loop
mov
cltd
jns
out
clc
ret
iret
push
inc
jmp
mov
mov
test
push
mov
sbb
adc
pop
dec
leave
jno
adc
jae
lsl
cmp
in
hlt
cmc
mov
adc
dec
inc
adc
xchg
lcall
mov
in
cli
cmpsb
lea
stos
icebp
das
jnp
inc
mov
cld
scas
dec
pop
repnz
dec
insl
jge
fisttps
fcomip
adc
add
imulb
xchg
loopne
in
mov
or
outsb
push
jbe
idiv
mov
jge
xor
movsb
cli
decb
out
pop
in
cmp
out
in
test
inc
outsl
data16
shrl
mov
adc
rcll
iret
cmp
or
jp
push
movsb
jmp
arpl
rolb
or
loop
xchg
ja
add
out
fwait
dec
or
cli
rorb
test
lods
bound
push
rcr
mov
sub
outsb
jns
add
sub
rcr
leave
xor
sbb
mov
fdivs
scas
cmpsb
shll
jmp
and
pop
push
push
rolb
call
lock
mov
mov
inc
inc
xchg
cs
push
out
mov
mov
fbstp
push
fisubs
in
sub
mov
imull
mov
enter
push
stos
cmp
push
pushf
mov
mov
sti
jg
test
es
jle
js
mov
pushf
sub
cld
add
shll
jp
mov
roll
push
jb
xchg
loopne
movl
mov
ret
imul
pop
cmpsl
shlb
test
push
xor
cmp
cwtl
sub
out
fcmovne
xor
jbe
ljmp
scas
push
pop
hlt
inc
int
jbe
insl
cltd
out
xor
inc
sbb
pushf
int3
in
xchg
push
cltd
shll
scas
jl
or
mov
icebp
loopne
stos
inc
jnp
xlat
in
push
xchg
dec
adc
loopne
mov
and
push
loope
jae
mov
repnz
dec
das
mov
test
jne
stos
mov
out
loop
jp
lods
outsb
push
setbe
movsb
and
stos
mov
rolb
jmp
sbb
pop
fdivs
pop
sub
push
lods
imul
rcr
les
jle
dec
enter
pop
mov
mov
inc
ds
dec
aas
cmp
jl
mov
fcoms
movsl
jle
lock
add
shl
mov
or
in
in
ja,pt
and
jne
popf
or
sub
cli
fsubrp
pop
out
inc
clc
test
adc
fwait
stos
pop
loop
clc
shr
xchg
js
inc
pop
or
scas
fsubl
push
dec
in
xchg
inc
push
sub
cmpsl
xor
lcall
imul
dec
jecxz
popf
jo
movsb
nop
mov
lds
lahf
inc
fistl
aaa
mov
xchg
mov
scas
jle
das
int3
aaa
push
mov
mov
fisttpll
jne
lahf
into
inc
jp
mov
pop
rcrl
ja
in
movsl
aaa
call
mov
mov
xchg
and
fiaddl
das
cmp
call
aas
rolb
decb
pop
jge
movsb
push
dec
out
ss
call
lcall
and
cwtl
mov
pop
xchg
das
or
movsl
mov
insl
scas
leave
adc
mov
pop
das
dec
push
push
dec
sbb
and
hlt
push
cltd
popa
mov
mov
fildll
lods
cmp
mov
fldl
rcrl
mov
negb
in
repz
mov
mov
push
rcll
call
dec
popf
sahf
jns
push
adc
out
out
push
iret
fdiv
ds
shr
dec
mov
and
lret
xor
sarl
sub
cmc
pushf
out
add
es
jmp
sbb
fwait
mov
inc
in
push
xor
jbe
fcoms
xor
cwtl
mov
jecxz
repnz
sub
ja
std
xor
hlt
leave
jl
hlt
lods
rcll
mov
pop
push
and
in
stos
popf
jae
lret
inc
xchg
call
adc
hlt
sbb
pop
shll
addr16
lret
scas
adc
xchg
je
ljmp
mov
xchg
lea
aas
pop
mov
cmpsl
push
or
cmpsb
pop
fistl
mov
mov
outsb
jmp
pop
movsb
fldenv
gs
push
sbb
cwtl
clc
cmp
add
in
repnz
mul
not
xchg
jp
xor
mov
push
pop
fldl
or
mov
dec
adc
inc
pusha
push
std
shr
sub
fsts
hlt
nop
jae
adc
gs
and
ds
mov
cmp
lods
pop
cli
lret
jl
pushf
cmpsl
inc
cmp
push
sbb
sub
aam
movswl
mov
addr16
xchg
xchg
ljmp
jp
xchg
push
int3
scas
scas
test
pop
fxch
mov
xchg
jae
call
test
nop
jmp
stos
push
sarb
outsl
sub
fidivs
mov
push
cmp
subb
cmpsb
mov
mov
mov
jae
jno
jno
xchg
fndisi(8087
ja
mov
jecxz
fwait
popf
mov
cmp
push
lods
fisubrl
inc
mov
fsubrl
pushl
pop
xor
add
add
cmpsl
xchg
movl
inc
mov
jnp
shl
xor
int
stc
lds
fisttps
test
push
jns
test
sbb
shlb
dec
lcall
cwtl
shll
pop
adc
mov
mov
xchg
test
mov
clc
pop
mov
jp
mov
in
out
lea
subl
hlt
mov
xor
mov
aas
loopne
mov
xor
jge
sti
dec
jnp
clc
leave
jg
imul
mov
adc
aas
in
lods
stc
lock
jne
push
movsb
push
lods
movsb
nop
push
jae
addb
inc
aas
xchg
xor
les
push
ds
mov
adc
cmp
push
inc
adcl
jo
out
aaa
push
mov
and
jp
inc
aam
hlt
fisubrs
cmpsl
sahf
jmp
xor
adc
mov
pop
dec
mov
jmp
fstpt
mov
and
stos
loop
shl
pop
es
das
roll
loopne
pop
movsl
movsl
inc
xlat
and
mov
fldt
test
sbb
mov
inc
rcll
jbe
push
push
neg
sub
inc
cmpsl
xchg
sub
scas
and
sbb
push
stos
pop
pop
movsb
rcrb
dec
aad
test
jp
mov
hlt
rdtsc
jnp
aaa
movsb
out
int
out
cmpsb
shl
test
xor
lods
mov
push
cli
out
aas
push
push
xchg
mov
pop
xor
sub
mov
cmpsb
or
pop
adc
and
das
mov
add
negb
lods
pop
sti
stos
xchg
sbb
dec
outsl
je
in
dec
je
mov
add
mov
loop
mov
bnd
inc
sbb
ss
cmp
negl
mov
je
lahf
ljmp
mov
popf
out
std
mov
dec
push
iret
out
dec
push
mov
ret
movd
scas
jbe
mov
andl
mov
test
inc
idivb
sti
clc
push
lahf
sahf
jns
iret
data16
testl
fwait
mov
pop
ret
movsl
jp
sti
jp
jb
mov
inc
hlt
pop
mov
mov
push
jg
mov
sahf
cwtl
jns
add
mov
lahf
cmp
test
gs
lods
repz
xchg
test
sub
cli
sub
lcall
push
fisttps
out
clc
std
out
add
push
and
mov
xor
push
push
sbb
hlt
pop
mov
xchg
add
dec
in
jo
out
sbb
jg
adc
push
and
sbb
loope
dec
xchg
outsb
test
jbe
inc
dec
mov
ret
insl
jne
js
test
dec
jns
mov
imul
xchg
sbb
test
pop
je
rcr
gs
outsl
cmpsb
out
push
shrb
daa
leave
call
fdivrp
cmp
mov
lods
cmc
push
out
dec
outsb
push
mov
adc
in
in
adcb
fimuls
dec
xchg
pop
cmp
push
out
lret
inc
jp
subl
mov
dec
scas
negb
jnp
mov
fmulp
mov
pop
dec
loope
movsl
jle
cs
push
sub
mov
mov
aad
adc
mov
imul
adc
sub
stos
mov
pop
out
jno
mov
out
xlat
dec
inc
insl
or
adc
pop
ret
cmp
jb
cmp
dec
lock
dec
mulb
xchg
mov
arpl
xorl
mov
ret
ja
clc
dec
or
test
ljmp
push
fldenv
pop
fs
sbb
pop
insl
cmpsl
sbb
adc
test
clc
inc
pop
and
sub
xchg
push
push
popf
mov
in
xchg
cwtl
cld
mov
imul
jns
and
aaa
out
mov
ds
dec
push
cld
dec
test
mov
aas
cld
pop
cmp
jb
pop
sarl
orl
pop
pop
jbe
and
mov
adc
cld
clc
xorb
call
imul
cli
cli
mov
cmp
adc
push
xchg
test
shrb
cmpsb
fists
push
cli
pop
shlb
pop
dec
movsb
sub
jge
hlt
loop
mov
jecxz
cld
ftst
mov
shrb
inc
ficoml
mov
or
lods
icebp
mov
mov
por
cli
mov
jmp
push
jns
fiaddl
rorb
shll
dec
inc
subb
push
mov
mov
clc
je
jle
std
popa
push
call
cmp
cmp
dec
dec
mov
lret
out
sti
adc
imul
pop
int
inc
in
aas
je
sbb
xor
lock
xchg
hlt
xchg
inc
push
xlat
shll
cmpsl
jno
out
stos
icebp
popa
or
push
js
lods
lret
fwait
loop
or
adc
cmpsl
jg
das
in
decl
xorl
inc
icebp
ret
cwtl
push
lret
addl
ret
ss
pop
push
mov
inc
fldl
pushf
pop
mov
pop
mov
inc
sbb
pushf
adc
pminsw
push
jne
push
clc
lahf
pop
sub
and
adc
or
mov
aad
test
nop
pop
xorl
pop
ja
shll
and
or
cmp
add
jno
push
sahf
fisttpl
and
ds
gs
mov
bound
push
daa
mov
out
rcrl
test
ljmp
mov
sbb
out
loopne
lods
and
fcomps
ja
cmp
addr16
lods
xorb
std
lock
clc
mov
fwait
cmpsb
mov
xor
test
xor
lret
xor
pop
and
sar
and
jg
xor
daa
insl
fisttpl
pop
add
sbb
out
dec
mov
pushf
cmc
mov
fistpl
mov
roll
sbb
incb
dec
and
mov
jmp
jmp
jno
xchg
inc
mov
or
xor
scas
push
add
xor
fisttpl
xchg
sbb
sub
mov
les
push
pop
es
popf
xor
mov
icebp
mov
test
pop
push
inc
pop
sub
inc
add
pop
mov
cmp
mov
cmp
mov
pop
scas
test
or
sub
xchg
outsl
sbb
jns
xchg
mov
out
mov
mov
lods
jg
dec
popa
not
xor
pop
ljmp
clc
mov
mov
js
cld
lods
inc
jns
cmp
jne
std
or
decl
sub
pop
sahf
in
xchg
int
mov
jp
int
loopne
je
jmp
push
icebp
out
in
or
mov
dec
jne
xchg
mov
loop
cld
mov
in
mov
dec
out
pop
incb
ja
sarl
xchg
shrb
mov
punpckhwd
cmp
out
ja
aas
int3
shll
sub
call
in
shll
mov
mov
xor
or
in
mov
fsubs
dec
psubsw
inc
mov
mov
add
mov
or
xchg
out
xchg
sbb
push
fs
xor
cld
mov
and
cmpsb
xor
stos
aaa
mov
mov
mov
cmp
xchg
mov
ja
sbb
push
jle
pop
push
cmp
cvttps2pi
iret
pushf
ret
das
mov
jo
jmp
add
cwtl
fsubp
lahf
and
inc
or
out
push
xor
inc
lret
fldl2t
mov
lret
fisubrl
and
ljmp
arpl
mov
push
movsl
sub
add
pop
dec
clc
push
popf
xor
xchg
mov
lds
std
dec
mov
mov
aad
push
lahf
shrb
cmp
out
pop
mov
jle
ror
cmp
cmpsb
les
cmpsl
mov
pop
push
jns
cmovnp
cmp
jae
jns
ret
hlt
ficoml
jecxz
das
mov
pop
mov
add
repz
adc
arpl
adc
imul
add
jo
aas
jmp
xchg
sbb
imul
stc
push
and
imul
mov
incl
lcall
popa
mov
mov
notb
hlt
in
das
test
rcrl
ja
cmpsb
jle
or
addr16
jecxz
in
cmp
cmc
divl
mov
int
jo
and
ror
sahf
xchg
jg
inc
push
stos
fistps
mov
inc
sub
xor
inc
aam
sub
xchg
cs
cmpsl
popa
imul
sahf
flds
xchg
inc
adc
add
aad
ficoms
cmp
int
sti
lea
stos
jg
hlt
test
or
jmp
add
into
ljmp
cli
jge
js
jbe
les
stc
mov
fisubrl
cmp
xchg
test
xor
roll
cmpsl
and
fcoml
ret
loope
push
or
lods
dec
sub
pop
lcall
cmp
pop
cld
adc
test
push
lcall
or
stc
pop
rclb
fistps
inc
lret
pop
push
jg
add
popf
add
pop
pusha
jb
sub
mov
lret
je
popf
cmp
jp
add
mov
push
gs
ret
daa
pop
mov
pop
dec
cmpsb
stos
int3
lret
aad
dec
and
ss
cmp
xor
pop
sub
mov
mov
into
sbb
test
add
dec
cmp
pop
mov
and
scas
in
mov
xchg
or
movsb
mov
xchg
aas
lahf
stos
mov
xchg
roll
mov
cwtl
mov
in
pop
insl
out
shrl
sbbb
test
das
sahf
sub
movsl
ja
roll
adc
mov
jns
hlt
jae
call
and
adc
lret
mov
mov
lahf
insb
sbb
fmuls
mov
fnstcw
adc
jle
or
loope
cmpsb
movsl
shrb
dec
and
aas
add
cltd
adc
andb
sar
cltd
lahf
xor
daa
inc
in
test
hlt
mov
mov
push
cmp
sbb
cmp
xorl
lea
fistpll
cmp
pusha
sbb
pop
or
jne
push
xor
jle
shl
scas
push
rolb
mov
push
in
rorl
cld
rorb
fdivrl
hlt
hlt
test
in
inc
loopne
inc
rclb
imul
mov
test
mov
pop
mov
ret
sbb
out
mov
or
cmp
sbb
cli
loopne
movsb
daa
jg
xchg
dec
xchg
dec
popl
movsb
inc
int
jmp
dec
sbb
add
xchg
js
or
ds
int3
fdivs
ljmp
jmp
fldl
push
push
ds
add
ds
ljmp
jbe
pop
aam
sbb
stos
and
pop
inc
outsl
dec
cli
jo
adc
les
jnp,pt
cmp
sbbl
push
call
jno
out
out
jno
out
and
jl
ret
fldl
pop
mov
jnp
enter
and
jecxz
jle
jmp
cwtl
hlt
ficomps
cltd
push
mov
gs
mov
stos
das
call
fwait
mov
out
xchg
ljmp
mov
pop
sub
enter
dec
push
pop
fildll
pop
jge
ljmp
test
cmp
mov
fdivs
cltd
insl
rclb
dec
and
lods
repnz
lcall
mov
adc
pop
in
shr
inc
in
sbb
xor
or
cmp
cmp
jecxz
mov
mov
nop
push
shlb
inc
test
dec
mov
cmc
sub
jae
push
icebp
jo
jge
dec
aas
adc
jmp
push
mov
int3
repz
dec
divb
enter
mov
popa
lret
sbb
xchg
repz
hlt
out
mov
cmp
in
shrl
push
add
fldl
rcrl
es
popf
imul
incl
jb
incl
lahf
jge
xor
leave
dec
mov
pop
xchg
xchg
adc
push
inc
push
jle
call
aad
push
mov
test
jl
sub
sbb
or
mov
jbe
fwait
cmp
pop
pop
jne
cmp
add
xlat
cmp
repnz
ret
cli
call
push
out
dec
pop
jmp
xchg
xor
dec
pop
pop
sbb
jp
movsb
das
pop
or
imull
test
les
arpl
shrb
data16
pop
sub
mov
push
inc
mov
cltd
or
xor
pop
scas
xchg
pop
cli
pop
insl
xor
and
mov
mov
mov
shrb
jbe
push
repz
mov
nop
popf
pusha
and
in
dec
outsl
inc
push
mov
out
out
mov
test
scas
clc
adc
mov
cli
nop
aam
ja
jmp
jne
packsswb
popf
test
mov
mov
jbe
inc
xor
push
cmc
div
outsb
xorl
rcr
jg
mov
ja
fisubrs
test
dec
scas
ret
push
popa
into
push
xchg
xor
test
stos
cli
or
and
sub
mov
scas
push
int
pop
lods
loope
stos
lret
pop
or
add
push
and
insl
push
xchg
ret
int3
clc
inc
dec
xchg
or
and
push
mov
roll
mov
test
or
add
fistpl
xchg
out
sub
fsubp
pop
inc
cld
test
mov
pop
aas
loop
outsl
shrl
xchg
leave
mov
mov
out
jge
shrb
stos
cltd
mov
clc
pop
mov
jno
or
aas
leave
mov
dec
repz
sub
sbb
fs
mov
xchg
adc
test
cld
popa
aam
push
adc
js
fcos
sub
out
mov
fimuls
xlat
pop
stc
adc
in
out
sbb
inc
in
ja
pop
scas
shl
std
xchg
out
mov
xchg
push
aas
icebp
pop
pop
xchg
jmp
inc
mov
out
arpl
mov
push
sbb
cmpsl
dec
daa
lock
cs
imul
test
adc
push
pop
icebp
sti
scas
loopne
dec
jns
sub
clc
push
mov
jle
add
imul
es
shll
repz
xchg
scas
jge
dec
mov
ja
mov
insb
lods
sub
adc
cwtl
jns
mov
pop
lea
addr16
push
cli
shll
flds
mov
out
sti
ljmp
neg
cmpsb
not
imul
imulb
jg
push
mov
lret
icebp
push
in
jp
sti
sbb
inc
test
sub
addr16
inc
pushf
or
movsb
fldpi
lods
add
aas
jae
les
out
mov
and
icebp
sbb
pop
mov
fcompl
and
clc
inc
test
movsb
inc
xor
outsl
fadds
aas
into
movsl
js
loope
adc
xor
cmp
movsb
lods
sbbl
cmp
lret
sbbl
repz
jge
int3
pop
jb
addr16
sti
push
clc
loopne
sahf
xchg
enter
jmp
push
sbb
push
loop
jno
cld
lds
sbb
repnz
int3
add
push
push
mov
fistl
add
shlb
push
jmp
mov
icebp
mov
fsubrs
add
jne
fs
imul
test
mov
or
ss
or
mov
int
lods
std
push
dec
pop
jge
je
and
and
lds
fsubrp
dec
out
test
inc
xor
mov
mov
mov
dec
jmp
push
int3
xor
jne
cmp
sbb
rolb
pop
mov
mov
push
insb
cli
xchg
cmp
inc
push
out
pop
sub
mov
xor
dec
adc
popa
push
jmp
fbld
clc
xchg
mov
inc
ffree
lahf
data16
xchg
cmp
hlt
jne
js
dec
and
sub
sub
arpl
jb
arpl
xchg
aad
add
cs
in
hlt
pop
push
mov
pop
mov
popf
sbb
xor
pusha
dec
hlt
repnz
movsl
data16
fstpl
and
ljmp
lahf
xchg
into
xor
mov
loop
or
sahf
data16
addr16
movsb
insl
jge
xor
sahf
popf
cmc
bound
sbb
lock
dec
and
cmp
sti
cmovb
outsl
jecxz
and
rclb
cmc
sbb
xchg
fcomps
popa
pop
and
cmp
dec
dec
mov
cmp
loopne
clc
inc
ds
jge
jl
pop
fdivrl
rcl
mov
std
fsqrt
nop
jmp
sahf
rcr
icebp
inc
push
repz
mov
xchg
hlt
rol
push
faddl
roll
mov
movsl
or
in
loop
mov
outsl
dec
cmp
shrl
lods
xchg
or
push
mov
jno
mov
imul
into
jle
push
cmpsb
imul
push
movl
xchg
scas
jge
cmp
jge
sub
inc
js
push
jns
or
lahf
sub
xchg
mov
outsl
hlt
mov
push
xlat
dec
das
mov
ds
fisttpl
lcall
mov
sub
jbe
adc
loope
lret
add
cmp
js
hlt
and
jnp
std
adc
inc
cmpsl
cs
xchg
jmp
stos
std
fmulp
lods
call
fisubrl
repz
mov
jg
push
push
aad
push
outsl
fisubs
mov
repz
cmp
pop
mov
xchg
int3
inc
cmp
dec
fimull
mov
outsl
test
pop
xchg
data16
lret
mov
mov
ja
lahf
mov
cmp
pop
stos
out
aas
xor
test
and
test
cmpsl
cld
lret
loop
shrl
xor
add
mov
scas
mov
xchg
jg
adc
push
fsubrs
rolb
notl
out
mov
sbb
or
out
cmp
push
push
push
sub
enter
push
push
or
fwait
xchg
mov
pop
push
xchg
ja
andl
jns
call
test
call
jle
inc
cld
push
lods
mov
adc
int3
push
jp
cs
sbb
push
repz
movsb
repz
lds
test
xchg
mov
jp
dec
into
pop
daa
cmp
and
daa
ja
je
leave
xchg
mov
cmc
daa
mov
ficompl
adc
add
inc
xor
mov
ret
lcall
dec
outsb
dec
inc
inc
insl
cmp
hlt
out
aad
inc
loope
pop
xorl
iret
insl
cli
out
sbb
gs
mov
push
stos
out
mov
mov
pop
push
mov
sub
outsb
cmp
cli
push
jmp
pop
jg
dec
pop
or
dec
lock
cmc
out
in
outsl
clc
roll
sti
out
or
jp
sbb
push
addr16
xchg
xchg
ja
jae
mov
pop
xor
notl
sub
mov
cmp
es
jne
jnp
shrb
fnstenv
arpl
jmp
mov
sbb
das
cmp
mov
mov
popf
fsin
arpl
das
shlb
shrl
xchg
cld
sbb
push
mov
outsb
out
hlt
hlt
stos
pushf
push
clc
movsl
imul
cs
in
addr16
cs
xor
mov
mov
call
lret
xchg
and
lds
mov
stos
adc
std
das
shrl
cmc
subl
cli
ja
lret
sub
es
and
xchg
outsb
dec
ds
sub
std
mov
add
xchg
push
mov
pop
imul
cs
sub
fs
mov
mov
pop
or
xchg
femms
push
jbe
rcrb
leave
test
es
test
rol
mov
push
cmp
adc
nop
mov
xchg
add
pop
stos
iret
push
sub
sbb
addr16
pop
in
xor
fldt
sbb
mov
jbe
aaa
or
dec
lea
mov
es
mov
mov
pushf
sbb
xorl
popa
cmpsl
in
lret
in
push
shr
adc
out
sub
out
div
sar
test
icebp
lahf
push
scas
in
lods
or
jne
fwait
mov
leave
das
inc
add
rol
out
or
pop
mov
std
dec
add
sub
mov
mov
es
cmpsl
push
xorl
jge
loopne
and
lcall
or
sbb
paddd
sbb
lea
rcrl
fsubl
mov
les
fimuls
pop
stc
mov
cmpsl
jae
hlt
pop
dec
fbstp
into
and
stc
pop
shl
ret
adcl
mov
mov
lret
test
sarb
mov
ja
scas
jg
mov
dec
push
scas
cmp
dec
xchg
outsl
nop
pop
sub
sti
out
ss
or
xor
outsl
mov
adc
mov
jge
cwtl
cmp
push
push
add
ds
sbb
ret
sub
rolb
mov
out
cwtl
mov
jbe
push
jg
mov
mov
daa
cltd
add
aas
pop
pop
dec
pop
cld
push
push
sbb
sbb
mov
sbb
cld
xor
cmc
mov
stos
push
ds
out
mov
cmp
mov
jg
jmp
and
sti
jnp
out
iret
adc
or
into
sub
xchg
lods
mov
jge
insb
ret
mov
jnp
push
jae
jae
shll
and
adc
dec
and
in
dec
jae
sub
int3
sahf
pop
cmpl
mov
adc
jne
scas
mov
sub
insb
outsb
imul
adc
jp
mov
jb
push
test
cli
rcl
adc
xchg
in
js
mov
pop
or
das
enter
xor
scas
inc
loope
xor
ror
stc
aas
movsb
mov
adcb
insl
mov
pcmpeqw
or
jle
mov
mov
inc
iret
lret
lea
xor
faddl
int
cmp
pop
std
int
push
xorl
aam
fsubr
fwait
jl
push
sbb
push
pusha
je
negl
dec
cli
jge
pop
add
mov
cmp
push
lcall
shr
mov
hlt
andl
cld
test
add
push
movsl
movsb
sub
in
pop
mov
fwait
popl
loop
nop
push
enter
jb
cmp
xchg
rorb
mov
fsubrs
push
fildll
enter
mov
adc
test
imul
loopne
cmpsb
xlat
dec
jnp
sahf
call
stos
shlb
mov
jl
cmp
mov
cmp
aas
mov
xchg
das
xchg
jae
mov
cmc
cmp
scas
int
adc
sbb
and
ljmp
jecxz
push
jg
jne
hlt
mov
dec
dec
xlat
lock
sub
sahf
jmp
outsb
ljmp
jecxz
sub
scas
repz
cli
dec
sbb
sub
insl
aam
sub
and
fs
xchg
xchg
orl
mov
in
mov
cld
dec
popf
pop
gs
adc
shll
into
das
movsb
add
ljmp
mov
loope
out
lock
xlat
mov
std
shll
mov
jbe
ljmp
add
nop
and
mov
or
lahf
or
dec
pop
push
int3
xor
pop
aad
mov
fdiv
out
enter
pop
imul
pop
shlb
stos
ljmp
stos
jp
adc
popa
stos
arpl
lock
mov
inc
pop
ret
xor
push
jae
pop
sbb
sbb
mov
xchg
dec
mov
shr
repz
daa
mov
mov
fnstcw
push
adc
mov
mov
inc
mov
in
call
jl
iret
rorb
xor
rorb
push
jle
mov
fwait
mov
js
and
rcll
mov
mov
test
leave
adc
cltd
xor
jo
ljmp
sbb
fldl2e
in
stos
adc
xchg
push
cmp
jle
leave
fidivrl
into
inc
sbb
sub
cmc
cmpl
push
sahf
jne
inc
scas
cmpsb
dec
mov
mov
push
lahf
in
push
cmpl
cmpsl
sbb
xorl
bswap
sahf
sub
xchg
ret
imul
jp
ss
in
or
add
and
and
aam
mov
jp
sub
das
sbb
int
movsb
push
or
test
push
adc
lret
jecxz
sbb
stos
std
cmc
jnp
lds
dec
hlt
mov
repnz
add
in
cmc
into
fwait
or
sbb
stc
adc
ret
fdivl
sbb
fbld
imul
ja
daa
loop
out
adc
push
je
or
sub
inc
jl
mov
cld
and
mov
stos
cmp
int
and
insb
test
add
jae
enter
loop
push
movsl
lea
inc
sub
mov
pushf
stos
jle
mov
sub
cltd
dec
mov
adc
ljmp
cmpsb
cld
sub
mov
dec
xor
sbbl
psrlq
shll
subl
pop
test
adc
push
and
cmc
test
stos
xchg
lock
cli
fstpt
in
sbb
movsl
stos
sbb
movsl
stos
filds
push
iret
test
push
cwtl
inc
mov
es
xlat
dec
sbb
pop
pop
pop
adc
rcll
cmpsl
mov
push
jae
shr
push
das
lea
loopne
cmp
dec
inc
ficomps
das
sub
test
jmp
mov
imul
stos
pop
sub
aam
bound
adc
mov
mov
std
pop
rol
pop
out
loopne
icebp
dec
and
lahf
lahf
push
adc
iret
cmp
lret
out
mov
mov
inc
pop
xchg
inc
ss
adcl
mov
ja
pop
pushw
jge
mov
leave
rcr
sbb
jne
sti
cmpsb
je
adc
jge
cmc
or
pusha
bound
hlt
shlb
movsl
fidivrs
ss
xchg
inc
enter
std
mulb
fcomps
dec
fimull
adc
lods
icebp
jmp
lcall
lahf
mov
mov
sub
inc
scas
mov
mov
cld
push
xor
addb
push
mov
mov
xor
add
test
sub
divb
xchg
pop
push
lcall
repz
pop
loope
mov
adc
fcoms
xchg
faddl
aas
jg
inc
popa
movsl
in
mov
mov
int
jns
pop
inc
pop
add
mov
movd
mov
jo
mov
dec
jg
rep
xchg
or
loop
xlat
sbb
repnz
iret
test
mov
out
mov
clc
int
in
jl
stos
push
es
cmpsb
sti
fisubrl
decb
cwtl
lret
dec
lahf
jno
xchg
and
mov
arpl
add
lcall
jl
jl
push
mov
adc
movsl
xchg
call
dec
outsl
pop
inc
cmc
xor
movl
push
rcrb
dec
sbb
lahf
popa
in
aad
pop
cltd
cs
xor
cs
imul
mov
fiaddl
outsb
jmp
repnz
or
sub
adc
fdivrs
loope
cwtl
xchg
push
mov
stos
out
pushf
lret
imull
xchg
mov
hlt
int3
adc
je
outsb
rcl
bound
fwait
repz
lods
insl
pop
outsl
mov
pop
ja
imul
sbb
out
stos
xor
jbe
jne
inc
mov
cmp
lods
push
mov
out
pop
cmpsb
sbb
hlt
mov
movsb
shrl
push
jbe
add
mov
push
into
clc
dec
xor
adc
cmpsb
negl
test
pusha
iret
cmp
mov
xor
xor
icebp
in
jb
in
mov
ja
sbb
mov
inc
arpl
mov
fimull
nop
sub
shl
scas
xchg
jg
mov
and
ret
lcall
dec
cmp
ret
mov
clc
cmpsl
dec
push
outsl
pop
xchg
sbb
adc
daa
jbe
mov
loop
or
roll
sbb
pop
jle
pop
xchg
xchg
int
inc
cmp
inc
push
mov
jecxz
je
loop
cld
add
test
cmp
jl
shrl
or
in
mov
xchg
iret
imul
out
xor
and
adc
rep
aaa
adc
or
push
xchg
js
pop
pop
arpl
ljmp
sub
mov
jnp
cld
push
xor
icebp
divb
mov
jne
mov
test
push
int3
std
test
jmp
cmp
stos
push
pop
xchg
xor
leave
xor
and
inc
push
out
add
push
and
mov
dec
jns
popf
inc
stos
and
xchg
mov
sbb
ror
add
ret
mov
cmpsl
out
push
lods
ficompl
and
outsb
std
push
movsl
jmp
mov
push
xorl
mov
in
sub
xchg
lret
outsl
push
jge
adcl
lds
xor
int3
ret
es
call
out
sti
test
add
movsb
les
testl
push
divb
popa
test
loopne
mov
jl
insl
push
lock
je
sub
or
pusha
mov
iret
sub
jb
fisubs
shrl
or
adc
gs
iret
scas
imull
cmp
jb
fildl
jl
aaa
or
pop
add
jo
fsubs
add
pop
aam
movsl
xchg
popf
in
xchg
inc
pop
call
scas
pop
xor
cli
dec
cld
shll
mov
or
mov
mov
jne
int3
or
jg
call
adc
cmp
xlat
shlb
xor
mov
add
cwtl
rcl
push
arpl
xchg
push
inc
inc
std
pop
pop
jne
cmp
clc
jne
icebp
iret
xchg
fistps
jae
jo
lods
sbb
pushf
call
out
fisttpl
vandps
clc
pop
aaa
mov
fdivs
sub
push
in
js
mov
lret
daa
icebp
push
std
dec
adc
pop
cmp
outsl
or
sub
stos
xlat
mov
scas
cmpsl
sbb
and
std
xchg
roll
sbb
sbb
or
test
jmp
push
outsl
jg
out
cmc
loop
pop
shlb
pusha
pop
arpl
pushf
into
add
inc
mov
jne
sub
cmp
push
das
push
jmp
lock
cld
mov
aad
outsb
out
mov
div
repz
popa
inc
inc
adc
stos
stos
ret
movsl
jo
movsb
push
call
aas
rcl
dec
cwtl
loop
pop
insb
push
xchg
call
sub
dec
scas
mov
jmp
cmpsl
pop
jae
lock
ljmp
mov
inc
sub
fstps
xor
xchg
xchg
adc
xor
jg
mov
dec
xchg
dec
mov
leave
mov
xchg
adc
ret
lcall
inc
iret
sub
out
mul
in
sub
lahf
cwtl
cmp
ja
dec
add
mov
pop
cmp
sbb
mov
mov
movsl
sarb
enter
inc
cmp
stos
cwtl
and
xor
shrl
out
fsubrl
int
faddp
iret
add
lods
xor
popf
idiv
rcll
xlat
sub
jae
add
sbb
xor
ss
enter
in
ds
ja
int
jp
hlt
pop
sti
and
xchg
mov
aas
pop
jnp
push
push
pop
push
jne
or
and
aad
or
dec
xchg
cmp
cld
xchg
sbb
movsl
jb
sub
aad
add
push
cmp
inc
mov
xchg
xorb
pop
xchg
cmp
inc
repnz
out
mov
das
roll
insb
daa
jb
aad
cs
push
scas
and
or
pop
movsb
lcall
push
sti
push
cmpsl
inc
test
sub
push
push
jae
xlat
loopne
jmp
mov
mov
push
push
cmp
aam
jl
lea
cld
mov
aad
fwait
in
mov
imul
jp
imul
inc
icebp
movsl
sub
adc
push
lods
mov
mov
mov
mov
mov
ret
xchg
mov
push
mov
mov
mov
stos
ja
cltd
mov
cmpsl
jp
mov
jle
lods
push
mull
jmp
add
aad
sub
pop
xlat
dec
fistpl
icebp
imul
je
or
inc
fcoml
mov
push
aad
loope
cmc
je
das
sbb
mov
adc
int
fiadds
fxch
out
jmp
in
sbb
pushf
popa
mov
clc
popa
inc
jecxz
push
pop
jae
das
add
clc
popa
jno
adc
jne
mov
daa
push
dec
dec
pop
and
popf
cmpl
es
cmpsl
loop
and
sbb
fbstp
and
mov
push
shl
pushf
mov
adc
lods
pop
daa
subl
mov
cmpsb
aam
in
leave
xorl
jp
imulb
testl
lcall
mov
jge
popf
ret
aad
out
lods
fwait
xchg
mov
xchg
inc
insl
push
mov
repnz
das
les
inc
cli
xchg
mov
dec
outsb
mov
call
cli
xchg
or
inc
mov
cmp
mov
sti
fucomi
mov
rcr
add
out
xorb
mov
lds
pop
repnz
push
add
in
dec
fs
in
ret
dec
outsb
cld
mov
inc
inc
repz
add
das
pusha
and
pushf
push
dec
jo
jns
sbb
imul
jno
sbb
outsb
stos
dec
arpl
outsb
sti
mov
pop
push
cld
sub
cli
loop
mov
ss
push
pop
dec
enter
mov
pop
popa
mov
mov
fwait
push
stos
jg
gs
pop
sbb
push
std
fidivrl
lds
inc
push
jmp
and
test
rcll
inc
imul
xchg
test
cmpsb
inc
cmp
stos
out
xor
add
and
dec
pop
mov
cmp
cmovp
loopne
subl
push
lcall
gs
xchg
dec
jmp
lds
pop
sti
pop
xor
int3
push
dec
xchg
je
decb
sbb
dec
and
lods
mov
fcoml
jb
sbb
loope
ss
xchg
fldt
sahf
lret
cmp
daa
jbe
dec
cmc
loopne
pop
sub
or
es
dec
jae
mov
push
es
fninit
rorb
fsubrl
in
add
cmc
lea
je
jb
imul
push
push
hlt
stos
out
sbb
dec
mov
mov
pop
cvtps2pi
test
sbb
jle
and
jl
int3
nop
cmp
aad
mov
pop
cmp
jb
leave
mov
test
jecxz
sbb
jne
mov
push
jle
imul
arpl
pop
mov
cmp
mov
or
cvttps2pi
adcb
mov
jg
hlt
hlt
dec
dec
dec
into
dec
jp
cmp
and
mov
scas
dec
into
test
cmp
sub
movsl
fsubs
mov
outsl
lret
out
mov
loopne
jge
and
test
inc
flds
sete
subl
lret
pushf
lock
inc
aad
pop
push
sub
jecxz
rorb
mov
mov
mov
mov
xor
pop
ja
pop
out
pusha
inc
inc
pop
push
add
stos
jae
pop
jne
out
iret
rcr
insl
mov
adc
pop
adc
xchg
jge
cmp
lret
or
or
shll
in
inc
js
sub
fldt
in
inc
dec
jp
sbb
out
bound
mov
insb
pop
pop
adc
not
stos
sub
push
pop
cmpsl
lock
lret
pop
or
add
mov
loope
push
cld
scas
stos
or
xor
sub
es
inc
push
imul
mov
lock
pop
inc
or
and
cmp
popf
pusha
lods
add
cmp
clc
cmp
icebp
mov
mov
jo
xlat
xchg
xchg
sub
test
sub
xchg
stc
popa
lock
jmp
stos
sub
in
cmc
jno
and
mov
jecxz
sarb
adc
add
scas
inc
adc
mov
push
inc
push
add
movsl
sub
clc
sbbl
push
mov
sub
cmp
lea
cmp
sbbb
cmp
mov
pop
lret
sub
cmp
pushf
sub
rolb
mov
mov
add
add
and
mov
pop
xor
add
sbb
fsubs
stos
adc
in
jg
cld
adc
xchg
sbb
cmpsb
bswap
cmp
cmp
mov
pop
and
iret
cmp
mov
clc
mov
jmp
add
push
jbe
pop
dec
cmp
call
mov
mov
xorl
xchg
xor
jo
jge
shrb
inc
in
icebp
lds
adc
in
fs
jo
cmp
mov
out
sahf
fimuls
fucomi
mov
int
inc
jle
pop
cmpsl
jp
dec
inc
mov
repnz
lods
cwtl
movb
repz
fidivrs
mov
sbb
cld
sub
fildl
inc
lea
jae
push
mov
into
int3
fdiv
mov
or
jno
pop
adc
pop
std
dec
ret
jo
sbb
push
cmp
ss
popf
inc
gs
mov
pop
pushl
shrl
stos
pop
xchg
sti
mov
sbb
sub
xchg
dec
cmpsb
cld
pop
xchg
adc
xchg
fs
shr
clc
test
push
sub
cwtl
outsb
mov
in
push
addr16
pop
xchg
pop
jo
mov
lret
loope
push
sbb
hlt
push
into
jne
push
mov
sbb
sahf
out
or
mov
or
adc
fldt
fistpll
mov
shr
lds
fmull
jg
adc
jl
mov
push
test
test
sti
push
aas
popf
jb
mov
xor
es
xchg
icebp
push
aaa
dec
mov
nop
push
mov
stc
pop
push
mov
ret
hlt
pop
push
movsb
add
std
xchg
in
xchg
stc
pop
test
std
mov
fadds
inc
cmp
mov
or
daa
xor
or
dec
add
cmp
or
add
notb
sbb
mov
sbb
and
addr16
pusha
fwait
xor
mov
test
cli
vandps
cmp
jno
fstpt
sbb
sbb
jo
cwtl
and
insl
pminsw
adc
mov
mov
ljmp
and
scas
sub
fwait
push
add
push
insb
xchg
mov
xchg
jl
adc
imul
jo
jne
pop
inc
shrb
sbb
movsb
adc
mov
out
stc
test
push
fs
in
cmp
ficoms
lods
movsb
int3
sbb
es
dec
add
aaa
ret
jle
ficomps
out
sub
cmp
sbb
add
jp
adc
cmp
mov
cmp
xchg
mov
jle
call
add
push
jb
jecxz
ja
or
mov
insl
mov
mov
lret
in
iret
clc
in
inc
sub
mov
lret
pop
call
ljmp
jno
cwtl
push
jo
mov
and
test
xor
pop
push
in
pushf
jle
out
mull
stc
jmp
or
pusha
adc
or
xchg
mov
pusha
jle
call
pop
fcomp
stos
xor
test
fcmovne
mov
cmp
outsl
fdivrs
jmp
mov
xchg
jge
aaa
cmp
jmp
icebp
jle
push
in
pop
sbb
sub
jg
shrb
enter
push
ds
lds
xor
decb
lcall
push
call
lahf
push
jae
mov
mov
enter
xlat
std
je
jo
add
outsl
out
es
shrl
mov
int
jo
mov
adc
sbb
cltd
icebp
pop
inc
jg
mov
xchg
dec
cmpsl
jle
sub
xchg
mov
sbb
addl
sub
add
lahf
mov
mov
xchg
aam
insb
loope
out
arpl
ret
pop
push
add
stc
xchg
mov
mov
jno
js
pusha
push
adc
dec
test
jb
xor
push
sub
and
push
cld
loope
shlb
cld
mov
stos
xor
bound
jo
daa
mull
das
sahf
sbb
in
sbb
test
mov
cmpsb
dec
mov
mov
sbb
sbb
mov
dec
outsl
dec
rcrl
push
jne
jo
out
loope
fwait
movsl
daa
fcompl
loope
jnp
lds
in
dec
out
xchg
jae
xchg
mov
xchg
jne
inc
jne
xlat
cld
sbb
mov
dec
test
movsl
jecxz
das
push
gs
sub
outsl
mov
mov
jp
sub
mov
mov
fwait
xor
push
stos
or
into
test
lea
jge
mov
ficompl
push
sub
add
and
aas
push
je
sub
add
add
adc
adc
mov
pusha
sub
test
mov
aas
sbbb
out
mov
popa
dec
cmp
cmp
je
mov
addb
out
mov
mov
push
adc
xor
inc
pop
mov
inc
and
js
cmpl
bound
xchg
mov
jg
and
ja
les
mov
push
push
push
shlb
mov
mov
jne
clc
push
pop
jno
mov
push
push
push
mov
sub
cltd
push
repnz
in
std
mov
test
dec
add
lea
addr16
lret
ret
add
inc
sbb
lea
loope
xor
and
push
test
data16
cmp
dec
out
fucomi
mov
push
pop
push
scas
mov
add
push
xchg
jno
or
mov
or
sbb
sti
popa
out
and
cs
popf
into
jb
sub
icebp
dec
mov
mov
popf
pop
pop
or
aam
mov
je
dec
call
mov
int
ds
stos
inc
mov
ja
mov
js
sahf
add
dec
dec
lret
pop
ret
jge
in
gs
enter
nop
outsl
loop
mov
cli
iret
add
mov
push
inc
lods
lods
inc
shl
clc
push
mov
arpl
xchg
sub
jecxz
js
outsb
sahf
movsl
stos
stos
jge
outsb
dec
or
arpl
jns
out
fs
scas
jmp
in
jg
inc
mov
jecxz
lock
and
xchg
add
mov
lcall
sbb
mov
test
xchg
mov
aad
jae
lods
roll
popa
pop
mov
scas
and
fisubrs
fcomp
pop
lret
imul
rorl
or
inc
pop
mov
xchg
scas
or
cs
in
push
popa
mov
pushf
push
jl
lahf
cmpsl
pop
cmp
cld
dec
and
jmp
mov
test
mov
adc
push
mov
stc
dec
adc
dec
pop
fidivrs
mov
mov
add
dec
shl
in
in
int3
push
inc
or
jecxz
xor
out
jle
xchg
das
mov
xor
jne
out
outsb
mov
scas
test
mov
jbe
stos
cmp
mov
adc
sbb
or
cmp
nop
lret
add
mov
outsb
sub
or
jbe
into
das
fsubr
aam
jnp
xlat
outsl
inc
and
xchg
lock
inc
xchg
dec
arpl
and
ret
cmp
sub
add
sbb
lea
sbb
jp
mov
stos
jno
cli
neg
ss
pushf
push
sahf
mov
and
scas
scas
out
psllw
dec
aas
push
movsl
cwtl
repz
jb
mov
jmp
rorb
rcll
fisubrl
mov
idivb
sbb
push
adc
push
lods
jge
dec
outsb
ljmp
ret
inc
push
arpl
xchg
jle
sub
xchg
push
push
mov
lods
test
push
fsubrl
cmpsb
xor
lods
cs
rcll
pop
mov
lahf
push
push
xor
mov
stc
outsl
xorl
dec
fwait
push
test
and
push
or
cld
pusha
xor
fcomip
insb
mov
xor
outsl
fs
insl
lahf
and
ja
cli
xchg
movsb
or
js
xchg
lcall
inc
mov
sbb
pop
jge
pop
mov
dec
imul
imul
ljmp
jecxz
add
jb
cmp
jp
cmp
jne
in
or
xor
mov
insl
mov
outsb
int3
jne
adc
movsl
xor
xor
xchg
push
pop
es
jbe
add
cmp
jp
test
lods
push
movsb
dec
mov
fstps
or
add
outsb
mov
test
jge
jmp
test
sbb
or
adc
loopne
jo
mov
lock
add
add
je
jb
xor
xchg
out
test
fcmove
push
inc
shrl
scas
shl
xchg
pop
and
sbb
mov
cmovg
imul
dec
aas
xchg
in
add
mov
sarl
dec
cmc
xchg
mov
sub
add
push
mov
les
jmp
mov
mov
sub
neg
mov
xchg
sub
jae
mul
push
stos
outsb
adc
fxam
testb
xchg
in
mov
fstl
leave
cwtl
dec
dec
data16
les
inc
sbb
mov
sahf
mov
icebp
subb
aam
enter
jle
ficomps
xlat
jmp
pop
pop
sarl
mov
aam
jge
sbb
xchg
push
mov
dec
mov
mov
frstor
and
loope
fnstcw
jge
cmpsb
xchg
and
stos
push
and
cmp
mov
jecxz
sar
push
sub
dec
call
aad
rclb
imul
mov
nop
in
lcall
add
push
or
insl
lret
and
sbb
sub
in
lahf
arpl
ficomps
test
sbbb
mov
lret
pop
xchg
dec
jns
in
sub
and
pop
push
sub
fs
sub
jecxz
pop
inc
call
les
sub
cltd
and
adc
movsl
lods
movsl
into
inc
cli
js
and
mov
add
xchg
fistps
es
scas
cmp
mov
mov
sbb
test
xorb
xlat
cli
mov
cmpsl
push
repnz
cmp
or
dec
pushf
jo
ficoms
dec
xchg
push
mov
xorb
mov
and
or
pop
jg
inc
xchg
mov
xor
push
ljmp
mov
xchg
dec
push
gs
sub
xchg
adc
add
jp
shlb
push
cmp
sub
data16
lcall
adc
or
add
xchg
imull
cmpsb
sub
sub
add
xchg
lret
cld
sub
imul
jb
sbb
shrd
lret
sbb
sbb
xchg
jno
dec
jg
rol
adc
test
popa
pop
sbb
setle
sbb
push
mov
scas
andl
lret
jne
dec
movsb
adc
into
cmp
popf
fsubrl
sahf
sub
in
adc
daa
ret
stos
xchg
add
cmp
stc
add
mov
mulb
mov
mov
or
sub
add
cmpl
cmp
into
push
and
or
jno
call
pop
xor
pop
aas
sarl
inc
je
aaa
lret
jbe
push
or
push
jl
mov
and
cli
cwtl
test
arpl
cmpsl
out
adc
mov
add
rcl
adc
les
mov
scas
lret
jmp
xor
add
adcb
pop
adc
dec
je
shl
mov
sub
mov
lret
stos
hlt
mov
push
mov
sub
adc
push
popf
call
mov
shlb
daa
mov
out
push
and
insl
call
or
idivl
jmp
lahf
test
or
rcrb
movsb
inc
mov
add
les
xchg
sti
xchg
or
loop
sbb
pop
xor
stc
out
stc
enter
xor
or
jb
inc
sub
add
cmp
mov
adc
mov
shlb
xchg
sub
mov
fsubl
lods
das
dec
xchg
iret
pop
mov
mov
mov
xor
push
add
insl
xchg
mov
push
push
aaa
stc
std
in
and
cmp
inc
or
clc
rorl
test
xchg
and
mov
inc
jge
sub
arpl
test
and
dec
jge
je
mov
ret
pop
paddusb
mov
push
sbb
push
jp
dec
lods
or
lahf
lret
xchg
add
mov
or
movsb
inc
mov
call
cld
sbb
jnp
push
mov
adc
test
js
out
inc
addb
inc
test
adc
gs
jb
dec
inc
lea
pushl
and
cli
and
mov
loope
add
popaw
xor
add
push
xchg
lret
sub
cmp
jo
inc
lds
lods
dec
add
inc
add
cmp
dec
mov
add
fsubrs
out
sub
in
push
inc
and
cmp
push
iret
cmp
imul
ja
daa
adc
add
aad
insb
inc
aad
jno
movsl
push
cmc
ja
js
icebp
push
push
addl
mov
and
stc
decb
arpl
xor
sti
jmp
jp
pop
push
add
pop
adc
sbb
sub
fisubs
pop
cmc
outsl
pushf
insl
fcmovnbe
adc
mov
std
fisubs
popa
jl
test
pop
mov
sbb
sbb
mov
push
push
and
jp
xchg
dec
js
scas
xor
adc
or
sub
push
pop
push
subb
call
outsb
aad
or
sahf
sub
mov
mov
loop
jae
xchg
pop
mov
ret
sbb
mov
add
inc
jns
pop
imul
jo
lahf
pop
or
int3
sub
xchg
lock
mov
dec
out
repz
dec
inc
inc
xchg
sbb
push
xchg
ljmp
scas
ret
cmp
sbb
dec
jmp
push
test
iret
mov
call
nop
dec
enter
mov
cmpsl
jmp
insb
jae
or
std
add
bound
mov
mov
stos
icebp
outsl
jecxz
in
mov
fidivl
lret
mov
xor
xchg
arpl
movsb
repz
add
popf
fwait
pop
mov
scas
les
jmp
popf
mov
mov
push
das
stos
and
jmp
jb
mul
sbb
lahf
loopne
cs
mov
mov
jnp
in
loop
rcrb
mov
pop
arpl
sbb
adc
cwtl
scas
xor
aaa
out
sub
mov
push
out
or
inc
mov
sbb
rcrl
mov
pop
scas
inc
adc
mov
xor
out
test
xchg
and
jb
lcall
in
lcall
sub
lods
xor
pop
fidivrl
lcall
sbb
mov
cmc
lea
and
sub
add
test
movsl
or
xorl
mov
andl
fnsave
pop
aad
movsb
adc
movsl
call
imulb
stos
mov
push
xor
and
mov
mov
mov
filds
test
push
cmp
je
mov
xor
ja
mov
scas
mov
inc
adc
test
xchg
sbb
outsb
add
imul
loopne
nop
loopne
dec
and
cmp
scas
and
andb
pop
xchg
movsb
mov
mov
jo
scas
shr
ss
shl
mov
sub
jle
stos
add
mov
and
cmp
rcr
scas
cmpl
and
dec
repz
int
mov
jp
jmp
sbb
push
fidivl
sbb
leave
sbb
mov
ja
push
add
pop
aaa
stos
loop
dec
sub
popa
aam
scas
add
fdivrp
inc
addr16
dec
pop
inc
lret
xor
or
lods
cmp
lods
scas
jge
pop
xlat
jl
and
or
mov
lock
shrb
lea
push
cld
mov
stos
sub
dec
add
jb
inc
data16
pop
scas
insl
jecxz
push
xorl
cmpl
inc
roll
cmc
pop
gs
data16
inc
and
pop
mov
add
stos
adc
fcmovne
imul
lcall
fldl
mov
cwtl
jbe
rcrb
xor
mov
xchg
or
jmp
lods
in
pop
lret
push
mov
push
pusha
xchg
sbb
data16
jl
add
jl
cld
lahf
add
lret
or
xchg
pushf
ja
shll
and
sete
adc
out
scas
es
and
fimull
mov
enter
cmp
dec
cli
sbb
pop
mov
xor
aam
sbb
xchg
clc
xor
sarb
mov
and
leave
mov
pushf
je
dec
jno
orb
sub
or
pusha
into
sub
test
or
sahf
sbb
add
pusha
lock
mov
xor
out
sub
sbb
iret
repz
pop
cmp
inc
push
inc
sub
mov
repnz
ret
fmull
das
clc
mov
bound
cwtl
imul
pop
divps
aas
aaa
add
repnz
push
mov
inc
jl
ja
mov
out
lahf
push
imul
mov
or
pop
sahf
stc
push
pusha
sbb
mov
inc
jbe
mov
fdivrs
inc
pop
cmp
call
and
sub
lcall
adc
cli
push
loope
fmul
lahf
xor
add
in
mov
sub
shl
arpl
cmc
fstps
cmpsb
iret
and
std
insb
in
fadd
mov
clc
cmpsb
sub
addr16
lods
fcoms
aad
inc
mov
fildl
loop
into
scas
jnp
mov
pop
mov
divl
mov
add
dec
lods
push
dec
add
mov
sub
sbb
cli
out
jmp
sbb
icebp
pop
mov
cld
cltd
loope
notl
cld
pop
push
int3
dec
lea
sbb
scas
test
lcall
fstl
mov
clc
les
pop
aas
dec
mov
push
push
add
pushf
or
mov
or
mov
in
gs
xor
xchg
enter
fistpll
add
jp
cmp
int3
decb
inc
icebp
mov
and
popf
inc
push
jae
sub
push
fsubl
cs
pop
outsb
xor
bound
sub
xchg
fbld
mov
loopne
mov
mov
rcl
mov
pop
cmp
xor
and
clc
cld
mov
xchg
inc
push
cwtl
mov
scas
mov
jl
and
xor
push
mov
mov
cs
in
mov
jbe
dec
cli
cmp
popf
cmpl
xchg
int
xor
shll
xchg
push
push
ss
mov
daa
les
mov
mov
shrb
and
in
popf
xchg
mov
int3
out
sar
mov
enter
lahf
sub
push
fistpl
push
mov
xchg
dec
in
add
mov
fimull
in
out
test
dec
jno
cmp
fwait
test
xor
inc
mov
inc
mov
push
jecxz
fsubrl
popl
mov
addr16
fisubrl
jnp
jmp
mov
and
orb
push
sarl
sbb
movb
add
jne
xor
cmp
adc
mov
xchg
mov
add
iret
fists
mov
dec
push
jmp
lds
jp
pop
sbb
add
push
mov
inc
adc
mov
pop
sti
xchg
fbld
sarl
stc
mov
xor
inc
mov
pop
enter
popa
insb
cmpsb
mov
sti
jg
xor
dec
sub
jp
das
dec
mov
aaa
pmaddwd
and
jp
jb
movsl
push
lods
cmp
imul
pop
jne
lret
mov
jl
push
jns
ja
es
jp
shlb
sub
lcall
test
ffreep
push
xorb
in
and
jns
addb
jg
add
inc
adc
jp
sti
jmp
adc
int
call
dec
mov
and
cmp
push
pushf
push
xlat
xchg
push
jae
cmp
inc
sbb
movsb
clc
inc
xchg
cli
sub
out
sbb
arpl
jno
aaa
mov
pop
imul
shl
fadds
out
xlat
mov
or
lock
sub
repnz
stos
inc
lock
adc
sbb
cli
sbb
mov
sahf
outsb
cmp
adc
pop
rep
popf
gs
mov
repnz
inc
adc
fsubl
dec
scas
xchg
mov
cmp
sarl
adc
aas
stos
xchg
sub
jmp
test
movsb
jecxz
cwtl
push
fildl
jecxz
lock
inc
enter
clc
cld
sbb
mov
jno
cwtl
jns
pop
cmp
and
mov
push
and
test
mov
push
imul
and
cmp
jmp
mov
dec
out
lcall
add
in
test
or
sub
lea
mov
imul
mov
hlt
jmp
mov
push
arpl
inc
push
arpl
xchg
push
lahf
data16
mov
mov
out
repz
adc
clc
or
stos
add
faddp
inc
mov
xor
mov
and
or
inc
xchg
std
xor
popf
imul
cmc
shll
mov
iret
call
adc
aam
popa
mov
push
sub
js
or
inc
movsb
or
dec
fcomps
jl
insl
or
lock
jmp
adc
xchg
jg
sbb
bound
or
sub
or
imul
jle
mov
aaa
mov
cmp
js
cwtl
pop
sbb
fldl
pop
stc
pop
scas
scas
fadds
or
ret
or
cmc
dec
mov
jecxz
cmc
sub
xlat
popa
mov
mov
add
pop
xchg
cwtl
or
mov
aad
fsin
xlat
int3
int3
mov
sbb
sub
lods
call
pop
push
cmp
and
ljmp
sub
inc
fsubp
pmaddwd
mov
adc
mov
cs
lret
add
rcl
test
push
roll
mov
rcrb
into
aad
xor
je
fldenv
mov
cmpsl
shr
pop
xchg
pushf
cmp
or
inc
sbb
mov
rcll
insb
pop
jnp
add
in
int
outsb
xchg
sub
arpl
call
rcr
jl
addr16
sarb
ja
jmp
cltd
addr16
or
call
xchg
pop
ds
outsb
inc
mov
loop
lea
cmpsb
into
push
dec
stos
xchg
gs
push
out
sbb
movsb
fsubl
movsl
fdivp
repnz
mov
cld
cld
cmp
sahf
pop
mov
and
je
sbb
fisubrs
stc
cmp
and
fsts
jge
das
sbb
scas
fadd
cmp
mov
icebp
cmpsl
xor
push
cltd
adcl
mov
inc
sub
mulb
sub
popa
fs
pop
jle
popf
and
ja
out
mov
mov
mov
jmp
inc
or
lcall
out
mov
fs
sbb
mov
jp
roll
pop
shll
inc
arpl
or
int
add
ss
scas
jmp
lods
and
icebp
call
sub
adcb
and
sbb
enter
addr16
shlb
outsl
pop
cmpsl
add
sti
in
inc
jnp
fsts
shll
pop
fmul
fcmovnbe
xor
insb
popa
cmpsb
in
pop
movd
push
mov
pusha
data16
jg
add
mov
out
or
mov
das
gs
pop
stos
jns
add
cmpsl
or
cmp
or
rcrl
fwait
insb
mov
xchg
add
repz
shl
mov
xchg
jae
adc
arpl
and
leave
mov
adc
xlat
jns
ja
sbbb
shll
xchg
std
dec
mov
sti
mulb
clc
xor
inc
mov
cmp
sarb
daa
and
popf
push
mov
std
or
je
sahf
jecxz
inc
xchg
dec
sub
and
es
sub
in
hlt
push
cmp
pop
pop
jle
inc
loopne
inc
sub
leave
lods
dec
shlb
cmp
fsubs
mov
mov
pushf
iret
sbb
outsl
push
push
jle
push
pusha
inc
fists
sub
or
pop
pop
in
push
and
mov
or
dec
xchg
push
cwtl
jae
je
test
aad
jmp
int
faddl
dec
jl
orb
pop
lock
cmp
pusha
and
jae
pusha
enter
push
fsubrp
loope
push
xchg
sahf
push
push
fwait
cmp
adc
dec
xchg
and
cld
mov
mov
cmpsb
dec
js
xchg
xchg
rcrl
stos
imul
jl
movsl
add
sbb
xchg
outsl
loope
add
adc
push
jmp
int
pop
xchg
pop
test
mov
inc
push
insb
stos
ffree
add
and
cmp
lods
sub
or
inc
sub
into
stc
icebp
aad
pop
out
movsl
dec
test
test
ds
gs
pop
imull
xchg
icebp
or
js
inc
cli
jno
out
hlt
cmp
xchg
dec
out
or
xor
adc
in
push
sub
xchg
stc
je
add
mov
xchg
lods
adc
sbb
les
nop
mov
call
cmc
fwait
sub
sub
inc
pop
js
mov
popa
mov
cs
cs
loopne
nopl
inc
shlb
out
mov
stos
dec
xchg
mov
je
addr16
inc
icebp
push
negl
lret
fdiv
scas
mov
add
outsl
add
sub
lcall
arpl
push
cmpsb
pop
loope
or
iret
inc
push
ljmp
cmc
pop
mov
movsl
mov
pop
fiadds
xchg
clc
mov
inc
xchg
adc
lcall
cmp
das
add
and
pop
and
inc
or
cmp
sbb
adc
sbb
xchg
pop
rorb
sub
js
aad
call
mov
and
into
mov
fcompl
je
mov
xchg
jb
test
cmp
push
dec
pop
mov
pop
ja
dec
and
fildll
xchg
out
pop
add
loop
mov
ret
adc
mov
inc
cmp
cld
adc
dec
cmp
add
mov
mov
mov
div
insl
xchg
aad
fcom
cs
ret
mov
enter
push
and
push
push
gs
inc
paddsw
lods
or
imul
outsb
daa
mov
sub
cmp
out
sbb
pop
jnp
shl
subb
xorl
in
int3
jl
mov
or
jle
test
aad
lahf
push
fistpl
jecxz
push
xor
scas
js
xchg
and
push
ss
cmp
loopne
out
aam
dec
pushf
std
add
pop
xchg
mov
inc
insb
loop
call
cs
aaa
lret
addr16
cld
adc
fdecstp
daa
xlat
xchg
xor
add
add
and
nop
sahf
dec
xor
sbb
insb
ret
jmp
stc
and
dec
shr
cmc
test
jle
test
jnp
adc
mov
xor
orb
xchg
aam
shr
ds
jo
adc
xchg
push
adc
xor
xor
push
das
xor
outsb
or
jbe
out
icebp
mov
scas
push
leave
sbb
pop
mov
clc
pusha
mov
fcmovnu
mov
adc
enter
cmp
shlb
pop
in
lock
loope
jle
dec
ret
lds
stc
rcr
sub
ret
je
mov
add
scas
cmp
mov
movsl
xor
fsubs
mov
adc
nop
inc
and
or
daa
cltd
adc
mov
mov
test
xchg
adc
loope
xor
sar
enter
int
jnp
repz
sub
call
imul
and
lret
shrb
jbe
addr16
or
mov
addr16
jge
xor
lret
push
ljmp
jbe
adc
mov
inc
xchg
ljmp
leave
add
and
pop
jl
adc
les
inc
fdivrs
loopne
mov
scas
sbb
je
int3
push
jecxz
popf
adc
pop
mov
inc
fdivs
pop
mov
popa
cmpsb
adc
dec
pop
jbe
xor
push
sub
cmp
loop
push
std
hlt
fisttpl
clc
push
and
sub
xchg
mov
into
lret
jbe
or
aam
fstp
gs
push
and
pop
mov
ret
xchg
and
lea
ret
int3
je
inc
ror
inc
test
pop
cmpb
xchg
lea
dec
pop
daa
in
hlt
add
into
sbb
xor
addr16
out
or
sub
mov
or
mov
aaa
pop
aad
push
push
adc
sbb
dec
mov
and
mov
mov
lret
fstpt
fistl
incl
inc
sbb
fadd
add
mov
fs
sti
lods
lea
push
ja
add
int3
movsb
and
jne
pop
stc
and
push
mov
add
popl
ret
mov
out
je
pop
push
clc
lcall
inc
mov
ja
adc
inc
jbe
sub
mov
test
call
popf
mov
or
jnp
mov
notb
shrb
ret
mov
test
bound
out
mov
daa
movsl
cmpsb
pushf
adc
mov
ret
daa
testl
addb
mov
enter
hlt
adc
mov
and
add
icebp
lcall
push
pop
cmp
cmpsb
mov
pop
mov
cmp
xor
aad
xchg
negb
inc
mov
add
addb
ljmp
loop
push
push
popf
jp
xchg
mov
es
fsubl
mov
jp
mov
jmp
int
cwtl
push
imul
movsb
faddl
mov
push
dec
sub
test
mov
sub
sti
sbb
xchg
adc
sub
test
test
xchg
int
inc
add
movsl
test
push
adc
xor
jbe
jg
mov
dec
lds
iret
insl
inc
sbb
mov
notl
push
and
push
outsb
mov
cli
push
cld
lea
es
iret
mov
cltd
pop
or
sti
or
mov
in
fwait
mov
push
ret
xor
into
mov
sbbb
push
mov
shrl
rorl
xchg
int
ja,pn
fimull
mov
lock
xchg
ljmp
adc
enter
loope
jbe
arpl
cmp
adc
cmp
mov
lock
add
daa
imul
shll
outsl
mov
push
dec
push
call
ja
xor
xchg
pop
xchg
loopne
fidivrs
push
inc
js
cmpsb
leave
dec
jmp
fsubrs
pop
popa
sub
and
mov
loope
jb
sub
scas
ficomps
or
xor
iret
sbb
xor
add
in
xor
aas
not
test
mov
xchg
das
inc
imul
repz
jbe
insb
xor
shlb
xchg
sbb
dec
cmp
jecxz
ror
cmc
movsl
clc
dec
int3
mov
dec
pop
mov
or
jnp
mov
inc
sbb
add
out
cld
mov
xchg
shll
mov
push
dec
js
jbe
inc
push
adc
imul
leave
xchg
pop
adc
loope
test
cmp
adc
sbb
aaa
pop
pusha
movsl
mov
fwait
int3
call
iret
jno
repnz
jmp
hlt
mov
xor
xor
inc
popf
mov
jbe
icebp
bound
add
adc
call
inc
mov
or
mov
scas
les
cmp
push
inc
test
call
pushf
in
cmp
add
add
xchg
mov
cmp
mov
or
popf
lock
cmpsb
mov
xchg
jge
dec
push
jecxz
dec
stc
pusha
dec
and
ja
cltd
shlb
jmp
lret
icebp
gs
push
sti
sbb
popa
loop
mull
pop
leave
lret
xor
mov
xchg
hlt
scas
mov
lods
mov
and
cmp
add
sub
and
mov
inc
lret
loop
cld
cmp
and
fildl
in
pop
mov
xor
sti
xor
test
mov
stos
in
sub
adc
mov
sbb
addr16
cmp
sbb
cli
xor
dec
out
mov
mov
adc
mov
inc
insb
inc
pop
push
dec
add
loope
clc
fisttpll
andl
scas
push
fwait
mov
push
rorb
outsl
into
cmp
popa
icebp
mov
fbstp
imull
jo
pop
push
sbb
imul
sbb
adc
stc
fnsave
mov
and
mov
cltd
out
cmc
dec
xchg
jecxz
push
imul
rclb
dec
ss
mov
cs
idivb
inc
xchg
add
mov
jno
movsl
add
mov
lods
je
inc
and
call
cmp
test
out
lods
out
and
gs
inc
sub
ret
mov
mov
mov
or
fadds
bound
insb
cli
cli
movsl
test
and
push
iret
fdivl
or
jp
repz
sub
jmp
dec
cmp
aaa
fidivs
pushf
mov
loop
inc
rorb
sub
dec
std
clc
add
pop
ljmp
jb
cld
es
mov
scas
into
cmpl
gs
jb
in
and
sbb
je
faddp
ficomps
incb
inc
push
mov
xor
out
pop
dec
jno
int3
mov
xchg
iret
sub
cli
in
cli
pop
push
and
pop
push
mov
mov
out
push
fstps
mov
fst
add
cmp
cltd
or
add
push
or
jp
inc
sub
lahf
add
lea
pop
push
xchg
lods
dec
std
lea
fmuls
aad
addr16
stc
incl
sbb
jbe
out
je
push
push
divb
push
mov
mov
shl
and
xchg
stos
int3
xor
test
cld
push
mov
mov
mov
or
lret
movsl
scas
xor
ficoms
jecxz
pop
ja
cmpl
dec
xor
mov
les
loopne
jne
add
in
stc
cmp
xchg
jne
push
shrl
add
in
jp
fildl
les
sti
pop
mov
imull
shlb
xchg
stos
mov
xchg
jmp
xor
aam
les
pop
xchg
cltd
notl
leave
and
test
jle
sarb
addl
out
int3
xor
sub
in
xchg
mov
fs
aad
mov
mov
push
sbb
in
in
inc
test
outsb
mov
sub
mov
orl
adc
subb
popa
dec
xchg
cltd
nop
ficomps
pop
xchg
mov
pop
mov
dec
fimuls
scas
mov
adc
in
push
dec
or
lds
push
cmp
sarb
sbb
ds
adc
jae
aad
mov
int
or
push
jmp
mov
sbbl
jo
movsb
and
movsb
adc
insb
mov
or
cmp
loopne
lock
outsb
ja
mov
add
pop
mov
mov
xor
pop
xchg
mov
pusha
adc
jle
cmpsb
inc
push
cmc
lea
in
rsqrtps
sbb
or
mov
js
sub
fistpll
arpl
out
orb
loop
mov
outsl
pop
xchg
adc
pushf
inc
lods
jg
cmp
xchg
xchg
mov
pop
cmc
adc
inc
xor
xchg
addr16
jl
xchg
sub
frstor
jno
into
nop
fisubrs
icebp
sub
or
xchg
scas
adcb
int
les
jns
sbb
jno
adc
pop
and
gs
or
test
push
fmull
fsubrl
cmp
mov
xchg
push
test
or
fnstenv
jne
rcr
nop
orl
push
pop
or
inc
mov
xchg
cmp
js
sub
ret
stos
and
push
jo
fiadds
nop
cmc
mov
into
mov
dec
pop
lret
xlat
and
lods
mov
scas
das
mov
push
sub
push
lods
jp
mov
adc
lock
sbb
xchg
jno
lahf
in
mov
jne
mov
push
int
mov
push
or
jno
mov
jae
notb
jne
pop
sub
rcrb
push
jno
inc
or
xchg
dec
cld
in
jl
mov
je
aam
mov
xor
adc
aad
std
cwtl
mov
and
cmp
fdivrs
clc
popf
jnp
insl
jmp
ljmp
dec
loopne
push
cmp
push
sarb
ret
test
inc
inc
cmp
adc
dec
sbb
int3
aad
lds
and
in
shlb
es
mov
and
push
inc
dec
xor
xchg
xor
cs
and
and
mov
jmp
mov
cld
stos
das
mov
shr
mov
cwtl
mov
fstps
aad
into
stc
shr
pop
movsl
push
sub
out
xor
sbb
leave
sub
add
xchg
inc
mov
cmpl
test
shrl
mov
sbb
cmc
pop
cs
negb
mov
or
and
push
fs
inc
outsb
xor
adc
push
jo
pusha
mov
leave
xchg
mov
loopne
mov
push
aas
cmp
icebp
fcomps
push
xchg
jecxz
jmp
fdivs
popa
shrb
mov
and
mov
icebp
dec
cmpl
fisubl
nop
or
sar
mov
jle
xchg
jb
fldt
mull
sti
lcall
xchg
inc
ljmp
mov
ret
add
sti
hlt
lea
or
jp
out
cmc
shlb
xchg
sbb
pop
fimuls
mov
cld
lea
pop
and
pop
test
into
mov
neg
xchg
adc
adc
mov
inc
and
pop
pop
ret
adc
sahf
xchg
cmp
repz
lds
dec
in
rcl
scas
sbb
inc
pop
or
cmp
sub
xchg
stos
dec
jmp
inc
ret
shl
enter
loope
and
xor
stos
push
bound
and
int
negl
and
lret
movsb
push
imul
aam
mov
ja
in
das
loopne
aaa
lock
in
shrb
in
mov
jnp
adc
xor
pop
cmpl
dec
add
push
inc
enter
shlb
xor
out
fnstsw
mov
hlt
push
xchg
sub
das
sbb
into
sarb
movsb
dec
stos
or
test
xchg
pop
or
inc
mov
add
lea
xchg
loopne
push
inc
pop
stos
jae
stos
mov
push
push
lahf
mov
push
lahf
movsl
and
sbb
je
shlb
roll
lea
jnp
sub
loop
jbe
and
test
add
dec
adc
pushf
lods
in
daa
call
cmp
popa
cmp
cmp
mulb
ds
inc
jge
mov
ret
insl
repz
dec
adc
dec
mov
mov
push
push
nop
ja
movsb
pushf
pop
sub
in
pop
imul
jecxz
std
lahf
testl
sub
loopne
sbb
pop
mov
jp
imul
xchg
adc
jne
decl
aas
push
and
cltd
and
dec
into
js,pt
daa
in
aaa
mov
and
rcpps
fwait
xor
ds
adc
sub
or
mov
ljmp
aad
pop
andl
mov
jo
inc
ds
mov
xlat
sub
addr16
push
fldenv
pushl
push
enter
arpl
and
dec
sbb
int3
inc
jecxz
push
lods
cmpsl
les
mov
int
cmp
test
mov
bound
sahf
dec
int
sarl
mov
sub
inc
adc
gs
int
aam
ret
pop
aas
inc
lea
fmuls
test
aam
loopne
sbb
xor
out
lds
es
mov
dec
js
orl
call
test
popf
dec
imul
mov
mov
push
fs
mov
pop
repz
jae
imul
das
lret
out
adc
or
call
pop
jno
idiv
mov
add
add
fdivl
dec
adc
pop
test
adc
ret
adc
pop
jno
mov
shlb
in
adc
cld
sbbb
mov
lret
pop
lret
sub
pop
jno
pop
push
in
push
xor
mov
mov
fwait
addr16
xchg
mov
fstpl
jge
add
push
adc
xchg
movsb
stos
inc
es
mov
push
push
jbe
inc
xorb
test
dec
into
inc
les
or
out
mov
testb
leave
inc
xor
call
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
push
mov
out
stc
push
jne
jmp
lds
xor
xor
sbb
cmc
pusha
xor
out
sbb
cmp
mov
or
out
call
add
jmp
call
add
jmp
call
lcall
