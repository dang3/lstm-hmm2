dec
pop
inc
add
add
add
add
add
incl
add
add
add
add
add
add
jae
or
mov
mov
mov
int
jo
arpl
and
and
jo
arpl
inc
add
add
add
dec
add
add
jl
inc
loopne
sidtl
add
add
add
add
lock
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
shlb
add
jo
add
add
add
add
in
add
out
add
pusha
add
loopne
jae
xor
add
add
add
add
mov
add
add
add
pusha
add
loopne
nop
or
push
mov
add
add
mov
add
add
je
js
add
add
add
add
add
add
or
add
add
nop
or
add
add
xchg
mov
add
add
add
add
add
rclb
add
add
add
add
add
adc
add
add
add
loop
add
or
and
or
inc
mov
or
bound
add
or
add
cld
mov
or
or
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
add
add
add
add
add
clc
and
add
mov
add
out
cpuid
incl
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
daa
loop
add
nop
or
add
mov
popf
stos
pusha
leave
fildll
push
dec
and
cmp
ja
sti
and
adcl
mov
popa
jp
mov
cli
push
mov
lods
cmp
push
jne
lock
insb
ljmp
xchg
mulb
mov
rorb
sbb
iret
jnp
push
movsl
or
cmp
or
aas
fiadds
and
fs
mov
bndstx
aas
add
movsb
push
notb
repz
stos
xchg
mov
xor
jnp
cs
sub
outsl
aas
dec
lahf
lock
repnz
lods
push
std
or
cltd
fmull
cmp
pop
mov
jmp
imul
mov
lahf
and
into
pusha
sub
mul
sbb
aad
xor
sbbl
xor
mov
daa
add
push
arpl
fwait
stos
aaa
mov
mov
mov
rol
das
int
inc
arpl
mov
mov
xchg
push
inc
or
mov
push
dec
push
xor
jno
sbb
push
dec
loop
fwait
adc
pop
mov
fildll
push
push
das
xchg
pop
out
mov
sub
enter
test
dec
mov
popa
inc
gs
or
and
adc
mov
outsl
mov
test
mov
push
aam
adc
hlt
adc
fstpt
ret
adc
fildl
jne
add
mov
dec
loope
js
fs
mov
insb
adc
adcl
sub
push
pop
rclb
add
out
jo
jne
sub
add
mov
add
test
mov
out
sbb
shl
mov
testb
rorl
jnp
addr16
xchg
mov
and
inc
mov
not
shlb
imul
dec
shll
push
imul
sbbl
insb
std
push
lcall
pop
xchg
shr
xor
or
push
ret
push
mov
xor
les
mov
out
jb
lret
sub
pop
test
dec
test
sbb
xchg
push
sbb
sub
stos
data16
xor
sbb
ror
pushf
xchg
pop
inc
fs
xlat
fimuls
popf
aad
cmp
aam
cltd
cmp
xchg
xlat
iret
jnp
mov
outsb
stos
data16
movsl
iret
mov
cmp
xchg
mov
xchg
fistps
xor
and
sarl
fimull
xlat
mov
adc
ret
cmp
adc
push
cmp
in
jno
and
imul
xor
cmp
sarl
test
jmp
lcall
pop
mov
dec
iret
xor
adc
aad
ds
int
mov
dec
cmp
fcomp
inc
lret
clc
loope
or
or
mov
out
outsb
movsl
push
add
xor
test
aam
imul
nop
mov
xchg
rcrb
data16
fidivrl
xchg
fs
push
movsl
insl
leave
xor
pusha
cmovae
jge
pop
mov
outsl
call
jecxz
int
push
gs
mov
mov
xor
pop
push
lods
lret
ss
fst
stc
dec
push
dec
mov
loopne
subl
das
mov
push
xchg
xor
inc
jbe
fs
xor
xor
jno
mov
repz
arpl
push
cs
sbb
pusha
test
into
dec
cmp
mov
mov
cmp
jmp
sub
pop
gs
mov
orl
cmpsb
movsb
dec
adc
pop
js
adc
mov
mov
ret
or
adc
jns
fdivrl
bound
mov
inc
dec
inc
pop
in
jle
orl
xor
add
mov
pusha
mov
movsb
aam
cmp
bound
add
sbb
or
int3
inc
sbb
push
inc
into
cld
mov
jmp
jo
aam
push
adc
cwtl
imul
lods
pop
loop
dec
xchg
orl
xor
movb
out
pop
dec
fsubrl
xchg
cmpsb
xor
adc
mov
in
scas
in
call
mov
xchg
mov
jo
mov
sub
or
mov
icebp
jle
sbb
pusha
mov
test
ficomps
bnd
cmp
jb
inc
dec
andb
loopne
test
repnz
xor
jle
xlat
dec
insb
jno
pop
test
sub
push
sub
or
iret
mov
stos
insb
mov
jmp
pop
mov
mov
mov
mov
sbb
fsubrl
jo
cltd
xchg
jmp
and
dec
xor
mov
mov
outsb
inc
mov
fmul
rcr
outsl
cmp
cltd
loope
imul
enter
ja
xchg
dec
in
shl
mov
cmp
inc
call
icebp
flds
cmp
jbe
inc
les
sub
lea
test
mov
mov
rorl
push
xor
add
cld
dec
jle
and
pop
std
insb
jae
mov
movsl
jns
mov
add
ret
idivb
xor
stos
mov
pop
fwait
cwtl
push
pop
push
xor
xchg
loop
and
mov
sub
or
inc
iret
insb
test
aaa
decl
push
dec
jns
push
or
ss
or
push
das
xor
mov
daa
rcrb
mov
inc
push
jecxz
jg
mov
sub
sbb
test
jmp
mov
insb
loopew
cmp
dec
and
push
pop
and
addr16
jl
cmp
insl
nop
xchg
jnp
fists
cmp
sub
jmp
mov
ds
scas
push
arpl
imul
xor
into
add
fdiv
cli
push
fmulp
cli
stos
dec
data16
mov
inc
sbb
jbe
add
pop
push
lret
push
mov
stc
in
sbb
pop
jno
in
lods
push
sbb
mov
cli
cltd
lret
cmpsl
dec
jno
xorb
sarb
jbe
inc
hlt
mov
push
psubb
add
outsl
jns
mov
sub
push
dec
jns
fdivs
out
mov
stc
dec
push
fisubs
enter
cmp
pop
cmp
push
mov
adc
std
jb
xchg
sub
sub
sbb
xorb
lea
add
mov
push
dec
stos
insl
pop
dec
pop
mov
xchg
fimuls
ljmp
sbb
or
nop
rcrl
mov
das
add
test
push
fildl
loop
pop
aas
jmp
jl
fnstsw
call
stos
loop
adc
jl
or
inc
sarb
mov
sub
adc
lret
sub
gs
and
in
bound
bound
mov
in
loop
rclb
in
sbb
mov
or
and
jo
filds
jbe
test
jns
xchg
pushf
or
mov
xlat
testl
js
mov
mov
sar
les
xlat
jecxz
pop
push
lret
xor
cld
xchg
shll
mov
mov
cmc
leave
ja
mov
jne
pop
test
jge
stos
mov
test
mov
ljmp
lock
xchg
pusha
gs
xchg
cmp
pop
push
jp
sbb
test
pop
imul
jb
xchg
testl
xchg
push
hlt
les
dec
jle
mov
pop
xchg
test
movq
cmp
push
adc
pop
in
sbb
pop
daa
fwait
subb
insl
xlat
jg
fdivrp
pop
jl
pop
and
roll
lock
mov
rorl
or
or
mov
adc
inc
outsb
adc
mov
cli
fstps
mov
nop
fstpl
cld
xchg
pop
cmp
rolb
mov
jecxz
sub
test
push
push
or
xchg
inc
jns
shlb
jmp
test
jno
loop
nop
pushf
mov
or
pop
inc
xor
aaa
mov
push
dec
int
insb
xchg
ret
mov
push
lret
xor
lods
rorb
sub
insl
pushf
and
push
test
out
repz
shr
add
and
aad
dec
imul
push
cmp
cmp
shl
mov
dec
mov
and
xchg
push
push
cltd
xchg
mov
cs
hlt
inc
inc
or
fisttpl
mov
fisttpll
test
jbe
mov
in
orl
fadds
jno
push
mov
dec
scas
lret
scas
iret
inc
cmpsl
push
inc
push
or
or
xlat
push
xchg
lock
insl
cwtl
pmulhuw
xchg
fcoml
push
cmp
or
pushf
popa
rcll
xor
xor
cwtl
arpl
nop
out
cli
into
xchg
popa
cmp
and
xor
or
addb
scas
inc
dec
push
add
jle
mov
std
cmpl
push
xchg
inc
cmpsl
sub
ret
lret
das
or
cltd
lret
mov
aam
xchg
das
xchg
push
pop
mov
pushf
lods
lock
outsb
cwtl
mov
fdiv
adc
inc
mov
test
movsb
test
test
mov
mov
imul
ss
sub
lock
int3
jg
xor
jo
test
sub
in
jl
imul
repnz
sbb
pop
xor
cs
xchg
test
mov
jge
mov
fbstp
dec
cmp
sbb
and
addr16
mov
fbstp
aam
out
xchg
sbb
push
out
mov
leave
mov
shlb
into
cmp
sub
cmp
je
adc
xor
or
adc
stos
and
mov
std
jne
shlb
push
inc
push
jg
xchg
xor
lock
popl
jnp
cmp
iret
xor
xchg
pushf
mov
adc
inc
xor
sbb
push
pop
loopne
cmp
hlt
sub
fistl
cmp
aaa
sub
sbb
dec
inc
fs
test
inc
popa
cwtl
pop
sbb
inc
mul
cltd
push
insb
int3
lret
shl
mov
daa
mov
je,pn
cmp
in
aas
mov
dec
push
sub
sbb
inc
mov
mov
rol
lahf
sbb
pushf
out
or
mov
shl
mov
adc
inc
adc
xchg
fcoml
lcall
rcrl
adcb
add
jl
addb
dec
mov
push
xor
js
lahf
in
lods
cmp
or
cmpl
push
fidivs
pop
jne
adc
lods
mov
or
popa
int
sub
add
mov
flds
and
jle
sub
ja
movsb
push
mov
loopne
mulb
jb
pop
out
dec
arpl
sbb
test
jno
shll
lock
xor
jmp
push
and
pop
jns
dec
ret
inc
sbb
shl
and
sbb
adc
outsb
in
cmpsb
push
push
pop
into
and
xor
sbb
popf
adc
and
mov
cmp
xor
sbb
cmc
mov
xchg
loop
inc
in
adc
or
movsb
and
test
mov
mov
hlt
add
push
jmp
sub
sub
or
push
cwtl
mov
icebp
inc
int3
xlat
mov
into
pop
xor
inc
test
mov
pop
jecxz
or
pop
test
mov
jbe
dec
jns
xchg
mov
mov
lret
mov
xchg
ljmp
or
mov
mov
mov
xchg
in
fldenv
dec
mov
leave
cmc
xor
aaa
nop
push
fscale
add
pushf
mov
mov
in
add
mov
shrl
jge
adc
adc
and
cs
pusha
sbb
sahf
cmp
mov
lret
mov
pop
icebp
jb
xchg
mov
push
dec
mov
incb
xor
fwait
xor
cmp
or
inc
clc
dec
sbb
jnp
scas
popa
mov
mov
adc
out
roll
adc
mov
sub
pushf
sub
nop
lcall
addr16
push
mov
ja
imul
lods
in
mov
shufps
ret
bound
or
jle
hlt
icebp
fwait
dec
push
jmp
rol
imul
insb
data16
jb
lods
rcrl
in
mov
pushf
fiadds
jmp
or
cmp
leave
and
inc
out
in
add
sub
or
icebp
into
xor
or
out
cmp
add
or
and
jecxz
xchg
rcll
mov
pop
sbb
pop
cmp
into
cwtl
ret
jmp
jne
pop
pop
inc
ljmp
in
push
leave
push
sub
insb
mov
pop
adc
sub
mov
jmp
in
mov
sbb
and
xchg
sub
cltd
xor
jmp
adc
fstl
xor
roll
std
andnps
ljmp
iret
xchg
lods
imul
inc
fdivrl
jnp
jle
cmpb
inc
xor
xchg
fists
pop
sbb
mov
fcomip
test
jmp
add
mov
add
pop
or
xchg
in
xchg
adc
inc
out
shlb
test
hlt
jmp
pop
dec
xchg
xlat
mov
gs
jne
das
subl
gs
push
sub
andb
cmp
sti
outsl
pop
adcl
lea
pop
push
ret
inc
xor
push
cmp
sub
inc
mov
js
loopne
adc
insl
scas
pop
sub
ficoml
mov
aas
and
leave
pop
fs
cwtl
push
push
jmp
sub
push
lcall
mov
ds
ficompl
popf
subl
outsl
dec
test
xchg
outsl
xchg
pop
out
sti
lock
jne
mov
int
mov
stc
fldenv
sarl
out
sbb
sub
pusha
push
mov
test
xchg
repz
test
push
bound
lahf
adc
lea
outsl
insl
movb
mov
mov
inc
cmp
pop
or
cmp
iret
rcll
mov
push
out
cld
loope
in
outsb
divl
dec
push
das
rcrl
movsl
call
loopne
popa
sub
lret
out
sub
lea
xor
push
pop
into
and
pop
mov
push
push
xchg
xor
inc
test
jg
aas
fnsave
ja
mov
dec
sbb
in
xchg
iret
addr16
pushf
pop
xor
ret
loop
jecxz
mov
sbb
lret
test
mov
jns
aaa
insl
push
jo
call
bound
roll
push
test
loopne
stos
mov
dec
daa
dec
mov
mov
dec
xchg
and
xchg
repz
enter
push
mov
inc
fdivp
cmp
insl
sahf
sbb
pop
inc
fidivrs
mov
stos
scas
pop
jns
cmc
push
sub
adc
pop
mov
or
xchg
adc
jp
mov
fstl
addr16
sub
pop
xlat
ret
jbe
decb
ret
push
ja
jns
dec
inc
push
andl
sbb
imul
iret
dec
xor
or
clc
mov
out
cld
je
js
jns
lret
orl
ret
ret
xor
add
ret
mov
loope
dec
adc
arpl
push
mov
int
int
stos
xor
mov
stos
sub
inc
inc
add
mov
les
and
sbb
stos
sub
sub
push
mov
sub
dec
jb
mov
test
imul
cmc
push
mov
adc
jmp
loope
jmp
inc
out
jb
jne
pushf
add
dec
push
imulb
xor
pop
jge
pop
pusha
adc
sbbl
jecxz
cltd
and
ja
push
subl
bound
scas
adc
test
cmp
jge
sarl
cmp
dec
sbb
insl
sub
icebp
insl
pop
mov
and
in
mov
or
lahf
cwtl
jmp
mov
push
xchg
lds
lock
cmp
mov
in
adc
fs
arpl
les
arpl
rolb
pop
in
sbb
paddsb
popf
mov
outsb
dec
pop
loope
add
repnz
fadds
in
aaa
ret
loop
int3
je
sbb
jo
inc
out
mov
std
pop
adc
mov
loopne
dec
xor
pop
pop
xor
dec
decl
jge
mov
mov
in
dec
pop
fnstenv
out
xchg
push
xor
out
add
test
mov
xor
dec
movsl
push
jno
add
fwait
test
fwait
dec
stos
in
pusha
jle
mov
pop
adc
in
out
dec
stos
push
push
cmp
jp
inc
gs
sbb
shrb
aad
cltd
inc
jp
adc
test
mov
addr16
scas
test
cmpsl
push
fsubs
scas
push
sbb
xlat
push
inc
inc
xchg
adc
cmpsl
push
ja
fsubs
mov
out
shrl
jnp
je
pop
add
add
or
loope
sub
or
dec
dec
test
pop
push
shrb
jg
into
mov
pop
xchg
sub
inc
dec
mov
mov
stc
bnd
jno
rolb
lret
fsubrs
push
daa
imul
xchg
pop
dec
mov
mov
pop
push
jae
adc
leave
pop
outsb
add
test
cs
jo
mov
sub
mov
jb
push
mov
in
adc
jp
lcall
sub
jb
jbe
xor
sbb
jb
lds
add
dec
outsl
or
les
ja
mov
push
xchg
mov
sbb
mov
nop
xchg
dec
scas
cmp
sub
rclb
cmp
aaa
xor
aaa
add
sub
out
lds
pop
jl
xchg
pushf
fwait
or
and
pop
jmp
fcomp
bound
add
mov
sbb
out
jae
xor
xchg
xor
mov
push
adc
repz
mov
sbb
sub
adc
sub
call
insb
aas
mov
popa
repnz
inc
bound
mov
mov
cs
aam
sub
mov
mov
scas
cmpb
psubusb
leave
cltd
xchg
add
mov
sahf
dec
shrb
ja
sbb
mov
ja
mov
cltd
in
and
jo
jle
jecxz
or
outsl
inc
pop
sahf
inc
push
or
fadd
ficomps
test
stc
test
mov
sbb
xchg
cmc
fisttpl
inc
test
idivb
stos
repz
in
gs
jno
xchg
rorb
bound
lcall
in
xchg
arpl
cmc
test
fisttpll
loopne
dec
addr16
or
aad
fucomip
es
jnp
jle
mov
jmp
mov
gs
inc
and
cmp
add
mov
in
addr16
inc
add
and
mov
lock
popa
arpl
data16
or
repnz
loopne
andl
jnp
xor
xor
inc
dec
out
outsl
fadds
inc
leave
mov
jns
mov
mov
stos
push
pop
inc
and
gs
sbb
xor
mov
inc
pop
cltd
dec
jbe
clc
jb
ret
arpl
aad
scas
or
sub
and
jge
fmulp
lds
loopne
aad
loopne
lods
bound
and
cli
decb
adc
insb
insl
pop
insl
xchg
mov
xchg
sub
bound
int
push
notb
dec
inc
inc
push
inc
add
jnp
xorl
clc
mov
insb
outsl
int3
xor
and
or
mov
xor
iret
dec
test
in
pop
mov
lret
cmp
gs
addr16
sub
outsl
pop
insb
inc
pop
enter
mov
dec
mov
lods
lock
orb
negl
mov
mov
add
jge
das
adc
cli
std
xchg
mov
rorl
inc
dec
movsl
lahf
cmp
fcomi
or
cmpsb
sbb
lret
loope
push
lahf
int3
cmp
mov
push
xor
push
mov
in
repz
cmp
or
add
pop
test
shl
jne
roll
push
loopne
mov
lds
fwait
sbb
std
mov
push
rcrb
mov
cmp
mov
outsl
faddl
lock
jle
push
aas
dec
popf
mov
push
lock
pop
mov
sub
xchg
adc
dec
mov
mov
out
push
scas
push
movb
popf
sti
scas
inc
xorl
inc
movsb
mov
cmp
mov
std
jg
in
mov
test
subb
push
lret
ljmp
adc
cmp
dec
push
mov
xor
test
popa
lahf
call
lock
mov
movb
add
fistl
xlat
push
dec
jg
movl
lods
iret
fsts
jns
sbb
cmpsl
insb
cmc
sbb
js
cli
mov
test
lods
pop
jmp
aaa
dec
sub
int3
sbb
fistl
rcrb
cmp
cmp
fmull
shrb
loop
lock
adc
test
pop
test
icebp
push
clc
js
dec
int
outsb
jb
test
in
add
nop
ret
jae
and
mov
pop
sbb
int
mov
inc
adc
xor
mov
sub
pop
jnp
cmpsb
mov
js
and
leave
cs
stos
dec
jl
int3
ret
in
cltd
das
cmp
lcall
sub
or
roll
inc
jno
ret
push
sub
jne
lahf
out
xchg
in
in
mov
in
cltd
in
push
mov
inc
lds
sbb
xchg
mov
sahf
adc
jo
and
ret
push
clc
mov
add
jne
adc
ret
in
movsl
mov
push
pop
or
xchg
xchg
fsubl
arpl
sti
inc
mov
dec
shll
push
sub
scas
test
jo
dec
neg
mull
mov
cmpsl
add
mulb
push
or
xchg
sbb
pop
xchg
cmpl
jge
push
pop
cmp
fisttps
jp
xor
mov
test
dec
daa
mov
lock
jecxz
clc
test
in
fstps
jecxz
xor
aam
out
push
adc
push
xchg
cli
xchg
sbb
add
insb
push
adc
jb
nop
push
cmp
dec
push
jg
jle
in
jns
insb
js
jmp
enter
aad
cld
mov
je
fadds
insl
cmpb
push
jp
sahf
dec
mov
or
rcr
js
xchg
fstps
mov
push
pop
lret
fmuls
jo,pt
cmp
insl
pushf
jmp
add
cmc
jae
adc
jbe
les
mov
xchg
inc
mov
add
mov
popf
inc
dec
out
testb
aas
xor
int
cmp
aam
fwait
jmp
and
push
push
int3
repnz
mov
fimull
rolb
movsl
fxtract
jg
xchg
mov
int3
out
hlt
nop
leave
jns
idivb
jg
adc
js
lods
out
dec
cld
xchg
cmpsb
cmpsb
dec
sbb
push
sub
mov
flds
ds
scas
les
aas
mov
mov
stos
loop
add
cwtl
mov
push
pushf
pop
aam
dec
push
imul
in
loope
pushf
and
sahf
xchg
enter
fidivs
lea
es
sub
fwait
rol
roll
adc
in
daa
xorb
dec
inc
sub
push
mov
lret
cmpl
shlb
dec
or
lods
stos
or
pop
mov
mov
xor
cmp
jge
sbb
xor
clc
add
or
lods
bound
and
pop
mov
lcall
xor
mov
push
in
ljmp
mov
jnp
or
jmp
mov
mov
insl
sbb
enter
jne
std
adc
pop
pop
pop
out
push
push
mov
cmpsb
popl
cmpsb
sub
adc
ret
jnp
mov
sarl
insl
repnz
push
hlt
mov
in
pop
jl
sub
shl
test
or
push
sti
repnz
sbb
testb
test
dec
arpl
sbb
pusha
pop
out
mov
lahf
vcvtss2sd
out
mov
sbb
subb
sub
mov
pop
mov
loopne
scas
xchg
call
or
imul
jl
test
sub
into
sub
movups
pop
popf
ja
js
lea
and
shrb
sbb
cwtl
jmp
rcl
ja
mov
cli
cmpl
jns
push
xchg
xor
xchg
mov
jno
sbb
cmp
paddw
jae
mov
fsubs
repnz
pop
insb
test
mov
push
in
fsubrl
clc
dec
inc
icebp
mov
repnz
ss
and
xchg
lods
rcll
pop
cmp
dec
inc
jge
and
sbb
xor
mov
sbbb
cltd
mov
push
xor
pop
outsb
push
aaa
das
testl
xlat
add
cmp
cmp
fnstcw
cmp
fadd
xor
push
mov
cld
ret
adc
lret
out
push
fcmovnbe
pop
sahf
packsswb
ja
inc
ret
popa
cmp
addr16
out
or
cld
es
xor
mov
rorl
sub
fsubr
push
jmp
sub
xchg
pop
sub
fwait
xchg
pop
rorb
mov
jg
jecxz
lods
clc
rorb
adc
jo
loop
clc
mov
loope
inc
idivl
shrb
call
mov
fadds
jb
mov
mov
or
and
pop
dec
mov
mov
xchg
insl
mov
test
imul
push
mov
nop
fs
xchg
pushf
loop
lods
popa
xor
outsl
push
lea
pop
mov
xor
into
and
lods
mov
test
cmpsl
aad
icebp
rcll
xchg
pop
hlt
or
out
pusha
movsb
mov
jecxz
test
daa
es
jns
nop
fdivs
mov
sbb
daa
in
lahf
pop
jb
ss
out
inc
push
adc
shll
rorb
sbb
or
shll
mov
push
fdiv
in
xchg
sbb
pusha
or
push
dec
stos
cmp
bound
jne
inc
jmp
mov
adc
lock
sbb
iret
sbb
xchg
lretw
push
lret
cmp
fbstp
push
xor
dec
popa
pop
outsl
mov
xor
mov
sub
test
ja
cwtl
es
in
ja
lods
fwait
jns
mov
std
fcmovnb
mov
jmpw
scas
mov
push
fwait
pop
or
std
mov
push
jmp
repnz
mov
je
push
mov
jg
jle
cmp
dec
aas
stos
jo
lret
and
sbb
rclb
mov
and
dec
adc
lods
arpl
rep
outsl
jae
std
mov
xchg
mov
test
cli
jmp
cwtl
jne
add
ljmp
js
cmp
stc
shrb
mov
je
push
in
lret
hlt
in
mov
stos
jp
sbbl
mov
imul
cmpsb
roll
push
fidivrl
pop
lea
gs
insl
sbb
fmuls
jo
aam
iret
lret
jge
test
fcmovbe
mov
and
mov
xor
inc
out
adc
inc
xchg
mov
dec
inc
or
mov
lock
dec
fildll
shlb
rorl
xor
mov
mov
xchg
jno
stc
jg
cmovb
or
add
xchg
jecxz
dec
and
lock
push
rorl
test
cmpsl
xchg
cmp
shlb
lds
sti
xor
jle
icebp
clc
cmp
loop
stc
outsb
repnz
call
mov
ds
aaa
mov
leave
sbb
push
xor
and
sbb
pop
in
push
xchg
mov
lock
xor
out
pop
outsl
mov
dec
sub
insb
cmc
push
loope
xchg
cmpb
mov
icebp
xor
push
fisubs
push
test
sbb
scas
insl
jge
sub
imul
divb
or
mov
test
inc
dec
push
xor
cmp
jne
lret
xchg
loope
fisttps
jo
push
in
es
jle
mov
cmp
rcll
in
mov
cmp
adc
int3
mov
pop
mov
ret
inc
mov
xor
add
add
repz
ja
inc
jecxz,pt
jne
pop
xor
cmc
mov
adc
add
and
push
add
addr16
push
fnsave
jmp
xlat
xchg
movsl
and
sbb
xor
inc
add
jno
negb
sub
stos
mov
sbb
aam
cmp
cmp
adc
inc
loop
dec
dec
jbe
int3
push
mov
idiv
mov
test
adc
adc
sub
fldt
fidivrl
xchg
adc
mov
sub
dec
pop
sbb
cmpsb
sub
in
push
xchg
mov
xor
rcr
add
ret
jno
mov
addr16
jl
push
and
cli
adc
sbb
gs
xor
mov
sti
xchg
sar
lds
adc
xchg
pushf
dec
daa
rcrl
cli
and
xchg
add
cmp
push
js
and
xor
sub
dec
scas
shr
popf
test
test
mov
ret
xor
cmp
jge
xchg
loopne
test
call
mov
xlat
push
sub
imul
int3
fisubrs
or
pop
add
jecxz
sub
pop
inc
daa
lock
insb
sub
mov
fisttpll
popa
aad
js
subl
data16
xor
xorl
mov
mov
pop
cmp
sarl
dec
arpl
pop
jp
jle
mov
sub
jbe
repz
ja
adc
outsl
daa
mov
lret
pop
and
push
dec
sarb
xor
cmpsl
fs
jle
jmp
jge
cmp
adcl
movsb
pop
sub
sbbl
repz
sub
adc
xchg
aam
fisttps
mov
xchg
lea
scas
jae
push
mov
mov
jl
aad
aas
cli
cmp
call
sub
bound
add
pop
jecxz
and
push
mov
push
inc
adc
daa
ja
pop
loope
hlt
sbb
iret
cmpsl
jns
and
jbe
out
jl
jns
jbe
sarb
mov
pop
push
lret
sbb
dec
inc
popa
cwtl
mov
rcll
mov
adc
aaa
inc
and
orl
sub
dec
cmp
sub
push
aam
jmp
jns
movsb
sbb
out
mov
sahf
inc
xchg
sbb
std
push
scas
daa
push
ds
cmpb
test
fimull
mov
mov
push
insl
out
fcoms
push
jae
mov
inc
dec
xor
lods
mov
mov
aas
cmp
adc
xchg
push
daa
and
pop
lock
pop
jmp
sarb
and
mov
sbbb
dec
cmp
xor
mov
stos
shlb
andl
xlat
xchg
frstor
int
or
and
into
add
jo
pop
sbb
jl,pn
add
shr
ret
mov
xchg
cmp
fisttpl
pop
inc
add
iret
jmp
std
push
jno
shll
xor
pop
mov
lods
xchg
loopne
push
cmp
jg
jmp
lret
and
push
jne
lcall
cltd
dec
adc
ret
cmp
push
jb
mov
add
arpl
fnstenv
mov
js
xor
cmp
pop
jg
enter
jmp
dec
leave
shll
adc
pop
lds
pop
sbb
sub
mov
sub
daa
push
push
test
xlat
test
push
xchg
lds
sbb
cmp
lds
sub
es
mov
cmpsl
fisubrs
push
gs
add
lcall
mov
push
jns
ret
rcll
mov
cli
dec
aad
and
mov
les
xor
mov
jbe
sarl
inc
aaa
and
cmc
inc
cmp
add
cmovbe
mov
and
jp
sbb
jnp
lahf
mov
fsubp
dec
call
jbe
sbb
jge
cmp
push
cli
repnz
mov
test
pop
sbb
or
mov
mov
jl
sahf
lret
mov
cmp
fsubl
sub
add
repz
mov
sub
xchg
pop
inc
adc
mov
push
cmpsb
inc
sti
xchg
ja
mov
or
sbb
pushf
xor
jae
jecxz
nop
xchg
not
inc
lret
sbb
or
cld
inc
lds
shl
loope
fstpt
jecxz
repz
shll
inc
adc
add
imul
test
rol
leave
xor
dec
nop
push
push
push
adc
jl
pop
in
bound
imul
pop
stos
cmp
xchg
gs
xchg
sbb
adc
dec
pop
and
std
adc
int
push
fstp
inc
inc
or
mov
xchg
mov
adc
loopne
inc
lahf
mov
or
int
dec
ja
mov
pop
jle
lcall
cmpsl
dec
outsl
adc
imul
lret
cltd
inc
into
imul
div
and
inc
outsl
dec
push
cld
cmpl
xchg
jnp
leave
inc
mov
pop
sbb
inc
adc
sbb
out
pop
sbbb
push
dec
push
pop
lcall
scas
fst
xlat
push
or
mov
pop
cltd
cmpsb
gs
stos
sub
cmp
in
dec
in
jno
ja
shll
cmp
mov
icebp
push
jbe
xor
repnz
call
call
cmp
xchg
gs
dec
sbb
mov
psubq
ret
dec
jmp
add
push
jo
mov
ss
popf
xor
xchg
dec
push
inc
lea
jns
add
dec
or
imul
mov
ss
fdivrl
movl
lahf
fiaddl
mov
mov
push
dec
in
ret
stos
decl
pop
jle
jbe
mov
mov
mov
movntps
in
mov
xchg
out
xchg
popf
sbb
fbstp
cmp
popf
jg
xlat
inc
shl
dec
in
pop
nop
push
sbb
fsubp
sub
jns
or
xor
cmp
dec
inc
push
icebp
push
add
aad
call
mov
mov
xchg
rclb
inc
es
sub
scas
fisubrs
xorb
pop
sub
or
pop
call
lahf
mov
jb
and
sbb
xorb
mov
ret
mov
ret
inc
cmpsl
mov
mov
leave
int3
mov
xchg
mov
jmp
xor
pop
shlb
mov
dec
loopne
rol
mov
push
push
inc
lods
call
fnstcw
jnp
xor
and
inc
cmc
dec
mov
clc
popa
push
sub
hlt
push
leave
cmpb
movsl
dec
sub
inc
and
or
popl
xor
xlat
or
xlat
dec
cli
lods
pop
mov
or
repnz
lea
popf
sbb
enter
sbb
mov
or
sbb
rcl
or
fisubs
fwait
in
dec
rcrb
lcall
jle
leave
mov
pop
pop
inc
jnp
jne
aam
adc
pop
mov
push
inc
xchg
add
xor
jbe
or
fmulp
in
mov
jle
add
xor
or
sahf
pop
mov
sbb
inc
push
pop
sub
sub
sti
inc
pusha
sub
pop
jno
testl
mov
push
dec
sti
loope
dec
loope
lret
in
imul
sub
pushf
stos
cmp
push
in
lea
mov
adc
ret
cmpsl
in
jp
cmp
dec
or
sbb
in
pop
cmp
rcr
loop
dec
mov
add
fdivrs
aas
cwtl
mov
fdivrs
dec
sub
cmp
sbb
mov
clc
pop
rolb
mov
add
jne
mov
mov
mov
cmp
sahf
pop
cmpsb
lret
insl
push
cli
nop
mov
cmpsl
outsb
mov
or
pop
inc
jno
rcrl
and
mov
adc
test
cmpsl
push
aaa
jae
push
std
and
shll
mov
stos
loop
lahf
push
cwtl
pop
in
mov
mov
cmp
adc
cmc
or
lods
icebp
mov
sti
insb
addl
pop
ja
add
sti
cmp
sahf
or
out
aas
cmp
in
xchg
push
fistpl
movsl
hlt
test
rorb
mov
sbb
fistl
icebp
cmp
cmpsb
stc
fbstp
mov
or
imul
and
lock
push
aam
cld
clc
mov
and
popf
out
push
add
dec
adc
dec
cmc
negb
fwait
jbe
adc
lahf
in
mov
std
jg
daa
in
mov
cmc
adc
xchg
je
loope
lcall
scas
push
aam
inc
push
enter
stc
mov
out
sub
inc
cmc
movsl
stc
jge
aas
movsl
jnp
nop
add
xchg
hlt
pop
mov
xchg
or
roll
and
fwait
insl
xor
mulb
xor
xor
mov
adc
out
movsl
jb
inc
loope
sbb
testb
cld
sub
cltd
imul
popa
xchg
loope
mov
cwtl
aam
aaa
negl
dec
push
push
mov
push
or
pop
xchg
jne
and
repz
mov
shl
cmp
aas
lret
repz
jecxz
pop
xchg
inc
push
fnstenv
dec
stos
sub
lar
andb
imul
stc
out
inc
push
xor
jne
push
sbb
jge
loope
stos
fstpl
rorl
std
push
and
scas
and
mov
inc
jl
mov
mov
push
xor
ficoms
es
test
xchg
jmp
pop
mov
or
and
mov
pop
sub
hlt
testl
mov
xchg
nop
sub
push
inc
nop
jl
lods
js
adc
inc
pusha
fmul
xchg
pop
enter
add
lods
and
jnp
sub
fistl
out
cmp
sub
lret
jb
mov
jo
fnsave
mov
sub
xchg
cmc
adc
push
mov
cltd
pop
pop
js
bound
xor
sbb
hlt
insl
dec
adc
xor
fs
add
aad
fidivl
sub
into
cmpsb
jmp
stos
orb
inc
xchg
ret
addr16
xchg
mov
dec
cmp
push
mov
repz
outsl
jnp
push
push
push
sbb
les
mov
cmpsl
xor
inc
int
les
mov
push
jbe
subb
jo
lds
jge
rolb
data16
adc
in
mov
jo
mov
stos
cwtl
mov
data16
push
cld
xchg
dec
sti
addr16
sub
xchg
cld
add
pop
les
xchg
mov
inc
mov
outsb
pop
cwtl
enter
sti
mov
hlt
jp
mov
loopne
ret
jl
adc
sahf
add
xor
push
add
sbb
pop
jl
movsb
insl
push
cld
push
repz
cli
sub
int
js
and
mov
stos
fld
sbb
jo
push
push
lahf
test
enter
mov
xor
jae
nop
repnz
dec
cmpsl
daa
imul
in
clc
enter
lahf
mov
sub
xorl
mov
mov
ret
mov
lock
outsl
out
adc
adc
push
push
and
mov
sbb
and
inc
push
cmp
jbe
shrl
pusha
scas
mov
and
mov
dec
jmp
iret
sub
pop
mov
frstor
xchg
arpl
sbb
mov
data16
push
imul
popf
pop
pop
lcall
stos
stc
jnp
rolb
dec
or
adc
or
mov
mov
fcoml
add
and
jns
mov
das
adc
sub
push
mov
xor
stos
jbe
push
daa
repnz
mov
push
mov
hlt
fcomp
aaa
std
xor
cli
fsub
jo
pop
cwtl
mov
and
jb
cmp
loop
lret
divl
fmul
stos
jmp
xchg
adc
dec
xchg
fs
ret
and
andl
sbb
lret
or
xchg
pop
dec
jp
xchg
ljmp
icebp
les
out
mov
aaa
fidivrs
jo
in
sbb
inc
inc
lods
add
inc
shll
mov
rorb
push
loopne
ljmp
dec
pop
mov
ret
and
cmp
xor
mov
dec
mov
fisttps
fisttps
decl
jmp
pop
or
jmp
jbe
xor
lea
cmp
pop
cmpsb
jne
lcall
int3
ss
mov
mov
xor
in
sub
int3
dec
in
ds
pushf
outsb
and
mov
xor
or
jo
mov
out
adc
xchg
mov
rol
stc
jmp
sarl
mov
push
mov
sahf
cmc
inc
shrl
push
jp
push
xor
xor
lds
xorb
inc
push
mov
cmc
je
pop
notb
sahf
test
pop
lcall
popw
fimuls
lret
and
dec
xchg
fs
fnsave
hlt
inc
ds
pop
add
mov
popa
scas
mov
fistps
sub
pop
inc
sbb
sub
dec
shr
test
testl
or
cmp
or
je
lret
dec
lock
inc
mov
dec
fwait
pop
ss
push
fidivrs
cmp
iret
imul
xchg
addr16
push
xor
sbb
dec
lret
insl
push
imul
mov
and
pop
pop
insl
add
jmp
lret
jmp
ret
daa
jecxz
lcall
push
pop
or
loope
outsl
dec
vunpcklps
sub
jo
je
test
out
sub
push
inc
jmp
ret
aas
jecxz
xchg
fildl
rcr
mov
std
arpl
sub
scas
in
call
and
decl
and
xlat
inc
sbb
xlat
sti
rorb
mov
mov
mov
scas
aas
and
insb
cmp
imul
push
and
subps
movsb
sub
add
pusha
jl
out
dec
adc
adc
inc
int3
call
pop
mov
sbb
push
cmp
push
push
cwtl
ret
cmpsl
sbb
ljmp
lahf
sub
aaa
loop
mov
inc
xor
cmpl
daa
icebp
in
fsubrl
mov
push
fstl
shlb
cmpsb
fists
loopne
push
push
cmpsb
add
imul
add
js
dec
rcll
lock
push
fdivs
bound
cltd
pop
sub
jecxz
cwtl
push
clc
xchg
and
mov
adcb
sti
test
int
pusha
lret
push
push
add
andnps
push
clc
cmp
jle
xor
repnz
cmp
lds
or
pusha
sti
mov
mull
in
movb
jno
in
and
jl
repnz
pop
cmp
scas
lahf
lods
mov
loopne
sbb
lds
into
rcrl
jnp
mov
adc
sbb
push
mov
and
inc
aam
gs
dec
ficompl
daa
ljmp
dec
xor
outsl
push
pop
push
lods
ds
rcl
shrl
jp
sub
mov
or
cmp
and
sub
movsb
loope
hlt
sbbb
fs
mov
notl
jmp
aas
jo
mov
or
fidivrl
pop
push
out
enter
stos
mov
push
jae
leave
jae
rcll
jb
pop
sbb
sbb
dec
loop
push
mov
sub
insl
mov
jb
fwait
jae
je
cmp
mov
pop
inc
out
dec
int
jmp
repz
imul
fs
insb
cmp
cmp
je
mov
xor
aas
pop
jge
outsb
mov
jb
push
push
stc
orl
std
and
lods
jae
fcmovbe
pop
and
add
dec
or
fsubl
adc
sbb
cmp
into
add
frstor
ret
or
jp
dec
jns
mov
jne
lea
sub
out
jmp
and
cmp
adc
mov
rorb
addb
data16
sbb
cmp
xchg
cli
sahf
fisubrl
or
imul
lods
hlt
std
mov
negb
pop
in
addb
pop
push
xchg
sub
lret
jmp
mov
pop
imul
sbb
incl
test
in
xor
aas
ret
mov
mov
clc
push
rolb
ds
jb
mov
adc
outsb
mov
mov
mov
mov
adc
mov
inc
push
sub
adc
mov
fdivr
sbb
jb
and
lods
cmc
shrl
rcr
mulb
jmp
enter
xor
adc
dec
and
ss
jp
shll
addr16
push
mov
fistps
xchg
aas
add
xlat
xchg
or
xchg
mov
fxch
roll
ret
imul
jns
pushf
jo
iret
and
lds
dec
pop
cmpsl
or
movsb
sub
jmp
xchg
ja
or
jbe
gs
sarl
ljmp
jg
mov
add
mov
es
loope
outsl
xchg
fwait
push
adc
xchg
rcrb
jp
pop
pushf
sub
popa
ljmp
adc
fsubs
mov
cmp
loop
data16
inc
xlat
test
fistl
test
lods
and
inc
sbb
pop
xor
sbb
add
scas
scas
out
xchg
lods
cmpsl
dec
adc
or
pop
leave
sbb
lret
adc
sub
sbb
pop
cmp
mov
push
push
mov
add
insl
jo
or
cltd
sbb
or
scas
movsb
adc
ret
cmc
jmp
xor
mov
xchg
cmc
je
push
add
mov
dec
cli
jge
loopne
lock
mov
imulb
cmp
mov
push
sub
xchg
mov
inc
xlat
xchg
jmp
shl
sarl
ja
xorb
cs
sbb
test
sub
gs
adc
test
sbb
fs
stos
dec
mov
sub
dec
push
orb
or
mov
iret
and
into
cmp
bound
inc
push
pop
pop
fmuls
mov
dec
cwtl
push
mov
scas
and
pop
push
and
adc
dec
out
and
jbe
xor
sbb
add
inc
push
je
and
pusha
push
stc
aam
jl
cmp
cld
jg
hlt
mov
dec
inc
cmp
or
jg
out
out
mov
inc
lea
xchg
insb
popa
testl
ljmp
sbbb
ss
mov
inc
inc
cld
adc
mov
loop
jno
cmp
test
or
cmc
setg
jnp
out
sub
mov
xor
jle
jns
push
sti
sahf
arpl
xlat
xchg
sbb
xchg
fdivl
xor
icebp
out
push
inc
ljmp
popf
add
lds
sbb
xor
in
loope
push
imul
push
mov
xchg
ljmp
sbb
inc
dec
inc
and
push
sahf
data16
test
cmpsb
xor
data16
aad
sub
add
sar
adc
fldln2
lret
push
out
mov
inc
cmpsl
pusha
push
mov
mov
stos
outsl
jno
mov
setle
pop
and
popa
mov
add
imul
idivl
fwait
outsb
pop
cwtl
cmp
stos
mov
mov
sub
leave
mov
dec
scas
notl
iret
xchg
dec
aaa
push
out
sbb
in
sarb
mov
pop
or
mov
mov
lcall
insb
mov
jle
call
shll
jns
lock
neg
rorb
iret
lods
add
push
into
lock
imul
mov
js
inc
add
loop
push
jns
ret
push
stc
sahf
pop
fs
adc
icebp
ficoml
push
stos
sub
cmp
and
mov
loopne
ja
dec
jl
or
ret
std
mov
add
imul
push
test
sub
or
cld
or
ds
push
jle
xchg
and
dec
jmp
add
sbb
fildll
adc
sub
sbb
jbe
cmp
lock
aam
sbb
insl
js
out
lret
faddp
sub
mov
sbb
imul
mov
inc
jle
mov
push
es
jns
inc
mov
movsl
or
cmp
cmp
pop
pop
dec
repnz
xchg
insl
pop
cmp
negb
loop
je
roll
hlt
lcall
out
sub
rclb
jp
mov
rorl
test
movsl
or
gs
or
xor
lret
fwait
mov
cmp
mov
or
mov
mov
jl
ret
push
movsl
xchg
xlat
mov
push
ds
xchg
xor
push
push
and
adc
pop
pop
mov
xchg
sbb
mov
hlt
rcr
push
add
sub
loopne
pop
imul
cli
mov
push
mov
jb
int
add
repnz
bound
mov
sti
test
leave
dec
add
and
and
jmp
mov
movsb
pop
into
rcrb
or
mov
xchg
cmp
ficompl
movsl
dec
adc
push
mov
ljmp
cltd
add
inc
jbe
xsavec
xor
imul
xor
int
test
dec
ds
jns
add
mov
fildl
notb
nop
in
mov
cmp
sub
sti
add
push
out
loope
les
je
clc
cltd
les
mov
shr
stc
pushf
inc
push
cmp
jge
leave
pop
inc
addr16
cmpsb
add
imul
dec
jmp
ret
xor
iret
and
repz
pop
and
inc
pop
sub
add
mov
mov
data16
repnz
data16
lret
mov
aas
push
sbb
push
iret
fbstp
shll
leave
mov
pop
fsubl
xor
add
mov
xor
mov
lret
mov
push
test
mov
cmc
add
hlt
test
sub
jg
imul
mov
add
jg
ss
pop
mov
adc
mov
mov
cmpl
es
xchg
pop
insl
jecxz
xchg
sbb
add
pop
mov
lcall
ficomps
xor
jns
inc
xor
xor
adc
lods
pop
gs
jmp
dec
das
xchg
xchg
xor
mov
scas
lods
ret
loope
cli
xchg
mov
ja
or
push
leave
dec
ret
in
movsb
pop
imul
imul
stos
inc
xchg
movsl
imul
push
stos
mov
pop
adcb
pop
mov
jl
jae
imul
jge
add
rep
pop
mov
outsb
test
sahf
repnz
and
jbe
jnp
pop
push
or
push
test
sbb
adc
test
icebp
cmpl
orl
inc
push
push
cmpsb
ljmp
fsubs
loopne
adc
push
and
lds
cmpsl
xchg
ficoms
adc
and
ret
mov
cmp
mov
rclb
insb
xchg
in
xchg
or
xor
jecxz
jg
lret
cs
cmp
ret
sub
mov
push
jo
inc
jge
add
xor
mov
shl
cmpl
mov
fwait
xchg
xchg
sbb
jle
repnz
xor
iret
pusha
pop
inc
mov
ficomps
push
lods
js
sbb
dec
xor
cli
movsl
loop
jno
mov
js
sbb
fstpl
fwait
mov
pop
imul
test
jl
in
mov
into
xchg
cmp
push
pop
outsl
cwtl
addr16
fwait
shrl
loopne
fldl
ljmp
and
or
in
dec
icebp
cmp
dec
adc
or
and
shll
aam
sti
out
pminub
shl
add
pop
xor
roll
imul
xor
cmpb
mov
lea
mov
jne
jns
mov
hlt
in
addl
mov
and
mov
mov
dec
mov
xor
orl
inc
rcll
lret
neg
test
jl
stos
imul
push
mov
cmp
sarl
icebp
mov
out
and
cmp
mov
fistpl
add
shll
pop
repz
mov
inc
repnz
adc
nop
and
dec
data16
insl
gs
push
lea
test
jne
ret
les
test
mov
or
dec
and
jge
aaa
sub
lods
mov
pop
sbb
hlt
incl
pushf
push
rcl
cmpsl
mov
jbe
outsb
inc
ja
in
daa
mov
test
sbb
add
jge
push
int
inc
pop
cmc
mov
pushf
push
pusha
imull
pushf
mov
jno
sbb
fcom
xor
lahf
xchg
fdivr
jmp
adc
dec
adc
fisubs
push
ret
mov
mov
sbbl
adc
inc
jb
rclb
jmp
scas
xor
fs
xor
push
xor
mov
mov
mov
push
addr16
pop
adc
cmpsl
rcrl
roll
push
test
ret
dec
out
aad
fistpll
cmp
add
push
pusha
inc
mov
or
popf
inc
mov
mov
pop
inc
pop
in
movsl
xchg
out
dec
xchg
in
jns
dec
arpl
xchg
mov
adc
or
sbb
adc
enter
daa
jbe
daa
cmp
and
fldcw
adc
cwtl
add
out
pop
test
xor
push
cmpsb
mov
stc
and
cmpsl
xchg
push
fisttpl
cld
inc
sub
in
out
xor
aam
fisubl
adc
lock
add
mov
cmp
push
push
mov
test
xchg
insb
jle
xor
mov
imulb
stos
cmp
cmp
sbb
hlt
addl
mov
inc
inc
or
mov
add
arpl
je
mov
testl
jne
imulb
pop
outsb
cli
xorb
rclb
inc
loop
xor
jle
xchg
stos
mov
sbb
add
and
cmp
outsl
pop
push
fidivrs
aaa
mov
ror
cmp
sub
fwait
push
insb
movsb
jnp
cmp
push
xlat
dec
dec
jo
mov
je
mov
test
ljmp
ljmp
and
cmpsb
testb
adc
xor
adc
pop
pushf
inc
lds
jecxz
or
icebp
inc
out
rcr
pop
xchg
popf
and
jnp
jmp
es
ss
leave
and
add
jbe
call
adc
sbb
sbb
sbbl
aaa
idiv
pop
push
mov
vmwrite
sub
das
sbb
in
jge
adc
adc
adc
jle
gs
outsl
mov
inc
inc
mov
xchg
inc
je
sub
dec
jecxz
inc
adc
push
scas
sub
arpl
xor
ljmp
pop
lahf
stc
mov
mov
sahf
loope
iret
and
leave
or
addr16
adc
cli
lcall
fwait
test
test
dec
jno
stc
mov
xchg
lods
jmp
test
popf
pop
clc
sub
push
loopne
movsb
daa
jge
mov
dec
mov
jb
cltd
out
dec
sbb
mov
inc
pop
sbb
fistps
lds
inc
mov
bound
push
in
cmp
dec
dec
clc
lret
inc
mov
sbb
sbb
in
jge
sbb
mov
roll
dec
lret
cmp
pushf
push
out
scas
fdivrl
cli
es
adc
out
jne
inc
lahf
jno
adc
dec
push
enter
dec
std
int3
xchg
cwtl
add
cmc
sbb
pop
adc
or
pusha
les
fdivrp
dec
sahf
or
mov
lea
xchg
adc
test
test
jmp
movsl
aaa
push
les
mov
jne
fidivl
sarl
xor
lods
push
ljmp
and
mov
push
and
and
add
xorl
stos
sub
or
xchg
shl
test
push
arpl
repz
inc
pop
std
mov
xchg
sub
xor
adc
mov
add
inc
scas
aam
or
movsl
xchg
add
adc
inc
out
jne,pt
adc
repnz
push
jbe
jae
jnp
ret
lds
pop
mov
pop
or
dec
sbb
mov
push
push
or
imul
xor
icebp
xor
scas
aas
outsb
mov
fistpl
push
push
addb
mov
fidivrs
mov
sub
sbb
mov
mov
adc
or
mov
pop
into
out
scas
xchg
mov
cli
add
outsl
lods
mov
clc
sub
rolb
cmp
lahf
xlat
jl
fcomps
movsb
cltd
shlb
test
xor
mov
shrb
sub
mov
stos
test
mov
pop
jnp
fcoml
pushf
xchg
push
test
mov
lock
xor
out
jecxz
mov
mov
nop
lods
jmp
roll
movzwl
icebp
mov
mov
and
cmp
es
xchg
iret
cmp
jne
jp
adc
cltd
mov
fwait
pusha
call
stos
in
icebp
xchg
xchg
cmp
push
in
ss
jnp
mov
sub
cwtl
pop
jge
mov
outsb
test
stc
inc
cmpb
scas
loop
push
add
pop
testl
push
mov
enter
push
dec
mov
cli
dec
and
sbb
shll
sub
sub
lock
arpl
dec
loopne
sbb
adc
cmpb
adc
stos
push
lods
les
and
pop
push
out
dec
out
jge
xchg
pop
js
mov
stos
inc
mov
clc
dec
jb
cmp
xchg
bound
or
inc
and
cmp
stos
lret
adc
inc
and
mov
movsb
dec
pop
add
push
xor
or
mov
dec
inc
mov
ja
popf
dec
jecxz
ret
jmp
ds
add
adc
xchg
jp
mov
pop
push
cld
sub
push
pushf
dec
in
inc
xchg
stos
movsl
je
mov
int
mov
dec
mov
sti
mov
sbb
in
or
jecxz
pop
sbb
pop
lahf
ljmp
mov
add
and
push
push
lds
or
pop
xchg
push
test
mov
add
js
sbb
dec
movsb
in
cltd
gs
aaa
sub
push
xchg
cmp
dec
jl
mov
das
sbb
into
fsts
enter
sub
or
pusha
imul
rol
cmp
addr16
adc
xchg
adc
movsl
into
sbb
jl
sub
mov
jp
jbe
pop
mov
push
mov
bound
sub
push
ret
insb
mov
iret
insl
jmp
and
pop
sub
movsb
sti
mov
jne
mov
movsb
pop
ljmp
add
push
aad
clc
mov
xchg
cmpsl
fnsave
leave
add
lods
xor
dec
push
or
cli
mov
fsubrp
incl
jmp
cmc
xchg
push
hlt
daa
dec
dec
enter
stos
mov
cmc
mov
leave
cmpsb
dec
lock
fcoml
mov
int3
cmpsl
out
pop
mov
mov
nop
fildll
sub
lock
sbb
mov
pop
xchg
and
mov
push
adc
mov
cwtl
pushf
out
inc
adc
les
imul
repnz
clc
std
fldt
mov
inc
sub
movsl
dec
adc
xchg
add
xchg
push
sub
dec
inc
mov
jg
test
pop
and
push
push
adc
and
lods
into
fldcw
dec
ret
sub
mov
mov
xor
bnd
xor
add
outsb
mov
jo
push
pop
and
jno
mov
popa
jne
lods
jp
pusha
repz
xchg
push
jge
push
mov
xor
mov
or
dec
jle
out
bound
sub
sarl
dec
fstp
pop
xchg
lock
stos
int3
jns
rorb
lret
fwait
out
pop
cmp
pop
inc
test
mov
icebp
cmp
jo
je
sub
stos
outsb
cltd
call
push
sub
dec
inc
mov
push
mov
mov
aam
fadd
fwait
add
ljmp
xor
leave
cmp
add
bnd
inc
sbb
push
cmp
jl
add
repnz
fwait
std
mov
repz
mov
repz
push
lcall
in
je
mull
push
xchg
lcall
xor
or
pop
push
xor
les
and
call
cmp
sahf
add
lods
pop
subl
xchg
inc
fs
mov
xor
pop
les
cmp
cmp
inc
jnp
fldenv
out
dec
pusha
test
outsl
jo
cld
push
repnz
or
ljmp
cs
iret
addb
pop
or
mov
sbbl
mov
aaa
mov
dec
addb
mov
dec
xchg
and
xor
inc
push
mov
cmp
sub
mov
push
ret
loopne
mov
and
push
mov
push
jno
push
fnsave
test
jno
sbb
pop
mov
out
pop
out
mov
fidivrl
pop
jmp
mov
adc
loopne
or
sbb
jl
xor
mov
inc
outsb
enter
pop
rep
dec
fdivrs
mov
jbe
sahf
mov
pop
jnp
or
pop
xor
cmp
mov
jbe
push
pop
pushw
push
sub
push
xchg
mov
outsl
mov
xchg
lods
flds
fwait
push
int
cltd
mov
mulb
fwait
iret
sub
sub
dec
or
ds
mov
cmpl
mulb
bound
decb
mov
fs
jg
scas
push
dec
sub
cmp
in
xor
mov
mov
jmp
jg
jae
dec
hlt
aas
das
push
sbb
and
dec
xchg
rol
call
push
negl
cmp
mov
jo
int
sbb
fldlg2
rcrb
inc
xchg
bound
dec
fcomi
pop
stos
sub
xchg
add
ja
adc
dec
push
sbb
adc
mov
push
shll
xchg
inc
jae
in
in
inc
hlt
mov
loope
mov
in
push
mov
loope
scas
jbe
iret
repz
stos
push
xchg
mov
and
jbe
fwait
adc
or
popf
lea
mov
leave
scas
aas
cmp
and
xor
stos
mov
mov
and
int3
and
inc
dec
inc
push
hlt
pop
inc
cli
mov
addr16
je
clc
repnz
cld
xchg
inc
mov
xchg
cmc
mov
jbe
roll
in
incb
cmpsb
int3
sahf
sbb
gs
dec
out
sbb
inc
cmp
dec
stc
jle
movsl
rcll
or
outsb
cmp
outsb
mov
adc
out
cmp
je
sbb
daa
jl
lds
and
push
cmp
lret
and
adc
mov
aam
inc
jae
inc
lock
adc
inc
mov
pop
pop
ljmp
xchg
icebp
and
sbb
aam
imul
mov
jl
sbb
mov
rolb
addr16
es
adc
jbe
sub
mov
and
iret
mov
push
call
adc
sbb
mov
cmpsl
adc
and
sub
arpl
xchg
outsl
pop
hlt
pop
sbb
and
xor
adc
les
xchg
cwtl
ja
sub
xorb
std
dec
scas
push
mov
test
sti
sub
and
sar
pop
xchg
imul
cmpsl
mov
ljmp
loope
aad
jae
adc
add
pusha
sub
push
jge,pn
xor
dec
ljmp
ljmp
sbb
push
cmp
sbb
xlat
adc
insb
test
cmp
pop
ljmp
xor
jnp
gs
imulb
or
mov
adc
mov
cmpsl
nop
mov
xchg
sub
lahf
les
fisttpll
push
enter
mov
out
insb
gs
ds
cli
les
shl
sbb
add
js
test
sahf
pop
adcb
dec
and
cmp
add
ljmp
bound
cld
nop
mov
sub
dec
and
pop
out
add
movsb
pop
sub
dec
xchg
sub
jge
push
or
fisttpl
cltd
call
inc
jb
in
pop
fsub
mov
xor
jae
ljmp
cwtl
jno
add
push
mov
sub
push
dec
xor
pop
stc
pop
push
pushf
xlat
test
push
pusha
andb
mov
mov
xchg
lret
scas
adc
in
dec
sarl
push
ja
mov
aaa
int
xorl
scas
mov
in
les
or
ja
ljmp
jae
adc
jecxz
cmpsb
mov
mov
nop
outsl
sbb
and
subl
xchg
outsl
icebp
xchg
inc
mov
mov
sub
jmp
inc
cmpsl
imul
cmp
sub
xchg
leave
xchg
or
sub
and
enter
or
fisttps
adc
repnz
sub
mov
lcall
imul
xchg
or
lret
fstpl
mov
mov
dec
pushf
addb
mov
nop
jecxz
ds
jno
lock
repnz
inc
movsb
sbb
pop
icebp
insl
jo
sub
mov
cltd
sub
cmp
mov
xchg
sti
sub
pop
stc
cmp
push
insb
dec
pop
inc
mov
leave
cmp
loopne
push
xor
xchg
xor
fwait
popa
lods
stc
bswap
xchg
loope
shrl
pop
and
clc
ljmp
mov
dec
and
push
andb
gs
loopne
rcrb
mov
pop
jmp
sub
out
cltd
dec
daa
rcrb
dec
cs
in
inc
pop
rcrb
js
add
or
cld
stos
pop
fcomp
ror
xchg
std
cmp
loop
xlat
in
xor
nop
inc
xchg
test
add
mov
daa
insl
fmul
push
outsl
lea
mov
addr16
pop
pop
jge
sar
clc
es
rcrb
inc
inc
insb
adc
or
mov
and
mov
ljmp
fsubl
sbb
mov
shlb
pop
stc
sahf
sarb
rorl
fcmove
adc
fstps
mov
mov
cltd
or
ret
add
lahf
xchg
mov
sbb
sti
imul
jmp
pop
mov
shrl
ljmp
adc
sub
repz
pop
popf
fcmovu
imul
pop
aam
xchg
cmpsl
push
ljmp
adc
shlb
in
aas
fstpt
mov
imul
test
mov
pop
sbb
lea
js
sub
xchg
jbe
pop
jmp
les
loop
mov
and
or
dec
lret
sbbl
mov
jmp
add
js
sbb
movsb
pop
or
call
pop
outsb
jp
cmp
movsb
add
and
arpl
lret
jecxz
pop
outsb
jns
out
ret
cmp
sub
dec
loop
in
je
int
or
sti
or
cmc
movsl
fwait
pop
ljmp
nop
ss
es
lret
mov
jecxz
or
imul
xor
and
pop
push
mov
dec
ret
xor
xor
outsb
clc
jmp
adc
stc
cmp
dec
in
ss
ljmp
movsb
mull
push
movsl
arpl
adc
adc
pop
movsl
xchg
fstpt
and
sbb
dec
lds
push
ret
popf
pop
pop
adc
fisttps
daa
das
das
in
sahf
xor
je
jne
and
pop
test
inc
je
lods
pushf
xchg
imul
rclb
cmp
fldt
and
dec
sub
adc
mov
nop
aas
mov
add
in
je
dec
xor
dec
imul
xor
out
fdivr
test
sub
xchg
in
dec
mov
stc
inc
xor
jl
fcmovbe
ror
sbb
mov
mov
in
mov
movsl
mov
lods
mov
loop
cmp
cmp
inc
mov
mov
movsl
mov
scas
loopne,pn
mov
sub
test
hlt
fsub
int
inc
xchg
jnp
mov
fidivrl
rcrl
xor
call
gs
mov
or
test
inc
xor
stos
rcll
cld
stos
inc
pop
outsl
sub
mov
push
scas
push
sbb
sahf
cmp
mov
jp
int
test
aas
outsl
ret
xchg
out
int
inc
add
mov
xlat
xchg
mov
loopne
pop
test
mov
mov
and
icebp
fwait
sub
sbb
leave
cli
call
pushf
daa
pusha
fwait
lds
mov
iret
fadds
sbb
andl
cmp
dec
or
ljmp
cmp
add
fstps
jl
pusha
push
into
ja
jg
aam
imul
stos
xchg
loope
pop
push
lahf
movsl
rcrb
or
cltd
and
pop
ret
xchg
ret
or
fisubrl
sub
xchg
into
inc
or
mov
or
cmp
call
pusha
and
inc
mov
outsb
jmp
sbb
xor
mov
sbb
push
mov
mov
lods
ret
sti
popa
mov
mov
mov
repz
xor
es
ja
aam
fstp
sbb
add
pop
sbb
cwtl
aam
scas
dec
loope
mov
fwait
jecxz
sbb
loope
imul
jbe
lret
mov
sbb
push
push
push
mov
scas
adc
mov
outsb
out
jnp
in
add
adcl
cmpb
push
pushf
pop
les
sbb
inc
movsb
add
cmp
scas
push
in
mov
dec
inc
loop
add
cmp
and
rorb
push
dec
pop
sbb
cmp
mov
pop
ficoml
imul
shrl
cs
sub
shlb
and
les
js
roll
sarl
lds
aam
cmp
ret
push
xchg
stc
rcll
fcomp
pop
std
dec
jp
sbb
insb
lods
inc
test
pop
mov
pop
dec
cmp
scas
jo
xor
sar
incb
add
mov
push
daa
cmpsb
aam
les
pop
adc
stos
imul
jno
pop
cmpsb
push
out
pop
stc
insl
cmpsl
je
addr16
and
notb
ljmp
int3
aam
or
cmc
sbb
inc
bound
fdivp
fwait
sub
dec
lcall
imul
ss
xchg
aaa
mov
rclb
stc
xchg
jne
int
add
add
jecxz
pop
sub
in
insb
in
mov
stos
xor
sub
jb
cwtl
sbb
dec
lret
sti
mov
add
lds
aam
sahf
outsb
movsb
pushf
jne
mov
jmp
repz
sbb
dec
push
add
mov
push
sub
add
les
adc
aad
ficomps
leave
pop
push
lea
mov
das
inc
rorb
sbb
jb
subl
adc
dec
xlat
fstp
das
add
ss
stos
jge
xchg
das
push
pop
hlt
pop
jns
test
ret
mov
clc
in
jns
cmp
add
sub
pop
loop
mov
cmc
mov
pop
mov
cmpsl
aas
roll
loop
adc
cmp
jmp
movsl
mov
stos
lahf
add
fdivrl
das
cltd
sub
addl
cmp
mov
sbb
test
cmp
sub
iret
mov
or
mov
inc
mov
adc
mov
adc
loopne
jb
test
pop
or
sbb
jo
sub
jno
aad
cwtl
cld
sti
cwtl
xchg
or
aam
push
pushf
push
fwait
xchg
push
and
divb
jo
dec
ja
leave
xchg
in
sbb
sti
flds
jae
out
scas
push
cmpsl
xor
jl
clc
xor
pop
lea
and
or
int3
jne
mov
jp
jnp
mov
fnstcw
fidivrs
add
inc
insl
jecxz
bound
outsb
rcll
sbb
xor
leave
cli
mov
fiaddl
test
or
and
mov
aaa
pop
adc
stos
mov
mov
adc
sbb
sub
xchg
cmp
pop
leave
sbb
sbb
mov
out
xchg
dec
insb
lret
adc
cmpsl
lret
mov
jle
pop
dec
sbb
push
pop
fistpl
add
xchg
lahf
lcall
xor
inc
add
fldt
sub
rcll
or
push
daa
or
test
or
and
pushf
mov
lret
sarb
lea
mov
adc
in
xor
sub
mov
lret
inc
cmpsl
nop
mov
jb
fbstp
adc
aas
jecxz
out
sahf
adc
cmp
pop
cltd
cmp
in
jg
xchg
lahf
inc
jbe
xchg
lret
push
jnp
mov
imul
sbb
cmp
sbb
int
out
lcall
lods
inc
mov
jne
idiv
xchg
fisubl
enter
andl
inc
jmp
xchg
mov
insb
fdivl
lock
push
inc
mov
in
fwait
add
adc
outsl
mov
cld
int3
mov
inc
mov
pushf
jg
jae
shll
aas
inc
xorb
push
imul
push
out
out
loop
adc
inc
mov
push
shrl
xchg
and
int
rclb
aad
push
mov
adc
hlt
push
leave
orb
stos
dec
pop
rcll
insl
and
cmpsl
lret
gs
out
sti
jecxz
jmp
arpl
sub
and
lahf
mov
adc
out
les
jb
xor
lods
dec
pop
iret
stos
nop
jbe
inc
jne
sbb
fdivl
test
rorl
subb
and
xlat
arpl
mov
add
shlb
push
in
ljmp
out
sbb
jmp
adc
or
cmp
push
mov
jmp
imul
cli
dec
push
invd
dec
or
js
out
outsb
into
inc
leave
lcall
cmp
pop
xchg
pop
lock
mov
mov
out
adc
les
ficomps
movsb
jp
xchg
lea
push
pop
dec
mov
fnstsw
sub
adc
pop
sbb
shrl
sti
jne
int3
dec
movsl
cmp
sub
push
jp
nop
xchg
xor
adc
mov
sbb
jns
nop
inc
cli
mov
dec
or
cli
jle
xchg
dec
pop
in
sub
cli
ds
and
cltd
loopne
ret
shrl
loopne
insb
or
scas
adc
sbbb
inc
jle
jno
in
lahf
cmc
dec
add
pop
pop
movsb
lock
lock
repz
sbb
jl
inc
cmp
dec
sbb
xchg
push
mov
aaa
or
push
dec
negl
lock
pop
adc
add
jne
aam
fisttpll
jmp
jg
enter
out
and
movsb
mov
jne
mov
jne
mov
mov
mov
gs
iret
xchg
mov
inc
and
add
test
orl
fstl
outsl
scas
sbb
or
jno
push
xchg
lret
or
cmp
pop
jl
scas
int
push
or
js
insb
push
sub
push
mov
add
lods
imul
pop
or
sub
mov
xor
imul
jbe
cmp
and
sti
insb
aad
in
daa
stos
jg
cmp
dec
rorl
inc
inc
jne
dec
into
add
cs
add
insl
cmp
xor
test
cwtl
pop
icebp
push
in
push
jmp
cmp
leave
xchg
jbe
and
in
lret
adc
add
or
mov
jmp
scas
jb
aam
cmc
das
xor
and
sbb
adc
aaa
and
sarl
cmp
pop
pop
mov
fcoms
mov
mov
lret
xor
mov
repz
adc
xor
inc
push
xor
scas
into
aad
pop
scas
sbb
sub
or
inc
imul
and
sbb
dec
sarb
jbe
push
jecxz
cmp
jg
shr
add
cmp
pushf
inc
in
cmpsb
cmp
fnstenv
int
addr16
movsb
int
and
enter
mov
pop
cmc
mov
jnp
jge
pop
int3
leave
push
dec
dec
push
jl
rcrb
add
xor
push
daa
out
add
cmc
or
sbb
hlt
into
inc
push
cmp
push
sbb
in
xor
cmpb
leave
inc
mov
or
rolb
xchg
sbb
push
push
sub
jbe
sbb
ja
movsb
jl
xor
dec
imul
stos
lods
add
adc
adc
or
dec
pop
insl
jp
test
cltd
lahf
xchg
shrb
repz
mov
sarl
loop
jno
lret
std
sub
sbb
inc
inc
ret
mov
dec
movsl
pop
jle
mov
pop
stos
ljmp
ret
lods
jo
mov
movsb
andb
enter
xor
jecxz
and
push
movsb
imul
jg
ret
iret
fs
inc
push
mov
loopne
sub
fld
mov
sub
pop
mov
mov
lds
mov
or
add
pusha
pop
lcall
cmpsb
stos
pop
xor
mov
mov
fstpt
fwait
push
repz
add
mov
into
das
inc
js,pt
and
decl
and
sbb
push
clc
mov
clc
fs
or
dec
mov
shlb
adcl
push
lods
popf
stc
mov
mov
mov
popa
or
and
loop
out
fcmovnu
out
dec
jb
or
cmp
rcll
mov
sbb
and
shl
push
out
or
subb
xor
sqrtps
and
out
insl
add
xor
adc
neg
xor
fnsave
loop
out
daa
xor
dec
jmp
mov
inc
pop
dec
inc
scas
or
jecxz
lds
int
adc
inc
cmp
rol
in
lock
jb
adc
rcrl
popf
sarb
push
sub
xlat
mov
inc
fimull
movsl
or
jnp
jp
aam
insl
or
loop
fmuls
es
ss
push
test
pop
sbb
rcll
lods
cmp
mov
mov
adc
mov
inc
lahf
js
jae
sbb
ficoms
out
inc
adc
xor
dec
popa
mov
or
jl
test
rclb
xchg
xor
rcrl
sbb
fnstenv
mov
das
dec
mov
jle,pt
stc
pop
dec
stc
adc
and
inc
popf
es
mov
push
pcmpgtb
push
fsts
or
das
mov
xchg
cmpsb
int
jecxz
xchg
jmp
movsb
jns
notb
push
push
fcomps
int3
push
add
sbb
imul
mov
fcomps
nop
testb
cmc
dec
roll
in
pop
mov
sbb
mov
pop
sub
jb
mov
push
cmp
add
inc
mov
insl
jae
out
popa
cltd
add
ds
push
cmpl
ja
dec
jne
out
ja
rolb
inc
aas
cmpsl
adcl
jno
jle
lds
ds
mov
jle
pushf
sbb
ds
cli
sbb
jo
xchg
fiaddl
mov
pop
aad
hlt
mov
adc
rclb
cmp
adc
and
loop
or
pop
adc
jns
lock
xchg
dec
fwait
pop
sti
mov
or
push
jl
push
and
inc
lea
jo
fidivrs
xchg
jp
in
addb
ja
and
cwtl
pop
ljmp
jmp
mov
push
pop
dec
out
les
out
lock
adc
pop
mov
inc
xorl
js
or
adc
adc
dec
mov
and
addb
js
aam
mov
js
repz
pop
addl
or
dec
roll
aad
mov
or
fadds
sahf
cmc
xchg
mov
mov
and
dec
mov
movsb
mov
mov
fmul
aad
stc
insl
cmp
push
fimuls
adc
sub
or
insl
xor
daa
testb
das
sahf
sahf
jb
add
idivl
push
movsl
ljmp
shlb
push
cli
fnstenv
cmp
mov
sub
and
and
cli
repz
dec
push
mov
adc
mov
dec
leave
or
orl
sub
loopne
aas
outsl
cmpsl
adc
mov
add
cmp
std
jmp
movsb
or
push
jecxz
mov
adc
lods
jecxz
aas
pop
xor
cmpsb
sbbb
pop
sarl
aaa
mov
inc
jle
push
dec
das
jcxz
cwtl
dec
call
add
outsb
or
mov
jns
fistpll
xchg
mov
pop
dec
mov
inc
gs
lea
fisttpl
fistl
sbb
cltd
and
jl
sub
ds
jecxz
push
gs
testb
pusha
mov
xchg
inc
dec
mov
and
clc
add
pop
out
jae
js
mov
filds
mov
push
popf
ret
lret
xchg
jmp
mov
inc
xor
or
repz
add
xchg
das
aad
mov
cli
jns
mov
cmp
sbb
dec
outsl
in
xchg
inc
sti
mov
push
outsl
in
ljmp
lret
pop
loope
jle
mov
sahf
cmp
int3
mov
mov
mov
push
mov
in
mov
adc
jb
and
movsl
sbb
pop
cmp
pop
xchg
cwtl
incb
fldenv
out
popf
mov
into
daa
int3
aas
sbb
xchg
cmc
testb
mov
mov
cmp
xor
mov
dec
loop
xchg
in
test
xchg
push
or
pop
sbb
imul
iret
mov
jne
lret
mov
cmp
dec
lds
or
pop
adcb
insb
scas
dec
inc
enter
push
cwtl
outsb
addr16
stos
push
xor
rol
cli
cmp
mov
fadds
outsl
jns
push
or
call
jecxz
pusha
and
fildl
movsb
mov
lahf
pop
push
jns
xchg
andb
fdivs
jle
add
inc
fsubs
and
dec
pop
nop
jae
je
add
xor
or
fwait
sti
jle
xor
shll
cmp
and
cs
inc
out
bound
pop
jle
es
mov
jp
insl
mov
jecxz
out
sub
push
sub
lods
js
loope
mov
ja
fmull
test
popa
push
mov
mov
sarl
cmp
scas
insb
loop
jge
pop
sbb
shl
mov
das
stos
rolb
int
mov
pushf
test
aaa
subb
test
ret
sub
pop
add
push
mov
imul
shlb
fisubrl
mov
pop
sbb
pop
int
cmp
icebp
dec
xchg
out
pop
cmp
and
pop
mov
sbb
mov
push
xor
sbb
rorl
gs
jp
inc
lea
xchg
jmp
and
push
movsl
nop
pop
xor
and
or
inc
mov
loope
fcompl
sub
sbb
fwait
mov
push
add
sbb
scas
adc
sub
jns
inc
les
add
mov
sub
push
out
ds
xor
incb
movb
out
mov
pop
pusha
shr
jp
dec
or
jmp
or
push
adc
dec
or
rcrb
jo
and
mov
dec
push
into
orb
lods
and
xchg
mov
push
mov
mov
outsb
pop
adc
dec
push
imull
xor
pop
adc
xchg
faddl
pop
jmp
dec
call
ja
punpckldq
mov
push
push
pop
mov
mov
js
mov
out
and
imul
lret
mov
lds
jl
subl
push
pusha
push
mov
push
into
pushf
mov
dec
std
arpl
repz
out
and
negl
enter
es
mov
cmp
sbb
jno
push
std
movsb
push
and
mov
jg
in
cmp
push
push
push
pop
and
sarb
popa
int3
mov
test
pop
xchg
mov
clc
mov
pop
call
test
into
sub
sbb
insl
pop
test
sarb
push
add
xor
out
repnz
hlt
jnp
xlat
dec
push
xor
lret
leave
movsl
sarb
push
jmp
pop
dec
push
jno
fucomp
jg
cmp
popa
stc
lods
and
jb
outsl
fwait
pop
sub
mov
sbb
clc
mov
mov
lock
xor
pop
ds
in
mov
fwait
xchg
dec
repz
dec
mov
mov
cmpsl
add
fs
dec
push
cmpsl
jns
jbe
in
push
clc
dec
mov
test
cmp
sbb
test
cmove
stc
lahf
sub
pusha
sti
lods
and
or
out
leave
lret
cmp
sub
push
cli
jne
push
dec
cmpsl
pop
and
leave
in
lock
pop
pop
mov
mov
add
mov
and
dec
push
cltd
fdecstp
les
iret
aaa
popa
das
push
fwait
push
jns
xchg
or
call
ret
add
mov
incb
outsb
inc
je
cmp
cmp
sar
es
insl
cmpsl
daa
mov
mov
xor
test
aas
jecxz
jnp
pushf
xchg
jbe
outsb
loopne
mov
pop
pop
xor
sbb
mov
idivl
dec
aaa
dec
pop
mov
push
fldt
ret
pop
mov
pop
dec
jne
test
ljmp
fiaddl
mov
mov
stos
repz
aad
push
adc
pop
and
inc
pop
decl
popa
xchg
add
shll
sbbl
push
pop
test
sbb
out
lahf
add
les
stc
cmp
aaa
and
pxor
ficoms
jae
aad
push
aas
cmp
ss
pop
mov
add
cmp
push
pop
and
stos
notb
pop
shl
mov
xchg
fwait
sti
fnstcw
mov
adc
imul
mov
lea
push
or
es
adc
fildll
or
adc
add
xlat
or
popa
xor
mov
jne
dec
es
cwtl
mov
adc
xor
ds
fldcw
pop
inc
aas
ret
xor
in
ret
popf
andb
or
sar
ret
add
sub
dec
out
add
in
push
sbb
cmp
cltd
or
sti
sbb
sub
fmuls
lahf
andb
cmpsl
jg
adc
cmp
mov
mov
mov
imul
lock
mov
clc
test
loope
test
dec
sub
and
dec
fisubl
pop
aaa
xor
jne
fimull
sahf
inc
add
lock
insl
cmp
mov
jne
and
call
sub
shlb
inc
jnp
mov
fadds
jle
dec
mov
imul
rorb
data16
inc
popa
mov
aad
xchg
push
arpl
pop
js
aaa
xchg
hlt
lret
inc
mov
xchg
iret
sbbb
out
shl
xchg
test
push
mov
sub
pop
fsubrl
sub
jp
test
mov
pop
dec
dec
fwait
mov
ss
inc
mov
or
add
jl
lds
out
jl
push
loopne
sbb
mov
sub
iret
in
sahf
xor
fcoml
or
mov
mov
mov
loopne
stc
mov
sti
mov
jge
mov
fimull
xor
xchg
ss
pop
or
dec
and
mov
push
push
adc
push
in
nop
and
adc
stc
loopne
dec
lret
xor
adc
fcomip
push
es
add
repz
cmp
xchg
mov
pushf
push
fisubrs
sub
stc
pop
sbb
lds
pop
outsb
pop
sub
test
lret
add
aas
push
mov
sub
push
cmp
inc
cmp
mov
lea
and
push
cmc
push
push
cmp
xor
cmp
into
mov
sub
cld
popf
stc
xchg
push
push
data16
lret
mov
stos
jno
popa
bound
scas
int3
andl
test
lahf
dec
test
lds
in
jg
fisubrs
sub
fisubl
and
sar
insb
dec
push
divl
inc
add
push
add
jae
or
dec
mov
pop
xchg
incb
xchg
and
or
and
mov
fcompl
int3
xor
aaa
or
not
fidivrs
mov
mov
jp
rcll
rcl
adc
outsb
mov
push
xor
sbb
fwait
sti
mov
jmp
cmpsl
sbb
in
pop
pop
mov
sbb
cmc
jle
shlb
jecxz
aaa
lret
push
mov
cs
pop
mov
mov
or
push
dec
cmc
sarb
adc
jns
mov
sbb
in
fcompl
sub
dec
pop
add
cmp
mov
push
out
loope
je
xor
push
push
or
aad
pop
dec
notl
jo
xchg
xor
lahf
shll
lahf
push
fisubrs
pop
dec
push
or
or
lods
movsb
lock
decb
cmc
mov
sub
repz
mov
flds
das
pop
mov
add
fsubrl
sbb
jae
fisttps
dec
mov
popa
movsl
inc
add
popa
pop
ds
rcll
push
sarl
cmp
into
fbld
je
test
push
inc
sahf
and
lea
sbb
jbe
das
repnz
mov
mov
decl
scas
and
and
dec
daa
inc
gs
adc
das
inc
mov
ljmp
test
adc
mov
scas
pop
rcll
mov
dec
nop
cmpsl
adc
std
nop
loopne
xchg
pop
lahf
mov
cmp
sti
das
push
sbb
pop
sbb
lahf
xchg
push
dec
xchg
fildl
arpl
fldlg2
adc
push
mov
xchg
mov
xor
aaa
lods
mov
inc
dec
sub
ficompl
or
jmp
test
cmp
rcl
call
bound
adc
shrl
pop
or
inc
in
xchg
pop
adc
ficoml
test
loopne
xlat
andb
ror
and
sar
daa
cld
dec
jb
jle
mov
push
inc
int3
xchg
and
jns
pushf
call
sub
dec
push
std
fstpl
push
dec
fcoml
icebp
push
out
jnp
rol
inc
adc
in
out
cmp
scas
mov
or
dec
int
stos
jg
jns
sub
popf
sbb
ret
imul
mov
inc
sub
sbb
mov
cmpsl
movsl
push
out
ret
arpl
xor
in
int3
add
cmc
inc
mov
pop
lock
repnz
jl
and
mov
in
ficompl
movsl
jo
je
adc
in
adc
add
repz
sub
insb
mov
inc
cmpsb
rcrl
jne
xorb
inc
loopne
jl
mov
inc
pop
sbb
mov
sti
xchg
inc
sbb
jmp
mov
push
mov
movsb
cli
aam
jmp
adc
gs
jmp
push
aas
mov
dec
mov
js
xchg
lods
or
pop
repz
aad
or
aad
mov
inc
or
int
hlt
xchg
dec
pop
lret
loop
mov
lret
clc
xchg
into
notl
mov
mov
sti
ja
leave
sbb
ss
sbb
and
jno
orb
xor
test
jo
dec
push
mov
movsl
hlt
pop
adc
lock
sub
mov
mov
and
or
out
cmp
out
lret
pop
jecxz
test
jge
stos
lock
insb
rorl
imul
mov
mov
int3
int3
pop
clc
pop
cmp
repnz
mov
loopne
loop
shl
push
in
pop
sbb
cli
stc
adcb
popf
adc
sarb
xchg
dec
int3
fimull
dec
and
xor
mov
mov
shlb
mov
jg
cmpsb
pop
imulb
dec
or
mov
pop
push
out
call
adc
lods
jmp
push
ret
add
mov
es
test
cmpsb
jns
jns
test
lret
add
aad
xor
cltd
cmpsb
jl
xor
inc
mov
mov
jae
imul
xchg
repnz
xor
aaa
icebp
sub
mov
clc
push
push
sahf
sbb
xor
inc
mov
dec
fs
fs
out
pop
inc
inc
sbb
xlat
in
sub
xor
add
test
mov
add
lcall
jmp
cltd
fimuls
jb
cmpsb
sbb
movsl
adc
fwait
mov
addr16
sbb
in
jno
insl
sub
inc
or
adc
call
imul
insl
adcb
sub
dec
xchg
out
mov
nop
arpl
pop
or
or
outsl
aaa
mov
hlt
cmp
cmpsl
mov
stos
icebp
push
outsl
inc
addr16
popf
fildll
ret
lods
jb
pop
pop
fs
jo
fwait
mov
imul
xlat
sbb
lods
repz
stc
sbb
fiadds
sub
add
aad
sbb
xor
push
dec
repz
pop
xorl
ja
pop
sub
or
lock
jno
lea
lods
outsb
add
aam
xor
insl
add
push
jne
xchg
fsubrs
dec
mov
mov
sbb
cmp
xor
dec
fs
jnp
pusha
adc
nop
pop
cmp
xor
push
inc
pop
dec
push
jl
mulb
cltd
rorl
repz
or
xchg
xchg
mulb
mov
pushf
mov
repz
lret
jmp
lea
xchg
stos
or
mov
rclb
cltd
sahf
mov
dec
fsts
add
xor
incb
popf
push
sbb
adc
push
fstl
or
inc
clc
mov
jp
repz
sub
js
movsb
pop
cmpsl
inc
xor
arpl
mov
push
cs
xlat
pusha
sub
or
or
jo
scas
cmc
cltd
sbb
iret
jns
jp
mov
test
cmp
es
dec
cmpsb
scas
mov
outsl
leave
jo
fs
scas
and
and
pop
cmp
xlat
xchg
add
mov
faddl
stc
push
in
aas
push
je
xchg
scas
test
inc
sbb
outsb
jge
sub
push
ja
mov
mov
out
and
inc
popa
out
cmp
mov
lcall
gs
lahf
in
mov
cmpsl
jge
pop
pop
mov
adc
lcall
sbb
test
repnz
addb
xlat
sbb
xor
jecxz
or
mov
adc
fisubrl
sub
filds
sbb
pop
int3
ds
xchg
cli
subb
adc
xor
dec
daa
mov
dec
or
outsl
sub
icebp
ljmp
outsb
fildl
rcr
popa
stc
or
pop
in
add
mov
mov
push
xchg
hlt
dec
lods
pushf
mov
and
popf
cmc
pop
mov
mov
out
cmpsl
les
jg
pop
xor
not
jp
push
mov
cwtl
ss
pusha
mov
movsl
scas
int3
outsb
fst
lahf
arpl
jns
je
ss
adc
roll
bound
mulb
loopne
mov
jno
mov
dec
and
pop
adc
mov
pop
mov
sar
js
or
je
aad
mov
mov
pop
lcall
adc
subl
insb
mov
jge
cmp
fimull
xor
push
add
inc
push
mov
sbb
test
das
xlat
add
hlt
fcmove
jp
or
in
xchg
stos
xchg
cmp
test
inc
pusha
add
lods
in
stos
lea
sub
dec
add
adc
bound
fidivl
insb
sti
ret
dec
dec
sbb
jae
pop
adc
inc
xchg
and
loop
pop
mov
sarl
push
nop
fsubrl
sbb
sbb
test
in
pusha
lea
sub
mov
sbb
lret
pop
or
pushf
mov
lret
xchg
stc
sbb
cld
sbb
ret
or
xchg
jb
mov
xchg
into
call
arpl
xor
jge
jns
and
icebp
ljmp
inc
icebp
adc
xor
dec
push
dec
repz
enter
cmp
mov
je
xchg
push
mov
shl
inc
movsb
outsl
repnz
leave
or
sti
cmp
adc
stc
lret
add
mov
push
bound
xchg
loop
mov
popf
js
mov
enter
clc
mov
mov
cmp
xlat
fistl
sub
fstsw
std
mov
pop
ja
pop
inc
sub
lret
aas
ja
in
add
xor
push
cmc
push
xchg
adc
pop
js
mov
adc
lcall
icebp
push
mov
addr16
fbstp
fimull
push
pop
mov
adc
cld
loope
lret
jg
ja
push
dec
xchg
lcall
sti
pusha
cmc
mov
mov
cld
jg
ss
dec
jmp
and
vshufps
pop
ret
in
or
sub
mov
xor
mov
repnz
hlt
jecxz
jo
nop
push
subb
ss
jmp
add
mov
dec
neg
sti
mov
mov
pop
add
jp
sbb
cld
icebp
out
inc
fnstcw
mov
or
sbb
lods
xor
mov
in
lea
xchg
movsb
daa
or
cmp
lahf
sub
push
shlb
bound
sbb
push
adc
insb
out
cmp
aaa
rcrb
stc
mov
in
int
leave
arpl
sti
stos
fs
inc
inc
ds
pusha
sbb
ror
icebp
inc
xor
xchg
mov
jbe
dec
pop
add
cmp
inc
loope
lret
in
dec
and
inc
sub
or
test
mov
nop
adc
pusha
push
sbb
mov
sbb
out
xorl
lods
dec
or
mov
sbb
fmuls
outsb
or
imul
pop
sub
cmp
les
cmpsl
cmp
dec
jp
test
adc
pop
and
jg
add
out
pushf
mov
adc
cmp
add
es
or
ljmp
ret
cmp
dec
enter
out
mov
popf
aad
lea
subb
adc
nop
test
leave
inc
pop
sbb
icebp
fistpll
orl
add
int3
clc
sarl
jg
scas
roll
subb
push
adc
pusha
xor
xor
loop
xchg
leave
out
lahf
fisttpll
or
and
jl
jecxz
dec
mov
es
push
push
push
push
sbb
or
mov
ja
call
mov
mov
notl
jp
or
xlat
sahf
xor
cmpsb
push
test
repz
rcl
stc
out
movb
xchg
pop
jecxz
add
aam
dec
and
dec
adc
mov
push
call
cltd
sbb
cmp
jbe
shr
lcall
aam
xor
subl
fstps
jne
mov
pop
pop
mov
dec
and
out
fists
mov
mov
hlt
xchg
subl
or
loopne
xor
loopne
mov
jo
jb
fdivrp
xchg
icebp
or
sbb
movsl
mov
clc
xchg
add
push
inc
divb
lock
xor
dec
and
imul
mov
dec
ss
xchg
adc
iret
push
jne
aaa
cmp
nop
out
shl
inc
pop
lcall
sbb
nop
js
popa
mov
rol
lods
mov
movsb
stos
pop
std
xchg
cmp
or
adc
fildll
mov
inc
and
pop
sbb
mul
sbb
mov
fwait
enter
mov
mov
nop
aaa
iret
add
je
adc
lret
cltd
jne
pop
xor
nop
jae
in
xchg
test
mov
dec
inc
xor
pushf
push
push
push
jnp
jo
xchg
xor
lret
mov
mov
jnp
outsb
push
ret
cwtl
cmp
sub
lret
pop
mov
and
cmp
cltd
aad
arpl
dec
sub
mov
out
ffreep
adc
test
out
sbb
or
pop
push
dec
clc
mov
pxor
cmpl
sbb
jecxz
xchg
enter
rorb
mov
loop
repnz
test
or
roll
and
ret
cli
aam
aas
test
in
lret
leave
test
inc
add
decb
test
push
and
mov
jge
orl
or
inc
imull
inc
cmp
pop
fimuls
sbb
sbb
outsb
push
mov
or
mov
das
arpl
sub
lea
mov
jp
mov
jmp
push
xchg
pop
int3
dec
push
mov
daa
pop
pop
inc
rcr
les
pop
lea
roll
movsb
insb
jae,pn
in
movsl
mov
push
or
lret
dec
hlt
inc
gs
jge
sub
clc
mov
jns
mov
inc
push
inc
aad
bound
push
add
mov
jno
movsb
mov
mov
unpcklps
dec
mov
lea
or
ds
loop
stos
cltd
into
into
stos
in
mov
fstpl
dec
jmp
cmp
outsb
pop
jno
mov
inc
dec
fldt
sti
mov
push
mov
scas
hlt
outsb
outsl
outsl
pop
shll
pop
into
imul
pusha
loop
fcom
bound
cld
or
ficoml
jmp
sub
add
or
jge
xchg
jmp
push
pop
mov
sti
shl
dec
jge
gs
xchg
jno
jp
stc
mov
mov
fildl
int
imul
push
pop
pop
out
leave
mov
or
gs
fwait
adc
pcmpeqb
xchg
imul
sub
fadds
cs
mov
jecxz
xlat
bound
idivb
hlt
pushf
mov
dec
lret
stos
les
leave
ret
sahf
in
and
push
and
cmp
jae
lds
fiadds
lds
loopne
dec
lods
aaa
cmp
jp
test
push
and
jo
fistpll
cmc
fldl
lock
test
cmc
in
out
inc
mov
icebp
mov
lods
sbb
pop
in
insl
jo
cmpsl
push
test
gs
ret
std
pop
cwtl
push
insl
insl
std
gs
or
or
adc
lock
dec
repnz
pop
cmp
das
pop
jmp
inc
push
rorb
adc
dec
cmp
xchg
xor
fnsave
mov
xchg
andl
cmc
sbb
ret
popf
inc
inc
iret
imul
stos
sub
push
mov
into
jno
ss
lret
test
imul
or
lock
xchg
fnstcw
lahf
int3
les
pop
or
icebp
pop
inc
repnz
add
and
out
lret
sub
mov
mov
sub
test
sbb
out
mov
mov
push
sbb
xor
daa
fmulp
xor
sbb
inc
daa
inc
add
cmp
or
stos
shrb
push
out
push
icebp
je
insl
and
cmp
jp
mov
out
or
pop
je
xchg
cwtl
fnsave
aad
push
ret
mov
xor
les
je
mov
popa
cs
mov
inc
pop
mov
add
sub
outsl
dec
inc
neg
iret
testl
fldenv
add
rclb
sub
sbb
shrb
ss
in
dec
inc
sbb
jbe
xchg
mov
mov
dec
popa
mov
into
push
stc
nop
jle
add
pushf
call
cmpsb
mov
push
xchg
push
push
xor
or
shrl
fisttpl
add
push
leave
push
sarl
or
shlb
mov
add
repz
lods
cs
push
xor
lods
aam
mov
jnp
pop
add
sti
mov
outsb
mov
ret
pop
jae
in
fldenv
addr16
divb
repz
mov
jge
mov
fldl2t
hlt
and
stos
adc
add
pushf
pop
insl
cmp
adc
sub
lahf
cmp
cmp
mov
mov
or
jo
mov
sbb
outsl
push
or
out
test
sbb
lea
push
lcall
jg
xor
fists
inc
movsb
movsl
cmpsb
pop
sub
aaa
mov
adc
fdivs
lcall
adc
imul
dec
fwait
icebp
ds
clc
lret
cmpl
jo
aam
test
and
pop
mov
and
mov
fildll
mov
xchg
xchg
lahf
sub
mov
outsb
xor
add
or
fisubrl
jp
add
popa
lock
xor
subb
and
add
out
out
ljmp
cmp
pop
mov
mov
mov
hlt
out
lds
in
cmp
aaa
dec
movsl
mov
fcmovbe
mov
mov
mov
jg
fnsave
rcr
mov
cmp
outsb
mov
push
shll
and
ret
sub
es
lock
pop
dec
xchg
mov
call
xchg
adcl
icebp
or
lret
gs
or
inc
sar
mov
ja
jno
pop
mov
ljmp
pop
inc
push
mov
ret
bound
xchg
orl
insb
add
xchg
dec
shlb
popf
std
add
mov
lahf
mov
or
sub
push
cmpsl
stos
xor
push
fildl
mov
jnp
je
fimuls
inc
shlb
mov
cmc
and
jp
or
inc
out
pop
jno
hlt
daa
push
mov
push
shrb
push
repz
ficompl
test
lahf
notl
dec
int
scas
clc
rolb
xlat
sti
add
cmpsb
je
imul
push
adc
jl
mov
adc
test
mov
lret
xor
sub
mov
xchg
mov
outsb
push
scas
or
jg
push
and
cmpsl
push
rcrb
or
lea
sti
inc
ja
movsl
mov
jb
fnsetpm(287
sub
or
mov
xlat
ret
cmpsb
testl
cmp
dec
fstl
es
inc
mov
iret
xchg
stos
pushf
cltd
shr
sub
fidivl
pop
daa
jp
dec
jbe
add
jl
add
sub
sub
inc
and
out
gs
adc
push
mov
xchg
mov
or
push
lods
cmp
inc
inc
mov
stos
enter
movaps
fisubrs
or
push
dec
aad
mov
insl
jb
mov
test
ret
mov
mov
repnz
mov
js
push
sbb
ficoml
sbbl
cmp
stos
sarb
mov
dec
ret
aas
or
fcomip
out
inc
xor
xor
shll
cmp
iret
add
nop
mov
pop
loopne
pop
cmp
and
mov
cmp
adc
xor
push
sub
pop
jae
dec
cmp
xor
sbb
mov
jecxz
iret
push
mov
into
stos
fbstp
movntq
add
repnz
vxorps
lcall
push
out
push
add
das
aad
jge
xor
sub
push
gs
mov
xor
xor
js
fidivrs
cmp
pop
ret
sbb
bts
lods
ret
insb
xor
sub
add
pushf
cmpsl
sub
mov
aam
and
push
jo
aam
mov
ss
push
jl
dec
xchg
popa
dec
dec
je
dec
cmp
js
adc
xchg
sbb
dec
into
sub
cmp
insl
in
js
sar
xchg
push
lret
xor
leave
push
jno
sub
jno
out
mov
imul
jl
adc
inc
aam
push
mov
cs
aam
sbb
movsb
lret
ficompl
stc
add
in
rcrl
es
rol
add
jl
hlt
ljmp
repnz
shr
mov
imul
outsl
xchg
in
mov
ds
lcall
in
pusha
movsb
int3
jbe
mov
push
sbbl
mov
lcall
out
enter
push
xchg
adc
pop
pop
testb
pop
inc
fistpll
add
mov
daa
pop
sub
stos
lahf
push
inc
mov
mov
pop
lahf
sbb
dec
std
loop
push
es
mov
in
out
mov
xchg
test
and
iret
repnz
push
gs
jle
shl
movsl
jp
or
and
test
mov
lods
and
insl
popa
mov
ja
push
enter
sbb
jno
daa
sti
inc
cmp
aaa
cmp
sbb
fstl
pop
jecxz
sbb
stos
mov
dec
jp
jmp
aam
xchg
push
shrb
cltd
adc
out
ret
test
leave
push
cmp
outsb
decl
adc
insb
clc
sahf
pop
shrl
fidivrs
jb
xchg
or
jg
mov
daa
or
sbb
dec
push
add
sbb
sbb
popf
mov
dec
or
ljmp
jo
jge
clc
jmp
jmp
nop
int3
clc
out
xor
xchg
push
aaa
daa
roll
loope
xlat
mov
mov
pop
and
decl
ja
adc
dec
adc
std
mov
clc
xchg
dec
sbbb
adc
icebp
add
and
jb
loope
scas
fwait
sbb
push
popa
movsb
insl
adc
and
mov
xchg
jbe
fucom
mov
sbbl
outsl
adc
lock
xchg
mov
insl
xor
sub
ret
adc
sbb
je
push
rcrl
mov
adc
out
jo
call
sbb
ljmp
addr16
or
sbb
mov
push
sbb
sti
mov
outsb
popa
adc
xchg
pop
mov
and
mov
adc
icebp
loop
aaa
push
in
lock
loopne
imul
xchg
push
inc
in
push
adc
push
dec
stos
lret
sbb
add
testb
popa
adcb
out
addr16
divl
sub
inc
outsl
xor
sti
add
dec
dec
je
ljmp
or
dec
out
or
shlb
mov
mov
inc
roll
out
sub
sarb
leave
jne
dec
shrb
jno
and
xchg
rol
daa
mov
negb
mulb
jmp
jns
cwtl
push
jle
mov
les
sbb
cmp
cmp
xor
ds
mov
sub
mov
add
aad
insb
jo
cltd
jnp
ret
shll
mov
scas
add
ret
idiv
and
inc
sub
daa
xor
mov
movsl
subl
jle
xchg
inc
out
or
xor
pop
je
inc
arpl
push
cld
jle
std
or
nop
loopne
mov
rdtsc
push
push
aas
cvtpi2ps
add
orl
cltd
ja
lret
das
jbe
test
add
ds
push
adc
cwtl
sbb
fsubl
sub
lea
iret
aas
jecxz
pop
mov
jne
pop
repz
les
adc
inc
xor
sbb
sub
arpl
sti
cmp
xor
sub
xlat
lahf
jl
sbb
sbb
sbb
jns
lret
lods
mov
inc
rolb
or
enter
mov
mov
cld
ja
mov
sbb
ret
cmpsl
lcall
mov
data16
dec
push
ss
cwtl
pop
dec
sbb
fcompl
movsl
sbb
pusha
push
push
inc
cli
cmpsb
cli
lcall
jmp
mov
aad
into
scas
jne
mov
sub
add
hlt
cmp
ja
movsb
mov
mov
iret
or
mov
cmp
outsl
leave
inc
xchg
and
imul
test
jp
fdivl
sbb
ss
loopne
pop
int3
ss
scas
sub
sbb
mov
xchg
loopne
iret
sub
stos
je
jb
cs
pop
stc
mov
adc
mov
out
and
jb
jle
das
jne
sahf
jle
xchg
lret
push
jecxz
cmp
lret
stc
out
mov
in
add
ror
stc
aaa
js
inc
mov
dec
mov
mov
repnz
add
or
mov
cmp
and
or
or
andl
xchg
dec
je
loop
and
push
add
movsb
outsl
movsb
ss
fistpll
sti
jg
mov
push
cmpsl
ss
rcrb
clc
pop
xchg
popl
sbb
and
mov
lcall
push
sbb
roll
iret
lcall
scas
mov
gs
push
dec
hlt
sbb
mov
push
gs
adc
mov
push
pop
pop
mov
pop
imull
xchg
je
push
insb
xor
push
fnstenv
cmp
lcall
sbb
rcrb
jl
xor
pop
sub
out
out
inc
popa
cmp
mov
sbb
inc
aad
or
dec
and
or
inc
cmp
mov
rclb
adc
rcr
xchg
outsl
mov
ljmp
fidivrs
push
add
mov
loop
rcl
inc
adc
and
sub
mov
fildl
lods
out
dec
mov
lock
pop
xchg
inc
cmpsl
push
mov
and
cmp
out
arpl
rorb
int3
inc
xchg
jge
sub
and
cmpsb
cmpsb
nop
sub
lds
cs
loopne
push
sbb
push
in
push
xchg
cmp
push
mov
push
dec
sbb
cmc
pop
lods
or
ficoms
push
leave
or
mov
sbb
or
jg
push
scas
cltd
repnz
push
test
pushf
sub
mov
xlat
dec
subb
fdivr
xchg
scas
sti
and
enter
sbb
xor
ja
dec
adc
lods
mov
iret
outsb
in
nop
mov
shrl
xchg
fldenv
mov
mov
add
mov
add
enter
fnstenv
push
ficoml
sahf
cmp
jnp,pn
push
cltd
andb
cmp
mov
in
gs
lret
pushw
push
aad
inc
gs
jmp
loop
test
mov
jns
mov
icebp
imul
arpl
sub
xorl
repz
popf
sub
outsl
and
movsb
adc
cs
jp
dec
arpl
leave
adc
loope
xchg
add
jb
pop
repnz
lock
repnz
mov
push
xor
mov
ljmp
rcrl
subb
cmpb
jns
adc
lcall
add
or
rcll
cs
lahf
push
popl
cs
and
mov
add
in
xchg
fmuls
mov
or
repz
mov
clts
dec
clc
mov
aad
lods
rcr
shll
loopne
sub
ss
sbb
shlb
cmp
pop
and
test
call
adc
jnp
and
repnz
sbb
mov
add
sahf
xchg
lods
sti
jb
xor
ja
sub
fdivrs
and
int3
aad
and
adc
jg
ds
and
push
adc
clc
sub
fcmovnb
mov
mov
inc
ret
push
inc
cli
xchg
push
in
lcall
je
cmp
stc
jmp
jnp
pushf
data16
adc
or
sub
inc
xor
loope
dec
sub
dec
push
test
loop
adc
dec
inc
divl
leave
leave
out
jmp
inc
sub
pop
mov
adc
mov
inc
rcrb
aam
push
inc
cmp
add
and
sahf
js,pt
lds
in
ds
in
mov
das
mov
xor
stos
mov
fabs
iret
hlt
ret
xorl
aad
pop
fisttpl
add
dec
dec
ljmp
mov
mov
jae
cwtl
cmpsb
pop
push
fwait
aas
jg
sbb
lea
and
or
mov
inc
fistpll
movntq
dec
mov
int3
mov
int3
pop
sub
pop
mov
repz
dec
push
mov
mov
fs
cs
jae
pop
call
dec
faddl
adc
ret
push
imul
cld
fistps
int
cli
call
mov
xor
cmpsb
int
sub
sbb
nop
sar
stos
add
cwtl
lock
cmp
jle
sti
jl
in
cwtl
pop
mov
shrl
mov
lea
call
ljmp
lods
push
int
mov
aaa
cwtl
test
cmp
xchg
loope
imul
xor
and
push
push
lods
pushf
aas
xchg
pop
jl
lock
arpl
push
push
cmpsl
mov
and
dec
fldenv
testb
stc
push
sahf
push
jae
cmpsl
cmpsb
ret
imul
ljmp
cmp
sarb
cmp
out
scas
lcall
hlt
pushf
mov
push
xchg
lea
pop
dec
dec
dec
out
cs
aam
inc
or
das
cld
clc
lret
int3
inc
mov
mov
jnp
cmpsl
lds
sar
ss
sahf
mov
jo
push
or
int3
sub
popa
mov
outsb
addr16
mov
jp
jno
mov
daa
clc
pop
clc
fucom
inc
cmp
push
or
pop
jnp
int3
mov
lds
and
xchg
imul
xchg
cmpsb
push
imul
and
sbb
push
inc
movsb
fisubs
mov
mov
jbe
inc
roll
int
mov
dec
mov
addb
lea
add
inc
ret
pushf
les
les
outsl
jp
mov
rcr
push
xchg
inc
and
repnz
add
shlb
push
imul
jne
push
push
imul
adc
sub
in
cmp
mov
aad
and
fcmove
adcb
push
in
sub
sar
xchg
jmp
aas
aad
xor
cmp
add
fildl
xchg
mov
mov
jl
outsl
pop
mov
hlt
stc
xor
sbb
mov
aad
or
push
mov
in
sahf
arpl
xchg
insb
scas
test
push
scas
repz
mov
add
push
into
fiaddl
or
and
push
xchg
xchg
outsl
sub
jg
sbb
je
lods
push
add
aaa
xchg
mov
jbe
adc
test
out
cmp
push
and
mov
mov
push
mov
jg
loope
js
add
sub
jbe
and
xor
lds
mov
and
lds
nop
mov
mov
bound
inc
sbb
out
shrb
mov
aaa
pushf
cmp
or
add
add
jmp
test
enter
mov
std
das
iret
rorb
ljmp
sbb
jmp
pop
stos
stos
cs
push
dec
sbb
adc
push
mov
lea
xchg
aaa
dec
mov
outsb
xchg
push
jge
and
xlat
jecxz
pop
adc
sahf
inc
call
je
xor
out
stos
xchg
jp
es
push
in
jge
leave
das
pushf
push
outsb
nop
xchg
out
adc
fwait
or
push
out
movsl
jg
rcrb
inc
lret
adcl
popa
addr16
jle
cltd
add
mov
pushf
mov
or
jecxz
or
popa
fs
mov
fldl
les
nop
rclb
enter
jbe
scas
xchg
jge
cmpsl
jae
jbe
jo
mov
jge
jg
xor
icebp
bsf
mov
flds
dec
in
mov
rclb
into
mov
inc
lods
jp
leave
inc
mov
in
adc
std
int
movsb
sub
in
adc
push
and
pop
ja
fidivs
dec
and
call
add
lahf
out
mov
cmpsb
out
mov
cmp
xchg
stc
mov
das
ret
scas
sbb
fidivs
aad
jns
cmpsb
add
jecxz
add
in
test
and
sub
mov
push
addr16
mov
test
sarb
mov
push
es
adcb
aaa
xor
and
jmp
stos
insl
xor
adc
add
inc
and
outsb
adcb
mov
pop
pusha
mov
leave
push
es
xchg
sbb
inc
mov
sbb
push
pushf
fisttps
push
out
orb
inc
movsl
nop
fnstcw
dec
mov
std
add
mov
lea
test
pop
ud1
jne
scas
ja
jp
cmpb
pop
and
lahf
cli
stos
add
cs
lock
cmpsb
xor
divb
sub
in
ret
adc
lods
int3
popa
lock
imul
adcb
rorl
adc
sahf
out
imul
sarb
pop
and
fs
add
push
into
das
dec
xor
jmp
rol
jo
das
inc
push
iret
inc
stos
lock
popa
xchg
cmp
rclb
fdivrs
dec
leave
mov
dec
jge
or
pop
mov
cmp
rolb
aas
cmp
and
movsl
les
mov
movsb
neg
rclb
xchg
or
js
inc
dec
sub
inc
aaa
or
fistps
xchg
out
or
nop
mov
ss
inc
lods
jae
fmuls
bound
mov
lcall
sbb
cli
mov
sbb
pop
dec
add
ja
in
daa
and
sbb
lods
push
lea
dec
sub
cmpsb
push
rol
jns
dec
mov
inc
pusha
jmp
pusha
mov
imul
in
sub
stos
xchg
inc
xchg
inc
mov
lods
sbb
mov
shlb
mov
scas
test
lahf
lcall
xor
add
jae
mov
mov
mov
mov
je
idivl
ja
jae
jns
jns
mov
stos
out
sub
out
lock
mov
jp
pusha
shrb
cmp
xchg
or
add
lods
xchg
scas
sub
jnp
adc
add
sahf
and
push
cmp
les
and
xor
call
inc
lods
xor
pop
repz
sar
mov
push
xlat
xchg
sub
les
push
outsl
aam
lea
jecxz
inc
xor
loope
jmp
xchg
inc
mov
popa
mov
cli
imull
and
add
jne
add
cmp
test
jmp
mov
loopne
cwtl
jmp
xchg
dec
push
mov
sbb
xor
mov
data16
stc
sub
movsb
cmpsb
push
dec
out
lds
mov
mov
idivl
jp
jp
sbb
fpatan
xchg
cmpsb
mov
adc
sbb
and
pop
sbb
cmp
push
rolb
js
shlb
adcl
inc
and
push
pop
xchg
jg
jp
jnp
bound
sbb
inc
ljmp
or
jl
sbbb
push
pop
hlt
in
in
jle
mov
int3
mov
dec
imul
leave
add
xor
add
push
sbb
jnp
ss
dec
addr16
ret
push
cmc
stos
in
push
mov
dec
addr16
cmp
xor
dec
fimull
fcomp
mov
sub
push
into
lahf
insb
xor
les
push
aad
adc
or
jmp
mov
mov
ret
inc
mov
aad
fadds
popa
jne
jl
lods
movsb
lea
xor
or
fistps
xchg
mov
cmp
loopne
cli
push
jecxz
jo
lret
xor
dec
fs
fadds
fwait
mov
sahf
int3
push
cmp
nop
outsl
ds
cwtl
dec
test
push
xor
xchg
sub
popf
jmp
and
loop
aaa
dec
sbbl
xchg
push
push
xchg
je
or
inc
adcb
xor
das
sub
fists
pop
gs
jecxz
xorl
sti
addr16
fucom
clc
cli
jnp
sbb
cmp
cwtl
imul
dec
clc
fsts
aad
aam
das
ret
icebp
pop
icebp
xor
mov
insl
and
or
sub
data16
dec
mov
xchg
arpl
sub
in
pop
js
lds
pop
loop
adc
xchg
dec
dec
pop
std
and
jmp
daa
test
insb
mov
loop
xchg
scas
xor
inc
ret
ret
test
test
xchg
push
push
das
push
mov
in
arpl
push
mov
xchg
pushf
fiaddl
les
jmp
imul
int
and
mov
iret
mov
les
fs
pop
pop
xchg
dec
push
xor
mov
jl
inc
push
sbb
mov
inc
add
loopne
pop
scas
push
sbb
fidivl
jle
push
cmp
mov
scas
stos
cmc
mov
in
sbb
xchg
mov
cmp
stos
rorl
in
and
mov
xchg
stos
test
lods
out
or
cli
mov
cmp
fldl
sti
sub
pop
sbb
sbb
aam
pop
jnp
aam
in
inc
mov
pop
jae
pop
mov
dec
sbb
xlat
pop
or
bound
and
leave
loopne
add
mov
fs
xchg
leave
pop
andl
ja
int
sbb
movsb
das
ds
icebp
scas
jle
popa
imul
and
xchg
je
sbb
subl
or
gs
inc
add
add
jo
mov
push
iret
lods
mov
insl
xor
and
jg
stos
sub
push
movb
inc
pop
pop
test
mov
xchg
out
and
push
sbb
jle
sub
loopne
rorb
mov
mov
outsl
jmp
subl
adc
lea
aaa
mov
jo
adc
sub
clc
xchg
push
ja
mov
jmp
jmp
xor
lret
mov
and
sub
repnz
movsb
inc
pop
and
sahf
sbbl
xlat
jo
shll
nop
test
std
and
outsl
mov
cmp
sti
adc
pushf
imul
enter
pop
and
mov
mov
std
jecxz
xchg
stos
cmp
pop
imul
cmp
jmp
cli
cmpsb
stc
sub
xchg
push
xor
push
inc
jge
cld
add
inc
cs
pop
nop
out
rclb
rolb
lods
xor
scas
add
rclb
push
dec
fisttps
rclb
icebp
js
je
orb
adc
mov
inc
add
fcompl
mov
pusha
data16
mov
stos
push
std
mov
popa
sub
xor
lock
xlat
repnz
les
cwtl
jle
das
inc
outsb
je
js
mov
mov
xchg
scas
mov
out
mov
in
mov
pop
movsl
in
int
mov
filds
mov
pop
push
and
in
imul
movsb
jne
enter
cmpl
movsl
xlat
push
loop
les
int3
test
dec
subl
lds
stc
mov
pop
es
jns
mov
popf
movsb
in
fwait
jmp
popf
mov
push
orb
enter
loop
lret
lock
stc
mov
sub
repz
jmp
in
outsl
shl
aaa
cmp
andb
mov
cmp
je
xor
xchg
stos
sub
xor
stos
push
or
pop
jp
xchg
sub
lods
inc
out
out
xchg
push
std
jnp
jne
in
bound
push
xchg
mov
add
pop
addr16
jp
push
loop
test
push
and
fisubrs
repnz
dec
jmp
decb
clc
pop
push
inc
mov
cmp
adc
adc
decl
jae
je
cltd
into
cli
or
int
push
and
mov
pop
bound
jno
stos
imul
mov
jg
jo
push
jae
std
cmp
js
neg
mov
mov
or
push
loop
xchg
enter
xchg
dec
sub
add
sti
lea
lahf
push
cld
and
jmp
imul
scas
and
out
fwait
inc
clc
test
ret
xor
js
daa
imul
dec
jecxz
mov
jmp
popa
popf
lods
mov
cmp
test
jnp
sti
mov
aam
test
add
imul
dec
cmp
in
ret
rcll
cwtl
and
std
mov
scas
mov
test
jl
mov
push
loopne
sub
mov
pop
in
pop
xor
and
subl
cwtl
test
aaa
jl
or
mov
aas
movsl
aas
mov
push
xchg
mov
orb
int
mov
mov
push
xlat
mov
and
mov
outsb
lcall
adc
or
jns
divb
xchg
outsl
jl
adc
pusha
std
jnp
dec
repz
test
ss
sub
out
cmp
mov
inc
sub
cmp
ljmp
sbb
pushf
sub
pop
fwait
jnp
push
insl
sub
sub
cwtl
je
mov
ss
push
popf
lods
jnp
and
addr16
inc
adc
xchg
icebp
mov
mov
jmp
push
cwtl
stc
xchg
push
xchg
ljmp
stos
in
jge
dec
shlb
pop
xor
push
movsl
loop
jae
cmp
adc
jmp
mov
cmp
imul
int
mov
into
mov
pop
adc
xor
mov
xlat
adc
lods
adc
and
test
pop
mov
sahf
cwtl
test
outsl
sbb
stos
shr
adc
aas
nop
xchg
cmp
sub
out
dec
mov
out
add
push
xchg
jle
or
mov
lock
and
je
mov
jmp
lods
cmp
mov
adc
and
pop
daa
test
addr16
jg
or
jge
sbb
cmp
lods
clc
or
into
stc
stc
push
cmpl
xor
pop
xchg
hlt
xchg
mov
insl
in
push
mov
sbb
xor
inc
xchg
sbb
popa
jns
das
fucomp
incl
push
mov
push
and
xchg
add
pusha
insb
stc
out
loopne
sbbl
ret
out
lds
mov
aad
iret
loopne
jmp
shll
negb
xchg
inc
pop
push
test
test
hlt
pop
adc
mov
je
xchg
add
enter
lcall
pop
arpl
push
jns
scas
adc
sbb
add
adc
cmpl
and
push
dec
imul
add
jno
push
push
push
into
dec
inc
ret
dec
xor
mov
or
push
sbb
dec
ret
mov
iret
and
aas
test
bnd
sbb
cwtl
scas
xchg
fcmovnu
adc
push
push
or
push
sbb
inc
add
ret
lock
sub
movsb
push
jno
in
adc
aaa
xchg
nop
in
xchg
popa
push
xor
pop
sbb
mov
dec
xchg
rolb
fsubrs
lods
aam
and
stc
pop
xor
sbb
xchg
and
pop
roll
pop
jle
sbb
lods
pop
idivb
ds
test
arpl
gs
sub
mov
xor
mov
test
cmp
ficoml
and
xchg
cmpsl
dec
out
cltd
cwtl
icebp
dec
jl
xor
add
mov
into
stos
xor
xor
jns
out
pop
xchg
sbb
dec
sar
adc
pop
xchg
lea
and
lods
fists
mov
or
jmp
sbb
xchg
mov
dec
js
jne
jbe
stc
xchg
testb
jmp
adc
mov
xlat
scas
roll
dec
or
push
sbb
cwtl
mov
push
sti
jbe
push
insl
add
push
inc
cmpsl
and
je
ret
ror
xchg
mov
dec
cli
sbb
int
mov
fdivl
repnz
push
inc
lahf
add
adc
pop
je
add
aaa
sbb
in
adc
cmp
mov
loop
push
cltd
test
aaa
jl
icebp
fldt
jmp
dec
fs
jb
hlt
xor
ss
cmp
in
sub
inc
sbb
and
fdivrl
pop
or
add
xor
add
das
jmp
pop
and
fldcw
les
pop
push
inc
out
lret
daa
out
fwait
push
call
arpl
shr
sub
ret
add
dec
xor
xchg
dec
ja
push
pop
push
xchg
xlat
push
xor
and
inc
iret
ljmp
movsl
cli
xlat
clc
addr16
push
insb
insb
cmpsb
aaa
dec
fstl
fistpll
jbe
sub
stos
adc
lock
dec
mov
push
mov
sbb
sahf
push
add
sub
sahf
add
fwait
js
mov
inc
push
dec
inc
flds
push
sbb
rcrb
cmp
mov
js
orb
sbb
sti
push
mov
add
sub
stos
out
mov
mov
dec
test
pop
pop
cmp
cwtl
push
loop
dec
mov
xchg
idiv
sub
ss
lods
push
add
pop
pop
sub
ss
mov
lret
scas
movsl
cmp
push
cmp
adc
or
in
mov
cmpsl
stc
inc
mov
sbb
movb
out
outsb
int3
adc
leave
mov
inc
xchg
cmp
xchg
shll
mov
xchg
mov
push
lahf
push
popa
pop
push
and
js
xchg
dec
push
sarb
jmp
jecxz
mov
cmp
movsb
cmp
pushf
pop
bound
popf
idivl
aas
aaa
sub
out
out
dec
mov
jns
sar
jg
aaa
mov
lds
cli
pop
xchg
popf
pushf
popa
dec
popl
daa
xchg
adc
fistps
ret
push
rclb
jae
aam
or
ljmp
cmp
or
mov
jae
cmp
sub
lea
or
adc
push
insl
adc
int
cmc
outsl
shll
sbb
stos
dec
xchg
inc
addl
push
and
push
inc
inc
xchg
popa
xchg
pop
pop
mov
repz
or
jg
sub
int
push
shll
cmc
xor
mov
lock
push
and
mov
test
push
pop
pushf
jecxz
popf
repnz
adc
repz
cld
lds
push
stos
ja
and
insb
inc
aaa
dec
es
out
xchg
xor
or
insb
int
mov
int3
js
ljmp
xor
adc
shl
rcl
xorb
and
mov
cmp
imul
das
and
sub
leave
pop
or
mov
xor
xor
cmp
push
in
jge
push
sub
xor
and
mov
mov
cmp
inc
repnz
sbb
inc
andl
xor
out
sbbl
xlat
or
mov
shlb
call
adc
and
aam
cli
js
repnz
xor
rcr
sbb
ficoml
xor
pop
and
stos
es
in
outsb
and
arpl
stos
stos
sbb
out
filds
lods
pop
mov
pop
mov
daa
aas
mov
cmp
adc
aaa
pop
das
push
mov
jno
mov
rcl
mov
mov
jge
iret
sbb
daa
mov
ljmp
adc
fsubr
lock
cwtl
pop
xchg
xchg
push
inc
mov
lods
adc
aas
push
xchg
ret
adc
xor
scas
sti
lcall
mov
pushf
icebp
cld
lods
test
sub
jbe
adc
in
std
or
xor
push
stos
into
out
jno
sub
push
mov
jmp
fwait
js
jmp
cltd
mov
xchg
mov
dec
enter
outsl
subb
push
mov
lods
outsb
fstl
ds
into
mov
rol
mov
jmp
jge
push
jne
sub
imul
xchg
pop
dec
sbb
call
je
sub
inc
cmp
sbb
add
out
loop
dec
loope
jno
subl
jns
mov
sbb
iret
mov
push
rcll
cld
nop
xchg
cmpsl
mov
xlat
add
out
jo
or
jbe
sbb
iret
cmp
xlat
jmp
rol
jg
adc
and
test
outsb
ds
pop
popa
addr16
cli
in
lahf
cltd
imul
push
daa
ret
xlat
inc
pop
push
push
and
inc
adc
pop
xchg
cmp
fcompl
jmp
jno
loope
shll
orb
jge
fistps
in
xchg
xor
test
mov
jg
xor
inc
cld
ss
adc
test
mov
add
ds
or
add
push
popa
mov
mov
mov
push
arpl
xor
sbb
popa
push
add
lods
fs
test
movd
or
and
lcall
dec
mov
dec
add
lret
push
mov
lock
cmpsb
adc
adc
lds
pop
sub
fldenv
cmp
dec
aas
in
int
je
jmp
adc
adc
test
xor
and
mov
mov
hlt
sub
adc
sahf
js
cmpsb
adc
negb
xchg
mov
and
test
jl
hlt
sub
test
pusha
jmp
imul
mov
subb
setns
mov
stc
sub
mov
lea
fucomip
dec
fists
xchg
movsb
mov
nop
cmp
outsl
mov
cmp
lcall
cmp
mov
add
sbb
in
bound
lcall
pop
jo
hlt
adc
inc
es
movsb
daa
std
out
push
dec
stos
lcall
hlt
push
pop
sbb
fistpl
push
pop
or
and
das
pop
add
popa
push
lcall
out
cmpsb
sbb
cmpsb
clc
jge
sub
int3
insb
and
mov
mov
mov
test
xchg
fs
popa
push
sbb
sub
ds
add
arpl
dec
sub
movsb
daa
push
pop
sbb
inc
and
out
lods
movsb
aaa
daa
fisubl
inc
add
pop
adc
lods
push
xchg
dec
mov
arpl
pop
popf
push
std
cmp
or
jbe
sub
add
jae
dec
jno
or
scas
aam
pop
mov
xor
mul
cmpsl
dec
movsb
cmp
jne
mov
enter
jg
decb
xchg
sbb
pop
ja
mov
mov
bound
sbb
mov
dec
pop
jmp
icebp
cwtl
pop
mov
sbb
fidivrs
ljmp
mov
adc
adc
sbb
aad
pop
or
jne
popf
mov
sub
adc
cs
inc
and
inc
aam
jecxz
push
adc
out
iret
ja
adc
push
cmp
xor
in
sar
movsl
and
xchg
test
sahf
je
and
mov
xor
fsubrl
add
push
lods
cmp
push
arpl
mov
out
xlat
mov
sub
arpl
cmpsb
pop
mov
orb
jg
pop
shll
ss
mov
push
sbb
push
mov
jmp
push
xchg
divb
mov
and
xor
enter
xchg
popa
pop
scas
rolb
dec
jno
lea
mov
imul
adc
pop
sub
mov
cmp
jbe
loop
dec
adcl
xchg
mov
cwtl
es
subl
les
mov
mov
jg
mov
push
mov
push
rcrl
arpl
sub
aam
mov
stos
mov
jp
fistl
nop
dec
cltd
loope
push
cld
jl
js
mov
andb
test
jne
push
imul
cltd
movsl
movsl
mov
jmp
mov
or
rorl
mov
sbb
or
mov
mov
repz
clc
je
lds
pusha
pusha
mov
std
mov
arpl
mov
lea
ret
cld
mov
lock
pop
sarb
cmpsl
outsl
adc
or
dec
cwtl
jle
scas
jge
pop
cld
sahf
sbb
sarl
daa
pushf
sub
inc
nop
fcomi
pop
sbb
xchg
and
in
insl
jnp
out
cld
inc
cmpsl
add
fs
adcb
stc
mov
add
cltd
xchg
lret
sub
sub
push
xor
push
cmp
add
dec
or
int3
or
xor
sarb
mov
mov
push
jnp
mov
push
loopne
clc
dec
mov
or
or
sbb
stos
dec
loop
mov
sbb
inc
push
jecxz
call
int3
xor
xchg
push
adc
ja
xchg
divl
and
jb
shll
xchg
push
sub
js
sub
mov
or
xor
in
push
push
push
dec
pop
ds
add
sub
xchg
notb
mov
lods
int
in
aas
mov
xchg
xchg
adc
mov
mov
mov
or
adc
pop
jle
jbe
push
jmp
inc
pop
cwtl
fs
stc
cmc
sbb
adc
popa
mov
je
dec
jb
leave
imul
jmp
movsl
pusha
and
daa
xchg
mov
adc
dec
mov
int
mov
jp
pop
in
test
push
pushf
shrb
jo
push
fcoms
shrl
sub
adc
rcrl
pop
jns
inc
push
xchg
push
mov
out
jo
aad
push
das
pop
mov
push
mov
xchg
xor
push
add
inc
fsubs
mov
lock
and
cmp
mov
inc
ret
arpl
inc
jnp
idiv
movsb
mov
sub
pop
stos
inc
push
test
pop
les
push
sbb
jae
xchg
push
mov
int3
imul
mov
cmp
xor
mov
and
or
insl
in
sub
push
xchg
pop
repnz
cmc
out
or
push
inc
jecxz
out
in
cmp
into
pushf
pop
jmp
dec
cmc
daa
std
cwtl
outsb
add
push
and
sbb
sub
es
ret
push
fnstsw
jno
data16
pusha
sti
aam
xlat
dec
fcmovu
mov
mov
push
inc
dec
xor
sbb
push
ja
scas
pop
les
inc
ds
shll
out
fstpt
js
sbb
imul
jge
es
loope
test
mov
jle
mov
mov
loopne
pop
ficompl
jne
stos
rolb
sub
adc
hlt
dec
in
inc
test
inc
movsb
out
xchg
adc
outsb
repnz
imul
mov
ret
mov
aaa
js
cmc
or
dec
js
mov
sub
lea
pop
in
push
test
jae
popa
iret
in
fldt
lds
stos
sbb
push
lcall
jno
jo
adc
insl
and
fists
cmp
and
mov
push
cwtl
cmp
sbbl
xor
add
imulb
repz
fucom
punpckldq
and
je
call
or
jmp
xchg
shl
psubb
fidivrs
popa
into
pop
sub
imul
repnz
cmp
inc
dec
add
add
hlt
pop
pop
test
test
pop
rol
decl
xor
push
push
push
je
mov
decb
pop
push
stc
cmc
rol
icebp
enter
push
mov
loopne
movsl
sbb
mov
ja
push
fisubl
jbe
jl
rcrb
mov
sbb
mov
scas
out
dec
es
jae
fwait
insb
jl
or
or
push
dec
in
dec
push
or
dec
pop
int3
test
aaa
push
jo
or
cmp
lods
mov
push
jp
jb
aam
daa
out
cmc
fmuls
dec
ret
or
mul
arpl
xorl
sbb
dec
push
dec
mov
int3
jo
fst
push
push
lods
ficompl
cmpsb
mov
add
or
shll
mov
mov
add
or
filds
fcoms
cltd
push
idivb
sub
push
and
dec
outsb
es
or
lahf
xchg
cltd
arpl
cmpsb
push
push
adc
pop
push
imul
sbb
cld
lea
pushf
cmpsb
or
shl
xor
inc
push
xchg
rcrl
adc
int
leave
mov
insb
jp
pop
jns
mov
cltd
cmp
push
filds
jl
push
and
jbe
sbb
sub
adc
push
pop
outsb
add
adc
rcrl
mov
lock
inc
stc
gs
xor
push
aam
pop
lcall
ret
popa
loope
and
cmp
test
insl
int3
ss
xlat
int3
mov
in
mov
mov
inc
popa
adc
pop
pop
inc
mov
push
inc
aam
sub
cmp
mov
fisubrl
jp
loope
rcrb
mov
mov
pushf
dec
sbb
out
test
andb
sub
ljmp
push
gs
ss
cld
test
add
push
mov
call
and
imul
shlb
loopne
mov
dec
ret
jge
add
les
mov
inc
xor
fsubs
sub
inc
movsl
mov
jl
add
pop
mov
mov
jbe,pn
out
cli
or
and
out
std
test
mov
sub
test
or
in
inc
adc
cmpsb
xor
xchg
xor
push
les
xor
stc
pusha
cmp
incl
in
mov
dec
cmp
cmpsl
in
mov
stc
loope
jbe
clc
sahf
jae
sub
or
js
fimull
cmpsl
roll
and
inc
push
adc
aaa
lock
sbb
or
push
dec
cmp
cwtl
pop
lcall
adc
xchg
mov
pop
inc
lcall
add
imul
sbb
xor
lahf
aad
loope
arpl
inc
les
aas
in
insb
and
push
aam
mov
sbb
inc
jne
imul
into
sub
xchg
mov
fs
imul
mov
mov
sub
es
sub
in
push
incb
mov
jae
hlt
mov
and
mov
les
mov
popf
pop
push
cmpb
ljmp
in
xor
fistl
sub
faddl
pop
filds
rcrl
jns
stos
jg
pop
jno
mov
test
xchg
rorb
jae
pcmpgtb
mov
xlat
pusha
adc
pop
outsl
loopne
repnz
ljmp
aad
fcomps
mov
inc
vmovsd
adc
aas
in
sbb
sub
push
dec
in
jo
or
xadd
xor
popf
jne
and
cmp
xchg
loope
lret
fimuls
jge
sbb
cmp
daa
int
jno
xchg
jo
xorl
sbb
test
nop
les
gs
mov
cmp
jl
cmp
jl
cmp
mov
sub
mov
ja
sub
lret
sbbl
negb
add
lods
adc
mov
mov
fwait
inc
mov
leave
ret
mov
cmp
xchg
out
ljmp
cmpsl
in
lret
das
lret
fmull
outsb
push
jl
stos
movsb
adc
push
sbb
fimull
aaa
test
popf
jp
sar
jns
and
repz
ja
sbb
shll
adc
push
pop
jmp
jo
mov
daa
mov
xchg
sub
sahf
cmc
movsl
xor
jl
int3
xchg
loope
jne
or
add
adc
xor
jp
mov
cld
into
test
cli
xor
or
mov
les
ss
inc
inc
loopne
cli
sbbl
mov
repnz
inc
cmpsb
gs
arpl
mov
outsl
or
imul
push
popf
cwtl
add
or
lret
ljmp
arpl
mov
sub
sbb
mov
pop
or
xchg
jo
dec
lret
add
jl
xor
dec
js
pop
push
adc
or
nop
jge
dec
sahf
mov
pop
fisubl
xlat
into
lea
pusha
jno
jnp
dec
xchg
insb
mov
fwait
xchg
fs
cmpsl
mov
or
mov
push
adcb
and
scas
mov
adc
push
mov
push
jae
and
and
int3
mov
and
cli
or
neg
xorl
mov
inc
dec
and
adc
data16
xchg
mov
mov
jecxz
pushl
sbb
xchg
and
ss
data16
fisubrl
cltd
mov
pop
in
call
pop
hlt
loop
je
into
dec
mov
push
dec
pushf
push
adc
xlat
lods
mov
jbe
data16
fstpt
inc
push
sbbb
cmp
mov
or
into
pop
mov
sti
or
push
sub
je
ret
out
and
xchg
cmp
stos
push
out
push
add
cmpsb
call
and
mov
cld
and
loope
iret
das
mov
sub
push
adc
icebp
and
xor
lea
or
popf
xor
pusha
mov
jmp
cld
add
fcmovne
addr16
je
mov
enter
pop
js
pop
in
out
mul
movzbl
mov
cmp
fdivs
jge
or
push
shl
and
mov
adc
sub
test
call
lret
sbb
outsl
iret
les
imul
sbb
xchg
test
das
xor
sarb
xor
adc
sub
xchg
pusha
int
push
push
loope
xor
push
xchg
jg
aas
cmp
ds
sbb
aas
dec
push
call
xor
inc
mov
mov
loop
cmovnp
mov
add
sub
add
bound
or
adc
fsubs
pop
ds
dec
lret
pop
add
push
xor
jne
int3
mov
out
fcmovne
push
cs
out
add
mov
lds
or
dec
cmpsb
notl
outsl
cltd
outsl
push
sbb
mov
inc
mov
xchg
adc
cmp
ficomps
mov
ret
in
fwait
loopne
xchg
mov
mov
fbld
lock
inc
jne
mov
xchg
pop
ja
adc
iret
in
or
fsubl
xchg
jge
or
into
ja
push
aas
lock
mov
mov
xlat
js
adc
mov
and
lock
fildll
push
push
scas
inc
xchg
xlat
imul
stos
loopne
pushl
add
adc
xchg
push
ss
pop
mov
out
mov
int3
sub
incb
cld
lock
mov
int
dec
data16
xchg
stos
or
adc
or
xchg
stc
test
sbb
dec
aas
add
cwtl
shlb
push
xor
sub
js
je
cmp
mov
inc
sbb
inc
mov
jnp
dec
in
sub
popf
into
push
shll
pop
sub
sub
or
jg
push
mov
or
cmpsb
loopne
dec
push
pop
sub
cmp
xchg
dec
popf
push
lock
jecxz
sbb
pushf
ror
sub
aas
push
es
sbb
lock
and
xlat
xchg
mov
mov
popf
mov
mov
cmp
or
push
dec
mov
jbe
push
inc
jnp
and
xor
jno
mov
fcmove
inc
pop
and
icebp
adc
jp
xor
and
lret
movb
shlb
push
push
adc
mov
jle
das
pop
repnz
out
mov
jle
push
jb
loope
jbe
adc
pop
je
push
pop
cltd
fcmovnbe
ss
js
pop
movsb
aaa
xchg
sbb
xor
das
lock
jl
inc
cmpsl
mov
outsl
pop
sub
aas
jp
cs
or
sub
mov
xchg
inc
cmp
jb
add
add
decl
mov
sbb
push
adc
adc
xchg
jb
cmp
or
mov
mov
cld
mov
shrl
std
fsubrp
es
or
adc
push
out
or
lds
pop
adc
mov
mov
pop
jmp
stos
dec
clc
adc
andl
leave
jno
lds
jno
mov
xor
rorb
scas
in
push
cmp
adc
cltd
into
loope
mov
xor
aaa
repnz
and
push
pop
insb
lds
lahf
inc
xchg
mov
out
mov
mov
inc
fstpt
adc
jecxz
ret
mov
mov
shll
aaa
ror
jmp
out
in
ret
sahf
fimuls
sub
shlb
add
std
dec
jmp
mov
cs
repnz
popf
lahf
xchg
stc
fstpt
mov
jmp
rcrl
imul
mov
jae
shlb
xor
scas
inc
sbb
sbb
push
add
push
xlat
ss
inc
xor
adc
cmp
jo
int
or
xor
repnz
cld
cwtl
mov
lret
test
shl
pushf
jg
cs
sbb
xchg
iret
outsb
leave
xor
mov
rcrl
jne
xor
inc
mov
pop
mov
out
out
cmovne
pop
xchg
sbb
cmp
adc
jmp
ja
jbe
mov
and
mov
xchg
inc
or
jmp
mov
outsl
ja
jbe
xchg
into
lea
cmp
je
fbld
addr16
jae
and
int3
pop
dec
xor
mov
imul
cld
mov
cmp
mov
xor
fld
jbe
xchg
roll
pop
pop
rep
push
cmp
xchg
clc
jg
push
jg
push
cld
ljmp
or
pop
scas
jbe
or
adc
lahf
xor
sbb
xchg
cmp
jg
addr16
adc
ss
inc
shrl
loope
ja
xchg
lahf
push
inc
xor
xchg
pop
scas
xchg
mov
je
sub
and
jmp
mov
je
push
mov
jne
pop
pop
fstl
cli
stc
sbb
sbb
pusha
mov
imul
cld
in
pusha
xor
mov
jp
mov
push
cmpsb
push
sub
mov
mov
mov
jp
cmp
jmp
mov
mov
outsl
fwait
push
adc
mov
lock
jae
inc
stos
mov
jb
dec
xor
push
gs
xchg
mov
outsl
iret
pop
mov
cmp
sti
pop
ljmp
testb
jge
fnstsw
sub
mov
mov
mov
stos
push
sub
mov
out
jmp
sub
add
push
sub
clc
mov
adc
es
inc
cmpsl
out
or
gs
sub
mov
push
mov
xor
addr16
mov
sub
xchg
jge
les
les
dec
pop
lret
ja
mov
mov
imul
lret
push
xor
cmp
push
andl
push
mov
lcall
mov
fcmove
test
enter
dec
or
inc
repnz
adc
incl
dec
mov
jne
fwait
and
clc
jmp
mov
xchg
shr
insb
bound
or
loope
fisubl
outsl
fidivl
cmc
lret
pop
das
mov
mov
inc
cmp
cli
inc
shrl
xor
repnz
inc
xor
or
cwtl
dec
lret
shll
jmpw
scas
xor
add
mov
mov
pop
push
sarl
int
test
jmp
fmull
jp
xor
sti
and
xchg
insl
sarl
mul
sbb
mov
fisubrs
add
add
pop
shrb
jp
sti
ja
ret
cli
mov
imul
mov
add
mov
mov
pushf
inc
int
bound
or
xchg
movaps
loopne
mov
in
xchg
push
mov
mov
push
subl
mov
jo
pop
movsb
rcrl
test
mov
pop
adc
xor
push
and
enter
and
inc
fcomip
or
sbb
pop
mov
sahf
ret
or
jno
cltd
leave
sbb
push
dec
and
int3
add
pop
jo
or
sbb
mov
dec
addb
jno
and
rorb
mov
push
pushf
mov
js
cld
xchg
lcall
icebp
imul
dec
hlt
decl
add
mov
push
inc
cli
mov
mov
ja
lcall
fs
mov
add
test
and
test
push
mov
fisttpll
jle
jle
bound
cmp
out
pop
mov
fimuls
lock
popf
cmpl
xchg
arpl
pop
jno
add
push
adc
dec
or
fsub
stc
add
shlb
aas
push
push
add
loope
ss
push
nop
and
mov
or
inc
sahf
cmpsl
repnz
fcomi
arpl
jle
pop
popa
test
in
mov
jns
jnp
test
or
and
dec
shll
dec
sbb
push
xchg
or
sahf
cs
or
dec
fbstp
fs
jmp
xorl
or
jne
mov
push
pushf
pop
pop
push
stc
sbb
sahf
in
ret
pushf
push
jle
mov
mov
test
repnz
jno
add
roll
cmc
push
cmc
int
mov
jno
mov
sub
fcoms
and
mov
sar
aaa
push
addr16
mov
inc
xchg
data16
mov
ror
sub
sub
xor
cmpsl
xchg
adc
fldcw
mov
jecxz
xor
cmc
fsubrl
jbe
movsl
mov
dec
in
aam
stos
fisttpl
insl
add
add
jne
or
mov
push
movsb
jb
sbb
hlt
mov
push
orl
fwait
insl
jno
in
fs
jl
pusha
inc
gs
loope
gs
fadds
shrb
idiv
enter
mov
popf
or
pop
ret
and
mov
out
dec
push
rcrb
lock
push
daa
inc
aad
outsl
pop
xchg
hlt
jb
jae
sub
sub
es
pop
fcmovu
push
roll
mov
dec
mov
int3
imul
sub
and
pop
lret
bound
aad
mov
xor
lret
rclb
leave
sub
sbb
cmp
xchg
jle
lock
dec
aad
scas
mov
stos
aad
xchg
mov
mov
and
iret
or
gs
and
push
jne
test
xchg
inc
fsubp
jno
push
lods
dec
sbb
je
in
rorl
and
out
add
fwait
jle
dec
or
mov
ret
sub
xchg
pop
push
pushl
jbe
add
cmp
mov
cs
lret
pop
popl
fdivp
xor
add
in
cld
mov
add
sbb
pop
jnp
fisubrs
adc
pop
jo
mov
aas
push
idivl
cltd
adcb
and
dec
add
push
inc
imul
call
arpl
add
nop
dec
inc
loopne
jbe
fs
cmpsb
inc
or
sub
pop
cmp
jge
je
mov
rorl
lea
xor
or
xchg
iret
and
mov
dec
lods
lcall
out
outsl
mov
add
or
lds
pop
add
pop
jp
adc
in
push
inc
sub
lods
imul
push
sub
stc
add
jno
aam
sub
adc
jg
push
xchg
jne
xor
jmp
jne
mov
inc
int3
jne
fimuls
rcrl
cmp
sub
sbb
outsb
dec
notb
dec
stos
pushf
subl
mov
jg
or
insl
arpl
mov
inc
shll
mov
js
or
mov
add
in
sub
jge
fwait
mov
xor
sub
inc
call
loopne
push
jp
mov
movsl
cmpsl
cltd
push
outsl
test
inc
loope
mov
and
or
and
pop
pop
mov
out
dec
test
mov
dec
mov
mov
pop
jg
push
adc
and
fimull
jo
and
ds
cmp
sbbb
movb
fwait
dec
icebp
or
jmp
sub
test
mov
aaa
sub
mov
dec
jae
pop
std
out
pop
scas
negb
inc
xchg
and
xchg
test
inc
into
dec
pusha
data16
sub
ja
push
xchg
mov
mov
mov
cli
mov
add
mov
lods
jl
jbe
jno
lods
xor
cmpsl
cld
fimuls
and
dec
shr
enter
je
cmc
es
dec
loop
add
push
sub
inc
fisttpl
cwtl
lret
jne
add
outsl
sub
ret
enter
pop
jne
filds
pop
ret
mov
leave
das
roll
and
enterw
loopne
mov
sub
xor
aad
nop
jecxz
roll
xchg
shll
cmp
pop
inc
mov
pop
adc
push
call
sahf
outsl
mov
cmp
jmp
cld
adc
push
test
enter
data16
es
pushf
in
jp
fs
or
lret
or
repz
jg
push
xchg
cli
pushf
out
je
inc
mov
in
adc
adc
in
pop
ds
adc
lret
out
stos
push
sarl
add
sub
jbe
push
shlb
popa
xchg
or
sahf
mov
jmp
inc
cmp
bound
push
jbe
mov
adc
and
das
insb
push
rcrb
repz
xchg
roll
mov
inc
repnz
sub
add
fmull
xchg
mov
sbb
push
xor
repnz
aas
fwait
mov
lret
pop
sbb
rolb
ja
insl
cwtl
les
out
sub
imul
xchg
and
ja
cmpsb
push
les
xor
repz
test
xlat
stos
pop
pop
push
mov
jge
push
rcr
popa
fildl
fcoms
pusha
or
icebp
pop
aam
in
mov
mov
inc
adc
fdivrp
int
mov
js
mov
test
inc
push
adc
fs
movsl
dec
and
pushf
cltd
push
xchg
push
and
test
les
xor
push
sahf
xchg
adc
add
lock
pop
or
fistpl
sbb
add
hlt
inc
mov
movsb
lods
incl
and
pop
fcom
fcomp
fwait
fwait
lea
int
mov
enter
jge
xor
push
push
ret
popa
mov
push
sbb
lret
sub
pushf
push
outsb
decl
jo
iret
push
push
pop
les
and
sbb
es
scas
push
lsl
orb
mov
lahf
inc
sub
pop
mov
pop
jle
outsb
xor
mov
pusha
jb
aas
push
enter
xor
and
jecxz
sbb
xor
pop
jp
out
dec
dec
mov
insl
lock
or
cmpsl
and
movsb
push
mov
push
sub
xor
pop
addb
cmpsb
push
pushf
xchg
cmpsl
inc
sahf
in
cmp
xchg
inc
shrl
sti
dec
divb
ret
das
push
test
bound
out
call
mov
orb
sub
ds
sbb
mov
cmc
cmp
cmpsb
jmp
rcr
fistps
mov
sub
loopne
std
cmp
adc
fistpll
sbb
mov
mov
loop
or
jns
add
xchg
sbb
add
sti
fiaddl
lret
xchg
stos
push
call
rorb
push
ljmp
push
shrl
xchg
fwait
sub
mov
add
int
sahf
cmc
push
repz
sub
mov
push
movsb
xor
nop/reserved
mov
std
aas
cwtl
jmp
clc
loop
add
sti
cli
mov
fists
lods
ret
and
in
cmpsl
or
loope
and
repnz
int3
mov
fidivrs
subl
popa
das
sub
push
inc
mov
jle
pop
add
adc
lds
pusha
lods
fisubl
mov
adc
pop
or
dec
push
push
adc
adc
lds
mov
cmp
push
imul
daa
xchg
and
pop
lret
pop
inc
pop
rclb
lds
pop
lret
cmpl
jle
jns
sub
adc
jmp
lret
xor
ficompl
ret
add
rol
jne
aad
clc
jae
js
enter
hlt
inc
movsb
test
add
insb
jge
sbb
cmc
imul
mov
sbb
lcall
mov
xchg
loope
jnp
dec
cmp
inc
in
pop
adc
in
scas
fstpt
mov
cld
jecxz
fmuls
rolb
and
stos
icebp
dec
mov
fsubp
adc
into
fs
mov
cmp
scas
nop
mov
mov
sbb
bound
cmp
fs
dec
xor
loopne
ljmp
mov
pop
cmp
xor
sub
mov
jg
mov
sbb
pop
mov
pop
movsb
outsl
arpl
xor
pop
dec
pop
mov
jle
xchg
movsb
fsubs
mov
mov
icebp
jbe
popa
das
movsl
hlt
in
sbb
xchg
xorb
shlb
inc
stos
xor
lahf
loop
mov
sub
lret
iret
or
aas
xor
jmp
cmp
add
pop
fnstsw
add
out
fld
mov
pop
mov
mov
mov
divb
aas
inc
mov
push
iret
adc
aad
and
mov
jg
int
fs
xor
mov
imul
push
adc
mov
sbb
icebp
xchg
popa
sti
shl
arpl
flds
jns
roll
sub
stos
xor
lret
jp
pop
ss
leave
xchg
stos
jl
inc
jb
arpl
pop
shll
sbb
jmp
add
mov
lods
sarb
pusha
jno
sarl
jmp
push
int3
pusha
mov
cwtl
je
lahf
mov
loopne
push
pop
cmpsb
out
imul
add
adcl
jb
stos
and
jo
notb
adc
sub
cli
std
nop
adc
sub
ror
jle
xor
div
xchg
inc
cmp
enter
xchg
rclb
mov
test
sub
rclb
loop
std
mov
xor
pop
jge
inc
cmpsl
scas
les
pop
inc
or
fistpl
jo
jns
loop
adc
pusha
insb
aas
aam
sbbb
ret
and
je
cmp
sub
sub
in
orps
icebp
mov
cmp
cltd
shrb
inc
jae
mov
jb
ja
xchg
imul
lret
add
adc
push
pop
call
ja
pop
sahf
ljmp
ret
fs
push
pop
xchg
push
pop
jae
mov
ret
fsts
icebp
push
negb
xchg
sahf
leave
ret
sbb
iret
or
repz
vpackuswb
push
push
loope
pop
scas
cld
mov
sub
out
add
or
dec
subb
xor
loope
dec
cmp
mov
cltd
mov
xor
in
cs
fldcw
mov
shll
cld
mov
jecxz
shll
rolb
sub
adc
addr16
je
cmc
mov
push
insl
ret
push
clc
jo
sub
adc
fwait
fwait
jbe
cmc
dec
pop
mov
frstor
and
cs
xchg
push
xor
in
cs
int3
lret
outsl
jmp
dec
and
sarl
cli
mov
das
fcomps
popa
ret
sar
jl
inc
ds
loope,pn
inc
shl
lcall
loopne
repz
add
addr16
fwait
sub
or
pop
out
jb
fiadds
shl
int3
cmc
ja
sub
lcall
push
or
add
scas
hlt
clc
xchg
xor
mov
mov
or
ror
xchg
sbbl
push
pop
movsl
jp
inc
rcr
cltd
adc
mov
sub
lea
xchg
nop
adc
aad
pop
dec
xchg
sbb
nop
ret
cli
push
mov
adc
ss
and
jbe
jns
mov
pop
push
push
dec
bound
dec
aas
add
mov
and
adc
push
xor
out
pusha
mov
cld
mov
sub
repnz
jne
clc
mov
bound
loope
mov
xchg
aam
fisubrl
cli
or
sbb
loope
mov
addb
mul
jno
mov
push
into
shll
call
dec
cmp
pop
pusha
xor
dec
mov
pop
push
and
out
js
dec
sbb
fisttpl
je
in
popa
cmp
sbb
cwtl
jnp
inc
dec
inc
in
push
js
mov
push
or
sub
imul
scas
int
add
push
std
xchg
lock
test
frstor
mov
in
enter
mov
addr16
dec
scas
add
mov
test
fmuls
in
jmp
ret
clc
pop
adc
add
pop
stos
les
lea
jo
out
decl
rolb
cmp
arpl
insb
std
dec
dec
lods
add
cmc
pop
int3
or
mov
mov
cltd
pop
dec
mov
cli
in
jb
inc
cs
adc
pusha
jae
sahf
cwtl
xor
into
fiadds
jns
inc
cmp
jp
pop
push
icebp
sbb
cmp
mov
sub
pop
xchg
mov
and
test
data16
sbb
daa
in
fs
push
idiv
pushf
and
into
jae
pop
jno
cs
sub
insb
cld
cmp
js
dec
cmc
xor
jmp
or
loop
xchg
test
into
sub
dec
dec
push
pop
ljmp
mov
and
outsb
pop
jae
add
sbb
xchg
mov
add
daa
inc
test
mov
mov
inc
popa
mov
add
inc
ss
sub
loope
lcall
cmc
push
jle
lds
dec
jb
hlt
or
loope
addr16
in
xchg
pop
jecxz
pop
or
or
fiadds
pop
ret
lret
popa
int3
rcrb
loop
in
xchg
repnz
dec
mov
pop
mov
xor
data16
and
lock
insb
jp
jnp
int
jg
add
or
test
inc
or
pop
dec
dec
jbe
mov
jp
iret
pop
add
pop
inc
mov
sbb
sub
into
mov
xor
sbb
addps
mov
jle
xor
mov
cld
js
out
iret
pop
mov
xor
aad
pop
outsb
clc
jmp
into
xchg
mov
adc
ror
repz
sub
insl
aas
push
xchg
mov
lea
ret
mov
mov
mov
dec
xchg
lret
stc
scas
push
dec
mov
lahf
inc
adc
outsl
xor
js
leave
dec
pop
sbb
outsb
jp
push
lahf
jl
mov
sbb
inc
mov
pop
mov
movsb
cmp
push
lahf
jno
or
push
sbb
inc
in
push
pushf
jns
inc
xchg
scas
sti
leave
mov
push
dec
cmp
xchg
jns
push
inc
clc
sub
enter
hlt
inc
pop
sub
mov
clc
or
sbb
lahf
fisttps
mov
push
xor
shrb
mov
test
pop
iret
sti
cmp
pop
addr16
aam
fdiv
push
hlt
jno
fs
cltd
ja
cld
push
push
loopew
adcl
sbb
movq
xlat
push
in
push
cli
mov
sub
pushf
push
mov
ljmp
pop
pop
mov
mov
jle
ret
cmc
xor
sub
or
xchg
or
pop
je
imul
pop
out
popf
xor
mov
pop
rorb
sub
cli
mov
sbb
add
bound
sbb
xchg
arpl
ljmp
insl
xor
cmpsb
addr16
pop
inc
push
push
pop
cld
cmp
pop
imul
pop
movsb
and
dec
in
call
push
or
das
or
mov
xchg
inc
hlt
mov
daa
test
inc
adc
dec
adc
les
or
fisubrs
sbb
push
movsb
daa
pop
pusha
add
jbe
inc
adc
cmp
mov
push
cmp
sub
add
xorb
inc
jns
xchg
mov
inc
aam
fs
into
loopne
dec
call
adc
push
pop
xchg
scas
iret
mov
cs
xchg
xchg
inc
jp
push
add
cmp
jmp
adc
mov
pop
fisttps
xchg
js
mov
mov
or
push
cmc
sbb
js
int3
in
pop
xor
imul
sub
aas
ret
push
dec
negl
mov
fmul
outsl
xchg
std
xor
mov
fiadds
pushf
cmp
push
mov
cmpsl
in
loop
outsb
fldenv
mov
ret
mov
stos
push
fwait
add
inc
lcall
test
xchg
ror
add
loopne
mov
jg
cld
lahf
daa
ud2
call
pop
inc
lea
test
sbb
add
mov
mov
xchg
push
in
and
mov
shr
inc
or
mov
cmp
pop
movsb
push
stc
sub
jne
mov
dec
jmp
insb
fiadds
fists
lret
push
mov
xchg
mov
adc
push
inc
mov
xlat
cld
ret
mov
outsl
xchg
test
mov
sbb
aad
sbb
imulb
scas
sbb
cmp
mov
sub
cmp
loope
insb
add
or
out
xchg
xchg
fistps
xchg
ja
cmp
adc
es
mov
repz
or
xlat
mov
fcompl
je
dec
xor
call
jo
pop
fisubs
xchg
xor
or
cmp
adc
fistps
fs
xchg
jmp
mov
cmpsb
pop
icebp
mov
lds
jb
jp
adc
xor
js
leave
dec
arpl
jle
cmp
sbb
push
sub
pop
ja
xchg
xor
cmp
pusha
lret
push
loope
ss
leave
and
sbbb
js
arpl
inc
jecxz
cmpsb
pop
scas
inc
std
loopne
cmpsl
push
xchg
sbb
jne
sahf
in
xchg
loope
pop
stc
je
add
cs
enter
sbb
out
orb
out
sub
cmp
mov
inc
or
cmp
sar
fcmovnbe
dec
aaa
mov
pop
xchg
ds
lahf
pusha
into
sub
or
xchg
add
push
outsb
and
je
nop
jge
lods
push
cmp
repz
out
mov
lock
insl
mov
mov
and
fldt
mov
mov
mov
push
fwait
xchg
push
inc
pop
ficomps
repz
push
add
lock
or
jno
mov
and
popa
and
jmp
jmp
mov
sub
in
mov
jno
iret
push
or
sub
out
push
adc
int
aam
insb
jecxz
jb
popa
arpl
jl
insw
xor
lds
in
cmp
outsb
mov
jg
out
sbb
pop
iret
jle
and
add
ret
iret
xchg
popa
fstpt
push
xor
imul
int
mov
and
lret
inc
pop
xchg
jp
cli
ss
and
cmpb
rcl
xor
pop
movsb
fistl
gs
rol
and
ds
les
lods
add
sbb
int3
push
jg
jbe
sub
repz
mov
test
testl
inc
push
inc
inc
into
in
dec
and
pop
mov
repz
sbb
loopne
mov
aam
bound
aaa
les
es
jnp
repz
mov
stc
xor
inc
sarb
jnp
ror
dec
jne
inc
jecxz
adcb
push
movsb
rorl
add
ror
in
mov
imul
mov
sbb
add
lcall
mov
and
iret
fwait
std
in
dec
xor
fs
xchg
sbb
xor
sbb
jle
lret
insb
ja
and
sbb
mov
adc
dec
bound
push
add
cli
xchg
test
or
icebp
les
fistps
fadd
dec
xor
fsubrl
adc
adc
mov
ja
test
in
mov
add
sub
fsubrl
test
fstpl
scas
xlat
subl
out
ljmp
jns
jo
add
dec
aaa
mov
dec
fs
cmp
ljmp
mov
inc
cmp
jbe
lret
das
leave
pop
jb
mov
out
xor
xchg
loope
mov
xchg
outsl
push
push
sbb
sub
cli
adc
lods
jmp
jmp
xorl
mov
mov
pop
in
lds
xchg
inc
xor
sub
push
stos
push
popf
pop
jae
out
mov
insl
pop
pop
mov
pop
movsl
cmpsb
xchg
negl
rorb
lret
jno
jl
lock
pop
fisttps
inc
mov
into
pop
fwait
out
sub
adc
gs
sbb
mov
push
fimull
inc
scas
cmp
adc
scas
rcrl
adc
stos
mov
dec
push
insb
fs
fsubrs
sub
ret
and
lea
rcl
mov
pop
outsl
dec
bound
cmpsb
nop
js
mov
pop
iret
mov
add
mov
xrelease
add
into
mov
movsb
jno
push
sti
mov
inc
rclb
jge
arpl
test
add
lcall
ds
push
pop
and
aad
sbb
les
push
xor
push
cmpsl
cltd
inc
fwait
imul
aam
mov
pop
fwait
cmpsl
cltd
xorb
xor
push
pop
insb
mov
outsl
imul
idivl
dec
into
pop
xchg
mov
daa
outsl
popa
sub
idivl
push
mov
int3
or
xor
enter
insl
dec
lds
sbb
push
hlt
ja
fidivrl
dec
fstpt
mov
stc
cwtl
out
fsubrs
and
xor
test
jb
xor
call
inc
push
add
hlt
inc
mov
fistl
hlt
mov
repz
stos
xchg
sti
sub
pushf
shl
sub
int3
cltd
repz
aas
test
dec
push
xchg
mov
jmp
add
outsl
mov
sub
sbb
movsb
cltd
mov
int3
call
inc
mov
sub
dec
mov
insb
xlat
jne
ss
adc
pop
insl
or
imul
iret
sbb
ds
mov
mov
stc
fcoml
xor
and
out
lahf
notb
imulb
mov
lods
cmp
adc
test
jmp
push
jne
mov
inc
jae
aam
ficoms
jmp
lea
das
and
lea
jmp
dec
sub
daa
dec
cwtl
mov
xor
les
sbb
mov
inc
jns
xor
ljmp
mov
fildll
sarb
cmp
adcb
std
mov
popf
imul
xor
out
adcb
addr16
adc
mov
and
cmp
mov
cmp
mov
out
cltd
out
sarb
bound
xorl
add
imul
std
mov
push
xor
mov
scas
and
es
cmp
pop
adc
inc
int
imulb
sub
out
popa
idivl
js
dec
cmp
mov
js
aas
dec
jmp
stos
inc
jge
sahf
dec
mov
mov
jo
in
xor
pushf
xchg
dec
cmc
mov
add
in
adc
divb
mov
sbb
loopne
lret
sub
rcll
in
cmp
pop
dec
push
ret
lret
push
outsb
lret
add
popf
popf
jp
mov
testb
mov
cmp
mov
fnstenv
movsl
push
add
sti
es
push
xchg
out
mov
cmp
or
gs
shll
jle
xorb
addr16
push
lea
popa
and
or
mov
insl
aaa
hlt
pop
mov
xchg
scas
xchg
jge
fs
shlb
xchg
rclb
test
jae
xor
in
cli
pop
jo
stos
sbb
fadd
repnz
repnz
pop
push
mov
repnz
loope
and
call
gs
in
ljmp
inc
inc
sub
sub
js
mov
dec
rcrl
int3
mov
mov
mov
icebp
xor
jp
sub
movsl
adc
in
ficoml
scas
aas
gs
pop
adc
fcoms
imul
addb
mov
pop
xor
dec
and
inc
out
idiv
fwait
push
push
arpl
push
ficomps
mov
inc
push
jl
testb
xor
cld
xor
jno
in
fwait
sub
rclb
lcall
lret
and
orb
mov
mov
dec
insl
sti
dec
orb
adc
ds
xchg
imul
push
fistpl
repz
or
and
loopne
jns
dec
arpl
dec
and
int
push
mov
mov
insl
mov
out
popf
sbb
jp
pop
lods
adc
aad
loope
dec
loop
or
out
arpl
je
cs
jp
in
int
jo
mov
sub
pop
hlt
xchg
mov
pop
fisubs
dec
jle
leave
fistps
adc
repz
ds
mov
notl
das
lcall
shll
ja
in
sbb
mov
es
fstps
jecxz
icebp
or
cmpsl
push
mov
fnstsw
cmp
das
inc
arpl
into
dec
fs
xchg
into
cmp
push
xchg
mov
fimull
lods
push
test
iret
pcmpgtd
pushf
into
lret
cwtl
inc
jne
in
pop
scas
data16
push
adc
mov
lret
mov
call
sub
sbb
pop
and
sub
jecxz
adc
mov
negl
inc
js
xor
testl
sbb
es
xor
mov
pop
fistpll
mov
leave
jnp
inc
mov
xchg
lods
adc
sbb
das
sbb
mov
xchg
subl
mov
add
in
scas
adc
xchg
cmp
add
push
lea
jl
xchg
or
or
sub
jmp
sbb
gs
xorb
adcb
mov
xchg
push
sub
out
movlps
dec
out
mov
dec
push
fsubr
notb
jbe
xchg
and
lea
into
sarl
xlat
sbb
cmp
les
cmp
or
bound
das
jecxz
dec
mov
loopne
sub
mov
in
mov
ds
adc
mov
jns
mov
xchg
cmpsb
ss
push
mov
hlt
mov
fmul
xor
push
push
in
cmp
add
rcrb
fbld
add
cmp
mov
xchg
sbb
jae
ffree
gs
jno
push
inc
jl
push
fdivl
cmpsb
push
test
arpl
sahf
jns
cs
push
dec
lods
mov
cltd
sbb
sarl
stos
rcrb
scas
es
shrl
push
sbbl
mov
mov
cmp
xor
in
pop
dec
and
cltd
sbb
sub
stos
popf
jecxz
inc
ror
insb
xor
xchg
aaa
stos
jnp
mov
xchg
jno
and
and
push
negl
insl
mov
int3
fstpt
lds
in
sbb
push
hlt
ljmp
jg
jg
ret
test
in
arpl
lock
jae
pushf
inc
repz
add
dec
xchg
ret
xlat
jnp
insb
into
adc
rorb
push
insl
fs
push
add
push
cmp
add
or
sarl
sub
mov
test
loope
stos
or
fwait
push
cmp
test
in
test
mov
adc
cmp
inc
andl
pop
bound
xchg
cmp
adc
jns
rol
xorl
popa
lds
fcomps
mov
cmp
mov
or
fmull
add
or
push
mov
cld
mov
idiv
dec
repz
sti
js
mov
sub
ret
int
mov
shr
mov
flds
xor
inc
jecxz
jg
jnp
push
incl
pop
lods
push
dec
ss
xor
pop
xor
aaa
fwait
sub
adc
add
loop
push
lahf
repz
ret
jne
ret
push
insl
jmp
sbb
xor
hlt
nop
pop
ljmp
jbe
mov
cmp
mov
insl
jno
sub
sub
movsl
xlat
dec
fnstenv
add
test
stos
out
cltd
push
imul
aam
add
pop
pop
mov
dec
xor
aam
mov
ret
pop
or
adc
jg
xor
fdivs
test
dec
in
sahf
dec
sbb
pop
decb
dec
pop
xor
xor
cmpb
lods
xchg
ret
add
jns
dec
int
mov
jns
repnz
add
mov
mov
call
stos
or
shl
sbb
lods
cmp
push
dec
mov
pop
and
out
sbb
xchg
int
mov
out
cmc
out
xchg
lahf
dec
testb
mov
hlt
mov
xor
pop
addb
xor
and
sub
mov
adc
and
aad
movsl
cmp
sahf
fdiv
add
stos
jnp
addl
in
call
in
aaa
pop
shl
xlat
test
loop
cmpsb
insb
and
cwtl
mov
aad
pop
popf
mov
push
adc
pop
cmp
scas
mov
sahf
sub
repnz
mov
jae
imul
fstps
and
js
mov
inc
popf
xor
push
stos
lret
sub
sub
pop
inc
jb
int3
pop
adc
cmp
xchg
push
dec
data16
or
sbb
aad
adc
lret
stos
cmp
jg
push
push
nop
inc
push
or
cmpsl
cmp
lea
mov
jg
mov
push
js
jo
out
dec
pop
nop
rcrl
lret
add
mov
subl
inc
push
adc
lods
xchg
mov
inc
insl
cs
sub
hlt
dec
jl
fcmovu
gs
fidivrl
xor
add
adc
test
adc
sarl
popa
cwtl
jmp
call
fsts
stc
dec
imul
out
in
dec
and
pop
fs
fucomi
cmp
and
xchg
inc
pop
sahf
pushf
pop
jge
cmp
push
jne
jbe
ds
sub
bound
scas
sub
xchg
inc
ficompl
sbb
cmpsl
xchg
mov
fwait
imul
out
cmp
mov
fdivrp
cmpsb
jno
and
pop
sub
push
pop
shrb
dec
cltd
xchg
ja
and
adc
push
shr
stos
lcall
sbb
xchg
aaa
insb
call
add
or
xchg
push
push
cwtl
jge
ss
cmc
sub
push
xor
dec
mov
mov
jbe
mov
std
fidivrs
xchg
popf
fists
push
fwait
mov
jg
loop
xchg
xor
push
push
cmc
jg
sub
sub
xchg
in
clc
push
push
out
les
xor
and
in
test
jne
pop
add
fstps
mov
mov
and
bound
arpl
aas
fdivr
dec
aam
pop
pop
mov
add
adc
icebp
fldpi
sub
push
ret
leave
push
add
scas
jbe
test
xor
mov
pop
lcall
test
lret
and
xchg
xchg
jle
test
cmpsl
push
push
mov
push
aas
and
shl
dec
sub
stos
pop
mov
inc
cmc
or
add
mov
aas
pop
xchg
cmpsl
fwait
inc
fldcw
adc
pop
scas
mov
or
mov
mov
mov
or
fst
enter
or
enter
jl
sub
lcall
adcb
or
icebp
sub
idivl
dec
inc
das
cmpb
jp
in
sbb
xor
mov
mov
push
mov
xor
or
cmc
xor
fnstsw
sub
leave
mov
lock
daa
imul
cmpsb
mov
scas
adc
dec
jo
iret
xchg
sar
mov
repnz
push
inc
xchg
inc
mov
pop
sub
inc
and
fs
repz
sbb
out
lahf
ds
vmread
stos
inc
or
fs
ret
xchg
ror
xchg
rorb
xor
xchg
ss
and
sbb
cmp
fucomip
and
in
icebp
ja
mov
jne
dec
cs
mov
adc
fcoml
fwait
jbe
add
sbb
stos
test
adc
mov
mov
jb
ret
fmuls
adc
jl
lahf
add
adc
push
test
lcall
int3
sbb
and
xor
or
fwait
xor
adc
sub
std
out
cvtps2pi
jae
lcall
jns
ret
and
inc
add
aas
inc
fnsave
sbb
cmc
inc
and
sub
sbb
or
popa
loope
and
inc
or
cmp
inc
push
push
jecxz
dec
pop
jo
icebp
pop
xor
sub
sub
mov
rorl
xchg
mov
test
xor
push
mov
cmpsl
fs
iret
hlt
add
mov
movsb
lahf
shr
loopne
lret
outsb
cs
xchg
sbb
xor
sub
into
dec
mov
mov
mov
mov
fstps
ja
das
cwtl
ret
jae
in
out
add
repnz
pop
in
pusha
add
xlat
xchg
popa
add
xor
cmpsb
push
xor
push
push
xor
imul
mov
or
push
daa
movsl
inc
movsl
pop
insl
test
inc
leave
test
or
ret
aas
mov
std
es
xchg
testb
jp
roll
xchg
sub
mov
fmuls
mov
aas
inc
clc
sub
idiv
stc
mov
cwtl
push
loope
stos
push
push
movsb
xor
jne
jne
test
xlat
dec
inc
push
cmp
mov
pop
ljmp
scas
push
mov
and
ljmp
jge
xor
or
negb
sub
xchg
and
es
out
pop
pop
xor
daa
cli
pop
jae
push
popa
mov
nop
mov
and
or
pop
in
bound
sub
jne
mov
jnp
lock
push
cmp
popa
icebp
jnp
daa
jp
add
jmp
sub
mov
and
jmp
mov
cmc
cmp
jae
sbb
jae
sbb
push
inc
jp
jecxz
jmp
repnz
pushf
xor
subl
aad
dec
faddl
pop
divb
adc
ds
xchg
xchg
pop
and
int
pop
mov
lcall
imul
push
in
pusha
mov
and
outsl
fmull
fisttpll
rcr
daa
fisubrs
loope
add
jle
lret
mov
sub
repnz
in
xchg
test
sbb
cld
inc
xchg
mov
cli
xlat
loope
insb
sahf
xor
push
imul
mov
movsl
xchg
mov
xlat
neg
es
push
xor
test
sti
xchg
jae
xchg
out
jno
xchg
stc
mov
bt
mov
inc
or
push
or
ret
or
dec
test
lods
jo
dec
push
mov
loop
jp
dec
jle
nop
fadd
arpl
scas
lods
inc
test
call
in
push
lock
cmp
repz
jmp
pop
das
pop
cmc
pop
push
jle
fldenv
push
or
hlt
cmp
push
add
dec
adc
cmpsb
imul
data16
fistl
hlt
mov
lods
push
jbe
lret
xchg
dec
shrb
mov
mov
das
insb
aam
inc
stc
mov
cli
stos
repz
xchg
push
jge
mov
in
push
stos
sub
mov
inc
fisttpll
lock
out
test
mov
popf
sub
push
xorb
xorb
std
mov
jno
jecxz
xor
je
jecxz
dec
lds
mov
out
xchg
test
adc
popa
lcall
dec
nop
arpl
xchg
js
mov
mov
aaa
mov
scas
popa
push
xchg
sub
sti
xor
enter
jmp
ret
mov
cltd
cmpsl
xor
aam
nop
test
aad
aad
cmp
sub
jae
sbb
cmp
inc
push
ret
test
fstl
add
ljmp
shr
fwait
or
inc
push
in
pusha
inc
stos
icebp
or
xchg
fistpll
nop
push
and
bound
scas
addb
lea
add
add
and
test
dec
or
dec
je
fwait
cli
sub
es
test
sub
cmp
adc
add
adc
ret
mov
repnz
xlat
mov
dec
lcall
sti
sub
cli
rcl
push
push
in
hlt
dec
cmp
lret
fistpl
leave
dec
divl
xor
pop
pop
jne
jecxz
inc
mov
dec
and
sahf
faddl
stos
pop
in
repz
mov
push
in
ss
nop
dec
movsl
pusha
lret
jb
dec
jno
das
es
xchg
jbe
sub
xchg
jp
pushf
insb
pop
movsb
cli
in
popa
mov
test
jnp,pn
aas
push
mov
sbb
sbb
xlat
shll
push
int3
das
cld
fwait
cs
add
jnp
jns
push
mov
es
pop
arpl
and
inc
sahf
sub
outsl
fimuls
ljmp
gs
nop
mov
mov
xchg
aad
push
rorl
movsl
xor
or
jo
add
test
sbb
cltd
push
enter
aad
sbb
lds
jmp
fs
inc
test
jbe
cmpsb
enter
dec
jb
cld
mov
js
xchg
push
push
push
sub
aad
hlt
je
incl
push
pop
lcall
adc
mov
or
add
adc
in
push
daa
lea
aas
aad
repz
adc
adc
fists
push
jle
jl
rcll
cmp
dec
call
sub
sub
std
and
inc
aaa
sbb
sbb
hlt
repz
inc
stos
mov
or
subl
jbe
ret
pop
push
adc
dec
mov
jmp
arpl
sub
or
jecxz
lret
shrb
je
je
push
scas
dec
jg
cmpsb
sbb
lock
sub
mov
pop
sbb
lea
fcoms
pop
testb
xor
cmp
adc
ds
and
les
ds
adc
xchg
jl
adc
xor
push
xchg
pop
addr16
mov
dec
jnp,pt
ficomps
push
daa
add
pop
and
add
push
sahf
mov
into
les
out
test
cmp
movl
jb
std
mov
dec
xchg
jmp
stos
out
rcl
xchg
clc
dec
mov
pop
mov
aas
mov
cmpsb
test
daa
jg
lea
and
in
push
hlt
dec
fcomps
mov
addb
mov
sarl
pushf
cmp
adc
rorl
ficoml
pop
cmp
push
frstor
pushf
jmp
out
xchg
and
sub
jae
shl
sub
shlb
mov
jmp
pop
jbe
int3
aam
fistpl
in
int3
fldt
inc
push
adc
pusha
inc
fldcw
pop
xchg
repnz
cmp
xchg
inc
mov
and
xor
dec
daa
fldcw
int
leave
push
mov
movsl
les
pushf
adc
sub
push
jae
jno
lds
and
repnz
mov
fmuls
iret
mov
ficoml
ds
sub
inc
ja
mov
mov
and
out
lods
pop
pop
pop
test
sub
jnp
imul
pop
jecxz
inc
popa
mov
jge
mov
inc
or
int
add
jp
jge
xor
jmp
sub
mov
imul
gs
sbb
jge
arpl
fadd
ror
fwait
dec
call
inc
stos
cmp
fnstenv
arpl
inc
leave
addr16
jecxz
test
mov
mov
push
xchg
idivb
or
or
push
lods
or
mov
outsl
push
jecxz,pn
mov
jnp
mov
push
int
cld
repz
lods
jne
add
in
pop
sub
xor
jno
dec
scas
notl
hlt
test
inc
push
loop
scas
sub
dec
mov
movsb
ja
lahf
push
xchg
mov
aad
cmp
xlat
out
loope
dec
ret
pop
xchg
mov
pop
enter
insl
rol
inc
pop
push
hlt
mov
adc
sbb
jb
pop
xchg
rcr
inc
cmp
xchg
out
dec
cmc
in
ret
fdiv
push
pop
dec
inc
xor
and
mov
push
jns
mov
sbb
mov
and
adc
mov
jecxz
sti
aad
pop
divb
in
out
in
shr
enter
push
sub
add
lods
and
fucomi
mov
ret
mov
push
pop
insl
imul
popa
cmp
ljmp
push
out
jl
repnz
jmp
jbe
mov
popa
xchg
rcll
cmp
out
mov
lcall
fldenv
out
cmp
scas
xchg
das
jl
call
or
add
xchg
xchg
cli
sti
mov
or
sbb
lods
mov
or
je
rorb
push
dec
js
cmpsl
sbb
pop
rorl
lret
pop
lds
jmp
jo
jmp
mov
fdivp
pop
inc
das
bound
jns
cwtl
inc
xlat
xor
lea
popa
cmp
mov
push
lock
and
mov
fsub
imul
jbe
movsb
xchg
fiaddl
out
jmp
xchg
addr16
sbb
dec
adc
rorl
frstor
inc
loopne
dec
pop
mov
jmp
push
lods
and
dec
shl
repz
decl
inc
nop
and
push
in
dec
mov
clc
aaa
movsb
push
cmp
int3
cli
cmp
rol
nop
dec
add
ljmp
jmp
lea
push
inc
pop
pop
addr16
pop
mov
movsl
mov
imulb
es
rdmsr
out
stos
cwtl
mov
cli
dec
jecxz
leave
sub
push
insb
push
pop
test
cmp
pop
lods
dec
ss
or
jae
sahf
fcomi
jns
jl
pop
or
cmp
and
pop
cmpsl
fs
data16
sub
in
add
inc
add
push
sbb
cltd
sub
outsl
push
ret
sbb
dec
rol
mov
xchg
dec
or
fldl
or
lods
bound
and
daa
mov
pusha
and
mov
jl
push
inc
scas
xlat
lcall
push
aaa
faddl
sbb
inc
or
mov
dec
dec
out
push
in
test
iret
xor
mov
cld
in
push
daa
ds
xchg
sti
aad
call
cmp
ret
addr16
jp
push
imul
xchg
jo
into
jmp
push
mov
sbb
inc
das
mov
push
test
jmp
dec
test
fsubl
testl
imul
cmp
jno
push
jo
adc
cmc
jne
mul
test
test
in
dec
pop
mov
js
jmp
mov
sbbl
xchg
mov
fidivs
sbb
scas
lahf
mov
pop
dec
iret
push
add
incb
sub
loop
call
outsb
cmp
or
sbb
mov
jg
imul
dec
lret
maxps
loope
aas
stos
jecxz
mov
in
push
aam
fidivl
popf
fidivrl
imull
stc
xor
sahf
dec
daa
add
fcmovb
xchg
stc
push
clc
inc
cmpsb
add
out
pop
xor
sbb
dec
push
mov
insl
mov
adc
jecxz
aad
cld
loope
or
pop
push
rorb
cltd
lods
cltd
jo
lahf
lods
mov
je
call
scas
mov
repz
es
push
cmp
ds
fcompl
xor
jmp
mov
xor
sbb
sbb
fimull
adcl
sbb
fs
xchg
jg
scas
int3
scas
dec
outsl
mov
dec
call
stos
xchg
gs
movsl
cmp
dec
pop
mov
je
movsl
iret
ret
lcall
mov
xchg
mov
ds
negb
push
mov
dec
push
stc
mov
js
cmp
nop
cmpsb
xchg
mov
add
xchg
jg
cmp
push
aaa
inc
cltd
or
push
hlt
in
xchg
xchg
or
in
daa
lock
mov
imul
jne
clc
test
push
subl
push
bound
arpl
mov
iret
bound
add
lea
arpl
mov
cld
mov
mov
sub
mov
pop
push
or
xchg
xor
dec
mov
add
mov
lea
lret
jo
je
ds
push
or
jae
test
add
and
pop
sub
add
mov
mov
testl
sti
pushf
fidivs
or
andl
jae
loope
iret
ret
xchg
cltd
and
xchg
push
aas
std
add
dec
jmp
add
cmp
rolb
ss
add
xchg
push
inc
imull
pop
lahf
sub
leave
mov
enter
pushf
xchg
dec
adc
xchg
dec
cmp
je
stos
xlat
int
arpl
loop
lret
jge
stos
idiv
xchg
add
adc
dec
and
cmc
adc
lock
aas
push
inc
jo
mov
jae
lcall
dec
test
inc
dec
in
pop
adc
xchg
pop
idivb
xchg
sbb
scas
add
gs
fs
sub
stc
movsb
aas
mov
xor
lcall
push
mov
mov
ret
mov
loopne
loopne
push
mov
fbstp
daa
rcr
mov
int3
stc
enter
mov
jp
mov
xor
popf
rclb
enter
in
lret
push
pop
dec
fisttps
int3
nop
or
mov
jae
inc
subb
pop
mov
out
cltd
inc
sub
leave
out
wrmsr
dec
xchg
mov
cmpsl
adc
xor
add
xchg
leave
xor
pop
test
int
mov
adc
mov
repnz
push
jnp
add
cld
dec
dec
test
fcompl
mov
or
pop
cmp
pop
mov
int
inc
addb
jns
das
xor
cmp
cli
sbb
adc
inc
adc
repnz
xlat
lea
or
fwait
mov
and
and
rdmsr
push
jb
cmp
mov
pop
lea
or
push
dec
jb
js
add
adc
push
hlt
lds
andb
mov
or
jle
fldt
ret
mov
mov
mov
mov
enter
mov
sti
and
stc
xchg
cmp
cmp
outsl
add
mov
in
sbb
cld
fbld
mov
pop
fidivs
mov
cmc
sub
popf
sbb
scas
cwtl
ss
dec
rcll
imul
xchg
mov
and
ss
adc
mov
add
xor
enter
fsubl
adc
mov
cs
or
out
jno
add
sti
aaa
jmp
popa
mov
cltd
add
push
loopne
iret
movsl
ljmp
dec
or
xchg
mov
push
shll
mov
or
rcrl
in
mov
xor
mov
and
xchg
sbb
add
icebp
scas
cmp
sub
lock
push
cmp
out
rol
mov
testb
xorb
insb
pop
xchg
and
push
jae
cmp
jge
rcrb
xor
rol
add
add
adc
mov
dec
cmp
shrb
cmc
out
add
pop
push
stos
enter
pop
daa
add
sub
add
lret
inc
dec
dec
ret
aam
mov
imul
or
popa
inc
jg
andl
mov
jg
inc
outsl
adc
mov
out
mov
addb
sbb
hlt
and
cltd
sub
pand
or
xchg
punpcklbw
xor
arpl
push
mov
cmp
nop
pusha
and
pop
pop
and
sub
jae
loop
dec
mov
mov
gs
sbb
cwtl
subb
fiaddl
gs
pop
mov
pop
popa
ljmp
loope
dec
pop
ret
pushf
mov
insb
mov
pop
mov
div
add
lahf
outsl
stos
cmp
and
add
rcrb
dec
sbb
mov
int3
cmpsb
sub
dec
and
ljmp
in
ret
stc
icebp
outsl
out
pusha
mov
and
inc
arpl
jne
or
fsubs
scas
or
int
sar
stos
sbb
cli
das
cmovae
idivl
jbe
loope
ja
movsb
lcall
dec
rorl
inc
sub
cmpsl
add
das
jnp
test
popf
mov
mov
stos
rolb
xor
lods
outsb
pop
in
pop
in
xchg
clc
jns
pushf
and
lea
stos
xlat
nop
sub
mov
add
orb
mov
popa
add
mov
or
mov
jge
ljmp
insb
scas
out
jge
mov
frstor
pop
add
mov
es
jmp
mov
mov
shr
sub
insl
test
mov
int3
push
xlat
icebp
sarb
dec
jo
mov
push
nop
mov
daa
mov
ret
push
stos
sub
test
push
cmp
inc
push
ficompl
into
mov
mov
dec
inc
rcr
mov
dec
cmpsb
pop
push
sbb
cmpl
imul
out
jno
in
pop
outsb
add
test
dec
fwait
mov
pop
jl
push
pop
pusha
mov
or
pop
adc
dec
sbb
xor
or
adc
aas
dec
stos
stos
lock
pop
mov
sub
or
fcoms
xchg
orl
or
lock
popf
and
pusha
add
jecxz
inc
in
dec
mov
ds
mov
xchg
and
sbb
cmp
sbb
push
adc
loopne
jbe
add
push
sahf
lea
push
iret
iret
arpl
gs
mov
stc
insb
ret
adc
das
lods
mov
mov
aas
xor
push
mov
addl
rorb
adc
dec
stc
cld
fucom
iret
out
ja
call
xor
and
outsb
push
xor
cmpsl
in
dec
aaa
inc
pop
dec
es
lock
xchg
fsub
push
sub
inc
movsl
adc
add
cmp
mov
decl
mov
pop
xor
mov
shll
or
pop
enter
push
push
or
sub
inc
push
jbe
jp
push
and
scas
add
xchg
mov
bound
jo
adc
fsubl
loope
int
xor
jne
call
outsl
jmp
mov
std
lahf
bound
out
sahf
out
dec
and
add
cld
aam
pop
lock
je
popa
jecxz
faddp
cltd
mov
lds
pop
inc
mov
dec
add
sbb
aad
pop
mov
jae
testl
sbb
shll
ja
test
add
jnp
or
fists
stc
and
les
jl
xor
mov
add
cwtl
ret
fildll
jbe
and
or
shrl
pop
cmp
jl
push
out
loop
xchg
test
jge
xlat
mov
and
cwtl
popf
das
stos
ror
stc
pop
jl
adc
sbb
xchg
mov
dec
fistpll
repnz
nop
icebp
jl
mov
sbb
mov
movsl
ss
imul
ds
bound
xchg
or
or
mov
in
in
test
dec
xchg
xchg
sbb
xchg
mov
fdivrs
je
xchg
fiaddl
push
mov
lret
pop
test
pop
outsl
inc
mov
stos
push
lahf
repz
test
repnz
clc
mov
xor
dec
lret
mov
addr16
xchg
jge
cmpsl
dec
cmp
stos
insb
adc
bound
int3
cld
sbb
add
mov
mov
scas
mov
dec
mov
push
rcl
adcl
popf
ret
xchg
push
je
dec
popa
mov
jo
jb
mov
pop
scas
cli
dec
adcl
push
xlat
xchg
cltd
sub
and
mov
and
push
jbe
push
es
int3
in
leave
pop
sub
rol
push
or
adc
sub
dec
xchg
mov
push
adc
mov
cs
inc
xchg
pop
pop
add
sbb
loopne
lods
mov
xor
adc
inc
inc
clc
mov
fdiv
xor
shll
cmp
rclb
das
sub
ja
fldl
mov
cmp
into
fs
and
adc
fistpll
repz
mov
push
push
movsb
xchg
mov
daa
out
push
popa
lock
xor
lock
push
adc
mov
pop
cmp
sub
xchg
adc
int3
out
push
add
mov
pop
inc
sub
cmp
mov
cmc
add
lds
negl
lret
mov
jge
xor
mov
mov
lea
in
sbb
cmp
std
outsl
sub
mov
add
rcr
aas
cmc
push
push
xchg
mov
dec
pop
xor
jmp
xchg
sub
cs
ss
and
leave
aaa
loope
clc
outsb
mov
and
push
ja
insl
sbb
jb
outsl
fcmovbe
shrb
icebp
test
mov
mov
or
cli
daa
pop
stc
loope
push
outsb
stos
dec
xchg
sub
jge
and
fiadds
ljmp
stc
ja
add
xchg
enter
nop
add
mov
neg
stc
dec
xchg
pop
lret
xchg
mov
sbb
rcrb
mov
sub
loope
sub
icebp
popa
test
dec
inc
sub
cmpsl
mov
outsb
jmp
outsl
jns
push
adc
inc
and
cmc
inc
ljmp
les
mov
cmp
push
jmp
repz
repz
fwait
dec
jg
fbstp
std
addr16
lretw
sub
callw
sbb
pop
adc
imul
lahf
out
cwtl
jg
inc
mov
cmp
mov
jmp
cmp
pop
cmc
mov
test
frstor
xorb
mov
adcb
lahf
shl
test
sbb
mov
mov
xchg
in
add
cmp
pop
add
insb
cmp
pop
jge
sbb
lcall
aam
and
and
adc
insb
and
ljmp
mov
or
pop
sub
stos
sub
adc
fst
mov
pushf
test
xlat
movsb
shl
test
aad
mov
and
in
je
out
mov
mov
and
push
sarb
lret
add
push
jns
push
xchg
pop
cli
test
out
mov
cmc
into
nop
ret
add
push
lret
lret
clc
aad
ljmp
mov
orb
jp
sub
push
push
ficoml
mov
xor
push
int3
pusha
mov
cli
cs
jecxz
rcrl
aad
je
enter
fs
sbb
cltd
out
add
and
xchg
pop
and
pop
cmc
aaa
adc
cwtl
sub
push
dec
daa
adc
fisubs
mov
scas
gs
jnp
xchg
xchg
dec
je
adc
pop
imul
jmp
mov
xlat
imul
mov
mov
fstpt
arpl
mov
mov
xor
cwtl
or
push
movsb
in
jmp
dec
push
outsb
fdivrs
pushf
xor
xor
jb
fbld
push
std
adc
shlb
test
xchg
imull
xor
pop
dec
or
mov
xlat
dec
pusha
test
pop
jnp
lods
outsl
add
mov
and
shll
xchg
cmp
insl
lods
xchg
dec
or
mov
subl
bound
and
push
fs
or
push
or
xchg
pop
mov
mov
xor
test
add
idivl
mov
adc
arpl
and
shll
insl
es
shll
inc
sbb
imulb
andb
push
test
jp
jmp
dec
lahf
in
fistpl
or
cs
adc
push
scas
and
test
adc
jecxz
roll
mov
fsubrl
mov
test
cmpsl
subb
lods
jle
pop
sbb
push
ja
les
push
mov
add
pusha
sbb
push
push
mov
jns
jmp
adc
and
push
andb
jb
mov
pop
das
jb
movsb
pop
in
cmpsl
fsubrl
xchg
dec
adc
mov
stos
mov
add
cwtl
sahf
cmpsb
lods
test
or
sarb
aad
ljmp
stos
in
out
jnp
repz
lahf
adc
je
out
adcl
in
fs
cmpsb
rol
xorl
in
popl
cmp
stos
xchg
fsubrl
aaa
sub
jae
jns
dec
leave
int
add
mov
push
dec
cli
xor
push
jp
sub
movsb
sbb
jg
mov
outsb
insl
sub
jg
cmpb
daa
push
pop
mov
mov
pop
fiadds
and
push
movb
rcr
jmp
daa
rcrl
fiaddl
sti
pop
dec
sub
js
ficoml
jno
aad
inc
sub
es
mov
pop
sbb
lods
push
xorb
cmp
ret
movsb
sub
or
or
in
vmwrite
push
push
cmpl
xor
paddq
fs
es
xchg
push
shl
mov
cmc
rorb
jno
adc
fcompl
and
mov
adcl
cmp
test
push
push
sbb
dec
lret
mov
aas
inc
mov
xor
xor
push
test
mov
fdivrl
fsubp
rorl
cmp
mov
push
in
pop
popa
scas
aam
jo
mov
js
fdivrl
xchg
xchg
js
dec
pop
int3
dec
test
in
mov
or
dec
fisttps
mov
push
rol
or
adc
inc
cmp
mov
and
mov
mov
jbe
mov
mov
mov
pop
into
mov
add
sbb
pop
out
jle
cmp
cmp
sbb
mov
fisttpll
jle
pop
bound
int3
stos
insl
jge
xchg
or
cwtl
mov
inc
and
sbb
rorl
stos
pop
call
add
test
lret
popa
jle
outsl
xor
xor
adc
and
push
pop
lret
out
negl
lahf
fdivl
jbe
out
aas
cwtl
mov
stc
xchg
xor
push
pop
out
xchg
aam
jne
nop
inc
hlt
out
jecxz
les
xchg
jecxz
iret
xchg
ret
movsb
or
mov
out
inc
sub
stc
mov
dec
jecxz
repz
pop
jno
movsb
out
mov
xchg
adc
jge
mov
xchg
mov
xor
jmp
imul
adc
aas
repz
push
adc
shrl
xor
mov
mov
jnp
es
push
push
jo
add
scas
mov
jno
dec
lods
js
stc
mov
mov
mov
cmp
inc
iret
aaa
push
fdivs
sub
fxch
sbbl
inc
adc
pop
out
inc
icebp
shrl
xchg
cmp
xchg
mov
sub
push
push
test
stos
jmp
mov
sub
cmpsb
nop
sarb
lods
adc
push
pushf
fnstsw
sbb
sbb
ret
data16
stos
inc
in
in
push
mov
fisubl
mov
add
movsl
xchg
popf
pop
and
dec
mov
mov
pop
sbbl
sti
xchg
ljmp
mov
dec
sub
jns
sub
repz
arpl
inc
cmp
pusha
insb
push
clc
imul
inc
bound
sub
ret
cmc
les
mov
pusha
sbb
cmc
out
or
lods
cmp
push
repz
pop
jg
out
inc
leave
out
xor
out
pop
sbb
jno
bound
mov
inc
ds
inc
pusha
adc
add
outsb
inc
testb
cwtl
lret
mov
and
xlat
xlat
out
shll
and
adc
jbe
push
pushf
pop
jae
mov
jmp
or
daa
in
mov
js
pop
pop
xor
jb
mov
adcb
cwtl
daa
mov
insl
call
arpl
push
inc
pop
lahf
insl
push
xlat
dec
test
mov
fmulp
aaa
rcrl
push
mov
sub
dec
aas
clc
pop
enter
cmc
add
sbb
loope
jns
pop
fdivrs
fdiv
int
lcall
add
adc
aam
xchg
add
pop
pop
imul
push
mov
pop
xlat
fdivl
fsubl
xorb
push
xor
push
ljmp
or
lock
in
mov
fwait
sbb
cmp
cli
insl
push
xchg
push
subl
push
arpl
mov
and
movsb
jno
in
test
outsl
jns
adc
cmp
sub
sbb
mov
test
gs
xor
aam
push
push
push
bound
arpl
sub
scas
xor
insb
arpl
adcb
ret
fs
mov
test
push
inc
xor
mov
cmp
imul
inc
mov
xor
in
jb
push
in
aad
sarb
or
jnp
dec
adc
ds
and
sbbb
fadds
test
in
testb
outsb
sub
adc
push
jae
lds
pop
int
es
cmp
aas
pop
hlt
imul
add
or
inc
flds
pop
lret
subl
popf
test
mov
scas
sarl
fiaddl
mov
icebp
in
cld
in
lods
aam
imul
out
or
stos
dec
push
js
lahf
stos
shl
popa
ja
es
jbe
xlat
lahf
cmp
outsb
daa
popf
or
inc
cmp
jp
jbe
pop
sbb
xchg
out
out
dec
leave
repz
xlat
sti
and
mov
adc
xchg
sar
dec
inc
fstpt
dec
sub
or
in
mov
out
push
jmp
sahf
or
fistps
dec
subb
or
stc
cltd
jnp
jbe
dec
rorb
mov
pop
inc
sub
fwait
push
pop
pop
out
mov
jecxz
aas
dec
cmc
or
incl
jle
repz
adc
cmp
lock
cbtw
xchg
cmpsl
sti
mov
imul
inc
imul
sub
pop
fdivrl
stc
fs
mov
push
and
loope
pop
subl
add
std
pop
push
inc
icebp
xor
fistl
insb
dec
mov
jno
xor
fisttpl
insl
dec
shll
xchg
mov
add
xchg
add
xchg
or
add
add
or
je
js
pop
orl
mov
pusha
mov
push
and
popf
cmp
cwtl
sub
lahf
orb
pop
dec
pop
or
adc
adc
adc
inc
or
xchg
adc
lock
mov
jecxz
lret
mov
sbb
jl
fstp
add
sbb
push
mov
cltd
hlt
mov
lret
dec
jl
mov
lea
dec
jne
fdivl
ja
pusha
push
in
cli
mov
divl
mov
inc
adc
add
mov
mov
add
or
arpl
and
or
movsl
in
sub
mov
ja
push
lret
pusha
mov
mov
jb
push
mov
icebp
lods
mov
mov
sbb
cs
mov
cmp
popf
sahf
and
mov
lock
mov
add
loope
or
adc
out
jp
es
jae
jp
adc
mov
adc
pop
bound
lahf
fldcw
sbb
pop
adc
lods
shll
mov
dec
imul
mov
sbb
lds
out
adc
mov
pop
test
mov
mov
add
test
and
scas
jnp,pn
stc
xor
xor
mov
sub
push
mov
je
popf
mov
mov
movsl
subl
xor
xchg
movsb
push
aad
cmp
bound
push
jne
popa
cld
fdivrs
sub
adc
and
push
cmpsb
or
pop
insb
add
loopne
xor
xchg
js
loope
divl
dec
sbb
in
mov
mov
inc
xor
ja
pop
cmc
pop
test
sub
das
add
push
and
pop
adc
insb
xchg
stos
and
push
cmc
mov
adc
cmp
das
dec
xchg
mov
mov
mov
jl
inc
xchg
adc
imul
jns
cmpsb
pop
scas
add
mov
mov
inc
lods
dec
mov
adc
out
xor
std
pop
mov
jns
fnstenv
cmc
push
aas
inc
es
and
addr16
ss
dec
adc
aam
jecxz
push
enter
aad
push
jp
pop
mov
jmp
xchg
or
or
loope
pop
inc
or
cwtl
dec
dec
add
push
mov
push
bound
xchg
scas
dec
cmp
jnp
mov
jg
je
jmp
mov
mov
mov
hlt
int
mov
cmp
jno
push
je
sbb
add
add
push
or
xchg
loopne
arpl
daa
jg,pt
mov
std
enter
iret
jge
mov
xchg
mov
jle
jo
ret
movsl
test
push
lret
std
inc
mov
lcall
adc
cmp
ds
jae
cmp
lahf
adc
iret
push
cld
insl
mov
lret
pop
movsl
adc
cs
or
mov
mov
leave
data16
mov
fldcw
imul
jno
outsl
enter
push
add
inc
xchg
dec
jp
add
cmc
xor
and
test
jo
cmpsb
adc
push
mov
je
ret
adc
pop
imul
iret
lcall
mov
gs
xchg
out
jl
pop
es
push
dec
adc
les
arpl
inc
sar
gs
sub
pop
imul
bound
jno
js
inc
mov
xor
sti
xchg
inc
adc
test
mov
inc
cmpsb
mov
fmuls
enter
jl
jne
pop
mov
mov
nop
lods
add
pushl
in
in
fsubp
push
sbb
pop
mov
mov
jns
test
add
nop
repnz
or
pop
dec
shll
pop
push
inc
cmpsl
cmp
jb
repnz
jns
sub
mov
test
lahf
cmc
xor
mov
inc
in
ret
and
sbb
sub
xor
push
out
mov
mul
jne
push
mov
outsl
and
in
push
push
lret
pop
xchg
insb
jge
test
ss
adc
loope
arpl
test
aas
inc
mov
pause
clc
sti
xchg
and
aas
in
and
adc
lods
fnstcw
push
inc
pop
mov
add
adc
xchg
sub
add
adc
lcall
fdivrs
push
das
fwait
pop
leave
in
sbbb
or
jnp
push
dec
sub
xor
dec
daa
add
sti
das
insb
pop
data16
jno
mov
scas
pop
daa
jmp
outsb
jo
in
jb
adc
nop
push
leave
xchg
data16
lcall
jl
shlb
mov
mov
mov
std
test
mov
adc
outsb
es
push
pop
int3
hlt
rolb
hlt
fs
jp
lock
add
sub
lea
enter
push
adc
xchg
arpl
movsb
bnd
push
sub
pop
mov
sahf
adc
and
push
mov
repz
cmp
fnstenv
hlt
fadd
inc
loope
mov
mov
push
xor
and
pop
cmpl
adc
dec
mov
test
std
mov
mov
sarl
inc
xchg
push
imulb
xor
cmpsl
pop
out
dec
rcrb
xor
add
movsl
pop
nop
cwtl
mov
lret
mov
daa
mov
jno
xchg
mov
sbb
daa
xlat
inc
vshufps
or
ss
cmp
sub
push
adc
add
aaa
xchg
xchg
pop
sbb
sbb
dec
ljmp
fidivl
mov
pop
iret
fcomp
cmp
mov
xor
in
inc
inc
dec
jo
mov
fcmovne
push
mov
pushf
mov
sub
mov
into
push
mov
dec
xchg
imul
test
aaa
adc
mov
outsl
push
stos
arpl
mov
aas
shlb
ds
mov
out
test
sbb
fisubrl
pop
addr16
fadds
fmulp
pop
sub
lods
and
inc
aam
and
adc
mov
and
xchg
push
repz
cld
enter
popf
nop
or
inc
push
adc
dec
fcoml
ret
or
push
sahf
insb
mov
es
shlb
pusha
andb
loop
out
imul
add
pop
push
mov
push
mov
mov
aam
add
fucom
pop
pop
lock
gs
stc
outsb
fcomp
inc
sub
jb
decb
mov
mov
push
jae
jl
sahf
xchg
mov
xchg
push
jnp
outsl
das
jne
sub
into
dec
roll
jecxz
adcb
jo
sbb
push
jb
and
into
enter
inc
add
sub
leave
mov
xchg
adc
mov
adc
hlt
out
stos
and
xor
lock
xlat
add
test
sub
sbb
lret
pop
jae
push
add
fsubs
mov
stos
loopne
sub
cltd
es
add
push
aas
in
js
xor
pushf
or
insb
in
push
jmp
push
mov
mov
cmc
push
les
sbb
xchg
mov
inc
and
sub
rcl
loope
test
sbb
rcrl
lods
shl
push
push
fmuls
sti
xlat
out
cli
mov
je
xchg
movsb
and
scas
call
rcrb
popa
xchg
add
loopne
inc
adc
mov
mov
push
cmpsl
dec
cmc
les
xor
rcrb
je
jle
mov
testl
cli
out
das
mov
push
sbb
xchg
int3
sbb
fstps
adc
jbe
fcmovnb
in
or
mov
loop
cmpsb
push
loop
or
flds
outsb
out
xchg
or
cmpsl
lret
imul
push
int
xchg
shrl
enter
inc
or
inc
pop
lret
cld
dec
notb
hlt
push
movsl
xchg
nop
fnstenv
push
shll
xchg
aam
mov
add
test
jae
pop
mov
adc
imul
inc
lds
out
cmp
dec
push
cmp
xor
aas
push
jle
push
and
jg
mov
sub
sbb
sub
into
push
dec
or
call
not
jmp
sbb
adc
or
dec
mov
adc
ret
lea
mov
inc
mov
lock
push
inc
mov
cmp
push
mov
xor
stc
lea
in
ret
cmp
adc
dec
nop
or
jns
int
lahf
mov
out
dec
inc
mov
push
popl
inc
out
lock
nop
jmp
inc
jg
push
testb
cmp
push
daa
cwtl
dec
jle
mov
adc
ss
inc
cmp
jb
push
clc
inc
mov
out
dec
xlat
add
rclb
fmulp
clc
push
dec
inc
and
mov
push
inc
xchg
cmp
ja
pop
movsl
lds
cmpb
xlat
sbbl
out
mov
jo
push
dec
sbb
sbb
inc
and
sbb
cmp
fdivrs
cltd
pusha
mov
icebp
rcll
inc
push
hlt
adc
jecxz
pop
leave
and
out
mov
sub
add
mov
and
xchg
mov
in
neg
mov
les
aad
adc
push
repnz
mov
push
stos
fdivrl
mov
pushf
icebp
std
cld
scas
inc
cmp
cmp
inc
shrl
jl
test
add
dec
pop
push
xor
xor
jo
stc
insl
mov
xchg
loopne
push
mov
push
sub
mov
mov
mov
add
dec
xor
inc
pop
xchg
dec
fiaddl
out
cmp
dec
outsl
bnd
mov
adc
test
jmp
lret
rcrb
arpl
xchg
in
xchg
shrb
arpl
dec
sub
xchg
or
stc
fs
nop
vrsqrtss
insb
pop
push
clc
inc
push
mov
pop
test
in
pop
mov
mov
adc
pop
cwtl
jns
jbe
mov
pop
nop/reserved
sbb
or
into
sbb
mov
rclb
mulb
sub
mov
stos
adc
je
cld
scas
pop
sub
seta
inc
ret
in
jae
xor
inc
movsl
inc
xor
out
enter
and
icebp
dec
js
rcll
jp
and
into
mov
dec
rol
sbb
or
es
push
sahf
lret
pop
add
jle
or
nop
push
sub
mov
in
mov
adc
xor
mov
add
dec
lea
push
mov
jp
dec
inc
adc
inc
int3
ja
cld
shrb
sbb
and
out
push
dec
in
sbb
lcallw
ret
test
xor
data16
inc
addr16
pop
and
or
and
psubusb
cltd
fcoms
mov
movsl
mov
jg
jne
inc
dec
xchg
rolb
hlt
jo
int3
arpl
push
mov
cld
inc
jg
clc
pop
dec
fwait
popf
repz
stos
les
mov
stc
inc
lret
sub
dec
loop
mov
and
xor
insb
sub
mov
stc
xor
mov
sub
jp
xchg
dec
cmp
xchg
push
xchg
sbb
lea
pushw
fnstcw
outsl
xor
inc
cmpsb
xchg
mov
jecxz
fisttpl
cmp
lock
aas
xor
add
fidivs
lods
fcompl
xchg
sarb
scas
sti
sahf
out
mov
repnz
lock
cltd
out
sub
mov
jl
xor
mov
test
pop
repz
hlt
jp
xor
imul
test
pop
mov
js
mov
mov
jns
and
jnp
mov
aam
xchg
cmp
jne
cmp
xchg
ja
cmpsb
dec
les
mov
xor
jecxz
push
mov
xor
adc
push
out
orl
add
imul
pop
pop
aas
imul
stos
pushf
inc
inc
push
xchg
mov
push
dec
shlb
pop
mov
xchg
repz
int
outsl
pop
pop
arpl
pop
loop
jno
mov
dec
lock
pop
mov
cli
fsub
cmp
pop
push
sbb
adc
xchg
lods
roll
push
add
xor
addr16
or
in
sbb
pop
outsb
fs
sub
jl
sahf
pop
cmp
movb
mov
out
ret
aam
and
rcll
or
xor
dec
mov
dec
clc
jno
loopne
in
sbb
dec
sbb
sbb
daa
movsl
mov
adc
dec
mov
jge
mov
es
fsubl
xor
sbb
js
mov
xor
in
fcomi
xchg
call
loope
xor
dec
into
pusha
jle
dec
add
mov
push
jecxz
es
aaa
xchg
or
cmp
adcb
inc
or
stos
and
cmp
sbb
imul
bound
popf
cmp
shlb
pop
push
test
inc
jmp
in
cmpsl
cwtl
push
xor
push
out
pusha
xchg
cmp
lds
in
xchg
cmpsb
in
test
push
lret
or
cmp
sbb
movsl
repz
dec
sbb
sbbl
les
mov
cli
hlt
int3
sub
cmp
in
test
mov
mov
sub
xchg
out
out
jl
cs
popa
ja
mov
and
xor
mov
dec
jb
sub
mov
jnp
cmp
mull
dec
cli
push
mov
fdiv
mov
outsb
lret
outsb
out
adc
xor
fsubr
push
ficomps
mov
inc
jb
pop
mov
lcall
fwait
or
push
fcompl
mov
scas
xchg
mov
add
rcrl
mov
mov
lods
xchg
cmc
cli
jbe
bound
in
lds
cmp
mov
cmp
cmp
imul
xor
jge
cmp
pop
adcl
in
idivl
jno
push
cltd
push
imul
dec
out
push
dec
mov
loop
pop
sbb
ret
mov
rcl
mov
sar
fistpll
xchg
loop
rcrl
jge
rol
repz
dec
cli
adc
int3
test
cmpb
mov
mov
int3
mov
mov
enter
adc
jle
or
xchg
stc
dec
push
pop
movsl
mov
cmp
je
in
and
into
xchg
sbb
xchg
scas
sti
sub
jge
test
sub
xor
mov
divl
setb
ret
test
stos
jno
bound
outsb
pop
mov
mov
sti
call
cmp
sub
mov
pusha
es
orl
add
loop
out
int
test
jbe
cltd
mov
xor
pop
pop
andb
movsl
insl
xchg
dec
mov
push
cltd
hlt
mov
subl
ret
xchg
and
add
xorl
ficoml
cmp
outsb
or
mov
shlb
jns
and
movsl
loopne
and
popa
push
jecxz
jnp
out
jae
jns
ret
loopne
xchg
dec
fldenv
inc
pop
mov
int3
cltd
outsb
fnstenv
push
mov
leave
xor
xor
inc
mov
test
cmc
or
jns
data16
pop
pop
cmc
cmp
ss
mov
pop
cltd
movsl
push
inc
int
xchg
pop
iret
pop
pop
cld
inc
pop
mov
dec
xor
int3
adc
mov
pusha
mov
aam
jl
xchg
xchg
or
mov
lock
sub
mov
and
mov
daa
dec
lret
cli
test
xlat
add
test
push
mov
push
xchg
cmp
divl
pop
pop
xchg
ret
addr16
pop
add
stos
pushf
xlat
adc
mov
iret
jecxz
inc
cmc
clc
loop
iret
mov
sub
decb
sub
clc
or
out
mov
mov
int
in
dec
push
mov
pusha
dec
xlat
xor
jae
sti
imul
xchg
rep
outsl
rol
xchg
mov
lods
or
ja
in
cld
or
dec
mov
imul
int3
jo
lcall
cltd
jmp
dec
pop
mov
and
xorl
inc
rclb
push
es
mov
lds
mov
hlt
adc
jo
push
popa
jne
xchg
fsubl
popa
pop
daa
scas
pop
pop
pop
ret
sbb
adc
dec
rorl
xchg
xor
xlat
add
and
jecxz
mov
xlat
je
loop
mov
loopne
lret
add
and
xchg
cmpsb
es
out
cmp
pusha
ds
add
loope
jle
fcompl
inc
dec
push
inc
jno
add
pusha
lock
xchg
sbbb
test
pusha
pusha
pop
fs
sbb
sbb
fwait
adc
je
loope
leave
int
rclb
inc
ds
loopne
adc
xchg
xchg
mov
sbb
out
repnz
mov
xlat
push
shlb
push
inc
rcll
movsl
hlt
aad
add
test
outsl
loope
in
ja
jp
aas
lret
cmp
fisubs
mov
dec
pop
sbb
inc
xchg
cmpsb
shlb
in
test
enter
xchg
cmp
testl
imul
addr16
mov
inc
push
insl
and
jo
xchg
cwtl
mov
popa
rcl
lcall
add
xor
scas
lret
lret
fs
imul
in
enter
in
adc
xchg
jmp
mov
push
adc
and
fwait
jne
push
push
shl
push
push
rolb
out
cmp
and
mov
and
jmp
test
and
mov
pop
mov
sub
push
in
std
adc
jo
or
add
and
stos
xchg
ljmp
sbb
das
xor
mov
outsb
adc
outsb
dec
pop
sbb
int3
cld
daa
in
subb
sbb
jecxz
pop
dec
popa
xor
ret
inc
push
sub
mov
movsb
push
ss
mov
int
loopne
pop
dec
pusha
sti
mov
lods
jne
jnp
dec
sbb
and
add
lcall
sbb
push
cmp
sub
mov
sbb
or
adc
and
adc
pop
lock
sbb
popa
sub
jae
and
mov
lahf
sub
mov
mov
iret
xor
jg
jb
out
ja
int3
jae,pn
mul
sbb
sub
ror
jp
jmp
and
es
inc
pop
test
xchg
imul
cmp
cld
adc
pop
and
add
out
imulb
loope
pop
neg
sub
mov
dec
sub
shll
mov
sub
pop
lods
push
pop
pop
cmc
sbb
mov
std
sbb
movb
xchg
cmp
int3
xor
xor
jb
sub
push
addb
pop
add
fsubl
xor
repnz
add
stc
ret
stos
mov
dec
push
sar
mov
jl
pushw
in
popf
xlat
gs
xor
xchg
sub
and
scas
xchg
pop
add
jb
jg
xor
imul
mov
fwait
or
dec
mov
jecxz
xor
testb
jl
mov
jns
or
xchg
push
ljmp
pop
adc
loop
push
xchg
stos
stos
jno
dec
pushf
loop
mov
fsubrs
xor
scas
xchg
sub
inc
repnz
mov
rcll
aam
inc
lahf
cld
inc
test
xor
dec
jl
jecxz
leave
pop
popa
hlt
sub
repnz
into
pop
out
loope
xor
aas
mov
outsb
popf
jo
lret
loopne
sub
cld
out
fwait
das
shl
arpl
and
xchg
rcrb
cld
leave
ljmp
int3
fsubrs
pusha
jb
shrb
xor
and
jae
mov
mov
into
mov
jle
push
adc
mov
scas
sub
add
mov
imul
repz
aaa
and
add
repz
sbb
sub
subl
repz
mov
xchg
adc
and
pop
sbb
sbb
mov
scas
adc
mov
movsb
and
mov
ja
sbb
add
pushf
push
push
mov
mov
sti
adc
cs
and
xchg
shlb
imul
pop
jno
test
es
in
icebp
push
cmpsb
aas
mov
cmc
insl
and
add
mov
sbb
leave
add
mov
add
and
push
sbb
insl
lods
icebp
aas
sbb
pop
push
std
lcall
into
jecxz
out
and
sub
or
sub
push
lock
shlb
mov
gs
mov
xor
repz
repz
insb
dec
mov
jno
xchg
xor
test
sub
loope
hlt
pop
into
pop
das
sbb
inc
mov
sbb
sub
das
pop
outsl
inc
shll
ret
in
inc
fdivrp
int3
in
jmp
and
jecxz
stos
mov
push
in
roll
mov
lods
addl
daa
aam
ret
cmc
dec
scas
jb
push
inc
fwait
pop
pusha
push
and
mov
enter
aad
pop
xlat
jl
ffreep
call
stc
pop
decl
or
mov
fwait
mov
loopne
data16
cmp
xorl
aad
push
xchg
lods
cwtl
aam
mov
jle
pop
xchg
scas
loopne
or
sbb
mov
icebp
out
pop
je
jbe
adc
sarb
ret
mov
push
jg
mov
std
xchg
sbb
shlb
mov
movsl
cli
lret
or
push
jbe
mov
adc
ret
xor
mov
std
inc
mov
ja
aam
shl
mov
mov
stos
stos
and
adc
leave
or
nop
sub
adc
sbb
ja
out
mov
mov
xchg
mov
xchg
xor
pop
call
mov
dec
sub
xchg
mov
xlat
mov
cmpsl
popf
jg
mov
add
loopne
push
dec
lahf
in
jae,pt
cmpsl
ja
sbb
int3
dec
int
test
sbb
int
subb
sbbl
push
divl
fsubrl
pop
dec
xchg
out
cmpsl
test
arpl
jb
xchg
iret
dec
mov
adc
in
pop
icebp
cmp
xchg
or
clc
test
cs
ret
rclb
ds
icebp
popf
push
sbbb
iret
add
mov
xchg
sti
cmp
test
jns
mov
imul
mov
jnp
pop
adc
cmp
add
jne
in
or
jp
mov
xor
daa
int3
adc
jns
insb
nop
pop
sbb
dec
into
in
adc
cmp
roll
rorl
xchg
mov
sub
jl
les
inc
xlat
stos
adc
cmp
xchg
das
insb
mov
adc
add
mov
xor
pop
pop
lret
inc
mov
fs
shlb
push
or
pop
pop
pop
lret
mov
lds
pop
lods
test
push
mov
and
or
push
mov
cmp
pop
sbb
push
movsb
dec
dec
pop
jns
enter
mov
jbe
cmp
and
mov
out
adc
xchg
arpl
out
cmc
sarl
or
sbb
mov
xor
cmp
xchg
arpl
hlt
loope
ljmp
fistl
sub
or
mov
mov
mov
inc
in
sbb
repz
rep
adc
cmova
mov
repz
pop
fxch
adc
push
sub
je
xchg
fmul
pop
aam
addr16
fsts
sbb
mov
jae
scas
insl
pop
jmp
sbb
lret
inc
lods
mov
dec
leave
cmp
mov
loop
mov
test
and
jp
mov
cwtl
outsb
inc
insb
rclb
iret
mov
inc
jbe
or
xchg
aaa
mov
loop
movsl
mov
sub
imul
xchg
or
sbb
outsl
fnstenv
jnp
mov
dec
xor
out
decb
cltd
jp
shll
in
int
lret
scas
sbb
hlt
insb
fs
push
adc
adc
in
xor
shrl
lock
popa
push
xchg
sahf
leave
imul
rorb
pop
push
mov
pop
xchg
enter
xor
mov
inc
sbb
lock
in
push
mov
lret
pop
xor
adc
into
add
mov
lods
xchg
je
pop
jo
fcoms
mov
js
ret
cmpsb
ja
xchg
jp
and
mov
mov
push
shlb
and
xor
or
xor
insl
push
mov
add
pop
mov
les
lahf
adc
xchg
and
pop
testb
mov
outsb
cmp
loopne
decl
jns
pop
in
fldenv
pop
in
dec
int3
andb
jne
jp
clc
lock
enter
sbb
lds
jae
out
xor
subl
pusha
pop
xchg
push
in
iret
xchg
xor
pop
js
adc
clc
in
dec
cmpsl
sub
lock
in
insb
bound
mov
xlat
and
or
lods
inc
sub
inc
ds
loope
inc
out
lock
mov
dec
rorl
xchg
add
and
cltd
xchg
inc
sub
adc
cmp
fcmovbe
sbb
pop
ror
pop
mov
cmp
jb
inc
mov
pop
mov
jge
pop
dec
push
push
sub
adc
mov
imul
jo
sbb
mov
popa
xorb
xchg
inc
jnp
add
dec
scas
sbb
lods
or
roll
sbb
sub
lds
jne
xchg
fbstp
in
fucomp
cld
cmpsb
mov
mov
jmp
jmp
inc
daa
dec
push
and
push
cld
aad
fldenv
xchg
nop
stc
decb
repz
mov
xchg
xchg
cld
lods
ficoml
cmp
xlat
or
pop
dec
xchg
jo
jb
bound
sbbl
and
loop
jmp
hlt
lods
push
pop
mov
iret
jp
mov
push
cmc
or
les
push
xor
mov
les
in
test
lods
das
push
sbb
push
mov
mov
into
dec
dec
add
sub
mov
sahf
ret
push
nop
jp
jbe
ljmp
cld
xchg
movsl
sbb
xchg
rcll
inc
add
xor
fstpl
jp
int
mov
sub
pop
mov
idivb
cmpsl
cmp
xor
xchg
out
and
pop
addl
mov
xchg
push
xchg
push
shl
fwait
out
adc
dec
loope
sub
cmp
jns
cli
cwtl
aad
bnd
enter
pop
std
nop
cmp
pop
xor
sub
lock
jp
ds
rorb
imul
es
mov
test
and
pop
fs
dec
stos
push
arpl
mov
jnp
rorb
push
mov
mov
jmp
and
out
pop
frstor
add
insl
pop
xor
xor
push
iret
stos
sub
xchg
push
xchg
loop
out
jge
les
mov
ficomps
jbe
inc
jne
gs
cmp
push
sbbl
idivl
je
popf
popa
movaps
pop
pop
fnstenv
movsl
mov
sar
mov
addr16
sub
int
clc
aad
push
into
and
sbb
mov
arpl
inc
pop
mov
jbe
or
xchg
mov
loope
daa
stos
stc
mov
or
xor
popa
loop
jge
jno
sahf
ja
call
pop
adc
stos
xchg
xor
sub
push
shlb
out
aaa
scas
mov
pop
nop
in
and
in
fisubs
mov
and
sub
add
xor
mov
clc
fwait
loop
and
mov
cmpsb
inc
call
jp
sahf
sbb
loop
sub
sub
aad
push
fwait
add
movsb
mov
lahf
pushf
in
stos
aam
in
test
inc
pusha
repz
addl
lods
mov
inc
push
mov
shlb
pushf
adc
out
imul
adc
shll
and
aam
das
sub
cli
in
push
add
notl
push
imul
xchg
nop
mov
inc
es
minps
add
xor
ret
loop
sbb
repz
inc
test
arpl
xlat
shrb
rcrb
sbb
push
adc
clc
iret
mov
pop
mov
out
mov
daa
push
mov
loope
cmp
out
loop
faddl
inc
shl
sub
andl
popf
lahf
test
scas
mov
pop
lret
je
push
dec
xchg
cmp
cmp
fidivs
mov
sahf
pop
mov
icebp
popf
cmc
mov
mov
jg
loop
clc
leave
adc
rolb
and
adc
arpl
or
mov
dec
mov
xchg
sbb
cli
mov
jmp
ror
in
jg
cmp
lods
fimuls
adc
jl
sub
sti
mov
sub
into
loope
aaa
sbb
and
push
fisttps
pop
jle
stos
add
ja
mov
std
test
push
lret
sbb
xor
fcompl
sub
gs
sbb
popf
mov
add
mov
cmp
pop
pop
aam
ljmp
mov
outsl
movsl
fldenv
pop
out
sbb
inc
lret
ja
pushf
in
pop
adc
jb
std
mov
push
fnsave
push
in
pop
into
fstps
popf
lds
sub
dec
imull
inc
inc
adcb
imul
call
fmuls
sub
ja
mov
push
cmpl
pop
repz
inc
dec
mov
daa
repz
or
sub
dec
jecxz
push
fbstp
scas
mov
cmp
test
mov
cli
xchg
mov
dec
mov
int3
stos
sub
nop
dec
xor
in
dec
subb
iret
enter
das
pusha
in
sub
sbb
xor
leave
mov
mov
xchg
popa
xbegin
mov
push
inc
jo
stc
test
outsl
add
cld
jmp
inc
movsb
sarl
mov
inc
jp
dec
mov
cmp
mov
pop
dec
mov
xchg
test
add
repz
je
xor
or
test
in
andb
fstpl
xchg
shrb
inc
stos
mov
inc
mov
xor
inc
lret
pop
ss
fs
xchg
cmc
lea
mov
sub
cmp
adcl
out
cmp
iret
cmpsl
popf
dec
call
adc
lea
loop
adc
outsl
shrb
fisttps
scas
add
xor
andl
inc
loope
pop
aad
popa
arpl
inc
testb
adc
out
aam
xchg
cld
jmp
dec
jno
jl
daa
push
mov
add
out
fs
in
outsl
sbb
loop
shr
cs
loop
add
push
sahf
jg
faddl
push
xor
test
jl
dec
or
push
fsubp
mulb
test
shll
int
inc
imul
movsb
mov
push
roll
dec
push
xlat
daa
push
cmpsb
sub
xor
repnz
das
insb
sarl
push
aam
inc
lds
cwtl
and
daa
ljmp
jo
out
jae
daa
xor
pop
imul
inc
mov
lret
mov
mov
jae
stc
sub
mov
ret
mov
daa
mov
ss
jg
xchg
adc
lods
bound
xchg
ja
xchg
or
in
jb
in
push
je
fstpt
xor
pop
push
dec
xlat
xchg
sbb
movsl
lahf
es
adc
cli
divl
and
out
cmp
mov
mov
dec
xchg
mov
xchg
mov
xchg
push
sub
or
sbb
cmpsl
pop
stc
mov
pop
push
imul
pop
mov
cmp
sub
push
inc
loopne
xorl
icebp
incb
jmp
or
inc
dec
sbb
mov
das
cltd
jg
xchg
cmp
sub
push
mov
dec
mov
or
in
fistl
push
mov
and
inc
xchg
add
aad
ficoms
dec
xchg
lods
lds
out
in
push
sub
mov
test
and
pop
loop
push
ret
lea
ja
sbb
inc
sahf
pop
sti
stc
pop
int
sbb
imul
icebp
outsl
adc
scas
std
dec
xor
lcall
cmp
pop
stc
in
adc
pop
arpl
ss
rcl
in
inc
imull
cltd
jge
shrl
add
jo
jae
addr16
and
inc
dec
add
lock
sub
daa
adcb
in
repz
pusha
add
repz
pop
cmp
jb
out
xor
cmc
outsb
mov
int
inc
pop
test
sub
in
sbb
jns
mov
mov
jne
xchg
shlb
mov
push
lds
inc
xchg
popa
sbb
sub
cmp
lcall
loop
push
test
mov
popf
cli
stos
rorb
sub
es
imul
out
adcb
cld
pop
inc
add
jecxz
xlat
addr16
fstpt
and
xor
stos
int
fcmovu
mov
shll
pusha
sub
ds
push
icebp
pop
sbb
pusha
int3
lcall
mov
rclb
mov
xor
adc
int3
sub
mov
lcall
pop
mov
cld
mov
xchg
jbe
ffreep
adc
xchg
add
and
add
push
ds
movsl
cmp
ret
scas
clc
jae
ret
mov
sbb
roll
pushf
es
imul
lret
adc
mov
inc
xor
iret
enter
sub
cmpsl
and
inc
sub
adc
clc
xchg
into
outsb
cwtl
ds
mov
mov
dec
xor
out
cmpsb
push
lret
stos
fxch
roll
sub
pop
data16
mov
ret
rcl
inc
popa
jl
subb
lock
and
out
cld
inc
jp
bound
std
sbb
add
mov
out
pop
sbb
or
mov
xor
imul
neg
jno
push
inc
or
in
outsb
jecxz
or
loope
mov
inc
pop
cltd
sub
stos
jns
cltd
mov
inc
adc
push
jecxz
sti
lock
dec
cmp
dec
subb
xchg
in
mov
lret
inc
cmpsl
mov
loop
repz
pusha
mov
jb
insl
ret
xchg
xchg
rorl
cmpb
sarb
jge
xlat
popa
inc
testb
fcmovnu
fnstcw
scas
stos
mov
fsubrs
pop
mov
out
or
sbb
xchg
movaps
test
mov
cmp
push
rcrl
jecxz
fdivl
mov
lock
pop
aad
int
fcompl
add
int
lcall
insl
sbb
xchg
push
inc
imul
sub
mov
pop
mov
lret
push
or
outsl
xorl
bound
rcl
bound
jne
dec
das
jo
cmp
sbbl
jnp
test
test
and
data16
lcall
lock
fs
loopne
adc
dec
je
movsl
jns
add
and
adc
push
jge
imul
add
cltd
or
inc
sub
lret
sbb
add
out
popf
subl
ret
ret
jg
and
jns
and
add
stos
sub
shrb
cmp
aas
into
cltd
in
jae
in
test
stos
or
sbbb
ret
les
or
mov
xor
or
pop
outsb
iret
inc
and
xor
daa
pop
cmp
xor
pop
cmpl
loope
idiv
imul
icebp
add
sbb
gs
lcall
mov
push
scas
xchg
jae
add
xchg
movsl
mov
enter
or
xchg
aam
mov
cltd
mov
mov
mov
das
sbb
mov
mov
cmp
dec
sub
inc
out
cmp
test
inc
outsl
int3
jne
pop
push
add
mov
push
dec
stos
arpl
xor
jle
inc
test
sbb
mov
iret
stos
test
testb
repz
dec
or
scas
pop
loopne
add
push
ja
test
sub
cmp
push
inc
mov
xor
sbb
xorb
and
mov
mov
rcrb
fcompl
scas
loopne
ja
hlt
outsl
out
stos
test
imul
mov
cmp
outsl
mov
sbb
into
lods
sbb
into
pop
xchg
sbb
mov
lcall
pop
pop
cmp
sahf
addb
cmp
pmuludq
push
sarl
cld
cs
pop
xchg
popf
push
fbstp
or
push
inc
inc
repz
mov
sti
jb
sbb
jg
ss
pop
push
mov
and
cld
mov
dec
and
mov
push
push
mov
lret
jns
cli
idivb
cmc
cmpsb
mov
sahf
and
call
xor
push
mov
pop
int
enter
push
hlt
rorl
inc
data16
stc
mov
add
ss
push
das
or
cs
popa
push
call
pop
rcrl
pop
lds
mov
cs
shlb
idiv
dec
pop
sbb
add
jmp
movsb
pop
sbb
dec
stos
sub
sbb
sub
int
in
sub
lds
push
icebp
adc
enter
imul
push
fldenv
mov
test
pop
and
rorb
in
in
mov
add
clc
test
jecxz
cmp
jae
popa
adc
inc
popa
cmpsb
test
int
loope
sub
push
into
cld
mov
and
push
arpl
xor
sub
aas
stos
and
inc
inc
inc
xchg
mov
cmpsl
ficomps
inc
sarb
sub
sub
jge
pop
mov
push
push
das
pop
int
add
stos
add
in
cmp
pop
jge
pop
dec
mov
push
cmp
and
pushf
dec
jns
mov
out
sub
lahf
adc
in
cmpsb
adc
sub
lods
mov
push
fldt
push
inc
aaa
testl
mov
push
roll
mov
jnp
flds
aam
pxor
mov
addr16
adc
add
bound
cltd
into
mov
out
mov
xchg
pop
sub
pop
fiaddl
adc
addl
xchg
or
xor
dec
mov
cmp
and
adc
jns
pop
addr16
inc
adcl
ret
in
testb
cmpsl
mov
repnz
scas
clc
int3
sbb
cmp
xchg
jbe
mov
mov
lods
xor
arpl
dec
test
cli
andl
sbb
faddp
call
mov
movsb
call
imul
push
repz
pop
jmp
pop
fbld
pop
jns
jo
xchg
sub
cli
decl
inc
fisubl
cmp
add
or
jb
xchg
push
out
stos
nop
jo
add
sahf
xlat
push
mov
sub
daa
lock
jp
pop
es
push
cmpsl
aad
push
int3
fstps
pusha
jae
jne
mov
fidivs
outsb
subl
inc
icebp
xchg
mov
or
js
mov
jg
jl
ret
test
cltd
sbb
lods
pop
das
sub
in
mov
ljmp
iret
xor
scas
and
pop
fimull
out
jecxz
or
adc
or
mov
pop
cmpsl
ljmp
out
add
jp
and
sbb
negl
mov
leave
stos
lcall
and
and
insl
cmp
sub
in
pop
mov
mull
xchg
inc
dec
packsswb
lea
shll
push
pop
mov
xchg
lret
jmp
hlt
dec
aas
sbbb
clc
cmc
mov
jne
lods
movsl
inc
rcrl
orl
xchg
push
loopne
aaa
cmp
stos
jno
dec
pop
data16
adc
inc
inc
outsb
insl
shll
dec
dec
sub
fidivrs
or
dec
add
les
push
inc
rcrl
fcoms
scas
dec
xchg
movsb
dec
mov
sbb
push
mov
jns
insl
out
mov
xchg
pop
xor
into
cmpsb
or
pop
call
in
or
jo
aam
stos
in
gs
int
clc
xor
pop
test
pop
cli
push
sbb
xor
lods
mov
xor
and
stos
shll
or
push
iret
setle
iret
iret
js
loope,pn
jb
sti
cld
daa
fsts
ds
jp
jle
pop
xor
imul
xor
jmp
in
sub
mov
cltd
int3
xchg
lret
dec
or
lcall
cmp
stos
scas
int
xchg
ud2
test
inc
pop
fldpi
cld
fs
xchg
push
cltd
gs
mov
aaa
fadd
push
or
ret
in
mov
push
xchg
sub
adc
add
mov
mov
push
rorl
arpl
cli
lcall
rcl
adc
hlt
adc
fisubs
popa
or
fdivrl
movsb
jb
push
ret
pushf
mov
pop
das
or
dec
inc
xor
arpl
inc
push
mov
push
fcmovbe
ret
lods
inc
or
xchg
xor
cs
out
jg
imul
add
mov
lds
sub
cs
adc
ljmp
xor
int
lods
cli
adc
ja
jl
xchg
sar
mov
lea
rcrb
sub
scas
mov
ret
xchg
and
sbb
pop
ret
bound
andb
inc
xchg
push
test
mov
mov
popa
ja
add
push
ror
fisubs
insl
imul
add
or
in
cwtl
ret
mov
cmpb
sbb
das
add
mov
ljmp
fisttps
jns
fcompl
add
imul
mov
add
jmp
jmp
xor
sbb
test
cmp
stos
inc
subb
jae
and
jnp
in
and
fwait
cmp
pop
xchg
push
in
mov
sub
add
lcall
xor
sbb
mov
int3
xorb
xchg
push
mov
mov
adcb
test
cs
repnz
imul
push
mov
sub
shlb
push
dec
test
rcrl
int
sub
sbb
aaa
adc
fcoms
arpl
mov
xchg
xchg
inc
jo
push
push
pop
ss
fists
adc
movsb
cmp
shl
mov
enter
and
fbstp
cmpsl
jmp
loopne
adc
mov
adc
loopne
pop
pop
adc
inc
xchg
ret
sub
js
outsl
pop
pop
mov
jne
push
je
ja
ds
popl
add
mov
pusha
in
je
je
xchg
hlt
mov
fdivr
jmp
pop
pop
add
imul
notl
jmp
fnsave
inc
and
sub
mov
sbb
fnsetpm(287
mov
bound
pop
movsb
bound
add
sub
fs
lock
mov
xchg
mov
dec
xchg
mov
gs
call
mov
and
inc
jg
jmp
or
and
jl
test
xor
mov
xchg
jb
cmpsl
sti
jbe
cli
mov
push
repz
rorl
adc
or
mov
not
les
cltd
in
add
or
repz
mov
adc
cmp
lret
mov
jmp
push
je
pop
into
add
rorl
das
ja
pushf
sbb
dec
add
mov
insl
insb
std
mov
mov
and
or
movl
or
and
pushf
add
sub
addr16
lock
sbb
shll
les
icebp
loop
sbb
outsb
jnp
xchg
adc
out
push
xchg
insb
dec
test
cld
ljmp
sbb
inc
mov
or
lods
arpl
out
jno
jg
adc
fimuls
and
shll
fidivl
push
ljmp
ja
cmc
push
and
in
pop
sbb
mov
aad
push
in
lret
pop
sbb
rcrb
mov
sub
add
sbb
scas
outsb
loop
sbb
es
and
push
out
and
js
xorb
mov
notb
and
inc
lock
inc
push
pop
test
xor
mov
popa
out
dec
push
mov
rorl
ret
inc
iret
or
or
sbb
ret
xchg
repz
dec
jmp
cmp
cmpb
loop
inc
adc
sti
and
pop
ljmp
dec
or
cmp
cmpsl
xor
inc
punpckhdq
int
xlat
testl
jl
adcl
xlat
cmp
mov
mov
iret
mov
lods
loope
pushf
sub
es
jns
dec
jmp
in
inc
mov
in
aaa
lret
es
push
adcl
mov
xchg
call
push
push
dec
mov
cld
insb
cld
sub
insb
lahf
fsts
bound
out
push
mov
adc
and
cld
cmp
fs
push
fbld
cwtl
pop
jl
dec
aam
jns
sarl
xor
cmp
mov
ficoms
pop
inc
mov
jo
into
adc
dec
std
push
sbb
sar
aam
add
je
cmp
jmp
cli
popa
mov
jbe
insb
lods
dec
adc
push
orl
std
leave
loopne
xchg
pop
inc
notb
jne
outsb
pusha
and
xchg
ss
ljmp
and
shrl
and
and
and
aad
sahf
jg
mov
lret
scas
dec
inc
lahf
jo
xor
xchg
popa
adc
hlt
or
mov
sarl
lret
adc
jbe
stos
aad
dec
cli
xlat
cs
jmp
mov
ret
mov
push
cs
fildl
in
adc
ds
clc
jecxz
jl
cmp
and
lea
add
insl
inc
xor
mov
aam
pushf
stos
stc
xchg
sahf
or
pop
xor
lea
cmp
mov
adc
arpl
loope
mov
in
movsb
and
repz
aaa
enter
cmpsl
sub
aam
xlat
int
cmp
ljmp
or
xchg
dec
mov
and
jo
les
aam
adcl
pop
push
mov
xor
ret
sbb
cltd
xlat
adc
mov
mov
dec
inc
mov
jbe
orb
xor
lcall
sub
add
inc
sbb
mov
mov
sbbb
fwait
push
movswl
xchg
mov
popf
pop
jns
std
outsl
enter
mov
roll
out
addb
pop
mov
shll
sbb
les
fbstp
sbb
js
shrl
loop
mov
xor
sbb
imul
mov
push
arpl
adc
push
rcrb
int3
loop
mov
sbb
insl
push
xchg
inc
scas
xchg
mov
lods
push
mov
add
das
sbb
xchg
adc
mov
fldt
adc
or
or
cli
pop
adc
js
rclb
addr16
lcall
mov
cmp
cmp
jecxz
stos
aam
mov
stos
shlb
jl
dec
xor
adcl
jo
mov
jnp
dec
dec
add
inc
adc
mov
pop
fcomi
mov
xor
adc
jns
adc
jnp
incb
or
mov
test
pusha
cmp
pusha
xor
arpl
movsb
pop
xor
push
add
jmp
cwtl
sub
aaa
cmc
je
lds
leave
mov
and
insl
popf
ss
pop
out
cmp
adc
xchg
cmovs
stos
dec
pushf
cmpsb
cmpsb
call
or
push
cld
rcll
mov
sbb
mov
or
mov
push
lahf
lret
cli
jl
mov
dec
bnd
insl
mov
xchg
push
mov
inc
cld
add
add
js
xchg
scas
adc
jg
push
lock
icebp
jae
mov
or
popf
mov
mov
dec
leave
cmp
or
les
pop
xor
mov
ss
aas
jl
frstor
test
sbb
fwait
xchg
das
sub
mov
jmp
pop
xor
in
push
mov
and
cs
lret
cltd
pop
mov
xchg
pop
loope
pusha
dec
jns
jge
out
punpcklbw
sub
cmp
cmpl
movsl
ficoml
inc
dec
movsl
outsb
clc
test
push
jle
xor
cmp
outsb
mov
mov
imul
aam
dec
sub
sbb
jmp
mov
sahf
push
xchg
in
mov
jno
pop
dec
xchg
lahf
mov
loopne
cmpsb
hlt
xchg
dec
xchg
adc
inc
sub
js
popf
or
lahf
je
insl
jge
fs
cmp
lods
xor
adc
je
cmp
stos
fnstenv
lahf
leave
addl
subb
test
call
adc
mov
mov
xchg
ja
add
xorb
adc
xchg
mov
mov
insl
sahf
mov
mov
pusha
pop
aam
or
rcll
std
lea
mov
rclb
jecxz
in
lcall
xchg
dec
mov
or
jns
add
inc
ja
out
dec
jae
dec
xchg
dec
mulb
repz
add
dec
jle
jns
sbb
add
jmp
ss
pop
xor
push
dec
dec
push
hlt
fisttpl
push
push
dec
loopne
ret
xchg
add
mov
dec
iret
setbe
rclb
movsb
into
jns
mov
ror
xchg
or
pop
or
stos
jl
push
cmp
int3
or
xchg
jmp
mov
ljmp
add
fcoml
dec
adc
leave
stc
iret
mov
mov
fisubrl
dec
xor
lock
push
sub
jae
jno
jne
std
xchg
pop
mov
pop
andb
push
js
or
inc
mov
mov
sub
lret
mov
and
mov
or
or
dec
je
into
mov
loop
add
je
and
and
test
adc
pop
popa
scas
mov
sub
xor
lea
repz
test
test
xchg
sub
or
test
loope
sub
jp
into
or
shl
repz
add
jno
xor
xchg
jne
decl
stos
ret
xorl
fidivrl
sti
call
adc
dec
scas
int
pop
ficomps
shlb
iret
jns
addl
adc
es
negl
sub
rclb
imul
inc
in
lret
ficompl
jb
cmpsb
cmp
clc
dec
xchg
imul
lret
xlat
decl
jae
aaa
popf
pop
inc
cmp
push
mov
mov
loop
and
mov
or
fiadds
mov
add
imul
inc
jno
lcall
cmc
daa
shl
ror
mov
jo
mov
sahf
push
or
sbb
lock
iret
lock
mov
fcmovnb
xchg
cld
mov
les
dec
daa
jg
xchg
mov
and
std
cmp
rclb
cmpsl
movsb
rcr
imul
pop
mov
out
outsl
repz
or
fisubrl
fisttpll
pop
sub
fcoml
scas
sub
sahf
int3
add
mov
sbb
and
outsb
mov
pop
pushf
and
sbb
cmp
sbb
popa
sub
jno
mov
push
mov
clc
sub
rdtsc
mov
scas
aad
popf
xorb
push
mov
shlb
and
sar
aas
jge
sub
mov
mov
xor
in
dec
sub
sub
xor
fildll
push
jge
notb
pop
shll
push
cltd
fs
push
lcall
shrb
sub
or
xor
scas
jp
test
jb
shll
fs
mov
mov
fimull
sub
outsl
push
push
mov
cmpl
jb
aad
sub
xchg
lcall
xchg
ja
dec
pop
test
mov
or
or
xchg
jecxz
hlt
jbe
loope
inc
call
mov
mov
xchg
push
movsl
gs
adc
push
jecxz
fnstenv
shll
mov
mov
pop
mov
adc
cmc
jmp
out
repz
pop
mov
out
inc
mov
and
js
jbe
ss
lcall
add
mov
jecxz
or
sub
dec
mov
shll
xchg
mov
jp
mov
cmpsb
shl
addr16
jmp
insl
push
push
mov
pop
jo
jbe
outsb
dec
call
inc
sub
shl
ret
pop
pop
mov
mov
andb
imul
loope
push
fcoms
frstor
fcomp
inc
push
dec
test
dec
mov
push
cmp
sub
rcrl
mov
std
xor
or
adc
cmp
shlb
fldcw
pop
loopne
fucom
mov
push
lret
mov
inc
jl
jle
fs
add
adc
jl
add
jno
jp
addl
add
data16
stc
in
cmc
cli
sbb
mov
push
test
pop
dec
cmp
cmp
fxch
out
icebp
insb
fstl
mov
sarb
dec
ucomiss
std
add
cmp
cmp
scas
push
mov
push
sub
incl
les
xchg
xor
mov
push
aad
mov
out
or
loop
aam
je
add
test
ror
dec
loopne
repnz
loope
cmpsl
scas
cltd
test
push
lea
xor
inc
into
and
xchg
mov
add
test
cli
movsb
inc
popf
lret
xchg
mov
cmp
inc
rclb
imul
and
jno
and
test
adc
adc
xchg
mov
and
fwait
ss
xor
push
mov
testl
fistps
mov
jg
ja
push
lea
in
dec
adc
ja
rcrb
pop
addb
cmp
adc
and
cmp
aam
sub
xor
js
mov
cmp
mov
dec
rcll
jnp
in
dec
sbb
mov
pop
cmp
push
subb
dec
cmpsl
xor
sbb
pop
adc
stos
stos
pop
movsb
xor
inc
imul
jo
mov
pushf
pusha
add
in
cwtl
hlt
pop
mov
add
cmpsb
aad
ret
or
dec
inc
mov
frstor
repz
mov
add
daa
sahf
clc
js
xchg
inc
negl
bound
into
pop
insl
sbb
push
mov
popf
sub
femms
enter
out
movsb
je
lea
cmp
cli
scas
fwait
mov
adc
pop
std
dec
rcrb
inc
cmc
inc
out
and
fnstcw
es
out
pmaxsw
push
sbb
push
jl
cli
push
rcll
dec
hlt
mov
cmpsb
insl
and
sub
repnz
ja
fmull
iret
push
jo
dec
lods
int3
arpl
aad
jge
jmp
xlat
dec
pop
sbb
int3
mov
test
pop
and
push
xchg
shlb
jno
mov
ja
aad
and
popf
push
fisubrs
add
add
cmp
mov
push
in
roll
enter
pusha
and
out
dec
or
ret
out
ds
sarb
mov
adcl
out
rcrb
jbe
and
sahf
add
test
cmp
and
fs
outsb
mov
lret
in
fistpll
xor
into
or
jne
outsl
aad
das
loopne
shll
pop
test
add
popa
push
cli
faddp
jo
scas
das
test
sti
sar
and
insb
mov
andl
jns
pop
mov
scas
rcr
sti
inc
dec
xor
inc
insb
repnz
add
pop
into
dec
iret
inc
jg
bound
and
cltd
sbb
addr16
iret
in
insl
dec
ds
mov
stc
out
xor
sub
cmp
adc
lds
mov
sbb
imul
mov
ss
je
xchg
push
std
xor
xchg
into
mov
sbb
adc
sub
mov
rcr
sbb
and
nop
movsb
lahf
jl
xchg
jb
cmp
inc
stos
fidivs
mov
aas
or
fucomi
scas
inc
pop
push
imul
ja
pop
mov
iret
inc
scas
rorb
xor
cltd
jl
push
cmp
xchg
pop
dec
xchg
jbe
xor
fisttpll
push
pop
push
enter
pop
pop
popa
jl
xchg
loope
movsl
sbb
adc
scas
and
leave
mov
mov
mov
inc
repnz
and
ds
cmp
jns
addr16
ret
cmp
rorl
ljmp
imul
into
xchg
xchg
mov
mov
fnstsw
jbe,pn
mov
test
cmp
fsubr
xchg
inc
clc
cmpsb
adc
pop
or
and
int
hlt
ja
fiaddl
mov
cmpsl
jle
popf
mov
out
add
scas
cmpsl
push
mov
xlat
movsl
or
xor
data16
mov
test
pop
fwait
cmpsl
test
aaa
inc
or
pop
add
dec
data16
xchg
bound
dec
mov
pop
cmc
pop
lret
dec
push
loop
cmc
pop
sub
out
cmp
jl
rclb
dec
add
push
lds
mov
push
call
pusha
push
xchg
daa
repnz
inc
and
push
cld
lods
rorl
mov
cmp
stos
cs
call
mov
lock
test
daa
jl
imul
lds
xchg
sub
fwait
cmpsl
lret
push
jb
outsl
in
sub
sub
ljmp
sub
rol
leave
sub
jae
mov
push
jecxz
dec
icebp
add
das
mov
push
fwait
loopne
shrl
xchg
inc
add
pop
ljmp
push
jmp
inc
in
dec
out
call
out
jae
mov
stos
lock
or
divl
jl
fsubrl
add
out
test
push
insl
or
inc
jno
sbbl
cmp
dec
xchg
jae
push
mov
ret
cltd
fs
aas
arpl
sbb
add
in
outsb
fisttpll
rorb
fnsave
adc
inc
mov
sbb
jnp
cld
fsub
cmp
inc
sbb
pop
xor
push
scas
repz
add
enter
push
outsl
xor
fisttpl
jae
jg
inc
lahf
stc
orb
cmp
push
arpl
bound
loopne
hlt
dec
lret
add
sub
xor
fwait
hlt
scas
and
mov
dec
fwait
je
testb
in
movsl
cmp
movsb
mov
sub
xlat
jle
mov
xor
movups
mov
aad
and
das
lock
cmp
test
out
pop
dec
mov
in
pop
push
push
lods
adc
sbb
or
xor
stc
in
shlb
loope
inc
fstps
mov
push
stos
dec
push
pop
es
mov
xor
sbb
push
dec
dec
mov
aaa
ret
fisttpl
xchg
cwtl
imul
lea
push
jl
jne
test
inc
sub
mov
popa
in
cmp
div
and
ret
mov
mov
pop
push
push
pop
fiaddl
in
adc
das
movsl
inc
pusha
mov
pusha
repnz
pop
dec
fsubrp
ret
jmp
fsubs
xchg
adc
sarl
mov
dec
cs
or
cmp
movsl
addr16
mov
fisubs
gs
xor
cmp
or
mov
or
repnz
ja
push
inc
hlt
push
cmp
imul
das
iret
in
and
xchg
cmp
jb
fs
ja
in
fimuls
mov
outsb
fs
inc
filds
js
int
xchg
mov
dec
arpl
mov
loop
int
xor
sbb
jb
cli
pop
pop
das
test
mov
adc
pusha
mov
in
and
popf
and
jge
mov
dec
int
data16
jg
jno
cmp
sub
sbb
dec
enter
xor
or
lods
push
push
sbb
outsl
das
sti
inc
xchg
xor
lret
lock
xor
inc
pusha
pop
jg
cwtl
rclb
sub
fnsave
jno
cmp
jge
test
int3
stos
pop
shlb
mov
int
dec
add
push
hlt
pop
cmp
cltd
ficoml
lcall
cmp
fadds
iret
push
shlb
aam
loopne
xor
dec
or
adc
pop
adc
inc
test
or
dec
push
push
inc
call
or
cmp
aas
xchg
pop
jnp
mov
es
aaa
stos
shlb
mov
cmp
xchg
push
loope
xor
or
notl
jnp
mov
inc
sbb
xchg
inc
cmc
or
fistpll
cltd
call
aaa
push
leave
test
outsb
dec
sbb
add
mov
cld
mull
and
sub
js
lods
aad
inc
stc
xchg
call
pop
lahf
jb
push
enter
xchg
sub
cmpb
mov
add
push
sub
cmp
ss
push
icebp
xchg
imul
sbb
jmp
add
mov
out
loop
dec
int3
subl
mov
lret
add
inc
shr
lock
jns
mov
repnz
test
xchg
std
loope
dec
out
shlb
aam
cwtl
xor
aas
pop
popa
or
popa
pusha
dec
xlat
cs
pop
stc
jp
push
sbb
dec
push
push
int3
loop
les
push
mov
or
dec
adc
test
mov
aaa
mov
and
pop
int
ljmp
sbb
mov
inc
xchg
cmp
lcall
sub
nop
and
xor
adc
or
push
xor
sti
or
ret
out
pop
mov
or
in
pop
gs
inc
xor
xor
pop
mov
mov
call
insb
sbb
mov
ljmp
cmpsl
das
and
mov
addl
loop,pt
mov
andb
adc
addr16
pop
into
cmpsb
divb
pop
jnp
fdivl
cs
xchg
js
nop
mov
push
mov
mov
adc
in
loopne
repnz
js
adcl
and
cmp
cld
mov
stc
mov
cmp
in
loop
mov
cmp
mov
pop
sub
add
jge
sbb
cmpsb
pop
sbb
xor
inc
fdivl
lcall
imul
adc
scas
out
cmpsb
imul
dec
fnsave
push
sub
scas
sbb
mov
mov
mov
adc
icebp
add
rolb
mov
icebp
fwait
pop
stos
insb
pop
jecxz
pushf
pop
sub
xor
and
pop
inc
xor
ffree
imul
sub
push
es
stos
mov
push
outsb
stc
repz
lret
andb
mov
lock
push
bnd
cld
in
fsubrl
mov
sbb
jle
mov
pusha
cwtl
loope
push
jle
je
outsb
sbb
xor
jnp
mov
insb
mov
fcmovnb
inc
inc
or
orb
and
ret
mov
mov
lea
les
sbb
dec
mov
jg
into
ljmp
xchg
jnp
pop
insb
sbbl
aam
insl
scas
push
int3
loop
andb
repnz
das
rcll
repz
aas
lret
mov
add
rcl
dec
adc
pop
cs
aam
in
gs
add
xor
dec
test
adc
push
pop
loopne
mov
push
mov
push
pop
maxps
mov
ss
jp
clc
push
adc
aam
sub
and
adcl
or
cmpsl
fcoml
pusha
stos
test
push
out
pop
cli
rcl
lea
sbb
movsl
inc
mov
cmpsl
in
push
imul
xorl
add
xchg
das
push
stos
shll
pushf
cltd
xchg
in
nop
mov
jp
jnp
mov
jp
push
stc
mov
xchg
mov
bound
add
push
roll
iret
push
call
pop
sar
jo
sub
out
xor
in
and
movsl
mov
sub
sbb
repz
sub
clc
or
cmpb
cmp
gs
or
xchg
xor
outsb
lock
cmp
jb
pop
pop
out
das
insb
dec
inc
inc
js
inc
or
loop
repz
mov
fmull
mov
mov
jo
or
into
mov
mov
hlt
cmpl
dec
mov
adc
xchg
and
daa
cmp
push
les
push
pop
pop
add
aaa
cmpsb
in
into
cmp
cmp
mov
daa
xor
daa
aaa
in
jge
gs
xor
fnstenv
push
sbb
pop
xor
sbb
and
fwait
mov
xor
sbb
push
rorb
push
ret
push
sti
sbb
out
lods
mov
push
out
xchg
ficoml
out
xor
sub
xlat
inc
jae
rcl
fsubrs
push
cmp
xor
rorl
pop
pop
jmp
popa
ds
add
adc
sub
aaa
cmpsb
cmp
mov
imul
sub
mov
sub
mov
daa
inc
dec
test
aad
stos
add
scas
pop
and
fistpl
cltd
je
jne
or
add
push
xchg
mov
xor
cmp
lods
mov
ud0
rcrb
sbb
mov
movsb
rolb
inc
lcall
dec
sub
mov
rorl
cmc
adc
or
rol
enter
and
mov
repz
cltd
mov
push
and
imul
int
add
sbb
int3
test
jnp
imul
xchg
arpl
aaa
scas
adc
and
push
movsb
dec
std
jle
into
hlt
sbb
xor
mov
push
mov
ficompl
xor
push
dec
inc
movsb
fucomi
cld
push
jmp
inc
xchg
test
lds
repnz
dec
vmulsd
out
mov
and
nop
cld
sbb
or
inc
mov
movsl
lahf
xchg
dec
mov
inc
clc
and
pop
push
and
sbb
add
push
pop
sub
scas
in
lret
jge
lea
dec
ja
mov
jmp
add
sti
data16
nop
lods
les
jl
jg
adc
pushf
dec
pop
fdivl
add
fwait
jb
stc
jns
repz
mov
insl
dec
stos
scas
jl
fdivrs
das
xchg
ficomps
sub
shr
sbb
or
lds
mov
clc
pop
jle
mull
sub
ret
lret
xor
jae
mov
repnz
in
iret
xor
repz
pop
into
sub
push
shrl
sti
fcoms
aaa
jg
add
pop
call
pop
cmp
icebp
xor
push
test
lods
arpl
in
cmp
pop
inc
add
push
mov
das
sub
stos
mov
lcall
or
iret
cmpsb
xor
mov
pushf
adc
je
pusha
bound
sti
push
mov
orl
sub
and
ss
jae
js
jo
bound
push
dec
inc
ljmp
dec
add
mov
stc
lret
mov
dec
mov
lock
sub
scas
call
fadds
jg
out
arpl
mov
dec
cmp
mov
pop
xchg
pop
scas
add
jno
les
imul
jle
inc
lahf
mov
sbb
loope
je
insl
xchg
lahf
popa
roll
aas
add
lods
ds
cmp
data16
inc
ljmp
jecxz
shrb
stc
pop
std
sub
or
adc
jecxz
lock
test
lods
cmp
inc
int
pxor
and
inc
adc
mov
mov
mov
aas
jo
in
mov
add
repz
inc
and
xor
stos
and
push
jecxz
jb
imul
inc
scas
dec
sbb
roll
mov
mov
and
addl
inc
cmpsl
scas
flds
adc
fmull
mov
leave
jmp
or
js
adc
jae
inc
ss
ja
lahf
sbb
ja
test
xchg
js
repnz
mov
daa
add
outsb
pop
jne
jnp
bound
fbstp
xchg
ljmp
rorb
adc
jecxz
enter
inc
cmpsl
pushf
mov
inc
xchg
xchg
sub
ljmp
sarl
in
cmpsb
js
push
mov
xchg
xor
test
stc
dec
ds
or
fldl2e
dec
xorl
dec
iret
lea
testl
sbbb
aam
xor
and
outsl
mov
jno
push
sub
shll
adc
xchg
out
or
add
or
cmpb
xor
mov
mov
inc
mov
lds
gs
sarb
jo
cmpsb
shrl
insb
rclb
or
mov
xchg
jb
jb
push
inc
movsb
sbb
xchg
out
sub
xchg
adc
stos
push
lahf
leave
stc
or
xchg
xor
mov
in
jo
data16
or
lods
xor
cmp
jl
mov
cmp
cli
fs
push
test
or
mov
pop
mov
xor
push
dec
adc
sub
mov
stc
rcrb
mov
dec
test
sub
inc
push
outsl
fptan
shlb
or
add
inc
enter
pushf
int3
dec
push
dec
push
push
daa
ds
mov
sbb
pop
mov
or
leave
mov
fwait
inc
sbb
push
addl
and
or
mov
jbe
stos
sbb
rolb
test
xchg
dec
pop
mov
lret
xchg
lea
jo
inc
push
movsl
imul
outsb
xor
in
cmp
repnz
sti
push
jbe
jnp
dec
enter
jmp
jg
xchg
jmp
mov
fs
sub
and
test
push
movsb
mov
xchg
and
outsl
push
sbb
mov
outsl
or
mov
hlt
jns
adc
aam
jp
jecxz
xchg
mov
push
imul
sub
movb
cmp
test
stos
cmpsb
jo
movsb
mov
add
dec
cli
dec
mov
sbb
mov
jb
sub
je
popf
dec
mov
movswl
cs
bnd
push
paddq
and
xchg
test
xchg
cmp
and
mov
pushf
inc
dec
xor
divl
scas
cs
pop
lods
les
popf
dec
xor
xchg
ljmp
xlat
cmp
inc
sub
clc
divl
in
imul
fidivrl
out
lock
xchg
lods
ret
lock
xor
jae
mov
push
sub
divb
push
stos
std
in
cmp
scas
mov
inc
in
clc
or
int3
daa
cmp
fsts
and
inc
cmp
outsb
nop
xor
scas
cmp
sbb
pop
fwait
sub
cmpsb
jmp
xor
fisubrs
cmp
in
or
out
push
ss
and
insl
mov
jp
push
xchg
ret
jns
adc
pop
ja
or
cld
je
push
push
adc
fisubs
mov
fistl
jnp
xchg
pop
jne
adc
bound
push
imul
xchg
mov
out
ficoml
nop
xchg
dec
push
sbb
aam
pusha
mov
jp
movsb
test
iret
jmp
sub
adc
dec
fmull
push
push
call
ds
mov
loopne
sbb
mov
jmp
jle
dec
mov
fisttpll
in
and
je
ljmp
xchg
push
cltd
jg
fwait
js
dec
sub
mov
mov
inc
xchg
jbe
ja
push
fdivrs
mov
lret
subl
andb
dec
imul
roll
adc
pushf
es
adc
sub
mov
adcl
sbb
aas
and
push
aam
pushl
xchg
cmp
push
add
aaa
bound
loopne
xchg
clc
pop
daa
mov
cmp
dec
std
aas
sbb
mov
and
push
cmp
mov
mov
sti
ss
push
pop
aas
scas
mov
das
cmp
test
fwait
push
mov
repz
movl
mov
orb
pushf
js
pop
cmp
push
cwtl
jge
loop
add
ficompl
mov
sbb
push
sub
shll
pop
lret
and
loopne
pop
int3
cmp
in
cltd
push
sub
insb
or
push
xorb
lret
cmp
lock
ret
and
cmc
je
cmp
loope
xchg
cmc
adc
es
cmc
jns
repnz
scas
jne
jo
icebp
incb
lods
testl
and
push
inc
movsb
jle
movsl
jl
push
adc
push
xchg
mov
cmpsl
mov
jae
mov
aaa
icebp
sub
gs
cmp
imul
outsl
cltd
int
pusha
pop
jnp
adc
pop
xor
clc
ds
shrl
adc
jg
test
lret
xchg
pop
fiadds
pop
js
stc
jmp
xchg
adc
mov
cmc
cmp
push
ljmp
adc
lods
mov
pop
pop
std
mov
or
dec
push
test
adc
ret
mov
cmp
xlat
mov
lea
aaa
add
cmc
inc
clc
jae
insl
gs
and
inc
or
mov
mov
sbb
or
push
bound
es
test
fisttps
scas
mov
in
adc
fcmovnb
mov
or
xchg
or
push
xor
push
push
sub
fisttpl
loope
cmp
and
or
das
lds
inc
push
out
jo
stos
fimull
push
xchg
sarl
pop
popa
shl
and
aas
shl
xor
jo
neg
nop
or
testb
fwait
sbb
mov
arpl
rorl
arpl
divb
xor
pop
sub
das
ret
pop
jl
mov
mov
mov
adc
ss
dec
sbb
or
inc
fcomps
arpl
dec
push
sub
shlb
ss
push
or
xlat
ss
je
pop
pop
jp
orb
push
or
imull
sub
sub
daa
or
dec
rorl
push
pushf
sbb
jns
gs
ficoms
shrl
dec
mov
mov
loopne
and
mov
sbb
xchg
xchg
mov
pop
sbb
lods
jbe
repz
mov
orl
scas
cmp
inc
movsb
adc
mov
mov
imul
jne
fcom
lock
push
inc
jg
mov
idivl
mov
fyl2xp1
hlt
cmpsl
push
stos
dec
or
cmp
mov
and
in
mov
daa
or
call
cmp
push
adc
add
sbb
out
arpl
and
mov
shlb
repz
sub
lods
push
ret
jle
cld
push
out
push
cmc
mov
das
nop
jp
add
push
sub
mov
in
mov
and
and
dec
or
inc
push
insl
xor
fisubs
insb
fcmovne
pop
jecxz
mov
mov
cmp
mov
jne
cli
out
call
js
popa
repnz
or
cmp
adc
sub
inc
dec
outsl
repz
cmp
inc
push
out
pop
jo
jb
aas
ja
aam
dec
mov
push
add
dec
dec
adc
xchg
or
xor
leave
mov
jle
mov
jbe
add
cltd
or
test
repz
xchg
lds
in
push
imul
js
fsubs
xchg
out
mov
dec
xchg
int3
xor
addr16
push
stos
mov
sti
movsl
mov
lods
add
outsl
rcrl
nop
into
cwtl
push
cmp
cmp
push
mov
cmp
mov
stos
std
pusha
lods
andb
inc
scas
pop
dec
and
xchg
cmpsl
cltd
push
imul
call
cmp
imull
sub
adc
in
push
arpl
xor
sbbb
dec
in
xchg
xor
bound
pop
lods
mov
int
js
cld
sbb
andl
add
or
lods
cwtl
stos
hlt
rol
in
sarb
std
xchg
sahf
addr16
and
stos
or
push
rorl
mov
stos
and
dec
add
std
pop
sbb
mov
dec
mov
orb
or
jbe
xchg
test
sub
out
sbb
in
ret
mov
hlt
arpl
xorb
xor
push
test
mov
sbb
mov
xchg
scas
and
cmp
mov
leave
push
inc
gs
shl
xchg
rcll
xlat
jge
call
into
gs
rorl
cwtl
cs
dec
xchg
push
dec
inc
sub
into
mov
pop
stc
sub
inc
xchg
test
cs
pop
push
cli
inc
lock
xchg
xlat
dec
xchg
andl
fldl
aam
outsb
and
xadd
aaa
jns
loope
mov
ss
cld
and
add
mov
clc
pandn
xor
jno
cli
js
jl
mov
push
lods
mov
mov
sbb
add
push
mov
lea
mov
cwtl
imul
pushf
cwtl
jge
jmp
xchg
fistpl
ja
xchg
fwait
mov
inc
lea
test
or
dec
decl
adc
mov
push
add
pop
dec
test
in
inc
pop
or
cmp
out
rorb
sahf
mov
cmp
orb
lods
popf
shlb
mov
mov
pusha
cmp
cmp
pop
jno
test
mov
inc
stos
cmc
mov
lods
dec
lret
test
adc
icebp
test
pusha
dec
int
pop
push
sbb
add
js
lret
shlb
aam
cwtl
sub
test
in
dec
shlb
dec
lcall
xor
negl
pop
pop
imul
cli
cmp
lahf
fistpl
loop
test
rorl
jbe
je
cmpb
sbbb
in
push
je
cs
cmpsl
ret
repz
push
bound
or
sbb
stc
ficoms
mov
scas
mov
add
xchg
cld
mov
enter
loop
inc
les
sub
xchg
test
cwtl
nop
sub
add
outsl
jo
rclb
xor
and
fxch
test
jp
sbb
cmpsl
jo
jbe
ss
dec
cmp
fxtract
out
mov
sbb
inc
movsl
ret
push
sbb
cmp
aad
fstps
sbb
adc
popw
pushf
cmp
arpl
sbb
push
jb
xor
iret
or
aad
cmp
pop
sbb
rcrl
cld
cmp
mov
xor
or
mov
ja
push
sub
aas
push
pop
jp
and
pusha
push
jge
xchg
push
outsb
dec
popf
shrl
pop
aad
inc
xor
sbb
nop
incb
in
cltd
pop
mov
imul
fldenv
or
and
pushf
inc
aas
mov
test
or
les
shlb
push
and
mov
insb
jge
add
aam
inc
or
or
adc
loopne
mov
push
repz
jg
cltd
scas
sbb
mov
int3
mov
loopne
or
mov
dec
or
and
xchg
cmp
sub
lds
xchg
mov
in
je
int
je
sub
xor
gs
sahf
iret
pop
icebp
or
cltd
jo
fucomi
jb
cmp
push
push
xlat
popf
jge
pop
sub
jle
sarl
sarl
std
adc
and
pop
push
fwait
jge
sbb
je
push
jle
push
movsb
mov
pop
shlb
cmp
mov
loop
push
imul
mov
or
out
int
lcall
das
lock
dec
test
adc
mov
rorb
mov
jne
dec
outsl
xor
mov
insb
adc
aad
inc
cmpsb
jl
jmp
sti
jg
test
sti
push
cmpsl
inc
or
add
mov
cltd
mov
loopne
jp
clc
cli
inc
pop
and
xchg
int3
ficoml
in
loop
in
inc
js
test
inc
outsb
mov
in
stc
pop
xchg
aad
mov
outsl
pop
outsl
and
push
dec
dec
xor
pop
xchg
imul
or
xchg
in
inc
rclb
lods
sub
dec
jne
gs
add
mov
adc
adc
ds
pop
in
cmp
dec
fwait
cmp
aas
lret
cmp
imul
xchg
sub
mov
inc
je
insl
mov
fcompl
and
pop
sub
mov
cmp
insb
and
popa
gs
jle
dec
ret
incb
hlt
adc
popa
outsb
imul
push
loopne
clc
aas
jecxz
mov
inc
scas
mov
gs
cmp
push
insl
loop
jmp
movsl
cmp
cmc
sti
dec
and
movsl
fcoml
mov
xchg
mov
mov
bound
stos
or
jecxz
xor
xor
inc
mov
aam
pushf
cmp
jbe
mov
mov
out
ljmp
fwait
add
mov
clc
jle
cld
and
mov
movsl
cmp
hlt
stos
movsl
in
fcmovnu
sarb
leave
dec
sub
in
shr
es
ljmp
add
cmpsb
and
pop
sbb
pop
int3
mov
testb
repz
out
cmp
lahf
mov
inc
fsin
leave
out
es
leave
aas
imul
jge
aaa
scas
mov
imul
dec
add
inc
arpl
jecxz
repnz
icebp
je
and
add
xor
nop
pop
push
cmp
mov
or
aaa
mov
push
cmpsl
daa
pop
jno
repnz
mov
iret
data16
dec
mov
insl
or
shlb
ds
xchg
pop
call
pop
mov
faddp
dec
je
sbb
incb
add
push
dec
sbb
xchg
ja
xchg
mov
xchg
mov
loope
sti
xchg
sub
insl
xor
int
dec
mov
xchg
fstp
mov
gs
sub
sub
je
inc
repz
mov
add
rcr
fildl
mov
pop
cmp
xor
cmp
je
cmp
inc
sub
daa
xchg
jle
xchg
and
jmp
loope
xor
test
jecxz
outsb
push
lcall
in
ret
dec
int
push
stos
mov
inc
in
xchg
jns
pop
fildll
out
adc
or
mov
cmp
and
xchg
imul
mov
xchg
add
stos
or
leave
pop
imul
dec
int
xor
mov
popa
and
jl
sub
mov
out
dec
movsb
aaa
or
mov
ds
jp
adc
xchg
jp
or
stos
mov
decl
and
je
int3
jmp
loope
xchg
mov
fiadds
pop
jnp
and
sbb
scas
loopne
jnp
test
rclb
xchg
testb
mov
mov
cmp
sahf
repnz
mov
popa
inc
fsubrs
push
push
sub
cmpb
sbb
xor
daa
jne
sub
add
rep
dec
gs
jg
iret
jns
mov
sahf
div
xor
movb
mov
imul
lods
mov
cmp
xchg
std
jbe
cmpsb
jno
not
pop
xor
xchg
pop
mov
push
inc
cltd
lcall
in
inc
cmp
jo
pushf
sahf
loope
pop
loopne
mov
push
test
sahf
cmpsl
mov
mov
cmp
andl
pusha
mov
xchg
push
ja
sub
insb
leave
xchg
push
in
sbb
push
gs
pop
cmp
jmp
aad
es
or
out
loop
xchg
mov
xchg
mov
lods
iret
jle
cmp
int3
clc
adc
fwait
pop
sub
or
cld
enter
dec
push
cmp
bound
jmp
xor
in
xchg
adc
xor
xchg
jne
aas
shll
xlat
in
imul
popa
mov
lock
pushf
xor
aaa
push
jg
js
sbbb
lods
aam
push
inc
ficompl
sub
je
popa
dec
mov
add
xchg
call
adc
mov
mov
cwtl
xor
ss
push
jno
xchg
push
adc
pop
decl
hlt
dec
push
pushf
xchg
les
push
pusha
int3
imul
mov
mov
adcb
inc
cmp
push
test
ds
or
push
movsl
xchg
outsl
xchg
dec
mov
mov
or
mov
in
mov
mov
fisttps
mov
or
jbe
sbb
cltd
icebp
addb
out
dec
mov
insb
rcrb
add
test
or
mov
xchg
pop
mov
mov
sub
pop
xlat
jl
mov
bswap
xlat
sbb
je
fcompl
push
dec
loope
adc
sub
pop
fcoml
out
sbb
jo
push
rol
fmull
jl
adc
inc
call
outsl
cmp
sbb
popf
jl
adc
lret
push
in
dec
mov
pop
in
lcall
mov
mov
fcmovnu
and
mov
sahf
aam
pop
cmp
cmp
shr
dec
or
int
push
push
lahf
xor
hlt
shlb
pop
sbb
mov
cmp
sbb
add
aad
jns
jmp
repz
cmp
xlat
jge
cmp
sbb
xor
dec
outsb
test
in
subb
xor
insl
cltd
inc
out
push
mov
pushf
cmp
ds
jg
ficomps
mov
xchg
xlat
daa
dec
imul
imul
add
jbe
fpatan
ret
add
fwait
dec
pop
or
es
and
fs
data16
sbb
scas
push
cmc
and
bound
enter
fnstcw
xor
fnsave
sub
xchg
adc
dec
in
sti
nopl
mov
mov
jge
mov
cwtl
push
jge
repnz
iret
shl
stc
push
outsb
test
lahf
mov
leave
pop
push
call
fmuls
dec
repz
jne
out
cld
arpl
mov
int3
lods
mov
xchg
mov
aaa
push
cmp
fnstsw
pop
popf
sbb
int3
ret
sbb
lret
in
jae
inc
xlat
inc
jge
flds
pop
and
sub
scas
mov
movsb
aad
out
data16
imul
dec
dec
fbstp
push
pop
addl
mov
inc
xchg
cmp
out
lcall
add
scas
adc
jbe
xchg
in
aas
cld
pusha
sbb
push
loope
sbb
mov
shld
mov
lds
xorb
jns
mov
outsl
addr16
sub
jo
mov
dec
sub
in
push
rcr
mov
cld
sbb
popf
in
xor
and
pushf
cs
addr16
mov
outsb
inc
gs
xor
jge
cmpsb
inc
xchg
mov
jmp
push
lret
add
pop
pop
not
das
popa
pop
daa
addl
cli
xor
outsl
fistpll
jg
push
push
dec
ret
inc
push
mov
sub
call
fsubrs
mov
mov
mov
pusha
sub
in
mov
and
mov
fsubrl
pop
jmp
add
lcall
add
push
daa
pop
push
jecxz
loopne
jno
ljmp
std
rcll
mov
aaa
fstpl
sar
and
or
cmc
shlb
pcmpeqd
js
pop
je
mov
push
jl
dec
xor
out
es
mov
xchg
cmpsb
inc
xor
shll
xchg
add
into
add
inc
rcll
out
and
inc
mov
inc
fcompl
pop
push
inc
addr16
push
in
popf
ja
fstl
sub
mov
bound
or
mov
cmpl
or
inc
mov
push
fidivrl
std
xor
inc
inc
mov
pushl
mov
mov
mov
test
or
dec
insl
enter
cmp
pusha
cmp
or
fnsave
notl
lcall
jp
add
outsl
xorb
inc
cmp
cmp
data16
and
jl
and
jae
mov
xor
xlat
loop
sub
sbb
lret
pop
lcall
mov
ss
push
sbb
mov
sbb
mov
sub
outsb
shr
outsl
imul
nop
add
ds
jmp
xchg
mov
mov
mov
lds
adc
cmc
cmp
fildl
clc
jne
loope
adc
aad
lds
outsl
and
cltd
aad
mov
push
xchg
and
cmp
clc
lcall
shl
jnp
andnps
sbb
outsl
repz
out
jae
in
sarl
push
sbb
jle
mov
cmp
or
enter
dec
sub
xor
rorl
repnz
xor
jbe
push
push
or
mov
in
aaa
jge
shrb
out
shlb
add
mov
or
add
or
mov
imul
rorl
nop
adcl
inc
mov
push
mov
or
lahf
or
cmp
or
outsl
sbb
popa
push
sahf
push
in
ficoms
mov
rcl
xchg
add
add
xor
push
push
xchg
arpl
inc
fsubrs
dec
cs
mov
leave
loopne
int
jmp
and
adc
pushl
rorb
inc
insb
loop
pushf
jge
and
mov
lds
inc
xor
pop
or
int
in
cs
or
push
ret
ja
aad
and
subl
mov
xor
jne
dec
sbb
pusha
lcall
rcl
test
insl
aas
psubsb
jnp
and
xlat
frstor
test
std
nop
jecxz
notb
mov
es
jnp
out
fnstsw
out
aad
in
arpl
push
jno
outsl
sti
xlat
lret
xor
addr16
push
push
aaa
mov
lods
push
jmp
sahf
fstl
enter
push
rorl
ds
std
dec
adc
test
in
cmp
into
ss
pop
imul
sbb
xchg
sbb
mov
cmp
ret
jo
jnp
mov
dec
dec
inc
sub
nop
and
jge
sub
mov
adc
jne
ljmp
ror
adc
mov
adc
outsl
in
inc
and
mov
roll
add
mov
mov
cld
adc
jo
sti
sbb
imul
push
cs
mov
mov
cmp
and
pop
imul
mov
sbb
stos
and
and
pop
dec
jnp
mov
add
mov
call
lahf
jo
xlat
inc
add
cli
int
mov
add
daa
nop
sub
and
xchg
lahf
pop
sti
xchg
xchg
xlat
jnp
xor
or
fists
mov
stos
sbb
push
cltd
ret
jl
or
sbb
outsb
jno
repnz
inc
jle
mov
or
push
sar
fs
inc
xor
xor
outsl
mov
cmp
adc
and
loope
popl
sahf
pop
ja
test
and
rolb
lea
fsubrs
popa
mov
fwait
int3
cmpsl
sbb
shrb
subb
xlat
test
rorb
add
jmp
jne
mov
mov
pop
push
xchg
mov
jp
or
xor
sub
pusha
jae
inc
or
xorb
lcall
fiaddl
mov
sub
sbb
cs
pop
outsb
inc
iret
jb
dec
lret
xchg
mov
je
jno
fdivrl
sub
lods
sub
or
repnz
push
inc
insl
icebp
mov
dec
fstpt
fmul
dec
lret
jecxz
mov
sbb
mov
mov
push
imul
imulb
pop
pop
addr16
cmpb
nop
stos
ret
scas
sti
dec
sbb
sub
dec
adc
mov
jno
and
jne
sti
cli
clc
mov
out
das
and
sbb
jnp
fdivrs
inc
xchg
aaa
stos
push
dec
aaa
push
dec
xchg
mov
pop
iret
xchg
andl
xlat
push
jecxz
pop
inc
push
pop
sub
xlat
mov
mov
xlat
imul
stos
cmpsb
cmp
sbb
dec
clc
jle
sub
daa
inc
test
dec
pop
mov
mov
pop
packuswb
lods
cmp
push
xchg
out
sbb
push
xor
cld
leave
xor
mov
popa
ljmp
arpl
dec
lahf
das
sbb
cmpsb
movsl
inc
dec
pop
mov
pop
addr16
xchg
insb
mov
mov
mov
inc
loop
dec
add
pushf
nop
nop
sub
push
incl
aad
dec
sub
inc
xchg
adc
mov
test
roll
xchg
pop
ret
je
xchg
dec
les
popf
push
pop
pop
add
cmpxchg
leave
inc
xchg
loopne
sub
mov
lods
into
sahf
popf
movsb
iret
les
push
je
jne
jae
mov
sbb
lret
subl
mov
sub
mov
jmp
aas
lea
ficomps
jnp
fldl
cmp
ja
clc
adc
andl
fisubl
jg
movd
jns
aam
out
test
and
in
push
lods
lock
mov
jg
xchg
pusha
dec
mov
adc
movsl
sbb
loopne
push
decl
sbb
xchg
testl
lcall
aas
xchg
adc
stos
sub
sub
mov
rorb
xor
es
inc
mov
dec
jecxz
repnz
push
jge
fadd
jns
mov
mov
ffree
mov
mov
jmp
enter
pop
jl
lds
jae
jmp
sub
pop
add
inc
enter
adc
test
push
test
arpl
adc
fnsave
iret
push
lea
or
dec
lret
int3
xchg
sbb
sahf
sbb
jno
sub
push
popa
sub
in
fwait
pusha
repnz
add
bound
ss
jo
xor
roll
mov
std
mov
pop
pusha
loopne
es
das
in
loop
sub
sub
aas
and
xor
push
cmp
out
aad
xor
jne,pt
notl
lds
rorb
xchg
lret
std
pop
dec
icebp
jns
lret
xchg
int3
inc
sub
inc
add
add
loope
add
push
mov
xchg
rolb
dec
xchg
mov
cltd
imul
inc
iret
ss
dec
outsl
test
mov
outsl
inc
add
movsb
pop
xchg
xlat
cld
xchg
in
xor
mov
mov
divb
mov
xchg
jl
aad
push
xchg
and
add
mov
cmp
jmp
in
aas
or
lds
or
mov
mov
mov
sbb
push
lods
adc
into
add
cmp
pop
inc
ret
vpshlw
or
and
fs
or
inc
js
inc
bound
imul
rcl
lret
xchg
mov
pusha
dec
adc
arpl
sbb
insb
rorb
jp
or
mov
jne
in
mov
push
lds
xchg
call
daa
lods
mov
fildl
fiadds
enter
mov
rcll
lds
std
out
jbe
xor
xor
insb
inc
lods
int
aaa
jno
int3
xchg
push
cld
jmp
fcompl
and
and
insl
popf
mov
stc
int3
mov
push
ja
push
cmp
in
out
hlt
sbb
repz
mov
push
inc
mov
lods
lock
dec
xchg
pop
hlt
add
cmp
add
dec
testb
jb
stc
dec
popa
fcomps
sbbb
sub
arpl
in
xor
mov
or
sti
in
adc
jge
push
sub
and
cs
movsb
fistps
cltd
xor
mov
and
sbb
cmp
mov
orl
or
shr
ret
push
sub
jg
sahf
es
sbb
insl
test
mov
xchg
lea
push
jns
or
js
dec
lods
hlt
cmp
aam
dec
push
push
xlat
ja
outsl
out
mov
adc
jecxz
or
push
add
mov
das
sti
push
and
xorb
daa
inc
fiadds
test
xor
je
mov
stos
in
sub
ret
loope
in
lea
mul
andb
call
sub
hlt
neg
xlat
fstp
pop
jecxz
sbb
mov
xchg
inc
inc
movsb
and
repnz
add
cli
jno
lock
rcrl
push
les
pop
jns
dec
or
es
hlt
not
sub
ret
jle
push
sub
xchg
or
daa
xor
mov
cwtl
add
pop
into
stc
fistpll
cmp
ljmp
and
and
jl
inc
jge
insb
lahf
or
push
cmp
adc
std
out
in
int3
xor
jo
or
fidivl
pusha
sub
push
push
clc
hlt
outsl
mov
lret
imull
call
mov
mov
data16
push
mov
mov
leave
lock
rol
inc
and
daa
cmpsl
jle
xchg
pop
pop
push
das
pop
gs
sbb
nop
xor
or
mov
jne
fistps
ljmp
data16
in
leave
or
pop
pextrw
jno
gs
clc
test
test
jp
in
pop
sbb
fsubrp
cmp
xchg
int3
dec
je
pop
jno
test
sbb
push
xorb
je
adc
sbb
xchg
stos
adc
ss
popf
inc
pop
push
bound
rol
mov
cmp
mov
sub
dec
mov
or
cld
in
repnz
cmpb
shrl
xor
jnp
adc
adc
nop
adc
pop
and
mov
sub
out
or
mov
jno
leave
dec
mov
mov
inc
dec
movsb
jl
mov
jne
ret
shll
inc
dec
dec
aaa
xchg
jbe
xor
jp
sbb
xchg
mov
jae
mov
xlat
nop
jl
and
shlb
ds
sbb
lods
std
lods
cwtl
lea
sub
stos
inc
cmpsb
call
addr16
mov
or
js
pop
lret
es
pop
inc
pop
fcmovnb
jo
insb
pushf
jge
inc
xorl
addl
in
clc
push
int
rolb
cmpsb
mov
mov
js
and
ftst
loop
xor
shll
or
mov
pop
ljmp
int3
xchg
data16
loop
pop
adcb
dec
jae
mov
jecxz
pop
sub
ljmp
test
lds
cmp
xor
adc
sbbl
push
mov
push
shlb
inc
mov
push
movsl
push
cmp
jns
in
gs
or
cmp
adc
sbbl
push
movb
out
insl
sub
das
pop
xchg
xchg
xchg
cmp
imul
lahf
test
in
mov
fistps
mov
and
mov
jne
addr16
xchg
dec
add
push
and
pop
icebp
dec
fbld
stos
push
test
arpl
sbb
cmc
xchg
push
xor
xchg
cmp
xorl
or
imul
in
xchg
movsl
jmp
inc
cmp
inc
jmp
pop
imul
push
or
mov
mov
in
dec
imul
inc
es
pop
xchg
lret
add
clc
push
aaa
xor
or
addl
pushf
sub
adc
shrb
or
pop
xor
je
or
pop
sbb
adc
inc
outsl
fcoml
cltd
xchg
pusha
test
inc
and
pusha
dec
pop
jnp
mov
or
dec
inc
push
and
push
je
repz
aad
cmp
mov
adc
jl
pop
cmpsl
mov
jp
mov
and
nop
sub
jmp
adc
cmp
sub
pop
sub
divl
mov
jne
lret
lock
test
jno
inc
dec
xor
cmp
ret
movsb
test
xchg
push
insb
dec
sub
xor
xor
lahf
je
add
mov
push
sbb
and
sarb
mov
cmpsb
out
aaa
js
mov
pop
fcomip
lret
xchg
out
icebp
in
cmp
sbb
add
clc
inc
and
cmp
or
inc
movsl
push
dec
leave
and
or
popa
or
mov
mov
dec
lea
add
xor
movsb
sarb
and
rorl
dec
add
scas
loope
lock
push
outsl
test
out
sbb
pop
mov
addr16
leave
jns
jno
mov
adc
aas
mov
jne
pushf
daa
sbb
xlat
push
mov
xchg
cmp
divb
stc
push
cmp
lret
push
movsb
push
out
jmp
push
xchg
dec
mov
es
mov
mov
in
pop
outsb
add
popa
jno
int3
jns
mov
mov
pop
outsl
jbe
or
movsb
fwait
pop
nop
dec
movsb
cmpsl
in
dec
or
sbb
pop
adc
loop
lahf
cmp
push
gs
aad
leavew
sub
gs
sub
insl
sub
cmp
add
pop
push
mov
shll
les
mov
fidivl
filds
faddl
adc
or
or
pop
bound
shlb
cld
mov
sbb
sarb
push
xor
lahf
and
outsl
rol
or
and
rol
je
sbb
cltd
clc
lret
adc
pop
mov
leave
jnp
out
push
push
xor
inc
jno
loop
xor
push
shl
xor
push
cmp
mov
xor
mov
lcall
xchg
arpl
pop
sbb
mov
in
cmc
push
adc
cwtl
dec
push
jmp
mov
xor
sbbb
dec
testl
push
dec
inc
inc
dec
test
data16
lahf
lahf
popf
xlat
popl
dec
xorb
adc
js
ljmp
pop
add
pushf
mov
lock
push
sub
and
inc
mov
lock
scas
imul
and
rcrb
jmp
push
arpl
imul
addr16
inc
cmpsb
dec
sahf
mov
fstps
mov
adc
push
repz
test
divl
pusha
movsl
pusha
movsl
pop
jnp
shr
adc
outsb
popa
sahf
jb
call
lds
out
dec
push
test
inc
or
jl
dec
call
rclb
xlat
out
fstl
lret
cmpsl
sub
mov
leave
pop
sahf
fists
mov
pop
sbb
jnp
dec
add
imul
pop
inc
jle
shrl
mov
lods
test
xor
cltd
or
push
cmp
and
mov
push
das
mov
sub
fsub
adcb
je
mov
loope
mov
scas
dec
sub
push
jno
xor
and
cmc
cmc
ljmp
sub
sbb
sub
pop
repnz
bound
add
inc
fcomi
cmp
pop
mov
pop
clc
fisubs
inc
incl
pop
sub
xor
add
inc
mov
or
stos
orb
mov
aaa
dec
adc
xchg
adc
jmp
hlt
outsb
popf
jbe
pop
shrb
xor
lock
mov
or
mov
rorl
inc
jne
mov
fisubrs
cmp
test
adcl
cld
mov
iret
cmpsl
movsl
or
pop
ljmp
arpl
stos
mov
mov
rcrb
mov
cmp
pop
xchg
hlt
sbb
xor
loopne
dec
lea
mov
mov
fnstenv
inc
lods
sub
xchg
sbb
insb
mov
sbb
pop
das
lcall
cltd
pushf
arpl
pop
outsl
jl
lcall
mov
scas
test
ficoms
or
and
cmp
movsb
aas
ret
scas
add
outsl
or
sub
cld
pop
into
push
inc
pop
xchg
mov
push
jle
mov
cmp
mov
stos
pusha
ret
ret
add
push
adc
dec
mov
int3
pop
iret
bound
pop
insl
in
test
xchg
sahf
std
scas
imul
mov
aam
dec
insb
aas
mov
pop
je
and
test
cwtl
mov
pop
jo
mov
loope
test
es
std
or
mov
clc
sbb
inc
arpl
and
out
fs
fldl
add
cmp
jle
xor
jecxz
shr
mov
push
mov
repnz
xchg
push
divl
out
jbe
cltd
ret
push
les
inc
fsts
jno
inc
push
mov
and
addb
sub
fisubrs
mov
lcall
mov
repnz
loop
in
cli
xchg
repnz
fcmovnbe
fidivl
scas
divb
cmc
mov
sbb
inc
fimuls
in
mov
mov
pop
fwait
orb
ja
xchg
mov
sub
addr16
xor
xchg
dec
test
mov
pop
and
pop
aad
fdivrs
rcr
cmp
scas
cmp
push
jl
lds
mov
insl
stos
fidivl
into
clc
in
mov
mov
or
sub
add
adcb
jo
int
arpl
mov
std
dec
jmp
inc
outsb
or
dec
mov
push
push
mov
lods
outsl
es
xor
jno
popa
rol
push
pusha
fimuls
aad
enter
aaa
xor
in
mov
cld
dec
aad
lret
mov
sahf
clc
sbb
push
adc
push
stos
sarl
cmp
fidivl
lret
and
sti
and
mov
sahf
repnz
aaa
and
cmpsl
mov
stos
mov
jmp
in
gs
jae
add
xchg
xchg
scas
mov
insb
adc
jnp
pop
cmp
sbb
jg
sbb
shr
popa
jb
cli
dec
adc
mov
push
or
aaa
xchg
std
inc
shrb
push
ss
xchg
sbb
jge
mov
cmp
pop
popf
mov
dec
add
call
jge
leave
cmpsb
and
movsl
mov
rep
or
cltd
loop
das
adc
imul
test
ss
pushf
ja
sbb
xlat
lock
shll
sbb
rorb
mov
vandnps
bound
icebp
sub
ret
sbb
push
dec
ss
in
ss
int
jne
sti
test
inc
fisttpl
popf
stos
mov
cwtl
jo
adc
jecxz
test
jns
pop
in
cwtl
xchg
mov
testb
arpl
orb
adc
or
sarl
push
test
xchg
pop
dec
dec
push
ss
xor
sub
icebp
cmpsl
jae
imul
cwtl
jecxz
icebp
fimull
jle
xchg
adc
in
rcrb
mov
sub
mov
out
sbb
pop
pop
aam
inc
shll
aaa
push
fidivs
mov
aam
jmp
push
das
repz
lods
push
div
int3
call
jl
cmpsl
inc
pop
divb
sahf
das
jne
push
xor
push
xchg
gs
sbbl
mov
bound
pop
inc
xchg
imul
cmp
popf
es
out
in
mov
mov
stc
cltd
pop
xchg
adc
loopne
mov
or
fs
inc
add
pop
lcall
pop
in
nop
dec
add
mov
cmpsl
mov
mov
pop
jp
push
sub
sahf
out
mov
fmul
mov
sub
lret
fdivrs
xor
cltd
andb
add
mov
mov
mov
pushf
lahf
addr16
ss
and
pop
in
outsl
cs
stos
jge
push
lods
cld
in
out
clc
roll
inc
in
pop
or
mov
dec
push
push
movsb
jne
cmp
xor
sbb
sbb
aad
stos
jnp
inc
arpl
add
fadd
shl
sbb
fwait
mov
insb
xchg
dec
mov
std
out
jnp
clc
sbbb
cmp
dec
pop
push
cld
orb
lock
and
lds
adc
mov
cltd
cli
inc
int3
call
dec
inc
xchg
mov
out
xchg
push
orb
pop
sbb
out
int
lret
push
ja
movsl
nop
sbb
test
or
cmp
nop
lea
out
mov
jmp
mov
jge
lock
cmp
pop
push
jo
pusha
inc
push
ds
test
loope
rol
ss
cli
pop
cld
test
negl
js
mov
push
ret
mov
inc
adc
cmpsb
fsub
addl
popf
inc
enter
sub
sub
movsl
mov
pop
lods
clc
std
adc
enter
push
jg
lcall
lods
xor
idivl
inc
ret
sub
repnz
adc
shrb
inc
ret
in
mov
xchg
loopne
scas
ffree
ss
and
loop
decl
push
xor
jo
or
pop
sahf
dec
sbbb
repz
mov
mov
mov
push
jg
movsl
mov
lods
enter
push
inc
arpl
cltd
xor
nop
ja
sti
mov
out
cs
out
movsl
rclb
aam
xlat
in
rcrl
into
arpl
cmpsb
cmp
fisubl
mov
push
adc
bound
adc
sub
cwtl
lds
xchg
push
sub
fdiv
insl
and
jno
ret
hlt
aam
mov
lock
in
jmp
inc
add
fwait
sbb
push
pop
pop
lods
mov
leave
in
out
loope
fsubs
out
sahf
or
jle
sbb
mov
xor
xor
iret
push
adc
inc
xchg
js
test
xchg
and
loopne
pop
push
scas
lods
fwait
pop
or
and
mov
push
xchg
fsubrs
fmuls
mov
sbb
fmull
lcall
addl
add
jo
jg
sbb
or
dec
les
jb
or
test
fsubp
cmp
ljmp
test
inc
nop
aad
dec
outsl
andb
mov
jae
mov
dec
popa
pop
cltd
dec
cmpb
dec
pushf
xor
pusha
cltd
dec
jge
mov
cltd
in
inc
in
or
lods
xor
out
gs
mov
mov
push
pop
dec
xor
inc
lcall
out
push
and
notl
sar
in
jae
xor
sub
dec
outsb
jg
in
cwtl
gs
lods
jnp
mov
xchg
insb
mov
jno
stos
mov
jo
jp
les
sbb
repnz
movsl
push
sbb
and
popf
bound
in
and
addr16
aaa
sti
popf
pop
mov
out
xor
inc
repz
repnz
jl
cld
sbb
imul
pop
sub
sbb
jg
stc
dec
out
mov
sti
push
int
nop
movsl
ss
fdivl
mov
out
out
xchg
repz
ds
fdiv
pop
in
xor
shrb
add
not
cmp
mov
sub
push
adc
in
sub
cmc
xchg
cmp
and
mov
mov
sbb
dec
subb
jle
ljmp
pushf
sub
push
addb
notl
mov
sti
mov
cmp
scas
or
divb
nop
fwait
mov
shlb
cld
pop
xchg
lahf
inc
inc
or
out
pusha
jp
into
or
xchg
pop
push
pop
into
adc
jno
sub
adc
xor
inc
pop
je
sbb
mov
push
pushf
dec
ss
ds
sbb
fnstsw
ficomps
nopl
subl
aad
scas
mov
jnp
and
lods
std
jp
xchg
outsl
movsb
mov
lret
fs
mov
enter
dec
push
divl
push
mov
jle
dec
cwtl
add
sub
inc
lahf
dec
aad
je
jle
mov
inc
or
out
orl
mov
xlat
das
test
int
push
fs
pop
pop
jb
test
add
pop
rcl
dec
pushf
xchg
arpl
sbbl
sahf
aas
pop
pop
mov
fldenv
push
aam
out
adc
inc
call
inc
leave
xor
xchg
ja
sub
push
pop
je
das
test
and
and
pop
push
pusha
out
or
add
es
lea
cwtl
mov
icebp
jge
sti
iret
push
pop
and
mov
int
aam
icebp
dec
mov
loope
lods
xor
adc
mov
pop
xor
iret
push
pop
add
xor
inc
leave
add
xchg
sub
into
test
test
xor
xor
push
cltd
push
repnz
in
addr16
scas
mov
mov
add
inc
scas
stos
add
negl
sbb
imul
enter
inc
cvtdq2ps
call
mov
sub
jbe
add
outsl
mov
or
sbbb
std
or
out
stos
roll
mov
mov
dec
stc
cltd
ja
loopne
fbstp
mov
jne
sub
into
xor
pusha
test
cltd
jle
adc
arpl
mov
rcrb
add
hlt
push
in
push
je
and
fisubrl
lea
ret
push
mov
sub
dec
mov
call
jmp
fwait
dec
mov
sti
ficompl
adc
das
in
mov
pop
mov
les
stos
mov
inc
push
cmp
xchg
lds
aas
cmpsb
lea
hlt
imul
sbb
adc
in
cwtl
jp
jmp
test
jmp
mov
stos
inc
jp
xor
xchg
stos
jbe
clc
fsubl
mov
icebp
movsl
dec
scas
jns
mov
jae
cmp
mov
mov
push
fidivrs
dec
mov
sbb
mov
mov
out
popf
lahf
push
sbb
cmp
in
push
jns
lret
push
mov
outsl
inc
arpl
mov
add
inc
xchg
inc
daa
nop
lret
cmp
jne
jl
mov
add
jns
iret
mov
xchg
iret
sbb
ss
jbe
mov
movsl
jbe
loope
lret
add
adc
rcrb
add
xchg
shll
pop
cmp
cmp
add
out
popf
repnz
ljmp
cld
aad
cli
xlat
mov
movsl
ss
pop
pop
scas
mov
sub
clc
dec
pop
cmp
adc
adcb
bound
mov
outsl
xchg
jg
or
sbb
in
inc
push
or
dec
out
fadd
call
pop
inc
aad
imul
jae
add
or
ror
shll
ds
icebp
mov
jecxz
gs
pop
movq
mov
int
xchg
je
sub
test
sysret
jae
mov
aam
iret
dec
daa
stos
filds
or
or
mov
sbb
add
pushf
loopne
idivb
mov
push
cld
fbstp
loope
mov
enter
mov
push
mov
fisttps
jl
ja
cmpsl
cmc
or
popa
clc
insl
sub
mov
push
xchg
je
adc
and
mov
jne
push
jae
ds
and
repz
movsb
icebp
push
mov
outsl
push
jb
mov
aad
dec
sahf
dec
jp
add
jnp
aam
pop
xchg
rep
outsl
es
daa
xor
cmp
adc
mov
sbb
sbb
pop
add
xor
data16
jne
add
dec
sahf
es
fldpi
je
fbld
and
cld
jg
inc
cmp
fiaddl
aad
not
addr16
sbb
mov
xor
test
inc
call
imul
ss
icebp
les
int3
sbb
faddl
push
insl
jno
pop
dec
xor
loopne
xchg
pop
pop
adc
dec
mov
ror
mov
fisubrs
add
mov
dec
mov
scas
xchg
shrb
pop
iret
aaa
adc
and
mov
jmp
add
or
xor
pop
inc
in
lock
test
mov
add
int
adc
ljmp
xor
ja
and
pop
xlat
fsubrl
lods
inc
mov
dec
jnp
dec
data16
mov
fsubrs
std
pop
incb
pop
movhps
mov
cld
lock
rorl
dec
xchg
push
nop
aaa
jne
cmp
cltd
in
adc
jge,pn
arpl
push
xchg
sub
test
mov
or
push
mov
daa
imul
push
sti
xchg
pop
aas
push
test
test
add
stos
add
sbb
ljmp
sbb
mov
arpl
add
cld
pop
mov
ljmp
jge
call
fdivl
sub
mov
subb
jmp
mov
leave
sbb
sub
xchg
mov
jge
fwait
and
sub
adc
je
cwtl
pop
add
imul
mov
out
or
xchg
cld
mov
cmpsl
das
fwait
bound
pop
pop
inc
inc
mov
pushf
imul
xor
xor
xchg
lret
xchg
pushf
das
aam
shr
sbb
mov
in
mov
sub
sbb
adc
rcrb
std
fs
xchg
pop
xlat
dec
jbe
push
int3
xchg
je
lcall
scas
jns
sbb
jbe
inc
cli
cmp
jo
lea
xor
into
pop
popa
push
insl
bound
xchg
in
cs
jbe
js
imul
mov
std
jge
mov
cmpsb
enter
dec
or
fnsave
popa
push
mov
inc
ja
cmp
xor
test
movb
aaa
orl
mov
nop
out
pop
rcl
add
fwait
lret
mov
repnz
rcl
inc
sbb
dec
cmp
xchg
xchg
cli
xchg
mov
add
jle
mov
dec
push
pop
hlt
and
cld
jbe
bound
data16
add
sahf
dec
sub
stos
inc
dec
lods
movsl
imul
inc
mov
nopl
mov
mov
fidivrl
mov
and
pop
mov
jl
adc
pop
data16
pusha
orb
sub
test
jbe
mov
add
jne
dec
lods
jmp
push
add
push
ret
pushf
sbb
jmp
pop
addr16
mov
mov
mov
adc
mov
icebp
dec
lretw
pop
repnz
pop
jo
and
sarb
mov
popa
jmp
test
ja
loope
push
cltd
pop
rclb
inc
call
sbb
clc
push
std
mov
loop
or
outsl
insl
or
xchg
jbe
out
mov
mov
push
pushf
mov
inc
pop
or
idiv
imul
jg
pop
fsubrp
mov
jns
insl
dec
cs
into
cs
dec
xchg
push
cmpsl
ret
fucomi
repz
repz
jbe
push
ret
sub
or
xchg
jge
jmp
fucom
jnp
pop
push
fcmovnb
mov
push
add
popa
fptan
fcmovu
adc
insl
rcrl
mov
push
sahf
pusha
jp
xor
xorl
pusha
cmp
fsub
pusha
xlat
sub
rcrl
pop
pop
mov
addr16
push
addb
sub
xor
popf
aam
arpl
ret
pop
pop
cmp
lcall
cltd
or
movsl
xor
lds
mulb
cmp
sbb
jl
out
vfnmsub231pd
cli
cmpsl
sub
dec
pop
xorl
or
cmp
dec
jle
test
fildl
adc
add
mov
dec
leave
sub
add
dec
inc
test
out
or
inc
es
leave
fisttpl
jno
or
xor
and
mov
mov
lock
call
jl
adc
mov
aam
mov
push
and
add
mov
push
mov
add
ficomps
popf
movsb
inc
out
pop
xlat
mov
cmp
aaa
shlb
gs
push
je
data16
mov
dec
dec
adc
and
or
fistpll
insb
test
or
cmpb
cmpsl
dec
inc
imul
or
lods
movsb
addr16
xor
xchg
test
cltd
xor
xchg
lret
mov
cs
and
push
pop
add
push
stos
aas
lods
mov
sbb
cmp
cmpsb
cld
sub
pushf
sub
pop
fadds
inc
add
into
pop
add
sarl
inc
aaa
jae
mov
cmp
adc
mov
lock
add
fs
fadds
loop
lea
das
dec
xor
xchg
sub
gs
adc
mov
mov
loope
or
pmuludq
test
in
sbb
pop
mov
out
push
and
int3
push
sub
sahf
sahf
add
insl
sbb
add
into
xchg
mov
enter
inc
sbbl
pop
iret
int
mov
fs
mov
adc
clc
or
jmp
arpl
mov
pusha
addl
cld
sbb
or
inc
fidivrs
fdiv
adc
sahf
jle
jmp
adc
inc
pop
pop
mov
mov
pop
cmp
arpl
push
out
cli
dec
and
cld
mov
lea
inc
mov
dec
adc
xchg
mov
add
rcll
lcall
inc
adc
jmp
sahf
cs
sub
mov
jno
stos
fcmovnbe
sbb
lods
scas
and
orl
ljmp
sti
shrb
movsb
jecxz
lret
repz
mov
cltd
push
outsb
scas
push
into
scas
aas
and
imul
mul
addr16
lods
cmp
loope
ds
cmp
or
and
out
outsb
add
xor
enter
sub
scas
jns
or
cmp
jg
sti
js
jno
enter
xchg
js
ficoml
push
mov
push
jg
jb
cmpsb
push
popa
add
cmp
push
sahf
fsubrp
push
aas
orl
mov
jp
mov
jne
pushf
sub
in
cmpsb
out
pop
mov
cmp
sub
sub
movsl
lea
int3
adc
ss
rorb
push
add
pop
xchg
fs
jo
mov
or
adc
xchg
xchg
sahf
pop
and
gs
leave
and
sub
inc
sahf
arpl
call
jle
push
cmc
cmpsb
popf
movsb
jo
mov
adc
push
adc
dec
push
aas
sahf
cli
push
repz
mov
enter
out
fwait
loope
dec
popa
inc
loop
push
push
sbb
xlat
fcoml
push
addb
ja
faddl
cmpsb
ds
pop
sbb
aam
sarb
cmp
out
popf
ds
dec
fwait
inc
cmp
lret
adc
insb
sahf
pop
outsb
mov
and
fldcw
push
sub
mov
sahf
lret
mov
lret
iret
sub
ds
jl
jl
shlb
nop
sbb
leave
in
lret
mov
mov
adc
adc
pop
enter
jle
xchg
icebp
push
jle
mov
dec
xchg
shlb
cs
pop
or
fstpl
rorl
hlt
scas
fmuls
arpl
ret
xor
inc
arpl
xlat
xchg
mov
xchg
popf
xchg
fwait
mov
movsb
inc
lods
sub
sbb
mov
mov
mov
sbb
cmp
inc
cmp
mov
inc
dec
mov
pop
shll
popf
out
out
cmp
add
lcall
dec
inc
inc
ljmp
lds
inc
lret
xor
ljmp
ss
jge
push
jmp
in
std
cmpsb
stc
lock
mov
mov
dec
in
adc
ljmp
jge
push
mov
lock
aaa
addl
scas
fwait
add
insl
jns
cwtl
lea
ss
cltd
andb
mov
cltd
inc
mov
inc
out
cli
cli
mov
pop
push
or
and
inc
sub
jp,pn
rcrl
sbb
xor
es
jns
or
fidivl
pop
jg
dec
in
ds
push
jno
fwait
sbb
and
jge
repz
sub
push
xor
shrl
inc
jb
addl
push
mov
sub
add
sbb
out
notl
pop
subl
pop
xor
dec
pop
inc
add
and
mov
mov
int3
sbb
insl
das
mov
mov
enter
pusha
enter
ret
xor
or
mov
push
test
push
lret
mov
in
cmp
cld
mov
lcall
add
scas
xor
sub
sub
cmp
pop
cmp
and
sar
hlt
push
push
dec
inc
hlt
insb
in
and
fldenv
add
fidivrl
push
ljmp
jle
xor
aam
scas
lds
pusha
stos
xor
scas
jp
sbb
into
mov
jbe
jmp
dec
mov
repnz
daa
scas
rcl
scas
in
imul
loop
mov
loopne
mov
push
fildl
inc
push
das
and
fstp
pop
sar
add
pop
xchg
mov
pop
and
mov
pop
inc
mov
fisttps
lock
pop
jg
test
sub
out
push
xchg
add
inc
es
pop
xor
jge
mov
cmp
inc
mov
loop
lods
loopne
call
shlb
mov
ljmp
jmp
int3
xor
xor
out
sti
je
lock
out
lahf
and
push
mov
jge
leave
es
dec
fwait
ljmp
xchg
xlat
ret
cmp
cmp
cmc
ljmp
movsb
outsb
in
js
sub
adc
fdiv
iret
lods
test
xchg
xlat
mov
mull
in
cs
pop
push
orb
ret
movb
out
cwtl
and
hlt
insb
push
out
fwait
stc
iret
push
mov
ljmp
fwait
pop
pop
push
sbb
sbb
pop
adc
lea
fstpl
dec
movsl
and
sub
jle
lock
movsb
sub
aam
ss
jne
adc
fs
jp
lods
fwait
mov
fmuls
jne
adc
jmp
nop
xor
inc
insb
push
pop
mov
test
imulb
and
add
xor
notb
dec
aaa
mov
push
imul
int3
ret
pop
and
shlb
into
cmp
fldcw
es
or
fdivrl
rcr
shlb
in
popa
push
fwait
mov
or
cmp
ret
pop
fs
cmp
cs
mov
aad
mov
clc
xchg
lahf
inc
or
clc
xchg
test
hlt
inc
mov
xchg
lock
mov
xchg
int3
cmp
stos
push
or
lock
dec
xchg
inc
int3
movsl
mov
sbb
stc
js
es
mov
ret
addr16
std
xor
xchg
out
divb
pushw
test
add
sbb
les
in
jns
mov
in
in
or
inc
inc
dec
sub
in
pop
lods
cld
dec
mov
jecxz
sbb
das
cltd
loope
adc
push
loop
adc
into
fsubrs
jae
repz
xor
sub
ja
cmp
inc
adc
jmp
dec
icebp
sti
daa
add
add
es
pop
mov
jbe
lods
addr16
add
dec
imul
xchg
outsl
sub
xor
dec
jl
sub
data16
add
xor
mov
fsubrp
aam
push
inc
mov
push
shr
ret
mov
push
movsl
jg
fbld
xchg
cmp
push
outsl
inc
pop
movsb
pop
pop
xor
sub
sbb
cwtl
pop
loopne
aas
out
mov
sti
stos
int3
out
adc
ret
push
pop
sbb
fcomps
pusha
xchg
push
and
addr16
xchg
jle
mov
das
adc
mov
call
cmp
push
ret
xor
icebp
int
xchg
sbb
fwait
sbb
ret
lret
pop
rcl
jnp
inc
sub
inc
jg
rcl
pop
mov
add
lock
mov
jae
rol
cmpsl
inc
iret
lods
inc
inc
adc
das
add
adc
sti
cmp
jg
ljmp
repz
fcmovnb
jecxz
sbb
mov
inc
sahf
arpl
dec
sbb
adc
xchg
icebp
icebp
jp
adc
aaa
add
xchg
adc
out
shlb
jl
push
out
in
movsb
mov
inc
out
mov
int
loop
test
aas
stos
not
mov
jp
test
adc
mov
cmc
into
imul
aam
mov
loopne
adc
pop
cwtl
sub
cwtl
fsubrs
in
shlb
and
and
and
cmp
add
sarb
mov
jns
ret
dec
test
mov
rol
inc
pop
and
test
xchg
aad
xchg
push
js
stc
mov
aad
std
add
iret
mov
in
sub
leave
pop
fiaddl
xor
aam
adc
insl
cmp
in
dec
push
mov
push
aas
ss
repz
pop
fsubrl
sub
mov
xor
mov
popa
push
add
repnz
push
mov
mov
lods
cmp
dec
pop
scas
cmpsb
sbb
in
xchg
roll
cmp
mov
sarl
or
mov
sub
inc
xor
or
push
addr16
out
shll
fiadds
imul
xchg
lea
mov
lret
out
mov
sahf
fcomip
or
xor
cmpsl
arpl
push
jmp
jbe
cli
hlt
mov
push
push
fwait
cmpsb
cmpsl
sbb
shlb
cld
fstpt
in
xchg
rcll
xchg
mov
mov
loop
pusha
xorl
xchg
hlt
xor
pushf
and
sbb
lods
or
aam
pop
aas
inc
cwtl
sbb
mov
push
jge
inc
movsb
mov
push
ss
or
shl
jle
inc
loopne,pn
adc
sbb
subl
in
pushf
mov
movsb
iret
and
and
sub
mov
stc
pushl
sarb
and
xchg
mov
mov
pop
cmpb
cmpsb
dec
das
push
dec
in
jno
std
add
push
mov
and
lods
call
cmpsl
movsl
call
cmp
ficoms
xchg
repz
ja
mov
dec
enter
pop
cli
jp
lods
ljmp
out
push
outsb
pop
ss
rorl
mov
mov
push
ss
pop
leave
or
jg
sub
or
cwtl
rorl
push
inc
fs
adc
jb
jl
fsubr
andl
jae
or
int3
cs
test
stos
pop
mov
out
pop
loopne
popa
sbb
mov
jns
aam
dec
clc
lock
add
inc
dec
or
mov
fbld
icebp
add
mov
xchg
mov
sbb
aas
orl
cmp
xchg
inc
dec
dec
push
sub
out
fadd
std
cld
data16
jo
fnstcw
lea
test
aam
ds
xlat
sar
shrb
sub
es
add
into
inc
icebp
mov
test
stos
xchg
out
aaa
or
stc
jmp
jmp
decb
mov
fsubl
in
stos
pop
push
popa
test
dec
or
das
inc
les
jne
xchg
mov
pop
movsl
ffreep
addr16
sub
inc
lea
sub
inc
inc
js
sbb
push
fmull
or
push
ss
call
gs
stos
mov
movsl
popl
or
jp
test
int
scas
add
iret
add
fcoms
xchg
rcrb
mov
xchg
adc
das
add
push
push
std
cmp
pop
test
pop
bnd
dec
aas
jle
push
push
lods
lea
loopne
fnsetpm(287
xor
hlt
mov
stos
xorl
pop
cmpsl
adc
ret
stos
and
xor
cmp
or
cmpsb
rclb
sbb
and
lahf
scas
jecxz
mov
out
and
cwtl
lea
mov
orl
xchg
adc
mov
sbb
int3
push
out
dec
xchg
cs
ret
je
lcall
je
and
jae
adc
out
cld
gs
cmpsl
jle
add
repnz
sbb
jae
jecxz
mov
imul
and
ja
ljmp
sub
xor
clc
dec
stos
add
pop
inc
push
in
neg
pop
mov
jno
inc
push
roll
or
pop
loopne
popf
rcll
sub
ja
loop
sahf
call
aaa
jg
leave
inc
mov
mov
into
pop
mov
loope
mov
xchg
mov
lret
inc
lcall
jne
jl
shr
dec
cmp
lods
clc
xor
adc
push
mov
aad
cld
jae
jbe
sbb
sbb
xchg
mov
pop
and
rol
jmp
std
into
xchg
mov
cmp
or
hlt
int
stc
mov
mov
out
movsl
jnp
add
mov
ljmp
les
jbe
adc
dec
in
and
out
cmp
fsubrs
loopne
movsb
push
inc
testb
xchg
sub
mov
mov
fs
dec
mov
add
out
clc
xor
push
fdivl
sub
out
or
nop
jns
and
orl
rcrb
pop
or
das
fcoml
xor
push
insb
ss
mov
sub
adc
ror
jecxz
cmc
mov
in
push
addr16
aaa
cmpsl
rcrl
daa
push
pop
loopne
mov
sub
aas
stc
outsb
and
cmp
jmp
or
pushf
fildl
inc
arpl
fnstsw
fcmovnb
fstpt
mov
js
pop
xchg
pop
xchg
outsl
shll
sbb
loope
in
cwtl
sbb
movsb
push
rorl
daa
int3
cmpl
dec
popa
sarb
insl
ret
jmp
out
movsl
push
imul
stos
push
sub
loope
test
aam
mov
repnz
inc
cwtl
push
mov
punpckldq
push
adc
jnp
test
loop
inc
mov
xchg
jmp
jmp
push
or
mov
or
jo
insb
cmpb
iret
push
mov
pop
pusha
js
mov
das
add
insb
insb
dec
pop
imul
cmpb
mov
mov
mov
mov
sahf
adc
inc
adc
mov
gs
aas
pop
mov
and
movsb
push
mov
jae
add
cmp
loopne
js
xor
inc
bound
mov
test
fidivl
fnsave
hlt
or
daa
xchg
mov
jecxz
or
jg
dec
mov
xor
stos
fs
push
inc
sub
xor
jle
fiaddl
repnz
sub
divl
shlb
mov
add
jecxz
xlat
fiaddl
xchg
cmp
jmp
out
pop
xor
push
adc
sbb
jb
jo
sbb
jmp
outsl
xor
pop
jl
adc
cmp
iret
xchg
jae
and
icebp
ljmp
cmp
xchg
mov
inc
lcall
in
mov
lea
aas
fists
lock
cmp
dec
lret
ja
push
outsb
decb
mov
jg
or
lds
dec
lds
and
and
movsb
cltd
and
les
loope
mov
movsl
xor
cmp
push
aad
andl
cmp
in
xchg
stos
sub
addr16
enter
loope
inc
xchg
mov
mov
dec
xchg
out
mov
cmpsb
sub
lcall
cmp
incb
rep
mov
repnz
and
jb
ds
push
push
scas
pop
sbb
inc
jo
pop
sub
adc
mov
xchg
in
jl
sbb
dec
jp
lahf
mov
mov
sahf
ds
or
dec
mov
inc
fnstenv
data16
loopne
fsubp
lretw
hlt
jno
cmc
nop
mov
push
scas
push
cmpsb
lcall
test
pop
test
xlat
mov
sub
subl
lods
push
fistl
ss
in
or
pop
push
testl
push
mov
jg
es
mov
xchg
mov
notb
mov
scas
push
adc
add
dec
cmpsb
xchg
mov
xchg
mov
repnz
sub
add
fs
adc
add
pop
xchg
incl
xor
push
add
std
loope
push
ror
or
jae
xchg
insb
xchg
shr
jb
test
in
inc
bound
mov
shlb
jnp
push
mov
cmp
cmpsl
add
mov
xchg
dec
add
mov
and
push
pop
mov
sub
jl
jp
push
and
xchg
arpl
add
push
adc
adc
adc
imul
test
push
and
popa
or
lret
cmpl
imul
xchg
jg
xchg
test
out
cmc
xlat
cli
scas
mov
pop
mov
and
pushf
mov
or
cmc
inc
jge
xorl
test
loop
xchg
mov
jmp
loop
es
js
adc
hlt
mov
inc
aad
in
sbb
pop
inc
xor
xor
lods
stos
cmpsb
movsb
push
incl
sbb
push
jmp
xor
fistl
hlt
stos
popa
stc
sub
and
lret
aad
and
jp
lcall
mov
push
pop
or
sbb
jge
mov
hlt
pop
bound
xchg
jl
adc
sub
cmp
jbe
push
pop
int
les
fcompl
xor
pop
push
loope
ds
test
mov
iret
scas
scas
xor
lcall
mul
ss
push
mov
xchg
dec
sub
cmp
jno
mov
aaa
dec
into
ss
pop
jns
bound
xor
sbb
pushl
cmp
cmp
outsl
arpl
fdivs
aad
out
test
push
mov
loope
sub
adc
lret
pop
pop
jbe
pushl
inc
shll
rorl
fistps
sbb
dec
sti
shl
mov
dec
popa
mov
aaa
lea
fistpll
add
push
xchg
lods
pop
or
inc
in
lea
push
scas
es
pushf
xchg
cmp
ret
mov
nop
pop
dec
xor
dec
pop
jge
mov
fistpll
pop
negb
pop
fistps
and
aad
and
sti
loope
sbb
mov
cmp
add
xchg
push
cltd
and
inc
pushf
cmpsb
jnp
insl
clc
mov
jmp
mov
xchg
sbb
test
sub
add
loopne
and
xchg
leave
rcll
xor
ret
outsb
or
mov
cmp
int
sahf
mov
xchg
pop
rol
ja
lock
adc
sti
sub
add
stos
cmp
popa
inc
das
add
dec
add
cmp
popf
cmc
int3
inc
push
push
movsl
mov
xlat
arpl
add
mov
fadds
mov
cld
pushf
mov
sbbl
fistpl
pop
fildl
and
loop
sbb
jne
add
das
sbb
iret
in
sbbb
push
push
mov
pop
xor
cmp
xor
cld
pushf
negb
mov
pushf
xlat
lcall
add
js
and
rcr
dec
aaa
sti
mov
mov
xor
jnp
pop
fnstenv
pop
cwtl
fdivrl
clc
xchg
idivb
inc
cmpsl
fildll
std
sub
test
sti
fs
pushf
aaa
das
mov
imul
adc
cmp
loope
xor
aam
call
and
pop
jnp
jns
add
daa
insl
xor
call
pop
dec
mov
add
inc
sarl
icebp
cmp
lcall
and
jb
popa
jnp
dec
jg,pn
pop
push
adc
les
push
push
pop
dec
mov
mov
cmp
dec
insl
dec
pop
das
pop
jne
pop
mov
add
or
xor
ja
ss
iret
rcrb
js
scas
adc
lahf
je
xor
inc
pop
mov
repnz
cmp
popl
push
out
adc
jo
iret
out
out
fmull
aaa
jne
xor
xchg
clc
loop
sbb
nop
ret
fwait
mov
dec
mov
or
das
pop
dec
pop
xchg
cmp
xchg
bound
and
mov
ds
jmp
pop
lods
xorl
fwait
mov
das
js
jl
or
sub
in
fdivr
inc
push
jno
icebp
xchg
mov
cmp
fildll
scas
push
cmpsl
inc
push
lcall
jno
push
or
pinsrw
bnd
mov
lret
inc
test
mov
popf
repz
cltd
push
add
lea
cltd
xadd
jae
mov
in
mov
ja
cmpsb
mov
inc
push
mov
lahf
mov
push
push
mov
sbb
fiaddl
adc
sbb
mov
aad
push
jne
mov
fs
shll
mov
sub
cmp
mov
and
fnstenv
add
insl
xor
mov
stos
or
jno
pop
mov
popf
imul
ljmp
ds
pop
out
mov
adc
mov
xor
pop
ret
jo
xchg
scas
mov
fmul
sbb
hlt
inc
push
ja
add
and
inc
mov
insb
push
sbb
and
adc
dec
jb
inc
mov
push
pop
rol
int3
mov
pop
popa
xchg
mov
push
int
leave
and
push
out
mov
mov
or
adc
push
iret
pop
jle
cltd
or
ljmp
jno
xor
mov
push
imul
or
hlt
mov
mov
push
xchg
sub
mov
loop
xor
lret
jge
pushf
add
push
xor
in
vmovd
xchg
js
ss
or
add
pop
add
adc
repnz
pop
and
mov
mov
pushl
xchg
xor
xor
enter
std
jbe
xchg
insl
je
clc
xchg
pop
jmp
mov
mov
push
push
insb
inc
pop
jb
cwtl
pop
jns
fnstsw
cmpsb
and
sbb
sbb
mov
add
jne
inc
mov
das
aas
fildll
dec
outsb
out
jmp
or
jns
xchg
in
lea
xorl
test
jge
push
popf
dec
enter
or
jg
and
ret
pop
and
push
pop
and
shlb
int
loop
adc
call
mov
mov
jae
sarl
mov
pop
jecxz
cld
mov
and
dec
in
dec
sub
outsl
push
cmp
xor
cmpsl
jb
lods
es
push
rorb
jl
dec
ficoml
mov
sbb
out
inc
dec
adc
gs
dec
ret
xor
adc
scas
sahf
pusha
into
jmp
push
xor
inc
dec
js
gs
lcall
lahf
in
sub
push
addb
cs
aad
fs
mov
jo
xchg
cmp
pushf
insl
jns
aas
in
inc
inc
sub
inc
outsl
les
sbb
cmpsb
inc
lret
sarb
jge
stc
xor
jno
mov
les
push
lock
mov
push
fcomps
mov
lea
cmp
popf
dec
push
cmp
add
into
sub
fstpl
inc
movsl
inc
lods
push
scas
iret
cli
cs
test
imul
test
in
and
ja
mov
xchg
mov
sub
pop
jg
jle
push
ja
shlb
pushf
enter
nop
cmc
inc
sub
loop
fiadds
jae
fiaddl
jp
dec
mov
cld
lods
jecxz
and
mov
fadds
int
pop
and
jmp
test
shl
clc
jmp
je
dec
sbb
xchg
lret
push
dec
mov
scas
insl
pop
cs
pop
jle
lahf
sahf
loopne
lahf
in
out
call
pop
fistl
repz
pusha
ss
push
clc
cmp
mov
aaa
push
into
stc
push
sbb
aad
adc
adc
or
xor
mov
out
xor
jbe
cld
pop
iret
mov
test
sub
pop
sahf
mov
adc
mov
in
xor
aam
cmp
inc
mov
stos
xlat
imul
pop
add
imul
add
add
jl
and
mov
idivb
push
pop
mov
pop
ret
lock
adc
sbb
js
mov
jne
fidivrs
mov
xchg
ret
push
out
and
leave
push
push
inc
aam
or
loope
pop
cwtl
mov
test
das
ds
mov
add
adc
ljmp
xor
pop
outsb
cmp
pop
jmp
lds
dec
pop
mov
popf
daa
mov
mov
cmc
scas
fdivl
dec
push
inc
mov
push
imul
andl
xor
pop
adc
cltd
xor
loop
out
clc
enter
and
loop
lcall
mov
jl
mov
jbe
addr16
add
popf
xchg
into
fs
mov
jns
adc
and
mov
xchg
or
stos
cmpsb
sbb
mov
stos
pop
dec
adc
or
insb
loopne
sbb
mov
popa
jecxz
push
lret
push
les
inc
in
aad
or
jnp,pn
das
test
fwait
push
pop
pop
mov
andl
mov
mov
cmpsw
add
sub
bound
test
add
cwtl
mov
in
aad
cmpl
adc
push
scas
test
mov
int3
dec
lcall
iret
lcall
cmp
repz
mov
jns
xchg
test
pushaw
movsl
mov
inc
lret
dec
lahf
inc
cmp
push
int
mov
mov
push
jecxz
or
notl
sub
add
inc
xor
mov
mov
ja
lret
ss
fldenv
mov
jnp
adc
dec
mov
sub
jg
ds
and
imul
mov
aaa
lcall
add
mov
loope
loope
sahf
rcrl
into
addr16
outsb
stos
daa
ret
sbb
imul
push
lret
xchg
sbb
mov
popf
mov
imul
pop
add
pop
insl
insl
fstps
push
pop
scas
ret
xchg
fldt
mov
mov
outsb
add
mov
mov
sbb
mov
fidivs
cmp
push
push
ret
mov
inc
shrd
outsb
fdivrl
jns
shrb
leave
decb
jnp
xchg
mov
xor
jp
mov
dec
test
int
js
mov
outsl
jnp
lcall
and
rcll
push
test
mov
add
mov
dec
cmpsl
pushf
stos
mov
gs
cmp
mov
scas
jmp
cwtl
jg
stos
adc
inc
pop
xlat
in
sbb
lock
and
nop
add
mov
mov
push
xchg
int3
dec
jecxz
out
and
xchg
cmpsb
shrl
push
or
test
mov
adc
sbb
jns
sahf
and
sbb
mov
std
je
loope
or
cmp
mov
repnz
bound
test
pop
mov
add
mov
daa
mov
xor
aam
dec
clc
jae
outsl
add
pop
jle
inc
mov
cmpsb
int
lods
cmp
jp
xor
scas
sub
xchg
jl
or
add
int3
mov
jl
das
xor
clc
sbbb
xchg
or
mov
data16
stc
pop
cmp
jo
add
sub
push
push
sti
in
mov
stc
lods
rcl
stos
cmp
xchg
inc
dec
mov
mov
repnz
or
inc
pop
and
xorb
jp
add
xchg
shl
cli
mov
mov
xchg
repz
add
fwait
mov
jnp
inc
sahf
dec
and
xchg
jne
xor
cmp
pushf
repz
roll
cmp
orb
in
inc
lea
sti
scas
lock
out
arpl
in
adc
xor
sarb
cmp
scas
inc
aas
push
inc
inc
faddp
sbb
sbb
icebp
xchg
xor
icebp
mov
mov
insb
into
xor
mov
xor
loopne
pop
mov
or
iret
nop
jg
movsl
loopne
dec
xchg
dec
insb
clc
push
icebp
adc
push
stos
ljmp
jnp
inc
imul
cld
divl
cli
rorl
ja
dec
mov
sti
aas
in
loope
lret
jg
aad
lcall
out
mov
popa
dec
cmp
fbstp
icebp
orl
dec
dec
daa
pop
sbb
inc
inc
push
call
pop
movsl
jbe
mov
xor
or
inc
ss
jae
enter
jae
popf
into
push
std
inc
scas
jno
lcall
leave
movsb
ret
jae
mov
mov
mov
jns
xor
cmpsb
push
jns
stos
pop
dec
cmp
and
xchg
xchg
dec
pushf
cmp
pushf
dec
loop
sti
xor
mov
insl
jg
movsl
cmc
cld
inc
shll
lds
int3
or
dec
sarb
mov
fistpl
xchg
xchg
jmp
gs
xor
inc
call
inc
outsl
iret
icebp
aaa
dec
jno
lret
sti
mov
mov
xchg
out
movsb
fcoml
mov
cltd
lock
clc
loop
mov
rorl
xor
mov
and
ret
addb
ja
in
in
mov
sub
ljmp
or
jecxz
xchg
xchg
push
pop
jge
push
leave
hlt
fwait
and
cmp
push
js
lods
pop
in
daa
mov
lods
mov
and
xor
jne
or
out
inc
mov
mov
test
cmpsl
mov
cmp
mov
ljmp
pop
mov
lods
jge
push
shrb
add
in
sbb
je
push
dec
push
clc
add
inc
xor
mov
push
cmc
and
mov
pop
fistps
lds
in
rcl
test
sahf
xchg
push
ja
xchg
sbb
sub
and
out
incl
fdivrp
scas
in
pusha
fcmovb
or
dec
movsb
iret
test
idivb
jbe
mov
sbb
and
xor
xchg
in
lcall
pop
inc
mov
int3
test
inc
stos
cltd
jg
sub
aam
mov
cli
iret
dec
rdpmc
jbe
mov
dec
cli
cmp
sub
stc
fidivs
in
ss
fs
pop
sub
ss
out
repnz
out
cs
mov
cld
ja
mov
mov
adc
je
cmp
ret
rorb
fnsave
cmc
int3
adc
in
mov
test
aam
clc
mov
lcall
jns
push
cmpsb
sbb
fbld
lahf
andb
lock
popf
lahf
cmpsb
mov
mov
gs
rcll
das
lahf
pop
fwait
insl
xor
xor
and
push
mov
sub
orb
inc
enter
xor
adc
adc
jmp
fistpll
insl
and
xor
dec
mov
insb
mov
in
sub
dec
fisubrl
sbb
stos
mov
sarb
lret
dec
pop
inc
or
adc
movsb
out
out
pop
int3
negb
or
scas
hlt
dec
test
dec
scas
movsb
xchg
out
sbb
mov
push
dec
daa
xor
pop
out
in
fdivr
movsb
imul
jb
mov
pop
imul
jmp
jns
std
push
aas
call
dec
xor
add
stc
sub
pushf
cld
mov
sbb
jp
iret
stos
mov
movsl
fsubs
ret
movsl
xchg
inc
pop
mov
push
cmp
jne
add
addr16
cmpsl
scas
imul
mov
stc
mov
std
idivb
lcall
mov
roll
lret
dec
and
int3
dec
rorb
jne
test
pop
mov
xor
insl
dec
dec
mov
inc
or
cmp
aas
dec
mov
xlat
sbb
out
jg
xor
push
pushw
popa
leave
mov
mov
mov
and
sar
dec
rclb
shll
dec
xor
orl
push
ds
mov
cmc
inc
pop
ret
inc
or
pop
incb
lret
sahf
or
lea
lea
push
push
into
nop
in
or
push
in
pop
sub
sbb
jl
je
int3
nop
adc
pop
insl
mov
cmp
outsb
mov
adc
sub
test
sbb
push
and
lcall
inc
int
cltd
jecxz
pop
rcrb
jae
push
aad
mov
sub
push
mov
jb
sbb
sbb
mov
cmpsb
sbbl
sub
addl
pop
sarl
mov
out
sbb
shll
das
cmc
add
and
cmp
out
push
lods
ja
imul
shrl
or
xchg
out
cmp
std
sbb
mov
inc
or
jmp
in
mov
movsb
sbb
les
and
jl
lds
adc
dec
rcrb
inc
je
dec
fisubl
and
test
mov
xchg
dec
inc
sub
ljmp
jb
movsl
insb
mov
push
mov
shlb
mov
filds
add
pop
xchg
inc
in
fmuls
lods
pop
ja
test
stos
pop
add
addr16
sbb
and
dec
xchg
cltd
les
into
or
in
cmp
pop
lods
jns
pop
mov
sub
sbb
dec
mov
add
aaa
addr16
popa
sbbb
andb
addr16
mov
mov
in
add
push
push
inc
in
pusha
rolb
lods
jo
pop
sub
and
cmp
xor
cmp
xor
lret
or
in
outsl
and
das
mov
cs
and
and
push
mov
repnz
leave
cmpsl
xor
sub
push
dec
push
hlt
das
xchg
cld
dec
or
lds
pop
jnp
jge
or
mov
push
cmp
das
loope
popa
loopne
push
jecxz
add
cmp
inc
mov
mov
push
push
cmc
sbb
ljmp
xor
ja,pt
add
frstor
fucom
leave
and
into
insl
lock
or
inc
sbb
ficoml
xor
add
and
shlb
push
cmp
pop
jp
test
push
pop
inc
addr16
inc
divb
push
movsb
adc
fisubl
cmpsl
xchg
fwait
je
mul
imul
mov
xchg
ss
jge
xchg
cmpsl
pop
push
cld
int3
lcall
andl
in
mov
add
popf
sbb
scas
test
ret
shl
pop
je
or
mov
in
movsl
les
and
jg
jge
adc
xor
jge
cld
sbb
pop
lcall
cmp
rep
ret
add
jmp
ret
sbbb
enter
sbbb
and
add
xchg
je
cwtl
xor
jnp
int3
add
cmp
push
movl
pop
xchg
mov
lahf
sub
mov
xchg
inc
cmp
inc
dec
or
das
xor
inc
fistl
addb
xor
xor
jmp
jmp
movsl
cli
cmpl
rolb
aaa
std
andb
cmp
lcall
and
fistps
sbb
dec
sub
lret
pop
sbbl
jecxz
jl
cwtl
shrl
test
or
mulb
andb
add
pop
sahf
and
nop
xchg
push
enter
sti
sarl
loope
mov
add
addb
mov
es
xlat
push
mov
cmp
jne
mov
jmp
pop
test
shrl
into
orl
inc
nop
stc
stc
fcoms
mov
jae
divb
adc
cmp
adc
mov
add
je
mov
mov
daa
aas
add
and
int3
jne
fcoml
inc
call
les
ret
sbb
pop
sub
or
and
mov
sbb
dec
add
ret
imulb
mov
adc
outsb
and
insb
data16
add
inc
jb
es
mov
pop
iret
cltd
inc
ret
int
mov
fstpt
sbb
adc
mov
hlt
das
shr
test
pusha
and
mov
test
push
int
lock
push
dec
lods
mov
sbb
not
cli
sub
dec
test
rclb
adc
fnsave
lods
pop
xor
fldenv
sub
out
jnp
xor
das
pushf
pop
int
popf
enter
mov
adc
outsb
pop
sbb
out
pop
repnz
aam
cmp
cmp
jge
xchg
xor
out
pop
sti
mov
cmp
sahf
jp
xchg
xor
xchg
rolb
outsb
int
or
mov
mov
ds
aaa
in
and
out
iret
loop
pop
rcrl
out
pop
push
test
je
or
lock
jns
adcb
ds
mov
shlb
aaa
and
stc
xor
inc
adc
mov
fistl
js
test
mov
mov
sbb
daa
inc
mov
jge
or
cmpsb
aad
rorl
lahf
mov
xchg
fisubrs
pop
push
mov
aaa
mov
add
scas
cli
or
test
loope
stc
pop
testl
and
pop
testl
ss
mov
maskmovq
imull
fmuls
pop
inc
sbb
fwait
mov
inc
mov
xchg
sbb
add
outsl
xchg
xchg
cld
push
push
in
cmp
push
aam
jp
dec
xor
test
lods
jbe
es
fadds
ja
fwait
mov
push
push
stos
iret
movsb
in
dec
popf
fiaddl
or
les
mov
sbb
idivb
push
shl
int3
ljmp
test
in
cmpsb
mov
jle
jne
cli
or
sahf
push
sarb
mov
sbbl
loope
push
in
js
push
inc
in
xorb
mov
nop
jnp
dec
ja
pushf
into
sub
lcall
outsl
call
sysret
inc
pop
jno
push
and
dec
jmp
enter
ljmp
adc
jns
out
jecxz
adc
insl
cld
int3
int3
cmp
jae
xor
pop
cmpsl
xor
test
mov
cmp
loope
dec
sub
or
jmp
jmp
mov
fildl
adc
sbb
and
fdivrs
add
add
dec
push
bound
jno
in
mov
btr
or
rorl
ret
add
xor
movsl
icebp
dec
enter
js
mov
jne
mov
rcr
sub
lret
mov
stos
adc
lea
bound
push
push
jp
mov
and
shlb
addl
and
sbb
rorb
jmp
mov
xor
mov
lret
in
adc
jno
dec
sbb
dec
xchg
dec
bound
fs
add
jo
jp
lcall
dec
stc
or
out
mov
movsl
out
inc
mov
push
xlat
sbb
jbe
pop
fsubrp
shlb
mov
filds
pop
lret
testb
adc
add
lock
dec
push
mov
push
aam
sbb
popa
stc
js
les
leave
mov
jge
ss
sbb
xor
rcrb
jp
test
jne
jnp
or
aas
jnp
jmp
inc
jbe
enter
sbb
ss
and
adc
pop
pop
mov
pusha
idivl
xchg
push
jno
xor
jnp
scas
insb
dec
hlt
cli
mov
call
lock
cmpsb
xor
arpl
xor
pop
pop
pusha
sub
mov
out
iret
pop
sti
aaa
xchg
je
mov
and
inc
adc
popf
loopne
call
fs
mov
jl
and
iret
mov
inc
outsb
mov
pop
imul
dec
add
mov
insb
aam
push
cmp
mov
in
lret
dec
dec
je
or
rolb
or
imul
lret
gs
out
rclb
sub
lds
sbb
xchg
sub
icebp
int
cmp
jb
fistpl
or
jne
ret
aas
inc
add
xlat
push
repz
xor
mov
fs
sub
pop
out
and
inc
movsb
aad
insl
mov
mov
into
or
pop
mov
scas
mov
dec
adc
sti
jbe
adc
inc
mov
mov
outsb
mov
xchg
loope
sahf
xchg
and
jo
pop
ljmp
jp
movb
jae
push
fidivl
mov
adc
and
and
aad
xchg
iret
popa
rorb
cmp
push
push
jle
cli
or
arpl
div
mov
xor
adc
push
shll
fs
xor
mov
ja
fisttpl
sbbb
scas
inc
es
fsubs
cmpsb
add
inc
mov
iret
dec
xor
cmp
hlt
fnsave
pop
je
in
out
and
add
fs
icebp
mov
dec
aad
pop
mov
mov
cmp
mov
dec
imul
adc
jmp
stc
push
inc
push
shlb
adc
push
insb
jnp
pop
out
fdecstp
shll
daa
jnp
popf
leave
sub
in
lret
jne
sub
add
mov
xor
inc
movsl
sar
sahf
mov
jg
dec
in
mov
mov
subl
iret
outsb
clc
aas
out
cltd
hlt
xorl
mov
mov
push
or
xchg
into
mov
sub
jmp
mov
mov
xchg
inc
sti
mov
sarb
push
shlb
clc
data16
mov
mov
pushf
inc
adc
fs
mov
inc
out
ja
mov
pop
sub
mov
cmp
jae
add
dec
aaa
es
fnstsw
popf
aam
cli
shrb
aaa
mov
ret
outsb
jg
inc
adc
test
test
add
fcoml
aam
pop
out
jae
pop
iret
and
xchg
pop
xor
adc
rclb
adc
adc
out
in
push
divb
and
and
or
adc
adc
std
push
pop
mov
sahf
es
push
lock
negb
rcrl
and
les
cld
xchg
mov
mov
sub
dec
mov
lret
or
push
pop
fsubs
sbb
push
add
mov
mov
xchg
outsl
add
push
je
pusha
mov
fisubl
xchg
enter
out
mov
popl
sub
leave
push
in
jl
inc
push
xor
rcrb
outsl
inc
rcrb
xor
push
or
jp
out
gs
jle
test
inc
aam
pop
loopne
sub
add
cs
lea
lods
jge
mov
je
sbb
xchg
dec
pop
popa
ret
pop
pop
add
push
enter
rorb
loopne
add
push
push
popa
fwait
mov
clc
and
sub
shl
lds
les
xchg
push
pusha
pusha
imul
pop
and
insl
dec
dec
jmp
cltd
xor
mov
sbb
mov
mov
mov
or
mov
jae
imul
ret
arpl
das
cmpsl
in
cmp
dec
cmp
mov
scas
xlat
sbb
sbb
add
leave
out
or
push
jmp
sub
pop
jle
dec
jns
or
aaa
xchg
loop
sub
shlb
mov
lock
shlb
or
add
add
pop
gs
push
fistpl
xchg
inc
push
adc
mov
fistps
jle
mul
aaa
dec
aad
mov
lock
adc
iret
inc
jae
mov
scas
dec
cmp
dec
xorl
adc
inc
adc
ja
je
cmp
ret
pop
cmp
insl
loopne
cwtl
mov
xchg
mov
insb
cld
movsl
out
imul
repz
and
dec
mov
sub
cmc
mov
sub
fwait
in
push
mov
jns
push
in
hlt
mov
gs
dec
push
xor
pop
mov
icebp
lods
mov
add
fisttpl
adc
repnz
mov
cmp
pop
mov
mov
out
mul
outsl
xchg
jmp
rolb
mov
mov
mov
in
xchg
mov
fnstsw
loopne
lods
inc
sbb
and
xlat
pop
sub
in
imul
jo
pop
inc
test
dec
or
lods
xor
ret
popa
inc
xchg
sbb
or
and
repnz
xchg
punpckhwd
push
push
dec
ljmp
and
mov
insl
xor
fs
bts
mov
jle
push
aas
mov
adc
call
add
rorl
xchg
xor
push
xor
sub
sbb
int3
cmp
or
lock
gs
pusha
sbb
inc
imul
xor
mov
jns
xor
or
aas
mov
cmp
mov
push
jo
sbb
sbbb
divb
mov
mov
sub
movq
mov
es
or
call
test
ficoms
dec
cmp
sub
psrlw
pusha
shrb
lret
sbb
adc
icebp
adcl
add
scas
sti
mov
dec
or
lods
pop
mov
add
push
and
push
int3
or
test
push
loopne
cmp
mov
pop
dec
pop
push
xor
cmp
pop
sahf
and
mov
sub
pop
inc
sub
and
mov
push
adc
jl
loopne
je
pop
add
adc
and
in
or
cld
pop
dec
mov
movsl
or
mov
adc
xchg
jmp
mov
push
pop
lods
push
mov
dec
mov
sub
icebp
inc
frstor
jne
cmp
jns
mov
pushf
cmp
xor
lods
mov
in
lea
cmc
jmp
insb
lahf
xchg
and
lock
jl
mov
mov
mov
scas
cwtl
mov
mov
inc
xchg
mov
mov
jae
xor
push
jo
adc
int
xchg
jae
jecxz
fildl
jl
add
aad
sub
mov
jge
sub
push
jecxz
fmuls
mov
dec
pop
std
rorl
lds
mov
inc
lds
or
shr
lods
cmp
rcll
xor
cli
lds
or
fninit
jae
pop
or
ljmp
in
std
sub
cmp
lcall
pop
sbb
inc
popa
jns
loope
fdivs
stc
ljmp
mov
xchg
not
mov
sbbb
fdivp
ret
pop
outsl
xchg
jno
lea
jns
jno
inc
push
ja
xchg
xlat
jns
pop
dec
in
add
add
jne
mov
and
mov
lcall
jns
mov
jge
inc
push
sbb
cmpsb
jge
outsb
push
pop
jnp
das
push
pop
jg
stc
cwtl
jae
jge
fwait
mov
fnstenv
jmp
aas
jmp
decl
or
adc
add
outsl
call
dec
fcompl
push
movl
mov
or
lods
jnp
push
out
pop
jne
insb
push
int
pop
fwait
scas
pop
sbb
pop
sub
cmpsl
push
adc
outsb
insl
pushf
or
js
mov
out
jb
test
add
fcmove
dec
fists
lods
pop
insl
aad
dec
loop
add
inc
adc
jbe
jno
add
dec
jbe
int
push
fisttps
sub
popf
jbe
jns
mov
scas
jl
dec
dec
rorl
cltd
leave
sub
push
aaa
addr16
mov
call
xor
les
cmp
mov
pop
fisubrs
arpl
incb
inc
inc
push
imul
ss
popa
mov
mov
xchg
inc
jae
in
jle
fs
arpl
iret
ss
push
les
fwait
mov
mov
rclb
out
out
mov
je
loopne
or
stos
mov
mov
dec
mov
fs
call
negl
icebp
popa
xchg
lret
clc
jno
ss
pop
mov
leave
rorb
mov
test
mov
aaa
inc
mov
xlat
sarl
cmp
xor
ja
mov
sbb
lcall
mov
aad
and
sbb
icebp
jb
mov
mov
push
push
jnp
dec
mov
jb
push
je
sub
mov
lods
arpl
pop
mov
out
inc
loope
loop
xchg
lods
sub
mov
mov
add
jno
mov
mov
out
or
cltd
mov
mov
dec
lcall
push
cmc
and
addr16
mov
loope
pop
lret
sub
movsb
lea
insb
xlat
inc
or
adcb
das
push
xchg
stc
addb
fsubr
and
jb
lods
stos
pop
shlb
push
add
aas
or
mov
xchg
jmp
clc
mov
push
or
orl
out
aaa
dec
insb
in
xorb
lahf
sti
adc
sbb
rol
repnz
cld
inc
xchg
mov
adc
push
mov
std
mov
repnz
sbb
inc
call
push
jecxz
orl
jge
daa
aad
lods
mov
aaa
mov
test
arpl
sbb
fcoml
pushf
shrb
mov
outsl
adc
imul
arpl
jo
mov
cli
mov
mov
xor
mov
pusha
adc
push
add
cmp
mov
pusha
push
icebp
aad
cmp
ds
inc
dec
pop
sub
loope,pn
push
ds
movsl
and
dec
ja
pop
ret
xor
mov
cmp
pop
insl
xchg
test
ja
fcomps
xor
pop
mov
inc
addr16
int
lahf
stos
cmp
push
sbb
in
aam
mov
and
std
shlb
iret
push
gs
adc
push
xor
or
pop
mov
adc
and
jle
inc
and
sub
inc
out
int
clc
push
movsb
fmuls
xor
xor
pop
jnp
push
adc
add
pop
fnstcw
push
mov
sub
xchg
js
cs
cs
dec
dec
in
push
pop
sub
bound
dec
jns
les
push
test
shlb
ss
ja
and
cs
jo
push
negl
not
les
dec
sub
mov
xchg
mov
mov
in
faddl
mov
jge
repz
cs
pop
out
cmp
out
loopne
mov
mov
js
dec
ljmp
fbld
mov
mov
cmp
ds
add
jmp
sub
aas
cmp
xorl
jns
je
sbb
push
out
inc
cmc
pop
or
stos
dec
out
fldt
pop
jl
mov
movsl
bound
sar
in
xchg
lcall
jno
dec
inc
jno
inc
or
insb
jmp
and
xor
inc
sbb
dec
cltd
or
push
int
stos
cmp
xchg
mov
shl
xchg
push
loopne
loope
fiadds
sar
mov
inc
cld
adc
cmp
or
mov
rol
fwait
sbb
mov
ss
mov
inc
roll
inc
iret
andb
push
jmp
add
add
in
movl
push
les
pop
jge
and
push
ffreep
push
mov
jne
pop
lahf
cmpsb
lret
xor
aas
xchg
xchg
inc
push
inc
xchg
das
roll
jge
icebp
mov
xchg
push
lods
pop
imul
xchg
jle
mov
pop
or
push
lods
popa
sbb
and
cmpsb
xchg
arpl
or
cmp
jmp
inc
jo
imull
cli
dec
in
xchg
mov
cli
daa
shrl
adc
insb
mov
xor
mov
inc
mov
mov
pop
mov
xor
mov
mov
fisttps
mov
popa
or
popf
cmp
popf
imul
mov
cmp
dec
inc
sbb
pusha
xor
push
out
xlat
add
cld
mov
push
add
arpl
ret
adc
fwait
les
sahf
pop
mov
or
push
and
outsl
fldl
stc
lds
gs
ficompl
jle
into
cld
shl
dec
dec
mov
jnp
jnp
xor
cwtl
pop
sbb
mov
mov
decb
rcll
mull
push
xor
popa
loope
nop
xlat
jns
pop
jns
mov
xchg
stos
mov
nop
jp
test
or
jns
mov
add
cmp
out
lods
fiadds
jno
jl
or
push
push
xlat
repnz
xchg
rolb
jmp
xor
das
and
in
cmpsl
cli
fucomi
cld
mov
push
xor
je
mov
les
dec
xor
sub
push
leave
xor
pop
push
outsl
leave
xchg
sbb
lock
iret
test
cs
jns
rclb
push
cwtl
cli
mov
sti
pop
xchg
addr16
rol
sti
add
inc
adc
mov
gs
sbb
jne
mov
cld
popa
mov
ret
dec
dec
sbb
test
adc
fs
jo
pushf
mov
fistl
jmp
mov
int3
sub
fmulp
xchg
sub
leave
out
scas
xchg
cmp
scas
and
jne
negl
lahf
xor
mov
xchg
ret
repz
sarb
hlt
les
or
dec
xchg
pop
movsl
dec
pop
fbld
xchg
mov
mov
pop
scas
add
or
cmpl
sub
xlat
cmovne
cmc
adc
aad
cld
test
and
add
pop
or
and
shr
js
xchg
out
sub
jmp
stos
sub
sbb
push
inc
cmp
or
insl
pop
movsb
pop
mov
xchg
sbb
pop
xchg
repz
sarb
cmp
push
aad
and
mov
cmpsb
orb
or
sbbl
mov
in
mov
pop
and
adcl
mov
stos
mov
dec
mov
adc
imul
leave
mov
mov
pusha
out
lret
or
xlat
pop
push
sarl
insb
lock
and
iret
push
add
dec
and
mov
hlt
imul
xchg
mov
lret
add
in
mov
js
dec
push
add
mov
add
jge
dec
mov
test
enter
jae
jo
xchg
mov
mov
add
fwait
sarb
pop
xchg
add
daa
push
fdivrs
stos
negb
pop
data16
pop
add
std
jge
lods
cmp
mov
lret
push
cmpsl
inc
add
sbb
hlt
test
rolb
fdivrs
xor
fst
cs
mov
cmpsb
or
jl
mov
rcrl
pop
aam
cmc
ret
or
or
xchg
xchg
shrb
loope
test
mov
aam
cmp
add
adc
xchg
lahf
loopne
bound
mov
sarb
mov
jp
dec
sbb
pop
add
test
cmpl
or
scas
je
add
sbb
repnz
jmp
add
and
add
fsts
rcl
push
jmp
fwait
push
std
push
mov
pop
inc
sbb
je
icebp
xlat
sbb
orb
sahf
lods
cld
xor
push
pop
in
pop
cmp
mov
pop
add
ret
addr16
pop
mov
adc
fadd
in
add
xor
jb
hlt
and
cs
inc
hlt
push
sub
cli
or
out
mov
and
cmp
jg
dec
int3
mov
sbb
icebp
xchg
pop
iret
in
shl
shl
cmpsb
divb
fistpl
sahf
insl
pop
cmp
push
push
mov
ret
cltd
into
insl
xor
mov
fidivrs
loope
pusha
xlat
sub
aaa
sti
mov
inc
test
cwtl
sbb
clc
arpl
shlb
xchg
sub
arpl
dec
and
aaa
pusha
cmp
popf
xchg
mov
xor
jmp
fwait
lea
xchg
insl
or
pop
dec
jmp
mov
sbb
aad
cmpsl
jge
les
sbb
add
and
jno
stos
test
pop
ficoms
lock
cmp
jb
jo
push
dec
in
pop
ret
dec
movsl
out
test
jg
clc
add
add
mov
fnsave
jnp
sbb
mov
add
dec
daa
std
jl
or
push
andb
jp
xor
and
std
jae
push
dec
movsb
or
pop
inc
xor
push
xor
jge
mov
gs
loope
mov
sub
pop
inc
dec
cmp
mov
pop
and
inc
jmp
mov
je
fdivl
shll
push
sub
loopne
fldl
add
mov
aad
jle
pop
hlt
cwtl
int
add
pop
and
fldenv
loopne
out
sub
mov
mov
hlt
pop
xchg
das
cmp
enter
cld
out
or
into
arpl
xor
stc
mov
mov
or
mov
mov
jg
xchg
jp
aaa
mov
mov
jne
movsl
push
jecxz
loopne
cmpsl
rcll
insl
jb
push
adc
out
daa
ds
es
fsubs
loop
int3
pop
jmp
loop
xor
xor
imul
jl
enter
pop
xchg
mov
sub
popf
aad
cli
into
popf
scas
loopne
sub
xchg
mov
jge
adc
cld
sahf
icebp
cli
or
stos
shll
lock
jg
call
je
mov
fsts
pop
xor
loop
dec
mov
faddl
cmpsb
dec
adc
mov
push
jmp
jae
sbb
xor
xchg
test
out
popf
cwtl
push
fcmovb
mov
cmp
dec
push
test
repnz
pop
push
push
dec
stc
dec
stos
repnz
mov
jge
xor
add
mov
dec
inc
divl
aad
cli
pop
xchg
imul
mov
lods
push
jmp
not
mov
sti
lret
mov
xlat
test
imull
mov
mov
lods
xor
push
mov
mov
popf
push
jp
mov
inc
fidivrs
clc
ds
stc
or
xchg
cmp
push
pop
int
xchg
mov
repnz
push
mov
mov
pop
fistpl
jecxz
addr16
ja
aas
lcall
loop
lret
add
or
jb
cmp
aaa
sub
dec
mov
lahf
push
xchg
xorl
cmp
imul
insl
loope
jmp
xchg
mov
pop
push
pop
fldcw
pop
loop
dec
sub
cmp
jo
pop
scas
xlat
jnp
js
movsl
stos
mov
inc
push
unpcklps
or
cmp
mov
jg
xchg
mov
jnp
mov
lds
add
jnp
stc
cs
pop
mov
or
outsl
sub
ret
lcall
fsubr
repnz
shrb
insl
sub
mov
jle
and
test
sahf
sub
std
push
xor
jae
mov
jns
or
pop
sbb
mov
inc
clc
mov
mov
or
int3
inc
push
inc
jnp
arpl
std
fldl2t
frstor
cmp
jecxz
push
cmp
or
xchg
inc
and
mov
jns
push
aam
movsb
imul
and
cmp
in
and
xor
cmp
out
fdivp
rcrb
and
sub
and
add
or
inc
dec
cmp
and
add
in
enter
insb
push
push
fwait
out
aaa
clc
lds
out
mov
sub
sub
fstl
ja
imul
cmp
lahf
jne
fcmovu
dec
jmp
dec
ret
mov
jo
xchg
mov
xor
sti
jp
nop
loop
xlat
and
push
mov
das
js
mov
adc
pop
rclb
push
push
xor
je
sub
sahf
inc
int3
sti
cwtl
jae
add
or
fwait
divl
repz
mov
popa
cld
call
inc
and
clc
out
enter
lret
pop
adc
push
lods
rolb
cmp
inc
sbb
ret
aaa
pop
push
cmpb
xor
mov
xchg
loopne
mov
fcoms
test
adc
mov
es
sbb
or
cmp
rcrb
jmp
cmp
dec
int
popf
pop
imulb
ds
into
inc
mov
lret
leave
out
mov
inc
mov
out
mov
adc
mov
jmp
aad
push
and
push
das
cmc
inc
enter
ret
sub
mov
add
inc
cmp
loop
jne
xchg
xchg
push
das
inc
mov
cmp
imul
sbb
mov
out
loope
xchg
or
cli
js
ret
decl
shll
fisttpl
out
sbb
sbb
insl
rcll
cmp
outsl
inc
movsb
pop
popf
cmpsl
sub
pop
jg
test
sub
into
scas
pop
and
cwtl
stos
ret
dec
test
sbb
mov
outsl
push
ss
add
mov
cmp
push
add
jo
dec
mov
loop
inc
pop
mov
or
sub
out
cltd
lahf
jge
and
cmpsl
sahf
adc
cmc
out
rol
jmp
sti
mov
pop
loope
sbb
mov
scas
lods
sub
bound
jl
cmp
out
mov
ret
sub
cmp
mov
lods
adc
pop
pusha
rcrb
loop
data16
inc
xchg
ss
mov
fwait
add
adc
loope
dec
mov
hlt
icebp
mov
lahf
xor
inc
out
xchg
pop
sub
scas
pop
sbb
ja
and
dec
push
and
test
xchg
jnp
jne
jle
jbe
mov
repz
push
jae
mov
aam
lods
sub
dec
mov
mov
in
push
mov
mov
xchg
xchg
cmp
movsb
push
push
jo
mov
jg
aaa
fiaddl
xchg
iret
inc
icebp
test
pop
xor
outsb
adc
repnz
sahf
shll
mov
xchg
repz
dec
jae
fidivl
lcall
and
arpl
mov
mov
sbb
and
sub
test
sbb
mov
into
inc
mov
std
xchg
scas
mov
in
inc
mov
and
push
sbb
daa
adc
aam
fstl
repnz
and
mov
sbb
pop
or
fildl
jne
stc
movsb
lcall
shlb
or
int
dec
add
add
push
in
test
cmpsl
mov
test
push
in
lds
mov
push
or
loope
cmpb
out
sub
shlb
daa
dec
nop
ds
decl
enter
inc
lods
xchg
xchg
clc
push
pop
cltd
or
mov
mov
lahf
insb
mov
jmp
outsb
jbe
repz
sbb
inc
imul
xlat
dec
out
test
inc
jl
dec
je
popa
push
rorl
insl
mov
leave
and
ret
imul
push
jbe
test
cmp
add
shlb
outsl
out
add
sbb
adc
fisttps
ret
jl
or
push
cmpsl
cmpsl
imul
jb
inc
mov
or
js
jbe
pop
outsl
out
inc
test
xor
test
pop
push
dec
mov
xor
xor
add
push
and
pushf
mov
pop
lret
mov
cmpsl
int
or
movl
imul
add
out
xchg
mov
sbb
les
push
push
fnstsw
popa
and
test
in
out
sbb
xchg
lds
fsubrp
test
inc
sti
cs
daa
pop
mov
sbb
mov
jb
add
pop
pop
sub
push
pop
in
lret
cli
or
cld
jo
repnz
lock
in
adc
adc
aad
xor
lea
pop
mov
jle
add
push
mov
jns
stos
mov
jl
inc
push
stos
mov
int
push
push
and
sub
pop
mov
cwtl
cwtl
xor
xchg
push
or
dec
into
or
cmpsl
pop
mov
mov
dec
sub
lock
aas
push
sub
xor
dec
cmp
push
aad
mov
pop
test
vrsqrtss
scas
pop
pop
incl
xchg
fiaddl
adc
jle
sub
das
cmp
pop
dec
ret
les
push
jle
xor
sbb
pop
cli
sub
and
roll
lods
xchg
cmp
or
fs
sub
jmp
and
out
pop
mov
mov
imul
fisttps
xchg
test
lea
cmp
xchg
faddp
cmp
jnp
xchg
or
sbb
sbb
inc
xchg
pusha
pop
lahf
sahf
push
sub
cmp
adc
adc
adc
inc
in
adc
in
adc
pop
adc
xor
add
loopne
jo
shl
jb
stos
cmc
sarb
pop
mov
inc
lret
dec
je
mov
pop
and
push
adc
cmp
or
lods
or
xchg
fxch
cmp
fists
js
xchg
sbb
lods
or
jmp
add
add
inc
dec
pop
xor
xchg
enter
adc
in
push
lahf
out
repz
fldcw
cwtl
scas
xor
or
adc
ja
test
inc
sar
inc
out
sub
mov
pop
jb
xor
cmp
sbb
xchg
ja
leave
pop
dec
subl
xor
fists
das
pop
ret
cmpsl
stos
lcall
xor
dec
cmp
addr16
push
es
hlt
test
push
loop
lods
pop
das
mov
aas
xlat
or
cmp
pop
int
mov
push
jle
stos
jns
sbb
adc
dec
add
jle
loop
data16
inc
add
bound
xor
ljmp
push
popf
iret
cmpsl
lods
and
jl
xchg
lret
jge
adc
xchg
movsb
std
adc
sub
int3
pop
in
jb
daa
out
mov
mov
dec
inc
dec
std
fstpl
dec
adc
mov
ret
leave
shll
sbb
lods
mov
pop
aam
push
and
mov
movsb
ljmp
sbb
dec
inc
jle
fdivr
dec
add
in
lds
das
popa
ss
sbb
dec
push
jbe
popl
push
xor
xor
arpl
enter
push
dec
mov
iret
add
movsl
and
push
loopne
jbe
push
cmpl
inc
push
pusha
call
repz
arpl
inc
cs
or
cmp
and
xchg
mov
rol
mov
push
lea
ret
imul
movb
insl
cltd
mov
aaa
mov
ss
sub
mov
mov
fsts
and
out
fs
movsl
mov
sub
pop
pop
test
int
push
xchg
xor
repz
inc
cwtl
popf
test
xchg
adc
inc
cmpsl
ja
sub
or
adc
mov
inc
cmp
pop
add
mov
jle
and
jle
push
loop
xchg
popl
fwait
nop
repz
imul
mov
sti
bound
add
xchg
sbb
mov
or
out
popa
out
enter
dec
adc
mov
outsb
sub
pusha
lock
and
inc
iret
xchg
sti
cld
adc
cmp
dec
or
pop
xchg
test
out
dec
sbb
fwait
rcl
push
ret
add
subb
xchg
loopne
sbb
fsts
enter
sub
mov
cmp
clc
aad
int3
insl
fistl
mov
xchg
mov
or
repnz
dec
push
rorb
sub
mov
fcomps
inc
std
xor
daa
sub
insb
popa
cli
and
push
clc
mov
iret
xchg
daa
imul
xchg
pop
jo
insl
inc
fidivrs
xor
imul
sbb
or
andb
xor
mov
in
pop
sbb
ss
call
fs
fwait
ret
aas
mulb
fsubs
loope
inc
sub
dec
bound
or
push
lods
jg
lock
dec
add
jle
jae
push
out
dec
sbb
push
mov
out
rorl
push
outsl
sar
or
cmp
push
inc
xor
test
cmp
aad
fidivrl
push
xor
pushf
lret
mov
lea
push
mov
outsb
sub
mov
adc
lds
xor
xchg
sub
add
loop
mov
imul
xor
inc
inc
sbbb
mov
cli
mov
sub
pop
adc
jmp
cmp
add
fwait
les
lods
outsl
xchg
js
sub
cwtl
stc
jbe
mov
call
mov
xchg
inc
orl
repnz
jl
fdivrs
xlat
shll
shll
push
xchg
jno
add
push
dec
add
and
or
xor
push
dec
add
sub
xchg
push
and
int
and
out
add
mov
and
pop
sbb
imul
pop
test
lds
jno
rcrl
call
lods
sbb
jecxz
mov
addr16
mov
mov
testl
mov
cmp
shll
or
add
push
and
pop
inc
mov
lods
or
push
repz
outsb
or
pop
adc
fld
ja
xor
inc
lock
fisubs
pop
xor
stos
sbb
sub
in
cwtl
mov
sbb
es
mov
cmpsl
push
cs
enter
jb
imul
jo
clc
sbb
insl
sub
or
lret
xor
xchg
dec
out
daa
push
and
cmp
xor
or
add
push
xor
push
lahf
mov
popf
mov
sbb
sub
push
popa
mov
and
fcomp
out
jle
dec
mov
add
adc
adc
ffree
mov
sbb
imul
or
mov
jp
jl
add
ret
xchg
xor
imul
xor
cld
jle
dec
fistpl
movsb
jns
and
lret
loopne
sub
enter
fldcw
cmpsl
outsl
loopne
mov
incb
sub
cmp
or
xor
mov
pop
cltd
jae
iret
jp
or
adc
call
jge
les
sub
pop
cld
xor
adc
dec
sub
nop
push
shlb
lahf
loop
or
mov
jo
xor
loop
out
mov
add
xchg
sub
in
rcll
fidivrs
pop
insb
mov
test
aam
cmp
inc
add
shl
imul
jg
pop
rcrl
mov
xchg
add
push
inc
fstpl
sub
push
dec
xchg
mov
pusha
and
shrl
mov
popa
ret
mov
push
lret
push
mov
jb
lods
inc
pushf
gs
and
or
cmp
xchg
call
pop
or
mov
sbbl
je
pusha
adc
outsl
xlat
cmpsl
jmp
je
pop
movsl
je
jmp
dec
pop
int
leave
cmp
sbb
dec
ds
mov
xor
test
mov
xchg
pop
mov
xchg
mov
or
data16
fistps
repz
clc
dec
push
aas
aaa
dec
push
or
enter
mov
add
sbb
mov
pop
aad
xlat
xor
es
rclb
out
jns
and
pop
mov
jge
and
pop
xlat
inc
dec
das
enter
sub
imul
int
push
push
arpl
sbb
cmp
push
mov
add
sub
cwtl
into
test
in
jmp
cli
pop
xchg
daa
mov
loop
loopne
and
push
xchg
mov
dec
loop
xchg
test
in
jae
sbbb
outsl
icebp
xlat
lahf
push
pusha
sub
mov
js
mov
shr
mov
xorb
xor
pop
fwait
adc
xor
inc
pusha
or
cld
movsb
xor
push
pop
pop
adc
xchg
xor
pop
cmpsb
mov
subb
dec
push
add
sbb
add
pop
test
cmpsb
xor
mov
mov
in
push
out
les
adc
push
arpl
fisubrs
out
aam
sbb
mov
xcrypt-ecb
cmpsl
lea
mov
cmp
arpl
mov
in
test
push
xor
cmp
aaa
push
iret
lret
jb
xor
loopne
shll
out
mov
movsl
fsubr
jns
jns
xor
lods
and
cwtl
xor
adc
mov
lods
xor
cmpsb
arpl
fdivp
mov
es
xor
jp
adc
cmc
or
fisubrl
iret
lret
mov
cli
rolb
mov
jne
fisubrl
mov
pop
pop
bound
sub
pop
clc
div
test
sahf
in
push
ss
or
mov
mov
sbb
sbb
call
push
dec
gs
xor
sub
lret
int3
mov
cltd
mov
mov
es
fidivrs
into
jne
jae
mov
loope
in
pop
scas
loope
out
jne
xor
or
add
push
xor
push
lahf
mov
popf
mov
sbb
sub
push
popa
mov
and
fcomp
out
jle
dec
mov
add
adc
adc
ffree
mov
sbb
imul
or
mov
jp
jl
add
ret
xchg
xor
imul
xor
cld
jle
dec
fistpl
movsb
jns
and
lret
loopne
sub
enter
fldcw
cmpsl
outsl
loopne
mov
incb
sub
cmp
or
xor
mov
pop
cltd
jae
iret
jp
or
adc
call
jge
les
sub
pop
cld
xor
adc
dec
sub
nop
push
shlb
lahf
loop
or
mov
jo
xor
loop
out
mov
add
xchg
sub
in
rcll
fidivrs
pop
insb
mov
test
aam
cmp
inc
add
roll
