sub
insl
lods
addb
neg
pushf
inc
push
arpl
mov
shl
dec
aam
test
pusha
fcompl
stos
test
jo
fs
stc
out
rorl
das
push
sti
dec
js
cmc
inc
pushf
and
xchg
xor
adc
mov
std
mov
adc
loopne
xchg
es
pop
lods
lea
or
bound
mov
push
cmp
mov
sub
in
bound
jbe
and
cli
push
xor
or
pop
lods
nop
out
add
and
shll
fstl
mov
scas
push
mov
jmp
xchg
dec
push
cli
jae
lock
mov
popl
dec
cmp
and
pop
jl
pop
push
add
cmp
divb
pop
xchg
xchg
fwait
stos
xchg
repnz
inc
mov
xor
rcrb
push
mov
scas
ja
inc
mov
shl
loopne
sub
iret
sbb
pusha
arpl
cmp
popa
pop
mov
xor
xor
test
jo
mov
mov
iret
xchg
push
mov
sbb
or
in
orl
cli
shll
or
fimuls
fucom
add
les
mov
dec
adc
lock
sub
xlat
and
sti
cmp
sub
push
cmp
push
sbb
arpl
je
push
mov
out
lahf
addr16
adc
and
pusha
in
mov
or
mov
xor
xor
mov
mov
mov
push
xor
test
insl
out
pop
jge
mov
mov
pop
lcall
jecxz
jb
movsb
jecxz
mov
jne
jae
hlt
sarb
mov
adc
sti
into
xor
mov
lea
mov
repz
and
sbb
nop
fwait
in
and
inc
mov
pop
xor
sbbl
xor
ret
lock
jecxz
mov
pushf
xor
sahf
cmp
ret
ret
loopne
sbb
bound
xor
jecxz
sbb
mov
mov
nop
mov
scas
outsl
aad
add
pop
int
cli
insb
pop
repz
pop
xchg
mov
jl
pop
js
mov
movsb
lock
cmc
lahf
js
mov
pop
sti
sub
outsl
push
xor
fwait
movsb
clc
scas
pop
xchg
je
dec
jmp
jl
nop
sbb
dec
sbb
loope
imul
xchg
push
ss
loope
fsubrs
pop
inc
mov
mov
js
in
js
outsl
subb
jge
push
push
and
push
pop
imul
sub
inc
and
inc
ret
jmp
div
call
pop
jo
jge
dec
repnz
add
enter
inc
add
mov
mov
sub
pop
pop
scas
lcall
orb
add
xchg
jb
incl
mov
enter
and
adc
inc
pop
xchg
mov
sub
mov
mov
mov
scas
xor
jmp
inc
mov
insb
push
dec
sahf
pusha
inc
pusha
orl
sub
fld
cmpsb
ror
leave
adc
sahf
jl
xor
stc
or
sub
or
gs
sub
push
push
pop
jno
and
mov
aam
loope
adc
pop
jl
movsl
mov
jno
repz
or
aam
xchg
sub
mov
call
cltd
lret
fdivs
cmp
and
fdivrs
fistl
cmp
movsb
daa
movsb
cmpsb
clc
mov
push
mov
stos
push
mov
push
push
fdivs
or
dec
push
clc
xor
hlt
loop
cmpsb
and
cmp
popa
inc
imul
negl
sub
mov
call
mov
cmpsb
leave
sbbl
es
push
scas
out
ja
lods
push
loop
ret
pop
fadds
adc
mov
cmp
mov
stos
push
pushf
test
addb
jbe
xor
jmp
xchg
cmpsl
das
lods
icebp
popa
imul
jae
outsl
int
lods
mov
dec
cld
pop
mov
xchg
and
cmpb
pop
negb
mov
test
mov
add
enter
sbbb
push
iret
xchg
cs
imul
or
hlt
scas
cwtl
jp
sti
or
loopne
cltd
into
movsb
movsb
stc
clc
jp
ret
rcrb
clc
pop
sbb
mov
jno
outsl
xor
scas
mov
pusha
adc
sbb
mov
out
test
jl
jmp
lods
ds
cmp
adc
xchg
inc
jbe
insl
mov
int
dec
cltd
or
test
or
sub
test
cmc
jmp
dec
mov
xchg
xchg
mov
push
pushf
xchg
push
sbb
cmpsl
test
lods
push
xchg
xor
movsl
popf
mov
xchg
scas
ficompl
es
adcl
mov
mov
scas
cmpsb
dec
mov
scas
mov
iret
inc
pop
or
xor
sti
dec
and
sbbl
ret
dec
or
sub
aaa
push
inc
inc
push
jecxz
orl
in
clc
bound
shlb
dec
mov
lds
inc
in
testl
sbb
in
movb
sub
inc
call
call
cmp
std
imul
adc
jne
push
sub
stos
les
dec
stc
mov
fwait
loope
enter
xor
xchg
hlt
xor
outsb
and
lcall
dec
dec
jp
sub
fstpl
fwait
jo
arpl
xchg
stc
mov
inc
dec
in
mov
enter
adcl
adc
cmp
add
std
mov
mov
fwait
lods
jb
mov
in
xor
cli
push
or
leave
jle
xor
cmp
push
fmul
xchg
pop
push
mov
or
insb
xor
pop
insb
out
sbb
sbbl
in
push
sbb
xchg
sarl
fsubr
lods
lods
les
inc
pop
add
imul
mov
rclb
pop
mov
inc
mov
sbb
imul
int
es
xor
loopne
in
sub
xorl
push
mov
sub
pop
and
inc
mov
push
push
mov
andb
inc
les
sti
cmpb
mov
mov
fsubrs
xchg
sbb
push
mov
repz
push
mov
sub
stos
xor
stc
inc
divb
mov
int
popf
fildl
jae
stos
mov
aad
jo
stos
cli
add
orb
ret
shr
jbe
inc
and
aam
fwait
test
cmp
test
fwait
add
cmp
ror
scas
cmp
xor
enter
add
mov
push
dec
xchg
andb
out
dec
ret
add
in
or
jo
mov
movsb
xor
push
fadds
adc
jb
repnz
xchg
in
nop
test
xchg
xor
loopne
in
inc
mov
pop
sbb
shll
fisubrl
out
dec
jae
mov
xor
sub
mov
cmc
js
addl
mov
aaa
fisttpl
pop
xchg
mov
inc
xchg
loope
push
test
dec
push
aas
popa
sub
push
adc
int
movsb
mov
fcoml
testb
pop
mov
pop
rorl
ljmp
jne
push
mov
add
sarb
mov
fwait
jg
or
pop
push
xchg
pop
add
lods
or
or
xor
je
ret
mov
outsb
data16
out
aaa
pushf
mov
rolb
into
les
dec
mov
pop
and
dec
and
imulb
pop
mov
dec
aaa
xchg
inc
xchg
addr16
jb
ret
test
je
xor
inc
bound
test
dec
lcall
movsl
inc
jno
cld
pop
inc
inc
loop
scas
mov
xchg
sbb
pop
movsl
cwtl
fists
lahf
shll
insb
jno
dec
add
mov
repnz
addr16
popf
xchg
mov
clc
push
pop
movsl
mov
mov
mov
pop
cmp
and
addr16
sub
pop
mov
nop
std
clc
pop
add
insl
push
pop
jp
lea
dec
push
push
sbb
test
dec
mov
jns
xchg
fsts
hlt
jae
lods
jp
es
xchg
iret
jl
pop
leave
pop
bound
push
mov
mov
clc
mov
scas
out
mov
mov
xchg
pop
xor
int3
dec
xlat
fwait
push
add
mov
cmpsb
inc
mov
sbb
fs
mov
pop
push
xor
movsb
dec
std
jae
ljmp
dec
frstor
addb
pusha
push
shlb
cltd
mov
pop
xchg
sarb
arpl
sbb
fidivrs
mov
movsb
xchg
cltd
sti
out
test
or
cltd
lret
rcrb
and
aaa
xlat
jmp
bound
aad
bound
xchg
pop
dec
dec
jp
dec
subb
sti
mov
out
pop
cmp
arpl
mov
or
mov
ja
lods
and
ret
mov
mov
mov
cli
add
lods
and
lahf
addr16
jmp
push
inc
lock
xchg
clc
or
icebp
ret
mov
fsubrs
test
and
dec
jmp
dec
repz
mov
movsl
imul
aas
push
shrb
fnstenv
or
es
push
lahf
test
cmpsb
jno
mov
scas
aad
sbb
and
push
push
jae
into
mov
dec
hlt
lret
dec
mov
cmc
push
out
mov
mov
gs
stos
xlat
sub
enter
xor
pop
pop
mov
loopne
adc
movsb
push
lahf
and
les
mov
test
in
xchg
inc
push
idivb
iret
je
scas
arpl
xor
cmp
fadds
pushf
jecxz
mov
insl
inc
je
rclb
lea
dec
pop
and
cmp
aam
test
inc
xorb
and
in
sub
rcll
or
and
pop
fdivs
lock
aad
std
cmc
mov
add
xor
mov
shlb
push
arpl
popa
push
mov
mov
mov
cltd
sbb
mov
cltd
into
sbbl
push
adc
cmc
pop
mov
push
sbb
bound
jge
stos
loop
test
ret
mov
or
icebp
add
cmp
and
cmp
push
ficoml
gs
clc
test
inc
ficoms
cmp
push
mov
push
loopne
ret
cmp
imul
loop
ds
push
repz
cmp
xor
into
je
or
and
enter
dec
pop
mov
xor
fsubrs
mov
test
cmp
push
aam
cli
sbb
cltd
xchg
sbb
arpl
mov
movsb
sbb
fcoms
lret
movsl
fwait
lods
sub
pushl
sub
adc
mov
rorl
cmpb
xor
test
clc
outsl
test
std
lock
push
xchg
jp
arpl
in
fldt
sub
xchg
lods
outsl
in
orl
sub
and
into
mov
pop
push
cmpsl
and
pop
pushf
rcr
pusha
xor
sub
shll
stos
push
mov
and
lret
mov
inc
push
ret
and
push
fisubrl
in
or
mov
test
dec
sti
loopne
xor
jae
dec
movsb
jnp
fprem
popa
jns
stc
std
add
ret
inc
lock
inc
add
add
icebp
mov
push
stos
shll
mov
lock
mov
hlt
aas
jg
fwait
dec
lcall
mov
in
jg
cwtl
pop
lea
mov
pop
xor
daa
mov
loope
shrb
sub
inc
popf
or
inc
in
js
sbb
sbb
dec
movsb
adc
cmc
test
loopne
nop
imul
pop
pusha
xor
and
bnd
mov
and
and
cmp
push
dec
movsl
add
mov
push
and
aam
icebp
xchg
sub
js
rcl
pop
mov
call
inc
xor
fldcw
shrb
mov
jnp
dec
mov
out
mov
inc
push
movb
push
lds
xor
push
mov
jecxz
js
icebp
mull
jmp
xor
jbe
pusha
mov
mov
and
mov
js,pn
mov
xchg
pushf
adcb
icebp
data16
pop
ljmp
rcl
cli
and
pop
movsl
jns
dec
or
popf
and
xor
mov
arpl
cmp
hlt
adc
or
cmp
das
sbb
sbb
clc
bound
mov
adc
push
push
jmp
jne
add
lret
sbb
test
cmp
and
arpl
mov
test
in
nop
sti
cmp
mov
mov
push
rorb
call
sbb
sbb
add
ret
pop
adc
cltd
mov
mov
fucomip
movsb
sub
dec
adc
inc
xor
sti
rcr
adc
rcrl
in
jnp
fs
pop
pop
repnz
and
pop
and
cltd
dec
enter
dec
mov
lahf
loop
fadds
push
sbb
mov
xor
das
imul
insl
jecxz
shlb
xor
xchg
jb
jne
cld
stc
push
cmp
cli
scas
stc
mov
dec
lds
adc
and
test
daa
js
pop
movsb
mov
notl
movb
popa
sub
mov
adc
std
sub
mov
push
inc
push
adc
movsl
cli
mov
loope
dec
jbe
ds
mov
and
loopne
fnsave
mov
dec
add
out
lock
and
shll
js
aaa
shlb
cli
mov
mov
outsb
int
ljmp
sbb
leave
je
repnz
and
fwait
int
pop
enter
jb
push
mov
mov
cmpsb
stos
cld
pop
enter
div
adc
aam
shll
dec
inc
jns
or
sub
push
mov
xor
hlt
outsl
or
mov
jo
sub
mov
jl
dec
fs
int3
jg
xor
push
fcomps
inc
in
mov
xchg
xchg
or
pushf
add
push
mov
ss
sub
hlt
push
xlat
test
mov
lret
lods
popfw
cmp
sbb
xor
pusha
xchg
enter
cmp
loop
fdivrl
jbe
sub
mov
and
cmp
jnp
or
cmp
aaa
cmovne
loop
and
cmp
int3
scas
push
or
imul
in
into
inc
pushf
rcrl
cli
lahf
repnz
in
mov
push
or
sub
popa
dec
loop
mov
in
jns
int
sub
out
cmp
cwtl
mov
out
jle
or
mov
or
enter
clc
xor
scas
xchg
mov
mov
cmp
or
cltd
jae
mov
into
movsb
mov
fiaddl
outsb
pop
pop
jnp
movsb
ret
pop
adc
clc
mov
mov
loop
jmp
orb
pusha
mov
lcall
push
dec
cmp
pusha
mov
xlat
outsb
loop
lret
mov
mov
pop
out
sbb
cltd
lock
mov
cmp
add
sub
and
sbb
or
inc
push
fwait
xchg
or
mov
ja
mov
adc
sti
cli
fisttpll
pop
push
xchg
sbb
movsb
xor
loop
xor
push
pop
ja
cwtl
mov
pop
add
stos
int
pop
scas
xchg
jp
jmp
loop
in
ljmp
pop
add
jl
sbb
add
fistl
add
enter
shlb
push
bound
cmp
aam
fistpll
dec
cpuid
movsl
push
xor
sub
mov
fwait
mov
test
dec
mov
int3
or
xor
jle
mov
call
fwait
jne
cmp
idivl
mov
xchg
sub
stos
adc
lods
out
jl
push
inc
jns
rcl
pop
inc
xlat
adc
inc
lret
pop
andb
xchg
push
push
push
mov
cmpb
sub
lods
jae
stos
and
inc
lods
unpcklps
scas
jnp
pusha
sub
cwtl
es
arpl
ja
ret
out
mov
mov
lret
loopne
and
mov
and
push
mov
loopne
mov
movsl
xor
dec
ja
jecxz
mov
push
dec
sbb
fcmovu
jg
jno
lcall
imul
jo
cltd
lock
push
testb
scas
mov
pop
jg
mov
les
and
cmpsl
fisttps
and
fiaddl
mov
fwait
loopne
push
adc
xor
rcll
inc
cmpsb
sub
pop
cwtl
std
or
inc
add
das
mov
mov
or
js
out
mov
xchg
sbb
jmp
std
lods
sbb
mov
std
test
ljmp
jge
fidivl
and
insl
cmp
sub
push
mov
imul
or
out
adcb
and
jl
mov
pushaw
std
stos
xlat
outsb
cmp
sti
lea
mov
inc
inc
imul
rorb
pop
mov
mov
in
jnp
sbbb
mov
sbbb
cwtl
mov
xlat
mov
mov
cli
fcoms
scas
pop
jb
and
mov
fimull
jp
inc
jmp
stos
xchg
jmp
add
or
mov
dec
es
repnz
adc
fwait
or
mov
mov
shrb
fst
xor
mov
in
ret
pushl
aam
fwait
pop
xor
movsl
xor
enter
add
xchg
enter
idivl
out
popl
test
xchg
adc
lahf
lret
mov
stos
icebp
xchg
cmp
pop
and
mov
jle
push
cli
xlat
ds
ljmp
pop
popf
fdivrs
aaa
mov
xor
mov
outsb
mov
clc
clc
mov
sahf
xchg
stc
scas
mov
pop
jmp
arpl
sarb
movsl
pop
pmuludq
je
popf
mov
add
mov
std
fstp
lea
jecxz
loop
pop
ja
repnz
shlb
pop
cltd
sub
lret
jle
mov
lea
pop
adcb
ror
lret
sbb
mov
scas
inc
jl
rcr
xor
test
sub
sub
mov
pop
movsb
jmp
stc
mov
das
ret
or
push
fucom
and
hlt
stos
out
popl
jg
movsb
pop
aam
lods
fcoml
cmp
lret
daa
or
loopne
and
dec
icebp
adc
lods
nop
pop
push
inc
cmp
pusha
jns
cmp
ret
mov
cmp
ss
add
ja
lahf
sub
hlt
mov
dec
and
subb
mov
push
and
pop
out
lods
xor
mov
mov
ficompl
sub
sbb
add
lret
xchg
add
dec
xchg
xlat
mov
mov
dec
pushf
and
mov
lahf
lea
jg
ret
aad
rcrb
cli
ljmp
mov
xchg
dec
out
push
push
ss
add
sbb
push
mov
cmp
scas
mov
mov
jns
mov
dec
xorb
out
xchg
pop
jnp
repnz
xchg
out
sti
dec
sub
lods
mov
out
xchg
js
xchg
ret
sti
fldl
add
sbb
mov
mov
jecxz
cwtl
lods
ljmp
pusha
incl
xor
ds
pop
xchg
xchg
shlb
mov
cmp
sub
test
push
mov
mov
rcl
jae
int3
bound
fnstenv
gs
sbb
sbb
fcoml
jb
inc
and
fnsave
xchg
in
and
jns
jb
or
lods
mov
test
sub
arpl
clc
loop
mov
andl
xor
rcll
mov
jno
sarb
adcl
cmp
or
or
sbb
jmp
sbb
jnp
dec
stc
shl
lea
inc
pushf
cltd
mov
daa
stc
mov
out
add
dec
cmp
cwtl
jnp
stos
ficoms
adc
outsl
fs
in
mov
loope
hlt
adc
int3
sti
jns
into
jb
aas
fs
add
into
xor
mov
inc
sbb
fidivs
sub
sbb
xor
sahf
arpl
ds
ja
fwait
lahf
add
jne
sbb
or
push
mov
movsb
sti
int
push
shr
xor
frstor
pusha
pop
ret
call
xchg
inc
out
cli
ljmp
mov
jno
jmp
add
jbe
out
pop
xchg
fnstenv
jecxz
addb
cli
fs
and
ret
or
cwtl
mov
sbb
mov
fs
jb
push
dec
sbb
xchg
cmp
jge
pushf
popa
add
call
xchg
dec
clc
xchg
pop
jb
xchg
lret
in
pushf
dec
push
mov
and
add
cmpl
pop
sbb
in
lock
adc
test
les
loope
pop
xchg
cmp
stc
fsubr
pop
out
lahf
in
nopl
xor
enter
mov
ljmp
dec
lods
inc
mov
pushf
aaa
xor
aad
and
inc
jo
push
pop
enter
loop
scas
pop
push
fdivs
push
out
sbb
dec
mov
bound
cmpsl
push
in
test
js
iret
pop
xor
rorl
add
fbstp
movsb
push
call
cmp
test
adc
lods
sbb
inc
mov
pop
mov
arpl
xchg
js
inc
js
inc
xchg
add
push
inc
push
mov
ret
push
movsb
mov
clc
orl
mov
add
lods
rcrl
mov
pop
fmull
push
pop
pop
imul
mov
test
jno
cmpsl
arpl
ss
scas
ds
xchg
popa
mov
lcall
subb
mov
push
sti
mov
dec
dec
cmp
cmp
cmp
fmuls
test
xchg
push
mov
pop
repnz
jecxz
cmp
jecxz
sub
or
adc
loopne
inc
popf
jnp
mov
repz
clc
mov
xor
cmp
sub
and
jecxz
inc
cli
in
mov
in
loopne
push
mov
jne
cmpsl
jecxz
and
ss
aad
repz
pop
pop
repz
xchg
fidivl
and
dec
mov
movsb
dec
pop
idiv
mov
mov
clc
stc
scas
dec
mov
pusha
out
xchg
xchg
shlb
lcall
sbb
and
and
fnstsw
push
test
jg
repnz
in
mov
notb
lock
enter
inc
mov
pop
or
jmp
inc
loopne
and
xor
dec
cmp
mov
sbb
outsl
mov
mov
cmp
les
inc
cld
mov
nop
lods
cltd
xor
push
sbb
loope
add
dec
adc
jns
sub
mov
test
lcall
fwait
xor
pushf
mov
sub
enter
aam
mov
push
jp
in
out
xchg
xchg
ret
push
lds
inc
cwtl
rclb
lret
sbbl
jnp
inc
clc
and
mov
jno
pause
add
pop
inc
inc
pop
andl
push
inc
mov
in
push
or
xchg
or
pusha
pop
ja
andl
popl
std
cmpsl
push
xchg
stc
loope
scas
mov
push
lcall
adc
insb
fcoms
mov
int3
mov
fwait
addr16
jo,pn
fsubp
dec
adc
push
ja
xchg
sbb
inc
or
mov
mov
lcall
ja
cltd
mov
push
scas
sbb
lods
pop
fwait
mov
xchg
in
es
pop
mov
imul
add
pop
sahf
add
sub
mov
cmp
xor
adc
sahf
and
jno
mov
sub
leave
fstpl
mov
arpl
loop
push
push
jp
cwtl
sub
fsubp
cltd
fldcw
mov
push
test
jns
push
fwait
mulb
test
xlat
icebp
push
addr16
shlb
adc
pop
rolb
mov
arpl
stos
sbb
frstor
lock
ror
fdivl
aas
enter
fildl
call
jecxz
lahf
leave
movb
add
push
sahf
sbb
enter
fcmovnb
jl
fistps
lock
xchg
test
rclb
inc
scas
rclb
mov
aam
rclb
pop
stc
addr16
addr16
xor
in
stc
add
lock
pop
loop
add
push
and
mov
mov
mov
ret
arpl
aam
dec
xor
add
cmp
jmp
inc
sub
sub
or
mov
adc
pop
subl
mov
mov
sub
cmpsb
mov
push
cmpsb
fdivrl
pop
adc
xor
loopne
mov
and
in
aad
xor
arpl
stos
push
push
dec
fsubrl
out
push
sbbb
lret
push
ficompl
jge
mov
sbb
lret
jo
bound
and
mov
loope
xor
mov
jbe
stos
int
jb
adcb
rolb
fisubl
xor
adc
mov
lret
data16
arpl
sbb
js
cmpsb
xchg
icebp
mov
adc
add
pop
adc
xchg
dec
imul
test
mov
xchg
dec
pop
scas
shll
mov
les
loop
mov
arpl
xchg
mov
sub
inc
add
mov
inc
cmp
js
sub
sub
shlb
or
dec
mov
cmpsb
sub
add
enter
pop
jg
es
dec
mov
out
xchg
fwait
in
decb
fisubrs
xor
push
insb
movsb
into
xor
xor
divb
shrl
sub
roll
std
mov
repz
jecxz
dec
and
xor
sti
xchg
fwait
lahf
push
test
adc
xchg
aad
add
rclb
lds
mov
jg
mov
pop
outsl
lds
shrb
out
push
daa
or
test
call
lret
pop
mov
adcl
mov
mov
pop
xchg
cmpsl
lock
mov
adc
orl
repnz
add
xor
movb
mov
add
xchg
les
sbb
js
daa
push
add
scas
icebp
daa
adc
mov
scas
mov
out
mulps
mov
mov
jmp
bound
ret
push
sub
mov
pop
mov
std
subb
scas
cwtl
leave
bound
bound
mov
pop
inc
pop
js
daa
popf
push
daa
cs
testb
mov
push
rorb
xchg
loopne
addr16
sub
jns
jle
add
push
int3
nop
inc
and
inc
fwait
movsb
mov
sbb
es
pushf
sarl
sti
jbe
push
or
sbb
add
mov
push
xchg
lods
cmpsb
sbb
cmp
sbb
pushf
aam
sub
sub
lcall
fcmovbe
lods
les
adc
dec
test
test
in
xor
adc
mov
pop
imul
dec
jecxz
cltd
cwtl
and
xor
pusha
mov
xor
rcl
sub
jmp
insb
fldpi
xchg
lret
jae
mov
adc
imul
std
mov
jecxz
into
push
mov
cmp
cli
mov
dec
stos
sub
add
cmp
addl
aaa
arpl
ret
shll
jns
sbb
movsl
aam
xchg
and
cwtl
sbb
cmp
bound
jno
loop
into
xchg
inc
mov
push
addr16
push
add
subl
jmp
fs
xchg
xchg
lcall
popl
cmp
pop
fyl2xp1
sbb
loop
jbe
push
xor
xor
jmp
shrb
les
mov
sub
push
aas
mov
negb
hlt
fldt
sub
xor
pop
jb
sbb
push
mov
xor
arpl
add
xor
ds
cltd
rolb
push
pop
addr16
negb
dec
jg
test
push
js
or
jo
push
test
lret
jbe
enter
imull
jae
push
cmp
stos
sub
lds
loopne
mov
je
mov
xor
nop
dec
jg
outsb
mov
pusha
cmp
add
ret
insb
xchg
lods
cmpsb
daa
pop
jge
scas
cmp
xchg
mov
iret
lret
test
pop
adc
lock
icebp
pop
and
out
out
jl
aam
leave
adc
sub
stc
mov
js
loope
add
xchg
jmp
adcl
ljmp
cmp
mov
les
insb
xor
add
test
dec
sub
sarl
lea
clc
dec
stc
push
lahf
mov
in
lret
mov
push
xor
stos
sbb
adc
loopne
dec
mov
cmp
mov
or
jg
push
loope
ljmp
push
cmp
mov
fisubl
or
dec
push
jno
js
es
xchg
data16
xchg
stc
mov
cmp
fwait
jo
in
repz
test
add
movsl
xor
cmp
pushf
dec
dec
mov
mov
mov
int3
adc
inc
sbb
cmp
add
pusha
xchg
lahf
cmpsb
sub
add
ds
jecxz
xor
pop
test
sub
pusha
sti
call
daa
and
out
fcoml
jecxz
mov
xchg
pop
and
lock
in
sbb
jp
push
sbb
push
nop
shlb
vucomisd
pusha
add
sets
xchg
jmp
jl
in
inc
and
dec
jl
stos
adc
ret
or
dec
insl
js
xchg
and
leave
inc
cmp
dec
filds
arpl
les
popf
xor
lods
adc
xchg
add
lret
sti
std
jo
enter
mov
xor
jne
jno
je
sub
stc
dec
push
mov
jbe
jne
push
faddl
jae
ss
popf
sub
shll
jge
xchg
loop
mov
inc
popf
mov
jnp
aam
hlt
shrb
mull
jae
and
cmp
imul
mov
and
aaa
cld
cmpsl
mov
testl
arpl
adc
and
int3
call
xchg
sub
dec
fisttps
icebp
xor
and
inc
cmp
sub
cmc
sub
les
in
das
dec
data16
xlat
movsb
cmp
sub
and
add
ret
and
sarl
mov
jg
loop
arpl
xor
xlat
mov
pop
aam
or
cmc
arpl
ds
test
mov
mov
lret
mov
aam
sbb
add
hlt
pop
cmp
xor
scas
mov
js
ret
pop
fldt
inc
fdivr
or
and
int3
addl
dec
int3
mov
out
insb
mov
push
dec
pop
add
repnz
or
aad
ja
mov
xor
cmpb
jae
mov
push
mov
dec
lock
and
cli
cmc
cli
fistpll
cmp
mov
lea
mov
pop
mov
ljmp
in
pop
jno
jno
mov
pusha
fistpl
in
in
cmpsb
mov
loopne
insb
fcmovnbe
loope
add
mov
add
mov
inc
repz
notl
mov
add
pop
and
pop
add
movsl
jmp
stc
test
xor
xor
out
push
pop
shll
cli
and
pop
mov
pop
push
and
imul
dec
xchg
pop
mov
jo
mov
lret
mov
add
jb
and
leave
cs
push
je
add
into
addl
mov
add
mov
and
loope
fwait
test
xchg
pusha
hlt
xchg
js
cmpsb
es
lods
aas
cmp
push
sbb
rcrb
out
jb
mov
sbb
js
pop
lods
test
repnz
je
sbb
pop
mov
inc
sub
in
push
fidivrl
sbb
and
pop
andl
loop
mov
shrb
inc
lret
jmp
sub
jl
shlb
lret
xor
pop
sarl
adc
mov
shll
xchg
push
add
sbb
xor
adc
movsl
and
mov
stos
sarl
fistpll
xchg
pop
imul
sub
call
push
loop
in
push
pop
lret
jl
mov
inc
js
push
xor
push
xchg
jge
push
stos
xchg
es
push
daa
jb
ficoms
xor
sbb
jg
or
dec
cltd
out
inc
test
mov
hlt
loope
cmp
mov
cmc
fsincos
lahf
cs
out
inc
hlt
lret
sub
or
dec
mov
dec
sub
mov
lret
iret
and
lahf
cmp
out
xor
dec
dec
mov
pop
retw
js
aad
repz
mov
hlt
cmp
mov
rorl
mov
mov
cltd
shr
or
sub
lock
sti
and
fwait
pop
push
mov
and
jo
inc
add
clc
pop
stos
sub
xor
mov
inc
push
push
sti
and
jnp
xlat
ss
mov
outsb
jae
les
sbb
neg
int3
test
or
bound
hlt
lcall
in
ds
fcoms
jns
movsl
sbb
sbb
sahf
inc
xchg
adc
mov
xchg
xchg
push
fs
adc
pop
das
mov
fwait
enter
loope
inc
mov
mov
dec
test
test
inc
enter
cmpsb
and
fmull
dec
lahf
cltd
out
out
sub
inc
mov
dec
mov
dec
pusha
mov
push
loopne
jb
adc
les
mov
call
xor
mov
jmp
and
push
push
movsb
fistl
daa
cwtl
js
xor
sti
dec
in
mov
mov
xchg
mov
std
popl
sbb
repnz
gs
imul
dec
pop
sub
fsubrs
sub
lcall
aaa
pushf
mov
daa
test
ljmp
mov
inc
sub
popa
cmp
and
shrb
cli
arpl
adc
add
mov
test
fsubs
mov
test
push
out
xchg
outsl
pop
sbb
shrb
or
repnz
or
pop
mov
out
mov
sbb
mov
xor
sub
mov
xor
dec
or
push
and
fmulp
test
dec
jmp
mov
push
test
lds
aam
sub
and
and
andb
dec
mov
movsb
sub
adcb
lahf
popl
add
inc
push
xor
xchg
mov
mov
dec
jnp
aad
test
push
daa
int3
jle
shr
int
mov
inc
fucom
adc
ja
push
push
mov
mov
sub
mov
lock
popf
mov
fisttpll
cmp
shrb
mov
mov
jl
push
or
cmp
mov
test
sub
jl
arpl
lea
popa
sbb
fidivl
scas
sub
inc
mov
jg
scas
daa
jp
sbb
fsub
pop
js
stc
or
sbb
jmp
dec
inc
jecxz
and
lcall
mov
test
jle
mov
js
test
call
sbb
lock
jg
push
cmp
mov
xor
setle
push
cli
push
loop
jp
mov
mov
xor
fiadds
stc
xchg
ss
cmp
loop
or
cmp
pushf
mov
cmp
push
jl
xchg
stc
test
loopne
add
sub
and
test
cli
fnstsw
test
or
xor
pop
adc
push
subl
xor
out
mov
movsb
or
push
in
cltd
push
sub
inc
les
int
cmp
rcll
sahf
sub
rcr
jp
popa
cmp
and
mov
dec
fdiv
or
add
mov
rorb
sub
mov
mov
xchg
dec
mov
aaa
orl
xor
mov
cltd
call
jae
jmp
push
pop
std
cltd
test
call
stos
jmp
shld
aas
enter
pushf
cmp
movsb
add
jb
in
xor
outsl
mov
jmp
mov
add
scas
xor
call
mov
xlat
lcall
sti
dec
add
mov
and
sub
adc
std
and
insl
mov
sbb
push
adc
xor
xor
in
jne
int
pop
test
and
pop
es
hlt
jns
or
or
les
inc
xor
in
pop
mov
ret
adc
in
in
lods
mov
outsb
add
fwait
loop
jp
push
adc
loop
xchg
es
sub
adc
push
data16
out
sub
inc
cmp
xlat
int
or
add
popf
jecxz
push
je
adc
xchg
call
stc
call
mov
insb
and
test
dec
sbb
je
repz
xor
jmp
lds
bound
mov
push
xchg
in
mov
mov
jp
clc
outsb
dec
aad
xchg
in
inc
inc
push
add
insb
pop
pushf
sbb
stos
dec
dec
nop
xor
rorb
je
insl
ret
loop
in
jnp
repz
fwait
out
repz
mov
out
inc
xor
adc
inc
pop
aam
in
pop
cmc
loopne
mov
lock
ret
pushf
orb
xlat
in
xor
in
cmc
scas
dec
jg
ljmp
ja
or
mov
mov
test
sahf
test
push
les
mov
mov
mov
jmp
xchg
test
movsl
dec
lahf
aad
shr
mov
push
xchg
cli
int
decb
mov
jmp
xor
pushf
cmp
jl
dec
adc
and
clc
pop
in
mov
mov
jns
jl
mov
enter
test
add
fbld
lahf
adc
mov
shll
arpl
xchg
mov
add
cld
dec
and
cmp
js
pop
stc
jmp
inc
sti
sub
cmpsl
xlat
je
int3
mov
pusha
push
rorb
push
add
jmp
xchg
sbb
sbb
xchg
or
sub
out
add
idiv
imul
add
in
aaa
fstpt
sub
outsl
nop
pushf
jl
out
stos
dec
and
fldenv
mov
rcrb
xor
mov
and
mov
rcrb
jl
add
fstps
mov
mov
icebp
outsb
cmp
mov
cli
movsl
and
jne
mov
mov
sub
std
popa
xchg
in
adc
stos
lods
int3
lret
mov
and
mov
jae
add
and
xor
cmpsl
or
test
addl
pop
cmp
mov
fwait
js
sahf
sarb
dec
push
and
mov
je
scas
pop
and
inc
cmp
mov
dec
dec
xchg
add
dec
imul
or
mov
mov
pop
push
sbb
pop
test
or
test
mov
or
mov
pushf
mov
add
popf
xor
add
mov
gs
outsl
push
adc
pusha
test
fbstp
test
mov
pushf
or
mov
lret
and
aaa
pop
xor
and
pop
dec
sub
repz
inc
push
adc
imul
lock
add
cmp
fsubrs
test
aam
enter
jne
hlt
mov
loop
js
cld
push
or
lcall
leave
mov
and
jne
pop
mov
mov
mov
dec
std
push
fimull
aad
fistpl
xor
mov
mov
bswap
and
dec
xchg
sub
sbb
sbb
mov
rcrb
mov
jno
imul
fwait
sbb
dec
stos
mov
xor
ljmp
dec
stc
sbb
mov
or
lahf
sbb
xor
jmp
mov
lods
mov
stc
mov
sbb
das
dec
call
cmp
mov
mov
mov
dec
jnp
mov
test
sbb
lods
nop
mov
fnstsw
xchg
mov
shr
repnz
xchg
and
lds
out
sbb
sub
mov
dec
inc
out
mov
mov
pushf
pop
push
adc
fs
jmp
mov
in
lock
sbb
push
xor
popa
jge
stc
or
shrb
dec
lods
jmp
fcoms
dec
pop
out
fsubs
movsl
pop
cmp
sub
test
jp
sbb
push
and
mov
inc
jmp
jbe
jp
out
mov
xor
or
clts
stos
les
xchg
in
jb
jo
push
rorb
mov
sub
jae
mov
movsl
push
cmp
dec
and
and
and
movsl
xchg
enter
pop
jo
cs
dec
int
inc
inc
or
mov
gs
inc
ja
jmp
fsubrl
jecxz
jae
mov
ret
rorl
mov
dec
fimuls
bound
int
enter
data16
mov
bound
pop
sbb
sub
rclb
popf
lret
andb
in
lcall
cmp
sbb
xchg
mov
sub
add
mov
test
mov
push
and
jbe
enter
xor
imul
xchg
fisttps
cmpsl
xlat
pop
cwtl
sti
out
fwait
notb
push
pop
jecxz
cs
ffreep
or
or
into
fsubrs
shlb
mov
movsb
jmp
negl
rolb
inc
and
sub
dec
and
cmpsl
out
jp
rol
push
inc
add
das
inc
shll
mov
es
xor
fmul
sbb
data16
popf
test
sbb
jno
mov
jnp
mov
rcr
mov
or
out
add
jle
pop
cmp
jbe
in
xchg
push
jmp
mov
mov
daa
add
fistl
xchg
mov
mov
imul
or
push
out
adc
insb
xchg
fwait
xlat
push
or
imul
in
add
and
fcmovnbe
fwait
mov
push
aad
add
not
jle
inc
frstor
out
mov
jl
imul
insb
test
test
cs
fcoml
stc
push
or
pop
in
and
sbb
cmp
fadds
nop
repnz
cmp
movsb
lret
and
or
test
xor
cmp
ss
sbb
js
faddl
out
xchg
mov
fsubs
and
shl
and
std
add
aaa
jecxz
dec
lock
pop
add
mov
mov
stc
stc
xor
sbb
sbb
movsb
mov
lock
cli
ja
loopne
inc
or
lret
lods
test
xchg
ss
xchg
or
sti
mulb
addr16
xchg
mov
lea
jmp
sub
ret
outsb
jae
negb
push
mov
lahf
mov
mov
fwait
sti
add
push
addr16
les
cld
notb
add
pushf
add
xor
push
xchg
adcl
dec
or
jns
test
sbb
inc
pop
loope
jge
and
rcrl
add
int3
or
xor
lahf
jmp
xchg
dec
lret
outsb
dec
in
jmp
popa
jg
mov
push
add
xorl
jae
lahf
icebp
int
and
fcompl
adc
pop
pop
push
pop
mov
repz
insb
lock
aas
xor
out
iret
cmpsb
inc
imul
dec
enter
daa
test
adc
data16
mov
adc
xorl
adc
cwtl
mov
js
mov
insb
and
je
hlt
stos
sbb
popa
push
je
mov
sub
lcall
mov
xchg
add
test
in
lods
xchg
pusha
dec
and
fs
or
mov
cmc
jmp
mov
mov
enter
push
outsl
cmpsl
shl
xchg
xlat
or
mov
jne
lea
lds
or
adc
xor
or
push
cmp
sub
dec
cmp
mull
mov
adc
repnz
push
call
call
xor
int
imul
das
adc
mov
sbb
sub
pop
fs
xor
daa
jmp
aam
and
xor
inc
lret
push
nop
rcll
test
insl
push
mov
lds
les
cmp
cmp
pop
xor
lods
fwait
cmp
push
sub
mov
xor
loop
test
in
pop
inc
cmp
sub
xchg
adc
mov
xor
aad
test
cmp
fdivrl
mov
mov
xor
jecxz
pop
xor
fwait
pusha
jp
xchg
mov
mov
cmp
dec
ret
push
or
daa
call
imul
and
pop
mov
pop
adcl
push
ss
sbb
push
int3
mov
fs
xor
add
loopne
push
adc
xor
fistps
subl
push
inc
gs
subl
xchg
xchg
and
xor
xor
xor
shl
test
jp
pushf
mov
push
stos
xor
loope
rcrb
push
dec
daa
popa
fsubrs
mov
jmp
andb
xchg
pop
imul
sbb
fnstenv
andl
cmp
lods
xchg
addr16
jecxz
pusha
lock
add
test
cmpsb
sub
adc
ret
fs
xor
addl
bound
sbb
mov
jge
rcrb
stos
stc
je
mov
f2xm1
mov
sub
mov
and
or
pushf
stos
lods
and
mov
jo
fcmovnbe
stos
jecxz
push
inc
movsl
outsl
pusha
xchg
inc
or
mov
jno
xorb
movsl
out
js
in
popa
pop
lods
cmpsl
div
inc
mov
pop
test
fistpll
or
adc
push
push
lods
sbb
js
out
icebp
test
out
jmp
or
xor
adc
js
mov
dec
popa
loope
or
mov
cmpsl
addr16
dec
mov
mov
cmpl
jnp
jg
xchg
sub
mov
shrb
sub
lods
push
data16
faddl
ja
xchg
or
add
lret
lahf
sti
mov
sbb
xor
mov
add
mov
dec
jnp
dec
fmuls
scas
test
add
mov
enter
mov
xchg
mov
fstpl
sub
cmp
cmp
push
lods
mov
les
test
cli
loope
popa
int3
gs
xchg
mov
es
clc
xor
ret
add
imul
cmp
subb
lods
xchg
xchg
sarl
xchg
pop
dec
aad
jo
push
inc
call
add
xor
cli
push
mov
sti
push
ljmp
sub
add
outsl
cld
idivl
sahf
mov
sub
outsb
andl
movsl
push
and
sbb
add
andl
mov
loop
pusha
sahf
pop
cmp
sbb
adcl
inc
idiv
cld
notb
sub
mov
mov
sub
inc
xor
lds
mov
aam
lret
push
push
outsb
lahf
add
or
xor
and
inc
mov
out
or
shrl
adc
sar
rcl
loop
jmp
sub
jge
sbbb
fsubr
insb
shr
xchg
cld
ficomps
in
mov
mov
mov
sub
push
xchg
les
mov
dec
pop
sub
gs
ljmp
inc
les
sbb
jl
lahf
mov
test
stc
fwait
repz
dec
inc
push
mov
stos
addr16
addr16
dec
lcall
sbb
popa
fsubrs
add
add
xor
jns
mov
test
hlt
int3
lock
and
int3
lcall
cmc
loope
xchg
in
mov
ficoml
rcrb
insb
repnz
and
jecxz,pt
clc
mov
lcall
add
dec
or
stos
js
out
or
test
aas
inc
push
lods
xor
mov
dec
icebp
mov
sbb
lret
dec
cs
daa
and
dec
push
in
inc
add
sbb
cld
pop
jbe
std
divb
loopne
sbb
negl
mov
xchg
in
sub
cmpsl
icebp
lret
lock
dec
jo
inc
mov
adc
dec
test
xor
lods
fisubl
iretw
sti
or
adc
out
nop
cmpsl
inc
cmp
jl
push
repz
mov
rcrl
xor
jb
mov
add
mov
lret
cld
je
divb
in
cmpsl
arpl
jne
sahf
popf
fwait
ret
sbb
add
mov
or
mov
xor
icebp
fwait
inc
or
mov
mov
aas
xor
or
push
mov
movsl
jle
pop
jg
icebp
fldl
repz
leave
dec
pusha
pushf
imull
aam
lock
pop
xchg
data16
bound
jns
test
jbe
xor
js
cmp
fcoml
mov
sbb
pop
jns
int
cld
pop
xchg
stc
cwtl
mov
cmc
xchg
jmp
jge
dec
jle
je
add
sbb
pushf
ljmp
cmpsl
dec
pop
jo
arpl
mov
jl
or
das
in
mov
xchg
push
test
dec
cmp
mov
mov
clc
cli
cld
push
out
scas
sti
dec
cmp
inc
out
sbb
push
jno
xchg
js
cmpsl
out
fidivrl
sbb
cmp
sub
aas
test
adc
mov
into
mov
jae
ja
cmpsl
cmc
and
in
pop
test
rolb
and
aam
fnstenv
aad
aas
decb
push
jne
mov
addr16
pop
sti
or
imulb
shl
loope
iret
sub
sbb
mov
stos
cmp
mulb
inc
fldcw
sub
jne
stos
addb
mov
dec
mov
sahf
aam
jno
fsubrl
lahf
testb
cs
mov
xchg
push
add
mov
mov
xchg
mov
jmp
xchg
mov
pop
out
jbe
mov
pop
mov
int
orb
jns
sbb
adc
movsl
add
jno
xor
add
pusha
mov
sbb
xchg
xor
sarl
scas
dec
pop
in
fmul
xchg
fcompl
jb
das
and
inc
repz
inc
insb
pop
mov
shrb
lods
decb
xchg
dec
test
flds
ret
cmpsl
cmp
mov
and
fisttpl
shll
test
mov
mov
jae
mov
push
mov
or
ret
jb
cltd
push
sbb
and
adc
pop
bnd
fcmovnb
cld
inc
push
enter
inc
jmp
lods
movsl
mov
ss
jle
pop
testb
nop
xor
jg
loopne
dec
scas
ja
mov
pop
insl
sub
xor
nop
add
fcoms
fnstenv
fs
insl
fs
inc
dec
pop
fwait
hlt
mov
xchg
in
push
hlt
enter
decb
test
test
ss
std
or
pop
sbb
daa
adc
test
aam
add
pop
xor
fs
test
inc
sbb
dec
lds
adc
xor
cmp
mov
lret
repz
cltd
lret
jge
jecxz
ret
or
mov
mov
mov
push
xchg
mov
loop
sbb
je,pt
mov
cmc
dec
and
inc
lock
mov
stc
mov
push
andl
and
in
and
fbld
movsb
fwait
into
cmp
push
jb
mov
jne
mov
fwait
rcrb
sbbl
out
lahf
rcrb
roll
mov
jl
xor
inc
inc
sbb
movsl
jecxz
shrb
mov
pop
add
test
aam
or
mov
add
mov
adc
dec
mov
mov
fidivrs
add
testb
xchg
xchg
push
fs
fs
adc
inc
test
cmp
xchg
pop
out
cwtl
cs
mov
cld
outsb
movsb
cmpsb
leave
nop
jp
data16
or
out
sub
mov
add
out
add
jmp
lea
sbb
mov
sbb
xor
divl
add
adc
icebp
call
adc
mov
fildl
pusha
les
lcall
xor
or
push
lahf
movzwl
mov
pop
fst
sar
cmp
push
mov
and
dec
rolb
mov
push
cmp
mov
inc
insb
pusha
lahf
in
jle
mov
testl
cwtl
lret
xchg
loopne
and
dec
cwtl
int
iret
adc
enter
pop
outsl
nop
xorb
scas
inc
clc
sahf
sbb
imul
mov
adc
js
cmpsb
addl
mov
jae
and
xchg
dec
cwtl
or
xchg
loopne
xchg
shll
pop
sti
cmp
push
add
stc
cli
xor
add
mov
adc
shll
add
jnp
in
ds
add
fdivr
rdtsc
mov
add
xor
push
stos
and
sub
fwait
fwait
mov
movsb
dec
pusha
dec
testl
jge
test
push
jo
test
fwait
push
stc
add
js
dec
stos
xchg
test
sbb
xorb
lret
sbb
and
aas
rcrl
mov
jl
inc
adc
cmc
sub
dec
call
lods
gs
or
idivb
pop
test
aam
aad
sbb
repnz
call
adc
lahf
and
mov
cmp
sarb
mov
pusha
and
push
push
cmpsl
cmp
dec
inc
jg
add
lret
push
aad
fisubrs
sub
aam
xor
std
dec
sbb
movsb
pop
lock
fimuls
mov
lret
cmpsl
imul
outsb
jo
mov
pop
sti
sbb
lods
and
inc
in
jmp
sub
stos
stc
and
ret
shll
scas
aam
jmp
or
mov
repnz
inc
addb
hlt
xor
clc
mov
arpl
and
cwtl
loop
cmc
shll
mov
inc
pop
sub
pop
xchg
incl
fisubl
sub
aam
and
add
mov
imul
inc
pop
pusha
sbb
and
and
mov
sahf
xor
mov
fsubl
out
bound
out
pop
mov
gs
sub
cmpb
jbe
mov
hlt
test
mov
sbb
andb
mov
adc
and
push
dec
mov
aam
outsl
and
out
jae
mov
mov
jb
in
insl
out
stc
es
enter
out
jecxz
aaa
jp
dec
out
mov
sarb
sti
push
sub
fwait
adc
or
out
xor
mov
movsb
lea
enter
mov
sub
push
xor
daa
lcall
out
fidivl
scas
cmp
aam
scas
jecxz
scas
in
hlt
scas
xchg
mov
jg
dec
and
push
xor
insb
lea
popa
lret
push
test
mov
jb
scas
jno
jg
pop
add
movsl
mov
and
jecxz
stos
cld
scas
bound
sub
lods
test
stc
cmp
sti
mov
aaa
shr
dec
add
sbb
int
dec
xlat
mov
ss
jl
inc
movsb
pushf
inc
subb
call
jl
and
stos
mov
push
arpl
fadds
or
or
pusha
faddl
pop
into
mov
aad
mov
inc
push
dec
mov
and
orb
repnz
inc
dec
xor
mov
xchg
xchg
inc
ds
add
lcall
jno
jecxz
mov
sub
push
lret
loope
test
insb
inc
push
cmc
and
inc
fwait
popf
dec
in
js
mov
xor
cwtl
lods
mov
pop
sarl
fwait
jnp
in
push
mov
flds
fs
insb
shl
jl
xchg
add
sbb
and
mov
out
push
int3
cld
int3
inc
xchg
les
lods
hlt
push
add
xchg
stc
inc
movsl
fs
lods
lahf
sbb
test
popa
cld
fs
into
or
push
stc
fsubp
hlt
push
stos
das
jmp
cmpsl
jmp
lcall
fs
sbb
jb
and
repnz
sbb
sbb
push
repz
fdiv
addr16
mov
popa
scas
cwtl
jle
jnp
iret
sti
or
pop
sbb
push
jg,pt
repnz
xchg
incl
movsl
adc
decl
mov
loopne
in
and
mov
and
test
fiadds
inc
or
ja
jns
sidtl
and
pushf
insb
mov
inc
popl
sub
enter
xor
mov
imul
rorb
lcall
aas
int
test
or
lods
ret
cs
xchg
push
mov
mov
mov
fwait
sahf
pop
enter
jns
jnp
cmpb
and
stos
adc
ss
jno
sub
out
push
jle
stc
lret
jp
jne
jae
or
jno
scas
push
mov
jmp
xchg
cltd
or
add
cmc
and
pop
mov
cmp
add
call
in
fwait
loopne
xlat
gs
mov
leave
jne
push
mov
aam
pop
sbb
call
cmpb
pop
mov
fwait
in
jae
pop
cld
in
inc
in
mov
mov
push
pop
fwait
push
and
mov
mov
mov
cmpsl
cld
arpl
xorb
mov
push
lcall
aad
dec
rorl
movsl
fstpl
or
imul
icebp
frndint
hlt
xlat
gs
push
aaa
test
nop
jae
fsubl
sbb
sti
mov
sub
js
subb
cmc
iret
leave
dec
mov
mov
jg
mov
and
popa
lahf
into
cwtl
mov
aad
and
mov
sub
fnstcw
pop
mov
loop
aad
test
dec
sti
pop
jl
test
adc
and
push
out
xor
jno
pusha
mov
and
pop
roll
push
sarb
das
sbb
loopne
lods
adc
mov
add
mov
pop
test
mov
stos
incb
in
push
or
xor
out
push
insb
fidivl
out
xor
dec
cmp
jmp
neg
outsl
pusha
fwait
dec
inc
aam
bound
fst
rorb
loop
das
stc
gs
test
jmp
pop
and
adc
cmp
ror
mov
movb
mov
pushf
sahf
push
aad
jne
arpl
mov
movsb
sbb
call
cmp
cltd
aas
add
rol
scas
cmc
into
push
sahf
into
and
addb
adc
and
iret
fcompl
fcmovb
mov
clc
hlt
fcoml
mov
ret
mov
imul
jg
repz
pop
mov
out
std
jbe
xlat
xchg
cli
mov
add
xchg
add
mov
stc
adc
or
sbbb
or
push
jne
stos
les
rcll
adc
xchg
mov
iret
and
cwtl
aam
or
fsubs
jnp
sbb
xchg
mov
or
mov
in
lcall
push
adc
dec
adc
lods
xor
push
mul
scas
xchg
mul
js
int
push
lods
sub
jo
cmpsl
push
les
xchg
xor
dec
mov
rorl
or
inc
nop
adc
mov
jbe
jp
ss
or
and
add
sub
shl
mov
jno
jb
jbe
sarb
mov
mov
pop
lahf
sahf
std
xchg
lods
xor
paddw
cmp
mov
in
mov
clc
xor
cltd
addr16
lcall
mov
cmp
pop
stos
xchg
xor
push
inc
mov
xchg
daa
adc
xchg
sub
adc
fsts
sbb
and
push
xor
mov
push
popf
loop
mulb
int
push
ds
test
jns
bound
mov
pop
push
cmp
jge
lods
aam
mov
push
xor
subl
add
push
outsb
aas
add
adcl
andl
mov
mov
mov
sbb
and
cltd
push
jns
cld
pushf
scas
mov
mov
rcr
inc
out
es
je
jl
mov
and
mov
inc
mov
and
insl
aam
xchg
pop
loop
dec
cli
mov
adcl
xorl
pop
mov
add
lahf
notl
xchg
enter
mov
cltd
jb
adc
mov
sti
js
push
xchg
aas
pusha
adc
or
stos
incl
cmc
lds
outsl
xchg
xchg
sbb
jmp
mov
jb
xor
adc
aaa
scas
pop
testl
aaa
inc
mov
mov
inc
pushf
mov
xchg
mov
clc
mov
mov
stc
imul
or
aam
jp
dec
xchg
inc
scas
nop
icebp
dec
pop
lods
nop
lcall
adc
mov
mov
mov
faddl
dec
bound
push
mov
insb
test
and
jmp
push
mov
leave
fiaddl
inc
scas
stos
or
jecxz
jecxz
add
fsubr
out
cld
enter
mov
mov
ds
mov
insb
adc
incb
add
adc
mov
cmp
mov
xor
jb
jecxz
shrl
or
stc
out
pop
int
scas
fistl
clc
sbbl
repnz
loop
cmpsb
subb
push
lret
fwait
or
xchg
popf
lock
mov
mov
cmp
bound
cmp
and
fcoms
js
ja
sbb
adc
mov
adc
ficompl
test
adc
pusha
sahf
push
psubq
pop
pop
leave
and
xchg
cmp
fcmovnbe
xor
jb
inc
fcoms
pop
xchg
je
ret
adc
mov
jg
imul
mov
pop
stos
mov
pop
les
cmp
pop
mov
fstl
jbe
pop
push
jl
sbb
add
sbb
add
scas
add
dec
mov
insl
sarb
sar
test
je
mov
icebp
inc
rsm
cmp
xor
cs
addl
sub
shlb
test
jmp
cmp
cli
out
je
lret
loopne
shl
push
loop
push
iret
lahf
loopne
xor
fs
pusha
stos
pop
mov
jl
ret
movsl
jne
xchg
jl
dec
insb
je
pop
lret
mov
mov
mov
mov
cmp
and
or
lret
shl
mov
xor
xchg
add
adc
arpl
aam
fdivrs
js
xor
add
xor
sbb
sub
pop
cmp
bound
add
xor
mov
sarb
mov
mov
out
test
xor
mov
push
inc
pop
test
sar
out
mov
incb
shlb
jl
push
adc
sti
movaps
mov
push
mov
je
push
lds
or
lods
in
jae
outsb
inc
fimuls
push
fs
imul
cwtl
push
lcall
xchg
push
outsb
data16
mov
inc
out
loop
jmp
mov
loopne
xchg
sub
cli
add
out
add
mov
push
enter
push
rolb
nop
aas
rol
pop
sarl
call
xchg
mov
jbe
xchg
sbb
cmc
incl
ret
dec
je
lods
mov
push
fcoml
cltd
cltd
ret
pop
mov
ret
push
popf
mov
stc
testb
ja
lret
stos
outsl
mov
mov
bound
test
push
daa
cmp
push
sub
xchg
mov
aaa
repnz
pop
fnstcw
mov
cmp
mov
push
fists
popa
pop
pop
loop
mov
mov
es
fwait
scas
aas
fiaddl
sub
clc
mov
pop
mov
cmpsl
ror
popa
mov
addr16
aad
lcall
sbb
in
cmp
xchg
or
negl
adc
enter
fldt
sti
mov
mov
popf
aad
jns
mov
sti
jno
sub
inc
sbb
lods
out
mov
shl
inc
inc
jb
fldl
sub
aam
xor
sbbl
dec
mov
push
stc
jb
bound
ret
cmp
and
inc
mov
and
lret
sbb
ss
pop
add
lea
xchg
push
data16
cltd
aas
xor
and
xor
inc
in
mov
push
mov
xchg
ja
sbb
sbb
stos
pushf
mov
repnz
pusha
dec
cmp
jae
pusha
fmul
push
jmp
andl
mov
sti
out
fadd
push
outsb
sub
xor
lock
stos
sbb
fiadds
jae
xor
lds
and
dec
mov
and
in
and
test
pop
push
sbb
or
cld
cmp
cltd
clc
scas
sbb
inc
scas
or
ds
aad
into
inc
fcomps
mov
pop
xchg
fnsave
std
mov
in
ficoml
stc
mov
mov
sbb
pop
test
nop
adc
cmp
push
xchg
js
adc
fistps
mov
popf
cli
dec
clc
mov
and
pop
mov
push
les
mov
adc
cmp
leave
dec
in
inc
dec
loopne
xor
jb
test
faddl
inc
aam
test
fxch
fwait
test
test
mov
inc
cwtl
xchg
pop
les
jle
mov
mov
sbb
mov
js
fistpll
pop
push
cltd
pop
cmp
add
xlat
adc
xchg
mov
mov
scas
negb
cmp
cmp
dec
out
es
shlb
lcall
repnz
fbstp
out
and
call
and
add
cld
outsb
mov
int
test
pop
insl
test
or
pop
lea
pusha
mov
jbe
jae
adc
mov
ss
add
aad
add
sbb
rolb
lods
cmp
cmpb
pop
xor
mov
jne
movsb
addl
aaa
xchg
jecxz
jmp
sbb
jb
sub
fbld
push
loop
add
aad
aam
sarl
sub
cmp
add
mov
and
and
aaa
ja
pop
icebp
push
lahf
cmp
mov
mov
hlt
fisubl
pop
inc
lcall
pop
mov
adcb
jl
fsubrs
pop
loope
mov
sub
enter
loop
cmp
mov
lock
test
add
xchg
and
and
inc
or
lods
lcall
add
sub
pop
repnz
fsubl
push
jmp
mov
imul
or
push
sub
xchg
push
or
in
int3
in
cmp
sub
ret
mov
test
mov
in
pop
adc
clc
mov
sub
push
xor
or
fidivrs
sbb
loope
pop
xchg
sbbl
jnp
dec
push
std
int3
cmpsl
or
rclb
sti
mov
lods
adc
loopne
ficompl
dec
daa
xor
js
into
hlt
test
loop
adc
cmp
cs
lahf
in
jle
shlb
mov
push
dec
test
sub
test
ret
lea
inc
xor
in
cltd
cmc
push
sbb
sbb
mov
pop
xchg
and
lock
or
aaa
xchg
repnz
scas
mov
xor
popf
mov
cli
dec
mov
pusha
mov
rolb
jl
sub
test
add
movsl
push
mov
push
inc
pop
cmp
xor
addr16
jecxz
mov
cwtl
cwtl
test
ljmp
push
imul
in
nop
test
into
lods
test
adc
test
in
mov
sbb
leave
or
dec
fs
lea
cmpsl
or
mov
imull
add
stc
push
shl
sahf
inc
push
inc
sbb
add
out
cli
andl
push
pushl
jecxz
and
sbbb
dec
shll
xchg
daa
ficoms
das
sbb
jg
cwtl
cmp
and
notb
jne
cmp
das
push
rorl
scas
push
mov
dec
cmp
roll
inc
add
sub
xchg
je
dec
cld
jb
cmp
int3
and
in
push
sbb
mov
fwait
mov
cmpsb
cmp
insb
cltd
clc
cltd
std
gs
loope
gs
push
mov
pop
clc
movsb
mov
pop
das
loope
mov
ror
add
dec
sbb
in
dec
mov
sti
mov
int
daa
xor
adc
dec
aam
xchg
adc
xchg
dec
sbb
cmp
sbb
fisubs
int3
and
setb
adc
mov
xor
bound
sbb
mov
and
dec
loopne
fsubrs
or
cmc
stos
xor
push
mov
iret
fsubrl
bound
add
xchg
jb
movsl
loope
and
cmp
sbb
mov
mov
dec
mov
mov
adc
push
mov
cltd
imul
jns
ficomps
xor
dec
lcall
mov
mov
sub
and
ret
lea
clc
cmp
scas
out
das
cmp
cmp
roll
or
mov
pop
mov
mov
pop
and
jns
fcom
je
and
adc
xchg
xor
mov
sbb
push
pushf
xchg
and
inc
movsb
dec
jnp
ffreep
imul
sti
sub
out
daa
xor
inc
mov
dec
rol
movsl
jecxz
push
in
out
loopne
enter
dec
or
mov
outsb
xchg
ret
sbb
nop
nop
enter
cwtl
and
xor
adcl
repz
xor
fsub
test
or
pop
test
neg
mov
sbb
fstl
mov
je
jmp
xchg
mov
xor
adc
loope
leave
pop
sub
enter
dec
sti
aas
mov
xchg
aam
lahf
je
sub
add
mov
xchg
mov
xchg
cwtl
dec
test
mov
outsb
xchg
inc
pop
push
int
pushf
push
fdivrs
add
mov
jnp
ficomps
push
push
bound
cltd
je
ss
sbb
sbb
out
enter
xchg
adc
addb
xor
adcl
ds
sbb
test
je
mov
hlt
mull
add
aam
repz
out
clc
jecxz
mov
adc
adc
lds
push
mov
les
aam
shrl
add
sub
lods
dec
mov
pop
arpl
popa
lods
cli
sahf
push
push
xor
outsb
xchg
cmp
js
aaa
mov
jb
enter
or
loope
jnp
xchg
pushf
sets
mov
aas
test
orb
push
idivl
aam
repz
out
clc
xchg
enter
dec
mov
inc
sbb
push
add
sbb
jp
mov
es
add
ss
clc
sub
add
frstor
outsb
xchg
clc
sbb
pop
mov
xchg
js
pop
mov
mov
imul
and
mov
pop
xor
sbb
jae
pop
xor
push
aaa
mov
xor
cli
adc
rcl
das
and
mov
test
adc
pusha
xchg
dec
sub
or
xchg
getsec
mov
dec
cmp
test
mov
cwtl
xchg
push
pop
lcall
int3
hlt
sti
xchg
test
push
sbb
inc
mov
xor
xchg
pause
cmp
mov
lods
push
loop
and
xor
lods
mov
nop
insb
clc
sbb
in
scas
cmc
aad
or
or
mov
inc
and
add
lret
and
pop
xchg
hlt
aas
gs
push
movsl
popa
cld
inc
jp
mov
jl
xchg
pop
idivb
sbb
ret
popf
push
outsb
dec
sbb
adc
xor
mov
gs
and
mov
mov
cwtl
das
sbbl
es
cmp
mov
cltd
and
movsl
sub
adc
fcoms
cwtl
addl
stos
sub
imul
popf
mov
add
stos
mov
pusha
ja
add
jo
imul
aam
insb
cli
sahf
pusha
add
add
mov
pop
pushf
stos
mov
or
int
rclb
fsubrl
or
mov
push
pop
mov
fdivrs
xchg
addl
adc
or
test
je
mov
push
fsubl
push
mov
out
lods
mov
enter
pop
dec
push
adc
sbb
lods
and
stos
xchg
mov
and
int
push
mov
out
mov
arpl
or
scas
cltd
mov
pop
xchg
mov
enter
dec
push
mov
sub
test
fsubl
xor
mov
push
lcall
xor
mov
fsubl
test
dec
mov
jle
repnz
int3
pop
pop
mov
mov
inc
xor
lcall
ret
xchg
ja
mov
cmpl
div
mov
lcall
or
aam
push
mov
push
movsb
and
sub
aaa
cmp
aaa
cmpb
jae
out
insl
and
clc
jae
sub
aad
call
fisubrl
popf
lods
mov
rolb
cli
mov
fsubs
adc
or
cmpl
jno
xor
movsb
pusha
jmp
mov
pusha
icebp
mov
mov
sbb
jb
xor
lods
mov
xor
mov
mov
stos
cmp
imull
inc
add
pop
insb
mov
xchg
fadd
pop
subl
iret
mov
test
cs
pop
fidivrl
cmp
sbb
mov
adc
into
jb
dec
mov
push
mov
test
loope
cmpsl
in
shl
aad
out
mov
mov
das
inc
mov
repz
add
es
xchg
fstps
mov
xchg
xor
les
push
test
repnz
decl
mov
es
movsl
mov
push
mov
xor
mov
jns
jl
das
addl
es
cwtl
daa
push
xchg
scas
xor
mov
frstor
js
xchg
test
xor
mov
sahf
out
adc
or
pusha
js
jnp
movsb
and
fdivrs
pxor
enter
sub
xchg
adc
fdivs
lcall
dec
ja
ljmp
cmp
cmpb
cwtl
iret
adc
gs
jle
hlt
mov
sub
ret
dec
cmc
mov
lret
js
loop
pop
lock
jne
and
dec
enter
movsl
nop
add
sub
iret
pop
enter
lods
and
jp
mov
fwait
mov
test
or
js
pop
negb
es
pushf
sub
mov
pop
adc
fisttps
add
test
xchg
fcompl
pusha
mov
pushf
pop
xorb
test
fisubrs
fmull
pop
mov
icebp
popf
sub
daa
je
int
xchg
fildl
call
fadd
jne
fnstsw
mov
test
mov
cmp
mov
dec
xor
xlat
pop
shrb
cmp
jae
in
int
pushf
inc
mov
adc
jb
jmp
fistl
sub
inc
mov
adc
mov
cltd
sub
add
je
adc
andl
jge
loop
test
cmp
cmpsb
mov
adc
jecxz
xchg
sbb
dec
bound
outsb
xchg
scas
push
cmp
cmc
cld
jecxz
adc
add
pop
inc
std
jg
lret
fwait
test
add
or
jo
arpl
std
xchg
mov
sbb
jmp
adc
shll
cltd
cli
xchg
dec
adc
pop
sti
jmp
sub
jl
ret
mov
or
dec
bound
and
ds
xor
and
test
jb
cmc
test
bound
std
jnp
sub
enter
lahf
cmp
mov
fcmovnb
test
ja
int3
pop
dec
aad
mov
mov
push
rcrl
out
popf
lods
fildll
push
bound
int3
movsl
push
inc
mov
fdivrp
and
jmp
adc
mov
test
pop
aaa
sbb
jmp
popa
xchg
sbb
dec
add
ljmp
lret
add
lahf
and
sbb
cwtl
push
xor
dec
jbe
aas
mov
hlt
lds
cmp
cmpsl
and
xor
lahf
adc
jg
imul
insl
xchg
dec
xchg
mov
test
lahf
clc
jns
add
mov
xor
std
jbe
sub
and
incb
shlb
hlt
mov
repz
mov
andb
xlat
push
xor
in
jl
mov
ja
mov
lds
xchg
mov
scas
lret
inc
dec
dec
hlt
mov
adc
mov
add
mov
dec
jmp
push
les
mov
mov
jae
inc
jno
fidivs
loope
cmp
dec
andl
sub
mov
mov
mov
pop
lods
into
sbb
push
fidivrs
sub
popf
test
sub
ret
pop
rcrl
lret
inc
cltd
rcll
aam
xorb
sbb
loopne
sti
dec
mov
dec
adc
xchg
mov
pop
into
xor
xor
pop
inc
and
shlb
cmc
outsl
imull
push
into
ret
add
add
cmp
pop
cltd
test
loope
mov
jl
pop
adc
xor
xlat
inc
enter
sub
jnp
mov
lcall
dec
xchg
aad
and
cmp
icebp
js
push
cmp
cmp
rorb
cmpsb
jg
lret
loope
cwtl
das
and
loop
dec
sbb
je
mov
and
push
dec
push
loop
clc
pushf
test
mov
sbb
notb
pop
xchg
dec
xchg
pop
addb
bound
xchg
cld
lock
stc
pop
mov
iret
cmp
sub
pop
xor
repz
outsb
test
ds
push
daa
js
sub
out
sbb
nop
mov
mov
jmp
out
fldt
aad
push
loop
lods
lea
mull
add
test
mov
mov
xor
je
outsb
mov
into
test
xor
push
add
icebp
out
mov
cmp
push
fsubp
or
xor
push
cmpl
add
sbb
push
mov
and
add
out
mov
daa
mov
mov
or
lret
adc
scas
add
mov
loope
jne
cwtl
rcrl
dec
mov
les
sarl
dec
dec
ret
or
sub
xchg
xor
add
adcb
jae
fcomi
push
pushf
daa
xor
shrb
addr16
addl
sub
test
jg
add
dec
pop
mov
mov
popa
test
test
jne
push
and
cmp
jo
mov
or
and
std
in
mov
rcrl
xchg
fsubp
adc
inc
in
ja
xor
mov
imul
jbe
xchg
push
jge
in
dec
test
or
je
inc
sub
and
xorl
lock
sub
sbb
outsb
int
int3
sbb
test
popa
adc
lahf
cmc
push
repz
scas
xor
out
das
lcall
roll
mov
mov
mov
lock
jmp
repz
adc
outsl
xchg
xchg
es
cli
clc
ds
lahf
and
rclb
icebp
in
fldl
mov
push
cwtl
sub
fmull
lods
sti
out
stos
xor
aam
ds
pop
xor
ficompl
sub
cwtl
cmp
adc
inc
fldenv
mov
and
addr16
push
mov
mov
sub
stos
or
pushf
adc
pop
xchg
addr16
or
pop
je
and
inc
mov
ret
inc
push
jecxz
movsl
dec
outsb
sahf
ret
ljmp
cli
fldenv
push
mov
cltd
call
test
pop
mov
test
pusha
mov
pop
popa
add
inc
aad
inc
repz
mov
dec
sub
sub
nop
ds
sti
mov
mov
lock
adc
xor
nop
dec
flds
loop
enter
ret
dec
js
pushf
in
dec
icebp
inc
movsl
enter
popa
out
neg
fcmovbe
lahf
mov
xchg
xchg
pop
int
sub
addb
lock
lods
movsl
cmpsl
add
test
popf
cmpsl
dec
or
les
adc
and
sbb
dec
xor
jb
xor
cli
lret
mov
enter
mov
fsubrs
loopne
jo
and
pusha
in
push
dec
insb
xor
pop
test
and
and
bound
push
loopne
cli
test
mov
jp
movsl
adc
sbb
push
sub
lret
pop
cmp
cmp
cmpb
aad
fwait
or
sub
or
loop
daa
and
cltd
inc
lds
and
cmp
ret
data16
cli
cmc
cmpsl
stc
and
xchg
lods
and
roll
mull
and
jno
pushf
call
inc
push
arpl
cwtl
push
inc
xchg
xrelease
mov
cmp
jecxz
test
sar
xlat
enter
clc
addl
xchg
pop
into
mov
jl
aam
mov
or
fadds
sub
adc
ja
add
or
neg
or
inc
mov
fwait
cmp
andb
fstps
vpaddb
insl
xlat
mov
mov
shll
xor
push
mov
nop
cltd
xchg
cmp
js
pop
and
sub
mov
cwtl
aad
sbb
push
xor
fcompl
pop
xchg
pop
sarl
ljmp
and
aaa
mov
adc
xchg
jb
push
sbb
mov
loopne
xor
enter
pop
pop
iret
outsl
push
aad
add
in
jns
xlat
adc
jp
and
add
out
frstor
push
xchg
mov
and
in
stos
out
icebp
pmulhw
sub
fbld
ljmp
lods
call
loopne
mov
dec
mov
clc
fiadds
mov
cmp
lahf
sahf
sbb
fwait
and
sub
inc
sub
ss
cli
cmp
lock
fstps
adc
mov
pop
mov
mov
das
movsl
rcll
cltd
lea
daa
cmp
inc
repz
sbb
mov
mov
jns
xor
jl
cmp
bound
jb
sub
push
fidivs
ds
int3
cmpsb
or
test
dec
enter
test
dec
pop
sbb
rclb
xor
pop
push
adc
mov
adc
inc
add
jmp
rclb
pop
leave
ret
and
imul
mov
add
das
xchg
repnz
mov
rorb
fdivrs
imul
aad
sub
lahf
add
popf
into
clc
xchg
scas
lds
sbb
and
sahf
stos
in
jbe
xchg
shl
jecxz
adc
out
lcall
or
pop
scas
inc
add
adc
cltd
pop
inc
dec
out
out
xchg
orb
data16
xor
in
arpl
jl
jmp
aam
cltd
nop
pop
cmp
lds
rcrl
adc
push
dec
aam
test
and
pushf
mov
aam
xlat
ja
das
mov
push
xlat
xor
rolb
mov
subb
xchg
fisttpll
cmpb
mov
push
add
shll
subps
sbb
add
leave
je
aam
mov
les
movsb
jne
dec
inc
fdivrl
jae
movsb
test
call
add
adc
movsb
call
xorl
sub
je
sti
mov
pop
aad
out
push
js
pushf
ret
stc
push
xor
sub
out
std
pop
adc
mov
push
lea
adc
sbbl
jge
dec
addb
and
fisubrl
inc
dec
push
sub
xchg
pop
or
and
or
adc
add
or
scas
mov
push
adc
into
xchg
push
hlt
add
repz
push
jns
ja
dec
nop
add
ret
cmp
mov
pop
adc
ss
jnp
pop
jbe
cmpsb
push
pop
out
movsb
sbb
sahf
sahf
stc
inc
add
lret
cmpl
ljmp
adc
nop
mov
lea
test
fwait
mov
adc
jmp
cmpsl
aas
cmp
das
out
push
xor
mulb
movsb
int3
ret
lcall
into
fwait
xor
scas
xchg
adc
mov
jb
movsb
fwait
cmp
lahf
cli
fadds
xchg
rorb
dec
dec
cmp
pop
sub
or
jb
add
xlat
add
idivb
fucomip
cmp
orb
add
xor
jne
aad
fwait
gs
sub
mov
pcmpeqw
xchg
daa
mov
ficomps
push
inc
lret
push
clc
loop
or
lret
jno
mov
add
mov
adc
lea
cmp
test
inc
cmp
shld
and
fstpt
out
add
ja
fdiv
mov
push
mov
xchg
das
add
hlt
cmpl
out
adc
pop
es
and
mov
cmp
imul
pop
ror
xor
cli
into
mov
xchg
out
mov
movsb
xchg
cli
push
int3
roll
inc
clc
jle
les
mov
lds
mov
mov
lock
dec
pushf
sub
data16
in
fstl
pop
inc
xchg
push
mov
push
pusha
push
repz
xchg
pop
je
and
sub
sub
push
cmp
mov
mov
cmp
jns
jne
in
jmp
enter
jmp
cli
test
in
pusha
popa
pusha
movsl
cmp
repnz
sahf
mov
loope
mov
in
jne
pop
dec
mov
mov
orb
jge
orb
mov
pusha
sar
js
sbb
leave
mov
mov
xor
dec
das
mov
pop
aas
inc
mov
push
cwtl
push
jne
cmp
ja
les
fistps
lret
add
mov
idivb
adc
mov
dec
push
fwait
push
int3
testb
inc
jg
dec
gs
push
push
ja
loop
fs
aam
mov
sar
xor
mov
sub
adc
es
into
mov
daa
ss
adc
push
adc
les
lea
scas
sbb
pop
loop
xlat
or
sub
dec
xor
push
jae
addb
shll
or
pop
cmpsl
add
or
call
inc
stc
test
inc
ds
in
xchg
xlat
pop
in
push
faddl
rorl
std
jl
andb
cmp
shrl
pop
and
add
push
imul
movsl
popf
cmp
lea
cwtl
cmpsb
jns
sub
cmpsb
push
sbb
aas
push
cmp
push
fsubl
in
mov
repnz
or
sub
jns
ja
lea
pushf
adc
rcrl
push
lret
leave
cli
add
std
sub
mov
into
xchg
jecxz
stos
mov
ja
dec
lods
aas
mov
xchg
orb
mov
mov
xchg
ja,pn
test
dec
shll
bnd
movsl
sub
sti
test
jle
arpl
lcall
mov
pop
adc
fimull
mov
push
add
or
xor
inc
std
les
out
ret
mov
dec
insb
cmc
or
addr16
scas
sub
pop
inc
and
les
or
mov
xchg
xor
pop
addr16
sti
mov
shll
jmp
adc
push
fs
xor
fwait
xchg
mov
in
jbe
sbb
push
pop
shll
mov
or
ficoml
push
fmull
jae
cld
xor
pop
cmc
pop
stos
sub
jp
sbb
and
dec
int3
xorb
mov
stos
fmuls
pushf
je
fisubrs
push
fdivr
in
lock
stos
add
lods
mov
jge
bound
cld
js
les
imul
cli
xchg
daa
mov
push
inc
rcr
pop
cmc
orb
xchg
and
inc
or
jo
sahf
push
mov
je
das
inc
dec
push
xchg
iret
cld
insb
xchg
pop
in
movsl
lock
ja
xchg
out
leave
add
loope
push
lret
mov
pop
lds
cmp
mov
or
into
jle
stos
mov
ror
adc
sub
mov
mov
mov
mov
in
rcrl
mov
mov
fstpl
test
popa
sbb
dec
rcrb
xchg
cmpl
and
sbb
in
inc
sub
fistpl
push
out
xor
mull
ficompl
and
jae
mov
cltd
fdivrl
cwtl
xchg
aam
enter
sbb
scas
adc
inc
test
and
mov
sti
mov
mov
aad
inc
mov
ljmp
sbb
jns
pop
loope
pop
addr16
out
sub
sbb
aaa
ja
xchg
inc
lods
pop
lds
nop
add
ja
rorb
sub
lret
mov
mov
pop
xorl
pushf
out
pop
mov
call
out
je
xchg
repz
mov
ljmp
aad
int
sbb
jb
insl
int
adc
fidivrl
lods
adc
add
mov
xchg
add
sbb
mov
mov
pop
cs
int3
fldcw
push
push
lock
xor
clc
sbb
mov
js
mov
jg
ss
pop
lock
mov
jge
jmp
xor
sbb
xor
sbb
int3
test
mov
shlb
push
mov
cmp
sub
loop
jp
dec
test
sub
scas
dec
stos
push
cwtl
loope
bound
loop
lds
aas
lock
popf
into
cmp
fsubrl
mov
sahf
jnp
fmuls
mov
loopne
xchg
imull
cli
cmpl
sbb
jl
mov
scas
movsl
fs
mov
cwtl
dec
stos
jne
fistps
pop
dec
lret
int3
fisubrl
or
orl
xchg
cmp
dec
xor
mov
push
mov
mov
rcl
or
jnp
negb
pop
movsl
lret
or
sti
add
cmp
jmp
lock
pop
aam
inc
fisubs
mov
jl
mov
xor
ljmp
int3
paddsw
xchg
xchg
mov
out
into
inc
and
sub
dec
sub
scas
lds
je
adc
loope
adcl
inc
rcr
shlb
pop
lcall
cmp
andnps
aam
iret
lea
insl
push
das
inc
jle
sbb
sub
cmp
enter
jp
lods
xor
push
loope
imul
imul
xchg
xor
push
in
pop
int3
ficoml
push
pop
cmp
cmp
add
rcrb
adc
sub
mov
ficoms
push
mov
mov
adc
rol
and
inc
pop
stc
jne
or
inc
pusha
shl
mov
cmp
xchg
sub
test
inc
pusha
push
push
fstp
fstpl
cmp
fcomps
inc
xchg
adc
testl
das
dec
mov
mov
in
and
dec
jl
pop
add
mov
loopne
sbb
out
int
mov
icebp
sub
scas
paddusw
jmp
fldenv
push
sarl
cmp
cld
test
add
stos
add
testb
xchg
mov
movsl
xchg
or
aas
add
stos
adc
mov
dec
test
sbbl
pop
mov
xchg
daa
out
dec
sbb
ds
jmp
or
aas
lods
ret
int3
or
dec
xchg
and
mov
sub
imul
or
jb
or
jae
mov
inc
push
shrb
popa
xchg
pop
inc
movsb
sub
mov
ret
fdiv
lds
dec
lods
cltd
sbb
push
fistps
mov
leave
lods
decl
mov
adc
xor
arpl
decb
xchg
sub
and
jle
popf
out
mov
lret
pop
es
mov
ja
sub
unpcklps
mov
add
or
test
rcr
mov
hlt
pusha
movaps
rcrb
daa
data16
or
repz
in
in
les
fs
sahf
arpl
adcl
cmp
lods
repnz
add
scas
cmp
outsb
add
enter
movsb
dec
in
out
subl
sbb
xor
push
sti
inc
and
into
pushf
repnz
jne
pop
test
jle
gs
outsb
and
adc
xchg
cwtl
add
jmp
jmp
inc
mov
sub
xchg
fs
jne
shl
cwtl
movsl
jecxz
iret
cmp
jo
decl
rorb
or
jecxz
mov
subl
fisttpl
jnp
mov
mov
mov
dec
mov
dec
mov
test
lea
adc
gs
hlt
pushf
fwait
mov
mov
arpl
fistpl
fdivl
inc
movsb
out
filds
mov
add
pop
push
mov
xchg
sbb
or
jbe
adc
into
mov
push
ret
jns
lods
loope
push
and
mov
imul
popl
je
pop
iret
push
int
and
sub
insb
inc
sbb
ficompl
test
mov
xor
addr16
setl
popl
js
dec
cwtl
dec
cltd
mov
lods
and
xchg
ret
orb
mov
xchg
sbb
imul
xchg
scas
sbbl
or
fdivrl
dec
pop
mov
or
push
lods
out
jae
adc
mov
int
xor
out
inc
pushf
pop
mov
dec
cmpsb
paddw
shlb
adc
xchg
add
pop
cli
lods
stos
inc
push
gs
xlat
cli
xor
and
inc
sbb
loope
mov
mov
fisubrs
jbe
add
fisubrs
addr16
push
xlat
out
sbb
loope
mov
lods
dec
fiadds
xchg
filds
hlt
andl
xchg
faddl
or
mov
arpl
push
jbe
xchg
out
scas
out
mov
xor
push
lret
push
movsb
dec
push
dec
aad
ret
mov
aam
mov
mov
mov
clc
mov
dec
sub
push
mov
stos
ljmp
loopne
mov
sub
and
push
je
jnp
int
jcxz
mov
cs
shll
xor
xor
jge
pop
pop
es
or
xchg
mov
sbb
mov
inc
jno
jecxz
xchg
pop
test
mov
lret
loopne
jb
push
lods
add
xlat
xor
stc
mov
clc
ss
loop
lods
gs
inc
dec
sbb
dec
mov
sti
fcomi
ret
xchg
in
data16
in
cmovno
sub
fildl
das
jge
test
mov
iret
inc
mov
adc
call
call
sub
mov
cmp
in
adc
aam
sbb
jno
psubsb
mov
pop
iret
push
fistpll
sub
xor
pop
xor
push
mov
inc
dec
stos
lret
js
je
push
fcompl
jo
cld
mov
jne
inc
pusha
jno
enter
or
loope
pop
addr16
icebp
test
cmp
sbb
sahf
das
mov
push
loope
add
dec
lds
aad
cmp
lds
iret
mov
add
mov
into
js
jns
outsb
jne
fadds
in
adc
pop
push
xchg
mov
push
ret
lea
inc
loop
jb
ss
mov
in
mov
es
mov
pop
lods
jl
adc
cmpsb
in
push
mov
test
sub
lock
fwait
insl
pop
sub
cmpl
jge
ja
ret
fwait
lret
popf
sub
fidivrl
xchg
dec
xchg
in
and
mov
push
pop
sub
sbb
repnz
ret
pop
mov
xor
cmp
sub
inc
mov
dec
adc
or
mov
cmp
repz
add
lcall
add
mov
adc
cltd
push
push
mov
dec
sbb
enter
mov
cmp
and
aaa
and
xchg
lret
fcmovnu
fs
push
test
imul
adc
inc
sahf
lods
nop
cli
sahf
sub
les
pop
mov
mov
adc
pop
pushf
mov
call
test
pushf
sarl
xchg
xorb
cmp
rep
adc
add
push
pop
mov
and
fsubrs
movsb
enter
pop
in
pop
jg
push
jecxz
dec
aam
cmpsb
xchg
mov
xchg
add
lcall
aam
ret
mov
add
sbb
cli
sub
pop
xchg
sbb
jecxz
mov
fstpl
cwtl
hlt
adc
xchg
xor
adc
jg
push
cmp
nop
imul
push
dec
cli
jae
mov
cld
lcall
ficoms
dec
dec
cmp
mov
adcl
mov
or
ja
push
ljmp
rcll
push
sub
pop
pop
lods
cld
stos
cmp
push
pop
pop
into
daa
xchg
lods
bound
inc
cmpsb
enter
pop
dec
sbb
xor
scas
movsb
jecxz
mov
xor
pushf
cli
mov
sub
mov
add
add
adc
stos
lds
add
jo
out
pusha
aas
dec
enter
jl
sub
jl
fwait
lods
inc
sti
mov
gs
sahf
xchg
lahf
notl
sbb
out
stos
add
mov
popf
or
jecxz
inc
pop
xchg
cmc
cmp
leave
or
fs
int
sbb
inc
push
mov
mov
in
test
repnz
push
loope
mov
fists
jno
mov
popa
popf
xchg
inc
push
xor
sti
je
mov
mov
mov
jl
std
pop
notb
fldt
loope
pop
mov
jae
sub
mov
push
loope
sar
fwait
xor
mov
repz
pop
jl
inc
pusha
test
lods
and
adc
clc
outsb
nop
mov
aaa
push
mov
bound
aam
test
cmp
jb
movsl
xchg
test
jnp
pop
mov
mov
push
mov
flds
aam
outsb
jmp
mov
add
out
shll
fs
cld
lods
icebp
mov
and
cmp
cli
decb
push
ja
cltd
pushf
fidivl
aad
push
loopne
fisttpl
hlt
mov
mov
xchg
fsubrl
pop
jg
xchg
xchg
stos
xor
iret
mov
es
mov
mov
loope
and
outsl
jnp
dec
std
pop
and
fdivl
sbb
push
xor
fldt
mov
dec
stos
out
adc
loopne
jl
adc
call
fisubrl
xchg
loop
rol
and
or
cld
push
sahf
into
int3
imul
test
in
cmp
mov
in
mov
cmp
pushf
in
xchg
add
nop
xor
arpl
and
popf
faddl
dec
sbb
or
mov
fstpl
sbb
pop
out
mov
into
dec
mov
cltd
xlat
xor
incb
rclb
sub
xchg
mov
js
jbe
mov
jle
xor
ljmp
out
shll
in
movsb
dec
xor
add
cli
les
mov
stos
loope
xchg
out
mull
adc
je
push
xor
xor
cwtl
fsubrp
mov
xchg
dec
cs
aam
xchg
sub
pop
in
outsb
in
inc
stc
andl
insb
ss
loope
repz
cmp
movsb
les
xor
stc
fstpt
jl
pop
loop
and
jmp
movnti
dec
xchg
out
int
jg
mov
pop
cmpsb
pop
push
ss
out
dec
ret
cmp
stc
or
movb
imul
imul
pop
leave
jo
sbb
mov
dec
test
aad
dec
push
fistpl
push
xchg
fwait
mov
and
ja
sub
sbb
xor
enter
pop
add
lahf
jb
sub
pop
pop
sbb
out
into
lahf
and
pushf
clc
ljmp
movsb
in
shll
mov
pop
jge
inc
arpl
and
in
out
daa
mov
movsl
push
cld
adc
pop
stc
scas
jmp
add
shlb
lock
in
clc
xchg
lds
fsub
fidivs
pusha
or
scas
daa
shrb
mov
out
adc
dec
xchg
sbb
push
push
das
stc
mov
mov
push
xchg
and
in
pop
dec
adc
divb
add
sub
jbe
and
lcall
cld
push
shll
test
ficoms
add
pop
xor
rcrl
decb
sbb
pop
insl
mov
xor
cmpsb
adc
sub
mov
add
inc
mov
adc
jns
shrb
cmp
das
inc
dec
adc
aaa
dec
test
inc
ror
pop
das
sub
xchg
or
xchg
push
mov
push
pop
cwtl
jecxz
repnz
or
jmp
pop
dec
into
dec
mov
mov
cs
dec
xchg
sti
fildll
adc
add
test
push
mov
movsb
clc
cmpsb
push
mov
adc
je
ret
es
sahf
push
out
fcoms
jecxz
stos
je
sub
hlt
inc
loope
push
stc
insb
push
daa
outsl
nop
lahf
sbb
add
fsubs
mov
cmp
mov
or
scas
out
in
dec
ret
adc
adcb
mull
sbb
or
andb
mov
adc
mov
dec
mov
add
sub
sub
loop
jnp
shl
sub
fdivrs
call
leave
adc
nop
mov
outsb
xor
add
ljmp
es
lret
sbb
pop
sbb
push
repz
das
push
ds
jae
aad
lea
push
pop
jle
dec
pop
xchg
inc
fdiv
dec
arpl
jb
jle
sbb
movsb
loopne
inc
dec
mov
incl
mov
repz
xor
test
cwtl
sub
in
stos
xorps
lods
jnp
mull
or
int
cmp
test
fmulp
fs
dec
jae
fwait
mov
and
test
shlb
add
inc
inc
stc
das
inc
jecxz
movsb
fs
cwtl
cmp
sub
je
ljmp
mov
repz
push
fwait
arpl
inc
ret
call
fdivr
cwtl
cli
push
icebp
lahf
mov
cmp
mov
test
pop
mov
ret
push
or
addr16
inc
dec
mov
inc
loope
pop
jp
test
adc
repnz
add
stos
in
lcall
dec
or
mov
fsubrl
xchg
fwait
add
lods
cmc
je
addr16
push
xlat
mov
sbbb
arpl
cmc
sbb
dec
sub
in
inc
pushf
imul
mov
movsb
repz
pop
inc
dec
ret
ljmp
out
pusha
ss
pop
repz
pop
dec
mov
enter
pop
sahf
and
loope
mov
es
cli
cvtps2pd
mov
add
movsb
sbbl
clc
cmpsb
and
cmp
mov
sub
xor
mov
xchg
jns
out
sub
add
xlat
bound
std
xchg
push
jne
fldenv
es
ss
les
pusha
lret
int3
or
in
js
cmpsb
jmp
mov
adc
and
into
pop
xchg
ja
push
ljmp
nop
jb
jne
in
jg
inc
and
cwtl
stc
cmp
sbb
pusha
pop
pop
sub
mov
in
out
lret
insb
test
pop
fisubl
pop
popa
dec
mov
xor
push
mov
push
cmpsl
xchg
shll
mov
cld
test
dec
dec
xor
add
pcmpeqw
lock
xchg
xor
test
mov
push
rcrb
cld
sub
inc
cmp
pop
fadd
nop
inc
fcompp
data16
inc
pusha
call
lret
cld
mov
out
sbb
sub
ret
dec
bound
aam
cmp
fs
stos
loope
and
jg
shrl
mov
movb
scas
cmp
test
js
or
test
mov
ret
aam
sahf
iret
dec
fcomps
pop
pop
jmp
xor
lea
xchg
push
add
push
xor
mov
stos
loope
mov
mov
or
insl
dec
mov
scas
mov
mov
jp
cmp
jl
lods
cmp
jnp
jmp
cmp
icebp
repnz
in
dec
cmp
mov
imul
pop
mov
and
jp
adc
jg
mov
mov
out
test
scas
cmp
mov
scas
in
into
arpl
jmp
sbb
add
divb
fistpl
push
and
movsl
or
mov
sub
and
and
cmp
cmpl
mov
and
cmp
cld
pushf
xchg
add
inc
in
dec
popa
pushf
pop
bound
outsl
pop
jle
fisubl
and
and
inc
in
js
pop
mov
pushf
daa
cs
push
andl
mov
mov
test
xor
ffree
or
pop
xchg
lods
ljmp
dec
cmp
add
push
mov
cld
inc
sub
lds
sub
sub
movsb
cmp
inc
pop
out
sub
rcr
in
sti
mov
cmc
jne
sub
sahf
loope
mov
loopne
outsl
out
cltd
cmp
popf
dec
and
lret
les
addl
inc
cmp
ss
mov
or
push
sub
push
and
aaa
cmp
sbb
fstpt
jne
ljmp
mov
push
push
add
aaa
testl
jp
mov
js
and
mov
xor
sti
bound
stos
mov
mov
jl
mov
jmp
mov
dec
loope
mov
sub
and
mov
adc
out
mov
pop
daa
filds
les
das
in
sbb
sbb
ds
cld
decb
pop
out
add
pop
adcb
loope
int3
adc
inc
mul
push
or
das
aam
int
mov
mov
sti
in
mov
les
or
jnp
shrb
aas
mov
icebp
popf
dec
mov
mov
mov
aam
pop
fadd
in
dec
add
test
cmpsb
push
push
aam
out
popf
in
imul
cmp
sahf
pop
pop
lock
add
and
pop
arpl
sbb
ljmp
repz
inc
ja
dec
mov
sbb
push
jno
add
lds
sbb
xchg
shlb
cwtl
inc
outsl
mov
es
push
jle
lock
scas
xor
adcl
sbb
out
cmp
mov
adc
push
cmp
cwtl
decb
add
sti
lret
stos
fisubrs
jecxz
sub
mov
inc
nop
mov
mov
fcmovbe
cmc
push
and
sub
mov
pusha
jnp
mov
push
push
adc
loop
dec
mov
jecxz
sub
mov
ret
test
ret
test
jno
ja
and
iret
arpl
sub
pop
add
into
adc
pop
sub
clc
mov
cmc
mov
roll
jmp
mov
dec
lcall
inc
cmp
adc
mov
xchg
mov
push
xchg
sub
imul
mov
movsb
outsl
mov
mov
popa
mov
aam
sub
arpl
mov
cli
push
scas
pop
xor
insl
popa
mov
call
mov
mov
mov
hlt
xchg
je
dec
sti
mov
mov
cmc
scas
adc
pop
out
movl
dec
push
pop
jmp
mov
xor
ret
mov
mov
stos
pushf
cmp
sub
arpl
icebp
lods
mov
stos
daa
cld
push
scas
test
push
push
cli
add
fucomp
mov
sub
inc
xor
jge
sbb
mov
leave
jmp
lods
jge
fcmovnb
add
inc
int3
push
into
jmp
pop
sbb
test
mov
inc
adc
jb
add
xor
cmpsl
lcall
jb
lret
inc
inc
cltd
and
popf
fimull
cmc
xor
cltd
sahf
js
je
sbb
inc
pushf
or
out
xor
shr
out
insb
cmp
sub
xchg
mov
pop
jge
enter
dec
fidivrl
mov
jge
mov
dec
cmp
pushf
adc
jbe
or
cli
lods
repz
es
cli
xor
mov
fwait
dec
js
enter
mov
add
dec
dec
dec
aam
nop
fs
inc
add
stc
mov
imul
jbe
je
enter
sbb
or
lock
add
push
xchg
push
or
bound
das
add
insl
dec
and
aad
pop
and
sbb
inc
lahf
add
shlb
cli
ret
push
leave
sahf
les
repz
sbb
xchg
insb
dec
xor
mov
or
dec
aas
fldenv
movsl
adc
pushf
xchg
das
lahf
sbb
aas
mov
xor
mov
into
fadd
adc
mov
pop
call
mov
scas
jb
fwait
aam
out
jns
ret
sti
or
cmpsb
call
jnp
ror
jno
push
das
insb
pop
or
cwtl
int
xor
stos
clc
and
sub
dec
in
add
pusha
xor
lds
or
mov
sbb
popf
sub
fiaddl
clc
mov
push
into
int
fildl
sub
test
lds
push
pop
xor
push
ret
fninit
cs
dec
jecxz
dec
mov
adc
dec
scas
cmp
lahf
jnp
inc
and
push
ja
pop
in
inc
xor
dec
lds
scas
jae
lds
xor
dec
xchg
aad
cmc
jae
jne
push
pop
aam
dec
push
push
int3
push
xchg
xorl
frstor
inc
out
addr16
xchg
mov
mov
xor
loope
and
popa
ret
add
xor
lret
in
in
pop
dec
add
mov
shlb
shlb
ss
sbb
dec
sub
lods
das
mov
lods
adc
sub
xchg
cld
inc
fwait
xor
mov
cmpsb
xor
pop
lcall
iret
jmp
xor
arpl
aam
jg
in
dec
stos
clc
mov
loope
mov
ret
push
sbb
pop
int
mov
in
outsl
das
dec
in
xor
add
repnz
dec
pop
mov
insb
es
add
and
ret
fs
adc
and
xchg
cmp
outsl
jns
mov
in
ss
inc
push
or
mov
movsb
repz
jo
mov
shl
fsubr
in
push
mov
xchg
out
pop
mov
sub
cli
and
mov
bound
scas
inc
jns
lcall
scas
jne
cld
mov
hlt
test
imul
mov
mov
pop
out
lahf
mov
scas
test
fwait
out
inc
or
dec
mov
pop
icebp
jno
arpl
sahf
out
dec
mov
sbb
inc
xor
std
xlat
xchg
jg
mov
cmpsb
test
shr
cltd
adc
arpl
mov
dec
add
cltd
sub
lret
jae
or
lods
test
jmp
mov
mov
or
dec
shlb
ljmp
push
in
std
ss
enter
mov
popf
lods
inc
mov
sub
outsb
mov
inc
adcb
in
xor
cmpsb
fsubp
cltd
mov
out
mov
mov
xchg
fistpl
test
cmp
popa
cwtl
mov
dec
jmp
push
adc
out
mov
push
mov
mov
mov
call
inc
imul
dec
inc
fdivp
mov
int
mov
daa
subb
std
into
cmp
dec
pop
cmp
inc
or
adc
iret
push
incl
daa
rorl
in
clc
xor
leave
inc
sub
out
je
pop
xor
pop
arpl
popl
mov
sub
lcall
fistpl
out
pushf
repz
bound
in
les
add
fmul
cmp
add
push
movsb
xor
cmp
je
inc
add
mov
notb
sub
push
nop
movsl
mov
mov
movsb
jno
and
mov
js
enter
lods
iret
in
inc
mov
mov
add
xor
insl
sub
mov
pop
rcrb
scas
xor
add
sub
or
hlt
insl
and
iret
insb
or
scas
dec
loopne
lahf
fwait
stos
jne
outsl
sub
loopne
testl
xchg
nop
data16
mov
cmpsb
jl
stc
inc
cmp
mov
jl
mov
mov
mov
cmpsb
pushl
repnz
jne
test
mov
jae
stc
sub
icebp
cmc
fcoml
xor
mov
pop
int3
jle
cli
fmull
sub
mov
lret
mov
push
and
les
lds
xchg
imul
sbb
ljmp
mov
jl
std
in
cmp
adc
jle
nop
cwtl
aad
mov
cltd
mov
outsb
aad
xchg
push
pop
mov
test
test
rcll
repz
mov
icebp
push
xchg
ljmp
mov
std
pop
jae
icebp
loop
clc
mov
lcall
jmp
cmp
ja
pop
pop
and
lcall
jmp
mov
mov
sbb
mulb
xor
in
enter
jne
cs
cmp
mov
pop
sti
pop
ljmp
pop
add
mov
jnp
pop
mov
sbb
inc
push
neg
lods
out
sar
mov
cli
cs
mov
mov
or
call
sti
popf
je
lcall
sbb
std
mov
pop
aas
xchg
xchg
push
mov
in
and
mov
ds
pusha
rol
mov
aam
loop
jnp
mov
mov
mov
cmpsl
js
fcmove
add
jno
stos
stos
or
mov
lds
add
test
int3
mov
cld
sbb
pop
adc
add
outsl
mov
ljmp
stos
inc
les
scas
or
sub
or
fcompl
sbb
mov
mov
mov
inc
cmpsb
jae
mov
loope
and
sub
push
fwait
rcll
pop
sbb
out
scas
sbb
inc
dec
hlt
test
mov
lds
test
lcall
mov
lock
jne
popa
pop
mov
xchg
rolb
add
imul
mov
push
mov
mov
xchg
jne
shlb
adc
mov
cmp
xor
inc
addb
mov
cmpsb
pusha
cwtl
xor
mov
jne
pcmpeqb
fs
sub
xchg
dec
lods
ds
xchg
or
fsubrl
lock
addb
nop
cmp
inc
fwait
and
mov
inc
add
cmpsb
fwait
push
pop
div
std
pop
scas
cmp
lret
shlb
addr16
int3
ret
adc
shr
mov
sub
jmp
push
clc
push
movsb
arpl
mov
scas
cmpsl
dec
mov
xor
fiadds
adc
mov
outsb
lcall
push
ja
loop
add
inc
mov
icebp
ljmp
daa
icebp
sub
push
dec
stos
pop
nop
pushf
xchg
sbb
mov
test
adc
lret
inc
jle
pop
loope
jnp
cmp
shll
jle
test
fldcw
adc
inc
in
js
roll
aam
cmp
and
or
and
inc
xchg
iret
pop
movl
adc
push
ljmp
push
pusha
repnz
cmp
jmp
inc
push
daa
idivl
xchg
cmp
fwait
movsb
in
push
and
leave
inc
sbb
fstps
push
lcall
cmpl
mov
pop
int3
loop
lcall
cmp
lods
pop
add
movsb
fisubrs
jp
in
nop
add
push
dec
jae
push
jmp
mov
sbb
mov
xorl
and
jae
and
andl
mov
and
rol
in
jmp
jae
imul
insl
push
pop
icebp
add
pop
jno
dec
fs
mov
and
jmp
daa
sbb
or
mov
dec
jno
mov
popa
nop
push
scas
or
ja
dec
fs
rcl
inc
mov
dec
test
pop
push
mov
mov
ja
and
pop
lods
and
int3
clc
inc
inc
xor
scas
push
or
push
cli
mov
cmp
js
mov
sub
cmp
and
add
push
jl
push
cmp
inc
cmp
fwait
lret
jb
cmp
cmpsb
repnz
iret
lcall
cli
das
sub
mov
roll
sti
hlt
mov
add
mov
xor
pushf
or
test
mov
or
pusha
sub
xchg
jae
xor
mov
xor
adc
xor
mov
pop
xchg
popa
push
add
cs
or
xor
lock
mov
jbe
push
pop
xor
imul
jb
ret
pop
xchg
test
jge
xchg
cwtl
push
rorb
nop
call
xor
sub
es
cmpsb
fs
xor
pop
add
sbb
fcoml
or
aam
cmp
aas
ljmp
lock
iret
mov
sub
insb
test
inc
add
loope
aam
popa
test
iret
cmp
pusha
or
xchg
adc
or
movsb
add
cs
push
cmp
xchg
test
pop
lds
push
fldenv
and
fs
sbb
ljmp
fcomi
bound
add
xor
repnz
lea
pop
scas
inc
mov
mov
add
je
sub
mov
repz
pusha
xchg
or
jbe
in
out
incl
xchg
rorb
pop
cmp
dec
push
bound
mov
fsubl
aaa
jge
lods
dec
mov
popf
dec
aad
fsubs
or
and
xchg
jecxz
rclb
inc
lahf
pop
mov
repnz
data16
push
sub
cmp
pop
ljmp
repnz
xchg
movsb
pop
cmp
mov
dec
lods
cli
movsb
mov
push
jne
divb
inc
mov
shrl
ret
jle
icebp
xchg
xchg
push
hlt
jp
and
movsb
test
and
pushf
cli
cmpsb
roll
jne
dec
and
test
in
repz
cwtl
divb
lret
rorb
or
add
shrb
push
cld
xchg
mov
lea
push
mov
push
nop
cs
leave
lock
fwait
push
inc
arpl
into
cwtl
idiv
dec
jg
jl
fmulp
mov
ljmp
cs
mov
stos
push
arpl
enter
jp
movsl
pop
jmp
lods
lds
movsb
add
clc
mov
mov
xor
push
leave
pop
xchg
cmp
in
xchg
jbe
mov
cld
in
enter
or
mov
jmp
inc
scas
int
jg
dec
xchg
in
ret
mov
in
xchg
mov
mov
cltd
jo
sub
aam
xchg
ret
mov
adc
call
push
dec
inc
iret
add
daa
push
lods
push
mov
mov
mov
sub
cltd
lret
jno
vmovmskps
jno
insl
xor
sbb
mov
icebp
repnz
pop
or
movsb
jle
clc
sub
mov
ja
lods
xchg
and
lcall
mov
fsubrl
outsb
sub
jbe
fs
sbb
orl
mov
xor
loopne
cmp
loop
pushf
dec
adc
xchg
jbe
xchg
and
mov
pop
faddl
mov
mov
nop
inc
dec
add
sti
mov
test
push
std
mov
hlt
jecxz
mov
test
inc
push
push
in
fwait
cmp
and
nop
adc
cmpl
mov
aam
mov
add
int
cmp
adcb
ret
mov
or
pusha
xor
mov
jnp
lret
popa
mov
repnz
xor
push
cld
ret
mov
and
jmp
cmp
lret
ja
lcall
fildl
stos
test
pop
mov
loopne
jb
jo
xor
push
push
aad
jnp
jp
inc
pop
mov
sbb
aas
jno
mov
lods
jns
fldl
pop
hlt
decl
jbe
aam
pop
xor
rcrl
mov
inc
sbb
in
fwait
ds
in
or
xchg
mov
orl
stos
xchg
jl
in
mov
push
push
push
jne
imulb
mov
jno
out
pop
mov
jnp
adc
push
stc
inc
hlt
push
cmpb
imul
sti
dec
icebp
xchg
and
xchg
leave
cmp
jb
aam
sbb
je
mov
lcall
mov
pushl
xchg
push
dec
lock
dec
enter
dec
xlat
movb
imul
ds
inc
sub
xchg
clc
outsl
mov
push
mov
mov
in
cltd
fwait
jae
add
mov
jnp
and
jge
and
je
test
in
pop
mov
or
pop
fdivrs
push
xor
mov
jmp
jbe
movsb
dec
sbb
jnp
mov
ljmp
cmpsb
sub
ds
iret
xor
stc
xchg
hlt
pop
adc
cld
loop
mov
incb
stos
pop
cwtl
in
divb
cmp
push
ret
cmpsl
lock
xchg
jnp
lea
rcll
and
xchg
shll
rolb
dec
cmp
jecxz
scas
loopne
cmp
lods
xchg
ss
lahf
pop
mov
insb
subb
add
xor
and
inc
pop
aad
pop
lock
iret
xchg
insb
sub
jl
dec
cmp
clc
movsb
xchg
test
pop
inc
mov
lret
pop
xlat
add
push
fistl
dec
shl
mov
and
add
stc
or
xchg
test
daa
push
sbb
pusha
add
cmc
jb
cmp
mov
mov
and
cld
fucomip
mov
int3
scas
add
fcompl
hlt
xchg
aaa
cmp
push
add
xchg
mov
lds
add
lret
lret
mov
loopne
xor
add
movsl
stos
jmp
mov
push
mov
xchg
jo
clc
dec
in
xchg
mov
fsubs
sahf
mov
dec
or
pop
add
fwait
jp
imul
mov
add
popf
das
and
mov
push
xchg
dec
out
mov
cmp
sbb
pop
adc
add
sub
ret
and
inc
sub
testl
xlat
cmp
idivb
add
aam
jg
cmpsl
int3
add
push
add
cwtl
sub
or
stos
push
add
addr16
fistpll
test
cmp
std
faddl
dec
pop
in
cli
xchg
mov
nop
inc
xchg
add
out
in
mov
sub
insl
imul
xchg
mov
lds
jg
aad
ja
inc
popa
mov
or
adc
cmpsb
xor
jnp
xor
lret
jo
xchg
add
mov
in
push
cmpsb
xchg
mov
and
xchg
testl
xchg
mov
push
lock
test
loop
xor
arpl
jo
mov
xor
cli
cmc
nop
xchg
das
xor
adc
mov
shlb
lods
aaa
loop
jno
xchg
aad
inc
mov
and
pop
cmp
les
fcomip
push
or
repz
pop
stos
and
addl
and
cwtl
and
fs
rorl
xchg
aad
cmc
fildll
push
pushf
out
push
mov
inc
aaa
incb
mov
pop
mov
hlt
sub
jne
mov
lds
shl
das
mov
daa
leave
aad
mov
enter
out
xchg
bound
data16
fwait
push
and
pop
in
mov
scas
fyl2xp1
and
lret
icebp
xchg
mov
xchg
add
lods
sbb
sbbb
addr16
or
push
xor
lcall
ret
dec
xchg
sub
popa
inc
inc
mov
push
shlb
pushf
pushf
jae
add
pop
clc
stos
rorb
ljmp
popa
arpl
iret
leave
jb
mov
inc
pusha
pop
xabort
jb
mov
sbb
enter
jno
xor
clc
mov
and
mov
add
stos
inc
mov
lds
enter
xor
jns
dec
out
roll
adc
push
push
hlt
dec
xchg
or
js
bound
nop
sbb
repz
into
aad
repz
mov
mov
mov
add
xchg
and
andl
inc
cmp
loope
nop
jmp
das
jp
xchg
pusha
mov
dec
lea
sahf
dec
enter
aad
pusha
mov
lods
loope
out
lret
add
xor
cli
in
out
inc
mov
inc
repz
stos
or
stos
outsb
leave
shr
outsl
mov
push
out
stos
dec
mov
xchg
lock
mov
xchg
push
shl
in
dec
dec
scas
pop
popa
pop
or
adc
push
xlat
push
mov
stos
sbb
and
pop
subl
pop
nop
dec
xlat
mov
lret
jmp
push
and
mov
imul
mov
xchg
mov
outsl
jnp
mov
movsl
pusha
sub
outsb
and
loop
jl
mov
loope
sub
mov
cmp
mov
add
aaa
aam
repnz
inc
push
pushf
and
cli
clc
pop
nop
sbb
jnp
adc
or
and
push
stc
out
test
jmp
sbb
repnz
add
out
sbb
adc
dec
cmpsb
mov
dec
fucomip
enter
cmp
pop
xchg
mov
add
dec
subb
mov
scas
mov
pop
jl
inc
xchg
inc
dec
nop
movsl
jb
inc
pop
add
jg
dec
ljmp
insb
xchg
ret
xor
cmpsl
push
out
cmp
xlat
rcl
adc
mov
add
push
lahf
mov
mov
insb
icebp
cmpsl
lods
sti
jmp
mov
and
lcall
je
scas
lods
jo
dec
push
fildll
xlat
popa
add
les
in
jno
test
std
sub
int
pusha
repz
sbb
addl
js
push
push
dec
out
jb
lret
mov
nop
adc
inc
xor
pop
inc
jno
sub
fldt
dec
cltd
lahf
sarl
stos
bound
sub
pop
dec
xor
movsb
inc
xor
pop
mov
sub
sbb
repnz
or
fstps
negl
jp
movsl
fdivrl
jns
push
mov
dec
ds
std
sub
test
adc
dec
mov
in
inc
loopne
ds
cld
movsb
arpl
and
adc
lret
pop
pop
rcrl
mov
mov
xor
xor
in
inc
fdivs
dec
inc
mov
jl
pop
inc
bound
pushf
inc
mov
inc
pusha
rcr
outsl
cli
inc
mov
sbb
push
mov
mov
mov
jle
lcall
push
mov
mov
outsl
mov
pusha
cmp
mov
bound
jns
es
arpl
add
out
cmp
js
xchg
pusha
push
jmp
repz
sbb
and
cmp
fwait
in
push
jle
mov
lret
inc
mov
sbb
cmp
push
jecxz
repnz
stos
out
test
in
movsb
cwtl
sbb
bound
fwait
push
mov
out
repz
in
mov
mov
outsl
fdiv
push
mov
sahf
mov
insb
lcall
imulb
jle
jg
rclb
lret
mov
aaa
jge
testl
shrl
jl
ret
je
mov
adc
xlat
jge
data16
sub
shll
cltd
repz
push
mov
out
sbb
lret
lahf
std
dec
inc
jmp
int3
dec
addr16
inc
mov
xor
leave
test
ficoml
movb
daa
pop
popa
int
xchg
fwait
rorb
pop
xchg
or
cmp
test
leave
push
or
out
fnstsw
in
jbe
fldt
jmp
test
xor
mov
pop
dec
mov
and
outsb
mov
faddl
adc
push
cmpsl
ja
stc
jmp
jbe
int3
jb
lods
rcll
push
mov
jbe
not
and
cmp
add
jecxz
shlb
popa
ss
repnz
pop
jl
movsl
push
mov
aam
aaa
lods
pushf
xchg
lea
pop
nop
cmp
lods
mov
cmp
xor
or
add
jne
bound
mov
push
cmp
sub
js
mov
sahf
dec
decb
cmp
ret
test
sahf
mov
aad
jmp
adc
push
je
lea
imul
fwait
aad
mov
inc
gs
sbb
icebp
ljmp
cli
scas
push
pushf
insl
push
repz
cmp
fs
int
les
fwait
imul
data16
mov
shlb
test
mov
lcall
cld
mov
mov
arpl
test
imul
sti
inc
mov
iret
test
mov
mov
orl
push
mov
loopne
andl
mov
and
jb
mov
pusha
mov
mov
lahf
loope
mov
sbb
mov
lret
xchg
jecxz
or
nop
push
movsb
mov
gs
and
fs
mov
out
xlat
inc
out
ret
mov
out
inc
cld
hlt
push
push
sub
fwait
inc
sahf
insb
lods
sub
push
les
lahf
jnp
mov
and
hlt
sbb
imul
jp
xchg
mov
lahf
loope
imul
cs
aas
aad
icebp
icebp
sub
lds
or
in
pop
push
das
test
pop
mov
mov
int3
xchg
mov
bound
ja
mov
mov
ljmp
jmp
inc
mov
push
cli
in
outsb
add
cwtl
fmul
push
dec
pop
pop
jmp
lret
mov
movsl
lret
cmpsb
aas
or
inc
jge
jns
cmp
jno
loope
aaa
inc
adc
or
daa
push
outsl
xlat
mov
aam
flds
ds
sarb
scas
mov
lds
push
jmp
jno
xor
out
sahf
dec
pop
add
lock
dec
xchg
and
divl
mov
or
clc
daa
jle
fwait
stc
inc
sub
pop
cli
popf
mov
adc
jo
aam
xchg
lea
mov
lds
mov
push
scas
lcall
inc
lea
lret
pop
sbb
jl
add
cmp
sub
ja
or
dec
mov
add
add
icebp
mov
dec
mov
inc
lea
in
lahf
jl
movsl
xchg
pop
imul
cmp
pop
dec
insl
xor
les
test
std
lret
mov
cs
mov
clc
xor
mov
sbb
pop
clc
and
test
dec
cmp
cmp
aad
lret
cltd
push
icebp
movsb
stos
stc
pop
decb
stos
ret
pusha
bt
dec
xor
push
js
test
mov
imul
mov
inc
pop
and
in
adc
clc
test
nop
test
movsb
cmp
sbb
inc
idivl
mov
mov
adc
adc
stos
jne
dec
addb
xchg
jae
sub
push
je
cmp
fstps
add
xchg
dec
clc
sarl
mov
jmp
loope
aad
in
movsb
mov
dec
fidivrl
out
pop
call
push
push
movb
push
das
pop
mov
add
mov
mov
mov
bound
rcrl
sbb
je
add
inc
jp
das
mov
rclb
add
xlat
lret
inc
in
push
xor
jns
push
jle
or
push
add
pop
das
jno
dec
mov
mov
add
push
pusha
nop
cwtl
sahf
fimuls
xchg
xchg
xchg
gs
xchg
xchg
imul
andb
cmc
dec
lods
adc
pop
pop
in
shrl
fs
nop
mov
ret
jnp
stos
jl
aaa
outsl
sub
insb
lods
xor
and
mov
ss
int
fwait
dec
scas
dec
pop
adc
mov
arpl
cmp
adc
enter
into
sub
loopne
jg
add
loop
outsb
lds
dec
add
ds
push
push
cmp
cld
sahf
out
dec
popf
add
icebp
rcll
mov
inc
add
jns
adcb
mov
add
push
mov
frstor
xor
clc
test
push
push
mov
cmp
adc
movsb
popa
jae
sub
in
scas
xor
inc
inc
aad
nop
cli
mov
push
jmp
jg
xchg
xchg
sbb
dec
dec
xor
daa
and
or
cmp
imul
dec
test
ljmp
xor
mov
cli
xor
mov
inc
mov
dec
bnd
cwtl
cli
and
mov
cmp
adc
in
push
inc
dec
mov
push
mov
loopne
cltd
subl
mov
xchg
nop
stc
andb
push
cli
adc
mov
lret
fists
out
popf
and
dec
mov
or
in
jbe
loop
sub
and
dec
mov
shrl
loope
stc
cmp
js
aaa
ret
cmp
sub
aam
loopne
xchg
scas
out
dec
push
add
inc
int3
mov
pop
fwait
dec
and
es
fs
out
cs
dec
add
movsl
cmp
pop
mov
adc
stos
mov
mov
mov
pop
in
sbbb
lods
xchg
jg
jmp
out
jg
cld
outsb
sub
shlb
aam
cltd
popf
lret
cmc
test
or
or
int3
hlt
pushf
loopne
mov
dec
rcrl
pop
or
pop
cltd
sub
push
add
dec
ret
jbe
cmpsl
or
mov
data16
lods
sub
xchg
or
imul
mov
push
and
sbb
in
mov
jge
imul
add
cltd
mov
icebp
loopne
int3
arpl
mov
bound
push
shlb
fisubl
sbb
mov
xchg
sti
gs
jae
mov
bound
outsb
xor
aam
lds
sbb
jge
xor
push
shll
xor
xor
lret
push
in
xlat
das
or
or
mov
neg
cmp
pop
rorl
cmp
mov
out
les
pop
mov
adc
cltd
push
mov
cmp
pusha
xor
flds
mov
call
test
or
dec
or
fwait
adc
rol
and
and
inc
dec
push
mov
pop
xchg
out
cmp
int3
fcoms
rep
pushf
cmp
sbb
out
imul
cmp
jmp
fidivl
lret
in
flds
mov
fimull
adcl
int
cmpl
insb
cmc
cmp
xor
add
sub
aas
imul
pop
push
and
mov
dec
movsb
or
mov
add
mov
dec
ljmp
mov
int
fsub
cmpsb
mov
movsb
fwait
movsb
cmpsl
mov
xor
or
xor
lahf
mov
fwait
push
call
adc
pop
add
inc
roll
mov
and
movsb
gs
jecxz
sarl
cmp
movsb
jg
or
js
mov
adcb
icebp
pop
xor
hlt
xor
adc
js
xchg
popf
data16
dec
imul
arpl
mov
xor
ljmp
insb
stos
dec
ret
dec
popf
in
sub
lret
sub
rcl
ficoml
xor
lds
insl
sub
imul
xchg
sub
pop
aam
aam
xchg
movsb
mov
cmp
mov
call
or
in
shl
es
arpl
xchg
ss
adc
mov
shlb
sub
and
mov
insl
dec
mov
xchg
insl
scas
lods
mov
ds
mov
enter
loopne
daa
movsb
nop
scas
pushf
jmp
xchg
mov
pop
cmp
cmpsb
pushf
cwtl
lahf
sub
sbb
pop
out
fstpl
arpl
loopne
jae
sahf
les
or
sti
jbe
cmp
aaa
fsubs
push
mov
scas
movsl
cld
mov
inc
mov
cmp
mov
xchg
shl
flds
ret
aaa
pop
movsl
rorl
xor
pop
jle
inc
push
mov
mov
ret
xor
imul
test
es
mov
lods
ror
mov
add
mov
js
outsl
push
int
hlt
stc
gs
clc
cltd
shl
and
inc
mov
sbb
xchg
insb
in
sub
cmpsb
insb
repz
push
lahf
out
daa
jae
pop
cmpsl
cld
and
sub
fistpl
inc
daa
lods
int3
sub
or
dec
fs
int
push
cli
xor
xor
test
cld
sub
loopne
mov
enter
fsubrl
jns
sub
xor
fwait
dec
add
xchg
or
fwait
lock
icebp
dec
shlb
or
dec
gs
jnp
popa
or
adc
ljmp
dec
pop
scas
mov
mov
sbb
push
sti
popa
push
std
nop
iret
pop
sub
test
sub
mov
mov
add
inc
lahf
ret
mov
out
loop
dec
mov
aad
into
add
or
fucomp
mov
mov
mov
dec
test
jmp
pop
test
mov
inc
xchg
sbb
sub
add
sti
cmpsb
fwait
or
daa
stc
push
stos
sbb
push
mov
aam
icebp
pop
dec
mov
sti
pop
je
testl
scas
push
shrb
test
cmp
mov
jne
push
pusha
push
xor
jo
adc
mov
incb
mov
pop
nop
pop
push
in
fwait
popa
fs
fucom
push
push
mov
jl
and
xchg
sub
psrad
jns
lea
sub
adc
lcall
outsb
frstor
adc
push
adcb
test
xchg
and
or
nop
sub
mov
mov
in
ret
xor
test
push
jecxz
je
xor
adc
cwtl
add
in
into
cmpb
into
sub
jmp
icebp
jmp
sbb
push
mov
popf
sbb
add
call
adc
pop
loopne
and
mov
and
loopne
repz
add
cltd
call
mov
leave
jle
mov
mov
out
dec
out
testb
jl
or
add
pop
js
mov
sbb
inc
pop
mov
and
call
xor
mov
xor
xchg
cmp
mov
fwait
mov
rcl
stos
add
jmp
in
cld
jecxz
pop
daa
pop
pushf
pop
sbb
insl
loopne
stc
xchg
add
arpl
and
mov
push
sbb
mov
adc
add
mov
clc
imul
rcll
pusha
push
lods
mov
ljmp
aad
sti
push
push
hlt
xchg
mov
jne
dec
insl
scas
test
sarb
ret
mov
or
xor
mov
fwait
pop
and
push
cwtl
lods
and
cmp
mov
cmc
imul
outsl
jmp
pop
and
sbb
jmp
jmp
shll
pop
sti
xchg
xlat
sarl
dec
seta
xor
sub
xchg
cmc
mov
or
cmp
pmullw
addr16
xchg
mov
addr16
cltd
mov
xchg
je
in
sbb
xor
arpl
cmp
adc
mov
mov
divl
inc
xchg
pop
push
add
in
jb
mov
aam
mov
pop
mov
xor
aad
adc
xchg
xchg
scas
adc
xor
lret
mov
sub
adc
hlt
push
cmpb
decb
pop
xor
sbbb
sub
push
test
stos
cmpsb
mov
mov
pusha
jae
ret
ror
and
or
andl
pushf
mov
les
pop
int
dec
pop
sub
dec
cld
cmp
sarl
mov
fsubl
loop
mov
mov
scas
orb
adc
int3
push
int3
movsb
into
ss
jns
mul
aam
sub
jp
movsb
rorb
push
std
mov
sub
rol
ret
test
sub
mov
fistl
rcll
mov
test
xor
xchg
sbb
aad
add
sub
and
jmp
push
in
sub
push
mov
mov
ja
add
cmp
and
enter
lret
testb
test
or
enter
aas
mov
les
hlt
push
push
sbb
popf
jl
jb
daa
jge
scas
mov
popa
idivb
roll
adc
xor
ficompl
fdivrl
and
fistl
mov
jo
xor
mov
xor
jns
push
scas
pop
sub
jno
xor
mov
sub
fisubrs
xor
out
rorb
push
out
sub
push
jmp
dec
test
inc
sbb
mov
mov
xor
call
arpl
fisubs
xchg
pop
push
loopne
mov
jae
jb
lods
mov
incl
fnstsw
add
loopne
ds
xor
sbb
pusha
push
sub
add
in
inc
jl
and
aaa
lret
sub
mov
mov
stos
pop
cmp
cmp
hlt
and
out
shrb
sbb
pop
std
shlb
cmc
sbb
fcompl
ljmp
jmp
cmpsl
in
cltd
ja
and
jg
cs
inc
arpl
out
or
jns
andl
ljmp
sbb
cmpsb
stos
aas
jmp
outsl
dec
mov
gs
dec
sub
loopne
lahf
xchg
negb
addb
and
loopne
fwait
les
mov
jmp
pop
jle
pop
mov
idiv
sbb
xchg
jp
add
push
xchg
in
push
jg
push
inc
leave
mov
add
or
notb
xchg
jl
cmp
aas
loope
xchg
push
xor
push
icebp
xor
mov
fwait
xor
cwtl
add
cmp
mov
out
or
xchg
enter
mov
std
test
push
inc
leave
adc
idivb
jge
hlt
mov
repnz
inc
mov
jmp
push
in
xchg
add
lods
jecxz
fwait
test
arpl
cs
in
sub
leave
jae
lds
scas
push
mov
movsl
add
sahf
mov
push
add
xor
xor
sub
jbe
xlat
loop
mov
mov
push
das
push
inc
fdivrs
mov
lret
and
jbe
dec
scas
add
xchg
and
lods
shrl
adc
dec
rolb
popa
mov
sti
scas
xor
ret
mov
xor
push
test
std
int
popf
sti
inc
adc
lret
add
insl
in
movsl
mov
dec
test
mov
dec
add
jno
sub
cli
insb
fistl
cli
cli
push
addb
lcall
add
mov
test
nop
dec
lock
jns
jp
adc
testl
sub
jmp
mov
in
insl
notl
clc
mov
cmp
mov
sbb
push
adc
and
fwait
xchg
mov
push
pop
mov
xchg
mov
cli
rolb
jge
out
mov
aas
lods
dec
jns
movsb
scas
jb
aam
popa
and
sub
btc
outsb
lahf
ss
push
in
pop
aas
jae
pop
aaa
lret
adc
xchg
inc
fs
mov
jnp
hlt
aaa
hlt
loope
cmp
and
push
push
push
mov
rcrb
mov
mov
add
jno
adc
pusha
mov
lock
push
call
pushl
sti
ret
mov
je
cmp
cwtl
dec
in
lea
pop
cmpsb
push
aam
sub
lods
enter
popa
incl
pop
adc
mov
sbb
repz
in
fcmovbe
and
mov
pop
mov
imul
in
push
dec
test
testb
jmp
mov
inc
in
mov
mov
lods
cmpb
inc
dec
xor
push
xchg
scas
shl
cmp
fsubrs
or
cmp
aad
inc
mov
cmp
pusha
scas
sbb
inc
lods
in
popa
insl
cmpsl
mov
lock
and
xchg
mov
adc
mov
lock
stos
je
mov
pop
push
dec
test
push
pop
and
fldcw
pop
js
ss
push
mov
xchg
mov
sub
xorb
lods
pusha
push
ret
pop
ret
mov
inc
movsl
or
aas
and
mov
jge
ja
enter
scas
xchg
adc
ljmp
mov
xorb
push
xor
or
adc
repz
add
hlt
in
loopne
jg
dec
lods
push
out
enter
xchg
dec
add
out
lods
popa
pusha
mov
mov
test
lea
cli
mov
hlt
sbb
nop
pushf
mov
jns
mov
clc
fwait
loope
sub
dec
andb
data16
xchg
jle
cmp
jnp
clc
fistl
mov
push
mov
clc
jg
ret
mov
nop
cltd
mov
rcll
ret
or
cmpsb
ficomps
roll
clc
xchg
leave
outsb
cmp
mov
imul
mov
pop
adc
fs
mov
push
repz
sub
cmp
pop
xchg
mov
xchg
ret
popf
sbbb
lods
sbb
cmp
inc
jbe
jle
xchg
cmp
pusha
and
jecxz
mov
push
stos
mov
xor
jns
pop
sub
mov
mov
sbb
mov
pusha
xchg
and
popa
int
out
lods
pop
pcmpeqb
in
dec
jb
push
ret
pop
lds
popf
mov
add
push
out
xchg
scas
sbb
outsb
pop
cli
mov
stos
loope
shlb
je
jmp
xchg
dec
sbb
sbb
cwtl
in
out
stos
xchg
les
adc
xorb
adc
iret
pop
add
jnp
mov
mov
lds
es
xchg
add
ss
cmpsl
add
xor
stc
adc
jl
pop
mov
xchg
mov
add
rcrb
mov
out
mov
mov
xor
addr16
pusha
pop
xor
add
int3
cmpsb
int3
dec
mov
ret
add
fwait
xchg
cli
daa
dec
lock
movsl
pusha
sub
mov
test
popa
clc
xchg
dec
mov
dec
popa
mov
dec
mov
pusha
stos
add
push
dec
sub
mov
lret
lds
std
ret
mov
bound
shlb
mov
movsb
sbbb
xor
stc
inc
fcomip
cmp
cmp
jp
mov
hlt
pop
out
jl
mov
enter
lret
sbb
add
mov
mov
xor
and
movsl
jl
call
jb
in
mov
push
std
fisttpll
cld
xor
repz
jmp
mov
repz
test
std
mov
inc
cmp
cwtl
into
xchg
call
and
jno
jl
mov
lock
mov
pusha
xchg
cmp
lds
mov
push
xchg
or
sbb
outsl
loopne
pop
inc
adcb
jnp
pop
test
stc
cmp
xor
cmp
or
stc
scas
add
inc
test
inc
sub
push
leave
sbb
mov
std
jne
mov
sbb
roll
sarb
addr16
mov
test
mov
repz
stc
sbb
jmp
iret
mov
loope
push
test
adc
sbbl
leave
or
incl
loope
jle
jne
or
mov
mov
cltd
adc
lds
cmp
mov
stos
shll
mov
pusha
sub
lods
ret
mov
xchg
sub
shlb
push
mov
arpl
aad
in
sbb
xor
jo
pushf
out
mov
adc
hlt
dec
pop
mov
pop
mov
xchg
add
out
dec
mov
pop
nop
mov
push
js
xchg
and
cmovae
mov
loopne
test
lea
pop
out
inc
jnp
into
mov
call
jno
movsb
mov
lret
iret
mov
or
xchg
pop
enter
sbb
retw
cmp
jae
iret
sti
movsb
insl
add
dec
inc
sbb
add
andl
sub
je
mov
cld
pop
lahf
imul
mov
in
jmp
inc
adc
nop
mov
dec
dec
inc
imul
xrelease
adc
dec
scas
jne
cmpsb
jmp
mov
adc
out
sbb
imulb
nop
loope
shlb
and
aaa
icebp
mov
loop
std
jbe
inc
test
adc
je
cmc
and
add
mov
int3
popf
add
jmp
xchg
and
mov
mov
or
subb
dec
movsl
cmc
dec
lods
push
icebp
xchg
dec
and
cmp
mov
cmpsb
push
and
adc
mov
mov
cmp
push
inc
pop
xor
movsl
push
movsb
jp
add
call
into
in
pop
lds
cld
pusha
out
stos
out
lret
jmp
dec
stos
ljmp
shl
inc
mov
or
popf
lock
mov
fwait
push
mov
sbb
lods
lret
ss
dec
loope
iret
in
ret
lea
cmpsb
push
or
out
ljmp
cmpsl
mov
jae
jmp
sub
stos
mov
mov
scas
std
je
inc
push
xchg
mov
ffreep
mov
imul
divl
sub
and
outsl
es
bound
es
xchg
mull
mov
test
sub
data16
or
mov
dec
xchg
dec
cmp
sub
and
cmp
mov
or
dec
cmpsb
loopne
cmp
mov
push
xor
adcl
scas
jb
jne
fmuls
roll
bound
push
mov
cmp
push
test
test
out
lods
jl
dec
movsl
repnz
push
ljmp
mov
fistl
xchg
aad
cltd
out
int3
and
daa
in
sbb
or
inc
xchg
adc
mov
mov
push
scas
ds
and
mov
pop
in
xor
sahf
dec
push
out
stos
jne
jmp
pushf
fdivr
jge
jmp
out
je
inc
xchg
repz
jnp
adc
mov
loop
dec
imulb
push
movsl
dec
cli
pop
mov
mov
xor
imul
enter
movsl
shlb
in
fstps
pushfw
insb
out
cmc
aad
pusha
pop
jp
andb
in
lea
add
dec
push
stos
loop
xchg
addr16
loopne
mov
lods
xchg
outsb
mov
pop
sbb
xor
and
and
cmc
es
mov
and
test
and
mov
pop
bound
movsb
arpl
sbb
stc
test
dec
and
dec
hlt
stos
mov
mov
mov
xor
int
loopne
sub
cmpsb
fwait
imul
imul
cld
adc
lock
xlat
jns,pt
push
xlat
lret
mov
rcll
mov
repz
and
or
loope
inc
xchg
jns
xlat
jl
push
in
les
mov
push
lret
push
pop
repnz
mov
dec
fwait
rol
addr16
dec
sbbb
xchg
or
sar
lret
xchg
add
dec
fs
xor
push
mov
xor
sbb
fisubl
sub
pop
jb
aas
aaa
xchg
int3
in
push
jne
pop
cltd
xor
rorl
push
mov
pusha
sbb
cmp
mov
test
subb
mov
repz
insl
iret
inc
test
out
fwait
shrb
push
adc
lahf
cmpsb
or
add
dec
and
rol
lock
fwait
dec
and
sbb
pop
daa
dec
add
push
div
and
cli
cmp
mov
ret
repz
stos
inc
hlt
shl
and
xchg
cmpsl
sub
leave
das
mov
cwtl
or
dec
addb
lds
sbb
push
popa
and
or
jge
jns
repnz
mov
cmp
incb
icebp
ud0
mov
cld
in
pop
mov
scas
inc
call
and
iret
and
popa
arpl
les
adc
adc
mov
inc
inc
addr16
push
std
dec
or
or
arpl
fidivl
mov
cli
cli
or
mov
aas
lods
imul
mov
lahf
mov
push
mov
fwait
das
inc
cmp
add
xchg
in
out
sbbb
add
lock
outsb
in
ret
sub
mov
popf
add
loope
or
imul
cmp
dec
xor
mov
inc
cmp
popf
iret
gs
scas
ret
gs
jmp
popf
and
push
gs
adc
jle
pop
xor
sbb
jns
jg
aam
int3
sbb
xchg
mov
or
sbb
aas
js
or
shlb
mov
outsl
shr
fists
icebp
mov
push
xor
hlt
dec
popl
sbb
cltd
dec
dec
add
mov
mov
pop
xchg
enter
push
sbb
xchg
xor
sti
pop
mov
mov
sbb
lds
rcrb
sub
pop
dec
mull
xchg
in
inc
insb
imul
jae
xor
xchg
shll
mov
iret
xchg
push
cltd
xor
pop
sub
bound
dec
lock
sub
and
outsl
js
aaa
cmpsl
xchg
push
mov
aas
out
pop
sarl
xorb
add
mov
mov
xchg
xchg
gs
decb
clc
pop
cmp
xchg
fcomp
sub
dec
in
dec
jne
fisttpll
das
mov
sahf
mov
mov
or
xor
out
aaa
je
and
dec
xchg
pop
stos
subl
sub
repnz
xchg
in
add
stc
js
jecxz
cwtl
dec
xchg
loope
adc
cmp
nop
push
sti
movsb
scas
popa
cmp
fiaddl
shlb
adc
cwtl
into
jl
push
rcl
dec
imul
inc
mov
mov
and
xchg
ds
mov
popa
add
into
adc
adc
cmc
cmp
add
insl
sbb
mov
pop
fbstp
mov
std
mov
mov
add
cli
addb
jmp
jge
or
stos
test
dec
push
je
popa
rcrl
pop
cmpsl
lods
xchg
repnz
sub
cmp
fdecstp
sbb
dec
pusha
add
leave
mov
and
jne
data16
sar
fwait
push
sbb
les
fadd
xor
pusha
in
mov
lds
or
adcl
jle
out
xor
dec
int3
loopne
dec
int3
jb
or
jno
movsl
push
xor
fdivl
and
mov
addb
lea
xlat
leave
insl
cs
push
int
pop
les
pushl
fwait
pop
mov
sub
arpl
mov
sbb
nop
sub
jo
xor
mov
push
mov
push
ret
and
enter
test
add
jb
repz
divb
shlb
fwait
std
mov
cmp
aam
stc
incb
fcomip
dec
pusha
jg
inc
scas
das
pop
adc
lods
testl
push
call
mov
cmc
mov
add
inc
mov
inc
pop
mov
movsb
aam
mov
mov
mov
pop
scas
pop
lods
xor
cwtl
hlt
mov
scas
push
cltd
sub
fsubrl
or
adc
pop
jg
daa
adc
sbb
test
es
loop
and
mov
mov
jl
xor
sbb
mov
stos
push
lcall
imul
shlb
cwtl
adc
lock
jo
pop
sbbl
icebp
mov
in
add
or
cmp
push
loope
scas
mov
sti
lahf
push
inc
iret
ds
out
xor
pusha
lret
incl
mov
pop
jne
pusha
fimuls
enter
iret
mov
jmp
jecxz
nop
movsl
out
or
mov
mov
lahf
mov
out
ret
test
ds
insb
push
enter
movsb
jo
enter
sub
mov
imul
mov
jecxz
out
sbb
jae,pn
jb
xchg
jb
sbb
push
inc
clc
pop
push
xchg
pop
or
cmp
push
xor
jl
out
shrb
lods
adc
xlat
dec
cmp
aad
push
in
fnclex
les
pop
mov
cmp
jno
pop
andl
sub
lock
jbe
add
or
push
lock
or
cmp
xchg
arpl
int
pop
add
mov
inc
sub
inc
inc
je
jnp
icebp
dec
xor
mov
add
jne
fwait
arpl
xor
loopne
mov
or
fldpi
cli
pop
mov
xor
mov
mov
pop
std
inc
mov
push
push
dec
pop
jmp
pop
mov
cltd
repnz
call
mov
ret
push
adc
addr16
push
pop
mov
jne
fiaddl
pop
xor
add
adcl
ret
icebp
cld
mov
pop
adc
jb
jns
insb
jae
loopne
addb
dec
lret
adc
mov
pop
aaa
xor
pop
nop
das
hlt
arpl
and
mov
and
mov
push
imul
aad
xor
sub
daa
rorl
cli
pop
inc
sbb
xchg
nop
ret
push
je
xlat
and
push
push
mov
xchg
mov
ficoml
enter
cmp
icebp
ss
inc
lcall
pusha
dec
loop
and
cld
pop
int
stc
push
pop
mov
lcall
xchg
or
or
jbe
test
pusha
repz
cli
mov
and
notb
mov
cld
fwait
movsl
call
mov
jae
pusha
inc
and
out
nop
xor
push
mov
fiaddl
jle
dec
lahf
sbb
lock
clc
jmp
les
fwait
icebp
sahf
xchg
add
lods
lret
inc
sti
xchg
mov
dec
scas
mov
push
stos
ss
and
ljmp
inc
hlt
addr16
jo
pop
ret
mov
add
dec
popa
les
sbb
pusha
sbb
enter
rolb
mov
mov
mov
mov
add
movsl
inc
rcrb
stc
je
out
mov
inc
fisttps
push
inc
cmp
lret
jo
subl
dec
xorb
jo
in
frstor
push
mov
movsb
rcrb
repnz
pop
stos
cmpsb
fdivp
push
xor
aad
xor
addb
xchg
mov
push
lea
in
js
and
ja
loopne
pop
push
pop
addr16
addr16
lahf
push
mov
scas
mov
mov
mov
mov
push
subb
lods
mov
cld
mov
outsl
jmp
cmp
ss
ret
cmp
rcll
aas
pop
cltd
std
enter
mov
sbb
dec
call
hlt
subb
aam
cld
sar
lcall
gs
div
cmp
sbb
jno
and
imul
test
stc
test
clc
cltd
std
xchg
orb
in
lret
jl
jmp
lods
popa
or
dec
das
push
sarl
arpl
mov
or
das
fsubrl
jne
cmc
into
xorl
xchg
mov
lret
mov
rcpps
in
xchg
inc
xchg
pop
jmp
jmp
es
shrb
in
fisttpll
fildl
lahf
lods
and
imul
into
movsl
and
lods
and
js
lret
sbb
lods
sub
popf
lods
sub
lret
sbb
out
mov
mov
adc
outsb
out
fs
sbb
dec
arpl
cmp
and
lods
cmpxchg
inc
and
adc
inc
mov
mov
cwtl
jo
cmp
xchg
xor
faddl
cmp
fsub
out
stos
inc
lcall
pusha
and
mov
sahf
scas
push
add
js
xchg
inc
jns
dec
jl
pop
insb
lcall
inc
jl
pop
aam
cmpsb
imul
aaa
xorl
andb
add
cmp
ret
or
xchg
xor
jg
aad
clc
jbe
fbstp
pop
aaa
arpl
ss
and
cld
aad
mov
pusha
mov
fimuls
jl
xchg
push
decl
andb
shlb
lods
dec
notb
push
ljmp
inc
clc
xlat
call
cwtl
push
pusha
jle
cmp
int
cmpsb
mov
sub
sbb
repnz
test
jle
adc
pop
xchg
lds
ljmp
je
cwtl
dec
data16
mov
mov
lods
or
pushf
mov
lret
add
ja
rclb
mov
scas
and
push
push
push
test
mov
negb
repnz
popf
das
aad
mov
xorl
mov
xor
pop
jmp
sarl
stos
loop
stos
inc
sbb
xchg
testl
lcall
hlt
mov
mov
cs
xchg
push
sbb
xchg
xor
pop
lahf
xchg
lahf
jle
cmp
fsubrs
xchg
cmpsl
xchg
fimuls
mov
xor
push
jne
mov
inc
push
fwait
hlt
push
jg
bound
andb
pop
fwait
and
clc
pop
cmp
mov
rclb
idiv
or
mov
in
pop
push
cld
cmpsb
push
fildl
mov
hlt
jns
sbb
ds
mov
mov
push
push
jbe
out
dec
xchg
mov
cli
scas
mov
xchg
cmp
es
sbbl
mov
add
movsb
add
xchg
in
sahf
out
loopne
fstl
sahf
mov
mov
imul
fs
shlb
xchg
jae
loop
orl
pop
push
popa
mov
pop
ja
rorl
jl
jne
sub
roll
cmp
ret
out
sub
and
xchg
mov
mov
jno
add
je
mov
mov
loope
popa
sbbl
decb
repnz
push
addb
xor
dec
addb
xor
xor
stos
xor
in
pop
mov
push
push
mov
xchg
cltd
add
mov
dec
xchg
xchg
mov
cmp
rcrb
into
mov
sub
cmc
fcmovu
pusha
mov
sbb
mov
adc
shll
idiv
lret
stos
xchg
mov
std
lds
sub
es
in
stos
mov
cmpsl
fidivs
dec
fnsave
and
test
stos
inc
imull
or
mov
push
pop
pop
clc
cmpl
sti
jp
dec
repz
cmpsl
cmp
popa
out
je
loopne
pushf
leave
into
lds
or
adc
mov
jno
inc
adc
dec
adc
mov
push
out
sbbb
cmpsb
subl
push
mov
xchg
bound
mov
cmp
adc
fmul
xor
sbb
inc
sub
push
mov
jmp
cmpsb
in
xchg
andl
jg
in
and
sbb
cmc
push
andb
out
mov
mov
dec
cmp
cmpsl
fisttpll
mov
jnp
mov
pop
cltd
and
xchg
pusha
add
flds
add
repnz
test
jb
inc
and
not
add
and
push
jno
or
lret
jp
decb
dec
add
les
dec
sbb
cld
iret
pusha
std
jp
pop
inc
cltd
adc
aas
es
cmp
aam
mov
and
push
rcrb
and
fisubrs
xchg
add
cld
sbb
push
repz
pushf
leave
std
push
sbb
sahf
jb
cwtl
mulb
sub
mov
cltd
mov
xchg
notl
mov
arpl
leave
jmp
xchg
xor
jns
mov
std
jnp
xchg
mov
dec
rolb
int3
lahf
mov
daa
enter
stos
mov
bound
rolb
mov
negl
push
cmp
mov
lahf
push
dec
dec
punpckldq
fmuls
fdivl
mov
push
or
cmp
jle
cmpsb
into
decb
scas
mov
xor
adc
repz
loopne
jmp
sub
test
dec
push
clc
pop
mov
dec
inc
cmp
scas
push
cwtl
dec
sahf
orl
loope
pusha
jns
and
jae
jo
mov
mov
push
loopne
leave
push
mov
scas
mov
test
inc
pushl
xchg
into
repnz
push
add
pop
leave
jns
push
dec
sub
stc
dec
adc
push
adc
pop
cmpsl
lods
push
lods
pop
mov
popa
sub
mov
daa
movsl
mov
lcall
mov
out
jg
xor
mov
sahf
mov
mov
ljmp
push
mov
aaa
jb
pop
stos
insb
dec
aam
in
iret
sbb
pushf
add
cmpsb
mov
mov
jae
addr16
pop
push
lahf
inc
ficoms
jns
xchg
xchg
cmp
icebp
dec
flds
xor
add
cld
imulb
add
mov
js
movsl
or
in
in
sti
orb
push
lock
fdivrs
push
cmp
push
aaa
fcmovb
pusha
rcll
pop
mov
scas
jp
ret
rcr
divb
loopne
jnp
push
stos
je
push
push
mov
js
outsb
out
or
stos
push
arpl
mov
mov
dec
repz
and
xchg
push
arpl
mov
jno
filds
rolb
jle
testl
sub
sbb
xchg
pushf
es
sub
mov
aad
mov
mov
test
adc
inc
fdivrl
jns
dec
pop
sarb
shufps
pop
mov
jnp
and
push
dec
dec
les
add
sub
mov
je
push
fwait
ret
and
test
push
xor
lea
or
data16
and
loop
xchg
push
mov
mov
sahf
mov
fucomi
sub
stos
dec
sar
xor
dec
inc
shrl
movsl
or
jb
cmpsl
xchg
in
cmpsb
inc
cld
cmp
hlt
in
lods
ret
mov
and
scas
lea
shll
mov
mov
push
adc
das
inc
imul
jge
and
inc
push
test
push
mov
scas
add
adc
movsb
fsubrl
xorb
pusha
mov
test
leave
and
data16
cwtl
mov
mov
fidivrl
push
xchg
jb
jmp
lods
cmpsb
and
xor
cmp
xor
in
pop
fsubs
fwait
mov
sub
outsb
cs
sbb
mov
add
jge
xor
sbb
or
out
jb
xchg
mov
sub
xchg
pushf
ss
adc
iret
mov
les
push
and
inc
sub
or
or
dec
pop
les
dec
call
mov
mov
jle
in
inc
inc
push
rcrl
pop
jns
dec
and
test
movsb
sbb
add
sbb
stc
notl
cld
dec
inc
pop
xor
out
orb
pop
cwtl
out
jle
xor
xchg
pop
insl
ljmp
adc
mov
adc
push
jp
mov
fcomip
adc
inc
dec
out
imul
mov
lret
fs
lock
fwait
pop
or
fwait
adc
xor
fstpl
mov
shl
sti
lcall
cmp
lahf
fwait
xor
sbb
jmp
and
push
mov
jb
clc
aam
call
mov
adc
xor
mov
or
pop
sbb
cmpsl
inc
pushf
pop
jle
inc
sub
cld
add
cmpsl
mov
and
das
cmp
scas
xchg
mov
cmc
mov
fwait
inc
or
and
bound
rorb
mov
loopne
scas
add
shlb
xchg
xchg
data16
loopne
daa
into
std
lods
sti
lods
sbb
mov
mov
cmp
ds
and
dec
bound
sti
test
push
loopne
loope
jno
insb
jb
into
and
cmp
mov
xor
pop
push
cmp
xor
iret
cmp
xor
aaa
subl
xor
gs
jno
sbb
lret
sub
add
mov
loopne
adc
sbb
out
mov
adc
imul
ret
fdivrs
jne
lock
cmpsb
mov
xchg
clc
mov
aas
mov
iret
mov
push
mov
push
jg
mov
xchg
mov
mov
mov
xlat
icebp
lea
cmp
loop
mov
mov
adc
out
adc
gs
mov
sub
mov
xlat
mov
push
test
xchg
jl
dec
mov
xlat
cli
and
mov
mov
cmpsb
jmp
mov
stos
enter
lods
jnp
push
int3
cmp
bound
jmp
loop
cmc
testl
repz
mov
inc
add
insb
shrb
test
jp
xchg
sahf
loope
das
push
mov
sbbb
in
inc
mov
mov
xchg
xor
je
js
movsl
cmp
inc
sub
lods
popf
loope
add
in
and
push
xchg
mov
pop
sub
jbe
fldt
mov
xchg
sub
dec
rorl
es
je
sbb
cltd
dec
mov
addb
inc
and
and
sbb
test
ret
jnp
cmp
stos
adc
push
push
and
push
ret
cmc
jno
fadds
scas
mov
xchg
out
ret
fwait
pop
add
xchg
jmp
xchg
or
mov
mov
lods
lret
clc
ret
test
xor
mov
repnz
mov
fwait
inc
or
ret
daa
leave
add
imul
xchg
mov
idivl
jl
nop
and
mov
xor
sbb
cwtl
js
incl
or
xchg
push
cld
add
mov
sub
js
addr16
test
push
push
pop
push
and
loope
xlat
cli
lea
add
xchg
mov
pop
das
jge
pop
fdivl
out
pop
mov
push
inc
or
xor
add
dec
repnz
dec
call
push
xor
xchg
xlat
xchg
out
js
sbb
add
add
cltd
loope
push
push
xchg
test
push
mov
adc
dec
aaa
les
fmuls
mov
aad
sahf
andl
out
push
pop
jmp
dec
sbb
mov
cmpb
adc
xor
mov
pusha
pop
insb
mov
cmc
sub
outsl
in
hlt
sub
sbb
test
pop
mov
sub
cli
pop
arpl
call
pop
fcmovnu
rcrl
cmp
push
call
adc
sbb
xchg
mov
mov
clc
mov
lods
and
test
fs
sub
add
call
mov
sbb
in
iret
sub
cmp
cmp
fs
cmp
fsubrl
push
push
xchg
xor
into
mov
mov
fists
pop
xchg
int
aaa
sar
push
push
aad
lock
jns
jne
add
nop
fs
adc
adc
bound
push
inc
imul
out
outsl
sub
in
and
aas
enter
fwait
mov
push
and
mov
lahf
gs
mov
pop
or
push
mov
mov
dec
aam
xchg
jmp
nop
cs
and
das
std
nop
scas
test
icebp
js
loopne
insl
movb
mov
and
repz
out
jb
test
dec
xchg
scas
scas
test
mov
inc
pop
or
das
pop
imul
xchg
and
aaa
pop
inc
bound
mov
repz
fsubs
gs
fisubrl
xchg
imul
xchg
xchg
lea
js
cmc
jno
dec
pop
rclb
sbb
insb
xlat
dec
ds
mov
mov
dec
std
inc
or
in
push
push
mov
pmulhuw
lret
inc
dec
mov
push
adc
les
push
mov
sbb
jo
sub
lock
testl
ljmp
iret
ljmp
add
divl
enter
jno
add
shrb
sub
cs
dec
inc
pop
les
subb
mov
pop
pop
cmp
pop
vphsubwd
mov
sub
dec
pop
out
adcl
adc
mov
repnz
andl
je
scas
add
lahf
push
jge
mov
dec
or
mov
push
sub
cmpsl
ret
xor
push
mov
mov
dec
sahf
xor
xchg
div
xchg
fcoml
iret
xor
xchg
mov
bound
xor
mov
bound
dec
lret
cmpb
testb
mov
mov
mov
xchg
jno
inc
data16
mov
or
pop
jecxz
push
in
lret
mov
xor
and
sub
fistpl
popa
inc
xor
mov
sbb
sub
arpl
jp
mov
je
dec
fwait
mov
daa
sbb
sub
mov
pusha
sahf
cli
repz
cmpsl
dec
xchg
mov
sub
rorb
or
pushf
sub
mov
fwait
dec
pop
out
mov
test
jl
loopne
push
leave
push
push
aas
adc
je
popa
lock
adc
and
add
jl
scas
sbb
xchg
cmp
in
xchg
add
lds
leave
pop
leave
in
icebp
outsl
gs
popf
xor
ret
es
cmpsb
cmp
cld
cwtl
and
xchg
out
mov
dec
lods
add
jae
popa
cltd
xor
ret
aas
sbb
push
or
test
jno
cmp
fsubrl
fimull
stc
or
xchg
and
lea
in
test
xchg
fstpt
fnstcw
sbb
je
jecxz
bound
mov
daa
and
push
mov
out
out
sbb
dec
pop
insl
or
out
ret
mov
xchg
mov
cld
mov
ret
negl
add
mov
repz
and
mov
inc
adc
repnz
or
arpl
test
jno
mov
stos
push
int3
fwait
es
mov
pop
hlt
sbb
or
xchg
cmp
fcmovbe
pop
mov
lret
icebp
pop
and
out
push
es
aad
cmp
xchg
lods
sbb
outsb
mov
push
cld
dec
ss
rorl
ret
jmp
add
mov
out
mov
lods
test
jb
mov
push
xchg
sbb
insl
mov
adc
mov
jmp
xchg
subl
outsb
js
dec
push
int3
lret
scas
xchg
ljmp
scas
in
aas
mov
mov
shl
adc
pop
arpl
das
not
dec
test
out
pop
mov
int
cli
das
lds
fmulp
push
jmp
mov
popf
cwtl
dec
sarb
xor
mov
mov
cwtl
psubsw
popf
loop
in
lahf
mov
sahf
aad
je
and
mov
jl
pop
or
ljmp
mov
push
lcall
inc
jge
call
cmp
daa
dec
and
shl
fidivrs
xorb
and
mov
push
cmc
bound
fwait
pushl
scas
out
shlb
lock
pop
cmp
dec
fwait
popa
mov
cmpsl
ret
enter
inc
lea
into
lds
cld
pusha
mov
or
lds
addr16
fwait
cmp
nop
inc
testb
push
jae
sti
add
pusha
jl
subb
imul
dec
cli
jo
and
xchg
jecxz
mov
loop
mov
and
scas
popa
lahf
in
loop
stos
lock
pop
and
test
shlb
xor
test
and
pop
aaa
or
jle
push
int3
jl
mov
sbb
push
push
and
jno
dec
sub
xor
mov
lret
loope
inc
cmp
dec
dec
lea
and
mov
xor
xchg
add
mov
ja
sbbb
jae
iret
or
pop
add
inc
dec
aaa
dec
addr16
xlat
in
xchg
xor
xor
int
mov
or
jno
lods
aam
mull
lahf
dec
mov
call
mov
xor
movsl
in
cmpsl
rolb
add
push
leave
jge
fistps
scas
pop
or
sbb
lock
pop
std
jge
fldcw
popa
divb
inc
stc
mov
mov
push
mov
cmp
ret
inc
fs
fsubs
cmp
dec
sti
dec
and
dec
and
mov
leave
and
push
xchg
xor
sbb
xor
xchg
cli
cmp
stc
fidivrl
and
stc
add
sahf
aad
bound
and
inc
pop
inc
es
mov
ret
data16
loopne
fcmovne
mov
das
sahf
sbb
jo
pop
mov
mov
jle
popa
jmp
popf
push
push
cwtl
add
scas
outsb
insb
xor
test
test
shrl
test
xor
lret
fwait
and
int3
clc
mov
mov
sbbl
dec
nop
into
stos
dec
cld
sub
stos
add
and
mov
sbb
and
sarl
xor
mov
mov
dec
mull
imulb
mov
xor
or
inc
js
mov
fiadds
js
popf
leave
jno
mov
fmuls
adc
in
cmc
jl
call
or
repz
movsb
sub
and
add
xor
sub
cld
and
rcrl
mov
or
push
test
daa
sub
les
push
xchg
adc
mov
roll
add
in
or
push
fs
push
pop
mov
pop
cmp
add
cld
sbb
push
and
es
es
call
push
rcrl
test
cmp
push
xor
mov
ja
pop
es
pop
inc
add
sub
mov
pop
xor
lock
lock
iret
mov
xlat
in
sub
cli
jno
mov
data16
fnstcw
pusha
mov
jae
outsb
push
sbb
in
xor
jp
repz
mov
mov
xchg
cmovno
gs
xor
je
add
inc
nop
cmpsb
sub
pop
mov
mov
push
cmp
lahf
in
or
div
cld
push
mov
pop
lds
cli
out
xor
or
pusha
mov
mov
into
xchg
pop
mov
jno
sti
xchg
jae
repnz
lea
out
call
or
repz
or
gs
jecxz
push
cmp
call
in
mov
sub
andb
movsb
shrb
push
aas
pmullw
pop
aaa
call
xor
xchg
lea
pop
movsb
push
dec
cs
rcrb
jp
or
data16
mov
mov
scas
dec
dec
hlt
mov
xor
jmp
and
jecxz
iret
jl
in
scas
lock
pushf
lock
push
bound
push
mov
push
popa
pop
adc
fchs
std
out
test
cmp
cmpsl
addr16
mov
ss
mov
jl
xorl
add
iret
into
add
mov
movsb
sub
out
or
and
fwait
jecxz
cmpsb
pop
cld
push
sub
sub
cmpsl
add
shll
dec
pop
lret
mov
mov
repz
je
jg
push
inc
movsl
or
out
clc
adc
icebp
dec
pop
sarl
or
cmp
xchg
xlat
jp
or
sub
test
mov
push
lods
add
mov
mov
ret
mov
cmp
jbe
mov
mov
int3
pop
fisubrl
insb
pop
inc
fdivrp
push
fwait
cmp
jge
clc
adc
jne
fisubrs
lods
mov
nop
mov
mov
adc
das
and
and
test
jmp
imul
lock
filds
mov
cmpsb
daa
adc
xorl
sub
adc
sub
hlt
int3
sbb
dec
jb
push
divb
mov
std
ljmp
lds
mov
data16
push
xchg
stos
add
roll
iret
addr16
repz
mov
int3
sbb
and
push
inc
lock
cmc
imul
pop
mov
jb,pt
push
rcrl
les
loope
pop
push
bnd
fmul
xlat
lods
loope
push
sub
dec
popa
and
pop
or
mov
int3
push
xchg
and
movsb
fcoml
dec
movsb
pop
daa
mov
repz
mov
call
sub
dec
sbb
addb
or
fs
test
lea
jecxz
add
ljmpw
aas
pop
lret
xor
div
and
in
adc
daa
xchg
repz
lods
in
fcomps
mov
mov
dec
hlt
push
jge
ja
nop
adc
aad
or
pop
outsb
lods
shll
jl
fnstcw
adc
sub
addr16
or
lret
mov
loope
in
loopne
fisubl
cmc
jl,pt
mov
lods
fstpt
ljmp
cld
pop
pushf
loop
cmp
push
mov
cmp
sbb
mov
stos
sub
xchg
rorb
cmpsb
stc
testl
or
add
ret
and
nop
addl
xor
cmpsb
cmp
testb
xchg
jno
mov
inc
xchg
xor
inc
test
stos
std
xor
or
outsl
mov
call
ja
or
rcl
mov
mov
pop
inc
jecxz
repz
stc
xorb
mov
xchg
mov
adc
mov
pushf
dec
negb
popa
sub
popa
sub
lods
jecxz
loop
jb
mov
je
and
out
mov
inc
push
cli
sbbb
test
inc
fiadds
je
inc
sub
and
pop
out
ds
cmp
mov
movsb
es
jle
lea
xchg
push
popf
icebp
dec
xchg
pop
fs
push
inc
test
inc
adc
nopl
cmp
imul
cli
mulb
ljmp
rol
lods
xchg
xchg
test
pushf
lahf
jnp
sbb
mov
inc
push
imul
aaa
cmpsl
push
mov
push
push
push
sub
adc
in
aas
jno
aam
sbb
cmpsl
mov
xchg
and
lahf
iret
sub
pop
test
pop
iret
or
sti
cmpsb
sti
sbb
dec
jb
sub
inc
inc
nop
rorl
addr16
add
aam
data16
inc
mov
fwait
inc
add
inc
add
jno
call
xchg
shlb
ljmp
das
adc
cmp
stc
mov
push
ss
cmp
sbb
loop
sbb
scas
mov
mov
aaa
dec
mov
mov
call
and
dec
ljmp
fucomi
in
sub
loopne
or
sub
cmpl
rcrl
adc
mov
sbb
mov
lahf
rol
int
cwtl
mov
lock
jle
xchg
fdivrl
pop
push
rolb
pop
lods
mov
or
movsb
repz
xchg
sub
lea
mov
pop
push
inc
add
lods
cltd
loop
movsl
xor
jno
adc
or
push
hlt
fs
inc
adc
rolb
jecxz
jno
outsl
dec
sub
mov
movsb
pop
cli
add
xchg
std
mov
pop
inc
cli
add
out
or
rorl
rcl
out
insb
out
push
cltd
in
mov
sbb
xchg
mov
orl
jno
jno
movsb
push
cmpsb
sbbl
mov
xchg
inc
cmp
test
xor
sub
xlat
xor
lods
jge
and
mov
jae
mov
mov
js
push
adc
stos
and
outsb
in
xor
sbb
mov
adc
mov
ret
test
call
inc
xchg
fs
hlt
sbb
lods
sub
mov
lods
xchg
movsl
mov
int3
scas
xlat
mov
outsl
mov
mov
add
mov
and
sti
je
or
stc
xchg
pop
or
sbb
call
mov
out
sub
sti
inc
jb
fwait
icebp
push
push
inc
push
dec
cmp
mov
jo
mov
push
sbb
push
mov
sarb
mov
in
dec
and
adc
cltd
jne
dec
leave
cld
or
test
push
scas
mull
inc
enter
mov
xor
in
mov
hlt
dec
fwait
sbb
outsb
fcmovnb
inc
notl
dec
pop
pop
repz
cmp
xchg
outsl
imul
adcb
icebp
sub
shll
mov
outsl
int3
mov
and
or
mov
dec
push
adc
jl
xor
ja
push
popa
and
je
hlt
pusha
xor
xor
popf
push
std
push
pushf
inc
jae
stos
jp
pop
popa
sti
lock
sbb
push
nop
aad
jne
xchg
test
mov
push
add
mov
mov
loopne
jns
rsqrtps
push
xor
mov
aam
cmp
out
ja
pop
lahf
rcrb
ljmp
mov
mov
xor
sub
cwtl
loope
pop
lods
dec
arpl
inc
ljmp
je
dec
mov
inc
loopne
cltd
sahf
mov
jge
add
jno
dec
jle
jae
mov
aaa
mov
cltd
daa
out
xor
dec
cwtl
sti
es
mov
test
push
out
test
lret
shrl
add
mov
sub
and
or
and
push
stos
aam
movsl
dec
add
imul
test
mov
sub
jl
jbe
pop
je
xor
push
subb
dec
mov
mov
shll
jb
xchg
das
test
jg
and
cmpsl
aam
rcll
aaa
test
pop
lods
cltd
lds
cltd
mov
scas
mov
jle
cmp
jmp
jno
jbe
pop
cmp
cli
jnp
push
sub
int3
mov
ret
push
mov
push
std
mov
and
mov
xor
mov
mov
test
pop
aad
push
xchg
out
xchg
sub
mov
push
mov
adc
sub
xchg
and
xchg
imul
or
mov
mov
jns
popf
inc
imul
jne
inc
mov
mov
sbb
in
cmpsb
xchg
fwait
mov
adc
pop
test
mov
repz
mov
loop
stos
ss
lds
into
outsl
fsubrs
lods
jb
mov
or
jae
loope
cs
lds
cmp
mov
dec
or
stos
adc
add
enter
xchg
testb
adc
push
test
into
sbb
sub
sti
mov
lcall
push
dec
cwtl
dec
cmp
iret
leave
or
xchg
mov
push
notl
fildll
aaa
stos
sbb
xchg
jne
insb
jno
or
dec
mov
mov
in
jns
and
jne
lret
cmp
ja
mov
mov
xchg
sti
icebp
je
mov
shrl
js
xchg
push
mov
and
in
aas
mov
push
inc
popa
sub
lds
into
sar
xchg
ljmp
push
in
or
sub
aam
sahf
or
in
xchg
sub
dec
and
ret
fwait
dec
mov
cwtl
push
xor
mov
dec
cwtl
mov
push
mov
dec
cmp
and
sub
jo
fisubs
or
xchg
mov
fldcw
loope
fildl
movsb
sub
cmpsb
add
mov
aad
pop
xor
shrl
sahf
inc
and
inc
repnz
and
rcll
sbb
and
pop
add
push
fdiv
mov
stos
stos
fwait
rol
imul
inc
out
push
mov
push
mov
mov
mov
neg
sbb
cmp
mov
push
mov
movsb
xlat
pshufw
sub
cwtl
movsb
mov
ja
insl
clc
or
pop
test
andb
jg
cmpl
arpl
out
shlb
lcall
pop
sbbl
enter
js
mov
mov
loop
sbb
ja
lock
shll
mov
mov
xchg
sahf
jecxz
stos
subb
sub
test
lods
xor
push
mov
xor
inc
xor
fucomi
clc
dec
in
cltd
push
ds
stos
xchg
imul
loop
rcl
sbb
or
scas
sti
ja
stos
xor
ljmp
pop
stc
sbb
idivl
inc
inc
xchg
call
adc
pop
dec
out
sub
xchg
mov
inc
mov
test
adc
and
cli
adc
pop
iret
jecxz
xor
sti
xor
insb
out
test
dec
js
push
and
out
daa
bound
movntq
and
dec
fwait
repz
xchg
cmp
lods
sub
fisubs
movsb
inc
imul
or
les
divb
mov
clc
and
data16
push
xchg
pmuludq
fstpl
in
scas
cltd
cmp
test
jno
repz
pop
inc
mov
inc
add
push
lods
nop
or
adc
outsb
mov
insb
aas
mov
pop
xchg
arpl
test
fcompl
sbb
loopne
pusha
jns
mov
inc
inc
jo
pop
out
loop
and
fs
mov
jno
jne
dec
scas
sahf
lahf
fmuls
popf
cmpsl
out
xchg
scas
push
mov
popa
aam
push
loopne
divl
lds
add
push
add
xchg
cmc
mov
dec
jb
push
dec
lock
fisubl
ficoms
add
pop
data16
mov
lds
pop
enter
addb
xchg
xchg
dec
dec
mov
push
arpl
lret
mov
aad
jbe
mov
adc
aaa
adc
insl
lock
add
mov
inc
sbbl
loop
orb
data16
pop
dec
call
aad
xor
mov
jnp
and
pusha
pop
push
jl
jnp
mov
aaa
xor
addb
addl
imul
loopne
lcall
outsl
add
mov
mov
mov
into
je
lcall
je
mov
into
pop
mov
mov
xchg
stc
mov
lcall
repnz
push
xchg
cmpsl
lock
lahf
test
push
mov
aam
sub
stc
jae
or
pmaddwd
push
or
mov
mov
xchg
repnz
andl
scas
aad
sub
mov
call
push
scas
sub
sbb
mov
popa
mov
cmp
or
mov
imul
imul
ja
pop
or
ret
cli
int
fldcw
data16
clc
pop
add
mov
xor
jnp
outsb
call
mov
pop
ret
pop
mov
popl
loopne
jb
pop
into
ss
dec
pop
and
xor
fimuls
test
xor
aaa
in
aaa
pop
ret
repz
ret
dec
and
pop
mov
lea
pop
insb
xchg
xchg
mov
test
iret
cmp
aas
push
addl
repnz
adcb
xor
jae
pop
or
sbb
icebp
sbb
dec
lcall
sbb
stc
popf
xchg
mov
xor
inc
cmc
pop
lock
cwtl
sahf
imul
fsubrs
mov
aad
add
jge
mov
cmpsb
loopne,pt
pop
sub
mov
dec
xor
mov
in
sbb
adc
test
gs
inc
fwait
popa
fcmovne
movsb
pop
lret
push
cwtl
lcall
lods
arpl
clc
rolb
fisttpl
and
lret
mov
inc
int3
xor
sbb
or
cltd
out
call
and
adc
mov
xchg
shll
icebp
imul
xchg
sahf
shll
leave
cltd
dec
adc
in
sahf
mov
les
adc
call
xchg
jecxz
xlat
data16
adc
adc
pop
xchg
add
movb
dec
xchg
dec
jecxz
test
aad
and
ljmp
pop
adc
int
out
push
je
leave
inc
fwait
inc
adc
out
in
jne
mov
push
mov
or
out
lahf
int
mov
repnz
cmp
mov
sti
xchg
mov
mov
inc
mov
insl
jmp
or
xchg
movsb
mov
xor
aaa
sti
in
adc
leave
mov
add
sbb
xchg
popf
push
adc
xchg
or
lods
test
popf
mov
movsb
fwait
mov
mov
mov
mov
mov
mov
faddl
test
adc
mov
cmp
mov
stos
push
pusha
add
xchg
jb
cmp
pop
pop
jne
add
and
sarl
imulb
xchg
aad
lret
movsl
in
shll
and
or
fsubs
jmp
fwait
bnd
sub
pusha
lods
enter
jnp
fcoms
xchg
mov
call
mov
or
lods
fwait
pop
or
mov
mov
aas
pop
cmpl
mov
test
ret
lahf
or
mov
cmovb
lds
loope
icebp
fs
xor
aaa
push
enter
push
subl
pusha
and
mov
mov
imul
fs
push
test
jno
clc
fnsave
sub
push
lds
sahf
push
cwtl
jnp
and
icebp
mov
in
gs
jbe
loop
fstpl
xor
dec
mov
mov
scas
in
lock
aam
inc
add
xor
in
idivb
cmpsl
mov
daa
xor
fwait
mov
and
mov
mov
dec
mov
js
push
outsl
not
cmpsb
fwait
adc
orb
jecxz
xor
xor
loope
jae
xor
or
repnz
xlat
jl
mov
sbb
cmpsl
rorl
jno,pt
mov
rorl
pusha
and
repnz
mov
lock
or
hlt
ret
dec
lcall
stos
cmp
mov
mov
and
or
scas
lods
movsb
or
push
xor
add
xchg
mov
or
pop
cmc
jbe
xor
jbe
data16
fs
fildl
loop
scas
push
or
popf
enter
inc
and
adc
pop
popa
cs
js
add
mov
xchg
jl
ja
ret
pusha
sbb
inc
mov
mov
stos
mov
mov
movsb
cmp
sub
das
hlt
sbb
pusha
cmp
jns
fidivrs
shlb
cmp
and
cmp
notl
sbb
or
je
xorb
aam
aad
into
cli
add
lea
subb
jge
and
bound
jb
pop
fstpt
movsb
pop
lcall
and
lock
mov
push
jle
test
xchg
test
jnp
xor
mov
jns
imul
inc
fucomp
xor
cwtl
loope
movsb
add
add
orb
jnp
adc
icebp
cmp
outsb
or
scas
out
fwait
cmp
mov
repnz
and
xchg
insb
dec
pushf
push
ja
aad
mov
cmp
cld
xlat
shlb
cwtl
pushf
loope
movsl
add
sahf
add
out
jp
lds
clc
mov
xchg
push
js
je
jmp
dec
aad
cmp
les
inc
xlat
out
out
pusha
pop
add
push
jmp
mov
fiadds
pop
mov
mov
out
jbe
test
pusha
sbbb
pop
or
sub
mov
pop
sub
lods
jae
dec
insb
adc
mov
mov
ljmp
jo
and
int3
lods
dec
jp
fisttps
or
scas
dec
in
outsb
mov
movsb
cmp
dec
stos
hlt
lods
lea
mov
pop
mov
dec
sbb
in
xchg
push
cmp
mov
mov
pusha
xlat
push
es
jge
adc
or
gs
push
test
mov
ljmp
fistpl
sub
mov
test
cmp
cltd
jbe
mov
adc
ret
jbe
faddp
xchg
mov
test
aas
pop
call
cmp
xorb
pop
mov
push
rcll
mov
xor
jle
in
fbld
add
je
je
rcrl
lock
nop
bnd
lock
in
cli
cwtl
rcrb
lds
cmp
mov
or
das
jae
push
add
jno
mov
insb
xorb
aaa
or
in
pop
mov
loopne
and
lret
in
in
cmp
fwait
out
push
aas
dec
test
mov
cmp
xor
push
ret
adc
inc
idivb
add
in
inc
inc
cli
mov
int
xlat
mov
cld
inc
xchg
and
fsubrl
bound
mov
xor
aas
imulb
lds
lcall
xor
mov
fs
pusha
fdivl
cmpsb
or
sbb
mov
ljmp
daa
fistps
test
mov
adc
push
data16
mov
cs
mov
mov
movhps
into
fyl2x
xchg
scas
mov
cwtl
mov
ljmp
lods
adc
fidivs
sbb
sahf
lock
xor
mov
stos
into
inc
call
sub
notb
and
roll
out
pop
xchg
add
sti
mov
inc
jns
outsb
cmp
js
adc
and
and
mov
fidivrs
int3
push
sahf
shlb
mov
inc
push
js
out
jb
xchg
push
enter
adc
sbb
out
into
and
jb
mov
add
pop
jno
sub
mov
frstor
xlat
gs
dec
icebp
jbe
inc
imul
add
pusha
jbe
fldl2e
and
xor
push
cmp
js
stos
push
jbe
stc
mov
and
mov
pop
or
test
add
sub
shrb
xchg
push
ret
mov
mov
into
push
in
imul
iret
jmp
mov
adc
push
dec
jns
inc
push
subb
inc
ret
xchg
xor
hlt
testl
bound
xor
pop
lahf
xchg
jo
xorb
and
sarl
xchg
sub
outsb
stc
movsl
subl
cmpsb
das
movsl
or
mov
mov
xor
xor
mov
bound
dec
aas
adc
loopne
mov
pusha
imul
hlt
int
les
fdivrl
xorb
test
js
sbb
adc
push
jnp
mov
arpl
lods
sub
nop
xor
out
cmpsl
bound
xchg
xor
sahf
mov
test
aad
dec
lret
inc
push
std
sahf
testb
sbb
cmpsb
xchg
popa
jne
dec
mov
jl
insl
cli
shl
insl
add
lock
and
mov
rolb
subl
mov
test
sbb
sbb
inc
int
out
je
or
or
gs
lcall
decb
mov
mov
scas
loop
rolb
incb
mov
movsb
cmc
jge
mov
aad
inc
sbb
xor
xchg
xlat
mov
add
adc
fistpl
xor
cmp
mov
sub
sbb
xchg
jp
push
add
aad
sbb
cmp
push
or
mov
mov
jg
sbb
in
pop
fxch
push
call
mov
and
pushf
and
add
lcall
mov
sub
lods
xor
jno
jae
jmp
push
pusha
push
scas
and
xchg
gs
push
jp
lock
dec
inc
adc
es
lock
add
jo
xor
cmpsb
mov
lds
push
fs
js
lret
popf
mov
idivl
cwtl
inc
bound
movsl
or
mov
push
xchg
inc
pushf
and
stos
into
je
bound
insl
int
daa
push
mull
mov
das
ljmp
jb
addl
add
fwait
jbe
jge
rorl
or
fwait
push
pop
jp
clc
scas
repz
cmp
push
pop
nop
jmp
jle
xchg
cmpsb
repz
jle
jmp
xchg
cwtl
jp
sub
or
xchg
movsb
adc
fisttpll
repnz
jne
push
lods
loopne
jnp
sbb
adc
scas
and
mov
add
mov
std
inc
ja
mov
cmpb
pop
out
cmp
pop
push
syscall
xchg
push
cmp
lea
fadd
mov
push
sub
push
frstor
xchg
iret
xor
clc
hlt
fsubs
mov
xchg
jle
int3
stc
mov
mull
test
add
jns
mov
inc
mov
cs
inc
xor
fcmovnbe
aam
or
xor
daa
loop
ds
sarb
push
cltd
push
outsb
add
pop
test
std
add
push
pop
inc
mov
pop
push
stos
mov
rcr
xchg
out
push
push
je
xchg
push
fldenv
arpl
sub
int
das
fs
push
mov
lcall
pop
aam
pushf
jne
stos
aaa
cli
add
cwtl
lods
add
ret
test
aas
int
icebp
push
sbb
sbb
aam
xchg
jns
push
lds
call
push
xor
inc
dec
fwait
mov
cmp
sbb
sub
push
iret
mov
daa
in
out
push
mov
dec
in
pop
mov
and
cmp
aam
dec
dec
inc
sub
mov
cmp
dec
push
xor
lods
push
xchg
xor
jg
lret
jl
cwtl
push
arpl
cwtl
mov
test
cmpsb
popf
cli
fsubp
rol
pop
cmp
dec
js
sub
mov
loope
inc
dec
orl
and
xchg
shll
dec
xchg
adc
sub
sbb
popf
xor
les
xlat
add
or
mov
mov
pop
es
out
mov
int
mov
bound
pop
ljmp
cmpsb
cltd
enter
mov
or
idiv
cmp
jne
push
and
push
fdivp
cmp
pop
mov
bound
orl
leave
popa
add
mov
loope
dec
jbe
out
ja
fdivrs
jg
xor
arpl
jbe
lods
stos
mov
stc
lahf
cvttps2pi
sbb
pusha
pop
pop
add
dec
xchg
push
lahf
xchg
xor
lds
clc
mov
inc
mov
mov
mov
cmp
ljmp
pusha
sti
stc
adc
xchg
mov
imul
mov
mov
mov
pop
add
ds
cmp
lods
fwait
sti
mov
mov
scas
icebp
and
push
mov
out
inc
int
outsb
sub
imul
jg
ja
add
mov
mov
lea
jns
inc
mov
push
dec
aam
aam
xchg
stc
aam
lods
jb
fiadds
and
lock
jecxz
movsb
inc
fwait
sarb
es
mov
sahf
ds
pop
add
dec
aam
js
neg
hlt
xor
into
mov
cmpsl
and
mov
push
pop
or
or
sbb
jecxz
xchg
int
mov
out
mulb
js
jbe
inc
mov
int
mov
sub
and
cmp
test
lea
scas
enter
jae
aad
mov
xor
mull
mov
daa
push
and
scas
dec
cld
mov
lret
push
pop
stos
repnz
inc
mov
sub
sub
jge
stc
cmp
add
sub
ja
add
decb
rcrl
mov
pop
jge
ja
lds
daa
mov
or
xor
shufps
dec
cld
lahf
sahf
ficomps
loopne
mov
shl
cli
dec
pop
test
and
enter
cmpsb
insb
inc
popf
test
sub
insl
ljmp
xor
sbb
jg
sub
sbb
and
cmc
jae
popf
imul
xorl
cmp
scas
rcll
mov
frstor
mov
mov
shrb
and
imul
sbb
sbb
std
push
and
test
insl
repnz
mov
dec
int
gs
xchg
cmp
inc
movsl
or
cmp
and
add
inc
ljmp
stos
inc
pop
dec
out
jae
fdivs
sub
and
std
pop
sbb
inc
addr16
xor
idivb
stc
lock
hlt
mov
mov
popa
lret
loope
ret
jle
out
inc
mov
and
dec
std
in
and
aam
std
sbb
hlt
pop
cmc
int
repz
hlt
mov
in
mov
xsavec
mov
inc
add
jbe
or
mov
cmp
leave
jl
jbe
imulb
test
sbb
lcall
test
sbb
inc
mov
cltd
gs
rol
pop
repz
ljmp
or
pop
and
dec
add
cs
test
jae
pop
push
sarb
and
xchg
xchg
call
cmp
imul
mov
imul
mov
jnp
sub
and
cwtl
mov
dec
inc
fwait
gs
lea
out
loopne
fwait
jo
rcr
repz
ret
dec
push
call
cmp
mov
cwtl
jnp
jp
ss
add
fwait
inc
jp
lea
adc
mov
out
imul
dec
pop
xchg
movsb
mov
subb
lret
bound
adc
xor
imul
sahf
sub
cmp
aam
xchg
std
adc
fisubrl
and
xchg
loopne
dec
add
inc
outsl
dec
adc
add
pop
jmp
sti
xor
stc
imul
push
push
mov
sarb
arpl
shll
adc
pushf
xlat
dec
in
stos
dec
lds
movsl
mov
sti
pop
popa
cmp
arpl
push
shrl
cltd
stos
cltd
das
jae
xchg
std
mov
jp
mov
cmp
sub
sti
data16
sub
stc
loop
jle
in
cli
fistl
dec
sub
dec
pop
dec
xor
jmp
hlt
sti
out
push
enter
adc
std
ret
jmp
dec
inc
push
add
mov
leave
dec
xchg
inc
jo
add
cmc
nop
mov
leave
dec
inc
push
pusha
in
fisubs
data16
pop
mov
xchg
pop
es
pop
jb
mov
xor
sub
scas
push
inc
loop
jge
fidivrl
inc
xlat
mov
je
inc
sub
test
lahf
icebp
mov
sbb
pop
repz
mov
add
test
push
push
dec
dec
xor
pop
add
outsb
pusha
das
adcb
mov
pop
daa
inc
and
int
outsb
jl
ja
mov
test
inc
push
xchg
popa
rorb
mov
mov
jo
movsb
mov
in
icebp
cmp
dec
mov
add
or
test
jbe
cmpsb
in
or
jne
cmpsl
pop
cmpsb
jl
mov
fcoms
insl
sbb
add
lods
icebp
dec
jmp
add
int
mov
dec
dec
test
negb
das
movsb
xlat
leave
iret
mov
and
pop
out
cli
stc
mov
aad
jne
mov
xchg
xor
js
xor
mov
mov
outsb
push
mov
xor
adc
pop
subl
loopne
or
jl
in
dec
dec
jne
incb
pop
scas
sbb
aaa
fcompl
mov
push
inc
cmovo
sub
mov
xor
repnz
or
push
and
pop
leave
jne
mov
add
mov
and
bnd
mov
xchg
mov
sti
cmp
aam
in
cli
lret
cwtl
rcrb
xor
sbb
mov
xchg
pushl
mov
jle
fildll
cld
cmpsb
jg
xor
dec
jp
aad
adc
into
push
popa
pop
notl
pop
sarl
mov
mov
pusha
shrb
bound
pop
dec
ret
pop
inc
dec
stos
push
cld
push
cmpsb
je
pusha
pop
js
in
and
cltd
rcrb
mov
lds
popa
dec
pop
fstps
and
inc
adc
in
mov
out
jle
fsts
addr16
xchg
cmpb
pop
repnz
and
inc
xor
cmp
enter
fcmovnb
or
mov
add
inc
mov
out
jle
shll
inc
xor
ret
cmpsb
mov
fdivrp
movsb
in
jb
push
rcr
test
mov
out
movsb
test
cmc
adc
xchg
and
inc
clc
mov
mov
popf
inc
xchg
push
fwait
pop
lea
push
test
aam
aad
ret
cmp
mov
cli
mov
bound
inc
pop
cmp
xor
les
test
lock
jne
sub
adc
inc
mov
or
push
xchg
lock
xchg
mov
pop
dec
cmp
or
fs
sbb
loop
mov
stos
inc
clc
ret
cmp
inc
push
and
push
jle
jno
sbb
pop
test
jne
or
adc
int
in
sahf
sbb
xor
dec
adc
push
dec
mov
leave
pop
ss
sarb
mov
cmp
cmp
scas
and
add
enter
loopne
into
scas
out
and
xlat
gs
ss
cmp
push
jg
dec
push
scas
adc
lods
mov
mov
addr16
daa
and
vpandn
insb
scas
hlt
imul
mov
mov
and
mov
sub
dec
sbb
aam
scas
pushf
dec
out
fwait
mov
and
arpl
mov
or
loop
ljmp
jle
mov
les
es
inc
aad
inc
xor
fidivrs
sub
sbb
mov
and
in
sahf
push
fistps
loopne
mov
pop
js
imul
sbb
pop
cmpb
mov
jmp
and
xor
push
imul
addr16
shlb
ficompl
mov
sti
neg
sub
xchg
outsl
xchg
jae
mov
stc
pop
mov
out
pop
xor
int
add
cmp
xchg
call
roll
mov
cmp
add
fists
jne
and
jg
repnz
mov
dec
fsts
ficomps
scas
in
ror
aaa
mov
imul
and
or
mov
ss
lea
aaa
ds
mov
fistps
add
sub
das
cmp
dec
pop
pop
mov
adc
push
lret
xor
sbb
in
xor
mov
loopne
inc
out
cmp
xchg
lods
shll
xor
lds
cmp
xchg
sub
ljmp
out
insl
push
lret
and
push
jp
mov
or
outsl
popf
and
push
push
pushf
fldenv
jmp
cmp
dec
adc
and
fadd
lea
and
mov
jecxz
cmpb
cmp
xor
sahf
cmp
in
fwait
mov
dec
mov
cmpsb
cmp
rcr
pusha
addr16
in
adc
jmp
sbb
xorl
jl
xor
or
xchg
mov
jle
pop
popf
push
cmp
add
ja
cmovge
sbb
in
xor
xor
das
add
xor
inc
pop
mov
mov
shll
jg
inc
aas
ljmp
dec
add
cmp
xchg
and
mov
aad
lcall
mov
mov
fstpt
mov
push
mov
movsl
in
and
in
add
clc
mov
mov
fwait
xor
cmp
or
std
mov
loope
loope
ja
add
pop
fs
fisubrs
andl
nop
xorl
and
mov
sub
cmp
inc
les
add
pop
ja
xor
mov
movl
pop
inc
add
jmp
push
mov
xor
cmp
pop
xchg
pop
fidivl
add
lahf
jnp
pop
cwtl
or
test
or
sti
fists
jmp
repz
fnstcw
inc
push
movsl
jl
lret
xor
cmp
mov
loopne
mov
fsubl
jmp
cmp
stos
inc
addr16
adc
fists
mov
rcrb
mov
loop
icebp
inc
ljmp
inc
mov
dec
sarb
leave
fwait
aas
stc
es
iret
ds
push
push
inc
bound
and
ret
in
fists
ss
test
flds
xor
xor
cmpsl
mov
inc
inc
ljmp
test
cmpsl
mov
xor
mov
fbstp
cmp
out
fistps
mov
cmc
mov
loop
dec
cmpb
dec
outsl
xchg
add
loopne
inc
mov
lahf
aad
loope
pop
in
cmp
jnp
fs
shl
xchg
stc
shlb
nop
mov
push
out
repz
mov
jmp
adc
cmp
jno
pop
push
push
nop
inc
filds
adcl
push
rcll
call
test
xor
test
xor
fisttpll
and
jne
inc
and
out
xor
mov
sbb
pop
mov
sahf
aad
outsl
push
adc
pop
outsl
fs
out
fisttpl
xor
sub
movsl
iret
mov
pop
sub
sbb
dec
sbb
pop
fmulp
cmp
add
adc
jp
mov
adc
mov
mov
orl
inc
mov
mov
mov
xor
and
inc
mov
mov
inc
adc
into
out
and
push
mov
sub
dec
into
inc
movsb
pop
mov
mov
sbb
inc
push
enter
cmp
inc
xlat
insl
iret
ds
shlb
xlat
push
int3
int
pop
fists
in
mov
jmp
or
icebp
sub
or
adc
xor
ja
cmpsb
xor
jle
fidivs
aam
fs
jle
insb
int
lods
je
mov
test
stos
cltd
cld
fs
cltd
negb
mov
xchg
jmp
js
hlt
adc
out
test
pop
dec
subl
test
je
stos
movsb
mov
clc
int3
push
inc
xchg
out
jae
sbb
pop
ss
xor
xor
out
ds
add
cmp
stos
or
or
xchg
add
jge
xor
adc
sbb
mov
dec
out
push
fdivl
into
sub
xchg
fisubrl
pop
adc
add
je
notb
adc
pop
pop
nop
leave
fsubl
xchg
mov
scas
imul
lret
sbb
dec
cwtl
push
mov
push
push
mov
mov
ret
imul
push
fs
int
in
pxor
add
or
push
dec
inc
inc
movsl
pop
out
cli
or
les
ret
dec
inc
imul
es
mov
ret
add
push
sub
into
and
insl
fcomps
mov
in
jl
xchg
mov
btc
into
push
aam
enter
pop
push
fwait
dec
sbb
addr16
push
add
mov
pop
add
lock
mov
xchg
mov
jmp
dec
and
repnz
pop
dec
lahf
xor
int
scas
repz
mov
dec
jge
sbb
popf
lcall
mov
dec
adc
sti
cmp
fisttpl
jp
and
push
dec
and
dec
pop
inc
andl
adc
imul
jae
repnz
jno
adc
and
ficomps
test
pusha
aad
sti
mov
in
fwait
and
xchg
aas
nop
sti
sahf
pop
fsubs
je
std
adc
lods
in
addb
pop
cwtl
nop
fwait
inc
rorb
sti
test
cmp
sbb
mov
lds
lock
push
clc
adc
sahf
mov
setb
jmp
fstps
pushf
mov
xchg
xor
aas
fwait
inc
repz
fimull
cmp
jbe
dec
nop
add
enter
repnz
mov
push
repnz
xchg
push
mov
dec
out
es
fmull
mov
repz
popf
rol
clc
aaa
adc
push
into
inc
clc
jg
insl
mov
pop
dec
in
or
mul
fsubrs
or
sub
sub
add
mov
mov
mov
cld
mov
inc
addr16
cmp
cmp
aaa
cmp
in
pop
pop
or
sub
jge
sub
lret
orb
jb
pop
lods
lret
test
jg
xlat
pop
pop
jle
dec
jbe
in
mov
mov
xchg
mov
adc
inc
popf
sbb
mov
fstl
sub
jns
and
out
lds
fstpl
ss
pushl
dec
fcmovne
mov
dec
popf
push
cmp
sahf
andl
push
test
or
mov
out
cmp
inc
push
insl
loop
push
addl
ficomps
push
jo
popf
push
imul
push
jbe
jne
and
into
and
repz
jmp
rcll
cmp
addr16
or
push
push
jg
loope
or
xor
mov
sbb
mov
outsb
sbb
stc
jl
subl
xchg
jmp
inc
loope
add
test
popf
inc
in
dec
cs
or
inc
push
sbbl
mov
xor
sbb
adc
pop
adc
outsb
adc
sbb
or
add
sbb
jle
jae
repz
mov
and
sub
push
das
arpl
adc
jge
inc
aaa
and
sbb
outsl
insl
das
or
sbb
shll
test
or
aad
cmp
int
pop
xor
mov
push
mov
add
cmc
or
dec
jno
push
add
fs
pop
in
shlb
adcb
stos
pop
push
or
dec
adc
pop
push
adc
dec
or
fildll
and
sub
and
daa
ss
aad
xor
mov
cmp
les
insb
orb
fs
popa
fsubs
in
cs
push
push
lret
push
scas
gs
push
mov
mov
dec
mov
push
sbb
dec
xor
andb
pop
pop
and
stc
jno
mov
jae
insl
cwtl
inc
pop
mov
lret
xlat
aas
enter
pop
pop
scas
inc
sbb
insl
sub
cmp
mov
xchg
ret
dec
add
fisubs
pop
addr16
add
cmp
iret
imul
lods
mov
lcall
andb
cmp
mov
lds
rcll
adc
pop
js
movsl
and
int3
pop
push
cmp
pusha
mov
inc
test
cmp
inc
pop
fldl
ja
aaa
mov
mov
mov
dec
sbb
mov
mov
lcall
inc
sbb
sbb
and
xor
mov
xchg
pusha
dec
shrb
in
jl
push
lods
or
jg
inc
sub
pop
addb
test
ret
ss
xchg
adc
enter
cmc
pop
inc
dec
add
stos
aaa
or
orb
stos
mov
mov
inc
mov
clc
ret
lcall
pushf
pop
daa
loop
jno
test
sbb
lret
lods
mov
in
cmp
pop
jb
lahf
sbb
out
out
jae
mov
pop
push
into
push
icebp
xchg
inc
je
mov
mov
dec
mov
mov
push
addr16
subb
ds
mov
movsb
xchg
cmpsb
mov
pop
jg
fidivs
inc
pop
gs
inc
mov
jle
dec
pop
fistps
std
dec
push
push
dec
int3
je
leave
jns
xchg
pop
jl
out
pusha
push
and
and
xor
adcb
cmp
inc
shlb
pop
stos
sarb
lret
push
mov
jge
and
int
push
sarb
mov
inc
out
or
sbb
mov
push
sbb
mov
adc
jl
mov
stos
repz
jg
jg
clc
std
xlat
nop
sbb
hlt
and
or
sbb
jge
and
mov
ficompl
inc
push
adcb
lea
mov
cmp
cmp
lcall
ss
mov
mov
in
fcompl
sub
dec
aaa
mov
mov
jl
fbstp
fisubs
sub
scas
mov
xchg
loope
in
sub
xchg
push
testb
push
mov
and
lahf
aas
mov
push
data16
rcll
cmpsb
bound
xchg
and
insb
mov
xor
and
adc
les
jle
jmp
and
push
lea
lcall
cmp
dec
adcl
mov
xor
int3
inc
sbb
sbb
ds
or
adcl
mov
mov
mov
and
mov
scas
fiadds
pop
cmpb
xor
adc
and
mov
popf
inc
bound
fwait
inc
push
sbb
add
cltd
mov
das
scas
sbb
roll
mov
roll
mov
js
imulb
mov
lods
mov
cmpsb
test
cli
inc
mov
daa
push
xor
or
das
xor
mov
sub
jne
adc
dec
pop
adc
movlps
jle
sbb
into
and
fsts
in
leave
sub
inc
fisttpll
repnz
push
mov
int3
fiadds
outsb
xor
enter
data16
jne
push
mov
pop
xor
sbb
or
sbb
outsl
xor
sarl
es
imull
call
pop
bound
into
bound
push
insb
adc
mov
call
xchg
sbb
push
adc
andb
loop
sbb
xchg
aam
out
xchg
es
and
xor
shlb
pusha
push
in
push
test
outsl
pop
adc
insb
sbb
and
push
fsubrp
pop
xchg
test
mov
lret
les
mull
es
inc
ljmp
scas
pop
jb
mov
xor
mov
dec
mov
jb
sub
jl
push
sub
sbbb
xor
test
cmp
xor
xor
movsb
cmc
clc
int3
mov
fadd
mov
and
and
sub
and
xor
or
bound
outsb
in
adc
fists
cli
adc
jno
lods
int
mov
les
je
imul
popf
or
add
adc
pop
lahf
xor
dec
jmp
shll
sub
mov
push
pop
or
mov
mov
dec
mov
pop
repnz
mov
cmpsb
outsb
add
ficompl
push
jnp
dec
enter
sbb
or
push
mov
es
ror
das
es
stc
add
pop
xchg
cs
mov
lahf
xor
adc
imul
clc
pop
mov
push
adc
jl
mov
pop
mov
pop
cs
jbe
movsb
fwait
cltd
ret
xor
mov
mov
pop
jl
jg
cwtl
push
clc
pusha
jp
cs
orb
pusha
mov
sarb
pop
pop
xchg
and
dec
mov
mov
ljmp
cmpsb
xchg
mov
ss
lods
repz
xchg
mov
ss
jge
jp
lods
xlat
stos
xchg
push
or
pop
or
fs
rcll
lock
sub
sbb
jbe
lds
mov
pop
pop
pushf
data16
rcl
mov
pop
shlb
sbb
or
aaa
push
pop
subb
mov
cmp
imul
ss
cmc
pop
sub
frndint
lea
xor
aas
lods
je
sarl
mov
sar
inc
arpl
aaa
push
jbe
into
stc
sbb
or
and
or
jg
jp
cmp
fisubl
in
cli
mov
aas
test
sbb
cmp
or
adc
inc
adc
lcall
adc
sub
fdivrl
imul
bound
das
and
sub
les
int3
mov
ror
mov
mov
lock
and
push
adc
push
and
repnz
xor
lret
adc
iret
xor
ret
xchg
imul
sub
or
fimuls
pusha
push
cmc
pusha
push
xor
or
adc
and
inc
add
push
xor
sub
mov
jecxz
ss
sub
push
sahf
xchg
or
out
jge
sub
cmpl
das
adc
sbb
outsb
gs
cmp
dec
loop
push
cs
sahf
ret
pop
pop
push
pop
push
shrl
aaa
sbbb
bound
out
xchg
ljmp
cmp
mov
scas
sbb
xchg
push
sbb
pushf
fisubrl
movsb
fisubs
shll
lods
setle
sub
adc
mov
mov
xchg
daa
sub
ret
push
lock
sbb
mov
cmp
les
push
jno
outsl
ret
or
frstor
or
lcall
sbb
jbe
stos
out
negl
or
fdiv
or
fwait
add
sbb
sbb
shll
clc
pop
jns
xchg
iret
push
add
cmp
ljmp
dec
jns
xor
sub
mov
inc
test
pop
cmp
inc
jmp
cltd
xor
jp
cmc
adc
pushf
sbb
sti
rorl
clc
stos
cmp
jns
dec
daa
aaa
movsb
or
stos
add
ja
mov
sub
add
xor
jb,pn
fwait
push
pop
adc
mov
movsl
xlat
std
fsub
sbb
das
push
add
push
adc
mov
or
sahf
lds
sub
iret
cmp
sub
sub
sub
adc
adc
lret
stos
and
scas
or
insb
aad
stc
inc
cmpsb
sub
push
ds
adc
xor
cmp
jl
or
and
add
pushf
insb
cwtl
xor
sahf
ss
hlt
or
xchg
lahf
sbb
mov
push
mov
rorb
and
jns
jns
cmp
adc
adc
jle
adc
out
dec
mov
xor
orl
call
ljmp
ljmp
push
cs
mov
adc
xor
sub
jg
outsb
or
and
repnz
jne
gs
ja
jno
insb
out
lret
sub
adc
rcrb
pushf
test
es
lock
inc
adc
das
dec
mov
jbe
jne
push
sbb
dec
xchg
or
aaa
repnz
cmp
sbb
add
xchg
lcall
daa
stos
faddl
data16
or
pop
cs
mov
jns
imul
cmp
jecxz
jmp
cmp
jb
sbb
jle
xchg
in
lods
jle
add
push
icebp
lahf
sahf
xor
mov
adc
push
xor
leave
push
ljmp
xchg
jge,pn
push
dec
movsw
es
jl
add
aas
ret
in
mov
cmp
loopne
mov
lods
and
sbb
pushf
xchg
push
cmp
or
out
in
jbe
sub
cmp
clc
inc
ss
push
sti
ja
and
insl
mulps
adc
daa
fmul
push
fwait
push
repz
pusha
fsts
pop
jp
xor
mov
jae
les
aas
jp
cmp
std
movsb
xchg
xor
aaa
movl
or
jnp
add
ror
xchg
jb
adc
fcoms
push
repnz
imul
pop
or
mov
jge
es
enter
jmp
das
sti
call
adc
clts
lods
sub
mov
sbb
addl
pushl
popa
loop
jno
jne
cli
repnz
jae
int3
push
sbbl
xchg
daa
cwtl
imul
pop
jmp
add
lcall
and
inc
pop
pop
std
push
scas
and
shlb
je
lods
or
push
xorl
push
xor
dec
and
xor
insl
repnz
push
sbb
call
dec
adc
and
ret
push
mov
dec
negl
push
lahf
in
push
rcll
fs
enter
lods
xlat
pushf
aam
negb
das
mov
add
pop
and
int
mov
clc
inc
jge
and
adc
sub
nop
fisttps
test
pop
sbb
jne
in
push
lock
aad
and
mov
scas
adc
push
into
push
fwait
punpckhwd
imul
sub
cmp
and
cmp
mulb
push
popf
lock
hlt
and
lcall
repnz
sbb
shrb
and
lock
or
xchg
and
xchg
dec
or
fisubrl
dec
adc
sbb
lret
cmp
fucom
roll
xchg
in
fwait
and
mov
cmc
sub
push
shll
mov
cli
xchg
sbb
push
inc
out
adc
dec
push
pop
dec
movsl
pop
push
lret
call
pop
adc
test
fcoms
outsl
test
mov
push
sbb
lret
nop
pop
xor
testb
andl
adc
jmp
lea
mov
xor
aam
nop
pop
das
and
jno
xchg
cmp
jg
cmp
xor
jae
sub
bound
popf
jl
pop
loope
sub
mov
add
xchg
fsubrs
mov
fdivs
pop
jns
testl
dec
fcom
imul
jbe
xor
pop
sub
sub
fstpl
push
lahf
add
sbb
add
push
jnp
jb
and
stos
mov
imul
and
nop
inc
xor
jne
pop
add
jbe
adc
jmp
push
sbb
cli
xorb
jb
aad
fstpl
fcomps
mov
in
dec
add
jbe
lea
jg
into
das
adc
push
rcr
cmp
mov
sbb
xchg
push
mov
xchg
shrl
ss
pop
pop
jl
outsl
pop
cmp
dec
insb
testl
jmp
bt
fidivs
mov
stos
pop
xchg
xchg
push
ljmp
xor
rolb
xchg
sbb
dec
push
cs
pop
insl
jl
adc
or
jno
or
and
stos
fisttpll
sbb
jns
lods
fs
js
into
or
stos
jbe
xchg
mov
adc
nop
add
sbbb
enter
shl
inc
enter
sub
xor
mov
mov
popa
pop
ss
pop
push
in
or
and
decl
or
in
jne
scas
push
rclb
leave
mov
ja
addb
outsb
inc
scas
pop
adc
mov
mov
dec
in
or
ret
add
repz
ret
xchg
add
jne
ds
pop
push
les
mov
push
jno
mov
outsl
into
pop
push
cmpsb
in
mov
pop
mov
mov
xchg
out
outsb
jp
jmp
inc
je
mov
call
xchg
es
popf
jl
jb
or
inc
jno
and
add
ss
cld
xchg
jmp
or
jp
jbe
idivb
bound
mov
or
push
push
insl
sbb
or
pop
test
jbe
js
mov
insl
jbe
mov
jp
push
popa
push
sbb
or
out
adc
cmp
testb
mov
ss
insl
xchg
and
push
adc
inc
mov
inc
negl
mov
xchg
adc
inc
or
jbe
repz
dec
maskmovq
negl
loop
pop
fiaddl
or
leave
das
clc
in
and
in
sbb
sti
stos
sbb
loope
sbb
xchg
sub
add
or
xchg
push
sbb
jnp
arpl
ja
sub
ljmp
lea
adc
fnsetpm(287
js
daa
mov
xchg
sbb
fisttpll
shlb
sbb
pop
pop
les
jle
out
sbb
clc
xchg
push
pop
pop
les
fadd
dec
xor
sbb
adc
stos
xor
adc
cs
insl
aam
push
mov
pop
iret
fwait
bound
xchg
stos
idivb
loopne
xor
mov
or
dec
fisubl
xchg
jg
stc
pushf
outsl
inc
or
jo
sbb
cmp
or
jo
sbb
push
cmp
mov
imul
pop
mov
insb
jl
ds
mov
jbe
or
xchg
or
xchg
mov
jne
aas
punpckhbw
into
mov
fists
xor
push
sub
push
sbb
ljmp
jo
divl
pop
cmc
out
and
mov
test
nop
mov
rclb
mov
sub
mov
repnz
push
pusha
dec
push
cmp
xor
cmp
ljmp
ss
mov
lret
fcoms
xchg
or
mov
into
call
mov
xchg
aam
in
daa
stos
test
jecxz
jmp
fs
data16
jge
pop
push
ds
sbb
cmp
or
push
sub
pushf
push
add
add
adc
iret
adc
out
push
inc
push
add
fdecstp
push
or
negl
rolb
sbb
xor
lds
jno
pop
and
jl
imul
in
add
cmp
fisttpl
or
adc
sub
out
scas
into
ds
jg
jmp
test
leave
fldcw
loopne
ja
xor
aaa
ja
std
pop
xchg
sbb
into
scas
push
pop
nop
pusha
xor
push
inc
sbb
xchg
sahf
popf
rclb
sbb
popf
test
jne
pop
cmp
test
ja
pop
insb
sbb
or
and
sbb
bts
movsb
add
repnz
lcall
in
fnstcw
scas
xor
jns
stc
das
inc
incl
xor
mov
jle
mov
jmp
mov
cmp
adc
jbe
loopne
cwtl
xor
into
fstl
and
sti
filds
in
stos
repz
jbe
sub
out
mov
mov
push
mov
iret
subl
jp
add
pop
jns
sub
arpl
push
mov
insl
daa
or
add
jl
imul
movsl
repz
rorl
xchg
inc
rol
sbb
mov
test
pop
cmp
xor
or
in
jnp
sbb
ja
in
xor
pop
fcoms
mov
dec
mov
inc
mov
inc
movsl
inc
pop
sbb
sbb
pop
sbb
insl
mov
pop
addr16
mov
pushf
pop
rcrb
cmp
xchg
pop
adc
stc
inc
mov
mov
xchg
pop
ss
push
mov
inc
imul
inc
and
dec
outsb
inc
jmp
punpckhbw
pop
icebp
mov
sub
sub
jo
jl
cmp
out
fs
rorb
jb
std
pop
bound
cmp
fdivrs
outsl
inc
or
jp
inc
xchg
add
jnp
lock
aad
jnp
adc
push
dec
out
inc
cwtl
lret
and
pop
in
dec
mov
stos
insb
jne
dec
sub
xor
loope
xchg
insb
push
sbb
pop
out
fmuls
cmp
adc
pop
addr16
and
shr
cmp
jbe
pop
pop
push
and
stos
sbb
inc
testb
push
xchg
mov
pop
addr16
mov
xlat
cmp
push
or
addr16
adc
inc
pop
pop
cs
sub
mov
pop
cwtl
sbb
cmovb
jo
pop
push
and
push
fstpl
lret
lcall
push
imul
or
flds
inc
sbb
dec
sub
inc
or
test
mov
cli
inc
cmc
inc
push
sub
and
xlat
mov
pop
stc
sub
dec
xor
dec
xchg
jnp
pushf
pushw
lock
out
jmp
push
mov
or
cmc
inc
call
sbb
pop
pop
xchg
ss
adc
rolb
movswl
push
sbb
inc
fcomi
push
outsl
pushf
inc
pusha
repnz
lock
insl
jo
popa
add
jae
nop
jno
lahf
das
adc
aas
scas
xchg
in
or
repnz
inc
sub
or
fnstcw
lock
xor
inc
or
int
jp
or
pop
out
jecxz
inc
loopne
lock
jo
or
add
test
mov
cwtl
pop
adc
sti
loop
inc
add
push
xchg
popf
ds
cmpsb
icebp
mov
push
sbb
xchg
and
inc
add
add
push
add
xor
xchg
pop
mov
add
or
pop
mov
or
js
rolb
aas
stos
xchg
lret
nop
and
add
cli
out
lret
shlb
and
faddl
scas
sub
push
xor
pop
cmp
lret
dec
and
ss
push
xlat
test
hlt
ficomps
pop
or
pop
ret
movsl
icebp
stc
outsl
out
pop
sub
mov
adc
and
xor
scas
data16
sub
loopne
jns
inc
pop
push
push
push
add
sbb
or
push
sbb
xor
xchg
rorb
lods
ds
call
ljmp
js
xor
nop
stos
xor
repnz
aaa
ret
test
nop
or
push
out
sub
pop
shrl
sbb
mov
pop
pop
sti
and
add
cs
out
add
add
sbb
aaa
xor
xor
adc
fwait
xchg
push
in
loop
adc
adc
loope
cli
cmp
push
mov
push
incb
cmc
cmp
andl
es
xor
cmp
pop
gs
data16
mov
loop
xor
sbb
dec
in
es
mov
aas
or
xor
stos
sub
sbb
mov
jge
packsswb
jg
push
clc
xchg
jecxz
or
mov
stos
dec
lock
addr16
sub
ss
push
jmp
adc
jecxz
lock
adc
or
outsb
push
lret
add
pop
enter
sahf
push
sub
sub
push
xlat
inc
aad
jmp
jno
adc
and
pop
push
call
int3
jge
cmp
sbb
ds
std
xchg
fimull
mov
adcb
les
and
movsw
sub
add
or
and
adc
scas
cmp
imul
adc
sub
jmp
sarb
mov
js
imulb
loop
stos
or
stos
push
pusha
add
jno
movntps
pop
and
and
adc
flds
loopne
pop
jp
gs
cwtl
or
lret
push
dec
mov
push
mov
scas
sbb
scas
sub
cld
inc
and
and
das
aad
adc
aaa
push
and
xor
sub
cmp
out
xchg
mov
aaa
jl
aas
push
mov
xor
lcall
adc
mov
sub
cmp
cmp
jmp
enter
sub
mov
jg
ror
bound
pop
adc
test
cmp
jo
ja
pop
and
xchg
mov
fucomp
inc
sbb
xor
nop
or
sub
aaa
push
pop
adc
xlat
test
push
addr16
popa
or
outsl
jmp
jnp
lods
jmp
and
out
or
sbb
xchg
jecxz
out
js
loope
sub
andb
bound
daa
aas
sbb
add
pop
mov
mov
sbb
add
xor
das
xchg
and
cmp
scas
add
cmp
sub
stos
movsb
outsl
dec
aaa
cmp
xchg
sub
push
mov
sbb
scas
sub
loope
push
jbe
das
pop
repnz
hlt
dec
in
pop
fwait
or
or
or
cmpsl
movb
in
dec
hlt
inc
ja
xchg
jl
bound
leave
dec
out
jne
mov
mov
lods
add
std
and
popa
jmp
dec
and
popf
sbb
notl
inc
add
pop
xchg
outsl
loop
addr16
fs
lock
mov
adc
mov
cmp
xor
cmp
cs
adc
push
test
fs
hlt
mov
and
ljmp
ljmp
in
push
pop
xchg
push
testb
sub
out
adc
aaa
dec
addr16
jns
push
or
shrb
jbe
cmp
push
clc
clc
mov
sub
or
jo
inc
divb
sub
lahf
enter
or
call
int
enter
jecxz
es
adc
popa
sbb
lods
mov
pop
insl
aaa
out
test
pop
mov
xlat
jl
and
push
sub
out
sbb
inc
sub
test
sub
jl
das
jb
divl
push
mov
aaa
imul
and
jle
mov
iret
add
adc
or
jo
xchg
jne
int3
push
and
cmp
mov
push
pop
jp
out
push
push
lock
sahf
stc
or
lret
adc
lret
jne
addr16
xor
decl
add
lock
xor
in
sbb
add
xor
sub
mov
cmp
aaa
adc
lods
js
int
xor
add
leave
adc
sarb
add
insl
push
inc
push
sbb
jb
pop
xor
or
in
fs
cmp
jb
or
adc
lds
pop
sarb
sarb
pop
and
push
sub
shrb
ficomps
aad
xchg
or
stos
mov
daa
mov
push
out
hlt
not
fiaddl
mov
inc
sbb
dec
sbb
das
in
outsb
push
sub
push
icebp
test
dec
xlat
pop
call
pop
iret
inc
sbb
dec
sbb
inc
lock
jb
add
mov
or
sbb
xor
xchg
jns
fs
js
sbb
ja
aam
push
add
sub
add
push
and
and
cmp
imul
sub
jb
sahf
cmp
hlt
or
sub
jle
mov
subl
es
cmc
sub
mov
mov
mov
lds
dec
cmp
add
adc
push
dec
and
insl
ds
adc
sarl
cmp
stc
jae
out
mov
out
lret
fildll
mov
add
xor
lahf
leave
icebp
enter
fidivrl
or
aaa
fs
inc
dec
das
rclb
and
or
sub
and
movsl
mov
ffreep
push
pop
fbstp
fdivr
mov
push
lret
push
sbb
push
mov
test
nopl
pop
fwait
das
xor
lret
mov
xor
push
and
test
xchg
mov
fwait
ds
stos
xchg
mov
ret
out
call
rcll
jecxz
push
mov
mov
lods
subb
aaa
and
in
and
mov
outsb
cs
jmp
xor
xor
cltd
adc
mov
xor
jp
in
test
addr16
repnz
sbb
imul
enter
aaa
scas
jne
in
jmp
fcmovnu
rcrl
xor
test
push
push
test
lcall
jmp
cmp
mov
je
inc
stc
icebp
pop
and
lcall
add
mov
xchg
sahf
jecxz
add
in
fnsave
call
or
mov
cmp
push
lahf
lret
or
jmp
mov
pop
push
pop
daa
fcmovnu
lret
adc
cmpsl
sub
sub
xchg
lret
imul
jno
xchg
cli
test
sahf
cld
arpl
in
mov
jmp
mov
inc
jne
inc
jns
fistpl
push
in
aaa
jbe
addr16
in
mov
dec
add
sub
in
aam
pop
cltd
movb
xor
cmpb
xchg
enter
jge
sbb
jne
popa
dec
in
push
pop
xor
outsl
jns
add
enter
pop
jmp
in
jo
push
popa
adc
pop
aaa
enter
push
fbstp
jb
sub
lods
outsb
sbb
fsubrs
or
or
test
je
mov
dec
ljmp
in
pop
adc
lcall
ljmp
pop
scas
and
or
sub
cli
gs
xchg
push
sub
or
data16
cmp
add
cli
xchg
imul
push
jmp
push
pop
gs
xlat
dec
aad
cmp
clc
and
nop
fsubl
data16
orb
addr16
gs
cwtl
rcr
int3
call
sub
jns
mulb
mov
dec
jb
lret
mov
dec
push
xor
in
mov
notb
in
pushf
sub
arpl
fadds
lods
or
push
repnz
ljmp
and
adc
xor
add
jb
cmp
fcoml
mov
nop
adc
mov
cmp
aam
add
or
jmp
stos
xlat
test
xor
sarl
push
mov
mov
sbb
xchg
pushf
cmp
cmp
and
cld
jae
and
push
jmp
pop
testl
icebp
xchg
popf
out
sarl
iret
xor
mov
mov
push
sbb
jle
sub
add
into
fiadds
xor
pop
testb
loopne
mov
cmpsl
xor
add
sbb
jmp
in
in
mov
push
mov
jbe
in
dec
cmpxchg
clc
outsb
out
jmp
ja
jmp
js
jno
decb
nop
lahf
cltd
or
aaa
in
stos
in
and
jno
pop
sahf
mov
mov
pop
jmp
xchg
popf
call
cli
ljmp
jo
xor
push
repnz
cmpsb
gs
cmp
fmull
jmp
adc
lock
sub
and
mov
jo
inc
cmpsb
call
cmpsl
fiadds
pop
in
pusha
jo
test
sub
inc
or
mov
sbb
sbb
lret
les
xlat
cltd
push
dec
loopne
jno
ds
xchg
arpl
fldenv
jmp
jb
sub
cmp
inc
add
lods
out
jp
xlat
mov
xchg
enter
push
or
cmp
jno
jp
mov
ja
int
enter
cs
push
enter
enter
cmp
arpl
sbb
mov
inc
idivl
sti
icebp
movsl
nop
push
sbb
and
and
push
xchg
or
and
cwtl
dec
ja
fwait
ds
out
loop
pop
sbb
push
push
cmp
out
sbb
mov
dec
pop
mov
jae
mov
ljmp
out
ja
sbb
jg
test
sub
cmp
lds
mov
dec
or
jle
imul
dec
lret
pop
popa
inc
sub
mulb
sbb
loope
add
shrb
or
inc
sbb
push
mov
or
popa
cmp
fdivrl
aaa
ds
sub
push
jle
cli
jp
lret
inc
stos
add
fistpl
sbb
push
mov
jns
sahf
or
pushf
inc
in
push
loop
jmp
sarb
test
aas
pushf
sbb
fcmovb
add
push
or
fbld
or
push
dec
pop
lcall
dec
cli
dec
mov
scas
lods
stos
js
negb
ja
push
aad
lods
ljmp
out
sbb
scas
xor
aaa
es
pop
lcall
jnp
jle
lret
jl
cmpsb
push
dec
sarb
divb
fwait
lcall
jmp
addb
ror
dec
es
fadds
insb
mov
lret
xor
push
or
fistps
popa
orb
outsl
aaa
push
pop
lcall
divb
mov
dec
cmp
arpl
das
push
pop
pop
pop
jbe
hlt
mov
fbld
mov
bound
cmpsb
aas
shl
sub
test
and
xor
cmp
xlat
cmp
daa
inc
jno
sbb
inc
ds
clc
push
dec
lds
iret
cwtl
fldenv
shll
adc
inc
dec
pop
fisubrl
cltd
inc
in
adc
sahf
mov
or
mov
pop
xor
xchg
out
fistps
jl
add
out
dec
push
xchg
stos
xor
push
or
inc
std
push
inc
xor
outsb
cwtl
and
loop
and
sub
jne
outsl
inc
sub
xchg
repz
lret
addr16
sbb
and
cmp
in
inc
xor
shrb
fmuls
push
fildl
add
ret
hlt
test
xchg
sub
push
fsubrl
cmpl
out
das
adc
int3
cmp
dec
addr16
add
sub
cmp
out
fsubrs
shll
rorb
sbb
out
xchg
popa
mov
insl
and
pop
xor
inc
es
lcall
adc
inc
sub
push
push
inc
fdivs
das
gs
addr16
ja
xor
cwtl
inc
int
push
jg
sub
sub
sti
dec
xchg
inc
call
push
sub
xor
or
jns
and
dec
cmc
out
jno
in
in
xor
push
sbb
sub
daa
dec
jno
fbstp
sub
sub
cmp
cmp
imul
push
test
stc
jbe
mov
jbe
insl
lods
mov
mov
sub
les
ret
sbb
cli
or
or
into
cmp
gs
dec
xchg
xchg
in
hlt
loopne
mov
dec
xchg
xor
jl
sbb
jb
push
or
and
pop
data16
loop
mov
cmp
jno
shll
cmp
cmpsl
mov
into
js
fsubrs
push
add
add
or
inc
adc
lret
jmp
adc
push
jl
mov
scas
fiaddl
jae
mov
fisttps
sahf
fs
in
out
and
sub
test
shll
js
sub
call
shl
pop
or
ret
xor
jle
jge
mov
lret
andb
sarl
mov
push
push
xor
popa
adc
push
sbb
push
adc
jmp
or
sub
xchg
mov
hlt
jbe
imul
pushf
sbb
pop
sub
movsl
dec
adc
out
out
pop
adc
insl
sbb
in
push
iret
data16
xor
push
add
sub
cwtl
sbb
test
push
xor
or
inc
lods
adc
cmp
cmp
or
or
cmp
mov
negb
mov
adc
xor
jae
xchg
and
out
dec
pop
push
in
pop
sbb
imul
jns
dec
popf
std
add
jbe
lret
in
loopne
loop
add
outsl
jp
cmc
dec
jmp
sub
jbe
scas
inc
out
in
popa
jb
dec
test
lcall
fisttpl
lret
fwait
sub
in
in
int3
in
in
cmp
xchg
test
daa
das
jle
pop
insb
sub
fwait
push
dec
adc
decb
sub
jmp
lret
daa
shll
mov
sbb
scas
imul
les
push
xlat
xchg
imul
loopne
lret
sub
das
leave
sub
hlt
cmp
cmpsb
dec
mov
sub
push
sub
notb
fiadds
or
in
outsl
notl
and
rcrl
sub
add
movaps
divl
mov
or
mov
mov
test
js
out
mov
xchg
out
idiv
stos
and
stos
push
stos
adc
jbe
vucomiss
xchg
lcall
hlt
xor
add
add
mov
in
push
or
arpl
cmp
jne
and
int
sub
add
rcll
push
xchg
dec
jns
jne
in
into
add
into
xchg
push
into
pop
push
adc
lahf
fisubl
shll
or
or
mov
sti
lahf
push
imul
aaa
sbb
xor
sbb
push
daa
or
pop
rorb
adc
lds
cmp
and
push
sarb
jo
jnp
push
xor
outsb
sbb
test
or
ljmp
iret
pop
loope
push
fisubrs
xlat
xchg
std
pop
push
andb
cmp
xor
sub
cltd
cli
in
aam
adc
inc
pop
pop
jne
sub
outsb
clc
jae
loopne
inc
or
xlat
bound
inc
cli
or
inc
sbb
mov
ss
outsb
roll
rcrb
negl
sti
adc
xor
or
mov
sarb
mov
xchg
jo
dec
or
xor
mov
mov
push
cmpsb
mov
adc
jecxz
shr
leave
or
cmp
sub
jp
int3
adc
ret
cltd
mov
leave
insl
xchg
adc
test
clc
xchg
adc
mov
jne
pop
fs
adc
pop
mov
lods
dec
ja
cwtl
xlat
fstl
notl
add
adc
fistpll
in
je
adc
outsb
test
roll
xor
das
mov
imul
movsl
pop
xchg
andnps
pusha
lret
fsubl
adc
or
push
jb
mov
jl
jg
push
jne
push
fidivrl
leave
into
cmpsb
push
subl
shrl
aas
repz
push
cmp
sbb
out
jne
call
stos
or
adc
imul
icebp
jae
pop
mov
xor
aam
add
cltd
and
bound
lcall
sub
je
push
mov
in
rclb
in
pop
out
or
insb
fwait
pop
and
push
movsl
sub
data16
cmp
jmp
cmpsl
xchg
test
outsl
insl
mov
jp
sbb
xchg
dec
push
data16
or
mov
or
lock
mov
and
adc
ja
scas
add
push
std
add
pop
leave
hlt
xchg
xor
push
enter
mov
outsb
clc
mov
or
stos
test
insb
icebp
repz
jle
je
inc
addr16
xor
mov
out
add
sub
out
jecxz
mov
repnz
xor
ja
ret
imul
or
cli
invd
push
ret
jp
mov
shlb
and
push
insl
lret
stc
nop
push
jmp
out
adc
or
jnp
mov
add
jmp
out
push
ss
call
mov
inc
pop
push
out
pop
or
out
stos
rcrb
add
movb
add
ret
mov
cmp
lcall
aad
sbb
lret
jmp
pushf
cmp
xor
idivb
mov
cs
clc
xchg
ljmp
adc
sbb
cli
loop
push
test
int3
out
sub
in
imul
fstl
popa
mov
push
cmpl
sub
xlat
aaa
cmpsl
aaa
loopne
cwtl
out
cli
mov
leave
outsl
sub
clc
ficomps
adc
xor
in
out
jg
cmp
rclb
sbb
int3
sti
xchg
sbb
pop
call
in
fdivrp
das
cmp
adc
bound
add
pop
aam
xchg
push
pusha
sub
or
mov
hlt
or
in
adc
jo
mov
divl
sbb
call
mov
jmp
sti
lods
add
aad
add
lock
frstor
shrb
imul
adc
lcall
outsb
imul
push
adc
dec
clc
cmp
add
add
xor
lods
fstpt
mov
sub
sub
cltd
xchg
jge
or
imul
adc
adc
movsl
or
cs
or
dec
or
dec
aaa
jns
in
pop
mov
dec
push
out
in
inc
out
cmp
movsl
nop
stos
and
fwait
and
add
repnz
sub
roll
jne
push
mov
cmp
adc
repnz
mov
nop
loop
sub
popa
leave
sarl
insb
outsb
dec
daa
icebp
sub
test
or
push
js
sbb
in
pop
sub
and
lcall
add
imul
xor
or
fldenv
mov
jl
sub
xchg
jg
inc
pop
add
cmp
arpl
pushf
dec
push
mov
pushf
add
xor
push
and
xor
loopne
push
addr16
ja
shlb
xlat
xchg
push
cmpsb
insl
cmpsb
test
rolb
loope
xor
aaa
inc
jns
repnz
fisubl
xchg
push
push
jp
dec
das
push
cmpsl
icebp
imul
or
and
hlt
je
aas
sub
xchg
out
fsubl
xor
sub
sub
out
imul
sub
or
mov
xor
std
mov
xchg
mov
jmp
icebp
add
mov
sahf
adc
adc
sub
jecxz
pop
add
shrl
sub
pop
mov
push
push
andb
mov
cmp
dec
neg
lds
frstor
pop
cmp
dec
enter
push
imul
jmp
push
inc
dec
push
mov
xchg
ret
aaa
add
mov
notl
xor
pop
pop
int
jae
inc
lret
lods
dec
test
inc
imul
pop
push
lret
aaa
ss
add
mov
loop
fxch
jg
leave
add
lods
mov
or
in
insl
fdivrs
pop
mov
and
xor
lcall
and
jne
mov
gs
fcmovb
jbe
imul
enter
or
fistl
add
inc
lock
popa
fildll
adc
mov
sbb
adc
push
dec
jp
dec
test
clc
adc
icebp
repnz
add
sti
lock
out
stc
and
cmp
pop
es
sbb
push
mov
dec
sub
xor
xchg
dec
data16
aad
aam
mov
out
lahf
jns
jle
xchg
arpl
bound
mov
push
sbb
mov
mov
insb
inc
jns
mov
pop
xor
jmp
dec
repnz
xchg
xor
mov
daa
fdivr
and
mov
aad
stc
ficoms
push
cmp
fwait
jmp
mov
test
movsb
gs
mov
mov
cmp
cmp
sub
popf
jnp
cmp
dec
daa
fstl
adc
int3
xchg
push
jl
pop
enter
and
mov
das
loope
call
cmp
mov
mov
add
xor
add
adc
fsubrl
mov
mov
inc
xchg
mov
and
lret
mov
xchg
and
mulb
aas
sub
xchg
movsl
into
ret
sub
adc
push
cmc
pop
jne
or
out
ljmp
fistl
xchg
mov
jl
scas
pop
jns
mov
inc
jg
imulb
push
aaa
lods
sub
jecxz
xchg
repz
ja
and
mov
cli
fsubl
adc
push
js
cmp
out
enter
pop
clc
jecxz
push
mull
jno
mov
shll
fcomip
clc
xor
repz
add
adc
iret
je
push
popf
and
fimuls
xchg
xchg
push
imul
int3
jns
mov
sbb
mov
dec
cld
rclb
jae
sahf
test
fwait
or
mov
mov
pop
dec
xchg
jbe
push
arpl
xor
adc
dec
adc
adc
xor
dec
xor
jno
jnp
fs
xchg
xor
fists
lea
pushl
je
test
repz
cmp
inc
jl
ja
shrl
rol
cli
out
gs
jbe
add
or
sbb
or
dec
sub
add
sbb
ret
int3
insb
test
jnp
call
adc
movsl
je
daa
sbb
and
popa
sub
sarb
lcall
lods
in
cmp
xor
ja
sub
pusha
ljmp
add
push
outsl
push
pop
pop
gs
ret
jnp
mov
cmc
int3
jl
das
jecxz
sub
shll
inc
das
add
shrl
fldln2
push
mov
lods
data16
push
or
xlat
sbb
or
push
dec
dec
adc
inc
jb
hlt
repnz
jl
lret
or
int3
dec
cs
adc
pop
pusha
mov
cmc
jg
pushf
push
data16
jl
xchg
les
jno
mov
mov
xor
sbb
push
out
nop
stc
pop
push
pop
xorl
sub
shll
loop
out
das
insl
cmp
mov
ljmp
dec
addr16
cmp
sbb
inc
or
ret
lret
add
rcrl
cmp
adc
sbb
sub
jp
aaa
mov
cltd
mov
pop
hlt
dec
std
push
lret
pusha
sti
sbb
sub
push
add
push
sbb
dec
xchg
push
ja
xlat
jle
add
inc
aas
or
sub
mov
or
scas
inc
adc
cmp
jg
lock
mov
jecxz
lods
sahf
push
lcall
push
sub
xlat
add
sarb
mov
dec
lret
pushf
inc
fadds
or
sub
std
pop
mov
jmp
aad
popa
out
hlt
jecxz
loope
lcall
mov
hlt
js
push
dec
lret
add
push
xchg
in
int3
divb
xor
sbb
push
cmc
or
or
loope
push
stc
adc
or
and
xchg
test
sbb
jnp
push
call
add
adc
sbb
lods
fsubl
xchg
insb
dec
xor
nop
xchg
cli
and
std
adc
push
adc
pop
inc
test
fcomip
sbb
push
in
push
leave
mov
sbb
mov
dec
ss
jnp
dec
push
xchg
pop
jb
imul
iret
or
in
push
cmc
icebp
fstl
nop
mov
mov
popf
push
mov
in
pop
cmp
loopne
push
orl
push
in
push
sbb
stos
xor
jae
mov
sti
fnstcw
lret
sbb
cwtl
jecxz
repnz
fisubrs
adc
scas
icebp
scas
jecxz
pop
loopne
enter
or
or
iret
daa
imul
xor
xchg
add
mov
jb
mov
jae
fists
add
adc
mov
jg
push
out
sbb
cmp
int3
and
dec
leave
rorb
pop
stos
inc
mov
inc
in
xchg
and
int
sbb
pop
mov
jno
movsl
dec
pop
jo
sub
mov
mov
test
jp
lock
fisubrl
rorl
adc
sbb
jl
fs
add
mov
sbb
mov
lds
lret
xor
lea
aaa
adc
dec
js
int
inc
bound
xchg
inc
out
mov
stos
cmpsb
push
jmp
adc
jp
arpl
xor
lea
pusha
inc
jge
rcr
lea
mov
fsubrs
in
or
xchg
mov
mov
xchg
dec
in
inc
cli
in
adc
pop
imul
mov
push
cmp
and
mov
lea
xor
xor
push
clc
mov
add
mov
add
cli
leave
arpl
test
push
pop
data16
sbb
gs
mov
adc
scas
sub
test
data16
jae
mulb
ss
push
cs
cmp
fldt
jns
or
lcall
adc
rcll
jle
push
nop
cmp
add
adc
jmp
lcall
ss
mov
callw
mov
lods
jb
clc
pop
push
and
and
pop
mov
cmc
mov
insb
data16
imulb
xor
testl
push
fldt
and
jmp
lret
jmp
mov
sub
adc
or
aaa
fdivrs
push
cmp
clc
mov
add
cmp
jno
xor
sub
add
pop
sbb
cmp
negl
inc
add
jno
mov
mov
les
icebp
out
add
shll
jmp
in
add
xor
add
mul
shrb
xchg
adc
insl
imul
xchg
adc
sahf
xorb
imul
push
pusha
stc
outsl
fwait
sub
ljmp
jno
xchg
xchg
dec
imul
lea
cmp
xlat
mov
iret
iret
out
cs
pop
inc
jnp
lcall
and
xchg
sub
mov
mov
in
and
sbbl
adc
and
lahf
sbb
add
fcom
leave
mov
mov
cmp
mov
es
fstpt
outsb
pop
shlb
dec
rorl
sbb
adc
lret
jbe
sbb
mov
push
inc
sbb
jae
pop
push
mov
bound
or
inc
popa
outsb
or
aaa
pop
dec
sbbl
jle
cli
inc
hlt
lret
cld
imul
pop
int3
addr16
shrb
aad
lods
xor
idivb
int
pushf
and
pop
fcmovb
inc
push
loop
dec
or
filds
or
aaa
pop
dec
jg
insb
adc
das
insl
jle
cli
push
in
inc
mov
roll
inc
jg
stmxcsr
insb
sti
into
cmp
packuswb
inc
mov
cmpsl
jne
mov
sub
push
inc
dec
pop
add
sbb
add
fs
inc
push
aas
cmp
adc
scas
push
xchg
loopne
jle
aas
dec
out
inc
test
add
lock
outsb
stc
inc
jmp
or
mov
fwait
pop
mov
push
popa
cmp
aaa
xor
sbb
fcmovb
pop
dec
mov
pop
push
mov
push
jno
inc
gs
repnz
push
les
pop
pusha
xchg
mov
push
sbb
pop
dec
mov
dec
ud2
xchg
push
pcmpeqd
test
fistpl
pop
in
xlat
push
adc
cs
pop
cwtl
and
inc
ss
xchg
into
call
rcrl
adc
lods
addr16
mov
cli
cs
push
addr16
arpl
cltd
cwtl
pop
mov
dec
pop
dec
pushf
outsb
clc
inc
mov
sbb
dec
pop
jmp
dec
aas
sarl
mov
lahf
and
xchg
fs
ret
sbb
mov
pop
jae
pcmpgtw
scas
cmp
cmpsb
push
cmpsb
mov
push
pop
inc
inc
adc
rcrl
push
popf
push
fwait
pusha
scas
movsl
dec
xor
loope
cmovs
ja
dec
pushf
ret
sbb
sarb
das
mov
xchg
inc
pop
ficoms
xor
cmp
es
and
mov
sbb
xchg
ss
aad
sub
mov
fwait
xlat
fistps
imul
xchg
repnz
mov
jecxz
bound
pop
mov
push
and
pop
divb
push
sar
push
jge
sub
sarl
push
iret
test
aas
repnz
lock
jl
rcl
xor
scas
adc
std
mov
scas
lds
sub
push
mov
ds
dec
add
pop
repnz
mov
sbb
inc
mov
testb
addr16
fcomp
push
pop
or
cli
xchg
mov
or
test
enter
rorl
cmovl
out
popa
push
push
aaa
and
xor
out
pop
add
les
cmp
int3
fbstp
lret
fsubs
pop
je
scas
fadd
push
push
outsb
loopne
clc
push
pop
inc
add
std
pop
push
adcb
sahf
mov
ja
adc
add
imul
ret
xor
cltd
leave
add
loope
inc
inc
icebp
cld
pop
push
iret
gs
xor
fdivrp
or
xchg
sbb
and
and
ret
ja
out
push
pavgb
and
stos
xor
xchg
rcrb
push
xor
adc
out
mov
mov
popa
fadd
cwtl
dec
sbb
pop
idivb
orb
mov
out
or
dec
leave
mov
sub
in
out
inc
mov
test
enter
push
adc
mov
ja
jbe
push
out
scas
in
xor
jecxz
cltd
jl
in
mov
mov
sbb
iret
mov
xchg
inc
lds
arpl
add
mov
jbe
add
mov
sbb
xchg
adcl
mov
in
sub
mov
jne
inc
icebp
ret
lret
sub
jge
pop
outsl
fistl
sbb
dec
mov
sbb
loop
in
mov
xor
pop
mov
mov
lea
add
stos
pop
xchg
sub
mov
das
fadds
nop
call
in
pop
push
jp
enter
lods
rcrl
addr16
lret
or
andl
xlat
mov
call
test
inc
test
enter
push
out
and
mov
adc
mov
mov
cli
testb
xchg
jnp
shl
mov
dec
lock
repnz
clc
sahf
pop
sahf
jmp
aas
cmp
cmp
mov
inc
je
pop
les
lock
subb
xchg
sbb
into
negb
jne
lret
out
inc
inc
mov
test
or
clc
lds
mov
sub
jno
pop
pop
shl
ja
les
mov
pop
fs
inc
sbb
outsb
mov
sbb
pop
out
dec
inc
xchg
imul
mov
repnz
aad
rcrl
mov
mov
mov
mov
fbld
out
dec
fbld
add
fdivl
pop
xlat
ret
pop
add
rcll
in
xchg
push
inc
add
aas
mov
pop
add
add
pop
add
mov
add
popf
mov
add
stos
mov
add
mov
add
add
mov
add
xlat
mov
add
or
add
in
mov
pop
add
mov
pop
add
pop
add
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
pop
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
xchg
sub
push
dec
pop
sbb
es
rorb
ficoml
test
adc
and
test
incl
sbb
or
xchg
mov
sbb
sub
add
xor
outsl
or
int3
lret
dec
dec
add
push
adc
out
addl
fcomps
jl
mov
movsl
sub
push
or
mov
xchg
sbb
stos
test
jnp
ja
sub
jecxz
clc
sub
or
leave
add
fnsave
add
mov
pop
outsb
xor
lods
jg
repnz
bound
sbb
xchg
jmp
mov
out
lock
mov
jl
xor
lods
push
jmp
pop
loop
andb
icebp
xor
push
data16
sbb
pop
les
mov
nop
add
repnz
mov
add
sbb
rcl
sub
fldenv
mov
push
outsl
push
xchg
test
stc
adc
inc
fmuls
inc
shrb
repnz
aad
or
subb
lret
rolb
add
stos
xchg
lds
and
push
dec
dec
adc
mov
sti
push
es
adc
sbb
lods
mov
push
mov
in
jno
les
adc
mov
mov
sub
loope
add
add
int
dec
xchg
fs
dec
add
dec
or
out
adc
adc
add
adc
dec
mov
adc
or
dec
pop
sub
sbb
sbbb
mov
dec
xlat
ss
js
lcall
aad
xchg
add
orb
or
outsb
addb
inc
movsl
xchg
arpl
nop
mov
and
mov
xchg
push
std
vmovss
inc
pop
fldl
stos
push
scas
movsb
add
adc
jno
add
stos
fwait
pop
pop
and
inc
gs
xchg
push
jo
add
and
pop
adc
add
mov
jle
or
jp
cmpb
inc
add
int
xor
dec
incb
scas
cmp
sti
and
cmp
stos
inc
add
inc
xor
push
adc
or
and
push
inc
and
inc
and
inc
sub
inc
cmp
orb
pop
cmp
cmp
sbbb
and
dec
popf
add
add
lahf
add
mov
test
dec
mov
adc
or
rorb
dec
rorl
cmp
or
or
or
pop
loopne
and
or
or
call
jmp
in
enter
mov
xor
subb
or
andb
sbb
xor
sbb
push
inc
sbb
and
inc
aam
inc
and
dec
daa
pop
add
or
loopne
add
cwtl
mov
repnz
hlt
push
dec
push
mov
or
arpl
mov
mov
cmp
jne
adc
bound
inc
xor
cmpsl
xchg
icebp
adc
mov
fsubs
inc
xchg
mov
inc
pushf
cld
inc
stos
dec
inc
lods
push
inc
mov
inc
iret
pop
inc
rclb
roll
rcrb
aad
inc
loopne
inc
loope
stos
cld
pushf
dec
and
and
lock
stos
cmpsb
mov
adc
and
dec
mov
pop
add
or
add
addb
inc
push
and
push
mov
xchg
and
adc
dec
sbb
pop
dec
and
inc
xchg
and
xchg
or
stc
mov
lods
mov
or
add
dec
dec
in
sbbb
push
xchg
testb
les
xor
and
lock
and
add
test
and
jmp
call
dec
imul
enter
repz
mov
jns
mov
adc
test
adc
add
test
push
adc
add
test
xchg
xchg
add
push
mov
sbb
es
or
sub
fmull
sub
mov
aas
mov
inc
test
push
scas
jge
or
ret
and
or
jns
cs
sub
sub
cmp
adc
cmp
lret
or
aas
add
inc
outsl
inc
add
inc
add
dec
add
dec
add
pop
add
pusha
add
jo
cmc
cltd
add
sti
or
mov
mov
or
rclb
or
and
add
arpl
mov
insb
add
movsl
nop
inc
push
lea
ret
inc
sbb
or
or
adc
adc
mov
jge
and
xor
xor
popa
add
sbb
xchg
pop
mov
scas
dec
lods
rclb
out
out
movb
dec
xor
stos
cmc
add
mov
lahf
daa
and
push
pop
add
mov
fwait
sbb
jno
sub
or
test
mov
adcb
mov
add
or
and
xor
cmp
stos
shl
sub
add
jmp
call
add
repnz
iret
add
stos
push
pusha
mov
xor
jecxz
xchg
jecxz
repz
shll
andl
mov
mov
mov
push
sub
js
hlt
sub
xchg
xor
add
and
mov
xor
scas
add
adc
jo
cltd
adc
adc
sub
mov
adc
push
add
and
jns
subb
arpl
sub
cli
pushf
add
popf
pop
stc
daa
movsl
fisttpl
fistps
inc
adc
mov
and
xchg
dec
cmpsb
inc
mov
inc
test
in
sbb
lea
mov
jns
or
inc
xor
mov
adc
cltd
xor
add
sti
lods
dec
push
adcb
mul
idivb
testl
outsl
dec
mov
cld
dec
hlt
xchg
mov
inc
dec
jb
mov
jo
inc
fdivrl
stos
sarb
inc
xchg
xlat
jmp
add
sub
lods
or
sbb
push
and
in
push
mov
aad
iret
jno
xor
xor
add
shl
add
adc
in
rcl
jb
test
adc
pop
gs
shrb
adc
insb
adc
lcall
dec
pop
adc
je
loopne
xor
lods
int3
cmp
ret
cmp
stos
les
popf
or
mov
add
cmp
push
rclb
xchg
aaa
loopne
sub
add
ret
adc
gs
xchg
loop
add
aam
xchg
imul
xchg
or
dec
sbb
or
cmp
add
insb
pop
cltd
data16
mov
xor
or
and
push
inc
adc
mov
push
mov
dec
mov
adc
aaa
sahf
das
ss
loopne
jecxz
inc
xor
dec
daa
pop
test
daa
iret
cli
popl
fucomip
xor
test
pop
cmp
and
add
in
cmpsl
mov
push
mov
sub
lods
dec
sub
xor
or
xor
pop
pusha
or
or
add
imulb
call
inc
add
pop
popa
adc
inc
mov
xchg
add
cs
loop
mov
or
outsb
push
add
push
push
push
aaa
push
xor
pop
or
bound
das
add
push
push
xchg
pop
adc
mov
push
dec
push
sub
inc
or
pop
roll
stos
inc
pop
xchg
arpl
push
daa
jbe
inc
add
dec
adc
push
or
lea
mov
xchg
xlat
out
and
popa
add
cld
pushf
mov
add
push
in
dec
cmp
leave
push
mov
and
pop
add
aas
fstl
outsb
dec
add
push
adc
loope
movl
push
xor
mov
das
fsubrp
mov
int
mov
fildl
lret
push
adc
push
xor
cmp
das
jg
mov
jle
enter
inc
orb
ss
dec
sub
inc
cmp
inc
push
or
fcoms
xchg
sbb
add
and
and
pop
out
popf
add
pop
rol
or
movsl
pop
adc
and
mov
cltd
aam
pop
imul
mov
xchg
and
and
push
insl
mov
add
cmc
or
repnz
icebp
aam
jmp
gs
or
sbb
dec
jae
push
adc
add
js
inc
pop
pop
add
or
add
cwtl
pop
sub
outsl
imul
and
xchg
jmp
cmp
pop
pop
add
lods
andb
les
push
sub
mov
das
addl
pushf
push
jns
jmp
adc
insl
pop
sti
pop
add
inc
pop
xor
adcb
stc
add
add
inc
xchg
mov
into
les
jp
adc
cmp
repz
addr16
sbb
or
and
fisttps
pusha
mov
test
inc
notb
cmp
fsts
push
adc
lret
pop
sti
adc
pop
mov
xchg
icebp
pusha
inc
mov
into
out
push
inc
dec
aas
or
mov
rcr
add
and
rol
addr16
add
in
push
leave
mov
push
imul
ret
mov
push
push
imul
out
orb
adc
cmp
adc
ficoms
xor
adc
and
xlat
les
out
pushf
sub
mov
shr
mov
les
push
add
push
add
fwait
or
or
mov
sbbl
call
xchg
in
insb
aas
jne
and
scas
jnp
cmc
inc
add
or
in
adc
or
fdivrl
jmp
sub
notl
adc
cmpb
icebp
push
cmovb
sbb
loopne
fisttps
arpl
sbb
push
jecxz
clc
inc
and
into
test
dec
add
out
je
and
popf
cmp
push
lret
add
mov
mov
fld
mov
ret
in
mov
aas
dec
movb
mov
ret
ljmp
fwait
adcb
inc
mov
cmpsb
pop
outsb
mov
jo
add
push
push
xor
and
xor
outsl
or
inc
cmp
arpl
outsb
fs
shll
or
outsl
add
xchg
mov
xchg
jmp
fucomip
add
shl
or
cltd
mov
sub
add
mov
push
int
inc
fistpl
shlb
xchg
pushl
jno
dec
jle
add
lahf
stc
xchg
out
xor
incb
mov
pop
push
pusha
push
pop
jecxz
sub
je
cli
add
jo
mov
sub
xchg
pusha
or
in
inc
xchg
in
mov
lods
loopne
xchg
sub
mov
mov
push
inc
and
add
lcall
ds
iret
movsb
mov
sub
or
aad
movsl
mov
outsw
push
in
or
out
mov
fdiv
jecxz
repnz
subb
mov
cmp
push
adc
subb
ret
pop
sub
mov
sarb
ja
jbe
jns
add
or
adc
xchg
sti
push
add
popf
sub
out
sbb
add
sbb
je
pusha
out
imul
sbb
mov
pop
mov
xor
or
cmpsb
cmp
mov
popa
and
cwtl
jmp
add
inc
js
inc
sbb
frstor
or
popf
into
sbb
call
bound
insl
sub
push
mov
stc
iret
sbb
push
push
or
outsb
ss
js
sub
mov
shl
add
xchg
daa
and
cld
add
into
int3
adc
inc
xor
pop
jge
pusha
jne
pop
cld
inc
stos
fdivrl
shlb
stc
movsl
xor
add
inc
xor
xlat
dec
ret
cmp
add
mov
int3
pop
add
or
push
pop
lea
push
inc
add
les
ljmp
ret
mov
inc
pop
jno
dec
scas
ja
cmp
jae
pop
aas
mov
xor
push
nop
pop
das
dec
add
mov
ds
xchg
in
mov
inc
add
add
push
test
or
inc
ss
cmpsl
jbe
gs
mov
arpl
mov
rolb
bound
or
dec
add
stos
les
xchg
movsb
xchg
or
insb
stos
arpl
jb
jp
xor
xor
push
filds
cmpsb
movsl
add
jno
pusha
inc
lods
sub
popa
movsb
add
out
or
dec
cltd
or
stos
movsb
or
out
fs
xchg
repnz
jnp
add
mov
inc
pop
fistpll
fwait
pusha
test
sti
mov
and
dec
pop
les
sbb
adc
icebp
or
push
das
lcall
xchg
pop
popa
mov
inc
pop
in
add
fimull
or
pop
rolb
inc
cs
call
adc
adc
and
dec
and
adcb
adc
pusha
pop
push
arpl
test
imul
add
outsb
unpckhps
jl
xor
aas
jmp
add
sbb
jmp
pop
add
pop
xchg
lret
sub
call
sahf
sub
not
jmp
xorb
lds
push
xor
add
inc
arpl
pop
add
movswl
cli
aaa
add
mov
cltd
and
shlb
icebp
lods
out
add
adc
cwtl
call
adc
sub
pop
ss
sbb
out
in
and
mov
jb
mov
or
imul
and
cmp
mov
shl
push
fwait
ret
pop
cwtl
dec
or
adc
sub
into
add
dec
adc
leave
not
sbb
testl
push
pop
repnz
cmp
std
repz
call
push
adcl
cwtl
clc
inc
test
mov
divb
xchg
mov
adc
iret
xor
mov
lock
loopne
cwtl
divb
xchg
pop
out
ja,pn
gs
inc
push
or
cld
pop
sub
dec
sub
jge
sti
movsb
fstpl
sbb
aad
lock
mov
push
pop
pop
xor
lret
test
in
mov
add
not
sub
int3
loop
popf
dec
shl
jge
dec
sub
mov
lea
sbb
lods
push
pop
pop
paddb
hlt
sub
adc
cmpsl
test
shl
dec
sub
inc
jmp
in
push
or
sub
neg
cwtl
filds
xchg
mov
in
lds
sub
xor
mov
sbb
stos
psubsb
pop
cmp
imul
mov
mov
sub
jno
dec
or
scas
cwtl
loopne
or
test
pop
lods
add
popa
add
add
dec
mov
ror
add
jge
pusha
adc
add
loop
clc
sahf
rep
xor
xor
and
xchg
btc
mov
xchg
add
or
adc
add
test
adc
adc
add
xchg
pop
jecxz
shll
push
aam
fistpll
jge
push
icebp
sub
sarl
mov
bswap
orb
das
aaa
inc
sbb
test
cwtl
popf
and
imul
adc
data16
jnp
js
add
mov
jecxz
roll
xor
pop
inc
xor
popf
push
add
out
lahf
add
in
mov
icebp
sub
ret
cwtl
cmpb
xchg
push
xor
mov
nop
dec
sarb
mov
popa
dec
push
pusha
aaa
mov
in
and
add
push
mov
push
ds
xor
out
dec
inc
lret
not
rol
inc
stos
inc
or
xor
stc
out
xor
xor
or
or
add
mov
testb
mov
push
cmp
sbb
out
test
push
mov
int
and
not
push
inc
outsb
aas
nop
insl
xor
inc
or
loopne
sbb
dec
lea
cltd
dec
push
xor
outsl
push
jno
add
insb
push
xor
js
dec
out
dec
imul
push
and
popf
or
mov
ljmp
cwtl
lods
push
stos
add
frstor
pop
or
jae
mov
cmpsb
mov
push
iret
loope
mov
and
shl
sub
adc
push
or
xchg
adc
sbb
mov
dec
mov
add
je
mov
or
add
roll
add
clc
mov
dec
in
in
fcoml
add
incb
cmp
mov
int3
mov
sub
adc
ret
mov
out
ret
mov
or
lea
jbe
cli
lcall
mov
notb
pop
rclb
sub
clc
sbb
adc
aad
push
adc
cltd
add
sbb
add
sub
test
pusha
mov
adc
mov
roll
push
shr
ficoms
mov
movl
cmpsb
std
orb
adc
sub
xchg
dec
gs
test
add
and
sub
stc
add
adc
dec
outsb
dec
mov
mov
xor
cli
je
and
fistl
sub
xor
sbb
inc
adc
xor
sub
lret
adc
mov
stos
pop
lods
aad
sub
or
mov
jg
je
mov
mov
mov
insb
add
shrb
dec
inc
outsb
aas
mov
fnstcw
sbb
lea
push
dec
push
pop
pop
and
sti
add
stc
mov
in
lret
pop
ss
xlat
dec
test
out
test
loopne
push
push
mov
dec
cltd
jnp
adc
neg
ffreep
mov
stos
lahf
iret
mov
mov
add
cwtl
loope
jne
punpcklbw
pop
add
mov
jmp
jmp
mov
into
mov
test
subl
jno
sub
jnp
adc
add
add
push
pop
or
loopne
mov
mov
sbb
inc
xor
and
inc
dec
mov
cmpsb
adc
push
push
pop
add
pop
adc
scas
fdivl
cmp
ss
mov
pop
rol
testb
add
adc
ja
dec
push
movsb
and
lock
sti
test
dec
cmp
lds
inc
call
cmp
flds
bnd
xor
pushf
insb
pusha
inc
mov
jl
sub
repnz
not
sub
push
push
es
xor
jae
inc
xor
ret
inc
sahf
and
and
cli
push
es
pop
jae
lods
popf
pushf
shll
shl
das
test
fbstp
fdivs
xor
sbb
cwtl
nop
pushf
jp
div
or
jns
dec
shrl
shlb
out
jb
jne
dec
call
push
pop
pop
jge
dec
ret
pop
testb
lret
and
push
adc
int
mov
mov
inc
aad
lds
not
test
xchg
subl
sub
or
and
mov
movl
inc
jecxz
pop
mov
inc
pop
xchg
or
add
adc
or
jns
cmp
adc
test
pusha
and
clc
mov
fists
int
imul
push
mov
stos
push
or
neg
pop
mov
scas
mov
movl
sub
cmp
xor
adc
ficoml
test
xor
mov
popa
pusha
push
push
or
gs
mov
xchg
lret
xchg
popf
clc
pop
adc
adc
rorl
xor
add
inc
mov
test
cmp
xor
push
lahf
mov
dec
inc
stos
ror
mov
mov
daa
neg
xor
arpl
mov
cmp
nop
cmpsl
jae
cmpsb
xlat
add
pop
in
in
in
jmp
mov
sarb
inc
adc
loop
mov
cmpsb
test
jo
stc
jno
push
lods
or
movb
cs
imul
cmp
push
maxps
addr16
push
xchg
push
pop
inc
aas
mov
nop
imul
cwtl
cmp
inc
sbb
int3
push
mov
inc
xor
xor
shll
push
leave
ljmp
mov
xor
hlt
cmpsb
stos
add
mov
dec
pop
cmp
xchg
cmp
std
into
xchg
shlb
xor
xlat
bound
scas
int
or
rcrl
sub
push
push
pushf
shrb
mov
xor
sahf
cltd
lods
cltd
inc
adc
mov
pop
pop
not
inc
pusha
pop
and
inc
ds
add
jp
xor
pop
ret
sub
pop
or
mov
xor
adc
dec
cmp
test
int
es
lea
loop
sahf
fmul
and
outsl
xor
inc
aaa
iret
dec
dec
dec
pop
mov
push
pop
div
dec
aaa
push
dec
in
mov
adc
aas
adc
sbbb
inc
sub
mov
mov
dec
and
hlt
and
lret
dec
subl
in
iret
push
push
add
dec
cltd
insl
xor
mov
xchg
les
sub
decb
arpl
or
mov
mov
cltd
mov
pop
push
pop
pop
adc
mov
shlb
xchg
test
mov
push
pop
pop
in
sub
icebp
dec
mov
or
test
sbb
jp
inc
popf
xor
fcomi
fidivs
andl
dec
xchg
and
das
ficomps
add
inc
sub
fucom
cltd
aad
push
cwtl
sbb
neg
cmpsb
test
gs
xor
lahf
stos
cwtl
mov
or
sti
stc
xor
lea
insl
inc
xor
out
dec
add
movsb
mov
pop
inc
mov
loop
cwtl
cld
and
cmc
or
shl
adc
adc
mov
sbb
add
adc
and
and
jae
outsb
adc
inc
out
mov
or
sbbb
outsl
dec
mov
stc
imul
test
xchg
pop
add
inc
test
jnp
sub
sbb
fcmove
leave
cmp
shr
pusha
and
inc
outsb
mov
in
jp
je
lock
push
mov
loopne
or
mov
std
cltd
pop
ret
out
dec
push
into
sbb
or
mov
and
sub
adc
adc
push
gs
testb
shl
and
jne
add
xchg
push
pusha
dec
xchg
loop
cmc
jae
int
mov
lea
addr16
neg
mov
push
add
pop
ljmp
adc
test
push
imul
inc
or
push
jmp
inc
fcomi
dec
inc
shll
xor
stos
jb
jl,pn
popa
add
inc
fidivrs
ja
push
pop
pop
inc
mov
or
sbb
fcomip
shrl
js
inc
add
icebp
mov
ja
les
or
mov
mov
adc
add
out
push
int3
and
adc
xor
dec
xor
ss
sti
lock
int3
movsb
out
inc
pop
lcall
pop
and
out
push
sahf
lods
add
addl
and
inc
sub
cltd
in
negl
stos
addl
aad
je
xchg
jmp
add
fisubs
imulb
jg
stc
js
movl
mov
popa
dec
pop
mov
sbb
xchg
imulb
mov
add
mov
outsb
dec
sub
sbb
xor
fistl
adc
repz
dec
ror
push
inc
stc
push
push
int3
push
outsb
inc
shrl
aas
cmp
out
xchg
lock
fdivrs
or
mov
push
push
cld
and
lahf
fnstsw
imul
dec
std
adc
dec
xor
imul
jno
pop
cmp
push
jecxz
pop
loopne
fnstenv
mov
push
sub
xor
outsb
out
xchg
mov
insl
cltd
jl
add
sbb
aam
sbb
cmp
rorb
and
test
bnd
inc
add
fimull
inc
jmp
arpl
cli
and
xlat
std
xchg
dec
movsl
lock
add
shlb
sub
es
mov
adc
and
xor
xlat
jge
leave
frstor
fs
mov
push
cmpsb
push
ret
cmp
xlat
and
cmp
out
add
mov
mov
mov
pop
mov
xor
std
in
dec
and
push
pop
pop
into
xor
mov
adc
repz
sbb
xchg
data16
push
stos
outsl
test
sbb
ror
fwait
xchg
or
xchg
push
cltd
enter
pop
mov
mov
imul
push
cld
mov
sbb
sub
dec
push
add
jmp
cmp
add
insl
xchg
inc
test
add
cmpsb
push
testl
mov
add
lret
clc
push
xor
loope
pop
and
mov
xchg
push
outsl
push
push
mov
mov
fisubl
xor
or
mov
adc
jge
bts
sub
in
jl
mov
dec
push
sbbl
adcl
icebp
lret
xor
divb
aam
sub
int3
mov
shl
lcall
pusha
and
jge
or
neg
sbb
out
dec
or
or
xor
pop
or
jle
or
shll
add
push
pop
js
xchg
adc
mulb
into
inc
inc
xchg
pop
push
pop
xor
nopl
rcll
adc
add
jp
test
sbb
adc
dec
mov
mov
push
int3
test
mov
imul
pusha
push
pop
pop
ret
xor
stc
mov
shlb
add
in
stos
jge
orl
imul
sbb
xchg
lcall
and
pop
add
pop
xor
es
mov
push
inc
push
aas
push
pusha
sub
sti
fcomps
sub
jmp
mov
adc
jbe
pop
fwait
add
or
leave
out
add
rolb
mov
xor
imul
dec
or
rol
cmpsb
mov
lock
add
mov
push
pop
or
rorl
push
adc
or
outsb
out
pop
push
pop
pop
push
insb
roll
adc
les
sbb
sub
or
daa
and
or
mov
add
mov
loopne
addl
pop
aad
inc
test
add
sbb
andb
popa
or
jge
popf
lea
dec
sbb
leave
mov
xchg
stos
ret
sbb
hlt
sub
lahf
mov
stos
cld
ret
imul
scas
ljmp
cmp
mov
push
xchg
test
mov
insb
loope
jno
sub
pop
not
not
addl
and
das
pusha
or
add
mov
xchg
lods
or
call
rcr
sbb
sub
cltd
adc
add
mov
out
cltd
repz
adc
adc
and
rcrl
mov
dec
push
imul
lret
or
scas
aaa
and
cld
aam
loop
xorl
pop
push
push
movl
pop
and
fisttpll
stos
add
lods
or
shll
outsl
push
xchg
inc
pop
stc
or
push
orb
xor
jecxz
lret
dec
int
sub
adc
fdivl
sub
push
popa
fwait
es
mov
add
xor
sbb
pop
leave
xchg
add
loop
jno
adc
aam
mov
jp
sub
lcall
xchg
dec
mov
adc
adc
dec
or
fildl
aaa
cmpsb
nop
daa
sbb
inc
and
adc
addb
shlb
popa
inc
es
push
loopne
mov
add
push
or
repnz
jge
push
pop
add
icebp
mov
ss
mov
adc
jl
lods
mov
add
fildl
pop
push
loope
push
aad
inc
and
fldcw
popa
mov
or
cmp
pop
sbb
or
sub
and
fnsave
inc
ret
push
or
mov
in
and
repnz
xchg
lret
into
sti
or
setb
inc
pop
jecxz
imul
mov
add
and
add
int
xorb
popa
mov
xor
mov
hlt
or
sub
mov
daa
add
mov
repz
rclb
mov
int
rcll
imul
outsb
test
sub
sbb
cmp
and
aam
dec
in
pusha
dec
pop
sti
cmp
push
pop
fs
cwtl
add
imulb
push
jno
and
xchg
sahf
outsl
sub
out
push
dec
jecxz
mov
lods
mov
imul
jmp
push
add
adc
pop
jecxz
shll
lods
push
cwtl
inc
mov
js
xor
cmp
popf
mov
inc
jno
and
lret
fwait
inc
imul
test
out
push
pop
xor
push
loop
push
shr
pop
pop
sti
or
and
pushf
fnsave
es
ja
adc
cmp
cmp
add
loopne
pop
cmp
iret
pop
pusha
test
pop
loop
mov
xchg
addl
int3
mov
add
inc
inc
repnz
sub
or
fimuls
imul
and
xor
shll
gs
jo
add
icebp
in
stos
xchg
ja
in
push
xchg
cli
xor
sbb
sbb
cli
add
sarl
sbb
or
jns
fbstp
mov
bound
pop
pushf
repnz
add
push
xchg
jae
pop
mov
jl
sub
mul
dec
aad
andl
das
mov
fdivrp
daa
lods
shrb
loopne
je
push
subps
add
ljmp
jge
push
stos
loope
mov
pop
gs
dec
rcr
jns
lret
jb
pcmpgtd
sub
lods
pusha
mov
xlat
popa
add
jecxz
xor
test
into
test
leave
mov
iret
add
divl
mov
test
add
xchg
sub
mov
jp
lret
mov
or
cmp
or
neg
repz
test
mov
adc
stos
push
xchg
gs
sbb
mov
xor
mov
or
push
sub
sti
mov
pop
pop
test
andps
sub
mov
sub
sub
or
pop
pop
cs
cmp
fildll
or
dec
jl
test
adc
cmp
xchg
scas
sbb
in
enter
sub
rolb
les
pop
daa
mov
xor
mov
dec
adc
mov
scas
addr16
mov
sub
test
push
mov
ds
rcl
or
mov
xor
dec
in
mov
lahf
mov
testl
mov
push
sbb
xchg
ja
rclb
dec
sarb
testl
int3
sti
nop
dec
xlat
ss
pop
push
test
add
pop
cmp
or
mov
xchg
ror
fidivrl
jno
push
pop
lock
shl
test
outsl
dec
int
cld
loopne,pt
dec
fsts
push
xlat
push
sub
adc
jne
nop
pop
add
sbb
adc
in
push
movsb
int3
pusha
fwait
adc
and
mov
pop
adcb
aam
sub
pop
and
fmuls
mov
push
inc
testb
negl
xor
jl
vmovsldup
sbb
mov
adc
ja
adc
sub
aas
push
lea
into
xor
cmp
xor
stos
imul
adc
sbb
mov
or
iret
dec
push
pop
pop
adc
aad
adc
or
inc
inc
into
jmp
in
test
loope
stos
add
inc
pop
add
pop
mov
inc
sahf
push
mov
adc
pop
scas
outsb
xchg
add
or
pop
or
cmpsb
movsb
mov
jnp
pop
adc
add
add
adc
mov
jl
loopne
popf
mov
add
inc
cwtl
xorps
or
bswap
test
repnz
adc
jg
xchg
dec
jecxz
fsubs
mov
adc
jns
xchg
sub
pop
in
inc
pop
add
rorb
xchg
cmp
mov
pop
mov
push
inc
leave
add
hlt
or
ret
addb
dec
mov
mov
mov
dec
adc
push
add
sbb
popa
std
leave
and
orb
sub
mov
mov
adcb
popa
mov
add
xor
cmpsb
das
mov
rorl
dec
ljmp
and
ret
in
mov
and
out
test
jmp
xor
sbb
add
mov
adcb
and
add
jl
ljmp
cwtl
ret
add
mov
jge
mov
div
inc
or
xor
in
pop
pop
push
cwtl
inc
xor
aas
sbb
out
cmp
das
sbb
dec
cwtl
test
shr
mov
add
mov
icebp
adc
jge
add
fsubrs
int3
adc
and
mov
in
test
popa
sti
or
xor
jp
push
je
jecxz
rolb
cmp
pop
push
mov
sbb
pop
dec
popa
pop
pop
pop
sbbl
adc
imul
out
insl
or
and
push
ss
ret
jl
xor
aad
xor
add
mov
push
mov
add
push
and
push
mov
pop
je
pop
mov
mov
bound
jnp
mov
adc
iret
aaa
daa
jns
ret
xchg
icebp
dec
adc
repnz
call
outsl
push
inc
call
push
lds
pop
or
addr16
je
testb
movsl
rcrl
pop
scas
pop
inc
das
adc
inc
push
jne
push
fs
and
and
adc
dec
imull
xchg
xchg
addl
mov
xor
inc
iret
dec
pop
pop
push
jnp
or
fidivl
rcr
icebp
cmp
scas
adc
sti
andl
mov
xchg
add
or
fadds
xorb
sub
jbe
xor
js
cmp
lret
dec
jg
adc
push
mov
mov
lods
jle
jo
jne
push
xor
jo
cmp
xchg
jl
mov
data16
ja
jns
jne
loopne
xchg
adc
andb
notl
xor
inc
mov
xlat
inc
dec
mov
dec
pusha
xor
inc
and
sbb
jns
jnp
aam
pop
mov
repz
cltd
lret
jg
xchg
test
pop
adcl
cmp
xchg
xor
mul
and
xchg
or
es
fwait
int
mov
ja
outsb
mov
lock
inc
in
mov
pop
andl
rcr
mov
push
add
xchg
imul
adc
movsl
or
or
sti
cmp
shrl
ja
daa
xchg
cwtl
mov
test
mov
jmp
cmp
pusha
and
leave
or
xor
jle
jb
data16
stos
data16
and
mov
ss
mov
inc
mov
and
cmp
add
push
mulb
push
int
cmpsl
add
add
jno
in
mov
ds
sub
xor
jbe
jmp
movb
or
pop
into
push
lods
xor
mov
sbb
cmc
mov
push
ljmp
hlt
clc
add
push
xor
cltd
inc
lahf
rorl
push
dec
inc
or
push
mov
xor
jecxz
movsl
jns
adc
or
adc
sub
push
push
adc
mov
inc
and
gs
mov
inc
movsl
mov
and
fs
pop
cmp
pop
loopne
cwtl
in
pop
incb
leave
jne
cltd
mov
or
xchg
jo
lods
clc
mov
dec
repz
xor
jae
fs
sbbl
mov
in
jbe
fdivrl
adc
mov
call
enter
leave
dec
out
push
or
mov
loope
cmpsl
pop
repz
sub
fsubl
nop
inc
ja
pop
movb
push
mov
xchg
pop
mov
ret
mov
fldl
xchg
xlat
inc
mov
inc
cmp
mov
fdivs
test
sub
pop
test
push
jmp
iret
xor
sbb
fists
xor
mov
fisubrl
or
insl
insb
add
movsb
jl
popf
mov
pop
jle
pop
lds
imul
rcrb
test
add
jge
mov
rolb
hlt
out
xor
dec
jbe
ret
push
jb
adc
ljmp
mov
jmp
and
icebp
into
push
ss
subl
out
lods
hlt
inc
scas
lods
loop
adc
pop
push
adc
mov
aam
or
lret
shl
iret
ret
pop
and
icebp
cmp
xor
dec
push
test
push
mov
xchg
inc
mov
std
aad
movsl
dec
jnp
mov
dec
xchg
testb
test
pop
sub
jae
push
int
mov
icebp
mov
pop
jae
pop
and
mov
add
call
sub
push
fnsave
insb
adc
xchg
fisubl
xorl
and
cmp
sahf
idiv
push
jl
inc
hlt
sar
cmp
xlat
cli
mov
popf
or
in
loope
sti
dec
and
test
fidivl
push
add
sbb
scas
ret
cmp
xchg
cmp
push
inc
jp
lds
or
pop
add
and
scas
es
divb
push
sbb
scas
cmpsl
mov
and
fwait
add
pop
sarl
cmp
mov
mov
mov
cmp
and
es
hlt
push
fstps
adc
popf
push
push
dec
add
sbb
outsl
fldcw
jns
pop
dec
sti
and
mov
adc
sub
xorl
mov
jmp
outsl
mov
mov
and
mov
addb
adc
mov
cmpsl
pop
xchg
and
pop
mov
add
sub
das
std
mov
xor
stos
sub
cmpsl
out
insb
inc
je
cld
or
sub
mov
lea
nop
loop
add
insb
gs
test
jmp
mov
lods
pop
add
out
fs
dec
and
repnz
xor
daa
in
iret
jno
dec
shlb
pop
mov
out
les
scas
out
lds
in
mov
movsl
sbb
sbb
cmp
gs
sub
loopne
mov
popf
lds
jae
add
add
pushf
sub
or
insl
cwtl
pop
fmulp
insb
hlt
cmpsl
sub
push
xchg
in
xchg
mov
rcrb
rclb
xchg
movsl
into
jmp
out
jmp
jge
fcompl
loope
push
sub
push
jl
mov
lahf
pop
push
sarb
movsb
cmp
dec
pushl
or
fwait
outsb
xchg
mov
mov
xchg
or
sbb
pushl
xor
mov
hlt
imul
adc
xchg
xchg
mov
mov
inc
xorl
inc
mov
jo
pop
in
lret
mov
jne
lret
xchg
fidivrs
mov
push
pop
push
lcall
inc
mov
jae
repz
inc
sub
int3
sbb
xchg
subb
fisttps
xor
xchg
mov
outsb
dec
push
mov
xchg
stc
into
or
pop
cmp
aad
fucomi
mov
in
or
test
jo
jns
adc
adc
shll
cmp
enter
popa
xlat
inc
adc
shlb
test
xchg
cmp
sbb
dec
push
or
mov
bound
or
lahf
push
pop
test
imul
stos
pop
sbb
xor
dec
adc
inc
out
add
mov
outsb
xorl
jl
gs
dec
scas
dec
sbb
jns
inc
test
or
addl
mov
mov
jl
int
inc
lods
repnz
lret
xchg
push
inc
push
inc
adc
mov
cmpsb
insb
lret
outsb
jle
mov
push
mov
add
fstl
sbb
adc
sbb
jb
pop
mov
adc
adc
xchg
out
stos
adc
sti
les
mov
adcl
cmp
fstp
jno
adc
or
pop
sub
push
push
call
jl
cli
xor
outsb
std
xchg
lret
jg
js
sub
add
cmp
mov
mov
mov
mov
dec
imul
mov
ret
pop
xchg
and
mov
aad
mov
mov
mov
inc
movsb
pop
or
fmull
mov
jbe
push
mov
xchg
stc
push
mov
xor
fidivrs
xlat
cli
sbb
lcall
icebp
lds
out
jae
mov
insb
fwait
adc
pop
jae
adc
mov
jp
imul
insl
jbe
mov
ja
stos
adcl
in
lea
lcall
pop
orb
orb
jae
mov
mov
add
faddp
es
mov
inc
push
sub
in
dec
xchg
lds
stc
mov
mov
inc
loope
or
cwtl
push
lahf
ds
and
add
mov
and
sbb
roll
testb
int
jo
repnz
ret
rorb
ljmp
jecxz
or
inc
cltd
negb
dec
in
inc
pop
daa
dec
or
cmc
mov
sbb
bound
loope
inc
jo
shll
ja
in
cmp
add
and
jae
mov
pop
push
stc
jp
push
iret
mov
lret
or
jae
cltd
loop
add
loop
push
adc
fdivrs
sahf
jg
xor
sub
push
lock
fldenv
adc
movsb
mov
adc
leave
mov
or
adc
int
add
mov
sub
xchg
pop
push
push
cmpsl
dec
xor
jp
or
in
xor
jg
rorl
int
sbb
push
rclb
scas
out
sub
dec
pushf
ss
rcl
sbb
arpl
push
add
ficomps
pop
push
jbe
adc
or
scas
out
mov
in
push
push
cltd
or
in
add
mov
addr16
cmp
sbb
xacquire
or
and
inc
or
arpl
inc
fistps
shll
adc
xor
repnz
imul
outsb
adc
adc
mov
sub
push
xor
mov
das
mov
and
mov
sub
xor
aas
xor
inc
and
mov
sbb
mov
mov
cmp
mov
cmp
loope
int
xorl
out
mov
sub
cld
in
rolb
fisttpll
or
mov
ljmp
cs
jg
cs
scas
mov
mov
sbb
mov
repnz
ror
daa
ud2
dec
cltd
and
jo
xabort
jno
repz
test
popa
call
xlat
push
outsl
pop
push
pop
aad
add
hlt
loop
sbb
cmpb
xchg
push
mov
in
repz
movsl
mov
insb
push
and
out
pop
inc
ds
inc
repz
lret
inc
scas
sub
mov
jae
mov
insb
dec
repnz
inc
dec
jae
iret
sbb
jne
pop
fs
sbb
jo
cmp
push
nop
push
jge
xorl
and
lcall
xor
icebp
xor
or
adc
mov
sti
mov
mov
pop
push
mov
push
cmpsl
pop
jae
sahf
out
mov
js
jmp
inc
cmp
mov
addl
test
or
testl
jle
es
mov
dec
push
bound
push
mov
mov
or
mov
fstpt
mov
mov
cmpsl
add
inc
fcompl
sahf
or
bnd
inc
push
dec
jbe
push
push
xor
shll
jno
xor
pop
xchg
or
pushf
push
nop
outsl
xor
scas
repz
inc
testb
stc
scas
xor
or
pop
cmpsl
jle
sbb
lea
in
mov
sub
icebp
push
inc
sbb
xlat
into
pop
pop
ret
scas
sbbb
push
cmpb
icebp
jbe
or
shrb
and
in
es
jae
mov
mov
mov
jbe
cld
push
sbb
mov
ja
dec
dec
call
mov
mov
mov
jge
inc
jae
cwtl
jnp
or
sub
adc
adc
jb
fcompl
xchg
inc
stos
fidivl
js
enter
scas
adcb
jnp
jne
sub
lock
sub
in
iret
push
out
bound
mov
aam
loop
adc
cmpl
pop
mov
int3
inc
and
mov
push
mov
jns
mov
and
mov
xchg
add
xor
aaa
inc
mov
xchg
roll
lods
inc
test
sub
mov
lcall
or
and
outsl
arpl
aas
scas
xor
inc
loopne
and
fbstp
daa
and
movb
push
in
xor
in
test
cmp
sub
call
ljmp
stos
loope
adc
iret
imul
jmp
jp
push
imul
xchg
outsl
testl
mov
addb
and
jge
jge
mov
arpl
iret
aas
push
stos
cmpsb
jns
jg
sub
stos
mov
ret
inc
inc
mov
out
fs
push
mov
ffreep
pop
sub
jb
mov
or
or
xchg
sbb
dec
mov
outsl
xchg
addr16
pop
mov
and
jbe
push
mov
or
mov
ret
pop
test
jecxz
daa
sub
mov
bnd
inc
lcall
or
jnp
jb
ja
movzwl
and
push
push
sahf
add
xor
in
cmpsb
ret
sbb
pop
mov
jns
jl
mov
push
push
fs
xchg
rclb
cmp
or
pop
pop
or
pop
jle
and
mov
cli
xor
cmc
dec
rorb
jo
cmp
jnp
jge
xor
mov
pop
add
in
sti
fwait
dec
cmpsl
ja
enter
adc
inc
outsl
mov
xchg
cld
test
pop
loopne
mov
or
sub
out
aas
imul
inc
imul
xchg
imul
cmp
leave
bound
sbb
cmpsb
add
inc
mov
pop
xchg
jmp
cltd
mov
enter
out
das
adc
por
add
dec
lahf
lahf
dec
and
jl
and
add
pop
xchg
shlb
or
jb
cmp
pop
lcall
out
lahf
loopne
pop
sti
lods
dec
mov
sbb
fwait
mov
dec
sbb
loopne
mov
xchg
clc
ja
call
nop
sbb
adc
mov
jae
stos
adc
push
int3
aad
xchg
mov
xor
cli
shlb
dec
mov
cmpsl
add
xchg
test
jmp
sbb
inc
dec
dec
insb
xlat
cmp
pop
aas
pusha
cli
insb
xchg
push
sub
mov
push
xor
jecxz
movsb
stos
add
test
mov
mov
jl
push
mov
insb
jbe
aam
dec
xchg
das
icebp
ss
inc
adc
jo,pn
call
js
adc
popa
or
xor
mov
add
push
or
rorb
and
lahf
shll
pop
int
pop
test
shlb
lahf
mov
jmp
adc
in
mov
sub
mov
jno
push
sbb
push
adcl
adc
es
push
cmp
pop
xor
mov
aas
pop
shlb
andl
fistps
push
out
arpl
rorb
daa
shll
jae
insl
rorb
mov
jne
ret
xor
push
jle
sbb
cli
add
inc
inc
insb
frstor
sub
out
repz
add
dec
pusha
notb
addr16
mov
movsl
in
imul
jae
push
jae
jns
add
jo
movsl
pop
pop
fwait
icebp
addr16
into
scas
bndstx
sbb
test
pop
push
fldenv
shlb
sbb
mov
bound
int3
xchg
leave
flds
enter
adc
daa
nop
lods
int
es
push
outsb
mov
sbb
or
shlb
add
in
mov
add
xchg
nop
add
and
and
repnz
xchg
subl
mov
repnz
pusha
mov
aaa
sub
push
out
pushf
jno
mov
pop
movsl
xchg
sbb
movsb
inc
daa
pop
sub
popa
jo
lcall
adc
pushl
mov
filds
push
dec
repnz
dec
addr16
popl
add
rorb
xchg
inc
mov
adc
sahf
repz
test
xchg
pop
insb
mov
test
xchg
pop
aaa
xor
nop
negb
xor
ss
jne
jb
pop
jmp
movsb
pushf
sbb
cmc
jae
mov
ja
bound
dec
cmp
cmpb
sbb
cmp
sub
jns
mov
jns
pop
jl
popa
aam
add
pop
sahf
xchg
es
das
inc
loope
cmp
push
leave
stos
dec
sub
gs
mov
cmp
outsl
out
mov
pop
xchg
fcoml
cmp
dec
push
shr
insl
or
fistpll
cmp
icebp
adc
gs
std
fdivrs
mov
mov
or
mov
je
sarb
or
mov
scas
push
gs
push
mov
push
hlt
sbb
add
add
mov
add
filds
and
lret
ds
xor
testl
mov
lcall
icebp
push
dec
pusha
or
rcll
xor
and
inc
ficoms
inc
roll
aam
sbb
cmpsb
push
je
mov
jl
xor
outsl
adc
adc
cmp
dec
pop
testl
inc
xor
push
je
xor
adc
mov
add
pusha
sbb
xor
fbstp
jmp
inc
push
or
pop
inc
push
pushf
add
jmp
push
lock
ljmp
jb
adc
sbbb
push
nop
or
fldcw
mov
cmp
cmpsl
cmpsb
clc
test
mov
push
int3
add
scas
mov
push
jl
into
ds
stc
mov
jge
push
mov
ficoml
shll
xor
fs
in
dec
sub
or
imul
ret
lods
rclb
sub
fdivrl
jnp
push
sahf
or
jae
jecxz
jl
xchg
xor
push
cmp
cmp
sub
cmpsl
iret
inc
pushf
mov
adc
pop
or
imul
icebp
notb
sbb
test
jmp
fs
into
push
lcall
fidivrl
ret
add
aad
xchg
push
loope
or
mov
cmp
dec
imul
lea
mov
icebp
push
mov
fisttps
popa
ds
and
sub
fxch
dec
insb
pusha
test
cmp
imul
je
mov
insb
and
or
in
push
inc
or
xchg
adc
sub
fcmovnu
mov
inc
push
cwtl
inc
ja
insl
mov
jae
adc
popa
cmpsb
jb
jb
jle
cmpsl
cmp
inc
aas
sahf
add
outsl
stos
outsl
sub
jnp
lcall
sidtl
push
jg
jmp
add
roll
pop
mov
mov
or
aaa
jns
sub
pop
popa
push
jmp
mov
hlt
jae
sbb
fdivr
add
outsb
push
fmull
mov
adc
xchg
pop
out
cmp
daa
push
push
jp
and
add
call
cld
push
jmp
xor
jle
xor
out
add
fidivrs
dec
stos
test
pop
or
xchg
mov
lods
or
inc
jnp
loope
gs
and
pop
scas
jno
cmp
jo
shlb
inc
fcmovb
sub
hlt
test
lahf
scas
loop
fcompl
sbb
mov
ljmp
push
popa
xorb
push
jle
sub
lea
hlt
pop
jns
jmp
lret
mov
jns
sbb
mov
pop
ret
adc
jle
lods
adc
or
stos
cmpsl
xor
adc
lods
bound
lods
sbb
cmpsb
scas
call
mov
xor
js
cmp
mov
cmp
aad
mov
aaa
sbb
outsb
jl
aad
call
inc
ret
out
cmp
push
xor
in
xor
mov
test
push
imul
push
xor
cmp
inc
stc
or
mov
je
int3
push
dec
xchg
ficomps
jp
push
arpl
out
or
in
push
icebp
adc
xor
in
jne
out
and
mov
loopne
movsl
out
add
test
pop
cmp
push
inc
movsl
testb
iret
push
mov
sbb
pop
stos
mov
inc
test
mov
push
adc
jle
in
popa
jp
iret
push
loopne
add
cmp
mov
xchg
fdivl
iret
push
push
jno
mov
and
xchg
dec
and
push
out
pop
xchg
call
ja
adc
xchg
push
cmc
out
add
test
iret
lds
push
addr16
push
xor
xchg
adc
outsl
xchg
xchg
insb
jge
inc
jae
mov
clc
out
xchg
push
jg
and
out
or
daa
jge
int3
das
or
lret
lcall
cltd
cld
pop
daa
cld
or
cld
mov
add
xchg
push
test
into
cmpsl
pop
mov
fidivrs
hlt
adc
mov
push
lret
xor
jmp
outsl
out
lods
jo
xor
stc
lods
jle
fsubr
test
mov
dec
stc
fucomi
push
cltd
sub
add
lock
ljmp
cmpsl
mov
and
jb
and
jae
lods
mov
hlt
pop
jg
fwait
push
rcrl
xchg
idivb
and
imul
pop
cmp
lahf
and
popa
and
inc
fisubrs
sbb
adc
addr16
push
pop
in
add
sub
jge
jecxz
in
cmpsb
jnp
sbb
ss
mov
aad
sub
push
xchg
push
adc
adc
mov
or
movsb
pop
fstpt
addr16
lcall
cli
ds
sub
inc
je
xchg
sti
xchg
scas
sub
push
push
add
movsb
sbb
aad
movsb
push
mov
jmp
insb
adc
mov
decl
in
jno
and
dec
movsb
jge
xor
jb
sbb
fdivl
test
sti
push
test
pop
mov
mov
mov
ret
dec
cmp
jne
jne
scas
jno
imul
loope
jb
inc
out
dec
sub
loop
inc
outsl
movl
mov
arpl
push
popa
mov
dec
mov
cmp
push
loopne
jge
pop
dec
ss
lods
add
push
lods
jno
push
mov
mov
dec
adc
mov
push
dec
in
sarb
pop
cs
mov
mov
ds
hlt
mov
lahf
inc
cmp
push
mov
les
scas
add
mov
dec
cmpsl
aaa
fwait
mov
idivb
inc
insl
xorl
out
sbb
aam
jecxz
pop
fstpt
push
sbb
pop
sbb
pop
mov
je
int3
bound
xchg
push
lret
cmp
addl
jnp
push
dec
sbb
loope
scas
adc
jg
pop
pop
add
jno
nop
xor
cmp
das
sbb
in
rclb
jbe
insb
or
xor
cmpsl
loope
movsb
xchg
xchg
xchg
and
adc
pop
lret
movsl
sarl
pop
push
dec
inc
add
xchg
shr
repz
filds
sti
popf
loopne
shrb
imull
jge
mov
aas
rolb
add
push
sub
mov
and
sbb
mov
push
adc
xorb
fisttpll
int
movsb
in
push
and
ret
jp
movsb
cmp
or
adc
iret
cmovns
mov
inc
out
push
data16
push
dec
inc
cmp
mov
mov
xchg
jae
mov
mov
cmpsb
ja
mov
cs
xchg
adc
pop
push
jb
mov
sbb
adc
stc
mov
pop
and
jno
sbb
stos
cmc
lahf
pop
mov
xor
cmp
pop
imul
sbb
jp
stc
push
test
fimuls
cs
popa
leave
mov
ljmp
das
pop
pop
and
rcrb
repz
mov
fidivrs
shlb
lods
and
mov
iret
jge
in
mov
lds
inc
pop
cmp
pop
pop
sti
xchg
fcomip
pop
outsl
xor
ret
mov
stos
jns
cwtl
push
and
gs
sub
pusha
outsb
insl
cmp
jl
popf
jl
sub
mov
sbb
arpl
dec
fiadds
xchg
jbe
jmp
lock
aaa
push
jb
icebp
mov
notb
jne
cmp
lds
sbb
pop
scas
xor
ret
push
pop
in
cmp
lds
add
in
push
mov
xchg
in
cwtl
xchg
cmpsl
jo
aaa
cltd
pushf
out
repz
ja
scas
dec
push
aam
push
mov
jl
jns
bound
test
add
push
das
es
arpl
in
repnz
jmp
inc
sub
mov
imul
dec
dec
aam
add
and
push
adc
in
ds
push
jp
arpl
fldenv
insl
ss
or
pop
mov
loope
push
pop
push
lret
insl
lods
jae
jge
cmp
mov
icebp
xchg
mov
and
jb
sbb
aaa
repz
movsl
inc
mov
cmpsl
addb
ljmp
pop
aas
mov
jmp
or
lcall
push
fdiv
xor
lahf
mov
push
dec
push
ja
dec
andb
fiaddl
sub
cmpsl
push
in
rolb
adc
stc
arpl
addr16
cmpsl
lds
mov
repnz
inc
add
outsl
pmulhuw
das
scas
dec
mov
xor
mov
mov
outsb
push
xchg
dec
sub
fldcw
hlt
inc
jp
adc
orb
push
inc
pop
sub
or
ja
cmp
and
xor
inc
push
mov
add
xchg
lahf
pusha
mov
or
jmp
sbbb
pop
xor
mov
adc
ret
popa
insb
ret
repnz
jecxz
inc
ret
inc
dec
or
and
arpl
out
popa
ss
insl
ljmp
push
loopne
imul
jns
inc
xchg
push
sarb
addr16
dec
sbb
psllw
jne
push
add
fistps
sub
clc
enter
movsl
cmpb
cmp
xchg
cmp
pop
stos
int
outsb
dec
stos
test
mov
add
jo
add
mov
cmpsl
shll
scas
pop
add
stos
pop
insb
xchg
push
ficomps
cmpsl
dec
xchg
jge
loop
hlt
cmpl
adc
cs
cld
push
pusha
test
cmpsb
cmp
fistl
aaa
xor
inc
lret
pop
push
pop
adc
xchg
cmp
subb
add
scas
pop
jmp
movsb
xchg
mov
stos
pop
ja
jno
jns
outsb
popa
js
dec
xchg
jle
das
sbb
pop
les
sahf
inc
or
push
test
outsl
jae
or
cmp
xlat
into
dec
pop
push
xor
xchg
lahf
xchg
push
inc
dec
sbb
xchg
mov
popf
add
sub
fsubl
stc
add
push
dec
mov
aaa
mov
rorb
ja
lcall
add
dec
cltd
xor
jae
in
cmp
fmul
sbb
xchg
mov
mov
push
scas
mov
xchg
arpl
mov
adc
sub
cmp
hlt
sbb
lock
les
xchg
repz
test
or
mov
mov
in
sbb
dec
insb
push
jnp
mov
in
into
in
xchg
xor
dec
leave
fimull
xor
outsb
stc
jbe
lds
fstpl
icebp
xchg
je
ja
jns
push
and
movsb
xchg
inc
int
or
pop
jb
pop
pop
test
test
clc
pushfw
push
add
movl
or
cmpsb
or
cmpsb
or
scas
or
and
adc
dec
or
sbb
js
cwtl
mov
lock
pop
mov
ljmp
xor
pop
cmp
arpl
bound
add
imul
jge
xchg
jp
std
lock
lods
cmc
mov
rol
xor
sbb
cmpsl
hlt
shrl
cli
jne
mov
rorb
cmp
dec
mov
in
repnz
dec
add
daa
pop
adc
pop
jmp
inc
mov
in
sbb
push
jp
je
mov
cwtl
je
cmpsb
xor
cmpsb
add
mov
jno
sub
imul
sub
gs
sbb
inc
sbb
mov
je
aaa
push
nop
inc
bound
mov
cmpsl
mov
imul
mov
dec
cmp
mov
scas
add
addr16
vmovshdup
pop
xor
inc
in
xchg
sbb
xor
sub
sub
mov
testb
adc
push
xor
loopne
cli
and
jp
mov
inc
push
es
pop
out
dec
inc
arpl
maskmovq
divl
mov
inc
mov
pop
outsl
pop
xor
sub
pop
xchg
sbbb
je
adc
cmp
adc
fs
mov
mov
js
repnz
imul
jecxz
mov
push
push
ljmp
fs
daa
cmp
cmp
inc
sti
mov
lds
testb
inc
jb
cmp
psrlq
add
adc
xchg
pushf
pushl
pop
and
andl
sbb
jbe
repnz
sub
dec
adc
bound
sbb
push
lahf
sbb
arpl
outsb
mov
or
sahf
push
leave
sbb
or
xlat
and
cld
add
jp
pop
mov
or
ret
cmp
adc
xor
sub
adc
into
repz
stos
adc
dec
cmp
mov
insb
push
scas
hlt
mov
fidivrs
pop
cmp
adc
add
filds
jg
lock
xorl
add
popf
sti
cmpsb
inc
pushf
push
out
jnp
sub
outsl
ds
pop
dec
mov
sbb
fdivs
fwait
pop
xorl
mov
and
sub
cld
mov
mov
adc
add
xchg
inc
and
add
mov
mov
adc
jne
mov
add
mov
ds
push
cmp
inc
pop
sub
nop
insb
mov
pop
sub
cmc
test
dec
leave
jb
fildll
clc
sub
cmc
dec
cwtl
ljmp
mov
push
sub
js
ds
pop
int
push
mov
lea
out
cmp
sbbl
dec
push
push
dec
shrb
inc
xor
in
mov
iret
push
lcall
ljmp
mov
outsl
pop
pop
sub
dec
add
xor
popa
push
mov
scas
mov
pop
push
sbb
imul
mov
shrl
xor
js
and
movb
jecxz
pushf
xor
inc
lret
inc
xchg
jno
jle
push
push
and
mov
sub
repz
xor
repz
fidivs
add
mov
orl
outsl
inc
inc
mov
xchg
cmp
adc
xor
pop
mull
movsb
cwtl
std
jg
jecxz
jo
mov
loope
push
incl
and
dec
in
mov
push
fimuls
push
inc
aas
mov
lods
push
aam
into
xchg
popa
pop
out
adc
jge
or
sub
out
jno
jge
bound
mov
gs
sub
xchg
xchg
push
add
fcompl
jb
dec
out
mov
lods
jo
loope
xlat
inc
pop
adc
lds
fdiv
mov
scas
dec
jge
shll
es
push
daa
adcl
jle
shll
bnd
pop
enter
lds
or
pop
fcompl
jns
inc
lock
in
jae
fucomip
jne
and
scas
aam
jge
lcall
popa
test
in
pop
outsl
cli
arpl
imul
lea
in
ret
bound
ss
xor
pop
xor
ficompl
inc
jl
pusha
push
imul
adc
mov
out
enter
pop
in
ss
fs
xor
or
mov
inc
and
aaa
and
push
dec
inc
call
cmp
sbb
push
cmpsb
shr
sbb
jmp
outsl
jl
sub
pop
xchg
sub
sti
push
and
push
xchg
imul
and
cmpsl
sti
fnstsw
imul
jge
xlat
xor
shlb
push
xor
dec
jg
out
inc
je
add
subb
out
cmp
movl
mov
mov
jge
lods
outsb
add
jp
and
or
insl
hlt
cli
xchg
cld
sbb
sbb
aas
in
add
jbe
inc
test
xor
int3
ret
popf
rclb
pop
xor
add
mov
xchg
or
je
cld
daa
mov
arpl
sahf
sbb
xor
rcrb
cmp
adc
sub
cli
ss
xlat
push
inc
inc
sub
faddp
imulb
or
imul
out
popa
sbb
ds
ss
dec
jo
arpl
cmpsl
mov
or
icebp
inc
and
sub
nop
aad
pop
jns
out
cs
in
mov
dec
and
outsl
sbb
popa
js
andl
pop
dec
adc
leave
dec
cmpsb
add
mov
ja
stos
addr16
add
enter
shl
cwtl
jle
imul
mov
pop
arpl
movsb
adc
lcall
jb
xor
fstl
mov
mov
adc
fdivrl
mov
mov
xor
cwtl
adc
jo
repnz
mov
mov
inc
sub
add
into
or
dec
sbb
jbe
stos
imul
aad
out
push
pusha
jp
sbb
stos
xchg
cmp
lea
test
bound
arpl
xchg
sbb
mov
mov
add
push
imul
push
lahf
or
fwait
jp
jne
mov
pop
sahf
shrb
js
ret
andb
arpl
push
imul
sub
loop
ret
in
cli
mov
jb
mov
jb
xchg
lock
adc
or
js
mov
stos
adc
sbb
ss
xchg
add
mov
inc
out
mov
mov
inc
sar
movsb
bnd
pop
enter
sbb
imul
dec
fdivp
out
push
fmull
shrb
icebp
push
leave
push
packssdw
jae
mov
and
scas
push
rcrb
in
mov
and
daa
and
add
cli
inc
popa
pop
pop
shlb
jge
insb
lds
rorb
cli
enter
repz
shll
rcll
daa
mov
jg
cmp
cmp
fnstsw
and
inc
mov
adc
cmp
repz
pop
jne
and
js
gs
iret
sub
inc
push
push
push
cmp
and
add
fwait
xor
pop
cmp
cs
out
ss
stos
fcomi
add
daa
push
cmc
outsl
clc
mov
push
ret
and
lods
xchg
add
xchg
and
adc
cmp
sub
lods
sub
sbb
fimuls
pop
scas
push
mov
or
outsb
and
lret
jmp
inc
hlt
test
jp
push
pushf
inc
mov
cmpsb
or
dec
dec
sbb
loop
push
cmp
adc
shll
rcrl
call
imul
fiaddl
xor
jae
or
dec
jno
int
cmp
add
xchg
in
or
mov
jbe
mov
or
scas
mov
popa
and
cmpsb
cmp
sub
fisttpl
outsb
sbb
insb
shrl
inc
lahf
ffreep
pop
out
or
daa
sbb
loop
sbb
and
push
jo
jno
mulb
or
icebp
ljmp
sarl
mov
mov
btr
xor
sbbl
adc
out
add
sbb
mov
outsl
cmp
dec
jg
xor
jb
pop
fucomi
sbb
frndint
sbb
out
lds
mov
or
rol
int
mov
mov
sbb
push
cs
call
fldenv
or
cwtl
scas
mov
or
and
or
and
xor
sub
roll
in
or
cld
insb
pop
stos
mov
and
xchg
inc
jne
jno
jnp
push
pop
inc
dec
push
aaa
add
shrl
call
push
sub
adc
mov
xor
clc
jno
loopne
cmc
and
or
xchg
dec
dec
mov
mov
jae
test
cmpsl
stc
out
adc
sahf
in
jl
add
int
mov
ja
outsb
pop
sbb
mov
or
sbb
jmp
test
pop
aad
xchg
inc
mov
outsb
xchg
mov
insb
loope
and
pusha
mov
mov
fiaddl
cmpsl
out
adc
movsl
jge
cmpsl
mov
ja
outsb
jno
stos
frndint
leave
inc
lcall
adc
xorb
je
mov
fcomps
add
dec
push
mov
jmp
test
ret
sbb
mov
xor
clc
jge
mov
dec
loop
add
and
inc
cmp
je
lods
dec
outsb
out
push
fnstenv
add
jge
xor
jne
ds
cmp
out
cld
mov
adc
aas
sub
dec
rol
pop
fisubs
loopne
lock
out
fmuls
rcrl
lds
jo
and
push
xchg
inc
out
pop
mov
sti
mov
inc
aaa
mov
sub
mov
leave
mov
or
lcall
and
dec
jb
xlat
xchg
jecxz
daa
xchg
xchg
and
cmp
xchg
adc
push
std
xor
outsb
testb
ds
jns
shll
xchg
mov
and
mov
and
loope
cmp
rcrl
setp
xor
dec
xchg
pusha
xchg
jmp
addl
divb
pop
jecxz
mov
xchg
or
pop
mov
push
clc
mov
insb
adc
in
test
pop
and
fs
imul
das
add
adc
mov
jmp
out
mov
sbb
mov
pop
lret
xchg
pop
pavgw
inc
outsl
jecxz
cmp
popa
sub
sub
jecxz
xchg
fisttpll
sub
jmp
aad
icebp
in
loopne
stos
mov
ss
mov
mov
out
imul
jnp
add
mov
pop
add
repnz
xchg
xor
aam
add
daa
stos
cmp
daa
dec
insb
ljmp
leave
or
rcll
and
jne
scas
out
cwtl
inc
stc
sbb
and
out
fnsave
loope
pop
ja
xor
out
jo
cli
data16
enter
xor
or
xor
gs
ds
mov
repz
jae
leave
inc
sbb
fiadds
iret
psubw
cmp
sub
lgs
add
add
test
rcrl
aas
ds
call
adc
xchg
cmp
orb
int
mov
or
ficompl
insl
mov
movsl
inc
dec
out
aaa
pop
out
pop
popf
int
inc
jle
insb
jbe
inc
add
popa
repnz
in
jns
in
adc
orl
xor
enter
sub
cmp
arpl
ret
xchg
int3
inc
fstl
or
cmp
stos
out
dec
icebp
outsl
lret
push
jae
frstor
fildl
test
xchg
xor
push
ljmp
jbe
add
imul
jae
cmp
mov
leave
test
lds
xchg
jp
mov
repnz
test
or
dec
inc
loopne
jl
sbb
stos
in
movsb
int3
xor
push
adc
pop
xor
bnd
inc
add
scas
inc
lock
push
jecxz
icebp
cmpsb
dec
or
inc
popf
inc
push
sub
mov
and
push
push
sti
inc
mov
push
mov
sbb
fisttpll
out
inc
cs
xor
mov
aam
xor
mov
add
lcall
lea
into
add
ja
jae
push
movsl
aam
addr16
add
icebp
jo
cmp
dec
push
adc
test
mov
sbb
loop
jg
pop
push
xor
scas
xchg
std
cli
dec
sbb
mov
aas
js
mov
rolb
xchg
mov
dec
test
mov
add
fisttps
scas
jp
push
daa
inc
mov
or
jp
jo
push
pop
pop
jg
add
nop
cmc
xor
scas
xor
inc
xchg
shll
mov
and
or
in
sti
mov
pop
xchg
add
xchg
loop
hlt
nop
ljmp
fists
std
or
mov
stos
xor
divl
inc
push
mov
adcb
ja
or
cwtl
pushf
roll
sub
dec
test
stos
movsb
dec
data16
mov
arpl
or
and
sar
popa
dec
jnp
inc
sbbl
dec
mov
fmull
adc
xor
test
add
inc
add
xchg
push
push
aaa
insb
cltd
leave
outsb
or
inc
fs
aas
pop
push
sub
das
cmpsl
lds
sub
xlat
cmp
fs
cmp
or
pushf
ret
sub
mov
mov
mov
loopne
cmpsb
sbb
inc
xlat
icebp
in
icebp
in
sub
jle
mov
adc
fiaddl
insl
fxam
je
dec
or
adc
xor
sbbb
pop
ret
arpl
xchg
pop
pop
pop
pop
popa
mov
mov
pop
sbb
cmp
insl
into
pop
je
add
inc
jne
js
in
inc
clc
sti
or
xlat
inc
aaa
pop
sti
adc
add
test
inc
fwait
add
adc
pop
jge
das
inc
dec
nop
xor
push
cwtl
sub
mov
pushf
cs
dec
aaa
imul
cs
push
repz
push
sub
mov
nop
add
pop
ss
add
bound
inc
stos
ljmp
ja
xchg
pop
bound
mov
mov
pop
out
or
stc
mov
dec
push
loopne
mov
mov
insb
stc
mov
mov
movsl
add
mov
negl
pop
fidivs
adc
xchg
dec
xchg
add
push
mov
lods
add
aaa
or
cmpsb
and
xchg
pop
xchg
mov
cmp
mov
push
xor
and
mov
pop
xchg
xor
fcomi
fidivs
mov
or
or
sti
lcall
xchg
sbb
out
sub
pop
lock
add
jae
jae
sub
and
addr16
mov
add
mov
xchg
xchg
cld
dec
adc
in
adc
sbb
sbb
or
xor
xor
sbb
int3
push
or
push
hlt
pop
cli
sub
jp
sarl
dec
dec
add
fldenv
cmp
mov
ja
cmpsl
cmp
scas
lods
inc
mov
xchg
push
jg
and
sar
mov
cmp
jb
mov
jno
sti
fists
std
popf
sbb
mov
dec
aad
nop
mov
rcr
out
push
dec
inc
lret
cld
aas
mov
dec
fdivs
ja
xor
cwtl
adc
push
shl
dec
lock
fnstsw
int3
push
insb
xchg
sub
insl
cmp
mov
cmp
or
or
jp
push
push
cmp
in
push
jg
std
and
mov
lds
fmuls
or
ds
inc
cmp
int3
cmp
pop
inc
enter
das
pop
xor
sbb
addl
imul
xlat
adc
test
jo
pop
cmp
call
imulb
nop
add
mov
stc
negl
fsts
std
mov
sub
mov
aam
std
ja
ficompl
xor
push
mov
adcb
out
pop
and
dec
loop
or
repz
or
pop
push
mov
js
cwtl
sub
add
repz
shr
fsubrl
and
push
inc
cmp
movsb
lods
rdmsr
jecxz
out
add
jmp
and
pop
jge
rep
addr16
cmp
outsb
int3
and
mov
mov
jns
mov
xchg
test
push
outsb
dec
push
sahf
jno
xlat
sbb
adc
mov
add
push
in
test
fsubs
push
stos
insb
pop
xchg
xor
cmp
fimull
cltd
ss
lahf
and
adc
xchg
cmp
adc
icebp
loopne
xchg
inc
ret
xor
jle
test
sbb
adc
negl
pop
mov
add
sub
mov
adc
xorl
push
inc
and
pusha
pushf
cmp
xchg
aas
aas
dec
enter
inc
sub
mov
lahf
outsb
inc
mov
xor
in
mov
jo
xlat
das
jno
aas
and
dec
divb
or
inc
push
out
ror
pushf
pop
push
test
inc
push
aam
add
mov
cltd
mov
je
mov
inc
test
jno
push
cmp
das
ljmp
shlb
inc
sbb
xor
add
mov
sarl
lds
jl
mov
mov
xchg
mov
sub
xchg
lahf
cmp
ret
lret
divl
and
lcall
cmp
dec
cmpsb
in
and
icebp
int3
test
insb
cmpsl
xchg
mov
or
mov
aaa
enter
daa
and
pop
outsl
sti
pop
es
cmc
fiaddl
mulb
sub
add
inc
imul
add
jnp
ja
in
repnz
jb
cltd
or
arpl
xor
clc
je
fimuls
es
push
inc
fisttps
mov
mov
gs
mov
cmp
inc
mov
sbb
je
push
je
dec
pushf
sub
sbb
in
imul
mov
scas
mov
push
push
add
sub
push
not
ljmp
mov
jnp
aad
test
imul
pop
stc
imull
cltd
jp
cmpsl
mov
jle
std
or
idiv
in
shlb
cmp
pop
xor
push
push
insb
jno
cmpsl
sub
and
xchg
movl
xchg
and
cmp
push
xor
pop
pop
rolb
inc
les
jmp
mov
movsl
dec
mov
roll
sub
mov
xchg
std
mov
jae
inc
pop
dec
pop
aam
sbb
lea
push
fistps
repnz
xor
out
gs
mov
add
adc
test
cmp
mov
xlat
jb
mov
or
and
scas
jecxz
lahf
out
rorl
jmp
shlb
cmc
loop
mov
rcll
jno
imul
test
dec
test
pop
dec
ret
and
adc
cmp
pop
and
imul
sbb
ffreep
aas
and
mov
stos
adc
mov
rorl
sub
add
mov
in
mov
pop
cli
fiadds
sti
and
sbb
mov
push
mov
xchg
pop
jo
xlat
add
shlb
mov
push
push
or
inc
or
cmp
mov
mov
fdivrp
dec
adc
mov
rorl
sub
inc
pop
push
test
push
shlb
test
les
scas
sub
add
addr16
sbb
push
xchg
lock
push
cmpsb
xchg
jns
subl
cmp
sub
jns
and
mov
dec
or
clc
adc
pop
push
cwtl
pop
test
call
adc
add
inc
sub
pop
stos
jmp
mov
fstp
dec
sub
dec
outsb
out
mov
bound
outsb
test
notl
xor
sub
pop
push
adc
stc
pop
lods
mov
adc
cltd
dec
notl
das
dec
mov
mov
test
jnp
xchg
movsb
scas
lea
and
lcall
xor
dec
in
fwait
inc
pop
mov
dec
xchg
pop
scas
inc
adc
int3
dec
divb
notb
mov
imul
pop
mov
sbb
jno
add
lret
and
or
fsts
popl
insb
ljmp
inc
mov
imul
mov
imul
adc
push
mov
push
into
cltd
pop
in
push
inc
jge
pop
cmp
lock
add
add
mov
xor
xor
xchg
aas
mov
or
add
stos
ss
ficoms
sub
jg
inc
lods
test
push
call
add
mov
scas
sbb
loope
xor
inc
xor
push
add
adc
xchg
jbe
cmp
dec
addl
iret
mov
imul
jnp,pt
sub
sahf
sti
jns
jno
insb
mov
sti
aas
in
mov
inc
in
jmp
jmp
in
js
mov
and
in
and
inc
lahf
or
fisubs
mov
sbb
xor
mov
dec
pusha
xchg
push
pop
xorb
popf
dec
and
scas
ljmp
add
push
lock
sub
pavgw
cmp
dec
mov
inc
xchg
decl
sbbb
jge
test
int3
call
cmpsl
out
xor
mov
call
adc
dec
stc
ja
mov
in
jp
mov
add
sub
or
adc
dec
fs
add
mov
xlat
js
rol
fistps
icebp
cmp
mov
pop
mov
sub
mov
jg
stos
das
and
jp
popa
mov
push
pop
or
movsl
repnz
pop
imul
xor
pop
inc
mov
push
movsb
rcrb
or
sti
xor
les
cltd
or
pop
lcall
cwtl
lahf
or
pop
push
cmp
lahf
mov
mov
xor
pop
mov
mov
mov
add
mov
movsb
out
sub
call
sbbl
xchg
sar
fstpt
std
repz
jecxz
dec
scas
sahf
cmp
add
mov
out
xor
or
or
stos
xchg
les
pop
sub
sub
mov
std
xor
movsl
js
and
mov
subb
lcall
cmpsb
mov
dec
int3
cmpsl
or
inc
pop
test
or
push
icebp
les
push
xchg
addr16
mov
fldl
sbb
rol
mov
lods
inc
inc
and
add
mov
or
cmp
test
out
jns
int3
addr16
cli
xchg
push
pop
enter
mov
dec
sarb
mov
shl
or
mov
dec
cs
pop
and
xor
push
imull
inc
fidivs
mov
xchg
mov
scas
push
cmp
aam
add
mov
mov
loopne
add
hlt
imul
mov
dec
cmp
test
adc
es
jno
test
imul
cmp
push
aaa
inc
mov
cmpsb
sub
icebp
out
mov
jo
push
jae
popf
pop
aad
xor
repnz
ljmp
jecxz
push
test
addr16
popa
test
lea
dec
arpl
pop
mov
mov
loop
lock
xchg
arpl
imul
das
movsb
jge
mov
or
add
jp
test
xchg
pop
pop
ds
repz
xor
pop
ljmp
shll
xchg
sbb
jg
cmc
repz
sti
push
or
add
leave
imul
push
outsl
mov
dec
mov
loope
or
icebp
mov
sahf
or
jl
dec
cmp
or
dec
mov
loop
imul
lods
inc
lret
leave
adc
mov
xor
mov
fistps
icebp
add
mov
sbb
dec
inc
xor
inc
and
cmp
jmp
or
sub
sub
mov
inc
sbb
adc
inc
sti
jg
jl
movsb
cmp
mov
push
cld
fwait
inc
jae
or
xor
icebp
dec
cltd
dec
push
jecxz
sub
lret
sahf
sbb
add
ja
insl
lret
fs
imul
or
xchg
sbb
cmp
jmp
mov
sub
mov
imul
sub
mov
inc
inc
jge
repz
jns
lcall
dec
jecxz
icebp
jg
inc
cmpsl
mov
rol
jge
es
aam
outsb
mov
cmp
and
mov
mov
gs
lea
clc
push
mov
mov
add
push
mov
rorb
dec
inc
dec
imulb
push
push
movsl
pop
xlat
jbe
pop
into
cltd
pop
jg
fwait
and
pop
popa
jmp
xchg
mov
test
sti
sbb
sbb
jnp
and
leave
cld
mov
pop
push
mov
test
add
jg
into
ret
push
pop
jo
enter
xchg
andl
or
clc
jns
add
add
push
in
sbb
lret
inc
pop
enter
lods
jae
sbb
lret
inc
xchg
mov
push
inc
xorl
ds
test
push
dec
insb
push
fwait
jmp
call
inc
xchg
sub
push
in
inc
push
pop
shrl
inc
inc
add
nop
push
jge
add
outsl
arpl
loope
sbb
and
sub
pushf
jmp
enter
outsb
xor
out
lret
and
outsb
repz
mov
jo
shrb
popw
aad
inc
inc
idiv
test
mov
das
popa
js
add
aad
bound
cli
dec
sub
fwait
dec
jbe
les
dec
jp
loope
pop
lret
cmpb
add
mov
ljmp
pop
scas
outsb
idiv
and
hlt
mov
sub
xor
sub
and
movsl
inc
push
push
nop
add
fildll
mov
cmpsl
fisubrl
xchg
cmp
or
sbb
stc
lret
cmp
mov
pop
adc
jno
add
inc
stos
adc
mov
dec
dec
dec
mov
jae
addr16
cmp
mov
xor
push
dec
arpl
mov
insb
jb
daa
mov
mov
inc
dec
test
push
jnp
mov
or
xor
sub
cmpsb
pop
add
mov
in
jg
fwait
insl
int3
clc
inc
lea
int3
jae
dec
xor
push
in
dec
xchg
adc
mov
outsl
and
and
jle
es
sbb
ficomps
ljmp
xchg
inc
out
je
nop
cwtl
push
or
or
data16
and
movsb
inc
and
inc
mov
mov
fists
roll
rol
leave
test
cwtl
loopne
stos
sbb
or
pop
xor
mov
loope
mov
add
lds
and
xor
pop
dec
and
mov
das
mov
sahf
mov
mov
insb
cltd
fadd
lods
sti
mov
int3
jae
shlb
cmovle
mov
mov
mov
mov
ja
in
sbb
mov
ja
jb
pop
cmpsb
and
mov
mov
das
popa
ds
or
rolb
push
enter
inc
pop
push
repnz
test
and
pop
das
addr16
mov
ja
incb
jae
push
imul
and
aad
pop
imull
sahf
mov
bound
je
in
xchg
inc
aaa
jge
dec
cmp
push
mov
lahf
pop
insb
repz
push
stos
and
sub
stos
lahf
xchg
jp
mov
cli
out
sub
enter
test
add
mov
pusha
std
in
push
das
ds
leave
xchg
and
jb
inc
cs
push
mov
inc
lock
or
fs
sub
pop
jnp,pn
outsb
jb
fsubl
jmp
mov
sub
sbb
jo
test
in
mov
lret
iret
and
mov
rorl
sbb
shll
movsl
mov
mov
roll
cmpsl
push
add
mov
add
pop
adcb
mov
out
and
outsb
inc
xor
pushf
scas
xor
negb
push
fcomip
xlat
push
mov
xor
cli
jno
xor
mov
xchg
jg
sbb
sub
decl
jb
lret
jmp
xchg
dec
inc
imul
dec
jo
jo
mov
pop
mov
lock
push
jl
xchg
jno
rorb
movsl
inc
sub
mov
mov
mov
lock
push
das
in
sbb
sub
in
push
inc
mov
fsubrs
and
jae
sub
insl
negl
xorl
or
adc
jo
pop
dec
push
pushf
sub
icebp
xchg
push
sub
add
inc
and
scas
sbb
pushl
loopne
cmpsl
les
inc
sbb
aaa
sbb
sub
es
mov
push
xchg
clc
mov
sbb
mov
imul
or
xor
mov
test
xor
imul
andb
adc
or
inc
push
and
mov
and
popa
fs
mov
and
loope
mov
adc
mov
jno
cwtl
sub
or
aad
movl
push
mov
push
sti
mov
daa
stc
inc
in
lds
jle
iret
les
ret
xor
pop
and
repz
jbe
wbinvd
xchg
add
jp
insb
test
mov
sub
iret
pop
ds
rcl
xchg
xchg
in
inc
pop
mov
mov
pop
aas
xchg
repz
fbld
out
jmp
mov
mov
nop
dec
bound
ja
and
jbe
xchg
push
cmc
cmpsl
rcll
jmp
jg
stc
jge
das
test
stc
leave
sbb
add
rol
test
rcr
xor
add
shrl
test
icebp
pop
lock
jae
movsb
xrelease
loope
mov
and
jae
ss
das
addr16
sub
xchg
jmp
xor
mov
mov
push
or
dec
sub
aad
xchg
inc
jecxz
outsb
mov
insb
and
jbe
in
iret
movsl
insb
out
icebp
lcall
insb
xchg
xchg
popa
mov
idivb
ret
mov
and
add
push
xchg
push
movsl
add
mov
aaa
pop
cmp
in
fcmovbe
rorb
insl
or
shrl
stos
or
andb
ss
pop
push
das
mov
push
in
sub
pop
push
pop
adc
add
or
js
and
mov
push
push
add
mov
std
data16
mov
test
xchg
xlat
pop
mov
inc
insb
push
adc
xlat
inc
hlt
xor
mov
cmp
pop
and
push
incl
sbb
adc
test
cli
fs
mov
hlt
orl
movsb
ret
dec
jae
and
lods
lods
pop
movsl
or
and
jo
xchg
sahf
or
std
sub
sbbl
imul
push
pop
push
inc
adc
xlat
dec
mov
dec
sahf
ja
lcall
fwait
mov
out
fs
mov
sbb
repnz
lds
mov
mov
loope
fwait
inc
insl
ja
in
out
dec
ljmp
scas
jno
add
sub
jb
and
mov
push
pop
sbb
jns
roll
in
sub
cmp
sub
testb
das
adc
push
mov
push
sahf
movsl
shlb
mov
in
jl
sbb
push
xchg
ret
and
repnz
jg
daa
ljmp
mov
adc
push
jge
loop
into
pop
icebp
imul
pusha
dec
es
pop
in
rcr
xchg
pop
sbb
mov
addb
jae
lret
insl
sahf
repz
inc
inc
or
add
push
leave
adc
mov
dec
cmpsl
xor
fnstcw
dec
push
loope
mov
push
cld
aad
and
adc
adc
sbb
icebp
push
adc
cmpb
xor
push
inc
out
es
xchg
adc
fld
imul
push
int
jno
roll
xchg
and
mov
das
popa
cli
xchg
inc
mov
scas
out
add
jmp
pop
add
aaa
mov
dec
sub
adc
mov
pop
add
cmpsb
addr16
sub
lds
sub
test
jg
add
sbb
or
inc
call
popa
jne
or
xchg
add
jno
arpl
cmpsb
loopne
out
aas
push
outsl
loopne
das
jne
mov
mov
dec
adc
ret
sbb
leave
je
xchg
repnz
bound
add
xchg
add
ret
fsts
cmpsb
xor
jne
lahf
mov
and
dec
or
pop
jg
inc
dec
out
xlat
jo
mov
sbb
jo
ljmp
xor
out
addl
and
inc
adc
inc
xchg
sub
mov
mov
xlat
xor
bound
jecxz
xor
add
pop
movsb
arpl
insl
sbb
insl
add
in
popa
xchg
mov
pop
push
in
jae
sbb
cmpsl
push
nop
enter
or
lods
in
xchg
mov
mov
adc
scas
outsb
test
bnd
scas
call
adc
sbb
adc
popf
sub
faddl
nop
aaa
mov
sub
add
push
mov
jge
in
mov
mov
dec
sub
adc
jl
add
mov
lods
cmpsl
xchg
adc
adc
sbb
dec
xor
dec
in
mov
jecxz
icebp
loope
cmp
addl
mov
in
movsb
aam
cmp
xlat
pop
inc
add
inc
ja
popa
mov
arpl
sbb
mov
out
sub
dec
popa
lock
jne
sbb
imul
scas
ljmp
add
cmpsl
cwtl
mov
adc
sahf
insl
test
sub
inc
xor
xchg
loop
xor
pop
lahf
cwtl
aam
pop
fwait
cmp
inc
jno
add
dec
mov
mov
mov
and
mov
es
jge
mov
jno
seta
loopne
les
in
push
push
shrd
cld
std
cwtl
inc
xchg
pop
sub
sbb
xor
arpl
sub
mov
fisubrl
pop
cld
jne
sbb
mov
and
fwait
sbb
sbb
mov
inc
ja
jge
insl
jne
in
mov
push
dec
in
pop
cld
iret
add
sbb
test
xchg
iret
leave
test
les
jns
jae
sbb
mov
and
mov
rcrl
xchg
aaa
add
pop
mov
xor
sti
push
sub
out
and
enter
jl
xor
fisubl
adc
jge
repnz
mov
pop
rol
test
das
cmc
dec
inc
frstor
fsts
imul
xlat
cmp
aad
ds
push
pop
xor
adc
pop
or
jne
movsl
pop
ljmp
ljmp
test
or
jge
adc
jne
psllq
fistps
pop
sub
stos
push
jmp
fists
jno
xor
outsl
jmp
push
inc
out
and
mov
test
pop
inc
xchg
push
int
fs
and
xchg
ret
arpl
push
push
lea
sbb
mov
lds
pcmpeqd
pop
mov
fucomp
xchg
or
xor
pushf
gs
int
jecxz
roll
andl
jae
and
gs
inc
arpl
mov
ret
out
int
ret
mov
test
sub
inc
idiv
mov
call
in
jl
xor
xor
sbb
mov
imul
xlat
xor
je
mov
jmp
ficoms
cltd
sub
xlat
mov
div
or
xchg
aaa
xor
adc
mov
cmp
mov
mov
inc
in
pop
rcrb
xchg
add
sbb
push
push
push
jo
dec
ja
xchg
push
out
lods
jb
inc
roll
jmp
sub
fbld
cmpsl
in
sub
xlat
inc
cmp
inc
repz
shrl
jne
mov
inc
insb
lahf
pop
jno
mul
xchg
cld
stc
mov
clc
lahf
das
pop
in
pop
lcall
xor
and
mov
enter
test
dec
pop
xlat
out
mov
pop
cmp
and
inc
and
pop
xchg
push
lahf
scas
ds
xchg
jmp
and
xor
insl
sub
mov
xor
enter
iret
jnp
sub
push
sbb
pop
in
pop
movsl
xchg
clc
mov
pusha
stos
jo
test
jp
imul
in
sbb
orl
mov
and
dec
ljmp
dec
push
dec
cli
dec
adc
pop
push
add
push
sbb
mov
pop
enter
outsb
arpl
lret
mov
rcrl
xchg
xchg
test
dec
movsb
fisubrl
scas
add
push
cmp
loope
adc
inc
xchg
das
push
dec
pop
dec
dec
xchg
ret
sub
jae
xchg
sub
lahf
sbb
pop
jp
pop
push
cmp
icebp
movsb
push
stos
xor
popa
dec
lret
popf
lret
and
dec
sbb
mov
jge
mov
mov
iret
push
dec
jo
xchg
jp
ds
sub
add
sbb
pop
aas
and
mov
in
pop
add
cs
mov
pop
inc
mov
dec
add
xor
nop
stc
push
cwtl
test
leave
ret
jl
xchg
add
shr
pop
ret
in
inc
dec
jo
test
out
jmp
stc
scas
fidivrs
add
add
orl
inc
mov
or
es
cmp
mov
fcmovbe
add
data16
nop
add
dec
inc
test
ds
jl
xlat
cmp
mov
aas
cwtl
push
faddl
xchg
and
fwait
push
xor
pop
popf
fstpl
mov
out
push
dec
jle
mov
mov
dec
pop
mov
popa
pop
or
dec
in
popa
and
inc
out
push
cs
and
dec
inc
jp
arpl
adc
aas
or
rcrl
inc
push
icebp
aaa
jbe
xchg
pop
outsl
adcb
xchg
mov
adc
sti
jb
into
out
pop
cmp
mov
xorb
clc
adc
mov
cmp
sub
arpl
mov
mov
mov
daa
jp
cmpsl
or
stos
sbb
dec
xor
inc
inc
and
cwtl
daa
lock
pop
and
enter
je
mov
js
cltd
shrl
mov
dec
stos
sub
add
mov
clc
jno
mov
xor
add
lods
inc
sbb
rcll
mov
adc
out
outsl
and
jge
mov
je,pn
stos
fldcw
fnstsw
mov
mov
in
out
jle
xor
out
in
sub
cmpsl
mov
pop
jg
sub
insb
sub
lcall
lea
pop
dec
or
xchg
sub
adc
xchg
cmc
rcrl
mov
inc
aas
mov
sub
jge
lcall
push
inc
call
fcom
or
fldl
pop
in
js
icebp
dec
loope
aas
shrl
xor
aad
pop
mov
xorb
stos
pop
insb
out
dec
push
stos
dec
add
jmp
sub
sahf
xchg
cmc
imul
or
inc
mov
add
ret
daa
popa
out
jge
mov
imul
adc
push
push
push
fcmovbe
push
add
push
sub
shrb
jae
add
mov
add
mov
filds
lret
dec
mov
mov
push
dec
lcall
jle
incl
inc
pop
mov
pushw
sub
sbb
jle
clc
nop
cmp
lahf
incl
sub
lods
push
jg
rcr
out
inc
xlat
shr
rolb
shl
jae
imul
sbb
xor
jl
lcall
inc
xor
add
ret
lods
inc
mov
push
lods
cmpsl
mov
mov
data16
sbb
jp
push
dec
lret
ds
daa
lock
fadds
popf
ret
inc
aaa
repnz
sub
xlat
dec
into
bound
pop
popf
cltd
mov
stos
rcl
gs
lds
in
xor
xchg
test
add
movsb
cmp
dec
in
notl
cld
or
out
int3
cld
es
mov
in
lret
daa
mov
scas
jb
cmpsl
test
push
inc
scas
xchg
in
stos
or
outsb
inc
fcompl
pushf
jl
pop
out
mov
adc
lods
pop
and
fisubrl
enter
push
iret
xchg
xor
or
aam
sbb
ficompl
xor
in
xor
fstpt
daa
iret
or
jno
test
mov
mov
xorb
xchg
mov
scas
test
ret
loope
and
jecxz
daa
pop
cwtl
dec
icebp
pop
jae
test
sub
out
adc
cmc
out
adc
add
int
mov
jb
mov
stos
xchg
inc
dec
clc
mov
xchg
icebp
fistpl
push
push
cwtl
mov
rcll
push
adc
je
inc
sbb
sub
inc
stos
call
xchg
adc
shl
add
repz
pop
cwtl
cmp
test
fcomps
adc
mov
or
add
dec
xorb
call
xor
inc
and
int
xor
test
test
aad
xor
mov
and
xchg
in
cmp
add
pusha
clc
sub
in
mov
cli
jp
xchg
adc
xor
ss
into
pop
cmp
in
dec
sub
push
imul
xchg
mov
sub
repz
mov
dec
in
cmp
in
cmp
fnstsw
ror
mov
jne
scas
push
mov
into
call
inc
mov
fildll
inc
jle
repz
rcll
pop
ficoml
push
or
jle
xchg
adcl
ret
hlt
pop
or
jne
inc
out
pop
cmp
push
nop
fwait
dec
xor
xchg
and
loop
jns
mov
out
ss
and
aaa
inc
add
dec
jnp
es
es
lods
push
into
adc
in
sub
aaa
gs
dec
sbb
jmp
dec
push
pop
cltd
and
mov
ss
mov
push
cwtl
ljmp
and
xor
sub
arpl
mov
sub
orb
add
cmp
pop
les
inc
push
push
jmp
pop
sub
lods
mov
nop
lock
lock
ftst
in
mov
push
in
pop
mov
test
xlat
add
sbb
fnstenv
popf
ffree
repz
push
pop
dec
insb
xchg
xor
lcall
in
jp
sub
xor
int3
xchg
and
add
scas
and
mov
sti
adc
scas
subl
xchg
in
mov
test
bound
mov
in
mov
mov
aas
cltd
pop
arpl
out
add
cmpl
cmp
je
pop
push
jbe
xor
in
push
mov
add
jb
add
les
mov
jb
loopne
push
xlat
repnz
sbb
mov
xor
sub
adc
xlat
ds
and
jbe
pop
jmp
push
add
imul
or
adc
andb
push
dec
sub
or
out
shr
add
out
out
and
mov
dec
add
and
jmp
scas
nop
adc
and
mov
lret
xchg
test
mov
inc
inc
xchg
sti
xchg
jp
pop
jne
sbb
cmp
aam
jecxz
push
cmp
faddp
and
mov
insb
or
arpl
or
enter
inc
and
and
mov
sbb
pop
fsts
dec
cmp
outsl
inc
and
jmp
push
add
push
add
mov
add
cli
jle
xchg
js
gs
insb
stc
test
add
popa
sbb
dec
arpl
or
ja
loop
jge
dec
outsl
xchg
cs
lods
sbb
dec
outsl
adc
xchg
pop
pop
or
adc
mov
cmp
sahf
sbb
mov
push
mov
cmp
pop
stos
push
add
or
pop
sbb
lret
leave
sbb
mov
std
xor
dec
in
sub
xlat
imul
imul
rolb
mov
inc
lret
jmp
mov
movsl
xor
aad
mov
push
dec
cmp
imul
pop
daa
sbb
shl
jecxz
loopne
mov
roll
ror
es
inc
add
xor
loop
jae
jo
cmp
int
inc
xor
sub
mov
lods
jp
jae
out
xor
outsb
jl
in
mov
jl
fmul
call
push
jne
pushf
je
adc
lea
sbb
outsb
nop
xchg
cmpsl
imul
ret
push
inc
mov
adc
inc
dec
sub
dec
imul
fs
xor
mov
ficomps
cmpsb
dec
scas
in
pop
add
stos
mov
ja
fstl
inc
mov
lret
js
rolb
cmpsl
jne
sti
leave
and
sbb
jo
insl
mov
dec
popa
sub
jno
popf
mov
cld
pusha
push
cld
fs
add
jmp
repz
mov
xchg
and
mov
fwait
aaa
cmp
add
inc
stos
jge
roll
cmpsl
je
mov
and
xlat
add
repz
mov
cs
add
xor
outsl
cmpsl
or
mov
adc
add
sub
pop
fists
in
cmp
xchg
mov
and
ficomps
fwait
adc
aaa
pushf
pop
xor
je
movl
mov
add
cmp
jnp
gs
mov
mov
inc
xorb
or
rorl
inc
push
decl
es
ss
push
arpl
dec
pop
push
repnz
fdivrl
cmc
push
cmp
dec
push
or
xchg
mov
cmp
ss
push
cltd
adc
sarb
push
mov
adc
inc
hlt
out
dec
xchg
cmp
cmp
add
push
lcall
xchg
xor
inc
mov
dec
mov
rcll
pop
pop
or
mov
inc
out
push
xchg
jge
cmpsl
mov
push
cmp
popf
ficompl
outsl
xchg
js
cmpsb
into
enter
push
cs
mov
insl
sbbl
mov
jge
xchg
jecxz
aam
sub
mov
mov
push
pop
enter
subl
pusha
dec
addl
orb
sbb
add
shl
ljmp
aas
into
pusha
sub
cmpsb
stos
adc
jno
pop
xchg
mov
pop
or
popa
and
dec
dec
xor
adc
jmp
xchg
and
cmp
imul
sbb
push
mov
cltd
add
lret
jo
testb
mov
lret
ja
jge
mov
jns
xchg
mov
insl
sbb
cmp
lcall
jnp
adc
add
icebp
push
jle
sub
lcall
adc
inc
sub
push
mov
mov
lds
call
sub
bound
pop
or
stc
jl
jecxz
adc
cmp
lods
inc
adc
mov
add
rcrl
repnz
mov
adc
pusha
aas
jae
xchg
push
push
pop
subl
pop
xchg
inc
ficompl
add
movsl
cmp
xchg
mov
sbb
hlt
cld
add
rorl
popf
xor
pop
or
out
push
loopne
int
push
add
out
clc
aas
cmpsb
lds
cli
cmp
push
and
mov
jnp
cmp
xorl
inc
mov
adc
push
in
cmpsb
in
jnp
roll
rorl
adc
push
mov
mov
pop
add
sub
in
imul
add
sub
dec
rcll
adcl
movsb
fistl
and
pop
and
adc
inc
movsl
jg
xchg
scas
rcrb
adc
clc
adc
pop
pop
scas
mov
jbe
bound
iret
mov
push
jo
shl
push
sbb
push
lock
mov
jp
mov
and
jns
imul
xor
adc
adcb
and
sbb
xor
clc
cmc
dec
push
inc
scas
xor
dec
out
xor
pop
clc
ret
adc
repz
and
mov
imul
imul
xchg
aad
ja
int
add
push
push
xchg
repnz
ja
insl
lods
fucomip
jno
cld
push
lcall
cmc
pop
sbb
ja
int3
jge
inc
aam
mov
in
sbb
insb
add
sub
push
pusha
mov
pushf
and
pop
cmp
cwtl
pop
pop
inc
lock
popa
cmp
mov
fldlg2
sub
ficomps
mov
mov
mov
hlt
xchg
jge
loope
and
imul
adc
mov
ljmp
lea
mov
adc
lds
inc
insb
pop
jns
push
push
mov
mov
ficomps
or
jae
bound
repz
push
mov
sbb
and
fimull
stos
cwtl
mov
shll
cmc
daa
pop
inc
pushf
jo
into
mov
xchg
xchg
and
rclb
mulb
and
mov
aam
fwait
lea
mov
cmp
and
incb
pop
icebp
dec
pusha
sbb
dec
xor
jmp
cmp
pop
daa
mov
mov
xor
jl
sbb
sub
js
fwait
dec
mov
jmp
std
mov
scas
pop
mov
jmp
xchg
addr16
arpl
outsl
fcmovnu
out
pop
cmp
jl
add
loopne
cmp
scas
and
cmp
adc
push
sbb
pop
les
shll
dec
add
mov
xchg
and
stos
shlb
mov
mov
fcoml
sahf
insb
lods
out
sbb
das
mov
add
gs
jo
das
stos
adc
and
mov
out
or
inc
enter
leave
jp
imul
mov
repz
push
xchg
jp
jo
mov
mov
daa
sub
and
aas
test
jno
mov
test
xlat
sub
sub
jl
ds
cmp
repnz
or
popf
and
adc
fwait
pop
and
loope
mov
adc
leave
scas
mov
int3
push
cmp
mov
popf
clc
lret
jg
add
jge
dec
and
cli
add
push
cmp
mov
mov
inc
pop
xchg
add
gs
mov
in
add
push
aaa
lods
add
push
and
fistpl
cs
mov
aam
mov
adc
adc
push
dec
sub
sub
jmp
in
xor
mov
or
imul
push
pop
mov
enter
mov
xlat
pop
push
and
xchg
mov
xchg
add
dec
shrb
int
imull
jmp
frstor
std
in
hlt
in
fsubs
pop
adc
add
rorl
insb
jb
push
hlt
cmp
push
inc
repnz
adc
cmp
enter
ret
out
dec
adc
push
push
add
inc
les
push
shr
sbb
xchg
fcom
inc
mov
fcmovnbe
mov
adc
outsl
push
dec
scas
fldcw
cmpsl
and
xchg
sub
testb
dec
add
cs
bound
pop
add
sub
inc
mov
inc
xor
or
cmp
mov
rcr
mov
cmp
aas
stos
js
dec
int
insb
fistpll
shll
dec
dec
cmp
jp
jmp
xchg
int3
enter
or
mov
lahf
pop
int3
inc
rorb
addr16
mov
jnp
mov
into
jle
in
cwtl
push
fimull
data16
sahf
add
add
pop
cld
stos
sbb
leave
arpl
dec
ljmp
iret
sub
mov
stos
dec
mov
fcmovnu
int3
inc
xor
xor
and
xchg
into
inc
in
lahf
std
jle
and
jns
int
sti
sub
test
movsb
enter
cmp
push
dec
lock
mov
cld
xchg
mov
imul
popf
inc
movsl
mov
or
cmp
xorb
cmpsl
lock
cli
sub
cs
xchg
or
mov
insb
jnp
jae
xor
vmovaps
bound
std
leave
adc
adc
push
movsb
push
inc
or
std
popa
inc
cwtl
dec
ljmp
ja
push
inc
and
aam
jno
lret
icebp
inc
andb
ret
les
sti
mov
nop
sub
dec
mov
cmp
insl
and
jmp
sub
aas
mov
outsb
xorl
add
sahf
ret
and
cwtl
mov
out
cltd
dec
popf
mov
pop
add
dec
mov
mov
xor
lock
lock
pop
xchg
sub
inc
gs
mov
sbb
add
lcall
mov
mov
lds
faddp
adc
xor
outsb
inc
jp
ja
add
lods
jb
movl
sbb
dec
int3
push
inc
mov
testb
ljmp
in
cmp
inc
shlb
sahf
les
jbe
pop
mov
xchg
icebp
xor
pop
push
scas
and
rcr
pop
rolb
adc
inc
add
sbb
repz
cwtl
cmp
aad
xor
les
and
fisttpl
inc
inc
xor
test
mov
jo
push
out
arpl
or
dec
xchg
aas
mov
sub
sahf
push
adc
testb
std
add
sbb
leave
pop
cmc
ret
cmp
push
mov
mov
popf
xchg
ss
mov
mov
sub
inc
pop
sbb
es
addr16
andl
pop
cmp
je
jle
mov
cmpsl
jnp
adc
mov
cs
fidivl
push
stos
xor
imul
subl
repnz
push
ja
jae
in
cs
sbb
iret
mov
push
prefetcht2
cltd
xor
jnp
sbb
shl
jbe
xor
lcall
mov
mov
fsts
mov
push
mov
mov
jg
dec
dec
cmp
pushl
inc
sahf
jbe
jl
push
push
cltd
xor
stos
push
cmc
out
mov
jae
jae
pushl
in
cmc
rcrl
add
push
sub
sub
and
lods
in
jbe
xchg
push
adcb
xor
push
lret
in
inc
imul
or
cmp
call
ja
cwtl
leave
std
lret
pop
xor
aaa
and
cs
xlat
pop
inc
adc
push
adc
in
xor
sbb
or
cs
sti
or
rclb
xlat
pop
aam
dec
xor
push
aam
push
cmp
dec
xchg
push
push
cmp
lds
adc
das
cmc
rcl
pop
xor
add
cmpl
loop
mov
decb
inc
mov
call
and
xor
cltd
test
cs
jae
rcr
push
aaa
push
divl
scas
imul
test
pushf
outsl
ffree
aaa
pusha
not
jg
jae
add
je
aaa
rorl
and
and
test
call
rorl
dec
xor
aaa
lea
xchg
jmp
sbb
push
in
jne
pushf
inc
scas
jns
fldcw
add
pusha
sub
enter
scas
stc
out
jg
fs
add
xchg
lret
push
adc
push
jae
xchg
pop
add
jae
and
cli
cmp
in
sub
dec
imul
aas
jmp
jo
popa
rol
rcrl
add
adc
sarl
sub
in
ljmp
pop
aas
jne
into
jg
fidivl
outsl
ljmp
bound
fs
xor
std
cmc
mov
xchg
orl
imul
je
or
cmpsb
adc
rorl
mov
mov
stc
pop
clc
inc
adc
std
sti
push
inc
xchg
outsb
push
lods
mov
stos
add
add
jl
shr
loope
out
insb
es
cli
lahf
mov
jbe
jb
xor
adc
sbbl
outsl
inc
adc
rcll
cmpsb
in
out
pushf
cli
xor
and
cmpsb
das
mov
xor
xor
call
push
xchg
dec
mov
xchg
mov
adc
add
dec
movsl
in
js
mov
test
cltd
sbb
or
push
lods
adc
js
push
clc
xor
xor
push
lret
in
inc
add
leave
cmc
pop
inc
cld
mov
arpl
mov
call
add
push
jno
push
mov
shrl
ret
cltd
push
fstpt
push
fs
notl
mov
mov
jl
lahf
add
imul
sub
cmp
mov
gs
mov
mov
imul
mov
es
push
fiadds
in
int
jecxz
sti
movsl
mov
inc
clc
jp
and
lret
arpl
test
add
adc
jo
fptan
cli
xchg
jle
fistl
loope
rcl
bound
cltd
repz
cmpsl
fdivs
add
mov
imull
movsb
mov
mov
imul
stos
mov
push
push
jb
pop
das
inc
adc
lret
sahf
mov
add
call
and
stos
pushf
lds
or
add
test
out
dec
xor
je
jge
push
cmp
add
arpl
cmpsl
sbb
pop
dec
cmp
inc
inc
mov
push
push
push
stos
or
pushf
pop
fcoml
xchg
lret
imul
or
sub
insl
outsb
fisubs
push
data16
lods
mov
fidivrl
sub
cmpsl
lea
inc
sahf
xchg
sti
clc
jno
roll
inc
ret
mov
stos
dec
shll
mov
xlat
cmp
ret
iret
enter
push
mov
daa
lea
jae
add
fidivrl
in
andb
dec
push
add
jb
sbb
push
jge
das
cmpsl
jp
push
out
jmp
jae
imul
mov
pop
jns
mov
int
shlb
movsl
hlt
push
call
loop
dec
and
into
lret
inc
sti
incl
inc
adc
mov
mov
dec
and
add
mov
adc
sbb
fisttpl
shrb
enter
inc
mov
push
imul
popa
jecxz
stos
mov
mov
adc
pop
testl
push
loop
fisubl
mov
jns
arpl
mov
movb
fadds
les
inc
add
leave
or
sub
or
inc
fstl
dec
pop
leave
pop
aad
andb
mov
outsb
and
or
pop
icebp
inc
test
mov
jg
shll
ja
and
outsb
cmpsb
sti
test
je
sbb
int
add
ror
pop
xchg
pop
xor
cmovs
inc
je
xchg
or
sbb
icebp
xor
mov
pop
xchg
insb
dec
xor
std
and
rolb
dec
mov
imul
lods
loope
inc
pop
inc
xor
lea
xor
shrb
sub
lods
out
fs
xchg
lahf
lds
mov
pop
movsb
ret
js
push
pop
xor
mov
jns
xor
jbe
popl
enter
add
and
adc
add
in
and
stc
lods
or
insl
pop
inc
shl
jo
cmp
fs
adc
cltd
das
fxch
stc
or
dec
iret
sub
scas
sbbl
pushf
cmp
push
add
mov
cmpsb
or
in
lock
pop
cmp
adc
push
shl
cmp
or
xchg
scas
clc
push
stos
xchg
jne
sub
dec
fistpl
push
out
jbe
inc
mov
cmp
sarl
scas
jns
addl
iret
jl
pop
cmp
push
add
in
xor
jecxz
mov
jg
out
ret
xchg
sti
sahf
aas
inc
push
idiv
cmpsl
je
or
sbb
xor
mov
in
adc
test
or
dec
or
xor
mov
pextrw
lods
fildll
mov
icebp
int3
scas
ret
lds
lret
lcall
lahf
ret
mov
xor
cmp
scas
lea
fucom
ret
inc
cmp
lret
divb
mov
test
into
dec
icebp
fwait
or
emms
ds
and
cmp
leave
push
mov
cltd
loop
mov
in
push
dec
xchg
cmp
je
mov
and
pop
mov
sbb
push
jecxz
loope
dec
and
scas
mov
lcall
jne
in
mov
bound
daa
mov
sbb
scas
push
xchg
and
lcall
pop
insl
test
xor
fwait
dec
sbbb
xchg
push
mov
inc
mov
sbb
adc
jmp
icebp
repz
fdivrl
xchg
push
sarl
out
push
push
mov
push
push
insl
pop
aam
cmp
sbb
add
cld
cmp
lock
dec
pop
push
sub
push
test
jg
rep
dec
inc
pop
jle
xor
movsb
sbb
inc
jo
fadds
mov
sub
ret
mov
push
jns
add
inc
stc
pop
nop
pop
mov
sbb
dec
pop
push
or
aas
jecxz
push
xor
pop
outsl
mov
scas
int3
lahf
push
ret
push
addr16
and
adc
adc
jbe
mov
outsb
xchg
mov
pop
mov
fmul
push
adc
cmc
mov
gs
test
cmp
cmp
pop
andl
xchg
cmc
add
cmpsb
sbb
sbb
cwtl
add
lea
cmp
jg
or
pop
or
cmp
mov
rorl
adc
jp
or
pusha
fwait
or
leave
cli
jb
sbb
js
jbe
mov
test
and
in
addr16
xor
jo
in
mov
jle
or
xor
sti
mov
sbb
jno
adc
stos
mov
mov
lret
imul
jle
fnstenv
mov
push
add
xchg
add
fsubp
push
sahf
test
out
xor
lds
push
lcall
push
out
xor
cltd
dec
fs
push
addl
movsl
xchg
or
add
lods
fistpl
mov
aaa
xchg
lahf
mov
movsb
inc
test
sub
cmp
lock
jecxz
lcall
and
and
pop
and
adc
mov
cld
sub
adcl
divb
and
in
andl
or
xor
loop
sub
or
or
push
push
pop
cmpsl
xchg
jl
inc
or
shlb
ret
mov
jl
das
lea
js
lahf
xchg
int
icebp
inc
repnz
in
in
inc
push
jp
mov
mov
arpl
dec
mov
mov
cwtl
aam
ljmp
sub
sub
popf
adc
push
mov
xchg
ficomps
leave
or
xchg
pushl
lahf
cli
mov
jae
inc
gs
lahf
or
sbb
icebp
mov
adc
sub
into
aaa
stos
or
mov
scas
shlb
inc
adc
push
pop
and
mov
nop
jnp
and
imul
test
clc
sbb
pop
inc
insb
sbb
xor
cmc
movsl
int3
loope
fisubs
dec
cltd
sbb
mov
hlt
popf
test
stc
lret
cli
dec
std
repz
addr16
imul
arpl
insl
jb
lds
xchg
clc
mov
inc
cmc
cmc
repnz
outsl
and
xor
ja
shll
adc
fsts
mov
cwtl
pop
fadds
or
fcoml
je
pushf
push
inc
or
xchg
je
xor
or
movsb
mov
lret
xchg
js
sar
mov
insb
lock
dec
rcll
xor
sbb
rcll
mov
and
rcr
push
mov
jno
add
loope
loopne,pt
fidivrl
pop
pop
and
dec
sbb
lcall
mov
mov
mov
xchg
or
inc
sub
lret
lcall
fdivrp
fists
out
aam
mov
rol
xor
aaa
xchg
xor
inc
rcrl
call
jbe
shlb
lcall
mov
push
inc
mov
push
fldl
aas
inc
lods
shrl
ret
ret
adc
imul
pop
adc
lods
jns
mov
incb
std
mov
add
xchg
mov
or
xchg
mov
nop
adcl
jl
ret
sub
xchg
das
jbe
fcoml
adc
adc
bnd
mov
inc
into
in
stos
mov
xchg
movsb
pop
lcall
fwait
cltd
push
jno
scas
jmp
or
mov
add
pop
mov
shr
or
bound
add
push
gs
stos
inc
popf
int
dec
or
outsw
and
mov
add
dec
push
loope
mov
push
inc
mov
or
repnz
jbe
and
je
inc
shlb
push
jp
push
test
mov
cmp
mov
loope
test
mov
push
pop
ss
xlat
xor
push
xchg
sbb
lock
stc
xor
pop
loope
bnd
mov
fsubs
stos
cmc
sahf
insl
xor
test
sbb
add
and
cmp
pop
aas
or
fdivs
sbb
or
mov
adc
add
add
arpl
inc
ficoms
test
xchg
ja
add
cmpsl
pusha
popl
or
xlat
push
mov
ficoms
std
cmp
fdiv
insb
xchg
fiadds
and
inc
mov
ret
dec
in
lret
mov
adc
push
mov
ret
inc
andl
sub
push
shll
jne
inc
xor
dec
out
xor
xchg
call
dec
bound
in
mov
jno
xchg
jg
shll
insb
push
adc
sbb
jno
add
out
fisttpll
inc
push
scas
and
jbe
rcl
add
mull
push
out
mov
out
inc
dec
pop
jno
sbb
ss
mov
imul
sbb
cmp
pop
out
jl
xor
inc
pop
int
fidivs
mov
shl
fdivrl
or
insb
sub
xlat
das
mov
mov
cmc
dec
inc
cmpsl
push
sbb
pop
loopne
push
nop
push
mov
fidivl
dec
imul
loopne
cmpsl
xchg
and
into
or
mov
rolb
mov
inc
stos
scas
push
adcl
sbb
jmp
or
outsl
loop
push
fstpt
push
sub
rol
jo
arpl
jge
lahf
cmpsb
xchg
inc
add
out
and
add
xchg
ds
push
add
divb
ret
pop
scas
or
popf
xchg
cmp
cmpsb
and
mov
rcrb
fcompl
nop
mov
push
inc
or
ss
cmp
dec
push
mov
loopne
or
add
cli
adc
mov
push
xchg
mov
mov
push
and
pop
add
cmpsb
shr
outsl
push
cmp
mov
xor
pop
out
out
sub
jb
cmpsl
jo
adc
mov
adc
sub
iret
inc
test
or
ja
push
inc
out
inc
imul
fistl
fisttpll
sub
sbb
inc
lods
mov
xchg
push
aad
and
in
shll
jl,pn
push
mov
cmp
xorl
adc
fstl
stc
add
add
push
test
outsl
imul
xchg
loopne
cmp
jl
cmp
cltd
pop
popa
roll
xchg
cmp
xor
loopne
movsb
mov
mov
shlb
andl
and
cmp
add
shlb
jg
pop
pushf
enter
and
mov
push
into
shl
xchg
mov
imul
push
push
add
mov
popf
jne
pop
mov
fistpll
or
mov
pop
add
xchg
rcrb
mov
xchg
test
sub
ja
push
mov
pop
push
adc
add
fdivl
addl
bound
int
push
pusha
add
xor
nop
cmc
xor
sbb
push
les
and
cltd
mov
sahf
cmpl
lea
jecxz
or
jns
iret
scas
out
dec
popf
cmpb
adc
mov
pop
out
cmp
out
pop
leave
pop
jp
push
mov
data16
add
insb
je
push
sbb
mov
sbb
mov
fildl
pop
cmp
jns
jns
push
and
rolb
insb
sub
sbb
mov
int
dec
rclb
inc
pop
shlb
inc
dec
clc
xor
pop
cmpb
icebp
lcall
es
jge
loop
lcall
daa
jnp
push
cmpsl
push
test
inc
jp
adcl
xchg
adc
jnp
popa
mov
sbb
add
sbb
and
fldt
push
mov
mov
add
cmp
scas
bound
pop
out
mov
rcrl
jne
fwait
sub
jns
add
sbb
jl
dec
push
sbb
xchg
inc
pop
cs
pop
out
gs
xchg
cwtl
jae
enter
mov
repnz
pop
cs
mov
xor
xchg
xor
hlt
outsb
sub
xlat
gs
adc
cmp
pushf
stos
inc
inc
mov
cmc
xor
adc
in
push
addb
mov
cmp
jg
testb
add
sub
lods
hlt
mov
pushf
lock
insl
test
jnp
sub
jne
mov
sub
pop
imul
sub
dec
sti
mov
mov
int3
dec
dec
ror
pop
in
out
fisttps
daa
in
fiaddl
and
cmp
adc
jb
call
jmp
sbb
clc
sbb
cmpsb
in
or
testl
test
in
xor
cmpsl
and
or
aam
cmp
and
push
cmpsl
shrb
and
adc
mov
push
inc
add
xor
mov
jge
sbbb
pushf
sub
jnp
arpl
inc
xchg
add
mov
fmuls
nop/reserved
sti
dec
ficomps
xchg
dec
fadd
inc
shlb
mov
and
sub
mov
movsb
clc
rcll
shlb
imul
mov
sbb
hlt
xor
mov
int3
rcrb
call
mov
push
insb
sub
mov
icebp
lcall
push
jne
jae
leave
gs
xor
dec
push
cmp
pop
lock
pop
loopne,pt
push
stc
out
sbb
inc
sub
xor
xchg
daa
inc
pop
std
jo
xor
inc
adc
lahf
les
lret
stc
ds
push
add
pop
push
xchg
mov
ljmp
testb
cmp
ja
inc
ss
xlat
negl
mov
pop
fmulp
jb
add
mov
sbb
xchg
nop
js
jns
cmp
and
loop
dec
mov
dec
inc
pop
jge
adc
testb
fidivrl
fucom
ror
mov
inc
test
pusha
xchg
adc
cmp
inc
addr16
adc
mov
js
and
sbb
inc
jns
pop
mov
stc
test
xchg
ret
arpl
inc
pop
mov
stc
mov
sub
repnz
add
das
mov
mov
add
adc
mov
pop
mov
dec
das
pop
outsb
inc
add
jge
jns
fs
adc
aas
leave
xor
mov
insb
adc
jnp
jne
insb
lods
sbbl
les
mov
mov
imul
dec
out
xor
iret
pop
lea
xchg
sarb
adc
fsubrl
fdivl
xor
sub
lahf
test
inc
imulb
in
or
js
repz
add
adc
jge
inc
add
test
icebp
out
aas
sbb
dec
mov
cmp
or
out
mov
dec
xlat
sub
jae
add
jge
jb
sub
call
jno
cmp
fs
leave
pusha
adc
xor
pop
sbb
stos
out
xchg
fwait
pop
popa
ret
push
stos
testl
pop
mov
or
dec
xchg
test
mov
pusha
les
cltd
scas
push
shll
insl
mov
pop
mov
jae
cmp
outsl
std
int3
mov
divb
addl
shrb
ljmp
sub
or
lea
aad
mov
dec
mov
mov
sub
fwait
add
fsubrl
jge
testb
pop
orps
into
adc
test
mov
pop
sbb
das
inc
jbe
xor
mov
sub
scas
andl
out
push
shr
push
xor
sub
xchg
inc
adc
mov
jo
out
mov
pop
movsb
std
jno
xor
sbb
pop
xchg
dec
mov
dec
and
or
jbe
int3
or
mov
das
dec
dec
ficoml
js
push
sub
repz
mov
or
bnd
jecxz
push
add
pop
scas
push
jo
cmp
add
mov
mov
jmp
pushf
inc
mov
sub
inc
imul
out
pop
jp
sarb
push
loop
inc
mov
and
lock
scas
or
std
mov
jne
sarl
dec
cli
xchg
lret
das
pop
test
in
jb
cmc
dec
xor
and
mov
dec
push
cmc
inc
data16
in
sbb
inc
cs
inc
and
dec
jne
cmpsl
inc
fucomp
dec
add
int3
dec
push
mov
incb
ljmp
out
mov
mov
mov
int3
inc
pop
sbb
sub
jns
popa
inc
icebp
pop
and
sbb
je
add
stos
mov
adc
or
inc
push
mov
adc
push
mov
insb
and
dec
push
jle
unpckhps
adc
push
mov
aad
out
ret
or
mov
test
lcall
cmpsb
push
arpl
nop
adc
je
mov
or
ret
xchg
imul
mov
adc
inc
lahf
sbb
lea
adcb
jecxz
push
es
out
imul
aaa
addr16
inc
jle
xor
adc
xor
out
or
iret
jle
sbb
xor
mov
inc
jne
inc
lods
xor
jb
lahf
repnz
mov
dec
lahf
sub
bound
cmp
ja
leave
jno
mov
jmp
sub
xor
and
adc
mov
jmp
mov
in
xlat
dec
mov
sti
pop
pop
mov
pop
jp
lcall
adc
push
inc
push
repz
xor
mov
inc
xor
icebp
pop
and
jecxz
mov
fstps
loopne
lret
jne
jno
mov
inc
arpl
or
dec
mov
adc
xor
setg
daa
sub
xchg
rcr
pop
fdivs
aaa
adc
push
call
add
mov
and
dec
or
jns
fwait
and
jns
xor
inc
icebp
sbb
in
push
inc
and
rclb
xor
lods
jbe
or
fiadds
pop
mov
insl
daa
mov
lret
repz
fdivs
lret
adc
es
js
ds
adc
fimull
das
sub
imul
test
scas
adc
mov
jb
sub
test
lea
mov
sub
sub
mov
pop
mov
mov
fcomps
imul
dec
push
fs
add
mov
dec
lret
add
pusha
mov
mov
xchg
push
cli
loope
push
scas
lret
and
dec
mov
es
stos
push
mov
nop
mov
mov
fiaddl
and
push
xchg
pop
jbe
rorb
mov
dec
sub
jbe
dec
ret
lock
sti
xchg
mov
xor
fs
push
scas
add
xor
gs
subb
mov
cmp
in
add
fsubrl
cmp
pop
adc
lret
in
into
or
pushw
push
push
inc
inc
js
and
adc
leave
mov
sub
inc
ljmp
dec
ficomps
dec
jp
lods
daa
jb
mov
jmp
fdivrl
mov
call
scas
push
into
das
fmuls
mov
cmp
mov
dec
push
inc
cmp
inc
pushf
in
test
loop
dec
int
push
mov
cmc
insl
push
das
xchg
stos
hlt
loope
xchg
fs
xor
sub
jo
xor
icebp
xchg
into
lock
lds
and
dec
add
and
and
pushl
push
push
or
adc
inc
add
faddl
fisubrl
dec
std
stos
adc
xlat
inc
adc
aad
or
xor
pushf
sahf
sbb
int
inc
popa
cmp
xor
pusha
mov
push
xor
shl
enter
mov
filds
enter
push
dec
xor
cmp
subb
pop
shlb
gs
out
loop
lahf
jo
sar
icebp
and
adc
pop
shll
imul
orb
pop
sub
imul
das
dec
inc
jmp
inc
and
push
in
adc
xor
divl
imul
ret
lcall
mov
xor
cmpsl
pop
dec
cmp
xor
and
xorb
jbe
scas
or
mov
jle
mov
mov
xor
dec
push
and
imul
dec
daa
lds
mov
mov
pop
mov
pop
or
pop
outsl
xor
rorb
pusha
mov
xor
add
imul
jns
stos
sti
xchg
sarb
test
adc
cmp
ss
fwait
int
adc
or
js
xor
mov
add
inc
aaa
mov
sti
adc
and
ds
sbb
adc
dec
dec
and
ds
sbb
adc
jbe
inc
fst
cmc
sub
push
jb
pop
dec
repnz
outsb
movsl
std
mov
je
pop
jmp
push
cmp
mov
mov
dec
movsl
into
test
sbb
push
sub
pop
mov
std
jo
test
pushl
out
repz
outsb
pop
addl
inc
js
ficomps
push
dec
les
adc
test
xchg
cld
and
cmpsl
je
sbb
sti
or
sub
pop
pushl
dec
sarl
je
out
lds
pop
fwait
pop
lock
jbe
nop
outsl
push
repnz
mov
dec
pop
test
mov
fidivs
cmpsb
stos
xchg
movsl
shrb
stc
fdivs
popa
arpl
jl
add
shll
dec
imul
add
mov
xchg
xor
invd
jecxz
mov
lcall
add
xor
imul
add
mov
sub
xchg
xchg
mov
mov
insb
das
inc
cmpsb
or
js
movl
scas
jl
jno
pop
aad
in
mov
inc
movsl
scas
jg
loopne
lods
test
dec
out
and
mov
stc
lahf
hlt
mov
lahf
icebp
in
inc
cmp
xchg
mov
push
xor
add
and
and
sbb
jg
iret
or
inc
or
iret
jl
movsl
daa
pop
dec
and
pop
movsb
pop
pushf
pusha
imul
dec
idiv
lds
add
push
jl
subl
dec
mov
mov
push
fwait
fs
dec
ja
in
mov
out
push
add
dec
dec
jbe
push
andl
push
push
and
dec
xor
out
lock
daa
push
lods
fs
int3
stos
xchg
or
loopne
int3
sbb
incl
mov
or
push
loope
rcrl
stos
inc
mov
stos
sti
enter
imul
lock
cmc
push
les
and
xor
fcoml
push
sub
dec
out
sub
insl
and
cmp
push
add
repnz
pushf
icebp
out
dec
outsb
js
daa
je
mov
xchg
mov
fs
adc
fisubs
rorb
add
xchg
adc
or
inc
inc
je
push
pop
sbb
gs
add
push
push
sub
repz
pop
pop
fistl
nop
pop
inc
mov
jae
inc
inc
lods
ds
cmp
sbb
shrl
arpl
jp
in
sahf
mov
and
dec
sbb
pop
sbb
mov
aam
or
xchg
mov
dec
adcl
cld
push
jne
push
xor
or
das
push
popf
or
test
jmp
push
cwtl
mov
test
sub
pop
in
and
jg
mov
mov
mov
sub
push
jae
ss
imul
test
add
xchg
outsl
inc
cltd
mov
mov
outsl
push
push
shlb
cltd
push
push
fistpll
stos
loopne
add
negb
mov
sub
xor
js
mov
mov
daa
push
mov
cmpsl
into
and
push
xchg
sti
or
lahf
mov
icebp
pop
orl
cs
mov
push
jae
and
and
adc
cmp
ds
sbb
and
data16
daa
mov
jo
sbb
insl
jl
cli
fidivrl
mov
push
ret
lods
orb
xchg
out
jmp
cmc
and
shll
dec
fsubrl
shlb
inc
jne
adc
jmp
mov
or
pop
mov
out
fsubs
into
fisubl
push
ds
bound
xchg
mov
ficoml
pop
pop
ds
les
mov
mov
test
test
insl
lahf
in
and
xor
and
or
cs
cs
lcall
iret
mov
xchg
int3
mov
sbb
outsl
and
inc
movsl
jae
jns
insb
mov
pop
mov
js
jecxz
sub
xchg
in
inc
stc
jg
movsb
push
imulb
push
dec
adc
pop
fstp
xor
fcoms
sub
pop
and
xor
mov
xor
fwait
dec
stos
adc
push
sbb
repz
subb
inc
pop
jmp
in
mov
repz
mov
inc
out
jge
mov
mov
hlt
or
sub
xchg
xor
cmp
or
aas
xorl
pop
gs
jno
sbb
imul
shll
xchg
cld
inc
mov
std
cld
pop
sbb
jg
nop
xor
sbbb
daa
movsl
cmc
int3
xchg
mov
cmpsb
and
repnz
cmc
add
and
or
aam
sbb
popa
out
out
dec
mov
jbe
insb
in
subl
mov
cmp
sub
mov
enter
pop
movsl
divl
and
or
out
gs
mov
cwtl
xchg
jb
sahf
cltd
insl
sub
dec
fidivs
fnstcw
pop
adc
fidivs
scas
repz
push
push
lods
negb
clc
popf
bound
mov
mov
mov
or
xor
mov
mov
sbb
push
sarl
and
push
inc
addr16
imul
pop
add
jno
jge
and
repnz
mov
xchg
iret
mov
mov
inc
scas
sub
notb
add
mov
mov
cmp
sub
pushf
fcoml
imul
test
addr16
adc
ret
pushf
lock
daa
lods
imul
sbb
xor
fimuls
add
filds
icebp
in
bound
sbb
mov
fisubrs
rclb
pop
xchg
loop
pushf
int3
stc
jb
cltd
and
cmpsl
jle
or
jmp
ljmp
nop
mov
repz
into
mov
jbe
or
popa
add
xchg
in
cwtl
push
inc
in
inc
imul
pop
pcmpgtb
in
pop
mov
rorb
cmpsb
stc
jno
add
cmpsl
and
inc
sub
clc
test
cmp
push
xor
nop
out
mov
sti
mov
popf
lret
imul
push
pop
jecxz
jb
fucomip
sbb
xchg
hlt
mov
pop
pop
int
cltd
jbe
add
inc
mov
xor
inc
test
cmpsl
push
ss
mov
add
xchg
pop
cmpsl
subl
jle
outsl
icebp
imul
js
and
hlt
insl
push
cmp
mov
mov
and
lds
xor
inc
mov
mov
pop
idiv
cmp
and
cmp
xor
lds
adc
mov
sbb
sbb
loop
ret
adc
pop
das
icebp
push
mov
stos
lret
mov
pop
fstl
stc
push
idiv
repnz
sbb
enter
stc
fidivl
sub
ja
dec
mov
inc
push
nop
shrb
or
cmpsl
scas
inc
fs
adc
pop
dec
xchg
mov
pop
mov
jg
bound
xchg
movsl
fdivs
xor
adc
xor
data16
xor
jbe
fs
or
xchg
mov
jb
mov
loope
mov
push
shll
mov
lea
lods
call
inc
ljmp
sbb
pushl
push
inc
mov
inc
push
jle
rol
cmp
repnz
xor
popf
dec
and
or
xchg
inc
or
or
mov
leave
scas
adc
jnp
jecxz
push
add
push
fidivrl
sub
imull
data16
inc
pop
int3
and
sbb
pop
shll
mov
dec
mov
adc
repz
mov
jo
and
xor
xchg
mov
push
add
inc
mov
sbb
ss
je
jo
fwait
mov
popa
js
or
pushf
je
sahf
pusha
cmc
in
mov
dec
jo
and
insb
xlat
outsb
rcrb
or
out
push
mov
outsb
push
addr16
pop
bts
push
or
imul
inc
sub
ds
push
fists
push
popa
shlb
or
inc
pop
mov
inc
in
shll
sti
ficoms
jle
or
dec
inc
cmpsl
add
pop
push
xchg
mov
xchg
cmpsb
lock
xchg
and
jb
mov
xchg
in
and
fwait
bound
pop
fldenv
mov
int
add
int
xchg
push
cld
insl
mov
fs
std
sahf
jo
pop
insl
loopne
clc
mov
ljmp
das
xor
xchg
sbb
std
outsb
push
mov
mov
cltd
cmc
into
stos
shll
mov
sti
xor
loopne
adc
mov
shll
push
js
xlat
fnsave
mov
shl
lods
sbbb
jb
fisubs
and
arpl
xchg
adc
add
sbb
dec
stos
push
xor
and
jmp
shl
jmp
fwait
loope
aaa
cmc
push
and
pop
mov
nop
das
sbb
add
jb
and
out
inc
sub
into
inc
push
adc
jo
shll
cmp
sbb
mov
decl
push
pop
or
add
and
sahf
adc
nop
insb
pop
mov
adc
lds
mov
and
inc
out
imul
xchg
inc
pop
sbb
cmpsl
push
iret
lods
xchg
mov
push
xor
push
pop
mov
add
or
in
js
je
sbb
add
cmp
add
sub
cmp
pop
adc
xchg
and
sbb
into
jne
es
push
mov
or
in
clc
xor
xor
loope
jle
mov
and
jo
cmp
lock
int3
sub
jne
sub
mov
fsts
adc
insb
add
out
cwtl
loop
jecxz
cmp
pcmpgtb
push
fsubrs
enter
les
orb
rcrb
stos
cmc
mov
add
jns
jae
in
out
cmc
add
movsl
push
iret
bndldx
cli
inc
icebp
push
mov
add
out
icebp
adc
insb
lods
ds
sub
push
add
fcomps
dec
frstor
test
lock
dec
sub
sub
cmp
mov
jmp
int
sbb
jno
outsb
cs
pop
push
es
sbb
test
subl
lock
sbb
pop
push
jl
adcl
mov
cltd
push
pushf
cmc
sbb
xchg
adc
pop
sbb
fnstsw
sbb
repnz
mov
or
repz
sti
andb
fiaddl
sbb
mov
iret
pop
cmc
adc
adc
stos
out
mov
stos
or
sbbb
inc
mov
adc
cmpsl
arpl
fcomps
mov
aaa
pop
imul
add
push
sub
fsubs
test
daa
sub
mov
sub
add
xlat
subl
lods
movsb
adc
pop
sbb
loope
imul
pop
add
stos
pop
fbstp
push
dec
and
jge
popa
push
dec
pop
fisttpl
and
push
es
lds
mov
and
shrl
inc
add
or
pop
jbe
mov
or
xchg
or
jl
cltd
cmp
fwait
push
pop
fwait
push
pop
lret
add
lods
cmp
and
sahf
and
ret
lods
adc
outsl
leave
fistpl
adc
imul
mov
push
int3
xchg
ja
hlt
aad
or
xchg
rclb
je
pop
lock
stc
cmp
sbb
sbb
sbb
adc
mov
imul
mov
ljmp
cmpsb
mov
pop
fwait
popf
sub
add
xor
scas
rcl
push
cwtl
imul
add
in
and
dec
dec
ja
xchg
lods
je
and
push
xor
mov
cmc
jns
imul
aaa
cs
imul
mov
push
imul
pop
xor
pop
inc
mov
out
insb
xchg
mov
adc
shl
icebp
xor
xchg
mov
stc
clc
out
inc
pop
nop
ret
and
add
stos
and
add
out
dec
iret
pop
adc
ret
test
mov
adc
roll
adc
enter
jp
ds
mov
pop
adc
dec
sbb
jp
fmull
inc
into
adc
mov
sbb
daa
xchg
enter
or
and
cmp
jbe,pt
aas
bound
adc
out
cmpsb
jge
in
stos
imul
daa
aas
in
and
in
adc
dec
pushl
push
test
sbb
fistpll
pusha
scas
pop
lds
mov
ja
cs
pushf
pop
insl
or
add
in
out
jl
fdivl
add
sbb
mov
int3
popa
inc
inc
lret
roll
pop
das
in
rolb
or
lret
std
jmp
xchg
jge
pop
add
xor
push
xor
adc
movsb
shlb
aas
je
or
mov
movsl
sub
inc
sub
xor
xor
lcall
sar
xor
test
jno
jle
dec
jns
stos
jno
mov
mov
popf
push
or
mov
mov
sbb
and
stos
mov
inc
adc
xchg
mov
inc
jmp
push
jnp
adc
imul
mov
scas
mov
popa
out
lret
lret
xor
jg
push
cmpsb
cli
xlat
movsl
pop
inc
fs
out
dec
fdivr
fwait
mov
out
nop
je
in
sbb
push
add
xor
cli
xor
dec
shr
push
sbb
into
or
fbld
scas
cmp
leave
scas
into
dec
adc
test
idiv
fdivs
mov
lods
stos
in
push
int3
dec
lret
stc
pop
mov
lahf
xor
mov
and
fsub
push
lcall
les
aas
loopne
fwait
aas
cmp
bound
inc
push
arpl
sti
pop
dec
and
test
in
pushl
pcmpeqd
push
mov
sbb
push
lods
mov
lret
adc
into
jnp
mov
pop
cmp
sbb
addr16
xor
cmp
loop
jno
aaa
test
inc
gs
in
mov
cmp
mov
lcall
cmp
je
and
adc
push
jmp
aaa
push
fwait
push
cmc
jmp
jnp
mov
mov
jb
addl
scas
insl
mov
dec
stos
or
xchg
xchg
dec
mov
fdivrs
inc
jno
adc
notl
cmp
xlat
or
push
sbb
rcrl
fiadds
xlat
lds
adc
and
inc
fs
enter
xlat
xlat
push
loope
xchg
aaa
adcl
push
arpl
fnstcw
in
pop
cltd
pop
xchg
jecxz
ss
ret
cmp
adc
sub
fisubl
inc
inc
lahf
xchg
xchg
xchg
push
xor
cs
add
nop
jbe
xor
push
pop
mov
and
xor
add
mov
dec
and
andl
xchg
and
jae
dec
xor
adc
enter
jge
inc
push
jne
inc
imul
daa
and
sbb
dec
inc
andl
xor
add
mov
mov
dec
int
xor
addr16
dec
imul
cmpsl
sub
add
push
xchg
xchg
cmp
push
jmp
mov
sbb
popf
jne
outsl
add
popa
ljmp
sbb
pop
xlat
mov
lahf
shl
inc
pop
int
xor
addr16
mov
jge
sub
push
andl
popa
mov
outsl
andl
cwtl
mov
jae
adc
das
and
out
dec
and
cld
int
lea
push
mull
inc
mov
gs
aaa
add
cmpl
and
lds
hlt
xor
push
mov
mov
jns
or
adc
lds
popa
fnsave
jge
cmpsl
mov
inc
cmp
fdivrs
cld
mov
cmp
mov
nop
sarl
pop
fmul
out
push
jp
jg
push
cmp
shlb
arpl
lahf
dec
mov
stos
and
inc
loopne
dec
mov
adc
xadd
test
inc
or
mov
jge
stc
nop
int3
jp
neg
std
stc
adc
outsl
inc
mov
cmp
das
and
outsl
jae
shr
mov
jle
jbe
les
into
push
stc
mov
dec
add
jg
rep
ja
lods
das
fisttpl
push
fistl
nop
and
sbb
call
aaa
or
icebp
and
xor
stc
jno
or
sar
cltd
xor
cwtl
jle
movsb
testl
sbb
stc
mov
mov
adc
shrl
imul
push
mov
sub
test
push
add
xor
or
shlb
mov
adc
add
rcll
insb
je
test
lret
mov
mov
pushf
call
xchg
lods
rolb
xor
mov
ss
jno
ficompl
push
mov
in
adc
shll
gs
scas
and
mov
sbb
aaa
bound
jno
and
ret
jl
sub
jecxz
and
xorb
pop
push
pop
lahf
sub
fstps
or
insl
push
mov
jae
mov
push
lock
into
push
mov
mov
inc
mov
sub
sbb
dec
inc
jl
cmc
faddl
pop
dec
or
in
jecxz
cld
lahf
repz
lock
dec
and
rcrb
cld
call
and
adc
inc
jecxz
data16
xorb
loope
mov
inc
and
sti
xor
imul
pushw
cmp
outsl
scas
xchg
pop
sti
filds
in
adc
pop
test
lret
lahf
mov
dec
xor
pop
mov
inc
xchg
mov
inc
ja
and
inc
pop
jo
jo
test
in
cmpsl
and
push
mov
sub
sub
adc
cli
std
fsubrl
mov
sbb
popf
xchg
inc
aas
pop
outsb
add
mov
sbb
jb
fs
inc
out
pop
bound
scas
sub
gs
sar
sub
or
xlat
pop
jbe
or
out
lds
lcall
shlb
push
sub
js
mov
aaa
cmp
movsb
and
dec
and
lods
popf
inc
clc
inc
rcl
aas
mov
add
rcr
add
push
stos
mov
sub
adc
jl
or
jae
je
jns
pop
std
push
xchg
and
cmpsb
sub
or
add
jo
pop
mov
cltd
ja
sbb
jl
nop
cmp
push
add
xchg
mov
adc
ss
call
and
xlat
dec
rdpmc
sbb
adc
pop
incl
mov
outsl
inc
pop
jmp
pop
xor
and
negb
jno
or
inc
cmp
push
ja
orl
xor
mov
mov
scas
pop
jbe
add
data16
cmp
mov
add
push
cmp
stc
aas
mov
clc
aas
incb
sti
test
out
loopne
rolb
push
inc
adc
xor
push
test
sbb
xor
jo
int
nop
cmpsl
adc
fcoms
cmp
and
cmp
mov
cmpl
out
aaa
fnstenv
pop
or
push
sub
movsb
int3
icebp
or
pop
testb
imul
lret
and
push
orl
or
lret
je
sbb
or
push
aad
lret
push
andl
mov
ja
jne
clc
inc
addr16
sbb
push
std
aad
dec
imul
and
lret
mov
pop
push
pop
inc
sbb
sarl
dec
repz
jg
jmp
daa
dec
fbstp
into
jecxz
mov
sarb
fsubrs
fisubrs
cmovle
rcll
adc
out
test
sbb
cwtl
xor
xchg
inc
add
es
sub
sbb
push
dec
lahf
xchg
nop
inc
push
sbb
cmpl
jno
xchg
push
push
enter
inc
pop
dec
and
jo
and
in
sub
cmp
xchg
out
mov
xor
jne
lret
fwait
popf
fs
inc
outsl
outsb
lret
imul
pushf
arpl
inc
addr16
aaa
dec
je
mov
repnz
mov
rcll
xor
ss
nop
push
call
xchg
mov
push
stos
mov
loopne
ja
stc
xchg
adc
add
pop
ja
jno
in
lret
pop
test
imul
or
repz
aam
or
lret
outsb
call
in
popa
imull
dec
mov
in
sub
fcoms
adc
ja
and
insb
jmp
dec
and
pop
orl
lret
ss
and
inc
gs
ljmp
pop
dec
lahf
test
and
sti
jo
fwait
das
sub
sub
in
xchg
repz
push
push
jl
mov
cmp
aam
and
inc
inc
xchg
mov
xor
push
mov
push
shrb
or
mov
xor
dec
pop
cmp
adc
dec
pop
push
jecxz
xchg
sub
pop
mov
cmc
scas
jp
dec
in
add
and
cmpsl
and
dec
push
or
xchg
pop
dec
fwait
or
sbb
ret
shll
pop
jp
push
fdiv
sti
mov
lahf
sub
mov
jb
xchg
fidivl
lret
ret
loope
cmpsb
mov
or
rcll
dec
xchg
cmp
xchg
lcall
pop
into
cmp
ja
stos
xchg
xchg
xchg
popa
lock
add
test
pop
adc
xchg
sbb
jns
in
adc
fistpll
bound
popa
cmpsb
imul
aas
out
aad
movsl
fsubl
ja
insl
repz
dec
push
push
sub
pop
mov
adc
xchg
adc
out
inc
jb
ds
insb
pop
stos
push
xor
jle
cmp
mov
popf
test
mov
lods
dec
dec
das
subl
push
ja
dec
std
mov
push
add
sti
push
movsb
in
push
jge
sub
popa
imull
cmc
test
repnz
jge
pop
dec
imul
mov
insb
adc
mov
sbb
sbb
cmp
add
mov
imul
or
cmc
stos
inc
jp
into
sbb
push
lcall
dec
lahf
std
pop
or
lods
fs
lock
ret
cmc
andl
adc
inc
test
sbb
imul
insb
fimuls
inc
sub
pop
icebp
xor
mov
cmc
decl
and
arpl
mov
inc
cli
stos
mull
adc
sub
popf
and
loopne
pop
loope
push
loopne
push
push
pop
sub
push
pop
arpl
jo
insl
addr16
cmp
sahf
js
imul
mov
jo
enter
in
clc
arpl
addr16
or
leave
sbb
int3
imulb
dec
or
push
dec
mov
lret
jbe
and
inc
adc
icebp
cwtl
sub
aas
lock
mov
stc
out
jp
inc
sbb
stos
jge
mov
lods
jecxz
fstpl
aas
jmp
sub
movsb
mov
xlat
push
les
jl
adc
dec
xor
clc
insb
sahf
fidivrs
mov
loopne
dec
cwtl
shlb
or
loope
xchg
mov
pinsrw
pop
ret
aaa
xchg
sub
xlat
add
lcall
xor
lret
jge
mov
mov
enter
jle
and
adc
or
orl
imul
sbb
pop
in
add
xor
sub
pop
and
lret
repnz
xchg
push
adc
jb
out
lcall
push
mov
mov
into
add
je
pop
dec
pop
push
push
dec
pop
mov
out
jp
ljmp
cmp
inc
ja
les
cmp
test
push
adc
add
icebp
fidivrl
and
xor
cli
out
mov
pop
dec
mov
or
les
lret
jp
fcomi
int
adc
mov
aas
aam
stos
scas
nop
int
adc
mov
push
xor
jle
inc
mov
push
inc
cmp
psubusb
and
sub
add
rcl
cmp
daa
cmc
jae
negb
jnp
push
and
sarb
adc
lcall
in
add
and
sub
mov
std
aaa
stc
xor
sbb
jae
cmpsl
push
xor
mov
test
decl
lock
rorb
out
stos
cs
inc
mov
sbb
iret
cmp
sub
sub
icebp
xchg
push
push
mov
fsubrl
mov
scas
in
inc
sbb
pop
adc
sub
sbb
repnz
cs
jg
adc
or
mov
pop
mov
mov
xchg
mov
jge
dec
lret
fidivl
xchg
inc
fildl
inc
push
cmp
loopne
dec
jae
pop
and
jno
add
enter
icebp
int3
stos
push
test
repz
outsl
mov
and
add
loope
cs
sbb
les
mov
cmp
jp
push
and
add
mov
mov
jp
fcomp
inc
dec
adc
cmpsb
in
mov
xor
pop
adc
sub
jnp
mov
push
ret
leave
add
add
push
lahf
pop
fimull
mov
lret
mov
pop
mov
loope
scas
jbe
push
push
xor
aas
mov
arpl
and
arpl
aad
mov
jmp
jmp
jb
mov
push
imul
call
jle
mov
pushf
jae
adc
sub
dec
sahf
mov
repz
mov
mov
mov
add
notb
sbb
or
imul
mov
or
or
testb
and
addr16
push
clc
mov
arpl
jb
int
pusha
cmp
imul
xchg
stos
pop
in
mov
jo
cmp
pop
dec
mov
dec
fisttpll
insl
or
lcall
xor
out
dec
mov
repz
outsb
cmc
stc
or
and
sbb
shr
jmp
lahf
pushf
jecxz
std
adc
stc
inc
outsb
addb
cmpsb
int3
sub
inc
jo
movsl
add
add
sbb
jge
dec
pushf
fimuls
cmp
pop
jns
data16
jle
xor
scas
inc
adc
lcall
lds
dec
cwtl
jmp
jno
pop
arpl
xchg
outsl
icebp
gs
loopne
xchg
jns
popa
and
xor
push
test
push
xchg
out
arpl
jp
cmpb
mov
pop
icebp
ds
mov
push
push
cmp
arpl
jge
jmp
hlt
jecxz
int3
ds
pop
and
scas
push
movsb
and
mov
cmp
or
push
jge
cli
cmp
mov
das
pushf
mov
rcrb
fsubs
and
les
in
int
jnp
das
incb
push
jg
mov
idivl
fmuls
cmp
or
movsl
lods
repnz
insb
adc
mov
cmpsb
dec
in
mov
or
push
dec
les
and
and
jae
push
xchg
xor
out
arpl
sbb
inc
mov
sbb
and
mov
adc
push
into
mov
jmp
adc
pop
cmp
popa
cmc
mov
movsl
pop
xchg
adc
jmp
fldl
or
jae
sub
adc
jge
or
scas
movsl
mov
stos
xchg
mov
mov
xor
jns
lret
jle
and
dec
das
jnp
pop
dec
adc
sub
push
sub
push
and
outsl
jne,pt
loopne
nop
movb
clc
mov
pop
lahf
loop
jg
notb
add
push
push
inc
dec
out
jg
jl
cwtl
jmp
lock
xchg
ss
jo
mov
dec
sbb
cmpl
pop
mov
popa
add
cli
pop
inc
pop
pop
xchg
mov
jmp
mov
test
add
jmp
sbb
fidivs
pop
xor
lahf
jge
dec
pushw
stos
and
repz
dec
adc
xor
out
std
mov
imul
xchg
ds
call
jl
inc
push
mov
call
add
inc
inc
and
inc
aad
cltd
repz
lock
outsb
inc
adc
mov
pop
out
int
mov
stos
mov
jbe
jmp
outsb
or
mov
inc
rcl
fsubs
in
jno
jne
xchg
sbb
mov
fistl
test
mov
xlat
cmpsl
pop
into
test
popa
int3
jno
jbe
mov
test
cmpsl
stc
jle
mov
jb
push
mov
ffree
outsl
and
inc
ds
mov
popf
out
push
cmpsb
fs
push
ret
xchg
dec
lcall
popf
addl
ret
les
push
jmp
dec
cmp
push
push
ss
in
jo
stc
or
nop
mov
xor
push
in
and
inc
add
cs
ljmp
push
mov
out
and
and
repnz
loope
push
shl
insb
dec
mov
xor
push
add
ja
xor
jae
rorl
addl
push
pop
pop
icebp
cmc
xchg
mov
adc
sahf
ds
sub
xchg
cmc
cmc
insb
xor
ret
lahf
jae
mov
mov
add
insb
data16
mov
stos
pop
and
adc
int3
dec
jb
push
pop
testl
push
push
outsb
hlt
mov
push
enter
inc
sub
pop
adc
adc
push
dec
ret
adc
push
int3
mov
out
sub
into
out
adc
jno
xchg
repnz
cwtl
adc
divb
rcrl
xchg
push
jne
mov
mov
mov
ss
les
pop
mov
and
fnstenv
push
repz
cmp
jle
xchg
mov
adc
shrl
orl
push
push
cmp
sbb
stos
icebp
mov
push
jge
rorl
movsl
jo
pop
add
or
push
subl
xor
ror
nop
ror
mov
add
ljmp
das
popa
fidivs
lds
filds
insl
and
in
xchg
mov
jae
mov
inc
test
out
aas
test
jecxz
pop
pop
pop
dec
jo
scas
inc
ljmp
sub
push
in
push
dec
push
and
cmpl
xchg
movsb
dec
xor
inc
test
subb
movsb
movsb
in
mov
xchg
pop
and
ss
scas
mov
mov
jb
test
push
stos
pop
ss
testl
lcall
push
iret
cwtl
sarb
scas
sub
jns
push
push
out
cmp
mov
je
js
and
adc
cmp
adcb
insl
push
ret
rorl
xor
adc
call
imul
pop
mov
test
jae
jp
cmp
mov
insl
out
xchg
xchg
ret
inc
les
cli
xor
pop
xorb
pop
pushf
ret
and
in
dec
adc
cmc
sbb
stc
out
adc
lcall
sbb
movsb
lock
mov
cmp
iret
inc
adc
sti
dec
stos
fldcw
xchg
dec
inc
pop
stos
push
aaa
sub
arpl
shlb
push
and
inc
dec
mov
and
xchg
imul
fistpll
popf
rol
rclb
and
or
inc
jns
outsl
rcll
inc
movsb
movsb
jmp
adc
into
rcrl
pop
pushf
pop
insl
inc
sbb
cmc
lock
lea
adc
adc
ja
rcrl
adc
jne
movsl
and
adc
cmp
lcall
push
adc
shll
insl
pop
sub
in
adc
fwait
outsb
jns
xor
cmpsb
loopne
jp
icebp
ja
and
jo
lods
pop
es
cmpsb
adc
add
ja
sti
jae
iret
push
adc
and
and
inc
dec
dec
dec
sub
dec
test
mov
add
inc
in
jmp
jbe
pop
test
fsubs
sbb
cld
cld
das
movsb
cltd
cld
imul
mov
int3
in
cmp
aad
jo
jmp
adc
mov
sbb
es
inc
push
test
dec
mov
sub
aas
jmp
jbe
push
adc
jmp
cs
nop
call
filds
push
cwtl
in
jmp
hlt
jg
mov
inc
ds
mov
pop
ret
xor
pop
or
push
jne
mov
sub
aam
in
xchg
push
inc
das
repnz
in
jne
push
xor
leave
dec
or
xor
fcompl
cmpsb
or
cmp
inc
ss
stos
xor
mov
ret
sub
jg
xchg
daa
sbb
stos
mov
aaa
inc
push
dec
fcoml
enter
pop
sbb
loope
ds
mov
mov
jo
lock
out
add
inc
cmpsl
lds
mov
xor
adc
rdpmc
popa
add
incl
push
mov
negl
fldl
in
push
imul
popa
sar
mov
mov
dec
jg
dec
shrl
jecxz
fildll
cmp
jne
push
pop
jne
push
pop
mov
mull
call
jg
hlt
ljmp
add
gs
pusha
jne
xchg
dec
mov
pop
neg
inc
xor
addr16
mov
add
cmp
call
test
orl
mov
aas
test
push
mov
add
adc
in
dec
mov
in
dec
add
jns
mov
cmc
jo
daa
or
mov
jmp
test
cmp
in
aad
mov
sub
sbb
pop
call
fsts
and
jo
pop
adc
test
adc
das
push
dec
inc
mov
ljmp
jecxz
scas
jne
pop
adc
push
or
cmpsb
jp
out
shlb
mov
out
jle
imul
sub
int
adc
push
outsl
and
call
aad
add
pop
loopne
insl
bound
cmpl
insb
sbb
inc
pop
divl
repnz
das
mov
or
clc
or
sti
xor
lea
or
xchg
mov
dec
mull
and
xorl
loopne
sbb
shlb
add
inc
shl
imul
adc
xchg
jmp
jne
loopne
mov
mov
xchg
pop
push
lock
dec
ljmp
push
and
and
rcrb
inc
inc
adc
mov
xchg
xor
inc
sub
testl
movsb
test
pop
sbb
cld
pop
jo
ljmp
out
in
adc
and
adc
pusha
inc
mov
fbld
xchg
mov
push
mov
fistpll
inc
movsb
in
ja
out
mov
mov
call
icebp
pop
jle
mov
push
sbb
js
movsb
pop
add
cmp
xchg
jg
outsl
ss
xor
dec
pop
pop
push
lcall
adc
mov
fdivrl
stos
jl
push
pop
and
pop
push
push
mov
push
dec
dec
stc
fs
in
push
add
shll
or
xor
pusha
inc
and
mov
inc
in
sub
xchg
sti
clc
push
inc
out
fsubr
lret
enter
sarl
dec
pop
dec
push
jbe
loope
fnstenv
es
daa
or
ds
fucomp
sbb
sti
jbe
xor
jg
xor
pop
adcb
xchg
xchg
or
fisubl
sbb
jmp
ss
test
movsb
jno
cmp
and
fsubl
pop
rclb
je
push
or
ficomps
adc
test
add
lea
inc
ret
cli
push
popa
clc
push
push
pushf
jno
mov
stc
in
jp
lods
inc
data16
ja
ja
lods
stos
imul
stc
dec
lods
clc
addr16
in
cmp
outsb
xor
mov
jle
sbb
mov
nop
lret
jl
jbe
addr16
push
push
in
mov
in
xchg
xchg
pop
je
sahf
pusha
push
pcmpgtw
xor
lcall
mov
jno
cmc
mov
insb
cs
add
js
in
xor
mov
hlt
gs
lock
aad
rolb
mov
es
pop
cmp
sti
or
adc
enter
dec
mov
int3
add
jae
inc
jecxz
mov
icebp
enter
mov
sbb
test
xchg
jbe
pop
xor
pop
in
fidivrs
subl
les
nop
lahf
fidivs
inc
pop
pop
fsubrs
jno
xchg
stc
fimuls
jno
loopne
aad
mov
fdivrl
into
mov
in
xor
jp
inc
inc
jne
add
inc
rclb
jbe
pusha
hlt
ljmp
inc
xor
lods
sahf
mov
jbe
cwtl
lcall
push
or
or
mov
int
or
lds
shll
xchg
call
inc
aad
pop
adc
je
inc
inc
out
jg
jecxz
or
mov
cmp
enter
add
inc
ljmp
pop
jl
aas
sahf
scas
xor
adc
push
inc
jo
movsb
nop
rcl
scas
fisubrl
gs
or
lret
roll
in
mov
inc
jns,pn
ss
shrl
insl
push
roll
jo
in
add
aas
pop
js
pop
aaa
mov
cmovle
push
inc
and
cltd
daa
aas
jg
or
scas
pop
pop
daa
stc
pop
repz
or
movsl
test
aam
insl
neg
pop
push
push
in
in
lea
mov
leave
or
testb
or
mov
lds
jecxz
mov
sbb
loope
es
dec
push
or
xor
add
adc
mov
or
clc
imul
xchg
adc
adc
add
out
cmp
pop
addb
stos
sahf
or
xchg
outsl
insb
or
out
pop
dec
or
pop
xor
xchg
push
fidivl
pop
xchg
in
jae
leave
jb
addr16
cwtl
orb
adc
aam
adc
fwait
cmp
adc
pop
jmp
xor
inc
addr16
jbe
data16
aad
inc
jbe
jmp
movsl
js
filds
std
sub
pusha
cmp
push
inc
pop
xor
addr16
xor
adc
or
mov
notb
lock
push
into
add
push
or
lods
es
xor
push
dec
add
cmp
cli
dec
jns
xchg
out
shrl
shll
stos
fs
out
roll
jle
aaa
and
xchg
adc
int
xchg
adc
dec
mov
cmp
push
femms
dec
pop
mov
jge
push
adcb
cmp
test
inc
push
mov
test
inc
add
mov
add
es
fwait
clc
or
sti
xor
or
pop
iret
lea
addb
out
mov
ficomps
mov
jbe
shll
sbb
lret
xor
push
push
sar
jns
adc
sbb
fisttpll
xor
pop
in
xor
ror
loopne
adc
es
push
mov
cmp
jecxz
push
fidivl
adc
inc
in
aas
mov
divb
lret
cmpsl
inc
cmp
adc
loopne
push
cmp
jae
add
xlat
push
in
adc
shll
je
xchg
fdivrl
dec
mov
fucom
popf
dec
and
ret
push
fmull
and
loopne
adc
aaa
jecxz
cs
sti
add
sbb
lock
xchg
mov
push
in
pop
iret
jbe
cmpsl
and
and
fistps
sbb
mov
addr16
mov
jecxz
or
jle
adc
jae
mov
pop
insb
xlat
mov
outsl
insb
in
fucomip
jno
stos
pop
pusha
ss
cmc
inc
daa
mov
enter
out
into
push
pop
inc
cmp
mov
adc
lcall
xor
inc
pop
je
popa
and
mov
adc
shll
jbe
outsl
nop
fwait
shll
inc
fsubrs
popf
lcall
add
inc
cwtl
pop
pop
leave
cmp
sahf
sub
mov
inc
add
sub
pop
stos
in
jecxz
and
sbb
mov
adc
int3
xchg
cmp
and
and
fildll
sbb
mov
push
inc
mov
jecxz
or
jle
adc
jl
mov
sbb
mov
jb
in
jb
stos
pop
pusha
sub
ljmp
stos
push
out
into
dec
pop
jnp
ds
inc
mov
xor
inc
mov
pop
xor
sub
push
lahf
push
dec
les
pop
imul
sbb
mov
fistl
pop
jg
pop
dec
push
call
ja
mov
adc
cmpl
sbb
push
add
jno
aaa
rcrl
repnz
adc
or
jno
rol
fidivl
cmp
cmc
gs
loopne
pop
jns
mov
mov
fildl
aad
arpl
add
add
lods
jl
into
and
or
add
xchg
shlb
lea
inc
jne
pop
aad
sbb
dec
daa
inc
daa
scas
jp
ror
pop
in
test
test
lock
jbe
jne
je
jne
into
out
cmc
or
or
jns
into
daa
push
or
or
mov
cs
daa
cmpsl
dec
pop
in
inc
inc
fildll
adc
mov
mov
sbb
xchg
add
inc
inc
fcmovnbe
mov
cmp
shl
movsb
or
es
mov
mov
inc
std
and
je
jmp
xor
xchg
push
pop
jge
jb
sahf
sbb
fsubrl
lcall
jae
shufps
push
sub
lea
jmp
inc
stc
dec
sub
jnp
pop
enter
mov
out
xchg
mov
fcom
cmc
scas
cmp
das
out
cmpsl
jo
xor
shr
aad
lret
mov
lock
pop
pop
and
jg
adc
fadds
and
ds
sub
stos
jne
sub
cmp
inc
rolb
out
jnp
jbe
jnp
cmp
cmpsl
push
dec
clc
dec
inc
xor
lods
mov
pop
sarb
lds
mov
call
call
jae
lock
adc
out
xchg
into
or
ret
cmp
cmp
sbb
js
fwait
push
in
push
aam
lcall
lcall
adc
push
dec
aas
dec
push
sub
enter
jle
jno
int
movsb
loopne
outsl
in
cmp
sbb
sub
mov
push
andl
mov
hlt
loope
mov
xor
mov
and
cs
fsubs
cwtl
out
fbstp
leave
dec
cmp
enter
inc
cs
icebp
ficoms
dec
icebp
mov
mov
xor
loope
ja
dec
xchg
push
cmc
xorl
sub
out
loope
les
mov
push
mov
jecxz
sub
shrl
stos
xor
inc
loop
scas
je
cmpsb
adc
movsb
gs
xor
rol
mov
hlt
adc
adc
hlt
gs
bound
sbb
jmp
insb
adc
sti
jb
jno
pop
cmp
push
pushf
inc
adcb
and
movsb
sti
push
enter
call
inc
jb
fwait
sub
xchg
mov
add
clc
adc
aad
adc
jge
mov
inc
in
pop
fs
int
mov
and
into
inc
out
lahf
xchg
sub
adc
inc
fsubl
mov
rolb
in
push
maxps
js
rcll
add
xchg
aas
stos
sbb
xlat
sbb
nop
jmp
ficoms
mov
push
cmc
jle
adc
jle
inc
sbb
mov
sbb
mov
fildll
inc
sbb
shlb
movsl
in
adc
ret
inc
bnd
popa
stc
xor
fnstcw
out
jbe
jns
je
nop
das
je
je
add
stc
inc
mov
jecxz
pop
leave
loopne
and
out
sub
dec
dec
cltd
and
sub
jmp
call
test
inc
lea
inc
push
jo
xor
pop
sub
cmc
gs
pusha
pop
fstpt
xor
inc
iret
dec
ss
cmc
cmpsb
inc
popa
rclb
imul
iret
push
scas
sbb
out
mov
adc
idiv
push
sub
imul
mov
mov
in
add
dec
dec
cld
inc
mov
movsb
sub
sbb
add
push
jo
in
pop
mov
mov
jb
bound
add
xlat
pop
push
lret
movsl
pop
xchg
popa
ss
js
decb
sub
dec
ret
mov
hlt
outsl
fwait
sbb
lock
jb
outsb
mov
pop
adc
daa
das
jmp
stos
stos
and
mov
lock
or
pop
inc
inc
sub
xor
clc
dec
and
pop
cmp
adc
mov
xor
nop
sarl
and
aaa
leave
jno
mov
and
push
add
xchg
mov
or
cmp
pop
test
scas
out
je
push
dec
daa
mov
das
mov
filds
aad
xchg
bound
pushf
mov
popf
fdivs
push
or
lods
mov
clc
cmp
adcl
fstpt
frstor
adc
jno
popf
sbb
call
inc
sub
add
inc
adc
xor
ja
mov
sbb
in
mov
subl
jmp
fs
in
pop
or
aas
sti
xchg
sub
jmp
mov
test
mov
pop
call
dec
add
mov
jmp
pop
mov
dec
aaa
sbb
add
into
lods
lahf
jb
mov
mov
fistpll
mov
mov
cmp
test
gs
insb
mov
add
jecxz
fidivl
xorb
mov
je
mov
mov
pop
call
jae
mov
dec
push
cmpsb
sbb
clc
or
inc
sbb
jo
jo
add
pop
cmp
and
lods
pop
cmpsb
test
pop
dec
addr16
add
pop
jmp
cmp
or
lret
jge
xlat
test
popf
icebp
negl
mov
pop
arpl
push
dec
xor
mov
xor
xchg
jo
mov
xor
inc
pop
call
pop
or
ja
push
and
daa
xor
jns
pop
mov
push
inc
mov
cmp
mov
test
je
inc
fldl
sbb
adc
lahf
jnp
call
add
xor
ja
push
pop
outsl
mov
and
test
sbb
into
stos
mov
inc
xchg
mov
in
fistl
xchg
popf
mov
dec
lahf
and
inc
outsl
pop
pop
sub
dec
cmp
or
lret
jge
xlat
test
out
notl
mov
inc
add
mov
pop
push
xor
jne
in
ja
add
jns
jno
repz
mov
mov
adc
pop
pop
inc
mov
imul
imul
push
adc
arpl
xor
cltd
lahf
stos
pop
inc
add
out
mov
add
dec
sbb
imul
outsl
mov
adc
inc
test
loopne
lods
adc
mov
sbb
data16
hlt
test
add
fstl
xchg
pusha
or
mov
sub
mov
fiaddl
mov
jns
jg
loopne
dec
outsl
adc
pushaw
mov
mov
fmuls
rorl
dec
sbb
add
xchg
cmpsb
mov
xlat
xchg
dec
and
adc
dec
jmp
popa
pop
mov
push
add
jecxz
and
inc
jnp
or
sar
push
inc
jmp
cmp
mov
data16
mov
xchg
push
mov
in
lahf
fwait
imul
adc
add
sbb
inc
push
xchg
push
mov
xlat
or
mov
lds
and
fisttpl
mov
mov
lret
mov
scas
int3
bound
inc
insl
mov
xor
sti
shrb
call
cwtl
rcl
in
pushf
cmc
in
je
mov
push
push
bound
cmpsb
jae
xor
vmread
add
dec
xor
jae
es
add
push
fwait
xlat
clc
jge
rorb
push
movsb
mov
push
push
loope
push
and
mov
push
cld
xor
jge
cmpsl
movsl
or
mov
in
push
mov
pop
jp
push
add
mov
cmp
mov
xor
dec
mov
sub
push
mov
add
xchg
xchg
bound
xor
push
mov
call
mov
add
jp
adc
sbb
mov
cltd
fwait
sub
iret
add
fildl
icebp
shl
jg
movsb
xchg
xchg
subl
popf
mov
xor
push
xor
xchg
gs
adc
arpl
sub
adc
sbb
cmp
mov
and
mov
out
fwait
or
in
orb
mov
push
out
and
add
or
mov
mov
ljmp
push
xchg
dec
insb
out
pusha
loopne
imul
push
push
mov
call
mov
jno
adc
iret
and
jne
popf
fisubs
fsts
inc
mov
ds
test
or
mov
cmp
shl
pop
pop
cwtl
addr16
xchg
inc
stc
mov
cmp
test
or
popa
dec
inc
data16
aaa
xor
cmp
xlat
sbb
mov
imul
outsl
add
jmp
inc
ja
mov
es
or
loopne
rcl
out
in
pusha
or
fstpl
les
movsb
and
pop
add
fdivrl
pusha
icebp
add
push
repz
arpl
pop
mov
xchg
sbb
mov
cmp
add
imul
insb
pusha
adc
mov
pushf
mov
movsl
mov
sahf
xor
and
add
inc
js
add
add
std
fucom
sub
or
out
pusha
test
push
cwtl
imul
dec
adc
popa
pusha
int3
popf
testl
push
into
psllq
mov
cmp
mov
in
mov
add
cmc
inc
sarl
sub
push
push
mov
out
test
or
cmpb
inc
mov
imul
gs
scas
or
pusha
aas
aad
mov
push
cmp
out
dec
in
out
push
adc
adc
addb
or
fwait
add
scas
push
shlb
jge
pop
sbb
pusha
test
dec
mov
ss
mov
testb
pusha
add
or
insl
faddl
pop
fs
nop
pop
sbb
add
mov
pusha
mov
lret
push
mulb
pop
mov
xchg
ljmp
pusha
les
push
hlt
mov
imul
mov
jg
in
add
jnp
out
pusha
jl
das
push
jmp
xor
add
ficoml
jp
jmp
lret
xor
nop
mov
push
xlat
imul
sbbb
iret
push
push
nop
mov
test
mov
pop
dec
iret
jno
mov
jns
cltd
or
mov
test
daa
push
xchg
daa
test
fildl
pop
jo
jnp
and
roll
cld
repnz
out
sti
aam
add
orb
lret
inc
sahf
das
jae
loopne
aaa
daa
cld
adc
mov
aad
jae
xor
mov
enter
imul
cli
add
dec
mov
std
pop
testb
cmp
jo
mov
into
insb
jg
jge
dec
iret
or
and
jl
loop
popf
and
mov
mov
fildl
pop
or
xlat
mov
repz
xlat
xor
pop
ret
gs
adc
lods
xor
leave
cs
jb
mov
pop
xor
mov
std
imul
dec
js
cmpsl
movsb
gs
xor
sub
and
xor
gs
jle
cmp
pusha
into
rcll
out
andb
testb
shl
xchg
sbbl
sub
mov
sahf
pop
rcrl
fwait
adc
or
adc
stc
sbb
push
in
mov
test
mov
xor
adc
xchg
in
fs
popa
push
pop
mov
cs
xor
mov
pop
pop
jno
enter
lock
and
push
pushf
add
stos
mov
xchg
add
inc
pop
loope
lret
and
xchg
std
push
mov
fnstsw
int
mov
data16
icebp
icebp
dec
mov
adc
inc
imul
cmp
out
cmc
ja
adc
sbbl
xor
pop
addl
test
cmc
daa
stos
jae
call
movsl
cmp
shlb
daa
imul
test
pop
icebp
das
cltd
andl
mov
inc
jno
mov
mov
pop
inc
fiadds
dec
push
cmp
in
adc
mov
inc
mov
add
stos
stos
or
cmp
add
fwait
stos
pop
imul
das
mov
jmp
jne
push
xchg
dec
cmpsl
pop
mov
and
lock
cmpl
fs
adc
hlt
cltd
or
sbb
dec
xchg
sbb
dec
adc
push
mov
cwtl
jno
movsl
cmp
xor
mov
dec
nop
je
xor
or
stos
jg
xor
mov
iret
xor
push
and
jnp
mov
scas
and
adcl
xor
sub
fwait
jnp
gs
addr16
and
in
jge
push
popa
mov
and
cmp
dec
sbb
xor
notb
sbb
inc
mov
sub
sbb
sbb
xor
jb
xchg
sahf
and
stos
ja
fistps
aad
mov
cmc
popw
push
sbb
jno
test
inc
ud0
lahf
mov
icebp
leave
cltd
test
addb
fs
sub
inc
pop
lcall
fidivrs
pop
hlt
jae
dec
fcmovb
ja
adcb
or
inc
fnstsw
push
insb
jne
inc
push
rol
daa
movsb
adc
jmp
push
lods
and
adcl
xor
sub
ljmp
movsl
lret
fcompl
jg
mov
nop
icebp
mov
sbb
out
ljmp
cmpsb
int
ss
push
xchg
and
mov
aas
es
jle
cmpsb
das
sbb
cmp
movsl
dec
pop
cli
movsl
loopne
fdivrs
dec
push
pop
hlt
adc
aaa
xor
sar
add
sbb
sbb
mov
xchg
sbb
jle
gs
push
or
arpl
pop
xor
push
jbe
int3
insb
scas
xor
lds
add
dec
adc
and
cmpsb
adc
mov
add
ret
mov
ja
cs
inc
sbb
xor
fisttpl
cmpsl
push
fldl
push
shrb
mov
jge
push
sbb
mov
cmp
mov
ss
int
add
out
aaa
and
jo
xchg
mov
sub
mov
adc
mov
mov
lahf
inc
pop
dec
enter
ret
in
add
pop
cwtl
test
adc
orl
pop
and
insb
ss
cmp
add
into
push
dec
into
cmp
and
lock
sbb
inc
xchg
or
movsl
aad
sub
imulb
cmp
dec
fimuls
xchg
adc
repz
mov
sub
mov
int
dec
xor
mov
aad
loop
mov
test
ss
jno
pop
mov
sbb
and
sub
jae
notl
and
daa
outsb
adc
iret
loop
lret
or
ja
xlat
mov
fcmovne
shlb
cmpsl
lock
cld
pop
or
ljmp
mov
jg
test
dec
pop
adc
cmp
and
push
lret
xor
or
or
lret
xchg
int3
dec
push
into
rcll
adc
popf
negl
adc
jno
adc
sub
xor
cmp
scas
notb
stos
push
sub
mov
lds
out
sahf
xor
insl
mov
sbb
aas
pushf
sub
pop
mov
repnz
jns
mov
dec
bnd
mov
xchg
dec
cmp
push
shlb
out
insb
or
mov
cwtl
sbb
push
and
data16
repnz
sub
call
adc
and
mov
inc
jmp
sub
inc
jp
leave
mov
adc
into
or
arpl
push
mov
dec
mov
stos
pop
enter
jbe
lea
sbb
imul
in
fdivl
push
add
mov
mov
sbb
xor
cmp
stc
nop
fimull
imul
inc
enter
dec
insb
ficoms
adc
sahf
imul
cmp
imul
fs
leave
xor
in
ds
dec
xor
sub
sbb
das
ds
repnz
jmp
xchg
jge
jnp
jl
mov
xor
fsubrs
push
sbb
or
cmp
xorl
cmp
sbb
cltd
mov
fildll
daa
push
cmp
jnp
mov
pop
mov
pop
scas
test
jp
out
sub
jb
jmp
loope
lret
scas
jo
jmp
outsb
dec
in
sub
sub
xor
add
and
test
or
mov
das
dec
mov
ljmp
jmp
and
cmp
xor
jns
or
xchg
add
mov
xchg
repnz
nop
loope
test
sub
sbb
lods
push
dec
popa
inc
pop
jge
xor
cmpsb
fdivrs
cltd
add
xor
testb
imul
dec
lea
jo
cli
into
aaa
imul
sub
pusha
aaa
cmp
mov
xchg
in
iret
xchg
test
sub
and
inc
ljmp
xor
ja
ja
jge
xor
in
add
or
loop
push
arpl
inc
fwait
and
dec
sbb
call
es
push
test
mov
aad
dec
inc
sbb
mull
in
das
test
xchg
jb
imul
adcl
and
jne
add
inc
pop
and
ficoms
cwtl
pushf
adc
fnstcw
add
movsb
xchg
sbb
push
lock
insb
in
fsubrl
popa
test
aaa
fs
push
lock
mov
or
fists
jnp
mov
mov
xor
fldcw
stos
add
sbb
daa
and
adc
push
cld
add
pop
cld
or
gs
xor
insl
cld
cmp
jg
aad
cld
lds
lahf
cld
cmc
daa
scas
cld
in
mov
cld
test
mov
out
cld
movsl
daa
jmp
push
mov
inc
inc
pushf
pop
inc
jne
das
inc
gs
aas
inc
adc
pushf
pop
inc
xor
pushf
fwait
inc
icebp
pushf
stos
inc
loope
mov
inc
sbbl
inc
call
ja,pt
and
and
jns
sub
lock
adcl
pop
jg
rcrb
test
pop
movsb
test
pop
les
mov
shrb
data16
mov
je
popf
xchg
push
cli
xchg
sub
fstl
repz
xchg
les
xchg
scas
les
xchg
push
xchg
cwtl
mov
jp
and
mov
loope
mov
loope
mov
push
dec
mov
push
pop
and
lcall
sub
lock
xchg
test
test
pop
data16
pop
roll
cmp
outsb
gs
outsb
dec
cmp
pop
stc
cmp
sbb
dec
out
sub
sbb
cwtl
or
jb
leave
cmp
adc
push
adc
repnz
outsb
enter
lds
icebp
and
jge
nop
and
fwait
cltd
dec
lret
xchg
sub
repnz
jns
outsl
int3
mov
addr16
ja
or
popa
adc
leave
aam
mov
loopne
mov
mov
or
jns
shll
cld
daa
xchg
cld
idivb
inc
int3
pushf
cmpsb
inc
stos
lcall
sbb
test
in
jb
test
ljmp
mov
repnz
repz
pop
xor
leave
andb
or
ss
push
pushf
bound
pushf
xchg
inc
lcall
pop
pop
cmc
and
scas
orb
sbbb
xchg
adc
pop
and
cld
leave
mov
jl
daa
cmp
cmp
int
mov
cwtl
xor
sbb
inc
xchg
mov
mov
loope
mov
lods
ret
repnz
dec
jle
leave
ja
and
int
sbb
and
and
adc
ja
sbb
jl
rcrl
lret
jg
scas
lret
dec
cltd
popf
sarb
inc
jo
and
jo
and
jo
and
jo
and
jo
and
pusha
xchg
int3
xor
outsl
mov
sahf
inc
roll
push
cmp
out
sbbb
sub
aad
je
jge
test
movsl
outsl
leave
rcrl
xorb
mov
cmp
pop
sti
aas
jmp
sbb
in
inc
mov
jmp
pop
jb
test
jne
sub
jp
inc
test
xor
test
jmp
ret
stos
push
xchg
shrl
mov
xchg
and
ret
dec
jmp
cmpb
test
or
cmc
and
data16
dec
cs
bound
and
test
cs
cmc
mov
cs
cmc
out
mov
clc
pop
pop
pop
sub
repz
sub
repz
aaa
repnz
fmuls
sbb
sub
cmp
cmp
ljmp
and
jo
and
jo
and
jo
and
push
test
test
pop
test
das
test
aas
test
leave
pop
adc
leave
jg
aad
cmp
outsb
adc
rclb
daa
xlat
cld
lea
out
mov
cltd
xor
push
sbb
cmp
outsb
cltd
and
cmpb
jmp
sub
cmc
es
fdivs
test
cs
pop
sbb
cmp
outsb
repz
outsb
jecxz
add
cmp
outsb
ret
cmp
outsb
xor
outsb
and
outsb
adc
js
jge
and
arpl
push
push
jbe
fs
mov
ja
sub
adc
leave
dec
adc
leave
pop
adc
loop
mov
cmp
outsb
xor
outsb
and
outsb
adc
outsb
add
outsb
jae
mov
arpl
push
push
mov
arpl
arpl
jo
mov
xchg
push
les
xchg
xor
fnstenv
and
fmul
enter
test
imul
jo
and
push
hlt
int
or
orl
sti
dec
and
mov
sub
jmp
in
setl
fistpl
inc
imull
enter
rol
setbe
popa
dec
bound
cltd
jo
fwait
cltd
and
repz
sub
jmp
out
dec
jecxz
cmp
fistl
int
and
jo
and
jo
and
jo
and
jo
and
popa
mov
and
scas
and
cmpsl
and
and
jo
and
add
shll
or
lret
and
ret
and
jo
and
jo
and
jo
and
jo
and
pusha
mov
insb
jo
and
and
and
and
and
shll
or
lret
and
ret
and
cmp
in
das
and
jo
and
jo
and
jb
xchg
sbbb
test
sbb
pop
sub
pop
popa
test
pop
jne
and
test
pop
test
pop
cltd
test
pop
roll
roll
pop
loope
mov
pushf
and
inc
jnp
xor
pop
mov
jb
test
fbstp
test
iret
jb
test
jb
dec
or
movsl
pop
cmpsl
or
lock
subl
test
xlat
inc
test
pop
dec
test
pop
insl
test
pop
xchg
test
pop
popf
test
pop
movsl
test
pop
lods
test
pop
mov
xchg
pop
in
mov
dec
lret
xchg
sbb
pushf
or
and
imul
add
pop
cs
gs
jno
ret
cmc
cltd
cmp
pop
int3
rcrb
daa
aad
mov
add
pop
push
daa
or
cld
inc
daa
sbb
cld
pop
cld
aaa
daa
popa
cld
aas
daa
imul
out
inc
and
mov
in
ja
and
imul
inc
add
imul
movsb
xchg
test
sub
add
pop
repz
jl
sub
repz
xchg
push
aaa
mov
xor
push
mov
sub
lock
mov
push
pop
dec
test
pop
push
test
pop
pop
test
pop
pusha
test
pop
push
test
pop
js
pop
xorb
push
cmp
xorl
sbb
cld
jae
inc
cld
out
call
test
xchg
and
sarb
dec
das
out
push
popa
insb
mov
adc
leave
out
pop
mov
cld
jns
push
cld
rolb
adc
mov
cld
imul
cld
sub
cmc
pop
xchg
xor
rclb
into
sbb
dec
nopl
inc
cmp
lea
and
mov
jg
out
fsubrs
mov
or
mov
pop
adc
lret
aam
push
lret
xor
or
mov
loop
mov
sub
mov
mov
test
jl
jno
cwtl
dec
push
sbb
dec
iret
xchg
stos
notb
movsl
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
in
aaa
ja
adc
cmp
outsb
push
cmp
jbe
adc
dec
push
xor
dec
jo
adcb
jo
insl
aas
loope
mov
loope
mov
loope
mov
andl
and
cmpsl
aaa
out
lret
add
jns
push
and
adc
cmp
jge
sub
xchg
fdiv
mov
mov
adc
xor
cmc
xchg
add
jb
test
mov
and
in
pop
and
xchg
ja
and
mov
cltd
dec
lret
cli
xchg
aas
xchg
lret
xchg
repnz
jecxz
adc
ucomiss
dec
and
ljmp
sbb
dec
xor
loopne
add
sbb
sbb
dec
int3
sbb
dec
aam
add
cs
xor
mov
or
scas
leave
stc
subb
jle
mov
jo
pop
sbb
repz
dec
repnz
xor
jecxz
cmp
jge
add
adc
sub
rcrb
dec
fs
xorl
lahf
or
inc
cmpsl
dec
out
pushf
outsl
aas
fildll
jo
and
sub
jp
xor
ja
push
fists
pop
sub
shll
iret
mov
movsb
daa
movsl
ja
and
cmp
imul
leave
leave
or
inc
cwtl
das
inc
lds
int3
lret
pusha
enter
adc
and
jg
cmp
outsb
or
outsb
jae
mov
data16
outsb
push
and
inc
pushf
sbb
pushf
xor
push
std
fwait
push
dec
loopne
push
sbb
jg
shl
mov
iret
lock
inc
leave
or
fpatan
movsb
sub
mov
leave
adc
dec
xchg
cltd
xor
sbb
lret
das
cltd
clc
lret
daa
cltd
ror
cltd
enter
rol
hlt
mov
xor
test
cld
fbld
lcall
daa
cld
popf
daa
xlat
cld
lea
out
mov
cmp
pop
pop
xchg
add
jge
int
push
jno
or
sbbb
subb
cmp
loop
xor
bnd
and
jo
and
jo
and
jo
and
lods
sub
pop
pop
pop
pop
test
daa
test
outsl
jl
daa
inc
cld
sbb
js
or
leave
xchg
sbb
cmp
adc
or
and
imul
cmp
push
orl
sub
pop
and
insb
test
sahf
out
icebp
sahf
es
xchg
sahf
inc
int3
and
test
pop
jl
sub
inc
adc
imul
sub
adc
or
mov
push
dec
mov
addr16
and
jb
in
ja
xor
push
fnstsw
xor
mov
jnp
sbb
rolb
xchg
sahf
fnstenv
and
cmp
insb
addb
pushf
outsb
addr16
leave
and
push
iret
roll
outsl
test
loopne
shlb
xchg
jae
js
jl
fs
mov
jmp
xor
fnsave
mov
mov
imul
mov
mov
and
sub
and
xchg
in
out
mov
inc
xchg
xchg
jl
sub
loop
frstor
push
jb
in
fcompl
test
or
mov
testl
xor
sbb
mov
bound
pop
mov
repz
pop
mov
jb
rcrb
out
sub
dec
stos
aam
mov
adc
movsl
mov
loope
jnp
pop
and
sbb
and
bnd
loope
sahf
cmp
mulb
pop
es
insb
xchg
and
daa
dec
repz
dec
call
in
and
cltd
out
call
cmc
hlt
and
jge
cltd
loope
outsb
xchg
push
inc
je
repz
xor
and
lcall
lret
test
movsb
xor
rcll
aas
xorb
jns
xchg
pop
adc
add
push
sub
ficoms
mov
fs
daa
adc
leave
lea
adc
leave
mov
call
push
dec
nop
adc
add
sub
cmc
sub
mov
ja
xor
jae
sub
mov
dec
push
mov
adc
mov
inc
insb
and
cmpsl
test
fistl
popa
leave
push
adc
add
lods
cmpsl
sbb
sub
call
in
ja
and
mov
jne
cmpsb
xchg
cmp
mov
popf
sub
test
mov
jae,pn
xor
mov
pop
aas
out
icebp
lcall
mov
les
xchg
lods
ss
mov
loope
mov
loope
mov
and
cmp
divb
and
push
orb
ja
movsb
out
sub
jmp
push
or
testl
fwait
push
add
push
lret
pushf
int3
cmp
stos
dec
das
or
lcall
fcmovb
jnp
fcompl
jnp
bound
icebp
lahf
scas
jbe
jns
leave
add
out
imul
cmp
jne
aad
xchg
sbb
mov
in
xor
sbb
or
iret
pop
xchg
cmpsl
xchg
sahf
shll
outsl
ja
and
mov
cmc
shlb
jb
inc
sub
dec
push
aad
pop
and
cmc
add
and
shl
mov
cmp
lea
mov
pop
xchg
shrb
addr16
jg
cmp
outsb
pop
push
mov
cmp
scas
sbb
ja
and
leave
xor
outsl
leave
cmp
pop
hlt
inc
outsb
test
jge
test
xor
dec
aad
jne
and
subl
jg
mov
icebp
dec
push
or
leave
or
inc
loop
mov
cmp
outsb
sahf
and
adc
xchg
fwait
sub
lock
mov
jae
mov
dec
push
push
stc
in
sbb
popa
pop
ds
test
int
outsl
cmpsl
inc
pop
xchg
daa
into
cld
mov
ljmp
popf
push
test
in
pop
mov
mov
sub
sub
dec
or
lahf
xchg
mov
xchg
loopne
add
mov
mov
pop
std
lock
mov
lods
int3
fisttpll
pop
subb
jecxz
xor
mov
and
lock
cmp
pop
shrb
cmc
loop
cmpsb
cmc
cli
and
adc
jbe
sub
outsb
out
jne
xor
pop
loopne
sbb
xor
in
les
jo
aam
adc
in
sub
mov
ret
dec
sahf
aaa
pop
lret
fcomps
out
lret
and
mov
out
mov
icebp
jae
pop
imul
jns
mov
mov
nop
mov
repnz
mov
sub
out
jl
sub
mov
les
in
cwtl
loop
xchg
pop
outsb
addb
test
out
pushf
int3
and
clc
pop
sahf
hlt
int3
add
and
mov
movsb
test
lds
mov
loope
jnp
or
loope
cs
add
rolb
cvtps2pi
dec
mov
and
lahf
sub
rol
mov
xchg
jmp
jbe
movsb
pop
inc
push
xor
pop
xorb
sahf
stos
add
leave
out
push
test
repnz
cmp
adc
cmp
test
xchg
cmp
outsb
mov
jo
inc
inc
xor
xchg
icebp
sbb
test
ja
in
ret
loope
jae
aam
adc
imul
push
mov
loope
mov
loope
lret
lods
jo
and
cmp
jb
sbb
nop
or
add
pop
cs
insb
sbb
icebp
jle
sub
and
ds
lea
add
fstl
xor
cmpsl
push
frstor
xchg
lret
sbb
outsl
mov
sub
push
ficomps
test
sbb
dec
aas
sub
pop
test
ljmp
mov
or
lods
jns
jp
xor
ror
arpl
jne
mov
pop
int
insb
leave
psubb
leave
inc
adc
push
js
shrb
pop
adc
mov
outsl
xor
inc
pop
mov
add
test
xor
sarl
shlb
pop
sbbl
aas
adc
add
and
or
dec
mov
insb
loope
mov
loope
lds
push
test
popf
stos
xchg
inc
testl
cltd
mov
inc
mov
insl
jl
insb
push
in
cwtl
out
lds
lock
ss
insb
mov
jmp
inc
mov
jo
int
add
sbb
push
jnp
rcll
ja
and
xor
and
mov
inc
lds
dec
jle
lahf
and
and
jae
or
popf
sub
pusha
xchg
mov
pop
and
sub
mov
push
test
subl
inc
aam
jg
mul
cli
adc
mov
shl
rolb
shlb
imul
or
xchg
cmp
out
lods
xor
or
pop
fldl
leave
xor
xchg
sbb
pop
pop
icebp
xorb
out
push
jne
popa
leave
inc
adc
leave
imul
leave
movsb
adc
leave
mov
mov
jns
jae
mov
pushw
int3
daa
sahf
fcmove
sbb
push
fisttpl
dec
imul
mov
int
mov
lahf
xchg
dec
psubsw
pop
repz
in
jo
insl
adc
loope
int3
test
or
subl
mov
push
add
iret
cmp
mov
and
mov
jecxz
add
test
js
jb
test
and
sbbb
xchg
jno
lret
xor
mov
mov
dec
add
in
test
adc
push
xchg
cmc
les
rol
inc
xchg
fs
inc
mov
loope
in
cltd
pop
adc
addl
dec
push
popa
fs
in
sarl
inc
xchg
pop
rcll
arpl
cltd
jmp
or
xor
nop
arpl
mov
xchg
xor
lea
cmp
gs
int
mov
xchg
pop
push
sbbb
mov
sbb
dec
sbb
sbb
test
outsb
xchg
dec
sahf
cmc
lock
mov
adcb
jnp
or
cmp
sahf
insl
cmp
js
movsb
and
jns
andl
and
adc
mov
adc
xor
add
or
nop
lock
les
jmp
imul
and
jne
repz
sub
mov
cmp
jno
daa
loope
mov
and
dec
xchg
pop
mov
in
bound
sarl
test
jo
inc
bnd
mov
inc
int3
scas
sahf
push
int3
sub
or
lret
dec
cltd
cltd
shll
and
push
addr16
or
add
cli
pop
mov
xchg
and
xor
lret
in
imul
loopne
test
aaa
stos
cmp
xchg
vandnps
and
and
push
xor
orl
xchg
jnp
or
xor
lret
xchg
pop
push
repz
outsb
push
and
add
cld
mov
or
pop
rolb
xchg
and
mov
test
add
es
in
mov
and
in
ja
sahf
mov
sbb
arpl
cmp
pop
jmp
subl
xor
xchg
push
inc
cli
adc
loope
mov
loope
mov
loope
mov
xchg
adc
and
arpl
push
cld
cmp
jno
sub
add
push
jl
push
scas
jae
push
and
sbb
jl
daa
loope
mov
pushf
cmp
insl
pop
out
sti
and
mov
int3
jb
lods
int3
jp
cmp
jns
xor
mov
xor
enter
ror
and
xbegin
imul
adc
leave
aam
cmpb
mov
mov
loope
adc
and
jb
sub
push
bnd
cltd
adc
leave
pop
adc
mov
mov
shll
sbb
out
xor
xchg
xchg
sbb
pop
ss
jl
in
xchg
jbe
cmpsb
mov
insb
pusha
push
fs
cli
jecxz
sahf
or
push
jno
hlt
inc
loopne
shrl
out
sahf
faddl
and
mov
out
or
sbb
mov
repz
xchg
mov
cmpsl
lcall
test
cmp
loope
mov
loope
mov
loope
mov
jne
mov
out
lahf
sub
imul
cmpsb
nopl
rcl
int3
inc
stos
pop
pop
pop
push
lds
loop
cmp
xchg
test
pop
lahf
test
aaa
jg
xchg
inc
push
adc
xchg
or
lock
adc
sub
adc
sbb
sbb
addr16
cmc
xchg
jecxz
pop
xchg
xchg
lds
arpl
pop
das
cmc
jns
xlat
lock
in
fldl
loope
lahf
lahf
out
push
sub
jae
dec
pop
adc
sbbl
pop
daa
repz
cmp
mov
sahf
sbb
leave
andl
fucom
sbb
frstor
push
inc
mov
jb
test
pop
sbbl
cmpl
mov
jecxz
and
lds
loop
cmp
or
leave
test
jl
sub
and
loope
loope
sbb
pop
lock
pop
lret
xor
int3
pmullw
cmp
in
in
xchg
sbb
ja
or
movb
pop
repz
mov
sub
cmp
mov
arpl
loope
pop
test
push
jmp
popf
dec
and
mov
push
nop
dec
mov
into
mov
lods
je
test
inc
cmp
jae
inc
cld
dec
daa
and
shll
mov
loopne
aas
fs
shrl
bnd
dec
je
ret
out
adc
shlb
add
filds
xor
xor
push
cmp
lds
inc
inc
jo
test
inc
jl
daa
sbb
das
adc
daa
cltd
xchg
lret
inc
cmpb
and
jae
mov
xor
xchg
not
xchg
rolb
cmc
inc
push
adc
inc
aad
or
mov
dec
xorb
lahf
sub
mov
outsl
rclb
pop
sbbl
loope
xchg
es
hlt
int3
ds
fidivrs
jns
sbb
das
cmpsl
fwait
repz
jns
filds
xchg
pop
test
add
xor
inc
dec
sbb
pop
xchg
test
pop
aas
xor
mov
cmp
jnp
rcl
adc
addr16
pop
jle
incl
dec
cmp
sahf
popa
in
xlat
xlat
cmp
addr16
jb
lock
in
mov
xchg
mov
daa
push
push
pop
jge
or
push
or
dec
or
cmp
nop
pop
loopne
movsl
inc
jnp
mov
or
push
dec
arpl
cltd
xor
out
mov
add
pushf
mov
pushf
cltd
inc
repz
test
inc
xchg
pop
xchg
mov
inc
int3
pushf
cmp
adc
sbb
shlb
sub
inc
xchg
or
js
gs
jae
dec
add
movsl
adc
fwait
imul
aas
pop
or
cmc
dec
ret
sub
movsl
div
dec
xor
sarb
xchg
sub
mov
adc
xlat
sbb
cwtl
sbb
outsb
inc
mov
inc
cmp
sbb
shlb
sub
mov
push
cmp
out
int3
jb
jb
adc
rcll
jp
sub
out
lock
add
out
ljmp
pop
stos
mov
or
sub
pusha
or
mov
mov
jae
cld
xchg
adc
leave
loope
mov
rcl
js
scas
xchg
adc
sbb
lock
jb
xor
jnp
in
dec
out
xlat
mov
push
outsb
and
sar
lea
cli
inc
cld
pushf
outsb
popa
mov
or
insl
sbb
add
lods
mov
jne
inc
adc
fiadds
shlb
dec
test
inc
daa
add
pop
cwtl
or
xor
or
scas
pop
xchg
scas
add
mov
vmread
clc
push
xchg
aaa
movsb
xchg
adc
test
scas
or
push
mul
jl
jecxz,pt
jp
je
fwait
aad
pushf
test
loopne
mov
sbb
mov
mov
or
cld
outsb
fwait
xchg
and
in
in
mov
in
cltd
mov
insl
pop
stos
xchg
jl
addl
orl
in
repz
xor
into
in
mov
int3
jne
cs
add
aam
add
je
pop
es
jb
jno
add
push
roll
mulb
into
out
and
inc
in
das
insl
xor
inc
lods
or
adc
pop
sti
daa
clc
sub
icebp
call
inc
xchg
or
ret
aad
rcrb
pop
adc
test
jmp
shlb
dec
adc
cli
sub
testl
or
lods
ja
add
ja
adc
xor
xor
pop
cs
stos
push
ja
push
jecxz
jns
pop
jne
lea
js
mov
cmovns
pop
lods
push
fs
dec
mov
shl
push
push
subl
int
or
fdivl
push
aam
in
and
jle
lea
mov
and
xor
inc
iret
fbstp
sub
imul
xor
std
daa
adc
inc
aam
sbb
sub
and
fstl
les
adc
jp
cmp
popa
scas
rorb
add
sub
add
dec
stc
jg
adc
daa
cli
cmpsb
out
ret
jp
mov
add
popa
xor
lods
jne
sbb
mov
sbb
jmp
and
add
dec
inc
dec
or
jmp
mov
aam
imull
xor
and
jge
sub
or
andl
sti
and
add
adc
pop
inc
and
dec
test
add
int
push
dec
call
lret
adc
mov
or
das
xchg
and
in
sub
dec
and
mov
cmp
push
movsl
ret
sahf
mov
mul
mov
dec
adc
pop
repz
inc
fcmovu
testl
test
xchg
dec
jno
dec
repnz
xor
repz
subb
movsl
fsubrs
mov
stos
addr16
pop
cmp
inc
inc
outsb
xor
mov
and
sbb
xchg
faddl
rcll
xor
fbstp
fsub
push
sti
pushf
icebp
sub
aas
ljmp
sub
inc
lods
push
test
scas
pcmpeqd
mov
dec
dec
shll
arpl
mov
pop
dec
sub
lahf
mov
adc
ss
jne
add
int3
icebp
idivl
xchg
sbb
test
icebp
leave
add
push
in
cltd
push
pop
add
imul
icebp
stos
daa
add
cmc
push
js
sub
mov
bound
out
push
push
popa
mov
push
pop
add
std
icebp
ja
popa
loop
in
repz
jne
pop
mov
xor
sub
cwtl
pop
add
mov
mov
rcrb
push
cmpsl
roll
std
xchg
ljmp
mov
stos
out
out
adc
jo
sbb
cld
sub
adc
add
icebp
das
add
icebp
insb
add
xor
sbb
nop
mov
push
mov
popa
call
in
add
adc
jecxz
ljmp
adc
ja
test
cltd
adc
xchg
movsb
adcb
jge
and
pop
add
jg
lret
andl
jle
xor
sub
add
shll
mov
shrl
xchg
fwait
mov
test
inc
mov
stos
int3
jg
int
add
jae
ja
popa
nop
sarb
push
pusha
jno
dec
pop
xchg
cmp
fcoms
and
push
lods
sahf
pop
aam
pop
je
mov
dec
lret
jp
lds
shll
jl
in
push
sub
loope
dec
cld
push
int3
lock
add
jmp
cmpsl
ss
call
dec
ds
insb
or
mov
inc
or
js
mov
cwtl
ja
or
jbe
and
insl
or
sbb
scas
fbld
jl
jmp
movsl
mov
mov
xor
push
ljmp
inc
fwait
mov
dec
jns
es
js
aaa
mov
movsl
fs
sbb
outsl
sbb
pop
inc
jae
dec
inc
xchg
rorb
idivl
daa
cwtl
addr16
ret
xor
adc
jmp
sahf
sub
movsl
push
jb
incl
cmp
call
and
inc
cmp
pop
add
addr16
sbb
jnp
lods
and
xchg
inc
je
jge
daa
or
jmp
faddl
clc
inc
push
jle
sub
ds
out
ror
loopne
outsl
dec
hlt
imul
lret
fwait
aam
mov
repnz
jns
sub
xchg
xchg
xor
lahf
dec
loope
xor
rcrl
add
xchg
adc
adc
or
stc
sar
dec
dec
and
shlb
aas
sbb
loopne
dec
dec
rolb
call
pop
sub
sub
or
xor
mov
bsf
mov
and
test
bt
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
cmp
btc
mov
movzwl
sub
and
test
mov
jmp
lcall
ret
or
btc
bt
bswap
sub
test
adc
shl
or
jmp
lcall
xor
add
add
pop
xor
xchg
push
neg
mov
shr
add
btc
mov
adc
or
call
lcall
incl
ret
neg
sub
not
xor
btc
shr
add
xor
neg
jmp
lcall
add
bt
sub
movzbl
cmp
bts
sub
mov
mov
xchg
push
push
xchg
dec
add
add
call
add
xor
btc
and
shl
btc
adc
bts
neg
neg
shr
add
mov
bsf
add
not
sub
bt
inc
and
bt
mov
shl
sub
xchg
mov
and
shl
mov
cmp
dec
test
bts
jmp
lcall
ret
or
cmp
or
add
test
sub
adc
add
shl
bt
call
lcall
add
xorl
pop
xor
xchg
push
or
not
cmp
cmp
cmp
inc
xor
shr
jmp
lcall
stc
add
xchg
ret
neg
sub
bts
xor
sub
shl
cmp
cmp
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
inc
btc
adc
adc
movzbl
cmp
xor
xor
bt
jmp
lcall
pop
add
adc
mov
mov
in
shl
dec
test
cmp
dec
add
mov
test
add
bt
or
btr
or
mov
inc
call
lcall
add
cmp
test
adc
add
bts
shl
adc
sub
mov
call
lcall
pop
add
roll
test
not
btc
movzbl
test
dec
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
and
mov
cmp
test
btr
btr
shr
add
call
lcall
pusha
push
shr
bsf
cmp
inc
or
bt
add
add
jmp
lcall
or
loope
enter
ljmp
lahf
lock
sub
mov
mov
btc
bswap
add
sub
neg
adc
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
movsbl
or
shl
adc
and
not
adc
push
sub
xor
cmp
adc
dec
mov
btc
sub
add
btc
or
or
sub
or
shl
shl
add
mov
shl
and
adc
sub
cmp
sub
btr
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
bswap
btc
mov
neg
movswl
and
mov
cmp
cmp
add
call
lcall
add
cmp
or
adc
neg
or
btr
bsf
mov
add
add
neg
dec
not
bswap
mov
bsf
adc
neg
sub
mov
add
test
and
test
adc
mov
and
inc
call
lcall
mov
mov
sub
sub
bts
bt
test
bt
neg
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
or
btc
and
or
btr
shr
and
bsf
bt
mov
bsf
and
or
add
jmp
lcall
jb
jecxz
mov
loope
enter
shr
test
and
mov
add
adc
xor
sub
adc
mov
btr
cmp
add
call
lcall
add
and
adc
shr
or
dec
test
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
mov
neg
and
and
shl
and
xor
sub
mov
xor
xor
shl
not
xor
bt
sub
inc
movswl
adc
cmp
not
sub
mov
add
bts
test
bt
mov
add
bt
test
btr
cmp
btr
shl
or
xor
neg
lea
inc
cmp
jne
add
or
mov
sub
shl
not
bts
sub
test
bsf
add
sub
xor
cmp
bts
btc
sub
mov
call
lcall
je
test
adc
cmp
test
shr
movsbl
add
cmp
sub
mov
test
btr
add
btc
sub
xor
bts
call
lcall
mov
or
shr
shl
sub
and
cmp
not
movzwl
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btr
cmp
mov
cmp
shl
movzbl
mov
call
lcall
and
test
mov
xor
test
movswl
btr
btr
add
not
sub
add
test
btr
or
shr
or
jmp
lcall
cmp
mov
lds
rolb
std
xor
mov
add
cmp
shr
test
sub
xor
adc
dec
call
lcall
add
shr
test
adc
cmp
sub
test
and
push
pop
inc
add
loop
sub
mov
test
shr
adc
and
add
push
decl
mov
add
shr
mov
test
sub
shl
adc
add
call
lcall
push
shl
ret
sbb
test
mov
mov
test
mov
push
shll
bt
test
test
add
cmp
or
or
dec
push
sub
btr
btc
shl
bts
cmp
and
inc
sub
mov
or
mov
inc
shl
and
xor
adc
cmp
push
push
pop
add
add
call
bts
test
bt
test
add
dec
xor
xchg
and
sub
sub
dec
btr
adc
movswl
mov
sub
bt
mov
add
sub
bts
neg
call
lcall
mov
sub
cli
into
xor
shr
btc
bt
and
bt
add
cmp
btc
and
test
xor
movswl
xor
call
lcall
aam
shl
add
test
cmp
movzwl
adc
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
cmp
shl
bsf
cmp
xor
adc
inc
cmp
and
add
bts
movzwl
movzbl
test
bsf
shl
or
movzwl
call
lcall
shl
xor
cmp
neg
bts
add
add
shl
mov
adc
test
shl
xor
and
or
inc
cmp
je
shr
test
btc
adc
cmp
add
sub
add
cmp
cmp
bsf
test
cmp
bsf
and
bsf
bsf
call
lcall
btr
add
or
btc
and
bsf
neg
sub
inc
xor
sub
bts
bt
btr
add
neg
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
shl
bswap
bts
test
or
cmp
adc
sub
push
decl
mov
add
bt
mov
btc
or
xor
or
and
push
decl
mov
add
cmp
adc
add
shl
mov
bsf
shl
add
mov
or
adc
shl
adc
adc
bt
jmp
or
btr
or
add
adc
cmp
and
inc
mov
adc
test
and
movswl
and
adc
or
mov
bt
dec
test
btc
xor
shl
xor
cmp
add
btr
xor
sub
btc
shr
shl
or
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
add
sub
mov
xor
shr
movzbl
add
not
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
xor
add
add
btc
test
test
dec
push
push
or
mov
dec
cmp
or
mov
or
and
push
sub
mov
adc
bsf
sub
adc
movzbl
btc
shr
shl
test
mov
xor
movswl
cmp
or
adc
btr
or
call
lcall
js
mov
sbb
add
bsf
shr
adc
dec
lea
cmp
sub
btc
xor
bts
movzwl
not
mov
mov
test
shl
bsf
and
btc
movswl
and
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
cmp
lret
bts
bt
sub
shl
mov
sub
mov
sub
bsf
test
cmp
btc
shr
adc
inc
push
btr
mov
xor
btr
cmp
test
movswl
push
btr
movzbl
xor
xor
or
bts
or
dec
push
bt
shr
test
shr
sub
shl
xor
call
lcall
mov
inc
and
sub
adc
neg
adc
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shr
xor
cmp
cmp
adc
cmp
shl
bt
call
lcall
sub
in
dec
movzbl
add
sub
shl
sub
dec
add
cmp
mov
cmp
cmp
shl
test
add
sub
call
lcall
mov
or
test
neg
mov
test
adc
inc
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
in
adc
fmull
push
mov
mov
jmp
mov
xor
push
xlat
popa
call
sbb
push
push
and
cmp
add
or
int3
or
jb
add
stos
inc
xchg
add
add
lahf
cmp
mov
mov
cmc
les
add
or
mov
add
cld
cmp
lcall
pop
add
je
lret
enter
fadds
xor
imul
push
jnp
mov
sbb
sub
in
clc
loope
add
add
pop
adc
mov
push
push
sbb
xchg
add
mov
out
imul
push
xchg
inc
adc
push
adc
xchg
or
lret
inc
push
or
ret
fisubs
adc
sbb
push
sub
pop
adc
inc
add
cmp
gs
sbb
or
push
mov
sbb
sahf
add
aad
jp
call
add
mov
xor
push
inc
push
dec
push
loop
inc
pop
inc
cmp
dec
pop
sbb
inc
pop
inc
xor
xor
xor
pop
in
push
push
icebp
lock
inc
sbb
dec
add
dec
pop
rclb
push
cmp
jnp
cmp
push
cmovne
cmp
adc
aaa
in
inc
ljmp
dec
mov
push
push
push
inc
inc
jmp
xor
dec
inc
adc
mov
push
dec
cmc
dec
dec
inc
pop
adc
push
test
adcl
in
dec
push
dec
push
cmp
push
dec
add
push
pop
into
jns,pt
nop
push
loop
ljmp
aad
xor
je
out
push
and
pop
cmp
jno
pop
mov
cmp
cmp
inc
xchg
inc
dec
jle
dec
pop
push
inc
push
sub
aaa
in
push
fiaddl
test
add
sub
insb
outsl
jae
and
jne
addr16
je
in
je
xlat
fwait
cs
push
test
insl
shlb
jecxz
outsb
icebp
je
bound
cmp
or
push
inc
jo
and
icebp
inc
sti
or
div
push
push
push
push
jae
je
lock
es
dec
stc
pop
push
gs
je
jo
icebp
arpl
out
outsl
outsb
out
pop
push
jne
out
xchg
mov
pop
jb
mov
jns
dec
out
outsb
cs
sbb
or
ja
adc
repnz
std
pop
addb
dec
imul
push
outsl
dec
fs
popf
lcall
jmp
jmp
pushw
aam
jmp
cld
fwait
push
shll
adc
inc
fiaddl
stos
and
add
mov
dec
xchg
add
inc
push
push
and
or
std
jb
jmp
add
call
mov
fcoms
push
sub
int3
jne
stos
xlat
mov
outsl
add
test
in
nop
or
imul
or
test
je
daa
jae
data16
sti
jl
cltd
das
inc
sub
mov
insb
fs
mov
dec
popa
jns
mov
movsl
pop
jecxz
mov
dec
cs
add
inc
add
add
push
push
inc
adc
pop
inc
mov
cmc
lret
pop
or
dec
inc
add
mov
