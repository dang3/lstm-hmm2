push
call
ret
ret
mov
movsb
sbb
xor
mov
pop
jb
dec
sahf
loope
sahf
lcall
dec
xor
pop
aam
jnp
std
out
ret
jle
xchg
je
pop
jp
lods
dec
je
mov
xchg
sub
mov
fstps
lods
sub
aad
lcall
mov
or
in
scas
call
dec
cmpsb
fisttps
mov
js
mov
or
scas
mov
inc
dec
js
push
sbb
sbb
cwtl
das
imul
into
xchg
repz
inc
aam
loop
inc
cli
loopne
or
mov
inc
rsqrtps
gs
ret
jns
pusha
insl
adc
jbe
mov
dec
pop
inc
stos
jge
mov
out
cmp
inc
stos
out
push
pusha
aas
sbb
inc
jno
bound
enter
adc
sbb
mov
scas
int3
xor
clc
sbb
fs
dec
mov
inc
dec
xchg
test
bound
xchg
inc
pop
repz
in
mov
pop
xchg
cwtl
pop
jecxz
pop
mov
cmpsb
xchg
clc
lock
adc
mov
ss
adc
int
and
pop
repnz
rcll
pop
clc
es
or
or
cmp
or
lret
dec
xchg
adc
icebp
or
imul
jne
cmp
pushf
movsl
mov
push
popa
je
ss
push
es
pop
mov
aad
cltd
jle
xchg
ret
push
mov
ret
xor
mov
fisubl
cmp
in
xchg
jmp
fildl
pop
je
mov
push
rorl
js
or
sbb
into
sub
clc
and
loop
out
fildll
in
sub
inc
jge
inc
jne
fs
xor
mov
xchg
mov
sub
movb
add
push
xchg
movsb
adc
adc
and
push
cmpsb
negb
mov
cmp
rolb
iret
fidivrs
daa
mov
dec
aam
mov
out
push
and
add
push
movsl
fnsave
mov
into
sbb
std
push
call
sbb
fneni(8087
inc
imul
imulb
icebp
movsb
and
cmp
jbe
ret
add
je
adc
test
cmpsb
jge
push
stc
cmp
mov
and
inc
or
xchg
or
insl
int3
stos
inc
inc
cmpsb
xor
cli
int3
push
subb
jnp
xchg
pop
je
xor
sbb
or
ds
mov
aas
shrl
push
pop
inc
push
xchg
and
mov
shlb
xchg
mov
out
out
imul
pushf
mov
decb
sub
cmp
sbb
lret
es
push
jmp
jmp
push
inc
xor
mov
jns
push
mov
mov
lahf
xorb
nop
sbb
pop
adc
mov
mov
push
or
mov
fstl
popf
mov
in
cmp
dec
and
shll
out
inc
dec
inc
insl
xchg
in
out
stos
inc
jb
out
dec
inc
dec
cmpsl
xor
jecxz
movsb
aam
pop
add
inc
daa
idivl
mov
ret
call
into
xchg
imul
hlt
test
mov
cmpsl
xchg
pop
push
movsl
ficoml
repz
cmp
shll
addl
sbb
mov
test
add
lret
mov
jecxz
dec
xor
pop
jecxz
inc
scas
lea
cmp
sub
jl
test
cli
movsl
cmp
dec
inc
and
lods
cli
sub
hlt
cmc
add
cmp
ds
es
ds
test
sbb
lods
js
inc
jb
mov
pop
cltd
cld
and
sti
lods
jae
mov
cmovp
mov
adc
aam
xchg
pushf
cld
fwait
test
cmp
daa
jl
mov
pand
jns
and
xlat
dec
clc
jno
iret
jecxz
jg
out
in
push
cmpsb
push
ja
icebp
rclb
addr16
in
clc
sti
lea
and
xor
in
int3
test
dec
inc
int
push
sub
sub
push
inc
add
cwtl
lret
sub
pop
lahf
mov
inc
add
push
mov
ficoms
fidivrl
jp
dec
mov
lds
adc
mov
addl
sahf
pop
add
test
addr16
inc
movsl
dec
andl
leave
add
add
push
scas
push
push
call
insb
fsts
mov
or
aam
loope
cmp
sub
bound
mov
std
jmp
icebp
mov
aaa
out
and
andb
mov
xor
jb
push
or
jb
cwtl
bound
sarb
jo
pop
addr16
mov
mov
mov
mov
pop
inc
inc
scas
xorl
mov
push
adc
setno
test
jmp
out
mov
ja
scas
and
ljmp
popf
cmp
adc
push
scas
insb
stos
sub
add
das
mov
ss
test
lahf
mov
inc
in
lcall
fs
dec
jg
inc
jns
cs
mov
lods
mov
lods
sarb
xchg
xor
addl
push
jmp
push
mov
js
mov
sub
xor
and
aas
push
mov
mov
in
mov
mov
dec
ljmp
fwait
or
bound
push
pop
ss
and
jp
ljmp
fs
xor
lret
frstor
test
test
stc
loopne
lds
mov
mov
push
jnp
fidivs
into
add
and
add
inc
pop
shlb
sbb
daa
enter
fsubrs
pushf
pop
fsubp
je
or
push
addr16
mov
addl
pop
fs
and
dec
cltd
fs
mov
cltd
loopne
movsb
addr16
aad
es
jg
sti
push
dec
aas
dec
xchg
mov
fidivrl
std
mov
ffree
pop
fwait
cld
add
in
stos
and
jo
lock
addr16
pop
xor
inc
push
or
add
dec
das
into
dec
stc
dec
int3
dec
mov
std
into
fnstenv
daa
clc
and
leave
push
sbb
iret
ljmp
mov
pop
lds
aaa
cmpsl
xchg
rclb
push
cwtl
fs
cmp
pop
jns
mov
inc
fwait
pop
jbe
pop
add
movsb
ljmp
inc
xor
xchg
or
push
clc
lret
lods
lcall
dec
cmp
insl
popa
movl
aaa
loopne
mov
scas
inc
and
pusha
repnz
push
ficomps
xlat
mov
fldt
jo
dec
pop
testb
or
pop
push
push
jbe
adc
lods
jae
inc
push
and
mov
push
shr
int
pop
int3
mul
lret
ljmp
mov
loopne,pn
pop
fbstp
push
cmp
dec
jl
sbb
popf
add
sbb
sbb
mov
into
cltd
lods
sbb
xchg
enter
xchg
or
loop
in
fstpt
ret
add
stc
les
test
fildl
xchg
mov
and
lcall
into
insb
addl
jecxz
mov
mov
mov
lds
add
fadds
in
mov
je
cmp
aam
xor
mov
or
cmp
pop
push
add
pop
cmpb
stc
loop
fwait
cwtl
test
push
je
inc
xchg
arpl
cmc
clc
cmpsb
and
jge
cs
sbb
js
shrl
lods
mov
lods
daa
jecxz
dec
imul
dec
push
cltd
fwait
push
fsubrl
sbb
les
orl
insb
push
push
ret
inc
adc
iret
in
enter
stc
sarl
test
lea
cli
cs
xchg
cmp
mov
cld
lods
gs
mov
test
pop
in
loop
xchg
xor
dec
cmp
push
js
pop
or
and
iret
jo
jge
jg,pn
inc
push
pushf
pop
jnp
add
stc
in
pop
ja
cs
sub
ja
mov
mov
loop
xchg
push
int
jecxz
fisubl
cmpsl
arpl
inc
pop
loop
jo
ljmp
popf
dec
loopne
cmpsb
scas
xchg
push
adc
aam
mov
outsb
add
cwtl
and
cmp
clc
and
mov
imul
in
fs
cltd
call
mov
jae
xlat
not
xlat
flds
inc
jae
xchg
ret
test
mov
scas
mov
loop
or
dec
adc
add
push
dec
cmp
in
aaa
xchg
inc
push
mov
dec
mov
cwtl
jne
xchg
cmp
mov
fidivs
jbe
jb
in
das
xor
cmc
mov
cmp
mov
out
mov
add
jbe
icebp
mov
adc
cmc
adc
jne
cld
or
sbb
stos
push
popf
adc
lods
xchg
inc
cmp
dec
popf
push
add
push
rcrl
sbb
test
mov
adc
and
pop
inc
movsl
stos
fmuls
jg
dec
mov
lcall
jbe
cmp
out
cltd
loope
popw
xor
dec
ss
shl
negb
inc
mov
inc
dec
std
adc
xchg
lcall
and
pop
add
rcr
mov
ficomps
xorl
pop
mov
push
push
or
and
pop
inc
iret
xchg
fucomp
clc
xchg
es
pop
dec
orb
gs
fdiv
mov
sti
mov
nop
push
jbe
pop
and
push
cmc
jb
sub
push
aaa
mov
sub
mov
mov
pop
aas
add
mov
pop
and
shrb
jbe
adc
clc
dec
lret
pop
cli
outsl
add
or
js
lcall
and
add
xor
sub
push
bound
xor
ljmp
and
mov
xor
mov
and
faddl
loop
iret
add
enter
pop
sub
enter
lret
mov
xchg
fwait
mov
repz
movsl
out
sub
pop
std
js
xchg
movsl
pop
je
cmp
inc
jb
cmc
or
outsl
mov
mov
fldt
xor
popa
call
mov
ret
add
or
pop
loop
and
cltd
adc
mov
and
sbb
mov
lret
sahf
add
jne
sbb
popf
push
and
xor
cmp
pushf
sub
ja
ja
movsl
pop
push
neg
dec
loopne
insb
pusha
aaa
negb
stc
ljmp
sbb
xchg
add
out
push
cmp
pusha
roll
jge
sbb
mov
add
add
pop
movsb
mov
mov
pop
adc
mov
jno
mov
loop
mov
pop
nop
adc
push
sbb
mov
call
push
out
pop
inc
les
and
mov
mov
in
in
xchg
sbb
adc
js
xor
jl
sub
sub
add
jnp
pop
xchg
mov
sub
sarb
xchg
push
xchg
push
push
mov
test
inc
rol
and
add
rorb
stos
sbb
nop
dec
movsl
mov
call
mov
shlb
pop
push
jl
in
jl
inc
or
out
jge
les
mov
dec
add
fnstsw
dec
mov
jmp
hlt
mov
shrl
jo
test
push
ret
subl
jecxz
add
mov
mov
arpl
cmpsl
repnz
or
leave
cltd
popa
data16
stc
push
es
fmulp
into
in
inc
test
add
mov
dec
xchg
test
rcrl
and
xchg
ret
orb
sbb
je
leave
jg
loope
ss
inc
pop
pop
adc
dec
push
sub
filds
leave
xor
xor
add
je
fs
inc
sub
pop
inc
test
dec
mov
sub
adcb
in
mov
fnsave
mov
fisttps
cmp
hlt
imul
jp
cmpsl
insb
data16
pop
dec
test
jnp
rcll
pop
xchg
adc
es
lds
cmp
repz
mov
movsl
sub
adc
stos
rol
sub
dec
int3
mov
push
adc
cmp
gs
mov
rolb
scas
in
pop
lahf
out
loope
adc
mov
lret
mov
add
fdivrp
loope
gs
fucom
dec
cmp
xchg
push
inc
pop
hlt
sbb
mov
arpl
or
cs
out
sbb
stos
movsb
push
hlt
cmp
jp
xchg
dec
jne
push
push
or
xchg
test
xor
ret
inc
sbb
mov
leave
mov
xor
loop
xor
stc
jne
cld
imul
add
lods
idivb
iret
mov
mov
xchg
sub
stos
mov
cs
pushf
mov
push
sti
pop
cmp
data16
imul
aas
out
xor
sti
lods
cs
xlat
shrb
divl
pop
adc
pop
push
pushf
and
sbb
je
cltd
ljmp
loope
push
jnp
xchg
stc
mov
jbe
stos
movsl
push
mov
jl
xchg
xlat
xor
mov
rcl
lcall
dec
or
je
ficoms
rol
adc
js
xchg
out
xchg
xor
push
das
adc
lcall
mov
pop
push
push
loope
enter
movsb
sub
and
addb
xor
mov
arpl
shl
int
or
push
icebp
leave
or
aam
dec
sbb
in
pusha
mov
int3
push
sbb
add
in
cltd
cmpsl
imul
imul
jl
ficoms
jmp
xlat
incl
cwtl
cmp
aad
or
sub
mov
cli
mov
sti
icebp
mov
movsl
int
and
and
mov
addr16
addl
or
pop
cwtl
mov
jg
sahf
adc
popl
pop
sub
shlb
push
jl
cmp
pop
inc
loop
out
scas
sub
repnz
stc
mov
inc
aas
pop
jge
jae
lea
std
mov
mov
xor
pushf
adc
xor
sarl
push
lret
adc
mov
xchg
mov
outsb
stc
loopne
outsl
jns
pop
sub
divl
dec
dec
das
in
addr16
shll
xchg
mov
mov
scas
push
xchg
pop
dec
daa
rcr
mov
ja
dec
in
jl
sahf
out
mov
adcl
push
push
sbb
out
into
icebp
pop
xor
xor
adc
inc
repnz
les
pusha
mov
jne
enter
pop
pusha
mov
movsb
add
mov
sti
or
pusha
mov
xchg
pop
adc
mov
daa
xchg
dec
cmp
scas
mov
or
call
dec
pushf
cmpsb
ss
out
or
aas
lret
dec
add
mov
mov
fstpt
jmp
cmp
dec
mov
stos
jb
daa
stc
test
xchg
mov
repnz
sub
cmpsb
popf
pop
idivl
xchg
adc
sbb
xor
pop
test
repnz
sub
xchg
xor
or
mov
ficoml
into
add
mov
lea
mov
fwait
fadds
je
xchg
push
scas
rclb
call
int
jo
stos
jbe
xchg
mov
lods
xchg
pop
fimuls
jecxz
adc
cmp
pop
shll
mov
bound
xlat
fstpl
flds
xchg
pop
adc
xor
fistpl
fldcw
fisubl
add
push
mov
popf
divl
test
add
jle
clc
mov
jbe
push
xchg
fwait
jge
lret
in
test
jbe
ljmp
push
sub
psubusb
notl
jg
jo
jnp
dec
push
xchg
jnp
stos
je
dec
push
cmc
mov
dec
cmpsb
jp
sbb
pop
cmpsb
mov
or
mov
xor
shlb
jnp
je
orb
xor
xor
in
movsl
xchg
ss
aam
pop
push
gs
addr16
push
mov
and
sub
bound
xor
popa
dec
scas
or
lea
push
rorl
mov
mov
pop
or
es
xor
mov
sub
mov
adc
rorb
aas
mov
adc
repz
jl
push
into
and
mov
in
pop
shlb
fldl
push
hlt
push
push
xchg
jae
pop
jno
std
xor
mov
test
popa
call
shl
mov
sub
mov
jg
shll
dec
fs
out
push
dec
jl
jns
adc
push
push
dec
jnp
adc
fs
mov
inc
movsl
mulb
aaa
out
insb
pop
stos
test
add
negl
pop
inc
mov
add
test
fists
or
dec
inc
insl
jl
or
iret
stos
sti
bound
sub
push
hlt
mov
dec
sub
xorl
pop
mov
imul
xor
dec
inc
mov
jl
xchg
pusha
sbbb
sbb
jb
test
mov
cmp
movsl
shll
mov
scas
or
ljmp
cs
xor
push
pop
pop
jmp
lcall
xchg
inc
js
push
outsl
jo
mov
insl
cmp
cmp
in
fs
icebp
adc
fiadds
outsl
inc
pop
nop
out
cmp
and
inc
movsl
mov
scas
fildl
add
jno
or
cmc
dec
popa
xchg
nop
fisttpl
imul
scas
dec
or
push
mov
rorl
movsb
mov
lcall
xchg
xor
cltd
adc
gs
jbe
adc
pushf
iret
or
aad
rcrl
jo
mov
xorl
insl
xchg
push
mov
cmpb
stos
add
or
sti
jno
arpl
dec
iret
outsb
rol
ljmp
test
lahf
shll
xor
fisubs
fistpll
testb
sarl
les
inc
jno
cli
fsubs
mov
mov
and
icebp
cmpsl
xor
mov
mov
nop
test
dec
mov
mov
inc
leave
cmp
and
adc
inc
cltd
fs
sub
clc
mov
push
inc
push
mov
je
insl
dec
push
mov
mov
ret
test
std
xlat
jmpw
and
aad
xchg
and
std
imul
add
sub
int
inc
js
cli
adc
sbb
sti
ret
and
lea
xchg
leave
and
into
push
out
inc
dec
xchg
xchg
cmp
or
add
pop
outsl
loop
movsb
cmc
rcrb
dec
inc
int3
test
inc
test
mov
cs
pop
fwait
les
cmc
int
cmp
sahf
push
mov
lret
lahf
lods
mov
mov
popf
jns
das
aad
inc
jp
arpl
cmp
testb
jge
jbe
mov
daa
lods
dec
outsl
lret
mov
sbb
rolb
xchg
pop
or
jno
add
xor
loopne
divl
pop
insb
lods
repz
cmp
loope
adc
out
fwait
rolb
jae
xchg
cmp
or
leave
lret
lds
movsb
imul
rclb
lods
fldt
pop
add
jae
dec
ss
leave
iret
adc
pop
js
ljmp
mov
lret
negl
jbe
push
inc
and
xchg
xor
xor
lea
add
or
inc
xchg
test
cltd
iret
and
call
push
dec
jns
inc
outsl
mov
loopne
xor
jg
dec
xchg
xor
jge
cmp
add
lods
dec
xor
xchg
inc
int3
add
loope
mov
add
push
lea
pushf
loopne
out
clc
je
mov
fsubrs
sbb
mov
sbb
nop
dec
pop
pop
mov
pop
ja
negl
jbe
fnstcw
xchg
fnsave
mov
xchg
jae
mov
cmpsb
cmc
loopne
adc
aad
je
clc
cli
lds
mov
jb
push
fdivrl
xchg
push
adcb
jb
out
mov
mov
push
xchg
arpl
stos
or
cltd
and
mov
adc
aam
jae
ret
imul
fwait
dec
popf
xchg
lcall
and
ja
nop
cmp
clc
stos
mov
jae
mov
or
bound
sbb
pusha
jl
mov
into
jp
push
adc
out
es
ljmp
std
xchg
cmp
push
xchg
cmp
test
out
or
and
mov
sbb
adc
cmp
sbb
mov
cli
push
mov
imul
adcl
addr16
sbb
js
add
cmpsb
in
dec
sbb
xchg
roll
sti
xchg
cmc
xchg
and
add
repnz
pusha
inc
mov
ret
fistpl
movsl
in
push
and
cmp
cmp
repnz
xchg
cmc
ret
fidivl
sub
ja
repz
es
sub
lods
idivl
push
jmp
mov
mov
jb
dec
sub
jl
jno
add
inc
cmp
mov
inc
xlat
or
sbb
lods
mov
mov
jb
pusha
inc
sub
call
xlat
rclb
test
stos
inc
hlt
push
or
int3
sbb
sub
xchg
push
jno
jns
sbb
scas
sbb
cmpsl
cltd
insb
rcrb
mov
iret
loope
or
add
cmp
xor
inc
or
sbb
mov
dec
pop
or
mov
stc
pop
pop
out
fcmovnu
inc
push
jle
pop
mov
add
ljmp
scas
pop
popa
push
andl
mov
hlt
lahf
sti
leave
mov
pop
push
fwait
cmp
das
out
loope
lea
nop
xor
inc
cmpsl
aas
negl
aam
lret
in
fdivl
je
lahf
fmul
mulb
stc
clc
mov
pushf
fcomps
pop
cmp
stc
cmp
stos
sbb
std
sub
push
mov
mov
das
rcll
add
mov
and
cmpsl
out
cmc
mov
mov
nop
xchg
cmp
mov
addr16
movsl
mov
sbb
mov
and
pop
lret
mov
cmp
addr16
popa
jecxz
push
fwait
xor
inc
adc
mov
or
dec
xchg
daa
iret
outsl
inc
jecxz
iret
shll
loop
sbb
xlat
in
cmp
test
adc
out
les
sbbl
and
and
jg
xchg
jge
out
add
fs
xchg
dec
popl
imul
sub
pop
gs
ds
pusha
mov
ficomps
test
aaa
pop
movsl
mov
mov
lcall
mov
into
js
std
das
xor
sub
dec
and
sbb
add
clc
or
insl
arpl
inc
shrb
add
sbb
mov
lret
jl
xchg
fistl
push
scas
test
pop
xlat
xor
mov
and
inc
cmc
adc
mov
mov
pop
jae
mov
mov
jb
push
push
xchg
ficoms
sbb
mov
in
inc
inc
pop
shrl
bound
mov
dec
dec
dec
adc
cmc
rolb
mov
out
xchg
push
pop
lret
sub
ret
xor
lock
sbb
int3
movsb
scas
dec
jmp
sbb
call
mov
ss
pusha
lahf
aad
es
mov
sub
xchg
orb
push
jne
subl
inc
leave
ja
mov
push
dec
dec
jns
rorl
or
inc
fdivr
clc
loopne
dec
loop
push
test
leave
mov
adc
divb
rorb
mov
adcl
ret
xchg
divl
push
jnp
out
xor
mov
xchg
out
repz
in
jno
sbb
adc
test
sub
faddl
xor
addr16
loopne
das
and
jb
xlat
stc
sub
cmpsl
push
dec
mov
mov
lods
push
mov
mov
xor
sbb
or
or
add
and
cmpb
pushl
adc
push
cmp
jp
cwtl
push
jnp
std
sub
fadd
fld
js
adc
or
cltd
movsb
ds
inc
xlat
and
inc
in
mov
arpl
ja
add
inc
aam
jo
and
jg
pop
and
cmc
cmp
sbb
xlat
pushf
stos
leave
push
jle
xchg
lea
ja
mov
adc
out
xchg
or
inc
cmc
mov
push
ffree
or
cltd
insb
jo
dec
jae
pop
push
je
outsl
sbb
sbb
jns
push
pushl
jmp
cmp
and
dec
sbb
sbb
jmp
mov
insb
jne
cmpsb
push
dec
push
xchg
adc
xchg
data16
movsb
stc
or
call
cli
enter
inc
stos
adc
pop
add
test
push
mov
or
cmp
jns
mov
fsubrs
test
inc
mov
mov
mov
jl
sub
push
popf
jne
cmp
lods
out
lock
mov
aam
xchg
mulb
mov
fisttpll
inc
popf
xor
loop
int3
jp
aaa
imul
je
lret
sti
aad
inc
mov
movsb
ret
pop
fs
dec
add
fwait
divl
sub
inc
notl
mov
jecxz
fistpll
mov
push
adc
repz
dec
xchg
inc
mov
or
cltd
push
test
cmpsb
and
xor
loopne
mov
jo
and
sub
sub
fcomps
lret
std
jmp
js
push
pop
pop
notb
aam
mov
inc
aam
add
jl
mov
pop
out
pop
xchg
sbb
in
cli
hlt
push
mov
xchg
lods
pop
push
xor
loop
movsb
xor
inc
pop
push
das
jns
lcall
or
push
rorb
je
xor
jp
mov
loop
fldenv
pop
inc
push
push
test
fldl
mov
xor
les
xchg
mov
pop
arpl
enter
rol
ljmp
jg
es
push
lods
lods
pop
mov
pop
xor
mov
mov
lock
shl
pop
lods
cmp
pop
xchg
outsl
mov
jmp
push
loope
and
testl
lds
dec
scas
xchg
int3
addr16
add
in
hlt
aam
mov
adc
mov
nop
aad
nop
in
jnp
clc
push
add
inc
aas
and
mov
lret
pop
repnz
sbb
xchg
push
int3
push
jbe
in
jne
aam
mull
dec
mov
push
addr16
inc
dec
push
mov
arpl
sub
loope
test
call
mov
add
rorb
dec
cmp
adc
js
and
fldenv
das
xlat
sahf
std
shr
fistpll
movups
fdivp
or
sub
mov
lods
add
cwtl
xchg
cs
call
int3
mov
shlb
sbb
gs
cmpsl
add
andl
fnstsw
jae
cli
push
push
test
jl
sub
cwtl
sub
jnp
and
inc
enter
out
loope
add
nop
ficoml
sahf
neg
enter
out
push
xor
mov
adc
stos
cwtl
shrl
mov
mov
fistpll
insb
push
jno
lock
jo
xchg
xchg
mov
dec
sbb
iret
push
shrb
ja
arpl
xchg
pop
stc
sarl
mov
popf
ret
cmp
or
rorl
xchg
fxch
push
bound
orl
adc
jle
fldt
inc
out
push
xor
cmpl
in
add
push
loopne
in
push
js
xor
pop
sbb
sub
push
das
mov
xor
sub
out
sbb
pop
arpl
sub
and
repnz
sub
out
jns
xor
mov
lock
jb
fs
jnp
add
push
add
sbb
je
repnz
fs
sub
sub
insb
cld
dec
fldcw
push
xor
add
int
movsl
std
sahf
fnstsw
mov
cmc
ljmp
pop
movsb
lret
shrl
sub
mov
or
xchg
and
pop
push
test
dec
cmp
cli
sub
sub
push
loop
xor
out
cmp
inc
mov
mov
sub
notb
mov
adc
mov
ja
mov
iret
jmp
test
out
in
jnp
xchg
sub
dec
add
and
fs
jno
dec
outsl
aam
loope
xor
push
loope
cs
mov
lcall
sub
out
xchg
mov
jnp
and
int3
adc
or
jo
ja
mov
sub
ds
jle
mov
dec
cltd
cwtl
adc
mov
mov
mov
cli
mov
jp
and
dec
mov
inc
mov
lods
xor
sbb
dec
push
cmpsb
arpl
push
sub
sbbb
sarl
push
jae
js
into
and
cmc
shlb
jmp
repz
scas
fistps
mov
mov
in
and
movsl
mov
xchg
fsubl
mov
in
cwtl
ds
xchg
fwait
mov
daa
xor
pop
sbb
aam
sub
cmp
xor
popf
mov
dec
mov
mov
mov
pop
add
inc
lahf
sarb
sub
cmp
aad
push
dec
lods
mov
jle
push
lods
aad
fcoml
jg
pushw
scas
and
lea
xchg
cmp
test
movsl
mov
out
add
push
mov
clc
dec
push
cmp
decl
gs
leave
and
jns
scas
iret
test
add
scas
aad
sbb
or
jl
pushf
sbbl
mov
mov
repnz
xlat
inc
lcall
hlt
jnp
sti
outsb
into
in
xchg
sti
pop
scas
sub
jle
jmp
dec
mov
fxch
icebp
sbb
pop
pop
inc
shrb
sti
lret
xlat
insb
mov
pop
repnz
sub
sub
testl
or
jg
fldenv
push
cli
pop
mov
cmp
xchg
clc
mov
and
sarb
xchg
cmpsl
ja
lock
jnp
push
jo
dec
jo
rcr
mov
or
adc
lahf
fdivrl
push
mov
lret
lock
fmuls
jns
or
xchg
jle
mov
mov
dec
and
jmp
jecxz
incb
ret
and
dec
jbe,pn
repnz
lods
call
aam
xor
mov
xchg
in
bound
shr
scas
addr16
xchg
pushf
or
xchg
stos
cmp
mov
add
popa
pushf
push
imul
cltd
add
xor
enter
mov
jg
mov
mov
adc
or
repz
add
stos
jnp
push
lea
ret
jb
pusha
inc
lahf
sbb
pop
fs
out
aad
outsl
clc
mov
lss
mov
fiadds
lret
sbb
or
xchg
insb
sahf
out
dec
xchg
push
sbb
scas
and
mov
repz
and
dec
mov
leave
xor
jecxz
fnstcw
push
mov
jle
fsubrl
pop
nop
fwait
lds
jo
pop
cmpb
jp
pop
jge
xor
jae
xchg
lret
in
addr16
mov
leave
mov
xor
push
xchg
in
mov
mov
sub
xor
xorb
push
xchg
jge
test
mov
mov
je
aam
fs
and
jno
fsubl
sub
imul
adc
out
sub
icebp
sub
adc
outsb
or
stos
push
mov
sbb
movsl
lret
fimull
mov
rcrb
clc
dec
imul
lods
sub
xchg
jp
fisubrl
cmp
cmp
sbb
or
adc
ror
jmp
mov
fidivs
mov
or
stos
xor
xchg
mov
test
roll
insb
fdivl
mov
xchg
sbb
movsb
pop
push
dec
dec
cmpsl
dec
aam
popa
pop
fsts
stos
or
pop
adc
jne
lds
or
cmp
mov
push
xchg
sbb
cmp
xor
je
aad
cli
lahf
dec
ljmp
push
add
sbb
dec
scas
aad
scas
pop
mov
enter
frstor
dec
mov
shll
push
or
and
arpl
and
xchg
ss
jbe
aam
aaa
mov
aas
cmpsb
pushf
out
xorb
shrb
aaa
out
mov
sub
dec
test
xchg
adc
ss
cmpsb
mov
jmp
in
sub
jle
out
fldcw
cltd
repz
pop
decb
pop
xchg
imul
cltd
sarl
scas
dec
stos
test
in
xor
xchg
lock
mov
repz
push
ss
outsb
lret
add
adc
sbb
addl
lret
jo
jnp
or
push
mov
add
xchg
sub
out
jne
add
cmpsb
adc
jmp
out
aas
pushf
lods
lahf
dec
mov
je
stos
jmp
enter
aad
xor
inc
sbb
jb
inc
outsb
test
mov
or
mov
jo
daa
mov
ret
lock
sub
jae
and
gs
in
incb
adc
xor
data16
dec
dec
sub
xlat
dec
ds
inc
pop
adc
cmp
inc
out
xchg
ret
mov
clc
sub
xchg
push
dec
inc
stos
mov
mov
scas
lahf
shlb
xchg
jl
lret
cmpsl
hlt
loop
int
sub
adc
mov
inc
popf
ja
xorl
outsb
aam
adc
cs
pop
leave
shrb
lahf
movsl
test
and
pop
xlat
dec
pop
pop
andb
cmp
jne
cli
xchg
lods
cmp
sbb
popa
sbb
push
dec
pop
mov
testl
or
fs
out
mov
idivb
cmp
aam
rcrb
or
inc
mov
cli
in
cmp
push
fcmovnu
daa
fdiv
fisubrs
jl
add
xchg
fistpll
fcmovb
xchg
fildl
push
pop
das
inc
rcll
push
out
xor
cmp
dec
dec
cmp
imul
inc
imul
cmpsl
mov
inc
fwait
sti
mov
sub
aaa
xchg
addl
shrb
mov
sti
repnz
mov
cwtl
iret
jnp
arpl
push
mov
pop
insb
lds
rcrl
adc
inc
out
fimuls
shrb
lods
pusha
sub
aad
mov
and
out
push
and
ss
dec
mov
aaa
mov
fbstp
jno
cmp
cli
or
inc
daa
int
sti
ljmp
cmpsl
cmp
cmpsl
jmp
test
cmp
icebp
add
add
dec
sbb
cmpl
inc
js
push
fwait
mov
sub
cmp
in
xor
fwait
mov
pop
out
stc
jae
push
inc
lods
inc
lods
cmp
sbb
cld
jb
xchg
adc
jno
cmp
pop
mov
iret
pop
jne
mov
test
jle
mov
mov
jg
into
push
add
das
mov
ret
fmuls
jle
cmp
and
add
mov
inc
xchg
mov
aas
add
gs
and
cmpsb
and
js
cmp
or
mov
adc
leave
sub
sbb
jns
loop
push
pop
or
pop
dec
pop
gs
mov
sti
bound
mov
fs
adc
test
inc
stc
xchg
sbb
and
gs
pop
aaa
orb
jnp
pop
cmp
pop
xchg
mov
fwait
ss
mul
insb
jmp
dec
push
imul
pop
and
or
cmp
popf
aad
leave
lret
rclb
xchg
xor
jae
push
loop
and
jo
dec
incb
xchg
mov
jo
mov
cs
jl
xor
adc
sub
in
and
push
xor
and
push
mov
sub
lds
or
or
aaa
test
jne
and
xchg
outsb
push
mov
je
cmp
and
mov
lret
dec
xchg
cmp
outsl
xchg
mov
test
jo
xchg
ss
xor
popf
mov
push
fdivs
call
cmp
inc
insb
and
ret
in
add
pushf
jo
mov
inc
mov
pop
outsb
nop
das
imul
repz
jecxz
lea
loopne
sbb
ret
outsb
sub
into
adc
loope
div
inc
fisttpl
inc
sbb
arpl
mov
pop
roll
mov
leave
clc
mov
sti
sub
repnz
xor
aam
and
test
insb
pop
les
lahf
push
aaa
jo
dec
add
ljmp
mov
aaa
js
xchg
xor
aam
mov
push
jb
sbb
xchg
push
sbb
xchg
out
xchg
fdivl
popa
adc
icebp
mov
subb
scas
xchg
jb
daa
in
mov
xlat
mov
xchg
loop
test
fiadds
pop
movsb
xchg
mov
xor
sbb
mov
out
loope
or
mov
lea
fbstp
dec
ja
insb
mov
lds
lcall
int
lret
lahf
pop
fistps
hlt
adc
push
loopne
xor
ss
in
lcall
fisubs
mov
lahf
mov
imul
arpl
js
mov
push
out
and
xor
cmpsb
jns
sbb
fdivrl
push
jns
mov
aad
mov
cmp
in
js
cmpsb
gs
mov
call
aas
pop
mov
adc
add
adc
and
add
iret
sub
mov
lock
movsl
push
mul
jae
inc
dec
jp
push
inc
mov
add
dec
stc
push
out
and
sub
jle
subb
out
fmull
scas
push
push
pop
push
cmp
in
scas
das
or
xor
movsl
xor
mov
jae
cli
in
jmp
shrl
inc
sub
push
mov
lock
push
std
jbe
lds
cmpsb
js
add
call
pop
and
in
out
jne
jb
adc
cmpsl
xchg
push
cld
rol
mov
dec
push
fiaddl
ficoms
pop
gs
pop
ret
mov
cltd
inc
lea
jge
mov
push
and
mov
jbe
fnstenv
dec
sub
push
enter
mov
mov
out
cld
int3
stc
lcall
mov
or
cmp
inc
test
push
and
cltd
mov
sbb
lds
push
sub
add
in
fisttpl
cmp
out
or
in
lret
add
inc
mov
cmpsl
pop
jnp
push
imul
jnp
pop
mov
inc
int
aaa
xor
cmp
dec
dec
jmp
loope
sbb
sahf
or
xchg
adc
xchg
popa
xchg
mov
sbb
rcl
mov
push
ret
das
aas
xchg
pusha
xchg
or
xor
cltd
fwait
sahf
sbb
mov
pop
mov
or
int
cwtl
lock
cmp
mov
dec
add
pop
push
je
fcoms
inc
dec
xchg
imul
dec
inc
loopne
and
lea
addb
mov
dec
push
in
and
lds
jl
xchg
notb
cmp
sbb
aam
cltd
xchg
stos
or
shlb
xchg
mov
imul
or
popa
xchg
jge
pushf
movsb
sbb
lret
jb,pn
or
mov
scas
es
rolb
mov
jge,pn
das
push
jmp
xchg
and
jg
leave
lcall
in
ja
mov
push
pop
rcll
mov
add
pop
daa
movsl
push
pop
pop
adc
fucom
or
mov
dec
cli
int3
inc
mov
and
fisubs
mov
les
mov
pop
adc
inc
sbb
inc
sahf
scas
push
mov
movb
sub
fildll
cmp
popa
or
xchg
push
lods
pop
xor
cmpsl
imul
divb
xchg
shr
inc
pusha
mov
insl
cmpsb
lods
imul
jecxz
in
jge
sbb
gs
sbbb
and
mov
mov
xor
push
sub
pushf
sbb
push
mov
dec
jmp
mov
aad
jae
mov
and
mov
fldcw
cwtl
cmpsl
inc
insb
add
iret
dec
hlt
mov
mov
rclb
bound
sbb
sub
cmp
jle
testb
ficoms
pop
pop
std
mov
xchg
pusha
and
fistps
mov
mov
xchg
mov
sbb
mov
sub
and
cmc
and
push
add
fdivs
adc
hlt
loop
xchg
fidivl
ds
aaa
jb
fcmovu
stc
xchg
iret
jmp
mov
add
jecxz
dec
and
add
mov
hlt
and
cmp
psubsb
movsl
adc
mov
pop
adc
out
xor
test
cs
xor
mov
sbb
mov
mov
outsl
and
mov
sbbb
pop
std
push
mov
and
mov
in
push
jnp
and
jb
cli
cmp
orb
mov
out
sub
sbb
test
push
ljmp
notl
imul
or
lock
mov
stos
or
repnz
aad
jno,pt
inc
mov
stc
nop
cmp
lods
adc
inc
or
test
mov
xor
mov
jge
les
sbb
pop
out
sbb
imul
cwtl
shll
std
hlt
fldl
loope
shr
mov
mov
sbb
and
sbbl
or
data16
js
into
xor
out
inc
cs
popa
sub
das
cmp
pushf
pop
aad
popf
cmc
mov
aas
in
aam
test
mov
sti
lods
sahf
aam
testl
ss
into
negl
xchg
or
das
stc
cmp
push
ljmp
fwait
cli
es
and
aad
stos
sbb
jp
pop
mov
bound
test
lahf
loopne
lret
mov
testl
xlat
xchg
movsl
mov
cmpsb
mov
fimuls
scas
in
js
mov
or
sbb
je
dec
leave
sub
arpl
jns
or
lahf
adc
push
add
test
xchg
mov
xchg
jae
push
mov
mov
pusha
pop
shlb
push
ja
insl
icebp
pop
fwait
push
adc
int
out
mov
test
je
shlb
rcrb
adc
mov
xchg
xor
mov
int
jmp
pusha
xchg
das
imul
push
stos
mov
scas
inc
in
mov
hlt
jg
jne
sarl
xor
jg
inc
mov
out
lahf
fs
data16
lds
push
mov
mov
in
jmp
mov
and
mov
sbbl
xchg
loope,pt
adc
shlb
dec
mov
cmp
cmp
push
xchg
mov
and
push
jecxz
mov
mov
fiaddl
js
lds
movsl
enter
and
mov
dec
xchg
into
test
bsr
jno
pushf
dec
and
and
inc
ret
out
mov
movaps
cmpsl
test
or
pop
adc
push
pop
pop
dec
sbb
hlt
adc
mov
pop
xchg
out
insb
insb
push
sarb
data16
jne
xchg
jle
jecxz
ret
jae
fnstcw
and
dec
pop
popa
push
andb
ljmp
jne
addb
jp
rolb
lea
sbb
fidivrl
dec
daa
and
mulb
jge
mov
test
add
mov
mov
inc
mov
out
rolb
dec
pop
popa
pusha
jle
push
lods
pop
addb
pop
cmp
mov
or
addr16
scas
dec
leave
repnz
add
jbe
int
mov
jns
mov
push
sub
inc
shlb
daa
lea
xlat
cli
pop
lods
pop
dec
out
adc
gs
sub
fcomip
push
std
aaa
mov
mov
stos
inc
or
pop
fistps
test
popf
cmp
hlt
xchg
adc
mov
push
mov
mov
gs
scas
jnp
mov
cltd
dec
je
gs
mov
leave
out
aad
lret
sub
faddl
js
pop
movsl
sbb
and
rolb
add
ds
iret
and
push
cmp
add
data16
inc
insb
sub
xor
in
shrl
jp
mov
cmpsb
fs
and
xor
mov
lcall
cld
fmull
sub
dec
incb
stos
push
and
leave
add
fstps
aad
inc
packuswb
gs
pop
test
mov
jmp
cltd
pop
mov
data16
aaa
jg
incl
mov
dec
repz
jno
or
cwtl
stos
popa
fmull
jne
push
in
mov
xchg
jl
pop
stc
jnp
inc
jno
std
popf
adcb
cmp
repz
sarl
loop
push
fs
pop
cmp
fisubl
xchg
lcall
mov
nop
lcall
ret
jno
xchg
mov
push
cmp
dec
adcl
cmpsb
lock
or
roll
mov
fidivl
lcall
sbb
xlat
xchg
jecxz
xchg
push
push
xor
or
mov
loopw
and
ja,pt
inc
adc
push
ret
mov
fisttpll
mov
int3
hlt
jmp
sbb
and
pushf
scas
xchg
jns
adc
add
mov
insb
ret
cmpsb
das
xchg
cmp
addl
fs
sbb
aas
cli
movsb
or
inc
dec
mov
dec
sub
in
mov
rclb
ljmp
lret
aaa
or
jae
mov
ret
cmp
loope
jge
in
push
pop
push
stc
mov
fstpl
jns
stos
push
adc
leave
jb
insb
mov
das
xchg
or
push
mov
fmul
jb
mov
xchg
sub
addb
enter
inc
insb
mov
cmc
into
movsb
ja
bound
mov
xchg
push
xchg
xor
fcomip
cmc
mov
sbb
rcl
loop
loop
sub
dec
sahf
inc
cmp
cli
aas
cmp
lea
mov
jle
mov
push
jl
mov
inc
or
loop
ljmp
mov
hlt
inc
pop
in
xor
mov
hlt
data16
insb
add
push
jl
dec
xchg
rcrl
lods
push
dec
xor
test
jo
gs
das
test
xor
inc
lods
xchg
popa
mov
jmp
inc
push
popf
in
rol
jae
xchg
in
iret
enter
dec
add
jle
xchg
popa
and
popa
mov
mov
loopne
enter
dec
aam
ret
xor
shrl
outsb
outsl
rol
inc
ja
std
cwtl
pop
in
in
xchg
pop
out
loop
clc
fdivrl
repz
jno
mov
ljmp
cmc
xchg
daa
jbe
in
lods
cmp
ja
ja
lahf
or
mov
or
popa
or
push
lret
jge
sahf
mov
mov
and
push
pop
and
inc
mov
pop
jnp
in
mov
xchg
jns
int3
in
pop
rorl
movsl
mov
into
int
rcl
cmpb
or
cmp
add
push
xor
adc
push
adc
mov
lcall
add
and
mov
mov
pop
lea
jne
add
ret
sub
scas
add
inc
lods
xor
push
mov
test
xor
out
stc
sub
out
cmp
repnz
push
xorl
aas
adc
sarl
jbe
push
ljmp
mov
adc
nop
pusha
add
inc
inc
and
addr16
mov
jo
push
pushf
frstor
nop
cmp
xchg
mov
aam
push
mov
and
rorl
jp
fisttpll
sbb
aad
lret
arpl
sbbb
pop
dec
mulb
imul
fimuls
outsb
pushf
test
push
icebp
adc
and
xchg
add
pusha
xchg
mov
cli
sub
mov
pop
mov
incl
imul
insb
dec
push
add
mov
fsubrs
imul
insl
lock
or
jecxz
add
and
sbb
cmp
cmp
out
test
cmp
test
inc
out
sub
and
scas
pop
outsl
xor
lahf
ljmp
cmpl
jae
cmp
mov
jne
jecxz
cmp
mov
cli
stc
and
outsl
mov
movsb
push
sub
lock
rcpps
cmp
mov
lcall
mov
xchg
push
decl
mov
out
jge
loopne
inc
sti
xchg
ss
stos
sbb
xchg
ficoml
fdivr
mov
xchg
fdivrp
fstpl
push
cld
or
push
cmp
pop
push
testl
cmpsb
cmp
mov
xor
push
frstpm(287
sar
push
in
jnp
cs
and
push
dec
ficomps
cmp
lcall
or
lock
dec
insb
loope
movsl
mov
inc
aad
gs
cmpsl
xor
pop
rolb
in
lds
fsub
inc
xchg
inc
xchg
fwait
adc
push
sbb
pop
iret
popa
mov
mov
jg
mov
fs
pop
pop
cmp
dec
jne
xor
fistl
mov
jnp
mov
sbb
ss
aad
xchg
scas
cmpsb
test
adc
lea
adc
shrb
fisubl
mov
aas
and
hlt
and
mov
and
fstp
aas
cwtl
mov
add
xor
out
add
xor
sbb
loop
dec
dec
dec
xchg
rclb
movsb
call
xchg
dec
add
push
bound
xor
ljmp
push
cmp
sbb
xchg
repnz
loope
adc
bnd
adc
shrb
push
cmp
repnz
push
int
or
pop
sub
lds
adc
mov
inc
and
aad
xchg
or
daa
adc
pop
cmp
jg
cmp
adc
sub
push
das
sub
sbb
dec
jg
mov
push
popa
cwtl
lods
cld
jecxz
je
leavew
or
repnz
or
sbb
rcrl
ljmp
xchg
nop
clc
popa
xorb
fnstenv
test
test
fs
add
cmp
push
movb
ljmp
xor
xchg
adc
rorl
push
jne
sbb
cmpsb
lds
imul
dec
shrl
and
outsb
pushf
jnp
pop
mov
rorb
scas
xchg
pop
cwtl
add
shrl
pop
push
pop
xor
add
xchg
mov
pushf
lods
fcmovb
stc
out
jo
mov
out
imul
cmp
dec
mov
xchg
xchg
cwtl
inc
stos
xchg
push
jg
xor
into
cmp
inc
xchg
in
and
sub
in
dec
lods
pop
sbb
xchg
movsb
mov
shll
fdivp
inc
popf
ja
aaa
and
je
mov
cmpsl
adc
dec
mov
or
out
lods
push
mov
mov
xchg
sub
mov
mov
rorb
sbb
pop
lcall
xor
push
push
push
inc
adc
cmc
pop
popa
add
cmpsl
adc
das
mov
data16
dec
sbb
mov
push
lods
jbe
test
lret
mov
aam
in
sbb
subb
or
jecxz
add
out
dec
fwait
pop
sbb
or
enter
push
pop
mov
jecxz
inc
cs
mov
lahf
in
sarl
push
iret
insb
jmp
clc
fisttps
rcrb
jecxz
out
loope
mov
or
or
inc
inc
add
xchg
ja
push
push
es
psubb
lods
or
cmp
or
xchg
arpl
pop
mov
rcrl
mov
imul
push
push
shrl
xor
sti
pop
push
or
sbb
xchg
xor
cmc
sahf
xor
fsts
orb
cwtl
lahf
inc
and
fmulp
push
je
pop
and
cld
cmp
mov
dec
hlt
mov
call
shl
mov
xchg
jae
test
pop
in
ljmp
adc
inc
jns
mov
mov
add
aad
add
jne
sbbl
or
xorl
int
cmp
add
add
xchg
mov
mov
push
nop
cmp
dec
cmp
divb
ret
jp
fisttpll
ret
jge
adc
mov
and
stos
dec
cli
adc
xchg
jmp
mov
fstpl
jbe
xor
repnz
pop
jno
mov
ds
pop
jl
and
mov
lret
inc
imul
xor
jnp
in
lahf
xor
stc
sub
xor
and
and
mov
xor
push
ss
aaa
mov
aam
sbb
lcall
insl
and
push
pop
lods
filds
xchg
push
sti
xor
test
cmpsb
mov
inc
xchg
pop
sbb
mov
jg
xchg
in
cmpsl
sbb
cmpsb
or
insb
iret
movsl
or
sbb
addb
lods
cwtl
mov
mov
loop
pop
out
dec
cmp
mov
enter
fdivr
mov
test
push
xor
mov
mov
nop
popa
pop
adc
or
xor
scas
fisubs
lret
notb
xchg
sub
jno
jecxz
mov
into
into
jno
aad
mov
mov
inc
adc
fdivrp
cltd
cmp
test
push
xchg
xchg
sbb
xor
push
jmp
xor
jns
push
dec
test
jns
loop
push
or
xchg
add
sub
add
pop
xor
repnz
jmp
mov
je
dec
xchg
cwtl
clc
movsb
scas
xchg
out
sub
mov
sbb
ss
dec
add
cs
stc
adc
movsb
xchg
lahf
dec
test
jns
push
pusha
pop
jecxz
mov
xchg
push
cmc
fsubrl
ja
lds
stc
push
fnstcw
adc
test
or
pusha
pop
push
push
pop
mov
adc
sbb
xlat
lods
fcomps
add
ja
add
roll
dec
mov
add
fildll
out
inc
cmc
push
movsl
jno
mov
or
lds
push
sbb
andb
pop
mov
repnz
pop
subl
adc
subb
fs
repnz
lret
push
inc
kandw
mov
ss
jmp
pop
mov
pop
aam
mov
das
lahf
jae
fcoms
pop
sbb
cmp
jno
adc
dec
cs
int
adc
aaa
or
mov
pop
jb
in
mov
cmp
movsl
fisttpll
jle
sub
imul
ss
pusha
cld
dec
mov
test
xchg
repz
dec
leave
sbb
lods
pop
lods
in
repz
dec
xor
mov
pop
outsb
sub
sub
imul
dec
mov
cld
dec
push
adc
push
add
push
push
jno
int3
inc
sbb
pop
pusha
scas
mov
push
js
lret
ret
ds
cli
or
sbb
push
mov
xchg
shll
dec
outsl
mov
push
or
mov
mov
popf
fnstcw
cli
mov
or
sub
or
pop
jg
imulb
fiaddl
and
and
popa
std
xor
cmpsb
inc
scas
jns
jnp
sub
mov
cltd
mov
loope
pop
pop
insl
mov
aas
lret
in
dec
testl
jno
inc
pop
or
das
mov
push
mov
mov
in
fisubrs
lcall
or
sub
xor
imul
in
loop
jle
jbe
xchg
bound
add
mov
fcompl
lods
mov
mov
sti
mov
sub
mov
mov
insb
ds
push
dec
into
repnz
movsb
aaa
imul
jmp
and
jle
loope
icebp
jb
dec
xor
fsubrs
push
mov
addr16
repz
jecxz
mov
out
lret
cld
xor
into
xor
mov
mov
outsl
push
fcomps
fwait
outsb
xchg
fsubp
dec
fistps
loop
add
add
dec
das
sub
loope
ret
mov
xor
xchg
push
sub
jmp
push
adc
lahf
pop
icebp
and
in
es
in
test
lret
mov
inc
mov
mov
adc
lods
mov
push
push
pop
pop
int
pop
stos
sbb
sbb
je
fcoms
addr16
cli
cmpsl
mov
movsb
lods
lret
xor
inc
push
je
sub
lods
pushw
pop
test
dec
xchg
jne
shl
dec
test
pop
dec
sub
add
pop
add
test
fldcw
ds
fdivrp
dec
cmpsb
filds
in
jae
jae
loope
push
sub
in
cmpsl
and
mov
nop/reserved
test
cmp
out
fadds
int
jnp
dec
xor
fs
data16
popl
outsl
mov
iret
or
pusha
hlt
outsb
add
imulb
dec
cli
mov
sahf
cmp
fwait
or
cmp
ja
fldcw
jb
fstps
dec
pop
cld
aaa
push
ret
sub
add
pop
fstpt
mov
push
mov
pop
inc
push
lcall
pop
bound
into
jmp
int
add
cmpb
pop
shrb
inc
lock
jmp
imul
mov
inc
aaa
lods
pop
xchg
dec
jp
sbb
add
push
xchg
push
sbb
and
ficoms
test
pop
xlat
mov
lcall
std
les
push
push
mov
int
sub
adc
das
iret
sub
sbb
ss
fs
mov
push
lods
xorb
sub
negb
push
inc
pushf
or
cmp
pop
cwtl
fwait
test
pop
sti
inc
stos
push
fadds
in
pop
xor
mov
ja
mov
xchg
stc
nop
jl
sarl
inc
subb
jo
cli
int3
lcall
fwait
pop
fildl
out
or
push
jle
inc
sub
mov
and
arpl
je
cmp
jp
pop
mov
jp
test
mov
and
test
dec
lea
dec
lock
jl
enter
inc
cltd
pop
inc
ret
test
lcall
adc
lret
nop
hlt
je
mov
xchg
cld
inc
mov
adc
mov
fwait
inc
cmp
dec
jmp
cmc
out
or
jmp
push
pop
and
cmp
adc
jnp
mov
push
fidivrl
sbb
mov
push
mov
jns
cltd
inc
icebp
adc
ficomps
xlat
sub
xchg
sub
insl
in
sub
inc
mov
xchg
cmp
cli
in
int
int
fwait
js
add
xchg
mov
mov
lahf
cwtl
icebp
adc
jl
push
xchg
jns
test
dec
fldenv
mov
cmp
cmpsb
mov
movsb
jae
out
jnp
pop
mov
mov
inc
mov
cld
mov
xorps
dec
and
push
aad
xlat
inc
ficomps
mov
pop
xor
repz
add
das
cmpsb
jp
in
cli
jno
sbb
and
jnp
sbb
ret
notl
sub
pop
xchg
add
movsl
mov
in
mov
rol
lret
add
rorb
insl
int3
xchg
daa
ss
cmp
xchg
sub
js
mov
pop
dec
mov
pusha
sub
xchg
iret
lret
shr
in
loop
es
push
cld
cmp
std
out
add
mov
mov
lret
ljmp
or
fstpt
xchg
add
loopne
mov
mov
xor
sbb
mov
mov
jecxz
push
in
push
rcll
xor
adc
int
dec
cmp
sbb
add
sbb
pop
lea
pop
jmp
xlat
mov
imul
pusha
dec
shrl
jecxz
cmp
aaa
jmp
xchg
ss
mov
inc
cwtl
imul
push
push
mov
loop
pushf
fldenv
mov
icebp
mov
adc
aad
jge
mov
mov
lock
jle
fs
sub
jecxz
xchg
adc
cli
adc
sub
mov
insb
rep
mov
fstl
arpl
es
dec
adc
push
sti
or
push
das
push
loope
das
xchg
mov
jno
int3
mov
mov
ja
mov
sbb
or
js
dec
xchg
xchg
dec
sbb
sbb
fs
ja
adc
lahf
ss
sub
ja
dec
push
loope
jge
jmp
pop
lret
or
movl
sbb
lahf
iret
dec
push
les
pop
mov
xor
push
in
flds
dec
inc
inc
mov
add
rolb
dec
sbb
jge
xor
mov
in
out
or
aas
jg
int
mov
sub
stos
xor
int3
cli
ficompl
jg
mov
outsb
mov
movsb
in
jp
fstpt
scas
iret
adc
sbbl
add
or
add
pushf
add
mov
cli
jmp
sbb
pop
int3
xchg
shr
add
mov
lock
ja
shrb
dec
mov
xchg
sbb
jbe
xor
adc
icebp
popa
mov
repz
adcb
out
mov
ja
push
or
xchg
sub
cmp
dec
inc
jg
int
scas
push
jbe
mov
xor
xchg
outsb
or
cltd
inc
jbe
mov
push
mov
test
cld
sti
mov
sub
mov
test
rcrl
inc
inc
loop
std
dec
outsl
xchg
push
mov
inc
cmp
sub
cmpb
sbb
cmp
push
paddusb
push
cmp
inc
popf
nop
int3
jbe
inc
add
sbb
leave
cmpsl
rcrl
xchg
cltd
push
outsb
mov
xchg
inc
cmp
push
xor
push
lret
mov
inc
push
addb
clc
push
ss
loope
dec
aaa
ss
scas
cs
cmp
repnz
mov
mov
mov
or
sbb
inc
lcall
mov
idivl
xchg
lock
mov
sahf
or
jns
in
fisttpll
adc
shrl
fadd
jbe
pop
in
jns
pop
out
dec
or
jns
fstpt
mov
iret
mov
or
inc
nop
inc
xchg
inc
fistpll
inc
out
mov
jge
out
cltd
mov
int3
addr16
push
xor
push
cmp
sbb
pop
in
rorl
leave
jno
stc
mov
in
xchg
pop
jne
push
js
push
or
jne
mov
mov
pop
aam
sbb
fcompl
push
and
pusha
cmpsb
fisubl
testb
fs
mov
xlat
jecxz
xor
push
fldl
das
xchg
xor
pfcmpeq
int
fsubs
cltd
ss
add
popf
cmp
rcrb
dec
or
mov
inc
bound
jae
lahf
adc
push
add
adc
inc
cwtl
mov
or
xchg
sbb
int3
out
out
test
in
hlt
sti
pop
or
lahf
sub
jns
loop
iret
lods
add
shll
lock
dec
pop
jg
or
imul
gs
inc
and
nop
cmp
sbb
mov
jge
aad
inc
cmp
and
sbb
push
aam
stc
lret
sahf
cmp
mov
sbb
fidivrl
flds
std
cmp
icebp
pop
sti
xor
xchg
fs
out
pop
adc
lock
out
sarl
cmpsb
adc
sub
mov
ljmp
sub
cli
add
mov
icebp
xor
lods
es
and
in
inc
jbe
jp
repnz
jecxz
add
sahf
xor
aam
imul
hlt
dec
xor
ja
shll
lods
sbb
ss
and
popf
pop
and
and
shr
sbb
les
fsub
sub
xorb
sbb
jecxz
loop
cld
sub
movsl
xchg
out
and
mov
cltd
outsb
inc
loopne
stos
or
pop
mov
enter
adc
dec
and
jp
stos
push
movsl
lea
jo
add
test
pop
jnp
outsl
mov
scas
or
addr16
shll
jg
dec
out
cmp
stos
lret
repnz
aam
js
filds
ret
mov
jp
aaa
cmp
ret
jecxz
mov
dec
notl
das
pushf
cmp
mov
mov
inc
or
push
dec
xchg
enter
lods
xchg
inc
and
lds
mov
stc
mov
cmp
adc
or
mov
cmp
cld
pop
sti
cmp
push
cmp
mov
fnstenv
shlb
mov
outsb
mov
jbe
int
pop
cmp
xlat
cmp
sbb
jbe
sbb
adc
cmp
adc
push
pop
in
push
loopne
enter
std
push
pop
mov
jo
leave
mov
jge
push
add
je
mov
inc
inc
pop
imul
fimuls
clc
lret
lds
lret
ret
xor
mov
pushf
pop
mov
imul
push
push
stc
ja
or
nop
scas
mov
movsl
jnp
xor
push
mov
ljmp
mov
sub
imul
in
mov
lods
jo
popf
xor
xchg
das
out
stos
xchg
lods
mov
xor
dec
mov
sti
xchg
loopne
mov
in
inc
jg
iret
sub
mov
mov
mov
lret
mov
cmpsb
pop
pop
inc
into
into
dec
add
or
mov
sbb
sbb
mov
leave
cltd
xchg
andb
jg
sbb
dec
lock
push
fildll
push
stc
mov
mov
and
jne
pop
jo
int
pushf
arpl
adc
mov
daa
and
ss
fiaddl
ljmp
push
and
jne
jmp
incb
aas
mov
pop
xchg
daa
mov
mov
mov
pop
pop
push
add
mov
cmc
adc
push
lahf
in
popa
inc
mov
xchg
inc
inc
inc
jl
std
inc
lcall
xor
stos
push
cmova
inc
xchg
mov
cld
lods
dec
jne
mov
cmp
popa
xchg
mov
pop
int3
inc
pop
push
add
pop
das
adc
mov
xor
mov
ss
push
bound
or
or
pushf
xchg
add
js
ss
and
pop
sub
mov
lods
inc
push
pop
pop
or
mov
mov
adc
cmp
adc
fnsetpm(287
pop
scas
xchg
push
ja
lods
les
test
fsubrs
adc
xchg
pop
push
bound
or
xor
jecxz
add
mov
js
popl
daa
jp
movsl
ficompl
dec
mov
repnz
lret
cmpsl
je
mov
outsb
sub
es
inc
loop
mov
fucom
repz
mov
inc
das
fs
out
adc
outsb
inc
notl
mov
add
cli
popf
jge
loopne
mov
push
fwait
jp
xchg
lahf
push
pop
pop
xchg
dec
sti
jae
orb
pusha
out
daa
xchg
in
mov
ss
das
fadds
icebp
pop
insb
jae
xor
inc
loope
adc
add
mov
test
dec
sarl
test
jo
aad
loopne
mov
lcall
lcall
je
cmp
mov
test
cli
outsl
es
xchg
mov
mov
sti
push
mov
lahf
jmp
mov
mov
xchg
pop
xor
add
aam
enter
inc
dec
jo
ret
mov
lods
les
inc
cs
fidivl
mov
out
insb
testb
xor
cmpb
mov
add
push
xchg
mov
add
mov
inc
mov
pop
or
imul
mull
sarl
push
inc
jne
stos
jg
mov
xchg
mov
loope
mov
add
mov
or
or
sub
in
iret
jb
iret
jnp
add
sahf
cmp
inc
or
stos
pop
mov
enter
mov
loopne
divl
cwtl
or
imul
aad
pop
push
pop
cmp
lss
sub
push
xchg
push
movsb
bound
dec
out
or
and
and
clc
shlb
and
add
je
push
xor
xchg
int
out
cmpsl
pop
aas
adc
fs
clc
push
rcrb
je
jnp
fdivp
sub
add
hlt
loop
in
js
xchg
adc
inc
clc
and
lahf
fcomi
or
in
popf
jg
adc
int3
das
xchg
sub
cmc
lahf
push
xchg
push
dec
inc
das
movsb
or
call
es
jnp
aas
dec
sub
fisttpll
dec
rcrl
rclb
lahf
loopne
inc
mov
fdivrs
pop
push
push
and
sub
repz
mov
cmp
fiadds
fidivrl
sub
jge
and
sub
out
cwtl
out
and
cmpsb
addl
mov
fwait
jnp
jmp
mov
int
fistl
or
add
inc
pop
les
jmp
insl
pop
and
cmp
fcmovu
ljmp
dec
adc
mov
call
enter
cmp
mov
rcrb
repz
pop
pop
cmp
out
dec
test
xchg
cmp
mov
mov
gs
adc
cmpl
sbb
lods
dec
adc
jmp
pop
sbb
adc
orb
add
idivl
int
mov
push
in
push
fidivrs
je
xlat
xor
out
push
je
call
rcll
jp
mov
mov
add
aas
lahf
jge
inc
mov
jp
sub
ljmp
bound
sub
mov
pop
dec
in
mov
or
add
add
mov
lea
enter
xorl
or
mov
int3
dec
pop
loope
push
add
and
decl
ljmp
push
mov
bound
push
jle
xchg
data16
aas
mov
aam
sbb
jb
add
fdivs
insl
and
iret
add
bnd
pop
test
in
mulb
cmp
sti
add
sub
jl
mov
stos
xlat
stc
sahf
arpl
orl
fidivrs
xor
and
out
pop
flds
jae
pop
fs
xor
fcmovu
jmp
jbe
fs
jae
fdivrs
and
inc
sbb
sti
mov
fidivl
xor
jmp
stos
mov
jne
mov
xor
mov
ljmp
jecxz
push
cmp
add
rcll
mov
in
jmp
xor
mov
mov
jnp
aad
icebp
psubb
ja
gs
sbb
xchg
mov
les
popl
sbb
clc
stc
adcb
push
into
and
stos
and
mov
inc
dec
pop
nop
sbb
pop
fcomp
sub
push
adc
enter
outsl
insb
jo
sahf
scas
xor
sar
aad
push
out
es
lret
sbb
fsts
mov
or
fiadds
mov
jno
pop
fisttpll
imul
xor
push
xor
xor
jecxz
xor
xor
jno
sub
lret
inc
in
xchg
push
dec
call
xchg
aaa
out
in
xor
push
sub
adc
mov
xor
ret
xchg
out
mov
jg
fldt
ret
jo
aas
bound
filds
pop
push
imulb
shr
sub
push
sub
les
mov
insb
repnz
decl
sub
fdivr
aad
ja
xchg
mov
adc
mov
push
test
shrb
jg
int3
mov
jno
dec
and
or
or
sub
loop
mov
jl
das
popf
pushf
mov
jp
jmp
mov
cli
mov
call
cmpsl
cmp
les
dec
xor
xlat
xor
add
xchg
mov
shll
out
je
xchg
adc
inc
clc
dec
cmp
add
aaa
mov
add
sub
movsb
jno
push
scas
lea
pop
sbb
dec
movl
das
sub
lret
lahf
arpl
jnp
inc
daa
int3
adc
dec
dec
dec
enter
fisubrs
insb
mov
fstpl
mov
and
iret
lods
push
cmp
dec
mov
loopne
push
sbb
ljmp
jae,pt
int3
fcomi
fmul
mov
test
lea
pop
or
addl
adc
lret
js
int3
mov
fstp
clc
xor
sarb
mov
aad
sub
push
aas
fsubl
add
dec
rcrb
push
lcall
adc
xor
jae
xchg
test
es
stc
pop
sahf
mov
add
clc
movsb
es
xchg
push
mov
insl
jmp
push
cli
fisubrl
cmc
fistpll
cmpsb
out
add
cwtl
cmp
js
cmpsb
mov
ja
fadd
mov
xlat
push
push
aas
push
rep
in
outsb
mov
into
mov
scas
arpl
das
pop
out
sub
xchg
inc
hlt
frstor
push
out
or
sti
mov
fldl
dec
fstpt
mov
outsl
and
xor
and
lcall
mov
fsubrs
push
push
stc
iret
ret
inc
lods
test
push
fnstcw
xchg
arpl
fdivr
incb
xchg
or
bnd
xor
mov
xor
in
xchg
fadds
pop
inc
lods
aas
mov
adc
or
lahf
adcb
jecxz
sub
mov
push
add
lcall
jmp
je
test
out
subb
repnz
cwtl
sbbb
push
fisttpl
push
iret
or
shrb
popf
jnp
fsts
sub
fsts
lea
outsl
add
xadd
popl
lcall
stos
fiadds
fldt
cmp
rcrl
dec
out
subb
mov
jb
int
xchg
jb
lods
xchg
lahf
mov
stc
xlat
lahf
fsts
cmp
mov
xor
fs
mov
dec
and
xchg
cmp
ds
add
aad
xchg
push
es
ret
clc
mov
mov
or
add
or
xchg
cmpsl
xchg
add
pop
cmp
xor
and
or
clc
dec
mov
int3
sar
push
jns
mov
dec
sub
push
pushl
call
cmp
push
push
mov
fistpl
lods
ret
divb
lret
add
mov
add
cli
push
and
iret
adc
jle
aad
test
insl
lea
push
inc
iret
es
out
js
xchg
ret
jb
lods
subl
in
mov
inc
jnp
cltd
insl
cmp
scas
pop
repnz
lea
cmp
dec
or
loop
sbb
jae
fdivrs
mov
cli
repz
inc
imul
mov
clc
js
and
mov
fmul
xchg
es
daa
sti
lcall
mov
push
dec
mov
xlat
mov
aaa
mov
in
mov
pop
xor
stc
sub
ja
dec
pop
sub
jge
daa
cmpsb
ret
sub
push
es
stos
arpl
shrl
push
add
xchg
mov
mov
lahf
dec
sarl
out
or
cmp
xor
insl
push
andl
xor
sahf
xor
jle
lods
pop
mov
fdivl
notl
lock
je
xchg
push
movsb
push
dec
inc
insb
les
push
push
testb
shrl
add
cmp
xorl
mov
sbb
cltd
test
pop
mov
and
aas
pop
adc
inc
fstp
mov
mov
sub
aam
sbb
push
sbb
jp
shl
shll
dec
pop
and
dec
popf
std
int
push
add
ficomps
cmp
sbb
aaa
lods
xor
mov
int
jge
adc
xor
loopne
or
jmp
and
adc
js
adc
shlb
sti
mov
jae
sbb
push
std
pop
popa
mov
jae
xchg
aad
or
in
adc
sti
mov
mov
mov
or
repnz
and
sub
adcb
cmpsb
xor
sub
hlt
xchg
neg
add
jl
ss
out
mov
repnz
xchg
cwtl
jmp
cwtl
dec
fwait
cs
mov
dec
cmpsb
pop
mov
enter
ret
xchg
adc
je
mov
adc
dec
loopne
cmpb
dec
and
xchg
dec
lock
fnstcw
xor
subb
cmp
clc
xor
and
icebp
std
xor
sub
ljmp
jns
fstpl
clc
cmc
in
dec
lods
mov
pusha
xor
call
and
mov
in
sbb
xor
fs
mov
addr16
dec
xchg
dec
adc
in
xchg
add
pop
cmpsb
sub
add
std
nop
xchg
sub
adc
insl
shrb
dec
xchg
sbb
das
sbb
lea
cld
mov
lea
movsb
je
cmp
dec
sbb
loop
std
sbb
adc
in
sbb
or
pop
rorl
mov
bound
bound
test
repnz
mov
call
arpl
mov
dec
sbb
cltd
aas
scas
leave
dec
dec
sub
div
movsb
sbb
jecxz
mov
ret
sub
jbe
pop
mov
and
data16
cli
and
dec
sti
pushf
cmp
ljmp
arpl
inc
ja
push
fisubl
sbb
test
push
in
adc
mov
push
xchg
pop
outsb
mov
mov
cwtl
clc
and
xor
lret
fbld
addr16
aas
push
clc
jle
movsl
xchg
push
xor
xor
jo
repz
mov
sbb
push
pop
mov
fwait
cmp
xchg
incl
aas
push
jge
inc
xchg
inc
cli
notb
int
out
movsl
jl
aaa
out
mov
jecxz
dec
push
mov
sbb
push
jl
ja
repz
inc
and
incb
lret
call
out
cmpsl
mov
js
lods
cmc
shll
jl
pushf
push
xchg
test
jecxz
push
loop
and
incl
pop
xchg
mov
xchg
int
outsb
mov
lods
pop
mov
loop
outsb
fiaddl
dec
arpl
imul
mov
cmp
or
stos
cs
lods
andnps
sbb
lret
subb
mov
lods
iret
inc
into
mov
push
cmpsl
push
rol
imul
out
jg
mov
xor
mov
fdivr
jb
cmpsb
cmp
sbbb
mov
mov
sbb
bound
and
aas
or
popa
sbb
test
push
pop
or
cld
fcomps
mulb
call
dec
xlat
or
sub
xor
pop
fidivrl
xor
adc
dec
ljmp
in
movsl
in
negl
xchg
and
cmpsb
lock
orl
pop
or
xor
xor
fs
shlb
fsts
inc
pop
inc
jbe
xor
pusha
cmpsl
mov
xor
stc
aad
out
mov
shll
push
pop
fstps
pushf
fiaddl
loopne
sbb
lods
fidivs
jp
cmpsl
ss
add
or
mov
jne
popf
dec
xchg
rol
shl
add
push
daa
jmp
sbb
and
xchg
loop
scas
sub
cmp
inc
flds
mov
ja
pop
dec
sbb
out
push
dec
sbb
lret
push
mov
xor
or
lcall
pop
xor
cmc
lahf
cli
xchg
push
cmpsb
lea
repz
mov
mov
arpl
mov
iret
lahf
cmc
imul
test
scas
and
into
adc
push
pop
xchg
filds
mov
es
jg
stos
testb
add
test
bound
cmp
ljmp
out
lahf
dec
movsl
jbe
jp
dec
xchg
inc
sub
cli
xor
pop
and
pop
movl
push
sbb
cmp
lcall
or
shlb
cmp
push
loope
outsb
mov
cwtl
jnp
push
repnz
out
jg
pcmpgtd
daa
adc
out
das
sbb
xlat
push
mov
xor
std
sub
mov
xchg
lea
push
jbe
inc
adc
aad
add
and
cmc
add
loop
sbb
mov
cmpsl
paddusb
es
cmpsl
push
ljmp
cmp
bnd
shlb
in
shl
push
xor
xor
xchg
adc
mov
pop
mov
cwtl
pop
add
out
lcall
push
sbb
jg
inc
cmp
fldt
xchg
lret
xchg
mov
jbe
inc
jno
adc
sbb
pop
std
out
and
shll
push
ret
scas
lea
or
pop
in
push
sub
push
inc
mov
sub
testb
push
mov
add
clc
and
cmc
arpl
pop
ljmp
mov
insl
sbb
out
cmc
mov
dec
loop
movb
cmp
sub
sbb
scas
inc
outsl
jnp
xlat
loopne
adc
negb
or
mov
divl
mov
test
inc
shl
xchg
jo
cmp
mov
xchg
inc
xlat
adc
pop
je
inc
mov
push
faddl
jmp
fisttpl
add
jge
sub
int
iret
sbb
inc
and
dec
cwtl
movsl
dec
cmpb
imul
cmp
repz
jns
orb
pop
sahf
arpl
or
jp
icebp
insl
fisubl
inc
jne
jne
adc
mov
test
roll
lret
scas
movsb
out
dec
repnz
sbb
dec
or
test
test
sbb
je
dec
pop
movsl
dec
ljmp
cwtl
mov
mov
scas
bound
xor
in
mov
addb
sbb
and
test
jbe
je
mov
aas
jbe
xchg
lcall
sbb
xchg
popf
in
inc
icebp
hlt
mov
or
jle
mov
push
xchg
jecxz
pop
mov
adc
std
jbe
adc
ljmp
pop
push
inc
and
add
push
jl
in
sub
ret
or
sub
jno
add
lock
rolb
cld
std
mov
int
mov
stc
fists
jp
mov
movb
dec
xchg
adcb
xor
rcrb
or
cltd
iret
shrb
sub
inc
cltd
insb
mov
repz
xchg
sbb
call
cmp
pop
rcll
repnz
mov
pop
jne
mov
movsl
cwtl
adc
pop
mov
dec
jecxz
fs
or
and
imul
addr16
mov
aam
xchg
pop
pop
mov
xor
push
inc
cwtl
sbb
loope
inc
stos
dec
jae
xchg
dec
imul
test
rcrb
andb
push
sub
jno
pop
fsubp
cmp
dec
icebp
or
cwtl
cltd
arpl
dec
pop
push
pushf
inc
pop
jge
adc
push
xchg
ss
and
sbb
mov
loope
and
out
cmc
imul
scas
adc
and
aam
mov
jae
icebp
outsl
xchg
pop
adc
xchg
push
jge
dec
hlt
std
out
out
adc
out
push
cmp
mov
pop
push
dec
jae,pn
cld
outsb
fadds
sub
pushf
iret
mov
mov
jno
jne
xchg
dec
iret
stc
jae
pushf
rolb
xchg
dec
cltd
jmp
jo
or
inc
adc
fstpt
outsl
cmp
jo
mov
sbb
cmpb
imul
loope
bound
mov
lods
lock
inc
adc
dec
das
mov
xchg
and
dec
mov
sete
mov
ja
mov
pusha
adc
add
out
xchg
mov
xor
push
push
bound
pop
inc
sub
xor
push
sub
or
movsl
jg
xor
data16
mov
shll
pop
dec
cmp
add
dec
mov
cmp
mov
xchg
loope
and
cwtl
xchg
mov
mov
shrl
imul
lret
enter
and
xchg
mov
popf
jp
adc
aas
pop
adc
imul
or
sahf
cld
sub
icebp
in
mov
jns
bound
mov
lret
mov
mov
mov
cmp
mov
sarl
xlat
jo
xchg
int
bound
pop
sub
jmp
xlat
push
fsubl
int3
ljmp
xchg
aam
daa
data16
pop
mov
fistl
popf
cmp
aam
or
and
push
in
stos
nop
sahf
into
orb
cs
clc
andl
imul
div
aad
in
ss
stos
out
jns
add
push
scas
dec
and
push
xor
call
in
test
jecxz
dec
cwtl
mov
xchg
xor
andl
mov
shll
inc
fdivrp
aam
pop
pop
mov
jo
arpl
aaa
fisubs
xchg
and
stos
cmp
les
xchg
mov
fistps
xchg
xor
jle
mov
nop
pop
dec
sbb
inc
jmp
sbb
jo
test
lahf
sub
xchg
outsb
sbb
or
mov
movsl
add
adc
movsl
cmp
clc
cmp
pop
int
jb
pop
add
push
test
adc
adc
sub
cmp
cmpsb
add
or
jb
sub
push
aad
mov
aaa
jmp
sub
je
clc
fnstcw
cmp
mov
adc
add
mov
mov
insb
add
fidivrs
pop
arpl
js
ss
call
fsubl
enter
push
nop
mov
dec
or
and
fnstcw
lcall
jns
outsb
cmp
xor
jae
ret
push
andb
cld
cmpsb
lret
jecxz
and
cmc
xchg
xor
cs
cmpsb
mov
insl
pop
and
xchg
clc
js
icebp
cmovb
mov
or
cs
inc
shlb
or
sub
in
push
pop
sarb
adc
cltd
sbb
adc
lods
int
jmp
jnp
pusha
push
in
sbb
adc
mov
ret
sahf
mov
inc
nop
sub
mov
pop
lods
push
push
pushf
outsb
mov
test
test
mov
cmp
or
ret
cmp
out
sub
adc
iret
xor
inc
cmp
dec
dec
shr
psadbw
sub
fbld
stos
cli
std
lock
mov
pop
repnz
xchg
jne
pop
jle
into
andb
iret
push
aaa
adc
mov
or
jg
mov
xor
mov
inc
test
sbb
inc
mov
hlt
fildll
adc
inc
mov
scas
sti
mov
je
pop
or
movsb
push
pop
and
sub
mov
lcall
or
mov
sub
cmp
xor
cs
add
dec
mov
or
and
cmp
and
cmp
aam
pusha
aam
jmp
and
mov
lds
push
mov
ss
xlat
in
cltd
xor
test
push
ss
jno
push
imul
mov
jnp
mov
push
mov
fmul
push
bound
scas
xchg
into
mov
xchg
pop
or
aam
rcrl
in
adc
xlat
cmp
repz
cld
ljmp
call
movsb
movsl
mov
shll
add
sahf
pop
scas
int3
sub
sbb
jns
aad
sub
lock
jl
or
std
shll
cwtl
std
dec
aas
pop
rolb
jo
dec
daa
insb
sbb
pop
push
add
out
int
fistps
stos
mov
pop
or
out
aas
nop
aad
pop
inc
xor
push
inc
iret
push
test
ror
or
inc
xor
das
jae
push
xchg
add
mov
mov
push
sub
div
xchg
test
cmp
mov
loope
add
dec
cwtl
sub
sar
jo
loop
jno
sbb
pop
sahf
insb
imul
pop
mov
jnp
xor
cli
cmp
popf
lahf
aas
scas
imul
in
inc
fsubp
cmc
cmpsb
rcll
xlat
push
in
mov
lds
adc
cmp
adc
sahf
in
out
cmp
jbe
es
out
jecxz
hlt
sub
sbb
sti
pop
inc
popl
jbe
lds
fdiv
fistps
inc
push
or
insb
push
call
test
xor
xchg
mov
sub
rcrb
jecxz
lods
push
jecxz
add
pop
adc
dec
enter
cli
jmp
daa
jbe
pop
and
jmp
pop
jbe
add
je
push
push
es
adc
sbb
push
call
fcmovu
mov
nop
mov
push
cmp
ljmp
mov
sti
mov
scas
sub
imull
sub
lret
cmpb
push
push
sub
sub
or
xchg
idiv
in
pop
jecxz
ret
cs
mov
lea
mov
pop
jnp
fistpl
pushf
sbb
divl
insl
out
insb
loopne
mov
mov
mov
in
lods
cmpsb
cmpsl
shl
jmp
add
pusha
add
mov
jo
push
repz
mov
les
mov
jb
jne
xor
dec
lods
arpl
int
outsb
cmc
sub
call
inc
nop
xchg
inc
daa
jge
orl
out
dec
add
lods
jbe
sarl
push
inc
adc
xor
cmp
ret
outsb
pop
out
fildll
sbb
mov
sbb
test
aam
xchg
adc
xchg
mov
cmpsb
repnz
out
das
push
int
add
push
push
lahf
fstps
mov
scas
inc
out
das
jmp
mov
push
push
je
aad
pushf
pusha
add
push
test
ret
jns
aaa
insb
jmp
imul
fcmove
sub
rclb
pop
dec
mov
stos
cltd
shrl
out
stos
test
inc
stos
ds
jno
push
mov
cmpsb
insl
repnz
push
pushf
pop
mov
sar
push
cmp
fs
ret
pop
jno
packssdw
mov
push
ss
clc
adc
sub
arpl
mov
xor
inc
js
sarb
cwtl
mov
sahf
outsl
xlat
pop
add
lret
fdivs
mov
jg
sbb
fisttpll
push
cmc
int
addr16
imul
out
out
xchg
dec
test
nop
cmpsb
call
setno
mov
dec
inc
fldenv
orb
rcl
jmp
sahf
fwait
add
imul
into
in
xor
cmp
in
inc
popa
aaa
inc
fisttpll
cmc
xor
sbb
jp
sbb
fwait
outsb
test
sub
outsl
cmp
mov
jp
jo
dec
jge
jno
cmp
lret
xchg
dec
pop
sbb
inc
in
inc
add
sub
xchg
mov
mov
repz
rclb
ret
mov
jp
jl
outsl
loop
xlat
pop
xlat
or
js
test
cmp
scas
push
sti
loope
adc
pop
test
lea
fnsave
pop
fidivrs
pushf
out
clc
jle
daa
jb
test
push
pop
mov
mov
cmc
iret
xor
sub
gs
xchg
es
jge
fisubrs
inc
ds
je
les
paddusw
sbb
inc
arpl
rclb
push
stc
mov
rcr
test
fmul
shr
push
mov
fcomp
and
jnp
fnstcw
sub
mov
push
shrb
mov
push
push
pop
jl
insb
or
into
div
mov
inc
sbb
ficomps
pop
stos
sub
mov
push
movsb
jo
pop
add
out
push
incb
lahf
cmp
iret
ret
xchg
mov
sub
xor
aaa
and
je
mov
jmp
push
shrl
mov
and
aas
inc
leave
add
mov
cmpsb
sub
js
sub
aam
in
add
sub
xor
jnp
xchg
movsb
xor
jp
mov
jae
outsb
pushf
cmp
out
loope
mov
jo
sbb
add
push
jae
jg
stos
dec
push
fwait
jae
mov
out
sub
cmp
repz
push
movsl
ja
loope
push
rcll
mov
icebp
and
sub
aas
or
jmp
push
scas
mov
mov
pop
fsub
sbb
push
mov
inc
testb
or
adc
mov
and
sub
push
cmp
es
sbb
dec
fisttpl
sbb
xchg
xorb
push
aaa
dec
call
mov
aad
jno
jb
fcoms
lods
ficoml
dec
insl
insb
insb
mov
mov
cmp
es
mov
mov
roll
jge
jg
cld
jge
fcom
sub
mov
and
lods
and
popa
inc
push
in
cmc
push
xchg
pop
dec
scas
push
jecxz
mov
jo
fucomp
mov
and
adc
mov
rolb
outsb
push
mov
fcmovu
dec
dec
out
mov
mov
out
dec
pop
test
push
jb
lea
inc
cmpsl
push
loopne
lods
jnp
pop
dec
cltd
aaa
pop
hlt
dec
push
stos
jnp
and
adc
arpl
shrb
jae
push
pop
pop
or
clc
stos
cli
xchg
xchg
cmpsb
test
xchg
aaa
dec
mov
sub
jmp
sub
sbb
nop
loope
adc
cmp
cltd
jl
scas
push
inc
mov
lock
xchg
mov
or
pushf
jne
orl
adc
pop
test
les
and
jle
sub
and
xchg
mov
outsb
fwait
out
add
outsb
mov
push
mov
push
add
loop
gs
cmp
pop
lods
mov
in
inc
sub
cs
call
sub
add
mov
in
or
pop
out
sub
aam
pop
lahf
int
mov
jne
bound
rcll
sbb
fldenv
ficomps
mov
cmpb
push
mov
pushf
jo
xor
pop
and
scas
loop
add
xor
mov
xchg
pushf
cmp
or
xor
xchg
push
adc
lods
aaa
or
lds
adc
pop
cwtl
push
jecxz
pop
cltd
leave
push
cwtl
inc
jmp
mov
pushf
pusha
gs
sbb
sbb
jae
repz
cmp
sarb
xor
cmp
shlb
imul
out
inc
aad
clc
flds
lret
jno
jo
jmp
shr
jl
pushf
fwait
mov
lods
push
or
testl
push
stos
xchg
adc
pop
jb
mov
xchg
mov
mov
js
movb
rcrl
fdivr
idivl
rcll
sbb
jecxz
inc
lret
sub
or
cmp
dec
loop
mov
inc
jns
sbb
jne
dec
clc
aas
clc
outsb
push
push
clc
loopne
xchg
ds
loope
call
jns
hlt
inc
sar
xor
jmp
xchg
adc
outsb
push
sti
add
les
rcll
xchg
push
push
or
pop
xchg
xchg
movsb
sub
in
out
sbb
adc
push
sub
mov
aaa
sarl
loopne
aad
dec
mov
jle
jae
movsl
shlb
mov
or
outsl
sub
mov
mov
mov
cmp
pop
push
push
test
mov
mov
in
cld
addr16
sbb
lock
mov
pop
or
or
pop
mov
push
mov
sbb
push
jg
dec
sbb
mov
cmp
push
adc
and
jns
sti
pushf
mov
imul
push
ja
xchg
push
inc
daa
shll
add
in
xor
dec
test
sti
jne
push
lods
popf
les
dec
mov
mov
mov
push
cli
faddl
addr16
pop
shll
cli
dec
mov
scas
cmp
lds
dec
out
rcr
into
or
pop
adc
add
dec
sbb
out
push
ja
add
cmpsl
stos
lods
outsb
dec
cmp
mov
or
jmp
cmp
insb
or
fs
sub
je
subl
xchg
push
enter
pop
repz
sti
pop
ret
mov
jb
mov
adc
xchg
jnp
jge
add
ja
pop
pop
add
mov
cmp
ficomps
arpl
xchg
xchg
inc
out
push
out
sub
mov
icebp
or
cmp
outsb
je
push
test
movsb
loopne
or
addr16
std
lahf
in
lods
lahf
dec
nop
sbb
into
dec
xor
jno
push
pusha
xor
jp
clc
std
jecxz,pn
xor
icebp
pop
lods
sub
dec
jp
push
clc
inc
xor
test
or
pop
aam
mov
js
ja
and
enterw
sbb
pusha
test
js
mov
outsb
mov
cli
outsl
in
rclb
in
fcomps
jp
inc
pop
lock
xchg
mov
inc
outsb
dec
das
xchg
lods
imul
or
sub
jnp
inc
dec
nop
popf
push
push
iret
push
cmp
popf
mov
imul
cltd
and
in
es
ficompl
pop
mov
imul
push
dec
sbb
adc
cmpsb
mov
cs
push
testb
xchg
pop
inc
and
or
iret
subl
mov
jo
cmpb
mov
popf
adc
mov
jmp
add
mov
mov
adc
jnp
sbbb
xor
and
pop
mov
icebp
push
sub
or
xor
imul
mov
mov
mov
lahf
sbb
movsbl
push
mov
sub
and
outsl
rorb
das
cmpsb
dec
mov
xchg
ret
sbb
cmpsb
jg
scas
in
sarl
mov
dec
dec
cmp
sub
shlb
aad
std
scas
sub
adc
lds
push
mov
or
enter
jl
in
lret
mov
dec
sbb
clc
fwait
jnp
fcoml
xchg
js
aad
mov
inc
bound
jp
pop
in
pop
rcrb
push
mov
in
in
or
rcl
popf
gs
adc
sbb
xor
pop
mov
push
test
mov
adc
bnd
mov
fistl
adc
mov
jb
imul
xchg
mov
pop
mov
stos
dec
mov
jmp
lahf
sbb
or
mov
xor
dec
xchg
dec
cld
and
and
movb
lret
mov
scas
mov
aam
in
ljmp
leave
aas
push
ret
xor
and
push
mov
pop
push
cmp
lahf
aas
jmp
jmp
sbb
sub
push
insb
loop
inc
hlt
mov
mov
adc
repz
pop
pop
jnp
xchg
and
xlat
dec
insb
mov
mov
mov
imul
pop
clc
mov
fimuls
mov
inc
or
inc
out
out
or
lret
stc
mov
sbb
sbb
sarl
inc
push
push
fsub
nop
and
mov
jo
mov
adc
add
add
mov
xchg
dec
and
lret
mov
in
mov
mov
lret
mov
popf
loopne
or
movsl
roll
fcomps
mov
inc
fxch
sahf
cmp
sub
push
ljmp
cltd
jecxz
inc
sbb
jnp
pop
in
das
int
pop
inc
gs
addr16
inc
mov
js
jo
stc
pusha
xorb
aaa
lods
fsubrl
lea
das
mov
or
fldl
insl
push
mov
mov
repnz
xor
add
push
and
jno
add
fildl
lods
ret
out
jg
cmp
rorb
imul
addl
int3
or
and
or
dec
fisubl
fsubrp
dec
xchg
mov
cmp
mov
cltd
movsl
in
imul
inc
hlt
movsl
mov
and
test
fstpt
push
jmp
xchg
ret
or
pushf
jno
fsubl
jno
imull
stos
push
cmpsl
xchg
xor
and
sub
cmpsb
js
xor
mov
dec
xchg
shll
into
loopne
fs
mov
push
pause
add
gs
repnz
cld
out
push
ja
mov
das
call
cmp
or
add
and
rorl
jecxz
dec
inc
daa
or
add
mov
jl
movsb
or
leave
in
fcomps
dec
sbb
ret
fadds
repnz
stos
mov
cmc
push
ret
fisttpll
mov
cmp
dec
cli
push
lret
mov
fsubl
cltd
out
cmp
enter
mov
mov
xchg
and
movsl
xchg
outsl
adc
fnstcw
cmovnp
repnz
fisubrl
test
subb
lock
inc
fidivrl
sub
call
outsl
pop
xor
sbb
jne
daa
movsb
or
mov
sbb
pop
push
mov
pop
fsubrs
mov
sbb
xchg
jnp
inc
mov
ret
int3
mov
inc
in
int3
mov
pop
imul
xchg
stos
jge
push
xchg
add
jle
dec
push
fcoml
sbb
pop
mov
out
sbb
enter
stos
into
add
js
mov
mov
mov
cmp
ror
dec
push
outsb
rclb
jno
mov
mov
aam
mov
es
mov
hlt
mov
jge
ret
adc
jne
pop
mov
sub
bound
push
stos
or
or
sub
ret
jns
pushf
or
jnp
cmc
pop
mov
dec
cmp
jge
std
adc
aad
jmp
test
adc
dec
sbb
and
fistps
fdivl
mov
dec
in
or
cmp
sahf
bound
shlb
nop
sub
push
and
hlt
fndisi(8087
mov
adc
scas
jo
jns
cmp
leave
mov
sahf
mov
les
xchg
mov
inc
daa
xor
negl
ret
das
imul
outsb
push
pop
or
stos
pop
push
sub
mov
enter
inc
pop
dec
icebp
outsl
pop
ret
aaa
cwtl
jg
fisubrs
mov
scas
jl
mov
jge
mov
inc
test
push
sarb
push
inc
mov
cmp
lcall
fisubrl
test
inc
rcll
xchg
aas
inc
sub
shlb
fsubr
loopne
or
icebp
ret
dec
adc
rcrb
scas
or
sub
push
mov
int3
xor
or
jo
or
imul
in
jg
or
rcr
jl
push
mov
scas
popf
xchg
js
add
test
jle
mov
xchg
push
xor
loope
mov
pop
aad
sti
and
sbb
jg
inc
das
push
insb
mov
pushf
cmp
test
jns
stos
fs
cli
test
add
or
imul
add
mov
fcom
sub
sbb
mov
andl
cwtl
out
loop
and
lahf
into
cmp
mov
sti
bound
dec
inc
push
xchg
cmc
cmpsb
jbe
cmpsl
test
lcall
fisubl
lock
movsl
mov
jl
cltd
mov
mov
aad
mov
scas
std
mov
fisttpl
ss
clc
movsl
ss
scas
bound
xchg
jne
iret
ret
cli
test
test
loop
repz
or
jl
repz
icebp
xchg
nop
add
repz
mulb
inc
push
jp
cld
loopne
or
or
and
pop
xchg
daa
cmpsl
mov
add
adc
or
sub
sub
sbb
data16
lcall
ds
lods
inc
xchg
pop
pop
mov
pop
cmp
xor
mov
dec
mov
cmpsb
lods
add
mov
push
lcall
cmpsb
cmpsb
sbb
or
pushl
and
fucomip
leave
pop
lahf
int
sub
dec
sub
mov
adc
sbb
xchg
aas
push
pop
cmp
fldcw
lahf
sbb
lods
out
xchg
xlat
ss
movsl
fdivrs
mov
stos
ljmp
lock
in
sbb
das
neg
pop
clc
jnp
inc
sbb
and
sub
xchg
cwtl
clc
push
sahf
pop
cmp
enter
pop
ret
fstpl
xor
call
lret
mov
sbb
push
inc
push
pop
out
xor
sub
cmc
inc
lock
xor
push
jns
rorb
gs
pop
xchg
test
add
mov
imul
fucomip
add
shrl
fdivl
cmp
out
sub
jne
jecxz
cltd
cmovbe
and
lret
or
shll
sub
or
sub
movsl
scas
adc
rolb
mov
sbb
pop
jno
mov
push
add
lea
jge
sti
push
pop
adc
das
in
mov
cmp
pop
jmp
and
jbe
insl
ret
dec
stc
roll
sub
outsl
mov
mov
stc
popa
fldenv
in
add
hlt
movsl
xchg
mov
lods
xor
lahf
and
mov
repz
dec
cmp
sti
loopne
mov
add
daa
mov
push
cmp
leave
sahf
hlt
push
out
test
mov
and
cmp
ss
add
cmpsl
out
sarb
mov
movsb
or
push
push
cwtl
clc
scas
inc
mov
imul
mov
stc
cwtl
inc
inc
aad
cmpsb
std
pusha
pop
ljmp
scas
insb
pop
or
ss
aaa
in
pusha
jecxz
loopne
ret
popa
jo
sahf
lods
sub
xor
or
jge
leave
notb
sahf
cmp
mov
inc
jg
int
inc
push
imul
sbb
mov
mov
es
sub
add
cwtd
out
outsb
mov
mov
jecxz
outsl
xlat
stos
xchg
xorl
ss
mov
mov
cmc
sarl
in
loope
cmp
cmp
pop
ret
xor
jmp
in
jnp
xlat
insl
aam
insl
nop
aas
in
repz
sbbb
push
aas
xchg
mov
and
repz
out
inc
int
pop
arpl
out
loopne
aas
jo
ja
test
dec
jae
adc
mov
bound
push
clc
add
xlat
mov
fbstp
leave
fbld
mov
add
ret
or
dec
and
fs
enter
lahf
jne
sub
mov
aad
dec
adc
mov
jbe
lea
mov
loop
cwtl
outsl
testl
and
and
outsl
ret
mov
sbb
test
sbb
jo
pop
dec
xor
inc
das
addr16
js
call
push
mov
adc
jbe
add
lcall
jnp
mov
add
or
sti
pop
data16
lods
push
mov
push
js
scas
xchg
repz
or
mov
sub
pushf
ret
or
test
jb
popf
loopne
mov
fsubr
dec
jle,pn
dec
or
xchg
movsb
loop
push
outsl
dec
mov
fs
sub
jl
or
jns
stos
in
push
nop
lds
or
es
outsb
mov
shrb
inc
fldl2e
je
dec
imul
loopne
out
pop
mov
dec
jmp
cld
arpl
pop
adc
jmp
sub
dec
ret
movsl
sub
ret
pop
cmp
add
scas
fsubp
icebp
inc
repz
xchg
mov
cmpsl
pop
and
cmpsl
fidivl
lcall
inc
pop
sbb
push
movsb
add
sti
pop
pusha
jle
je
mov
xchg
xlat
call
call
shrl
xchg
mov
les
in
fs
pop
loop
pushf
lcall
fbstp
imul
aad
das
push
sbb
std
ds
clc
pop
or
js
inc
xor
lahf
xchg
popf
sbb
xchg
enter
std
fists
fisttpll
sbb
call
mov
nop
push
out
outsb
mov
and
inc
jle
shll
inc
lcall
loop
js
push
mov
hlt
dec
inc
sbb
cmp
cmpsb
jns
sub
sbb
movsb
adc
insb
push
scas
cmp
mov
jmp
fimull
int
and
pushf
int
aam
inc
jmp
mov
pop
incl
or
sbb
lods
ja
add
clc
sar
mov
or
add
icebp
adc
cmp
or
mov
mov
sub
xchg
mov
in
stos
fcoms
xor
mov
jne
pop
fimull
push
sub
pop
fucomi
inc
data16
push
stos
mov
mov
insl
test
cli
ljmp
adc
lea
add
or
pop
stos
mov
aad
push
xor
loope
outsl
sahf
lods
repz
jecxz
ljmp
mov
cs
push
ret
pop
sahf
insl
stos
andl
int
dec
ljmp
push
mov
rorl
outsb
push
std
cmc
jo
pop
loopne
mov
fstp
int
cmp
or
cmp
out
ret
scas
mov
loope
les
cmp
outsb
pop
jecxz
jne
in
mov
shll
test
addr16
push
fwait
mov
or
mov
pop
es
push
scas
cmp
sbb
jno
out
mov
xchg
enter
jg
jne
lcall
mov
fistps
cmc
adc
mov
iret
lods
xchg
iret
lahf
and
roll
add
pushf
dec
fsubrs
daa
outsb
mov
adc
push
in
push
cwtl
pop
mov
cmp
inc
out
dec
jle
push
sub
daa
nop
mov
jle
xchg
das
bound
dec
nop
dec
xor
or
rcr
jne
jbe
xchg
sahf
push
inc
vmovaps
lcall
or
mov
mov
sbb
loop
out
xchg
pop
punpckhwd
pop
jbe
push
mov
ret
ret
push
daa
xlat
neg
push
pop
xchg
movsb
jle
push
dec
fcomps
hlt
mov
aas
sbb
jl
inc
movb
and
test
loopne
pop
sarl
in
lahf
pop
mov
je
pop
cmp
add
xor
data16
js
or
or
stos
xor
mov
jb
icebp
jmp
pop
shr
arpl
push
cs
cmp
xor
jo
mov
cmp
push
js
mov
sub
pop
inc
gs
xchg
cmpl
or
jnp
sub
jecxz
outsb
jo
pop
dec
cmpsb
cs
dec
data16
or
outsb
and
and
in
sub
call
sti
or
clc
jp
jbe
mov
rcrl
jns
mov
jnp
scas
mov
mov
ds
int3
mov
cmp
cmc
inc
lds
xchg
stc
fimull
adc
aam
pusha
push
aaa
or
xchg
gs
add
pushf
xor
fists
fs
imul
stos
mov
clc
or
or
mov
pop
fisttps
adc
in
out
dec
popa
pop
or
add
jae
jge
in
popa
mov
outsl
pop
icebp
pop
xchg
xor
sub
out
and
push
xor
aam
push
mov
shrb
mov
jle
out
aad
addr16
lods
sub
pusha
mov
test
loopne
mov
cmp
mov
lods
dec
les
adc
dec
in
xchg
push
mov
and
lock
mov
cmp
arpl
jecxz
and
pop
pop
dec
push
test
aaa
mov
push
out
ret
outsl
push
negb
outsb
xchg
cmc
test
ss
sarb
sbb
mov
push
cld
cli
push
xchg
inc
pop
lods
add
mov
mov
aas
dec
std
sahf
insb
mov
fisttps
iret
and
mov
xchg
push
daa
push
mov
repnz
mov
mov
out
jle
xchg
jg
xor
push
mov
dec
mov
push
lret
icebp
xchg
adc
pop
ret
cld
xchg
fnstcw
mov
test
xor
scas
pop
popa
mov
jge
test
addr16
xor
mov
idivb
test
repz
popf
clc
pop
repz
pop
ds
xchg
orl
test
adc
shlb
pop
push
push
cs
or
out
enter
mov
mov
stc
or
cld
fstpl
stos
dec
notl
pop
pop
jnp
inc
jmp
je
xchg
or
into
and
push
mov
loop
pop
pushf
sbb
cmpsb
je
dec
rcll
or
data16
cli
cmp
pusha
mov
xor
ljmp
pop
inc
pop
scas
das
aas
imul
inc
mov
jbe
push
cmp
or
pusha
sti
push
mov
in
insb
fucomip
sbb
mov
lock
xor
dec
leave
shll
shll
and
mov
xor
xor
jae
gs
cmc
enter
rol
mov
les
mov
xchg
je
pand
aad
adc
xchg
dec
mov
out
shll
popf
stos
jp
pop
stos
icebp
inc
lds
rcrl
pop
mov
xchg
mov
fildll
out
loope
adc
lods
rorb
push
rorb
in
movsb
imul
xor
fmull
loopne
int
icebp
clc
fdiv
xchg
adc
rcrl
std
call
setnp
stos
xor
sbb
pop
gs
fnstenv
xor
lahf
in
pop
pop
int3
dec
cmp
imul
push
mov
or
push
daa
ret
aad
inc
ss
stc
ja
test
xor
or
add
inc
adc
add
mov
fwait
cmp
mov
jp
sbb
enter
movsl
mov
lods
cld
jg
and
inc
push
subl
sbb
rcl
jge
sbb
in
enter
mov
pop
stos
out
push
sbb
aad
push
push
mov
stos
scas
xchg
out
popf
jle
cmp
adc
call
ret
inc
lcall
js
xchg
and
inc
stc
jecxz
and
int3
movsb
sbb
scas
lods
ficoms
scas
in
mov
xchg
movmskps
sbb
adc
push
jae
mov
pop
into
push
push
cld
rorb
dec
mov
adc
jp
sub
xor
sub
lahf
pushf
jnp
jl
pop
lahf
daa
js
enter
scas
mov
lods
pop
cltd
pusha
cmp
into
sbb
movsl
pop
out
fidivs
inc
pop
add
mov
or
pop
fwait
scas
sbb
jne
mov
cs
lret
jg
push
pop
pop
push
cvtps2pd
pusha
or
pop
imul
sbb
movsl
xor
mov
jae
aaa
xor
lcall
and
lahf
lds
cmp
bound
sub
test
mov
mov
test
cmp
adc
imul
inc
daa
pop
imul
adc
mov
div
xorb
sub
loope
jmp
inc
test
push
xchg
shrb
cmp
popf
pop
fs
das
pop
out
and
and
js
push
fcoms
clc
daa
jge
or
jp
int3
jns
imulb
ja
push
mov
xchg
mov
aaa
cmp
arpl
sub
xchg
pop
test
lock
fisubs
lret
pop
and
xchg
push
iret
divl
xor
rorl
pop
mov
icebp
orl
sbb
dec
stos
into
jg
or
std
xor
es
imul
in
adc
and
xchg
subb
dec
out
inc
xchg
dec
sbb
cmp
sbb
setns
push
or
push
adc
jge
mov
adc
out
nop
add
jge
in
xchg
push
ja
xor
dec
iret
xchg
fadd
scas
clc
xchg
lcall
mov
inc
adc
imul
es
loope
sub
cmpsl
movlps
sbb
jp
cmp
push
pop
clc
or
mov
push
loop
filds
mov
dec
mov
pop
es
in
adc
sti
inc
xlat
negl
pop
mov
fsubrs
lahf
and
jp
lea
imul
adc
jp
mov
xor
stc
pusha
dec
sbb
add
adc
lock
test
adc
jmp
aas
es
jno
leave
les
movl
lods
sahf
test
roll
ret
int
adc
idivb
hlt
pop
ljmp
test
add
jae
sbbl
addb
cwtl
cmp
fdiv
jae
xlat
mov
xor
dec
fs
int
pusha
cmp
imul
out
push
cmpsl
dec
inc
cmpsl
fs
cmp
sbb
je
xchg
rorb
aas
jno
jp
inc
push
mov
or
fldcw
pop
xor
sbb
fstpl
add
inc
add
aas
daa
les
adc
lret
movsl
xlat
xor
add
pop
xchg
xchg
or
xchg
imul
inc
push
les
sbb
xchg
lds
int3
xchg
gs
cmpsl
jp
je
loope
imul
xor
cwtl
es
pop
mov
fnstsw
ja
pop
fs
mov
sub
aad
jbe
ror
shll
sbb
xor
add
mov
mov
inc
out
mov
cld
push
shr
daa
pop
fisttpl
mov
stos
sub
jecxz
sti
push
mov
mov
ficoms
jge
lret
xchg
jg
xor
push
cmp
fdivp
pop
popa
or
fisttps
aad
cmp
in
rorl
dec
xchg
adc
jecxz
jg
ss
inc
icebp
or
xor
and
daa
dec
fldenv
or
and
push
arpl
adc
ficoml
or
mov
mov
xchg
or
xchg
fldcw
mov
lret
iret
jbe
insb
jmp
add
dec
adc
mov
jecxz
dec
sub
ljmp
lret
push
dec
jecxz
dec
and
pop
xor
mov
mov
dec
icebp
jg
scas
les
sub
adc
add
and
sub
xchg
xor
cmp
xchg
dec
cwtl
mov
loope
in
stos
pop
jmp
xrelease
dec
push
or
mov
dec
add
cmp
pop
cli
test
out
add
or
out
movsl
stc
adc
orl
pop
lret
adc
cmp
push
push
adc
mov
int3
dec
cmpsb
pop
cmp
insl
inc
outsb
and
inc
xor
sbb
sbb
stc
lcall
out
cli
mov
shlb
scas
and
jnp
push
aaa
jo
dec
adc
repz
aas
jns
adc
mov
or
add
rcrl
jae
xchg
cli
ljmp
rorl
cmpsb
subb
outsb
sbb
xchg
jns
imul
lcall
pop
mov
incb
flds
test
dec
cmpsb
icebp
fsubrl
insl
mov
test
dec
mov
and
cmp
jb
mov
test
xchg
push
dec
fucomp
pop
jb
sahf
and
test
push
and
pushf
in
jno
test
push
adc
daa
mov
dec
outsb
or
bound
push
sbb
and
out
mov
xchg
in
xchg
push
lahf
cmpsb
cmp
xor
jp
vmwrite
int
leave
xchg
mov
iret
sarb
out
js
es
sbb
fsubr
xor
ss
fimuls
adc
push
mov
enter
mov
aaa
jge
out
ret
mov
stc
sbb
jge
flds
in
xchg
aas
xchg
jge
adcl
jns
adc
mov
outsb
int3
push
xchg
das
ret
clc
push
pop
int3
add
cmpsl
cmp
enter
sub
sbb
movsb
lods
mov
inc
fcoms
testl
mov
ja
lea
test
dec
addr16
sub
iret
imul
fwait
mov
sub
mov
sbb
mov
and
inc
push
jbe
inc
scas
lods
roll
and
sub
gs
ja
jae
sbb
negl
mov
dec
xchg
arpl
mov
push
cmp
mov
fstpt
test
cmpsb
ret
jecxz
sar
mov
mov
jecxz
pop
jl
cwtl
daa
sarl
add
mov
mov
inc
cwtl
inc
and
int
daa
mov
dec
dec
pop
scas
mov
gs
mov
imul
cs
mov
data16
std
inc
mov
ljmp
inc
xor
inc
inc
fs
pusha
into
xchg
push
inc
xor
testl
gs
cs
repnz
sub
mov
es
test
out
mov
dec
lea
dec
mov
dec
or
add
lods
fcompl
je
loope
movsl
xor
daa
ja
mov
out
scas
gs
add
sub
and
push
lret
cmpsl
dec
add
add
orb
jae
sbb
loop
pop
incb
xor
pop
push
jno
imul
mov
je
leave
cli
mov
mov
jl
mov
in
xlat
in
test
ja
xchg
lcall
xchg
dec
adc
xor
cwtl
lods
jbe
dec
nop
xor
dec
push
das
fisubl
ss
call
dec
mov
enter
inc
ja
xor
push
outsl
mov
out
inc
imul
pop
sub
lock
in
sbb
pop
sbbl
int
movsl
and
movsb
es
add
jmp
and
push
clc
push
popf
sahf
int3
inc
cmp
je
adc
iret
xchg
scas
jmp
sarl
sarl
and
stc
jne
lods
add
les
iret
addr16
adc
xchg
cmp
xchg
xchg
icebp
mov
xchg
or
ss
xchg
sub
dec
lahf
mov
addr16
jle
pusha
test
out
cmpsl
leave
ret
xchg
jbe
xchg
dec
and
inc
in
mov
push
dec
fadds
jo
inc
sbb
sbb
std
pop
ret
mov
sbb
in
iret
dec
sbb
push
sahf
into
hlt
dec
pop
jnp
push
mov
aaa
aam
adc
dec
call
jge
sbb
test
lds
movb
jo
or
adc
mov
popa
inc
pop
dec
loop
das
dec
inc
pop
fisubrl
sti
and
addb
pop
das
mov
inc
test
mov
xchg
push
mov
out
or
lahf
call
into
lea
ss
jecxz
gs
bound
xchg
lods
hlt
in
jge
jecxz
xchg
dec
dec
pop
inc
jo
pop
mov
rol
ljmp
shll
and
stc
fmull
xor
loopne
mov
lea
insl
sub
lahf
mov
mov
ja
mov
mov
into
push
jge
in
popa
idivb
push
pop
xchg
hlt
out
les
or
cmp
out
aas
sbb
mov
and
test
lods
jg
sub
aas
loopne
sti
mov
xchg
clc
or
cltd
daa
inc
push
stos
or
loope
jecxz
outsl
iret
inc
xor
cmp
lcall
in
jno
pop
rcrl
adc
out
popf
or
sarl
movsl
jecxz
jle
jmp
imul
lock
sub
dec
fidivrl
mov
mov
pop
fwait
push
cltd
xor
sbb
xchg
sub
out
lahf
es
aad
in
cmp
loopne
fisttpl
mov
jae
aaa
push
push
lret
xchg
call
lock
mov
or
inc
mov
insb
jmp
mov
mov
lret
scas
adc
sahf
pop
ds
ret
bndstx
jge
js
clc
int
lcall
or
ljmp
mov
jb
clc
xchg
xor
loop
icebp
mov
ja
and
cli
mov
fnstsw
mov
adc
jmp
mov
jl
je
aaa
nop
out
clc
call
lock
lods
pop
sub
mov
mov
add
fldenv
je
gs
lahf
add
and
outsb
inc
dec
push
insb
sub
mov
sbbb
adcb
es
faddl
jns
and
ja
mov
test
adcl
mov
dec
push
mov
cltd
add
je
sbb
cmpsl
pop
aaa
ret
ret
outsl
in
lret
sbb
pop
mov
and
jecxz
xchg
imul
bound
sbb
mov
sub
or
push
pop
ja
mov
test
adc
cmpsl
sub
xor
xor
cmpsb
mov
pop
and
add
imul
sar
sub
mov
xor
in
fisttpl
adcb
xor
sbb
rorb
enter
push
int3
add
jle
in
gs
lret
jg
inc
cmp
inc
push
aam
dec
je
test
aam
fistpl
loopne
adc
cmp
jp
mov
sub
das
lods
mov
lret
dec
inc
sahf
and
add
cmpsl
push
pushf
pusha
cmp
lods
mov
lea
je
out
jge
mov
mov
fnstsw
repz
ficoms
jle
ss
jecxz
and
or
imul
stos
jl
loopne
xchg
ret
aam
dec
test
inc
add
sub
dec
mov
pop
jnp
ljmp
aad
fidivrl
push
ret
push
clc
in
xchg
lret
xor
inc
loope
scas
or
fstps
lret
fildl
cltd
lea
adc
mov
jge
dec
aas
mov
nop
shl
inc
push
mov
xchg
andb
scas
adcb
aaa
mov
lret
mov
adc
add
sbbl
outsl
js
and
mov
aas
dec
cli
test
rclb
pushl
jp
jmp
lds
xchg
or
in
push
faddl
mov
loop
lock
xchg
jge
sqrtps
ss
xchg
fbld
push
and
xor
push
adc
jmp
cld
ljmp
add
mov
or
call
inc
mov
fisubl
dec
mov
fsubl
push
jg
and
or
call
aam
jl
mov
clc
mov
ret
mov
add
push
inc
xor
xchg
cmpsl
pop
aaa
pop
int3
nop
std
leave
fcoms
das
mov
call
xchg
push
mov
cwtl
adc
clc
ret
push
adc
orb
push
dec
int
mov
int
les
mov
xor
adc
enter
mov
or
dec
mov
and
out
sti
sbbb
adc
ja
push
dec
gs
lea
ds
jno
fidivs
xor
cmpsl
clc
shrb
xchg
pop
push
sarl
push
int3
testl
stos
stc
imulb
das
mov
mov
inc
aam
xchg
arpl
or
and
cs
push
sbb
cltd
jp
jae
mov
inc
in
movsl
add
in
jae
movsb
lea
jmp
aad
shll
push
sub
out
mov
les
aam
sbb
adc
push
lods
shl
inc
rorb
ret
repz
mov
cwtl
sbb
mov
and
mov
cld
sbb
jnp
mov
add
push
dec
rorl
cld
in
divl
je
jbe
rdtsc
jecxz
mov
scas
setbe
inc
mov
dec
add
aam
imul
stos
push
imul
call
sahf
mov
movsl
jo
movsl
inc
lock
scas
ret
xlat
rcrl
push
adc
fistpl
pop
fnsave
testl
les
cld
lock
cmp
push
cmp
lret
mov
push
and
and
aam
int
mov
xchg
jl
adcb
adc
cmp
add
shrb
mov
cmp
sub
sub
xor
lock
sti
inc
push
mov
xchg
dec
mov
lcall
popf
stos
cmpsl
test
sbb
mov
dec
xchg
xchg
xchg
test
fs
jl
loop
leave
push
mov
into
les
aam
movsl
fs
nop
jns
jl
pop
adc
jmp
push
mov
dec
xchg
scas
or
lret
ficoml
ds
pusha
or
inc
sti
int
sbb
jo
cmp
popa
mov
rcrb
sbb
cs
cmp
cmp
std
in
test
push
mov
sbb
jg
xchg
fadd
cmp
sbb
faddl
int3
mov
sbb
pop
lea
repz
test
and
les
movsb
adc
sbb
stos
sarb
mov
cmpsl
scas
iret
pusha
inc
sub
lret
inc
adc
jno
xchg
cmp
mov
sub
daa
lret
fs
stc
push
jnp
test
lods
dec
or
push
inc
push
or
movsb
xchg
js
test
stos
or
int
push
inc
mov
jnp,pn
cld
jns
mov
insl
out
mov
xchg
div
outsb
xchg
stos
addr16
cmpsb
loop
test
shr
mov
push
bound
cmpsb
out
push
sub
mov
lock
ds
add
mov
and
js
push
jbe
iret
dec
pop
push
mov
dec
sbb
notb
push
sbb
out
ljmp
fadd
aas
or
mov
dec
fsubp
inc
dec
aad
aad
xchg
daa
test
lret
push
mov
sub
dec
push
push
movsb
imul
lret
ja
clc
mov
cltd
adc
int
mov
aaa
and
and
inc
cld
neg
sbb
pop
inc
jbe
pop
js
xchg
iret
sbb
xor
nop
cmp
rorb
or
cmc
in
imul
dec
adc
out
aad
scas
or
add
shll
rolb
or
leave
push
cmp
scas
clc
mov
lds
test
xchg
inc
adc
fisubl
rcrl
loopne
out
movsl
jns,pn
push
addl
or
cmp
xorl
stos
adc
shl
fimull
add
cmp
bound
mov
cmp
vpshuflw
packuswb
xchg
mov
in
lds
cli
inc
xor
mov
cs
xor
mov
dec
cmc
xor
das
cld
aas
pop
hlt
int3
lret
lods
jbe
xchg
and
into
neg
push
push
stos
mov
mov
xlat
das
xchg
mov
loop
jge
sbb
roll
adc
mov
dec
mov
test
push
inc
sbb
rol
cmpsl
xchg
lods
jnp
nop
pop
out
test
int3
jb
repz
cmp
pushf
sbb
push
in
imul
cwtl
dec
dec
gs
test
push
test
repz
sahf
lcall
aad
xchg
pop
mov
cs
jp
mov
xchg
pushf
in
jno
xchg
mov
adc
mov
dec
add
ljmp
lds
sub
push
dec
rorb
push
cltd
out
stc
push
mov
jl
sbb
les
xlat
jecxz
ljmp
pop
insl
push
cmpsl
adc
cmp
mov
cltd
fstpl
and
fistps
cmp
mov
popa
nop
mov
stos
pop
xchg
je
cld
imul
mov
jp
call
sub
ljmp
xor
or
pop
and
or
enter
and
cmc
push
aaa
jo
mov
xchg
arpl
inc
mov
pop
dec
in
dec
mov
push
ja
adc
cmpsl
mov
dec
mulps
pushw
add
lds
sbb
mov
outsl
mov
ret
adc
in
xor
loop
sbb
loop
fnstenv
out
adc
in
and
add
xchg
gs
lret
out
ss
xorl
pop
aam
cmp
mov
sbb
mov
sbb
add
dec
sbb
call
addr16
in
rclb
cld
jo
je
sub
sbb
test
sub
pop
push
jmp
cmp
loopne
cwtl
outsb
popa
out
xchg
cmpsl
lock
xchg
repnz
push
fsts
jge
out
add
add
and
movsl
rol
fcomps
outsb
or
lods
bound
gs
addr16
stos
and
xchg
loope
icebp
int
stc
cmp
out
xor
nop
imul
sub
sbb
shl
addr16
repz
dec
mov
mov
outsl
push
adc
sub
mov
push
rcll
mov
mov
mov
mov
dec
mov
mov
mov
stc
inc
adc
fsubrs
sub
inc
push
jmp
cmp
jge
jl
jmp
orb
push
mov
test
pusha
or
pop
jne
mov
dec
mov
call
gs
scas
call
and
or
jle
push
xchg
out
or
es
dec
dec
popa
push
jae
das
cld
call
aas
adc
mov
jo
cmpb
sub
adc
mov
adc
les
xor
movsl
xchg
mov
enter
xor
jp
mov
sbbl
orl
pop
lret
dec
dec
fisubrs
mov
cpuid
mov
ljmp
mov
xor
pop
mov
cwtl
jne
push
adc
jb
lcall
mov
pushf
push
mov
cmp
stos
sub
rorb
inc
enter
lea
pop
inc
andl
stc
mov
mov
je
jo
fisttpll
xchg
push
fst
popa
xor
jle
test
ljmp
mov
das
subb
lahf
pavgb
xchg
push
push
mov
dec
jbe
into
les
or
cli
mov
and
popa
lock
pop
or
mov
inc
pop
out
ja
sarl
ss
jbe
sbb
scas
das
repz
dec
aad
int
jno
mov
xchg
sub
and
fadd
out
add
push
popf
aaa
sub
fxch
out
mov
iret
arpl
in
sub
cmp
inc
jmp
rorl
and
loopne
enter
push
mov
sub
sbb
xchg
mov
xlat
xchg
scas
adc
ja
pusha
cmpsl
loope
lahf
mov
pop
movsl
js
dec
aaa
adc
jecxz
xchg
dec
inc
adc
lret
lods
pop
sarb
pop
inc
or
stc
data16
rcrl
mov
pop
into
ret
pop
cltd
test
cltd
adc
and
call
jecxz
out
cs
fwait
adc
adc
test
lds
push
pop
mov
or
mov
jl
jnp
inc
xchg
dec
gs
sbb
nop
jnp
cmovno
xchg
xchg
ja
insb
jb
dec
loopne
incb
mov
fstl
icebp
adcl
jne
pop
mov
lret
int
mov
push
cmp
ljmp
mov
cmp
dec
or
cmp
xor
push
in
outsl
call
idivb
add
enter
rorl
insl
xor
fsubrp
insb
jb
lea
test
clc
xchg
rep
icebp
jns
arpl
add
xchg
pop
mov
add
dec
pop
mov
jge
lcall
cltd
mov
fiadds
stc
jne
push
mov
pop
aas
int3
outsb
cmp
jo
cmpsb
mov
xchg
inc
xor
dec
ret
xchg
aas
incl
rclb
add
mov
cmp
divl
mov
ja
scas
cmp
pop
push
push
cmc
jl
cmp
lods
push
jbe
inc
adc
sbb
rcll
jle
adc
pop
mov
push
dec
pop
cmp
mov
xchg
ret
lret
dec
scas
push
fadd
mov
xor
xchg
inc
jns
inc
mov
mov
or
testl
mov
fstps
dec
sbb
xlat
fmul
fcoml
ficoml
cmp
loope
lahf
mov
mov
dec
sti
call
jo
xchg
cmp
fld
test
mov
clc
fs
and
fsubr
jns
int
xchg
lock
inc
out
push
sub
hlt
loop
loopne
xor
in
int3
jecxz
cmpsb
das
pop
fcmovu
clc
in
or
xchg
dec
mov
mov
jge
dec
std
bound
lret
add
outsl
imul
das
add
sbb
andb
loopne
pop
scas
inc
rclb
lahf
cmpsb
movsb
ficoms
push
lcall
rorb
shrl
arpl
stos
shrl
fidivrl
add
repz
es
mov
dec
push
inc
rolb
pop
ds
fnstsw
adc
mov
sbb
cmp
fldl
sub
mov
adc
sbbb
mov
jl
je
inc
or
mov
dec
sbb
fistpl
cmc
and
loope
rclb
push
ret
pop
nop
roll
ficoms
imul
ljmp
dec
hlt
dec
and
popf
pop
mov
cld
inc
sub
ss
mov
lret
sbb
cmpsl
jmp
cltd
dec
cwtl
mov
jle
lcall
xchg
arpl
mov
or
push
push
and
xchg
jl
add
shr
or
inc
sahf
inc
scas
and
pop
inc
jle
inc
aam
lahf
inc
es
jecxz
ror
jl
jae
or
shlb
cmp
xchg
add
movsl
out
push
xor
pop
or
or
jg
loop
mov
cmp
popf
in
dec
add
loopne
fistps
jb
loopne
std
das
jns
lods
push
rcrl
loope
xchg
jp
lcall
outsl
mov
inc
inc
shrl
xor
outsb
popa
in
roll
ja
add
clc
sbb
jmp
jp
bound
mov
lock
xchg
pop
sahf
cmpsb
movsb
mov
cmpsl
mov
iret
sub
into
jo
mov
mov
jp
push
pop
nop
loop
xor
fldt
adc
cmp
stc
cld
ret
or
hlt
inc
test
pop
mov
test
js
lret
add
dec
inc
stos
mov
sbb
mov
rorb
outsl
pop
jle
mov
add
xchg
push
stc
cld
pop
add
pushf
shll
das
push
imul
movsl
xor
jmp
and
sub
mov
jnp
repz
add
dec
imul
sub
addl
in
mov
bound
aad
stc
sbb
dec
pop
mov
rclb
adc
cmc
enter
jbe
frstor
movsb
pop
mov
mov
lea
push
or
aas
mov
dec
xchg
add
jl
cmpsl
adc
lcall
mov
jo
fdivl
fs
das
das
dec
lods
mov
inc
adcb
dec
aaa
fsubrp
mov
dec
icebp
mov
and
xor
mov
lahf
aas
loopne
jo
jg,pn
mov
pop
adc
sbb
jno
jp
xchg
shll
mov
fucomip
or
add
fsts
hlt
dec
sub
mov
push
js
scas
sar
pusha
sbb
or
mov
mov
dec
test
cmp
jmp
cmp
pop
popw
dec
mov
sahf
repnz
push
dec
aaa
std
inc
dec
xchg
repz
adc
mov
je
stc
or
push
and
or
pop
and
fwait
mov
roll
cmc
aam
sub
orb
jle
and
add
pop
orl
das
cld
sahf
jecxz
call
test
dec
paddb
stos
jnp
xchg
jno
or
push
and
jmp
sub
mov
sub
loop
imul
add
sbb
jno
xchg
sbb
imul
mov
and
lcall
and
cmp
pop
and
mov
cmpsl
mov
mov
out
lcall
into
push
adc
insb
mov
repnz
jge
pop
add
in
mov
pop
pop
lods
in
lea
dec
andl
into
hlt
mov
nop
das
xchg
pop
std
mov
shr
inc
sbb
pusha
daa
jno
sub
std
mov
mov
stos
xchg
ret
xor
out
js
js
test
mov
pusha
int
sub
lcall
movsb
inc
push
aaa
jae
clc
lret
cmc
lock
jge
dec
sbb
es
jbe
daa
out
jbe
push
lea
subl
test
sbbb
scas
jae
sub
jb
scas
mov
js
sub
in
or
sbb
dec
add
push
inc
jmp
sub
jb
mov
mov
ret
sbb
arpl
test
out
lea
subb
clc
sahf
shll
mov
lods
mov
cmpsl
cmp
mov
or
xchg
jp
in
adc
add
xchg
pop
pop
mov
push
xchg
adc
sarb
sahf
mov
xchg
inc
fcoms
mov
add
jle
data16
or
push
pop
addr16
fildl
lahf
pop
or
insb
bound
jle
mov
mov
out
cmp
ror
jge
loop
push
les
fdecstp
or
and
rcll
mov
and
mov
push
cwtl
and
push
mov
sub
dec
cmp
sub
adcl
dec
mov
fstpl
xorl
pop
add
jb
dec
jge
and
push
call
sub
mov
in
xchg
push
or
cmp
xchg
test
negl
in
out
lret
inc
lea
into
cmp
cwtl
push
adc
mov
jle
insb
call
adc
incb
fwait
mov
cmp
push
lahf
sbb
divl
jge
add
fidivrs
mov
test
push
scas
cmp
int3
push
outsb
push
or
lret
mov
push
fsubs
adc
clc
shll
data16
jmp
add
add
shlb
jl
cli
leave
pop
fadd
setbe
push
lret
and
mull
aam
dec
hlt
cmp
cmp
outsb
cmp
shll
pop
sub
jae
pop
scas
jo
mov
mov
mov
push
jo
sub
mov
add
out
and
jns
mov
rcrl
dec
push
cmpsb
mov
push
test
xor
sahf
and
scas
scas
cmc
xor
cmp
cli
out
adc
lods
jno
jnp
xchg
mov
jns
mov
or
ficoms
les
or
adc
fwait
popf
icebp
insl
xor
ds
jl
stc
jae
nop
sub
test
in
mov
in
mov
sbb
jnp
sysenter
in
mov
inc
xor
inc
sub
insl
cmp
filds
in
in
orb
dec
ss
sbb
pop
cmp
mov
mov
push
mov
or
dec
push
mov
mov
mov
add
pop
cld
cmp
adc
sbb
jns
sbb
inc
inc
mov
fidivs
push
and
icebp
ljmp
notb
shrb
push
xchg
fstpt
scas
or
pop
add
lock
sahf
xor
insb
or
popf
jo
loop
aam
mov
dec
add
or
sub
dec
xchg
pop
enter
lods
movsb
lock
and
or
jp
pop
pop
xlat
and
mov
call
iret
mov
add
push
push
mov
pushl
jge
lods
shlb
dec
test
and
push
xchg
adc
push
aaa
testb
in
cmp
popf
cltd
add
scas
stos
ds
pop
rcl
jge
gs
gs
fcmovnu
dec
es
sbb
jns
sub
mov
ds
xor
mov
or
jmp
dec
dec
hlt
pop
cld
sub
mov
outsl
push
pushf
outsl
dec
fists
ret
pop
mov
cmp
add
mov
test
xor
mov
adc
les
test
cmc
cmp
lock
call
lcall
push
sbb
ret
xor
lea
js
sbb
cmp
dec
cmp
xchg
test
xchg
push
int3
stc
dec
and
loop
pop
popf
movsl
icebp
mov
inc
sti
jle
and
sbb
mov
push
test
xor
aad
shr
pop
pop
int
es
sti
sbb
nop
jae
in
push
xchg
inc
inc
cmp
dec
bound
pop
ret
imul
sti
dec
add
outsl
fcompl
loopne
sti
pusha
negl
push
cmp
out
idivl
pop
and
add
mov
std
add
mov
jl
repz
inc
mov
rolb
out
leavew
pop
push
mov
jl
int
popa
xchg
inc
out
pop
sbb
adc
mov
mov
daa
cmp
das
add
fistl
aam
mov
xor
ss
rorb
jmp
sub
push
sahf
int3
cmc
adc
ret
out
daa
shlb
xchg
xor
mov
fcoms
sbb
leave
cwtl
mov
cmp
or
cmp
or
mov
ret
das
mov
jle
cmp
lret
pop
addr16
mov
es
int3
mov
je
xchg
push
jbe
ljmp
scas
sub
sbb
cmp
stos
repz
dec
sbb
fincstp
fsts
xor
mov
mov
sahf
stos
int
or
push
cmp
sub
stos
call
sahf
sbbb
pusha
pusha
xor
jge
shlb
loopne
lret
ljmp
and
ret
cltd
cmp
std
imul
push
push
push
or
xor
cwtl
lods
data16
test
push
jns
push
repz
cmpsb
mov
test
scas
aad
cmc
lret
repnz
dec
inc
cs
pop
nop
ret
dec
mov
clc
add
and
dec
mov
dec
aam
pop
enter
dec
je
mov
or
test
add
cs
mov
push
clc
sub
jmp
enter
xchg
mov
out
scas
xchg
fists
ret
enter
sbb
adcb
lds
in
sub
inc
mov
shlb
cwtl
mov
or
lods
mov
out
mov
dec
in
test
or
xchg
jecxz
aaa
mov
lea
out
arpl
insl
fbld
push
nop
les
rorb
leave
sbb
add
das
pop
adc
and
sbb
push
in
or
jle
ja
cli
fcmovnu
lret
inc
cmc
mov
movsl
sub
inc
out
jae
add
add
lret
jne
adcb
daa
and
add
sub
cmp
aam
lods
sti
xor
fs
test
lret
mov
lret
out
jae
mov
push
and
dec
icebp
repnz
jae
dec
dec
mov
inc
adc
cld
or
jb
enter
or
test
filds
pop
int
jecxz
sub
dec
test
add
imul
movsl
scas
loopne
int
mov
mov
add
mov
push
lahf
cs
addr16
int
lret
ljmp
imul
mov
out
test
fmul
ja
mov
mov
lcall
adc
mov
lds
and
xor
in
xor
int
and
mov
xchg
lcall
cmpsb
sub
test
jle
mov
and
xchg
int3
lock
pop
mov
mov
or
push
clc
xchg
fs
lret
rol
aas
cli
mov
bound
add
mov
icebp
addr16
lock
orb
mov
pop
icebp
fisubs
and
adc
les
and
adc
repnz
mov
jmp
lret
mov
adc
mov
dec
push
sub
xor
stos
and
or
adc
cmp
popa
je
call
stos
stos
mov
jbe
xchg
add
sbb
xor
outsl
mov
mov
or
jg
outsb
addb
sbb
jo
es
sbb
add
xchg
jge
lock
ss
or
or
pop
xchg
jnp
mov
lea
mov
adc
cld
sbb
popf
and
js
sarl
pop
jno
lea
imul
cmp
add
add
xchg
cwtl
cld
aas
test
jae
lds
mov
std
sarb
roll
mov
roll
gs
ret
mov
popf
les
stc
jle
pop
nop
jl
out
lods
cs
xchg
ret
sub
jle
push
and
mov
cmc
or
scas
dec
mov
nop
cltd
int
pop
stc
mov
popl
cmp
dec
mov
mov
or
sti
int3
dec
mov
mov
ret
stos
clc
mov
loop
inc
add
jo
adc
sub
scas
mov
shr
mov
ds
test
rorl
dec
aas
mov
rorb
je
inc
sarl
push
loop
push
sbb
repnz
imul
xlat
xchg
sub
out
mov
out
add
or
hlt
sub
outsl
bound
fisubl
testb
rcrb
fimuls
test
call
lods
repz
mov
push
pop
aad
mov
rep
or
in
ret
xor
out
fwait
std
mov
shrl
sarb
andl
int3
push
adc
sbb
in
pop
dec
cmp
mov
pop
fsubrl
push
cmp
mov
or
jmp
mov
loopne
daa
or
movsb
xchg
pop
into
pushf
push
ja
outsb
xchg
jo
pop
call
test
outsl
add
into
sub
aam
push
mov
sbb
aam
xor
and
sub
test
loope
pushf
ret
sahf
mov
xchg
popa
aad
and
pop
pop
cld
jg
push
xor
or
sarl
imul
bound
jns
dec
loop
adcb
cli
xchg
and
mov
cwtl
icebp
aam
icebp
outsl
outsb
repnz
scas
xlat
pop
push
loopne
mov
and
and
ljmp
mov
out
out
lds
repz
notb
jge
iret
jecxz
int
dec
negb
roll
cmpsl
add
aad
mov
fcmove
movsb
lret
aam
pop
and
push
or
xchg
xchg
sbb
or
cld
jp
fsubs
xchg
dec
jl
xchg
lds
adc
xor
and
adc
push
sub
les
adc
mov
ja
jle
enter
mov
mov
notb
imul
or
pop
mov
pushf
ja
dec
out
or
xchg
push
push
lret
mov
push
pop
pop
outsb
mov
sti
repnz
stos
mov
mov
dec
sbb
push
or
rcr
jno
sahf
sbb
xchg
sti
adcb
jno
nop
cld
add
mov
pusha
js
push
in
test
enter
loopnew
mov
fs
repnz
xor
push
pop
shll
sub
in
add
aam
loop
mov
lret
mov
dec
cmp
inc
and
pop
mov
push
adc
cmpsb
cmp
adc
data16
mov
in
adc
ds
mov
out
insb
test
out
pop
repnz
jge
hlt
mov
or
inc
outsb
xor
mov
lret
cs
mov
and
push
xchg
cmp
repz
nop
arpl
outsl
xchg
sbb
test
mov
aaa
icebp
test
loope
cld
push
add
push
push
aad
fnsave
dec
jo
stc
adc
inc
xor
stc
outsl
out
daa
add
outsb
lods
jp
fcom
mov
pop
icebp
shlb
sti
inc
adc
cmc
mov
sbb
lods
imul
negl
in
inc
pop
testl
sbb
sahf
push
js
xlat
push
negl
sbb
inc
mov
mov
fwait
movsb
mov
sub
inc
pushf
and
pop
rol
inc
cmp
push
shlb
add
xchg
xchg
mov
cwtl
xchg
cmp
cwtl
mov
aas
push
or
shrl
dec
or
jmp
pop
push
xchg
mov
inc
sbb
jnp
xchg
mov
pop
mov
and
cmp
shll
adc
xor
xchg
hlt
adc
fisttps
push
cmp
mov
inc
dec
mov
shrb
aas
xchg
sub
adc
mov
rorl
add
cmpsb
cs
mov
lds
shrl
in
xchg
in
out
popf
xor
sub
repz
in
dec
jnp
fnstenv
std
leave
sbb
mov
cmpsl
sbb
scas
jmp
mov
in
test
imul
lea
or
inc
or
adc
or
xchg
dec
pop
mov
and
lret
add
xchg
pop
xchg
or
mov
mov
mov
mov
repnz
lret
mov
inc
or
test
fisubl
xchg
adc
loope
std
cltd
or
daa
pop
sbb
loop
fmull
inc
xor
cmpsl
insb
aad
xchg
out
insl
test
xchg
das
orb
push
sbb
cmp
jo
jecxz
dec
gs
mov
or
pop
int3
mov
lds
mov
add
mov
adc
cmpsl
sarb
mov
add
js
sbb
test
add
inc
aaa
lea
das
dec
stos
insl
cmp
push
fistps
outsb
sub
sub
outsl
in
inc
mov
call
iret
enter
pushf
sub
sub
cmp
movsb
enter
add
rorl
cld
iret
sarb
jno
push
sbb
sbb
mov
popf
lds
scas
out
adc
xchg
outsb
cmp
stos
push
shrl
jl
or
sub
mov
xchg
data16
out
inc
fdivl
test
mull
cmp
lods
hlt
jmp
std
rorl
stc
sbb
dec
testl
outsl
cld
insb
pop
in
in
test
and
fs
test
jp
add
int3
jae
push
jno
mov
adc
pop
pushf
lcall
movsl
loop
call
clc
or
cmp
arpl
mov
sbb
testl
ljmp
in
sbb
out
or
int3
sub
xchg
pop
popf
lea
mov
stos
cs
xor
jge
loopne
sub
mov
push
imul
addr16
xchg
mov
dec
xor
and
mov
mov
sbb
xor
add
xchg
add
push
stc
dec
mov
cmpb
rcll
cmpsl
push
adc
aad
sub
and
xchg
xor
xchg
push
loope
filds
out
scas
jge
jl
dec
sti
roll
je
movsb
jo
mov
data16
in
cs
ret
add
jmp
loope
mov
jbe
icebp
rcrb
jmp
loopne
pusha
sub
into
cwtl
cmp
jge
imul
shll
jno
xchg
xchg
aaa
jge
gs
dec
in
stc
popf
bound
mov
jmp
cwtl
mov
adc
mov
shrb
xchg
mov
jnp
ljmp
push
popf
divl
out
lahf
jp
pmulhuw
lahf
sub
inc
sbb
cli
psraw
sbb
dec
inc
sbb
push
lahf
dec
mov
sbb
mov
enter
or
pop
test
jo
fbstp
dec
rorl
dec
scas
ds
adc
add
push
lahf
mov
sub
fdivrl
repz
xor
cmp
sarl
jae
xchg
mov
add
jecxz
inc
adc
add
mov
mov
imulb
inc
dec
push
andb
pop
xlat
pop
mov
dec
stos
jb
mov
shll
or
or
push
pop
movsl
bound
or
daa
dec
adc
pop
rclb
ds
inc
das
nopl
pop
mov
out
fildl
mov
test
mov
jge
lock
jmp
push
lret
shrb
mov
xchg
lods
xor
add
loopne
and
xchg
popa
stos
mov
cs
dec
push
dec
out
pop
cmp
jmp
lods
add
push
mov
rclb
mov
ds
add
or
insl
mov
fisttps
roll
pop
loop
mov
jo
call
and
je
subb
loope
add
js
add
scas
dec
jns
xorb
mov
xor
sub
jnp
cmpsl
mov
push
push
std
jae
mov
or
inc
mov
pop
sti
and
mov
inc
mov
dec
enter
and
leave
nop
mov
cmpsl
ds
xchg
xchg
add
and
sbb
add
cs
mov
rcl
mov
mov
pop
mov
mov
test
and
jl
and
push
shll
mov
andl
js
pop
loope
aad
mov
push
sub
dec
addr16
pop
movswl
jae
ja
push
cmp
das
sub
adc
xchg
sbb
mov
mov
ds
outsb
outsb
or
bound
bound
dec
add
push
or
push
mov
mov
es
sub
cltd
cmp
pusha
inc
xchg
ret
mov
movsl
es
mov
inc
jno
das
jo
push
notb
mov
xor
xor
mov
xchg
add
fisttps
shll
pusha
pop
add
jbe
add
xor
xor
cmp
xor
cmpsb
lret
lods
das
lea
mov
or
dec
jb
enter
sahf
add
cld
mov
insb
jmp
loopne
repnz
jecxz
ss
rcll
xchg
push
dec
mov
adc
mov
or
pop
mov
pop
shll
lock
popa
in
fwait
add
add
adc
out
pop
fdivp
xchg
rorl
sbb
xchg
push
sti
xor
insb
lahf
ja
or
dec
jns
pop
and
lret
jg
in
fsubrp
pop
add
in
adc
push
jnp
out
mov
add
mov
mov
mov
mov
pop
dec
cmc
mov
outsb
mov
push
or
test
xchg
cmp
lea
pop
movb
stos
jae
jl
ret
or
ss
push
out
rorl
xchg
bound
cmp
xor
xchg
and
dec
out
inc
shrl
add
xchg
mov
daa
popf
adc
or
in
ret
jae
jmp
inc
movsb
pop
loopne
xor
lea
repz
lret
movsb
dec
cs
gs
xor
push
popf
lcall
fcompl
mov
xor
cmp
pushf
js
enter
dec
movsb
jmp
sbb
and
fwait
push
mov
add
mov
add
shll
push
jne
pop
fisubrs
add
js
add
sbbb
inc
mov
cli
in
xor
mov
xlat
daa
jle
mov
loope
daa
in
dec
or
fists
xor
nop
add
adc
inc
and
stos
push
sub
insb
daa
add
aad
hlt
int3
adc
cli
adc
fcompl
cld
shl
push
mov
out
pop
mov
jno
out
dec
in
pop
flds
cmp
sub
call
inc
repz
pop
pop
and
cmp
and
pop
push
out
mov
mov
mov
add
xchg
sbb
dec
add
mov
inc
pop
and
sbb
add
std
sbb
int
xlat
addr16
dec
std
subb
and
lcall
inc
sti
mov
pop
xchg
shr
pop
mov
jg
out
jmp
push
jmp
inc
xchg
rcr
push
mov
mov
push
les
mov
mov
inc
push
orb
pop
aam
loop
xor
jne
xchg
idivl
jae
imul
jp
or
sar
push
fisubrl
popa
test
sahf
mov
es
pop
dec
out
xchg
mov
ja
scas
jns
stc
cltd
in
sahf
and
lods
ret
sub
lods
or
pop
insl
lret
sbb
mov
cs
xchg
inc
pusha
outsb
test
subb
imul
dec
sbbl
push
cmp
test
lret
popf
insl
sbb
mov
gs
push
loope
inc
pop
std
stos
fimull
sub
sbb
in
test
std
stos
enter
jo
adc
push
mov
std
or
mov
movsl
sti
mov
jo
aas
sbb
pushf
mov
add
ficoms
cmp
clc
test
push
pop
pusha
cmp
in
jp
movsl
xor
in
push
xor
xchg
cld
mov
pusha
icebp
lcall
fistl
xchg
shrb
popf
jle
clc
fmulp
js
mov
mov
cmpsb
add
push
fsts
sub
mov
add
xchg
mov
cld
mov
test
mov
faddl
xchg
test
leave
push
or
xor
push
mov
sub
stos
mul
scas
arpl
mov
adc
add
insb
sbb
ret
test
sub
sbb
adc
lahf
pop
pop
movsb
push
mov
mov
movsb
mov
mov
pop
jmp
movsl
cltd
and
jmp
xchg
adc
repz
push
inc
adc
loopne
lea
test
in
into
insb
mov
inc
and
int3
popf
sbb
inc
jno
dec
sbb
pop
jge
in
ds
fld
mov
ret
push
add
sbb
xor
stos
and
mov
cmp
add
std
xorl
fcompl
or
mov
mov
in
dec
pop
outsb
push
adcl
js
jns
add
shlb
cmp
data16
xchg
insl
out
xchg
clc
adc
lea
mov
push
shrb
lahf
pushl
add
inc
ficoml
and
imul
mov
bound
inc
xor
in
popa
jb
outsb
sub
fidivrs
repz
mov
dec
and
aaa
inc
push
xchg
sub
call
data16
lods
push
jo
std
data16
stos
dec
mov
mov
and
pushf
in
fucomip
fs
inc
std
jbe
xchg
jg,pn
outsl
mov
inc
ds
nop
add
les
das
pop
aad
dec
xor
sbbb
add
or
inc
pop
in
push
rol
nop
imul
mov
jo
fcmovnu
and
les
repnz
popf
test
add
dec
adc
xlat
add
insl
shrl
jge
cli
lcall
sarb
fists
mov
imul
mov
inc
adc
jmp
mov
iret
sbb
shll
add
cmp
jne
jmp
jne
addr16
add
outsb
pop
subl
mov
push
fwait
xchg
mov
pop
shlb
and
scas
xchg
dec
jmp
sarb
ljmp
xchg
dec
psubusb
pusha
les
or
aas
mov
inc
sbb
adc
mov
xchg
in
inc
cli
push
dec
xchg
inc
xchg
dec
test
lret
jp
cmc
cmp
inc
or
or
fsubrl
out
mov
das
aaa
repnz
sub
sbb
inc
xor
repz
or
out
pop
mov
push
mov
sbb
mov
pop
ror
js
nop
or
hlt
cmc
sub
mov
nop
push
paddusw
mov
mov
shlb
lods
sub
dec
and
adc
mov
push
inc
insb
dec
push
arpl
xor
adc
je
sarb
sub
push
repnz
cli
jae
out
popa
sbb
enter
mov
or
mov
jmp
sbb
mov
lahf
pop
filds
ret
mov
jecxz
dec
addr16
cli
xlat
pop
adc
mov
sub
sub
inc
outsl
out
call
test
adc
adc
or
fcomps
push
imul
mov
and
ds
int3
sbb
shl
cmp
sahf
push
mov
jmp
fdivs
fwait
sbb
into
xor
jno
xor
mov
pop
mov
test
insl
sbb
jg
out
add
jp
popa
push
faddl
mov
xor
pushf
inc
dec
arpl
push
aad
sub
dec
mov
and
mov
jmp
int3
cmp
aaa
and
push
adc
or
dec
xchg
stos
mov
pop
inc
xor
sbb
sub
inc
cs
pop
xorl
insl
mov
test
es
lret
gs
adc
mov
mov
lcall
imul
fnstenv
ret
jbe
mov
clc
mov
push
incb
movsl
je
stos
mov
shlb
inc
mov
cmpb
sub
mov
xor
cwtl
cs
jecxz
test
aaa
dec
jae
sub
push
in
sub
cvtps2pd
adc
repnz
xor
pop
cmp
out
jae
xlat
push
and
or
test
mov
adc
fwait
test
cmp
adc
fdivl
or
clc
mov
jmp
jg
ficoms
std
movsb
mov
fimull
neg
clc
inc
cmp
popf
aaa
xor
pop
mov
cmc
inc
pminsw
scas
test
and
sub
test
cmovg
movsb
sub
fstl
or
push
bnd
jno
sbb
xor
xchg
sub
jnp
testl
es
xchg
jle
adc
les
std
xchg
lret
add
lret
jp
pop
mov
xlat
lods
jp
in
jmp
inc
xchg
stos
lods
cmp
jo
xchg
push
xchg
loope
stos
xchg
xor
popf
call
jmp
stc
es
imul
fsubrl
imul
adcl
stc
sub
lods
inc
loope
out
xchg
cli
mulb
push
loop
cmc
xchg
clc
mov
dec
sub
shr
rcrb
sbb
xrelease
shl
mov
imul
int
out
shll
and
leave
jbe
cmp
dec
movsl
inc
fwait
and
dec
and
test
ret
inc
je
ret
jbe
dec
loope
cmpsl
bound
cs
out
jo
imul
ljmp
addr16
xchg
sub
dec
movsb
push
push
cld
dec
xchg
cmpsl
cld
test
xlat
enter
adc
mov
call
decl
push
push
cli
out
fmul
stc
push
flds
inc
or
or
push
movsb
jp,pn
nop
jecxz
out
pop
cmp
pop
sbb
loope
mov
push
pop
adc
outsl
popf
xchg
lahf
ficompl
or
push
lods
jmp
jne
mov
sahf
or
int
outsb
outsb
lods
icebp
sub
aam
loop
popa
mov
rcll
jb
repnz
ret
into
xor
adc
mull
push
pop
std
xor
push
or
mov
mov
mov
jns
lock
inc
mov
loope
or
out
aas
leave
adcl
xlat
inc
jmp
fldlg2
repz
ficomps
icebp
scas
daa
push
cld
out
fstl
icebp
test
fcompl
mov
ret
mov
test
mov
nop
scas
out
mov
xor
pop
iret
loopne
mov
jecxz
lret
mov
cmp
push
cmp
inc
xchg
mov
sbb
in
push
dec
int
aam
in
cmp
and
sub
je
gs
cmpsb
mov
scas
cmpsl
xor
lahf
pop
icebp
mov
inc
repz
cli
add
add
shlb
cmp
jge
xchg
mov
jge
pop
dec
xchg
pop
mov
pop
pop
dec
lods
fnstsw
xchg
push
xchg
inc
mov
imul
outsb
jle
in
scas
jmp
outsb
fildll
nop
arpl
push
imul
loopne
jecxz
divb
mov
xchg
sub
int3
pusha
and
sub
std
jmp
push
or
insb
bound
sub
stos
jl
roll
jb
mov
ret
popa
sub
out
jecxz
sbbl
or
inc
add
mov
cmp
push
lock
in
movsb
or
gs
int3
sub
aam
aad
push
inc
xor
xor
mov
sub
mov
shll
jne
mov
das
test
add
movsl
imul
push
fsubr
push
inc
jg
ret
pop
in
stos
hlt
hlt
push
pop
les
sub
cmp
dec
cmp
out
mov
imul
jnp
std
jmp
add
push
dec
xor
xchg
or
jne
or
dec
add
lret
lahf
dec
or
lods
xchg
add
push
mov
call
loopne
test
pop
adc
xlat
inc
push
cmp
lock
stos
aad
jb
jle
loopne
je
push
and
nop
mov
popa
xchg
mov
int
aam
pop
ror
adc
push
push
jge
in
xchg
xor
and
lds
stos
and
popf
push
addr16
in
sub
mov
test
mov
in
cmp
sti
jmp
sbb
sbb
ret
movl
jge
aad
jecxz
jno
in
fisubrs
add
dec
cmp
mov
lcall
jl
mov
subb
iret
lea
out
ret
out
xchg
xchg
movsl
jge
or
adc
mov
dec
or
aas
clc
loope
sahf
ljmp
push
call
push
aad
xor
lock
or
notl
mov
pop
loope
xor
sti
mov
in
std
sbbl
pusha
xlat
mov
out
add
sub
inc
inc
ds
ds
jg
ljmp
and
xlat
inc
cltd
scas
pop
cld
aas
dec
pop
hlt
sti
push
mov
or
mov
ss
adc
add
fcompl
and
in
aaa
inc
push
lahf
sub
sub
mov
sbb
into
or
sbb
xor
ds
dec
sahf
call
adc
pop
add
xchg
push
inc
xchg
dec
sub
dec
das
jle
mov
movsb
cmpsb
jl
sub
lods
pop
mov
xor
cmpsb
inc
dec
rcrb
jg
push
mov
and
adc
aam
fwait
xor
notl
xchg
stos
in
out
arpl
js
in
shl
ja
jns
in
je
stos
mov
loopne
push
dec
pop
mov
mov
push
shrb
cmpl
jns
mov
pop
enter
xchg
dec
mov
dec
mov
cmp
js
and
push
or
jne
nop
dec
test
mov
cmpsb
mov
sarl
les
lret
lds
add
cmp
lds
adcb
push
jl
xchg
das
out
and
sarb
pop
sbb
pop
mov
lahf
insb
xchg
push
dec
ret
dec
lcall
pop
cmpsb
loope
jns
js
mov
pop
inc
cmpsl
lods
mov
sub
mov
icebp
hlt
sti
pop
mov
mov
fcoms
jbe
ret
std
xchg
lret
pop
add
mov
jbe
roll
xchg
sbb
jb
pop
push
push
pushf
add
dec
mov
popl
sbb
enter
frstor
push
mov
cmpsb
sbb
cmc
insl
mov
setl
sub
pop
addr16
push
frstor
in
cli
pushf
push
sbb
mov
xor
lods
stc
vcvtpd2psx
rol
xor
leave
fisubrl
xchg
push
xchg
mov
jbe
insb
enter
test
shll
pop
mov
std
dec
pop
xchg
push
jns
gs
adc
pushl
or
notl
std
lahf
jmp
outsb
pop
mov
and
or
or
xor
lea
repnz
rcr
cmp
lea
jl
dec
mov
pusha
sti
xor
dec
xchg
lods
je
stos
dec
test
xchg
xor
insl
cmpsb
pop
mov
sub
cmp
dec
mov
push
jg
cmp
insl
sbb
std
sbb
or
aam
jecxz
int
inc
jle
outsb
jp
mov
lea
pop
and
adc
sub
inc
lcall
cmp
jg
dec
and
jbe
lret
iret
xor
adc
int
ret
and
add
push
int3
jg
xchg
inc
jb
dec
push
pop
pop
clc
ljmp
sbbb
scas
ffree
jne
adc
cmpsl
mov
fdiv
jmp
add
sub
lcall
test
pusha
shlb
jo
ret
movsl
cltd
loopne
shlb
ja
add
andb
fstl
imul
pop
ret
pop
push
les
ret
dec
mov
inc
fidivrl
xchg
rorl
sbb
jbe
out
and
ret
cmp
pusha
fldl
pop
mov
daa
ljmp
cmp
cmpsl
andl
push
negb
sbb
add
hlt
mov
sti
loopne
mov
jno
xchg
scas
jbe
sub
inc
jmp
jb
mov
adc
or
in
test
jle
test
add
pop
aam
out
jge
jge
nop
jecxz
jmp
test
pushl
cs
cmpl
outsb
repz
add
xchg
mov
arpl
mov
js
das
dec
outsl
or
imul
mov
scas
jnp
ljmp
sub
nop
nopl
int3
inc
dec
cmpb
and
outsb
and
pushf
mov
cld
pop
push
and
inc
jp
into
xacquire
les
and
js
push
push
mov
clc
push
test
lahf
jg
add
in
pop
cmpsl
loopne
rolb
addr16
andb
mov
and
inc
insl
aas
in
mov
arpl
test
and
aaa
lods
dec
push
repnz
sbb
scas
dec
sarb
pop
sbb
in
fimuls
mov
jp
int
int3
mov
inc
xor
cmc
add
jle
mov
add
pop
sub
pop
cs
cmp
mov
aas
and
dec
xchg
aad
adc
je
into
dec
test
pop
xor
jp
leave
inc
jo
xchg
lahf
push
aaa
pop
gs
imul
or
mov
mov
aad
shrl
stc
fmuls
aas
in
insl
stos
outsl
inc
sahf
shr
adcb
lock
test
xchg
jl
test
mov
ljmp
pop
es
seta
mov
fldcw
adc
cmc
push
loop
movsb
pop
lret
pusha
inc
xor
pop
jp
fs
push
xchg
loop
daa
leave
mov
cmp
into
jg
jle
into
les
inc
push
xor
pushf
push
imul
loop
jp
cmp
mov
bound
pusha
lret
shlb
mov
jle
xchg
push
outsb
neg
cmp
sub
jecxz
jb
addps
ljmp
lahf
sbb
aad
dec
ds
push
ljmp
je
pop
outsb
or
fnstsw
mov
push
std
arpl
cli
dec
lret
xchg
xchg
push
aam
adc
mov
addr16
out
xor
mov
dec
insl
imul
add
dec
push
adc
mov
xchg
in
in
mov
pop
push
fwait
mov
dec
inc
push
out
out
cli
test
sbb
repz
or
dec
cmp
mov
subb
sub
push
inc
scas
mov
mov
jne
jg
shlb
btc
jle
lret
movsb
pop
push
adc
jns
inc
push
mov
leave
pop
cli
clc
sub
pop
sbb
inc
xor
std
push
push
cmp
dec
mov
jmp
arpl
add
mov
sbb
or
or
pop
fs
loopne
shrb
add
push
scas
dec
rcll
jbe
sbb
test
push
movsl
fldcw
and
dec
iret
xor
cmp
and
push
ds
movsl
sbb
cltd
int
mov
mov
or
dec
in
xchg
lods
sti
fsubrs
jno
xchg
push
pop
fsubp
rcr
in
adc
push
pop
mov
cmp
push
gs
xor
ret
pop
dec
and
pop
adc
mov
call
rcll
aam
adc
aad
ficompl
xor
pop
in
lods
mov
into
jge
sbb
sbb
test
mov
subl
push
ret
add
jne
sub
mov
out
push
frstor
and
lcall
into
inc
fs
pop
loope
cld
fwait
sti
inc
push
or
fldt
mov
ljmp
jecxz
xor
dec
mov
daa
loopne
insl
inc
cltd
into
xchg
es
divb
xor
or
adc
adc
pop
cmc
movsl
xchg
in
pop
jp
or
push
mov
aas
mov
cmp
int
out
dec
int
adc
mov
add
mov
and
jge
add
jp
and
and
and
imul
pop
adc
sub
fnstcw
cltd
push
bound
je
lock
bound
cmp
jne
in
test
push
arpl
pop
idivb
mov
imul
test
in
push
jmp
xchg
pop
mov
jae
cwtl
push
fstpl
push
jmp
pop
fwait
mov
mov
mov
sbb
adc
adc
jg
addb
imul
add
xor
push
push
outsb
push
dec
cmp
mov
jns
mov
stos
addr16
pop
rcll
add
in
or
pop
shr
rcll
mov
jns
dec
xor
xchg
fstpt
mov
test
mov
sub
mov
out
or
fmull
in
fldl
and
jl
ret
test
adc
mov
cmp
inc
cmp
scas
cwtl
adc
fnsave
call
aad
xor
mov
lock
xor
mov
mov
add
mov
cld
dec
inc
xor
jne
push
lea
xchg
imul
cmc
pop
jo
jb
xor
mov
pushf
mov
sbb
in
mov
sbb
cmp
mov
lods
jg
pushf
inc
pop
jb
pop
out
dec
cmp
adc
das
bswap
hlt
jo
rolb
rcrl
mov
mov
mov
xchg
dec
icebp
flds
xchg
and
les
aam
cmpl
and
ja
pop
and
push
sbb
repnz
mov
jecxz
push
sbb
or
shlb
movsl
jle
arpl
cmpsl
rep
and
add
cwtl
or
repz
test
push
dec
xchg
clc
cli
cltd
jo
es
and
jno
xor
fwait
and
mov
xor
cmpl
and
repnz
mov
shrl
rcr
push
xchg
dec
test
repz
lret
or
dec
in
adc
pop
sbb
jnp
stos
movsb
sbb
mov
rorb
inc
sbb
iret
decl
mov
inc
insb
jne
idiv
test
cmpsl
movsb
push
and
aad
cmp
icebp
cmp
pop
fiaddl
adc
repz
add
sbb
inc
rcll
jbe
mov
out
rcrb
jle
repnz
test
shlb
mov
pop
sbb
fmull
sub
loop
mov
mov
sub
pop
xor
lret
mov
and
in
mov
and
mov
xchg
or
adc
mov
mov
cli
sbb
hlt
mov
fwait
repz
jmp
jbe
sub
push
sbb
inc
adc
xchg
mov
mov
in
cmp
into
mov
out
das
xchg
xlat
fisubs
add
lret
insb
nop
or
mov
cmp
loopne
pushf
adc
jmp
movsl
mov
orb
es
arpl
fmul
push
shrl
hlt
enter
out
in
ja
fstpt
inc
cmp
push
jbe
and
and
pop
add
xchg
add
pop
push
popa
arpl
jae
add
xchg
dec
mov
add
outsl
sbb
dec
fsubrs
aam
mov
aas
xchg
cltd
jne
mov
adc
cmpsb
xchg
sbb
arpl
push
lds
push
roll
sahf
push
mov
sbb
adc
mov
arpl
sbb
and
shll
popf
cmpsl
push
mov
or
int
dec
pop
mov
in
push
pop
movsl
cmp
mov
inc
lods
fldt
mov
js
cmp
dec
js
rcrl
insb
mov
lret
or
clc
xorl
jp
call
shlb
xor
pop
incb
push
int3
icebp
dec
inc
mov
ljmp
dec
dec
inc
push
jle
repnz
ficompl
insl
icebp
imul
or
lea
cmp
jbe
pop
adc
xchg
call
mov
in
push
bound
mov
mov
es
rorl
and
clc
sub
cmp
fsts
jnp
adc
sahf
mov
pop
sbb
mov
xchg
scas
insb
xchg
xor
cltd
pusha
out
jns
jbe
shr
sub
inc
js
pop
push
mov
cmp
sub
add
insl
xchg
adc
pop
out
inc
sbb
or
repnz
inc
cli
mov
xor
xor
push
mov
sbb
ds
xchg
adc
xchg
inc
adc
repnz
cmc
cmpsb
popa
popa
sbb
andb
outsl
xchg
push
push
mov
pop
jg
and
cli
xlat
jmp
adc
imul
pop
popf
pop
in
add
gs
lds
mov
data16
mov
mov
in
cmc
dec
jns
dec
cmp
ljmp
jp
stos
test
mov
popl
adcb
scas
es
loope
outsb
and
js
jns
inc
lds
ret
jg
call
mov
sti
jmp
inc
push
pusha
pop
add
or
outsb
xchg
xchg
mov
not
hlt
sti
push
subb
lea
push
mov
je
fnstsw
xlat
cmp
pop
loope
sbb
cmp
xchg
mov
dec
dec
es
pop
sub
dec
in
inc
stos
adc
loope
xor
lods
sbb
xchg
cmpsb
sub
xor
hlt
xchg
iret
pop
jg
jbe
and
cltd
pop
loope
add
mov
insb
rorb
mov
inc
push
rcr
add
mov
jns
add
js
ret
jbe
pop
lods
gs
scas
es
sti
lds
fucomip
sbb
or
orb
nop
dec
xor
sub
ret
fsubr
mov
cli
loopne
sti
xchg
in
loop
sub
cmp
jge
icebp
or
or
ss
outsb
add
jno
in
xchg
lahf
lock
push
test
mov
mov
nop
scas
repnz
lods
inc
mov
loope
and
repz
xorb
add
pop
and
ds
cmp
idiv
stc
pop
pop
jge
dec
xor
jmp
out
jecxz
fists
mov
cmp
imul
in
jg
mov
mov
ret
mov
inc
push
divps
push
pop
mov
out
cmpsb
sahf
movswl
mov
lods
movsl
mov
xchg
ret
mov
pop
int3
cwtl
dec
xor
cmp
fstpt
pop
xchg
cmp
push
mov
xchg
aas
scas
fstl
and
cld
xchg
push
push
test
shll
call
mov
adcl
or
out
and
cmp
aad
jnp,pn
xchg
and
xor
mov
movsb
xor
push
fwait
cmp
jp
lret
pop
dec
outsl
imul
or
jns
jl
pop
stc
cwtl
push
or
mov
mov
adc
ds
iret
push
jge
dec
adc
daa
xchg
pop
mov
add
sbbb
jbe
sub
xor
in
xor
and
mov
adc
inc
mov
inc
sbb
mov
rcrl
dec
sbb
fisubl
cmp
outsb
cltd
pop
cmpsl
xor
inc
pop
lods
mov
jns
pop
and
pop
dec
jl
bound
shll
scas
xor
mov
and
cmp
push
lret
mov
sahf
fidivrs
cmp
daa
fucomp
mov
arpl
jg
adc
sbb
and
std
jno
adc
sbb
leave
mov
lds
xor
sbb
add
scas
push
gs
js
or
jmp
iret
clc
sbb
xchg
int3
aam
and
int3
rcrl
out
mov
aam
add
movsl
pop
jno
or
pop
cmp
and
fldt
fmuls
xlat
cs
mov
xor
mov
out
inc
jae
loope
pusha
andb
mov
decb
dec
xchg
cmp
xchg
fsubs
push
sub
jge
or
jl
mov
jo
add
jno
daa
xor
pop
arpl
dec
into
or
aaa
std
mov
pop
push
pushf
mov
pop
pushl
push
push
sub
popa
or
sub
push
test
stos
jle
es
les
and
test
cltd
fsubs
sbb
sub
in
shlb
fsubrp
push
push
mov
lahf
fstp
ret
insl
mov
mov
nop
push
mov
fucomip
insb
enter
jo
dec
sbb
mov
dec
nop
in
push
sahf
mov
aas
sub
xchg
or
push
xchg
pop
cmp
cmpsb
rolb
fnstenv
cmpsb
popf
pop
xor
add
add
xor
out
movsl
and
push
mov
hlt
push
cwtl
daa
dec
jb
pop
mov
mov
ss
ficoml
push
sbb
push
or
adc
movsb
leave
imul
jge
addr16
cmc
repnz
jae
or
icebp
adc
sahf
mov
scas
push
and
or
lds
fs
out
and
jno
inc
sbb
jae
lds
inc
dec
cld
mov
fiadds
mov
pop
lahf
mov
jne
push
sub
add
cmp
push
mov
cmc
sub
popf
sbb
jge
insl
je
into
mov
mov
call
jge
orb
mov
and
dec
mov
xchg
loope
xchg
pushf
je
lods
add
adc
icebp
enter
jae
pop
adcb
add
enter
xchg
dec
dec
cmp
cmp
mov
pushf
xor
test
clc
ds
ficompl
mov
sub
xchg
cmpsb
and
inc
push
movsb
in
lods
sbb
push
xchg
fiaddl
push
xor
lods
jbe
push
push
ds
lods
adc
mov
pop
push
es
push
loope
and
in
jno
les
test
and
cmp
not
push
or
insb
push
inc
mov
nop
cmp
or
nop
popf
popa
sub
arpl
and
fst
icebp
mov
xchg
mov
jmp
repnz
mov
add
xor
sarb
pop
push
repnz
pop
mov
loop
adcl
out
push
jg
jle
xor
je
fmuls
in
mov
or
repnz
loope
daa
xor
fidivrl
fst
dec
push
mov
sub
fimuls
mov
ret
jo
jg
cli
jecxz
lods
lds
xchg
fsts
scas
push
rclb
cmp
mov
insl
in
adc
cmp
mov
aam
jmp
push
fiaddl
jns
xor
mov
lret
push
cmp
sahf
lcall
scas
stos
aam
push
inc
ds
push
mov
xchg
cltd
cltd
inc
mov
cmpsb
dec
call
jle
imul
mov
jae
xchg
mov
mov
jnp
addr16
dec
adc
ret
dec
or
pop
mov
and
scas
sar
outsl
jnp
mov
inc
in
sub
std
add
pop
pusha
xor
mov
sub
flds
mov
or
loopne
mov
mov
loopne
push
xchg
cs
outsb
or
fsubrs
xchg
inc
lods
jge
and
push
in
dec
dec
out
adc
mov
pop
jecxz
mov
adc
stos
in
sbb
xchg
fst
hlt
mull
imulb
and
cmp
pop
sahf
xor
fcmove
stos
fmuls
xchg
inc
cmp
leave
add
dec
enter
out
mov
push
sahf
cmp
sub
push
mov
mov
rorl
mov
xchg
dec
push
mov
addb
cmp
int
enter
xchg
sub
icebp
adc
int
std
add
sub
lcall
xor
int3
jne
or
and
pusha
adc
adc
inc
inc
mov
sub
es
pop
out
aaa
adc
notb
push
out
jmp
dec
push
loope
out
icebp
xchg
movsl
pushf
push
push
push
popa
sbb
xchg
jae
lea
push
sub
mov
mov
pop
test
xlat
nop
mov
jg
jecxz
mov
data16
mov
fld
dec
mov
pushf
mov
pop
fwait
sbb
dec
pop
xchg
jmp
pop
fisttpll
push
mov
sbb
add
adc
out
inc
inc
nop
push
mov
data16
sub
sub
sub
sub
or
aaa
repz
mov
sub
scas
outsl
sbb
inc
loopne
add
out
mov
loope
xorb
icebp
js
stc
lea
push
repz
mov
filds
pop
mov
xor
mov
into
xor
daa
push
pop
insl
roll
and
outsl
mov
shlb
movsb
mov
sbb
xchg
mov
outsb
loop
fcoms
out
rcr
in
push
dec
jge
add
mov
insl
cmc
inc
jmp
cmp
imull
lods
jmp
subl
icebp
inc
lret
ds
sbb
pop
popa
aad
mov
and
adc
pop
push
sbb
mov
push
imul
je
stos
mov
andb
aas
xchg
mov
mov
xchg
push
es
cmp
pop
andb
insl
lock
add
dec
push
xchg
dec
mov
sub
pop
lds
push
cli
pop
in
jmp
loop
test
jnp
push
test
out
jl
mov
dec
fcomip
push
shll
mov
pop
jbe
cld
xchg
loopne
mov
int
push
xor
mov
push
mov
pop
or
out
xchg
jl
ficomps
mov
sbb
aas
xor
pop
pop
lds
sub
outsl
adc
repnz
dec
adc
frndint
test
jp
jg
xchg
mov
pushf
scas
mov
cmp
cmp
mov
push
daa
xchg
pop
pop
mov
out
inc
test
jno
rcrl
andl
lock
jns
fdivs
jl
jecxz
enter
xchg
insb
pop
jmp
push
dec
jns
push
lea
jb
movb
adc
xor
push
or
add
sub
mov
sbb
cli
mov
adc
inc
aas
or
insl
fadds
or
imul
pushf
jns
add
pop
dec
dec
cmc
mov
push
xor
out
mov
rorb
xchg
je
cmp
int
in
mov
fwait
add
push
mov
or
adc
cmp
mov
or
push
out
pop
jbe
stos
int3
out
data16
ret
and
icebp
jae
push
mov
push
dec
out
mov
mov
xor
fwait
arpl
dec
clc
ficoms
popf
push
and
sbb
and
jnp
in
les
rcrb
mov
out
pop
je
mov
jnp
imul
xchg
out
xchg
out
lock
std
adc
inc
xchg
mov
scas
adc
add
pop
shll
insl
adc
push
dec
inc
xor
jp
mov
mov
dec
jge
jno
aas
mov
jnp
xchg
push
adc
xchg
test
mov
outsb
sti
popf
dec
je
push
fildl
xchg
leave
mov
sahf
out
jmp
paddq
xchg
lods
mov
dec
int3
test
lock
je
dec
addr16
out
adc
add
in
mov
lret
into
adc
xor
sbb
pmulhw
pusha
add
and
xchg
xor
fimuls
inc
cwtl
jg
loopnew
ret
je
jo
sub
dec
test
iret
add
add
fnstenv
and
int
sbb
lahf
aas
and
dec
sbb
out
cmp
cmc
out
jl
mov
sub
xlat
mov
ret
stos
out
mov
ss
arpl
mov
cs
mov
jge
stos
mov
fwait
xchg
jg
ficomps
adc
push
jp
in
jp
pop
fcmovnbe
in
in
dec
inc
shrb
cld
xor
inc
lods
mov
cmp
push
int
arpl
scas
insb
adcb
cmc
popa
cmp
loope
push
out
sub
and
jo
imul
daa
mov
add
dec
popa
push
es
ja
add
and
lahf
stos
hlt
fs
adc
adc
adc
adc
mov
dec
rcrl
and
movsl
add
imul
les
or
outsb
pop
inc
push
out
fucomi
sub
inc
mov
sarb
pop
fildl
pop
jnp
fwait
aas
ret
ljmp
sub
ret
jge
cmp
in
in
sbb
in
lret
jmp
cld
nop
nop
loopne
dec
pusha
pushl
ljmp
repnz
test
test
rcrl
ds
push
mov
jo
mov
iret
icebp
pop
test
cmp
popa
aad
or
push
xor
pop
xor
adc
mov
cwtl
inc
out
inc
xchg
mov
daa
lock
shll
mov
clc
dec
mov
add
repz
sahf
decb
dec
cmp
or
jmp
subb
shl
aad
mov
cmp
scas
movsb
dec
js
in
inc
pushf
scas
mov
xchg
push
lods
xchg
and
adc
push
lods
mov
or
cli
xchg
adc
ss
mov
pop
mov
outsw
dec
lds
jno
dec
mov
lods
xor
add
outsl
cmc
inc
loope
sti
push
pusha
movsl
in
mulb
push
lods
out
fs
jno
idivb
sub
jno
sbb
cmp
lret
into
dec
out
aam
xor
sbb
lahf
iret
test
ja
in
pop
inc
shlb
pop
sbb
or
or
scas
std
ss
ja
lea
mov
jl
lods
mov
clc
leave
testb
lods
mov
bound
outsl
scas
std
and
outsl
jmp
cmpb
xor
sbb
ret
add
adc
int3
pop
push
rorl
mov
push
push
adc
hlt
cmpsl
jbe
lods
or
sbb
xchg
sbb
mov
lock
push
mov
repnz
sbb
mov
fstpt
movl
xchg
cmp
jnp
pop
xchg
bound
push
icebp
loope
pop
pop
xor
pusha
std
and
xchg
jne
xchg
push
nop
push
aas
test
add
enter
lret
pop
add
pop
test
in
in
adc
push
les
lods
mov
dec
les
xchg
xor
aam
mov
call
scas
pop
mov
xchg
adc
and
inc
pop
lret
rcr
xchg
cmpsl
addb
jo
mov
mov
insl
out
pop
mov
jns
add
rcrb
stos
std
mov
jle
fisttps
or
in
mov
dec
subb
cmc
loope
insl
jp
xchg
jmp
jae
loopne
shr
sti
lret
push
ljmp
lods
call
insl
pop
in
test
and
pop
xor
mov
ret
loopne
scas
or
jb
mov
sbb
call
pop
fidivl
cld
addr16
mov
pop
insl
xor
xchg
push
cwtl
repz
insl
sub
mov
les
ret
es
aam
ds
daa
jge
gs
int
jmp
mov
and
cltd
rol
lods
pushf
pop
or
movsl
push
ljmp
jge
adc
ja
jo
clc
mov
rorb
je
fs
cmp
jns
aaa
sub
ljmp
cli
outsb
movsb
dec
fdivrs
xchg
and
jnp
daa
or
push
not
mov
bound
shrl
jnp
cmp
fisttpll
dec
lods
jmp
push
jo
les
lods
jne
in
rcr
addr16
iret
push
popf
out
imul
jp
es
or
jae
xchg
push
mov
inc
outsl
hlt
jecxz
push
cmp
fs
sbb
stc
lock
sub
and
cwtl
stc
lods
out
stos
int
cmp
call
mov
push
add
mov
inc
mov
xor
mov
imul
int
dec
mov
and
test
in
je
lods
rcrl
stos
pop
adc
imul
mov
aam
mov
outsl
pushf
cmc
adc
sub
ror
insl
mov
sub
push
xchg
mov
into
add
mov
cmc
cmpsl
inc
les
ret
daa
mov
jb
lds
lret
repnz
lds
push
jg
mov
inc
sbb
mov
mov
sbb
sbb
push
fwait
shl
pop
outsl
push
sbbl
mov
es
jmp
mov
in
pop
mov
cld
xchg
fstps
sbb
xchg
cmc
int3
aam
jmp
cltd
in
and
lods
imul
pop
jg
fildl
into
lds
mov
rcl
push
add
into
add
insl
std
movb
arpl
sub
inc
add
subb
rclb
adc
pop
insb
mov
aad
sub
sub
jae
xchg
fs
lret
jns
push
neg
rclb
out
loop
icebp
inc
push
adc
std
shr
mov
mov
nop
addr16
sbb
cmp
fldl
push
push
cwtl
xchg
adc
or
xchg
icebp
pop
inc
ret
movsl
ret
add
sbb
lahf
mov
adc
push
jmp
pop
leave
dec
fsubl
out
in
pop
mov
bound
xchg
mov
mov
bound
out
inc
scas
sbb
incb
int3
xchg
or
js
sub
into
insl
pop
jg
dec
fildll
dec
mov
incl
jo
popa
stos
call
and
fstp
cmp
repz
mov
mov
mov
icebp
int
xchg
roll
pop
xchg
orl
jbe
popf
pop
xlat
lret
push
sub
push
clc
int3
adc
scas
cld
fstpl
shlb
xchg
ss
sbb
mov
inc
push
sub
dec
pop
push
stc
aaa
cmp
sti
and
hlt
inc
hlt
adc
inc
push
mov
pop
imul
test
jb
cmp
insl
mov
or
jg
jo
mov
lds
pop
cwtl
xchg
in
xor
sub
mov
adc
js
test
jmp
mov
testl
dec
js
xchg
test
pop
mov
adc
jmp
std
cmc
sbb
iret
jecxz
jge
and
mulb
bound
outsl
sub
iret
pop
mov
stos
data16
call
sbb
cmp
mov
inc
xchg
mov
pusha
dec
xor
or
push
dec
mov
mov
clc
stos
shlb
pop
aad
int
jo
sub
aaa
jg
jl
leave
les
mov
out
jne
adcl
fucom
arpl
xor
into
outsl
jmp
lret
pop
pop
fcmovu
gs
mov
pusha
test
outsl
mov
ljmp
fbstp
xchg
arpl
mov
dec
xor
shrl
xlat
push
test
lcall
adc
sub
roll
mov
movsl
fcomi
stos
sbb
pop
add
stos
test
add
lds
mov
je
bound
movsb
mov
mov
cmp
sub
jmp
xor
dec
cli
test
sar
cmpsb
pop
jae
std
adc
mov
fiaddl
xor
inc
adc
adcl
mov
mov
popa
jo
js
mov
dec
mov
imul
or
sub
jae
push
jg
fildll
int
push
lods
inc
imul
xlat
adc
mov
call
mov
lods
xchg
cmp
rorb
mul
add
add
sub
clc
clc
adc
add
cmp
and
test
mov
and
xchg
in
mov
mov
not
sub
scas
aaa
mov
scas
xor
push
mov
mov
js
xor
das
mov
and
cwtl
fadd
fsubrs
int3
or
jecxz
jle
jno
in
push
add
cli
xor
or
sub
test
and
mov
sahf
mov
jns
dec
shlb
daa
lahf
sbb
gs
ss
je
xchg
shr
push
push
mov
xor
js
and
mov
in
add
addr16
dec
ret
jge
mov
fdiv
sub
and
insb
pop
dec
or
mov
je
adc
ljmp
lahf
pusha
and
adc
pushf
xor
xor
xchg
popf
lret
sub
cmp
notb
clc
or
aas
push
mov
or
pop
mov
adc
out
mov
stc
mov
sti
test
pop
in
shrb
pop
mov
test
lods
and
outsl
mov
imul
fldenv
lea
movaps
jl
sti
sub
fwait
cmp
mov
push
into
jp
mov
in
movsb
int3
mov
mov
out
aaa
pop
jg
inc
shl
mov
or
adc
fadd
mov
cmp
lcall
nop
bound
pop
enter
push
push
arpl
xchg
stos
pop
sahf
aas
into
jge
test
mov
adc
cmp
add
dec
jecxz
mov
pop
dec
jmp
rolb
pushl
ss
and
dec
pop
fwait
test
mov
cmpsb
mov
xor
fldl
fdivp
xchg
dec
aam
call
mov
push
push
sti
int
ljmp
test
jmp
inc
scas
or
cltd
fstl
shll
outsb
sbb
mov
enter
ret
push
push
jg
bound
push
push
in
xor
mov
loope
mov
cmpsb
mov
and
and
shrb
adc
dec
dec
xor
mov
cmpsl
dec
cmp
mov
mov
enter
fwait
bound
movsl
js
adc
xor
mov
pop
aad
pop
xor
pop
and
cltd
in
imul
subl
test
lcall
cmpsb
add
jae
pop
sbbl
imul
fidivrs
sub
jb
repz
xchg
cmc
loop
dec
add
cld
pusha
xchg
jge
mov
bound
mov
pusha
cmc
loopne
mov
insb
push
and
pop
aam
adc
xor
scas
mov
xchg
movsb
sub
bound
dec
into
cmpsb
aas
hlt
dec
in
lahf
inc
iret
dec
sub
ljmp
xchg
push
mov
fisubl
mov
cmp
jle
or
in
icebp
pusha
and
jbe
testb
inc
test
dec
fbld
fcmovnu
mov
jmp
out
dec
cmc
imul
mov
jno
movsb
popf
dec
dec
sub
xor
pop
mov
or
xor
sbb
out
push
or
sub
lahf
push
aaa
sub
outsb
int
pop
mov
idivl
aad
and
sub
push
dec
cltd
scas
ret
fiadds
pusha
cld
xchg
icebp
sahf
dec
mov
loopne
das
sti
mov
fimull
cmp
or
xor
jmp
add
dec
dec
cs
lret
std
sub
pop
ja
push
test
mov
aaa
jbe
add
pop
es
les
aas
or
xor
loope
or
xor
push
pop
and
fdivl
mov
lcall
ret
call
push
sub
aaa
notb
test
pop
sarb
insb
mov
inc
or
mov
lea
divb
xor
xchg
dec
daa
out
and
stc
in
stos
inc
pop
sti
sbb
dec
je
sub
sbb
insb
inc
jle
xchg
mov
or
fisubrl
adc
sbb
lea
sti
dec
xchg
cmc
add
inc
dec
pushf
mov
or
sbb
sbb
fsubs
mov
fsubl
les
outsb
test
decb
rolb
push
mov
jo
dec
bound
push
std
xchg
mov
jb
test
fldt
sti
xchg
xor
cmp
pop
jbe
pusha
sti
aas
shrl
mov
sbb
pop
fdivrs
imul
mov
ficompl
dec
data16
icebp
ret
call
clc
aad
mov
scas
dec
mov
jb
or
addb
aad
sub
xchg
into
or
int3
mov
xlat
pause
cmp
sbb
cld
mov
mov
jae
stc
mov
adc
movsb
cmpsl
arpl
inc
mov
lret
sub
dec
sub
ficoms
leave
sub
sub
dec
pop
push
roll
in
sbb
shrl
data16
dec
jg
std
in
pop
push
mov
dec
mov
inc
mov
mov
sub
adc
cmp
dec
scas
rolb
push
fdivr
notl
mov
cmove
adc
test
jno
in
mov
and
stc
jno
jb
jp
insl
shlb
cmpsb
mov
insb
fsts
sub
fwait
push
outsb
nop
mulb
gs
push
jecxz
mov
cmpsb
or
cmpsl
mov
cmp
jle
push
mov
pushf
dec
xchg
std
pop
jg
mov
mov
mov
fldcw
xlat
gs
pop
fists
lret
loopne
adc
and
int
push
push
aad
fsubp
pop
ljmp
and
add
or
pop
repnz
add
xorb
int
enter
xchg
cli
jmp
aaa
jae
jp
pop
cmp
mov
sbb
jmp
mov
mov
xchg
mov
bound
mov
jns
cmpsb
mov
inc
inc
sbb
data16
aad
imul
dec
and
aas
mov
aaa
xchg
dec
pop
push
pop
roll
testl
fimull
mov
xchg
sar
mov
dec
jb
lds
xchg
or
pop
rorb
cmpsl
fsubr
jge
pop
jl
jns
imul
push
aad
dec
mov
je
xchg
mov
enter
adc
loop
mov
bound
hlt
sarb
sub
mov
imul
pop
cltd
mov
out
xor
repnz
or
inc
cli
fstl
push
shll
pop
pop
pop
insb
pop
idivb
loop
cmpsb
mov
pop
cli
mov
lret
and
orl
roll
adc
fcoms
xlat
add
outsl
test
lret
call
mov
ds
neg
fimuls
add
jnp
mov
or
imul
cmpsb
enter
add
xor
cli
cmp
dec
push
out
mov
es
sub
daa
outsl
mov
xor
mov
cmpsb
lods
jne
pop
inc
in
mov
sub
int
scas
xor
addb
dec
ss
mov
arpl
lds
sbb
sbb
faddp
inc
icebp
dec
adcl
adc
lret
xor
ja
addl
fidivs
out
daa
mov
cwtl
ret
lea
imul
rorl
jb
and
mov
sahf
xchg
test
xor
inc
shll
out
rcl
mov
mov
ljmp
dec
sub
scas
insb
jg
adcb
jg
dec
subb
sbb
xchg
icebp
arpl
es
xchg
ret
js
iret
add
ljmp
adc
jae
lock
push
xchg
mov
outsb
mov
sub
ds
inc
sbb
cwtl
mov
cmpsb
jb
das
xchg
xchg
jns
icebp
push
or
mov
movsb
push
lock
inc
or
dec
inc
jns,pt
test
add
test
movsb
mov
icebp
cmp
popf
mov
mov
dec
in
out
je
dec
call
dec
pop
add
push
nop
xorb
xchg
sbb
xlat
je
pop
fcompl
arpl
cwtl
lds
jp
mov
hlt
mov
hlt
pop
add
or
xor
xchg
xor
out
push
test
mov
gs
xchg
aaa
lahf
cmpsl
cmc
jno
xlat
lods
inc
bnd
dec
lret
xchg
jo
dec
cmp
xchg
mov
jae
jg
push
xchg
pop
mov
loopne
cltd
std
push
and
fs
add
je
add
imul
cltd
adc
jmp
loopne
movsb
int
adc
jle
out
fstpt
cli
stos
cmp
imul
add
sbb
xchg
sbb
sahf
aaa
or
inc
pop
insl
into
fdivs
adc
inc
xor
push
lods
test
mov
fwait
cld
imul
rol
mov
fsts
adc
addr16
hlt
mov
pop
jbe
sub
sbbb
xchg
outsb
jo
ja
push
jae
out
adc
leave
stos
push
push
or
mov
pop
orb
rorl
mov
lret
add
fstps
imul
mov
xlat
ljmp
inc
aam
and
test
fidivrl
ror
sub
arpl
ds
ja
pop
lds
insb
aaa
mov
mov
ja
addr16
jmp
test
popf
arpl
push
sbb
cmc
lea
jnp
lods
scas
push
repz
test
cmp
jl
add
push
xchg
xor
xchg
mov
xorl
dec
cmp
notl
sbb
push
outsb
dec
sti
fwait
in
cmpsl
lods
adc
add
jl
dec
sub
mov
sub
dec
dec
pop
xor
lret
xor
dec
cmpsl
stos
sbb
lahf
ljmp
mov
push
or
xor
imul
xor
add
pop
add
loopne
out
bswap
adc
mov
outsl
add
out
icebp
xchg
mov
or
inc
push
inc
insb
inc
leave
ljmp
dec
jbe
cli
push
sub
imul
jb
outsl
cld
imul
mov
xchg
or
and
fwait
gs
dec
or
mov
cmc
aaa
and
insb
fsubs
dec
popf
inc
mov
jle
ret
stc
mov
int3
test
aas
outsl
xlat
mulb
jo
sbb
or
jg
aas
mov
and
nop
repnz
je
jb
pop
in
dec
flds
bswap
sbbl
xchg
sbb
pushf
xchg
lock
mov
aas
loop
mov
dec
pop
mov
movsb
mov
jle
movsl
outsl
dec
mov
js
mov
mov
icebp
and
cmp
fwait
call
fldcw
jmp
fstpt
push
push
push
dec
call
mov
and
dec
mov
imul
popw
adc
notl
rorl
sti
das
rcrl
repnz
ret
or
or
or
mov
mov
nop
out
ret
jns
shlb
push
stc
orb
jg
or
ret
mov
mov
xor
sub
cmp
lock
inc
dec
into
push
adc
sub
cmpl
jle
into
addb
inc
mov
shll
or
fnstcw
shrb
cmp
mov
stc
test
dec
jg
rclb
inc
cwtl
inc
insl
lds
inc
fisttps
mov
cmp
dec
daa
push
aaa
adc
and
cld
pusha
sub
jno
push
mov
dec
sbb
mov
mov
jbe
frstor
push
sti
cmp
push
xchg
aam
repnz
push
sbbl
ljmp
jg
mov
imul
xor
pop
popf
sbb
test
js
imulb
test
push
testl
adc
lcall
push
fwait
iret
fcoms
add
out
or
es
mov
inc
mov
leave
lods
fsubl
or
test
push
test
pop
mov
ja
sub
pop
mov
cmp
push
sbb
cmp
test
mov
pusha
pop
insb
pop
in
cwtl
cmp
push
jae
sub
sbb
mov
and
sbb
push
xchg
mov
daa
sbb
push
sub
mov
addr16
les
xchg
or
add
add
mov
pop
out
pop
mov
fnstcw
out
insl
or
movsb
cmpsl
orb
jb
jp
sti
stos
out
inc
mov
or
jg
sbb
ds
pop
add
jns
int
jnp
inc
ret
xchg
mov
js
or
cwtl
stos
in
sbb
pop
cltd
into
mov
scas
adcl
lcall
inc
inc
cmp
xchg
es
fsubrs
sub
inc
xor
cmp
daa
push
lods
test
jle
add
adc
push
sbb
dec
enter
push
jle
mov
movsl
mov
out
popa
hlt
sbb
je
movl
mov
rorb
add
mov
es
aad
xchg
pushf
sub
fucomi
mov
cwtl
or
push
out
mov
mov
rolb
stos
jl
out
xor
or
sub
xor
mov
push
hlt
mov
pop
lea
lods
icebp
mov
push
cmp
lock
cmp
pop
in
push
xchg
fimull
push
dec
es
ret
mov
sbb
test
inc
push
ret
outsb
cmpsb
adc
xor
xor
out
add
lcall
js
mov
sub
mov
cmp
jne
hlt
and
xchg
sub
enter
leave
cmp
mov
adc
lods
mov
push
repz
mov
out
adc
pop
xlat
pop
aaa
das
adc
and
fcomp
jbe
cmp
push
dec
or
sbb
mov
ljmp
aad
out
into
pop
bound
dec
in
ds
xlat
pusha
sub
js
cwtl
outsl
outsb
dec
xorl
push
lahf
mov
mov
mov
xchg
addb
mov
stos
mov
mov
test
notb
iret
push
mov
aam
xchg
mov
imul
dec
loopne
js
push
lods
in
in
mov
loop
pop
dec
dec
fwait
notb
push
lcall
lret
imul
pop
mov
popa
stos
sbb
jb
mov
mov
imulb
inc
faddl
dec
outsb
iret
cmp
mov
cmpsb
or
pop
adc
cli
fs
jp
insb
pushf
imul
ljmp
mov
lahf
or
xor
or
mov
aad
push
mov
adcl
rep
cmp
pop
shll
inc
inc
mov
jnp
push
sahf
or
mov
data16
enter
fstps
lret
mov
xor
test
and
dec
pop
mov
or
or
mov
mov
sub
inc
ja
je
cmc
xchg
push
addr16
insb
inc
jb
popf
jmp
lods
pop
push
push
and
das
inc
xchg
mov
xchg
jmp
jge
dec
jae
popa
push
aad
pop
insb
test
insb
out
faddl
inc
hlt
fstps
sarb
aaa
mov
pop
push
dec
inc
sbb
test
pushf
mov
call
mov
and
jb
xchg
aas
xchg
cmp
aam
lods
mov
xlat
and
repnz
and
and
xor
and
or
frstor
push
fcom
scas
jns
leavew
hlt
add
and
es
es
lds
adc
aam
add
movsb
loope
sbb
jge
loopne
ds
fldl
imul
js
mov
cmp
in
jnp
loope
adc
ret
and
out
lahf
sub
xor
cmc
ljmp
dec
or
mov
ret
fistpll
popa
mov
sbb
mov
cld
lods
sbb
ret
loop
sub
shll
add
adc
push
divl
dec
mov
scas
mov
jle
cmp
loop
ljmp
loope
popl
in
dec
jo
enter
adc
adc
xor
lods
inc
inc
pop
jno
imul
mov
xchg
add
pop
push
pop
loope
scas
pop
adc
push
mov
ret
popa
ja
repnz
and
inc
xchg
pop
mov
and
inc
push
addr16
popa
int
cmp
dec
sub
hlt
xchg
popl
pop
leave
call
cmp
mov
fiadds
xor
pop
or
data16
cli
xor
popa
ds
xchg
cmpl
push
add
lahf
arpl
test
mov
or
and
adc
outsb
sbb
in
push
daa
add
add
add
and
add
xor
add
nop
add
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
add
and
pushf
movsl
jp
push
pop
pop
mov
add
push
push
movswl
pop
pop
push
mov
pop
call
cmp
sub
adc
pop
mov
add
xor
mov
add
jne
push
pop
xor
adc
push
xor
popl
call
push
std
repnz
sar
lahf
in
mov
mov
pop
push
mov
pop
sub
mov
add
mov
cmp
jne
and
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
ja
call
pop
lods
jne
jnp
cvtdq2ps
je
out
or
xchg
mov
mov
bound
testb
sbb
or
ret
mov
inc
jmp
roll
push
jle
jne
stos
shrb
add
mov
xor
in
mov
ja
js
push
das
xor
fldl
jns
call
xchg
xchg
jae
lcall
cmp
xchg
or
xchg
pop
test
in
mov
dec
je
iret
sarl
cmp
sub
lds
test
sub
mov
lock
and
enter
aam
out
xor
flds
or
addr16
dec
bound
dec
push
ja
loopne
or
sti
or
and
mov
sbbl
enter
cmpsl
pop
out
ds
push
into
and
sarl
and
or
add
add
pop
repnz
fucom
hlt
mov
mov
pop
push
enter
mov
xchg
inc
int3
mov
push
movsl
sbb
pop
aam
ret
addr16
cmp
xor
mov
enter
movsb
loop
nop
movsl
je
popa
insb
int3
mov
dec
xchg
mov
cmp
push
fcmovbe
jne
pop
std
fiadds
mov
push
fstl
ja
pop
gs
call
std
mov
rolb
lret
mov
sbb
inc
repnz
jl
dec
repnz
xchg
mov
sbb
push
adc
xor
xchg
in
dec
sbb
cmpsb
mov
arpl
pop
std
and
inc
pop
sti
mov
pop
xchg
loope
popf
pop
dec
and
lret
cmp
sbb
rcrb
dec
hlt
bound
xchg
shlb
push
or
sahf
pop
std
or
lock
add
insl
insb
aas
pusha
je
rol
push
popa
cmp
mov
aam
fwait
sub
pop
movsl
inc
push
out
fbstp
repnz
adc
cmpl
sub
xor
shl
mov
mov
ja
hlt
inc
adc
test
xchg
sub
and
sub
shl
insl
mov
cmp
sti
and
mov
jecxz
xchg
sub
mov
sbb
sbb
sbb
ljmp
jp
loope
mov
pop
ds
xor
mov
pop
jge
loopne
xchg
sub
adc
adc
in
jno
sbbl
jle
push
push
out
insl
out
pop
xchg
flds
pop
sub
outsl
dec
fst
jmp
xchg
sub
jecxz
xchg
jae
pop
in
jb
subb
out
shll
adc
mov
insb
mov
cmc
insb
mov
hlt
insb
or
mov
pusha
ret
jae
mov
mov
adc
xchg
dec
jg
addr16
sti
push
push
fcmovnu
int
mov
xchg
mov
sarl
cmpsl
push
pop
mov
ficomps
into
pop
xchg
sub
in
mov
and
repnz
pop
jno
pop
jno
mov
lods
aam
push
in
jns
push
lret
pop
aad
jno
adc
aaa
xchg
mov
mov
mov
pop
push
inc
push
insl
add
pop
imulb
cmpsl
shll
sub
mov
adcb
jbe
jge
inc
mov
leave
pop
out
xor
int
repnz
add
pop
mov
mov
cs
add
mov
repnz
in
iret
jo
int
mov
push
or
mov
insb
or
mov
in
rolb
iret
pop
out
mov
add
mov
in
cmp
jno
pop
cli
jecxz
jecxz
mov
int
adc
cmp
adc
aas
in
inc
push
bsf
jno
sbb
shl
sub
ds
add
jae
or
mov
add
jo
int
sub
or
lcall
cmp
pop
mov
jb
inc
mov
stos
lods
sub
jecxz
divb
int
mov
push
or
mov
hlt
sarb
mov
dec
mov
pop
jo
mov
dec
nop
inc
ret
jbe
iret
pop
jo
mov
repz
cmp
pop
jno
mov
jno
pop
jno
mov
sub
aam
insl
repz
inc
sbb
adc
pop
popa
in
push
xchg
rorl
push
in
setns
cmp
adc
jbe
cmp
int
xchg
rorl
add
repz
clc
int3
or
int
mov
lods
mov
mov
cltd
and
enter
fcmove
cli
mov
lcall
push
cmpsl
dec
xchg
jo
int
jae
fmull
and
enter
fcmove
push
xorb
push
mul
jo
int
jae
fmull
and
enter
fcmove
push
sbbb
sub
int3
push
shll
mov
in
adc
push
xor
mov
pop
sbb
int3
adc
int
mov
lods
mov
stos
xor
dec
enter
mov
lods
je
mov
sub
out
int3
xchg
shll
enter
enter
sub
push
iret
mov
xchg
lods
ljmp
dec
jge
in
inc
sub
push
int
mov
add
lods
mov
jno
adc
pop
movsb
mov
iret
jbe
push
mov
mov
mov
push
mov
icebp
mov
out
adc
mov
inc
adc
in
rcll
dec
mov
repnz
out
adc
push
into
pop
mov
push
sbb
mov
jbe
xor
test
push
jno
mov
out
lcall
jge
shll
mov
cmp
sbb
mov
xor
and
xor
jbe
push
cld
sarb
xchg
adc
xchg
adc
sbb
add
xchg
cld
cmp
and
imulb
jge
jmp
sub
xchg
adc
xor
xorl
push
pop
adc
shll
shll
shll
shll
shll
shll
xor
int
adc
iret
pop
jno
mov
jno
pop
jno
pop
jno
popl
ror
shll
shll
shll
roll
roll
mov
icebp
in
shll
gs
pop
ror
pop
dec
enter
iret
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
jno
pop
pop
pop
push
add
add
or
add
add
stos
add
sub
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
test
add
mov
add
loopne
add
mov
stos
add
enter
lock
add
shrl
add
jne
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
stos
add
add
add
enter
add
add
adc
add
or
add
add
add
add
ja
jo
imul
add
jb
popa
outsb
je
push
push
jns
gs
js
add
movsb
cmp
or
or
add
jo
test
mov
test
mov
jne
jg
or
push
and
inc
add
and
adc
push
call
sub
push
js
jo
sbb
jg
nop
inc
or
in
jb
cmp
jmp
adc
or
push
add
outsb
xor
add
push
and
xor
sbb
insb
and
jo
je
mov
dec
sub
pop
add
add
arpl
and
mov
enter
in
jb
cmp
mov
mov
in
jb
cmp
mov
add
fs
or
pop
sbb
add
xchg
dec
enter
inc
jb
cmp
pop
and
xor
adc
les
call
cmp
sub
add
fcoms
push
add
or
jo
call
or
inc
mov
mov
pop
sbb
mov
cmp
sti
pop
lods
pop
sub
xor
add
or
sbb
sbb
cmp
adc
add
mov
adc
push
int3
push
call
add
test
jne
xor
pop
add
lret
inc
cmp
lock
adc
ret
lea
roll
mov
inc
add
inc
cmp
jne,pt
sbb
cld
adc
fcoms
add
inc
pop
and
pusha
shr
pop
add
dec
add
push
mov
ljmp
mov
mov
adc
push
add
mov
add
push
mov
add
push
adc
add
ret
nop
push
andnps
mov
sbb
call
add
lds
push
scas
nop
cli
cmp
shll
push
jne
adc
add
call
xchg
sbbl
jmp
push
xor
add
ret
or
hlt
fisttps
add
xchg
call
test
pop
pop
add
xchg
lea
je
lock
clc
mov
shll
hlt
into
add
dec
cld
push
add
fmul
ja
and
enter
add
fcos
or
mov
or
gs
seta
popa
testb
into
sarl
push
add
sub
ss
add
test
sbb
pop
jl
xchg
adc
shr
loopne
fcmovbe
add
test
or
cmp
popa
test
cmp
stc
loopne
sbb
adc
mov
inc
lock
or
mov
repz
decl
fmuls
adc
add
push
xchg
sarb
out
add
mov
test
je
add
shll
push
dec
stos
add
adc
and
add
add
clc
ljmp
mov
cld
cld
dec
inc
jge
popa
push
push
jne
or
push
dec
push
adc
sub
add
cmp
fcoml
adc
in
jecxz
mov
add
add
push
testb
dec
pop
jbe
cmp
adc
jmp
xchg
repz
nop
out
add
inc
and
add
jg
mov
push
xchg
shll
jp
cmpsb
jne
push
push
jae
xchg
sbb
push
add
cltd
adc
addl
out
lods
pusha
add
ret
in
add
sbb
orb
mov
mov
leave
scas
inc
lods
adc
lcall
test
ljmp
mov
pop
ret
dec
and
jb
add
mov
rorb
lds
aaa
inc
aad
xor
cmp
cmp
push
jle
add
rcll
fstpt
mov
cwtl
pop
lock
xchg
pop
adc
cmp
loopne
rcll
cmpsb
mov
movaps
inc
or
lods
je
leave
test
mov
test
add
sahf
jmp
sbb
leave
xor
sub
psubb
push
sbb
jae
ja
or
std
and
mov
cmovb
shlb
add
inc
inc
mov
sar
dec
add
pop
xor
mov
jg
orb
xlat
inc
addr16
pop
ja
je
cmc
add
dec
ficoml
inc
mov
xor
leave
nop
stos
call
das
aas
and
add
cmp
xor
rorb
call
pop
jns
aaa
xchg
adc
jmp
loop
ret
popf
xchg
xchg
add
pusha
andb
push
or
ret
adc
mov
push
fisubrl
add
mov
sbb
aaa
or
dec
bswap
xchg
xchg
and
mov
xor
shrb
jmp
dec
mov
cmp
or
test
decl
add
dec
cmpsb
imul
mov
add
fsubr
sarb
rclb
cmpl
sub
mov
push
aam
push
cwtl
imul
pop
dec
cmpsb
lods
sbbb
and
lea
cwtl
sbb
jecxz
shll
add
in
out
or
fidivs
jg
dec
iret
je
sub
add
adc
mov
test
pop
ret
xchg
mov
pusha
lock
inc
sub
mov
or
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
jb
cmp
xchg
jle
adc
and
outsl
aad
ror
push
push
sub
mov
jle
add
test
push
out
popf
adc
adc
add
xor
or
inc
xor
jo
add
jl
cmp
cmp
rorb
movsl
xchg
aam
ret
jmp
in
mov
les
mov
add
aad
inc
or
adc
subb
or
sub
add
xchg
mov
jb
add
push
cmp
aad
sbb
mov
out
stc
or
mov
pop
loopne
adc
dec
cmp
jmp
push
sbb
in
dec
or
in
fistpl
add
cmp
mov
in
int3
dec
or
cmp
pushf
insl
loopne
add
jae
in
stc
push
add
dec
pop
int
add
jmp
sub
inc
ficompl
push
sbb
rcl
std
jecxz
addb
push
or
adc
jmp
es
in
add
jb
pop
add
or
addl
call
test
cmp
add
pop
sub
xchg
sbb
fdivr
adc
jl
movl
rolb
or
arpl
inc
sub
orb
incl
rolb
add
cld
in
jg
add
adc
adc
cmp
mov
or
push
ljmp
sub
dec
or
ret
andl
lds
ss
or
push
push
je
sub
add
lahf
ret
xchg
add
xor
lret
and
ljmp
add
sub
cmp
bound
add
and
dec
fadds
sub
scas
push
adc
testb
mov
jb
jg
add
clc
fadd
and
mov
repz
push
xor
inc
and
push
add
sub
mov
clc
push
or
inc
mov
data16
in
pop
jne
popf
lea
pop
sub
dec
repz
leave
push
xorb
jmp
out
popl
movsb
jge
movsl
imul
scas
add
or
mulb
pop
add
shrb
in
in
pop
jnp
sbb
sub
stos
clc
or
push
or
call
js
mov
addb
add
jae
movsl
scas
jp
cmp
mov
call
sbb
xchg
add
add
aaa
ljmp
sar
dec
mov
hlt
mov
mov
add
or
jmp
cmpsb
jecxz
inc
adc
adc
xchg
pop
lcall
add
cmp
cli
pop
mov
xor
add
jle
add
dec
std
cmp
mov
add
adc
enter
adc
adc
sub
sbb
inc
movups
movsb
imul
pop
lea
movsl
push
pop
loope
add
or
sbb
or
cmp
pop
call
sub
cltd
sub
add
data16
add
jne
and
je
aas
adc
push
pop
call
cmp
add
ffree
leave
pop
add
insl
jge
outsl
aam
cmpb
xchg
dec
adc
jne
mov
cmp
stos
imul
xor
ss
cli
jae
add
jne
addb
or
daa
sbb
test
add
pusha
sub
and
in
add
cmp
push
push
pop
mov
stos
pop
shlb
push
pop
loopne
adc
mov
mov
push
aad
jo
test
mov
pop
pop
mov
add
xchg
sbb
xor
jg
push
jmp
pop
sub
mov
push
add
or
adc
add
dec
xchg
sbb
lcall
xor
jmp
dec
movsb
sub
or
test
adc
les
xor
mov
dec
mov
add
inc
and
push
dec
cmc
data16
ja
add
je
roll
pop
add
xchg
xor
roll
repnz
mov
fisubrl
cmp
add
add
dec
pop
fs
push
add
add
cltd
mov
dec
mov
cli
aad
leave
or
and
xor
and
mov
inc
cmp
sti
shrb
add
cmc
and
or
xchg
fs
test
leave
xor
andps
test
add
and
cmpsl
inc
inc
push
shlb
sbb
sub
or
jl
hlt
add
lahf
and
sbb
add
xchg
push
cmp
subb
sbb
clc
or
add
inc
jg
sub
mov
push
sbb
and
xchg
les
mov
mov
mov
in
mov
push
pop
or
xor
test
mov
add
sub
lea
push
mov
or
add
jmp
cltd
ret
aaa
lods
test
icebp
mov
ret
test
clc
inc
or
and
jo
jns
dec
call
movsb
sub
add
rolb
push
or
je
mov
push
or
mul
and
or
sub
inc
scas
add
xchg
add
add
mov
sar
popa
push
cmp
sub
jno
push
add
jbe
dec
add
sti
xor
jo
movsl
push
faddl
mov
divb
clc
je
sbb
jbe
cli
add
hlt
mov
or
add
sub
cli
mov
imul
or
lock
mov
fiaddl
inc
mov
insb
cmpsb
movsl
inc
add
pop
mov
dec
add
popa
in
out
and
mov
loope
scas
add
ret
icebp
lds
dec
add
enter
jl
xlat
add
clc
add
sub
adc
xor
dec
aas
mov
inc
fiadds
jmp
xor
testb
mov
test
nop
jo
sti
in
sbb
mov
push
add
pop
cmp
into
add
xchg
cmc
ljmp
test
test
add
and
ret
push
push
in
add
test
xor
pop
add
es
lock
pop
add
lret
xchg
fbld
sub
in
push
add
add
add
xor
jmp
add
shll
xchg
inc
xchg
dec
mov
push
xor
loop
cs
push
inc
and
push
cmp
pop
add
and
or
add
arpl
add
dec
jmp
sbb
sub
cld
jae
mov
icebp
and
pushf
sub
add
ss
clc
or
ljmp
or
add
das
or
adc
add
xchg
call
add
jge
xchg
in
sbb
jns
add
call
xlat
adc
ret
add
mov
cld
inc
sbb
and
add
je
xor
jl
sbb
enter
add
jne
mov
sarl
mov
subb
gs
dec
xor
mov
in
loopne
lock
scas
add
mov
add
or
cmp
inc
add
and
and
leave
xlat
iret
mov
add
lret
add
fistps
loope
or
add
and
push
push
mov
cmpl
mov
leave
push
test
add
mov
jbe
add
mov
xchg
add
ds
cmp
divl
adc
sub
js
repz
lock
loope
movsb
inc
xor
je
push
ret
jmp
sbb
adc
cmpsb
sbb
movl
call
loop
jae
ucomiss
sarb
jbe
repnz
loopne
mov
add
add
call
sbb
add
mov
in
mov
dec
fistpll
push
lret
pushf
jecxz
sbb
sbb
filds
pop
push
jg
push
cmp
movsb
fisttpl
or
push
jo
mov
adc
enter
shl
add
mov
pop
inc
add
stos
add
enter
imul
add
push
jmp
in
leave
add
mov
push
add
add
add
jo
out
mov
add
and
enter
fnstenv
add
adc
pop
sbb
mov
ret
pop
pop
loop
push
pop
push
adc
add
mov
cmp
add
sahf
push
adc
hlt
dec
dec
push
jle
and
push
add
sbb
push
pop
add
cmp
jp
std
int3
add
mov
fsubr
fs
nop
push
mov
xchg
adc
or
jno
push
orl
stos
rclb
xchg
imul
mov
and
loop
xor
add
aaa
jae
add
fstpt
mov
push
inc
add
push
and
sbb
sub
or
mov
and
js
popa
aas
pop
cmp
push
sub
xor
jmp
iret
or
xor
scas
sbb
add
lea
add
xchg
fadds
pusha
push
xor
out
int
jl
add
jl
pop
xor
sub
rcrb
fdivrs
js
jnp
cmp
rol
push
fdivrl
add
sbb
popa
jb
add
or
nop
adc
syscall
ja
cmpsb
add
or
lods
pop
pop
add
jmp
fbld
push
sub
cli
in
add
mov
dec
mov
sub
inc
add
lret
ds
addr16
clc
mov
data16
inc
sbb
loopne
dec
clc
nop
cmp
and
xor
add
pop
adc
cld
cmpl
fmuls
add
repz
add
clc
add
push
sbb
incl
and
xor
xchg
add
push
pop
pcmpeqw
add
mov
lahf
xchg
add
cwtl
fs
nop
mov
mov
pop
test
leave
pop
ljmp
inc
jp
add
push
push
cmp
pusha
cld
imul
xor
aad
test
inc
xor
sbb
inc
hlt
xchg
add
or
push
sub
mov
addr16
fcoml
pushf
and
arpl
mov
and
clc
pusha
aam
aas
mov
add
imul
push
dec
xor
push
push
inc
push
inc
pop
add
pop
jb
popa
outsb
add
push
cmp
inc
push
push
dec
popa
jae
add
insb
jne
and
cmp
jecxz
dec
inc
cmp
jo
aam
leave
mov
inc
adc
mov
fsubr
aas
out
mov
cmp
ficomps
push
jne
ss
add
mov
fs
add
in
divb
jmp
mov
out
rolb
call
cmp
mov
out
adc
mov
dec
idivl
push
sbb
pop
sub
sbb
add
jge
pusha
mov
dec
dec
fcomp
and
fisttpl
add
arpl
pop
fdivs
test
mov
loope
sub
pop
sbb
in
cmp
rcrb
add
sbb
xchg
sarb
xor
aas
cmp
orb
cmp
jecxz
add
into
leave
adc
or
rolb
lcall
repz
mov
push
insb
or
cli
adc
dec
push
and
adcb
add
pop
repnz
or
pop
fs
add
pop
pusha
or
jle
push
add
repnz
mov
adcb
cmp
les
orl
pop
mov
add
adc
fisubl
pop
add
loope
lahf
or
popa
lock
rdtsc
addl
add
outsb
mov
cs
or
outsl
stc
fisttpll
or
sti
or
pop
pop
shl
jmp
shrb
lods
inc
or
cmp
adcl
test
mov
mov
incl
push
clc
xchg
in
test
cmp
mov
push
inc
aaa
xor
je
cmpb
jbe
adc
leave
imul
mov
add
fisttpl
push
or
add
nop
mov
int3
shl
jnp
add
add
push
sub
mov
jae
jmp
fs
adc
push
adc
dec
add
add
xchg
or
or
cmc
movsbl
push
add
and
movsl
jg
in
dec
outsb
loope
test
pop
push
pop
push
sub
inc
and
loop
jnp
add
jbe
push
shrd
inc
sbb
sbb
nop
dec
jne
sbb
push
jae
add
je
add
call
adc
in
rcrb
je
jne
xchg
adc
sub
rcrb
cmpl
push
je
aad
movsl
fs
or
sub
cmp
cli
aam
xchg
push
ret
ds
stos
popa
xor
inc
jnp
pop
or
push
or
push
cmp
push
lods
scas
adc
sbb
sub
cmp
outsl
add
add
push
xor
js
dec
pop
sbb
or
sbb
ror
cmpb
rcrl
dec
and
stos
pushl
mov
rcl
fadd
jae
inc
scas
add
push
push
imul
scas
incl
push
ss
xor
and
mov
scas
add
adc
outsb
bound
adc
or
add
pusha
jne
jmp
mov
or
cs
pop
add
add
testb
mov
inc
hlt
out
pop
add
je
clc
adc
hlt
fadds
cmp
jne
sahf
fs
xlat
push
push
imul
add
sbb
add
pop
rolb
shlb
cltd
adc
mov
add
fiaddl
out
aam
inc
add
mov
inc
pop
andl
jns
mov
int3
and
in
xchg
repnz
push
fsubrp
dec
xchg
or
fneni(8087
loope
add
movl
aaa
loopw
or
imul
add
and
cmp
pop
sub
pop
push
push
push
hlt
push
bound
enter
adc
jmp
xchg
mov
pop
orl
push
mov
mov
inc
or
pusha
add
daa
lock
xchg
popf
pop
add
leave
xor
mov
mov
pop
cwtl
adc
adc
dec
addb
mov
rolb
movsb
stos
dec
loop
jb
add
fsts
xchg
xor
add
xchg
mov
push
push
dec
sbb
mov
incb
sub
pop
in
add
adc
mov
ja
outsl
xchg
cmp
jmp
sarb
incl
in
xchg
ss
xor
add
push
xchg
sub
lds
sbb
cs
adc
push
and
jmp
cli
std
xchg
das
push
jb
add
enter
leave
aas
pop
cmp
cmp
add
sbb
and
icebp
xlat
in
call
fdiv
push
clc
or
frndint
push
cld
lret
pop
jmp
and
push
or
cmpsl
mov
add
and
xchg
repz
xor
xor
add
pop
cmp
push
hlt
and
ss
xor
pop
xchg
mov
cmp
aas
shlb
orb
out
adcb
mov
mov
add
cli
jecxz
sbb
imul
sub
adc
push
aas
inc
insl
popf
pusha
js
nop
stos
rorl
dec
ja
push
aaa
add
mov
scas
les
rclb
or
add
enter
ret
pusha
push
add
or
or
cmp
jne
and
dec
push
push
add
je,pt
ret
mov
add
inc
lods
xorb
push
push
fildl
jle
dec
clc
xor
fisubrs
dec
add
out
sahf
mov
pop
mov
mov
test
stos
ds
nop
pusha
mov
rclb
fistl
pop
loop
test
repz
sbbl
sbb
insb
shrl
mov
push
les
jge
mov
rep
popl
lcall
loopne
mov
or
movsb
inc
adc
std
or
xchg
cmpl
jp
lgs
and
call
push
push
inc
or
roll
sbb
mov
adc
add
xchg
and
add
inc
ffree
cmpl
jne
hlt
and
pop
adc
flds
dec
test
sub
inc
call
in
lea
nop
cmpl
daa
das
add
and
dec
out
adc
add
dec
dec
test
enter
add
pop
in
repz
xor
push
mov
mov
add
add
add
mov
add
xchg
xor
cmp
and
call
push
or
add
incl
mov
shr
daa
cltd
in
shrl
sbb
mov
sbb
sbb
lea
aaa
dec
ds
push
cwtl
add
xchg
cmp
rolb
adc
mov
mov
jnp
add
ret
add
sti
jbe
lock
xchg
and
and
pop
cmp
rorb
push
mov
sub
adc
scas
and
ljmp
sbb
ds
adc
test
dec
pop
adc
call
add
add
push
jbe
cwtl
nop
push
add
fsubrs
add
inc
clc
fs
add
mov
sbb
jns
cmp
jg
inc
jmp
cmovl
sub
mov
je
add
cmp
pop
adc
js
rclb
xor
cmp
add
pop
jmp
push
outsl
jb
loop
add
outsb
jae
inc
daa
jo
pop
mov
nop
sub
lock
cmp
cmp
sub
stc
add
xchg
mov
clc
xor
jmp
xchg
mov
inc
mov
push
sub
sub
jl
xor
add
push
lea
call
popf
pop
add
pusha
or
mov
add
and
add
add
mov
fsubr
jle
push
sbb
and
inc
jg
sbb
push
cmc
inc
cld
cmp
les
dec
cld
pop
add
add
lret
jl
adc
dec
mov
jle
pop
sub
sbb
adcl
repnz
pop
mov
cld
add
clc
xchg
pop
xchg
add
inc
add
rcl
bswap
mov
mov
stc
std
js
add
or
mov
fs
mov
pop
clc
icebp
aas
flds
cmp
js
dec
jp
jo
and
jmp
addr16
sub
and
add
push
push
push
inc
adc
jnp
jg
rdtsc
mov
dec
into
add
mov
jmp
data16
aam
add
cmc
adc
adc
in
loope
pop
cmpsl
inc
sub
rclb
pusha
mov
add
adc
hlt
cmp
sub
pop
cmpsb
pop
dec
loop
addb
or
pop
add
jmp
mov
jp
add
pop
jae
nop
in
add
cmp
bound
mov
xorb
mov
in
push
jbe
cmp
cmp
mov
inc
dec
dec
nop
add
pop
push
push
mov
addl
push
add
pop
add
push
sbb
xchg
add
shr
incb
fs
add
daa
xor
test
loop
sbbb
sbb
cmp
sub
jp
add
dec
imul
xchg
cmc
test
stos
rorb
add
mov
icebp
pop
rorl
inc
mov
pop
and
daa
repnz
push
pop
shl
into
popf
rcrb
add
add
and
fsubs
mov
ja
lret
mov
push
pop
cmovbe
xchg
push
pop
fdivr
dec
clc
cli
add
jmp
int3
mov
cmpsb
add
mov
dec
xchg
adc
pop
repz
fdivr
dec
add
iret
pop
pop
xor
mov
mov
add
add
push
push
inc
jne
add
stos
out
and
pop
lea
hlt
loopne
stos
fs
mov
cmp
rcl
lret
cmpsb
jg
ds
scas
jae
push
or
jle
add
ret
rorl
jecxz
xchg
pop
pop
and
and
or
dec
pop
add
lcall
mov
inc
sub
add
or
ror
popa
cmp
push
adc
cmp
loope
push
shlb
inc
jmp
stos
popa
add
lret
pop
adc
notb
cmpsl
ljmp
rclb
inc
les
mov
xchg
adc
fildl
sti
ja
add
push
mov
call
adc
imul
int3
sub
mov
ss
mov
and
sbb
dec
cmpl
jge
pop
sub
xchg
test
sbb
push
hlt
leave
xchg
arpl
and
pmulhw
adc
aad
mov
sub
xchg
cld
adc
loopne
cmp
inc
jle
inc
icebp
jbe
iret
outsl
add
stc
add
lea
push
cmp
sti
sub
add
cwtl
inc
xchg
fildll
xchg
fs
jns
pushf
mov
dec
addl
js
add
jle
adc
add
lock
add
pusha
je
inc
mov
pop
add
inc
or
jle
out
adc
dec
fwait
add
xor
add
jne
add
out
lods
adc
or
test
sub
add
jnp
sbb
cld
push
scas
adc
fsub
sub
xchg
ljmp
mov
jns
add
orb
jmp
test
sub
pop
xchg
add
dec
enter
repz
jbe
add
ficompl
fists
pushf
stos
mov
in
sub
inc
pop
cmp
mov
add
jne
cld
outsl
add
pop
gs
outsb
or
dec
sub
xor
je
test
cmpsb
xchg
cltd
loopne
add
int3
sub
fs
ret
gs
adc
or
and
jne
add
lret
xchg
push
add
jge
jmp
bound
add
adc
dec
mov
cmp
repnz
jg
sahf
sub
add
and
fstl
xchg
cli
imul
jb
pusha
add
cmp
mov
push
inc
str
pop
pop
or
push
mov
mov
adc
add
mov
add
mov
dec
push
jmp
push
repz
js
add
pop
cwtl
pop
sub
xlat
add
aam
mov
jl
add
mov
or
push
or
add
or
mov
add
xor
jno
dec
subb
lock
jmp
push
inc
add
xchg
xor
ja
add
adc
add
dec
and
jmp
aas
jo
add
xor
nop
push
loop
pop
insb
jge
cmp
pop
and
pop
hlt
and
push
push
sbb
pop
loopne
inc
rcl
add
inc
mov
adc
or
add
dec
sbb
pop
aam
mov
add
xor
dec
daa
and
cmp
stos
js
outsl
cmpsb
push
push
xor
mov
add
push
jno
das
push
int3
xor
xor
les
ljmp
pop
add
mov
sbb
ds
push
subb
adc
movsb
or
ret
pop
sub
cmp
sbb
mov
mov
fisubs
add
jg
out
xor
cld
or
in
dec
jmp
ret
mov
inc
mov
and
cmp
pusha
push
dec
add
fisttpll
dec
add
jmp
adc
adc
add
iret
pusha
cmp
les
lods
ja
call
dec
nop
ret
jo
iret
insb
adc
movd
daa
loope
cs
mov
jno
stc
or
testb
xchg
mov
ret
cltd
mov
or
rorb
dec
sbb
mov
fld
aas
cmp
add
push
mov
pop
jbe
add
lea
cmpb
or
push
push
mov
or
inc
pushf
cmpsl
mov
js
call
adc
pop
pop
lods
dec
mov
jl
mov
push
sbb
add
test
pusha
imul
push
loop
pop
dec
dec
add
ror
add
mov
outsl
lret
rolb
push
fldl
lods
xchg
and
mov
das
dec
les
push
pop
pop
add
clc
test
or
or
jmp
dec
push
jge
stos
daa
push
inc
sbb
push
push
mov
scas
mov
mov
add
sub
je
sbb
gs
lock
fadd
push
call
or
sub
add
out
loope
clc
fmuls
aaa
jne
addb
or
shlb
mulps
add
sbb
xchg
xor
dec
add
notl
and
popf
adc
pop
add
lret
xchg
xchg
ret
xor
add
rcrb
aam
shrl
and
pop
popf
push
arpl
es
dec
add
scas
gs
mov
inc
cltd
mov
js
add
pushf
out
push
sub
fsubrs
cvtps2pd
or
mov
gs
daa
sub
cld
pop
clc
call
fadds
add
jo
mov
add
loop
insl
pop
pop
inc
sub
movsb
xchg
xor
push
cwtl
lods
in
clc
cmp
popa
jno
and
test
add
xor
add
sub
jecxz
adcb
sbb
les
push
jl
adc
and
push
shr
jmp
add
int
sbb
clc
adc
call
out
add
jb
or
xor
mov
add
adc
test
xor
out
fucomp
sub
data16
sbb
or
adc
sbbb
adc
out
add
subb
pop
pop
sbb
je
rorb
and
js
cmpl
outsl
add
push
mov
int
push
insl
sarl
movsb
adc
inc
cmovne
sub
cmp
fdivrl
or
js
divl
jo
add
adc
fwait
xor
addb
orb
lea
hlt
adc
xlat
push
mov
pop
xchg
push
ret
pop
add
lea
stos
cld
cwtl
add
dec
mov
pop
cmp
xchg
ja
cli
rolb
sbb
movsb
push
jg
inc
push
push
xor
xor
ret
dec
add
jecxz
je
fidivrs
psubsw
mov
std
inc
sub
push
test
ret
pop
dec
add
test
inc
xchg
inc
lret
lock
jo
add
cwtl
jb
ffreep
or
add
sbb
int3
imul
jb
shrl
cs
mov
loopne
sti
pop
jo
outsl
push
outsb
inc
push
popa
out
jge
add
inc
adc
rclb
or
and
jecxz
xchg
add
adc
push
movb
pop
mov
push
fcoml
inc
jl
cmp
mov
push
loop
or
ds
mov
add
push
dec
jbe
add
mov
aam
outsl
popf
sbb
les
jae
mov
sbb
test
scas
cmp
inc
push
cmp
int3
xchg
dec
stos
and
push
loopne
mov
add
adc
testb
or
repz
add
or
lock
loope
add
shlb
add
ret
jmp
dec
inc
jne
add
dec
adc
lods
push
or
mov
test
in
add
pop
inc
xor
mov
stos
fmull
add
cmc
lods
and
dec
movb
subb
sbb
inc
fisubs
dec
hlt
jae
fcomps
nop
fnstcw
dec
add
jo
gs
cli
jo
adc
stc
clc
lods
test
rclb
inc
push
shll
mov
lahf
adc
mov
aaa
add
cmp
jne
nop
xor
push
mov
loop
add
inc
test
fisttpll
addr16
roll
or
cmp
and
cmp
cs
mov
or
push
cmp
xor
test
sub
leave
ret
inc
loop
clc
mov
xchg
push
repnz
cmpl
jge
sub
pop
orb
add
ja
jnp
cmp
adc
mov
add
jecxz
mov
nop
pop
xchg
pop
or
and
jl
sub
adc
inc
aaa
push
lea
or
mov
xchg
cs
add
out
mov
add
repz
push
mov
leave
vpcomuq
aad
dec
xor
pop
movsb
xor
jmp
sub
sbb
cs
call
sub
xorb
fdivl
add
jl
sbb
sub
jae
pusha
jle
add
jmp
mov
mov
movl
mov
daa
sbb
nop
lahf
js
add
adc
sub
add
jle
add
es
adc
add
adc
jo
dec
add
test
jmp
add
mov
pop
mov
cmpsb
mov
rorb
test
je
leave
adc
lds
pop
loope
enter
lods
push
pop
sbb
mov
jne
add
test
mov
mov
add
mov
jg
xchg
dec
mov
and
pop
inc
mov
mov
or
push
ret
add
and
mov
add
push
and
pop
movsb
pop
push
push
loopne
adc
mov
je
xor
pop
outsl
imul
add
pop
cli
fildl
mov
in
ret
leave
adc
and
mov
mov
dec
cmpb
sti
mov
xchg
mov
iret
adc
aam
add
fimuls
test
mov
add
sbb
and
sbb
or
dec
and
jle
push
adc
sbb
jge
add
or
jne
inc
ret
enter
add
sbb
out
add
push
and
mov
imul
imul
je
sub
add
dec
push
or
push
mov
push
fs
hlt
in
inc
pop
push
add
dec
shr
jg
add
mov
js
add
dec
cmp
add
jae
add
rclb
push
cmp
add
add
clc
mov
xor
inc
mov
mov
pushf
testb
mov
je
adc
ficoms
add
jb
adc
movb
sbb
inc
xor
pop
movlps
adc
mov
jnp
out
add
fstpt
cli
add
pop
xchg
dec
lahf
test
clc
call
dec
adc
lret
adcb
pop
or
fwait
sbb
push
stos
loopne
out
jmp
sbb
dec
sub
mov
into
mov
insb
pop
aam
xchg
dec
aaa
adc
mov
ret
iret
cmpsb
ret
or
push
in
cld
push
inc
cmp
add
bound
or
push
jp
add
dec
or
mov
add
add
sbb
mov
adcl
cmpsl
movb
mov
call
icebp
add
mov
idivb
xorb
cmp
movsb
inc
es
filds
xchg
adc
in
mov
and
jg
add
add
lds
sbb
repz
add
jmp
add
dec
mov
sub
jne
push
push
rclb
pop
pop
dec
les
je
ja
lods
cmp
jno
sbb
push
psubw
and
jmp
push
repz
add
dec
mov
jne
or
fs
pusha
add
add
in
clc
mov
xchg
sub
add
inc
das
sarl
and
cli
pop
nop
sbb
mov
jmp
add
sub
add
dec
add
adc
pop
ret
test
loop
add
adc
jmp
dec
xorb
lea
jp
ja
add
push
movsb
jo
dec
add
sub
loopne
pslld
xor
imul
aaa
adc
add
loopne
jl
je
cmp
aad
jg
in
loop
sbb
lock
inc
push
in
dec
cld
add
fmulp
shr
fldenv
push
bound
mov
jmp
mov
add
add
sub
fmuls
jge
inc
inc
stc
add
mov
add
xor
or
clc
ret
inc
add
jp
loope
add
subb
jg
xchg
aas
ret
add
enter
jb
adc
in
add
push
ret
jle
sub
adc
cwtl
push
mulb
mov
out
jnp
psubw
add
inc
mov
add
aam
sarl
sub
cmp
xchg
jbe
mov
mov
clc
mov
and
xor
add
leave
sbb
lds
mov
das
mov
fiadds
jmp
or
movl
lods
adc
inc
inc
lods
add
mov
xlat
fadds
add
xchg
mov
push
or
push
adc
dec
loopne
add
int3
into
sbb
rcll
test
popa
push
pop
cmp
push
rol
sbb
nop
je
jbe
jp
sarb
add
hlt
daa
lret
into
fistpl
test
xchg
pop
clc
js
aas
xorl
pop
mov
dec
addr16
add
leave
add
cmpb
xchg
add
pop
test
add
popf
imul
add
dec
pop
js
shlb
lds
stos
mov
cmp
add
or
dec
mov
cltd
add
out
sub
inc
add
daa
cmp
loopne
add
leave
cmp
call
out
mov
jle
jo
add
das
push
sbb
add
jecxz
repnz
sub
test
nop
jo
fistpl
add
jecxz
cmp
pop
pushf
mov
out
shrb
repnz
repz
loope
add
xchg
iret
sbb
pop
ds
xchg
add
cmpsb
scas
mov
cwtl
push
add
leave
and
dec
add
cmpsl
xchg
cmp
xor
in
push
in
cmp
mov
lock
movsl
pop
mov
popa
mov
and
addr16
add
repz
mov
sub
and
add
les
pop
in
bound
xor
jnp
pop
in
mul
roll
mov
mov
add
cli
or
ret
and
in
aas
mov
xchg
sbb
pop
leave
jne
rcl
sar
fcmovnbe
add
adc
neg
popa
add
adc
xor
add
xor
fcmovnbe
nop
js
mov
daa
jmp
enter
jb
je
jbe
add
xlat
cmp
orb
add
repz
add
inc
mov
out
pop
imull
add
dec
mov
pop
mov
shr
inc
push
mov
pop
push
pop
and
add
cmp
jne
adc
lret
jns
iret
cvtdq2ps
dec
ret
out
add
aaa
add
call
and
jne
jl
das
mov
inc
add
push
into
inc
cmp
inc
jmp
or
ja
out
add
mov
jne
sbb
repnz
shlb
ljmp
dec
xor
repnz
mov
test
shlb
pop
sbb
add
push
stos
shl
cvttps2pi
movsl
sub
pop
loopne
filds
mov
fdivrl
movb
sar
cmp
dec
pushl
idiv
push
or
call
ljmp
mov
and
mov
or
daa
adc
jge
pop
or
out
xchg
add
or
lahf
das
rclb
bound
or
adc
push
adc
cmp
sbb
clc
pop
push
and
subl
push
xchg
fs
xor
cltd
aas
push
cmp
roll
out
xor
pop
inc
std
push
data16
inc
insb
in
cmpsl
jns
pop
jg
add
and
adc
lods
push
jne
add
dec
jmp
lods
into
loopne
mov
call
lock
pop
sbb
jecxz
jns
pop
adc
sub
inc
stos
popf
stc
test
dec
add
arpl
loope
sub
jg
xor
add
cmp
cmp
inc
push
xchg
cltd
repz
and
push
aaa
adc
loop
push
xor
clc
sbb
mov
clc
in
test
mov
addl
int3
pop
xlat
add
clc
loop
loop
add
test
push
add
inc
inc
push
adc
in
mov
inc
add
push
inc
lods
or
loopne
imul
push
add
das
mov
out
push
ja
movsl
xchg
pusha
lds
mov
jge
add
or
sub
sub
sbb
mov
or
test
mov
or
mov
ljmp
fs
unpckhps
insl
cmpsl
ret
andb
outsb
xor
push
pop
xor
andb
cs
adc
pop
clc
loope
cmp
and
mov
adc
mov
int
xchg
psubusb
adc
mov
dec
or
mov
mov
or
call
lcall
inc
adc
jne
and
in
mov
shlb
and
jo
and
inc
sbb
fsubs
push
mov
and
sub
push
xor
jno
adc
or
inc
in
pusha
dec
cwtl
je
aas
jp
orb
lret
adc
sbb
pop
adc
adc
cmp
nop
cli
mov
enter
mov
jl
js
je
jo
in
jb
cmp
pusha
and
enter
dec
jb
cmp
inc
and
cmp
clc
xchg
mov
lods
sbb
add
and
test
call
cltd
adc
sbb
and
and
aam
ror
int3
in
jb
cmp
sarb
xchg
inc
add
add
in
xor
leave
lock
pop
jnp
inc
test
inc
dec
cmc
pop
test
cmovo
push
mov
mov
into
dec
and
inc
ja
cmp
out
push
out
icebp
cmpsb
jp
add
xchg
hlt
enter
jb
idivl
loope
stc
add
and
xchg
cld
enter
ja
add
jb
cmp
sbb
fildll
andb
xchg
out
out
call
jmp
add
xchg
jmp
enter
add
cmp
sbb
add
and
xchg
rcr
xlat
mov
in
jb
cmp
sbb
shrb
and
xchg
fldl
enter
jb
cmp
xor
and
and
add
jb
cmp
and
pop
lret
and
xchg
int
into
in
push
repz
mov
mov
shlb
mov
add
and
enter
mov
adc
rorb
pop
add
and
loopne
inc
repnz
js
jnp
add
mov
je
adc
push
and
shrb
gs
mov
iret
mov
adc
dec
pushf
popl
aas
inc
or
jo
out
pop
mov
and
pop
pop
or
dec
add
xor
gs
adc
outsl
jb
lock
shrb
mov
or
inc
dec
outsb
bsr
and
pop
sarb
inc
fsubrl
add
popa
insb
sbb
mov
out
pop
add
mov
pop
inc
insb
adc
addb
push
add
xor
pop
loope
xor
nop
inc
pop
testb
mov
inc
jns
inc
mov
scas
pop
xchg
rolb
rclb
pop
xchg
divl
mov
dec
add
scas
adc
xchg
xor
pop
stc
movsb
inc
fs
or
pop
dec
mov
dec
mov
push
outsb
cwtl
dec
pusha
cmp
pop
test
add
fs
add
in
cwtl
xchg
clc
inc
add
or
sbb
and
fcompl
dec
test
jnp
out
sbb
or
cld
xor
push
and
adc
sub
add
stc
add
xchg
and
or
pop
je
repnz
inc
movsb
jae
shlb
mov
pop
push
or
mov
inc
cld
add
inc
cmp
adcl
jo
jae
push
mov
popa
mov
mov
pusha
mov
sbb
push
xchg
jns
gs
sub
nop
les
addr16
lock
or
arpl
cmpl
pop
cmpsb
inc
and
jo
add
insb
repnz
cwtl
add
enter
popa
or
push
aam
ds
fldl
add
push
lods
test
fs
loopne
aas
xor
mov
adc
fnstenv
add
lods
inc
aam
sub
lods
sub
cmp
lret
adc
popa
jg
add
movsb
pushf
jo
ljmp
subb
add
shr
ds
or
push
push
shl
pop
add
mov
and
call
xchg
loopne
in
add
dec
push
test
mov
ret
mov
stos
ds
subl
cmp
addr16
adc
push
pop
call
xor
roll
mov
cmpb
aaa
mov
adc
cmp
lret
mov
add
js
sbb
inc
dec
sub
lahf
data16
add
jbe
cld
push
xchg
or
rorb
push
fmull
shll
mov
add
repz
je
add
jl
or
or
push
dec
xor
mov
cmpb
je
wrmsr
add
shrb
add
aad
bound
test
roll
repz
xorb
pop
jmp
jbe
hlt
push
jge
or
jmp
add
aaa
adc
add
add
mov
in
aam
js
jo
xchg
repnz
sbb
and
int3
aaa
ret
lods
cmp
pop
das
fcomp
sarb
shlb
add
pop
or
xor
lret
pop
xor
sub
nop
lods
xor
bound
lock
xlat
mov
clc
mov
or
adc
call
sub
xchg
cmp
cmp
mov
cmpb
dec
aas
sbb
hlt
dec
cmpsb
jp
mov
push
lock
pop
inc
fsubs
add
inc
push
pop
dec
xor
and
aad
fs
push
add
mov
mov
adc
test
add
xor
push
add
daa
bound
lock
aam
aaa
cmpsb
add
cmpsl
add
add
sub
repz
rsqrtps
jg
mov
push
add
push
sbb
add
enter
jns
add
iret
jae
cmp
jne
add
test
dec
jg
dec
or
xchg
in
add
or
mov
add
loopne
add
mov
add
pop
inc
cmp
cmp
or
xlat
add
daa
pop
shll
or
dec
clc
xchg
cld
lock
mov
mov
imull
xor
nop
add
xchg
lods
in
sbb
sbbb
push
add
fsub
mov
popa
imul
jg
pop
and
and
pop
popa
push
dec
mov
sub
xchg
sub
fdivrs
rdtsc
mov
iret
jecxz
cwtl
and
xor
adc
xchg
fadds
out
cld
add
jmp
cli
rcll
jbe
pushl
and
and
out
fcmovne
out
into
cmp
cmp
sbb
aas
push
push
mov
je
push
not
shl
lret
adc
inc
xchg
push
pop
mov
mov
or
add
add
push
add
dec
ja
add
mov
shll
les
mov
cld
adcl
add
mov
daa
cmp
lret
xlat
mov
xor
add
enter
stos
fnstcw
and
shlb
adc
ds
popa
add
or
push
and
test
cmp
inc
pop
mov
push
cmp
pop
mov
xchg
and
xchg
add
jne
sbb
dec
inc
mov
mov
daa
cmpsb
add
xchg
jb
cmc
sub
jecxz
sbb
xor
push
mov
addr16
pop
nop
sti
pop
pcmpeqd
insb
dec
xor
add
test
stc
dec
inc
push
cld
lret
mov
pop
aaa
push
add
cmp
and
add
push
pop
sarb
stc
mov
gs
pushf
sub
xchg
add
xor
sub
dec
push
inc
mov
pop
mov
and
into
dec
add
add
jge
push
sbb
into
add
add
jmp
add
and
fsubrs
add
dec
sub
jmp
xor
xor
bound
in
add
ret
sbb
jne
add
fcmove
sub
add
cmpsl
xchg
testb
xor
andl
adc
in
xor
inc
nop
xchg
sub
int3
jne
ds
push
mov
add
pop
mov
push
mov
or
lret
add
shll
movsb
sub
xchg
or
mov
clc
stos
push
push
add
ja
outsb
or
call
pop
add
adc
dec
je
je
jb
cmpb
or
imul
aam
mov
mov
sub
ret
andb
add
sbb
mov
cli
cmp
aam
out
or
jae
mov
stos
xchg
pop
dec
fsubrl
sar
pusha
outsb
cmp
jo
and
or
xor
add
push
cmovp
jp
dec
imul
shrb
and
cmp
adc
imul
insb
jecxz
xor
and
xor
xorb
nop
jge
call
push
cmpb
add
lea
dec
add
pushf
push
in
stc
js
add
jl
push
pop
sub
int3
jne
add
mov
testl
je
xchg
sbb
andl
pop
icebp
call
and
inc
mov
or
cs
adc
test
pop
pop
pop
xchg
mov
cmp
add
dec
push
sub
inc
inc
inc
add
shlb
add
icebp
xchg
daa
pop
loopne
int3
adc
cmp
sbb
testb
push
popl
and
adc
cmp
adcb
sarb
testl
push
pop
lahf
cmpsb
push
sbb
call
into
push
rcrb
add
cmpsl
lock
xchg
js
loopne
ret
inc
addr16
push
xchg
add
inc
add
leave
xchg
and
lods
inc
mov
mov
loop
add
nopl
lock
mov
push
or
pop
jl
xor
imulb
je
push
jl
add
dec
loopne
js
aam
testb
loopne
sub
mov
xchg
stc
mov
pop
inc
add
inc
inc
movl
subb
add
jmp
pushf
xor
enter
sbb
inc
mov
add
adc
add
dec
fnstcw
cmc
dec
jge
and
jae
push
cmp
ret
mov
jne
add
adc
xor
mov
cmp
ja
sub
aas
sar
add
call
dec
add
push
add
outsb
int
out
data16
or
clc
call
leave
test
stos
dec
pusha
outsb
scas
add
or
or
xlat
call
mov
pop
ds
add
and
add
adc
mov
les
jo
add
movsb
stos
sbb
in
addb
mov
jno
xchg
jp
call
sub
cmp
cltd
jecxz
test
add
out
lea
jnp,pn
daa
add
rorb
add
jl
xorb
fldt
add
lods
push
cmp
xchg
sub
cmp
lock
sub
in
cmp
pop
jne
mov
xchg
or
fnstsw
and
aas
ja
mov
push
mov
sbb
xor
jmp
or
pusha
lret
popf
pop
jo
xchg
sbb
shlb
rclb
add
inc
pushl
pop
jae
movl
or
add
inc
pop
cmp
cmp
mov
shrb
add
sbb
out
lahf
jmp
or
ret
sub
jns
add
rorb
cmpl
push
add
xor
fmuls
fstpl
pop
fwait
sbb
imul
add
xchg
jno
push
add
test
jns
leave
ret
psraw
das
loop
jbe
pop
adc
adc
mov
lods
xor
or
insl
and
arpl
jge
cmpsb
in
enter
sbbl
and
fnstenv
mov
push
add
mov
ret
je
bound
fisttps
clc
or
out
fdivrs
add
push
cmpsl
and
mov
pusha
add
add
jg
shrb
xor
add
xchg
jb
cld
jge
inc
push
cmp
ficoms
pop
daa
ja
es
add
or
out
sbb
sbb
mov
ja
lret
dec
nop
or
cwtl
sbb
mov
inc
add
add
mov
psllw
aas
adc
out
repnz
mov
jle
les
sub
add
jmp
xor
and
dec
ja
icebp
repz
push
and
sbb
push
cmp
call
hlt
repnz
ud1
jne
xor
add
call
inc
add
aas
xchg
test
or
fstpl
push
and
inc
imul
add
mov
xchg
filds
add
dec
popf
dec
adc
ret
add
sub
or
in
mov
add
lods
mov
add
pop
push
mov
lcall
decl
push
inc
out
cs
imul
and
sub
inc
add
mov
add
lock
scas
push
and
mov
dec
jae
sub
pop
pop
mov
push
mov
lahf
ja
je
add
mov
cmp
jb
mov
sbb
add
inc
jmp
aas
cmp
sbb
or
es
hlt
and
inc
daa
add
mov
or
xchg
or
push
mov
add
xchg
inc
loopne
call
sub
inc
mov
ss
aad
push
pop
sub
call
pop
std
xor
push
inc
movhps
pop
enter
pusha
mov
cmpsb
add
sbb
add
push
add
xchg
and
sub
xlat
add
dec
mov
add
dec
lea
test
mov
psrlq
dec
mov
add
fdivrp
ljmp
mov
and
mov
add
das
push
pop
dec
xchg
push
add
add
push
add
dec
pop
and
ret
fucomip
orb
adc
leave
cmpsl
jecxz
push
movb
pop
or
mov
shlb
es
int3
dec
push
push
out
xchg
inc
stos
jne
cmp
call
in
jnp
in
lock
inc
or
inc
je
pop
add
dec
and
dec
loopne
inc
inc
or
call
pop
jge
add
aad
and
inc
jl
mov
pop
test
cld
add
das
repnz
jne
scas
popa
inc
je
nop
sub
push
add
stc
lods
clc
cwtl
push
adc
push
pop
xor
add
dec
mov
mov
dec
test
add
jae
or
jne
bound
add
lods
push
fnstenv
add
notb
xchg
je
xchg
add
dec
pop
es
mov
or
into
or
add
pop
mov
fidivrs
add
pop
jbe
add
enter
dec
pushl
jne
cmp
cmpb
xchg
push
sub
mov
adc
jbe
sub
lret
push
xchg
jae
add
push
ja
pop
mov
push
aam
arpl
or
jbe
add
mov
mov
cmp
out
dec
jo
add
xor
test
mov
add
jl
inc
cltd
sub
leave
movsb
adcb
jne
hlt
push
lods
sub
xchg
add
xchg
push
jle
icebp
add
jb
xor
bound
mov
cltd
cmpsb
add
loop
push
inc
das
xchg
jnp
jg
ret
push
and
cmp
cmp
cmpb
mov
mov
fisttpl
mov
fldl2t
cmp
andb
inc
in
incl
sub
inc
je
jle
addr16
mov
mov
inc
push
int3
jmp
cmp
jge
fdivrs
add
inc
push
stos
push
mov
or
bt
and
and
dec
add
sub
dec
adc
cld
scas
sbb
sbb
test
sub
and
xor
push
dec
xchg
jns
aam
js
jmp
xlat
or
fisubl
fs
adc
mov
and
popf
dec
nop
xor
mov
add
add
pop
aaa
cmp
shlb
test
mov
xchg
scas
add
test
add
aaa
shrb
addr16
es
sub
or
sbb
add
je
jno
mov
add
clc
mov
into
and
add
pop
sub
add
les
aas
cmc
fiaddl
testl
and
mov
jo
or
sbb
or
sbb
adc
out
std
daa
mov
loope
inc
mov
adc
and
mov
adc
inc
pop
add
sti
aas
clc
or
sub
popf
xor
mov
pop
inc
add
je
rolb
and
repz
adc
xchg
add
int3
jp
mov
ret
cmp
sub
adc
lods
sbb
add
mov
pop
add
add
add
aad
shlb
es
popf
mov
xchg
inc
std
sahf
in
push
xchg
hlt
dec
pusha
lock
add
mov
or
packuswb
mov
es
add
inc
hlt
adc
add
or
hlt
mov
add
lea
push
push
stos
testb
add
arpl
mov
cvtpi2ps
imul
out
clc
lea
dec
and
call
add
sbbb
ret
jp
icebp
les
xchg
add
aam
jle
movsb
and
adc
and
add
lds
push
outsb
inc
shrl
out
dec
mov
int3
xor
jmp
fisttpll
push
sbb
addb
xchg
jnp
sub
add
or
add
cld
imul
sahf
fistl
jmp
pop
jle
pop
in
add
xorb
mov
loop
mov
jp
shrd
adc
mov
push
mov
cmpsl
cwtl
add
js
sbb
in
push
data16
lea
push
push
or
add
arpl
or
cwtl
push
xor
push
call
nop
aas
cmp
push
jg
add
mov
adc
adc
push
sbbb
jmp
and
cld
mov
std
add
or
pop
cmp
insb
add
pop
clc
bound
jge
add
push
repnz
rclb
add
rorb
je
push
mov
ljmp
and
and
cld
mov
add
in
lcall
jge
add
lret
push
jmp
fistps
sahf
xor
paddb
iret
bound
adc
add
add
shrl
mov
mov
add
or
jbe
cli
loope
pop
divb
push
lock
inc
hlt
add
xchg
subb
push
loopne
loop
sub
add
xchg
int
add
es
fldenv
xchg
add
jmp
and
dec
mov
mov
roll
jo
stos
mov
xchg
cli
add
or
pop
sub
mov
xchg
lcall
enter
add
loopne
addl
xchg
lret
test
ljmp
and
add
jl
mov
mov
aaa
adc
xor
sub
and
das
adc
sbb
add
int
nop
push
add
pop
or
or
or
push
test
call
add
imul
nop
add
dec
enter
lock
add
lods
fs
test
mov
test
mov
add
adc
and
movsl
xor
sbb
bound
pop
lock
add
loope
or
pop
in
jge
lock
mov
pop
sub
pop
cmpsb
in
and
pmuludq
data16
mov
xchg
lea
mov
add
cwtl
popa
add
cmp
add
push
dec
mov
les
jne
pusha
dec
clc
adc
pop
rorb
fs
mov
add
les
and
add
mov
pop
xchg
fs
add
cwtl
adc
fmuls
aas
mov
and
inc
nop
and
call
mov
adcb
add
mov
add
push
dec
inc
add
xlat
imul
xchg
cld
cmp
rolb
push
add
pop
lret
or
and
cmpl
pop
rol
push
add
cmp
pop
outsl
mov
xor
mov
cmp
add
or
jge
xor
movsl
loopne
adc
xchg
mov
push
inc
data16
lock
leave
sbb
int
add
call
add
hlt
jnp
and
sub
aam
lea
test
pop
lahf
bound
mov
inc
test
mov
and
std
je
jg
add
dec
xchg
mov
inc
or
cmp
sbb
and
jg
in
lock
cmpb
cmp
fs
fnsave
stc
jg
out
mov
or
push
add
jmp
mov
pop
cld
sbb
sbbb
cmp
loopne
cld
pushf
add
and
inc
in
jl
sbb
pop
hlt
sbb
insb
decl
sub
xchg
mov
and
or
frstor
inc
loope
in
aam
add
repnz
mov
push
adc
jo
mov
outsb
mov
mov
xor
xchg
idivw
jp
pusha
jle
mov
adc
pop
lcall
cld
mov
testl
idivb
or
add
and
jb
sub
inc
sub
into
add
addl
leave
incb
add
mov
add
adc
push
cmp
iret
mov
add
je
fs
and
jp
add
outsb
ja
dec
pop
push
add
jns
nop
xor
push
add
pop
push
adc
subb
add
add
dec
add
pushf
mov
xor
xchg
cmp
fiaddl
scas
xor
clc
add
lds
test
in
cwtl
sub
jb
add
mov
mov
add
lds
mov
cmp
lea
add
lods
xor
add
cmp
inc
sub
std
inc
add
test
cwtl
lea
jge
cs
add
incl
add
jnp
fidivrl
add
shr
dec
push
push
add
daa
xchg
jg
jo
push
jns
and
add
push
inc
push
subl
mov
sub
pop
inc
add
fdivs
push
inc
js
cwtl
dec
stos
aaa
pop
dec
xor
lret
jne
subl
xchg
or
mov
add
int3
inc
stos
add
pop
push
lods
out
imul
push
mov
in
sti
xchg
push
call
scas
in
mov
pop
dec
mov
movl
push
add
or
sbb
and
xor
out
shl
add
bound
jnp
sbb
mov
adc
add
adc
add
dec
int
jno
mov
sub
push
nopl
sub
mov
mov
cmc
push
fdiv
movsl
add
xor
xor
fmuls
das
mov
cmc
and
adc
pop
add
icebp
pop
in
sbb
mov
sub
add
and
and
jl
push
mov
xchg
push
push
insl
fadd
xor
inc
sub
fcoml
enter
and
loopne
fucomip
or
fmul
hlt
cmpsb
leave
push
enter
jne
add
mov
xchg
mov
arpl
pop
push
les
outsb
std
sbb
mov
hlt
inc
mov
test
popa
add
cld
rolb
test
cld
mov
mov
adc
aas
mov
stc
or
mov
add
stos
gs
add
xchg
outsb
cli
pop
dec
and
xor
mov
mov
cld
cmp
add
and
mov
and
xchg
or
jo
push
dec
push
mov
nopl
xlat
add
xchg
dec
mov
mov
mov
dec
adcb
and
cmc
inc
lock
add
inc
les
cmpsl
loope
jmp
rclb
leave
rorb
jo
add
push
call
cmp
push
pop
or
inc
adc
jl
add
jae
inc
jb
mov
add
arpl
inc
js
inc
pop
mov
jo
mov
pop
add
adc
add
inc
fcoml
adc
pop
outsb
in
mov
nop
xchg
rcrb
cwtl
inc
or
mov
xchg
cmp
inc
andb
fdivl
pshufw
inc
add
rclb
data16
add
inc
push
je
dec
out
push
xor
dec
adc
xor
add
and
or
dec
push
mov
adc
pop
push
cwtl
js
add
and
test
cld
sub
clc
bound
xor
sub
sub
sbb
adc
insb
and
cmpsb
xlat
push
aam
mov
jecxz
and
enter
les
adcb
ds
mov
mov
mov
inc
or
mov
jb
and
movsb
mov
lahf
push
lahf
pushf
lahf
test
xor
hlt
shl
jb
out
jbe
je
jge
xor
test
cmp
inc
dec
jl
adc
xor
add
xchg
mov
insb
push
mov
cmp
push
fsubs
sti
dec
jmp
adcb
lock
xor
dec
sbb
or
adc
or
or
rdpmc
jl
inc
xchg
loopne
pusha
aas
add
dec
dec
jb
je
mov
sbb
test
inc
push
cld
mov
add
push
or
add
sarb
dec
mov
or
in
adcb
or
mov
sub
sbbl
sub
jg
xor
add
enter
xlat
ljmp
inc
xchg
add
sbb
lea
pop
out
mov
adc
sti
add
add
add
or
mov
mov
add
or
add
mov
stc
mov
push
xlat
inc
dec
arpl
imul
or
shlb
mov
adc
mov
xorb
sub
insl
cwtl
dec
xchg
in
add
inc
or
pop
cmp
mov
leave
sub
dec
stos
xor
mov
neg
and
sahf
clc
ret
mov
xchg
je
sbb
loop
or
and
stos
push
xor
div
sldt
xor
pop
and
popf
pop
or
mov
rorb
add
or
ljmp
inc
add
add
stos
or
xchg
in
rcr
adc
nop
jge
cmpsl
push
neg
mov
mov
add
stos
js
add
xor
hlt
mov
inc
add
in
mov
add
pop
stos
cmp
pop
adc
jo
sub
mov
int
mulb
fistl
roll
rorl
div
inc
faddl
add
jne
hlt
add
jmp
test
jmp
or
dec
loopne
inc
or
sub
les
es
dec
push
push
int3
or
inc
test
nop
cmp
jbe
add
cmp
add
xlat
cmovo
push
push
push
fldenv
inc
jmp
add
mov
pop
add
dec
fsubrl
add
add
add
add
ret
and
inc
add
add
jp
outsl
and
frstor
sub
sub
sub
add
fimull
lea
cmp
cs
insl
sbb
and
adc
xor
jne
sub
xor
gs
mov
pushf
cwtl
imul
mov
jmp
pop
scas
aas
adc
iret
push
dec
add
outsl
lea
add
jg
pushf
mov
sub
rcll
mov
xchg
add
fildll
pushw
cmc
mov
cmp
rorl
jne
fadds
push
push
jle
test
dec
cmp
gs
cld
jmp
jmp
xor
ret
or
jno
cwtl
mov
jg
jne
push
add
jl
dec
sti
shll
jecxz
sbb
and
and
and
lcall
loop
in
mov
enter
or
add
shrb
sbb
sub
out
lret
test
mov
popa
movw
or
mov
add
hlt
ret
mov
jb
jns
jnp
add
das
mov
shll
popf
cmp
xchg
xor
add
jmp
jae
mov
pop
add
clc
push
cmp
repz
add
push
test
mov
inc
popf
mov
dec
jno
add
dec
xchg
sub
imul
jmp
int3
pop
in
imul
sbb
subb
adc
scas
jge
sbb
pusha
aad
movsb
or
adc
pop
inc
mov
add
adc
cmp
and
ds
push
xor
je
push
fmul
sbb
pop
add
inc
arpl
add
mov
clc
xchg
push
into
daa
pop
push
inc
push
pop
sbb
push
pop
adc
add
call
mov
sbb
decb
add
sub
ja
add
mov
adc
int
jp
add
lods
add
iret
test
clc
add
jmp
movsb
gs
or
mov
sbb
add
decl
jne
add
or
push
flds
in
adc
inc
pusha
add
inc
xchg
pop
sub
dec
in
push
loopne
xor
add
or
outsl
push
les
sahf
mov
inc
mov
lss
shrl
add
roll
enter
mov
stc
xchg
add
fsubr
sbbb
lcall
dec
lea
mov
pusha
and
pop
add
adc
inc
push
dec
add
or
mov
sbb
sbb
jecxz
fldt
adc
sub
sarb
in
xchg
mov
inc
leave
rolb
sub
adc
add
and
cmp
test
cmp
int
or
clc
filds
sarl
fwait
mov
sbb
je
clc
out
add
pop
data16
push
loop
add
adc
shrb
orb
cld
add
mov
cmp
or
daa
cmpb
cld
and
push
add
or
add
cmp
jmp
data16
es
sbb
xchg
xor
sbb
or
push
aaa
add
jae
ljmp
add
ret
sub
out
mov
push
cs
enter
je
cld
dec
jns
adc
mov
repz
shl
cmpsb
add
or
pop
mov
sub
sbb
loopne
jae
dec
add
ja
xchg
add
add
mov
ret
fidivrl
add
fwait
xchg
add
adc
mov
pcmpeqd
push
pusha
les
jne
mov
jmp
ret
mov
add
xor
inc
jb
add
lea
rclb
add
mov
shl
cmp
pop
jmp
pusha
jno
add
inc
incl
mov
fwait
daa
jge
xchg
loop
subb
call
addb
ret
lds
add
mov
scas
xchg
add
cmp
inc
add
pop
cmp
je
add
and
ret
aam
inc
push
xor
xchg
sub
add
stos
inc
jo
xchg
js
cmp
lahf
cwtl
adc
test
dec
stc
aam
nop
jns
fchs
add
add
cmp
fstpt
fwait
sub
rorb
cwtl
sahf
pop
mov
adc
mov
nop
insb
test
lods
cs
roll
lret
les
rorb
rcr
cltd
sub
jl
add
loope
ljmp
lret
jne
mov
add
nop
addl
sub
sbb
push
cld
cmp
cmc
pop
cmpsl
movsb
jle
xchg
mov
hlt
push
add
jne
add
test
call
aas
js
add
and
add
adc
ja
lret
shll
nop
or
add
xchg
xchg
aas
add
mov
ja
add
sub
nop
movsl
adc
inc
add
or
adc
cmp
dec
js
add
add
cld
nop
jle
adc
mov
push
and
and
unpcklps
dec
xchg
ret
sarb
inc
jae
adc
jmp
and
mov
adc
leave
pop
lret
jo
xchg
sbb
mov
aaa
add
jno
or
jne
pushl
pop
ret
js
or
and
mov
xchg
loopne
add
inc
xchg
mov
adc
aam
test
xchg
mov
lcall
add
movsl
dec
hlt
xor
not
lock
sbb
or
jae
add
inc
push
jno
fucomi
mov
cmp
popa
sub
cmpsl
pop
add
lahf
pop
cmpsb
xchg
lock
cwtl
filds
lea
mov
mov
out
add
out
dec
mov
pop
add
or
fs
sub
roll
pop
in
jae
outsl
cli
or
out
mov
mov
clc
cmp
add
ja
xchg
push
adc
inc
je
lahf
add
mov
call
add
xor
jmp
and
jb
sahf
pop
pop
inc
adc
add
add
popf
mov
jle
add
mov
xlat
or
pop
adc
test
in
subl
push
mov
adc
incb
xchg
repnz
pop
psrlw
push
cltd
adc
add
or
cmova
xchg
mov
xchg
mov
jl
pop
ljmp
mov
rorl
rol
add
mov
testb
inc
inc
add
pop
daa
jo
call
mov
add
lret
pop
enter
and
and
add
xor
lock
pop
inc
test
fnstcw
in
add
das
add
sbb
in
fsubr
fldl
xchg
inc
sbb
mov
add
sub
jl
add
frstor
jl
jbe
mov
pop
jge
cltd
nop
push
jle
add
ljmp
fxch
adc
movsl
add
pop
or
sbb
mov
testl
sbb
sub
rcrb
cs
adc
arpl
push
and
pop
add
loopne
jne
lock
movzbl
jmp
imul
add
bound
call
cltd
dec
in
add
xchg
pop
xchg
xor
cmp
pop
mov
add
inc
aam
lock
cmpb
movsl
mov
push
mov
std
rcr
fisubrs
lret
scas
push
jge
xchg
add
je
call
add
hlt
mov
jle
jmp
cmp
loop
enter
mov
dec
inc
inc
push
jnp
add
cmpl
rcr
fldl
mov
and
dec
or
pop
add
call
repnz
inc
fs
jl
es
pop
sbb
adc
push
push
mov
arpl
or
push
inc
in
or
aaa
sbb
mov
divb
add
in
dec
add
dec
xlat
out
adc
clc
nop
push
out
xor
sub
ljmp
decl
or
mov
fiaddl
sub
sahf
pop
loopne
fwait
inc
mov
add
mov
dec
fs
fldl
jne
lahf
in
xchg
add
add
subb
in
pop
mov
ret
sub
sbb
ss
inc
xchg
add
xchg
addb
add
aaa
adc
call
and
fldt
add
test
cmp
add
sahf
sbb
pusha
call
push
inc
lahf
pusha
filds
mov
adc
mov
mov
jge
je
add
out
or
cld
sahf
incl
aad
shlb
mov
les
inc
rorb
rcl
pop
pop
and
jbe
add
das
rolb
xor
rcrl
mov
mov
inc
add
mov
add
jbe
sub
scas
fs
or
cmp
ja
xchg
push
call
scas
out
sub
xor
sub
in
fucomip
xor
xchg
gs
pop
pop
push
fidivs
sahf
je
push
adc
jge
in
mov
sub
paddb
xor
mov
sarb
lods
xor
cmp
add
aas
arpl
repnz
data16
jmp
push
fdivs
orl
scas
repz
add
xor
in
ja
or
aad
not
aam
pop
rolb
push
shr
stos
ret
push
imul
int3
in
add
mov
fisubrl
sub
jle
pop
add
lods
dec
dec
pop
mov
add
mov
sbb
fbld
sbb
sarl
add
xchg
add
add
push
add
add
cld
call
dec
cmp
and
and
out
aam
incb
add
mov
mov
popf
movb
verr
cmp
or
dec
inc
enter
sbb
push
lahf
test
aas
lods
push
mov
mov
add
jmp
inc
add
adc
icebp
fld
add
lods
push
in
fisttps
xchg
out
push
test
roll
add
incl
cli
push
jmp
add
add
shl
add
add
or
jecxz
or
pop
les
movsl
stos
add
mov
loope
cmp
sub
and
daa
pop
pop
cltd
pop
add
cmp
mov
or
mov
mov
mov
xor
push
nop
push
add
mov
dec
andps
daa
je
jns
and
mov
xchg
das
add
into
cmp
pop
mov
mov
xor
stos
lahf
sbb
test
movsb
adc
mov
ret
call
sub
js
lods
lret
outsl
add
push
pushf
pop
add
xor
push
add
pop
mov
push
pushf
add
xchg
loop
repnz
mov
xchg
sub
orl
jne
push
add
mov
pop
dec
add
mov
ficomps
sub
icebp
add
or
sbb
add
mov
cmp
mov
decb
popa
xor
xchg
add
rcl
rcll
mov
loopne
adc
std
les
and
lret
repnz
addl
and
stos
mov
mov
mov
xchg
cwtl
stos
and
ret
nop
add
mov
pusha
mov
pop
mov
in
jmp
out
add
aad
sub
or
enter
dec
leave
in
int3
push
adc
sub
sub
mov
sbb
dec
sbbb
mov
add
stos
sub
enter
push
call
pop
inc
push
push
inc
fmuls
sbb
jmp
add
xor
pop
mov
aas
ret
push
xor
xchg
inc
add
testl
fcomps
xorb
mov
mov
lock
xchg
aam
adc
movsb
sti
pop
or
push
adc
add
jbe
stc
out
ret
arpl
imull
jnp
in
or
test
add
mov
lods
add
mov
mov
sbb
xchg
and
rclb
add
cli
xchg
loopne
testl
addr16
fwait
lock
inc
jae
fmull
sub
loopne
cs
mov
mov
inc
sub
cld
popf
jae
sbb
test
test
add
jecxz
push
insl
sbb
sbb
add
lock
push
test
add
fs
or
mov
flds
xchg
pop
test
out
lock
add
push
fiaddl
adc
mov
lods
add
jp
in
dec
pop
xor
xchg
loope
push
adc
or
add
mov
and
adc
lahf
add
mov
movsl
or
xchg
daa
sti
xor
out
inc
mov
add
loope
loopne
addb
movsl
mov
rolb
jae
add
sti
into
jns
testl
test
aam
das
add
jo
and
popa
aam
add
inc
test
hlt
adc
leave
jbe
test
cmpsb
dec
roll
outsb
jmp
lea
inc
incb
cmpsl
movups
loop
cmp
jg
inc
ret
shrb
popf
mov
in
insb
outsb
notl
and
add
sbb
xchg
icebp
not
fcoms
cmpsl
in
push
mov
test
scas
jno
mov
movsb
ljmp
jne
aam
lcall
pusha
mov
mov
jecxz
sub
cmpps
pop
outsb
push
jb,pn
xlat
mov
inc
jo
pop
push
dec
jns
xchg
push
imul
adc
mov
loopne
mov
test
sub
add
mov
lea
jbe
or
pop
notb
mov
and
jnp
fwait
add
mov
cmp
jp
sub
mov
dec
inc
pop
ret
movsb
adcb
test
test
pop
sub
shll
jg
dec
add
jne
daa
xchg
sbb
xor
mov
adc
test
jns
cmp
mov
or
adc
pushf
inc
lods
jns
pop
cli
dec
pop
sub
clc
pop
test
test
add
xchg
mov
push
mov
pop
aam
hlt
add
es
test
xor
or
rolb
mov
sub
pushf
xchg
or
add
test
adc
cmp
in
xchg
add
dec
pop
testl
adc
and
ss
es
push
add
nop
cli
push
xchg
jecxz
sub
add
pop
mov
adc
clc
cmpl
push
add
fsub
jae
xchg
add
or
stos
pop
jge
pop
add
into
inc
cmpsl
sbb
add
icebp
cmp
jne
push
add
movsb
cmpsb
sbb
and
xlat
and
inc
lret
dec
mov
mov
mov
imul
sub
or
dec
addr16
cmc
shlb
push
mov
jo
lret
repnz
fwait
push
xor
lret
lcall
pop
pushl
roll
dec
and
add
xor
push
adc
pop
mov
jmp
adc
mov
clc
xor
adc
push
pop
je
test
clc
roll
stos
push
mov
mov
xor
fstl
inc
dec
add
pop
loope
mov
add
and
mov
icebp
jns
inc
push
pop
inc
mov
jmp
jb
je
cmp
outsb
in
jo
jne
adc
mov
orb
dec
cmp
repz
dec
mov
stc
push
push
cmp
pop
inc
into
sub
mov
dec
cmp
xchg
popf
or
pushl
mov
cmp
repz
adc
add
mov
add
add
dec
addb
push
push
dec
push
jmp
roll
add
addl
imul
sbb
add
sbb
jp
add
and
ficomps
out
minps
iret
jmp
push
jne
push
and
inc
insb
pusha
das
iret
cmpsl
movsb
add
sti
ret
jbe
pop
lock
push
sbb
cwtl
fimull
and
and
add
adc
imul
ret
test
ficompl
sub
add
test
push
mov
pop
ret
mov
pop
lds
fmuls
lods
shll
mov
loope
cld
add
enter
les
pushf
jecxz
and
push
add
jge
leave
or
dec
add
xchg
inc
or
add
inc
lock
add
scas
dec
test
loopne
mov
fs
jecxz
iret
adc
test
cmc
mov
cmp
add
push
clc
mov
jns,pn
lock
add
mov
adc
movsl
add
pop
xchg
movsb
add
nop
sbb
push
mov
push
pop
jg
add
scas
or
xchg
sbb
xchg
fdivrs
clc
sbb
fisubrl
inc
mov
call
jae
add
int3
in
xlat
inc
cwtl
outsl
mov
or
add
push
call
mov
dec
les
xchg
test
or
test
push
in
imul
and
jg
mov
jnp
mov
cli
sub
jl
shll
cld
aam
movsb
movsl
repnz
and
push
movhlps
pop
popf
js
push
into
mov
mov
mov
push
jae
push
add
jnp
ret
adc
je
pop
pop
fiaddl
mov
fadds
add
scas
adc
cmp
xor
push
cmpsb
pop
inc
add
es
inc
and
mov
test
test
cwtl
loopne
rorb
aam
pop
jne
aas
push
clc
or
out
test
repnz
testl
adc
adc
add
shr
add
jo
fstpl
test
add
push
dec
aas
addr16
int3
adc
shlb
fbld
jp
ljmp
std
sbb
scas
add
out
rcll
mov
movb
fdivr
sub
scas
push
movsl
mov
pavgb
sub
mov
repnz
rcr
dec
xor
mov
pop
hlt
ret
and
je
js
add
and
fdivrl
dec
add
lea
and
inc
add
mov
push
pop
ret
xchg
icebp
adc
add
push
push
test
mulb
add
jmp
add
sub
xor
jne
lfs
sub
pusha
or
adc
mov
cltd
adc
xlat
jl
adc
jmp
push
popf
add
inc
or
imul
scas
xchg
adc
xor
jecxz
push
jp
xchg
bound
add
ja
mov
cwtl
push
add
movsl
ret
cmpsl
or
add
mov
xor
andb
sub
sbb
add
inc
repz
add
pop
loop
or
add
mov
or
jae
jmp
add
hlt
inc
adc
mov
test
divl
add
xchg
jbe
xchg
mov
inc
shl
pop
lods
cmp
mov
dec
dec
ret
fcmovnu
or
dec
dec
add
sbb
mov
call
xchg
add
sub
add
push
adc
cmp
incb
dec
sbbl
sbb
divb
adc
jbe
and
cmp
mov
ja
test
lds
movsb
fmull
repnz
push
cmp
test
dec
rolb
ret
mov
hlt
clc
and
out
add
or
nop
xor
addb
lock
cld
add
imul
and
lea
inc
cmp
add
and
adc
add
xchg
rolb
mov
jae
pop
mov
movsb
addb
leave
or
nop
jnp
das
sbb
inc
dec
loopne
xor
mov
or
inc
jge
cmpb
mov
push
cltd
out
inc
sub
stos
arpl
xchg
or
sbb
mov
loopne
sahf
je
enter
and
push
sbb
add
notb
sub
cmp
movsl
add
sbb
jae
push
sub
jge
adc
sub
add
and
dec
aas
outsl
push
add
fs
and
sbb
pop
xor
dec
push
mov
inc
imul
adc
xchg
mov
add
and
leave
into
sbb
xlat
cli
mov
cmp
mov
add
adc
dec
jae
icebp
aam
orb
into
sbb
dec
cmc
ret
add
push
push
mov
rcrl
mov
call
flds
xchg
sub
push
add
ret
mov
inc
mov
jne
jo
and
int3
pop
dec
xchg
addr16
ja
fsubrs
push
out
add
xchg
subl
mov
sbb
addr16
mov
testl
pushf
shlb
pop
sub
repz
or
push
push
push
cld
add
pushf
mov
lods
xor
jecxz
jae
xor
add
dec
jne
dec
or
pop
push
call
pop
aad
sti
add
pop
decl
push
cld
pop
js
add
lods
add
insl
pop
add
add
out
push
jg
add
stos
int
add
fdivrl
mov
push
xor
add
add
cmp
cmp
pusha
add
jo
call
clc
cs
push
add
adc
imul
pop
orb
outsb
jmp
add
jae
test
and
test
je
mov
enter
xchg
mov
cmc
aas
pop
sub
mov
push
pop
movb
cmp
add
jbe
add
or
mov
js
icebp
xchg
push
add
push
cmp
lods
int3
cmp
test
xor
add
clc
call
int
cmpsl
jbe
ret
ljmp
dec
inc
pop
jle
push
add
rolb
inc
add
not
and
fyl2xp1
pusha
loop
in
add
push
mov
pop
stos
ret
jmp
add
add
call
icebp
mov
popf
add
cmp
sbb
dec
cmp
orl
repz
add
dec
lret
cmpl
mov
jne
sbb
fdivrp
ret
xchg
push
pusha
adc
jl
nop
adc
sub
sbb
inc
pusha
shl
outsl
inc
sbb
add
inc
xor
repnz
repnz
add
cwtl
test
xchg
imul
pop
mov
shrb
mov
jmp
fldcw
mov
mov
add
imul
add
std
fnstcw
loopne
cmp
push
cmpsb
mov
pop
orb
dec
xchg
add
divb
lret
cli
outsl
les
lsl
xchg
lahf
lahf
mov
stc
mov
or
sub
push
push
pop
sub
cmpsl
push
inc
sti
push
cmp
ret
mov
cmp
pushf
add
outsl
shlb
add
push
mov
and
add
cmp
mov
mov
out
cwtl
sti
shl
push
dec
push
xchg
outsl
add
and
pop
aaa
int3
pop
or
rorb
add
inc
add
inc
push
push
mov
clc
mov
push
cld
outsl
repnz
push
flds
fidivs
pop
dec
sub
inc
cmp
jge
rdpmc
icebp
leave
repz
add
sahf
and
divb
push
sub
lock
mov
and
aas
insl
sbb
xchg
repnz
fdivrs
pop
or
inc
in
push
xor
adc
mov
pop
and
dec
pop
mov
divb
jo
fldl
mov
sbbb
inc
push
fsubl
or
daa
push
mov
test
out
inc
aam
enter
sbb
nop
jecxz
cmp
loop
push
mov
out
pop
and
ja
outsb
add
lods
inc
les
xlat
add
inc
and
popa
fiaddl
or
add
pop
inc
push
and
add
or
or
cmpsl
jp
add
mov
inc
cs
wrmsr
cmp
cmp
mov
pop
sub
out
add
pop
pop
gs
jne
push
inc
mov
add
out
incl
shll
add
jl
cmp
and
and
pop
sbb
adc
inc
add
mov
andb
pusha
add
cmpb
testl
cmp
mov
cwtl
mov
andb
roll
xchg
pop
push
pop
addb
aad
pop
dec
or
push
or
mov
sbb
out
xchg
pop
add
popa
push
addb
aas
xor
repnz
sub
sbb
add
mov
ror
roll
inc
inc
inc
inc
dec
dec
loopne
add
dec
dec
dec
push
push
pusha
cld
push
add
push
pop
pop
sbbb
pop
arpl
add
push
adc
add
jo
jb
je
jne
ja
js
jp
xor
push
xor
cmp
sub
cmp
sub
pop
pop
jnp
subb
add
or
enter
stc
enter
addr16
mov
push
call
loop
add
xor
mov
pop
pusha
rolb
movlps
cld
loope
adc
add
fimull
cmp
jle
shll
adc
in
add
loopne
mov
outsb
push
adc
out
ret
repnz
push
vmwrite
cmp
in
xor
js
adc
pop
pusha
ljmp
dec
add
jns
dec
add
ficoms
add
xorb
inc
pop
in
movsl
xor
daa
pop
xchg
cmp
insb
jbe
mov
sub
mov
fmull
mov
out
mov
mov
or
add
inc
add
jmp
inc
ror
sbb
push
sbb
shr
ret
add
jge
lods
add
outsb
mov
fwait
add
jecxz
push
and
pop
jg
xchg
out
fucompp
pop
andb
movsb
push
sub
add
test
mov
add
push
mov
and
mov
jg
cmp
lcall
loopne
mov
sub
mov
sbb
ss
movsl
add
push
lock
jo
test
test
fimuls
rcl
dec
add
loop
xchg
sbb
add
roll
dec
jne
aam
mov
cmp
orb
cmc
add
and
aad
xchg
and
shr
add
nop
jg
or
stos
cmp
lahf
cmpxchg
and
push
pop
pop
cmp
add
adc
sub
or
lods
and
hlt
sbb
lds
cmp
stos
sub
in
ja
insb
cmpsb
inc
daa
lds
push
add
inc
fisttpl
adc
inc
lea
dec
arpl
pop
pop
or
fnstcw
std
scas
xor
jmp
adcb
mov
add
sbb
dec
and
add
fistps
add
adc
dec
and
add
int3
aas
loopne
fsubr
inc
pop
add
adc
xchg
add
jne
rorl
mov
mov
mov
push
or
dec
fwait
pop
loope
xor
loopne
or
out
lds
enter
lods
add
dec
in
mov
and
test
insb
inc
cmp
mov
push
adc
insl
movsb
add
cmp
add
or
xchg
ds
pop
add
xor
sub
mov
roll
dec
cmp
ds
adc
add
loopne
roll
incl
je
shl
jb
push
call
mul
add
ficompl
jae
push
add
andl
xor
shl
sub
dec
std
repz
cld
jne
pop
push
orl
pop
stos
pop
daa
mov
push
or
ljmp
cmc
pusha
cli
cmp
rep
add
dec
sbb
add
divl
mov
inc
imul
add
out
push
pop
sbb
dec
mov
push
movsl
imul
cmpsl
push
insl
mov
mov
mov
jb
pop
mov
call
add
or
loop
cmc
je
add
cwtl
xchg
xchg
sub
ja
rcll
add
jmp
dec
adc
add
pop
mov
xor
sbb
es
mov
in
mov
push
adc
mov
mov
movsl
lock
es
pop
add
jmp
test
inc
scas
add
ja
adc
add
in
lcall
sub
mov
push
mul
add
jno
shlb
std
inc
xor
add
loop
inc
sub
adc
jb
add
mov
addl
inc
adc
cltd
push
or
add
cwtl
shld
sbb
cmpb
popa
mov
loop
xor
adc
push
mov
fcomip
aaa
in
out
pushl
xchg
cmp
and
add
ds
cld
fnstenv
adc
insb
sbb
scas
test
add
cld
ja
sub
clc
loope
mov
xor
ljmp
sbb
ret
xor
add
add
or
push
jge
dec
stc
add
or
add
push
jg
xchg
nop
xchg
push
mov
cwtl
or
ljmp
add
cli
pushf
jp
add
fstpl
dec
adc
add
int3
push
mov
nop
add
or
cmpb
sub
push
add
mov
add
xor
addr16
mov
dec
inc
shlb
push
inc
stos
cmp
inc
dec
fs
sti
cmp
pop
inc
push
call
jbe
jb
jge
add
xor
aas
mov
xor
sbb
adc
cld
sbb
nop
push
clc
add
xor
dec
sbb
cmp
push
jne
test
jbe
and
add
out
or
adc
pusha
loopne
push
inc
nop
mov
push
sub
ja
ret
jp
jg
add
notb
add
mov
lret
xchg
in
js
add
cwtl
mov
popf
add
or
push
movl
mov
xor
cmpsl
and
int3
jnp
lea
mov
dec
lcall
inc
andl
loopne
pop
mov
mov
or
xchg
add
data16
mov
add
ret
xchg
adc
xor
out
push
lock
mov
xor
inc
fidivl
adc
push
xor
sub
call
lock
icebp
xor
and
pusha
loopne
xor
pop
add
bnd
sub
pop
push
jmp
push
inc
xchg
inc
sbb
adc
cmpb
xlat
mov
xchg
xchg
sbbb
getsec
add
mov
mov
jns
push
call
sbb
sub
push
jp
dec
add
mul
jo
mov
push
mov
inc
cmpsl
inc
jg
jmp
jo
add
push
mov
mov
inc
cmp
push
sahf
push
iret
push
call
stos
add
dec
jbe
sub
add
mov
shr
and
lock
push
out
adc
push
loop
test
pop
xchg
add
inc
adc
dec
mov
adcb
cmp
les
aam
inc
pop
dec
inc
fwait
xor
cmc
rorb
je
or
lods
mov
sub
pop
dec
xor
ds
jp
push
jns
add
aad
sub
imul
pop
das
sbb
mov
inc
push
loopne
mov
push
mov
add
inc
sub
sub
inc
shrl
xchg
or
mov
movb
cwtl
sahf
shll
addb
es
ja
mov
ret
lahf
mov
pop
mov
sti
pop
sbb
ret
mov
add
xlat
test
cmpb
adc
call
popf
add
int3
pop
fwait
ljmp
and
nop
sar
aam
and
mov
stos
jb
aas
mov
sbbb
xchg
jp
xchg
fadds
dec
cmp
push
mov
dec
gs
scas
das
inc
push
or
sub
lret
push
add
jb
fwait
mov
jo
mov
insl
and
je
push
sub
test
into
mov
out
add
in
push
nop
add
enter
inc
cld
call
mov
or
push
lahf
mov
subb
mov
sub
pop
inc
jg
or
sub
leave
cs
push
add
gs
xlat
rol
pop
add
roll
loop
xor
push
enter
and
add
test
jae
pop
xchg
add
test
lcall
xchg
cmp
lock
iret
mov
pop
shlb
add
rolb
andb
inc
mov
adc
jo
cld
inc
xchg
loope
fnstcw
roll
and
sbb
nop
push
xor
rolb
sub
jmp
adc
movsb
fcmovb
xor
push
dec
add
adc
xor
cld
push
add
les
orb
adc
stc
or
mov
enter
jcxz
sbb
call
add
mov
xchg
add
ret
mov
mov
dec
jne
pop
fidivrs
inc
adc
xor
cmc
add
fs
in
imul
dec
popf
jb
mov
mov
jbe
add
cli
rol
lcall
push
roll
add
out
xor
in
mov
xor
lahf
dec
out
fisubl
into
pop
dec
xor
add
pop
dec
test
and
push
cld
and
sbb
sub
mov
jl
inc
stc
shl
vphsubdq
push
mov
sti
and
cwtl
and
or
add
cmp
movsl
movl
icebp
jmp
cmp
pusha
outsl
insb
in
in
jae
or
xchg
pop
add
out
adc
sbb
outsl
and
lods
jmp
add
sahf
mov
inc
mov
mov
aaa
cmp
add
bound
pop
xor
push
jo
mov
sbb
lea
cmp
and
lret
add
mov
mov
in
adc
int
sub
and
roll
cwtl
rolb
xor
popa
bound
lcall
mov
nop
sbb
or
cmp
fld1
cmpsl
scas
or
std
sbb
lods
mov
sub
add
cmc
pop
jg
test
shrl
int
lock
sub
in
xchg
jmp
ss
add
jmp
sub
xchg
and
bound
sub
cltd
mov
and
adc
push
das
subb
lods
bound
push
les
scas
push
popa
pop
mov
and
and
mov
lds
xor
adc
cwtl
mov
add
shl
add
or
sbb
sub
inc
inc
xor
pop
inc
mov
outsl
scas
lock
and
add
lods
stos
lea
add
shll
adc
inc
adc
cmp
flds
add
xchg
cltd
and
inc
shrb
sub
mov
add
imul
push
and
sbb
add
mov
or
imul
add
or
and
mov
inc
out
fdiv
sbb
add
inc
mov
cmp
hlt
and
add
lds
xchg
or
js
inc
xchg
mov
lahf
ljmp
mov
sub
outsl
fbld
movb
rcll
adc
xor
push
in
push
test
rol
jl
xchg
dec
mov
cmp
dec
dec
inc
push
pop
dec
or
cmp
adcb
mov
adc
pop
hlt
in
rclb
xor
add
decb
jmp
or
xchg
push
push
push
add
rol
push
sbbl
cwtl
mov
lock
add
inc
and
loopne
add
push
sub
xchg
add
push
xchg
lea
lret
cmp
sbb
add
addb
sarb
stos
add
mov
leave
pop
ret
call
push
rcrb
adcl
dec
fdivs
imul
ds
and
test
imul
movsl
mull
inc
add
sub
in
outsb
add
in
jp
sbbl
je
std
cmp
jge
adc
movsl
inc
jb
out
jmp
dec
test
push
add
xor
fistpll
sub
clc
or
add
cmc
adc
inc
jl
mov
add
add
jge
lea
lds
push
push
xor
notl
and
cmpl
add
nop
cmc
cmp
loope
hlt
jne
add
cmpsb
dec
push
pop
or
adc
out
sbb
push
dec
les
or
ds
jle
stos
movsl
jns
ds
enter
call
pop
add
pop
mov
mov
mov
add
or
adc
adc
and
test
inc
mov
pop
mov
iret
cltd
dec
add
inc
sbb
pop
enter
cmc
mov
lret
jns
fsubrl
shrl
inc
out
add
pop
scas
pusha
dec
jle
mov
cmp
mov
rclb
loop
ret
inc
jmp
push
leave
sbb
mov
mov
or
push
inc
fwait
xor
push
int3
sub
xchg
lret
mov
cmp
leave
rcll
fcompl
xor
adc
in
mov
sbb
add
loop
add
xor
mov
sub
sbb
adcb
jmp
xlat
sub
dec
or
mov
xchg
add
jmp
cmovl
lret
nop
push
and
cmpsb
push
cwtl
movsl
jp
leave
out
subb
add
sti
inc
adc
movsl
mov
cmpsb
sbb
mov
sub
je
add
rclb
pop
sub
mov
rcl
or
and
call
nop
shlb
inc
add
mov
dec
rorb
push
les
jb
jo
and
lret
pop
push
or
pop
sbb
add
inc
jmp
arpl
test
and
call
nop
inc
jge
mov
add
push
xlat
ficoml
int3
mov
call
push
mov
sbb
nop
xor
dec
dec
or
cmp
pop
inc
adc
ljmp
cmp
mov
stos
rclb
movl
fisubrl
jb
pop
adc
mov
rorb
mov
push
call
mov
add
iret
mov
xchg
adcb
mov
push
fldt
adc
adc
push
inc
cmc
mov
mov
sub
dec
loop
js
test
int
and
es
add
inc
mov
mov
adc
jle
xor
sbb
leave
cmpsl
adc
and
sbb
mov
gs
ds
popa
or
adc
add
sub
jmp
test
or
jo
dec
cmp
out
fs
or
xor
mov
in
add
test
jbe
dec
loopne
testb
sub
add
dec
mov
sbb
rol
in
or
xchg
adc
cwtl
xor
jmp
or
lods
cmp
mov
adc
leave
jbe
xor
add
mov
cmpsl
pop
and
push
and
ds
push
mov
sbb
in
push
mov
loop
iret
inc
test
popa
ja
clc
jge
mov
cmp
leave
insb
add
lods
addb
ja
fs
cmp
xor
mov
mov
or
mov
call
or
cmp
mov
mov
lret
adc
lock
mov
out
add
scas
stc
icebp
xlat
mov
add
clc
outsb
popa
cmpsb
mov
rcl
arpl
add
fdivl
mov
roll
inc
inc
cs
outsl
in
push
add
push
push
pop
idivb
pop
aas
lcall
adc
syscall
xlat
dec
shl
xchg
mov
out
push
mov
clc
push
sub
ret
pop
adc
jmp
testb
ljmp
adc
add
icebp
les
pusha
jae
rcrb
jmp
cmp
cmp
push
or
ljmp
sub
inc
adc
cli
clc
push
ljmp
adc
inc
jnp
jo
sbb
sub
sub
mov
dec
xlat
mov
and
cmp
add
ss
and
and
mov
fsubr
loopne
test
gs
push
add
out
icebp
or
bswap
sub
rclb
cmpb
sub
mov
adc
jge
ds
out
add
mov
add
sbb
cmp
cld
cmp
and
shrl
add
in
xor
push
lods
lahf
add
sub
loope
xchg
stc
adcb
cmpsb
rorl
aam
out
lods
flds
daa
cli
insb
add
dec
xor
push
or
sti
repnz
hlt
movsl
cmpsl
add
jnp
fs
mov
mov
and
add
test
test
add
pop
adc
sbb
and
pop
mov
cmp
pop
or
fsubr
rorb
leave
or
adc
xchg
xor
mov
pop
mov
jae
or
and
xchg
cmc
push
pop
or
mov
movsb
bound
mov
in
loopne
xchg
sti
call
or
std
and
mov
cmp
and
les
sub
or
nop
negb
inc
and
fstpt
add
jmp
sti
add
loop
jno
nop
or
adc
mov
pop
movsb
dec
xchg
roll
bound
adc
add
jns
add
push
psrlq
sbb
test
adc
adc
ja
add
xorb
lods
add
inc
in
cmp
push
iret
incb
push
push
and
cli
scas
decl
adc
add
ret
loop
add
pop
xchg
cli
mov
adc
xchg
fcomip
lret
push
fwait
mov
les
and
fsin
adc
push
aas
incb
sbb
xor
add
jecxz
add
and
push
xor
mov
stc
sub
cmpsb
loopne
or
sbb
repnz
and
add
addr16
sbb
inc
fidivrs
fistpl
add
mov
mov
xor
pop
fdivrl
repnz
jno
cs
jp
aaa
pop
scas
add
push
rcrb
out
cmp
xor
test
and
cmp
pusha
add
ljmp
out
dec
xchg
add
shlb
inc
mov
push
or
fstps
pop
mov
add
sub
stc
nop
xor
cld
jle
inc
jmp
add
mov
icebp
fstpt
cli
movsb
add
adc
jno
inc
xchg
inc
lods
and
push
ljmp
in
add
cmp
push
xchg
inc
ljmp
rolb
mov
fadd
or
push
add
and
outsl
sub
lods
inc
inc
lock
push
mov
or
mov
push
test
and
jp
add
cmp
aas
xor
outsb
xadd
or
add
in
cmp
lret
out
ds
mov
insb
adc
mov
xor
jne
jb
dec
hlt
aaa
adc
inc
in
mov
cwtl
xor
cmp
and
pop
dec
push
push
loopne
xor
dec
decb
insl
add
push
shlb
or
sub
push
lret
dec
in
ss
adc
push
push
cmp
add
mov
cli
dec
divb
test
hlt
rorb
std
add
and
ja
xchg
fnstenv
add
mov
call
adc
sbb
add
adc
mov
hlt
or
pop
cmp
cmp
psubd
test
out
sub
jmp
je
adc
shlb
cld
inc
out
mov
sbb
add
out
aas
sub
stos
fmul
call
mov
sub
out
mov
pop
dec
xor
and
mov
addr16
je
test
or
jmp
mov
xor
enter
add
pop
loopne
sub
das
in
cmp
inc
inc
into
xchg
mov
aas
cmp
add
xor
cmp
pop
lock
pop
call
add
mov
ja
sub
lock
add
inc
std
mov
fdivrs
and
test
lcall
into
xchg
jmp
xor
sar
arpl
hlt
ret
xor
mov
mov
adc
js
icebp
repnz
push
outsb
add
sbb
mov
rorl
in
dec
inc
inc
repnz
sub
sub
aaa
jecxz
ds
xchg
xor
sub
lods
pop
push
pop
inc
sbb
out
lret
fcomi
test
out
hlt
jmp
into
jns
or
and
sub
pop
lds
push
cmc
inc
shlb
mov
pop
pop
lods
in
shrl
hlt
cmp
cwtl
push
cli
xorl
repz
add
pop
add
out
bound
add
adc
add
call
dec
sbb
mov
push
and
adc
out
lret
in
jmp
psubw
mov
add
inc
cmc
icebp
inc
out
sub
inc
adc
cld
jecxz
mov
insl
add
rorb
out
les
cmpsb
ljmp
popa
lret
outsb
je
shl
or
nop
or
or
dec
loopne
pusha
ret
cmp
mov
cmp
sahf
leave
test
mov
dec
xchg
add
adcb
dec
testb
call
nop
arpl
dec
idivl
cmp
pushf
xchg
or
ja
jmp
lea
mov
out
jg
adc
jg
mov
mov
dec
data16
mov
idivb
or
pushf
popa
dec
in
inc
mov
aas
adc
ret
pop
lahf
hlt
ja
jbe
xchg
xor
mov
push
jmp
jl
add
cmp
pop
dec
jnp
sub
sbb
outsl
add
cmpsb
mov
jno
add
sbb
outsl
add
inc
repz
jae
inc
leave
imul
push
mov
cltd
push
add
rcrb
aam
dec
mov
xor
sub
xor
adc
and
outsb
pop
fs
add
and
aas
jnp
adc
jmp
jo
clc
xchg
adc
and
lds
adc
fcompl
or
les
push
pop
push
xchg
mov
xchg
iret
cli
xchg
fcom
in
call
dec
mov
dec
and
add
nop
or
xor
sti
cld
sub
sahf
mov
fs
decl
aas
pop
pusha
shlb
outsl
xchg
pop
cltd
sahf
stos
in
jo
in
popf
xchg
cld
or
jmp
cmpsb
push
loop
testb
out
enter
pusha
xlat
dec
cmc
stc
pop
xchg
cli
add
add
jno
fstps
xchg
jle
cmp
xor
in
xor
cli
stc
mov
xor
fcomi
mov
loope
mov
and
mov
adc
adc
nop
aas
add
or
pop
mov
aam
xlat
jno
xchg
fsts
mov
lds
hlt
and
push
mov
mov
xchg
les
sbb
push
rorb
adc
xadd
or
fcoml
and
fnstsw
js
test
testl
add
push
inc
sub
mov
or
add
adc
cmp
add
adc
xlat
and
sbb
xor
inc
lret
rorb
and
je
inc
ret
dec
enter
std
das
sbb
mov
jo
pop
push
aam
addl
sbb
pushf
or
popa
push
mov
pop
cmpl
jge
dec
mov
ss
inc
daa
push
stc
js
add
icebp
das
bswap
dec
adc
pop
lock
sbbb
cmp
mov
inc
cmp
xor
rolb
xchg
push
and
sbb
movb
sbb
jno
les
adc
je
and
sbb
hlt
mov
test
clc
or
dec
ficoml
sbb
pop
fadds
jbe
dec
pop
test
or
pop
add
and
in
cmovne
stos
lret
addb
repnz
push
cmp
and
pop
xorb
loop
or
and
and
test
or
inc
clc
jo
or
sbb
fiadds
or
inc
loopne
rclb
out
test
out
es
ja
movsb
pusha
adc
lods
push
cmp
out
add
add
sbb
je
mov
adc
mov
repz
jmp
call
test
add
sbb
sbb
adc
js
add
fs
enter
mov
pop
sub
mov
or
pop
fists
inc
testb
dec
xchg
stc
dec
sbb
push
xor
aad
push
and
push
stos
or
push
xor
enter
xor
cmc
xor
pusha
fldl
xchg
test
test
add
jle
and
mov
loop
add
sti
jb
add
js
mov
jne
mov
and
cmp
test
outsl
testb
bound
hlt
jb
in
cld
dec
cli
nop
rcrb
je
xchg
call
pushf
push
mov
movsb
cs
rclb
jmp
in
mov
push
add
add
ljmp
xchg
cmp
scas
outsl
mov
loopne
and
imul
jne,pt
rol
lret
dec
sbb
add
add
add
test
out
mov
sbb
mov
cmp
push
mov
aam
enter
loope
push
inc
int3
lods
incb
call
push
mov
adc
mov
and
cmp
les
insb
sub
xchg
add
test
jmp
adc
cli
int
sbb
in
addb
lock
add
dec
inc
xor
cmp
add
push
repnz
mov
jl
add
mov
mov
mov
js
inc
adcb
sbb
sbb
mov
fldl
cmp
test
push
sub
add
outsb
mov
aad
add
ljmp
icebp
inc
mov
inc
or
add
or
push
add
xlat
inc
sarl
pop
addl
mov
enter
sbb
aam
adc
ud1
xor
sub
rolb
jne
mov
dec
add
and
ja
nop
call
inc
jecxz
dec
inc
aad
mov
clc
in
jecxz
pushf
mov
cmp
rclb
push
insb
add
leave
andl
test
add
push
push
xchg
adc
add
mov
enter
push
fcompl
add
inc
in
push
pop
lods
xor
adc
nop
int3
movsl
add
mov
popf
cwtl
pop
add
add
jbe
dec
or
mov
fs
dec
sub
add
mov
sub
inc
push
cwtl
fs
pop
rolb
jge
inc
add
loopne
stos
add
gs
mov
mov
sbb
jg
cmp
test
cmpb
adc
and
sbb
rcrl
mov
psrad
sub
sbb
or
sbb
add
xchg
add
inc
pusha
sub
add
nop
jno
subb
sub
add
pop
push
nop
add
stos
cli
xor
cmpsb
iret
add
jo
sbb
dec
add
inc
out
dec
shrb
inc
cmp
test
cs
rcl
lret
and
sbb
dec
push
mov
movl
jecxz
add
lret
add
mov
add
and
lock
sarb
xchg
xlat
sub
lcall
mov
pop
or
sti
fists
jne
incl
mov
dec
or
nop
cmp
cmp
adc
jb
or
scas
jne
add
ljmp
repz
pop
pop
std
jecxz
call
add
rcrb
add
lcall
lock
sbb
jne
popf
fdivrs
jmp
add
xor
or
cld
movzbl
fmuls
add
dec
stc
lods
icebp
jne
add
inc
ret
adc
pmullw
mov
pop
cli
ja
push
mov
mov
shlb
sbb
mov
push
jb
imul
or
pop
push
gs
dec
aad
inc
and
enter
clc
sahf
pop
test
mov
stc
xlat
or
xor
cmp
pop
or
je
test
mov
decb
add
push
call
push
pop
cmp
pop
faddl
sub
je
cmp
cmp
jbe
stos
outsl
xor
cmp
cmp
mov
mov
not
dec
cmp
mov
or
fcomp
or
pop
xor
rclb
jge
add
fstps
lods
or
enter
and
mov
push
jnp
jne
ss
cwtl
test
dec
jp
add
cmc
or
add
cmpb
add
pusha
pop
clc
push
pop
mov
sbb
dec
add
out
jne
or
add
nop
push
add
sbb
add
ss
pop
adc
pushf
adcb
jle
cwtl
cli
sub
add
pop
ret
inc
add
icebp
test
nop
mov
sbb
cmp
mov
es
ljmp
pusha
push
mov
ret
lods
mov
out
add
fcoms
add
push
lret
sub
or
mov
push
mov
and
ret
jne
testl
push
icebp
or
out
lock
jmp
pop
and
pop
test
mov
add
popa
pop
sbb
or
add
or
mov
adc
push
icebp
fs
rcl
xor
mov
pop
in
rcrb
add
xor
stos
push
sub
pushf
xchg
or
or
inc
adc
sbb
xchg
leave
mov
sbb
pusha
and
add
std
fldenv
ja
dec
add
insl
inc
mov
add
or
mov
or
add
test
pop
add
cmpb
call
jmp
mov
xor
add
call
or
add
lcall
jp
or
add
jbe
lock
clc
inc
dec
add
cld
push
push
arpl
cmpsb
push
mov
add
push
pop
mov
sbb
or
subl
add
or
movsb
push
rcl
mov
push
stos
adc
and
add
loopne
out
sub
clc
mov
movsb
push
inc
add
call
pop
mov
lods
xchg
pop
add
shll
je,pn
add
jbe
popa
or
add
pop
push
stos
inc
stos
xchg
push
imul
jge
pop
xor
inc
inc
cltd
mov
sbb
mov
jae
nop
cmpl
push
push
adc
mov
stos
fiaddl
and
das
pmuludq
leave
pop
add
pop
jecxz
adc
lea
sbb
scas
orb
movsl
or
mov
lcall
inc
and
jl
cmp
aas
call
push
xor
jmp
enter
pop
adc
add
ret
or
inc
add
sbb
jle
xchg
add
nop
sbbb
dec
add
cs
in
mov
xor
or
std
add
cs
mov
popf
and
mov
and
add
sbb
push
add
xchg
ret
pop
inc
add
mov
repnz
adc
or
mov
cs
gs
push
cmp
scas
test
adc
cs
pop
adc
dec
xchg
push
jno
testl
pop
mov
adcb
add
dec
repnz
incb
add
fwait
dec
push
add
loopne
das
xor
jmp
mov
xchg
addl
rclb
inc
sbb
ret
fdivrs
in
clc
shlb
popa
call
push
sub
mov
orl
add
xchg
scas
add
or
fsubs
xor
stos
ret
add
add
ror
aas
fsub
test
fsubrl
pop
cwtl
es
cmp
pop
and
add
mov
pop
nop
aam
rolb
adc
add
inc
mov
lcall
imul
shlb
rclb
popf
add
sub
cmp
add
or
sbb
sub
pop
movsb
add
dec
shlb
fwait
ds
cmc
add
lods
add
push
add
inc
mov
add
clc
and
data16
pop
jbe
cmovge
stos
inc
addr16
push
adc
data16
nop
or
add
ljmp
or
adc
dec
cltd
ds
std
unpcklps
mov
inc
clc
test
add
ss
cmpsl
inc
mov
xchg
rcrb
out
add
push
pop
enter
jl
jne
add
cmpsb
or
push
fsts
std
and
pop
jecxz
clc
sbbb
or
int3
adc
mov
dec
dec
pop
pushf
xchg
inc
add
cmpsb
call
inc
out
cmp
or
and
je
fcoml
lock
mov
repnz
jo
out
arpl
add
add
pushf
pop
xchg
sti
pop
add
mov
mov
jb
mov
int3
adc
je
adc
cmpsl
clc
push
sbb
lock
xor
es
hlt
jecxz
enter
or
inc
incl
pop
add
sub
add
ret
add
xlat
mov
inc
push
sbb
mov
push
mov
mov
adcb
inc
fisttpl
orb
addr16
test
test
jae
cmc
inc
pop
cmp
pop
sub
pop
stos
outsl
cmpsl
cmp
inc
dec
mov
adc
add
pop
out
rorb
in
int
mov
push
les
and
pushf
popf
mov
cmp
lahf
pop
add
std
pop
pop
cmpb
clc
popf
add
stos
lods
xor
add
sub
adc
and
sbb
sbb
add
xchg
or
adc
in
incb
add
sub
add
add
jecxz
cwtl
cmp
add
rcr
enter
sbb
nop
sbb
or
pusha
addr16
testl
int
sbb
and
repnz
mov
dec
push
xchg
es
imul
sbb
and
test
sub
pop
stos
cmp
mov
inc
mov
xchg
testb
inc
push
push
mov
repz
ror
mov
stc
and
les
push
mov
ds
sub
add
nop
enter
jns
pop
es
jne
std
rcrb
addl
sub
movsl
pop
test
cli
jmp
pop
es
push
jp
ret
mov
mov
cmp
adcl
inc
add
decb
pusha
mov
push
sub
ss
sti
jns
inc
or
daa
dec
add
cmp
inc
fisttpl
ret
popa
and
ret
inc
dec
xor
xchg
pop
add
sub
mov
adc
test
inc
or
jg
insb
push
inc
jmp
and
add
nop
loopne
gs
or
xchg
add
orb
ds
add
lods
daa
add
test
sub
mov
add
mov
movsb
sti
push
test
sub
cmpb
sub
push
pop
xor
jb
add
das
cwtl
icebp
sahf
rclb
dec
xchg
jle
mov
adc
or
jbe
push
adc
sbb
add
sub
inc
or
ret
mov
mov
rolb
cmp
sub
dec
jmp
add
mov
push
ds
les
mov
clc
xchg
repnz
cli
jmp
cld
jbe
int
pop
sbb
add
inc
push
sub
cmpsl
nop
movsb
fcmovne
xchg
add
dec
test
in
sbb
aas
inc
and
mov
sarb
lahf
aam
stc
dec
leave
rcrb
addr16
jbe
add
adc
adc
push
cmp
xchg
add
sahf
notl
push
test
sbb
ss
mov
setle
cs
xor
pop
xchg
test
lods
mov
es
add
in
add
lret
inc
fsubl
sbb
cwtl
pop
sbb
aad
xlat
repnz
xchg
xchg
add
orl
rol
aad
xchg
dec
fisubl
mov
sbb
or
sub
imul
add
shlb
or
inc
pop
xchg
or
in
cmp
test
or
mov
fs
or
inc
inc
pop
popf
stos
imul
jg
pop
sub
push
rclb
gs
repnz
add
pusha
jno
and
arpl
or
ja
push
imulb
repz
add
xor
mov
add
cs
adc
sub
sbb
inc
mov
jns
add
mov
das
add
test
test
cmp
jge
add
aam
mov
and
rcrl
sahf
dec
les
or
or
xor
je
mov
arpl
mov
andb
adc
mov
cmp
pusha
cmp
sarb
out
pop
enter
bswap
sahf
movsl
pop
loopne
inc
and
cmp
xchg
add
mov
daa
ja
add
insl
mov
push
aas
imul
inc
dec
sbb
test
and
add
fmuls
or
add
aaa
clc
or
xor
sbb
or
xor
push
and
jbe
out
sub
iret
sub
gs
lcall
lods
aad
xchg
lea
add
mov
adc
fimuls
nop
xor
addr16
add
popa
shll
int
push
daa
cs
test
into
rcl
xchg
sub
and
jo
movsb
adc
add
imul
add
cmp
vmwrite
jecxz
and
add
mov
xor
pop
sti
inc
psrld
insl
pop
daa
dec
adc
fiaddl
lret
push
mov
adc
xchg
lods
jnp
add
xor
add
mov
frstor
es
repz
arpl
mov
fbld
fidivrs
cmp
rclb
sub
cmp
sbb
mov
pop
push
push
pop
xchg
jmp
mov
arpl
mov
pop
add
push
stc
notl
add
loopne
popf
shl
insl
in
loopne
popa
outsl
cmp
or
sub
movsl
inc
ja
inc
dec
cmp
pop
jecxz
adc
xchg
dec
shlb
shr
movsb
cmp
add
add
or
movsl
push
pop
xor
lods
push
jo
cld
add
mov
cmp
push
inc
push
inc
or
js
data16
add
mov
pop
push
add
lahf
addl
jecxz
mov
cmpsb
cs
mov
andb
xor
jae
add
lock
out
aas
push
add
sub
adc
mov
fistl
divl
setb
add
push
mov
mov
call
adc
enter
add
jae
mov
mov
rclb
std
and
add
add
inc
mov
jmp
add
in
call
and
sbb
add
leave
or
flds
xor
or
lahf
pop
shrb
lock
jo
out
shlb
jl
add
fmuls
call
dec
add
add
mov
stos
cwtl
clc
xor
add
test
add
xchg
adc
mov
add
ljmp
adc
stc
add
in
mov
daa
xchg
pop
pop
dec
or
inc
hlt
arpl
lea
out
push
push
mov
ret
inc
add
jne
sti
or
adc
add
or
sbb
push
cmpl
addr16
push
jmp
adc
jns
add
shlb
xor
je
xchg
lds
add
test
sbb
movsl
repnz
add
jmp
aad
mov
jmp
cmp
and
mov
fdivr
cs
add
cltd
loopne
str
xchg
add
sub
in
or
movsb
fiaddl
inc
and
mov
or
loopne
stc
sbb
je
cmp
xchg
insb
lods
inc
enter
and
popa
je
call
lods
add
inc
pusha
popf
inc
in
mov
xor
popa
arpl
ljmp
shlb
mov
fsubrl
or
jb
xor
scas
add
insl
push
js
test
cmc
incl
bound
fstp
orb
into
pop
pop
and
in
icebp
cli
cld
xchg
iret
xor
mov
jb
mov
add
fwait
push
lea
add
sbb
push
xlat
mov
add
stc
push
lods
sbb
add
lret
loope
add
fmull
push
clc
std
dec
test
ljmp
pop
cltd
push
cld
adc
or
icebp
in
aas
add
add
dec
shl
mulb
push
or
jne
add
pop
push
push
add
ljmp
jg
or
mov
add
test
bound
lock
or
push
aas
and
sahf
xchg
add
add
adc
mov
add
sbb
pop
push
cmpb
loopne
sbb
or
ds
inc
xorb
dec
cwtl
movsb
dec
or
test
subb
dec
pop
adc
xor
movl
add
inc
or
add
jne
cmp
je
inc
jb
add
xchg
gs
rolb
out
jne
push
or
push
jae
jp
insb
mov
pop
or
enter
add
xchg
jle
cmp
mov
mov
inc
testb
cmp
ficoms
jmp
leave
or
ret
cmp
push
shl
add
mov
inc
mov
add
mulb
test
jnp
cmpsl
push
and
mov
ds
push
add
lahf
fs
or
xchg
add
les
and
cld
mov
test
mov
cltd
cs
aaa
cmp
xor
pop
or
jmp
mov
add
add
lret
jmp
nop
add
xor
sub
jnp
add
lods
inc
mov
pop
jo
mov
inc
add
js
jns
fadds
add
stc
cli
loope
ds
cld
in
add
or
sbb
jne
fildl
sub
movsl
jo
pop
push
ds
sti
in
mov
add
and
imul
or
jle
sbb
mov
orb
add
add
sbb
add
call
add
push
push
xchg
pushf
clc
cltd
pop
cmpsl
cld
test
push
sub
movsb
or
inc
mov
pop
mov
nop
mov
sub
inc
cmp
or
or
jl
xor
sub
inc
and
jle
cmp
mov
add
sub
mov
xchg
inc
mov
mov
xorb
add
pop
jp
add
ds
inc
call
aaa
test
je
mov
incl
inc
pop
mov
mov
push
xchg
int3
dec
jb
mov
jp
add
call
and
add
je
mov
xor
cwtl
and
dec
add
or
sub
add
mov
ficoms
stc
add
ret
std
pusha
and
add
dec
cld
arpl
je,pt
ret
das
rolb
es
dec
les
cmp
shll
sbb
add
sbb
or
sbb
jmp
movsb
call
xchg
add
mov
mov
and
das
lret
mov
ljmp
fnstsw
add
lret
std
inc
add
in
pop
push
dec
push
loopne
pusha
xchg
movsl
jb
add
iret
mov
push
and
mov
testb
mov
pop
push
and
mov
or
pop
push
and
push
dec
adc
cmp
cmc
sub
gs
and
push
adc
add
dec
addb
cmp
mov
pusha
fcom
push
jmp
nop
adc
call
lock
bound
lock
cmp
pop
sub
idivl
add
and
lods
int
clc
notb
pop
mov
xor
scas
fadds
jno
adc
je
mov
lods
add
nop
adc
push
cwtl
add
and
test
push
xorb
shr
adc
add
addb
push
xchg
jg
cmp
call
adc
pop
add
push
jns
pop
xchg
mov
jno
out
lock
in
mov
cwtl
fiadds
inc
test
sahf
ret
rcr
mov
fcomps
cmp
dec
xchg
or
andb
inc
cmp
inc
sbb
imul
mov
pop
cmp
add
jnp
or
inc
mov
enter
add
ja
push
cmp
sub
add
movsb
inc
xchg
and
cwtl
test
cmpl
lods
mov
add
dec
imul
add
loop
aad
iret
cld
call
mov
inc
mov
cli
or
mov
add
popf
adc
or
nop
shll
add
mov
clc
leave
faddl
or
xor
jg
fistpll
movsl
add
pop
jle
aad
stos
add
mov
or
push
es
pop
stos
rorb
test
mov
movaps
mov
fimull
mov
pop
add
add
adc
cs
push
inc
jnp
inc
inc
mov
add
clc
and
add
push
cmp
test
addb
loopne
cmp
jmp
mov
or
shrb
sbb
xor
inc
imul
sbb
inc
inc
add
add
add
fildl
push
add
jne
fiadds
shlb
add
xor
jmp
add
rolb
xor
and
popa
cmp
test
call
cld
sbb
push
push
decl
xor
xchg
or
add
dec
into
daa
movnti
inc
iret
jmp
sub
icebp
xor
sbb
add
mov
sahf
jle
pop
adc
push
pop
mov
cmp
orb
jae
cmp
popf
adcb
clc
adc
add
rolb
inc
lds
and
xchg
adc
loop
inc
fmuls
add
fidivrs
push
pop
loopne
push
cmpsl
add
sbb
adc
movsl
push
int3
and
sub
add
pop
movsb
pop
add
add
or
inc
jbe
add
aad
sbb
jmp
fs
push
jno
add
mov
popf
stos
add
icebp
dec
add
jbe
adc
inc
add
jb
rolb
jae
arpl
out
bound
movsl
sbb
push
add
ja
jae
adc
sbb
aam
cmp
jb
pop
addr16
popa
outsl
sarb
je
add
mov
arpl
insl
popa
add
jb
pusha
inc
outsb
imul
xor
daa
inc
mov
dec
gs
popa
imul
jae
cmpsb
ja
ds
andb
jns
popa
cmp
outsb
dec
push
xor
adc
adc
addr16
jbe
pop
mov
push
cmp
bound
insl
add
jp
lock
mov
push
clc
ljmp
pusha
ret
jb
add
imul
push
cli
fs
hlt
and
insl
jno
jns
or
mov
push
ffree
in
add
jge
pushf
pop
sbb
cmp
adc
add
and
push
mov
ljmp
mov
ds
jecxz
inc
or
aas
sahf
add
and
shl
repnz
rcrb
pop
insb
adc
adc
cmovp
or
mov
shlb
cmp
or
add
fwait
mov
add
enter
orb
rolb
cmp
je
push
push
add
mov
jbe
ret
je
add
jne
add
adc
xchg
add
repz
mov
into
cmc
in
mov
ja
jb
and
pop
pop
adc
fimull
fildl
loopne
inc
push
das
or
push
inc
orb
dec
add
les
test
mov
jge
pop
mov
cmp
and
movsb
lahf
out
cmpsl
push
and
cmp
inc
addb
fwait
int3
pop
add
mov
and
xor
das
add
adc
dec
mov
add
clc
cmp
stos
jne
add
lods
cmp
jbe
sbb
inc
cmpb
jae
add
inc
adc
cmpsl
sub
addb
aaa
or
mov
mov
mov
or
insl
fistpll
leave
cmp
inc
add
test
push
cld
outsb
aad
fadd
mov
loopne
inc
cmp
data16
xchg
test
and
xor
push
sbb
movsl
add
aaa
inc
mov
cmp
push
mov
push
mov
pop
clc
adc
addl
sbb
mov
mov
add
or
or
jne
pop
into
and
cmpsl
mov
call
or
add
and
or
and
add
adc
fld1
add
or
ja
add
push
dec
push
inc
outsl
mov
jl
add
pop
cmp
pop
jl
add
mov
add
adc
jg
or
push
test
add
test
je
sub
mov
fldcw
sbb
loopne
neg
add
cs
fwait
sbb
cmp
pop
stos
ret
xor
pop
sbb
imul
push
pushf
or
dec
mov
sbb
xor
dec
add
push
loopne
loop
add
and
add
jbe
mov
fsts
add
inc
add
ret
push
pusha
incl
mov
ret
mov
data16
out
call
jecxz
repz
rclb
and
inc
jo
add
and
jl
add
pop
rorl
push
call
sub
xor
mov
rcr
imulb
push
add
cmp
fs
pop
shll
mov
xor
adc
mov
lcall
cltd
or
loop
mov
fs
lods
icebp
lods
jmp
enter
add
mov
mov
iret
dec
addl
je
push
adc
sub
testb
pop
and
pop
hlt
cmpsb
sub
sbb
dec
outsl
xchg
add
push
ljmp
mov
hlt
jmp
mov
addl
sub
das
inc
dec
and
sub
cs
xchg
pop
je
imul
ds
cmp
jb
sarb
add
syscall
mov
shl
add
add
jl
js
cmp
xor
mov
pop
in
adc
or
mov
leave
add
pop
sub
or
add
nop
lcall
push
push
lahf
jp
test
xor
pop
cmp
jo
inc
incb
jne
xchg
adc
addr16
add
cltd
xchg
outsl
cld
hlt
repnz
add
inc
push
jge
movb
push
pop
jle
int
mov
mov
hlt
cmp
mov
adc
lcall
and
add
or
jmp
call
dec
or
test
cmc
add
push
sets
jo
testb
jg
jbe
mov
stos
push
add
pop
std
add
bound
xor
stos
jmp
fimull
sub
clc
shll
ror
cwtl
push
les
xchg
inc
and
pop
stos
div
xchg
adc
hlt
roll
pop
adc
pop
sbb
mov
or
jmp
out
test
add
sub
jne
mov
outsl
daa
pusha
adc
mov
sbb
mov
add
add
push
stc
insl
add
jmp
add
sbb
dec
in
repz
pusha
xchg
mov
and
cmp
adc
add
in
cmp
mov
pop
daa
sub
bound
aas
aam
add
fcmovne
jne
loopne
xchg
push
and
sbb
fiadds
mov
sub
jns
pop
iret
push
rolb
inc
out
sti
push
jb
aam
or
xchg
add
push
xlat
push
add
fwait
add
ret
push
and
and
cmpsl
pop
iret
jbe
sbb
outsl
lock
call
add
sub
add
inc
or
fs
pop
add
js
jge
sbb
enter
insl
and
popf
xor
orb
add
jne
dec
lret
mov
add
push
daa
sub
cmp
or
cmp
orb
adc
add
nop
mov
call
rcr
sub
int3
push
sbb
add
xor
sub
and
js
cmp
push
and
loopne
aaa
pop
cld
nop
movq
repnz
iret
ret
rcrb
cs
rol
add
inc
fldl2t
shlb
add
fildl
xor
sbb
inc
ss
in
jbe
scas
add
add
cld
xchg
hlt
xor
rcl
push
shlb
push
push
xor
iret
rorb
mov
mov
push
push
cmc
leave
pop
mov
jb
add
orl
loope
mov
jp
fcomp
add
and
inc
sub
jb
add
data16
inc
add
dec
ret
add
sub
loopne
cltd
cmp
pop
enter
dec
cli
sub
jo
popa
jno
add
and
andl
in
cwtl
adc
inc
cmpb
dec
add
push
bound
pop
sbb
add
cli
call
push
add
ljmp
and
add
jmp
or
inc
push
mov
imul
pusha
push
jl
lret
sarb
mov
fcom
add
jecxz
inc
sbb
cmpl
je
cmpsl
add
das
mov
icebp
rorb
dec
imul
dec
jl
push
add
add
sub
in
jns
cmp
or
leave
and
add
add
add
mov
into
inc
cld
sarb
mov
cmp
push
adc
sub
mov
dec
adc
push
lcall
lock
shlb
test
mov
or
leave
fcompl
mov
cmp
je
add
push
pop
ret
push
push
pusha
add
add
scas
daa
or
pop
cmp
jl
in
add
push
imul
pop
mov
adc
data16
insl
add
xor
setg
mov
dec
test
cmp
and
push
add
push
adc
sbb
add
pop
xchg
inc
jl
add
pop
rcrl
add
add
pop
movsb
add
nop
push
add
das
rclb
mov
fnstenv
sbb
cld
dec
ret
es
and
lahf
aam
add
hlt
imul
mov
jecxz
inc
out
enter
in
xorb
test
loope
repnz
add
decl
dec
test
rolb
add
loopne
push
test
push
icebp
xchg
scas
add
dec
inc
push
dec
int
dec
cs
xor
mov
add
and
pop
or
popa
insb
test
les
jne
sbb
bound
popa
repz
dec
add
mull
jns
jl
ja
add
and
pop
in
jge
pop
sbb
inc
into
sbb
lgs
sbb
xorb
lock
je
iret
pop
xchg
js
mov
add
xor
jge
ds
xchg
cmp
dec
sbb
or
pop
sub
add
fld
jnp
hlt
mov
add
je
add
daa
mov
inc
add
mov
xchg
roll
in
cmp
add
xchg
aas
push
xchg
dec
sbb
adc
mov
push
mov
cmp
inc
ljmp
imull
fmull
js
ror
add
pop
inc
jecxz
call
je
stos
add
imul
ret
dec
cmc
jge
enter
add
scas
insb
sub
mov
cs
add
cmp
cmp
jmp
dec
mov
adc
mov
jg
mov
pop
or
adc
gs
mov
roll
pop
ds
push
jne
pusha
lods
movsl
test
popf
sub
sub
jle
mov
mov
cld
jne
add
push
mov
add
sbb
xor
add
push
in
add
jl
nop
loopne
xlat
add
push
addl
add
out
add
cmp
pop
idiv
and
mov
push
inc
jmp
pop
xchg
or
into
or
inc
call
pop
clc
lret
lods
roll
cli
lret
cld
jl
add
add
jecxz
les
mov
or
or
adc
idivb
sbbl
test
or
call
pop
pop
adc
add
mov
bound
clc
mov
imul
loopne
cmpb
add
xchg
cmp
pushf
cld
daa
push
shrd
lahf
outsb
cmpsl
add
cmpsb
add
mov
add
decl
loope
sbb
fs
mov
dec
mov
xchg
and
cmp
xor
dec
add
test
cmp
adc
lret
pusha
or
pop
sbb
or
adc
push
mov
stc
push
call
and
add
xchg
sub
and
nop
mov
sub
fs
lgdtl
push
sub
pop
int3
push
push
adc
stos
lea
xor
pusha
add
test
xchg
add
sub
into
es
sub
add
xchg
pop
adc
and
add
add
ja
push
pop
or
xchg
es
push
add
lods
adc
or
andb
aam
xchg
pop
test
outsw
dec
mov
add
adc
jmp
xchg
add
or
push
daa
data16
bound
sub
inc
and
add
adc
and
jle
pop
incl
jmp
push
add
or
cld
and
mov
mov
xchg
cwtl
add
dec
jo
sti
jno
nop
out
daa
push
fdivrl
aad
out
cmpb
xchg
add
pushw
pop
pop
sbb
enter
adc
popa
add
movsb
into
push
repnz
xchg
nop
lcall
cmp
add
test
push
dec
subl
stos
mov
xchg
add
lds
gs
and
subl
xor
jne
add
lock
aad
inc
add
mov
add
mov
inc
add
inc
and
xchg
aaa
add
jp
adc
sti
clc
pop
inc
cmp
pop
add
push
fildll
sub
shll
push
movsl
add
imul
xchg
cltd
or
xchg
dec
mov
push
mov
xchg
push
and
call
fisubl
jle
add
aaa
jl
xchg
sarb
cs
int3
adc
daa
lret
lds
mov
shrb
add
mov
loop
xor
mov
mov
inc
syscall
xor
mov
daa
mov
jne
push
mov
jg
or
icebp
add
inc
aad
daa
sub
mov
xchg
mov
movsl
pmuludq
add
or
lock
inc
mov
add
inc
sub
add
adc
push
test
add
and
inc
ffree
pop
xchg
addb
or
add
and
sbb
ret
cltd
pop
mov
rorb
inc
hlt
scas
add
or
cmp
jb
mov
cvttps2pi
sbb
xor
ja
aas
xorb
add
imul
sub
sub
out
lock
mov
add
adc
push
xor
pusha
inc
sub
sbb
add
dec
es
out
mov
pop
cmp
pop
incb
mov
adc
add
xchg
and
lcall
cmpsb
pop
add
call
hlt
pop
sub
outsb
rorb
add
or
hlt
mov
pop
add
dec
mov
xchg
daa
das
or
sarl
popf
inc
dec
in
pop
add
dec
add
inc
fiadds
and
insl
sbb
add
xchg
lods
fnsave
insb
add
xor
andb
inc
cmp
mov
pop
cmp
sbb
jp
add
ja
std
xorl
lret
jbe
jmp
mov
dec
xorb
pop
data16
xorb
add
loopne
add
sbb
sub
add
add
jmp
push
popf
jecxz
lcall
dec
je
sub
inc
jns
add
cmc
pop
movsb
shl
inc
hlt
push
lock
inc
test
xchg
inc
push
push
push
mov
jmp
sub
add
mov
push
aam
sbb
mov
popa
add
cli
mov
sub
push
rcrb
movsl
inc
in
adc
pop
cmp
or
pushf
dec
icebp
mov
lcall
xor
or
popa
dec
fmull
dec
mov
adc
add
aad
push
add
data16
adc
xchg
adc
insl
popl
and
push
xor
add
sub
xchg
inc
mov
fnstenv
or
out
sub
sbb
xor
sbb
add
mov
mov
push
clc
and
xchg
popa
les
mov
out
xchg
xchg
roll
adc
dec
stc
add
dec
clc
mov
add
and
dec
aas
pop
hlt
cmp
inc
leave
test
orl
minps
cmp
add
mov
mov
test
lds
mov
jb
push
add
hlt
jne
mov
popa
clc
mov
mov
xlat
repz
incb
loop
lahf
fisubrs
sahf
loope
adc
and
into
mov
push
add
fbstp
or
lahf
cld
insb
push
rcrl
add
pop
cli
dec
push
mov
out
incb
jne
jmp
nop
bnd
lahf
idivb
clc
xchg
mov
out
sub
adc
adc
outsb
inc
add
mov
add
insb
enter
push
mov
ljmp
es
push
push
mov
xchg
mov
cmc
out
movsb
call
iret
sub
fcomps
mov
pop
test
push
mov
jg
push
nop
enter
add
loope
sbb
and
dec
arpl
addps
pop
test
add
xchg
sub
in
xor
loopne
add
add
inc
add
push
inc
jns
test
adc
stc
rcll
add
pop
mov
repz
in
addl
adc
mov
and
shrb
roll
inc
loope
mov
or
sbb
pushf
or
sti
fmull
mov
pop
jns
negl
fiadds
aam
dec
mov
dec
add
jmp
xlat
loopne
add
push
jbe
rolb
add
or
xchg
js
jae
add
xchg
sbb
dec
movb
int3
clc
fs
cld
xor
cmpsl
sbb
orb
inc
jnp
and
fwait
jo
push
movb
push
jg
gs
push
scas
mov
push
adcb
in
xchg
add
sbb
sbb
adc
scas
out
cmp
inc
pop
jnp
pop
or
lret
mov
sub
rcll
mov
js
push
add
pop
push
fsubrs
loopne
lock
test
clc
xor
mov
add
sar
ds
jne
add
in
mov
negb
push
inc
cs
add
sbb
roll
pusha
or
imul
add
adc
jae
cmp
andb
xor
add
icebp
dec
push
push
cmp
mov
cmp
sbb
push
repnz
cmp
cmovle
cs
adc
xor
add
test
push
or
sbb
repz
mov
mov
fbld
cvtps2pi
add
cmp
ret
push
xchg
add
mov
xlat
add
mov
xchg
dec
es
xchg
movb
xor
add
stos
mov
add
adc
loopne
xor
jne
mov
dec
in
mov
cli
and
data16
mov
mov
mov
adc
repnz
mov
notl
call
mov
adc
outsb
lods
jl
test
mov
add
pop
and
ret
inc
fidivrs
aad
fsubr
ljmp
arpl
or
in
mov
aad
je
xor
enter
scas
and
inc
add
insb
cmpsl
pop
mov
add
inc
les
ror
add
in
popa
and
xor
arpl
mov
orb
sbb
in
jno
add
jp
cltd
jge
mov
rorb
dec
or
cmp
pop
popf
add
movsb
pop
add
add
jne
adc
add
or
add
push
xchg
loopne
mov
out
and
sbb
test
add
mov
xor
jmp
js
cmp
mov
inc
xchg
sbbl
nop
push
adcb
mov
ja
lock
cltd
daa
ret
jmp
mov
cs
addr16
or
insl
pop
imul
je
inc
and
nop
push
jl
in
call
mov
filds
cmp
sbb
adc
sub
and
inc
push
mov
cmp
inc
movsl
or
inc
out
push
pushf
jae
or
push
mov
push
cmp
stos
adc
add
cmpb
add
shlb
and
sub
add
mov
jge
adc
dec
pop
mov
hlt
pop
ja
add
nop
jbe
lret
xor
je
add
pcmpeqw
popfw
pusha
iret
negl
jo
or
cli
and
test
add
dec
sbb
shl
sbb
xchg
inc
cmp
cltd
xor
mov
xchg
sbb
sub
jmp
jne
cmp
dec
pop
syscall
test
popa
pop
nop
fisubs
jnp
mov
fbld
addl
rorb
xlat
push
add
mov
sub
add
pop
adc
loope
fmul
cwtl
xor
dec
add
mov
add
mov
shrb
movsb
scas
add
sbb
aas
call
das
lahf
push
ds
jae
shrb
jne
jecxz
imul
scas
mov
cli
decb
add
xor
and
sbb
dec
dec
push
or
push
mov
out
push
mov
call
rcl
loop
xchg
mov
stc
addb
or
ja
inc
jbe
add
test
insl
pop
int3
cmp
inc
addr16
adc
xchg
scas
movhlps
and
std
cs
inc
inc
pop
mov
loope
nop
pop
mov
ja
mov
jmp
add
and
jle
pop
mov
sub
sub
cmc
mov
mov
lods
xor
movsb
ret
andl
aam
xor
add
push
sbb
mov
jge
add
lea
fwait
outsb
mov
inc
sahf
cmc
adc
mov
sti
pop
dec
test
push
ja
leave
xorb
imul
rcll
loope
or
and
std
or
sbb
sete
dec
inc
pop
int3
sbb
pop
mov
ss
mov
movsb
cmp
fwait
or
mov
push
outsl
jb
imul
je
xchg
push
lahf
sbb
mov
inc
fs
pop
cmpsl
jns
cmovae
lock
push
imul
ret
add
adc
mov
add
jne
aad
xchg
jge
jbe
dec
cmp
mov
or
push
sbb
int
sarl
cmp
mov
cs
cmp
and
mov
add
sub
pop
dec
and
xchg
fists
mov
push
adc
add
or
add
in
jae
cwtl
cmp
addb
push
mov
adc
mov
cld
sub
add
pop
in
cs
add
fidivs
jl
das
and
js
repnz
xchg
lahf
cmpsl
aad
lock
push
cld
add
daa
mov
cmpsb
dec
lcall
ss
xor
mov
pop
push
and
aas
outsb
ret
add
aad
hlt
xor
mov
dec
orb
inc
jp
adcb
or
adc
inc
xor
dec
adc
es
add
cmp
rclb
mov
ljmp
add
repz
repnz
or
add
jge
cli
ret
rcrb
lea
aas
pmaxub
adc
popa
clc
sti
add
mov
fsubr
push
or
xorb
adc
inc
or
push
adcb
mov
pop
add
rdtsc
out
int3
jl
jb
inc
rclb
les
add
pop
flds
faddl
add
xor
pop
pop
mov
notb
rolb
cmp
sbbb
imul
idivl
fcomps
divb
jbe
cvttps2pi
out
arpl
fwait
int
mov
pop
pop
jb
call
fisubs
push
test
cmc
or
in
sbb
sub
jne
add
cmpl
mov
pop
pop
add
mov
cmp
or
sbb
cmovnp
daa
add
mov
jge
pop
das
pop
jnp
add
jb
and
add
in
xor
clc
sub
push
mov
add
push
adc
add
mov
push
jg
or
sub
loop
pop
mov
jo
sbb
pop
call
or
mov
add
adc
sbb
push
mov
cwtl
inc
push
pushf
vmrun
xor
mov
movhps
or
pop
mov
sub
xchg
aam
add
outsl
in
dec
add
sub
jne
sbb
lock
mov
adc
aas
lea
pop
sub
add
ret
cmc
add
and
sub
inc
roll
imul
dec
add
jp
add
mov
test
pop
add
sbb
add
shl
mov
adc
jmp
inc
notl
das
out
lock
jne
push
add
or
add
out
add
fwait
sub
mov
jno
bound
incl
sbb
push
test
push
or
mov
adc
lret
mov
ja
add
adc
int
testb
outsl
add
fwait
mov
xor
push
pop
pop
jl
xor
testb
jnp
add
jmp
cmc
add
imul
insl
lea
jae
add
pusha
stc
add
jge
cmp
je
or
test
testb
mov
xor
push
fwait
jp
jns
and
adc
test
adc
or
add
ds
xchg
test
repnz
mov
inc
pop
sub
je
add
enter
test
or
cli
add
or
ret
push
pop
imul
clc
loopne
xchg
ss
sbb
popf
add
adc
and
dec
xchg
popa
push
sbb
les
lea
jnp
add
or
add
jmp
call
test
jp
sub
dec
in
jae
in
das
sub
push
jbe
or
add
add
sub
leave
xor
jg
sbb
push
mov
inc
mov
mov
js
inc
lods
add
inc
pop
cmp
pop
and
xchg
addb
sub
xchg
daa
in
jno
sub
cmp
sub
xchg
inc
cwtl
adc
adc
push
push
shrb
sub
cwtl
xchg
dec
dec
cmpsl
aas
lds
addb
xchg
dec
clc
or
mov
and
xchg
loope
shl
and
or
test
cmp
mov
sub
mov
mov
pusha
dec
jg
add
pop
pop
leave
jnp
add
or
sub
cwtl
pop
cmp
lock
jmp
leave
clc
sbbb
jo
ja
jns
pop
and
add
fadds
and
movsb
mov
test
mov
enter
cwtl
aam
test
insb
std
jecxz
cmpb
cmp
add
aad
pop
arpl
scas
jnp
push
adc
xor
cmpsb
mov
mov
mov
push
jb
imul
add
push
movsb
movsl
bound
xchg
pusha
or
pop
imul
stc
or
inc
pop
adcb
dec
cmp
add
inc
mov
add
pop
cmc
jo
cmp
aam
mov
pop
cmpsl
inc
add
add
dec
outsl
fs
add
cwtl
xor
jle
cmpsb
int
add
lods
out
push
ficoms
rorb
jge
adcb
sbb
add
in
test
ljmp
add
ret
add
cs
xor
jmp
sub
mov
jo
push
mov
inc
sbb
test
js
cmp
add
and
and
hlt
pop
sub
mov
ret
mov
add
lock
iret
jp
call
inc
incb
dec
sub
and
dec
xor
or
pop
xchg
add
pushf
ss
int
cmp
das
add
mov
ds
sbbb
pop
inc
aam
add
gs
lods
mov
jg
mov
sub
adc
add
jnp
push
inc
add
test
inc
push
pop
aas
aam
cmpb
sbb
jmp
js
jp
xorb
in
push
sub
and
mov
cmp
pop
pushf
pop
mov
cltd
loop
clc
push
add
imul
shl
call
and
mov
push
adc
add
nop
cmp
js
add
jns
or
inc
js
add
push
cmp
test
or
lret
mov
lldt
loopne
lods
xchg
cli
pop
add
insl
push
mov
sub
sub
mov
inc
sahf
insb
jns
cmp
dec
xor
cwtl
rorl
loop
xor
in
aas
enter
sub
es
test
cmpsb
flds
shll
xor
mov
pop
inc
add
imul
ja
andb
cmp
hlt
inc
out
lods
inc
add
imul
dec
add
fisubs
push
push
add
add
outsb
jae
add
jl
jnp
jne
outsl
xchg
xor
popf
inc
int3
push
or
add
or
sbb
pusha
pushl
sbb
movb
rclb
cmp
jne
bnd
add
jl
inc
push
addb
subb
pop
add
call
sbb
jb
jae
add
and
or
test
pop
xchg
jp
add
and
pusha
mov
loop
decb
dec
xchg
cmpl
jno
outsl
jle
or
push
sahf
dec
nop
loopne
xchg
scas
lea
or
test
jmp
cld
inc
stc
add
cmp
xchg
and
arpl
add
inc
push
xchg
pop
jne
scas
sbb
orl
sub
popa
cmp
and
add
adc
jbe
pop
adc
add
loopne
loope
rclb
add
mov
pop
sbb
js
add
daa
mov
pop
pop
adc
hlt
adc
and
mov
enter
adc
aas
lock
andb
je
test
and
mov
in
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
test
pop
adcl
cmp
andb
inc
insl
in
xor
add
dec
fildl
lahf
fisubl
stc
aam
sub
aad
lock
sub
in
or
out
or
test
sub
dec
push
test
add
scas
mov
inc
sub
mov
mov
mov
add
cmp
lret
addb
push
add
dec
dec
notb
pmuludq
sti
lods
out
add
or
std
out
enter
mov
ljmp
clc
sub
aas
sub
stos
inc
in
add
pop
cmp
cmp
pop
mov
call
dec
loope
ret
pop
pusha
and
jge
out
fs
sbb
daa
js
inc
xchg
pop
xor
fadds
pop
cmp
mov
mov
scas
outsb
xor
push
sbb
add
pop
jb
add
sbb
cwtl
push
push
and
mov
jge
dec
cmp
ds
sub
int
ret
mov
loop
loope
or
clc
gs
sub
sbb
push
aaa
and
js
jae
in
adcb
dec
push
dec
dec
adc
add
cmp
or
pop
add
movsb
sub
pop
xor
imull
addr16
add
xchg
sub
mov
ret
cmp
faddl
mov
lds
inc
xchg
add
add
mov
mov
fdivl
push
adc
cmp
add
and
pop
std
lods
jl
mov
mov
test
push
or
add
add
add
and
dec
dec
xchg
push
add
pop
inc
outsb
jle
mov
jg
add
add
add
fs
adc
pop
pop
adc
ds
addb
add
and
popa
add
adc
js
and
add
add
popf
les
add
nop
push
xchg
int3
jl
arpl
jle
cli
mov
pop
into
sbb
lods
add
and
test
nop
pushf
mov
push
inc
xchg
enter
mov
push
scas
les
mov
subl
pop
hlt
add
stc
loop
push
push
fs
adcb
add
inc
hlt
decb
call
mov
cmpb
adc
pop
add
sub
lea
xchg
mov
add
hlt
xor
xor
insl
decl
outsl
mov
xchg
stos
movsl
lods
mov
or
cli
fs
mov
or
pop
add
or
lahf
jp
frndint
jl
outsl
jecxz
les
add
cmpl
xchg
adc
inc
jecxz
movswl
repz
lock
add
inc
pop
xor
xchg
sti
add
dec
cmp
push
pop
xorb
push
call
in
mov
nop
ja
inc
add
xorl
or
mov
sub
repz
or
aaa
jg
rolb
sub
inc
mov
xchg
int3
ret
sbb
add
inc
xchg
loopne
je
jae
or
scas
dec
add
add
dec
inc
cmp
jbe
push
imul
ja
test
js
add
aad
fiadds
repnz
jmp
stos
mov
std
add
sub
xor
add
je
andl
mov
clc
jne
add
stos
mov
sub
fs
enter
sbb
add
andl
or
add
and
dec
lret
add
inc
add
pushl
jbe
sub
jmp
pop
fldt
ret
nop
das
mov
shlb
jle
pop
stos
int3
add
pop
ret
scas
call
loope
inc
pusha
push
mov
add
into
cs
mov
add
popf
clc
movsl
dec
pop
xor
mov
icebp
les
add
movb
or
jp
dec
add
mov
jle
add
xor
scas
add
push
inc
daa
push
loopne
add
cmc
ffreep
jl
dec
push
mov
inc
inc
jg
test
cmp
mov
push
fmull
mov
test
add
addl
jg
lret
loopne
mov
xor
int3
xor
dec
add
nop
jge
arpl
clc
add
mov
fildll
popa
add
insb
movb
inc
mov
fs
cltd
and
addr16
add
or
in
add
push
pop
lock
incb
push
je
fcmovne
mov
dec
inc
aas
xchg
jno
cltd
adc
daa
or
dec
clc
mov
cmp
xchg
orb
pop
aad
loop
out
jge
movsl
and
mov
add
test
xchg
adc
movzwl
mov
lods
xchg
jg
add
jo
cmpsb
sbb
add
and
movsl
inc
mov
jno
sbb
mov
pusha
out
xchg
push
add
scas
cmpl
add
stos
adc
push
or
add
ja
add
shrl
es
sti
inc
add
and
in
mov
nopl
cmpb
icebp
arpl
mov
cmp
mov
push
mov
cmp
jne
or
call
or
popa
jb
fiaddl
ss
and
mov
das
add
mov
and
sti
jnp
pop
mov
inc
sbb
sub
pop
add
mov
inc
jl
xchg
pop
cmpsb
push
roll
add
loopne
and
add
nop
mov
adc
repz
js
cmpsb
clc
inc
add
and
and
repnz
les
lock
add
or
in
aas
add
mull
push
addb
add
jbe
sub
pop
mov
lcall
jne,pn
out
add
add
jmp
aaa
sbb
or
shl
cmp
add
or
divl
xor
add
add
jmp
add
jg
js
sbb
sbb
add
mov
xchg
add
int
cmp
and
add
sbb
add
in
dec
shrl
out
mov
jp
add
stos
sbb
lcall
mov
mov
xor
jae
lret
call
push
mov
jnp
js
nop
mov
clc
daa
pop
dec
lods
add
js
push
sub
add
xor
push
push
add
xchg
add
arpl
fisttpl
sbb
jl
mov
fs
add
adc
inc
and
xchg
sub
pop
jle
imul
add
addb
mov
mov
cld
nop
dec
movsb
lock
sub
call
push
mov
add
push
incl
sti
xor
adc
in
pusha
add
aaa
out
sub
add
sbbb
xor
aas
scas
rolb
jmp
push
add
inc
and
sbb
sbb
jmp
and
push
xlat
fsubs
addb
jl
inc
lahf
sar
xchg
add
jmp
dec
fwait
test
cmp
jne
aad
stos
subb
jo
add
mov
adc
inc
data16
add
mov
pusha
addl
imul
dec
add
andl
rcrb
push
xchg
xchg
mov
push
add
or
mov
adc
and
sbb
ret
jp
fists
fwait
mov
sbb
mov
clc
xor
cmc
sbb
xchg
std
inc
or
xor
incb
and
sbb
addr16
mov
aaa
xor
sub
inc
and
cmp
adc
add
jae
cs
mov
cmp
jno
ret
fwait
and
cmp
xchg
dec
loopne
sub
shlb
jae
iret
sub
adc
cwtl
dec
repnz
lahf
xchg
sub
sub
mov
jl
or
aas
cmpb
je
mov
pop
cwtl
inc
out
jno
and
out
add
scas
xchg
dec
rcr
add
vphaddubw
push
add
adc
mov
add
cmpb
inc
cmp
dec
enter
add
aas
add
gs
adc
add
cmpsl
loopne
lahf
add
mov
cmp
hlt
xchg
rsqrtps
xchg
push
pop
das
xchg
jo
and
mov
mov
shrb
roll
cmp
or
adc
push
adc
add
jne
mov
inc
addb
mov
jg
or
pop
add
xchg
push
sbb
sub
xchg
or
add
xchg
scas
and
data16
mov
inc
dec
dec
add
push
jae
jo
sbb
fidivrs
push
dec
add
lock
add
or
push
ret
add
mov
sub
sti
cmpb
add
dec
lret
cmp
dec
xor
add
push
sub
sub
daa
je
rolb
sub
ret
xchg
inc
movsl
fisttpll
mov
pop
cmp
into
xor
and
and
stc
add
add
addl
add
jl
lods
xchg
add
cmp
xchg
ret
dec
test
popf
add
repz
add
dec
dec
mov
push
add
cmp
mov
jae
in
les
jge
and
sub
jecxz
cmp
call
pop
add
adc
hlt
add
mov
loopne
test
cltd
cwtl
jb
jg
sti
rdmsr
xchg
lahf
dec
and
jle
dec
add
mov
sub
add
insb
xor
addb
mov
dec
jo
cmc
add
push
xor
pop
mov
mov
add
lfs
push
stc
jnp
fs
add
pop
inc
inc
push
sub
inc
out
insl
rcrb
jg
add
std
or
or
push
jne
jg
stc
sub
mov
ja
mov
jl
call
xor
js
das
enter
imul
push
and
cmp
cmp
xor
xor
inc
lret
jb
jp
add
in
hlt
arpl
mov
add
bound
or
and
push
jge
cmpsl
aaa
nop
lret
xchg
test
test
insl
rorb
cld
rcll
adc
mov
xlat
inc
and
pop
cmp
pop
imul
push
push
mov
add
dec
xchg
jne
add
ljmp
jnp
add
push
cmp
sub
xchg
push
jl
add
rol
jb
add
inc
adc
inc
testl
sbb
or
sub
fs
in
rcr
out
ja
cmp
outsb
add
jne
imul
or
jl
call
xchg
mov
jecxz
andb
push
pop
pushf
popf
push
and
sete
orb
jl
lcall
inc
shrl
call
push
sub
pop
xor
ficoml
pop
shl
aam
cmp
loop
add
mov
push
jo
jb
scas
cmp
inc
cmp
mov
lret
add
push
test
not
jo
arpl
cmp
mov
pop
add
jmp
or
cmp
pop
outsl
mov
add
pop
mov
sti
dec
inc
pop
push
addr16
adcl
add
sub
add
lret
inc
inc
pop
sbb
pop
xor
adcb
test
push
xchg
jae
out
stos
mov
add
icebp
repnz
or
sub
add
dec
rcl
push
testb
lea
and
ret
aam
pop
fstpl
inc
or
mov
adcl
or
add
lea
add
fcoms
add
fldcw
or
mov
test
mov
ds
and
sub
and
sbb
aam
xchg
or
pop
loopne
addb
and
jmp
pushl
add
dec
push
std
mov
xchg
cli
mov
xchg
mov
aas
test
add
pop
lea
test
scas
int3
adc
ret
lahf
pop
inc
fsubrl
jge
cmpsb
movsb
dec
in
sbb
test
adc
jns
cmpsl
sub
add
xchg
in
cmp
cmpsb
pop
mov
add
daa
js
sub
or
pop
in
adc
add
add
dec
sti
mov
scas
xlat
mov
lds
pop
pop
or
jb
xchg
int3
ds
loopne
dec
jp
imul
in
mov
fnstenv
inc
pop
mov
dec
js
aad
movl
or
sub
inc
jl
xor
pop
adc
out
or
sti
pop
movsl
pop
sub
mov
fwait
pop
add
sub
push
dec
movsb
add
mov
or
clc
rcrl
lods
inc
add
fmuls
fstpl
add
xchg
cmc
add
xchg
xchg
push
jl
stos
es
mov
shl
cmp
push
pop
and
and
data16
insl
add
insb
loopne
pop
dec
push
push
xchg
sbbb
enter
outsl
faddp
push
mov
xchg
cmpl
sahf
add
sub
mov
cld
adc
push
mov
sti
mov
adc
sbbb
add
and
xor
les
dec
test
int3
or
rclb
fsubs
mov
loopne
pushf
and
add
or
sbb
mov
in
push
lock
out
or
inc
xchg
int3
shll
add
pop
das
fstl
inc
imul
cmp
cmpsb
or
mov
add
jae
enter
aas
xor
mov
rolb
loop
pop
xchg
in
test
add
test
dec
add
push
adc
add
clc
add
xor
arpl
sbb
add
dec
jno
repz
add
inc
sub
pop
loop
lret
or
and
jne
push
add
das
addb
xor
push
int
adc
pop
mov
sbb
ja
loopne
mov
push
adc
roll
cmp
subb
aas
orb
push
sbb
xor
out
mov
jl
mov
fists
adc
cli
in
inc
add
ss
or
inc
gs
mull
movups
add
mov
and
pop
pop
orb
add
cmp
jl
mov
push
outsb
rolb
mov
nop
or
xchg
enter
dec
mov
lock
push
add
adc
or
push
ljmp
jmp
fisubl
push
add
loopne
shrl
pop
add
or
cmp
flds
jmp
mov
and
mov
jne
clc
pop
add
jns
inc
or
loopne
xor
lock
and
push
insb
adcb
hlt
cmp
sbb
inc
fbld
mov
push
je
cld
mov
sbb
add
stc
fsubrs
push
imul
call
xchg
test
sub
lds
add
jno
adc
or
adc
jmp
xchg
pmaxub
testb
sub
pop
loopne
mov
add
sar
inc
movsb
cmpb
add
loopne
les
enter
test
aam
hlt
xor
mov
push
addb
mov
lock
jecxz
add
ret
sbb
lds
add
test
mov
stos
int
add
cmp
es
mov
notl
out
add
loope
jo
xchg
push
mov
aaa
sub
fimuls
xor
push
push
fs
jno
push
dec
pop
xor
arpl
inc
aas
lcall
inc
clc
je
cmp
cmp
pop
loopne
cs
sbb
imul
push
push
hlt
roll
pop
cld
push
sbb
cmpsl
test
stos
add
sbbb
add
or
out
jle
loopne
adc
pop
pop
add
in
pusha
testl
or
xlat
fs
xor
or
stc
popa
add
pop
and
clc
leave
lods
sbb
cmp
mov
mov
mov
xlat
cld
outsb
lods
loopne
add
mov
in
pop
mov
rolb
insb
add
out
and
and
push
mov
hlt
mov
test
into
inc
sahf
push
adc
add
jmp
xchg
test
fcom
mov
or
gs
testb
outsl
and
add
ja
cwtl
cmp
loopne
push
in
test
and
pop
sbb
test
bound
add
and
mov
add
and
or
add
imul
sub
pushf
dec
dec
hlt
add
xchg
cmp
repz
sbbb
pop
adc
std
ret
inc
xor
cmp
jne
add
ss
add
std
adc
add
xor
lods
fsubl
cmp
adc
push
arpl
scas
into
adc
inc
add
outsb
push
gs
add
or
addr16
adc
test
push
mov
sbb
push
inc
lods
add
pop
call
cmp
hlt
sbbb
aam
lds
cmp
inc
push
mov
scas
sub
test
add
lds
dec
outsb
or
push
insl
divb
mov
fs
and
sbb
jbe
jne
bound
shrl
pop
enter
outsl
lock
sub
jnp
mov
push
mov
lahf
les
mov
hlt
cmovo
add
jle
xor
mov
pop
dec
xchg
push
in
pusha
dec
rolb
mov
add
jne
adcb
orl
push
mov
fs
mov
add
adc
inc
sti
popa
or
cmp
ljmp
fstpl
pop
mov
rclb
orl
add
dec
push
cmpsb
cmp
pop
inc
inc
dec
jne
pop
adcw
add
or
push
mov
imul
and
es
maskmovq
negl
cwtl
inc
push
pop
call
push
gs
scas
jo
xor
xchg
add
movsl
loopne
mov
movl
push
cmp
xor
sub
adc
insb
outsb
push
verr
icebp
pop
xchg
add
push
enter
fnstsw
and
push
fyl2xp1
in
in
dec
or
repz
sbb
pushl
jnp,pt
clc
add
pusha
add
cmp
mov
aas
mov
or
jg
orb
push
adc
enter
in
test
adc
sub
xor
pop
sbb
mov
or
mov
push
dec
add
xor
add
add
jne
or
dec
push
sbb
shrb
mov
lock
enter
add
xchg
std
rolb
mov
cwtl
fsubs
and
pop
or
fwait
mov
mov
add
idivb
sbb
fisubrl
out
js
lock
mov
dec
into
and
push
rdpmc
mov
cmp
xor
pusha
push
sbb
adc
xchg
dec
add
or
inc
adc
dec
add
shll
dec
jne
lea
sub
test
gs
sub
int
aaa
les
adc
sub
xorb
ja
add
cwtl
sbb
cmp
jge
add
adc
daa
fimuls
mov
dec
and
sbb
ja
pop
mov
sbb
and
movsl
dec
xor
jl
add
mov
shll
jo
sub
ret
xor
cmp
adc
cld
das
mov
popf
mov
push
fsubrl
or
idivb
sbb
or
add
adc
cmp
cmp
clc
sub
pop
fmull
sbb
or
outsl
scas
sub
add
repnz
ja
aam
subb
sbb
in
shl
xor
cmp
packuswb
push
sbb
jge
push
mov
nop
mov
gs
or
scas
jo
dec
xchg
jns
in
sub
ret
sub
jecxz
mov
and
ret
mulb
lahf
in
fists
jo
add
jp
fimuls
clc
dec
add
cltd
sbb
jg
dec
add
pop
adc
mov
push
adc
clc
add
cmp
jne
ret
add
adc
push
data16
and
and
lcall
mov
std
mov
scas
add
sbb
xor
imul
shlb
add
icebp
idivl
stc
xchg
pusha
and
or
movb
add
inc
in
adc
add
push
or
mov
aas
mov
push
push
push
sbb
ds
lea
sbb
movl
enter
add
push
lret
adc
subb
and
pop
mov
sbb
test
dec
stos
and
addl
jo
xor
fstpt
inc
sbb
pop
cmp
popf
lock
mov
mov
xchg
test
mov
scas
incb
lgs
dec
shlb
push
or
xchg
mov
repnz
sub
loopne
add
repz
push
add
jae
cmp
mov
fildl
pop
lods
cmp
push
add
int
in
pop
push
in
mov
mov
xchg
lods
sub
and
add
add
mov
stos
add
xchg
cmp
or
adc
sub
in
adc
adc
loop
mov
add
mov
aam
push
adc
in
sub
les
mov
cmpsl
and
push
test
inc
pop
sbbb
popa
mov
sbb
and
fldenv
mov
pop
pushf
sub
add
popf
sbb
push
add
pop
add
enter
outsl
iret
jnp
jae
jne
add
mov
cmp
pop
lret
adc
fcoml
xor
mov
test
mov
dec
leave
add
enter
jb
cmp
or
incl
push
cmp
rorb
mov
adc
clc
pop
in
out
adcb
and
aas
mov
add
xchg
pop
lahf
sbb
adc
mov
push
fisttpll
loop
test
scas
test
call
inc
add
dec
xor
jne
xor
add
insb
mov
jle
and
fistpl
mov
les
ljmp
imul
xor
aad
scas
add
pop
dec
shl
aaa
mov
cwtl
and
dec
add
ljmp
add
sub
mov
xchg
fldenv
out
loopne
addl
cmp
dec
out
loopne
inc
mov
add
push
scas
or
lcall
adc
add
jmp
inc
imul
lock
clc
inc
cmpsb
je
sbb
jae
packsswb
add
adc
push
pop
jp
cmp
insl
subb
pop
dec
inc
xchg
mov
call
add
movsl
and
outsl
pop
dec
aam
test
pop
xorb
push
rcrb
cmp
je
lcall
mov
pop
pop
shr
jmp
dec
lock
sbb
sub
pop
into
lods
sbb
sub
add
push
sub
add
cmp
test
or
dec
add
pop
pop
and
push
push
or
mulb
fmuls
in
popf
je
dec
je
add
inc
sysret
mov
in
call
sub
push
add
add
add
ret
jg
add
shrl
std
or
test
cmp
mov
inc
push
cmp
adc
jp
movl
pop
imul
daa
adc
add
push
inc
xlat
mov
dec
in
inc
mov
add
dec
jnp
xchg
push
rolb
fs
or
dec
jle
adc
lds
movsl
push
pusha
ret
in
lods
push
pop
mov
sbb
inc
and
gs
andl
dec
adc
clc
loopne
cwtl
push
xor
outsl
mov
dec
imul
add
sub
mov
push
mov
mov
add
ret
cmp
pop
mov
inc
adc
rclb
aas
add
xchg
push
add
jb
je
inc
push
leave
pusha
decb
add
inc
insb
pop
add
call
push
loope
xchg
adc
outsb
jp
lds
or
sub
dec
test
lcall
movsl
pop
scas
add
jne
mov
pop
dec
jge
add
mov
add
test
out
jmp
cs
into
repnz
bound
add
scas
add
dec
adc
mov
idivb
add
mov
cli
pop
pop
mov
pop
test
pusha
ljmp
add
lock
cmp
rcrl
jecxz
cmpsb
xchg
mov
mov
push
pop
pop
xor
xor
inc
aaa
xchg
mov
add
rolb
push
movsl
adc
gs
pop
or
nop
sbb
pusha
dec
sbb
push
push
xor
ljmp
and
jnp
xchg
add
inc
sbb
push
in
dec
add
sti
sub
cmpsl
jl
pop
adc
push
inc
lahf
dec
orl
sbb
cmp
push
frstor
jmp
adc
stos
jecxz
mov
sbb
lahf
add
jae
and
push
mov
add
adc
rcll
dec
xbegin
dec
movsb
ds
xor
subb
adc
add
lcall
add
cmp
sbb
xadd
subl
movsl
lahf
add
dec
nop
or
and
mov
add
rclb
pop
add
paddsw
jbe
cli
push
xchg
divb
sarl
sub
fsubs
nop
inc
add
pop
inc
mov
add
mov
sbb
je
add
in
or
or
es
add
xlat
lret
pop
out
add
adc
cmpb
addl
push
xor
jne
inc
adc
repz
jmp
mov
add
or
mov
push
cmp
aas
inc
popf
adc
daa
loopne
outsb
push
mov
cmc
cmp
sbb
adc
lods
ljmp
je
and
cmp
mov
mov
jge
add
add
adcb
mov
mov
call
or
sbb
add
xchg
jne
dec
or
add
add
int
fcmovnb
xchg
in
add
add
ffreep
push
sti
add
hlt
sub
js
inc
jge
mov
or
adc
rcrb
call
leave
adc
pop
test
out
test
je
add
adc
inc
add
iret
js
fwait
popf
cmpl
adc
jg
adc
and
insb
jno
shrb
dec
add
push
mov
pop
add
xchg
das
add
jecxz
cld
jne
dec
adc
add
adc
jmp
xchg
scas
pop
xlat
pop
outsl
in
cld
loop
mov
jns
pop
push
dec
sub
jmp
ljmp
sti
dec
lds
pop
stc
cli
push
scas
add
sbb
leave
std
add
mov
incl
add
insb
cli
push
pop
or
inc
js
or
inc
xor
jmp
mov
cmp
jne
negl
add
push
pop
loop
aas
pusha
jmp
inc
dec
sub
int
pop
std
inc
mov
adcb
mov
inc
mov
xchg
int
or
pop
or
xchg
inc
daa
adcb
cmp
imul
mov
arpl
adc
rcll
out
add
push
mov
jp
adc
cli
pop
rcll
aad
outsl
inc
inc
add
push
mov
cmovns
popf
shll
push
add
or
addl
mov
xor
xchg
ret
or
sbb
xchg
mov
imul
mov
mov
push
or
pop
ret
clc
seto
shl
add
call
fidivrl
pop
sahf
jne
ret
aas
push
mov
sub
mov
pop
sar
das
inc
mov
add
sub
ficomps
fcoml
mov
imul
mov
leave
jae
push
inc
mov
add
jbe
add
or
outsb
mov
cli
cmp
rolb
rorb
repnz
mov
push
rorb
jns
sbb
cmp
pop
orb
or
cmp
pushf
dec
rcrb
aas
das
push
or
pop
add
add
shlb
push
hlt
xchg
or
and
sub
or
xchg
xchg
mov
push
sbb
cwtl
ret
mov
dec
add
fstpl
cmpb
into
cmp
daa
jne
mov
or
dec
je
add
push
sbb
jmp
mov
cmp
loope
mov
mov
adc
and
add
inc
xchg
loop
push
leave
inc
shl
cld
sub
add
mov
or
add
add
faddl
mov
sbb
mov
mov
enter
push
js
pop
mov
push
clc
push
cltd
sbbb
aas
int3
add
pop
push
lds
test
sbb
adc
ret
in
movsl
add
and
out
add
and
inc
in
ret
adc
jp
add
scas
xchg
daa
add
nop
xchg
push
test
or
dec
pop
fs
or
in
addb
cmp
mov
sbb
push
incl
push
ds
imul
mov
mov
rclb
push
add
push
push
add
or
jl
sub
add
sub
lods
add
cmp
into
mov
and
fsubs
aam
pop
cli
adc
xor
loop
add
cmpsl
arpl
pop
lds
lcall
inc
orl
dec
dec
or
or
cmp
inc
jmp
jne
add
rorl
in
sbb
les
outsb
mov
inc
addb
in
orl
rorb
sahf
out
xor
js
add
mov
lods
push
pop
push
and
xlat
adc
push
xchg
iret
add
addb
pusha
xor
pop
inc
add
or
scas
sbb
mov
pop
and
push
and
pop
pop
std
insb
push
push
lcall
rolb
sti
or
cmp
mov
push
push
ljmp
int
xor
arpl
or
imul
mov
repz
ljmp
add
lret
mov
movzbl
xchg
popf
cmc
sbb
stos
pop
mov
adc
mov
decl
add
andl
jne
lods
enter
add
jbe
in
movsl
repnz
add
lcall
sbbl
cmp
shlb
stos
pop
dec
stos
add
in
ss
mov
and
dec
pcmpeqb
pop
mov
std
les
or
push
adc
mov
pop
int3
ficomps
lahf
pop
pop
add
call
inc
outsl
and
mov
in
jnp
push
and
dec
scas
adc
sub
jmp
and
cmp
push
jg
add
ja
clc
lods
lock
rolb
inc
pop
cmp
xchg
enter
jns
scas
jmp
push
add
add
xchg
xchg
lods
cltd
add
sti
ljmp
inc
cmp
fiadds
pop
add
cmc
pop
sar
push
push
cld
sub
add
sbb
or
test
inc
xor
add
in
xor
pop
cmp
add
sub
call
or
sahf
cmp
sub
loop
enter
fwait
outsl
and
cwtl
add
cmp
out
pop
push
lods
add
pop
enter
js
ja
ja
pop
or
pop
inc
jnp
imul
push
push
inc
inc
in
outsl
add
sbb
mov
add
dec
or
pop
or
or
insb
adc
and
push
push
push
xchg
inc
and
repnz
rorl
ds
push
xorb
or
pop
add
jnp
cmp
mov
nop
in
iret
mov
cmp
jp
cmpb
push
rclb
add
sub
push
movsb
nop
pusha
add
and
shrl
ret
dec
add
fcomps
add
out
das
sbb
pop
fs
add
shr
repz
mov
stos
repnz
aad
pop
or
cmpsb
subb
addl
clc
xchg
push
pop
bswap
cld
pop
into
pusha
nop
xlat
xor
sub
mov
xor
out
fsubrs
add
jno
push
mov
lret
fs
pusha
jo
add
add
mov
inc
add
sbb
bound
ds
aas
adc
jl
ror
fwait
pop
inc
jbe
hlt
add
fs
cmp
sub
add
inc
add
and
lcall
not
and
jl
popa
jmp
lods
push
inc
imul
mov
orb
fidivrl
pusha
lea
add
add
in
dec
xchg
in
dec
stos
and
mov
mov
pop
rol
mov
xor
sub
push
movsl
sub
pop
inc
testb
xchg
sub
loopne
xlat
pop
pop
nop
in
push
mull
orb
ret
pop
pop
loopne
fcom
in
add
or
jbe
add
jne
int
jnp
fsubs
lahf
cmp
js
mov
popf
addr16
lds
mov
sub
jne
sbb
rorl
dec
in
dec
add
sbb
sub
and
mov
pop
and
lcall
ret
aad
mov
add
jmp
xor
dec
cwtl
mov
sub
fdivr
or
inc
push
add
bound
test
jg
mov
xchg
cmp
and
fldl
sub
cmpsl
rcrl
xor
add
pop
pop
add
cld
mov
add
dec
and
and
stos
cmp
out
adc
popa
push
ret
inc
test
rcl
push
jne
push
add
adc
add
icebp
add
pop
push
inc
mov
push
add
mov
nop
out
and
add
or
push
add
repz
int3
loopne
add
add
push
ret
sbb
xor
outsl
add
and
popl
adc
sahf
add
mov
dec
xchg
add
sbb
in
imul
aad
jnp
add
mov
mov
add
sbb
xor
push
lods
aas
xchg
add
sub
sysenter
lret
testl
into
mov
add
add
addl
fstps
loopne
mov
int
sbb
pop
sbb
es
fld
push
inc
pop
jns
cmpsb
rclb
add
or
sbb
imul
insl
cwtl
and
jo
sub
and
movsb
pop
js
add
jl
add
outsb
roll
call
sub
xchg
lea
push
lods
arpl
sbb
outsb
test
xchg
xchg
sarl
push
aas
addb
iret
ds
mov
mov
fisubs
push
and
fcmovb
out
repz
ja
mov
jae
xor
or
cmp
mov
mov
fwait
shrl
add
adc
rcrl
mov
cmpb
repnz
sub
mov
cmp
bound
mov
mov
and
mov
pusha
add
ud0
mov
sbb
ss
inc
stc
jo
add
les
aaa
pop
push
xor
push
and
push
add
adc
out
add
inc
lock
cmpl
test
cmp
movsb
scas
add
sbb
rolb
add
fcomps
fiaddl
sbb
add
sub
insl
lret
mov
rolb
inc
and
jge
xor
imul
cmp
call
mov
cli
in
push
nop
orl
or
inc
call
shlb
add
dec
pop
mov
add
push
mov
jl
fsubrs
pop
sub
js
add
mov
in
inc
lock
rol
jmp
cmc
out
push
test
add
cmp
mov
xadd
jecxz
jb
loope
insb
add
roll
mov
inc
mov
sbb
xor
mov
add
and
adc
arpl
std
xor
push
adc
add
pop
lea
adc
cli
loope
sub
push
add
pop
in
adc
jb
xor
fcomi
mov
push
inc
mov
sub
cmc
or
cld
push
and
push
add
testb
sub
aas
int
sarb
mov
add
fildl
pop
or
add
outsl
mov
add
sbb
dec
addl
mov
repnz
mov
gs
xor
add
pop
xor
mov
loopne
push
adc
loope
jnp
repnz
xor
bound
sub
loope
pop
shl
lock
icebp
add
pop
cmp
add
out
push
sbb
mov
in
xor
add
and
enter
or
jle
lock
add
fisttpl
out
cmc
or
pop
xorb
xchg
mov
jbe
sbb
insb
dec
in
sub
loopne
push
add
push
xchg
loope
pusha
mov
shl
loopne
add
test
push
rorl
popa
add
push
jo
add
fisttps
dec
jnp
pop
ret
popl
mov
dec
inc
nop
bound
sub
xor
loop
pop
mov
jg
pop
sub
adc
add
push
mov
pop
and
inc
loop
rorb
mov
lods
adc
add
push
mov
ljmp
mov
sbb
inc
cli
add
cmp
dec
jnp
clc
push
sbb
pop
add
xor
std
hlt
adc
pop
hlt
push
adcb
push
call
push
jo
into
adc
adc
ss
je
mov
and
seto
add
xchg
lds
les
add
repnz
push
sub
xchg
popa
lea
ds
inc
mov
clc
add
invd
ret
ret
add
test
mov
and
or
int
pop
add
or
push
mov
add
inc
dec
or
add
mov
mov
adc
clc
cli
out
add
pop
pop
sub
ret
add
dec
js
jb
sub
jae
add
fisubl
add
ret
add
repnz
pusha
and
test
jo
aas
cld
cmp
push
mov
daa
mov
inc
jmp
xchg
jle
pop
loop
test
dec
cli
sarl
pop
mov
adc
ljmp
adc
aas
sbb
push
cmp
or
xlat
add
pop
or
clc
test
and
or
ja
incl
jbe
sub
or
mov
jne
dec
cmp
test
inc
pop
add
je
sub
ror
in
imulb
nop
pusha
xchg
xlat
xor
sbb
rol
jg
and
pop
out
add
add
dec
dec
dec
mov
inc
cmp
jp
add
ja
pop
add
mov
rcll
or
xchg
sub
adc
push
dec
push
inc
adc
jno
and
or
and
cwtl
push
outsb
lea
pop
les
add
daa
test
sub
mov
dec
clc
add
addb
imul
add
pop
dec
add
ret
mov
adc
icebp
add
xchg
cmp
es
stc
add
add
jno
orl
xor
pop
adc
xchg
xlat
pop
dec
or
cmpb
add
sti
push
cmp
push
xor
ret
clc
inc
adc
adc
push
cmpl
idivb
hlt
nop
add
fdivr
add
pop
mov
push
aam
dec
adcb
add
cmp
pop
lahf
les
jmp
flds
loop
stos
shl
imul
dec
adc
incl
dec
pop
leave
push
cmp
adc
inc
dec
mov
mov
repz
cmpsl
sbb
jle
rorb
or
push
in
adc
pusha
sub
incb
enter
inc
push
and
fdivl
xor
mov
lock
xchg
add
push
dec
push
shrb
popa
jo
leave
je
js
lods
cmp
add
rolb
pop
add
add
enter
out
add
scas
nop
sbb
cmp
jne
aam
add
fmuls
add
loopne
vcvttps2dq
pop
pop
call
stos
add
test
add
inc
add
pcmpgtw
jmp
mov
xchg
movl
inc
rcrl
inc
and
dec
dec
add
or
and
mov
sub
push
xor
rolb
pop
pop
and
cmp
inc
rol
testl
addl
lret
stc
add
mov
or
ds
in
and
adc
testl
jmp
sub
sahf
dec
add
movb
aam
ss
sub
push
insb
call
cs
mov
fstps
jnp
loop
pop
pop
ljmp
jb
shr
or
jno
cli
cs
add
pop
add
mov
mov
rcl
aas
adc
add
repz
cmp
pusha
or
or
adc
mov
cltd
xrelease
dec
adc
roll
jae
xor
mov
daa
or
push
add
jl
add
inc
xchg
adc
pusha
flds
enter
cmp
cmp
add
mov
sub
lret
pop
add
addl
mov
or
leave
pop
in
jecxz
test
add
mov
lods
jo
getsec
lock
lea
insl
dec
inc
adc
ficomps
fsubs
mov
test
fld
add
pop
and
cmp
push
cmpsb
add
fildll
inc
mov
adc
sahf
nop
jae
loope
lret
adc
and
jbe
add
movb
push
lea
xchg
add
add
push
test
add
sbb
push
popf
sarl
orb
pop
shrb
sti
pop
xchg
iret
sub
out
negl
mov
in
test
mov
scas
push
and
pop
mov
stos
ret
push
jp
and
mov
xlat
loop
add
and
jmp
pusha
sti
and
jns
add
push
cmp
seta
imul
jne
lock
and
loopne
and
ret
rolb
jb
pop
jae
sbb
or
add
sbb
mov
filds
fs
cmpl
js
add
add
pop
inc
cmpb
lock
pop
adc
mov
mov
push
rcrl
gs
pushf
and
or
add
clc
push
pop
mov
pop
and
add
cmp
and
sub
push
and
add
sub
inc
add
shr
mov
inc
gs
add
adc
add
ret
repnz
pop
inc
fnstenv
add
dec
push
popl
jmp
push
and
inc
and
adc
or
push
xlat
add
int3
add
dec
xor
adc
dec
jecxz
roll
sbbl
add
loope
sbb
push
imul
imul
cli
mov
jl
add
mov
mov
or
sar
add
xchg
inc
lock
imul
pop
adc
gs
dec
add
add
lods
ss
fstpl
lret
add
int3
mov
or
push
mov
lods
lock
jno
cltd
adc
shrb
orb
lea
dec
stos
mov
mov
mov
das
add
in
insb
sub
and
mov
sub
cmp
push
ret
push
shl
outsl
mov
test
push
in
fdivp
movsb
or
add
arpl
loope
mov
xor
pop
mov
into
mov
dec
icebp
adc
add
test
xor
xchg
add
mov
cld
push
sbb
mov
in
pop
pop
add
jmp
mov
stos
pop
repz
and
dec
nop
test
nop
push
jo
sub
into
clc
push
cli
les
aas
adc
and
in
fimuls
pop
lea
add
icebp
hlt
imul
rorb
dec
dec
xorb
rclb
pop
sub
rcrb
adc
aad
ret
sbb
lret
sahf
push
dec
mov
jne
lahf
cmpsb
mov
push
adc
add
and
das
lret
leave
and
dec
pop
or
in
es
iret
addr16
in
or
or
lret
mov
sahf
adc
jo
str
popl
lds
jno
aas
jne
pop
fisttps
lcall
mov
jns
push
sub
shr
or
add
xor
ret
mov
cmp
ror
insl
xchg
leave
pushf
jp
add
mov
adc
add
dec
and
mov
and
fcompl
push
or
pop
mov
shr
stos
add
pop
fwait
add
imul
xchg
cmp
lcall
mov
or
push
call
add
shll
or
ss
sbb
addl
test
jbe
adc
add
and
std
adc
loopne
push
jne
push
sbb
push
lcall
xor
add
inc
rcl
push
add
nop
pop
mov
fstpl
enter
xchg
add
out
mov
mov
in
shrl
push
pop
in
lock
adc
cmpsb
int
add
cmpsl
test
pop
xorl
mov
jnp
scas
sbb
push
incl
xchg
jge
add
fimuls
add
inc
mov
addr16
inc
add
mov
divl
mov
out
adc
pop
or
adc
mov
pop
callw
add
in
mov
in
add
mov
push
jae
cmp
xor
cmp
pop
arpl
mov
loop
mov
enter
or
lock
and
add
sar
mov
in
and
sub
aas
mov
inc
popa
rolb
add
push
stos
mov
xchg
and
sbb
add
ljmp
inc
mov
sub
ret
push
fs
pop
xchg
sub
mov
sub
push
push
xor
pop
addb
das
jmp
dec
loopne
or
jne
pop
cld
and
inc
cmp
xchg
add
rcl
pop
sbb
nop
int3
in
or
add
and
mov
add
ror
add
dec
mov
call
or
or
mov
jnp
mov
push
idivb
hlt
shll
enter
clc
add
jnp
add
jne
mov
lods
roll
mov
push
dec
push
sub
and
cld
sbb
add
ss
push
ret
pop
testb
mov
add
pop
loop
add
in
fists
mov
pusha
ret
or
mov
jp
xor
scas
mov
xchg
mov
xor
into
jo
add
fstps
sub
adc
repnz
or
shlb
cmp
in
icebp
add
rorb
sbb
shrb
call
inc
or
add
bound
inc
cli
fiaddl
adc
pop
push
push
pop
daa
sub
adc
bound
or
add
addl
jno
mov
add
frstor
test
adc
mov
rolb
fs
xchg
testb
and
lcall
out
dec
loopne
ja
jbe
add
dec
ret
push
push
pop
js
cmp
leave
xchg
sub
xor
subb
xchg
add
add
add
adc
adc
mov
dec
cltd
rorb
add
bound
sub
add
push
jecxz
jne
mov
fs
lret
gs
xchg
jnp
mov
sbb
add
push
daa
mov
sbb
sub
add
jb
inc
loopne
add
add
xor
dec
lret
icebp
jecxz
enter
cwtl
test
insl
pop
push
cmp
add
and
add
add
dec
mov
subb
dec
dec
pop
xorl
add
push
mov
add
inc
or
inc
pop
xor
add
jno
inc
add
inc
lods
add
fs
imul
ja
adc
pop
out
pop
push
jns
sarl
adc
scas
pop
lods
add
mov
and
stos
mov
add
inc
mov
or
add
mov
clc
add
sub
inc
lcall
loopne
dec
sti
nop
jo
adc
pusha
pop
sbb
mov
add
cwtl
dec
or
sub
ret
pop
push
add
cld
stos
add
sbb
in
arpl
xlat
xor
daa
negl
adc
jne
push
aas
sbb
push
add
jae
push
fcoms
movntq
jmp
cmp
roll
mov
pushf
jmp
out
mov
push
daa
add
test
jg
cmp
pusha
fcoml
lock
insb
and
push
sbb
lds
jp
add
xchg
faddp
call
xchg
pop
in
add
mov
pop
fbld
pop
pop
cs
mov
lcall
cmp
in
inc
jns
sbb
cmp
adc
fiadds
add
into
add
insb
sbb
xor
mov
and
lock
push
and
pop
pop
sub
stc
cmpsl
push
imul
cli
testl
pop
pop
sub
mov
enter
adc
and
shll
pop
sub
add
daa
cli
dec
inc
jecxz
repnz
dec
fsubrp
jle
add
daa
fisubl
call
jno
xor
dec
dec
add
in
push
pop
mov
or
adc
adc
mov
cmp
out
or
mov
and
in
shrl
adcb
mov
mov
notl
sub
add
ljmp
pop
daa
test
jp
add
mov
cmpl
mov
xchg
imul
notl
incl
dec
sbb
data16
shlb
sar
scas
fwait
je
pop
repz
cmc
enter
mov
sbb
orb
js
leave
dec
jbe
rclb
in
iret
mov
loope
loopne
cwtl
or
inc
add
add
repz
mov
lea
cmp
mov
insl
ficomps
add
xlat
pusha
and
cmp
mov
mov
cmp
in
or
outsb
pop
and
andl
inc
enter
and
aaa
mov
add
stc
mov
cwtl
jo
mov
xlat
adc
xor
add
inc
pop
sarl
jne
push
testl
lock
call
lcall
add
dec
cmp
or
push
add
or
test
call
je
pop
push
aam
int3
xor
insb
mov
mov
loopne
bound
aad
add
mov
cmp
in
inc
sbbl
pop
sbbb
sbb
push
nop
lods
or
ud2
stos
adc
test
adc
mov
adc
lods
lock
out
loopne,pn
pop
shrb
cmpsl
enter
xchg
add
or
add
js
jns,pn
xchg
in
sbb
add
pop
adc
mov
aas
jno
dec
add
aam
and
cmp
add
mov
xor
xor
mov
adcb
pusha
nop
pop
add
das
repz
out
outsl
add
lcall
mov
push
or
rol
call
inc
fimuls
cmpb
cmp
negl
add
mov
pop
and
clc
out
push
or
jns
bswap
repnz
push
fwait
or
sbb
test
lods
push
pop
lds
sarb
insl
loopne
inc
push
add
loope
inc
and
xlat
push
add
fucomi
sbb
nop
add
pop
lret
pop
sub
lea
pop
mov
pop
aam
jg
inc
pop
cmp
ss
mov
push
jae
or
sub
push
nop
mov
adc
data16
add
add
inc
fisttpl
sbb
or
push
add
icebp
add
jmp
push
mov
call
add
sti
std
push
iret
dec
xchg
add
add
push
mov
xor
sub
mov
dec
sub
mov
and
idiv
mov
cld
jecxz
add
stc
pop
dec
jns
negl
pop
push
popl
add
inc
sbb
or
push
loopne
pop
les
jno
add
jge
xor
int3
jmp
ds
testl
movsb
aaa
add
xor
add
pop
and
and
pop
add
aas
loopne
push
pop
pop
add
rclb
icebp
or
movsb
add
les
repnz
mov
add
lcall
int3
scas
out
arpl
add
sub
pop
fsubrl
cs
xchg
dec
pop
sub
pop
xor
lds
pop
push
inc
xchg
inc
int
add
roll
call
jmp
pop
lds
pop
inc
xorb
add
cmc
cs
pusha
shl
jmp
xchg
hlt
sub
popa
or
ljmp
nop
push
clc
add
ret
int3
or
mov
repz
in
out
pop
test
sarl
jns
mov
test
loop
sub
pusha
mov
int
in
push
jo
inc
or
inc
adc
orl
xchg
or
andb
fimuls
addl
xchg
sahf
add
xchg
lock
add
in
inc
xor
aas
add
rcrl
add
jb
sbb
out
sub
adc
insl
adc
push
add
cld
scas
inc
add
ret
pushl
and
orb
in
repz
add
in
dec
shr
add
ror
lods
mov
orb
sbb
leave
in
mov
adc
rolb
mov
add
fs
cmp
testb
pop
xchg
cmp
mov
ljmp
inc
dec
push
add
imul
push
add
idivl
and
loop
aad
add
enter
rol
jno
add
scas
or
add
fbld
into
sub
mov
ret
sbb
fs
inc
pop
cmp
shr
adc
pop
pop
sub
sub
jmp
xchg
inc
pop
add
xchg
icebp
je
dec
or
inc
jns
ds
loope
add
mov
xchg
pop
add
das
fsts
xor
and
lds
in
add
sub
add
xor
xchg
pop
mov
lea
sahf
mov
inc
ret
mov
sub
mov
mov
sbb
push
pop
add
or
fiaddl
mov
cmc
jl
or
mov
sbb
add
add
and
dec
push
and
sbb
lret
das
lock
xlat
xchg
shl
jno
dec
push
and
loop
jo
and
pop
cs
push
pop
test
ficomps
ret
aad
add
std
adc
push
mov
mov
xchg
mov
cmpsl
call
faddl
mov
jmp
push
movsl
popf
add
or
stos
enter
mov
and
add
pop
fadds
mov
mov
push
je
int
add
inc
jae
fs
cli
add
dec
fisttps
pop
nop
mov
lret
ret
std
orl
test
fsubrs
sti
enter
lret
and
xchg
mov
add
call
lds
push
dec
movl
dec
jo
xchg
enter
push
fcoms
fiaddl
cld
filds
jecxz
mov
jmp
inc
sub
mov
dec
jo
out
lds
pop
push
andb
add
sbb
pop
data16
add
lret
std
lds
add
xor
lods
sti
leave
sub
fiaddl
mov
sbb
dec
fildl
aas
add
lea
int3
or
mov
cmp
inc
or
add
inc
test
cmp
mov
out
lods
and
sbb
repnz
imul
pop
adcb
in
and
add
mov
jl
cltd
fs
nop
xlat
adc
lock
mov
js
add
fiaddl
jg
in
add
inc
mov
ret
push
rcrb
xchg
xchg
and
ficoml
mov
pop
adc
aaa
add
ss
js
push
scas
aam
or
sbb
sub
filds
mov
aam
loopne
in
mov
sarb
repz
xor
outsl
jl
push
xorb
loopne
in
adc
stc
xchg
or
mov
add
mov
or
inc
adc
sbb
add
push
sub
js
adc
cltd
jae
inc
or
push
insl
pop
push
scas
clc
roll
jo
inc
add
fldl
cmp
orb
add
lret
sub
cmp
add
push
mov
add
pop
push
pop
pop
adc
or
pop
dec
push
xor
test
aas
add
pusha
mov
dec
rcrb
pop
stos
leave
inc
jg
incb
and
neg
add
cmp
aas
pop
dec
xorb
push
sahf
leave
add
add
scas
mov
in
add
cmp
cli
add
addl
or
mov
imul
jno
clc
sub
adc
pop
adc
jmp
mov
dec
inc
test
push
dec
add
andl
jge
add
jne
shlb
inc
imul
pop
add
cmc
and
pop
add
xchg
je
or
xor
dec
mov
test
aaa
adc
push
cmp
je
inc
rcr
add
cs
mov
add
scas
ljmp
jp
add
test
jbe
pop
out
lods
mov
stc
inc
testl
jp
add
adc
add
shl
or
aam
xchg
inc
add
mov
outsb
mov
test
adc
fsubs
xor
jae
add
shlb
and
cmp
pop
cmpsb
adc
in
mov
inc
sti
sbbb
in
mov
imul
mov
dec
xor
add
inc
aas
add
add
push
addb
enter
add
lock
fwait
jne
add
ja
or
sbb
and
test
or
pop
cld
push
add
dec
test
je
aad
fisubrl
jo
add
mov
push
sbb
imul
adc
push
push
fisttpl
call
pop
adc
lahf
clc
cmp
mov
mov
push
shlb
cmp
add
ljmp
cs
or
push
inc
call
test
ret
pop
aaa
ja
hlt
mov
add
sub
pop
sub
add
scas
push
jmp
mov
inc
add
mov
addr16
mov
jne
push
jmp
inc
hlt
or
lret
lds
xor
loopne
push
cs
str
orb
in
add
push
mov
inc
rol
mov
pop
xchg
dec
and
or
push
xchg
pop
out
add
fmull
jle
add
ret
and
adc
push
xchg
mov
add
stos
jbe
add
mov
addr16
lock
push
dec
or
xchg
pop
lock
xchg
push
jns
adc
addr16
cmp
lret
add
cmpl
adc
mov
roll
jmp
push
bound
mov
jl
mov
adc
xchg
lcall
sbb
lock
or
aam
mov
rcrb
in
add
add
shlb
pop
shr
cmpsl
mov
out
or
pushf
add
jmp
pop
dec
ret
scas
jae
dec
test
sbb
push
pop
xchg
and
or
push
pop
sbb
cli
cmp
xchg
mov
and
leave
and
sahf
sub
and
add
adc
add
adc
jp
jecxz
xor
andb
les
sub
enter
or
gs
lds
sub
sti
adc
mov
std
and
out
ret
test
adcb
inc
cmp
scas
add
call
adc
jg
insb
and
or
push
mov
leave
push
fdivrp
dec
inc
adc
lock
cwtl
das
cmp
add
pop
xor
gs
shlb
jne
cmp
ds
push
cmpb
lea
bound
or
lods
mov
add
adc
or
adc
roll
call
or
pop
sub
and
push
call
inc
dec
dec
adcb
shrl
lret
xchg
sub
sti
dec
subl
add
lahf
inc
in
inc
jnp
stc
sub
pop
xchg
sbb
add
push
inc
or
addl
mov
add
and
faddl
pop
dec
orb
mov
push
cmp
pop
setge
lds
xchg
es
or
hlt
or
data16
add
cwtl
ret
pop
leave
cmp
xchg
xchg
test
pop
jb
mov
divl
push
pop
lock
jno
jl
sub
add
push
pop
sub
les
pop
sarb
iret
pop
cmp
pusha
stos
sbb
pop
add
cwtl
fmull
outsb
sub
lret
addl
dec
in
repz
xchg
rcrb
jg
add
fcompl
cwtl
loope
add
aam
mov
jg
push
add
push
dec
lock
mov
add
pop
xor
sahf
push
cmc
dec
inc
adc
test
call
das
fldenv
push
popf
jns
xor
or
add
jb
inc
loope
sbb
cmpsl
push
hlt
push
add
push
or
dec
cmp
sub
inc
add
bound
test
cmp
rol
sub
fs
pop
stc
enter
rolb
add
daa
or
jae
movsl
add
cmp
mov
add
cmp
stos
cmp
jp
dec
imul
xor
inc
xchg
data16
push
cwtl
add
subl
jae
or
push
idivl
xchg
dec
pop
in
gs
jecxz
rorb
add
add
mov
loopne
and
fsubrl
pop
andl
xchg
nop
add
xor
inc
popa
push
xor
fidivl
jns
scas
push
dec
je
add
scas
cmp
xor
inc
jmp
clc
or
imul
loopne
outsb
jb
add
push
lcall
add
or
roll
sub
and
push
mov
dec
and
jae
add
add
int
mov
pop
pop
jl
adc
flds
das
xorb
and
repnz
or
add
js
fidivs
mov
pop
mov
xchg
add
push
movsl
nop
jo
and
or
jecxz
es
add
pop
rclb
mov
add
and
cwtl
dec
mov
add
mov
fsub
sub
and
add
cmc
jle
mov
js
add
stos
faddl
xchg
jp
clc
adc
pop
imul
shl
subl
inc
push
add
push
scas
sbbb
and
add
sub
std
mov
roll
leave
subb
ltr
jl
xor
mov
mov
pop
push
mov
push
add
sub
push
pop
add
and
cli
sub
scas
andl
add
mov
jo
pop
pop
lea
add
sbb
jle
hlt
jge
jg
add
js
lods
cmp
add
stos
divl
dec
roll
movsl
movsb
ret
sbbb
or
mov
dec
cmp
rorb
sub
lret
add
inc
mov
wbinvd
ss
arpl
add
orl
popw
mov
repnz
add
and
jge
and
incb
push
cmp
inc
xchg
mov
mov
sub
ret
call
notb
mov
popa
out
or
lods
test
sahf
push
leave
sub
faddl
pandn
inc
clc
iret
rolb
mov
mov
mov
addl
inc
or
aaa
loope
cmpb
sub
jg
xchg
add
fcoml
lock
movsl
bound
hlt
mov
cmp
cs
fsubs
jmp
add
jo
push
add
outsl
and
xchg
or
push
inc
in
ds
add
rcll
call
jge
pusha
sub
cmp
add
jae
filds
sub
lret
les
stos
inc
inc
xor
sar
sub
cmp
lods
sbb
push
lock
pop
js
add
mov
clc
lret
add
outsb
jge
movsb
inc
in
or
cmc
or
pop
mov
int3
stc
or
pop
push
xor
inc
mov
push
and
sub
add
or
push
mov
add
sub
inc
xlat
xchg
dec
add
ret
repnz
or
inc
rcrl
cmp
mov
leave
imul
adc
push
movb
js
fnstenv
rcr
add
pop
inc
xor
add
inc
mov
and
sbb
daa
adc
push
xchg
or
add
xor
sub
sbb
adc
mov
shlb
lock
xor
icebp
fmuls
jo
out
mov
add
or
push
mov
dec
sub
imul
lret
push
iret
hlt
xor
inc
ret
sbbb
nop
data16
jmp
shrl
inc
pop
lahf
mov
add
pop
ja
xchg
shll
dec
add
or
mov
icebp
addl
dec
inc
sarb
popa
sub
lcall
test
or
hlt
repz
xchg
xchg
sti
icebp
add
cwtl
or
lcall
xchg
ror
dec
add
sub
sbb
add
pop
cmpsb
xor
push
add
fs
and
add
adc
fcom
or
adc
lret
dec
fldt
adcb
dec
loope
dec
dec
loop
sbb
add
hlt
in
cltd
mov
jne
ffreep
ret
jae
inc
fdiv
sbb
addr16
popa
sub
loopne
insl
push
cltd
push
push
or
fadd
lock
add
js
push
mov
nop
pusha
cmp
sbb
inc
pop
push
pop
je
add
imul
add
mov
pop
int
pop
aam
ljmp
and
fcompl
jmp
jae
add
dec
test
fistps
pop
sbb
cmp
mov
push
icebp
add
outsb
xchg
push
fidivrl
add
shr
fsubs
or
cmp
incl
and
add
out
sbb
push
and
in
add
jge
movlps
mov
shlb
sbb
test
fwait
lahf
jne
mov
add
stc
mov
adc
shl
cmp
and
jo
enter
jecxz
adc
sub
jge
cs
add
in
jb
das
push
add
and
mov
cmp
add
imul
sbbb
sbb
xchg
add
cmpsb
inc
mov
pop
xor
cmpsl
arpl
fwait
add
add
sbbb
rol
inc
ljmp
imul
or
repnz
fimull
jns
mov
add
mov
popa
call
testl
repz
lock
mov
ja
scas
add
sbb
add
sub
sbb
aaa
inc
pop
fwait
rol
add
mov
push
call
mov
mov
lds
add
xchg
dec
push
jp
mov
lahf
push
enter
popa
data16
add
ret
push
rcl
mov
adc
arpl
or
lods
dec
inc
sbb
dec
out
jecxz
rol
cmp
xchg
std
out
add
aad
pushf
push
pusha
cs
pop
dec
ja
lfs
add
pop
mov
jg
js,pn
andb
xor
dec
add
push
cld
and
and
xorl
or
ja
repnz
ret
pop
loop
add
jb
or
jle
push
test
mov
xlat
inc
add
cmp
mov
cmpsb
mov
xlat
add
push
pop
mov
shlb
sarl
sbb
jbe
inc
mov
pop
sti
mov
mov
add
dec
stos
in
jle
lock
jl
push
jb
ljmp
lcall
fimuls
stc
xchg
or
mov
add
sbb
pusha
cwtl
imul
and
jecxz
push
aas
pop
push
push
or
insb
jnp
addl
fsubr
mov
and
orl
push
repnz
lds
sti
and
mov
mov
into
cmpsl
arpl
add
sarl
pop
xor
adc
rolb
jmp
hlt
sti
mov
pop
rcll
add
rcrb
add
add
sbb
jb
enter
adc
adc
cmp
inc
xor
insl
add
mov
fcmovnu
jae
push
mov
lods
add
add
jb
imulb
cmp
test
sahf
xchg
adc
add
adc
lods
pop
push
add
push
mov
jge
jo
mov
std
jl
mov
loopne
add
xchg
cld
xor
jecxz
out
sbb
out
faddl
pushf
and
cmc
roll
shll
inc
push
mov
mov
loopne
sbb
xor
enter
push
js
aam
cmp
add
xorl
lds
adc
mov
pop
push
ret
add
test
add
pushf
lgs
mov
push
lcall
add
xchg
xchg
xchg
nop
loop
pop
popf
adc
stos
enter
lock
testl
xorb
test
and
push
fdivp
mov
mov
add
inc
or
and
pop
leave
in
push
xor
push
add
out
sbb
add
cmp
sbb
or
adcl
test
test
in
pop
cltd
pop
loopne
and
es
mov
push
add
cmp
xlat
jnp
nop
add
add
clc
push
aas
jne
addb
and
shlb
dec
add
push
mov
in
xor
ljmp
pop
sbb
ss
lea
cwtl
loopne
sbb
cmpl
shrb
fcompl
and
and
xchg
or
test
xor
bound
adc
lahf
shlb
add
sub
and
daa
sarb
repnz
or
in
les
adc
jmp
or
add
cmp
add
pop
jb
and
pop
xor
sub
shrl
call
inc
push
and
mov
fiaddl
pusha
xchg
movsb
xchg
sub
dec
sbb
imul
js
add
fsubr
pop
push
mov
add
aam
fisubs
outsl
dec
xor
loop
add
pop
cwtl
xor
incl
and
inc
jmp
add
add
test
cmp
add
fmull
dec
cmp
test
or
test
decb
adc
loop
inc
adc
aam
lret
mov
es
pop
mov
add
imul
push
fcoml
add
and
or
xor
fisttpll
push
and
lsl
inc
sbb
mov
int3
push
lock
add
jno
add
push
push
add
add
adc
mov
imul
inc
add
or
mov
lret
cmp
bound
pop
dec
fldcw
add
loope
jg
mov
inc
pop
dec
in
les
adc
insb
sbb
mov
hlt
sbb
es
sbb
dec
popa
cltd
dec
and
in
add
fs
cmc
scas
les
pop
or
loopne
add
outsl
cmp
in
addb
loope
and
hlt
sbb
jo
sub
pop
leave
pushf
push
inc
cmp
or
push
add
pop
enter
sub
add
mov
out
in
jmp
jle
movsb
mov
xchg
rolb
dec
cmpl
inc
in
adc
sub
push
xchg
inc
and
das
add
pop
pop
jmp
arpl
cld
movsb
push
cli
adc
inc
adc
sbb
add
loopne
inc
popa
pushl
add
mov
adc
cld
adc
xchg
add
sar
dec
invlpg
lock
ret
pop
inc
and
loopne
pop
push
add
add
sub
xchg
add
push
cmc
aas
mov
cmp
inc
test
roll
add
in
xor
fcmovbe
add
out
dec
cmp
jle
imul
push
push
add
inc
mov
push
and
adc
dec
push
add
pop
inc
mov
inc
and
and
jmp
add
movsb
sbb
aam
dec
push
ror
push
int3
rcrb
lods
gs
ss
add
aam
addl
cld
and
loopne
cli
inc
add
dec
iret
lcall
ficoml
mov
dec
ret
jb
adc
lcall
add
out
push
dec
test
push
lds
push
and
mov
sub
or
xor
pushf
adc
in
insl
popf
into
es
sbb
fwait
pop
mov
or
xchg
sub
xor
andl
push
ds
shrl
faddl
dec
btr
aam
adcb
pop
push
push
icebp
pop
mov
add
mov
lds
push
loopne
insl
mov
xor
fiadds
mov
loop
cmp
add
and
xchg
dec
mov
movsb
in
leave
or
call
add
mov
lret
dec
inc
cmp
ds
push
shl
inc
jg
leave
mov
outsb
jb
cmc
roll
mov
or
add
add
stos
les
adcb
lret
rorb
inc
filds
call
scas
mov
push
shl
and
pushf
out
lock
xor
clc
add
daa
dec
fdivrl
adc
mov
sahf
les
sarb
call
sbb
sub
add
pop
pop
test
daa
insb
das
jmp
or
loope
cmp
jbe
sbb
pop
mov
sub
jo
dec
jno
pop
sub
sub
sub
mov
add
adc
iret
mov
bound
pop
add
call
pop
ret
int3
and
or
sub
sbb
out
add
jb
in
sbb
inc
es
dec
lea
fldl
mov
cmpb
dec
add
add
sbb
in
or
into
in
xchg
lds
mov
jns
adc
pop
adc
imul
mov
loopne
ljmp
push
sbb
and
daa
jge
inc
xor
fcompl
xchg
sbb
push
mulb
ljmp
cltd
adc
jle
in
push
imul
je
and
mov
outsb
pop
and
xchg
in
pop
lsl
push
xor
mov
mov
dec
pusha
add
lea
cmp
cmp
jae
add
or
add
adc
sbbb
xor
or
pusha
pop
rcr
loopne
or
mov
std
add
add
adc
adc
cmpb
loope
jmp
push
out
loopne
test
adc
mov
dec
push
pop
test
adcb
add
or
and
adc
pop
out
shll
add
push
sub
pop
loopne
stos
shlb
add
decb
adc
add
jae
sbbl
adc
into
loopne
call
ret
and
lods
inc
jmp
ds
xor
repnz
xchg
add
xchg
mov
push
mov
sub
adc
sbb
fcoms
push
add
xor
add
or
stos
mov
cmp
mov
push
xchg
and
repnz
or
mov
pop
mov
inc
pushf
sbb
lds
jmp
pop
popa
dec
fldt
push
inc
ret
adc
adc
add
and
push
xchg
daa
adc
loopne
add
loopne
clc
andl
mov
inc
js
add
push
pop
add
add
cmp
loope
inc
jnp
add
jl
mov
leave
cld
mov
out
mov
and
shr
sbb
and
add
rcr
mov
insb
cmp
ret
imul
jmp
ljmp
add
add
push
sbb
jg
ljmp
sbb
or
pop
cwtl
jge
xchg
jg
add
pop
adc
rcrb
es
pop
and
adcb
ds
mov
in
les
enter
and
mov
sub
push
cmp
sbb
cmp
cmp
inc
or
int3
lods
mov
aam
jne
daa
inc
push
addb
add
out
mov
mov
push
add
out
rorb
loop
pop
lret
mov
ret
xor
add
jae
daa
sbb
fmuls
adc
in
sub
cmpsb
or
add
sub
xor
test
inc
inc
sub
or
rclb
xor
add
aaa
mov
sbb
inc
xor
test
cmp
orl
test
aaa
cli
mov
mov
sbb
pop
call
inc
add
rorl
sub
push
add
pop
xor
push
cwtl
rorb
adc
ret
rclb
xchg
jp
jecxz
in
push
sub
jb
add
xor
push
roll
incl
das
pop
dec
mov
wrmsr
adc
adc
sub
add
cvtdq2ps
sbbb
dec
loop
push
add
inc
lea
xlat
icebp
ds
out
add
inc
loope
inc
add
cwtl
push
push
out
mov
mov
lar
push
test
int
add
lret
call
mov
mov
add
lea
imul
lock
rolb
mov
ss
add
push
xor
mov
mov
rcll
addl
mov
add
lea
push
jbe
add
call
dec
or
jge
add
fsubrs
add
add
adc
pop
mov
pusha
shlb
vmread
inc
jmp
jne
push
add
xorl
add
add
andl
push
mov
dec
xor
dec
mov
mov
sbb
gs
adc
sub
pop
push
xor
add
cmp
mov
inc
dec
lret
call
jae
pop
imul
or
dec
adc
je
lea
mov
push
mov
sbb
inc
shrb
or
movb
mov
int3
jne
lcall
jmp
sbb
add
shlb
mov
xor
or
jne
push
adc
test
call
mov
push
jge
add
cs
scas
or
int3
add
sbb
push
mov
add
mov
mov
nop
inc
push
jns
dec
xchg
push
jae
xor
mov
fst
push
inc
push
cmpsl
sub
add
jmp
inc
lods
jae
add
and
or
shr
lea
pop
addb
jge
cmpsb
inc
cli
mov
data16
mov
fsubs
negb
xchg
fwait
jb
pusha
mov
pop
adc
sbb
jp
int
push
push
xchg
hlt
into
js
jle
sub
xor
iret
jo
rcrl
pop
ljmp
movsl
insl
and
mulb
fadd
repnz
sub
add
ja
mov
mov
mov
jbe
xchg
adc
call
addl
add
in
pusha
inc
add
std
pop
mov
push
add
lds
shl
data16
sub
das
add
inc
dec
xor
roll
xlat
push
push
jbe
add
jns
xchg
jnp
add
add
and
out
inc
out
or
push
and
xor
sbb
clc
jmp
adcl
insb
test
test
rcl
fildl
xlat
pop
or
pop
adc
fadds
add
mov
ret
loop
mov
jmp
sbb
enter
xchg
pop
mov
pop
push
in
add
bound
enter
inc
lea
xchg
jge
lods
rolb
sub
roll
adc
mulb
jnp
xchg
or
add
imul
bswap
or
nop
sbb
cld
push
jecxz
sbb
outsb
sub
sub
add
sub
sti
fwait
andl
js
mov
or
fucomip
mov
inc
mov
xor
ja
cmp
enter
adc
andb
fwait
add
xor
cltd
cmp
mov
test
cli
ds
fcompl
pop
fsubs
add
xchg
xor
or
lock
and
adc
or
xchg
fcoml
out
pop
subl
add
xchg
add
lock
add
and
inc
adc
jno
popf
popa
xor
pusha
add
clc
and
inc
call
std
rorb
enter
bound
lods
add
add
inc
hlt
iret
or
xchg
cli
adc
in
xchg
test
rcrb
nop
and
inc
sub
subl
pop
mov
ds
add
add
dec
les
cld
sbb
xor
mov
and
add
push
dec
add
lods
lea
rcrb
mov
cmp
sbb
pop
fnstenv
hlt
adc
and
push
data16
dec
mov
mov
fmuls
int3
loopne
xchg
and
sbb
enter
xor
lods
inc
stos
add
jmp
push
push
mov
rorl
bswap
mov
jg
pushf
or
ret
add
cmp
add
movsb
inc
je
fmull
in
cmp
repz
call
pop
push
sub
stos
scas
pusha
or
aad
sub
push
lea
dec
add
add
test
sbb
or
add
andb
out
rclb
outsb
je
insl
loopne
jb
add
fiaddl
xor
add
mov
lahf
pop
xor
inc
mov
add
in
or
mov
pushf
add
push
or
mov
add
or
test
aas
sbb
mov
gs
insb
jo
pop
adc
js
push
out
test
clc
mov
or
xchg
and
add
inc
xor
mov
fxch
outsl
push
outsl
pop
pusha
pusha
push
js
sbb
fists
test
mov
push
out
shr
out
shr
fsub
loopne
cmc
lock
pop
jae
cld
adc
sbb
or
pop
mov
add
add
gs
jno
pop
sbb
mov
add
xor
popa
xcrypt-cfb
cmpsl
iret
insb
and
les
mov
sbb
inc
pop
shl
mov
add
add
adcb
mov
push
dec
dec
dec
dec
add
push
push
push
pop
push
push
push
nop
jbe
push
call
inc
dec
dec
add
adc
arpl
addr16
jo
jb
add
ja
jp
andb
popa
imul
les
lods
stos
fs
cmpsb
sets
jae
add
adc
mov
dec
xor
fcomps
sbb
inc
add
call
fdiv
lock
nop
cmp
pop
and
incl
ret
inc
xor
jl
or
andl
cwtl
push
in
mov
call
inc
add
adc
ret
pop
xchg
js
push
inc
test
mov
cmp
lock
in
adc
dec
cmp
fs
pop
jl
lea
das
shl
jp
add
push
subb
adc
xchg
sbb
add
sbb
and
add
bound
scas
orb
in
repnz
ret
or
mov
shll
add
add
mov
push
or
or
loopne
or
fisttpl
add
dec
add
lods
shrb
dec
add
xchg
call
addr16
inc
sbb
mov
and
pop
jg
inc
and
dec
pop
mov
int
test
arpl
mov
lcall
repnz
and
mov
lds
lds
add
and
push
mov
sbb
nop
pop
adc
int3
mov
rolb
int
mov
hlt
lock
pop
cmp
rcrb
nop
or
inc
mov
jge
xor
call
push
clc
cmp
les
ss
mov
jne
nop
sbb
sbb
jl
call
xor
xor
loopne
pop
sub
jno
mov
pop
loope
inc
or
cmpsl
jae
inc
mov
shr
xor
shlb
add
cltd
enter
xchg
rolb
adc
sbbb
subl
mov
int3
clc
call
addb
in
jmp
mov
and
mov
in
xor
adc
cwtl
fsubs
sbb
add
push
mov
add
fwait
or
cmp
add
sar
fbstp
jae
sub
pop
movsb
pop
inc
lock
mov
and
xchg
rorb
xor
nop
inc
adc
jns
add
std
cltd
and
test
rol
add
or
dec
xor
mov
add
push
movsb
pop
sbb
and
leave
sub
xor
cld
rcrb
xchg
add
cmpsl
xchg
push
and
dec
xchg
shl
and
jl
inc
adc
adc
pop
push
loop
sti
sub
sub
pop
test
pop
and
clc
cld
mov
add
or
dec
xor
add
out
dec
cld
pop
mov
adc
adc
inc
mov
pop
sub
outsb
lds
mov
lock
in
push
or
mov
cs
cmp
clc
adc
jbe
xchg
sahf
mov
fucomip
cli
push
add
addb
or
push
pusha
sub
testb
mov
les
add
dec
hlt
sbb
push
push
push
dec
and
add
cmp
dec
adc
bound
xchg
add
or
mov
sbb
sbbl
inc
add
mov
cmovs
xchg
into
out
fsub
hlt
add
inc
push
mov
add
cmp
dec
pop
xchg
jo
and
mov
loopne
cli
add
push
pop
loope
and
mov
or
bound
and
cmp
mov
dec
ljmp
jge
add
dec
and
insb
xchg
test
mov
fcoml
or
jle
inc
in
mov
popa
sub
dec
xchg
ds
inc
mov
add
imul
cwtl
insb
xor
aas
cmp
xor
adc
je
pop
jne
add
outsb
out
push
popa
push
dec
lret
inc
inc
fbstp
add
inc
arpl
mov
out
mov
jl
mov
movsl
pop
lock
mov
pop
dec
fildl
outsl
daa
and
jp
push
jg
aam
data16
inc
in
jecxz
push
sub
inc
xchg
subl
push
rcrb
push
sub
xor
add
push
add
pop
mov
add
jne
mov
xor
or
cs
jle
pop
cmp
mov
cmpsb
or
arpl
jns
jle
sahf
jmp
cli
imul
adc
inc
je
cltd
sbb
xchg
add
fisttpll
jo
pop
add
rclb
mov
out
jae
arpl
dec
outsl
std
pop
xchg
dec
popa
add
or
cmpsl
adc
inc
punpckhwd
dec
sub
fmuls
ficoms
xchg
inc
outsb
jb
leave
sub
jmp
xchg
lcall
mov
fisttps
jbe
mov
push
mov
jae
adc
popf
stos
cltd
call
sbb
push
outsb
push
push
inc
cmp
pop
cltd
insl
xor
je
or
or
dec
adc
inc
pop
add
dec
cmp
add
and
stos
add
mov
fsubr
xor
fs
push
adc
inc
call
jns
repz
insl
add
je
cmpsl
loop
jo
add
jp
cmp
dec
aam
push
add
pop
cltd
jns
and
dec
cli
lcall
test
dec
dec
incl
popa
pop
inc
inc
outsl
js
dec
hlt
adc
dec
mov
enter
jle
add
pop
push
and
xchg
cmpsb
push
add
sub
out
outsb
xadd
adc
mov
ret
mov
jne
xchg
inc
fimull
jo
xchg
les
jne
add
dec
test
add
add
pop
gs
cmpsb
fisttpll
in
adc
subb
and
inc
push
int
and
push
orb
add
xor
pop
loope
sub
dec
push
mov
inc
andl
shlb
sub
pop
adc
aaa
add
cmc
cltd
lret
lods
xor
cli
jge
cmp
pop
mov
shlb
push
adc
cmpb
sub
mov
lahf
fsubrs
movsb
and
pop
iret
repnz
push
dec
cmpsl
push
mov
aad
sbb
jnp
daa
loopne
sbb
sub
ret
int
push
divb
adcb
rcrb
repnz
pop
test
mov
cmpsb
insl
mov
add
pop
scas
mov
enter
sbb
popa
jo
arpl
inc
sub
mov
push
mov
cltd
pop
sbb
mov
lret
mov
out
iret
xor
sub
mov
mov
cmp
push
mov
push
mov
push
jae
cmpsb
adc
addb
sub
addr16
dec
jge
and
and
jo
lret
cmp
es
push
adc
les
test
jb
inc
data16
pop
inc
xchg
push
cmpsb
stc
ror
lcall
add
and
sbb
lods
adcb
verr
insl
or
add
roll
push
mov
mov
add
mov
sub
or
pop
faddl
adc
add
cmp
ja
gs
pop
sbb
lcall
push
inc
inc
adc
jp
inc
mov
and
movsb
add
mov
push
adc
outsb
and
add
mov
add
popa
pop
data16
push
push
stos
mov
jbe
fstpt
clc
out
add
dec
push
jo
sbb
pop
outsb
in
push
adc
adcb
addr16
or
aad
jo
cmpsl
add
pop
jo
add
dec
outsb
add
pop
xor
daa
sub
cmp
xchg
cmpsl
inc
dec
out
xchg
push
mov
push
jb
jp
xor
repz
repz
repz
repz
loop
ljmp
add
or
adc
sbb
and
sub
jmp
inc
xchg
dec
mov
rcl
push
jb
jp
xor
repz
repz
repz
repz
clc
push
add
jb
je
jbe
js
daa
jp
jl
jle
enter
pop
xor
popf
int
adc
add
popa
and
push
leave
test
jl
add
aaa
sbb
cmp
ret
push
aad
fistpll
pop
jmp
cmp
daa
sbb
cmp
pop
xchg
outsb
lods
cmp
cmp
test
scas
aas
mov
movsb
jle
or
out
pop
cmp
add
inc
sub
xchg
push
dec
fiaddl
movb
sbb
xor
jg
rcrl
cmp
add
sbb
cmp
add
sahf
inc
push
dec
lahf
push
pop
je
jbe
js
jp
jl
add
xchg
inc
xchg
mov
add
and
sub
add
xchg
icebp
scas
stc
mov
sti
andl
add
fmull
cmp
sbb
test
sbb
cmpsb
xchg
mov
out
out
ret
sbb
push
xchg
pop
decb
pop
ret
sti
and
xchg
mov
lret
push
jle
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
push
sbb
addr16
add
cltd
xchg
mov
lfs
loope
xor
add
stos
shll
add
jbe
js
bound
ss
mov
leave
mov
loop
inc
shlb
fstl
cmp
insl
cmp
xchg
cmp
cmp
aas
repz
sub
loopne
in
call
lock
hlt
test
das
cmp
cmp
xchg
cmp
lock
ds
push
push
and
shll
aas
sub
xchg
pop
mov
faddl
xor
jl
pop
pop
imul
xchg
daa
mov
loopne
add
or
inc
push
scas
mov
add
add
adc
and
ret
sub
jecxz,pn
repz
in
call
adcb
push
repnz
or
inc
add
mov
cmp
push
xchg
mov
inc
xchg
addr16
xchg
and
hlt
hlt
fildl
xchg
cmp
fs
jp
mov
adc
popa
pusha
str
xor
leave
outsl
rorl
fstp
sub
sbb
xor
jbe
mov
sarl
jmp
aaa
jb
je
sbb
push
cmp
add
addl
rolb
cld
cmp
jae
dec
cmp
jle
add
pop
cmp
int
iret
call
inc
sbb
add
jmp
mull
incb
dec
add
pop
dec
sub
cmp
lahf
insl
daa
je
jnp
addl
repz
mov
repz
repz
repz
jmp
lock
lock
daa
and
addr16
hlt
dec
add
imul
loopne
in
lds
inc
pop
xor
inc
leave
dec
daa
mov
out
mov
mov
lahf
filds
jmp
leave
jnp
push
sub
cmp
aaa
and
ret
and
loopne
and
ljmp
in
adc
out
iret
lahf
inc
jmp
cmp
xorl
icebp
cmp
cwtl
cmp
cmp
enter
fdivrs
loopne
call
sti
cmpl
rcrl
fldenv
loope
gs
sub
pop
xchg
pop
daa
pusha
inc
push
in
xchg
in
xchg
clc
mov
repz
cmp
cmp
call
leave
jle
cmp
push
pusha
pop
cmp
rcrb
push
jle
jle
jle
jle
adc
mov
iret
rorb
fmuls
sar
cmp
or
cmp
add
cmp
cmp
jg
popf
jmp
xchg
addb
mul
outsl
xchg
ljmp
daa
xlat
mov
enter
lock
out
in
add
daa
or
or
adc
scas
or
jge
fs
inc
mov
mov
lahf
mov
cltd
les
cmp
sbb
sbb
and
xor
in
pop
xchg
sub
fs
push
ret
je
js
nop
lock
mov
adc
dec
sub
and
aam
cs
or
adc
scas
sbb
and
and
sub
sub
xor
inc
lock
hlt
push
cld
je
js
jl
cmp
aas
dec
in
sub
add
int3
clc
lahf
aam
fsubs
hlt
sarb
and
jp
xor
repz
insb
shlb
jl
sub
xchg
cs
mov
aas
xchg
aas
movsb
aas
les
int3
aas
sarb
aam
fsubs
fmul
aas
aas
in
call
loope
cmp
push
xor
sub
fisubs
mov
iret
je
jl
sbb
loope
call
cmpsl
stos
and
lret
add
scas
in
test
hlt
add
mov
xor
cmp
ret
cmp
inc
loop
jmp
push
popf
fs
nop
xchg
xchg
dec
push
pushf
movsb
and
data16
sbb
hlt
push
add
shll
sub
or
and
inc
xchg
loop
add
and
jmp
popf
ja
lcall
mov
loopne
push
mov
add
cld
push
xchg
add
test
movsb
pop
add
add
sub
dec
jecxz
test
dec
fs
shlb
mov
sbb
femms
mov
rol
fxch
loope
call
cltd
outsb
out
add
lock
and
clc
sub
sub
stc
repz
in
xchg
cltd
gs
mov
ss
cld
jb
je
jbe
js
jp
jl
add
pop
xor
add
lret
xorl
rorb
cmp
cmp
or
fisubs
loop
add
ljmp
negb
xchg
incb
sbb
rcrl
push
fsts
adcb
sbb
push
clc
add
jb
pop
cmp
sahf
nop
mov
push
jo
adc
pop
jnp
nop
pop
add
xor
popf
stc
rclb
add
ret
add
js
pop
and
addr16
cltd
pop
mov
add
popf
test
push
dec
movl
inc
ret
and
leave
jge
jmp
add
pop
fiadds
sub
mov
mov
pusha
sbb
jmp
dec
add
ret
bound
fdivrs
sbb
pushf
mov
add
xchg
shlb
mov
mov
lock
pop
pop
add
jbe
jge
sbb
push
jns
sub
adc
xor
xchg
mov
xor
xchg
add
push
sahf
lahf
xlat
pop
add
xchg
hlt
mov
and
in
sub
das
xorb
jle
or
push
add
cs
outsb
lock
cltd
sahf
mov
dec
int3
and
in
call
icebp
add
cli
addl
jmp
lar
lcall
add
xchg
ret
xchg
add
jecxz
nop
inc
add
loope
ss
push
and
mov
fadd
loope
aaa
sub
incl
inc
pop
addr16
mov
ficoml
mov
mov
adc
sbb
jb
add
jmp
dec
mov
add
pop
lods
xchg
fs
scas
insb
add
jl
mov
test
mov
mov
cs
mov
mov
cmp
les
int3
mov
lret
add
push
and
lahf
add
add
or
fcoms
pop
adc
add
fsubrl
or
insl
mov
xchg
insb
xor
jl
das
out
cmp
add
lods
lret
mov
call
add
aas
fsubrl
in
addr16
ds
add
or
adc
lock
add
sub
sahf
cmp
cmp
repnz
sub
adc
je
movsl
mov
js
or
test
push
out
jle
je
add
dec
rorb
ret
movsl
aam
fsubs
in
leave
lock
mov
lret
sahf
leave
push
roll
jle
fcoms
xor
dec
adc
xchg
ja
or
js
jp
jecxz
nop
xor
cwtl
loopne
lret
add
push
xor
adc
test
je
paddd
or
mov
sti
cmp
and
jle
jno
add
mov
and
ret
in
lock
cmp
jmp
std
rcrl
daa
mov
xor
cmp
inc
dec
dec
js
jp
push
lahf
sar
mov
rcll
add
mov
cmp
push
cmp
in
imul
add
mov
out
loopne
cmp
or
add
inc
movsb
out
lret
mov
dec
cmp
lret
add
adc
push
dec
aad
scas
add
xchg
mov
add
mov
or
repnz
xchg
jne
add
call
pushf
push
adc
or
push
daa
cmp
imul
xorl
aaa
xchg
add
mov
sub
add
cmp
nop
add
xchg
aas
pop
and
ja
dec
pop
pop
or
cmp
mov
sub
ds
ds
add
mov
rcrb
ja
mov
sti
adcb
xchg
dec
xor
nop
xor
or
in
test
ret
loope
cmpsl
outsb
test
das
xor
dec
ss
aaa
cmp
xor
inc
mov
mov
push
ret
mov
aad
out
cli
mov
adc
push
mov
dec
pop
sbb
xchg
and
xor
pop
add
pop
cld
dec
or
cmp
dec
fwait
imul
call
xchg
outsb
nop
insb
imul
aas
repz
push
or
add
dec
and
dec
dec
push
pop
pop
push
gs
insl
add
jns
push
mov
xchg
jbe
repz
addr16
mov
rcrb
jle
popf
fistps
hlt
cmp
add
mov
cmp
dec
adc
inc
insl
mov
call
sbb
int
dec
jmp
cld
ret
add
cmp
xchg
adc
add
shrl
loop
cmpsl
push
xchg
popf
adc
mov
ret
ja
jge
add
loopne
add
mov
pop
aas
shll
pop
xchg
std
pop
sbb
jns
add
je
pushf
pusha
pop
cld
add
inc
shlb
lock
push
jp,pt
sbb
add
lret
xchg
xlat
ret
pop
add
loope
mov
in
jge
iret
pop
and
subb
pop
mov
ret
or
sahf
mov
enter
clc
stc
cld
sti
test
in
and
rolb
inc
das
pop
add
out
in
mov
add
and
cwtl
repnz
repnz
mov
in
add
xchg
test
or
or
leave
push
add
in
xor
in
mov
push
adcl
out
sbb
repz
andb
add
ret
jle
inc
out
mov
daa
mov
incl
mov
std
cld
add
or
inc
incb
push
dec
das
fnstenv
rolb
add
clc
xchg
cld
jb
add
mov
add
cmp
fisubl
in
call
push
jge
mov
xor
out
daa
inc
adc
mov
int3
shrw
sahf
das
add
pop
jp
xorb
aas
leave
mov
xchg
jmp
and
test
nop
mov
jbe
adc
in
mov
arpl
in
mov
in
out
inc
repnz
mov
cmpb
in
inc
icebp
xchg
add
je
and
add
and
jl
sbb
xor
out
mov
lds
leave
setbe
pop
test
ja
add
and
popf
xchg
sbb
inc
sbb
mov
add
ss
jecxz
adc
add
push
jae
jg
xchg
and
cmp
idivb
jbe
inc
ret
mov
pop
sbb
jle
popf
jmp
push
jb
add
xchg
js
jp
jl
mov
and
push
add
aas
jae
loopne
rcll
jmpw
popa
in
and
out
lock
dec
mov
push
sbb
xor
push
cmpsl
push
xchg
xchg
loop
mov
aas
and
popa
or
jmp
push
repnz
cli
cmp
das
cmp
xchg
es
cmp
aas
inc
and
dec
cmp
jl
test
lahf
xchg
scas
sbb
ret
ret
repnz
xor
enter
cmp
add
fwait
push
mov
out
scas
xorl
aaa
pop
mov
xchg
add
pop
xlat
rorl
sbb
and
shrb
in
repz
add
dec
pop
or
push
push
add
loope
cmp
mov
arpl
push
out
daa
inc
inc
push
mov
add
jne
jp
add
out
fdivrs
loope
jmp
daa
adc
inc
sbb
inc
dec
cmpsl
mov
leave
add
jmp
cmp
mov
add
sub
fisubrl
hlt
rorb
and
mov
xor
cmp
pop
call
add
push
rorl
xlat
inc
in
add
sub
push
jae
xlat
loopne
adc
jle
add
xchg
cmp
and
loope
adc
iret
xchg
add
mov
jae
push
lret
inc
test
into
sub
add
popf
jecxz
lock
je
add
or
pop
add
lret
loope
in
xor
jmp
lock
ljmp
pop
sbb
add
pop
inc
nop
push
ja
mov
aam
andb
push
rorb
adc
testl
jl
add
movups
dec
dec
lahf
loop
popa
and
add
cmpsb
cmp
cmp
or
in
sbb
roll
jmp
stc
vmovlps
loopne
or
add
sbb
sbb
sub
hlt
adc
add
test
adc
cmp
inc
push
imul
in
mov
mov
xor
rcl
fxam
and
testb
sbb
push
rol
loope
mov
icebp
jg
cmp
pop
jb
xor
iret
mov
cwtl
jno
and
aas
add
mov
cld
addb
lock
mov
jb
add
push
cmp
mov
ret
cmp
add
jle
add
pop
xchg
and
inc
mov
pusha
dec
fs
jno
add
lds
ret
cmp
es
xor
ss
or
sbb
push
hlt
jle
jns
lea
lret
cmp
push
sbb
or
push
or
add
mov
divb
dec
push
push
dec
push
pop
xchg
dec
rorb
jbe
inc
and
sub
dec
sbb
loopne
push
clc
mov
lds
add
sub
pop
rol
add
mov
add
push
popa
andb
add
pop
hlt
sbb
loopne
xchg
movl
dec
add
pop
outsl
je
lret
mov
out
aad
out
les
add
lock
xor
js
and
add
cmp
push
cmc
pop
std
add
outsl
jmp
adcb
push
push
data16
sbb
cmp
xchg
or
mov
hlt
sbb
add
cld
and
add
daa
inc
inc
ficoml
mov
sbb
mov
sahf
add
adc
mov
jmp
adc
mov
or
sbbb
mov
lods
pop
sub
pop
loopne
xchg
cld
jb
add
lcall
add
adc
cmp
sbb
adc
enter
ret
cld
pop
repz
jae
xor
pop
lcall
clc
int3
and
add
adc
sbb
and
mov
inc
je
push
cld
pop
lahf
adc
adc
stc
sbb
push
add
add
mov
loope
shrb
add
movsb
mov
ljmp
sub
xchg
cmp
movsb
mov
add
jle
add
cwtl
out
pop
repnz
daa
rcl
push
xchg
mov
test
fldln2
cmp
or
clc
ljmp
and
and
inc
mov
fcmovb
fcoms
js
stos
jle
dec
dec
or
gs
add
push
shlb
cmp
jbe
dec
mov
inc
or
jb,pt
dec
das
hlt
cmp
push
jbe
jle
test
inc
fsubs
test
xchg
pop
dec
or
add
cmpl
sbb
push
in
lahf
call
inc
xchg
push
dec
add
sahf
push
adc
test
cmp
jg
test
les
xchg
fdivr
loop
repnz
test
sbb
adc
cmp
cmp
cmp
stos
pop
rcl
add
pop
adc
add
in
jno
sbb
sarb
test
inc
cmp
sbb
cmp
jl
xchg
add
sbb
dec
pop
pop
add
fisubl
push
rcrb
mov
repz
lods
repnz
push
in
add
pop
sbb
sub
in
sub
hlt
ret
push
cmp
dec
inc
mov
pop
arpl
outsl
popa
insb
mov
into
rol
cs
inc
sub
in
jg
add
inc
xor
add
dec
popa
mov
gs
imul
stc
jns
jge
addl
lret
stc
rclb
sarb
cs
xor
cmpsl
scas
fsub
sbb
xor
sbb
cmp
dec
xchg
xorb
lock
mov
dec
add
ret
pop
push
sbb
leave
push
cmp
inc
dec
dec
mov
and
fldpi
add
xchg
clc
in
sbb
sub
adcb
xor
leave
cmp
push
pop
pop
adc
stos
sahf
adc
lret
jecxz
push
or
xor
inc
pop
adc
fs
sub
and
cmc
popa
nop
and
leave
sub
xor
dec
pop
clc
or
dec
jg
mov
movsl
shrl
ret
mov
mov
push
pop
daa
imul
roll
add
xchg
and
pop
lock
xchg
insb
add
jle
movsl
sub
sahf
pushf
pop
push
lahf
cmp
jno
aam
add
dec
inc
add
je
hlt
nop
lcall
movsb
leave
test
lods
xor
mov
adcl
xchg
jl
cmp
cmp
and
rorb
psrad
xor
or
add
xor
sub
js
adc
sbb
mov
and
xor
and
mov
add
je
jbe
js
sbb
cmpb
popf
in
stos
mov
jg
add
pop
fwait
push
lcall
loopne
mov
fadd
xor
jl
add
cmp
test
sub
xadd
inc
sbb
jl
sbb
xlat
dec
push
stos
aaa
mov
dec
mov
out
xor
roll
pop
push
mov
jp
add
xchg
dec
adc
pop
add
push
nopl
jb
shr
dec
cltd
clc
or
js
pop
mov
add
jb
fmuls
add
push
repz
loope
aas
add
je
pop
mov
ljmp
xchg
jmp
adc
enter
inc
xor
add
or
popa
andb
pop
push
inc
psubusb
inc
pop
mov
ljmp
jle
nop
jmp
add
xor
loope
and
xor
hlt
lcall
mov
aaa
inc
inc
addr16
jo
movsb
pop
mov
pop
lahf
stos
xchg
mov
mov
xchg
xor
xor
aaa
dec
cmpsl
add
push
incl
lods
call
xor
mov
sbb
sub
push
cmp
xchg
rcl
ret
jns
pop
sbb
fs
mov
clc
xor
xchg
call
jb
je
jbe
add
pop
lret
bswap
out
leave
ds
loope
jb
push
sbb
inc
pushf
sub
inc
push
xchg
pop
jmp
inc
jl
add
xor
shrl
popa
add
inc
fs
jo
cmp
lods
xchg
add
les
in
add
dec
add
aaa
iret
inc
or
add
pop
stc
adc
aam
xor
add
sbbl
test
cwtl
pushf
dec
out
add
fsubrs
cmp
insb
loope
andl
adc
leave
add
xchg
add
xor
xchg
aas
add
gs
lahf
xchg
xchg
int3
sbb
and
sub
paddsb
dec
mov
inc
daa
out
and
rcll
imul
cmp
xor
ficoms
add
sbb
mov
mov
mov
dec
mov
add
ss
xchg
and
cmp
lock
fidivrs
sbbb
sarl
aas
mov
inc
jne
add
dec
test
push
push
hlt
pop
sub
push
add
inc
xchg
subb
push
aas
mov
pop
inc
xchg
das
cs
les
test
aam
inc
faddl
dec
in
mov
pop
fiaddl
mov
push
int
sbb
call
fildl
sbb
pop
push
and
pop
sub
mov
pusha
xor
jns
aad
xchg
loopne
cs
adc
sbb
loope
xorb
sbb
sub
es
push
sub
xor
dec
cmp
sar
dec
adc
add
ljmp
movb
sbb
call
add
inc
clc
hlt
daa
push
pop
shl
stc
insb
and
sub
dec
pushf
xor
add
mov
ret
dec
sub
rolb
js
nop
jecxz
repz
repnz
xor
sarb
push
lock
in
inc
in
stc
xor
cmp
fistps
add
dec
mov
adc
push
add
sbb
add
jno
icebp
cmp
add
inc
lods
push
imul
les
push
fimull
cs
add
rolb
add
ret
or
lods
adc
hlt
js
add
or
daa
xor
inc
sbb
add
dec
clc
xchg
xchg
or
lret
push
pop
add
and
xchg
cmpsl
sub
xor
cmp
jbe
inc
dec
and
dec
lock
pop
test
push
xchg
add
mov
adc
fcom
mov
dec
jg
aas
scas
nop
mov
xor
xor
mov
je
jbe
cmp
rcl
repz
fcoms
xchg
in
mov
xor
adc
int3
or
mov
rclb
sbb
sbb
and
cwtl
sub
sub
xor
dec
cmp
jbe
push
cli
mov
pusha
call
jmp
inc
xchg
nop
sbb
inc
sub
popf
jno
sbbl
fdivs
lods
mov
ret
xchg
push
push
jne
lea
daa
push
call
cli
fadd
sbb
int3
adc
call
sub
test
mov
mov
push
push
push
inc
mov
push
cmp
sbb
je
mov
mov
sbbl
movsb
lds
jbe
inc
ss
push
lea
sbb
pop
xchg
ret
add
inc
and
pop
add
or
cmp
sbb
mov
adc
or
and
mov
add
add
mov
or
in
add
xchg
lea
mov
adc
test
inc
test
mov
popw
in
cltd
add
lcall
mov
or
popf
mov
lcall
outsb
jo
add
incb
test
mov
add
push
incl
push
aaa
movb
cmpsl
xlat
stc
hlt
push
push
jp
mov
push
push
mov
aas
xor
or
je
add
sbb
addb
or
inc
dec
add
in
sub
push
add
int
repz
dec
cli
loopne
cmc
add
pop
bound
or
stc
add
movsl
loope
add
cmp
pop
push
mov
sbbb
jge
jp
nop
rcr
ljmp
shrb
xchg
push
dec
xchg
sbb
shlb
push
rcrb
pop
and
insl
cmp
dec
pushl
push
dec
addl
jae
lods
jge
lods
data16
pop
shr
xchg
sti
add
je
or
push
push
cmp
sub
das
adcl
pop
add
cmp
sbb
push
sub
add
mov
popa
dec
mov
add
loop
or
rolb
push
add
mov
or
jne
pop
push
push
lock
add
dec
dec
mov
add
add
inc
push
inc
data16
jp
adc
push
sbb
sbb
mov
or
movsb
mov
add
xorb
fiaddl
add
mov
gs
mov
sbb
call
outsl
cmpsb
ds
rcrb
xor
xor
jmp
push
ss
mov
jne
pop
roll
dec
adc
loop
adc
jl
jnp
cmpl
flds
fisubs
pop
push
sbb
dec
mov
orl
aaa
jmp
sub
adc
sbb
fld
cld
jmp
add
test
movsb
cmp
rolb
das
add
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
and
add
in
push
dec
xchg
filds
add
jg
lock
cmp
add
sbb
out
cmp
inc
iret
xor
bound
scas
mov
push
xchg
jbe
lahf
push
dec
add
mov
mov
mov
add
inc
in
inc
loopne
xchg
add
mov
flds
mov
pop
xchg
and
cmp
hlt
add
ret
cli
xchg
mov
jmp
icebp
sbb
mov
mov
sahf
aas
inc
push
add
pop
xor
cmp
mov
jbe
push
ds
cmpsb
fnstenv
push
xchg
and
add
dec
or
add
cld
cmp
push
sbb
jbe
shlb
mov
loopne
pop
subb
cmp
xchg
insl
inc
pop
adcb
add
add
aas
add
xchg
xchg
outsl
test
xchg
shl
sub
adc
das
cmp
add
mov
cld
scas
aad
inc
mov
cli
daa
ljmp
sbb
sub
lcall
sbb
mov
fwait
test
insl
punpckldq
aas
icebp
in
mov
repz
negl
or
adc
add
mov
inc
adc
stos
jle
mov
mov
loop
jo
faddl
jp
xchg
movsb
sbb
mov
into
add
pop
xchg
mov
out
ja
imulb
cmc
aad
ds
fdivrl
out
fwait
xchg
imul
into
or
xlat
pop
sbbb
int
call
or
add
pusha
lods
clc
jp
xor
dec
pop
mov
fimuls
aas
push
mov
adcl
pusha
sub
add
notl
cmp
mov
sbb
ltr
and
jno
add
mov
jp
iret
pop
div
jmp
adc
stos
cli
mov
nop
aas
in
cmp
mov
out
xlat
inc
add
xchg
mov
out
push
notb
jge
push
push
add
or
mov
adc
test
sub
push
cmp
jns
or
mov
cltd
sbb
cmp
sub
lret
add
xchg
insl
enter
xchg
add
sub
cld
add
ja
jbe
xchg
mov
pop
faddl
mov
jge
mulb
add
mov
sub
mov
add
cltd
jns
inc
mov
cli
mov
adc
cmpsl
dec
mov
insb
popf
stc
lea
push
push
mov
fmull
dec
movsl
adc
add
xchg
jl
add
sub
lea
in
inc
rdpmc
pop
int3
xchg
inc
bound
and
pop
cli
cmpsb
dec
cmc
pop
lds
sbb
mov
jb
inc
jns
ret
int
add
dec
mov
iret
cmpsl
scas
xchg
add
jg
incb
cltd
add
into
xor
push
and
sub
jmp
adc
test
pop
mov
fildll
mov
sub
ret
push
in
cwtl
or
fdivrl
push
cld
mov
stos
add
mov
inc
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
rclb
sub
add
movsb
pop
jmp
dec
shl
inc
mov
call
xor
jae
nop
push
add
inc
inc
lock
pop
cmp
ja
push
roll
adc
leave
add
call
roll
aad
sbb
out
minps
mov
popa
add
jo
loope
mov
xchg
outsb
cmp
pop
push
imul
push
sub
or
imul
mov
addb
pop
jp
clc
jae
push
inc
jne
mov
popa
addr16
jmp
cmc
inc
emms
pusha
jo
imul
dec
lock
inc
push
outsb
and
sahf
jnp
decb
jo
or
out
clc
jns
and
push
lds
mov
aad
xchg
popa
loop
fistpll
mov
pop
fildll
arpl
xor
imul
jb
push
push
ljmp
js
sarl
add
rorb
in
adc
std
xor
inc
idiv
aad
cltd
and
lea
mov
dec
outsl
out
xlat
dec
push
dec
repz
cmpsl
dec
outsl
add
xor
add
add
push
cli
js
pop
mov
sub
es
jo
test
pusha
mov
push
addr16
pop
push
xor
sbb
negb
jg
out
sbb
sbb
out
call
loopne
dec
call
xor
xor
pushf
xor
inc
push
inc
pop
mov
call
mov
add
stc
cmp
stos
push
add
mov
fs
and
pop
inc
jmp
aas
add
cltd
scas
xor
test
orl
xor
hlt
jmp
test
loop
dec
inc
call
adc
ljmp
shll
push
inc
xlat
in
stc
jp
pop
adc
jecxz
lret
jecxz
jnp
je
insb
mov
int
push
cmp
dec
daa
sbb
aam
dec
pop
cltd
adc
lcall
vpshld
sti
cli
out
hlt
mov
cmp
cli
xchg
pop
lahf
jno
adc
add
jl
loop
inc
in
jne
dec
jno
dec
adc
jp
loop
loope
and
es
inc
mov
xor
jg
cmp
mov
test
mov
adc
mov
lock
push
cltd
jg
or
cmp
test
gs
xchg
pop
xor
xchg
lock
jge
mov
xor
cmp
sbb
xchg
lods
fldt
test
or
push
mov
lahf
arpl
cwtl
test
pop
jp
addr16
ja
enter
sub
fs
mov
cmpsl
aas
xchg
mulb
adc
mov
mov
sbb
paddusw
mov
dec
lea
pop
pushw
das
enter
aaa
mov
inc
popf
testb
pop
jmp
js
test
loop
sti
jmp
ss
sbbl
loop
iret
sub
jne
and
adc
dec
add
dec
sbb
out
push
push
gs
hlt
into
jg
sbb
aad
xor
cwtl
out
mov
xor
cwtl
fdivrs
mov
jmp
inc
xchg
jb
ret
sub
int
clc
push
cli
pop
pop
push
aad
sbb
subl
fidivrs
sbb
or
std
mov
jge
cwtl
addb
mov
jae
pop
push
inc
dec
mov
cmp
fstpt
js
in
or
aaa
mov
loop
cwtl
sbb
jg
cld
mov
pop
add
pop
mov
mov
and
push
or
movsl
lahf
mov
ss
mov
mov
pop
lret
and
xor
push
enter
pop
ret
mov
inc
roll
ret
pop
in
mov
fisubs
jge
adc
inc
imul
fistpl
fs
jmp
push
xor
fistps
mov
stc
aam
inc
add
sbb
mov
xchg
add
mov
jae
jb
fdivs
stc
sbbl
jge
in
pusha
stos
movsb
ret
aas
movsb
jge
movsb
shlb
out
xchg
das
inc
sub
add
fistpl
ss
mov
lock
mov
xchg
sahf
adc
les
jle
xchg
aam
cmp
ja
in
sub
push
sar
inc
sbb
ret
add
pop
cmpsb
ret
pop
leave
sub
inc
bound
rcrl
fcoms
dec
jo
lcall
in
pop
dec
setp
hlt
lahf
ds
adc
adc
inc
inc
testb
nop
inc
hlt
lock
insb
push
aaa
inc
jmp
and
sbb
sub
test
jle
movsb
push
fs
push
pop
std
cmp
push
mov
mov
stos
mov
dec
jno
das
fsubrl
mov
mov
mov
cmp
mov
fstps
and
test
fildll
scas
add
dec
aaa
repz
lods
enter
bound
mov
adc
std
cmp
push
jbe
mov
ret
push
std
idivl
push
xchg
inc
call
mov
fs
addr16
xchg
scas
xchg
cmp
cltd
or
pop
inc
and
out
inc
pop
mov
mov
and
sbb
sahf
mov
push
int3
sub
xchg
outsb
cmp
aas
leave
lahf
jle
aam
add
jbe
cld
mov
or
xchg
call
mov
sub
shll
add
xchg
mov
sbb
mov
dec
pusha
and
adc
test
jmp
test
mov
imul
cmp
lret
dec
aam
mov
loopne
test
or
jmp
mov
mov
xor
loop
in
xchg
ja
popa
loope
std
dec
call
jno
mov
cltd
popa
cmp
int3
mov
inc
test
sbb
mov
xchg
cmp
mov
mov
xchg
lcall
es
clc
repz
outsl
shlb
dec
jb
out
mov
xor
or
sub
sti
jno
cmp
fistpl
stc
mov
inc
scas
adc
sbbb
lock
sbb
sti
rcll
mov
pop
fwait
test
rcrb
insl
xchg
pop
adc
setbe
cld
jbe
mov
xor
xchg
dec
lcall
out
nop
aaa
push
and
mov
add
inc
test
test
lds
dec
nop
and
aad
and
and
fidivl
xchg
movsl
cmp
mov
jle
or
fildl
jbe
sbb
lea
push
out
hlt
xor
mov
dec
jb
xchg
add
lock
iret
add
or
clc
jl
bound
mov
jge
lret
mov
mov
fcomp
cmp
push
sub
push
or
jae
mov
jne
push
lea
das
pop
rcll
sqrtps
xchg
loopne
inc
cmp
mov
inc
mov
mov
mov
dec
mov
cmp
cld
les
mov
js
dec
daa
ja
in
cld
xchg
test
mov
push
cmc
es
sahf
ret
in
push
xchg
fnstcw
imul
mov
int
xor
xchg
and
dec
dec
lods
xor
mov
adc
popa
arpl
stos
aas
mov
mov
sti
pushf
imul
or
lods
mov
out
addr16
jbe
stos
adc
repz
push
add
push
add
xlat
loop
fisttps
cmp
mul
and
xor
dec
lret
sub
roll
andnps
xchg
out
es
mov
ret
cld
ficomps
pusha
cld
xor
jg
in
mull
dec
xlat
jo
or
pop
aad
sub
out
dec
mov
jmp
repz
hlt
iret
loope
jnp
xorl
nop
enter
jmp
and
adc
insl
sub
sub
dec
sbb
xor
stos
jle
leave
into
outsl
add
in
arpl
jno
xchg
adc
cmc
push
xorl
test
sub
jmp
inc
cmp
movsl
arpl
rclb
arpl
cmpsl
mov
jp
mov
sahf
fstpt
outsl
in
sahf
test
lds
and
mov
arpl
insl
mov
adc
scas
inc
mov
shrl
inc
jmp
xchg
xchg
mov
pop
inc
dec
les
inc
sub
and
cmp
push
ljmp
or
xor
xchg
mov
xchg
clc
push
pop
push
dec
push
push
adc
inc
cmp
push
addr16
fcompl
add
push
aad
cmc
outsb
clc
inc
rep
std
sub
fnsave
cmc
cmp
jnp
in
inc
int3
cld
adc
lock
push
sbb
es
repnz
and
jo
mov
outsb
je
icebp
ss
jl
lahf
loopne
andl
dec
or
sub
sub
scas
dec
fnstcw
jle
cmp
int3
adc
test
std
fstl
loopne
icebp
ja
inc
lcall
movsb
cli
mov
es
jmp
pop
stos
shll
mov
negb
mov
cmc
cs
outsb
adc
push
jg
in
xchg
and
xor
inc
xor
outsb
add
jae
cli
inc
mov
jae
jge
mov
sbb
xchg
stc
jo
pop
dec
xor
mov
or
test
pop
ret
decb
sti
faddl
idiv
loope
pop
dec
and
push
sbb
nop
clc
add
sbb
cmp
mov
xchg
push
mov
or
mov
rcrb
inc
nop
xor
fcomp
jmp
outsb
xchg
lret
inc
orb
fisubs
or
lret
jns
outsb
loope
or
mov
push
lds
pusha
cmc
cmc
xor
lods
sbb
xchg
push
clc
pop
add
stc
push
subb
pop
add
mull
std
jns
inc
cmp
adc
or
cmp
test
or
or
lods
outsl
fwait
lods
mov
or
cmp
inc
je
lret
sub
push
pop
jae
aam
pmulhuw
lea
pop
jns
ljmp
sbb
subb
notl
daa
cltd
dec
mov
pop
scas
je
fldt
push
rclb
ret
push
jo
pop
cld
mov
movsb
push
fwait
push
pusha
cmp
sbb
or
add
push
sub
aaa
clc
push
test
out
jle
push
fimuls
fcom
loope
dec
nop
push
je
arpl
jb
inc
push
arpl
lock
mov
lea
jl
cld
mov
pop
xchg
aaa
scas
mov
mov
mov
mov
jo
mov
imul
daa
adc
inc
fldcw
dec
cmp
sub
call
sbb
lcall
lahf
cmp
stos
lods
test
or
or
mov
add
lret
pop
inc
or
push
add
arpl
cmp
int3
add
outsl
xchg
inc
andb
addb
fnstenv
pop
xchg
mov
pop
sub
arpl
or
mov
testb
ret
into
enter
movsb
push
mov
repnz
jp
lret
xor
in
push
pusha
test
add
nop
xchg
sub
sbb
jne
jmp
ret
pop
repnz
jge
test
adc
scas
bound
pop
lock
stc
mov
stos
mov
pop
xchg
mov
cmpsl
dec
dec
or
push
cltd
mov
enter
sbb
or
mov
fsubr
imul
jns
or
fldcw
in
inc
jg
data16
pop
mov
out
cmpsl
fcom
jb
and
fldl
pushf
inc
xchg
xchg
jbe
and
jns
fs
dec
outsb
sub
subb
in
mov
sbb
adc
jns
sbb
repnz
adcl
shr
cmp
mov
push
ret
sub
pushf
cmpsl
aad
aad
xor
adc
xor
jo
xor
jl
lcall
or
mov
pop
dec
sbb
sbb
cs
jmp
idiv
sarb
lea
addl
xor
mov
js
and
mov
and
add
inc
loopne
mov
ror
mov
test
cwtl
outsb
xlat
pop
push
dec
push
popf
and
cmc
aam
cld
cld
jne
lods
stos
jl
in
or
push
adc
ja
xchg
je
js
xchg
mov
std
xchg
mov
inc
std
in
mov
pop
je
mov
xor
insb
or
mov
outsl
movsb
std
lods
or
jge
and
mov
call
cmp
xchg
dec
sub
in
push
adc
test
outsl
mov
and
sub
movsl
sub
push
scas
mov
aad
loope
sbb
int
out
lods
subl
scas
out
fildll
jbe
mov
jns
adc
xor
adc
push
ss
daa
lds
jle
lret
mov
adc
cmp
rol
pop
sbb
xorl
test
mov
xchg
mov
outsb
push
lds
jns
ljmp
xor
icebp
sbb
pop
out
in
test
xor
adc
push
push
ret
sbb
jo
mov
push
xor
mov
bound
sub
mov
xor
sub
aam
mov
and
test
test
pop
lret
out
xor
dec
push
pop
pop
jo
add
sbb
aad
pop
jbe
loop
jle
mov
fisubl
mov
test
test
pop
pop
out
aad
sub
fcompl
mov
arpl
sub
and
test
loope
xchg
mov
cmpsb
test
dec
cwtl
testb
lret
fst
out
or
inc
mov
data16
add
jne
test
daa
xor
adc
outsl
stc
adc
fimull
adc
push
test
mulb
jne
mov
adc
arpl
xchg
sbb
cmp
pop
or
cltd
and
test
add
cmp
sub
lret
xor
cmovne
xchg
cs
stos
mov
fs
testb
pusha
or
pop
jmp
std
push
lret
pop
outsb
adc
loopne
aam
mov
test
pushf
xchg
jno
mov
punpcklbw
jbe
clc
cmp
add
dec
adc
push
sbb
ds
leave
aad
pop
inc
cmpsl
sbb
vmovdqa
stc
cmpsl
cmp
sbb
mov
outsl
sbb
or
pop
adcl
cmpsb
mov
sbb
cmp
imul
pop
mov
xor
icebp
add
lret
xchg
jge
mov
dec
jae
mov
repz
int3
inc
scas
lods
lods
imul
or
pop
inc
jnp
inc
and
shll
jnp
jg
cmp
lcall
lcall
fistpll
nop
addl
add
sub
fldt
scas
push
lahf
mov
cld
cld
push
hlt
add
shl
and
ja
xor
lods
inc
dec
popf
subl
mov
sbb
and
mov
xchg
dec
sbb
add
out
repz
xchg
jne
cmp
jb
lcall
inc
fidivs
nop
add
or
inc
dec
pushl
stos
mov
cmp
mov
jno
mov
in
sub
aaa
les
pusha
jb
and
mov
jne
pop
das
rclb
push
test
shll
lahf
imul
bound
punpckhdq
mov
sub
hlt
xchg
push
popf
idiv
mov
rcll
push
dec
into
dec
xchg
or
mov
jno
mov
test
in
shl
jmp
xchg
outsb
add
jp
dec
andl
cmp
loope
mov
xlat
pop
aaa
inc
xor
in
xor
pop
pop
push
lret
xlat
leave
xchg
ljmp
xlat
xchg
test
scas
xchg
adc
sahf
pop
and
adc
jns
movsl
nop
sti
aam
test
or
lcall
outsl
xorb
and
cmp
mov
sub
daa
popf
lea
xor
mov
jo
mov
das
hlt
fstpt
test
les
sbb
pop
or
movsl
lcall
lret
clc
or
lret
and
sbb
pop
cmp
iret
push
out
push
cmp
fadds
inc
adc
jg
test
cwtl
jns
mov
adc
das
adc
add
ret
out
aas
aam
lods
sbb
cmp
bound
inc
xchg
and
adc
adc
stc
mov
pop
jae
push
xor
push
sbb
fwait
dec
fs
sub
cmpsb
sarl
fistpll
mov
inc
inc
imul
int
jle
out
xor
inc
dec
addr16
addr16
aam
jbe
cli
nop
mov
jl
daa
dec
push
jge
fsubrp
push
xchg
jns
mov
fnstenv
mov
out
cmpsl
insl
pop
xchg
inc
cs
shll
repnz
aas
or
loope
dec
les
jbe
add
scas
pop
or
cwtl
push
bound
dec
jb
or
aaa
add
arpl
je
mov
mov
lock
pop
int
cmp
fistpl
xchg
fidivrs
or
jp
push
mov
daa
pusha
push
mov
out
adc
inc
and
xchg
mov
mov
mov
ss
nop
sti
je
call
dec
dec
jo
mov
ljmp
inc
inc
in
mov
lds
mov
les
pop
decl
jb
push
das
inc
and
jnp
push
jp
jecxz
outsb
xchg
fbld
cmp
inc
jle
stc
js
pop
imul
sbb
or
lahf
or
cmp
jecxz
dec
dec
rorb
dec
xchg
bsf
fcoml
sbb
push
push
jecxz
add
pop
cmpsl
sbb
push
lret
andb
loopne
push
adc
mov
addr16
sarb
sub
xchg
cli
mov
pcmpgtw
int
jecxz
mov
sub
pop
lods
sbb
sub
or
icebp
push
xchg
flds
and
ljmp
mov
pop
leave
sub
and
test
divl
stc
sub
pushf
jnp
cwtl
dec
jle
push
aas
jb
fmul
notl
std
out
add
xchg
xchg
and
and
xchg
or
or
in
lods
daa
repnz
ror
push
xchg
mov
ss
cmp
in
in
loopne
sbb
xor
dec
add
add
add
in
stos
jo
or
xlat
or
inc
divb
adc
bound
xor
pop
add
addr16
mov
or
ja
repnz
cli
les
push
adc
jecxz
das
sub
cmc
inc
aad
xor
dec
cld
cwtl
js
cmpsb
movsb
int
test
mov
ljmp
fdivrl
inc
arpl
mov
inc
test
mov
fs
or
dec
add
loope
fldenv
lret
cmpsb
dec
popf
jnp
int3
xor
xor
cltd
loopw
stc
lret
pop
movsl
stos
sbb
pop
outsb
sub
rcrb
mov
xor
fcom
push
movsb
or
add
jge
sub
adc
out
and
ds
dec
adc
or
ds
nop
cmp
and
and
jno
je
adc
cmc
sub
sbb
je
mov
pop
push
sub
ljmp
lods
mov
iret
test
pop
int3
mov
sti
mov
cs
or
icebp
mov
test
out
add
cmpsb
add
sub
fsubp
ds
push
pop
negb
jne
icebp
std
push
cmp
add
and
lock
push
lea
xor
int3
mov
and
stc
adc
cmc
subl
lret
dec
js
push
enter
shl
sub
mov
fs
jne
cmp
cs
data16
das
push
mov
idivl
fstpl
add
or
xchg
mov
sarb
ret
cmpsl
out
and
std
and
mov
mov
mov
stos
js
je
ljmp
jp
lcall
push
dec
xchg
into
test
loope
mov
sub
sbb
int3
add
cmpsl
add
xor
mov
jno
mov
push
push
mov
mov
sub
xor
push
adc
imul
adc
scas
std
xchg
pop
sbb
dec
imul
mov
xor
add
mov
ss
push
mov
insl
and
mov
inc
xor
push
aad
push
adc
daa
xor
push
push
lret
mov
xchg
pop
and
mov
pop
lahf
gs
lcall
inc
inc
les
clc
clc
pop
lods
jl
dec
adc
sahf
in
test
adc
and
pusha
jecxz
idivl
popa
stos
out
mov
imul
pop
mov
xchg
fs
hlt
aam
leave
dec
cmp
or
out
scas
das
mov
sahf
inc
lret
loope
into
cmp
clc
xor
lods
test
arpl
jo
mov
ret
ja
inc
fisttps
or
dec
rorl
daa
push
sbb
cmp
inc
xchg
rorl
adc
sbb
xchg
jl
inc
fsubl
mov
add
sbb
jae
mov
sub
lds
mov
push
jle,pn
insl
sub
jg
or
out
arpl
inc
loopne
ror
push
dec
out
xchg
dec
js
mov
mov
cmp
popl
mov
das
pushf
inc
push
adc
or
jno
ret
int
jmp
inc
push
xchg
lock
adc
daa
not
sub
shll
jl
xchg
shrl
dec
sub
cmpb
inc
out
cmp
decl
iret
movsl
movsb
into
xor
js
mov
xchg
jbe
mov
sbb
mov
mov
cmp
xor
gs
pushl
or
in
and
cli
aas
addl
mov
dec
sbb
ret
xchg
clc
mov
push
jmp
mov
xor
pop
mov
call
dec
cmp
sub
scas
jp
and
aam
gs
rolb
sub
inc
sbb
mov
mov
inc
enter
pusha
fmuls
mov
rorl
xor
ja
or
dec
or
xor
out
scas
adc
ret
mov
aas
stos
in
gs
cmpsb
dec
xchg
jecxz
aaa
ss
mov
mov
push
mov
pop
out
dec
daa
iret
sbb
out
sub
test
inc
cli
gs
mov
lock
sub
lahf
aam
in
ss
sbb
int3
pop
jecxz
mov
scas
aad
xchg
dec
ss
pop
int3
adc
xchg
pop
cmp
mov
jmp
mov
jg
cmp
dec
mov
sbb
sub
jo
std
or
shlb
jl
mov
test
in
das
sahf
ljmp
add
xchg
add
push
add
push
stos
loop
push
cs
fisttpll
repnz
pusha
cmp
pop
shll
insb
push
or
int3
test
shll
inc
aaa
fsubrl
out
mov
bound
jno
out
test
nop
daa
mov
mov
push
aam
jne
xor
test
stos
cld
mov
fs
mov
fildll
xchg
sbb
mov
ljmp
add
sbb
clc
mov
push
rclb
fstp
sub
and
aam
and
mov
or
jae
int3
rclb
xor
imul
mov
mov
xchg
mov
adc
lret
or
or
xor
mov
jmp
frstor
pop
popa
jo
lods
and
and
add
lods
or
orb
pop
lods
inc
movsl
pop
add
ss
out
jmp
sar
dec
test
dec
lock
mov
stos
in
and
outsl
insb
ficoms
jb
and
popa
dec
mov
mov
adc
daa
testl
and
adc
sarl
test
and
js
jl
arpl
shlb
inc
rorb
imul
stos
sbb
mov
loope
jge
xor
iret
inc
loop
pop
jecxz
in
mov
pop
dec
fidivrs
loop
pop
lahf
jbe
fimuls
popf
icebp
cmp
popf
sahf
int3
mov
je
jnp
fisubs
pop
loopne
out
cmp
push
sti
push
push
jecxz
inc
nop
and
dec
stc
pop
inc
or
add
pop
subb
in
jp
push
lods
xor
dec
cld
ljmp
in
test
xor
mov
repnz
ffree
mov
dec
arpl
iret
flds
leave
cmp
cld
pop
xchg
mov
in
push
xchg
push
lret
lret
fisttpl
add
lods
fnstsw
ljmp
sbb
shrl
xchg
dec
lret
je
or
jne
push
jp
cmc
mov
inc
mov
icebp
mov
aas
ret
loopne
shrl
into
inc
jbe
lock
sub
mov
dec
jl
movl
fldenv
mov
sbb
inc
mov
pop
sti
repz
iret
pop
insl
inc
jns
out
loopne
adc
xchg
xor
sbb
jbe
lret
repnz
mov
mov
pushf
cmp
es
loopne
out
out
sbb
test
jne
test
adc
repz
cmp
push
push
daa
xor
ret
cld
mov
int3
mov
mov
pop
adc
imul
sub
adc
xchg
mov
cmc
cmpsl
sti
push
insb
mov
push
fcmovnu
in
mov
xor
jge
xchg
dec
leave
sub
outsl
or
inc
lcall
jle
mov
jo
ds
jb
les
insl
repnz
mov
in
push
pop
inc
mov
clc
es
imul
jmp
outsl
jno
repz
pop
inc
in
sbb
pop
inc
adc
jnp
loop
mov
mov
shll
repnz
in
mov
lahf
inc
mov
adc
mov
sbb
por
test
inc
ret
scas
mov
mov
xchg
jge
push
mov
jge
les
jge
cmp
xor
sub
subb
xchg
call
xor
lahf
pop
jns
push
inc
outsl
addr16
sbb
jecxz
pop
loop
push
add
and
push
fs
stos
and
sarb
pop
jp
stc
mov
inc
and
jmp
xchg
pop
sub
sbbl
xchg
add
push
mov
inc
pop
loope
insb
mov
mov
fcompl
out
cmp
stos
pop
mov
pop
das
mov
add
cs
test
mov
ret
dec
mov
shrl
push
adc
xor
fsubs
push
stc
dec
jge
orb
sub
push
jge
je
pop
data16
and
xchg
jbe
mov
mov
add
test
push
mov
or
lret
xlat
in
pop
mov
mov
mov
in
pop
loopne
adc
icebp
lret
lret
pop
xchg
nop
out
inc
mov
xor
aam
popa
loop
out
mov
mulb
dec
push
inc
xchg
enter
incb
out
fisubs
push
xlat
push
in
fcoml
in
fisubl
dec
jbe
inc
xchg
hlt
sub
mov
push
loopne
stos
bound
ss
or
xchg
shrb
adc
mov
aad
ss
addr16
repz
jle
cmp
and
lds
adc
fcmovnb
or
adc
sub
xchg
pop
loop
push
jb
sti
out
lcall
cld
fldl2e
jbe
cmpsb
out
jecxz
mov
inc
inc
lcall
jb
into
aas
push
mov
jno
mov
icebp
mov
mov
sbb
in
aas
lahf
aad
cmp
cmc
addb
icebp
faddp
and
outsl
clc
mov
imul
data16
xchg
iret
lods
loop
out
enter
pushf
and
push
add
sti
xor
xchg
imul
je
xchg
test
loope
cmp
inc
mov
out
cmp
cs
and
xor
addb
lea
sti
cmp
fs
int
sbb
sub
mov
jo
sarb
outsb
fisubrs
pushf
daa
or
repnz
pop
out
ds
sub
xchg
add
jae
lret
cmp
mov
mov
or
push
sbb
ljmp
rdmsr
jmp
aaa
adc
jnp
and
out
mov
lret
hlt
nop
pop
lods
add
pop
icebp
sbb
ret
icebp
call
jbe
mov
sti
std
inc
inc
subl
dec
add
fsubrl
jnp
jb
add
mov
dec
pop
stos
icebp
dec
xor
repz
and
sbb
adc
test
fmull
mov
icebp
jle
mov
add
xchg
insl
scas
inc
jp
xchg
jmp
mov
into
jmp
push
out
neg
in
gs
inc
arpl
pop
es
out
and
out
loope
xchg
outsl
jae
xchg
dec
pushf
into
and
cmp
xchg
adc
xchg
out
insl
popf
sub
xchg
imul
scas
fisubrl
lea
mov
in
mov
inc
fwait
mov
cmpsb
sub
insl
ja
mov
mov
loop
mov
insl
mov
jge
out
testb
push
mov
lds
inc
or
int
ds
inc
push
mov
mov
cld
inc
out
bound
push
sbbl
pop
idivb
lods
mov
adc
add
hlt
test
cmp
mov
and
mov
dec
inc
inc
inc
xlat
or
pop
push
jmp
pop
movsb
pop
adc
xchg
int3
sahf
jle
adc
and
push
dec
and
mov
mov
mov
dec
aad
dec
or
out
rolb
push
fldt
push
xlat
xor
insb
out
test
aas
fiaddl
fwait
sbb
fcompl
sarb
fldcw
add
add
popf
adc
adc
aam
aad
mov
ficompl
inc
pop
xchg
insb
ljmp
stos
ret
xor
jp
and
cmc
xchg
or
pop
lds
mov
xchg
movsb
fnstenv
shlb
leave
jno
inc
inc
pop
adc
pop
push
pop
jb
mov
frstor
and
sbb
pusha
ja
mov
mov
jb
loopne
or
leave
xor
lret
cmp
inc
xor
mov
fnstenv
or
jmp
leave
xchg
xor
inc
mov
mov
mov
movsl
leave
sbb
push
jns
aad
and
cmp
and
addl
js
jl
jge
loopne
sub
testl
jnp
inc
add
jo
inc
inc
lock
xor
dec
shll
int3
loop
lret
loopne
inc
lcall
inc
add
dec
lods
stos
xor
mov
and
inc
stc
daa
mov
popa
lcall
or
pop
das
shll
cmpsl
xchg
shlb
fbstp
pop
jnp
outsl
mov
jnp
push
dec
sbb
mov
es
jb
test
sbb
outsb
push
repnz
pop
fildll
cmp
xchg
pop
add
subb
hlt
subl
jo
ds
or
add
xor
shlb
pop
or
jne
xchg
movsb
adc
push
icebp
bound
push
nop
dec
cmp
arpl
cmpb
or
repnz
loop
dec
xchg
pusha
adc
js
fdivrs
pop
scas
lret
hlt
imul
sbb
pop
inc
mov
out
inc
ljmp
xchg
je
inc
dec
xchg
add
les
mov
outsb
pop
orl
cmp
lahf
mov
push
in
inc
std
xchg
ss
mov
pop
lret
or
jecxz
and
mov
pop
dec
ds
fimuls
sti
xchg
fldl
jle
pop
or
pusha
push
add
sbb
aad
repz
mov
clc
push
sub
xchg
sub
cmp
xor
jmp
xchg
jmp
fwait
repnz
pop
or
sahf
dec
in
sbb
shrb
jb
roll
mov
cwtl
jne
in
sbb
scas
sbb
xor
aas
add
mov
iret
jno
xchg
stos
mov
inc
pop
jmp
gs
stos
ret
insb
mov
or
test
mov
int3
inc
test
or
addr16
dec
stc
push
cmpb
fmuls
roll
flds
jmp
and
mov
pop
or
mov
push
sub
out
xchg
insb
and
or
and
imul
add
cmpl
lods
imul
lds
leave
mov
mov
jne
or
jle
in
dec
cld
sub
adc
push
sbbl
xchg
pusha
mov
pop
pop
jmp
pop
xor
cmp
pop
fdivs
cli
popf
sbb
xchg
mov
jb
clc
in
dec
inc
push
jno
dec
fnstsw
pop
outsb
std
test
idivl
sbb
mov
rclb
xchg
test
ss
pushf
xor
cmpsl
cli
sub
hlt
dec
jecxz
jne
mov
mov
ret
cmpsb
cltd
add
pop
or
repz
mov
cmpsl
lods
jns
clc
sub
lcall
ret
icebp
fcompl
fistl
hlt
repz
inc
enter
cmp
js
loope
dec
or
int
das
mov
dec
ret
test
dec
stos
xor
in
mov
mov
xchg
lret
jbe
jge
mov
insl
add
sub
cmpsb
loop
faddl
or
mov
movsl
dec
fcmovb
xor
lods
outsb
or
mov
mov
pop
sbb
jmp
xor
les
je
adc
ja
push
xor
and
inc
scas
or
insb
sahf
pop
rcll
int3
popa
int3
popa
dec
sbb
push
push
cmpsb
ror
adc
sub
add
mov
cld
popa
loop
orb
mov
mov
mov
lock
xor
mov
xor
cmpsb
adc
cmp
scas
call
mov
loope
sbb
dec
lcall
mov
jo
loope
inc
sub
lea
int
je
ja
mov
repz
sub
add
adc
jp
and
out
cld
sbb
cmp
pop
int
cmp
dec
jbe
pushf
or
jne
xor
cs
jo
mov
mov
and
push
mov
or
mov
imul
popf
cltd
js
cmpl
cmpsl
xchg
out
push
cmp
mov
orb
xor
mov
pop
push
repz
pop
mul
scas
fwait
mov
xor
sbb
stc
jne
or
daa
ret
mov
outsb
jmp
mov
pop
fs
inc
fisttpl
lret
mov
mov
out
outsl
sbb
out
fisubl
fstps
pop
jp
das
ret
xchg
push
icebp
clc
adc
push
into
rcll
repz
dec
ret
dec
in
ss
lods
bnd
or
cmpsl
mov
add
push
add
loope
add
jp
clc
sahf
jecxz
int3
mov
pop
mov
mov
mov
mov
stc
lds
fwait
pop
iret
icebp
jnp
pop
lret
aas
or
jno
jno
inc
and
js
aam
in
fldt
fxtract
ljmp
lea
aad
lock
arpl
push
addl
jns
imul
movsl
and
outsb
cmpsl
ss
outsb
leave
jae
mov
cmp
lcall
sbbb
lahf
lds
aaa
or
sub
sub
test
in
and
mov
mov
mov
jo
push
sub
in
rcrl
inc
ret
imul
pop
jae
lret
xchg
pop
add
xlat
outsb
mov
push
jge
dec
and
sarb
add
mov
dec
inc
lods
aas
cltd
inc
pop
std
fisubs
js
idivb
mov
and
mov
int3
lock
cmpsl
add
xchg
test
xchg
call
cmp
mov
inc
sub
fwait
adc
faddl
inc
xlat
out
dec
push
mov
test
dec
ret
in
loopne
mov
xor
into
negl
lods
sub
les
ja
pop
aad
stc
push
mov
mov
in
cltd
lcall
cmpsb
jns
inc
add
mov
mov
cli
shll
scas
out
mov
rorb
out
stos
push
mov
movsl
divb
ljmp
mov
push
push
stos
fsts
mov
data16
fcompl
ja
mov
xor
and
push
rcrl
aas
test
addr16
inc
mov
out
jne
dec
rcrb
pop
or
fnstsw
fstl
xchg
sub
shll
cmpsb
xchg
bound
pop
xor
and
mov
leave
mov
inc
out
mov
pushf
fdivr
adc
cmpw
cmpsb
gs
roll
lods
mov
popa
add
btr
sub
mov
insl
push
xlat
lret
pusha
cwtl
dec
xor
sbb
movsb
mov
jmp
rolb
fprem1
ret
int
mov
jecxz
jp
pop
mov
adc
daa
movsb
mov
add
xlat
sti
stc
jbe,pn
jmp
repz
shrl
mov
mov
lret
add
in
in
jl
dec
jmp
out
inc
mov
seto
int
and
or
aas
out
cmp
pop
scas
into
dec
pop
push
pop
inc
pop
out
pushf
insb
jne
fsubl
mov
mov
orl
cmp
xlat
movsb
cmp
mov
test
call
push
imul
les
pop
xchg
cld
add
mov
fcmovnb
mov
mov
xchg
shlb
jle
dec
pop
jo
push
jnp
xchg
test
push
sub
mov
in
lahf
mov
cs
daa
je
xor
fmulp
pop
cmpsl
repnz
pop
ss
jns
adc
lods
dec
fcos
mov
inc
repz
hlt
sarb
sub
cmp
rcr
jbe
sahf
sub
dec
push
out
call
sbb
push
sub
mov
stos
jbe
paddsb
test
or
pop
fcmovne
xchg
mov
lods
xor
push
lods
or
shrb
jp
cmc
jnp
pop
pop
cld
incl
or
lret
dec
adc
sbb
mov
negb
ret
call
inc
dec
popf
push
add
jbe
dec
mov
ja
jne
inc
mov
stc
pop
mov
lods
pop
out
pop
test
xlat
adc
sarb
xchg
pop
fnsave
es
cltd
jmp
pop
loope
add
adc
mov
cmpsl
sbb
mov
movb
aad
jnp
dec
mov
pop
mov
push
outsl
movsl
dec
nop
sub
sub
mov
daa
and
mov
out
pop
mov
mov
fwait
inc
mov
pop
xor
iret
xor
push
ss
fnstcw
xchg
sahf
popa
add
xchg
loope
ja,pt
mov
adc
jg
sub
lods
dec
mov
adcl
cmp
push
cld
repz
test
jbe
icebp
lsl
sbb
lea
and
adc
daa
cmp
lcall
testl
fsubl
int
push
mov
lods
xlat
aad
pop
jg
test
fxtract
xchg
push
xchg
mov
mov
lret
mov
adc
int
aam
xor
pop
xor
es
out
jb
xchg
in
cld
jae
in
pop
mov
mov
sbb
xchg
lock
mov
push
loop
mov
les
cmp
loop
mov
lds
mov
call
gs
jecxz
imul
mov
mov
sub
aad
imul
or
xchg
dec
call
xor
lahf
cwtl
mov
stos
add
sub
inc
sub
mov
mov
cmc
push
into
inc
aad
add
xchg
pop
adc
and
jmp
in
add
lret
jo
cwtl
lods
lcall
adc
xor
enter
in
cmp
adc
jo
aas
les
mov
pusha
fnstcw
ud2
xchg
insl
jle
mov
stos
iret
std
jo
inc
inc
mov
cmpsb
push
es
adc
adc
test
xchg
fcomip
mov
mov
notb
leave
daa
xchg
cmp
leave
add
and
cmp
dec
je
ds
jecxz
sub
mov
aas
jnp
dec
addb
cmp
push
xchg
sbb
pushf
imul
insb
rcrl
cmp
aam
sub
arpl
hlt
inc
adc
mov
notl
in
lock
idivb
jne
add
shlb
cmpsb
pop
mov
mov
fbstp
adc
or
mov
fists
mov
and
adc
adc
in
xchg
fcos
add
push
inc
out
adc
add
push
and
lock
in
mov
mov
aad
sub
dec
fbstp
mov
das
mov
cmp
sahf
sbb
aam
xchg
iret
stos
mov
xlat
loop
fwait
xor
dec
test
test
lahf
data16
push
sbb
mov
loope
cmpsl
loop
pop
movsb
jge
sahf
add
lds
push
xchg
lcall
sbb
out
div
xor
xchg
in
iret
stos
cwtl
and
pop
out
inc
mov
jp
inc
sub
dec
std
outsl
cmc
pop
pop
outsl
or
lret
jb
cltd
xchg
jb
js
inc
pop
pop
repz
movsl
andb
pushf
popa
sub
jmp
loopne
mov
pop
and
mov
les
mov
xor
mov
call
add
imul
sbb
icebp
mov
xor
cmpsb
cmpsl
sbb
pop
jle
outsl
push
popf
in
jge
mov
leave
dec
pop
sarl
in
ljmp
push
dec
cmp
and
leave
sbb
or
or
push
pop
add
cmp
shlb
jmp
pop
jle
xchg
push
sbb
pop
push
aad
pusha
or
adc
ja
in
push
fisubs
pusha
popf
sbb
mov
push
dec
cmp
icebp
shll
out
xlat
in
inc
ficompl
push
pop
mov
fdivrl
push
loope
lds
mov
dec
cli
dec
jmp
test
jg
fs
pop
gs
pop
int
pop
mov
insb
add
mov
out
test
push
jecxz
adc
popa
adc
xor
adc
test
xchg
outsb
mov
inc
arpl
jmp
divb
inc
push
fdivrs
mov
movzwl
sarb
imul
inc
out
dec
xchg
ficoms
mov
or
insl
or
pop
divl
xchg
mov
arpl
imul
push
mov
popf
movsl
std
mov
std
mov
cli
fisttpll
test
inc
fmul
lea
sahf
lret
sti
dec
xchg
xor
sub
repnz
add
aaa
xchg
or
je
dec
pop
loopne
push
ret
mov
loopne
cmp
adc
add
push
mov
dec
push
pop
cmp
shl
pop
adc
sbb
add
sub
mov
aad
jb
lea
jl
rcl
sbb
stos
cmpsl
mov
sahf
xchg
inc
cmp
cmp
or
je
push
dec
push
adc
and
mov
idiv
and
and
int
sbb
xchg
mov
add
aad
es
pop
adc
cmp
idivl
mov
sbbl
jge
insl
aam
dec
rclb
sbb
jne
ret
sub
hlt
pop
xchg
lds
rcrb
mov
test
pop
push
jmp
push
sub
sti
jnp
std
push
lret
xor
addr16
jmp
inc
or
xchg
push
mov
shl
lea
dec
cmc
push
mov
xchg
mov
mov
inc
orl
xor
inc
ss
sbb
mov
dec
inc
ret
imul
push
push
lock
jo
jo
adc
cs
push
jnp
or
out
add
mov
push
xor
aad
sahf
pop
mov
mov
sbb
lret
sub
cmpsb
add
inc
jge
jb
xchg
jns
test
mov
push
inc
and
ja
push
bound
inc
int
fidivrl
js
or
ret
xchg
sbbb
les
mov
mov
dec
adc
mov
jl
mov
cs
ret
cltd
lahf
push
dec
adcl
out
mov
adc
gs
inc
into
std
ds
mov
pop
push
out
testb
jle
cmp
jmp
shlb
adc
leave
rolb
mov
imul
dec
in
sbb
push
pop
adc
jo
lret
xor
pop
dec
rcl
ja
repnz
cmp
mov
fwait
adc
and
lret
movsl
jg
push
in
pop
mov
movsl
mov
cld
sbb
sub
inc
dec
and
dec
loop
dec
or
inc
xchg
repnz
scas
mov
inc
pop
data16
cmp
and
call
insb
pop
pop
push
subl
sti
es
sbb
sbb
popa
fistpl
imul
lds
mov
adc
mov
mov
jl
nop
inc
test
cmp
jae
inc
xchg
xchg
lcall
in
popa
in
jne
xor
pop
cmpsb
pop
inc
movsl
push
or
mov
aaa
lret
sbb
cs
push
fadd
ss
inc
inc
pusha
incl
sbb
pop
sarb
jmp
leave
test
clc
push
jbe
cld
add
imulb
cmpsb
int
mov
or
cld
mov
and
fwait
jge
sbb
stos
mov
xchg
fwait
and
leave
jns
dec
adc
popa
mov
lcall
jecxz
stos
fstl
test
movsb
pop
in
imul
ds
xchg
cmp
lahf
xor
stos
fwait
je
mov
mov
fsubrl
cmp
push
sub
lahf
test
imul
std
or
jmp
sbb
sbb
xor
push
not
lahf
into
push
xor
fstpt
fidivrl
rorb
jecxz
mov
inc
adc
movsl
pop
into
call
loopne
daa
in
insb
jns
and
cmp
xor
xor
jo
sub
cwtl
sub
xor
sti
ss
jns
jo
mov
cmp
scas
lret
or
outsl
neg
push
mov
fisubs
arpl
and
addr16
and
cwtl
testb
stos
add
jnp
stc
ds
push
xchg
sbbb
xchg
ss
xor
xchg
enter
or
faddp
mov
les
pop
adc
scas
roll
push
mov
xchg
movsb
das
hlt
pop
bound
outsl
jmp
aaa
mov
mov
inc
movsb
push
jb
outsb
pop
imul
pop
sub
jno
enter
test
aas
movsb
xor
mov
and
les
clc
popf
xor
inc
jne
std
stos
test
sub
cmp
jo
and
adcl
adc
push
xchg
cmp
imul
xor
add
pop
lds
les
jl
push
mov
lods
inc
dec
jne
jge
add
mov
outsb
cmovle
mov
sub
sub
iret
pop
js
rcrb
stos
xchg
xor
mov
mov
aaa
movsl
call
sbb
scas
rcll
in
data16
inc
cmpsl
push
sub
sbb
jge
push
inc
sub
clc
xor
and
jecxz
out
mov
mov
aas
and
mov
pop
lcall
out
test
inc
jns
test
sbb
das
push
into
jp
cmpsb
bound
inc
scas
test
shll
cmc
dec
cwtl
inc
mov
out
scas
mov
xchg
xor
or
pop
lret
dec
inc
adc
jnp
cmp
lea
stos
jo
hlt
xchg
negl
cmp
jge
and
es
xor
aas
call
xchg
inc
pop
dec
jecxz
loop
mov
test
out
inc
lahf
ret
ret
mov
add
mov
loope
cmpsl
cs
and
mov
mov
or
ja
cmp
pop
sub
hlt
mov
or
nop
push
call
aad
xor
lods
pop
pop
aaa
gs
push
push
dec
or
negl
sarl
cmpsl
push
cmpsb
cmpsb
pop
mov
nop
aam
or
orl
shlb
cs
mov
out
clc
lods
sti
xchg
leave
cmpsl
imul
mov
clc
inc
sub
in
pop
push
movsl
popa
fs
nop
inc
ja
and
push
iret
mov
adc
sbb
faddl
pop
xchg
inc
into
hlt
jge
pop
fsubrs
lret
or
xchg
in
in
cmpb
push
xchg
add
xlat
out
push
mov
aas
ret
sti
inc
aam
push
ret
aam
cwtl
and
imul
cmpsl
or
mov
lods
popa
outsb
xor
pop
xchg
sub
or
mov
adc
cmpsb
stc
xorl
test
int3
call
xor
mov
xlat
imul
jmp
push
mov
mov
xor
jo
inc
lods
xor
dec
sub
mov
and
xchg
movsl
jne
imul
daa
icebp
cs
mov
mov
dec
mov
cmp
jg
test
jno
popf
push
sbb
ret
cli
sbb
outsb
sub
les
and
dec
xchg
inc
mov
add
jns
jno
out
inc
leave
imul
ss
scas
les
fldenv
insl
outsb
and
push
mov
rcrl
mov
pop
push
sbb
xchg
iret
fs
int
push
xorb
xchg
and
les
ss
push
cld
cli
fldenv
adc
push
iret
ficoms
imul
add
jb
and
fisttps
inc
sbb
dec
popa
lret
cmp
scas
jbe
loope
dec
hlt
shlb
fstpl
mov
push
jg
push
test
test
inc
lahf
in
ret
rorb
pop
add
mov
out
jmp
jns
das
or
fwait
pop
es
outsb
sar
mov
inc
xchg
jl,pt
ret
cwtl
je
or
jmp
xchg
nop
xchg
mov
sub
in
cmp
xorb
into
xor
popf
push
xor
adcb
push
mov
jnp
add
and
mov
xchg
mov
out
mov
bound
jb
push
mov
add
ss
pop
pop
scas
jb
ficoms
push
and
lret
jge
xlat
les
aad
std
negb
pop
dec
lea
clc
jo
cli
or
push
cs
scas
nop
dec
int3
fstpt
mov
jbe
aaa
js
test
hlt
push
inc
js
add
mov
enter
std
mov
adc
data16
stos
pop
lahf
mov
and
shrb
adc
xchg
std
mov
mov
xor
out
mov
ret
les
stc
sbb
dec
xchg
inc
cmpsl
and
add
jle
loop
push
jge
out
iret
ret
inc
popf
xor
sti
loope
mov
sbb
sbbl
idivb
pop
cmp
mov
cmp
xor
xchg
dec
jae
out
cmc
and
jne
inc
fdivs
iret
mov
movb
lock
lret
xchg
in
pusha
insl
jae
in
cld
in
mov
test
ret
loopne
lcall
arpl
push
pop
mov
pop
mulb
sub
stos
jecxz
mov
aam
jbe
aad
mov
add
jp
push
dec
xchg
dec
imul
stos
cld
lcall
mov
mov
mov
dec
jbe
ffree
dec
aam
insb
out
popf
xchg
daa
adc
add
daa
sti
push
cwtl
ljmp
stos
jo
stos
inc
and
or
and
lods
jb
push
rorb
out
popa
dec
cmp
jno
scas
or
cwtl
push
jns
and
in
not
sbb
lcall
ljmp
xchg
push
insb
cmp
inc
add
add
lret
sti
sbb
push
adc
xor
sub
repnz
xor
fdivrs
xchg
adc
sti
push
cmpb
inc
xor
std
adc
mov
test
repz
std
add
cmpsl
stos
shll
inc
dec
fisttpl
dec
inc
push
les
repnz
xor
leave
add
mov
ss
sub
lahf
shll
mov
testb
xchg
call
and
std
jae
lock
lret
xchg
neg
bound
lock
popa
xchg
mov
add
adc
shl
je
push
cmp
inc
pop
fdivrs
fnstenv
test
mov
mov
push
sbb
or
jg
inc
out
add
leave
int3
push
je
je
cli
pop
xor
sbb
add
sub
mov
lcall
sbb
ja
ja
loopne
sub
and
cs
imul
dec
inc
rcl
pop
imul
movl
lods
repnz
fbstp
jp
test
clc
push
inc
fisttpll
and
cmp
push
out
cmp
and
out
mov
movups
mov
lahf
pop
clc
bound
lock
jle
lds
jge
or
or
inc
aam
push
xor
gs
ss
add
jno
cs
mov
add
fsubr
pop
stc
in
pusha
dec
jno
inc
pop
in
iret
out
fisubs
js
mov
rcpps
sbb
add
imul
adc
inc
sbb
sarl
cwtl
mov
mov
insb
fwait
sbb
popf
gs
inc
and
fdivl
scas
adc
mov
sbb
dec
add
pop
rclb
mov
adc
loopne
pushw
xchg
pop
enter
adc
adc
call
or
jmp
xchg
or
mov
add
add
fcoms
fucomip
sub
jmp
stos
adc
add
dec
cmp
sarl
xor
and
and
sbb
and
outsb
xor
push
inc
dec
mov
mov
inc
loope
jle
stos
cmpsb
push
das
cmpsl
mov
shll
mov
inc
sbb
in
ficoms
movsl
cld
arpl
hlt
add
test
repz
cmp
test
js
shrl
inc
je
inc
pushf
inc
mov
outsl
js
mov
mov
push
or
mov
aaa
push
jl
sti
cmp
fldl
addb
lret
mov
mov
leave
jge
daa
cmp
jae
mov
clc
cmc
inc
pop
int
int
out
int
iret
add
add
jo
inc
scas
pushf
fmulp
cmp
pop
xor
int3
rolb
sub
stos
pop
ror
inc
mov
push
subl
xchg
push
mov
xchg
cltd
imul
xor
add
ficompl
fcmove
loop
fstp
sti
aad
shrl
push
pusha
aad
fnstcw
sub
aam
lock
notb
ss
cmp
mov
push
ljmp
push
aaa
sub
xchg
adc
mov
pop
or
data16
xlat
jae
mov
dec
mov
pop
imul
lcall
arpl
and
insb
ret
pop
sub
adc
jge
out
imul
popf
mov
push
jecxz
xlat
fs
out
cltd
cli
dec
xor
sub
pop
or
int3
dec
sbb
outsl
xor
lret
push
xorb
leave
xor
pop
mov
arpl
aad
and
cmpsl
and
daa
jp
inc
jne
dec
push
dec
jmp
into
sub
mov
push
jb
arpl
in
and
aaa
mov
xchg
repnz
lret
cmp
sub
inc
mov
sahf
sub
push
mov
adc
daa
cltd
push
lret
lods
pop
mov
sbb
aas
addr16
mov
insb
inc
pop
cs
jg
inc
or
pusha
jle
outsl
push
mov
popa
jmp
fdivl
inc
hlt
mov
fs
xor
fs
imul
mov
gs
ss
pop
mov
ror
pop
ds
push
movsb
cltd
stc
mov
out
push
cmpsb
or
push
cwtl
adc
adc
or
loopne
xchg
xchg
sub
loop
ds
es
test
push
jnp
add
xor
cs
loopne
sysret
out
and
jmp
adc
test
outsb
sbb
stos
sbb
sbb
sbb
jbe
fnstenv
cmp
push
roll
fs
cmpsb
fwait
leave
jl
add
or
outsb
vpsrld
aam
cs
stos
jae
xor
cmpsl
inc
mov
mov
dec
dec
lahf
jns
or
jo
add
mov
sbb
xchg
lret
shll
sbb
add
stos
jbe
call
aaa
leave
add
addr16
mov
sbb
sarl
sti
scas
push
cmp
push
push
test
pop
mov
sub
mov
sbb
add
and
jge
out
sub
cmp
das
sbb
pop
aaa
lahf
icebp
push
das
cs
cmpsl
loope
pop
dec
loop
hlt
popf
in
scas
pop
jp
and
repz
push
mov
mov
xor
jmp
push
fsubrl
fisttps
je
hlt
stos
sbb
or
or
cmp
pop
movsl
loopne
xor
xor
mov
sbb
andl
mov
or
mov
sub
mov
fs
add
dec
jo
jecxz
imulb
dec
push
xchg
hlt
test
sbb
cmpsb
pop
sub
dec
jne
jecxz
lock
aad
xchg
in
pushf
cmp
add
stos
cmp
stos
mov
stos
fistl
mov
lret
jns
mov
mov
jmp
adc
inc
popf
mov
mov
js
dec
ffree
or
outsb
jo
sub
outsb
sub
mov
dec
insl
test
ffreep
leave
idivl
aam
std
jne
adc
insl
fdivrp
xlat
stc
inc
adc
mov
jmp
or
pop
ljmp
dec
dec
mov
testb
stos
fiadds
and
pushf
inc
cmp
mov
bound
pop
aam
sbb
iret
lcall
pop
mov
cmp
add
fists
pop
add
imul
xchg
pop
jae
mov
jle
adc
cli
add
mov
stc
stc
inc
and
into
cmp
or
pop
lahf
mov
ljmp
popa
scas
jno
push
jle
aam
mov
test
stos
add
mov
pop
jecxz
pop
adc
enter
out
or
sbb
rolb
cltd
and
sub
lcall
js
mov
add
mov
divl
and
dec
roll
xchg
test
popa
insl
mov
jg
jno
lahf
pop
xor
mov
call
mov
out
lahf
xor
xor
movsl
xchg
outsl
jno
pop
xor
loop
inc
mov
pop
rcrb
cmp
std
enter
outsl
rorb
lahf
ds
lods
mov
aad
jle
fucomip
fucom
mov
sbb
xchg
int
popa
pop
pop
icebp
xchg
push
lea
test
in
mov
jle
sbb
dec
mov
push
mov
cmp
dec
pop
outsl
ds
xchg
lds
mov
stos
cmp
inc
sub
mov
aaa
jp
outsl
call
ror
inc
xchg
add
or
sahf
enter
inc
cmp
fs
sbb
sub
pusha
sbb
mov
std
xchg
xchg
mov
popf
leave
test
inc
adc
gs
bound
mov
aas
mov
cs
cmpsl
inc
rorl
jns
cmpsl
cmp
pop
pop
loop
loope
sarl
lods
sbb
pop
mov
push
adc
cltd
cmp
int
mov
aaa
xor
cmpsb
testb
inc
mov
jbe
mulb
int3
push
cmp
or
outsb
and
pop
inc
out
inc
add
cmp
stos
push
inc
pusha
mov
in
mov
bound
loopne
sbb
sbb
dec
or
cmp
jp
push
sub
std
push
aad
iret
dec
and
push
jle
cltd
mov
in
mov
out
pop
fnstcw
mov
push
