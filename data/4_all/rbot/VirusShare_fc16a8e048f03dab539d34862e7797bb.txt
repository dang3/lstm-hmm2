enter
mov
mov
loop
insl
pop
inc
xor
push
shlb
xchg
push
xchg
mov
mov
or
jecxz
das
arpl
lret
lret
add
fsubl
and
pop
pop
add
shl
xchg
mov
or
js
pop
inc
lret
push
mov
push
mov
xchg
sbb
bound
je
mov
pop
das
aad
xchg
dec
aam
pop
pop
bound
loop
rorb
or
sbbl
push
shlb
fstl
das
daa
add
fmull
dec
sti
mov
cwtl
xor
inc
out
cmp
dec
pop
jne
jo
xchg
outsl
pop
sbbb
and
mov
std
xchg
cmp
inc
test
pop
in
cli
sbb
jno
fildl
adc
or
out
ljmp
ds
sbb
xchg
pop
sbb
mov
inc
xor
in
push
jl
fistps
add
stos
mov
mov
pop
sbb
add
mov
dec
dec
rcr
aaa
shlb
ljmp
pop
pop
pop
mov
push
cld
pop
aas
sbb
pop
cmpsb
inc
hlt
adc
and
shlb
fwait
push
jo
loopne
mov
hlt
sub
xor
data16
sahf
into
jp
mov
clc
shlb
in
xchg
out
push
cmpsl
mov
jno
iret
xchg
push
xchg
fisubrs
in
xor
push
clc
out
mov
xor
or
lcall
arpl
adc
aaa
fisttpll
sub
pop
jp
dec
movsb
iret
adc
jge
clc
cwtl
jecxz
xchg
add
sbb
lcall
sub
data16
dec
in
mov
xchg
aad
or
jmp
cmp
sub
es
add
xorl
out
pop
loopne
lret
les
lock
das
into
popf
adc
loop
xchg
mov
mov
loope
inc
enter
push
je
xor
jp
fwait
add
sub
lods
jmp
lods
repnz
pop
mov
and
inc
xchg
mov
ja
stos
xor
enter
nop
js
pop
shlb
cltd
cli
ret
dec
shll
ja
mov
cli
insl
lahf
addb
adc
notl
ja
adc
mov
or
hlt
lahf
mov
mov
jg
xor
notb
cli
test
loopne
xchg
mov
add
aad
cli
jo
xchg
xor
xchg
adc
incb
rcll
popf
mov
jnp
adc
adc
mov
adc
inc
lcall
cmp
test
push
mov
push
pop
xor
data16
out
xlat
addr16
popa
addr16
mov
dec
arpl
inc
jmp
jbe
inc
xchg
inc
jg
js
jno
in
push
mov
or
bound
test
loopne
sbb
add
jo
jns
pushf
mov
rclb
scas
cld
lods
in
shrb
mov
inc
inc
dec
mov
push
push
fwait
dec
lea
xchg
jno
decb
mov
mov
loop
mov
push
fadds
les
or
mov
push
cmp
je
xchg
sub
lahf
inc
test
push
dec
lahf
or
popf
sub
and
push
ret
ret
shl
outsb
notb
adc
xor
inc
pop
sub
dec
je
adc
fldt
sbb
out
pop
cmp
dec
dec
outsb
jp
pop
scas
in
push
ja
or
insb
and
mov
rol
lock
add
stc
jmp
push
icebp
repz
insl
dec
and
cmpsb
loopne
cmp
call
stos
pcmpeqb
jns
jge
outsl
pop
sbb
and
mov
add
cs
xchg
jmp
cmpsl
push
fwait
lods
cmpsl
dec
lea
mov
loop
add
xchg
pop
jp
jns
and
push
and
imul
cmc
leave
popa
push
outsl
push
inc
mov
roll
jbe
sbb
test
pop
mov
pop
mov
punpckhdq
xchg
dec
mov
mov
sub
enter
xlat
js
push
sbb
in
jo
push
stc
movsl
lret
in
push
in
fistpl
push
cmp
fbstp
sub
lock
xchg
inc
sbb
mov
shrl
mov
daa
jmp
clc
mov
add
std
xor
mov
ds
jns
sbb
inc
push
inc
mov
shll
lcall
jmp
out
jno
or
sub
call
and
dec
sti
mov
lea
or
and
inc
test
ret
jbe
out
addr16
mov
xor
push
jb
stos
sub
mov
addb
cmp
push
std
inc
or
outsb
jg
mov
inc
cmp
imulb
jb
std
jo
mov
sbb
xor
rcrb
sbb
and
pop
lock
xchg
lock
push
stc
mov
subps
xchg
adc
mov
or
hlt
insb
shrl
dec
popf
xor
out
aas
or
fsts
jno
pop
cmp
outsb
lea
cmpsl
push
cmp
inc
jl
call
rcrl
arpl
jb
dec
repnz
imul
int
sub
push
shrl
les
dec
and
adcl
sbb
sbb
add
call
inc
pop
jle
orl
add
pop
sbb
sbb
rorl
in
or
or
mov
cmp
adc
cltd
push
xlat
dec
pop
pop
cwtl
mulb
sub
sub
scas
ljmp
outsl
daa
outsl
sub
jle
les
cld
xor
test
fcmove
popf
cmp
iret
loopne
stc
push
ds
pop
mov
push
jbe
and
or
leave
pusha
ja
adc
jbe
jo
push
push
pop
pop
jmp
dec
movsl
clc
xchg
cli
shll
or
shrb
dec
cwtl
jge
mov
fninit
and
dec
int3
add
xor
inc
stos
cli
pop
inc
pusha
push
mov
pop
cld
push
pop
push
push
pop
cmp
je
cmp
jne
int3
push
push
add
pop
rol
push
pop
push
sub
pop
nop
rol
push
xchg
pop
add
push
add
test
add
xchg
xchg
test
xor
xor
stc
loop
pop
nop
test
clc
mov
xchg
jns
jns
add
jmp
repz
dec
fstpl
pop
subb
cmp
dec
mov
adc
stc
dec
imulb
add
sbb
pop
add
add
sub
dec
sbb
mov
aam
push
mov
fcmovb
mov
fisubrs
sbb
aam
inc
push
cmp
mov
nop
ret
fcmovu
inc
add
and
jno
sub
dec
adc
pusha
push
xchg
jg
out
shlb
ja
cmp
add
pop
call
jp
push
add
jmp
mov
push
shll
sbb
xor
mov
es
scas
loop
adc
cmp
xchg
jp
fs
sahf
iret
sbb
leave
ja
push
add
push
test
mov
test
pop
mov
inc
push
test
push
hlt
shrb
les
jl
cld
jmp
and
sub
fimull
jnp
sbb
out
mov
jp
pop
into
xorl
cmpb
sbb
push
add
lcall
clc
push
jl
push
add
pop
loop
jecxz
leave
scas
sti
dec
push
fdivrl
xor
loope
in
inc
add
rol
cld
jae
push
mov
pop
test
push
push
push
pop
pop
pop
nop
lea
push
sub
pop
or
push
add
push
pop
pop
cmp
push
jnp
and
pop
and
push
jp
push
dec
pop
pop
test
push
add
or
pushl
pop
push
xor
pop
push
movzbl
or
jns
jg
test
cmc
cmc
loop
pop
cld
dec
inc
stc
push
push
cmp
pop
pop
inc
dec
jl
rol
js
js
sar
nop
lea
testl
jne
jmp
fnop
jns
push
push
mov
pop
pop
push
add
pop
push
call
arpl
insb
mov
mov
in
lahf
fneni(8087
popl
and
add
lahf
mov
push
push
pop
pop
push
pushl
xor
pop
pop
test
loop
jecxz
jmp
and
shrl
and
xor
out
aaa
hlt
xchg
adc
jmp
les
pop
ret
push
mov
push
inc
cld
lea
sub
push
push
push
pop
pop
stos
push
push
pop
pop
pop
push
mov
pop
test
loop
jecxz
jb
or
adc
rol
aam
std
mov
je
lods
sbb
sub
or
fstpl
pusha
ja
cmp
in
insl
nop
mov
pop
inc
inc
add
ja
push
jge
push
push
pop
pop
pop
loop
jecxz
and
mov
add
add
test
or
add
test
jne
push
rol
pop
add
js
push
dec
pop
ror
neg
neg
js
xor
dec
jne
cld
push
call
shl
hlt
test
insl
jge
icebp
cltd
xchg
sub
addr16
aaa
and
mov
int
aad
and
sub
inc
lds
adc
movsl
mov
push
adc
rcll
xchg
sub
inc
orb
inc
repnz
or
les
clc
adc
fistl
push
add
add
mov
pop
loopne
and
cs
fldl2e
xchg
dec
gs
inc
imul
or
jo
sahf
lock
mov
rcl
mov
or
jbe
cmpb
dec
pusha
add
hlt
fs
ror
negb
fs
icebp
gs
nop
arpl
cmp
and
inc
mov
int3
ja
xlat
add
jo
mov
dec
jo
clc
sbb
test
clc
pushf
sbb
jecxz
cmp
sbb
inc
xchg
sbb
jnp
aam
outsb
dec
sbb
fcoms
ss
scas
in
repz
cwtl
and
lock
lret
repz
int
or
in
mov
or
mull
lods
aad
fs
sahf
sub
and
and
cmovnp
imul
daa
push
lods
je
sub
mov
push
decb
xchg
push
fwait
pshufw
jecxz
mov
jl
lcall
inc
pop
rclb
movsl
inc
shlb
sbb
mov
lods
cmpsb
cmp
dec
enter
xor
in
ss
xchg
sub
mov
aas
dec
daa
lahf
dec
imul
sbbb
adc
push
jae
xor
sub
lahf
push
dec
jmp
pop
xor
je
or
jl
jle
rol
rol
push
add
js
push
add
pop
lea
pop
icebp
inc
sbbl
xor
clc
or
ja
rclb
arpl
inc
in
enter
xchg
orps
or
mov
loope
mov
pushf
pop
adc
pop
or
and
mov
in
rorb
cmp
mov
adc
push
and
jae
mov
pop
mov
dec
shlb
xchg
pop
test
mov
test
xorl
lret
les
ss
cli
dec
pop
xor
adc
cmp
pop
es
aas
add
push
or
outsb
popa
stc
and
mov
jle
pop
lret
mov
aas
push
ja
jg
in
stos
mov
gs
fiaddl
xorb
lret
mov
daa
xorb
xchg
fidivrs
mov
inc
addb
fidivs
xchg
enter
adc
bound
loopne
dec
icebp
jo
pop
sub
call
pop
shl
or
call
cmp
std
in
dec
test
sahf
mov
push
push
mov
ja
data16
push
notl
dec
cs
rorl
push
and
lahf
inc
jo
xor
xchg
fimull
push
int
pop
or
fstps
xor
lods
mov
lods
scas
pop
xlat
cli
mov
ret
aam
popf
inc
xor
sub
in
fisttps
sti
shll
cs
and
outsl
mov
pop
je
out
mov
push
bound
cmp
repz
mov
mov
sub
push
sarb
mov
and
sahf
mov
mov
pop
in
mov
jle
enter
repz
jp
aas
or
dec
cmp
daa
mov
in
mov
pop
mov
scas
adc
pop
push
js
and
data16
aad
ret
mov
push
es
fcmove
gs
mov
rol
pop
rcrl
dec
mov
repnz
jg
arpl
mov
wbinvd
fnstenv
test
dec
jecxz
mov
jo
mov
jg
lds
sahf
pop
insl
out
sarl
sub
lods
add
xlat
lret
mov
lods
cltd
in
addr16
mov
in
test
and
or
xor
out
and
mov
mov
lcall
adc
ss
adc
mov
js
testl
ret
outsl
iret
jmp
mov
in
adc
popa
fcoml
lahf
mov
aaa
push
sbb
fbstp
mov
test
mov
sahf
xchg
test
fdivrs
or
loop
ja
lahf
jbe
arpl
pop
es
or
arpl
push
mov
adc
fadds
sub
xor
add
pop
es
sbb
shlb
je
or
stos
or
cmp
and
addb
call
jg
add
inc
aaa
outsl
sbb
mov
mov
or
xorl
scas
popa
in
enter
inc
sbb
in
dec
xor
insb
inc
fdivl
jmp
mov
xor
xchg
lcall
xor
loopne
or
fisttpll
fwait
sbb
adc
out
adc
mov
test
xchg
cltd
cli
add
adc
stos
hlt
xor
adc
shlb
aam
fiaddl
cmp
mov
lcall
xor
int
orb
push
test
in
jge
pop
dec
insb
xchg
jo
nop
jg
aaa
je
loopne
sub
or
sbb
pop
and
push
je
inc
std
xchg
or
cmpsl
add
cmp
or
xor
xchg
jnp
add
dec
scas
negl
scas
and
mov
clc
mov
mov
xor
adc
dec
aaa
dec
ret
cmp
mov
xchg
jge
fwait
or
xor
cmp
data16
scas
sub
dec
cmc
fscale
jmp
push
cwtl
imul
inc
prefetch
mov
cmpsl
outsl
and
push
mov
dec
and
xor
repz
cld
mov
outsb
nop
cmpsb
mov
decl
mov
inc
stos
ja
xchg
adc
stos
repz
outsl
pop
pop
add
into
or
cld
lret
jecxz
rcrl
shrb
pushf
movsl
cmp
push
loop
fiaddl
aaa
sbb
adc
out
mov
in
les
pop
xor
sub
sub
xchg
pop
lcall
dec
or
add
cltd
jle
push
or
lds
adc
xor
jae
test
aad
std
and
das
cltd
add
sbb
inc
jg
rcr
cltd
pop
fdivl
repz
testl
pushf
sahf
mov
clc
or
into
pop
jge
jbe
in
cmpsb
mov
scas
or
cmp
jge
mov
repnz
pusha
jmp
gs
lea
mov
sub
imul
insb
insl
in
and
loope
inc
pop
imul
dec
repnz
jbe
dec
mov
and
mov
jns
std
xchg
jno
sbb
stc
mov
hlt
mov
pop
xchg
test
repnz
dec
jbe
movsl
cmp
ret
push
lock
lods
and
outsb
addr16
xchg
das
imul
xor
ja
or
ficoms
mov
pop
aad
lock
in
jp
jp
dec
jne
int3
xchg
data16
cmpsl
outsl
jbe
rclb
leave
fsubrl
pop
push
mov
jns
adc
adc
inc
or
int
jno
jae
aas
pop
aaa
mov
lea
cltd
inc
mov
and
gs
xchg
xchg
sbbb
das
les
inc
xchg
push
hlt
pop
xchg
pushf
xchg
mov
popf
in
negb
pop
lods
cld
gs
sub
popa
jb
scas
test
xchg
test
pop
pop
or
imul
stc
mov
push
jle
mov
mov
sbb
mov
pop
dec
pop
lock
xor
shrb
stc
shl
imul
mov
test
or
pop
or
inc
adc
fisttpl
mov
test
scas
in
ret
mulb
pop
adc
jmp
cmpsb
xorb
sarl
outsb
mov
cmp
mov
mov
or
adc
int3
pushf
loopne
shr
xor
mov
ss
cmp
js
shrl
cli
insl
pop
out
repnz
loop
mov
cltd
inc
mov
xchg
test
int3
cmp
push
push
ja
pop
inc
pop
adc
add
xchg
addr16
roll
loopne
arpl
inc
nop
mov
dec
xlat
sysexit
cltd
cli
xchg
mov
push
jnp
test
push
movsl
mov
fmull
pop
xchg
lahf
jbe
mov
cwtl
mov
fsubp
movsb
jle
and
fwait
pusha
jo
iret
jg
push
jb
ret
xor
pop
adc
adc
add
lahf
shr
jne
cmp
push
mov
movsl
lock
imul
pop
sbb
mov
in
lds
lock
or
leave
jo
push
fucomp
xchg
inc
rol
stc
adc
push
rcll
xchg
mov
rclb
dec
or
popl
xchg
imul
push
xchg
outsl
lods
dec
jge
jns
loope
push
mov
pop
xchg
dec
adc
aam
fistps
adc
sbb
das
sub
inc
xor
rep
fstpt
xlat
or
dec
daa
jle
dec
push
mov
mov
inc
lods
cmp
out
adc
and
add
negl
fwait
adc
repz
pop
or
dec
or
fwait
adc
loop
pop
aas
fwait
add
push
sub
in
out
sbb
jo
mov
push
jb
push
xchg
imul
and
maxps
ljmp
push
add
testb
and
int
pop
sbb
pop
mov
jmp
gs
cmpsl
dec
cmp
pop
iret
xchg
add
cmpl
clc
mov
popa
fisttps
cmp
test
mov
mov
outsl
out
je
sbb
into
data16
in
mov
mov
jns
add
adc
add
test
add
insb
mov
ljmp
insb
call
push
ss
pop
bound
std
repz
jge
test
test
jge
popa
mov
mov
pop
js
gs
or
dec
stc
or
push
cli
shrl
mov
int3
aad
sbb
jbe
cmp
or
icebp
jp
pop
ss
cld
xor
inc
sub
sbb
in
in
mov
and
insl
dec
xchg
add
stos
and
repnz
decb
mov
jmp
cmp
fcmovnb
xor
push
adc
adc
and
sub
fwait
add
rclb
jns
cmp
jge
add
push
sahf
mov
fs
xor
out
inc
in
push
sti
xchg
sbb
sub
scas
cmp
call
jp
movsl
aam
mov
jp
shr
je
call
jle
jbe
out
pop
outsl
divb
or
pop
int3
repz
xchg
scas
fisttpl
out
cmp
dec
add
test
add
adc
out
or
and
cld
fidivs
push
inc
das
imul
dec
cmp
or
adc
xchg
and
push
xchg
pop
and
and
shll
in
jno
jmp
push
mov
add
inc
mov
jo
xchg
cltd
mov
nop
inc
xlat
dec
cmp
and
sbb
ret
jne
jmp
aas
test
mov
pop
lods
loopne
js
sbb
shlb
sub
ret
stc
out
xchg
testl
pop
dec
cmp
xlat
dec
call
jns
xchg
lcall
faddl
test
and
aas
add
dec
outsl
iret
push
pop
pop
js
or
jmp
xor
and
jecxz
sbb
sarl
mov
dec
mov
push
add
sti
insb
xor
mov
je
rcr
cmpb
and
lahf
inc
out
movsb
and
ja
pop
push
fcomip
cmp
stos
fldenv
push
pop
add
sbb
test
push
ret
dec
icebp
movswl
jb
test
sub
sub
enter
pop
jp
or
mov
stos
xchg
sbb
inc
lock
and
ss
pushf
lahf
aad
xor
gs
xchg
push
sbb
cmpb
or
gs
out
cltd
rol
inc
inc
adc
pop
orl
lcall
test
imul
insb
clc
push
in
or
mov
sahf
out
sbb
or
jg
hlt
mov
int3
insl
out
cld
dec
pop
gs
push
mov
dec
stc
mov
mov
fnsave
fwait
add
inc
ds
pop
insb
mov
push
pop
stc
shrb
mov
test
jmp
or
dec
pop
mov
das
pusha
aas
fwait
mov
sub
push
pop
ds
outsl
jp
mov
xchg
mov
not
loop
xchg
and
mov
stos
repnz
mov
add
out
adc
lea
sahf
fnstenv
xchg
stos
push
inc
push
jp
ror
mov
push
mov
and
es
pop
std
data16
sub
dec
sbb
lret
inc
and
xor
sbb
dec
clc
std
sub
rorl
ss
stos
mov
out
int
orb
iret
das
lods
xchg
ljmp
pop
filds
push
pop
push
cwtl
or
mov
mov
imul
add
mov
push
leave
cmp
mov
fcmovne
bound
mov
mov
ds
insb
out
xchg
icebp
bound
add
ss
sbb
xor
sub
pop
push
or
lods
xchg
sub
adc
fsubrl
sbbb
jo
mov
in
cmc
push
mov
lcall
sbb
push
add
mov
sub
mov
in
xlat
fdivr
inc
stos
ja
fdivs
lcall
testl
push
jmp
jl
hlt
outsb
jne
rcll
orl
shlb
pusha
mov
clc
popf
nop
cs
cmpsl
rorb
sub
mov
push
fs
lea
adc
imul
out
fwait
arpl
adc
insl
or
fdivs
adc
in
or
aas
xchg
dec
mov
int3
xchg
xchg
sbb
je
jae
movsb
sbb
dec
lret
and
jns
test
mov
sub
andl
lods
pusha
dec
sbb
pop
and
add
xor
test
pushf
out
movsl
in
push
sbbb
mov
cltd
pop
mov
fmuls
or
lds
cmpsb
pop
inc
cmpsl
repnz
nop
out
xor
pop
cmp
or
inc
data16
fs
dec
dec
dec
pop
jg
fisubrl
cmpsl
icebp
lcall
jbe
mov
scas
add
mov
xchg
sbb
add
hlt
dec
mov
mov
mov
pop
xchg
dec
shll
mov
in
or
dec
sahf
outsl
jle
mov
incb
mov
mov
fidivl
jge
cmp
or
lea
and
inc
add
lods
mov
and
mov
or
cmp
lds
test
sbb
push
push
push
lahf
push
lret
xchg
scas
fdivrp
mov
js
jg
lods
mov
daa
push
xchg
mov
push
jge
cmp
mov
cs
das
cmp
or
xchg
jno
ret
xchg
and
jecxz
pop
sbb
xor
fisubl
adc
xchg
in
je
aaa
cs
subb
sti
jnp
jg
jno
fildl
dec
mov
sbb
pop
xchg
add
xchg
adc
cli
imul
add
gs
dec
insb
stos
aad
and
jnp
or
xchg
std
jmp
das
les
lret
std
stos
jns
add
sbbl
popa
mov
inc
minps
xor
jno
jbe
xchg
aam
xchg
pushf
lds
xchg
xor
stos
in
js
pop
sbb
inc
xchg
add
cltd
pop
dec
fdivrs
push
and
fdivr
sub
jae
push
jne
jno
loope
pop
adc
dec
dec
and
fwait
mov
xchg
pop
repz
xchg
nop
mov
repnz
xchg
pop
pop
cmp
out
lret
dec
and
inc
dec
dec
test
add
cmp
stc
mov
dec
popa
cmp
scas
add
aad
inc
jne
sub
cs
jb
sub
add
pop
test
fisubrl
dec
ret
test
mov
ljmp
cld
test
adc
and
lock
jns
std
movsl
jp
out
and
jecxz
dec
and
mov
sbbb
dec
adc
mov
add
mov
jl
add
cmp
sub
fdivrp
mov
pop
lods
call
jecxz
jecxz
loope
add
in
fsubl
jae
hlt
loope
hlt
xor
fisubrl
mov
jecxz
shrb
xlat
in
dec
dec
arpl
imul
inc
stos
push
xchg
and
iret
lcall
add
sbb
cmp
push
jb
or
pop
xor
lea
fs
sahf
ret
stos
lcall
jp
and
mov
dec
pop
decb
add
fcoms
jns
dec
cltd
jl
cmpsb
ljmp
and
int3
js
sub
xchg
ret
dec
cld
xor
xlat
mov
jne
pop
xchg
mov
ds
movsl
aad
loopne
cmp
loope
and
test
push
sbb
dec
cmpsl
dec
lcall
ljmp
cmc
push
loope
lods
shrb
xor
arpl
loope
mov
aam
push
mov
int3
orb
sub
and
pop
pop
sbb
push
ret
dec
pusha
mov
push
cmpsb
pop
inc
fwait
mov
push
cld
data16
xor
sti
adc
adc
movb
fisubrl
divb
fildll
cltd
aam
mov
out
mov
pop
dec
xchg
pop
push
xor
and
jae
fidivs
lret
mov
mov
popl
clc
mov
sbb
stos
ss
cmp
int3
adc
imulb
data16
pusha
cmp
xor
push
inc
sub
sbb
jno
jg
lods
call
mov
cmc
xor
dec
sub
sbb
repz
aad
adcb
mov
nop
xchg
or
mov
pop
cmp
insl
mov
nop
mov
lods
add
out
xor
pop
inc
rclb
outsl
retw
mov
pushf
mov
and
out
std
inc
inc
movsb
insb
cmovno
fidivs
lahf
cli
add
scas
add
pop
bound
andb
xor
adc
push
cmp
xchg
loope
pop
cmpsl
sbb
adc
stc
scas
sbb
mov
xchg
xchg
repnz
sub
and
cltd
lret
or
xor
mov
inc
jecxz
cmp
leave
jb
in
inc
xor
or
push
insb
mov
movsl
loope
shl
popa
jae
imul
les
pop
repnz
sahf
inc
dec
sub
lea
sub
pop
jge
sbb
xchg
xor
xor
mov
or
imul
xor
test
cld
imul
fcompl
ret
test
xor
loope
mov
aaa
mov
xchg
adc
jb
inc
adc
jg
or
or
add
jmp
sub
sbb
stos
ret
jmp
jns
jge
inc
hlt
cmp
popf
subb
clc
pop
push
repz
lods
sbb
jge
stos
xlat
ret
jmp
sub
cmp
fistpll
icebp
arpl
mov
push
push
xor
push
sub
rcll
and
add
push
or
js
xor
adc
cmpsl
lods
add
dec
jbe
and
and
test
cmp
movsl
insl
sbb
lret
sbbb
stc
xchg
sahf
in
mov
pop
int3
dec
push
dec
mov
mov
pop
adc
push
xor
jns
insb
mov
jb
mov
popa
sbb
xchg
inc
jp
and
loope
in
aad
js
mov
sarb
push
sub
orb
lods
ret
pop
mov
out
imul
mov
iret
fidivs
dec
shlb
repnz
sub
mov
xchg
pop
repz
sti
mov
push
inc
sbb
cmp
sbb
or
loopne
in
loope
std
lret
inc
jg
mov
xchg
aad
mov
loope
fistps
std
jbe
insl
aad
fsubrs
das
adc
pusha
cmp
lret
test
jmp
xor
add
add
aaa
and
or
or
mov
loop
push
xchg
add
dec
cmp
ror
rorl
pop
ficoml
cmp
cli
lea
mov
aas
jbe
sti
jg
jge
xchg
loop
sbbl
aam
jecxz
je
mov
ss
enter
fs
add
push
jecxz
pop
iret
ss
cmc
add
repnz
mov
fdivs
sahf
mov
adc
dec
ret
jge
pop
cmp
pusha
mov
inc
jg
leave
jg
test
mov
adc
mov
lock
mov
hlt
xchg
push
pop
ret
popf
mov
fwait
or
inc
dec
shrb
int3
leave
pop
inc
pop
pop
and
inc
das
pusha
dec
orb
xchg
push
xchg
js
gs
call
or
adc
pop
mov
mov
jbe
arpl
or
shrl
loope
add
jg
push
mov
lret
sub
sbb
mul
fiaddl
push
mov
aaa
sbb
cs
clc
xchg
arpl
cmpsb
push
mov
mov
mov
sub
lods
and
add
ret
dec
mov
mov
or
cwtl
lahf
mov
movsl
stc
xlat
mull
xchg
push
xor
addl
lcall
leave
jg
aam
addb
cli
cli
test
push
jo
add
mov
cmc
add
mov
test
das
mov
push
icebp
test
and
and
sbb
out
sub
bound
rcrb
ljmp
pop
rolb
sarl
jbe
mov
rcrb
and
xor
pop
fidivrs
lock
std
xchg
xor
jmp
inc
sti
xchg
sti
out
ja
std
add
xchg
sbbl
cs
inc
dec
and
jo
icebp
mov
xor
xchg
imul
push
adc
popf
or
jg
bound
sbb
mov
aas
into
insb
and
test
test
mov
std
mov
frstor
imul
jge
sbb
push
aam
cltd
push
sub
imul
les
adc
movsl
fxch
pushf
ror
ror
popa
movsl
sub
fstp
inc
je
popf
pop
enter
jne
out
lret
pusha
mov
lds
out
mov
adc
ds
lea
int
jl
popa
fmull
scas
movsb
jnp
or
sub
jp
adc
lret
cltd
lock
fisubs
and
negl
inc
sbb
std
inc
lods
rclb
cltd
ss
jge
adc
sbb
rclb
dec
xor
push
dec
add
xor
in
add
or
subl
lahf
fwait
and
popa
cmova
fistpll
adc
sub
fwait
call
mov
das
test
insb
shlb
bound
cmovb
cmp
or
cmp
add
mov
push
adc
push
fs
jecxz
ret
inc
or
inc
mov
hlt
aam
cmpsb
and
repnz
int3
lods
in
xor
js
xchg
pop
cmp
sub
les
je
std
enter
jle
fadds
inc
mov
jbe
mov
mov
push
jns
inc
fcmovu
stos
das
repz
into
inc
jle
dec
fdecstp
adc
js,pn
lock
jne
pop
sub
movsl
add
pop
mov
aam
push
in
insl
or
or
lods
or
cmp
jp
das
repz
push
xor
in
je
insb
fidivrs
mov
cmp
rclb
lret
sbb
fsub
fsubs
mov
push
les
adcb
mov
add
lea
loop
mov
adc
cmp
mov
pop
loope
int
cwtl
in
aad
add
nop
mov
inc
xchg
out
mov
scas
mov
lods
xchg
mov
mov
gs
pop
inc
xchg
push
test
pop
jmp
sbb
xchg
sub
cmc
cli
rcr
leave
aam
mov
cmpl
mov
jecxz
xor
sbb
cld
inc
push
je
pop
add
cltd
pop
test
mov
les
mov
sbb
xchg
jl
sub
mov
push
dec
mov
or
loop
arpl
pop
fs
leave
push
push
inc
das
jae
jmp
lods
cmp
pop
mov
neg
and
xor
jp
mov
mov
fimuls
xchg
popf
mov
push
lahf
add
stc
icebp
ja
jnp
xchg
ret
xor
cwtl
rcll
mov
cmc
jae
mov
stos
sbbb
lahf
cmp
mov
popa
xchg
xlat
mov
push
mov
pop
push
or
sbb
outsl
sbb
stos
mov
cmpsl
cli
andw
xor
xchg
ret
gs
rclb
data16
or
movsl
sub
xchg
jno
add
mov
and
iret
into
scas
xchg
adc
sbb
mov
mov
inc
xlat
cmp
jbe
out
subb
les
add
and
xlat
jmp
cmp
mov
pop
call
icebp
addr16
in
xchg
inc
aad
mov
insl
pop
xor
xchg
addb
add
mov
sub
lret
sahf
jo
push
shl
xchg
jg
jg
loope
mov
and
push
rorb
xor
data16
pop
push
lcall
push
add
jb
jbe
dec
inc
and
pop
add
pop
andl
repz
cmp
pop
adc
mov
rcrb
pop
adc
jns
into
xchg
or
in
add
push
mov
dec
insl
or
sarl
add
push
fsubrl
lret
jmp
add
pop
dec
cmp
dec
push
imul
jecxz
mov
jae
inc
jl
mull
testb
push
je
outsl
mov
call
nop
mov
mov
cli
inc
call
daa
push
adc
out
out
inc
jnp
xchg
lods
pop
pop
fstps
mov
fs
loope
or
cmc
xlat
subb
test
jecxz
cs
sbb
sbb
xorl
mov
aaa
cmp
movl
mov
outsb
mov
int
inc
popf
mov
lret
mov
mov
addr16
jo
mov
mov
push
cmp
xor
rcrl
arpl
icebp
xchg
loope
push
std
lods
jae
pop
std
xorl
adc
imul
out
or
testl
mov
add
scas
sbb
out
stos
hlt
pop
test
dec
jp
and
je
adc
movsb
dec
mov
es
push
andl
mov
mov
xchg
cs
jge
enter
sarl
test
inc
mov
cmp
mov
loopne
sub
mov
scas
hlt
pop
inc
insl
pop
fnstsw
fiaddl
cmp
push
inc
scas
inc
push
roll
cwtl
and
dec
inc
rol
test
or
xor
dec
insb
outsl
les
aam
fwait
cmp
lea
push
or
jg
mov
fidivs
loopne
or
ljmp
xchg
les
pop
ret
dec
test
je
cltd
imul
decb
push
xchg
push
push
cld
jp
jl
jecxz
sbb
mov
jge
aad
pop
jge
mov
shrb
or
xchg
test
xchg
or
lods
and
cmp
incl
cmp
mov
out
stos
or
cs
mov
outsb
aas
stc
mov
jae
dec
movsb
mov
cmp
insl
fidivs
lcall
xor
mov
fcoml
pop
enter
and
insb
push
pop
leave
jbe
lret
dec
or
xchg
pop
inc
jp
inc
pop
lock
fbstp
jmp
cwtl
ret
mov
dec
aas
add
sbb
fadds
ret
in
lea
scas
and
call
movsl
xchg
shr
gs
out
jnp
adc
jb
xchg
out
int
inc
std
rcrb
imul
push
pop
mov
popf
rcrl
cmp
mov
repnz
push
cmp
ds
dec
add
adc
cmp
scas
dec
shll
loop
imul
pop
adc
mov
cmp
test
gs
xchg
sub
sbb
lret
xchg
arpl
test
xchg
and
in
les
sarb
dec
lcall
insl
int
decl
sbb
pop
loopne
shll
mov
inc
in
fcoml
cltd
sti
xchg
sahf
jb,pt
mov
idivb
mov
sarl
xchg
jg
push
xor
fsubl
lds
sub
jns
lods
jl
test
sub
pop
int3
mov
testb
cld
idivl
jns
jo
or
adc
ret
rorl
inc
in
jnp
sarb
adc
cmp
pop
sbb
fnstenv
sbb
lcall
add
bound
in
inc
fcmovb
std
std
inc
pushf
mov
push
insl
push
enter
lahf
adc
scas
mov
sbb
lods
sbb
inc
inc
dec
int3
sbb
cmc
jmp
out
dec
cmp
lods
add
sub
ret
xchg
call
inc
fstpl
leave
jmp
fisubl
clc
pushf
pop
adc
or
fsubs
dec
push
jecxz
pop
in
add
mov
std
fmuls
inc
stos
mov
into
loop
lods
out
ret
mov
xchg
ret
lahf
push
xchg
icebp
add
mov
add
mov
stc
ret
xchg
mov
xchg
or
cltd
inc
iret
rorb
adc
jle
in
add
insl
pop
pop
pop
cli
add
test
xchg
test
fcmove
lret
inc
addb
ret
mov
xchg
pusha
mov
icebp
xor
add
sub
cmp
int
enter
jae
pushf
fildll
cmpsl
in
fistpl
push
stc
push
dec
pop
in
lock
ret
dec
cli
ljmp
clc
popa
mov
pusha
ret
and
inc
mov
push
pop
gs
jp
sbb
jl
aam
fistps
insl
mov
leave
out
add
push
jg
xchg
in
cmp
push
xchg
cwtl
cmp
shlb
dec
test
aaa
lock
sub
jo
mov
jns
jno
pop
aaa
aam
add
inc
loop
call
add
dec
push
cmp
sbb
cli
stos
adc
inc
in
insl
jo
add
mov
fsubl
cwtl
and
out
lret
insl
adc
fnsave
dec
dec
sbb
repz
inc
mov
and
add
pushf
sub
loop
mov
inc
cltd
mov
sbb
adcl
loopne
in
mov
dec
fistl
test
dec
push
push
mov
sbb
insl
repnz
int
cmp
ret
lock
call
or
outsb
lea
scas
bound
stc
mov
pop
leave
xor
xor
xchg
daa
imul
js
scas
filds
push
cmp
lcall
mov
xor
pop
pop
mov
xorl
jb
mov
mov
adc
push
dec
lods
xorl
push
lock
dec
add
cli
jbe
inc
sbb
data16
dec
shrb
loopne
negl
fildll
jo
pop
sbb
jmp
sbb
cmpsb
sbb
xchg
test
xor
xchg
cmp
jbe
jp
jmp
out
or
cmp
jne
cmpsl
cmp
dec
mov
stos
mov
push
and
out
stos
mov
xlat
pop
push
sbb
inc
insl
jb
in
jnp
test
mov
imul
xchg
cmp
out
int
jae
aas
int3
dec
aas
movsl
xor
pop
xchg
scas
insl
mov
dec
call
sbbl
movl
lods
mov
fstpl
add
push
mov
sub
aam
inc
mov
inc
adc
mov
pop
adc
rcrb
cmpsl
pop
or
outsb
loope
sbb
jecxz
int3
scas
or
jge
out
frstpm(287
loopne
or
pop
jg
mov
loope
xor
cwtl
inc
pop
add
or
mov
and
or
outsb
pop
inc
je
dec
lods
sub
jo
pop
xchg
repz
and
lret
pop
or
sahf
xchg
loop
int3
das
rcrb
clc
data16
daa
fwait
repz
sti
dec
out
push
dec
fmul
sub
sti
xor
adc
sub
stc
adc
shlb
lcall
xor
nop
cmp
into
sahf
push
out
mov
imul
mov
pop
pop
mov
stc
lret
outsl
inc
pop
jnp
push
mov
cwtl
add
outsb
mov
mov
dec
leave
xchg
loope
xor
sbb
fdivl
push
cwtl
cmp
test
imul
ss
fbld
es
cmpxchg
sub
jnp
fdivrp
push
push
mov
adc
xor
cli
fwait
dec
mov
mov
shll
or
imul
xor
adc
jbe
fsts
sub
ret
or
imul
push
lock
push
int
lods
xchg
sbb
aas
xchg
mov
jo
mov
mov
bound
adc
cmp
pusha
insb
mov
loopne
add
test
push
shlb
mov
lods
lret
into
inc
pop
cmc
add
sbb
fdivrp
js
movsb
push
inc
cmp
jns
cmpb
mov
cmpsl
cmpsl
lret
mov
jmp
xor
stos
pop
outsb
ja
sbb
and
stos
jecxz
call
sbb
fwait
pop
cmp
lret
stos
inc
lock
sbb
or
inc
shl
pop
mov
and
icebp
pop
dec
dec
cmp
or
aas
xchg
fstps
jge
sub
and
ljmp
jmp
push
mov
inc
lea
aad
xchg
fdivl
mov
sub
push
loopne
cmp
xlat
dec
mov
jo
xchg
jb
lahf
in
xorl
add
fists
lea
sub
outsb
push
jb
icebp
aam
sbb
sub
lds
mov
sub
sub
mov
maskmovq
imull
or
mov
dec
jo
test
out
rol
aas
xlat
stos
pop
adc
ret
scas
iret
sbb
xor
lret
xor
test
mov
pop
mov
loopne
arpl
iret
push
or
fistpl
mov
mov
cld
push
in
push
hlt
lods
inc
icebp
mov
sub
mov
inc
int
out
and
sub
test
stos
pop
jno
xor
lcall
lds
insb
dec
cmp
repnz
out
outsb
jle
cmp
js
ja
sub
scas
mov
jnp
add
xchg
mov
pop
xlat
or
enter
sub
adc
jl,pn
mov
js
xorb
xchg
shll
fcomi
loope
adc
icebp
adc
pop
jl
jne
iret
sbb
dec
aaa
mov
inc
neg
xchg
push
jge
je
mov
adcl
jmp
push
and
xchg
nop
es
and
inc
sbb
dec
xor
jnp
fistpl
mov
mov
xor
add
dec
insb
insl
insb
cmc
jecxz
xor
fnsave
xor
pop
lret
loop
sub
ret
sarb
data16
jmp
fs
call
push
pop
loopne
xor
shll
inc
in
flds
sbb
stos
push
testl
inc
out
cmpsb
xchg
mov
loop
xor
das
in
pop
sbb
scas
std
sbbl
pusha
sub
jno
jmp
pop
jp
sbb
or
sub
dec
jne
dec
cmp
adc
push
jbe
movsl
mov
lret
fs
mov
dec
push
mov
mov
inc
cmp
inc
stos
scas
push
jle
les
push
pop
clc
xor
jp
adc
stos
mov
mov
je
outsl
stos
mov
jmp
xchg
flds
mov
hlt
pop
xchg
inc
popf
mov
aas
insl
mov
ficoml
xchg
xor
sub
neg
sub
bound
in
aam
push
jo
push
and
push
aaa
arpl
push
insb
push
fidivl
or
aaa
lahf
mov
cs
mov
sti
sti
mov
sti
int
cmpsl
jmp
dec
adc
cmp
stos
cmpsb
sbb
xchg
mov
test
ds
mov
add
adc
or
jno
lea
push
adc
push
scas
rcll
jmp
cmpsb
sub
push
push
dec
icebp
and
mov
mov
into
insl
jae
adc
mov
adc
andl
ret
cld
sub
dec
add
mov
xchg
in
inc
mov
dec
test
push
push
leave
adc
adc
add
fadds
inc
outsl
movsl
cmp
push
inc
cmpsb
notb
sarb
push
ljmp
push
mov
or
jmp
imul
pop
lret
mov
jp,pn
xor
sbb
pop
sbb
ds
imul
or
jnp
xchg
add
arpl
fsubrs
jl
lcall
int3
pop
or
enter
cmp
and
gs
cmpsb
lods
shlb
xchg
push
rcrb
loop
cmp
sub
add
adc
nop
popf
or
mov
int3
mov
movsb
mov
sub
sbbl
add
pusha
outsl
aas
sbb
dec
push
or
push
stos
fs
sub
and
cmp
in
fcomps
lods
jbe
adc
mov
xor
mov
inc
push
jbe
push
pop
or
insl
call
int
mov
out
add
adc
js
dec
inc
lea
pop
xchg
push
xchg
xchg
sub
jmp
mov
into
and
xchg
xor
testb
leave
push
clc
loopne
loope
sbb
add
mov
in
lret
jnp
leave
xchg
adc
ficomps
insb
sub
jns
movsl
ja
xor
xchg
pop
daa
dec
mov
adc
pop
out
in
arpl
in
pop
pop
jmp
lret
or
in
loope
sbb
xchg
sbb
xor
lea
ficomps
pop
lcall
lds
cmp
cld
stos
ret
leave
stos
mov
iret
dec
aam
pusha
or
stos
enter
popf
je
filds
outsl
cmc
cmpsb
push
push
jecxz
gs
mov
and
or
ljmp
jne
push
jnp
lea
pop
cmp
or
xchg
and
mov
mov
mov
hlt
add
mov
fnstcw
lcall
xchg
mov
mov
push
shrl
adc
sub
jle
bound
pop
aad
pop
stos
push
jmp
xchg
shrl
and
shl
mov
adc
sub
movsb
xor
pop
sti
jns
xchg
xor
lret
mov
jb
popf
pop
jnp
or
jo
mov
sub
push
push
jae
or
lahf
cwtl
arpl
mov
sub
mov
shlb
dec
jle
push
and
dec
xlat
in
pop
add
inc
decb
pop
cmpsl
daa
add
and
cwtl
mov
add
xchg
int3
push
lahf
fnstcw
fsts
insb
adc
push
push
adcb
nop
push
inc
cld
leave
push
and
inc
mov
add
mov
push
mov
jb
jecxz
fcmovu
pop
lds
cmp
movsb
sarb
inc
arpl
mov
adc
push
dec
outsb
xor
dec
ds
push
sbb
mov
sbb
sub
int
pop
jle
in
insb
lock
cmp
loop
inc
fs
jns
fbstp
daa
or
out
rcl
jbe
mov
stc
fnsave
outsl
xchg
inc
add
loop
pop
xor
pusha
lahf
xlat
mov
scas
xchg
xor
popa
je
cmc
dec
xchg
xchg
add
shrb
outsl
mov
inc
sub
push
int
mov
ds
repz
pop
and
pop
std
xchg
scas
cmp
in
ljmp
pop
xchg
shlb
iret
repz
into
loopne
mov
stc
pop
sbb
pop
xor
stos
cs
push
repz
mov
sub
dec
inc
es
xor
and
inc
xchg
sbb
push
dec
sub
inc
sub
sbb
mov
xor
insl
cmpsb
call
pop
out
cmpsl
mov
lcall
dec
jns
shlb
stc
pop
loope
add
subl
add
movsb
push
push
lret
inc
adc
or
pop
imul
fcmovnu
ret
mov
fstl
aas
ja
mov
sub
test
sbbb
lahf
jb
xchg
push
add
and
dec
dec
cltd
mov
pushf
cmpsb
xor
xchg
sti
xor
jbe
aas
push
cwtl
and
sub
ds
xchg
adc
in
lock
jns
push
gs
xor
cmpsb
xlat
xor
fimuls
xchg
test
sbb
dec
mov
and
xor
sarl
push
mov
test
push
pop
xor
sub
cwtl
out
jecxz
imul
enter
cli
pop
jl
flds
pop
sbb
out
mov
stc
ret
push
mov
pop
int
inc
in
mov
dec
pop
pop
shrl
and
sub
daa
ja
mov
add
jo
das
orb
push
imul
add
pop
mov
cmp
xlat
pusha
fidivrs
push
pop
pop
xchg
aam
push
enter
test
push
js
std
addr16
cmpsb
mov
sbb
out
sbb
popf
into
add
mov
cmpb
setns
movsb
in
repnz
xchg
scas
das
pop
mov
or
sbbl
sub
push
int
movsl
dec
mov
int3
inc
mov
pop
xchg
mov
pop
sbb
or
adc
int3
mul
pop
fstpl
bound
fwait
bnd
jecxz
adc
repz
std
and
jns
inc
mov
dec
or
ljmp
pop
arpl
lods
cmpsl
int
data16
scas
dec
push
jmp
out
pushf
or
push
adc
xchg
cmp
push
mov
out
jg
mov
xchg
stos
ret
and
push
xchg
fldl
jecxz
and
filds
push
insb
cmp
sbb
cs
lret
or
xchg
push
pop
push
test
out
pop
das
xor
iret
pop
out
mov
dec
inc
shlb
add
fidivl
cmp
aad
rorb
sbbb
mov
sbb
mov
lret
push
sub
inc
cmp
out
push
mov
in
adc
loop
shl
mov
scas
testl
jbe
mov
fstps
mov
pop
mov
xchg
fcmove
add
add
adc
ljmp
xchg
adc
cmpsl
pop
out
into
mov
add
jle
adc
pmuludq
inc
sti
lods
inc
std
pop
mov
xor
push
mov
push
bound
mov
dec
ret
ja
mov
push
mov
std
pop
and
repz
dec
shrl
and
add
xor
push
push
orb
sbb
aaa
out
inc
aaa
ror
push
and
sub
repz
jp
in
imul
pop
xor
popf
and
cltd
shll
je
std
imul
jge
dec
pop
loop
push
pop
ret
int3
arpl
dec
lcall
add
repz
lock
add
imul
mov
lret
xor
push
aas
int3
cmp
or
xor
pop
xor
cltd
jns
inc
mov
xor
add
jno
jp
repnz
inc
jge
push
mov
inc
popa
mov
jp
xchg
sbb
and
sub
ss
jbe
arpl
les
aaa
mov
and
je
xchg
sbb
aas
mov
push
cwtl
lahf
add
mov
and
mov
pop
insb
fmull
in
dec
or
icebp
aam
mov
mov
lahf
add
and
es
cwtl
jl
pop
or
jl
fistpll
sti
cli
sbb
dec
or
ret
mov
xchg
inc
lods
test
inc
arpl
pushf
aam
push
rcrb
sbb
andl
mov
lds
sub
lret
insl
aam
add
sub
mov
and
test
and
insb
cmp
pop
movsb
jmp
add
rolb
and
fcmovnbe
mov
dec
add
cmc
mov
loope
and
inc
sub
pop
je
fisttpl
pop
js
and
push
test
jae
add
fsubrs
add
subb
pop
rcll
push
or
jmp
mov
repz
fsubs
dec
push
mov
sbb
imul
add
loop
mov
outsl
repz
repnz
ret
inc
jmp
or
clc
ss
xchg
mov
lods
lea
das
sarb
subb
adcb
out
jb
and
or
cltd
ljmp
mov
loop
test
popf
push
popa
inc
or
repz
inc
les
jno,pn
adc
sub
ficompl
xchg
cmc
in
sbbb
int3
mov
ror
icebp
push
dec
jns
cwtl
call
pushf
aam
hlt
test
or
insb
xor
ret
inc
and
jge
inc
adc
sub
cmpsb
int
adc
mov
idivl
mov
in
push
lock
push
or
insb
fs
aam
push
fcomps
imul
andl
in
push
inc
jo
push
mov
les
pop
sti
inc
pop
and
mov
jo
js
insb
lret
lcall
cwtl
add
inc
into
jmp
jmp
ds
or
fs
and
pop
sbb
out
shll
pop
inc
xchg
inc
adc
daa
xor
pop
rolb
sub
mov
and
addr16
repz
lahf
sub
mov
aaa
jge
cmp
mov
mov
aas
push
rol
mov
pop
mov
xor
sahf
sbb
xchg
call
ds
and
popa
rorl
mov
popa
fsub
inc
lock
pop
jg
sub
insb
lret
out
mov
movsb
cmp
ja
inc
push
mov
dec
fldt
sbb
jge
adc
movsb
mov
out
jo
inc
adc
in
jns
sub
push
stos
cmp
jnp
and
cmpsl
sub
push
outsl
jnp
fwait
pop
je
and
and
aaa
mov
clc
or
scas
xchg
ret
sbbl
xchg
jl
inc
sub
arpl
jecxz
sbb
lret
out
stos
popa
push
pop
xor
add
push
jecxz
jmp
in
lret
mov
negb
mulb
xchg
cwtl
pushf
sub
adcb
arpl
vpshlw
push
dec
push
out
push
and
fcmovnu
cmp
int
insl
pop
imul
leave
add
or
or
das
jp
and
adc
clc
pop
and
mov
sub
jnp
pop
jnp
orb
aas
mov
ljmp
cltd
ds
mov
jmp
dec
jae
inc
mov
mov
fiaddl
test
jmp
cmp
add
ja
imul
sbb
mov
dec
call
and
in
mov
push
sbb
addr16
iret
add
pop
scas
xchg
mov
pop
ljmp
pop
inc
mov
jge
rcll
test
xchg
pushf
push
mov
cmc
and
mov
dec
jp
fwait
xor
popa
push
mov
adc
inc
xlat
lock
movsl
and
cltd
sbb
jmp
or
aad
bts
sbb
push
inc
pop
mov
nop
cmp
inc
enter
js
jl
inc
call
mov
and
negl
aaa
push
leave
ret
dec
lahf
xor
loop
and
loope
push
hlt
jnp
shll
in
sbb
repz
ret
mov
imul
rclb
mov
inc
stos
test
scas
shlb
js
adc
ja
xor
scas
push
std
icebp
sarl
mov
ffree
pop
cmp
fwait
cmpl
cmp
iret
mov
insb
sbb
aaa
fistpll
leave
xor
push
cmp
or
cld
push
fcomi
cwtl
pop
mov
push
std
xorl
test
leave
adc
push
int3
push
bound
cmp
lret
and
pop
cmp
dec
inc
out
sub
mov
lea
imul
ret
or
outsl
out
hlt
mov
lds
mov
inc
sbb
push
in
push
pop
loope
mov
dec
fs
cli
je
bound
sbb
sub
mov
sub
sbb
fst
xchg
jb
mov
scas
ror
sub
fnsave
lods
gs
sarb
and
fistpll
mov
int3
popa
popa
lahf
dec
fs
gs
jb
sbb
dec
cmp
pop
xor
or
mov
sahf
scas
fcoml
lret
cmp
sbb
vpaddw
pushf
adc
outsl
lret
ljmp
insb
or
cwtl
dec
lahf
and
or
or
aas
addr16
lds
and
jp
pop
ja
lcall
jp
lds
test
mov
fbld
push
xchg
inc
pop
xchg
xor
in
arpl
jle
sub
mov
scas
js
cmp
clc
mov
sahf
mov
sbb
gs
sub
push
push
sub
mov
out
ret
dec
jecxz
in
mov
sub
pop
lret
popa
pop
arpl
in
pop
adcl
popl
pop
xchg
fsubs
cmp
and
mov
adc
xor
or
mov
out
arpl
popa
jg
inc
inc
sub
cmp
daa
cmp
cmc
fadd
push
test
into
cmpsb
dec
push
pop
push
in
adcb
jns
andb
mov
dec
adc
lcall
icebp
and
roll
or
jmp
mov
inc
adc
jae
jle
rcl
sti
outsl
lahf
fyl2xp1
mov
xchg
data16
mov
jne
mov
pop
scas
ret
mov
push
lcall
push
sbb
jns
dec
idivb
nop
loope
gs
xchg
insl
lret
into
std
cmp
and
scas
mov
dec
mov
or
out
add
fxch
push
cmpsb
add
jl
add
pop
xor
lahf
xchg
rcrl
push
mull
das
jle
inc
lock
cmpsl
pop
jle
fdivs
xchg
add
je
pusha
pop
pop
push
fs
shlb
sbb
push
jecxz
lods
in
imul
shrl
das
inc
push
push
push
aam
mov
ret
bound
out
pusha
mov
mov
sub
andb
xchg
xchg
xchg
pop
pop
jge
push
add
ret
testl
sub
pop
mov
popf
adc
cmpsb
fimuls
jmp
mov
dec
repz
add
jo
ss
sbb
xchg
out
xor
call
sbb
pop
fs
inc
add
mov
jne
dec
dec
lret
hlt
cmpsb
lods
sub
jns
pop
dec
aad
dec
jnp
mov
es
cmp
test
pop
pop
mov
mov
inc
dec
mov
pop
mov
mov
sub
aas
mov
inc
nop
xor
shrb
leave
or
loop
cltd
push
mov
push
outsl
and
cmp
pop
xorb
adc
icebp
adc
fwait
adc
into
sub
jbe
pop
sub
dec
jmp
sub
inc
loope
test
enter
lahf
pop
mov
push
or
mov
lahf
jne
hlt
rcrb
jl
stos
and
sbb
xchg
ljmp
loope
lahf
mov
scas
fadd
xchg
decb
add
mov
scas
les
xchg
insl
xor
cmp
adc
jecxz
fisttpll
div
inc
push
out
lods
lock
cmp
pop
dec
clc
inc
xchg
clc
add
int3
mov
sub
inc
mov
sub
das
adc
mov
int3
sub
clc
add
outsb
inc
cmc
shr
dec
sub
test
dec
xor
push
lret
fdivrs
cli
add
pop
imul
ret
push
jmp
push
fwait
stos
push
in
cwtl
push
cmp
insl
mov
pop
pop
mov
cmc
test
out
fldenv
pusha
xchg
sub
and
test
ret
or
push
jb
jno
dec
dec
loop
and
mov
cmpsl
pushf
mov
push
or
imull
scas
jo
cmp
push
jno
jae
xchg
pop
dec
xchg
aad
sbb
lock
aam
mov
dec
adc
push
pop
jae
lock
movsl
push
mov
push
xchg
loop
mov
push
subl
adc
mov
repz
in
add
inc
iret
leave
pushf
lahf
aam
aad
rclb
pop
cmp
fstpt
into
jae
add
iret
out
jb
fidivs
imul
xor
push
inc
pusha
push
addr16
mov
aam
popa
and
sbb
jle
movsl
xchg
loop
loop
xchg
sbb
ss
pusha
mov
mov
popf
test
mov
mov
inc
sbb
and
lahf
adc
shrl
test
test
xor
fidivrl
and
hlt
outsb
enter
and
shlb
cs
pop
push
test
cmp
cmp
xor
jge
lods
push
push
arpl
inc
outsb
fwait
icebp
push
rorb
add
and
or
fisubrs
push
fstps
xchg
adc
mov
and
mov
test
lods
clc
mov
scas
sub
push
inc
dec
xchg
into
cwtl
fldcw
addl
aaa
pop
sti
ds
test
divl
pop
xor
adc
es
xchg
inc
dec
mov
lcall
pop
lahf
inc
je
ss
nop
jmp
in
mov
mov
inc
ljmp
into
mov
mov
pop
push
lahf
push
adcl
daa
stos
pop
iret
jnp
loopne
cmpb
cmp
movsb
call
fbstp
test
sbb
rorb
sti
jbe
inc
ret
scas
imul
lock
popa
adc
jns
loopne
or
mov
adc
aam
xchg
rclb
rcl
adcl
insl
push
test
lahf
mov
test
push
cmp
in
cmp
pop
cmpsb
mov
mov
adc
ret
pop
int3
mov
sub
add
mov
jnp
add
sub
repnz
js
push
popf
adc
and
sbb
cmpl
xchg
jno
enter
ret
sbbl
jp
fmulp
push
xchg
or
imul
ds
inc
mov
or
or
mov
sbb
pop
shlb
mov
add
es
sbb
sbb
lds
inc
and
push
mov
movsb
push
push
mov
mov
mov
pop
mov
enter
into
lods
cmp
cmpsl
sbb
and
pusha
mov
andb
sub
mov
imul
andb
in
push
int3
xor
ficompl
sub
sub
iret
repnz
inc
dec
xchg
push
stos
test
cli
mov
push
xor
inc
and
call
mov
and
roll
fsubl
inc
mov
adc
mov
inc
xchg
pop
das
pop
inc
lret
insb
test
fidivs
shrb
loopne
xchg
fildll
lock
cmp
insb
jbe
pop
lods
das
inc
xor
and
sub
sub
push
repnz
push
fs
test
pop
cltd
inc
dec
adc
mov
pushf
lock
out
mov
sti
mov
sbb
adc
cs
movnti
daa
out
jmp
and
mov
sub
lret
jle
sbb
clc
jnp
fdivs
testl
jae
mov
leave
sti
shrl
jns
dec
iret
rcrb
fwait
mulb
cmp
out
push
inc
lahf
inc
xchg
and
xor
cmpsl
mov
pushf
jo
xlat
and
fwait
or
fwait
cwtl
repnz
mov
xchg
add
xchg
daa
shll
jno
xchg
sub
sub
sub
push
xchg
sti
cmp
lods
sbb
cmpsb
das
xor
mov
jecxz
lods
and
pop
xor
jp
jne
or
or
out
inc
mov
xlat
arpl
add
out
and
xlat
cmp
mov
dec
rorb
rcll
in
xor
adc
adc
rcrb
add
lret
sub
and
mov
jp
cltd
dec
mov
dec
and
mov
ret
xchg
fisttpl
mov
mov
push
add
inc
jmp
int
mov
lcall
gs
lret
fisubs
dec
lds
add
test
ss
xchg
lcall
xchg
xchg
insb
cmp
xchg
add
or
fwait
mov
inc
movsb
cs
js
sarl
fs
pop
test
popa
std
ljmp
jmp
or
pop
test
or
dec
and
stc
dec
icebp
inc
call
je
mov
pushf
mov
fs
push
cmp
dec
in
xor
push
add
orl
xchg
shlb
cs
fisttpl
push
stc
push
insb
subl
les
jo
mov
xor
sbb
loopne
pop
sub
inc
xor
cmpxchg
je
ss
loope
pop
inc
jl
icebp
out
fmuls
mov
int
cmp
icebp
adc
lods
lahf
es
lds
jae
mov
sti
pop
dec
add
jl
faddl
lds
gs
mov
ss
adc
push
es
adc
data16
out
pusha
out
sbb
frstpm(287
les
fnstcw
push
pop
lods
sbb
xor
cmp
mov
xchg
mov
fbstp
jae
jg
add
hlt
pusha
iret
filds
out
testl
dec
out
inc
imul
cmp
test
adc
adcb
jp
orb
dec
aad
or
xchg
mov
pusha
emms
mov
push
stos
mov
fdivrs
mov
pop
shll
sub
int
in
les
ret
ficompl
jp
add
imull
sahf
xlat
lret
inc
mov
out
mov
fwait
jle
fists
jae
mov
pop
mov
mov
pop
lds
sub
adc
jmp
es
movb
pushf
xor
xchg
dec
idivl
movsb
clc
idiv
push
jecxz
add
pop
iret
rclb
cmpsl
xchg
aas
mov
std
pop
jnp
mov
ret
cmpsl
adc
sbb
or
jno
cmpb
mov
ret
mov
arpl
cmp
cmp
jl
pop
dec
aam
adc
and
outsb
add
fstpt
mov
mov
ljmp
adc
mov
xchg
stos
stos
rolb
pop
les
hlt
jl
inc
fs
jae
inc
lret
int
fldpi
fcmove
or
mov
mov
sahf
fdivs
mov
cmp
sub
sbb
or
insl
sti
or
adc
and
jae
adcb
movsl
xor
push
mov
out
sbb
sub
jp
xchg
mov
divl
inc
mov
dec
out
cltd
loopne
lcall
mov
mov
mov
gs
or
adc
aas
mov
cmpsb
jne
jnp
dec
push
dec
inc
pop
ret
add
xor
into
in
or
xchg
mov
cwtl
movsb
fld1
jecxz
int
lds
jl
fs
inc
mov
push
dec
adc
pushf
mov
ljmp
iret
xor
testl
movsl
mov
mov
int3
inc
loope
loopne
jno
fisubrl
and
dec
mov
inc
xchg
mov
cmp
andl
sbb
or
mov
int3
fbstp
dec
jae
in
sbb
push
imul
insl
xor
cmp
cli
push
fisttps
mov
dec
repz
hlt
pop
bound
mov
lcall
es
andb
ds
das
add
cmc
inc
or
fbld
mov
mov
xor
sbb
cmp
mov
or
jbe
inc
repnz
cbtw
out
push
mov
ffree
sub
and
bound
lahf
popf
popa
cmp
aad
push
dec
lret
neg
lods
loope
pop
shr
mov
push
jb
sti
xlat
cld
scas
mov
insb
jmp
cmp
jg
subl
mov
sbb
mov
das
std
cwtl
xor
pop
andl
fdivr
xchg
adc
mov
jbe
in
dec
jge
jnp
cmp
and
out
xchg
mov
push
sub
out
out
dec
pop
xor
lods
or
pop
outsl
push
out
lds
sub
fwait
stos
popa
mov
sub
lret
xor
adc
inc
gs
popa
sub
cmpsb
xchg
jno
cmp
pop
mov
call
lods
lods
jl
jl
or
movl
mov
sub
lock
adc
movsl
cmp
dec
movsb
push
cmpsb
ljmp
stos
lock
add
inc
ss
fs
push
in
add
mov
repz
or
insl
fwait
test
add
and
stc
sub
lret
adc
mov
fildll
mov
mov
jo
mov
insl
xchg
imul
add
xchg
ret
push
and
data16
and
imul
jle
mov
das
jle
and
pop
xlat
push
sbb
ret
inc
pop
in
dec
dec
mov
cmpl
cs
sub
ljmp
sub
sbb
mov
xor
int3
movsl
dec
jmp
movsb
xor
mov
mov
cs
inc
in
popf
clc
mov
xchg
cmp
arpl
dec
add
stos
dec
and
mov
imul
iret
fdivs
jo
mov
ja
out
dec
mov
jnp
inc
sub
add
scas
jl
jnp
push
or
popw
adcl
push
or
pop
shr
sbb
sbb
xor
mov
sbb
or
inc
fwait
add
jns
rcr
cmpsl
dec
inc
pop
add
pop
jbe
jnp
sbb
push
sarb
inc
xor
addr16
push
jmp
or
loope
jno
ret
dec
pop
addr16
loope
fsub
lods
dec
xlat
xor
outsb
cli
xchg
mov
ljmp
lock
jb
push
test
repz
gs
add
sti
cmp
sbb
jmp
ljmp
repz
cmpsb
cmp
jne
leave
add
inc
clc
stc
adc
out
fnclex
or
jge
mov
push
inc
mov
cmp
mov
sub
sbb
or
xor
mov
out
cmpb
adc
xchg
mov
es
aas
arpl
push
jo
outsl
mov
push
fisubl
enter
push
jmp
lea
stos
fstps
fisubs
in
out
push
fnstenv
mov
popa
fistpll
out
test
push
sub
fldl
xchg
cmp
dec
lcall
data16
ret
subb
xchg
mov
mov
int3
cli
add
push
pop
dec
stos
mov
scas
addr16
insb
lret
mov
dec
stos
or
pop
and
mov
adc
popf
sub
dec
mov
in
cltd
add
aaa
mov
mov
aaa
sar
push
mov
jmp
movsb
push
loopne
xor
mov
xor
pop
cmp
iret
dec
test
and
cmp
jo
sub
repz
xchg
mov
push
jno
fst
add
jae
jns
stc
adc
cld
inc
xchg
and
and
es
jns
dec
sub
sbb
aad
cmc
pop
inc
stos
hlt
lods
cmpsl
xlat
inc
dec
pushf
ret
loop
leave
mov
xchg
xchg
out
movsl
lcall
cwtl
cli
pop
lods
mov
andb
xchg
gs
out
push
scas
les
jle
inc
or
mov
mov
pop
xor
sub
in
or
out
ficoml
inc
loopne
and
xor
dec
sets
lret
cld
and
dec
adc
or
add
or
sub
cmp
in
loopne
adc
mov
fxtract
pop
data16
cwtl
call
js
adc
jno
xor
adc
sbbl
mov
mov
cmp
dec
lea
hlt
mov
adc
in
push
pushf
jnp
outsb
test
xlat
and
inc
es
std
jmp
je
and
lock
insb
cmp
cmp
and
and
mov
mov
ss
push
hlt
mov
xlat
xor
pusha
jmp
mov
mov
add
mov
in
imul
loop
adc
test
rolb
sbb
les
mov
fisubs
mov
ficompl
xor
inc
xor
fidivl
test
fidivrs
fwait
loopne
adcb
push
pusha
inc
movsw
inc
push
push
enter
in
popf
mov
cltd
fdiv
mov
add
lret
cmp
enter
sbb
mov
cmp
sub
fimull
ds
mov
ret
or
bound
fnstsw
mov
cmp
imul
ljmp
loop
dec
rorb
fldcw
jne
pusha
ja
cmc
rorl
add
imul
jl
sub
mov
je
inc
ss
cmc
mov
mov
jne
popf
inc
cmp
xor
into
negb
setl
sub
sub
push
lret
movsl
inc
daa
mov
loope
and
mov
int3
or
repz
or
sub
and
sarl
and
push
xchg
and
jne
sahf
mov
sbb
mov
mov
xchg
sarl
xchg
lds
bound
mov
sbb
test
andb
mov
mov
mov
or
cwtl
pop
mov
lret
xor
jb
inc
mov
repnz
icebp
aam
pop
aam
movsb
dec
jae
idivb
mov
mov
add
xchg
xchg
std
cmp
pop
sbb
push
shll
pusha
leave
enter
sbb
jne
jo
rcr
and
mov
popf
aas
push
pop
mul
std
xchg
fs
loopne
xor
sub
lock
pop
or
sbbl
aad
mov
js
adc
pop
xchg
xor
jg
movsl
xor
fnstenv
fmull
sub
insb
in
adc
jle
test
pop
pop
jp
lahf
inc
push
nop
mov
inc
std
jae
adc
dec
cmp
in
pusha
cmpsl
mov
dec
mov
mov
rcr
rcrb
into
call
fisubs
pushf
sahf
shlb
imul
xor
sub
sbb
xor
ja
movsl
mov
add
dec
xchg
add
dec
ja
out
jnp
xor
lea
mov
les
mov
mov
insb
jb
loop
addr16
movsb
aad
push
pop
pop
test
nop
cli
enter
mov
leave
shll
fcomps
pop
push
mov
rcrb
orl
fucompp
cmp
xchg
outsl
add
sub
cli
cmpsl
push
sbb
inc
jns
pop
fists
test
loop
sahf
mov
lahf
insl
xor
or
add
xchg
add
mov
fldenv
data16
lcall
loop
jne
jae
and
mov
stos
iret
les
mov
enter
push
adc
jmp
iret
int
cmpb
fisubl
stos
nop
adc
sbb
popa
inc
jmp
test
jg
xor
mov
push
cmp
sbb
outsb
pop
cmpsb
lret
and
dec
scas
mov
ja
jp
or
aad
or
inc
jne
inc
std
in
fnstsw
and
lahf
sbb
test
jb
dec
or
mov
ss
pop
ds
arpl
out
stc
dec
loop
fadds
xor
mov
std
sbb
pop
jbe
or
pop
dec
out
sub
xchg
inc
ss
ss
sub
adc
cmc
jno
dec
lcall
jp
jecxz
inc
mov
and
je
mov
sahf
add
xor
adc
jnp
and
stos
outsb
cmp
das
lds
mov
fiadds
lods
jge
js
xchg
es
jge
push
xchg
xor
sbb
add
js
add
adc
jno
add
sbb
push
cmpsb
sub
rcrb
outsl
push
out
sbb
pusha
push
jg
in
sbb
jle
cmpsl
jno
push
repnz
xorb
scas
or
daa
fisubs
cmp
xor
test
adc
or
insb
cld
mov
ss
ja
orb
gs
mov
imul
mov
js
pop
push
sti
mov
call
inc
or
sbb
or
adc
adc
or
or
ljmp
popa
lea
iret
xor
sbb
lea
cmpsl
cwtl
aad
pop
loope
inc
pop
imull
int
lods
or
jbe
or
jne
or
fisttpl
mov
xlat
or
xor
push
dec
sub
pop
xchg
ja
in
scas
jl
fstps
test
adc
faddl
push
and
push
jb
add
pop
std
sahf
or
push
cld
jno
fcoml
pop
push
xchg
outsb
inc
fsubs
add
jnp
sub
mov
call
cmpsb
movhps
hlt
dec
push
mov
shll
mov
pop
lock
loop
scas
sub
aas
sub
cmpsb
pop
inc
pop
lret
sub
add
test
pop
iret
pop
loopne
or
adc
dec
movsb
or
aas
subl
cmp
lods
sbb
iret
push
mov
das
aad
cmp
sbbb
pop
in
out
push
or
sti
loopne
arpl
add
stos
inc
shll
movsl
adc
push
dec
mov
ja
xor
cltd
and
mov
insl
in
push
dec
jne
ja
mov
rcll
sbb
ret
arpl
ret
lods
sub
das
hlt
sar
mov
jle
in
inc
adc
imul
mov
cmp
in
mov
push
cmpsb
cltd
out
xor
cmp
sub
mov
xchg
dec
xchg
insb
mov
fs
mov
bound
push
jbe
idivl
scas
add
dec
int3
in
or
in
int3
inc
inc
lahf
xchg
sbb
or
fwait
shl
and
and
mov
iret
mov
loope
jmp
nop
scas
sub
insl
out
push
add
sub
jg
lods
push
or
and
cli
xchg
int3
in
push
pusha
cs
fiaddl
xchg
cmpsb
jno
add
cli
pushf
or
lea
popf
cld
imul
arpl
scas
add
repnz
scas
scas
push
inc
fistpll
adcl
pop
sub
test
dec
jecxz
xchg
adc
add
data16
add
loop
movsl
fwait
dec
pop
push
in
pop
mov
mov
add
dec
outsb
mov
jge
cmpb
pop
pop
sbb
in
sbb
fcomps
aaa
pop
mov
in
icebp
cmp
push
pop
sbb
mov
js
xchg
fucomi
inc
mov
pop
sbb
mov
shrb
sbb
mov
and
xor
in
leave
and
shrl
cld
call
jno
stos
mov
adc
mov
shlb
mov
mov
push
dec
adc
std
das
add
push
rolb
lcall
jb
jmp
movsb
mov
sbb
mov
or
lods
js
pop
jmp
add
xchg
ss
mov
dec
cli
and
sbb
xor
ds
out
outsb
dec
cmp
cmp
add
add
rorl
aam
mov
mov
jae
or
iret
pop
aas
xchg
shlb
xchg
mov
dec
shll
andb
sbb
fisttpll
jle
in
lret
mov
fadds
and
inc
je
sub
aam
xchg
or
negb
nop
std
jbe
pop
scas
adc
mov
jp
mov
rcpps
inc
push
inc
cmp
xorl
xchg
pop
test
mov
fisubl
cmp
jne
sahf
ja
int3
scas
jo
jl
push
loop
andb
pop
mov
in
mov
or
xchg
into
in
into
sbb
ja
sbb
outsb
add
sbb
sti
sub
out
mov
jnp
js
hlt
mov
ds
xchg
xchg
inc
out
ljmp
enter
jbe
aad
sbb
lds
pushf
inc
dec
cmp
jmp
sahf
cmp
ljmp
out
and
pusha
jmp
jb
aam
mov
imul
push
pusha
rorl
jne
mov
or
fwait
aaa
pop
fsubrs
mov
add
roll
inc
sbbb
into
in
jg
fistl
xlat
xchg
push
sbb
mov
fmul
lret
bound
and
pop
outsl
push
cmp
pusha
mov
lret
mov
into
les
xchg
add
mov
cmpps
iret
dec
imul
sbb
daa
pop
insl
inc
xchg
push
jns
xchg
or
mov
repz
ss
sahf
cli
pmullw
jp
test
mov
cmp
mov
or
sub
stc
xchg
stc
push
cmpsl
enter
cmc
lret
lods
pop
jl
push
bound
es
pop
dec
cmp
mov
xor
xchg
pop
add
int3
sub
or
lods
andb
mov
ret
sbb
jmp
fldenv
and
cwtl
push
sub
cmpsl
jl
movsb
cwtl
jp
lret
fistpll
mov
ret
add
cmpsl
sbb
stc
inc
dec
xor
addr16
xor
call
lret
repnz
mov
loop
xchg
jne
dec
aam
push
mov
xor
bound
popa
ret
and
mov
lods
push
movsl
cmp
push
sti
fidivrl
inc
cltd
data16
loopne
nop
dec
xchg
push
insl
inc
ja
nop
pop
lret
insl
cmp
repz
and
jge
pop
mov
push
cmp
data16
mov
mov
xor
loope
dec
inc
daa
inc
test
jecxz
and
jbe
pusha
sub
inc
push
ret
xchg
mov
jbe
mov
or
push
push
add
in
adc
and
mov
adc
jae
inc
pop
push
loop
xor
int
int3
faddl
daa
jp
sub
pop
mov
ljmp
add
mov
adc
push
inc
lods
hlt
mov
daa
cs
js
fstpl
mov
sbb
xchg
nop
xchg
adc
shr
cld
adc
lods
pop
test
popf
aaa
push
call
xor
adc
add
sub
add
push
dec
testl
repz
call
sub
ss
mov
mov
xor
cltd
xlat
inc
fwait
adc
inc
sub
mov
jg
and
repz
cwtl
and
add
dec
lahf
cmc
xorb
dec
movsl
inc
iretw
jb
imul
fsubl
jns
xchg
dec
pushf
xor
mov
int3
mov
xchg
push
inc
mov
push
cs
mov
mov
mov
and
out
lret
fists
mov
decb
xor
loopne
or
adc
xchg
mov
stos
lret
jmp
cmp
add
iret
out
int
lahf
cmp
jne
outsl
sar
sub
jp
add
cmpsb
xchg
lods
mov
jg
mov
lds
xor
fcomip
sbb
ds
push
push
aas
int3
in
add
pop
cltd
int3
lcall
pop
adc
mov
lret
mov
mov
aaa
inc
add
loopne
iret
push
lcall
xor
ss
cs
sbb
aaa
les
fwait
sbb
fcmovne
dec
fmulp
mov
mov
out
repnz
popa
push
popa
rep
pop
loopne
daa
mov
push
ds
xor
sub
or
dec
sub
dec
in
test
out
mov
sbb
repnz
mov
psllq
push
addb
push
cwtl
inc
cmpsb
sub
es
out
jno
mov
loopne
movsl
fildl
cli
decb
fildll
ljmp
rol
xchg
jb
inc
fnsetpm(287
add
mov
fdivr
popa
adc
fcomi
push
adc
mov
pop
or
fwait
movsl
outsb
test
jle
scas
sub
ss
ficomps
movsb
loop
sar
mov
popa
call
sbb
insl
sbb
cmpsl
push
rcrb
add
push
repz
cltd
ds
jne
ret
test
sti
das
cwtl
sub
pop
dec
ret
bound
loop
xor
mov
pop
lahf
insb
mov
fisttpll
xor
sarb
lret
jns
push
out
imul
jmp
sarb
sbb
lods
icebp
test
imul
pop
mov
aas
xchg
inc
imull
shlb
cli
daa
xor
and
jle
std
and
jl
and
sub
jp
or
std
fbld
mov
mov
push
test
add
repz
js
cmp
roll
mov
add
push
xorb
cmp
enter
fidivs
sbb
inc
inc
jecxz
xchg
cmp
push
mov
iret
int3
nop
sbb
loope
shlb
ja
pop
and
sub
xor
adc
jne
arpl
testl
sub
cltd
je
sbb
mov
jb
mov
out
mov
pushf
ljmp
cmp
repz
js
in
and
lea
add
add
daa
sbb
iret
mov
cmp
sbb
adc
mov
or
jp
push
cmp
dec
into
call
xchg
lret
add
dec
shr
sub
lods
nop
nop
lcall
or
add
push
loop
inc
dec
pop
ficoml
movl
inc
fldt
add
xchg
mov
push
xor
js
push
dec
push
mov
mov
ljmp
xor
sbb
dec
inc
cmpsl
andl
dec
gs
orl
inc
dec
sub
mov
lahf
je
mov
fisttps
out
and
in
mov
jns
pop
xchg
sti
adc
aas
mov
xchg
std
or
rolb
jle
xchg
fldenv
inc
cltd
add
je
and
ret
mov
incb
and
or
lea
cs
jmp
pop
push
mov
cmp
cmp
push
pop
xor
pop
outsb
push
jl
mov
mov
pop
dec
mov
mov
adc
pop
les
inc
icebp
mov
mov
sbb
stos
int
lret
add
mov
jns
pop
arpl
lods
std
dec
or
pop
xchg
mov
mov
lcall
imul
jns
stc
stos
add
es
bound
add
push
test
movsb
pop
sbb
xor
push
aam
dec
sub
nop
les
lds
hlt
ds
test
ds
push
jecxz
pop
inc
or
sbb
test
push
pop
loop
test
inc
test
loop
gs
xor
push
insb
fdivrl
sub
mov
sbb
std
mov
adc
movsl
mov
push
stc
xor
arpl
push
pushf
dec
aam
mov
jbe
ljmp
xchg
push
fnstsw
faddp
shlb
js
addr16
outsb
test
pop
les
jp
xor
es
sub
adc
repz
jge
jmp
ljmp
cs
scas
jle
call
sbb
xchg
sbb
lahf
pop
pop
mov
pop
cmp
fcompp
xchg
pusha
ss
stos
mov
dec
cmpl
cld
cwtl
cmpb
add
fwait
and
xlat
mov
lods
arpl
bound
add
pop
push
in
dec
cmpsb
test
insb
or
out
mov
inc
push
insl
inc
jne
roll
push
fisubl
out
es
mov
aad
lcall
cld
out
mov
push
mov
mov
jmp
clc
insl
aas
fsubrs
xchg
cltd
in
sub
test
xchg
fiadds
sub
fnstenv
movsl
push
push
cli
push
mov
fimull
outsb
or
lock
add
pushf
mov
jne
test
shll
add
mov
inc
mov
leave
pop
ljmp
ficoms
pop
or
jp
les
cmpsb
shll
in
or
gs
lahf
pop
test
cs
mov
insl
jo
sub
jne
fldt
in
xchg
sub
nop
rolb
dec
icebp
aaa
mov
xor
jp
stos
sub
cltd
repz
or
xchg
adc
sub
fs
cmp
iret
fiaddl
jecxz
sub
push
cmp
imul
movsl
in
or
jle
pop
int3
lret
push
rcrl
aad
fildl
cltd
cld
lea
daa
test
scas
cli
bound
in
ja
lcall
sub
xchg
push
ret
or
xor
or
setnp
imul
pop
es
add
ficompl
jmp
lock
inc
inc
mov
int3
int3
ja
sub
xor
fwait
jmp
nop
and
std
insb
xchg
jmp
lahf
dec
mov
sahf
add
bound
fs
and
data16
in
sub
cwtl
aas
push
movsl
inc
pop
jge
cmpsb
loope
mov
mov
popa
xor
inc
fsubp
adc
cli
loope
mov
fisubl
aad
sbb
subb
sti
add
xchg
pop
arpl
jle
dec
xchg
dec
leave
xor
and
mov
mov
cmp
cmp
sbb
jl
flds
dec
dec
imul
inc
out
adc
jo
popf
jo
mov
enter
or
shlb
mov
pop
orl
es
adc
test
adc
fisttps
dec
pop
xor
div
in
add
add
pop
jp
inc
jl
jmp
in
cld
jge
cmp
fucom
pop
ja
lods
mov
cli
mov
pop
int
mov
fdivrl
or
pop
mov
testl
mov
xchg
lds
mov
ds
pusha
mov
dec
loope
add
or
popa
jmp
incl
dec
fnsave
dec
outsl
out
cli
xor
pop
inc
mov
sbb
stos
push
push
sub
pop
test
pushf
into
test
sbb
mov
mov
fidivs
jmp
pop
sbb
das
jecxz
cmp
mov
into
or
xor
and
dec
aad
jbe
pop
pop
rcll
or
jp
sub
sub
sbb
addr16
out
dec
xchg
jle
dec
jg
cmp
arpl
dec
and
das
cld
jp
jo
mov
xlat
ret
ljmp
sbb
sub
scas
xlat
cld
push
jle
cmp
adc
test
cwtl
pop
hlt
add
dec
jmp
xor
push
mov
aas
cwtl
and
cmp
lods
adc
xchg
push
out
cmp
daa
jmp
xor
adc
pop
test
xor
lcall
outsb
jmp
insb
mov
pop
sbb
or
fisubrl
out
scas
lcall
lcall
insl
in
or
mov
and
and
cwtl
into
cmp
jbe
sbb
iret
add
push
fdivr
push
mov
in
inc
pop
pop
xor
int
aaa
cmp
inc
add
fmulp
popf
adc
subb
rorb
jecxz
out
cmpsb
mov
lock
popa
mov
out
sbb
push
or
ds
mov
pop
xorl
adc
sbb
iret
stos
xchg
cmpsl
movsb
mull
js
cmp
cmp
iret
dec
sti
pop
sti
sub
cwtl
rcrb
mov
xchg
int
data16
mov
ret
loop
roll
or
in
jne
fsubr
push
addr16
rolb
xor
mov
and
push
xchg
fcoms
lock
push
cmp
imul
loopne
push
loope
inc
mov
scas
sub
mov
imul
pop
js
push
dec
imul
xchg
dec
mov
mov
les
or
jne
mov
sub
or
sub
in
popa
cmp
lods
xchg
xchg
andl
jbe
gs
jl
loope
mov
scas
lahf
es
sbb
out
xchg
mov
mov
jo
xchg
test
pop
mov
inc
push
mov
movsl
xchg
sti
sbb
push
sbb
sbb
or
jmp
sahf
ss
or
jbe
xchg
xchg
scas
stos
jnp
add
repz
inc
add
fucomp
hlt
pop
out
adc
enter
push
adc
hlt
xchg
loopne
lcall
popa
cltd
xlat
pusha
add
mov
or
add
je
xchg
pop
loop
dec
pop
xor
mov
iret
mov
mov
lock
pop
xchg
pop
sahf
sbbb
mov
mov
sub
mov
nop
pop
sbb
cwtl
or
stos
lods
jb
or
push
jbe
out
into
pop
sub
sti
sub
jns
push
iret
icebp
stos
xchg
pop
in
cs
jae
fsubl
aad
in
cmpsb
xor
into
sub
inc
aas
aad
adc
cld
std
andb
inc
mov
xor
rol
ds
test
dec
push
xchg
cmp
test
ret
in
push
imul
in
mov
in
and
xchg
xchg
imul
out
dec
xor
xchg
scas
fnstenv
shl
jge
add
in
loop
cmp
ja
push
inc
rcll
pop
bound
push
mov
inc
stos
out
clc
or
jmp
es
cwtl
add
sub
test
mov
pop
add
addb
lds
xor
push
dec
add
push
xor
jbe
jb
adc
sti
fwait
xor
inc
sahf
or
or
pop
sbb
scas
cmp
int3
xor
sub
or
mov
and
cwtl
lds
cmp
fimuls
and
or
sti
jmp
push
mov
or
iret
idivb
adc
xchg
test
loope
sbb
push
or
pop
inc
mov
ds
xlat
add
mov
lahf
add
push
popf
pop
loope
mov
out
fistpll
xchg
out
lea
mov
add
jne
xchg
inc
or
mov
sbbl
mov
push
sbb
lret
sar
mov
imul
dec
jne
inc
sbb
mov
jns
push
xchg
sub
push
test
add
rdtsc
sbbl
dec
xchg
sub
xchg
sub
sti
dec
decb
leave
dec
shrl
stos
adc
xchg
cwtl
leave
arpl
sbb
push
mov
imul
adc
mov
mov
xor
pushf
stos
sarb
ss
popf
js
lock
int3
mov
push
sbb
add
mov
jo
mov
mov
push
test
lea
mov
xor
mov
or
jle
fidivrl
scas
pop
mov
inc
mov
xchg
jl
iret
fs
push
test
in
aas
mov
jbe
and
dec
mov
inc
jns
in
inc
mov
adc
stc
popa
mov
mov
xchg
and
push
pop
add
imul
mov
ljmp
sbb
lock
aad
xchg
sub
sbb
pop
call
shll
jmp
mov
cmp
aam
shrb
inc
cmp
xor
cmpsl
mov
jns
jge
imul
add
lods
fidivrs
and
add
cmpsl
pop
add
pop
enter
je
hlt
push
leave
ja
test
mov
cmp
mov
cmpsb
repnz
test
outsb
mov
das
leave
pop
pop
daa
lret
lock
popf
es
mov
cmp
sahf
inc
mov
xchg
out
lahf
mov
std
daa
push
fs
andl
ja,pt
int
nop
inc
xchg
xchg
call
enter
mov
fs
fimuls
loope
sbb
bound
fidivrs
scas
add
inc
fs
mov
mov
lahf
mov
add
push
outsb
sbb
ja
scas
jge
dec
fcoml
and
scas
stos
push
ljmp
add
jns
cld
cmp
movsl
insl
inc
and
test
adc
mov
mov
mov
fwait
and
push
lods
mov
cmc
insb
in
cli
lea
mov
jae
adc
sub
dec
test
add
inc
aaa
addl
push
pop
add
add
repz
push
cmp
mov
js
cli
fstl
call
lock
inc
adc
mov
iret
cmp
pusha
fcompl
jle
je
daa
pushw
dec
cmp
sti
push
fists
xchg
mov
adc
fsub
popa
jne
lcall
aaa
insb
imul
mov
scas
aad
lock
sub
xchg
fwait
jae
sbb
lds
sahf
popa
sub
mov
mov
adc
sub
pop
cltd
mov
mov
push
mov
push
call
xor
jne
lcall
push
icebp
dec
scas
pop
mov
push
icebp
andb
xor
iretw
int3
jle
jg
pushf
pop
and
jno
cmpsb
stos
scas
out
adc
in
pop
mov
mov
inc
cmp
jbe
and
in
fwait
sbb
pushf
xchg
lock
scas
ret
addr16
adc
inc
dec
rcll
sub
cmp
fidivrs
sub
pop
rcrl
out
cmpsb
lret
adc
xchg
and
adc
or
xor
test
or
mov
clc
cwtl
out
xchg
nop
and
mov
enter
addr16
push
loop
mov
xlat
push
adcb
in
lahf
xchg
mov
sbbb
enter
pop
sbb
inc
sbb
push
subl
xchg
push
icebp
loop
ljmp
jbe
push
xchg
or
repnz
shlb
jp
aas
add
mov
add
mov
cmpb
dec
in
cmp
mov
mov
es
cltd
mov
fnstcw
rol
test
out
cmp
leave
or
jbe
sti
or
sti
lods
mov
adc
fldcw
sarb
loope
rcr
in
loopne
ficompl
or
ljmp
hlt
pushf
or
pop
inc
fidivl
cmp
jo
out
cmpsb
mov
loope
cmpsl
dec
mov
sti
out
fs
mov
xor
sbb
out
cmc
or
in
fscale
inc
push
lcall
jp
add
adc
mov
pop
std
dec
mov
mov
pushf
cmpsl
inc
jp
rcr
lcallw
addr16
inc
inc
dec
mov
pop
test
adc
mov
xchg
cwtl
xor
scas
in
fstl
cli
outsl
test
and
je
sub
xchg
xchg
js
adc
in
in
arpl
mov
aad
and
jns
orb
sbbl
rcll
rolb
mov
call
jge
sub
adc
or
cli
fsubl
sbb
mov
jno
and
leave
out
fincstp
scas
mov
mov
cld
sbb
add
aas
rolb
add
int3
leave
movsl
mull
in
inc
jne
ja
sbb
ret
lret
mov
or
sub
jmp
rol
mov
xlat
cmp
sub
or
into
push
ret
mov
call
add
mov
push
adc
movsb
cmpsb
push
xor
cmc
xor
push
cmc
stc
das
jp
cli
inc
sbb
daa
out
fwait
mov
iret
dec
ret
or
aaa
ja
bound
jmp
lds
jb
jge
test
stc
dec
arpl
loope
fldcw
xchg
adc
dec
imul
push
push
push
pop
not
fwait
ret
lds
jle
push
pushf
ja,pn
dec
push
inc
repnz
int3
shrl
ss
mov
outsl
sbb
fnstcw
arpl
mov
sahf
sarb
out
xor
stos
scas
mov
andb
and
jmp
subl
in
js
imul
jg
fsubrl
cmc
and
inc
idivb
mov
mov
jbe
outsl
dec
lret
and
cltd
jae
aam
mov
sub
xor
inc
add
cmp
ret
mov
orl
das
aam
pop
jne
std
jl
pop
pop
push
cmpsb
loop
sub
dec
jge
andb
loope,pt
xchg
or
push
mov
push
fbstp
test
pusha
inc
test
and
adc
cltd
jp
test
mov
incl
stos
xchg
push
or
cmp
mov
repz
add
arpl
cltd
in
out
ret
mov
xor
es
pop
and
fldcw
sbb
outsl
xor
fchs
scas
pop
add
mov
xchg
dec
push
lret
mov
inc
call
or
sahf
ja
call
inc
negb
neg
mov
outsb
das
cltd
xchg
jne
push
and
test
jle
out
scas
fildll
into
add
in
adc
add
mov
insl
imul
icebp
out
mov
daa
pop
dec
sub
lods
xchg
xor
cmpsl
pop
fwait
xlat
fistl
sbbl
addl
mov
iret
pushf
lahf
and
xor
cmp
adc
adc
scas
hlt
mov
add
jb
or
lahf
pusha
mov
insb
out
adc
or
sub
repnz
or
mov
test
push
lds
mov
cmp
ljmp
cmpsl
sbb
inc
fnsave
movsb
sub
les
cwtl
pop
ss
stc
mov
mov
dec
mov
pop
js
and
in
fiaddl
or
or
pop
in
mov
movsl
mov
loop
inc
inc
out
movl
movsb
or
outsb
adc
ss
addr16
imulb
inc
sbb
test
cmp
movsl
mov
insl
dec
lea
jmp
mov
jp
inc
imul
out
sahf
lahf
ja
dec
int
out
add
lods
lock
xor
popf
add
and
cmp
movsb
add
sahf
sahf
sub
stos
sbb
pop
stc
imul
jb
je
or
jno
sbb
out
loop
in
adc
test
frstor
aaa
cmp
lahf
push
pop
xchg
insb
mov
lahf
int
dec
dec
dec
pop
or
pop
mov
mov
mov
into
ret
adc
xchg
jb
sub
fildll
lods
lock
int
int
sub
adc
sar
sbb
push
arpl
sarl
shr
xor
push
out
jb
xchg
add
call
mov
bound
sub
adc
fcoms
push
aam
sub
or
sbb
cmp
lods
dec
cmp
ljmp
les
dec
sub
mov
or
fwait
jne
mov
subl
mov
daa
sub
sbb
sbb
rolb
stos
jecxz
mov
sbb
cmpsl
xchg
movb
mov
mull
push
gs
mov
xchg
pop
gs
gs
adc
stos
jmp
pop
je
and
pop
repz
cmp
ror
cmp
dec
adc
jmp
inc
loope
adc
lret
test
gs
in
xor
fcmovu
mov
lcall
repz
out
mov
filds
loope
or
jns
stos
mov
push
pop
adc
adc
xor
inc
pop
sbb
xor
fcoms
lods
push
pop
sub
push
sub
sbb
fadds
push
sub
jb
cmp
add
lcall
mov
mov
lods
lret
movb
icebp
lahf
rcrb
arpl
push
mov
xor
jo
ljmp
cmp
add
test
xor
nop
in
test
mov
nop
addl
shlb
rcrb
mov
pop
xor
jbe
xor
fmul
out
rorb
mov
or
pop
dec
or
in
into
movb
jmp
test
inc
or
pop
xchg
inc
sarb
int
lea
testb
mov
cmp
inc
loopne
pusha
inc
dec
test
mov
inc
xchg
arpl
jecxz
lret
imul
pop
shl
or
ja
das
data16
dec
loop
out
cmp
jno
sub
xchg
data16
lock
clc
call
or
jecxz
or
jae
enter
loope
push
lock
push
adc
push
push
enter
mov
sub
jbe
adc
cmp
or
jl
and
xchg
dec
xor
cwtl
xchg
nop
push
sbb
fadd
inc
scas
imul
stc
popf
mov
mov
xchg
pop
sti
imul
push
inc
movsb
add
mov
xchg
mov
add
sbb
dec
js
lds
cmpsb
fs
notl
adc
popf
test
mov
mov
jne
loopne
lea
add
fbld
clc
cmp
scas
mov
jmp
cltd
fwait
mov
fisubl
adc
repnz
iret
sbb
into
pop
out
and
ret
and
add
ret
and
dec
bound
jl
in
enter
in
pop
adc
push
aam
sbb
jp
cwtl
inc
pusha
pop
mov
arpl
add
test
cmc
jae
sbb
hlt
cmc
xchg
inc
fwait
cmp
add
bound
cmp
xchg
dec
jno
ret
pop
js
dec
test
iret
das
jns
ss
push
mov
and
adc
ja
jle
sub
push
xchg
icebp
in
sub
push
pusha
push
push
jp
lcall
mov
sub
std
jns
lahf
outsb
idivl
test
nop
inc
pop
jmp
dec
mov
xchg
cmp
xor
and
in
inc
xor
jge
mov
xor
xchg
sub
enter
ret
dec
outsl
mov
lds
xchg
xorl
push
loopne
and
or
test
imul
mov
inc
jp
fs
in
jmp
loop
or
push
addr16
notb
imul
stos
mov
jne
test
shlb
xor
mov
or
mov
inc
fdivl
inc
xchg
adc
leave
xor
sub
data16
scas
push
fnsave
sbb
and
mov
pop
test
add
add
loope
adc
jae
sub
arpl
sub
testb
mov
dec
adc
addl
adcl
lods
jo
fisttps
aas
ja
pop
rcrb
outsb
imul
pusha
adc
sub
fs
clc
and
sbb
daa
andl
shl
les
push
push
out
mov
jmp
ret
lea
mov
add
loope
xchg
lea
rcrl
sbb
jno
insb
push
clc
mov
mov
inc
int3
test
cmp
int
inc
repz
jp
inc
ljmp
mov
lods
int3
lock
dec
push
fisubrl
inc
add
xor
lret
jge
movsl
inc
push
push
push
hlt
adc
pop
mov
pop
xor
sbb
jmp
data16
bound
and
push
push
cltd
mov
inc
sub
cltd
sarb
ret
or
js
sti
add
std
push
add
dec
je
pop
cmp
subl
adc
in
lret
rcl
loop
mov
mov
jnp
sub
ret
mov
xor
jo
xor
iret
mov
lea
jnp
adc
cmpl
movsb
mov
mov
cmp
cmp
std
cmp
imul
and
adc
fsts
xor
mov
cmc
xor
es
xchg
in
cmp
jns
rcrb
cmp
adc
pop
jl
out
and
pop
std
popf
pop
decl
idivl
subl
push
pop
jne
aas
jo
daa
cmpsb
mov
adc
aad
adc
jl
dec
xor
jp
mov
clc
mov
outsb
js
xchg
iret
jl
sbb
push
test
jb
adc
xchg
xlat
inc
mov
test
inc
jle
test
lock
cs
mov
jbe
push
movsb
pop
push
jbe
stos
test
sarb
enter
inc
movsb
aaa
push
push
testl
xchg
push
pop
xor
pop
bound
stos
jnp
fcompp
nop
add
out
cs
lea
test
xor
std
imul
cli
int
subl
leave
dec
mov
fidivs
sub
add
push
cmp
sar
sarl
push
dec
loope
xchg
xchg
in
fbstp
mov
test
mov
sub
shrb
cmp
ljmp
in
daa
pushf
mov
clc
push
add
imul
push
mov
fucomp
movsb
sti
out
enter
jns
cmc
ret
sbb
popf
inc
mov
fiaddl
fwait
dec
mov
jbe
aad
xor
mov
xchg
xlat
scas
adc
xor
pusha
pop
mov
popf
cmp
js
or
movsl
out
cmc
xchg
test
and
testb
mov
out
ficomps
xorb
add
decb
pop
lods
loopne
outsl
mov
lcall
out
incl
addr16
push
or
jb
insb
test
movsb
cwtl
icebp
mov
push
mov
js
sub
loop
insb
rol
xchg
sbb
scas
loopne
mov
inc
add
inc
inc
mov
xchg
cld
xchg
add
and
xor
mov
fdivs
push
rol
lods
movsl
icebp
loop
sub
testl
int3
sub
jns
cmp
adc
push
sub
aas
mov
pop
sbb
and
lahf
jg
xchg
or
cmp
icebp
mov
adc
jne
pop
ret
sub
fptan
mov
cmp
pop
dec
clc
push
fldenv
push
adc
dec
popf
std
clc
xor
sbb
mov
ds
cs
jmp
mov
and
in
sbb
sbb
push
call
cmc
les
les
into
add
call
jmp
or
adc
add
sub
mov
xor
cmp
lahf
and
repz
jg
mov
sarl
shrl
mov
cld
xchg
ss
sarb
push
mov
mov
adc
aas
lock
and
sub
xchg
cmc
and
movsl
lock
insb
or
and
sub
dec
lret
in
add
jb
jg
and
sub
push
mov
pushl
ds
jle
in
pop
out
je
mov
xchg
enter
or
xlat
dec
mov
cs
dec
ret
sbb
movsb
insb
mov
adc
lods
pop
mov
sub
subb
fistpl
or
jecxz
xchg
test
in
push
jge
fadds
bswap
aad
pop
cmp
or
in
fnsave
dec
push
inc
leave
data16
and
lret
jne
popf
xor
popf
dec
or
cli
mov
mov
pop
pop
mov
imul
fdivrl
or
xlat
mov
push
insl
jno
pop
fwait
or
jecxz
cs
dec
mov
repz
movsb
lret
fsubrl
ret
mov
fisttpl
add
jnp,pt
clc
stc
mov
mov
xchg
xchg
jnp
sbb
sub
out
mov
ds
xchg
sbb
adc
pop
icebp
pushf
loopne
lds
jno
lcall
xchg
xchg
jnp
cmp
test
sbb
sbb
xlat
and
pop
add
or
dec
cli
andl
or
inc
push
cmp
jbe
imul
and
push
mov
in
xchg
gs
push
push
aam
sbb
mov
nop
sti
pusha
lahf
insb
aas
push
mov
mov
push
into
popf
out
aad
or
daa
in
add
lds
jno
ret
cmpsl
pop
jae
leave
mov
xorl
push
int
rcr
dec
je
pop
sub
adc
sarb
push
js
push
testb
lret
and
cmp
fdivl
adc
mov
int
jle
stos
rdpmc
pop
insb
daa
sbb
dec
repz
xchg
xchg
add
add
and
leavew
out
jne
loope
jnp
add
sub
pop
inc
xlat
out
cmpb
loopne
mov
clc
popa
xor
xchg
ds
mov
in
inc
jmp
add
xor
mull
push
dec
int
pop
jmp
int3
in
inc
out
xor
dec
or
xor
add
icebp
in
pop
xor
daa
sti
int3
iret
xchg
jecxz
in
lods
lods
ljmp
mov
bound
inc
push
cmp
lcall
push
das
pushf
jns
or
jno
sbb
push
sub
sub
adc
xchg
dec
fistpl
les
cmp
fimuls
inc
fidivl
mov
xor
hlt
or
push
das
es
lahf
imul
adc
test
mov
lret
imul
dec
mov
and
jb,pn
ss
scas
adc
test
and
mov
movsb
in
fldl
sub
dec
repz
ret
bound
cmp
outsb
xchg
call
push
aas
xchg
aam
enter
imul
pop
or
sbb
mov
nop
ret
shrl
movsl
sti
popf
add
push
xor
sub
mov
adc
jae
push
into
jo
test
push
push
cwtl
daa
ds
pop
pop
and
mov
fdivl
mov
or
add
mov
mov
jbe
movb
inc
mov
and
mov
sbb
pushf
out
pop
lret
adc
xor
push
fmuls
cmp
pop
icebp
xchg
cmp
push
mov
shlb
push
lods
lock
cmp
push
sub
dec
xor
dec
enter
fsubrl
lock
xor
push
add
pop
movsb
jmp
adc
rcr
jnp
cmp
push
xchg
and
adc
or
mov
mov
int
shrb
enter
pop
jle
dec
lahf
mov
jbe
sbb
or
cld
repnz
or
cwtl
or
scas
cmp
mov
cs
sbb
nop
cmpsl
mov
mov
mov
push
subb
push
popa
mov
jne
jp
jmp
orl
or
mov
mov
add
sub
add
sub
into
xchg
push
adc
jecxz
or
add
xchg
mov
add
incl
sub
jae
xor
and
shrb
loop
bound
or
jnp
mov
pop
mov
andb
std
jecxz
mov
push
iret
out
cltd
std
adc
inc
pushaw
je
out
pop
or
leave
jb
sbb
fs
fmull
adc
xchg
sbb
mov
cmpl
cli
add
adc
xchg
enter
jmp
sbb
xor
pop
push
mov
push
cmp
pop
and
cmpb
call
sti
sbb
jmp
adc
test
gs
push
mov
mov
in
leave
shrl
inc
outsb
insl
cmp
push
test
sbb
sub
cmpsb
add
or
cwtl
jmp
push
xchg
add
jp
sub
out
sbb
mov
div
scas
mov
sbbl
push
mov
shrb
in
add
and
push
fsubrl
mov
or
inc
ficompl
mov
jecxz
xchg
btc
dec
frstor
inc
mov
mov
jbe
push
push
or
mov
cmp
cmc
mov
jmp
mov
repnz
jp
movsl
addl
clc
ljmp
or
loope
xchg
inc
in
push
inc
out
or
aam
or
out
jmp
das
loopne
hlt
andl
in
les
and
xor
rorl
popf
sbb
test
in
cltd
jne
hlt
fadds
loope
or
cli
and
mov
out
pop
daa
in
xchg
xor
imul
jb
sti
dec
jg
mov
cmpsb
shlb
jmp
aas
push
or
mov
gs
stos
dec
pop
stos
ss
push
add
ja
mov
mov
je
cmpsl
lods
loope
or
pop
rorl
inc
bound
jl
mov
mov
jle
and
and
push
sbb
mov
nop
pushf
cmp
popf
cvtdq2ps
incl
mov
mov
push
test
rcrb
dec
inc
cmp
out
orb
data16
addr16
stos
aam
cmp
insb
push
lahf
inc
aas
ljmp
push
xor
dec
xchg
mov
roll
dec
push
mov
adc
and
shlb
shlb
inc
push
adc
push
inc
in
insl
dec
subb
pop
cmpsb
xlat
rorl
mov
aam
pop
adc
jno
push
jp
mov
dec
lret
xor
arpl
push
or
adc
adc
push
stos
ds
jge
sbb
pop
fsubp
push
pop
jmp
jb
jae
cmp
push
pop
or
xchg
in
les
lods
lock
out
xor
xlat
cmpsl
daa
and
mov
mov
or
jae
pop
jb
and
pop
push
push
add
and
negb
sti
xchg
jge
jns
inc
jae
out
out
hlt
add
or
shrb
repnz
mov
sub
icebp
roll
mov
add
ja
fnstcw
mov
popf
and
outsl
mov
orps
or
adc
sub
or
dec
out
dec
notl
mov
stos
into
jno
mov
push
sbb
dec
fistpll
inc
rcr
in
subb
mov
icebp
dec
xor
fdivrl
outsb
sbb
outsb
fucom
adc
cmpb
out
mov
aam
push
adc
pop
sar
adc
neg
into
lcall
das
inc
inc
mov
imul
jbe
repz
call
sub
in
shlb
pop
dec
jle
cmp
pop
std
jbe
imul
cmp
rorb
and
add
xor
dec
aad
fs
jg
jb
xchg
pop
jg
cmp
sbb
push
ret
out
aam
les
ljmp
sti
clc
test
adc
inc
cmc
popf
inc
or
arpl
mov
pop
xlat
cmp
cli
fld
dec
or
dec
pop
out
jb
sbb
arpl
mov
je
cwtl
jg
lods
dec
ja
arpl
inc
dec
clc
and
mov
sbb
outsl
cmp
pop
mov
in
bound
inc
jmp
pop
dec
jp
notb
jg
add
lods
pop
lds
dec
xor
adc
rorb
cmp
mov
mov
inc
add
mov
insl
pop
add
les
xchg
insl
cs
jmp
mov
inc
sbb
mov
sub
in
mov
mov
popf
xchg
stc
mov
push
mov
jne
adc
add
test
test
cmc
dec
adc
test
rcr
sbb
mov
inc
push
hlt
jle
mov
dec
push
nop
lahf
pop
ss
jns
fbld
imul
jne
mov
mov
push
add
out
sub
subl
jbe
aaa
inc
add
fdivs
aad
jg
xchg
mov
out
clc
xchg
jmp
cmp
pop
rcrl
dec
dec
jg
out
mov
cmc
jle
mov
lahf
inc
add
dec
and
cmp
and
out
sahf
xor
inc
nop
cmp
enter
mov
lret
adc
push
add
repnz
push
adc
pusha
adc
xor
sbb
setle
icebp
mov
dec
mov
testl
jl
inc
xchg
sub
and
lods
jge
cmp
cmp
movsl
cmc
aad
and
jge
adc
sub
xor
mov
lods
divl
int
lods
rorb
xchg
in
pop
lods
dec
or
shl
fstpl
cli
cmp
test
xchg
and
jecxz
xor
mov
repz
push
and
clc
add
and
jne
int3
pop
mov
mov
in
and
mov
mov
jns
fimull
jne
cmp
push
pop
cmpsl
pop
loop
mov
mov
mov
adc
pop
ficomps
inc
mov
stos
das
outsb
fdivl
dec
pop
add
outsl
mov
outsl
jne
xchg
das
fsubrp
popa
sub
and
nop
adc
adc
call
stc
jmp
cmpsb
jg
or
push
xor
mov
cltd
pusha
push
inc
push
add
mov
jne
inc
jne
lahf
mov
test
xor
scas
lret
fmul
xor
mov
call
dec
loop
call
push
in
lret
xchg
pop
mov
and
pop
outsl
out
jp
stc
sbb
dec
fstl
rcrl
dec
inc
jne
in
or
mov
mov
sub
mov
rcl
test
lahf
mov
push
ds
mov
sarl
pop
stos
outsl
js
ret
mov
iret
int
jnp
cltd
jns
xor
loopne
call
xchg
stc
adc
jle
jmp
lods
fmull
mov
in
xchg
jecxz
jbe
dec
add
insb
insl
shll
push
cli
rol
in
je
loope
insb
stos
in
or
jnp
jp
xchg
cld
xchg
ret
repnz
push
popf
xlat
sub
gs
sub
dec
dec
xchg
in
sbb
pop
jle
in
dec
test
das
out
out
cld
mov
push
mov
xchg
sub
mov
pop
add
mov
and
dec
mov
jo
cmpsl
mov
testb
int3
add
stc
mulb
les
arpl
popf
mov
jb
jecxz
repz
sub
das
fwait
dec
mov
and
setb
and
mov
shlb
xchg
sbb
cmp
ss
ss
mov
inc
pop
xrelease
lret
push
mov
cmp
fldln2
jmp
adc
dec
or
or
dec
mov
jo
push
add
and
push
mov
push
add
xor
sub
lahf
imul
push
sub
xor
sub
loop
jmp
mov
call
push
pop
pop
xor
shll
xchg
cwtl
jbe
jb
nop
shlb
inc
push
test
shlb
add
scas
cmpsb
ljmp
popa
jmp
bound
test
jg
lcall
mov
pop
test
icebp
int3
dec
jbe
dec
sub
movsb
adc
insl
cmpsl
jno
test
data16
ret
ljmp
pop
scas
xor
outsb
pop
cmp
scas
daa
mov
xchg
shll
jb
in
sti
xchg
sub
data16
js
jae
stos
sub
ds
dec
fimuls
push
dec
imul
adc
mov
stos
mov
jo
xlat
xor
push
movsl
lods
cmp
shll
xor
jg
movsb
test
movsl
aad
adc
xchg
or
cmpsl
mov
rclb
xor
test
adc
dec
test
and
dec
movsb
js
push
xor
fwait
orb
mov
add
hlt
insb
xor
jnp
push
outsl
jecxz
jae
xchg
sub
outsb
jnp
push
push
daa
xlat
pop
imul
pop
mov
xor
stos
xchg
negl
xchg
mov
sub
sahf
fsubrl
mov
push
and
lahf
jl
stc
cmp
fimull
inc
enter
cmp
add
mov
mov
int3
stos
add
shl
scas
out
aad
dec
cmp
mov
addb
sbb
test
sub
pop
scas
cmp
push
iret
sub
jl
int3
loopne
imul
scas
pop
adc
and
jne
ss
iret
cmp
sbb
mov
notl
cli
or
pop
adc
mov
cmc
inc
jle
loope
hlt
dec
movsl
dec
fisubrs
and
push
iret
aad
mov
push
rorb
daa
mov
test
fisttpll
adc
aaa
hlt
pushf
cmp
rolb
test
outsb
popa
jp
ljmp
add
rorb
mov
sar
imul
lahf
adc
adc
data16
imul
cmp
dec
xor
adc
daa
test
or
mov
int3
push
out
mov
inc
or
push
mov
scas
lods
setle
push
jmp
mov
push
data16
and
punpcklwd
ja
jmp
dec
and
ss
movsb
sub
cmpl
fwait
arpl
pushf
jmp
dec
cmpsb
aam
ds
out
or
decb
movsl
dec
rorb
jle
repz
in
in
xor
or
addr16
push
jl
idivb
div
mov
xchg
loopne
jne
sbb
or
loop
stos
xor
push
and
xlat
pop
adcl
dec
repnz
jae
cltd
mov
jp
xor
out
mov
dec
mov
xor
xorl
xchg
lret
pop
jnp
mov
sbbb
push
xor
push
jno
out
jg
fwait
dec
je
sbb
call
stc
dec
xchg
aad
div
incl
adc
ficoml
jl
dec
rorb
pop
dec
pop
cs
idivb
iret
ret
lret
push
mov
pushf
jne
movsl
add
cmp
adc
loopw,pn
sti
lods
sbbl
and
pop
mov
sub
fdivs
push
hlt
xor
insl
lea
mov
mov
adcl
xchg
in
pop
pop
filds
js
pop
push
cld
test
jle
xor
in
outsb
or
jp
lcall
les
sbb
push
lods
inc
lods
orb
das
lea
shl
popf
cmp
push
lret
fiadds
jmp
jp
leave
scas
push
push
into
xlat
pop
xor
cwtl
dec
cmpsb
addr16
les
cmp
and
ror
data16
mov
inc
gs
lcall
jne
scas
iret
sub
scas
lods
xchg
bound
sub
or
jb
jae
leave
aad
push
xchg
loopne
add
jmp
mov
lcall
adc
ss
aam
lea
xchg
xchg
mov
jno
sbb
xor
aad
fcmove
cmp
repz
mov
in
mov
push
scas
inc
jl
push
enter
sbb
xchg
dec
push
es
xchg
adc
inc
pusha
jno
je
mov
sbb
or
cwtl
and
add
loop
ficoms
push
mov
xor
fwait
inc
int
mov
xor
in
jecxz
into
and
scas
xchg
ror
fdivrs
add
jb
jo
pop
test
adc
aaa
jecxz
pop
pop
xor
sbb
incl
je
adc
mov
int3
sbb
adc
mov
loope
mov
int
movb
shlb
add
xchg
js
push
fisubs
stc
imul
sub
popf
adc
out
popf
sub
xchg
fnstsw
pop
movsl
je
lock
hlt
test
add
test
mov
lock
aam
cwtl
fmull
mov
push
push
nop
and
pop
pop
or
fwait
test
sbbb
xchg
jae
mov
push
lret
scas
push
rcrb
xchg
sub
jge
sahf
pop
imulb
dec
jnp
sahf
mov
insb
dec
mov
sar
stc
outsl
add
pusha
in
pop
les
add
cmp
push
adcl
test
or
pushf
out
icebp
je
imul
enter
jne
dec
out
push
mov
xchg
int3
mov
repz
sahf
pushf
scas
cwtl
mov
jb
and
mov
jnp
jne
idivl
xor
popa
setno
dec
mov
mov
dec
rcl
sar
lahf
das
jo
loop
add
xor
imul
jne
fldl
push
int3
into
cltd
cmp
scas
mov
mov
push
xor
popf
leave
inc
cmpsl
inc
xor
jne
ret
subl
hlt
ret
js
ret
imul
pop
or
lret
pop
sub
je
adc
aad
in
cmp
sub
enter
mov
pop
mov
in
pushf
imul
inc
sbb
push
mov
dec
jmp
push
push
pop
bound
sbb
leave
or
dec
dec
fmull
mov
and
inc
cs
xchg
call
dec
bound
dec
ljmp
or
dec
insl
lret
cmpsb
adc
stos
add
fnsave
lock
pushf
xor
ja
out
orb
sub
push
and
out
jp
in
or
clc
flds
inc
lea
mov
jl
cmp
mov
and
not
aam
lods
cltd
mov
sbb
or
dec
fists
push
xchg
int
xchg
sbb
dec
dec
cmp
outsb
push
sbb
js
and
es
aaa
sub
lods
dec
sub
fisubrs
mov
xor
imul
test
push
outsb
out
movsb
movsb
shl
sbb
xchg
jne
xorl
cmp
movsb
andb
push
mov
cmp
insb
or
mov
notl
aas
enter
inc
lahf
pop
arpl
push
ljmp
push
xor
les
out
test
gs
cmc
imul
adc
ds
push
mov
call
imul
and
ljmp
mov
cmp
lahf
xlat
sub
rolb
add
shll
mov
xchg
push
test
test
jnp
in
jecxz
cli
rorb
mov
pop
or
mov
sti
mov
jp
jle
push
xchg
loope
dec
pop
jge
andb
inc
stos
je
cmp
fisttpll
sbb
jb
dec
xchg
sub
outsl
adc
aad
jmp
or
and
push
sarb
push
jge
mov
mov
loopne
mov
iret
sti
sarb
and
cmp
push
inc
test
mov
add
fucom
stos
scas
lea
and
out
mov
subl
cmp
clc
add
adc
mov
pop
out
bound
enter
int
and
into
mov
push
add
adcl
loopne
scas
lret
pop
in
mov
mov
xorl
pop
jns
xor
fimuls
outsl
dec
test
ds
dec
xchg
and
cld
cli
je
pushf
fs
clc
movsb
ss
leave
or
or
cli
int
mov
or
fdivrl
mov
insb
jle
es
cmpsb
jnp
js
cmp
adc
repz
and
adc
mov
sbb
pushf
mov
sbb
jmp
jmp
mov
push
push
aaa
fisubrl
in
std
jle
mov
mov
cmp
add
mov
pop
add
int
pop
lahf
cwtl
aad
jnp
push
mov
leave
inc
bound
lds
push
dec
push
mov
jo
and
add
clc
adc
jbe
and
mov
call
icebp
std
dec
xorb
xchg
addr16
adc
xor
rolb
sti
xchg
mulb
pop
sub
pop
scas
sbb
fsubrp
ret
pop
fs
mov
mov
mov
in
or
mov
push
repnz
xor
mov
aam
aas
xchg
push
in
daa
fs
sub
or
push
imul
test
add
les
lea
nop
sbb
imul
add
adc
add
bound
mov
jmp
icebp
jecxz
daa
daa
mov
xchg
mov
imul
mov
sub
pop
lods
and
cmp
aam
xor
insb
out
rolb
pop
cltd
or
clc
add
push
or
fld
dec
mov
adc
cmp
pop
pop
scas
sbb
lock
popf
dec
inc
int3
repnz
sub
shl
lds
adc
lret
jo
je
mov
adc
inc
test
lret
or
cs
mov
or
push
loop
mov
daa
add
dec
or
aas
loope
jmp
dec
xchg
and
je
nop
lds
pushf
and
fidivrs
jns
and
lea
test
stc
outsb
xchg
cs
mov
jns
push
in
out
insl
loop
mov
and
pop
mov
js
loop
vxorps
inc
fimuls
add
shrb
mov
rcrl
push
stc
mov
int
inc
pusha
adc
lret
or
cmc
mov
push
jl
xchg
lea
jmp
outsw
pop
sub
push
iret
jae
pop
jecxz
je
test
mov
in
lret
les
ss
cmp
fsubrs
mov
add
adc
xlat
aas
ficoml
mov
push
dec
and
lret
iret
dec
mov
bound
in
add
lret
adc
inc
inc
aam
cmp
aam
mov
add
xchg
add
roll
add
pop
sbb
jbe
arpl
sbbb
nop
int3
adc
insb
out
cmpsb
cmc
out
out
cmp
movsb
rol
mov
jmp
inc
dec
lahf
fsubrp
testb
cmp
mov
mov
mov
xor
xchg
in
repnz
scas
dec
add
adc
push
fst
es
push
adc
stos
add
pusha
inc
xor
jns
aad
pop
les
pushf
stos
lods
sub
stos
stos
jbe
jae
adc
xchg
ret
dec
cltd
cmp
cld
xor
mov
ror
in
test
in
jl
xchg
push
cwtl
push
fisubs
pushf
insb
into
push
pusha
jge
xor
cltd
test
fwait
cmp
adc
loope,pt
outsl
stc
popl
imul
data16
shlb
aaa
mov
jbe
testl
jle
test
sbb
ds
sbb
add
inc
stc
xor
cmp
inc
fwait
xchg
jns
rol
rcll
sti
outsb
add
shlb
mov
xchg
cmpsl
or
push
mov
dec
adc
mov
pusha
push
inc
std
push
mov
xchg
mov
movsl
jmp
ret
arpl
enter
xlat
call
inc
xchg
mov
pop
dec
das
aaa
add
loope
pop
fidivrs
cld
rcrb
fldcw
addr16
rcrb
insl
fs
outsl
add
cmp
insb
push
pop
fsin
add
ss
imul
and
mov
sub
jle
push
pop
fnsave
and
stos
arpl
xlat
stos
int
push
sub
pop
sbb
adc
ffree
jl
mov
out
jne
test
je
xchg
pop
lcall
push
cli
and
dec
in
xor
pop
mov
adc
loopne
addr16
inc
or
xchg
xor
sbb
dec
inc
and
or
daa
add
vmread
call
jne
xchg
mov
mov
and
sub
cmpsl
std
mov
fs
sub
xor
mov
mov
push
stc
ljmp
dec
jmp
orb
fimull
ficoml
test
and
fstps
dec
aam
xchg
and
lret
mov
dec
mov
icebp
sub
cld
or
sub
aad
jecxz
mov
je
pusha
mov
or
paddd
jecxz
jae
sub
xchg
aaa
push
daa
jae
or
in
leave
and
mov
dec
xchg
sti
jne
faddp
iret
mov
or
test
or
ljmp
or
testb
xor
pop
adc
in
aad
stos
push
mov
push
mov
pop
fs
xchg
shl
jne
fisubs
fdivs
add
xchg
cmp
jbe
mov
pop
pop
fprem
add
pop
push
popa
cmp
sub
fidivrl
popf
and
movsl
add
xchg
xchg
rorl
mov
adc
lret
jp
movsb
lea
ret
imul
rcrb
sahf
push
fidivrl
sbb
pop
pusha
daa
pop
xchg
cmp
outsb
shlb
iret
push
ss
shrd
sahf
jo
movsl
cmpb
push
in
lret
pop
fcmovnbe
stos
cmc
test
add
fincstp
fbld
push
sar
frstor
shl
pusha
bound
and
mov
xor
xchg
int3
ds
mov
xor
addr16
iret
stos
sarl
les
inc
sub
mov
push
pop
popf
les
int3
mov
fwait
sub
mov
mov
out
addb
or
das
xorl
push
jle
xchg
loop
push
fldt
sbb
insb
adc
mov
adc
sbb
test
pop
outsb
adc
adc
ljmp
dec
mov
cmc
push
ret
in
sbb
pushf
ss
jmp
scas
inc
repz
mov
or
cmp
jmp
clc
push
xchg
or
push
or
push
push
xor
shll
add
lods
push
lea
popa
cmp
xchg
stc
aam
cs
mov
and
into
xchg
cmpsb
sbbl
sbb
and
sbb
lds
push
xor
idivb
xorb
lret
xor
cmp
add
insl
add
jp
cmc
sbb
inc
mov
pop
push
pop
mov
addr16
out
mov
sbb
cmp
mov
add
sbbl
aaa
lods
les
minps
pop
push
mov
je
sbb
and
pop
or
in
jmp
mov
cmpsl
and
mov
adc
xchg
push
adc
sub
pop
fcompl
sub
sahf
addr16
iret
sbb
lock
jo
pop
movsb
push
sub
mov
ret
or
xchg
aaa
ret
sbb
ror
jne
mov
pushf
leave
or
aam
aam
inc
into
lea
push
push
and
sub
enter
adc
mov
mov
iret
cmpsl
jne
clc
out
fistps
sbb
pushf
mov
ds
xchg
ljmp
pop
adc
pusha
and
mov
mov
adc
xor
mov
add
push
pop
mov
cwtl
adc
ljmpw
sarl
pop
mov
xchg
andb
add
imul
push
movsl
test
xchg
jno
stos
push
pop
rcl
pop
call
call
inc
sbb
cmp
mov
lea
popf
mov
mov
mov
pop
and
dec
mov
movsl
dec
daa
pop
dec
cld
lahf
mov
lea
mov
ljmp
pop
add
push
imull
or
popa
outsb
mov
pop
lcall
lret
arpl
jns
jae
xor
sbb
push
repnz
sbb
fdiv
inc
aaa
push
bound
add
adc
cmp
and
adc
xor
lock
loopne
cmpb
xchg
scas
push
jnp
mov
div
loop
adc
test
fnstcw
mov
jmp
arpl
aaa
and
mov
jecxz
ficoms
out
fistps
out
ficomps
les
pop
aam
insl
scas
pop
push
std
add
lahf
dec
push
out
popf
stc
mov
imul
mov
fdivrl
push
pop
cmp
test
fstpl
std
imul
push
add
cmp
sbb
data16
test
aam
jne
cld
pop
fnstenv
mov
mov
fsts
inc
jae
call
adc
mov
mov
mov
xchg
lds
fsubl
mov
mov
lds
mov
dec
sub
push
sbb
or
and
sub
push
and
je
xchg
mov
mov
dec
jo
jmp
faddl
je
and
sahf
add
xchg
mov
xchg
scas
sbb
pop
in
push
pop
clc
int
xchg
add
add
mov
mov
shll
enter
clc
xchg
dec
sub
rolb
inc
out
sub
mov
and
jmp
sti
or
push
lea
and
dec
pop
push
push
mov
outsb
xchg
rcll
dec
inc
jne
clc
mov
mov
aas
sbb
jmp
call
sti
clc
fnstcw
cltd
or
xor
push
cmp
and
ja
adc
mov
mov
je
add
outsb
es
cmp
in
fimull
lods
xlat
leave
xchg
rcrl
sti
and
popa
into
inc
mov
test
adcb
xchg
imul
mov
add
lock
xchg
mov
cmp
mov
lahf
jge
inc
and
jle
mov
nop
jp
mov
jae
mov
mov
in
aaa
popf
jp
xor
ret
sbb
daa
mov
add
lods
sahf
scas
jo
add
xor
cmpsl
stos
orl
nop
rcr
aaa
adc
and
out
loopne
mov
inc
pop
xchg
xchg
int
inc
mov
jb
cmp
cmpsl
lea
imul
out
outsl
loope
sbb
jge
dec
sti
sarl
pop
roll
idivb
addr16
dec
fcomip
or
pop
cmp
in
imul
aam
into
mov
push
mov
les
xor
sub
and
sbb
mov
or
rorl
icebp
dec
mov
sahf
movsb
mov
or
movsb
inc
cmp
push
cmpl
jecxz
scas
xchg
jl
out
add
xor
adc
iret
out
push
call
jo
mov
pop
or
cmc
xchg
ljmp
gs
mov
jns
clc
fs
xchg
mov
inc
sbb
hlt
cwtl
gs
jae
daa
test
loopne
and
push
and
push
dec
fimuls
int
dec
pop
add
inc
iret
and
inc
pop
sbb
imul
js
add
and
jb
cli
xchg
and
and
aas
cmc
out
test
rorb
cmpsb
inc
jne
neg
or
mov
jmp
add
sub
ljmp
or
test
sbb
and
add
pop
lock
daa
mov
cmp
jmp
daa
pop
scas
in
mov
fsubrs
mov
jnp
mov
test
xchg
mov
sbb
pop
dec
sbb
cli
shrb
dec
cmpxchg
inc
mov
hlt
jmp
js
dec
push
or
mov
xor
cmp
mov
fucom
fnsave
xor
cmpsb
arpl
out
cmpb
out
xor
mov
adc
inc
loope
pop
xor
mov
mov
and
pusha
pop
daa
pushf
mov
mov
xor
std
mov
insb
mov
or
pop
sbb
inc
xor
cmp
xlat
lods
xor
adc
out
mov
pop
clc
mov
lods
adc
imulb
mov
push
out
fldenv
pop
sbb
mov
into
leave
pop
xchg
sbb
lods
sbb
lock
clc
lahf
gs
fsubrs
pop
lods
xchg
add
in
ret
sbb
int3
fnstenv
pop
jmp
aas
adc
adc
mov
cmpl
loopne
lcall
clc
dec
mov
fstpl
pop
cmp
add
xchg
arpl
nop
les
cmp
jb
stc
and
shlb
or
sar
pop
lods
iret
xchg
pop
sub
lea
push
das
cmp
cmp
aas
push
in
xor
and
mov
lods
ret
lret
pop
add
mov
jle
lret
addr16
jge
push
dec
pop
xchg
stos
cli
inc
es
cmp
pop
cltd
add
push
mov
mov
ret
out
add
shl
shrb
pop
xlat
adc
and
stos
mov
mov
int
sar
inc
pop
in
inc
aad
jl
lds
jo
push
jmp
mov
imul
jmp
pop
repz
lret
inc
ds
cld
sbb
xor
and
sbb
sub
dec
lods
ljmp
out
cmpsl
add
cmp
lods
xor
gs
sbb
jb
test
out
mov
xor
inc
fidivrs
add
ljmp
or
mov
sub
cmp
rorb
shrb
mov
outsl
mov
adc
jge
je
lret
enter
ficoml
lahf
mov
sub
xchg
inc
dec
fistpll
lcall
test
push
xchg
sub
out
mov
sbb
mov
es
push
ja
inc
adc
bts
fstp
xchg
stc
ret
jl
mov
and
ss
push
inc
shlb
enter
popf
test
cltd
test
repz
jmp
shlb
mov
dec
in
cmp
imul
inc
mov
add
or
lea
pop
rolb
adc
xlat
pop
and
fimuls
ljmp
mov
add
adc
jo
std
int3
push
out
mov
jp
jmp
mov
jl
jmp
pushf
mov
xchg
push
mov
clc
test
lret
sbb
enter
ret
mov
sbb
mov
xchg
insl
in
xor
stos
movsb
out
rcrb
cmp
cs
bound
testb
repnz
leave
stc
imul
arpl
aam
mov
clc
sbb
add
mov
fbld
pop
scas
and
pop
sub
fsubrl
or
loope
adc
mov
push
popa
mov
stos
adc
dec
dec
inc
subl
mov
lret
mov
inc
jnp
mov
inc
sbb
aaa
sti
inc
loope
mov
dec
sbb
test
add
les
add
mov
stos
jg
adc
out
push
mov
test
je
pusha
adc
stos
cmc
lods
divb
mov
mov
mov
inc
divb
jbe
mov
data16
test
subb
out
outsb
stos
fistl
jecxz
xchg
inc
std
jmp
lret
adc
inc
out
out
dec
gs
ljmp
sti
xor
icebp
sti
mov
dec
daa
pop
jmp
mov
popa
cld
jge
into
rol
js
imul
sbb
pop
push
outsb
movq
push
rcr
pop
test
fwait
std
cmp
inc
sti
jge
inc
sub
mov
lock
mov
or
ja
jecxz
pop
fmuls
push
je
or
lods
arpl
out
sbb
ss
adc
gs
or
and
sbb
std
xchg
fwait
andl
mov
mov
jno
sub
pop
cltd
ret
shrl
flds
aad
jmp
sbb
sub
cwtl
imul
orps
mov
push
shl
lahf
xchg
jae
mov
pop
xor
and
fisubl
mov
inc
cmp
mov
dec
scas
or
xchg
dec
pushf
mov
xor
mov
adc
add
enter
dec
mov
pop
jmp
testb
mov
mov
out
jmp
pushf
xor
sub
mov
ds
push
cmc
jmp
loope
adc
push
testl
xchg
shl
sbb
cld
sub
add
add
lcall
inc
pop
inc
add
pop
xchg
das
fcomp
dec
and
inc
fsubrs
xor
aad
into
inc
pushaw
rcl
cltd
jno
ror
jne
ljmp
mov
dec
jmp
xor
ljmp
iret
in
popf
mov
movsb
sbb
cmp
into
mov
cwtl
fldt
inc
ret
xchg
sub
jno
dec
adc
mov
add
mov
jbe
inc
and
out
mov
mov
in
jge
push
or
into
mov
jl
rol
in
xor
loope
jae
adc
cmp
xchg
aad
fistpl
cmpsl
or
cmpsl
xchg
push
loopne
dec
ret
jne
pop
push
data16
imul
mov
sbbl
jp
sbb
fmul
arpl
push
dec
fsts
clc
mov
dec
or
ret
imul
cmp
sub
and
xor
sbb
mov
jmp
mov
nop
lret
loop
mov
dec
xchg
popf
loop
das
shlb
xchg
andl
jbe
push
jae
jnp
imul
scas
arpl
mov
aaa
lods
pop
lods
mov
fimull
adc
out
mov
push
ss
int
pusha
inc
pop
mov
or
je
jae
xchg
xor
dec
dec
fbstp
cmp
data16
push
cmc
cmpsb
jecxz
in
adc
ljmp
mov
jp
sbb
mov
icebp
popf
movb
sbb
pop
mov
pop
into
ja
test
sbb
ja
xor
cmpb
pop
mov
push
bound
outsl
xchg
xchg
or
leave
sub
mov
pop
dec
pop
aam
xor
ret
or
outsl
ljmp
insb
repnz
in
cmp
add
std
movsl
xor
ret
test
or
xchg
fadd
pusha
jbe
xchg
xchg
aad
dec
jp
fmull
mov
cltd
icebp
cmpsl
inc
out
fcoms
leave
cmp
rorb
mov
enter
mov
mov
pop
in
shlb
ret
cmpsb
movsl
fs
jae
aaa
mov
jl
xchg
jnp
int3
dec
scas
push
fidivrs
mov
push
test
arpl
incl
sub
in
jbe
xchg
jo
js
xchg
and
xor
scas
bound
cmp
je
sbb
push
daa
fnstsw
mov
ds
xchg
xor
cs
addr16
jb
push
sub
stos
ja
std
pop
pop
test
cmp
mov
jecxz
movsl
andb
mov
and
mov
or
pop
arpl
fs
addr16
inc
xlat
aam
mov
test
jg
das
es
rorb
scas
jnp
aas
mov
movb
fcomp
cmpps
or
xchg
cmp
pushf
test
jae
xchg
insl
mov
mov
sub
cmp
mov
loopne
mov
mov
jb
nop
push
dec
repnz
sub
jle
adc
xor
push
mov
mov
jb
dec
arpl
cmc
jnp
mov
and
lods
cmpsb
jo
xchg
int
cld
add
mov
stc
jl
je
es
jl
inc
xchg
mov
or
mov
xor
pop
movsb
sbb
xchg
movsl
stos
into
sbb
call
cld
dec
iret
jo
ss
arpl
lret
pop
loop
sbb
sub
push
insb
mov
mov
repz
add
mov
inc
lds
fcoms
dec
sbb
dec
sbbb
stos
jp
stos
pop
mov
jp
mov
xchg
dec
loope
dec
jp
insb
cmpl
cld
int3
movsb
fsubr
inc
or
mov
cmovnp
outsb
cmpsl
das
xor
sysexit
mov
icebp
imul
icebp
test
das
adc
inc
xchg
push
sbb
xor
mov
pop
mov
pop
out
xor
loop
lahf
mov
outsl
or
push
adc
sbb
jne
inc
inc
pop
cmp
xor
cmpb
test
dec
xchg
sbb
daa
mov
cmp
adc
insl
and
iret
aad
repz
jg
pop
sub
outsl
lds
sub
sub
mov
jg
mov
push
mov
xor
cmp
leave
es
add
xor
cmp
pop
loopne
xor
jmp
xchg
jo
and
jecxz
cmp
popf
xor
arpl
xchg
jns
xor
jbe
xor
jmp
xchg
sahf
ljmp
push
push
movsl
or
mov
mov
sarl
inc
icebp
int
jnp
pop
xchg
mov
adc
jmp
aaa
lods
xor
fsubl
push
test
adc
inc
inc
mov
or
xor
loopne
fcomi
repz
sub
pop
or
pop
mov
pop
popa
lods
jle
push
je
mov
test
sti
mov
movl
cmp
loop
mov
cmp
push
scas
movb
jo
call
scas
sub
add
lea
fstpl
jle
fstl
inc
sub
or
inc
hlt
mov
xchg
add
push
jge
in
nop
sub
addr16
leave
cmpsl
das
xor
add
call
scas
dec
aas
jne
inc
dec
ljmp
mov
mov
not
rcr
icebp
mov
rclb
fstl
stos
mov
or
leave
add
dec
nop
add
ds
sub
jb
pop
mov
fidivl
or
in
aam
fistpll
sarb
jg
mov
adc
xor
cmp
popf
xor
xor
dec
jne
sti
xchg
shlb
loop
and
inc
adc
xchg
loop
outsb
imulb
mov
lock
stos
mov
push
icebp
and
fisttpl
and
test
inc
imul
dec
jbe
push
jecxz
fwait
xorl
jmp
sbb
faddl
dec
dec
mov
out
jb
pusha
aad
push
lcall
sbb
pop
lods
xchg
sub
or
jne
mov
push
jo
pop
inc
out
sub
inc
imul
pop
inc
pop
sub
scas
into
mov
sti
cmpsl
push
jb
lahf
out
mov
cs
in
aad
roll
or
cmp
lret
pop
mov
ja
push
rcrl
pop
in
jmp
jnp
mov
cmpsl
inc
and
dec
addr16
sbb
xlat
shlb
cmc
pushf
xor
loopne
dec
inc
in
pop
add
and
movsb
idiv
js
daa
push
test
sar
dec
xchg
or
xlat
mov
mov
lcall
insl
mov
or
inc
pop
inc
adc
iret
sti
sub
daa
mov
scas
jle
fisubs
emms
mov
out
pop
aaa
sbb
xchg
or
cmp
inc
xlat
cli
pop
push
test
xchg
les
xor
push
cmpsb
pop
fdiv
out
jb
xor
sbb
rol
dec
test
into
sahf
push
divl
insl
cmp
push
mov
ds
sub
out
sbb
fstpl
jg
and
cmp
fcompl
imul
xchg
jns
jnp
aas
lcall
mov
js
xchg
scas
or
mov
pop
mov
inc
add
fwait
adc
dec
push
mov
loop
outsb
push
sub
inc
push
movsl
jbe
mov
loopne
pop
or
add
and
lock
pop
into
push
nop/reserved
loop
cli
pop
cmp
pop
and
fcmovu
add
mov
repz
ljmp
adc
insl
sbb
xor
xchg
stos
nop
pop
sub
and
lds
or
jns
inc
mov
xor
test
cmp
loope
mov
sbb
lods
je
popf
scas
and
je
imul
mov
xchg
decb
mov
add
call
cmp
es
xor
mov
fistpll
cmp
jne
imul
adc
imul
pop
push
xchg
sbb
or
shrl
jp
in
pop
sbb
jp
or
lcall
jle
sbb
mov
das
in
in
pop
xchg
stos
shlb
fisubs
and
lds
sub
push
sbb
push
rcl
aad
cltd
out
xchg
pushf
adc
sbb
dec
xor
orb
pop
fmuls
and
push
xchg
out
icebp
mov
adc
cwtl
scas
insb
or
lahf
sub
ljmp
cmp
test
jae
jbe
cmp
lcall
insl
inc
xchg
xor
xor
or
jmp
xor
add
xchg
jnp
cmp
cmp
lock
cltd
mov
push
or
dec
in
pushf
xor
jg
push
shrl
das
cld
mov
sti
pushl
mov
mov
xchg
outsl
mov
ret
jmp
cmp
push
push
fildl
pop
lock
in
incb
inc
cmc
lods
or
enter
mov
jo
adc
ljmp
sub
jmp
in
dec
mov
into
dec
scas
jo
ret
js
jle
scas
push
push
xchg
cmp
inc
inc
mov
xchg
out
out
ja
xor
ljmp
and
pop
icebp
sub
repnz
orb
mov
loope
sbb
ja
ljmp
push
jle
jp
fsubrl
cli
ror
push
jecxz
xchg
xchg
jno
stos
sbb
stos
or
lahf
mov
loopne
sahf
hlt
sub
xchg
int3
rdtsc
and
daa
adc
icebp
std
in
scas
push
ss
xor
xchg
pop
arpl
jae
or
ret
fstl
mov
mov
mov
mov
lret
pop
or
or
mov
jmp
push
jecxz
jp
pusha
int3
sub
icebp
ret
and
adc
mov
sub
cltd
fsubrl
push
pop
add
inc
cmp
in
cmp
cmpsb
popf
mov
inc
lods
xor
jbe
call
pop
fnstcw
mov
cmp
push
pushf
mov
sbb
enter
xor
or
jmp
in
mov
fcomps
fcmovbe
daa
test
cmp
insl
push
xchg
ds
bswap
mov
out
loop
les
ljmp
sub
or
mov
jbe
loop
or
lods
js
ljmp
leave
lret
cmp
fsubp
push
sub
rolb
adcl
into
pop
sbb
or
and
insl
jnp
cmc
out
or
jb
push
mov
jl
ficomps
rcr
jecxz
repnz
or
cmp
mov
leave
jl
pop
mov
xor
fdivrs
add
mov
rol
cld
fsubp
inc
sbb
sub
lods
cmp
cmp
iret
sub
popa
mov
xor
and
sub
ja
mov
ficoml
je
loopne
pop
cld
fstpt
and
xchg
fnstsw
sbb
mov
fcom
clc
shrb
ret
mov
pop
sub
insb
adc
push
xchg
mov
jge
repz
jns
cmp
ret
jecxz
movb
movsb
push
adc
leave
mov
mov
adc
add
pop
adc
fadds
sarl
jne
je
mov
in
nop
xlat
aad
mov
mov
cltd
jns
jle
das
stc
adc
icebp
jb
inc
mov
sub
dec
es
test
movsl
push
shll
mov
outsb
imul
je
and
stos
and
sbb
sahf
das
sub
jb
out
imul
jmp
jecxz
enter
pushf
cli
dec
push
outsl
xor
push
xchg
ja
xor
cs
loopne
scas
fwait
rorb
jg
cmp
mov
lods
jo
pop
dec
push
mov
je
inc
subl
fldl
out
xor
push
jecxz
push
or
xor
push
lea
add
stc
mov
and
outsb
pop
jno
stc
and
xchg
int
mov
out
xor
or
mov
insb
pop
aas
jecxz
daa
inc
leave
jg
ret
test
outsb
aam
loopne
icebp
xor
pop
ficomps
int
dec
push
in
imul
pop
clc
andl
int
adc
rcrl
shrl
rep
sbb
out
cmp
ret
mov
xchg
dec
jo
in
jg
test
add
or
xor
mov
int
and
movlps
xlat
fadd
out
xchg
push
push
mov
lahf
push
and
push
sub
cmp
aam
mov
sahf
andl
dec
fsubrl
hlt
clc
mov
pop
sub
lahf
lock
int
or
aaa
fdivrp
adc
mov
mov
or
stc
xor
xor
sti
jne
mov
test
xor
cmc
xchg
jecxz
mov
mov
or
xor
pcmpgtw
pushf
jb
xchg
mov
pop
cltd
mov
hlt
mov
sub
push
xor
jecxz
jns
movsl
push
int
or
insl
js
out
cli
mov
lret
pop
movsb
subl
mov
mov
jp
adc
pop
bound
clc
pusha
jbe
icebp
jecxz
cwtl
notb
shll
sbb
addr16
into
mov
mov
and
mov
push
cmpsl
jp
and
lret
jo
or
dec
mov
mov
pop
mov
and
jae
add
dec
call
adc
loope
icebp
push
scas
ret
add
inc
lret
inc
xchg
xor
push
fisubs
enter
jg
mov
xchg
fistl
xchg
flds
insb
mov
pop
and
sbb
daa
rcrb
out
arpl
js
into
mov
cwtl
and
in
and
ja
add
add
mov
dec
mov
xchg
in
out
aaa
loope
in
stc
incb
cmpsb
addr16
push
mov
movnti
jns
mov
ret
dec
aad
mov
ret
jle
test
cmp
pushf
scas
movsl
cmp
faddl
xor
inc
jl
cltd
mov
xchg
icebp
lods
vmovdqu
mov
jb
wbinvd
lods
jae
rcr
add
imul
mov
test
pop
int
andb
pop
test
add
into
das
arpl
mov
clc
pop
test
arpl
inc
clc
roll
sbb
dec
in
test
int3
push
mov
inc
mov
cli
lods
es
inc
out
cmp
lods
cwtl
es
cs
insl
insl
icebp
sbb
xchg
cltd
mov
int
cmp
cwtl
mov
or
mov
mov
inc
sub
push
mov
xchg
pop
xlat
enter
mov
xor
adc
lock
jmp
push
and
shlb
pop
push
mov
sbbb
into
pop
push
lcall
inc
push
aaa
mov
shl
mulb
adc
cmp
xlat
test
popf
xchg
out
rcrb
hlt
sbbb
mov
xor
xchg
sub
adc
mov
enter
inc
jbe
inc
adc
sub
cmp
adc
jae
sbbb
jae
or
aad
imul
aad
dec
mov
popl
mov
fbstp
fsubl
fucomip
sahf
out
sti
call
in
dec
jbe
ficoml
jl
scas
inc
fidivrs
mov
popf
or
mov
pushf
pusha
add
jne
lret
mov
test
mov
and
mov
mov
inc
push
int
and
pushf
mov
pop
mov
mov
pop
les
mov
jge
rcrl
push
out
dec
lods
push
sub
les
pop
flds
lret
xrelease
dec
jl
xor
lods
imul
stos
mov
shrl
fdivrs
nop
jle
rorb
pop
pop
sti
mov
inc
ss
lods
je
mov
add
and
adc
loop
out
jns
cmpsb
mov
loope
xchg
mov
sub
test
andl
aam
xlat
cmc
fwait
or
in
arpl
or
roll
mov
fidivs
mov
sbb
ss
loop
popf
mov
mov
xchg
push
fmull
fwait
mov
sub
cmpsl
les
addr16
out
inc
iret
and
out
pop
out
loop
enter
jecxz
and
sbb
je
pop
scas
sbb
pop
cmp
add
jo
test
xchg
movsb
mov
test
in
sahf
adcb
push
popa
jecxz
fistpl
push
mov
jnp
and
movb
imul
push
mov
rolb
test
dec
inc
push
sbb
aad
insb
hlt
arpl
std
mov
dec
sahf
dec
xchg
mov
mov
mov
stos
addb
ds
add
daa
or
loope
or
sbb
scas
sbb
or
ss
xchg
imulb
mov
sbb
push
add
imul
adc
cltd
push
inc
push
das
mov
or
mov
sbb
repz
movsbl
adc
lods
shlb
push
mov
call
add
dec
out
scas
shll
push
fisttps
outsl
mov
pop
call
push
out
mov
popf
push
add
lret
mov
xchg
lea
jo
push
mov
daa
sbb
cmp
hlt
loope
pushf
sbb
sarb
jne
outsl
jg
mov
lods
dec
addr16
push
call
movsb
jle
pop
lret
repz
enter
xchg
das
xchg
dec
sbb
outsb
mov
fs
fldt
bound
dec
mov
sub
hlt
loopne
push
mov
fiadds
cmc
scas
mov
mov
mov
or
jecxz
clc
mov
sub
test
mov
cmp
repnz
rcll
ret
pop
mov
xor
in
push
adc
imull
inc
cmpsb
push
in
aas
xchg
pop
and
adc
sbb
adc
fldl
jb
inc
or
xchg
stc
jge
imul
int
jge
lds
mov
aad
xor
add
or
movsl
ficomps
xchg
xchg
sbb
mov
in
and
in
jne
or
push
into
mov
dec
mov
lds
dec
jnp
or
adc
rol
popf
test
cli
sub
or
sub
or
sub
inc
adc
mov
add
push
addr16
sub
dec
jbe
cmp
mov
inc
sahf
rcrl
aas
ret
or
xchg
lcall
lea
jne
sbb
nop
inc
movsl
xchg
out
push
insb
or
int
xchg
or
cmc
popf
xchg
dec
push
inc
inc
jg
out
jecxz
sub
xor
cmp
dec
xor
test
xchg
mov
adc
sbb
test
ret
cs
pop
iret
rorb
pusha
and
pop
ljmp
repz
movl
mov
iret
cmp
adc
adc
jg
jno
cmpsl
push
enter
sbb
ljmp
and
mov
xor
cmpsb
sub
ret
dec
pop
sub
repnz
ss
cli
push
add
mov
mov
mov
jae
fistl
rclb
cmp
mov
repz
mov
ret
and
xchg
iret
daa
or
lds
mov
lret
adc
movsb
jbe
xchg
jae
or
mov
lds
and
dec
movsb
fiadds
and
frstpm(287
dec
fsubrs
sbb
mov
stos
sub
push
fisttpl
push
jno
popf
ljmp
pusha
pusha
add
dec
adcb
xchg
and
int
lahf
outsb
jb
popf
test
imul
bound
add
jp
mov
mov
lods
dec
dec
stc
xchg
aaa
in
rorb
mov
ss
mov
sub
mov
push
jge
mov
rclb
cmp
outsb
push
xor
mov
push
out
lods
pusha
mov
mov
test
push
mov
inc
enter
dec
xchg
jae
incl
repnz
fnstsw
dec
cs
adc
sahf
sbb
cld
jge
push
cmp
ret
sbbb
cs
test
stc
jb
or
aaa
sbb
in
fs
fistl
pop
out
rcrb
imul
fwait
mov
add
cmpsl
imul
insb
add
xor
inc
inc
xor
mov
mov
pop
cmp
andb
pop
dec
cmp
xchg
cltd
sti
ss
daa
test
ret
aad
xchg
mov
push
imul
daa
or
dec
push
test
and
popf
cwtl
mov
cwtl
pop
ret
mull
inc
aad
lods
sarb
jmp
mov
mov
xor
dec
sub
pop
pushf
insl
xor
adc
popf
sub
xor
scas
lods
or
lea
add
sub
push
daa
xchg
inc
loope
decb
inc
into
jmp
xor
insl
lahf
xlat
jmp
dec
dec
call
pop
mov
mov
out
je
pop
hlt
xchg
jb
outsb
imul
mov
ds
sti
scas
aaa
sub
pop
mov
jecxz
insb
out
jmp
popf
dec
inc
push
xchg
jne
cli
les
xchg
mov
gs
and
xchg
out
loop
jbe
push
jae
jo
stos
repz
leave
jnp
test
pop
sub
mov
in
xor
add
pop
pop
cmp
and
push
mov
mov
lcall
and
iret
adc
xchg
mov
daa
test
inc
adc
insb
das
add
fimull
les
pusha
push
test
mov
ljmp
fsts
je
flds
add
add
mov
and
mov
pop
xor
xor
dec
mov
push
cmp
jae
ss
scas
mov
adc
mov
pushf
imul
fistpll
mov
mov
arpl
test
and
cmp
dec
xchg
sbb
dec
insb
push
stos
lret
sbb
hlt
sbb
orl
leave
repnz
inc
lea
cmc
pop
push
jecxz
out
jecxz
and
push
dec
addr16
into
addr16
aam
add
nop
std
inc
sbb
int
pop
mov
push
pop
mov
bound
jno
imulb
push
fistpll
sbb
mov
push
mov
xchg
mov
inc
jmp
or
inc
scas
mov
push
jle
mov
add
pushf
push
cmpb
aad
and
fimuls
or
loop
pop
stc
push
xchg
hlt
push
nop
jecxz
es
stos
cld
test
jns
imul
fnstenv
mov
cmp
into
sub
adc
mov
xor
jae
test
adc
nop
lahf
or
popa
xchg
jb
pusha
jg
and
cmp
sti
lahf
popf
popf
xchg
sub
cmpl
xchg
orb
cltd
pop
add
frstor
xor
pop
fcomps
popf
jle
add
xchg
mov
jl
fstps
sbb
mov
jge
xor
ljmp
push
das
ja
mul
mov
std
adc
shll
xor
out
xor
push
pop
mov
ja
adc
adc
cmp
outsl
mov
sub
lds
clc
out
jg
test
dec
fidivrl
shrb
mov
out
push
inc
xor
out
pop
sbb
or
hlt
dec
lahf
sbb
cld
lcall
insb
cmpsl
or
mov
adc
jbe
mov
mull
loop
dec
cmp
add
cli
out
std
int
jnp
fsts
hlt
out
std
cmp
dec
mov
rcrb
ljmp
or
imul
dec
or
in
push
pop
mov
insl
xchg
xor
inc
mov
xchg
mov
dec
sbb
movsb
or
pop
mov
lea
dec
outsl
dec
in
pop
es
sbb
xor
xchg
movsl
push
push
xor
sahf
sub
mov
add
movsb
cmc
stos
lods
int3
call
inc
stos
outsb
and
xchg
lds
add
jnp
and
mov
and
inc
repnz
add
stos
sbb
xor
mull
xor
cmp
std
and
das
int
das
cmp
jmp
fwait
call
arpl
pop
aad
sbb
xchg
mov
inc
mov
mov
repnz
pop
and
push
dec
push
push
ds
hlt
ds
inc
dec
test
sub
mov
jno
insb
push
fisttps
je
out
mov
cltd
insl
xchg
sub
andl
insb
clc
lret
mov
pusha
lea
mov
pop
ja
jle
out
xor
stos
mov
leave
sti
jb
notb
sub
loop
adc
js
xchg
pop
sbb
xchg
add
xchg
xchg
idivb
or
jns
xchg
adc
sub
sbb
fsubl
rcl
add
icebp
or
jnp
je
outsb
adc
xchg
dec
adc
lret
push
subl
sub
mov
add
xor
pop
pop
lock
push
lret
jns
fmull
repnz
ret
xchg
into
sbb
cld
push
sahf
adc
cld
pop
xchg
mov
inc
mov
addb
mov
sub
jbe
popf
popa
insb
rorl
pushl
xor
inc
jns
mov
mov
mov
aam
loop
xor
mov
dec
adc
es
insb
les
mov
pop
imul
popf
push
lcall
mov
inc
sub
mov
mov
jo
dec
pop
mov
mov
or
scas
and
jae
out
push
mov
daa
les
mov
aaa
aas
ss
and
dec
mov
repnz
push
cmc
cmp
mov
stos
out
xor
iret
sub
out
push
sti
js
xor
fs
fcompl
mov
rorl
push
rcl
sahf
dec
adc
arpl
mov
fs
inc
lret
and
push
icebp
mov
mov
lcall
orl
mov
push
imul
jnp
pop
xlat
adc
or
mov
dec
insl
ret
gs
inc
lods
mov
sub
jmp
dec
add
pop
lea
frstor
aaa
loope
add
mov
push
fdiv
and
in
inc
cld
xlat
jmp
cmp
out
cmc
mov
fidivs
mov
fwait
mov
push
movsl
cwtl
ficompl
das
mov
xchg
push
xchg
aad
test
inc
lret
xchg
sub
adc
add
jp
mov
inc
sbb
lock
lahf
sbb
pop
cmp
mov
roll
daa
jmp
and
stos
pop
cmpl
sub
subl
push
inc
std
pusha
and
cmp
mov
ret
add
inc
pop
mov
sub
mov
incl
scas
aaa
lods
add
inc
pop
fstpt
pop
xchg
and
dec
cmp
ljmp
orl
es
fsts
fsubl
in
outsl
addr16
adc
fcom
sub
add
mov
pop
stos
adc
out
pop
test
ljmp
imul
imul
sbb
jge
inc
insl
imul
sti
mov
xchg
adc
push
testl
iret
sub
push
sbb
mov
xchg
add
push
push
fnsave
fwait
inc
sbbb
cld
jo
int3
scas
xlat
dec
in
and
push
and
in
das
ret
rol
mov
push
mov
test
mov
test
add
scas
mov
and
stc
mov
mov
jae
stos
imul
nop
test
jno
xlat
and
jle
scas
lods
xchg
dec
orl
jbe
call
dec
gs
push
jp
int3
pushf
sub
std
int3
das
mov
mov
push
push
mov
mov
cld
lcall
dec
sahf
add
xor
loop
mov
dec
subl
loope
in
adc
push
outsb
adc
dec
fisttpl
pop
push
jns
sub
pop
shlb
add
or
add
adc
xor
push
jecxz
push
dec
icebp
test
adc
pop
jmp
jae
inc
sub
pop
jnp
jge
add
lcall
test
pop
pusha
sub
into
mov
dec
push
call
pop
je
rorl
in
cmp
scas
mov
dec
mov
je
jge
xchg
inc
jno
sbb
shrb
je
jle
loope
aad
pop
pusha
cmp
stos
dec
sbb
loop
cmp
cmp
testb
fdivrs
cmp
cmp
xlat
mov
pop
roll
lods
inc
out
fnstsw
jne
cmp
sbb
cli
outsl
xlat
jp
in
pop
ficompl
xorl
adc
xchg
cltd
movsl
mov
jae
arpl
and
aad
mov
fcmovnbe
lods
cltd
lahf
adc
mov
push
jp
cmpsl
ret
sub
cmp
sbb
xor
out
fimuls
cwtl
mov
add
xchg
ljmp
jg
inc
call
mov
mov
leave
adc
jns
inc
cs
aam
jmp
adc
in
fistpll
xchg
push
fidivrl
cmp
dec
daa
jmp
fwait
sti
in
pop
ss
mov
jp
inc
sbb
pusha
or
or
scas
pop
imul
xor
iret
ljmp
test
sarl
shr
test
lret
cmpl
pop
gs
sub
mov
inc
pop
rolb
test
jne
mov
dec
nop
mov
push
add
sti
xchg
xchg
sub
pop
pop
push
frstor
shrl
lahf
mov
mov
inc
call
lods
iret
shll
lods
ja
ja
jmp
add
dec
pop
push
leave
cmp
mov
out
leave
adc
cmp
clc
test
push
mov
dec
push
push
dec
je
fucomip
pop
lcall
inc
insb
out
jnp
pop
movsb
cmc
iret
inc
inc
and
pop
and
mov
and
xchg
xor
out
xor
cli
aaa
adcl
pop
fisttps
add
jb
imul
sbb
lods
and
data16
jo
cmc
dec
into
sbb
jmp
insl
add
idiv
inc
aam
outsb
out
cmp
stos
and
cmc
push
stos
subb
cltd
adc
push
mov
jmp
shlb
cli
packssdw
add
push
jbe
outsb
push
clc
push
sahf
adc
mov
sbbb
xor
pop
ss
mov
test
or
std
ret
loop
lock
inc
loope
popf
xchg
inc
adc
sub
push
mov
outsb
sub
ret
jg
repz
out
subl
fdiv
cs
shl
xor
ja
jmp
aad
and
lods
sub
and
ror
pop
adc
daa
ds
xor
adc
xchg
mov
stc
adc
jp
xor
xor
mov
pop
enter
out
dec
xor
mov
les
jno
mov
sti
dec
xchg
lret
cmpsb
cmpsb
js
add
mov
mov
rorl
sbb
mov
pusha
pop
jmp
mov
je
cmp
gs
jl
adc
ficomps
pop
pop
rcrb
nop
rcr
rolb
int
jecxz
dec
pop
jns
inc
pop
aad
and
and
jmp
adc
xchg
clc
rolb
ljmp
je
ds
ss
xchg
cmp
jg
jnp
clc
jecxz
dec
jb
faddp
mov
subb
mov
add
adc
test
jle
cmp
lds
mov
mov
xor
pop
sub
cmpsb
inc
add
fbld
and
add
das
cmp
je
andb
aam
push
test
jb
dec
movsb
adc
stos
adc
es
lods
jg
imul
ss
or
movsb
adc
lcall
sbb
leave
stos
sbb
adc
dec
aaa
or
inc
mov
jbe
out
add
add
pop
std
pop
inc
sbb
test
xor
sbb
pop
lds
jae
cmp
and
daa
sbbb
mov
adc
test
push
xchg
std
jle
insb
imul
call
lret
add
sbb
test
cmp
add
test
call
lret
mov
bound
dec
add
xorb
jp
out
jnp
outsb
mov
or
ljmp
cmp
stos
int3
je
mov
mov
mov
in
cmpsl
lret
std
in
add
lcall
xchg
mov
xor
inc
jl
fdivs
imul
sbb
adc
adcb
test
xlat
movl
mov
jmp
pop
mov
outsl
mov
adc
or
ss
or
lret
pop
jne
sbb
mov
xchg
xchg
push
lods
lret
lock
out
fmul
cs
pop
cli
or
idivb
adc
jecxz
daa
mov
push
push
jg
aaa
popf
xor
lahf
mov
adc
adc
push
int3
mov
xchg
out
mov
push
test
dec
mov
sub
push
fldcw
jae
fstl
add
mov
jb
jle
dec
rorl
mov
sub
adc
cmc
cmp
cs
push
in
add
daa
insl
fcmove
sbb
daa
pop
outsb
aad
cmc
int
jne
sub
cmp
xor
mov
add
jne
loope
leave
fldl
dec
mov
cs
jp
inc
out
out
paddsw
imull
pop
arpl
gs
aam
ret
faddl
ret
and
and
aaa
int3
imul
xchg
push
mov
hlt
notl
mov
push
sbbb
shrl
test
xor
add
popa
jl
ret
enter
jo
iret
cwtd
jno
sub
adc
sub
push
mov
mov
cmpsl
inc
cmc
add
push
mov
mov
dec
std
jg
lock
and
push
lods
mov
xor
pop
iret
and
sub
cs
sbb
rclb
test
mov
push
insl
and
fsubrs
in
in
inc
push
xor
and
aad
mov
leave
das
arpl
ret
or
inc
dec
or
stos
inc
test
jnp
stc
or
dec
add
mov
int
mov
push
mov
sarl
dec
popa
mov
cmp
jns
adc
jno
or
repnz
pop
inc
iret
test
leave
dec
mov
cld
or
and
cmpsl
dec
sbb
pop
clc
add
bound
push
xchg
xor
mov
mov
mov
and
push
jne
mov
sbb
xchg
mov
xchg
enter
aaa
sub
push
mov
cmp
cmpb
mov
fnop
dec
fldt
out
stos
xchg
and
ret
mov
jo
in
mov
aas
push
jae
push
jecxz
add
arpl
stos
or
sbb
ficoml
jbe
dec
inc
and
sbb
loope
jb
and
shll
or
inc
outsb
ja
sub
test
xorb
dec
xchg
mov
sbb
and
rcrb
mov
repnz
mov
addl
dec
mov
std
in
mov
fmull
mov
iret
fs
and
or
jo
and
lds
mov
push
mov
movsl
xor
xor
inc
pop
int3
cmp
imul
shrb
fcoms
sub
repz
push
mov
or
sub
loop
mov
mov
pop
enter
cmpsl
xor
outsl
xchg
jno
xchg
and
out
jg
push
pop
sub
adc
sahf
push
and
fisubs
inc
xchg
or
fdivs
xchg
mov
cld
es
test
add
pop
xchg
mov
or
cwtl
mov
push
or
scas
loop
enter
and
lcall
add
dec
add
stc
xchg
xchg
lcall
pop
mov
icebp
mov
adc
or
fdivl
test
shr
test
cs
outsb
bound
jg
push
cmp
add
iret
loopne
dec
adc
push
pop
jbe
arpl
jb
rclb
pop
and
pop
wrmsr
fimuls
insl
push
inc
lds
push
sub
mov
cli
lods
lcall
xchg
pushf
and
loopne
fstpt
mov
mov
lock
pop
mov
jle
lock
jo
fbstp
push
pop
imul
mov
jl
scas
mulb
pop
out
popf
mov
mov
out
xor
sub
cmc
fldenv
lret
adc
sub
jbe
lret
cltd
mov
std
adc
push
inc
mov
popa
push
mov
cltd
jmp
jb
jo
loope
xchg
inc
pop
mov
notb
mov
mov
mov
loop
mov
clc
lods
inc
jbe
add
js
push
fwait
xor
pop
faddp
mov
jo
outsb
in
sbb
and
stos
addr16
in
push
call
test
pop
aas
sbb
and
xchg
sbb
shlb
pop
test
rcll
outsb
lcall
and
pop
push
pop
test
lods
cli
dec
lods
in
stos
pop
out
test
inc
popf
mov
pop
mov
mov
jbe
test
test
adc
add
mov
cli
lds
js
cltd
mov
or
repnz
hlt
enter
imul
sub
mov
pop
fidivl
pop
mov
aas
inc
jg
jbe
mov
jl
add
cmp
aam
cmp
rorl
into
mov
jp
pop
or
dec
out
dec
add
inc
push
sbb
mov
scas
loopne
xchg
or
jno
mov
inc
xchg
push
fdivr
cmp
mov
subl
push
loopne
popf
jle
stos
sub
subb
sbb
scas
inc
lods
xchg
imul
mov
cmp
imull
jmp
out
cwtl
mov
mov
fstps
sti
adc
fwait
divb
in
aaa
and
stc
cmpsl
inc
fildl
subb
sahf
ljmp
jecxz
dec
cltd
mov
popa
cwtl
xchg
adc
psrlw
mov
fwait
jl
adc
push
xor
vmwrite
add
sarb
std
and
test
push
mov
pop
std
pusha
or
pop
mov
mulb
dec
test
or
into
fucomi
int3
add
xchg
push
orl
sub
pop
test
dec
subl
jns
mov
stc
insl
sub
or
pop
and
xchg
pushf
pop
test
and
pop
in
daa
cli
gs
out
clc
add
cltd
mov
imul
xor
jno
movq
or
jno
rcll
sub
loopne
cmp
fisubrl
es
mov
jg
sub
push
scas
cmpsb
push
xchg
dec
lahf
xchg
inc
aam
cmp
mov
pop
subb
aaa
adcb
test
sub
jp
pop
dec
sub
xor
sbb
cli
daa
ret
pop
scas
repnz
push
inc
ja
test
shl
mov
cmp
test
xchg
cmp
inc
dec
mov
xor
mov
jb
push
mov
les
bound
in
dec
jg
or
push
cmp
orb
sub
pop
pop
pop
or
sbb
call
in
es
stos
pop
jmp
aaa
je
lcall
add
inc
arpl
stos
cmp
ret
jl
popa
pop
in
and
xor
outsb
leave
push
scas
pop
jnp
fsubs
jne
dec
dec
insl
lcall
push
jge
rcrb
and
cmpsl
es
jne
inc
push
cli
adc
int3
bound
mov
shr
cmp
cmc
enter
and
xorl
sbb
test
jp
aaa
push
lock
cmp
shrl
jl
xchg
iret
mov
nop
or
push
xor
push
in
push
pop
inc
int3
sbb
mov
in
into
inc
and
insb
xchg
popf
fdivr
jp
int3
mov
ja
lea
mov
or
outsl
jno
xchg
adc
pop
out
jg
push
stc
leave
fnstcw
push
push
lods
sub
int3
out
mov
imul
ret
push
mov
xor
aam
cld
pop
dec
outsb
jmp
loopne
add
sub
movsb
sbbb
inc
ret
test
cwtl
fstpl
mov
hlt
mov
iret
jle
xor
test
out
jbe
popa
pop
adc
inc
das
lret
mov
and
mov
imul
cmp
ss
push
jmp
rolb
test
and
scas
outsl
icebp
jnp
iret
cli
jp
fcmovnb
rcl
mov
jno
dec
jmp
aam
xchg
cltd
sub
adc
dec
sbb
orb
out
mov
xchg
imul
mov
enter
lcall
adc
fs
fisubl
adc
dec
push
sub
add
data16
shlb
ss
loop
mov
cmp
es
stc
aam
movsl
adc
sub
jne
cli
outsb
xchg
call
mov
sub
rcr
pop
movsl
loop
ja
fwait
mov
xchg
xor
lea
sbb
mov
push
test
adc
fcmovu
add
sbb
notl
mov
dec
adc
je
scas
insl
test
add
cwtl
out
sbb
adc
sbb
add
cmc
out
ja
sti
lret
call
mov
mov
ret
lds
aam
in
daa
and
inc
sbb
addl
cmp
dec
pusha
jno
add
aas
fcmovne
jnp
lahf
inc
jno
or
xor
fstl
sub
test
inc
cmp
stos
or
pusha
js
inc
addl
adc
sub
add
out
add
pop
dec
xchg
mov
cmp
xchg
or
rcrb
and
sub
cltd
pop
or
add
jmp
and
or
fnstenv
popf
mov
jg
call
out
es
dec
inc
xlat
out
ja
test
jae
mov
xor
xor
and
inc
lock
sub
scas
and
std
xor
xor
stos
lock
and
cmc
data16
ds
sbb
es
cmp
scas
stos
push
mov
mov
xchg
xorb
xorl
sub
xchg
aad
mov
subl
push
clc
ss
sub
add
nop
add
orl
jns
and
and
inc
xchg
xor
cmpb
mov
neg
adc
mov
pushf
test
popf
jp
pop
lock
mov
mulb
jo
inc
sti
or
xchg
jnp
xchg
push
inc
loop
inc
or
scas
pop
pop
es
ja
lret
adc
pop
xor
sti
pop
xchg
mov
lret
xchg
dec
call
in
out
mov
nop
mov
sahf
mov
add
cmp
int3
mov
adc
cli
and
mov
add
sub
shll
pop
imul
ljmp
xlat
rolb
fst
lods
cmc
dec
outsb
mov
lret
xchg
adc
cmp
adc
add
dec
and
inc
sub
stc
out
inc
test
cmc
push
lret
decl
test
or
cmc
adc
mov
mov
loop
gs
mov
ss
shrb
inc
push
cmp
mov
stc
or
loopne
gs
fmuls
pop
pop
into
add
jo
pop
data16
loope
xchg
sub
fnstsw
add
xor
xchg
pop
pop
push
xchg
dec
pop
pop
ficompl
xlat
and
sbb
sbb
mov
jae
jecxz
jg
xor
into
xor
int
div
mov
lock
in
jmp
sbb
dec
dec
jno
xchg
leave
inc
pop
mov
mov
ret
setno
fists
outsl
xchg
shll
cli
push
repz
xor
mov
orl
mov
fs
out
call
les
and
sbbb
cmpsl
cld
lods
and
adc
xchg
mov
out
sbb
sub
imul
ror
inc
cmp
pushf
int3
or
mov
js
repz
pop
out
sbb
sub
mov
repz
loopne
adc
jae
push
aam
xor
adc
cmc
sahf
outsb
lret
pop
scas
out
sti
or
mov
xor
fld
mov
arpl
and
fisttps
add
fimull
mov
mov
neg
jp
test
inc
push
adcb
test
ljmp
insb
loopne
push
enter
je
mov
add
in
sub
fsubp
nop
and
loopne
mov
mov
shrl
stos
into
loope
cwtl
jmp
stos
repnz
push
movsb
lahf
and
inc
jp
dec
and
aaa
cmp
mov
jno
out
xchg
iret
or
rolb
sub
sti
sahf
lods
jmp
fcomps
aaa
xlat
cli
fisttpll
cmp
outsl
pop
cwtl
movsl
push
jmp
mov
clc
lret
pop
ret
xchg
xor
addr16
cs
mov
das
lcall
mov
sti
sbb
testb
xchg
movsl
insb
bound
cli
mov
sbb
push
pop
cs
mov
mov
pop
mov
mov
mov
jnp
rcrb
inc
stos
jne
test
lahf
in
jae
push
fsub
and
test
inc
shll
lret
bnd
pop
jb
shlb
enter
ret
inc
shl
inc
clc
imull
rclb
sub
mov
call
push
mov
repnz
xor
js
mov
xor
push
clc
enter
aad
es
adcb
xchg
mov
mov
popa
repnz
pop
mov
cmp
xchg
lret
pop
ljmp
jno
mov
or
aad
adc
scas
mov
inc
insb
mov
mov
mov
push
jne
add
in
pushf
jp
test
mov
fstl
sub
adc
cmp
lods
inc
movsb
and
nop
in
mov
or
fs
add
and
out
or
pusha
pop
mov
jns
pop
insb
sbb
pop
push
inc
hlt
xor
sahf
mov
data16
pop
out
cmpsb
roll
movsb
jb
dec
dec
mov
jp
mov
dec
and
out
cld
dec
mov
cwtl
mov
push
jmp
mov
test
outsb
out
push
push
mov
cmpsl
sub
adc
call
sub
leave
push
aam
cmp
pop
xchg
inc
inc
mov
loope
nop
pop
or
cltd
jmp
stc
pop
sub
adc
pop
enter
mov
xor
pop
popf
jbe
stc
rorl
pop
jp
push
scas
sub
fmull
mov
sbb
pop
aaa
inc
adcl
or
inc
pop
pop
mov
int
or
jl
push
inc
aam
adc
adc
ss
sub
xchg
leave
push
nop
cmp
xchg
sbb
in
inc
cmp
adc
js
push
push
or
rcll
paddw
push
and
sti
int3
call
mov
push
cmc
insl
xchg
sbbl
loop
jmp
data16
cs
leave
push
cmpsl
fidivl
xor
inc
fistps
jge
cmp
pop
stos
lds
stc
push
and
push
shlb
aad
setp
in
addr16
adc
push
push
std
sahf
movsl
inc
in
fistps
leave
sti
lcall
repz
insl
cmp
loopne
jge
add
int3
jge
sbb
mov
lcall
jecxz
mov
cmpsl
shl
stc
icebp
fucomip
lret
inc
xchg
mov
mov
sbb
cmp
lret
jno
imulb
inc
pop
jle
adc
push
or
shrl
decb
cmp
es
xchg
lea
lds
shrl
test
int
jmp
xlat
push
icebp
cmp
sbb
stos
loope
test
dec
fs
ret
push
hlt
movsl
fdiv
pop
inc
and
and
mov
inc
ret
cmp
or
out
cltd
hlt
add
mov
test
xor
mov
lods
pop
rcrb
fyl2x
pop
ds
lahf
dec
lock
push
push
js
pop
das
jb
sub
mov
jo
adc
mov
add
pop
dec
cmp
shlb
jl
add
add
adc
lgs
push
mov
call
leave
mov
sahf
mov
mov
cmpsl
sub
and
cmp
js
push
pop
xor
mov
mov
xor
into
xor
repz
dec
ret
xor
mov
scas
dec
jns
pop
movsb
mov
push
pop
mov
addr16
inc
sbb
jnp
fsubrp
lcall
jne
aas
ljmp
outsb
sbb
sti
fwait
mov
movsl
addr16
cli
cmc
mov
je
xor
inc
pop
ljmp
inc
mov
insb
loope
stc
and
xor
add
mov
mov
in
mov
fstpl
dec
xor
mov
lcall
sbb
xchg
dec
fwait
int
dec
and
ret
pop
dec
and
mov
scas
repz
pop
xchg
outsl
jb
test
fiadds
js
jae
sbb
sub
mov
xchg
stc
sarb
adc
jp
cmpsl
mov
xchg
xchg
xchg
mov
shr
into
push
mov
pusha
inc
nop
pop
cmp
xor
adc
inc
fwait
repz
jno
rcl
aam
xlat
js
cmp
push
les
stos
test
rol
bound
out
enter
adcl
das
push
pusha
ja
out
aad
pop
pop
jns
insl
xor
jno
imul
cmp
mov
rorb
mov
fldl
jmp
cltd
lret
inc
jb
lods
ss
mov
icebp
jge
repnz
call
aas
adc
add
push
mov
mov
mov
jecxz
addr16
xor
shr
movsb
cmp
fisttpl
jp
or
add
outsb
pop
lods
in
xor
mov
mov
inc
xchg
xor
decl
lcall
int
repnz
mov
icebp
dec
cwtl
cmpsl
bound
mov
mov
pop
mov
xor
xorl
fnstsw
hlt
mov
and
add
repnz
ds
push
cwtl
add
pushf
into
jno
inc
push
mul
imul
lock
or
std
mov
xchg
repnz
inc
sti
movsl
out
adc
insl
pop
cmpsl
jecxz
in
jl
mov
jl
or
mov
push
ficomps
in
or
das
fimull
dec
data16
repnz
jl
aas
dec
inc
jmp
mov
out
xor
dec
les
in
and
mov
fcoml
movsb
js
mov
stos
stc
rcll
stos
into
and
xchg
mov
outsl
pop
pop
jmp
and
cmp
pop
and
sub
xchg
ret
sub
adc
jb
adc
cmp
mov
mov
mov
std
lret
loope
insb
sub
lcall
ja
inc
jecxz
pop
and
push
pop
imul
cld
sbb
pop
cmp
faddl
daa
testl
mov
dec
test
adc
stos
dec
cmp
sub
pop
push
pop
stos
cmp
mov
cli
push
cmc
fcom
inc
mov
cmp
ss
insl
cs
sub
popa
cmc
ja
mov
insl
and
mov
test
jbe
adc
dec
pop
jp
jp
mov
out
call
mov
bound
xchg
mov
push
inc
loop
fisubs
mov
sahf
xchg
int
xor
lea
xchg
dec
mov
cmp
rorl
test
loope
mov
or
fsubl
sub
leave
insb
jecxz
jns
mov
cli
fldpi
jmp
push
push
jl
add
and
dec
lret
pop
roll
fldenv
cli
or
mov
js
sbb
add
and
lods
popa
ljmp
and
cmp
jl
mov
push
in
loope
xchg
out
shlb
dec
cmpsb
mov
inc
push
add
loop
push
jne
das
loop
push
push
out
lock
inc
sub
or
shlb
inc
mov
pop
push
outsb
adc
pop
leave
pop
gs
adc
adc
and
out
xchg
inc
fbld
sub
sub
sti
gs
xchg
sbb
cli
jne
out
rorb
inc
ja
adc
push
nop
add
push
adc
mov
pop
mov
add
jne
push
mov
sbb
cmp
fs
fnstsw
out
add
dec
daa
popa
inc
pop
mov
xor
outsl
sbb
add
push
mov
loope
fs
inc
push
ds
ljmp
clc
mov
push
orl
xchg
outsl
sbb
in
das
or
mov
add
es
jne
test
cmp
dec
das
inc
and
add
sahf
add
cld
adc
pop
push
out
mov
cld
call
jns
dec
jl
out
xor
inc
shlb
mov
mov
rcll
addb
mov
mov
movsl
mov
adc
sbb
mov
popw
sbb
aad
scas
sub
test
insb
sub
sub
ret
in
mov
mov
mov
test
inc
stos
adc
out
lods
adc
or
std
dec
arpl
fsub
icebp
sub
int
rol
cltd
push
out
xlat
push
pop
in
in
inc
lods
ss
mov
test
nop
sbb
scas
inc
out
adc
dec
push
arpl
xor
incb
pushf
mov
xor
out
mov
and
or
pop
inc
adc
testb
inc
mov
fcomip
dec
rcrb
add
lcall
pop
shl
sbb
gs
sbb
fstl
out
push
sti
ret
push
out
loopne
shrb
decl
loope
rorb
xlat
adc
sub
pusha
mov
mov
mov
ret
rcll
jo
js
shrb
out
inc
inc
data16
mov
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
