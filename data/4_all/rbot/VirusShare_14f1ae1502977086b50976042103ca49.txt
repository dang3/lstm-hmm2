push
add
push
xor
in
push
mov
lea
jmp
jmp
sbb
pushl
or
inc
cmp
cmp
je
mov
push
call
pop
addr16
adc
xor
cld
jo,pt
jmp
nop
or
arpl
sbb
or
sbb
pop
pop
add
ret
mov
mov
adc
je
mov
push
mov
mov
and
in
cmp
ret
sahf
out
or
add
xor
cmovg
pop
rol
not
pop
push
ret
cmpsb
xor
aam
pusha
loop
lock
fcoml
sbb
call
pop
mov
xor
jmp
or
call
xor
push
mov
decl
call
add
sbb
je
dec
push
aaa
outsb
incl
mov
into
lahf
push
popf
mov
stos
jmp
pop
push
add
push
jae
adc
cmp
gs
movsb
adc
push
rorl
push
clc
shll
leave
lret
inc
lock
sbb
pop
fs
sbb
mov
xor
test
inc
mov
fsubrs
andb
data16
test
es
push
fists
push
and
adc
shlb
inc
je
mov
push
hlt
fisttps
inc
inc
adc
cmp
loope
test
inc
or
mov
jno
mov
jmp
enter
scas
jbe
or
adc
movsb
pop
bound
in
fisttpl
sbb
xchg
and
pushf
adc
xlat
test
add
jge
test
mov
add
pop
insb
mov
test
sub
mov
test
cld
pop
push
xor
and
cmp
cmp
int
movsb
mov
mov
cli
sbb
mov
pop
xchg
movsb
sub
pushf
sub
add
flds
aad
and
xor
push
cmp
je
push
test
push
or
sub
sbb
push
sbb
xchg
pusha
arpl
fcompl
cmp
int3
xchg
and
xchg
lods
inc
mov
mov
insb
mov
jge
push
sbb
push
jge
cmp
push
or
or
adc
inc
and
test
add
xchg
adc
jo
jecxz
cmp
jne
or
add
es
sub
test
sbb
inc
pusha
lods
shr
je
in
xchg
jae
fsubl
xor
sbb
xchg
daa
addb
pop
fdivs
dec
dec
mov
lods
int3
inc
inc
sub
adc
lret
les
xor
xor
sbb
or
cmp
in
mov
jge
mov
pop
pop
arpl
in
cld
fs
cmp
mov
adc
xlat
aam
inc
pusha
sbb
and
test
or
sbb
rorb
and
inc
call
jmp
xchg
sub
cwtl
movsb
push
sub
adc
js
mov
or
xor
or
xchg
fldl
lods
mov
sub
in
dec
and
or
sbb
adc
dec
sbb
test
add
in
jo
xor
aam
or
or
hlt
jno
sbb
xchg
sub
mov
xor
inc
pop
jnp
inc
inc
sub
mov
out
mov
xor
les
les
adc
and
sub
dec
into
repnz
cmp
and
sub
mov
out
xchg
adc
aad
nop
or
xor
or
mov
sub
adc
adc
cwtl
xor
dec
fildl
and
adc
cwtl
aas
rclb
add
push
push
sub
jno
xchg
sbb
test
and
and
mov
adc
out
movsl
add
sub
je
mov
lock
mov
or
xchg
mov
or
enter
xor
dec
inc
adc
call
hlt
daa
inc
clc
aam
fcomps
lock
xchg
and
xchg
dec
mov
gs
inc
rcrb
je
or
fs
ror
les
punpckhbw
sbb
js
stos
pushf
or
xchg
je
mov
jl
sub
jo
push
lock
mov
rcrb
inc
inc
or
adc
outsl
lahf
adc
add
lock
or
bound
stc
ret
or
xchg
and
nop
movsb
enter
dec
cmp
or
call
dec
and
fdivs
movsl
sbb
or
xchg
and
jns
pushf
inc
fs
mov
imul
js
push
add
and
xchg
jb
loopne
sub
lock
pusha
fs
iret
add
lods
sub
inc
sub
es
jno
inc
adc
dec
cli
roll
or
les
xor
inc
or
or
adcb
bound
mov
mov
inc
xor
inc
shlb
jbe
push
xor
adc
push
mov
lret
enter
inc
dec
cmp
inc
mov
in
push
xor
add
pop
in
rorl
cld
inc
sbb
push
mov
add
rorl
pop
and
adc
aam
test
add
adc
shll
cmp
cmp
lock
rorb
inc
arpl
icebp
or
push
enter
inc
mov
nop
adc
xor
fs
xchg
sbb
dec
and
rorl
enter
lret
inc
xor
pop
pop
dec
test
sbbl
inc
or
les
inc
or
daa
rclb
jbe
push
xor
adc
insb
sbb
or
sub
mov
inc
or
sub
movsl
adc
jae
sbb
lock
xor
mov
mov
sub
push
rorl
shlb
ja
adc
les
push
or
test
mov
push
inc
jge
dec
mov
xchg
je
or
push
mov
and
adc
mov
mov
sub
inc
inc
jb
sbb
and
and
mov
push
inc
dec
jo
dec
mov
rclb
aam
loopne
or
enter
shlb
inc
mov
fcoms
xor
aam
sub
adc
push
push
call
jl
xchg
pushf
call
mov
pop
add
rcrb
pop
ret
sub
popf
push
repz
or
or
idivb
xor
jge
pop
je
ljmp
sub
inc
ficoml
call
dec
adc
push
xchg
and
add
jo
mov
adc
int3
xchg
mov
adc
sbb
sbb
mov
ds
jno
and
cwtl
or
test
sub
mov
rcll
mov
in
cmp
mov
cmp
cmp
dec
xor
nop
sub
inc
cmp
mov
lock
mov
mov
fs
sub
les
enter
flds
sub
inc
pop
mov
fs
sub
pop
inc
pusha
jb
sbb
enter
sub
and
insb
loop
sbb
or
hlt
out
jb
cmp
mov
xor
es
faddl
cmp
adc
adc
adc
imul
fs
cld
je
bound
xor
adc
enter
cmp
lock
or
add
loope
arpl
mov
fistl
push
lea
loope
in
push
loop
insb
mov
int
cmp
ret
enter
sub
je
sub
xor
test
cltd
and
outsb
aad
das
add
js
add
fistl
popf
or
pop
arpl
clc
adc
scas
iret
cmc
out
loopne
lock
push
adc
shlb
or
cmp
lea
rcll
jne
cmp
jbe,pt
lea
test
adc
add
cmp
jb
jmp
and
xchg
adc
rol
adc
push
nop
lahf
xor
and
push
mov
daa
lret
adc
push
cmpsl
fadds
adc
mov
inc
jle
and
fwait
mov
cmp
lock
mov
repnz
nop
or
lock
push
dec
mov
pop
ffree
inc
dec
and
xor
clc
stc
add
push
jle
lea
push
shrl
call
ficomps
cmp
xlat
inc
les
or
pop
jmp
and
xchg
addr16
add
hlt
lret
loop
ret
add
adc
in
pop
sti
mov
testl
bound
jae
jbe
movl
mov
add
mov
test
fstl
add
testl
dec
and
pop
cltd
movsb
out
les
adc
test
inc
jmp
movsb
rclb
movsb
inc
jno
frstor
push
ret
cmpsl
data16
dec
xor
pop
ljmp
cmpl
cmp
sbb
sbb
mov
mov
sbbl
adc
and
mov
filds
sub
daa
adc
fs
adc
rcpps
add
inc
in
das
inc
call
pusha
lret
es
dec
roll
adcl
enter
inc
mov
xchg
xor
mov
inc
enter
pop
popf
push
push
xchg
sbb
orb
popa
mov
sub
jb
fnstsw
mov
inc
fs
jl
enter
inc
pushf
xor
je
adc
push
push
mov
xchg
in
jmp
mov
push
cmp
jne
push
dec
and
outsb
or
and
push
inc
clc
xchg
mov
push
mov
gs
xor
push
lcall
or
repnz
push
enter
mov
inc
inc
xchg
movl
data16
popf
insb
push
jl
push
mov
movb
jl,pn
outsl
dec
mull
int
adc
jmp
jp
push
push
in
test
aam
push
mov
jae
sub
test
push
push
jp
call
push
arpl
cmpl
jle
xor
add
call
getsec
push
push
mov
inc
adc
cmp
daa
je
out
and
sbb
mov
jl
sbb
or
xor
mov
add
cwtl
int3
add
adc
or
xor
lret
or
jae
mov
inc
lret
or
xor
inc
pop
xchg
mov
test
mov
clc
push
loopne
aas
fcomps
pop
adc
cmp
xor
jae
sbb
lds
push
hlt
in
or
lret
addl
push
dec
gs
xor
movsl
jle
add
inc
nop
adc
js
shll
xchg
sbb
in
xor
iret
std
jg
adc
inc
push
mov
movl
aas
mov
and
test
or
mov
mov
push
call
imulb
and
sub
dec
dec
jl
adc
bound
shrb
stos
xchg
sbb
sub
mov
xor
loop
jge
push
jl
pop
cmp
adc
call
mov
adc
jle
imulb
jmp
cmpl
xor
xchg
aam
es
jb
les
dec
xchg
sub
jmp
sahf
lea
mov
xor
cmp
inc
addb
push
es
mov
lea
movsl
xor
pusha
xor
loop,pt
dec
inc
popa
jl
xor
lods
pop
add
rcrb
std
repnz
push
clc
or
repz
mov
sbb
jbe
inc
inc
pop
adc
sbb
xor
lock
cltd
mov
clc
test
int3
imul
sbb
push
xchg
inc
lret
push
sub
pop
and
fwait
inc
sub
lods
push
ljmp
sbb
lret
rol
adc
test
iret
fs
mov
add
dec
arpl
push
enter
mov
xor
xchg
mov
leave
xchg
xchg
sbb
sbb
dec
ds
cmpsl
xor
mov
cmp
add
push
jmp
repnz
dec
pop
aam
xlat
int3
and
mov
pop
push
pop
test
bound
pop
jmp
xchg
data16
cmp
fldt
cmp
les
add
sbb
jne
sub
fs
sub
pop
in
orl
fnstenv
push
dec
ret
sbb
mov
shlb
adc
adc
enter
pop
dec
push
ret
imul
sub
iret
andb
pushf
fs
mov
jo
in
xchg
xchg
data16
inc
mov
sub
int
sub
pop
xor
nop
jecxz
mov
add
jle
mov
inc
pop
jno
xchg
push
push
loope
nop
rorb
sbb
inc
adc
push
aaa
call
sub
sub
repz
or
orl
fldt
dec
cli
xchg
inc
push
cmp
loopne
cltd
jmp
dec
inc
out
aam
cmp
xor
call
or
mov
lock
int
add
add
cmpsl
sbb
cmpsb
cld
cwtl
sbb
call
xor
pop
mov
mov
divl
fs
add
push
add
imul
mov
push
dec
and
push
lods
into
and
rclb
subl
imul
sbb
and
and
mov
inc
movsb
push
xor
hlt
inc
adc
and
repz
xor
mov
mov
call
mov
jo
sarb
mov
mov
leave
xchg
sbb
ror
dec
cltd
les
ret
pop
pop
lea
add
sub
add
pop
mov
movb
xchg
add
jns
mov
cmp
call
and
inc
daa
mov
push
cmpb
xlat
xor
lock
mov
popa
mov
cmp
inc
and
xor
push
push
aas
and
fistps
xchg
cmpsl
std
dec
ss
inc
push
mov
xor
jp
push
adc
push
jecxz
mov
mov
popa
mov
xor
mov
aaa
mov
scas
enter
add
cli
jg
sub
or
test
shll
mov
test
lret
dec
inc
push
sub
sti
pop
xor
cmp
jbe
cmp
mov
push
mov
xchg
sub
insb
subl
jb
adc
adc
jmp
stc
cmpl
ljmp
inc
sub
xchg
xchg
push
lea
inc
and
test
lea
in
test
insb
mov
adc
sub
add
push
je
xchg
sub
and
adc
pop
loope
sahf
mov
dec
adc
push
imul
xor
scas
shll
loope
xor
adc
push
test
jnp
push
addr16
or
dec
shrl
inc
cwtl
push
xchg
jmp
mov
jae
and
or
push
inc
loopne
test
mov
sbb
movsb
adc
int3
xchg
and
and
push
pop
jle
movb
push
inc
test
dec
int
stc
and
lahf
jbe
adc
pop
or
jne
add
sub
dec
push
mov
sbb
push
lea
lret
cli
les
xchg
jge
and
add
jbe
mov
add
add
add
mov
int
sbb
je
push
js
movsb
xchg
push
sub
clc
cltd
outsb
adc
jle
ja
mov
pop
xor
inc
imull
and
ret
test
or
loopne
push
and
dec
cwtl
cmp
pop
adc
test
adc
jne
sub
shlb
cmp
mov
or
cmp
and
mov
call
or
mov
push
cmpl
mov
daa
inc
dec
dec
enter
rcll
stc
pop
mov
lcall
es
pop
pop
mov
add
iret
inc
daa
xor
mov
imul
lret
sbb
fcoml
mov
bound
or
cmp
rclb
jp
adc
inc
mov
or
dec
sahf
sbb
push
gs
add
push
inc
popw
int3
inc
adcb
mov
add
add
mov
mov
add
jge
add
clc
sbb
pop
sahf
dec
cmp
test
jl
stos
daa
add
mov
mov
popf
rolb
adc
mov
je
xor
xchg
bound
inc
or
adc
mov
pop
adc
fdivs
pop
xor
xchg
xchg
push
sub
daa
inc
clc
mov
or
and
inc
sbb
sub
sbb
push
xchg
and
test
je
mov
push
adc
lea
or
int3
enter
add
je
dec
xor
cmpsl
ret
dec
pop
sbb
test
std
push
add
push
add
xchg
test
mov
int3
fcmovne
data16
ss
jne
dec
xor
push
mov
mov
xchg
pop
cwtl
lea
sub
adcb
fcomps
shr
add
xchg
mov
negl
outsb
dec
sti
ss
and
mov
adc
or
jg
cmp
je
sbb
test
fcompl
cmp
or
sbb
pushf
arpl
sbb
sti
cmp
test
sar
push
push
add
mov
out
cmp
enter
push
or
aas
or
cli
or
inc
add
out
in
je
sub
and
and
bound
lcall
dec
imul
cmpl
enter
dec
inc
sbb
shlb
cmp
dec
shl
lds
push
xor
or
shll
inc
mov
pushf
adc
mov
mov
xor
and
and
xor
xchg
aad
jne
xchg
mov
push
inc
jo
loope
adc
xchg
test
push
sub
movsb
or
or
lea
mov
cmp
dec
unpcklps
xchg
sbb
and
into
icebp
inc
mov
xor
jo
ja
fcoml
or
mov
and
and
and
aam
xor
or
mov
sub
jecxz
inc
call
adc
and
sub
mov
adc
daa
and
sub
mov
xorl
jae
mov
xchg
notb
add
lea
jo
and
loop
add
std
xor
addl
mov
sahf
sarb
cmp
pop
or
adc
stos
mov
sub
lods
jle
aaa
ja
and
inc
lret
pop
rolb
in
and
push
nop
inc
insb
test
xchg
aam
and
popf
cmp
jg
cmp
sub
scas
sbb
mov
inc
mov
cmp
mov
sbb
adc
in
addb
test
std
xor
xchg
adc
adc
ret
loop
push
imul
xor
jge
push
stos
rolb
cwtl
adc
push
adc
negl
call
pop
inc
xchg
imul
push
mov
mov
jmp
sbb
scas
adc
add
add
and
push
test
negb
adc
cmpb
or
jle
push
add
and
sbb
push
ljmp
jns
adc
std
mov
fwait
and
in
or
or
cli
test
xchg
adc
sub
aam
popf
subb
or
nop
push
cmp
rolb
mov
std
push
jmp
push
addl
sbb
mov
push
and
enter
adc
dec
mov
sub
stc
push
movsb
sub
jb
dec
das
test
or
call
test
jecxz
or
cmp
popa
add
add
xchg
adc
test
and
and
jmp
jno
and
jb
stos
sbb
mov
inc
sbb
stos
push
inc
shll
adc
or
inc
add
imul
aad
test
frstor
mov
sbb
lock
inc
pop
sub
xchg
and
fs
xor
adc
mov
inc
aam
fcoms
inc
and
enter
or
push
and
and
mov
cltd
pop
ficomps
test
jl
nop
leave
enter
je
inc
cmpsb
jecxz
push
push
ret
arpl
test
jl
inc
mov
js
xor
and
insb
mov
stc
sbb
pop
test
and
repz
inc
test
out
adc
lret
add
and
mov
sub
and
add
xchg
mov
pop
nop
js
out
mov
or
insb
sub
adc
dec
adc
test
sub
push
push
sbb
test
std
inc
mov
adc
inc
sbb
pop
adc
lods
adc
push
enter
stos
adc
sub
adc
lahf
enter
jne
add
sub
or
mov
mov
hlt
jne
push
imul
lods
lret
in
push
sbb
pop
push
lock
xchg
aaa
aas
and
pop
and
inc
fsubs
fadds
jg
int
push
and
mov
mov
add
adc
adc
mov
jg
and
xor
ja
mov
push
sub
push
sbb
mov
dec
xchg
js
and
jg
dec
sub
add
negl
sub
inc
test
mov
push
popa
dec
sub
inc
mov
push
insb
dec
sub
mov
sub
inc
lds
sub
and
popa
rclb
add
dec
or
aas
mov
adc
lock
push
loope
in
push
or
pop
push
lods
pop
rcrb
mov
sub
loop
push
dec
and
sub
pushf
adc
xchg
adc
and
dec
adc
inc
xchg
and
sbb
pop
adc
and
pop
ficompl
test
and
lds
xor
adc
and
mov
sbb
or
push
inc
push
and
shll
mov
or
test
and
xchg
mov
sbb
adc
adc
push
sub
hlt
adc
and
pop
leave
push
test
and
outsl
xor
in
push
jne
mov
jge
add
mov
jbe
lgs
mov
sub
and
iret
into
test
sbb
jnp
push
clc
and
mov
and
adc
dec
xor
adc
clc
inc
andb
push
and
adc
jl
pop
pop
in
jo
inc
inc
enter
and
push
inc
lahf
and
mov
sbb
pop
test
repnz
and
adc
push
mov
pop
out
dec
test
enter
and
inc
adc
cmp
inc
mov
cmp
je
and
adc
sub
pop
pop
in
and
inc
dec
enter
and
adc
and
or
jae
test
adc
mov
mov
push
inc
stos
adc
adc
int3
and
lock
call
pop
or
push
bound
xchg
adc
jns
mov
ret
clc
jne
inc
ljmp
dec
int3
or
add
mov
iret
sbb
add
pop
xchg
cmp
lods
adc
movsb
call
out
shlb
jl
and
les
daa
ret
scas
popa
xchg
adc
xor
ret
sub
sbb
es
clc
inc
js
add
sbb
das
pop
push
xor
sbb
sbb
in
adc
mov
aaa
mov
mov
mov
add
push
adc
xchg
flds
inc
or
test
int
add
and
xor
sbb
and
roll
sbb
repz
push
lods
or
and
or
clc
inc
adc
lock
in
mov
test
enter
and
and
pop
adc
mov
cld
aaa
test
ss
push
daa
jp
movsb
adc
lods
andb
jo
testl
inc
out
and
xor
inc
mov
mov
mov
jnp
inc
add
and
inc
push
mov
nop
sub
cmpsb
mov
lods
cmp
insb
adc
push
jmp
pusha
or
add
pop
or
inc
sub
dec
adc
je
xor
cmp
dec
push
ret
popa
shrl
add
or
ret
mov
push
lret
mov
pusha
loopne
addl
or
sbb
xor
ds
mov
push
mov
jo
orb
cltd
add
jge
add
cmp
xor
loopne
adc
stos
pop
push
lock
jmp
lea
cmpsl
sub
push
pop
xor
adc
dec
add
rcll
je
fs
outsl
das
inc
fadds
je
scas
fistl
scas
adc
inc
mov
sbb
mov
pop
shl
out
push
xor
lea
popf
inc
push
or
ror
xor
lahf
pop
call
popa
jae
cltd
scas
or
int3
sub
pusha
aas
push
divb
addl
and
and
dec
xor
adc
add
add
in
inc
les
insb
mov
scas
add
sti
mov
jle
cmp
insl
push
movb
ds
test
inc
das
shll
out
mov
iret
jl
faddp
dec
xor
not
repnz
enter
push
test
xor
pop
xchg
dec
push
fcompl
dec
in
pop
adc
mov
jbe
popa
push
mov
dec
or
das
clc
adc
push
inc
sbb
pop
or
mov
jno
nop
adc
adc
sbb
adc
mov
jns
xchg
arpl
and
mov
icebp
mov
in
sbb
add
ss
and
inc
es
subl
or
mov
jle
in
cmp
scas
push
stos
cmp
fnstenv
mov
jmp
mov
cld
adc
imul
dec
fwait
mov
test
jno
add
or
int3
out
test
dec
mov
cmp
rclb
xchg
daa
out
mov
out
sub
mov
loop
test
daa
imul
adcb
dec
cmpsl
jle
les
repz
movsb
stos
xor
adc
test
addr16
frstor
xor
sub
mov
or
inc
test
and
mov
negb
xchg
inc
scas
mov
negl
aas
enter
testb
inc
daa
cmpsb
insb
sahf
inc
test
sbb
or
sbb
mov
shrb
inc
idivb
test
sub
into
adc
test
insb
movb
lods
mull
lods
imull
test
add
jnp
mov
mov
ds
and
loope
shl
mov
pushf
mov
xor
push
call
push
jle
adc
push
and
sahf
xchg
mov
fcoms
dec
shlb
inc
mov
adc
mov
das
mov
and
repz
daa
shll
push
inc
mov
adc
jg
das
popa
pop
sarb
out
popf
pop
out
cmovs
mov
shr
pop
loopne
sahf
in
or
inc
mov
dec
dec
and
frstor
das
inc
gs
icebp
and
dec
rcrb
push
push
lea
mov
mov
lea
call
dec
sbb
push
dec
fdivl
xchg
or
subb
jmp
mov
push
cltd
sbb
sub
sete
es
and
xchg
aam
pop
adc
push
rcrb
sub
lods
lods
add
jno
int3
and
mov
cwtl
dec
lods
lods
mov
stc
dec
cmpsl
cmpsb
xchg
inc
cmp
push
mov
or
pop
pop
jne
in
pop
fisttpll
inc
or
inc
les
xchg
imul
clc
xor
dec
rolb
call
mov
or
pop
xor
je
mov
add
iret
arpl
and
loopne
mov
lds
jo
push
mov
add
sub
and
mov
fcompl
jl
addb
mov
fs
mov
and
repz
stos
push
xor
stos
jl
inc
loop
arpl
mov
mov
mov
xor
sbb
nop
out
pop
mov
in
dec
addl
rclb
xor
cwtl
bound
in
and
inc
inc
and
nop
inc
cmpsl
call
mov
cld
dec
loop
xchg
push
sbb
das
xor
or
xchg
cmp
or
jmp
sub
adc
outsl
pop
push
push
adcl
add
je
pop
push
sbb
rolb
push
jmp
out
int3
mov
adc
jecxz
jle
xchg
pop
cs
hlt
lods
xchg
mov
cmp
or
out
push
test
lret
lea
cmp
add
addb
mov
jmp
or
jp
mov
or
and
sub
out
lahf
xor
enter
test
inc
dec
or
pop
mov
aam
addb
sub
push
mov
cmp
andb
cmpl
iret
lret
and
stos
dec
xchg
pop
pop
movsl
xlat
or
pop
in
fidivrl
inc
adcb
cmp
jae
addl
add
call
cmp
cmp
clc
jl
mov
cmp
sub
popf
rorl
add
dec
jbe
push
push
pop
dec
bound
and
mov
mov
adc
push
jmp
adc
js
or
sub
cwtl
imul
xorl
call
sar
inc
repz
stos
and
lret
popf
sbb
inc
daa
xor
and
hlt
repz
jo
bound
xlat
xor
hlt
repz
sub
xchg
mov
or
insb
inc
popf
or
std
pop
mov
inc
jmp
test
or
inc
mov
fs
add
scas
jne
cmp
nop
xor
mov
sub
sub
mov
push
xchg
cwtl
inc
das
enter
push
add
ss
sbb
mov
xchg
movsl
adc
jmp
hlt
mov
xor
push
adc
push
mov
leave
sbb
cmp
push
dec
into
adc
call
nop
inc
pushf
jle
test
mov
nop
jmp
mov
adc
jns
cwtl
pop
mov
test
sbb
dec
push
bound
cmp
and
nop
clc
xchg
xor
push
add
adc
xchg
or
repnz
mov
repnz
insb
push
imul
sahf
or
pop
inc
push
adc
xchg
push
xlat
and
fwait
push
and
es
mov
repnz
and
dec
subl
xlat
jo
lcall
adc
insb
repz
sub
add
xchg
loop
or
jg
mov
mov
hlt
xor
test
dec
ds
aam
clc
mov
and
js
cmp
mov
loope
xor
sahf
enter
or
rorl
push
imul
push
pop
jmp
pop
pop
and
ficomps
mov
xor
outsb
imul
mov
or
sub
xor
js
sbb
pop
push
xchg
add
les
and
mov
pop
and
or
lahf
imul
push
mov
or
adc
and
push
lcall
add
pop
lcall
iret
jbe
pop
cli
xor
js
bound
adc
or
test
fidivl
sbb
icebp
and
shrl
adc
ficoms
insb
call
jmp
mov
fs
fisubs
mov
test
or
jno
add
pusha
cli
test
enter
dec
xor
outsb
int3
adc
outsb
push
cmpsl
fs
xor
aam
mov
jbe
adc
sbb
and
ljmp
xchg
and
add
cmc
push
movsb
inc
hlt
aaa
mov
or
call
push
mov
jne
mov
lods
xor
or
rol
out
lock
adc
add
cmc
or
mov
inc
push
aad
add
push
lea
cmp
fs
adc
mov
popa
je
cs
dec
nop
mov
fstl
sub
push
or
test
in
daa
and
lahf
xchg
in
mov
lahf
adc
xor
setns
mov
call
loop
add
test
fsubrl
inc
hlt
loope
or
mov
hlt
les
cmpsl
into
test
xchg
xor
jno
sbb
int3
orb
and
jnp
push
or
lahf
jl
cmp
jge
mov
push
and
lea
mov
add
lds
inc
xchg
mov
push
jmp
push
or
je
inc
aas
leave
and
fcompl
adc
and
loopne
jmp
loop
pusha
jmp
jmp
iret
xchg
lds
pop
loope
xor
push
scas
pop
and
xchg
xchg
mov
je
lcall
lea
stos
xor
std
cwtl
pop
notb
pop
mov
mov
mov
mov
adc
mov
sub
jo
xchg
jo
adc
rolb
cmp
test
adc
cmc
and
push
pop
sbb
dec
scas
call
push
dec
adc
push
adc
add
call
cs
nop
fdiv
push
mov
dec
cmpsl
dec
fimuls
adc
adc
and
jmp
and
add
cmp
ret
adc
and
jmp
and
sub
xchg
inc
push
adc
cmp
or
cmp
inc
ljmp
and
jge
mov
adc
sub
stc
xchg
and
add
std
test
ljmp
push
mov
xchg
sub
rorb
inc
sub
imul
sbb
and
inc
push
mov
jecxz
lock
jo
mov
dec
xchg
and
push
mov
cmp
je
insb
loop
sbb
lods
push
aas
flds
stc
pop
pop
push
js
sub
leave
cld
jge
add
push
incb
and
lods
scas
sbb
xchg
add
pop
add
pop
mov
in
aad
push
push
push
pop
cmp
lea
test
or
subb
sub
pop
xchg
repnz
iret
pop
repnz
test
test
inc
pop
and
pop
mov
mov
pop
mov
repnz
mov
and
fs
scas
nop
push
and
mov
sbb
adc
adc
js
dec
test
sub
scas
mov
movsb
dec
aas
push
jns
or
test
adc
xchg
mov
xchg
out
dec
nop
mov
sbb
jbe
pop
es
inc
inc
enter
and
or
bound
pushf
addr16
adc
push
stos
fst
scas
orl
xadd
stc
les
adc
inc
dec
adc
lcall
sub
jne
lods
dec
adc
cmp
dec
jns
clc
mov
push
inc
rclb
jmp
cmp
out
loope
xchg
cltd
stc
inc
mov
arpl
add
xor
cmp
jl
cmpsl
shlb
push
dec
xchg
and
enter
lea
mov
nop
ja
test
rolb
xchg
data16
in
and
push
lret
jns
sbb
les
sbb
xchg
sub
and
enter
adc
out
and
subb
out
jae
dec
orb
adc
dec
test
sub
cmp
or
xor
bswap
jae
adc
nop
push
sti
pop
and
movhlps
dec
sub
cld
inc
add
inc
mov
jne
inc
cwtl
out
push
push
inc
repz
adc
mov
mov
clc
and
mov
out
or
dec
enter
jo
push
inc
or
jbe
sub
lret
and
cmp
cmp
and
dec
cmp
mov
lock
in
mov
inc
mov
sub
push
mov
inc
mov
xchg
push
adc
unpckhps
dec
in
test
mov
jns
sbb
in
fadds
push
mov
dec
pusha
push
push
les
movsl
and
inc
outsl
cmp
push
testl
repnz
shl
pop
aaa
mov
inc
and
les
adc
popa
out
mov
mov
dec
xchg
push
push
adc
xchg
and
cs
adc
jecxz
lods
mov
repnz
inc
sti
mov
and
in
jb
xchg
js
fildl
and
je
xchg
mov
cmp
inc
xchg
cmp
xchg
imul
mov
dec
jg,pt
cld
add
jl
popf
jbe
push
mov
adc
lret
lods
aas
dec
jp
push
lods
sbb
cmp
add
cmp
stc
inc
movsb
sbb
aas
aas
pop
loope
push
sub
jmp
jo
push
aas
mov
adc
inc
sub
adc
sub
sub
sub
xchg
adc
sub
enter
or
sbb
adc
lret
cmp
les
and
adc
inc
or
sbb
cmp
or
rclb
inc
pop
adc
add
out
mov
test
enter
and
push
inc
mov
call
sbb
or
faddl
dec
xchg
mov
or
fadds
cmp
aam
inc
inc
enter
and
push
inc
fs
adc
and
push
inc
or
mov
xchg
cmp
xorl
and
nop
test
mov
sbb
jo
pop
lahf
test
or
mov
push
adc
adc
aaa
mov
xchg
and
shll
adc
ja
inc
and
xor
or
inc
sbb
js
testl
fs
aaa
sbb
cld
inc
xor
adc
or
jno
mov
pop
adc
fmuls
pop
inc
pop
mul
cmp
and
adc
inc
or
inc
push
ret
cmc
ret
sbb
aam
inc
pop
jne
or
insb
fs
test
xor
push
mov
adc
test
mov
cld
inc
push
or
test
nop
and
xchg
inc
mul
adc
out
mov
inc
pop
test
out
outsb
adc
add
roll
mov
stos
rol
les
push
and
push
inc
inc
imul
or
pop
add
fistl
and
mov
xchg
clc
fldenv
fmuls
inc
and
out
loop
lock
jnp
test
test
loopne
bound
and
or
xorl
pusha
inc
lock
out
xor
bound
adc
mov
inc
add
movups
test
add
inc
dec
inc
inc
mov
inc
aad
jno
pop
cmp
lock
jae
fsubr
and
inc
dec
push
xor
and
inc
cmc
or
inc
orb
xchg
hlt
out
inc
in
dec
jmp
adc
scas
cltd
add
push
jmp
jmp
cmpsl
aad
pushf
xor
imul
inc
xor
mov
insb
arpl
je
and
push
add
sub
hlt
adcb
and
xor
adc
inc
mov
incl
sub
xchg
cmpsl
cld
das
inc
mov
int3
push
adc
ret
jne
mov
repnz
jmp
imul
psubb
sbb
pusha
sbbb
test
roll
pop
jg
and
jns
mov
dec
repnz
inc
test
xchg
pop
xor
ds
mov
iret
push
and
inc
aam
sbb
lods
sub
ret
stos
addl
out
xor
inc
adc
or
inc
out
or
mov
sahf
pop
pop
or
xchg
jns
adcl
ja
mov
push
jecxz
pop
dec
dec
subb
dec
loop
shrb
movsb
adc
mov
daa
push
in
push
test
mov
add
cld
dec
adc
test
call
pop
subl
in
adc
or
or
add
loopne
inc
mov
push
jmp
adc
sbb
sbb
jbe
insl
push
fidivs
jne
test
rclb
es
pop
mov
or
lock
sub
sbb
jg
test
les
xchg
sbb
and
push
loop
idivb
jle
orb
sbbl
sbb
push
xchg
jmp
sub
push
xchg
push
iret
jl
or
decb
push
and
lds
test
jmp
les
xlat
adc
inc
cmp
inc
jb
ds
and
sbb
mov
scas
dec
cmp
jecxz
cmp
lcall
xor
add
mov
out
sub
push
adc
sbb
test
cld
std
inc
enter
call
and
sub
mov
dec
sub
fwait
outsb
mov
pop
lock
or
outsb
nop
in
insl
pop
push
sbb
test
ljmp
fcoms
aas
or
mov
pop
ja
push
shrb
adc
int3
add
cli
jge
xlat
mov
and
fs
ja
inc
int3
sub
mov
pop
lock
sub
pop
fs
xchg
inc
push
and
cmp
movsl
and
pop
mov
test
enter
and
and
and
nop
popf
adc
cmp
fisubs
iret
mov
cmp
or
sub
inc
and
je
mov
jae
mov
and
xor
pusha
adc
and
pop
mov
pop
cmc
and
inc
jb
adc
adc
jnp
xchg
push
sbb
arpl
scas
pop
inc
subb
cs
mov
cmp
pop
movsb
sub
mov
and
sub
jbe
xchg
jg
and
pop
sub
mov
and
adc
adc
xor
inc
sbb
or
inc
enter
andl
add
icebp
jp
and
sbb
inc
sub
pop
xchg
mov
hlt
cld
dec
ret
pop
mov
mov
and
xchg
or
pop
nop
rorb
test
decb
and
adc
mov
jg
andb
push
and
movsb
mov
test
inc
xor
int
cmpsl
mov
xor
testb
jne
sub
pop
clc
pop
adc
mov
mov
sahf
cmp
sahf
sbb
and
sbb
stos
outsb
pop
cmp
inc
pop
dec
mov
les
into
xor
es
adc
jp
sbb
arpl
dec
mov
cmp
adc
test
lret
and
adc
daa
adc
xor
xchg
lret
cmp
pop
fisubl
cmp
int3
icebp
cmc
push
push
mov
aam
xor
movsl
cmp
pop
dec
and
adc
sbb
js
adc
jg
mov
ljmp
adc
faddl
push
aas
pop
cmp
sbb
ficoms
jb
cld
and
adc
addr16
clc
sti
xchg
pop
pop
enter
and
and
adc
call
jb
adc
or
fcoms
sahf
and
cld
ja
rcrl
inc
in
mov
into
or
mov
lods
cmp
mov
xchg
and
sbb
dec
orb
inc
and
inc
dec
les
or
xor
nop
inc
push
sub
inc
or
mov
pop
mov
cmp
test
push
bound
or
les
lods
sbb
test
les
bound
or
arpl
es
inc
pop
and
push
enter
sub
inc
add
dec
adc
mov
add
inc
test
enter
and
adc
xchg
repz
sbbl
shll
xor
mov
test
fdivl
sarb
adc
pop
mov
sub
mov
and
mov
pop
test
pushl
push
mov
adc
pop
xchg
lock
inc
push
stc
dec
mov
cmpsl
pop
xchg
out
lods
repnz
push
sub
push
and
adc
pop
xor
ds
cmp
push
mov
fs
and
push
jbe
mov
mov
pushf
adc
sub
mov
sub
mov
jecxz
mov
or
xor
adc
icebp
mov
jmp
ret
and
mov
adc
push
shll
mov
mov
in
sbb
jl
pop
inc
mov
out
fs
inc
jmp
ljmp
sbb
add
sbb
jbe
shll
je
bound
mov
mov
test
jmp
and
int
cmp
pop
jle
ja
mov
push
sbb
ljmp
lds
inc
push
outsb
xchg
scas
cmp
orb
xor
pop
sub
inc
enter
dec
mov
sub
loopne
sub
push
popf
and
clc
bound
mov
push
sbb
es
dec
xor
inc
and
insb
sub
jo
adc
xorl
inc
ret
adc
enter
jp
cmp
and
cli
daa
mov
fs
add
adc
stc
xor
test
cs
movsl
push
sbb
lea
stc
mov
stos
lods
jl
mov
test
push
sub
mov
aas
xchg
pop
push
xchg
push
jbe
dec
outsb
pop
cltd
ss
pop
in
dec
push
and
cwtl
mov
test
inc
pushf
cmp
xchg
sub
nop
in
push
int3
sub
jge
mov
inc
outsb
mov
or
xor
movsb
out
sub
outsb
mov
dec
mov
and
out
inc
shrl
outsl
icebp
dec
add
xor
subl
jmp
adc
lcall
sbb
or
out
mov
addr16
xor
dec
adc
inc
popa
jge
enter
call
bound
inc
adc
lea
lret
mov
xchg
jl
dec
xor
xlat
mov
mov
or
push
xorl
jl
call
push
clc
out
xchg
xor
out
and
lcall
push
add
pop
push
add
push
stos
ret
xor
icebp
xchg
mov
les
aas
sub
xor
xor
jp
add
add
imul
cmp
iret
cmp
test
cmp
hlt
jb
test
sbb
mov
inc
sub
cld
bndldx
add
aad
pop
or
inc
aam
icebp
sub
mov
dec
mov
icebp
adc
push
push
jge
mov
dec
loop
inc
insb
lds
dec
sahf
sub
repnz
and
mov
ret
aam
mov
scas
or
sub
cmp
dec
or
or
jle
bound
test
cwtl
and
imul
sub
adc
test
fldenv
mull
subl
mov
ds
jl
pop
push
orl
fisubl
outsl
sbb
or
scas
jl
push
ret
or
mov
call
jmp
mov
es
rolb
push
cs
cmpsl
adc
cwtl
mov
xchg
jb
add
inc
das
mov
and
aaa
enter
adc
gs
and
xor
push
mov
inc
adc
xchg
nop
imul
sub
add
push
call
and
xor
call
cld
sub
inc
in
add
jmp
mov
dec
mov
mov
fucomip
push
cmpsl
mov
test
jno
mov
test
pop
add
gs
push
jmp
mov
jae
push
pop
or
cmp
cmp
jbe
ret
push
lea
pop
ss
test
test
adc
orl
lcall
imul
daa
and
es
sub
in
stc
or
lock
mov
pop
es
cmpsl
inc
push
or
cmpb
stos
sub
or
imul
adc
imul
or
mov
sbb
aad
fs
dec
and
sub
adc
xchg
xor
jle
inc
inc
pushf
and
std
dec
pop
leave
jo
adc
enter
std
test
ficompl
and
adc
je
sub
sub
push
pusha
stc
lret
mov
sti
sbb
inc
jb
shrl
orb
lahf
sub
sti
mov
negl
movsb
repz
js
push
sub
xchg
push
daa
mov
sub
sbb
jns
sub
sub
jb
mov
ds
jne
add
fistpll
fldt
enter
aaa
cmp
inc
cmp
stos
xchg
inc
cld
adc
popl
jl
mov
sbb
sbb
les
sti
idivb
mov
jno
movsb
mov
adc
and
lods
cld
lds
jg
call
or
adc
sbb
inc
cli
push
std
sub
pushf
sub
lret
and
sub
repz
xchg
stos
fs
mov
xor
test
push
and
mov
and
add
and
test
or
sti
push
js
xchg
xor
inc
or
aaa
sbb
jmp
mov
inc
lds
jp
jbe
pusha
pop
cmp
popa
sub
mov
xor
das
pop
add
or
add
push
xor
in
push
and
mov
push
jno
or
loopne
gs
jl
dec
stos
loop
fisttpll
ljmp
lea
in
and
dec
pushf
jg
mov
adc
mov
cmpb
mulb
xchg
sub
push
add
sub
sub
mov
gs
clc
std
inc
sub
mov
adc
sub
adc
cmp
ret
pop
mov
cmc
push
adc
xchg
push
mov
test
sbb
rcrl
lods
inc
sbb
adc
gs
inc
cmpb
cmpsl
fs
enter
stc
mov
dec
std
adc
inc
sub
push
es
les
fdiv
or
in
or
inc
and
je
inc
fs
js
or
push
nop
insb
xchg
insb
jmp
arpl
xchg
push
test
sarl
jg
adc
or
inc
ret
shrl
jo
int3
jmp
lods
cli
mov
arpl
lock
out
push
cmp
sbb
call
dec
dec
mov
mov
push
sub
test
imul
xchg
jle
jno
dec
stc
int
bound
cmp
js
test
push
inc
movups
mov
inc
roll
push
ds
sub
mov
xlat
add
adc
popf
sub
fsub
pop
mov
stos
rcll
movsl
push
rolb
adc
bswap
pop
xchg
cmp
dec
pop
jb
inc
cmp
xchg
xchg
in
arpl
cmpsb
sbb
nop
sub
les
and
or
repz
inc
fcomp
scas
inc
repz
cld
or
jbe
push
push
les
cli
and
fcoms
movsb
aad
ret
sub
hlt
sbb
dec
fmuls
pop
add
jmp
xor
frstor
gs
push
leave
js
mov
bound
gs
ds
test
movl
and
and
and
movl
xor
fiaddl
rorb
lret
aam
out
cmp
pop
add
mov
popa
les
iret
jb
xchg
adc
inc
popa
les
cmp
sti
push
adc
and
enter
add
sbb
inc
rolb
sbb
cmp
mov
lea
inc
shlb
or
mov
leave
adc
ret
vmptrst
cmp
sbb
in
daa
push
and
adc
and
clc
adc
cmpsl
fdivs
rorl
pop
cmp
mov
mov
xchg
into
inc
mov
cmpsl
push
repz
les
scas
lret
fs
lahf
dec
add
jmp
or
jmp
inc
adc
sub
push
in
dec
int
leave
pop
and
aam
or
out
push
icebp
cmpsb
das
call
jmp
inc
enter
inc
xlat
pop
mov
xor
call
xor
push
sbb
inc
int
pop
sub
pop
mov
and
test
sub
call
repz
test
or
mov
popa
jb
loope
fndisi(8087
ds
mov
fildll
mov
inc
loope
mov
adc
mov
loope
dec
rclb
or
cmp
adc
inc
cmp
loope
mov
xor
imul
xor
fsubl
loopne
and
inc
dec
loope
shrl
fs
das
mov
loop
pop
call
mov
pop
push
jmp
js
sub
mov
mov
fldcw
inc
push
insl
mov
cmp
cmp
call
hlt
je
push
fcmovnb
call
pop
bound
mov
pop
daa
mov
inc
les
mov
jnp
les
mov
cmp
mov
sub
pop
adc
pop
loop
add
sbb
das
or
adc
inc
idivb
xchg
insl
aam
or
sbb
es
or
shll
mov
imull
pop
mov
dec
mov
adc
xor
fldl
inc
and
inc
cmp
jne
loope
add
add
call
inc
daa
popa
jmp
jecxz
mov
xchg
sbb
bound
in
push
icebp
jnp
scas
inc
movsl
dec
test
cmp
pop
aam
or
sahf
call
dec
cmp
xchg
data16
xchg
mov
xor
rcr
mov
gs
or
ficompl
ss
adc
sub
add
popa
cmpsl
popf
fsubs
bound
js
inc
adcb
pop
lret
outsl
adc
sub
in
test
and
imul
fcmove
call
xor
mov
add
sbb
bound
rcr
push
dec
pushf
sub
rcr
mov
dec
out
mov
lds
push
fcoml
adc
xchg
sbbb
int3
pushf
lock
std
bound
cltd
jp
cmp
xor
daa
movsb
pop
pop
dec
jle
inc
imul
es
inc
xcrypt-cfb
cmpsl
daa
imul
push
mov
inc
fcomi
fmull
subb
jmp
adc
mov
adc
pop
jae
popf
or
dec
lahf
out
adc
pop
pop
mov
mov
mov
repnz
pop
adc
shlb
int3
test
cld
vaddss
cmp
jle
rcll
add
xchg
ja
jp
jnp
sbb
and
fwait
mov
pop
pusha
adcl
dec
cmpsb
and
push
mov
sub
and
int
int3
mov
cltd
sahf
cs
and
inc
filds
sbb
aaa
cmp
int3
ficoml
loop
fdivrl
and
mov
sbb
adc
inc
adc
fmuls
pop
push
push
and
and
pop
mov
push
mov
xchg
fidivs
or
push
inc
inc
test
out
mov
bnd
mov
push
jmp
sbb
adc
into
fmuls
mov
push
fwait
outsb
lods
inc
push
push
or
lret
sbb
xchg
sub
jp
push
stos
dec
adc
jb
jmp
imul
adc
xchg
pop
push
mov
mov
cmpsb
push
dec
mov
push
lret
mov
pop
gs
sub
push
push
out
ret
sbb
or
lock
mov
cmpsb
bound
mov
xchg
and
push
xchg
cmp
mov
test
cmp
and
jno
push
inc
and
jae
jb
dec
adc
lds
sub
mov
push
sub
inc
inc
enter
insb
enter
jns
dec
adc
mov
inc
outsb
push
xchg
inc
xor
scas
test
pop
cmp
lock
pop
jmp
insl
inc
push
test
cmpsb
cmp
mov
popf
add
mov
push
ds
and
jnp
fidivl
push
add
rolb
movsl
mov
fmuls
mov
push
mov
and
cmp
inc
out
stc
push
add
mov
in
push
lds
dec
or
ds
repz
jb
test
imul
enter
and
jp
or
insb
gs
out
daa
test
dec
lds
cmpsb
adc
out
test
pushl
sbb
lods
pop
icebp
mov
dec
sbb
xor
call
cmpsl
out
push
pop
je
push
push
jne
mov
inc
and
push
pop
and
xorb
cltd
push
or
incl
or
add
push
dec
mov
sti
sub
adc
and
outsl
cmp
push
add
and
jmp
lods
dec
fcoms
push
mov
daa
dec
fld
inc
je
popa
repnz
and
clc
add
ret
jne
push
inc
mov
or
and
or
xchg
ficoms
data16
subb
mov
rorb
push
stos
lcall
xor
jl
inc
mov
dec
push
insl
xor
push
in
ja
mov
adc
insb
aaa
inc
outsb
das
push
sbb
jl
lret
xor
lea
and
popf
movlps
rcll
aaa
cmp
xor
popf
test
in
or
push
cmpb
adc
mov
xor
cli
xor
lods
in
dec
repz
jne
xor
lret
xor
aam
xor
adc
mov
je
test
out
insb
mov
jecxz
mov
and
popa
outsl
push
loopne
lahf
pop
push
xchg
arpl
mov
js
fs
pop
loopne
out
or
mov
push
adc
jmp
sub
jmp
jmp
mov
pop
mov
or
insb
pop
dec
je
pop
mov
xor
cli
pushf
and
das
dec
push
dec
pusha
mov
xchg
ret
insb
out
sub
mov
mov
ret
and
jmp
jns
inc
adc
leave
cmp
aam
outsl
sub
frstor
sub
fcoms
xor
push
and
pop
lds
xor
jnp
fdivrl
pop
and
mov
or
test
push
mov
sub
insb
xor
ja
push
sbb
dec
dec
jmp
imul
out
cwtl
in
popf
push
sbb
clc
fimull
jnp
inc
mov
xor
cmpsl
enter
mov
adc
dec
xchg
call
ds
jns
lahf
fldpi
push
fdivrl
sbb
mov
mov
test
fcmovb
call
ret
and
mov
and
push
lret
jle
mov
xchg
test
and
mov
aaa
add
insb
pop
loop
lahf
rorb
jnp
loope
jp
jo
sub
stos
and
ljmp
test
push
push
dec
ja
and
and
dec
jnp
or
adc
loop
xor
xor
cltd
sbb
rorl
sbb
jecxz
cmp
jns
xchg
or
mov
push
and
adc
and
mov
sub
add
negb
inc
les
cmp
lret
test
or
fsubr
and
insb
mov
cwtl
fldcw
iret
pop
test
push
xor
lcall
sub
es
dec
hlt
mov
dec
xor
mov
push
lea
loope
popf
int3
adc
xor
xor
mov
dec
jns
es
cmp
adc
out
push
outsl
pusha
inc
jmp
push
icebp
xchg
xchg
jg
rcrl
dec
jbe
sahf
sub
arpl
cmpb
scas
sub
popf
clc
inc
call
aam
or
push
add
mov
mov
fs
and
mov
adc
lret
popa
cmp
sbb
or
repz
push
sub
push
adc
add
out
test
sbb
cwtl
nop
xor
call
mov
fcomi
dec
mov
dec
cltd
les
adc
add
lods
xor
xchg
mov
cmp
mov
pop
loope
cwtl
inc
sbb
pop
dec
sub
mov
dec
xchg
pop
test
pop
xor
dec
jae
pop
push
mov
or
out
cmpsb
or
fnsave
push
test
jo
jmp
insb
das
mov
xlat
test
add
dec
enter
or
push
clc
cmc
mov
test
mov
filds
sahf
shll
jmp
sbbb
adc
jo
cwtl
jmp
add
in
enter
pop
gs
jle
out
jmp
cmpsb
bound
test
jp
lret
movsb
and
repz
stos
mov
andb
hlt
cmp
mov
add
lods
inc
das
sub
sbb
adc
dec
mov
add
test
add
addr16
loopne
inc
sbbl
cmpsb
loope
xlat
cmc
sub
xor
je
fs
sti
adc
sub
arpl
xor
aad
in
mov
stos
and
data16
add
loop
fs
push
stos
das
js
test
dec
sbb
call
inc
push
xor
repz
xchg
in
scas
mov
aaa
fadd
movsb
dec
out
adc
push
xchg
push
fwait
loope
out
or
out
mov
push
jge
testb
xor
iret
xchg
movsl
push
sub
mov
add
add
or
sub
jge
jb
loope
mov
arpl
adc
xchg
pushl
lds
ret
mov
popf
jno
jo
jmp
ljmp
int3
xor
sarb
push
jb
mov
push
lock
arpl
push
sbb
imul
jg
addr16
xchg
or
bound
xchg
pushf
fmul
inc
loope
dec
adc
push
bound
jl
mov
jmp
cmp
fimuls
jge
fmuls
mov
xchg
js
jp
jns
push
push
int3
dec
inc
inc
push
notb
cmp
addr16
or
push
dec
daa
adc
mov
adc
pop
ret
insb
mov
push
pop
test
inc
bound
push
and
dec
js
inc
test
push
sub
into
imul
cmp
add
jle
incl
xor
call
imul
pop
inc
cmp
jl
mulb
rcrb
ret
scas
and
pop
mov
add
lea
adc
mov
lsl
push
xchg
mov
mov
xchg
sub
outsl
jb
push
or
test
inc
dec
push
jle
cltd
pop
push
mov
mov
sbb
and
inc
jns
ficomps
xchg
and
add
stos
and
xor
shrb
push
pop
adc
add
jl
adc
mov
jl
add
mov
popl
iret
arpl
clc
mov
pop
daa
inc
or
mov
mov
jne
mov
push
add
fs
in
and
xor
nop
and
mov
movl
xchg
fsub
push
jp
in
push
or
mov
test
inc
inc
icebp
lea
jg
sbb
aas
repnz
pushf
add
es
pop
iret
lock
fdivrp
ljmp
or
push
out
repnz
push
mov
in
xor
insl
aas
mov
ret
or
or
and
jbe
outsb
and
dec
adcb
jle
dec
insb
mov
sbb
xchg
and
cmpl
sti
sbb
lea
mov
neg
pop
aas
movsb
lret
push
mov
cmp
mov
fnstsw
adc
cmpsl
js
jb
cmp
xchg
jge
stos
aam
or
and
pop
ret
mov
or
add
sarb
adc
xorb
pop
pop
adc
rorl
pop
sub
sub
leave
jg
xor
jnp
pop
fdivrp
inc
pop
or
lea
adc
inc
ret
or
test
inc
pop
push
sub
xor
adc
or
adc
pop
fsubs
mov
xor
mov
loope
dec
adc
inc
adc
idivl
xor
lods
and
sbb
inc
dec
adc
and
movsb
and
push
sub
adc
out
cwtl
test
cmpsb
sti
dec
sti
cli
dec
jmp
dec
mov
enter
inc
mov
adc
call
ja
cmp
inc
jmp
push
cwtl
xor
mov
xchg
lods
pop
pusha
loope
ret
inc
pop
jnp
mov
sub
loopne
cmp
pop
and
pop
sbbl
outsb
mov
adc
loopne
out
adc
jae
adc
cmp
je
or
inc
or
pop
shlb
inc
mov
sub
xor
jbe
mov
shr
addr16
or
dec
mov
pop
or
adc
aad
inc
les
jg
mov
xchg
leave
in
add
test
jbe
mov
cmp
ret
xchg
or
or
inc
ds
or
lret
fmuls
add
adc
pop
or
insb
cmp
or
bound
and
inc
sbb
data16
push
and
test
sub
cmp
jbe
xor
mov
push
cmp
lret
mov
adc
repnz
mov
sub
jle
inc
cmpb
add
add
cmp
out
jmp
nop
dec
dec
imul
pop
shll
adc
sub
mov
in
sbb
andl
adc
inc
cwtl
xor
incl
adc
pop
jne
jae
and
es
add
movsl
loopne
dec
sbbb
ljmp
es
bound
sub
in
les
popf
sbb
jge
or
lahf
call
dec
or
jge
loop
inc
fistpll
mov
sub
adc
pusha
movsb
and
inc
das
jl
pop
int
or
inc
adc
dec
mov
and
dec
sbb
push
push
nop
and
in
or
ss
adc
xor
push
mov
out
add
pop
je
inc
mov
sahf
or
cwtl
pop
call
mov
xorl
bnd
lea
sub
adc
lds
pop
mov
call
popa
ret
cmpsl
mov
mov
cmp
or
pop
cld
mov
pusha
sbb
jne
sbb
ds
xchg
xlat
ffreep
push
andb
dec
add
bound
adc
add
dec
iret
test
mov
or
cmp
andl
stc
or
shrb
cmp
or
pop
and
xor
or
insl
pusha
and
inc
sbb
movsl
dec
adc
mov
cmp
mov
sbb
cmp
sbb
mov
push
sub
pop
push
pop
in
pushf
cmp
add
xchg
les
mov
or
nop
or
adc
sbb
jg
mov
nop
nop
lret
nop
lds
mov
fucom
bound
or
mov
push
add
stc
sub
sub
or
sbb
and
pop
aas
mov
sub
or
mov
arpl
jmp
inc
sub
adc
dec
repz
mov
mov
or
and
mov
push
dec
adc
xlat
or
add
movsb
or
xchg
or
in
shl
and
clc
inc
cmpb
inc
scas
jne
inc
jge
repnz
sbb
cmp
jecxz
sbb
add
lea
mov
cwtl
push
cmp
add
cmp
je
cmp
push
cmp
mov
sbb
adc
fdivrs
adc
jl
mov
jne
les
add
gs
sub
stos
lcall
enter
stc
cmp
mov
setae
je
push
and
stos
repz
adc
push
add
orb
inc
aam
jne
pop
adc
cmp
jb
cmp
aas
loop
mov
push
repnz
and
mov
cmp
jne
jecxz
in
xor
sbb
and
or
add
jb
insb
aaa
cmp
cmp
push
arpl
or
mov
or
ljmp
call
xchg
add
push
cmp
jo
movsl
or
insb
movsb
cli
push
ja
loop
push
sub
inc
arpl
ret
cmp
push
mov
mov
push
mov
add
fcom
sbb
cltd
in
sub
xor
fsubrp
push
fsts
sbb
movb
clc
nop
rcrb
or
sub
mov
repz
push
xorb
add
loope
lds
pop
into
xorb
outsl
insb
enter
or
lea
call
and
mov
inc
and
dec
cmpb
adc
jo
roll
shl
push
sub
push
ret
and
xor
aaa
push
enter
or
test
orl
or
fdivrp
dec
or
or
inc
xchg
mov
mov
and
xchg
inc
aam
inc
lock
push
sti
dec
inc
xchg
sub
aad
adc
mov
adc
mov
inc
int3
and
js
inc
scas
adc
push
shll
adc
xor
pop
cmp
add
dec
je
add
mov
and
mov
and
jno
sbb
shrl
fistpll
xchg
dec
push
mov
and
in
xor
clc
sbb
nop
pop
das
jae
push
jne
dec
inc
or
push
jo
popa
sub
dec
adc
push
jo
in
es
mov
cwtl
dec
iret
movsl
mov
aaa
fnstenv
movsb
adc
sbb
adc
mov
pop
mov
xchg
push
and
xchg
add
pop
mov
adc
xchg
les
push
inc
adc
sbb
push
das
push
mov
or
mov
ss
and
and
out
sub
add
xor
add
inc
lea
cmp
repnz
cltd
inc
xchg
cld
mov
xor
or
xorl
scas
jne
sbb
pop
jmp
dec
int3
mov
or
icebp
ja
leave
sub
fwait
jp
push
xor
nop
test
stos
sub
outsl
adc
add
cmpsb
push
inc
insb
pop
cld
xor
mov
les
into
sbb
loop
add
addb
movb
loopne
inc
cmp
and
pop
cltd
lret
aas
gs
movsb
or
dec
arpl
push
push
mov
mov
in
mov
lahf
cmp
mov
sub
fcom
inc
sbb
jg
sbb
inc
ds
mov
jns
sbb
pusha
pop
call
add
sub
pop
roll
addl
mov
xor
negb
das
push
in
ret
sbb
sbb
js
repz
push
flds
cld
jo
push
ljmp
cmp
or
inc
push
nop
sub
push
sti
dec
int3
push
je
mov
cmp
in
or
loop
data16
gs
pop
icebp
mov
das
adc
fmuls
fsub
sub
mov
jno
mov
sub
orb
js
enter
sub
ret
adc
lock
pop
inc
inc
aaa
je
insb
roll
pop
fwait
jno
jbe
addb
cltd
pushf
data16
add
pop
call
add
sbb
test
mov
inc
fnstenv
arpl
mov
inc
cmp
pop
or
cltd
push
sahf
aam
sub
add
mov
dec
adc
mov
or
add
mov
mov
daa
inc
lods
bound
or
add
or
fsubrs
mov
ret
aas
sub
add
call
and
pop
dec
arpl
cmp
fdivr
add
mov
jbe
dec
fcoml
or
int3
xor
sub
or
lea
dec
or
sub
mov
inc
xor
cmp
add
or
xchg
mov
and
and
icebp
add
mov
pop
cmc
in
ficoms
mov
sub
dec
sbb
or
pop
decb
insb
adc
aas
inc
test
add
mov
leave
adc
pusha
dec
xchg
sub
mov
cmp
dec
out
inc
push
je
or
sbb
dec
subl
stos
or
dec
mov
push
mov
outsl
cmp
adc
into
ljmp
mov
clc
or
add
call
and
dec
jno
and
and
clc
dec
hlt
scas
es
sbb
cmp
sbb
clc
adc
nop
mov
mulb
pop
inc
add
add
and
clc
push
cmp
add
movsb
rcrl
ret
mov
inc
cmp
cli
bound
dec
popf
outsl
xchg
or
adc
ret
or
call
out
mov
jle
add
lahf
push
fs
pop
xchg
mov
insb
lds
rclb
xchg
xor
sub
insl
das
adc
mov
pop
jne
mov
pop
mov
sahf
mov
xor
daa
orb
and
fcoms
dec
jno,pt
lea
add
inc
jmp
jge
xor
lea
lret
pop
adc
sbb
xor
push
pop
les
les
xor
je
inc
or
fisubrs
xor
daa
lret
xor
xor
mov
cmp
popf
stos
outsb
pusha
loopne
jnp
nop
bound
mov
mov
in
push
lret
cmpb
xchg
call
fdivs
loop
and
xor
and
test
imul
aad
jecxz
insl
push
clc
es
aam
es
xchg
add
mov
aas
addb
outsb
or
loope
inc
cmp
hlt
std
mov
decb
test
les
xchg
int3
loopne
mov
cwtl
xchg
and
stos
cmpb
nop
mov
sub
xor
addl
lds
ja
dec
out
insb
rorb
cltd
mov
adc
add
adc
mov
and
mov
push
inc
mov
pop
test
mov
aam
dec
mov
test
xor
popf
cwtl
outsb
cld
pusha
call
or
out
inc
push
push
xlat
dec
shll
and
ret
xor
jecxz
push
bound
inc
rcrb
lahf
xchg
mov
in
pop
sub
adcl
jne
push
xchg
sbb
xchg
les
pushf
scas
xor
adc
lds
pop
push
cltd
lret
add
xor
push
sbb
imul
enter
mov
xor
push
cmpsb
jl
mov
mov
xchg
mov
or
test
xchg
stos
inc
scas
or
mov
fdiv
fimuls
xorb
pop
aaa
test
push
inc
push
call
movsl
jbe
adc
je
jne
lock
ljmp
and
cs
je
not
xchg
fdivrl
push
out
aad
push
je
jne
shlb
iret
mov
push
xor
xchg
outsb
pop
xchg
mov
inc
dec
les
mov
popf
pop
shrb
dec
mov
inc
fcmovnu
in
push
cwtl
cltd
mov
aam
in
call
xchg
push
cmp
mov
sub
inc
mov
nop
and
or
aas
je
call
push
jns
push
pop
mov
push
push
inc
inc
push
xor
adc
sub
push
mov
mov
dec
fsubs
or
mov
addr16
sub
mov
mov
call
jg
rol
les
imulb
push
push
int
xor
push
mov
repz
orl
andl
shlb
adc
mov
push
icebp
xchg
out
pop
push
mov
add
movsl
and
inc
pop
add
fs
pop
jmp
ret
adc
cmp
popf
jl
dec
es
sti
and
mov
test
push
in
push
dec
xor
pop
push
and
jmp
enter
push
mov
add
sub
test
adc
daa
mov
jns
sbb
mov
enter
loop
sbb
clc
and
rorb
cmp
sub
adc
dec
and
sub
push
ret
jnp
call
or
and
in
movsl
decb
nop
add
push
push
mov
mov
clc
cmp
jl
sbb
add
popa
sbb
lret
xlat
xor
test
leave
xor
push
sbb
inc
xor
xor
sbb
xchg
cmpsb
pop
push
or
mov
aad
js
jle
cs
push
push
inc
push
push
scas
pushf
pop
cli
inc
dec
and
adc
push
mov
je
push
mov
mov
jne
pop
shll
jno
sub
jb
xchg
push
dec
adc
fnstsw
mov
sbb
iret
jo
mov
movsl
add
pushf
jmp
in
mov
bound
inc
call
push
add
fsincos
add
and
mov
call
mov
popf
es
dec
mov
adc
mov
jmp
and
or
dec
mov
cmp
enter
sbb
sub
and
dec
sub
jo
test
dec
outsb
push
mov
sub
adc
push
sub
loop
mov
jl
inc
and
mov
mov
push
add
mov
mov
xor
mov
add
jbe
mov
push
mov
rep
stc
leave
mov
inc
mov
sbb
int3
bound
mov
cli
enter
je
push
lods
cld
test
cmc
xor
mov
pop
mov
repnz
outsb
dec
nop
inc
jmp
test
jle
enter
sbb
in
cmp
ret
add
cmc
sbb
jb
push
push
sbb
je
cmpsl
push
jbe
loop
fstpl
repz
sbb
in
pop
jecxz
loop
xlat
shl
hlt
jmp
in
lea
loop
adc
add
push
jmp
mov
push
sbb
test
rorb
pop
inc
fwait
hlt
mov
sub
push
push
push
loopne
subb
insb
cmp
call
xor
inc
and
insl
lds
push
xlat
xor
and
inc
add
cmp
cmp
cmp
das
mov
adc
lods
sti
add
test
add
enter
loopne
inc
pop
add
jne
push
push
and
mov
lods
sub
cs
stc
inc
push
pusha
mov
leavew
xor
or
movsl
inc
call
das
push
cld
fxch
sub
jno
cmp
inc
dec
mov
mov
push
jno
mov
sub
sarl
pusha
and
cwtl
sbb
xor
hlt
mov
mov
adc
cmc
or
test
push
enter
xor
test
popf
or
mov
push
test
mov
and
push
push
call
dec
pop
adc
sub
ret
mov
cmpsb
ret
rcll
icebp
adc
pop
inc
daa
sbbl
sbb
test
inc
jae
add
cld
mov
inc
add
enter
dec
outsl
pop
test
push
fistl
daa
push
icebp
jmp
push
inc
pop
adc
xchg
es
mov
jnp
enter
jmp
mov
mov
fs
dec
inc
int3
cli
das
mov
add
pop
push
add
je
mov
call
lock
sub
cmpsb
sti
mov
stos
daa
rorl
cmp
mov
jno
adc
or
sub
sub
lock
repz
xor
xchg
sub
lret
scas
jmp
mov
push
and
fcompl
mov
cli
sbb
repnz
sti
push
jnp
push
lock
xchg
dec
xchg
or
adc
mov
sbb
test
loope
adc
mov
addr16
or
inc
fdivrl
push
ja
call
jp
xchg
xchg
int3
sbb
push
push
cmpsl
and
inc
stc
stos
lea
inc
dec
loope
jnp
dec
scas
adc
js
sbb
add
and
push
cmp
mov
scas
test
loope
jbe
adc
fs
pusha
hlt
xchg
or
sub
pop
bnd
mov
add
call
push
pop
sub
jmp
incl
shr
inc
out
aam
sub
daa
insb
mov
cmp
lcall
xlat
dec
jl
lea
in
jbe
int
inc
addr16
cmc
push
inc
cmp
sbb
xor
inc
mov
inc
adc
xchg
jo
inc
subb
mov
and
cmp
adc
add
xchg
dec
shl
dec
push
adcl
dec
pop
xchg
sub
push
jae
andl
shl
push
das
insb
ss
sub
adc
jmp
xor
mov
cmp
jge
cmp
push
dec
call
mov
lret
mov
imull
cmpsl
jle
pop
and
add
ret
sub
insl
pop
sub
fwait
enter
push
call
pop
adc
mov
push
pop
add
sbb
add
pop
jo
nop
shlb
add
push
into
and
sbb
mov
mov
cmpsb
or
xor
call
jmp
push
mov
xor
inc
or
popf
or
cmpsb
cld
rcrb
mov
dec
dec
jl
adc
sbb
xor
add
inc
in
call
sbb
outsb
or
jno
out
addb
push
sbb
sti
cwtl
jp
push
xchg
mov
nop
test
xor
sbb
dec
jo
mov
daa
jmp
stos
test
and
dec
call
sub
sbb
cmp
and
push
ret
push
ljmp
gs
and
pushl
mov
or
push
subl
mov
pop
cmp
fstps
jp
icebp
add
push
dec
or
je
and
in
mov
enter
cmp
adc
jmp
jo
and
push
jmp
int3
icebp
push
sub
cmp
mov
adc
inc
clc
cmp
push
pop
push
or
inc
push
and
and
nop
pop
jmp
movsb
sub
es
mov
mov
imul
inc
jnp
mov
adc
cmc
adc
sbb
sub
and
xchg
and
mov
ljmp
bound
adc
sbb
xor
or
inc
adc
lcall
and
adc
enter
cmpsl
and
mov
jp
dec
test
cmp
push
and
into
xor
push
into
inc
sub
and
pop
or
mov
inc
and
pusha
cmp
push
stos
loopne
inc
mov
xor
and
fcomps
gs
add
cs
mov
xlat
fisttpll
adc
jns
push
call
pop
xor
inc
adc
and
pop
inc
dec
jge
or
add
xchg
push
mov
and
push
push
mov
js
cmp
into
divl
mov
mov
popf
and
inc
fmuls
push
sahf
js
lea
mull
jl
sbb
mov
bound
mov
ret
xor
inc
in
sarl
push
adc
adc
shl
int3
add
mov
sti
mov
das
incl
jecxz
cmp
inc
nop
loope
in
dec
enter
sub
push
or
sbb
fs
movsl
fs
push
enter
sbb
jne
jmp
adc
xchg
pop
fs
adc
mov
and
cli
mov
rorl
push
push
mov
mov
add
pop
dec
jmp
scas
inc
mov
inc
add
inc
xchg
push
lea
les
fsts
test
in
adc
adc
imul
cmc
mov
leave
xchg
mov
test
out
push
clc
push
sarb
adc
xchg
adc
movsl
jns
jp
mov
mov
and
add
push
xchg
xchg
or
leave
adc
shlb
xchg
les
cmpsb
jge
fwait
in
mov
add
std
cs
mov
cld
cmovo
sub
pusha
lahf
sbb
popa
stos
js
xor
les
push
movsl
pushf
add
push
stc
inc
popf
add
push
sub
jnp
and
inc
adc
pop
add
mov
mov
sub
and
lock
add
inc
dec
and
xor
and
clc
jl
inc
xlat
sub
insb
sbb
cltd
outsl
test
in
cli
push
pushf
test
fcomip
jns
cmp
adc
cmp
add
lret
cmp
cmp
xchg
imul
cmp
cmpb
inc
sub
mov
call
cmp
xchg
xor
push
mov
insb
xor
push
dec
out
pop
mov
insb
xor
pop
sub
aad
call
jbe
sbb
sub
adc
mov
mov
icebp
dec
out
add
push
sbb
stos
dec
jbe
arpl
push
mov
push
or
mov
aaa
std
jbe
out
and
les
in
lock
lds
sub
mov
icebp
mov
xchg
mov
insb
adc
xor
xchg
xor
or
cwtl
sub
les
outsl
inc
pop
cmovs
in
cmc
or
add
pop
and
pop
or
shr
push
mov
and
pop
jns
inc
mov
push
push
loope
stos
push
lods
lods
xor
stos
fcompl
push
and
stos
ss
mov
xor
or
sub
pop
or
inc
xchg
and
add
mov
orl
or
sti
orb
fmull
jo
jne
jmp
and
push
int3
mov
dec
mov
aam
or
test
adc
add
and
mov
loopne
dec
lds
xchg
pop
xchg
sub
outsb
popa
xor
xor
fisttps
in
int
push
push
mov
push
imul
call
cmc
inc
in
mov
xor
fsubl
lods
or
cmp
xchg
lahf
mov
push
push
push
or
mov
or
cli
pop
jbe
mov
loop
data16
lods
inc
stc
and
pop
test
pusha
ja
xchg
inc
daa
test
test
adc
pop
sub
sbb
push
xor
jbe
pop
and
adc
jp
jecxz
push
jmp
inc
fisubrs
and
subb
adc
or
push
adc
mov
jge
repnz
push
mov
mov
mov
rcll
test
shll
dec
xchg
mov
inc
rolb
jb
xor
xchg
inc
sbb
shrb
les
jb
inc
cmp
mov
mov
sbb
sub
sub
fmull
fsubp
cwtl
dec
cmp
add
sub
out
sbb
clc
pop
inc
xchg
adc
fidivrs
and
cmp
or
inc
pop
pop
sbb
xchg
jle
or
imul
push
add
pop
sbb
and
cmp
inc
dec
sbb
push
inc
shll
stc
adc
repnz
push
out
push
test
test
and
jne
loop
sbb
pop
or
bound
xchg
mov
test
push
loope
push
or
adc
or
inc
adc
inc
sub
mov
fsts
or
lahf
push
and
sbb
clc
mov
mov
stos
test
loop
sbb
loope
sbb
xchg
orl
and
inc
loope
sub
daa
js
and
and
outsl
test
pop
pop
mov
sti
in
or
pop
add
xor
jmp
mov
xchg
xlat
mulb
xor
std
inc
movsb
sub
adcb
adc
pop
mov
mov
mov
fwait
mov
xor
or
inc
dec
xor
ret
add
ja
push
les
imul
frstor
rol
call
dec
push
enter
add
sarl
pop
mov
push
out
scas
ret
pusha
ret
ljmp
pop
imul
jmp
lahf
std
inc
jg
in
push
inc
scas
pushf
pop
and
mov
and
sub
test
add
jne
xchg
push
xchg
jae
adc
pop
push
push
sbb
push
sub
pushf
int3
dec
stc
push
icebp
adc
and
je
sahf
popf
adc
dec
push
xor
test
cld
movsb
pop
movsb
xchg
fmull
jbe
push
jo
push
aam
call
mov
lods
mov
mov
xor
cwtl
cmpsl
pop
push
mov
or
mov
sub
shl
stos
and
push
add
jg
jge
dec
adc
pushf
fcompl
inc
mov
add
inc
mov
testl
pop
dec
xor
push
dec
sbb
cmpl
cld
hlt
cmp
pusha
cmp
imul
sbb
pop
pop
popf
sbb
push
add
cmp
xchg
pop
dec
inc
or
pop
adc
or
xchg
add
cmpsl
or
pop
add
add
mov
mov
inc
jle
mov
mov
mov
push
sbb
cli
xor
addr16
test
mov
roll
dec
lods
repz
mov
adc
inc
subl
inc
insb
mov
les
cld
jl
sbbb
mov
scas
sub
andb
cwtd
bound
fsts
inc
mov
call
or
mov
add
bnd
negl
mov
cwtl
lea
ret
mov
inc
in
rcrl
pusha
add
jp
dec
push
lods
cmp
icebp
xchg
orb
call
scas
movsl
ret
stos
mov
cmp
sbb
and
sbb
pop
add
ds
xchg
ret
mov
xor
fld
dec
adc
orb
inc
lock
jge
addb
cmp
adc
adc
add
jle
cli
insb
test
and
inc
jnp
mov
ret
or
xor
jmp
sub
jo
push
pop
test
xor
rcl
add
xor
pusha
jg
setge
lea
add
jmp
mov
push
sub
mov
mov
or
loopne
jmp
adc
roll
mov
shrl
seta
fdivs
xchg
aam
stos
xor
outsl
imul
aam
pop
hlt
xchg
adc
pop
scas
cmp
mov
lea
sub
lock
call
sub
cld
inc
lret
nop
fnstcw
adc
xor
jne
cld
mov
push
outsl
sbb
ds
lods
or
jp
push
stos
dec
push
jl
or
call
loope
clc
mov
jge
jno
push
mov
icebp
aam
xchg
dec
push
addr16
sbb
mov
dec
pop
loope
jg
mov
xor
lcall
les
inc
add
xchg
imul
imul
jg
sub
imul
cmc
adc
lahf
xchg
mov
jge
cvtps2pi
pop
sbb
clc
xchg
rcr
into
dec
and
loopne
and
js
inc
dec
jg
inc
xchg
inc
cmp
enter
js
inc
sub
sbb
nop
addl
add
or
movsbl
lahf
adc
paddb
mov
testl
xchg
xchg
ret
cli
ffreep
inc
push
pop
push
and
mov
and
push
loopne
cmp
insb
fs
pop
test
mov
push
test
lods
cmp
mov
mov
sub
inc
andb
cld
pop
in
sbb
add
sub
push
lock
fstps
lods
mov
or
in
movsb
push
sub
cld
inc
inc
inc
or
imul
sbb
lea
inc
in
pop
and
sbb
movsb
sahf
xor
xor
in
add
and
lret
bound
mov
popa
loop
es
enter
mov
test
dec
push
les
xchg
sahf
xchg
cmpsl
jno
daa
cld
es
pop
push
pop
sub
aad
inc
push
jecxz
insb
sbb
jo
xchg
fadd
xchg
inc
add
fwait
repz
icebp
xchg
add
mov
adc
push
arpl
fsubl
mov
dec
push
sbb
cmp
mov
mov
inc
pop
xchg
push
int3
pop
sub
pusha
insb
inc
dec
inc
test
push
subb
sbb
aas
inc
mov
sub
xchg
cmp
je
enter
sbb
mov
and
sbb
adc
sub
ljmp
or
pop
pop
mov
mov
popa
lahf
adc
add
leave
adc
clc
xlat
mov
incb
daa
inc
add
mov
mov
bnd
addb
jo
mov
add
aaa
sub
fisubrl
pop
push
adc
adc
cmpsb
sub
fdivr
fisubrs
je
sti
ficoml
jno
dec
sbb
mov
jb
add
sbb
test
or
cs
int
cmp
push
mov
and
das
push
and
or
test
push
mov
das
hlt
xor
cmp
call
das
add
shl
mov
push
frstor
imul
rorb
jmp
inc
mov
adc
push
push
add
xchg
cmc
cltd
lods
push
inc
or
cs
sbb
je
and
adc
mov
cwtl
xor
stc
test
ret
xchg
lds
lcall
and
push
faddl
mov
test
inc
xor
jp
add
cmpb
cltd
cmp
adc
xchg
pop
leave
sub
rorl
fildll
fmull
cmp
adc
xchg
xor
and
and
pop
push
fwait
cmp
adc
push
jge
xor
adc
sub
in
mov
mov
enter
dec
push
std
inc
jmp
xor
inc
and
aam
es
imul
lea
xchg
push
push
add
push
pop
jmp
and
add
hlt
hlt
repz
adc
cltd
fcomps
inc
lcall
mov
xchg
bound
mov
mov
rcr
outsl
adc
jmp
lret
add
or
pusha
sar
and
aas
pop
loop
mov
in
and
nop
push
add
lidtl
xchg
loop
add
xor
cs
add
or
inc
sqrtps
xchg
mov
hlt
mulb
cmp
enter
jns
in
add
inc
add
push
lret
mov
pop
push
adc
jo
jb
inc
mov
dec
sbb
cmp
mov
xor
dec
jae
sub
or
cmp
fmull
dec
jmp
bound
icebp
xor
pusha
fmul
mov
push
call
into
movsl
pop
inc
add
loopne
xchg
lods
push
xchg
lcall
or
adc
mov
dec
mov
dec
xchg
push
xchg
ljmp
sbb
and
lea
cwtl
xorb
cli
popf
clc
ja
add
call
pop
cmp
jne
loopne
add
push
insb
sub
cmpsb
adcl
mov
inc
cmp
arpl
adc
data16
pop
lods
and
adc
mov
icebp
mov
jmp
mov
mov
and
andb
cmp
loope
push
inc
and
push
cmpl
mov
testb
sbb
sub
xchg
mov
dec
inc
fs
enter
icebp
push
adcb
cmp
adc
sub
aas
mov
adcl
fwait
incb
adc
xchg
pop
mov
jge
stos
push
mov
mov
sub
xchg
xchg
xchg
mov
mov
inc
adc
test
movmskps
mov
hlt
mov
lock
cmp
pop
rclb
dec
pop
aad
mov
or
std
cwtl
imul
push
orl
fs
sbb
adc
ret
out
adc
mov
out
pop
inc
add
mov
cmp
mov
je
push
dec
xchg
xchg
je
lea
mov
xchg
rcll
push
push
sub
or
orb
add
jge
add
mov
clc
insb
rclb
les
adc
loop
daa
and
les
pminsw
popf
mov
and
popa
pop
pop
adc
pop
mov
and
aaa
test
xor
loope
clc
and
or
daa
push
add
pop
pop
and
stc
cmp
jae
ss
dec
lds
dec
jae
or
sub
jle
lahf
addb
test
popa
mov
jp
and
jl
pop
jbe
xor
add
adc
add
call
jae
sbb
ret
mov
repz
or
xchg
mov
incb
stos
cmp
shlb
and
adc
push
add
add
outsl
shll
push
inc
jl
jg
neg
xchg
out
and
ljmp
std
jbe
inc
jge
hlt
xor
sarb
ret
mov
cmp
out
sbb
cmp
adc
cmp
add
jne
cs
stos
xor
shlb
pop
cmp
adc
cmp
out
addr16
adc
loope
pop
pop
movsl
xchg
push
mov
pop
cld
cmp
sub
and
call
cmp
jle
jae
rcr
pop
pop
push
test
addb
std
add
js
mov
test
repnz
jmp
mov
mov
or
cmpb
adc
xor
shlw
sarl
sbb
inc
or
mov
cmpsb
test
jbe
orb
add
cmp
jae
rcr
push
test
jbe
dec
add
movsb
add
lods
cld
cmp
or
xor
cmpsl
sub
push
dec
or
pop
cwtl
iret
mov
int
inc
or
mov
and
pop
push
test
jbe
mov
inc
push
add
out
je
das
popa
aad
sub
xchg
int
add
rcrb
adc
std
inc
ret
mov
call
jbe
bound
push
scas
rcll
addr16
xchg
add
insb
push
movsb
or
sahf
sub
dec
and
pusha
idivl
adc
ja
sti
sub
mov
leavew
mov
sub
test
mov
loope
cmp
ficoml
leave
mov
mov
out
pop
dec
adc
and
testb
clc
jo
orb
dec
jae
push
add
mov
les
adc
or
int
outsb
sub
mov
add
dec
sub
incb
mov
ret
test
xchg
push
mov
push
mov
dec
jo
adc
jo
or
jge
and
pushf
push
add
nop
movswl
mov
xor
inc
ss
movsl
sbb
imul
inc
push
mov
ficomps
mov
cmp
mov
jle
mov
push
jle
mov
xor
orl
movsb
cmp
das
test
jl
lret
lcall
push
repnz
or
std
push
push
jbe
dec
push
pop
hlt
push
scas
push
pop
shll
sub
push
pusha
and
xor
aas
mov
and
popf
mov
je
push
test
mov
push
sub
das
sbb
repz
cmp
dec
movsb
mov
sub
sti
xor
pop
jmp
popf
xchg
lods
out
test
or
or
fcomps
and
enter
and
xchg
xchg
adc
repz
dec
call
orl
adc
aas
lret
inc
mov
xchg
xor
sbb
mov
and
pop
adc
sub
sub
adc
xchg
cwtl
cwtl
or
mov
or
push
and
inc
sub
push
jmp
lahf
sbb
inc
mov
stc
and
daa
pop
mov
xchg
int
xchg
sub
in
mov
mov
cwtl
mov
inc
outsl
sub
or
sub
jle
inc
and
out
sub
test
out
ds
lock
outsb
mov
mov
mov
mov
shr
mov
mov
inc
clc
mov
lret
pop
mov
les
jne
cs
sub
call
push
shll
xchg
cmp
cs
and
movsl
into
in
jnp
push
lret
xlat
stos
int
outsb
add
mov
adc
je
push
int3
bnd
out
shrl
pop
mov
or
into
push
mov
outsb
sub
jp
pop
mov
rcrb
lahf
cmpsb
jge
insb
jae
mov
pop
cmp
xchg
mov
dec
sti
mov
rcr
cmc
lcall
xlat
std
pop
es
jg
pmulhuw
popa
cltd
ret
lcall
jo
add
lods
xor
cli
cmpsl
daa
xchg
cmp
mov
sbb
int3
push
xchg
sub
cmp
fmul
push
ret
push
jg
sub
mov
inc
cmp
test
mov
dec
push
dec
iret
inc
aas
push
shlb
ss
gs
mov
and
sbb
and
fadd
sbb
cmp
adc
cwtl
stc
ss
inc
lahf
push
mov
insb
movsb
or
push
ret
fnstsw
movsb
pop
push
jecxz
dec
in
push
sbb
hlt
inc
cld
and
cltd
sbb
pop
add
data16
push
cmp
or
pop
mov
dec
mov
push
sar
jo
add
dec
in
imul
imul
dec
cld
cs
call
sub
rorb
push
mov
cmp
jl
or
movsbl
sub
jmp
inc
or
sbb
loope
add
sti
cmp
mov
cmp
add
lea
shr
pop
or
sbb
inc
inc
jle
add
cmp
jb
pop
cmp
dec
mov
not
ljmp
inc
pop
decl
mov
inc
dec
cmp
jb
lock
retw
sub
sub
in
jecxz
or
leave
adc
decl
add
jge
adc
and
fldl
popa
incb
mov
add
mov
and
jl,pt
out
push
pop
sbb
cmp
or
mov
and
mov
add
mov
pop
mov
xlat
aam
xor
adc
lock
es
hlt
fsubrs
inc
cli
js
pushfw
xor
das
or
inc
rorl
push
or
add
dec
mov
nop
mov
push
aas
push
or
pop
lea
adc
inc
into
sbb
test
movsb
ljmp
inc
enter
sbb
sahf
pop
add
inc
out
lea
loop
rcrb
daa
add
jns
sbb
clc
stc
pop
or
mov
mov
sub
mov
inc
ret
dec
nop
lcall
or
mov
cmp
icebp
sbb
call
or
sbb
fdivl
pop
mov
inc
pop
mov
dec
push
inc
scas
fstpt
pop
movsb
sub
mov
push
push
push
hlt
sub
cmp
into
jmp
inc
imul
adc
mov
mov
pop
loop
movsb
cmp
inc
loop
shlb
and
hlt
mov
fiaddl
push
inc
fistpl
xchg
xor
cld
pop
imul
in
in
jle
loope
dec
bound
xchg
ljmp
and
ds
push
inc
sub
xchg
mov
xlat
nop
sub
xchg
mov
lea
or
dec
mov
pushf
daa
pop
push
iret
cmp
outsb
inc
aad
inc
clc
xor
xor
cltd
popf
sbb
dec
or
push
push
test
or
push
pop
mov
xchg
repnz
mov
jmp
xor
adc
psubsb
jne
andb
dec
push
mov
testl
adc
stos
and
push
xor
push
cmp
pop
jmp
decl
push
xchg
cld
hlt
hlt
scas
cmp
fnstenv
gs
jge
imul
jle
std
mov
jge
pop
jno
ret
jmp
imul
bnd
and
mov
call
push
lods
xor
xchg
jbe
or
jge
push
int3
jbe
scas
das
imul
or
stc
cmpsl
adc
push
scas
popa
js
fsubrs
out
call
add
lock
inc
inc
hlt
sbb
cmc
mov
das
fcomps
dec
adc
mov
xor
xchg
cmp
adc
xchg
jg
jne
je,pn
in
pop
lods
adc
push
adc
mov
pop
leave
push
xchg
mov
xlat
jnp
lea
clc
xchg
sub
and
movsl
dec
ds
frstor
push
add
fiaddl
add
daa
data16
mov
or
pop
mov
adcb
movsl
and
ds
sub
int
lds
cmp
rcrb
in
pop
div
adcb
sub
mov
inc
icebp
mov
call
pusha
ljmp
sbb
push
push
std
cmp
sbb
sub
loopne
xchg
sarb
xor
mov
xorb
adc
lcall
and
subb
mov
add
lods
sti
jg
push
push
stos
adcb
adc
jne
push
push
sbb
stc
jne
sub
adc
adc
mov
or
repz
bound
add
mov
enter
push
cmpl
popa
je
mov
mov
aam
sbb
sbb
adc
fstl
call
xchg
loopne
je
mov
xchg
add
lret
scas
pop
mov
jnp
pop
outsl
xchg
imull
xchg
pushf
push
lret
andl
in
inc
in
loop
dec
out
enter
int
out
push
repnz
xchg
movsl
dec
ficoml
movsb
xchg
inc
push
add
xor
imulb
mov
leave
pop
xor
out
dec
loop
pop
xor
cld
jae
push
add
xchg
movsb
hlt
pop
cmp
std
cmp
or
pushf
insl
and
lock
cmp
clc
aaa
jbe
and
aas
test
mov
std
push
mov
inc
and
test
push
rorl
push
inc
fadds
call
cmp
popa
stmxcsr
cmpsb
ljmp
rcrb
loop
test
xchg
mov
iret
add
push
shlb
sbb
je
mov
fcmovne
jmp
mov
xorl
xor
loope
sbb
pop
cmp
and
leave
loop
andb
jae
mov
or
or
out
shl
adc
andb
mov
aam
cmp
jb
mov
mov
test
pop
loopne
push
pop
jo
flds
add
std
push
cld
mov
mov
pop
sti
mov
mov
rolb
into
push
or
xchg
divb
into
xchg
adc
and
psubsb
xchg
pop
scas
rol
mov
add
pop
in
xchg
push
shl
add
addr16
adc
outsb
rep
or
lds
push
push
xchg
and
call
add
lea
push
and
inc
pop
in
inc
lcall
push
adc
test
jb
adc
ret
inc
test
out
popa
jle
jecxz
call
test
push
inc
push
add
cmp
add
int
lock
cmp
into
icebp
push
les
add
inc
xchg
int
and
mov
nop
lret
and
and
lock
mov
adc
call
rorb
adc
pop
and
hlt
and
mov
dec
fcos
imul
mov
faddl
xchg
test
sub
pop
bound
and
and
mov
mov
sub
cmp
mov
scas
adc
xchg
sub
test
inc
mov
adc
mov
dec
negl
out
bound
add
iret
and
sbbb
pop
mov
scas
cli
sub
addr16
or
push
and
push
ret
mov
pop
dec
mov
mov
push
or
movsl
or
mov
pop
test
adc
mov
enter
cltd
push
adc
ja
add
mov
mov
je
push
jmp
adc
pop
test
mov
cmpsb
push
sbb
push
dec
pusha
les
outsb
int3
xchg
jmp
adc
into
xchg
sub
dec
jge
sub
mov
push
ret
jmp
into
mov
test
adc
out
call
mov
ret
nop
in
xchg
repz
scas
jl
push
add
pop
call
in
adc
adc
sbb
jl
in
add
cmp
mov
movsl
jmp
or
shrl
fidivrl
jecxz
jle
popf
popa
push
xor
test
shll
in
dec
xor
inc
mov
pop
lea
sub
aaa
mov
dec
call
mov
paddsw
negl
pop
ljmp
mov
lock
xchg
jge
std
dec
adc
stos
fxch
add
add
mov
cmpl
jle
inc
sub
call
or
lret
cwtl
mov
mov
and
cmpl
jbe
sub
les
cmp
out
adc
sub
bt
inc
push
xlat
or
inc
add
pop
add
sub
jno
adc
cmpsl
insb
es
cmp
sbb
out
sub
aas
out
or
fiadds
push
mov
cmp
stos
cmpsl
ja
mov
mov
sbb
dec
adcl
das
stos
inc
lcall
xor
loopne
jo
daa
sbb
push
pop
cmp
xchg
test
push
mov
in
sub
ret
adc
or
fdivp
push
and
idivb
mov
pop
pop
and
cwtl
stos
ljmp
fs
mov
mov
aaa
jmp
daa
xchg
sbb
and
dec
adc
dec
xlat
add
adc
mov
dec
mov
dec
mov
sub
rcll
faddl
ret
mov
xor
hlt
mov
push
cs
add
imul
movsl
dec
fadd
mov
jge
fcoml
ljmp
test
lret
insb
daa
push
cmp
jbe
pop
cmpb
clc
or
subl
mov
sahf
adc
push
inc
dec
sub
xor
add
adc
or
cmp
xchg
mov
xchg
xor
push
mov
xor
push
push
repz
les
scas
adc
mov
orl
shrd
in
sub
xor
sub
nop
jnp
inc
mov
jmp
ljmp
sbb
jmp
shrb
ss
mov
rclb
jae
mov
mov
mov
ret
outsb
fisttpl
cmpl
fldl
mov
push
mov
sbb
adc
imul
jle
popf
xor
adc
fimull
clc
mov
sbb
std
andl
sub
test
sbb
and
xor
mov
push
xor
sbb
cltd
aas
fs
push
push
mov
cmp
je
lahf
push
push
pop
jmp
inc
movsb
sub
push
or
jo
mov
ja
lea
adc
aaa
push
inc
fs
and
adc
orl
rcrb
dec
iret
mov
mov
jge
or
or
push
and
jbe
sub
push
xchg
in
mov
or
movsl
shl
sbb
cmp
sbb
or
faddl
inc
cmp
jb
fidivrs
push
and
inc
push
nop
dec
jmp
push
cmpsb
add
rclb
enter
add
sub
pop
filds
mov
rolb
adc
pop
std
pop
adc
push
xor
js
mov
add
call
les
daa
ds
push
test
pop
lret
sbb
repz
jo,pn
or
sub
xor
enter
mov
sub
mov
cmpsb
jb
xor
fistpll
sub
dec
stos
push
xchg
in
imul
pop
sub
sub
add
or
aas
in
adc
inc
in
lahf
push
mov
xor
addb
mov
lds
inc
inc
sub
adc
sti
xlat
and
or
mov
daa
and
cs
cmpsb
adc
mov
je
mov
push
sub
bnd
sub
dec
jecxz
sbb
mov
flds
pop
adc
insb
sbb
ljmp
xchg
clc
ret
cmp
gs
push
dec
dec
fsubp
xor
mov
mov
loope
movzbw
mov
push
inc
mov
test
xchg
or
rcll
mov
adc
lock
pop
mov
xor
fs
fs
sbb
mov
dec
inc
mov
jge
scas
sub
inc
xlat
sub
sub
and
insb
sbb
adc
mov
push
ror
dec
mov
ret
sub
mov
test
push
xor
dec
inc
mov
and
jmp
dec
mov
mov
pop
data16
and
add
and
add
or
es
ficompl
movsb
sbb
stos
sbb
add
mov
xchg
push
enter
cltd
int3
xor
add
pop
and
and
xchg
in
fs
cwtl
cli
imul
cmp
pop
xlat
pop
add
jmp
inc
add
ret
add
cmpb
inc
js
xchg
push
xor
sbb
push
inc
gs
sti
subb
mov
add
fadds
mov
add
jne
xchg
shrl
jmp
push
push
call
mov
push
sbb
adc
mov
mov
or
inc
or
add
push
mov
in
es
xchg
push
test
imul
test
or
lea
mov
ror
fs
out
cmp
push
xorl
dec
insb
mov
je
add
mov
inc
and
adc
lret
call
xor
inc
inc
add
ds
int
jge
fwait
sbb
aad
orb
mov
add
fsubrp
jl
xor
sub
sbb
or
sub
addr16
inc
popa
leave
cmp
jo
xchg
in
adc
pop
daa
pmuludq
sub
pop
loopne
jbe
dec
or
and
mulb
xchg
jecxz
dec
push
jae
jnp
pop
mov
cli
xor
mov
arpl
inc
iret
pop
mov
sub
push
jl
push
enter
jl
daa
dec
adc
add
push
movsb
cmp
test
aas
inc
push
test
xor
scas
cwtl
ja
dec
sti
testl
pop
mov
fdivrl
dec
cmp
or
movb
popf
pop
mov
xchg
push
lods
dec
aas
ret
xor
adc
stos
inc
imul
dec
dec
sbb
jge
sub
xchg
inc
in
enter
lcall
jo
mov
push
fisubrs
sti
pop
dec
scas
jnp
adc
jl
lret
flds
js
out
inc
js
add
mov
mov
ss
hlt
into
push
push
or
std
or
sti
pop
pop
sub
and
out
shrl
test
call
mov
mov
shlb
loope
mov
mov
fwait
xorw
xchg
sub
jmp
lods
pop
push
enter
jmp
das
call
push
and
and
mov
lea
xor
sbb
das
jne
call
lea
dec
or
mov
push
push
pop
sub
mov
xchg
push
enter
faddl
push
or
or
call
mov
popa
jp
push
and
enter
cmp
divps
mov
lahf
mov
dec
jmp
out
mov
into
sarb
jne
pusha
leave
and
adc
ret
inc
sub
pop
in
and
lret
rcr
outsb
int3
or
and
negl
lahf
jnp
or
xchg
adc
jno
mov
in
dec
test
push
fwait
fs
cmc
punpckldq
sub
mov
cmp
je
xchg
push
cwtl
or
jo
mov
xchg
and
mov
lea
push
sbb
pusha
sti
cld
dec
lahf
push
and
scas
xor
sub
jne
insb
nop
dec
ljmp
decl
jge
sub
and
test
inc
in
les
and
insl
cmp
imul
inc
inc
adc
loope
or
lret
xor
dec
ja
mov
or
ficoms
adc
pusha
xor
pushf
in
jnp
and
mov
adc
mulb
adc
or
imul
sub
inc
stos
std
add
add
lock
fisubs
jle
and
test
lcall
pop
mov
add
adc
adc
push
ja
stos
jl
jo
or
mov
inc
mov
pop
jns
mov
or
xlat
in
mov
lret
push
fisubrs
std
xor
into
lds
stos
sub
orb
add
mov
adc
lods
std
movsb
push
aam
sar
mov
rolb
imul
dec
mov
mov
mov
std
loop
pslld
add
push
fisubs
dec
add
clc
adc
popf
xchg
test
sub
cld
push
lea
xor
insb
cmp
cs
pushf
jmp
lret
mov
stc
cmc
xchg
lret
cld
test
jl
push
lock
push
dec
pusha
mov
cmp
push
jmp
pop
std
lret
popf
xor
or
or
insl
xlat
jmp
and
and
sub
sub
stc
adc
out
in
sub
mov
xchg
jle
mov
out
orb
cmp
add
or
adc
mov
leave
test
cmp
loopne
adc
xchg
cmp
jmp
and
push
adc
adc
jp
cmp
jbe
cmp
inc
shr
and
ja
stos
pop
adc
inc
dec
iret
cmp
aad
fs
fnstcw
pop
inc
in
push
push
lods
jo
test
sub
adc
int3
sbb
jne
or
sub
sub
enter
adc
dec
adc
and
inc
pop
mov
push
cmp
inc
cmp
sbb
adc
sbb
in
lds
lock
push
add
mov
push
and
cmp
movsl
cmp
adc
xchg
enter
cmp
jns
imul
adc
cmp
outsl
sub
es
shrl
das
dec
mov
mov
adc
inc
dec
test
jmp
data16
push
jle
adc
call
adc
scas
inc
fbld
lods
into
jle
sub
xor
add
inc
fdivs
call
fcomps
cmp
clc
mov
stos
adc
cli
scas
mov
dec
and
dec
enter
adc
cmp
pop
dec
leave
aaa
mov
int3
xor
rorb
push
jp
in
sarb
ret
xor
pusha
push
sbb
sbb
mov
mov
roll
xchg
push
sub
pushf
xor
shll
sbb
pop
push
loop
mov
adc
andb
adc
gs
inc
test
push
xchg
sbb
sbb
cmp
sub
and
or
mov
test
loop
addr16
loop
xor
and
je
popa
js
add
jmp
and
mov
pop
mov
and
lret
or
nop
cmpsl
mov
mov
call
fucomip
mov
push
sahf
insl
dec
mov
out
loop
xchg
dec
jecxz
push
clc
addr16
int3
mov
jb
and
aas
xor
adc
xor
mov
adc
or
or
mov
cld
test
pop
add
mov
push
pop
out
adc
pop
ljmp
pushf
into
je
addb
jne
daa
push
mov
rcll
pop
add
fadd
mov
mov
mov
mov
xor
add
call
pop
popf
je
repz
lock
daa
mov
mov
add
inc
push
mov
test
scas
add
cmpsl
out
cmp
movsb
pop
std
js
fiadds
mov
aaa
push
and
jmp
faddl
scas
push
and
jg
out
inc
adc
cmp
call
mov
mov
popf
fcomp
jae
sub
data16
jge
and
dec
mov
mov
push
bswap
inc
mov
cmp
sub
mov
test
and
out
lret
les
leave
test
xchg
testl
inc
jne
cmp
adc
or
mov
mov
es
add
pop
push
popf
rcll
xlat
add
dec
les
lds
out
and
pop
into
mov
imul
mov
sbb
and
cmp
or
and
mov
inc
lea
cmp
cmp
push
xchg
sbb
xchg
push
mov
sbb
ret
xchg
xchg
pop
xor
lea
push
mov
mov
sub
and
mov
out
bound
fistpll
pop
jbe
mov
mov
and
popf
xchg
inc
pop
push
mov
sbb
int
jl
pop
and
push
ret
je
stos
and
inc
ret
das
or
mov
call
clc
pop
addb
test
adc
mov
leave
testb
out
jmp
mov
divb
addps
add
cmp
cmp
inc
mov
movsb
mov
push
xor
sbb
bound
adc
lds
dec
xchg
sub
push
xchg
std
push
sub
popa
movsb
jl
mov
or
inc
ret
mov
jne
push
push
sbb
sbb
or
in
call
adc
pop
sub
inc
std
adc
xchg
stc
mov
enter
mov
xchg
movl
insl
mov
jno
aas
push
ret
inc
std
adc
sub
cmp
in
xchg
ja
jo
pop
pop
push
mov
pop
jecxz
mov
fs
push
dec
nop
xor
xchg
xchg
decb
push
sub
mov
cwtl
pushf
jb
or
push
jmp
adc
jmp
stc
cmpb
sbb
subb
ds
lcall
mov
lret
push
mulb
or
jmp
sbb
sub
inc
rorl
jge
dec
mov
test
rorl
jmp
lock
rorb
adc
inc
cli
cmpb
push
and
cmp
leave
or
xor
mov
cs
rolb
bound
dec
mov
ja
mov
data16
cmp
nop
or
cmpb
adc
sbb
adc
sub
addl
cs
add
push
pop
jmp
unpcklps
pop
popl
dec
push
inc
cwtl
test
mov
jb
in
ret
in
cld
mov
sar
or
push
xor
in
sub
test
dec
adc
je
xchg
mov
push
pop
jmp
lods
popl
sbb
testb
mov
cmpsl
cli
push
daa
popf
cmp
or
mov
popf
and
push
pop
ret
inc
daa
cwtl
push
lret
jb
xchg
lahf
mov
adc
insl
or
mov
and
cld
mov
mov
jmp
fcmovnu
or
in
xor
add
and
adc
xor
push
and
ja
lret
pop
mov
and
cmp
add
cld
sbb
fwait
rclb
jle
aam
std
stos
ffreep
mov
jae
in
sub
cmp
cmp
imul
or
out
repnz
in
jne
mov
notl
int3
enter
or
mov
imul
mov
add
jmp
int3
scas
xchg
inc
add
cli
adc
inc
sarb
push
sub
lcall
push
adc
je
mov
sbb
adc
and
jbe
mov
orl
test
mov
sub
mov
push
fldenv
sbb
adc
popa
mov
mov
mov
sub
xor
and
imul
add
movb
in
movsb
adc
sbb
adc
mov
push
mov
iret
mov
dec
pop
lcall
je
cld
insb
lcall
fisubl
push
gs
xlat
lock
cmp
das
cld
add
jne
inc
push
cltd
xchg
mov
mov
xchg
lock
movsl
jns
sarl
and
mul
and
push
pop
or
push
scas
clc
adc
pop
rolb
pop
call
imul
inc
push
and
xchg
jo
sbb
in
mov
mov
mov
xchg
mov
sub
sbb
xchg
mov
adc
jecxz
pop
sbb
adc
pusha
sarb
cmp
ljmp
xchg
repnz
fimull
add
out
and
cld
inc
inc
les
adcl
cmpsb
iret
outsb
adc
sub
daa
rcl
xchg
fwait
sub
sub
inc
mov
insb
push
aas
push
mov
movsb
adc
popf
xchg
lret
xor
jmp
test
or
std
pop
dec
enter
aas
ret
adc
push
pop
dec
mov
and
adc
js
and
mov
xor
inc
cmp
dec
dec
adc
sbb
push
jge
mov
mov
lea
aam
lret
jmp
cmp
jbe
mov
enter
in
inc
jb
jmp
or
mov
xchg
call
jne
xchg
cmpsb
outsb
les
rorl
les
mov
mov
inc
leave
mov
shl
mov
inc
pop
mov
lret
mov
adc
test
add
call
jo
lret
sub
test
es
and
adc
ret
cwtl
push
call
dec
xor
sbb
sahf
pop
fildll
out
xchg
cmpsb
inc
adc
adc
sub
cltd
push
cmpsb
scas
push
cld
inc
mov
mov
ret
fldpi
lcall
nop
adc
fs
mov
movsb
andb
and
inc
mov
cmpsb
xchg
pop
lret
repnz
and
sbb
ret
xchg
and
xchg
pop
mov
shll
insw
xchg
lea
shlb
cmp
jle
lock
push
testl
cltd
cmp
push
add
fdivl
push
fsubr
imul
into
adc
dec
stc
add
sub
mov
dec
mov
call
add
cmpb
jne
in
das
push
or
cwtl
mov
cmp
testl
sub
mov
ja
jo
add
daa
jne
push
dec
nop
sbb
daa
pop
pop
lods
inc
push
sub
dec
jo
or
pop
pop
cmp
push
push
lock
xor
and
pop
mov
popf
mov
sbbl
in
lock
imul
cmc
ret
enter
add
repz
adc
push
int
sub
push
xchg
adc
pop
pop
bound
cmp
adc
pop
push
pop
fdivs
mov
pop
adc
adc
bound
push
aad
jnp
xchg
inc
call
xchg
inc
pop
dec
push
fadd
cwtl
mov
in
push
repz
push
push
pop
les
jg
in
hlt
mov
pop
mov
scas
jno
xchg
inc
mov
add
lret
gs
push
lcall
dec
ja
inc
shrl
test
pop
dec
daa
push
jge
lret
repz
ja
icebp
lods
sbb
mov
adc
push
push
mov
mov
xor
cmp
scas
and
pusha
outsl
sub
push
movsb
in
imul
std
and
daa
lods
mov
dec
xchg
mov
push
or
js
pop
dec
push
iret
arpl
push
pop
add
mov
xor
mov
jg
push
push
les
in
pop
call
les
cli
pop
mov
jl
pop
in
jl
or
inc
inc
mov
lods
inc
sbb
push
movlps
pop
arpl
xchg
gs
lods
jmp
into
jmp
push
pop
testb
mov
jmp
mov
and
int
fisubrl
rorb
rolb
mov
adc
es
aad
cmpsl
dec
je
inc
pop
les
and
fdivrp
and
add
xchg
iret
sti
pushf
sub
mov
and
call
dec
adc
mov
je
jmp
jge
and
call
xchg
test
mov
popf
aad
pop
push
dec
xor
adc
leave
inc
push
outsl
push
push
test
pop
mov
call
sbb
call
inc
mov
dec
sti
lcall
inc
push
test
unpckhps
rorb
rorb
sub
pop
addps
inc
or
mov
scas
dec
push
jecxz
mov
int3
push
or
mov
mov
sahf
push
xchg
dec
lea
inc
popf
leave
movsb
rclb
or
lea
test
mov
imul
sbb
imul
push
bound
dec
shlb
pushf
inc
loopne
pop
dec
xchg
les
dec
xchg
xchg
mov
arpl
in
mov
lret
mov
imul
les
mov
inc
inc
adc
inc
ss
sbb
cmpb
ds
xchg
fwait
lea
ret
jmp
mov
sub
mov
icebp
fsubs
out
xor
xchg
cld
ret
or
or
out
icebp
jne
mov
jp
adc
aas
pop
ret
xchg
add
sbb
dec
xor
xor
push
cmp
in
sub
pushf
pop
xchg
pop
ljmp
cmpl
cld
in
inc
mov
xchg
dec
mov
hlt
push
cs
insl
mov
sub
or
dec
pop
dec
dec
ljmp
adc
xor
arpl
cli
ss
cmp
je
jb
outsl
mov
sti
adc
sbb
into
and
aam
push
or
dec
cmpsl
pop
inc
adc
mov
nop
inc
adc
arpl
je
cwtl
cmp
clc
test
call
pop
sahf
jae
sbb
call
call
int3
loopne
mov
sbb
stos
xor
push
mov
out
xor
ss
or
dec
jg
jno
or
adcl
push
jle
in
in
adc
xchg
adc
aas
lds
and
inc
dec
sbb
add
and
and
loop
jb
loope
dec
inc
mov
lret
xchg
adc
lret
cmp
mov
out
mov
sub
dec
popa
or
xchg
in
fcomi
in
or
push
pop
inc
mov
jmp
loopne
or
call
les
mov
push
sub
outsl
push
mov
add
in
std
test
dec
fsubr
pop
cli
leave
jne
or
xor
jne
movsl
sbb
mov
mov
int
dec
sarl
xchg
dec
inc
pop
dec
and
cld
adc
sub
andb
out
add
xchg
sub
push
xor
mov
dec
dec
lods
ja
call
and
add
jnp
inc
cmp
movsb
out
enter
int3
das
push
add
push
sub
add
shl
or
inc
and
and
das
pop
inc
aaa
dec
xlat
lcall
push
cmp
lcall
mov
fimuls
bound
into
mov
pushf
enter
lret
int
in
sti
cmp
jecxz
adc
inc
adc
jl
push
push
or
imul
xchg
mov
pop
dec
push
inc
fsubl
push
js
mov
daa
rcl
mov
and
inc
sbb
fisttps
mov
push
insl
stos
jecxz
cmp
icebp
je
sbb
pop
notl
or
sbb
jae
and
or
dec
fsubrs
ljmp
pop
or
sete
pop
scas
mov
cmpsb
stc
pop
lock
popf
outsb
push
xchg
lcall
popa
inc
repnz
je
inc
pop
mov
outsb
push
mov
push
xlat
cmp
cmp
adc
test
rorb
xchg
xchg
in
push
pusha
mov
fcoms
xchg
pop
aaa
inc
jbe
adc
out
andl
sbb
xor
adc
in
add
cld
xchg
push
add
mov
sub
je
jae
outsl
sub
aad
test
rorl
dec
adcl
push
xlat
and
or
add
imul
in
fimull
ja
push
fs
pusha
pop
push
sub
sbb
or
test
add
xchg
or
push
les
movsb
adc
mov
clc
adc
stos
push
push
add
cmp
divl
mov
xlat
rorl
xor
xlat
sti
or
bound
imul
pop
sbb
shll
test
rolb
and
inc
add
cld
icebp
mov
inc
adc
inc
cwtl
call
jmp
mov
xchg
sbb
call
push
outsb
mov
push
push
cmpl
mov
xor
push
je
and
sbb
push
std
aad
aas
loop
sbb
push
adc
or
inc
pop
mov
test
adc
push
mov
clc
mull
push
jmp
int
int3
pop
or
stos
inc
or
mov
call
xor
popf
mov
adc
and
xor
fmull
fiaddl
aam
cltd
pop
add
hlt
xchg
adc
iret
or
roll
xchg
pop
mov
lret
sub
jne
sahf
jae
fstl
push
and
test
roll
sbb
or
fnstenv
fs
push
cmpb
dec
mov
call
sub
das
or
lret
or
test
inc
mov
rorl
mov
jb
leave
test
pop
or
jmp
sbb
inc
inc
sub
inc
fs
mov
lcall
faddl
insl
je
push
mov
adc
adc
inc
nop
sahf
jecxz
test
leave
push
cs
out
add
lret
mov
dec
sbb
adc
mov
mov
or
je
fnstsw
push
in
add
or
pop
jmp
mov
mov
and
or
pop
and
inc
sti
cld
inc
or
push
jmp
xor
sub
inc
inc
cmp
testl
gs
inc
enter
cmp
jbe
dec
enter
and
add
push
cli
lret
mov
jne
ds
dec
inc
add
push
inc
add
in
adc
mov
sbb
or
jne
cmp
repz
adc
pop
xchg
int3
hlt
mov
push
inc
fs
dec
sbb
inc
adc
sub
aas
cmc
mov
insb
mov
xchg
dec
mov
mov
repnz
and
inc
lock
dec
pushf
dec
push
lahf
gs
dec
dec
loopne
adc
adc
icebp
jb
add
call
sub
outsl
fstl
xchg
or
sbb
leave
dec
xor
cmp
mov
ret
dec
cmc
xchg
cmp
cmpsl
jnp
int3
push
daa
mov
shll
cmpsb
call
inc
or
push
adc
sbb
push
jae
shl
enter
into
sbb
or
sub
test
xchg
push
sbb
enter
enter
movb
jmp
movsb
adc
sbb
mov
or
mov
ss
cmp
mov
ds
add
sub
mov
aam
xor
inc
jecxz
pop
inc
leave
cmp
lods
pop
les
mov
xchg
add
add
stc
dec
jge
push
xor
cmpsl
or
int
insb
fucomi
cmp
mov
fldcw
cmp
pop
lods
pop
sub
xchg
bound
or
sub
xor
in
enter
shl
cmc
movsl
inc
ja
adc
cld
ret
cmpsb
fldt
push
mov
aam
loop
dec
sbb
dec
cltd
popa
add
adc
mov
mov
sbb
mov
xchg
mov
jl
sub
xor
xchg
mov
xchg
sbb
fs
mov
pop
jno
xchg
aam
cmpl
int3
mov
cwtl
adc
data16
xchg
insl
sbbb
mov
adc
dec
or
adc
or
cmp
or
psubsb
jo
gs
ficomps
pop
jbe
cmpsl
add
jno
mov
push
xchg
push
lea
or
xchg
test
or
ret
or
sbb
test
push
ljmp
inc
sbb
sub
test
adc
push
das
fdivl
xor
loop
jl
pop
pop
mov
lock
insl
sub
mov
sub
mov
xlat
mov
in
scas
into
cmp
and
and
adc
fldl
pushl
jp
add
je
mov
or
jnp
push
clc
sub
sbb
adc
nop
mov
les
and
lahf
sbb
fsubs
mov
pop
and
mov
mov
test
in
in
inc
fs
jg
dec
faddl
mov
rcrl
mov
aam
adc
ja
mov
leave
push
ja
and
xchg
xchg
mov
mov
dec
je
push
das
xor
push
loope
fsubrs
sbb
sbb
sub
mov
cmp
pop
sbb
cld
jne
fs
adc
cmp
hlt
and
cmp
cmp
xchg
adc
test
leave
mov
push
bound
mov
test
sbb
dec
popf
lods
adc
outsl
data16
mov
sub
mov
pop
mov
mov
dec
cld
outsb
mov
xor
andb
push
xchg
and
push
pop
mov
cmp
cmp
inc
leave
orb
sub
insl
jbe
xchg
push
jecxz
push
adc
mov
icebp
sbb
mov
add
daa
or
sub
sub
pop
and
xchg
mov
mov
sub
pop
dec
popf
sahf
jmp
add
mov
add
or
out
push
mov
xor
mov
sbb
xor
mov
jmp
icebp
shr
inc
or
popa
mov
mov
push
leave
cs
dec
xor
or
inc
nop
or
clc
or
mov
lret
mov
xchg
mov
inc
add
push
jg
mov
icebp
and
mov
jne
adc
roll
lahf
in
les
in
xchg
xor
mov
jb
mov
dec
gs
push
or
pop
sbb
dec
mov
pop
jne
jno
insb
pusha
sub
in
mov
push
movsl
pop
or
cld
or
add
mov
pop
cltd
sarb
mov
rclb
lds
in
movsl
ret
pop
faddl
xchg
cwtl
testl
pop
sub
divb
inc
jmp
mov
das
cli
mov
push
adc
or
notb
repnz
push
dec
mov
sbb
adc
lea
jne
jne
cwtl
xor
dec
cli
cwtl
aaa
push
pop
fwait
cmc
pop
or
add
xchg
je
gs
out
call
and
das
rcrb
or
ret
and
lea
jb
jp
popf
adc
orb
xor
xor
push
lds
nop
notb
mov
mov
arpl
xor
push
xchg
xchg
call
je
scas
sub
sbb
fldl
inc
lcall
sbb
inc
or
call
inc
inc
outsb
cltd
arpl
les
pop
mov
dec
mov
int3
mov
call
lock
js
cld
mov
and
test
adc
sbb
jo
dec
pop
pop
push
jle
pop
mov
adc
adc
test
add
mov
sub
push
inc
sarb
sub
cmp
adc
adc
adc
xor
pop
jecxz
pop
clc
push
adc
call
or
shlb
push
scas
xchg
or
and
bound
dec
dec
jmp
lret
jle
pop
xchg
push
in
push
mov
sub
jo
dec
cwtl
xchg
in
aad
or
xchg
leave
jmp
xor
into
or
test
push
add
sbb
mov
rclb
call
bound
aad
fsubl
ja
mov
inc
fsubrl
inc
call
adc
daa
push
sahf
xchg
lock
pop
and
pop
dec
scas
inc
cli
adc
or
xor
push
inc
call
rcrl
daa
dec
rcll
cli
rorl
call
xchg
adcb
call
mov
pusha
pop
out
lret
or
repz
fsubs
dec
xchg
aam
xor
dec
adc
fidivrs
hlt
xor
xor
dec
js
das
int3
pop
pushf
repz
or
in
jne
jle
fsub
test
xchg
pop
and
mov
inc
xchg
mov
out
fs
xchg
mov
xorl
es
shrl
ret
pop
sbb
push
mov
addb
jo
mov
enter
xchg
push
jns
adc
push
jne
mov
insl
mov
hlt
jne
jo
je
push
pushf
mov
push
lcall
mov
cmp
mov
mov
xor
or
adc
test
scas
rorl
add
fldenv
out
pusha
xchg
jl
adc
bound
jne
jnp
xchg
mov
sar
xor
mov
enter
lds
ret
and
xor
out
rclb
xor
pop
std
push
and
sub
jg
mov
mov
mov
popa
add
sub
mov
dec
cld
add
pop
ret
mov
xchg
sub
les
test
es
jne
push
or
leave
push
dec
mov
adc
dec
js
inc
xchg
mov
cmpb
sbb
jne
mov
pop
inc
cmpsl
test
adc
xchg
push
dec
test
xor
cmp
cs
lret
adc
adc
or
mov
pop
in
aaa
fs
das
adc
xchg
mov
sbb
xchg
lods
cmc
nop
fmul
lods
es
rorb
mov
push
xchg
jbe
adc
and
adc
and
xchg
push
push
or
cmp
movsl
aaa
adc
enter
push
adc
xchg
push
jmp
das
adc
xchg
mov
movsb
lds
cmp
sub
adc
adc
inc
xchg
nop
fs
dec
les
insb
and
les
sbb
adc
rclb
enter
sub
aas
inc
jge
jno
mov
cs
push
mov
pop
dec
js
xor
loop
sbb
mov
loope
jecxz
enter
popf
jb
lret
test
push
mov
sub
xchg
imulb
push
popf
inc
nop
dec
enter
nop
push
int
adc
dec
xor
bound
jle
ljmp
add
jl
jp
push
sar
mov
xchg
loope
sub
dec
xchg
faddl
enter
cmovg
sub
mov
adcb
and
adc
push
scas
push
adc
dec
xorb
push
and
rcrb
mov
pop
cmovnp
adc
pop
movsl
xchg
outsb
scas
dec
dec
cmpsb
adc
ljmp
or
adc
pop
push
mov
jnp
push
push
into
add
mov
adc
insb
dec
pushl
dec
lods
adcb
lods
jno
sbb
test
dec
mov
popa
ret
mov
test
or
and
or
sub
and
mov
int
jnp
add
lds
test
aas
xchg
adc
and
inc
out
test
push
mov
test
push
mov
sub
cmpsl
das
nop
sbb
inc
mov
pop
sub
jbe
or
push
sub
or
xor
inc
push
mov
lret
icebp
jo
and
adc
inc
es
sub
stos
sbb
cli
fistpll
or
rcrl
call
pop
add
iret
and
nop
add
jne
mov
das
sti
js
hlt
push
std
push
pop
xor
decb
inc
add
and
int3
lahf
and
sti
and
add
std
mov
stos
fwait
out
mov
es
push
jo
pop
push
lcall
dec
aad
push
push
ja
jno
decl
dec
in
das
mov
scas
insl
xchg
and
loop
adc
add
dec
and
cltd
lods
push
lock
push
mov
int
push
xlat
xchg
push
and
jns
mov
xchg
jnp
lods
je
or
rcll
push
adc
iret
int3
adc
inc
enter
or
sbbb
xor
orb
aad
sbb
sub
pop
call
push
cltd
dec
mov
stc
push
sbb
push
xchg
inc
in
mov
out
sub
insl
add
call
xor
cwtl
hlt
add
push
out
in
add
ds
jmp
push
jnp
push
mov
in
or
add
ficompl
rolb
rorl
pop
add
clc
push
movsl
lods
xchg
cli
movsl
dec
adc
decb
cmpb
adc
in
aas
xor
sbb
cltd
push
mov
stos
add
add
push
pop
adc
jo
lret
jnp
pop
movsl
in
inc
call
add
pop
in
std
xchg
out
stos
jge
jp
dec
push
in
inc
movsb
pop
stc
mov
push
out
fadd
and
push
push
or
xchg
push
pop
xchg
cltd
xor
or
inc
cwtl
xor
lds
add
aaa
xchg
cli
testb
shlb
sbb
dec
bound
inc
int3
and
xor
sbb
pusha
and
adc
lret
sub
sub
sbb
mov
sub
roll
jg
inc
sub
push
sub
add
shr
call
jl
in
sbb
adc
mov
cmp
and
out
call
fisubl
mov
test
lahf
or
mov
inc
and
cmp
mov
enter
mov
dec
sbb
mov
fists
cmp
mov
and
movsl
push
cmp
sub
test
nop
add
mov
nop
sbb
xor
sbb
mov
pop
lahf
fs
add
dec
push
imul
pop
test
sub
jmp
adc
cwtl
inc
fdivrl
dec
loope
sub
lahf
xchg
add
inc
incb
cmpsb
fnsave
stc
cld
or
and
jnp
dec
dec
lods
cmp
ret
sub
push
sub
xchg
int
jne
jns
and
adc
jne
or
and
jmp
mov
dec
push
mov
pop
imul
movsl
mov
cmp
in
add
xchg
out
and
xor
scas
add
or
or
clc
jmp
enter
pop
adcb
je
add
mov
test
xchg
dec
inc
mov
adc
mov
cmp
mov
mov
add
mov
enter
adc
jno
xchg
mov
sub
mov
ret
nop
jbe
jp
cltd
adcl
xchg
mov
xchg
adc
lock
out
push
mov
lcall
call
push
inc
adc
push
xchg
cmp
push
cmpsb
jmp
sub
dec
cwtl
mov
loop
pop
je
sub
addb
xor
div
add
mov
shrl
imul
sub
divl
sub
push
push
dec
jbe
outsb
and
in
xor
fs
mov
lahf
rorb
sub
xor
into
aad
jne
cltd
and
push
jne
aas
adc
push
cmp
sbb
or
add
xor
popf
les
inc
and
sbb
test
xor
hlt
out
xchg
adc
enter
jl
push
test
aad
scas
mov
adc
lahf
add
das
fmuls
and
popf
mov
mov
push
rolb
dec
cmp
repz
jge
jmp
and
push
mov
adc
andl
jno
mov
inc
sarl
inc
or
xor
pop
adc
or
idiv
sarb
adc
push
rcr
incb
jne
fistps
icebp
mov
jl
cmovle
test
js
pop
xchg
xor
pop
and
mov
test
sbb
movsb
mov
adc
mov
int3
xor
inc
and
sbb
adc
loop
icebp
cmc
orb
push
mov
aaa
sahf
mov
lods
dec
mov
adc
cwtl
ficoms
mov
cltd
push
int3
leave
in
out
mov
int3
or
test
inc
adc
inc
cld
es
and
cmp
movsb
fists
push
call
aam
and
mov
cmp
jns
repnz
stos
and
pop
adc
inc
lods
enter
aaa
jne
mov
int3
add
jle
rcll
jae
xchg
mov
xor
out
jmp
dec
les
pop
fsubrs
repnz
sahf
aam
sub
icebp
xorb
jne
fnstenv
xor
dec
lret
bound
sbb
mov
or
aad
cmp
lods
sbb
lahf
lea
inc
iret
mov
rolb
in
cmp
sbb
jo
das
stc
ljmp
outsb
rcrb
sbb
int3
cli
sub
cs
lahf
and
js
lods
push
dec
push
out
jne
mov
int
jecxz
xchg
mov
adc
xor
es
push
aam
jp
mov
pop
cwtl
je
dec
cld
dec
push
in
jno
push
jg
xchg
cmpsl
pop
push
ret
mov
es
mov
mov
leave
out
add
mov
out
dec
inc
inc
enter
fstps
mov
and
push
push
xor
sbb
subl
sub
cltd
les
cmp
idivb
fcoms
sbb
cmp
pop
dec
xor
hlt
sbbl
inc
lret
hlt
jl
ret
add
adc
or
xchg
ss
mov
and
loop
mov
add
and
and
stc
jne
sbb
cltd
dec
into
cwtl
sub
cmp
push
les
flds
lret
popa
xor
call
fmulp
clc
pop
les
adc
rolb
clc
mov
dec
adc
fsubr
xlat
pop
subb
int3
add
sbb
scas
cmc
or
leave
and
push
cmp
and
pop
int
test
int3
push
bound
nop
fcoml
loopne
mov
xchg
xor
pusha
and
jl
xchg
dec
inc
mov
fsts
loop
and
xchg
or
cld
cmp
jmp
subl
in
adc
jge
jno
pop
adc
stos
mov
jle
nop
jge
or
mov
test
mov
notl
inc
adc
push
sub
mov
iret
pop
adc
xchg
sub
cmp
add
and
jl
stos
and
insb
cld
and
jmp
mov
adc
sbb
and
test
test
dec
cmp
leave
test
inc
pop
mov
lods
mov
jl
cmp
jb
jae
xor
sbb
or
xchg
adc
push
sbb
nop
in
movsb
hlt
mov
stos
mov
push
data16
mov
and
adc
xor
sbb
xor
stos
push
lret
std
xchg
and
cld
ds
pusha
mov
sub
dec
lds
mov
jb
aam
mov
leave
icebp
leave
sub
xchg
cmp
loop
push
or
or
cmp
xor
pop
and
cmpsl
pcmpeqb
sti
push
pop
jmp
xchg
sbb
mov
in
hlt
outsb
and
sbb
rclb
sbb
jge
inc
adc
jp
jb
fsubrs
or
add
xor
call
cmp
mov
lock
popf
xor
push
xchg
cmp
sub
fidivs
lret
sub
push
es
add
test
inc
in
icebp
insb
sub
mov
jne
xor
fwait
out
dec
push
ss
lahf
adc
xchg
ljmp
mov
clc
sub
mov
or
pop
pushl
je
je
pop
stc
add
movsb
mov
ja
xchg
add
mov
std
nop
mov
inc
add
popa
decl
jo
call
dec
pushf
lret
xchg
pushf
scas
inc
data16
sar
nop
in
and
das
cwtl
or
or
sti
inc
push
les
sar
or
daa
mov
stos
cmp
pop
and
push
jle
pop
in
cmp
mov
sub
mov
mov
or
mov
outsb
inc
fs
sbb
mov
bound
mov
call
mov
roll
shr
sub
xchg
sub
pop
sub
popf
push
sub
adc
pop
ficoml
ret
adc
je
sub
jae
out
or
add
or
je
sarl
push
pop
lds
push
mov
dec
dec
push
sbb
rcll
add
mov
push
nop
mov
mov
inc
jecxz
loop
xor
test
sub
das
jnp
mov
add
add
pop
dec
and
loope
jmp
sbb
xchg
and
jmp
shl
jmp
mov
mul
loopne
or
daa
ret
aaa
cli
or
and
dec
movsl
push
mov
lea
push
or
or
mov
sbbb
es
xchg
ret
sbb
add
inc
inc
xor
add
pop
dec
mov
xchg
inc
dec
mov
xchg
pusha
mov
inc
and
ret
jae
adc
fcmovne
and
leave
shlb
rolb
adc
out
adc
std
mov
mov
in
test
bound
adcl
xchg
fsubs
cmp
fcoml
std
mov
push
and
jne
jle
and
sub
dec
or
outsl
dec
add
adc
jle
ja
mov
out
cmp
sub
movzwl
sbb
testl
aas
or
mov
mov
mov
or
add
jg
sar
fbstp
loopne
clc
xchg
ds
les
jne
jle
and
aas
cld
jb
pop
jns
ret
adc
jae
jge
imul
sbb
sbb
inc
daa
push
push
out
lahf
js
xchg
sbb
imul
js
inc
or
add
inc
inc
add
mov
pop
xchg
jb
fistpll
xchg
sub
nop
push
mov
mov
cmpl
jne
ds
dec
mov
nop
pushf
xchg
or
adc
mov
fimull
adcl
mov
scas
pop
mov
and
mov
dec
push
mov
mov
daa
call
cmp
xor
lret
push
testl
mov
test
lods
fcmovnb
mov
roll
scas
or
mov
xor
shr
sub
les
sub
enter
popa
int3
shlb
aam
shlb
lahf
push
adc
rcr
xor
jb
jp
mov
popa
sbb
aam
js
or
nop
cs
and
pop
mov
mov
lods
mov
xchg
leave
leave
loope
cmpsl
mov
movsl
mov
test
xchg
mov
inc
xor
popf
and
fdiv
imul
mov
mov
dec
mov
icebp
lods
and
xlat
pop
sti
fs
and
push
jmp
push
pop
push
adc
mov
fs
and
aad
adc
int3
movl
jmp
clc
in
and
jno
adc
adc
imul
or
testb
insb
pop
push
adc
ret
jne
test
sbbb
rorb
add
sub
mov
cmp
jmp
pop
sbb
rorb
and
lods
sbb
xchg
mov
imul
push
cmc
mov
jge
aad
cmc
mov
xchg
inc
loopne
xchg
xchg
scas
xor
xor
inc
cmp
xor
xor
adc
and
shrb
bound
pop
mov
sub
rclb
arpl
jmp
add
outsl
jne
mov
imul
cmp
int3
xchg
push
inc
imul
rorl
ror
dec
lods
cmp
outsl
mov
sub
jnp
xchg
sbb
mov
or
add
cmpsb
push
cmpsb
adc
dec
test
orb
adc
and
stos
mov
sub
out
adc
loope
inc
cmp
and
inc
mov
scas
leave
loop
call
jns
dec
sub
push
jmp
jle
mov
adc
in
dec
xor
mov
mov
mov
jb
idiv
push
push
insl
daa
push
pop
clc
lea
lods
or
je
cld
lret
xchg
enter
outsl
mov
add
lods
shld
adc
and
imul
xor
cmp
loope
sub
mov
sahf
sub
enter
insl
movb
mov
push
pushf
gs
mov
mov
in
call
mov
jecxz
xchg
mov
je
pushf
push
sbb
mov
popa
push
mov
imul
or
fsubl
mov
std
pushf
adc
movsb
xchg
jbe
cltd
xor
mov
cs
pop
hlt
arpl
adc
pop
shrb
mov
push
repz
sbb
and
xchg
jb
jns
sbb
incl
dec
ja
enter
xchg
adc
and
in
xchg
sub
add
out
lock
pop
xchg
aam
pop
fcoml
xchg
and
neg
sbb
mov
int
hlt
adc
or
icebp
xchg
int3
pop
scas
movsb
pop
fadd
outsl
lea
push
push
pop
mov
fcomp
sbb
or
subb
roll
in
mov
mov
cld
adc
xchg
les
or
sub
xchg
es
jl
loope
inc
subb
cmp
push
xor
adc
pushf
outsb
or
inc
jno
movsb
ja
test
xor
adc
adc
add
les
sbb
mov
ljmp
fsubs
mov
add
or
and
inc
pop
test
in
xchg
inc
add
stos
ret
mov
iret
dec
out
sti
cs
push
in
pop
pop
push
mov
xchg
out
and
jg
jecxz
jns
inc
dec
mov
dec
cmp
daa
cld
adc
mov
ret
test
movb
jo
nop
mov
fdivrl
push
in
lret
stos
xchg
mov
jne
jbe
and
mov
adc
lock
jge
hlt
call
or
xor
or
dec
shlb
imul
stos
loop
add
cmpsl
push
popa
push
les
in
call
xor
add
jae
fs
dec
push
push
lds
lcall
mov
orb
pop
cltd
xor
adc
pcmpeqw
sarb
mov
stc
roll
adc
into
or
pop
decb
sub
rolb
sub
aam
sbb
push
push
enter
call
clc
push
shl
nop
jo
inc
adc
cli
push
push
xor
mov
in
add
shlb
data16
sbb
cltd
mov
adc
sbb
jne
test
lret
and
add
dec
cmp
dec
xchg
or
add
mov
jne
call
adc
aad
pop
leave
mov
add
push
inc
adc
mov
xchg
cltd
lds
enter
mov
xorl
adcb
push
add
into
leave
adc
inc
loope
adc
mov
ds
je
sub
adc
call
adc
sbb
js
push
sar
xor
mov
jl
sahf
imul
adc
in
test
addr16
fs
movsb
push
push
sbb
pushf
mov
ds
and
add
xor
mov
add
testl
inc
pusha
rclb
push
imulb
sahf
adc
add
xchg
fwait
pop
jae
push
sti
push
lea
cmpsb
inc
out
or
xor
push
inc
subb
icebp
lock
scas
test
loop
xor
lea
inc
sbb
push
aaa
dec
pop
add
mov
leave
mov
sub
and
outsl
stc
mov
push
adc
fistps
les
sub
imul
frstor
addl
sub
mov
cmp
jge
jecxz
adc
js
mov
push
data16
xchg
jmp
xor
gs
adc
imul
push
mov
adc
add
add
dec
and
mov
pop
push
xchg
and
adc
add
test
pushf
sub
and
mov
adc
popf
popf
popa
xchg
in
sbb
rol
mov
cmp
jae
jae
dec
mov
push
push
push
shll
cltd
sbb
push
jg
mov
fidivrs
int
add
cmp
ficomps
or
cmp
out
push
jge
and
sbb
cmp
sbb
outsb
pop
sub
push
jbe
push
jb
mov
aaa
in
xchg
inc
mov
add
push
and
cld
mov
pushf
pop
inc
mov
jle
xchg
shll
sbb
mov
dec
inc
dec
and
pop
xor
scas
push
or
ja
pop
mov
cmp
mov
lds
andl
cmp
mov
or
push
hlt
or
or
hlt
addb
adc
sbb
sub
xchg
and
dec
call
outsl
pop
inc
or
sbbb
test
lock
mov
call
xlat
mov
cwtl
sub
push
jne
and
nop
inc
xchg
cwtl
mov
mov
adcl
sbb
outsl
jecxz
adc
pop
and
cmp
adc
push
int3
sbb
push
push
decl
dec
xchg
scas
xor
sbb
add
je
and
sti
sub
push
sbb
mov
in
jne
push
dec
clc
imul
hlt
or
inc
push
push
shr
loopne
mov
popa
pusha
lea
cmp
fisubrl
inc
jg
push
mov
dec
add
inc
dec
ret
jle
daa
lret
test
dec
dec
lods
aaa
pop
mov
sub
mov
les
pop
clc
xor
or
add
push
push
push
or
push
leave
push
pop
sbb
xchg
test
rcrl
sbb
sbb
sbb
mov
sti
mov
in
test
mov
in
out
notb
or
jmp
lcall
lods
dec
adc
popf
adc
les
push
jmp
call
lea
lock
cltd
dec
or
sbb
movsb
jmp
cs
xchg
inc
js
adc
test
add
adc
adc
sarb
or
jmp
or
push
pop
adc
mov
adc
dec
in
cld
and
gs
ret
and
decb
inc
adc
sub
dec
fmull
jmp
and
adc
ret
dec
dec
xchg
pop
inc
cmp
jno
scas
inc
mov
mov
arpl
mov
mov
mov
cmpsl
jge
inc
push
adc
push
andl
movups
subl
inc
sub
mov
mov
cmp
adc
sub
pop
repnz
lret
call
popf
ljmp
or
pop
shlb
sub
nop
cld
jmp
leave
outsl
adc
test
mov
xchg
push
lods
stc
or
pop
in
popa
sbb
sub
testl
cld
adc
mov
mov
add
cmc
jb
insb
push
or
jb
in
nop
pushf
or
inc
jae
cmc
imul
and
int3
jmp
xchg
add
add
and
in
cs
adc
gs
sbb
inc
xchg
ds
in
push
push
jge
test
inc
movsl
in
ret
rorl
sbb
test
dec
add
es
nop
dec
je
push
push
mov
or
cld
dec
push
cmpsl
dec
xor
jbe
and
inc
adc
adc
push
dec
jle
psubusb
xlat
pop
gs
adc
cld
add
xlat
fs
and
and
adc
repnz
pop
mov
jmp
aad
lods
mov
ret
nop
mov
aam
int3
mov
out
clc
and
mov
or
fldpi
js
cmp
push
xor
dec
dec
pop
inc
or
aas
mov
std
push
pop
dec
cld
mov
pop
test
jmp
push
repnz
bound
bound
dec
xor
mul
pushf
dec
enter
in
sub
cmp
push
sub
dec
loop
cmc
adc
and
jbe
fs
sbb
lea
cmp
scas
lret
push
or
mov
xchg
call
mov
dec
decb
xchg
js
mov
scas
push
and
mov
pop
xlat
mov
dec
out
subb
setne
xchg
dec
andb
sbb
sbb
inc
and
fsubr
test
cmc
mov
and
arpl
inc
adc
and
sahf
pop
incb
pushf
insl
fcoms
pop
mov
ljmp
push
std
mov
xor
pop
xchg
pop
mov
in
in
mov
jmp
sbb
or
xor
aas
fwait
xor
add
call
imul
cmpsb
lds
rol
ret
jle
mov
and
addr16
mov
ds
push
mov
and
cwtl
rorb
ja
sbb
jne
and
xchg
in
loopne
rclb
xchg
pop
dec
shrb
xor
cmp
aam
pushf
popf
je
jl
inc
jnp
cmp
jg
mov
push
push
dec
lahf
lcall
xchg
mov
scas
inc
sbb
xchg
loopne
jnp
mov
xchg
pop
mov
sbbl
jne
cmp
pop
jbe
repz
repnz
lcall
mov
xor
out
cmpsl
fcompl
add
loope
xor
cs
cld
leave
push
mov
cs
inc
sar
hlt
lahf
stos
scas
mov
add
dec
jbe
inc
inc
push
xchg
sbb
adc
push
and
shll
cltd
and
dec
enter
dec
sti
or
hlt
xchg
repz
ret
push
xchg
inc
andl
ret
dec
adc
push
in
iret
pushf
jb
std
lods
fbld
push
jne
push
xchg
loopne
pop
mov
divl
xlat
mov
mov
cmp
inc
add
cmc
nop
fwait
call
fcoml
neg
or
push
sarl
lods
push
sub
cmc
ljmp
xor
mov
mov
out
pop
ret
stos
push
cltd
add
dec
sbb
sub
hlt
inc
lret
xorb
orl
in
xor
mov
and
pusha
push
leave
enter
dec
or
nop
aas
in
fcoms
test
arpl
xchg
and
stos
dec
mov
push
popa
es
mov
incb
inc
inc
ret
dec
popa
subl
int3
add
push
lods
xlat
adc
test
out
sti
pusha
stos
lock
stos
push
aas
mov
imul
jl
inc
mov
fisubrl
loopw
std
sub
and
data16
mov
mov
jnp
xchg
push
pop
xor
or
xchg
lock
pop
lcall
add
es
inc
inc
sbb
add
faddp
pop
and
and
cwtl
xchg
call
xchg
pop
sbb
int3
imul
adc
loop,pt
jmp
adc
and
xchg
shll
lea
ss
mov
fnstsw
test
rorb
je
hlt
jmp
lods
andb
xchg
xlat
push
push
adc
shr
testl
inc
jae
test
cld
lock
mov
mov
fldl
dec
mov
sbb
leave
in
fimull
cmpsl
andb
inc
add
pop
in
sbb
pop
in
bound
orl
bound
dec
clc
dec
xchg
inc
push
aas
or
enter
push
lods
dec
adc
outsl
shlb
jne
jno
push
movsb
inc
add
lds
cld
xchg
jne
adc
call
and
push
and
xchg
inc
adc
jae
sbb
inc
adc
and
xor
cmp
cmp
cmp
xchg
test
adc
cli
lret
push
mov
rclb
xor
sarb
pop
rolb
and
push
call
adcb
push
cmp
xchg
push
in
lods
mov
mov
dec
mov
iret
add
sub
add
js
inc
or
xor
lods
xor
ret
cmp
imul
cli
push
sarl
mov
pusha
insl
mov
mov
lock
das
mov
bound
in
fists
mov
in
push
fmull
add
xchg
mov
adc
xchg
xchg
decb
mov
and
push
push
push
sti
imul
bound
in
sbb
je
loopne
icebp
sbb
cld
movsl
scas
xor
add
std
dec
pop
and
enter
out
xor
outsb
push
sbb
and
dec
in
push
mov
push
mov
js
jmp
leave
mov
add
or
push
daa
fs
loopne
jnp
and
or
insl
or
mov
cmp
mov
jecxz
dec
sbb
push
pop
push
inc
xchg
jnp
adc
mov
mov
dec
scas
add
std
lret
leave
hlt
cmpsw
enter
icebp
sbb
ja
sub
inc
adc
insb
scas
inc
ljmp
loopne
and
add
and
xchg
cld
test
inc
mov
lea
and
dec
push
push
cmp
pop
xor
sub
inc
rcrl
scas
sbb
push
sbb
data16
mov
and
mov
xlat
stc
lret
in
rclb
and
inc
sub
movsb
xchg
add
js
test
mov
insl
fsubrs
sbbl
mov
adc
mov
add
or
mov
fildl
inc
cmp
jl
popf
aam
push
inc
outsb
mov
xor
in
out
push
xchg
rorl
icebp
ljmp
das
push
sahf
in
aad
fmull
mov
lds
stc
add
mov
xchg
jnp
and
sub
push
push
or
push
lock
push
ljmp
shlb
movb
inc
jmp
ret
in
push
or
push
add
icebp
jae
andb
aam
lret
push
adc
pushf
call
fsubrl
repz
and
sbb
push
and
ret
gs
push
pop
fs
xor
xor
sbb
sbb
test
push
ljmp
add
add
mov
adc
dec
lock
sbb
daa
or
ja
push
shrb
push
and
insl
inc
cwtl
add
xor
lea
sub
pop
fisttpl
ret
and
enter
jg
lock
inc
hlt
and
inc
mov
mov
pushf
in
mov
push
in
dec
sbb
adc
sbb
and
mov
jno
xor
divb
push
jbe
xor
and
in
add
call
push
push
pop
jmp
mov
dec
cmpsl
mov
rcrl
xor
jle
push
sbb
pusha
repnz
xor
ja
in
adc
scas
in
mov
imul
test
sbb
or
adc
loopne
push
pop
push
cmp
and
lahf
push
pop
inc
pop
sbbb
fwait
fwait
test
sub
pop
cmpsb
test
adc
xor
xorb
in
inc
pop
xchg
notl
push
inc
and
and
push
dec
pop
mov
sti
adc
out
dec
sbb
into
dec
mov
call
adc
pop
out
loopne
lahf
mov
pop
aad
add
adc
or
clc
push
test
xor
xor
stos
mov
cmp
idiv
adc
test
ss
fiadds
rolb
add
push
jne
pusha
pop
mov
cmpsl
jae
or
enter
sbbb
lcall
add
mov
jl
mov
sbb
mov
inc
or
and
dec
pushf
fs
mov
fs
adc
and
nop
test
sub
test
pop
daa
shll
sahf
jecxz
push
dec
adc
pop
cld
mov
movsb
bound
mov
insl
je
sbb
clc
dec
les
xchg
inc
dec
push
stos
xor
call
mov
cltd
xlat
push
mov
je
notb
adc
push
cli
mov
jne
adc
push
ss
inc
or
scas
cmp
cld
mov
or
adc
rep
and
gs
sbb
jp
xchg
popf
and
push
or
mov
mov
std
sub
dec
fnsetpm(287
xor
and
stos
in
mov
shll
and
lret
pop
mov
mov
mov
pushf
add
out
nop
and
sub
nop
loope
call
xor
mov
add
nop
aas
sahf
fsubs
call
mov
and
fsubrs
shlb
xor
push
jg
xchg
mov
pop
or
sbb
xchg
and
aaa
jp
mov
and
mov
loope
xor
je
mov
push
bnd
adc
lret
mov
adc
push
jle
aas
add
add
pop
call
add
lcall
push
push
out
dec
fs
pushf
adc
sub
loop
dec
repz
sub
dec
test
add
and
push
or
les
fs
cwtl
pop
xchg
loop
xor
insl
out
push
lea
test
mov
cmp
fs
sub
jle
xchg
stc
and
push
adc
shlb
xchg
les
sub
push
fs
sbb
add
test
dec
daa
js
xchg
push
cwtl
pop
inc
inc
and
call
dec
cmp
adc
fbstp
sbb
push
sub
and
in
lea
mov
adc
push
push
xor
es
jle
or
shr
xor
xor
fldl
pushl
adc
add
jnp
add
lods
adc
xchg
add
jae
fildl
cmp
push
jge
lea
imul
dec
popa
mov
mov
push
push
ret
cld
lods
push
scas
xor
jbe
xor
pop
mov
inc
aas
pop
pop
xchg
lods
ret
scas
std
mov
and
pop
pop
cwtl
adc
sub
vmovhps
insl
xor
sbb
inc
pop
mov
out
sub
sbb
jb
lods
popf
fimuls
ret
fbld
mov
loop
rorl
int3
push
dec
xchg
push
mov
cmpsb
fs
sti
in
js
testl
xor
enter
and
mov
test
sbb
add
pop
lock
jg
pop
stos
jnp
adc
jmp
push
cli
hlt
les
sbb
test
and
dec
rcr
and
and
cmp
jne
inc
aad
enter
pop
int3
inc
repz
inc
es
mov
push
cmpsb
dec
push
roll
mov
fs
call
pop
inc
gs
jns
call
adc
inc
cmp
roll
outsl
and
imul
or
push
je
jne
scas
pop
xor
mov
or
cwtl
adc
jg
mov
cmp
sub
add
sbb
cmp
cmp
js
mov
pop
cld
lock
pop
shl
pop
rol
pop
pop
cmp
dec
push
daa
cmp
jne
ds
lcall
mov
pushf
xchg
sarb
in
int
mov
dec
leave
inc
fsubrs
je
js
and
je
mov
cmp
in
iret
mov
cld
and
cmp
jne
nop
insl
cmp
add
fs
dec
xlat
mov
imul
push
push
inc
jg
dec
sub
push
test
mov
xchg
dec
imul
pop
je
push
push
out
mov
dec
pop
add
cmp
inc
movsb
adc
in
or
and
mov
pop
xchg
xchg
dec
mov
mov
xor
stc
add
je
inc
inc
pop
cmpb
push
add
or
or
mov
sub
lea
xchg
pop
jmp
test
sbb
or
leave
push
sub
xor
jb
fsts
lock
push
fistl
push
fildll
mov
test
loopne
inc
mov
lock
mov
inc
lods
cmp
ljmp
mov
xchg
in
mov
pop
mov
inc
add
test
jo
pop
stos
ljmp
insb
xor
cwtl
pop
in
jmp
jbe
jmp
jle
mov
or
adc
jne
fdiv
jge
jle
test
ret
mov
adc
xor
iret
xor
push
xchg
out
xchg
pusha
stc
jae
test
jmp
sbb
sbb
xchg
addl
and
push
sub
inc
mov
inc
loopne
adc
scas
cs
push
je
mov
inc
std
cld
cmpsl
cltd
jg
inc
lods
data16
mov
cld
adc
jl
pop
bound
std
mov
leave
push
or
push
imul
dec
add
lcall
mov
cmpl
or
fnstcw
shlb
mov
xor
add
dec
mov
nop
cli
sub
daa
xor
sub
inc
cmp
jmp
ds
inc
mov
arpl
mov
test
in
test
add
out
loopne
call
dec
jmp
test
repz
add
adc
jmp
push
xchg
and
push
mov
inc
dec
hlt
adc
jne
stc
pop
test
sti
repnz
adc
sbb
test
inc
gs
adc
dec
fisubl
mov
shrl
inc
adc
test
adc
mulb
in
out
add
xchg
shrl
inc
push
mov
or
cli
pop
adc
cmp
or
xchg
gs
cmp
mov
clc
filds
push
adc
cwtl
sbb
and
sbb
sbb
das
pxor
fcmovne
bound
adc
adc
mov
int3
ret
adcb
and
adc
push
jb
sub
jle
inc
or
push
and
xchg
inc
or
addb
jae
xchg
loop
hlt
shll
mov
sarl
test
adc
out
mov
int
ja
push
xchg
adc
or
sbb
cld
inc
dec
cmp
sbb
pop
std
or
push
inc
mov
add
pop
push
fistpll
leave
lcall
sub
lods
data16
jle
out
mov
je
dec
add
test
rorl
xor
imull
mov
mov
adc
sbb
mov
push
scas
and
cld
push
inc
mov
adc
push
push
dec
dec
js
mov
aad
adc
fisttps
inc
push
lock
aam
enter
loope
bound
push
fildl
or
or
dec
enter
stos
scas
orl
or
mull
xor
sbb
mov
sbb
scas
cwtl
fdivrl
inc
pop
lcall
sub
pop
mov
daa
adc
movsb
pop
sub
xlat
inc
test
sbb
inc
cmp
push
xchg
pop
jns
mov
lea
adc
or
or
mov
adc
scas
add
sti
add
stc
popa
and
sub
or
nop
add
xor
and
push
sub
sbbl
mov
idivl
enter
lahf
outsb
mov
jo
lea
add
add
mov
xor
insb
adc
leave
pop
fldl
test
cmpsb
xor
jmp
mov
je
xchg
and
sbb
sub
ficoml
push
push
mov
pop
fdivrl
jmp
out
adc
and
inc
sbb
push
add
xchg
inc
outsl
cmpsb
inc
add
in
mov
or
mov
adc
cli
or
inc
in
pop
loopne
adc
ret
dec
inc
mov
test
push
call
push
and
mov
sub
mov
movsl
sbb
std
push
aas
and
push
lea
test
test
mov
adc
aas
test
cmp
adc
mov
jnp
jb
inc
jp
rorb
mov
cmp
mov
and
rorl
pushf
jne
in
dec
popa
and
or
sbb
sbb
ds
add
call
and
test
fadds
aam
ds
dec
stos
mov
pop
or
xor
cmp
jge
add
push
dec
cmp
movsl
and
loopne
push
mov
fsubs
adc
jle
sbb
loop
dec
pop
cmp
or
mov
jecxz
xor
push
pop
ret
mov
jmp
clc
jno
adc
lock
jl
push
dec
push
jp
addl
scas
push
dec
push
sub
xchg
std
adc
loopne
jmp
cmc
repz
je
xchg
idiv
push
adc
or
out
adc
sti
pop
lock
fwait
adc
and
fadd
xchg
mov
cmp
adcl
and
mov
movsb
lock
xchg
sub
xor
xchg
cmpb
jge
adc
push
mov
cmp
pop
mov
cli
ss
add
inc
xchg
mov
sahf
icebp
movsb
xchg
test
inc
or
mov
sti
inc
mov
enter
ja
notb
xlat
out
enter
pop
jmp
cmpsb
enter
jne
pop
outsl
ffree
leave
jbe
cpuid
mov
pop
shrb
and
jmp
test
je
jge
test
loope
sub
jo
push
adc
out
and
andb
mov
mov
adc
inc
and
and
inc
gs
xor
xor
pop
mov
pop
rorb
jmp
mov
and
jb
pop
mov
inc
dec
xor
xor
jl
inc
addr16
leave
loopne
mov
sub
adc
add
mov
inc
cmp
jl
xor
ret
inc
jle
cmp
xor
dec
pop
add
je
cmp
or
add
cmp
jl
cmp
adc
jae
jle
xchg
or
add
lcall
and
enter
mov
stos
lea
js
in
jl
push
mov
cmpb
mov
xchg
inc
out
dec
loopne
mov
dec
nop
into
sbb
pop
jl
sub
add
sub
cmp
sbb
jp
pop
sub
ret
xor
mov
add
cmp
adc
xor
mov
in
dec
scas
pop
jp
daa
hlt
out
les
out
mov
add
jmp
dec
roll
lret
gs
push
fcoms
mov
lds
or
xchg
cmc
test
or
sub
add
jle
rol
clc
lock
cld
popa
ss
lea
dec
dec
jle
adc
pop
loopne
clc
cli
jno
dec
xor
dec
shll
dec
dec
or
mov
add
pop
xchg
imul
cmp
mov
push
je
dec
sbb
adc
or
inc
pop
pusha
mov
cmp
pop
jg
or
outsb
movsb
lahf
icebp
mov
lea
sbb
jb
mov
jmp
sub
and
adc
enter
mov
sbb
pop
xor
fldt
adc
sub
dec
cmp
bound
sbb
push
lcall
pop
adc
popf
pop
xor
mov
push
push
or
inc
movsl
push
add
add
call
js
xchg
jmp
in
dec
sub
mov
pop
push
and
push
in
fwait
xchg
jl
fistl
divl
lret
mov
mov
xchg
push
push
lret
addr16
push
lods
rol
inc
or
sbb
test
in
and
pop
faddl
lret
jae
fisttpll
dec
add
or
dec
jno
aam
pop
jle
pop
adc
sub
adc
lock
je
xorb
push
jg
or
insb
cld
loope
push
ss
jmp
stos
repz
call
mov
leave
inc
mov
pop
jle
dec
mov
pop
ja
adc
inc
jmp
movlps
jne
pop
scas
sbb
pop
fcmovne
neg
ljmp
ja
lea
adc
push
mov
push
sbb
push
push
lret
xchg
mov
push
inc
test
dec
cmp
and
mov
sti
sub
mov
rclb
std
arpl
mov
pop
sbb
sub
xor
jge
mov
inc
push
mov
in
or
jo
mov
or
mov
inc
movsb
sub
or
fidivl
adc
fwait
sub
cs
and
mov
cmpsb
jbe
sub
dec
movsl
pusha
mov
dec
mov
lods
pop
std
mov
mov
test
cwtl
push
pop
lret
shr
xor
push
inc
adc
scas
sub
mov
int3
test
push
cli
shrl
adc
sub
in
push
cmp
cld
lahf
int3
das
xor
iret
in
push
repnz
add
fistl
mov
cmp
stc
lret
dec
sub
cmc
xor
enter
mov
ret
push
loop
fistpll
inc
lock
ljmp
les
in
leave
repnz
and
lahf
sbb
ja
popa
int3
sub
mov
push
and
lds
ljmp
adc
inc
mov
cmp
sbb
mov
xchg
dec
pop
lret
scas
cltd
shll
dec
inc
cs
and
sbb
xor
adc
mov
nop
and
mov
mov
pop
shll
dec
xchg
dec
pop
lds
sub
decb
lods
add
sbb
jbe
popa
jne
mov
jl
dec
push
or
xchg
add
sub
sbb
hlt
xor
pop
mov
mov
xchg
les
pop
pop
adc
adc
or
popa
shr
shlb
mov
idiv
test
dec
cmpsl
lret
adc
cmp
inc
dec
cmpsb
or
and
pop
mov
mov
push
push
mov
xor
jecxz
or
ret
bound
lock
push
fmull
inc
add
lock
xchg
mov
adc
std
sub
xor
inc
out
test
mov
dec
sbb
xchg
bound
fcos
sub
sub
js
dec
mov
push
inc
das
adc
cltd
cmp
adc
inc
sbb
cs
jmp
adc
dec
subl
adc
and
xchg
or
dec
lea
xchg
sbb
cmp
pinsrw
out
adc
cwtl
dec
fdivrs
mov
mov
lods
movsl
mov
arpl
repz
dec
enter
xor
add
push
push
jg
jg
mov
andl
pop
xor
int
das
dec
daa
inc
inc
push
movsb
pop
dec
pop
lods
out
push
sub
mov
push
ja
daa
and
and
ja
xchg
mov
ljmp
push
and
jl
adc
and
adc
push
push
xlat
or
inc
push
int
inc
int3
and
adc
and
mov
xorl
cltd
scas
sbb
adc
and
nop
test
xchg
inc
pop
jbe
pop
addl
fisttps
dec
mov
insl
je
pop
lea
stc
adc
pusha
movzbl
aas
or
lea
sub
and
pop
das
nop
add
aas
adc
sbb
and
sbbb
nop
push
adc
clc
push
aas
or
rcrb
add
test
ficomps
call
inc
cwtl
out
mov
icebp
sub
in
orl
or
pop
and
dec
adc
ja
add
add
add
add
push
or
bound
leave
hlt
and
iret
ja
ljmp
mov
adc
ror
mov
mov
and
mov
xor
jecxz
and
cld
ret
cmp
adc
cmc
test
pop
lea
inc
or
cmpsb
push
inc
cmp
subl
cld
mov
incb
nop
ret
jmp
adc
pop
and
cs
dec
xor
incl
pop
inc
aas
push
inc
jl
emms
pusha
shrl
popf
adc
sub
movsb
cmp
cmp
aas
cmp
es
and
push
sub
and
lods
sysenter
mov
mov
sub
xchg
cmp
adc
aam
test
mov
cmc
jno
lods
sbb
mov
mov
addl
mov
cmc
jne
push
or
pop
ss
pop
mov
add
jo
mov
ret
adc
test
inc
dec
mov
outsb
fdivrl
cmpsl
xor
pop
test
pop
and
sub
sub
mov
pop
mov
mov
and
pop
ret
dec
aas
pop
orb
add
popf
das
push
push
ror
adc
in
pop
cmpsl
sub
add
xlat
testb
mov
jne
sub
cmc
bsr
or
test
pushl
xor
inc
maxps
mov
ja
loope
popa
sub
dec
mov
xor
in
jg
enter
inc
call
imul
push
xor
cld
jmp
test
push
mov
iret
mov
into
push
cmp
jmp
xlat
dec
lock
mov
cmp
pop
xchg
test
xchg
push
push
push
sbb
pop
dec
jmp
out
test
dec
cli
int3
xchg
dec
dec
stos
sbb
pop
lahf
jle
push
stc
dec
push
adc
aad
adc
sub
dec
mov
cmp
and
mov
inc
or
push
adc
mov
dec
pop
enter
cs
jmp
cmp
pop
pandn
xor
pusha
mov
push
daa
pop
and
inc
test
and
insl
add
cmp
jb
pop
mov
jbe
xchg
mov
dec
xor
mov
out
pop
rorb
add
push
in
push
dec
pop
inc
pop
enter
test
ret
sbb
adc
jbe
ljmp
cmp
jno
and
das
add
cmc
lret
sub
je
jmp
rclb
cmp
dec
dec
xor
lods
mov
inc
add
jmp
sbb
test
inc
sub
es
cmc
push
jmp
push
das
mov
adcb
inc
sbb
sbb
or
daa
lds
leave
pop
ja
sbb
call
sbb
adc
mov
movsb
and
ja
fimuls
xchg
outsb
inc
mov
mov
es
mulb
faddl
ss
gs
or
fldenv
or
pushf
xor
push
adc
inc
aam
push
leave
sbb
push
lret
movsb
imul
imul
fsubl
addr16
adc
gs
sub
jle
pop
adc
push
xor
movsb
ljmp
push
lds
mov
adc
mov
dec
shlb
and
es
push
jl
mov
add
adc
jb
insl
inc
or
or
xor
and
nop
repz
or
lods
or
test
bound
cmp
repnz
adc
leave
adc
inc
sbb
sbb
push
pop
cmp
shr
ja
outsb
nop
outsl
out
or
mov
and
pop
andb
loop
repnz
nop
pop
lret
lock
cmpsl
int3
adc
dec
gs
js
dec
lods
push
inc
and
cmp
xchg
sbb
and
cmp
adc
inc
enter
xor
xor
inc
and
jmp
inc
and
in
inc
shll
and
nop
xchg
test
test
xor
shlb
sub
sbb
mov
push
cmp
xchg
mov
dec
nop
test
lock
inc
and
ret
sub
sub
xchg
inc
mov
and
add
pop
pop
jmp
lret
cmp
inc
jae
mov
sub
sub
das
jne
sub
xchg
and
xor
mov
add
and
and
clc
xchg
jg
fadds
cmp
shl
mov
push
je
dec
cmp
mov
mov
test
jns
mov
sub
xlat
and
sub
and
jg
push
jl
cmp
clc
icebp
add
pop
adc
ret
jmp
and
and
adc
jae
push
xchg
jno
or
fs
clc
pop
mov
mov
cmc
push
pop
adc
pop
mov
and
rol
hlt
fisttpll
or
sbb
pop
je
push
jne
addr16
or
movsb
xor
xor
and
xor
jne
inc
es
test
adc
and
mov
adc
ret
adc
sub
sbb
or
push
nop
sbb
mov
mov
or
jle
sub
pop
ja
clc
and
jo
lds
cld
xor
sub
dec
cltd
test
jne
les
and
mov
in
and
repnz
aaa
sub
into
notb
lods
pop
or
lock
and
pop
adc
mov
or
lea
pop
add
adc
or
mov
pop
lahf
pop
push
ret
or
add
in
jbe
inc
gs
das
in
jle
pop
mov
or
cmp
cld
and
sbb
sahf
xchg
test
or
adc
inc
sub
out
test
and
or
sub
icebp
or
xor
xchg
adc
leave
inc
outsb
mov
mov
imull
pop
xor
jne
scas
and
mov
rcrb
je
cwtl
xor
out
add
orl
jmp
shll
stos
dec
divb
leave
mov
mov
sub
xor
push
push
xor
cs
aam
or
repnz
mov
and
scas
fstpl
pop
sub
adc
aas
sub
std
seta
insb
out
cmp
and
cmpsb
push
sub
lahf
sub
add
xor
sub
mov
xor
and
sub
jl
or
je
or
ljmp
or
or
jmp
fcompl
nop
sbb
mov
and
rcrb
mov
jno
lret
xchg
popa
push
daa
jmp
adc
mov
xchg
inc
mov
int
cmpl
rcll
adc
loope
mov
inc
cs
mov
les
sar
adc
mov
xchg
jmp
shll
sub
adcb
push
adc
fwait
cmp
jmp
sub
mov
and
adc
mov
adc
push
xor
dec
sahf
scas
or
push
call
js
add
rcrl
stos
into
fstpl
inc
or
jne
shr
mov
jne
ror
push
sbb
sbb
clc
xor
cs
xor
ret
fsts
xor
mov
scas
cltd
orl
orb
das
les
pusha
loop
xor
in
loopne
loope
jecxz
scas
and
push
daa
jno
sub
es
mov
cmp
cmp
or
and
adc
mov
xor
data16
jmp
mov
dec
leave
xchg
movsb
aad
xchg
add
or
jle
lret
test
pop
push
daa
mov
adcb
add
mov
add
add
jae
fcompl
daa
xchg
negb
push
pop
outsb
sub
or
mov
jl
lret
jmp
mov
pop
sbb
jp
icebp
adc
and
jg
call
leave
or
sbb
push
sub
xchg
mov
push
pop
sbb
arpl
sbb
xchg
mov
xchg
test
out
fwait
xchg
cmp
enter
js
xorb
mov
xchg
ljmp
bound
fisttpll
inc
push
add
je
inc
cmp
inc
jge
fistps
jae
in
mov
or
sbb
faddl
adc
insl
pop
int3
push
xor
fldcw
jmp
xchg
add
scas
push
pop
les
mov
xor
adc
and
clc
sub
inc
pop
jb
xor
sub
enter
in
insl
dec
push
js
add
je
lea
call
aas
lds
cmp
out
pop
add
or
add
sub
call
test
mov
adc
mov
pop
xor
xchg
jl
xlat
stos
and
mov
faddl
xchg
mov
and
cmp
das
je
sbb
push
int3
mov
dec
or
inc
int3
mov
lret
lcall
mov
or
cmpl
pop
xor
mov
mov
push
clc
loope
push
or
int
xchg
cmp
xchg
fsts
dec
je
lcall
mov
test
imul
aas
lcall
dec
fsubrl
in
jge
test
or
dec
fsts
ja
inc
popl
daa
scas
imull
mov
js
sub
mov
dec
sbb
mov
cmp
push
inc
movsl
jge
and
add
call
mov
pop
mov
push
fcoml
push
lcall
adc
mov
pop
pop
cmpl
repnz
daa
mov
pop
mov
add
loope
adc
imul
dec
sub
jmp
jo
movsl
fists
jle
jns
and
add
inc
pop
das
mov
jmp
adc
sub
push
inc
and
add
in
or
xor
test
nop
mov
sbbb
lahf
xchg
scas
add
inc
xchg
pop
into
dec
push
mov
mov
mov
mov
xchg
dec
add
push
js
sbb
push
sub
sbb
push
push
cmpsl
mov
scas
mov
or
fs
push
out
xchg
gs
dec
push
sti
mov
aad
inc
mov
repz
xchg
push
jecxz
dec
test
jp
int3
pop
jae
stos
mov
aam
rol
in
cmp
mov
mov
jbe
push
sub
test
test
xchg
sbb
and
and
lret
xchg
jmp
es
push
inc
mov
addb
ds
pusha
xor
cmpw
and
jne
push
lds
leave
push
loopne
jmp
out
test
bound
and
pusha
test
and
sub
xorb
outsb
std
push
leave
orl
mov
sub
adc
pop
xor
call
or
cmpl
inc
pop
les
add
and
ret
sub
and
movsb
sbb
testl
xor
sbb
or
loopne
sbb
loopne
or
dec
lods
sbb
push
in
sub
sub
xchg
cmp
add
adcb
and
sub
test
pop
mov
test
mov
pop
cs
sbb
jb
mov
push
shll
call
push
pop
cli
jg
orb
cmpsb
or
adc
into
enter
xchg
xor
pusha
cmc
adc
mov
inc
adc
mov
lods
rclb
mov
cmp
das
lcall
stos
jecxz
mov
rcll
xchg
dec
je
adc
and
hlt
test
lret
add
mov
test
out
pop
and
lret
mov
ds
and
das
bound
add
ret
rcrl
mov
stos
push
dec
jno
push
sub
lret
jl
es
dec
pop
insb
sbb
mov
test
popa
xchg
gs
dec
mov
adc
cmp
shl
adc
orb
mov
int3
js
popf
dec
pop
and
or
loope
dec
je
or
fsubrs
cmp
lret
mov
push
push
jmp
and
sub
inc
xchg
inc
sub
fstpt
xor
lea
jge
jbe
sbb
popa
push
sub
sub
jne
pop
adc
xlat
jne
pop
test
daa
xor
and
push
or
call
cmpsl
and
subl
inc
mov
add
mov
testb
daa
inc
sub
mov
sbb
dec
lods
movb
pop
xchg
popf
inc
lcall
add
aam
mov
jbe
cmp
test
add
hlt
sub
imulb
enter
lret
jae
outsb
adc
dec
mov
ja
pop
or
fs
push
cmp
sbb
xchg
sub
sub
fsubs
push
fsts
dec
sbb
loopne
les
fld1
in
push
push
push
pop
clc
incl
add
aas
aaa
pop
addl
push
or
push
call
repz
inc
aas
mov
push
push
shl
jmp
sub
mov
pop
push
test
inc
add
inc
and
fcompl
int3
rolb
aam
mov
mov
loopne
xchg
xchg
je
cwtl
pusha
bound
and
lods
adc
mov
sbb
loopne
mov
xor
test
and
pop
in
orb
jo
hlt
fs
clc
push
inc
call
test
xchg
dec
adc
daa
adc
jge
pop
bsr
add
cmc
pop
pop
ficoms
icebp
mov
mov
test
push
and
adc
int
cmp
loopne
cmp
out
mov
adc
lds
inc
in
pop
and
jne
adc
add
dec
iret
xchg
enter
lahf
movaps
ret
sar
sub
pop
cltd
dec
add
dec
xor
mov
adc
sub
push
push
les
push
pop
or
xlat
ret
or
sbb
sub
jbe
xor
xor
mov
add
sub
push
push
push
mov
cmp
sub
inc
sub
not
inc
or
cld
dec
xchg
mov
push
subb
or
mov
popf
sub
sti
fmul
in
xchg
imul
ret
mov
ret
aam
into
dec
inc
aam
out
je
jmp
inc
cli
cltd
enter
sub
aam
inc
popl
loopne
push
inc
push
adc
jmp
fwait
mov
rolb
pop
jbe
dec
and
out
xor
ljmp
or
and
movb
sbb
push
push
inc
aaa
pop
jb
and
icebp
sub
ja
jb
cmp
mov
jb
pop
and
mov
push
inc
add
pop
add
pop
jb
addl
and
and
adc
inc
and
cmp
sub
and
sbb
push
and
bound
adc
jae
arpl
sbb
add
das
adc
pop
nop
loop
or
mov
xlat
leave
pushf
cld
das
out
daa
sub
ss
sub
fcomi
dec
cmp
push
cmp
inc
or
shlb
mov
inc
adc
cwtl
insb
pop
test
cld
clc
sub
jmp
sub
inc
pusha
or
xchg
and
pop
mov
add
adc
sbb
test
mov
cmpsl
sub
xchg
push
je
loopne
add
enter
daa
in
jle
push
sbb
stos
add
in
add
push
push
bound
push
enter
icebp
lock
cmpsb
pop
adc
arpl
fdivr
adc
loop
jne
daa
mov
lds
mov
mov
dec
sbb
fs
daa
xor
jl
pop
call
and
movsl
xlat
xlat
xchg
sbb
cmc
xchg
out
pop
nop
cmpsl
divl
xchg
lcall
sbb
and
mov
inc
sti
dec
mov
or
inc
sub
adc
notb
orl
clc
or
or
push
stc
adc
nop
inc
mov
out
in
xchg
pop
cmc
jmp
push
call
mov
leave
std
pushl
cmp
inc
cmp
add
sub
xchg
js
mov
jb
shlb
fstpl
icebp
mov
mov
add
rorb
scas
bound
pop
test
push
mov
sbb
jno
adc
aaa
or
cmp
jne
dec
sub
inc
mov
and
sub
push
or
cltd
adc
mov
hlt
divb
inc
add
je
sub
push
and
or
jmp
in
pop
pop
fsubr
mov
lea
cmc
negb
or
movsb
adc
cmp
scas
popf
mov
adc
out
cmp
sbb
or
inc
or
dec
pop
divb
mul
fdiv
add
jbe
inc
xor
sbb
xchg
xchg
cmpsb
push
sti
or
mov
stc
test
cmp
xchg
mov
mov
jge
push
call
arpl
fadds
inc
loopne
loop
mov
cmp
test
jne
push
or
insb
sbb
xchg
or
mov
rorb
adc
nop
cmp
mov
cmpsl
cltd
adc
nop
xor
cmpsl
test
cmc
scas
cltd
adc
xchg
xor
mov
subb
xchg
push
mov
divl
jno
popa
lcall
scas
daa
clc
jp
push
fs
adc
add
cld
je
cli
add
shlb
pop
cli
and
in
inc
repnz
dec
push
cmc
shlb
push
and
test
loopne
sbb
movsb
sbb
or
cli
or
cmp
mov
xor
cli
inc
fsts
call
or
add
call
cmp
and
push
call
into
sbb
int3
add
shll
inc
test
into
or
jne
icebp
add
mov
add
rolb
mov
push
mov
inc
cld
pop
xor
in
and
and
jl
adc
adc
add
pop
int
inc
call
ret
adc
or
std
fs
je
in
push
xor
test
inc
mov
jns
in
in
push
sub
ds
lock
sub
ljmp
jmp
fs
ljmp
andl
and
into
push
or
mov
push
mov
push
pop
mov
fcoms
lret
cmpsb
lret
xchg
leave
je
lahf
insb
jmp
adc
jne
cld
fwait
sbb
ljmp
xchg
add
notb
adc
dec
xor
rcrl
jmp
adc
test
hlt
out
cmc
sub
call
faddp
add
out
cs
mov
bound
sbb
sub
enter
jb
idivl
adcb
sub
or
jle
add
orb
dec
cmp
jb
sub
test
je
icebp
fdivl
xor
inc
inc
jecxz
sahf
adc
sub
adc
fcoms
fcoms
fwait
aas
pusha
and
je
mov
inc
cmc
mov
cmpsl
rcll
xlat
push
aam
mov
or
jmp
or
mov
cli
sub
call
cli
push
push
lods
xchg
and
jmp
lret
adc
mov
jmp
cmp
push
loopne
xchg
ret
sub
sub
xor
insl
mov
mov
jno
jne
inc
mov
xor
sub
cld
dec
cmp
and
push
sbb
push
add
jp
imul
jp
lret
xchg
addl
add
bswap
out
xchg
mov
inc
push
mov
je
and
push
inc
dec
and
daa
jmp
inc
adc
lahf
push
and
cmp
shlb
cmp
cmp
or
call
jmp
fstpl
pcmpgtw
or
ja
divb
or
daa
adc
pop
aad
icebp
cmp
dec
xlat
call
fadds
sub
add
mov
shr
hlt
push
lahf
stc
scas
test
sbb
cmp
add
fstpt
mov
or
add
in
stos
mov
inc
mov
or
cmp
or
je
inc
inc
mov
sub
jmp
pop
sbb
add
out
sbb
ret
dec
and
ds
adc
and
imul
sbbl
push
jp
jne
movsl
push
mov
or
call
or
push
push
fistpl
shr
cmpsb
push
ret
mov
stos
aad
jmp
or
pop
sbb
mov
daa
in
sbb
popa
or
cmp
push
adc
cmpsb
jne
faddp
cltd
loope
mov
aaa
les
aas
lcall
xchg
dec
int
adcl
lock
enter
aad
and
fdivrl
movsb
push
adc
jmp
jp
imul
je
test
je
mov
sti
add
jb
neg
out
loope
add
sub
mov
add
jne
mov
pop
push
lahf
dec
movups
or
add
rep
ja
dec
dec
mov
jg
ret
or
imul
lock
call
xchg
test
ss
rorl
mov
js
xchg
inc
loopne
movsl
inc
mov
add
mov
and
dec
dec
inc
adc
sbb
imul
js
aas
lea
mov
adc
mov
mov
cmp
push
jecxz
dec
pop
adc
aaa
add
pop
push
or
and
adc
mov
and
lret
inc
jmp
cmp
dec
mov
fsubr
xchg
mov
mov
jne
adc
xor
inc
lds
adc
adc
test
mov
inc
pop
andb
inc
xor
iret
andl
ret
jne
testl
fs
insb
jmp
ficoms
scas
dec
dec
or
shlb
mov
pop
pop
mov
mov
sarb
shll
cwtl
cmp
add
jecxz
inc
add
test
jne
sub
push
in
clc
lods
loope
mov
push
jnp
fcompl
push
shl
shr
add
fnstenv
push
roll
cmp
flds
push
and
ret
shl
mov
ret
and
add
ret
and
and
xchg
imul
inc
cwtl
sub
aam
push
push
fcmovu
enter
pop
movb
adc
pop
popa
inc
outsl
jmp
mov
inc
cltd
test
and
xor
jmp
add
push
and
movsb
or
das
dec
jne
std
and
pop
pop
pusha
xchg
sahf
xchg
push
cmp
adc
out
cmp
insb
xor
cli
push
xor
mull
enter
mov
sahf
mov
in
mov
je
push
imul
testl
or
jne
je
sbb
fs
add
rclb
data16
or
clc
pop
mov
mov
test
xor
lcall
add
cs
or
es
iret
adc
pop
sahf
adc
inc
or
sbb
adc
cmp
rorb
and
loopne
in
sbb
add
mov
inc
arpl
mov
data16
push
or
mov
adcb
ss
les
push
arpl
or
into
jg
push
or
ret
adc
pusha
xor
adc
add
push
add
pop
cmp
adc
or
wbinvd
sbb
pop
dec
pop
jmp
inc
mov
sbb
ds
popa
lret
test
or
lea
cmp
jb
cld
push
lods
cwtl
pop
sub
adc
and
jae
pop
push
or
mov
add
xor
sbb
test
pop
nop
cmpl
lea
push
stos
jae
pop
pop
inc
fsubrp
pop
movsb
mov
mov
dec
mov
std
inc
inc
popl
push
push
sti
or
jecxz
es
mov
or
dec
mov
cltd
mov
mov
cmpsl
adc
mov
cmp
cmpsb
adc
push
or
or
xchg
cmpsl
or
lock
sbb
and
jne
es
add
sbb
decl
jmp
mov
imul
xor
sbb
xchg
sbbb
cmp
add
and
sbb
enter
xchg
shrl
sbb
dec
jmp
mov
jmp
mov
dec
xchg
es
xor
movsl
add
testb
add
inc
jmp
sbb
or
or
jne,pn
pop
leave
addl
dec
add
dec
or
mov
test
sub
sub
pop
or
sti
cmp
ret
fldenv
mov
and
pop
stos
xor
inc
orb
leave
adc
sbb
push
sti
jb
les
aas
adc
call
jge
popa
and
push
jae
xchg
mov
inc
popa
loope
sub
adc
adc
sub
cmpsb
and
cmpsb
mov
std
dec
push
in
add
push
cmp
jb
sub
add
jae
in
sub
mov
sbb
loope
inc
addl
xchg
dec
dec
stc
sub
push
lret
sti
jg
fucomp
jmp
adc
je
jb
dec
add
or
push
add
inc
mov
cmc
add
call
jmp
insb
mov
jne
flds
movsb
jnp
aas
jge
test
xor
jmp
sbb
imul
jle
insl
test
dec
stos
and
mov
lea
addb
ret
adc
inc
mov
mov
jmp
rolb
jne
loope
or
sbb
fistl
xor
out
inc
pusha
jl
jne
test
jp
push
cmp
mov
fildll
xor
or
or
pop
push
adc
push
jne
fstl
adc
and
inc
lods
pop
add
or
pop
incl
adc
xchg
cmpsb
repz
ds
rolb
mov
xor
in
push
or
push
adc
ret
rcrb
pop
and
push
dec
add
inc
add
inc
mov
and
aaa
cmp
or
out
cmpsb
out
cmp
test
lret
add
imul
icebp
mov
dec
stc
cmp
mov
jmp
cmp
jg
add
test
dec
inc
push
fldcw
xorb
dec
sub
xchg
jne
adc
add
ds
cmc
ret
push
arpl
xorb
fnstenv
cmp
adc
testb
add
add
and
xchg
jmp
mov
andb
sbb
je
sbb
enter
mov
popa
rcll
fcom
aam
js
loopne
stos
jg
pop
cmp
push
ss
leave
in
push
cmpsl
fdivl
rorl
pop
cmc
in
sub
lret
xchg
inc
adc
mov
sub
subb
out
mov
fsts
fs
or
and
jne
jp
add
inc
cmpb
adc
inc
cmp
je
incb
test
pop
leave
sub
inc
and
jmp
testl
fsubl
adc
leave
cmp
shll
pushf
orb
rorl
inc
cmpsl
mov
lea
xchg
xchg
cs
cli
inc
push
mov
cmp
jnp,pn
and
inc
sbb
push
jns
inc
mov
aas
or
mov
or
pusha
sbb
mov
inc
cmpsb
arpl
cs
and
jecxz
and
inc
adc
loope
popa
xor
add
notb
dec
jb
pop
xchg
or
inc
jo
scas
or
pusha
lea
pop
sti
pop
out
icebp
lods
push
lcall
aad
cmp
mov
inc
cmp
push
in
sub
in
or
add
push
ficoms
or
mov
outsl
lret
add
nop
stc
xor
ljmp
subb
loope
lods
inc
mov
dec
mov
mov
cmpsb
out
js
pop
les
inc
cld
cmp
je
xchg
cmp
push
fmul
push
cmp
js
enter
fsubl
push
sbb
jmp
pop
xor
pop
std
mov
sub
loop
jns
mov
push
inc
jbe
push
mov
roll
and
fs
and
and
bound
sbb
dec
dec
mov
xor
add
sub
add
cs
jne
mov
dec
or
sbb
push
pusha
ret
xchg
ret
dec
dec
add
sub
out
lret
mov
pusha
aas
dec
add
sets
xchg
cmpsl
mov
in
rorb
test
jne
push
jmp
mov
adc
cmc
mov
fidivs
dec
sbb
dec
cs
shll
jbe
add
add
scas
mov
stc
or
outsl
mov
cwtl
iret
movsb
push
mov
add
mov
push
ret
mov
or
lea
aas
nop
adc
xor
sub
xor
adc
and
mov
repnz
scas
adc
mov
push
pop
int3
test
cs
int3
and
xor
inc
test
mov
inc
int3
or
adc
dec
push
xchg
dec
push
adc
fs
pop
and
shlb
pop
and
shlb
pop
and
rorb
dec
call
lds
icebp
mov
or
xchg
push
nop
xchg
sahf
sbb
mov
xchg
mov
sub
je
xor
jl
movsb
pushf
andb
or
icebp
xor
mov
stos
data16
nop
push
stc
sbb
test
xchg
xor
dec
sbb
repz
fdivr
and
mov
dec
test
cmp
movsb
out
push
dec
out
jle
mov
pop
nop
dec
sub
lods
jno
and
scas
and
cmc
fcomps
pop
sub
andb
dec
cld
cltd
add
or
or
daa
test
adc
mov
mov
mov
in
and
or
insb
push
mov
rcll
push
test
sub
mov
xchg
push
jecxz
je
jg
sbb
mov
mov
xchg
popa
lcall
js
push
repnz
and
je
test
mov
cmp
pop
jne
inc
inc
dec
mov
push
cli
pop
ds
mov
sbb
repnz
pop
jbe
mul
mov
sbb
outsl
loopne
and
sub
cmpsl
call
cld
jae
into
dec
adc
repz
enter
mov
mov
fdivr
fldcw
les
enter
lret
enter
fucom
test
adc
loop
push
cmp
push
dec
pop
out
ret
cmpl
xchg
or
adc
cld
popf
dec
dec
adc
jge
xor
xor
inc
jecxz
je
sbb
push
rol
subl
xor
cmp
dec
popa
or
sbb
cmp
mov
inc
inc
lock
add
ljmp
add
sbb
test
mov
and
adc
loopne
push
and
mov
inc
out
mulb
adc
fs
mov
jge
pop
mov
faddl
add
jmp
rol
or
inc
movsl
add
mov
inc
scas
fdivl
shl
or
test
dec
mov
lock
add
add
or
push
push
sub
pop
mov
cmp
jge
cmp
mov
call
mov
push
add
es
mov
sbb
push
sbb
mov
leave
mov
push
adc
adc
cmp
jl
sub
sub
sbb
clc
add
push
add
and
lret
cmc
dec
sbb
push
jne
or
andl
mov
aam
sub
cmpb
jmp
jg
stos
ja
loop
push
in
xor
push
sbb
cwtl
fisttpll
jmp
push
and
and
cmp
jne
call
les
xchg
pop
push
sbb
xor
and
pusha
mov
or
inc
pop
dec
mov
and
pop
dec
jno
pusha
pop
mov
sub
or
cmp
push
pop
clc
mov
pop
fnstsw
sahf
jne
push
sbbl
ret
and
adc
call
and
scas
outsl
mov
inc
nop
loop
inc
mov
movl
insb
adc
push
sbb
sbb
sbb
adc
adc
sub
mov
push
fstcw
xchg
pop
outsl
dec
or
popa
sar
std
insl
int3
fistpll
hlt
or
es
int3
push
clc
dec
leave
inc
test
inc
aaa
pop
inc
push
mov
or
stc
dec
push
adc
mov
jbe
aad
push
inc
or
inc
dec
xlat
cmpsl
or
inc
or
jbe
lock
pop
sbb
mov
aas
arpl
or
jmp
mov
pop
pop
xchg
and
xor
mov
clc
mov
or
lcall
xor
xor
inc
lds
cs
ljmp
add
cld
push
mov
mov
push
xor
sub
push
mov
mov
lods
outsb
imul
and
gs
mov
cmp
xor
or
inc
push
add
in
xchg
rol
add
loope
xor
push
mov
into
pop
xchg
jl
mov
jb
roll
cld
movsl
cmc
popa
pop
jo
clc
test
xor
xor
scas
daa
repnz
and
sbb
add
call
push
mov
clc
cld
les
sub
mov
int3
insl
clc
movsl
sahf
adc
jae
mov
int3
add
xchg
push
shll
push
dec
and
clc
mov
xchg
int3
xchg
push
xchg
cmp
and
jmp
jle
xchg
int
int3
scas
mov
and
cwtl
sub
and
insl
cmpsb
xor
or
and
sub
inc
adc
push
add
xchg
push
sbb
cmp
pop
jne
bnd
into
and
xor
cmp
sbb
es
shrl
inc
pop
les
call
js
call
outsb
adc
add
mov
dec
add
add
cmp
jle
or
or
inc
dec
leave
movsb
mov
shlb
mov
push
or
add
cmp
ja
push
lock
nop
mov
test
sbbl
fidivrl
test
or
mov
dec
pop
xor
in
inc
add
ret
movsb
mov
sub
add
jg
cld
push
push
push
cli
mov
push
mov
push
pusha
sbb
test
stc
pusha
sub
or
mov
jl
add
pop
adc
sbb
ds
inc
outsl
xor
push
adc
ret
cmp
sub
or
inc
imul
popf
cmp
mov
je
jmp
or
dec
out
lea
push
inc
imul
xor
ret
lock
dec
push
popf
out
xchg
lret
or
mov
mov
pop
mov
or
dec
inc
or
xor
or
xor
repnz
mov
inc
push
movsb
xor
xor
pushf
or
jl
je
insb
js
scas
les
shlb
or
inc
lock
stos
les
sub
pop
pinsrw
push
mov
xor
jne
push
adc
and
xchg
or
sbb
and
mov
inc
sub
and
and
or
mov
xor
cld
push
sti
outsl
daa
cmp
jns
rclb
mov
sub
mov
pop
jae
push
call
rorb
push
fists
leave
push
or
das
sbb
mov
add
inc
fdivrs
out
addl
mov
dec
jmp
or
ret
mov
xchg
fcomps
add
cmp
cmp
andl
inc
mov
dec
dec
idivb
push
je
adc
test
xor
les
xchg
push
les
mov
rorb
fs
mov
inc
inc
adc
jb
xchg
data16
pop
or
or
push
ret
adcl
xor
mov
inc
pop
dec
lock
psllq
cmp
lea
mov
jle
sahf
sbb
adc
testb
add
rclb
lahf
add
ficoms
inc
stc
jmp
daa
mov
das
jmp
pop
lods
or
add
jmp
out
xchg
or
adcl
orl
cs
cld
lahf
pop
mov
loopne
ret
push
mov
xchg
pop
icebp
mov
stos
inc
das
add
je,pn
adc
mov
jmp
jge
and
adc
or
bound
aas
test
xor
sub
sbb
sbb
mov
call
jle
popa
push
jmp
jl
sub
jnp
and
adc
cwtl
jle
or
je
mulb
add
push
es
and
movsb
jmp
fisttpl
lea
sbb
inc
gs
mov
rcl
dec
mov
aam
sub
pusha
lods
shl
out
cmpsb
scas
push
pop
and
sbb
cmp
push
mov
xchg
push
ds
fcoms
inc
and
outsl
insl
mov
cld
inc
sub
adc
jg
jg
hlt
mulb
les
push
sub
dec
push
ljmp
sbb
outsb
adc
dec
mov
push
mov
push
xchg
and
scas
adc
or
or
add
loope
jo
outsl
push
or
fcomps
aas
xor
xchg
or
loopne
pop
shlb
stc
sti
mov
pop
lds
in
fildll
enter
fs
ja
dec
or
loope
jp
and
mov
cmp
fldl
cmp
pushf
xlat
sub
xchg
popa
mov
push
sbb
or
ss
mov
push
mov
cli
mov
mov
mov
push
pop
push
mov
sub
dec
aas
ds
xchg
sub
and
ja
test
idivl
sub
adc
jg
test
add
pop
in
mov
xor
int
sub
ljmp
or
sub
sub
or
cmp
xor
adc
icebp
mov
or
adc
jmp
fdiv
fs
xor
shr
popf
fistpl
add
div
mov
pop
data16
xor
add
jb
cmp
push
ja
push
pop
xor
add
lcall
inc
push
mov
outsl
push
popf
int3
or
sbb
push
push
outsl
adc
inc
enter
or
xor
adc
jbe
inc
mov
adc
sub
sbbl
or
subb
ss
push
je
loopne
sub
adc
jno
adc
adc
adc
dec
inc
cmp
jmp
fnstcw
daa
fs
sbb
inc
adc
adc
mov
mov
fucomi
mov
in
rolb
sbb
stos
push
add
jp
add
loopne
sbb
jne
jmp
cld
sbb
sarb
pusha
je
push
sbbb
adc
pop
je
add
loopne
adc
pop
push
xlat
pop
or
in
mov
mov
sti
out
leave
in
mov
and
in
pusha
pop
push
push
xchg
fmull
es
popf
adc
pop
push
push
stc
dec
sub
or
or
daa
pop
mov
sbb
cvttps2pi
and
shlb
cltd
sub
mov
jne
xchg
add
fistps
and
jle
xchg
test
addl
sbbb
push
stc
ret
jmp
pop
das
mov
sar
ret
pop
xor
repz
mov
mov
pop
jmp
push
fildl
push
dec
push
aaa
jne
add
jmp
adc
push
mov
push
cmpsb
mov
or
pop
mov
jecxz
adc
pop
push
push
push
movsb
je
or
arpl
xchg
mov
call
mov
fisttps
mov
filds
or
bound
add
push
or
call
adc
test
inc
cmc
inc
xor
jl
outsl
mov
mov
jb
popa
movsb
popf
mov
push
pop
push
adc
dec
popa
dec
mov
sub
clc
into
adc
into
outsl
push
pushf
divb
lret
mov
aam
rorb
cmp
cmp
call
insb
inc
mov
mov
or
push
call
mov
jne
cld
mov
aas
mov
andb
adc
push
dec
xor
and
inc
lock
es
in
mov
dec
xchg
addl
popf
cwtl
fmuls
inc
mov
and
xor
mov
test
add
cmp
mov
xlat
or
push
mov
pop
cmp
int
sbb
loop
xchg
jmp
adc
sub
mov
xor
pop
fildl
pop
subb
in
add
call
jmp
sbbb
and
xor
pop
sbb
pop
adc
pushl
call
cmp
pop
xchg
push
inc
inc
or
sub
sub
add
or
and
fnstenv
add
inc
or
add
adc
sbb
cld
mov
push
or
fcmovne
jl
ljmp
add
test
repz
addb
jle
or
cmp
outsl
cli
xor
ljmp
in
mov
and
lret
jmp
data16
fldenv
sub
add
ljmp
lea
dec
mov
dec
mov
cmp
movsl
dec
pop
mov
xor
push
xchg
push
xchg
or
jmp
push
loopne
adc
fidivs
and
inc
cmp
jl
cmp
lcall
es
jb
xor
cmp
rorb
or
sbb
sbb
adc
fsts
stos
xor
stos
xchg
mov
lret
nop
sbb
js
sbb
xchg
adc
jb
add
jmp
in
or
clc
cmpsl
jl
mov
or
xor
rolb
and
popf
push
pop
and
cmp
sub
add
and
sub
inc
or
push
jle
mov
sahf
pop
loope
xchg
or
adc
lds
mov
aas
push
inc
sbb
inc
mov
jae
fcoms
sbb
push
sbb
loop
jae
cld
xor
negb
push
cmpb
add
mov
jmp
cmp
push
mov
mov
dec
sbb
popf
or
push
sbb
aam
test
cmpb
pop
cwtl
inc
jb
pop
add
cli
aas
repnz
call
mov
mov
ss
insl
rcrb
dec
je
nop
sbb
jne
rcrl
xchg
add
dec
inc
pop
shrl
stos
adc
fnsave
pop
add
ret
inc
push
in
pop
push
pop
or
popa
jmp
xor
or
mov
and
push
or
inc
addl
loope
cli
ret
es
jb
add
adc
call
xchg
loope
cmp
shlb
orl
cld
sub
shr
clc
iret
imul
lea
add
mov
dec
pop
or
mov
adc
push
cmp
mov
sub
push
cld
or
adc
test
pop
or
add
cli
add
andl
pop
pop
mov
cmp
or
and
and
mov
lret
lea
dec
add
loopne
pop
mov
jne
cmpb
cld
lea
dec
loopne
mov
sbb
push
or
add
cld
xchg
jmp
push
shlb
mov
cs
or
xchg
stc
adc
sub
pop
ja
test
xchg
hlt
mov
jne
and
ss
add
cmp
jbe
push
shll
sub
mov
and
arpl
inc
adc
mov
sti
or
pusha
lret
shr
notl
add
jne
nop
lcall
loopne
mov
push
pop
xchg
pop
lcall
int3
pop
loopne
and
iret
inc
pop
clc
outsl
cmp
jnp
movsl
ljmp
roll
mov
mov
pop
jo
mov
or
or
jne
mov
and
mov
inc
xlat
adc
jae
push
test
orb
pusha
mov
or
and
inc
scas
aas
mov
dec
adc
adc
push
and
cwtl
mov
into
push
enter
mov
lock
fldl
mov
faddl
in
xor
shl
add
fisubs
test
push
push
call
movsb
and
push
push
or
or
movsb
push
and
sub
or
cmp
or
andl
adc
push
mov
lahf
test
pop
adc
outsb
fwait
jbe
test
jae
hlt
add
rcrl
js
sub
mov
out
dec
adc
jmp
int
xchg
add
mov
insl
or
das
shll
push
inc
sub
cmp
fs
arpl
cmp
push
adc
mov
and
mov
xadd
add
pop
add
les
xor
in
xchg
dec
in
divb
ret
push
add
and
mov
pop
out
sbb
iret
jne
add
scas
xor
xor
adc
mov
push
fsubs
adc
jmp
xor
pop
pop
dec
jae
mov
sub
es
or
out
push
push
call
test
adc
je
mov
lahf
mov
inc
test
enter
mov
in
cli
push
enter
cli
mov
mov
fnstsw
mov
jo
and
sbb
sarl
dec
or
outsl
sbb
pop
movsb
xchg
test
fdivs
pop
lock
or
je
sbb
mov
dec
mov
into
jne
addr16
push
lret
add
leave
jl
shl
inc
sbb
testl
pop
icebp
dec
pop
ds
popf
dec
orl
jle
out
enter
or
and
test
add
cmovns
loop
cmp
hlt
in
push
and
clc
or
cvtps2pi
fidivrl
add
jmp
lret
adc
inc
lahf
mov
insl
sbb
cltd
xor
mov
iret
push
jp
mov
jge
fwait
sbb
adc
jl
icebp
rolb
inc
out
push
lret
aaa
or
sahf
in
add
add
inc
or
ret
xchg
mov
mov
out
or
pop
or
nop
in
add
sub
and
movsb
pop
lea
scas
imul
xchg
or
sub
pop
aaa
mov
cld
dec
xor
xor
mov
adc
cld
mov
lea
and
mov
cmp
adc
pop
push
jo
and
inc
add
imul
shll
pop
mov
jo
insl
xor
fstpl
lahf
mov
mov
movsl
adc
sbb
add
push
cmpsb
mov
and
cmp
xor
int
test
inc
adc
lret
pop
lods
mov
mov
or
pop
loope
push
imul
jge
and
flds
andl
in
mov
aas
push
cmpsb
jno
push
inc
dec
xor
mov
and
inc
and
ret
cmp
enter
stc
dec
xor
or
mov
and
sti
mov
fstpl
or
adc
mov
mov
xchg
mov
cli
ja
cltd
inc
lock
popa
repz
jle
cld
inc
fs
inc
gs
out
lock
dec
or
and
adc
sub
mov
inc
test
pop
fmull
lods
sbb
adc
xchg
inc
inc
imul
call
jne
add
js
mov
not
and
in
jae
mov
mov
adc
jo
sub
push
ljmp
test
adcl
cld
dec
cmp
pop
sub
pop
cmp
cmp
pop
cmp
ret
xlat
leave
test
adc
fnstcw
repz
mov
push
aas
inc
mov
orl
adc
popa
dec
sub
jae
bound
lea
repnz
push
sbb
iret
cmc
sbb
mov
push
jg
xor
adc
into
imul
pop
dec
jae
stos
mov
push
out
sub
or
incl
mov
xor
mov
pop
xor
add
adc
orb
cmp
push
jne
orb
dec
in
and
or
mov
jmp
dec
and
mov
outsl
dec
adc
mov
movsl
orb
les
cmpsb
je
add
xchg
inc
repz
inc
mov
sub
jmp
mov
lea
rorl
mov
xor
pop
xor
not
push
mov
xor
cmpl
sub
sbb
imul
and
cs
jne
test
insb
into
mov
jp
push
mov
push
and
out
movsb
jp
ja
xchg
pop
cwtl
and
or
jbe
out
les
dec
aaa
jnp
das
jno
cwtl
sti
pop
mov
aam
bound
scas
jecxz
inc
cmp
movhlps
out
and
bound
mov
orl
pop
push
mov
cs
or
ret
mov
sbb
pop
dec
mov
or
jae
pop
jo
inc
test
aad
lea
sub
dec
xor
add
cmp
jne
in
or
push
mov
aas
sbb
or
or
and
test
mov
lea
cwtl
xchg
iret
xor
mulb
push
jle
repnz
in
mov
rolb
ret
and
int3
inc
mov
dec
mov
jne
cmpb
mov
in
add
ret
cmp
jae
cmp
jbe
addl
adc
test
fdivr
ret
out
shlb
and
pop
je
mov
xchg
mov
xor
outsl
and
cmp
notl
shll
and
push
xchg
mov
mov
add
cmp
xor
inc
xchg
repz
mov
push
sub
mov
mov
push
dec
mov
pop
and
mov
jp
push
test
stc
or
inc
or
and
xchg
cmp
cmp
pop
mov
jmp
xor
fstpt
and
xchg
jbe
je
idivb
pop
stos
dec
es
add
inc
and
out
dec
inc
push
mov
gs
and
xorb
pop
cld
and
bound
adc
imul
notl
sub
lret
adc
adc
adc
mov
aaa
jmp
out
test
jne
ret
jl
test
cmp
bnd
hlt
js
imul
and
sub
push
cld
aas
jbe
clc
into
sbb
or
sahf
jne
sbb
dec
rcrb
lret
cs
lsl
and
cmp
inc
movl
pop
incl
or
and
into
and
xchg
pop
stc
aaa
frstor
adc
or
adc
sub
jmp
div
mov
cmp
xor
cmp
add
jl
cmp
jbe
adc
add
cmp
or
movsl
adc
roll
nop
inc
sub
test
jle
out
cwtl
test
mov
enter
mov
adc
int3
es
adc
cmp
clc
jb
inc
ss
mov
je
jmp
test
sub
nop
aad
or
sub
cmp
mov
jg
xor
push
or
test
jmp
pop
repz
inc
je
shll
imul
out
inc
loopne
add
or
add
decb
add
or
divl
rcrl
mov
shll
cmp
test
jp
jg
mov
mov
jle
mov
mov
hlt
gs
sbb
ljmp
adc
inc
push
popf
push
movb
sub
sub
add
mov
cmp
repnz
sbb
and
inc
or
sarl
fcompl
sub
sub
mov
inc
jb
call
cmp
sub
xor
lea
fidivl
sub
mov
shrb
sbb
imul
mov
inc
addr16
or
lea
xchg
pop
lea
and
lea
mov
cmpsb
jae
add
sub
mov
or
and
pusha
into
pop
add
cmpb
cmp
imul
xor
cmp
repz
mov
test
jne
xor
pop
mov
cmp
roll
jmp
movsb
jae
mov
adc
mov
cmp
mov
dec
cltd
pusha
pop
jmp
mov
inc
jne
call
or
jae
notb
fildll
or
push
aam
sbb
pop
int
or
sbb
pop
add
lods
sbb
xor
jmp
add
jae
sub
imul
scas
rolb
frstor
ret
shll
fsubrl
pop
psllw
push
and
fimuls
roll
add
clc
or
orb
adc
jbe
cld
loop
sub
mov
add
cmc
inc
and
push
jmp
jae
sub
and
jb
rcrl
adc
jae
mov
insb
hlt
sbb
inc
insb
mov
mov
in
shlb
sub
cs
cmpsb
sub
jae
adc
mov
cmp
loopne
inc
xorb
pop
cwtl
inc
push
inc
stos
and
add
sub
shll
lcall
inc
addb
das
or
or
fists
and
add
std
jg
cmp
add
add
test
mov
pushl
jbe
push
mov
adc
jbe
insb
in
addr16
ret
xor
rclb
sahf
and
scas
rcrl
loope
or
popa
iret
mov
or
loope
andb
push
xchg
out
lds
jle
jno
repnz
lock
and
sbb
lcall
stos
mov
cli
cmp
jl
icebp
push
es
sub
add
lds
movsl
test
xchg
or
or
mov
cli
loope
shrb
push
scas
out
iret
mov
jne
or
shl
inc
add
or
xchg
mov
xor
mov
push
push
test
cli
stc
cmp
leave
push
pop
mov
movsb
push
mov
jno,pt
dec
insl
mov
xor
pop
notb
sub
mov
xchg
hlt
jbe
mov
enter
push
icebp
fldenv
fdivs
call
add
and
mov
out
jae
and
lret
inc
out
lret
loope
and
daa
cmp
fstl
or
inc
call
dec
mov
xlat
inc
lods
movsl
imul
jmp
movb
inc
jns
push
jae
insl
pop
adc
ret
aad
rorl
sbb
je
inc
mov
dec
mov
inc
pop
push
and
add
inc
xor
cmovs
subb
xor
xlat
sub
negl
jb
xor
rclb
loop
mov
pop
je
hlt
push
bound
ret
sub
mov
iret
in
xchg
movsb
jl,pt
xor
sub
repnz
jns
xchg
mov
dec
mov
or
mov
cmp
je
mov
shlb
dec
and
sub
mov
out
or
or
daa
adc
xchg
inc
cmp
mov
rcll
fistl
inc
aas
clc
push
jg
jle
popf
call
sbb
add
stc
sbb
cltd
lcall
pop
imul
and
adc
ljmp
and
push
jae
sub
xchg
xor
addb
sub
sub
test
jne
or
ret
je
fwait
cs
or
or
testl
or
jmp
mov
shrl
mov
cmp
fs
sub
mov
jmp
je
adc
imul
test
adc
xor
inc
push
loopne
cld
cmp
lret
jge
int
sbb
jo
mov
cltd
pop
add
sbb
or
push
sbb
dec
adc
lret
adc
or
in
jbe
inc
aad
jle
sub
js
jg
add
inc
test
inc
fisttps
inc
rol
in
jmp
aas
mov
push
shl
call
sbb
psllq
add
cmp
je
mov
fprem1
push
lock
outsb
fsubr
idiv
insb
out
cs
or
fiaddl
call
mov
pop
adc
jmp
pop
add
gs
mov
ja
pop
mov
jo
icebp
mov
jne
shlb
adc
push
dec
inc
repz
lock
stc
adc
inc
mov
add
fs
cli
push
mov
sbb
mov
std
xor
jl
sub
roll
xchg
push
push
mov
and
mov
jae
lea
lock
xor
mulb
daa
je
decl
jo
inc
xor
mov
mov
clc
pop
mov
lods
cmp
pop
je
fidivrl
cmp
and
ja
mov
out
xor
mov
testb
sti
dec
in
fisubl
or
push
mov
lea
jo
pusha
rclb
push
in
wrmsr
mov
xor
adc
js
push
mov
test
pop
and
imul
and
insb
xor
mov
xchg
stos
cmp
rcll
push
fcoms
loopne
in
cld
fdivl
jmp
mov
in
popf
or
push
sub
dec
les
or
je
or
push
xchg
or
mov
adc
xchg
sub
sti
sub
and
fdivrl
push
ds
fdivrs
pop
jmp
mov
addb
jmp
in
add
mov
adc
adc
add
lret
push
cmp
mov
js
or
and
insb
mov
mov
mov
adc
and
test
adc
jg
jbe
cmp
inc
out
push
jb
js
insb
xor
outsb
push
sbb
into
sub
out
cwtl
ja
inc
scas
push
dec
mov
in
push
pushw
das
cwtl
shl
push
sbb
sbb
sub
mov
sub
push
loop
mov
mov
outsb
cltd
jo
insb
test
cld
adc
pop
mov
xor
shll
jge
int
xorb
movsb
and
imul
test
add
int
mov
es
cmp
daa
cld
jbe
or
dec
test
inc
aam
fisttpll
repz
inc
test
out
pusha
or
adc
mov
lret
inc
stos
iret
mov
ds
sbb
shrl
mov
js
xchg
das
call
dec
add
loop
inc
add
hlt
add
fcomps
jmp
aam
pop
je
or
push
lds
cli
mov
or
and
lea
dec
mov
jmp
jmp
out
rdpmc
mov
lock
testb
pop
cmp
mov
orb
pop
sub
fistpll
push
push
hlt
movsl
fldenv
and
hlt
mov
mov
bound
or
fdivrs
fs
push
mov
das
cld
pop
dec
cld
fisubl
pop
xchg
mov
add
and
aas
cmc
shlb
ss
sub
adc
test
pop
mov
sbb
or
push
mov
sbb
xchg
mov
pop
cmp
xchg
pop
xchg
nop
and
add
mov
or
and
sub
leave
insl
add
aam
and
cmp
mov
xchg
push
or
dec
sub
aaa
cmp
or
mov
subb
mov
loopne
xor
push
stos
pop
mov
mov
jmp
dec
dec
and
test
add
xor
movsb
and
sbb
jmp
push
push
mul
jmp
xor
or
or
cmp
xor
sbb
inc
xor
or
enter
xadd
or
mov
stos
repnz
cmp
or
sbb
je
in
jg
jl
jecxz
dec
adc
push
bnd
cmp
jmp
push
fmul
jo
xchg
mov
movsb
or
in
cmp
testl
imul
ret
bound
jg
sbb
andl
push
sub
xor
fidivl
mov
ret
xor
shlb
lret
hlt
sti
cmp
pop
data16
clc
and
sbb
jmp
mov
dec
addb
cmpsb
or
loopne
cmpb
xor
nop
or
dec
inc
and
xor
xor
or
jle
add
xchg
es
mov
sub
or
testb
add
or
and
add
xchg
loopne
iret
push
addr16
xor
add
add
or
dec
sub
dec
pop
xor
xor
or
mov
xchg
jle
nop
popl
lea
sbb
enter
sub
xor
sub
mov
ds
mov
dec
push
jmp
cmpsb
pop
popf
idivb
call
lods
add
mov
push
jno
adc
int
test
add
cmp
adc
or
or
inc
mov
inc
insl
aaa
push
jmp
js
rcll
mov
or
testl
rcrl
and
cmp
adc
or
lea
or
xor
xor
imul
or
lods
ljmp
pop
and
jg
and
aad
lret
std
fisttpl
xor
jnp
cs
adc
push
push
push
inc
insl
sti
inc
std
jne
aaa
aas
or
pop
call
sti
lock
or
add
andb
sbb
and
adc
andl
or
push
mov
ret
xadd
push
in
cld
add
gs
mov
or
push
aam
mov
test
imul
pop
xchg
xchg
push
jmp
sbb
cwtl
popf
push
sbb
mov
cmp
and
dec
sub
popa
add
pop
xchg
shl
push
xor
fdiv
cmp
adc
mov
dec
mov
rclb
js
lds
jl
jmp
lods
or
mov
lods
inc
popf
and
push
push
jl
sbb
inc
inc
call
repz
stos
xchg
sbb
xchg
xchg
outsb
mov
adc
inc
mov
clc
cmpl
decl
hlt
cmp
incb
call
out
push
push
or
pop
shl
add
adc
std
push
add
je
mov
mov
nop
add
cmp
daa
ja
inc
lds
or
cmp
cmc
cli
mov
pusha
jne
popf
test
and
add
shr
adc
dec
test
and
mov
mov
xor
and
js
jmp
cmpl
stos
dec
lahf
push
mov
pop
mov
rcr
adc
push
loop
inc
sub
push
adc
or
ret
adc
add
jmp
cmp
ret
call
mov
fimuls
icebp
jo
mov
jne
cwtl
out
sar
int3
and
std
adc
jne
pop
mov
inc
dec
sub
decl
and
pop
pop
pop
or
add
fadd
mov
adc
adc
xchg
push
adc
adc
mov
sbb
nop
fst
les
imul
or
xchg
jl
mov
dec
ficomps
mov
repnz
adc
scas
add
aaa
push
push
lea
repz
ss
inc
sub
and
lods
cmc
nop
test
cmc
popf
into
stos
inc
mov
push
pop
pop
pop
pop
out
dec
dec
cli
xchg
xor
ljmp
cmp
and
or
push
push
mov
call
inc
cld
in
int
or
add
inc
lret
lea
dec
orl
add
inc
mov
sbb
add
je
adc
cwtl
mov
mov
cmp
dec
daa
push
dec
icebp
lods
stc
sbb
dec
vprotw
xchg
dec
xor
xor
adc
or
push
mov
cmp
xchg
jmp
dec
cwtl
xchg
mov
mov
pop
jne
push
call
add
mov
enter
cmp
cmp
push
jne
adc
in
jg
call
jmp
or
push
loope
cmp
add
xchg
testb
je
inc
xor
stos
push
scas
dec
adc
inc
or
into
jne,pn
add
andb
inc
or
test
mov
out
add
mov
lret
adc
in
stos
movsb
cli
bound
jp
cmpsb
and
add
popa
cmp
sub
mov
jno
add
jge
test
push
mov
dec
hlt
cmpsb
insl
jl
mov
add
or
or
imulb
cli
cmp
or
rcr
and
mov
je
and
inc
inc
cmp
jnp
stc
adc
or
insb
push
xor
jl
mov
stc
stc
int3
sbb
adc
adc
or
jbe
xlat
push
lods
lahf
sbb
jbe
mov
std
dec
ja
repz
notl
out
push
jp
add
cmpl
or
sub
addl
mov
nop
test
inc
adc
daa
jp
and
xchg
out
aas
cmc
pop
cltd
adc
es
dec
or
adc
adc
cmpl
push
mov
cmp
insl
adc
sub
jmp
mov
andl
add
pop
dec
inc
inc
mov
push
and
jle
es
sub
add
repnz
dec
push
adc
sbb
paddsb
pop
or
cmp
mov
pop
loope
lcall
rol
sbb
ret
fdivl
out
inc
or
mov
in
xor
push
sub
inc
jb
les
mov
out
imul
ds
and
inc
jmp
ljmp
jne
pop
adc
add
movb
xor
rorb
mov
add
clc
jmp
or
hlt
lcall
inc
mov
hlt
jmp
add
je
xchg
push
sub
push
cmpsl
or
or
addr16
jmp
cmpb
imulb
or
xor
mov
sarb
add
inc
repnz
pop
push
mov
add
jmp
fstpt
cmc
xchg
cmpb
or
fidivl
hlt
repnz
leave
sub
inc
mov
mov
ljmp
mov
fstpl
cmpb
add
in
lret
add
or
orl
outsb
add
sub
arpl
out
cmc
jnp
movsb
aad
lahf
inc
and
mov
pushf
pop
xchg
jbe
pop
call
or
or
hlt
mov
pop
outsl
fstl
pop
add
or
sub
adc
add
mov
packuswb
cmp
imul
add
sub
and
push
push
pop
cwtl
pusha
sar
fs
sbb
add
lea
sub
popf
or
and
sub
jne
push
movsb
sub
mov
pop
mov
add
das
subl
jmp
jle
adc
add
testb
test
adc
mov
inc
pop
and
mov
mov
jb
pop
scas
and
mov
sub
outsb
icebp
div
push
loop
push
or
cmp
repnz
rclb
movsl
movsb
sbb
jbe
movb
aaa
lret
xor
sub
test
lods
sub
sub
movsl
lods
cmovs
cmpsl
and
adc
and
and
jb
lea
testb
adc
rolb
dec
mov
aam
loopne
sbb
dec
push
pop
xchg
mov
pop
lcall
ds
or
cmp
add
adc
sub
mov
xchg
aaa
adc
sbb
sub
mov
ret
add
xchg
and
jmp
mov
je
inc
cmpb
pushf
dec
cmpsl
and
lea
jne
sbb
xor
pop
in
push
or
inc
lock
icebp
push
add
adc
push
sti
xor
xchg
dec
mov
addr16
adc
sub
repz
sub
add
push
xor
xor
push
pop
jmp
and
insb
pop
mov
iret
cmp
loopne
pusha
sub
jo
test
inc
jnp
sbb
pop
cmpsl
or
cmpsl
and
add
popa
jle
je
inc
insb
ss
out
sub
and
inc
cmp
shll
or
jmp
ret
loopne
ja
mov
sub
sbb
mov
add
loope
mov
popf
sti
imul
scas
xor
enter
sarl
imul
add
aam
sbb
rcl
adcl
dec
push
inc
movsb
sti
loop
test
sbb
xor
jle
enter
dec
pop
sub
pop
call
sar
push
dec
or
test
je
and
sbb
or
outsl
pop
cli
xor
xor
mov
add
leave
scas
mov
or
sub
fidivs
imul
adc
mov
sahf
aam
mov
addr16
test
dec
push
push
cmp
lret
jg
shl
pop
jecxz
jb
xchg
mov
andl
adc
adc
pop
int3
mov
test
leave
xor
add
out
cltd
cmp
and
pop
icebp
pop
jmp
jne
sub
movsl
cli
and
xorl
and
push
mov
push
fdivl
mov
sbb
push
pushf
pop
or
xchg
dec
pop
push
in
mov
icebp
push
mov
outsl
sub
mov
push
enter
pop
cmp
and
push
fsubr
xchg
js
pusha
mov
push
lea
cltd
add
inc
adc
and
in
pop
jle
dec
sub
jmp
in
jmp
mov
sbb
aaa
scas
xchg
pop
sbb
jo
xchg
cmove
or
cmp
mov
lock
mov
or
insb
shl
add
aas
lea
shl
mov
popa
lock
mov
inc
add
inc
in
fimull
fsubp
pop
add
and
add
je
neg
mov
inc
mov
pop
int3
into
into
adc
jne
xor
rorb
push
or
dec
adc
push
add
insb
sbb
adc
repz
cld
cmp
dec
stc
pop
or
rcrb
ljmpw
bound
inc
leave
cmp
sar
xchg
or
test
mov
sbb
loope
sub
push
enter
lahf
mov
call
enter
idivl
jns
dec
lock
inc
imul
les
mov
call
jge
sbb
pop
int3
movsl
adc
cmp
lods
mov
push
int3
fcompl
adc
push
jmp
and
adc
out
xor
ja
sbb
xlat
add
decl
js
cmc
or
leave
jns
ret
push
sbb
mov
sub
cmp
in
test
adc
pop
mov
xchg
hlt
arpl
out
je
movl
mov
mov
cmp
mov
cmp
pop
xor
mov
mov
divb
test
incl
push
jle
inc
call
aas
lea
imul
movsl
mov
and
roll
add
sbb
or
jle
cmpsl
lods
adc
leave
cmp
dec
sbb
pop
xchg
or
mov
mov
or
in
pop
push
sub
inc
ret
cli
pop
xlat
cli
in
daa
cmc
xor
adc
dec
mov
xchg
js
jge
ror
dec
dec
in
std
cmp
call
popf
std
sub
pop
pop
sbb
mov
add
xchg
jbe
imul
add
inc
inc
add
iret
dec
or
jmp
lea
jmp
or
pop
pop
or
jbe
icebp
sub
or
int3
jp
adc
jl,pn
ja
cmp
mov
xchg
pop
mov
push
orb
add
jae
andb
adc
mov
test
pop
in
mov
dec
jl
outsl
mov
adc
xor
mov
jle
mov
pop
aad
mov
jbe
cmp
or
jne
test
fstps
mov
jge
jmp
popa
mov
inc
inc
inc
add
cmp
or
fucomi
sarb
lea
hlt
and
fildl
addl
jmp
mov
dec
xchg
in
in
leave
mov
aad
and
xchg
addr16
or
fsubrl
adc
orb
add
pop
pop
or
testb
add
mov
mov
in
testb
add
sti
jp
cmp
xchg
mov
push
call
xor
ds
jl
stos
and
xor
call
inc
or
or
xor
mov
insb
push
popf
daa
inc
xor
cmpsl
or
out
jl
subb
add
pop
ret
lods
sbb
xchg
and
enter
cs
es
mov
call
loop
and
sarb
mov
sbb
pop
xchg
xor
inc
add
sub
in
nop
popf
fldl
mov
out
js
ds
xchg
push
shr
adc
push
frstor
mov
cwtl
inc
sbb
test
and
in
shrb
shll
pop
push
or
ljmp
jne
imul
add
das
pop
add
jno
adc
xchg
orl
add
je
test
mov
adc
inc
mov
jmp
push
out
testl
loop
shl
add
lret
inc
test
sub
fistps
pop
out
jmp
lock
and
iret
inc
std
mov
test
inc
pop
call
adc
add
add
or
fildll
add
xchg
push
pop
cmp
and
cmp
lods
jg
js
shll
jmp
mov
and
cs
pop
sub
and
jne
addr16
lds
xor
or
inc
loope
cld
or
xchg
add
cltd
and
and
jecxz
sbb
out
leave
add
or
or
or
jmp
adc
push
add
aam
inc
sbb
dec
jns
fstps
mov
sbb
or
test
sbb
jge
mov
pop
ds
ret
mov
or
jge
push
adc
and
in
sub
or
adc
adc
notl
add
out
test
fbld
rep
xor
sbb
pop
pop
pop
inc
push
or
jne
push
ret
add
or
sbb
fcmove
inc
add
add
mov
add
push
insb
movsb
cmp
push
pop
xor
add
arpl
sub
adc
dec
and
dec
add
pop
dec
or
pop
fldl
imul
cmp
push
call
mov
mov
je
adc
pop
stos
daa
dec
add
sub
jmp
fcoms
mulb
jae
jp
sub
jno
add
jmp
imul
les
adc
push
adc
and
loopne
push
das
or
enter
and
stc
call
jmp
test
fldl
fcompl
addl
cmp
pop
hlt
lret
outsb
xchg
and
xor
shr
icebp
dec
sub
into
ror
rcl
push
dec
jo
rclb
sbb
test
add
pop
fisubl
add
cmpsb
adc
ret
fldl
inc
inc
movsl
and
pop
call
xchg
or
pop
adc
ds
into
sti
mov
mov
jmp
inc
jno
jo
rcll
and
cwtl
dec
mov
add
subb
pop
sub
imul
ficomps
clc
xchg
ret
add
adc
jecxz
bound
push
adc
pusha
pop
mov
push
stc
enter
std
into
and
adc
jnp
std
movsl
pop
inc
out
sarb
mov
cmp
call
or
fs
cmpsl
adc
in
gs
jne
cld
pop
test
mov
jne
in
in
jg
shlb
cld
sbb
dec
mov
pop
push
jle
xchg
add
cmp
call
jb
inc
lcall
adc
adc
aas
loop
leave
ret
gs
mov
clc
pop
push
adc
addl
aad
in
movsb
adc
int
cmp
cld
push
add
adc
loope
jecxz
push
nopl
pop
xor
add
xchg
or
pushw
addb
adc
cmpsl
lcall
add
push
cmp
loope
or
dec
test
pop
sub
cmpl
jne
cmp
or
inc
incl
sub
xchg
mov
jg
mov
or
pusha
in
pop
int3
movsb
stc
imul
idivl
ret
sarl
pop
je
outsb
adc
icebp
std
rclb
push
push
sub
nop
inc
sub
dec
into
xchg
data16
push
andl
adc
push
mov
outsl
jae
mov
add
bound
or
push
add
sbb
dec
jmp
inc
mov
out
cmc
or
pop
sub
adcb
or
fildll
daa
dec
push
and
imul
and
lock
sbb
fwait
cmpsb
jge
cmp
sbb
loop
movsb
jmp
pushf
ljmp
imul
bound
in
cmp
mov
or
sub
jle
dec
fwait
dec
or
adc
repz
sbb
dec
add
xchg
adc
lcall
mov
sbb
inc
sbb
dec
or
call
sbb
nop
sub
pop
fsubs
xchg
add
cmp
dec
push
insl
jg
outsb
call
pusha
mov
test
push
int
cld
pop
sub
aas
mov
pop
lock
movsb
adc
push
cmp
ret
cmp
cltd
jmp
les
mov
mov
sub
cmp
cmpsl
xor
fldcw
mov
pop
mov
aam
or
add
inc
fistpll
mov
nop
test
jne
mov
sar
adc
and
or
lret
inc
dec
add
cmp
sub
stc
gs
dec
inc
movsb
xchg
in
nop
ja
dec
cmp
dec
adc
add
mov
inc
rorb
push
dec
push
jmp
mov
sub
or
call
adc
and
push
adc
imul
push
int
cmpb
inc
icebp
pop
adc
nop
sbb
fisttpl
lahf
rcll
cmpl
jecxz
lret
add
call
jmp
mov
jne
ss
fbld
inc
xchg
cmpl
arpl
inc
mov
rorb
cltd
shr
in
sub
stc
xor
loope
inc
mov
adc
or
mov
gs
mov
push
cmp
enter
and
mov
std
inc
pop
add
movb
ja
or
daa
cmp
pop
add
jns
neg
and
sub
jl
testl
idiv
and
in
fisubrl
or
push
lea
jle
movsb
mov
push
push
xchg
or
ret
out
mov
cmp
aam
sub
inc
ds
int
mov
lock
xchg
dec
adc
mov
repz
inc
add
ret
mov
jnp
lds
xchg
sub
add
or
movb
jge
dec
xchg
rcrl
call
pop
je
pop
inc
adc
add
dec
sbb
pop
mov
pop
lahf
jecxz
jmp
mov
sub
adcb
or
imul
dec
mov
cli
xchg
popf
pop
out
test
vmovaps
push
repnz
pop
adc
fsubs
in
or
jmp
jmp
push
cmpb
xchg
sub
test
setl
mov
mov
dec
mov
mov
nop
and
jge
lret
adc
adc
pop
adc
and
push
pop
inc
inc
mov
addr16
adc
or
sahf
testl
into
sub
adc
notb
sub
dec
jno
adc
dec
and
adc
xchg
or
jmp
sbb
sbb
jmp
adc
in
cld
inc
sub
or
imul
mov
mov
inc
push
cli
add
push
cmp
pop
in
fildl
sbb
and
ds
adc
xchg
fistps
gs
outsl
ret
mov
outsl
pop
inc
sbb
push
push
add
arpl
push
jge
adcb
cmp
insl
loopne
shrl
add
dec
or
add
sbb
imul
lahf
push
xchg
dec
push
rcl
adc
jmp
sbb
adc
or
pop
and
adc
rcll
sbb
or
ljmp
jb
pop
jl
pop
sbb
inc
add
stos
or
pop
ffreep
push
mov
push
ret
hlt
xchg
jle
loopne
push
pop
mov
mov
mov
nop
daa
mov
jo
mov
call
add
push
inc
stc
adc
loope
or
cmp
sbb
mov
xchg
adc
dec
movsb
and
cld
rcll
jecxz
cli
cs
stos
lret
les
std
psllq
push
xor
add
ja
les
jecxz
adc
hlt
jle
fistl
inc
mov
dec
add
clc
jle
sub
daa
aaa
and
sub
sbb
adc
inc
mov
jg
push
hlt
notl
jge
ret
lret
or
mov
add
xor
jmp
flds
mov
ret
push
enter
es
push
push
lock
aad
sub
pop
mov
mov
pop
jp
and
mov
test
jmp
ficoms
lods
and
or
jae
ljmp
cmp
movsb
pop
dec
pop
adc
sbb
xchg
or
mov
xor
shl
imul
and
cmpsb
ljmp
test
sub
andb
lea
xchg
inc
jmp
rorb
cmp
push
inc
shl
pusha
push
call
cmp
imulb
add
cmp
roll
or
fnsave
and
sub
mov
lods
dec
sbbl
mov
cmc
daa
and
and
in
xchg
cmp
scas
je
add
jle
hlt
ja
int
sbb
jns
mov
lock
shld
outsl
hlt
push
loopne
jmp
sbb
dec
xlat
mov
jge
jne
adc
aaa
xor
mov
cmpsb
pop
aas
les
clc
xchg
ljmp
xchg
in
sub
and
sbb
sti
xchg
scas
adc
cli
int
jle
ds
in
pop
push
mov
cmp
mov
dec
outsl
pop
push
call
std
mov
jb
sub
xchg
jae
push
push
adc
loope
das
dec
sbb
push
inc
xor
movsl
pop
test
and
sbb
mov
aas
fsubrl
dec
xchg
dec
fisttps
mov
nop
adc
and
cmp
adc
out
lret
xor
push
testl
mov
inc
movsb
cmp
iret
orb
sub
mov
ljmp
test
inc
jne
jmp
xchg
test
mov
add
jg
loopne
jle
cmpl
pop
jg
aas
and
adc
xchg
adc
cmp
cld
adc
or
aam
sbb
inc
sti
mov
push
aad
shll
js
insl
adc
aam
repz
xchg
ss
sub
out
dec
add
shll
jmp
sub
or
jb
das
jl
jns
pop
mul
loopne
inc
mov
xor
push
fstl
mov
dec
xor
enter
push
movsl
loope
adc
sub
adc
fisubl
ja
daa
dec
fs
sbb
dec
and
data16
in
mov
push
in
loopne
bound
scas
cmpsl
cld
aam
jle
add
test
or
mov
loopne
push
jmp
xchg
xor
or
jne
call
mov
sbb
xor
jg
adc
por
aam
xor
push
test
loop
push
dec
xchg
cli
lock
push
sbb
lds
sbb
inc
lods
insl
sub
inc
mov
inc
fs
ja
pop
mov
cltd
mov
les
push
add
test
and
xchg
jmp
dec
xchg
push
sbb
loop
and
adc
sub
adc
cmp
setne
movsb
addr16
in
test
jae
add
test
jl
or
and
or
mov
sub
jmp
fistl
movsb
dec
inc
insl
shr
mov
mov
cwtl
rcl
clc
fstpl
sub
ds
jne
add
call
pop
mov
ret
xchg
pop
stc
or
mov
sub
lods
push
shr
dec
pop
sub
pop
dec
mov
insl
and
aaa
push
jo
lods
xor
pop
inc
jbe
push
adc
lods
js
ljmp
jbe
pop
mov
int
test
jmp
xor
pop
scas
mov
pop
mov
mov
jl
test
test
add
mov
push
push
cmp
adc
std
enter
pop
jne
ret
test
mov
popf
js
jnp
xchg
sbb
mov
dec
cld
lret
mov
sti
push
xchg
mov
out
in
pop
loop
add
ficompl
or
test
ljmp
or
ret
lods
ret
mov
shlb
call
out
cmpsl
jge
add
adc
bound
call
jmp
jl
mov
test
or
sub
fnstsw
rcl
scas
dec
push
fsub
fdecstp
ret
cmpl
sti
lock
cli
mov
adc
xchg
inc
fcomp
xorb
cmp
jae
repnz
or
lods
cmp
neg
adc
lds
jmp
or
pop
je
testb
or
out
divb
add
les
and
xchg
subb
add
shlb
dec
mov
jecxz
jle
cmpsl
clc
cmpsb
adc
nop
sarb
dec
pop
dec
ja
mov
jae
cmpb
mov
inc
inc
inc
or
das
cld
or
dec
pushf
mov
cmp
inc
ja
xor
and
inc
sub
jge
rcrb
daa
sub
sub
popa
push
jnp
data16
mov
and
jns
inc
shll
insb
inc
jmp
rolb
ret
fisttpll
push
lock
je
daa
jo
cmc
pusha
fs
std
iret
imul
fs
or
xor
xchg
and
xchg
sub
mov
fidivrs
sub
incb
mov
cmp
stos
adc
movb
inc
mov
mov
lret
dec
jl
mov
cmp
sub
xchg
inc
push
das
push
rcll
inc
out
hlt
add
push
cmp
jl
push
mov
jb
mov
test
frstor
mov
pop
push
pop
xchg
inc
jne
xor
mov
decb
or
lea
fsubl
mov
adc
inc
or
rolb
jmp
sub
and
nop
out
cmp
sbb
and
js
sub
cmp
or
mov
adc
sbb
std
jp
mov
push
lock
or
adc
and
jmp
popa
inc
test
push
sbb
sbb
pushf
and
mov
adc
xor
adc
adc
jno
lahf
inc
push
mov
sbb
enter
ficoms
rorl
and
aas
leave
sbb
jp
call
mov
push
cmp
xchg
mov
fbstp
imul
loope
and
call
sub
pop
adc
cwtl
sub
lret
adc
je
xchg
mov
aam
lcall
repnz
mov
ja
fdivrs
divl
inc
pop
or
sbb
aam
inc
cmp
fstpt
push
and
popl
rclb
in
movb
mov
push
loopne
and
outsb
dec
je
push
lret
in
push
inc
mov
bound
jmp
mov
or
and
sub
adc
adcb
insb
mov
pop
test
push
lea
je
mov
icebp
dec
mov
pop
mov
sub
jae
out
mov
cltd
add
pop
stc
loopne
adc
mov
ret
jmp
stc
testb
xchg
dec
movsl
or
or
test
push
test
adc
rcll
lret
lea
jp
or
stos
or
dec
jne
mov
inc
mov
dec
inc
push
or
jo
nop
adc
or
cmp
orb
push
inc
test
aaa
cmp
and
cmp
adc
and
lods
out
es
and
out
pop
jge
movsb
sti
imul
aaa
mov
das
or
mov
and
and
inc
mov
jnp
mov
pop
in
enter
jo
jae
pop
cmp
jne
lea
mov
adc
pop
mov
mov
push
sbb
adc
xchg
cmp
adc
mov
sbb
mov
sbb
inc
or
and
pushl
ss
push
fs
jmp
xchg
jl
pop
sbb
mov
dec
and
push
cmp
je
cmp
xchg
int3
jg
in
jge
sahf
imul
cmp
jae
pop
outsl
in
cmpsb
pop
mov
daa
or
sarl
adc
cmp
je
push
push
xchg
cmpsb
jge
or
inc
cmpb
and
imul
push
dec
das
movsb
dec
xchg
ss
jb
push
adc
add
add
jo
leave
pop
cli
cwtl
test
in
mov
or
push
or
pop
das
adc
pop
ret
jmp
push
inc
mov
mov
jp
fbstp
mov
mov
popf
clc
arpl
cmpsl
push
ds
fwait
dec
adc
ljmp
orl
mov
mov
dec
xchg
mov
adc
enter
popf
xor
mov
out
pop
adc
jmp
and
pop
test
lods
movsb
add
mov
in
scas
xchg
cmp
pushf
inc
mov
inc
repnz
nop
mov
jne
jnp
movsb
ds
add
jno
mov
mov
inc
inc
push
or
sbb
into
test
cmp
inc
push
adc
iret
mov
enter
xor
shl
iret
int
push
in
int3
sbb
mov
jo
jo
mov
mov
or
add
lret
add
enter
mov
xchg
hlt
jns
or
xchg
xchg
pop
ret
jne
mov
xchg
sub
test
test
pop
js,pt
and
dec
jmp
and
or
sbb
xchg
ret
shr
pop
mov
dec
loopne
push
push
inc
mov
pop
mov
adc
inc
test
outsb
addl
aas
mov
fldt
sub
jecxz
push
cltd
and
setno
add
pop
stos
in
xor
and
str
add
jp
mov
and
dec
mov
addr16
lods
testl
dec
lods
pop
mov
mov
pop
xor
mov
and
jmp
orl
push
ret
cmp
popa
je
in
inc
mov
adc
jne
pop
xor
ja
or
sar
xchg
rorl
incl
xchg
xor
xlat
shlb
jmp
je
xor
or
sub
and
cmp
inc
sub
dec
rolb
or
inc
xchg
les
inc
pop
add
inc
cmp
ret
jmp
leave
jns
inc
cmpsb
adc
popa
popa
loope
sub
aaa
fistpll
mov
repz
into
movsb
jle
iret
popf
add
imul
or
xor
int3
dec
mov
cwtl
dec
cmp
or
pop
sbb
push
inc
sbb
hlt
mov
pop
cld
xchg
pop
mov
out
and
scas
out
adc
inc
jae
jnp
out
dec
and
jecxz
cmpb
pop
inc
push
push
shrb
push
sbb
test
or
js
dec
push
adc
dec
xchg
jg
add
pop
out
push
jle
xor
outsl
incb
lcall
lods
or
jns
sub
in
xor
jmp
mov
loope
lods
gs
addb
pop
das
mov
pop
int3
inc
sub
or
or
sbb
mov
add
sub
sub
cmp
and
jg
sbb
and
loopne
xchg
pop
stos
lret
push
xor
xor
movsb
pop
mov
xor
mov
test
inc
icebp
push
loopne
out
add
xchg
sbb
sbb
add
enter
ja
inc
cmp
icebp
adc
mov
jl
incb
call
mov
adc
loope
inc
or
into
ja
or
int3
adc
jbe
sbb
adc
pop
outsl
push
pop
cmpsb
push
sub
mov
push
inc
push
xchg
adc
cmc
rcrb
push
pop
push
mov
push
aam
out
xor
push
add
jnp
xor
iret
dec
adc
jmp
sbb
ljmp
cs
lea
adc
mov
imul
sahf
or
idivb
lahf
dec
aad
nop
popf
mov
ret
les
call
sbb
popa
adc
pop
sar
dec
test
into
push
mov
inc
and
mov
popa
call
push
xor
fildl
mov
mov
loop
adc
shl
icebp
fistpll
icebp
push
jle
xor
xchg
sbb
jae
push
mov
sub
test
int3
shrb
out
mov
into
inc
mov
inc
jmp
or
inc
add
mov
pop
mov
xor
pop
clc
aad
out
or
jl
cmp
pop
push
dec
sub
dec
aaa
stc
dec
xor
sub
hlt
dec
sbbl
roll
enter
sub
fimull
or
in
idivb
loopne
cmc
xchg
mov
ret
aas
pop
xchg
sarb
loop
pop
aas
roll
es
incl
bound
in
test
xchg
push
movsl
mov
sub
xor
pop
pop
popf
inc
push
bound
xchg
sbb
sbb
adc
mov
cli
adc
xor
dec
test
movsl
test
mov
pop
adc
shll
push
push
mov
or
in
xabort
adc
sbb
dec
mov
fnstenv
dec
adc
sub
inc
movsb
or
add
jb
jae
mov
mov
sub
sub
pop
addps
and
push
and
movsb
or
inc
pop
and
lahf
push
sub
or
inc
sbb
hlt
or
int3
lock
inc
jmp
mov
or
out
dec
xchg
and
mov
jg
aad
jle
inc
sub
add
mov
add
xchg
jle
dec
xor
adc
cs
inc
add
rcll
stos
inc
xor
jmp
or
xchg
pop
repz
imul
je
test
mov
cmp
inc
xorl
idiv
leave
les
or
loopne
or
cmp
out
or
call
ret
cmpsl
iret
mov
fbstp
xchg
es
ds
jns
daa
fists
hlt
jle
or
fdivrs
hlt
jecxz
sbb
mov
adc
xchg
in
popf
out
mov
stc
or
cmpsl
and
stc
sbb
inc
dec
repz
add
int
sub
decb
mov
lds
push
arpl
testb
mov
push
pop
dec
cmp
in
les
sbb
mov
dec
jmp
outsb
jo
mov
push
push
mov
mov
inc
xchg
push
mov
lret
push
adc
push
std
lret
push
jmp
inc
icebp
xlat
popf
mov
sbb
or
js
jle
xchg
fadd
dec
and
ss
sub
xchg
xchg
mov
inc
mov
dec
aam
cli
icebp
test
mov
les
ja
inc
test
or
ss
fiadds
push
call
or
ret
push
inc
lods
hlt
ds
in
lods
outsb
lret
push
inc
mov
in
shll
aas
and
sbb
cmpsl
or
pop
mov
fsts
js
ret
pop
add
push
push
int3
jo
andl
adc
mov
and
bound
pop
pop
jns
dec
xor
pop
lahf
jb
xchg
and
pop
sbb
sub
mov
sub
pushf
pop
inc
sbb
clc
scas
je
mov
pop
sti
and
jge
repz
push
clc
dec
and
jbe
sbb
and
bound
xchg
loopne
xchg
pusha
inc
cmp
cmpsl
and
enter
loope
gs
das
jns
testl
outsb
cmc
mov
dec
pop
or
pop
outsb
xchg
outsb
cmp
mov
xor
repnz
data16
std
cmp
push
jmp
jle
sbbl
adc
and
sub
loopne
jl
xor
leave
scas
or
bound
inc
push
pop
push
std
pop
mov
imul
pop
add
push
and
fdivrl
cmc
pop
outsb
sbb
orb
jae
or
ljmp
loopne
sarb
cmp
outsl
adc
repz
adc
jo
pop
push
fldcw
fimull
dec
insb
xor
or
jge,pn
nop
popf
pusha
or
cli
mov
pop
push
cmp
leave
or
inc
aas
inc
mov
adc
push
xlat
xor
rorb
dec
and
mov
xchg
negl
flds
iret
fs
or
dec
xorl
pop
adc
incl
mov
rcrl
xor
sub
sbb
or
push
mov
fnstenv
xor
int
jnp
ret
sub
and
add
cmp
or
push
inc
adc
push
dec
rcl
imul
cmp
adc
inc
xchg
inc
je
mov
lds
push
loope
add
pop
mov
jmp
mov
adc
or
mov
rorb
push
push
push
mov
xor
cld
lret
mov
mov
pop
in
mov
aas
xchg
or
and
loopne
cmp
dec
ss
sub
and
xchg
mov
inc
jmp
ds
test
movsb
bound
mov
sub
push
ds
push
cmp
adc
popa
insl
dec
push
jge
dec
jb
lods
sub
mov
fcoml
push
addl
add
jne
xchg
les
pop
mov
xchg
adc
lret
mov
loopne
imul
mov
jge
sar
je
or
cmp
incl
js
les
adc
daa
add
das
inc
sub
mov
std
fldenv
ljmp
les
mov
fwait
dec
daa
adc
and
mov
adc
cmc
gs
dec
movsb
ljmp
adc
add
adc
adc
mov
sub
jbe
mov
sahf
inc
xor
nop
mov
push
pushf
xor
lcall
adc
adc
sbb
xchg
inc
push
push
jmp
lods
adc
push
adc
jb
add
fmuls
and
mov
sbb
adc
adc
sbb
adc
lcall
adc
mov
outsl
adc
jge
jmp
imul
in
shl
lods
mov
int
nop
pop
or
or
jnp
or
adc
cld
jnp
add
cmp
jge
mov
mov
push
mov
lret
sub
adc
mulb
jg
mov
subl
out
test
push
add
push
jnp
xchg
pop
sub
cmp
jno
inc
insb
lock
movsl
adc
stos
popw
pushf
sbb
out
and
and
push
jge
push
daa
fcmovb
sbb
inc
push
shl
out
xchg
or
sarl
insl
mov
inc
call
sar
stc
push
ja
cli
test
sbb
mov
mov
jg
mov
pop
sub
add
lods
push
inc
add
push
xchg
or
add
mov
mov
mov
popa
fs
adc
inc
cmp
jle
cmpl
pop
stos
sbb
loopne
test
jg
add
jge
test
in
fnstcw
xchg
stos
sub
or
sub
int3
adc
push
mov
sub
cld
push
bound
or
es
dec
or
daa
pop
addr16
mov
inc
adc
fsubr
in
sti
push
mov
adc
sbb
not
and
invd
out
or
push
jne
das
mov
sbb
push
ror
mov
or
push
aam
dec
pop
popa
hlt
pop
pop
sbb
add
add
pop
iret
adc
add
jae
mov
or
mov
add
adc
ret
push
mov
mov
jns
or
mov
in
ficomps
adc
or
sub
inc
rorb
lds
add
iret
pop
je
cmp
ret
mov
mov
pop
add
pop
pop
pop
js
xchg
push
push
jnp
aam
sub
and
or
and
aam
nop
mov
cwtl
mov
mov
pusha
js
adc
pop
inc
arpl
clc
pop
or
outsb
or
add
aas
mov
or
test
push
or
jae
sub
pop
push
addb
xor
leave
add
push
adc
push
ljmp
call
loop
rolb
sbb
sar
add
cmp
cmp
lds
jl
dec
mov
pop
shrb
and
cwtl
adc
jp
lea
mov
pop
pop
bound
shl
inc
cltd
aaa
call
dec
dec
js
sarl
in
mov
inc
add
inc
dec
je
out
add
lcall
nop
pop
cmpsl
pop
xor
mov
xchg
xchg
iret
adc
pop
cltd
mov
enter
push
adc
mov
js
adc
repnz
mov
mov
and
outsb
jne
xchg
in
mov
push
push
cmovb
push
cld
dec
mov
call
adc
lahf
test
call
popf
sub
dec
fsubl
or
cmp
add
dec
jne
pop
cmp
inc
push
iret
stos
dec
add
fs
cmp
xlat
mov
iret
enter
push
pop
jmp
aaa
cltd
or
iret
aad
rorl
fsubr
xchg
clc
test
sub
inc
enter
fistpl
and
or
and
xchg
sbb
mov
adc
sbb
cwtl
hlt
push
add
notl
cmp
jl
push
ret
lock
add
adc
cli
sbbl
dec
jno
clc
jns
mov
das
sbb
pop
dec
or
adcb
pusha
jle
push
or
or
mov
and
jmp
pop
cmp
xorb
sti
add
xchg
jg
outsb
jge
xor
xor
clc
cmpl
jmp
pop
pop
andl
jmp
sub
and
das
test
test
inc
jmp
jb
sub
push
cmp
icebp
or
xchg
test
cmp
jg
dec
sub
xor
pop
adc
push
scas
dec
aam
sbb
push
xchg
pop
and
inc
cmp
sub
push
xor
adc
mov
adc
adc
aaa
pop
mov
mov
andb
jg
add
repz
imul
jg
and
sbb
mov
xor
icebp
lret
add
inc
nop
in
xchg
ja
jp
inc
cmp
outsl
or
and
jg
xor
jo
in
sub
andb
mov
xchg
push
test
mov
push
cli
mov
add
mov
leave
sub
xchg
sar
ja
lods
cmp
dec
faddp
push
jle
pop
movb
test
test
sub
int3
mov
in
stos
inc
and
pop
mov
mov
jne
outsl
jo
push
jl
jae
xor
mov
sbb
sub
xor
pop
incl
add
push
call
dec
in
add
and
fistps
push
mov
dec
ret
stc
push
aaa
test
mov
cwtl
add
inc
mov
jno
jae
sbb
mov
sahf
dec
inc
sbb
xchg
iret
or
mov
aam
pop
and
or
sbb
aas
out
dec
pop
inc
inc
push
mov
or
xchg
iret
shll
and
and
cs
adc
rcr
mov
shrb
adc
inc
or
mov
dec
jmp
adc
lahf
pop
dec
sbb
leave
jmp
xchg
dec
add
leave
sbb
or
enter
test
cmp
dec
lret
and
add
fcmovb
jmp
or
lea
adc
bnd
mov
jmp
adc
or
repz
call
xor
fists
push
test
or
into
fldt
sub
movsb
sub
inc
push
dec
add
pop
push
sar
pop
gs
fwait
mov
mov
xor
ss
xchg
mov
adc
leave
sbb
mov
divb
lea
shlb
cmp
push
or
pop
jmp
pushf
or
xchg
imul
sahf
adc
iret
push
push
movzbl
push
xor
pop
rclb
jne
addl
add
jp
push
sbb
ds
clc
xchg
les
jmp
add
dec
xor
mov
addr16
or
sub
pop
shrl
inc
sub
sub
mov
or
jbe
mov
call
mov
mov
push
adc
pop
add
add
and
aaa
mov
jle
push
adc
das
xchg
mov
push
add
cmp
adc
testb
or
movsl
inc
lret
daa
and
inc
fsts
inc
repz
fldcw
adc
xchg
test
pshufw
add
lods
push
jbe
dec
data16
pop
or
xchg
cmp
pop
jge
sbb
push
sub
loop
stos
fdivl
dec
sbb
xlat
divb
inc
add
nop
rolb
sbb
test
inc
adc
pop
loop
push
enter
xor
sbb
sbb
or
jecxz
sub
inc
dec
fstps
cmpsl
in
cmpl
push
in
sub
and
popa
fstl
fsts
je
js
pop
sbb
sub
rcrl
jnp
and
push
push
xor
je
jnp
jbe
xor
mov
pop
add
negl
repnz
das
wrmsr
pop
pop
cmp
pop
xor
and
jne
scas
shrl
cmp
movb
sub
leave
push
sub
fistps
or
orb
call
jno
adc
mov
cld
mov
sub
fidivl
mov
cmp
xor
mov
adc
add
inc
or
ja
xchg
xor
xchg
mov
push
into
add
jmp
or
lds
sbbl
cmc
decb
out
add
ljmp
cmp
push
mov
stos
sbbl
into
mov
sbb
ljmp
pop
pop
jmp
xchg
xor
cmp
cmp
adc
sbb
adc
jbe
push
cli
inc
clc
repz
movsl
jecxz
cwtl
call
sbb
fstpl
hlt
add
les
mov
and
xlat
pop
cmp
pop
sbb
enter
lods
pop
sub
add
inc
mov
decl
int
rorb
push
cmpl
add
lahf
xor
xchg
hlt
fnstsw
data16
fstpl
orb
xchg
adc
movsb
mov
daa
add
pop
push
in
dec
call
push
inc
fsub
adc
or
pop
in
hlt
pop
mov
popf
or
push
or
add
add
out
sbbl
push
rorb
xchg
rcr
and
ss
xchg
mov
cmp
jl
or
cmp
subl
hlt
lods
insb
push
add
fs
dec
cmp
imul
xor
pop
jmp
cmpsl
clc
lcall
mov
movsl
jle
scas
dec
dec
stos
xchg
int3
mov
or
jmp
mov
mov
sbb
inc
jle
xor
jnp
gs
jb
adc
jmp
lock
shl
cltd
cmpsb
or
dec
dec
push
lcall
adcl
sbb
adc
subb
sahf
stos
cmpsl
inc
sub
push
xchg
stc
xchg
jmp
test
daa
jo
adc
jae
dec
in
adc
out
bound
mov
addr16
push
fdivl
jne
out
lods
aam
dec
sub
jno
aas
sbb
sbb
adc
mov
or
sub
aam
or
sub
aad
out
pop
lcall
imul
fstl
and
decb
inc
popf
enter
aaa
and
add
jmp
xchg
mov
int
add
adc
mov
xor
jmp
sub
and
push
pop
dec
jmp
shll
shrl
je
mov
outsl
mov
cltd
mov
jno
das
movsb
jnp
sbb
mov
or
arpl
sbb
outsl
and
dec
sbb
iret
test
imul
fists
repnz
sub
cld
rolb
jg
ret
mov
mov
test
mov
rorb
loope
stc
jge
pop
sbb
cli
test
subl
jbe
adc
jl
neg
jg
fcomip
dec
lcall
adc
xchg
or
add
pop
movsb
sbb
dec
pop
in
cld
cli
adc
adc
fadds
gs
adc
xchg
subl
ret
xor
sbb
sub
mov
push
push
cmp
aam
gs
push
xor
mov
pop
jae
lds
pusha
sbbl
cmpsb
mov
or
loop
sti
mov
daa
jmp
pushf
xchg
ret
add
sbb
jmp
jb
adc
notb
and
and
xchg
pop
xchg
add
pop
mov
int3
pop
add
xchg
in
jmp
jmp
xchg
enter
iret
adc
xchg
and
xchg
ret
dec
outsl
xchg
cmp
add
push
mov
xchg
add
inc
and
xchg
or
and
inc
out
mov
adc
and
dec
in
xchg
in
adc
sti
push
out
aas
jmp
and
pop
pusha
and
sbb
cmp
or
shlb
push
nop
or
mov
in
clc
andl
inc
sbb
and
add
xor
imul
cltd
jp
cmp
loope,pn
cli
hlt
insl
arpl
idiv
sub
push
push
inc
push
xchg
je
xorl
sub
sbb
and
imul
push
and
adc
pusha
roll
outsb
shrl
push
les
loope
mov
xchg
dec
iret
add
jmp
outsl
dec
dec
and
lock
dec
pop
add
imul
fdivrs
cli
mov
add
in
mov
xchg
inc
mov
sub
push
add
jge
aas
jb
and
in
sbb
add
pop
or
add
sbb
insl
add
add
or
icebp
test
adc
pop
mov
push
sbb
mov
sbb
out
mov
cs
clc
jnp
dec
sbb
jne
das
add
neg
and
or
dec
ss
push
ficoml
and
pop
cli
adc
jne
pushf
adcl
lea
clc
jecxz
jns
adc
or
cltd
sti
adc
lret
dec
dec
roll
in
add
jo
mov
mov
lea
jl
xor
shll
pop
and
adc
icebp
mov
decl
mov
je
sub
mov
rorb
adcb
sbb
sub
nop
popa
or
xor
fs
pop
add
or
andb
jmp
fcomps
pop
leave
or
movsb
adc
lsl
cmp
adc
aas
push
mov
cs
mov
clc
mov
pop
push
add
clc
jne
inc
daa
ret
in
ds
sbb
call
jo
pushf
sub
sub
hlt
sub
push
mov
out
shll
push
push
cmp
push
push
add
pop
mov
jecxz
and
cli
or
hlt
or
dec
es
cmp
xor
mov
or
push
lea
shlb
and
add
jne
jmp
fisubl
test
cli
sub
xchg
push
and
cmc
dec
js
lds
or
jnp
mov
inc
push
ja
pop
inc
cmp
push
push
sbb
ds
pop
inc
adc
leave
pusha
sub
into
adc
test
push
mov
pop
push
jns
stc
push
lods
loopne
cmpsl
jne
lock
jmp
or
dec
or
adc
leave
xchg
std
push
pop
mov
and
add
xchg
lds
jmp
int
scas
fistpl
aam
dec
enter
lret
repz
mov
fcoml
pop
popf
push
adc
mov
mov
fsubrl
pusha
and
je
and
add
or
adc
popa
inc
out
inc
mov
mov
pop
js
xchg
test
mov
ds
outsb
push
inc
sub
and
lcall
clc
ja
mov
dec
mov
fdiv
dec
cmc
clc
insl
movsb
mov
dec
or
mov
push
in
pushf
out
in
es
or
stc
mov
clc
and
inc
lret
inc
sub
repz
jb
sbb
lods
xchg
std
mov
sarl
ja
sarb
jecxz
stos
mov
and
sbb
testl
jmp
pop
and
push
push
push
cmp
jne
jns
dec
or
push
jmp
pop
mov
add
add
xlat
add
jle
inc
xchg
popa
mov
sti
mov
pop
je
dec
sbb
push
or
scas
rcrl
sub
push
push
add
repz
sub
cmpsl
jp
into
push
add
adc
jne
fwait
sbb
adc
sbb
pop
jg
addl
jle
out
or
add
cld
add
movsb
cmp
push
adc
jg
dec
pop
cmp
sub
mov
add
mov
sahf
jl
add
add
mov
orl
fs
mov
ja
mov
ds
push
add
cmp
xor
aam
gs
inc
stos
cmpsb
loop
inc
sbb
out
inc
sub
mull
push
out
dec
push
pop
inc
lret
outsl
hlt
stos
loop
push
fimuls
jae
test
cli
or
mov
adc
cmp
or
in
aam
fnstenv
jmp
neg
sar
outsb
in
inc
xlat
movsl
mov
andl
push
into
loopne
mov
fsubr
pusha
cmp
jge
repnz
test
adc
push
jno
popf
add
inc
push
push
and
lds
add
mov
lea
rol
sbb
test
movsl
push
add
mov
adc
enter
ret
mov
bswap
xor
jo
and
dec
nop
cmc
add
jne
push
mov
and
xchg
ljmp
sahf
cmp
cmp
lds
test
and
cmp
jle
xchg
mov
dec
pop
and
adc
pop
sbb
sub
pop
dec
or
mov
sbb
sub
rolb
cmp
inc
pop
mov
add
je
mov
xor
xlat
lcall
js
xor
sti
lds
idivl
lea
les
scas
sub
andb
add
ds
int3
je
lahf
loopne
cmp
xchg
ret
test
and
jb
call
inc
mov
out
push
pusha
push
movsl
mov
sbb
mov
sbb
js
lahf
mov
pop
push
sbb
inc
push
fstl
mov
xchg
push
push
insl
popf
mov
pop
inc
std
pop
fnstsw
inc
push
fisttpl
push
push
pushf
inc
test
and
mov
in
sbbl
push
in
jns
lods
dec
test
jp
loopne
sub
push
or
sub
cmpsb
push
into
fistpl
xor
je
cwtl
sbb
sbb
xlat
mov
out
mov
push
sbb
fisttps
and
push
popa
adc
sub
testl
mov
mov
ret
movb
fistpl
sbb
add
jne
mov
sbb
cmp
push
xchg
and
fstpt
popa
pop
inc
push
xchg
rorl
xorb
nop
xor
adc
aaa
fsubr
inc
cltd
les
sub
sub
cltd
inc
pushf
shrb
sahf
mov
cmpl
dec
mov
xor
lea
call
pop
adc
inc
cmp
dec
push
jmp
xlat
jmp
test
je
jmp
test
sbb
jl
jp
cwtl
addb
jle
imul
inc
cmp
in
imul
aas
xor
inc
dec
mov
dec
dec
dec
xchg
push
adc
scas
data16
mov
xor
pop
pop
iret
and
int
enter
mov
into
inc
neg
sbb
rcl
and
out
dec
or
dec
jnp
aad
mov
call
and
push
xchg
inc
xchg
clc
jne
test
cmp
inc
dec
sbb
ljmp
cmpb
ja
aad
ret
adc
sti
pop
mov
leave
daa
test
and
lea
sbb
mov
mov
insb
rorl
notb
divb
scas
xor
pop
push
pop
aad
imul
ret
jp
adc
xchg
mov
push
mov
pushf
sbb
mov
pop
stc
jmp
xchg
inc
and
stos
into
add
jne
pusha
je
pop
pop
fdivrl
movsb
ret
cmp
add
mov
adc
mov
loop
int3
cwtl
jecxz
jb
xchg
roll
mov
or
cmp
ds
into
and
shrb
adc
inc
imul
pushl
sub
cmp
rcrl
mov
push
push
dec
mov
dec
mov
or
mov
pop
jg
sub
std
dec
sbb
xchg
imul
jns
jno
daa
addr16
into
call
mov
pop
ret
mov
clc
xor
dec
or
push
push
mov
pop
xor
pop
jmp
inc
dec
adc
cld
stos
sub
push
mov
dec
stos
add
add
out
fs
mov
push
mov
xor
lds
mov
lock
push
rorb
lret
push
or
les
push
dec
hlt
sbb
cmpsb
lea
push
mov
imul
inc
test
mov
movsl
cmp
ljmp
enter
dec
jmp
outsb
das
mov
xchg
and
xchg
vprotw
cmp
push
mov
inc
and
jbe
jmp
and
push
shll
loop
bound
cmp
add
arpl
hlt
int3
ret
test
and
popa
nop
lock
xchg
or
movsl
inc
adc
pop
aas
js
or
inc
pop
repnz
gs
push
rolb
cwtl
push
and
std
les
and
pop
jmp
nop
and
sbb
push
ret
call
testb
adc
push
mov
xchg
pop
enter
inc
and
lcall
and
or
mov
jmp
inc
sub
cmc
or
js
push
sbb
xchg
or
insb
ja,pn
xor
inc
cmp
call
cmp
inc
leave
and
add
jnp
sub
repz
lock
add
jmp
mov
and
daa
and
add
adc
popf
testl
add
in
adc
je
out
fdivs
lret
cmp
lcall
cmp
ja
or
or
and
clc
cmp
inc
test
ljmp
lods
cmp
into
sub
mov
sbb
cmp
push
dec
mov
sbb
inc
jns
inc
dec
pop
xlat
pop
les
fmull
push
push
ret
sub
pop
xchg
or
mov
push
cwtl
imul
gs
mul
push
push
jecxz
lahf
lds
rcrb
fwait
inc
shrl
xchg
leave
icebp
add
mov
push
inc
xor
imul
and
das
mov
or
jns
or
pop
cmp
dec
pop
dec
push
je
loopne
call
mov
adc
lret
dec
jmp
pop
testl
or
or
jno
jl
mov
inc
aaa
addl
push
pusha
jmp
fcom
sub
ret
sti
sbb
hlt
repz
in
loopne
stos
fidivrl
push
lea
test
dec
and
rol
repnz
dec
push
stos
leave
dec
sub
adc
jae
fildl
je
mov
data16
push
lahf
insl
xor
daa
push
in
loope
fs
push
sub
pop
jb
clc
xor
cmp
decl
test
push
push
inc
or
adc
mov
cmp
ret
mov
jne
and
cld
and
add
cmp
and
call
shll
decb
adc
enter
aaa
mov
in
test
scas
mov
push
loopne
mov
shll
or
push
test
xchg
mov
xchg
dec
xlat
in
xchg
jae
adc
fdivs
je
pusha
push
push
push
test
sub
dec
movsb
or
add
push
sbb
and
js
sub
xchg
mov
mull
add
mov
mov
out
xchg
shrl
pop
int3
pop
sub
pop
clc
out
and
add
or
push
or
je
inc
fists
inc
jmp
and
push
call
sbb
cli
jmp
or
or
and
mov
mov
imul
repz
xchg
dec
add
adc
push
fwait
les
and
adc
sbb
cmpsb
push
add
xchg
std
lret
xchg
repz
jge
les
sub
mov
dec
push
mov
aam
mov
lods
test
jl
imul
push
add
and
xor
jmp
stos
sahf
ljmp
push
lods
fcoms
or
xor
pop
mov
push
outsb
or
adc
push
ljmp
je
adc
xchg
sbb
push
dec
adc
sub
popa
mov
loopne
inc
int3
adc
sbb
movsb
mov
or
ret
mov
dec
push
in
int3
sub
adc
in
and
adc
sbb
sub
lock
enter
js
ret
mov
mov
sahf
pusha
loopne
mov
fcoml
adc
and
pop
dec
or
xchg
or
cmp
and
test
pop
and
jle
test
out
adc
sti
pusha
