add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
or
add
add
lock
add
add
add
add
add
addb
add
or
add
lock
add
pop
add
push
add
dec
add
dec
add
add
add
add
and
add
add
or
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
jno
push
add
es
cmpsl
ss
add
pop
adc
aaa
sub
fildl
add
pop
dec
add
dec
cmp
jecxz
push
add
ja
add
sbb
add
pop
inc
add
inc
add
pop
add
popf
pop
pop
add
and
add
outsl
push
add
and
add
fs
add
outsb
dec
add
jbe
add
insb
inc
add
dec
add
sbbb
mov
mov
dec
add
jo
call
jne
fmull
test
jmp
cltd
add
mov
add
mov
add
mov
sub
add
add
fisttps
add
push
sub
call
add
ret
xor
add
inc
push
add
dec
push
add
push
sub
cmp
add
cmp
add
dec
adc
ret
add
inc
add
sarb
add
fisttps
add
inc
or
fmull
add
xor
add
arpl
add
sub
out
add
loope
add
stos
arpl
add
pop
add
sub
add
push
adc
add
push
add
outsb
add
clc
add
mov
add
lcall
add
jb
add
add
ret
push
add
imulb
add
pop
add
out
add
ret
je
add
push
add
jle
add
mov
add
addl
decl
add
xchg
call
add
call
pop
or
lcall
add
add
notb
add
andl
leave
cltd
dec
add
stos
add
icebp
sahf
add
leave
xchg
add
mov
add
cwtl
add
ljmp
add
les
add
cmpsl
sub
jmp
add
rcrb
add
and
jae
add
aam
or
xchg
jge
add
xlat
pop
add
adc
lahf
cwtl
add
ja
inc
add
data16
rcrb
add
or
push
jle
add
xor
sub
das
add
addb
sub
mov
add
add
push
add
dec
mov
mov
add
or
add
add
add
push
xor
add
add
add
add
add
add
jns
add
jno
add
outsl
add
add
add
arpl
add
rorb
mov
add
pop
add
add
add
test
add
lret
inc
add
mov
add
cltd
push
add
add
pop
sub
adc
add
imul
push
add
pop
add
mov
add
xchg
add
out
scas
add
movsb
add
movsb
insb
add
mov
add
lret
addl
ret
add
nop
add
jbe
add
icebp
popf
add
cld
movsl
add
jno
add
lret
xchg
add
xchg
data16
xchg
adc
inc
add
outsl
dec
add
addl
xorb
addr16
add
xchg
add
add
stos
mov
test
xor
add
push
add
xchg
lea
or
add
mov
add
fwait
mov
sbb
scas
add
cmc
add
pushf
roll
int3
incb
add
out
add
mov
aam
add
fildl
or
mov
incl
sbb
in
add
leave
repz
sar
add
add
std
add
push
add
jge
add
mov
add
cld
add
repz
popa
sti
add
arpl
add
push
jmp
add
push
mov
add
cmp
add
mov
add
daa
mov
add
jo
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
cmp
add
add
add
add
add
add
add
add
add
add
popa
pop
dec
sbb
sbb
add
add
add
add
add
add
add
add
add
push
ss
ss
add
add
add
add
add
add
add
add
add
cmp
sbb
pop
sbb
xor
xor
sbb
add
add
add
add
add
add
add
adc
sbb
outsl
mov
adc
ss
add
add
add
add
add
ja
adc
outsl
lcall
adc
add
add
add
add
add
add
xor
aaa
inc
inc
inc
pop
movsb
movsb
mov
aaa
xor
jb
dec
adc
add
add
add
add
add
aaa
inc
inc
dec
dec
push
xchg
mov
inc
aas
cmp
jg
dec
sbb
add
add
add
add
ja
aas
inc
dec
push
push
push
outsb
popf
popf
lahf
lahf
xchg
push
dec
inc
inc
pop
mov
dec
add
add
add
add
add
inc
dec
push
push
pop
pop
imul
push
orb
bound
add
add
add
add
dec
push
pop
pop
pop
adcb
mov
mov
add
add
add
add
dec
pop
pop
fwait
mov
mov
mov
push
sbbb
cmpb
add
add
push
mov
loopne
out
outsl
jbe
imul
lcall
add
add
mov
fabs
out
fstp
lea
popf
popf
mov
add
push
and
push
or
out
jecxz
shll
jge
imul
and
sub
sbb
or
aad
loopne
call
jl
je
pushf
popf
popf
mov
add
and
sub
sbb
out
fucom
lea
nop
popf
mov
add
and
sub
and
or
out
fstp
mov
jns
test
popf
mov
add
cmp
sub
and
or
call
cmpsl
mov
jae
add
add
and
daa
sub
sbb
push
rcr
mov
rol
aad
mov
mov
pop
imul
add
add
and
sub
es
or
mov
lds
gs
add
add
add
add
sub
and
jmp
lret
int
mov
mov
pushf
fs
add
add
add
add
add
repz
add
idiv
cld
ret
enter
rol
int3
fwait
test
add
add
add
add
repnz
jmp
sti
ror
int3
mov
mov
add
add
add
add
add
add
in
ljmp
lret
int
mov
rclb
add
add
add
add
add
in
out
ljmp
int
mov
xchg
add
add
add
add
add
add
add
in
out
jmp
cld
ret
enter
mov
add
add
add
add
add
add
add
repnz
ljmp
ret
int3
add
add
mov
add
add
add
add
add
add
in
in
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
in
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
loopne
add
add
add
sldt
adc
add
add
add
add
add
add
or
add
pusha
add
add
loopne
add
add
add
add
add
add
scas
adc
add
add
cli
mov
sldt
cli
lldt
cli
ltr
cli
sldt
add
add
cli
sldt
add
add
ltr
cli
sldt
add
add
cli
sldt
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
push
inc
push
outsl
arpl
je
add
add
and
add
add
add
add
add
add
add
cwtl
and
add
push
ret
mov
hlt
stos
jbe
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
popf
adc
add
loopne
add
sub
mov
pop
mov
outsl
dec
mov
rorb
hlt
mov
inc
jnp
dec
test
mov
aam
jbe
pop
mov
jg
fnstsw
sub
insl
int3
pop
and
xchg
pusha
jns
sbb
std
test
es
jne
xchg
jae
repz
stc
inc
add
test
push
scas
add
inc
inc
or
mov
and
addr16
pop
xchg
inc
lods
ret
insl
std
add
adc
mov
mov
push
jae
lcall
movsb
ret
mov
mulb
push
xor
gs
loopne
fcoms
pop
xchg
push
or
mov
popf
dec
mov
adc
dec
mov
cmp
cmpl
enter
movl
jns
scas
out
xor
mov
faddl
roll
mov
xor
aad
mov
loop
xchg
outsl
inc
push
inc
pop
push
int3
pop
jne
into
repz
loop
pop
popf
pusha
pushf
jmp
adc
pop
mov
ja
jbe
mov
je
or
cmc
ret
xlat
inc
divb
mov
inc
mov
xlat
sub
sbb
stc
push
imul
jmp
cli
stos
xor
jp
or
imul
and
clc
outsl
mov
mov
or
popf
xchg
push
cwtl
in
or
arpl
insb
mov
pushf
iret
cmp
jb
in
jne
addr16
mov
mov
hlt
ja
mov
and
jnp
jle
pop
mov
in
in
mov
sub
or
stc
cmpb
fcmovnbe
es
pop
jns
fdivrs
jo
aaa
jb
out
inc
stos
xor
or
xchg
sub
push
sub
cmp
es
pop
sbb
sub
jp
adc
and
and
jp
cmc
out
mov
xor
int
movsb
dec
in
sbb
cmpsb
sti
or
add
jns
inc
fidivrl
jb
ror
jae
mov
fistl
or
pop
cs
scas
adc
xchg
mov
cmp
dec
cli
das
jae
or
or
ret
pop
pop
add
test
push
addl
insb
mov
mov
addl
cltd
xorb
inc
mov
sarb
pop
inc
ret
std
xor
bt
mov
pop
mov
xchg
inc
scas
sbb
insb
or
sbb
push
lahf
push
ss
cmpsl
jg
jle
outsl
add
mov
mull
inc
mov
fs
fs
push
lea
mov
or
sub
dec
test
jae
mov
push
push
addl
shrl
mov
bound
lahf
push
rcll
ficompl
xor
sbb
jb
push
cmp
inc
cltd
mov
idivl
sub
mov
jb
paddsb
mov
das
fbld
xor
pop
imul
outsl
adc
cmp
adc
dec
pushf
or
daa
pop
push
mov
jae
push
imul
push
mov
sub
outsb
mov
inc
mull
cmp
loope
sbb
aam
fcmovb
inc
mov
rdmsr
jae
mov
shrl
cltd
aaa
out
xor
xor
mov
sub
rol
add
jmp
or
mov
fisttpll
xor
adc
orl
and
aam
sbb
xchg
clc
jmp
sub
sub
popa
rcrl
jb
mov
and
jmp
dec
icebp
xchg
cmp
shl
mov
stos
in
fldl
adc
push
push
add
lods
xor
arpl
hlt
adc
mov
ret
jge
push
push
ja
cltd
pop
shrb
push
adc
pushf
mov
xor
je
inc
sarb
or
insb
cld
inc
ror
sbb
push
jle
pop
add
mov
inc
icebp
imul
mov
push
push
sub
adc
pusha
fnsave
ficoms
pop
mov
incl
jle
mov
lret
in
data16
cmpl
fwait
in
push
fcmovu
clc
cmpb
mov
cmpsb
lahf
push
shlb
inc
xlat
mov
rcrb
jge
pop
and
test
mov
pop
mov
das
cs
scas
cmp
xchg
insl
push
ret
sub
cmpsl
pop
mov
clc
mov
sub
and
or
mov
mov
mov
xor
inc
and
test
pop
outsb
xor
push
dec
jp
pop
inc
jo
imul
imul
rorb
xchg
pop
lret
add
int
ja
clc
repz
mov
into
in
out
lahf
ret
add
mov
push
out
mov
aam
dec
cli
jnp
ljmp
rcr
out
inc
rcrl
daa
outsb
mov
icebp
loop
and
sti
les
adc
loopne
es
and
mov
inc
clc
sahf
jns
js
rcrb
fcoml
adc
mov
jmp
pop
inc
add
xor
sbb
jp
mov
aam
rolb
and
ds
gs
dec
and
jb
fmulp
jne
pop
out
subl
mov
ss
add
dec
call
and
pusha
xchg
popf
stos
xor
data16
sbb
cs
fdivrl
mov
inc
mov
inc
jne
scas
ret
jecxz
xor
inc
fisubs
pop
movsl
xchg
pop
adcb
xchg
push
repnz
pop
test
dec
mov
mov
cs
mov
jno
push
jge
sahf
mov
jmp
or
aam
push
loope
or
jmp
jmp
add
jmp
call
nop
cwtl
loopne
int
mov
pop
mov
cmp
out
inc
dec
sub
fdivrl
lds
cmpsl
push
test
stos
mov
sub
fdivs
mov
js
clc
repnz
imulb
mov
inc
cmp
cli
and
ss
jp
lahf
outsb
mov
cld
movsb
dec
insl
cmp
cwtl
mov
mov
shl
iret
ret
hlt
and
aaa
cwtl
lret
shrl
fwait
jmpw
dec
adc
ret
and
or
jg
inc
test
inc
call
dec
mov
pop
arpl
pop
and
cmpsl
cli
mov
test
cli
jge
mov
test
outsl
jl
dec
fmuls
orl
iret
fnsave
int3
fldl
inc
and
rorb
nop
cmp
cmp
jno
imul
dec
jne
ljmp
sahf
and
and
xor
mov
cmp
mov
cltd
adc
xchg
mov
aam
add
or
arpl
subb
popa
ror
inc
loopne
xor
fmul
sahf
sub
mov
and
pop
lods
jnp
sub
push
inc
sub
inc
sub
dec
adc
push
outsl
movsl
loop
jb
push
pop
mov
scas
or
or
lahf
test
push
adc
inc
dec
xchg
je
gs
push
push
aam
or
mov
push
sarl
dec
cmp
and
aad
push
and
mov
pusha
mov
cld
push
pop
push
mov
jnp
and
jecxz
test
mov
leave
daa
mov
jne
mov
out
leave
addl
cmp
jle
hlt
and
ds
xor
popa
scas
xor
repnz
shr
inc
xor
insb
lret
imul
mov
mov
xchg
push
push
inc
clc
cmpsl
pop
iret
das
nop
cmp
scas
stos
jbe
std
mov
shrl
ljmp
dec
push
scas
cwtl
xor
mov
mov
mov
xor
rclb
mov
cmp
mov
fldt
bound
adc
adc
ret
inc
repz
popa
xchg
stos
xchg
iret
fisttpll
enter
push
lea
or
negb
mov
inc
outsl
sarb
sbb
aaa
mov
push
pop
movsb
xlat
aad
lds
xor
mov
xchg
ljmp
mov
push
jl
enter
xchg
out
call
sbbb
xchg
jecxz
jne
add
inc
mov
jne
ljmp
stc
ficoml
adc
and
stos
ljmp
mov
jno
sbb
in
incl
add
inc
icebp
in
sbb
sub
sub
cmp
xor
push
xchg
addr16
lahf
cld
mov
or
cwtl
dec
or
call
cmp
cmpb
xchg
movsb
loope
mov
pusha
loopne
sbb
fimull
ds
int
xlat
add
pop
es
ret
scas
add
addr16
ss
inc
adc
stos
mov
push
hlt
pop
xor
repnz
mov
mov
mov
data16
rorb
ret
dec
mov
shrl
mov
pop
pop
mov
add
or
rcr
inc
hlt
or
test
psrlq
or
js
xor
jo
jge
les
adc
inc
fs
mov
pop
jbe
popa
xchg
xor
frstor
test
daa
in
push
push
movsb
repz
mov
cmc
addr16
mov
hlt
scas
fsubrl
pop
out
push
xchg
lmsw
pop
pop
dec
cli
dec
sub
jne
ret
enter
and
jmp
mov
das
jb
repz
scas
mov
jne
vcvtpd2ps
inc
jg
jae
in
pop
mov
cld
sbb
push
xchg
out
mov
sbb
mov
jg
ds
int
in
xchg
jmp
xchg
test
sbb
aad
inc
push
mov
xchg
adc
cmpsb
jb
nop
mov
gs
mov
mov
insb
xchg
pop
decb
aad
pop
xchg
xchg
lahf
jns
dec
add
adc
adc
out
push
sti
pop
xlat
out
idiv
mov
aaa
insb
andl
jge
fistps
jg
test
xchg
sahf
lods
stos
inc
adc
gs
lcall
cmp
xchg
adc
jb
pop
mov
push
and
in
xor
jp
mov
dec
dec
cmc
pop
inc
ljmp
pop
xor
lahf
mov
in
into
jecxz
out
jnp
sbb
cmc
lock
add
pop
xor
xor
xchg
mov
out
in
and
inc
add
push
mov
pop
rclb
jge
stos
jb
dec
and
push
pop
sub
sbb
lods
fistpl
cmp
test
push
dec
mov
out
pushf
movsb
sub
das
jl
in
daa
sbb
cmp
jmp
adc
or
ficoml
lock
mov
add
mov
arpl
iret
fdivl
loop
cltd
jbe
dec
addb
dec
add
jbe
aam
dec
mov
jno
test
or
inc
xchg
adc
insb
sub
cmpl
ja
xlat
in
cmpsb
mov
ret
pop
or
add
rorl
dec
cmp
pop
in
scas
xchg
shrl
dec
out
in
scas
pop
mov
lahf
xor
fdivrl
jmp
std
and
sti
mov
fimuls
ss
push
mov
mov
fcmovbe
add
pop
mov
mov
push
cmp
in
push
jmp
jp
cmp
sub
lea
jl
test
pop
or
das
stos
call
mov
jb
pop
cltd
test
mov
bound
outsl
mov
xor
data16
shl
dec
push
ljmp
inc
cmp
leave
mov
push
push
enter
rorb
adc
frstor
xlat
add
clc
xchg
xor
mov
xchg
out
lods
jg
movsb
mov
or
std
int
xchg
addr16
inc
jecxz
xor
ljmp
add
xor
in
stos
sbb
mov
pop
mov
mov
xlat
enter
addl
rcrb
outsl
adc
xor
fs
lahf
icebp
cwtl
je
cmc
rolb
mov
cli
ficoml
add
push
lcall
repnz
gs
or
leave
xchg
add
or
mov
dec
add
sbb
xor
mov
fisubl
cmpsb
mov
int
in
pop
pop
stos
pop
or
in
jne
or
lret
clc
pop
loop
ret
mov
or
das
ret
leave
jg
dec
sbb
jg
orb
test
pop
cld
sbb
scas
cmp
movsb
outsb
cmp
push
ss
mov
pop
ljmp
movsl
xchg
pop
sbb
jge
lds
mov
out
cmpsb
pop
lret
and
jbe
jno
or
push
mov
cmp
mov
mov
jmp
adc
xchg
cmpb
and
mov
jns
mov
lcall
mov
lea
add
inc
mov
ret
enter
mov
cmpsl
jo
add
pop
call
cmc
push
stos
jno
das
fidivl
sbb
mov
sub
aas
decb
mov
xchg
mov
nop
jle
mov
je
jne
leave
jbe
inc
iret
inc
lods
xor
or
daa
and
dec
ds
shll
sub
adc
std
cmpsb
jmp
adc
shll
insl
mov
mov
mov
je
addb
pop
jp
sbb
leave
sahf
xor
ljmp
dec
es
rcl
lods
push
pop
jne
jge
mov
icebp
mov
lahf
jl
dec
mov
mov
insl
add
jecxz
sbb
mulb
out
shrl
subb
cmp
push
mov
pop
push
shll
add
dec
insb
xchg
cmc
and
xchg
push
je
ljmp
push
mov
and
orl
push
bound
adc
cs
gs
in
andb
pusha
mov
inc
es
aam
aaa
xor
outsl
dec
js
movsb
dec
or
xchg
jo
lods
pop
push
dec
mov
mov
in
sbb
or
and
mov
inc
mov
cs
loop
inc
sub
or
sub
pop
popa
mov
mov
adc
push
sub
jecxz
push
jnp
into
or
adc
aad
and
pop
arpl
repnz
in
jp
pusha
xchg
fnstsw
arpl
in
imull
cmp
aad
pop
outsl
add
xchg
dec
mov
pop
lret
je
jmp
ljmp
outsl
xchg
les
mov
movsb
lahf
sub
notl
sub
popf
shlb
inc
dec
dec
pop
add
pop
pushf
xchg
bnd
mov
addr16
pop
filds
fildl
scas
out
cld
xchg
and
xchg
daa
sbb
js
lret
sub
mov
mov
imul
mov
mov
pop
clc
sbb
mov
or
pop
testb
out
and
push
sub
inc
and
cmp
stos
and
push
addr16
xchg
mov
ret
xchg
ds
out
inc
pop
add
mov
lea
cwtl
int3
add
mov
iret
mov
adc
in
pop
dec
test
popf
in
fsubr
adc
das
fdivl
add
int3
cmc
dec
cmp
fimull
enter
outsb
lcall
sub
adc
push
jb
fistpl
inc
xchg
dec
push
jno
test
inc
mov
rcr
add
stos
cld
loopne
sbb
jle
xor
adc
jo
mov
ja
adc
adc
mov
shlb
popa
cmp
adc
xlat
mov
push
xchg
xchg
int3
std
movsb
jno
psubb
fs
pop
inc
sub
test
icebp
jno
call
fildl
out
pavgb
icebp
je
shll
jno
out
push
cmpsl
add
into
roll
jo
aas
jae
mov
inc
mov
pop
jmp
sub
push
fwait
jmp
test
fistps
inc
xchg
mov
add
ss
and
scas
mov
stc
lahf
rclb
cli
jecxz
adc
and
imul
inc
js
add
pop
aaa
inc
mov
xor
sbb
test
or
sub
addl
sub
jo
pop
or
cmp
push
scas
inc
xchg
js
dec
nop
out
movsb
sub
dec
arpl
daa
stos
repz
arpl
sub
clc
call
test
loope
dec
scas
push
mov
shrb
adc
xor
and
inc
leave
mov
sbb
aam
int
mov
or
aas
stc
leave
add
jo
lcall
movsl
and
sar
sub
or
leave
in
loopne
push
aaa
xor
mov
iret
sub
mov
xchg
lret
out
and
stos
out
cmp
lds
into
jecxz
inc
fldl
andb
cmp
sti
xor
daa
in
aaa
mov
dec
clc
pop
jne
sbb
and
or
in
insl
push
ljmp
mov
jg
stos
mov
repnz
add
mov
sbb
rcll
and
scas
ljmp
pop
pop
rcll
and
insl
stc
frstor
xchg
lods
pop
add
push
jno
cmc
andb
pop
cmpps
jns
jl
jle
sbb
std
sbb
inc
xor
cld
pop
mov
in
cmpsb
fwait
daa
ror
and
jp
add
test
adc
mov
rcll
xor
gs
dec
mov
jno
sar
in
inc
fidivl
std
dec
mov
mov
stos
add
pusha
push
add
cmpsb
xchg
fisubs
jp
or
and
nop
jae
imul
es
sahf
and
jmp
cmpsl
xchg
sbb
pop
or
sbb
add
jnp
push
pop
cld
push
gs
push
jbe
inc
pop
sbb
cmp
dec
sub
push
xlat
mov
repnz
pop
mov
movl
xor
sbb
xchg
popf
jmp
inc
clc
mov
scas
and
in
sub
lret
fisubrl
mov
push
add
shl
fcompl
push
xchg
ljmp
jb
loope
pop
jnp
test
divb
dec
loopne
adc
out
imul
mov
xchg
lea
mov
push
sub
test
rcl
and
fstpl
repz
sub
push
inc
and
xchg
stos
jmp
sub
imul
and
or
je
cli
aaa
sbb
das
push
notl
cmp
cli
mov
dec
mov
int
fwait
xor
mov
pop
jbe
push
into
sub
jge
fs
xor
jg
xchg
xor
andl
mov
sti
out
fidivrl
mov
es
mov
movsl
push
dec
inc
sub
movsl
xor
and
js
cmp
jo
add
xchg
or
stc
ret
rorb
mov
mov
jle
movsb
call
popf
pop
sti
add
sbb
ret
out
jp
aam
and
test
test
mov
rcrl
outsb
jae
lods
add
jecxz
les
jecxz
inc
jmp
call
sbb
dec
pop
shl
xor
std
insb
out
mov
mulb
sarl
xchg
or
jg
aad
fnstcw
int
fisubl
aaa
pop
inc
push
mov
outsl
jge
mov
push
and
adc
mov
seto
imul
sbb
mov
in
clc
mov
mov
jae
inc
sbb
and
jl
rolb
xlat
adc
cmp
fcomip
jbe
or
jo
and
pop
add
pop
insl
out
fistpl
xorb
loope
fwait
repz
test
aaa
cs
push
ss
andb
adc
xor
out
xor
hlt
jge
add
mov
add
jecxz
xchg
pop
movsl
lcall
int
repnz
inc
loope
cmp
iret
sbb
jns
call
and
fstp
cmp
xchg
test
mov
clc
loope
cmpsl
imul
or
mov
sub
sbb
mov
out
inc
js
lock
out
fnstcw
jmp
xlat
arpl
filds
aaa
mov
daa
add
mov
subb
add
fs
nop
outsl
pop
jns
push
inc
mov
cmp
inc
aam
movsb
sbb
aam
pop
int3
in
jbe
pop
test
push
shll
xchg
cmp
or
enter
xor
dec
add
push
mov
cmp
mov
flds
shlb
jne
push
ret
and
push
in
xor
inc
cld
push
push
mov
bound
or
push
lods
cmpl
andb
jp
rorl
out
mov
mov
out
or
orl
sbb
dec
push
sbb
ljmp
into
fisubs
sbb
mov
pop
scas
jnp
jmp
dec
inc
repz
add
in
aam
ss
lods
pusha
das
mov
out
aaa
sbb
mov
aam
jb
or
cwtl
bound
mov
mov
data16
mov
repnz
das
inc
icebp
xor
pop
mov
ljmp
mov
testb
lret
add
fwait
mov
in
mov
xor
fwait
clc
mov
stos
and
xchg
cmp
xor
es
cmp
hlt
decb
or
out
outsb
lret
popf
mov
sub
aas
pop
add
jp
xor
ljmp
mov
fists
dec
fs
out
inc
or
sarb
test
jg
mov
jmp
jbe
cmc
aad
adc
add
or
jmp
clc
shll
sub
in
roll
mov
adc
sbb
push
imul
mov
xchg
xor
mov
lret
mov
aaa
mov
adc
cmc
sbbb
xbegin
dec
push
and
and
outsl
push
mov
add
rcll
xchg
into
notl
add
mov
push
jge
jle
fldl
sbb
pop
out
dec
pop
mov
pop
pop
data16
push
xchg
xorl
out
iret
pop
jecxz
sbb
push
mov
std
ljmp
add
out
inc
dec
ds
int3
sub
sahf
or
into
xor
sar
push
sti
adc
add
inc
cmp
cmc
sahf
enter
dec
xchg
push
mov
jnp
push
pusha
jb
mov
sub
mov
test
jns
call
std
cmpb
push
dec
fcomip
movsl
pusha
sub
in
cmpl
xchg
xchg
div
sub
dec
dec
push
mov
xchg
mov
test
cltd
mov
call
arpl
ret
lods
xchg
push
xchg
addr16
sbb
sub
ljmp
mov
aad
stos
jns
out
cmp
pop
jmp
mov
negb
arpl
adc
popf
lods
jle
xor
jno
int3
mov
or
test
int
loope
mov
cwtl
dec
int3
nop
movsb
lret
push
pusha
mov
inc
call
cli
cmp
arpl
stc
cld
xor
push
jns
fwait
mov
push
mov
int
out
add
ret
addr16
sub
xchg
je
stos
inc
sbb
je
pop
sbb
cli
jl
insb
aad
mov
mov
insl
mov
xchg
mov
mov
cmp
cmp
add
adc
xor
std
pop
call
movsl
mov
xchg
repz
aas
fidivs
xor
mov
cmp
jecxz
jp
adc
fwait
and
pop
and
call
add
dec
push
loope
cmc
andl
and
ret
jp
test
xchg
dec
fsts
dec
adc
lret
jg
mov
mov
es
push
mov
or
jo
shll
aaa
shlb
popl
xor
and
adc
stos
jle
fucom
adc
jp
lret
push
or
mov
add
adc
inc
je
cmpl
push
lock
or
fs
sub
fbld
jp
stos
dec
add
and
sub
out
cmp
jp
jl
mov
jecxz
and
fwait
les
je
ja
psrlw
mov
cmp
enter
xor
shlb
bound
repnz
mov
mov
add
xchg
gs
ret
ljmp
jle
in
jg
pushf
inc
insb
fildl
testl
pop
insl
shlb
push
cmpsl
leave
mov
or
jns
rolb
pop
aad
push
fists
sbb
jae
inc
xchg
imul
and
in
inc
dec
out
sbbb
sbb
xlat
push
adc
mov
call
dec
std
pushf
imul
shrl
call
pop
ljmp
cmp
fdivrp
xor
sbb
or
adc
adc
shrb
leave
in
imul
sti
mov
lock
cli
and
dec
test
bound
ficompl
sub
xchg
add
jae
mov
shll
or
movsl
test
je
orb
sub
aad
outsl
jge
scas
xchg
inc
lret
pusha
cld
ja
sub
and
ret
xchg
outsl
or
dec
pop
pop
mov
pop
and
adc
mov
inc
loope
cmc
add
movsl
in
jnp
dec
pop
loop
gs
pop
outsb
subb
lahf
sub
mov
mov
mov
divl
or
fbstp
cmpsb
lods
outsl
push
std
cwtl
jns
mov
psllw
mov
lods
jb
divl
in
mov
push
dec
push
jmp
xchg
pop
xchg
mov
sahf
fcomps
int
add
cld
in
mov
jb
or
repz
pushf
repnz
mov
mov
mov
popf
add
fsubrs
lea
mov
shll
pop
lret
mov
aad
out
sbb
xor
jp
add
fstps
inc
rorb
add
dec
lds
add
and
cmp
gs
and
test
sub
push
pop
jle
and
pop
mov
insl
inc
fdivl
xchg
push
gs
cmp
movsb
aam
testl
xchg
out
sub
add
adc
and
ss
mov
or
lret
jns
push
or
push
lds
enter
ret
ja
out
cltd
icebp
movsb
rcll
lds
ret
pop
mov
mov
aaa
shr
mov
cmc
mov
cmp
rorb
sti
pop
xor
and
mov
and
or
sbb
loopne
mov
pop
jb
and
push
push
xor
xchg
add
aas
repz
mov
or
sti
fstp
insl
cltd
subb
ret
dec
sub
jge
dec
add
lods
pop
sbb
adcl
fstpt
shr
daa
fisubl
pop
or
repnz
or
ds
sub
jge
imul
inc
sbb
dec
sbb
sti
or
test
inc
jmp
fcmovnb
push
stos
cmpsl
pop
lahf
jl
push
jecxz
out
inc
cmc
mov
shlb
mov
jg
sahf
test
cmp
or
pop
leave
repnz
xorl
fwait
lea
mov
sar
cld
ret
mov
jno
ja
sbb
cmp
es
stos
stc
dec
mov
call
hlt
and
push
dec
pop
out
add
mov
mov
xchg
out
jecxz
jle
js
cmp
pop
mov
out
lock
jbe
popa
ja
shlb
or
pop
dec
mov
arpl
add
sub
xor
movsl
rcl
cs
sahf
mov
nop
cmp
cli
add
imul
push
inc
mov
insb
bound
add
push
outsl
or
ja
filds
sbb
or
stc
subl
pop
sbb
pop
nop
jb
mov
jns
popl
dec
add
adc
test
sbb
int
arpl
stos
add
pcmpgtb
dec
and
leave
xchg
jle
call
push
cmpsb
pusha
sahf
shrl
pop
jne
sbb
cmp
pop
add
adc
dec
mov
sarl
and
ret
jno
mov
push
mov
aam
in
sbb
sub
mov
ds
js
mov
fs
add
inc
into
xchg
imul
iret
cmp
pop
into
cli
leave
fistps
jle
xchg
sbb
xor
inc
imul
mov
jecxz
icebp
inc
push
fs
adc
lahf
shll
sbb
testl
clc
or
aas
mov
test
dec
push
mov
or
jl
imulb
xor
aad
fld
dec
pop
ffreep
data16
dec
je
jge
outsl
hlt
shlb
cmp
jle
lret
in
xchg
pop
cld
fs
mov
sub
clc
mov
push
das
xlat
adc
lcall
iret
rcrl
push
mov
pop
xor
cmc
inc
les
xlat
aad
lods
sbb
repnz
xchg
pop
ret
cltd
lahf
add
xor
aad
ss
push
enter
sbb
out
inc
pop
iret
sbb
sbb
es
enter
dec
lahf
ljmp
out
scas
mov
bound
inc
ja
test
inc
ret
dec
and
inc
inc
and
pop
cmp
mov
lret
mov
inc
add
loope
ret
mov
mov
mov
adc
ret
push
idiv
cltd
fs
jmp
adc
cmc
cmp
loop
cmp
repnz
jle
leave
mov
xchg
stos
lret
cmpsl
and
inc
pop
test
les
iret
stc
xor
cmp
xchg
mov
aas
sarw
mov
or
addr16
xchg
jnp
mov
into
lret
push
pop
push
neg
cmpl
sub
cli
movsl
jmp
test
mov
ficoms
outsb
dec
outsb
fwait
aaa
mov
pusha
pusha
jp
arpl
or
sub
scas
aam
cmpsb
adc
dec
pop
xchg
popf
and
dec
icebp
inc
xchg
out
ret
ja
xchg
stos
imul
sahf
leave
or
xchg
mov
test
cmpsb
mov
out
add
xchg
jbe
push
fisttpll
pop
jns
cmpsb
sbb
jnp
orl
and
mov
outsb
push
push
jae
or
test
out
movsb
fldcw
push
lock
pop
xchg
js
loope
xor
rorb
xchg
add
iret
in
xor
das
and
fstl
cmpsl
inc
mov
mov
cli
into
inc
aad
fdivrl
push
divb
sub
mov
jmp
push
add
sbb
jns
or
jge
popf
pop
jle
jmp
pusha
mov
jmp
inc
sub
loop
and
pop
notl
mov
test
mov
sti
add
push
inc
js
daa
scas
dec
popa
push
sub
mov
inc
push
testl
stos
sub
nop
mov
adc
or
push
jb
insl
push
ror
mov
jge
cmpsb
mov
mov
mov
scas
xor
push
test
addb
std
daa
dec
fwait
cmpb
rorb
lcall
out
jbe
cs
iret
pop
xlat
push
ja
outsl
fisubrs
fs
std
ljmp
sub
inc
xorl
enter
in
pop
pop
cmpsb
icebp
imul
sub
jbe
out
sbb
jns
jnp
xchg
fwait
adc
cmp
and
test
sbb
aam
fnsave
add
out
jae
ja
fildl
pop
repz
jg
mov
xchg
shrl
xchg
sub
gs
mov
and
subb
lods
inc
pop
test
dec
stc
cmp
push
dec
jns
arpl
push
sbb
mov
jnp
xchg
inc
ss
sti
xor
push
out
imul
out
dec
loopne
ds
insl
icebp
dec
test
sbb
xor
lock
aad
mov
and
ret
lahf
pop
jl
add
push
mov
jnp
push
xchg
push
das
jne
imul
repz
cmp
insb
or
pop
mov
dec
int
pop
faddl
push
lods
cmpl
adc
push
and
mov
mov
repz
adc
test
dec
jno
cmp
inc
clc
mov
fstpl
out
iret
adc
rcrb
stos
or
push
cmp
das
cmp
into
es
pop
dec
psubusw
jl
out
pop
cltd
jl
jne
filds
outsb
mov
out
mov
pop
test
int3
leave
adc
pop
idiv
cmpsb
popa
inc
mov
push
adcb
pop
or
sbb
imul
cmp
aaa
cli
dec
cli
sub
clc
out
jne
loopne
addr16
into
sti
icebp
xchg
ljmp
push
xchg
jmp
mov
pop
pop
test
out
icebp
xchg
shr
sub
scas
nop
arpl
loop
clc
shrb
xlat
fnstcw
mov
jg
cmp
mov
push
jbe
mov
mov
xchg
lods
test
aaa
sbb
scas
pushf
mov
xchg
sub
ljmp
jno
or
out
cli
int
fildl
stc
out
int
test
xlat
je
add
mov
icebp
iret
das
negl
mov
popa
fwait
loope
mov
sbb
fistps
or
and
xchg
jge
scas
dec
sub
sub
jecxz
cmp
mov
test
dec
imul
in
pop
das
lds
lods
mov
xor
xor
push
jp
insb
mov
mov
enter
cwtl
or
dec
lcall
sti
cltd
cli
or
testl
int3
push
hlt
pop
push
sbb
in
jge
sbb
push
pop
frstor
xor
shl
jns
movsb
sbb
jmp
leave
push
cmp
lret
cmp
out
add
dec
push
pop
shlb
pop
pushf
and
arpl
ljmp
dec
sbb
push
clc
mov
inc
add
adc
dec
andl
adc
gs
mov
inc
mov
mov
mov
xchg
jp
fcoml
jge
cs
arpl
xor
push
or
sbb
mov
test
cltd
pushf
out
data16
pusha
jmp
inc
xor
jo
inc
stos
cld
jmp
adc
sub
shl
fmuls
mov
sbb
mov
enter
pop
loopne
andl
mov
in
loope
dec
jnp
adc
push
je
in
rolb
inc
or
xchg
push
das
adc
popf
pop
frstor
outsb
or
movsl
cmp
push
jl
sub
ret
push
push
cmp
arpl
jns
lret
mov
pushf
loope
lea
adc
mov
push
out
push
ja
lret
mov
jge
dec
and
rcrl
es
xchg
in
mov
adc
jmp
loop
je
cmpsb
xchg
mov
pop
push
cmp
xor
clc
scas
or
dec
adc
adc
imul
repnz
out
pop
pop
and
cwtl
pop
dec
push
pusha
addb
inc
xchg
adc
addb
xchg
faddl
lahf
gs
sbb
cmp
popa
add
ljmp
push
js
repnz
and
cltd
rclb
or
or
pop
mov
xchg
xor
es
mov
lods
mov
xchg
stos
jle
in
pop
cmp
fists
xchg
mov
cwtl
mov
push
ds
daa
fdivl
push
or
jle
xor
out
pop
je
shl
sub
push
rcrb
iret
lahf
jb
movsl
cld
loop
mov
stos
push
aas
sub
xor
inc
jno
and
mov
jp
scas
sub
jno
loop,pn
pop
and
pop
xchg
pop
gs
leave
add
iret
outsl
addr16
or
xchg
push
andl
pop
pop
push
mov
inc
in
xchg
ret
xchg
mov
dec
hlt
push
lret
stc
sar
ret
nop
sub
or
clc
sti
cli
pop
loope
dec
push
push
clc
mov
clc
mov
repnz
call
or
inc
fwait
cmc
popf
push
jle
fdiv
lret
xlat
ret
pop
and
xchg
pusha
cmc
jbe
xchg
pop
lea
sbb
mov
das
loope
popf
xchg
lods
pusha
adc
pop
add
call
icebp
pop
mov
fcmovnb
lods
loopew
cmpsb
sbb
icebp
inc
xacquire
aas
repnz
sti
pop
js
test
push
fbld
push
pop
xchg
lds
movsb
lcall
jp
push
mov
in
mov
xchg
data16
ds
int
clc
jl
pop
jmp
jp
xchg
lret
xchg
and
fcompl
aaa
ds
out
or
dec
lahf
test
push
adc
adcl
cmp
mov
cmp
stos
loopne
mov
les
jge
add
nop
pop
mov
or
mov
repz
or
sbb
jg
inc
mov
sbb
syscall
inc
or
loop
imulb
push
loopne
pop
xor
lods
push
mov
push
lahf
lods
add
add
or
in
sbb
lret
faddl
clc
outsl
cmpl
aaa
imul
inc
mov
icebp
data16
mov
rcr
pop
push
sahf
mov
mov
pop
je
mov
xchg
ss
decb
test
fwait
sbb
pop
pop
mov
ret
loope
out
xor
sbb
fwait
dec
cmp
push
cmp
cmpsb
adc
pusha
jns
jmp
xor
fisttpll
push
dec
jle
arpl
insl
push
xor
sbb
lds
inc
xor
or
out
jne
adc
push
mov
fs
sub
adc
add
fbstp
fs
inc
inc
xchg
cli
int
xor
mov
loopne
cmpb
aad
scas
pushf
out
sbb
popa
leave
xchg
sarb
or
sub
movsl
in
or
xchg
cmp
jns
in
aas
jns
lea
imul
mov
fnstcw
sub
das
xor
jp
mov
inc
xchg
jmp
mov
adcb
cmpsb
ret
dec
fildll
fdivrl
repz
hlt
and
pop
mov
ja
aam
test
cmc
push
pop
loop
fwait
imul
sub
jbe
scas
subl
adc
push
and
xchg
data16
movsl
ffreep
in
mov
lods
mov
inc
jnp
imul
arpl
inc
pop
and
inc
dec
fidivrl
int3
bound
into
sbb
inc
sbb
lods
cmovbe
aas
or
gs
shrb
inc
pusha
pop
cli
mov
stos
int3
nop
jne
sub
fcoms
push
pop
cmp
dec
cld
mov
cmp
xchg
push
movsl
std
sbb
stos
stos
lcall
pushl
cmp
sub
stos
dec
inc
push
add
aas
in
mov
ja
ucomiss
or
xchg
lods
dec
lret
fld
dec
mov
test
movsl
or
or
ja
add
loopne
xchg
test
pusha
stos
push
rcrl
cli
aaa
ret
add
xor
xchg
lret
sub
xor
insl
test
insl
dec
cmpb
insl
xor
mov
mov
stc
cmp
sbb
mov
cmp
and
xchg
sub
xor
outsb
std
test
inc
int
inc
jb
int3
std
divl
lods
jnp
push
xor
cs
xchg
aam
imul
add
sbb
pop
xchg
sub
popa
mov
ljmp
push
popa
inc
pop
mov
outsb
mov
insl
mov
jl
or
mov
insb
xor
sbb
cmp
cli
adc
and
daa
sti
push
jle
mov
hlt
mov
rcrb
mov
lea
xchg
jae
cmp
add
and
or
push
add
std
add
clc
ss
jno
jo
lods
data16
popa
pop
mov
pusha
and
pushf
jl
movsb
add
cwtl
jo
and
je
dec
mov
push
clc
ret
and
lcall
mov
das
mov
push
sub
and
jae
push
sbb
inc
mov
jno
dec
inc
mov
mov
xor
and
inc
test
jno
shll
leave
xor
aad
int3
or
adc
aam
ss
jo
ss
aad
mov
out
mov
std
cmc
aas
xchg
aam
enter
stos
clc
pop
imul
or
inc
sbb
aaa
sub
in
pop
sbb
test
ss
movsb
aad
in
xlat
pop
stos
push
pop
inc
pop
lcall
mov
pop
jl
or
jns
mov
dec
mov
inc
sub
mov
and
sti
jae
faddl
imul
cmc
fsubs
or
sub
lret
sub
arpl
add
stos
adc
rcr
inc
insl
rol
cmp
bound
movsb
xor
stos
mov
fisttps
shlb
daa
xchg
inc
iret
or
out
xor
xchg
imul
iret
sub
mov
push
or
lods
dec
es
pop
and
xchg
icebp
dec
sbb
xor
adc
and
cmpsl
pop
xchg
mov
mov
ljmp
movsb
inc
loopne
cli
mov
fwait
xchg
fiaddl
sub
or
int
sub
test
nop
and
jg
paddb
pop
cwtl
xor
ret
xchg
jge
loopne
inc
rolb
shr
test
or
jg
outsb
inc
add
lods
enter
adc
push
stos
jmp
mov
out
enter
add
sahf
testb
mov
pop
fs
scas
data16
mov
sbb
out
fwait
mov
inc
cmc
adc
ret
ss
pusha
fs
sub
sti
mov
inc
addb
movsb
ficoms
movsb
xor
xchg
jnp
in
ja
mov
cs
les
lods
aas
leave
orl
mov
mov
mov
pusha
cwtl
js
test
icebp
enter
popf
and
or
mov
lcall
in
pop
out
stos
mov
lods
pop
mov
push
add
popa
add
inc
ret
int3
push
sbb
stos
xor
sahf
mov
jae
adc
xchg
mov
insl
push
pop
adc
xchg
jne
andl
insb
cld
mov
int3
sahf
mov
mov
imul
bsf
inc
mov
pop
aam
mov
rorl
mov
scas
pop
add
iret
clc
fsubrs
xchg
addr16
jnp
xor
push
inc
mov
std
aam
cmp
in
sarb
out
dec
add
popa
fbld
test
lcall
aaa
inc
outsb
jmp
outsb
or
in
test
test
sar
stos
mov
xchg
push
insl
fmull
js
outsl
mov
aam
lahf
xor
cmp
enter
ss
sbb
mov
aam
mov
fnstenv
dec
je
js
lcall
dec
sbbl
setae
mov
call
and
cmp
and
mov
inc
cmc
mov
or
scas
adc
rorl
push
cmpb
rcrb
ja
aas
xor
mov
data16
sbb
les
cli
int3
cmp
lock
rep
dec
test
adc
out
push
cmp
adc
pop
repz
iret
mov
sbb
inc
shlb
jecxz
insl
std
subl
popf
xchg
add
idivl
xor
ret
xor
in
cmp
pushf
aas
rol
dec
clc
gs
inc
pop
fildll
addr16
pop
xchg
adc
push
aaa
mov
aad
imul
push
imul
xchg
xchg
xor
repz
mov
mov
repnz
lods
jno,pt
jb
push
test
aas
nop
popf
cs
xchg
xlat
addl
fnstsw
leave
repnz
lret
pop
out
pop
mov
jb
and
jmp
test
xor
pop
add
mov
adcb
test
jae
dec
test
add
or
sbb
data16
mov
out
ljmp
sbb
xchg
jmp
add
ror
lock
jae
pop
hlt
into
stc
int3
jae
daa
sbb
inc
fsubs
ret
jbe
mov
inc
jle
addr16
in
test
inc
dec
fwait
sbb
push
push
and
add
xor
add
hlt
andb
enter
arpl
and
sbb
xchg
sub
std
sbb
mov
inc
mov
mov
or
jns
negl
pop
aam
mov
rorb
or
cmp
push
adcl
push
scas
xchg
push
xchg
xchg
inc
xor
dec
popf
inc
in
xchg
and
jnp
aaa
lods
add
stos
test
imull
cmp
push
xor
mov
das
sbb
sbbb
dec
testb
push
pop
es
dec
js
add
and
sub
loop
std
fwait
xorl
test
mov
sar
jg
dec
out
lods
insl
xchg
push
dec
jmp
ds
shr
lret
mov
loope
enter
shrb
or
aad
repz
rcrb
scas
scas
cmp
mov
iret
rcll
sarb
sti
add
push
push
rorl
in
hlt
mov
fwait
aam
dec
mov
xor
or
inc
lods
add
and
push
pop
movsl
arpl
jb
outsb
add
xor
cli
lea
sub
jne
dec
xchg
fldl2e
mov
hlt
cmp
int3
pop
outsw
enter
subb
pop
jbe
arpl
pop
or
aam
inc
adc
xchg
push
xor
jns
mov
inc
lret
divl
xchg
mov
adcb
mov
sub
das
stos
push
pop
cmp
ss
push
daa
imul
add
test
jg
jp
xchg
jle
inc
out
les
imul
in
xchg
jl
jnp
and
jg
arpl
imull
jns
or
fcomps
pop
inc
mov
cs
mov
inc
push
dec
mov
adc
in
call
add
push
pop
or
mov
xlat
mov
js
mov
pop
cmpsb
pop
mov
inc
jge
es
fsubs
leave
inc
lock
add
adc
xchg
mull
leave
scas
xor
dec
jecxz
fcmovnbe
movsl
lahf
mov
repz
aas
js
cmpsb
arpl
fsubr
rclb
push
sarb
aam
pop
js
dec
jbe
push
sbb
std
clc
xchg
lcall
inc
popf
fstpl
lret
lds
mov
test
sti
sub
pop
pop
mov
leave
sbb
adc
rcr
sbb
cli
loopne
loopne
rorl
cwtl
lret
ja
push
stos
movsl
inc
push
int
jge
cmp
dec
adc
insl
adcl
repz
ja
into
or
mov
pop
sarl
inc
push
jmp
mov
and
shr
and
iret
mov
incb
or
pop
repnz
adc
xchg
jmp
popa
inc
leave
mov
out
imul
dec
shrl
in
fwait
sub
rcrl
and
push
mov
adc
pop
cli
push
lret
mov
xchg
jp
adc
lahf
movsb
repz
into
xchg
shl
fstps
aaa
stos
pop
pop
inc
push
push
jg
cli
inc
jl
push
daa
imul
pop
inc
jp
ss
or
fnstenv
xor
pop
cltd
clc
pop
add
aas
shlb
pop
and
aaa
into
mov
call
fs
mov
stos
or
roll
jge
cmp
sbb
iret
xchg
push
jge
das
push
mov
stos
stc
xchg
push
scas
je
fwait
std
insl
cmp
pop
daa
push
ljmp
and
outsb
push
pop
mov
fldenv
pop
jle
pop
jb
nop
push
xchg
or
and
push
mov
inc
dec
ret
setle
mov
mov
idivb
jnp
lret
cmp
inc
xor
loope
push
rorl
xchg
xor
popf
dec
pop
out
or
xorl
push
inc
push
repz
out
jns
jg
das
cmpsb
in
loopne
ret
out
rolb
rclb
call
jbe
dec
daa
sahf
push
stos
sbb
in
adc
loope
call
jg
lds
into
xor
xor
adc
mov
dec
cmp
pusha
mov
adc
out
mov
leave
push
mov
xchg
popa
loope
setbe
test
mov
call
adc
push
enter
fcoms
rolb
xchg
pop
jle
lret
mov
imul
out
inc
pop
aam
sbb
fldlg2
push
jge
and
jp
pop
fisttpl
push
push
push
test
in
ret
notl
adc
aaa
js
fisttps
test
mov
movhps
mov
dec
mov
outsl
pusha
add
xchg
mov
ss
adc
sub
jl
je
pop
adc
xchg
push
jno
cs
xchg
aas
or
and
lahf
mov
stc
xchg
mov
lcall
pop
cmc
cltd
sar
shlb
mov
add
lock
add
cmpsb
stos
push
lods
stos
dec
jecxz
arpl
or
lock
or
inc
and
mov
mov
xlat
xchg
mov
cltd
pop
cld
inc
fs
add
xlat
add
fimull
or
stc
xchg
pop
xchg
test
imul
pop
add
popf
das
out
fsubrl
vcvtpd2psx
push
outsb
rclb
clc
in
jge
mov
dec
aad
ficompl
sub
adc
ret
xor
mov
xchg
mov
xchg
xchg
ja
cmp
repz
in
inc
lahf
in
sahf
rcl
ss
pop
daa
jno
jmp
lods
jnp
add
xor
out
xor
inc
rorb
jb
dec
xor
and
cmp
pop
cmp
add
dec
jne
pop
jle
arpl
cmp
sbb
sbb
sub
lods
mov
sti
jb
popf
sbb
lods
outsl
fwait
xchg
inc
orl
lock
xlat
mov
call
push
push
pop
adc
lock
push
mov
pop
fstp
mov
xor
inc
pop
xchg
mov
fs
inc
mov
pusha
outsb
sbb
adc
test
xor
int
pop
inc
outsb
lret
mov
lcall
icebp
repz
xchg
pop
or
ficompl
int3
mov
jl
and
sti
mov
jno
sub
pop
adc
sbb
xor
inc
daa
sbb
mov
jae
adc
mov
ss
pop
test
inc
or
xchg
pop
mov
adc
sbb
das
or
adc
fcoml
jp
jae
movsl
cmpsl
xchg
repz
jbe
decl
pop
icebp
lcall
into
mov
and
cwtl
xchg
fs
add
in
xor
sub
add
mov
jg
cmpl
stc
hlt
loop
add
mov
addr16
aas
xchg
mov
out
and
ret
or
and
xchg
aas
adc
push
repnz
mov
mov
add
xor
adc
xlat
lods
cmp
pop
dec
repz
pop
xchg
xor
cmp
sbb
addr16
std
jp
lock
cmc
xlat
fmull
daa
push
inc
jl
daa
aas
jns
cwtl
stc
mov
dec
dec
sub
fs
cmp
lahf
xchg
cmp
push
mov
pop
mov
jae
lcallw
fistpll
mov
lret
ret
add
sbb
adc
inc
lds
arpl
dec
mov
ret
add
ss
or
sarl
jns
sub
stos
mov
xchg
cs
sar
sub
mov
ret
seta
shlb
jecxz
cmc
lods
call
test
pop
dec
ja
xchg
push
xchg
outsb
repnz
or
scas
dec
rcll
scas
xor
lds
call
push
fbld
pop
call
mov
out
dec
cmp
lods
sbb
loope
dec
test
xchg
jg
repz
addb
dec
enter
jp
xchg
add
pop
dec
sbb
push
into
out
add
xor
or
clc
xchg
std
push
dec
popf
jp
popf
int3
mov
inc
fiaddl
jge
cmp
out
stos
jp
xor
call
stos
rolb
insb
insb
inc
add
fisttpl
xor
dec
nop
imull
scas
divps
clc
and
aad
xabort
add
mov
loop
test
ret
lea
or
push
movsb
xchg
repz
data16
cli
cmp
enter
lods
dec
or
pop
jg
inc
movsl
repnz
mov
and
or
mov
or
or
mov
jge
jecxz
addb
mov
inc
ja
mov
push
or
push
je
stos
sbb
sub
push
xchg
lods
loopne
fs
xor
enter
pop
fmuls
sti
outsl
lods
sub
shll
add
aam
dec
scas
rcll
mov
pusha
sarl
sbb
sti
sbb
sti
repnz
js
xchg
inc
lock
test
xchg
pop
imul
lcall
push
shll
mov
xchg
andl
mov
pusha
and
xor
add
sub
jge
jge
xchg
jmp
imul
jp
js
in
or
cs
insb
mov
sub
push
imulb
cmp
mov
pop
push
js
inc
dec
fists
push
stc
cmp
inc
test
mov
mov
xchg
adc
into
cmpsl
popf
js
xchg
sarl
mov
push
cmp
sbb
pop
f2xm1
mov
sarb
push
in
sbb
sbb
jo
ja
push
pop
mov
lret
loope
mov
mov
inc
loope
shll
or
and
dec
stc
ficomps
push
popf
pop
mov
sub
push
lods
xor
jno
push
lock
and
xor
cmp
xchg
mov
out
int3
inc
jb
cmpsl
sbb
adc
stos
or
int3
mov
push
loop
xchg
jo
es
jmp
jl
lcall
addl
hlt
mov
xchg
test
adc
aas
or
xchg
xchg
mov
xchg
insb
in
mov
xor
test
outsb
popa
add
mov
aam
scas
movsb
mov
xor
jo
jns
xor
shlb
es
repz
pop
mov
icebp
pusha
push
mov
jmp
popa
popf
movsb
jno
nop
cwtl
mov
cmp
pop
movsb
sahf
sbb
mov
stos
imul
mov
in
inc
adc
std
cmpb
and
fimuls
and
jg
ret
imul
das
aam
push
je
fstps
pushf
jge
dec
mov
cmpb
ss
std
stos
std
sbb
movsl
dec
mov
imul
movsb
cltd
jmp
hlt
repnz
cltd
out
sbb
inc
iret
test
mov
fs
push
pushf
mov
movsb
fdivl
jl
sub
pop
push
aam
or
sub
aad
fmull
mov
jb
lock
and
mov
xchg
test
insb
sbb
call
push
cmp
mov
aas
or
test
pop
push
les
sbb
add
pop
imul
inc
fnstenv
shl
lods
loop
lock
popa
jno
cmc
call
pop
xlat
sub
pop
adc
mov
popa
dec
std
xor
mov
xor
pop
and
push
inc
push
int3
iret
or
mov
pop
mov
push
test
ja
push
cs
shr
inc
mov
and
mov
push
pop
fwait
cmpsl
imulb
push
cltd
retw
imul
jnp
cmp
leave
pop
les
loop
mov
ficoml
in
dec
jb
cld
pop
dec
aam
popf
rolb
jae
scas
sbb
sub
push
aas
xor
adc
jmp
aad
aas
out
mov
add
sbb
push
cs
test
hlt
mov
xor
inc
or
xchg
cmpl
aad
xchg
aaa
jp
add
sub
subl
cmp
jno
sbb
arpl
les
inc
sbb
clc
pop
cmp
iret
mov
xor
repnz
out
and
loop
shlb
clc
push
pop
xor
daa
clc
test
pop
cmp
repnz
mov
divb
cmpsb
jp
movsb
jg
leave
data16
pushf
sbb
addb
dec
dec
or
ret
cltd
jb
lret
xchg
mov
ja
push
sarb
aam
xchg
cmp
mov
inc
aas
les
xchg
arpl
push
cli
and
shlb
in
mov
sbb
pop
lods
in
aas
lcall
inc
jmp
in
loope,pt
inc
popa
xor
add
imul
cmp
or
adcl
stos
jmp
sbbb
jb
fimuls
cmpsb
ja
lods
aam
fistpll
imul
lcall
imul
xor
push
and
test
fidivl
sbb
insb
mov
push
in
jb
pusha
pusha
mov
jnp
mov
in
ds
jnp
call
subl
push
inc
stc
bound
or
push
xchg
popf
popa
jp
cmp
subl
mov
xor
cmp
inc
sti
and
dec
xor
inc
and
jns
push
xchg
add
insl
and
jns
insb
mov
xchg
xor
ret
sub
dec
add
mov
test
mov
fcompl
insb
movsl
shrl
iret
mov
popa
lods
inc
mov
jl
mov
cmp
insb
adc
inc
cmc
xor
mov
xchg
mov
aam
and
cmp
cld
fistl
aad
clc
les
std
add
jbe
mov
xchg
mov
mov
aad
ret
fsubrs
icebp
pop
pop
and
jmp
dec
sti
cmp
fisttpl
and
push
push
xor
xchg
ret
mov
sarl
lret
fucomp
mov
clc
in
xlat
js
int
mov
and
sub
and
fiaddl
xchg
fists
rolb
std
and
ds
mov
out
xlat
mov
in
sub
pop
fisubrs
push
fmuls
enter
cld
es
and
adc
cmpsl
mov
jp
cli
push
inc
add
mov
push
jne
inc
lock
mov
fwait
mov
add
push
fcoms
adc
psubw
mov
inc
xchg
stos
aam
lcall
jbe
fisttpl
xor
xor
scas
inc
in
inc
stc
push
repz
pushf
fdivrl
and
pushl
lock
inc
es
inc
cmp
push
fcompl
stos
dec
adc
inc
fwait
xchg
push
in
mov
cmp
sbb
ret
sub
pop
xor
popa
lcall
mov
xor
aaa
jmp
popa
mov
or
sub
add
adc
lock
into
pop
and
push
pop
add
push
pop
mov
aad
or
enter
jo
in
push
adc
dec
push
jg
cmp
lret
cwtl
mov
sub
outsl
notl
gs
lcall
or
scas
icebp
add
imul
mov
mov
pop
in
pop
mov
jmp
adc
out
adc
out
loop
adc
or
scas
sbbl
push
cwtl
mov
mov
rcl
jbe
int
cwtl
daa
xor
push
xchg
gs
jbe
cmp
inc
jle
cmp
jmp
scas
push
outsb
leave
ljmp
or
push
add
mov
std
lret
das
or
mov
or
adc
rcrl
nopl
mov
fistpll
push
xchg
pop
movsl
add
jg
mov
jno
scas
push
cmp
mov
xor
out
mov
call
pop
and
gs
cmpl
shrl
inc
xor
int
ss
mov
and
rclb
sbb
mov
pop
addb
cmp
push
addl
inc
sbb
mov
xchg
imul
cmpsb
cmpsb
sbb
cmp
add
sub
dec
frstor
test
and
fsubrl
sbb
xchg
clc
dec
adc
mov
aam
inc
push
mov
adcb
shr
sbb
xchg
add
ret
jbe
cmpsl
dec
mov
outsl
test
ja
stos
jle
int
xchg
cwtl
or
orb
mov
push
fisttps
jmp
inc
sbb
sahf
repnz
into
inc
mov
sbb
dec
sbb
xchg
cld
cmp
mov
pushl
pop
les
dec
add
jg
pop
xchg
push
mov
xor
xor
mov
sbb
sar
aas
es
inc
dec
adc
fadds
or
xor
incl
fimull
mov
inc
pusha
and
lods
in
jl
es
lret
and
xchg
sub
mov
mov
cs
scas
mov
ss
xchg
push
and
cmp
dec
ss
pop
push
repnz
pop
fsubrl
cmc
fists
outsl
aad
adc
and
pop
int3
push
lcall
push
adc
fcomi
lods
sub
mov
fwait
xor
add
dec
pop
test
xchg
mov
lea
jo
push
sbb
mov
mov
call
ja
aad
mov
jmp
je
sub
sub
mov
out
pop
xchg
cs
mov
lcall
inc
icebp
popf
mov
fistpl
xchg
inc
out
push
mov
mov
cmpsl
xor
jg
cld
adc
pop
add
and
mov
xor
dec
ja
dec
iret
and
and
lret
mov
pop
in
cmp
sub
ret
out
mov
push
push
cmp
frstor
aaa
addl
lods
sub
dec
pop
dec
enter
push
test
mov
and
das
dec
out
pop
cmp
clc
or
adc
imul
sbb
stos
pop
enter
pop
push
in
popf
out
sbb
sub
dec
jne
fadds
mov
lods
mov
mov
daa
jmp
popf
sbb
in
stos
push
add
cmp
mov
mov
or
fcmovne
push
pop
loop
lods
orb
popf
jbe
inc
in
out
repnz
scas
sbbb
lds
inc
js
adc
xchg
mov
daa
pop
mov
lds
xor
push
imul
call
mov
push
mov
mov
push
xor
test
sahf
inc
test
mov
lcall
dec
pop
sub
bsr
rolb
push
cltd
xchg
xchg
lret
cmp
data16
lea
es
mov
fldcw
lods
jge
xlat
mov
jl
jne
nop
xor
or
add
aad
imul
es
dec
cmp
mov
adc
cmp
sti
add
dec
inc
push
lea
inc
pop
call
call
xchg
shrb
decl
inc
movsb
in
or
dec
add
in
scas
stos
dec
xchg
iret
loope
jmp
or
inc
or
ljmp
sahf
jmp
inc
rcrb
xchg
mov
mov
hlt
pop
or
mov
and
movb
out
adc
mov
out
scas
icebp
cmp
pop
pop
and
xlat
adc
inc
sub
pop
ds
adc
fwait
test
cs
outsl
sub
jb
jge
icebp
adc
js
repnz
mov
insb
cmp
adc
push
aas
add
jo
stos
orl
xchg
imul
push
sarb
mov
dec
xchg
andl
pop
push
mov
push
frstor
aam
cmp
cmp
call
pusha
ja
xchg
or
sub
jne
loop
mov
popf
pop
das
ds
sbb
sarl
mov
push
jp
aas
adc
mov
mov
nop
cmp
dec
test
imul
mov
mov
xchg
dec
lea
mov
jne
sbb
rorl
in
into
xchg
pop
cli
out
outsb
jb
lret
lock
lods
fdivl
test
loop
and
mov
cmpsl
in
pop
scas
xor
push
sbb
in
mov
xor
jmp
jno
xorl
pop
jo
inc
jle
dec
mov
fisubrl
or
push
movnti
sbb
stc
shlb
xor
mov
push
and
mov
jecxz
push
inc
scas
sub
push
fwait
mov
leave
and
sbb
dec
loop
xchg
sub
stc
cmp
cld
sti
xchg
mov
mov
aam
stos
push
jno
xor
sbb
push
call
sub
mov
xorl
lods
sub
sub
mov
xlat
test
xchg
mov
cld
lahf
adc
rorl
fildl
jl
aam
in
ret
bound
xchg
lds
jbe
cmpl
imul
mov
out
push
dec
xorl
push
out
lea
cmpsb
sub
mov
hlt
jnp
pushf
xchg
push
pop
dec
mov
pop
mov
adc
add
mov
jmp
repz
add
push
push
pop
inc
xchg
add
test
mov
sub
mov
push
pop
pop
jo
mov
fcmovnu
sbb
add
xchg
push
sub
pop
in
shlb
ljmp
adc
xor
in
std
das
les
push
pop
test
inc
sti
and
mov
and
xchg
adc
push
cmp
fsubp
inc
xor
pop
paddb
sub
pop
sbb
imul
cmp
xlat
ret
cmp
adc
push
inc
scas
add
fwait
push
inc
adc
scas
incb
gs
fadds
stos
dec
sbb
add
sbb
lock
fcomps
mov
and
pusha
jb
xor
imul
repz
mov
orl
inc
scas
inc
mov
aas
scas
imul
mov
cmp
out
jnp
push
popf
lahf
xor
push
or
xchg
lods
and
mov
pop
push
inc
mov
mov
mov
testb
xchg
sub
mov
dec
jg
cmc
xchg
lea
lret
arpl
mov
fwait
mov
scas
out
int
mov
dec
cmpsb
mov
movsl
fwait
push
add
adc
pop
xchg
pop
repz
push
es
test
dec
insb
mov
popa
push
pop
subl
push
jb
ja
pop
mov
adc
push
cmp
add
cmc
mov
adc
mov
pop
fists
call
aam
inc
out
scas
mov
es
test
int3
pop
int3
ss
shrb
imul
popf
mov
xor
and
cmp
jge
cmpsb
inc
or
cmovl
inc
test
xchg
lahf
out
addr16
test
scas
loopne
fsts
out
inc
or
jne
addl
sub
push
std
pop
or
push
add
sub
push
inc
pushf
hlt
pop
mov
mov
aam
push
inc
xor
cmp
sub
sub
cmp
mov
xchg
call
out
mov
cmc
bound
hlt
in
loopne
xor
ds
push
call
mov
inc
xchg
pop
mov
test
imul
jo,pt
inc
lret
cmp
mov
rcll
stc
fistpll
lret
mov
sub
ljmp
jnp
jg
xor
ret
dec
mov
popl
mov
xchg
outsl
pcmpgtw
out
cli
mov
ljmp
sti
push
inc
mov
push
in
cmp
data16
or
das
negb
aam
cli
push
popf
mov
pop
inc
add
lods
inc
das
dec
hlt
push
sub
test
pop
xchg
jne
and
dec
rorl
xor
aaa
mulb
int3
jne
shrl
cmp
out
arpl
xchg
xlat
lahf
data16
scas
jns
ret
mov
loop
xchg
addr16
in
jmp
popf
push
aaa
lcall
ja
das
dec
push
fstp
sub
fcmovu
add
adc
cwtl
jno
xor
cwtl
xor
imul
js
sub
shll
rcrb
enter
cmpsb
gs
divb
mov
xor
lahf
xor
and
jg
adc
inc
mov
imul
shrb
bound
outsb
or
bound
xlat
cltd
outsl
or
outsl
sub
pop
ficompl
lret
leave
ja
jge
int
push
push
shl
mov
pusha
in
jge
jae
jmp
fsubr
pop
mov
dec
arpl
inc
cmp
movsl
mov
add
lds
cltd
and
lock
mov
rol
stc
xorl
push
or
imul
cwtl
loopne
push
xlat
jns
ret
std
cmp
stos
jae
orb
shlb
cmp
add
mov
or
mov
movsl
cmp
in
out
outsl
cmc
xchg
dec
ss
push
stc
imul
movsl
cmp
or
and
fs
popa
mov
add
xlat
addr16
out
ret
pop
jb
cmp
mov
sub
mov
inc
jg
addr16
lahf
add
test
inc
je
xor
pop
out
mov
cmc
popf
sub
push
and
pop
sarb
lcall
xor
repnz
add
push
dec
int3
or
outsb
sub
nop
push
jecxz
jl
iret
iret
out
clc
insl
out
imul
icebp
into
mov
arpl
ds
adc
ljmp
pop
int
int3
pop
sub
pop
insl
clc
sbb
sub
aaa
mov
les
scas
push
stc
xchg
pop
and
imul
addr16
es
cwtl
add
cmp
dec
jb
lret
jne
xor
xor
dec
mov
mov
lret
xor
ret
call
loop
hlt
pop
fsts
pop
in
xor
in
lcall
scas
jg
sbb
jp
sub
arpl
jo
mov
mov
decb
pop
cli
add
cmp
pushf
inc
and
flds
movsb
dec
xlat
in
packsswb
cld
clc
fistpl
push
fistl
xor
stc
push
das
sbb
pop
adc
xor
cmp
pop
lret
es
rcr
inc
les
int
or
xor
jns
push
hlt
xor
and
hlt
fmuls
ds
mov
dec
dec
fidivrl
mov
outsl
pop
sub
adc
xchg
jg
xlat
xchg
enter
inc
bswap
sbb
test
sbb
mov
movsl
mov
scas
lcall
xchg
mov
sbb
jmp
mov
int
mov
cmp
mov
xchg
inc
into
lea
std
jge
fadds
add
jg
ds
pushf
push
add
lea
pop
adc
mov
push
mov
mov
insb
or
icebp
outsl
inc
push
pop
sub
push
lock
push
int
inc
out
std
xchg
jnp
mull
jp
sbb
hlt
mul
int3
and
addr16
out
sbb
cs
jle
stos
fstps
popf
mov
subb
sub
mov
lock
push
clc
movsb
mov
aam
scas
cs
stos
or
movsb
decl
aam
sub
xchg
aad
aad
rol
and
mov
push
daa
or
stc
pusha
rcll
data16
sub
sbb
subb
cli
fdivr
lret
jmp
mull
add
fdiv
js
ret
pop
dec
push
sub
dec
out
pop
roll
push
and
pop
push
aad
sub
adc
or
mulb
jae
and
push
aad
shll
or
neg
push
repz
mov
pop
sbb
jmp
push
jp
push
add
fistl
mov
cmp
mov
pop
outsl
imul
in
sbb
int3
sbb
add
in
inc
push
movsl
ret
and
xchg
out
icebp
pop
gs
push
jb
cmp
js
push
push
dec
inc
dec
dec
lret
repnz
test
les
pop
and
ja
sbb
cmpb
pop
mov
add
out
pop
clc
jnp
lcall
cmpsl
stc
idivb
lods
cmp
mov
xor
add
xchg
inc
rolb
sti
mov
cmp
adc
movsl
inc
pop
mulb
xchg
subl
pop
ftst
cmp
mov
ljmp
jl
outsb
les
test
inc
mov
cmp
lods
sub
loope
pop
push
mov
daa
sub
dec
or
add
loopne
bound
stos
push
mov
outsl
out
push
pop
fistpll
sti
repnz
jl
mov
pop
pop
xor
fstps
mov
adc
mov
cmp
inc
sbb
pusha
cs
mov
in
jae
push
stos
sbb
pop
jb
cld
jp
and
pop
fxam
inc
or
mov
into
dec
xchg
out
push
subl
fisubs
mov
push
mov
stos
bndstx
insl
cwtl
cmp
push
xchg
xor
mov
inc
and
cmc
ret
push
orl
lods
jg
aam
xchg
jl
aad
or
data16
pop
adc
es
xchg
push
mov
out
pop
aaa
gs
or
mov
jbe
stos
idivl
and
arpl
xor
pusha
aaa
fldl
push
pop
aam
jbe
push
leave
lcall
sbb
out
adc
pop
out
pop
iret
push
stc
aaa
push
inc
xor
sbb
mov
aas
lcall
jo
or
mov
pop
xchg
into
mov
mov
lahf
cli
orl
adc
fwait
dec
in
insl
pop
cli
jb
cmp
pop
jae
xchg
es
xor
and
and
fnstsw
iret
aam
mov
cwtl
int
aam
outsb
jge
cmpsb
and
mov
decl
mov
and
sbbl
adc
enter
sbb
mov
jae
cld
mov
subb
sbbb
add
xor
dec
ror
into
xchg
inc
aas
shrl
adc
push
scas
int3
lahf
jecxz
or
addr16
pop
inc
xchg
ror
mov
rclb
fcomps
rcrl
mov
ljmp
adc
xorl
mov
pushf
cmp
add
stos
notl
movsl
add
mov
push
push
sbb
lds
out
psubsb
jge
push
and
lods
rol
mov
fisttpll
into
push
jb
cmp
xor
mov
and
rclb
sub
pop
push
add
jno
cmp
push
xchg
mov
in
adc
inc
and
nop
rcr
fldcw
lock
sbb
mov
mov
add
test
lods
xor
mov
xabort
inc
jo
jne
xchg
in
jb
lcall
inc
mov
into
pop
je
incb
out
test
movb
adc
sbb
jecxz
adc
clc
cmpsb
mov
sbb
aas
pop
lea
mov
ret
mov
test
pushf
sbb
out
add
aad
int
ret
dec
cli
mov
dec
pop
cmp
pop
push
pusha
add
xchg
lahf
hlt
pushf
push
lcall
flds
lods
testl
mov
loope
sbb
lahf
pop
iret
icebp
push
ja
pop
pop
mov
scas
ss
jns
fstl
imul
mov
or
filds
pop
or
aam
push
sub
pop
push
or
pushf
push
fsubp
push
push
jns
dec
fsubrs
cmp
aas
jp
pop
mov
push
scas
daa
cmpsl
or
out
xchg
push
lods
call
cmpsb
mov
pmaxub
sub
pop
mov
jle
dec
cs
sub
inc
test
in
sbb
cmpsl
pop
cmpsb
imul
jp
push
cmc
test
scas
or
not
pusha
sub
aam
mov
arpl
fdivrs
dec
out
stos
jbe
jno
mov
xchg
imul
push
out
ss
lds
and
mov
enter
out
sti
pop
imul
popf
adc
sti
or
hlt
dec
pop
test
xlat
mov
imul
outsl
dec
or
fcomps
cmp
lods
test
shlb
je
and
out
cmp
jle
jp
add
inc
test
inc
bound
push
sub
xor
inc
stos
push
xchg
sbb
test
mov
dec
jge
pop
dec
sahf
jb
fldenv
jp
lock
sub
cmp
xchg
daa
mov
sbb
test
mov
int3
add
mov
mov
push
mov
mov
jecxz
sbb
lret
xchg
xor
negb
popa
and
and
andb
shrl
roll
test
adc
adc
inc
inc
rcll
cmp
push
push
or
lds
xor
rcrl
rorb
test
clc
test
xchg
inc
int
fcompl
repz
jmp
pop
cld
lcall
sub
jl
lock
sub
lret
sub
jb
jno
cmp
mov
mov
push
inc
icebp
xchg
shlb
sub
adc
jg
mov
fisubl
cmp
movsb
je
cmp
fimull
push
jne
and
int
mov
mov
pop
ret
or
pop
xor
lock
cwtl
push
inc
push
adc
sbb
or
adc
divl
notb
lock
fstps
shr
idiv
or
jge
sbb
jne
mov
dec
mov
scas
nop
dec
aam
fdivr
testb
loopne
ret
and
or
adcb
imul
cltd
in
jge
dec
or
popf
hlt
mov
dec
add
and
les
mov
push
sbb
orl
popl
js
fcoms
adc
testl
lds
mov
xor
fsubs
lahf
push
das
pop
push
push
xor
sbb
subb
lock
push
xor
mov
cmc
ret
imul
mov
movsl
iret
adcb
jb
and
jmp
pop
jge
jmp
cmp
lcall
sub
ret
pop
pop
rcl
xchg
mov
inc
jbe
pop
mov
adcb
pop
fildl
out
test
and
push
sub
push
mov
cmpsl
int
rorl
in
pop
test
xchg
sub
jb
out
mov
enter
je
dec
xor
pop
mov
pusha
or
out
repnz
xor
lret
idiv
inc
xor
add
into
lret
flds
je
push
push
adc
mov
mov
insl
dec
jecxz
dec
int
out
mov
and
test
cmc
jmp
repz
mov
or
ret
arpl
sub
and
pop
aam
fimuls
montmul
cmpsb
outsb
inc
push
lods
push
or
and
xor
aam
aaa
push
repnz
mov
add
lock
pushf
mov
in
cltd
clc
sub
icebp
rcll
jbe
or
out
jecxz
or
sbb
incl
aam
scas
ret
dec
cmp
inc
add
loope
sti
das
or
icebp
fwait
mov
xor
add
enter
loop
lahf
mov
test
sub
icebp
cmpsb
outsl
adc
lods
arpl
into
sbb
push
int
call
jns
inc
sahf
into
inc
ljmp
mov
push
repz
mov
push
dec
sub
xchg
jno
and
jp
mov
mov
cwtl
sub
mov
nop
jb
lds
pop
pop
scas
xchg
inc
pushf
outsl
test
popf
hlt
sarb
jbe
stos
out
shlb
fs
mov
sub
lret
leave
sbb
pop
xchg
divb
inc
lret
sub
or
sbb
dec
inc
fcmovb
jb
test
dec
mov
sbb
test
sbb
push
pushf
sub
mov
call
repz
jmp
mov
jno
xlat
gs
lahf
fists
xor
hlt
sar
bound
sarl
cmp
jmp
pop
add
cmp
movsb
shll
cmc
jg
sbb
add
out
push
js
icebp
arpl
outsl
sub
sub
stos
inc
lds
fistps
pop
out
aaa
out
lcall
jae
push
mov
xrelease
pop
leave
push
pop
loopne
mov
mov
enter
adc
ljmp
addr16
push
ja
jns
loop
mov
push
or
loop
pop
push
dec
adc
loop
test
mov
push
adc
pop
addr16
jmp
mov
cmpsb
fistpl
in
mov
dec
jmp
and
jmp
push
sub
loop
stos
mov
adc
pop
jp
push
mov
inc
sub
lcall
pop
in
rorb
jb
xor
adc
add
clc
movsl
scas
xor
loope
cmp
adc
adc
jecxz
ljmp
test
cs
mov
icebp
mov
push
push
cs
xor
mov
das
clc
test
or
pop
out
cltd
jno
mov
pop
fisubl
and
gs
outsb
loop
fwait
dec
push
inc
test
imul
or
aas
mov
lret
lret
lret
inc
mov
dec
mov
out
push
jp
xor
cmp
sub
jnp
sti
inc
push
fdivs
shrb
lods
fs
mov
fwait
and
das
sahf
stos
fldenv
xchg
in
pop
push
sub
dec
cli
test
add
inc
adcb
bnd
das
sbbl
adc
push
inc
or
mov
jnp
icebp
jns
jnp
pop
xor
and
addl
call
dec
sahf
adc
mov
scas
outsb
cmp
aaa
mov
std
pop
lret
js
add
mov
daa
test
lds
imul
fwait
cld
lock
push
jmp
or
test
xchg
xchg
inc
pusha
jecxz
loope
popf
cmp
inc
in
dec
in
test
and
mov
inc
stos
pop
push
out
adc
mov
fildll
adc
push
mov
or
mov
leave
icebp
loopne
fwait
imul
iret
int
andb
lret
aad
mov
mov
arpl
mov
pop
jo
std
pop
cmpsl
fdivrs
xchg
mov
inc
mov
hlt
daa
fwait
mov
add
rclb
stc
jg
ret
inc
xchg
movsl
mov
mov
add
pusha
xchg
shl
outsb
xlat
stos
add
repnz
shll
ljmp
jno
jp
jle
push
pop
mov
mov
pusha
je
adc
insl
xor
hlt
cli
pop
mov
test
jne
xor
mov
scas
lds
sub
fistpl
adc
mov
push
arpl
insb
insb
cs
inc
ficomps
ret
aas
dec
mov
fidivrs
outsl
inc
dec
dec
cltd
xchg
mov
adc
mov
adc
xchg
cmp
in
sbb
cmp
outsl
call
dec
sbb
inc
daa
nop
pop
inc
jp
push
push
stos
adc
fcompl
inc
sbb
aas
or
and
cmp
leave
fwait
dec
cmp
ljmp
xor
mov
int3
mov
mov
in
sub
jae
dec
lock
pop
adc
jmp
or
jne
xchg
jg
mov
aam
push
sbb
mov
nop
jmp
daa
adc
adc
mov
pop
je
jb
lods
xchg
or
insl
js
add
mov
mov
imul
sahf
add
push
dec
shrl
fisttpl
sahf
xor
inc
and
or
or
pop
into
xchg
inc
xor
adc
sbb
mov
inc
jp
fistps
cld
jns
mov
leave
shl
mov
sub
add
out
mov
xchg
mov
jp
lock
dec
fwait
out
subl
cmpb
push
rcll
out
inc
dec
jg
and
jo
cmpsl
mov
mov
pop
nop
push
loope
hlt
lock
test
push
int3
mov
in
hlt
xor
or
cld
adc
data16
push
mov
sub
loop
jo
fs
add
or
mov
mov
ret
mov
xchg
das
in
ret
not
aam
pop
jge
mov
fcoml
fisubrs
push
push
jbe
stc
lea
in
icebp
sub
fdivrs
movsl
inc
jo
inc
mov
pusha
sub
call
and
paddq
out
pop
imul
xlat
scas
push
add
test
rcll
dec
mov
push
xchg
cmpsb
pushf
arpl
mov
xor
in
add
addr16
push
les
lret
hlt
ja
cmp
ror
push
cmpb
fstl
cmc
hlt
ret
arpl
sub
cmp
add
in
fsubs
je
dec
int3
adc
cmp
insl
aaa
aam
mov
xchg
aad
pop
adc
in
les
in
inc
lea
lock
push
jb
out
lahf
dec
into
in
imul
pcmpgtb
stos
jg
in
in
mov
and
enter
arpl
in
mov
test
mov
and
fists
and
aad
xchg
js
xchg
mov
cmp
jecxz
jae
pop
test
cltd
out
add
xchg
stos
js
iret
mov
cmpsb
mov
xchg
add
dec
xor
jo
mov
mov
xchg
test
in
shll
mov
cwtl
cwtl
dec
push
jp
mov
mov
clc
lea
or
gs
popa
sub
les
shlb
ja
jl
pop
cs
lods
enter
aas
pop
je
outsl
out
xchg
pop
rorl
pushl
dec
sub
mov
jnp
icebp
xchg
nop
xchg
mov
jl
lret
sub
jl
and
test
test
fwait
sbb
popf
xchg
push
dec
lea
scas
push
and
call
sub
rol
ficompl
outsl
and
orb
mov
jne
sub
mov
minps
imul
sahf
push
popf
cmpsb
jne
inc
rorb
mov
xor
cmpsb
shr
js
jle
iret
mov
ss
imul
out
mov
xchg
and
lods
sub
fbld
loopne
in
xchg
mov
pushf
xor
push
into
sarb
inc
xchg
into
add
push
stos
mov
shll
pop
xchg
dec
pushf
push
popf
outsb
insb
pop
push
std
add
lock
mov
xor
sti
jmp
das
jecxz
and
popa
cld
xor
rcll
cli
sub
das
adc
je
lock
arpl
pusha
cwtl
ds
mov
pop
dec
or
adc
inc
xor
cwtl
aas
sbb
int3
add
sub
aam
lea
popl
sbb
loope
ffree
jbe
fistl
shlb
sub
jge
dec
lret
je
xchg
jns
fiaddl
ficompl
js
pop
pop
cmc
jg
je
xor
stc
push
insb
test
ds
ja
dec
cmp
out
repnz
jp
push
jmp
sbb
testl
fsts
and
outsl
mov
popa
pop
pop
xchg
dec
push
pop
sahf
jno
jno
jge
or
dec
lock
xchg
enter
pop
data16
rorb
test
jg
out
and
mov
idiv
mov
adc
cs
scas
mov
xchg
inc
adc
add
lret
loope
xchg
dec
sub
mov
jmp
cli
add
xchg
mov
sbb
push
mov
push
sub
push
xchg
pop
mov
inc
push
movb
outsb
jb
fwait
adc
imul
lret
lret
mov
adc
inc
add
cmp
inc
bound
fs
jnp
mov
hlt
ss
in
fwait
test
push
lds
mov
andl
movlhps
lahf
xor
sub
inc
add
jmp
out
mov
xchg
sbb
dec
arpl
jmp
xor
rcll
out
cld
ret
inc
fldcw
call
dec
js
pop
mov
sub
int
mov
add
out
adc
mov
jmp
dec
cmc
adc
orl
dec
int3
stos
imul
ljmp
and
out
pusha
sub
shrl
and
idivb
inc
call
mov
mov
push
mov
call
mov
mov
xor
lret
dec
jo
loopne
repnz
jo
in
cmpsb
jmp
test
jbe
sbb
daa
mov
int
mov
mov
cmp
jge
out
lods
fwait
cli
scas
xchg
cwtl
xchg
cmp
fidivrl
data16
jns
stc
sub
push
std
mov
lods
dec
and
inc
insb
dec
pop
fcom
orb
int3
icebp
xor
sub
fs
shrb
pushf
cmpsl
sti
les
pop
mov
pop
cltd
mov
cmpsb
dec
xchg
mov
clc
mov
inc
cli
push
xchg
int3
mov
mov
popl
or
movsb
inc
sarb
xchg
pop
adc
adc
stos
mov
dec
test
mov
icebp
sarl
rorl
repnz
mov
and
sahf
xchg
mov
cmpsl
pop
mov
or
outsb
mov
jge
ret
shl
lods
addr16
jns
sub
jle
scas
adc
or
out
sbb
sbb
or
pop
jae
fdivl
add
lcall
fisubrl
shlb
jbe
xchg
mov
adc
mov
les
in
and
or
std
xchg
add
or
out
push
jmp
jnp
xchg
or
inc
mov
out
jmp
shrb
scas
sub
cmp
jge
cmpb
dec
adc
ret
xchg
mov
bound
mov
adc
pop
xor
js
pop
cmp
xchg
push
mov
jbe
pop
mov
and
jecxz
push
fsubr
push
cmp
ja
arpl
push
popa
add
xchg
out
mov
gs
sti
xlat
std
pop
imul
cmp
idivl
mul
sbb
rcr
sbb
out
ficomps
out
sbb
sbb
push
ret
mov
push
mov
jbe
mov
push
nop
decb
mov
scas
jnp
aaa
stos
fistpl
inc
rorb
xchg
call
jnp
cmp
jecxz
pop
ss
jecxz
gs
xor
jg
gs
shrb
pop
sbb
ljmp
pop
jno
movsl
sbb
out
rcl
add
aaa
aad
or
outsb
and
movsb
arpl
lock
jge
dec
pushf
mov
stos
push
jae
in
daa
hlt
aam
notb
aas
mov
pop
add
sti
fdivrs
aam
shr
sti
lock
ja
je
pop
aas
int
inc
push
add
pushf
jnp
xchg
rcll
mov
pop
mov
mov
inc
pushf
cmpsl
cmp
popf
shll
aam
out
sbb
push
cmp
rclb
mov
sahf
add
outsb
stos
loope
psubsb
pop
sbb
mov
sub
mov
or
lcall
xor
in
popf
outsb
xlat
adc
mov
dec
jb
popa
sbbl
xchg
xchg
movsl
stos
adc
cmp
sbb
movsl
testb
sarl
jmp
out
xor
gs
test
cmp
fisubrl
push
incb
push
inc
imul
in
inc
mov
push
stc
and
mov
jne
hlt
je
dec
movsb
cmp
add
mov
adcl
rcrb
or
mov
insb
outsb
ja
xchg
fidivl
aas
and
movsl
or
je
enter
xor
xor
mov
xchg
sub
adc
mov
mov
pop
xchg
int3
sub
loop
inc
jbe
fs
callw
push
or
rcrb
les
int3
bound
cltd
cli
mov
add
clc
add
mov
cmpsb
dec
pop
add
jmp
dec
or
adc
dec
jae
xor
sub
or
in
sbb
xchg
fldcw
cmp
cmovbe
sbb
xchg
je
mov
lcall
jnp
sahf
jecxz
fidivl
fs
lods
jmp
and
sbb
sub
js
xchg
dec
pop
cs
push
and
jecxz
addr16
adc
aas
lods
inc
cmp
push
pop
data16
divl
js
push
imul
inc
dec
push
pushf
in
shll
test
xchg
fmul
mov
mov
test
inc
sti
aam
xchg
iret
sub
dec
add
sub
movsb
in
mov
roll
rol
in
in
xor
sbb
jecxz
pop
push
cs
inc
or
push
mov
aam
xlat
int
add
lds
xlat
hlt
jge
add
and
jae
ret
cmpsl
add
decl
lds
sahf
insb
adc
outsl
gs
addb
fbld
cmpsl
sbb
popa
inc
or
sub
mov
test
jge
ljmp
push
cmp
cltd
fwait
shll
or
aam
outsl
sub
xchg
cld
arpl
jmp
jae
dec
ret
mov
cltd
in
xor
push
insl
adc
cmp
shll
jnp
sub
popa
test
clc
add
lret
fmuls
pop
and
pop
nop
hlt
xchg
outsl
lret
push
loopne
imul
add
pop
inc
xchg
cmpsb
div
movsb
push
push
mov
les
mov
inc
pop
and
and
push
inc
sub
scas
pop
push
pop
in
das
ret
jb
jbe
insb
adc
movsb
jp
inc
or
pop
pop
cmpsb
push
sbb
xchg
das
and
sbb
scas
ret
cmp
pop
push
cmp
fstl
fisubrl
stos
push
jl
jle
shlb
repnz
iret
rol
mov
stos
loop
imul
inc
add
inc
into
dec
test
notb
add
push
bound
mov
or
sub
mov
and
inc
push
andnps
test
xchg
les
in
adc
xchg
xor
imul
jle
inc
repz
mov
cmp
mov
stc
adc
xor
rcl
daa
test
lret
insl
stos
aam
xor
les
movsl
and
leave
push
and
idivl
push
insb
lahf
leave
sbb
rcrb
jle
mov
out
out
jb
mov
xor
jae
inc
adc
repz
pusha
mov
sub
aaa
mov
dec
inc
ss
adc
dec
mov
inc
movsb
es
out
inc
repz
push
mov
jae
push
push
xor
xlat
repz
leave
aaa
cltd
add
repnz
cld
test
daa
add
sbb
lods
out
aas
xlat
jmp
adc
mov
lret
stc
movb
pop
out
sub
push
and
mov
dec
fildll
push
xor
inc
add
push
loope
enter
jno
push
scas
push
xchg
sub
add
idivl
xorb
lods
imul
xchg
pop
mov
sahf
popa
cmc
es
outsb
mulb
test
mov
adcb
mov
sbb
stos
call
and
clc
inc
dec
dec
mov
add
fsubrl
sub
mov
mov
movsb
mov
jb
sub
gs
iret
std
jne
in
aam
andl
ret
mov
movsl
test
pop
outsl
pop
in
sub
cmp
cmp
pop
cld
adc
test
dec
lock
add
imulb
mov
cmp
jnp
xchg
enter
in
cmp
inc
ss
aas
push
nop
pop
out
pop
stc
in
jp
movsb
mov
inc
cmp
push
pop
or
fcom
dec
adc
fs
mov
jo
inc
mov
es
cmp
stos
xlat
xor
inc
stos
arpl
lret
mov
nop
rcll
mov
mov
pop
push
dec
xor
push
adc
pop
inc
outsb
lds
testb
add
ret
sbbb
sub
outsb
sbb
xchg
test
hlt
fsubs
call
adc
add
pop
inc
clc
rcr
data16
inc
cmp
bound
xchg
and
pushf
int3
mov
out
add
jle
std
push
mov
xlat
xor
sub
icebp
jge
jle
adc
mov
std
jnp
sbb
mov
push
jl
or
leave
xor
hlt
adc
popf
lods
arpl
fs
dec
adc
loopne
add
outsl
and
enterw
ds
sbbb
ljmp
lea
addr16
jl
jo
push
sbb
nop
adc
or
and
imul
jge
call
mov
lcall
dec
es
aad
mov
and
cmpsl
push
es
inc
lret
jb
andb
imul
jl
and
sub
es
inc
pop
repnz
inc
insl
cmp
arpl
mov
loop
mov
iret
imul
xor
push
jae
pop
and
outsb
das
mov
cmp
jne
cld
inc
sub
or
lret
test
sub
xchg
movsb
push
idivb
push
adc
push
jmp
scas
push
xchg
jae
pinsrw
lods
or
sub
imul
and
lock
inc
int3
sub
lret
in
xchg
push
sub
imul
or
std
jo
mov
and
stc
adc
mov
into
mov
and
lret
xchg
mov
xor
dec
push
inc
sarb
sti
mov
add
mov
inc
xchg
and
lock
std
insl
lret
cwtl
fidivrs
jb
ja
cmp
popf
fs
jbe
insb
jae
jg
scas
add
fucom
push
test
adc
mov
aad
inc
testb
adc
icebp
outsl
add
ss
fldl2e
cli
xchg
gs
xchg
jbe
fcoml
adc
add
inc
in
arpl
lea
lea
movsb
fadd
xchg
mov
or
mov
mov
movsl
fisubl
scas
int3
aad
inc
je
xor
inc
xor
jmp
comiss
mov
cld
scas
sub
jmp
xchg
mov
adc
xlat
and
in
enter
sbb
gs
fcomp
pop
enter
repz
jns
out
adc
or
jmp
pop
inc
lcall
cmpsb
mov
js
add
out
sub
dec
ficompl
mov
lods
cmpsl
icebp
loope
dec
aam
addr16
aad
movsb
xor
add
push
and
cmpsl
popf
loopne
in
outsb
hlt
xchg
cmp
jl
jmp
xor
dec
and
jp
adc
mov
ja
pop
and
pushf
mov
mov
mov
into
mov
jmp
scas
scas
xchg
movb
lahf
call
mov
push
icebp
push
add
xchg
cwtl
test
push
push
cs
mov
jp
scas
push
sub
push
push
or
int3
jecxz
std
daa
fbld
push
clc
mov
nop
pop
sub
in
lods
mov
mov
jns
in
insb
pop
int3
lods
cltd
fbstp
mov
mulb
mov
cmpsl
xchg
cmpsb
stc
xor
mov
xor
insb
inc
addb
dec
arpl
xor
mov
pusha
jae
push
mov
das
ja
adc
cvttps2pi
daa
fwait
test
stos
bound
jae
jg
dec
push
mov
scas
push
dec
jl
pop
xchg
mov
ss
lret
pusha
sub
mov
pop
adc
sub
iret
loope
test
aad
push
lea
iret
inc
nop
cmp
pop
in
pop
lahf
lret
fisttps
xchg
push
ret
push
mov
nop
sub
or
rorl
and
cwtl
and
add
mov
sub
vmovd
test
jb
jnp
nop
imull
add
jp
loop
inc
xor
outsb
pop
cld
repz
mov
jae
mov
xchg
loopne
lds
lahf
and
mov
cld
or
add
ljmp
jecxz
inc
pop
mulb
mov
bound
mov
jno
sub
xor
mov
adc
fstpt
out
mov
mov
cmp
and
xchg
push
stos
mov
lcall
insl
lahf
es
push
fwait
loopne
add
push
cld
mov
pop
adc
cmp
sub
andl
ficomps
cltd
fnstsw
data16
leave
sahf
mov
sarl
push
cmp
xchg
fcomps
sub
test
add
sahf
adc
fldl
jno
nop
shr
jmp
hlt
fdiv
sub
fisubrl
aaa
dec
xor
les
leave
push
ja
bswap
pop
sbb
ret
inc
aam
pop
pop
push
jp
subb
add
adc
lods
mov
adc
ljmp
addr16
xorb
adc
dec
cmp
fcmovb
sahf
inc
mov
mov
jmp
push
xor
les
mov
cmc
into
and
xchg
inc
mov
pop
xlat
test
sub
les
gs
lods
mov
jge
out
clc
loop
mov
pop
loope
mov
shll
loop
xor
les
mov
mov
inc
dec
std
push
mov
into
enter
inc
scas
adc
ficoms
push
adc
jns
cmc
mov
es
dec
mov
xchg
cmc
dec
lret
dec
sbb
inc
roll
ret
dec
inc
push
and
dec
ds
jb
sub
popl
mov
push
stos
mov
sub
jno
loope
sti
xor
test
aam
mov
hlt
pusha
mov
fs
mov
in
dec
int
ds
inc
mov
push
dec
es
pop
outsl
aaa
cltd
cmc
pop
fcomps
push
sahf
roll
adc
xchg
notl
sub
xor
push
xor
cmc
shrb
fdivrs
and
roll
sub
in
aad
push
mov
push
xchg
jecxz
fimuls
mov
add
pop
in
adc
jle
xor
fstpt
cmp
cwtl
and
incb
insl
mov
mov
cwtl
fistpl
lods
jbe
fimull
inc
arpl
sub
shrb
pop
adc
ret
scas
fldcw
add
pop
insb
sub
gs
addr16
in
sti
lea
adc
cwtl
push
hlt
mov
and
adc
xlat
xchg
pop
rcr
stos
add
jmp
jb
fs
sbb
lods
cmp
mov
push
cltd
clc
cs
rorl
fisubrs
mov
and
aam
push
mov
push
push
jnp
loop
sub
mov
sbb
push
stc
inc
adc
cmpsb
lea
and
pop
ret
loope
push
or
and
lock
add
fwait
adc
jno
testl
jge
je
into
mov
mov
fisubrs
add
dec
inc
adc
push
mov
fcomp
jnp
cltd
inc
dec
in
mov
add
push
push
xchg
cld
les
jns
imul
iret
adc
adc
cmp
imul
or
adc
or
dec
or
movsb
mov
sbb
fdivrl
jbe
cltd
in
lahf
addr16
and
jne
cmp
jg
dec
cld
jg
movsb
jmp
jo
or
sahf
movsb
jecxz
xor
fadds
mov
jno
sub
or
dec
cltd
movsl
icebp
lods
jge
xor
std
repnz
stos
aam
jbe
in
mov
in
mov
push
jp
mov
dec
push
mov
cltd
mov
push
lahf
cs
xchg
mov
lods
push
popa
icebp
pop
and
shr
cmc
cmpsl
enter
fsts
sar
mov
cmpsb
outsb
xor
mov
inc
or
js
jae
sbb
xor
cmpsb
xlat
fstl
xor
test
inc
iret
imul
or
repz
inc
in
jno
inc
push
sti
outsb
mull
xor
cltd
je
inc
inc
leave
arpl
adc
gs
repnz
jg
mov
pop
pop
sub
adc
int
push
lahf
lods
push
cwtl
inc
test
sub
enter
push
cmp
inc
or
lods
cmp
xorl
fisubrs
cltd
jge
jmp
jnp
mov
jne
mov
push
pusha
pop
jge
xorl
cmp
pop
jecxz
add
mov
js
out
iret
rol
sbb
inc
test
push
push
adc
loop
addr16
out
cmp
adc
js
jo
mov
ljmp
sbb
cli
bnd
mov
jnp
cmc
sbb
nop
test
xor
outsl
cld
sbb
adc
repz
xchg
jge
dec
inc
mov
adc
add
shll
mov
ret
movsl
es
mov
and
ret
xor
cltd
mov
sbb
shl
push
add
xchg
imul
aas
and
pop
xor
stos
fnstsw
ljmp
pop
sub
scas
sbb
insb
andl
dec
or
test
and
loope
xchg
fs
mov
push
cwtl
dec
jle
pop
out
pcmpgtw
adc
cli
je
xchg
aas
cmpl
mov
mov
jmp
cmp
imul
mov
mov
subps
aam
xlat
ljmp
and
fbstp
push
sub
mov
mov
inc
lahf
in
or
mov
push
and
sub
bound
fists
and
sahf
mov
popa
jns
sbb
mov
push
in
sbb
mov
mov
shlb
xchg
jno
mov
xchg
lcall
xchg
xchg
dec
out
es
out
out
inc
mov
dec
push
enter
jle
jle
jo
pushf
xor
pushf
xchg
or
sahf
lret
pusha
push
lods
fmul
mov
and
cld
leave
sub
pop
cmp
leave
inc
mov
xchg
lods
pushf
mov
mov
xor
into
or
cmpsb
dec
lds
insb
xchg
int
rorl
movsl
xchg
andl
sti
mov
shrl
mov
repz
cmp
mov
xchg
cmpsb
out
cmp
fwait
add
xchg
xchg
jp
jmp
lock
or
or
sub
pop
scas
cmp
scas
mov
jns
outsl
and
in
dec
sbb
dec
inc
pop
mov
rcl
push
cmpsl
into
dec
enter
or
fisttpll
or
sbb
icebp
cmp
inc
in
inc
dec
add
sub
mov
mov
hlt
push
xchg
jle
jmp
adc
and
push
jo
leave
ret
jmp
dec
ljmp
imul
pop
jbe
shlb
dec
xchg
out
adc
add
xor
mov
cmpsl
frstor
inc
push
jae
sbb
jnp
mov
jno
mov
xchg
aaa
mov
push
in
cmp
mov
mov
lea
push
sbb
mov
imul
xchg
cmp
cmp
and
loope
and
push
sbb
sbb
insb
insb
stos
and
mov
jle
mov
dec
lds
cmpsb
popf
sub
or
cmp
inc
jecxz
push
inc
inc
repz
int3
into
out
sub
sti
pop
or
insl
int3
cld
nop
add
lret
push
mov
cmp
and
jmp
insb
and
mov
mov
mov
jo
pushl
ljmp
insl
cs
push
cmp
push
nop
mov
sbb
push
dec
mov
mov
inc
popaw
push
sarb
cmc
xchg
mov
sarb
lea
xor
rorl
icebp
cltd
les
dec
addb
and
push
add
pop
jne
xchg
subb
sub
sub
pop
bound
out
ja
add
insb
inc
aas
jns
or
inc
testl
test
js
adc
push
push
stos
sbb
xlat
cmp
and
sar
mov
mov
sti
xchg
mov
pop
shll
mov
stos
insl
push
in
aad
and
loopne
mov
ficoms
dec
cmpsl
mov
stos
sbb
xorb
nop
outsl
and
add
pushf
lea
insb
aad
andl
in
dec
cmp
outsb
sbb
pop
stc
sub
pop
mov
xor
sbb
mov
jmp
pusha
mov
mov
pop
or
dec
jmp
outsb
xchg
cmp
adc
xor
or
mov
int3
or
push
int3
mov
pop
loope
push
pop
or
fsubrs
data16
sbb
adc
inc
jo
dec
dec
stos
in
pop
test
xor
xor
push
dec
mov
mov
arpl
aas
cmc
mov
xchg
out
dec
rorl
scas
push
es
inc
js
sbb
mov
leave
mov
test
in
into
fcmovne
sbb
xchg
mov
out
rcrl
adc
mov
movsl
mov
inc
mov
shlb
stos
aam
insl
inc
inc
insb
stos
ss
fdivl
xor
dec
cwtl
and
mov
scas
test
cmp
aaa
ljmp
dec
xor
stc
jmp
pop
dec
js
sub
in
and
jb
xchg
sahf
sti
shlb
push
gs
xor
fimull
add
lahf
stos
sub
adc
mov
adc
pop
pop
cs
and
mov
pop
ljmp
jbe
popf
inc
stos
aad
rcrb
dec
sbb
xor
add
cmp
lea
xor
add
sub
icebp
push
sbb
push
xor
cmp
jb
in
pop
sbb
test
outsb
aas
rcr
pop
out
xlat
shrl
ja
ret
xor
and
fsubrs
sbb
sbb
es
jne
subb
mov
test
inc
push
aad
cli
je
imull
in
sbb
xchg
icebp
pusha
xor
sahf
sbb
mov
push
sbb
loopne
pop
mov
hlt
test
pop
or
cmp
ss
lds
lahf
sarl
mov
mov
xchg
add
cltd
cld
stos
out
xchg
jle
mull
cltd
push
mov
outsb
cmp
jae
xor
add
call
sub
mov
fwait
out
xchg
mov
cmp
mov
sub
sub
mov
jle
leave
xor
mov
fistpll
icebp
mov
push
push
jp
push
mov
pop
jno
cmp
call
sub
xchg
rorb
or
je
mov
xor
je
jno
mov
inc
cltd
stc
sub
rorb
imul
and
push
out
adc
and
add
loopne
push
dec
push
add
push
and
adc
xchg
or
and
outsb
pop
cmp
add
or
inc
daa
inc
inc
lret
fidivs
xchg
jge
in
mov
pop
and
in
std
cwtl
int
lock
ret
fsubrs
jo
pop
push
xchg
stos
out
sub
pop
fldt
pop
xchg
push
fcompl
mov
loop
add
aaa
lods
test
push
pop
xor
fwait
lds
clc
and
inc
sub
sti
aam
xorl
jg
popa
inc
xchg
dec
jge
sub
inc
ret
pop
out
pop
subl
mov
stos
mov
mov
xor
lds
adc
xchg
scas
loop
ss
xchg
or
lret
fs
pop
nop
inc
cmpl
fcomps
repnz
das
add
mov
or
into
pop
ret
cmp
cmp
mov
push
xchg
test
jge
icebp
loop
xor
inc
divb
push
inc
mov
out
sar
shll
test
sbb
sti
outsb
sbb
test
adc
fmull
lahf
ficompl
mov
xchg
xor
mov
cmpl
mov
push
sbb
mov
push
push
mov
aaa
jle
test
xchg
adc
insb
iret
lock
or
xchg
push
les
cmp
shr
mov
loope
pushf
lcall
xor
xor
sbb
pop
jnp
jbe
mov
test
sub
daa
and
repnz
out
insl
cmc
aad
movsl
xor
adc
and
pop
jno
inc
cmp
ficompl
jp
pop
xor
pushf
stc
pop
fidivrl
pop
jg
xchg
insl
xchg
or
pop
fwait
fs
inc
mov
lret
push
stc
pop
xor
scas
dec
xor
xor
loopne
fsubrp
lahf
dec
aaa
incb
add
xchg
subl
dec
stos
push
sub
mov
or
xchg
mov
adc
xchg
fbld
cmpsl
inc
sti
aaa
and
sub
lret
lret
pushf
ss
divb
ret
notb
int
aam
xchg
adc
and
xor
test
in
xchg
cmp
sub
cmp
movsb
mov
xchg
int
push
pop
sbb
mov
pop
fidivrs
sbb
in
stc
jnp
sbb
or
sub
and
mov
inc
inc
cs
sbb
inc
pop
push
lock
inc
and
cmp
fbstp
shlb
in
outsl
pop
jecxz
or
add
inc
jle
lahf
mov
stc
out
mov
mov
jle
ds
cmp
cmp
dec
jmp
loop
xor
testb
int3
cmpsl
sbb
push
imul
and
pop
or
jb
dec
inc
pop
std
jl
fwait
outsb
xor
cltd
dec
pop
jb
fnstsw
in
cmp
ja
xchg
lock
jecxz
ss
popa
add
sub
and
rorb
mov
mov
test
jg
push
pop
add
xchg
rorb
push
cmp
arpl
mov
dec
std
jp
mov
in
xlat
dec
lods
add
mov
jo
arpl
xor
push
movsb
imul
sub
mov
and
cltd
in
popa
int
pop
xor
pop
jp
jb
push
mov
outsl
lock
lret
out
and
push
mov
xlat
and
sbb
cmp
mov
arpl
stos
in
jmp
movsb
push
mov
lahf
cmp
insb
lret
into
mov
popf
jb
pop
ss
mov
cmp
ret
push
sbbl
add
cmp
pop
fsubl
or
jnp
push
int3
mov
cs
lcall
fbld
test
cmp
cmpb
repnz
pop
imul
imul
icebp
push
bound
inc
fstps
ds
pop
sbb
xlat
push
jo
sahf
aam
sbb
pop
jo
mov
lea
cmp
xchg
fbld
call
stos
ret
and
icebp
cmp
mov
or
adc
xchg
adc
inc
and
fmul
pop
cmpl
xlat
jge
jnp
adc
mov
ja
out
jne
movsb
bound
ss
inc
xchg
cmpb
xor
pop
mov
and
cmc
cwtl
jle
xchg
fcom
mov
aad
call
ret
add
dec
adc
push
sub
jae
mov
stos
sbb
rorl
xchg
ja
add
or
icebp
pop
pop
and
repz
jns
jnp
movsl
xor
dec
jecxz
fst
push
mov
leave
cmpsb
pusha
sbb
jg
ficompl
pop
xchg
aas
jo
xlat
ja
xchg
imulb
enter
dec
pop
xchg
int
cmpsl
call
sarl
aam
adc
mov
fidivrl
cli
or
jns
imul
dec
pop
inc
shll
filds
lods
xor
jb
push
divl
add
call
data16
push
enter
mov
outsl
lea
add
fldt
jle
mov
and
mov
mov
jmp
lock
ss
retw
jbe
dec
push
dec
test
sti
mov
lahf
scas
stos
fdivr
jp
jns
lahf
adc
mov
rorb
sbb
xchg
mov
mov
sub
inc
bound
out
fnsave
and
mov
mov
or
lea
call
mov
fcmovb
push
xchg
dec
loopne
lds
jo
shrb
sub
adc
outsl
mov
imull
aad
cwtl
outsb
fidivrl
icebp
push
add
xlat
test
stos
loopne
inc
lret
xchg
bound
aam
pop
sbb
cltd
add
mov
xchg
aad
push
mov
lods
cwtl
sub
dec
xor
jl
dec
jnp
adc
scas
adc
push
fidivrl
mov
jb
or
sub
stos
pop
or
pop
add
fadds
jl
call
stc
and
roll
sub
mov
xchg
jp
fisubrl
and
or
xchg
andb
add
ja
int
pop
cltd
mov
leave
repnz
enter
cmpsb
notb
adc
jmp
lock
mov
mov
sti
lret
outsl
insl
cwtl
sub
popf
mov
dec
add
push
int
dec
jmp
dec
stos
jmp
cltd
sub
aad
mov
mov
ja
push
in
out
jl
push
test
adc
cs
sub
mov
lods
daa
cmpsl
dec
incl
pop
fisubrs
in
xchg
mov
fstps
mov
xlat
mov
cmp
sub
ret
in
mov
xchg
xchg
rcrl
jns
and
pop
sub
shl
mov
cmpsl
es
and
pushw
cs
xchg
int
aas
xchg
inc
adc
dec
or
hlt
mov
push
insl
lods
or
inc
jge
mov
add
jg
or
fnstenv
rorb
in
jbe
dec
add
jle
push
adc
sub
xlat
int
movsl
mov
sbb
mov
or
adc
sbb
sub
mov
cmp
cld
out
bound
xlat
in
jne
loope
lcall
std
lret
lds
scas
mov
nop
push
pop
popf
mull
push
sbb
je
or
mov
int
xchg
xor
jne
ficoml
mov
cmp
test
sbb
orb
loopne
add
test
jno
ror
xor
out
sub
fistpl
push
insl
push
inc
nop
cli
xor
pop
bound
stos
push
mov
and
imul
jbe
shlb
mov
insl
std
mov
push
call
out
jne
mov
lahf
xor
lods
xor
cmp
dec
push
cmp
into
lock
adc
xor
xlat
lret
loope
xor
das
add
cli
ret
mov
sbb
je
lds
xchg
sbb
dec
or
push
lds
mov
pop
lds
push
out
packuswb
xlat
and
loopne
andb
repz
fmuls
std
pop
loop
xor
repz
or
je
adc
int
jne
jo
into
xor
pop
mov
adc
insb
add
push
inc
fadd
call
stos
jb
rorl
jmp
push
pusha
clc
mov
jne
mov
scas
xor
push
inc
sbb
add
sbb
inc
and
mov
pusha
pop
mov
push
xor
xchg
adc
fisttps
stc
js
mov
scas
sahf
test
insl
or
adcl
int
mov
mov
or
imul
xor
sbb
fldl2e
std
mov
cmpsl
rorl
fldcw
sbb
scas
gs
leave
jecxz
aam
and
pop
ss
ret
scas
fwait
repnz
pop
cli
and
lcall
scas
dec
aad
es
insb
push
std
inc
mov
push
inc
sub
push
mov
push
mov
pmovmskb
decw
cld
xchg
xchg
repnz
cmp
enter
in
ja
inc
cmp
sbb
cmp
cmp
scas
and
or
mov
rcrl
push
nop
xchg
mov
cmp
pop
jae
mov
lcall
inc
jle
jbe
jns
sub
adc
or
bound
lcall
jno
mov
aas
hlt
nop
sbb
rcrl
outsl
add
dec
sub
out
push
sub
fldl
testl
adc
adc
sub
scas
decl
dec
push
or
xorl
js
enter
mov
xor
or
push
sub
fwait
loopne
fimull
cltd
arpl
adc
pusha
push
mov
scas
negb
test
lods
jg
aad
call
cld
test
dec
xor
ret
out
mov
scas
aad
adc
mov
lcall
or
rorb
mov
data16
loopne
add
or
inc
pop
lret
xlat
fadd
mov
fwait
dec
mov
push
push
ds
xchg
push
pop
mulps
in
iret
inc
xchg
scas
push
insb
xor
or
mov
mov
mov
shlb
out
xchg
xor
call
push
jge
aad
lcall
loopne
pop
cmp
jae
lret
scas
add
enter
sbb
loop
fld1
in
mov
xor
xchg
cltd
pop
rcll
and
dec
popf
nop
int3
sar
or
mov
jecxz
insb
pop
mov
or
in
push
inc
lcall
jle
push
call
aam
fisubs
xor
cli
xor
call
xor
pushw
adc
mov
mov
pushf
or
mov
fwait
movnti
clc
imul
mov
loop
test
mov
into
sarl
adc
jnp
ljmp
les
call
inc
adc
sub
sbbb
xchg
aaa
ret
insl
inc
in
xchg
ja
fld
mov
sbb
dec
ds
and
jbe
shl
int
hlt
int
adc
jp
pop
and
pushf
test
sub
jae
jmp
sbb
addr16
cmp
cmp
sbbl
iret
xchg
or
je
lret
mov
je
add
xor
sbb
cmc
stc
mov
pop
ja,pt
sub
sbb
nop
xchg
xor
iret
xchg
stc
xchg
lds
xor
mov
pop
xchg
bnd
das
cmpsl
push
pop
jle
or
sbb
outsb
fidivl
jecxz
sub
dec
jae
mov
js
mov
clc
adc
rolb
jne
test
outsl
aam
ja
lahf
pop
int3
push
dec
mov
xchg
sbb
sub
jl
mov
inc
movb
xchg
mov
inc
fisubl
sub
dec
dec
daa
je
repnz
outsb
inc
jp
mov
xchg
sbb
mov
sbb
mov
fbstp
sbb
int3
addr16
sahf
or
xchg
cmpsl
cmp
orb
sub
ss
loop
cmpsl
push
jno
ljmp
daa
shr
xchg
adc
or
cmp
jmp
pop
outsl
and
clc
sbb
stos
push
das
mov
popf
mov
icebp
enter
mov
dec
jo
orl
dec
jae
shrb
test
in
cmc
test
sub
arpl
mov
push
or
sahf
or
dec
pop
xchg
int3
dec
lock
pop
jp
fcomi
imul
test
fsts
cmp
cwtl
into
mov
jne
sub
bound
cmp
jecxz
add
xchg
xchg
sub
cmp
dec
xchg
lret
inc
gs
clc
aam
ret
and
sub
xchg
inc
pop
mov
xor
je
add
push
in
lods
fldt
jge
sub
mov
pop
cmp
in
cmp
roll
push
adcb
mov
mov
jbe
cmp
in
mov
jae
mov
testb
notl
mov
lods
icebp
imul
cmc
in
shll
scas
ljmp
sarl
fst
and
jg
in
xchg
sarl
lret
mov
adc
or
sub
in
jg
out
and
stos
fistl
scas
and
scas
or
mov
cs
call
sub
call
fucomp
add
sbb
fs
pop
or
mov
jne
pop
aas
data16
pop
popf
xlat
and
jecxz
xchg
dec
pop
stos
push
mov
insb
add
dec
cmp
hlt
push
or
mov
int3
and
icebp
mov
pop
imul
sbbl
mov
adc
cmpl
nop
cld
jmp
sub
xor
mov
dec
and
pop
sub
or
call
pop
cmp
jge
pop
mov
clc
xchg
mov
inc
xor
mov
push
xor
dec
dec
mov
sbb
mov
out
xor
mov
add
int3
xor
pop
sbb
mov
pop
pop
andl
in
rcl
mov
push
mov
ja
xchg
mov
in
and
xchg
sub
xchg
sbb
mov
call
popf
or
add
xor
and
lods
mov
pop
lds
mov
rolb
xor
fwait
leave
xchg
sbb
rorb
rcrb
mov
rclb
pop
sahf
mov
test
fisttpll
cli
das
je
adc
pop
int3
inc
je
dec
and
push
add
outsb
leave
add
stos
imul
mov
scas
in
sbb
xor
ret
xchg
cli
movsl
ljmp
push
and
push
push
cli
hlt
adc
hlt
xorb
dec
std
jp
add
stc
popf
pop
clc
fidivrs
mov
mov
insb
fiaddl
xchg
dec
sub
int3
mov
push
fcomi
test
sub
test
push
mov
pop
push
mov
add
cmp
loop
cmp
stc
out
push
sub
bound
mov
pop
sbb
test
pop
je
shrb
mov
rcrl
insb
jno
lahf
in
sbb
leave
xchg
or
xlat
leave
dec
mov
sbb
adc
outsl
jnp
int
xor
add
add
pop
xlat
or
hlt
mov
push
xor
xchg
addr16
inc
and
jne
cs
test
scas
xor
xor
cmp
sub
loopne
mov
ret
push
jb
fsubl
sub
icebp
mov
sti
popa
or
fiadds
add
dec
sub
mov
push
test
push
push
popa
ret
adc
lea
jle
pop
jp
sahf
sbb
mov
imul
inc
icebp
mov
jo
clc
mov
mov
lods
dec
filds
and
xorb
and
mov
cli
dec
cmpsb
pop
loope
bnd
mov
mov
int
inc
mov
lods
clc
daa
nop
daa
push
pushf
ja
xchg
sbb
lahf
sub
mov
leave
mov
fimuls
xchg
push
in
test
mov
dec
stos
roll
mov
icebp
std
lods
and
std
add
xor
jge
bound
or
ja
sub
push
mov
push
data16
arpl
inc
xchg
add
push
jge
rcr
lret
jecxz
and
mov
mov
mov
inc
cmp
mov
outsl
or
std
clc
fldenv
cli
cmp
sub
outsl
rcrl
lods
inc
xor
hlt
sarb
pop
mov
fnstenv
sbb
push
cld
movsb
decl
enter
stos
fwait
jb
jne
sbb
mov
sub
nop
sub
pop
xor
xchg
movsb
and
cmp
repz
cwtl
cmp
aaa
jno
inc
lea
lahf
mov
fwait
push
push
xor
sub
lea
inc
adc
dec
jno
mov
dec
and
pop
add
inc
cwtl
bound
push
mov
push
xlat
adc
enter
jl
mov
arpl
push
sub
lret
shlb
sbb
loopne
mov
test
pushf
mov
imulb
sbb
mov
loop
loop
push
mov
insb
add
or
repz
sub
clc
icebp
in
mov
into
jl
mov
mov
addr16
lea
xchg
mov
xchg
loop
test
push
sbb
push
inc
xchg
jb
pop
mov
std
repnz
fnstenv
mov
dec
fs
pop
jg
outsl
lea
adc
mov
push
inc
mov
push
push
jb
xor
les
rclb
cwtl
sbb
data16
outsb
push
aaa
loope
daa
mov
adc
cli
and
pop
mov
dec
inc
fisubrl
ret
push
jmp
fsubl
xchg
shrl
push
adc
scas
movsl
shlb
je
lods
pop
fsubrl
pop
cli
idivb
lcall
xchg
inc
xchg
data16
push
push
aaa
sti
cmp
fwait
and
test
pop
dec
mov
mov
enter
out
lcall
xor
mov
outsl
jge
aad
xacquire
xchg
hlt
pusha
xchg
adc
fistpl
push
scas
xchg
out
into
push
mov
mov
push
notb
push
mov
pop
fildll
adc
and
das
and
xorl
xor
shlb
fsubrl
fldenv
aaa
das
imul
or
ficompl
adc
mov
cmpsb
and
int3
ja
fildl
iret
jmp
mov
ss
pop
cmp
and
or
mov
adc
add
arpl
rorl
fisttps
lods
test
ds
mov
sti
sbb
rcrb
movl
push
xchg
pop
and
dec
das
daa
cmp
sbb
xchg
lea
sub
or
js
sbb
pop
and
push
dec
stc
cmpsl
ja
je
sub
scas
outsb
mov
out
xchg
int3
lret
sarl
in
lcall
jmp
xchg
leave
and
fiadds
push
cwtl
aas
sbb
mov
push
mov
sbb
sbb
sub
fcomps
mov
lods
add
aam
mov
jne
xchg
add
mov
insl
icebp
push
pusha
rcll
ret
fwait
stos
cmc
fwait
pusha
jns
xchg
adcl
mov
xchg
scas
sub
sub
dec
xchg
adc
inc
lods
aas
or
mov
push
xchg
dec
xlat
nop
out
clc
cmp
or
adc
mov
and
xor
shlb
inc
xor
incb
and
pop
pusha
dec
adc
ja
fcomp
jge
push
or
mov
fidivl
fwait
pop
adc
fdivrl
jmp
hlt
aad
aaa
sub
xchg
xchg
xor
frstor
push
aas
pop
xor
adc
or
add
in
or
outsl
mov
adc
insb
sti
fadd
or
dec
adc
pop
add
add
movsb
int
inc
ret
and
xor
push
movsb
imul
mov
sbb
xlat
shll
jl
mov
fistpll
pop
int
cmp
sbb
lahf
mov
add
mov
ss
outsl
xchg
inc
add
push
push
out
mov
outsl
and
pusha
repz
sub
or
iret
push
lds
pop
xor
mov
ljmp
imul
pop
into
push
or
push
xor
inc
leave
cmp
push
adc
adc
imul
pop
orb
repnz
sbb
fidivl
xor
cmpl
test
je
cmp
or
xchg
shll
sbb
popf
push
into
add
push
jno
mov
scas
popf
int
mov
push
pop
clc
push
jecxz
fisttpl
and
jns
dec
clc
mov
adc
lcall
jmp
adc
pop
ret
loope
sub
xor
cmpsl
insl
xchg
fistps
mov
mov
mov
clc
inc
mov
roll
inc
sbb
sbb
mov
mov
loope
test
loop
and
cmp
movsb
ljmp
fsub
inc
rcrb
ljmp
fcmove
cmpsb
sub
mov
add
xchg
dec
ret
ret
adc
test
adc
or
mov
ffree
aaa
cmpsb
xor
or
js
adc
ja
mov
dec
pop
push
in
insl
shll
inc
inc
inc
repz
pop
out
mov
mov
bound
inc
hlt
mov
cmc
aad
lret
sahf
mov
push
xlat
adcw
cmp
out
lret
push
mull
movsl
jo
mov
pushf
cmp
movsb
mov
subb
dec
shll
leave
sti
shrw
test
cmp
and
mov
aad
fisubl
mov
jns
mov
pop
and
jns
sti
xchg
xchg
cli
loop
test
sar
mov
adc
cmp
jg
add
mov
dec
movb
mov
aas
movsb
movsb
push
push
stos
mov
pop
movsl
mov
aam
cltd
or
js
pop
add
loop
mov
sub
push
leave
inc
dec
mov
sbb
daa
cli
dec
stos
inc
cmp
mov
cs
jecxz
sbb
mov
fcoms
lds
xchg
insl
jne
sarl
lea
out
in
test
pop
inc
pop
bound
dec
mov
outsl
xchg
sbbl
sbb
js
cwtl
fbstp
jno
xchg
imul
sub
insl
or
test
lea
mov
lds
xchg
push
pusha
ret
nop
cmc
icebp
pop
roll
mov
movsb
insb
out
cmpsl
inc
daa
mov
in
hlt
and
out
pop
test
lret
mov
pop
idiv
lahf
bound
fnstenv
mov
repz
push
aam
mov
sub
out
jp
ficomps
mov
mov
push
inc
bound
lahf
test
cmp
rcll
sub
mov
in
add
dec
mov
or
fldl
rep
scas
inc
test
cmp
push
jmp
mov
add
xchg
ljmp
sub
std
mov
pop
rorl
or
imul
daa
xchg
outsl
add
iret
out
daa
notl
ret
lret
loopne
jmp
pusha
insl
shl
iret
inc
test
ja
jmp
out
push
or
pusha
stos
push
adcb
rcr
leave
outsl
mov
cwtl
mov
fxch
shl
popa
cltd
shl
pop
out
movsb
add
scas
or
call
xchg
jmp
rcll
popf
aad
sbb
movsb
pusha
cmp
xorl
lcall
jbe
jno
not
movb
movsb
xor
adc
pop
popf
lret
lods
out
adc
xchg
and
rol
out
mov
sub
mov
gs
popf
sub
xchg
or
es
inc
fnsave
xchg
aas
push
in
push
mov
popf
adcb
lock
dec
jne
push
mov
mov
dec
aam
inc
ljmp
pop
aad
and
adc
in
sbb
sbb
adcb
in
leave
push
mov
xor
push
mov
clc
inc
ret
xchg
pop
pop
fcmovb
jmp
int3
jge
stc
xchg
mov
xchg
sub
fdivs
dec
je
js
stos
or
mov
bound
sbbl
and
mov
daa
mov
movsl
stc
fucomip
pop
mov
out
add
leave
or
ds
push
xor
lock
out
iret
push
mov
mov
data16
xor
pop
jbe
ret
aas
or
push
aad
mov
leave
dec
xor
out
inc
xchg
test
dec
adc
xchg
dec
cli
cmpsl
les
ja
stc
fs
sbb
mov
lcall
test
cmp
rclb
sbb
das
push
movsb
and
push
dec
pop
int
sti
arpl
add
inc
push
scas
lret
int3
out
lret
dec
cmp
mov
pop
inc
out
push
adc
xchg
sbb
jnp
mov
push
adc
imul
popa
loop
cmp
mov
imul
add
adc
or
stos
pushf
es
call
cmc
push
js
push
scas
pop
and
lods
out
pop
sti
dec
jg
mov
out
pop
sub
pop
pop
repz
add
fidivs
lea
inc
mov
daa
xchg
enter
fidivs
iret
loopne
cltd
in
pop
cmp
test
mov
sub
push
mov
adc
filds
nop
in
out
or
pop
fstpt
sbb
into
aas
pusha
and
xor
ss
push
mov
xchg
ja
aas
rorl
nop
icebp
dec
mov
pop
paddd
cmpsl
adc
adc
in
adc
and
aaa
mov
es
xor
or
icebp
insb
push
fistpll
pop
or
lret
adc
mov
mov
push
popa
daa
mov
stc
xor
cltd
ss
sbb
lcall
mov
xor
icebp
jae
pop
push
stc
dec
repnz
cld
push
adc
out
xor
aas
call
jg
aaa
pop
pop
mov
sbbb
jg
cltd
xor
xchg
push
cmp
mov
cmc
jmp
xor
mov
or
repnz
fcoms
lods
das
cmp
aam
pop
xchg
mov
push
in
jl
out
je
xor
inc
ret
test
add
stos
ds
test
jbe
inc
out
int
fiadds
popa
pop
pop
fcomps
fcmovu
nop
adc
adc
loopne
icebp
mov
addr16
shll
mov
loopne
arpl
push
mov
dec
sub
xlat
pop
pusha
mov
mov
push
mov
pop
mov
lods
loop
fisttpll
sub
cmp
pop
dec
incl
loopne
scas
adc
adc
or
dec
mov
lds
repz
lds
ljmp
hlt
inc
mov
dec
inc
lret
je
push
cmp
movsl
jmp
or
pushf
pop
daa
adc
mov
int3
pop
dec
jg
call
adc
xor
sbb
xlat
pop
pushf
sub
mov
jno
lcall
mov
xlat
mov
xchg
ljmp
ja
cmpsl
orl
aad
or
xor
inc
ss
sub
pop
popa
jp
sbb
inc
lock
xor
mov
mov
loop
fxch
inc
mov
xor
pop
mov
hlt
ja
push
dec
cmp
jnp
fsts
outsb
pop
outsl
pop
push
mov
jb
jp
push
les
aas
scas
mov
int
jo
lock
insb
mov
aad
mov
icebp
jbe
pop
nop
or
lahf
aas
push
aam
cwtl
scas
mov
dec
inc
out
inc
xor
xchg
std
aam
loopne
sbb
jns
pushf
rcl
mov
push
inc
or
mov
add
jno
sub
jbe
popf
lea
lret
dec
inc
sahf
or
in
mov
addr16
mov
mov
int
jl
xchg
mov
jae
sbb
bound
ret
lahf
adc
pop
jo
lods
mov
mov
push
pop
addr16
out
mov
dec
mov
js
test
adc
sbb
test
lods
testl
cwtl
rcrb
mov
popf
sub
fidivrs
cmpl
iret
lock
mov
test
add
pop
shlb
sub
cmp
jecxz
out
inc
dec
int3
lret
outsl
and
jl
into
dec
push
fisubrs
ja
jmp
aad
xchg
sti
fsubs
daa
lock
pusha
out
xchg
mov
test
pop
sbb
ficoml
xor
mulb
push
pop
test
lcall
js
cltd
outsb
outsb
icebp
fwait
cmp
pusha
xchg
daa
pop
loopne
ljmp
mov
push
in
jno
mov
fbstp
sub
ljmp
test
or
push
add
sahf
in
push
ljmp
mov
shr
mov
cltd
ljmp
mov
fwait
push
out
pop
jb
push
outsl
jae
data16
rcr
jecxz
xchg
mov
mov
test
cmp
repz
cwtl
dec
add
aaa
icebp
mov
ss
sub
sbb
xchg
inc
or
dec
popa
fistps
cmp
int3
fiaddl
xchg
lods
in
mov
in
inc
mov
aam
daa
pop
pop
iret
mov
mov
bound
jmp
cmp
lods
aaa
stc
and
adc
sti
and
lahf
push
add
mov
mov
or
or
cs
jge
scas
out
pop
fidivl
push
add
rorb
dec
lcall
dec
leave
xlat
das
outsb
jne
push
xchg
mov
je
pushf
and
in
jno
xor
cmp
sub
adc
inc
loopne
sub
inc
push
or
inc
mov
int
xor
movsb
cmpsb
push
test
frstor
sub
mov
mov
cmp
test
cmp
inc
xchg
or
sbbl
mov
mov
and
aam
rcr
rcrl
xchg
sub
push
push
sbb
pop
pop
sbb
test
add
outsb
or
jecxz
xchg
call
and
test
xchg
in
fisttpll
pop
xor
pusha
mov
popf
or
imul
dec
push
xor
clc
repz
out
mov
adc
mov
jns
adc
js
push
jb
xchg
or
push
pushf
dec
jp
dec
pop
jbe
push
clc
sbb
mov
and
dec
mov
sbb
jl
in
repz
decl
mov
fs
imul
or
mov
rcrb
insl
mov
xchg
test
push
outsl
jne
cmpsb
xlat
pop
mov
push
mov
pop
inc
sub
lea
jns
dec
cmpsb
cmp
adc
sub
repnz
inc
mov
in
out
insl
stos
dec
clc
jno
mov
int3
dec
stos
out
jbe
frstor
add
push
dec
sub
aam
movsb
lret
ss
jne
popf
in
sahf
lahf
sub
inc
leave
and
ja
jb
push
mov
sub
test
xchg
mov
jb
sti
cmp
mov
push
inc
bound
sub
add
xchg
pop
xlat
adc
enter
movsl
xor
stos
jns
cld
sbbl
call
sbb
ret
pop
push
leave
add
xor
mov
nop
cs
jne
aam
push
daa
push
jbe
movsl
popa
lcall
sub
xor
lret
sbb
xchg
add
cmp
scas
jge
popf
std
lcall
adc
push
push
lahf
bound
push
xchg
fdiv
fyl2xp1
adc
jmp
xchg
mov
xor
test
cmc
mov
xchg
repnz
push
arpl
and
dec
jne
scas
dec
fiadds
dec
dec
popa
clc
cmpsl
mov
outsb
pop
push
orb
lods
cwtl
add
fldenv
push
sbb
into
push
fstpt
inc
xchg
repnz
jae
inc
adc
roll
adc
cmpsl
mov
xor
add
cmp
jmp
pop
js
mov
out
mov
repz
and
repnz
lods
test
and
or
jl
out
inc
gs
cwtl
adc
xor
inc
mov
adc
fstpl
mov
je
jno
imul
in
mov
shlb
inc
jg
sub
inc
push
pop
popf
mov
shll
push
adc
dec
jmp
xor
and
dec
stc
xchg
sub
inc
mov
aad
sub
xchg
push
push
pop
adc
mov
inc
sub
push
out
push
and
ja
push
inc
push
imul
int3
testb
mov
arpl
inc
or
jno
pop
and
pop
shlb
cmpsl
std
loope
mov
test
sub
jae
dec
push
cltd
inc
bnd
jmp
pop
shl
cwtl
mov
leave
out
addl
iret
dec
mov
scas
and
inc
mov
es
enter
dec
add
adc
ja
testb
pop
mov
lcall
cld
daa
add
clc
push
call
test
imul
lret
stos
fimull
xor
sbb
push
and
fs
test
add
add
jmp
int
dec
imul
sarb
in
dec
adc
push
dec
push
daa
and
lods
xchg
mov
popf
pop
jnp
out
test
xor
lcall
mov
call
imulb
cmp
mov
push
push
cli
dec
jno
sbb
xchg
imul
popa
lahf
hlt
mov
pop
cmp
cmp
and
pop
inc
cwtl
lret
lods
mov
test
fcoms
aam
lret
fs
sub
and
xor
aam
mov
test
dec
int3
aaa
ja
mov
stos
das
cmpsb
in
std
fs
push
sti
and
mov
mov
orb
mov
pop
mov
vmovdqa
adc
and
in
lgs
js
in
or
or
scas
into
movl
sarl
setg
imulb
inc
push
ret
outsl
push
mov
mov
and
test
pop
pop
cmp
mov
insl
adcb
add
loop
movsl
mov
ret
add
es
sarl
mov
cmp
shll
dec
adc
repz
push
arpl
out
xchg
rep
sub
xchg
pop
imul
xchg
outsl
jmp
dec
rcrb
loop
jb
jl
lahf
subb
push
fmull
push
insl
out
pop
jp
sbbl
mov
lea
and
repnz
int
shll
dec
dec
icebp
mov
push
xchg
push
cli
sub
jbe
pop
jg
lret
out
push
cli
or
sti
ljmp
cwtl
scas
adc
jg
aad
cltd
inc
mov
and
lcall
ficoms
data16
pop
in
cld
repnz
sub
mov
and
jecxz
in
xlat
push
sbb
pop
and
rcl
daa
add
and
and
pushf
cmp
scas
push
jmp
push
mov
mov
out
cmpb
ret
test
stos
or
pop
dec
or
xchg
ret
xorb
dec
mov
adc
sti
inc
cmp
push
scas
sub
mov
test
insb
in
ds
orb
sbb
lret
push
inc
adc
mov
ret
orb
jecxz
pop
sahf
push
ret
push
jmp
cmc
xlat
xlat
mov
pop
aas
pop
hlt
xchg
xor
aad
ss
jmp
orb
xor
enter
lods
or
out
pop
in
push
jp
aam
out
dec
xchg
mov
sbb
cmpsl
fisubl
pop
cmp
or
mov
jmp
ljmp
iret
xchg
mov
or
pusha
outsb
dec
cli
pushw
scas
mull
cmp
je
cmp
mov
add
insb
pop
inc
dec
mov
fnstcw
mov
sub
xor
movsb
xchg
cmovg
lods
pusha
dec
lret
inc
sub
rorl
add
stos
scas
fdivp
add
in
scas
je
inc
and
pop
xchg
jo
popa
lahf
dec
and
pop
inc
loope
lods
cmp
repnz
in
jo
call
push
inc
enter
out
cmp
mov
and
in
push
jns
jp
std
mov
icebp
cmp
mov
stc
sbb
mov
push
sbb
in
inc
inc
sbb
std
sbb
mov
movsl
xor
andb
test
xchg
ja
stc
daa
pop
outsb
test
rcrb
out
inc
mov
mov
and
in
pop
jne
xor
insl
jecxz
decl
adc
aam
adc
mov
mov
leave
fwait
arpl
adc
mov
inc
out
andb
popa
xrelease
pop
mov
mov
enter
cmp
in
mov
adc
mov
xor
lods
push
inc
in
dec
fimull
call
fimull
ret
scas
ds
dec
in
push
in
mov
xchg
pop
in
pop
ret
or
dec
sub
outsb
das
lods
xor
out
in
lret
pop
in
lret
shrb
xor
and
pop
sbb
fldenv
xor
mov
ss
mov
adc
lds
push
lret
cmpsl
jl
sub
add
push
jg
scas
add
push
xchg
cmc
push
ret
dec
jle
rcrl
cmp
int3
dec
stc
imul
in
test
push
add
push
dec
sbb
xor
ficompl
clc
jne
les
add
inc
arpl
mov
pop
xor
sets
rolb
inc
sti
lds
sti
jp
sbb
mov
pop
test
loop
fnstsw
faddp
in
cltd
cmc
cltd
iret
sub
lahf
in
mov
popa
ja
mov
xchg
je
outsl
xor
xor
xor
mov
pop
and
mov
xchg
imul
xor
fwait
push
add
in
mov
xor
out
inc
push
pop
adc
dec
mov
fucomp
mov
and
xor
pop
dec
push
sub
lea
add
rep
enter
pop
sbb
outsl
subb
dec
sub
and
or
sub
mov
mov
enter
pop
jg
or
pop
fucomi
mov
add
scas
and
ss
testb
iret
pop
dec
mov
adc
aas
and
js
xlat
mov
mov
sub
jo
sub
out
cs
or
adc
fisubrs
movsl
and
add
in
cmp
iret
xchg
out
jl
outsl
data16
mov
jne
dec
pop
in
dec
sbb
adc
insl
out
inc
arpl
loope
pop
in
mov
add
sti
out
push
mov
jns
shl
push
pop
dec
push
and
xchg
ja
jne
stos
mov
ret
mov
xor
pop
jo
pop
shr
fidivrl
cli
nop
inc
pusha
movsl
out
mov
add
sub
add
iret
icebp
repnz
bound
arpl
adc
aad
jecxz
rorl
add
repnz
adc
inc
dec
or
adc
loop
xor
inc
mov
outsl
dec
sbb
cmp
lcall
xor
in
jp
cmpsb
xchg
repnz
mov
imul
fistps
dec
int
push
dec
xor
in
shrb
insl
push
sub
out
nop
sbb
sub
mov
dec
adc
cld
pop
sbb
sbb
xor
fdivrl
ja
ret
cmp
push
call
push
lods
jmp
cltd
inc
lret
aad
ljmp
lods
pop
scas
jecxz
rorb
push
push
sub
pusha
sub
or
sbb
mov
jmp
xor
add
mov
mov
xor
es
fldl
adc
les
je
or
fcompl
dec
pop
mov
xchg
loopne
jp
pop
xchg
jp
lret
inc
cmp
ficompl
loopne
insl
mov
fnstenv
lea
xchg
adc
je
sahf
xor
scas
jbe
lock
enter
xchg
into
or
shrb
push
dec
int3
cmp
in
pop
imul
sbb
sbb
and
loop
xchg
jae
roll
sub
jne
adc
xchg
xchg
mov
push
xor
fisubl
lret
jl
mov
ja
inc
stc
xchg
sub
or
je
mov
out
sub
sbbl
mov
bound
cwtl
test
push
ret
imul
sub
loope
fldenv
int3
sbb
jmp
jbe
imul
mov
ljmp
pop
add
cltd
dec
loopne
add
arpl
sub
mov
mov
loop
sub
mov
stc
mov
shrb
and
fwait
push
hlt
orl
jmp
push
sbb
jp
repz
push
mov
and
aam
and
inc
mov
je
cmpsl
test
jge
xor
mov
pop
dec
imul
cmpsl
add
push
cltd
lods
dec
and
pop
jle
outsb
in
scas
mov
movsl
and
or
dec
sar
dec
or
inc
das
or
xchg
out
sub
mov
sbb
cmp
push
repnz
xchg
mov
dec
aam
push
sbb
int3
xchg
mov
dec
cwtl
daa
out
roll
cmpsb
push
fsubr
dec
hlt
pop
adc
dec
jnp
das
push
rclb
stos
xchg
adc
mov
adc
jg
push
out
sub
incb
xchg
loop
sahf
in
shll
mov
mov
mov
jecxz
in
vcvtsd2ss
ficoms
jae
ret
test
in
pop
xor
std
push
jecxz
xchg
fcomps
out
xchg
cld
shlb
inc
arpl
adcl
dec
add
int
inc
and
out
andl
sbb
xchg
inc
adc
mov
push
mov
mov
out
push
cmpsb
test
lock
inc
fidivl
cmp
jge
or
mov
ror
dec
mov
dec
in
repz
jle
fsubrs
mov
pop
push
mov
mov
imul
mov
mov
push
mov
or
mov
mov
sbb
push
ljmp
pusha
mov
mov
loopne
jno
jge
sbb
mov
or
nop
mov
sub
out
test
int3
pushf
or
test
fbld
pop
pop
cmp
mov
mov
jecxz
in
xor
adc
loop
mov
fadds
jnp
fstl
scas
and
cli
repnz
outsl
nop
jno
scas
sub
sbb
movsl
xchg
fsubrl
xlat
cmp
xor
outsl
jbe
mov
lret
pusha
mov
scas
lret
stc
jns
popf
push
mov
sub
pop
add
add
test
das
mov
inc
stc
adc
out
push
cmp
adc
xor
mov
dec
aam
mov
pushf
or
mov
lret
jle
dec
test
adc
test
stc
cmp
xchg
cmp
sub
or
sub
jmp
inc
adc
mov
faddp
out
call
stos
leave
repz
cmp
in
push
sbb
das
jmp
loop
daa
xor
jle
push
mov
fwait
dec
sub
pop
mov
rcrb
add
js
add
repnz
test
pop
adc
call
loope
and
movsb
pop
and
lods
enter
xchg
iret
and
push
jl
jne
jge
fwait
sbb
repz
push
stos
inc
cmpsb
dec
mov
mov
sbb
fs
jge
js
jbe
push
mov
mov
xlat
out
mov
jno
jo
jmp
push
repnz
es
es
jle
jb
pusha
ret
out
add
cmp
mov
shll
push
dec
rcll
xor
mov
into
jb
adc
fwait
imul
std
fcompl
mov
out
jbe
popa
xchg
sti
jmp
add
dec
lds
mov
stc
icebp
jle
push
adcl
sbb
jae
mov
ja
adc
shl
mov
mov
pop
mov
int3
add
jmp
es
adc
mov
lock
rolb
pop
shll
repnz
mov
test
adc
dec
or
sbbl
mov
shl
in
cmpsb
fnstenv
dec
sbb
stc
jmp
mov
fdivrs
les
inc
movsb
out
mov
mul
adcl
daa
cmp
add
lcall
lret
sub
inc
mov
enter
adc
push
or
repz
scas
fwait
aam
mov
out
cli
jmp
sbb
shl
lods
std
xchg
push
insl
js
pushf
push
and
dec
add
jne
out
popa
inc
jbe
jns
ljmp
pop
xchg
cs
out
cwtl
shl
out
loop
and
sbb
fwait
in
mov
and
fs
sub
cmp
in
subl
into
or
test
fs
aas
xor
jo
lea
xor
es
mov
dec
loope
and
xchg
jmp
dec
ffree
popa
jge
repz
sbb
fisubs
out
mov
and
sub
dec
aas
cli
mov
add
nop
adc
adc
mov
inc
aas
fisubrl
xor
adc
push
add
test
sub
loop
jbe
fisttpll
clc
mov
mov
pop
call
aad
loope
sahf
cld
inc
mov
add
xor
wrmsr
loope
or
jecxz
cmp
dec
inc
mov
adc
cli
cwtl
xor
sub
mov
in
leave
xor
push
mov
dec
cmp
inc
inc
inc
out
daa
and
mov
int
dec
dec
fiadds
or
mov
add
cltd
pop
mov
movsl
sahf
addr16
insb
cmp
popl
fxch
mov
test
ret
das
data16
dec
mov
outsb
xchg
loopne
jp
fwait
shrl
jbe
lock
mov
sbb
push
sbb
lcall
push
cmpsl
addr16
or
dec
sbb
fists
daa
pop
add
add
stos
pop
dec
mov
out
jecxz
js
dec
mov
and
fcmovnbe
cs
cmp
pmaxsw
enter
or
scas
movsb
aas
test
xchg
adc
pop
dec
ret
stc
mov
sbb
pop
and
pop
loope
movsb
orl
fwait
jnp
subb
fwait
mov
dec
adc
popa
xchg
negl
inc
push
mov
cs
mov
fwait
dec
in
popf
dec
stos
stc
out
test
ret
pop
mov
scas
ret
sub
decb
adc
sub
cmpsl
mov
cltd
test
mov
leave
xor
and
inc
popa
push
adc
fcoml
and
pop
or
or
jecxz
ljmp
sub
subl
jl
add
and
jmp
out
push
sbb
inc
aas
mov
sub
fs
adc
fsqrt
pop
jmp
xchg
add
cmpsb
xor
sbb
add
es
sub
mov
mov
in
shll
loop
cwtl
pushf
mov
imul
or
roll
mull
mov
mov
and
cli
or
xchg
test
shrl
pop
lods
jp
xchg
insl
and
mov
sbb
ds
addr16
cmp
xor
lock
leave
cli
lcall
adc
inc
adc
sub
or
mov
pop
sub
mov
clc
mov
lea
movsb
xor
bound
mov
xchg
pop
sbb
or
repnz
movsl
stos
jecxz
lock
or
cwtl
pusha
mulb
push
outsb
lods
jno
or
shlb
jge
idivl
scas
jns
dec
jb
lods
jecxz
jae
out
xor
cmpb
jb
dec
and
repnz
inc
mov
int
sbb
push
nop
adc
sti
push
movsb
fsts
repnz
pop
cs
pop
add
inc
adc
jg
sar
out
add
cld
inc
xchg
xchg
enter
ljmp
sbb
add
pop
xor
or
or
test
dec
adc
sub
inc
icebp
jecxz
fdivrs
dec
add
push
mov
jae
bound
arpl
mov
es
cltd
mov
mov
mov
loope
adc
push
shll
jne
xchg
add
cmp
sbb
push
out
ds
popf
addl
imul
jmp
xchg
xchg
xchg
lock
popf
pusha
and
pop
and
in
xor
and
mov
or
push
and
imul
sbb
jg
sbb
sub
clc
push
aaa
cwtl
add
and
stos
push
adc
addb
dec
ret
aad
rep
in
and
add
inc
push
cmp
sub
mov
int3
and
xchg
xor
add
mov
sub
inc
push
pop
test
sbb
mov
in
out
lcall
mov
rorb
add
mov
ja
pop
sub
push
pusha
cs
inc
or
insl
mov
mov
xlat
cmp
pop
je
iret
fsubrl
mov
in
pop
addr16
push
cmc
repnz
test
or
lret
orb
loopne
mov
hlt
jae
pop
cwtl
push
cld
sarl
sbb
add
sub
loopne
addl
and
loope
push
add
in
std
out
mov
fwait
add
or
popf
mov
cwtl
sbbl
inc
test
stos
push
mov
push
mov
jmp
push
in
and
mov
fsubs
ror
mov
xchg
rorb
insb
pop
cmpsl
cmpsl
add
inc
loopne
call
aas
mov
jnp
jnp
call
cwtl
movsl
jp
push
bound
pop
push
mov
inc
scas
sbb
je
rolb
jno
data16
mov
lahf
sbb
mov
push
bnd
cli
and
inc
fists
cmp
push
jno
push
dec
jge
dec
popf
jnp
xor
xchg
aam
mov
mov
sub
out
ss
ret
addr16
adc
ret
mov
ret
and
stos
dec
pop
subl
cmp
xchg
sub
repz
mov
into
rorb
adc
repz
dec
pusha
push
in
in
pusha
outsl
mov
int
subl
cmp
dec
jmp
or
filds
mov
mov
decl
and
into
pop
fs
ret
lea
loopne
jp
xchg
mov
cmpsb
out
into
xchg
incl
cwtl
sahf
jbe
subl
adcb
mov
jmp
divl
adc
sub
add
adc
lcall
aad
jle
mov
dec
adc
xchg
xchg
jne
mov
ja
jl
xchg
lods
pop
xchg
movsl
add
xor
adc
cmp
repnz
cmp
hlt
insb
popf
std
aad
cmp
jmp
movsl
or
outsb
icebp
ret
jno
xchg
loop
adc
aam
push
out
int3
cmpb
fmull
xchg
lea
enter
mov
mov
mov
andb
push
imul
mov
push
jae
jns
outsl
dec
bound
pop
xor
pop
pop
or
hlt
test
das
je
cmova
and
lds
sti
into
push
push
sub
xchg
cmp
and
jo
ret
mov
hlt
sbb
jl
push
cmp
and
das
or
out
mov
jle
sub
int
fimuls
mov
je
fistps
jge
es
in
js
push
fidivrs
add
lods
mov
cmove
pushf
sub
lret
cmp
mov
stos
movsb
rcrl
add
cmpl
xchg
mov
inc
mov
icebp
and
es
jecxz
jo
sbb
fists
mov
mov
mov
add
gs
jns
orl
or
cmp
xchg
loopnew
clc
setg
jno
or
stc
icebp
lahf
sub
out
in
xchg
cmp
mov
out
push
jae
cmc
add
fs
sub
adc
lea
fs
mov
inc
jne
xchg
sbb
lds
aad
repz
data16
or
in
mov
dec
icebp
mov
popa
pop
mov
popf
sbb
daa
pop
sub
aad
push
and
shr
out
pusha
imul
xor
and
into
popa
repnz
jne
dec
xchg
shrb
js
jle
sbb
push
addb
cmp
xchg
add
push
xchg
dec
test
push
divl
rorl
cld
jmp
cmp
dec
xchg
dec
loop
aam
repnz
xchg
icebp
pop
out
enter
xlat
stos
or
jecxz
add
int3
lret
cs
fstp
mov
mov
fs
cmp
in
jbe
xlat
xchg
scas
dec
in
aad
cmp
insb
testb
adc
aas
jge
jno
pusha
xor
ds
add
and
adc
sub
lcall
ret
sub
mov
imul
sti
add
jae
sbb
jne
pop
out
mov
and
or
xchg
push
rcrb
push
rcrl
jb
mov
ljmp
sub
push
mov
push
je
dec
inc
out
movsb
fsubrl
inc
ret
push
jbe
sbb
jle
js
jne
add
dec
cmp
push
and
inc
sbbb
adc
and
outsl
jecxz
rorb
jmp
cli
movsl
sbb
or
sbb
push
dec
lods
sahf
ret
rcl
outsl
nop
mov
mov
xchg
std
xchg
fmul
dec
test
dec
inc
add
jae
iret
add
and
test
test
inc
cmp
xor
mov
cmp
xchg
shr
jmp
stc
push
jo
inc
repz
stos
test
andb
xchg
clc
cmp
loop
sub
scas
xorl
jg
cmp
mov
cmp
out
xor
or
jmp
insb
rcll
sbb
jb
jbe
cmp
in
loope
pop
mov
fsubrp
cmp
sub
and
push
pop
and
jns
mov
mov
mov
lods
xchg
test
xlat
push
inc
sbb
mov
inc
adc
lahf
push
inc
adc
mov
or
adc
adc
sbb
add
cs
call
xor
ds
push
adc
sbb
cs
push
mov
cld
pop
data16
loopne
testl
pop
or
clc
jecxz
arpl
push
or
rorb
clc
test
mov
pop
mov
sub
outsl
push
or
pop
and
push
xchg
cmpsl
or
adc
lods
lahf
into
push
sub
xor
int
mov
dec
sub
and
movsb
cmp
cmc
or
and
push
cld
out
adc
loope
cltd
jp
aad
jbe
aas
sbb
fistps
jbe
jbe
or
jno
and
and
lods
cs
out
out
jne
xchg
insl
adc
cmp
mov
dec
fists
mov
jbe
shlb
cmp
test
push
rorl
aas
xor
mov
or
test
mov
mov
pop
into
in
cmpl
hlt
aaa
and
icebp
imul
xchg
out
mov
jmp
adc
push
sub
adc
push
test
outsb
mov
mov
xchg
outsb
scas
fmuls
andnps
sub
and
cld
iret
jg
xchg
pop
bound
adc
sub
dec
cmp
popa
in
gs
dec
fcoml
mov
add
je
adc
mov
insb
lock
xacquire
lods
popf
fimull
addr16
or
fisttps
adc
sub
dec
sbb
adc
repnz
mov
mov
movsb
xchg
in
rcrb
and
xorb
pop
jle
int3
xchg
cmp
rorb
sbb
jecxz
or
inc
jns
sub
sub
stc
jp
faddl
scas
outsl
jmp
push
or
scas
not
filds
dec
or
cmpsb
icebp
popa
push
je
sub
cmp
cmpsb
mov
cmpl
or
cmc
std
jae
or
mov
dec
notl
leave
and
sahf
out
jge
jmp
jno
cmp
test
lret
sub
movsb
mov
repz
cmp
mov
push
call
es
xchg
jae
rorl
and
popf
fldt
push
aas
into
xor
clc
popa
xlat
inc
mov
inc
incl
add
add
adcl
pop
push
add
or
movsb
mov
or
out
push
xor
sbb
fucomi
push
aaa
sub
mov
jae
cmp
cs
xlat
push
push
scas
inc
cmp
leave
add
xchg
push
repnz
mov
into
daa
mov
test
loope
addl
xchg
pop
sar
cmp
xchg
cli
fs
inc
push
or
inc
stc
fwait
pop
fisubl
push
insl
cwtl
out
jg
pop
jbe
push
adc
add
mov
out
das
das
sub
push
lods
sub
ja
orps
test
mov
clc
sbb
test
imul
add
arpl
mov
stc
fdivl
or
flds
xchg
imul
stos
pop
stos
jb
mov
rdtsc
ficompl
pop
or
leave
mov
std
sahf
pop
icebp
sbb
in
add
mov
jecxz
adc
or
imul
xchg
fistpll
sbb
jp
inc
xor
xchg
outsb
mov
into
out
cmp
jmp
fwait
int3
xchg
or
out
stos
xchg
or
daa
add
fs
adc
ds
dec
add
loop
push
mov
stos
add
push
and
jl
out
push
fildll
dec
xor
mov
je
pop
int3
and
shrl
rol
loopne
fnsave
sub
stos
popa
rorl
jo
inc
mov
mov
jge
cmp
ret
lods
test
pop
pop
pop
imul
mov
sub
out
xor
aaa
aam
mov
clc
je
fidivrl
xchg
jne
pushf
jbe
pop
mov
ja
pop
xlat
insl
adc
imul
lcall
add
inc
mov
jg
fdivs
cmp
xlat
stos
or
xchg
cli
les
dec
cs
mov
clc
or
sarb
xchg
push
jg
push
in
mov
test
mov
sbb
jge
cmpsl
bound
adc
add
adc
sub
jne
dec
cltd
subl
lcall
inc
mov
jl
test
stos
cmc
mov
test
inc
xor
ljmp
jecxz
mov
push
out
add
dec
jno
loop
jmp
mov
into
add
stos
jecxz
push
mov
test
xor
add
push
stos
in
mov
dec
inc
enter
popf
stos
mov
fidivrl
sub
lds
scas
test
mov
in
mov
adc
xor
push
mov
cltd
add
or
xor
push
idivl
popf
xlat
jne
adc
jne
push
cmp
orl
mov
outsb
pop
lahf
aas
mov
rcll
ljmp
cli
repz
mov
je
push
xchg
push
leave
mov
mov
pop
clc
push
sub
in
cmp
mov
ffreep
cmp
sti
cmpsb
cmp
mov
outsb
ret
dec
xchg
aam
sub
adc
and
mov
bound
mov
je
sbb
test
push
into
xchg
mov
es
jge
imul
add
nop
mov
adc
loope
das
lret
jmp
test
stos
cmp
test
jmp
add
pop
mov
sbb
test
js
or
aas
add
and
xchg
testb
cli
movsb
sub
cmpsl
int
mov
mov
fmuls
es
jp
movsl
xor
mov
data16
in
add
scas
or
sbb
inc
pop
pushf
jmp
movsl
pop
xor
fimuls
push
push
mov
lods
push
stos
jmp
push
xor
inc
sub
jbe
repz
push
scas
nop
into
dec
ds
addb
jb
cmc
imul
push
inc
cmp
dec
jb
mul
iret
adc
and
orl
mov
stc
adc
pop
sahf
cmp
inc
or
dec
mov
pop
call
jg
orl
inc
mov
sub
cli
movsb
mov
les
lods
cmp
mov
sbb
dec
cmpsb
es
addr16
pop
xchg
cmc
or
dec
mov
imul
and
fwait
mov
daa
stos
outsb
pop
inc
mov
pop
mov
or
das
mov
fsubrs
ret
mov
xchg
sub
popa
movd
repz
mov
dec
pop
xchg
pop
je
lcall
out
pop
xor
dec
jo
test
jmp
into
lcall
xchg
or
jmp
les
jle
jo
popa
lahf
mov
std
addr16
xor
mov
sbb
enter
add
inc
jb
mov
mov
push
fcmovnb
inc
inc
or
dec
and
out
shl
test
pop
mov
and
jge
mov
movsb
pop
pop
pop
xor
and
adc
and
cmp
sub
mov
xchg
or
addr16
sub
mov
iret
cmpsb
stos
sub
clc
cs
sub
fldcw
add
shl
sahf
bound
adcl
shlb
enter
ss
mov
push
dec
add
leave
std
fsub
xchg
or
clc
pushf
jge
push
es
push
push
out
lret
je
add
fildl
push
cmp
popf
aaa
or
push
mov
nop
popa
into
push
inc
mov
aas
mov
sub
insl
push
out
cld
mov
inc
push
stos
add
mov
pop
jl
popf
xchg
mov
js
jno
das
clc
mov
fldenv
fs
lods
das
mov
or
xchg
stos
jmp
scas
jle
push
sbb
mov
xor
in
push
int
pop
sti
ds
cmc
xlat
callw
movsb
fdivs
xlat
into
and
inc
stos
mov
cltd
push
pop
cmp
dec
inc
leave
adc
imul
jae
add
adc
frstpm(287
add
scas
cmc
shrb
mov
lods
jns
sub
mov
pop
lcall
dec
imul
test
cmp
xchg
mov
stc
rorb
xchg
or
mov
mov
sub
mov
xor
pop
pop
popa
inc
jp
xchg
outsl
mov
xchg
adc
imul
mov
stos
test
push
lods
dec
sbb
int
outsl
add
mov
imulb
jno
sbb
sub
ljmp
and
push
bound
out
cmp
push
lock
fcomps
mov
imul
sarb
lods
cltd
mov
stos
xor
cmp
mov
outsl
sbb
pop
scas
adc
in
add
in
rorb
xchg
ret
iret
push
stos
outsl
repz
sar
adc
imul
mov
aaa
mov
xchg
loopne
sbb
loop
pop
pop
loopne
adc
or
mov
insl
imulb
aaa
push
dec
js
js
sub
fnsave
xchg
or
loop
xchg
push
jne
inc
jge
xchg
pop
add
push
and
sub
mov
insb
dec
out
xor
jle
incb
movsl
push
push
sub
mov
decb
mov
add
bound
loopne
ror
popa
push
roll
mov
sub
add
cmpsb
or
or
dec
push
pop
data16
mov
divb
outsb
filds
push
out
imul
scas
ds
sarb
mov
pushf
imul
cli
mov
sbb
jg
dec
arpl
pop
enter
ss
leave
mov
and
ljmp
xor
movsb
call
call
or
jg
lea
mov
cmp
xchg
dec
loopne
shrl
jne
negl
mov
pop
sbb
js
pmaxsw
xor
lret
shll
imul
divb
xor
mov
pop
in
or
in
cwtl
lret
addr16
scas
fs
jne
ficoms
ja
rorl
pop
mov
inc
mov
and
movsb
and
cmp
mov
in
outsb
cmp
mov
das
pop
lcall
imul
jae,pt
push
xchg
push
mov
into
sub
aaa
stos
dec
sub
lcall
imul
mov
shr
jo
inc
and
and
jecxz
insl
jnp
cmpsl
xadd
mov
mov
inc
pop
paddusw
jbe
push
in
cmc
ds
loop
dec
adc
fs
cmpsl
push
cmp
xor
out
ss
inc
and
add
inc
fnstcw
nop
jge
mov
shl
idiv
call
pushw
in
add
mov
stos
out
add
scas
jl
arpl
add
mov
push
cli
sub
sub
dec
mov
fimuls
repz
sub
repz
ret
stos
ret
icebp
adc
sti
cmp
cmp
pusha
add
mov
jb
loopne
jmp
and
cmpsl
xorb
xchg
je
es
sbb
ja
js
pushf
cmpsl
dec
cs
popa
aas
or
xchg
cld
cwtl
sub
lock
in
out
sub
jae
jle
imul
stos
xor
cli
repnz
mov
adc
fcomp
mov
cmc
je
dec
lahf
pushf
loopne
cwtl
gs
mov
inc
rcrb
and
jl
jns
cmpsl
and
xor
and
scas
jns
inc
push
jl
jge
data16
mov
dec
sbb
out
js
inc
xchg
insb
imul
dec
add
xor
lahf
dec
rep
cld
push
fs
movsl
dec
int3
dec
bound
pop
ret
add
inc
lret
bound
xor
loope
jg
dec
xchg
inc
xchg
mov
sbb
jecxz
sti
pushf
out
lock
inc
sti
incl
pop
int
gs
popf
push
sub
jbe
lods
pushf
xchg
and
nop
stos
xchg
test
lea
cld
push
loopne
les
decl
jo
in
jmp
pop
xchg
and
push
mov
inc
cld
dec
mov
sbb
sbb
int3
gs
fsub
inc
repnz
cmp
mov
inc
jmp
sbb
xor
pop
imul
jl
dec
mov
xor
mov
sub
shrl
mov
sub
sbb
mov
sahf
dec
stc
popf
pop
shll
inc
and
hlt
sahf
ficoms
addr16
and
test
push
insb
mov
enter
daa
loop
add
and
adc
lret
lret
leave
sub
dec
stos
mov
fabs
out
xor
jle
push
add
xchg
or
adc
push
jb
xchg
cli
xor
popf
push
sarl
xchg
push
negl
sub
sub
mov
push
mov
ja
sti
cmp
scas
fisttpl
sahf
sbb
out
or
mov
leave
in
shll
orl
mov
out
cmp
lret
icebp
popf
or
sbb
xchg
dec
and
jp
repnz
and
xor
and
jae
jns
fstps
pop
mov
mov
mov
movsl
adc
lods
std
in
out
mov
push
sbb
push
movsb
mov
adc
in
fisttpll
dec
cmpl
cs
sbb
mov
xor
iret
fsubrl
cwtl
mov
js
popf
pop
pop
leave
ja
mov
push
loop
add
adc
and
pop
inc
mov
cmp
mov
int
inc
scas
inc
push
dec
cltd
inc
push
adc
xchg
mov
cli
faddl
adc
das
lods
lds
adc
mov
and
mov
cmp
pushf
stos
or
mov
into
sbb
dec
xchg
sub
loop
pop
fiadds
out
or
fwait
ljmp
mov
addb
mov
aaa
loopne
jg
fildll
aam
mov
xchg
pop
es
jbe
push
dec
inc
push
mov
insl
nop
mov
xchg
scas
cmp
push
lcall
and
test
pusha
mov
ss
aaa
lret
loopne
dec
in
les
mov
mov
insb
stos
aam
mov
xchg
inc
outsb
call
add
adc
cmp
loope
jp
inc
fistl
and
push
ret
ja
icebp
hlt
xor
lea
orb
xchg
and
loope
loopne
cmpsb
mov
and
push
jl
fisttpll
dec
loope
rcl
xchg
xchg
sarb
push
in
outsb
or
and
aam
js
add
insl
pop
rcr
es
in
xor
mov
scas
in
push
or
add
mov
xchg
jmp
sarb
adc
and
lret
mov
xchg
cs
mov
sub
popa
xchg
test
lods
push
xor
test
jmp
arpl
cmp
cmp
sbb
sub
push
popa
xchg
ret
dec
xor
xor
jnp
int3
adc
mov
shrb
aas
or
inc
xchg
int3
test
mov
les
lea
inc
xchg
mov
addr16
negb
pop
mov
jmp
lret
dec
addr16
jl
and
sbb
popa
repz
jae
repnz
push
adc
into
in
mov
adc
or
adc
test
sub
xor
cld
imul
call
mov
movsw
lahf
sbb
mov
adc
cli
aad
popf
sub
negl
xor
inc
push
or
addr16
frstor
push
orb
sub
push
push
pop
divl
xchg
add
sbb
arpl
fisubs
pop
notb
lahf
pop
in
cli
fdivs
fisubrl
sbb
ds
inc
mov
call
ja
movsl
incl
fidivs
jbe
cmpsb
scas
mov
out
add
inc
jmp
xchg
jmp
iret
out
mov
out
add
mov
addr16
and
arpl
call
clc
xchg
pop
xchg
rorl
cmova
or
ljmp
cmpsb
adc
pop
out
dec
lahf
and
repnz
test
xor
add
inc
pop
enter
in
cmp
push
or
pusha
mov
xchg
cmpsl
addr16
shlb
cltd
jae
andb
mov
push
xchg
add
loop
xchg
je
cli
adc
push
inc
pop
shll
lods
ret
mov
mov
in
into
jo
adc
xor
push
jp
cmp
pop
inc
jecxz
pop
dec
std
adc
insl
mov
xor
dec
jnp
inc
aam
dec
imul
jbe
push
scas
push
fsts
inc
adc
sub
sbb
mov
lahf
popa
daa
mov
in
add
mov
xlat
fwait
mov
inc
xor
mov
call
cs
dec
shlb
mov
adcb
xlat
xlat
add
xchg
cmc
or
lds
pushf
dec
pop
xchg
sbb
mov
vpunpckhwd
rorb
jae
das
push
jae
mov
xchg
add
jmp
xor
loop
ljmp
mov
movsl
mov
xchg
loopne
lcall
lock
xor
dec
addl
or
movsb
mov
pop
cli
jo
popf
sarl
leave
xor
cmpb
dec
push
push
adc
call
xchg
hlt
jns
gs
or
mov
or
cmc
xchg
push
bound
inc
leave
gs
xor
scas
jo
js
xchg
cmpsb
outsb
inc
sti
mov
adc
rcl
or
adc
mov
push
xchg
enter
xor
repnz
push
pop
popa
mov
mov
xor
std
es
xchg
xchg
add
dec
xchg
ret
rcll
push
ror
mov
movsl
mov
pop
inc
cld
push
shrl
or
es
inc
subb
mov
outsb
leave
pushf
lods
fstps
pop
icebp
cs
jmp
js
cli
lds
xchg
pop
fld
cmp
stos
add
dec
cmp
pop
insb
ja
xor
push
and
scas
mov
int
ficomps
cmpsl
pop
daa
cmp
fsubr
pop
bound
mov
or
xchg
xor
xorb
mov
push
jle
pop
repnz
add
popf
mov
rol
nop
xor
add
pop
xor
aad
xchg
push
xlat
mov
imul
dec
das
add
fwait
sub
pop
sbb
popl
das
test
jl
stos
out
ficoml
dec
lods
sub
nop
jle
aas
bound
popf
pusha
cmp
cwtl
mov
xlat
mov
lcall
inc
mov
push
aas
push
pop
mov
fwait
or
sbb
imul
and
and
in
xlat
lock
outsl
sarl
sub
repz
add
mov
sbb
outsl
mov
xchg
sub
sub
insb
inc
cmp
inc
jecxz
mov
mov
in
sarl
jbe
dec
pushf
push
sbb
fldt
sub
not
sub
imul
sub
sub
xlat
bound
jecxz
out
inc
pop
call
xor
push
lods
or
jge
xor
add
push
stc
pop
jp
jo
inc
mov
push
mov
jo
and
dec
adc
push
dec
fildl
mov
std
xchg
aad
pop
clc
dec
cli
push
dec
or
xor
sbbl
sub
jb
ja
aad
fdivp
xor
push
data16
jnp
and
mov
push
mov
adc
add
iret
test
insb
and
xor
push
push
roll
mov
stc
ficomps
loope
stos
mov
xchg
mov
and
pop
sub
scas
neg
mov
into
lds
inc
inc
dec
nop
cmp
dec
js
daa
sub
test
xor
out
inc
rolb
sub
outsl
add
in
adc
loope
lcall
jnp
dec
inc
mov
enter
pop
inc
clc
out
jbe
inc
jmp
fistps
or
inc
scas
insb
ja
lock
pop
mov
std
push
leave
xchg
mov
das
lock
ja
pop
testb
lods
add
pop
mov
std
xor
lret
mov
mov
out
and
call
adc
outsl
sti
dec
pop
aaa
jle
lock
and
std
enter
clc
mov
addb
ret
jo
out
dec
inc
pop
repnz
popf
data16
inc
cmc
adc
push
jge
sbb
orl
mov
pop
js
mov
cmpsb
loopne
popf
and
aaa
sub
sbb
ficomps
dec
or
jg
imul
mov
mov
dec
sub
aad
movsl
in
iret
dec
dec
shrl
sbb
push
rorl
pop
inc
movsb
insl
outsl
loopne
sarl
and
adc
mov
out
ret
aam
add
pop
xchg
sub
fldl2t
dec
outsl
mov
lods
add
out
jae
in
and
cmp
cmpsb
ja
scas
inc
dec
mov
call
daa
dec
iret
test
inc
mov
mov
popf
insb
xchg
je
mov
mov
xchg
lcall
dec
mov
add
jmp
sahf
roll
mov
les
in
loopne
divps
ror
fnstsw
dec
lret
push
adc
mov
adc
adc
mov
dec
scas
daa
mov
mov
ret
sahf
xor
mov
and
in
imul
adc
mov
inc
adc
and
xchg
fmull
pop
add
mov
mov
scas
mov
adc
jbe
mov
rol
imul
jecxz
push
xchg
insl
aas
cld
mov
mov
jns
mov
ja
lods
enter
add
fistl
mov
or
ficompl
xchg
mov
push
cmp
popf
push
add
or
xchg
push
stc
xor
cld
xor
call
jno
mov
push
out
dec
neg
lock
test
nop
loop
subl
popf
pop
mov
sub
sbb
pop
sub
fcoml
out
push
sub
fldt
in
cmp
cmp
mov
push
scas
sahf
inc
ficomps
pusha
mov
frstor
sub
inc
addl
pop
and
push
xchg
inc
push
dec
pop
pop
mov
aas
cmp
and
lods
xlat
les
mov
jnp
jbe
fiadds
jle
mov
test
sarb
jg
imul
xchg
pop
mov
punpckhdq
cmp
add
and
sbb
pop
popf
mov
aad
ret
aad
sub
icebp
push
clc
xchg
shll
rcrb
or
xlat
rsm
jb
bound
push
dec
or
js
cld
sub
dec
push
xchg
loopne
add
movsl
addr16
jmp
out
cmp
pop
pushf
sub
mov
mov
fldcw
nop
lea
aam
jo
cmp
pop
xchg
push
lea
xor
xchg
mov
lock
adc
dec
adc
xchg
movsl
xlat
pop
in
movaps
xorl
daa
lret
add
in
popa
or
shrl
xchg
jne
dec
cli
repz
stos
fidivrs
test
decl
loop
add
inc
push
rcrb
sahf
cmpsb
pushl
xchg
aad
mov
and
inc
rcll
es
lods
push
xchg
imul
sti
std
mov
aad
pop
cmp
aam
mov
cli
pop
adc
rorl
cmp
call
xor
pop
pop
inc
fs
xor
pushf
in
adc
cmp
lods
aam
repnz
mov
mov
mov
lock
pop
add
xchg
lahf
sbb
js
int3
jbe
leave
movsl
fcompl
xor
fwait
pop
inc
and
js
mov
test
ja
sahf
loopne
lds
lea
aaa
inc
mov
dec
repz
hlt
int3
clc
cwtl
stos
add
xchg
or
es
ja
cld
push
xchg
pop
loopne
cmp
xchg
jp
xchg
inc
push
push
jae
movsb
mov
movsb
xor
jo
call
or
cmp
push
enter
add
fs
imul
out
jmp
pop
cmp
add
cld
add
jo
ja
repz
sub
or
das
xchg
pusha
add
push
xchg
xchg
push
xor
inc
mov
push
mov
test
cli
mov
pop
dec
stos
and
cli
cmp
jae
add
outsb
jns
cmp
inc
lds
lret
test
push
mov
jnp
lcall
shlb
cmp
sub
mov
cmpsl
adc
cld
adc
shl
pop
push
sahf
negl
push
pusha
rclb
aaa
in
stos
repnz
mov
movsb
and
imul
cwtl
and
aam
repz
cmp
sub
push
jmp
jge
popf
lds
es
and
mov
add
loope
add
inc
cmp
in
mov
inc
sub
inc
mov
mov
jnp
fimull
pushl
inc
pop
rcll
int3
lds
lds
mov
push
xchg
fnsave
mov
das
push
pop
mov
xor
pop
pop
mov
push
inc
std
and
out
pop
mov
inc
add
and
push
xchg
xlat
jmp
xor
and
push
dec
fdivs
push
jo
dec
loopne
shll
add
xor
leave
out
lcall
subl
rol
push
mov
sbb
bound
lcall
loope
addr16
roll
call
std
mov
rcr
les
scas
rolb
rcr
push
repnz
aaa
jge
pop
mov
sub
ss
jp
adc
jl
cltd
inc
cmp
out
sub
dec
or
outsb
or
loope
scas
xor
pop
arpl
idiv
enter
inc
mov
jmp
enter
push
pop
or
xor
stc
xchg
sbb
addr16
fldcw
push
test
shll
push
vmovaps
inc
test
pop
inc
dec
lret
jns
inc
xchg
mov
jb
push
lahf
or
ljmp
mov
cmp
mov
cmp
adc
and
or
es
jo
jmp
mov
mov
push
and
sahf
out
hlt
movl
popa
mov
call
icebp
scas
sub
leave
or
imul
sahf
mov
mov
sub
jl
xor
int3
push
push
push
mov
out
push
mov
iret
fbld
pop
mov
data16
cmpl
add
ds
out
ffreep
and
lret
mov
jecxz
add
pop
dec
mov
sub
cmp
dec
sub
inc
dec
sarl
xor
push
mov
out
ret
sub
adc
sbb
mov
out
mov
cs
nop
mov
dec
push
lock
add
xlat
pop
or
movsb
pop
dec
mov
jl
bts
dec
jne
mov
iret
push
sub
jne
or
or
popa
icebp
and
sub
xchg
std
ret
fwait
jge
xor
cltd
lcall
pusha
xorb
pushl
jle
insb
cmpl
or
inc
sbb
push
sub
sahf
mov
mov
jl
jb
fcmovbe
fwait
xor
sbb
dec
ret
jne
pusha
lret
or
xchg
repnz
jp
mov
aad
and
dec
mov
inc
add
xlat
test
into
cmp
inc
sbb
mov
add
mov
push
push
jae
sbb
mov
dec
in
addr16
stc
das
pop
mov
adc
sbb
xchg
mov
pop
shrl
xchg
sbb
fidivrs
pop
mov
jo
cmp
stc
adc
push
sbbb
bound
inc
add
cmp
xor
xor
imul
lock
ret
pusha
cmp
cli
jp
lret
call
pop
mov
mov
cmp
sahf
jb
fisttps
sbb
xlat
dec
xor
aam
sahf
mov
sahf
inc
sbb
inc
and
fneni(8087
mov
sub
minps
inc
xchg
outsl
mov
xor
inc
push
arpl
ja
jle
or
and
and
roll
pop
jl
imul
in
sbb
popl
xor
mov
pop
out
jmp
lds
sub
stos
xchg
enter
jbe
mov
cld
movsb
in
lret
leave
icebp
jp
mov
hlt
inc
mov
addr16
xchg
and
xchg
repz
sub
lock
mov
hlt
std
pop
mov
cmp
jae
cmp
add
mov
repz
mov
out
in
sub
stc
roll
pop
adc
xor
loope
push
or
ljmp
mov
stc
sarl
pop
mov
leave
femms
faddp
stos
adc
sub
push
and
mov
push
dec
lcall
xor
sahf
clc
sbb
jmp
mov
shlb
pop
outsb
pop
or
push
dec
or
lock
xchg
sub
outsl
fst
lret
mov
mov
sub
push
and
mov
shll
jg
test
rcll
or
outsl
dec
adc
cmp
sub
sub
and
jp
pop
ljmp
mov
rcl
sarb
jne
mov
test
les
sbb
call
les
xor
cs
pusha
jp
iret
sub
push
sub
in
stos
push
sbbb
gs
push
adcb
gs
mov
mov
ja
jmp
sbb
es
jg
hlt
jae
pop
sub
or
out
in
mov
pop
dec
ret
mov
lfs
les
int3
mov
cmc
lret
cmp
mov
xchg
fdivs
shrl
mov
int
cmpsb
inc
shr
fs
pop
push
iret
mov
push
push
xchg
test
shl
and
shr
pushf
arpl
insl
fimuls
mov
mov
xor
mov
xorb
mov
subl
scas
xchg
sbb
jmp
jmp
mov
push
mov
xor
test
std
xchg
loop
push
inc
or
nop
adc
fwait
push
add
sbb
pop
xchg
cmc
pusha
ss
xor
adc
cmpsl
cmp
insb
dec
sub
in
test
in
leave
aad
and
out
repz
cmp
mov
outsb
cmp
mov
pop
adc
push
lock
leave
or
add
push
adc
fucomip
gs
sar
mov
cmp
jb
cwtl
lods
insb
pop
in
or
or
insb
pop
and
enter
sub
pop
or
pusha
cmpb
dec
xlat
insb
and
sub
mov
nop
sub
das
rolb
sbb
in
je
push
jno
pop
mov
lret
mov
and
push
pop
ljmp
sub
mov
dec
aas
lds
push
jno
fdivs
jp
xchg
xchg
mov
jne
imul
inc
ja
cvtpi2ps
xchg
xchg
test
rclb
les
ret
scas
jg
sub
fbstp
out
rorb
or
mov
mov
pop
ss
lcall
mov
mov
cld
pop
jb
adc
xor
add
decb
mov
pop
mov
jo
insb
push
insl
call
into
dec
push
push
mov
clc
pop
inc
push
jg
xor
roll
stos
add
pop
mov
test
lock
xor
and
mov
inc
repnz
inc
mov
lds
shll
sti
xor
sbb
dec
xchg
adc
or
xor
xor
mov
xchg
rclb
mov
sub
jmp
cmp
ret
popa
scas
mov
insb
arpl
sbb
hlt
fidivs
dec
xor
fists
pop
push
stc
push
push
dec
xlat
imul
cmp
xchg
pop
rcll
cltd
ja
cwtl
add
sub
sbb
sub
fs
push
sahf
push
add
imull
popa
aam
pop
lret
pop
jb
aaa
ss
jno
sbb
lods
jb
add
sbb
cwtl
sbb
jne
mov
mov
leave
aaa
push
xchg
dec
test
sbb
mov
jae
mov
pop
fcompp
cmp
or
ucomiss
xchg
pop
push
fidivl
mov
insl
dec
inc
sbb
in
loopne
out
call
inc
mov
mov
out
and
outsb
sbb
int
xor
mov
cwtl
pop
mov
testl
test
mov
test
mov
push
int
pushf
jb
fsubl
jmp
or
push
ss
jne
mov
stc
test
fimull
xor
pop
lcall
push
xchg
push
mov
mov
insb
or
cmpb
or
sar
in
mov
jnp
fiaddl
xor
movsl
mov
cli
cs
sti
loop
or
mov
icebp
mov
xlat
push
jo
mov
je
stc
data16
push
xorl
out
not
and
mov
push
push
sub
sub
ret
adc
in
inc
xchg
xor
xor
dec
ss
xor
jno
into
xchg
jle
push
mov
add
lock
outsl
jmp
mov
mov
push
mov
mov
cmp
jae
adc
mov
mov
lods
mov
add
movsl
jle
add
mov
shll
or
xchg
sahf
cmp
dec
lea
out
or
xchg
stos
mov
mov
ffree
outsb
jl
out
and
out
bnd
dec
cmp
xchg
jb
into
aad
in
fsubl
les
inc
dec
inc
int
or
hlt
adc
jbe
inc
mov
cmpsl
movsl
push
ljmp
dec
mov
out
dec
jns
icebp
inc
bnd
or
loop
test
icebp
mov
enter
in
stos
pop
xchg
pop
adc
cli
push
dec
jmp
add
testb
jnp
mov
and
jbe
push
dec
lahf
int3
inc
jecxz
push
and
xchg
xor
clc
mov
test
sub
push
out
lods
jg
hlt
cs
lcall
mov
xchg
lds
push
imul
pop
pusha
nop
push
aam
lcall
pop
and
pop
sub
push
add
stos
jae
mov
insl
imul
cmp
xor
sarb
xchg
add
sbb
xchg
bound
sub
adc
push
jno
frstor
dec
jg
or
cwtl
or
rclb
jmp
mov
inc
or
aaa
imul
repz
cli
test
push
jp
pop
rorb
adc
scas
fwait
push
arpl
sbbl
pop
out
adc
fs
or
sub
mov
mov
xchg
enter
xchg
mov
dec
pop
inc
or
or
andl
push
daa
popa
jmp
mov
int3
mov
jo
pop
mov
repnz
orb
sbb
scas
aas
data16
pop
test
sbb
push
pusha
xchg
xchg
jae
subl
mov
pop
sub
sub
mov
jp
fdivr
ja
sub
and
sbb
mov
add
inc
xor
negl
fists
loop
xchg
jl
sbb
fsubs
bound
insl
pop
xchg
hlt
roll
loopne
pop
push
jmp
cli
sub
pop
outsl
rolb
test
xchg
in
sbb
aam
enter
inc
add
fcmove
sarl
inc
ds
lret
xchg
loopne
hlt
adc
jno
or
mov
and
arpl
sub
mov
mov
push
cltd
jmp
push
stc
add
pop
push
or
sbb
sub
push
popf
mov
divb
mov
ljmp
jbe
xor
mov
xor
mov
dec
addb
jmp
and
loopne
mov
xor
pop
xor
adc
loopne
sbb
sub
rcrl
sbb
push
mov
xor
jmp
bound
xchg
cmpl
xor
mov
jns
popf
cwtl
lea
jl
push
push
sbb
sbb
xchg
mov
mov
aaa
or
leave
adc
je
adc
jmp
shll
pop
out
test
loopne
xor
lahf
jg
gs
mov
adc
xlat
scas
jmp
push
fcmovnbe
pop
xchg
xchg
into
mov
lock
mov
test
lahf
jp
sti
stos
dec
sbb
pushf
inc
pop
ss
or
mov
inc
daa
adc
sahf
loope
mov
jnp
out
scas
sbb
outsl
xchg
xchg
and
test
adc
xor
and
jp
xchg
xchg
mov
dec
pop
pop
push
mov
mov
outsl
mov
lea
push
xor
or
leave
pop
cwtl
xchg
and
fsubrl
js
add
insb
lahf
sahf
pushf
dec
faddl
mov
dec
xlat
adc
add
mov
jne
sub
or
mov
movsb
insb
outsl
enter
test
rol
pop
inc
xchg
stc
mov
mov
inc
lds
lea
out
popf
repnz
or
in
fsubs
arpl
or
push
outsb
sub
fwait
insl
jmp
lcall
inc
cmp
imul
out
xchg
adc
pushf
je
sbb
dec
ret
dec
sbb
rorl
mov
dec
jle
sbb
add
in
and
push
in
jns
in
pop
inc
fsts
std
sti
mov
ret
movsl
mov
pop
icebp
sbb
mov
rol
in
xchg
fwait
int3
mov
sbb
fiaddl
imul
mov
mov
push
xchg
je
dec
popa
dec
jg
std
jns
pop
daa
cmp
push
cld
mov
dec
jle
mov
add
ret
js
or
push
test
cltd
jns
add
jne
negl
inc
cmc
sbb
addr16
jge
mov
data16
loopne
xchg
popa
int3
sub
loop
int3
insl
ja,pt
out
sub
daa
shr
sub
xchg
test
sub
push
icebp
ror
lea
or
es
cmpsb
cmp
ret
cmp
and
cltd
jns
and
sbb
outsl
mov
push
push
aad
ret
fdiv
mov
and
mov
adc
or
sarl
mov
icebp
sbb
outsb
xor
mov
adc
sub
out
test
cmp
sbb
daa
popa
loopne
imul
xor
mov
push
and
push
xchg
mov
xchg
aas
cs
dec
jg
popf
stos
ja
xor
mov
sub
aam
mov
or
pop
repnz
sub
pop
imulb
ja
push
adc
imul
jbe
push
pop
adc
or
aad
dec
movsb
xchg
jne
fimull
jg
sti
dec
xchg
fstl
in
out
xchg
inc
mov
jns
add
daa
push
push
test
cmp
adc
cmp
insl
or
push
in
ret
sbb
test
xor
movsl
inc
dec
push
push
pop
inc
adc
addb
dec
xchg
inc
xchg
ljmp
jp
cld
popa
and
mov
mov
inc
shl
movsl
mov
dec
pop
mov
mov
mov
push
out
push
cmp
dec
fwait
adc
jne
jecxz
inc
xor
mov
mov
mov
inc
pop
mov
inc
push
xor
out
in
sub
mov
inc
push
push
cmpsl
andl
sub
pop
data16
add
lcall
sbb
cmp
or
pop
push
pop
cmp
pop
or
cmp
pusha
rclb
shl
jg
adc
outsl
gs
out
cmp
sub
shl
and
test
mov
lahf
loop
sub
and
rorl
stos
neg
jo
and
in
jp
repz
add
pop
shll
push
sarb
jbe
dec
cmpb
xchg
mov
or
xchg
lea
stos
mov
sti
lock
leave
push
out
int3
pop
js
in
movsb
cmp
pop
xchg
test
lock
push
jae
mov
cld
cld
pop
ss
xchg
fldt
clc
mov
and
test
pop
xor
in
jo
and
inc
ss
or
scas
ret
xlat
das
stc
cld
jl
bound
mov
ss
adc
pop
xor
inc
sub
mov
sbb
sbb
mov
loopne
mov
cmpsl
mov
mov
dec
xchg
add
fidivrs
imul
aas
lea
and
cmp
cld
pop
in
inc
jbe
nop
jl
dec
sbb
mov
fisttps
jp
inc
rclb
out
pusha
popf
push
mov
pop
adc
test
das
mov
in
ffreep
scas
adc
dec
xor
xor
xor
cmp
adc
pop
mov
shll
loope
insb
loopne
cmp
lea
shr
in
sbb
out
repnz
xchg
sbb
jne
pop
lret
mov
sbb
mov
pop
fwait
sarl
mov
pop
xor
sub
inc
cli
cmp
js
dec
mov
jbe
cmc
sbb
mov
push
jnp
out
insl
adc
outsl
xlat
incl
pop
push
dec
sub
inc
hlt
sbb
dec
lahf
mov
add
inc
cld
xchg
and
mov
loope
mov
and
gs
or
pop
ret
pop
fbstp
jmp
ljmp
dec
cs
dec
mov
sbbl
ficoml
out
add
mov
mov
dec
shlb
xchg
jmp
mov
xor
test
imul
sbb
mov
inc
mov
lahf
stc
lcall
mov
xchg
jmp
data16
daa
in
outsb
gs
jle
mov
loope
shr
cmp
inc
mov
adc
jno
mov
popf
xchg
xor
jno
ljmp
adc
sahf
ja
adc
ljmp
inc
pop
ret
dec
jbe
fsts
jge
cli
xchg
aad
movsb
jae
inc
punpcklbw
cld
or
aad
sub
addr16
xchg
aam
jae
mov
test
cmpsl
add
mov
divps
in
js
mov
cmp
lds
movsb
jge
push
fs
movsl
push
data16
int
sahf
mov
aas
lahf
cmp
jmp
stos
xor
sbb
rep
dec
jbe
add
adc
mov
imul
mov
test
jmp
outsb
mov
adc
or
in
js
dec
stc
loopne
pop
inc
sub
xor
js
pop
xchg
sub
mov
out
jns
push
adcb
cmpsl
dec
mov
xchg
or
dec
jae
inc
fisttpll
mov
pop
add
mov
subl
repnz
js
mov
xchg
jp
cld
and
or
ds
adc
aam
push
loope
stos
mov
pop
mov
insb
push
add
out
popa
or
pushf
pop
cltd
mov
loop
push
ds
xor
sbbl
dec
sub
or
pop
cmpsl
popa
jbe
fisttps
aam
mov
orps
ljmp
jno
pop
out
xchg
pushl
mov
or
lods
xor
inc
std
cmp
push
imul
pop
xor
jo
leave
out
inc
xor
mov
cmpsl
cmpsb
jb
xor
push
mov
jne
mov
sub
aaa
or
addl
xor
mov
xchg
mov
add
in
mov
mov
addl
inc
push
sbb
cmp
xchg
ds
loope
xchg
jae
mov
adc
push
sarb
scas
imul
xchg
adc
push
cmpsb
and
mov
cltd
and
leave
jge
hlt
jmp
repnz
and
dec
pop
loopne
ret
fmul
out
outsb
sbb
aas
mov
rorb
dec
mov
mov
movsl
fiaddl
dec
mov
popa
sub
cs
push
xor
dec
push
lea
mov
aad
jle
ljmp
push
inc
pop
jl
stos
inc
popf
cmp
mov
nop
jge
jmp
cld
mov
es
int
dec
jb
mov
in
data16
jnp
mov
mov
repnz
add
cltd
bound
cmp
adc
inc
inc
addr16
sub
jle
jno
mov
insb
xchg
adc
cmp
xchg
sbb
jns
cmp
add
fldt
sbb
movsl
fs
push
mov
movsb
add
sub
sub
loopne
push
test
add
dec
fs
pop
mov
test
xorb
cli
rol
lret
sbb
xchg
xchg
adc
aaa
rcr
fidivrs
cmpsl
cmc
add
addb
outsl
mov
popf
test
lds
jmp
fldenv
push
andl
popf
push
sbb
xchg
stos
test
adc
mov
adc
dec
cs
cmovb
ret
or
jecxz
push
push
push
lods
push
aas
mov
shlb
and
add
push
and
jmp
xor
mov
test
cltd
adc
adc
lret
pushl
pmullw
pop
jg
xchg
cmp
push
sbbb
ja
and
xchg
sub
lds
cmp
dec
cmp
push
pop
mov
push
mov
in
mov
popa
es
fs
adc
test
mov
xor
insb
lods
dec
dec
stos
addl
inc
sbb
shll
hlt
ret
pop
xchg
ss
ud2
xlat
shll
in
stos
pop
mov
jp
add
add
sbb
cltd
push
inc
out
pop
outsl
cmp
and
xor
xchg
cltd
add
lea
imul
insb
notb
lock
and
lahf
in
dec
data16
sub
pop
daa
lock
add
clc
fcmovb
xchg
jno
in
push
ja
mov
test
jb
subb
xchg
clc
pop
or
pop
and
daa
jg
jns
lea
push
js
inc
mov
xlat
andl
mov
mov
aam
xchg
leave
dec
push
dec
rorl
inc
sbb
mov
sbb
xchg
add
sub
outsb
mov
subl
pop
pop
lahf
icebp
xor
movsl
adc
icebp
dec
xchg
add
popf
add
test
xor
and
out
shlb
jge
sbb
fcoml
xor
mulps
push
jo
dec
jge
mov
mov
jl
jp
negw
dec
xchg
gs
in
mov
int
popa
std
xor
icebp
inc
mov
arpl
loop
or
adc
lea
in
add
test
push
mov
sub
rolb
movsl
fidivl
pop
mov
arpl
iret
add
adc
pop
ror
sbb
jae
and
xor
jbe
push
sahf
xor
jne
negl
mov
or
lret
das
mov
cs
jmp
jmp
jge
dec
stc
fdivrl
mov
mov
out
fiaddl
jbe
arpl
andb
daa
outsl
pop
xchg
rcll
pop
inc
pop
and
test
jnp
shll
stos
jl
test
dec
or
jno
mov
in
fldl2e
ljmp
jmp
or
stc
enter
in
xchg
xor
jne
out
fists
mov
lret
xchg
pop
pop
int
pushf
enter
ret
pop
cmpsl
add
cmp
mov
cmp
or
sbb
cmp
pop
cmp
int
add
lea
push
xor
cs
fcmovne
stc
idivb
xorl
and
aam
jo
lods
or
adc
and
jl
xor
test
test
mov
and
jns
jge
xchg
sbb
push
dec
fidivrl
xchg
push
inc
mov
xor
add
push
dec
jno
fldcw
mov
jae
dec
pushl
cmp
sbb
xor
sbb
in
pusha
or
jcxz
insl
mov
movsl
mov
inc
stos
cld
leave
test
std
push
xchg
in
cmp
pop
jo
sbb
jp
adc
push
pusha
repnz
hlt
test
jbe
ljmp
mov
adc
lahf
ss
mov
fs
add
mov
fldt
and
rorb
jmp
out
jns
dec
mov
das
int3
mov
mov
xchg
scas
leave
fdivrl
inc
dec
jg
shll
add
leave
mov
cltd
mov
jg
cmpsb
in
xchg
jecxz
adc
loopne
sub
lret
popa
into
and
jg
lret
pop
lcall
push
xor
fstl
xor
test
push
sbb
xorl
push
cmp
fsubrs
lea
adc
clc
inc
sub
sub
fucom
inc
add
sbb
cmpsb
lds
loop
loope
mov
sbbl
xor
mov
xchg
in
push
inc
jns
jno
enter
dec
push
inc
mov
std
loope
inc
lret
mov
jg
fistpll
xchg
or
jo
cmp
jno
or
clc
shrl
loop
fisttpl
insl
jg
cmp
adc
jecxz
jmp
fmull
xor
out
js
and
push
jg
sbbb
jae
movsb
into
in
xchg
loop
inc
std
push
jecxz
stos
movsl
push
popa
mov
jg
out
fisttpl
filds
fistl
movsb
jle
mov
stc
dec
in
fnsave
rcl
out
push
inc
dec
xor
push
pop
out
or
push
push
cmp
stos
adc
add
cmpsb
jmp
jge
dec
cmc
push
rol
cmp
cmpb
out
mov
mov
lahf
cmp
dec
cmp
lock
xor
packsswb
add
add
lret
mov
pop
aam
adcl
sub
ljmp
in
sub
pop
repnz
push
inc
leave
and
mov
dec
or
rorl
aas
in
xchg
push
cs
push
repnz
fldt
les
in
pop
adc
or
xor
sahf
into
lock
ljmp
mov
cmp
fadd
orb
dec
pop
dec
xchg
scas
scas
push
nop
loop
jns
jmp
lea
cwtl
rcl
imul
clc
pop
jge
and
push
push
jae
mov
or
mov
add
jmp
xchg
add
adc
std
enter
movsl
xor
add
inc
and
pop
dec
dec
mov
int
lods
xchg
add
inc
adc
xchg
sub
divl
mov
pop
dec
mov
lret
cmpsl
gs
mov
inc
popf
dec
into
stos
or
scas
mov
pop
push
xchg
mov
mov
mov
push
cmc
inc
push
xor
mov
and
dec
mov
subb
lods
bound
sub
movsl
pop
je
lock
fistps
adc
push
pop
inc
push
xchg
add
cmp
mov
aad
adc
fmull
mov
mov
mov
mov
cmp
pop
sahf
xchg
lds
cmp
jns
and
inc
popf
cmp
mov
in
int
dec
cmp
add
stos
push
loopne
leave
sbb
aaa
outsb
int
sbb
nop
stos
aad
adc
xchg
cmpsl
jbe
inc
enter
mov
jo
mov
jge
int3
js,pn
jmp
cs
jne
sbb
movsl
mov
mov
mov
rcl
pop
mull
add
je
mov
mov
push
adc
cmpsb
ja
in
bound
adc
xchg
lret
gs
jecxz
cmp
stc
push
daa
xor
xor
add
es
cld
xchg
add
insl
mov
push
and
ss
ret
test
popf
cmp
insb
pop
jge
repnz
insl
jmp
adc
std
xchg
push
mov
mov
jae
pop
mov
nop
mov
add
push
lods
mov
dec
sbb
jl
mov
out
movsl
sti
xor
lock
mov
pop
or
sub
mov
inc
sub
sbb
inc
adc
adc
cmp
push
popf
or
jne
xor
push
adc
or
xlat
adc
arpl
repz
xor
scas
cmp
xchg
arpl
movsl
adc
insl
aaa
push
cmpsb
cmp
xor
inc
sbb
imul
popf
xor
aaa
shlb
push
add
lahf
push
mov
jb
lods
and
push
xchg
inc
loopne
sub
mov
dec
mov
mov
rcr
mov
rcr
cmpl
sbb
adc
xchg
lds
rcrb
es
fcompp
and
rclb
inc
xchg
in
ret
push
jno
xorb
mov
cmpsb
movsl
or
or
xchg
xor
push
jg
push
hlt
cmpsb
stos
push
in
pop
jno
push
dec
jno
and
gs
out
push
movsl
daa
push
loope
jg
inc
dec
xor
lds
xchg
fbld
ficomps
incl
pop
mov
pop
movl
add
rorb
insb
sub
idivl
jg
pop
fdivr
jle
inc
add
out
leave
jo
mov
iret
push
sahf
jb
stc
xchg
addr16
les
out
imul
lret
push
ljmp
les
sbb
int
push
adc
fimull
push
and
mov
lods
fs
xchg
xchg
in
and
mov
scas
mov
movsb
sti
add
int
sub
pop
jne
daa
pop
rcrl
mov
adc
fimull
sub
sub
test
mov
pop
mov
add
cmpsb
test
popf
pop
xorb
in
inc
test
mov
mov
jne
scas
jnp
mov
mov
push
dec
push
jbe
push
xchg
repz
mov
aas
and
orb
enter
cmp
sub
popf
push
ret
inc
mov
jns
jl
push
dec
ljmp
sarb
bound
je
xlat
dec
dec
insb
popa
pop
test
and
mov
popf
pop
mov
aam
and
call
xor
xor
sbb
push
test
xchg
mov
pop
sarl
or
mov
xor
fs
loopne
sahf
sub
icebp
outsl
pop
lods
test
jno
jns
aam
cmp
and
pop
ret
iret
xchg
arpl
jecxz
ljmp
and
mov
inc
aaa
imul
lret
add
imul
or
dec
cld
or
cld
adc
ds
pop
push
push
sub
fisubrl
mov
mov
lret
push
and
jmp
mov
lods
push
adc
mov
shrl
and
jl
sbb
in
sarl
push
or
or
pop
mov
mov
out
movsb
outsl
mov
xchg
arpl
push
sub
nop
jno
idivl
dec
and
inc
test
xchg
ret
dec
aas
sbb
gs
loopne
mov
enter
test
scas
xchg
mov
pop
outsb
push
imul
jecxz
pop
ja
add
ja
and
inc
lahf
test
mov
and
repnz
dec
or
in
sarl
lea
cltd
repz
mov
push
dec
fnsave
gs
pushf
fldl
das
imul
sbb
scas
orl
int
popa
out
arpl
xor
ljmp
xor
sub
lock
fsts
dec
test
das
mov
jb
dec
sbb
cli
mov
shl
sub
add
pop
mov
mov
aad
ja
mov
adc
cmp
scas
das
or
data16
fildl
rcl
pop
mov
xchg
ret
mov
xchg
test
rcrl
jmp
loopne
es
mov
jnp
mov
xor
mov
iret
jno
test
xchg
xchg
inc
insb
in
mov
mull
push
add
pop
xchg
jge
mov
xor
cmp
jl
lods
pusha
cmp
push
push
xlat
or
bound
sub
ficomps
stc
lods
adc
push
cmp
es
js
xorb
mov
xlat
clc
add
and
pop
test
push
stc
incb
add
sti
jns
lret
int
dec
add
mov
sub
in
jnp
inc
nop
or
or
cmp
in
jmp
lret
or
jbe
mov
push
sbb
loop
adc
fbstp
lahf
ljmp
and
add
mov
jnp
inc
or
cwtl
call
and
mov
je
pop
out
loopne
out
dec
xor
or
dec
in
cmp
mov
stos
inc
push
mov
sub
xor
lods
lods
cmp
mov
stos
add
inc
or
jge
fcmovnbe
icebp
and
and
sahf
fiaddl
xchg
cs
cmp
mov
push
jmp
mov
push
push
sbb
lret
mov
inc
pop
cmp
mov
pop
pop
mov
adc
shll
sbb
jl
xchg
xchg
cmp
or
insl
ficomps
jl
ret
pop
fstpt
outsb
popf
fs
roll
pop
fistpll
xor
lea
push
fstps
push
and
sbb
cwtl
fcoms
aas
stos
lahf
jge
sti
mov
dec
loope
mov
mov
inc
dec
sbb
dec
mov
jg
fs
push
ret
mov
cmpsb
sub
lods
cmp
dec
xlat
xor
xor
sub
cmp
in
push
mov
fnstcw
sub
add
adc
fdivrs
sbb
mov
or
pop
daa
xor
pop
dec
cmpsl
dec
dec
loop
std
jbe
jnp
in
add
cwtl
pop
or
testl
dec
add
mov
jo
ljmp
imul
mov
ss
add
stos
mov
xchg
dec
mov
or
out
jecxz
cmp
icebp
inc
or
and
movsb
shr
cmp
mov
mov
sub
adc
xor
cmpsb
push
mov
or
pop
jnp
shll
ja
add
dec
int3
stc
dec
mov
add
add
mov
ds
das
dec
negb
and
rolb
adc
outsl
and
shr
leave
je
bound
mov
or
xorl
sbb
jno
pop
pop
test
or
movsl
aam
push
push
push
inc
loope
ret
mov
das
jl
inc
imul
xor
out
and
dec
ret
add
mov
mov
inc
jae
sti
push
add
push
xor
mov
xchg
adc
leave
lcall
xchg
aam
addr16
jb
cmp
int3
scas
pop
aas
mov
rclb
mov
jbe
and
cmp
pop
mov
pusha
push
dec
dec
movb
jno
movsl
jb
lret
xchg
sbb
add
out
loop
mov
xchg
fidivrs
inc
pop
pop
icebp
or
cli
outsl
sub
clc
push
push
push
ret
aaa
es
in
je
mov
pop
pop
and
pop
insl
pop
adc
cld
xor
and
xchg
mov
rcrl
mov
mov
mov
inc
add
push
loop
fsubrs
jp
jecxz
push
dec
xlat
insl
mov
or
shl
add
inc
scas
imul
pop
das
shlb
fs
and
push
fprem
in
loope
call
sbb
pop
mov
test
jo
in
inc
mov
add
cmpsb
push
scas
pushf
das
loopne
add
js
cli
in
xchg
ljmp
fwait
or
scas
scas
cmpsb
jge
add
xor
cli
push
jnp
ficoml
adc
jb
mov
pop
call
pop
sbb
push
and
jp
int3
mov
cmpsl
insl
lahf
fists
mov
xchg
loope
jo
mov
mov
bnd
push
data16
out
cmpsl
lods
push
sub
fsubrl
or
mov
pushf
pop
icebp
mov
out
inc
loopne
fistl
dec
mov
xor
aas
adc
out
mov
cmp
testb
jle
or
xor
xchg
lcall
je
mov
sti
sar
mov
lds
stc
add
movsb
addr16
and
mov
lods
addr16
xlat
cmp
cmc
push
adc
stc
cmp
mov
in
movb
call
insl
imul
lret
xor
mov
ds
or
and
cmp
xchg
pop
fs
sbb
cmp
xchg
loope
jno
xor
lea
pop
mov
add
mov
inc
test
fidivrl
jb
jb
je
jno
xchg
in
dec
adc
cld
add
and
sbb
ret
add
pop
jns
cld
jl
xchg
or
fld
shrb
faddp
dec
mov
dec
ljmp
xor
enter
and
pop
xor
dec
das
mov
in
dec
shr
cmp
dec
jg
outsb
scas
or
outsl
repnz
cmp
dec
jg
cwtl
das
sub
xchg
jae
jne
orb
and
cmc
jge
jbe
movsb
mov
stos
pop
mov
sub
mov
add
or
push
mov
and
xchg
sti
push
jge
inc
lcall
cld
pushf
test
pop
cmpsl
mov
sbb
fistps
fwait
shl
mov
xchg
xor
inc
mov
in
aaa
gs
xchg
je
aam
jmp
mov
cmove
xor
sti
aam
imul
sbb
or
fs
stc
xor
lea
pop
bound
ror
jge
popl
ficoml
pop
flds
movsb
in
int
xor
popf
sbbl
sbb
jns
mov
sbbl
jmp
enter
aas
out
adc
adc
xor
je
adc
outsl
jecxz
adc
xchg
orb
add
pop
mov
enter
push
sbb
pushf
or
mov
and
imul
nop
lock
mov
js
push
daa
roll
fldcw
sbb
push
outsl
adc
shlb
imul
incl
es
xchg
xlat
and
loope
add
jl
orl
or
jle
pop
jle
push
outsb
mov
add
cmp
add
fists
mov
xor
pop
lods
sbb
sbb
mov
add
xchg
xchg
arpl
mov
nop
in
xchg
push
push
jmp
mov
popa
pop
in
arpl
push
inc
lea
sbb
pusha
add
inc
lcall
xor
pop
cs
cmc
sbb
das
push
stc
dec
fidivl
push
in
je
aas
inc
mov
lds
nop
in
mov
pop
adc
sub
js
cmp
pusha
sbb
fisubl
or
js
and
sbb
movsl
mov
sahf
mov
aam
inc
pop
cli
pop
fistl
inc
sti
scas
scas
adc
stos
mov
out
ret
xchg
fdivr
mov
xlat
loop
add
call
outsb
xchg
inc
imul
enter
iret
dec
ja
addr16
xor
and
and
insb
sbb
ss
pop
frstor
mov
in
and
and
int
daa
arpl
jge
test
and
inc
mov
test
pop
andb
test
mov
xchg
xchg
add
dec
jl
mov
or
ja
xchg
and
in
xchg
ror
jecxz
push
aad
xchg
and
fisubrl
icebp
dec
adc
and
sbb
add
ljmp
add
test
push
cmp
pmullw
pop
mov
mov
xchg
lock
into
cmp
pop
cli
sbb
lods
stos
xor
pop
lcall
jp
imul
imul
test
add
inc
jecxz
jb
or
leave
jnp
out
cmp
mov
mov
dec
icebp
cld
add
sub
sahf
test
addr16
bound
cld
test
lret
or
int3
mov
out
stos
jge
mov
jg
test
xor
and
mov
faddl
dec
loope
cmp
shl
hlt
mov
inc
pop
into
pusha
and
cmpsb
sbb
dec
xchg
pop
mov
jae
test
lret
sbb
fwait
sub
sbb
js
sbb
adc
scas
jnp
pop
int3
aam
sbb
mov
mov
jb
and
out
clc
cld
sbb
and
mov
loopne
repnz
repnz
int
or
jmp
and
jno
or
addr16
xchg
aad
je,pn
adc
call
or
adc
jge
or
push
mov
mov
aam
pusha
ret
loopne
jbe
mov
jecxz
es
int3
mul
out
pop
jecxz
leave
and
xchg
test
or
out
xor
mov
in
mov
mov
pop
es
mov
pop
in
and
mov
fisubl
and
push
cli
and
stos
scas
pop
pop
mov
das
adc
dec
sub
cvtpi2ps
ss
iret
fdiv
dec
cli
xchg
into
inc
lcall
mov
sbb
test
add
out
aam
ret
adc
pop
cltd
cltd
psubusw
test
add
push
sbb
rorb
jmp
fs
inc
lock
cmpb
mov
fs
cmpsb
cwtl
adc
jbe
les
bound
add
push
frstor
sbb
sub
je
fcom
mov
adc
inc
mov
imul
push
insb
jae
in
pusha
test
pop
ficompl
mov
or
mov
inc
stos
mov
lea
xchg
adc
in
in
and
rsqrtps
xchg
cltd
subl
jne
lcall
mov
js
push
pop
pop
ficoms
jle
std
clc
jmp
or
loope
inc
xor
scas
adc
pop
adc
outsb
and
pop
adc
mov
cmpsl
ficoms
jns
jae
les
scas
out
cwtl
pop
sbb
adc
call
sbb
push
mov
out
pop
push
pop
jg
jb
leave
rcl
jg
jge
aam
repnz
dec
adc
xor
jmp
aas
pop
jle
insb
dec
inc
mov
or
sbb
sub
xor
mov
int3
imul
pop
jle
adc
aas
sarb
loopne
xor
nop
cmp
dec
bound
pop
cmp
jbe
test
sti
andl
pop
dec
push
lahf
pushf
jo
push
fsub
call
enter
int
adc
lret
sbb
scas
sahf
repz
mov
adc
dec
pop
mov
pop
lods
int3
sub
pop
adc
movsb
movsl
add
cld
xor
xor
cwtl
push
std
push
rcrl
sbb
loope
popf
clc
hlt
ret
out
repnz
sahf
popf
iret
movb
push
fidivl
cmp
ljmp
adc
pop
inc
xor
sub
es
call
xor
pop
mov
je
pop
adc
or
fcompl
movswl
into
jle
imul
cltd
cmp
cld
inc
add
insb
or
cli
and
in
cmc
daa
xchg
mov
lret
cmpb
dec
sub
clc
jle
imul
hlt
inc
xchg
xchg
dec
xchg
and
out
nop
jbe
fldt
mov
xchg
or
inc
iret
jmp
movsl
or
cmp
xchg
xchg
push
push
sub
jns
inc
dec
mov
push
pop
sbb
push
shrb
mov
fsubl
clc
xchg
mov
add
leave
mov
pop
lock
fidivrs
das
loop
pop
cltd
push
das
xor
push
cli
lods
mov
adc
icebp
fdivr
cmpsl
adc
bound
dec
cmp
lds
daa
lret
lret
mov
mov
jle
loopne
lock
incl
outsl
outsl
xchg
repnz
jnp
ja
roll
mov
xchg
pop
loope
dec
stos
or
fbstp
repz
js
shlb
xchg
leave
pop
jo
xchg
cmpsb
jo
jl
mov
jmp
adc
mov
jns
imul
adc
mov
bound
out
lret
out
push
mov
mov
stc
and
jae
push
loop
inc
inc
jb
insb
rorb
std
xor
leave
call
rolb
jae
sub
ret
sbb
dec
add
clc
out
mov
es
out
cmp
test
dec
rol
pushf
dec
mov
inc
loope
mov
mov
push
cmp
lahf
cmpsl
call
inc
test
xlat
dec
in
arpl
lock
shr
stc
mov
push
xchg
jne
push
push
dec
mov
out
dec
cmp
dec
lret
and
pop
clc
inc
cmp
mov
popa
sub
ds
adc
cmp
lods
mov
add
xchg
loop
sbb
les
pusha
jp
push
gs
sub
mov
xchg
das
mov
dec
lret
cmp
mov
inc
fcoms
popf
xchg
sub
insb
xlat
gs
bound
jae
mov
xlat
jno,pt
mov
and
dec
and
lret
in
pop
pop
push
push
test
mov
ret
push
jle
cmp
rol
inc
popa
dec
adc
iret
mov
outsl
pop
out
jo
cmp
or
jmp
fwait
sub
push
xor
xchg
dec
mov
push
in
imul
in
jns
lret
mov
pop
outsb
sub
or
pushf
daa
mov
pop
dec
push
inc
inc
int
mov
lcall
sub
dec
xlat
dec
pop
sub
es
xchg
daa
loope
loop
pop
push
or
push
test
and
sbb
orl
xchg
test
repnz
sbb
inc
in
push
mov
cs
fmuls
xor
shll
sub
sbb
pop
cltd
or
ret
xor
xchg
jns
cmp
push
inc
int
cmp
inc
pop
add
test
data16
cmp
or
mov
mov
mov
lds
mov
mov
lahf
ret
and
dec
mov
popf
stc
in
out
mov
fisubs
movsb
fsubrp
xor
into
clc
das
ficompl
pop
mov
cld
xor
call
xorb
mov
out
insl
or
or
and
jbe
jae
lret
mov
fdivp
mov
lods
pop
jns
jae
out
jo
ss
jnp
es
lea
in
adc
int3
popf
stos
inc
mulb
mov
shlb
fbstp
pop
lds
or
push
jl
xchg
cli
das
cmc
cmp
imul
fsubrl
leave
out
adc
mov
movsl
js
dec
pop
adc
mov
cmp
dec
lods
decl
lock
icebp
mov
fs
jle
push
mov
enter
mov
frstor
or
cwtl
and
je
mov
addr16
push
jecxz
sub
sbb
and
pop
inc
cld
or
enter
push
mov
push
in
mov
int
jo
jno
mov
loop
mov
mov
pop
aad
xchg
mov
mov
int3
lret
mov
jbe
adc
fcoml
icebp
push
dec
pop
outsl
mov
push
cmpsb
inc
jnp
xchg
je
fimuls
mov
cmp
xlat
imul
lret
mov
mov
jns
inc
sub
stos
adc
mov
pop
mov
dec
mov
jle
xchg
pop
int3
pop
xchg
imul
loop
cwtl
sbb
fidivs
pop
inc
or
rclb
movb
inc
pop
lret
jp
adcl
stc
jmp
cmp
and
cmp
adc
pop
dec
or
cmc
adc
stc
or
and
mov
and
rcrb
mov
mov
add
inc
adcb
inc
or
loop
dec
aas
les
jae
mov
rcl
test
xor
jno
mov
popf
mov
in
hlt
mov
cwtl
mov
clc
jae
aas
jp
cmp
mov
test
mov
jnp
inc
out
xor
rcll
aaa
lods
mov
pushf
mov
push
xorb
out
pop
push
nop
dec
jb
repnz
decl
jne
loope
inc
enter
nop
cli
rcrb
jp
gs
test
fwait
xor
pop
ret
leave
mov
test
insl
jbe
test
sub
sbb
sbb
inc
ljmp
in
popa
mov
push
mov
into
lods
xor
mov
sub
xor
xchg
xorl
cltd
scas
or
xchg
mov
sbb
xor
enter
mov
sub
std
pop
in
inc
push
adc
sub
ficoms
cmpsl
fnsave
les
push
bswap
mov
cltd
ja,pt
add
lods
addb
xchg
movsb
in
lea
mov
push
lcall
or
lock
lods
jg
fs
sti
test
mov
cmp
mov
addb
or
in
pop
addr16
pop
cmc
and
outsl
and
daa
loop
fsubrs
popa
cld
aam
test
lahf
je
imul
lret
cs
mov
test
cmpsb
sbb
jnp
cmp
or
rcll
fs
nop
cli
xchg
popa
ret
arpl
icebp
js
add
mov
idivb
pop
clc
shlb
pop
lahf
adc
pop
roll
xchg
aaa
out
mov
cld
ss
loop
mov
out
in
data16
pushf
ja
insl
push
aas
add
jmp
adc
in
pop
lods
divl
xor
inc
adcb
jp
jg
xchg
js
inc
add
pop
aaa
hlt
jg
sub
test
mov
jns
ja
push
mov
pop
call
mov
cmp
mov
and
pop
faddp
icebp
jnp
jne
mov
stos
addr16
rclb
out
loop
and
aad
mov
fs
xchg
add
pop
js
mov
sar
mov
pop
mov
sub
in
inc
pop
iret
push
nop
insl
aad
jae
pop
std
arpl
cli
ficompl
mov
pop
rol
sub
cmp
xor
adc
xor
pop
pusha
cmc
ret
sar
xor
int
jle
inc
mov
sbb
adc
jno
fbld
icebp
sbb
xor
add
inc
mov
into
lret
mov
pushf
dec
es
push
dec
jno
or
cmp
popa
xchg
pop
mov
xchg
sub
xor
test
sahf
jo
cmp
mov
std
jo
xchg
mov
mov
xchg
stos
push
sbb
in
add
test
dec
idiv
test
or
dec
and
pop
test
or
adc
test
jno
div
das
pop
sbb
bound
push
mov
lcall
mov
cmp
sti
xrelease
ret
xchg
sarl
push
adc
es
ljmp
and
fnstenv
insb
or
xchg
jmp
xchg
xchg
scas
int3
lret
sbb
xor
enter
inc
test
sub
jae
and
fsubr
fldt
inc
and
mov
das
xor
sbb
mov
cmp
neg
dec
mov
loop
loope
cmpsb
ds
push
shr
xchg
xor
mov
xchg
data16
or
andl
sti
adc
or
jo
push
subl
mov
fidivrs
stc
ret
pop
xor
in
or
inc
sti
je
cmpsl
mov
jle
js
mov
dec
mov
push
push
test
xchg
ret
inc
rcrb
in
and
pop
ror
mov
rolb
mov
insb
adc
cmpsb
or
ss
loopne
sub
xlat
and
xor
mov
ds
icebp
inc
clc
lahf
dec
orl
mov
mov
fcmovb
jne
xchg
aam
in
or
clc
xlat
adc
in
out
stos
movb
testl
mov
mov
dec
dec
push
popf
inc
mov
jg
mov
mov
fsubs
or
mov
je
dec
xor
push
std
ret
test
xor
jecxz
rorb
sti
or
sbb
and
aas
fistpl
jnp
call
and
inc
inc
ret
imul
fisubs
push
enter
sub
sbb
fists
dec
mov
xchg
adc
mov
enter
push
and
mov
dec
mov
push
in
es
push
cmp
repz
sbb
mov
and
movsb
pop
pusha
pop
adc
and
push
in
sbb
inc
in
aam
adc
inc
ret
jecxz
test
add
dec
mov
and
cwtl
iret
fiadds
mov
scas
rcll
mov
push
mov
fsub
pop
inc
xchg
xchg
cmc
sub
xor
dec
xchg
inc
pop
pop
insb
adc
fs
icebp
adc
rorb
or
popa
rolb
insl
jl
pop
and
shrb
test
mov
jns
and
mov
xlat
mov
pop
hlt
mov
outsb
sub
cmpsl
movsl
iret
pushf
rcrb
sbb
mov
sub
inc
or
loopne
negb
mov
int3
inc
dec
cmp
push
jae
fstpl
mov
jle
mov
push
sarb
and
mov
cmp
jmp
push
addl
or
xlat
repz
inc
mov
les
in
cmpsb
lock
sarl
jecxz
mov
cmp
aas
and
sub
lock
test
iret
mov
adc
loope
stos
rol
lds
js
decb
clc
cmpsl
fwait
cmpsb
jae
cwtl
int
mov
rcr
test
fxch
push
sarl
and
sbb
push
gs
adc
je
les
mov
ret
xchg
fdivrs
sub
push
pop
xor
pop
imul
je
int3
inc
dec
jbe
movsl
loop
aas
js
pop
enter
xchg
into
clc
jo
popf
and
loop
add
push
sub
jo
inc
ljmp
hlt
xchg
mov
push
and
daa
scas
ret
je
imul
fiadds
or
jle
fcomi
pop
mov
xor
loop
dec
push
mov
xchg
push
sub
shll
pushf
shl
push
les
sbb
push
xchg
je
loopne
mov
cld
in
pop
and
out
push
data16
jnp
lret
adc
loopne
scas
jne
subps
mov
test
add
repz
and
sbb
adc
mov
lret
mov
mov
inc
sub
xchg
xchg
sub
lock
mov
in
ret
xchg
cmp
loopne
xchg
or
fisttpll
lds
inc
push
fdivs
xor
jb
jmp
gs
cld
xor
cld
out
les
cmp
shll
mov
shll
and
sarb
lods
xor
shll
imul
cmp
fwait
in
ret
sbb
xchg
andl
lea
fwait
cmp
xchg
in
mov
cmc
notl
xor
sub
push
repz
dec
aas
inc
enter
xchg
aas
xchg
mov
bound
lea
cmpsl
lahf
dec
xchg
std
outsl
push
out
int
aad
gs
pop
mov
ja
sub
in
xor
cmp
addr16
adc
div
dec
mov
add
mov
mov
lock
shrb
cmpl
pop
sub
dec
push
jg
or
dec
xlat
stc
mov
bound
or
xchg
xor
jns
sub
xchg
add
adc
cmp
in
imul
and
jns
outsl
jl
or
popa
out
repz
fwait
and
movsb
push
mov
jb
or
jmp
pop
push
daa
nop
ds
xor
cltd
cmc
scas
push
mov
mov
mov
push
lea
sarb
aad
mov
xor
push
mov
bound
inc
inc
fisttpl
mov
cmpb
int
push
cli
mov
push
stos
mov
decb
int3
cmp
shr
subb
push
xchg
jo
fmull
sbb
add
subl
mov
js
inc
lcall
loop
cld
loopne
sbb
cmpsl
pop
loopne
pop
inc
into
jmp
xchg
mov
pushl
inc
loop
mov
sahf
mov
dec
xor
shlb
jecxz
jl
add
pop
mov
fdivp
pop
clc
sub
sub
testb
or
jp
mov
cld
scas
paddq
jo
jg
out
pop
test
push
pop
sub
lods
jbe
and
cmp
inc
and
pop
repz
jae
ret
or
fwait
jle
bound
notl
arpl
pushf
dec
cmp
out
mov
insb
lock
repz
sti
mov
ja
add
cmp
mov
daa
cmp
lea
gs
je
mov
xor
mov
inc
in
inc
pop
das
or
adc
bound
in
arpl
aam
sbb
dec
pop
popf
or
pop
sub
popf
nop
add
lods
dec
mov
dec
clc
mov
pop
pop
lret
pop
mov
daa
mov
in
insl
rcl
sbb
jge
clc
adc
repnz
xor
mov
jno
xchg
add
aam
xor
lods
ds
mov
jbe
and
data16
insl
dec
sub
movsb
fwait
and
fs
bound
mov
adc
aam
and
mov
aas
ret
out
xchg
stos
push
push
mov
enter
xchg
adc
or
mov
pop
outsl
ss
push
xor
inc
hlt
xchg
ss
inc
push
and
stos
pop
rcrl
xlat
xchg
scas
idivb
sub
cmp
mov
inc
sbb
rcl
loop
icebp
stos
inc
xchg
es
div
ret
xor
mov
outsb
cmp
movsb
dec
popa
sub
dec
in
fstpl
fdivrs
push
daa
and
mov
aaa
sti
cmp
mov
xchg
rcr
out
jbe
pop
sbb
cmp
or
or
push
outsl
inc
jg
adc
fmuls
push
iret
insb
je
mov
and
xchg
add
inc
jae
jne
mov
sbb
fidivrs
arpl
jge
loope
pop
inc
jo
xlat
test
or
lock
lahf
add
xor
bound
adc
lret
pop
dec
in
cld
pusha
mov
cwtl
pop
test
sub
and
inc
loope
xor
push
pop
cli
int
inc
movsl
into
xchg
loopne
in
dec
and
push
cmpsb
std
repz
inc
xchg
lret
xchg
repnz
scas
sub
pusha
add
in
inc
stos
arpl
sub
jl
out
lock
lahf
icebp
sbb
pop
push
out
push
mov
jp
js
mov
iret
cli
dec
xchg
nop
pop
jo
xor
fnstcw
inc
js
xchg
je
xchg
pop
divb
add
lret
gs
push
rolb
sub
jl
jae
sub
mov
mov
xchg
mov
nop
xor
push
pusha
mov
inc
mov
push
xor
je
popa
subl
outsl
cs
mov
movsb
xlat
jo
jg
mov
fwait
push
das
shl
roll
pop
inc
mov
out
push
loope
inc
mov
ljmp
mov
mov
movb
jns
setae
or
adc
add
mov
icebp
and
cmp
cltd
int
pop
mov
jl
sbb
push
dec
in
cmp
mov
push
jecxz
loop
adc
repnz
loopne
mov
idivl
loopne
push
mov
adc
mov
xor
scas
popa
dec
push
inc
cli
inc
xor
sub
cli
xlat
pop
test
dec
cli
cmpsb
fnsave
mov
popa
mov
es
xchg
jmp
jne
xchg
xchg
or
mov
test
add
frstor
and
inc
mov
xor
mov
dec
loop
enter
into
cltd
adc
inc
xchg
and
xchg
dec
pop
rcll
shl
jle
movsb
inc
mov
cmp
jge
ss
xor
mov
cwtl
dec
and
and
dec
repnz
jl
cld
push
mov
jb
daa
add
or
pop
idivl
mov
in
enter
fwait
ret
xchg
out
bound
test
rcll
idivl
shl
jnp
andl
mov
cmp
mov
jecxz
out
mov
and
loopne
enter
insb
xchg
and
push
ja
sbb
scas
lret
out
call
jbe
fwait
mov
jl
pop
mov
bound
sub
dec
das
mov
repnz
jp
jno
pop
jb
sub
dec
aaa
push
es
dec
lea
xchg
pop
mov
pop
stc
mov
inc
or
clc
sti
lea
daa
pop
ret
adc
icebp
push
cmpsb
flds
leave
xor
sbb
std
jnp
add
pushf
rcl
outsl
push
insb
or
add
cmp
out
xchg
icebp
imul
pop
push
rcrl
test
imulb
mov
lret
ret
mov
mov
mov
xchg
jnp
mov
inc
mov
mov
mul
push
aaa
pop
daa
add
xchg
inc
mov
lods
aam
loope
aam
push
data16
push
ss
shll
mov
std
cmp
mov
push
repz
fadd
ret
shrb
std
xor
loopne
je
sub
push
fwait
or
and
mov
cmp
mov
repnz
ds
lret
jge
pop
pop
js
add
pop
and
push
xchg
push
in
addl
add
adc
lods
jne
pxor
ficoml
in
cmp
or
xor
fcmovu
and
fcmovnu
inc
mov
pop
xorb
arpl
lahf
fmuls
push
testb
add
cld
ret
mov
fs
mull
test
outsb
mov
clc
sbb
int
imul
adc
out
adc
push
gs
mov
adc
rcrb
mov
inc
sbb
dec
les
sti
mov
dec
jbe
or
push
roll
stc
loopne
mov
popa
pop
cld
shlb
push
in
xchg
or
inc
push
lret
cmp
rclb
sub
flds
in
pusha
aaa
lahf
cltd
mov
outsl
int3
pop
adc
inc
add
dec
add
insb
sub
adc
sub
dec
inc
xchg
sub
lret
push
addr16
push
es
and
clc
mov
movsb
xor
aad
rclb
add
shl
nop
shl
daa
cmpsl
mov
std
lea
sub
ja
xchg
out
push
popa
inc
xor
sub
push
fcoms
mov
int
movsb
push
pop
ret
xchg
mov
add
xchg
adc
loopne
mov
adc
mov
push
aam
out
jb
xchg
mov
popa
int3
push
stos
out
ja
mov
pop
sar
lret
dec
mov
pop
pop
idiv
jle
pop
imul
addl
or
jno
test
movsl
mov
aaa
test
push
outsb
jne
rcll
roll
xor
pop
xor
les
and
ds
ret
xor
mov
dec
or
shlb
xor
aas
data16
adc
lret
xchg
enter
mov
cmp
mov
testl
test
sar
xchg
or
arpl
ret
loope
mov
sbb
push
push
mov
test
fcmove
pop
sbb
arpl
pop
and
pusha
cmpsl
mov
das
jecxz
lret
stc
mov
dec
fnsave
insl
cmp
sbb
dec
stos
mov
mov
and
xor
cli
adc
shll
fsts
pop
incb
test
pop
inc
mov
mov
jmp
repnz
adc
and
fldt
dec
jnp
lahf
xor
scas
dec
fs
cltd
or
sbb
xor
inc
shrl
inc
lret
icebp
jle
cmp
pop
aas
popa
test
cld
push
push
mov
mov
push
fldcw
loop
aaa
jle
jecxz
into
es
cmovae
xchg
lcall
push
mov
hlt
pop
lahf
mov
sbb
mov
mov
mov
push
andb
push
mov
scas
inc
jbe
mov
fidivs
jbe
stc
push
jne
in
sub
cwtl
mov
adc
jmp
pushf
jmp
xchg
int3
cmp
xchg
push
sbb
jecxz
jb
loop
cmp
and
xor
enter
lock
mov
mov
adc
adc
test
fcompl
scas
add
jg
pop
sbb
pop
jp
dec
outsb
pusha
inc
in
pop
fdivl
and
adc
addr16
test
jne
cli
xchg
es
sub
dec
jl
and
fs
bound
sbb
bound
push
popa
xor
jmp
in
repz
xlat
arpl
or
fwait
lock
rorl
add
stc
aam
and
push
sub
scas
mov
ret
inc
out
xor
icebp
mov
cwtl
mov
inc
xor
xor
add
push
pop
push
and
jnp
insl
jmp
or
test
out
aad
decl
inc
cmp
hlt
sub
cmpsb
inc
xlat
pop
test
jmp
push
push
fsubs
xchg
sbb
sti
sahf
dec
cmp
push
fwait
in
lcall
mov
dec
or
jbe
test
lea
cmp
std
adc
cld
iret
shl
cli
data16
movsb
ror
cmpb
jl
shlb
andb
cmpl
dec
sbb
sbb
jmp
rcll
loopne
push
and
test
icebp
stos
ljmp
addb
fisttpll
ja
lret
mov
sub
lea
andl
mov
jmp
lods
cmp
subl
cmpsl
mov
jle
rcrb
lods
loop
xchg
sahf
and
scas
popf
stc
mov
mov
push
ret
mov
in
pop
mov
adc
imul
sbb
int3
jle
not
xchg
sub
push
daa
and
dec
sbb
push
push
add
in
jb
repnz
filds
cmpb
pop
jnp
ret
dec
and
xchg
add
imull
cmpsb
inc
sbbb
loop
mov
movsb
inc
add
mov
lret
dec
xor
lods
jnp
js
and
lea
add
xchg
sahf
sahf
lret
adc
loopne
jns
leave
dec
sti
data16
pop
std
xchg
xchg
and
int3
mov
mov
push
xorb
sti
add
sbb
xchg
mov
pop
sbb
sub
xchg
imul
movsb
sarb
mov
dec
and
test
sbb
xor
push
arpl
add
mov
shr
sub
push
xchg
xchg
test
sbb
xchg
int
cmp
int3
adc
adc
mov
mov
sub
jno
sbb
xchg
dec
pusha
jmp
jns
and
in
adc
inc
mov
jge
in
nop
cmp
hlt
mov
mov
jnp
nop
pop
sahf
adc
mov
rcll
pop
call
mov
mov
and
dec
mov
jg
repnz
pop
addb
enter
and
pop
xchg
test
cmp
inc
pop
xchg
clc
cli
aaa
data16
push
hlt
xchg
sub
movsl
push
xchg
movsl
push
imul
insl
and
mov
inc
push
out
mov
jo
in
mov
inc
in
or
or
popf
cmp
test
dec
mov
scas
sub
scas
cltd
and
dec
push
xchg
pop
cwtl
ror
sub
jg
adc
xchg
add
fiadds
push
jmp
jmp
pop
adc
ret
mov
cmc
in
jb
dec
dec
lret
scas
pop
mov
gs
fiadds
std
mov
adc
cmp
push
in
aad
dec
out
dec
push
mov
out
mov
movsb
mov
lret
clc
data16
mov
jno
mov
push
call
mov
cltd
aas
sarb
or
test
popa
sbbl
dec
cmp
and
cmp
jo
faddl
cmp
cmp
dec
jecxz
mov
push
lret
fisubrl
sbb
push
mov
movsb
cmp
inc
fwait
pusha
mov
cmp
pop
and
adc
aas
lahf
pusha
xlat
push
cmp
and
je
add
sub
inc
jnp
mov
mov
mov
data16
nop
jae
pop
aam
dec
addr16
adc
mov
lcall
bound
mov
mov
inc
cmc
test
xchg
nop
ja
xor
pop
add
in
jnp
scas
cmp
stos
push
cmp
cmp
mov
cltd
push
jnp
je
xor
xor
stos
in
lods
loope
lret
shlb
push
adc
push
ret
ljmp
ficoms
fs
add
inc
lahf
xchg
ljmp
call
ds
sbb
pop
mov
push
or
hlt
sbb
mov
in
scas
dec
pop
jnp
test
mov
cld
outsl
sbb
or
jnp
test
ja
in
push
mov
dec
in
xor
lret
hlt
dec
xor
mov
cmp
repnz
js
roll
outsl
rorl
mov
stc
sahf
dec
inc
and
mov
mov
adc
ss
jge
add
sti
scas
stc
dec
insb
jae
andl
or
or
sar
loope
stc
mov
mov
adc
mov
lahf
add
bsr
push
iret
xor
cmp
inc
insl
push
aam
daa
sub
mov
fcoms
adc
xlat
inc
dec
gs
daa
lcall
fdivs
mov
ja
aas
call
dec
ljmp
out
pop
and
jle
xor
sub
mov
mov
movb
sbb
mov
shrb
arpl
shl
xor
loop
sbb
mov
or
jno
gs
test
repz
pop
mov
negb
fwait
das
mov
rcrb
pop
aad
sub
xor
dec
mov
ret
in
push
addr16
outsl
scas
inc
push
mov
fmul
insb
sub
rol
lcall
js
insb
lea
hlt
stos
jns
int
add
and
adc
aam
ljmp
inc
adc
xor
mov
dec
jae
into
shrb
sub
and
icebp
call
testb
and
roll
das
add
cmpsb
pop
insb
sub
and
dec
dec
push
imul
add
mov
popa
leave
clc
out
add
mov
lods
mov
xchg
dec
sub
pushf
mov
in
in
xchg
arpl
jne
mov
mov
mov
out
jb
mov
dec
mov
stos
shlb
lds
push
out
cmc
test
ljmp
jge
push
push
xorb
shr
gs
and
jae
and
aaa
pop
sub
jg
xchg
std
dec
adc
add
sbb
mov
stos
mov
mov
ds
mov
imul
or
push
neg
insb
arpl
fdivl
adc
mov
add
sbb
ja
scas
jae
mov
jno
fistpl
or
test
adc
loop
and
adc
aam
cmp
push
or
dec
aam
jmp
repnz
mov
cmc
lock
dec
push
sub
stos
xor
mov
int3
xchg
push
fstp
push
xor
sub
mov
adc
add
jb
shr
jge
pop
mov
jp
jp
mov
xor
mov
inc
and
lcall
ds
inc
idiv
iret
cmp
pop
mov
imul
insb
gs
ja
pop
lods
adc
rcrb
in
testl
pop
lcall
push
test
jmp
jecxz
or
add
sti
push
jb
mov
imul
push
into
cltd
push
mov
jbe
add
mov
add
mov
les
out
push
nop
outsb
pop
in
ret
call
mov
mov
inc
sti
xchg
cwtl
add
sub
loope
sub
cmp
xchg
adc
dec
push
xor
mov
loopne
xchg
leave
jmp
insl
dec
imull
test
ja
push
lahf
jle
sub
xchg
jb
push
cmpsl
cld
stos
mov
int3
stos
icebp
jae
push
add
scas
jle
add
jmp
iret
xor
fwait
add
sbb
sub
daa
lea
shl
cmp
ja
lock
xor
mov
cmpsb
mov
mulb
lret
mov
mov
cmp
movsl
add
adc
lcall
popf
sti
and
jecxz
pushf
pop
push
jne
mov
inc
inc
pop
pop
sub
in
mov
inc
jbe
mov
je
lcall
push
stos
add
mov
mov
push
push
mov
imul
pop
idivl
xor
inc
sub
lds
sub
outsl
and
xor
stos
dec
mov
pop
or
sbb
mov
popf
sbb
pusha
into
xchg
ja
fwait
dec
call
dec
pextrw
das
sbb
fs
bound
inc
dec
je
in
gs
adc
mov
rcrb
push
shll
add
cmpsb
adc
je
inc
fs
mov
dec
ja
dec
repz
ret
mov
xchg
pop
repnz
in
lahf
push
adc
and
lret
inc
cli
divl
mov
or
mov
add
pop
or
cmc
mov
bound
mov
test
lods
dec
dec
pop
cmp
stos
sbb
sbb
lea
loope
fisubs
push
pop
dec
insb
cwtl
loopne
mov
jb
cmpb
leave
out
or
pop
call
mov
ficoms
in
mov
stos
shll
addb
adc
dec
nop
fcomps
loope
sbb
sub
js
jb
pop
mov
jo
cmp
cwtl
nop
jnp
xor
setg
movsl
sub
cmp
pop
enter
push
push
sub
jge
cs
aam
sub
sub
pop
push
out
mov
lcall
sub
lret
mov
outsb
lock
fsubs
outsl
pop
aad
cwtl
stos
jg
sti
enter
or
mov
mov
mov
mov
loop
cltd
sbb
outsb
data16
sub
dec
mov
out
inc
orl
cmp
mov
cmp
push
lahf
and
pop
pop
daa
fsts
pop
cli
sahf
jb
mov
pop
rorb
pop
fcmovnbe
mov
arpl
pop
scas
mov
aaa
jp
mov
adc
mov
or
decb
dec
xchg
jecxz
or
iret
mov
jg
sbb
lret
sti
add
mov
lods
cmc
fnstsw
inc
outsl
daa
shll
jo
out
xchg
mov
sub
xchg
je
dec
fmull
testb
int3
idivb
in
lea
adc
movsb
fwait
lods
lcall
out
jne
sub
inc
outsw
loopne
mov
std
pop
das
mov
jg
mov
jg
add
fmul
mov
shrl
in
xor
mov
pushl
popw
cli
mov
aam
mov
and
or
daa
sbb
inc
mov
nop
mov
movsb
jbe
jg
arpl
loop
fsubl
shlb
dec
jno
cmp
inc
repnz
fnstcw
xchg
adc
shrd
dec
arpl
cltd
cld
insl
es
adc
mov
gs
icebp
and
repz
mov
rorb
cmp
aas
jle
shrl
out
cmp
lods
lds
mov
sub
and
xchg
cmp
fcoml
sub
jns
call
adc
pusha
xchg
lret
je
dec
in
in
repz
dec
leave
mov
ret
cmp
or
addr16
in
flds
fstpt
inc
fstpl
gs
dec
and
xchg
push
cmp
lcall
nop
fwait
mov
adc
out
adc
lods
jne
dec
xlat
pop
scas
addb
xchg
movsl
ljmp
pop
adc
cmpsl
push
jb
cmp
fbstp
jbe
int3
push
lods
repz
xor
sub
adc
push
rolb
cmp
xchg
inc
and
idivb
test
or
popa
cmc
jecxz
mov
jbe
sub
xchg
movb
ret
cmp
imul
test
testl
hlt
popa
and
jno
jecxz
out
add
jecxz
sti
repnz
xchg
in
pop
mov
jae
lret
add
idivb
shlb
enter
xchg
aam
scas
aaa
mov
cmc
inc
ds
add
pop
inc
mov
inc
jnp
cld
and
int
adc
cli
xor
inc
sub
inc
sbb
mov
in
dec
insl
jbe,pt
cmp
lret
push
sub
dec
aad
enter
lahf
in
out
cmpsb
mov
iret
jno
movl
inc
insl
xchg
inc
sub
push
ljmp
lret
in
pusha
push
lods
outsl
cwtl
xchg
test
mov
or
lcall
sub
jp
decl
movsl
popf
xor
lahf
add
test
inc
xchg
sbb
or
adc
test
out
push
pushf
push
dec
lret
mov
fisubs
mov
xchg
jnp
and
loop
add
out
inc
push
aam
into
dec
inc
mov
sub
cmpl
jmp
pop
in
in
adc
aas
or
icebp
stc
push
pusha
inc
mov
jne
mov
addb
mov
shll
push
outsb
test
dec
xlat
or
push
add
fcmovb
and
rorb
sahf
dec
fs
push
xchg
or
fbld
dec
push
pop
neg
sub
aaa
addl
inc
and
jmp
mov
xorl
sbbl
pop
mov
mov
int3
popf
stos
inc
pop
add
rcrb
jge
dec
ja
cmp
mov
lret
fdivl
jo
dec
jecxz
adc
flds
daa
and
mov
imul
xor
inc
add
fsub
ficompl
std
sbb
push
dec
leave
add
sti
gs
sbb
shll
xchg
jae
and
inc
sbb
mov
sub
or
jns
aas
imul
cmpb
add
shrb
orb
scas
add
int
adc
jns
sbb
shll
dec
sbb
add
pop
dec
lea
fdivrp
ljmp
daa
push
pop
ds
scas
int3
adc
call
shll
adcl
sbb
rclb
mov
loop
mov
fnstcw
mov
out
add
push
xorb
lahf
xchg
xchg
or
and
sbb
jns
cmpsl
add
push
mov
xchg
pop
pop
inc
mov
inc
cmpsb
stos
outsb
loop
mov
test
bound
mov
mov
jae
fdivrs
dec
jle
imul
mov
aas
and
inc
adc
or
jbe
jp
sbb
je
leave
call
pop
push
adc
xor
xchg
push
aam
sub
inc
movl
xchg
in
mov
pop
mov
push
cs
push
push
push
cmpb
lods
repnz
scas
dec
repnz
fcompl
mov
sarb
nop
sbbl
xor
push
sub
pop
dec
insl
fsubrl
pop
cld
test
sbb
loop
pushf
cltd
pop
mov
pop
int
jecxz
test
fsubrl
dec
inc
or
adc
das
jbe
int
fnstenv
in
push
aad
pushf
cmp
jne
call
inc
stos
orl
push
imul
test
xorl
xchg
popf
int3
js
in
call
mov
mov
inc
or
fistps
js
cmp
mov
ja
xchg
hlt
add
movsl
loope
dec
cmp
ret
adc
sbb
xchg
sbb
dec
push
cmpsb
daa
lea
fimull
les
mov
pop
lahf
adc
add
sub
aas
ficompl
or
adc
decl
shl
pop
incb
adc
loop
push
xor
push
out
repz
cmp
fst
fdivs
aaa
adcl
adc
lret
dec
loop
jecxz
jo
gs
mov
adc
and
jecxz
xor
sub
cmpb
cli
jg
cmpsl
into
bswap
sti
lret
jno
sbb
icebp
mov
pop
popa
push
and
inc
or
sbb
or
jg
mov
aam
pop
and
mov
in
mov
pop
cmpsb
int
cmp
sbb
cmp
ficoml
jecxz
or
subb
and
mov
addr16
add
lcall
mov
pop
movsb
add
sbb
int
stos
adc
leave
mov
adcl
stos
sbb
sub
mov
je
push
xchg
mov
push
pop
xor
push
mov
aam
mov
pop
cmp
xchg
repz
in
fisubrl
out
popf
repnz
cmp
out
and
cmp
out
sti
ja
sti
pop
sbb
add
adc
or
out
cmpsl
push
out
dec
scas
hlt
push
dec
sbb
ljmp
ret
addr16
sti
mov
out
cld
pop
popf
sbb
je
and
or
push
xor
mov
mov
mov
xor
fwait
sub
popa
stos
jae
std
fstpl
pop
and
or
jo
sbb
inc
sbb
enter
adc
das
mov
xor
and
aad
iret
push
sbb
jmp
pop
rorb
out
rclb
lahf
lods
inc
arpl
orb
arpl
mov
inc
add
dec
stc
pushf
bound
adc
or
lahf
inc
xor
add
xchg
in
lock
movsb
data16
add
rol
dec
and
xlat
popa
int
sub
shll
mov
mov
test
pop
jmp
push
pushf
jb
sahf
sarl
dec
and
imul
push
push
popf
adc
loop
adc
sub
pop
test
add
ja
popf
jb
lcall
mov
std
orl
ljmp
ret
data16
ja
cmp
xorl
popa
jge
fiaddl
sbb
arpl
iret
mov
mov
cltd
ficomps
int3
push
jo
fistpl
das
frstor
sti
dec
nop
addl
fcomip
jns
clc
cltd
xor
push
dec
add
xor
pop
push
lock
push
int
xor
sarl
adc
scas
int
and
mov
dec
bound
xor
sbb
xor
dec
pop
dec
push
ret
xchg
std
test
and
push
inc
mov
pushf
lods
and
cltd
and
inc
sbb
mov
add
call
icebp
rclb
lock
jg
xlat
mov
add
adc
add
push
int3
dec
xchg
aad
imul
mov
imul
adc
mov
lahf
dec
xor
icebp
ret
xchg
idivb
jns
das
push
mov
stos
movsl
dec
je
jp
sbb
aam
roll
clc
call
push
rolb
dec
sub
sub
aaa
jb
ss
rep
and
sbb
divb
sbb
inc
scas
aam
and
fldenv
out
jne
and
sbb
popa
repz
push
mov
push
pop
mov
ljmp
mov
icebp
imul
adcb
mov
dec
loope
leave
test
daa
out
test
je
adc
in
je
addl
es
sub
jbe
mov
stc
out
sub
push
shll
jp,pt
mov
push
mov
cmpsl
push
jae
lret
sbb
sahf
xorb
orl
repz
pop
xchg
js
mov
test
adc
xchg
jle
mov
add
js
sbb
ret
mov
add
cli
dec
push
ss
jo
aam
fdivrl
or
hlt
pop
testl
pop
loopne
mov
sub
movsl
icebp
pop
jno
cmp
test
addr16
lock
adc
js
lea
push
enter
ss
shll
imulb
cmp
mov
pushf
pop
mov
cmp
sbb
cwtl
mov
daa
push
xorl
xor
outsb
mov
aaa
in
jmp
adc
int3
adc
stos
mov
cwtl
xchg
jns
inc
imul
ljmp
pop
xchg
into
outsl
push
ret
xorb
lret
std
jnp
mov
sub
push
cwtl
xor
jnp
pop
lret
in
sbbl
lods
add
inc
enter
push
or
jae
add
xchg
std
jle
adc
adc
push
inc
stc
fdivp
adc
push
sub
push
sbb
call
pop
adc
rol
adc
into
imul
enter
or
jne
outsl
daa
in
dec
out
xor
cltd
pop
stc
dec
xchg
cmpsl
push
arpl
push
xor
sbb
pop
pop
andb
shlb
loopne
lods
lock
repz
xorb
adc
pop
cmc
sub
negb
push
fimull
ljmp
fstpl
cmp
pop
cld
call
mov
aas
minps
mov
mov
mov
jnp
adc
or
popa
bswap
push
or
jecxz
jge
or
pop
nop
mov
ja
xchg
faddp
sub
adc
mov
cld
dec
loop
outsb
jmp
sub
lods
cmpsl
leave
pop
ljmp
push
adc
mov
movq
or
cmpsl
out
and
fs
dec
lcall
adc
scas
cmc
add
loope
lahf
add
pop
adc
fists
mov
jl
repnz
jmp
sbb
pop
push
hlt
sub
push
inc
in
loope
mov
push
push
aam
pop
ficompl
lahf
in
movsb
or
scas
adc
enter
sbb
addb
sub
sub
pop
loop
leave
das
fsubrl
mov
iret
and
jmp
gs
je
cmp
pop
lret
ss
jmp
dec
gs
xchg
lods
jne
or
mov
dec
add
sti
scas
push
mov
sub
loopne
call
or
outsb
int3
test
jno
dec
mov
push
mov
or
aad
out
and
pop
cld
lret
pushf
stos
and
es
int
push
cmc
test
popf
xchg
cmp
dec
aas
adc
push
mov
mov
push
cwtl
daa
dec
add
push
das
loop
pop
mov
pop
std
xor
xchg
clc
sahf
mov
aam
lods
ds
out
nop
pop
jge
inc
bound
inc
lods
jmp
xor
pop
cli
and
sbb
outsl
jmp
lret
and
mov
icebp
shlb
sbbl
push
fwait
pop
xchg
cmpsb
and
mov
cltd
mov
repnz
sahf
fs
jae
mov
add
jno
xor
mov
int
das
scas
jbe
ljmp
mov
cli
mov
fbstp
xor
add
dec
lret
pusha
push
lods
into
test
loop
adc
les
jb
stc
fs
lahf
lahf
aad
mov
adc
mov
ds
mov
clc
xchg
xlat
std
sti
jmp
xchg
pand
nop
pushf
push
pop
adc
sbb
cmp
ret
imul
je
repnz
xchg
jg
lcall
stos
dec
mov
jae
dec
icebp
cmc
call
mov
xor
stc
aas
sete
in
mov
sub
fs
xchg
cmp
and
and
out
push
sbb
or
cmpsb
jae
sarl
nop
pop
jmp
nop
mov
iret
dec
gs
jb
outsb
fsubrs
sbb
mov
xorl
xchg
pop
lods
sub
aas
adc
movsl
aas
cmp
mov
cmp
push
repnz
dec
psrlq
mov
push
pop
aaa
sub
arpl
cmpsb
push
xchg
dec
pop
push
jmp
sti
out
inc
pop
nop
sbb
cmpsl
mov
shrl
mov
mov
mov
mov
ja
stc
inc
inc
sbb
inc
sub
fstl
push
out
pop
frstor
adc
mov
dec
cmp
pop
data16
orb
in
aas
xchg
icebp
pop
das
rorb
lock
notb
insl
in
sub
push
jb
dec
inc
jne
mov
lds
jecxz
mov
lods
mov
inc
cmp
sub
inc
das
lods
push
mov
inc
mov
cmp
xchg
cs
pop
mov
fbld
xchg
add
loope
adc
test
mov
dec
inc
xchg
js
stc
inc
imul
add
adc
mov
lret
mov
int3
and
adcl
jmp
test
imull
in
sbb
mov
ds
dec
push
in
fsubrp
xchg
popf
ja
xchg
loopne
outsb
mov
repnz
mov
int
and
sbb
sub
inc
pop
mov
rcrb
jle
inc
lock
inc
mov
repnz
push
sahf
adc
scas
inc
subl
movsb
sub
mov
icebp
sub
gs
push
fwait
cwtl
dec
push
xor
mov
fstpl
jnp
out
movl
add
decl
ja
pop
pop
pop
sub
inc
shl
pop
lret
in
mov
test
mov
add
in
xchg
pop
mov
mov
nopl
mov
push
push
lea
dec
mov
mov
add
ja
enter
jo,pn
dec
add
out
add
dec
jle
loop
mov
lret
ret
rorb
hlt
gs
add
test
inc
push
jnp
sbb
xchg
rolb
imulb
add
aad
iret
inc
int
jns
xor
jns
mov
inc
jle
dec
mov
sub
lret
popf
adcl
add
dec
mov
mov
push
es
mov
ss
mov
stos
push
imul
jno
xchg
or
cli
bound
int3
pop
out
inc
cld
ds
outsl
mov
sub
push
pop
mov
sub
push
fsubr
jbe
cmp
ja
not
nop
and
sbb
lret
aas
mov
inc
mov
push
inc
cmp
test
jnp
int3
push
scas
ficomps
and
xorb
add
xchg
jb
jno
adc
and
push
sub
xchg
xor
push
adc
or
push
sbbl
movsb
xor
in
jae
dec
lret
mov
ficomps
xchg
pop
jecxz
xchg
clc
jo
loope
jne
daa
cmp
cmpsb
fcoml
mov
stos
sbb
mov
aam
mov
leave
out
sti
repnz
cmp
dec
out
fwait
or
pusha
test
add
clc
or
mov
push
sub
inc
mov
nop
mov
push
andb
jg
mov
cmpsb
not
std
aaa
pop
jno
jb
mov
mov
stos
dec
lret
adc
jecxz
inc
xor
mov
xchg
ss
int3
pusha
js
adc
and
lea
dec
push
js
cmp
dec
pop
inc
mov
mov
cmp
ret
iret
push
cmp
daa
xchg
cli
fstpt
pop
sbb
ss
mov
fists
stos
cmp
out
out
sub
mov
inc
roll
imul
cwtl
shll
lds
mov
push
jecxz
movsl
ljmp
fisttpll
in
pop
fisttpll
adc
xchg
pop
call
lds
push
jns,pn
daa
xchg
test
push
loope
inc
in
add
dec
cmpsb
out
mov
jnp
and
dec
insb
insb
pop
fdivl
and
pop
mov
ljmp
push
ljmp
fs
sbb
jmp
outsl
push
xchg
jnp
mov
inc
or
pop
push
in
xchg
fdivrp
or
push
jmp
add
adc
scas
jl
test
push
add
test
js
sub
jecxz
xchg
pop
test
xor
data16
popf
mov
inc
cli
lods
mov
push
mov
lret
push
nop
fwait
mov
jecxz,pn
sbb
fistps
xor
jb
mov
arpl
insl
dec
cli
mov
push
xor
pushl
or
inc
fucomp
and
push
mov
lret
pop
aaa
jmp
inc
dec
les
out
mov
cltd
dec
loope
add
xor
pcmpeqd
pop
test
fsubrl
adc
jnp
mulb
lahf
imul
into
inc
xchg
outsb
divb
xor
fisttps
in
outsl
xor
xchg
mov
outsb
and
sub
sub
adc
jg
cltd
setne
lahf
pop
jmp
fisubrl
lret
jns
pop
mov
pusha
inc
xchg
mov
mov
ss
iret
push
pop
daa
dec
inc
push
pop
imull
xorb
push
aas
inc
mov
ret
mov
imul
rcll
xor
movsl
not
adc
decb
in
test
fwait
pushf
jle
sti
cmp
nop
testl
push
iret
imul
dec
ja
popa
mul
xor
add
lahf
pop
pop
push
mov
mov
push
jge
cltd
inc
fmulp
popf
imul
jge
pushf
push
adc
dec
shr
int
xchg
aaa
cltd
push
ret
cmpsl
jne
pusha
aam
add
ret
movsb
jp
xchg
xchg
in
cwtl
push
insl
cmpb
je
xchg
fs
hlt
add
jae
mov
cmp
cmpsb
sbb
xchg
aaa
mov
pop
push
pop
cmp
xchg
xchg
mov
pop
rcrl
xchg
push
stc
dec
xor
adc
sbb
fisttpl
addr16
pop
loopne
inc
dec
ret
in
imul
sub
mov
sbb
sbb
push
xchg
pop
sub
stc
push
push
adc
das
adc
xor
mov
call
fisubrs
lea
cltd
cmpb
jl
lret
cmovle
mov
add
enter
inc
sub
outsl
adc
fwait
mov
into
aam
mov
cmp
xor
dec
push
mov
or
test
repz
mov
sti
jbe
popf
daa
fildl
test
test
nop
add
fmulp
fisubrs
push
loop
jb
lret
push
subb
adc
cmc
push
cmp
sbb
ss
hlt
mov
shll
fldt
add
xlat
stos
sbb
ds
mov
insl
sahf
mov
aaa
mov
fs
fdivl
pop
scas
mov
dec
icebp
add
sub
push
mov
xchg
pusha
add
lods
addr16
dec
mov
test
jne
in
inc
mov
ds
addr16
divb
sahf
scas
popa
pop
pusha
pop
fsubrs
dec
inc
scas
jl
popa
iret
popf
scas
xchg
call
mov
lcall
inc
pop
lds
mov
push
mov
jns
aad
push
enter
lods
xchg
jmp
inc
jle
test
enter
sub
cmp
icebp
sbb
mov
xchg
mov
loope
sbb
xchg
cmp
stc
jae
xchg
pop
inc
push
or
cmp
imull
mov
sub
adcl
xchg
stc
mov
outsl
pmuludq
repnz
pop
xor
push
xor
les
test
and
xor
in
sti
xor
mov
ror
dec
push
cli
cli
cmp
enter
loopne
jl
mov
push
dec
sahf
out
lea
cmp
lds
cmpsl
nop
sub
mov
xlat
sbb
mov
xor
ds
int3
push
sub
icebp
pop
mov
xor
add
pusha
mov
mov
cwtl
add
mov
enter
call
jecxz
mov
inc
and
fsubl
push
in
jmp
sbb
fildll
hlt
int
jp
push
xchg
les
imul
sbb
insb
jne
js
loope
mov
lret
sbb
popa
mov
jge
addr16
pusha
jmp
push
mov
inc
add
pop
mov
push
mov
jle
sbbl
jae
ficoms
jbe
fdivrs
mov
jl
add
push
sbb
loop
push
lahf
stos
jecxz
lret
mov
xor
inc
pop
jns
or
cmp
inc
jno
jge
jae
cwtl
hlt
inc
adc
sbbb
adc
inc
add
fdecstp
cmp
xor
push
add
popa
xor
data16
sbb
adc
mov
mov
cmp
test
pop
mov
push
int
movsl
push
ds
roll
push
lcall
dec
xor
or
sbb
or
push
mov
cli
aas
int3
mov
xlat
cli
xor
icebp
or
in
into
call
clc
je
or
adc
mov
pcmpgtw
js
and
decb
pop
in
bound
pop
int
and
mov
in
push
adc
xchg
addr16
push
xchg
lods
pop
stos
mov
into
push
loope
cs
jnp
jns
out
pop
or
shll
adc
add
rorb
sbb
sbb
clc
js
dec
dec
daa
cld
loopne
icebp
shll
das
or
stc
test
lret
inc
imul
outsl
xchg
je
xchg
pop
cld
je
aas
insl
das
ficompl
mov
pop
or
imul
cmpsl
sbb
roll
add
ret
imul
sbb
cmp
xor
fists
es
pop
add
xchg
cmp
xchg
xor
dec
push
jle
or
stos
pop
icebp
jecxz
mov
outsb
ljmp
push
and
cmp
adc
pop
cmpsb
jecxz
out
rolb
lret
pop
test
rorl
lahf
jecxz
stos
push
cmp
mov
fstl
mov
push
and
je
push
pop
inc
shl
pop
in
es
out
sbb
insl
leave
adc
popf
dec
pop
lds
popa
lcall
stc
sahf
cmp
out
scas
jmp
xchg
and
sub
mov
mov
xchg
ss
hlt
sbb
cs
dec
stos
std
sbb
pop
mov
push
in
and
mov
jmp
mov
mov
fisubl
cmpsl
add
or
sti
mov
ja
adc
xchg
mov
loopne
std
jle
sahf
mov
pop
es
pop
ret
out
cmc
push
xchg
fdivl
jae
int
xorl
sub
insl
inc
fcomps
xor
push
fidivs
or
idiv
mov
rcrb
mov
mov
mov
scas
and
or
xor
xchg
shrl
fisttpll
push
hlt
cmp
lahf
push
lahf
xor
sahf
lret
mov
loopne
push
push
mov
lahf
sbb
or
dec
repz
iret
mov
scas
fdivl
into
xchg
les
push
and
clc
cmp
mov
add
ret
out
fnstsw
mov
lock
inc
push
sub
add
mov
adc
lret
iret
loop
push
jns
or
jae
mov
pop
mov
pop
andl
scas
sarb
lock
jp
inc
repnz
mov
daa
loopne
int
cltd
pop
int
in
mov
lret
xchg
push
imul
mov
mov
and
jmp
repz
xlat
mov
andl
sbb
xchg
push
add
xchg
data16
sub
jb
sbb
in
and
or
add
sbb
cmp
xor
aaa
mov
xor
int3
mov
xlat
outsb
pop
mov
mov
bound
jl
mov
out
adc
mov
fisubrs
push
lahf
shrl
mov
jb
stos
or
push
sub
xchg
xor
movsl
roll
add
pop
cmpsl
jp
jmp
cmp
push
ds
pop
pusha
xchg
pop
das
xchg
stos
inc
cmpsb
stc
notl
push
lea
mov
xchg
iret
sub
icebp
je
xor
fwait
stos
aaa
inc
insb
mov
test
outsb
clc
fs
mov
inc
in
fisubs
jp
sub
mov
xor
bound
and
push
dec
fsubrs
loope
jae
sub
scas
push
or
lret
add
loop
pop
sub
xlat
pop
pop
fldl
and
out
and
mov
or
jnp
mov
xchg
imulb
es
in
push
call
testb
cltd
mov
js
enter
rorb
fimull
sub
pop
jae
push
std
pop
cmp
imul
jle
jp
cmp
mov
aam
dec
sbb
push
mov
cmpsb
and
mov
or
in
or
sahf
mov
cmc
pop
icebp
dec
xor
testl
aad
push
out
fstl
scas
shrb
push
repnz
sub
cmp
jmp
cwtl
jecxz
add
ds
das
and
insb
test
push
jbe
rorb
inc
inc
insl
imul
psubq
jb
mov
mov
push
cmp
movsb
rcll
imul
xor
pop
lahf
jns
test
xor
cmpsl
sti
xchg
cmp
inc
sbb
pop
xlat
data16
stos
push
cmp
sbb
jae
cmpsl
sbb
push
js
dec
mov
rclb
hlt
leave
mov
loop
jo
jns
dec
push
or
or
xchg
xchg
fsubl
in
cmp
push
js
daa
adc
ficomps
push
stc
pop
fdivs
dec
out
addr16
out
jns
aas
jne
jae
sub
jmp
stc
jno
ljmp
pop
sbb
std
mov
pop
jle
mov
mov
sbb
sti
inc
loope
sbb
inc
jp
cli
jl
scas
mov
push
xchg
push
push
cli
mov
mov
mov
or
in
push
cli
dec
and
inc
sbb
popf
push
fsubrs
mov
push
mov
cld
inc
popa
out
cli
std
xchg
hlt
dec
jb
shlb
iret
xor
mov
xchg
jg
mov
inc
cmp
lcall
push
sbb
mov
push
inc
test
sub
mov
sub
mov
mov
cwtl
es
mov
and
stos
xlat
xchg
mov
into
mov
lea
scas
imull
icebp
and
pop
inc
sarl
cld
fistps
mov
mov
gs
push
add
dec
or
mov
sub
push
xor
testb
inc
test
mov
add
popf
jnp
mov
clc
loope
aad
or
outsl
dec
dec
add
movsl
insb
pop
and
inc
mov
push
pop
jge
int3
rcl
and
lahf
je
clc
cmp
mov
add
enter
in
push
inc
pop
lds
sub
mov
sbb
test
repnz
div
jno
movsl
pop
sbb
push
sub
inc
inc
int
sbb
stc
insl
adc
js
push
jmp
pop
jg
cmp
xchg
sarl
fs
adc
dec
hlt
inc
cld
xor
fbld
jnp
or
in
imul
cmp
dec
adc
adc
scas
pop
mov
push
jno
mov
outsb
cwtl
and
cmp
dec
push
mov
aam
push
mull
mov
aaa
mov
pop
cli
and
sub
int3
inc
mov
and
jno
mov
scas
test
jo
mov
stos
ss
and
pop
popa
pushf
ss
pop
or
mov
out
ljmp
leave
leave
mov
mov
dec
gs
es
or
xchg
and
and
adc
inc
aaa
lret
ljmp
ljmp
ss
sbb
and
and
and
mov
xor
js
adc
mov
cmp
sarl
xor
ja
dec
dec
rol
repz
jns
mov
xor
and
addl
or
xor
mov
sarl
xchg
pop
mov
mov
jbe
insb
out
adc
add
sahf
xchg
jo
add
addr16
cmpsl
push
xor
stos
cmp
sub
loopne,pn
add
negl
adc
scas
mov
sti
inc
loope
cli
dec
mov
das
inc
push
mov
cld
repnz
mov
xor
add
dec
icebp
lret
filds
sub
mov
inc
rcrb
add
in
faddl
jge
push
dec
outsl
rcl
int3
sub
test
sub
add
ljmp
pusha
aad
xor
cmp
enter
adc
loopw
or
cmp
inc
xor
xor
xlat
jno
repz
jl
mov
dec
jle
xchg
mov
movsb
add
cld
jnp
xchg
stc
outsb
clc
mov
lods
insl
std
or
push
xor
push
mov
push
es
ret
rclb
mov
push
gs
cmc
push
test
adc
mov
cmpsl
cmp
imul
jp
mov
mov
mov
add
sbb
lods
daa
lret
mov
leave
xor
pop
orl
iret
rorb
xor
push
cmp
and
sbb
adc
push
mov
mov
fdivl
movsb
sbb
mov
add
test
mov
fisttps
inc
inc
pop
scas
add
dec
push
movsb
in
inc
add
stc
fcoms
cs
push
mov
clc
incl
adc
dec
pop
loop
mov
pop
stos
push
outsb
arpl
mov
push
bound
int3
cld
cld
add
and
data16
adc
dec
insl
xchg
and
mov
mov
mov
adc
jmp
insl
dec
or
jb
cmp
das
jo
into
jge
xchg
in
aad
call
dec
mov
pushf
or
inc
test
sbb
rcr
mov
mov
push
clc
push
jg
pop
lea
mov
les
push
mov
je
jb
mov
or
and
arpl
sub
dec
xor
int
cmp
jne
push
xor
sbb
mov
adc
mov
mov
mov
or
aas
lret
add
pop
sbb
add
roll
push
fiadds
and
dec
lods
pop
shlb
cmpsl
mov
shrl
dec
mov
cld
mov
sarb
fwait
sbb
aas
aad
mov
or
out
stc
mov
roll
add
call
dec
xlat
add
test
and
push
fdivrs
jmp
out
inc
out
fnstenv
les
sti
cmp
rcl
pop
pop
inc
inc
add
dec
aad
push
fistpl
or
lea
fsubr
fdivr
xor
dec
inc
das
adc
xchg
pop
xchg
repz
adc
adc
aam
outsl
inc
adc
enter
mov
jae
decb
sbb
das
push
enter
outsb
jne
push
cmp
sub
sub
cli
dec
in
sbb
ss
push
test
dec
insb
cmpb
adc
popf
repnz
mov
jb
mov
sti
xor
mov
cmc
outsl
andb
mov
jb
mov
sbb
jecxz
leave
mov
fidivrl
push
les
add
sarb
dec
xor
incb
ja
cltd
sbb
and
sbb
xor
inc
adc
xorb
out
push
into
xor
push
push
sub
jno
adcl
xchg
cmpsb
movd
das
adc
fisttps
xor
gs
fwait
xor
jno
sbb
sub
adc
bound
jmp
shrb
scas
jmp
add
mov
inc
js
xchg
fisttpll
sub
or
adc
repz
stos
or
dec
loopne
iret
scas
aaa
sub
mov
daa
xor
into
sub
cmp
dec
sbb
popa
loop
mov
in
movsl
jle
jno
test
imul
rcr
int
jnp
call
sub
data16
pop
stos
push
leave
sbb
xor
push
lods
and
push
int
sub
and
xlat
stos
add
push
sarl
sbb
mov
xor
xchg
or
nopl
or
into
adc
ljmp
mov
lret
rorb
shll
cmpsl
pusha
adc
xor
ret
adc
aaa
xchg
pop
roll
inc
lods
cmp
pop
jmp
shlb
sub
push
into
mov
enter
pop
dec
out
and
addb
loop
pop
bound
mov
imull
in
loope
clc
xor
inc
loopne
loope
cs
xchg
mov
dec
iret
jnp
popa
mov
iretw
clc
mov
aam
imul
or
mov
outsl
roll
push
xchg
inc
cwtl
hlt
outsl
iret
stos
je
push
loopne
test
push
push
repz
xor
push
imul
ret
lret
lret
fcmove
arpl
push
dec
jae
out
popa
and
mov
add
push
or
movsb
dec
cli
loopne
aad
inc
xor
mov
div
xchg
in
cs
xchg
xchg
mov
insl
mov
cmc
adc
shl
aam
int3
popf
pop
cs
icebp
lods
int3
add
mov
sbb
js
mov
push
inc
adc
add
and
in
xor
jno
inc
inc
mov
lds
adc
imul
push
imul
sahf
cmpsb
out
push
lods
xor
test
pop
int3
sub
fistl
cli
mov
push
sub
add
jg
xchg
lret
jne
movsb
lea
xchg
loop
inc
lea
insb
push
daa
mov
mov
cs
std
fistps
adc
xchg
movsb
sbb
cmp
cltd
jns
imul
push
test
jl
jp
jns
sbb
push
mov
mov
arpl
adc
out
sbb
sub
add
jp
test
jns
cmpsl
add
adc
xchg
nop
cmp
mov
xorb
cmpsb
cmp
xchg
lahf
cli
mov
daa
xchg
fldl
jno
adc
subl
fstpl
bound
pop
pusha
sub
mov
scas
and
sub
pop
clc
mov
jecxz,pn
pop
or
mov
adc
cmp
scas
add
lods
pop
lods
shr
lea
mov
pushf
pop
stc
ja
mov
inc
jo
lcall
daa
xchg
fiadds
movl
sub
cmp
addb
push
rclw
jg
cmp
mov
pop
jae
lahf
push
pop
lcall
lods
sub
inc
inc
fs
sub
xlat
fwait
rclb
xchg
pop
mov
and
cmp
inc
rcrb
aas
sbb
test
mov
pop
sbb
daa
jo
mov
mov
add
inc
stos
push
sub
lods
inc
test
sarl
jmpw
pusha
pop
xor
movsl
sbbb
int
xchg
add
lock
je
std
out
mov
int
repz
call
and
xchg
or
leave
cmpsl
jecxz
or
mov
aad
dec
push
pop
ljmp
xchg
adc
out
roll
sbb
icebp
enter
loop
pop
daa
adc
jge
jmp
add
sub
in
dec
rorb
pop
insb
mov
ja
ret
test
or
das
sub
insl
push
jl
pop
mov
mov
dec
add
dec
dec
jecxz
fisubs
pop
or
repz
cltd
test
cmpsb
xchg
in
dec
mov
stc
arpl
aad
mov
dec
xlat
xchg
cmp
and
xor
or
out
sbb
pop
mov
push
mov
mov
lahf
stos
sub
mov
push
pushf
mov
lret
jmp
push
mov
fisttpl
xor
test
dec
ds
jg,pt
cmp
jle
push
mov
dec
aaa
les
cmpb
inc
mov
xchg
sbb
lds
xlat
mov
sub
sub
mov
adc
fiaddl
mov
ljmp
out
sbb
sub
sub
pop
mov
in
or
int3
or
cmpsb
loop
test
mov
or
or
push
pop
push
pop
unpckhps
jnp
jb
in
test
pop
cli
cmpsl
adc
xchg
movb
and
lea
test
cmc
std
lahf
lds
pop
fimull
inc
cmp
mov
mov
sbb
dec
pop
pop
mov
adc
cli
or
inc
cmp
mov
mov
sahf
add
shll
movsw
out
dec
xchg
pop
sbbl
xor
jne
int
fisubrs
pop
popa
mov
sub
dec
mov
jp
pop
mov
xlat
mov
xor
test
push
adc
nop
adc
mov
xorb
into
adc
sub
xchg
shlb
fadds
dec
lret
loopne
inc
fiaddl
xor
add
push
jnp
decb
mov
outsl
cmc
in
pushl
pop
and
cs
data16
js
sub
lret
xchg
mov
fistps
adcl
call
cmc
xchg
lcall
out
pushf
or
repz
mov
mov
das
repz
shll
lahf
cli
mov
dec
and
dec
movsl
popa
lods
popa
gs
cmpsl
mov
adc
sbb
cmp
inc
mov
mov
loopne
stos
add
sbb
sbb
mov
xlat
push
add
xchg
in
and
pop
repnz
daa
leave
adc
movsb
jb
add
addl
sbb
xchg
pop
jne
cmp
insb
xchg
cmp
inc
gs
jbe
test
aaa
fwait
push
sti
leave
cmp
ljmp
adc
ret
addr16
pop
and
push
push
es
jo
in
fsubl
fstps
pop
pop
psubsb
pop
pop
sti
int3
push
sbb
dec
push
push
inc
adc
aam
jno
jb
mov
icebp
sub
inc
inc
mov
div
shlb
repz
push
andl
enter
lret
iret
hlt
outsb
dec
mov
cwtl
mov
aad
mov
and
imul
addr16
inc
jbe
fmull
and
adc
pop
aaa
inc
sahf
movsb
insl
adc
add
mov
call
leave
xchg
pop
adc
movsb
and
add
sub
shll
jno
pusha
dec
jo
mov
mov
and
ljmp
adc
jge
lret
insb
jle
sahf
fs
cmpsb
jecxz
sbb
dec
enter
sub
adc
ror
and
push
jo
nop
sbb
sub
leave
and
mov
jne
mov
dec
jl
sbb
mov
push
popf
inc
addr16
cmp
lock
stos
mov
cld
pop
xorb
or
ss
test
jg
unpcklps
sub
xchg
into
add
je
lods
jg
cmpb
xchg
sbb
mov
jne
jbe
or
lods
popf
mov
push
jecxz
rolb
sbb
xlat
sbb
xlat
and
mov
popf
push
stos
fildl
cmp
stc
es
jp
aaa
ret
popa
sarb
clc
dec
push
fnstenv
adc
jb
push
xlat
lods
inc
leave
push
push
iret
or
push
aas
lods
mov
adc
mov
pop
sub
or
inc
jmp
adc
push
dec
and
icebp
push
push
nopl
mov
push
mov
mov
mov
js
iret
jp
ret
outsl
pop
sub
cmpsb
pop
aad
stos
xlat
je
fwait
mov
pop
adc
jecxz
sahf
or
or
cmp
dec
and
push
addr16
xlat
mov
xor
xchg
mov
inc
cmp
mov
inc
pop
adc
or
xor
sub
or
adc
mov
ljmp
lds
add
stos
push
inc
pop
jnp
jge
test
jne
dec
pop
out
je
les
cmp
xchg
inc
imul
sbb
dec
out
stos
push
adc
aad
and
jo
mov
insl
cmpsb
rclb
fwait
sbb
not
pop
mov
sub
scas
and
frstor
lea
inc
jmp
mov
sti
cmp
outsb
in
mov
and
inc
cmpsb
mov
imul
cld
mov
hlt
xchg
lods
jo
xor
pusha
repnz
adc
jnp
sub
adc
bound
fs
je
in
sti
xor
sub
stos
out
test
in
imul
test
or
adc
mov
xor
push
ret
lods
xor
dec
pop
ret
mov
fwait
mov
pop
cmp
lcall
xchg
jg
mov
mov
inc
jo
fisubrl
daa
jge
inc
pop
stos
jge
aam
lods
jp
mov
or
lods
mov
sub
fisttpl
fcmovnb
fldt
popf
cltd
lock
add
jp
fistl
sahf
jp
pop
pop
fisttpll
daa
popf
repnz
mov
pop
idivl
aaa
xchg
daa
sub
pop
imul
sbb
or
pop
sub
pop
test
shlb
inc
shll
inc
das
cwtl
int3
xor
dec
xchg
adc
ja
cltd
ja
mov
stos
mov
jae
sbb
xchg
mov
sbb
sub
cmpsl
xor
cmp
push
cmpsb
stos
lods
imul
jno
jns
mov
faddl
mov
mov
inc
jns
inc
sbb
pop
pushf
into
push
add
push
push
lahf
pushl
sub
fucom
jmp
repz
in
in
lcall
push
pmulhuw
jae
cmp
mov
adc
dec
mov
inc
xor
cmp
inc
inc
lds
inc
dec
inc
jmp
inc
mov
sbb
jl
inc
cwtl
fdivrs
mov
dec
out
iret
les
sub
mov
sqrtps
mov
fstpt
sub
adc
cmc
mov
cmp
xchg
and
je,pt
ret
mov
or
movsb
mov
pop
sub
mov
adc
roll
xor
mov
int3
push
stos
call
dec
adc
addr16
pop
xor
xor
inc
sub
rolb
mov
hlt
sub
mov
jbe
cmp
push
and
sub
idivb
sti
loope
xchg
xchg
cld
outsb
mov
jo
push
outsl
sub
or
mov
mov
shll
loop
int
xchg
cmpsl
fwait
cld
insb
fsubr
xor
xor
outsl
lock
cmp
loop
sbb
dec
or
negb
inc
int3
ja
insb
insl
lcall
ret
sbb
es
dec
pop
or
arpl
add
aaa
mov
lcall
sub
bound
add
icebp
out
mov
clc
xchg
push
fwait
xor
sbb
out
stos
nop
pop
mov
fisubrl
xchg
add
mov
js
cmpsl
mov
mov
mov
xor
loope
fwait
pop
decb
data16
outsl
push
adc
inc
ss
xlat
aaa
fisubrl
idivl
xor
stos
sti
popf
pop
mov
xor
mov
push
addr16
mov
push
cmp
aam
mov
int3
inc
sub
sbb
jns
dec
and
stos
adc
mov
outsl
push
push
cs
dec
sub
popa
xor
hlt
push
notl
fnsave
leave
pushf
fs
mov
cltd
cli
test
call
mov
out
adc
leave
xor
in
aas
test
inc
test
mov
sub
bound
lods
jg
fidivrs
cld
jle
es
mov
add
or
js
icebp
jb
mov
or
in
push
xchg
repz
cmp
aaa
push
pop
jnp
push
pop
jb
lock
in
out
xchg
and
stos
out
ror
insb
fnsave
dec
inc
mov
push
shll
push
or
jbe
sbb
cmc
imul
outsb
xor
or
jnp
xchg
aaa
popf
mov
push
push
mov
push
push
daa
xor
inc
cmpsb
int3
xlat
push
clc
inc
loop
decl
mov
lcall
jo
or
in
inc
fisubrl
ror
das
lea
dec
push
xchg
imulb
xchg
push
mov
movsl
lds
sbb
push
dec
movups
add
mov
lcall
xchg
sbb
imul
mov
daa
adc
mov
ret
daa
or
jb
and
inc
lock
push
sti
adc
xor
sub
mov
push
cmp
add
sahf
push
inc
mov
mov
dec
pushf
into
or
xor
dec
stos
or
xchg
jp
das
push
lods
leave
shlb
dec
add
inc
xlat
dec
jns
pop
sbb
jmp
inc
mov
cmp
push
mov
dec
cmpsl
cmpsb
push
cli
imul
lods
adc
dec
cmpsl
ljmp
mov
scas
add
test
dec
sub
popf
in
leave
shll
pop
fdivs
adc
adc
adc
out
in
andb
mov
xchg
cmp
and
fimuls
pusha
pop
dec
enter
es
jg
mov
sbb
cmp
push
ljmp
and
lcall
lock
xchg
mov
nop
push
lea
imul
aaa
or
and
aaa
mov
adc
mov
add
stc
loope
daa
cmpsl
addr16
daa
test
idivl
pushf
in
data16
sub
incb
pop
mov
nop
xor
hlt
std
xor
outsl
xchg
jge
add
or
fidivrs
jbe
sub
les
lods
mov
jmp
lahf
xor
add
lea
mov
movb
leave
jb
data16
sub
insl
movsl
loop
mov
cmpsl
pop
push
mov
inc
xor
movsb
jmp
sti
mov
xchg
add
cmp
jb
cmpsb
add
test
sub
fsubrl
mov
push
outsb
jno
push
les
leave
cli
pop
enter
sbb
mov
sub
jl
dec
pop
movsl
mov
mov
sub
add
popf
dec
or
xor
cmp
cmpb
shlb
fstpt
push
mov
ss
sub
jne
sub
loop
mov
cmp
sub
imul
and
frstor
jge
imul
push
push
rcrb
ret
xchg
pushl
inc
les
jb
jmp
addb
sub
pop
adc
mov
sar
dec
cmpsb
push
adc
les
das
in
gs
or
inc
lahf
les
mov
int3
dec
xor
push
mov
lock
mov
std
fstl
shll
push
xchg
icebp
arpl
ret
outsl
flds
jne
jmp
idiv
add
sti
mov
shr
cmpsl
cli
mov
aam
jecxz
pop
addr16
push
enter
or
mov
mov
mov
adc
push
push
dec
xchg
push
aam
xor
push
scas
pop
lahf
fisubs
cmp
cmpsb
jecxz
xlat
sbb
inc
addr16
sub
mov
jo
js
or
push
jmp
inc
fidivrs
dec
es
stos
ljmp
shll
push
test
mov
mov
mov
cmp
dec
adc
pop
mov
int3
and
popf
xchg
push
mov
push
enter
xor
gs
icebp
mov
push
mov
and
push
out
ficoml
cmpsl
adc
pop
sti
xor
rclb
pop
cmpsb
lret
mov
ss
ss
mov
pop
leave
fimuls
jmp
sbb
xchg
imul
xchg
stos
iret
inc
iret
cmp
push
jecxz
pusha
sbb
add
ficoml
xor
addr16
jecxz
jl
or
push
int3
mov
cwtl
out
mov
add
mov
in
loope
or
cltd
loopne
add
rorb
inc
or
pusha
pop
cmc
ja
loope
and
jb
int3
das
aad
sbb
xor
push
jns
loope
mov
mov
movb
inc
mov
jl
sahf
mov
adc
test
cmp
leave
sbb
ret
cwtl
push
push
mov
xchg
pop
mov
jp
lret
add
mov
bound
xorl
stc
push
xchg
popa
dec
outsl
out
lahf
or
cmp
mov
dec
fcmovbe
dec
push
enter
test
stos
vmread
mov
mov
cmp
mov
xchg
lret
pop
stos
pop
jp
xchg
ja
aam
clc
jp
and
xlat
pop
nop
shr
movsb
mov
inc
cmp
xor
lahf
enter
jge
fwait
push
lea
pushf
push
xorl
jp
xchg
std
addl
sub
lods
mov
test
outsl
pop
adc
cmp
add
adcb
es
std
xchg
mov
loope
mov
adc
add
lds
mov
ret
cmpsl
movsl
pop
pop
push
scas
pop
imul
int
cltd
sub
pushf
iret
loopne
movsb
clc
rcll
jmp
lock
fidivl
mov
insb
sub
movsl
aaa
mov
or
inc
in
cmp
pop
xchg
loope
cs
outsb
sub
into
loopne
pop
lods
ja
mov
rolb
rolb
xchg
push
pushf
push
scas
pop
jmp
cwtl
je
mov
fcomi
lret
pop
sbb
dec
sbb
jb
mov
lcall
popa
cwtl
fcoms
int3
mov
pop
sahf
pop
or
gs
rcl
out
inc
mov
add
and
or
dec
push
push
pop
imul
test
push
js
or
inc
jno
inc
sbb
es
push
cmpsl
lock
in
or
jg
loope
aam
add
jg
adcl
jb
insl
mov
aas
sbb
fidivs
sbb
ret
out
push
stos
outsb
cmpsl
xor
xchg
pop
scas
js
lods
imul
dec
pop
fsubs
push
jge
insb
imul
inc
lahf
or
daa
mov
cltd
sbb
or
negl
loop
xchg
aam
cs
insb
lret
into
and
icebp
out
aad
insl
add
int3
dec
test
xchg
mov
out
pop
dec
mov
xchg
xchg
mov
clc
pop
and
cmp
repz
ret
mov
xchg
pop
repnz
push
fdivrs
xchg
sub
mov
mov
and
ss
or
mov
fcoms
daa
ror
cmc
js
xor
xor
inc
dec
cmp
xor
xchg
jbe
xchg
mov
add
sub
ss
rcll
xor
and
pop
andb
or
lret
push
xchg
incl
incl
adc
xorl
movsw
cld
sub
inc
scas
shlb
xor
inc
fildl
jno
test
xchg
gs
jp
cmp
or
stos
jge
dec
xlat
pop
testb
std
test
lret
out
les
mov
adc
lock
mov
scas
sti
inc
mov
out
mov
popa
test
in
pop
stos
pop
orl
ficompl
ljmp
lods
std
mov
movd
lret
div
imul
dec
addl
insl
and
in
inc
mov
lahf
jnp
push
fstpt
pop
xor
lcall
xor
push
ret
cmp
inc
cmp
loop
mov
cmp
dec
push
std
stos
leave
jne
mov
ror
push
xor
test
popa
mov
sbb
sub
sti
mov
jb
je
clc
mul
push
scas
sbb
lret
lcall
push
in
pop
jno
jl
test
mov
test
add
popf
xchg
sar
mov
shrl
add
mov
adcl
cmpsb
dec
outsl
pop
insl
pop
orb
inc
cwtl
jmp
dec
js
add
add
imul
in
scas
and
aam
icebp
xchg
popf
mov
push
sbb
xlat
test
fildl
jp
adc
mov
dec
fimull
mov
xchg
fnsave
cmp
xchg
cmp
sar
or
nop
stc
mov
mov
and
mov
mov
adc
fs
and
or
fmuls
cmc
mov
scas
jg
push
stc
lods
add
mov
lahf
inc
pop
mov
ja
insb
nop
test
out
inc
mov
add
daa
cmp
inc
stos
pop
je
xchg
addr16
lret
adc
mov
mov
push
sbb
rclb
ret
add
movsl
or
dec
xor
mov
cld
adc
inc
fmull
pop
imul
mov
dec
fwait
adc
jb
scas
es
stc
adc
and
mov
arpl
jno
out
jno
xor
sub
icebp
into
ss
pop
loopne
test
subl
fcoms
mov
ficoms
movsl
ja
jecxz
mov
xchg
sbb
pusha
fstl
mov
das
push
in
mov
pop
fdivr
xor
fs
int3
jmp
loopne
out
lods
insb
push
pop
lods
adc
xchg
mov
dec
sti
adc
outsl
add
loop
orl
add
out
adc
mov
pop
mov
int
and
adc
inc
sbb
push
cmp
jb
adc
xorl
pop
jge
and
push
addr16
pop
iret
js
jmp
fsubrs
ret
fadds
pop
jae
dec
and
adc
dec
pushl
in
jne
aad
sbb
loopne
shll
dec
out
add
movsw
adc
pushf
sti
inc
cmpsb
add
jb
ficompl
pushf
insl
daa
inc
jae
test
iret
mov
mull
std
stos
in
push
push
mov
inc
sbbl
inc
mov
dec
sub
lret
fiadds
push
and
clc
ja
shr
rorl
rorb
cltd
push
push
mov
out
xor
mov
ret
shll
xchg
aam
ret
add
or
loop
push
mov
les
cmp
jle
push
pop
shlb
or
rolb
cmc
arpl
shrb
push
orl
bound
out
jl
xor
or
mov
out
pop
jns
pop
push
out
xchg
jae
inc
dec
xchg
sub
rcl
jp
fs
or
xchg
xchg
jg
test
test
test
sbb
and
idiv
mov
sbb
sbb
enter
and
inc
push
test
mov
jmp
xchg
iret
aam
in
jmp
jecxz
sub
inc
aas
sbb
adc
mov
out
sarb
loopne
jae
test
xchg
cmc
inc
arpl
stc
jns
push
xchg
pop
in
adcl
mov
fdivs
xor
mov
aam
cmpsl
pop
xlat
scas
jl
add
data16
xchg
push
push
sub
mov
push
pop
aaa
mov
adc
scas
pop
outsl
mov
push
rorl
shrb
mov
cwtl
popf
push
cli
adc
and
int3
or
dec
sub
mov
in
addr16
adc
fcompl
cmpsl
and
popf
sbb
and
mov
gs
in
cmpsb
or
arpl
add
into
and
cmp
xchg
xlat
rol
xorb
sub
mov
icebp
cltd
push
clc
mov
sbb
je
jb
fstps
pop
call
xchg
repnz
insl
popf
inc
negb
inc
dec
insb
inc
cmp
cmp
xlat
adc
jo
or
cmp
mov
out
pop
dec
xor
pop
xchg
push
lods
jle
jle
mov
mov
xchg
call
lahf
xchg
adc
iret
push
stos
push
sbb
inc
ret
rcrl
aaa
lods
pop
fwait
lcall
in
fdivp
js
dec
cltd
ds
xchg
adc
pop
hlt
or
jae
push
leave
arpl
mov
jae
pop
sub
sbb
mov
repnz
icebp
leave
mov
ds
out
push
pop
push
cmp
stos
jne
jp
dec
push
mov
xchg
sub
addr16
dec
dec
and
call
xlat
test
cmpb
leave
jp
mov
loop
orb
jnp,pn
out
sahf
jb
pop
ss
sarl
inc
and
mov
stos
xchg
mov
ljmp
xlat
test
jecxz
fists
fucomip
movb
sub
mov
add
push
cmp
mov
fdiv
push
sahf
outsl
adc
and
shlb
scas
subl
pop
mov
dec
scas
mov
shl
mov
inc
decl
data16
jle
ret
orb
pop
ljmp
shrb
data16
push
push
push
sub
popa
push
leave
xorb
adc
insb
mov
add
pop
pop
mov
jae
rcr
in
or
shll
lcall
rcll
jb
ret
popf
mov
adc
popa
xor
jno
mov
lods
jl
loop
mov
or
and
and
add
stos
sbb
insb
popf
test
dec
std
pop
pop
cmp
or
stc
sub
jecxz
jbe
lds
inc
cli
or
inc
popf
fldl
gs
int3
cmpsb
sub
andb
call
fildl
loop
xchg
in
mov
notb
nop
push
outsb
std
les
xchg
in
rolb
pop
xor
xlat
dec
add
in
imul
out
mov
adc
and
mov
loopne
add
fadds
loop
mov
xor
sbb
cmp
sarl
popa
cmp
push
xchg
lcall
sti
mov
inc
and
sahf
push
mov
clc
dec
clc
test
or
dec
in
inc
fbld
push
cmp
mov
pop
mov
sub
into
int3
push
scas
shrb
or
out
imul
pop
jno
or
jg
test
test
mov
mov
repz
jle
inc
insl
ficoms
jmp
xor
jnp
aaa
and
cli
adc
or
pop
leave
cmpsl
sub
push
or
mov
insl
cmp
mov
sub
hlt
add
movsb
fisttpl
add
popa
pop
ja
jb
clc
insl
jb
cwtl
xchg
adc
push
adc
add
cmp
and
sub
loop
mov
cli
dec
int
ret
dec
stos
sub
lea
xchg
dec
fisubrl
or
mov
roll
cmp
inc
rcll
xor
mov
xor
mov
jbe
insl
jne
scas
sbb
inc
cmpsb
icebp
stc
outsl
dec
push
fldenv
out
pop
stc
jp
adc
shr
test
cwtl
inc
lahf
dec
iret
mov
add
in
mov
push
gs
and
scas
imul
cli
add
sub
cmpsl
xchg
dec
mov
xor
arpl
pop
stos
shrb
xchg
ret
mov
iret
sbb
cmc
jns
mov
mov
dec
fnstcw
cwtl
push
aaa
mov
dec
stc
lods
inc
loope
xchg
sahf
outsl
popa
dec
add
call
jb
mov
pop
out
adc
and
pusha
push
sbb
ds
jb
rorl
popf
and
cmp
dec
sub
xchg
push
inc
popa
xor
dec
ss
mov
test
inc
lods
cmp
adc
je
jmp
pop
adcl
cmc
mov
push
das
test
jne
lds
xor
aam
add
cmp
idivl
je
arpl
rcll
mov
add
fldt
and
cmp
std
loopne
shlb
stos
lds
and
jp
mov
dec
sbb
aas
mov
into
xor
sub
xchg
stos
test
pop
sti
push
inc
les
pusha
xchg
sub
mov
lret
mov
pop
repz
jnp
mov
pushf
pushf
mov
in
sub
jns
xlat
jno
sub
push
sbb
sub
dec
sub
dec
pause
jb
cwtl
sbb
rolb
or
flds
mov
mov
or
mov
scas
xor
outsl
imul
or
inc
es
cmpsl
and
cltd
lods
jnp
and
subb
jae
ret
imul
push
or
hlt
movsl
ret
stos
jno
xor
inc
enter
mov
js
lret
mov
mov
push
fmull
int
cmp
xchg
add
clc
repz
into
jae
mov
test
jo
sahf
mov
fiadds
lret
inc
jns
sub
inc
dec
inc
push
gs
push
in
adc
dec
cmp
in
in
es
loop
xor
cmp
mov
sub
adc
in
cmp
scas
sub
dec
aad
push
mov
adc
arpl
insl
jp
bnd
pop
in
xlat
jne
jle
jle
mov
lock
push
imul
mov
fwait
adc
mov
int
sbb
xor
and
ret
or
mov
jbe
mov
mov
ja
pop
mov
fsubrs
pushf
mov
stc
pop
mov
mov
imul
in
int
mov
mov
pop
and
stc
loope
inc
mov
sbb
pop
lret
hlt
mov
sbb
jae
data16
pusha
cld
mov
in
mulb
mov
jmp
lahf
mov
loope
adc
fcomi
fucomip
mov
mov
add
push
and
jo
lret
test
jnp
sub
dec
mov
inc
pop
dec
inc
adc
popa
and
das
mov
loope
push
aam
sub
fdivs
push
out
push
test
add
movsb
push
ss
jae
lock
and
push
add
push
sbb
ret
lods
adc
aas
sbb
enter
push
dec
mov
push
mov
in
fsubl
nop
aas
cs
cmpsl
mov
ljmp
mov
int
fsubs
out
adc
mov
and
test
cmpsb
int
nop
dec
mov
dec
adc
sbb
mov
and
push
icebp
iret
jmp
add
jecxz
fisttpl
mov
mov
mov
aam
loop
lahf
pop
pop
sti
push
js
jb
xchg
pop
mov
mov
and
xorl
push
mov
pushf
loope
cmp
mov
pushf
or
jg
pushf
aam
jae
aad
lahf
push
arpl
adc
push
outsl
xor
sti
pushw
loopne
nop
mov
stc
cmp
repz
jge
js
fnstsw
iret
scas
int
add
xchg
mov
fcompl
lcall
pop
movsb
insl
into
push
add
imul
aas
stos
pop
pop
cmp
ljmpw
cli
clc
push
cmpsb
repz
arpl
push
andps
in
and
and
sub
push
jne
or
mov
xchg
fstpt
leave
int3
jle
loopne
add
stos
adc
std
sub
pusha
cmp
es
sbb
daa
mov
mov
and
jp
aas
mov
cltd
mov
cmpsb
or
outsb
nop
push
enter
sbb
add
mov
xchg
test
scas
and
dec
inc
test
or
adc
dec
pop
idivb
lahf
call
dec
popa
mov
das
adc
jge
std
pop
jno
cmp
pop
pop
adc
mov
or
jg
cwtl
ja
mov
aam
in
sbb
push
inc
pusha
mov
clc
fisttpl
cmpsb
cltd
dec
push
or
mov
mov
mov
call
cmp
add
lds
xor
arpl
lods
loop
or
sbb
xchg
inc
int3
movsl
not
scas
cltd
sbb
and
gs
cld
aaa
jmp
inc
cmp
or
cmp
adc
addr16
fistpl
mov
imul
mov
xchg
fistpl
mov
sbb
push
pop
in
out
enter
stos
into
loop
popf
pop
scas
and
stos
xlat
icebp
pusha
or
and
mov
mov
xchg
inc
int
sbb
pop
adc
pushf
loop
aaa
sti
and
dec
xchg
push
mov
int
aaa
test
fcoms
imul
es
sbb
ret
fadds
push
mov
enter
in
pushf
pushf
mov
adc
repz
xchg
jo
xor
subb
adc
dec
xchg
pusha
xlat
je
das
adc
test
or
cli
pop
mov
pop
jmp
bound
aas
mov
enter
adc
loope
dec
mov
inc
push
xor
pop
and
cmp
mov
loopne
dec
sub
jmp
mov
push
dec
ss
inc
inc
sahf
and
push
stos
push
xor
icebp
cmc
sbb
clc
pop
loopne
in
push
add
test
test
icebp
sbb
lret
dec
or
jmp
pop
sub
inc
mov
dec
pop
insl
xor
inc
or
sbb
mov
shr
fcoms
cmp
add
jmp
bound
fwait
std
je
dec
mov
bnd
loope
out
and
fbstp
mov
ja
clc
cmpsb
push
aad
cmpsb
xchg
sbb
mov
xchg
push
dec
es
pop
sub
mov
leave
sbb
test
cwtl
and
pop
inc
xchg
cmpsl
stos
bound
xor
stc
adc
or
sbb
xorl
sub
std
ss
xchg
xor
outsb
loope
dec
out
dec
jge
lods
psrlq
mov
xchg
pop
dec
mov
push
sbb
push
push
ds
in
cmpsb
sahf
lea
dec
mov
iret
sub
gs
mov
mov
sub
lock
inc
or
lea
push
jmp
out
xlat
jo
stos
test
mov
xor
adc
popf
repz
mov
pop
cmp
int3
movsb
shl
fbld
scas
or
xlat
test
cmp
dec
xchg
aam
scas
outsl
mov
lret
loopne
sbb
mov
pusha
test
in
hlt
xchg
xor
cld
xchg
inc
pop
orb
sub
leave
inc
push
jp
out
adc
gs
ss
in
std
mov
xchg
pop
pop
fwait
shlb
pop
xor
adc
jl
mov
cmp
popa
sahf
rolb
lret
in
mov
mulb
or
insb
jmp
pusha
out
out
mov
push
movsb
jbe
jbe
sub
jns
xor
jns
imul
bound
clc
sbb
addr16
enter
lea
and
shrb
loop
incb
cs
mulb
jl
ja
leave
fimuls
sbb
sub
out
cmpsl
enter
or
push
repz
jp
pop
clc
push
add
adc
cmp
ljmp
pop
and
add
mov
movsb
call
xchg
and
cmp
mov
div
lds
ja
aam
fucomi
popl
sbbl
icebp
jb
gs
imul
mov
push
xchg
sbb
inc
das
repnz
jb
pop
mov
mov
roll
jle
enter
dec
and
jl
out
fmul
je
scas
mov
lcall
ja
and
push
fisubrs
sbb
ror
sbb
or
jae
mov
mov
push
mov
dec
xor
das
aas
lock
lahf
ret
inc
std
and
mov
fwait
stos
adc
lds
push
out
pop
xchg
add
or
repz
and
jae
aas
jmp
data16
xchg
jnp
pop
arpl
mov
cmpsl
das
sub
pop
mov
cmp
cmp
in
stos
dec
sub
sbb
dec
adc
shl
or
repnz
shrl
out
add
xchg
or
and
xor
pop
out
or
jbe
jl
pop
out
imul
add
pop
fsubrl
inc
mov
xor
sti
xchg
cmp
sbb
inc
or
nop
xchg
pop
lods
mov
lock
inc
shl
and
sub
faddl
sbb
pushf
shl
adc
mov
add
cwtl
in
inc
cmpsl
loop
adc
jmp
ret
dec
fiaddl
sbb
call
scas
mov
push
push
fwait
ret
adc
mov
mov
clc
xchg
sbb
xchg
adc
iret
fildll
lret
push
fstpt
pop
repnz
sbb
add
xchg
inc
lahf
xchg
pop
inc
popa
sub
cmpsl
outsl
cltd
add
sub
fwait
jmp
mov
mov
int3
in
pushf
sbb
scas
xchg
ret
ds
clc
adc
pushf
ffreep
fwait
push
cld
xor
xchg
repz
add
add
jns
pop
sub
popa
jbe
shr
xchg
nop
mov
aam
out
movsl
bound
mov
loop
xchg
mull
pop
mov
push
inc
repz
dec
fcomip
xor
in
sbb
std
clc
cmpsb
out
je
filds
insb
jno
xchg
stc
push
imul
or
cmp
out
out
cltd
cld
lcall
stos
int3
es
mov
rcrb
stos
and
les
popa
rclb
rorb
sbb
dec
mov
icebp
add
subb
loope
negl
pop
call
rorl
sub
push
lds
in
and
scas
pop
push
push
mov
or
dec
cmc
jns
xchg
push
icebp
test
ja
test
sti
nop
xorb
adc
xor
test
jbe
or
loop
push
test
les
cli
pop
lods
in
xchg
call
inc
pop
xor
cmpsl
dec
pop
stos
aad
lds
rolb
icebp
pop
adc
mov
and
add
cld
xchg
aad
out
out
rcll
pop
aas
adc
inc
loop
sub
dec
xchg
stos
mov
sahf
arpl
test
mov
sahf
dec
out
imul
sbb
lock
cmp
out
aaa
insl
or
out
mov
add
xchg
mov
mov
mov
insl
movl
aas
inc
lds
adc
outsb
sub
out
pop
loop
pop
cli
setae
icebp
inc
cmp
jno
jb
gs
imul
out
rorl
sarl
insl
int3
sbb
imul
jno
cmp
out
push
leave
insb
mov
outsl
xlat
rcrl
daa
in
push
xor
sbb
add
loopne
shl
mov
hlt
add
and
push
jbe
or
pop
mov
loop
or
mulb
aas
outsl
test
inc
clc
test
xchg
push
adc
lret
cltd
or
scas
rolb
mov
inc
jnp
sbb
loopne
ds
out
testb
sbb
xor
dec
movsl
adc
mov
or
shl
and
les
ja
insb
adc
adc
mov
movsb
sbb
lds
push
mov
or
mov
xchg
mov
sarl
jge
sub
mov
adc
sarb
adc
cs
push
cmp
data16
in
cwtl
idivb
out
mov
loope
sbb
rcrb
inc
pusha
mov
pop
jne
lret
sub
jg
ss
shrl
test
push
mov
test
xor
xchg
push
cmpsl
data16
lcall
sbb
and
bound
sti
xchg
jg
or
mov
add
divb
jg
cmp
add
clc
ss
sbb
mov
jae
xor
lcall
test
and
rcl
inc
add
aam
ss
aas
popf
pop
popf
stos
sub
imul
scas
mov
adc
mov
mov
adc
lcall
xor
inc
jp
filds
lock
mov
push
pop
cmp
into
mov
outsl
lods
int3
pusha
pop
cmc
sarl
jbe
test
scas
fsub
mov
dec
lods
faddl
or
push
and
jne
mov
jge
and
sbb
bnd
sub
or
dec
cmp
push
shlb
aas
ret
fidivrs
add
pusha
xor
jo
and
leave
aam
jno
pop
mov
mov
push
jne
arpl
int
dec
into
mov
cmc
fmull
call
rol
xor
mov
fstl
inc
mov
inc
pop
leave
enter
xor
and
mov
mov
stc
sub
rol
dec
test
stos
mov
hlt
std
adc
das
jle
inc
test
mov
mov
mov
stos
inc
clc
xchg
sub
xor
dec
jp
and
aaa
mov
add
push
jns
orl
mov
shll
sarb
inc
loop
pop
loop
push
lods
pop
xchg
test
xchg
cmpsb
jb
xchg
add
pop
jge
push
aad
jbe
ret
mov
insl
sub
fs
lock
fmul
and
sub
out
or
lods
pushl
cmp
scas
or
nop
add
mov
lods
scas
pushf
ret
lea
xlat
sub
mov
outsl
mov
ljmp
cmp
cmp
and
pop
aas
add
pop
jne
shl
bound
loopne
dec
fs
shlb
scas
fwait
and
push
pop
push
add
into
lret
dec
sbb
cwtl
in
push
cmp
addr16
or
in
mov
xchg
jae
lds
add
adc
sti
push
lret
stos
adc
xchg
call
cwtl
add
sub
mov
push
lods
xor
jg
cmp
sbb
and
mov
mov
orl
shrb
fsubrs
dec
and
subl
push
xchg
push
adc
mov
sbb
push
mov
mov
xor
lret
add
mov
jno
imul
insb
and
push
dec
stc
dec
jno
cwtl
jne
sub
sbb
push
and
fs
xor
into
dec
xchg
jmp
pop
cmpb
jge
nop
xor
clc
retw
push
lret
jp
loope
stc
cwtl
sbb
cmp
dec
jmp
push
jecxz
cmp
xor
decl
popa
scas
or
pop
test
mov
xlat
dec
pop
mov
jae
mov
or
xor
popf
setg
cmpsb
adc
ljmp
sub
shrb
sbb
fstpt
pop
inc
pop
mov
mov
mov
mov
ret
push
addb
pop
or
push
fwait
add
inc
in
popf
in
lret
stc
and
mov
out
aas
shl
sbb
jne
scas
iret
js
sub
cmc
arpl
iret
test
nop
xor
mov
fnstsw
aad
adc
fisttps
jne
fistpll
push
sbb
sti
cld
pop
sbb
out
inc
jmp
jmp
jns
mov
bound
bound
mov
pop
pop
je
cmp
inc
push
push
inc
push
lret
out
repnz
lock
movsb
aad
jmp
cltd
lods
ficoml
jmp
push
clc
xchg
jno
and
push
jo
push
hlt
pop
in
and
das
jmp
add
add
and
fwait
xor
test
mov
or
cltd
in
xor
or
lahf
popf
dec
aam
lahf
push
add
and
add
aaa
out
mov
mov
lcall
lods
lret
push
xor
fldpi
mov
add
lea
fnstsw
fisubrl
test
adc
mov
fnstsw
inc
lea
mov
mov
mov
ds
sahf
movsb
test
punpcklbw
jo
cmp
ljmp
and
jg
jecxz
and
dec
dec
push
rorl
adc
dec
pusha
inc
adc
fisttps
mov
mov
lock
jl
jp
xchg
cmp
das
rolb
aaa
roll
xchg
js
adcl
or
push
mov
mov
insb
xor
add
add
movsb
jp
dec
imul
inc
lret
scas
loope
cwtl
aas
xchg
or
push
in
out
mov
jns
sub
js
std
int
lock
fidivrl
stc
js
fnstenv
out
mov
and
cs
cmp
and
out
mov
into
cmp
out
jle
iret
inc
mov
mov
push
clc
jns
mov
sub
mov
inc
pop
mov
xchg
xchg
jns
inc
sub
into
push
pop
arpl
aam
lret
pop
fldl
es
xchg
icebp
mov
sub
mov
out
daa
scas
loope
or
xchg
pop
mov
aaa
call
sbb
lds
lret
xor
push
ss
frstor
das
adc
icebp
lret
or
outsb
mov
cmp
leave
sub
int3
das
ljmp
popf
and
push
icebp
sub
push
dec
popa
pop
inc
outsl
lcall
pop
cld
je
mov
jns
fwait
aad
in
bound
jmp
fisubs
mov
aas
out
xlat
aaa
sbb
cmp
inc
push
bound
pop
imul
cmc
adc
xorl
inc
mov
ror
lret
pop
iret
subl
lret
lcall
dec
and
add
addr16
loopne
outsl
fwait
or
or
int
cmpsl
sub
mov
push
lret
xchg
push
fwait
int3
pop
add
and
ret
or
xor
in
cs
imul
mov
add
pop
dec
popa
pop
cmp
bound
xchg
push
or
aad
cmpsl
sbb
nop
xor
outsl
sbb
cmp
or
mov
cli
mov
ljmp
ja
push
arpl
test
fldl
xchg
cwtl
mov
push
mov
lods
mov
mov
sbb
fwait
mov
push
pusha
aam
cmpb
scas
inc
jbe
jae
ss
add
insb
xchg
sahf
jns
call
das
out
test
xor
add
add
std
setge
xor
pop
jo
mov
outsb
push
pop
and
cld
sbb
sbb
or
adc
bnd
cmp
adc
xchg
push
loop
lret
mov
jge
lods
fdivs
rorl
jecxz
and
pop
jl
fsubrl
aam
push
pop
jle
outsb
decl
imul
pop
dec
inc
adc
add
mov
pop
cltd
sub
inc
push
fldenv
cmp
pop
std
cmc
xchg
in
fdivl
adc
stc
xchg
out
push
iret
loope
push
sbb
pop
and
cmc
and
mov
xchg
fsubs
adc
mov
outsl
loop
fwait
xchg
dec
imul
mov
in
stos
out
stos
xchg
out
push
push
fbstp
lret
cltd
cmp
push
bnd
outsl
testb
mov
adc
and
fdivl
xchg
imul
cmp
ds
addl
insb
fs
ficomps
push
test
imul
mov
leave
push
push
imul
mov
add
sbb
cwtl
mov
repz
leave
adcb
xor
pushf
dec
scas
jns
xchg
fs
loope
loopne
dec
pop
dec
aad
inc
popf
pop
or
cmpsl
lods
addb
and
addb
stos
rorl
sbb
bound
add
or
mov
mov
std
insl
imul
ss
mov
ret
xor
xor
jmp
movsl
xchg
dec
pop
jno
ja
or
jmp
inc
inc
jp
js
adcl
pop
mov
inc
orl
std
bound
mov
idiv
mov
jmp
jg
pop
nop
dec
xchg
sub
cli
nop
jno
inc
inc
test
xor
jbe
sub
es
and
ja
inc
xchg
jb
ror
xchg
out
xchg
cmp
dec
test
nop
sub
mov
aas
and
popa
mov
jl
test
dec
divl
cmp
or
ss
jno
inc
and
or
int
es
xchg
addr16
push
jbe
aas
out
lret
push
loope
daa
repnz
mov
movq
mov
sbb
arpl
movsb
mov
cld
fmul
dec
mov
scas
cmp
adc
xchg
mov
std
scas
cmpxchg
adc
push
jb
gs
jge
pusha
xchg
repnz
ljmp
add
mov
add
mov
dec
and
mov
xchg
and
push
insl
dec
iret
push
dec
add
xlat
pop
xor
pop
jmp
sahf
outsb
ds
or
sub
dec
cwtl
aas
sub
enter
es
inc
and
push
jge
inc
sbb
imul
mov
stos
or
add
insl
xor
scas
fistl
mov
stos
into
jecxz
jne
inc
xchg
cmp
into
jno
enter
fucomp
xchg
jmp
xchg
xchg
stos
push
je
aas
add
and
pop
mov
push
pop
inc
mov
adc
insl
sbbb
push
sub
mov
cmp
or
mov
sbb
and
movsb
aad
and
decb
and
or
xorl
jmp
mov
mov
cld
cmc
adc
pop
rorl
cwtl
cmpsb
popa
out
inc
xor
inc
bound
inc
leave
cmp
dec
xchg
movsb
movsb
fisubrs
pop
pop
push
test
adc
sbb
dec
xorb
fistps
jmp
sbb
popa
mov
les
daa
push
and
stc
jl
std
mov
idivb
ret
or
cs
lret
jmp
std
add
sub
bound
pop
ds
mov
aad
adc
lret
cmp
push
inc
in
sbb
xor
ret
sub
adcb
test
sahf
cmp
mov
jno
jecxz
lods
inc
ss
fldenv
push
cltd
sarl
iret
pop
lea
in
dec
popf
mov
adcl
dec
jp
dec
xor
add
or
sub
subb
lods
or
ret
aas
jmp
test
adc
arpl
mov
andb
hlt
stos
xor
mov
gs
jns
cwtl
sarb
orl
repnz
add
sub
popf
cmp
aaa
xchg
ret
lret
cli
and
ret
adcl
add
and
test
scas
pop
mov
or
std
xlat
shlb
int3
das
inc
xor
pushf
dec
mov
outsb
and
xchg
out
in
xchg
push
adc
adc
jno
inc
pushf
test
xor
flds
aam
xchg
int3
insb
jp
imul
clc
lret
andl
lret
pop
int3
clc
mov
mov
or
or
sub
push
jle
in
pusha
shll
cmpsl
pushf
scas
ja
mov
outsl
mov
pop
and
repz
sbb
xchg
pusha
out
mov
lret
cmc
imul
sub
lock
test
push
imul
inc
xor
loop
loop
mov
sub
loopne
sahf
fistl
sub
sbb
cmp
mov
sub
fwait
push
je
ljmp
cmp
fucom
adc
pop
out
xorl
fisubl
or
mov
stc
mov
adc
aam
inc
test
or
cmp
and
fnstenv
js
inc
cmpsb
inc
addb
jne
repz
jb
sub
adc
out
push
pop
jmp
jo
test
mov
data16
fsts
xor
jo
sub
out
das
pop
pusha
rcl
pop
jnp
bound
cmp
adc
lds
int
orl
cs
dec
jb
ret
sbb
mov
inc
daa
lret
dec
mov
jecxz
sbb
adc
cmp
test
pusha
or
jnp
sub
push
jmp
out
push
pop
sub
ja
add
or
push
es
add
adc
insl
loop
mov
repz
movb
pop
rolb
bound
xor
out
xor
aas
insb
xchg
inc
sub
push
pop
and
rorb
push
nop
repz
mov
ja
lods
test
xchg
mov
xor
xor
adc
test
orb
iret
pop
mov
inc
sbb
out
stos
adc
out
int
repz
or
inc
jl
movsb
adc
das
mov
out
rolb
popl
leave
mov
sub
xchg
jg
mov
mov
pop
mov
push
xchg
pop
sbb
jmp
loope
mov
movups
mov
repnz
xchg
imul
cltd
jo
stos
jae
pop
popa
xor
jle
add
loop
mov
xchg
fistpll
movsl
pop
insl
sbb
in
out
lea
add
outsl
fidivrs
movsl
test
add
lock
xchg
mov
mov
inc
std
hlt
mov
imul
test
das
rcll
mov
pushf
les
stc
fdivl
clc
rcrb
cmc
cltd
dec
mov
mov
or
add
sub
push
jecxz
out
stos
aad
and
mov
sbb
adc
sub
mov
repz
push
or
mov
in
test
mov
xor
popa
fldl
popf
fstpl
lods
xor
cmp
inc
pop
lahf
aam
das
das
xor
lret
cs
mov
test
cs
add
push
xchg
popa
and
sub
jecxz
pop
test
pop
lds
push
add
call
test
andl
add
inc
lods
mov
js
aaa
lahf
jo
pop
jl
pop
push
lret
icebp
xor
mov
lea
sbb
mov
hlt
stc
lcall
leave
fisttps
test
adc
roll
ret
and
sbb
popa
or
aam
call
std
xor
clc
jae
mov
stos
mov
and
inc
mov
ret
mov
jge
addr16
sti
imul
inc
aam
imul
ret
lods
shlb
mov
push
dec
into
out
sbb
push
imul
add
pushf
in
xchg
cli
in
dec
add
fildll
enter
mov
stc
cld
loope
jbe
lds
outsl
lret
js
popa
lret
lret
das
sarl
add
xor
movsl
sbb
sub
mov
xor
mov
adc
xchg
loope
cmc
jns
pushf
mov
mov
and
jecxz
inc
xor
cmp
icebp
sbb
mov
dec
out
imul
pop
inc
mov
mov
imulb
push
stc
sbbb
test
jl
and
imul
adc
or
in
pop
push
mov
gs
nop
nop
arpl
pop
or
fsubrl
scas
into
stos
cltd
popf
xlat
mov
shlb
push
outsb
repnz
lods
es
pop
test
jb
pop
aam
sarb
lcall
into
jge
adc
pop
shlb
mov
cmpsb
xchg
push
dec
xchg
cs
movsb
nop
std
pop
lret
and
and
stc
insl
dec
sahf
xlat
pusha
aam
xorb
jnp
pop
or
inc
push
pextrw
cmpsb
inc
ljmp
or
and
dec
dec
aad
daa
aad
push
aas
call
add
insb
push
fsubrs
xlat
mov
inc
and
dec
mov
gs
jmp
jge
mov
add
cmp
pop
repz
xchg
and
fcoml
dec
icebp
and
test
mov
cmp
xlat
test
inc
aas
test
mov
stc
jnp
mov
or
inc
cmp
pop
hlt
push
daa
lret
push
sbb
xor
mov
dec
out
pushf
in
out
pushf
dec
sub
fsubrs
pushf
ret
add
add
xchg
test
fmuls
int3
sbb
sub
add
mov
mov
jo
add
or
iret
hlt
lret
pop
insb
fldenv
into
icebp
lds
je
or
lods
mov
repz
lods
push
adc
fld
adc
stc
jno
jb
rorb
push
sub
pop
push
xor
pop
shl
dec
lds
cwtl
mov
jp
rcll
xor
mov
inc
outsl
pop
cmp
outsb
cmpsb
mov
and
or
fwait
aam
je
movsb
mov
scas
xor
aam
test
xchg
popa
or
sub
mov
sub
sbb
mov
jns
repz
fs
cmpsb
or
je
jns
mov
filds
ljmp
out
mov
ljmp
mov
movsb
adc
jmp
sub
out
int3
mov
pop
adc
push
repnz
out
pop
xchg
in
inc
nop
in
adc
xchg
in
jbe
es
ret
dec
pop
or
pop
sbb
dec
fstl
cmp
pushf
jecxz
jnp
enter
sub
jae
shrl
arpl
int3
dec
or
xchg
movsb
jo
lret
loopne
sub
pop
callw
clc
jns
pop
xor
dec
movsl
movb
and
xor
pop
sti
adc
fisttpl
pop
aaa
test
cmp
loope
sub
sbb
mov
fistps
out
add
inc
outsb
divl
stc
mov
dec
push
mov
leave
or
bound
or
xchg
cltd
cs
jecxz
inc
cwtl
mov
sub
mov
ja
ljmp
mov
jb
stc
and
stos
mov
push
sub
inc
gs
jl
fsubrp
lods
mov
pop
mov
pop
sbb
in
mov
icebp
adc
mov
mov
sarl
and
sub
cmc
sub
pop
sbb
xor
cmp
jg
sbb
rcl
in
stos
inc
or
aad
insl
add
mov
pop
pushf
stos
xchg
outsb
mov
neg
out
pop
dec
xor
ret
cmpsb
adc
fbstp
ss
sub
xlat
and
imul
push
mov
and
mov
popw
adc
aas
imul
mov
add
aam
jo
fldt
fwait
adc
rorl
nop
shlb
nop
adc
fadds
test
jno
dec
push
mov
inc
pop
das
sub
enter
aas
add
movsb
movsl
inc
cmpsb
mov
ret
mov
es
mov
mov
jl
out
mov
stos
into
or
sbb
out
sbb
mov
loop
dec
incb
sar
add
les
std
icebp
dec
fisubrl
outsb
imul
loopne
jp
loop
adc
dec
push
push
dec
mov
and
lods
mov
xchg
test
xchg
add
push
call
aam
jne
loopne
arpl
test
dec
pop
test
cld
xor
les
ljmp
ror
adc
fwait
push
sub
clc
fidivrl
enter
pusha
mov
jbe
add
cmp
xchg
pushl
cmp
push
data16
or
test
cmp
xchg
pop
test
dec
dec
push
jo
inc
jnp
aas
xor
xchg
lock
repz
xchg
or
lds
push
push
mov
add
test
aaa
mov
imul
outsb
cmp
mov
jo
push
push
pusha
cmpb
mov
xchg
xlat
add
xchg
adc
repnz
fcoml
mov
int
jmp
mov
test
mov
aam
add
mov
jecxz
mov
add
push
mov
shrl
push
sub
test
out
sub
into
inc
sub
enter
sub
rclb
mov
test
int
xchg
nop
pop
pop
pop
mov
test
mov
dec
jmp
sbb
in
mov
imul
mov
cli
cmp
call
mov
nop
cmp
popf
shl
fdiv
dec
leave
mov
mov
dec
pop
repnz
outsl
mov
pop
mov
fidivrs
ret
add
fists
dec
in
push
inc
shlb
cli
testl
pop
pop
cmp
loope
je
lods
mov
lcall
and
or
ljmp
addr16
fsubp
xchg
add
add
jl
fisubrs
or
sbb
stos
gs
xorl
sbb
movsb
pushf
ficoms
jecxz
add
mov
stos
push
xorb
das
push
int
shlb
in
outsb
push
imul
rsqrtps
push
test
sarl
adc
push
hlt
sarl
xchg
popf
out
adc
dec
pop
dec
push
cmp
jle
mov
inc
in
shlb
cmp
mov
rcll
pop
pop
call
inc
inc
inc
aaa
fs
nop
xor
leave
sub
push
scas
imul
adc
pop
gs
xchg
push
jle
movsb
data16
in
jg
js
shlb
pop
inc
cmp
sub
dec
push
jno
jne
mov
inc
push
mov
rcrb
jne
and
js
addr16
add
iret
fwait
out
mulb
add
dec
dec
ja
dec
sub
cltd
rclb
adc
cmpl
adc
sbb
add
sub
mov
loopne
push
xor
push
jae
jge
aad
addb
xor
fs
or
outsb
push
xor
dec
dec
or
out
test
int
pop
jae
scas
enter
push
jnp
xchg
setp
arpl
hlt
ret
and
mov
mov
cmp
clc
pop
mov
sahf
addr16
icebp
outsb
movsl
mov
jg
mov
push
iret
icebp
push
int
xchg
iret
push
jge
xor
pusha
dec
ljmp
pop
test
xor
xchg
mov
or
xor
movsl
mov
cmp
mov
sub
decl
mov
adcl
adc
push
lds
push
jbe
in
push
mov
xchg
xchg
pop
adc
subl
pop
pop
shll
insl
fists
and
cmpsb
or
dec
out
fisttps
sub
mov
jg,pn
outsl
add
in
inc
add
inc
div
sbb
lret
loope
ret
mov
lods
mov
jmp
fimull
fst
data16
ja
leave
movsb
out
sub
popa
adc
lret
mov
push
sarl
fwait
movsl
jp
mov
xor
push
sub
fsubl
push
loop
or
sahf
fwait
and
sbb
jne
ljmp
fadd
std
pop
mov
adcl
xor
pop
push
push
adc
mov
scas
mov
jecxz
pop
push
dec
adc
dec
lods
mov
mov
outsb
pop
das
das
mov
dec
cmp
inc
push
pop
ljmp
inc
inc
pop
sub
push
jns
jo
cli
mov
xorl
mov
ret
fstps
sbb
jg
push
mov
sbb
xor
call
popf
sbb
add
cmp
ret
fistpll
pop
cmp
xorb
and
jge
ja
push
or
clts
push
lahf
and
cmp
lock
lods
inc
mov
dec
xchg
add
and
icebp
divb
xchg
xor
int3
in
dec
loope
loop
sarl
inc
dec
test
stc
shlb
stos
adc
fcoms
pop
loop
and
adc
movzbl
xchg
mov
addb
or
loop
add
loopne
fnstsw
data16
dec
mov
xchg
jne
xor
out
jae
into
mov
scas
stc
dec
xchg
cwtl
gs
sti
and
jmp
jo
mov
sbb
pop
jle
mov
ljmp
fwait
scas
jns
dec
pop
pop
xor
xor
sar
dec
stc
sub
xchg
or
xchg
cmpsb
mov
aam
jbe
sti
shlb
out
mov
lahf
xchg
xorl
pusha
push
xchg
xor
add
mov
outsl
fs
push
mov
xchg
scas
or
pop
cmp
icebp
xchg
mov
sub
lcall
push
adcl
cltd
outsl
hlt
mov
cmp
dec
xchg
es
mov
lds
push
add
loopne
jo
push
sbb
sar
mov
mov
lret
orl
mov
cwtd
leave
ljmp
fisttpll
testl
jno
insb
jl
cmpsl
ret
push
xchg
fcoml
mov
shl
sbb
push
jo
mov
call
add
test
cltd
imul
and
jmp
daa
in
xor
push
push
aaa
pop
stos
icebp
movsl
cli
test
mov
out
leave
stc
pop
xor
addl
aaa
xlat
adc
loope
jge
nop
jns
lcall
into
pop
scas
xchg
clc
or
mov
or
outsb
cmc
loope
push
mulb
sbb
and
loop
and
js
rcrl
sub
dec
xor
xchg
adc
in
jo
lret
pop
push
lea
cmp
push
xchg
mov
lret
pop
cwtl
dec
gs
mov
out
cmp
orb
jno
rorl
add
lds
fisubl
negb
clc
loopne
or
xchg
add
xor
test
sbb
rorl
imul
mov
repnz
cmpsb
data16
aad
sub
imul
xor
jae
testb
push
clc
add
es
sbb
mov
lcall
cmp
or
test
and
pop
and
insb
popa
sbb
sbb
lcall
popf
xor
cld
out
pop
mov
pop
push
in
dec
dec
sbb
or
jl
pop
daa
xchg
in
mov
int
stos
push
shll
xchg
sbb
popa
push
pusha
push
lods
pause
jecxz
sub
fistpll
push
mov
ss
cli
lahf
dec
jl
xchg
js
addr16
ja
test
mov
inc
jmp
fmuls
mov
mov
inc
shll
out
push
fldl
fcomps
xchg
sbb
int
and
pop
xchg
jno
ret
xchg
cwtl
in
pushf
or
hlt
dec
push
daa
js
lret
lret
int3
lock
negl
cmp
xor
cs
push
pop
ds
pop
aaa
dec
xchg
int
rorl
or
jne
out
mov
jmp
loopne
xchg
jo
jnp
xor
scas
xor
sbb
pushw
xchg
sub
jbe
mov
in
in
jmp
pop
jae
or
std
cmp
scas
push
cmc
xor
into
jae
lahf
cli
in
pop
mov
or
mov
dec
gs
jmp
push
aas
fucomi
push
push
or
xchg
cli
jns
das
fwait
sbb
dec
aas
fisttpll
lret
cmp
inc
cmpsl
leave
xor
add
lret
insb
lock
xchg
adc
imul
rcll
enter
cwtl
std
fsts
je
mov
pop
sti
or
sbb
popa
jecxz
jb
adc
enter
xor
cmp
push
aas
cld
mov
std
outsl
loope
fwait
mov
sahf
mov
sbb
pop
addr16
daa
jg
push
sahf
jle
sbb
mov
loope
dec
fndisi(8087
arpl
pop
movd
aaa
mov
inc
test
xchg
push
cmpsb
sub
popf
stc
jl
nop
int
jl
add
mov
jge
insl
adc
dec
in
imul
hlt
mov
outsb
mov
pushf
lret
mov
arpl
andb
sub
xor
sahf
mov
pop
add
addr16
daa
mov
mov
inc
fucomi
pusha
sbb
push
es
jle
movb
mov
sbb
sbb
cmp
push
mov
iret
stc
lahf
sbb
ret
test
mov
cmpsb
movsl
mov
rep
add
jbe
aas
push
call
out
lcall
xchg
sbb
push
sub
lods
lret
in
adc
mov
xchg
jnp
rcll
pushf
dec
or
mov
xor
inc
xor
addr16
aam
dec
and
and
out
fs
sbb
stos
js
movsl
aad
xchg
sti
jge
sti
pop
or
adc
push
jnp
push
jmp
pop
mov
push
sbb
out
xchg
inc
xchg
mov
shrl
adc
adc
push
mov
and
daa
cmpsb
iret
cmpsl
push
rcll
cmp
xor
push
int
mov
call
loop
enter
sarb
pop
cltd
cmp
repz
dec
xchg
bound
mov
jnp
or
adc
repz
mov
or
mov
mov
cmp
popa
push
mov
bound
dec
xchg
push
mov
int
push
fsubr
pop
push
sti
test
jp
in
lea
out
jecxz
movb
roll
sub
inc
movsl
inc
push
icebp
jp
pop
cmp
sti
inc
jo
adc
addl
popa
jo
add
adc
arpl
cmp
push
pextrw
pop
stc
orb
arpl
add
adc
lret
leave
dec
sub
pop
push
das
jg
or
add
and
fldenv
mov
fldcw
push
jge
xor
lcall
popf
inc
cmp
and
jbe
pop
ds
jmp
inc
loop
lret
out
xchg
idivl
out
mov
aam
jae
inc
and
fwait
or
push
repz
ss
dec
fcomi
adc
cli
push
cmp
cmp
adc
aam
xor
jg
mov
shrl
add
mov
cmp
pop
sub
fmulp
add
aas
rolb
in
loop
cli
stos
inc
jnp
inc
sahf
repz
int
mov
in
fwait
aam
shll
js
xorl
xchg
xchg
jb
cs
adc
jns
or
mov
stos
and
loope
cmp
sbb
loope
int3
int
fldl2e
mov
inc
movsl
shll
loop
sbb
jmp
or
sbb
push
cmp
mov
in
push
jg
cmc
pop
or
in
push
outsl
mov
repz
sbb
xchg
xor
popa
bound
shl
mov
mov
stos
out
lret
mov
adc
push
and
mov
or
lods
jbe
mov
je
mov
call
xchg
fwait
popa
jmp
push
in
cmp
mov
outsl
outsl
test
jnp
pop
push
pop
jl
in
xchg
mov
jns
pop
movsl
cmpsb
sub
xor
popf
inc
imul
cld
add
repz
popf
push
mov
push
movsb
push
sbb
test
mov
imul
int
and
ficompl
int
dec
xor
out
stc
jo
adc
jb
aas
out
pop
mov
aas
adc
imul
aaa
xchg
pop
jg
jmp
mov
stos
rorb
movl
mov
pusha
and
xor
push
mov
push
or
xor
int
adc
jp
repnz
dec
jo,pt
flds
add
stc
inc
xor
dec
jp
jle
pop
testb
push
push
add
add
or
mov
in
jb
shl
mov
or
xchg
cld
xchg
push
add
loopne
lds
fldl
lock
flds
call
fbld
sub
scas
mov
and
cmp
adc
dec
push
xor
jb
mov
push
js
xchg
push
sub
enter
sub
cmp
xchg
jmp
lods
cmp
mov
incb
cwtl
add
repz
orb
push
dec
aad
test
stos
inc
mov
push
mov
test
mov
out
xchg
cmp
inc
cmp
mov
pop
mov
push
jae
xchg
xor
popa
aas
sub
icebp
cs
xchg
ror
fwait
cs
mov
stos
sbb
es
mov
ss
fisubrl
shrl
mov
shrl
mov
rcrl
mov
push
data16
xor
fsub
out
mov
hlt
imul
dec
outsb
push
data16
roll
or
and
ja
adc
jbe
xor
hlt
jbe
pop
mov
lock
sbb
xchg
and
push
jnp
notl
aad
pop
pop
dec
andb
jge
sar
cmc
or
inc
xchg
testb
cmp
add
xchg
addr16
mov
arpl
pop
cmp
testb
xlat
cs
into
outsb
add
adc
sbb
loop
mov
add
out
dec
sbb
int
mov
jnp
fbstp
lea
mov
cltd
mov
clc
push
mov
sub
cmp
push
mov
jg
lods
mov
push
movsl
push
dec
shrb
in
jl
or
lret
pop
test
imul
cmp
or
inc
test
push
cmpsb
rorb
aas
pop
and
or
xor
ret
repnz
xchg
xor
lahf
push
add
sub
div
xlat
cmp
cli
jbe
mov
clc
jnp
fidivs
insb
cmp
jge
jg
mov
scas
jnp
gs
mov
add
jge
sub
out
ret
xor
sti
xor
popa
push
insb
xor
popa
ja
jne
into
pop
ret
pushl
xchg
lret
adc
outsb
arpl
mov
push
push
dec
push
add
xor
add
addr16
loope
aaa
dec
sahf
or
sbb
cli
sahf
or
mov
or
data16
out
and
cmp
pop
adc
mov
les
test
cld
popa
push
fsubrl
cltd
mov
sahf
push
push
sub
add
gs
out
cmp
pop
mov
cld
ds
dec
sub
dec
pop
jb
and
daa
and
sbb
or
cs
test
dec
stos
jnp
cmp
xchg
shr
psubq
in
lret
cmpsb
jecxz
cmp
mov
insl
outsb
cmp
push
or
mov
nop
fists
xchg
push
cmp
dec
fnstenv
inc
push
push
adc
shr
aad
in
movsb
sub
add
aas
sbb
dec
dec
fiaddl
imul
dec
ljmp
mov
mov
adc
je
fisubrl
pusha
repnz
repz
push
aaa
arpl
xchg
es
inc
push
jb
jge
push
cmpsb
test
pop
push
cmp
mov
scas
or
pop
lods
test
fcmove
cmp
mov
and
sbb
pop
xor
pop
dec
cmpsb
mov
xor
in
push
lods
add
jl
cld
scas
ljmp
adc
jge
lahf
outsl
or
mov
adc
jnp
xchg
mov
popf
cmp
loope
xlat
add
ds
xchg
fidivrl
xchg
arpl
or
decb
sahf
hlt
pop
cmp
and
in
in
rolb
inc
imul
stos
lret
ss
test
cmc
ljmp
aaa
out
sbb
add
loope
push
daa
cmp
pushf
sub
add
pop
or
inc
mov
imul
pushf
pop
insl
sub
fwait
xchg
xor
mov
jno
cli
xor
int
pop
icebp
jbe
gs
jp
lret
jo
or
mov
cmpsb
inc
cmp
sub
out
int3
aaa
inc
xor
push
mov
outsb
ret
xchg
xor
pop
sub
pop
cmp
inc
fdivrs
das
cmpsl
shll
jge
in
adc
das
jle
sbb
stos
std
cmc
mov
mov
jle
subl
fdivp
xchg
mov
ficoml
ja
das
in
insb
scas
shrl
pop
jns
ret
pop
lcall
or
or
jl
cmp
mov
jg
stos
push
or
mov
call
jmp
mov
ds
xchg
sub
inc
push
bound
xor
nop
cld
sahf
jno
xor
cli
xor
sub
test
pop
jnp
mov
movsb
adc
and
fdivl
ljmp
sbbl
mov
popf
inc
lock
insl
xchg
gs
add
sub
jg
and
jns
sbb
sahf
mov
and
idiv
mov
stos
out
std
push
xchg
leave
sub
lret
fs
push
jge
mov
cltd
pushf
fwait
cld
iret
pop
das
lret
sarb
shr
in
loopne
adc
mov
cli
in
cwtl
call
sbb
sbb
adc
das
sarb
mov
fnstsw
push
ja
hlt
adc
daa
repnz
rsm
adc
mov
inc
mov
test
lahf
xchg
jbe
mov
bound
adc
cmpb
leave
mov
stos
mov
inc
xlat
fcoml
sahf
mov
jnp
sbb
sub
lcall
sbb
xchg
arpl
outsl
mov
sub
cmp
in
popf
out
push
jg
cmpsb
push
or
xchg
cwtl
mov
das
bound
lds
or
ljmp
addr16
out
inc
gs
fildll
cmpl
adc
dec
mov
ffree
cmp
pop
test
dec
push
lret
jp
ljmp
rcrb
mov
pop
push
lea
mov
jecxz
mov
ret
cwtl
adc
add
push
leave
test
xchg
fimull
jge
mov
add
int
xor
in
inc
lods
aas
pop
dec
mov
movsb
repnz
push
inc
cwtl
into
popa
add
mov
ja
mov
adc
pop
cmp
in
adc
sbb
aas
mov
enter
popf
das
pop
or
test
iret
or
dec
mov
movl
je
repnz
rclb
aam
repnz
xor
push
add
fists
arpl
mov
jnp
repnz
or
sbb
xchg
pop
sub
nop
lods
fadd
hlt
or
in
insl
push
jnp
inc
shlb
dec
jnp
dec
push
into
leave
jno
add
mov
mov
jbe
mov
icebp
cld
imul
std
dec
insl
xor
popa
insl
or
adc
sub
ja
xchg
movsl
dec
sti
sbb
inc
in
jmp
mov
insl
call
aas
jmp
lret
mov
inc
je
adc
orl
push
es
aaa
rcrl
pusha
xchg
das
insb
repnz
lods
lret
push
or
hlt
and
mov
pop
imul
inc
rcl
sbb
cwtl
lret
mov
leave
loope
jnp
imul
out
leave
lock
sti
sbb
pop
lods
outsb
sbbl
xor
jge
mov
add
inc
movsb
xchg
xchg
mov
push
xchg
add
fldenv
pop
xor
andl
ss
hlt
push
fsubr
add
hlt
jbe
xlat
or
and
push
stos
scas
shrb
push
in
push
sbb
push
adc
mov
sbbl
add
add
idivl
movsb
sahf
mov
sub
mov
add
nop
sub
int3
in
push
sbb
dec
lds
inc
ds
pop
push
fisubs
loope
jns
pop
jno
adc
outsl
mov
imul
das
scas
pop
inc
xor
push
jnp
mov
mov
adc
les
test
jmp
sbb
fisttpl
negl
jb
xchg
jge
xchg
and
sarb
mulb
repnz
xchg
mov
and
stos
outsb
cmc
loope
test
cli
arpl
cmp
push
xchg
dec
adc
daa
inc
dec
adc
add
jbe
pop
dec
in
sbbl
loop
inc
xchg
hlt
pop
push
xchg
cmpsb
fs
sbbl
cmp
adc
je
sbb
pushf
cmp
insb
mov
mov
pusha
fldl
xchg
sbb
in
leave
add
sbb
xchg
mov
mov
or
pop
push
stos
mov
mov
ret
mov
mov
jb
ja
arpl
ja
xor
lret
mov
clc
icebp
test
pop
or
push
mov
push
data16
push
aas
enter
shlb
jns
mov
ret
mov
ljmp
gs
ss
test
pusha
loop
push
cmp
dec
or
shll
adc
sbb
and
xor
lock
imul
sbb
sar
jge
cwtl
mov
adc
aam
pop
lds
or
cld
sbbb
xorl
shlb
in
mov
xchg
imul
pop
or
and
out
sbb
aas
add
jns
add
je
pop
mov
inc
arpl
cld
add
movsl
lcall
push
adc
adc
inc
enter
and
and
jmp
das
inc
pop
pop
and
mov
aas
fcoml
loopne
test
push
jp
xchg
push
repz
sub
mov
jecxz
push
cmpsl
mov
pushf
pop
out
sub
and
dec
icebp
pop
push
stc
stc
out
pop
addr16
nop
int
scas
in
stc
lods
jmp
insl
dec
inc
jmp
push
ret
dec
adc
cmp
inc
lret
jmp
fs
pop
fsubrs
xchg
in
rcll
jb
stc
push
push
sbbl
push
mov
xorb
xlat
out
push
lahf
loope
xchg
jb
inc
repz
dec
jae
outsl
mov
ret
push
pop
pop
jnp
in
cwtl
cmpsb
ja
push
or
test
inc
push
aad
decb
jp
mov
sbb
hlt
pop
pusha
sub
mov
aas
into
jmp
clc
or
xchg
in
mov
cmpsb
lods
cmp
adc
sbb
cmpsb
mov
sub
out
sbb
xor
inc
mov
xchg
add
inc
push
mov
test
or
add
cmp
orb
jbe
fisttps
xor
sbb
lods
jns
add
sarl
adc
cltd
neg
outsb
in
mov
cltd
js
jnp
xor
inc
push
aam
fiaddl
jle
mov
mov
or
addr16
cli
mov
pop
stos
lds
mov
inc
das
mov
movl
mov
adc
mov
scas
cmp
xchg
cmp
xor
sub
inc
add
or
loope
sub
adc
enter
xchg
dec
repz
jge
into
mov
mov
daa
fidivrs
dec
pop
in
push
add
jbe
and
sti
dec
xchg
addl
push
lock
shrb
aaa
in
mov
push
je
test
stos
sbb
xchg
pushf
scas
mov
filds
cmpl
scas
jno
test
sub
icebp
xor
xor
mov
sti
test
sbb
repz
sarb
repz
and
mov
iret
mov
out
xchg
insl
orl
fcmovbe
insb
mov
lret
mov
push
mov
add
imul
imulb
dec
lea
push
xchg
and
mov
sbb
mov
cmpb
call
jle
jns
lcall
push
movb
roll
push
dec
mov
in
push
insl
pop
into
xchg
sub
sub
and
add
cmp
shlb
roll
add
inc
mov
adc
push
add
dec
cli
jns
sub
and
movsb
pop
insl
out
pop
cmp
xchg
inc
insl
jp
mov
cmp
mov
push
xlat
lahf
fwait
dec
lcall
dec
sub
and
push
shl
ret
adc
add
add
sahf
mov
lods
imull
fwait
and
pop
dec
and
bound
sbb
jmp
out
jg
sbb
mov
and
dec
dec
xchg
mov
cmp
ret
mov
push
cmpsl
lahf
ja
ffree
xor
xlat
and
inc
jnp
leave
inc
pop
mov
sbb
xor
stos
and
jg
stos
cmp
lcall
mov
push
pop
inc
inc
or
mov
movsb
or
inc
js
adcb
push
mov
pushf
in
loopne
pop
inc
mov
leave
dec
in
mov
adc
and
repz
lahf
mov
in
add
cmp
iret
out
xchg
mov
repnz
repnz
pushf
lock
in
or
lahf
scas
shrl
xchg
xor
cmp
imul
lcall
jle
pop
in
push
cmp
out
testb
mul
es
aam
addr16
mov
daa
out
out
sbb
mov
inc
mov
mov
or
cmp
sbb
mov
pop
xor
pop
push
popa
cs
pop
pushf
xchg
es
xor
ja
in
fmuls
in
rorl
out
jle
sahf
ror
sub
shll
out
pop
adcb
jl
je
lret
push
test
nop
push
dec
jecxz
enter
cmp
outsb
sub
icebp
je
fmul
push
mov
sbb
sub
out
test
out
inc
sbb
inc
fldcw
mov
mov
adc
mov
lds
or
xchg
mov
or
aaa
push
jp
xor
add
shrl
xchg
aaa
mov
lahf
cmc
pushf
andl
pop
adc
adc
mov
int
or
push
mov
jns
xchg
inc
call
fstps
sub
mov
pop
pushf
stos
inc
and
sarl
andl
jge
dec
inc
mov
test
ljmp
leave
jmp
shrb
pop
add
cmp
jb
and
push
stc
mov
aad
adc
adc
sub
jg
cmp
fisttpll
insb
lea
stos
push
loope
mul
cmpsb
lea
inc
pop
jecxz
das
mov
xor
adc
movb
scas
les
mulb
leave
fwait
sbb
imul
nop
inc
sub
fdivrs
and
mov
xchg
xchg
scas
xchg
loope
add
or
enter
cmp
insw
loop
xchg
sub
mov
hlt
push
rol
mov
inc
in
repz
adc
sub
sbb
cmp
xchg
pop
sbb
cmp
pop
lcall
cmp
mov
fscale
mov
dec
cmp
inc
aad
jb
mov
pop
es
fdiv
jp
add
in
je,pn
jae
xchg
dec
out
test
int3
pop
enter
cmp
cmpsl
fisttps
ss
dec
jnp
dec
sbb
cmpsb
and
fwait
out
sbb
mov
fdivrp
hlt
or
xchg
push
fidivrl
out
popa
faddp
jecxz
stos
mov
das
sub
push
fs
mov
jnp
mov
rolb
jns
in
jg
dec
es
mov
sub
mov
fwait
and
rolb
rep
in
jle
pop
popf
xchg
leave
mov
stos
mov
pop
mov
scas
fs
dec
fisttpl
test
cmpsl
jbe
push
xor
pop
popf
out
test
fnstcw
aad
pop
fcompl
cmp
subl
adc
cmp
xor
sti
mov
cltd
out
out
or
or
mov
pop
sbb
adc
aam
loope
fwait
pop
and
pop
scas
pop
add
fisubrl
adc
add
lds
or
jbe
xchg
mov
fldt
lret
aad
mov
data16
xor
in
loop
pop
shll
jg
jge
add
lret
pushf
push
and
repnz
jle
push
pop
stos
or
arpl
arpl
into
outsl
add
test
mov
xlat
pop
daa
mov
pop
int
mov
outsb
mov
test
xchg
or
gs
leave
lahf
xchg
mov
push
and
stos
sbb
and
cltd
hlt
lahf
cmp
std
and
loopne
repnz
call
flds
pop
mull
push
int
lret
mov
neg
xchg
cmp
xchg
cmp
mov
or
into
push
sub
xchg
inc
repnz
inc
push
add
or
aaa
jo
filds
mov
clc
mov
test
neg
and
ja
mov
sarb
cmpsb
xchg
pop
mov
dec
mov
in
jp
scas
test
xchg
loopne
pop
xor
inc
or
mov
add
push
aaa
pop
cwtl
repnz
ret
push
sub
ja
lret
cs
cwtl
mov
adc
les
sub
push
std
inc
mov
enter
cmp
test
adc
test
or
pusha
popa
push
scas
mov
testb
movsb
lds
iret
ja
lds
mov
mov
icebp
xchg
xchg
push
test
add
call
stos
divb
add
mov
mov
mov
cmpsl
cmp
and
mov
cmp
mov
xchg
xchg
push
jne
aas
mov
xor
adc
stos
mov
dec
ficoml
pop
pop
mov
je
addr16
out
movsl
add
ret
stos
leave
sti
mov
xchg
repz
bound
dec
inc
ja
jo
dec
push
jb
sub
cmpsb
fildl
stos
out
sbb
and
mov
pop
out
pop
sub
dec
into
or
cmp
or
adc
pop
in
imul
xchg
push
les
xor
nop
cmc
in
arpl
cltd
insl
sub
popf
mov
mov
das
inc
in
jmp
and
push
lods
mov
jne
and
add
adcl
movsl
jbe
insl
xchg
scas
or
push
cmpsl
xchg
jmp
mov
stc
dec
mov
dec
mov
push
fidivrl
cltd
cmpsl
sub
jl
shl
pop
cmp
std
dec
sub
mov
cltd
ret
and
cmpsl
and
or
mov
out
or
push
sbb
mov
jge
cmp
or
shl
or
and
lods
movsb
lods
jo
lds
pop
pop
ljmp
and
xor
in
push
inc
mov
sub
adc
fsubs
add
std
and
cld
mov
xchg
adc
push
popa
das
mov
push
sbb
fwait
cmp
cmp
and
pop
xor
fistl
addr16
mov
jno
pop
pop
imul
das
cmpsl
sub
cltd
rclb
add
push
pop
mov
xor
sbb
jnp
add
je
xchg
dec
lret
fmuls
pop
lcall
xchg
jbe
adc
mov
mov
cmp
out
pusha
jne
sti
pop
movsl
pop
dec
imul
cld
xor
cmp
and
xchg
insb
xchg
and
stos
jle
mov
jo
call
xor
lods
jo
loope
addb
lea
dec
std
nop
mov
pop
mov
jae
dec
loop
dec
popf
sbb
jecxz
mov
stos
xor
jbe
fcomps
sets
push
xchg
iret
xor
hlt
cltd
cmp
sbb
mov
in
xchg
sub
jmp
popf
cmp
cltd
and
sub
push
push
ljmp
shrb
dec
or
mov
pop
aad
and
cmc
xor
jo
adc
mov
sub
cmpb
inc
add
xlat
xchg
rolb
mov
inc
or
jae
fisttpll
call
pop
push
clc
xchg
sbb
xchg
rclb
cmpl
fildll
and
rolb
popa
repnz
out
add
js
inc
cmpsb
inc
faddl
xor
jbe
rclb
push
lret
and
outsl
push
jne
dec
pop
aas
test
shll
mov
add
insb
dec
shlb
xchg
mov
inc
adc
cs
aad
out
mov
push
and
fdivr
dec
cmp
sub
sbb
fnstcw
push
pop
sub
outsb
dec
sub
mov
das
mov
lcall
ret
jge
ja
into
push
sbb
mov
pop
dec
int
cmp
pop
push
or
clc
fistpl
insl
iret
lods
mov
std
mov
pop
jns
test
enter
cli
inc
push
in
out
push
loope
std
pop
lret
js
jp
xchg
sbb
xor
js
jb
aas
jb
add
jge
jbe
jge
stos
lea
enter
pop
or
enter
jbe
mov
sbb
imul
arpl
test
rol
arpl
or
mov
xchg
ss
push
jae
test
aas
sub
xchg
or
xor
push
shr
outsb
add
push
lods
test
sub
sar
arpl
outsl
testb
xor
or
adc
dec
stos
jne
stc
lds
inc
aad
sub
xchg
fwait
cltd
pop
mov
ss
mov
mov
fadd
lods
jae
and
pop
enter
or
pop
hlt
fmull
push
iret
mov
jo
adc
fisubs
sub
lods
sahf
sar
lahf
cld
mov
adc
push
push
xor
lret
xchg
xorl
pop
jne
ror
fwait
aaa
ss
loope
clc
lods
sub
add
mov
fiaddl
sbbl
adc
es
call
movsb
scas
test
movl
push
test
lret
fwait
mov
cwtl
push
jmp
repz
outsb
pop
adc
popf
daa
jnp
ret
and
das
push
int3
adc
mov
outsl
mov
mov
adc
sub
fxch
inc
inc
dec
out
sbb
push
es
fwait
and
adc
add
lea
push
ss
fcoms
jnp
xorb
and
xchg
test
and
push
repnz
int
movsl
ss
mov
or
andl
or
mov
xchg
loop
adc
inc
add
mov
out
mov
jp
sbb
hlt
push
mov
dec
or
jecxz
clc
or
into
dec
add
lahf
inc
mov
adc
pop
pop
out
push
pushf
test
test
push
jmp
imul
dec
loope
fcoml
adc
leave
xchg
pop
mov
in
jmp
sub
or
pop
and
shlb
loopne
jecxz
jl
sub
pushf
inc
inc
xchg
lret
int3
leave
mov
aas
ficoms
mov
ds
test
leave
push
lret
pop
popa
or
outsl
rol
clc
mov
pop
lds
fiadds
xlat
jae
push
sbb
dec
xchg
aas
mov
and
and
cmpsb
in
popf
mov
fmuls
jae
cld
jp
out
push
ja
or
das
in
and
imul
mov
push
jp
xor
pusha
xchg
fisubrs
mov
sub
jo
or
ds
fcoms
ja
adc
and
pop
push
xchg
or
daa
flds
mov
rcrb
sub
mov
inc
iret
cs
xchg
dec
testl
mov
mov
xor
xor
push
fnstenv
pop
inc
stos
rcl
xchg
sub
je
jnp
test
xor
and
mov
xchg
shl
mov
xor
dec
popa
subb
or
cmp
in
xchg
cmp
scas
push
or
jae
mov
push
test
lret
adc
imul
mov
add
xchg
out
mov
adc
js
idivb
pinsrw
jge
inc
movsl
cmp
jle
insb
mov
daa
jne
aaa
mov
mov
jb
inc
movsb
test
rorb
inc
sbb
ja
cmp
into
push
out
test
imul
mov
test
inc
xlat
push
daa
jae
ja
and
sahf
jmp
cmp
sub
push
iret
xorb
push
inc
mov
cmp
repnz
dec
jno
pusha
popa
les
inc
pop
xchg
add
ret
cmp
jge
sub
jae
xor
pop
pop
insl
loopne
and
pop
jbe
repnz
mov
inc
aad
repz
push
int
test
and
xchg
push
rcll
xor
mov
cli
ficompl
inc
mov
inc
leave
into
xchg
jge
cmp
adc
fdivl
pop
dec
movsb
push
inc
rclb
or
or
inc
stos
ret
js
call
adc
jecxz
daa
push
mov
mov
cmpsl
pop
cmpsb
jmp
repz
sti
sbb
push
int
aam
mov
jmp
xor
je
or
push
jb
ljmp
cmp
add
push
test
shlb
shll
lods
lds
add
mov
mov
stc
repz
jecxz
int3
call
xchg
xchg
or
pusha
decl
jg
popa
mov
inc
adc
cmp
roll
cmp
xchg
mov
scas
leave
ret
in
or
ljmp
popf
dec
out
icebp
or
cmp
mov
adc
push
lcall
xchg
inc
fisttpl
arpl
fwait
call
sbb
scas
in
or
enter
add
int
scas
sahf
into
or
adc
jge
dec
dec
outsl
push
ds
adc
mov
insl
in
xchg
adc
mov
in
je
sbb
dec
adc
push
mov
mov
aam
pop
jne
jecxz
mov
rcrl
test
cmp
mov
or
xor
xor
sub
sub
sub
cs
mov
pop
imul
fistps
insl
insl
out
mov
sbb
negl
daa
jb
inc
xchg
fistpl
inc
cmpsb
dec
push
mov
out
das
sub
pop
call
jp
mov
fldl
out
inc
and
movsb
jne
lret
aad
iret
dec
fmul
sub
test
cwtl
push
lahf
push
dec
addr16
dec
jg
cmc
sub
or
cmp
lcall
notl
stc
push
adc
inc
mov
sbb
leave
lea
arpl
pop
inc
or
sti
mov
dec
xchg
pop
mov
int3
pop
sbbl
loope
or
pop
ficoms
and
out
into
ja
pop
dec
xchg
in
or
stos
lods
mov
das
popa
imul
into
loope
push
lret
call
ja
lret
and
and
sub
loopne
xor
push
inc
pop
or
loope
test
loop
ss
stc
test
adc
adc
cmp
dec
sbb
addl
movsb
stos
cmpb
push
fbstp
xor
das
stos
scas
rorb
arpl
dec
push
aas
dec
hlt
or
outsb
shll
cmp
rcr
lahf
mov
cwtl
jl
data16
loope
add
xor
push
or
das
rclw
pushf
xlat
cmp
clc
jmp
jbe
mov
jp
shll
xchg
sbb
out
scas
filds
cmp
push
push
sub
or
insb
adc
mov
sar
inc
and
gs
dec
push
inc
addr16
dec
stc
mov
int3
pcmpgtb
out
pop
lods
loop
dec
jnp
sahf
out
sub
test
aas
adc
lock
idivb
add
push
nop
out
stc
or
fsubrs
sbb
mov
inc
test
jbe
loopne
hlt
shr
sub
mov
cmp
fsts
mov
aam
out
push
dec
loopne
fdivl
icebp
lcall
stos
ss
mov
dec
iret
and
cmp
test
sahf
aaa
adc
or
xchg
lret
js
pusha
fs
enter
jle
mov
push
xchg
out
sbb
sub
imul
lret
repz
dec
pop
ficomps
inc
or
push
add
inc
sbb
and
ret
cmp
test
add
sub
repnz
push
dec
xchg
jecxz
xchg
xchg
add
or
adc
adc
int3
sbb
cmp
inc
ljmp
mov
sbbb
fadds
cmc
sbb
cmpsl
dec
loope
dec
cmpsl
mov
xor
test
cli
bound
xchg
pop
xchg
pop
xchg
mov
int
sub
aas
ds
inc
testl
push
jmp
adc
mov
inc
leave
jae
xchg
clc
push
mov
mov
jg
fincstp
dec
fcmovb
push
dec
add
cltd
and
into
push
test
xchg
sbb
sar
clc
jns
cli
pop
roll
mov
push
les
movsb
lahf
inc
shl
scas
and
adc
sbb
cmpsl
push
out
lcall
insb
enter
adc
cltd
or
or
jmp
movsb
jecxz
ret
add
dec
mov
lret
cltd
push
push
mov
add
incb
adc
popa
jbe
jl
test
fimuls
dec
xor
xchg
or
mov
sbb
ja
test
jnp
sbb
loop
call
sahf
rcl
fstpl
xor
lds
clc
cmp
xor
or
aam
adc
or
push
xor
into
dec
std
adc
stos
mov
sbb
xchg
ljmp
xor
adc
mov
es
in
iret
cltd
and
mov
int3
loop
mov
or
inc
out
iret
leave
inc
aas
dec
jle
mov
movsb
inc
test
cwtl
sahf
xchg
jae
inc
mov
sub
test
int
stc
das
inc
dec
ret
rorb
xchg
jmp
dec
mov
fistpll
lcall
loope
scas
aaa
imul
pop
push
ss
push
imulb
push
jmp
sub
mov
sahf
je
lcall
or
movsb
sbb
xor
ss
xor
sti
inc
arpl
inc
sub
cwtl
ret
pushf
cmpsb
pop
xchg
xor
out
cmpsb
ss
fisttpl
inc
xchg
mov
out
xchg
jne
fimull
and
mov
inc
ficoml
lods
mov
fs
push
sbb
cld
inc
loopne
sbb
in
xchg
sub
aad
ret
mov
loopne
cmp
js
nop
and
lds
push
push
adc
cmpsl
dec
cmpsl
aaa
xor
addr16
mov
xor
or
aam
sub
push
subl
sub
mov
jecxz
and
fsubrl
in
xorl
mov
xchg
popl
push
mov
and
gs
test
into
pop
pop
cmp
orb
lret
add
pop
sbb
sub
xor
insb
lea
iret
out
iret
xlat
mov
icebp
sbb
and
cmp
sub
in
xor
cmp
and
in
loop
movsl
and
adc
cmp
or
hlt
pop
jb
inc
inc
pop
xchg
imul
es
js
xor
mov
jno
clc
fsubl
dec
jae
fdivs
add
out
mov
pop
xor
sub
fsubs
cs
test
lahf
pop
lahf
xchg
test
or
cmp
js
jbe
inc
sahf
es
int
jp
pop
arpl
adc
jbe
jp
movsb
xor
bound
cmp
into
sub
or
imul
pop
or
insb
sbb
mov
mov
cwtl
adc
jle
cmp
lahf
xor
leave
adc
adc
mov
popa
xor
lock
mov
ljmp
cld
sahf
out
aaa
outsl
andl
jnp,pt
dec
mov
mov
in
jbe
test
adc
mov
mov
mov
mov
sub
mov
push
sub
cmc
or
je
lret
pop
mov
dec
data16
addr16
out
pop
mull
repz
mov
hlt
in
iret
ljmp
fs
push
mov
aam
xchg
in
std
divl
shrb
lods
insl
fiaddl
ret
loope
inc
jae
add
and
cmpsb
notl
stos
loop
decl
xchg
ret
mov
aaa
mov
sub
push
xchg
dec
divb
push
popa
pop
insb
mov
push
sbb
dec
mov
rol
cmpsb
xor
test
push
imul
imul
das
dec
inc
add
push
inc
sti
loope
cli
dec
and
js
test
test
mov
sub
notb
jns
std
sub
adc
mov
xor
dec
les
cltd
mov
cmp
stos
dec
push
pop
adc
pop
sbbb
fmull
sub
push
adcl
js
xchg
frstor
idivl
fwait
jnp
add
xchg
push
int3
jno
test
cwtl
fbstp
mov
outsb
sarb
pop
xor
insl
enter
push
sti
mov
adc
adc
mov
loop
adc
pushf
into
incb
insb
ret
rcrl
mov
aad
cld
jmp
out
arpl
loopne
sub
mov
adc
out
or
jno
cmp
stc
pushf
inc
test
pop
adc
add
rcll
push
out
pop
pop
jae
iret
xor
insl
add
add
iret
add
fdivrs
push
test
sbb
jl
mov
mov
jo
push
stc
adc
pop
add
sbb
mov
push
adc
fadds
lock
mov
sbb
mov
addr16
rcl
xor
cmpb
lods
lock
out
add
aas
mov
aas
dec
dec
dec
in
fisubs
and
xchg
pop
andb
aas
xchg
add
mov
adc
out
push
test
imul
movsl
das
fldcw
and
lock
inc
subb
add
or
in
repz
fmull
imul
ljmp
ja
bound
jo
mov
xlat
add
dec
test
int3
out
adc
mov
push
and
int3
or
lret
nop
mov
xlat
ficomps
std
push
xor
xchg
xor
fisttps
aaa
mov
mov
jnp
jo,pn
sub
xor
hlt
je
add
lahf
pop
scas
lret
pop
sub
ds
xchg
sub
or
dec
mov
gs
xorb
dec
xchg
int3
or
bound
icebp
and
jo
lock
sahf
xor
leave
mov
dec
shrb
mov
data16
es
lret
fdivl
or
cltd
shll
dec
xlat
scas
fs
int3
js
inc
test
add
jl
loope
mov
dec
ds
xchg
enter
mov
mov
cmp
int
mov
mov
out
out
xchg
cmpsl
fisubl
push
jge
ret
sbb
inc
pop
repz
je
sub
icebp
lcall
cmc
les
jnp
mov
loope
pop
jge
mov
jle
cmp
pop
inc
jg
mov
aam
test
and
adc
imul
mov
xchg
movsl
sti
fistl
andl
hlt
inc
jp
dec
cmpsl
sbb
aas
cmpsl
pop
mov
push
cmp
mov
dec
loop
dec
sub
or
xor
mov
repz
fcompl
icebp
test
cld
mov
jg
mov
add
xchg
dec
jbe
jl
inc
jle
inc
push
push
mov
xchg
xchg
adc
adc
decl
jno
pop
xlat
mov
pop
arpl
popa
aam
aad
psrld
scas
gs
rcll
sahf
nop
test
pop
xor
and
mov
inc
sbb
and
imul
mov
insb
push
rcll
add
imul
ret
mov
jb
fldenv
jle
dec
sbb
mov
and
loope
xor
insb
imul
stos
fimull
iret
xchg
test
call
pusha
dec
dec
cmp
data16
aas
mov
lret
push
pop
dec
cmp
adc
repz
and
lods
repz
rcrl
out
adc
aam
dec
loopne
mov
scas
jg
jo
add
shrl
testb
cmp
pop
xor
cwtl
adc
mov
jne
push
cmp
xchg
pop
stos
adc
mov
mov
push
mov
es
lret
insb
mov
push
pop
imulb
or
shrl
mov
out
test
gs
bnd
iret
les
mov
lods
mov
pandn
cmp
pushf
dec
sbb
dec
inc
mov
loopne
xchg
sbb
and
push
add
out
dec
cmp
xchg
pop
mul
int
jns,pt
out
pushf
sbbb
iret
xchg
add
pop
xor
add
sub
jg
adc
xor
jge
loopne
push
jne
aaa
in
pop
fdivr
dec
addr16
inc
and
bound
and
push
or
aad
and
mov
sbb
out
clc
and
adc
in
jle
nop
mov
inc
daa
mov
pop
jmp
lcall
push
xchg
int
xchg
mov
jmp
outsb
mov
jecxz
mov
xorl
icebp
fcmove
jb
mov
add
ds
push
and
std
ficompl
jae
hlt
jne
pop
out
dec
aas
cmpsl
pop
stos
loope
mov
ja
add
xchg
pop
dec
arpl
pop
out
out
enter
lods
fistl
inc
stc
jg
xor
dec
adc
sbb
xor
jp
push
mull
sub
outsb
into
xor
cmp
jp
mov
mov
in
das
cwtl
repnz
add
xchg
jns
insb
fldl
fstl
add
xchg
pop
js
fsubl
cld
add
lock
shr
mov
jl
dec
sub
inc
daa
adc
sbb
mov
loop
cmp
jmp
testb
js
loopne
cmp
adc
faddl
mov
shr
sub
cmp
mov
sub
adc
pop
pop
sbb
out
imul
addb
outsb
sub
xor
pop
xchg
xor
mov
mov
cmp
notb
jmp
xchg
ret
xlat
mov
in
fcomp
pop
loop
pop
xchg
lea
mov
lods
negl
cmc
push
pop
jle
xchg
fidivl
pop
push
cltd
jae
sbb
pop
sub
mov
dec
mov
sub
or
out
adc
fisubrs
mov
jae
push
faddl
mov
or
cs
mov
insb
out
and
jnp
dec
cmp
cmp
mov
pop
pop
sub
mov
jnp
popf
movsl
add
cmp
pop
push
in
adc
and
mov
ficoms
adc
fisttpll
insl
inc
xchg
mov
push
inc
mov
movsl
stos
sbb
addr16
push
rolb
mov
mov
in
xor
xchg
inc
cmp
and
jbe
negl
or
and
int
icebp
pop
cmp
pop
rolb
addr16
test
mov
jecxz
stc
inc
fiadds
push
jge
pop
xchg
xor
outsb
in
pop
subb
xchg
pop
iret
mov
xor
icebp
dec
scas
jl
mov
ret
adc
lods
fidivs
push
cli
jne
jg
aas
ffree
xor
mov
mov
ja
inc
in
cmpsl
xor
add
and
pop
mov
and
or
pop
xchg
popa
stos
fsubrl
mov
mov
lret
popf
and
xchg
shlb
mov
ret
adcl
dec
arpl
adc
and
mov
jb
fisttps
xlat
mov
mov
stos
inc
sub
lret
sbb
les
xor
leave
inc
scas
mov
roll
inc
mov
ret
pop
ljmp
icebp
fisttpll
movsl
aaa
sub
pop
add
push
aam
js
aad
loopne
test
inc
xchg
iret
rolb
sar
rclb
xchg
sbbb
arpl
test
loope
orl
mov
lock
pop
test
mov
je
mov
movl
push
pusha
out
add
hlt
icebp
enter
data16
pusha
rcrb
mov
stos
inc
push
jne
sbbb
push
std
cmp
in
adcb
inc
cmpsb
jnp
jle
lret
pop
out
pop
cmc
add
cmp
adc
sub
jo
push
shll
adc
hlt
jns
cltd
or
or
sub
mov
lret
cli
inc
add
jb
inc
sti
icebp
loopne
testl
imul
dec
xchg
dec
mov
pop
jle
sub
xchg
sbb
mov
mov
push
notl
fdivrs
push
inc
mov
fninit
mov
in
push
xchg
je
jnp
cmp
fsub
pop
popa
cltd
lods
cmp
cli
jae
cmp
jo
subl
imul
loop
addr16
fcmovne
xchg
pop
xchg
pop
outsl
and
cmp
fsubs
jbe
ja
sbb
push
cmp
jl
pushf
cmpsb
ss
test
sub
into
add
pop
nop
fstps
mov
orb
mov
ljmp
jmp
push
xor
adc
add
in
rcrb
inc
pop
lods
xor
int
push
pop
and
sbb
aad
sub
flds
mul
das
mov
imul
mov
mov
test
adc
sub
xlat
scas
and
dec
push
mov
push
jp
cmp
mov
leave
movsl
lahf
iret
lock
jle
lds
rcrb
repnz
mov
js
js
fisubrs
jns
loopne
mov
xor
push
sbb
xor
xor
cmc
stos
sarb
lret
push
insb
stos
lods
adc
movsl
out
inc
fwait
jmp
imul
sub
pusha
and
jle
cmpsl
hlt
pushf
lods
push
mov
and
cmp
ret
xor
test
mov
mov
mov
notb
jle
cltd
sub
insl
fcmovne
push
and
aad
lahf
xchg
cltd
in
mov
pushf
stc
test
sub
jo
or
cmp
and
dec
xor
push
les
das
push
je
push
sahf
addr16
test
mov
subl
cltd
mov
mov
dec
js
movsb
dec
pusha
jmp
in
xchg
sub
mov
dec
and
sbb
inc
push
aam
stc
cmp
rorb
lret
subl
test
call
adc
out
cltd
xor
insl
test
gs
movb
mov
mov
cltd
aaa
leave
dec
sub
popf
mov
scas
sub
mov
out
out
pop
mov
mov
sub
test
enter
pop
pop
dec
pop
xchg
sub
mov
cmp
popf
mov
pop
daa
hlt
xchg
pop
mov
lds
cmpsl
pop
inc
inc
adc
cli
and
pop
adc
movsl
dec
inc
sbb
stc
pushf
loope
xor
leave
dec
push
sbb
cld
psubb
mov
add
sbb
cli
aam
or
xchg
mov
test
push
cmp
jne
enter
add
fnstenv
mov
lods
cmp
imul
xlat
adc
jle
int3
push
outsl
js
xchg
xchg
xor
dec
testb
mov
jp
push
jns
outsl
jl
pop
stc
outsl
out
cltd
leave
call
test
xchg
sbb
stos
fsub
pop
inc
jmp
loopne
test
sbb
xchg
xchg
repnz
in
lret
dec
ja
movsb
fcomip
pop
cmc
mul
cmp
and
hlt
mov
rcl
cmp
or
imul
mov
pop
fimull
and
hlt
push
imulb
jo
inc
cwtl
and
in
mulb
pop
sahf
dec
xchg
jg
out
inc
divb
jmp
mov
popf
cmp
dec
sbb
jl
ret
mov
imul
and
inc
cmp
rcr
adcl
sub
dec
ror
test
dec
xor
fmuls
idivb
pop
or
push
mov
mov
push
in
dec
test
push
push
or
enter
in
jge
lcall
push
cmpsl
or
movsb
sub
cli
fabs
mov
jmp
fdivl
jb
pop
mov
test
lret
jno
addr16
sahf
fwait
push
add
mov
pusha
jmp
and
pop
jbe
or
pop
and
sahf
repnz
sub
js
out
push
in
leave
jnp
mov
popa
adc
jp
dec
fdivp
mov
or
sub
dec
repnz
sbb
push
in
lock
xor
hlt
mov
scas
add
pop
imul
xor
repz
ror
mov
test
adc
xchg
ret
loop
out
jmp
or
or
pop
les
fwait
cmp
push
jbe
clc
mov
sbbl
push
xlat
xchg
and
rorl
stos
dec
cmp
mov
and
mov
sbb
fdiv
mov
sbb
push
and
xor
cmp
pop
jbe
sbb
rcrb
inc
add
push
insb
add
cmp
loope
scas
adc
add
add
xchg
add
into
xor
jg
testb
in
xchg
sar
sarl
rcll
mov
cld
arpl
adc
dec
pop
fldt
lahf
dec
outsb
adc
jle
sbb
cmp
arpl
cmp
notb
add
out
pop
in
pop
sbb
and
cs
in
arpl
adc
pop
and
dec
add
leave
push
insb
mov
dec
push
sbb
es
mov
test
ja
jecxz
clc
pop
jle
xchg
pop
dec
adc
xchg
sbb
pop
leave
shrl
sbb
roll
aam
xchg
add
and
xorl
mov
lret
outsl
jmp
push
fiadds
pushf
idivb
mov
ret
xor
in
adc
dec
sub
pop
sahf
mull
fidivs
mov
add
jg
jg
jmp
adc
xlat
mov
ja
push
lret
gs
cmc
push
xchg
mov
pop
dec
and
add
imul
dec
ss
inc
sahf
clc
mov
jne
mov
imul
out
jb
adc
and
pop
shll
xchg
sub
mov
mov
or
scas
xlat
popa
negb
push
fchs
pop
or
shrl
scas
scas
mov
inc
mov
loope
gs
add
pusha
rolb
adc
mov
test
xchg
sub
lods
dec
dec
xchg
cltd
gs
icebp
push
cwtl
inc
cs
leave
ds
or
sub
ret
into
xor
inc
xchg
dec
mov
xchg
loopne
movsb
push
sub
adc
int3
pop
addr16
mov
mov
push
jo
cwtl
icebp
enter
sub
adc
mov
sbb
sbb
imul
ds
stc
popa
jnp
andb
adc
in
push
xor
jmp
xchg
dec
cmp
movsl
mov
dec
sbb
mov
loop
in
mov
test
sti
mov
fsubs
outsb
mov
out
jb
lret
lret
push
out
outsb
into
movsl
mov
xchg
jmp
xchg
xchg
vpmadcsswd
cmp
loopne
or
loopne
adc
jns
push
push
mov
mov
add
fistpll
xchg
iret
repnz
lock
fiaddl
jb
shl
add
test
test
inc
lods
xchg
outsl
mov
mov
mov
xor
iret
cmp
mov
lock
xchg
pop
add
sub
dec
pop
xchg
adc
mov
jb
inc
inc
daa
inc
int
out
mov
xor
scas
aad
fwait
xchg
cli
push
mov
icebp
imul
pop
in
arpl
cmp
mov
ret
cmc
movsl
mov
or
out
lods
xlat
add
add
cmp
jno
popa
fs
clc
cld
pop
xchg
xchg
loope
jnp
fwait
xor
dec
orb
jb
mov
xchg
lds
lahf
pop
xchg
nop
push
iret
push
or
pop
jae
pop
femms
mov
xorb
inc
fwait
int3
pop
cmpsl
push
mov
push
addl
scas
repnz
andl
adc
les
mov
xchg
lock
popa
jae
in
jnp
repz
adc
ret
jae
mov
mov
dec
in
dec
and
aad
or
popf
std
push
xchg
lret
jg
cmp
addr16
or
dec
cltd
sbb
movsb
sahf
fisttpll
mov
adc
sub
cmp
push
pop
fdivl
sub
stos
xor
gs
lds
pop
inc
cmp
call
cwtl
pop
jge
jne
movlps
push
mov
cld
in
pop
ficompl
sbb
clc
and
jmp
hlt
daa
cmp
pop
dec
iret
jp
mov
mov
cmp
jbe
fmull
mov
daa
push
or
mov
push
add
sbb
int
jp
push
add
mov
je
arpl
add
orb
test
int3
jl
sub
mov
xor
fs
ja
in
or
xlat
xchg
dec
dec
cmp
mov
dec
fwait
jle
ljmp
cmp
or
push
pushf
data16
pop
mov
xor
inc
daa
push
sub
stos
fimull
int3
push
addb
push
cmp
xchg
subb
mov
mov
jmp
push
hlt
xor
xchg
cmp
jns
rcll
push
inc
add
sti
mov
je
jb
into
je
jmp
xchg
push
loope
dec
xchg
inc
jge
mov
mov
and
pcmpgtw
adc
sti
sarb
pop
out
pop
into
add
inc
push
jl
mov
divl
mov
inc
xchg
test
imul
cmp
sub
enter
iret
lea
cmp
jg
push
jno
clc
clc
lods
jns
fcmovne
lods
push
aas
inc
and
in
in
xchg
jnp
sahf
mov
mov
xor
pop
inc
jbe
popa
pop
adc
jb
xor
sub
fstl
repz
mov
icebp
lahf
loop
adc
arpl
jge
push
test
stos
mov
cmp
ss
jp
mov
cmc
cmp
mov
nop
pushf
mov
push
lods
add
movsb
lret
push
xor
mov
sub
loopne
mov
or
andl
push
pop
adc
mov
cld
push
into
dec
push
dec
test
or
sbb
xor
test
out
and
fs
lds
adc
outsl
jg
inc
fnstenv
xchg
sbb
lret
inc
aam
mov
sub
out
push
fidivl
mov
pop
sub
mov
lahf
dec
pop
loope
mov
mov
fsubrs
clc
lret
jnp
inc
aaa
out
enter
out
xor
jbe
imul
aad
insl
pop
bound
out
imul
mov
xlat
jae
aam
xor
jmp
stc
lea
leave
pop
cmpsl
inc
xlat
push
stc
shll
jo
out
mov
repnz
fmuls
mov
xchg
or
loope
inc
xor
cmp
loop
mov
inc
mov
inc
repz
test
movsb
pop
pop
insl
dec
add
outsb
aas
mov
ljmp
jnp
push
inc
pop
aas
insl
mov
rcrl
mov
enter
adc
jae
out
mov
repnz
or
test
push
mov
jo
ljmp
aad
stc
pop
out
loop
dec
cmp
xlat
popa
dec
inc
jne
mov
addr16
push
mov
mov
pop
loope
push
sub
popa
xor
push
xchg
imul
adc
scas
pop
jl
pop
mov
faddl
jecxz
dec
mov
xchg
sti
fistps
lea
or
mov
mov
mov
pop
lods
add
sub
imul
cmp
cmp
aas
cmp
adc
dec
add
fs
mov
fnstsw
adc
mov
bound
adc
cmp
add
mov
jge
push
aas
outsb
push
lcall
enter
dec
roll
push
fwait
ret
pop
push
pushf
jns
lock
fstpt
dec
push
and
jbe
jns
pop
dec
mov
xchg
mov
in
xlat
dec
and
cmp
popf
shr
cld
mov
pop
sbb
rcrl
mov
dec
mov
add
shll
jbe
addr16
jbe
and
cmpsb
ja
mov
cli
enter
add
insl
mov
xchg
cmp
popf
les
mov
inc
xchg
repz
test
mov
jge
push
mov
xchg
xchg
fstps
loopne
adc
call
das
mov
imul
sub
push
xor
in
or
rorb
fs
insl
push
sar
pop
push
lock
lods
jecxz
mov
mov
imul
pop
sbb
mov
addr16
daa
sub
pop
mov
pop
clc
std
push
jo
push
pop
pop
push
call
sar
adc
adc
outsb
lods
lret
sbb
adc
pop
sub
in
and
out
xor
jecxz
loop
pop
adc
dec
mov
ja
dec
iret
xlat
add
sub
shll
dec
jb
add
inc
stos
in
lock
dec
clc
sti
pop
les
pop
lahf
adcl
test
add
add
xor
inc
adc
insb
out
mov
or
pop
jmp
cmp
jecxz
stos
push
jg
aas
inc
lock
test
add
xchg
sbb
mov
sub
xchg
vpandn
ja
mov
mov
adc
sub
mov
pop
inc
test
jb
je
jp
ret
sahf
icebp
push
icebp
or
inc
fisubrl
stc
inc
adc
ljmp
outsb
mov
cmp
xor
mov
cmc
call
cmpsl
int3
push
pop
stc
pop
mov
jbe
inc
ret
cmp
rcl
inc
fisttpl
jl
jl
xchg
pop
push
cmpsb
dec
in
mov
ret
lret
enter
sarb
fwait
insb
testl
mov
test
outsb
add
insb
addr16
sub
xchg
ljmp
icebp
cmp
fadds
sahf
add
in
xchg
xor
insb
add
push
stc
stos
fimuls
lret
out
push
jg
cmp
jno
adc
ror
js
inc
jge
and
das
ds
sbb
mov
cs
ror
test
pcmpgtd
in
xchg
andb
adc
cwtl
ss
inc
mov
adc
or
mov
test
addr16
repz
add
and
xor
cmc
call
or
mov
data16
push
mov
stc
aaa
nop
nop
xor
sbb
mov
push
push
orl
daa
xchg
cmpsb
inc
lret
inc
inc
lods
test
shll
jecxz
js
pop
inc
popa
insb
loope
cmpsb
scas
adc
pop
fnstcw
roll
mov
sbb
repnz
in
popf
sbb
cmp
xorl
dec
inc
and
fidivrs
add
daa
sbb
mov
addr16
pop
or
jno
outsb
ds
sbb
jbe
arpl
xorb
adc
inc
jle
push
sbb
jmp
mov
pop
cld
cs
sbb
mov
stos
fdivr
xor
push
sbb
in
xlat
mov
jbe
std
push
mov
dec
sarb
sbb
subb
pop
movsl
pop
rorl
js
test
pop
outsb
ffree
inc
and
leave
mov
mov
dec
jg
mov
and
or
clc
adc
imul
scas
mov
mov
clc
daa
inc
scas
dec
lret
jne
push
sbbb
cmpsl
iret
frstor
ficoml
sub
push
xchg
sub
cmp
lods
bound
jne
sbb
xchg
test
adc
stos
jne
dec
rcr
push
ret
rolb
pop
add
out
sub
jecxz
ljmp
adcl
lret
adc
pop
aas
roll
inc
ror
add
xchg
xchg
jmp
aaa
pusha
mov
inc
icebp
scas
or
jbe
lods
jae
es
inc
push
inc
cwtl
sub
fimull
xchg
icebp
iret
stos
mov
and
aad
nop
cwtl
icebp
jbe
out
in
mov
cmc
jb
sub
sub
cltd
mov
je
cltd
push
out
ljmp
inc
ljmp
jbe
cmp
adc
fadds
push
push
pushf
and
jbe
test
and
push
xor
xchg
test
aam
stos
hlt
xor
add
int
dec
and
flds
ret
push
sub
inc
push
clc
adc
cld
xchg
ret
lret
sub
test
incl
imul
pop
cmp
cmp
fists
mov
lahf
mov
ffreep
lea
or
mov
out
sbb
and
in
xchg
xchg
adc
cmc
out
xchg
adc
fbstp
sub
mov
ss
dec
out
nop
dec
pop
adc
dec
mov
xchg
test
add
mov
rorb
out
fcmovnu
mov
mov
cmc
daa
sbbl
mov
int
pop
andb
lock
jge
xchg
push
pop
jns
mov
and
cli
es
jg
repnz
stc
adc
push
fsubl
push
lock
dec
insl
pusha
jnp
lret
mov
imul
jb
fidivs
hlt
pop
fdiv
and
xchg
cs
jl
pop
and
ss
popf
outsb
fstps
mov
bound
cmp
es
fs
xchg
sub
mov
mov
imul
xchg
ja
add
addb
add
std
scas
dec
mov
cs
and
int3
outsb
mov
mov
sub
int3
fst
bound
add
out
dec
inc
imul
add
je
std
mov
hlt
push
jmp
sarl
sub
in
jne
imul
inc
jecxz
sub
adc
mov
das
mov
adc
cmp
jl
imul
push
and
nop
aam
aaa
sbb
les
mov
out
lods
loop
inc
push
and
or
sti
cmp
xor
sbb
les
loop
lcall
insl
inc
idivl
stos
adc
sbb
or
repz
cmp
add
addr16
test
leave
xlat
cltd
test
add
call
xor
sbb
mov
neg
pushf
xchg
adcl
sub
mov
cltd
pop
pop
int
mov
insl
xor
pushf
cmp
inc
jnp
es
mov
or
dec
loope
scas
add
ds
icebp
or
outsb
idivb
cmp
rcr
iret
int
add
mov
push
out
or
ret
xchg
jle
pop
mov
mov
int3
mov
fs
xchg
sbb
cli
xor
scas
in
adc
push
movsl
mov
jb
ds
imul
push
je
jne
pushf
fisttps
adc
fstpl
jg
mov
mov
xchg
addr16
out
sub
call
mov
gs
movsl
pusha
int3
movsb
outsl
sahf
mov
cli
das
adc
aad
sub
notl
fwait
sti
fcoms
dec
mov
mov
mov
insb
mov
jl
xor
mov
stos
daa
jmp
add
adc
mov
ret
outsb
cltd
fsincos
out
dec
imul
xor
std
inc
int3
test
adc
scas
int
lods
movsb
inc
adc
cmpsl
aam
adc
mov
aam
xor
push
arpl
inc
mov
and
add
dec
mov
cld
xchg
orb
sbb
xor
movsl
sbb
mov
je
push
pop
nop
push
xchg
pop
addl
adc
int3
shll
push
fcmove
xor
mov
adc
cmpsb
mov
repz
and
sub
add
xorb
ja
and
dec
lahf
ss
or
int
cli
scas
imul
ja
xor
adc
fprem1
fxam
jge
pop
mov
cmc
fcompl
lret
inc
xor
aad
jno
xchg
and
mov
shrl
mov
rolb
sbb
cmp
or
lret
ljmp
adc
decl
data16
daa
les
adc
pop
fwait
inc
add
mov
xchg
movsb
push
mov
adc
fnop
mov
mov
cmp
rcrb
aas
int
inc
or
hlt
stos
ror
dec
dec
xor
popf
and
pop
out
out
ds
xor
ja
add
xchg
call
jbe
mov
mov
test
nop
inc
mov
imul
sub
cmp
ffree
and
pop
iret
adc
aam
inc
ret
push
push
popa
and
call
sub
adc
xchg
cmpb
rcl
cmc
gs
mov
leave
sti
scas
mov
shlb
pop
or
testl
dec
mov
stos
popf
lods
or
sti
mov
testl
mov
ja
outsb
cli
jmp
or
inc
in
mov
xchg
pop
mov
fcoml
fsubrl
cmpsl
sub
xchg
add
push
test
mov
fucom
movb
icebp
mov
push
mov
add
inc
ds
mov
imul
mov
popf
sbb
scas
shll
mov
and
hlt
mov
cmp
les
mov
in
out
rep
pop
fnstenv
fs
jle
ret
push
lcall
mov
movsl
add
cmp
insl
cmp
mov
pop
hlt
and
clc
jns
imul
jp
mov
std
in
clc
cmp
jge
adc
aaa
or
add
jno
ret
loop
push
mov
mov
es
ja
xlat
pop
mov
add
xor
xlat
test
aad
pop
insl
inc
out
pop
dec
push
arpl
cmp
push
fcmovb
inc
js
movsl
scas
mov
xor
scas
jae
addr16
sbb
arpl
jmp
packuswb
sub
lahf
mov
hlt
cmp
inc
fwait
enter
hlt
insb
xchg
or
pop
pop
dec
les
rcll
push
hlt
dec
pop
pop
icebp
mov
cmp
hlt
ss
sbb
sbb
inc
sub
and
jmp
sbb
sub
sbb
push
jp
mov
jmp
pop
imul
pop
add
jnp
int
push
mov
dec
test
xor
popa
lcall
es
cltd
jge
fcmovu
fisttpl
fs
mov
clc
jl
adc
dec
insb
fsubl
test
and
in
sbb
xor
test
xorl
outsl
loope
sahf
push
sub
jecxz
inc
inc
movsb
fnstsw
inc
sub
repz
cmp
mov
or
inc
inc
and
and
push
pop
sub
sti
sbb
push
inc
or
lea
mov
pop
lret
adc
lahf
test
push
pop
and
dec
mov
popf
adc
imul
stos
popl
cmp
or
dec
in
out
div
mov
jns
sti
inc
or
popf
or
add
leave
dec
lret
jne
icebp
pop
xchg
xor
ja
pop
xchg
fcmovbe
pop
mov
cmp
or
mov
inc
push
int3
movsl
pop
and
jl
sarb
popa
hlt
jp
push
addb
push
push
mov
fwait
cmp
imul
popf
xchg
xchg
mov
jle
push
xchg
aad
push
loopne
shll
jbe
adc
xchg
les
cmp
fistpl
aaa
xor
aaa
cmp
data16
xor
int3
fildl
std
je
jl
jge
sbb
lahf
pusha
mov
or
int
mov
and
das
nop
addr16
fmuls
cmpb
dec
dec
adc
sbb
popl
push
dec
mov
add
inc
inc
ds
pusha
push
push
int3
addr16
or
or
addr16
gs
mov
and
mov
mov
in
pop
movsb
add
decl
push
and
mov
push
in
mov
pop
dec
push
jno
xchg
pop
out
mov
loop
pop
cltd
outsl
loope
jb
stos
gs
pop
push
daa
pop
jmp
popa
outsb
dec
movsb
jnp
adc
mov
stos
outsl
sbb
popf
xchg
lahf
loop
cmp
aam
sbb
dec
cmp
sbb
or
fnsave
adc
ds
dec
popf
and
dec
xchg
adc
in
loopne
popf
jnp
outsl
ja
sbb
xorl
jge
ja
ljmp
in
lret
pop
push
xor
ror
inc
lahf
and
jns
adc
xchg
dec
and
addl
pop
adc
adc
and
inc
mov
ret
movsb
repz
aas
call
iret
call
and
imulb
inc
jge
stos
dec
nop
jg
push
sub
cmpsb
insb
bound
lods
sti
stc
jo
push
insl
aad
jb
cmp
adc
adc
push
add
push
loopne
scas
daa
xchg
pop
mov
add
cld
push
sub
mov
inc
mov
test
jg
in
pop
or
push
add
cmpl
and
sbb
jbe
fs
ret
push
inc
lock
arpl
in
push
pop
mov
sahf
jo
out
adc
cltd
or
xchg
fisttpll
pop
stos
dec
xchg
mov
pop
int
adc
jo
gs
data16
int3
pushf
mov
mov
shll
xlat
inc
in
js
jecxz
enter
stos
mov
jb
or
test
pop
mov
adc
repz
fs
in
jno
pushf
ret
or
cs
or
mov
inc
xor
lret
cld
inc
cwtl
ljmp
xor
outsl
icebp
in
mov
inc
ds
test
xor
clc
push
subb
or
addb
xchg
out
mulb
jnp
xor
iret
mov
cmp
ret
repnz
pop
fstpl
pop
dec
pusha
lods
xor
dec
mov
cmp
int3
rolb
inc
pushf
mov
xor
inc
xchg
test
push
dec
pop
shrl
bound
mov
sub
je
xchg
jle
cmp
xor
lcall
mov
or
pusha
inc
test
push
mov
loop
ds
sbb
mov
xor
push
mov
fnstsw
pop
push
movsb
dec
mov
pop
mov
js
es
shlb
adc
subb
insb
loop
jl
add
and
fcmovnu
iret
lret
mov
cmp
pop
ror
or
pop
cwtl
popa
enter
or
lret
mov
push
inc
mov
sbb
ja
lret
sbb
inc
push
std
cmc
sbb
inc
pop
clc
je
mov
insb
and
xor
rcll
and
sub
jae
icebp
add
ret
leave
sbb
lods
sbb
aaa
imul
cmp
mov
sub
rclb
pop
inc
out
roll
int3
sbb
mov
inc
push
das
loop
dec
addr16
out
pop
adc
adc
ds
jle
dec
daa
das
testb
cmp
fadds
xchg
fiadds
enter
jge
out
mov
fists
lret
lods
or
pop
xor
stos
in
mov
add
adcl
xor
out
fcomps
psubusb
jbe
jbe
test
and
adc
cmp
jle
ret
push
push
nop
movsl
and
xchg
mov
sbb
inc
inc
pop
cwtl
popf
push
or
sub
js
repnz
jmp
inc
add
cmp
lret
push
aas
jle
jge
mov
pusha
xchg
sub
pop
cltd
fstpt
popf
and
pop
jecxz
test
addr16
mov
mov
mov
and
push
pop
lds
mov
call
add
fadds
loop
in
out
adc
inc
sti
push
push
into
rorb
repnz
pop
jp
inc
jl
dec
rorb
lret
cmpsb
cmp
lock
fs
push
add
hlt
xor
test
cmpl
bound
xor
inc
call
je
aaa
push
and
mov
pop
sti
cmp
dec
xchg
daa
mov
pop
cld
lds
sbb
lods
push
jno
mov
pop
das
mov
loop
cmp
xchg
xor
pop
sub
cmp
mov
xchg
ljmp
mov
jnp
cmp
mov
imul
push
cmp
in
imul
jl
cli
je
lods
mov
test
jo
add
into
push
int3
mov
or
dec
push
scas
lods
add
shll
imulb
adc
lods
inc
outsl
ds
adcl
in
repz
mov
pop
push
dec
movsb
push
and
cld
popa
sahf
adc
mov
scas
mov
cmp
loope
imul
fs
outsb
lock
fildll
and
lds
scas
jmp
pop
ret
adc
xchg
mov
mov
add
shlb
mov
arpl
int3
std
cmpsl
out
aad
stc
lods
repz
inc
pop
in
aad
cmc
add
sarl
mov
cmp
imul
push
das
fistl
arpl
dec
dec
mov
mov
sub
mov
in
in
mov
cltd
inc
out
xchg
movsb
rorl
push
ficoms
mov
or
lret
pusha
mov
or
jns
mov
out
pusha
or
adc
ret
dec
pcmpeqd
inc
or
or
inc
out
jae
jo
inc
jmp
xchg
push
mov
cld
lods
xchg
les
je
lret
pop
or
cmp
cmpsb
xchg
in
es
loope
mov
push
daa
mov
adc
xor
hlt
pop
push
mov
daa
jle
fs
lods
mov
push
ficompl
sbb
push
xor
addb
pop
add
xchg
jo
mov
sbb
movaps
rcll
xor
inc
mov
repnz
fidivs
sahf
sub
fdivrp
jnp
xor
enter
out
sub
fs
movl
xchg
dec
mov
lods
and
xor
cltd
cmpl
push
icebp
sub
out
push
and
dec
jecxz
sub
stc
mov
xchg
pop
dec
shll
adc
rorb
rolb
mov
push
je
cmp
in
and
jl
fmulp
stc
sbb
inc
js
push
add
loope
xchg
sbb
push
cmp
jge
repz
inc
aad
push
xchg
cmp
adc
push
mov
ss
adc
sbbl
ret
movsl
jmp
and
push
lods
pushf
push
mov
notl
cmpsl
icebp
add
or
xlat
adc
xchg
push
inc
mov
mov
xlat
addr16
ret
cmp
repnz
negb
jl
or
pop
repnz
pop
andb
loopne
data16
push
cmovp
das
in
pop
cmp
or
test
shl
push
repz
dec
inc
int
and
jl
cli
mov
jl
into
push
adc
mov
mov
pop
push
into
mov
cmp
imul
xor
xchg
mov
dec
test
popf
enter
nop
jnp
xor
sbb
mov
insl
push
mov
pop
mov
push
sbb
jp
add
inc
add
mov
jle
mov
cwtl
dec
lods
ret
sub
fst
xor
xchg
sbbl
xchg
mov
aam
stos
aad
cmp
sbb
xchg
mov
dec
incb
xchg
jne
xor
mov
jmp
testl
xor
out
into
sub
out
outsb
mov
push
jbe
pop
xor
or
imul
sti
jmp
in
cld
push
dec
sub
dec
cmp
mov
sub
out
mov
sbb
iret
push
mov
std
xchg
dec
lods
add
or
xchg
inc
and
adc
sbb
mov
aaa
inc
sub
push
add
inc
pop
andb
dec
jp
dec
pop
test
xor
outsl
mov
icebp
and
jecxz
test
outsl
or
inc
sub
cwtl
sahf
mov
add
xor
ja
shrl
vmovntps
mov
jo
cli
jge
ja
ror
movsb
add
in
sbb
mulb
jmp
or
jle
push
or
sti
dec
jbe
cmp
popf
mov
ret
loopne
loopne
mov
out
push
rorl
lahf
mov
or
out
add
pop
outsb
or
lock
fucomi
in
or
rolb
xchg
sbb
les
in
mov
mov
in
pop
adc
dec
mov
xchg
push
push
in
nop
outsb
mov
fstpl
data16
js
js
je
inc
mov
fcomi
inc
pop
xchg
adc
outsl
inc
mov
xlat
mov
sub
pop
imul
push
jo
cmp
insl
or
or
mov
int3
add
rcll
dec
mov
lock
push
mov
mov
cmp
cmpsb
jmp
inc
nop
sub
sub
sbb
push
jb
cmp
sub
inc
add
dec
and
push
cltd
jg
jge
inc
fcomps
es
mov
out
mov
mov
xchg
dec
mov
mov
xor
mov
fsub
jge
sbb
es
loop
inc
add
dec
in
mov
sbb
cli
sbb
fdivrl
add
test
push
stc
xchg
test
sti
push
push
mov
popa
outsl
test
in
push
and
xor
add
xchg
jle
sbb
fnop
add
mov
xor
into
gs
loopne
dec
cmp
pusha
jns
js
addl
loop
pop
push
ss
lea
movsl
aad
push
pop
loope
sbb
cltd
lcall
popf
dec
into
sbb
movsl
inc
pop
pop
sub
push
les
xor
jecxz
push
push
mov
mov
fs
loopne
outsb
push
mov
hlt
lock
adc
cmpsb
ds
js
jb
lret
test
mov
push
push
test
sbb
cmp
xchg
aaa
outsl
fwait
hlt
push
cmpsb
shr
sub
iret
push
or
roll
inc
mov
push
dec
push
movsl
mov
lods
push
mov
mov
outsb
sbb
cmpsl
and
aas
stc
sub
fcoms
sub
shll
jl
push
push
mov
fiadds
push
fildll
loopne
dec
mov
and
mov
jno
sbb
fstp
bound
pop
add
inc
or
or
fiadds
sub
repnz
ret
cmp
int3
es
xchg
lock
cmp
cmp
sahf
icebp
push
decb
icebp
mov
fnstcw
outsb
mov
scas
mov
in
mov
std
shll
js
adc
int3
lods
shll
push
cmp
jl
mov
lds
add
xchg
js
movsb
stos
and
jle
push
repnz
arpl
cmp
inc
ret
mov
xor
mov
and
jae
xchg
out
pusha
add
push
sbb
cmpsb
mov
lcall
sets
cmp
sub
cli
or
test
sub
dec
sub
pop
push
stc
push
aam
and
xchg
in
or
xor
sbb
loope
icebp
jg
lock
mov
mov
dec
lret
dec
in
das
dec
jp
pop
inc
lcall
movsb
je
pop
xchg
cmc
out
dec
lret
adcl
push
test
xor
sbb
xlat
lret
push
mov
imul
sbb
fsub
and
jge
sahf
arpl
or
movsb
cld
or
inc
lods
ss
add
test
aaa
push
arpl
inc
mov
hlt
ret
mov
jmp
lods
fisttps
xchg
inc
das
pop
and
push
push
call
call
ror
push
fldt
adc
int3
sub
mov
mov
add
lods
pop
sub
aaa
cmc
cmp
js
outsb
outsb
rolb
lock
add
mov
and
loopne
cltd
insl
add
jge
and
pop
jns
insb
test
add
fwait
add
jmp
inc
call
lahf
popf
cmpsl
rcr
js
ljmp
or
mov
mov
repz
xchg
ror
add
mov
pop
dec
inc
shlb
push
sbbb
imul
fwait
aas
mov
dec
outsl
loopne
into
sub
fcoms
nop
jnp
mov
pop
stos
popf
lret
mov
push
or
lcall
sub
inc
outsl
iret
mov
cmp
add
xor
or
mov
jmp
lock
inc
xchg
inc
imul
xchg
and
pop
jns
test
mov
xchg
sbb
shl
jo
xor
movsb
jns
in
add
int3
fisubl
scas
inc
addr16
test
icebp
xor
dec
fsts
sti
aaa
loope
lcall
popa
adc
das
push
push
inc
ficoms
lahf
and
shufps
js
xor
cs
out
xchg
mov
stos
pop
pop
mov
fwait
xlat
jecxz
aas
xchg
iret
mov
add
aaa
bnd
in
cltd
mov
cmp
cs
cmc
fbld
xchg
mov
jg
repz
fxch
push
shl
iret
arpl
mov
pop
ret
push
add
mov
mov
push
and
adc
call
aaa
cmc
add
ljmp
inc
popa
cmpsl
mov
inc
sahf
xchg
bound
mov
and
enter
test
ret
inc
shll
ret
bndstx
and
inc
les
lods
jb
loop
int
sbb
je
inc
data16
mov
jle
mul
fsubl
fisttpll
cmpb
aad
dec
xor
mov
decb
add
mov
insb
xchg
dec
sbb
cltd
pop
inc
imul
xchg
cmp
sbb
cmc
and
mov
push
int3
push
mov
jo
and
dec
xor
out
cmp
xchg
cmp
aad
and
mov
test
ss
pop
dec
xchg
test
mov
or
xor
mov
out
dec
inc
fdivrl
je
or
lods
cmp
inc
test
hlt
js
int
or
adc
pop
in
or
sub
call
mov
shlb
fnsave
nop
stos
push
ss
sbb
inc
test
mov
jecxz
popf
adc
jnp
mov
xor
xor
mov
ja
mov
imul
outsb
and
scas
push
aaa
and
pop
add
pop
negb
push
mov
sbb
pop
mov
add
int
stos
cwtl
pusha
jbe
push
in
sub
cmp
adc
dec
daa
xchg
in
and
mov
sbb
loop
xor
sbb
or
fwait
cmc
dec
mov
inc
lret
jp
call
das
or
test
aad
pop
push
xor
lods
dec
pop
inc
mov
fildll
cli
pop
test
pop
jmp
sbb
or
fcomps
pop
inc
xchg
fs
add
repnz
test
loopne
pop
stos
clc
mov
andl
lahf
sahf
jmp
mov
sbb
into
cmp
add
ss
ljmp
xchg
jae
or
pop
jg
sub
lahf
xor
in
mov
mov
pop
shlb
outsl
daa
xchg
repnz
add
push
movsl
push
jo
test
sbb
and
ret
pop
and
xor
in
sub
fwait
aas
bound
inc
movb
push
hlt
shll
pop
popf
ret
shll
push
fwait
xchg
inc
xor
push
dec
xchg
jle
or
adc
ds
bound
rcrl
int3
cmpsl
and
rorl
fcoms
lods
pusha
lret
inc
sbb
and
sbb
jecxz
stos
dec
scas
inc
fisubrl
jge
sahf
jns
fs
popa
add
jl
pop
inc
and
mov
ja
addb
adc
icebp
pop
idivb
pop
pop
sbb
lods
pop
jb
pop
jns
es
loope
subl
mov
stos
je
adc
xchg
fbld
arpl
ljmp
add
mov
jb
or
fs
mov
mov
iret
inc
xchg
mov
lcall
mov
rolb
cwtl
lahf
xchg
push
es
xchg
test
xchg
mov
pop
mov
mov
jae
push
xchg
pop
insl
jmp
pop
cmp
and
add
fdivl
incb
and
xor
fwait
adc
fisubrl
cmp
add
jnp
fs
adc
mov
stos
pop
das
pop
outsl
call
lods
pop
fwait
loop
dec
sbb
les
jl
cli
add
jge
sbb
decb
stc
dec
sub
or
xor
pop
fldt
frstor
and
movsb
loop
es
xchg
xchg
fldcw
add
add
rclb
xchg
xor
mov
add
jp
and
fwait
xchg
push
mov
or
sbb
dec
pop
cmp
movsb
shl
add
mov
lret
je
push
in
outsb
imul
aam
mov
cmp
or
aad
jae
xor
sbb
xchg
push
inc
and
jae
pop
adc
jbe
pop
mov
insl
iret
sub
int3
dec
scas
dec
push
mov
mov
mov
pusha
fs
icebp
add
mov
rolb
xlat
fiaddl
call
jb
pop
mov
mov
shr
aad
inc
mov
pusha
test
loopne
daa
mov
pop
cmp
cmpsl
xchg
movsl
mov
dec
xor
repnz
dec
mov
fstpt
pop
mov
jp
pop
lds
sbb
imul
test
stos
cld
ss
mov
sti
lds
daa
xchg
jle
aam
jbe
mov
cmp
and
fistps
fcmovnbe
mov
push
push
aad
pop
and
icebp
icebp
cmp
push
subl
out
hlt
xchg
div
sahf
pop
add
or
sahf
repz
cli
mov
out
add
iret
test
and
pusha
sti
xchg
mov
leave
mov
lock
pop
testb
fdiv
or
pop
jp
push
jns
adcl
loopne
fs
mov
lea
scas
pop
fs
xchg
jnp
xchg
pavgw
dec
mov
popa
ret
popf
and
cmpsl
xchg
sub
lock
adc
sub
sbb
cltd
insl
hlt
loopne
sbb
xchg
in
add
mov
dec
xor
mov
mov
mov
mov
cmpsl
clc
jmp
das
mov
fsts
adc
loopne
pushf
xchg
mov
xchg
mov
lods
cwtl
inc
mov
push
sbb
hlt
pushl
addr16
jp
int3
shll
fcompl
push
hlt
mov
xchg
mov
pop
mov
xor
lock
pop
mov
mov
dec
loopne
cld
ja
add
in
or
add
call
shr
mov
jnp
xchg
ljmp
xchg
jl
push
xchg
pushf
push
es
push
imul
out
jp
fs
push
jne
pop
xchg
xor
xchg
mov
into
mov
pop
cmpsl
jle
inc
jmp
fistpll
daa
mov
imul
add
imul
insb
hlt
dec
and
cmp
test
sbb
or
mov
dec
sbb
sarl
xchg
inc
mov
aam
pop
cmp
dec
adc
fidivrl
cmp
mov
push
xor
or
mov
pusha
xchg
mov
das
adc
inc
outsl
mov
loop
inc
mov
dec
dec
fadds
into
mov
push
jo
cmp
dec
cmp
dec
aad
cmpsb
std
lahf
pop
push
popa
mov
mov
ljmp
test
je
lods
fwait
loop
jae
push
push
cmc
fdivs
leave
mov
sub
jp
pop
adc
fidivl
sub
ljmp
test
and
insl
adc
mov
mov
ss
pop
pop
dec
std
repnz
sbb
push
cmp
pmaddwd
pop
nop
lcall
scas
addl
stos
jae
and
inc
mov
sub
pop
pop
push
mov
mov
hlt
or
xchg
or
scas
pop
es
xor
jle
dec
xor
scas
js
sub
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
sahf
loop
fsubp
inc
jmp
sub
jmp
imul
data16
pop
push
test
insl
mov
adc
and
xor
adc
stos
or
xor
repnz
stos
mov
fsubrs
rolb
add
mov
lds
orb
mov
mov
popa
into
imul
jl
inc
loop
iret
movsl
mov
test
mov
and
mov
pusha
xchg
scas
sub
lods
push
xchg
jb
sbb
sub
rol
ds
and
jp
xchg
or
jno
lods
bound
std
sbb
adcb
adc
inc
loopne
imul
push
bound
loop
xchg
xlat
xor
cltd
cmpsl
jecxz
imul
rcr
ret
pop
dec
inc
sub
push
adc
ds
sub
sbb
clc
xor
js
nop
js
lcall
nop
popf
cmp
jbe
mov
pop
adc
data16
insl
cmpsl
rclb
imul
push
popf
daa
mov
sahf
inc
xchg
mov
push
arpl
nop
out
int
jns
and
and
cmp
mov
pop
div
je
and
mov
jno
int3
nop
repz
lock
out
scas
lcall
mov
ja
mov
xchg
lret
loope
test
enter
mov
jp
sbb
xchg
mov
pop
bound
jno
sub
ret
stc
xor
jecxz
pop
jb
jge
pusha
lret
rclb
lret
iretw
mov
call
out
mov
je
push
sub
xor
cmp
scas
repnz
maskmovdqu
negl
mov
mov
dec
sbb
mov
cmp
call
mov
in
es
aam
mov
sub
call
xor
adc
mov
dec
push
dec
cmp
or
ficomps
mov
iret
ss
bound
xchg
pushf
lret
cmp
loop
ret
xchg
sbb
jmp
cli
divl
add
ret
mov
fcomip
sbb
lea
nop
lock
adc
stos
sub
sub
int3
and
pop
dec
lods
dec
mov
enter
sub
pop
lods
and
push
pop
pop
aas
movsb
jmp
repnz
aas
dec
mov
inc
imul
repnz
mov
pushf
jnp
push
xchg
mov
ljmp
or
add
loopne
and
je
in
add
lcall
test
cli
xlat
sbb
or
jmp
jl
and
fstpt
push
test
sbb
add
or
loope
xor
push
add
mov
push
mov
sub
int3
pop
lds
push
or
je
adc
mov
int3
ret
daa
test
inc
add
call
inc
ljmp
aad
imul
lahf
push
cmp
daa
neg
loop
fnsave
in
push
sub
jno
push
inc
jge
ds
xor
dec
mov
leave
xchg
lret
outsb
inc
push
outsl
mov
cmpb
arpl
adc
icebp
rorb
xorl
pop
lea
ja,pn
insl
ds
sbb
insl
daa
jo
xchg
pop
jo
pop
sbb
push
lock
add
stc
mov
sbb
xchg
inc
mov
mov
iret
xchg
mov
xchg
push
lcall
push
test
lahf
push
or
.byte
