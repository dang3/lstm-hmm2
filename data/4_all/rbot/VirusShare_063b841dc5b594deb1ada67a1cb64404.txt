pop
rolb
jo
push
add
push
add
push
add
add
add
rolb
push
rolb
add
push
add
rolb
or
add
test
rolb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
es
mov
add
mov
mov
add
loop
push
push
loopne
dec
mov
pop
insl
fisubrs
rcrb
and
bnd
jns
sarl
sub
cmp
push
and
test
addr16
repz
or
jge
cs
cmp
aaa
add
loop
mov
push
aam
pop
dec
push
loope
pop
sub
pop
xlat
mov
movsl
je
cmp
out
pop
fwait
cmp
nop
xor
test
lods
fldcw
fimull
push
and
shll
into
push
arpl
testb
xchg
iret
push
add
pop
mov
sub
add
mov
or
pop
and
xchg
jecxz
push
or
addr16
lahf
jg
mov
out
mov
cmpsb
fistpl
sbb
mov
pop
mov
aas
add
sbb
call
scas
lcall
aam
push
pop
inc
mov
add
daa
add
add
cld
sbb
add
add
dec
rcrl
lahf
push
das
fwait
mov
out
sbb
lds
push
dec
pop
cmp
rol
into
xchg
inc
and
and
mov
mov
bound
loope
mov
xchg
mov
adc
mov
cs
sub
xchg
xorl
push
cmp
xor
cs
aas
dec
mov
fbstp
test
jge
in
jns
movsl
imul
out
aaa
jp
ja
stos
rcrl
push
xchg
jmp
imul
aad
sti
or
lods
div
jae
push
scas
jle
es
cmp
sti
or
sti
mov
clc
leave
pop
sbb
mov
dec
test
loope
or
mov
lds
mov
pop
mov
fadds
das
mov
pop
sbb
inc
push
pusha
fwait
dec
xor
mov
inc
mov
or
and
or
pushl
xor
lret
icebp
int3
mov
arpl
xchg
inc
and
mov
lea
in
mov
sti
push
dec
ret
mov
cwtl
cltd
xchg
xor
sbbl
mov
add
les
dec
sub
push
mov
in
xor
sub
cmpsl
cld
test
pushf
pop
lods
jecxz
out
sub
enter
in
xchg
leave
inc
les
or
in
popa
fwait
and
iret
add
jae
dec
outsl
xor
loop
aam
cmp
fs
dec
pop
xor
xorb
cltd
mov
enter
gs
int3
repnz
popf
mov
push
mov
jbe
outsb
add
or
xor
imul
pop
lcall
sbb
sub
push
aas
mov
fcoml
aas
mov
and
aam
push
mov
lods
or
ss
inc
or
cmp
adc
jmp
nop
js
or
dec
out
roll
repnz
and
inc
and
xor
sub
mov
adc
popf
jp
and
or
add
sub
je
inc
popa
jae
xchg
loope
leave
repz
rcl
mull
inc
pop
jbe
jg
mov
mov
or
outsl
mov
lds
es
lcall
cmp
inc
or
jnp
test
loop
aas
lret
mov
fdivrs
imul
je
xchg
or
mov
aaa
cwtl
movsb
hlt
sarb
js
mov
dec
or
push
stos
imul
out
xchg
test
mov
adcl
popa
repz
inc
inc
or
push
out
cmpsl
ss
adc
pop
xchg
movsl
cld
in
cmpsl
sbb
dec
mov
cmp
cmp
mov
jecxz
mov
jo
ljmp
pop
shrl
imul
insl
xor
inc
ficoms
xor
jge
mov
mov
decb
jo
bound
push
movsb
ja
cwtl
jmp
xchg
sub
pop
scas
jecxz
je
xlat
bound
stos
xchg
dec
fildl
inc
inc
jb
pop
test
jl
flds
dec
inc
xor
out
rcrb
imul
and
inc
push
aas
xchg
rcll
lods
add
shll
inc
je
cmc
cmpsb
add
outsb
mov
sub
fdivs
arpl
movsb
outsl
mov
mov
adc
jl
test
pop
sub
dec
dec
pop
push
pop
mov
fcoml
sahf
fwait
scas
das
negl
inc
pushf
sbb
lods
rcr
outsl
and
sbb
mov
pop
scas
out
xor
out
in
mov
push
ja
stc
inc
cmp
imul
xor
adc
dec
loopne
or
jle
push
jne
xchg
inc
jo
filds
push
xchg
inc
fldenv
lods
inc
clc
adc
cld
push
mov
adcb
fisttpll
dec
outsb
pop
mov
jmp
cli
mov
movsl
pop
shrl
in
addr16
addr16
les
push
cmp
lods
pop
xor
jp
or
enter
repnz
push
and
iret
xor
lds
mov
jns
jnp
movsl
inc
sub
test
mov
fstpl
inc
stos
insl
shlb
mov
clc
cmp
mov
pop
test
call
adc
aas
repz
leave
sbb
pop
and
jl
jge
xchg
insb
lock
and
jmp
shll
fadd
add
ret
test
jb
mov
cltd
cld
dec
dec
mov
inc
fidivl
out
sti
dec
fsubrs
mov
xor
pop
ret
sbb
testl
jg
rcll
hlt
xor
mov
inc
push
fistps
push
add
pop
arpl
and
cmc
clc
stos
nop
sbb
lret
pop
xor
insl
pop
dec
jl
pop
mov
arpl
sub
cmp
jecxz
sub
mov
stos
aad
xorl
lock
cmp
sub
rclb
andl
sub
mov
pop
mov
mov
sahf
xchg
aam
or
or
dec
icebp
mov
jmp
xor
cli
cld
leave
mov
mull
push
out
mov
bound
or
sbb
cltd
add
mov
pop
pop
add
jl,pn
mov
xchg
mov
movhps
icebp
fbstp
mov
inc
data16
sbb
cmc
jecxz
xor
fwait
and
cmc
cltd
pop
jmp
pop
push
jns
mov
hlt
cmp
inc
iret
jno
jge
mov
fstps
in
shll
adc
lcall
arpl
clc
add
in
repz
aas
mov
into
add
mov
testb
xchg
xor
dec
sahf
outsl
clc
mov
add
addr16
push
cmp
pop
div
sbb
xchg
jbe
insl
cmp
cmp
lock
icebp
mov
dec
jg
sbb
out
aad
inc
in
fmul
fwait
ret
sarb
aad
mov
in
addr16
cmpsl
xchg
repnz
notb
cli
cmp
insl
fdivs
std
faddl
nop
pop
sahf
stos
icebp
dec
mov
les
cmpsb
loop
rcr
adc
lret
imul
or
popa
les
fcoms
lahf
and
repz
test
xchg
sahf
cs
add
push
dec
aas
adc
movsl
and
cmpl
adc
dec
add
ret
aas
shl
and
jno
mov
jno
pop
xor
xchg
aas
sbb
or
push
repnz
addl
addr16
lret
or
xor
xchg
loopne
jne
nop
pusha
inc
es
movsb
inc
call
jns
adc
jo
pop
cmpsl
incb
movl
fpatan
imul
push
bound
push
stos
xor
push
dec
xor
pop
add
jo
aas
imul
add
fisttps
mov
imul
mov
dec
lret
and
xchg
mov
adc
add
int3
add
mov
daa
aam
cmp
push
adc
cmp
lret
cmp
dec
push
shlb
gs
arpl
rorl
add
fisttpl
pop
mov
sbb
sahf
stos
fdivrs
fistpll
add
int
pop
and
dec
mov
push
sti
cld
ljmp
sub
mov
add
xor
nop
pop
mov
adc
pop
out
dec
ficompl
xor
pop
rcrb
es
test
lahf
push
inc
outsl
enter
fwait
xchg
jb
rolb
adc
repz
and
loop
ror
sbb
cmpsl
push
jbe
xor
insl
lods
out
pushf
dec
mov
imul
pop
iret
adc
out
jl
ljmp
and
add
imul
push
add
and
aaa
dec
loop
and
inc
loop
test
jg
out
inc
and
xchg
imul
xchg
or
out
mov
fldl
jp
adc
lods
adc
nop
insl
lret
cwtl
or
mov
mov
sub
push
int3
clc
sub
sub
rcrb
ret
hlt
scas
cmp
push
lea
and
adc
mov
insb
repnz
pop
adc
cmpsb
and
int
sub
or
xchg
pop
cmp
sub
mov
leave
pop
lret
jg
test
xor
aad
pop
jns
and
test
lea
pop
and
push
rcll
xchg
and
jnp
inc
mov
shrb
mov
dec
in
sbb
pop
frstor
iret
and
movsl
push
dec
hlt
aas
nop
loop
cmc
iret
mov
or
inc
pop
in
pop
push
ljmp
xchg
mov
adc
inc
imul
dec
xor
and
pop
mov
cld
fs
loop
out
ss
stos
xlat
adc
lcall
xchg
stos
repz
lret
mov
push
push
cmp
xlat
pusha
push
das
loopne
lds
mov
xor
inc
or
ficomps
inc
push
xchg
addl
dec
js
int3
dec
sti
sub
mov
rorl
fadd
icebp
adc
call
jp
paddd
sahf
dec
cmp
ret
pop
int3
es
add
call
lds
mov
push
mov
fdivrl
mov
sbbb
jnp
nop
loopne
daa
enter
or
and
insl
xchg
popa
xchg
cmovnp
in
out
ret
cmp
xor
push
lods
lock
push
js
and
mov
int3
xor
in
pop
jo
mov
mov
xlat
stos
or
stos
outsl
add
in
jno
xor
cmpxchg
and
cmc
push
pop
sub
lcall
sub
and
std
popf
fcmovnbe
push
adc
into
inc
les
cmc
inc
mov
sub
aas
jmp
cmpb
addr16
fs
mov
inc
pushf
cmpb
xlat
aam
pop
and
cmp
into
cmp
inc
out
xchg
ss
iret
pop
loopne
fwait
lea
test
mov
mov
add
shrl
adc
test
mov
sti
fiaddl
in
mov
xchg
pop
and
lods
mov
mov
in
inc
idivb
jmp
inc
in
cmp
lock
add
add
cli
mov
aad
outsb
daa
fmull
mov
sbb
jns
shll
sbbl
test
shlb
ret
fsubp
fildl
sub
repnz
movsl
daa
add
mov
shlb
movsl
push
push
dec
inc
mov
fnstsw
ficoml
mov
cmp
cmp
ret
push
adc
ficoml
mov
mov
fwait
in
test
std
mov
je
aam
je
and
jle
cmpsl
std
mov
xor
int
loope
xlat
cmc
pusha
xchg
jbe
movsb
cwtl
movb
mov
dec
idivb
pop
call
mov
test
inc
mov
adc
in
adc
and
push
xchg
sbb
and
mov
fists
test
or
push
dec
sti
push
es
sahf
sahf
pop
pop
or
je
icebp
jo
xchg
inc
in
sub
mov
notb
mov
es
xchg
out
dec
nop
dec
jae
jo
mov
clc
push
push
xchg
in
pop
clc
ficoms
aad
aam
clts
test
xchg
xchg
dec
ss
and
fisubs
jb
pop
push
sahf
aad
das
movsb
push
sti
lcall
stos
js
mov
add
mov
or
jb
push
and
and
out
loopne
enter
add
sbbb
movsl
mov
shrb
iret
xchg
push
in
out
mov
push
testl
pop
xor
popf
push
ret
push
xor
out
xchg
hlt
pop
inc
out
aaa
into
mov
pop
lods
int
cltd
popf
lods
cmp
push
in
adc
das
in
int
stos
mov
mov
sbb
stc
mov
jge
mov
shlb
inc
stos
outsb
repz
sbb
out
scas
shll
mov
or
mov
scas
xchg
movsl
xor
imul
icebp
sbbl
test
xlat
sub
test
fwait
pop
int3
fdivrl
inc
sahf
decb
xor
aas
mov
jnp
jecxz
dec
shlb
add
mov
jno
jg
push
cltd
and
cld
cmp
cmp
mov
data16
fwait
loopne
and
sbb
or
push
mov
or
fidivl
and
push
outsl
mov
pushf
mov
pop
pop
mov
mov
testb
rol
not
insl
hlt
sbb
push
cmp
or
mov
cmp
fldenv
imul
aad
pop
bound
imul
cmp
sub
outsb
mov
or
pop
push
fiaddl
fs
cmp
cmp
jnp
inc
mov
push
cmpsb
ja
mov
addr16
dec
mov
xor
or
or
jg
js
fimull
imul
je
lret
mov
arpl
mov
mov
imul
and
sbb
cmc
popa
dec
iret
sahf
xchg
xchg
sub
and
divb
insl
mov
xchg
fadd
xchg
inc
sub
aas
imul
lcall
sub
sub
pop
cld
cmp
adc
cmpsb
lahf
int3
sbb
pusha
pop
loop
out
cwtl
sub
jl
mov
xor
mov
mov
lcall
sbbl
dec
xorl
add
stos
out
inc
pop
xchg
push
mov
sahf
test
stc
out
outsl
jmp
in
inc
aas
adc
aas
fsubrs
sbb
inc
jp
and
test
inc
push
mov
push
ret
pop
lcall
mov
and
shll
fs
xchg
or
fnstsw
jae
adc
push
jmp
push
das
sbb
xchg
mov
xor
mov
cmp
jmp
push
lret
int
jp
inc
fimuls
je
sbb
shll
in
sbb
es
inc
scas
ja
or
mov
out
cwtl
or
xor
xchg
cmpsb
and
cltd
addr16
jb
dec
push
or
pushf
leave
jle
enter
jp
lock
das
add
xchg
and
mov
icebp
loopne
mov
dec
cmp
test
cmp
roll
in
push
push
std
fsubs
mov
mov
lds
pop
mov
jo
inc
xchg
cmpb
test
push
dec
das
insb
outsb
xlat
mul
sbb
push
aas
adc
mov
loop
cmc
pop
lods
dec
data16
sub
dec
out
test
cmp
dec
popf
cli
push
mov
fisubrl
scas
outsb
clc
sub
xchg
pop
in
lds
or
inc
movsb
in
in
push
dec
stos
cmpsl
cmp
pusha
push
pop
mulb
imul
cs
jecxz
inc
push
or
imul
mov
inc
jnp
pop
cmp
push
movsb
je
js
adc
fstl
xor
jbe
cld
fildl
scas
nop
and
pop
sbb
scas
in
cwtl
loope
fidivrs
cmp
fstl
into
cmp
inc
mov
cmp
rol
clc
or
inc
ja
fwait
jmp
or
dec
lret
or
mov
loop
mov
or
lret
clc
inc
mov
cmp
cs
and
pop
loope
sub
sub
jmp
les
and
adc
enter
mov
mov
sti
or
fwait
out
imul
repnz
je
jle
xchg
sti
test
mov
mov
stos
pop
dec
insb
in
imul
sub
cmp
clc
pushf
xchg
xchg
aas
sub
lret
dec
or
loope
cmp
fwait
adc
xor
paddb
push
jecxz
push
mov
fsubs
jnp
mov
adc
cwtl
cmc
enter
pop
test
call
call
lds
shrb
jge
cmp
pusha
sbb
and
mov
loopne
bound
pushf
rorl
rcrl
inc
mov
xchg
cmc
inc
dec
xor
mov
sub
shl
aaa
imul
adc
das
popf
test
pop
out
call
sub
pushf
or
xor
add
aas
scas
dec
scas
and
cmpsb
clc
jns
inc
or
xor
inc
jge
adc
shrl
pop
pop
mov
pop
mov
hlt
pusha
aad
js
jle
flds
sbb
cmp
mov
xor
jp
daa
rcr
pop
mov
mov
mov
lods
mov
addr16
cmp
out
repz
stos
push
fistps
and
shlb
xchg
clc
xchg
dec
lods
add
pop
jle
pop
scas
jl
imull
cmp
push
cli
push
push
cmp
adc
inc
lcall
or
popf
push
sub
sub
dec
es
loope
cmpl
test
sub
loopne
mov
insl
andb
mov
jecxz
jecxz
cmp
jnp
push
push
and
sbb
test
mov
mov
push
sbb
adc
sub
rorb
ds
mov
cmpsl
sahf
cmpsb
mov
or
xor
cmp
add
call
cmp
xchg
movsb
shrb
dec
xchg
std
inc
scas
mov
mov
nop
imull
mov
xchg
out
push
mov
aaa
nop
ja
cmp
jno
inc
jbe
xor
pop
push
ret
lret
popa
push
out
mov
or
gs
in
xchg
les
pushf
mov
pop
sub
jns
hlt
popf
sbb
push
leave
and
xchg
dec
shll
lret
push
or
xchg
in
sub
shlb
bnd
aas
jecxz
push
lods
mov
and
pop
cmp
test
inc
inc
pop
cmp
and
cmpb
mov
enter
add
cld
iret
add
out
repz
and
sub
xchg
inc
jae
icebp
push
lods
mov
repz
aad
jb
add
lea
pop
fcoms
inc
or
sub
cmp
mov
sbbl
xor
jl
inc
jne
mov
pop
jge
or
mov
push
xor
ja
loopne
adc
sub
popf
mov
outsl
pushl
shlb
shl
sub
lock
adc
lods
jne
sub
daa
outsl
pop
loop
bound
adc
fdivl
inc
push
mov
sbb
cmp
incl
repnz
inc
jne
into
out
xchg
dec
subl
pop
daa
loope
inc
cmp
cli
or
into
loopne
daa
je
aam
push
loope
sbb
mov
mov
xchg
test
gs
mov
stc
mov
aaa
xlat
in
or
je
sbb
jle
cmpb
mov
sub
inc
fs
aaa
sbb
cmp
cmp
stc
sub
push
ja
push
mov
adcb
loope
mov
pop
lock
shr
arpl
popf
xchg
sbb
nop
mov
imul
push
sbb
mov
fisubl
cmp
lahf
cwtl
lods
imul
or
das
hlt
push
iret
add
pop
aas
rcr
push
sbb
stos
cld
loop
addr16
fiadds
pop
inc
cmpxchg8b
leave
flds
fidivs
sub
jle
jne
cmpsl
adcl
test
mov
iret
mov
cli
enter
push
push
ficoml
ljmp
pop
bound
dec
int3
cmp
test
sbb
repz
jno
lcall
push
jmp
jne
aad
jl
scas
mov
inc
cwtl
jae
adc
lret
adc
adc
inc
insb
mov
lock
mov
fisttps
jmp
sbb
pop
into
dec
orb
popf
imul
fs
mov
mov
cmp
mov
xor
mov
mov
add
adc
jle
pop
in
adc
je
mov
loope
test
inc
pop
sarl
push
cmp
sub
mov
xsave
xchg
or
dec
dec
fwait
pop
movsl
sbb
pushf
jg
sbb
aam
cmc
ret
sub
mov
sub
jle
ret
sub
mov
sti
mov
xor
jae
push
test
insl
movb
lret
pop
sarl
fs
add
jbe
sbb
cli
jno
leave
ret
das
push
das
dec
dec
int3
int
cmp
mov
clc
sub
or
test
mov
movb
xor
fisttpll
call
sbb
ja
data16
pushf
xchg
stos
sbb
stos
icebp
sbb
pop
cwtl
mov
in
adc
mov
adc
les
jecxz
inc
push
push
vxorps
jno
add
or
lcall
nop
mov
int3
lcall
mov
idiv
je
jb
push
mov
clc
lea
loope
jb
clc
lahf
lret
sarb
es
cli
ss
xchg
ja
cmpsb
call
sub
ljmp
push
ror
and
aas
test
mov
icebp
mov
adc
loop
cli
push
insl
cwtl
push
sub
ljmp
repnz
outsb
jno
jnp
jb
mov
and
push
or
lds
inc
xchg
sahf
loope
jmp
pop
pusha
lahf
int3
inc
pusha
fldt
sub
repnz
mov
dec
inc
punpckhwd
inc
ret
add
adc
shrl
imul
fwait
scas
mov
pop
sbb
ret
dec
inc
cmp
icebp
rorl
jg
mov
sahf
roll
push
out
fildll
jmp
aam
pop
adc
mov
xlat
push
and
push
aas
repz
sub
sub
jne
cmc
mov
sahf
and
fwait
call
test
sahf
hlt
jg
inc
sub
loopne
mov
imul
and
pop
pop
mov
hlt
lds
test
addr16
adc
xchg
xor
test
mov
int
in
sub
mov
subl
sub
nop
xchg
dec
popa
icebp
add
push
in
push
lahf
push
out
nop
into
incb
dec
das
push
orb
pop
adc
stc
int3
push
scas
mov
mov
jl
dec
scas
xchg
jl
in
in
mov
add
dec
aas
ss
sub
and
mov
lea
in
repz
push
lret
pusha
gs
icebp
aad
xchg
jae
ds
mov
add
pop
xor
aas
arpl
fnsave
jne
sub
sub
test
jbe
add
aas
dec
and
popf
clc
jbe
xchg
aaa
ret
imul
inc
xchg
adc
mov
lock
leave
leave
lea
jbe
imul
mov
in
inc
adc
pop
cli
dec
mov
or
add
push
adc
adc
adc
test
push
add
push
sub
xor
pop
jns
sahf
adc
mov
pop
xor
cmp
repz
push
cmpb
or
cmc
push
lods
pop
and
test
mov
pop
inc
sub
aam
in
mov
in
cmp
jnp
dec
nop
int3
jnp
and
sub
adc
cmc
lock
int3
lock
lret
pusha
lret
sti
sahf
mov
lret
xchg
filds
mov
jns
mov
push
pop
cmp
int3
test
andb
sbb
call
xchg
mov
mov
in
ljmp
ja
push
loop
ss
xchg
push
xorb
or
subb
pop
jl
cmp
push
mov
adc
cmp
and
outsl
testb
add
das
and
dec
sahf
addb
imul
inc
imul
popa
sub
xlat
xlat
jecxz
mov
sbb
jge
push
out
fisttpll
dec
cwtl
scas
imul
push
inc
dec
test
out
dec
or
repnz
dec
add
popa
add
dec
loope
test
mov
or
jno
lcall
or
lods
xchg
pop
mov
inc
shlb
sti
inc
dec
jl
cs
dec
inc
addr16
cmpsl
mov
fisubrl
pop
mov
inc
pop
idivl
icebp
xchg
jmp
mov
jecxz
mov
xor
cmp
test
inc
jmp
inc
inc
push
sub
aad
add
loopne
push
xchg
js
shrb
push
mov
jl
pop
pop
fisttpl
xor
mov
stos
dec
add
lret
scas
lds
jmp
sub
push
jnp
push
cmpsb
jg
rcr
or
cmp
adc
adc
in
dec
das
lret
lock
dec
mov
sub
adc
pusha
push
dec
repz
and
xchg
out
sar
push
ffreep
cmc
repz
es
push
ret
in
pop
gs
sub
sbb
arpl
fwait
mov
imulb
lret
stos
in
hlt
mov
jo
pop
loopne
cld
adc
imul
adc
ret
int3
pop
pop
psubusw
pop
xchg
and
dec
lock
xchg
movsl
andl
adc
mov
mov
mov
mov
pop
jae
pop
dec
dec
dec
imul
cli
pop
sbb
cmpsb
test
iret
and
sub
cmp
xchg
aaa
xchg
pop
cmp
mov
sub
jns
or
mov
lahf
ret
movsl
mov
arpl
mov
cmpsb
sub
push
push
cs
bound
stos
mov
xor
jb
sub
inc
push
dec
nop
les
xchg
mov
cmp
mov
mov
test
pop
rclb
or
add
ret
cmp
mov
shl
adc
add
mov
add
inc
or
or
bound
pop
xor
mov
mov
cld
xor
lds
pop
sub
dec
push
xor
and
dec
sbb
gs
jbe
dec
lea
fxch
mov
pop
sti
pop
loop
mov
in
je
xchg
push
mull
adc
arpl
adc
mov
jnp
adc
and
rclb
xor
jne
mov
arpl
or
push
adc
jns
inc
aam
cmp
jae
xor
push
dec
xchg
sub
into
mov
sbb
mov
push
pop
push
xchg
pop
mov
in
in
pop
add
inc
sbb
ja
push
dec
push
outsb
pop
flds
xor
push
add
xlat
cmp
push
xchg
pop
push
in
es
add
outsl
push
xchg
inc
lcall
in
xchg
add
iret
fsts
jns
cmp
les
test
dec
out
lret
repz
or
mov
frstor
call
cmpsl
mov
outsb
sbb
in
inc
mov
pop
lea
adc
inc
mov
scas
aam
pop
add
in
xchg
or
xchg
ljmp
xor
mov
shrl
insl
out
iret
fsubrl
push
add
mov
xor
sbb
das
int3
cs
dec
lahf
test
cwtl
xchg
dec
mov
std
xchg
cwtl
insl
inc
mov
xchg
cmp
mov
lcall
in
js
test
pop
inc
xor
jnp
sub
aad
sbb
out
mov
or
nop
pop
xchg
jne
lods
stos
add
sahf
aam
bound
aaa
int
inc
clc
mov
pop
dec
fists
cmc
dec
mov
lahf
xchg
jne
daa
lret
push
mov
push
sti
and
fwait
pushf
xchg
jl
ficompl
ljmp
repz
insb
ljmp
fimuls
stos
leave
mov
fidivrs
adc
push
cmp
inc
jb
pop
or
out
sub
mov
cmp
dec
in
add
sarb
fmul
pop
gs
enter
pop
lods
psadbw
sub
stos
fidivrl
fistl
and
sarl
sub
fucomi
cmpsb
nop
in
inc
inc
jno
mov
pop
and
repnz
add
cld
mov
test
jle
mov
stc
jno
gs
sub
xor
arpl
and
jle
push
sbbb
push
daa
sti
shrl
addr16
insl
sbb
xor
sbb
out
mov
mov
test
push
scas
mov
jo
daa
je
add
outsl
jne
in
lods
cmp
push
out
lods
sbbl
fistpll
xchg
cmp
xor
mov
mov
xchg
cmp
lret
pop
stos
iret
nop
push
out
cmp
mov
enter
loope
or
inc
mov
daa
inc
jle
enter
pop
push
sub
hlt
dec
shll
dec
xchg
push
jnp
push
dec
stos
sub
xchg
push
push
mov
jecxz
dec
cmpb
lock
mov
pop
pusha
insl
add
push
or
and
adc
cmp
push
pop
jl
fsubs
arpl
inc
inc
jl
rcrb
scas
dec
movswl
sbb
xlat
jmp
in
and
lds
mov
pushf
mov
sti
addb
push
pop
arpl
xchg
xor
scas
sbb
sub
mov
lock
mov
addr16
shlb
jecxz
jg
xchg
or
sub
inc
inc
mov
cltd
jmp
and
or
dec
cmpsb
in
outsb
add
lods
adc
fcompl
lcall
popf
xchg
add
adc
pop
or
in
mov
cmp
sbb
into
mov
and
out
divb
fbstp
pop
jle
push
sbb
nop
and
xchg
cmp
out
jg
cld
pop
popf
loope
sub
adc
cmpsb
in
pop
add
inc
and
sub
push
std
fdivl
rclb
imul
mulb
xor
mov
add
xor
shrl
jle
push
pop
in
sar
pop
imull
add
cmpl
xorl
test
push
mov
cmp
lds
sbb
mov
push
jp
ljmp
in
int
mov
xor
lcall
cwtl
mov
mov
xchg
and
call
mov
ljmp
lcall
xlat
int3
sbb
into
inc
xor
insl
jmp
sbb
or
lcall
push
lcall
cmp
xchg
cmp
inc
and
ljmp
lock
xchg
jmp
insl
jmp
loopne
arpl
xor
xchg
push
or
stos
popa
cmp
dec
test
icebp
mov
into
ret
or
sbb
lock
inc
cwtl
fsubl
add
push
loopne
dec
add
jnp
pop
jecxz
ret
add
xor
outsl
fildl
add
push
push
int3
ljmp
lds
adc
aad
sbb
int
sbb
aas
sub
jecxz
mov
fcom
xorl
lcall
and
mov
adc
mov
out
repz
xchg
daa
mov
lock
mov
outsl
fnstsw
lods
or
aaa
aam
stos
outsb
add
adc
xor
push
ljmp
sbb
testb
icebp
jge
cmp
fistpl
mov
xor
loope
aaa
or
cli
adc
and
pop
int
sbb
push
lret
inc
data16
push
ja
and
push
mov
addr16
scas
mov
loope
out
mov
or
stc
jge
cmc
fiadds
cpuid
cmc
mov
loopne
aad
pop
in
dec
adc
cmc
mov
adc
xchg
push
rcr
lcallw
dec
dec
test
or
pop
pop
std
iret
sarb
cmpsb
roll
sbb
scas
out
cmp
sub
lods
test
or
jl
imul
adc
xor
outsl
sahf
mull
imull
push
idivl
dec
xor
fwait
pop
mov
xchg
sub
sbb
inc
jg
test
loop
add
mov
or
xchg
outsl
jnp
jecxz
inc
mov
mov
jb
jae
push
xlat
dec
dec
cmp
or
in
jge
sti
rcrl
rolb
push
jg
test
les
mov
jmp
mov
xchg
and
or
and
sbb
fistpl
xorl
incl
inc
dec
mov
sbb
pop
arpl
in
and
mov
jmp
jmp
loop
scas
pop
push
ja
mov
lahf
mov
stos
mov
sub
push
lods
repz
sbb
mov
sub
fstl
pop
inc
pop
filds
je
repnz
add
xchg
enter
in
push
sbbb
movsb
test
cmp
sub
pop
cmpsb
mov
mov
das
sub
adc
xchg
sub
outsb
inc
das
jg
mov
sbb
mov
sbb
idivb
inc
rclb
xor
lret
ficoml
push
jmp
push
cmp
mov
and
out
jnp
fcmovb
out
dec
les
mov
rclb
pusha
or
enter
pop
adcl
stos
ret
jae
add
push
repz
sahf
pop
add
test
cmp
test
mov
or
xor
mov
lret
out
dec
add
ds
mov
mov
cmp
push
and
pop
sarl
dec
inc
addb
call
or
sarb
xor
sub
loop
testb
jno
or
inc
xchg
xchg
es
mov
shlb
add
add
xchg
rcl
in
jb
sub
mov
cmp
iret
out
ds
add
push
push
lret
pop
pushf
jnp
sub
xor
sbbb
lcall
jle
push
push
add
jne
and
rorl
cmp
and
pop
mov
dec
and
bound
push
outsb
dec
pushf
mov
add
cmp
sub
notl
add
call
or
push
jl
mov
mov
push
orb
pop
xchg
ret
push
addl
xchg
leave
cmc
test
mov
xchg
shl
push
insl
sub
pop
in
jae
dec
rorb
cs
xchg
xor
xchg
fsub
sbb
stos
ljmp
rorb
movsl
dec
jl
in
xchg
data16
imulb
js
test
mov
xlat
mov
mov
cmpb
or
add
cmp
xchg
and
inc
prefetchwt1
or
leave
jle
aam
aad
push
fists
sbb
xchg
rcrl
push
cwtl
push
lret
mov
insl
test
iret
xchg
push
into
jno
mov
addr16
jecxz
sbb
push
aas
aaa
mov
loope
push
in
ljmp
mov
push
loop
out
lods
sbb
enter
push
jle
and
cli
movsl
jp
jle
sarl
outsl
jno
sbb
les
in
and
sbb
push
jae
sbb
fistpl
fldt
aad
pop
sbb
pop
sbb
enter
xabort
int3
imul
xor
fidivl
pushf
insb
pop
and
mov
inc
xor
frstor
xorb
pusha
subb
imull
cmpsl
arpl
mov
push
or
lea
inc
imul
insb
xor
test
in
jo
fnsave
sbb
mov
mov
adc
push
pop
jno
mov
aam
jne
mov
mov
iret
arpl
mov
adc
xor
ljmp
push
fwait
jo
jmp
sub
loopne
xor
leave
or
cmpsl
sub
jl
lahf
dec
sbb
inc
mov
test
push
lea
fildll
divb
pop
xor
cmp
pop
repnz
mov
adc
lds
inc
add
cmp
mov
adc
shrl
psraw
hlt
inc
push
nop
add
fisttpl
pushf
mov
xchg
inc
pop
jmp
callw
inc
lock
lods
xor
add
lcall
cmp
jne
repnz
jns
inc
jge
cli
and
fnstsw
mov
vprotd
cmp
imul
or
mov
sub
xor
fisttpll
in
pop
jo
and
xchg
imul
sub
stc
sub
adc
lods
ljmp
dec
xchg
push
test
imull
or
fdivl
jne
or
sbb
pushf
and
sarb
mov
pop
push
loope
fidivl
adc
push
and
addr16
mov
adc
data16
popf
xchg
pop
arpl
mov
jnp
loopne
cmp
sbb
push
xor
cmc
cmp
lahf
mov
sub
lea
jnp
test
sub
test
inc
aas
jl
push
and
dec
test
push
mov
jnp
insl
pusha
notl
pop
popa
xchg
cmpsl
out
pop
push
lahf
hlt
rclb
sub
pop
and
mov
div
and
xchg
cld
ret
sbb
jge
cmp
cltd
enter
nop
shl
add
jns
lret
mov
and
out
add
mov
fs
jmp
mov
cmp
sub
loope
adc
loop
mov
lock
sbb
pop
jne
es
into
pop
dec
push
sbb
fisubl
mov
jp
loope
jle
mov
repz
ja
out
inc
fwait
test
or
sub
and
movsb
inc
stc
call
xchg
add
mov
mov
jne
int
shl
push
mov
es
xor
dec
cmp
fisubrs
mov
push
dec
jnp
cli
fiaddl
aad
sbb
adcl
out
dec
pop
popf
jmp
aaa
ds
xor
jno
cmpb
imull
push
movsb
mov
mov
jne
jne
sub
scas
sub
cmc
rcrb
leave
inc
xchg
loope
jmp
dec
sub
mov
xchg
outsb
mov
daa
inc
jle
sub
dec
jo
mov
mov
movsb
mov
push
fdivs
insb
data16
mov
cmpsl
fwait
outsl
stos
cmp
mov
ja
test
xchg
ja
inc
mov
pop
nop
repnz
and
insl
gs
xchg
mov
adc
sahf
mov
inc
jecxz
enter
lcallw
addr16
push
notl
hlt
jbe
pop
out
repz
imul
insl
daa
inc
or
mov
sbb
dec
mov
jmp
jb
ja
fidivrl
in
mov
and
loope
in
mov
jecxz
cmp
scas
out
push
dec
adc
lock
sub
push
clc
xchg
inc
clc
cli
push
sub
mov
pop
sahf
jne
mov
push
fnstenv
jl
jle
insl
imulb
mov
ja
dec
imul
pop
mov
ja
adc
push
cmp
inc
xlat
fst
xor
mov
popf
fdivl
ds
dec
call
shl
rcrb
jmp
fadd
ds
mov
scas
and
xchg
pusha
mov
mov
sbb
mov
cld
lds
add
mov
sub
into
pop
push
dec
add
sti
mov
daa
or
xor
ds
cld
cmp
xlat
popf
repz
test
sub
mov
cli
mov
neg
or
hlt
sub
mov
je
mov
sbb
clc
test
mov
notl
aad
push
jg
rcrb
inc
adc
jae
dec
lds
xchg
jge
xor
jno
fstl
xor
sub
jge
jne
stc
jae
inc
add
fmuls
and
ljmp
inc
or
popl
cmp
xchg
or
jbe
inc
mov
pop
or
aaa
mov
imul
fwait
push
nop
rclb
mov
dec
inc
je
lods
mov
fistpl
imul
xchg
jp
add
rol
shrb
inc
inc
out
mov
andl
addr16
dec
mov
add
movsl
lea
mov
imul
dec
ss
adc
mov
add
fldln2
xchg
insb
mov
cmp
bound
scas
cmpsl
std
out
out
in
mov
push
pop
and
jmp
lret
xchg
jl
push
jbe
dec
mov
mov
pusha
lds
mov
jne
daa
pop
dec
cwtl
xor
cmp
aaa
ret
push
scas
mov
mov
sbb
jp
dec
in
test
repnz
cmp
xchg
popf
inc
movsb
pop
popf
and
xlat
pop
lods
scas
cmp
int
lret
cmp
lcall
stos
pusha
daa
call
add
pop
push
addr16
fadd
mov
xor
jmp
dec
in
mov
shrl
test
ja
scas
aam
adcb
fwait
fs
les
iret
mov
imul
mov
adc
sbb
mov
dec
sub
jp
pop
cmp
aam
je
adc
pop
sbb
fdivrl
mov
movsl
dec
dec
fisttpll
fdivl
pushf
stos
pop
xor
fldcw
add
sub
mov
loop
adc
inc
outsb
push
xor
inc
cmp
movsb
sbb
sbb
lods
mov
test
ja
fdivl
add
repz
mov
lds
mov
add
test
hlt
loop
mov
ja
ljmp
pop
das
mov
mov
pop
loope
adc
shl
mov
or
dec
pop
xor
loopne
daa
mov
testl
jnp
pop
in
cs
jl
sarb
lcall
mov
push
dec
adc
fsubrl
fcompl
mov
xchg
push
cmp
data16
push
adc
dec
sbb
call
ret
shrl
or
mov
mov
shl
xchg
sbb
in
subl
lahf
dec
das
mov
and
push
inc
and
popa
lcall
dec
cli
add
cli
cmp
addl
je
lahf
xchg
cwtl
sbbl
xchg
adc
inc
mov
add
aam
in
push
movsb
insb
mov
pop
xor
pusha
inc
in
cmc
int
adc
adc
jnp
mov
sbb
hlt
inc
sbb
dec
inc
fmull
sbb
xchg
cltd
fistps
cwtl
imul
and
f2xm1
and
cld
pop
enter
dec
mov
jge
inc
mov
push
iret
push
push
test
fstpl
out
pop
lock
add
mov
rclb
mov
lret
es
mov
ret
and
pop
xlat
lods
sub
fs
ficoms
aas
addl
in
mov
sbb
stc
movsb
pusha
add
in
adc
push
xchg
cmp
mov
add
pop
inc
fldl
mov
mov
adc
push
pop
inc
adc
cmp
cmp
xchg
pusha
dec
jae
cmp
in
sbb
mov
jae
mov
out
gs
xor
shlb
sbb
cmpsb
push
sbb
shll
lods
and
fwait
cmpsl
jbe
into
mov
mov
out
shrb
cld
sarw
mov
and
and
std
stos
fstpl
xchg
and
out
div
testl
inc
xchg
pop
push
bound
mov
jmp
or
jb
je
lahf
push
sahf
int3
add
inc
int3
dec
out
dec
mov
jg
pop
rorb
js
sub
xchg
sahf
mov
imul
ficompl
mov
cmp
notl
or
cmp
push
mov
lahf
clc
mov
dec
call
insb
int3
pop
es
sbb
or
out
pop
lods
add
aam
xchg
pop
sbb
jb
pop
js
enter
call
inc
sahf
out
jg
push
jmp
fdivrp
daa
pusha
jl
scas
hlt
lahf
pop
sbb
jbe
jbe
mov
das
into
xorb
inc
adc
test
out
dec
in
lret
imul
mov
lahf
pusha
cs
neg
inc
sub
mov
push
xor
dec
cwtl
mov
push
lods
cmp
mov
pop
xchg
in
sub
sbb
in
mov
dec
fs
sbb
sub
int
mov
icebp
setno
jp
or
push
int3
mov
fldenv
fcoms
filds
mov
cmp
in
and
mov
or
xor
dec
and
pusha
call
mov
add
pop
pop
or
add
push
push
iret
int3
ljmp
push
or
mov
pop
pop
xlat
iret
shlb
sti
jb
sbbl
fisubrs
popf
jg
lahf
add
dec
movsl
mov
sbb
mov
and
jl
inc
jnp
mov
loop
add
jl
push
jmp
jl
orb
adc
fimuls
test
ficoml
icebp
icebp
ja
cld
stos
dec
mov
cmp
xor
mov
xchg
xchg
jmp
push
xlat
add
mov
sub
and
lock
outsl
jp
outsb
cmp
je
mul
jge
push
outsb
xlat
pop
jbe
inc
ror
mov
ljmp
jl
or
add
repnz
bnd
push
shrb
pop
pop
data16
insl
cs
jmp
shrl
hlt
sbbb
xor
mov
idivb
push
adc
and
or
and
movsl
mov
push
lcall
sarl
pop
mov
lods
adcb
inc
clc
adc
sbbl
test
add
cld
adc
jmp
push
pushf
rcl
mov
insl
dec
fdivl
cmc
push
lahf
cmp
stos
gs
xchg
jno
std
imul
popa
dec
sarl
loopne
jmp
out
fdivrl
push
push
jmp
test
and
sbb
or
adc
lea
inc
add
and
nop
aad
inc
pop
imul
inc
lret
test
imul
sahf
paddsb
or
xchg
xor
pop
pop
mov
and
mov
push
inc
cld
fs
jnp
iret
out
xor
jmp
pop
mov
jns
dec
imul
pop
dec
mov
aam
aam
popf
fiadds
inc
push
cmp
inc
ret
lahf
pop
xchg
arpl
ffree
mov
es
inc
cmc
add
jl
int
jecxz
dec
mov
push
popf
cwtl
mov
out
daa
cmp
ds
add
or
sub
cmp
movsl
push
adc
sbb
mov
lock
nop
mov
push
push
and
jmp
jae
mov
cmovo
clc
xchg
rcll
cld
mov
and
push
flds
xchg
cmp
mov
xchg
mov
push
cmpsb
push
imulb
call
pusha
mov
test
jp
mov
cmpsb
mov
aad
scas
in
imul
cli
jp
ja
das
sub
stc
movsl
stc
cwtl
cmc
jno
std
out
pop
push
mov
and
je
cmp
andb
aad
jb
fisubrl
filds
push
adc
add
ret
iret
push
loopne
repz
or
jmp
lret
aad
xor
mov
stos
outsb
xchg
mov
scas
lahf
pop
rorl
and
ret
fidivrl
enter
int3
inc
std
out
scas
scas
mov
aaa
dec
outsb
xchg
into
fld
jecxz
lock
movsb
cmpl
add
jp
cmp
add
fwait
dec
outsb
mov
jbe
mov
add
cmp
jb
pop
cld
movsb
insl
xor
lcall
clc
xchg
lcall
or
out
cmpsb
or
fwait
popf
loope
jecxz
sbb
loope
mov
in
insl
pushl
mov
sbb
lods
inc
and
insl
mov
notb
test
loopne
movsl
mov
div
sub
push
stos
xchg
pop
jo
and
ror
mov
mov
out
in
test
int
fldcw
imul
psllq
cs
js
adc
scas
pop
rcrb
shll
stos
and
sub
je
pop
adc
add
out
sub
ss
sbb
outsb
andb
push
or
fldt
jl
mov
ja
xchg
mov
addl
inc
add
xchg
xchg
clc
test
push
push
xor
in
subb
mov
pushf
cltd
fbld
inc
sub
stos
sub
pop
lret
push
sbb
movsb
cmp
aaa
push
mov
cmp
inc
xorl
mov
xor
pop
mov
add
bound
fdivr
or
daa
outsb
add
daa
sub
mov
mov
shrl
sbb
xor
enter
rcl
mov
sub
mov
mov
pop
and
fnstcw
push
mov
rcrl
or
push
call
in
cmpb
xlat
push
sbb
inc
stos
jae
shlb
jl
notb
jl
cmp
sbb
movsl
movsb
jg
fisttps
cmc
cld
sub
jl
push
xor
jecxz
sbb
mov
sub
adc
push
and
fidivl
or
push
pop
jl
pop
imul
jo
or
mov
cmp
or
xchg
pop
icebp
ret
roll
pop
cmp
aas
jmp
cmc
mov
pop
repz
jne
xchg
cmpsb
pop
dec
cwtl
addb
pop
jmp
jnp
orb
mov
loope
cmp
fwait
imull
cmp
movsl
pop
aad
sbb
xchg
cmc
push
sahf
cwtl
notb
xor
inc
mov
dec
xorl
les
pop
fwait
push
mulps
jmp
shrb
negl
inc
push
or
cwtl
pop
cmp
frstor
fsqrt
mov
into
dec
pop
cli
fnsave
lds
adc
in
cmpsl
mov
aad
xlat
mov
out
cmpsb
cmp
popa
daa
outsw
inc
xor
adc
test
xor
or
fistpll
push
dec
xchg
stos
and
xor
iret
cmp
cmp
jo
jge
aas
cs
dec
inc
test
stc
or
arpl
jp
rorb
imul
mov
btc
bound
mov
mov
pop
test
push
pop
xor
bound
sarl
enter
call
outsb
aam
and
inc
cmp
popa
adc
lods
dec
and
push
idivb
aam
xchg
insl
sub
xchg
pop
jmp
mov
out
xor
mulb
add
cs
test
sbb
popf
stos
dec
nop
scas
xor
out
push
cld
cs
lret
mov
sub
add
inc
rorl
pop
xchg
inc
daa
ljmp
xor
cltd
fwait
jg
mov
lock
pushf
fcoml
fs
pop
add
or
in
mov
filds
sbb
xchg
lret
push
es
sbb
mov
mov
lock
cs
daa
clts
adc
enter
mov
aaa
pop
adc
push
adc
dec
jle
aas
dec
std
sbb
add
cmpb
ss
mov
sbb
leave
cmp
stos
sub
sub
ja
sbb
lahf
cwtl
sub
data16
movsb
in
scas
pop
lret
loopne
cmp
cmp
addr16
fistpll
fmull
mov
adc
xchg
nop
cmpl
push
cmp
cmc
in
cmpsl
jnp
lods
pushf
xchg
lds
and
dec
cmp
sbb
fildl
inc
out
dec
test
arpl
mov
lods
sbbb
adc
or
inc
testb
call
sbb
xor
jecxz
movsl
sub
shr
mov
jmp
add
sahf
cmc
inc
or
jecxz
out
xlat
pusha
hlt
gs
xor
push
test
cmc
add
push
push
js
test
faddp
jge
push
adc
sahf
pushf
mov
jle
push
jo
test
mov
mov
jmp
cmp
stos
cmp
loope
mov
iret
mov
loopne
fildl
idivb
sub
inc
xchg
push
pusha
dec
lea
bound
fisubl
mov
xchg
xor
test
cmp
mov
mov
sbb
mov
dec
aas
out
ss
and
fs
ljmp
jmp
imul
fldl
sub
mov
out
xor
shlb
fstpt
mov
lsl
xchg
add
push
imul
cmpsb
add
xchg
mov
cmp
sub
cmpl
sbb
pop
loop
xcrypt-ofb
cmpsl
scas
insl
js
jno
inc
cmp
sarb
rol
or
adc
lods
movsl
and
jge
pushf
test
out
loop
sub
pop
adc
divb
fs
dec
cmpsl
je
and
mov
out
divl
xor
ds
call
rorb
or
cmpb
imul
dec
andl
mov
mov
je
pcmpgtw
push
movsl
mov
out
dec
rcll
cmc
rclb
outsl
and
add
repz
sbb
jno
sar
add
jo
inc
pop
dec
lea
xor
fucomip
fwait
inc
mov
imul
rcr
push
and
inc
jbe
xor
jg
lods
add
cmp
inc
jmp
cltd
pushf
pop
loope
adc
outsl
cld
icebp
jmp
cmp
pop
test
lahf
or
inc
or
iret
fbld
push
imul
pop
xchg
inc
mov
bswap
stc
je
pushf
pop
stos
gs
fidivl
and
das
or
push
sub
mov
in
mov
imul
fnstsw
subb
out
lret
inc
inc
std
sbb
or
or
popa
das
push
leave
ss
idiv
in
inc
mov
mov
pop
pop
cs
pop
push
xchg
sub
ja
inc
enter
test
insb
fwait
cmp
jmp
int
push
out
push
mov
fldz
jle
repnz
or
mov
xchg
and
pop
shlb
pop
mov
and
mov
jnp
add
int
lret
xchg
and
clc
out
inc
sub
sbbb
and
or
cmc
sub
inc
push
lock
iret
outsl
mov
sub
mov
mov
add
clc
lahf
dec
out
or
or
insl
push
mov
inc
iret
jmp
dec
xchg
and
outsb
iret
add
dec
inc
rorb
pop
iret
push
imul
insb
imul
xor
pop
fdivl
testb
push
aam
pop
push
inc
fidivrs
sub
mov
sbb
add
pop
lcall
cmp
mov
xor
stos
pop
adc
push
push
imul
mov
jge
repnz
loopne
decb
jns
cmp
jp
mov
xchg
xchg
mov
icebp
xchg
xchg
sub
pop
mov
les
ret
loope
push
mov
or
mov
addr16
sar
mov
in
add
sub
cmpsl
imul
xlat
mov
jnp
adcb
pushf
jnp
in
cmp
fnstenv
jbe
add
rcrb
stos
les
mov
fs
mov
sub
jne
cmp
sbb
icebp
out
xor
jo
ret
pop
lea
fwait
les
xor
fidivrs
clc
cmc
adc
adc
xchg
push
dec
fs
stos
les
mov
inc
cmp
sahf
insb
mov
sti
mov
push
lcall
mov
insl
add
cmp
ds
fwait
xor
int
inc
mov
test
movsl
lret
jb
pop
or
inc
xchg
test
movsl
and
mov
hlt
mov
add
dec
out
adc
sub
push
loopne
or
shr
cs
stos
mov
pop
xchg
fisttpll
pop
lcall
sub
sub
and
jb
xchg
loop
fmulp
leave
sub
xlat
push
and
xlat
sub
pop
out
mov
gs
push
xor
call
les
fwait
js
hlt
out
sub
mov
testb
cmp
jg
mov
dec
lret
fs
popa
test
test
mov
and
cmp
stos
out
jo
pop
xorl
cmp
or
dec
insb
jnp
addr16
push
imull
xchg
cmpsl
mov
xchg
sub
sbb
sti
dec
adc
lods
fsubrs
xor
out
pop
iret
sub
fcomi
xchg
mov
mov
scas
jl
jp
and
enter
sub
cmp
xlat
sbb
inc
pop
pushf
xlat
pushf
pop
lret
inc
or
int3
test
aam
shlb
fnsave
jg
adc
gs
out
ffreep
or
mov
out
test
leave
fsubrl
jge
pop
into
pop
cwtl
cmp
mov
jb
lahf
xchg
out
ljmpw
push
lret
mov
fnstcw
notb
mulb
shll
push
or
lret
out
stos
dec
faddl
lret
fidivrs
into
test
push
push
and
sub
push
or
and
test
mov
xchg
or
scas
fisttpll
mov
jp
add
es
loopne
int
in
xchg
pop
xchg
sbb
mov
mov
addr16
fbstp
mov
mov
cmp
mov
lea
movsb
push
daa
or
cmp
enter
adc
dec
add
add
rcll
xlat
test
into
in
es
out
fisubl
cmp
xchg
stc
testl
mov
adc
xor
and
ret
sbb
unpckhps
cs
push
push
xchg
sahf
in
dec
jb
test
cmp
pop
loopne
movsb
std
loopne
sahf
js
sub
and
or
add
inc
jl
pop
inc
loop
pop
std
gs
in
out
inc
mov
std
pop
adc
lahf
sbb
add
inc
jbe
mov
insb
out
lock
push
addl
je
sub
sahf
jg
add
test
or
movsl
lea
inc
loope
insl
adc
cmp
jbe
jl
and
lods
sub
aas
dec
sub
push
sub
dec
xor
fildl
xor
sahf
lock
jno,pn
insb
out
jae
adc
imul
fisttps
and
in
out
outsl
bnd
xlat
sub
jnp
je
and
xor
int3
ljmp
loope
cmp
aaa
cld
pop
jg
pop
stos
scas
add
jnp
sub
cltd
and
mov
adc
xor
nop
pop
cli
int3
sbb
inc
add
mov
or
inc
or
push
inc
sub
mov
pop
mov
lock
xchg
fidivl
gs
mov
fsubrs
push
inc
push
xlat
adc
adc
out
pop
mov
and
orb
xor
fistps
pop
push
jbe
cld
andb
sbb
pop
and
inc
lcall
jmp
sub
mov
call
dec
enter
je
pushf
repz
aad
sbb
mov
sub
and
xor
mov
mov
xchg
xchg
pop
push
dec
cwtl
jmp
stos
sbbl
jg
inc
addr16
in
test
lods
insl
mov
sub
ds
sbb
jmp
lods
out
xor
je
ja
mov
and
fistpll
inc
shl
in
xchg
out
les
inc
xorl
mov
sbb
lret
add
aad
mov
cli
decl
mov
cmp
stc
mov
loop
push
int
mov
xchg
sub
mov
push
xchg
mov
mov
mov
sbb
outsl
push
imul
int
inc
push
fisubrs
enter
lea
mov
pop
iret
or
outsl
popa
les
jmp
push
sbb
xchg
cld
pusha
push
addl
inc
mov
cwtl
xor
mov
mov
lods
sub
fldlg2
test
xlat
dec
outsl
ret
push
into
pop
aam
push
adc
xor
sub
ffreep
add
jg
push
mov
leave
pop
adc
lods
sbb
lea
pop
xchg
mov
xor
push
lahf
pop
sahf
addr16
lea
les
mov
xchg
aaa
or
xchg
jecxz
cld
movsl
and
cmpl
aam
pop
cmp
inc
add
pop
jecxz
test
or
data16
push
cmpsb
ret
jmp
xchg
and
xor
mov
leave
push
sarb
in
xchg
or
add
popf
push
sub
sub
repnz
mov
add
out
jmp
push
sub
andl
mov
and
or
and
mov
sub
out
neg
pop
adc
in
icebp
rolb
cmovle
sbb
jmp
add
mov
lret
adc
push
jae
and
stc
sti
mov
andl
orb
in
arpl
divl
fildl
add
or
mov
push
shrb
jmp
inc
call
inc
sbb
data16
xchg
in
push
add
fwait
ss
mov
mov
sbb
lock
gs
je
sub
neg
lcall
push
out
pop
imul
in
cmpsb
cs
aad
pop
push
mov
fldenv
push
dec
out
out
sahf
push
mov
repnz
or
cltd
dec
xor
enter
add
ljmp
nop
xchg
test
hlt
outsb
mov
inc
mov
inc
or
ret
cmp
cs
lea
out
mov
rcl
mov
add
sti
lret
mov
ret
lahf
and
es
pop
in
pusha
test
js
cmc
aam
cld
es
xchg
pusha
pop
aaa
jno
sarb
cmp
mov
jae
out
push
sbb
cwtl
mov
mov
sub
pop
push
dec
lcall
push
push
cmc
mov
cmpsl
je
push
mov
xchg
pop
lods
imul
int3
or
mov
xor
cltd
out
sti
in
test
out
xor
push
jae
jbe
add
fcom
lods
test
pop
stc
int
mov
mov
sti
push
adc
xchg
testb
mov
add
lret
add
mov
and
mov
lds
ds
mov
sub
dec
stos
ret
add
stos
and
jl
std
adc
pop
in
aam
mov
or
push
stos
push
pushf
sti
mov
mov
xor
lods
or
mov
lods
scas
sub
sbb
sbbb
push
push
mov
stos
not
mov
enter
sti
pop
aam
mov
mov
test
jecxz
stc
adc
dec
nop
mov
scas
pop
jno
adc
jp
cmp
in
lods
sub
mov
adc
push
in
xlat
ljmp
pushf
movsb
sub
rep
adc
mov
mov
pop
loopne
ret
cmp
mov
bound
mov
cld
cwtl
mov
or
pushf
sbb
cmpsb
jae
test
fmulp
or
or
cmpsb
je
divb
icebp
jbe
aam
in
lods
stos
adc
xchg
std
xor
pushf
dec
jl
loopne
xor
loop
or
andb
inc
out
mov
jge
test
xchg
ret
pop
rorl
adc
mov
pop
jnp
mov
call
outsl
jmp
inc
dec
add
adc
adc
pop
add
lret
testl
jne
iret
inc
and
push
adcl
xor
add
idivb
xchg
xchg
sbb
mov
icebp
dec
pop
bnd
xchg
test
mov
add
arpl
xchg
pop
jle
mov
into
ds
xchg
xor
jbe
adc
loop
mov
sarb
imul
mov
mov
outsl
and
out
pop
inc
aam
inc
fwait
pop
mov
pushl
enter
pop
dec
push
fistps
mov
pop
xor
fisubrs
fistpll
arpl
mov
cld
loop
dec
pushf
add
mov
cmpsl
jl
dec
cmpsl
pop
xchg
sti
lock
das
jl
jle
xorb
pop
push
and
dec
mov
movsl
movsb
cwtl
enter
mov
insb
cli
sub
shr
pop
mov
iret
lcall
ds
shll
or
push
jns
pushf
and
sub
lahf
fisubs
rep
push
pop
daa
add
mov
or
mov
pop
addr16
movsl
test
jecxz
mov
xor
pop
or
xchg
mov
xor
fimull
rorb
popf
mov
pop
and
popf
pop
fucomp
mov
imul
jg
scas
push
daa
sbb
sti
insl
pop
imul
mov
arpl
lods
outsl
in
dec
dec
pop
jo
mov
sbb
xchg
int3
adc
out
test
rcrl
and
jmp
mov
jo
inc
push
xor
or
mov
in
inc
adc
or
call
mov
les
arpl
in
sbb
rcll
lahf
jg
mov
fmul
push
lds
sarb
cmpsl
inc
sbb
pop
pop
xchg
fistps
lgs
aam
sbb
stos
int3
sbb
dec
scas
mov
dec
adc
jns
mov
fiaddl
xchg
push
fucomp
fs
adc
pop
cmp
inc
aam
jp
add
sub
dec
push
mov
mov
mov
jge
scas
push
or
jb
in
pop
fadd
xor
add
xchg
push
mov
cmp
jmp
hlt
in
xchg
jg
or
outsb
loopne
stc
daa
cmpsl
pop
xchg
adc
aas
dec
out
pusha
jne
lcall
sub
jge
std
jnp
cltd
push
out
inc
jo
outsl
xchg
lahf
in
inc
fwait
mov
and
or
pop
or
dec
sbb
adc
into
sbb
mov
jae
frstor
push
jle
adc
lcall
je
nop
push
cmp
cmc
sub
xor
inc
xor
pop
push
int3
arpl
mov
pop
test
outsl
mov
jge
jecxz
adc
mov
or
lret
stos
arpl
outsb
inc
push
sti
add
rcrl
inc
iret
mov
divb
hlt
push
ficoms
jge
mov
mov
and
jns
pushf
or
sarb
add
jo
pop
or
inc
mov
sahf
out
out
int
dec
es
xchg
sbb
mov
jg
lea
ficoms
out
pop
mov
imul
mov
cwtl
ja
ljmp
cmc
cmpsl
xchg
pushl
fs
xchg
fdivrs
xorl
sbb
mov
out
cmpb
or
popa
sub
cmp
mov
out
cmpsb
mov
and
leave
sbb
arpl
lods
cmp
mov
jp
or
pop
xor
push
rcr
jge
or
pop
arpl
push
movsl
loop
inc
mov
jp
rcrb
lods
movsb
shr
mov
pop
or
cmp
sub
lcall
jbe
jge
dec
mov
nop
imul
mov
fiadds
hlt
scas
bound
sbb
arpl
clc
mov
lds
jnp
popa
xchg
bound
in
pop
je
mov
sub
pushf
xor
dec
arpl
movsb
lret
in
cli
xchg
lods
cmpsb
jp
jle
cmp
or
add
test
sbb
push
popa
repz
and
inc
xchg
hlt
sti
aad
jae
arpl
lret
inc
fstpl
jmp
jnp
and
xchg
cmp
mov
pop
daa
testl
inc
imul
dec
xor
dec
lahf
popf
adc
pop
add
jno
xor
dec
adcb
mov
mov
and
xchg
call
dec
push
inc
aas
dec
push
ljmp
mov
mov
test
stc
test
scas
int3
in
mov
push
dec
es
dec
daa
pop
test
push
cmpsb
adc
xlat
sahf
jg
cmp
fcoms
sti
popa
insl
cmpsb
in
movsb
ret
fists
addr16
daa
or
jp
ret
cmpl
fsubs
stos
xorl
mov
xchg
dec
iret
push
push
daa
mov
in
int
jl
or
push
adc
addps
das
xchg
jae
sbb
test
orl
incl
mov
mov
fwait
addr16
dec
faddl
stc
and
cmp
ljmp
aam
and
add
push
in
adc
in
incb
movsl
call
cld
xor
sub
mov
mov
push
lods
add
xchg
push
xor
mov
jle
gs
lahf
and
int
fsubr
loop
shr
lahf
pop
push
out
js
jno
cmpsl
mov
add
inc
mov
das
cmp
cltd
sub
jnp
pop
outsl
fistpll
jg
repz
shll
shll
mov
imul
or
out
arpl
add
sub
push
jecxz
ljmp
mov
and
mov
stc
outsb
jl
mov
cltd
sbb
or
aam
mov
andl
push
and
lods
rolb
rcrb
fsubl
push
add
sbb
lcall
icebp
notl
stos
xchg
rsm
push
inc
je
xlat
clc
outsl
cld
inc
pop
dec
aaa
jae
xchg
sub
mov
or
dec
xor
sbb
je
clc
clc
popl
mov
ss
xchg
and
adcb
push
testl
xchg
mov
sbb
xor
out
jmp
mov
fimull
inc
push
cwtl
ficompl
cld
jne
mov
sbb
sub
or
rorb
mov
xor
sbb
mov
inc
mov
js
mov
sarl
popf
dec
fiaddl
sub
mov
ja
lret
inc
add
in
inc
or
bound
shlb
in
mov
and
pop
es
pusha
lahf
jge
outsl
call
decb
xor
daa
and
call
test
mov
scas
add
lret
mov
sar
adc
enter
out
stc
fldl
popa
loop
or
and
lea
xchg
xchg
lods
mov
rcl
hlt
loopne
xor
ds
push
lds
inc
rcll
add
mov
mov
xorl
inc
insl
push
inc
jg
push
cmp
scas
xchg
xor
ret
cmp
mov
sbb
xor
dec
xor
fidivl
mov
push
adc
or
jge
popa
lds
addr16
push
xor
nop
fsubrp
mov
sar
mov
dec
pop
mov
fdivrs
and
mov
push
mov
add
movsb
jp
fistpll
data16
mov
mov
or
aaa
dec
adc
imul
pop
es
ret
xchg
outsl
mov
stc
fcoms
mov
push
out
xor
xlat
and
add
imul
cmpsl
mov
sub
in
lods
sbb
rcrl
aam
sbbb
std
dec
and
mov
and
icebp
out
mov
cmpsb
cmc
out
das
push
xor
jns
xor
sbb
data16
cmp
sti
dec
mov
out
sub
mov
dec
insb
cmp
lahf
rorb
inc
stc
xorb
loop
daa
imul
pusha
cmc
loope
aam
sub
mov
sbb
enter
or
inc
das
aaa
lock
sub
in
push
and
mov
stos
enter
push
sub
enter
inc
mov
jecxz
aad
stos
popf
lret
xchg
fmull
movsb
lret
jmp
fcomps
sahf
rcr
fidivrs
jecxz
lret
pop
add
dec
push
push
pop
push
scas
int
scas
popa
jnp
test
rcl
gs
xor
xor
pop
leave
xor
imull
and
insb
sahf
call
int
sub
hlt
shlb
fs
scas
or
icebp
xor
xchg
pop
xchg
dec
les
dec
pop
push
test
aam
insl
movsb
fimuls
mov
jp
loopne
adc
jno
fisttpl
fidivrl
xor
in
pop
add
loop
sub
aas
and
inc
in
jge
mov
ret
jns
iret
imul
mov
push
pop
dec
fcmove
inc
sbb
mov
aaa
add
rorl
scas
pop
call
and
ror
testb
gs
pop
into
sbb
in
xor
popf
xchg
imul
xchg
out
jle
xlat
xchg
xchg
cmc
mov
jo
test
dec
mov
stc
push
pop
add
je
mov
es
mov
pop
scas
dec
dec
out
inc
dec
dec
clc
adc
inc
sbb
sub
cmpsl
shr
jb
jp
mov
enter
pop
lea
pop
lods
ret
and
inc
xchg
mov
into
fsubs
in
stos
loop
shll
cli
pop
daa
cmp
cwtl
sbb
push
cmp
lods
xchg
xchg
or
addr16
mov
mov
jp
or
data16
test
sbbl
jne
mov
pop
in
rcll
push
xor
inc
stos
add
stos
scas
mov
pushf
mov
nop
mov
rol
rolb
or
pusha
sbb
ss
add
jmp
pop
mov
test
rolb
adc
lock
xor
setbe
addl
imul
out
xor
fs
mov
ss
mov
and
test
and
loopne
sub
cli
xor
rclb
sahf
dec
mov
or
stos
lock
movsb
pop
mov
xchg
int3
xor
sub
push
or
xchg
orl
pop
and
mov
xchg
dec
mov
xchg
and
in
mov
dec
movb
pop
jmp
dec
mov
sbb
dec
aad
or
jnp
scas
xor
aaa
push
setg
out
xchg
and
ficoml
ret
es
lods
dec
nop
mov
ja
leave
shl
cwtl
fs
mov
pushf
jge
adc
repz
xchg
inc
ss
jnp
les
xchg
lahf
mov
imul
lds
pop
mov
popf
adcb
test
loop
icebp
arpl
mov
fs
je
repnz
notb
nop
mov
push
add
xchg
inc
cmp
jo
dec
imul
mov
mov
inc
test
pop
mov
cmp
shll
sub
mov
lcall
mov
sub
inc
push
arpl
xlat
lock
and
das
icebp
mov
xchg
push
lds
sub
ja
dec
sbb
aas
xchg
divl
jns
imul
std
or
mov
ficoml
fstl
cmp
std
pop
pop
push
jo
mov
daa
cltd
push
inc
jno
push
pop
add
mov
push
jns
aad
enter
push
leave
sub
sti
or
pop
pop
jns
or
repnz
stos
pop
jnp
fdivr
push
mov
xchg
xchg
cmp
xor
pop
sub
imul
jge
dec
pop
lods
jl
std
adc
movsl
sbb
iret
adc
push
fmuls
cwtl
lahf
punpckldq
pop
xchg
call
add
jno
mov
mov
jbe
in
xor
mov
mov
jo
pop
inc
xchg
aad
mov
inc
sbb
popa
jae
jbe
mov
push
pop
push
mov
testb
add
jne
out
enter
jl
aam
sub
cmpsl
imul
mov
xchg
int
je
cmp
lods
mov
jge
call
mov
adc
cs
mov
mov
push
xor
ljmp
pop
and
xchg
shl
or
dec
jge,pn
xor
dec
dec
mov
cmp
out
int3
pop
aas
push
push
adc
ds
test
and
cmp
testl
lea
cltd
cmp
and
adc
and
sbbl
push
push
dec
or
push
or
xchg
inc
push
mov
pop
lods
cwtl
ljmp
sub
inc
js
cmpsl
stc
in
stos
pop
test
xchg
xor
jno
das
ds
mov
pop
mov
jl
fmull
leave
mov
imul
stos
sbb
mov
push
lods
loopne
jp
cmp
cmpsl
lahf
scas
xor
insl
call
or
jle
fbstp
cwtl
add
sbb
push
sbb
xchg
mov
or
mov
and
aad
pop
repz
scas
and
push
std
cmp
arpl
jne
pop
ret
fs
pop
xchg
adc
jne
stc
xchg
mov
sti
add
out
loope
mov
jnp
and
xor
ss
inc
dec
xlat
jb
and
inc
out
mov
mov
lret
lea
or
iret
pop
add
lcall
jle
pmulhw
adc
and
ja
and
jecxz
lds
pop
cmpsl
imul
test
cltd
es
xor
out
inc
pop
mov
inc
push
cmp
enter
int3
cmp
jl
insl
repnz
mov
or
dec
lods
jg
fs
dec
lods
jne
aad
cmp
pop
xchg
lahf
cmp
decl
xchg
outsb
dec
add
in
dec
jp
push
mov
fldenv
and
out
ret
xchg
cmc
std
xchg
add
mov
push
sbb
int
xor
call
jmp
or
addl
out
test
cmp
xor
out
or
ret
sbb
stos
adc
mov
shrl
adc
mov
adc
push
pusha
lahf
in
in
push
es
adc
aas
and
mov
pop
ret
jmp
out
sahf
push
es
mov
js
cmp
push
mov
or
xchg
stos
mov
inc
fmull
mov
pop
jbe
cmpsl
inc
cmp
pop
stos
xchg
mov
mov
mov
sub
daa
xchg
dec
mov
lret
imull
in
fwait
and
hlt
shr
out
lret
dec
lods
lcall
addr16
call
cs
pop
jne
add
xchg
jae
imul
pushf
stos
out
out
jge
xchg
jns
add
fsubr
mov
leave
push
loopne
lock
or
sub
xlat
enter
xchg
ja
lahf
fsubl
das
dec
ljmp
jae
lods
mov
jnp
pop
mov
loopne
fcmovnb
outsb
ret
inc
and
sub
rcl
mov
lahf
cmp
clc
mov
jle
mov
rorb
int
nop
insl
into
mov
cli
out
push
paddsb
jae
arpl
ret
xchg
adc
into
inc
in
hlt
jmp
sahf
dec
test
sbb
cmp
cmpsb
adc
pop
xchg
je
push
loope
jmp
cmp
mov
push
sbb
mov
mov
iret
mov
cmc
dec
ss
cmp
fcoms
ret
cmp
and
sbb
loopne
and
sub
mov
mov
sbb
sub
mov
dec
mov
in
adc
pop
out
adc
sub
add
push
push
cmp
inc
test
insb
ror
xchg
in
add
cmp
push
mov
mov
jg
test
or
lock
or
fcmovb
stos
inc
repz
pusha
xor
mov
push
jns
aad
sbb
in
in
mov
in
and
jecxz
mov
out
gs
dec
in
mov
cld
hlt
sbb
jnp
cli
fs
enter
lahf
scas
sbb
scas
aad
loope
sahf
push
stc
pusha
leave
mov
push
cltd
shrb
int
sti
icebp
xor
sbb
cli
movsl
std
mov
iret
xor
sbb
mov
mov
mov
mov
sahf
or
es
aad
inc
xchg
jecxz
por
aaa
movsl
fildll
and
mov
mov
test
mov
subb
mov
enter
ljmp
and
pop
inc
mov
sbb
idivl
dec
sub
xchg
inc
push
test
in
or
lret
das
jb,pn
cld
adc
rcll
and
push
enter
adc
lret
sub
sbb
cmp
xchg
adc
ss
cmp
push
std
inc
icebp
cmpsl
aaa
dec
enter
jns
adc
xor
lea
cmp
mov
xchg
scas
outsl
mov
lret
fstpt
outsl
sbb
out
sbb
lret
adc
scas
push
leave
push
jns
fadds
xchg
mov
push
stc
test
aad
push
jne,pn
call
aad
push
cmpsl
cld
adc
mov
fstl
jl
mov
adc
roll
mov
gs
mov
out
inc
movsl
ficoms
or
sbb
jbe
or
or
cld
jp
shll
cmpsb
movsl
dec
push
movsb
or
dec
xchg
arpl
cmp
stos
andb
pop
mov
aad
data16
pop
aad
stos
mov
xor
push
call
ds
xlat
dec
xlat
std
sbb
out
push
jne
lods
dec
inc
inc
inc
jae
scas
mov
stos
lea
cmpsb
pop
jle
pop
and
cltd
sub
stos
dec
push
mov
jns
push
bound
pop
arpl
fsubr
jnp
mov
insb
mov
xor
sbb
cvtpi2ps
scas
mov
test
imul
adc
push
pop
sarb
inc
fldenv
inc
pop
mov
sub
iret
clc
dec
pop
xchg
aaa
jne
test
dec
jge
pop
pushf
push
stos
test
jl
push
das
popa
fcmovbe
push
lods
lret
mov
adc
andl
lahf
mov
jg
sahf
push
and
or
movl
pop
jecxz
lods
sub
call
push
mov
cmpl
mov
inc
jbe
movsl
push
out
nop
pop
movsb
add
dec
addl
adc
inc
test
mov
lods
je
cmp
lcall
test
popf
push
dec
adcb
mov
and
push
or
fsubr
int
inc
push
jno
or
adc
hlt
mov
and
movsb
lods
mov
mov
rclb
sbb
out
xchg
lret
call
sbb
aad
imul
xchg
mov
jp
cmp
and
cmp
aam
or
pop
lahf
cmp
jge
testb
test
ljmp
xchg
sub
xor
dec
mov
lea
cmp
or
xchg
fstp
imul
mov
iret
lret
lahf
nop
and
dec
loopw
pop
test
mov
repz
xchg
push
fcom
push
rorl
ret
adc
jl
into
sbbb
xchg
sbb
insb
out
dec
stc
and
fldenvs
add
fildll
std
je
mov
jno
sbb
stos
or
in
insl
arpl
test
inc
std
cmp
cltd
je
or
sub
aad
push
test
insl
dec
add
loopne
jl
test
or
popf
push
lea
and
and
pop
dec
movsb
pop
stos
shrl
cmp
xchg
jb
rcll
and
mov
push
mov
out
push
xchg
mov
xchg
dec
out
sar
inc
imul
add
add
gs
repz
mov
cmp
call
mulb
push
ss
imul
add
mov
jae
loop
cmp
add
pop
jle
pop
adc
inc
push
xor
sbb
jp
push
ret
push
or
inc
les
adc
sub
xchg
add
fs
jge
jmp
xchg
gs
inc
inc
xor
pop
cmc
mov
xchg
mov
out
mov
jp
mov
rcl
shrb
pop
insb
xchg
adc
jae
fsubr
and
inc
or
fwait
cmpsl
pop
mov
lods
and
dec
hlt
int3
lret
out
xor
fwait
stos
push
arpl
inc
cmc
in
xchg
mov
jge
insb
xor
cmp
loope
cltd
mov
out
jne
adc
arpl
adc
adc
imul
inc
add
rorb
push
xor
ret
cmpsb
out
stc
ds
push
mull
test
pop
arpl
pop
mov
sub
sub
mov
jp
aaa
adc
cltd
fildll
fildll
jg
adc
or
cltd
inc
std
fwait
ds
fs
xchg
jns
lock
push
scas
aas
jl
jnp
inc
or
inc
int3
bound
cmp
mov
imul
jp
pusha
pushf
jg
xorb
lret
or
rcr
or
jmp
mov
jmp
dec
jae
fidivs
subl
call
repz
adc
mov
adc
lds
mov
xchg
je
jb
aas
subl
xor
push
inc
lahf
jbe
mov
les
or
mov
jg
mov
mov
stos
fmul
xor
flds
mov
shlb
adc
movsl
mov
and
inc
nop
inc
mov
mov
les
js
pop
aad
imul
xchg
imul
push
jmp
test
mov
pop
jp
into
push
enter
jno
ja
xchg
cmpl
gs
out
cwtl
ss
dec
repz
sub
mov
stos
loop
pop
mov
sub
mov
xlat
aad
mov
lea
pop
lcall
pushf
pop
out
pop
cmp
pop
fcoml
inc
fdivs
hlt
mov
shrb
xor
and
movl
pop
jns
mov
mov
jo
in
inc
cmc
push
clc
mov
outsb
mov
mov
pushf
add
xchg
pop
xor
js
jge
mov
mov
inc
fsubrp
push
lds
cmp
pop
pushf
xlat
pop
pop
out
push
cmp
imul
adcl
or
daa
and
sub
sub
mov
jbe
add
cltd
jmp
aad
lds
in
fisubrs
or
cli
clc
out
mov
xor
push
dec
inc
jno
aad
cmp
jo
jp
xchg
lahf
jno
and
fwait
jno
jns
rcrl
adc
clc
pusha
fisubrl
test
jl
pop
subl
sub
arpl
pop
jg
jge
mov
out
xlat
insl
sbb
cs
or
jnp
dec
cltd
insb
mov
sbb
jae
iret
loope
scas
addb
xor
sahf
push
adc
xchg
cmp
push
pop
xor
loope
add
pop
rcrb
ss
cmpsl
jbe
rdmsr
pusha
xchg
ljmp
stos
dec
xchg
pop
mov
adc
pop
and
into
mov
icebp
pushf
mov
pop
fcomip
cmpsb
adcb
data16
pop
push
cli
cmp
jae
pop
dec
sub
mov
lods
mov
out
pop
incb
mov
insl
repnz
add
sbb
sbb
pop
add
xchg
xor
cltd
xchg
push
inc
inc
pop
inc
scas
leave
daa
dec
sub
or
xlat
rclb
in
dec
pop
fdivr
mov
jle
jg
cmpsl
arpl
imul
out
fsubrs
dec
dec
lret
dec
push
push
cmpsl
repz
fwait
dec
daa
xchg
pop
push
es
mov
out
mov
mov
lock
ja
inc
add
dec
ljmp
and
ror
data16
mov
or
fwait
iret
or
pusha
cltd
addb
ss
cmp
outsl
pop
out
inc
inc
xchg
testb
sbb
xchg
xchg
sbb
sub
xor
and
and
sbb
mov
addb
inc
insl
mull
adc
jbe
std
cmp
adc
bound
cwtl
xchg
and
sbb
pop
out
or
inc
pop
mov
push
cmp
jl
xchg
sub
pushf
mov
mov
outsl
call
mov
xchg
out
dec
jmp
inc
jle
adc
test
mov
pop
sarl
mov
or
push
cmp
sub
pusha
lahf
or
cmpsl
jl
mov
pusha
movsb
enter
push
push
mov
fbld
mov
sarb
je
push
and
dec
xor
popf
dec
inc
adc
adc
fxam
or
cmp
notl
cmpsl
pop
repnz
fdivp
sbb
inc
sub
out
xchg
mov
sahf
push
lahf
xor
cmc
jmp
cld
scas
xchg
clc
js
into
nop
mov
dec
push
inc
xor
push
cmpsl
push
movsb
iret
dec
inc
inc
push
mov
inc
xor
mov
adc
mov
out
cld
jo
push
cmp
fistl
xchg
es
mov
mov
dec
jp
mov
inc
xchg
adcl
jmp
push
test
xor
push
mov
push
int
add
insb
nop
sub
fs
jge
mov
xor
xchg
xchg
fbld
mov
inc
gs
hlt
mov
pop
lea
outsl
fimull
addr16
or
inc
out
pusha
ret
cmpsb
lods
flds
xor
mov
lcall
fdivrs
cmp
pop
mov
test
repz
les
mov
jle
inc
push
cmp
mov
xchg
scas
mov
add
jb
mov
loopne
imul
pop
sbb
sbb
xchg
jno
sti
pushf
test
xchg
dec
pop
xor
js
or
xchg
shr
addr16
inc
add
sbb
sbb
bound
insb
adc
ljmp
test
jecxz
and
jge
aam
in
xor
add
enter
mulb
lret
call
push
mov
icebp
ret
in
jge
call
leave
dec
cmp
xchg
int
fnstenv
stos
ret
in
add
jno
scas
xor
push
pop
neg
cs
or
lret
mov
add
sub
sub
lret
inc
cmp
test
jmp
sub
imul
arpl
out
pop
sbb
sub
jno
inc
jns
les
mov
notb
pop
stos
in
and
pop
xchg
and
sub
pusha
ficomps
repnz
in
inc
sbb
xchg
inc
mov
test
mov
jmp
pop
jecxz
aaa
or
xor
xor
andl
mull
cmp
cmpsb
push
push
pusha
hlt
pusha
jge
ljmp
sub
movsl
cmp
daa
pop
insb
sarl
jge
xchg
mov
gs
vrsqrtps
andl
xchg
iret
daa
test
lods
loope
cmpsl
xchg
inc
aaa
and
shll
push
sub
xchg
leave
jno
test
pushf
fiadds
jecxz
pop
insl
pushfw
jb
inc
in
scas
add
dec
mov
mov
adc
ret
lret
mov
ss
fs
mov
pop
outsb
push
ja
dec
ss
sti
xchg
jne
jp
mov
rorb
jnp
aam
and
or
dec
lcall
mov
test
cmp
mov
mov
inc
insl
data16
ret
stos
fdiv
add
and
pop
inc
imul
out
out
jecxz
cmpsl
ds
or
inc
lahf
inc
test
addr16
add
hlt
jge
fcomps
mov
addl
enter
mov
call
xchg
arpl
pushf
mov
pop
mov
adcl
sub
pop
stc
xchg
mov
sti
test
mov
inc
stc
rcrb
push
ret
xchg
test
adc
xchg
clc
sbb
jp
cltd
cmpsb
sarl
jge
xor
int3
sti
jecxz
cmp
or
mov
inc
adc
dec
xor
fwait
dec
mov
inc
pop
add
es
lcall
iret
jle
mov
clc
sahf
cmp
ud0
repnz
inc
push
jg
and
in
lds
es
fwait
les
mov
pop
das
inc
or
dec
adc
pop
imul
loop
sbb
push
test
mov
pop
dec
mov
inc
adc
dec
lods
mov
mov
mov
xchg
and
push
cmp
sub
enter
in
jno
fsubrs
shlb
pop
dec
jge
fldcw
mov
and
test
push
dec
popf
inc
add
sbb
mov
push
adc
sub
mov
outsl
andb
mov
rep
insl
notl
push
aam
aad
adc
loop
push
jno
jb
mov
or
mov
xor
mov
into
enter
and
les
mov
cmp
xchg
lret
mov
jecxz
inc
adc
enter
popa
fadds
bound
movsb
cmp
gs
pushl
pop
dec
cs
lahf
mov
in
xchg
leave
mov
cmp
shrb
lock
aaa
sahf
adc
xor
push
loope
cltd
test
pop
fdivr
aad
loope
flds
mov
push
leave
loope
mov
inc
dec
daa
jnp
lock
pop
xlat
popf
movsb
lock
push
dec
decl
ret
enter
imul
decb
pusha
jo
mov
fisubl
or
mov
andnps
mov
jmp
mov
push
shll
sub
arpl
data16
lods
js
leave
push
outsl
cmpl
ds
push
sbb
pop
adc
scas
in
cmc
jbe
in
inc
jp
sub
mov
rolb
jbe
daa
les
and
arpl
xchg
mov
scas
push
cmp
or
sub
shrl
faddl
fldl
daa
aas
js
jmp
cli
adc
out
or
jg
xor
and
cld
ficoml
sbb
xchg
mov
push
lock
xchg
fstpt
jns
and
movsb
leave
sti
inc
xchg
dec
rol
xchg
fisubs
push
sub
fsub
mov
sbb
sti
in
push
sarl
lea
pop
bound
lret
pop
inc
enter
xor
mov
dec
cmpsb
out
lods
daa
sbb
adc
stos
push
imul
leave
adc
scas
ljmp
addr16
loop,pt
icebp
mov
jmp
cs
out
push
test
and
push
dec
clc
mov
jbe
pop
sub
jge
cs
xor
cmp
insb
mov
dec
repz
in
scas
fldenv
mov
ds
cmp
xor
lock
pop
add
out
sbb
jg
inc
in
mov
lea
pushf
inc
dec
sbb
scas
pop
xor
sbb
mov
mov
mov
pop
jno
test
mov
jo
and
add
dec
mov
pop
mov
es
shrl
mov
sbb
and
jns
jge
mov
insl
lahf
pop
or
in
cmp
cltd
scas
scas
pushf
push
jle
and
xchg
push
fst
aam
iret
push
push
out
mov
mov
lret
and
cmp
repnz
mov
add
movsb
cmp
insb
lret
pop
pop
sub
je
rorl
cmpsb
lods
fldt
mov
inc
mov
das
daa
or
sbb
add
lds
mov
in
sbb
and
movsb
orl
fsts
add
or
jbe
sbb
cwtl
sub
mov
roll
sub
fwait
add
and
subb
arpl
out
pop
loop
mov
movsb
or
test
mov
and
mov
xor
adc
push
jb
mov
jb
push
inc
mov
mov
cmp
or
adc
lret
out
popa
js
xor
cmp
scas
jae
pusha
or
mov
mov
and
cmp
pop
outsl
jg
xchg
adc
outsb
gs
int
fimull
xchg
pop
jb
icebp
or
or
movsl
or
mov
cmpsl
jno
xor
sahf
fbld
jmp
sbb
lods
enter
ficomps
add
jnp
movsb
popa
mov
ss
jne
mov
inc
push
popf
test
push
es
imul
dec
push
ds
push
cmp
pop
cmp
jl
cmp
shll
repz
pusha
ljmp
cwtl
js
movsl
rolb
popa
fidivrl
xchg
shr
cmp
adc
jmp
pop
and
jg
outsb
lods
cmpsl
and
or
movsl
fwait
sbb
dec
into
test
popf
mov
xor
push
loope
mov
test
jmp
push
sbb
push
push
push
add
pop
pop
je
push
mov
add
test
add
fnstenv
jno
hlt
cmpsl
sub
jb
lret
jno
cmc
movsb
scas
cmp
xchg
add
sub
inc
nop
adc
push
fcoml
cs
xlat
mov
daa
mov
aas
xadd
pop
or
addl
fadds
push
inc
adc
lret
pop
ficomps
mov
push
loop
dec
int3
cmp
int
or
lods
or
insl
sahf
lret
shrb
mov
icebp
pop
dec
mov
ficoms
loope
lock
and
sti
lods
test
or
adc
lret
lret
inc
shrl
imul
aad
jl
cld
pusha
cmpsb
enter
je
mov
jp
add
cmpsb
std
mov
es
add
push
bound
mov
pcmpeqw
sbb
sub
push
fiadds
jmp
addr16
sbb
xchg
jnp
ljmp
sbb
xchg
dec
xchg
and
push
mov
fdivl
test
mov
ret
cld
pop
rcl
addr16
pop
in
addr16
mov
std
push
pop
testl
cmpsl
das
jno
iret
and
in
stos
adc
xor
aaa
xorl
shrb
xor
add
push
pop
sub
sub
adc
hlt
sbb
dec
mov
jle
add
add
xor
adc
jbe
add
xor
mov
inc
scas
iret
es
pop
movsb
fbld
sub
push
ds
push
add
lret
mov
sub
and
pop
out
out
pop
gs
xchg
lahf
loopne
popf
fisttpll
movsl
xchg
out
mov
out
in
add
fisubl
xor
aas
scas
fsubl
mov
xchg
test
xor
in
xchg
cmp
inc
xchg
inc
clc
mov
loope
icebp
loop
or
insb
mov
dec
daa
aaa
repz
and
fisubrs
movsl
inc
push
jl
xor
and
jg
mov
das
into
iret
push
xlat
insb
pusha
test
adc
mov
pop
outsb
or
push
std
test
mov
testb
sbb
mov
push
push
xchg
mov
dec
rcr
fucom
sub
je
imul
outsl
fsubrs
dec
jmp
jl
pop
popf
xchg
xchg
add
js
cmp
inc
push
or
lret
gs
stc
and
in
les
iret
jb
movsb
fwait
mov
inc
arpl
mov
cltd
frstors
movsb
sub
push
jb
cltd
push
jle
jae
roll
and
shll
dec
jbe
repnz
mov
sbb
add
lcall
add
jns
dec
push
mov
add
push
ljmp
fstl
xchg
or
xor
adc
fisubrs
cltd
dec
ret
aam
pop
jle
sbb
adc
das
fistpl
pop
rcl
mov
pop
lahf
xchg
iret
call
ror
mov
add
out
in
mov
sbb
push
mov
ds
cmp
push
pop
xor
cmpsl
arpl
pushf
sbb
sub
sub
jne
stos
pop
push
cmp
mov
ficompl
les
cs
xchg
and
lret
inc
xchg
sub
jmp
mov
daa
sub
mov
iret
je
sub
jl
pop
loop
mov
scas
xchg
sub
lahf
jecxz
addb
in
icebp
jmp
mov
cld
mov
loope
cmp
daa
sub
test
fbld
push
sub
inc
fs
jge
bound
mov
repnz
or
cmp
push
and
popa
jle
and
or
sub
popa
mov
and
mov
scas
aam
hlt
cwtl
and
and
pop
mov
inc
cmp
lea
fsubrl
ret
testl
mov
imul
imul
enter
jg
pushf
sahf
mov
mov
mov
movq
into
ja
mov
adc
gs
pushf
sub
jl
pop
stos
test
xor
dec
or
addl
mov
add
add
aam
lcall
mov
aaa
jecxz
mov
pop
in
mov
mov
icebp
fisubrs
jnp
push
enter
andb
adc
mov
leave
pop
adc
xchg
xchg
rolb
scas
pop
jle
scas
lock
dec
scas
jge
fstpl
xchg
ds
and
add
pushf
out
cmp
xchg
or
pop
fsubrs
pop
cmp
ss
imul
push
mov
cmpxchg
mov
sbb
sub
sbb
fwait
je
xchg
sub
lcall
adc
jg
bound
push
lret
or
aas
divl
imul
xor
push
data16
add
shlb
mov
sti
pop
shrl
lds
push
mov
jl
pop
rcr
xor
stos
jecxz
and
test
cvtdq2ps
dec
and
andb
jl
bound
sbb
jne
es
int
pop
cmp
push
pusha
ds
repz
mov
xor
mov
add
xor
inc
inc
pusha
xchg
cmpsl
mov
mov
xchg
bnd
fwait
testl
inc
mov
pusha
push
cmp
pop
popf
push
push
mov
shlb
push
jmp
inc
jae
push
out
and
inc
mov
stos
dec
mov
jb
movd
aaa
aas
cmpsl
and
es
sub
call
or
cmp
dec
add
add
or
cmpsl
mulb
jns
pop
cmc
cmp
xlat
das
dec
cs
into
xor
aad
add
es
jnp
jge
mov
inc
sub
xchg
ficompl
mov
sti
and
mov
inc
inc
rcrb
dec
fistpl
ljmp
and
pop
fildll
divb
cmp
bound
jecxz
call
add
mov
fsubs
mov
cltd
notb
jp
dec
adc
lea
daa
sub
mov
loop
fistpll
mov
test
mov
xchg
lds
outsl
ja
cmp
xchg
mov
xlat
hlt
dec
jnp
mov
testb
xor
pop
sti
inc
sbb
arpl
cmp
mov
push
aam
out
daa
push
stos
addr16
pop
jp
es
pop
int3
jne
in
lds
dec
pop
lea
mov
hlt
jne
mov
stos
lock
popf
sbb
aad
jge
mov
mov
and
push
inc
jg
divl
aas
fisubs
pushf
ss
pop
push
xor
lcall
cmp
pop
xor
sahf
pop
in
lea
mov
cli
das
lock
pusha
test
dec
mov
inc
or
mov
daa
lds
lea
inc
pop
adc
dec
jmp
lea
jmp
jo
rorb
push
sbb
clc
push
imul
lods
jb
lods
push
mov
jae
jae
dec
ljmp
push
sbb
out
data16
gs
out
xchg
movsl
subb
add
lods
push
imul
mov
test
xor
imul
inc
jae
sub
mov
outsl
push
orb
je
repz
dec
rolb
loopne
cwtl
lods
mov
mov
aam
jg
insb
or
shl
jno
fsubrs
iret
sbb
push
mov
pop
sub
lock
fcomi
and
hlt
or
mov
or
push
jo
fmul
push
dec
lret
xor
add
xor
shll
leave
out
xor
lret
push
fsubl
repz
out
jno
cmc
loope
ljmp
fimuls
clc
mov
cmp
pop
dec
pop
xor
mov
rcrb
cmp
into
call
cli
addr16
mov
fldl
add
adc
lret
stc
fnsave
sti
les
mov
out
dec
jae
popfw
jb
test
movsl
mov
sub
repnz
inc
out
imul
pop
shl
or
xchg
mov
mov
inc
xor
popf
pop
ss
push
cmp
out
sbb
dec
adcl
and
push
push
sbb
pop
or
push
gs
push
mov
imul
insb
push
aaa
pop
inc
sub
hlt
scas
mov
and
sub
cmp
sbb
outsl
scas
and
jne
or
fisubl
andb
mov
push
mov
xchg
lods
rcrl
mov
inc
xor
stc
cmpsl
hlt
dec
inc
xchg
sahf
adc
cmp
scas
js
cmp
dec
cmp
xchg
lahf
or
xchg
ljmp
inc
mov
mov
loop
data16
pop
pop
rcrl
das
push
add
loopne
pop
cld
aaa
sbb
push
movsl
in
pop
call
fsub
inc
outsl
pop
inc
or
push
xchg
fdivl
push
mov
sarb
sbb
adcb
cmc
jg
stos
bound
std
adcb
pop
subb
sti
sbb
jae
hlt
pop
inc
mov
outsb
sti
test
jne
dec
mov
push
lahf
insl
ljmp
movsl
xchg
and
out
mov
gs
push
and
scas
ret
ljmp
push
push
jl
dec
cmc
mov
mov
push
add
stos
iret
shl
mov
inc
xchg
push
in
sub
imul
adc
and
data16
nop
mov
mov
clc
icebp
mov
nop
cmp
popa
xchg
hlt
and
fldt
push
cmp
int3
xor
stos
fsubl
jnp
jl
test
subl
push
xlat
mov
dec
aas
push
mov
lahf
jb
movsb
pop
xor
sub
xor
jecxz
lods
lock
adc
xchg
popf
subb
mov
sbb
xchg
mov
add
int3
or
or
inc
test
mov
xor
xor
mov
aad
aas
cmp
sti
test
mov
pop
and
lret
or
in
lret
xchg
or
jae
inc
jecxz
enter
and
shrl
cmp
dec
aam
pop
fs
add
aas
int3
lcall
cmpsl
in
insl
sbb
xchg
dec
jle
jle
arpl
into
jecxz
lods
jbe
and
dec
jnp
hlt
outsl
imul
clc
push
bound
jne
imul
ss
xor
cli
call
out
dec
call
jae
frstpm(287
xchg
jle
fidivrl
idivb
sbb
movsb
pop
stc
pop
lret
xor
inc
fisubs
cwtl
mov
push
mov
xor
imul
cltd
loopne
clc
loope
sub
repnz
and
adc
inc
cmp
and
test
mov
repz
incl
push
mov
sbb
cs
push
into
inc
xchg
into
and
mov
adc
sub
jle
cld
scas
jl
lods
ja
dec
mov
in
hlt
aad
adc
sbb
xor
mov
mov
xor
adc
lds
jge
cmp
lea
sub
pop
fiaddl
test
inc
enter
pushf
arpl
int3
je
push
mov
mov
dec
daa
js
in
sub
inc
dec
jb
insl
inc
push
data16
pusha
ss
jne
test
pop
dec
test
inc
stc
or
lods
dec
stc
out
lahf
and
hlt
push
imul
push
or
les
into
mov
push
cmp
fsubs
inc
xchg
dec
push
cmc
fcoms
sbb
mov
pop
aad
pop
lahf
adc
jbe
pop
icebp
jne
pushf
cmpsl
xor
icebp
inc
adc
stos
cld
lods
mov
stos
adc
mov
jbe
xor
nop
lods
pop
lea
push
in
leave
mov
cld
mov
aam
out
cmp
insl
fildl
inc
fbld
jno
lock
sbb
add
ljmp
dec
daa
mov
mov
pop
add
inc
pop
fwait
xchg
ret
rcll
aas
adc
dec
insb
cmp
arpl
cmp
xchg
aas
push
fcompl
jo
adc
pusha
stos
movsb
es
xlat
add
mov
into
push
jmp
mov
mov
cmpsb
and
in
jmp
inc
mov
jmp
test
mov
cs
mov
mov
insl
xor
sub
insl
adc
inc
mov
dec
dec
sub
mov
mov
cltd
add
mov
dec
lret
sub
aam
outsb
stc
push
sarl
or
cmp
cmp
scas
pusha
aad
mov
pop
add
scas
dec
push
or
mov
loop
sbb
std
push
mov
jb
fistpll
test
fsubrl
divl
mov
aad
hlt
repnz
push
add
mov
pushf
sbb
adc
adc
jbe
bound
jecxz
and
hlt
lret
jmp
xchg
sbb
cltd
lods
insl
lret
push
out
push
in
pop
sbb
loopne
pop
mov
jno
scas
out
add
imul
jo
ljmp
fs
jle
idivl
xor
in
in
jl
pop
cmp
cli
lods
mov
jo
arpl
adcl
div
in
mov
mov
pusha
mov
add
xor
xchg
adc
pop
leave
fs
or
push
inc
ljmp
lock
adc
sbb
repnz
out
test
imul
mov
aad
mov
ljmp
mov
xlat
push
ret
ljmp
fimull
rcl
or
ja
in
sbb
cmp
cmp
hlt
stos
xor
pop
inc
xor
in
jecxz
fimull
mov
in
neg
jne
push
lea
ss
int
or
movsb
aam
pop
ljmp
jl
inc
in
and
dec
xchg
in
xor
test
out
repnz
rolb
imul
push
inc
leave
daa
jbe
sbb
gs
and
jg
fistps
sub
xchg
cmp
pop
cmp
cmp
out
mov
inc
lret
cli
jge
mov
popf
inc
mov
fisubs
or
test
push
jne
out
sbb
jg
xor
inc
iret
aaa
nop
cmp
add
cmp
mov
lods
push
fldenv
scas
outsb
jge
dec
mov
sub
outsb
daa
mov
xor
adc
rcrb
subw
inc
sbb
repz
mov
and
and
iret
pushf
es
repnz
fisubs
push
mov
mov
pop
rorb
xchg
add
in
jne
data16
fadds
bound
jmp
mov
add
test
cmc
pop
int
mov
sbb
cmpsl
sbb
push
cmpsb
or
xchg
js
mov
pop
data16
xchg
xchg
jp
out
adc
ljmp
add
mov
inc
and
push
pop
sahf
hlt
cld
test
outsb
inc
pop
ror
out
mov
xchg
inc
pushf
mov
mov
xor
ficompl
das
scas
pop
xchg
enter
scas
mov
and
sbbb
fcomps
cld
lcall
fsubl
mov
push
adc
jb
jb
testl
idivb
insb
cld
pop
outsl
addb
fsubrl
push
lcall
fildll
push
test
sub
sbb
stc
push
arpl
ljmp
rcl
shlb
call
mov
or
mov
jne
push
jmp
jbe
int3
loope
js
iret
arpl
cmp
xchg
inc
cli
out
adcb
mov
sub
es
cmc
sar
cmc
xchg
xor
xchg
pop
subl
jae
lock
shrb
ffree
add
ret
cli
sbb
sbb
jnp
bound
jo
stos
std
inc
cmp
cli
jno
cmp
sbb
adc
shrl
pop
mov
fwait
push
nop
lods
xor
xchg
add
fldl
ljmp
push
fidivs
in
test
out
mov
pop
adc
les
dec
add
jnp
mov
fcomi
and
mov
in
adc
sbb
pushf
mov
push
or
mov
push
ds
clc
push
inc
loop
aad
push
clc
scas
in
or
mov
adc
push
repnz
lret
adc
fiaddl
dec
test
jg
repnz
fidivrs
out
stos
cmpb
xchg
divb
inc
int
popa
push
or
shlb
popa
pop
fcmove
mov
xor
sub
mov
mov
mov
idivl
xlat
cmp
mov
jns
int3
mov
mov
xchg
sbb
push
xchg
or
cmpsb
or
dec
and
fmulp
popa
mov
rcrl
fnsave
loopne
scas
icebp
int3
outsb
cltd
das
mov
fcompl
adc
fwait
sub
mov
jae
mov
aad
jmp
in
xor
fistpl
ss
loop
push
sbbb
mov
mov
adc
aaa
fidivrl
out
add
dec
jecxz,pn
stc
imul
mov
stc
lret
xchg
add
outsb
fistps
aaa
xchg
in
mov
ficomps
or
and
in
xor
popf
insb
aad
mov
mov
jae
adc
div
in
push
pop
popa
aas
outsb
test
enter
int
aam
bound
jmp
call
enter
adc
lret
mov
sub
mov
out
test
and
or
cmpb
test
jns
aad
nop
or
cltd
movsl
aas
imul
ja
mov
loop
pop
bound
push
pop
insl
sub
fs
xlat
jmp
pushf
les
jb
arpl
test
fisttpll
jns
shrl
add
and
sub
push
ljmp
or
fsubrl
mov
subb
gs
ja
mov
or
int3
arpl
test
dec
into
jnp
add
ja
inc
adc
sbb
call
ljmp
add
xchg
inc
std
movsb
add
push
mov
jle
adc
sahf
push
imul
push
dec
inc
mov
cld
callw
je
pop
movsb
mov
or
repnz
addr16
stos
pop
out
fisubl
add
popa
cs
jae
or
xor
mov
scas
ss
cmp
xchg
in
lods
or
fadd
outsb
inc
ror
cmc
or
add
adc
int3
xchg
mov
cltd
cmp
in
or
xorl
addb
mov
daa
mov
cli
xchg
pop
gs
xchg
nop
mov
ljmp
andl
loope
mov
pusha
mov
fstpt
or
dec
jge
push
ljmp
loopne
sbb
sbb
icebp
push
stos
movl
mov
subl
fisubs
lods
iret
jmp
nop
aaa
cmc
stos
into
iret
and
mov
sbb
mov
sbb
out
mov
mov
int3
and
xchg
shr
lret
dec
or
ficomps
mov
add
cmc
push
dec
rcrb
loop
cs
es
cs
mov
aaa
xor
lret
das
nop
repz
pop
mov
scas
jmp
shll
push
push
push
lods
inc
subl
or
inc
sbb
fdivrl
inc
xor
in
orl
adc
xor
adc
jle
mov
xchg
pop
repz
jle
out
mov
push
icebp
cs
mov
shll
ljmp
ret
movsl
cmc
cli
imul
sub
mov
inc
adcb
or
sbb
dec
sbb
mov
adc
pushf
jnp
es
dec
scas
pop
aas
pop
sti
push
push
jp
mov
jae
lock
push
insb
lsl
mov
outsb
jl
dec
in
addb
mov
sbb
mov
out
add
jl
sar
mov
mov
jbe
jge
mov
rol
jbe
repnz
in
sets
push
cmovbe
adcb
pop
rcr
inc
lea
inc
aaa
jecxz
add
adc
push
scas
movsl
jae
inc
push
pusha
inc
xlat
and
sub
fimuls
xchg
mov
pop
cmp
push
jae
jle
mov
push
jle
nop
xchg
xchg
mov
add
out
pop
fcmovb
mov
sbb
and
push
ss
in
push
loop
pop
push
pop
loop
and
xchg
xchg
out
sbb
aad
inc
shlb
arpl
or
test
push
push
hlt
push
or
in
jnp
mov
add
pushf
in
fisttpl
fcom
or
dec
and
rol
repz
fnsave
and
push
lds
outsl
inc
jl
lahf
dec
ljmp
nop
push
xchg
bnd
ja
adc
adc
sbb
mov
jnp
inc
lods
imul
or
cmp
pushf
test
add
pusha
out
sbb
nop
jmp
mov
gs
outsb
ss
jns
sbb
push
pop
imul
mov
sub
inc
icebp
std
int
cmp
cli
cmp
jae
mov
cli
pop
dec
call
stc
adc
cmp
sbb
mov
sarl
xchg
loope
adc
jmp
in
ret
jmp
or
orb
stc
mov
rorb
xor
push
add
out
aas
loop
mov
push
stos
cmpsb
xchg
je
cwtl
pop
pushl
loop
lret
out
jno
fucomi
lahf
dec
fwait
pop
jle
mov
es
int3
push
je
notl
shll
shrl
fwait
and
movsb
dec
push
shlb
lock
arpl
inc
jae
stos
push
inc
stos
shll
mov
xchg
imul
mov
inc
fistpl
add
xlat
jmp
lahf
insb
lods
pop
mov
fucom
movsb
out
loope
ja
pushf
jno
push
adc
sbb
mov
clc
cmp
jecxz
mov
int
mov
sub
jle
std
lahf
rorb
dec
stc
add
hlt
sbb
and
and
test
pop
lcall
loop
and
and
in
xchg
mov
jle
or
sub
rcrl
lcall
dec
out
cmp
mov
test
shrb
sarl
iret
dec
aad
fnstcw
cmp
adc
aas
aaa
inc
adc
cs
jl
fldenv
xor
mov
imul
mov
push
cli
ljmp
test
xor
sub
es
sarl
inc
adc
push
nop
ss
addr16
pushf
jl
pop
push
mov
pop
cwtl
dec
cmpsb
mov
or
movsl
and
adcb
jmp
adc
movsb
sti
in
push
xor
sbb
stos
sbb
test
xorl
fmuls
jb
loop
push
sub
add
mov
imulb
pop
pop
adc
popf
mov
pushf
sub
and
clc
sub
mov
pop
pusha
iret
mov
and
xchg
clc
cs
je
loop
orb
sbb
sbb
inc
sbb
inc
jnp
out
inc
ret
push
int
mov
xchg
mov
repz
pusha
pop
loopne
cli
cld
jmp
jle
cmp
rclb
and
xor
lods
in
fwait
movsb
cli
sbb
adc
sbb
or
rorb
call
les
cmp
jo
dec
mov
mov
rorb
daa
lds
notb
adc
je
into
jecxz
sahf
dec
mov
pop
inc
jmp
cs
push
inc
sbb
xchg
clc
rcl
sbb
aad
pop
imul
stos
pop
mov
pop
push
popf
mov
inc
cmpsl
and
test
cmp
insl
pop
fidivrs
xor
and
adc
add
xchg
adc
mov
test
stos
xor
xlat
int3
ja
inc
adc
aaa
ret
lods
ret
xchg
repz
imul
loop
pop
mov
dec
cld
popa
in
inc
sub
push
aaa
cmpsb
popa
adc
sahf
shll
mov
nop
or
mov
xchg
mov
xchg
xchg
aaa
inc
jecxz
mov
jns
lea
pop
dec
cmpsl
add
or
cmp
jb
stc
sti
mov
sub
pop
lahf
push
cmp
pop
subl
stos
mov
rolb
cmp
push
dec
sti
cmp
jg
sbb
add
dec
lret
cmp
push
popa
push
cmp
inc
shrl
adc
setno
mov
or
test
in
pop
lods
lods
mov
in
xchg
mov
sbb
jle
inc
inc
sahf
jle
fstps
dec
cmp
push
or
mov
jl
mov
xlat
out
xor
and
push
cmpsb
in
js
jge
dec
test
addr16
inc
orb
mov
cmpsl
or
addr16
add
fwait
outsb
scas
into
mov
ljmp
adc
test
mov
call
pop
hlt
or
imul
call
xor
fstps
or
sbb
push
gs
popf
call
xchg
in
xchg
mov
shl
mov
pop
dec
adc
cld
loope
jns
in
mov
stos
rorl
je
pushf
dec
and
dec
enter
mov
mov
rcrl
je
dec
shll
xchg
sbb
xchg
ss
outsb
jmp
repz
outsl
subl
pushf
imulb
rol
fcompl
je
insl
enter
mov
jmp
leave
int3
cld
mov
push
fildll
mov
pop
testl
mov
mov
mov
js
inc
lods
and
mov
jp
adc
push
xorb
ret
fists
prefetchw
out
inc
out
xchg
ret
or
mov
push
mov
fwait
negb
sub
fidivs
mov
xchg
jg
adc
mov
mov
das
insb
sub
insb
inc
xchg
mov
adc
test
xchg
mov
jns
xor
in
pop
test
bound
fisubrs
fstpt
xlat
sti
adc
jbe
mov
mov
rsm
jmp
dec
xchg
jo
xor
lret
lock
jbe
cmpsb
out
push
aas
loop
push
xor
cmp
stc
jg
js
rcll
cmpsl
sti
ret
pushf
sbb
sarb
xor
bound
lret
rorb
out
fldenv
pop
rcr
test
cwtl
inc
mov
jb
das
out
movsl
dec
mov
lret
scas
mov
pop
frstor
out
inc
push
flds
mov
lods
fistpll
adc
insl
jns
pop
xor
inc
test
cwtl
subl
sarl
fisttps
mov
aas
jle
inc
icebp
and
push
mov
scas
cltd
pop
sarb
pop
jo
or
daa
pop
pop
or
push
dec
inc
in
shr
int
mov
mov
je
inc
mov
cltd
in
lds
ret
pushf
fs
scas
in
jno
pop
add
mov
sub
push
and
bound
add
mov
inc
fimull
cld
pop
or
int3
inc
lea
mov
btr
and
inc
popf
cmp
jle
les
jp
orb
mov
add
and
clc
pop
mov
mov
stos
and
and
fucomp
jmp
xchg
add
lcall
dec
xchg
aas
imul
push
or
jne
fists
or
mov
and
in
test
outsb
cltd
aaa
ret
mov
insb
fwait
cmp
add
jo
sbb
push
neg
insl
sbb
or
mov
stos
push
xchg
pop
lea
into
mull
lds
add
lods
dec
push
push
mov
enter
rcrb
mov
into
lods
sbb
js
fisubs
xchg
inc
outsb
adc
test
shr
cmpsb
in
cmp
test
pop
adc
xor
loopne
pop
mov
pop
rclb
ret
aaa
push
ds
jnp
mov
inc
sbb
mov
ss
xor
sub
mov
xor
mov
mov
sbb
cmc
sub
sbb
rcl
cmp
nop
cmpsb
rorl
mov
mov
pusha
xchg
cmpsb
enter
in
xchg
and
jmp
lds
pop
insb
mov
add
cmp
push
push
push
loop
clc
scas
ljmp
enter
cld
jnp
push
cltd
pop
mov
cmc
int3
mov
pop
rcr
jl
cmp
jmp
bnd
jmp
pop
lret
xor
or
mov
into
jp
mov
call
xlat
dec
and
sbb
mov
hlt
in
flds
fwait
repz
in
adc
pmaddwd
push
loope,pn
icebp
mov
adc
xor
mov
cmp
push
xchg
call
sbb
int
mov
call
lret
hlt
fisubrs
out
stos
in
jae
pop
jle
inc
or
xor
fdivs
rcrl
sarl
push
pop
mov
movsl
mov
dec
sbb
cmpsl
movsl
das
movsb
sbb
inc
out
inc
scas
out
repnz
cmp
pusha
adc
mov
rorb
loopne
lods
inc
test
mov
mov
fldt
dec
cmp
push
xor
mov
xchg
lcall
ret
push
lock
lahf
pop
add
xchg
cmp
inc
push
clc
mov
or
ret
sbbb
out
jle
dec
mov
xchg
fwait
sbb
or
pushf
negl
inc
test
cwtl
xor
xlat
xchg
sbb
mov
clc
sub
roll
js
cltd
and
arpl
in
out
add
cld
test
nop
mov
fwait
xchg
and
mov
loopne
dec
clc
fs
lods
pusha
inc
add
bnd
into
jg
ss
dec
les
test
jle
icebp
call
out
popa
ss
cmp
mov
sbb
or
dec
es
dec
mov
pop
lret
pop
stos
pop
jne
jmp
fistps
gs
xchg
mov
in
rolb
xchg
jle
stos
rclb
dec
fsubl
or
cwtl
iret
daa
scas
iret
mov
fmuls
stos
outsl
fimull
push
jecxz
sbb
movsl
push
sbb
cmp
adcl
pop
dec
dec
dec
add
add
cmp
loopne
fdivrl
nop
sbb
inc
loopne
aam
dec
divl
test
jl
adc
icebp
addb
fists
mov
and
mov
or
inc
pop
test
xor
sub
pop
sub
inc
mov
add
pop
imul
in
cmp
and
dec
pop
adcb
adc
xlat
lcall
lock
out
lods
scas
xchg
stos
inc
notl
daa
or
cmpsl
and
mov
mull
push
iret
addb
push
inc
add
add
andb
loopne
es
movsb
adc
or
pop
adc
js
je
dec
pop
push
push
inc
lock
push
ret
mov
aad
sub
mov
mov
pop
mov
mulb
inc
hlt
mov
fadds
pop
data16
inc
mov
jle
sub
rclb
push
jge
fldenv
jne
cli
inc
enter
sub
cmp
pop
lret
xor
idivb
loopne
mov
psllw
leave
outsl
push
lret
mov
adc
mov
sbb
lea
out
jne
xor
xchg
pop
jnp
aas
adc
hlt
bound
cltd
pop
mov
fistl
add
adc
les
mov
push
sub
dec
clc
in
inc
pop
ficoms
in
call
and
fiadds
or
test
gs
mov
ja
inc
ss
add
dec
lcall
mov
je
and
jmp
cmp
push
push
mov
inc
loopne
pop
scas
loope
scas
add
cmp
fiadds
jge
call
fcomps
in
fistpl
imul
push
add
add
rolb
arpl
push
daa
sbbl
test
or
shl
fisubs
xchg
mov
adcl
push
nop
std
sbb
mov
gs
cmp
pop
fildll
push
int
adc
sbbb
movsl
sahf
dec
cmp
mov
add
bound
inc
pop
jo
cmp
js
sbb
and
sub
pop
xor
mov
out
and
ret
mov
movsl
lret
lods
ficoms
jns
push
ljmp
cmp
andl
jbe
push
in
adc
out
sub
inc
mov
jno
or
mov
dec
mov
aad
mov
push
iret
jns
popa
xchg
ret
push
scas
mov
popf
outsl
stos
adc
popa
adc
mov
imul
cld
mov
xchg
sbb
jns
cwtl
repnz
jg
ljmp
inc
push
sub
cltd
gs
jl
mov
rcl
ss
pop
data16
mov
movsb
pop
dec
xor
stos
hlt
adc
jae
sub
cwtl
repnz
je
das
fdivr
je
sub
je
test
sbb
push
inc
arpl
repnz
add
shll
adcl
les
in
lret
sub
sbb
mov
jb
xor
xchg
mov
mov
rolb
movsl
lret
in
adc
ret
lods
adc
bound
or
ret
sbb
out
in
pop
mov
jmp
push
das
shrb
inc
or
enter
out
pop
cmpsb
mov
psrld
data16
inc
cltd
movsl
pop
es
jecxz
jo
push
sub
sti
pcmpgtw
fdivp
add
xorl
push
idivl
fsubs
xchg
push
sbb
xchg
mov
hlt
mov
lock
mov
mov
add
fsubrl
bound
push
cmp
aaa
mov
add
xchg
shrb
add
aaa
jne
cs
dec
mov
sahf
dec
pushf
pop
aaa
mov
mov
je
orl
fcoms
pop
movsb
outsl
lea
mov
subb
mov
fstpt
add
insb
test
rcrb
repnz
sbb
mov
push
aam
imul
lock
ljmp
fcomps
repz
test
scas
push
fsubs
outsl
adc
popa
ret
pop
addl
ljmp
inc
cmp
call
jge
cltd
or
mov
lcall
jmp
cmp
adc
divb
jo
test
enter
or
mov
sub
jno
inc
mov
push
mov
or
je
sbb
adc
xor
add
ljmp
jle
fs
arpl
mov
pop
test
aaa
loop
sub
sbb
cltd
in
cmpb
push
inc
mov
mov
cmp
call
sarl
inc
jmp
adcl
mov
push
dec
push
push
nop
xchg
xchg
sbb
daa
hlt
sub
cltd
rcll
mov
int
inc
or
ffree
std
aad
stc
pop
insl
add
cmp
bound
addr16
mov
loope
dec
rorb
loopne
pop
xor
rcl
stos
fldl
push
or
or
jo
jbe,pn
in
and
or
sbb
mov
and
cmp
pop
sub
cmp
cmp
xchg
inc
aam
das
or
lods
push
mov
inc
nop
push
mov
or
dec
sub
es
jmp
notl
aad
loopne
cmp
push
xor
jg
out
pop
fsubrp
inc
xor
lea
push
aas
lods
sub
fbld
outsl
cmp
dec
faddp
mov
pop
gs
add
cmpsl
sti
inc
test
into
inc
add
inc
mov
inc
mov
push
inc
dec
add
lods
pushf
pusha
insl
or
push
lds
mov
dec
pop
inc
mov
les
pop
test
push
fmul
nop
jge
mov
sbb
inc
leave
seto
inc
iret
jmp
std
or
push
aad
mov
push
jp,pn
outsb
or
inc
xchg
stc
jl
cmp
and
pop
mov
dec
mov
pop
sub
xor
das
mov
or
aas
int3
xor
pushw
ret
mov
dec
xor
mov
mov
lock
lds
lret
sub
pop
sub
and
mov
repz
ret
repz
rclb
lds
xchg
jnp
xor
aas
das
shrl
popa
adcb
mov
popa
notb
mov
xlat
rolb
and
lods
sahf
mov
mov
sahf
js
mov
mov
mov
adc
sub
pushf
pop
cmp
mov
sbb
sti
clc
add
cmpb
repz
mov
xchg
mov
sub
push
negl
in
jnp
jp
gs
xor
push
test
dec
cmpsb
mov
dec
dec
mov
in
popf
xchg
pop
stos
mov
ret
push
jge
xor
cmp
push
mov
jle
popf
sbb
in
inc
ficoms
ss
cmpsb
push
arpl
in
add
decb
aas
rcr
subb
sbb
push
push
das
cmp
xlat
test
and
aad
sbb
jmp
or
push
cmp
fidivrl
sahf
aad
sub
insl
and
mov
scas
aad
xchg
out
push
aam
and
jecxz
mov
into
add
pusha
or
je
dec
les
lea
sbb
insl
iret
mov
ds
addl
mov
insl
push
incb
xor
pop
gs
sbb
or
adc
push
pop
aad
pop
sti
add
xor
repnz
xor
cli
bound
sti
xchg
jb
pop
stos
mov
aaa
mov
xor
hlt
cmp
mov
jo,pt
cmp
data16
dec
cmc
insb
icebp
dec
das
pop
inc
bound
repnz
negl
pop
hlt
dec
inc
cmp
jae
xor
ljmp
inc
add
mov
xor
sbb
mov
fistl
mov
mov
inc
fcompl
ficoml
mov
lods
popf
movsl
dec
and
mov
mov
dec
popf
jle
fidivs
mov
fwait
imul
inc
rsm
add
and
mov
ret
xchg
fnstenv
bound
cli
jecxz
in
shrl
cmpsl
xchg
int
add
jne
fsubrs
push
jecxz
push
cld
xchg
in
ds
jno
insb
sahf
jb
fiaddl
xchg
or
mov
test
mov
sahf
sarb
pop
inc
popa
mov
aad
out
dec
jg
mov
add
and
cwtl
loop
clc
push
cmp
gs
fwait
and
lcall
inc
aam
cmpsb
sahf
cld
jbe
cli
adcb
mov
test
je
cmpsl
fstpl
sub
sbbl
in
cmp
mov
incb
and
or
cmp
xor
cmpsb
enter
iret
popa
outsl
and
xorb
mov
inc
jecxz
stc
inc
and
test
outsl
and
fwait
rcr
cli
push
xlat
bound
sub
mov
jl
add
out
loop
fiadds
cli
push
mov
clc
cli
push
sahf
sub
push
cld
mov
mov
pop
sahf
xchg
jmp
jmp
into
mov
andl
add
sbb
pop
clc
adc
outsl
aas
jecxz
aam
cmp
divl
imul
mov
or
in
jne
jg
and
ja
lods
or
pop
adc
cld
loop
lods
pop
pop
add
pop
loop,pn
xorl
jbe
inc
lcall
imul
imull
xor
jne
imul
mov
andb
fstps
js
mov
dec
adc
mov
in
adc
icebp
xlat
mov
mov
mov
sub
mov
adc
daa
test
int3
mov
push
push
sub
adc
ret
mov
movsl
pop
mov
push
xlat
sbb
push
pop
cmc
push
push
adc
xor
pop
cltd
pop
inc
jae
push
pushf
push
lret
push
inc
into
loope
cs
popa
cmp
pop
insb
jo
aaa
push
je
adc
mov
pop
ljmp
and
cmp
icebp
jnp
roll
and
les
cmp
sbb
cmp
addl
mov
adc
mov
ret
fsubl
imul
xchg
adc
les
pop
sti
rol
les
les
dec
sbb
es
cmp
and
xchg
xchg
lret
repz
jge
jae
adcl
push
rorl
imul
insl
add
dec
xchg
sbb
mov
mov
popf
mov
rclb
shlb
ss
jbe
adcb
rolb
add
lcall
icebp
mov
pop
repnz
mov
cmc
stos
pop
repz
aaa
daa
repnz
push
xor
and
add
mov
fistpl
insb
push
push
popf
ja
je
lret
pop
push
dec
mov
ret
inc
in
test
xchg
inc
dec
adc
enter
xchg
scas
or
push
ss
cltd
out
jle
je
sti
call
jnp,pn
out
call
idivl
lods
sub
sbb
or
xchg
xchg
imul
jne
add
cmp
jmp
into
or
popa
call
andl
fstl
and
inc
aad
sub
int3
test
mov
dec
dec
mov
push
sarb
hlt
imul
sub
flds
dec
leave
and
jmp
adc
imul
leave
frstor
out
rcrl
repz
shrl
loop
pop
jb
fwait
xor
gs
push
and
in
cmp
das
out
jl
push
outsl
lcall
test
stos
sarl
sbb
mov
or
iret
out
mov
outsl
inc
loopne
push
bound
in
loope
adc
shll
add
daa
push
jns
cmpsl
decb
push
leave
cmp
cmpsb
push
sbb
mov
fiaddl
clc
daa
fistpl
int
xchg
insb
cmp
fnsave
and
mov
movsb
mov
mov
outsb
xchg
loop
add
push
and
jp
push
mov
ret
leave
fisubrs
mov
mov
and
sbb
int3
testl
mov
xchg
sbb
push
popa
add
aad
ss
dec
mov
mov
pop
popa
sbb
and
sahf
sub
fsubrs
jg
dec
icebp
andb
sbb
sub
arpl
or
push
ljmp
movsb
mov
insl
enter
sbb
and
sti
xchg
in
scas
and
push
ss
xor
push
imul
pop
and
frstor
ljmp
lea
lcall
pushf
cld
addr16
jl
jmp
cmp
fldcw
stos
push
and
mov
ret
fnsave
cmp
add
int
mov
and
gs
leave
cmpsb
icebp
test
push
cmp
jb
into
ljmp
sbb
mov
cwtl
iret
dec
mov
jge
aam
test
aad
dec
lahf
cwtl
shrb
fmuls
mov
unpcklps
xchg
lods
neg
jge
in
dec
pop
test
stos
mov
cld
sub
fisubl
pop
pop
sbb
fs
inc
andb
stos
mov
mov
sbb
add
sarb
adc
int
data16
jle
lret
push
jle
mov
xor
test
mov
or
call
push
fsubr
xchg
cmp
dec
inc
int
sbb
xchg
pop
mov
inc
lods
mov
rcrl
jp
cmpsw
cwtl
mov
add
imul
dec
clc
jno
fisubs
lods
lahf
dec
pop
and
pop
push
stos
push
mov
aad
jle
popf
inc
sub
sbb
or
shll
int3
fiaddl
mov
imul
fstl
addr16
add
push
sahf
xor
cltd
xchg
das
push
ljmp
in
pop
dec
daa
xor
aam
xchg
fiadds
add
aad
fistps
dec
jnp
loopne
call
sub
dec
test
clc
xchg
sti
mov
pop
int3
cmp
inc
dec
mov
mov
fwait
sub
push
push
xchg
add
lods
push
cmpsb
icebp
in
jg
leave
cli
cs
popa
mov
scas
imul
daa
or
repnz
dec
push
xor
pop
outsl
std
add
test
dec
pop
aad
and
test
insl
pop
sarb
xchg
out
sbb
iret
sbb
fnsave
lahf
cld
pop
addr16
je
jnp
mov
loop
adc
gs
loopne
scas
cld
sub
or
mov
leave
push
adc
stos
aad
lcall
cmp
sub
loope
testl
hlt
inc
and
fadds
aaa
sub
sbb
nop
push
lea
inc
or
jl
cwtl
mov
sub
cmp
dec
adc
cs
fnsave
cmp
insl
dec
pop
add
mov
xor
aas
aam
filds
sysenter
jno
orl
mov
push
push
call
cmp
cmp
lods
inc
mov
sub
mov
rorl
pop
adc
jg
sub
out
shl
push
out
mov
push
and
push
fwait
adc
sarl
test
loopne
xchg
mov
sub
pop
shl
jge
pop
sti
mov
int3
in
insl
mov
and
mov
xchg
or
into
cmc
movsl
inc
mov
pop
pop
test
ljmp
mov
fnsave
test
pop
and
out
push
fsub
sub
ljmp
imul
pop
xchg
ja
test
pop
pop
aam
nop
aas
mov
pushf
loop
xor
lret
shll
outsl
sub
or
sbb
jecxz
xchg
jge
mull
mov
stos
jno
aam
pop
or
xchg
dec
add
les
addb
push
jmp
shrb
leave
aaa
shrb
cwtl
call
test
add
xlat
or
sub
cmpsl
push
outsb
mov
stos
mov
and
fwait
sbb
sub
or
pop
cmp
push
mov
sub
push
loop
fs
call
pop
pusha
roll
pop
fisttpl
sbb
xor
inc
xor
testl
jo
mov
sbb
and
mov
int
dec
sub
mov
nop
lods
clc
gs
fldt
mov
mov
jns
add
push
push
sub
rolb
mov
jecxz
data16
and
fildll
repnz
lods
pop
pop
adc
inc
cmp
je
mov
mov
mov
or
jnp
sarl
mov
mov
push
push
andb
ss
add
and
xor
mov
aas
jg
xchg
add
insl
push
aas
sub
mov
repz
xchg
and
xchg
pop
mov
icebp
pusha
xlat
sub
fisubrs
mov
or
dec
pop
ret
pop
xor
lahf
js
in
or
mov
test
stos
in
push
pop
inc
nop
xchg
add
bound
in
pop
ret
add
cmc
outsl
fadd
call
das
mov
cmp
std
pop
fisttpl
rorl
insl
les
jne
rcll
xchg
lret
and
jmp
fwait
sahf
adc
mov
jbe
sub
xchg
mov
fisttpll
add
adc
mov
mov
sub
jmp
mov
rcll
xor
test
movsb
pop
sti
cwtl
std
mov
mov
dec
das
leave
lea
hlt
iret
loope
int
jle
xlat
and
and
dec
stc
mov
push
inc
adc
sub
pop
push
scas
xchg
push
enter
adc
fsubl
sub
std
cltd
sub
xchg
mov
insl
xchg
pop
and
sub
cmp
lcall
push
addr16
test
test
in
je
cmp
rcll
stos
adc
inc
dec
mov
or
bound
push
stos
loope
push
lds
dec
nop
push
add
insb
gs
jmp
mov
shll
xchg
inc
popf
clc
js
aas
xchg
enter
shl
hlt
sti
mov
jnp
add
std
stc
add
or
test
movsb
nop
jb
int3
sub
mov
mov
mov
pop
mov
ret
xchg
push
rorb
add
rorb
pop
cli
adc
fwait
inc
das
xchg
test
push
jbe
lods
pushl
jmp
call
popa
mov
lret
test
pop
mov
cld
mov
je
add
xor
push
mov
mov
mov
push
add
aaa
and
ljmp
stos
inc
in
out
adc
lret
rclb
adc
pop
mov
pop
and
cmp
rclb
jl
out
or
xchg
or
lret
in
jno
jnp
sbb
shr
orb
aaa
loopne
ljmp
pushf
ret
adcl
iret
mov
popa
sub
aam
dec
cld
push
popf
aaa
aad
inc
jne
ljmp
xchg
lcall
pop
sbbb
mov
push
jmp
pop
adc
pop
push
cwtl
hlt
sub
ja
ror
sub
mov
mov
int
xor
out
sti
nop
out
call
xor
aas
inc
push
test
loope
cltd
ss
out
xor
stos
cmp
jmp
sahf
into
jmp
cmp
das
pusha
pop
inc
in
in
mov
lods
pop
outsl
test
adc
add
cld
and
pop
add
loop
mov
bound
das
push
lret
test
and
jae
push
sub
int3
mov
adc
and
mov
insb
arpl
lock
mov
inc
xchg
fwait
jp
clc
fisubs
pop
push
out
loope
push
mov
mov
push
shlb
sub
mov
xchg
fsubrl
leave
dec
mov
insl
sbb
jmp
or
sub
adc
dec
push
stos
lret
fwait
out
lods
jne
cmp
xor
or
add
add
inc
adc
cmp
push
add
mov
lret
jo
lret
aam
xor
loope
cmp
in
ficoml
sub
sti
mov
sahf
lods
dec
fstl
neg
das
stos
shll
fstpl
rcrl
call
test
pop
mov
dec
gs
or
add
pusha
pop
mov
sbb
or
jne
mov
dec
pop
sti
fistps
cld
stc
dec
js
push
gs
and
rorl
es
jmp
mov
adc
int
mov
cmp
out
movsl
repnz
std
sub
stc
packuswb
pop
cmp
dec
push
int
mov
sarb
push
cmp
les
jmp
pusha
hlt
xor
out
aad
in
cmp
sahf
xor
fsts
or
je
fs
daa
arpl
cmpsb
mov
push
xchg
enter
inc
push
mov
xlat
jo
mov
fcomps
test
cmp
out
mov
adc
in
scas
jnp
testl
pop
in
adc
aaa
fisttpll
mov
rclb
int
in
xorl
scas
xor
in
in
popa
push
inc
push
icebp
adc
or
ljmp
ljmp
shrl
in
sub
pop
movsl
jno
push
outsb
and
movsl
inc
inc
push
or
jne
pop
shlb
pusha
jns
jle
inc
pushf
fwait
sub
sub
adc
inc
lahf
lds
leave
ds
lds
adc
mov
sti
xchg
scas
sbb
and
addr16
imul
loop
inc
mov
push
jp
inc
filds
jno
in
data16
sub
add
mov
mov
and
mov
jno
mov
cs
sbb
cltd
pop
xor
jl
add
outsb
mov
adc
sahf
hlt
aas
xlat
inc
outsb
pop
cmp
xor
outsb
and
out
nop
adc
call
les
xor
lods
rol
jp
repz
pop
xchg
jo
iret
arpl
lcall
pusha
loopw
xchg
mov
adc
mov
xchg
sub
sub
test
jl
xor
shrb
aad
scas
into
scas
ds
fisubs
mov
mov
xor
cld
jle
popa
cmpsl
inc
inc
sub
lds
sub
stc
pop
mov
in
je
inc
mov
aam
lahf
sarb
dec
pop
xor
mov
in
fidivs
in
loope
mov
mov
push
xchg
das
clc
mov
in
cmc
jmp
push
adc
mov
or
sbbl
mov
cmpsb
mov
jge
insb
xchg
add
repnz
jno
mov
rcrb
in
jmp
test
out
gs
outsl
jne
iret
lret
lahf
sbb
or
sti
dec
jp
js
sub
aaa
loopne
push
push
cli
xchg
sub
and
imul
mov
xchg
cmpsl
fnstcw
add
add
nop
into
sub
xchg
xchg
dec
popf
xchg
adc
jl
imull
or
out
mov
cwtl
xor
fld
push
cli
ret
and
je
or
ja
int
adc
fdivrl
stc
cli
push
int
jecxz,pn
loopne
lock
stos
adc
xor
or
mov
cmpsl
mov
cmp
jae
scas
aam
add
add
cmp
popf
push
test
daa
ficoml
jb
pop
fistps
lea
xor
lcall
add
sahf
stos
lds
push
mov
mov
nop
xchg
shll
add
ret
imul
inc
mov
or
aaa
xrelease
inc
pop
imul
pop
stos
adc
fs
int3
mov
movsl
jge
lods
rolb
aas
jge
push
add
or
or
lock
cmpsl
jb
or
jg
pushw
push
xor
mov
sbb
ret
leave
inc
ja
inc
mov
repz
sub
std
ds
adc
sti
je
lahf
test
lock
pop
in
cmp
outsb
notl
arpl
popf
mov
aas
sar
sbb
sbb
push
adc
das
jns
repnz
mov
cmc
add
mov
into
pop
sub
movsl
xor
or
push
in
inc
sbb
fs
test
jp
pop
mov
scas
enter
out
and
cs
in
or
pop
cmp
out
mov
js
inc
pop
adcl
repnz
leave
sbb
dec
cmpsb
les
adc
pusha
test
jmp
sub
inc
into
pop
das
insl
jne
iret
push
aaa
and
dec
or
mov
mov
out
dec
jl
push
fstpt
mov
mov
add
pop
jbe
sbb
ss
mov
ret
imul
sub
and
and
std
push
pop
push
jo
inc
push
loope
movsl
jbe
int
push
mov
cli
xchg
sbb
pop
out
int
cmp
pushl
insb
dec
fsubrl
dec
pop
push
or
adc
adc
int3
mov
ss
mov
push
and
out
int
shl
call
mov
xor
jo
and
mov
mov
repz
dec
fs
jb
or
lret
inc
and
stc
mov
stos
inc
cli
addl
popf
mov
aad
lock
pop
dec
or
insl
mov
sub
and
nop
mov
ret
jmp
inc
sbb
ret
gs
add
or
stos
add
in
rcll
xchg
shrl
daa
aad
cmp
push
sub
mov
xor
inc
mov
inc
js
adc
xor
rclb
imul
xchg
ljmp
mov
repz
jno
lds
inc
fsubrs
imul
movsb
in
test
les
lods
dec
outsl
sub
pop
ret
cmc
xorl
xchg
sbb
inc
inc
pop
fdivrs
mov
insl
dec
and
out
push
sahf
dec
mov
xchg
xchg
icebp
or
dec
or
scas
add
add
data16
mov
adc
jae
into
ss
rcrl
das
pop
out
inc
and
repnz
mov
pop
jecxz
rcrl
shrl
aam
orl
add
xchg
sarl
cmp
movsl
pop
sub
inc
push
repz
push
xchg
pusha
je
scas
je
aam
stos
cmp
mov
fs
adcl
loop
idivb
movsl
pop
mov
imul
xchg
sub
add
cmp
mov
lret
xor
mov
call
sbb
mov
std
mov
js
sub
adc
mov
add
xchg
fists
movsl
inc
xor
mov
mov
add
mov
xchg
sub
mov
lahf
cmp
imul
pop
mov
cmc
mov
hlt
add
daa
xchg
sbbl
test
data16
push
inc
in
dec
fsubp
insb
inc
pop
jbe
push
cmp
inc
push
cli
mov
mov
ja
in
push
movsl
push
add
dec
mov
cmpsl
cmp
mov
rcrb
fsubrs
fcoml
add
and
stos
bound
popa
icebp
push
pop
xor
sbb
push
negb
fdivrl
jo
lock
cmp
push
mov
push
mov
dec
xchg
ds
push
pop
dec
and
jg
pop
fisubrs
call
jmp
fisttpl
push
mov
ret
mov
and
sub
test
lret
mov
daa
loopne
ficompl
xlat
cmp
xchg
push
call
pop
pop
sub
push
addr16
sahf
or
mov
jo
popf
push
es
dec
mov
sub
xor
shrb
cmpb
mov
inc
mov
xchg
xchg
mov
dec
dec
and
shl
loop
and
inc
or
popf
loop
pop
lock
mov
popl
ja
sbb
adc
or
cltd
add
push
stos
dec
test
std
dec
data16
mov
sqrtps
sahf
out
inc
lea
mov
jg
inc
int
mov
lcall
ret
rcrl
dec
pop
leave
sbb
cmc
adc
push
mov
mov
fnclex
repnz
mov
xchg
xor
iret
dec
cmp
cmp
pushf
les
xor
push
loope
sub
loop
out
dec
out
lahf
pop
push
adc
mov
cmc
mov
lods
je
dec
icebp
adc
mov
in
or
clc
sbb
sub
mov
clc
popfw
or
push
imul
sub
xchg
mov
arpl
xor
dec
insl
dec
cmp
bound
mov
movsb
ffreep
sbb
add
ss
test
ret
shll
nop
inc
or
call
jns
dec
cmpsb
jge
inc
xchg
add
test
xchg
push
mov
outsb
inc
sti
aam
repz
lret
jno
movsl
sbb
pop
dec
sbb
lret
and
pop
fbstp
xchg
mov
test
add
int3
xchg
push
sti
jnp
pop
push
mov
sub
in
popa
xorb
je
pop
xchg
adc
mov
mov
pop
cmpsl
jmp
xchg
mov
daa
ja
inc
or
push
sbb
nop
outsb
shl
push
gs
xor
mov
scas
inc
jp
mov
pop
xchg
mov
sub
ficompl
inc
mov
and
daa
push
and
and
aad
pop
jae
lcall
add
xchg
movsb
mov
lods
mov
and
mov
pop
dec
mov
shrl
xor
inc
mov
inc
mov
jmp
ret
movsl
jns
ret
xor
dec
adc
mov
xor
out
orb
fnstcw
mov
out
pop
and
enter
rolb
xor
cld
xchg
sub
cmc
sub
mov
add
mov
dec
inc
xor
mov
repnz
mov
in
les
inc
mov
sbb
xchg
notb
ja
sti
adc
mov
push
push
les
mov
out
leave
or
loope
push
in
shrb
rorb
fdivp
mov
push
sub
inc
bound
and
stos
jg
adc
jnp
insb
js
and
mov
or
add
inc
jns
es
loopne
lds
cltd
frstor
jb
int
xchg
aad
aad
movsl
je
jge
movb
or
addl
movsl
inc
jg
stc
insl
orb
fsubr
add
es
aas
nop
jmp
imul
inc
or
out
jno
mov
mov
hlt
shl
xchg
sub
inc
sub
sub
mov
int3
movsb
loop
pop
jnp
mov
sub
outsl
xchg
add
sub
adc
and
xchg
dec
scas
test
push
adc
out
aam
pop
adc
dec
add
loopne
or
and
stc
shll
mov
xor
push
das
int
cmpsl
psubusw
push
ljmp
into
loopne
cmp
ss
inc
stc
or
movsb
ljmp
dec
jno
mov
xchg
pop
outsb
icebp
lret
adc
fstps
frndint
scas
add
mov
and
adc
in
idivb
lock
cmp
rcrb
insb
xchg
andb
jns
not
xchg
insb
pop
loope
mov
jns
or
and
stc
mov
pop
insl
lret
outsb
mov
push
cmp
mov
xchg
and
bound
jo
and
sbb
lahf
mov
cwtl
push
cltd
stos
push
idiv
rorl
push
sbb
add
mov
aad
cld
rolb
je
imul
pop
cmp
xchg
mov
jmp
sahf
inc
int
xchg
or
jmp
aas
mov
fsubr
data16
pop
push
jo
cltd
dec
mov
mov
cmp
pop
in
inc
ljmp
mov
mov
cld
push
or
xor
mov
and
mov
loop
push
push
ror
cwtl
in
xlat
fcomps
lods
sub
daa
push
daa
mov
dec
jmp
ret
aad
or
mov
xchg
push
lea
jmp
jl
loopne
or
mov
dec
dec
push
sarb
lret
jmp
pushl
idivb
push
xchg
sbb
jle
fists
int
adc
iret
fmuls
je
pushf
es
xor
push
ret
dec
xchg
pop
inc
cmpsb
lods
lahf
sbb
call
dec
pop
pop
scas
hlt
fsts
lret
test
lcall
sbb
rcrl
cld
or
addps
aas
rorl
cmp
inc
mov
inc
inc
in
jg
and
mov
das
jmp
pop
push
push
hlt
push
lea
adc
and
incl
jae
sub
or
push
mov
loope
data16
cmp
jb
fpatan
outsl
stos
push
push
jno
rcr
mov
addr16
in
push
hlt
jb
jecxz
mov
xor
mov
xchg
adc
sub
roll
das
cltd
jbe
jmp
cmpl
mov
das
push
les
loop
daa
mov
ljmp
jb
or
ljmp
or
lea
mov
xor
pop
sub
mov
orl
scas
movsl
cmc
pop
lret
sub
pop
neg
and
loope
aaa
test
imul
cmp
dec
aad
xchg
sbb
jle
in
aam
stc
xchg
add
push
arpl
mov
pushf
std
aam
xor
cmpsl
cli
mov
push
mov
outsl
xor
dec
jnp
pushf
shlb
cmp
test
and
loopne
fnstenv
push
test
push
bound
sub
mov
test
in
mov
cmc
adc
and
hlt
aam
shrl
cmp
test
mov
test
ret
dec
xchg
ret
adc
xchg
push
inc
lea
pop
out
jp
and
adc
movsb
xchg
bound
mov
push
scas
outsb
inc
xchg
pop
mov
imul
fisttps
push
gs
jnp
fs
add
mov
or
pop
hlt
mov
testl
cmp
insb
negl
or
popf
nop
repz
and
pop
loope
fdiv
jae
xor
pop
fwait
cmp
push
data16
jge
leave
mov
adc
add
fdiv
dec
scas
out
mov
mov
adc
in
push
mov
lcall
jbe
adc
call
jmp
jge
cwtl
mov
add
push
xor
or
xchg
push
popa
mov
xor
mov
sbb
inc
daa
add
inc
add
aas
test
test
addr16
call
push
std
stc
jo
orl
jecxz
pop
xchg
jns
or
add
imul
mov
and
ljmp
lcall
cmpsb
adc
dec
rcrl
fwait
orb
std
and
clc
xchg
mov
jae
fcoml
aaa
push
mov
ljmp
inc
jb
orb
sbb
or
jl
fsubr
jns
xchg
es
cmpsl
imul
fucomip
jle
shlb
cmpsl
push
rcl
int
adc
xor
inc
int3
cmp
push
mov
mov
sbb
cmp
jne
or
stos
aad
mov
push
sub
mov
jp
test
hlt
fst
popf
cmpsb
and
jne
inc
cmp
pop
push
jl
inc
imull
cwtl
scas
pop
arpl
xor
push
bound
fbstp
jge
xchg
dec
sub
xchg
dec
and
andb
sub
xor
les
push
frstor
imul
jae
or
sbb
xchg
mov
lock
enter
cmp
cmp
icebp
imul
cmpsb
nop
in
pop
cli
and
add
loop
call
lret
call
test
sbb
mov
sub
pop
ror
insl
jmp
loop
outsl
test
jns
dec
bound
xchg
sub
jge
pop
fstpl
mov
pop
lods
inc
lcall
js
nop
leave
ljmp
add
jbe
and
dec
pop
inc
cmc
xchg
lahf
add
adc
dec
jp
imul
xchg
dec
pop
jbe
mov
imul
repnz
inc
fsubl
and
enter
jle
push
into
or
cltd
sbb
jecxz
stos
mov
sub
mov
jnp
in
xor
adc
subb
scas
call
negl
cwtl
sub
aas
lahf
es
mov
cs
icebp
sub
push
mov
jmp
in
rcrl
sahf
jne
jecxz
gs
out
xchg
mov
jns
ss
test
xchg
je
adc
or
lods
jno
mov
xchg
ja
sbb
xchg
adcb
fsub
adc
pop
out
ret
and
orb
mov
popa
ja
sub
iret
gs
mov
sub
xchg
push
cmp
lds
mov
push
loopne
je
inc
add
rorl
lea
or
mov
mull
add
cmp
loope
aam
pushf
jecxz
push
out
repnz
fimuls
inc
inc
dec
sbb
in
mov
pop
adc
pop
push
sub
mov
movsb
push
dec
popl
sub
jns
lea
in
mov
imul
inc
cli
push
cmc
rcrl
iret
jo
les
sbb
out
push
sarl
adc
stos
insb
lret
fwait
lods
mov
sbb
inc
mov
pop
lds
adc
mov
mov
sti
pop
jb
fcomip
or
push
lahf
jnp
xor
test
lock
mov
pusha
pop
mov
mov
or
shrb
testb
scas
popa
and
cld
iret
or
jmp
sub
cltd
aaa
adc
mov
push
mov
mov
dec
push
daa
jl
test
xchg
ficoms
add
mov
jg
das
aad
fimull
loope
shll
push
add
add
hlt
cmp
cwtl
out
add
fsubrl
in
cmp
in
aam
lock
loope
or
sub
adc
jmp
leave
xchg
xor
fstl
xor
loope
inc
ja
adcb
dec
inc
mov
es
into
movsl
imul
fstps
dec
movb
ljmp
adc
xchg
fldcw
mov
ffree
mov
mov
aaa
adc
mov
sar
add
mov
mov
lods
sub
xchg
imul
mov
fld
sub
sbb
pop
mov
mov
mov
sbb
and
adc
and
aad
push
bswap
ficompl
adc
mov
test
gs
aaa
push
mov
cs
fsubl
dec
push
dec
out
ss
sbb
fisttpll
jp
data16
fcomip
adc
or
in
scas
dec
xchg
insl
push
pop
hlt
notb
pop
mov
dec
loope
add
add
addr16
mov
mov
out
lret
iret
mov
loop
aad
rep
and
mov
sbb
ss
jae
inc
aas
cli
in
test
inc
lea
push
fisubrl
sub
shrb
jne
push
sti
push
inc
mov
cmp
inc
gs
dec
sbb
sub
imul
add
xchg
xchg
and
fimull
loope,pn
pop
fwait
insb
or
test
push
jne
icebp
sbb
mov
push
shll
dec
mov
sub
aam
push
outsl
inc
push
aas
subl
mov
popf
and
enter
cmpsl
sbb
sbb
in
xor
xchg
data16
mov
sbb
adc
inc
dec
int
ja
pushf
inc
push
mov
lds
cld
mov
xchg
xchg
out
movsl
je
or
clc
lcall
push
sub
and
cmp
rorb
sbb
push
or
rol
fwait
adc
cmpsl
or
jnp
str
dec
fnstsw
add
push
cmp
cld
mov
pop
mov
cli
dec
mov
ljmp
and
jmp
icebp
mov
mov
xchg
imul
cld
mov
adc
jp
loope
sub
mov
pop
fiaddl
fdivs
jbe
daa
and
mov
or
in
xor
and
cld
mulb
out
cmp
jo
daa
mov
inc
adcl
nop/reserved
or
mov
and
mov
aad
mov
nop
jnp
scas
cmpsl
int
pop
push
dec
sbb
imul
outsl
test
xorb
add
sbb
dec
push
dec
dec
dec
cli
xor
ret
arpl
fidivs
popf
aad
mov
adc
or
inc
push
jg
mov
cmp
std
and
pop
int
notb
add
push
jno
sbb
rol
test
sub
cmp
mov
cmp
sub
shrb
daa
sbb
int
lret
je
jmp
mov
int
push
stc
pop
jge
xor
arpl
or
test
push
sbb
dec
fisttpl
xor
dec
pop
in
inc
inc
sub
and
mov
mov
sti
inc
fwait
in
mov
arpl
call
outsl
mov
into
inc
inc
cli
cmp
pop
lds
adc
loop
insl
sub
xchg
push
jo
cmp
and
les
xchg
mov
leave
test
push
loopne
test
fst
out
jl
mov
mov
aaa
cmp
stos
push
cwtl
xor
adc
cmp
and
jg
xchg
imull
jmp
mov
mov
dec
cmpsl
mov
hlt
jle
ficomps
sahf
sar
ds
mov
dec
sbb
mov
outsl
dec
inc
cmpsb
enter
roll
rol
push
lret
and
adc
loop
popa
insl
push
sbb
jmp
sarb
fisubl
ret
shr
and
jbe
push
pop
mov
fcomp
pop
cmpl
mov
bound
popl
stos
mov
test
in
mov
outsl
mov
aam
sub
inc
imul
ljmp
cmpsb
add
insb
pop
push
iret
push
fnstcw
les
push
mov
cmp
sbb
mov
adc
div
insb
into
sbb
dec
fucom
lods
pop
jns
push
or
inc
dec
das
jg
in
xor
xchg
cltd
pop
imul
call
jge
addl
lcall
popf
bound
add
lods
pop
sub
pop
ret
pop
lods
cmc
in
push
pop
ja
sbb
fwait
xor
push
negl
insb
mov
add
cmpsb
pop
and
pop
je
ss
jmp
mov
xchg
outsl
mov
adc
mov
test
loopne
rcll
sub
ret
clc
rcl
mov
and
jecxz
int3
push
sub
scas
pop
jmp
pop
mov
push
sahf
jmp
cs
xchg
fnsave
bound
outsl
push
mov
jge
sub
mov
fistpl
sbb
push
push
dec
sahf
mov
repz
lock
inc
and
mov
xchg
cmp
add
adc
push
push
lahf
cmpsb
iret
or
sahf
out
xor
cmp
mov
mov
shll
mov
pop
jbe
iret
sbb
xchg
adc
loopne
inc
fisttpl
mov
test
jle
sbb
popa
lock
cmpsl
into
sbb
inc
push
sbb
clc
xchg
movsb
jne
pop
push
adc
push
loope
insb
jp
cmp
into
xor
and
imul
push
push
std
add
dec
daa
mov
push
or
lea
lcall
ret
insb
lret
lret
jp
jb
insl
test
mov
fisttps
enter
dec
dec
mov
int3
jnp
and
jge
push
mov
cld
clc
mov
cmp
je
rcrb
sub
ss
pop
jno
jno
pop
adc
rol
mov
sahf
cmp
sub
pushf
es
outsb
fldenv
mov
mov
ss
shl
into
push
mov
xor
or
mov
xor
imul
shll
mov
cmpsb
dec
sbb
xor
or
jno
rcrb
test
fiaddl
pop
pop
or
and
imul
enter
ficoml
and
popf
pop
jge
mov
nop
movsb
xor
test
jae,pt
out
pop
dec
push
mov
sub
cmpl
push
jo
xchg
pop
push
adc
push
mov
lcall
add
repz
in
mov
push
leave
nop
rcll
mov
mov
outsl
icebp
and
jne
out
xchg
mov
stc
je
jb
leave
mov
lds
pop
je
mov
jns
dec
aas
jmp
push
push
into
fbstp
sbb
and
mov
fistpl
ret
lretw
push
stc
fisttpl
jmp
sbb
push
push
out
and
nop
out
sbb
cmp
mov
nop
stos
jns
and
mov
scas
inc
mov
repz
inc
mov
out
outsb
dec
sub
mov
push
push
repnz
mov
inc
lds
xchg
faddp
push
xor
mov
cld
mov
inc
sbbl
sub
xchg
inc
jae
out
test
fdivrp
mov
mov
mov
test
pop
push
aad
add
mov
pop
mov
jp
jl
pop
mov
mov
add
xchg
ss
mov
xchg
mov
xchg
push
imul
sbbl
mov
mov
xor
fnstcw
mov
sub
test
das
pop
mov
jns
popf
lcall
or
stc
mov
xor
mov
or
popa
jnp
int3
or
push
adcb
or
inc
and
shll
pop
sub
jns
imul
xchg
sub
pop
pop
inc
pop
test
leave
scas
xchg
inc
jp
aaa
inc
cli
adc
add
ljmp
iret
out
bound
es
aad
sbb
dec
push
xor
xor
fsts
lcall
xchg
test
ss
xor
outsl
fimull
movsb
ljmp
icebp
pop
outsb
movsb
adc
lods
mulb
push
mov
pop
sbb
aam
das
daa
jae
push
mov
mov
mov
pop
and
ffree
test
lea
ja
outsb
sub
test
repnz
test
or
and
mov
sub
push
les
cmpps
jns
hlt
jg
js
xchg
inc
lds
lds
data16
mov
cmp
and
push
sbb
in
out
roll
sub
ficoml
adc
sbb
push
jmp
rcrb
pop
fwait
dec
movsl
adc
and
or
imul
into
pop
loop
bound
jnp
test
scas
pop
cli
push
lret
insb
imul
mov
inc
lods
jo
test
js
cmp
or
je
jg
loope
es
or
push
jnp
pop
sbb
pusha
mov
dec
popf
and
inc
mov
testl
negb
pop
cs
or
adc
sbb
cmp
daa
repnz
std
mov
negb
in
dec
shlb
mov
in
movsb
dec
xchg
mov
pop
xchg
nopl
sub
xchg
xchg
push
or
gs
lods
bound
mov
jns
lret
hlt
or
sbb
xchg
dec
repz
or
adc
arpl
in
dec
mov
xchg
aam
xchg
inc
mov
and
cli
mov
fwait
sub
push
imul
movsb
xor
push
addl
mov
je
sub
lds
lcall
orl
leave
in
pushf
and
cwtl
push
inc
movsb
imul
add
es
daa
sbb
loope
idivb
dec
cwtl
jl
jns
mov
push
mov
ret
fsub
jbe
outsl
sbb
testb
mov
nop
dec
daa
das
jecxz
adc
adc
mov
pop
mov
pop
dec
fsubrs
int
ljmp
fsubrs
cmpsb
jbe
mov
dec
jbe
or
add
pushf
lret
mov
and
and
jp
aaa
inc
dec
add
mov
cld
hlt
adc
ret
in
in
push
cmp
mov
testb
jmp
out
add
mulb
xor
lock
push
push
lea
inc
dec
xor
ja
int
dec
push
add
arpl
inc
dec
insb
cmp
dec
sbb
pop
into
out
sbb
inc
inc
jp
popa
add
mov
lcall
fldt
jl
pop
pop
lret
arpl
mov
popf
inc
packuswb
add
or
stos
push
movsl
push
cmc
push
mov
cmp
or
push
or
imul
test
insb
rcl
stos
add
sbb
pop
dec
leave
in
dec
add
push
adc
cmpsl
addr16
push
mov
adc
repz
mov
imul
jnp
xor
rorb
sub
and
dec
adc
negb
sbb
stos
es
insb
test
dec
inc
es
jbe
mov
test
pusha
setp
fwait
decl
testl
and
call
lock
movsb
and
ljmp
push
mov
std
pop
je
adc
and
or
lea
push
mov
fmul
mov
mov
xchg
xchg
lcall
das
dec
data16
imul
push
mov
or
je
lahf
out
push
push
add
xchg
adc
ret
jbe
xor
repz
push
mov
stos
xchg
aaa
push
lds
jbe
jno
orl
mov
jnp
daa
mov
in
mov
inc
mov
sbb
leave
jb
mov
inc
test
jb
push
mov
mov
cmp
fsts
pop
xchg
mov
jbe
xorl
lret
andb
xlat
stc
mov
sub
mov
mov
add
or
cs
repz
fcomps
imul
pop
inc
mov
dec
jne
insl
jecxz
ja
add
das
mov
pop
mov
or
jo
jecxz
ljmp
mov
repnz
popf
cmp
jno
cmpsl
push
xchg
data16
pop
aaa
popl
dec
and
mov
sbb
dec
sub
std
pusha
dec
xchg
mov
in
cld
mov
cmp
mov
incb
pop
call
add
xchg
sbb
mov
test
add
ljmp
loop
adc
push
fistl
xchg
and
push
fcomp
lods
sub
xor
arpl
lods
inc
mov
or
sbb
sub
lret
gs
push
cmp
call
cmp
push
jmp
bound
pop
call
mov
clc
sub
ret
pop
lret
add
dec
pop
cltd
push
ljmp
test
fwait
std
inc
ja
or
das
pop
xchg
addb
xchg
mov
mov
xlat
std
test
sub
nop
add
sub
mov
ja
fcoml
push
cmp
push
clc
cwtl
pop
in
fdivrs
xor
xor
movsl
stos
lock
pop
xchg
movsb
mov
stos
mov
adc
mov
hlt
fistps
pop
test
mov
cmp
sbb
mov
cmpsb
cmp
xchg
mov
mov
jmp
jns
xchg
ja
lock
insl
scas
mov
push
pop
mov
push
mov
call
mov
aam
subl
lock
mov
ret
les
fimull
in
aas
rol
push
fists
cld
or
sti
jne
lods
ret
mull
push
fdivrp
push
push
addr16
mov
xchg
jbe
and
lock
fdivrs
push
dec
jg
fdivrl
xchg
or
insl
jmp
fldenv
rclb
mov
lcall
sbb
cmp
sbbb
enter
daa
cwtl
mov
sahf
push
and
test
outsl
test
test
xor
lods
imul
add
fstl
dec
test
jbe
leave
fwait
in
xchg
out
push
scas
inc
push
sbb
hlt
shlb
mov
fs
lock
jg
aas
lock
cmp
mov
mov
insl
sbb
popf
scas
ljmp
iret
imul
popa
andl
push
lds
pusha
cmp
sub
out
fcompl
or
pop
fdivrs
mov
ret
xchg
cmp
movsl
push
push
dec
cmpsb
mov
push
adc
sbb
add
mov
adc
aam
push
add
xchg
pop
outsl
push
subl
call
push
incb
adc
insb
cmp
sbb
mov
ss
xchg
cmp
jnp
scas
mov
je
into
xchg
in
pop
jae
jne
fldl
xor
daa
adc
sbb
inc
push
xchg
jnp
sbb
or
imul
jo
imul
push
jnp
xchg
pop
stc
mov
sub
jmp
fdivrs
in
xchg
sub
movl
jnp
add
pop
mov
sarl
loope
pop
mov
push
lret
lahf
push
mov
fisubs
and
sbb
andb
jns
jmp
pop
xor
dec
outsb
adc
fsubs
outsl
mov
push
lea
sbb
movsb
mov
and
sbb
cmp
jg
test
test
xlat
mov
test
xor
lods
dec
inc
or
dec
xchg
pusha
sub
mov
mov
jbe
pop
dec
nop
xchg
pop
cmpsb
jbe
cmp
push
adc
nop
inc
or
scas
or
ss
ja
out
loopne
mov
cmp
ds
pop
sarb
push
push
cmp
cmp
iret
mov
pushf
cmp
sub
int3
xchg
pop
or
fiadds
cmp
and
mov
and
mov
adc
insb
jbe
sub
add
sub
and
mov
cmp
mov
pop
mov
dec
test
iret
mov
rorb
divl
stc
mov
pop
dec
and
dec
mov
push
addps
add
adcb
ror
movsl
push
push
stc
mov
loop
inc
xchg
sbb
fbstp
into
loope
in
gs
lret
xlat
pop
or
ss
mov
mov
and
test
mov
adc
jge
inc
or
lods
lret
xlat
mov
fists
popf
cmp
imul
cmp
fs
sub
jl
dec
lahf
mov
fs
dec
aam
or
lods
imul
dec
fsubl
rol
sbb
repz
xchg
xor
or
and
rolb
out
sahf
hlt
test
aas
sbb
mov
fs
fdivrl
test
lret
jno
pop
leave
stc
xor
mov
adc
mov
mov
repz
leave
jb
ja
xchg
add
loope
jno
aas
sbb
lcall
fwait
dec
adc
jecxz
mov
push
cltd
insl
pop
test
or
outsb
lret
je
bound
push
add
jmp
cmp
jns
repnz
ss
jecxz
mov
inc
and
xor
pop
shr
xchg
mov
imul
pop
xchg
stos
fisubrs
mov
addr16
mov
adc
xchg
sbb
or
pop
std
xchg
aaa
xor
addr16
jno
testb
pop
imul
loope
push
mov
mov
jns,pn
inc
das
out
jge
mov
mov
push
jae
es
cld
lock
xchg
sub
jp
ss
aam
push
fsubp
xor
fucom
push
jge
jne
fidivrl
sub
loope
andb
pushl
mov
push
leave
mov
xchg
cld
dec
sti
cvtps2pd
and
fucomi
push
test
or
add
inc
pop
std
fisubrs
js
cmp
jno
int3
mov
or
mov
pop
mov
mov
rorb
fisubs
and
ret
jnp
or
push
push
jge
mov
lock
imul
mov
fs
inc
inc
add
jmp
popf
aam
fisubl
push
jecxz
fmulp
dec
xor
lods
pop
out
or
and
inc
add
fnstenv
repz
lods
jb
loopne
and
inc
popf
add
jnp
das
inc
push
inc
lret
lock
or
push
mov
add
push
std
in
mov
ja
dec
pop
cmp
test
lret
adc
pop
push
mov
aaa
and
aaa
sbb
sub
add
pop
mov
xor
mov
test
jno
fldl
sbb
shrb
sub
repz
mov
cmc
dec
dec
aaa
leave
in
fistpl
pusha
pop
xor
adc
xor
mov
scas
dec
iret
xchg
addl
scas
jp
cmp
jl
rcrl
loop
cmp
aas
nop
fwait
push
dec
js
push
mov
lea
mov
into
fs
adc
xor
sub
push
fidivrs
push
movb
cmc
mov
scas
shlb
int3
mov
inc
xor
jmp
movsb
mov
fadd
sub
jmp
loopne
cmp
cs
add
adcb
lock
push
push
std
stc
mov
movl
jge
dec
jbe
xchg
out
inc
stos
cld
mov
pop
fwait
mov
mov
cmp
mov
push
jp
fildll
subb
and
loop
rolb
fidivl
out
pop
jne
cmp
das
lds
icebp
enter
arpl
jae
pop
or
pushf
daa
fwait
aam
inc
fildl
lret
test
mov
ficoms
xor
cmp
adc
ds
mov
int
mov
mov
mov
aam
sub
or
push
xchg
ds
dec
and
cmpsl
rolb
jecxz
jae
aas
adc
nop
xchg
add
loope
sub
loopne
push
fistl
mov
jnp
adc
fiaddl
sarb
dec
jg
filds
adc
cmp
pop
adc
inc
mov
xor
into
nop
repz
fs
outsl
pushl
fldenv
leave
xor
sub
repnz
fwait
sbb
or
mov
pushf
nop
push
or
mov
cmpsl
in
data16
mov
pop
inc
xor
push
shrl
pop
jp
data16
push
mov
jmp
inc
ret
lret
mulb
addl
or
scas
stos
dec
outsb
mov
addr16
pop
je
js
xchg
cmpsb
cmpxchg
mov
add
ljmp
inc
lock
cld
imul
mov
add
rolb
leave
pop
nop
mov
cmpsl
cmp
ds
pop
push
pop
stos
cmc
and
cltd
mov
lahf
lea
push
loope
in
or
mov
aas
subl
and
pushf
aam
mov
sbb
es
stos
out
dec
out
xor
aam
scas
call
shl
sbb
movaps
jb
in
aas
shlb
jecxz
repz
dec
icebp
out
mov
hlt
or
ljmp
mov
outsb
dec
rorl
mov
push
xchg
cmc
imul
lds
sub
int3
into
sbbb
les
or
mov
dec
js
mov
std
stc
sbbb
sti
shll
mov
jae
filds
or
mov
stos
add
int3
aad
scas
or
out
or
es
lock
mov
clc
lahf
push
mov
add
sbb
inc
pop
outsl
jg
sub
cmp
mov
cs
mov
ja
xor
sahf
sub
cmp
in
loop
cmp
add
sub
mov
sbb
xchg
imull
xchg
sbb
lea
lret
or
adc
jmp
leave
sub
push
call
imul
test
pop
xor
mov
adc
add
test
ss
push
sub
pop
or
xor
outsb
pop
dec
mov
pop
sbb
mov
push
std
loope
xor
ljmp
inc
out
inc
stos
hlt
add
sub
jl
flds
mov
pop
pop
popa
push
mov
push
hlt
mov
sbb
jo
xchg
loopne
mov
xchg
jbe
jns
mov
jnp
stos
mov
pop
iret
mov
mov
movsl
rcl
cmpsl
mov
xchg
fstps
and
fldpi
ret
cld
lock
fadds
xchg
mov
cmc
mov
cltd
cmp
add
ss
shrl
or
add
xor
fcoml
aaa
and
arpl
shlb
aad
fwait
mov
inc
cs
int3
rol
sahf
ds
dec
insl
outsb
shll
mov
int
or
xor
dec
aaa
xchg
rcrl
ljmp
and
inc
imul
les
aaa
pop
lret
test
mov
test
mov
icebp
aam
sub
push
les
lret
inc
andb
dec
mov
xchg
in
je
mov
insl
popf
pop
daa
mov
lock
das
sbb
iret
mov
xchg
pop
push
mov
hlt
adc
out
jbe
pop
mov
addr16
mov
addr16
push
ljmp
ljmp
inc
sbb
data16
in
push
hlt
pushf
jl
mov
aas
dec
bound
clc
ficompl
loope
addr16
mov
lea
push
ret
js
push
loope
mov
lods
test
dec
imul
mov
inc
clc
mov
xor
pop
add
push
outsl
leave
repz
pop
stos
sub
cltd
pop
add
push
jge,pn
lcall
in
out
inc
in
add
cmc
and
mov
jl
shrb
adc
jmp
lcall
cmpsb
jb
dec
mov
shlb
movsl
aad
cmp
xchg
inc
in
lcall
out
or
mov
in
out
pop
rcrl
nop
jo
ss
das
lds
sub
push
gs
aam
adc
icebp
jne
inc
sub
mov
in
fldcw
int3
inc
loopne
dec
pop
fwait
lea
jle
pop
inc
test
imul
pop
inc
pop
rclb
xchg
mov
jno
lods
and
jmp
int3
sub
pop
icebp
loopne
cmc
jl
mov
push
repz
shrb
sub
fs
cmpsb
icebp
cmpsl
mov
ret
shlb
das
out
cld
shlb
dec
pop
aam
ret
mov
xor
int
loopne
sub
aam
es
xor
mov
mov
dec
add
push
push
or
xchg
sbb
xchg
xchg
adc
add
mov
aad
daa
inc
add
jno
push
or
aam
bound
adc
mov
dec
xchg
jp
add
sbbl
cmpsl
xchg
lea
mov
stos
sbb
push
mov
jmp
movsl
into
pop
es
and
test
inc
nop
mov
xchg
sub
mov
jb
fisubs
mov
push
lret
loop
adc
sbb
clc
lods
dec
test
add
adc
pushf
jecxz
repz
repz
push
cmpsl
mov
movsl
int
insb
aaa
insb
adc
xchg
mov
sahf
cmp
inc
mov
lahf
mov
xchg
stc
sbb
mov
xchg
incb
ret
add
cli
repnz
mov
add
fistpll
inc
mov
divb
mov
out
je
call
pop
xor
mov
sbb
dec
sub
mov
gs
ljmp
cwtl
jg
mov
sbb
outsl
test
sbb
add
mov
inc
mov
cmp
push
addl
mov
inc
orl
xchg
pop
shlb
fs
popf
mov
sbb
pop
mov
add
sub
test
jno
push
xchg
cmp
cli
aam
cmpsb
and
fidivl
pop
xchg
push
mov
push
mov
pop
fidivrs
sbb
sbb
mov
mov
adc
add
cmp
dec
orl
leave
mov
pushf
sbb
js
xchg
add
sub
or
les
mov
mov
pop
sbb
add
jb
inc
mov
lods
insb
mov
sbb
add
cmpsl
sub
sub
mov
mov
test
test
xor
add
jno
add
mov
jo
dec
cltd
sar
cmpsl
popf
sbb
dec
cmpxchg
xchg
adc
adc
ss
dec
sarb
fisttpll
std
xor
push
sbb
mov
mov
cmp
imul
enter
sub
mov
mov
scas
mov
repnz
adc
dec
sub
flds
loopne
cmp
mov
into
inc
out
sahf
fstp
mov
call
pusha
les
fbstp
mov
jno
fisttps
dec
fistl
mov
cmp
push
lods
mov
cmp
mov
mov
xchg
jbe
bound
push
mov
push
mov
xchg
adc
cltd
push
pusha
adc
pop
mov
ja
cmp
xor
jmp
cmp
repz
mov
out
mov
mov
icebp
subl
arpl
in
movsl
pushf
imul
mov
lret
pop
fstps
sbb
dec
out
andl
push
leave
out
ds
gs
cwtl
fwait
aaa
adc
sar
shrb
dec
inc
sarl
sub
jae
aas
pop
fsub
aaa
fidivrs
arpl
fiaddl
icebp
mov
cmc
inc
imul
and
test
in
xchg
pop
jge
pop
mov
insb
push
xor
and
int3
shrb
mov
popa
mov
outsb
dec
call
sub
sbb
scas
mov
in
mov
adc
dec
xchg
aaa
mov
fldlg2
in
jle
rol
xlat
je
jae
mov
pop
ficoml
pop
add
adc
mov
mov
pop
je
incb
jecxz
push
jnp
pop
mov
pop
aam
and
cli
add
pop
xor
cmp
push
xor
sarl
aam
xor
and
mov
or
insl
sbb
inc
mov
je
lea
testb
xchg
pop
sbb
inc
jecxz
gs
divb
sbb
in
in
sub
int
add
sbb
add
mov
shr
ljmp
test
pop
cmp
push
pop
add
jge
scas
mov
test
sbb
popf
sarb
pop
addr16
mov
pop
inc
sub
pop
insb
fimuls
scas
cmp
les
jg
mov
orb
inc
scas
xchg
out
iret
sbb
xchg
dec
out
inc
sub
push
stos
pop
sbb
cmc
js
dec
jg
pop
js
mov
aas
fstpl
cmp
lcall
jl
aas
lret
push
add
push
in
lods
dec
pop
mov
lods
lock
push
push
movsl
in
adc
adc
mov
aad
dec
gs
xchg
jne
jns
in
mov
mov
lret
movsb
dec
push
pop
adc
jne
imul
jg
add
inc
scas
mov
adc
mov
mov
or
in
rolb
popa
cmpsl
push
scas
ss
mov
adc
fwait
lahf
hlt
pusha
lcall
leave
xchg
sbb
fisubrs
xchg
sbb
std
cmc
mov
push
pop
not
out
sub
or
fs
je
jbe
or
cli
notb
jne
mov
aas
cld
add
test
mov
int
mov
jns
sub
clc
push
rcrl
pop
jae
jecxz
and
jae
sar
push
std
add
pop
push
mov
jbe
sarl
mov
dec
clc
xchg
sub
add
jmp
pushf
xchg
out
mov
scas
fsubl
jno
sub
imulb
inc
cmpb
lods
in
icebp
out
and
out
pop
mov
imul
daa
out
aas
add
in
std
shrl
test
add
push
cld
or
push
je
and
clc
fs
out
push
sbb
addr16
in
jle
xor
cmc
lods
sbb
mov
and
mov
jo
pop
fwait
dec
push
pop
in
push
rcrb
mov
jb
and
push
sbb
add
xchg
stc
insb
xchg
inc
js
ret
outsl
stos
push
shlb
dec
addr16
and
sub
jmp
dec
rclb
cmp
shr
inc
sub
lahf
push
and
arpl
aaa
shl
inc
xor
jns
mulb
mov
int
dec
or
cmp
push
scas
xor
jae
sub
cwtl
clc
mov
rcrl
iret
loopne,pn
icebp
cmpsb
lods
repnz
lret
sbb
clc
add
inc
hlt
aam
sbb
ljmp
cld
cwtl
or
fiadds
repz
and
popf
adc
cmovs
dec
imul
lahf
xchg
sarl
xchg
and
xor
xchg
test
movsb
jns
add
dec
in
lods
fstpt
and
loopne
add
lods
roll
lcall
nop
or
aaa
dec
mov
push
jne
je
outsb
jno
leave
clc
fdivrp
out
cltd
jp
fstpl
rcrb
add
mov
dec
int
pop
jb
cmp
cmpsb
cltd
jle
add
mov
or
aam
jo
push
or
pop
push
push
or
mov
inc
addb
and
xor
mov
mov
and
add
fcomp
clc
roll
out
adc
stos
shlb
insb
rcll
fnstenv
inc
loop
xor
nop
daa
pop
sub
jmp
and
or
sbb
push
xchg
pushfw
push
mov
fstpt
add
addl
gs
fdivs
mov
jmp
stos
xchg
sbb
xor
pop
xchg
cmpsl
mov
std
xchg
scas
or
mov
inc
mov
xchg
std
lea
inc
xorb
inc
mov
dec
sub
call
dec
rcrb
dec
jae
in
and
jmp
std
loop
loope
aaa
jns
pop
jnp
lock
or
int
out
jecxz
bound
dec
mov
mov
in
ror
loopne
ret
sub
sbb
inc
mov
xchg
je
sbbl
mov
sbb
sub
push
push
es
xor
sbb
jno
incl
and
ss
push
jmp
xor
lods
inc
push
aam
pop
mov
cmp
leave
pop
xchg
movsl
sbb
negl
sub
scas
inc
mov
jmp
jo
xor
test
mov
push
adc
loope
sub
inc
int3
data16
ds
add
mov
out
nop
out
xchg
frstor
mov
insb
clc
cli
push
or
loopne
out
xor
in
jae
test
loop
cmp
test
rorb
xor
or
mov
cmpsl
push
add
xchg
gs
push
cltd
sahf
jbe
rcrl
loop
mov
movsl
push
sbb
jecxz
push
dec
les
sbb
sub
sub
inc
arpl
in
dec
mov
call
fucomi
pop
add
jge
ja
jp
fs
test
aam
fmull
icebp
pop
mov
jle
jmp
hlt
aad
inc
inc
lea
sub
das
imul
test
stos
fdiv
ficompl
das
fcmovbe
rcrb
bound
jnp,pt
mov
repz
stos
popf
into
push
lret
cmpsb
dec
iret
mov
pop
idiv
add
fsub
pop
lds
sbb
js
pop
dec
add
jge
mov
loop
ds
fcoms
mov
jbe
xor
push
shlb
adc
jp
jo
or
pop
rcl
or
pop
pop
mov
cmc
leave
mov
stos
pushl
pop
std
xor
in
cmpsb
xlat
sbbl
push
movl
outsl
adc
push
cmpl
dec
cmp
fsts
pushf
mov
lds
shl
inc
int
les
repz
aaa
repnz
jae
repnz
sbb
inc
std
xchg
push
sbb
sbb
lods
std
jbe
or
imulb
mov
mov
add
loopne
push
daa
out
cmc
lods
or
jecxz
adc
sub
dec
int3
js
and
jns
movsl
sbb
std
push
sbb
pop
insl
sub
add
rorb
mov
xor
lret
decl
loop
or
push
out
popa
cmc
imul
jns
incb
xchg
sbb
pop
jge
aam
sti
or
mov
stc
adc
mov
stc
out
mov
loop
lods
ret
insb
sbb
stos
and
lcall
cmp
xchg
pusha
push
add
popa
mov
pop
mov
fiaddl
shl
cmpsb
xchg
jp
dec
shlb
add
add
data16
and
sub
or
cmp
cltd
lret
popf
mov
insl
xchg
rcrb
inc
addb
int3
mov
scas
pop
test
mov
xchg
popa
sti
or
in
xlat
insl
out
pop
aam
inc
ret
jno
mov
sub
jg
jmp
push
fstps
mov
out
add
pushf
aam
das
imul
in
xlat
mov
sbb
mov
andb
arpl
push
inc
gs
fmuls
stos
imul
mov
lret
ss
pop
jnp
cmp
sub
jg
and
dec
xchg
xchg
jle
sub
addb
sti
adc
leave
hlt
ja
dec
push
cmp
pop
cmp
popf
push
mov
int
jae
or
adc
and
sahf
fiadds
cmp
inc
adc
push
aam
or
shrb
subb
rcrb
xor
xchg
data16
imul
jle
inc
jb
shrb
fdiv
cmc
sbb
pop
mov
fcoms
xlat
loop
push
and
jmp
xor
out
sbb
jge
xchg
inc
fsts
sahf
popf
or
adc
xchg
adc
rcrl
test
xor
mov
aaa
out
in
mov
shrl
lret
mov
jp
add
cmpsb
loopne
and
out
sub
les
rcll
popa
pop
fstpt
jge
adc
aam
mov
and
lcall
add
insb
hlt
push
movsb
out
adc
push
in
mov
adc
jecxz
inc
cwtl
leave
mov
lods
xchg
cmp
sbb
push
popf
and
out
add
lcall
xor
push
fidivs
xor
xor
sbb
xor
add
cmp
or
fisttpl
mov
ss
ret
out
and
mov
inc
movsl
xchg
and
fxch
dec
es
ja
xchg
stos
add
loopne
mov
jp
adc
dec
out
dec
push
call
adc
out
in
lahf
or
das
outsl
sub
push
mov
pushf
sub
in
lock
fdivrs
les
lret
sti
sbb
add
rcll
repz
test
dec
sbb
cmp
stos
lods
pop
cwtl
or
test
into
jp
add
jne
jmp
or
scas
mov
dec
dec
popa
cltd
aam
mov
jns
add
mov
jg
js
sub
xchg
xchg
dec
sbb
xor
sub
sub
pop
les
mov
je
jo
xchg
sbb
dec
les
pop
into
inc
xchg
adc
sbb
cli
aad
push
push
add
cmp
lds
imul
cltd
and
inc
sub
insl
sbb
stos
push
pop
adc
jle
ret
push
sbb
xor
es
popa
xchg
adc
pop
adc
sahf
xchg
adc
fisubl
jno
pusha
testl
hlt
mov
stc
mov
mov
bound
jecxz
cmp
popf
movsl
ret
cltd
scas
jle
sub
lods
push
ja
and
and
xor
enter
rol
add
pop
xchg
out
std
fwait
and
mov
mov
and
jo
sbb
stc
in
movsl
mov
cmp
into
mov
hlt
jno
xchg
fmull
xchg
pushf
mov
rcl
insl
repnz
imul
lock
fcomps
push
std
mov
xor
inc
arpl
jb
scas
mov
mul
in
mov
xor
sbb
popa
out
iret
outsl
lcall
mov
iret
sbb
inc
daa
and
rclb
and
outsl
cmp
cmpsb
xchg
sahf
sbb
pop
stos
push
inc
scas
scas
arpl
jl
fcoms
and
in
pop
and
pop
iret
push
cmp
add
fdivr
pop
aas
pop
cmp
sub
and
sbb
paddsw
aam
xchg
nop
mov
cwtl
xor
mov
lock
jbe
movsl
fstpl
jp
push
xor
rcr
arpl
xchg
repz
out
jne
mov
mov
sbb
inc
push
dec
and
sbb
push
jns
inc
rclb
mov
xchg
or
frstor
jne
mov
cmp
pop
cmp
pop
mov
inc
addr16
into
or
push
dec
and
adc
push
push
and
and
fcoml
cmc
dec
aam
sti
aam
call
inc
push
cmp
mov
sbb
out
dec
jmp
push
or
xchg
xlat
pop
pop
mov
fwait
adc
aam
outsb
js
xor
xlat
in
push
add
jae
push
push
mov
in
mov
push
insb
sahf
adc
pop
mov
pop
xchg
adc
pop
out
add
enter
out
test
repnz
jp
mov
cmp
add
in
and
sub
mov
pop
dec
cmpsb
inc
into
jl
lret
js
inc
sti
mov
dec
hlt
pushf
jae
xchg
shlb
imul
dec
int3
push
jge
or
fdivrp
repnz
dec
repnz
lock
xor
inc
adc
lock
lahf
mov
pop
es
dec
mov
lret
push
cmpsl
testl
bound
push
cmc
pop
inc
lea
pop
inc
les
adc
jbe
iret
orl
xlat
xchg
pop
mov
push
testl
xchg
jle
jle
popa
in
fnstcw
xchg
lcall
and
test
adc
mov
fists
pop
cmp
in
jnp
adc
jb
rolb
sub
lahf
cmp
sti
cmpsb
into
push
cltd
xchg
xor
in
repz
aaa
jne
xchg
stc
xlat
jg
dec
scas
mov
cmp
cmpsb
cmp
push
adc
in
andb
les
cli
mov
adc
and
ds
test
adc
xor
fisubs
ja
and
jbe
push
in
ss
movsl
into
xchg
push
imul
sub
sarl
daa
pusha
imul
pop
dec
or
gs
cmp
outsw
popa
shr
push
xor
data16
test
sahf
sbb
and
push
pop
testb
mov
ret
mov
fldl
mov
faddl
xor
xchg
andb
sbb
mov
adc
mov
out
pop
inc
xchg
in
and
test
stos
ret
in
stos
fcos
test
call
out
jb
dec
dec
je
sti
mov
stos
out
aaa
mov
imul
sub
add
pop
or
pop
jle
daa
cli
addr16
push
std
and
mov
das
loop
mov
xchg
in
iret
xor
cltd
js
aas
mov
fldcw
xor
mov
mov
xlat
js
cmpsb
into
in
sbb
ret
mov
adc
jo
jbe
mov
jne
push
jno
xchg
or
mov
or
add
push
xor
mov
mov
xor
clc
jae
push
push
push
sbb
jmp
add
sbb
fidivs
aad
test
push
imul
dec
les
xor
mov
push
lock
push
int3
out
sarl
int
call
or
mov
xor
inc
rcrb
xchg
lea
in
mov
mov
mov
or
arpl
gs
push
add
stos
inc
mov
push
cmp
lahf
rcrb
mov
and
aaa
mov
leave
jo
push
dec
gs
imul
mov
mov
jb
push
mov
outsb
jo
push
mov
jecxz
lahf
ss
std
repnz
fsubl
sub
mov
adc
mov
jp
lret
idivb
or
daa
loope
dec
pop
out
jne
add
adc
mov
ret
and
pop
xor
mov
inc
mov
ret
and
cmpsl
loop
xlat
mov
out
cmp
cmp
mov
scas
daa
stos
jae
cmpsb
xchg
repnz
push
dec
clc
fnstenv
das
aad
mov
test
lcall
outsl
sub
jnp
and
imul
arpl
addl
aaa
inc
dec
in
into
ret
ret
xor
sbb
mov
scas
mov
loope
rolb
outsl
push
bound
sub
push
xchg
test
leave
mov
nop
out
in
jmp
sbb
adc
jecxz
daa
cld
jo
pusha
add
mov
je
mov
stos
xlat
xlat
bound
lret
ret
pop
test
fstl
xchg
in
popa
adc
mov
xchg
mov
icebp
and
test
pusha
gs
jns
push
cmp
cwtl
dec
adcb
add
loopne
das
aam
sub
std
xor
shll
fstps
dec
mov
fldcw
adc
iret
repnz
pop
add
lea
or
sbb
pushf
cmp
test
add
sub
xor
shl
adc
sbb
stc
push
mov
nop
cmc
lea
xlat
int
sbb
sub
fwait
sbbl
mov
test
stos
rcl
or
push
and
push
cwtl
mov
fmul
es
xchg
cmp
lods
xor
push
into
test
mov
pop
lods
mov
pop
fs
mov
out
in
mov
add
mov
mov
sahf
cltd
mov
out
repz
daa
mov
leave
lds
xor
adc
sahf
mov
add
mov
jmp
xchg
enter
push
mov
xchg
mov
shll
lret
bound
insl
ficomps
push
andb
jno
sbb
out
outsb
or
insb
lods
in
sub
xor
mov
dec
push
pop
inc
cld
in
leave
push
jns
mov
mov
imul
lods
outsb
push
daa
fnstsw
inc
mov
sti
xchg
fsub
mov
popa
adc
jno
mov
cmp
cmpsb
popa
or
inc
mov
shr
mov
push
jl
xchg
frstor
pop
mov
mov
ljmp
or
jl
xor
cltd
jnp
inc
shll
das
dec
lahf
inc
fisttpll
mov
mov
into
lods
idiv
push
sub
loope
add
shll
bswap
scas
jo
push
and
mov
leave
pop
pop
into
pop
cmp
aad
push
or
stos
insl
sbb
mov
leave
cwtl
cwtl
jo
enter
xchg
push
sti
jl
je
roll
sub
jnp
mov
in
push
sbb
and
and
mov
leave
mov
bound
js
mov
mov
test
mov
and
jmp
or
and
nop
xchg
cmp
mov
push
ss
lretw
rorl
dec
and
mov
jg
andl
mov
adc
lret
sub
aad
cmpsb
push
sub
repz
mov
xchg
push
push
push
in
push
or
jecxz
nop
mov
mov
fcomi
fidivrl
cmp
xchg
mov
xchg
mov
adc
cli
mov
mov
test
sti
push
push
cmp
inc
sbb
fisubl
xlat
das
and
sahf
mov
imul
or
xor
mov
mov
aas
push
sub
cmpb
movsl
mov
out
aam
inc
lds
insb
add
mov
es
sub
xchg
fwait
jle
lcall
cmp
ljmpw
lea
outsb
mov
clc
adc
inc
call
sbb
arpl
mov
shll
rclb
stc
mov
int3
ds
cs
mov
jmp
subl
mov
outsl
test
aad
pop
mov
mov
sbb
mov
mov
mov
test
repz
jb
dec
lds
jbe
mov
rcll
imul
cs
mov
and
cs
jnp
xor
aaa
pop
mov
insb
jbe
mov
filds
inc
push
push
loope
insl
inc
inc
mov
popa
add
jne
jb
mov
aaa
sbb
and
pop
aas
outsl
mov
adc
lea
xlat
leave
cmp
pop
in
jl
sub
into
adc
mov
pop
enter
insb
add
xchg
cltd
lods
jae
xchg
lcall
xor
add
andl
cmpsb
fistpl
push
or
jno
outsl
mov
mov
add
push
test
pop
and
cmpsl
jbe
mov
jb
add
xor
shl
cmc
pop
movsl
fcmovbe
enter
pop
push
cmpsb
or
mov
psraw
push
sub
lea
clc
shlb
xor
and
arpl
push
into
xchg
out
dec
sub
into
xor
adc
adc
ss
push
sti
sbb
mov
and
and
lahf
stos
int
xchg
incl
loop
mov
jp
stc
iret
xchg
loopne
jb
sti
mov
arpl
and
call
push
out
sub
shlb
je
popa
nop
sub
add
adc
lret
xor
mov
aad
call
cld
xchg
popf
stos
cld
lret
repnz
daa
inc
outsl
sbb
hlt
pop
or
push
scas
mov
jmp
aaa
cltd
clc
add
adc
push
ljmp
jo
or
sahf
inc
xor
pushf
sbb
jl
dec
inc
cmpsl
adc
jne
daa
fbstp
shr
loop
dec
or
jl
addl
pop
lahf
xchg
inc
mov
xchg
bound
cmpl
pop
dec
or
leave
test
addr16
push
push
ret
cmp
stos
sahf
xlat
mov
aam
hlt
xlat
movsb
aas
mov
jl
shll
hlt
in
xor
shll
inc
out
test
lds
jno
leave
push
stos
out
sbb
daa
add
xlat
sub
mov
faddp
xor
jnp
xchg
in
shrl
into
fcompl
das
add
call
bound
hlt
jne
testl
dec
js
imul
je
jge
lock
and
xchg
fdivr
mov
cld
mov
and
and
xor
xor
xchg
gs
mov
or
data16
lock
xchg
xchg
add
leave
push
or
push
mov
ljmp
mov
cmp
in
aam
push
and
push
scas
xchg
mov
push
es
jno
xor
fdiv
xor
in
dec
es
dec
cmp
lea
add
mov
xor
sub
inc
inc
xchg
aam
mov
daa
fnstenv
repnz
adc
or
aas
sti
call
inc
inc
std
xor
out
shrb
rcrb
arpl
nop
int3
sahf
xor
adc
rep
adc
shrl
mov
inc
mov
jne
push
push
pop
loop
dec
lret
lea
xchg
cmp
adc
mov
push
insl
ret
mov
in
inc
loopne
pushf
out
movsl
mov
jno
jecxz
xchg
daa
sbb
pop
int
fs
jl
mov
shrb
adc
pop
lahf
rclb
cmpsb
adc
xchg
mov
gs
stos
jecxz
out
sbb
and
push
sbb
mov
mov
int
cmp
insb
jno
pop
scas
jle
mov
xchg
xchg
xor
sahf
fs
nop
cs
mov
and
rolb
cmp
cmpsb
jecxz
iret
or
cltd
imul
or
fisubrl
testl
push
dec
adc
cmp
sub
and
mov
xchg
js
int
testl
orb
and
cwtl
lret
xor
lcall
out
inc
testl
adc
pop
cli
xor
mov
sub
cmp
in
iret
ss
or
push
inc
fiaddl
repnz
fwait
jg
and
hlt
inc
inc
adc
punpckhbw
divb
xchg
imul
adc
mov
fcoml
and
push
popa
aaa
dec
cli
xchg
push
aam
jbe
cmpl
jmp
pushf
jmp
jmp
loop
adc
and
and
or
xor
lods
or
dec
dec
sub
mov
in
and
repnz
or
or
out
mov
mov
je
das
push
mov
sbb
inc
adc
fs
mov
ret
mov
mov
cmpsb
inc
inc
stc
movb
test
and
adc
push
stc
push
xor
shlb
push
add
mov
push
aad
add
sub
cmp
push
pop
dec
ret
sub
pusha
mov
cli
sahf
pop
mov
xchg
insl
mov
adcb
ds
aam
rclb
pop
stos
sub
push
mov
loope
aaa
lods
jae
lock
push
mov
std
int3
daa
jecxz
sub
invd
inc
into
xchg
stos
popa
popf
or
std
out
cltd
mov
shlb
add
dec
cmp
mov
js
add
add
add
mov
inc
sahf
aad
popa
cmp
test
arpl
push
or
nop
andb
int3
decb
out
iret
arpl
lahf
xchg
cwtl
push
aad
out
add
pop
inc
lds
lcall
in
cmp
int
testb
aas
dec
aam
push
shrb
aam
pop
pushf
inc
push
mov
push
or
fldcw
adc
pop
push
dec
lods
aam
loope
cs
scas
or
xor
push
lcall
xchg
dec
cwtl
test
add
pop
push
loope
sub
sbb
push
jae
ret
mov
jecxz
iret
shll
mov
jo
fadds
mov
mov
pop
jns
add
or
insb
sarl
pop
fs
cmpsl
mov
movsb
mov
mov
into
rolb
jb
test
loop
addr16
sbb
pop
out
xorb
or
dec
adc
inc
push
pushf
ja
jne
aad
and
call
ss
or
sti
xchg
leave
and
or
pop
pop
loopne
xor
fstpt
add
xchg
or
mov
mov
push
inc
fisubl
sbb
shll
lods
fildl
sbb
push
mov
loope
jo
mul
push
repnz
pushf
pop
mov
push
mov
mov
cmp
mov
outsl
cmp
pop
push
or
jae
add
adc
cmovbe
jns
aam
inc
movsl
sbb
jo
in
jb
movl
cmpsl
mov
orb
in
xchg
lds
mov
lods
out
mov
add
outsb
daa
out
fbld
sub
je
mov
insb
dec
push
mov
pusha
adc
ret
lods
repz
push
dec
addr16
popf
fmuls
mov
jno
es
cmp
sbb
pop
push
cmpsl
insl
imul
mov
push
nop
cmp
mov
fs
push
sahf
insb
clc
cwtl
dec
in
jle
pop
sbb
xchg
pop
push
movsb
mov
and
test
push
ss
pop
mov
fstpt
mov
jae
cmp
popa
pop
out
pop
mov
jae
adcb
lods
and
mov
xchg
mov
mov
sub
push
neg
cld
push
enter
imul
call
cmpsb
xor
push
push
repz
popf
adc
mov
adc
out
out
jo
sub
push
int
push
cwtl
or
add
push
and
out
push
push
add
jne
sti
filds
xchg
nop
jmp
pop
mov
xor
das
mov
icebp
testl
and
pop
mov
jae
imul
dec
push
sub
or
ret
cmp
sub
fiadds
icebp
jne
rclb
dec
out
pop
lret
jne
push
adc
stos
repnz
push
jnp
sub
fmul
push
inc
jo
cltd
orl
popf
cmpsb
jmp
imul
add
sub
cwtl
fcmovnb
pop
pop
popa
in
fwait
popf
loopne
movsl
mov
int3
iret
xor
insl
je
lea
loopne
ja
mov
outsb
push
sub
cmp
and
loop
mov
or
and
cs
js
mov
xor
pop
in
push
mov
in
add
aam
rcrl
insl
jns
xchg
cs
cld
mov
mov
sub
std
add
stos
iret
xchg
andb
lahf
pop
hlt
mov
jl
or
mulb
mov
xchg
adc
push
add
add
mov
or
cmpsb
adc
and
lods
mov
gs
inc
cmp
adc
mov
outsb
xchg
stos
ja
out
mov
sbb
sbb
dec
cltd
lea
int3
push
push
pop
sbbb
insb
dec
pop
pushf
gs
repz
rcr
jo
leave
add
test
imul
jbe
sbb
inc
cltd
rcrb
or
mov
or
xchg
xor
fdivrl
mov
iret
fcomps
and
out
mov
in
nop
rcrb
leave
outsb
fsts
in
cmc
gs
push
pop
push
sub
push
mov
repnz
std
cmp
das
mov
imull
push
sbbb
and
gs
push
insl
popf
pop
mov
or
aaa
dec
sub
jmp
mov
sub
mov
movsl
test
adc
pop
lahf
xchg
aaa
jecxz
cwtl
repnz
or
ss
jb
loop
clc
imul
xchg
fsts
sub
mov
mov
out
xor
rorl
addb
nop
idivb
jg
sub
divl
cmp
mov
mov
aas
mov
jbe
loope
popf
ret
insb
push
cmp
inc
push
add
es
dec
int
fcomps
inc
fwait
mov
mov
outsb
or
mov
adc
clc
insl
or
or
imul
or
imul
sub
andl
int
push
xchg
jl
fwait
adc
movsl
div
cltd
inc
test
jae
and
jmp
push
shrb
loope
push
xchg
pop
loope
mov
outsb
mov
mov
loopne
stc
insb
xchg
sbb
xchg
xchg
mov
mov
lds
cmpsb
mov
pop
daa
test
in
ljmp
dec
mov
and
jae
out
jne
sub
dec
inc
cli
sbb
cs
imul
cmp
movsb
daa
mov
or
lock
lods
mov
push
fisubs
xor
dec
lahf
neg
jbe
stos
sbb
pop
mull
xor
add
call
mov
divl
inc
pop
fwait
loopne
pop
loop
jnp
aam
xor
pop
ficoml
enter
add
cmp
lods
lods
icebp
pop
hlt
add
xchg
aam
lock
fcmovnb
adc
test
push
ja
mov
push
sti
jno
loope
pmuludq
xlat
sbb
cli
leave
lods
rcl
je
mov
fcmovnbe
jle
cli
sub
or
loop
push
out
push
sbb
jno
gs
je
mull
aam
out
fnstcw
mov
add
loope
inc
mov
dec
addr16
icebp
mov
cmp
jle
outsl
inc
push
fsubr
test
xor
mov
xlat
fdivs
out
xor
and
fsub
xor
xlat
daa
mov
pop
or
out
imul
sub
mov
imul
add
push
xchg
std
insb
adc
pop
arpl
or
pop
mov
lds
ret
icebp
xchg
cltd
out
adc
pop
cmp
inc
or
adc
test
mov
lods
test
adc
sbb
push
les
aad
xor
jmp
test
or
stos
pop
dec
jge
or
sub
mov
add
inc
clc
dec
push
jle
sahf
stos
add
repz
sbb
jg
cmp
lahf
mov
mov
clc
pop
arpl
out
out
xlat
push
movsl
xlat
andb
jp
sbb
lcall
data16
insl
cltd
ljmp
lds
mov
fdivrs
or
push
inc
xchg
fs
loopnew
out
adc
xchg
and
lds
loop
scas
mov
int3
popa
or
into
inc
add
repnz
sub
mov
outsb
addb
xchg
jg
cs
push
adc
inc
dec
inc
push
cmp
mov
imul
inc
movsl
mov
sbb
aam
sbb
push
xor
add
fs
aam
mov
mov
outsl
les
neg
and
lret
mov
push
aad
dec
inc
pop
mov
adc
ljmp
and
fistpll
in
jecxz
cmpsl
push
mov
add
les
imull
pop
fisubrl
inc
and
cs
push
addr16
cmpsl
adc
pop
xchg
mov
scas
test
or
mov
cmp
mov
pop
faddl
jno
addr16
adc
xchg
rolb
cmp
push
push
dec
cmp
ret
xchg
lds
sbb
lods
pop
add
loop
ljmp
shll
pusha
inc
jl
sahf
hlt
scas
imul
adc
cwtl
faddl
push
sub
sbb
inc
aad
xchg
mov
mov
adc
ds
xor
pop
adc
fwait
test
or
pop
js
imul
dec
movb
cmp
xchg
test
ret
pop
pop
out
ret
arpl
movsb
adc
out
cmpl
pushf
daa
push
outsb
push
repnz
and
jo
jae
pushw
mov
cs
repnz
jae
sub
lds
fistps
jmp
int3
pop
or
sbb
lods
sbb
mov
out
inc
loopne
xchg
shl
sarl
inc
or
pop
lcall
aaa
adc
mov
cld
mov
xchg
clc
mov
mov
ds
dec
inc
fadd
lret
cs
leave
or
loopne
test
ficompl
cwtl
dec
push
or
in
decb
mov
xor
jl
lds
iret
sub
rorb
dec
ja
mov
add
in
mov
callw
rclb
push
ljmp
push
repz
lcall
addr16
or
ja
imull
data16
adc
movups
inc
pop
pop
icebp
iret
cld
das
push
sub
imul
mov
cmp
xchg
adc
cli
cmp
sub
mov
pop
call
or
stos
mov
sbb
and
loop
inc
dec
add
cld
icebp
lret
inc
aaa
inc
fmuls
xor
int3
pop
jg
subb
flds
mov
jno
roll
sbb
stc
mov
jle
sbb
push
insl
aaa
mov
xchg
sti
push
push
lcall
and
repz
mov
add
js
sub
cmpsl
sub
jge
sahf
xchg
ss
sarl
push
cs
ficoms
mov
sbbl
mov
shlb
xchg
cmp
ret
push
icebp
xchg
pusha
and
pop
inc
push
dec
stos
test
cwtl
movsl
stos
dec
fnstsw
cmc
inc
or
fwait
in
jo
mov
sbb
dec
push
xchg
lea
fwait
mov
lock
pop
test
fucomp
data16
bound
mov
push
aam
xor
xchg
outsl
cmp
mov
mov
pop
mov
cmp
inc
out
lods
cli
xor
or
sbb
sarl
outsl
outsl
fwait
fwait
mov
inc
test
xor
inc
std
negl
push
xor
mov
xchg
insb
jo
lea
ljmp
out
cmpsb
in
or
idivl
iret
lock
mov
inc
movaps
scas
gs
push
mov
stc
js
push
pushf
cld
bound
push
xchg
mov
lret
cmpsl
stos
pop
jp
sub
cltd
je
pop
mov
xchg
test
cmpsb
test
je
sbb
shrl
lods
mov
sub
inc
jno
jns
fstps
inc
sub
daa
popa
push
fldcw
cmpb
xor
inc
aam
aam
and
insl
mov
adc
leave
mov
push
mov
mov
adc
cmp
popf
aas
repz
mov
dec
xor
addr16
jbe
cmp
jecxz
jb
cmp
mov
adc
shr
mov
aam
cld
loop
mov
out
jle
bound
jmp
xchg
xor
mov
pop
and
jmp
add
xor
punpckldq
and
add
xor
push
movsb
fistpll
or
iret
mov
fisttpl
xchg
stos
fcomps
or
test
pop
arpl
out
mov
add
sub
enter
xchg
inc
adc
aas
cmp
dec
into
mov
lahf
fistpl
out
fwait
aas
push
push
inc
pop
dec
pop
inc
fwait
pop
pop
cmp
fimuls
push
iret
outsb
clc
pop
gs
jo
cmp
cmp
data16
out
outsb
adc
js
and
or
mov
mov
in
or
mov
dec
jns
mov
jae
lods
movsl
shlb
xchg
jecxz
scas
adc
jns
fcomps
push
sub
roll
adcl
sbb
add
xchg
inc
addr16
jnp
mov
sbb
divl
insb
insb
jo
dec
data16
pop
in
insb
outsb
mov
dec
in
dec
imul
addr16
sub
cmc
rclb
sbb
int
testl
es
cs
jp
test
pop
mov
or
mov
fidivrs
mov
mov
ljmp
push
out
mov
bound
inc
stos
xchg
xor
dec
fwait
insl
push
mov
cmp
bound
ss
inc
cvtdq2ps
sbb
mov
jmp
and
int3
xor
push
xor
cld
daa
push
jle
stc
and
mov
cmp
and
mov
sahf
fld
enter
ss
aam
rcr
push
sbb
mov
add
pop
adc
into
inc
sbb
mov
js
ret
add
adc
test
les
mov
andl
divb
cs
mov
pop
xor
into
pop
push
lds
mov
es
jp
out
jp
sbb
sbb
test
int3
add
push
aam
out
dec
int
push
inc
dec
push
inc
pop
aam
sub
inc
jb
jmp
sub
je
jp
jbe
mov
fwait
push
jo
pop
mov
in
jmp
rcr
andb
imul
loopne
mov
cmpb
cmp
xor
add
push
stc
aaa
and
mov
xlat
adc
mov
hlt
fcmovu
lea
cli
out
addb
arpl
sti
test
dec
fldl
lds
shll
out
fwait
inc
xor
stos
roll
test
and
jne
mov
inc
out
jle
into
or
movsb
insl
out
xor
pop
adc
push
iret
mov
vpunpckhwd
mov
or
xchg
scas
and
jecxz
out
pop
xor
sbb
dec
sub
loopne
cmp
mov
movsl
test
xchg
pop
xchg
adc
sarl
dec
xchg
pop
lods
xchg
ficoml
mov
pop
jne
pop
push
pop
test
add
ds
push
add
mov
xor
cwtl
mov
ret
dec
xor
ret
rcll
rorl
pop
stos
pop
push
dec
or
or
mov
mov
add
sub
push
add
mov
xor
div
mov
mov
cli
jmp
ds
scas
jle
hlt
dec
testb
aad
rorb
and
mov
jge
push
daa
and
pusha
xlat
or
out
je
cwtl
sti
sbb
lcall
repnz
mov
cld
pop
lret
aas
fucomp
or
lea
ds
les
dec
or
and
push
je
filds
add
inc
sbb
sbb
xchg
out
rclb
xorb
lock
fiadds
push
adc
add
jbe
cli
je
mov
adc
jge
ss
out
push
cmp
inc
mov
add
xchg
or
out
out
push
je
xchg
or
push
dec
into
mov
push
mov
pop
or
enter
or
jo
addl
sti
dec
shrl
and
mov
ja
dec
adc
daa
jb
sbb
outsl
adc
sub
dec
shll
aas
mov
cld
add
leave
in
cld
pop
rolb
sbb
mov
xor
and
push
aas
adc
jnp
jnp
xchg
into
mov
sahf
mov
lods
pop
test
ss
call
xlat
pop
mov
xor
test
fs
push
hlt
or
fdivl
inc
stos
dec
cmp
popa
cmpsl
add
sub
cmpsb
mov
or
xor
dec
and
sbb
dec
int3
or
pop
lods
and
fs
adc
in
xor
cltd
scas
gs
mov
shrb
mov
push
sub
int3
inc
sbb
addr16
std
outsl
mov
mov
jge
adc
mov
popa
sub
clc
repz
push
mov
xchg
mov
ss
push
lods
xchg
pop
notb
cmp
or
mov
mov
xchg
shr
mov
dec
sub
cmp
or
ss
pusha
mov
int
sbb
sti
shll
adc
out
pop
mov
push
mov
push
pop
sbb
rclb
xchg
adc
aad
mov
lret
hlt
xor
jecxz
arpl
xchg
or
adc
cli
cwtl
sub
mov
mov
iret
mov
lods
mov
jl
aaa
dec
adc
jae
leave
mov
sbb
rorb
daa
add
jp
mov
jecxz
sub
xchg
xchg
das
push
mov
fs
ds
dec
or
add
push
inc
ds
mov
cld
jmp
dec
pop
or
aas
mov
push
pop
adc
mov
ret
adc
cmp
and
dec
fidivl
xchg
arpl
inc
dec
add
cmp
jl
adcl
mov
rcr
cld
inc
cmpsl
call
adc
inc
cmp
test
fildll
lret
mov
sub
adc
js
cmp
sbb
loope
inc
push
sub
add
das
je
into
pop
lods
pop
xor
das
je
imul
adcl
test
cmp
mov
cmpsl
and
and
fidivrl
cmp
divl
pop
xchg
adc
jmp
jns
sbb
inc
jp
inc
and
xchg
add
dec
imul
lcall
jne
push
clc
pusha
aad
std
mov
push
pop
into
pop
daa
push
pop
pop
mov
mov
and
leave
insb
mov
xchg
es
inc
add
add
push
scas
xchg
jmp
push
sub
push
jno
or
jge
cmp
jmp
lock
cltd
mov
pop
jno
shrb
adc
sbb
add
dec
mov
idivl
push
test
out
sbb
cmp
aad
out
test
adc
push
rcll
adc
add
repz
aad
mov
gs
push
mov
cmp
cmpsb
xchg
xchg
imul
lcall
mov
jbe
out
subb
add
push
add
sahf
jecxz
add
imul
in
adc
mov
push
jmp
xchg
add
cmp
mov
sub
insb
add
lods
stos
cmp
ficomps
jp
dec
cld
mov
xchg
cmp
add
push
jo
cwtl
xchg
ficompl
loope
shlb
daa
inc
fcoms
push
and
pop
push
push
xor
test
dec
xlat
adc
pop
jo
dec
add
xor
insb
inc
xchg
jnp
scas
adc
rolb
xchg
push
mov
add
mov
fnstsw
ret
and
hlt
test
cmpsl
push
xor
and
pop
mov
cmp
xchg
out
lods
ret
aam
addr16
inc
or
pop
imul
mov
cmc
pop
push
into
adc
shrb
pop
dec
mov
pop
lds
pop
xor
or
or
fabs
or
scas
sbb
or
cmc
repz
shlb
xorl
inc
hlt
stos
mov
mov
fs
mov
mov
pop
xchg
xor
lret
scas
push
mov
mov
cli
mov
rclb
cmp
dec
testb
mov
icebp
hlt
jg
xor
sbb
cwtl
out
dec
fbld
sbb
xlat
pop
test
aas
gs
scas
push
iret
cmp
add
flds
bound
addr16
pop
es
mov
xor
mov
cld
inc
or
jne
add
inc
shrl
ret
fistl
mov
arpl
sbb
imul
ret
dec
pop
scas
xchg
pop
mov
xchg
cmp
pop
leave
sbb
lds
sar
aas
pop
int
add
inc
mov
cmp
iret
or
out
pop
popf
loopne
rcrb
mov
pushf
bound
and
out
hlt
xor
movsl
movsl
fiaddl
lret
imul
xchg
sub
cli
cmp
mov
out
sar
push
lods
sahf
jae
lret
mov
pop
push
xchg
xchg
inc
sub
inc
jmp
sub
int3
fisubl
stos
push
adc
add
push
sub
adc
lcall
xchg
out
lds
cmpsl
test
movsl
arpl
mov
adc
jecxz
mov
loope
cltd
std
push
outsl
scas
pop
mov
mov
notl
jmp
hlt
and
sub
mov
xor
ret
cmp
cli
jl
stos
std
enter
out
mov
push
push
dec
pop
rorl
mov
inc
dec
xchg
lds
xchg
jbe
xor
push
enter
mov
lods
sbb
inc
in
hlt
nop
data16
inc
popa
add
sub
push
arpl
xchg
repnz
adc
addr16
sub
out
js
mov
test
push
jl
adc
mov
es
sub
cmpsb
adc
cmpsl
inc
leave
add
and
scas
testb
insl
aaa
pushf
jg
mov
add
mov
sahf
add
and
push
jns
rcr
fsubr
add
xor
cmp
lds
or
sub
es
js
jo
mov
into
add
xorl
cmpsb
push
pop
imul
xor
xchg
dec
pop
cmp
fs
clc
mov
inc
aad
sbb
aas
mov
mov
je
inc
inc
or
or
movsl
dec
ss
pusha
fs
mov
loop
ljmp
pusha
jae
sub
sub
push
sti
arpl
lea
fnsave
sti
vcvttps2dq
or
mov
mov
fisubl
into
repz
pop
sbb
adc
mov
fcompl
inc
js
fwait
push
fiadds
xchg
insb
inc
xor
cmpsb
aaa
ffree
fbstp
fs
int3
xor
push
lock
xchg
mov
sbbl
js
movsb
push
stos
div
and
daa
test
hlt
andl
dec
shrb
mov
in
cmpsl
add
pop
and
jno
test
push
bound
mov
fiadds
pop
jecxz
cmp
icebp
rclb
cmp
dec
inc
iret
mov
outsb
int3
mov
jno
sbb
mov
add
fs
fnstsw
in
popf
xor
mov
mov
orb
pushf
ss
shll
rolb
dec
mov
or
ss
mov
test
loopne
or
or
pop
inc
mov
lea
inc
imul
add
or
lea
testl
sbb
aam
inc
call
pop
mov
mov
and
sub
push
cmp
sbb
fidivrl
std
mov
bound
imul
imul
repz
and
dec
cmp
xchg
jnp
cmc
hlt
into
addl
sbb
ja
fs
in
mov
fs
in
or
lcall
js
sub
std
pop
sahf
jae
test
jae
push
sbb
xchg
jno
pop
add
push
pop
outsb
shll
out
pop
fs
dec
xor
or
push
add
lds
and
sbb
int3
or
call
std
xor
and
cmpl
cwtl
pop
decl
mov
imul
push
xchg
and
lret
lret
adc
and
cmp
pop
pop
inc
cmp
scas
xor
shl
in
les
mov
std
or
add
in
cli
leave
xor
int3
sbb
out
or
adc
and
or
lahf
sub
scas
jl
arpl
pop
addr16
rorb
cmp
lret
mov
cmp
out
mov
rcrb
dec
jne
cpuid
fstpl
ret
inc
inc
pop
cs
jne
pop
test
cmc
lret
outsl
insl
pop
and
aad
sbb
or
push
lods
je
stos
ss
push
dec
mov
jb
mov
hlt
fs
lods
fldenv
jl
mov
cli
xorl
test
fucomip
cld
xor
push
movsb
or
sub
dec
outsl
data16
sarb
pop
dec
pop
push
andb
aam
cltd
sbb
sub
mov
inc
cmc
in
or
push
push
pop
into
mov
mov
push
cmpsb
lret
je
jns
leave
je
aam
nop
into
pop
sbb
sub
pop
sub
movl
push
xor
in
testb
daa
icebp
mov
adc
or
enter
rcll
push
mov
ret
stos
inc
movsl
stos
andb
mov
leave
outsb
or
int3
mov
mov
cmpsl
lock
mov
push
sbb
pop
icebp
imul
loop
inc
loopne
pusha
push
mov
xchg
jne
lret
daa
sub
fcomps
cmc
xor
psraw
scas
gs
nop
test
cltd
hlt
dec
das
test
in
mov
enter
in
mov
dec
shrb
adc
adc
sahf
adc
pushf
or
stos
sbb
inc
sub
test
insb
loope
popf
push
int
jecxz
int3
inc
cmpsl
push
mov
lret
pop
jns
sub
pop
mov
mov
dec
cmp
mov
adc
inc
out
fcoms
movsl
cli
andb
dec
repz
leave
mov
mov
jl
loop
mov
inc
lea
inc
int3
pop
stos
in
je
in
aad
movsl
xor
aaa
pop
xchg
mov
cmc
ror
loop
dec
std
ljmp
cmc
push
sub
adc
jg
cs
sub
xchg
push
pop
mov
in
xchg
push
push
mov
ljmp
enter
mov
mov
movsb
cs
adc
mov
dec
cmp
js
sbb
movzwl
test
push
popf
orb
ss
adc
lds
xor
mov
shll
int
jb
clc
outsb
fldcw
pop
imul
inc
push
lods
jnp
ljmp
bound
cmpsl
jmp
inc
adc
and
and
es
xchg
add
daa
mov
addr16
xchg
scas
and
scas
mov
lret
or
sbb
scas
jb
sub
or
shrb
and
and
ficompl
fadd
pop
es
add
lods
dec
subl
and
arpl
addl
movsb
push
sbb
mulb
pop
jne
push
dec
pushf
shl
cmp
lret
outsb
or
imul
popa
aad
mov
mov
push
aam
and
cmp
ret
xchg
jb
jecxz
cmpsl
fwait
icebp
fmulp
sub
cmpsb
icebp
and
adc
pop
xor
mov
mov
ret
movsl
fwait
daa
fldenv
mov
mov
and
jo
mov
cmp
push
jle
sbb
js
jno
orb
icebp
push
aas
cmp
das
dec
test
decb
sub
dec
arpl
in
iret
nop
push
bound
movsb
rcll
xchg
xor
mov
xchg
addr16
add
notb
mov
lret
mov
mov
xchg
dec
out
or
shrl
and
int3
scas
adc
xchg
data16
sti
dec
cs
js
adc
lea
mov
int3
push
clc
mov
mov
ja
and
lods
jnp
mov
pop
cmpsl
dec
js
add
lahf
push
jae
and
xchg
fnsave
mov
call
mov
sbb
sub
adc
xchg
xor
push
aam
mov
fstps
xlat
jne
scas
shlb
cmpsl
xor
aaa
cmpsl
outsb
push
xor
mov
leave
pop
mov
in
sbb
stc
inc
jb
sub
cmp
dec
jge
inc
inc
cmp
pusha
pop
subl
scas
fyl2xp1
mov
iret
cmc
inc
xorb
fxch
mov
mov
sbb
inc
divb
data16
sub
loope
inc
push
sub
push
jg
aad
addr16
xor
mov
outsl
pop
flds
jmp
pop
stos
sub
pop
lods
or
mov
jp
add
pushf
std
cwtl
push
scas
and
sbb
push
jb
sbb
aaa
mov
leave
cltd
xor
fildl
cwtl
mov
out
es
test
cmpsl
lds
xchg
fdivrs
add
inc
pcmpgtw
in
adc
arpl
add
mov
mov
xlat
cmp
jg
mov
mov
out
xchg
cmp
inc
xor
lcall
push
rorb
cli
orl
or
dec
add
int3
sub
mov
push
push
dec
lods
lret
xchg
dec
and
loope
push
cmp
adc
mov
mov
jb
es
test
or
xlat
ss
push
or
push
jno
dec
adc
das
mov
and
cmp
mov
movsl
adc
mov
repnz
dec
lds
cs
jb
sar
aad
xchg
and
insb
test
fwait
popf
mov
cmp
mov
xor
mov
mov
adc
dec
adc
movsl
gs
outsb
sub
jge
mov
xchg
push
jae
sbb
cld
fidivrl
xor
xchg
adc
mov
daa
in
cmpsb
add
lcall
mov
pusha
xchg
xor
xchg
pushf
mov
clc
in
push
mov
jb
test
test
dec
adc
and
adc
push
or
xor
inc
add
sbbl
add
mov
inc
and
cmp
cld
cmpsl
test
pusha
xchg
dec
pop
mov
movsl
loopne
pop
shrl
aaa
aas
dec
xor
repnz
or
push
cmp
into
repnz
inc
mov
sbbl
add
scas
popf
jbe
sub
xlat
mov
adc
sarl
sbb
mov
mov
sahf
push
jb
xchg
stos
pop
or
push
orb
xchg
nop
stos
push
loopne
orl
test
aad
adc
mov
lret
add
or
push
mov
or
scas
ret
cmp
push
xchg
jl
and
mov
cmc
add
icebp
scas
pop
aaa
xor
adc
lea
idivb
push
int3
sbbb
inc
popf
fwait
adc
and
cmp
int
int
mov
test
mov
jo
rcrb
insl
loop
mov
dec
int
sti
sbb
repnz
sbbb
filds
xchg
cltd
pushf
fdivrp
popf
cmpsl
jg
sbb
js
outsl
mov
cld
add
test
lock
mov
xchg
sub
adc
in
jo
jmp
scas
pop
or
mov
add
not
and
pop
jno
and
push
inc
mov
or
test
or
in
sub
xor
mov
int3
push
das
xchg
dec
jo
mov
incb
adc
insb
into
out
push
mov
dec
in
lods
sar
and
inc
repnz
push
sub
or
int3
movsl
sub
lods
mov
shlb
fs
mov
out
movsb
cli
enter
mov
stos
and
xor
or
ja
mov
adc
ret
mov
leave
mov
lahf
sub
into
dec
push
cmp
mov
test
sub
imul
pushf
and
mov
mov
rol
daa
stos
cmp
or
push
inc
cmp
addr16
in
mov
mov
xchg
inc
inc
jp
adc
adc
add
ret
addr16
cmp
pop
mov
mov
mov
pop
dec
cwtl
push
adc
iret
fadds
mov
sub
ret
pop
lock
and
push
mov
fidivrl
insl
jp
dec
mov
push
loope
loope
mov
adc
lcall
aam
push
and
cwtl
adc
imul
lret
popf
push
xor
cmpb
mov
xchg
push
cmc
vpmacsdd
pop
out
jg,pt
sbb
dec
sub
stc
sbb
xor
mov
inc
movsb
adc
mov
mov
inc
test
mov
adc
sub
cmpsb
jmp
inc
inc
push
jg
in
xchg
xchg
xchg
pop
sbbb
sub
sub
sarl
fsubl
xor
jmp
mov
push
jecxz
inc
xor
imul
or
xor
ss
jg
scas
or
sti
loope
loopne
leave
cmpsl
loopne
cld
hlt
inc
loope
movsl
sarb
cmp
leave
fwait
clc
cmp
adcl
xchg
pop
lods
pop
push
pop
cmp
push
rcl
rcll
dec
and
sbb
mov
cld
sbb
xchg
in
sbb
popf
push
inc
data16
jmp
xor
stc
fisttpl
mov
push
dec
lea
pop
xchg
call
fcoms
and
adc
aam
es
push
shll
std
xor
inc
out
lods
aad
imul
cmc
pop
push
int3
std
inc
mov
push
push
ss
or
push
sub
daa
add
push
jge
inc
mov
sbb
mov
aaa
push
sahf
stos
mov
adcl
xor
mov
sbb
push
ret
sahf
ljmp
jnp
add
es
add
xor
popa
mov
hlt
cmpb
test
jecxz
cli
push
sarb
push
mov
fnsave
ds
xchg
scas
out
wrmsr
jmp
iret
out
hlt
pop
js
in
xor
mov
xchg
stos
mulb
out
inc
and
dec
mov
cmp
sub
dec
popa
aad
lods
cltd
or
rcll
cwtl
inc
data16
je
and
fisubs
add
mov
jo
enter
aas
sub
imul
pop
jbe
xlat
test
add
mov
push
cmp
dec
pusha
xor
push
add
das
loope
adc
dec
push
sub
scas
in
bnd
sub
mov
or
mov
xchg
mov
sahf
push
jmp
xor
mov
in
and
insl
mov
movsb
cmp
push
xchg
add
push
or
sbb
imul
or
jbe
pop
imul
push
jl
fwait
cmp
lods
movsb
pop
jae
test
sub
xor
shll
fdivrs
rclb
adc
gs
mov
rcl
popa
push
cmpl
lods
out
sbb
ds
or
and
jb
iret
mov
xchg
sub
repnz
jb
xchg
scas
mov
jo
add
fs
faddl
sbb
ret
jg
pop
mov
push
sub
xor
popa
into
inc
pusha
sarb
add
loope
sarl
shrb
inc
xlat
out
push
push
cmp
jbe
adc
adc
lahf
scas
jo
add
fcmove
fs
pop
sub
fwait
loopne
mov
sub
loopne
jmp
int3
jl
adc
lret
pushf
fdivrl
xchg
push
mov
dec
stc
fs
xchg
dec
sahf
jo
pop
inc
mov
and
sub
xchg
xchg
aad
jns
enter
xchg
mov
test
inc
mov
add
cmp
inc
movsl
fdiv
xor
mov
sub
cmpsl
xor
jge
dec
mov
ret
adc
lock
pop
cmpsb
inc
sbb
pop
mov
mov
stos
insb
mov
mov
inc
aas
loop
in
cmp
cmpl
mov
dec
mov
mov
lods
ficoml
sbb
out
sahf
dec
pop
into
dec
lods
mov
shlb
cwtl
push
test
fnstenv
mov
cld
aaa
push
imul
pop
dec
pushf
or
xor
or
cmpsl
cld
or
mov
cmp
fists
ljmp
in
hlt
rorb
stos
stos
inc
clc
aas
add
mov
mov
aaa
mov
adc
inc
mov
outsl
fstpl
sahf
dec
add
sub
xchg
dec
jae
ret
and
gs
jns
xchg
into
jecxz
add
in
push
push
out
nop
pop
push
pop
jb
push
inc
add
mov
lds
shrb
mov
mov
pop
hlt
push
jge
movsb
out
in
mov
repz
inc
mov
push
pop
pop
das
cmpl
inc
sub
sar
loop
jo
imul
pop
lods
dec
js
pop
jne
xor
cmp
movl
int
adc
jge
sbb
xchg
push
lea
mov
das
lahf
ds
push
push
imul
dec
mov
jmp
jbe
mov
fs
pushf
shll
inc
bound
cmp
cwtl
loope
dec
ficompl
jge
in
repz
rcrb
push
stos
lcall
mov
jle
int3
mov
jae
jmp
out
dec
arpl
pusha
or
mov
mov
cs
fdivrl
js
add
icebp
pop
out
push
xchg
ror
sahf
mov
icebp
push
sub
in
fstl
mov
int
or
inc
out
or
lahf
mov
jmp
out
out
loopne
int3
xchg
push
xlat
jo
pop
mov
ret
jo
xor
mov
loop
lds
mov
int
jge
adc
adc
repnz
cmc
imul
daa
sub
jp
adc
in
sarb
adc
sub
mov
stos
jno
movsl
loope
imul
lods
jo
push
aaa
bound
fcmovbe
and
sbb
pop
xor
push
jnp
dec
es
sub
mov
shlb
imul
jmp
mov
repz
jg
testb
aas
inc
dec
push
or
inc
xor
imul
das
rol
or
push
sbb
lock
add
xor
inc
dec
mov
inc
adc
mov
mov
mov
mov
into
rclb
filds
icebp
pushf
add
adc
mov
lea
js
mov
int
sbb
fidivrs
inc
mov
fdivl
push
mov
push
cltd
insb
add
sbb
cltd
dec
jmp
dec
pushf
add
loop
test
push
fcmove
dec
inc
inc
into
mov
xchg
mov
adc
jle
fadds
fldcw
nop
movsb
jae
fadd
test
inc
lcall
mov
cmpsl
sub
out
lret
int
stc
sub
adc
cmc
or
cltd
pop
fstl
xor
add
add
dec
push
clc
incl
add
add
sbb
add
mov
add
dec
jmp
add
roll
mov
push
add
sar
rolb
pusha
call
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
mov
jmp
mov
add
lods
mov
btr
jae
rep
jmp
pusha
push
push
push
call
mov
popa
pusha
mov
sub
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
add
lods
test
jne
push
push
push
call
lea
push
push
push
pushl
call
mov
sub
push
push
push
push
call
pusha
push
pushl
pushl
call
popa
push
push
push
call
lea
push
pushl
push
pushl
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
