ficoms
addr16
sti
mov
cmpsb
cmp
js
sbb
cmp
jae
lock
xor
mov
mov
stos
jnp
adc
jge
sbb
sbb
cwtl
and
loopne
stc
inc
inc
sub
mov
mov
jae
sub
dec
adc
mov
mov
lea
movsb
imul
shlb
add
aas
mov
shr
scas
mov
inc
enter
dec
dec
bound
dec
test
mov
repz
xor
test
jb
lahf
and
mov
sub
sub
mov
out
scas
cmp
lods
idivl
fcmovu
push
or
mov
add
mov
inc
enter
and
ret
or
adc
xor
out
insl
cmp
or
loope
fildll
adc
dec
jg
js
pop
mov
jns
pop
xchg
jae
in
mov
lock
xor
loope
stos
orl
and
sub
daa
jae
repz
cwtl
aad
cmpsl
xor
fadds
ret
mov
cmpsl
lret
mov
cmp
jae
jns
add
xor
rcrl
std
gs
dec
add
jecxz
or
outsl
out
inc
fimull
pop
adc
mov
out
out
push
fwait
pop
dec
adc
inc
das
imul
mov
hlt
xchg
mul
lea
mov
cmp
test
dec
repz
sti
jecxz
push
pop
rcrb
inc
pusha
lock
mov
mov
push
fidivl
aam
sti
pop
inc
jbe
mov
jg
xchg
pop
dec
mov
jbe
das
or
stos
mov
inc
cwtl
pop
pop
sti
lret
imul
xchg
push
bound
cmp
xor
mov
sbb
lods
int
mov
pop
dec
and
dec
repz
push
pop
cmp
pusha
sub
inc
outsl
fnstcw
inc
dec
fwait
iret
push
ret
in
insl
fadds
pop
cmp
fst
push
mov
cmpsl
loop
insb
xchg
loope
mov
mov
dec
outsl
das
pop
adc
je
daa
cmp
adc
nop
mov
aam
cmpl
and
fcompl
clc
add
lret
mov
mov
jle
xchg
cwtl
fdivs
xor
xchg
cwtl
cld
repz
mov
pop
mov
xchg
jae
lods
lods
push
or
in
adc
les
adcl
jle
adc
jno
out
scas
ret
push
movsb
mov
inc
dec
mov
lods
xchg
inc
mov
js
xchg
sub
xor
popf
jne
adc
das
add
mov
and
cmp
push
add
mov
xchg
push
divb
pushf
mov
lret
cmpsl
stos
movsb
pop
pop
mov
filds
dec
and
and
in
lret
mov
jae
aad
pop
cli
push
jns
adc
std
mov
fdivl
xchg
adc
pusha
arpl
shrl
xor
push
jp
cmpsl
jge
subb
mov
or
sbb
shrl
push
jo
rcl
or
cmp
sar
fcomps
mov
mov
mov
hlt
push
pusha
push
sbb
jnp
lds
mov
idivl
ror
push
push
in
nop
out
movsb
shll
push
cmp
add
loopne
outsl
xchg
pushl
jne
andl
adc
cmp
js
cmp
or
mov
sub
or
repnz
shl
movl
mov
pop
roll
pop
mov
mov
ss
xor
push
dec
jns
shrb
gs
sbb
aad
pop
popf
jo
pop
roll
mov
sub
pop
pushf
data16
inc
push
hlt
jmp
fdivr
mov
jb
push
sar
lret
adc
test
add
add
xchg
xchg
orl
xor
and
pop
arpl
adc
mov
lcall
ret
cmp
test
stc
outsb
clc
sub
pop
xor
pop
dec
in
aad
cmpl
sbb
out
mov
and
in
xchg
sub
xchg
push
dec
and
pop
xchg
fidivl
and
xchg
jne
sub
cli
mov
xchg
and
adc
push
mov
mov
pop
stc
inc
aas
dec
sbb
adc
sahf
rolb
lahf
xor
testl
sbb
adc
pop
leave
mov
test
jecxz
push
outsb
push
xlat
stos
mov
movsl
mov
cmp
xor
mov
inc
fs
mov
fistl
sub
daa
dec
mov
loop
ds
xor
mov
imul
sbb
dec
and
push
cld
das
fidivrs
rclb
push
or
add
data16
jle
pop
leave
sti
pop
dec
sbb
mov
rcrb
push
xor
lock
cld
in
fsubrl
add
jmp
xchg
adc
out
testb
mov
fnstsw
xchg
lods
stos
pusha
enter
mov
push
rcrb
loopne
out
inc
aas
fcomp
outsb
sub
adc
sbb
xor
fcmovbe
xor
pop
in
or
sub
mov
dec
lods
pop
aaa
dec
stos
push
add
daa
imul
jp
xchg
dec
or
addb
xchg
je
out
insb
stos
dec
sbb
push
pop
dec
mov
imul
cmp
aaa
dec
shrb
stos
shrb
pop
out
dec
dec
adc
int
cmp
sub
mov
int3
mov
enter
adc
scas
sbb
inc
hlt
jecxz
mov
mov
mov
addr16
and
gs
sub
fistpll
ss
jae
xor
push
mov
sub
into
clc
ds
das
outsb
xorb
push
dec
js
aam
jbe
addr16
mov
mov
sbb
jb
ret
ret
andl
pusha
xchg
inc
rcll
jge
sub
jmp
jno
mov
popf
cmp
dec
insb
sbb
cld
or
push
xchg
jns
arpl
cmp
cmp
in
mov
cmp
jo
repnz
mov
sbb
jnp
insb
xchg
mov
in
or
into
jae
mov
ljmp
cmp
stc
mov
daa
and
adc
sbb
lods
push
mov
mov
push
xchg
orl
frstor
aam
inc
jae
adc
pop
xchg
mov
test
mov
and
mov
loop
adc
mov
jg
mov
es
jns
in
jp
add
mov
adc
xchg
mov
and
inc
cmp
pop
mov
imul
mov
andl
fcmovne
and
aaa
scas
adc
mov
repz
push
ja
cmp
fwait
mov
jl
das
sub
push
pop
mov
mov
cli
sbb
lods
xchg
loope
add
push
lock
dec
adc
sbb
mov
pop
inc
negl
aam
dec
gs
enter
and
and
repz
push
sarb
sti
dec
loope
pop
mov
mov
cmp
repz
mov
lods
cld
dec
movsb
lea
out
cli
daa
cwtl
ja
jecxz
pushf
fnstenv
mov
repz
pop
sbb
mov
aas
insb
fwait
and
push
add
testb
mov
jmp
test
dec
xor
fbstp
loop
sbb
addr16
ja
je
lcall
and
pop
jns
hlt
imul
mov
inc
pop
xor
sbb
cwtl
movsb
movsl
repz
bound
cmp
adc
lahf
push
and
and
test
dec
loop
push
sbb
xchg
aaa
loop
lods
mov
lea
test
out
dec
ds
cmp
sbb
pop
push
lret
aad
push
push
ja
sub
popa
jbe
rorl
loope
dec
dec
mov
xchg
fbstp
icebp
jmp
mov
das
iret
mov
arpl
xchg
pop
bound
and
cltd
lcall
mov
addr16
adc
clc
cltd
rcrl
sbbb
mov
xchg
dec
push
and
dec
or
or
mov
sbb
mov
cmp
repnz
mov
and
jle
clc
sbb
cmp
mov
push
pushf
inc
pop
pop
jmp
movsl
ficompl
mov
pop
push
jg
push
cmp
push
or
jae
sub
and
or
ss
dec
je
dec
xchg
jbe
xchg
or
mov
popf
inc
test
ljmp
dec
inc
in
fldcw
cmp
mov
mul
scas
scas
daa
and
daa
ljmp
pop
cmp
sti
dec
dec
push
adc
xchg
push
jae
arpl
bound
adc
fdivr
pop
test
test
xchg
jmp
out
inc
pop
cmp
call
jle
into
mov
mov
repnz
movsl
ffree
in
call
call
cmp
inc
cwtl
cmp
popa
jae
clc
movsb
test
mov
fstpt
in
mov
adc
repnz
and
int3
xchg
ss
repnz
stos
ds
cmc
dec
pop
push
int3
stos
addb
cmp
sub
push
jo
mov
dec
lahf
icebp
cltd
in
shlb
fwait
stc
mov
xlat
xor
rcl
mov
push
dec
imul
lahf
inc
cmpsl
fwait
lds
inc
shll
adc
sub
out
icebp
outsl
and
enter
mov
in
std
mov
stos
dec
adc
aam
clc
or
out
iret
push
cli
and
mov
pop
and
mov
insb
push
mov
stc
xor
lea
cld
fsubl
and
shrb
adc
test
xchg
and
lock
leave
popf
jb
ja
pop
ret
push
add
daa
sub
pop
push
and
pop
xchg
mov
xchg
xor
inc
xor
adc
adc
xor
sub
cmpsb
mov
jl
jge
pop
jl
add
sub
mov
mov
scas
sbb
pop
jns
cmp
inc
or
shrl
jne
jle
mov
pop
sbb
add
in
out
outsb
xchg
push
pop
push
shlb
loope
sbbl
icebp
je
outsl
std
sub
repnz
lds
dec
cmp
insb
dec
push
out
cmp
stos
mov
out
push
mov
test
sar
jno
dec
outsl
testb
scas
dec
aaa
add
je
dec
mov
jmp
push
ljmp
fwait
mov
int3
xchg
pop
test
jg
push
out
xchg
cld
pop
fidivrl
mov
aad
inc
rcll
aad
sbb
adc
pop
push
lahf
outsb
xor
ss
and
xchg
aas
fiaddl
je
xchg
mov
cwtl
inc
lret
mov
inc
or
add
into
dec
adc
jecxz
pop
sbbl
xchg
cmpsb
ja
lret
inc
ljmp
jno
gs
and
cmp
push
and
decl
or
cltd
jmp
xchg
cs
ficompl
test
sarl
push
pop
jo
test
mov
adc
pop
repz
cmp
fisubrl
loopne
and
xor
out
pusha
and
mov
sbb
or
pop
iret
dec
dec
roll
addb
icebp
pop
fcompl
fimull
cmc
inc
pop
push
adc
cmpb
out
ss
popa
push
fisttpll
dec
mov
jae
cld
popa
stos
imul
xchg
and
jmp
add
inc
jno
adc
xlat
pop
daa
popl
mov
in
jae
faddl
lret
add
mov
add
scas
mov
dec
ja
push
inc
adcb
jo
lcall
add
mov
cmp
xorl
inc
jb
sti
fst
movsb
sbbb
xchg
dec
and
cltd
mov
dec
mov
sub
imul
sti
out
and
xchg
lcall
inc
mov
sub
dec
jecxz
or
pop
push
lock
inc
shl
scas
and
repnz
add
mov
pusha
ds
outsb
dec
mov
jns
cmpsb
sbb
or
jg
je
fistpl
aaa
aas
fimull
pop
lds
movsb
stc
subb
bound
mov
je
dec
mov
cmpl
dec
fimull
and
rcrl
push
ss
mov
mov
stos
pop
push
in
xchg
push
cmp
ret
jae
insl
popf
cmpsl
mov
insl
pop
aaa
insl
xchg
xorl
repnz
cld
mov
pop
mov
cmp
std
test
push
push
add
mov
nop
xchg
and
lds
cmp
mov
fcoms
or
cmp
inc
daa
xchg
cmp
fwait
jp
add
xor
lahf
sub
mov
clc
xchg
mov
adc
mov
push
adc
aad
outsb
and
sbb
test
add
imulb
mov
sub
jo
jo
add
mov
add
add
rol
dec
cmp
cmp
push
int3
js
push
iret
xchg
in
mov
inc
cmpsb
push
fldl
push
int3
out
cmc
arpl
les
inc
cld
xlat
dec
mov
xchg
lods
pushl
adc
cmpl
and
arpl
jne
jge
adc
sti
out
xchg
cltd
xchg
jae,pn
test
or
push
fisttps
lods
jg
and
std
mov
dec
jle
cmp
test
inc
dec
xor
cmpsl
push
push
insl
cmpsb
xorl
mov
jg
push
mov
nop
cwtl
scas
addr16
dec
js
ret
mov
cwtl
stc
lret
popa
mov
mov
in
xor
pop
push
mov
enter
and
jb
pop
gs
inc
sub
pop
mov
cmpb
inc
pop
lods
aam
pop
inc
adc
inc
inc
mov
lahf
rcrb
icebp
notl
xor
inc
adc
fwait
jbe
mov
cmpsl
add
sti
push
test
cmc
sub
push
dec
out
push
std
mov
mov
shlb
call
cwtl
int
xchg
mov
in
cld
jg
adc
push
mov
inc
cmp
les
ljmp
sub
ds
add
movsb
pop
cmp
lea
sub
sti
sub
xchg
push
fadds
rdtsc
and
call
jp
or
xchg
add
push
sbb
out
in
int
ret
flds
out
fmull
and
xchg
sub
sub
shrb
jnp
xchg
repnz
orl
dec
mov
push
dec
dec
pop
lret
dec
out
xor
jge
or
repz
adc
pop
or
call
movsb
lret
dec
out
loope
call
repz
fists
test
pop
loopne
add
fcomps
sbb
lret
lock
pop
add
pop
fisttps
in
cmp
pop
call
sbb
pop
fcompl
pop
les
pop
enter
int3
sbb
pop
rcrb
pop
mov
mov
sbb
pop
rcrb
sub
pop
xor
pop
sbb
pop
add
jae
adc
pop
cld
inc
dec
mov
add
dec
mov
cmpsl
dec
mov
lahf
dec
nop
xchg
adc
xor
pop
add
dec
add
xor
aas
pop
outsl
mov
push
imul
insb
pop
mov
push
enter
lret
inc
mov
xchg
jecxz
lock
out
fsubs
loopne
mov
push
pop
pop
cmp
and
and
idivl
sub
repz
pop
sub
fistps
lret
ror
pop
mov
lret
mov
inc
pop
ror
dec
pop
int3
lret
enter
and
pop
sbb
mov
sbbb
in
xchg
jmp
add
in
sarl
iret
inc
dec
movsb
into
aas
dec
pushf
sub
mov
adc
and
fisttpll
push
dec
sarb
push
idivl
jmp
xchg
orl
movsb
jnp
enter
shlb
ja
mov
or
test
repz
cmp
pop
and
or
push
rcl
pop
dec
shl
pop
dec
shr
pop
inc
shll
and
aas
and
and
inc
sub
lods
pop
or
or
and
fs
jae
mov
fwait
cmpsl
ja
fwait
lahf
ja
fwait
xlat
ja
fwait
lret
ja
fwait
mov
ja
fbstp
fwait
pop
js
lcall
cmc
mov
sub
and
aas
sub
mov
and
scas
mov
or
adcb
mov
cld
mov
jae
and
imul
daa
faddl
cmpsl
sbb
inc
inc
ret
outsl
das
daa
mov
and
jo
mov
fisttpl
jg
cmp
xchg
bound
xchg
mov
arpl
test
out
cmpsl
add
cwtl
adc
mov
xor
inc
ret
arpl
incb
data16
jnp
repnz
adc
mov
jnp
lret
jmp
pop
add
mov
jle
push
cmp
dec
cmp
cmp
scas
icebp
xchg
push
cs
pop
jp
sbb
pop
aas
adc
mov
ja
and
xchg
in
inc
add
jmp
ret
cmp
xchg
add
pop
mov
outsl
and
ret
popa
xor
int3
xchg
cltd
mov
push
lods
sarl
xchg
hlt
mov
and
lds
jae
jae
cmpsb
push
incb
gs
dec
adc
jbe
jmp
andb
inc
mul
and
rolb
inc
dec
push
out
dec
sbb
mov
rolb
fxch
fwait
xchg
test
mov
jo
mov
jne
pop
mov
xor
xor
or
push
xor
mov
cs
test
lret
dec
xor
pextrw
adc
fwait
out
jnp
jb
xlat
fcmove
aad
les
es
fistps
cs
dec
inc
aas
or
xchg
mov
iret
xchg
clc
push
push
add
sahf
popa
jmp
stc
dec
mov
jp
call
lret
jle
stos
insb
scas
icebp
pop
filds
cli
fistpl
filds
jnp
dec
movsl
adc
push
or
or
dec
push
dec
pushl
add
mov
idiv
or
daa
test
sub
push
dec
xchg
jmp
add
mov
ret
dec
and
mov
scas
and
jb
cvtdq2ps
ret
adc
push
aad
and
mov
xchg
and
sbb
das
insb
das
push
cmp
xorl
add
inc
ljmp
and
cmp
pop
shll
popf
jl
jmp
rorl
and
push
pop
push
sbbl
outsl
cmp
xor
fstpt
shl
pop
xor
add
adc
dec
mov
mov
cs
aas
nop
add
fs
fbstp
push
pop
dec
jae
push
scas
or
push
push
movsb
jno
notb
aaa
jle
je
in
push
rcrl
dec
mov
cli
ficoml
pop
ficoml
cli
adc
or
in
xchg
sbb
add
push
cmp
dec
dec
adc
pop
pushf
sub
in
add
pushf
stc
jp
dec
xor
or
add
loopne
mov
jnp
adc
lret
mov
mov
ja
adc
xchg
lea
popf
jle
clc
or
xchg
xchg
dec
xchg
sbb
xchg
pushf
inc
adc
call
rcl
popf
mov
inc
mov
mov
mov
mov
stos
or
ds
in
mov
nop
jg
push
lea
pop
nop
mov
and
xor
je
mov
mov
in
negb
jmp
add
adc
mov
or
mov
jg
jbe
or
mov
mov
sub
push
loope
push
and
push
in
pop
xchg
imul
ret
sub
fmuls
stos
notb
mov
mov
pcmpeqd
mov
or
gs
mov
cmpsl
and
pop
lock
lahf
movsl
std
inc
mov
mov
cmpsl
push
outsl
or
adc
pop
dec
sbb
dec
mov
inc
cmp
sbb
mov
daa
pop
aaa
jle
push
push
inc
hlt
cmp
std
dec
insb
andl
sbb
repz
xor
das
sub
fmull
cmpsb
lds
add
aas
lcall
in
xchg
add
out
mov
lret
add
dec
inc
fstps
mov
xchg
je
mov
adc
idivl
mov
pusha
xchg
jmp
dec
hlt
adc
fwait
inc
clc
sbb
cmp
adc
rclb
lods
mov
dec
dec
xorb
xchg
adc
in
ficoms
xor
fs
test
jg
ds
jg
mov
repz
out
inc
outsl
sub
mov
ss
cmp
scas
fisubrs
or
and
push
mov
mov
lcall
jge
call
mov
mov
xor
int
mov
out
push
add
fsubl
loope
mov
imul
inc
mov
pop
rcl
stc
fdivrl
mov
out
inc
dec
shll
and
cld
out
fldt
testl
pusha
xchg
jne
aam
filds
aaa
mov
lcall
xchg
daa
add
fwait
ret
push
clc
sbb
mov
or
fldz
inc
cltd
xchg
inc
xchg
pop
subl
adc
popa
stos
mov
aad
sbbb
das
jo
jb
fxch
sub
xchg
push
sbb
xchg
int3
shr
mov
push
push
out
std
cld
sub
or
inc
sub
sahf
cmpsl
das
adc
xor
push
pushf
cmp
fcmovne
mov
pop
dec
pop
adc
add
rorl
dec
notl
inc
pop
out
icebp
fnstsw
and
cwtl
jmp
dec
jnp
js
xchg
xchg
mov
jae
xor
mov
mov
push
fcomps
call
aas
pop
mov
dec
or
add
outsl
mov
rcll
inc
jb
inc
loopne
addr16
es
out
sti
sbb
inc
jge
dec
jbe
mov
xlat
sbb
mov
inc
rorl
repnz
out
dec
inc
xchg
adc
lods
stos
mov
pusha
push
std
insl
xchg
pop
jbe
call
and
add
mov
dec
xchg
cmp
add
fmuls
push
imull
dec
rol
outsl
mov
fwait
jae
js
scas
add
pop
inc
aas
xor
imul
and
jbe
and
aad
xchg
xor
clc
repz
jne
sub
ss
xchg
sub
mov
mov
jl
cmp
fmull
and
nop
pop
add
or
cltd
shrb
dec
out
mov
or
mov
lret
mov
icebp
sbb
jnp
mov
cs
ds
sub
sbb
int
cmp
shlb
int
jno
nop
jb
push
sub
sbb
adc
ret
popl
dec
sbb
cli
in
jl
out
and
push
mov
shll
mov
pop
cmp
call
cwtl
push
fcmovu
lods
into
sahf
pop
cli
scas
cs
loop
jle
xor
xorl
mov
add
sbb
call
in
push
mov
xchg
and
nop
dec
or
ret
jns
out
mul
xchg
inc
xchg
decl
or
xor
dec
subb
mov
xor
sub
mov
aaa
lock
int3
scas
mov
out
frstor
dec
mov
and
pop
jmp
aam
movsb
mov
jge
popa
mov
mov
add
mov
loop
xor
add
pop
cltd
aad
adc
and
testl
clc
push
pusha
push
push
jmp
test
jbe
sbb
add
int
sbb
or
in
popf
insl
sbb
gs
pop
scas
pop
test
sbb
cmp
ss
xlat
imul
ror
inc
pop
inc
and
xchg
and
incl
stc
push
or
xchg
in
testl
cli
xchg
push
mov
add
fidivrs
and
xchg
lret
scas
cmc
in
push
sub
or
movsb
inc
fisubl
sbb
and
mov
mov
dec
fwait
adc
ret
nop
xchg
mov
sbb
mov
xchg
mov
lods
out
and
cmp
addl
sbb
loope
in
inc
adc
add
rcl
das
js
push
faddl
push
jne
idivb
inc
dec
mov
test
inc
sub
out
cmc
jae
ret
sub
jmp
mov
and
movsb
push
iret
mov
std
les
daa
inc
cmp
clc
cmpsb
xor
mov
mov
xlat
inc
inc
scas
ret
movsb
jbe
int
mov
cltd
mov
iret
hlt
jnp
jecxz
dec
or
mov
loope
jg
adc
pmullw
push
das
aaa
mov
xchg
movsb
xchg
fstpt
pop
dec
and
mov
imul
stos
xor
jnp
sysret
dec
add
pop
xchg
loopne
stos
mov
les
sbb
sub
loopne
ja
sbb
lds
loopne
cmpsl
ja
fistl
aad
dec
cmp
lods
mov
dec
add
fisttpl
pop
repnz
ds
scas
jbe
stos
inc
adc
or
mov
jne
scas
mov
cmp
xor
loopne
fdivrs
nop
ret
std
cmp
push
pop
mov
mov
add
xchg
cmp
mov
xchg
fsubrl
test
cmp
aam
push
scas
das
dec
or
dec
sbb
push
int3
add
scas
sbb
mov
js
jnp
scas
xor
mov
cmp
mov
outsl
xchg
mov
push
and
loope
inc
adc
push
rcrb
cmp
pop
sti
adcb
test
enter
cld
xchg
pop
lods
and
out
mov
push
jne
fs
movsb
sti
enter
inc
je
lret
xchg
lock
push
jae
add
iret
and
ja
xchg
adc
adc
test
nop
xor
pop
movl
mov
dec
sarb
popa
mov
cmp
xchg
mov
or
das
inc
xor
jno
mov
cmp
xchg
movsl
mov
clc
cmp
jb
cld
pop
int
cmovg
jo
insb
inc
xor
lods
fwait
orl
fildl
mov
ret
arpl
aas
outsb
push
movsb
dec
xorl
cmp
sbb
sbb
mov
aam
jnp
mov
addb
and
loopne
fildll
fistps
fistps
push
mov
xchg
mov
push
rcll
sub
jge
and
push
push
testb
and
popl
and
mov
int
stos
mov
adc
lret
nop
fwait
mov
out
iret
pop
and
jecxz
jge
clc
add
mov
rclb
xchg
adc
adc
enter
into
cmpsl
cmp
push
ja
mov
pusha
jb
add
lds
jge
jb
cli
or
push
and
insl
push
dec
mov
adc
mov
push
imul
ss
out
mul
loope
push
je
aad
stc
xchg
fcomip
cli
hlt
fisubl
sub
mov
cmpsb
hlt
sub
nop
insb
fcoml
leave
sti
cwtl
xchg
mov
rorb
xchg
test
jecxz
in
sbb
pop
sbb
dec
sti
lret
stos
pop
add
mov
rorl
sbb
scas
scas
test
shll
js
addr16
clc
mov
adc
jge
and
or
ret
insl
mov
sarl
fwait
sti
add
xchg
dec
aam
inc
popa
sti
push
mov
or
enter
jl
gs
adc
add
add
testl
jns
insl
adc
inc
stc
pop
or
fistpll
dec
cltd
sub
arpl
pusha
fidivrl
or
sub
push
jno
dec
jnp
push
aas
push
mov
test
push
je
push
or
pop
jo
js
lret
and
out
shrl
adc
mov
mov
cwtl
inc
pop
fwait
into
fimull
cli
ja
or
mov
cmpsl
jae
jnp
add
add
lods
lds
push
mov
sub
dec
adc
adc
push
insl
push
sub
jo
cmp
jge
repz
xchg
pop
cmp
xchg
jae
jg
test
sub
movmskps
imul
mov
mov
lret
ja
iret
sbb
aam
mov
fwait
dec
lcall
shrd
lahf
fcoml
jb
aaa
lret
jbe
adc
icebp
cmpsl
or
mov
inc
adc
push
out
lcall
inc
cld
sub
rorl
mov
aam
stc
test
cmp
and
imul
nop
mov
stos
mov
inc
stc
jl
loopne
and
jbe
imul
lds
adc
sahf
insb
and
shrb
test
je
xchg
mov
adcb
lods
jb
inc
ss
cld
xchg
mov
movsl
add
mov
add
cmp
add
add
je
aaa
test
addr16
and
fistpll
out
in
jbe
cmc
repz
leave
adc
lods
sbb
jbe
add
sti
aad
add
je
jge
test
add
mov
pop
sbb
sbb
bound
push
mov
fstpt
and
adc
push
popf
add
lods
cmp
pop
in
test
xor
and
and
sbb
ja
mov
adc
mov
dec
ret
dec
iret
inc
sahf
dec
cmp
push
mov
aaa
outsb
adc
xlat
mov
or
push
pop
inc
mov
fsubl
jg
js
pop
fisubl
adc
cmp
cmc
mov
movsl
aam
ljmp
leave
shll
xchg
adc
aad
stos
inc
pushf
xchg
push
fcmovnb
add
xor
jle
adc
sub
test
mov
das
push
rcr
and
sbb
aas
loopne
xchg
jo
and
je
fmul
sbb
ja
xorl
adc
add
scas
addr16
add
out
or
les
push
pop
leave
shrl
pusha
sbb
and
mov
lds
push
adc
cmpxchg
mov
xlat
in
mov
stos
aaa
pop
in
lods
gs
sbb
pop
pop
pop
cmp
cmp
cwtl
scas
mov
setb
dec
clc
mov
xchg
test
xchg
adc
adc
mov
cli
sub
xlat
je
dec
sub
retw
pop
mov
pop
and
scas
or
add
out
int3
and
paddw
dec
pop
or
pusha
xchg
and
mov
mov
mov
cmc
pop
clc
dec
invd
cmp
pushf
xchg
cmpsb
lods
cli
pop
or
jno
lahf
sbb
cmp
jne
pop
jmp
push
in
cmpsb
sub
or
pop
imul
das
cli
stos
loop
iret
push
ja
in
mov
jle
fadd
pop
xchg
fnstsw
rclb
pop
push
dec
dec
das
dec
ret
and
inc
push
movsb
out
dec
mov
ret
mov
push
xor
lahf
adc
add
inc
popa
xor
sbb
sti
cmpsb
mov
imul
aam
mov
pop
call
fs
movsl
and
pop
popl
inc
incl
inc
pop
outsb
aas
lea
and
or
movsb
fisttps
cmp
outsl
sub
lods
cmp
ret
stos
jae
out
and
cwtl
mov
add
ljmp
cmp
jae
shrl
or
mov
loopne
jae
loop
fwait
imul
inc
push
decl
loop
movsl
shll
mov
pop
mov
gs
movsl
cli
imul
push
xor
mov
jge
stc
dec
jle
adc
stos
lods
loope
sub
jo
movsb
ret
pop
imull
cmpsl
ret
push
jle
dec
fldl
mov
scas
daa
cmp
sbb
xlat
sub
push
jae
notl
pusha
mov
fwait
test
cwtl
mov
pop
mov
jno
push
popf
subl
cmp
push
dec
inc
out
and
ja
cmp
stos
outsb
jno
jae
jne
lods
add
jmp
adc
clc
fdivrp
lcall
xchg
scas
cs
out
subl
lret
fwait
adc
in
adc
add
jns
push
outsl
inc
pusha
in
mov
nop
ljmp
lret
xchg
ret
cmp
cmp
popa
lcall
inc
mov
out
pop
xor
fwait
adc
outsl
stos
pop
cmpsl
cmp
push
int
addr16
jne
cmc
fdivrl
lock
nop
mov
xchg
jae
cmpsl
add
add
jbe
xchg
or
push
pop
mov
inc
cmpl
in
out
dec
aad
js
push
and
loope
enter
mov
out
jns
shll
add
sbb
divb
outsb
enter
cmpb
add
adc
fstpt
xchg
bound
pop
xchg
in
dec
sub
cmp
aad
dec
adc
or
js
jmp
lret
push
pminub
push
jo
and
in
pop
or
mov
faddl
cltd
pop
push
xchg
insb
les
ja
orl
mov
stc
pop
ds
mov
add
fld
jmp
xor
lds
mov
push
and
into
stc
es
scas
dec
push
js
lea
dec
and
mov
insl
popa
xchg
js
mov
pop
mov
cmp
xor
mov
insb
test
sub
jl
inc
and
mov
fdivl
cwtl
std
movsl
clc
sbb
lret
xchg
sbb
bound
push
movsb
cltd
sub
jl
mov
in
movsl
cmp
sbb
adc
faddl
mov
push
ljmp
adc
pop
pop
scas
sub
shlb
outsb
mov
cmpsb
sub
push
in
mov
scas
sbb
sbb
bound
mov
nop
cwtl
scas
mov
ja
shl
lea
fcmovnu
fcmovb
insl
jge
lds
out
xchg
pop
cld
mov
test
adc
cmp
dec
jb
aaa
jb
sub
sub
inc
nop
loopne
mov
add
mov
inc
mov
and
lcall
ss
xchg
sbb
and
mov
cmp
rcrl
loope
dec
mov
jl
data16
je
inc
clc
fcmove
scas
cmpsb
dec
xchg
jl
sbb
call
pop
ret
cld
xchg
in
lds
lock
dec
mov
mov
mov
mov
mov
lret
jae
cs
mov
dec
cld
xchg
cmp
lods
jmp
addl
addl
cld
andl
sbb
andb
jno
push
popa
addr16
ffree
cmp
xor
dec
jnp
cmp
inc
jns
movsb
pop
cld
ds
jecxz
xchg
sub
mov
inc
cld
mov
jbe
adc
ret
add
fwait
rolb
in
stos
push
adc
cmpsb
in
cmpl
mov
sub
fwait
sbb
pop
cmpsl
xchg
popa
fwait
in
lds
lahf
arpl
lods
cmc
add
adc
stos
fisttps
adc
push
das
dec
jg
xchg
rcll
test
dec
mov
pop
cld
mov
jp
mov
dec
push
mull
inc
jl
jne
arpl
lcall
add
sti
scas
call
mov
sub
ss
cmp
cld
jns
xchg
dec
cli
cmp
and
pop
incb
test
or
push
movsl
dec
rcll
imull
daa
pop
sub
adcb
fwait
icebp
sarl
mov
sub
dec
js
ret
cmp
sub
out
mov
inc
jbe
daa
dec
add
stc
push
sbb
movhps
and
dec
dec
xor
mov
or
add
pshufw
pop
fiaddl
mov
xchg
pop
or
xchg
and
leave
movsb
push
test
frstor
scas
push
test
xor
and
or
xlat
ret
mov
and
repnz
add
dec
rcll
cli
or
test
xor
mov
lret
cli
jle
sub
xchg
sub
pop
enter
adc
adc
pop
or
pop
aam
imul
ljmp
adc
testl
xorb
cmp
jne
push
rep
cmp
mov
push
in
add
inc
pop
mov
sbb
fistl
adc
imul
cs
test
das
push
adc
iret
pop
cmp
add
pop
mov
and
mov
lret
sahf
and
xor
lock
push
mov
dec
dec
insl
loopne
sbb
adc
inc
xchg
ja
das
or
xor
stos
sti
stc
or
add
aas
leave
testl
jg
push
add
jae
xor
xchg
mov
cmp
push
test
inc
call
dec
mov
push
rep
outsb
jl
cmp
lcall
add
loopne
jno
push
lcall
sub
cmp
mov
mov
insb
cs
xor
icebp
enter
rcl
xor
xchg
cli
sub
inc
ret
fldpi
into
int
inc
and
mov
mov
push
add
inc
test
xchg
cs
arpl
scas
call
fistl
leave
enter
out
inc
loop
mov
pop
daa
adc
pop
js
jns
call
cmp
dec
neg
push
mov
cmp
aas
js,pt
cmp
xchg
cltd
jb
lret
daa
mov
icebp
decl
mov
fimuls
jecxz
pop
in
subl
add
sahf
xchg
test
insl
ss
fbstp
inc
out
sub
cs
add
add
xchg
fs
dec
cltd
out
enter
inc
mov
into
pop
sub
adc
scas
mov
bnd
inc
push
mov
int
adc
cmpsl
dec
xchg
mov
test
es
jns
xchg
sub
or
repz
dec
pop
xor
pop
call
addr16
in
leave
mov
and
es
sti
aaa
add
icebp
and
xchg
add
icebp
add
xchg
movsb
scas
xchg
or
jae
inc
arpl
push
cmp
or
or
aam
jg
inc
sbb
outsl
rclb
cmp
test
push
lock
leave
sub
mov
std
add
mov
test
cmpl
fdivs
loope
sbb
or
cmpsl
xlat
jp
sbb
push
mov
add
pop
std
cli
pop
bound
pop
in
cwtl
jl
data16
jl
aaa
mov
adc
inc
add
xchg
xchg
fildl
xchg
xlat
inc
mov
aam
pop
int3
mov
ficoml
dec
orl
out
pop
das
sbb
adc
pop
cmc
xchg
or
jp
add
sub
ds
scas
xchg
cmp
cmp
xchg
movsb
pushf
sahf
xchg
jno
xchg
adc
fnstenv
out
push
stos
mov
push
adc
mov
jno
cmpsb
test
movsb
repz
dec
xchg
and
mov
add
lds
insl
scas
ja
mulb
addr16
fidivrs
push
push
sti
cwtl
in
pop
mov
cltd
loope
aam
mov
mov
mov
daa
jae
add
cmpsl
lods
ljmp
mov
outsl
push
bound
rorb
dec
mov
mov
imul
repnz
negb
jg
jb
rolb
inc
sbbl
or
jp
clc
xor
or
pop
cmp
lcall
cmpl
clc
emms
push
mov
int
mov
inc
pop
in
imul
cmc
mov
sbb
lods
xchg
out
stos
test
js
adc
andl
push
add
or
repz
push
dec
xor
pop
sub
cltd
das
xchg
push
out
push
and
loopne
inc
xchg
mov
xchg
sbb
ret
clc
adc
dec
mov
pop
mov
xchg
imul
mov
ja
mov
test
or
and
sbb
insl
sahf
or
orl
repz
insl
cwtl
push
int3
dec
insb
stc
fwait
xchg
add
xor
adc
stos
mov
in
fwait
xchg
insl
scas
xchg
jg
inc
xchg
lret
add
nop
fistpll
and
lcall
aas
xor
daa
push
pop
xchg
add
mov
orl
and
bound
push
inc
data16
inc
or
sub
lret
cwtl
rcrb
xor
mov
sti
clc
push
out
jp
lds
sbb
sahf
lahf
jae
rcrl
enter
inc
mov
shll
dec
lods
pop
adc
mov
mov
aad
mov
ljmp
jl
cld
aaa
jl
push
mov
mov
add
push
dec
push
mov
cmc
arpl
or
xchg
bound
dec
mov
and
adc
adc
sbb
out
leave
movsl
loopne
fwait
or
outsl
sti
jno
lcall
fistps
loopne
push
fldt
dec
sbb
cli
repnz
mov
outsb
or
or
mov
adc
pop
sti
sbb
adc
xchg
ja
jl
mov
or
adc
addl
xor
pop
arpl
jl
cmp
xorl
add
cmpsl
push
les
dec
xchg
adc
test
in
push
std
mov
pop
fstpt
pop
cmc
dec
mov
mov
jl
cmp
mov
and
mov
xchg
mov
inc
jmp
popf
dec
add
pop
test
loop
je
ljmp
xchg
cmp
push
addr16
pop
xor
push
or
add
pop
add
pop
sbb
pushf
mov
add
and
xchg
xchg
push
in
gs
loope
in
stos
nop
mov
jo
movsb
dec
jno
es
aas
int
pop
xchg
repz
push
dec
shlb
xor
mov
dec
add
outsb
pusha
movsb
cmpsl
xchg
dec
add
lahf
iret
pop
adc
pop
je
test
arpl
xchg
test
scas
inc
xchg
divb
and
xchg
dec
inc
add
add
lock
dec
outsl
xchg
sub
adc
xchg
lcall
mov
xchg
cld
mov
sub
xor
in
mov
repz
add
hlt
sub
negb
aam
cmpsl
mov
je
jg
add
test
gs
in
jecxz
ret
cmp
add
dec
in
dec
div
dec
xor
mov
mov
xchg
xchg
pop
or
divps
xchg
shl
aaa
test
sub
les
cwtl
cld
leave
add
insb
movsb
dec
mov
pop
sub
rcrl
push
adc
xlat
sub
add
outsl
xlat
add
push
fwait
mov
pop
inc
insl
pop
mov
ljmp
sbb
aam
sti
test
aas
mov
add
ljmp
fwait
mov
pop
imul
xor
psllq
mov
aam
leave
inc
repz
movsb
pop
mov
add
and
mov
mov
int
xchg
xchg
bound
inc
std
xchg
mov
int
lahf
mov
jecxz
hlt
push
arpl
pop
adc
arpl
or
test
xor
in
int
pop
mov
mov
movsb
ja
call
outsb
xchg
xor
xchg
fwait
sti
add
lcall
pusha
shrb
insb
inc
or
jmp
fildl
jg
pop
fsubrs
clc
int
movsl
testb
shll
jno
outsl
cmp
xchg
and
aam
add
popf
add
pop
in
mov
out
dec
mov
jmp
cmp
cltd
ja
dec
xchg
mov
ret
jnp
sbb
dec
pop
push
sbb
cs
mov
idivl
lds
sbb
test
jnp
cmp
mov
jl
push
lock
ja
cli
stos
xchg
or
sub
ja
fnstsw
stos
scas
or
aas
xor
mov
insl
dec
mov
stc
cmp
mov
sbb
fildl
roll
jecxz
sub
jo
cmp
dec
in
fwait
dec
cmc
mov
mov
stos
push
addr16
or
fcompl
cmp
cmp
or
add
pop
add
sbb
mov
mov
loope
add
fldt
and
ds
pop
pop
test
ret
sbb
fdivrs
pop
loop
bound
mov
jge
ret
adc
inc
push
cld
jmp
mov
dec
movsl
inc
and
ja
sub
push
or
xchg
idivb
inc
sub
jmp
inc
jg
stc
xchg
mov
xchg
cmp
cmp
dec
mov
int3
xor
js
test
xor
adc
ja
lea
jbe
addr16
iret
push
sub
stos
mov
daa
cld
ss
xchg
mov
jg
mov
and
sbb
fsubrs
dec
out
outsb
mov
xchg
xlat
cmp
insb
in
push
pop
inc
aas
and
or
jae
dec
jle
pop
in
lods
sbb
cmp
ja
sub
sbb
mov
mov
or
imul
dec
test
call
leave
dec
insl
movsb
outsl
inc
mov
testb
cmp
insl
sub
inc
inc
push
cli
xchg
int3
xchg
inc
sahf
or
xlat
imulb
or
out
pop
sarb
pusha
mov
mov
mov
jo
xchg
movsl
cs
or
push
mov
pop
or
dec
test
xlat
mov
rclb
dec
cmp
mov
sbbl
aas
pop
mov
cmpsb
adc
adc
sbb
arpl
es
mov
mov
inc
sar
aas
sub
xor
ret
jbe
sub
pop
ret
ss
adc
jp
adc
js
mov
dec
out
loop
pop
ficoml
shll
negl
cmp
dec
or
xchg
add
xlat
sti
hlt
enter
repnz
iret
mov
xchg
pop
or
test
xor
mov
adc
dec
or
std
outsl
mov
xchg
es
or
mov
dec
jae
pop
xlat
pop
lcall
xor
mov
cwtl
jge
cmp
fs
cmp
mov
pop
testb
imul
and
fwait
mov
mov
xor
sbb
pop
jno
sbb
jnp
jmp
mov
push
test
jnp
fisubl
insl
leave
or
cs
mov
inc
ss
cmp
mov
pop
and
push
negl
add
jnp
loop
fwait
jecxz
xor
pop
and
je
dec
add
cmpsl
fwait
hlt
fists
dec
in
cs
in
ds
sbb
jg
rcl
inc
fsubs
xor
push
dec
insb
push
insb
js
lret
cld
lcall
add
dec
xor
daa
jle
sbb
pop
xor
sub
push
inc
sub
dec
dec
sarl
lea
sbb
and
aad
ret
xor
adc
xchg
mov
ficoms
push
cmp
mov
mov
shlb
pop
lods
fadds
lock
mov
fdivp
mov
addb
inc
cmp
mov
js
jg
mov
dec
lret
outsl
out
inc
adc
cwtl
lret
fld
xlat
test
in
cli
std
hlt
jmp
jo
test
das
cwtl
in
or
outsl
roll
popa
das
cmp
movsb
ret
sbb
enter
jmp
lea
inc
or
scas
mov
in
lods
addr16
test
addr16
and
adc
xor
popa
pusha
push
in
or
pusha
mov
jecxz
mov
push
nop
pop
push
out
xor
pushf
fiadds
cwtl
and
rorl
and
jle
adc
pop
mov
inc
inc
dec
aam
mov
xor
xchg
test
xor
aam
jb
jmp
dec
es
arpl
fldt
lock
mov
jne
jae
and
sbb
into
scas
xchg
lahf
mov
push
faddl
lods
xchg
mov
mov
xchg
inc
mov
sbb
movsb
clc
push
jg
xchg
cmp
stc
xchg
push
add
into
aad
jae
int
xor
int3
leave
scas
and
jbe
jecxz
leave
mov
xor
pop
lods
bound
stc
mov
mov
cmpsl
xchg
or
lds
sbb
outsl
sbb
out
mov
mov
in
dec
fs
stos
fcoms
mov
and
lahf
loop
psrad
fimull
aad
pop
pop
sbb
inc
movsb
out
fwait
dec
jmp
adc
scas
fwait
adc
pop
xchg
pop
insb
xlat
ljmp
cmp
push
das
or
push
push
xor
pop
test
or
push
fstpl
inc
adc
addr16
fistpl
inc
icebp
pop
push
cwtl
jb
aas
pop
adc
jb
jmp
push
movsl
and
fadds
xor
mov
popa
jl
out
mov
and
cmp
aas
sbb
xchg
ffreep
sub
stos
push
lret
cmp
pop
lods
sbb
std
and
push
dec
dec
jecxz
jnp
in
mov
mov
pop
insl
lahf
pop
pop
ja
mov
repz
loop
xchg
repz
cmp
cwtl
mov
pop
sub
push
int3
jnp
or
cmp
mov
pop
mov
pop
insb
push
aas
jno
mov
ficoml
int3
int3
outsb
xchg
cmc
dec
movhps
and
xchg
and
frstor
data16
push
daa
dec
mov
mov
adc
popf
sbb
out
push
mov
loopne
adc
imul
push
jb
mov
push
es
mov
sub
cmp
ds
cmp
ljmp
push
xchg
cs
in
and
cmp
fidivl
clc
dec
dec
andl
jnp
xlat
dec
lea
jb
jecxz
paddq
cmc
pop
cli
pushf
shl
xchg
lret
fildl
push
pop
adc
inc
in
sarl
jbe
adc
sub
rolb
xchg
push
aam
push
inc
movsl
scas
sub
add
mov
sbb
pop
xchg
test
xor
loope
iret
out
pop
mov
iret
inc
cwtl
cs
rcrl
clc
faddl
cmp
repnz
inc
pop
push
xchg
popl
adc
or
or
cs
xor
cmp
push
sahf
ja
xchg
out
xchg
rcll
cltd
mov
xchg
test
mov
jp
out
cwtl
pop
or
xchg
lcall
rolb
std
or
sub
movsb
mov
or
pop
adc
pop
cltd
decl
cmpsb
vorpd
xchg
sub
jnp
cli
repz
ss
out
testl
mov
ds
mov
push
xchg
dec
sti
mov
mov
in
fistl
loope
rcr
dec
cmp
stc
adc
fnstsw
int3
incb
push
adc
mov
ja
movsl
sbb
cmp
mov
data16
test
mov
ja
add
fs
add
js
and
rclb
mov
cld
loop
movd
jmp
ja
in
and
add
pop
cli
push
mov
call
dec
test
scas
push
push
pop
mov
or
stos
xor
adc
add
out
test
jae
movsl
jg
dec
loopne
inc
js
stc
cld
fcmove
inc
cwtl
sub
mov
xchg
mov
dec
push
sub
sub
xor
or
stos
lock
imul
dec
mov
test
push
es
aam
push
and
pop
push
mov
movsl
jae
cmc
mov
dec
dec
add
mov
cmpsl
stos
pop
sbb
pop
inc
ss
mov
pop
and
test
xchg
jne
mov
mov
inc
movsl
jl
scas
mov
pop
nop
add
ja
jl
jle
lock
js
sub
xchg
movsl
sti
das
popa
cwtl
cmp
inc
mov
aam
jnp
sahf
xor
add
aas
daa
lds
rcrl
add
adc
jb
loopne
nop
mov
push
lds
mov
push
dec
aaa
dec
enter
sbbl
pop
push
clc
roll
cs
xchg
iret
lea
in
in
inc
andb
fsubl
fstps
and
js
int
addl
sub
inc
adc
int3
or
js
rolb
pop
mov
popa
js
repz
aas
test
mov
fmull
scas
jmp
inc
push
fwait
rorl
inc
pop
mov
lea
and
adc
sub
xchg
cmp
jecxz
mov
dec
pop
and
nop
loop
mov
das
and
ret
lock
dec
shr
and
dec
pop
repz
pop
and
pop
ds
in
mov
inc
leave
das
mov
int
nop
test
cmc
xchg
mov
das
mov
mov
dec
xchg
lret
pop
ljmp
je
and
mov
rcll
cmp
lret
mov
negl
out
dec
shrb
pop
sar
push
and
dec
jge
and
mov
jp
push
lcall
lea
dec
orb
or
data16
clc
stc
jle
jecxz
bound
xchg
movsb
inc
ds
orb
mov
adc
xor
test
inc
outsl
in
adc
dec
roll
cmp
aam
inc
push
or
sub
imul
push
lods
push
xor
xchg
rcrl
mov
mov
jl
jns
jmp
xor
mov
adc
repz
xorl
xor
vrndscaless
lret
iret
xchg
lds
inc
out
pop
loop
inc
and
aaa
cmpsl
lahf
hlt
push
je
inc
xor
push
adcb
push
inc
add
mov
jmp
adc
xchg
mov
jmp
xor
dec
and
dec
cmp
xchg
dec
lods
mov
aad
test
stos
cmp
out
in
sti
mulb
movsl
lret
mov
jp
xchg
or
mov
jge
xchg
test
mov
mov
jnp
mov
jns
dec
lock
daa
cli
push
fcmovbe
push
pushf
or
int3
mov
dec
inc
inc
in
out
mov
adcl
mov
repz
or
cmp
sbb
sub
mov
pop
in
sti
test
and
mov
mov
sbb
mov
nop
xor
and
clc
mov
sbb
testl
outsl
shl
inc
test
out
loopne
orb
sub
jmp
push
pop
pop
out
push
outsl
out
ret
lock
and
enter
adc
add
dec
xacquire
and
jmp
sbb
add
iret
sub
cwtl
lods
in
jnp
scas
adc
mov
sbb
jbe
pop
lock
enter
xchg
outsl
mov
push
jle
push
pop
pop
and
xchg
out
hlt
pop
jecxz
jmp
jae
mov
aas
movsl
add
xor
sub
adc
push
mov
mov
xor
das
jg
ss
data16
icebp
int3
jle
dec
add
int
ds
jp
inc
jo
das
mov
imul
lock
pop
mov
sbb
rorl
xchg
enter
mov
and
add
mov
out
fsubrl
xchg
stos
fcmovnb
sbb
std
out
dec
dec
inc
fistl
mov
ds
into
popl
add
mov
div
sub
sahf
int3
xor
bound
outsb
je
aas
sub
arpl
lea
lret
dec
shrl
mov
shll
js
adc
xor
push
bound
pop
jge
imul
xchg
xor
push
cli
push
dec
les
jl
dec
daa
call
andl
jecxz
mov
out
ja
dec
es
mov
jmp
in
ljmp
cmc
xchg
dec
lcall
sti
sbb
inc
mov
push
out
and
jmp
mov
mov
pop
cmp
xor
sub
push
movsl
or
movsb
inc
es
push
jle
adc
add
scas
sbb
adc
sbb
call
and
fists
lods
cmpl
jg
das
dec
jecxz
pop
push
jae
jo
inc
xor
aaa
ja
push
inc
movl
shl
fisttpll
cmpsb
loope
dec
repz
test
out
scas
xor
icebp
mov
ljmp
adc
cmp
dec
fcoms
es
dec
sbb
test
and
es
pop
mov
push
repz
dec
jmp
xor
mov
jno
aas
add
repz
jbe
add
bound
es
loope
jp
leave
jmp
lea
sub
inc
fildl
out
pop
jnp
movsb
cmp
jge
pushl
dec
push
mov
test
jg
pop
test
ret
xchg
mov
div
std
xchg
sbb
into
mov
lret
lods
cmp
or
adc
ss
jae
dec
lret
cs
mov
xchg
mov
stos
or
stos
std
lcall
mov
cld
scas
sbb
cltd
add
popf
push
repz
aam
mov
dec
repz
faddp
xchg
jno
nop
loopne
mov
popa
cmp
or
sbb
jno
arpl
test
and
push
lods
mov
mov
test
mov
hlt
ret
fisubrl
and
pusha
adc
sub
gs
adc
xor
dec
in
inc
push
add
fcoms
mov
fistpl
push
lcall
mov
jnp
mov
mov
cmpsl
mov
pusha
inc
xor
push
js
mov
testb
lods
dec
sub
mov
imul
dec
jg
inc
add
or
mov
mov
ret
aam
lcall
loop
dec
sbb
adc
add
movsb
call
sbb
or
sub
push
cmc
arpl
test
pop
repnz
clc
outsl
dec
fstpt
push
mov
daa
and
add
pop
jl
cmp
fstpl
out
sbb
addps
loop
loop
test
dec
leave
fbld
xchg
fldcw
push
lret
mov
jecxz
cmpsb
add
adc
lock
push
lcall
add
mov
and
sbb
push
sti
int
cwtl
lahf
shrl
negl
inc
mov
jge
out
mov
xchg
dec
and
mov
scas
mov
mov
test
subl
pop
pushf
pop
jns
cld
aam
mov
mov
inc
mov
add
pushf
jg
fnstcw
mov
push
jns
pop
loopne
push
pop
and
mov
cld
stos
pushf
dec
cli
adc
pop
mov
shr
dec
xor
add
dec
out
push
and
repnz
mov
sti
pop
popf
sub
cwtl
scas
push
pop
xchg
push
jae
mov
xchg
fnstenv
addr16
ss
mov
pop
inc
adc
mov
pop
dec
cmp
mov
popf
ljmp
push
lret
pop
cmp
mov
xchg
fildl
out
cmp
xor
jg
and
cwtl
jns
cmp
rcrl
and
data16
dec
mov
fmul
aam
sub
add
push
xchg
dec
pop
adc
push
stos
int
icebp
rcll
xchg
push
out
stc
and
sbb
mov
insb
sbb
jl
inc
adc
add
ret
movsl
lret
imul
stos
mov
ret
int
mov
enter
inc
mov
adc
je
es
mov
fnsave
mov
outsl
adc
push
repz
pop
cltd
addl
sti
xor
ja
sub
push
pop
sub
jmp
sbb
stos
ljmp
insb
out
xor
mov
and
or
push
aad
loope
dec
orl
sub
dec
test
js
or
xor
cltd
mov
loope
shlb
pop
dec
add
arpl
rclb
sbb
jne
sbb
subb
loopne
inc
cld
aas
cmp
mov
testb
inc
add
jnp
or
pop
stos
mov
es
cld
add
mov
scas
jae
test
dec
add
cmpsl
repnz
lret
fdiv
jb
sbb
lcall
cmp
rcrl
push
adc
xchg
fisubrs
mov
dec
jle
imulb
arpl
nop
je
push
lret
movsl
lock
popf
cmp
dec
lods
mov
movsb
pop
loope
pop
push
popa
xchg
addr16
push
xor
push
mov
in
mov
jp
xor
mov
and
pop
mul
dec
pop
pushf
push
mov
or
inc
aas
dec
add
or
cmp
repz
inc
movsl
mov
nop
not
xchg
in
js
sbb
lahf
lret
mov
add
push
xor
add
mov
mov
sbb
nop
mov
mov
mov
mov
lods
pop
jg
insb
outsl
adc
out
xor
and
push
movsl
push
mov
sbb
add
sub
cmp
test
adc
repnz
or
sub
lods
adc
jle
inc
movsb
daa
inc
daa
test
shll
cmp
leave
push
xchg
inc
jns
clc
dec
imul
sub
or
jge
pop
loopne
imul
rcrb
sbb
xchg
das
jae
cmpsb
inc
or
dec
jecxz
loope
jbe
jl
std
out
mov
mov
xchg
movsb
push
cmp
addr16
xor
mov
push
mov
out
push
or
fwait
xor
add
test
roll
nop
ret
pop
sbb
pop
adc
sbb
sbb
xchg
sbb
sbb
ficompl
push
aad
rcll
cmp
dec
cmpsb
aas
push
lahf
inc
and
pushf
jl
in
mov
cmp
inc
jmp
ja
das
inc
dec
cwtl
ret
loope
inc
imul
mov
pop
jae
filds
shll
push
adc
xor
dec
lcall
pop
xlat
scas
jae
lret
inc
or
dec
es
cltd
mov
cli
push
enter
outsl
fidivrl
xlat
int3
xchg
sbb
ret
es
sbb
add
mov
fiaddl
xchg
enter
cmpsl
rcrb
je
outsl
in
imul
aas
ret
scas
nop
or
xchg
cmp
ret
jp
dec
stos
xchg
movsb
pop
mov
out
push
dec
je
orl
or
mov
mov
mov
fwait
or
adc
popf
inc
test
push
idivl
hlt
inc
in
xchg
push
pop
popf
rcll
mov
ljmp
inc
ret
adc
push
xchg
sub
nop
int
cmp
pop
mov
pop
sbb
dec
lea
pop
push
and
jb
xchg
repnz
jp
jp
inc
inc
pop
mov
int3
ja
dec
mov
scas
hlt
mov
loop
mov
cmc
xchg
enter
push
fsubs
stc
sub
das
popa
cld
mov
mul
cld
data16
or
inc
lods
mov
scas
sti
mov
fistl
push
enter
xchg
das
shlb
data16
fidivs
dec
sub
mov
add
pop
pop
and
and
shrb
sbb
cmpsb
decl
mov
pop
enter
fs
inc
mov
mov
xor
mov
movsb
pop
jnp
ljmp
add
xlat
mov
xchg
test
ljmp
dec
dec
jmp
sarl
mov
jns
xchg
in
stc
subl
ds
enter
add
add
loope
ret
pop
daa
push
iret
mov
out
fidivrs
das
aas
xchg
sbb
push
sti
mov
stos
or
xor
cld
popf
lds
push
lahf
sbb
or
adc
adc
orb
iret
adc
loop
daa
jmp
test
and
stos
fildll
mov
idivl
int3
sarb
lret
mov
sbb
in
fidivl
cmovl
and
sub
xchg
or
inc
add
dec
jo
ret
mov
cli
pusha
xchg
dec
push
int3
mov
pop
ss
outsl
cld
cld
jb
pop
aam
mov
mov
pop
dec
lock
lea
arpl
fwait
dec
fisttps
loope
xor
fwait
in
imul
test
test
insb
pop
lods
fwait
aaa
jmp
mov
push
les
add
rorl
jecxz
cli
add
cltd
xchg
xor
pop
test
aam
lcall
pop
sbb
stc
mov
jb
cmp
push
mov
cmp
dec
push
arpl
sti
pop
inc
push
mov
out
insl
nop
pushf
aam
and
ja
push
sub
push
inc
addl
xor
add
fmulp
aaa
adc
ret
dec
test
out
jl
xchg
sbb
lea
mov
fwait
lods
jp
or
int
movl
push
jae
push
ret
dec
aam
mov
test
gs
dec
mov
arpl
mov
cwtl
fmuls
push
lcall
shrl
loopne
sub
lea
inc
and
mov
call
mov
push
cmp
dec
sbb
xchg
jg
leave
sub
inc
or
xchg
movsl
xchg
sbb
cmpsb
inc
xor
sbb
sub
xchg
push
test
ret
outsb
sbb
and
cmp
enter
xchg
out
jae
cwtl
add
add
xlat
add
xor
cltd
push
daa
aad
mov
pop
ds
pop
xchg
add
mov
shlb
cmp
jecxz
mov
xor
imul
repz
std
inc
std
add
fxsave
add
push
xor
lret
cwtl
jne
xor
leave
mov
mov
mov
sbb
mov
pop
test
mov
lret
outsb
mov
mov
mov
lods
mov
cmp
int3
push
mov
xorl
lds
sub
and
inc
data16
push
clc
les
enter
sarb
cmpsl
inc
xchg
lret
push
ds
lahf
addr16
cmp
ljmp
enter
dec
and
mov
mov
mov
dec
lret
or
arpl
fstps
mov
lods
add
push
inc
mov
insl
psubq
xor
mov
xor
mov
inc
scas
rcll
add
out
loop
jl
pop
jb
out
mov
jl
int
nop
daa
mov
pushl
xor
xor
inc
mov
dec
push
xor
xor
das
dec
test
push
adc
sbb
xlat
mov
cmpsb
mov
shll
mov
dec
push
repnz
jecxz
test
mov
icebp
pop
cmp
xor
in
jge
mov
xchg
push
lods
jge
incl
sbb
push
popa
mov
data16
pushl
sahf
xlat
call
movsb
mov
dec
popf
inc
faddp
repnz
adc
test
test
jno
sub
sbb
arpl
push
mov
cmp
jg
and
add
stc
pop
lea
jbe
dec
add
roll
movsb
sub
lret
xor
jge
sbb
sbbl
sti
das
cli
scas
add
and
xor
sbb
inc
addr16
std
insb
sarl
sub
and
or
into
ja
dec
inc
fisttpl
xchg
and
movsl
and
cmp
mov
and
and
cmpsl
xchg
cmpsl
xlat
xor
inc
rolb
int
mov
xchg
and
inc
xor
xorb
jo
inc
sub
push
xor
push
nop
out
int
mov
ds
mov
popl
inc
outsl
mov
test
dec
das
rcrb
sbb
in
push
cmp
loopne
pop
dec
fwait
pop
out
pop
sub
or
lods
and
dec
test
mov
push
mov
movsb
in
xchg
js
lfs
and
xchg
rcr
xor
popl
jae
gs
dec
ds
mov
arpl
dec
lods
addl
sbb
sub
mov
hlt
mov
in
add
data16
push
mov
mov
mov
mov
pop
mov
and
adc
cmp
adc
sbb
xor
loopne
pop
or
push
push
sarb
xlat
in
or
lahf
sub
inc
pop
stos
stc
xchg
scas
adcb
mov
xchg
sets
fbld
pop
ljmp
add
add
add
arpl
or
dec
lret
sub
dec
xor
xor
dec
cmp
cld
addr16
ja
push
int3
mov
mov
lcall
in
mov
jno
fucomi
aaa
push
lods
into
gs
out
mov
lods
xchg
mov
dec
xlat
cwtl
out
sbbl
jb
daa
pop
ds
out
inc
gs
add
bound
cwtl
jg
push
push
arpl
sahf
addr16
sbb
jnp
jne
aam
jno
rclb
out
mov
and
mov
sub
das
push
inc
cmp
inc
pop
xchg
cmpsb
xchg
imul
sbb
lods
dec
jle
mov
push
mov
punpcklbw
leave
dec
pop
xor
pop
dec
pop
cmpsb
mov
cmp
loop
test
jge
movsb
push
inc
jae
shrb
adc
or
leave
pop
push
xchg
adc
rorl
dec
fmull
push
xchg
xchg
jnp
incb
movsl
mov
icebp
out
dec
insb
jmp
pop
fs
mov
jp
add
jmp
jle
jmp
adc
lock
inc
ret
jne
stos
jnp
das
adc
mov
jbe
push
cmpsl
xchg
adc
pop
push
sbb
sbb
sbb
scas
cmp
andb
and
and
add
sbbb
sub
clc
inc
xor
xchg
loope
pop
mov
cmpsl
icebp
jno
dec
sti
cmpb
ja
ret
sti
or
push
xchg
mov
jge
dec
push
adc
inc
push
test
sbb
out
adc
inc
dec
inc
pop
pop
mov
adc
mov
push
outsl
mov
and
xchg
pop
cmp
stos
and
aaa
roll
das
dec
lahf
sub
pop
jecxz
popf
gs
pushf
pushf
mov
cltd
xchg
outsb
adc
pop
scas
mov
lods
cwtl
jo
xlat
sub
pop
mov
inc
pop
insl
pusha
jmp
shr
cmp
shlb
in
stc
pusha
or
test
xor
adc
mov
out
fwait
jge
jge
lea
jge
outsl
out
scas
fs
test
mov
cld
sbbb
roll
xchg
add
jmp
mov
movsb
test
xor
in
inc
dec
loope
sub
mov
ds
dec
aam
push
int
or
testl
mov
xchg
mov
stos
decl
sbb
jnp
sub
inc
add
cltd
pop
arpl
movsb
repnz
cs
sbb
mov
dec
or
xchg
inc
pop
cmpl
or
cmp
cmc
adc
adc
pop
pop
and
in
test
test
pop
in
mov
inc
and
inc
and
inc
mov
jnp
leave
arpl
lcall
imul
sbb
jae
lcall
mov
pop
mov
clc
sub
cmpsb
pop
aam
push
test
movsl
jo
mov
sahf
lcall
adc
into
xchg
pushf
jg
xchg
cs
aas
xor
test
mov
mov
imul
mov
jle
decb
rorl
sbb
dec
or
aaa
insl
or
dec
hlt
xor
add
cmpsl
push
xor
fnstsw
cmp
addr16
mov
add
dec
mov
daa
int3
mov
lods
flds
das
or
andl
aas
pand
xor
add
dec
pushf
loop
fs
cmp
mov
mov
sti
xor
inc
std
push
dec
jae
test
fdivr
xchg
cli
imul
outsb
jb
pop
or
daa
aam
daa
fldt
stos
mov
lret
lods
scas
inc
cmp
mov
fdivl
xchg
imul
sbb
mov
daa
lods
imul
ret
mov
and
xor
sbb
pushf
inc
out
pop
loop
loop
test
mov
push
int3
mov
sbbb
shlb
ret
mov
inc
into
mov
add
cmp
inc
js
in
fdivl
mov
sub
flds
in
pop
or
adc
push
repz
test
cmp
mov
jge
sbb
dec
imul
fiadds
mov
loop
scas
mov
mov
jg
dec
adc
imul
in
push
sbb
cmpl
cmp
xchg
cmp
adcb
and
loope
pop
mov
stc
pop
cs
mov
jae
mov
hlt
adc
inc
jb
lret
stos
cli
sbb
mov
sub
cwtl
or
outsl
sbb
xor
jle
movsl
inc
aad
mov
pushf
outsb
pop
mov
or
xchg
gs
dec
je
xorb
rcrb
xchg
cwtl
mov
pop
sub
rolb
adc
dec
lahf
dec
fs
outsl
fimull
lcall
aad
pop
pop
movb
scas
test
sahf
mov
dec
dec
movsb
xchg
in
sarl
stos
jbe
push
add
or
cmp
mov
repz
sbb
jmp
mov
cmp
push
cmp
cmpsb
fs
inc
inc
mov
xor
or
xor
cmpsb
scas
xlat
mov
xchg
imul
jmp
adc
push
aad
jge
out
ds
shr
push
sub
cmpsb
mov
jle
leave
cmp
js
pop
stc
test
jl
adc
mov
mov
xor
mov
shrb
and
aaa
outsl
ja
fsubs
push
xchg
add
adc
adc
int3
xor
cmp
add
add
mov
xchg
orl
adc
mov
movsb
rorl
rorl
push
cmp
mov
adc
es
cld
xor
aaa
and
je
ja
mov
sbb
loope
pop
aaa
sbb
xchg
test
xchg
insl
cmp
push
mov
nop
push
cmpl
sete
call
unpcklps
and
pop
pop
call
stos
popf
cli
xor
mull
sub
cmp
ljmp
movsb
pop
daa
jmp
xor
dec
mov
cmpb
adc
xor
lahf
stos
cmpsb
xchg
dec
cmp
xchg
js
testb
sub
sub
or
imul
scas
lcall
jo
xor
xchg
sahf
xor
jg
call
push
cwtl
call
jg
notb
bnd
cmpb
adc
aas
daa
dec
push
out
and
outsb
mov
adc
push
fildl
xchg
add
pop
jae
xlat
rorb
inc
inc
inc
xor
cmc
xchg
pop
sub
ljmp
xchg
scas
and
pop
lret
iret
iret
js
hlt
mov
fisubrs
dec
les
cli
cltd
aas
fwait
sbb
out
cmpb
lds
sbb
xor
add
shlb
mov
hlt
jmp
arpl
or
in
popa
jl
ja
push
sub
test
imul
ja
orl
xchg
add
jecxz
push
pop
cmp
xor
fwait
in
mov
mov
pop
sbb
push
add
dec
pop
arpl
inc
push
in
daa
xchg
xor
insl
subb
sub
xor
pop
sbb
pop
lea
dec
inc
cmp
popf
data16
push
mov
loop
bound
mov
jns
fimull
cltd
ss
mov
cmp
sub
xchg
sbb
mov
xchg
add
sbb
jle
jp
jb
dec
sbb
test
sbb
sbb
movsb
sub
jmp
pop
pop
clc
mov
mov
inc
lahf
sbb
dec
jmp
pop
mov
aam
imull
sub
fldl
fidivl
popa
inc
pop
test
cmpl
jle
mov
or
xchg
sub
jecxz
dec
sbb
imul
nop
dec
xlat
sbb
add
xchg
mov
push
or
nop
mov
dec
sbb
lret
pop
pop
inc
sbb
xchg
mov
jns
cmp
adc
cli
xchg
std
scas
fs
movsl
ja
lahf
adc
lods
imul
xchg
lea
into
dec
inc
dec
pop
mov
lret
dec
lock
lods
pop
fistl
cmp
cld
jmp
add
insb
loopne
icebp
ret
inc
pop
jp
fisttps
dec
rcll
in
loop
inc
fisttpl
mov
push
mov
cmp
js
sub
mov
aam
mov
insb
xlat
movsb
lret
or
mov
ret
out
sub
cmp
insl
fnstcw
add
cltd
dec
loop
popl
and
and
dec
jb
aaa
cmp
pusha
pop
dec
push
lret
lret
aas
outsl
sbb
call
fisubl
insb
lock
adc
insl
jb
push
adc
rolb
xchg
pop
adc
rolb
or
enter
clc
loop
scas
or
jnp
xchg
mov
push
cmp
pop
jg
cli
add
xorl
push
adc
xchg
fsubrl
jnp
mov
and
jnp
sbb
pop
ficomps
dec
sahf
mov
inc
cmpsl
lret
hlt
and
cwtl
inc
iret
add
ljmp
pop
adcb
cwtl
push
cmp
mov
pop
jl
loopne
sub
xor
aaa
jnp
fidivrl
xchg
fbld
jne
sub
cmp
andb
adc
iret
stos
rcll
mov
addl
pop
mov
mov
add
negb
aaa
les
in
inc
mov
movsb
mov
rcll
les
scas
jg
aaa
fidivl
loop
icebp
das
mov
clc
jecxz
loope
mov
lret
push
sbbb
mov
pop
cli
xorl
scas
daa
std
rorb
pop
insw
icebp
ret
pusha
popa
dec
add
cltd
out
aas
dec
test
es
and
push
push
nop
repnz
arpl
add
pop
adc
inc
fwait
pop
add
sub
roll
xchg
mov
jg
xchg
mov
jecxz,pt
in
lods
cltd
jnp
jnp
mov
pushf
or
stos
xor
das
xor
cmpsl
and
add
and
xorb
sbb
mov
call
fld
jne
test
cmpb
cli
movsl
adc
cmp
orb
loopne
push
adc
fdivs
mov
cmp
or
jl
jl
push
sub
inc
lcall
pop
out
jecxz
jecxz
pushf
prefetch
insb
imul
add
sahf
insl
cltd
lcall
cmp
aaa
jnp
jne
sti
and
or
ret
stc
aas
cmp
andl
xchg
jge
push
pop
call
cltd
cmpsb
mov
push
sbb
and
lret
mov
mov
adc
andb
dec
mov
jge
pop
cmp
sbb
fadd
adcl
dec
out
xor
push
inc
xor
jae
dec
imul
push
shlb
mov
imul
scas
or
inc
movsl
xchg
mov
addl
movsl
loopne
and
dec
push
loop
push
out
test
sbb
sub
xchg
mov
lret
cwtl
sbb
cmp
push
sub
mov
push
sbb
ret
scas
mov
popa
push
mov
cwtl
gs
ret
add
dec
adc
pop
lods
adc
pop
movsl
mov
bound
lret
sahf
mov
int3
xchg
pop
push
inc
ret
cmp
push
outsl
fidivl
and
sbb
repnz
push
pop
and
pop
clc
mov
mov
sub
subl
add
stos
sti
push
lods
cmp
repz
mov
jae
dec
push
out
bound
fucomp
mov
mov
ja
aam
insl
cmp
incl
inc
push
mov
int
iret
dec
xlat
lods
out
pusha
mov
dec
mov
sbb
fisubrl
cltd
cmc
lods
adc
mov
add
jecxz
xchg
aam
call
sub
cmp
jne
in
out
scas
in
dec
xchg
push
scas
mov
adc
cltd
insl
pushl
insl
xor
ficomps
xchg
pop
xor
outsb
push
fldenv
mov
test
cmp
out
mov
cld
aam
loope
dec
pop
dec
xchg
adc
fwait
sahf
stos
negb
inc
int
ja
adc
mov
mov
cmc
outsl
add
sbb
out
push
pop
scas
sbb
pop
sbb
add
jns
call
int
stos
mov
xlat
push
push
mov
loope
stos
pop
inc
xor
inc
mov
cmp
xchg
repz
arpl
pop
stos
jno
push
inc
or
mov
ror
cmpsb
stos
or
pop
sub
cmp
pop
addr16
xchg
cmc
fldcw
and
mov
and
mov
ja
lds
mov
inc
fwait
cs
push
xchg
subl
add
cwtl
and
shll
out
scas
stos
inc
mov
adc
sti
cmp
cwtl
push
or
rorl
jmp
inc
mov
adcl
icebp
push
fnstcw
aad
xchg
enter
pop
bts
cmp
mov
ds
cmp
mov
mov
movsl
fs
xchg
push
lcall
lret
cmpsb
dec
mov
pop
fimuls
imul
push
and
push
jle
aam
or
xchg
xor
add
dec
fildll
jg
enter
and
negl
dec
dec
sub
call
or
lret
std
cs
jle
icebp
inc
push
cmc
xor
and
dec
jae
mov
dec
les
sub
add
popf
outsb
dec
or
adc
push
mov
push
mull
mov
stc
jnp
cmp
sub
lret
cmp
inc
and
push
subl
loopne
and
jmp
pushf
pop
jo
sbb
gs
push
daa
mov
push
cmp
ljmp
fiaddl
pop
incl
shrb
and
js
pop
out
mov
enter
cmp
rclb
mov
mov
cwtl
dec
pop
scas
add
mov
cs
ss
clc
sti
imul
adc
in
je
dec
sbb
add
addr16
adc
pop
inc
ficoml
movsl
mov
bound
ds
cmp
cmc
or
sub
fdivrl
jae
int
aaa
sarl
xor
lcall
stos
js
pusha
adc
insl
scas
adc
mov
push
iret
and
inc
or
stos
jb
ffreep
jno
cmp
aaa
mov
sbb
jne
push
hlt
cmp
and
pop
push
dec
pusha
pop
mov
xchg
rcr
mov
mov
xor
pop
add
push
fdivs
sub
addr16
incl
mov
jmp
inc
jecxz
addl
mov
decb
int3
push
and
mov
jo
stos
pop
push
out
repz
mov
sbb
imul
and
in
dec
sbb
xor
and
mov
cmp
adc
rorb
mov
aam
jnp
stc
mov
icebp
subb
cs
or
es
jp
inc
sbb
push
lea
jge
pop
loop
stc
leave
sub
mov
dec
cmp
addb
pushf
xor
pop
xchg
jp
lret
stos
mov
mull
fbld
cmp
lahf
and
dec
lods
movsl
cmp
mov
xchg
add
xor
fwait
popf
inc
mov
push
dec
dec
stc
jne
push
std
push
mov
inc
mov
dec
ds
addr16
aam
xchg
inc
out
pop
jb
adc
lret
and
mov
adc
xchg
in
jg
jbe
mov
jecxz
pop
xor
mov
sbb
add
aaa
dec
fisttpll
aas
das
addr16
mov
cs
ret
sbb
orb
jo
dec
jecxz
adc
inc
mov
fwait
stos
mov
mulb
lods
std
ret
mov
ret
fwait
stos
das
cwtl
adc
movsb
into
sbb
fwait
bound
inc
pop
mov
mov
outsb
or
inc
dec
call
jge
xchg
push
inc
cmp
and
sbb
mov
xchg
mov
push
dec
lds
and
xchg
icebp
movsb
push
insb
sub
xor
cs
sub
mov
fisttpll
xor
pop
push
arpl
mov
push
mov
pop
inc
loopne
loopne
loop
add
xchg
pop
fsubrl
and
int3
sbb
push
daa
and
nop
pop
add
mov
lret
dec
sbb
xchg
jbe
pushf
mov
pop
scas
into
leave
fldlg2
into
mov
jge
imul
lahf
das
in
repz
ds
mov
pop
dec
in
jle
shr
ror
test
fsts
mov
add
fidivrl
lret
xchg
sbb
push
dec
test
sbb
lahf
and
arpl
mov
push
ret
mov
test
mov
dec
pop
sahf
leave
add
lea
mov
and
cltd
js
sbb
or
adc
loopne
sbb
leave
cmpsl
xchg
arpl
stc
cmc
movsl
ja
adc
fidivrs
fwait
in
in
fimuls
fcomp
std
cmpsl
sbb
adc
incl
jns
notl
sbb
bound
xor
sub
cmp
stos
jl
add
dec
mov
pop
adc
cld
adc
dec
push
and
mov
stos
dec
push
sbb
inc
pusha
mov
test
dec
inc
jnp
inc
icebp
pop
inc
fisubl
push
aam
lds
push
fnstenv
iret
xchg
popf
pop
mov
imul
add
xchg
xor
jo
das
and
sbb
fdivs
mov
in
push
mov
pushf
or
xor
in
popf
out
roll
sub
imul
ret
jae,pn
test
in
dec
repnz
cs
mov
out
pop
sbb
sbb
cltd
push
stc
cmp
std
xchg
mov
jno
mov
cmp
rcrb
test
fwait
sbb
cmpsl
notl
aas
push
push
rolb
in
inc
sub
addr16
loop
iret
movsl
add
jmp
or
lds
or
inc
test
sbb
and
clc
out
lcall
adc
lret
dec
mov
sbb
lods
xchg
cltd
jg
iret
test
dec
add
mov
cmpsl
sbb
dec
dec
jl
jmp
aas
mov
lea
xchg
adc
shll
jb,pn
adc
xlat
xchg
inc
mov
nop
pushl
push
xor
dec
cwtl
pop
nop
jbe
and
imul
rcl
in
pushf
jae
ret
orl
bound
add
inc
ret
ror
mov
mov
and
mov
mov
inc
dec
shlb
in
dec
stc
enter
mov
lahf
fisttpll
xchg
cmp
dec
mov
xchg
sbb
xchg
sub
sbb
rcrl
idiv
mov
cmp
iret
sbb
aad
xor
orb
pop
push
comiss
or
scas
lahf
xchg
aam
add
into
mov
jae
roll
arpl
loopne
adc
pop
push
cmpsl
and
jae
xchg
jle
or
imul
mov
clc
jp
jecxz
movsb
jp
gs
mov
jb
cmpsl
cmp
jecxz
sbbb
and
cmpsb
xchg
fwait
mov
jg
imul
cli
stos
inc
fwait
scas
lcall
hlt
cmp
xchg
cmp
test
out
jecxz
mov
sbb
mov
stc
in
nop
incl
popa
aam
ljmp
mov
mov
jmp
dec
or
mov
mov
outsl
xchg
push
insl
adc
std
imul
out
lret
das
dec
adcl
cmpl
mov
insb
testb
jae
gs
cmp
seta
insb
dec
pop
lret
lock
push
fcmovb
ds
dec
leave
sub
cmp
subl
adc
mov
clc
repnz
fldcw
mov
scas
aad
mov
mull
aaa
pop
fdivl
pmulhuw
inc
dec
pop
cwtl
mov
int3
jns
push
in
nop
mov
stc
add
mov
xchg
cwtl
and
xchg
subl
xor
mov
sub
inc
cmpsl
nop
or
out
pop
stc
out
push
pop
xchg
imul
push
or
lock
cwtl
mov
sti
xor
push
mov
cs
push
jl
adcb
imul
xor
adc
push
daa
add
clc
sub
xor
out
mov
test
xchg
mov
scas
mov
cs
add
fsubp
fsubrp
int3
inc
mov
xchg
push
popf
addb
pop
xchg
outsl
sarb
adc
loop
pop
ret
dec
lea
inc
or
xchg
clc
aas
cmpsb
fsubrl
out
mov
or
stos
and
sub
xchg
lcall
ja
adc
insb
and
mov
pop
andl
leave
arpl
lret
pushf
popf
mov
cmpsl
xor
test
incb
xlat
decl
xchg
sarl
enter
and
stos
sbb
push
xchg
jg
mov
or
cmp
and
fildl
push
dec
and
cmpsl
pop
sbbl
sub
mov
pop
ja
sbb
lock
mov
lret
push
pop
pop
lret
sbb
mov
insl
call
xlat
cld
outsb
add
mov
or
popf
adc
inc
shll
sub
imul
mov
addr16
add
jbe
inc
aaa
pop
mov
dec
jbe
sub
push
push
jnp
int
jg
aad
and
fildl
xchg
pop
jle
lcall
xor
or
les
outsl
mov
jle
adc
movsb
sub
mov
xchg
xchg
push
aad
icebp
cmp
enter
mov
jmp
mov
iret
cltd
xchg
je
push
xor
sub
jmp
sbb
jg
cld
xorb
jnp
inc
mov
addr16
cltd
mov
dec
sub
in
int3
xor
sbb
sbb
les
cmp
jp
sbb
ss
mull
pop
in
loopne
mov
test
cli
dec
jbe
mov
xchg
push
loop
lods
fwait
sub
push
xor
ss
xor
test
stos
xchg
test
add
mov
inc
inc
mov
xor
cmpsl
aas
das
cmp
popa
pop
mov
dec
fsts
mov
push
mov
sub
inc
pop
ficoms
aad
pushl
insb
sarl
cwtl
push
aam
add
dec
mov
shll
lods
xchg
cmp
jne,pn
shll
cmp
sahf
fldl
repnz
xor
dec
cld
jp
pop
xchg
adc
mov
stc
sub
mov
xor
push
and
mov
pusha
mov
adc
and
sbb
ret
or
insl
add
cmp
pop
lods
push
ds
js
mov
out
mov
cwtl
inc
and
stc
sub
out
lds
push
std
psllw
shrb
inc
mov
dec
outsl
imul
inc
xlat
testl
aas
adc
xor
aaa
lea
clc
mov
dec
mov
dec
pusha
mov
ja
mov
js
push
jb
mov
sub
push
pop
xchg
add
pop
nop
cs
xchg
and
mov
mov
flds
jae
xchg
fdivrl
int3
movsb
cmpsl
call
jb
sbb
icebp
inc
ds
inc
repnz
push
or
lret
scas
add
adc
rcl
out
and
rclb
inc
xor
std
xchg
dec
mov
and
dec
and
sbb
cmp
lret
rolb
jmp
inc
ret
pusha
pop
and
xchg
testl
xchg
mov
rcr
mov
daa
cmpl
test
lcallw
ljmp
dec
xor
or
shlb
outsl
mov
dec
pusha
sbb
jnp
push
push
jno
jae
aaa
stos
pop
sub
fwait
imul
pushf
imul
lret
sub
negl
pop
out
pop
int3
adc
fsubl
xchg
pop
pop
xchg
xchg
sbbl
or
adc
pop
aaa
in
pusha
aas
fistpll
testl
add
xchg
cmp
jge
jmp
cmp
cli
xor
jns
dec
and
push
jmp
push
sub
test
jl,pn
test
add
loopne
test
xor
mov
push
jl
outsl
test
dec
mov
jae
scas
les
xor
es
mov
mov
or
aaa
sub
cmp
rorl
std
mov
aaa
add
jb
inc
shl
cmp
mov
mov
add
add
or
jb
and
xor
insl
adc
adc
outsl
js
push
pop
xchg
cmp
shrl
imull
dec
push
int3
xchg
push
imul
adcl
or
divl
fisubrl
add
jmp
add
jl
mov
out
mov
testb
mov
xchg
imul
pop
mov
push
jo
pop
int
jb
jg
rcrb
cs
addb
in
lcall
push
mov
mov
sar
das
outsb
shr
insb
mov
cmc
inc
arpl
inc
test
das
pop
adc
mov
xchg
mov
cli
ds
pusha
cs
int
cld
cmc
mov
fwait
push
mov
es
mov
jp
ret
adc
sub
clc
inc
sub
add
aaa
xchg
ret
add
mov
push
in
cwtl
mov
dec
ret
sti
sub
test
in
jne
scas
inc
das
xchg
movsl
pop
mov
xchg
mov
insl
ja
in
aas
lret
dec
loop
xchg
scas
xor
lea
in
int3
iret
sub
adc
cmp
push
mov
pop
insl
or
aad
adc
ja
fisttpl
js
push
pop
xor
ljmp
idivl
bsr
repz
testb
sbb
daa
movsl
mov
mov
imul
xchg
sub
inc
roll
pop
lods
and
sbb
mov
cwtl
fwait
dec
cmp
movsb
adc
mov
xchg
jecxz
mov
push
pop
fwait
push
out
mov
xchg
divl
adc
in
add
int3
inc
sbb
fsub
add
pop
fistps
into
pop
push
sbb
outsl
dec
mov
mov
mov
test
in
ss
imul
fadds
xor
stos
push
pushf
mov
cs
push
xchg
adc
clc
mov
mov
test
mov
fdiv
stos
outsl
dec
aam
xchg
push
repz
scas
rolb
and
shll
adc
dec
fcomps
pusha
lock
push
xchg
imul
mov
lret
pop
shrb
pop
push
scas
flds
sti
adc
push
popa
dec
pop
jo
leave
js
mov
adc
pop
cli
mov
push
xchg
iret
dec
push
adc
jbe
push
iret
dec
stc
push
test
push
push
in
sbb
in
mov
les
jle
fisubl
ret
stos
lcall
xor
xchg
cmp
mov
insl
mov
sbb
and
movsb
ret
push
add
sbb
or
iret
pop
dec
orb
adc
mov
andb
jmp
mov
add
dec
mov
add
dec
into
cmpsb
adc
mov
inc
adc
and
jns
xor
movsb
mov
js
push
in
aad
test
mov
arpl
jl
mov
push
popa
mov
das
and
in
mov
mov
int
ficomps
outsb
das
dec
cltd
mov
pop
push
aad
out
push
jg
in
lret
sub
mov
test
out
cli
scas
shrb
push
mov
shrb
push
mov
pop
xor
jns
jl
aad
jnp
testl
mov
cmp
xor
mov
jae
pop
add
mov
pop
out
clc
jo
sti
int3
cmp
lret
mov
mov
dec
pop
addr16
rclb
out
adc
mov
push
jg
mov
ss
cmp
mov
js
sbb
sti
or
jnp
cs
mov
adc
or
jg
jo
and
addr16
mov
push
mov
jmp
dec
ret
out
xchg
jo
push
push
rcrb
pop
div
inc
xlat
in
ja
movsl
sub
jecxz
sarl
into
fists
sub
cmp
push
adc
and
mov
test
fsubs
or
or
push
mov
bound
lods
jbe
lods
mov
stos
out
aas
movsb
xor
stc
sub
mov
or
mov
out
mov
push
enter
gs
and
dec
adc
mov
sbb
sbb
mov
daa
imul
mov
jae
pop
mov
lea
inc
sti
inc
insl
push
jle
jne
mov
shrl
fildll
shrl
push
mov
mov
xchg
das
lahf
push
arpl
dec
nop
push
fwait
test
inc
sti
ret
pop
movsb
push
fs
mov
cmp
pop
push
push
call
call
mov
ficomps
xor
jns
cmp
push
idivl
xor
mov
inc
clc
outsl
push
cli
dec
push
and
out
xor
rclb
xor
outsb
xor
popf
and
jp
cmp
mov
and
sbb
cmp
xor
pop
test
inc
mov
hlt
lock
sti
rolb
je
out
icebp
jbe
mov
ret
gs
push
adc
xor
xchg
xchg
sbb
mov
pop
icebp
ds
add
clc
cs
mov
dec
ret
pop
and
xchg
jno
mov
das
cmp
mov
sbb
nop
pop
sti
test
push
lahf
scas
out
mov
jg
mov
outsb
cmpsb
rcll
jge
sub
inc
add
shrb
ret
addr16
mov
test
pop
clc
mov
jo
cmp
pop
adc
cmp
mov
enter
xchg
ljmp
test
nop
adc
dec
pusha
xchg
mov
fnstcw
mov
in
insb
ds
out
lock
and
lea
popl
mov
xchg
lret
mov
test
mov
and
push
lds
push
adc
insl
popa
inc
loopne
cmp
stos
jg
lds
shlb
rcll
jno
clc
jae
xchg
inc
vandnps
mov
mov
cmc
lcall
cs
fs
jl
push
test
syscall
adc
pop
roll
mov
or
jmp
push
push
sbb
mov
rolb
call
lahf
xor
std
sahf
mov
mov
sbb
fisubl
enter
jne
cmc
mov
mov
test
scas
fs
daa
shr
ret
mov
test
jge
sub
in
add
pop
loope
sub
mov
add
mov
movsl
sbb
mov
inc
daa
sbb
inc
movb
mov
add
cmp
push
aas
jp
or
xchg
lds
outsb
jb
cld
mov
pop
mov
pop
inc
pop
push
cmp
xchg
out
add
pop
xchg
sbb
dec
push
cmp
push
insb
xor
sub
sub
sbb
pop
inc
xor
jp
lods
dec
lods
and
cmp
test
or
push
sbb
aas
in
aas
mov
sub
push
shll
add
mov
mov
popa
clc
dec
push
es
mov
outsl
lcall
push
lods
fidivrs
stos
inc
mov
mov
arpl
cwtl
adc
fcoms
pop
icebp
pop
jle
xchg
cs
or
pop
sbbb
pop
xor
fwait
int3
test
or
add
std
dec
pop
insb
xchg
dec
mov
call
in
xor
adc
lea
xlat
mov
xchg
out
lcall
mov
inc
cmp
movsl
sti
adc
test
out
dec
jbe
pop
lcall
shlb
ss
mov
gs
xor
mov
add
loop
fwait
adc
dec
shll
add
fisttps
xchg
sbb
jb
pushf
xlat
daa
lahf
push
or
imul
rcll
jl
rclb
shl
cwtl
std
in
lds
ja,pn
dec
jecxz
pop
ja
sub
int
pushl
pop
out
xchg
aad
fldcw
jge
stos
adcb
lcall
aas
ret
and
shll
sbb
add
rcrl
lahf
mov
dec
test
cwtl
icebp
mov
mov
shll
push
xchg
movsl
jge
inc
push
add
xchg
roll
push
popf
push
add
icebp
cmp
cmpsb
add
fldcw
add
jle
adc
pop
jmp
ret
ds
test
xchg
xor
andb
rcl
sbb
sahf
jns
jbe
dec
stc
dec
cld
sub
imul
push
add
mov
in
sarl
adc
ret
cmpsb
push
shlb
mov
pop
cmp
nop
shr
ss
or
push
dec
test
xchg
insl
test
and
pop
jb
xchg
mov
sub
loopne
mov
sub
icebp
inc
mov
inc
mov
pop
imul
fisttps
in
jmp
in
jno
mov
cmpsb
call
mov
shl
mov
pop
jae
testl
mov
fs
int
cmpsb
ficompl
mov
pop
mov
icebp
dec
xchg
inc
mov
insl
push
cmp
es
lods
sub
or
mov
lods
fs
orb
and
inc
ja
ja
nop
std
sbb
int3
sub
mov
push
ret
or
andl
fiadds
stos
ss
insl
pop
cld
pop
xchg
inc
and
mov
test
sub
mov
jl
pop
int
daa
sbbl
dec
sti
sahf
pop
or
loopne
push
mov
dec
pop
sbb
mov
sbb
pop
sub
loop
add
cmp
push
int
in
int
inc
mov
sbbb
sahf
mov
in
ljmp
fsubl
mov
xor
mov
sbb
or
push
add
pop
les
nopl
cltd
xchg
cmp
pop
fnstcw
cwtl
cld
loop
lds
xchg
hlt
xchg
mov
aad
jg
out
addl
mov
mov
test
pusha
cmp
outsl
dec
mov
add
push
fwait
ret
std
dec
mov
mov
aas
sub
xchg
mov
push
mov
jge
mov
les
pop
inc
sbb
mov
jge
xor
popf
cwtl
mov
movsl
xchg
sbb
testl
fnstenv
repz
shlb
jnp
inc
movsl
lret
mov
sbbl
negl
test
mov
mov
adc
add
mov
mov
movsl
pop
lea
adc
fwait
inc
lods
das
pop
mov
arpl
inc
pop
lret
jmp
pop
mul
xchg
pop
sti
loope
add
mov
adc
aaa
nop
dec
mov
int
jecxz
ds
fisubrs
xor
dec
lea
push
notb
push
xor
icebp
push
dec
mov
mov
loopne
outsl
push
pop
std
mov
fwait
loopne
pop
mov
pop
fadds
jmp
push
orb
lcall
fs
mov
dec
fwait
lret
subb
ret
out
enter
sub
pop
and
stos
and
xor
orl
jl
je
sbb
mov
mov
data16
sbb
push
mull
cmp
lahf
inc
and
mov
inc
fildl
test
pop
pop
sbb
movsb
stos
xor
mov
push
clc
xor
cmp
xchg
aas
lcall
movsl
xchg
adc
stos
push
jo
jns
popf
arpl
push
jnp
int
xchg
sub
adc
jne
adc
mov
sub
and
xchg
mov
sub
mov
mov
or
dec
mov
cld
fwait
iret
and
add
lock
stc
icebp
xor
pop
add
push
jne
sub
out
dec
sbb
out
pop
outsl
add
movsb
cli
and
aaa
mov
test
or
lods
sbb
adc
test
lret
xchg
cwtl
lret
lds
and
bound
and
ja
cmp
loop
xor
adc
fcoml
sub
in
push
xchg
scas
outsl
add
sbb
pusha
ljmp
dec
jle
in
ds
mov
jp
mov
insb
test
and
sti
pop
dec
dec
nop
mov
cmp
add
fisubrs
and
adcl
cmpsl
dec
xchg
cmp
jp
jbe
mov
add
test
mov
and
shl
mov
je
in
dec
mov
pusha
in
push
imul
or
test
nop
pop
inc
popl
mov
lcall
cli
stos
xchg
sub
aas
loopne
pushf
mov
inc
lahf
pop
xorl
fistl
fistl
cmp
add
jnp
jb
or
mov
adc
jecxz
xchg
inc
call
aas
popf
ret
dec
shll
mov
add
xor
mov
leave
xorl
outsb
test
aas
push
in
pop
push
or
mov
push
dec
es
test
sbb
mov
lahf
add
mov
sti
adc
and
mov
mov
inc
hlt
sbb
setp
push
cmp
loop
and
inc
push
pop
pusha
bound
push
fsubl
adcl
dec
std
scas
and
mov
inc
lods
aaa
or
jns
xor
adc
xor
mov
add
cltd
mov
out
and
pusha
movsb
dec
sarl
dec
orl
popf
pop
cmp
and
subl
test
cmp
pop
inc
repnz
fsubs
dec
xor
xchg
sarl
inc
sbb
pop
dec
sub
pop
pop
aas
daa
cmp
jne
jmp
fadd
aaa
pushf
push
push
and
adc
lea
cli
sbb
dec
xor
adcb
jnp
jno
xchg
mov
add
jl
or
subb
xor
pop
mov
ja,pn
fistps
ss
push
into
xchg
fcoms
loop
daa
test
adc
loopne
cmp
imul
inc
dec
add
movsb
imul
xorb
pop
std
sub
add
pop
sbb
inc
mov
mov
cmc
or
mov
in
xchg
adc
lods
adc
jg
arpl
cmp
vcomiss
add
jb
nop
pusha
xchg
lock
xchg
sub
xchg
popf
pop
clc
sbb
mov
xor
push
or
jnp
xor
test
pop
test
push
mov
cmp
cmp
sbbl
int3
daa
jg
std
dec
mov
sub
fiaddl
in
or
insl
mov
aad
cmpsb
or
and
movsb
shl
push
lret
cwtl
cwtl
xchg
push
and
sub
lret
xor
subb
xchg
addl
mov
adc
xor
aaa
add
mov
push
ret
dec
cmpl
pop
sub
repz
pushf
movsl
stos
mov
xor
push
xchg
xchg
js
scas
andb
or
les
sbb
ja
hlt
icebp
psllw
push
std
dec
pushf
fsubs
and
sub
xchg
pop
and
cmp
push
pop
dec
hlt
xchg
adc
loopne
adc
mov
mov
jns
mov
or
mov
mov
lock
fcoml
lcall
and
cwtl
out
fisttpll
inc
fdiv
mov
movsl
xchg
test
test
pop
cmp
popf
loopne
dec
xchg
lret
sub
mov
sub
dec
push
mov
stos
fbstp
mov
lahf
cmpsb
xchg
aas
cli
pop
adc
ret
ret
popl
adc
into
into
fwait
cmpsb
inc
stos
sub
pop
stc
stos
push
mov
stos
cli
or
idivl
pop
jno
arpl
out
push
mov
jae
inc
push
jmp
mov
jb
jg
enter
and
xor
xchg
mov
add
cld
out
enter
cmpb
inc
mov
dec
mov
out
pop
jmp
cltd
ja
fisubrl
int3
pop
bound
jae
dec
sub
xor
mov
push
jp
iret
and
les
movl
rcr
sti
mov
and
mov
nop
jl
lods
sbb
ficomps
xor
xchg
or
loop
shrb
lret
stos
jb
push
jmp
neg
pop
ss
stos
jl
aas
push
cmp
insb
insl
jge
movsb
leave
or
jmp
jo
std
xor
mov
lcall
test
idivl
loope
jno
pop
ljmp
scas
push
mov
stc
xorl
jl
rcrb
out
dec
xchg
pop
movsl
bnd
in
aas
mov
stos
out
daa
pop
iret
inc
pop
inc
lcall
xorl
je
sti
int3
add
cmpsl
jo
inc
aas
pop
mov
leave
jmp
sub
test
sbb
stc
lea
imull
inc
cmp
sbb
mov
cmpsb
mov
mov
incl
cmpl
faddl
mov
mov
push
sbb
xchg
test
cmp
sbb
sub
es
xor
mov
adc
xchg
icebp
cvtps2pd
and
test
lret
ret
mov
push
mov
jmp
jns
sbb
xchg
test
ss
mov
xchg
dec
shlb
adc
into
adcl
fsubrl
ljmp
pop
je
aaa
and
enter
pop
jno
rcll
fcomps
mov
sub
test
sub
inc
stos
hlt
add
sub
add
test
fucomp
fwait
cltd
xchg
lods
sub
dec
and
pop
pop
cmp
scas
pop
fwait
adc
jae
xchg
jno
sbb
inc
and
push
lds
bound
push
xor
fadds
loope
lret
push
xchg
icebp
cmp
cmp
push
mov
cltd
cmpl
xchg
cwtl
dec
je
push
sti
mov
mov
fdiv
repnz
or
fstl
sbb
into
popa
xor
jg
cmpsl
sbb
inc
add
jnp
int3
jge
mov
mov
mov
sbb
sub
dec
shll
cmpl
add
mov
je
mov
jnp
adc
fs
loopne
cmpsl
jo
jnp
andl
movsl
pop
xchg
inc
roll
scas
mov
dec
lea
or
add
notl
ret
pop
fwait
sarl
cld
jl
sub
mov
jg
out
fldenv
imul
inc
es
xorb
out
rolb
mov
dec
aaa
mov
jle
scas
mov
test
shl
add
pop
jle
jne
cmp
inc
push
es
insb
cmpsb
adc
dec
jns
xor
neg
inc
or
pop
xor
dec
jb
xor
mov
sub
cmp
mov
jns
add
lret
insl
cld
sahf
xchg
les
cmp
ret
cmp
pop
add
sahf
jnp
enter
mov
dec
mov
aam
in
sbb
pop
nop
rolb
roll
mov
fucomip
sub
mov
orl
js
add
push
mov
dec
and
pop
cmp
or
and
daa
cmpsb
lret
int3
lahf
or
adc
ret
push
mov
addr16
mov
ja
cmp
push
cs
je
or
pop
cmp
mov
xchg
inc
sbb
std
lret
scas
cmpl
mulb
movsb
or
cltd
pop
imul
push
mov
or
mov
pop
nopl
mov
mov
rcrl
dec
scas
cmpsl
adc
jbe
shlb
stos
xchg
push
add
incb
sahf
imul
nop
inc
fcompl
and
or
cld
arpl
mov
cwtl
cmp
scas
adc
cltd
shrl
int
dec
outsb
outsl
dec
add
scas
out
decb
adc
jl
jmp
andl
ja
pop
xor
xchg
dec
lret
scas
sbb
mov
pop
adc
sbb
jg
and
cmp
incb
mov
pushl
push
test
inc
xchg
xor
mov
repnz
js
sti
test
dec
mov
xor
sub
jg
sub
mov
mov
add
pop
daa
mov
inc
pop
mov
inc
pop
fnstcw
push
mov
jge
jbe
pop
add
dec
imul
pop
rcrl
dec
loopne
lret
test
ss
cmp
push
lods
test
insb
in
test
pop
fnstenv
lahf
mov
adc
sbb
imul
jecxz
out
pop
cmp
mov
dec
js
dec
jp
push
xchg
adcb
xchg
ret
daa
mov
and
jnp
cmpl
jo
jl
into
jle
data16
mov
pop
adc
xchg
cmp
into
mov
addr16
icebp
out
push
bound
cmc
loope
es
std
pop
jecxz
lock
aas
push
je
bound
orb
in
fistl
js
cli
mov
repnz
insb
dec
cwtl
xlat
dec
push
xor
test
mov
lcall
dec
xchg
jae
dec
outsl
sbbl
adcb
fadds
sub
mov
push
and
int3
jo
or
jno
cmp
or
insl
ret
movsb
insl
test
ja
xor
adcl
dec
out
and
mov
xor
insl
fisubs
mov
jp
nop
dec
int3
push
dec
dec
mov
sbb
cmp
std
sbb
cmpsb
or
adc
test
jns
pop
fisttpl
inc
xor
or
sbbb
scas
or
sti
ljmp
mov
fwait
or
dec
inc
dec
sbb
cmp
bound
fsubp
cs
mov
adc
push
sbb
jecxz
jne
jns
fstl
mov
push
mov
xchg
clc
jecxz
repnz
stc
sbb
sub
xchg
adc
jp
jbe
jnp
mov
xchg
jb
cmpsl
lods
mov
add
mov
xor
mov
cmp
movsb
mov
loopne
inc
xor
mov
xorl
add
xlat
xchg
jmp
sub
pop
fdivs
xor
or
xchg
loop
imul
scas
sub
test
ret
inc
inc
inc
mov
scas
loopne
stc
imul
fistps
dec
cmp
push
dec
cmp
fdivrl
cli
mov
cld
mov
pop
add
les
es
cwtl
jb
rorb
repnz
xchg
daa
jne
popf
sbb
iret
xor
jle
pop
mov
sub
ss
mov
adc
enter
test
movsb
xlat
mov
mov
sbb
pop
movsl
sarb
stos
clc
dec
cli
push
mov
aaa
ret
movsb
pop
or
pop
lods
mov
movsb
push
push
xchg
pop
fists
fiadds
pop
xchg
push
push
aam
or
cli
jg
mov
fst
mov
or
fldenv
sti
mov
fildl
add
loopne
popa
cmp
imul
ret
lods
sbb
jnp
adc
fmull
push
lcall
stos
adc
adc
sbb
js
xor
js
sub
dec
lods
add
push
pop
popa
mov
jl
adc
mov
jmp
xorb
push
add
shl
mov
int3
fisttpl
loopne,pt
push
mull
seta
and
mov
aaa
repz
add
xchg
insl
xor
aam
outsb
and
in
lcall
rcrb
cltd
scas
pop
orl
dec
fstpt
pop
xchg
sti
inc
xchg
cld
xchg
adc
sbb
cmpsb
xchg
push
mov
jno
nop
cld
dec
clc
repnz
adcl
mov
jecxz
inc
xor
enter
movsb
xchg
pop
xor
nop
lds
ss
sub
mov
cwtl
jmp
clc
mov
mov
cmp
ret
call
mov
push
inc
fiadds
push
xorl
lock
or
aas
fistl
jno
lcall
xchg
js
jb
sarb
sbb
and
popa
xor
cmp
mov
sub
push
cmp
movsl
loopne
arpl
rclb
leave
sub
dec
lds
bound
aas
mov
cld
jno
add
lret
mov
shrb
loopne
or
js
push
jb
imul
sub
adc
pop
pop
add
es
or
xchg
xor
add
out
stc
ss
push
outsl
dec
test
xchg
xchg
mov
adc
and
adc
xchg
outsb
push
cltd
mov
popa
xchg
out
bound
imul
add
or
scas
setg
mov
xor
roll
fucomp
pop
ds
mov
add
jp
xchg
test
pop
dec
int
mov
cmpsb
orb
idivl
aad
dec
inc
push
xchg
es
notb
pop
in
push
aas
leave
in
push
cmp
inc
and
mov
mov
cmp
vzeroall
add
stos
xchg
pop
gs
aas
lcall
ss
xchg
pop
ret
hlt
sbb
or
adc
test
out
sub
xor
lods
cmp
lods
sbb
pop
dec
aam
aad
adc
ret
push
adc
push
pop
dec
fwait
jns
xchg
and
int3
pusha
lea
aas
sti
pop
mov
jge
lcall
pusha
stc
fbld
xor
mov
cmpsb
loopne
insl
jecxz
ss
int
pop
jle
stc
xor
cs
icebp
inc
clc
in
mov
pop
cli
xorb
jb
inc
popf
dec
bound
inc
add
movsb
push
mov
lods
push
add
pop
inc
rcrb
xlat
mov
sbb
mov
insl
int
adc
imul
push
mov
jl
mov
sub
stos
adcb
mov
js
lds
popf
ja
cmc
mov
pop
dec
mov
push
and
jo
test
scas
lea
jae
push
adc
dec
jbe
movb
mov
mov
add
cmp
mov
and
push
dec
hlt
or
xchg
repz
out
add
pop
test
and
dec
xchg
out
int
mov
sub
push
cmpsb
sub
push
dec
push
int3
and
popf
or
movsl
xor
scas
push
shr
mov
sarl
jmp
fs
mov
xor
mov
sub
movsb
mov
or
jl
push
fs
call
pop
mov
sti
pusha
clc
cmpsl
aaa
cltd
mov
mov
xchg
js
movsb
es
bound
dec
push
cs
gs
xchg
cmp
mov
ds
sub
add
daa
sbbb
vmovups
fdivs
ja
fwait
mov
lret
sbb
inc
dec
pop
daa
push
and
sbb
add
call
mov
xor
cmp
jne
xor
pop
mov
push
cli
sbb
aaa
fwait
out
push
sbb
insl
int3
lret
aas
inc
mov
pop
pop
icebp
cmp
dec
push
addl
add
es
mov
out
nop
daa
in
push
fistpll
add
push
je
pop
rcrl
push
dec
xor
mov
pop
les
dec
inc
imul
mov
aaa
jb
das
ds
cmc
mov
clc
inc
sbb
iret
xor
xor
add
mov
push
or
shll
cs
mov
sub
dec
sub
xor
inc
jmp
mov
outsb
out
push
mov
les
mov
pop
cwtl
out
jecxz
and
jmp
jl
iret
adc
bound
add
lahf
pop
push
cld
push
pusha
out
xchg
xchg
sarl
mov
cmp
addl
add
push
loopne
pop
xlat
xchg
stc
iret
sbb
adc
in
mov
pop
rcr
pop
imul
adc
mov
cmp
call
cmpsl
leave
pop
adc
sbb
and
mov
ficoml
mov
xchg
testl
adc
mov
push
push
shll
loope
int3
adc
add
adc
cwtl
mov
push
loop
mov
dec
dec
xor
aad
dec
sbb
sub
ss
test
mov
mov
mov
js
sbb
decb
cltd
mov
sbb
mov
push
cmp
sub
or
push
lods
jp
outsb
push
cmp
scas
xchg
push
mov
outsl
shll
add
inc
mov
jg
cmpb
mov
push
cs
jge
lea
cwtl
insb
das
cmp
mov
in
in
mov
xchg
pop
je
jae
mov
pop
stos
push
aas
pavgw
shll
push
insb
sarb
sahf
lcall
mov
sub
pop
inc
sbb
in
push
push
enter
int3
mov
fs
mov
lcall
dec
jge
addr16
pop
pusha
push
inc
dec
mov
filds
or
pop
repz
jnp
decb
shll
adc
sbb
aas
pop
mov
mov
sahf
push
push
sahf
dec
dec
jmp
lahf
out
orl
sbbl
xchg
adc
loop
xchg
je
lret
nop
pop
cmp
adc
pop
jge
test
orb
jbe
jle
outsb
scas
push
xlat
mov
js
les
sub
pop
aam
xchg
imul
test
test
or
in
test
test
inc
mov
lcall
cltd
cltd
in
popa
push
jecxz
jp
lcall
mov
pop
bswap
xchg
fstpl
aam
dec
pop
fistl
mov
lods
je
movsl
add
push
xchg
xorl
arpl
je
dec
mov
mov
sub
sar
jmp
mov
pop
js
arpl
mov
jecxz
adc
mov
shrb
push
decb
push
inc
mov
jnp
popf
inc
jle
fwait
sub
push
rclb
push
pop
sub
jno,pt
xchg
in
jb
addr16
mov
inc
call
mov
sub
imul
movsb
push
mov
fmuls
mov
stos
loope
pushf
push
fs
inc
pusha
inc
insb
popa
cld
mov
sub
lock
sub
sbb
cmpsb
cmp
inc
subb
testb
jb
cmp
cli
mov
scas
stos
lods
xchg
adc
inc
stos
insb
jbe
idivb
mov
inc
mov
call
push
out
cli
mov
push
leave
inc
sbbl
shrl
mov
xchg
jo
loop
adc
jb
sbb
sub
pop
mov
adc
in
xchg
into
nop
mov
jle
push
ret
xchg
sbb
mov
pusha
test
and
rorl
das
sbb
outsl
xor
outsl
sbb
in
stos
mov
pop
and
stc
arpl
clc
dec
aad
imul
sub
mov
insb
pop
mov
push
pop
pop
cmp
int3
pop
test
in
fs
mov
scas
mov
mov
dec
into
push
insl
aas
lods
xchg
xchg
push
xor
and
push
insb
push
inc
inc
scas
insb
ja
and
jl
jno
mov
mov
sbb
aaa
xchg
out
fwait
mov
inc
mov
jnp
cmp
xchg
enter
mov
mov
sbb
dec
popa
cs
clc
xor
push
mov
xchg
adc
fiadds
cs
cmpsb
push
add
cmc
mov
cmp
dec
in
call
test
jnp
push
inc
or
clc
cwtl
js
mov
inc
jae
popl
and
pusha
xchg
movsb
and
cmpsb
adc
lea
xchg
daa
push
xchg
rcll
dec
addb
add
xor
pop
dec
or
or
int
jl
push
testl
mov
sub
insl
clc
out
sub
scas
fstpl
mov
xchg
jecxz
inc
scas
lods
xchg
dec
mov
mov
xchg
cltd
jmp
std
push
mov
dec
cmpsb
mov
test
xchg
out
fwait
mov
sahf
sub
out
mov
popa
pop
mov
xchg
mov
loop
cld
or
xor
push
lcall
fsubrl
lods
fnsave
aad
lcall
sbbl
lret
movsl
sub
or
icebp
loopne
adc
nop
add
or
inc
dec
cltd
add
cld
icebp
cli
or
pop
push
add
stos
mov
and
push
push
mov
or
fildl
jnp
jb
pop
mov
shlb
daa
and
stc
cs
push
or
neg
ret
adc
inc
lret
lea
cwtl
xchg
inc
fcmovne
mov
dec
adcb
into
sub
jg,pn
es
pop
pop
pop
pop
mul
addr16
xor
mov
icebp
push
xchg
pop
arpl
pop
jne
jb
mov
mov
inc
and
cmpb
push
lods
add
cwtl
sbb
push
pop
rcr
sub
sarb
mov
gs
nop
adc
cmpsb
call
jne
clc
outsl
add
sbb
insb
addl
add
jb
and
dec
sub
sub
sub
fistpl
insb
scas
pop
outsb
xchg
movsb
inc
fstpt
out
pop
jp
dec
push
rorb
dec
nop
fisubl
rol
mov
pop
jmp
xchg
fildll
cmp
mov
pop
std
push
ret
inc
pop
fs
andl
and
pop
mov
incb
adc
loope
adcb
std
gs
fwait
push
bound
mov
insb
mov
dec
shlb
push
test
dec
add
fs
gs
push
int
addr16
popf
push
cmp
or
decb
icebp
sbb
jno
sti
outsb
imul
lock
inc
daa
movsb
cs
mov
pop
rolb
mov
pop
lods
jge
jo
adc
mov
sbb
subl
adc
xor
and
mov
das
mov
stos
adc
ja
pop
nop
and
xchg
clc
mov
sti
push
xchg
cmp
rorb
add
lret
push
shr
in
jb
inc
arpl
and
lods
mov
jmp
cmp
insb
or
out
add
sti
mov
ds
adc
jp
into
or
inc
aad
or
in
xorb
mov
inc
int3
lret
xchg
lds
in
mov
test
andl
sbb
test
imul
mov
jo
sbb
sbb
mov
jecxz
cmp
call
shrl
nop
jecxz
mov
orb
jl
xchg
cwtl
cmp
dec
fists
popa
xor
xlat
jae
inc
lret
das
call
dec
xchg
negl
stos
notb
cmp
test
pop
or
test
adc
negb
sub
mov
push
sbb
jle
popf
leave
xorb
pop
sahf
repz
push
nop
repz
andl
or
lds
push
jp
jns
sti
in
mov
inc
xchg
ficompl
push
xchg
xchg
out
cmp
cwtl
mov
sub
and
cmp
mov
xchg
mov
pop
add
mov
jae
mov
pop
fstpl
sahf
das
and
mov
push
das
pop
icebp
mov
mov
mov
cwtl
aad
mov
fldt
mov
xchg
inc
and
lahf
scas
jle
sub
xchg
xor
add
jae
lahf
loope
push
push
cltd
sahf
pushf
xchg
push
test
and
inc
pop
int
mov
sub
stc
movsl
cli
and
sbbl
orl
sbb
jmp
inc
iret
sti
mov
fcomps
cli
or
stos
push
lret
xchg
mov
mov
pop
sbb
fisttpl
adc
stc
xor
xchg
push
mov
cli
std
subl
test
or
mov
dec
enter
pop
movsb
ss
mov
push
mov
inc
cmp
mov
testl
cmp
add
dec
or
push
ja
and
add
mov
cmp
out
test
stc
gs
cmc
push
mov
push
je
shlb
pop
dec
mov
data16
std
dec
insl
fcoms
testl
mov
and
jecxz
or
sbb
fcomp
xchg
or
mov
pushf
movsl
lods
rolb
jne
xchg
gs
ja
push
int3
mov
xchg
xorl
shlb
nop
xor
ja
fidivl
outsl
push
mov
mov
test
in
cld
mov
pop
movsb
icebp
repnz
jnp
mov
into
fidivrl
lret
and
pop
shl
cwtl
jmp
jl
loope
scas
or
xor
es
dec
pop
cmp
mov
loopne
adc
jno
mov
xlat
push
cmp
xlat
andl
push
sub
jge
ret
push
enter
movsb
fiaddl
push
mov
in
fidivs
cmp
or
and
sub
xchg
jp
imul
xorb
cmpsl
mov
scas
clc
aas
mov
mov
add
pop
push
fisttps
stc
inc
sub
jge
ret
sub
pop
jl
std
cs
sub
xor
fcompl
movsb
cmpb
pop
loop
subb
pop
jge
jmp
jg
js
mov
mov
dec
fmull
movsb
fldl
scas
and
call
insl
es
inc
or
mov
fsub
gs
pop
jns
sbb
mov
cmp
push
inc
push
sub
dec
jae
fwait
xchg
sar
cmp
outsb
out
lods
push
cwtl
mov
or
scas
lret
and
je
cli
daa
lcall
mov
test
add
flds
push
inc
rcr
ss
clc
mov
and
or
xchg
lea
jo
stos
rcrb
mov
xorb
negb
and
into
cmp
mov
and
jno
inc
sbb
or
in
add
xor
push
or
adc
push
mov
mov
pop
sub
pop
or
das
lods
jbe
dec
stc
mov
mov
mov
sub
mov
jp
fcmovb
push
mov
dec
push
lea
icebp
mov
or
mov
ljmp
dec
adcb
repnz
xchg
or
xor
cmp
or
scas
jp
pushf
sti
testl
ficompl
lock
leave
sti
pushf
inc
lahf
push
scas
and
dec
cltd
inc
call
inc
mov
dec
adc
add
push
dec
mov
fwait
cmp
js
sbb
lahf
lahf
xchg
push
dec
push
xchg
rclb
sub
cmp
popa
movsb
cmpb
push
cltd
push
xchg
outsl
dec
mov
jp
roll
fsubp
fcompl
xlat
xchg
aas
cmp
sbb
icebp
pop
rolb
mov
ljmp
sub
sbb
inc
jg
lds
dec
cmp
mov
aas
repnz
test
mov
dec
jg
fsubrl
and
aam
scas
pop
ds
inc
xchg
loopne
mov
push
and
dec
inc
in
cmp
lcall
ret
sub
or
aas
xor
lret
out
bound
mov
rorb
mov
sub
cmp
pop
aaa
xor
dec
mov
jbe
pop
jg
mov
loopne
fcoml
dec
repnz
in
jns
mov
mov
fldl
sub
and
enter
xchg
insl
xchg
and
aaa
dec
lcall
sti
xchg
movsl
loopne
pop
test
lret
jo
mov
jnp
or
out
xchg
add
js
jnp
loope
mov
gs
push
pusha
stc
bound
je
xchg
mov
fiaddl
shrl
inc
add
xor
je
dec
mov
mov
inc
pop
lods
jnp
aam
dec
cwtl
jmp
mov
lea
cmp
xchg
in
mov
shll
jecxz
call
xchg
xlat
jecxz
sbb
dec
lret
pop
in
push
pusha
inc
clc
in
or
int3
mov
sbb
sbb
sub
push
decl
xor
push
das
push
pusha
mov
nop
dec
je
test
sub
push
or
adc
popa
lret
mov
test
addr16
adc
mov
arpl
ret
cltd
add
orb
movsb
imul
and
mov
adc
jp
js
mov
cmp
mov
addr16
scas
push
sahf
push
in
mov
xchg
cmp
cmpsb
popa
mov
stos
pop
adc
xor
xor
xor
cltd
rcrl
xchg
fisttpll
nop
lock
jae
dec
add
dec
inc
or
orl
mov
imul
rcrl
mov
jg
fldt
xchg
sub
mov
cmc
bound
sub
jne
xchg
xor
andl
adc
mov
adc
sub
mov
mov
out
inc
or
mov
jae
and
xchg
lret
add
add
stc
popa
or
rcll
call
sub
inc
dec
mov
pop
sbb
xor
js
xchg
fildl
rcrl
sarb
jl
arpl
cmp
ds
nop
mov
mov
lock
stos
jae
push
lds
mov
nop
dec
cwtl
lods
dec
pushf
repz
nop
add
xchg
hlt
inc
inc
lea
push
cmp
icebp
je
adc
in
data16
das
inc
mov
mov
mov
aas
in
mov
aas
movsl
dec
imul
xchg
cltd
fsubrs
stc
cmp
gs
mov
mov
push
inc
xor
sub
or
mov
xchg
test
cld
cmpsb
test
xchg
mov
imul
enter
push
cmc
xchg
sti
sahf
or
fbstp
xchg
jbe
sbb
pusha
sarl
dec
lret
cld
and
lods
jl
pop
fwait
adc
push
sbb
push
or
push
cmpl
mov
int
in
mov
cmp
jp
mov
ret
pop
ds
ret
add
inc
movsl
dec
fdivrs
sahf
sub
hlt
cltd
dec
or
jge
xchg
nop
sbbl
xchg
js,pn
mov
mov
add
cmp
xchg
sub
jle
mov
inc
dec
hlt
adc
fisubl
mov
add
add
mov
cmp
test
mov
xchg
sub
push
add
xchg
sub
lcall
filds
and
cmp
jae
cmpsl
je
jecxz
in
pop
out
in
add
dec
push
xchg
or
stos
dec
movsl
andl
xor
xchg
roll
inc
mov
addr16
cld
pop
dec
enter
and
xor
xchg
inc
mov
vpsllvq
gs
call
or
push
icebp
movsl
push
pusha
and
or
cmp
mov
or
cs
ret
call
inc
xchg
aaa
out
aam
dec
jp
adc
pop
adcb
mov
jp
repz
jl
pop
sub
jg
outsl
sbb
lahf
inc
adc
sahf
and
mov
jle
sbb
inc
xor
mov
ljmp
imul
push
jae
mov
mov
pop
jb
loop
negb
pop
inc
fstpt
in
mov
cmp
or
stos
movsb
push
cmp
fidivrl
or
mov
push
xchg
aad
adc
js
cmp
xor
std
repz
mov
out
pushf
mov
rorb
aaa
and
popa
stc
xchg
xchg
loope
inc
and
pop
cmpl
fbstp
push
mov
cmp
std
or
xchg
mov
cmp
xchg
clc
dec
xchg
out
mov
rclb
data16
lods
ret
shl
or
mov
cmc
dec
sub
clc
cmp
xor
jne
outsl
test
or
sub
and
xchg
stc
fwait
push
cwtl
jmp
dec
sti
cmp
pop
jno
clc
jmp
fistpl
sbb
xchg
fidivrl
sbb
loope
das
mov
pop
mov
dec
imul
jle
roll
ficompl
and
mov
stc
pop
out
pushw
mov
inc
insl
je
add
in
mov
xor
out
pop
adcb
icebp
mov
xchg
pop
fwait
and
arpl
cmp
mov
xchg
cmp
adc
fdivrp
movsb
je
or
dec
jne
mov
push
sahf
sti
cmp
clc
outsl
lcall
mov
fstpt
jne
seto
add
icebp
mov
sarl
xchg
lods
sbb
pop
push
es
sub
xchg
pop
hlt
push
pop
mov
ret
pop
fs
data16
mov
fxam
aad
loopne
push
stos
xor
bound
jecxz
orb
sbb
test
cli
xor
push
mov
cltd
add
out
xchg
adc
cmc
jg
test
stos
mov
mov
aaa
pop
xor
in
inc
xchg
mov
adc
add
notl
mov
mov
and
and
mov
adc
in
adc
sbb
or
arpl
outsb
dec
scas
pop
cmp
loopne
fs
xorb
in
loopne
sbb
xor
pop
sti
in
xchg
movsb
adc
jle
imul
push
ja
out
into
and
lret
shrl
or
inc
mov
add
outsl
xchg
cwtl
ss
jne
es
push
ret
cmp
cmp
fcomps
inc
pop
arpl
xchg
push
pop
cmp
mov
sbbb
cltd
push
aaa
sbb
fcoml
aam
shrl
pop
sbb
fcoml
enter
sbb
mov
inc
cld
add
mov
adc
mov
sub
pop
mov
jle
inc
jb
push
jns
sbb
xor
xor
or
xlat
fcmovbe
adc
dec
dec
cmp
sbb
in
inc
lods
mov
and
inc
xchg
xchg
rolb
aad
outsb
imul
mov
dec
cld
xchg
shr
test
lret
push
sbbl
lahf
jbe
leave
mov
cmp
jne
inc
test
xchg
mov
pop
aad
push
xchg
and
cmp
inc
out
inc
xor
idivb
xchg
mov
fcomps
scas
or
inc
mov
mov
xor
jle
outsl
add
out
mov
sub
or
jg
jne
jmp
ja
bound
add
nop
or
sub
xchg
mov
mov
dec
cmp
into
and
sub
cmp
es
add
je
and
cmp
xor
lret
lods
or
into
sub
jl
lds
aas
and
dec
sbb
push
push
addr16
cmp
popa
or
xchg
or
lret
in
jl
pop
push
enter
stc
cmc
loopne
and
cmp
fildl
outsl
pop
inc
imul
pop
mov
push
xchg
enter
sub
and
pop
scas
ja
idivb
bound
jg
xor
in
inc
nop
data16
xchg
ror
aaa
jge
xchg
push
and
outsl
cli
add
jmp
jno
notb
push
std
testb
push
or
out
push
cld
ja
lret
mov
fwait
loope
jb
jae
mov
sub
xchg
je
pop
scas
icebp
adc
cmp
popf
cmp
out
or
imul
stc
out
sub
insl
add
mov
xchg
out
push
xchg
std
dec
mov
or
jp
and
xchg
mov
movb
dec
sbb
jnp
xchg
or
dec
dec
adc
mov
enter
adc
addl
imulb
addr16
test
icebp
dec
or
sbb
inc
addr16
pusha
ret
bound
adc
jl
and
lret
mov
iret
iret
js
mov
mov
in
xchg
iret
into
cmp
sbb
pop
inc
sub
std
xor
adcl
ljmp
pop
mov
xchg
inc
cmc
fsubrs
cmp
das
out
sbb
arpl
mull
push
subl
xchg
imul
add
pop
test
cmp
add
mov
popa
in
push
jp
mov
cmp
or
int3
inc
mov
fstp
rclb
rcrl
sub
fwait
cwtl
fsubs
xchg
dec
std
rol
outsl
loop
stc
jp
ja
and
fcomp
or
sbb
jg
test
mov
sbb
in
sbb
popf
pop
mov
sub
dec
jge
adc
fcomi
pop
mov
inc
ja
sub
dec
inc
push
daa
pop
push
xor
loopne
nop
cmp
sbb
jge
mov
jae
mov
xchg
jmp
dec
mov
fnstcw
test
sbbl
nop
scas
cmp
scas
lea
and
mov
adc
inc
add
xchg
invd
sub
jg
or
nop
roll
notb
sub
xlat
mov
pushl
mov
add
pop
lds
jg
dec
add
add
sbbl
shl
aas
cmpsb
inc
dec
mov
pop
inc
loope
sub
jo,pt
popa
stos
inc
pop
jg
adc
inc
or
xchg
lods
mov
xor
pusha
sub
je
dec
adc
or
pushf
test
push
jmp
test
or
ja
xchg
mov
add
xchg
xchg
cmp
aad
std
into
aaa
lds
or
sbb
cmp
addr16
jno
push
mov
fstpl
adc
clc
inc
lcall
jbe
lea
int
movsb
cli
xchg
add
clc
sbb
daa
bnd
push
sbb
ljmp
stc
mov
sub
stos
inc
mov
clc
push
add
dec
roll
and
xchg
push
icebp
adc
mov
cmp
push
clc
mov
imul
stos
nop
adc
incb
sub
mov
mov
add
pop
adc
mov
out
push
pop
sbb
push
pop
dec
cwtl
pop
std
test
mov
push
or
addb
mov
sbb
cmp
lret
mov
int3
fstpl
mov
jge
aad
and
cwtl
testl
push
lret
push
cld
cmp
jbe
mov
arpl
jmp
rorl
sub
fwait
mov
dec
push
arpl
or
in
aaa
mov
pop
daa
or
pusha
pop
shrb
rolb
icebp
test
fdivrl
cmp
add
xchg
push
push
push
add
xchg
and
jbe
dec
push
add
sbb
xchg
out
xor
sub
jecxz
in
sbb
xor
sbb
arpl
xchg
neg
and
push
xchg
sbb
test
cmp
pop
lcall
stc
popf
outsb
aaa
test
scas
push
push
add
sub
pushf
movsl
inc
mov
sbb
enter
lret
jp
sbb
adcb
adc
mov
adc
daa
push
or
xor
fstpt
decl
std
aam
movsb
jae
loopne
lcall
test
and
cmp
ret
cmp
push
aas
aam
movsb
adc
or
jae
divl
dec
or
aas
push
sub
cmp
out
ficomps
jnp
jecxz
gs
or
xchg
push
sub
jg
mov
das
clc
bound
mov
gs
inc
xor
inc
fcompp
jle
addr16
cltd
pop
notl
mov
aam
sti
or
cmp
into
mov
inc
movsb
mov
cmpb
out
repnz
xchg
mov
dec
out
aad
rcll
sub
mov
cmp
std
outsl
and
jbe
add
aad
ficoms
ds
pop
inc
out
das
movsl
jl
sub
pusha
xor
dec
int3
sbb
pop
xchg
shll
in
call
xor
movsw
mov
lea
xor
movsl
dec
aas
lret
jge
iret
ds
shlb
daa
mov
das
mov
cmp
pop
xchg
cltd
dec
lds
fwait
mov
ret
aad
xchg
or
push
insb
mov
dec
cmpsl
ss
out
test
addr16
fimuls
in
movsl
ret
dec
mov
mov
mov
mov
scas
mov
mov
jge
pop
in
rorl
add
das
cmp
adc
sti
scas
leave
lea
mov
sub
std
stos
out
popa
adc
lahf
arpl
adc
mov
jns
fdivrs
int3
dec
or
add
ret
ss
jge
xlat
inc
sti
cmp
jecxz
shrl
mov
int3
test
adc
fcoml
sbb
ljmp
jae
push
mov
int
aas
push
sub
pop
test
sub
or
scas
cs
in
pop
mov
inc
stos
sub
test
imul
cmp
xor
xchg
xchg
lea
loope
xor
fiaddl
sub
xchg
aam
or
dec
and
addr16
and
xchg
lahf
jmp
push
mov
and
mov
mov
cmpl
push
sub
jb
insl
and
inc
cmpb
xor
xor
shr
into
das
mov
xchg
push
jae
pop
std
enter
xchg
loope
les
mov
mov
dec
pushl
in
insl
rolb
cs
scas
mov
daa
mov
push
int3
dec
pop
in
jle
push
cmp
mov
in
ret
xchg
jns
bnd
ret
push
lea
orl
int
iretw
adc
xchg
lret
jg
dec
mov
test
push
mov
pop
pushf
shr
imul
cmp
cld
xchg
sub
mov
sub
mov
push
fdivrs
push
mov
fsts
mov
add
jg
flds
jg
mov
test
out
push
cld
or
dec
pop
cmp
movl
nop
jb
repz
jl
enter
mov
filds
adc
loopne
icebp
push
les
dec
xchg
sub
xor
movsb
ljmp
pop
rcrl
dec
xchg
sbb
mov
rclb
inc
fwait
aad
dec
lcall
mov
cmp
mov
or
or
iret
jp
shr
mov
xorl
xchg
jne
jge
xchg
aad
pop
test
pop
jne
mov
sub
adc
pop
jno
push
jne
test
add
inc
jl
push
mov
ret
add
lea
ja
decl
ret
pusha
push
loopne
cmp
sbbb
rol
arpl
inc
loopne
inc
fldt
or
sub
mov
mov
out
jmp
or
rolb
add
inc
sbb
cmp
xlat
iret
mov
or
mov
xchg
mov
aas
adc
push
fiadds
outsb
push
iret
lock
inc
sti
inc
mov
sbb
stos
icebp
shll
cs
rorl
pop
fstpl
ret
push
in
sub
es
jp
sahf
out
inc
fsubs
movsl
pop
ret
mov
jnp
jmp
xchg
push
aam
and
dec
fildl
sub
jno
adc
ljmp
mov
sub
clc
gs
mov
mov
pop
xchg
sub
jne
lods
orl
inc
and
add
and
push
cmpsb
push
pushl
adc
clc
dec
fnstcw
jae
and
outsl
imul
mov
imul
ds
xchg
sbb
pop
inc
neg
and
push
pop
mov
cmp
xlat
iret
enter
sbb
jp
jb
push
repz
xlat
shlb
fwait
push
loop
inc
into
fstpl
movsl
movsb
fdivl
add
jbe
xchg
inc
cmp
inc
into
test
jecxz
inc
jae
in
daa
bound
inc
movsl
dec
sub
stos
mov
pushf
int3
xor
or
add
cmp
mov
aas
movsl
dec
mov
cmp
push
mov
jmp
jnp
addb
stc
jne
les
push
inc
push
and
xor
adc
lret
insb
ficompl
lret
sbb
push
fmul
lret
test
call
mov
popa
fidivs
lods
pop
dec
pop
xchg
push
push
mov
loopne
cwtl
out
lods
aaa
icebp
adc
out
cmp
add
mov
mov
arpl
push
aad
xor
cmpsl
lea
mov
sub
mov
sub
ss
sbb
or
insb
orl
cld
bound
cmpsb
mov
add
rcr
mov
int
and
jge
out
and
add
imul
nop
jge
inc
pop
mov
ja
es
mov
stc
dec
adc
mov
in
je
adc
cmp
pop
cmp
rcrb
mov
cmp
cmp
mov
push
mov
mov
out
fistps
push
mov
push
xchg
sub
push
mov
orl
dec
cltd
stos
arpl
lcall
addb
mov
pop
jge
mov
mov
inc
scas
xchg
add
arpl
cmp
lret
mov
pusha
cltd
inc
mov
dec
icebp
add
test
xor
notl
adc
les
fimuls
mov
cmp
loope
dec
std
or
imul
addr16
sar
lcall
rcll
out
js
loope
inc
push
jge
jns
rcr
or
xchg
add
inc
fnstcw
xor
mov
mov
and
adc
int
adc
push
or
cmpsl
scas
mov
arpl
daa
sbb
sub
push
dec
add
hlt
dec
xchg
mov
sbb
call
mov
stos
xchg
mov
test
fmuls
popf
jmp
or
ss
decb
pop
mull
jbe
pushl
pushf
data16
es
jno
sbb
into
fbstp
mov
arpl
xchg
inc
pop
mov
dec
pop
mov
inc
lds
scas
pop
test
sub
mov
mov
jae
add
pop
push
pop
mov
je,pt
into
dec
xchg
fisubl
inc
cs
test
xor
mov
push
mov
mov
pop
jle
rcl
popa
mov
enter
xchg
mov
adc
and
dec
jns
stos
add
push
pop
dec
outsl
fistl
insl
rcll
pushf
xchg
mov
ficompl
jnp
test
cmp
pop
adc
and
sbb
inc
enter
lret
adc
mov
movsl
add
sbb
stos
outsb
cwtl
pop
into
test
dec
mov
sbb
jns
add
fwait
cmp
cltd
pushl
cmp
and
push
aaa
in
das
pop
ss
xor
imul
or
jns
pop
jnp
dec
in
xchg
sub
mov
ss
jge
xor
scas
cmpsl
clc
lods
inc
std
and
pop
sbb
jecxz
aam
dec
jl
lret
scas
mov
mov
lret
xchg
xchg
dec
jg
daa
xor
mov
test
push
adc
jp
fwait
loope
aas
adc
mov
xchg
notb
pop
jge
dec
gs
pop
arpl
xchg
out
inc
xchg
jle
hlt
pop
es
stos
in
mov
outsl
test
ljmp
fistl
mov
push
mov
xchg
and
sub
inc
inc
fcomps
cmp
adc
shll
out
fyl2x
lret
int
fistl
sbb
push
sbb
imul
cmp
cmp
fdivr
mov
sub
add
test
iret
cmpsl
es
mov
mov
xor
inc
mov
cltd
cmp
iret
test
add
inc
movsb
sbb
push
xlat
popa
loop
lret
pushf
mov
sub
ljmp
inc
ljmp
xchg
decl
push
int
stos
adc
lea
inc
mov
lcall
ret
cmp
ret
sub
in
cmp
fcmovu
je
xchg
inc
jae
lcall
aaa
add
test
fwait
bound
shll
daa
lods
pushf
inc
das
ret
or
sub
dec
sbb
fbstp
frstor
push
js
ja
xor
inc
fadd
ret
call
into
rolb
mov
xchg
popa
call
ret
mov
stc
push
xchg
xor
lahf
xlat
or
mov
cwtl
mov
test
push
ret
icebp
mov
jp
inc
pop
and
xor
cmp
std
jp
sahf
xchg
mov
in
cvtdq2ps
nop
mov
add
mov
outsl
call
push
das
adc
add
adc
insb
dec
test
cmp
ljmp
mov
cmp
psadbw
jnp
or
dec
sub
pop
mov
mov
fisttpll
inc
test
js
repz
pop
mov
fstp
inc
cmpl
mov
push
xchg
jle
xchg
sub
daa
or
mov
xchg
adcl
sub
adc
scas
pop
stc
sub
and
loop
mov
mov
stos
pop
popf
jnp
lods
jnp
dec
roll
jp
sub
jae
push
inc
gs
or
push
adc
mov
sbb
repnz
push
loop
lret
daa
sbb
push
mov
andl
cld
mov
lods
daa
cmpsb
jmp
xchg
movsb
jmp
mov
and
xor
mov
test
cmp
aad
jmp
in
call
inc
insl
and
std
rclb
inc
push
mov
xchg
push
lods
cmp
inc
jmp
and
sti
cmpsb
js
movsl
imul
cmp
das
inc
inc
add
pop
cmp
mov
adc
and
jns
iret
imul
testl
inc
mov
adc
in
push
mov
push
or
fwait
push
loopne
inc
movsb
pop
pushf
sub
xor
rol
mov
es
nop
outsb
das
icebp
push
nop
fs
fidivs
jb
rclb
mov
pop
aas
dec
insb
pop
and
mov
add
mov
sbb
jns
add
aas
sbb
cmp
out
xor
add
pop
testb
sahf
cltd
inc
mov
fwait
sub
jg
inc
test
or
mov
jmp
lods
lock
push
mov
inc
rorl
fwait
cmp
dec
movl
mull
gs
ds
lds
inc
adc
ja
cs
xchg
jae
pop
inc
or
dec
and
dec
mov
mov
mov
sahf
xchg
lahf
pusha
dec
loope
pusha
mov
test
dec
rcrl
cmp
mov
pop
xchg
scas
inc
icebp
sub
cmpsl
push
lret
popa
je
mov
mov
xchg
das
mov
jns
loope
inc
dec
cmp
pop
mov
jb
xchg
aad
insl
inc
lcall
imul
int
and
nop
sub
mov
cmp
repz
cwtl
lods
push
test
add
insb
cmc
je
cltd
and
pop
mov
mov
mov
inc
jecxz
mov
leave
sub
mov
cmc
and
enter
jp
repnz
jns
gs
dec
mov
daa
push
jecxz
jecxz
ja
arpl
push
out
xchg
push
xchg
sbb
and
jbe
mov
xlat
lahf
push
pusha
sub
je
call
cmp
xor
cmpsb
aas
push
lock
mov
fidivs
inc
jmp
cld
sbb
jl
cwtl
aam
jecxz
pop
fstpt
push
leave
lahf
lcall
xchg
std
stos
int3
jecxz
pop
movsl
lret
xchg
sbb
or
pop
shr
test
jle
daa
cmp
and
xchg
push
push
ss
sbb
fdivs
mov
pop
int
dec
and
fadds
xchg
negl
push
cli
insb
mov
jle
pop
lret
jb
pop
lret
pop
pushf
notb
leave
inc
scas
mov
cmp
inc
xor
push
idivl
add
push
insl
jo
addb
mov
fwait
jmp
and
adc
data16
ds
xor
mov
jb
mov
inc
jle
jg
cltd
loopne
push
add
pop
mov
sbb
push
int
adc
and
pushl
jge
insl
xchg
add
pushf
ljmp
test
and
xchg
cs
cwtl
mov
clc
xchg
sahf
dec
push
push
xchg
jo
imul
aaa
inc
out
xchg
xchg
out
mov
stos
shll
nop
leave
xor
pop
jle
scas
fmul
dec
leave
mov
lods
stos
pusha
dec
fs
sub
cmp
in
stos
pop
es
hlt
xchg
jne
das
lods
sub
xor
pop
mov
xorb
stos
sub
cmp
fstl
loopne
rcrl
shr
jp
addl
rcll
adc
lea
jns
dec
add
ljmp
ds
and
mov
sbb
shlb
mov
push
xchg
or
iret
inc
ds
sbb
add
xchg
ds
les
dec
out
arpl
ror
jae
push
in
das
dec
int3
jmp
data16
dec
aad
mov
pop
mov
sbb
out
lea
xchg
dec
push
js
les
testl
pushl
jnp
repz
sbb
mov
ret
test
cltd
inc
fldcw
dec
xlat
lods
jecxz
mov
dec
pop
std
mov
pop
insl
adc
sub
rcrl
and
mov
aas
mov
lret
andps
xchg
sti
cmpsb
loopne
jp
jb
cmp
test
movsb
outsb
or
inc
sbb
decb
shll
adc
mov
test
dec
xchg
cwtl
mov
push
xor
mov
jae
filds
inc
jp
sub
xchg
mov
xchg
stc
mov
cwtl
push
xchg
push
cmp
add
push
mov
bound
negb
icebp
push
mov
pop
fmull
ljmp
movsb
fs
loop
push
shr
rorb
lahf
jecxz
into
lea
jbe
add
sbb
pushl
mov
in
pop
xor
imul
das
pop
and
pop
add
data16
cltd
mov
insl
cmp
sub
dec
stos
push
data16
lods
push
pop
xchg
inc
stos
mov
sbb
movsl
lock
jg
popa
movsb
inc
pushf
cmpl
movsl
insl
xchg
mov
cmp
dec
jg
flds
lahf
sbb
xchg
xor
pop
pop
xchg
sbb
jnp
mov
cli
adcb
adc
fs
cwtl
rcrl
ljmp
sub
fnstenv
or
dec
cmp
dec
fs
cmp
xor
jae
xchg
dec
add
mov
mov
sbb
jb
sbb
dec
lods
mov
movsl
in
inc
cmp
out
xchg
ds
sbb
in
dec
sub
mov
dec
and
pop
dec
jl
cmp
xlat
in
dec
nop
push
xor
out
xor
cmp
fwait
cmpl
inc
xchg
ret
frstor
xchg
add
push
enter
push
sbb
in
inc
test
loope
cltd
enter
insl
dec
or
add
aad
mov
xchg
shlb
insl
dec
shrl
xchg
arpl
int
fisttps
rolb
cmpsb
movsb
rolb
js
sarb
or
arpl
daa
das
das
sub
call
jge
in
jmp
mov
lea
cmpsl
xor
inc
cltd
mov
decl
stos
sub
cwtl
sub
adc
pop
ss
dec
and
push
cmovge
mov
xchg
enter
dec
inc
push
add
aaa
cmp
dec
cmp
stos
jae
xchg
pusha
inc
jl
repz
ret
mov
inc
in
lret
push
inc
jbe
mov
loope
pop
cmp
lret
rcrl
cmp
lret
inc
dec
inc
pop
int3
js
mov
fisttpl
out
mov
xchg
push
orl
add
test
dec
pusha
sub
add
jmp
push
sub
and
jecxz
in
xchg
pushf
int
into
insl
jle,pn
sbb
idivb
and
sub
jne
addr16
xor
inc
adc
shl
fcoml
dec
nop
mov
xchg
fcmovnb
adc
enter
sub
cmc
pop
sub
mov
movsl
inc
shlb
xchg
sarl
and
mov
fsubl
fnsave
and
pop
adc
inc
lods
in
clc
sub
testl
cvtpi2ps
dec
fildl
xor
sbb
int3
inc
pop
notb
ret
sbb
movsl
pop
enter
lret
pushf
inc
jg
cltd
mov
popa
cwtl
jmp
movsl
cmpsl
push
clc
adc
shll
xor
stc
lahf
sub
xor
pop
in
out
push
sub
dec
sbb
cmp
xchg
in
cs
aad
cmp
bound
ret
pop
in
movsb
sbb
frstor
out
cmp
stos
gs
sub
in
je
add
add
hlt
lret
xor
xchg
shll
inc
lcall
jmp
jmp
xchg
jecxz
mov
jecxz
cmpsl
sti
lock
sbb
testl
xchg
fst
sarl
push
sub
ror
dec
dec
or
dec
or
mov
jge
pushf
cltd
dec
mov
inc
stos
pop
fnsave
or
sub
das
hlt
pop
push
jge
mov
cs
imul
xor
loop
mov
jne
test
pop
inc
jg
loope
and
mov
dec
push
pop
push
fildll
xor
push
std
test
inc
jmp
mov
adc
sbb
jmp
pop
and
add
dec
aam
cmp
decb
jg
cld
jae
cwtl
ss
mov
cmp
cmp
lods
ret
mov
mov
aad
xor
repz
popf
sub
mov
cmpsb
outsl
gs
sbbb
aad
rol
sti
das
pop
lcall
jb
fstpt
sahf
cmpsb
inc
arpl
je
lret
and
and
xor
js
mov
dec
mov
clc
xor
stc
aam
stos
cmc
lret
push
push
fdivrl
test
xor
add
jns
pop
and
js
push
jns
icebp
std
bound
dec
mov
or
loope
sub
and
mov
cmp
dec
fwait
fwait
mov
orl
les
push
mov
inc
cmpsb
dec
pop
jge
adc
add
arpl
xchg
js
lcall
stos
mov
inc
stos
mov
adc
lcall
in
push
push
imul
mov
cmpsl
fcoml
and
mov
jl
nop
cwtl
push
jmp
lahf
or
jge
xchg
scas
add
notl
sub
and
sbb
mov
push
push
add
jp
cmpb
xor
and
mov
push
inc
mov
cs
in
lea
lcall
sub
mov
jecxz
lock
xchg
imul
push
sbb
idivl
sub
jmp
in
pop
mov
xor
jo
fnstsw
mov
aas
es
sub
pop
lahf
hlt
sbb
iret
test
push
icebp
sbb
xchg
push
lods
adc
dec
and
jg
sbb
popa
xchg
bound
mov
push
jle
adc
ret
out
cld
adc
in
insb
mov
cwtl
mov
gs
jnp
stc
dec
push
iret
pop
cs
jno
and
lea
mov
push
mov
movsb
cld
mov
loopne
push
shlb
xor
shll
sub
xchg
mov
adc
loop
jmp
test
xor
and
sub
mov
mov
pop
dec
shlb
pusha
lret
pop
test
lds
lret
scas
stc
repnz
lea
or
cwtl
cmpsb
pop
cmc
jl
inc
cmp
cmpsl
mov
pop
out
pusha
aas
mov
in
lahf
push
movsl
jle
lds
lods
push
xor
mov
sbb
cltd
xchg
inc
cmp
push
dec
cmp
icebp
dec
push
cmc
jae
inc
mov
jno
gs
add
daa
pop
cmp
mov
lods
dec
in
icebp
jmp
aad
loop
xor
mov
stos
cmpl
call
mov
add
inc
pop
pop
repz
mov
xor
je
jno
dec
lahf
les
cwtl
adc
jns
dec
mov
cmp
movsb
ficomps
mov
into
xor
mov
movsb
stc
jae
loopne
out
mov
sub
dec
or
hlt
cmp
fcomps
cmc
stos
test
xor
xor
rclb
mov
mov
dec
jle
jnp
sbb
rclb
cmpsl
xor
push
mov
adc
mov
lods
xchg
arpl
insl
cmp
and
mov
mov
in
scas
xor
mov
imul
cli
aam
jmp
jp
push
mov
stos
mov
movsl
dec
mov
mov
or
popf
mov
test
or
xor
imul
inc
inc
in
mov
add
xchg
sbb
or
xchg
or
ds
sarb
and
test
xchg
rcrb
aad
xchg
cmp
inc
roll
loope
sbb
xor
or
cmp
test
jmp
mov
ja
mov
jg
inc
adc
jbe
loopne
popa
out
sbbl
cmpl
jno
movsb
push
outsl
dec
cmpsl
sti
insb
je
xchg
mov
pop
push
inc
hlt
in
jge
jb
xorb
nop
sbb
pop
cs
ret
mov
sti
jnp
dec
jg
sub
adc
mov
adc
sub
xchg
rclb
mov
xlat
jns
xor
lret
je
sbb
push
cwtl
vmovsd
sub
stos
lock
test
dec
pusha
test
iret
xchg
sbb
adc
in
push
and
and
push
std
pop
push
jmp
lret
xor
pop
pop
push
add
xor
pop
in
aas
test
sbb
repz
dec
stos
aaa
xchg
rcrb
mov
stos
lret
jmp
mov
push
out
and
out
test
mov
mov
mov
in
out
shrb
divb
pop
xchg
popl
leave
test
mov
sub
sbb
mov
mov
xchg
subb
or
stos
mov
sbb
push
gs
in
or
test
loopne
lret
sub
pop
push
push
clc
jp
dec
xchg
orb
std
es
inc
in
push
dec
outsb
fidivrs
cwtl
push
mov
and
mov
pop
stos
ret
or
add
add
mov
xchg
sbb
adcb
cmp
jns
in
inc
xchg
dec
lods
mov
sub
out
or
imul
ds
inc
shrb
cmp
push
xor
leave
jecxz
scas
add
jmp
js
mov
inc
mov
or
mov
xchg
stos
cmp
pusha
in
daa
dec
jo
lret
scas
jbe
push
icebp
cmp
mov
ljmp
or
sahf
int
ljmp
loopne
cmp
mov
fists
adc
inc
loop
test
movsb
outsb
or
jo
xlat
push
push
cld
movsl
and
cmp
cmp
sti
xor
pop
lret
ret
fisttpl
cmp
pop
sub
or
test
nop
inc
lret
xor
xor
lret
mov
adc
mov
popa
xchg
dec
or
mov
push
jns
lods
je
testl
jns
popf
add
inc
in
repnz
lods
xchg
cwtl
ss
fdivr
dec
lret
jns
pop
bound
mov
pop
sub
mov
scas
pop
mov
mov
adc
cmp
sub
gs
sbb
push
test
fwait
and
cmp
clc
jno
or
xor
adc
mov
dec
test
mov
push
add
adcb
add
mov
ficoml
lea
mov
sarl
test
sbb
jbe
test
popa
dec
xchg
mov
lods
xchg
or
shlb
sti
inc
pop
mov
pop
push
jno
ja
mov
rcrb
aas
xor
pop
adcb
inc
sbb
push
and
adc
cmp
arpl
push
xlat
int
push
xchg
aas
cmc
lret
sahf
sbb
or
inc
lahf
jo
sbb
pusha
jae
xchg
xchg
test
sti
int
inc
cmp
and
cwtl
push
int3
int3
inc
or
int
out
xchg
subb
lcall
cmpsb
xor
and
sarb
scas
or
insl
std
cmpl
push
mov
and
lcall
pop
gs
jg
mov
arpl
jns
test
dec
xchg
data16
cmp
lcall
loop
rol
js
addr16
add
push
push
cmp
into
lret
cmpl
cmp
mov
addr16
inc
cmp
inc
ljmp
ret
jns
jecxz
fiadds
insb
inc
aas
jae
xchg
bound
and
dec
jne
in
mov
inc
jae
xor
hlt
push
jbe
or
lea
adcl
sub
xor
cmp
je
or
in
cwtl
adc
mov
mov
xchg
mov
push
je,pt
cmp
movsl
ja
inc
lcall
and
addr16
shl
call
divb
cmp
cmpsl
repnz
aaa
inc
enter
ja
mov
fimull
mov
sub
cmp
cmp
jge
lock
lahf
push
cs
push
adc
xchg
xor
sarb
les
or
fisttpl
mov
sbb
push
shlb
pop
cmp
repz
mov
sub
inc
jbe
aam
xchg
movsb
jmp
push
rcrb
test
inc
stc
sbb
leave
bnd
sub
xor
and
stos
bound
cmp
imul
fwait
popl
mov
scas
cmp
inc
lea
mov
xor
dec
pop
xchg
cmp
adc
mov
rolb
fwait
xor
sbb
daa
mov
xchg
jb
pop
sbb
sar
adc
xchg
sbb
and
xchg
lds
cmp
pusha
and
jmp
and
and
testb
inc
inc
pusha
lea
and
and
aam
add
dec
fmuls
lret
sub
lahf
xchg
and
push
pop
rcll
or
add
inc
or
mov
and
push
jae
cmp
test
icebp
aad
aad
movb
or
add
cmp
sbb
in
out
test
adcb
jno
std
cs
mov
dec
mov
lods
push
inc
aas
lea
loop
xchg
fnstcw
dec
push
test
cmp
incl
nop
xor
add
or
fadd
sti
ss
dec
dec
mov
fs
add
cmpsb
ljmp
or
mov
jne
push
outsb
jle
je
xor
push
inc
call
adc
cmp
dec
mov
pop
call
hlt
xchg
mov
bnd
aaa
es
adc
gs
mov
push
aaa
xchg
xchg
jne
ljmp
sti
dec
jmp
loop
stos
ss
cmp
bound
call
imul
pop
scas
or
std
xchg
std
jg
push
add
pushl
loop
sahf
mov
mov
jb
mov
gs
add
ds
xchg
add
es
loopne
push
rol
or
pop
push
aas
movsb
pop
xchg
stos
add
xchg
mov
cltd
ret
or
pop
mov
push
shlb
pop
lahf
negb
jmp
shll
push
mov
cltd
scas
inc
aam
jle
aad
cmp
and
lret
scas
cmpsb
xchg
push
add
xchg
push
pop
in
je
shll
cmpb
loope
cli
jge
pop
xor
dec
lock
jp
testl
cmp
hlt
clc
test
and
push
mov
repz
lret
movsl
ja
fists
xlat
outsl
jmp
xor
inc
push
pop
xor
int3
xchg
pop
lods
es
or
cmp
inc
jno
pop
rcrb
movsb
push
add
pop
add
xor
outsl
mov
cmp
mov
push
pusha
xor
xor
test
inc
insb
clc
jge
sti
inc
inc
gs
movsb
jbe
mov
inc
mov
pop
addr16
in
cld
sarl
sbb
cmp
pop
fs
sub
in
mov
fsubrs
inc
cltd
add
jle
adc
out
in
aas
mov
outsb
and
add
cmc
adc
fnstsw
movsb
mov
lret
and
xchg
xchg
or
jne
imul
rclb
push
sbb
testb
insb
rsqrtps
mov
mov
jle
inc
fldt
xor
lods
bound
add
aam
ja,pt
xorb
aam
inc
sbb
aam
jne
cmc
mov
push
test
xor
nop
and
mov
sbb
mov
pusha
mov
fs
jae
fldt
insb
fimuls
je
sahf
sbb
mov
dec
dec
xchg
mov
adc
sub
into
push
ret
dec
mov
das
jne
call
jge
test
and
repz
lahf
mov
lods
mov
mov
xor
jge
jb
xchg
fisttpl
pop
call
pop
testl
aas
dec
mov
sub
and
mov
jo
insl
jb
or
mov
out
fimuls
xchg
jg
lcall
inc
inc
sbb
mov
cltd
push
movsl
pop
adc
sbb
dec
pop
and
test
dec
pop
xor
cli
inc
inc
cmp
pop
xor
lods
test
aam
add
push
adc
mov
add
xchg
jo
fiaddl
bound
or
pop
dec
fidivrl
addr16
sar
shl
test
loope
je
in
loope
pusha
testb
adc
rcll
sbbl
mov
out
inc
sub
pop
movsl
test
in
sbb
aam
out
mov
sbb
jne
fildl
ja
aad
mov
iret
push
fcmovnb
xor
push
xlat
repz
jle
adc
repnz
packssdw
ja
adc
out
adc
repnz
dec
pop
pop
loop
inc
inc
and
loop
adc
push
jae
daa
pop
inc
push
cltd
and
sub
out
pop
mov
sub
dec
pop
imul
xchg
mov
or
mov
mov
push
push
jae
sbbb
fcmove
pop
pop
movsb
xchg
iret
sbb
cmpsl
cmpsb
xchg
lret
cmp
dec
adc
or
shrb
mov
xorl
xlat
ficomps
lret
adc
jns
aas
in
sbb
fiadds
sbb
mov
and
cmpsb
imul
and
xor
mov
adc
arpl
fsubr
xlat
xchg
std
add
cmp
shr
notb
dec
jmp
mov
sbb
add
dec
push
mov
aad
dec
fidivl
xor
sbb
test
jb
loope
filds
jecxz
jb
inc
mov
fcomps
fwait
das
lods
stc
sbb
addr16
jmp
push
dec
loopne
xchg
in
adc
lock
pop
leave
sahf
scas
sub
jne
lret
push
test
lret
insb
subb
cs
mov
ret
les
aad
arpl
stos
out
pop
fstpt
xor
je
popf
dec
cmp
xor
pusha
icebp
decb
imulb
fdivp
into
ss
mov
inc
xor
addl
xor
xchg
pop
inc
aaa
jp
pop
pop
adcl
add
out
and
nop
addb
push
imul
pop
rcr
mov
sub
pop
test
pop
movsb
fcom
scas
mov
ret
sbb
outsb
cmpsl
sbb
cli
add
or
pop
cmpsb
jp
mulb
mov
xchg
imul
es
cmp
imul
repnz
xchg
cmp
arpl
aam
and
loopne
ds
mov
jp
sub
stos
add
gs
dec
add
lret
in
xchg
rorl
orl
cmpsl
mov
call
test
hlt
sti
clc
ds
icebp
xchg
mov
jno
jne
cmp
jb
sti
mov
and
roll
mov
push
mov
mov
in
rorl
and
loopne
stos
imul
cmp
shrl
aad
fdivs
pusha
scas
bound
cmp
jmp
lods
cmp
xchg
sub
xor
xor
nop
push
fsubs
add
add
pop
ds
js
out
nop
dec
pop
xchg
cmp
jmp
jo
cli
xorb
mov
inc
js
pop
and
cmp
adc
cwtl
mov
xor
in
ret
out
xchg
push
popl
sub
cmp
repz
std
xlat
pop
sti
push
and
push
cld
push
ljmp
sbb
add
mov
movsl
stos
mov
add
decl
pop
aaa
test
and
mov
roll
das
aas
pop
mov
xchg
popf
pop
push
popf
dec
fs
mov
mov
inc
mov
or
repz
enter
jl
mov
mov
je
mov
jecxz
imul
cmp
in
mov
fdivs
addr16
cmp
sub
jb
lock
add
movsl
lods
out
dec
imul
in
repz
pusha
and
and
scas
nop
mov
sbbl
hlt
lret
test
stos
adc
inc
inc
add
cmp
xor
rcrl
out
dec
fwait
in
add
jne
add
test
scas
and
push
xchg
filds
outsl
enter
mul
sbb
and
jge
std
sub
sbb
cli
inc
cs
adc
daa
jp
int3
les
pop
inc
push
add
hlt
mov
inc
insb
mov
fwait
xor
lahf
mov
push
or
add
sbb
and
cwtl
jbe
mov
pop
sub
pop
in
jg
addr16
xchg
mov
or
insb
pushf
cmp
push
inc
sub
xchg
pop
xor
popa
jnp
std
cs
add
jge
dec
jo
incl
dec
adc
dec
mov
fdiv
mov
ja
push
fcmovnu
jno
mov
dec
ror
sbb
or
dec
push
daa
pop
inc
pause
lcall
sbb
pop
imul
inc
into
roll
xor
aad
or
xor
aaa
insl
nopl
xor
adc
imul
sub
sbb
sbb
cmpsb
cltd
rorl
lret
fstl
jae
loope
cmp
mov
repnz
xor
pop
push
sbb
mov
sti
stc
lock
setbe
in
hlt
and
addr16
ret
popf
push
adc
cmpsl
sbb
mov
push
mov
adc
sbb
dec
sbb
inc
push
ds
incl
bound
sti
lods
xor
adc
nop
mov
adc
mov
push
scas
xor
adc
mov
sub
sub
sbb
sbb
shll
or
stos
add
rcll
push
aad
or
in
fs
iret
lds
pop
mov
out
pop
xor
cmp
jne
shl
imul
mov
repnz
ja
not
jns
cmp
inc
mov
add
xor
fcompl
mov
and
and
outsl
cmp
int
adcl
sti
dec
inc
adc
sub
jl
clc
pop
fists
rcrl
std
out
inc
jge
call
xchg
scas
inc
xchg
push
out
mov
cld
test
shll
lea
pop
bswap
push
repz
pushf
mov
nop
and
mov
mov
sbb
rcr
test
and
xor
pop
sbb
cltd
cmpsb
push
mov
xchg
or
cli
or
aas
mov
push
mov
cmc
lahf
lea
stc
ret
xchg
and
and
mov
or
jl
stc
loope
pop
fistpl
push
fisubrs
push
and
aam
cmc
enter
in
push
jo
inc
push
xchg
mov
or
lret
push
scas
inc
add
hlt
sti
sbbl
out
jge
mov
lock
mov
dec
inc
fstpt
aas
inc
jnp
loopne
mov
inc
push
dec
pop
jmp
daa
mov
dec
mov
sbb
imul
dec
cld
and
ret
and
xchg
aaa
les
cmpsl
aas
inc
aad
mov
push
sub
inc
mov
cli
jg
lea
cld
mov
mov
cmp
in
andb
cmp
mov
push
scas
lret
cmpsl
sub
inc
stos
out
xchg
mov
add
sbb
sbb
pushf
sub
cwtl
test
aaa
xor
cmp
mov
lahf
enter
xor
fisttpl
lret
ds
mov
sub
inc
adc
das
add
xchg
js
iret
sti
adc
sub
pushf
dec
sub
hlt
lahf
adc
push
push
je
jnp
inc
pop
or
dec
neg
mov
dec
rcrb
mov
mov
inc
aam
jmp
dec
mov
mov
add
ja
xchg
jge
mov
fstpt
daa
fildl
jns
mov
stos
sub
cmp
cmpsb
pop
sub
pop
cmpsl
fldl
push
or
cmovs
imul
inc
imul
cmp
sbbl
push
mov
subl
in
cmp
adc
rolb
mov
negb
mov
fcmovb
das
into
xchg
scas
jp
adc
xor
cmp
repz
dec
and
les
jne
cwtl
aaa
push
xor
stos
jae
shr
out
jmp
testl
and
mov
xchg
jecxz
push
adc
test
push
movsb
inc
sbb
jecxz
adc
push
xchg
xor
movsb
dec
inc
adc
cld
sbb
clc
movsb
imul
pop
ds
inc
mov
dec
xchg
in
cmp
add
sbb
cli
cs
leave
jecxz
clc
scas
inc
sbb
jns
fdivl
inc
ret
jecxz
sub
dec
xor
icebp
insl
je
jl
sbb
push
jge
fs
test
nop
call
cmp
sbb
push
push
or
or
lods
sbb
idivl
pop
push
in
into
fxtract
xchg
cli
inc
lock
xlat
mov
arpl
insl
inc
or
loop
cmp
int3
cmp
movsb
add
scas
pop
imulb
fwait
cmp
clc
addb
mov
clc
jnp
jle
inc
add
lret
push
inc
lea
xchg
ja
fucomi
pop
testb
inc
jge
xchg
push
std
dec
ljmp
iret
sbb
in
test
test
std
dec
sub
popf
out
aam
sti
xor
psubsw
inc
jb
jns
popa
mov
dec
pusha
pop
cmp
arpl
cmp
fcomps
or
mov
ret
adc
adcl
inc
pusha
lret
fcmove
test
jecxz
lahf
add
sub
cmp
shl
inc
stc
sub
dec
adc
fcomip
mov
mov
push
and
push
and
repnz
daa
rcrb
jp
cmc
add
add
cmp
mov
inc
je
mov
mov
or
and
andl
xchg
sbb
xchg
in
ljmp
cmp
add
nop
mov
dec
mov
mov
dec
call
mov
sbb
addl
xor
jo
ds
jl
add
fisubrl
movsl
aad
fidivl
pop
mov
mov
xor
aaa
ror
jg
pop
inc
gs
xchg
push
sbb
lea
mulb
xor
into
sbb
mov
jno
jno
clc
cwtl
ja
sub
das
inc
lret
mov
sbb
dec
or
jno
adc
mov
jl
aad
lods
test
inc
cmc
movsl
xorb
jae
test
mov
dec
test
in
cmp
mov
xchg
jmp
repnz
lcall
das
push
cmpsb
out
cmp
sahf
out
ja
xlat
or
mov
mov
xor
cmp
xchg
imul
inc
dec
push
sbbb
inc
mov
push
sbb
dec
cwtl
adc
xlat
in
jae
and
inc
fildll
pop
jmp
and
mov
push
lahf
imul
push
das
mov
mov
pop
addb
dec
aad
sarl
out
add
in
loopne
sub
xor
or
or
and
fidivrs
subl
stc
jnp
cmpsb
adc
mov
and
lods
inc
and
mov
loopne
adc
dec
jge
leave
sub
pop
jb
or
dec
inc
add
dec
sub
mov
sbb
push
outsb
jo
or
mov
scas
pop
jle
sub
pop
mov
pusha
pop
rol
sbb
cmp
xor
inc
or
xlat
xchg
pusha
inc
pop
enter
dec
loop
fsub
arpl
lods
arpl
sti
js
sahf
jb
jmp
loopne
repz
loope
fs
lea
jno,pt
sbb
loop
jge
mov
cmpsb
add
pop
cmc
add
xchg
jb
loop
xor
lock
mov
mov
sub
push
repz
dec
mov
and
rep
pop
inc
mov
movsl
test
bound
add
pop
mov
dec
popf
and
subl
push
enter
add
dec
hlt
stos
mov
jo
movsb
pop
push
push
cmp
out
mov
lcall
mov
mov
dec
das
xchg
xor
pop
js
arpl
imulw
xor
das
and
notl
daa
xor
ljmp
test
cmp
pop
les
ja
cli
adc
adc
sarl
and
sub
mov
sub
and
or
jo
add
xchg
mov
iret
xchg
dec
mov
push
sbb
pop
shr
adc
sbb
fnsave
mov
sbb
push
loop
fildl
ret
shrl
addr16
pushf
sub
pop
pop
daa
dec
ja
jecxz
scas
frstor
das
aas
test
inc
pop
fadds
pop
adc
and
push
or
mov
jle
and
incl
sbb
pop
inc
gs
jae
inc
mov
mov
mull
xor
push
dec
daa
mov
pop
and
cmp
sub
cmp
insb
hlt
repnz
jb
int3
add
in
sbb
pop
cli
push
pop
cmp
xor
adc
flds
mov
ss
imul
imul
pop
outsl
ret
sub
jno
idiv
inc
sub
lods
cmpl
pop
rorb
add
addr16
bound
add
inc
adc
xchg
movl
jb
ret
mov
inc
fwait
data16
out
sub
sub
pop
div
mov
xlat
pop
xchg
pop
movsb
adc
bound
clc
xor
daa
xor
jecxz
jnp
shrb
xor
mov
and
cltd
adc
fs
mov
and
mov
outsb
test
sbb
cmp
xor
lret
inc
test
dec
sbb
popa
mov
test
mov
mov
movsb
inc
pop
repnz
or
add
sti
dec
xchg
cltd
testl
sahf
repnz
fwait
inc
cwtl
cmc
scas
pop
movsb
inc
aaa
sbb
mov
cmc
movsb
inc
lods
movsb
cmpsb
scas
cmp
mov
sub
xor
cltd
xchg
sbb
inc
mov
sub
out
cmp
add
loopne
daa
test
adc
cmp
mov
inc
shll
shl
dec
ljmp
pop
in
shl
or
daa
mov
int3
jge
mov
fistpll
out
mov
mov
js
lea
inc
movsb
push
pop
bound
lods
cmp
mov
sbb
rcrb
sahf
xchg
lods
adc
fbld
or
xchg
xlat
jmp
mov
lret
mov
mov
dec
sqrtps
dec
adc
mov
mov
push
mov
jbe
sub
pop
inc
xchg
rol
cmp
nop
aas
pop
inc
lret
add
mov
jp
test
movsl
jns
jl
sub
jg,pt
jl
fisubrs
mov
jle,pt
jge
hlt
sub
aas
jle
jl
repnz
aas
pop
cmp
jb
xchg
fldt
adc
jae
ss
rclb
loop
cltd
xor
lods
movsb
mov
cmp
xor
mov
xchg
sub
ret
or
push
lock
pcmpeqd
repz
arpl
xorps
jp
xchg
jmp
movsl
ret
cld
or
mov
in
into
imul
lds
orb
jae
pushf
add
sub
adc
lods
push
jmp
dec
xchg
mov
rclb
mov
iret
mov
adc
mov
dec
rcr
lcall
mov
sbb
xor
sbb
push
push
call
mov
add
je
mov
add
xchg
cmp
sub
out
decl
add
test
jb
rclb
pop
mov
cwtl
ds
push
fwait
inc
ds
sbb
or
cmpsb
mov
jnp
xor
mov
enter
ja
mov
adc
sub
sbb
repz
cmpsl
or
mov
adc
add
mov
and
dec
pop
mov
xchg
jnp
or
addr16
lret
test
add
imul
adc
jg
xchg
sbb
sti
inc
mov
add
fwait
inc
call
jp
xor
inc
jae
lds
dec
cld
daa
fidivl
push
jl
andb
sub
xor
add
cmpsl
add
mov
sub
adc
mov
enter
cli
mov
outsl
pop
mov
dec
fs
daa
cs
clc
adcb
inc
mov
fwait
xchg
lds
push
das
orl
adc
inc
adc
add
sti
adc
add
imul
mov
fwait
sub
fldl
stos
ret
pusha
jb
and
out
rcrb
hlt
into
jnp
in
imulb
loop
jl
sahf
push
pop
or
xor
sbb
mov
psubq
mov
in
insb
push
hlt
xchg
add
pop
mov
dec
dec
or
mov
gs
cmp
mov
in
frstor
pop
push
add
and
jl
or
mov
and
pop
xor
es
shrl
cld
mov
xchg
push
add
out
iret
cwtl
das
or
lcall
xchg
push
xchg
dec
mov
shlb
lret
xchg
js
pop
and
test
mov
sbb
dec
pusha
xchg
lahf
add
xchg
add
pop
nop
dec
out
mov
or
cmc
out
test
fnstsw
sub
subb
lcall
hlt
or
hlt
sbb
push
adc
bound
aam
pop
hlt
mov
xchg
pop
adc
jge
mov
imul
xchg
xchg
movsb
es
xlat
pusha
sahf
fisttpl
sub
or
vmptrld
xchg
jbe
jb
lahf
cmpsb
push
aad
movsl
in
inc
dec
clc
das
adc
iret
decl
cmpsb
push
pop
xchg
into
push
div
inc
dec
js
jecxz,pt
das
hlt
insb
repz
mov
xor
popa
dec
les
push
jno
sbbl
jno
jo
out
ss
mov
mov
outsl
mov
aaa
lret
scas
aas
popf
push
bnd
aaa
ss
outsl
mov
mov
out
mov
cmpsl
pop
popa
aaa
push
hlt
push
mov
or
sub
and
scas
out
push
xchg
aas
lds
cmp
push
ja
sahf
lcall
pusha
mov
ss
out
enter
xchg
out
std
movsb
sbb
js
sub
cmp
out
incb
pop
cmp
gs
pop
enter
iret
cmp
inc
hlt
push
movl
dec
sbb
xchg
sub
xchg
and
add
lods
js
fwait
jp
jo
in
pop
test
das
cmp
jne
cltd
out
popl
fdivrl
call
xchg
dec
inc
aas
cmp
sub
xchg
or
xchg
add
inc
pop
lods
xor
int
cwtl
je
scas
fnstcw
sbb
push
fdivr
repnz
or
dec
jbe
or
test
pushf
xchg
clc
xor
add
cli
mov
jnp
adc
ret
jg
mov
adc
jnp
mov
sbb
jae
inc
and
aas
mov
fildll
test
adc
gs
cmp
in
or
aas
movsl
mov
mov
and
inc
and
hlt
lret
inc
cmp
mov
mov
in
sti
jbe
cmp
imul
ret
pop
cmp
fiadds
cmpsl
das
jo
mov
stos
call
push
push
mov
dec
fistl
mov
dec
into
push
sub
jle
mov
xchg
xlat
mov
addl
call
ds
jmp
push
ds
call
fnstsw
xor
mov
dec
test
adc
cs
aad
and
inc
popa
jl
mov
inc
push
push
loopne
orb
mov
inc
neg
movsb
xchg
push
fldt
add
out
je
fdivrs
hlt
repnz
aaa
adc
lret
lds
push
imull
imul
enter
mov
pop
push
push
cld
jo
out
mov
jle
dec
dec
xor
cmpsb
cmp
aam
dec
push
add
outsb
adc
rol
cli
out
sbb
push
cmp
xchg
jnp
cmp
jno
add
sbb
sbb
out
cmc
push
cmpsb
pop
ds
sbb
ljmp
jne
movsb
mov
push
in
addr16
or
ljmp
inc
or
dec
add
inc
sbb
add
xor
jb
cli
inc
shlb
adcb
ss
lods
daa
dec
stc
mov
or
daa
leave
or
mov
push
dec
xchg
add
jl
cmp
xor
repz
daa
ja
jecxz
mov
pop
sub
jae
shlb
sub
cmp
mov
jmp
cmp
jg
fstl
push
out
dec
cld
jl
outsl
add
dec
ljmp
add
jp
pop
xchg
sub
repz
xor
in
data16
les
mov
pop
stos
cltd
sbb
stc
cmp
out
push
pop
xchg
lea
out
sub
xlat
pop
repnz
daa
fbld
sub
pop
xchg
dec
rcrl
movsb
pop
cwtl
sub
and
jl
jb
sbb
push
or
sbb
inc
xchg
adc
in
inc
or
enter
cli
pop
xorl
leave
mov
push
sub
ja
ja
cmp
cmp
out
inc
int
jbe
mov
jecxz
lods
inc
std
dec
inc
push
pop
ss
ljmp
into
out
push
aaa
sub
ja
into
pop
inc
stc
mov
mov
inc
xchg
push
pop
mov
ljmp
sub
pop
dec
push
rclb
ss
sbb
inc
cltd
imul
adc
sub
xchg
rcrb
ja
xchg
dec
rorb
and
lds
scas
jae
out
out
sub
xlat
mov
xchg
loop
mov
xor
sbb
xchg
aaa
test
les
cmp
arpl
bound
jge
xorb
sub
mov
inc
cmpsl
jmp
adc
pop
xchg
fnstsw
out
inc
dec
sub
cmp
pop
cmc
cmp
add
xchg
pop
sbb
cld
xchg
dec
lcall
adc
cs
out
testl
xor
cltd
subl
rcrl
cmc
repnz
adc
or
aaa
in
testb
pusha
mov
mov
mov
jmp
outsb
jns
jmp
cmp
jmp
cmpsl
ss
pusha
xchg
faddp
fisubrl
add
les
xchg
jecxz
fwait
out
cmp
loop
hlt
mov
pop
insl
pop
in
xchg
or
jno
das
out
into
insb
push
sbb
jne
mov
inc
and
dec
movq
mov
subb
lcall
pushf
cmp
out
sarl
adc
int3
pop
iret
xor
in
push
adc
jno
mov
or
rcrl
push
add
add
pop
sbb
dec
or
push
pop
jl
sbb
pop
and
mov
adc
leave
xchg
out
lods
mov
sbb
lock
sub
pop
sub
inc
sbb
push
jbe
outsl
std
mov
or
xor
data16
sub
or
hlt
lea
sub
iret
push
enter
mov
sbb
fmuls
cmpsl
and
xor
fldl
jp
pusha
fcomp
lods
aas
push
pop
push
xor
inc
das
adc
movsl
rclb
popa
es
jns
enter
sbb
pop
push
cli
push
jecxz
sbb
out
add
sub
stc
in
or
add
leave
decb
insb
das
xor
inc
sub
mov
out
sub
pop
scas
aas
sbb
pop
fimuls
mov
xchg
test
xlat
or
rcrl
rclb
inc
arpl
jecxz
and
dec
loope
xlat
mov
cmpsl
gs
xchg
cmpsl
cwtl
inc
in
sti
cmp
fsubl
pop
dec
push
aaa
mov
push
fcmovu
cld
fimuls
xchg
test
inc
jo
push
aas
jne
push
xor
cmp
es
mov
sbb
push
daa
mov
popf
sbb
jp
mov
pop
notb
test
in
inc
ret
jle
lcallw
pop
sub
in
mov
pushf
mull
xor
imul
cmpsl
jnp
cmp
xor
out
ljmp
adc
cmp
pop
adc
mov
lret
cmp
das
cmp
int3
scas
enter
bound
into
mov
mov
negl
mov
cld
dec
mov
or
and
lock
inc
fdiv
xchg
xlat
das
xor
mov
fwait
std
hlt
call
sbb
pop
js
mov
pop
pop
test
and
pop
sbb
test
pop
fadd
sbb
xchg
push
xor
and
outsl
pop
adc
jbe
inc
inc
xor
hlt
into
jne
int
out
sub
or
xor
cmovl
push
mov
mov
iret
adc
out
jno
test
loope
pushf
test
lea
das
pop
pop
jecxz
or
xchg
inc
clc
dec
imul
in
testb
add
push
cld
fcomi
adc
pop
sub
jbe
scas
mov
cvtps2pd
push
insb
fldln2
outsl
fnstenv
cmp
int3
xchg
dec
dec
push
dec
xchg
bound
mov
stos
out
popa
lods
pop
pop
mov
pop
ss
pop
add
out
clc
loop
popf
mov
cmpsb
loope
jae
and
jmp
jecxz
or
sbb
inc
mov
and
cld
push
jp
pop
cmp
test
and
pop
fcmove
xor
pop
sbb
cmpxchg
add
std
pop
imul
in
scas
adc
xchg
cmpsb
pop
sbb
inc
mov
pop
test
inc
std
or
xor
out
outsl
mov
cmpsl
aaa
scas
lds
es
jae
add
xchg
fdivl
or
mov
sub
and
call
pop
mov
sahf
nop
jp
xchg
lods
inc
popa
add
stc
push
push
movsl
loopne
jmp
lods
fnstsw
inc
divl
add
punpckldq
jmp
pop
mov
lea
sti
sub
xlat
movsb
mov
int3
in
loop
add
and
mov
push
inc
adc
push
mov
push
pop
sbb
mov
cli
clc
in
cld
les
repz
mov
jns
aad
lock
aam
lcall
xor
js
idivb
std
mov
hlt
ljmp
xor
insl
ret
mov
out
mov
sbb
xor
test
in
cmpsb
jno
xor
rorl
dec
test
lock
ja
lock
xor
aaa
sti
out
pop
or
lea
inc
pop
sbb
pop
xor
ja
cld
outsb
push
add
sarl
aas
mov
fbld
je
mov
xchg
clc
xchg
ret
xchg
pop
in
mov
cld
pop
mul
sbb
xlat
dec
inc
cld
ret
inc
cltd
daa
push
ret
jae
xchg
adc
lea
mov
or
out
push
pop
shl
jae
scas
dec
pop
cld
lcall
mov
cltd
outsl
pop
aam
iret
or
test
mov
inc
adc
inc
dec
scas
and
movsl
mov
pushf
rcrl
js
mov
in
daa
mov
cmp
out
lcall
adc
mov
pop
bound
pop
add
shll
aas
sbb
mov
push
bound
sbb
test
sbb
pop
sbb
fisttpl
fs
mov
scas
test
sbbl
addr16
pop
pop
jecxz
iret
decl
cld
add
cwtl
xor
rorl
dec
test
out
cmpsl
lahf
adc
lea
addr16
inc
mov
xlat
dec
mov
sbb
xchg
iret
fwait
dec
subb
cmp
rcrb
jecxz
into
cmp
sti
and
pusha
or
out
fs
jmp
adcl
in
cmpsl
iret
inc
enter
and
pop
sbb
fistpl
pop
iret
xchg
dec
test
orb
push
mov
sbb
push
lcall
xlat
out
inc
add
mov
sbb
jae
dec
outsl
dec
pushf
sti
push
arpl
in
mov
or
mov
js
mov
out
subl
sbb
jmp
daa
dec
adc
adc
add
punpcklbw
sarb
or
inc
cmp
scas
lahf
adc
lea
mov
lock
pop
enter
mov
sbb
aas
iret
ret
dec
fs
lcall
negl
lret
popa
inc
out
repz
adc
lea
cmpsl
filds
sbb
pop
pop
adc
xchg
cltd
pop
mov
arpl
call
test
mov
dec
clc
lret
bound
ja
mov
or
inc
sbb
fcmovne
sbb
sti
testb
adc
dec
or
mov
inc
mov
pop
in
jmp
daa
iret
fisttps
cld
lret
pop
cltd
pop
pusha
cmp
jg
aaa
addr16
adc
int3
cmpsl
stos
inc
sbb
pop
clc
xor
stos
sbb
mov
xchg
xchg
mov
aaa
mov
adc
adc
sbb
out
lea
inc
inc
pusha
sbb
sub
jnp
cli
fwait
cltd
pop
pop
jl
mov
fsubrs
mov
and
loop
inc
lret
out
outsl
pop
adc
mov
inc
movsb
outsl
pop
sahf
sti
bound
pop
shll
aas
sbb
mov
js
mov
out
mov
jg
mov
pop
jecxz
into
inc
dec
in
sub
pop
adc
xlat
or
out
aas
insb
mov
xchg
dec
addl
iret
out
lock
lcall
adc
lea
or
jecxz
fs
cmp
mov
cmpb
mov
nop
test
mov
cld
div
and
ficomps
outsl
pop
adc
mov
cld
add
lret
or
test
mov
cmp
mov
arpl
out
andl
rcrb
jecxz
into
daa
dec
sbb
push
stos
add
cltd
punpcklbw
jecxz
insb
test
mov
lea
sbb
pop
fadd
xchg
pop
mov
sbb
dec
iret
lret
dec
insb
cld
stos
sbb
aaa
jae
fwait
popa
push
out
ret
jecxz
loopne
mov
pop
or
jecxz
mov
sbb
jg
ja
or
inc
push
int
aas
call
mov
sbb
jns
pop
jmp
dec
addr16
aad
stos
pop
call
mov
daa
xor
add
in
sub
das
pop
aam
in
fistpll
rcrl
xor
int
test
int3
sahf
lret
inc
add
mov
push
pop
test
outsb
cmp
lea
inc
add
mov
mov
aas
xchg
fcompl
call
pop
adc
inc
pop
test
or
fisttps
int
sbb
fidivl
jp
cmp
std
mov
rcll
mov
inc
and
adc
push
mov
inc
divb
dec
test
cmc
cmp
aam
incb
out
inc
negl
aam
ret
mov
xor
pop
arpl
sbb
and
lds
push
incl
stc
fs
dec
popf
cli
into
hlt
pusha
fwait
dec
pop
js
jge
loop
aad
or
sbb
in
imul
lods
loopne
xor
lds
xor
pop
lds
movsb
aas
into
lahf
jae
lcall
mov
add
add
cmc
inc
xchg
mov
fdiv
inc
mov
cmp
cltd
in
movsl
jecxz
sbb
adc
aad
inc
cwtl
les
loop
daa
mov
xchg
mov
xchg
xchg
cld
push
jle
inc
mov
lret
dec
mov
leave
sti
xchg
adc
test
decb
mov
pop
sbb
push
xlat
sub
push
out
repz
outsl
sub
in
fsubrs
ret
lock
push
roll
fisubrl
xchg
xor
dec
pushf
cmpb
sarl
not
inc
mov
mov
pop
mov
outsb
cmp
in
xchg
add
scas
push
sub
mov
enter
xchg
xchg
push
out
repz
repz
pushf
es
pop
xor
add
mov
jb
and
sbb
dec
add
cmp
xlat
or
repz
sbb
repz
dec
xlat
aas
sbb
jae
movsb
out
mov
xchg
fisttpl
push
leave
fs
out
out
and
ret
xor
rcll
or
nop
adc
aaa
out
mov
adc
lret
mov
orb
fsubrs
js
js
dec
lahf
push
out
add
cmp
mov
out
mov
repz
inc
std
pop
mov
lds
cmp
mov
lock
test
push
aam
loop
and
outsb
push
sub
je
lock
jp
dec
nop
pusha
and
cmp
ret
out
jnp
dec
pop
cmc
daa
iret
xchg
lahf
pop
fwait
call
shlb
adc
div
cmp
cmp
lahf
sub
and
dec
cmpsb
xchg
pop
out
sti
ret
lretw
mov
stc
fidivrs
pop
inc
push
shl
dec
aad
cmp
pop
sar
mov
int3
push
and
sbb
pop
adc
add
cmc
subps
fsubr
loope
fidivrl
mov
outsb
cltd
sub
loop
dec
pop
jp
sub
push
sub
mov
lock
xor
faddl
mov
sbb
jg
cld
xchg
jne
push
jae
and
pop
fcompl
in
mov
pop
xor
and
cmpsb
fcom
sub
pusha
lret
mov
repnz
dec
mov
push
mov
xchg
and
addl
repz
test
cmp
and
addr16
and
ja
pop
and
ret
arpl
sub
int3
sahf
div
lea
and
les
pop
jno
cmova
and
out
bound
mov
das
mov
jp
cmpsl
aaa
movl
mov
into
sti
stos
cmp
pusha
out
dec
cld
mov
rcll
mov
popa
mov
pop
nop
daa
pushf
mov
fwait
test
xor
shl
popa
std
xlat
rorl
std
cmp
cld
xchg
fwait
lret
fcmovnb
aas
adc
pop
add
adc
int
and
jecxz
es
cmpsb
hlt
adc
mov
aaa
lock
push
ret
movhps
push
inc
push
stos
neg
inc
mov
in
aam
pop
xchg
shl
iret
or
scas
loop
adc
and
inc
lock
adc
das
jo
std
mov
fwait
xchg
xlat
push
add
pushw
xor
stos
scas
inc
lahf
sti
and
negl
in
lret
scas
int
mov
jns
sub
fisttpll
add
lret
push
movsb
dec
das
movsl
out
insb
int
add
aas
test
movsb
int3
inc
lret
sbb
out
dec
aaa
inc
adc
or
mov
xor
mov
mov
call
lahf
mov
push
mov
inc
cwtl
dec
loopne
push
iret
pop
push
push
xor
mov
mov
fdivl
pop
jmp
fisubl
dec
mov
mov
mov
xor
mov
cmp
inc
pop
test
stos
out
outsl
mov
xchg
ja
xor
lods
inc
test
dec
out
mov
add
adcb
xchg
insb
inc
out
jb
imul
inc
sbb
decl
in
inc
clc
mov
adc
fadd
pushf
dec
jae
leave
add
add
dec
addr16
in
insl
push
imul
bswap
push
dec
dec
xor
insl
push
fstps
lcall
in
mov
aad
mov
add
push
pusha
aad
mov
inc
jo
stos
sbbb
push
cli
and
xchg
loope
pop
movl
mov
aas
bound
scas
mov
hlt
loope
push
mov
repz
mov
negl
pushl
pop
int3
shll
mov
test
filds
xchg
xchg
fwait
and
aam
dec
jle
popl
nop
push
popa
test
imul
pusha
aaa
mov
push
pop
dec
dec
lds
adc
cld
add
fdivs
push
fs
ljmp
dec
shl
mov
inc
xor
sahf
add
into
xchg
push
rcl
andl
loopne
fistl
xlat
in
aaa
push
insb
ret
insl
mulb
out
loope
test
and
icebp
movsl
call
push
cli
mov
out
loopne
mov
icebp
dec
jb
jne
loopne
sbb
jbe
jl
cmp
arpl
mov
bound
mov
rclb
push
hlt
xlat
pop
dec
or
fiaddl
js
imul
adc
inc
xor
pop
dec
addr16
push
mov
jge
mov
xchg
pop
cmpsl
out
push
addr16
sbb
mov
jecxz
jb
loop
jb
push
stos
or
fildll
adc
push
jge
mov
adc
leave
mov
pop
jo
cltd
in
out
imull
sub
push
cmp
cld
int
pop
and
in
add
rcll
mov
stc
inc
dec
add
ja
push
and
lods
loope
mov
push
adc
stc
fs
cmp
ret
out
mov
jae
outsl
mov
enter
pop
push
out
data16
adc
pusha
xor
nop
xor
jno
test
pop
sarl
dec
clc
daa
cmp
aad
outsl
jno
mov
scas
inc
neg
mov
int
loopne
std
or
testb
jecxz
pusha
pop
movzwl
push
adc
mov
inc
test
fstp
dec
mov
leave
lds
adcb
or
or
daa
imul
cli
mov
stos
dec
lea
into
xchg
dec
stos
jb
ds
pop
pushf
or
or
xchg
xchg
xorb
aaa
int
sub
push
pop
les
in
mov
lods
push
mov
arpl
xor
out
stc
pop
add
push
xchg
push
in
xchg
pop
cmp
push
pop
rorb
jge
jecxz
jle
pop
jb
mov
inc
pop
pusha
aam
fimuls
fcmovnu
imul
mov
imul
jb
mov
jae
cmp
xchg
lahf
fldl
movsl
mov
daa
mov
lock
mov
inc
cmp
dec
adc
adc
mov
ja
setbe
ljmp
adc
adc
cmp
flds
shlb
dec
jecxz
in
add
lahf
mov
hlt
mov
aaa
mov
gs
or
test
ror
aaa
negb
push
sbb
cmp
jae
mov
xor
dec
addr16
push
popf
mov
sbb
prefetcht2
xor
push
stc
and
mov
ss
sbb
inc
mov
inc
jmp
lahf
dec
fsubl
sarb
pop
adc
dec
dec
jb
xchg
sub
sbb
inc
dec
bt
jne
scas
fs
mov
xchg
pop
sbb
call
cmpsl
std
push
xchg
daa
lcall
std
cmpsb
and
adc
pop
sbb
int3
xor
repz
push
shlb
xchg
std
rcrl
pop
xor
push
insb
jo
sbb
lahf
add
std
xchg
dec
adc
adc
and
xor
and
and
int
mov
pop
add
dec
in
mov
inc
pop
sbb
push
inc
dec
or
in
inc
xor
sbb
pop
pop
mov
mov
lock
cmpsb
xchg
sbb
dec
repz
adc
sahf
mov
xchg
ret
inc
cld
and
push
inc
dec
xchg
loop
pop
imul
mov
pop
xchg
ss
add
xchg
cmp
stos
jecxz
fbld
xchg
divl
or
mov
inc
or
pop
pop
cmpsb
lds
les
pusha
pushf
int3
mov
out
testb
fcoms
xchg
jno
mov
fistpll
mov
negl
loopne
xor
out
inc
pop
test
cli
fs
inc
data16
inc
fcompl
sub
push
fidivrl
out
jo
je
aaa
pop
cwtl
or
leave
xchg
in
int3
mov
inc
pop
sbb
sub
or
leave
or
in
mull
mov
daa
pop
testb
arpl
das
cld
loop
mov
outsl
ret
ret
jge
xor
lock
jo
sbb
push
push
jb
bnd
push
cmp
je
hlt
inc
mov
push
push
adc
mov
pop
pop
adc
rolb
or
int
sub
sub
jle
cmp
and
mov
sahf
fnsave
subl
icebp
arpl
leave
clc
leave
sbb
xor
pop
and
and
std
cmp
or
fildl
sub
xchg
pop
mov
fisttps
mov
and
cmp
push
imul
mov
adc
dec
lahf
fidivrl
pop
cli
mov
loop
cs
inc
lods
sar
or
std
aaa
mov
dec
lret
mov
jge
mov
iret
jl
lds
sbb
pop
dec
xchg
out
pop
clc
cmp
ljmp
sub
mov
iret
filds
add
mov
out
pop
xchg
lock
ja
aam
inc
test
lret
sub
or
dec
push
sbb
shrl
pushf
jbe
and
dec
add
add
or
sbb
sub
inc
je
push
xchg
lods
mov
jbe,pt
push
inc
call
or
dec
dec
cld
xor
add
and
daa
imul
int
cmp
into
std
xchg
fs
aam
sub
gs
fnsave
push
xchg
daa
pop
lods
outsb
jg
movsb
adc
mov
popf
les
repz
push
inc
push
lret
jge
mov
adc
xchg
jae
popa
cltd
mov
hlt
fldt
mov
mov
adc
cmp
inc
push
mov
pop
mov
add
dec
leave
xor
sub
or
add
cmp
sub
dec
dec
div
push
cmp
xor
jo
lods
inc
mov
repz
and
in
sub
cs
sub
lds
dec
clc
xchg
cld
loopne
lahf
out
xchg
in
cs
mov
mov
idivb
out
outsb
jne
inc
pop
iret
xor
inc
mov
fdivs
and
fbstp
jle
cmc
and
sub
insb
mov
mov
fldt
pop
aaa
scas
add
dec
and
jmp
lahf
outsl
jo
pop
mov
mov
aaa
shr
jg
ret
pop
mov
ds
adc
notb
sbb
inc
inc
fcmovu
inc
or
or
cmp
or
mov
lods
mov
and
push
lea
or
stc
leave
lret
hlt
lods
mov
and
shll
int
and
mov
or
daa
add
and
jmp
loop
mov
inc
push
jle
test
pop
cmpb
and
stos
cmpsl
mov
mov
popf
and
jns
adc
loope
push
test
into
adc
xchg
sbb
daa
fwait
mov
and
in
sarl
in
and
fdivl
mov
inc
ffreep
pop
sbb
jb
pusha
cli
pop
aaa
test
stos
ret
dec
push
xchg
mov
ljmp
lret
push
loopne
adc
addr16
cmc
or
test
iret
ret
sbb
mov
outsl
dec
inc
and
mov
jbe
xchg
dec
inc
mov
jb
jns
mov
scas
addr16
adc
inc
lods
pop
lea
testb
jnp
pusha
outsl
jae
leave
mov
arpl
mov
imul
inc
ljmp
push
daa
add
outsl
out
sti
ret
fidivrs
pop
inc
xchg
cmp
les
insl
fistpl
cli
scas
sarb
fnstsw
xor
lret
mov
mov
loop
mov
inc
movsb
xchg
pop
nop
and
ret
fidivl
mov
xchg
es
and
cli
popf
xchg
std
lcall
stc
jae
stc
sub
out
sti
popf
ds
stos
seto
mov
xchg
pushf
xor
push
or
sbb
sub
loop
add
add
repnz
in
xchg
inc
dec
test
jo
aam
and
mov
jmp
push
xor
or
mov
lods
push
out
adc
adc
lcall
addr16
stc
leave
push
fwait
cwtl
push
sub
mov
shr
rcll
and
andl
fldl
fmuls
lea
popf
clc
dec
jns
or
call
movsl
scas
push
sub
shl
addr16
idivl
mull
pop
xor
push
outsl
mov
aad
push
shll
jmp
data16
test
mov
std
pop
xor
cmp
in
iret
data16
sbb
mov
push
testb
push
sbb
pop
dec
xor
pop
xchg
xor
in
push
mov
shrb
add
adc
xor
xchg
or
repz
push
inc
adc
adc
test
mov
sub
xor
or
jae
test
mov
dec
jmp
push
test
jne
inc
add
push
out
push
xchg
adc
fiaddl
jmp
ja
push
in
outsl
push
adc
test
and
das
sub
jmp
jne
sti
and
addr16
aaa
loop
fdiv
jg
out
in
xchg
push
incl
xor
xor
inc
sub
cmp
fwait
inc
std
mov
jmp
push
xchg
xchg
aas
lods
sub
push
int3
int3
das
repz
xlat
dec
subb
or
xor
imulb
ljmp
js
repz
insb
sub
pop
xor
sti
inc
push
sbb
insl
arpl
xor
dec
insl
pop
adc
shl
add
testb
sub
inc
cmc
fstpl
push
cltd
daa
push
add
adc
and
sub
sub
pop
inc
lock
jb
jnp
sahf
ss
push
test
in
fcmovnu
repnz
out
sub
mov
cmp
int
aaa
sbb
subl
pushf
lcall
xor
ss
xchg
and
and
xchg
cmc
aam
test
into
clc
mov
insl
adc
rorb
pusha
test
mull
jmp
mov
xor
pop
sbb
aaa
xor
mov
out
scas
mov
lahf
insl
aas
inc
sbb
lock
xchg
sbb
and
and
sub
cs
cld
xchg
mov
int
in
mov
cmc
and
mov
fildl
insb
repz
sub
cmpb
movsb
jmp
clc
dec
fstp
pushf
fildl
push
in
and
or
in
push
fisttps
or
mov
pop
out
push
andl
xlat
jae
or
xor
and
lock
clc
pop
inc
out
popa
enter
sub
xchg
pop
mov
ret
jmp
mov
push
lahf
xchg
mov
icebp
test
lret
cmp
inc
sbb
outsl
push
int
and
dec
cmp
mov
clc
rol
shrb
and
jp
out
mov
stos
add
ret
popa
popa
dec
push
mov
sbb
cmpsl
out
int
lret
mov
test
popf
mov
push
cwtl
jno
cmp
pop
fisttpll
inc
pop
lret
dec
adc
jp
bound
movsl
fbld
or
pop
daa
ljmp
sti
call
es
loop
xor
mov
outsl
aaa
mov
adc
or
cmc
sbb
and
mov
xchg
push
bound
cmpsl
pop
mov
lahf
add
popa
out
je
aas
mov
aad
mov
int
inc
lret
lods
add
enter
mov
and
jo
push
les
std
sub
or
lods
sbb
pusha
dec
mov
cld
scas
inc
les
cmpsl
lcall
dec
sbb
and
pop
push
ret
outsl
fsubrs
xor
in
mov
stos
and
sets
out
jne
xchg
punpcklbw
pop
ret
lcall
rorb
fldl
or
insl
or
je
mov
sbb
stos
ss
or
sbb
lods
shlb
pop
lret
shl
inc
xor
cld
jno
adc
adc
push
mov
movsl
lcall
dec
and
repnz
bound
add
add
fstpl
loope
ja
orb
sbb
outsl
push
xor
iret
or
add
es
enter
xchg
push
fdiv
push
ljmp
lret
xchg
jecxz
idiv
stc
cmp
dec
movsl
pmulhw
mov
adc
cmpsl
rcr
adc
aam
adc
mov
pop
xor
xchg
clc
clc
xchg
hlt
adc
mov
push
test
or
fmuls
cmpb
push
fidivrl
aas
inc
push
mov
xchg
mov
arpl
xor
out
es
lock
jae
and
int
add
adc
sub
jp
sbb
mov
dec
or
sub
js
int
fldt
jne
nop
adc
test
mov
fs
fbstp
mov
xchg
sub
int3
pop
sub
rcll
jp
cwtl
pop
cmp
imul
roll
xor
mov
cmp
sbb
xchg
out
inc
lret
push
mov
cltd
adc
mov
pop
sahf
dec
lcall
cld
mov
add
cltd
sbb
shll
cli
cli
dec
dec
jg
cmpb
pushf
jg
push
test
mov
test
pop
lcall
adc
mov
inc
in
adc
and
mov
sbb
fcmovne
stos
dec
sbb
cmpsb
xchg
add
lahf
jae
movsl
mov
mov
fwait
inc
popa
shrb
pusha
push
call
cmp
in
jb
add
negl
xchg
jo
and
pop
outsl
jmp
fs
gs
incb
xchg
xchg
xorl
and
dec
mov
rol
dec
xchg
jnp
inc
gs
cmp
rorl
int3
fstpt
adc
loopne
and
out
adc
adc
stos
mov
xor
xor
jo
xlat
out
mov
stos
dec
std
lret
pop
jecxz
into
sbb
arpl
fwait
sahf
fcmove
push
iret
sub
std
lock
imul
xchg
mov
cmp
mov
mov
jp
std
dec
rcrb
mov
pop
jmp
rcll
js
dec
inc
jnp
loope
mov
cmpsl
pop
pop
xchg
mov
test
iret
add
lods
cmp
jecxz
ffreep
into
jg
push
mov
mov
sub
repnz
cmp
into
imul
int
pushf
sti
adc
inc
or
and
dec
cmp
pop
jne
and
xchg
imul
std
push
jbe
mov
test
xchg
cmp
mov
test
or
fwait
ret
into
add
mov
mov
and
test
fistps
sti
pop
lea
adc
add
jmp
mov
or
pop
andl
adc
jl
imul
mov
sbb
mov
sbb
pop
daa
jecxz
mov
sbb
mov
dec
jecxz
mov
sbb
mov
mov
pop
mov
and
jae
inc
xor
scas
stos
scas
xor
xor
enter
dec
movups
subb
sarl
lret
xchg
pushf
xor
or
and
push
mov
into
outsl
xchg
out
dec
adc
cmp
shl
sub
xchg
pop
inc
mov
sbb
sbb
inc
push
out
add
mov
mov
push
lret
fwait
mov
sti
cli
js
adc
dec
cmp
int3
faddl
cli
xchg
sub
and
ja
incl
mov
pop
in
adc
or
addr16
xchg
dec
test
sub
xor
ret
hlt
sub
add
sub
jb
sti
cs
sub
mov
sbb
movl
ja
and
sbb
jnp
ret
cmpsl
mov
rorb
add
pop
les
lods
sti
mov
add
or
jb
in
lret
popf
cmc
mov
mov
dec
jl
or
inc
pop
fwait
and
imul
ror
mov
cmpb
cmc
push
jne
push
enter
mov
sub
int3
inc
xor
and
sub
loop
lahf
fcompl
xor
mov
mov
lcall
sbb
aad
mov
dec
fistpll
cmovo
popl
sub
adc
aam
xor
stc
loope
adc
in
sub
and
test
inc
dec
das
test
xchg
jl
mov
int3
dec
xor
pcmpeqw
cltd
cmp
stos
mov
call
and
mov
xor
scas
inc
xor
mov
jmp
and
enter
mov
lahf
mov
cmc
sahf
mov
mov
sub
pushf
add
fsubs
push
repnz
mov
ret
sub
clc
out
dec
adcl
ljmp
xor
dec
mov
negl
add
or
sub
push
inc
fdivs
mov
mov
mov
rorb
pusha
lcall
out
addr16
inc
push
lret
sbb
sbb
pusha
xlat
add
movsb
sbb
sti
bound
jne
inc
add
add
dec
add
adc
xor
mov
roll
mov
inc
scas
add
inc
aad
sarl
pop
repz
inc
mov
xor
mov
popa
into
std
jg
mov
out
dec
fstpl
cld
mov
lock
scas
dec
inc
pushf
mov
jb
into
fsubr
jne
xchg
pop
mov
loopne
pop
insl
ss
sbb
lcall
mov
or
or
pop
cwtl
leave
xchg
push
and
mov
out
sahf
push
test
mov
lds
or
sbb
sahf
cmp
out
ja
out
mov
add
andl
stc
mov
xor
xlat
push
fstpt
imul
sub
jle
jnp
jbe
lods
inc
mov
cmp
jle
mov
cmpb
mov
