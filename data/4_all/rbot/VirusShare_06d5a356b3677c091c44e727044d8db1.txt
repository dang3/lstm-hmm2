push
or
add
add
add
mov
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
rsqrtps
add
push
add
roll
xor
push
add
push
add
add
push
add
add
add
addb
add
cld
rolb
pushf
rolb
or
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
hlt
add
add
add
add
add
sbb
add
adc
add
mov
lea
ds
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
push
add
add
mov
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
lea
inc
fcoml
push
xchg
leave
jb
lods
jno
stc
mov
cld
in
repnz
xor
imull
xor
repz
es
add
arpl
xlat
jo
inc
xchg
inc
addr16
inc
cmp
sbb
xor
sbb
jo
test
ljmp
push
pop
mov
je
mov
sub
mov
inc
int3
movntq
xchg
dec
jp
in
filds
js
inc
pop
push
test
cli
or
jne
inc
push
push
sub
popa
cmpsb
xor
mov
jp,pn
xlat
or
push
jle
cmp
add
out
adc
jb
orb
sub
pop
imul
movsb
das
dec
rcr
pop
xlat
stos
xchg
pusha
dec
sbb
mov
dec
add
or
pop
subb
xchg
mov
outsl
jmp
stos
popf
test
rclb
ret
js
dec
mov
out
mov
inc
out
xchg
mov
inc
xchg
push
lock
adc
sub
popf
mov
mov
popf
mov
ds
xchg
mov
dec
ret
out
sub
repz
insb
jp
or
dec
stc
pop
out
das
fsubp
xor
icebp
pop
lahf
call
daa
imulb
xor
shrb
adc
push
sub
jns
dec
aaa
js
jns
adc
bound
lods
pop
imul
ret
mov
and
mov
lcall
stc
je
out
call
shld
les
xor
ret
push
fstps
mov
mov
mov
cmp
jne
jle
jbe
fcmovbe
jno
pop
cmpsb
in
stc
mov
scas
mov
mov
inc
stos
cmpsb
and
mov
dec
daa
scas
ds
cmp
pop
jbe
call
push
push
in
add
je
and
out
dec
dec
jge
stos
xor
addb
sahf
dec
jle
andb
adc
jae
sub
adc
stos
lock
andl
lret
sbb
add
add
je
jo
lcall
push
int3
cmp
fwait
popf
insb
leavew
sub
mov
xorb
pop
shlb
and
dec
incb
in
mov
adcb
leave
mov
xor
lods
stos
je
mov
out
mov
call
sahf
rcrl
push
cmp
jne
lds
movsl
movsb
mov
ret
add
lds
mov
mov
call
dec
inc
mov
cld
daa
xchg
adc
pop
ja
ret
add
xrelease
adc
imulb
pop
loopne
adcb
enter
cmp
lds
mov
lock
dec
dec
loopne
cmpsb
sbb
lcall
inc
test
les
in
mov
xchg
lret
adc
adc
stos
adc
and
adc
sbb
icebp
sub
dec
orb
jp
ss
ror
or
push
mov
scas
mov
insb
xchg
mov
xorb
xor
mov
fildl
movsl
cld
xchg
xor
leave
mov
add
loop
in
imul
loopne
fildl
scas
js
xor
cmp
add
rcrb
test
aaa
or
jecxz
push
loope
and
jns
lods
cmc
pusha
pop
arpl
mov
add
adcl
pop
loopne
or
aad
adc
in
add
jnp
inc
fnstenv
cli
push
es
dec
xchg
arpl
js
jns
or
xchg
femms
ss
xchg
fidivrs
push
outsl
pop
leave
cmp
ret
pop
rorl
ficoms
mov
enter
fstps
clc
cmpsl
in
out
dec
rcll
mov
sbb
sub
ja
cmp
push
mov
idivl
in
movsb
xchg
or
add
pop
xor
mov
mov
mov
inc
xchg
stos
cld
adc
adc
sbb
mov
jp
xor
mov
shll
pop
pop
arpl
xor
cmp
movsl
aam
outsl
lea
mov
into
lcall
lret
inc
jb
aas
pop
ss
sub
xor
mov
pop
sub
cmpsl
dec
mov
jo
and
imul
adc
pop
mov
ljmp
nop
xchg
loopne
outsb
mov
inc
pop
jecxz
pushf
pusha
and
out
or
cmp
push
fdivs
int3
imul
pop
into
or
int
sub
mov
cmp
rorl
add
out
ja
or
movsl
or
adc
pop
and
mov
ds
test
lret
icebp
fstps
push
int3
cmpb
das
mov
mov
loopne
mov
fscale
pop
push
sbb
mov
iret
incb
into
xor
jo
xchg
movsl
xor
fstl
lods
inc
add
insb
and
cld
sbb
cs
das
mov
push
hlt
mov
lcall
pop
rcl
lock
int3
cmp
jmp
and
mov
and
fcomps
enter
aam
cmp
lds
movsb
adc
add
xchg
mov
mov
mov
repz
pop
jns
inc
push
sub
sbb
push
loopne
je
mov
cmp
loope
xor
test
jecxz
dec
hlt
shl
dec
shrl
loop
mov
adc
stos
ret
push
das
ds
cmp
fidivs
and
test
or
mov
loope
jno
ret
push
inc
or
mov
xor
daa
out
inc
aaa
add
push
fcmovnbe
add
xlat
jae
and
fcoms
jle
in
mov
push
xchg
and
out
fistps
push
fcompl
int
push
xchg
add
cmpsl
jbe
and
sbb
in
fldenv
leave
out
lahf
cmp
ds
lea
sbb
or
adc
loopne
mov
lea
fnstenv
inc
aaa
jmp
lods
mov
ja
bound
pop
cmpsb
mov
add
mov
movsl
xor
inc
jmp
orl
push
xchg
push
xor
cmp
xor
inc
pop
cmovne
insl
add
adc
push
loope
jl
cmpsl
js
pop
cwtl
pop
fdivl
call
sub
jns
sub
cs
add
sub
cs
adc
movl
sbb
jno
xor
add
cmp
movsl
lods
cltd
and
adc
add
repz
xorl
xlat
pop
aas
and
leave
lret
fistpll
prefetchnta
xchg
jl
sub
test
adc
lret
inc
ficompl
scas
test
adc
sub
pushf
inc
push
es
lret
addr16
dec
ja
lods
sub
mov
call
and
int
sar
or
xor
fstps
pop
fnstenv
nop
movb
inc
pusha
mov
xor
pop
subb
in
popa
dec
and
daa
mov
mov
xchg
adc
cmpl
jns
sahf
bswap
sbb
cmp
add
test
dec
push
cltd
cwtl
sbb
jb
call
loop
pop
pop
and
jno
cmc
out
fstp
adc
jnp
push
fistpll
int3
or
sub
jne
mov
sti
cmpsl
ljmp
negl
xchg
clc
adc
std
mov
xor
sbb
std
xchg
cmp
das
mov
insb
and
fs
les
mov
das
mov
cli
xor
and
xchg
ficoml
pop
pop
lret
cmpsb
add
data16
shl
xchg
cmpsl
push
cltd
popf
cmp
cld
sub
ss
dec
sub
aas
push
sbb
les
pop
cltd
test
lds
cmpsl
roll
js
pop
or
ds
cwtl
and
xchg
mov
push
sub
and
lods
jp
je
lcall
lret
dec
mov
pushf
lret
mov
aad
mov
jno
sbb
test
popa
leave
repnz
sub
jae
jecxz
fsubrs
imull
adcb
jne
loopne
jge
mov
lds
inc
and
xchg
rcll
sub
cmp
cmp
xor
ljmp
sub
dec
in
pop
jg
imul
sbb
xor
dec
aas
jge
fists
dec
sbb
push
mov
out
jge
aam
loopne
and
cltd
xchg
jb
pop
dec
xor
cmp
mov
out
cltd
cwtl
jns
aam
aam
add
sub
jle
add
adc
div
mov
lcall
mov
add
adc
dec
shrb
int3
xchg
repz
cmp
fcmovu
cltd
pop
outsl
push
sub
xor
das
stos
in
into
xchg
jmp
fneni(8087
test
lcall
mov
lcall
fcomps
and
fs
aas
aas
jae
cmpsl
sub
or
sbb
jg
adc
loopne
push
cld
push
and
dec
xor
jns
and
repz
pop
mov
aam
mov
jecxz
add
data16
mov
push
in
mov
lahf
pop
xchg
jno
daa
test
xor
test
xchg
pop
mov
push
mov
aaa
rcr
dec
stc
add
je
adc
mov
outsb
ret
push
fsub
scas
aaa
dec
cmp
pop
push
or
dec
gs
pop
xchg
scas
xchg
ja
ret
notl
jne
sbb
mov
pop
mov
into
jae
xor
mov
insl
xchg
shrl
mov
aas
sbbb
xor
in
not
insb
in
lcall
xlat
in
xchg
dec
mov
ret
mov
scas
jecxz
cwtl
mov
mov
imul
sub
or
testb
cltd
repnz
mov
test
inc
rcrl
and
add
mov
hlt
sbb
je
add
stc
movsb
jo
fdivrs
xor
pop
xchg
scas
dec
mov
test
rorl
dec
push
xchg
dec
mov
sbb
leave
cltd
mov
ss
mulb
mul
jmp
pusha
jmp
push
mov
xchg
adc
add
jge
ljmp
sub
testl
es
xor
popa
xor
lock
mov
mov
xor
insl
jp
sub
gs
dec
aam
insl
add
adcl
lcall
imul
mov
xchg
sub
nop
sbb
out
insb
dec
scas
in
popf
pop
and
jmp
mov
in
or
inc
cmc
mov
cwtl
popw
dec
push
in
fcomps
xchg
rolb
sub
mov
dec
cmp
jno
xchg
mov
nop
mov
inc
stos
adc
roll
jge
nop
imull
ljmp
dec
lea
bound
js
adc
xchg
inc
test
pop
xchg
mov
adc
test
xchg
xchg
jg
rorl
icebp
mov
popa
adc
inc
or
in
insb
xchg
jmp
push
je
imul
loopne
add
jne
cwtl
dec
cs
dec
xchg
iret
dec
inc
mov
ret
inc
adc
test
aaa
mov
popa
jg
loop
rclb
popf
mov
test
int3
loop
adc
jbe
xchg
inc
or
insb
mov
out
push
adc
sbb
nop
add
cmp
mov
adc
inc
shrb
mov
out
rorl
les
push
mov
in
mov
dec
push
ret
inc
or
or
mov
cmp
ds
ret
mov
int
and
jg
lods
sahf
add
dec
jmp
fistl
sar
repz
leave
and
mov
in
shl
xor
repnz
ret
pop
push
outsl
out
dec
mov
or
int3
insl
xor
jnp
les
ret
dec
test
cmc
sbb
popf
scas
pop
jge
mov
jmp
ljmp
out
mov
sub
push
rorl
sub
sbb
pop
pop
mov
adc
lods
inc
daa
sbb
and
stc
lret
stos
inc
and
dec
adc
add
xor
add
sbb
ret
sti
mov
aad
adc
clc
jg
or
adc
dec
or
jns
negb
push
inc
shll
outsb
jnp
cli
and
rcr
sbb
push
push
and
push
mov
packsswb
andl
imull
scas
pop
nop
loop
xchg
mov
mov
cmc
pop
imul
pop
push
mov
inc
cmp
icebp
mov
sub
sbb
and
call
dec
lods
adc
sbb
jno
fistl
pusha
sbb
inc
dec
test
pop
ffree
jne
imull
mov
je
rcrl
loope
push
shrl
sub
sub
sbb
inc
divb
and
xchg
stos
cmpsl
les
repnz
add
dec
arpl
mov
push
and
or
push
les
orl
xchg
adc
loop
cmc
stc
xchg
inc
mov
or
xor
out
adc
outsl
ret
imul
xor
repz
stc
sbb
jecxz
outsl
sbb
xchg
es
mov
rorl
jnp
outsb
inc
outsl
jp
inc
xor
add
sub
sti
jmp
lcall
mov
popa
cmp
cmc
out
dec
cs
fistpl
xchg
fisttpl
pop
sub
bound
icebp
cmp
out
jns
les
pop
mov
inc
jle
dec
lods
nop
or
repz
sbb
xor
cltd
iret
pop
and
cld
pop
inc
cmp
adc
repnz
inc
dec
mov
add
add
mov
mov
dec
xlat
addr16
dec
leave
repz
mov
int
inc
mov
out
stc
scas
test
in
dec
cld
sahf
mov
ficomps
cmc
icebp
adc
pop
stos
test
jae
jl
xor
scas
sahf
aaa
or
sbb
and
in
pop
lods
fnstsw
out
movsl
xchg
add
in
or
cmp
imulb
sub
cmpsl
iret
inc
and
sbb
lcall
mov
jp
ds
jbe
sub
cmp
sbb
test
bound
sub
cwtl
in
cmp
popa
sub
inc
in
jb
out
inc
cmpsl
aaa
fistpl
push
push
adc
xor
dec
insb
jle
ja
adc
test
repz
sbb
xor
aam
cmp
and
jns
incl
mov
in
mov
out
mov
cmp
xchg
and
sti
out
idivb
aaa
xchg
or
inc
or
fwait
xorl
mov
je
adc
outsb
dec
loopne
xchg
cltd
xchg
jno
sbb
cmp
mov
sti
dec
lahf
xlat
das
mov
and
inc
cmp
jecxz
mov
mov
push
test
inc
inc
cmc
mov
movsb
inc
or
mov
pop
and
adc
jne
in
xor
dec
pop
mov
daa
sub
sub
or
adc
negb
xor
sbb
repz
fs
jl
imul
pop
sbb
pop
push
sbbl
cwtl
leave
ds
mov
sub
mov
ja
lahf
adc
arpl
adc
fimuls
mov
jle
std
in
lahf
das
or
xchg
dec
fistpl
lock
pushf
je
cwtl
sub
in
imul
sbb
shlb
ljmp
mov
pop
mov
daa
add
popf
or
dec
xchg
adc
mov
cmp
dec
dec
ljmp
insb
stos
inc
lcall
or
in
data16
jne
rcrb
push
add
sbb
lret
mov
jecxz
lock
push
jnp
push
adc
cwtl
dec
js
inc
xchg
and
jne
lods
adc
lret
jne
in
aaa
mov
jbe
sti
sub
je
xor
and
add
mov
std
push
int
imul
or
pop
cs
sbb
mov
scas
lahf
test
sub
shlb
lret
mov
and
loop
mov
out
jmp
mov
push
lods
jnp
fldcw
or
fistpll
sub
pop
cld
lahf
sub
idivb
dec
push
xchg
out
iret
mov
push
outsb
test
sbb
icebp
pop
jmp
mov
stos
les
mov
xchg
dec
sub
jno
mov
xchg
mov
sbb
mov
mov
mov
jl
addl
dec
mov
sti
push
imul
jle
jg
jecxz
lods
sarb
lds
lret
adc
cmpsl
inc
addr16
popf
mov
cwtl
cmp
cmp
adc
jl
std
xlat
out
cmp
mov
xor
in
xchg
inc
fldz
cmp
out
insl
add
jl
loop
mov
or
out
shll
jl
fdivl
dec
fcomps
vorps
aad
mov
adc
dec
push
or
int3
or
loope
stos
fdivr
add
sub
fwait
xchg
ss
mov
mov
pusha
outsl
push
out
dec
lcall
subl
aad
mov
shrb
and
sub
bound
jecxz
xor
push
mov
jns
mov
pusha
mov
arpl
lds
aas
loope
mov
fwait
and
sbbb
sub
dec
mov
mov
cmp
cltd
in
push
inc
sbb
adc
sbb
xchg
ljmp
loope
ja
xchg
jl
repz
loop
dec
jmp
imul
mov
dec
pushf
lahf
movb
shll
setle
popa
cld
push
out
pop
pop
sub
int
rcr
decb
jp
sbb
cmc
push
aam
or
jno
inc
outsb
fwait
add
xor
out
mov
inc
les
cmp
xchg
cli
pop
cs
out
mov
dec
xchg
sbb
daa
adcb
mul
or
mov
xor
xchg
and
pop
mov
xor
mov
mov
das
jne
jge
pop
mov
clc
adc
jno
fstpt
xchg
nop
fsubrs
sbb
mov
mov
xchg
dec
push
adc
call
sahf
pop
sarb
push
jecxz
pop
nop
cmp
inc
jp
test
xor
cld
out
and
out
outsl
mov
shll
vcvtsi2ssl
push
xor
push
ja
adc
xor
mov
or
shrb
mov
shrl
leave
shll
push
loopne
lock
dec
and
in
sbb
jno
cmp
push
push
ss
mov
int
dec
dec
push
adc
inc
call
cli
xchg
mov
mov
mov
xchg
pop
outsb
les
loopne
test
pop
lret
std
push
sbb
mov
add
fildll
mov
cmp
mov
lea
push
push
loopne
mov
and
xor
in
clc
lods
dec
stc
xchg
mov
popf
outsl
xor
lcall
addr16
outsl
adc
loop
in
inc
add
enter
sub
out
js
fwait
out
test
aad
sahf
in
clc
lods
cmp
jmp
cmp
mulb
fcoms
cwtl
sbb
rcr
pushf
xor
test
add
add
mov
cvtdq2ps
push
cltd
fistps
add
popf
xor
push
sbb
leave
xchg
cmp
jl
insl
out
call
fimuls
out
and
in
int
cli
push
orl
imul
xor
xor
pop
ljmp
mov
or
sti
ljmp
push
mov
scas
sbb
xchg
rcll
jae
or
js
scas
pop
in
hlt
jns
outsl
lods
popf
mov
add
push
mov
test
pop
nop
fwait
repz
push
ds
das
xor
not
xor
adc
jne
sahf
pushf
adc
mov
mov
or
mov
mov
and
pop
roll
adc
lcall
adc
dec
add
sub
sbb
aam
pop
and
mov
shrb
lret
loop
jb
lcall
icebp
mov
inc
mov
imul
cmp
and
js
sti
cli
fsincos
mov
arpl
push
push
cli
xor
cmpsb
cmc
rcll
lret
addb
jg
jns
js
dec
cmpsb
sub
cmp
cmp
aas
dec
dec
aam
sti
cli
mov
sub
adc
inc
jle
push
int
fcompl
repnz
inc
lds
and
in
loopne
dec
mov
pop
and
jmp
adc
scas
lock
ror
sti
inc
jno
mov
pop
cmc
dec
pop
jecxz
sub
lods
lret
enter
inc
pop
lods
imul
and
negl
rcll
add
fucomi
dec
test
inc
repz
stos
add
pop
pop
fildl
push
std
test
cmp
and
cmp
jnp
ja
sub
daa
inc
cwtl
or
dec
mov
sahf
mov
repnz
fadds
loopne
jne
xchg
mov
xor
mov
int
ljmp
sub
hlt
cmp
xor
inc
fwait
stos
jb
xor
sub
fistl
push
out
cmpsb
cs
ret
int
enter
bound
cmpsl
aas
adc
push
bound
nop
and
jl
pop
mov
int3
pop
xor
add
mov
pop
gs
ret
mov
stos
mov
xchg
xchg
clc
in
std
fsincos
test
shll
xor
icebp
repz
and
adc
pusha
nopl
mov
push
mov
mov
dec
and
sub
mov
rcrl
inc
stos
xchg
jbe
jmp
pop
sub
mov
push
aad
lds
or
fs
andb
outsb
xchg
repz
sub
mov
or
mov
add
mov
push
cmc
repnz
fsub
jne
popf
les
sbb
pop
push
aaa
or
add
in
cmp
cmp
scas
add
jmp
loop
mov
xorb
xlat
lods
negl
popa
leave
push
mov
ret
hlt
adcl
sbb
fucomi
sub
sub
push
mov
decl
out
adc
cmp
and
sub
jne,pn
dec
pop
repnz
mov
adc
and
outsl
push
sbb
addb
fcomi
and
pop
movsl
loop
push
sarb
mov
sbb
cmpsl
mov
xlat
ss
aad
js
not
in
push
pusha
gs
mov
cmp
xchg
nop
adc
leave
sub
loopne
dec
test
sbbl
ret
mov
add
push
xchg
adc
fcmove
sarl
mov
dec
jno
loop
or
push
jp
movntps
inc
stos
mov
std
repnz
or
repnz
cmp
repz
fbld
pop
xchg
sbb
inc
push
sub
out
pop
push
pop
sub
and
pop
imul
test
lea
add
aas
jg
out
pop
lods
dec
nop
inc
ljmp
je
sub
push
pop
xchg
fdiv
fwait
enter
aas
cmp
div
ret
sbb
cmp
dec
dec
push
in
bound
push
int3
or
mov
sub
in
fidivrs
push
push
loop
add
lds
je
dec
mov
push
test
aas
imul
fwait
cmp
pop
or
lods
mov
ja
repz
or
jl
adc
or
bound
sti
xor
pop
cmp
fsubs
sbb
push
cwtl
ret
cs
push
push
cwtl
jp
leave
xchg
lods
sbb
lret
jecxz
cwtl
dec
repnz
xor
out
inc
jnp
mov
lahf
loope
out
mov
add
in
or
int
xor
cmp
mov
cmp
rcl
and
shlb
dec
imul
lds
sbb
jmp
push
mov
loopne
call
mov
pop
movsb
inc
insl
test
ds
addr16
xchg
popf
shr
enter
push
mov
adc
xor
ret
ret
pusha
xchg
sub
into
aaa
fildll
stos
insl
push
sbb
cmp
adcb
cmc
aad
stos
ljmp
ffreep
enter
xchg
enter
sub
int
dec
mov
mov
rcl
mov
mov
mov
push
cli
push
test
pop
sbb
scas
sub
jbe
jno
test
stc
test
jle
sbb
in
test
leave
hlt
hlt
les
mov
inc
adc
sub
sbb
lahf
mov
ret
jmp
mov
cld
lea
cmp
mov
jp
in
fcmovu
cmp
bound
jle
ret
jns
pop
addr16
filds
loop
sti
or
dec
ret
jb
inc
sub
or
xlat
push
ljmp
repnz
xchg
xlat
fiadds
scas
les
mov
jne
clc
aad
sub
mov
push
outsl
stos
int3
pop
test
push
imul
mov
cltd
xor
xor
push
insl
sti
xor
xchg
insl
mov
xchg
out
cmp
add
lods
test
xchg
cmpsb
jmp
lods
jmp
out
sbb
inc
or
out
es
mov
mov
jecxz
sbbl
mov
cmp
add
jp
sbb
pop
dec
pop
scas
and
pop
jns
dec
mov
cmpsb
or
popf
dec
loopne
jmp
add
dec
cmp
cli
stos
mov
in
addr16
inc
gs
mov
and
shlb
and
sub
pusha
lahf
outsl
ss
add
lds
lods
and
js
xchg
mov
mov
inc
aaa
mov
cld
push
ds
sbb
or
mov
pop
xchg
jnp
pop
pop
call
lahf
dec
test
daa
popf
int
mov
cwtl
es
or
sarb
jecxz
pop
imul
jnp
out
ret
mov
push
and
inc
and
jnp
pusha
cmpl
pop
jmp
insl
push
icebp
mov
mov
jae
in
sub
jo
push
das
push
dec
test
shlb
push
stos
xlat
nop
mov
mov
sub
call
cltd
xorl
das
lret
xchg
lock
inc
jnp
sti
lock
xor
in
pop
jmp
cwtl
fucomp
fcompl
mov
ret
andb
sbb
ret
test
ret
gs
push
push
aas
fcompl
ds
outsl
xor
pop
iret
cmp
xor
call
mov
cmpsl
adc
movsl
dec
mov
in
add
loop
jb
add
js
add
movsl
ret
jge
adc
or
int
movsb
mov
jecxz
icebp
repnz
xchg
mov
jmp
arpl
lds
lret
xor
cmp
leave
in
cmpsl
mov
lahf
movsb
outsb
stc
jo
mov
xchg
cmp
jae
test
mov
insl
push
stc
xchg
into
stos
bound
adc
lahf
mov
add
sbb
inc
pusha
testl
push
xchg
xchg
inc
icebp
xchg
pop
jge
jns
repz
icebp
test
in
push
out
sub
inc
ljmp
pop
and
mov
dec
xchg
std
cmp
inc
and
shll
jg
jmp
imul
xorb
cwtl
jb
jbe
pop
je
fscale
jb
dec
test
loopne
push
testl
outsl
fdivrl
mov
out
movsl
mov
mov
pop
rorl
out
push
ja
dec
mov
add
movsl
jo
dec
aaa
mov
leave
in
ret
cld
xor
enter
or
daa
bound
mov
push
pop
out
push
xlat
inc
inc
push
mov
mov
out
adc
outsl
pop
add
mov
mov
or
add
jns
ret
pushl
and
sbb
mov
pop
push
int3
or
add
pop
and
xor
cmp
nop
adc
imul
pop
ja
push
mov
push
clc
jb
pop
pop
iret
cli
in
cmp
xor
adc
icebp
out
xchg
push
hlt
xor
cmp
push
mov
push
notb
adc
pusha
adc
dec
pop
je
sbb
mov
int
aaa
pop
jns
loop
adc
push
push
or
or
sbb
arpl
mov
inc
add
push
jg
xor
adc
movd
pop
loop
mov
dec
inc
sbb
mov
add
test
sub
add
dec
mov
push
sti
xor
cmp
jge
jo
pop
icebp
test
sar
popl
aam
pop
mov
mov
cwtl
pop
sub
movsb
pop
pop
jnp
stc
cmpsl
push
and
pop
mov
dec
inc
test
das
test
jns
insl
or
adc
lods
imul
fcoml
loope
jbe
popa
loopne
and
xchg
roll
jbe
mov
xor
jmp
enter
jns
call
loopne
sbb
jo
sub
xchg
rcl
push
dec
mov
mov
sbb
sbb
adc
sahf
xchg
pop
ja
sbb
dec
popf
ret
jb
adc
xor
xchg
pop
dec
xor
cmp
push
test
outsl
mov
aam
and
idivb
outsl
and
push
dec
mov
popf
push
mov
lret
xchg
cmp
add
mov
mov
pop
push
adc
test
push
pop
adc
and
jge
xchg
push
into
sbb
inc
push
in
stos
mov
lock
xchg
cmpb
and
cmp
ret
xor
mov
pusha
sti
outsl
insb
ficoml
daa
sbb
push
data16
inc
jge
les
mov
jmp
xor
mov
adc
pop
ja
push
jge
out
adc
mov
fnstenv
daa
mov
inc
cwtl
and
outsb
xchg
xor
sbb
jbe
mov
test
ficoms
test
dec
dec
add
jae
out
adc
jno
imul
dec
and
cltd
iret
push
sarb
outsb
popl
and
cmp
mov
inc
and
xor
loope
xchg
or
or
std
push
insb
lock
sbb
mov
inc
dec
cld
hlt
addr16
test
dec
sub
cltd
cli
js
aam
cmpsb
es
outsb
sub
and
mov
fisubs
arpl
lock
ret
sbb
out
cmp
dec
sbb
cmc
imul
fwait
xor
pop
cmp
add
inc
cmp
in
xchg
insb
ja
subl
inc
inc
xchg
and
paddusw
adc
mov
xchg
sbb
push
xchg
dec
enter
mov
imul
cmpsl
mov
lods
repz
outsl
or
xchg
icebp
sbb
pop
push
pop
or
mov
jne
dec
leave
test
pop
xor
dec
popa
and
xor
in
imul
adc
sub
enter
cmpl
addb
jmp
hlt
les
add
shll
dec
sub
sbb
frstor
adc
push
test
pop
xchg
fisubrl
xchg
or
jmp
dec
push
aad
or
lds
add
addr16
cmpsb
std
jmp
or
inc
ljmp
ret
xchg
ret
jno,pt
xchg
mov
adc
out
xchg
mov
imulb
sub
dec
dec
jmp
jbe
mov
into
adc
scas
int3
push
jne
jo
scas
sub
int3
add
insb
int3
insb
in
ret
loope
lods
push
test
aaa
popa
test
fdivrs
lcall
pushf
call
mov
jmp
mov
mov
dec
sbb
movsb
sub
divl
inc
bound
cmp
push
xor
jp
jns
cmc
cli
ret
or
inc
add
push
sbb
movsl
adc
and
or
fists
arpl
inc
int
into
mov
out
cmpb
mov
loopne
in
jno
bound
cmp
in
sbb
das
bound
hlt
aam
jne
pushf
and
repz
mov
and
test
jno
aas
enter
dec
cmc
out
in
mov
imul
add
dec
pop
arpl
imul
push
pop
adc
minps
add
push
mov
push
dec
roll
jns
ss
xor
add
movsl
leave
aad
mov
pop
sub
xlat
cmp
push
adc
add
and
mov
les
cmc
out
dec
and
push
nop
popa
into
mov
cmp
xchg
xchg
xchg
mov
sub
sti
stos
aad
push
std
lret
mov
mul
les
and
inc
lcall
shrl
push
test
daa
xchg
mov
cmp
adc
xor
pusha
aad
iret
cwtl
in
repnz
mov
outsl
nop
pop
nop
fmulp
xchg
adc
adc
inc
stos
pop
shll
mov
mov
lcall
ret
lcall
iret
pop
or
ja
dec
fldt
pushf
shl
pushf
cmp
scas
test
and
aam
dec
pop
jb
xor
in
add
push
or
dec
mov
filds
cs
mov
inc
push
arpl
jno
xchg
lret
aam
rorb
mov
leave
add
rcr
sub
scas
mov
lock
xlat
pop
and
jnp
adc
cmp
das
pushf
sub
decl
fistpll
dec
pop
mov
nop
repz
jo
test
push
pop
sub
and
ret
ficomps
ljmp
in
jb
mov
sbb
or
mov
mov
loope
inc
mov
add
sub
mov
cmpsb
cmp
xor
pop
or
or
push
int
mov
leave
jmp
xor
dec
jge
xchg
pop
dec
mov
lret
inc
ja
testb
mov
fmulp
jo
push
or
insb
popa
sbb
push
inc
ficompl
sub
dec
pop
pop
xor
test
mov
loopne
mov
add
dec
sub
cmp
add
pop
lcall
mov
sub
stc
cmpb
inc
lret
push
pop
adc
sbb
fucomp
jp
mov
loopne
test
int
jmp
add
ret
out
lcall
repnz
and
cmp
cmp
repnz
sti
sbb
push
sbb
test
jecxz
mov
adc
das
push
mov
cmp
lods
lret
je
push
inc
xchg
adc
mov
cmpsb
rorl
loopne
out
mov
mov
rorb
jmp
stc
pop
mov
sti
cli
outsb
push
dec
jae
dec
pop
mov
in
sub
nop
sbb
inc
lock
dec
mov
pop
xchg
in
in
call
pop
rolb
inc
sub
jo
std
cmpsb
mov
je
fldcw
adc
xor
mov
jle
pop
adc
inc
jp
js
test
loopne
sar
add
outsb
push
sub
ret
mov
mov
cltd
lods
xchg
push
mulb
test
lret
sbb
stos
pushf
mov
xor
inc
mov
sti
mov
lods
mov
xchg
cmp
jmp
cld
and
dec
sub
push
movsb
cmp
push
mov
clc
inc
cmp
pop
outsl
sti
add
xchg
lret
mov
or
pop
rol
rcll
or
repnz
imul
sbb
and
stc
and
push
sbb
outsl
shll
mov
mov
cmp
jbe
into
inc
in
cmp
pop
mov
je
sub
in
fsincos
xchg
add
arpl
ss
popf
aas
mov
addb
push
gs
xor
sub
xorb
add
dec
pusha
xor
dec
movsb
fwait
arpl
add
sub
out
add
rcl
jae
xor
push
stc
cmp
popf
in
std
outsb
repz
neg
push
pusha
int3
ffree
mov
pop
mov
in
ds
orl
ljmp
push
mov
mov
shr
adc
sbbl
mov
stos
push
cmp
std
es
icebp
lahf
cmc
mov
mov
pop
xchg
mov
cmp
inc
add
cld
add
cs
dec
leave
xor
push
jne
push
ja
push
sahf
scas
and
ja
jno
xchg
aas
xor
pop
mov
mov
inc
lahf
mov
mov
pop
or
int3
xchg
mov
out
dec
gs
stc
push
inc
movd
nop
ret
in
adc
jecxz
test
insl
sub
adc
into
xchg
clc
push
mov
pop
mov
lds
out
mov
mov
inc
movsb
mov
rclb
pop
inc
orl
call
or
daa
cmc
je
pushf
jmp
test
aaa
cli
xor
cs
repnz
cmp
push
stc
cmpsl
out
cli
nop
ljmp
push
imul
mov
popa
ja
movsb
out
inc
and
fs
mov
int
inc
fisubl
repnz
mov
pushf
mov
sbb
mov
movsb
jp
fldt
mov
popa
les
cwtl
sub
sbb
les
shll
sbb
mov
mov
scas
repnz
jmp
bound
in
std
les
sbb
repz
or
cs
xor
sub
push
das
push
loope
adc
xchg
lock
mov
mov
inc
mov
lret
test
adc
jecxz
sbb
add
insl
lds
cmp
insl
pop
mov
roll
leave
aaa
cmp
pusha
push
fs
mov
ss
inc
in
pop
lahf
and
mov
push
cli
jp
push
lods
scas
cld
imul
push
loope
xor
adcl
rcrb
fcoms
or
add
movsb
sti
fsubl
push
lahf
sub
add
filds
pushw
insl
rolb
xchg
call
fisubrs
mov
mov
mov
and
in
jae
jae
jbe
in
xchg
mov
push
cmpsb
adc
pop
mov
int
mov
mov
jo
xchg
mov
aam
adc
add
push
jne
adc
arpl
cltd
shl
gs
fnstenv
xor
xor
cmp
pop
jo
xchg
jbe
fisubs
jbe
dec
inc
push
sub
inc
pop
repnz
test
xor
mov
mov
lea
mov
cs
xchg
testl
sbb
rclb
fst
lea
xor
pop
xor
mov
xchg
mov
xorl
aaa
lds
rcrb
lds
cmc
xor
repnz
jle
adc
xchg
test
and
outsb
pop
cmpsl
mov
bound
mov
std
jns
jecxz
cmp
insb
sub
fisubs
xchg
push
mov
push
adc
outsl
dec
pop
mov
push
mov
cmp
sub
lods
das
inc
mov
cmp
sarl
inc
les
adc
in
inc
jo
dec
aas
outsb
adc
fdiv
sbb
sbb
mov
aad
hlt
cmc
push
shll
clc
fcoml
add
xchg
les
pop
lds
and
test
pop
sarb
lcall
mov
or
mov
in
outsb
outsb
rcl
es
push
ss
add
sbb
lea
test
jmp
ss
jl
adc
pop
sahf
push
dec
test
add
inc
aad
mov
fisubrs
adc
leave
pop
push
add
dec
pop
das
nop
mov
xchg
push
fucomp
in
jecxz
sub
ret
hlt
out
lret
add
test
push
push
pop
fsubr
les
push
out
sub
cltd
xor
loopne
lds
and
rclb
fs
pcmpeqd
mov
stos
lcall
dec
or
push
jns
or
fs
add
jbe
xor
imul
mov
push
mov
jp
iret
pop
or
out
mov
jbe
cmp
push
lret
and
mov
imul
ds
ss
rclb
mov
inc
cltd
sti
mov
pop
test
mov
fs
adc
pop
cmpsl
inc
imul
mov
adc
iret
pop
lds
mov
inc
ret
lret
mov
lret
test
ljmp
xchg
stos
scas
and
cmpsl
icebp
cltd
fs
cmp
mov
jbe
pop
out
stos
fistps
mov
mov
inc
or
pop
popa
imul
pop
sti
sbb
arpl
mov
mov
mov
and
adc
lds
lret
gs
sub
inc
jae
movsl
fisttpl
or
add
mov
repz
popf
into
je
cli
push
jg
pop
test
scas
push
cs
pop
mov
shrb
add
inc
fildll
pushf
fstps
clc
nop
jbe
dec
jns
cmp
sbb
test
sar
dec
push
ret
add
ret
push
int3
ds
insb
push
push
pop
int
push
into
and
and
inc
and
adc
stc
dec
ja
leave
notl
sub
jno
cmp
sti
and
jl
cld
jl,pn
inc
adc
je
push
xor
aam
insb
pop
jbe
adc
jmp
in
ror
ss
xor
and
or
adc
test
sbb
insb
scas
ljmp
sbb
push
lods
out
dec
ljmp
dec
mov
ret
movsb
cmp
dec
mov
cmc
cmp
pop
inc
out
cltd
movsl
push
mov
adc
inc
xor
xor
add
ret
cmp
add
xlat
cli
and
sub
jae
das
insb
pop
push
iret
xor
into
ljmp
or
fldln2
jnp
sub
mov
repnz
int
ret
lcall
mov
dec
cmpsb
add
in
inc
mov
fistpl
and
jp
test
outsl
mov
mov
in
pop
sbb
xchg
sub
test
mov
mov
into
hlt
out
mov
sub
cmpsb
sahf
popa
jl
sbb
adc
bnd
xorb
push
icebp
xor
call
pop
in
push
jecxz
and
fcoms
cwtl
sub
push
loope
rcl
xor
inc
or
cmc
mov
hlt
sub
pop
lret
cwtl
sub
sbb
mov
mov
dec
xor
xor
das
or
add
test
inc
fists
loopne
or
pop
xchg
xlat
xorl
and
movsl
mov
stos
or
mov
mov
scas
and
push
sub
js
fwait
mov
xchg
adc
cwtl
xchg
xor
data16
sub
cmp
or
out
mov
sub
and
popf
add
in
dec
add
pop
mov
and
sub
loop
in
nop
push
push
or
popf
mov
ljmp
mov
xchg
loope
lock
and
aaa
jecxz
xor
out
fdivrp
and
and
jnp
cmc
mov
jmp
iret
push
sub
daa
add
in
scas
scas
xchg
xchg
fwait
mov
cmp
mov
cs
add
mov
lret
mov
fcmovnu
mov
add
sbb
cmp
mov
cs
lock
addr16
and
inc
push
rorb
outsb
lods
stos
jmp
and
mov
in
push
xlat
inc
arpl
sub
gs
shlb
push
mov
das
xchg
mov
and
xor
and
rcr
shl
or
into
mov
and
xor
sti
gs
jns
cwtl
sbb
cmpsb
std
std
pushf
or
inc
mov
shlb
lret
dec
repnz
sbb
jecxz
add
mov
call
arpl
mov
mov
cli
adc
loope
fidivl
jne
sbb
jne
ret
mov
dec
sbb
xchg
dec
cmp
std
jbe
xor
mov
movsl
pop
mov
popf
adc
mov
rclb
lret
cmpsb
pushf
adc
decl
fcmovu
idiv
cmp
in
inc
and
out
outsb
jo
lcall
pop
in
cmp
out
push
repz
cwtl
xor
imul
adc
adc
repnz
clc
cmp
daa
mov
xchg
mov
out
in
jmp
imul
out
xchg
mov
push
das
cmp
push
adc
daa
xor
js
and
sar
bound
and
xchg
adc
std
repz
adc
in
js
sbb
pushf
and
or
lret
fldt
xor
mov
inc
movsb
sbb
push
ss
mov
mov
xor
mov
out
inc
pop
daa
xor
jle
pop
shll
add
outsl
jle
inc
lds
enter
popf
adc
aaa
jnp
sar
test
mov
sub
je
inc
test
test
fistl
test
adcl
inc
xor
dec
addb
adc
pushf
sub
jmp
fdivl
push
and
xchg
sub
pop
sbb
pop
adc
pop
lods
jne
roll
jnp
dec
pop
mov
mov
sahf
cmp
mov
sbbb
js
cmp
call
mov
shlb
sub
jecxz
sbb
andl
fucomi
dec
shll
rorb
in
movsl
or
stos
mov
jbe
and
aas
or
out
dec
adc
sarb
insl
inc
jo
les
pop
pushf
enter
data16
sbb
pop
lods
rorb
rcrl
adc
pop
int3
adc
cmp
adc
rcrb
lret
jecxz
push
repz
stos
jg
ds
cltd
in
push
add
enter
lea
sti
dec
imul
inc
in
incl
ljmp
pop
roll
pop
or
jnp
lahf
inc
imul
aas
aaa
sbb
sbb
ret
test
data16
cld
pop
mov
fdivp
mov
mov
andb
jp
bound
cmp
cmp
sahf
int3
dec
fwait
push
lock
pop
sub
in
fildll
insb
sbb
dec
shll
and
adc
icebp
insl
jno
mov
dec
xchg
sbbl
aam
dec
pop
es
add
pop
mov
xchg
shl
mov
sub
es
addr16
sbb
mov
jb
sti
sbb
in
repnz
mov
aaa
mov
mov
scas
cwtl
mov
push
xchg
lcall
repnz
pusha
call
and
sub
fs
arpl
mov
pop
or
add
lds
dec
int
lea
in
enter
push
jmp
mov
std
dec
sbb
mov
stos
cmc
adc
out
loopne
xorb
push
xor
lret
dec
push
movsl
jo
aad
push
mov
dec
lock
pusha
pop
push
pop
shl
xor
sub
test
push
dec
nop
xor
insb
arpl
movsl
dec
sub
mov
push
lret
sbb
ja
sbb
sub
sbb
scas
xor
mov
mov
mov
out
stos
dec
fimuls
in
ja
dec
adc
loope
or
add
xor
add
adc
aas
mov
sub
or
inc
mov
xchg
inc
mov
inc
scas
popa
outsl
and
sbbb
add
pop
int
sbb
fmul
push
lds
mov
scas
paddb
jge
mov
pushf
data16
cwtl
or
add
mov
xlat
cmp
mov
or
sub
mov
jl
lcall
jmp
lret
frstor
sub
adc
xchg
xor
ss
mov
rcll
sub
xor
xor
jns
shll
xchg
popa
inc
arpl
cld
xchg
jo
mov
and
out
jmp
cli
mov
int3
std
cmp
lea
ljmp
cmpsl
mov
xchg
lock
cli
xor
and
sub
cmp
xchg
into
mov
mov
sub
lcall
stos
or
insb
and
jb
push
fwait
out
mulb
in
mov
xchg
mov
or
xchg
or
adc
repnz
sahf
cltd
adc
mov
pop
adc
xchg
pop
js
push
lock
add
add
or
cld
xchg
mov
jnp
std
cmpb
push
pop
mov
test
test
stos
shll
push
cmp
cmp
jb
clc
stc
or
sub
and
xlat
repnz
data16
and
sbb
pop
mov
or
jbe
int3
and
and
push
or
fdivs
fdivl
xchg
orb
addl
addl
aad
aas
mov
shlb
mov
ffreep
dec
ja
shlb
pop
sarb
sti
rcrb
dec
aad
imul
fs
inc
shlb
in
ljmp
imul
cwtl
pop
jl
movsb
adcb
dec
insb
cmp
test
cmp
add
into
mov
dec
lds
dec
into
scas
fstl
xchg
lock
js
cld
sub
jl
fisubs
lret
int3
mov
sbb
lods
add
in
mov
cmp
add
inc
dec
mov
inc
lock
les
aas
es
adc
cs
jns
stos
ficompl
pop
jmp
cli
sub
sub
mov
mov
ficoml
mov
test
sarb
dec
xor
cld
bound
jecxz
or
je
stos
add
test
push
jb
mov
lea
adc
mov
xor
outsl
int3
insl
or
mov
mov
arpl
shll
inc
pop
pop
jg
xchg
aad
xchg
mov
mov
sbb
shrl
push
fdivrp
cmpsb
outsb
xchg
adc
addb
rcrb
and
cltd
fisttpll
mov
orb
xor
mov
leave
aas
dec
es
insb
cli
xchg
push
xor
in
add
dec
fdivrl
xor
dec
and
arpl
cmp
add
adc
and
aas
ret
daa
mov
roll
jmp
jno
cmp
pusha
jmp
mov
pop
or
push
push
mov
adcl
mull
js
add
mov
pop
dec
pop
mov
sarl
xor
into
push
xor
adc
sub
movsl
shlb
mov
jge
fidivrl
mov
dec
or
push
mov
sub
rcl
outsl
hlt
out
movsb
mov
sub
add
xor
dec
adc
push
movsl
lret
push
xor
cmp
xchg
inc
sub
loope
fcmovnu
fwait
lret
mov
jecxz
jns
sbb
jmp
cmp
out
push
lcall
mov
test
dec
test
xchg
rclb
into
cld
inc
mov
fsts
inc
pop
dec
xor
mov
add
loopne
in
insb
inc
cmpsl
cmp
pop
inc
and
push
fcompp
and
out
jmp
loope
push
cmp
dec
mov
lcall
add
jg
push
mov
shlb
repnz
mov
xchg
adc
cmp
data16
lods
sbb
jno
adc
or
jnp
xacquire
inc
mov
mov
or
xchg
lret
and
and
xor
cmp
mov
sbbb
push
lret
int3
mov
shrl
ljmp
popa
and
add
xchg
andb
sahf
les
notl
adc
jge
xchg
push
mov
scas
mov
call
cmp
push
adc
jecxz
cmp
mov
mov
xlat
mov
int3
jmp
xchg
icebp
dec
adc
shrb
push
and
xchg
dec
fldenv
adc
sti
sub
push
or
xchg
cwtl
js
aaa
xor
andl
lods
xorl
in
xchg
inc
jb
fistpll
mov
test
je
into
in
ljmp
loopne
pop
popf
jp
cwtl
push
or
xchg
lret
mov
add
xchg
xor
mov
jo
jle
push
add
push
xor
jb
xchg
dec
jmp
push
scas
add
push
test
push
test
fisttps
shrl
and
rcrl
mov
jno
pop
add
and
scas
xchg
leave
mov
rcrl
jbe
fadds
mov
mov
int
or
pop
or
dec
mov
adc
iret
pusha
js
pushf
xor
add
pop
xor
jnp
fs
inc
aad
lret
insl
pop
adc
mov
mov
mov
adc
pusha
in
push
stos
jae
push
jne
rcr
inc
sub
mov
out
ret
enter
jmp
leave
ret
dec
jno
inc
adc
or
xchg
mov
add
movsb
inc
dec
cmpsb
lods
xchg
inc
in
push
sub
and
pop
sbb
gs
sti
arpl
ds
jns
popf
xchg
cmp
ja
xor
sbb
insb
or
xor
pop
pushf
ret
std
flds
push
xor
mov
xchg
adc
cmpsl
movsl
scas
sbbb
push
cmpsl
sub
push
rcr
in
xchg
je
jne
ret
cmp
aad
inc
sbb
lret
repnz
jne
dec
clc
loopne
cli
fstpt
jle
dec
or
sub
jae
shrl
xchg
hlt
inc
das
push
mov
imulb
mov
addr16
jae
lret
aam
out
mov
jp
push
std
xor
mov
nop
mov
nop
test
call
scas
ds
test
xchg
inc
roll
inc
test
push
sbb
cli
data16
rcrl
scas
mov
fwait
cs
jb
jmp
mov
or
jl
shlb
inc
scas
sub
mov
sub
daa
mov
cltd
pop
inc
sarl
jno
mov
jmp
or
and
jecxz
loopne
jbe
and
cmp
loope
pop
mov
into
and
fs
cmp
ja
negb
sub
pop
notb
mov
shl
imul
or
mov
flds
inc
lods
sub
jecxz
sbb
cltd
popf
sub
xor
jp
or
test
xchg
iret
loop
xchg
insl
enter
lret
mov
loopne
dec
cwtl
jne
jnp
inc
movb
insl
lock
insb
mov
test
jge
in
in
fiadds
fsubrp
adc
push
idivl
xchg
dec
push
mov
mov
cmp
rorl
push
mov
cmp
icebp
mov
int
out
cwtl
push
sahf
mov
orb
std
mov
xor
outsl
test
xchg
js
push
fildll
out
and
push
aam
cmpsl
stos
in
xor
pop
cmc
dec
pop
and
arpl
cmp
call
sti
cmpsl
subl
inc
dec
sbb
jns
jb
pusha
sub
rcl
xchg
add
scas
sub
out
mov
ficoms
into
mov
add
mov
in
pusha
loop
push
adc
dec
dec
mov
les
filds
cmp
cld
insb
and
dec
clc
mov
lret
add
xlat
mov
inc
push
add
enter
rcrl
test
das
je
pop
mov
dec
mov
jecxz
cltd
ja
dec
clc
and
inc
pop
arpl
stos
cmp
fisubs
mov
dec
in
pop
les
pop
push
sub
inc
ja
and
into
lock
xchg
out
addr16
mov
xchg
mov
cmp
push
pop
xchg
jo
gs
and
mov
inc
pop
sub
sub
leave
and
aas
cmp
sub
out
data16
mov
push
push
les
adc
lcall
cltd
inc
mov
lcall
and
push
sub
test
add
jbe
or
aaa
insb
out
xor
push
cwtl
mov
jecxz
inc
xchg
and
mov
scas
stos
loope
dec
mov
fcoms
leave
dec
fnstcw
and
jae
and
lods
out
das
sahf
test
lods
stos
mov
adc
jl
fimuls
in
adc
xchg
inc
jnp
inc
bound
jns
js
add
mov
push
andb
pop
lahf
mov
fisubrl
fmull
lahf
push
sbb
sarl
and
hlt
clc
insb
sbb
repnz
popa
xchg
movsb
test
jne
gs
loope
cmp
xor
ljmp
inc
and
xor
push
lock
mov
sarl
sub
mov
out
mov
shll
je
outsb
leave
les
push
inc
in
xor
das
mov
ret
rcrb
inc
shrb
enter
adc
mov
inc
and
ret
enter
mov
out
dec
push
mov
pop
inc
jbe
fwait
xor
sbb
and
push
sbb
push
std
lahf
pop
xor
sub
xchg
lret
nop
cmp
sbb
cmp
loopne
cmp
xchg
lea
lret
cmp
fadd
mov
addl
pop
dec
scas
cmp
bound
dec
add
inc
rclb
out
loope
inc
add
jo
lea
ds
sbb
rorl
inc
jl
fisubrl
xchg
mov
mov
sbb
sub
sbb
add
pop
clc
ds
popa
mov
xchg
push
pop
mov
cmp
mov
or
test
neg
or
call
xor
sub
test
xor
movsl
mov
outsb
cld
adc
into
sub
or
sub
outsl
movsb
mov
cs
and
fs
imul
out
ljmp
jns
in
mov
ja
sub
out
rolb
xchg
xchg
cli
sbb
test
loope
ds
jg
pop
cld
fldenv
or
in
sub
test
dec
mov
sti
or
cli
jg
push
cmp
cmp
in
fcmovnbe
xorl
sub
lcall
push
jne
insl
push
jp
shlb
rcrb
scas
inc
mov
movsb
xor
lds
adc
mov
rorl
jnp
mov
push
xor
jbe
push
in
and
mov
in
push
mov
scas
ds
pop
inc
arpl
data16
shrb
enter
xchg
add
and
imul
mov
pushf
ret
shrb
fwait
das
xor
test
push
xchg
outsb
lret
dec
fsub
mov
mulb
ja
mov
out
cmp
cmpsl
das
andl
and
stc
pop
xor
mov
ret
imul
mov
into
mov
sti
pop
dec
jmp
add
dec
mov
push
test
pushf
mov
aas
and
xchg
data16
or
push
clc
mov
daa
dec
mov
or
sub
insb
dec
ss
jge
cmp
add
jg
or
mov
cli
xchg
std
test
mov
mov
dec
dec
and
adc
idivl
sub
es
adc
cli
mov
sahf
insb
mov
jg
iret
fnstsw
inc
aam
xchg
pop
or
stc
clc
rdtsc
scas
movsl
shrb
adc
shll
ficomps
push
pop
or
cmc
mov
jp
shr
sub
je
mov
xchg
addb
xor
ds
test
mov
pop
loopne
pop
add
xor
mov
and
aaa
loope
into
mov
hlt
js
push
fdivl
jle
jp
sub
out
and
push
notb
mov
fsubs
mov
movsb
adc
js
xchg
xor
scas
jp
imul
pushf
dec
bound
sub
aad
lret
scas
test
dec
dec
xchg
aad
and
ja
out
cmpsb
aad
ljmp
fucomip
je
add
aad
popf
stos
adc
outsb
and
lret
adc
push
es
dec
call
icebp
repnz
sbb
cs
inc
and
pop
ja
jmp
mov
mov
fsubrl
aad
and
stos
and
fwait
iret
inc
mov
ret
sbb
ficomps
push
sub
inc
mov
push
inc
xor
scas
popl
push
mov
incl
push
mov
push
insb
push
iret
test
jmp
addr16
stc
out
sbb
sbb
std
adc
aaa
test
dec
mov
sbb
pop
popf
repz
adc
ret
xor
scas
mov
or
fmuls
movsl
lea
adc
pop
movsl
sbb
sbb
loope
ljmp
movsl
mov
sarb
int3
mov
or
loop
leave
fwait
test
sbb
jbe
clc
and
int3
repnz
scas
inc
mov
sub
ror
adc
pushl
imul
mov
ljmp
fimuls
dec
inc
jns
lock
adc
and
lods
ret
ljmp
jno
mov
sub
data16
lahf
jmp
out
xor
push
pop
lcall
dec
dec
jle
sbb
xor
mov
cmc
mov
fisubl
jo
jp
movsb
jb
and
scas
rorl
xchg
pop
aaa
fdivl
cmp
pusha
sub
push
test
adc
lahf
xor
xchg
jge
es
sbb
cld
xor
adc
cmp
enter
popa
cmp
aam
popa
mov
cmp
inc
aam
mov
shlb
adc
xlat
int3
mov
lret
das
out
mov
xor
xchg
hlt
mov
lcall
pop
repz
cwtl
xor
cli
mov
sahf
pop
push
cmc
inc
repnz
cmc
sahf
div
test
xchg
push
outsb
fildll
sub
jecxz
enter
cmp
and
and
aas
push
mov
jb
mov
sub
mov
fs
stc
aad
push
cmpb
rol
xchg
insb
sub
iret
in
xchg
pushf
fstl
xchg
repnz
mov
cli
es
cmp
out
outsl
pop
jp
repz
mov
inc
out
mov
push
fsubr
push
or
add
lock
adcb
cmpsb
es
in
mov
inc
mov
mov
popa
push
aas
rol
and
fdivrs
jno
movsb
xchg
insl
cmp
lds
inc
loop
mov
outsl
ficompl
fldenv
int
xor
sub
rcrb
jno
fs
push
xor
lods
add
pop
xchg
imul
into
push
js
push
cmpsb
lods
jmp
rclb
sti
arpl
pusha
loop
sbb
ret
lods
test
shrb
jmp
test
iret
xlat
xchg
xchg
pushf
jge
lret
sub
mov
mov
les
ja
lods
push
movsl
sub
ret
notb
es
dec
mov
jp
cmp
push
or
fwait
push
xorl
and
jmp
jp
dec
push
or
xchg
cmpl
jmp
mov
js
jne
dec
ljmp
hlt
shrl
test
mov
add
addr16
imul
test
or
dec
mov
cmpb
sub
inc
and
jmp
and
fdiv
jno
push
out
mov
pusha
add
mov
mov
push
addr16
pop
pop
in
jae
arpl
push
in
nop
lret
push
js
lahf
cltd
xabort
xor
or
icebp
pop
stos
sarl
dec
out
jnp
xchg
popl
loop
bound
les
out
inc
ret
imul
cs
test
xor
xor
cmpsb
jg
xlat
jo
movsl
xchg
mov
dec
cmpsl
adc
clc
or
push
popa
cmpsl
mov
lret
addb
out
mov
arpl
mov
inc
iret
sub
pop
pushf
jle
lods
mov
push
mov
out
bound
rolb
div
adc
mov
adc
dec
mov
add
lahf
sub
xchg
ljmp
and
or
fidivrs
test
imul
pop
fwait
cmc
into
fldl
in
mov
jle
in
mov
test
sbb
repz
cmp
xchg
add
sbb
xchg
and
mov
sarl
std
loope
ja
mov
mov
pop
xchg
cld
in
dec
pop
arpl
bound
mov
out
adc
arpl
out
es
mov
mov
cmp
mov
adc
mov
inc
or
or
in
jo
aam
cmp
sbb
mov
lds
les
das
js
lret
into
mov
sbb
mov
jo
jae
push
adc
mov
adc
shrb
cmpsl
lea
cwtl
popf
cmpsb
jmp
xor
ficoms
jecxz
push
cmp
rorb
mov
adc
stos
daa
fmul
adc
mov
xchg
frstor
add
sbb
lret
in
movsb
mov
mov
das
or
and
mov
fidivrl
test
push
dec
aaa
xchg
test
mov
xchg
add
and
ja
push
xor
push
gs
inc
das
jns
and
push
mov
or
shll
mov
pop
sub
pop
mov
enter
mov
pop
jmp
push
lods
in
xor
jecxz,pn
nop
mov
xchg
addl
dec
movl
in
inc
and
aad
mov
push
push
int3
jo
js
es
fistpl
clc
imul
imul
or
ret
dec
and
out
adc
push
aaa
lret
pop
iret
in
mov
aad
mov
add
scas
movsw
bound
clc
push
jle
fwait
pop
rcrl
fsubs
fimull
cmp
sub
aas
arpl
addr16
adc
xor
add
lret
cld
inc
mov
sub
jge
ss
xor
dec
or
test
mov
and
popa
cwtl
xchg
mov
popf
jne
push
push
test
jb
push
jb
jg
jle
es
je
jns
add
xchg
inc
faddl
fcompl
pop
push
andb
pop
push
push
xor
cmc
fucom
jge
mov
out
mov
cmpsl
sbb
sub
lods
pop
das
shlb
inc
sub
fdivl
lea
insl
lret
mov
enter
mov
pop
adc
cmp
push
inc
mov
xchg
imul
pop
mov
jns
add
mov
repz
ss
push
adc
cmp
dec
push
test
mov
adcl
and
mov
jg
daa
lcall
mov
and
sub
lea
jbe
divl
xchg
roll
sbb
and
sub
dec
jmp
dec
in
or
sbb
lds
jecxz
add
add
jecxz
push
cmpsb
shlb
insb
mov
scas
push
shl
and
pushf
lret
aaa
subl
jge
push
ret
or
mov
xchg
jg
sub
xor
pop
imul
ja
and
filds
pop
jb
xor
out
xchg
xchg
rcll
inc
movsl
clc
dec
pop
dec
sub
mov
vpsadbw
mov
out
aad
mov
push
mov
lds
jbe
out
sbb
leave
fldl
and
insl
sbb
xor
ja
jmp
mov
xchg
mov
jb
pop
repnz
fsubrl
insb
cs
adc
fnsave
sbb
std
xor
and
gs
cmpb
adc
sbb
xstore-rng
cmpsl
add
in
jge
xchg
mov
inc
icebp
leave
add
xor
or
pop
inc
lds
push
sub
push
xchg
sti
leave
mov
int
or
mov
testb
push
imul
mov
pop
push
or
daa
ds
cltd
stos
add
ret
mov
sub
cli
rcrl
sarb
int3
rorb
inc
mov
xchg
popf
clc
arpl
mov
fisubs
aam
movsb
mov
push
insb
push
mov
xor
notb
dec
out
mov
add
mov
outsb
pop
repnz
xor
pushf
int3
stos
sbb
aaa
stc
sbb
lods
shr
mov
cmp
mov
repnz
int3
cmc
adc
je,pn
pop
sar
xlat
sti
mov
in
cltd
test
int
sbb
ds
mov
bswap
mov
and
or
orl
adc
cld
ss
aas
pusha
in
dec
xorl
ljmp
outsb
mov
adc
dec
mov
ljmp
ret
push
mull
cmp
int3
dec
ljmp
cmp
fs
enter
jecxz
jnp
inc
ret
jl
mov
xchg
pop
xor
xchg
inc
js
cwtl
push
movsl
lea
inc
pop
out
mov
mov
fldenv
pop
faddl
stc
add
lret
jl
add
repz
xchg
mov
sti
int
sahf
lret
fldt
adcb
ret
cmp
dec
in
sbb
jnp
push
mov
decl
pop
dec
ja
orb
xchg
xchg
js
aad
mov
dec
std
sub
xchg
fidivl
adc
ror
sbb
sbb
dec
mov
and
rcr
lret
jnp
sbb
mov
add
jp
push
push
pop
loope
push
fstps
repz
sub
scas
cmc
jno
sub
addr16
adc
xor
cmpsb
mov
test
in
inc
and
sbb
scas
je
mov
dec
dec
cli
icebp
js
mov
jno
xchg
jo
ljmp
repz
dec
mov
dec
das
roll
int
fcmovnb
in
test
scas
out
mov
jo
aaa
or
jg
sbb
insb
inc
sub
shl
pop
out
dec
jbe
mov
push
shrb
or
in
loopne
imul
rol
xchg
insb
jne
les
jl
mov
sbb
cmp
dec
pusha
pop
test
dec
push
push
adc
jnp
fsubr
mov
leave
aam
or
test
jecxz
push
jge
jecxz
push
jnp
pop
test
mov
xor
ljmp
pop
lret
mov
aam
and
lds
push
repnz
repz
cs
pop
push
mov
jge
mov
sbb
ljmp
xor
data16
sub
in
xor
int
out
xor
adc
lcall
mov
push
pushf
mov
inc
mov
dec
adc
leave
adc
shr
mov
es
adc
jmp
jne
cmpsb
jp
shr
cmp
adc
dec
jmp
sbb
rorb
decl
xchg
jae
push
jbe
int3
popf
pop
cmp
movsl
lret
movsb
fstpt
scas
push
repnz
in
outsl
xchg
and
mov
sbb
pop
mov
mov
mov
inc
mov
mov
mov
xchg
pop
push
mov
js
loopne
pushf
std
mov
mov
test
inc
adc
adc
shrb
outsb
ja
mov
out
outsl
jg
adc
cmpsl
in
add
or
inc
dec
in
cmc
negl
outsb
out
pop
and
std
xor
pop
pusha
inc
xor
adc
lea
mov
movsb
nop
repz
inc
mov
das
add
jns
int3
mov
jno
push
sub
mov
lods
aas
lods
movsl
insb
mov
rcll
sarl
push
int3
sub
pop
pop
mov
test
mov
mov
and
addr16
lods
xchg
add
inc
sub
inc
mov
jbe
scas
lock
fadds
sub
adc
push
shrl
jo
mov
add
std
push
add
dec
mov
sbb
push
sahf
sbb
jl
cmp
flds
mov
cmp
push
into
jo
pop
mov
ja
jecxz
lea
lods
mov
xlat
cwtl
inc
sbb
push
sbb
enter
xchg
lods
jae
jp
shll
jecxz
fidivl
push
enter
rol
js
mov
clc
in
rcl
push
cmp
jmp
jmp
call
push
xorl
jecxz
stos
xor
jmp
dec
mov
cmp
fwait
mov
sbb
lock
pop
lods
dec
cmp
push
xlat
mov
andb
jge
arpl
movsb
leave
sahf
andb
adc
insb
shlb
ret
push
gs
dec
jne
fwait
sbb
cwtl
jmp
xlat
push
out
push
cmpsb
inc
test
xchg
pop
aaa
and
orl
sub
mov
movsl
stos
push
out
mov
cmp
sub
ror
sbb
add
shl
shrl
add
push
sbb
adc
insb
and
stc
xchg
ret
jge
lea
cmpsb
and
inc
or
pop
mov
pushf
mov
adc
jmp
jno
ret
cmp
add
xor
xchg
mov
aam
xor
mov
mov
mov
in
stc
and
enter
aaa
int
lret
xchg
je
mov
adc
push
sub
shrb
arpl
jge
sbb
mov
pop
es
fmull
xchg
in
movsl
push
pop
loope
negb
in
pushf
cmp
iret
fnsave
aad
xchg
xor
shll
out
stc
test
dec
roll
pop
test
rcrb
jne
stos
rcll
push
ss
mov
movb
daa
lds
jp
mov
lock
mov
push
pushf
push
fldl
inc
lods
jno
cmp
aas
jp
ret
pusha
jne
in
je
out
lds
dec
sti
jecxz
aam
repz
sbb
mov
xchg
sbb
mov
pop
js
mov
jae
mov
int3
scas
jo
cld
cmp
mov
mov
shll
mov
jmp
popa
into
push
pop
shll
ss
aaa
pop
cwtl
or
out
out
push
mov
pop
mov
push
sbb
sbb
xor
imul
sbb
int
enter
jbe
xchg
std
jmp
cli
sbb
roll
jecxz
loopne
dec
mov
dec
shll
mov
cmpsb
out
add
in
and
loopne
data16
push
push
mov
cs
xor
loopne
shrl
outsb
ret
or
fisttpll
stos
lret
loop
mov
jb
or
test
cmp
pop
je
cmp
adc
and
lods
and
cld
aad
push
fidivl
pop
mov
add
or
movsl
je
ficomps
pop
jbe
leave
cmp
ret
xchg
ljmp
ret
mov
data16
cli
sahf
sbb
push
pusha
dec
push
xorb
pop
popa
or
gs
xor
subl
push
mov
jne
scas
bound
out
sbb
mov
cli
xchg
mov
jne
push
jg
rolb
mov
push
mov
jge
aaa
imul
lret
add
jno
mov
ret
ret
cmp
enter
imul
pop
xchg
inc
or
jnp
sub
jmp
cmpsb
cmp
xchg
or
xchg
sub
sbb
ja
fstpl
imul
mov
xchg
test
sub
scas
pop
jp
das
iret
lds
movsl
mov
sub
das
push
daa
filds
jo
mov
add
movsb
fsubrl
and
adc
adc
clts
data16
out
pusha
mov
iret
in
out
scas
loope
dec
dec
push
repnz
call
xchg
movsl
pop
iret
push
iret
lret
mov
xchg
movsl
xchg
fs
scas
mov
pop
and
add
jecxz
ss
jne
xchg
bnd
pop
and
pop
pusha
lahf
call
rclb
xchg
aam
or
decb
fdivr
add
lret
dec
push
cmp
mov
arpl
push
pop
jns
adc
repnz
out
xchg
mov
iret
adc
xor
xor
in
idiv
xor
dec
sub
std
add
push
js
cmp
rcrl
push
das
orl
push
jge
iret
dec
vmovq
sbb
test
sbb
out
mov
les
pop
cmp
ret
insl
jecxz
mov
inc
mov
loop
iret
cmp
orl
mov
dec
leave
sahf
shl
call
sbb
or
cld
mov
cmpsl
stos
ret
push
jnp
xlat
cld
push
aam
lods
clc
imul
push
xor
daa
xchg
mov
in
pop
inc
ds
mov
call
mov
mov
ja
pop
jbe
mov
jns
ret
mov
inc
aam
pop
pop
dec
mov
ret
addl
push
dec
pushf
sub
jle
scas
dec
aas
cmpsl
pop
decl
cmp
fimuls
mov
int3
dec
lret
pop
daa
out
shll
lcall
mov
in
inc
fs
dec
sub
sub
lcall
sub
cmc
jns
sbb
cmp
mov
adc
scas
mov
div
out
or
jp
mov
stos
inc
inc
mov
filds
add
gs
das
pop
lret
inc
pop
inc
leave
ljmp
dec
iret
pusha
cmpsb
xchg
ja
and
sbb
cmp
lcall
ret
adc
lahf
sbb
jp
mov
enter
popf
adc
adcl
std
sub
cmpsl
inc
or
cmc
mov
lret
stos
test
sbb
cmc
outsb
int
leave
cld
lcall
rolb
dec
dec
sub
int
aaa
push
cs
inc
mov
imul
or
xchg
add
inc
mov
mov
in
or
andl
mov
in
mov
cs
leave
es
mov
mov
sahf
decl
xor
dec
sbb
fwait
push
shr
sarl
adc
lahf
jo
nop
mov
xchg
test
inc
inc
adcl
adc
mov
add
frstor
push
xchg
test
adc
mov
pop
cmpsl
imul
sub
in
lahf
inc
cmp
fadds
loope
adc
gs
inc
loope
outsb
mov
movsb
pop
int
adc
pop
mov
mov
lock
push
mov
imul
adc
mov
jg
jg
std
scas
jns
mov
jae
jno
lods
jcxz
out
sarl
decl
cmp
add
adc
clc
adc
out
pop
inc
movsl
pop
bound
enter
xor
xchg
rcr
xchg
mov
mov
xchg
adc
das
mov
leave
outsb
cmp
clc
lods
sub
pop
jns
jns
iret
xor
xchg
and
mov
xchg
cmpsb
pop
stos
mov
mov
fimull
push
jbe
push
mov
cs
sbb
dec
aam
push
sub
push
mov
mov
xchg
in
insb
fdivrs
rorl
mov
std
inc
dec
and
rolb
or
mov
test
adc
jmp
std
fldt
out
mov
push
cmc
frstor
push
fcmovb
in
and
subl
std
insb
jne
std
jmp
jl
fisttpll
out
mov
push
cmp
sub
xlat
jecxz
rorb
lret
pop
or
jl
mov
mov
stc
sahf
sarl
int
ret
out
lods
movsl
clc
adc
call
sub
jnp
mov
inc
fwait
push
xor
pushf
loope
xchg
push
scas
push
repnz
and
jne
std
sbb
movsl
mov
test
test
and
jbe
and
stos
jb
test
ret
stc
das
mov
ret
dec
xchg
inc
out
int3
lock
clc
adc
data16
mov
adc
adc
mov
lds
sbb
in
fs
cmp
fldl
and
dec
lods
leave
ljmp
testb
jae
or
movsb
xchg
pop
ret
into
movsl
cld
rcll
jge
mov
pushf
js
mov
ror
mov
das
pop
out
shrb
adc
dec
cmp
pop
mov
pusha
pop
inc
repnz
rol
cltd
and
mov
inc
cmp
test
jb
nopl
addl
sbbb
dec
nop
insb
mov
out
cmp
std
leave
xor
cmp
adc
and
sub
mov
es
fstl
iret
cmp
dec
scas
fldenv
xchg
pop
mov
lcall
sub
stc
add
inc
xchg
cmpsl
sbb
or
adc
mov
in
sbb
push
mov
std
lods
scas
neg
add
scas
xchg
sub
neg
xor
pop
fcoms
rcll
stos
dec
dec
cmp
mov
lock
dec
jl
sahf
outsb
inc
pop
sub
adc
push
mov
pop
add
inc
mov
orl
mov
xorb
cmp
arpl
mov
jmp
mov
xlat
lea
loopne
cmpl
popa
mov
jg
adc
in
test
rorb
adc
xchg
ljmp
add
xlat
and
cmp
mov
pop
xchg
xor
pushf
icebp
je
push
dec
insl
xchg
das
je
add
lret
sbb
popf
mov
arpl
jno
fdivl
and
notb
or
aas
jmp
xlat
sbb
cwtl
dec
sbb
in
jns
xchg
xorl
cmp
in
scas
pop
sbb
xchg
test
mov
lcall
adc
cmp
dec
jae
sahf
xchg
cli
mov
adc
hlt
fnsave
add
mov
or
jl
aas
jne
insl
mov
xchg
inc
pop
push
sar
push
or
mov
xor
xchg
xchg
jb
jb
xor
add
loop
push
push
xchg
inc
mov
push
and
pop
lods
inc
leave
test
insl
nopl
rorl
dec
xchg
scas
inc
aaa
testl
mov
or
or
xor
js
lods
andl
je
mov
roll
adc
sbb
dec
bound
push
mov
jb
dec
clc
ret
or
xor
push
xchg
cmpl
aaa
jge
jbe
sub
push
dec
push
insl
push
mov
outsl
leave
xor
mov
jbe
mov
sub
popf
mov
jne
in
pop
lahf
mov
enter
jnp
nop
sub
xor
inc
scas
add
xchg
adc
dec
in
stos
iret
clc
push
cmp
mov
and
jo
mov
sbbl
fbstp
je
pop
xor
adc
cmp
or
pop
lret
sub
in
jo
pop
hlt
lock
loope
mov
mov
mov
sub
ret
inc
add
gs
fistps
mov
mov
jnp
push
add
xor
mov
enter
xchg
cmp
push
adc
jbe
call
pusha
mov
or
mov
and
add
cmp
lds
add
lods
in
mov
aam
xlat
jo
jnp
imulb
xchg
push
dec
repz
mov
test
fsts
jle
sbbl
mov
or
test
dec
push
repz
cmp
je
mov
pop
mov
in
ljmp
add
mov
push
cwtl
or
adc
scas
fidivrs
mov
insl
xchg
sar
sub
clc
dec
jbe
insb
imul
clc
jp
cmpsl
mov
push
fst
idivl
add
xchg
inc
mov
test
mov
dec
and
push
and
loopne
jl
xchg
mov
les
cmp
xchg
sub
xchg
xchg
push
jae
cmc
or
adc
jl
xchg
jne
sbb
in
add
lret
adc
jl
ret
or
and
into
scas
bound
in
cmp
das
shlb
dec
jns
pop
jno
out
or
je
add
outsl
jnp
mov
stos
shl
jmp
lcall
in
sub
dec
sarl
xor
jg
sti
push
cltd
push
mov
add
xor
inc
sbb
and
mov
test
ljmp
into
arpl
ja
jbe
jmp
mov
lds
xchg
stc
xor
call
insl
lea
xchg
imul
push
shll
mov
dec
loope
dec
mov
cmc
xor
pop
pushf
ret
jp
outsl
mov
add
shlb
jg
addr16
xor
dec
pop
aaa
adcl
pop
jo
rcll
xor
pop
mov
dec
push
sbb
arpl
push
fldt
inc
loop
pop
mov
adc
dec
pop
push
insb
fistpl
cmc
pop
or
pop
mull
and
mov
jnp
add
aad
mov
sub
and
mov
xor
pop
repnz
push
sbb
jb
loope
inc
sbb
jns
mov
cwtl
xchg
aad
adc
out
lods
push
ret
insl
jbe
rolb
movsl
sub
ret
inc
jbe
mov
cmp
ror
popf
adc
cltd
repz
or
lcall
push
repnz
shll
imul
or
repnz
mov
ja
push
stos
fidivrs
ret
adc
ret
sub
mov
jge
aaa
jnp
adc
icebp
daa
into
out
add
lds
xor
dec
shrb
push
xor
mov
cmpsb
insl
enter
fcompl
jne
rcl
push
aas
insb
xchg
mov
push
repz
mov
push
inc
ficompl
jo
sbb
in
dec
mov
inc
dec
lea
cmp
adc
loop
add
es
lock
in
arpl
repz
add
xor
mov
aas
jae
mov
pop
push
adc
pushf
aad
cmpsb
je
cli
push
adc
in
mov
mov
dec
dec
mov
xchg
lods
mov
stos
cmpsl
iret
arpl
mov
out
sbb
gs
xchg
out
test
push
cltd
int
scas
cmc
stc
out
push
loopne
int3
or
ljmp
sbb
sbb
test
mov
dec
addb
sbb
les
inc
lret
int
mov
sub
jecxz
dec
cmp
test
out
xchg
jbe
sub
push
lahf
sbb
ja
stos
pop
mov
adc
clc
das
enter
and
ss
mov
xchg
pop
inc
icebp
mov
inc
inc
lods
inc
or
mov
aaa
out
or
jge
sti
add
add
repnz
push
lock
cs
push
fidivl
int3
pop
cmp
cmp
mov
data16
cmp
dec
incb
icebp
jmp
pop
mov
add
lahf
stos
jge
bound
and
cmpl
call
or
out
int3
jae
stos
es
repnz
jbe
dec
vphaddbw
mov
dec
in
leave
xchg
daa
pop
movsb
adcb
sbbb
out
fcoml
xor
lret
cmp
test
into
pop
in
outsl
and
lret
rcll
popf
dec
scas
cli
das
push
and
xchg
jns
push
inc
ds
jo
sub
clc
ljmp
inc
inc
sub
faddl
add
test
adc
dec
adc
mov
lea
and
adc
outsb
xor
fs
jbe
pop
jo
cmp
stos
in
xchg
jnp
sub
fucom
ret
adc
xchg
fbstp
xor
loop
call
mov
dec
or
into
dec
les
enter
movsb
hlt
xchg
cmp
xor
sbb
cmp
mov
pop
je
cmp
inc
fs
out
in
cmp
mov
into
adc
jp
sbb
loope
lret
mov
mov
dec
lcall
int3
adc
adc
jae
in
push
in
mov
stc
lret
call
jno
jns
int
jb
inc
pop
loop
lea
lea
or
push
scas
fistpll
xorb
add
cmc
dec
dec
dec
adc
fucomp
or
xor
cld
ljmp
cmp
daa
push
sarl
loope
sub
aas
add
pop
xchg
pop
fbstp
adc
dec
aad
push
in
sub
adc
xor
imul
dec
repz
shlb
scas
adc
and
lock
sbb
adc
inc
loope
cmpsl
push
mov
jp
mov
imul
lods
test
push
iret
xor
stos
xlat
dec
cwtl
sub
out
or
ljmp
ficompl
aam
and
out
adc
sbb
pop
mov
clc
xor
into
imul
cmp
lods
mov
push
rcll
out
cmp
mov
mov
jecxz
push
sbb
pmaddwd
jnp
mov
jnp
inc
jge
stos
into
xchg
add
pusha
popa
jp
stc
push
repz
data16
adc
cmp
test
dec
imul
cs
cwtl
aaa
dec
fwait
sbb
cwtl
shlb
inc
cld
push
jge
shll
stos
les
cs
iret
dec
pop
xchg
jle
int3
outsl
push
pop
dec
sub
mov
jnp
rorl
imul
ret
shr
fcompl
clc
aas
cmpsl
mov
mov
frstor
inc
cmp
xor
jg
sub
inc
mov
and
ja
add
xchg
pop
and
leave
cmpsl
jne
test
push
cwtl
push
fldt
mov
xchg
fisttpll
add
addr16
add
sub
mov
cmp
lahf
pop
daa
adc
loop
fs
fdivrs
jg
outsl
in
push
fwait
xlat
add
pop
xchg
arpl
in
adc
push
and
leave
cmp
addr16
movsb
mov
adc
and
cmp
js
outsb
test
xor
pop
mov
sub
out
sahf
pop
jno
sahf
sub
in
js
sub
vrcpps
in
in
pop
in
add
addr16
sahf
or
xchg
cmp
mov
imul
xor
mov
insl
popf
inc
xor
std
push
or
cmp
fdivrs
fidivs
fiadds
repnz
or
cmp
cmp
mov
lock
test
rcll
lret
data16
dec
mov
imul
push
rcl
lds
lock
or
insb
dec
orl
xor
insl
dec
loopne
dec
in
mov
jb
mov
iret
or
sub
addr16
cmc
adc
outsb
aam
mull
push
lods
std
bound
jne
icebp
aad
clc
daa
ror
mov
adc
jge
add
stos
push
inc
xchg
mov
push
xchg
cmpsb
sti
out
add
shr
scas
push
out
in
xor
in
jle
in
jmp
ret
movb
insl
jne
ds
pushf
xor
fs
loop
out
add
fwait
inc
das
mov
aad
jb
cmpsb
jmp
arpl
sbb
cmp
pop
sbb
push
lahf
sbb
fwait
mov
cmpsl
sub
pop
mov
adc
cmp
imul
in
sahf
sub
test
popa
adc
xchg
xor
cli
push
xor
in
jae
shr
or
sti
fstp
mov
sbb
mov
stos
outsb
sti
mov
xor
mov
xor
add
mov
ljmp
mov
adc
and
push
call
test
outsb
mov
int
mov
add
stos
mov
jne
ds
cmp
in
jo
fs
sub
mov
mov
mov
mov
jbe
ja
mov
jae
mov
add
xor
mov
xor
sti
fisttpl
imul
adc
mov
js
xor
test
ds
sub
adcb
push
jne
xsave
jg
mov
les
jne
sbb
popf
or
dec
lea
cli
cmp
sti
ljmp
leave
lahf
mov
pop
jmp
icebp
dec
nop
jl
arpl
push
and
sub
lods
add
push
dec
xchg
shlb
lock
test
mov
popf
xchg
pop
fcomip
imul
sbb
cmp
ror
sub
mov
test
sbb
je
cmp
sbb
test
enter
rclb
outsb
mov
pop
xchg
popf
jl
mov
dec
push
push
inc
imul
xor
xchg
int
mov
jno
aaa
repnz
jg
rcrl
mov
mov
test
jp
and
sahf
or
setae
jns
test
adc
or
mov
sbb
lock
and
dec
mov
inc
insl
push
icebp
inc
or
jl
mov
fsubs
ret
mov
inc
repz
loop
std
mov
sbbl
adcb
bound
lods
mov
pop
xlat
sub
pop
cmp
loopne
sub
pop
cld
movsl
mov
dec
test
inc
jbe
iret
cmp
aad
jb
sbb
add
pushf
scas
add
xchg
mov
mov
shl
inc
call
cltd
sub
out
ljmp
aas
and
insl
f2xm1
fwait
dec
addb
int
sub
nop
add
or
lret
fucomip
sub
test
test
lods
jns
adc
xor
push
dec
insl
lcall
je
shlb
ljmp
mov
cmpsb
cld
nop
sbb
hlt
adc
in
cmc
pop
gs
cmp
jns
inc
mov
add
inc
pop
or
mov
add
test
ss
in
into
pop
test
dec
lahf
jle
in
pop
pop
addr16
int3
insl
adcl
mov
popf
nopl
clc
out
rcrb
cmp
ja
or
adc
icebp
pop
cmpsl
aaa
xor
mov
mov
loope
outsb
or
mov
or
test
mov
adc
adc
repnz
int3
jmp
fdivrl
mulb
adc
aam
push
lea
cmp
xchg
lds
jb
cli
jge
xlat
pop
cmp
in
push
add
xor
fnstcw
and
les
push
dec
sahf
jle
cmpsb
dec
or
jo
adc
xchg
inc
jecxz
xor
pop
aad
inc
xchg
scas
mov
aam
push
sarb
test
mov
lret
pmaxub
jne
inc
cld
mov
push
sbb
insl
daa
cmp
mov
inc
ret
cwtl
or
and
ret
cmp
or
mov
cli
fidivrs
aas
pop
cmp
stc
bound
cmc
stos
out
pslld
sbb
movsl
inc
and
or
nop
xchg
test
or
popf
mov
sbb
shlb
pop
xor
sbb
xchg
lahf
ja
xorb
mov
fistpll
fwait
lcall
lods
mov
mov
and
cmc
push
and
out
or
fnsave
lods
test
ja
jmp
in
dec
cmp
das
sbb
ljmp
scas
xor
into
lock
mov
inc
adc
adc
cwtl
cmp
imul
insb
cli
xchg
arpl
fsub
push
adc
ja
inc
insb
repnz
pop
pop
mov
sub
lcall
inc
mov
clc
test
jo
jbe
sbb
adc
ja
cmp
add
push
fistps
pop
mov
cs
mov
shl
loope
outsb
popf
xchg
mov
xor
aad
bound
pusha
pop
movl
out
pop
push
aaa
sti
fcomps
push
das
rcll
into
xlat
and
cmpsb
sti
ja
fwait
pusha
mov
jmp
and
movsb
sub
lahf
sub
ret
mov
jns
xchg
jmp
cmp
sub
mov
push
lods
imul
mov
int
dec
pop
nop
fsubl
pop
xchg
cltd
std
popf
and
jmp
mov
insl
mov
jle
aaa
dec
cld
pop
add
and
adc
and
pop
hlt
inc
adc
filds
jmp
fsubr
push
fucomp
push
push
pop
add
add
lock
mov
xor
push
test
out
mov
pop
xchg
jmp
inc
dec
and
mov
push
cmp
out
pop
cltd
pushf
cwtl
push
ja
xor
jge
push
mov
mov
jae
sub
mov
xor
stos
lcall
stos
lcall
sbb
aam
int
js
cld
jp
mov
adc
sub
ffree
sbb
loop
nop
dec
mov
les
push
call
xchg
je
hlt
lret
rcrl
adc
outsb
out
xor
pop
add
roll
clc
fcoms
jg
adc
out
push
dec
adc
sbbb
sub
sbb
hlt
sub
mov
cmp
dec
imul
inc
and
test
movsb
out
loope
dec
xorl
inc
pop
mov
sbb
mov
jns
js
adc
bound
outsb
adc
jecxz
dec
pop
pop
ss
nop
jle
xchg
sub
xchg
rolb
sub
clc
add
sti
push
movsl
out
bound
popa
out
sub
loope
or
fsubs
mov
pop
add
ljmp
push
insl
stos
mov
ljmp
mov
cwtl
adc
push
shrl
cs
rorb
cwtl
and
cwtl
ja
das
mov
dec
inc
jbe
cld
and
fcomps
cmp
inc
test
je
mov
jno
or
iret
and
and
push
push
sub
mov
pop
out
pop
clc
adc
and
repnz
xor
jge
in
shrl
jl
arpl
cmpsl
cmc
pop
test
dec
and
aaa
mov
cmp
fisttpll
push
inc
pop
inc
iret
ret
hlt
lret
sbb
adc
loope
cmp
hlt
inc
aaa
sub
jl
push
filds
fs
jp
fidivrl
lods
adc
sub
and
ret
popf
jae
loopne
popa
out
add
testl
and
sbb
mov
sbbl
adc
sub
push
sub
mov
jle
pop
cmp
pop
js
adc
leave
dec
mov
les
push
scas
adc
dec
mov
test
push
mov
cmp
call
add
mov
bound
or
lcall
dec
pop
xorl
add
aad
adc
pop
loop
mov
cmp
push
dec
es
fnsave
outsl
cmp
gs
xor
mov
and
cli
jnp
into
aad
test
inc
push
fcoms
pop
pop
ljmp
mov
jmp
call
adc
stc
stos
mov
or
sti
lods
adc
push
les
or
sbb
out
popa
lods
push
xor
int
xchg
pop
pushf
cli
mov
fcomi
jbe
loop
ja
aad
mov
mov
call
filds
pop
pushw
push
sub
mov
and
adc
pusha
test
cmp
mov
es
fistpl
cmp
and
xchg
sti
enter
add
or
stc
cmp
jp
in
dec
mov
cmc
scas
xchg
jno
sbb
mov
pop
xor
xor
xchg
push
test
dec
jb
add
call
dec
jl
vcvttpd2dqx
jbe
xor
daa
xor
test
push
dec
adc
dec
push
xchg
cmpsl
icebp
push
and
dec
je
outsb
test
pop
mov
es
mov
lret
push
and
mov
in
ret
cmp
dec
dec
and
loop
mov
cmpsb
testl
subl
ljmp
cmp
sbb
fistpll
xchg
cs
add
jo
inc
rclb
mov
cltd
lods
push
push
push
inc
loopne
inc
test
inc
or
in
das
sbb
dec
xchg
jno
cmp
mov
jg
mov
mov
adc
sbb
repz
push
and
dec
sub
jnp
push
lret
cld
xor
jbe
out
icebp
sub
lods
ss
clc
or
pop
pop
icebp
mov
pop
movb
xor
xchg
icebp
adc
popa
push
cmp
outsl
lods
cmp
pop
shll
add
and
jge
out
jb
repnz
sbb
push
jg
adc
pop
mov
xor
add
push
cmp
clc
xor
add
out
cmp
push
aad
fsqrt
loopne
pop
mov
test
dec
xchg
adc
sbb
in
push
pop
pop
mov
aaa
and
jge
jmp
repnz
cmp
ficoms
jno
clc
aaa
fmuls
cltd
daa
in
loop
aad
clc
ret
rorb
out
sbb
sub
jne
mov
push
xlat
pop
cld
inc
and
stc
shlb
xor
insl
xorb
enter
push
dec
mov
sar
movsb
sbb
or
daa
adc
fstp
ret
add
leave
clc
stos
cmc
test
mov
das
repz
or
adc
mov
xor
pusha
or
js
shll
in
jae
inc
inc
mov
mov
mov
mov
addr16
mov
add
hlt
pop
or
outsl
ret
cs
jo
mov
pop
push
adc
cmp
mov
jbe
dec
pop
add
ss
outsb
cmp
adc
lea
sub
mov
ljmp
xchg
negb
pop
lret
mov
mov
hlt
xor
mov
push
stos
fmuls
into
xor
jb
and
popa
xchg
loopne
push
mov
dec
std
aad
adc
sbb
dec
push
jl
xchg
fwait
cmp
jnp
subl
xlat
mov
pop
in
dec
xorb
fidivs
outsb
and
imul
repnz
addr16
fbld
and
ret
lret
cmp
sbb
lock
int
ljmp
inc
mov
sbb
cs
cmpsb
ret
repz
sti
sub
sub
cli
daa
rcll
test
out
orb
mov
js
int3
sbb
fimull
dec
sub
or
xchg
pop
insb
adc
cmc
add
sub
mov
icebp
adc
jl
ret
xchg
je
mov
ror
dec
iret
shll
outsb
or
std
mov
test
xchg
adcl
loope
mov
and
int3
mov
or
xor
mov
lods
sbb
stc
inc
subl
pop
lods
inc
adc
imul
adc
xor
push
pop
movsb
inc
ret
mov
fadds
adc
add
and
jmp
jecxz
pop
rcr
pop
mov
stos
and
xchg
xchg
sub
dec
jge
sbb
bnd
lret
sti
and
mov
sti
and
aad
mov
mov
mov
stos
cs
dec
enter
movsl
or
pushf
mov
xor
pop
outsb
jge,pt
xchg
pop
push
dec
pusha
xchg
or
mov
and
adc
insb
push
push
pusha
sbb
sbb
dec
mov
shll
sub
jnp
adc
pop
inc
dec
push
inc
cli
mov
clc
jne
fbstp
nop
push
out
in
pusha
push
subl
movsl
adcl
inc
mov
sbb
dec
lock
shll
imul
jp
icebp
sub
test
fs
push
popa
ret
outsb
push
xor
and
xchg
or
cli
test
stos
movsl
xor
lret
xchg
repz
pop
cmp
xor
inc
mov
scas
push
pop
clc
push
test
mov
mov
inc
pushf
pushf
mov
jne
out
test
rorb
inc
fnsave
xchg
in
cs
mov
cmpsl
cltd
scas
call
jb
and
mov
push
pop
roll
orl
inc
xor
leave
xchg
addb
cs
test
lea
repnz
mov
sub
loope
jb
xor
jg
fisttpl
or
icebp
jp
push
pushf
xor
lret
loopne
inc
adc
sbb
mov
add
and
dec
push
into
or
repz
shll
js
adc
es
cld
iret
xor
push
add
shll
cld
mov
vmread
jo
fisubl
mov
add
lahf
insl
sbb
xchg
xor
out
jno
out
and
mov
out
xor
ds
flds
subl
mov
mov
sub
popf
mov
in
jns
sbb
test
or
loop
sarl
push
stc
or
sbb
mov
add
imul
insl
pop
sub
add
es
outsb
inc
idivl
xor
jecxz
sti
jo
mov
mov
push
push
push
por
int
dec
cmpb
js
dec
add
pop
mov
jb
adc
mov
bound
or
and
js
imul
push
xchg
dec
fistl
lock
jl
sub
jg
push
xchg
loop
divb
dec
dec
xlat
lds
dec
in
adc
or
lea
mov
and
shrb
sub
pusha
sbb
jo
jcxz
or
mov
dec
push
adc
call
jge
push
pushf
cmp
adc
pop
mov
pop
hlt
jns
sbb
cld
bnd
mov
stos
mov
mov
jns
pop
leave
sahf
inc
iret
jp
mov
dec
into
mov
mov
and
xchg
pop
mov
outsb
push
jmp
mov
inc
sbb
outsl
sub
data16
or
mov
out
cmpsl
cs
xlat
mov
mov
js
mov
add
or
pop
cmp
in
mov
mov
and
aad
lcall
and
adc
aam
in
jg
dec
ja
out
outsl
mov
jge
lock
cld
test
and
out
in
sti
cmc
aaa
xorl
push
shl
inc
push
test
xchg
sbb
subb
push
mov
xor
int
xchg
loop
or
out
xchg
add
adc
incb
loopne
adc
mov
add
push
xor
enter
lcall
int3
adc
out
and
cli
stc
add
movl
mov
inc
and
push
scas
mov
sub
sarb
popf
js
jge
cmpsl
fwait
xchg
mov
mov
popa
xchg
pop
xor
enter
stos
and
mov
dec
rcrb
push
lea
in
xlat
fisubs
jecxz
jnp
push
cmp
push
xchg
lods
sbb
push
or
mov
cld
sub
int
cmpl
outsl
add
bound
bound
stos
aam
push
test
shll
add
mov
pusha
xorl
lcall
mov
xor
insl
popa
shrl
inc
iret
xchg
mov
lods
mov
jmp
pop
mov
repz
push
enter
rorl
lods
push
in
ss
cmp
fisubs
inc
stos
imul
xor
rcrl
dec
or
mov
pushf
add
in
sub
adc
mov
popf
ja
adc
push
ret
adc
xchg
pop
sbb
aaa
xlat
mov
xlat
push
outsl
push
sahf
dec
loopne
mov
pop
sar
fld
sub
test
push
mov
jg
xchg
jnp
mov
aas
ret
into
mov
mov
gs
jne
xchg
cs
out
xbegin
scas
stos
movb
xor
int
adc
jo
out
mov
add
adc
bound
inc
out
pop
ljmp
lcall
inc
inc
push
mov
repz
movsb
mov
imul
push
out
mov
iret
xor
cmp
fcompl
inc
ret
xor
add
jno
inc
and
add
push
data16
push
mov
lods
push
push
jno
mov
rorl
leave
mov
movsl
or
pop
decb
mov
adc
dec
out
arpl
jo
aad
fucomip
lret
sub
rcl
add
push
fdivr
or
dec
push
xor
jnp
mov
mov
cwtl
sbb
lcall
mov
mov
ljmp
les
inc
gs
cli
sub
cmp
mov
stc
inc
sbb
push
pop
out
mov
dec
nop
aaa
stc
rorl
nop
mov
lahf
xlat
dec
cmpsl
xor
insl
clc
aam
outsb
push
cwtl
sti
push
xlat
pop
hlt
movl
adcl
mov
xchg
stc
das
jb
and
pop
mov
pop
inc
iret
arpl
sub
repnz
roll
test
and
les
adc
and
cli
jge
mov
jnp
inc
sahf
js
sbb
fldenv
push
scas
sub
jl
outsl
gs
jae
mov
mov
pop
mov
das
xorps
in
cmpsl
nop
mov
out
dec
add
dec
stos
sbb
or
xchg
rcll
pop
sub
push
subl
pop
xor
pop
jno
push
inc
add
out
dec
dec
aad
mov
mov
inc
sub
xchg
into
dec
outsl
mov
in
popf
push
lahf
sub
and
fistpll
imul
std
shll
sbb
push
das
or
adcb
pushf
jl
and
lds
pop
lock
int3
loopne
in
mov
in
rorl
or
shlb
int
xor
push
fdivrp
push
int
int3
jns
mov
xchg
pop
je
or
mov
adc
mov
cmp
fldenv
out
adc
rclb
lret
movsl
addl
mov
and
add
in
leave
bound
in
xchg
push
mull
sahf
pop
sbb
int
out
push
sub
jnp
fwait
mov
rorl
push
and
add
mov
jecxz
fs
inc
jbe
sti
insl
ljmp
jno
mov
stc
stos
mov
cmp
push
xor
insb
cltd
sbb
out
je
pop
adc
stos
aaa
xchg
scas
mov
sbb
mov
add
push
mov
adc
sbb
adc
jg
stos
push
and
clc
xorl
xor
das
xchg
sub
test
lods
mov
mov
fsts
bound
xchg
fldenv
dec
jmp
js
add
push
mov
xor
pop
pop
call
scas
into
mov
addr16
cmpl
cmpb
xchg
popa
push
les
dec
xchg
les
enter
xor
and
add
enter
and
jmp
mov
inc
sub
mov
jae
shll
xor
fcmovbe
cld
jl
mov
fdivrl
inc
fwait
out
pop
addr16
adcb
es
sbb
mov
jo
sub
add
push
xchg
out
adcb
out
jle
outsb
adc
push
push
mov
popa
xchg
dec
aas
pushf
pusha
and
les
test
xlat
pop
pop
inc
in
fmulp
sub
aas
jmp
fisubrl
aas
lcall
dec
add
adc
call
stos
xchg
aaa
xor
imul
mov
pop
ss
inc
push
cld
icebp
pop
fdivs
push
pop
lods
fninit
and
stos
inc
test
bound
clc
fidivrl
neg
lods
lods
in
shlb
mov
cmpl
push
imul
adc
mov
xchg
outsb
mov
adc
add
xor
mov
mov
dec
push
sbb
fnsave
inc
sbb
mov
movsb
cltd
rcll
inc
bound
into
jle
xor
add
test
mov
sbb
ja
cwtl
mov
jbe
sbb
sahf
test
lods
test
cwtl
xor
shlb
sub
push
shrb
into
inc
stc
sbb
jg
into
sti
and
cmpsb
mov
cmpsb
lcall
add
pop
dec
jecxz
push
push
sbb
leave
sbb
xor
sarb
inc
or
sbb
fwait
mov
dec
dec
jge
aas
and
and
sbbl
popf
adc
lcall
roll
mov
ss
js
inc
xlat
cld
mov
out
adc
add
xchg
cmpsb
add
repnz
inc
mov
rclb
es
outsb
jne
call
cmc
test
inc
stos
out
cmpsl
mov
testb
movsl
vmovlps
sarl
mov
movlps
in
jno
cmp
mov
in
pop
dec
das
repz
xchg
rorb
mov
xor
aaa
push
push
dec
jbe
icebp
inc
clc
fwait
outsl
addl
fcoml
jns
ds
stc
jp
loopne
aam
mov
or
jl
aaa
add
rorb
xchg
and
cmc
js
test
bound
data16
add
imul
add
aam
ret
and
adc
fwait
es
mov
das
rcrb
iret
pop
shrb
push
je
pusha
adc
mov
xchg
movsl
addl
sub
adc
je
les
adc
roll
movsl
jg
cmp
or
movsb
fwait
and
inc
pop
jge
mov
mov
push
sbb
inc
ds
fs
imul
shlb
sbb
inc
jb
ret
mov
and
mov
stc
jo
cmp
xchg
and
sbb
mov
insb
mov
cmc
mov
jecxz
repnz
dec
sbb
mov
pop
mov
pop
ret
in
adc
xlat
cltd
icebp
loop
xor
mov
adc
ret
lock
fucomi
rcrb
xchg
test
jecxz
pop
mov
je
push
mov
lret
cltd
pop
out
out
pop
or
aas
jo
mov
and
orb
sub
mov
lret
mov
jge
cmp
in
mov
pop
xor
popf
int
and
sbb
mov
fs
popf
popl
pop
sbb
xchg
jns
adc
pop
push
dec
sbb
push
stc
mov
std
mov
fsubr
add
pop
test
push
daa
daa
inc
movsb
leave
xor
xchg
cltd
lea
sub
mov
mov
sbb
data16
iret
pop
out
mov
and
add
pop
xchg
stos
mov
out
mov
jmp
nop
xchg
add
arpl
mov
addr16
stos
outsb
repz
lods
call
jbe
in
lds
bound
into
test
nop
lahf
subl
rcll
cmpsl
xchg
stc
cmp
jge
pop
dec
xor
sahf
rcrl
and
cmpsb
in
cmp
aaa
loopne
stos
rorb
push
mov
jo
inc
push
sub
hlt
jne
dec
xor
xor
ds
fidivrs
pop
sub
cmc
push
std
mov
mov
push
lods
and
xchg
pop
adc
push
ret
add
add
mov
das
add
sub
hlt
xchg
xor
repnz
push
push
sti
rcrb
adc
xchg
fdiv
ljmp
cmp
fs
icebp
ja
insb
push
xchg
fdivrl
cmpsl
js
js
pop
in
inc
xor
inc
or
inc
enter
pusha
jne
and
mov
push
mov
ret
mov
adc
pop
inc
adc
mov
or
cmp
jae
ds
jnp
test
mov
xchg
fnsave
bound
daa
xchg
sqrtps
xor
and
and
jns
shl
sub
clc
pop
js
mov
decl
push
sbb
mov
lods
test
icebp
hlt
xchg
sbb
xor
cld
mov
dec
xor
nop
loop
sahf
dec
test
add
fwait
xor
xchg
dec
andl
sbb
xlat
gs
cmpb
mulb
add
jbe
push
out
and
jecxz
sahf
fstpt
sbb
pop
mov
mov
in
lods
sub
enter
xor
inc
imul
fcomp
sub
loopne
add
xchg
cmp
fs
movsl
shll
xchg
loop
push
pop
cld
sbb
push
mov
fwait
xchg
xchg
add
add
ja
cmp
fstpl
stc
xchg
movsb
lods
mov
fwait
fwait
int3
sub
mov
adc
xor
sbb
popa
lods
inc
xchg
sbb
popf
pop
call
add
sub
mov
clc
cmp
cmp
js
jns
add
xlat
out
incl
pop
dec
and
cmp
fimuls
dec
push
fimull
andl
cmp
out
or
inc
push
shl
lret
push
xor
jb
adc
rcr
test
ret
es
mov
and
jns
adc
fists
and
adc
dec
ret
sbb
dec
lods
sbb
xchg
lcall
mov
fcomp
ss
add
dec
rcrb
inc
push
pop
inc
mov
xor
and
jae
add
shrb
xchg
incl
pop
fisubrl
pop
mov
scas
ljmp
push
sbb
jp
es
push
shl
sub
mov
cmp
ror
and
lods
sbbl
push
cmp
fldenv
add
not
mov
out
xor
call
cmc
mov
outsl
cmp
mov
jne
in
ja
push
pop
adc
add
fmul
mov
pop
fmuls
add
inc
or
mov
inc
push
call
movsb
add
sahf
cwtl
add
mov
sti
inc
lret
outsl
jge
frstor
das
adc
cmp
arpl
push
ret
outsb
popf
xchg
jmp
mov
filds
movsl
cmpsl
insb
pop
das
aam
cpuid
int
cmp
lea
mov
mov
sti
in
jnp
add
xor
lcall
loope
inc
arpl
lea
mov
dec
fsub
js
mov
push
fisubrs
pop
mov
add
lret
and
sbb
jae
mov
stc
lcall
add
das
add
mov
jns
jns
jnp
jl
add
or
scas
mov
sub
mov
std
add
mov
pushf
xor
int3
xor
popa
add
cmp
js
xor
xlat
shrb
dec
loop
and
mov
mov
jge
sub
sbb
sti
mov
jb
xchg
test
jne
push
int3
int
loopne
xor
xchg
lods
sub
ljmp
xchg
add
flds
add
push
ret
das
push
jbe
add
ret
pop
pop
push
es
in
sub
jnp
xor
mov
std
lds
es
inc
cmp
jnp
cmp
jno
and
cmp
inc
das
adc
mov
iret
mov
or
sbb
inc
push
rclb
push
mov
sbb
xor
lods
xor
add
adc
pop
outsl
dec
mov
adc
fwait
xchg
incl
insb
mov
or
loope
pop
and
xchg
popl
ret
xchg
outsb
ret
dec
sub
movb
je
mov
mov
insb
mov
lods
lret
jecxz
inc
insb
insl
das
cwtl
adc
fimuls
lret
jle
pop
and
loope
fcoml
and
lret
sar
jl
fmul
nop
mov
jb
sub
sbb
inc
xor
dec
insb
ret
jns
mov
out
imul
pop
pop
lret
repz
pushl
pop
cmc
lods
cmp
xchg
fldcw
cs
dec
and
enter
pop
addr16
cmp
push
jne
cmpsb
lds
mov
jge
mov
mov
sti
mov
lods
jecxz
mov
insl
sub
mov
popa
jg
mov
pop
mov
leave
mov
mov
lahf
loope
mov
stc
lods
out
repnz
mov
out
jge
and
cld
push
xchg
aaa
mov
insb
mov
bound
pop
mov
in
jnp
inc
shl
rorb
cmp
pop
shll
stos
adc
in
cmp
out
js
lea
sti
ret
aam
jge
lods
es
mov
sbb
jns
clc
mov
xchg
jge
aad
add
xchg
out
dec
test
mov
xlat
xor
add
mov
push
out
pushf
adc
or
or
sbb
aam
add
push
sub
lods
mov
out
jle
mov
mov
test
dec
adc
imull
ljmp
mov
sbbl
clc
mov
push
mov
std
pop
mov
repz
push
daa
lcall
jmp
popf
jno
in
in
repz
mov
push
mov
psubb
fistpl
cli
pop
jno
cmp
pop
xchg
imul
xor
je
lock
jae
mov
aas
pushf
mov
les
cs
je
jmp
pusha
fnstsw
das
xor
adc
xor
jp
xlat
sub
mov
adc
loop
inc
cmpsb
xchg
test
mov
in
cs
call
aam
stc
and
int
cmp
mov
stos
rorb
out
stc
insb
inc
je
mov
xor
sbb
inc
scas
xor
rcl
inc
into
jl
std
adc
ret
out
jmp
pushl
adc
fcomps
mov
idiv
out
fwait
pop
shll
mov
out
xor
inc
mov
fwait
cmp
mov
mov
hlt
sub
and
lods
loop
fisubs
dec
lahf
stc
mov
xchg
pop
jnp
jb
movsb
inc
push
cmpsb
cmpsb
movl
popf
mov
ret
stos
xchg
scas
pop
push
inc
pushf
mov
pop
lods
pop
or
inc
jae
add
aas
test
fcmovnbe
cmp
add
popf
push
jae
sahf
in
lods
stos
out
mov
jbe
or
push
inc
mov
addr16
inc
sbb
cmp
inc
jmp
mov
jo
mov
call
push
mov
repz
addb
jae
frstor
cmp
dec
sub
pop
jl
bound
and
jne
cmp
sub
sub
lret
imul
jo
push
insl
pop
stc
mov
inc
adc
pop
jo
add
je
stos
int
movsb
repnz
repz
in
jnp
lock
cmp
in
ficoml
lock
aam
out
inc
in
movsb
lock
jns
mov
pop
repz
movsl
outsl
fucomip
inc
aad
nop
insb
add
hlt
inc
sub
ja
scas
sub
pop
pushf
xor
call
or
pop
xor
lret
clc
pop
aam
push
in
xchg
dec
inc
fwait
sbb
nop
scas
jge
mov
lret
test
add
popf
and
jecxz
lcall
pop
movb
jbe
jnp
imul
leave
mov
rclb
shll
daa
insb
push
mov
cmp
mov
lds
aad
push
repnz
xlat
jmp
leave
dec
xchg
shlb
shrb
push
lods
xor
push
fimull
in
sbb
imul
fnstsw
adc
mov
jge
mov
rcrl
dec
sub
scas
jb
sahf
popf
fsubrp
pusha
inc
mov
xor
mov
inc
stc
aas
cmp
add
adc
pop
lcall
dec
in
mov
call
inc
push
dec
mov
sbb
jae
cmp
cmp
aas
xor
scas
xchg
clc
jbe
pop
stc
pop
bnd
dec
mov
and
imul
arpl
lods
loop
inc
jnp
out
and
lcall
mov
push
pop
stos
adc
inc
mov
out
xchg
cmpsl
xchg
call
dec
push
popa
gs
std
incb
sbb
loope
notl
or
xchg
mov
xor
fistpl
push
jl
mov
fwait
imul
jne
inc
push
fwait
inc
outsb
pop
mov
or
cmpsl
lods
sbb
in
mov
add
xor
cmp
lea
arpl
scas
iret
stos
rcrl
inc
test
jecxz
lods
or
fucomi
cltd
or
sbb
sar
sub
pop
scas
daa
sub
push
scas
jo
mov
jl
shr
cmp
imul
cmp
scas
rcll
jmp
mov
mov
mov
pop
into
dec
popa
aas
push
dec
xchg
rcrb
insl
xchg
je
jecxz
or
xor
arpl
mov
repnz
xchg
cld
lods
adc
adc
push
xchg
loop
dec
xorl
into
aam
int
jp
mov
aas
pop
sub
arpl
daa
dec
pop
sbb
cltd
mov
test
mov
mov
mov
scas
mov
push
imul
xbegin
cltd
loope
pop
arpl
push
adc
xchg
mov
insb
cmp
imul
aam
add
jecxz
les
cmp
sub
orl
xor
gs
inc
cltd
mov
or
scas
ss
jns
jecxz
xchg
cmp
pop
lea
sub
push
sub
push
lock
adc
ret
xor
inc
cmp
popf
jl
pop
ret
mov
movsb
mov
add
mov
insb
ja
cmp
popa
stc
nop
jmp
decb
aam
inc
test
pop
xchg
inc
mov
xchg
sbb
xchg
cwtl
scas
dec
mov
sbb
dec
jo
xchg
mov
out
imul
lods
inc
icebp
or
sahf
out
jae
dec
out
lds
lcall
rorl
outsb
dec
jns
xor
mov
lcall
dec
or
adc
or
hlt
adc
mov
pusha
out
mov
jg
xor
push
and
shrl
add
dec
je
fbstp
les
outsb
xchg
sub
jle
jns
mov
mov
or
mov
sub
movsb
xlat
and
and
sbb
adc
cmp
sub
daa
xlat
insb
push
or
pop
stos
movsb
lock
sbb
shlb
inc
test
loop
cmp
sbbb
cmp
xor
das
fisttpll
pop
sbb
xor
arpl
push
mov
leave
testb
int3
daa
fs
cs
jl
jno
cmp
int
sbbl
cmpsl
popf
pop
dec
int3
lds
popa
popa
lds
adc
cli
dec
xchg
out
xor
loopne
pop
dec
sbb
pop
stos
pop
test
sub
loope
xor
rcll
push
mov
mov
xlat
push
push
cmp
or
movsl
in
sub
mov
push
outsb
bound
in
mov
cltd
or
fnstcw
and
cwtl
lds
mov
fstl
cmp
das
cmp
lods
pop
inc
fs
mov
aad
inc
mov
notb
add
sti
int
sbb
push
or
add
sub
int
stc
loopne
xor
sub
lea
pop
mov
sub
mov
pop
in
scas
ss
xor
shrl
les
mov
faddl
or
xor
in
inc
arpl
jbe
sub
loope
or
icebp
dec
cmp
icebp
test
push
xchg
inc
cmpsb
in
pextrw
mov
xor
call
jb
data16
dec
js
and
jne
fsubrl
dec
outsb
pop
push
idivl
mov
test
cwtl
push
dec
xchg
jg
xor
adc
ss
fmull
insl
aam
and
mov
jge
in
mov
jno
outsb
aas
inc
cmpsb
das
cltd
test
icebp
ret
daa
test
into
pushf
fisttps
mov
dec
cmp
and
pop
repz
adc
cwtl
cmpsl
cli
js
dec
lret
dec
cmp
push
jno
fwait
cmp
popl
mov
enter
dec
testl
fldenv
push
out
dec
sbb
xchg
mov
xchg
push
popf
jmp
xor
push
dec
cmpsb
adc
insb
adc
and
mov
vscatterdpd
jp
sbb
rorl
gs
ja
xchg
sbb
inc
pop
das
cs
pcmpeqb
jmp
push
xchg
out
ret
inc
xor
decl
mov
xchg
pop
jns
daa
add
iret
or
and
out
addr16
jnp
jbe
xlat
push
jnp
xchg
lret
rorl
ret
into
aas
pop
push
xor
inc
inc
test
testb
lock
mov
and
aam
mov
addb
repz
dec
rolb
out
pop
cmp
dec
mov
xor
rcrb
jp
and
ret
pop
inc
or
mov
cwtl
mov
mov
jge
test
repnz
movsb
or
es
in
ss
xchg
xor
andl
dec
div
cwtl
loope
pop
jb
fldt
test
push
and
jno
popl
jns
adc
lcall
add
out
jle
fs
repz
sbb
or
push
pusha
sbb
push
cmp
and
jge
insl
movsl
test
jle
dec
es
jns
sbb
cs
push
cs
adc
lahf
aad
or
or
mov
dec
inc
in
dec
sbb
or
in
loop
xchg
jl
addr16
adc
bnd
test
into
in
cld
call
icebp
dec
mov
add
inc
pop
pop
xor
pushf
stc
fmul
pop
mov
xor
sub
rcrl
sub
out
daa
roll
xchg
mov
dec
aas
test
addr16
cmc
pop
aaa
in
xchg
iret
jmp
pop
jo
xchg
insb
mov
add
stos
cmpsl
test
adc
arpl
pusha
jmp
xchg
push
push
xchg
pop
imul
test
inc
or
roll
sahf
inc
leave
ljmp
or
div
mov
or
pusha
in
or
xor
xchg
inc
notb
mov
data16
and
mov
mov
push
rorb
push
pop
add
out
pop
dec
and
jmp
ja
mov
icebp
mov
fs
sub
test
and
iret
cltd
mov
mov
rcll
divb
inc
jl
mov
in
int
orb
cwtl
ret
adc
jg
loopne
pop
adc
mov
sarb
cs
sub
ljmp
das
sbb
enter
xchg
fdivrl
dec
mov
shl
icebp
inc
pop
mov
jns
push
dec
push
js
sbb
test
cmpl
and
push
enter
fisubrs
hlt
push
mov
mov
cmp
sahf
into
sbb
jbe
outsb
fisubs
pop
orb
rcrl
into
lea
push
mov
iret
xchg
jo
jns
enter
dec
mov
and
cld
cld
imul
push
and
or
data16
les
jae
sbb
ja
mov
stos
mov
or
movsl
jmp
push
dec
adc
xor
ror
push
jecxz
sbb
das
std
sbb
mov
inc
loop
iret
adc
lret
scas
popf
mov
or
test
mov
mov
inc
jmp
dec
push
or
push
dec
in
push
arpl
mov
insl
aaa
rcrl
stc
sub
popa
mov
lock
rcl
jp
arpl
icebp
rcrl
scas
or
pushf
lds
out
xor
mov
pop
and
jae
cmp
xchg
push
adc
mov
sbb
cltd
and
gs
data16
jg
pop
mov
push
icebp
push
outsb
adc
inc
dec
aaa
and
jo
leave
stos
push
xor
dec
enter
pop
cmpsb
jnp
mov
xchg
jge
jne
lds
jne
sub
push
je
addl
mov
ja
jle
xchg
lods
fistps
cmpsb
pop
or
insb
dec
sahf
je
sbb
leave
cmp
test
pextrw
or
out
sub
out
shll
test
and
ss
sti
add
xchg
jae
mov
clc
andb
cmpsl
mov
testb
lods
scas
mov
fsubr
out
dec
xchg
ret
mov
adc
in
pop
cmpsb
imul
mov
sub
das
rcll
lds
jmp
roll
mov
mov
push
movsb
mov
jbe
std
push
pop
shl
jg
jle
mov
fstpl
lret
adc
mov
dec
xchg
std
mov
add
jno
and
sub
outsl
ror
cmp
pop
push
jnp
fs
cmp
or
imul
push
ss
mov
int
mov
dec
shrb
gs
pop
fwait
pushf
icebp
or
cmpsb
mov
ss
scas
inc
and
repz
outsb
pusha
mov
loope
and
and
xchg
inc
mov
imul
mov
mov
mov
cmc
push
scas
and
aam
adc
mov
roll
sbb
ja
inc
adc
xor
lret
decb
inc
test
sysenter
aad
sbb
rcrb
sbb
xchg
push
mov
mov
je
push
ljmp
jo
xchg
and
push
cmp
mov
iret
and
sbb
cmp
add
dec
pop
inc
roll
xchg
jmp
iret
pusha
rorb
movsb
adc
mov
imul
in
rcrb
mov
outsb
scas
shll
sub
fwait
repnz
mov
repz
sub
mov
pusha
or
aaa
sbb
sti
lock
mov
shr
jbe
in
mov
add
out
scas
jne
stos
pop
in
popa
and
stc
or
imul
icebp
pushf
jle
mov
mov
inc
negb
aam
pusha
mov
push
inc
bnd
xchg
jb
jnp
jmp
push
adc
jle
sub
daa
inc
fisubs
jbe
xor
sbbl
mov
inc
jge
sbb
or
and
pop
fisubs
insb
insl
xor
mov
enter
popf
scas
in
push
or
mov
mov
sbbb
mov
lods
andb
dec
adc
sar
mov
clc
js
loop
or
mov
cld
js
loopne
xchg
pop
inc
aaa
inc
pop
and
xchg
jbe
mov
pop
fs
sub
push
or
popa
movsl
lock
pusha
mov
add
daa
lret
insl
nop
sub
je
lods
fiadds
pop
xchg
pop
das
ss
mov
push
clc
ds
push
into
pushf
fldt
pop
out
jo
or
stos
dec
mov
shrl
movsl
cmp
cmpsl
icebp
arpl
push
add
loopne
inc
frstor
add
sahf
add
ret
sbb
fcoms
sbb
lock
xchg
jl
mov
mov
inc
test
ret
cmp
dec
daa
push
mov
in
insl
sbb
ss
sub
inc
popa
cmp
imul
ret
lcall
leave
xchg
addr16
and
push
je
jb
or
cs
ret
jne
mov
cld
jnp
xchg
pop
std
outsl
or
jno
add
mov
and
js
lea
loopne
pop
test
ss
inc
or
jb
lods
fidivrl
lods
adc
rolb
pop
sbb
je
inc
int
or
arpl
sbb
movsl
push
imull
or
outsl
xorb
rolb
adc
imul
inc
aas
js
sub
stc
mov
mov
dec
ret
test
dec
xor
test
dec
sbb
lods
in
lea
lds
pop
in
push
cmpsl
in
fldenv
mov
outsl
push
or
jns
jmp
inc
push
daa
stos
jg
xchg
mov
call
mov
test
out
push
dec
add
jge
ficomps
sbb
jle
push
cmpsl
das
dec
jae
mov
cmp
jl
subl
push
push
stos
xor
daa
push
push
jmp
dec
stos
loope
enter
aam
mov
mov
test
sbb
lret
sub
stos
mov
push
insb
cmc
lds
mov
inc
insl
std
xchg
std
mov
push
cli
clc
repz
pop
clc
mov
sub
pusha
or
out
adc
mov
cltd
imul
fs
aaa
sub
add
adc
jecxz
test
sub
movsb
and
insl
dec
test
mov
stos
nop
dec
scas
pop
add
aas
adc
xchg
outsl
sub
mov
into
lds
dec
adc
imul
test
sub
push
notb
mov
pusha
cmpsl
fisttpl
inc
mov
aam
xchg
and
test
mov
cli
mov
shl
jl
xchg
jbe
mov
mov
scas
pop
cmp
lret
jmp
shrb
dec
dec
divps
sbb
jmp
mov
sbb
fnsave
add
lea
jae
in
jno
dec
mov
jb
dec
leave
mov
cmp
dec
cmp
call
xchg
pop
sbb
stos
rolb
sub
out
adc
cmpl
ret
sbb
das
adc
and
pop
shrb
mov
loop
in
mov
mov
mov
fiadds
jne
shl
xor
pop
or
sub
lea
mov
adc
jmp
inc
test
pop
xor
push
nop
inc
int
imul
cmc
or
sbb
push
lods
icebp
adc
push
out
dec
aad
pop
rclb
xchg
mov
jle
pushf
cwtl
jns
inc
loope
ret
pusha
push
jl
fadds
and
xor
jge
jle
dec
out
movsl
jno
sbb
sahf
pop
leave
es
sarl
pop
testb
inc
leave
leave
mov
jo
sbb
js
add
mov
shll
mov
xchg
fstl
outsl
push
ds
and
pop
mov
in
cmc
sub
jge
sub
and
fisttpll
sbb
cmp
test
dec
xchg
das
stos
js
adc
cmp
pop
lock
inc
test
jb
mov
xor
jnp
outsl
and
sahf
in
add
orb
mov
lea
jg
add
inc
leave
mov
imul
xchg
push
push
fstpl
rcrl
mov
ret
fidivl
push
sub
and
pop
add
mov
xlat
daa
push
aaa
push
push
xchg
add
cli
adc
jmp
idivl
mov
sub
in
mov
and
lods
pushf
js
rorl
aam
pop
push
mov
lret
cli
out
cmp
dec
xchg
int
adc
mov
dec
in
mov
ljmp
or
push
test
test
out
sbb
sub
pop
and
lret
inc
shl
inc
lret
sub
bound
cmpsb
loopne
ja
sbb
jb
test
cmpl
sbb
add
pop
test
inc
fdivs
xchg
sar
sbb
cmc
or
pop
out
iret
adc
jo
jno
dec
push
mov
aas
cmpsb
inc
sub
addb
sti
adc
cltd
flds
sbb
lock
and
sbb
test
or
xor
jmp
cmp
pop
ret
mov
mov
sti
push
and
jmp
fdivl
jae
aaa
jge
push
and
push
inc
je
pop
sbb
out
inc
push
cmova
sbb
daa
fsubs
movl
jge
sub
ds
ficompl
xchg
sbb
push
stos
stc
nop
frstor
popf
lea
dec
loope
add
jmp
lea
adc
bound
xchg
inc
mov
xor
ret
cwtl
or
cwtl
faddl
inc
sahf
or
clc
popa
mov
fisubrl
ret
in
xor
nop
add
lret
insl
js
sbb
push
xchg
mov
and
rorl
pushf
sub
div
xchg
repnz
lods
inc
sbb
scas
and
push
outsb
popa
adc
mov
jecxz
cmc
and
addr16
cwtl
ljmp
imul
mov
cld
sbb
push
std
stos
mov
xor
add
pop
cltd
mov
cs
fcompl
mov
lret
lret
ja
add
or
and
out
outsl
push
fucomp
jmp
add
sub
ja
or
jnp
inc
and
push
imul
cltd
mov
scas
sub
out
or
sbb
test
ret
jns
stc
in
adc
adc
mov
outsl
addr16
and
jge
add
sbb
inc
das
cltd
and
jae
sbb
sbb
push
ja
movsl
mov
pop
pop
xchg
addl
loopne
sub
out
mov
jnp
jecxz
andb
mov
xor
xchg
in
lea
push
into
cmp
mov
or
int
pushf
xchg
jns
xchg
fisubl
dec
mov
int3
jo
fsubrl
decl
dec
or
mov
sub
lret
mov
imul
cli
and
cmp
inc
xor
push
inc
mov
stc
and
jns
sbb
xlat
dec
pop
into
and
aas
xor
mov
mov
shlb
in
add
in
jecxz
push
pop
or
mov
sahf
cmp
popa
lds
in
into
mov
icebp
ss
cmc
sub
cmp
stos
push
in
adc
dec
push
mov
je
jmp
inc
mov
ja
sub
jmp
mov
adc
xchg
push
fs
xor
sarl
xor
jl
andb
lahf
add
arpl
pop
inc
fwait
lcall
xor
popf
inc
mov
and
xlat
cmp
pop
xorb
sub
pop
aas
mov
call
cmpsb
mov
add
lret
call
icebp
shlb
mov
xchg
pop
xchg
bound
sub
xor
jae
cmp
sbb
stc
popa
jecxz
mov
xor
jnp
inc
scas
push
loopne
loopne
and
call
fwait
mov
test
jle
add
xchg
pusha
out
ss
stos
pop
cmpsl
fcmove
aad
pop
and
inc
cmp
or
mov
or
mov
jne
xchg
pop
js
rcll
pop
test
sbb
xchg
in
imul
icebp
outsl
outsb
nop
and
or
jp
cld
addr16
mov
mov
aas
icebp
sbbb
push
dec
or
cwtl
xlat
addr16
and
push
daa
mov
add
scas
movsl
in
dec
mov
cmp
mov
add
push
fs
outsl
xor
dec
enter
arpl
repz
movsb
push
xlat
outsl
mov
ja
imulb
movsl
loop,pt
dec
dec
aaa
in
int3
sbb
fisubs
test
addr16
scas
insl
hlt
jmp
addr16
sbb
add
and
imul
jmp
sarl
push
out
mov
pushf
es
mov
jb
pop
sbb
jne
ret
mov
cli
in
imul
push
test
jg
pop
pop
pop
rolb
mov
fcom
mov
scas
into
push
xor
out
enter
and
sub
pop
call
stc
mov
jns
mov
aam
icebp
xchg
arpl
out
jo
in
mov
fsub
test
or
es
mov
pusha
ret
adc
sub
lods
adcl
rcrl
mov
cmc
sub
mov
pop
jns
dec
daa
cli
xor
add
fimull
cmpsb
loop
repnz
repz
fsubrl
jecxz
inc
push
lea
cmp
loopne
add
pop
outsb
or
aad
pop
and
mov
adcb
nop
fmull
lock
sbb
adc
aam
loop
jbe
pop
mov
shlb
pop
cmc
push
icebp
mov
jb
push
push
in
mov
sbb
xor
xor
ljmp
xchg
inc
out
sub
sarb
adcb
dec
sbb
adc
test
sub
shrb
icebp
repnz
pop
mov
dec
js
dec
or
pusha
loop
outsb
adc
repnz
sub
or
les
sti
cwtl
call
movsb
stc
adc
unpcklps
je
pop
mov
inc
lea
push
loopne
mov
xchg
scas
les
dec
xchg
mov
cs
adc
insb
and
dec
add
push
inc
lret
test
push
jmp
inc
push
test
imul
mull
cmp
rclb
movsb
push
lods
fiadds
popa
pusha
inc
jno
mov
mov
test
std
dec
pop
out
loope
jne
inc
and
mov
repnz
mov
test
inc
fwait
xchg
dec
sbb
jle
mov
emms
fs
aaa
aam
push
iret
cs
insl
dec
mov
jp
add
repz
lcall
xchg
shll
push
fwait
xor
fisttpl
cmp
lretw
cmp
cmpsl
shr
out
sbb
dec
inc
adc
xchg
mov
mov
add
jg
out
in
adc
xchg
test
ret
repnz
and
popa
lcall
pop
mov
push
out
adc
cmc
andl
mov
andb
push
es
enter
je
mov
shrb
add
pop
je
dec
subb
xor
pop
int3
adc
cmp
mov
in
repnz
rorb
push
cmpsl
loopne
mov
push
jg
int3
pushf
idivl
push
add
ret
cmpsl
or
mov
in
sub
xchg
frstor
jnp
fdivrs
ja
cs
jns
xor
push
test
jns
les
push
mov
sbb
fmuls
adc
daa
dec
aam
pcmpgtb
out
sub
shlb
mov
cwtl
adc
add
insb
filds
lds
enter
movsb
sub
inc
aam
push
lock
add
lret
push
inc
pusha
insl
leave
mov
xor
pop
inc
mov
fists
push
rorb
inc
lds
and
dec
into
inc
je
mov
jne
jge
out
out
xchg
xor
push
mov
cmp
fabs
out
xor
cmp
cmc
sti
fcomi
mov
nop
and
int3
xchg
fwait
adc
sbb
pop
adc
push
mov
icebp
popa
push
iret
repz
dec
xor
repnz
xor
mov
mov
subb
or
enter
and
sbb
mov
mov
jns
nop
inc
cmp
lret
pusha
mov
repz
jg
xor
add
xchg
and
les
fldl
push
mov
rol
mov
rcr
pop
jl
mov
or
pop
inc
mov
jno
cmpsl
add
ss
test
sbb
roll
mov
mov
jae
xchg
lods
and
rcll
hlt
aam
daa
mov
sub
or
ret
loopne
jl
or
jp
rorl
movsl
inc
jg
jl
daa
lret
adc
dec
inc
xchg
orl
xchg
sbb
mov
adc
push
dec
inc
jg
push
aas
mov
test
pushf
cwtl
aam
shr
sti
push
add
in
dec
dec
xchg
adc
mov
je
xor
cld
xor
push
repz
sub
js
test
add
dec
xor
mov
inc
sub
push
jns
xchg
dec
pusha
inc
in
int
pop
repnz
adc
mov
lea
rcll
fmuls
mov
insl
lds
sub
out
pop
pop
gs
mov
pop
das
lods
pop
imul
aaa
sub
aaa
xchg
dec
orb
shrl
mov
ficoml
mov
imul
test
aas
mov
cmpsl
divl
adc
jg
push
out
mov
faddl
movsl
lret
imul
mov
sahf
xchg
cmp
mov
push
jnp
mov
lock
xor
imul
cmp
xor
iret
jg
ss
clc
aaa
lds
cmp
jmp
scas
push
jl
loop
lock
mov
dec
cmc
mov
mov
popf
inc
jnp
push
mov
mov
cmp
sub
pusha
or
test
pop
mov
and
test
aaa
inc
aas
test
push
sbb
lods
mov
or
mov
adc
xor
mov
loope
addl
je
loop
js
xchg
ja
nop
add
andl
sti
fildl
aam
dec
xor
mov
out
adc
mov
sub
aam
xor
sbb
adc
daa
in
xor
lods
lods
inc
sbb
aaa
inc
es
inc
mov
sahf
add
jge
and
sbb
divl
ficomps
ret
adc
xor
jae
mull
dec
add
pushf
sar
fs
inc
cmp
roll
mov
rcll
inc
push
inc
std
pop
lods
sbb
jp
push
jb
sub
addr16
pop
mov
push
aad
enter
push
xor
inc
mov
xorl
push
pop
mov
nop
ret
popf
movsb
cmpsl
inc
jnp
and
push
adc
mov
inc
cs
lods
int3
out
fidivrl
lret
jne
fs
sbb
push
xor
icebp
lahf
mov
mov
lret
and
outsb
jmp
push
hlt
push
mov
scas
cs
movsl
jl
testb
sub
xchg
mov
and
lcall
pop
lret
xor
inc
popa
xchg
xor
adc
ret
icebp
pop
loopne
mov
push
jmp
mov
sti
fisubl
ret
movsl
mov
sbb
cmp
cmp
dec
cmp
pop
push
cmp
jne
nop
movsl
push
cmp
jp
pop
mov
jnp
lcall
mov
sub
cmp
or
gs
add
in
pop
mov
int3
popf
stos
jb
adc
aad
push
sub
pop
mov
rcll
pop
push
push
xor
scas
mov
push
inc
sar
pop
divb
insb
sub
pop
dec
mov
push
push
test
fistpl
in
hlt
mov
nop
add
sbb
xchg
nop
mov
dec
fwait
daa
mov
adc
int
mov
std
cmp
or
mov
mov
mov
lea
mov
dec
push
aam
cmpsb
xor
out
enter
cmp
adc
int3
mov
adc
nop
popa
add
xor
mov
fldt
mov
dec
lcall
call
push
negl
push
push
add
out
inc
xchg
sbb
leave
imull
adc
mov
out
mov
sub
xchg
xchg
or
dec
in
inc
and
jnp
mov
aaa
aam
sbb
out
ljmp
test
in
pop
je
imul
xchg
lcall
decl
in
jae
jae
fnstenv
inc
sub
aam
or
gs
jbe
outsb
push
bound
adc
incb
loopew
inc
mov
lret
and
es
or
ljmp
or
cmpsb
gs
jle
repz
imull
lret
mov
cld
cltd
mov
jecxz
scas
xor
movsl
insb
test
aas
fidivs
gs
ficomps
jbe
or
push
stos
repz
mul
adc
movsb
adc
push
lret
shll
push
push
xlat
inc
add
stos
dec
jmp
add
fcom
fldt
dec
xchg
daa
cltd
push
js
pop
mov
adc
test
sti
and
jbe
mov
call
incb
sbb
xor
outsl
and
jge
mov
mov
subb
mull
inc
std
jne
mov
push
shll
loop
or
mov
pop
loop
cmp
bound
sub
mov
adc
push
xchg
add
inc
adc
cwtl
push
mov
loopne
popa
stos
jmp
and
outsl
mov
dec
in
add
and
jo
inc
add
pop
hlt
adc
push
insb
std
mov
pop
incl
and
ds
movsl
cmp
cmp
cmp
add
arpl
xor
fcmovnb
lea
fldcw
scas
rcr
mov
mov
lret
in
gs
adc
scas
aam
push
insl
aam
jns
sub
push
inc
pusha
xchg
cmp
inc
imul
lea
js
mov
push
adc
cmp
sbbl
dec
lret
fidivs
iret
lods
xbegin
jmp
jne
lfs
mov
fiaddl
paddq
dec
pop
xor
or
lret
fstps
push
cmp
pop
lea
cmp
dec
cmpxchg
inc
xor
mov
movsl
push
inc
bound
cmpsb
in
or
fldt
decl
mov
xor
movsl
or
jno
fs
out
inc
mov
xor
ja
sbb
xor
mov
xor
mov
outsl
dec
jns
fwait
xor
jl
mov
in
ret
rclb
jno
out
fsubrp
lods
or
int
inc
adc
pop
mov
sub
iret
jne
mov
push
daa
fistpll
pop
inc
andb
popl
push
mov
cld
imul
data16
xchg
adc
loopne
push
cmpsb
clc
lea
in
test
testl
mov
add
xchg
cs
inc
loop
push
adc
sbb
into
lahf
stos
je
scas
sbb
popf
out
sbb
movsl
inc
mov
cmp
mov
pop
jb
stc
mov
pop
aam
push
pusha
mov
movl
rcrb
inc
ficompl
push
stc
icebp
mov
dec
jb
push
pop
xchg
imul
sbb
push
mov
jns
jecxz
das
or
xlat
pop
push
es
push
lods
mov
adc
add
shl
and
pop
lcall
push
neg
mov
mov
rolb
insl
lods
testl
data16
ds
xlat
inc
push
xchg
aad
scas
mov
sbb
pop
insb
out
push
in
popa
or
xchg
rcll
clc
jge
int3
movsl
frndint
rolb
dec
pop
loope
mov
sbb
push
scas
test
push
adc
addr16
xchg
stos
dec
add
js
add
jno
adc
jno
ficoms
sub
xor
push
inc
dec
cli
pop
mov
adc
mov
mov
dec
jns
les
cs
aaa
and
inc
mov
popf
mov
push
xchg
ss
enter
xchg
add
and
mov
mov
xor
pop
jecxz
adc
push
pop
xor
dec
xchg
scas
add
dec
mov
repz
mov
rcll
xchg
pop
idivl
lret
pop
shll
push
mov
gs
cld
xchg
sub
push
adc
loope
adc
push
xlat
movsl
fnstsw
je
dec
dec
jp
inc
sub
lret
xlat
and
lods
jb
jg
sbb
cli
lea
push
leave
or
jl
loopne
repnz
insb
iret
fcompl
ror
decb
out
cmp
outsb
addr16
aaa
adc
pusha
out
push
push
xor
add
dec
push
ljmp
lret
ljmp
dec
cwtl
jmp
ds
fwait
cmp
ret
pop
les
jb
cli
cmp
dec
jns
cld
mov
mov
ljmp
shlb
das
sub
mov
insl
ja
cmp
push
cmp
sti
push
outsl
movsb
gs
shlb
and
pop
out
jmp
jecxz
push
sbb
dec
fs
adc
pop
cmp
out
xor
mov
rcrl
xor
lock
in
sarb
add
cmpsl
and
js
cwtl
mov
test
pushf
jg
pop
out
sbb
sbb
setnp
sub
xor
cmc
mov
dec
xchg
adc
xor
loopne
adc
xchg
pop
addr16
mov
and
pushf
insl
push
pop
arpl
dec
pop
inc
xlat
hlt
dec
scas
pop
dec
pop
sarl
pop
inc
in
or
push
fwait
mov
mov
fabs
sbbl
cmp
outsb
jne
icebp
sahf
inc
out
jmp
sub
sub
xor
jle
cmpsl
ss
mov
movsl
pop
and
imul
cmpb
out
iret
mov
mov
xor
sbb
lret
inc
sub
ror
add
rclb
xchg
fcmovne
pop
mov
addl
sar
or
ja
or
sub
repnz
rcrl
cld
sahf
rolb
add
xor
daa
in
mov
inc
cmp
jae
or
push
xchg
es
imul
xchg
pop
or
cld
pop
fs
or
pop
insl
in
sub
pop
enter
push
mov
in
or
cmp
addl
xorb
push
outsl
xlat
xchg
dec
mov
shrl
mull
push
test
xchg
push
rolb
and
enter
inc
les
push
jecxz
lahf
scas
or
inc
andb
scas
jp
adc
repnz
ffree
lea
enter
aas
cmp
mov
mov
sbb
adc
inc
sub
and
loope
xor
push
push
push
popf
fdivl
mov
adc
xchg
or
imul
mov
outsb
mov
xor
clc
mov
jno
js
out
sarl
sub
add
andl
rorl
dec
xor
dec
scas
dec
daa
xchg
es
fsubrl
das
sub
push
in
dec
push
lds
mov
icebp
xchg
xchg
dec
adc
push
dec
loopne
jns
xchg
jns
jbe
pusha
or
add
imul
lock
cwtl
negl
xor
mov
fadds
push
xor
or
imul
jge
or
jl
roll
jns
sbb
xor
addl
pop
dec
cmpsb
rorb
lods
cmp
pop
daa
cmp
sti
bound
mov
rcll
icebp
lock
mov
jecxz
dec
add
mov
mov
lods
and
or
mov
xchg
push
mov
imul
lahf
movsb
sbb
and
push
mov
or
mov
jne
por
push
mov
inc
out
or
je
movsb
fcompl
fwait
rol
jle
or
cmp
aas
es
iret
sbb
jns
pop
mov
cmp
and
xor
add
rcr
outsl
adc
mov
inc
dec
ret
sub
test
lods
inc
cmp
lret
enter
imul
push
jae
ja
addr16
les
cmp
orb
cmp
mov
xchg
lods
adcb
and
std
xor
dec
push
lret
dec
clc
mov
sahf
jae
repz
leave
jl
jmp
sub
push
or
sub
sbb
fimuls
mov
sbb
je
dec
pop
je
dec
aam
mov
mov
bound
cmp
cmp
and
mov
push
sbb
enter
and
push
xor
inc
mov
jmp
inc
jo
into
mov
adc
into
insb
imulb
push
das
push
and
addl
test
sub
sti
lahf
mov
pop
jl
and
add
gs
add
lods
mov
js
push
pop
xor
and
bound
push
cmp
fidivl
sbb
inc
push
rcrb
mov
xchg
mov
rclb
lea
fwait
mov
cwtl
in
sbb
jmp
ja
xchg
push
aas
in
hlt
enter
xor
icebp
test
cmp
repz
pop
lahf
mov
rcrb
dec
call
xchg
jmp
js
jecxz
jmp
mov
dec
movsb
add
lret
mov
jmp
jle
pop
pop
rolb
out
rolb
lea
xor
sub
jbe
mov
or
pop
test
gs
mov
ret
sahf
cmpl
in
sbb
repnz
push
popf
popf
cmp
iret
fadds
dec
aas
mov
dec
mov
jnp
ss
mov
inc
cli
xchg
or
jl
or
pop
mov
inc
into
pop
sub
xor
push
push
notb
xor
icebp
fs
divl
test
push
call
mov
push
sub
xlat
aad
pop
jl
imul
xlat
xchg
out
into
jp
jbe
test
push
lods
sti
cmp
ret
mov
cmpsb
add
push
fs
xor
das
sbb
lea
mov
jmp
mov
or
sub
rorl
das
movsb
aam
aam
xchg
std
pop
sub
jns,pn
cli
sub
cmpsl
xchg
aam
add
xchg
ret
test
lds
lods
inc
xchg
rol
lock
into
and
cmpl
rcrl
sbb
sbb
or
shr
add
leave
and
iret
lret
movsl
push
lret
inc
cli
fldl
testb
jns
and
mov
mov
mov
xchg
fsubrl
imul
in
cmp
sbb
or
bound
outsl
rcl
pusha
push
xorl
adc
sub
adcb
ret
hlt
and
inc
es
ds
push
pop
xchg
lahf
fdivrs
inc
push
adc
aas
cmp
stc
dec
add
ds
xchg
pop
add
mov
add
mov
sbb
lret
cli
mov
sub
dec
inc
popf
mov
jae
inc
mov
subb
icebp
aam
cmp
daa
and
cltd
pop
mov
cmp
adc
stos
or
in
mov
mov
in
repz
xchg
adc
call
jb
out
fisttps
repnz
xlat
fistl
in
loope
clc
adc
pop
ja
inc
addr16
daa
sti
push
or
negl
mov
xchg
inc
xchg
fcmovnbe
add
push
popf
mov
mov
jl
ret
sub
inc
push
pushf
ss
pusha
cltd
in
cmp
out
push
cwtl
xchg
pop
movsl
sarb
es
sub
mov
lcall
pushl
push
push
lahf
sahf
jo
mov
adc
ljmp
mov
mov
dec
push
rcr
push
mov
lods
notb
addb
inc
jb
cmp
sbb
cmpsl
and
inc
sbb
je
mov
mov
lret
jg
adc
decb
ds
push
movsb
addb
pop
inc
decl
sub
pop
out
mov
lods
mov
cwtl
stos
sbb
jnp
jne
fistl
in
icebp
scas
push
jle
bound
inc
adc
sbb
sahf
mov
cltd
sub
aam
scas
mul
push
out
push
iret
cmc
in
adc
mov
inc
xchg
movsl
push
lcall
shrl
loope
lahf
and
mov
imul
xchg
testl
cs
cmp
add
shrb
or
adc
in
xchg
sub
jge
andl
adc
data16
inc
pop
std
ds
fsts
les
outsl
pusha
cmp
add
pop
insl
or
xchg
mov
inc
xchg
lret
sti
xchg
inc
pop
clc
shlb
mov
iret
adc
xchg
jbe
cmpsl
out
jb
xor
cs
into
hlt
and
jne
mov
lock
or
ret
icebp
xor
dec
rcl
fisttpl
cmp
sub
int3
dec
push
pop
xchg
jecxz
mov
jp
adc
ljmp
push
lods
and
jp
mov
xchg
jo
mov
movsl
fdivs
pop
imul
dec
or
cld
je
into
inc
cs
shrb
jb
rorl
in
jg
jo
lods
jmp
add
mull
stc
jle
push
cmp
sub
sub
popa
sbb
xchg
fstpt
into
add
add
mov
out
push
inc
rorb
fimuls
cwtl
mov
ds
aaa
out
push
jecxz
or
jae
mov
inc
loope
call
ja
sbb
add
test
inc
lea
xor
sbb
fmul
cs
or
pop
sbb
xchg
xchg
cmpsb
mov
imul
loop
ret
loop
dec
neg
addl
inc
insb
and
in
sub
sub
mov
lret
push
aaa
std
pop
xchg
iret
fxch
mov
pop
ljmp
idiv
jmp
gs
cmc
stos
push
pop
ret
roll
imul
bound
dec
jae
inc
cli
ret
pusha
pop
xor
insb
sbbb
adc
and
andl
cmp
pop
pop
xlat
out
jne
jle
and
adc
push
cmpsb
inc
std
pop
jnp
movsb
cmpsl
repnz
pop
dec
mov
es
xchg
sbb
stos
jle
std
dec
inc
xlat
jo
and
pushf
call
sbb
lds
jg
mov
sub
xchg
fsubp
mov
mov
xor
subl
pop
stos
fnstenv
outsl
stc
pop
push
sub
push
mov
sbb
sti
rcrl
dec
jg
insb
pop
rdmsr
or
push
mov
out
mov
in
int
fimull
jne
sti
imul
sahf
insb
repz
test
orl
mov
sbb
jno
mov
push
dec
jb
stc
enter
pop
ret
fsubp
fimull
fwait
cwtl
cmp
add
xchg
lds
mov
xor
push
dec
adc
fldenv
xchg
and
push
out
sbb
loop
add
mov
aad
ljmp
inc
and
dec
pop
and
fadd
xor
or
out
or
jns
ret
outsb
sub
add
jmp
mov
and
sub
jge
pop
mov
lock
inc
jnp
iret
addr16
nop
sub
in
jmp
mov
insl
jnp
adc
sub
push
lods
movsb
movsl
insl
jmp
leave
xlat
xor
pop
and
and
test
xchg
rol
test
ds
and
mov
inc
lds
and
jno
xor
shrl
cmp
push
xlat
sbb
rcrl
rorl
fdivrs
mov
bound
cmp
cmpsl
jns
or
xor
leave
insb
cmc
rcrb
mov
dec
sub
les
push
sbb
mov
mov
stos
jbe
inc
sbbl
sub
inc
cmp
call
sti
inc
pop
push
pop
xor
mov
lahf
mov
dec
shlb
iret
gs
or
mov
push
aas
in
stos
gs
cmp
les
les
dec
xor
stos
dec
xor
sbb
inc
and
lock
xchg
xorb
pushf
and
dec
mov
rclb
and
jns
mov
sub
xchg
cli
pop
push
iret
in
xor
mov
inc
fnsave
pop
lret
add
push
es
xchg
rcrb
fcoms
push
adc
leave
jecxz
enter
jnp
pushl
push
lods
roll
push
sbb
cmp
in
mov
push
add
mov
or
sub
push
pop
adcb
mov
mov
notb
sahf
cld
daa
mov
mov
outsl
cmp
xor
movsb
xor
jno
cmpsb
push
cld
data16
fdivr
xlat
cmp
cmp
inc
test
mov
and
pop
xchg
dec
and
dec
xchg
sbb
add
daa
test
lods
test
sbb
gs
or
fldl
xor
daa
dec
movsl
or
arpl
call
pop
xchg
adc
add
or
cmp
insb
pop
jbe
fwait
mov
outsl
pop
mov
sub
mov
or
clc
imul
loopne
js
loopne
outsb
cmp
mov
mov
dec
dec
sbb
sbb
lret
fiadds
mov
inc
cmp
xor
add
movsb
add
xchg
out
and
adc
sub
call
mov
sub
sub
shll
and
addb
imulb
mov
cld
mov
movsl
inc
aas
dec
jp
sbb
dec
jecxz
pop
push
pop
pop
push
lahf
out
add
sub
scas
xchg
aaa
mov
add
jmp
decl
push
mov
sub
sbb
or
mov
mov
mov
fdivrl
rorl
andl
inc
lret
sbb
jne
jo
jle
in
lods
mov
xchg
popf
cmc
cmp
xchg
aaa
pop
mov
pop
xchg
push
mov
fwait
mov
sbb
fwait
jo
push
sub
inc
and
test
pusha
xor
cmp
daa
ret
mov
test
negl
idiv
xor
or
push
repz
inc
mov
add
push
das
je
inc
imul
sbb
pop
jnp
mov
notb
push
adc
inc
repnz
mov
adc
push
pusha
call
and
sbb
mov
mov
adc
inc
orb
jne
popa
jmp
je
sub
imul
jnp
mov
mov
rorl
or
xor
mov
scas
mov
pop
cmpsl
movsb
mov
mov
mov
mov
ret
pop
inc
repnz
sub
addr16
sub
dec
adc
jo
ret
or
fucomip
movsb
xor
jge
mov
sbb
lods
adc
pop
xchg
adc
push
xorl
push
xchg
not
outsl
sub
sub
cmc
cmp
add
mov
mov
dec
xchg
push
add
and
lods
xchg
hlt
jbe
loopne
or
add
lods
mov
xlat
les
fldenv
cmp
js
or
inc
jo
jbe
xor
insb
arpl
cmpsl
inc
aas
jnp
ja
into
adc
pop
pushf
out
ljmp
add
js
push
push
jle
pop
inc
orb
mov
bound
push
cmp
negl
mov
fimuls
xchg
lahf
mov
adc
cld
mov
arpl
sahf
jnp
sbb
inc
and
loopne
push
fnstcw
add
imul
inc
push
xchg
adc
nop
adc
stos
push
out
cwtl
in
dec
adc
sub
fistl
cmp
push
in
pusha
mov
in
stc
addb
dec
sub
mov
sub
out
push
icebp
clc
xchg
pop
negb
outsb
inc
mov
pusha
cltd
cmc
aas
stc
mov
lea
addr16
outsl
test
std
xor
bound
fstpl
and
mov
add
fsts
fidivrl
jg
xor
arpl
clc
xor
xchg
mov
mov
gs
aam
push
cmpb
and
sar
std
cmpsl
and
and
pop
das
lahf
test
test
add
inc
cli
mov
insb
add
sbb
mov
and
pop
fcomps
or
pop
ss
add
mov
cmp
out
pop
pop
mov
mov
add
jmp
add
dec
mov
push
sbb
mov
and
lret
subb
push
adc
push
lret
incl
dec
in
xchg
cld
pop
movsb
repz
dec
lods
add
inc
into
dec
ja
ret
inc
data16
sub
mov
add
fstps
xor
xor
adc
sub
cmpsb
iret
xchg
mov
fsub
mov
mov
lds
cmpsb
pushf
cmp
cmp
inc
outsl
pop
jo
loopne
pop
cmpsb
inc
sub
mov
stos
ss
pop
mov
push
popf
daa
jno
call
pop
loop
fmul
clc
mov
cmc
loope
xchg
enter
and
dec
enter
mov
mov
fstpl
ss
mov
push
movsl
jne
add
sbb
mov
loope
add
int3
xchg
fisubl
jle
psubusb
xor
lods
pop
aad
jb
cmp
dec
mov
or
xor
lock
jo
inc
adcb
jp
test
jp
int
xor
test
pop
addr16
lock
adc
push
or
lcall
es
pop
mov
mov
arpl
mov
and
fldcw
xlat
scas
xorl
outsb
aaa
loopne
iret
gs
dec
std
sub
inc
sbbb
push
cmp
jg
or
adc
test
mov
cwtl
fwait
and
inc
add
xchg
xchg
jmp
push
push
mov
jl
pop
xchg
xchg
dec
shll
jae
inc
shld
outsl
rorl
cmpsb
iret
into
xor
cmp
and
sub
bnd
push
orl
push
ds
jnp
iret
aad
lods
mov
dec
mov
ret
inc
std
add
in
icebp
iret
mov
fwait
push
jg
or
adc
push
std
mov
xor
mov
roll
stos
movzwl
jmp
adc
aaa
push
dec
fidivl
in
adc
add
lcall
fbld
lahf
out
rclb
and
lcall
push
jmp
js
dec
adc
int
inc
mov
std
jp
fildl
mov
lock
xchg
cmp
xor
dec
shll
out
int3
icebp
mov
and
ror
popf
pop
jne
xlat
out
dec
push
adc
fisttps
shrl
add
pop
into
cmp
test
ret
outsb
insb
and
pop
hlt
mov
sub
fidivs
ret
push
addl
cmp
push
mov
hlt
cltd
hlt
leave
mov
outsb
or
pop
adc
pusha
push
out
iret
subl
ja
xor
aam
push
rcl
lods
shrl
imul
xor
ja
filds
insl
repnz
sbb
insb
pop
pop
je
ja
dec
lds
pop
and
insl
mov
inc
push
jmp
push
aas
xlat
adc
ljmp
pop
in
imul
sub
inc
outsb
or
pop
push
add
lods
test
inc
xchg
stos
sbb
inc
push
lahf
pusha
iret
pusha
cwtl
fidivl
rorl
cltd
stc
lods
pop
mov
cmp
cmp
adcb
pop
mov
insb
dec
icebp
leave
sti
lahf
out
adc
mov
mov
or
stos
ljmp
jo
push
jnp
add
enter
fwait
sti
jg
cmp
add
push
cmp
cld
pusha
mov
push
mov
in
and
jb
mov
cmc
lods
outsl
call
mov
mov
imul
push
lcall
add
rcll
jmp
fs
xchg
addr16
cmpsl
sbb
ret
fcomp
aad
xor
imul
xchg
add
add
fisubrl
stc
push
xchg
nop
stc
dec
adc
xlat
cmpb
cwtl
add
out
and
pop
rol
pop
xor
sub
shll
cld
sbb
mov
xchg
sahf
aad
pop
cmc
mov
mov
ds
call
ror
mov
pop
cmpsb
lahf
jne
adc
jge
pop
insl
gs
and
imulb
xchg
pushf
pop
xor
fsub
fildll
xlat
pop
mov
mov
xchg
sub
loope
loope
std
push
jle
sbb
adc
leave
pop
cmp
pop
sbb
push
loope
mov
xor
stos
mov
test
inc
push
mulb
repnz
fwait
mov
jne
sbb
pop
pop
fsts
aaa
mov
sbb
pop
imul
push
cmpsl
aam
adc
rep
adc
insl
inc
mov
and
sbb
jnp
and
mov
sbb
arpl
sbb
adc
add
jns
dec
and
jg
push
adc
push
inc
lret
pop
xor
add
fsubl
push
ficompl
fsts
adc
shll
imul
mov
jg
mov
xchg
out
shlb
sbb
ficoms
addr16
int3
and
shl
cs
daa
fidivs
loop
add
fucomip
pop
mov
gs
xlat
mov
pop
jne
xor
xchg
adc
subb
mov
cld
pusha
mov
sub
xor
subb
cltd
decl
xorps
xor
xor
xor
bound
movsl
mov
loope
jne
xchg
stc
push
movl
dec
or
mov
xchg
inc
das
and
repnz
repz
insl
inc
pop
cmp
enter
out
inc
in
cltd
cmp
push
out
xchg
lahf
adc
push
fs
pop
stos
add
jmp
icebp
enter
int
aad
pop
insl
in
inc
push
push
mov
push
mov
xlat
mov
xchg
mov
add
fidivrs
iret
leave
push
lahf
or
xchg
jo
cmpsb
test
dec
xchg
xchg
xor
add
inc
test
add
xchg
aas
inc
fs
push
cmp
sub
or
mov
xlat
repz
sub
add
adc
insb
inc
push
gs
inc
sahf
mov
add
out
fisubl
iret
pop
std
das
popa
in
aam
cmpsl
sbb
out
xchg
mov
or
je
out
in
push
push
or
xor
jnp
in
pop
clc
dec
lods
and
add
test
mov
mov
js
ficompl
mov
or
stc
xchg
sahf
and
xchg
data16
out
mov
add
inc
xchg
lds
push
mov
push
test
push
mov
lret
sub
push
sub
outsl
push
pop
push
push
jmp
dec
mov
pop
bswap
in
and
xor
cmp
lods
adc
pop
push
xchg
sub
scas
pushw
fsubl
mov
movsl
in
adc
mov
push
sub
fadds
and
mov
mov
fs
or
add
jb
js
test
push
adc
pop
gs
sbb
movsl
das
adc
xor
adc
or
cmc
ljmp
pop
test
or
push
lret
aaa
cs
addr16
int
cltd
or
and
lcall
test
or
and
add
frstor
inc
loope
mov
aad
std
repz
int3
movsl
daa
mov
cmpsl
arpl
push
jge
loopne
sub
jb
sti
mov
adc
add
jmp
push
stc
mov
mov
lcall
add
pop
movsl
loop
mov
sbb
dec
scas
insl
mov
inc
dec
fidivs
ja
dec
arpl
xchg
insl
cmpsl
pop
mov
jae
xlat
add
clc
insb
popa
adc
pop
imul
mov
fidivl
loope
pop
adc
lods
xor
xor
fistps
nop
ja
xchg
pop
jnp
ja
mov
inc
mov
loopne
jbe
ds
push
das
test
aas
addl
jae
es
inc
xor
cmp
fbld
xchg
mov
aas
shl
jo
add
lahf
pop
mov
insl
jge,pn
out
and
fwait
cmp
xor
cmpsl
and
lea
jge
jmp
sub
adc
repnz
or
rcl
shlb
loope
jge
je
imul
in
in
inc
mov
sub
pop
test
lods
dec
pusha
mov
adc
jge
mov
cmpsl
jae
lods
sub
xor
les
jmp
push
pop
push
add
and
rorl
push
mov
ss
test
xchg
enter
mov
mov
dec
xchg
out
std
leave
mov
xor
jne
push
mov
pop
xchg
popa
mov
dec
cmp
push
clc
fstps
les
jmp
xchg
xor
dec
jb
scas
std
inc
pop
and
adc
mov
mov
cmp
lods
mov
imul
xor
push
ljmp
inc
dec
cmp
test
cmp
dec
scas
fs
lock
arpl
mov
mov
ja
or
sahf
rclb
sbb
jne
mov
imul
in
or
push
test
leave
aaa
nop
sarb
xchg
repnz
sub
stos
jl
ds
loopne
sbb
jmp
movhps
fistl
lods
out
jecxz
jmp
add
add
mov
mov
cmpsl
je
jo
dec
mov
and
sbb
sbb
lock
push
outsb
inc
mov
or
popa
insb
es
mov
cld
repnz
pop
push
fwait
xchg
clc
lods
cmp
push
xchg
roll
cld
mov
ja
clc
sahf
xor
lret
cmp
dec
xor
or
pop
sbb
sbb
enter
sub
test
fcom
dec
imul
ds
test
jbe
dec
jnp
dec
es
je
push
pop
xor
sub
inc
jge
cmp
out
scas
nop
ljmp
lret
sbb
into
mov
push
pop
inc
ret
imul
add
insb
lea
bnd
es
xchg
or
add
and
push
add
add
mov
sbb
dec
imul
or
gs
pop
jge
jg
push
fisttpl
add
fstps
cmc
xor
cmp
push
mov
ret
pop
adc
dec
fimuls
inc
aas
mov
lahf
in
nop
fmull
add
sahf
pop
enter
nop
jne
and
push
movsb
outsl
rcl
add
xchg
cmpl
jmp
pop
push
inc
bnd
pop
or
cmp
mov
fs
rol
or
pop
out
dec
mov
sti
or
dec
popf
test
jns
sti
sbb
test
or
cmp
xor
adc
mov
stc
or
rcl
mov
xchg
or
inc
ds
sbb
les
popa
add
mov
adc
insb
insb
mov
pop
lods
aam
stos
popa
das
ja
jmp
bnd
mov
sub
cltd
jp
jo
xor
cmp
dec
dec
mov
int
daa
in
dec
rclb
scas
xchg
insl
push
adc
call
movsb
xchg
sub
mov
cmc
test
hlt
loop
dec
mov
xor
test
pop
mov
hlt
adc
in
sub
sbb
add
fadd
movb
push
sarb
aam
movsb
fs
push
fcom
add
out
jecxz
fldt
jnp
int
or
roll
and
imul
mov
loop
stos
push
sbb
lea
sbb
sbb
insb
mov
test
xchg
repz
jo
lock
xchg
cmp
shlb
or
cli
repz
aaa
cmpsb
loopne
mov
push
xor
fldcw
xor
and
cwtl
rclb
adc
cmpl
sbb
mov
sbb
mov
leave
adc
cmp
gs
scas
aad
cmp
pop
add
popa
dec
rcrb
shll
inc
mov
insb
mov
dec
add
xchg
fdivrp
stc
in
jae
sti
jge
and
xchg
lahf
jge
adc
dec
cmc
inc
lods
dec
mov
inc
cmp
dec
adc
aad
int3
mov
fcoml
mov
sbb
dec
adc
loope
ficoms
repz
and
jae
and
jmp
sub
sbb
xor
test
adc
fisubrs
fucom
testb
jl
aad
and
xor
stc
rclb
mov
mov
call
fwait
xchg
mov
ficoml
dec
cltd
lods
lcallw
cmp
sub
jp
xchg
aam
mov
pop
xchg
xor
pop
and
into
shrl
xor
xor
xchg
adc
jg
adc
insb
icebp
push
xchg
adc
inc
jg
push
jp
lcall
enter
cltd
dec
into
inc
popa
fsubrs
je
or
insb
push
inc
shr
cld
outsl
popa
inc
lds
pop
cld
cwtl
xchg
jmp
mov
movsb
fistpl
add
cmp
in
insl
sub
shrb
pushf
icebp
mov
lods
add
fldl
dec
loop
rclb
and
xchg
jle
mov
or
push
mov
push
popa
lcall
fdivrl
fistl
mov
pop
sub
out
imul
inc
jle
and
jno
lahf
add
cmpsb
mov
xor
scas
lcall
push
xchg
pop
lahf
cmc
mov
add
dec
outsb
push
icebp
xor
mov
fcmovu
adc
sub
sub
imul
adc
cmp
shll
out
sbb
insb
adc
arpl
sbb
mov
sub
sub
push
xchg
movsl
dec
test
xchg
jmp
push
cwtl
pusha
int3
sarb
cmpsb
shrl
sbb
jb
cmp
add
pusha
outsl
mov
push
int
hlt
out
and
sbb
dec
incb
mov
push
fsubp
xor
pushf
in
subb
aad
jge
dec
mov
sti
inc
adc
add
fiaddl
sub
imul
push
mov
lods
mov
fisubl
icebp
mov
mov
mov
mov
jo
shll
mov
ds
les
mov
popf
add
jecxz
mov
mov
cmp
nop
rclb
push
inc
aas
xchg
mov
adc
push
aaa
or
ds
int
add
into
mov
sbb
mov
sbb
cmp
bound
loopne
out
sub
cmpsl
jnp
fwait
or
mov
mov
imul
mov
aad
jp
mov
mov
jecxz
insb
mov
scas
sbb
rorl
repnz
ljmp
mov
or
in
sub
adc
push
lods
jno
fildl
out
inc
hlt
push
fwait
sbb
inc
pop
stos
lret
orl
add
xchg
mov
xchg
dec
dec
hlt
push
mov
mov
add
xor
push
cmp
pop
jmp
mull
aaa
mov
and
int3
and
std
repz
or
aam
test
rclb
fistl
and
push
add
fildl
cmp
and
mov
icebp
push
inc
mov
and
fcoms
jne
dec
fldcw
push
jns
inc
jnp
imul
in
nop
mov
jbe
clc
lahf
jge
test
fdivrs
jle
jp
ret
fsubrl
or
xchg
push
xlat
jl
out
dec
mov
cmp
xchg
adc
mov
jmp
leave
ljmp
pop
out
outsb
xor
mov
pop
je
ret
sbb
popf
mov
fwait
adc
shr
and
pushf
fidivrl
push
out
lea
popf
sti
sahf
push
roll
subl
fisttpll
jle
mov
pop
jle
mov
cmp
xor
sbb
cmpsl
sarb
testb
jae
in
add
sarl
push
xchg
or
push
outsb
mov
push
push
push
rorl
mov
adc
pop
inc
hlt
insb
lock
je
cmc
adc
and
cmp
lods
fidivl
jo
xor
lret
xchg
cmp
out
mov
jne
scas
push
push
cltd
pushf
mov
int
mov
adc
mov
and
daa
or
cmp
ret
mov
jg
push
push
lock
push
cmp
sub
cs
test
mov
ret
sbb
jno
add
enter
addr16
xchg
icebp
push
mov
inc
pop
jo
iret
jl
jns
jo
aaa
jl
xor
xor
jecxz
loope
and
es
fmuls
pop
cmp
push
insl
add
xchg
icebp
pop
aas
adcl
cmp
mov
enter
sbb
and
out
pop
test
xor
fmul
pop
mulb
bound
aaa
test
loope
pop
fmulp
sbb
jno
test
mov
lock
and
cmpsb
movsl
jmp
cmpsl
mov
out
or
popf
mov
push
inc
pushl
adc
stos
imull
cmp
ds
or
cmp
sti
dec
imul
aas
out
push
add
adc
ret
outsl
or
mov
mov
jmp
jbe
test
or
and
sub
scas
push
jle
inc
lret
fcoms
int
xor
cmp
sti
sti
fsubp
or
adcl
cld
jl
stos
sarl
out
or
test
fwait
xchg
fs
ljmp
cld
cmpb
std
fists
gs
pop
xlat
sbb
add
adc
out
pop
lahf
xchg
lea
clc
and
cld
nop
dec
or
inc
sub
cwtl
push
fs
pop
ja
arpl
inc
jbe
mov
and
aaa
push
xchg
jle
jae
lret
and
add
xor
mov
filds
stc
arpl
cwtl
xchg
xchg
add
xchg
popf
jb
leave
js
dec
add
pop
mov
xor
popa
and
clc
add
arpl
xor
xchg
add
jo
jl
testb
fs
or
pop
pusha
or
ret
fstpl
jb
mov
aad
shlb
jmp
hlt
loopne
inc
mov
push
cmp
ljmp
adc
xor
xchg
aam
adcb
mov
mov
pop
fiaddl
test
ss
outsb
js
enter
movsl
add
xor
cmpsl
mov
int
cli
scas
idiv
aas
pop
xor
cltd
out
inc
rclb
daa
sub
jge
in
test
sarl
fs
shll
xchg
jne
inc
mov
lret
pop
test
test
and
adc
jae
insb
mov
xchg
jmp
mov
sbb
and
inc
leave
inc
pop
aad
sub
push
sub
mov
fwait
jae
xlat
aaa
adc
std
clc
or
clc
scas
jbe
fndisi(8087
mov
sbb
cltd
imul
inc
inc
test
ja
mov
in
add
fidivrs
mov
out
insb
jl
cmpsb
jl
mov
fbld
nop
int3
pop
push
add
data16
xchg
movsb
or
sbb
std
add
nop
js
adc
xchg
sahf
clc
sub
inc
or
lds
cmpsb
ret
cmp
in
mov
mov
sbb
inc
xchg
insb
lret
mov
pop
cwtl
cmpsb
xlat
in
sbb
mov
push
filds
sub
inc
jmp
repz
cs
aaa
out
out
add
fidivrl
data16
jns
mov
hlt
inc
cmp
movsl
sti
imul
push
mov
andb
push
pop
arpl
adc
push
xor
sahf
dec
movsl
sti
push
test
mov
fnsave
lcall
jl
je
call
mov
sub
movsb
or
jp
aam
dec
ljmp
adc
add
loop
lret
fcmovnbe
cs
jmp
loope
xchg
repnz
je
add
insb
inc
fldcw
test
stos
lret
adc
jle
sbb
add
mov
inc
mov
mov
pop
sub
sti
inc
fsubrl
into
and
sbb
jp
mov
xchg
jmp
push
add
mov
mov
xchg
in
add
call
add
mov
iret
xchg
cmp
dec
cmp
or
sbb
jbe
icebp
loop
xor
enter
jae
inc
lret
adc
jmp
fimuls
jge
pop
mov
cld
in
popa
cmpsl
xor
push
pop
dec
or
mov
in
sbb
xor
jge
dec
xchg
mov
stos
jb
cmp
movsb
loope,pn
or
out
rorb
into
jo
adc
cmp
dec
cmp
hlt
xchg
cmpsl
sub
rcrb
adc
lods
repnz
rcll
psubb
pop
int3
cmpsl
sbb
pushf
sub
fmuls
sarb
aam
addr16
xor
jbe
dec
jge
add
scas
adc
addr16
pop
or
add
adc
mov
loopne
sbb
xor
dec
enter
xchg
sbb
adc
mov
aad
data16
and
test
pop
adc
inc
inc
fwait
xor
xchg
in
outsl
testb
adc
test
mov
push
fistpll
xor
lret
push
lock
push
shll
sahf
lret
adc
jp
push
ss
lcall
sub
inc
repnz
mov
aad
inc
jg
and
adc
shr
out
jle
push
subl
mov
stc
int
cmp
push
sbb
dec
sahf
cs
imul
iret
ret
js
fsubl
xlat
cwtl
dec
shlb
je
or
fadd
cmp
xor
roll
mov
pop
in
stc
pushf
pop
or
inc
mulb
jbe
divl
inc
icebp
sarl
std
mov
imull
xchg
jbe
or
daa
nop
mov
ljmp
sub
xchg
in
push
push
add
repnz
cs
cmp
dec
adc
pop
mov
repnz
ror
mov
fidivs
pop
mov
or
aas
dec
das
cmp
cmp
das
sbb
outsb
pop
sub
cmp
push
out
pop
leave
hlt
push
pop
in
jne
and
sub
imul
fsts
imul
lods
sub
out
add
mov
mov
xor
pop
pushl
lahf
mov
and
sbb
mov
insb
push
mov
xlat
in
mov
outsl
or
pop
mov
int
dec
cmp
out
insl
adc
push
inc
xor
aad
pusha
fnstcw
cmc
icebp
dec
jge
sub
rorb
enter
mov
cwtl
negb
or
mov
arpl
dec
push
xchg
idivl
lcall
je
sarl
ror
xor
xchg
rcrb
and
in
cwtl
into
dec
jmp
jnp
les
inc
shrl
add
cmc
outsb
add
or
test
inc
fcoml
add
mov
pop
xor
cmp
fmul
ret
adc
adc
pop
into
enter
inc
test
lods
jmp
fnstsw
push
mov
in
xlat
ja
or
jae
jecxz
push
iret
dec
or
sbb
fwait
pop
sub
inc
lret
leave
push
out
imul
shr
fdivl
or
shlb
mov
movsb
xor
inc
lods
scas
test
jmp
leave
loopne
mov
or
insb
jmp
std
dec
adc
xchg
or
xchg
cmpsb
loopne
pop
shl
cmp
jb
push
cmp
insb
add
jnp
xor
mov
movl
sbb
and
repz
je
daa
xchg
or
mov
jg
cmp
push
xlat
mov
xor
loop
mov
mov
repnz
cli
mov
test
fidivrs
push
mov
inc
mov
fldt
jnp
add
pushf
xor
daa
mov
daa
stos
push
dec
int3
jno
jae
inc
lret
or
push
cwtl
or
sub
aam
outsb
lret
xchg
push
xchg
addr16
outsb
ljmp
or
arpl
sub
push
jl
sub
aad
jbe
hlt
movl
in
mov
repnz
cmp
fwait
mov
sahf
loope
loop
stos
movb
inc
jnp
mov
fucomi
aam
out
dec
int3
jmp
out
cmpsb
xchg
push
movsl
xchg
test
loope
pop
dec
cmp
fidivrs
clc
test
adc
inc
lahf
mov
add
mov
mov
popf
test
push
lods
fldl
and
ds
mov
push
adc
in
push
xchg
dec
lock
fmuls
cmp
fmul
imul
sbb
cmp
jmp
mov
call
sar
jle
mov
es
pop
fcompl
adc
jns
fwait
xor
lret
mov
ret
mov
mov
sbb
mov
cmc
inc
lcall
sbbb
or
and
xchg
aam
testl
cli
jl
lock
testb
repz
cmp
imul
int
adc
dec
mov
or
jne,pt
arpl
nop
jecxz
mov
mov
and
lcall
inc
in
stos
sub
lahf
addr16
mov
andb
enter
repz
mov
sub
sarb
cwtl
pop
les
mov
hlt
cwtl
pop
cmp
or
pop
fs
pop
mov
dec
fidivl
sbb
lods
push
sbb
mov
sbb
dec
xor
push
mov
orb
loope
sub
cmpsb
ljmp
push
insb
pop
add
sqrtps
mov
cltd
push
and
or
in
and
mov
cmp
in
loope
dec
pushf
fwait
xor
int3
jno
cmpsl
fsin
dec
pop
mov
leave
push
ror
iret
lea
mov
dec
shrb
sbb
mov
push
sbb
jecxz
push
sti
push
dec
stc
or
mov
and
dec
jo
and
inc
das
push
push
and
jno
mov
inc
fisubs
cmp
ficompl
mov
pop
xchg
mov
push
xor
aas
push
dec
out
pushf
outsb
jmp
jae
mov
sbb
mov
mov
mov
or
ror
shl
inc
push
inc
jne
inc
aaa
div
mov
popl
cmp
jl
cltd
jecxz
dec
test
imul
stc
pfrsqit1
or
sahf
ss
jecxz
mov
jae
lcall
ds
test
lret
mov
adc
xchg
pop
dec
lret
stc
call
push
mov
rcll
pusha
insb
shrb
jbe
sbb
cmp
dec
mov
lea
xor
jns
out
cs
cmp
mov
fstps
sarl
sub
inc
or
rorl
adc
les
sarb
xchg
iret
outsl
pop
or
push
pop
fisubrs
pop
jmp
iret
lcall
jmp
jle
jo
mov
icebp
das
push
inc
shl
mov
jle
out
adc
cmc
jb
in
aam
test
aam
push
hlt
jo
pop
nop
mov
sbb
fnstenv
mov
bound
lret
fwait
leave
clc
mov
arpl
int
cmpsl
jno
dec
movl
push
dec
push
es
sbb
sub
jae
push
pavgw
adc
leave
lret
xchg
jb
fadds
mov
rcrb
or
jl
dec
fwait
or
dec
ja
call
mov
mov
into
mov
in
bound
int
pop
push
pop
nop
std
push
out
clc
stos
adc
imul
xor
pop
or
je
push
mov
cmpsb
repnz
push
xor
daa
lret
iret
mov
dec
scas
cmp
imul
leave
and
push
pop
ds
outsb
popf
or
cld
push
cmpsl
or
or
jb
shll
xor
xchg
xchg
pop
ficoml
cmp
loopne
push
scas
hlt
and
call
repz
ret
fisttps
adc
stos
mov
add
cmp
adc
add
mov
pop
pop
mov
push
jno
in
adc
mov
sarl
pop
insb
sbb
xor
jae
testl
ljmp
adc
test
sbb
mov
out
sbbb
fwait
sbb
inc
xchg
xchg
jne
push
add
sub
and
test
das
scas
sbb
aad
inc
mov
lahf
cwtl
lds
mov
mov
xchg
pop
insb
xchg
jle
adc
sbb
mov
and
cmpsb
pop
cltd
idivb
out
inc
mov
es
enter
fsubs
or
leave
mov
push
xor
xlat
xor
jp
jae
inc
adc
je
xor
mov
jecxz
pop
orb
or
cmovg
adc
xchg
out
dec
pop
test
sub
arpl
addl
adc
cmp
popl
ficompl
pop
jno
les
dec
das
xor
fidivl
sub
in
add
aaa
in
jmp
movsb
testl
lea
test
add
or
mov
jb
pop
mov
add
pop
cmpsb
pushf
sub
aad
xor
lods
jmp
or
lret
and
popa
ret
pop
cmp
mov
movsl
sbb
lret
ds
xchg
nop
xchg
cld
aad
or
push
test
in
sti
push
push
xchg
dec
idivb
cmp
lods
or
mov
ror
cs
push
fs
test
pop
mov
xchg
lds
pop
lret
cs
push
ljmp
cmp
dec
ds
mov
cmp
pop
xchg
loopne
fisttps
out
popf
xchg
call
test
mov
sahf
mov
fdivs
gs
or
addr16
lea
dec
nop
or
mov
xchg
int3
inc
popf
inc
movsl
jnp
movsb
mov
popf
inc
mov
add
repnz
es
sti
mov
psubw
fnstsw
sub
mov
rolb
cs
add
jno
in
rcr
mov
addr16
jno
std
xchg
sbb
out
pushf
fdivl
addr16
pop
int
push
leave
push
adcl
xorl
cmpsl
cmp
mov
and
bound
dec
adc
fsubs
xchg
adc
stos
and
jl
repnz
mov
inc
pop
mov
add
fcompl
push
test
push
mov
jbe
jmp
rolb
jg
jmp
mov
mov
pop
sub
lcall
aam
xor
sub
sub
mov
lock
dec
imulb
push
test
dec
jg
hlt
rorb
jbe
std
pop
xchg
test
xor
gs
ja
pop
ds
lds
push
insb
inc
out
adcb
xor
int
mov
cmpsl
bound
ret
jbe
cmp
jae
cli
popa
or
pusha
popa
jnp
dec
jns
add
mov
jbe
mov
xchg
dec
into
daa
or
push
ret
mov
sub
notl
loopne
mov
xor
ja
std
fxch
pop
and
add
cltd
add
test
scas
cmp
lds
lret
loopne
addr16
daa
sub
xor
repnz
fidivs
inc
jge
lahf
inc
mov
stos
cmp
mov
xchg
pop
fs
cmpsb
mov
cmp
adc
adc
jno
lret
je
cltd
dec
out
lods
cs
ss
das
orl
sub
jo
add
mov
mov
int3
add
sbb
into
jae
in
stos
xorb
shl
push
cwtl
notb
add
ss
sub
rolb
sbb
loope
push
add
je
fs
adc
and
push
and
mov
icebp
jl
ljmp
out
cld
jg
aas
push
or
loopne
leave
and
mov
cmp
das
stos
into
pop
test
mov
lds
out
sbb
cmp
xchg
xlat
roll
cmp
and
dec
mov
add
mov
rcl
add
or
flds
jg
aaa
lcall
xchg
cmp
push
push
stos
clc
inc
sahf
or
iret
xor
addb
mov
lods
or
xchg
fsubrl
scas
push
dec
push
pop
push
mov
stos
shll
or
lret
cltd
jle
dec
call
xor
mov
icebp
mov
pusha
dec
or
add
decl
popa
dec
test
in
cmp
fwait
cmp
xor
inc
repnz
push
rcrb
dec
sbb
add
insb
out
or
dec
ds
int
in
cli
movsb
cmp
cmpsl
or
inc
or
fnsave
stos
andb
push
sbb
js
out
or
sub
fistps
fxch
xchg
push
ficompl
cs
pusha
ret
out
pop
jmp
sahf
sub
mov
jb
cmpsl
in
inc
push
jne
pop
cli
push
leave
fistl
mov
rcl
mov
bound
fs
pop
xchg
jb
or
mov
lock
daa
nop
and
mov
push
pop
pop
fwait
mov
enter
or
jae
hlt
add
in
clc
subb
adc
xor
mov
push
cmp
jle
ljmp
xor
movsl
jle
jo
std
in
push
add
mov
jb
mov
sbb
mov
push
sti
adcb
js
cli
adc
mov
das
inc
jne
stc
sub
xchg
xlat
push
cmpsb
cmp
push
pop
xchg
insl
sub
leave
pusha
mov
lea
push
jo
lods
subl
inc
loope
or
outsl
pushf
js
mov
stc
loopne
pop
dec
jmp
scas
lods
addr16
cld
push
aam
adcb
mov
ror
add
pusha
shrb
pop
scas
push
cmc
je,pt
js
xor
push
stos
test
jae
sub
insb
ljmp
or
xchg
or
dec
inc
push
cwtl
inc
out
lock
in
adc
test
test
loopne
or
or
bound
xchg
daa
jns
aam
xchg
aam
fnstenv
sbb
icebp
test
dec
inc
inc
push
cmpsl
push
inc
jp
mov
movsb
incl
jle
or
subb
les
fists
add
dec
mov
pop
xchg
pop
mov
movhps
out
push
xchg
push
cwtl
cmp
sub
jo
add
daa
push
xchg
insl
xchg
push
inc
loop
in
bts
xor
jmp
mov
mov
mov
ffreep
or
sub
sti
push
pop
bound
les
ret
sub
rclb
adc
push
cld
mov
fiadds
xchg
nop
int
jp
nop
jo
sbb
mov
xor
outsb
xchg
lds
icebp
outsb
lods
pop
insb
mov
mov
loope
divb
add
mov
mov
movsb
test
out
js
out
imul
aas
pop
cwtl
cltd
push
pop
test
bound
pop
addr16
rclb
inc
push
ret
cmpsl
std
push
mov
orb
shrb
lods
or
jecxz
mov
movsb
mov
mov
pop
call
xlat
cmp
mov
push
jno
add
popf
xchg
addr16
dec
dec
cwtl
out
mov
mov
or
test
jg
inc
pop
sub
out
mov
sti
mov
adc
push
std
mov
dec
push
sub
movsb
inc
fidivl
clc
sbb
test
xchg
mov
jne
mov
dec
movsl
fdivrp
aam
xor
lock
cmp
pop
inc
out
cmpsb
push
inc
imul
and
inc
lcall
orl
push
int
jnp
sub
xchg
and
mov
adc
push
into
pop
inc
lret
lods
pop
sub
repz
lret
mov
inc
dec
add
add
pop
push
cltd
lds
and
inc
or
mov
lcall
psllw
push
sbb
sub
inc
repz
dec
push
sysexit
rcll
adc
jbe
cmp
dec
or
sbb
mov
or
sub
test
pop
pop
mov
enter
or
mov
inc
push
int3
les
add
scas
hlt
fldt
out
cs
mov
adc
out
fwait
mov
rcrb
lds
dec
cmpsb
decb
call
mov
fildl
xchg
mov
adc
push
jl
mov
mov
es
and
fdivrl
fsubrs
mov
data16
out
es
push
mov
sahf
inc
int3
jmp
movsb
data16
and
mov
add
adc
pop
adc
jae
push
addb
xor
mov
add
sahf
jns
lods
mov
int3
push
adc
push
xchg
mov
cmp
iret
pop
lods
addr16
leave
sub
cmp
pop
mov
leave
iret
xchg
sub
nop
jg
push
inc
iret
int3
add
inc
rclb
lods
aad
pop
mov
outsb
xor
pushf
mov
sahf
push
sti
add
jg
int
pcmpgtd
sbb
mov
into
stos
xor
out
add
mov
mov
sub
dec
std
jecxz
sbb
mov
mov
div
lret
cltd
xor
movsl
mov
cwtl
inc
pop
loope
dec
xor
or
sub
inc
sbb
rcr
xlat
mov
ds
aam
or
mov
xlat
xor
and
mov
jnp
mov
setbe
dec
scas
mov
or
mov
adc
lds
adc
aad
mov
or
repnz
inc
enter
pop
pop
int3
out
mov
call
shlb
jne
icebp
or
sub
or
ds
jle
inc
stos
bound
xchg
imul
movsl
mov
mov
leave
push
inc
mov
pop
xlat
test
add
loop
ret
iret
xor
rcrl
les
adc
jae
sbbb
adc
lret
xchg
lods
popl
xor
dec
sbb
or
lahf
jecxz
roll
lcall
bound
inc
cmp
movsl
inc
testl
mov
xchg
sbb
jg
lea
xor
mov
imul
pop
cld
cmp
gs
or
insl
jecxz
ret
insl
cmc
clc
ret
mov
mov
lock
mov
fnstcw
lret
or
push
push
movsl
or
mov
mov
daa
mov
push
hlt
stos
std
rcrb
in
mov
jno
jns
mov
push
mov
jb
xchg
fmul
mov
ret
insl
xchg
cmpsb
cld
or
lods
inc
imul
xchg
daa
popf
mov
dec
mov
jmp
push
jbe
xchg
pop
fimuls
pop
cs
xchg
xchg
scas
inc
dec
les
fmuls
les
daa
mov
jne
out
cmp
push
xchg
inc
rorl
xchg
or
and
jns
arpl
ja
add
jge
jle
adc
push
aam
pusha
cmovl
aam
mov
test
nop
das
sbbb
or
test
sahf
ljmp
adc
clc
mov
aam
int
imul
push
das
jp
mov
mov
xchg
jecxz
sub
andb
inc
sbb
aad
mov
and
inc
mov
ds
es
inc
aad
sub
mov
loopne
mov
add
jmp
add
dec
jp
sar
nop
lea
inc
mov
add
jg
popf
test
ds
lret
xor
sbb
push
mov
pop
mov
fmul
je
ja
pop
ficoml
inc
aaa
push
xor
movsb
jb
cwtl
addr16
jo
insl
je,pn
out
bswap
shlb
add
icebp
scas
arpl
adc
jmp
pop
pop
adc
push
dec
idivl
jge
pop
and
cmc
bound
hlt
out
cltd
testb
ret
fistpl
pushf
inc
jbe
xlat
aam
test
cmp
outsb
leave
push
inc
sbb
movsb
and
je
cmp
sub
ds
ljmp
dec
rorb
push
pop
daa
push
arpl
fdivr
jmp
andb
leave
shr
and
lds
unpcklps
fmuls
adc
pop
xchg
ret
cli
lahf
hlt
xchg
adc
xor
insb
ljmp
jne
mov
outsb
sbb
test
daa
sub
sub
shlb
sub
aas
or
cmp
dec
mov
out
or
adc
call
nop
jo
dec
scas
xor
dec
js
testl
mov
out
fimuls
lret
or
aad
mov
push
cmpsl
out
xor
gs
dec
xchg
xchg
out
sub
std
loop
sti
sbb
cld
scas
mov
leave
jmp
push
int
fldenv
cmp
scas
xor
imul
sbb
mov
mov
lret
inc
adc
cli
mov
sbb
imul
mov
add
addr16
xor
aad
or
dec
test
sub
or
jmp
push
aad
or
leave
and
sub
ret
dec
inc
or
cmp
dec
pop
stc
ljmp
jmp
nop
xor
mov
outsb
ds
bound
mov
in
scas
adc
mull
jns
lret
jno
or
aad
popa
xor
mov
mov
lcall
rcr
jb
negb
fsubp
jnp
dec
test
lods
ja
sarb
lods
stc
xchg
jo
paddsw
cltd
add
pop
push
rorb
pop
jae
xor
and
int
mov
mov
enter
mov
fimull
test
movsl
jne
pop
sub
pop
sbb
loope
xor
lret
aaa
loopne
loopne
in
cmp
out
in
inc
pop
dec
fnstsw
and
pop
push
stos
movsl
fidivrs
dec
and
jnp
cmp
adc
fbstp
out
sub
xchg
ret
jg
mov
sub
jns
sub
fwait
ds
sbb
adc
cmp
mov
iret
in
mov
cltd
outsb
pop
pop
fbstp
and
mov
loopne
loop
imul
push
jle
fidivl
fistpll
pushf
pop
test
push
inc
mov
test
push
in
ss
in
test
aaa
and
mov
sub
imul
push
sub
ret
push
cmp
out
mov
rcrl
pusha
icebp
stc
movsl
cs
pop
xchg
daa
push
adc
dec
js
bound
lahf
sub
xor
push
shlb
fsubs
and
notb
mov
outsb
lods
adc
inc
mov
lahf
stc
ljmp
xlat
arpl
or
sub
ds
jne
jmp
dec
jbe
dec
ljmp
sbb
cld
or
pushf
loope
fidivs
test
cmpsl
cmp
jl
push
inc
scas
push
add
sub
adc
aas
and
in
popf
dec
adc
int3
xchg
mov
jbe
or
push
xor
mov
push
jb
fsubp
sub
fstpt
and
cmp
dec
and
pop
stos
mov
pop
lods
mov
jl
sbb
sti
sub
in
in
test
xchg
sbb
add
xor
jmp
adcl
push
add
jmp
or
cmp
jecxz
addr16
xor
and
jo
cmc
mov
pop
add
fs
loope
rorl
mov
neg
in
inc
pop
testl
xor
pop
and
hlt
aam
ja
movsb
decb
dec
addl
cmpsb
pop
jo
subb
dec
jae
iret
sti
hlt
dec
aam
les
stos
push
sub
jnp
mov
popf
loope
mov
out
mov
inc
jae
push
jno
dec
adc
pop
cmp
or
dec
sub
push
stc
scas
xor
push
into
xchg
mov
pinsrw
or
mov
sbb
xchg
dec
inc
and
fstpt
out
xchg
repz
pop
lret
mov
dec
fcoml
loopne
lea
pop
push
jae
jo
and
sbbl
jle
xorl
xchg
stos
mov
iret
xchg
push
dec
jno
add
pop
add
add
cmp
mov
testb
lods
fcoml
cltd
xor
stos
test
add
scas
popf
mov
fisttps
lds
into
sub
outsl
rcll
xor
movsl
sarl
jecxz
ljmp
jmp
lock
jb
insb
int3
xor
pop
cli
add
sahf
inc
not
lea
push
cmpsb
add
sbb
icebp
mov
xor
in
lods
movsl
dec
xor
in
sahf
movsl
sysenter
mov
dec
test
mov
insl
insb
or
push
ds
cmc
stos
xchg
fidivs
push
pusha
mov
imul
fldcw
std
enter
jne
cwtl
in
pop
das
jg
or
aam
cmp
xchg
add
imul
aad
imulb
jecxz
push
push
stos
mov
sbb
and
inc
push
add
orl
dec
cmpsb
js
sub
shll
dec
xchg
jp
cs
cmp
cld
sti
lods
ja
outsb
xchg
scas
in
jecxz
jmp
adc
insl
or
imul
cmp
aaa
das
hlt
or
scas
into
mov
cmp
inc
sti
popa
jae
into
push
adc
pop
or
cld
addr16
dec
mov
push
mov
xor
xchg
or
xchg
jae
mov
inc
es
sbb
sbb
add
and
cltd
push
filds
cmpsb
cmpsb
sti
pop
sbb
fidivrs
out
jp
popf
push
pushf
dec
cltd
pop
aas
in
jmp
mov
jne
rcrl
cmp
jge
mov
loop
insl
int
jle
test
xor
xchg
add
sbb
xchg
notb
dec
roll
jnp
jae
and
mov
int
scas
fimuls
out
add
dec
adc
in
fisubl
xor
test
mov
mov
cli
add
test
mov
jo
mov
or
dec
dec
adc
sub
sbb
call
lods
jb
ds
cmp
xlat
push
test
ds
sub
rcll
jg
mov
in
and
and
xor
enter
faddl
cli
inc
repz
ljmp
cmp
pusha
pop
mov
outsl
fs
mov
lods
cmp
mov
fsubs
mov
dec
inc
movsl
mov
xor
jmp
in
add
and
mov
and
cwtl
stos
into
stos
cmp
lods
xchg
movsl
mov
lahf
insl
pop
cmpsl
xor
jl
inc
or
loopne
or
mov
aaa
inc
imul
rolb
push
mov
jp
sbb
mov
add
je
inc
sbb
adc
loope
push
mov
sub
mulb
pop
fsub
inc
jecxz
adc
sub
leave
sub
adc
out
cmp
rcr
sbb
push
inc
cwtl
push
cwtl
test
cmp
push
xchg
pop
sub
pop
jae
mov
or
cmp
jl
cmpl
xchg
mov
mov
loop
lahf
sahf
jbe
add
xor
xchg
add
mov
stos
dec
mov
out
mov
out
mov
xchg
sub
adcb
and
xor
aas
push
dec
bound
in
add
mov
call
pop
push
push
sbb
iret
xchg
out
test
xlat
in
add
cmpsb
cmp
push
push
test
cli
xchg
addb
pop
dec
push
pop
repnz
int
mov
push
ret
add
push
ret
cmc
mov
mov
push
in
lea
jmp
adc
cmc
lock
jle
testb
lea
cld
insl
add
push
pop
pusha
inc
mov
push
insl
mov
rorb
shlb
sbb
or
cmpsb
clc
dec
adc
cmc
pop
and
faddl
mov
mov
push
fldenv
dec
rorl
cs
pop
add
lret
enter
jnp
adc
jp
add
jmp
pop
and
into
je,pt
cmpsb
push
cmp
push
sub
sbb
or
sub
inc
repz
andb
ret
mov
mov
cs
xchg
je
std
pop
push
jle
mul
push
je
les
jbe
pop
in
dec
js
jbe
dec
pop
ljmp
push
mov
rorl
aad
inc
lahf
pop
out
sbb
xor
enter
inc
mov
jbe
jmp
repz
insl
push
add
aad
jae
in
and
dec
out
cmc
test
inc
enter
sar
ja
adc
push
pushf
negl
add
iret
push
sahf
xchg
jmp
subb
mov
add
jle
sbb
clc
and
cmc
lods
pop
ljmp
jbe
in
inc
ljmp
jae
xchg
das
das
std
jecxz
mov
dec
test
adc
mov
dec
cmp
adc
lds
mov
test
mov
insl
mov
test
and
sbb
repz
int
add
insb
mov
mov
cmp
nop
in
and
das
or
adcl
enter
ret
fidivrl
cwtl
mov
call
or
ja
fcmovne
xchg
fs
push
je
ret
enter
movb
xor
mov
std
add
push
cmp
xchg
pop
cmp
inc
testb
pop
mov
mull
icebp
out
pop
sar
lret
jmp
dec
xor
lods
sbb
mov
setbe
mov
sahf
imul
jp
pop
mov
and
and
imul
cld
fistpl
pop
push
mov
sbb
mov
or
push
imul
jo
dec
xchg
jbe
mov
loopne
fcompl
mov
in
mov
pop
std
lock
int
mov
out
je
in
enter
push
lds
imul
inc
xlat
ficoml
mov
std
pop
sahf
aad
test
fucomip
out
aam
xchg
xorl
jmp
dec
stos
orb
push
push
add
adc
out
std
xchg
rcrb
sahf
xchg
rcrb
sarb
insb
test
test
out
sub
sbb
mov
push
gs
cmc
aad
dec
xchg
imul
sub
test
xchg
in
jo
xchg
flds
or
iret
mov
scas
mov
fsubs
aas
push
les
pop
lock
stos
or
adc
dec
sub
negb
dec
pop
pop
mov
aas
jg
ds
pop
fadd
das
movsl
decl
es
stc
xchg
into
pusha
jae
cmp
enter
in
xor
iret
dec
inc
js
mov
push
hlt
repnz
je
inc
lcall
into
std
dec
xchg
test
xchg
in
mov
cmp
movsl
adc
cwtl
call
push
rorb
and
rorl
ds
rep
mov
mov
push
sbb
repnz
push
cmp
mov
ljmp
sub
pushf
add
sub
sub
jo
sub
add
insl
mov
rol
sub
mov
push
push
dec
inc
lcall
cmp
imul
xchg
cld
cmc
gs
dec
test
sbb
repnz
out
push
push
fwait
mov
clts
cs
sbb
jnp
mov
jnp
add
test
mov
pop
jb
cmp
out
mov
lds
xchg
jecxz
inc
sbb
push
inc
xchg
push
inc
pushf
mov
sbb
adc
push
mov
mov
or
repnz
shrl
loop
push
sub
mov
mov
imul
pop
in
popf
cmp
xchg
test
mov
pop
cld
add
insl
jp
add
insl
icebp
shrb
jno
dec
dec
fwait
cmp
jnp
cltd
flds
shll
dec
push
pop
outsb
enter
sti
sbb
stos
shll
mov
mov
test
sub
std
mov
mov
fmul
das
mov
xchg
pusha
dec
emms
sbb
ljmp
insl
sbb
stos
cli
cmp
sbb
lcall
add
in
push
pop
jl
and
and
test
inc
fiadds
sbbl
push
in
jmp
jle
sub
adc
jae
add
cmpsl
out
arpl
xchg
or
lods
arpl
out
in
jecxz
mov
dec
jmp
mov
pushf
push
addr16
inc
jns
js
mov
cld
aas
xchg
in
pop
jnp
sti
rclb
cltd
mov
dec
je
aas
ds
and
loope
dec
push
xchg
leave
pop
test
jl
in
std
adcb
cmp
leave
aam
mov
insb
jg
pop
sub
sbb
sub
mov
into
jbe
fcmovb
lea
call
mov
jg
std
pop
or
push
stos
pop
inc
jnp
jae
or
xor
int3
dec
mov
add
mov
aad
mov
jge
xor
data16
jno
cwtl
xchg
cli
xchg
out
loope
out
and
sub
negl
xchg
daa
inc
jp
mov
jae
movsl
sbb
jmp
dec
test
mov
add
mov
push
inc
cld
inc
outsb
xor
out
dec
pop
xchg
fdivs
pushf
dec
jl
hlt
ret
push
adc
mov
jbe
ds
xchg
cmc
cmp
sbb
enter
lods
jb
xor
inc
pop
dec
movsb
rclb
push
and
jmp
inc
mov
movsb
adc
mov
jbe
push
fcomip
mov
or
notb
dec
jge
push
sbb
or
add
xorl
sub
jmp
push
ljmp
stc
or
lcall
add
adc
sbb
movsb
stos
shl
ret
test
xchg
mov
je
pop
push
repz
or
xchg
popf
push
rcll
jnp,pn
mov
jl
loopne
push
push
mov
jno
lcall
jle
mov
cmp
scas
sub
dec
mov
pop
mov
sub
insb
call
pop
outsb
popf
dec
add
iret
mov
xchg
loope
repnz
mov
in
loop
sti
xlat
jno
dec
push
jne
mov
aam
fcomps
loop
sbb
shr
xchg
into
lods
lods
add
jns
pop
scas
or
test
lods
adc
fwait
mov
or
adc
or
sbb
xchg
xorl
inc
add
movsb
jp
xor
aaa
cli
add
sub
mov
jae
push
cmpsl
add
out
daa
test
outsl
dec
outsl
out
lret
sub
push
cltd
stos
mov
xorl
or
add
ret
push
call
popf
pop
lret
sub
pop
shll
dec
std
adc
mov
push
in
repnz
xchg
cld
sbb
cs
xchg
out
icebp
repnz
insl
sub
pop
cmp
xchg
or
xor
dec
lret
or
inc
jbe
inc
mov
mov
sbb
gs
xchg
add
xorb
push
mov
sbb
add
inc
nop
dec
dec
xchg
pop
push
pop
stos
push
inc
push
inc
lcall
dec
cmp
lret
jg
lods
std
sub
sahf
iret
mov
test
sub
imul
dec
jecxz
shll
mov
icebp
fistpll
and
cmp
mov
cmpb
or
popl
mov
sar
test
mov
outsl
and
or
xor
clc
sub
lret
lods
movl
push
mov
lahf
jbe
add
jge
int
push
sbb
cltd
sbb
repnz
push
xor
shlb
pop
stos
xlat
pop
gs
dec
sub
cmp
ret
pop
cmp
pop
or
or
in
mov
dec
xlat
xchg
mov
xchg
cmp
jo
call
lods
push
mov
or
mov
roll
inc
fistps
mov
shl
out
jl
lock
movsb
lea
out
xor
inc
push
stos
leave
mov
xchg
dec
arpl
pop
aam
add
add
mov
loope
mov
popf
in
or
int
rol
mov
add
out
cmp
std
sbb
mov
and
lret
mov
jnp
scas
jo
ret
test
xor
cmp
das
cmpsb
sahf
pop
push
sub
push
mov
and
loope
es
test
or
gs
movsl
mov
test
rcll
pusha
cli
clc
sbb
popa
mov
adc
push
xor
inc
sub
mov
cmp
into
sahf
cmp
in
rcll
loopne
lods
idivl
fldl
fimull
pop
jnp
xchg
pop
sbbl
push
aam
test
jp
xor
dec
sbb
cmp
dec
pop
or
ret
gs
fistpll
lcall
nop
int3
mov
jl
sbb
pushf
push
pop
sbb
lret
sbbl
outsl
inc
sbb
mov
mov
adcl
andl
scas
ret
xor
and
mov
pop
pop
cwtl
jb
jl
ljmp
lret
data16
in
stc
xchg
xlat
fwait
mov
or
xchg
mov
jle
lock
fidivrl
dec
add
rcr
xchg
inc
jge
mov
loop
mov
dec
and
add
cmc
stos
add
mov
jb
or
sbb
jp
outsl
lahf
test
push
mov
and
fstpt
inc
and
mov
data16
and
pushf
sub
xchg
mov
mov
cmpsl
scas
lret
adc
int3
mov
mov
mov
mov
cmc
xchg
push
out
icebp
lock
das
push
push
cltd
out
sub
fdivp
xor
bound
dec
scas
fsts
jae
stos
out
dec
inc
jmp
pop
cli
loope
ja
mov
and
ficoml
jb
inc
repz
mov
gs
pop
enter
fdivl
dec
inc
xchg
inc
sub
add
iret
rorb
push
int3
clc
testb
jp
inc
inc
ret
lcall
xchg
xor
mulb
idiv
gs
in
arpl
lock
js
jne
mov
into
add
rol
inc
nop
add
jp
jae
push
int3
and
cld
pop
outsb
sub
int3
lock
cwtl
fwait
mov
movsl
shll
or
inc
cmp
out
push
push
cmpsl
or
add
push
adc
dec
int
jns
xlat
or
lcall
push
xchg
dec
sbb
in
loop
test
xor
mov
sti
repz
pop
mov
les
or
fisubs
fsubrs
and
imul
pop
jne
addl
adc
aas
dec
lods
xorl
movb
repz
sahf
xorb
iret
in
mov
out
push
sbb
push
lds
adc
in
movsb
jg
jbe
cmp
in
pop
fs
cmc
sar
xchg
testl
or
scas
das
dec
into
jp
add
push
mov
scas
adc
aaa
pop
iret
dec
push
roll
fimuls
pop
pop
xorl
sbb
mov
add
mov
roll
sub
shrl
add
jl
je
test
lret
pop
dec
jae
add
in
pushf
jge
iret
stos
sahf
scas
xor
mov
arpl
fwait
sbb
xchg
lods
pusha
jl
xchg
adc
inc
int
enter
int3
push
lods
mov
lret
pop
add
inc
out
fildl
dec
loope
sti
testl
repnz
insb
jge
rcll
pop
cmp
outsb
and
scas
mov
jae
in
push
sbb
and
inc
adc
pop
xlat
rcl
or
mov
jmp
adc
loopne
jl
fmuls
jp
not
rcrb
push
orb
jp
lds
mov
popa
cmp
ret
pushl
out
mov
repz
mov
lock
push
aas
mov
sbb
insb
sbbl
xchg
push
xor
jb
xor
push
sbb
xchg
decl
xor
lock
sbb
or
add
and
jle
inc
pop
jae
mov
lods
push
in
cmp
pop
out
dec
adc
push
movsb
cltd
enter
or
mov
inc
jnp
and
push
jno
popf
mov
cs
in
popa
stos
pop
call
add
inc
jg
or
imul
dec
inc
jno
repz
xor
insb
inc
mov
jle
add
xchg
enter
adc
adc
jae
add
fisubl
sarl
in
xchg
aam
mov
cmpsb
loope
fsubr
stos
iret
dec
push
xchg
mov
enter
sub
mov
nop
bound
inc
sub
mov
dec
inc
aaa
repnz
mov
loopne
mov
mov
lods
inc
bound
test
jb
push
mov
bound
stc
pusha
loop
cmc
cld
ds
adc
cmp
unpckhps
dec
adc
popa
jle
sbb
cmp
mov
xchg
out
call
xchg
jmp
imul
leave
mov
sbb
dec
mov
aaa
cmp
data16
dec
cmc
insb
int3
inc
lahf
outsb
sbb
jb
jb
lcall
sub
sub
mov
mov
fisubs
pop
inc
test
mov
call
lock
inc
pop
aas
dec
stos
cmp
rorb
int
jmp
out
jmp
push
popf
aas
jbe
pop
adc
and
dec
mov
pop
xchg
out
gs
int
ljmp
ret
je
cmpl
loope
fcom
mov
push
xor
shl
inc
add
add
lock
pop
hlt
out
xchg
xor
sub
aas
leave
push
rolb
mov
aad
test
xchg
mov
je
pop
cmp
shrl
clc
adc
cld
ljmp
sarl
xor
cwtl
jbe
jl
aad
xor
pop
lods
shlb
sbb
mov
push
jbe
xlat
mov
ja
and
jo
subb
adc
repz
pop
fs
adc
ss
xchg
sar
icebp
sub
into
add
iret
loope
jp
dec
inc
stos
xor
rcll
xchg
xchg
arpl
mov
jecxz
lock
gs
movsl
dec
adc
inc
push
cltd
mov
jb
fwait
cmp
enter
fsubl
js
adcl
out
inc
adc
inc
aam
lea
nop
xorl
xchg
fisubrs
jnp
fs
aas
test
aad
pop
sbb
fs
mov
and
int
shll
in
fnstcw
sub
fisttpll
lods
and
lret
sub
stc
popa
dec
hlt
jne
test
and
outsl
call
cmp
and
cmpsb
and
or
in
cltd
xor
jl
push
in
enter
jmp
xchg
cld
cld
adc
mov
or
xchg
lcall
mov
sbb
xor
adc
inc
sbb
dec
mov
pop
and
mov
mov
or
add
fs
inc
lock
fimull
sbb
ss
insb
inc
scas
fsub
xchg
xchg
jo
mov
adc
es
test
jl
jno
dec
outsl
pop
dec
movsl
xlat
cmp
cmp
into
add
pop
xchg
jne
lock
and
dec
or
scas
cld
sub
push
cld
inc
dec
daa
add
orl
sub
stos
loop
insl
rcrl
pop
xor
inc
std
arpl
into
nop
xorl
sbb
out
aaa
fs
mov
fwait
jp
pop
inc
ljmp
jbe
pop
inc
popf
and
hlt
ror
lea
lds
fimull
mov
add
adc
xchg
and
cmp
sub
add
jo
pusha
outsb
mov
imul
mov
incl
stc
mov
xchg
std
rcrl
shll
lahf
clc
in
popf
outsb
pop
pushf
mov
xchg
add
mov
int
or
in
adc
mov
punpcklbw
cmpsl
sub
pushf
jl
and
inc
addl
call
inc
inc
jp
sub
lds
imul
inc
and
ret
aas
sahf
jae
loopne
add
cs
addl
xchg
xchg
shlb
pushf
dec
lahf
fs
loopne
loope
xor
mov
inc
cmp
pop
or
stc
cmp
xchg
sbb
aaa
ss
mov
emms
inc
repz
add
or
repnz
sub
shlb
jle
scas
sbb
jl
jmp
adc
jnp
loop
xor
push
aaa
in
daa
mov
or
cwtl
stc
test
fs
enter
pop
popf
pop
lret
cwtl
push
dec
pusha
and
jae
scas
mov
dec
test
add
fldenv
leave
push
add
lret
xchg
stc
sahf
pop
stos
jge
or
clc
fcoml
mov
lods
push
ret
loop
xchg
push
hlt
sbbb
int3
or
mov
push
inc
out
adc
movsb
mov
dec
mov
xchg
and
inc
and
mov
or
jp
lods
jae
or
bnd
sti
and
mov
and
dec
jmp
xchg
jbe
fisttpl
xchg
inc
cmpsb
adc
mov
xor
addr16
aad
aam
mov
adc
push
mov
fwait
mov
movsl
mov
iret
aam
xchg
fwait
movsb
cmpsb
subb
ret
outsl
xchg
int
xor
cltd
rcrb
aam
jns
fmull
dec
cmp
adc
in
aam
in
push
xchg
jbe
mov
xchg
pop
xor
loope
and
mov
mov
inc
loope
test
adc
repnz
mov
xor
adc
cmpl
insb
lret
ret
sub
pop
adc
cmc
adc
dec
popa
ds
inc
aaa
cmpl
out
out
cmp
je
xor
and
dec
cli
roll
fstl
mov
lods
xor
mov
xor
or
mov
xchg
insb
xor
aas
aad
pushf
aam
and
xchg
shll
cli
pusha
jnp
xchg
inc
loopne
push
cmovae
movsb
in
dec
xlat
adc
inc
test
fistpl
jle
push
popf
cmp
movsl
cmp
les
mov
mov
inc
mov
jnp
out
sahf
imul
popa
push
mov
or
fstpt
sbb
push
movsl
rcrb
sar
repnz
rorb
jg
ret
scas
es
cmc
and
psrad
pusha
mov
push
push
and
sub
or
xlat
rcrl
loop
adc
cld
cmp
ja
pop
addps
adc
movsl
mov
in
loop
subb
mov
loope
mov
out
movsb
call
xor
js
mov
push
test
movsl
sub
and
mov
fsubrs
adcl
ljmp
movsl
cs
iret
mov
sahf
or
jp
mov
cmc
pushf
pop
pushf
dec
xor
cli
adc
cwtl
xor
jno
in
aas
aad
or
subb
out
cltd
and
or
xor
ret
dec
lock
loopne
pushf
mov
cmpsb
in
in
enter
inc
adc
push
leave
cltd
outsl
notl
insl
xchg
jg
xorb
xchg
jle
fwait
roll
jle
jnp
jne
scas
jns
cltd
add
frstor
add
mov
xorl
lret
ret
xchg
sub
jbe
repnz
pop
imul
cli
sub
add
add
mov
sbb
and
pop
fiaddl
in
cld
xor
aad
sub
and
mov
lret
xor
out
xchg
push
and
gs
int
xor
mov
push
mov
andb
mov
pop
stos
stos
sub
push
cltd
dec
and
fwait
xchg
rolb
repnz
daa
inc
loop
inc
sbb
inc
sub
das
mov
sub
ljmp
fisttpl
movsl
out
pop
mov
leave
mov
call
cmc
aaa
xchg
cli
adc
repz
jecxz
add
xor
mull
outsb
mov
push
lods
hlt
popf
test
movsb
loope
jae
popa
sarl
and
aas
dec
in
mov
scas
mov
fmuls
fs
add
repnz
ljmp
xor
pop
insb
ljmp
mov
cltd
push
ja
xchg
out
xchg
jg
sbb
cmp
out
adc
add
jge
rclb
fwait
out
ret
sub
inc
loope
cs
into
mov
inc
mov
mov
aam
clc
mov
jl
cmp
xchg
adc
mov
push
stos
xor
idivb
shrb
xchg
out
adc
and
test
xchg
fcompl
sbb
push
in
xorb
sbb
and
ja
xor
ficoms
addr16
rcrb
sahf
mov
lret
lcall
fcoms
xlat
cmp
imull
and
pop
sbb
jb
mov
jb
outsb
mov
stos
or
lock
xchg
mov
fnstcw
out
sar
and
mov
iret
pop
wrmsr
add
push
cmpsl
jo
cmpsb
sahf
jnp
pop
movsl
std
jle
mov
sub
mov
and
mov
push
fsts
loopne
icebp
sub
push
loope
xor
out
out
idivl
loope
iret
in
mov
jecxz
dec
adc
sbb
sahf
das
jg
sbb
arpl
pop
pop
sub
mov
int3
lods
repnz
inc
mov
rolb
xor
xor
adc
in
push
lret
fistps
mov
jge
lahf
push
mov
jno
pop
add
into
sbb
pop
pop
fs
sub
int3
xchg
lods
addb
xor
std
push
ljmp
mov
jg
mov
or
xor
div
xchg
je
push
rcrl
mov
js
aad
jb
mov
in
pop
pusha
jnp
loopne
mov
pop
or
cmpsl
loopne
dec
dec
pop
cmpb
enter
or
mov
and
fld
int
mov
aam
ja
rcrl
cmpsl
scas
jne
pusha
fmul
mov
pop
sbb
push
data16
fisttpll
sbb
shlb
arpl
arpl
add
cmpl
mov
ss
jbe
pop
mov
mov
enter
push
inc
pop
icebp
hlt
jp
jle
xor
mov
inc
repnz
out
push
inc
fildl
jge
xchg
xchg
cmp
add
mov
and
sbb
cmpsl
and
out
mov
lret
out
loope
inc
mov
sub
and
ret
sub
int3
or
cmp
ret
mov
xor
and
xchg
rclb
inc
sub
popf
iret
movaps
fsubrl
xchg
cmp
imul
fcomip
and
jno
testl
rcr
lock
and
stos
ljmp
ljmp
mov
call
mov
clc
mov
lods
testl
inc
fisttps
leave
cmpsl
sbb
push
sub
push
jmp
subb
sbbl
rcrb
popa
data16
xchg
cmp
cli
cmp
xor
cmp
xchg
push
sub
push
xchg
push
add
iret
std
sbb
jle
or
inc
das
shl
sbbb
pop
icebp
push
ret
mov
rolb
cmp
sub
sbb
mov
cmc
inc
dec
movl
jl
lahf
pop
ret
cmp
in
mov
fcmovb
jge
leave
fldt
jo
push
iret
pushf
mov
test
mov
jge
cmp
mov
dec
xlat
icebp
xchg
push
xor
sbb
mov
jns
out
sbb
dec
jge
outsl
sbb
pushf
hlt
mov
sub
push
xor
push
movsl
push
ror
sub
xchg
mov
lds
push
lcall
mov
mov
cmpsb
push
push
dec
jb
fcoms
adc
out
and
jle
fmull
mov
aaa
loopne
in
xor
sub
in
fnstsw
gs
in
test
xchg
insb
shll
lcall
mov
push
mov
repnz
mov
lods
fdiv
lock
pop
pop
fstl
inc
scas
std
push
in
dec
jae
lcall
mov
jne
ja
jecxz
gs
test
push
mov
adc
jmp
lret
popf
loop
fiaddl
cmc
add
mov
rdmsr
ret
mov
push
pop
sbb
mov
xlat
sub
sarl
jle
adc
jae
ret
sar
sbb
push
out
popa
pusha
jge
add
sub
lret
xchg
jle
pop
mov
xchg
sub
inc
loopne
jae
xor
ljmp
xchg
out
hlt
pop
jno
shl
popa
pop
and
xchg
inc
jns
rol
inc
test
push
out
in
pop
rclb
xor
sarl
and
inc
stos
cs
pop
pop
cmp
int3
push
cmp
imul
hlt
xchg
inc
or
rcll
arpl
push
arpl
int
stos
insl
mov
cmp
add
jb
mov
xchg
ljmp
xchg
mov
aam
inc
repz
mov
and
sbb
popa
int3
je
stos
push
adc
adcb
aam
inc
movsb
into
push
mov
nop
jmp
push
pop
pop
jle
mov
shll
int
fdivl
inc
ja
cwtl
adc
cltd
cld
dec
jne
pop
or
in
in
jmp
or
xor
call
ss
lcall
push
cmp
add
add
leave
test
or
sbbl
pop
or
jle
xchg
sub
popl
lahf
xchg
jne
cmp
insb
lcall
push
add
mov
test
nop
push
adc
xchg
add
add
mov
cmp
movl
push
jb
arpl
in
pop
shlb
enter
mov
push
test
rcl
lcall
adc
sub
repz
lahf
loope
sub
mov
mov
cs
test
push
sbb
int
popl
pop
and
and
push
ret
push
push
inc
adc
push
pop
imul
imul
roll
add
dec
mov
inc
out
int3
jo
inc
cmpl
xchg
jno
loop
lcall
ret
out
add
and
mov
xchg
fstpt
and
jle,pn
add
sbb
cmpb
push
push
loopne
cld
xlat
ss
rolb
sub
dec
lcall
mov
sbbl
std
xchg
stc
push
in
int3
sahf
dec
enter
addr16
ret
int3
push
jmp
das
sub
xor
mov
xor
jnp
out
xor
xchg
push
mov
test
addr16
xchg
sub
mov
adc
sub
loope
jbe
sahf
insl
inc
leave
orb
mov
and
inc
outsl
movsb
ljmp
adc
adc
in
mov
sahf
adc
sbb
lock
xchg
stc
insl
imul
pop
orl
dec
in
xor
ret
sbb
pop
repnz
mov
and
pusha
adc
mov
and
lock
shrl
test
scas
repnz
push
xor
and
xchg
sub
icebp
mov
push
in
insb
shll
sbb
push
out
int
sarb
push
sahf
dec
in
and
shrb
in
popa
jae
xchg
lods
repnz
lods
mov
mov
mov
fs
repz
lds
loope
ret
addb
std
or
jg
sbb
mov
pop
adc
mov
int
dec
fldl
stc
mov
jl
in
out
fistpl
pop
and
xor
fwait
inc
into
or
and
cmp
ljmp
clc
lret
jns
js
push
lahf
sub
inc
mov
add
fs
daa
pmaddwd
and
imul
push
and
jmp
fiaddl
cmp
js
mov
fwait
push
in
fwait
jae
enter
mov
adc
mov
std
mov
mov
inc
pop
fs
loope
inc
push
nop
clc
mov
pop
jge
mov
lret
sub
stos
inc
outsb
es
nop
mov
in
xchg
mov
cmp
mov
push
test
lret
movsl
inc
sub
outsl
mov
daa
scas
aad
inc
in
sbb
push
cld
rcll
push
add
out
out
mov
cmpsl
adc
push
sbb
mov
lcall
sub
push
push
mov
xchg
lahf
mov
sbb
lea
inc
aas
mov
sbb
sub
lahf
jecxz
loopne
pop
add
jl
push
jmp
xor
in
cmpsb
dec
mov
ss
scas
pop
push
nop
in
push
fsubrl
subb
nop
in
cmp
pop
test
add
cli
xchg
stos
repnz
and
cmp
add
mov
imul
js
ret
dec
mov
ret
mov
fs
dec
mov
into
adc
lods
mov
sub
iret
push
popf
jg
fiadds
pushf
lock
mov
sbb
cmc
scas
ja
sbb
xchg
dec
fwait
mov
push
outsl
push
cmp
fsts
jb
dec
mov
xchg
add
sbb
inc
aam
xchg
push
loopne
std
push
adc
push
pop
mov
andl
out
dec
popf
movsb
insb
fadd
push
ror
sahf
insb
jle
movups
int
inc
mov
ret
mov
lds
es
mov
add
lcall
imul
add
out
movsb
cld
push
mov
push
add
sbb
mov
loopne
xor
rorl
in
popa
fcomps
add
std
cmp
jmp
push
insb
int
fildl
aaa
push
clc
ret
out
push
add
ffree
cs
stc
mov
lret
lret
addl
aad
into
rcrl
rclb
mov
lods
faddp
pop
f2xm1
mov
push
sub
push
rorb
rol
out
push
movlps
cmova
mov
mov
pusha
sbb
jb
ljmp
sub
fldcw
pop
adc
add
sti
adc
iret
jmp
imull
dec
mov
pushf
xchg
movsb
loop
adc
jno
xchg
insb
rolb
ss
or
enter
testl
or
sbb
fwait
repnz
jge
sub
fwait
xchg
push
and
jmp
cmp
sub
cmc
je
mov
adc
add
jns
inc
ja
push
sub
in
rclb
popa
inc
mov
scas
mov
loope
dec
add
add
xchg
mov
cltd
cwtl
cmp
cld
test
int
jnp
xchg
jns
in
sub
imul
inc
push
loop
mov
test
push
mov
shr
push
mov
add
xor
out
mov
lds
sbb
cmp
pushl
mov
pop
icebp
mov
sarl
push
arpl
cmp
and
ret
inc
push
cmp
xchg
jb
pusha
push
inc
aas
clc
push
imul
push
mov
aaa
push
pop
pop
ret
and
ret
mov
lcall
repz
mov
mov
movsl
pop
xchg
call
inc
test
pop
mov
ljmp
dec
add
xor
jg
jg
adc
push
outsb
and
and
sbb
leave
fsubs
testb
loope
adc
int
add
inc
jnp
lret
repnz
jecxz
and
mov
call
push
cld
and
cmp
fmul
popa
int
jns
pop
scas
or
xchg
adc
sub
cmpsb
add
leave
scas
pop
add
ss
sub
mov
cli
jno
dec
push
out
out
mov
jno
add
movsl
inc
das
push
fidivrs
arpl
out
dec
sbb
sbb
jne
mov
icebp
pop
inc
sub
mov
jecxz
pop
aaa
cltd
cmp
adc
addr16
and
xor
mulb
andb
lret
xlat
cli
xchg
pop
call
ds
inc
testl
and
loopne
out
jle
mov
dec
xchg
fwait
ljmp
jmp
pop
mov
sub
push
out
dec
mov
sbb
adc
xor
outsl
fsubs
fdivp
stos
mov
pop
xchg
xor
or
imul
mov
dec
dec
jb
out
das
outsl
std
pop
leave
sbb
cmpb
aad
xor
cmpsl
or
test
pusha
and
add
xchg
or
aaa
jno
dec
xchg
out
outsb
or
rcl
cltd
pop
xor
cld
popf
xor
cmp
lret
fidivs
xchg
jmp
ljmp
xchg
add
dec
repz
pop
push
sbb
mov
outsb
push
orl
inc
xchg
ds
lock
jb
sarb
shr
xor
and
in
stc
enter
inc
cmp
out
hlt
test
loope
mov
lret
cli
mov
mov
addb
mov
pusha
push
call
xchg
pop
xchg
xchg
jmp
pop
sub
sbb
shll
sarl
push
jae
add
hlt
stos
sbb
mov
insb
cwtl
adc
cmp
inc
rcrb
sub
mov
cmp
adc
lds
movsb
cmp
mov
inc
imul
data16
out
xlat
add
push
push
test
cltd
pop
movsb
mov
sbb
or
jae
popf
inc
fsubs
sbb
inc
jne
xchg
mov
iret
es
xor
cmp
sbb
je
mov
or
inc
imul
repz
testb
pop
jge
test
shlb
ja
lods
sbb
and
jle
mov
pop
cmp
cmp
push
jecxz
fstps
bnd
cmp
out
les
cmp
fisubl
fcoms
aad
pop
push
mov
inc
mov
jmp
enter
loopne
lods
pop
cmc
pop
scas
xchg
sbb
mov
lods
addb
push
cs
shlb
int
loopne
jge
hlt
pop
test
lahf
dec
fisubl
mov
insl
or
cmpsl
inc
jno
iret
inc
jl
pop
into
mov
fstl
in
ret
loope
movl
je
jmp
adc
sub
icebp
test
das
jl
xor
xchg
inc
cwtl
mov
xchg
jge
mov
leave
cwtl
jno
pop
push
xor
jmp
aaa
cltd
or
rcr
or
clc
xchg
mov
cltd
inc
mov
iret
dec
lods
ror
xchg
icebp
js
cwtl
adc
cmp
lahf
daa
lret
scas
addb
jb
jp
mov
fnstenv
popa
adc
lret
in
dec
icebp
cltd
jp
jge
cmp
sbb
xchg
inc
pop
xor
gs
mov
dec
call
inc
cmp
jo
adc
sbb
adc
add
push
setp
pop
pop
test
push
scas
and
fbld
sub
cld
dec
dec
fwait
in
push
jo
pop
std
or
inc
imul
or
repz
lcall
mov
mov
mul
scas
xchg
xor
clc
shll
arpl
and
in
sbb
push
popf
cmpsb
fimull
push
sub
sbb
shrb
mov
addr16
sbb
andb
jmp
sarl
movsb
iret
test
into
movsl
jns
fs
stos
imul
inc
and
jns
cwtl
negl
adc
mov
lock
sbb
push
loope
xor
and
cmc
xor
push
inc
mov
lfence
and
inc
adc
fwait
test
fs
cs
jb
mov
sbb
shlb
and
mov
pop
clc
clc
sbb
sarb
sub
adc
mov
and
pusha
mov
jl
sbbb
or
dec
sti
out
test
ds
pop
bound
movsl
dec
mov
shrb
mov
movb
lret
xlat
pop
and
fildl
inc
arpl
cli
add
inc
cmp
imul
movsl
pcmpeqw
jge
test
lods
rcll
dec
scas
iret
arpl
add
add
fstpl
arpl
ret
icebp
cmpsb
mov
mov
pop
insb
cwtl
loopne
outsl
fldcw
inc
inc
mull
inc
loope
hlt
lcall
jbe
xchg
cwtl
mov
jnp
mov
in
lock
or
pop
into
and
jecxz
adcb
push
out
test
cltd
xchg
push
push
lcall
shll
inc
shlb
cs
jmp
insl
cld
jge
aas
outsl
enter
inc
cld
sbb
scas
das
adc
fdivr
cmp
ficoml
int
int
cli
fs
mov
jb
aaa
idivb
test
sbb
iret
scas
jmp
fdivrs
and
insb
in
pusha
cmovp
xchg
push
or
lods
inc
das
cmp
mov
xor
insl
push
rclb
in
adc
insb
dec
jnp
jns
sub
in
jbe
js
xchg
mov
shrb
aam
push
xrelease
test
stos
mov
jp
icebp
jne
add
mov
mov
aaa
push
mov
les
or
int
call
clc
stos
nop
fadds
das
test
imul
cmpl
icebp
xor
lods
movsb
xchg
pop
mov
fstps
pop
push
mov
cmpsb
sbb
mov
fnstenv
xor
push
xchg
inc
pushf
lret
lret
lock
sub
xor
cwtl
jb
out
mov
aad
subb
jo
mov
stos
arpl
lret
push
mov
jbe
sub
or
fiaddl
pop
or
cmp
pop
mov
push
lret
addr16
mov
mov
fdivs
jle
mov
fbld
xchg
xor
popa
sbb
leave
in
dec
push
xor
jbe
and
arpl
rcrb
mov
cli
dec
cmp
lods
enter
xor
mov
iret
cld
sub
flds
decl
sub
dec
xor
mov
cwtl
xchg
push
outsb
jge
xchg
stos
dec
loop
cmpl
mov
iret
inc
lcall
mov
push
ljmp
test
mov
mov
cmp
out
ja
je
jp
or
lret
insb
mov
into
xchg
icebp
or
lcall
out
inc
test
xchg
adc
mov
push
mov
mov
mov
jne
mov
add
xor
scas
les
jns
movsl
sub
jnp
xchg
lret
out
addb
push
inc
add
mov
mov
mov
sarb
jns
mov
lahf
daa
adc
daa
ret
popa
sub
xor
xor
mov
xor
push
mov
mov
mov
ja
rol
pop
jb
sub
out
cmp
aad
xchg
pop
dec
and
hlt
adc
pop
mov
test
clc
add
inc
jae
or
lods
jge
cmpsl
outsb
push
lahf
test
test
pop
rcrb
mov
sti
imul
sub
jne
mov
xor
sbb
mov
test
xor
call
repnz
sub
movsb
xor
lea
in
push
repnz
jmp
movsbl
sub
mov
mov
xchg
divps
jbe
fbstp
ret
pop
mov
mov
mov
cmp
mov
loop
cmp
inc
enter
add
cmp
sti
ja
cmpsl
roll
out
mov
sub
push
pop
movsb
xor
popf
and
pop
adc
loope
mov
jecxz
or
dec
xchg
data16
inc
push
fcmovu
inc
insb
daa
cmp
xchg
inc
aas
mov
sti
jp
jbe
ja
xor
mov
icebp
or
fbstp
insl
outsl
les
sub
mov
mov
pushl
lret
insb
mov
jmp
push
call
in
add
lahf
pop
xchg
insb
pop
shlb
lock
aas
cmpsb
insl
pop
and
loopne
sahf
fnstcw
add
sub
adc
or
or
push
xor
fcompl
add
mov
add
lcall
outsl
or
sub
jp
inc
jne
sub
in
fcomip
test
mov
mov
pop
add
jg
ljmp
cmc
mov
adc
mov
dec
fstp
test
pop
mov
lea
adc
xchg
roll
ret
jle
mov
lods
mov
ja
aaa
adcb
xor
test
xchg
dec
adc
push
cmp
push
inc
lods
xor
in
cmp
adc
mov
mov
sub
push
add
pop
and
push
inc
add
addb
or
sbb
ret
in
int3
adc
inc
sub
movsb
out
shrl
mov
jne
ljmp
lcall
test
jo
jnp
sbb
stos
daa
jbe
in
or
ds
ljmp
gs
adc
lock
mov
std
push
jecxz
sbb
outsl
push
stos
ljmp
loope
or
mov
in
ljmp
or
filds
jne
out
jns
jo
lods
jne
filds
fldcw
jl
std
iret
and
rcrb
dec
push
mov
into
inc
or
clc
in
fsubs
and
xchg
add
sub
pop
aam
cmpl
std
mov
cmp
int3
xchg
pushf
push
and
add
jo
cmovge
test
daa
decb
in
test
dec
push
popf
adc
add
cmpsl
push
popa
xchg
shll
fimuls
mov
add
in
outsl
jp
out
dec
cli
popf
into
inc
add
mov
adc
jne
sbb
or
inc
sub
mov
sub
xor
daa
push
pop
cmpl
loop
mov
inc
mov
dec
push
xsave
jb
adc
cmp
cmc
in
xchg
sbb
testb
rcr
mov
adc
jl
iret
dec
daa
fisttpl
in
popa
mov
pop
ljmp
js
test
push
into
pop
lret
test
pop
add
filds
ret
dec
adc
push
push
mov
ljmp
dec
sar
jmp
test
xchg
dec
sub
xchg
stc
mulb
mov
je
popa
stos
call
push
jl
gs
jl
push
pop
jo
jbe
push
into
loop
mov
jnp
mov
aam
inc
mov
or
mov
std
and
iret
xor
mov
mov
mov
movsl
sbb
es
mov
shlb
rcr
adc
or
lock
push
pop
fcomps
ds
xorb
xchg
add
sbb
dec
sahf
fldcw
adc
xorl
mov
pop
fwait
or
or
sbb
aad
mov
or
jl
fldenv
cltd
inc
shll
xchg
add
ret
jae
mov
repz
pop
cmpb
add
movsl
add
loop
shl
lret
stc
mov
xor
dec
jle
add
cmpsb
push
mov
inc
jmp
pop
dec
pop
adcb
int
stc
mov
or
fstpl
and
loope
jae
inc
xchg
push
xor
xchg
sub
in
outsl
adcb
mov
jne
imul
fldl
cltd
push
and
outsl
or
xchg
and
mov
mov
lods
insb
cmp
xor
lds
lret
push
jl
push
push
bound
cmp
std
sbb
jnp
es
sbb
xchg
test
inc
inc
fbstp
xchg
fsubs
sub
sbb
pop
call
sub
fucomp
outsl
fisubl
into
add
aam
mov
push
xchg
fildll
cmpsl
and
push
out
xor
int
ret
xchg
sbb
push
xor
xorb
cmp
in
jnp
in
push
push
std
add
pop
dec
lret
or
sbb
mov
sub
dec
and
rcrl
fsubrl
or
loop
testl
xchg
pop
xor
lcall
imul
pop
fwait
mov
in
mov
bound
sub
push
pop
ljmp
int
loop
sti
loop
cmp
mov
add
adc
clc
pop
lret
and
lods
shll
dec
lret
out
and
pop
cld
leave
test
sbb
ficomps
push
inc
sub
jo
jbe
cmc
mov
testb
xchg
in
insl
mov
and
shrb
mov
out
cld
cmp
jecxz
shlb
mov
mov
movsl
scas
add
mov
push
dec
das
xor
push
adc
iret
les
push
jb
das
pop
cmp
hlt
cmp
mov
imul
sbb
fidivrl
cltd
push
lret
adcb
xor
ljmp
adc
xor
das
pop
cmp
notl
dec
cli
test
jo
mov
and
outsl
add
sub
sub
int3
loope
cwtl
cmp
push
mov
mov
mov
sbb
fs
or
mov
repz
jb
icebp
inc
outsl
dec
fs
add
ret
cs
cmp
bound
jo
lods
add
jmp
and
lock
lret
mov
addr16
je
cld
push
ljmp
xor
movsb
pop
loop
negl
sbb
aad
push
mov
add
ret
ljmp
incl
push
sub
cmp
xor
or
add
mov
xorb
clc
or
push
dec
sub
test
mov
xor
int
imull
mov
and
test
neg
lret
xlat
lods
jne
scas
rorb
popl
and
movsb
inc
adc
int3
test
mov
mov
pop
mov
sbb
cmc
jmp
sub
mov
ja
dec
inc
mov
jle
icebp
stos
subl
cmp
jmp
test
popa
test
inc
jl
enter
scas
xchg
cmp
sarl
lret
xor
push
sbb
cmc
dec
fidivrs
pop
je
push
sbb
mov
xor
repz
pop
sahf
adc
jmp
ret
sti
mov
xchg
dec
cs
pop
icebp
loop
js
addb
push
out
cwtl
add
inc
and
pop
mov
jle
push
fsubs
in
and
xchg
pusha
daa
inc
inc
dec
paddsw
imul
jnp
xor
les
loop
test
adc
sub
sbb
lods
sbb
gs
in
mov
movsl
pop
lea
sub
add
lcall
cmp
cmp
mov
cmp
out
push
dec
loope
and
xchg
int
sbb
or
out
xchg
in
lret
jnp
add
scas
mov
je
fisttpl
rolb
ficomps
inc
pop
adcl
das
push
jbe
movsb
cs
mov
sbb
sbb
xchg
adc
dec
pusha
insl
ret
xor
fnstcw
jp
mov
jno
inc
or
hlt
jmp
popa
inc
xchg
lea
xchg
jns
xchg
xchg
add
mov
mov
adc
or
push
add
andl
add
fs
movsb
es
aam
sti
inc
dec
das
jne
sbb
sahf
out
test
pop
ret
cmpsb
jecxz
shll
push
fwait
movsl
jg
sub
aas
ja
push
fwait
push
lods
out
insb
or
adc
add
out
mov
imul
mov
sub
rcrl
cs
stc
sub
xchg
mov
pop
or
mov
mov
jae
fucomip
mov
movsl
adc
fnstcw
lods
call
dec
adc
cmc
out
imul
and
frstor
jmp
xchg
leave
movb
jae
dec
inc
xor
sub
and
mov
hlt
loopne
lds
stos
in
pop
mov
mul
sbb
ret
hlt
sub
lahf
mov
test
jge
lods
test
mov
cmpb
dec
cmpsb
cltd
in
pop
idiv
clc
imul
push
pop
dec
fistpll
push
add
cmp
flds
xor
data16
or
lcall
sbb
xor
pop
xchg
sub
mov
es
stos
push
imul
test
pcmpeqw
and
aam
dec
insl
mov
xchg
sbb
popf
adc
fmulp
xor
insb
sub
pusha
pop
pop
adc
jbe
pop
int
cwtl
in
push
push
out
pop
jl
lret
mov
inc
sub
gs
lret
enter
pop
add
adc
add
or
sbb
or
sub
jp
je
clc
faddl
push
mov
fsubp
xchg
mov
fcmovnb
pminub
cmp
xchg
mov
pop
jge
adc
sbbb
hlt
push
mov
out
mov
iret
xchg
sbb
lods
dec
repnz
and
jg
inc
push
pxor
xchg
lea
inc
insl
leave
xchg
and
fwait
lds
cmc
pop
sub
xchg
nop
imul
into
dec
dec
add
ret
jns
push
mov
push
or
push
sti
xor
adc
ja
pop
test
dec
fstl
out
xchg
mov
loope
jmp
aas
dec
inc
mov
lret
fldenv
scas
mov
rolb
sbb
mov
push
cli
mov
sub
mov
not
fimuls
jp
adc
cltd
xor
push
les
call
lret
mov
adc
fwait
frstor
fsubrp
xor
xchg
mov
leave
jle
ss
xchg
xlat
push
dec
cmp
mov
jns
adc
xchg
movsl
pop
and
inc
popf
mov
mov
inc
jnp
fisubrs
jle
xchg
in
push
mov
pop
xchg
faddl
into
lea
filds
lea
mov
dec
mov
push
mov
andl
jnp
ljmp
jl
test
mov
addl
cli
stos
ror
fsubl
inc
hlt
outsl
and
mov
test
in
enter
inc
push
inc
shll
out
and
ljmp
or
sub
idivl
outsb
lcall
jnp
xor
es
cld
and
ret
pop
jae
push
lods
push
stos
push
jge
cmpsb
adc
jl
aad
addr16
cmp
mov
mov
mov
dec
jmp
mov
jo
adc
aaa
unpcklps
adc
int3
dec
sub
mov
mov
sysret
mov
in
mov
dec
inc
adc
mov
outsb
xchg
mov
cli
mov
rol
mov
xor
hlt
mov
sti
mov
les
add
push
add
ljmp
adc
repnz
or
xchg
sbb
sti
fistpll
add
cwtl
mov
xchg
fnsave
push
out
das
jbe
cmp
xchg
sbb
pop
xchg
mov
cmp
or
data16
pushf
jge
pop
jmp
pop
pop
adc
cwtl
ret
xlat
enter
rorl
popa
dec
adc
push
add
pop
and
lods
push
rolb
mov
fdivrl
mov
dec
push
adc
in
inc
mov
add
ret
jg
cmp
mov
aas
shrb
rcr
xchg
xchg
cmp
cmp
imul
jmp
xchg
subl
shlb
mov
cmp
lods
inc
arpl
push
mov
add
dec
or
int
xor
repz
mov
daa
scas
out
xor
jns
mov
or
and
jnp
mov
addr16
into
shlb
daa
sbb
xchg
mov
iret
jmp
dec
inc
jecxz
stc
cmp
inc
cld
xor
mov
cld
adc
lcall
and
aam
hlt
mov
divl
inc
cmp
push
inc
cltd
pop
dec
sub
sti
daa
jp
mov
sbb
in
jecxz
shr
adcl
aaa
jnp
lcall
lods
imul
pushf
sub
out
jne
jno
sbb
lods
push
jl
imul
mov
addb
lahf
or
icebp
hlt
fwait
repz
das
pop
roll
pusha
xor
scas
cmp
cmc
call
push
sbb
aas
jmp
dec
lds
inc
add
fsts
outsl
test
fmulp
icebp
push
insb
addl
xchg
pop
ret
cmp
fidivrs
loopne
stos
mov
loope
sahf
xchg
popa
js
xchg
in
dec
inc
cmp
enter
insb
stc
inc
cli
aaa
jbe
jns
mov
mov
scas
pop
jne
mulb
dec
xchg
out
pusha
aaa
xor
rclb
mov
test
sbb
mov
pop
sub
sbb
insb
add
mov
movsl
mov
testb
pop
mov
or
sbb
les
incl
lods
pop
rorl
push
xchg
cltd
icebp
add
sub
sbb
pop
shlb
xor
pop
fsubrp
test
sub
repnz
lods
jecxz
mov
aam
or
xchg
xor
and
add
inc
xor
mov
das
adc
dec
orl
inc
imul
mov
push
adc
sarb
push
sbb
fstl
xchg
xchg
les
fwait
imul
dec
inc
clc
xchg
jecxz
pop
push
jo
mov
inc
and
clc
jmp
fnstcw
fistpll
cmpsb
ja
mov
xchg
das
fdivrs
repz
in
jge
test
inc
jne
loop
rol
in
lods
insl
ljmp
jns
and
mov
testl
and
pop
mov
inc
push
and
inc
shrl
sbb
incb
imul
outsl
push
gs
out
ficoms
push
js
or
mul
outsb
cli
or
push
divb
fwait
xor
push
mov
nop
adc
fnstcw
inc
cld
mov
jmp
data16
push
lock
pop
inc
and
mov
cmp
outsb
xor
imul
push
rcrl
dec
shl
or
mov
dec
fisubl
insl
jg
cli
fdivl
add
dec
and
cs
lods
sub
xchg
jge
mov
push
and
sbb
popf
cmp
dec
mov
popa
addr16
out
add
int3
sahf
dec
orb
in
and
popf
jp
mov
dec
cld
into
fcomps
mov
and
dec
pop
mov
pop
cmp
insb
dec
inc
mov
dec
dec
dec
fsubrs
rcrb
out
mov
loopne
inc
pop
inc
addr16
push
mov
ficomps
mov
in
lods
mov
mov
pop
cmpsb
jmp
mov
les
das
cwtl
mov
cmc
jle
mov
dec
div
xchg
sarb
mov
out
add
mov
ret
xorb
pushf
mov
mov
lret
arpl
fsubs
cmp
add
pop
ret
push
cli
in
add
or
inc
fdivl
js
jns
inc
out
push
pop
cmp
cli
adc
aas
jne
and
adc
frstor
mov
clc
jb
scas
jae
mov
pop
and
dec
xchg
mov
push
add
xor
sbb
add
push
ret
sarb
mov
xor
pop
inc
xor
ret
movb
adc
ss
xor
call
pop
cmpsl
dec
dec
ret
mov
lods
fwait
mov
jo
jge
mov
adc
jns
cmp
cmpl
leave
mov
test
mov
cwtl
sbb
divb
scas
or
jg
xchg
or
jg
and
out
xor
cmc
cmp
out
cmp
push
add
mov
cs
pusha
icebp
call
dec
inc
movb
jmp
mov
into
sbb
pushf
cld
mov
adc
mov
jl
mov
arpl
pop
sub
sub
push
pop
cmp
out
addr16
push
jnp
jne
xchg
pop
cmp
pop
pop
clc
xchg
xchg
adc
inc
ljmp
or
sbb
jbe
stos
lock
xlat
push
test
mov
xor
lock
ret
lcall
jle
mov
sub
rcrl
jne
xlat
jo
cmp
test
inc
pop
sbb
movsb
lea
adc
aas
mov
or
outsl
sub
in
sub
cwtl
mov
mov
add
dec
out
adc
mov
sbb
test
jne
or
mov
fmull
cmp
fisubs
sub
jo
scas
sbb
add
xchg
inc
dec
pop
push
mov
jge
inc
mov
jmp
cmc
js
cwtl
ss
scas
into
mov
gs
sti
loopne
and
orl
subb
es
test
xor
push
add
and
xchg
mov
cmp
out
jg
cmp
cltd
dec
sahf
iret
lods
inc
fadds
xchg
lock
in
inc
cmp
push
xor
dec
xor
add
lock
pop
shl
outsb
or
fisubl
xor
sar
and
sbb
xor
jo
xchg
inc
jb
dec
lods
lret
aaa
jb
xor
out
mov
js
push
mov
mov
dec
sub
push
mov
inc
push
fwait
jo
mov
inc
or
xor
fistl
cmp
in
jb
scas
xchg
jle
out
pop
mov
push
sub
dec
dec
push
insb
add
pop
xchg
out
in
and
sbbl
mov
mov
inc
lds
sbb
leave
xor
ret
sahf
mov
stc
aas
mov
addr16
xor
ficompl
leave
cwtl
addr16
scas
sbb
xor
sahf
lret
mov
sar
clc
dec
mov
ljmp
mov
pop
pop
sbb
fsts
sbb
fsubrp
add
pop
sub
rcrb
cltd
shll
pop
xlat
inc
sti
mov
push
adc
lret
mov
fildl
js
adc
imul
stos
jno
and
mov
pop
mov
xchg
andb
test
adc
xchg
sbb
cli
negl
ja
fisubrs
repz
dec
jns
jle
cmp
mov
stc
or
push
shll
aas
int3
pop
or
dec
in
push
ds
mov
lds
or
add
test
mov
es
mov
mov
jle
aam
dec
jne
shlb
test
push
inc
inc
mov
fadds
enter
or
inc
push
mov
stc
sub
inc
imul
testl
sbb
lds
push
iret
imul
les
cmc
rorl
cmc
arpl
stos
sbb
mov
mov
sar
and
adc
mov
xor
jmp
ja
pusha
test
xchg
cmp
dec
mov
cmp
shlb
cmp
sub
sbb
xchg
test
push
xor
pop
pop
inc
pop
ror
sbb
jge
or
lret
pop
lds
stc
imul
inc
fmuls
faddl
cmpsl
mov
sbb
std
jl
pushf
ds
sahf
pusha
inc
int
inc
sbb
cld
jns
and
mov
dec
mov
movsl
mov
out
inc
fistpl
sub
add
dec
push
or
cmp
mov
or
fstp
fs
mov
add
stc
push
jnp
fnstcw
xchg
sub
fcmovnu
js
fdivp
and
push
mov
testb
jmp
sbb
mov
mov
jge
push
cmp
jae
sub
or
or
ret
loopne
push
mov
insl
sarb
push
cs
mov
iret
out
sbb
loope
mov
mov
call
xchg
push
in
inc
lds
outsb
adc
stos
test
sub
cwtl
insl
xor
mov
jmp
or
xchg
enter
lods
int
xchg
xchg
in
push
and
pop
rolb
jae
xlat
fimuls
sbb
mov
aad
add
rorl
cltd
xchg
in
out
aas
lock
push
cld
fs
mov
cmp
aaa
test
fwait
and
out
or
lock
mov
dec
push
push
mov
out
scas
bound
ja
leave
and
xchg
in
stos
imul
or
mov
fistps
adc
cld
sbb
iret
push
incl
sub
ret
sahf
jecxz
inc
pop
testb
lock
daa
jle
xor
mov
dec
hlt
sbb
push
aaa
lcall
popf
outsl
out
test
lret
adc
dec
incb
xchg
fistl
cmpsl
scas
cmpsl
and
insl
push
xchg
dec
nop
out
cmp
out
lret
xchg
and
and
jmp
lret
pop
test
jne
jno
xchg
dec
or
or
int
fcomps
cmp
arpl
mov
mov
stc
pop
mov
cmp
mov
insl
xchg
stc
jnp
outsw
in
loopne
hlt
int3
std
addr16
into
fstp
notb
cli
dec
mov
hlt
add
adc
pop
jb
outsb
les
xor
jp
es
aaa
neg
inc
mov
movsb
inc
add
sti
sti
jno
scas
out
push
mov
pop
enter
ud0
lds
jne
dec
xchg
aas
jge
fisttpll
inc
xor
mov
add
and
sub
push
ljmp
in
rcll
sahf
sbb
dec
pop
cmp
lods
movsl
cwtl
push
out
and
add
xchg
fsubrl
fcoms
inc
dec
mov
int
ljmp
mov
jno
xchg
sbb
sub
sbb
add
fs
mov
inc
mov
sbb
leave
out
fcom
lock
aad
jmp
cmp
shlb
dec
jmp
imul
dec
xchg
xchg
xchg
test
mov
mov
push
push
arpl
cmp
loopne
xchg
add
sahf
mov
dec
data16
ret
inc
jecxz
dec
repnz
je
sbb
mov
jmp
pushf
sub
xchg
mov
fstpt
mov
sub
mov
seta
es
addr16
pop
lcall
adc
fiaddl
xchg
lcall
push
xor
inc
push
push
cmp
and
arpl
es
icebp
push
mov
push
mov
pop
cmp
je
mov
lahf
add
shll
xchg
pop
xor
mov
xor
add
int3
mov
fs
cltd
xor
fldenv
cltd
out
repz
dec
popf
mov
dec
mov
pop
iret
xchg
and
imul
shll
adc
mov
je
in
stc
mov
js
repz
pusha
arpl
sub
pop
rorb
hlt
fs
or
or
mov
cli
lcall
outsb
pop
jae
leave
imul
jb
jne
xlat
movsb
ss
dec
xor
xchg
xor
je
inc
lock
faddp
and
stos
testl
ds
jg
mov
jno
inc
jecxz
xchg
mov
cld
sbb
xor
test
pusha
cli
leave
and
js
mov
daa
dec
shrl
out
rol
sub
sub
mov
sub
in
inc
sbb
cmp
jne
push
push
adc
xchg
cwtl
cmp
jg
lret
xchg
cwtl
aad
int3
div
lock
or
cli
test
pop
inc
loope
or
inc
mov
movsb
clc
adc
addr16
adc
pusha
mov
call
std
or
adc
loope
adc
je
xchg
fists
pop
add
push
je
jns
cmpsb
out
loope
push
lods
mov
std
mov
cmp
je
dec
mov
pop
clc
pop
dec
outsb
in
pop
loop
call
int3
sbb
lock
in
aam
dec
pop
cmp
ret
dec
cmc
inc
fsubs
pop
ss
xor
inc
sub
mov
pop
and
ja
jp
mov
hlt
rcrl
xchg
ljmp
stc
push
sbbl
dec
push
sbb
push
xchg
decl
or
test
std
push
fildll
mov
and
lds
es
roll
mov
in
les
jbe
mov
jle
into
out
adc
cmp
mov
sub
mov
shrb
shlb
mov
xchg
cwtl
bound
outsb
inc
add
pushf
push
jmp
ficompl
inc
ljmp
inc
xlat
xchg
in
in
mov
push
mov
clc
enter
rcll
cmp
push
xor
ret
xor
mov
decb
pop
jo
sbb
mov
adc
add
cs
andb
mov
enter
data16
push
gs
arpl
and
call
imul
dec
sbb
mov
or
push
dec
dec
mov
inc
jmp
mov
in
and
lea
mov
xchg
xlat
stos
adc
pop
pop
push
in
stos
out
or
sbb
sub
daa
pop
rep
push
mov
lods
cmovp
lds
int
sbbb
out
test
sbb
test
insl
hlt
fdivrp
addr16
cltd
mov
lods
fs
rcr
or
addr16
cmp
out
cld
lds
or
sarl
jmp
dec
fisttpl
inc
movsl
mov
mov
addl
mov
jns
hlt
push
fs
mov
sbb
pop
mov
into
mov
xor
daa
cwtl
es
gs
aad
cmpsb
cmc
or
loopne
dec
add
les
scas
ret
adc
repnz
adcb
ljmp
cmp
fsubrs
stc
adc
in
push
xor
stos
inc
pop
pushl
xchg
mov
enter
je
dec
xor
add
jge
in
add
pop
cmp
pop
out
dec
dec
shrl
stc
pop
dec
into
jl
jno
mov
fnstsw
js
xchg
pop
test
int
cmpsb
gs
test
bound
aaa
aad
out
fwait
out
sbb
fwait
ds
add
pop
mov
inc
cmp
lock
inc
inc
cmpb
jp
clc
mov
mov
mov
jecxz
sbb
lar
insb
das
repz
or
mov
adc
inc
icebp
mov
es
adc
push
dec
push
inc
loop
mov
jg
popf
sbb
sbb
dec
lods
cmp
scas
fimuls
mov
jbe
adc
adc
fcmovnb
xchg
test
lds
mov
shlb
and
cmp
sahf
mov
cmp
addr16
mov
pop
jae
pop
fildl
xchg
rclb
mov
scas
out
inc
repz
cli
fistl
mov
pop
mov
lods
out
push
sbb
xchg
cmpsl
ss
stc
cmp
mov
es
push
mov
sbb
adc
and
inc
cmpsb
lods
cmp
gs
pushf
jb
out
sbb
flds
or
imul
arpl
andb
cs
sub
and
loopne
jmp
sub
call
and
and
mov
push
sarb
mov
mov
jae
xchg
jecxz
popf
pop
sub
xchg
xchg
cwtl
rolb
fdivrs
xor
stos
xor
in
loop
inc
movsl
dec
fs
in
cwtl
sbbb
jb
pop
and
or
xor
loop
xlat
adc
cmpsb
ficoms
push
test
cmc
dec
add
gs
adc
shlb
fldl
push
into
mov
adc
or
inc
cmp
pop
ss
scas
inc
xchg
push
leave
int
sbb
pop
add
jbe
mov
pop
push
push
and
inc
iret
es
cwtl
pop
fldcw
dec
jns
ror
xchg
dec
push
imul
out
cld
inc
sti
xchg
pop
stos
cmpsl
test
push
push
jp
add
out
scas
insl
repnz
lcall
sbb
sub
into
mov
inc
push
movsl
lahf
pop
es
into
dec
ja
ja
cmp
movsb
push
mov
insb
xor
icebp
dec
add
in
insb
out
sub
out
fadds
pop
andb
and
xchg
xorb
sub
cmp
mov
or
outsb
inc
mov
jmp
adc
mov
pop
ret
in
push
cmp
add
mov
cmpsb
jp
decb
push
push
inc
mov
shrb
mov
jl
pop
xchg
dec
dec
jae
scas
jnp
aam
mov
fs
xor
or
cmc
scas
test
aad
out
gs
dec
in
cs
out
push
or
inc
lock
mov
push
mov
cwtl
push
dec
mov
scas
inc
xor
icebp
leave
std
pop
mov
xor
in
ja
frstor
or
sub
jno
mov
movsl
test
popa
sahf
or
bound
sub
dec
cmp
xchg
in
inc
js
dec
fimull
jnp
movsb
and
shrb
mov
lds
rcrl
add
jae
and
xor
into
mov
out
movsl
rclb
or
pop
jnp
jb
jb
addr16
xchg
push
ja
sub
jmp
lcall
inc
shrl
mov
out
pop
loopne
outsb
mov
jg
popf
pusha
add
mov
aas
lods
or
dec
mov
lea
mov
mov
mov
or
lret
cmpsl
mov
xchg
adc
add
ret
jne
je
dec
push
jns
ret
jb
lock
test
adc
enter
cmc
mov
rolb
mov
ret
movsl
xor
push
xchg
inc
lahf
push
in
jbe
push
or
jmp
cmp
xchg
push
pop
das
pop
xchg
mov
in
in
mov
or
fnstenv
stos
mov
adc
or
lds
jno
cltd
hlt
push
loopne
xorl
dec
xchg
jbe
xchg
loop
sbb
dec
rorb
sahf
test
fisttps
lock
add
sbbb
push
idivb
ja
push
and
js
pop
stos
dec
insb
xchg
int3
mov
push
dec
or
iret
push
mov
test
sahf
das
popf
mov
xor
fwait
or
addr16
sbb
mov
xchg
mov
adc
sub
frstor
xchg
mov
pop
sbb
cmc
shrb
inc
xor
call
or
xor
repz
cld
and
lods
push
mov
jg
xor
in
lret
dec
ret
xor
xchg
adc
xchg
shll
lcall
pusha
pop
iret
mov
out
dec
or
test
mov
das
sub
ret
mov
and
dec
dec
sub
dec
shlb
adc
cmp
xchg
aaa
dec
push
xchg
mov
vshufps
mov
bnd
inc
jns
sbb
outsb
jo
mov
es
cmp
addl
mov
lods
les
jb
decb
jne
cwtl
adc
rol
dec
add
inc
push
pop
jmp
gs
mov
mov
push
adc
aam
lea
pop
jno
enter
test
loop
xchg
sbb
push
test
dec
idivl
jo
test
cmp
shrb
xchg
adc
pop
xchg
mov
push
subb
mov
inc
decb
sbb
ror
dec
repz
das
loope
mov
add
push
pop
in
add
imul
cmpsl
enter
jne
jbe
xchg
add
push
add
sub
xorl
xchg
outsb
andl
push
adc
xlat
xor
movsb
inc
dec
jge
test
iret
push
dec
jge
scas
mov
dec
int3
insb
mov
das
xchg
out
sub
aaa
mov
xchg
out
or
test
scas
dec
xchg
sbb
cmc
lock
inc
and
adc
cmpsl
lret
test
lret
mov
aad
cltd
dec
in
test
mov
fs
xchg
call
and
ljmp
scas
jmp
inc
jle
out
mov
and
jg
mov
