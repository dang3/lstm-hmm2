mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pop
cld
call
test
je
xor
jmp
push
push
push
push
push
add
xor
mov
or
cmp
je
call
in
push
push
call
add
pop
pop
inc
or
movl
pushf
es
pushl
mov
cs
in
out
icebp
adcb
push
push
pop
cmp
dec
ret
test
out
cltd
shlb
push
sub
daa
push
mov
call
push
push
jp
jl
add
mov
or
bound
bswap
ret
add
or
push
push
push
mov
jb
inc
xor
push
dec
out
xchg
cmpsl
sti
push
mov
inc
adc
pusha
mov
push
loop
repz
pushl
sub
negl
mov
xchg
ja
js
sbb
dec
aad
push
push
int3
ss
push
cld
add
jbe
jmp
dec
testb
loop
std
or
outsl
push
mov
subb
add
les
imul
mov
and
add
mov
fucomi
xchg
into
push
sbb
enter
or
inc
pop
xor
incl
movsl
lea
pop
pop
pop
leave
ret
mov
jp
ja
inc
repnz
fsubs
and
mov
test
jp
lock
jae
xchg
sbb
adc
sbb
adc
add
mov
das
jae
push
sbb
call
sbb
mov
mov
add
mov
pop
rolb
push
add
jmp
push
jbe
movsb
push
cmpsl
jne
cmp
pushf
inc
xor
push
push
mov
movmskps
or
movsl
jne
test
mov
push
dec
je
jnp
mulb
sbbl
jnp
xor
ret
push
sbb
inc
loopne
call
mov
call
into
ljmp
mov
add
je
addb
push
hlt
xor
xchg
test
or
add
je
fdivr
push
mov
sub
mov
push
adc
stos
jle
adc
push
ss
icebp
mov
and
mov
aam
loopne
xor
cmp
push
push
mov
xor
lahf
mov
jmp
sbb
cmpl
xlat
loop
stos
incb
mov
xlat
cwtl
sbb
jb
sub
pop
pop
push
enter
daa
rclb
push
add
mov
movb
ss
cmp
adc
add
pop
push
push
push
mov
les
cmp
cmp
xchg
add
clc
lods
js
jecxz
mov
inc
call
mov
mov
jne
and
call
jl
and
lock
xor
mov
pusha
mov
movsl
xor
repz
sub
add
mov
dec
ret
pusha
push
clc
sbb
mov
lcall
movsb
pushf
xlat
mov
jno
outsb
sahf
and
adc
mov
out
out
adcl
cmc
cmpb
add
jne
cmp
push
cmp
mov
sbb
int3
add
push
jmp
dec
movsb
jns
pop
cmp
jmp
pop
xchg
int3
cs
mov
push
push
in
push
add
in
jge
mov
jne
mov
hlt
mov
addb
stos
mov
dec
dec
inc
mov
mov
stos
lea
jmp
xor
pop
inc
sub
push
mov
pop
js
imul
pop
xchg
lock
inc
adc
adc
lea
mov
adc
mov
dec
push
clc
rolb
add
ret
jne
push
nop
push
jmp
push
je
je
insl
hlt
inc
add
jns
leave
fisttpl
mov
and
pop
pop
fwait
or
jno
xor
sbb
push
push
and
fcoms
jbe
inc
loop
sbb
insl
inc
dec
jmp
imul
xchg
add
pop
inc
loope
push
js
mov
xchg
ret
mov
cld
iret
dec
xchg
pusha
adc
push
loop
test
cmc
add
or
push
mov
mov
sti
cmp
jg
loopne
nop
leave
vxorps
cltd
lret
shl
popa
pop
daa
push
and
mov
mov
aam
add
cltd
pop
idiv
cmp
je
mov
mov
popa
in
sbbb
je
push
add
xor
mov
mov
push
adc
add
mov
or
fcomps
in
aam
cmp
loope
cld
out
push
jns
dec
push
pop
jo
inc
pushf
dec
ljmp
lea
jnp
cmp
test
dec
mov
cmp
sub
xor
fadds
xor
add
loop
fs
adc
lret
out
sub
hlt
mov
jl
cmp
jmp
addb
mov
mov
sbb
int3
mov
lea
cmpsb
pushf
data16
cmp
inc
mov
push
push
mov
mov
sub
mov
mov
pop
pop
cmp
cmpl
dec
cmp
movsl
enter
cmpsb
and
lds
int3
mov
jmp
adc
sbb
jns
daa
pop
insb
xor
xlat
sub
imul
pop
in
rol
stos
mov
xor
mov
xchg
bound
scas
pop
lods
mov
mov
cmp
push
mov
das
hlt
inc
sbb
mov
add
cld
rep
adc
les
je
mov
jbe
add
push
notb
push
hlt
mov
push
mov
int3
sarb
add
sbb
jle
or
sbb
bound
test
push
clc
push
push
popa
xorb
fmull
jmp
and
sbb
xor
je
fidivs
dec
mov
push
out
loop
inc
mov
mov
add
pop
and
add
inc
fcoms
mov
cmp
aas
sbb
test
xchg
push
test
fadd
pushf
mov
push
lds
bnd
and
jmp
repz
add
sbb
jmp
mov
add
jmp
push
mov
pusha
movsb
jne
adc
test
sbb
push
enter
push
lret
push
hlt
pop
out
mov
or
jno
cmp
mov
aad
adc
mov
repz
sti
popa
insl
push
int3
std
jb
call
dec
nop
aas
inc
cmp
sbb
pusha
adc
or
aam
push
jl
jmp
xor
push
or
pop
push
adc
int3
jns
pop
mov
mov
cmp
movb
int3
ss
nop
insl
icebp
icebp
cmpsb
add
popf
aad
in
in
out
nop
int
leave
adc
xor
mov
mov
lods
push
aad
ds
in
subb
inc
add
and
pop
inc
adc
dec
in
mov
faddl
je
popa
mov
push
push
icebp
add
lcall
lods
mov
rcll
in
arpl
ljmp
aad
call
fildl
icebp
push
mov
sub
push
cwtl
hlt
in
cld
cmp
cmp
out
jo
mov
cmp
pop
lret
pop
rcrl
push
pop
dec
popa
dec
mul
int
sub
cmpb
into
fiaddl
outsb
fldenv
jne
loop
and
shr
inc
jg
lahf
in
in
in
push
jae
fsubrp
inc
cld
nop
enter
adc
mov
mov
jmp
movsl
movsw
mov
add
pop
ljmp
push
cmp
rcrb
fsubr
jge
jl
das
orl
push
dec
sbb
pusha
cmpsb
xorb
push
push
push
cltd
jmp
outsb
adc
push
and
jl
jp
in
pushf
push
adc
xor
jb
xchg
add
mov
les
push
loopne
jno
pop
in
loopne
ret
loope
xor
mov
adc
rorb
mov
push
sbb
ds
mov
lret
or
xor
add
pop
sahf
xchg
cmp
xor
jnp
and
or
out
cld
push
mov
add
sub
insl
in
fimuls
jg
xor
inc
sbb
pop
pusha
sbb
add
addl
xorb
insb
push
jmp
in
lret
lock
nopl
int3
sub
test
or
orb
dec
cmc
mov
cmp
imul
or
push
mov
mov
push
hlt
jg
inc
xor
cmc
or
push
mov
xchg
pop
dec
mov
sbb
push
push
push
pop
add
mov
hlt
cmpl
insb
add
xchg
rorb
les
dec
push
orl
movsb
pop
in
push
inc
hlt
inc
add
dec
pushf
and
jae
sbbb
orb
push
add
xor
or
xor
mov
aam
sub
sahf
mov
sbb
popa
lret
inc
in
out
mov
enter
pop
inc
xor
jle
add
popa
mov
add
jp
in
xchg
sub
and
data16
les
pusha
lds
push
sahf
popf
lods
push
jecxz
movsl
mov
leave
lock
xor
mov
adc
add
inc
inc
inc
add
mov
mov
add
sbb
or
rcl
xor
daa
jg
add
fwait
rolb
cmp
je
push
and
int3
jp
xor
xchg
xchg
insb
cmp
jae
adc
push
neg
bound
adc
and
enter
jmp
sbb
cmc
ja
movups
push
imul
jne
insb
fsubs
sub
inc
iret
xchg
je
push
setnp
mov
add
dec
inc
add
insl
push
or
ret
test
out
xor
push
push
dec
push
aas
push
sbb
sar
jb
jns
rorb
xchg
andl
fimull
mov
popa
lock
lock
mov
push
dec
push
sbb
mov
aam
mov
loope
aaa
in
push
or
lods
xchg
lret
pusha
cli
add
lea
inc
fldcw
mov
push
push
jp
jmp
jae
xchg
cmpsl
xchg
pop
lcall
sbb
mov
adc
push
cmpl
adc
iret
push
pop
shlb
shr
or
arpl
mov
les
movsl
dec
mov
mov
jmp
mov
xchg
push
and
push
ficompl
add
std
decb
mov
mov
inc
inc
jb
push
shrb
jl
push
dec
ljmp
clc
pushf
clc
cmpsl
rorl
xchg
add
sbb
mov
or
or
outsl
orl
jnp
xor
cli
add
shl
mov
sub
enter
pop
dec
add
jecxz
iret
mov
mov
jns
rcll
pop
xor
xor
sbb
movsb
data16
xlat
pushf
or
daa
test
xor
mov
jno
cmp
push
call
push
jns
cmp
mov
and
mov
xor
xor
jecxz
lahf
fcoms
outsb
stos
inc
shrb
int3
in
inc
jmp
cli
fs
js
iret
fidivl
dec
fidivl
fldl
cmp
jl
mov
dec
push
sbbb
mov
push
lds
out
lods
and
adc
in
sbbl
push
push
dec
repz
lock
inc
mov
mov
in
es
push
sub
test
mov
out
test
fmull
pop
pop
rorl
mov
mov
or
pop
mov
push
jb
xor
test
inc
sarb
push
push
shrb
jne
mov
test
dec
stos
or
mov
ret
cltd
fwait
daa
xor
lods
or
pop
sbb
jo
ret
test
nop
enter
xor
test
aad
scas
xchg
mov
cmp
push
lds
cld
arpl
pushf
in
xor
adc
cmp
lea
fdivrl
and
rcl
rcll
into
adc
imul
xchg
pop
clc
or
loope
les
sub
fmul
lea
xchg
xor
subl
or
aam
and
jl
push
or
cld
pop
imul
cmp
addr16
mov
test
jb
test
jb
lods
testl
pushf
xchg
dec
push
pop
mov
jl
test
sub
je
dec
or
mov
pop
jmp
xchg
cmp
adc
mov
dec
les
sahf
or
pop
pop
sbb
pop
or
dec
add
inc
lea
add
cmpsl
sub
aam
push
adc
add
push
notb
pop
insl
push
mov
cs
outsb
rcl
inc
inc
pop
js
fdivrs
pop
fsubr
jns
inc
mov
xor
mov
push
push
push
call
cmp
and
ret
cmp
sbb
xor
aam
rclb
cmp
cmp
inc
out
in
dec
test
enter
push
pushl
rclb
andb
shl
push
cmp
loop
icebp
or
into
aad
fsts
test
data16
filds
rcl
inc
in
movb
cmp
jne
and
dec
ret
lock
dec
outsb
inc
in
mov
pop
stc
jno
inc
jbe
jbe
movsb
or
imul
je
pop
cmp
xlat
push
push
fidivrs
fstpl
cmp
rclb
mov
je
call
xor
test
enter
insl
bound
test
mov
loopne
mov
jge
rcl
sbb
repz
out
jmp
int3
mov
imul
adc
adc
sbb
or
xchg
push
pop
add
enter
imul
add
jp
pop
movsb
cmp
sbb
push
je
popa
and
jmp
push
pop
clc
enter
lock
in
gs
repnz
add
and
push
push
push
ja
fmull
insb
pop
jno
cmp
push
cmp
dec
testb
push
jne
mov
pop
mov
add
inc
cltd
and
pop
cmp
loope
adc
jnp
pop
xchg
insl
add
and
pop
addr16
loop,pn
jge
jge
cld
cld
cmp
and
jne
or
lock
and
or
popa
int3
dec
push
pop
or
jnp
es
xor
std
fmull
jno
jmp
mov
rclb
enter
inc
fwait
jecxz
push
imul
mov
add
xor
cmpsl
call
and
sbb
add
adc
inc
inc
enter
call
jae
push
xchg
jnp
jbe
xor
adc
lret
aam
outsb
adc
xchg
jo
sub
scas
cmp
jne
insb
mov
push
pop
xor
fisttpl
or
out
dec
fidivrl
ret
xor
sub
mov
push
adc
and
sbb
dec
dec
popf
ret
popa
decl
and
aam
add
lea
xor
pop
inc
push
shlb
push
sbb
sub
mov
cltd
ja
inc
mov
sar
pop
jae
xchg
adc
sub
jmp
inc
testl
fmul
inc
sbb
sbb
ret
push
mov
push
push
nop
ja
mov
out
and
xor
loopne
and
sbb
sti
daa
aad
mov
mov
sub
xchg
in
fdivrl
mov
add
loope
sbb
mov
dec
ret
cmpl
push
dec
jo
sbb
mov
aam
xchg
in
call
repz
arpl
je
mov
push
dec
shlb
aam
xlat
ret
lcall
lea
dec
pop
dec
xor
xor
pop
int3
cmc
arpl
xor
in
into
push
cmp
call
out
push
int3
sbb
das
mov
mov
gs
lds
push
sarb
lods
mov
mov
pop
xor
mov
jecxz
jl
loope
imul
add
cltd
cwtl
aad
lret
xchg
sub
cmp
je
cmpl
jo
xor
call
call
pop
pop
lock
fwait
sbb
inc
fwait
pop
push
pushf
sbb
fwait
je
and
jmp
and
dec
addr16
xchg
adc
adc
shlb
push
outsb
test
cmp
rorb
pop
or
dec
out
lcall
shrl
das
or
inc
pop
add
cs
sbb
sbb
cmp
repz
sbb
sub
or
xchg
jne
int
adc
fs
fs
rclb
and
jb
cld
loop
pushf
inc
add
cwtl
inc
adc
cwtl
inc
xor
call
jecxz
fs
xchg
cmp
sbb
add
push
sbb
gs
inc
test
outsb
push
push
sbb
popa
push
pop
lods
xor
jnp
jbe
insb
cmp
hlt
nop
adcl
dec
dec
mov
sbb
mov
pop
pop
mov
out
bnd
cmp
int3
aas
jmp
shlb
aas
xchg
movsb
xlat
jle
in
cli
xor
pop
add
sti
jne
mov
inc
dec
into
pop
gs
mov
lods
pop
pop
int
push
hlt
mov
cli
hlt
cwtl
inc
fwait
aam
je
xchg
push
repz
sub
fsubrl
or
out
or
mov
and
push
or
push
ss
in
jl
je
dec
push
outsb
and
jbe
or
sbb
fdivs
push
out
lock
xchg
dec
outsb
cmp
pop
jne
push
out
and
cmpsb
sub
icebp
lahf
les
xchg
js
and
pop
jge
pop
mov
xlat
jmp
xor
dec
sbb
es
jl
cld
ja
jecxz
mov
bound
or
es
and
pop
cld
enter
pop
xor
push
xchg
and
and
aad
rolb
sbb
call
dec
imul
push
push
sahf
xor
sbb
add
xor
iret
adc
lods
cmp
insb
sub
lahf
mov
xor
xchg
aaa
pop
idivl
xchg
fisttpll
ds
jne
mov
and
test
lret
cmp
jb
xor
cld
aam
cmpsl
cmpsb
cld
cmp
bound
push
lock
movsb
lea
pop
arpl
cmp
call
call
mov
add
mov
pop
pop
xor
pop
jmp
enter
cmpsb
jecxz
dec
push
js
sub
arpl
mov
in
adc
in
cmp
dec
mov
cmp
jno
push
add
bound
test
jg
pushf
orb
inc
xor
cwtl
mov
xchg
test
lock
icebp
cmp
loope
add
xor
sti
add
jo
push
nop
mov
jae
pop
cltd
pop
dec
inc
or
shll
inc
sbb
xchg
ret
and
inc
sahf
pop
xor
pop
jns
imul
fmull
aaa
mov
jle
outsl
das
dec
mov
mov
sub
jae
jl
dec
and
mov
adc
push
jg
jp
fwait
lret
test
arpl
or
sarb
mov
cltd
lret
test
jge
dec
outsl
cwtl
inc
adc
insl
int3
fstl
push
mov
mov
hlt
or
ljmp
cwtl
push
test
aaa
fists
and
mov
loop
lods
hlt
xchg
adc
stos
repz
hlt
call
cld
outsb
add
or
jne
push
lds
icebp
les
aad
cld
repz
std
fstps
hlt
dec
cwtl
add
push
push
push
fiadds
es
pop
scas
push
sbb
andb
push
and
xlat
popf
mov
iret
push
and
mov
test
out
repz
test
sbb
and
jge
push
push
push
dec
push
jge
into
mov
push
sub
jecxz
clc
push
iret
cmpsl
test
into
mov
shll
push
xchg
das
inc
lds
hlt
mov
push
add
jns
push
xor
sbb
jg
sar
mov
iret
movsb
ss
lahf
sub
out
leave
xor
cs
stos
and
xor
jge
mov
leave
mov
daa
je
xor
cmp
fdivr
push
mov
pop
daa
ret
mov
cmp
push
mov
push
nop
inc
push
push
jns
xlat
mov
ja
lahf
mov
push
inc
in
loopne
fisttpl
hlt
in
outsb
inc
inc
int
cmpsb
cld
int3
dec
int
push
sub
aad
js
aam
hlt
and
jae
or
adc
add
je
push
add
outsl
sub
into
mov
sub
mov
idivb
adc
push
or
sub
aaa
test
push
jbe
inc
pop
pop
mov
fs
stos
or
push
dec
lret
add
psubsb
inc
cmp
xor
cmp
push
lahf
push
cmp
dec
pop
cmp
pop
mov
je
push
mov
in
insb
push
inc
fiaddl
call
orb
sub
fdivs
cmp
add
sbb
pushl
jns
jmp
sbb
fcomps
mov
std
mov
pop
xchg
adc
or
xor
enterw
cmpl
xchg
inc
clc
sub
push
cmp
insb
rcll
fildll
into
stos
inc
jg
adc
in
mov
mov
push
call
or
and
add
cmp
cmp
into
inc
xchg
movsl
mov
pop
adc
mov
sbb
fcompl
push
push
mov
push
sub
sbb
dec
push
mov
je
jle
sbb
orl
popf
inc
push
mov
inc
arpl
cld
lock
pop
test
movl
out
push
das
aam
sbb
mov
push
xchg
mov
or
mov
jae
je
andb
in
sarb
shrl
dec
adc
inc
add
or
imul
adc
insl
xor
adc
jno
inc
and
fs
adc
pop
xchg
mov
xor
and
mov
dec
daa
inc
push
cmp
enterw
cli
pop
dec
push
movsl
mov
sbb
xchg
cmp
pop
add
push
cli
push
outsl
inc
fcompl
add
push
imul
popf
clc
push
push
cmp
jp
fdivrl
adc
add
xchg
and
dec
adc
dec
push
push
addr16
xorb
sbb
and
mov
xchg
test
cmc
xchg
arpl
inc
or
mov
in
int
push
xor
mov
aad
pop
push
and
push
ja
add
data16
xorl
sbb
lret
cmp
in
dec
cmp
les
repnz
or
jno
and
inc
dec
cmpsb
jb
lods
out
sbb
ds
sub
jns
pop
pop
add
push
mov
popa
xchg
mov
cmp
clc
cld
lock
mov
add
test
inc
imul
sbb
lcall
idivl
push
out
or
movsl
mov
mov
cld
cld
cmpb
repz
jne
shl
add
hlt
clc
pop
shrb
shll
sbb
add
add
shll
add
xchg
lods
inc
mov
xchg
leave
js
dec
pop
cld
dec
pop
sbb
ja
mov
sub
loopne
xchg
push
or
sub
in
mov
push
mov
test
mov
sti
setg
in
fmuls
push
pop
lea
das
mov
jne
movl
cmp
iret
adc
rorb
fmuls
addl
and
xchg
xlat
into
scas
push
jae
sub
je
clc
xor
shlb
cmp
pop
jmp
imul
xchg
cmp
nop
les
push
ja
je
inc
sbbb
mov
jbe
inc
fiaddl
inc
das
loop
dec
sbb
lret
lret
sbb
pop
shl
push
test
out
mov
subb
inc
mov
push
xchg
call
test
adc
mov
dec
push
shlb
mov
movsb
mov
jecxz,pt
inc
sbb
clc
pop
lea
loopne
ffree
push
pop
add
je
test
dec
jg
pop
or
add
test
mov
movsb
in
cs
mov
shl
dec
pushf
rorl
lea
cwtl
add
lea
call
or
daa
dec
push
cmp
cmpsl
ret
sub
iret
aas
jbe
int3
add
dec
fidivs
mov
adc
out
aam
xor
aam
push
mov
push
or
fst
mov
jb
push
add
mov
mov
arpl
loopne
outsb
int3
push
pop
cmp
jb
xchg
xchg
ja
push
xchg
les
mov
test
ret
inc
sbb
add
jno
or
sti
mov
arpl
movl
test
fcoml
cmpsl
jl
in
insb
xchg
xlat
sbb
inc
pop
outsl
mov
shrl
add
xor
mov
jbe
hlt
andl
add
jecxz
dec
fdiv
adc
enter
lods
movsl
add
call
jmp
lds
pop
pop
rolb
fimuls
push
or
jmp
cltd
xor
les
adc
leave
adc
ror
nop
mov
xor
gs
xchg
ja
adc
mov
jmp
pop
xlat
inc
fadds
xor
stc
cmp
dec
pop
sub
pop
lcall
pop
lcall
fistpll
push
andl
into
fsubl
pop
test
test
push
sbb
pop
add
cmp
jl
jmp
push
imul
push
sahf
pop
dec
xchg
hlt
and
loop
push
jle
push
xchg
push
sub
insl
rcl
incl
sub
nop
scas
mov
test
xor
push
jle
jmp
lea
jp
movsl
push
in
jno
add
andl
sub
jb
mov
dec
idivb
pushf
out
lock
fsubrs
ret
push
sbb
sbb
stc
or
fistpll
fidivrs
movzwl
mov
push
cli
call
lock
push
xchg
pusha
push
push
sbb
xchg
dec
mov
mov
push
mov
ss
inc
popf
adc
inc
loope
adc
leave
mov
add
fidivrl
dec
and
sbb
push
sbb
adc
sbb
pop
inc
push
cmp
inc
cmp
push
adc
negb
cmpsb
test
cmp
int
xchg
add
pop
pop
push
jg
mov
in
xor
pop
cmp
jo
jl
adcb
mov
push
push
or
mov
decl
test
xchg
inc
scas
mov
imul
clc
or
sub
in
jge
push
mov
fmuls
daa
mov
push
pop
dec
sbb
inc
sbb
fcmovnu
and
cmpsb
in
ret
inc
sbb
jne
fisubl
and
cmp
fstpt
adc
call
or
sbb
repnz
adc
test
mov
mov
push
fsubs
ja
pushl
fs
inc
xchg
je
repz
sbb
or
insb
jb
push
sub
add
iret
nop
jnp
sbb
jb
xchg
adc
jecxz
sub
test
push
pop
dec
fdiv
push
lock
cmp
loopne
fimull
xchg
mov
cmp
out
mov
cmpsl
stc
or
ja
gs
cmpl
xor
cld
cmp
mov
clc
subb
arpl
test
rorb
lock
leave
andb
push
scas
pop
jp
sub
or
fwait
mov
imul
jno
xchg
cwtl
mov
mov
hlt
in
push
xchg
inc
dec
insb
shll
ret
add
and
int3
push
hlt
and
mov
sbb
test
int3
je
ja
jecxz
sti
push
loopne
add
push
add
imul
add
or
stc
mov
out
add
push
jnp
push
and
add
lea
add
push
jne
shll
sbb
and
mov
dec
sub
and
mov
fsubrs
mov
mov
test
int3
and
cmp
lea
add
lea
aas
add
mov
push
push
push
lods
xchg
sbb
fwait
xor
mov
fwait
cmpsb
sbb
mov
in
cmp
mov
and
lret
gs
push
xchg
cmp
leave
mov
xchg
insb
jne
mov
lcall
mov
je
test
js
mov
adc
loopne
mov
sti
pop
test
mov
xchg
aam
inc
jae
xor
or
dec
ja
or
addr16
push
cltd
push
fisubrs
mov
sub
push
or
test
mov
bound
ss
inc
cli
andb
or
add
xor
lds
clc
je
jp
push
iret
popf
sub
and
mov
fiadds
cltd
adc
in
add
insb
inc
clc
dec
adc
addb
jg
mov
inc
adc
loopne
sbb
mov
mov
popa
and
inc
inc
push
adc
imul
mov
sub
sbb
sub
sub
push
push
jno
int
cmp
adc
sub
or
sub
pop
jae
pusha
ret
mov
sahf
movsb
outsl
pop
cmp
js
outsl
sbb
inc
fcoml
fiaddl
pop
loop
je
sub
fabs
inc
cld
ficoms
int
adc
lret
inc
sahf
cmp
or
cld
adc
and
cmp
add
fs
mov
cmp
pop
addr16
pushf
pusha
push
jb
pushf
inc
cmp
inc
mov
int3
xor
add
cmpsl
sbb
adc
mov
je
popf
add
bound
arpl
clc
or
hlt
push
hlt
add
aaa
xchg
inc
hlt
xor
pop
cmpb
clc
mov
nop
scas
cld
push
add
lea
and
mov
stos
push
addr16
dec
jbe
push
mov
jno
cmp
fildl
ljmp
xabort
je
jge
dec
mov
sub
xchg
push
addl
test
add
outsb
dec
ljmp
jno
xchg
dec
push
push
ss
push
dec
popa
inc
in
add
mov
push
jmp
adc
inc
push
adc
push
pushf
insb
add
and
cmp
clc
lods
push
inc
hlt
cmp
lahf
add
sbb
pop
hlt
lea
scas
mov
xchg
add
mov
mov
push
xchg
iret
shlb
cmp
jo
and
and
xor
shr
out
inc
add
add
lock
dec
jne
pop
adc
pop
not
ret
xor
fmuls
sbb
mov
cmpsb
or
sub
inc
push
xor
adc
sahf
test
cwtl
or
stos
adc
push
adc
sbb
mov
add
xor
and
fcoms
push
mov
mov
push
ret
mov
pop
les
pop
inc
lock
fs
inc
mov
sub
and
lock
mov
nop
popa
xor
mov
andl
fisttpll
repz
sbb
push
jp
add
mov
aad
std
insl
or
mov
rep
in
inc
test
push
rorl
sub
sub
dec
imul
ret
jge
sbb
adcl
insb
test
adc
pop
into
addr16
push
push
into
les
dec
loopne
push
cmp
and
stc
dec
scas
mov
stos
xchg
mov
mov
cmp
stos
xchg
mov
les
daa
jle
insb
cmp
push
pop
inc
add
add
mov
jne
insb
mov
stc
adc
pop
fcoms
loope
mov
test
inc
jbe
add
negb
sub
xchg
xor
mov
mov
jge
jne
push
jnp
push
sbb
push
mov
push
add
jno
rcl
cmp
fcompl
pop
add
adc
push
sbb
inc
cmp
in
roll
stos
notl
roll
or
sbb
and
push
pop
movsbl
mov
stc
inc
jo
inc
mov
xor
push
fdiv
lds
rcll
add
in
sar
inc
mov
mov
pushf
inc
icebp
cld
mov
or
mov
cmp
lods
xor
out
movsb
add
jmp
and
push
mov
cwtl
mov
push
fdivs
test
ret
pop
cmp
je
pop
jne
push
add
push
mov
and
mov
and
jb
popa
lods
push
jo
xor
cmpsl
push
xor
mov
inc
mov
sub
sbb
aas
rorb
sbb
xor
sbb
mov
adc
jge
mov
cmc
sub
aad
sbb
fcoms
pop
cmpsl
jns
rorb
push
xor
jno
push
lret
or
inc
dec
xor
mov
push
cltd
add
xchg
leave
movsl
les
push
mov
lods
leave
inc
cmp
mov
ljmp
mov
inc
and
add
pop
jg
mov
mov
hlt
cmpsl
push
xlat
adc
gs
adc
mov
sub
pop
cwtl
adc
jo
imul
adcl
xchg
inc
dec
xchg
inc
push
push
pop
lods
aad
daa
sub
adc
mov
daa
cli
pop
mov
cmp
pop
adc
std
pop
and
cmp
cltd
div
adc
push
dec
push
int
sub
push
mov
out
push
cmp
cwtl
inc
push
popf
or
add
cld
xchg
mov
dec
mov
insb
lods
xchg
cmp
mov
xchg
cmp
out
xor
nop
sbbl
lcall
jle
push
outsl
push
addr16
popa
test
clc
and
fcom
push
xchg
pop
hlt
bound
adc
jmp
aad
loope
push
xchg
push
call
pusha
inc
mov
test
cld
and
dec
sbb
popa
jb
add
or
sub
push
pushf
lahf
mov
pop
xchg
in
ficomps
loopne
jmp
adc
cld
mov
jae
or
in
xor
xchg
add
icebp
ret
jo
movsl
jl
inc
cltd
insb
std
mov
add
movl
pop
aaa
je
test
hlt
neg
mov
dec
inc
ds
push
cwtl
js
sbb
ficompl
gs
adc
aam
loope
mov
addr16
mov
test
ret
or
adc
and
dec
test
push
jl
add
xchg
popa
jbe
fcoml
xchg
inc
dec
inc
enter
dec
push
out
loopne
add
rclb
movsl
scas
rol
push
fists
lock
into
test
imull
add
stos
mov
inc
int3
inc
pop
dec
lret
adcl
fadd
popa
jge
pop
rcl
xorb
or
push
pop
enter
cwtl
adc
bound
rcrb
or
and
xor
xor
or
cwtl
mov
add
gs
stc
add
push
push
outsl
adc
cmp
push
push
fbstp
dec
and
mov
cmp
add
ficompl
rolb
pushf
push
add
mov
inc
mov
adc
aaa
xchg
cli
sbbb
adc
xor
cwtl
mov
cltd
mov
add
pop
adc
das
enter
enter
push
jnp
call
ret
call
push
jmp
out
xchg
mov
and
mov
in
test
or
push
icebp
fmull
loop
std
mov
xchg
push
out
test
and
scas
mov
ret
call
sti
inc
enter
push
mov
push
pop
jmp
out
int3
push
pusha
sahf
xlat
inc
arpl
andb
ljmp
dec
shrb
sahf
cmp
xchg
loope
adc
push
adc
push
and
bound
lret
inc
loop
les
jmp
inc
jp
pop
sbb
imul
sbb
push
cmc
push
xor
add
js
mov
iret
adc
pop
clc
dec
adc
je
dec
adc
add
or
ja
and
fmuls
cld
mov
adc
aad
shrl
sub
test
mov
inc
sbb
xchg
and
and
adc
or
mov
cltd
idiv
popf
adc
out
addl
mov
dec
pop
lea
push
sub
sbb
mov
test
rorb
dec
adc
xchg
xchg
mov
jo
pop
lods
and
xchg
lock
pop
lcall
sbb
mov
jecxz
std
xor
adc
mul
mov
incl
add
pop
mov
cmpb
and
out
cmpsl
push
enter
in
mov
stos
call
int3
je
or
scas
negb
jnp
jnp
fsubr
sahf
xor
jb
sti
jae
sub
cmp
inc
lds
push
add
rcrb
les
movsb
add
cmp
ja
cmpl
mov
je
shr
int3
push
je
mov
loope
or
fsubrs
nop
add
xchg
inc
popf
push
fs
fcomps
je
je
out
ret
xor
push
push
int
nop
mov
sub
shlb
mov
div
mov
inc
inc
fisubrs
enter
fs
adc
js
enter
inc
mov
or
pop
pop
loope
mov
enter
push
test
pop
dec
insb
in
aaa
add
sub
inc
fwait
and
fildll
push
push
mov
and
fmull
sar
sbb
push
mov
mov
lret
lahf
dec
popf
push
pop
sbb
xor
mov
loop
enter
add
mov
dec
jge
and
clc
push
in
mov
and
mov
and
pop
fidivrl
lahf
sbb
xor
push
cld
rol
mov
sbb
mov
movl
es
jne
mov
push
sub
push
mov
sbb
sbb
adc
andl
pushf
cltd
loopne
jmp
shll
std
mov
adc
cli
in
sub
pop
pop
jmp
in
mov
out
add
leave
or
mov
addb
adc
inc
xor
lock
cmp
push
push
sbb
push
jae
lret
pop
xchg
cld
xchg
rorl
cmp
xor
in
inc
lods
sahf
inc
nop
jecxz
in
lea
or
das
jecxz
xchg
mov
mov
inc
test
pop
dec
loope
or
mov
sbb
push
push
xor
ret
cltd
test
enter
movb
inc
jmp
dec
push
xor
enter
or
dec
jmp
andb
dec
dec
testl
ret
add
je
dec
je
dec
and
jecxz
sbb
push
mov
cmp
mov
in
in
in
nop
mov
sbb
adc
loopne
test
clc
cld
mov
leave
adc
clc
mov
sub
call
out
movsb
push
xchg
add
dec
jecxz
push
cwtl
cltd
ja
adc
mov
mov
call
call
adc
hlt
popf
adc
mov
mov
push
imul
sahf
lcall
mov
inc
adc
dec
sti
adc
sbb
push
lret
push
call
mov
mov
pop
jmp
mov
lea
out
cli
pushf
test
lds
idivb
xchg
mov
gs
mov
dec
add
pusha
ja
sbb
dec
sarl
and
int3
adc
sbbb
and
push
insl
mov
out
clc
ret
bound
adc
xor
add
aad
pop
xor
xchg
fbstp
add
pop
sbb
mov
leave
sti
rcr
xor
stc
sub
dec
lods
ja
fwait
lods
sub
dec
popa
and
xchg
fldenv
jo
push
cmp
and
sbb
imul
xor
es
mov
push
mov
ret
inc
cmp
imul
int3
push
adc
sub
lea
inc
mov
fcompl
fisubl
adc
lds
adc
into
shll
add
lock
inc
lods
pop
push
xchg
test
mov
loope
xor
add
dec
xchg
adc
xchg
pop
fdivrs
cmp
sahf
test
mov
push
cli
push
stos
mov
stos
push
push
push
or
xor
mov
popf
and
adc
andb
xchg
cwtl
sbb
add
mov
or
mov
insl
fs
sbb
add
mov
jle
cmc
arpl
jnp
cmpsb
mov
cmpb
or
mov
push
je
pop
fwait
fs
sub
and
pop
int3
fldenv
lahf
sbb
pop
xchg
xor
cmp
loope
fs
sbb
fwait
loopne
in
test
les
pop
std
adc
enter
or
in
push
popf
mov
ret
mov
mov
je
mul
xor
outsb
adc
mov
cs
push
fidivrl
dec
or
je
test
push
mov
out
loope
icebp
push
dec
mov
std
sub
adc
movsb
sahf
lods
sub
dec
jne
sub
out
test
fistps
push
rcll
popa
enter
and
dec
out
cli
add
mov
cmc
or
out
mov
push
out
js
insl
adc
int
mov
and
pop
mov
push
test
and
cmp
popf
fsubrs
push
push
lods
pop
ret
dec
sub
add
xor
fcoml
and
movsb
sub
adc
push
sahf
push
popf
sbb
mov
lea
inc
dec
cmp
xchg
scas
dec
mov
mov
daa
mov
push
xor
mov
or
lcall
jne
lea
sbb
mov
imul
cmp
add
push
pushf
stos
mov
scas
xor
xor
push
lds
insb
jg
push
jmp
rorb
add
les
cwtl
add
sub
push
push
int3
pop
mov
test
popf
adc
jg
mov
xor
aad
sbb
dec
push
mov
cmp
shl
push
adc
mov
mov
jb
fcoms
push
int3
sbb
pop
imul
cmp
adc
adc
add
nop
xchg
mov
or
les
andl
and
mov
andb
push
sbb
cltd
jle
shr
cwtl
imul
cmp
mov
jb
data16
xchg
imul
jne
adc
mov
jae
incb
jg
sbb
test
lea
xchg
xchg
or
lods
mov
shrl
ret
xchg
xor
sbb
ret
xorl
and
and
pop
pop
ret
add
data16
add
sub
lret
fcoms
orl
adc
cwtl
xchg
and
je
repnz
lcall
lods
inc
push
pop
imul
inc
repnz
xor
mov
pop
imul
ret
jne
inc
shlb
xlat
pop
push
xor
mov
mov
movsl
sbb
mov
lret
inc
pop
mov
pop
popf
adc
mov
push
loope
pop
mov
push
ljmp
out
lock
mov
and
cmp
jne
add
fdivrs
aam
imul
inc
hlt
push
call
cwtl
insl
fdivs
or
mov
mov
adc
add
adc
hlt
inc
add
inc
cmp
jae
jmp
andl
fwait
cwtl
sbb
aam
lahf
shll
sti
and
pop
mov
inc
or
call
mov
mov
or
jbe
cli
fwait
push
loopne
mov
sub
mov
xor
sahf
xchg
inc
mov
sub
sbbb
add
dec
enter
push
jmp
fsubrl
push
mov
repnz
xor
sarb
lods
inc
add
andl
push
loope
or
xor
je
mov
in
mov
cld
and
cmp
jne
in
add
sbb
pop
push
push
xlat
adc
es
clc
in
test
sub
mov
sub
xchg
push
xor
sahf
cmp
or
add
cmp
jg
movb
xor
stc
add
sub
add
fs
dec
add
inc
inc
cmpb
test
lcall
sbb
test
xchg
mov
push
lea
ja
xor
adc
xchg
or
int3
adc
push
lods
mov
or
leave
push
pushl
aad
xor
mov
in
ficomps
mov
mov
jle
lea
inc
jg
hlt
mov
sahf
daa
dec
mov
jle
adc
hlt
fldl
in
mov
inc
mov
mov
push
cmpsl
enter
inc
mov
sarb
adc
adc
add
cmp
adc
mov
cmpb
add
jne
cmp
popa
leave
add
cmpb
jbe
inc
incl
jb
outsl
int
loop
nop
push
push
push
insb
inc
lea
xchg
ja
or
sbb
cwtl
inc
popa
hlt
incl
inc
mov
hlt
jae
movb
sub
test
lret
mov
jne
adc
sbb
inc
adc
inc
jecxz
loope
and
ret
mov
jmp
mov
ja
or
dec
push
je
bound
adc
and
rol
leave
icebp
push
out
mulb
adc
sar
adc
iret
mov
repnz
decl
dec
xchg
addr16
aam
inc
push
les
dec
mov
push
mov
push
inc
test
sbb
inc
stos
mov
test
xchg
clc
or
daa
mov
je
jmp
jnp
je
jmp
jne
push
jns
das
push
push
fimuls
or
sub
popf
jmp
scas
rcrl
test
or
fdivs
sbb
push
mov
outsb
orb
inc
popa
std
add
xchg
sti
push
push
sbb
lret
in
xchg
and
int3
and
call
xchg
orl
sbb
sub
mov
pop
sub
pop
pop
pop
cld
sbb
shl
lds
sub
stos
add
push
push
mov
pop
insb
push
aam
loop
mov
scas
inc
das
mov
enter
push
int3
push
pop
xchg
loopne
test
imul
or
cltd
sbb
fmuls
call
movsb
pop
inc
lea
pop
fists
or
mov
and
push
js
in
test
cmp
jl
mov
fs
mov
jne
mov
mov
or
jnp
add
hlt
fs
jne
and
xchg
cmc
aam
mov
mov
dec
hlt
fdivs
cmp
jecxz
jb
lea
mov
inc
add
cmp
cmp
jne
cmpl
lea
addr16
cmp
mov
dec
mov
int3
mov
and
shl
clc
xor
mov
cmp
jbe
add
mov
je
ror
hlt
jmp
dec
fwait
xorb
lea
push
add
mov
xchg
or
dec
cmc
test
lock
sub
int3
iret
adc
push
dec
cltd
mov
cmp
sub
outsb
or
into
leave
inc
test
leave
icebp
inc
dec
adc
pop
sbb
mov
or
shr
jl
loopne
movl
xor
push
push
push
fiadds
rclb
adc
mov
insb
aaa
pop
sub
and
fcoml
xor
xchg
movsw
in
cmp
add
aam
repnz
stos
cmp
push
mov
jmp
sub
pop
mov
inc
jmp
mov
or
jne
push
xor
or
in
push
jbe
cmp
lock
stc
jae
shrb
fsubl
mov
repz
xor
ss
push
popa
mov
jns
mov
out
leave
or
inc
mov
je
mov
inc
or
push
lahf
add
scas
lcall
mov
or
enter
cs
lcall
push
nop
int3
adc
sub
jns
inc
push
mov
imul
jne
push
pushl
mov
stos
rolb
cmc
mov
cs
jmp
cmpsl
aaa
push
and
jmp
adc
xor
lds
sbb
mov
sbb
nop
mov
inc
jge
dec
cmp
push
enter
mov
movsb
and
lods
inc
xchg
in
mov
dec
push
fwait
push
cltd
adc
cmpsl
hlt
loope
adc
jae
mov
mov
outsl
xor
sub
dec
xchg
jg
cmp
add
cld
je
pop
inc
push
out
and
or
call
push
mov
data16
push
mov
pushf
adc
pop
lret
inc
push
call
add
inc
cld
je
pop
es
aaa
f2xm1
ss
vmovaps
mov
sti
mov
loopne
xorb
mov
ret
push
lea
mov
rolb
imul
bound
fcoms
xchg
pop
sbb
sub
mov
push
cli
cs
ja
aam
nop
jecxz
adc
xor
iret
test
jge,pt
ret
repnz
and
add
mov
jge
inc
addb
push
push
adc
inc
jb
xchg
repnz
mov
imul
adc
xor
das
ret
ficoms
test
mov
addr16
pop
inc
push
cwtl
sub
inc
mov
xchg
cltd
dec
or
stc
es
testl
cmp
fwait
mov
insl
mov
push
xor
and
xchg
xchg
loope
jp
mov
xlat
push
sub
das
cmpsb
movsb
add
lock
xchg
sarl
xchg
mov
negb
mov
fs
mov
inc
out
insb
rcrb
xchg
loope
adc
push
outsl
cmpl
mov
push
fmull
enter
loope
sbb
lea
sub
test
cmp
mov
mov
fs
push
mov
cmp
xor
mov
sbb
mov
inc
pop
jge
push
mov
test
sti
pop
or
clc
sbb
sbb
push
call
inc
nop
mov
jb
inc
lret
xor
dec
sbbb
or
jmp
jmp
inc
sbb
test
cld
ss
xchg
adc
clc
pop
cmp
pop
jae
pop
push
sahf
dec
lea
sub
cwtl
in
arpl
xchg
jl
adc
pop
subl
add
inc
mov
loop
adc
pusha
sub
fcom
rolb
popf
mov
jno
pop
push
mov
cmpsb
mov
or
mov
leave
lods
subb
push
push
push
xchg
xchg
sub
enter
mov
cmp
dec
data16
pop
adc
mov
jno
sarb
pop
push
inc
fisttpll
adc
mov
push
lods
je
inc
ret
sbb
push
push
call
sbb
cwtl
xor
jo
sbb
jmp
dec
cli
leave
inc
and
xchg
pushf
mov
in
rorb
sbb
mov
mov
mov
xchg
sbb
push
jmp
pop
loopne
jg
push
push
lret
and
dec
call
or
rol
mov
aad
push
and
cmp
je
movsl
adc
push
movb
push
mov
xchg
cmp
in
insb
xchg
ljmp
jbe
fidivrs
sbb
adc
pop
add
cmpb
loope
cmc
xor
divb
jne
inc
movb
inc
subl
aam
dec
push
das
pop
test
cwtl
jns
int3
push
inc
cmp
nop
push
dec
cwtl
pop
xchg
jne
jns
mov
adc
push
fucom
xorl
das
lds
or
pop
call
bt
jle
int3
addb
jne
adcl
adc
in
pop
fsubr
je
jl
fwait
add
pop
sbb
fcmovnu
mov
xor
call
lcall
sarb
adc
push
dec
bound
pop
push
mov
int3
jg
pop
popf
test
push
movsb
pushf
cmp
xor
arpl
mov
pop
fs
push
fs
and
ss
add
addr16
push
push
pop
aam
push
out
jge
aam
shrl
or
icebp
fdivs
push
mov
in
loop
push
lea
mov
cmp
adc
jne
push
cmpsl
mov
and
or
test
push
xchg
cltd
cmp
insb
cli
stos
pop
sub
push
cmp
jb
sti
sbb
sahf
adc
adc
adcl
pop
xchg
sub
pop
in
jecxz
push
lret
test
mov
popa
jnp
pop
cmp
push
aad
mov
and
outsl
repz
scas
jnp
lahf
icebp
dec
nop
add
inc
les
cmpsl
icebp
aas
sub
push
jns
push
pop
jle
sub
je
pushf
rcll
add
adc
pop
imul
push
or
cmp
fcoms
loopne
add
hlt
inc
push
push
adc
iret
sbb
cmc
ds
jbe
jp
js
push
aad
lea
push
push
pop
jnp
je
add
adc
repz
sti
push
mov
imul
inc
sar
int3
push
insb
adc
test
call
mov
enter
popa
sub
data16
call
pop
push
or
dec
repnz
inc
repnz
call
inc
ljmp
and
adc
ret
outsl
sub
inc
scas
pushf
jo
inc
xorb
push
jne
push
mov
jae
aaa
rclb
push
push
test
jb
nop
inc
dec
pop
push
pusha
cmpsb
push
daa
aad
in
xchg
dec
adc
pop
sbb
jne
adc
cld
pop
jl
pop
jbe
push
sbb
enter
cwtl
sbb
xor
mov
sbb
loope
cmp
movsl
inc
les
daa
mov
push
ja
aaa
xchg
shlb
mov
pop
fisttpl
lods
fwait
in
fdivrl
jmp
popf
in
jmp
cwtl
xchg
in
cmp
pop
fistps
pusha
movsl
and
movsl
mov
cmp
mov
sbb
jb
les
mov
ja
xchg
cmp
jmp
cld
mov
xor
testb
test
xchg
inc
out
sub
test
xchg
clc
sarl
test
cld
push
les
sbb
roll
ret
push
out
lcall
fdivl
gs
pop
pop
sbb
insb
cld
adc
cmp
cmp
or
test
test
mov
mov
sarl
cmp
or
xchg
push
and
inc
mov
and
dec
inc
hlt
fisubs
mov
ds
jne
and
add
ds
push
inc
push
test
push
push
shrl
pusha
mov
pop
sbb
fiadds
dec
push
fstps
inc
dec
scas
outsb
inc
cmp
sub
adc
push
add
push
mov
mov
xchg
jae
and
push
nop
sbb
sbb
push
inc
je
pusha
mov
int3
lahf
cs
adc
sarl
mov
push
test
mov
sub
inc
out
mov
inc
push
xor
ret
rep
xchg
push
inc
lods
jle
pop
xor
aam
cld
mov
mov
stos
and
fcompl
push
out
push
xchg
cwtl
in
fmuls
push
xor
inc
jno
mov
aas
add
dec
sbb
les
push
mov
add
clc
test
jne
xchg
mov
repz
jb
or
xlat
cmp
pusha
cli
outsl
cs
cmp
mov
pop
dec
sarl
mov
and
call
and
xchg
xchg
sub
xor
mov
rorb
xchg
mov
pop
inc
sub
dec
push
aam
mov
cli
sbb
cmp
sbb
shll
xor
int3
fadd
jecxz
add
ja
inc
fs
jmp
pop
push
mov
fisttpll
mov
shlb
or
idiv
mov
test
dec
scas
sbb
outsb
jb
cmp
mov
cmpl
call
bound
or
bound
xor
mov
pusha
lret
adc
jno
push
outsb
mov
push
stos
addr16
sbb
sbb
js
and
adc
rol
jmp
out
or
sbb
es
test
jmp
fsubrs
adc
xor
icebp
adc
loopne
cwtl
add
rcll
movl
js
mov
or
cli
add
popa
ret
push
mov
pop
inc
fistps
pop
es
lret
adc
xor
xchg
loopne
adc
and
fwait
hlt
mov
push
inc
rcl
push
sbb
push
scas
sbb
pushf
mov
sbb
aad
mov
cmpsb
mov
xor
pop
push
leave
jl
add
push
shrb
cmpl
or
mov
mov
jecxz
xchg
adc
push
mov
decb
fmull
andl
and
cmp
nop
mov
add
or
mov
div
stos
cmp
jne
and
scas
xor
cld
stos
fs
inc
dec
jne
je
in
sbb
push
into
jo
push
and
inc
repnz
or
and
mov
lret
pop
rorl
xchg
add
cmp
mov
std
xchg
mov
movswl
mov
xchg
nop
inc
cld
inc
outsb
add
les
fsubl
add
jle
cmp
jle
pop
jge
movl
nop
ja
pop
test
add
jg
popf
add
lods
xchg
dec
adc
test
sub
rcrl
jne
lods
inc
or
andb
sbb
cs
sub
insb
push
push
jmp
or
lods
xchg
dec
dec
sbb
cld
test
insl
test
repz
jmp
add
roll
add
je
add
out
inc
xchg
or
pop
sub
xchg
lds
or
cmp
insb
xchg
dec
cltd
and
and
and
push
sub
mov
mov
mov
adc
xor
cmp
and
push
or
pop
ret
push
xor
ret
dec
cmp
mov
cmp
jl
cmp
cmp
lods
or
sbb
mov
inc
push
insb
ret
enter
cmp
mov
push
loop
je
mov
in
call
cmp
mov
je
sbb
movsb
adc
push
je
dec
pop
push
mov
pop
int
call
jmp
xor
je
call
sbbl
mov
mov
in
fcomp
jl
cwtl
pop
jbe
insb
push
pop
fnstenv
sbb
fyl2x
cmp
jge
push
lret
out
or
jp
dec
lret
sarb
ja
mov
out
cmpsl
mov
cwtl
popf
in
pop
jl
push
addl
nop
in
loope
mov
sbb
je
sbb
test
and
je
pop
jmp
ljmp
cs
aam
aad
xchg
mov
and
fs
mov
jno
sarl
sti
mov
repz
cmpsb
clc
mov
inc
xchg
jne
pusha
mov
fsubl
insb
cmp
pop
mov
insb
and
movsb
add
lock
iret
into
mov
add
addr16
mov
cmp
lds
cwtl
mov
add
jns
rcrb
ficoms
push
ja
mov
xorb
je
xor
int3
mov
dec
hlt
cmp
mov
mov
sbb
arpl
jno
mov
ret
out
clc
hlt
mov
nop
mov
test
mov
mov
cmpsb
in
cmp
mov
test
and
mov
lods
mov
push
std
in
mov
packuswb
movsl
add
mov
mov
shlb
mov
int3
int3
sub
jbe
movsb
mov
xor
pop
ret
jl
fdivr
adc
dec
jbe
xor
cwtl
pop
dec
pusha
pop
fyl2x
fnstenv
mov
mov
lock
lods
xor
in
mov
fcomp
sub
jno
fnstenv
and
sbb
arpl
adc
enter
pusha
mov
gs
mov
cwtl
jecxz
arpl
fsub
shl
data16
fdivs
push
push
fyl2x
fyl2x
mov
mov
jns
push
mov
sub
ret
ret
sarb
adc
push
jb
push
cmp
stc
add
jbe
in
inc
loope
pop
jbe
adc
xor
in
insb
pop
je
dec
mov
mov
mov
f2xm1
cltd
mov
addr16
lea
je
push
xor
dec
ret
jno
int3
sbb
je
shll
je
mov
jae
adc
cwtl
fdivs
cli
adc
rcrb
push
inc
push
addr16
mov
sbb
mov
sarl
shrl
js
mov
cmp
sub
add
test
dec
fdivl
enter
sti
xchg
call
inc
das
hlt
scas
mov
inc
push
stos
pop
imul
xor
cmp
and
lret
and
cld
mov
enter
cwtl
xor
push
dec
add
sbb
pushf
dec
fiadds
mov
mov
mov
push
cmp
lds
push
mov
pop
adcl
aam
mov
add
shlb
mov
and
mov
sbb
mov
sar
mov
daa
sbb
in
mov
mov
mov
fstpl
mov
xchg
fs
addr16
test
shlb
les
dec
xchg
jle
xchg
sub
inc
sub
mov
mov
lret
lods
aaa
movsb
push
jne
xchg
mov
pop
jmp
sbb
rcrl
jnp
adc
pop
mov
dec
arpl
inc
daa
cmp
sub
jae
sbb
xchg
mov
aam
push
push
mov
push
jno
arpl
sbb
xor
mov
in
mov
add
loope
lods
mov
mov
and
and
aam
jno
enter
mov
in
in
mov
divl
cmp
into
xchg
je
xor
dec
jbe
sub
fcomip
gs
inc
xor
mov
xlat
icebp
push
stc
ret
inc
popf
sbb
je
call
mov
cmp
ret
inc
fistl
negb
enter
jne
jno
or
lea
add
xor
adc
xor
sbb
sarl
bound
enter
and
into
addb
mov
nop
xchg
popf
pop
push
mov
push
pushf
mov
movl
popf
pop
push
push
mov
xor
les
enter
popf
int3
add
cmp
mov
pop
out
int3
mov
mov
jne
shll
xchg
ja
pop
or
out
or
pop
dec
add
je
push
and
add
insb
push
pop
push
adc
dec
shl
mov
sbb
add
xor
sub
push
push
fisubrl
xchg
adc
andb
xchg
or
mov
inc
fnstcw
inc
or
inc
nop
cmpsb
or
xchg
mov
imull
dec
in
inc
add
add
mov
cpuid
mov
push
lods
outsb
ret
clc
mov
push
test
xchg
add
xchg
ret
jge
imul
sbb
and
add
cmp
je
or
add
xor
inc
cmp
jl
adc
add
xor
jne
cmpb
xor
dec
je
cmp
jge
mov
inc
add
inc
call
add
sarb
jge
add
pop
test
and
adc
lea
cmc
inc
data16
pop
mov
sbb
rep
lea
jl
or
jl
adc
inc
in
mov
sbb
sbb
dec
cmp
jle
pop
ret
movsbl
mov
cmp
pop
jl
dec
or
sub
ret
orb
stos
pop
or
dec
pop
xchg
cld
mov
inc
pop
hlt
out
push
push
call
pushf
sbb
jle
loop
lret
add
push
into
or
push
and
xchg
aaa
sbbl
shrb
add
add
xchg
or
jge
lea
mov
icebp
cltd
cltd
loopne
push
clc
jge
inc
pop
dec
shll
dec
jmp
inc
mov
add
add
pop
hlt
repnz
and
dec
je
xor
push
dec
jge
push
xor
loop
mov
clc
adc
pusha
out
mov
cmp
jg
inc
out
or
jne
inc
dec
lea
jb
mov
je
and
mov
mov
xchg
mov
loope
sbb
dec
orb
loopne
sub
xor
inc
pushf
je
add
stc
or
sbb
in
or
fs
cmc
lcall
inc
arpl
je
add
mov
add
mov
xor
xchg
push
pop
add
push
push
mov
sbb
push
push
pushf
fwait
mov
mov
push
adc
and
push
push
ret
sbb
insb
push
int
and
loop
push
lret
faddp
jae
movsb
jle
dec
mov
pop
inc
in
jbe
test
mov
test
rcrb
adc
push
jl
xor
sub
add
scas
mov
addl
inc
in
push
xchg
mov
gs
cmp
sub
push
adc
sub
inc
ljmp
or
inc
dec
adc
inc
je
mov
fcomps
pop
aaa
repnz
adc
inc
lcall
pushf
clc
je
mov
and
std
push
pusha
fildl
jp
inc
imul
mov
jle
popa
push
sbbl
xchg
bound
mov
sub
test
adc
jge
mov
push
push
ret
push
adc
lock
aaa
aam
fdiv
movsb
ss
and
cmp
out
jae
add
xchg
adc
mov
mov
test
xchg
adc
in
popf
insb
xor
and
sbb
ss
push
push
and
bound
xor
test
lea
shl
or
mov
add
xor
mov
lock
inc
std
jmp
sub
cmpsl
insl
loop
mov
lea
or
loopne
negl
int
pop
fs
orl
int3
fs
xor
stos
or
loopne
cmp
jmp
incl
lgs
mov
cmp
and
pop
repz
mov
ret
les
jle
jbe
add
push
jg
jae
dec
and
call
ljmp
pusha
lret
add
add
jne
int3
pop
cmpsb
or
dec
xchg
fcomps
and
push
sbb
inc
ja
je
or
enter
ret
cmp
and
inc
sub
push
je
and
test
and
push
adc
test
pop
addr16
xchg
cmp
fadd
mov
add
or
sbb
dec
vmread
jmp
sub
xor
push
xchg
outsl
aaa
enter
mov
xorl
pop
lea
rolb
mov
fidivrs
jp
test
xchg
cmp
mov
das
sub
ljmp
mov
cmp
push
lds
rcrb
fcmovbe
loop
or
int3
xchg
sbb
ret
pusha
jns
dec
ja
jl
out
sahf
out
pop
outsb
jne
xorb
add
add
or
ret
pop
or
adc
int3
jecxz
cmp
xchg
and
adc
lret
mov
push
dec
cld
fcoml
sbb
push
push
cmp
sti
sbb
jo
push
adc
test
jle
xchg
mov
dec
je
cmp
jno
das
and
pop
das
in
fdivs
ret
fmuls
int3
ret
mov
mov
push
sub
pop
pushl
pushl
icebp
add
mov
scas
xor
add
add
dec
and
mov
repz
dec
repz
sbb
sbb
push
mov
aad
popa
aam
jge
es
call
sbb
pop
loopne
jb
stos
sti
cmpl
sbb
adc
push
push
xor
push
pop
rcrb
push
mov
mov
pop
int
adc
push
dec
das
xchg
or
jne
in
sbb
negl
loopne
jns
in
sbb
cmpsl
fisubl
push
cmpsl
cmc
inc
movsb
jle
dec
dec
push
push
pop
in
mov
mov
mov
inc
sub
xlat
testb
pusha
add
or
add
sbb
sahf
adc
inc
lahf
nop
inc
mov
into
mov
pop
push
inc
pop
pop
pop
and
js
lret
stos
mov
and
push
add
movd
xchg
jg
cli
push
dec
les
lock
pushf
xchg
and
shl
push
adc
fisubl
subl
or
mov
inc
insb
cmp
push
fbld
addr16
gs
cmp
push
pop
mov
clc
lea
push
mov
push
pop
gs
xor
dec
add
sbb
adc
xchg
pushf
xchg
jecxz
and
scas
repnz
nop
fld
add
roll
mov
dec
xchg
loopne
lcall
push
mov
inc
sub
sub
data16
or
add
cltd
push
xchg
cmp
cmp
adc
xor
xlat
dec
test
push
cld
lcall
and
lock
mov
sbbb
inc
pop
test
sarb
adc
mov
add
push
ss
rcll
sub
mov
popa
sub
lods
mov
out
mov
and
punpcklwd
bound
cmp
push
mov
je
push
push
hlt
cmpsb
jne
imul
insb
add
push
and
xchg
pop
cmp
movsl
dec
or
popa
cs
pop
adc
and
and
test
shrl
cli
jo
les
mov
jnp
repz
repz
adc
sbb
mov
and
pop
call
xchg
pop
dec
or
xchg
jno
in
dec
in
test
pop
mov
xor
push
push
call
sbb
dec
jo
mov
sbb
cmp
pop
call
dec
lret
or
or
cmp
sbb
ret
and
sbb
fildl
push
addl
jo
stos
mov
out
mov
clc
pop
or
lds
subb
dec
and
out
or
call
mov
lds
ljmp
popf
pop
push
sbb
stc
jno
jle
mov
je
out
aad
pop
jle
popf
pop
xor
stc
jno
xor
and
push
out
xor
cmp
aas
stos
mov
les
call
push
scas
stos
leave
dec
aam
movsl
cs
inc
rolb
stc
lods
pop
pop
jmp
inc
or
add
stc
push
out
cltd
cwtl
test
pop
or
lret
adc
inc
fists
int3
rclb
icebp
inc
aam
sub
mov
fs
call
cwtl
mov
call
xchg
nop
enter
pusha
ret
push
arpl
cmp
push
fidivl
jb
in
inc
dec
inc
in
mov
inc
sbb
jnp
pop
or
imul
pop
pop
jbe
je
jl
sbb
insb
adc
mov
lea
adc
cmpsb
add
inc
cmp
mov
fadd
jmp
inc
lahf
test
iret
mov
sbb
mov
push
mov
test
jge
ss
aam
cmp
popf
pop
dec
sub
lea
adc
sub
movsl
pop
or
xchg
cmp
ja
je
add
mov
je
or
mov
xor
and
push
xorl
adc
in
enter
scas
jl
sub
sbb
sbb
js
sub
push
cmp
inc
jle
rcr
cmp
jo
lds
je
sub
lods
je
dec
adc
or
xchg
mov
adc
jmp
push
add
ds
sub
aam
pop
bound
add
call
cmp
or
sbb
sbb
adc
or
fadd
roll
test
enter
jb
pop
cmpsl
enter
test
push
lret
xor
call
imulb
outsb
clc
test
push
dec
and
cmp
sub
jo
jge
mov
in
pop
loopne
shl
push
xor
les
enter
adc
inc
aad
scas
add
movsb
leave
push
mov
lea
mov
inc
rcl
in
lods
hlt
or
insl
stos
hlt
add
jge
xchg
popf
in
mov
add
mov
xor
inc
cmc
mov
leave
je
or
xlat
and
rorl
pop
xor
mov
or
jge
or
mov
iret
inc
push
push
xchg
xor
and
push
js
push
xor
fbld
push
jl
xor
mov
push
fildll
scas
adc
push
test
loope
cmc
sbb
cmp
mov
hlt
mov
and
out
add
lods
lcall
xor
int3
cmp
jbe
lea
push
add
adc
ret
sbb
ds
xchg
shlb
sub
pop
inc
lds
mov
inc
punpckldq
repz
mov
imul
sub
or
leave
mov
xchg
les
pop
or
sbb
jmp
lea
movzwl
inc
dec
jne
pop
jmp
sub
and
test
pop
je
or
rcrl
and
add
adc
enter
call
and
and
add
mov
addb
fwait
test
adc
mov
sub
add
xchg
cmp
je
subl
push
loope
fdivrl
add
cmp
scas
rcrb
jae
sbb
cld
jns
or
xchg
cmp
xor
ljmp
and
inc
faddl
sub
sbb
jge
inc
mov
inc
lcall
shrb
push
mov
jne
insb
movsl
mov
out
rolb
jl
fwait
lods
mov
sub
stos
jecxz
sub
mov
sub
lret
mov
xchg
cmp
or
test
sbb
push
sub
sti
push
lret
ljmp
lret
push
aam
push
fcmovu
mov
in
add
and
sbb
clc
in
in
jge
int3
int3
loopne
jbe
inc
fs
test
or
mov
and
mov
push
je
idiv
inc
push
call
inc
xchg
adc
mov
jmp
pop
cmpsb
jecxz
shlb
pop
inc
movb
fcom
jne
fwait
push
sbb
jle
lea
xchg
xor
cmp
dec
rorb
push
pop
adcb
sub
loopne
aam
ret
push
add
add
shlb
mov
jne
jne
push
add
jne
jnp
mov
ljmp
or
push
xor
adc
stos
xchg
or
xor
sahf
adcl
fwait
mov
push
or
les
jne
rcrb
jge
clc
add
cmp
push
daa
rolb
fsubrl
sbbl
les
push
add
dec
pusha
imul
fmuls
inc
cmp
and
mov
mov
mov
mov
rol
xchg
fs
mov
rclb
mov
cld
and
aaa
and
sub
push
addl
cmp
cmc
add
adcl
test
xchg
aad
adc
in
inc
cmp
clc
sub
inc
out
and
and
pop
lea
out
mov
add
fmull
ja
inc
or
or
jb
hlt
push
xor
xchg
and
cmpsb
xor
movsb
inc
cmp
push
mov
cmp
or
sub
pop
mov
aaa
test
mov
fldcw
add
movsb
cmp
push
cwtl
dec
jbe
mov
push
push
into
xchg
cld
mov
adc
xchg
push
inc
popf
sti
xchg
pusha
push
lock
movsl
xor
mov
inc
pop
or
ret
in
adc
mov
pop
pop
repnz
fidivrl
mov
data16
or
inc
repnz
or
popf
and
push
xor
xchg
les
push
mov
add
enter
mov
xchg
adcb
xchg
repz
sbb
dec
or
inc
call
cld
jge
fdivl
xor
jl
popf
dec
aam
dec
fisttps
out
dec
rclb
and
stos
lahf
js
xchg
jne
or
aas
mov
sbb
imul
cmp
push
clc
cwtl
icebp
or
dec
fcomp
push
mov
inc
mov
push
fsubl
inc
out
xor
dec
andb
lods
mov
fcmovb
cmpb
test
bnd
insl
sbb
mov
cmp
jb
and
push
sbbl
jmp
loop
inc
jp
fstl
cmp
roll
cmp
lea
pop
inc
push
xor
jg
add
xchg
cmp
shll
cmp
cmp
or
lods
insl
ret
in
rcrl
pop
movsl
fnstcw
sbb
mov
cmp
into
mov
divl
jbe
xor
clc
xor
add
mov
fcoml
pop
sub
mov
mov
jne
and
bound
cmp
add
shll
pop
jl
inc
cmp
add
xchg
adc
add
mov
popf
cmp
shlb
adcb
adc
dec
adc
xchg
stc
pop
push
mov
adc
or
sbbb
xor
cli
int3
mulb
push
in
xor
fbld
cmpsb
xchg
inc
inc
fadds
dec
test
pop
test
mov
bound
mov
pop
inc
cs
xchg
inc
push
incb
or
clc
jb
fiadds
sbb
sub
rcrl
cli
inc
gs
sbb
jo
mov
xchg
mov
pop
push
xor
lea
leave
lea
and
test
and
adc
clc
add
cmp
push
adc
iret
adc
jmp
or
or
pop
lcall
or
popa
aas
push
pop
adc
adc
pushf
test
add
fmuls
push
sbb
inc
test
lea
jg
imulb
out
mov
sub
inc
and
pop
jl
or
add
inc
stos
pop
pop
out
adcb
inc
loopne
mov
cmp
add
mov
mov
lock
mov
pusha
fistpll
pop
or
popf
negl
lcall
es
mov
push
inc
mov
and
mov
xor
arpl
rorb
add
insb
xor
pusha
ja
std
jg
inc
les
fwait
push
dec
dec
jle
mov
xchg
push
mov
sti
sub
mov
mov
rcrl
inc
int3
dec
mov
mov
rcll
and
insl
xor
bound
push
mov
add
mov
mov
sub
mov
add
dec
cld
push
sub
push
sub
push
jl
cmp
pop
jp
cmp
jnp
je
xchg
stos
popf
mov
pop
mov
pop
lds
mov
clc
clc
jae
clc
js
and
add
inc
xchg
adc
add
movsb
or
jo
andb
lret
and
jns
into
inc
stos
push
push
outsl
out
hlt
repnz
mov
jge
aam
push
out
mov
sbb
xor
cmp
shr
loopne
push
add
stos
push
inc
decb
add
fiadds
and
pop
lock
sbbl
mov
lock
faddp
pusha
push
pop
out
mov
in
mov
ret
xchg
sbb
add
and
repnz
in
incl
mov
mov
or
ss
cmp
jo
int3
add
push
push
pop
push
pop
sub
mov
roll
in
inc
pop
xchg
cltd
inc
clc
mov
bound
outsl
dec
or
rclb
dec
out
adc
out
inc
add
arpl
push
adc
es
xor
out
andb
lds
adc
push
push
mov
cmpsl
mov
mov
out
jbe
or
call
ret
testb
sahf
rorb
sub
out
pop
mov
mov
sarl
lds
cli
and
mov
xchg
movsl
je
xor
rolb
aaa
push
mov
sub
in
mov
and
je
dec
icebp
sbb
out
mov
add
enter
pusha
jmp
ljmp
dec
loop
xor
sub
insl
movl
pop
popf
dec
in
shll
lret
stos
cwtl
test
rcrl
fdiv
pop
pop
fidivl
sbb
dec
dec
rorl
mov
push
lock
fwait
test
dec
into
ljmp
push
jecxz
inc
ret
mov
or
mov
mov
push
xor
mov
xor
es
sub
jne
sub
cmp
popf
out
pop
jne
mov
pop
imul
mov
out
xchg
ret
es
add
call
add
add
sub
cmp
add
movsbl
mov
movb
mov
mov
in
add
add
jmp
cmp
sbb
or
aas
or
mov
jecxz
lea
adc
and
pop
inc
add
push
aad
nop
xchg
loope
push
clc
dec
popa
mov
jne
cltd
cmp
sub
and
and
idivl
push
int
pop
js
hlt
fyl2x
les
push
cwtl
mov
daa
imul
test
add
mov
sbb
int
insb
dec
push
add
aam
mov
lret
ret
hlt
mov
push
xchg
or
pop
and
test
into
or
fsubrl
andb
cmp
js
nop
ret
inc
mov
pop
xchg
xor
shrb
push
mov
lods
punpckhbw
xor
int
mov
mov
and
xor
jb
inc
jns
clc
sbb
lea
outsb
and
jne
xor
fidivl
push
cmpb
outsb
sarb
cmpsb
data16
pop
cmp
mov
or
aaa
lods
xchg
daa
test
aam
je
je
xchg
mov
in
mov
gs
cmp
sbb
bound
divb
shr
push
inc
add
jl
jmp
push
xchg
stos
mov
and
mov
ret
or
sahf
shl
jo
imul
dec
or
xchg
push
lock
sti
fcom
push
pcmpeqd
cmpsb
adc
inc
push
inc
xchg
sbb
loopne
inc
mov
cmp
je
insb
mov
sub
adc
add
inc
or
jle
ljmp
xchg
dec
mov
pop
pop
movsb
adc
popa
push
insb
into
xchg
insl
push
ds
in
dec
movsl
fnclex
mov
or
leave
movsb
sbb
out
jge
add
jns
bound
test
jb
cmp
mov
inc
push
es
imul
push
mov
push
xchg
ja
add
push
out
and
mov
jbe
push
pusha
xchg
push
lods
dec
fcomps
lret
mov
pop
adc
mov
add
mov
enter
into
push
les
cld
cltd
mov
pushl
cmp
mov
imul
popa
iret
daa
int
cmp
clc
clc
data16
cmp
clc
pop
ja
nop
cli
and
lcall
cmpsb
stos
test
loopne
jle
cwtl
lock
dec
clc
pushf
cli
jbe
fbstp
xchg
or
sub
cld
iret
xchg
and
sbb
inc
inc
cmp
sub
mov
push
push
push
mov
and
jp
les
daa
jae
pop
push
outsl
mov
je
mov
popa
add
enter
inc
dec
cmp
and
jg
rol
fnstenv
xchg
into
cmp
add
testb
xor
fmuls
adc
arpl
cmpb
xor
push
and
mov
shlb
push
push
push
fists
je
test
jo
sub
scas
lahf
sub
testl
push
mov
int3
and
cmp
mov
jg
ljmp
mov
incb
push
jge
push
or
into
cmpsl
into
dec
push
lcall
push
mov
or
jecxz
aam
pop
pop
xchg
push
jmp
je
stc
and
mov
mov
inc
int
push
lret
or
inc
repnz
shrb
mov
add
add
dec
pminub
mov
sahf
out
pusha
inc
fstpt
jne
outsl
test
push
sbb
repnz
jne
mov
pop
xor
and
sbb
sbb
sbb
shrb
and
testl
xor
les
outsb
push
aad
add
insb
pusha
mov
fisttpll
pop
adc
add
add
test
loop
inc
xor
adc
pxor
imul
dec
adc
shrb
push
ljmp
cmp
iret
ret
adc
xchg
push
in
push
add
pop
ljmp
inc
jo
sbbl
sub
inc
push
add
orb
jne
and
stos
popa
push
das
inc
into
aad
pop
out
std
or
xor
subl
shrl
daa
push
out
cmc
daa
adc
push
pop
clc
out
xchg
loopne
or
mov
fistpll
sbb
inc
inc
fiadds
mov
test
lods
xor
jle
daa
test
rclb
in
daa
repz
inc
mov
sub
clc
or
xor
in
dec
sbb
sub
push
mov
xlat
jmp
sbb
adc
jb
add
or
mov
sbb
pop
xor
cmp
push
pop
push
aas
aas
aam
ljmp
jle
xchg
or
or
jmp
adc
cs
and
dec
adc
dec
cli
xor
push
int
xadd
xchg
jge
ret
movsb
and
push
xor
adc
scas
dec
push
jl
jl
push
dec
int3
lret
jmp
and
xchg
push
push
fidivrs
test
sbb
pop
or
in
cltd
sub
lret
sbb
adc
mov
mov
fstpt
sti
shl
lods
push
enter
sbb
lods
ja
clc
je
rorl
cmp
addb
pop
dec
js
dec
mov
cld
fyl2x
inc
lods
and
sub
clc
mov
out
pop
sbb
lcall
or
push
push
test
mov
pop
sbb
push
inc
ja
icebp
icebp
add
mov
xor
sub
dec
jl
mov
jp
hlt
or
gs
call
lock
aam
sub
int3
or
or
je
out
mov
jecxz
push
punpckhbw
push
push
push
popf
ret
sub
pop
pop
ja
sarl
push
cmpsl
inc
cmp
in
clc
jge
push
xor
mov
sbb
or
stc
ss
pop
xor
lock
or
pop
into
push
ds
dec
lahf
sbb
sar
ja
xchg
shlb
pop
sub
pop
arpl
pop
mov
mov
pushf
pop
cmp
mov
pop
cmp
mov
sbb
and
mov
test
cmpsl
mov
lods
dec
adcb
inc
pop
fisubs
dec
mov
and
mov
sbb
mov
iret
mov
in
clc
pusha
sub
inc
icebp
addr16
pop
sub
adc
cmp
fstps
std
inc
adc
or
add
in
clc
pop
add
mov
cli
inc
in
in
sbb
inc
loopne
icebp
addr16
cmpsl
aam
xchg
mov
sbb
jecxz
inc
xchg
inc
enter
clc
mov
jle
iret
mov
cmp
cmp
mov
sbb
sbb
push
inc
mov
gs
pushf
and
fwait
sbb
push
insb
jno
packsswb
pop
inc
clc
mov
push
push
push
push
mov
in
push
dec
fiaddl
xchg
lahf
iret
cmp
sub
sub
ret
pop
popf
aas
sub
je
pop
aas
adc
aas
cld
shl
add
ds
add
fyl2x
aam
loopne
mov
cmp
jbe
shl
jge
les
push
jg
adc
mov
cmp
sub
shrl
movsl
mov
inc
pop
sbb
es
and
aad
mov
je
andb
pop
je
jge
cmp
ret
js
xor
dec
lcall
mov
inc
in
jne
xlat
xchg
jo
jg
cld
xchg
insb
inc
fs
lahf
pop
pop
pusha
lock
aas
cld
clc
mov
aas
push
push
mov
inc
outsl
sub
inc
jecxz
lahf
pop
dec
cmp
cld
clc
jbe
adc
movl
cld
stc
adc
insb
cltd
clc
jecxz
cmp
adc
inc
pop
jl
pushf
faddl
xor
jg
clc
sbb
or
popl
xor
add
mov
pop
inc
xor
add
xor
add
push
pop
sti
mov
popa
push
in
push
fdivr
stc
icebp
cmp
iret
aas
cmp
aam
int3
jle
icebp
loope
sub
movq
loopne
mov
repz
lods
movl
cld
stc
icebp
rcrb
jg
sbb
test
add
lock
sub
sub
and
or
pop
mov
mov
and
notb
clc
cmp
pushf
sbb
loopne
in
sub
mov
push
mov
insb
ljmp
rcll
push
out
or
inc
add
stc
push
out
adc
jge
cmpsb
dec
jne
and
fstps
bnd
or
aad
jo
mov
add
scas
adc
jnp
or
pop
std
ror
add
mov
insb
add
bound
sahf
je
cmp
pop
push
lahf
popf
push
cmp
ljmp
out
and
push
jle
and
lods
and
ljmp
leave
jo
mov
addr16
xchg
mov
fcompl
clc
aad
inc
jne
sbb
scas
mov
adc
sub
push
xor
aam
fcomps
cmp
mov
sbb
jl
sbb
test
sbb
ljmp
add
insb
cmpps
or
andl
jne
in
mov
mov
cwtl
jmp
mov
shlb
xor
sti
pop
cmp
mov
jmp
push
scas
jecxz
add
jmp
mov
out
inc
jne
pop
bound
roll
cmpsb
push
hlt
and
sub
add
push
outsl
pop
sub
popf
cmp
outsb
inc
mov
lea
or
adc
push
jmp
push
sbb
push
add
add
add
cmp
jb
loop
nop
je
mov
gs
inc
or
adc
sbb
xchg
in
dec
mov
push
pop
fidivl
dec
pop
sbb
lods
aas
sbb
pop
add
mov
mov
hlt
cmc
orb
sub
and
mov
mov
nop
ficoms
mov
jmp
and
sub
nop
adcl
incb
dec
stos
push
neg
mov
sbb
pop
mov
int
add
mov
xchg
sub
js
push
pusha
pop
ret
pop
pop
adc
pop
cli
and
mov
and
jge
fcomps
and
fadds
inc
add
fadds
add
jge
jo
sub
lock
jle
mov
sub
lahf
pop
jg
mov
clc
lock
in
push
adc
aas
aas
aad
cmp
div
jecxz
cld
add
aas
clc
mov
dec
cld
clc
repz
xor
out
pop
pop
mov
aas
clc
lock
sbb
lods
icebp
movl
cld
stc
mov
out
das
lods
jecxz
lods
mov
outsb
jg
clc
repz
push
pop
cwtl
jecxz
lahf
pop
aas
nop
push
mov
cld
clc
mov
mov
add
and
jmp
loop
test
pop
push
cmp
mov
jge
lods
cwtl
dec
adc
xor
sahf
push
adc
movl
clc
dec
addb
movl
cld
dec
push
xor
icebp
loope
and
or
jle
adc
or
pop
clc
jo
in
fldl
or
mov
add
incl
jg
call
clc
jecxz
lahf
in
out
push
loopne
lahf
pop
jg
add
lock
je
les
lods
mov
ret
or
call
lret
leave
push
sub
cmc
sbb
push
add
push
nop
push
hlt
xlat
or
mov
inc
push
sbb
lret
jp
cli
out
and
cmp
adc
aad
cwtl
movsb
and
sub
add
stos
inc
mov
loop
cli
mov
data16
jno
fimuls
or
fsubl
je
pcmpgtd
push
lcall
mov
out
test
fdivs
push
test
add
test
adc
jae
pop
inc
cmp
mov
movsb
cmpsb
arpl
push
in
jns
dec
add
pop
lea
decl
lods
mov
shl
xlat
sub
mov
cmpsb
mov
push
xchg
cli
and
ret
xor
push
xor
xchg
lret
sbb
cs
sub
push
fildll
inc
push
sub
jo
jmp
mov
rolw
dec
out
mov
jl
push
push
hlt
fisttps
nop
mov
out
pop
int3
and
xchg
push
cmp
dec
cmp
test
sub
xor
test
pop
mov
fsubl
xchg
pop
fisttps
mov
aam
mov
mov
nop
xchg
pop
mov
stos
mov
xchg
mov
loop
insl
push
or
cmp
lret
fadds
dec
fwait
inc
fadd
rolb
lock
and
jecxz
cwtl
push
jnp
and
mov
clc
dec
les
cmp
fadds
mov
or
vmulpd
mov
sbbl
mov
mov
sahf
ds
dec
mov
mov
rclb
add
xor
cmp
insb
setne
test
popa
roll
or
push
scas
mov
cmpsb
jo
popf
test
dec
aam
xor
and
fdivrl
push
pusha
out
or
out
or
cmp
sub
cli
movsb
xchg
mov
or
lea
sti
cld
add
std
add
lods
push
xchg
cmp
mov
add
lahf
adc
add
scas
mov
inc
loope
jle
enter
call
leave
andl
in
mov
cld
cmpsl
mov
pop
out
js
xchg
dec
adc
bswap
ret
mov
filds
cmp
ret
inc
sbb
mov
ficomps
std
xor
mov
and
mov
lods
sbb
inc
inc
sahf
cmc
jle
imul
popf
mov
push
mov
adc
je
push
je
js
hlt
jmp
mov
shll
icebp
push
mov
cld
pslld
pop
cli
cs
push
repz
out
aaa
sub
enter
insl
inc
xchg
add
cmp
and
adc
mov
push
lea
push
sub
test
jl
adc
inc
jg
dec
andb
add
jae
push
pop
push
pop
cmp
jbe
adc
lret
das
cmp
lods
fdivs
lods
nop
je
orl
dec
xor
inc
mov
cmp
mov
sbb
rcr
push
xchg
push
adc
inc
or
gs
jmp
mov
aaa
adc
pusha
imul
mov
bound
add
test
jl
mov
je
adcb
or
and
sti
xchg
imul
sub
sub
les
fwait
cli
pop
cmp
push
imul
mov
cltd
jae
jne
or
push
bound
pop
int3
cli
and
cmp
push
mov
push
mulb
add
add
shlb
mov
or
push
xchg
movsl
sbb
ja
sbb
lds
mov
mov
jle
mov
add
push
ja
xor
inc
das
xor
mov
jl
mov
bound
outsb
jle
rcrl
cld
dec
rcl
dec
dec
ficoml
mov
push
movsl
jo
cli
test
adc
jb
cld
out
adc
jmp
test
sbb
or
push
jmp
mov
ror
popf
cmp
rclb
and
xor
mov
xchg
adc
mov
cmp
rclb
fstl
or
xchg
fdivrl
dec
faddl
popl
sti
sub
sbbl
cmp
divb
sub
sub
mov
jnp
mov
adc
lock
in
lea
sbb
add
sbb
dec
sub
fsubrs
sbb
loope
xor
lcall
cmp
shlb
pop
cmc
mov
mov
clc
scas
rcl
cmpb
jmp
push
dec
call
or
push
mov
mov
sbb
popl
push
sbb
sub
sub
lcall
mov
push
negl
dec
pop
fildll
push
stc
sbb
push
jge
mov
sbbb
xor
test
xor
add
cs
push
imul
inc
jge
repz
or
andl
lcall
fsubl
mov
jno
fisubs
mov
xchg
mov
push
mov
and
sbb
bound
not
out
outsl
aas
inc
hlt
inc
jmp
mov
orl
dec
repnz
xor
mov
insl
mov
arpl
jbe
cli
jmp
js
adc
dec
repz
loopne,pt
cmp
sbb
pop
push
push
les
lods
cli
push
aas
cmp
jp
mov
mov
fidivrl
adc
fmull
lret
and
xchg
stos
je
push
ja
mov
outsb
cmp
movzbl
push
mov
lea
jbe
neg
sub
loopne
cwtl
pop
xchg
fcmovbe
aas
or
lcall
adc
dec
fisubs
xor
inc
adc
outsb
push
testb
sbb
mov
xchg
pop
push
mov
fbstp
ss
jno
cltd
repz
fidivl
cmp
adc
inc
in
cmpsb
mov
dec
sbb
xchg
ret
lods
or
mov
mov
out
call
movsl
xchg
cmp
sbb
stc
jae
inc
fidivl
jecxz,pn
cmc
and
sbb
clc
sbb
or
pushl
je
repnz
lcall
push
test
sbb
stc
or
inc
sbb
stc
gs
notb
out
fiadds
cmp
jge
mov
mov
enter
mov
sti
push
sub
nop
orl
cld
pop
pop
divl
mov
aaa
mov
sbb
js
pop
push
and
cltd
fwait
clc
sbb
or
testb
fsubrp
arpl
mov
aaa
xor
je
and
pop
sbb
dec
gs
xchg
shll
sahf
movsl
cwtl
and
movl
jno
cmp
push
ds
sbb
ja
cmp
clc
adc
test
push
int
ficomps
push
insl
push
pop
inc
je
xor
aaa
je
or
dec
repnz
sub
mov
push
mov
clc
dec
pop
pop
lahf
fwait
mov
gs
iret
adc
unpcklps
cmp
clc
pop
mov
orl
inc
mov
in
insl
jp
fwait
jmp
xchg
sbb
lock
fbstp
icebp
jmp
add
adc
inc
shld
hlt
dec
and
mov
xor
repnz
xor
mov
or
xor
lret
into
cwtl
inc
ljmp
xchg
mov
mov
cmp
push
adcb
push
cmp
sub
mull
xor
adc
testl
mov
lea
pop
ret
pop
incb
aas
mov
ljmp
mov
sbb
xchg
rol
fmulp
dec
rclb
push
mov
ja
xlat
inc
mov
mov
push
pushf
idiv
push
cmp
push
sbb
ljmp
and
adc
or
xchg
test
aam
lds
cld
jns
gs
push
push
lods
icebp
outsb
and
jle
sub
and
ret
sub
pop
outsb
xchg
push
xchg
sar
pusha
xor
xor
pop
inc
pop
cmp
in
fsubl
cwtl
sbb
cmp
sbb
dec
lret
sbb
jns
ds
mov
imulb
push
lret
and
xor
pop
add
cs
cltd
cmp
mov
je
adc
cmpl
adc
mov
orb
cwtl
xchg
dec
pop
pop
push
popa
adc
xchg
mov
push
mov
push
sarl
and
sub
adc
ja
ljmp
add
insb
fcompl
sbb
push
idivl
testb
sbb
fcmovne
sbb
mov
jge
push
test
lret
outsl
inc
neg
int
xchg
and
ficoms
sarl
fisttpll
xor
mov
out
daa
cmp
mov
ss
jne
sbb
ja
shl
adc
jl
inc
dec
pop
and
lods
pushf
jo
clc
cmc
jmp
jnp
shlb
int
adc
fdivl
repnz
int
repz
jbe
out
aam
outsb
and
xchg
push
add
es
xchg
and
sbb
pop
jmp
sbb
mov
and
cmc
jecxz
into
popf
pushf
mov
ficoml
mov
cmp
push
mov
xchg
and
dec
and
xchg
xchg
mov
and
xor
mov
add
jne
cmp
push
mov
add
or
sub
add
loopne
mov
cld
hlt
inc
shrl
out
or
hlt
sub
repnz
clc
in
xchg
test
insb
pop
test
loopne
sarl
cmpsb
daa
push
push
sub
sub
and
out
or
iret
aas
lods
imul
js
mov
arpl
ja
je
push
push
pop
jae
sbb
mov
loop
cmp
jecxz
adc
repz
jecxz
aad
repz
adc
lret
je
je
sub
mov
sub
enter
sub
jne
cmp
pop
and
sbb
adc
or
push
loop
je
push
adc
fmull
pop
add
push
into
inc
and
jp
lret
inc
in
jmp
inc
or
sbb
rcrl
sub
fcoml
repnz
sbb
xchg
jecxz
daa
sbb
fistl
test
mov
hlt
sbb
push
push
pop
pop
pop
pop
fidivs
xchg
push
cmp
jmp
xchg
fs
and
movsl
les
jg
mov
lret
repnz
movsl
addl
mov
cld
mov
leave
push
push
je
push
gs
movsl
xchg
les
sbb
push
std
mov
cmp
xor
bts
ror
jbe
and
add
dec
push
cmp
push
xchg
cli
testl
lods
or
push
jno
inc
and
ds
pusha
and
inc
pop
fnstcw
addl
icebp
jecxz
mov
or
xchg
test
pop
notb
cmp
arpl
cmp
push
int3
icebp
add
icebp
push
or
hlt
in
mov
stos
imul
jg
and
sbb
adc
mov
mov
pop
push
or
mov
stos
shll
cmp
leave
push
mov
cltd
cmp
ljmp
mov
xchg
mov
pop
dec
popa
xchg
pop
lock
sub
shl
push
dec
mov
pop
and
stc
pop
fdivrl
mov
mov
fcoms
cwtl
ljmp
andl
and
sub
ljmp
int
or
pop
mov
xchg
adc
and
xchg
arpl
data16
or
outsl
ja
inc
xor
pop
lock
push
mov
pop
mov
cmpsb
mov
mov
popa
mov
repnz
dec
cs
adc
cmp
cmp
shlb
sub
mov
add
cmp
jae
mov
or
xor
push
add
pop
pop
lods
int3
sbb
hlt
out
into
dec
mov
test
adc
pop
jb
xchg
fdivs
adcb
inc
mov
push
cmpsb
je
out
xchg
cmpsl
in
cmpsb
mov
into
mov
push
das
ret
xchg
jmp
out
or
push
cmpb
mov
fs
cmp
mov
mov
add
sbb
mov
mov
xor
sbbl
jge
fistl
adc
add
xor
cld
lret
push
sbb
or
sbb
movsb
movsb
leave
mov
jnp
push
je
mov
lea
lea
push
add
cmp
pop
jne
in
mov
std
xor
pop
repz
dec
jne
push
aaa
cmpsl
xchg
mov
sti
push
bnd
int3
and
aad
dec
and
shll
xchg
pop
push
push
pop
orl
mov
push
pop
push
push
or
aam
leave
push
arpl
push
adc
icebp
adc
popf
push
mov
push
push
in
es
cwtl
dec
mov
sbb
cmp
push
mov
pop
les
cmp
pop
lcall
fs
inc
in
sub
cmp
ja
sbb
sbb
jecxz
or
jbe
out
mov
je
iret
call
mov
inc
test
lds
cs
test
cmpsb
xchg
push
inc
arpl
mov
push
mov
add
pop
inc
push
sub
repnz
adc
sbb
popf
mov
mov
jne
xor
xor
adc
pop
aas
ds
and
inc
rcrl
add
or
addr16
push
int3
mov
stos
pop
inc
or
xchg
lds
xchg
jne
shlb
add
push
xchg
push
cmp
filds
sbb
nop
push
daa
adc
in
inc
inc
popf
push
pop
push
jle
or
sub
xchg
dec
cmpb
enter
into
pop
mov
dec
test
mov
and
movsl
dec
stos
xchg
addl
jns
push
scas
add
jg
sbb
mov
cmp
push
orl
or
cmp
pop
push
loope
dec
stc
push
sub
sti
and
push
and
push
cwtl
out
in
enter
xchg
add
fisttpl
dec
jnp
les
adc
cwtl
imul
xor
push
pop
ljmp
repnz
out
lahf
adc
in
inc
aam
pop
mov
add
data16
push
jmp
sbb
addb
lea
xor
or
push
xor
adc
dec
les
rcr
push
fs
jmp
push
cmp
push
sbb
not
pop
inc
in
movsb
cs
cmp
inc
lret
mov
setno
jb
outsb
mov
jns
insl
push
mov
in
sbb
mov
dec
in
in
inc
push
mov
fsubr
repz
or
mov
popf
xor
imul
or
add
aam
or
sub
xlat
or
pop
subl
push
out
cli
cwtl
in
adc
ss
inc
rcll
cltd
loop
jge
jl
lods
outsl
jmp
push
repz
in
lods
dec
cmc
cmp
adc
stc
out
mov
ljmp
imul
bound
xchg
nop
push
inc
mov
sub
ret
popf
pusha
add
aad
sbb
test
ret
addr16
int
inc
ret
aas
shll
ret
jecxz
jmp
mov
and
inc
jmp
lret
push
rcl
mov
invd
fsubr
js
loop
mov
rolb
mov
and
xchg
mov
xchg
imul
jnp
stc
test
js
pop
sbb
arpl
hlt
loop
push
inc
cld
add
cmp
adc
mov
push
call
sbb
clc
and
push
xor
insb
inc
loope
fs
lahf
push
in
xchg
jg
or
push
jmp
and
sbb
pop
jmp
mov
hlt
out
aad
mov
je
icebp
int
jmp
xor
xchg
loope
inc
ljmp
push
das
je
adc
out
and
loop
ret
xchg
xor
ljmp
push
cs
or
cmp
push
ret
ljmp
call
movl
xchg
fcom
nop
ss
cmp
pop
clc
push
push
adc
mov
sbb
adc
xor
test
add
scas
es
aad
jecxz
cld
aam
push
push
ret
mov
adc
add
xor
jae
add
or
fdivrl
loope
cmp
stos
mov
clc
add
sbb
cli
icebp
insl
xchg
iret
xor
cs
aad
adc
adc
adc
mov
push
idivl
adc
mov
mov
fsubr
push
in
and
push
dec
mov
jae
ret
sbb
mov
sti
loope
cwtl
mov
cmp
mov
vpmacsww
iret
mov
inc
ja
cmp
inc
lret
jo
adc
testl
and
popa
ret
or
push
add
cmp
mov
add
shl
cmp
lea
je
lea
fldcw
or
mov
icebp
test
mov
push
add
shl
push
or
scas
test
nop
clc
inc
jmp
fsts
mov
xchg
aaa
test
loop
dec
cmp
dec
sub
xchg
shl
mov
out
pop
cmpsl
mov
fidivl
ljmp
nop
mov
inc
xchg
gs
cmpsl
movsb
xchg
test
and
push
push
and
mov
push
dec
push
inc
cmc
pop
mov
mulb
inc
push
inc
mov
aaa
movsl
ljmp
inc
push
push
xor
or
lret
pushf
or
mov
xor
jmp
into
test
insl
ret
aad
xor
pop
and
pop
dec
cmp
lock
aam
xchg
dec
and
insl
sbb
shrb
or
add
push
jne
or
mov
aam
add
popf
add
rcll
iret
hlt
cmp
mov
cmp
les
aas
rcr
out
xor
sbb
mov
dec
stos
mov
popa
inc
mov
shlb
add
inc
movsl
movntps
xchg
or
adc
push
sbb
shrb
push
sarl
and
cmp
sub
std
add
or
stc
add
push
adc
add
roll
sbb
lcall
icebp
push
push
aam
sarb
mov
faddl
je
movzwl
sub
fadd
mov
cld
aam
fisttpl
and
sbb
dec
pusha
mov
dec
sti
jno
scas
les
jg
mov
cmpsb
push
pop
es
xlat
cmp
mov
ljmp
and
push
add
cmc
and
je
xchg
in
lea
and
adc
adc
mov
sub
jne
push
and
enter
call
out
xchg
or
in
scas
call
ja
add
push
int3
ljmp
jne
push
test
cmp
clc
jmp
clc
movsl
ss
adc
fidivs
or
leave
lods
or
jns
push
push
lock
push
ljmp
cld
adc
mov
inc
ljmp
rcrb
lea
inc
or
mov
push
cltd
and
insl
addb
inc
add
and
test
pop
sub
push
sahf
and
adc
sub
jecxz
adcb
imul
push
sbb
adc
fldt
or
test
sbb
in
jb
sbb
nop
cmp
sub
jg
dec
in
mov
sbbb
sbb
int3
xchg
xchg
outsl
mov
push
inc
pushl
hlt
xor
lds
xor
jae
push
pop
mov
in
pop
sub
push
not
cmovne
add
mov
jae
orb
mov
dec
cld
push
push
push
fdivs
sbb
rorb
les
adc
daa
xor
push
fsubs
sub
mov
imul
push
daa
pop
or
jg
popa
iret
mov
cmpsb
adc
xchg
mov
movsl
inc
cmp
mov
pop
mov
fwait
cmp
fisubrl
in
in
push
dec
je
or
fs
jae
cltd
dec
out
sub
popf
sub
adc
rcll
cmp
lock
dec
lcall
mov
lret
data16
movsb
out
jno
push
cwtl
das
and
push
cmp
flds
cmp
push
xchg
divb
mov
push
pop
or
push
push
js
ja
sub
xchg
movsb
cmp
cmpb
ss
xor
cmp
iret
dec
or
inc
mov
and
mov
inc
xor
lret
in
insb
popf
mov
or
cmp
sub
push
inc
imul
sub
test
into
bound
add
lcall
cmp
mov
or
push
cmpb
adc
push
mov
or
jne
mov
lret
cltd
scas
inc
push
add
and
xor
fsubs
clc
mov
mov
mov
or
mov
or
mov
jno
add
rcll
pop
push
popf
sbb
test
lcall
data16
adcb
cmpsl
ss
sbb
jne
mov
xchg
xor
rcrb
inc
or
jnp
leave
push
mov
enter
push
add
mov
stc
push
call
push
fisttpll
push
clc
mov
mov
shlb
xor
jns
ss
inc
stos
inc
icebp
addr16
stos
dec
and
fsubp
mov
pop
mov
aam
call
push
push
or
adc
or
jg
mov
psrad
cmc
jecxz
dec
adc
shlb
jecxz
or
jl
xor
xor
sbb
xchg
xor
or
cmp
adc
das
mov
cmp
xor
xchg
sub
push
imul
push
push
push
icebp
xor
loopne
mov
fs
mov
pop
icebp
dec
push
movsb
sub
jne
mov
or
imul
je
test
je
jmp
push
rclb
jo
cmpsl
les
stos
enter
mov
jnp
hlt
lea
xchg
movsb
add
in
sbb
sbb
cs
test
mov
lods
jo
mov
rorb
push
jmp
ds
rorb
pop
mov
or
mov
cmpsl
inc
loopne
dec
mov
mov
in
mov
popf
cmp
mov
clc
test
cwtl
loopne
jno
jmp
popf
push
popa
subb
into
add
sbb
pop
lock
ss
lcall
pop
sbb
inc
test
les
or
add
sbb
stos
je
push
mov
xchg
adc
rclb
andb
push
or
xchg
xor
add
and
adc
inc
xchg
sbb
rolb
mov
out
test
jbe
testb
jge
sub
jbe
or
scas
push
jnp
or
int3
dec
pop
loop
aad
push
pop
jno
rclb
jge
fs
ret
sahf
xor
add
inc
jl
push
sub
sub
push
je
xchg
mov
cmp
dec
sbb
push
lret
pop
nop
mov
dec
inc
cmp
jb
mov
negl
jecxz
cwtl
pop
and
out
add
mov
add
idivb
inc
add
mov
pop
inc
cmp
jl
andb
xor
stc
arpl
adcb
cs
mov
xchg
enter
movsbl
push
inc
pop
cmp
push
add
cmp
jl
push
pop
adc
mov
push
pop
pop
popf
mov
dec
push
test
neg
inc
jb
cld
push
add
gs
inc
in
add
mov
fwait
imul
call
sbb
repz
adc
adcl
add
xchg
sbb
je
enter
jl
sbbl
add
mov
shll
mov
add
adc
add
push
iret
push
and
adc
pop
lock
addr16
pop
push
xchg
adcl
cwtl
jg
inc
xchg
stos
les
adc
jbe
fcoms
jmp
stos
dec
test
icebp
dec
push
push
jl
inc
push
pop
push
pop
push
jmp
push
les
testl
pop
jbe
stos
aam
lock
fwait
or
fwait
adc
adc
or
jbe
add
inc
sbb
push
je
lea
outsl
sub
inc
hlt
orl
or
or
cli
inc
in
and
add
inc
cmp
adc
adc
popa
sub
fwait
adc
jge
push
prefetcht2
test
mov
stos
mov
push
dec
dec
and
movsb
cli
jae
lods
int3
insb
adc
fcoms
in
adc
adc
jp
xchg
lds
and
mov
ds
out
mov
mov
bound
stos
mov
mov
xor
sub
adc
loopne
inc
imul
dec
add
adc
es
insb
pop
daa
adc
loopne
xor
push
mov
gs
mov
pop
push
push
nop
xor
movl
ss
aam
testb
mov
insl
fisubl
push
xchg
mov
sbb
dec
lret
adc
inc
or
dec
jmp
je
cld
sbb
add
jge
jne
jmp
aas
loope
push
pushl
and
push
dec
shll
divl
ss
pop
ret
cmpb
add
xchg
jno
clc
fwait
or
or
xor
outsb
insb
push
int
sub
adc
mull
xor
adc
xchg
push
mov
cmp
sbb
pop
ja
add
rolb
mov
xchg
and
sbbb
mov
sbb
cli
dec
xor
mov
cmp
std
sbb
cmpsb
shll
sbb
sub
cld
adc
fbstp
stos
orb
inc
xor
test
fwait
jmp
mov
dec
cltd
mov
insl
push
pop
pop
icebp
scas
out
xor
add
fwait
mov
insb
jbe
outsl
jb
adc
sub
jge
sbb
mov
insb
xor
bound
ret
in
xchg
and
inc
in
xchg
and
add
mov
and
add
adc
aas
push
es
rclb
test
pop
dec
adc
pop
mov
shll
lock
inc
stos
push
xorb
jne
pop
testb
addb
orb
and
lods
mov
push
xor
xchg
jbe
fcomip
mov
dec
cmc
add
push
shrl
inc
cmp
dec
lret
andb
in
and
pop
aas
adc
arpl
pop
adc
sbb
inc
dec
push
jno
jp
repz
dec
and
les
popf
aad
mov
jo
adc
sub
cmp
pop
pop
loopne
sbb
inc
push
adc
dec
cmp
out
and
mov
ja
mov
loopne
data16
and
push
pop
and
jne
pop
pop
push
xorl
cmp
dec
cwtl
adc
fdivrl
enter
int
mov
loopne
jbe
sub
sub
and
and
imul
add
movsbl
push
push
inc
jp
push
je
cmpsl
xchg
shll
add
xchg
cmp
in
push
pop
popf
inc
shrl
xor
movsb
xor
jecxz
adc
xchg
sub
pop
pop
loopne
pop
push
mov
mov
inc
sbb
bound
inc
bound
mov
into
sbbb
jge
dec
inc
or
fs
bound
push
cmp
push
xlat
icebp
daa
insb
xchg
inc
adc
pop
mov
leave
dec
stc
repz
jmp
jmp
loop
cmp
pop
adc
mov
xor
pop
mov
adc
push
sub
adc
adc
add
add
sub
je
dec
dec
adc
adcb
das
imul
xor
adc
sbb
add
stos
shrb
jbe
mov
jl
and
ss
stos
dec
les
bound
and
push
jns
adc
sub
inc
sar
pop
bnd
test
mov
pop
add
mov
push
mov
push
adc
cltd
adc
shll
or
jmp
test
lea
inc
popf
loope
rcll
sbb
xchg
inc
cmc
jb
xor
inc
pop
inc
ljmp
lods
rcl
jle
aas
push
sbb
stos
je
data16
add
mov
add
in
xchg
mov
in
icebp
push
lock
mov
or
push
pop
out
inc
addb
dec
push
add
sbb
or
pop
and
push
lods
adc
test
jecxz
xchg
sub
xchg
bound
and
shrb
xor
ret
movl
in
xor
xchg
subl
push
xor
mov
push
dec
hlt
jne
lods
adc
mov
and
jmp
lock
std
test
fwait
js
cld
push
sbbl
mov
enter
dec
and
cmp
rol
mov
jmp
adcb
aaa
or
xchg
pop
cld
add
jbe
mov
popa
or
mov
cli
or
pop
or
test
mov
mov
cmp
pop
mov
arpl
aaa
rclb
mov
call
insl
je
ljmp
xor
enter
add
push
pusha
cmp
fisttps
in
sbb
jbe
add
rorb
fimuls
enter
mov
icebp
lds
or
jg
push
cmp
sub
orl
insb
xor
insb
cmp
jne
xor
inc
and
pop
sub
jecxz
sti
cld
or
addb
mov
leave
inc
cmp
mov
and
or
mov
cmp
in
jns
adc
dec
or
xor
clc
push
lods
and
dec
and
xchg
dec
adc
and
mov
mov
je
stos
cmp
inc
add
in
div
or
add
test
push
fidivrl
fs
pop
mov
inc
std
test
rcll
pop
imul
or
inc
or
es
mov
xchg
imul
cmp
std
xchg
lea
mov
inc
jg
add
push
es
pop
push
sub
push
add
add
inc
je
sbb
je
dec
mov
jge
pop
add
jp
ljmp
lds
imull
sbbl
mov
jnp
cmp
repz
outsb
adc
lcall
or
sbb
pop
mov
adc
and
inc
dec
add
xor
cli
xchg
sub
lret
test
mov
fdivs
jns
sub
adc
dec
add
jp
and
pop
pop
pop
loop
sbbb
and
test
jne
inc
mov
jo
add
add
add
add
or
loopne
mov
jnp,pn
pop
je
mov
sbb
adc
mov
sbb
rol
call
sub
inc
add
subl
mov
cmpsb
lea
mov
pop
mov
and
sbb
mov
repnz
test
jbe
mov
cmp
or
xor
or
jne
inc
inc
cmp
jb
cmp
jae
lods
pop
mov
push
mov
mov
xor
inc
frstor
xchg
and
shr
and
jae,pn
or
mov
fdivl
pop
cmp
ss
push
or
sub
or
mov
adc
repnz
in
aam
jb
lds
pop
mov
insb
sub
mov
jb
data16
mov
lock
pop
push
les
or
push
xchg
cmp
xchg
in
inc
xor
adc
push
inc
sub
sbb
adc
sub
sub
mov
adc
sahf
mov
and
lret
fcmove
xchg
in
sub
out
nop
inc
pop
dec
dec
pop
mov
dec
imul
sub
push
scas
xor
imul
mov
jecxz
cmpsl
movsl
fsubs
jge
mov
mov
pop
push
rolb
xchg
outsb
sub
sub
dec
mov
sbb
pop
mov
dec
int3
pop
push
or
pop
lods
inc
inc
push
sub
adc
test
cmp
nop
movsl
jb
push
sub
int3
fisttpll
and
sti
xchg
jae
int3
sub
pop
mov
cmpb
in
jns
aaa
xor
loopne
add
cmpl
mov
sti
sbb
stos
in
popa
inc
push
bound
push
sahf
mov
call
dec
xchg
push
push
pop
dec
ljmp
out
testb
mov
dec
xchg
lds
xor
or
lods
inc
lods
fs
pop
sbb
clc
sbb
jb
jle
adc
xchg
outsl
cmpsb
pop
xchg
out
mov
pop
shll
add
jne
outsb
in
flds
mov
cmp
mov
sub
leave
dec
add
pop
inc
mov
or
cmp
les
pushf
lock
in
subb
add
xchg
xor
cld
cli
inc
fisubrl
push
push
mov
xor
lcall
push
popf
popf
sahf
xchg
pop
popf
ja
je
das
hlt
mov
aaa
ljmp
pop
ret
sbb
fdivl
sbb
inc
filds
lods
fs
iret
iret
testl
dec
jo
sbb
test
xchg
xchg
divb
inc
pop
sub
adc
into
in
jo
sbb
or
jne
inc
aaa
mov
push
push
hlt
jns
sbb
push
and
pop
outsb
inc
cmp
in
mov
roll
xchg
mov
sahf
jne
mov
adc
in
je
out
call
mov
jnp
nop
outsb
inc
sub
adc
add
out
xor
rclb
mov
shrb
sbb
jns
cltd
and
adc
fistpl
mov
in
iret
int3
shrb
or
inc
lock
clc
push
jl
dec
mov
lods
mov
ljmp
push
pop
hlt
daa
mov
lods
mov
cld
sbb
les
je
clc
test
push
cmp
jge
or
dec
push
dec
clc
mov
add
sbb
push
clc
insb
or
ret
lahf
add
repz
cmp
enter
imul
shl
jecxz
or
mov
lret
xor
testl
sub
repz
adc
push
mov
jmp
mov
mov
insb
movsl
pusha
insb
and
cmp
sbb
inc
pop
aad
jmp
sub
push
dec
xor
xor
and
xchg
jo
je
mov
sarb
jmp
add
sbb
mov
mov
nop
aas
ret
mov
mov
fucomp
add
ret
mov
sbb
push
sbb
push
pushl
jb
cmp
ja
push
adc
addb
add
ja
jb
cmp
jae
push
jp
mov
repz
cmp
xor
and
adc
ds
push
sbb
or
cmp
pop
sub
sbb
add
adc
int3
cmpsl
add
call
je
and
xchg
aad
mov
xor
pop
mov
orl
inc
das
cmp
cmp
inc
pop
addr16
sub
sbb
stos
sarl
jo
sbb
mov
addr16
cmp
pop
fwait
pop
xor
sub
mov
mov
je
lret
out
jne
cmp
adc
xor
mov
test
sbb
xor
mov
push
xor
movsl
es
sub
in
mov
adcl
dec
push
or
hlt
push
lea
add
outsl
push
mov
clc
sbb
xor
xor
sub
and
dec
sbb
and
mov
jbe
xchg
push
pop
inc
movsl
mov
cmp
es
jp
call
enter
pop
xchg
jo
dec
inc
and
fcmovbe
jae
clc
popf
xchg
push
andb
pushf
cwtl
stc
xchg
dec
rolb
sbbl
lret
inc
mov
push
sahf
scas
push
fwait
push
pushf
cs
mov
lcall
cmp
cmp
in
repnz
aam
call
rcrb
push
pop
loop
out
or
xor
adc
push
mov
and
gs
push
xor
les
xchg
and
mov
inc
fmulp
mov
lea
sbbb
adc
mov
and
test
xchg
testb
push
jmp
push
add
jmp
mov
dec
push
je
push
push
adc
xchg
mov
sbb
add
or
sbb
in
adc
xchg
scas
push
sbb
sar
adc
cmp
orl
add
mov
stos
mov
xlat
push
aad
mov
data16
mov
les
or
pop
mov
mov
ror
push
mov
pop
rorb
scas
jne
sbb
lock
test
std
in
or
lock
sti
je
mov
push
test
mov
divb
test
push
bound
addb
stos
int
add
ss
insl
nop
adc
xor
insb
or
pop
fcmovu
inc
orl
leave
mov
jne
shl
add
imul
sbb
mov
loopne
mov
sbb
jl
push
pop
xchg
mov
shl
and
cmp
nop
shlb
outsb
push
test
jge
fidivrs
pop
or
pop
popf
jnp
call
adc
cmp
mov
imul
mov
sbb
and
andl
cs
clc
mov
pop
jmp
movsl
push
cmpsb
enter
cltd
inc
rclb
pop
popa
inc
cmp
adc
cmp
aam
inc
sahf
movsb
ret
es
fildl
cs
jecxz
insb
push
mov
mov
cld
add
das
inc
push
insb
inc
adc
add
jl
sbb
sarb
roll
dec
cmp
cmp
pop
aad
inc
rclb
cmp
in
test
andl
mov
sub
test
push
ss
roll
ljmp
test
mov
inc
or
jne
push
flds
push
mov
inc
sbb
ret
test
daa
insb
nop
decb
test
jecxz
and
pop
cwtl
out
cmp
inc
push
shrb
call
or
mov
sbb
xor
push
popa
fmulp
jnp
mov
dec
inc
mov
mov
shlb
stos
mov
pop
sub
push
je
std
and
xor
lea
mov
sub
mov
inc
shlb
mov
sbb
testb
or
adc
dec
ret
mov
sub
mov
pop
enter
rcl
testb
dec
push
mov
push
xor
mov
jge
mov
test
popf
lcall
mov
dec
fwait
pop
add
mov
cmp
lea
sbb
cmpsb
jae
push
sub
test
dec
shll
les
push
push
jns
sbb
inc
mov
mov
dec
adc
call
cli
add
mov
mov
dec
fidivrl
push
stc
push
pop
and
adc
push
cmp
mov
lods
sti
test
fstps
out
and
test
icebp
jb
icebp
cltd
loop
shrb
jbe
enter
mov
mov
mov
js
adc
shlb
lock
jmp
sub
cld
pop
rorl
adc
mov
push
inc
inc
inc
mov
and
sbb
mov
jmp
jne
mov
sti
jne
inc
in
into
shll
xor
cmp
inc
jnp
jg
jae
sbb
lcall
pop
pop
cmp
int
or
popf
xchg
dec
les
mov
sub
int3
dec
mov
inc
out
inc
js
syscall
inc
jb
xchg
jl
jmp
push
xchg
out
xor
mul
mov
sbb
xchg
adc
or
inc
mov
fbld
mov
dec
inc
xchg
jne
andb
dec
ret
insb
xor
jecxz
call
cmp
jg
or
insb
sub
repz
and
mov
hlt
scas
or
push
in
push
push
push
shr
push
cmp
cwtl
xor
decb
add
outsl
aam
pop
add
xor
cmp
jle
xchg
pushf
test
jno
pop
mov
push
mov
mov
push
lea
cmp
je
punpckhdq
mov
adc
pop
jbe
push
out
js
mov
sbb
data16
aaa
cld
mov
hlt
fildll
popa
loopne
push
pop
mov
fisubrl
movsl
mulb
xchg
insb
push
ljmp
iret
add
cmp
mov
or
cmp
test
jle
and
je,pt
inc
sub
xchg
mov
inc
filds
push
aam
iret
xor
sbb
mov
mov
cmp
jne
inc
add
cs
shr
xor
rcl
xor
cs
pop
rorb
je
inc
mov
add
pop
inc
xor
cmp
pop
or
and
sbb
sbb
sbb
mov
add
sbb
enter
add
es
std
and
xchg
xor
divl
add
adc
mov
mov
cmp
xchg
dec
addr16
mov
jp
xchg
inc
pop
mov
rcl
cwtl
dec
jo
orb
iret
insl
test
sub
adcl
push
xchg
mov
aas
loop
jecxz
mov
jns
in
in
out
arpl
pop
add
nop
mov
lods
outsl
add
adc
mov
or
test
dec
mov
pop
push
jne
cs
mov
or
orb
cwtl
sti
xchg
cmpsb
cmovne
lret
mov
push
inc
jmp
mov
mov
das
push
repnz
pusha
into
hlt
lea
fidivs
push
add
pushf
iret
fs
and
test
es
outsl
es
sub
fs
in
es
push
dec
cmc
fcmovbe
jbe
xor
scas
fdiv
pop
pop
lods
mov
ret
mov
xor
or
fsubrs
pop
push
lret
mov
inc
movsb
aam
notb
imul
push
jb
jnp
lods
cmp
push
sbb
push
push
push
inc
push
jp
lcall
mov
fimuls
push
into
lods
imul
inc
sahf
dec
pushf
shlb
test
add
inc
inc
js
or
sbb
mov
pop
out
add
or
adc
jb
inc
aas
xchg
fdivl
into
fiaddl
fcomps
mov
aam
enter
loopne
into
lret
push
fsubr
call
in
mov
mov
inc
xchg
jmp
andb
push
jnp
inc
repz
or
or
out
mov
sbb
movsb
mov
mov
push
adc
or
xchg
mov
push
sub
mov
push
icebp
pop
pop
push
fwait
lret
push
shl
dec
ficoml
cmp
sub
ficompl
fwait
sbb
test
push
xchg
popa
movsb
add
cmp
icebp
adc
cld
pop
lods
xchg
mov
cwtl
out
subl
inc
loop
add
aas
movsl
xor
fsubrs
roll
out
adcl
dec
pop
and
sub
pop
add
aas
xchg
fcmovb
sub
int3
mov
mov
push
jno
jne
cld
lock
add
dec
fsubr
cmpsb
mov
mov
cmp
adc
gs
int
inc
xchg
mov
pop
test
lret
jnp
sub
movb
pusha
aas
inc
add
clc
jae
mov
add
sub
lea
inc
mov
shr
mov
xor
cld
sbb
mov
mov
lods
pop
and
sbb
or
sub
imulb
lret
add
pop
aaa
nop
inc
jmp
insb
insb
pop
rclb
push
push
push
add
lea
add
dec
repz
sub
das
into
sub
push
push
shrl
add
ret
test
in
data16
mov
mov
lahf
push
scas
lods
jno
push
pop
or
cmpsb
or
jp
dec
and
fs
xor
fcoms
push
test
mov
stos
mov
test
je
add
mov
test
je
xorb
or
sub
je
pop
out
and
loop
xor
sub
clc
mov
outsl
mov
addr16
adc
mov
jo
dec
inc
sub
mov
in
pop
in
lock
and
sahf
jne
push
pop
dec
inc
xchg
and
lds
adc
add
mov
and
pop
cmpb
push
inc
js
andl
or
mov
sbb
push
cld
mov
sub
jne
mov
add
jge
cmp
je
inc
xchg
sbb
push
imul
mov
cmp
jl
cmp
jg
imul
add
sbb
lock
pop
incl
rolb
cmpsb
add
mov
clc
push
popa
sbb
jo
lcall
push
lahf
lods
push
nop
in
cmp
xorb
push
mov
fcomps
rcrb
or
testb
and
lods
xchg
mov
jmp
mov
add
loopne
add
cmc
mov
cmp
jne
mov
cmp
je
xchg
or
mov
int3
or
sbb
pushf
dec
mov
stos
jne
es
pop
pop
mov
or
lahf
jmp
in
shll
pop
mov
jmp
adc
push
out
and
call
jne
mov
mov
dec
pop
sub
jae
xor
enter
inc
insb
adcb
loopne
push
stos
je
add
push
pusha
cs
or
andb
in
push
icebp
or
add
test
and
xchg
push
fdivl
add
pop
jb
cmpb
jne
test
or
divb
lcall
out
adc
push
inc
inc
jmp
mov
sbb
inc
movsl
add
xchg
mov
mov
mov
testb
add
mov
mov
adc
scas
xor
jmp
lea
and
xor
addb
ret
xor
je
mov
pop
sub
cmp
jb
jne
adc
mov
and
orb
dec
xchg
shll
lahf
jle
add
jb
loop
lahf
out
adc
jge
jb
mov
inc
sub
lock
sbb
push
and
loope
cs
sub
sub
fcmovu
bnd
aad
adc
sbb
xchg
fsubrs
or
ret
sbb
popf
cmp
add
and
ret
or
cmp
rclb
and
shr
cmp
add
mov
add
ret
inc
xorl
nop
shl
inc
or
mov
add
add
test
mov
inc
loopne
insb
inc
movl
ror
sub
dec
push
leave
roll
mov
icebp
jl
pop
or
test
adcb
mov
add
cmp
cli
add
sub
add
rorl
pop
inc
dec
jne
lock
lret
test
add
stos
push
movsl
jg
jno
pop
cli
mov
ret
ds
test
or
outsl
je
xor
mov
add
mov
add
xor
call
add
add
cs
cld
xor
jecxz
mov
add
lea
sub
jmp
and
std
das
in
pop
aas
cld
cmpsb
pushf
cmpsb
imul
jnp
lock
sarl
or
mov
lahf
orl
shll
sbb
jmp
or
and
dec
test
mov
push
mov
ror
or
loopne
add
mov
jecxz
test
lea
nop
and
test
xor
cmp
shlb
mov
lds
mov
mov
add
enter
pop
lods
xor
lea
pop
jns
add
gs
sub
mov
mov
pop
hlt
mov
sahf
ret
and
adc
mov
insb
sahf
add
out
sub
mov
mov
call
sahf
in
in
lock
or
clc
cld
cld
lea
add
add
xchg
mov
pusha
push
sbb
cmp
sbbb
pushf
pop
nop
out
ror
sbb
inc
mov
lea
cmp
jno
cmp
and
std
and
loopne
mov
mov
sub
fimuls
sbb
test
les
push
dec
inc
add
pop
jge
dec
ficoms
aad
into
mov
ret
out
out
in
lret
cli
mov
outsb
lods
sbb
cmpsb
in
mov
adc
pushf
movsb
jnp
out
lods
mov
xlat
cmp
out
sbb
sbb
cmp
repz
adc
iret
repz
or
or
add
in
and
xchg
clc
or
ljmp
jnp
in
mov
jle
fbstp
in
lea
rolb
jb
addl
jae
int3
ret
les
add
inc
add
andb
cmpl
and
jle
xor
or
sahf
nop
jae
orl
add
push
fldenv
inc
jmp
test
mov
sub
dec
dec
sub
mov
cmp
push
push
arpl
or
dec
xor
rcrb
xor
inc
cmp
mov
js
push
push
mov
fldenv
lds
push
clc
or
cmp
into
inc
push
rolb
in
push
xor
xor
inc
inc
or
pop
xor
add
pop
les
js
ret
cmpl
outsl
es
js
push
inc
pop
and
cmp
icebp
jmp
mov
and
jg
sbb
xor
xchg
or
movsb
lds
and
or
pop
mov
jae
pop
mov
jbe
inc
inc
pop
xor
popl
mov
pop
imul
aam
inc
sub
inc
xorb
mov
inc
jns
pop
test
mov
push
mov
push
sarl
jns
mov
mov
inc
scas
int3
leave
sbb
dec
adc
and
mov
mov
or
push
xchg
in
test
cmp
test
jl
jl
loopne
ficoml
jp
cmp
inc
js
icebp
mov
jns
fld
inc
pop
push
xor
icebp
or
dec
mov
or
add
ret
cwtl
or
or
js
dec
jmp
mov
inc
xor
pop
je
or
or
xor
cs
add
pop
jno
mov
inc
jb
in
mov
mov
fbld
inc
cmp
fmuls
jl
add
rolb
mov
adc
ret
inc
mov
sbbb
add
mov
jmp
lea
iret
shll
cmpsb
mov
ret
and
push
jns
cmpsl
sahf
xor
addr16
outsl
and
or
leave
out
sbb
pop
fwait
out
jmp
cmp
mov
add
mov
mov
loope
aas
repz
xor
inc
push
mov
bound
dec
or
add
pop
int3
pop
or
add
inc
sub
sar
add
push
jns
push
sar
and
ret
push
sub
int3
push
mov
test
xor
sub
enter
xorl
pop
shll
pop
jl
mov
add
or
sbb
loopne
xorb
xchg
enter
xchg
or
or
scas
jge
outsl
add
test
mov
and
dec
or
push
mov
testw
sub
cltd
or
adc
adc
cld
and
dec
xchg
outsl
out
jecxz
mov
and
stc
add
mov
pop
and
sub
dec
mov
push
sub
add
add
in
add
dec
adc
mov
adc
je
div
mov
push
push
mov
stos
mov
in
mov
sub
fsubr
mov
cmp
mov
mov
inc
call
xor
stos
mov
inc
or
xor
adc
jge
ror
loop
sub
jg
sub
icebp
push
in
push
mov
ret
push
xor
add
cmp
ret
push
or
les
jge
or
and
add
insb
mov
push
xchg
ret
test
imulb
mov
sub
movl
cltd
sub
sbb
jmp
stos
mov
ror
add
lea
rep
push
pop
dec
mov
int
mov
and
mov
add
jecxz
inc
add
jmp
cmc
mov
loop
mov
push
or
pop
shl
shr
aaa
or
fnstenv
inc
adc
lods
add
cmc
ss
push
stos
pop
inc
push
pop
shl
or
andb
inc
push
jl
jecxz
lods
lcall
popa
xor
pop
test
gs
adcl
add
push
scas
inc
neg
dec
mov
std
inc
cmp
xor
or
jecxz
push
adc
mov
in
mov
dec
mov
xorb
adc
cmp
je
pop
sub
or
or
jge
inc
xchg
lock
jle
mov
sub
inc
mov
les
sarl
data16
ds
adc
fucomip
mov
or
lea
adc
inc
loopne
mov
jp
push
jb
sub
dec
mov
push
mov
jmp
lods
es
or
and
jecxz
xor
mov
cmp
das
dec
xchg
mov
pusha
cmp
jns
cmpsb
insb
or
jae
and
scas
out
cld
cmp
sub
or
xor
and
push
add
inc
cmp
les
xchg
clc
dec
cmpsb
lea
into
insb
mov
dec
dec
mov
cltd
call
mov
je
jmp
adc
push
and
pop
adc
das
sub
jne
cmpsb
push
jecxz
loopne
ret
in
stos
lea
js
adc
pop
ret
lea
scas
mov
int
mov
mov
aas
push
je
mov
inc
cmp
in
jno
push
inc
mov
or
ret
shl
data16
add
mov
mov
shll
adc
lods
sar
icebp
dec
xor
add
nop
or
scas
adc
aas
xor
add
and
dec
pop
or
inc
cld
cmp
sub
dec
cmp
cmp
out
xor
out
out
dec
adc
xchg
das
sbb
fiaddl
cmp
lea
cld
leave
inc
dec
inc
sub
sub
cmovb
jg
mov
push
cmc
sub
decl
js
xor
xor
mov
mov
jmp
pop
sub
inc
in
test
shlb
pop
sub
iret
cmp
xor
jmp
addl
ja
sub
adc
and
inc
lea
nop
push
fimull
test
add
ljmp
cmp
ja
jge
jno
lods
mov
in
cmp
cld
shll
jp
ss
mov
loopne
sub
or
dec
cmp
push
pop
jb
pop
test
sub
inc
cmpsb
mov
jmp
sbb
mov
lret
addr16
cwtl
loopne
xchg
adc
and
push
loopne
je
jne
cmpl
gs
rorl
and
les
adc
inc
sahf
es
divb
jb
and
aad
jg
mov
adc
and
jae
mov
shr
in
push
add
push
adc
xchg
jecxz
mov
add
push
add
fucomip
push
push
xor
lock
cmp
add
adc
ud2
bound
cmp
sahf
inc
mov
add
inc
ret
ds
stos
sub
jne
mov
repnz
push
cmpsl
pop
in
xor
xor
sbb
filds
jmp
mov
loop
inc
or
push
mov
sbb
and
sti
push
cltd
es
aaa
imul
xor
clc
inc
dec
mov
adc
sarl
mulb
or
sti
sub
lods
aad
dec
sti
inc
in
mov
testl
sub
cmp
jb
push
call
mov
push
fists
pushl
mov
sbb
test
aam
sbb
or
daa
xchg
sub
out
das
sti
cs
sub
daa
adc
enter
dec
or
loope
sub
add
mov
sub
add
add
pop
test
hlt
mov
inc
movsb
fnclex
ret
ret
mov
push
lock
mov
xor
loop
repz
out
inc
and
push
iret
lret
fsubrs
mov
cwtl
sbb
mov
adc
or
cmp
shr
inc
mov
inc
shll
adc
jmp
xor
shr
rcr
or
jne
div
xorb
mov
inc
mul
add
jb
pop
js
push
cmp
jb
cmp
insb
cmpsl
xor
dec
pop
pop
push
mov
ja
les
xlat
daa
sub
loop
jmp
leave
pop
and
adc
stc
cmp
adc
adc
jp
out
or
and
sbb
mov
idivl
int
add
add
push
push
sbb
lea
and
enter
mov
sbb
jae
mov
sarb
adc
push
iret
out
or
popf
popf
cltd
xor
sbb
sbb
out
adc
dec
inc
push
repnz
daa
movsb
stc
push
jbe
push
cwtl
push
enter
cld
dec
add
shlb
and
popa
jl
mov
add
sbb
jmp
rorb
addr16
fiadds
add
push
aas
inc
aad
pop
xor
adc
fiaddl
inc
sub
aam
cltd
push
pop
mov
xor
and
xchg
movsb
xlat
stos
flds
lcall
lret
xor
or
push
inc
inc
dec
je
lcall
shll
mov
mov
cmp
inc
or
sbb
xchg
add
add
inc
aad
and
in
mov
lds
cld
sarb
xor
adc
ljmp
push
mov
testb
sar
push
xor
les
lret
sbb
out
jne
dec
cmpsb
aad
adc
loop
xchg
cmc
es
dec
loope
add
cmp
rclb
or
stos
push
mov
lea
sbb
cld
ret
mov
or
push
inc
jmp
mov
jmp
lret
add
orl
jmp
sub
dec
idivl
and
repnz
jl
push
subl
jp
add
je
sub
xor
push
cmp
cmp
add
pop
mov
cmp
cmp
push
shll
add
dec
loopne
mov
inc
in
repnz
adc
nop
jns
push
inc
repz
or
lret
sub
stos
or
or
loop
mov
and
jno
ret
int
pop
or
cmp
mov
and
sbbl
popa
cmp
jbe
add
leave
pusha
js
add
clc
xchg
int
sub
decl
stc
push
push
push
or
rorl
xor
push
mov
push
mov
mov
jne
add
inc
clc
jno
inc
data16
test
add
jbe
test
xchg
lods
and
repz
adc
neg
sbb
neg
add
mov
testl
xchg
arpl
fisttps
clc
cmp
cmp
rorl
cli
push
sbb
in
int3
in
inc
sub
push
and
xor
push
cmp
adc
jae
mov
sarl
popf
adc
out
and
popf
out
or
or
pop
rolb
mov
aam
mov
cmpsl
mov
pop
adc
inc
cltd
mov
out
inc
loop
add
shlb
adc
mov
add
mov
inc
adcb
xchg
aam
inc
sbb
loop
dec
out
xchg
lret
or
and
or
add
ret
or
cmp
scas
sub
addb
sub
repnz
shll
cmp
lods
sbb
inc
roll
shll
pop
mov
rorb
add
aam
fistps
and
sub
or
xor
pop
pop
and
jb
push
add
ret
jmp
mov
sar
testb
bound
bound
jmp
add
sub
or
or
les
outsb
push
or
test
xor
push
push
mov
sub
push
or
mov
out
sbb
or
push
movsb
into
movsl
lds
lea
cmp
cmp
adc
inc
xorb
sub
sar
dec
enter
decl
push
cmp
push
movsl
push
cmpsl
sub
push
pop
sbb
fidivrl
xor
sub
mov
dec
adc
dec
xor
xor
mov
inc
inc
xor
or
insb
pop
inc
push
push
mov
add
test
popw
push
mov
es
mov
dec
call
xchg
sbbl
cltd
dec
sbb
inc
shlb
ficoms
ret
sub
das
jmp
push
adc
mov
scas
sbb
lods
arpl
pop
dec
adc
mov
add
push
cli
push
test
call
mov
nop
add
lahf
rorb
add
insb
pop
cmp
inc
adc
push
out
inc
or
add
inc
pop
mov
or
and
xchg
test
je
lea
cmp
jb
add
adc
cmp
jae
pop
push
fcoml
rcrb
xor
cmc
and
dec
push
aaa
and
cmp
nop
jne
or
mov
or
or
fstl
push
cmp
std
mov
jno
pop
push
adc
es
divl
in
push
popa
repnz
lret
mov
hlt
pusha
mov
inc
adc
push
leave
cmp
xchg
xor
dec
test
leave
les
je
lock
xor
orl
sub
and
mov
shrb
mov
inc
sbbl
bound
test
bound
jmp
rorb
add
je
add
cmpb
mov
in
iret
aam
lds
and
lcall
push
dec
loop
jo
ljmp
out
std
test
fimuls
mov
mov
aam
xchg
mov
pop
xor
shlb
or
lret
adc
or
sub
and
lods
and
int3
pop
daa
bound
sbb
xor
fcmovnbe
fiaddl
imul
and
into
aam
shll
ss
iret
jnp
movsb
orb
xchg
dec
les
add
or
aam
repnz
or
dec
dec
sarb
stos
push
cmp
mov
popa
call
mov
cwtl
push
push
rol
js
sub
jne
int3
xor
call
sub
pop
add
push
mov
nop
push
cld
enter
leave
lcall
fs
dec
mov
inc
mov
xor
inc
pop
or
jecxz
mov
andl
xchg
ljmp
mov
or
jns
add
popl
or
test
cmp
sub
int3
xor
jno
push
push
test
frstor
adc
or
test
or
push
je
mov
sub
pop
or
movsb
push
sbb
test
mov
add
adc
mov
cmpsl
xor
and
push
mov
add
add
and
xchg
add
lea
mov
mov
inc
add
je
push
dec
rcll
or
mov
mov
adcb
pop
rorl
movsl
cmp
pop
push
mov
jecxz
cmc
lahf
xor
jmp
sbb
stos
xor
mov
adc
push
ljmp
sbb
push
dec
lock
pop
dec
or
sbb
sarb
push
in
add
cmp
jl
js
push
pop
add
inc
mov
es
pcmpgtb
adc
push
xor
add
dec
mov
add
ja
cmpb
xchg
fsub
or
fcompl
cltd
sub
out
and
les
je
lret
add
dec
dec
je
into
test
sbb
push
cld
or
mov
add
clc
test
jno
addb
xor
mov
sub
cli
dec
adc
xor
movb
add
loopne
add
imul
sarb
jmp
jo
loope
push
lock
lahf
repnz
pop
mov
dec
pop
sbbb
sti
push
jl
insb
bound
xchg
or
dec
std
adc
jns
add
aas
ss
cmpb
jne
inc
inc
andb
xchg
inc
rolb
insl
and
sbb
js
sbb
jmp
ss
jmp
push
add
sbb
sbb
mov
xchg
xlat
sbb
add
test
js
mov
sbb
in
dec
jo
sub
push
mov
sbb
stos
inc
inc
aas
and
add
xor
jne
test
sbb
js
or
push
cmp
jmp
add
nop
outsl
or
test
dec
movl
mov
dec
test
aam
adc
jns
inc
jmp
int3
cmpsl
shrl
ret
and
mov
lods
cmp
mov
popf
orl
ss
dec
xchg
shll
xchg
adc
jno
dec
push
mov
push
push
inc
add
jge
les
pop
je
adc
jle
or
call
insb
rcrl
dec
mov
mov
cwtl
pop
je
mov
add
and
pusha
loop
pop
movswl
shr
int
mov
fildll
lret
adc
jb
mov
xchg
xchg
push
sbb
lods
bound
andb
inc
inc
or
add
add
fldl
xchg
mov
mov
cwtl
push
mov
sub
xchg
jb
mov
movsb
movsl
inc
adc
out
cmc
fdivrs
push
loopne
cmp
mov
aam
pop
adc
into
cmp
add
into
push
jecxz
dec
push
xchg
imul
add
sahf
test
and
je
test
mov
mov
sbb
sbb
aam
jmp
std
rorb
js
inc
pop
adc
repnz
dec
imul
cwtl
or
fldenv
pop
fsubl
adc
xor
inc
add
push
loope
sbbb
inc
jmp
dec
inc
popa
inc
out
cmp
jmp
in
jmp
and
inc
or
pop
pop
add
or
les
inc
or
xchg
dec
pop
or
pop
jmp
xchg
and
inc
jge
addr16
lock
shr
ds
or
jmp
sub
into
inc
je
sub
inc
sbb
jl
sti
sub
adc
add
loop
or
or
out
out
call
jne
cld
testl
in
cltd
stos
push
mov
lret
movsl
jg
add
push
push
push
push
dec
mov
or
popf
test
and
push
fsubs
inc
jmp
or
pushf
jle
add
add
sbb
sbb
mov
pop
pushf
shrb
dec
scas
incl
insb
loope
mov
gs
mov
inc
movb
cmp
shlb
hlt
pop
cld
test
mov
dec
es
aaa
cltd
lret
ror
sub
or
je
pusha
lods
aaa
in
insb
and
jne
sub
hlt
bound
jl
or
or
and
and
push
push
adc
mov
test
into
cli
adc
das
mov
add
scas
dec
popf
xor
lret
movsb
pop
inc
jle
cmp
lock
add
aaa
or
mov
lea
jne
xchg
inc
push
sbb
adc
sbb
aad
add
frstor
out
outsl
adc
bound
sub
lods
enter
cmp
test
mov
out
mov
movsb
adc
or
dec
add
push
mov
mov
dec
and
jmp
jge
nop
iret
cmpsb
mov
adcl
mov
jae
incl
pop
or
xchg
cmpb
or
dec
sbb
jmp
xor
sub
ds
jg
inc
mov
inc
or
ret
dec
es
dec
jle
adc
or
push
push
inc
sbb
out
popf
gs
jnp
jno
loop
xchg
adc
in
xchg
or
push
jne
out
aam
dec
sub
xchg
fwait
testb
lds
and
inc
stos
mov
push
and
mov
jb
in
mov
inc
cmp
sbb
mov
and
cmpsb
adc
push
mov
pusha
inc
dec
xor
les
sbb
xor
xchg
movsb
or
add
js
out
mov
jae
scas
or
sub
inc
call
cmp
ja
xchg
mov
ret
sub
xor
test
push
and
out
stos
lea
inc
lret
icebp
pop
mov
mov
je
cmpsl
dec
jo
cli
cmp
ja
add
js
mov
pusha
pop
fs
jbe
inc
inc
push
inc
ret
xor
aam
shl
or
rcr
jno
add
inc
push
mov
pushf
mov
testb
movsl
pop
mov
movsl
jmp
jns
pop
xor
pop
jae
jo
or
outsw
stc
inc
jb
push
hlt
adc
popa
shll
add
stos
jmp
cmp
lahf
je
jae
mov
push
sub
test
jae
in
adc
jne
mov
and
cltd
std
nop
cld
mov
or
jne
mov
sub
cmp
inc
sub
pop
bound
mov
in
ret
mov
adc
popa
push
mov
adc
scas
adc
jbe
dec
outsl
stos
insl
sub
lock
add
xor
rcll
push
sarb
test
jb
inc
push
mov
repnz
aaa
pop
push
jo
push
mov
ret
lock
ja
sub
lea
mov
lcall
xor
inc
inc
mov
loopne
inc
sbbb
test
inc
data16
sub
and
mov
cmp
jns
and
stc
out
mov
into
popa
pop
repnz
xchg
daa
lea
adc
ret
adc
mov
subl
lods
sub
jecxz
xchg
les
ret
jmp
std
and
lcall
pop
fs
mov
add
mov
pop
popa
jb
je
pushf
or
push
bound
push
inc
push
xchg
mov
fnstenv
cmp
cwtl
adc
pop
pop
fwait
hlt
xchg
pop
inc
fs
xchg
mov
adc
cmp
pusha
push
inc
adc
mov
or
pusha
hlt
sub
xchg
inc
ret
pop
imul
adc
mov
and
or
loopne
shr
or
mov
inc
dec
add
das
pop
lea
cwtl
push
ret
ror
xor
es
test
ja
and
inc
jmp
mov
nop
jae
xchg
sar
dec
lcall
subb
mov
dec
cld
mov
jl
jo
add
jmp
sub
imul
les
jbe
add
mov
imul
js
mov
jb
adc
sbb
lea
andl
fdivs
inc
add
cmp
je
loopne
dec
cmp
push
rorl
inc
sbb
mov
or
cmp
cwtl
sbb
mov
add
add
mov
leave
lds
push
mov
push
cwtl
cmp
shlb
push
push
xor
add
iret
sbb
popa
jl
cmp
jg
sub
xor
add
loope
loop
push
push
push
push
js
or
push
fs
aas
dec
add
push
dec
jno
test
xor
push
addb
push
and
lret
inc
cmp
pusha
push
or
push
repnz
mov
test
sub
mov
je
add
push
cmpb
and
push
add
push
lea
dec
cmp
xor
pop
mov
mov
mov
cwtl
sub
jne
push
mov
push
lods
jo
push
dec
jns
jle
sbbb
push
cmp
icebp
jne
xchg
int3
loop
xor
or
jmp
dec
cs
mov
and
adc
nop
mov
mov
mov
jecxz
mov
orl
jae
sub
cmp
mov
add
add
adc
fnstcw
inc
adcl
cld
sub
shr
mov
imul
lea
orb
add
push
out
adc
lea
mov
mov
push
xchg
mov
mov
cmp
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
or
lds
push
add
jmp
dec
add
shll
pop
push
pusha
add
sub
rolb
test
fstpl
js
pop
add
dec
push
sbb
add
pop
add
push
or
hlt
mov
or
xchg
and
repnz
rorl
scas
mov
mov
mov
jne
sar
add
push
mov
fidivs
mov
popa
mov
sub
cmp
push
mov
cmp
jno
cmp
mov
and
xor
dec
add
and
lea
mov
rcl
ja
and
mov
add
inc
enter
pop
or
fs
jl
mov
lock
mov
mov
mov
mov
jno
cmp
fisttps
insb
mov
jae
lret
sbb
jge
orb
imul
in
in
movb
sub
cmp
adc
cmp
dec
mov
ljmp
rcrb
push
mov
and
mull
mov
jg
jns
shl
add
shlb
dec
or
add
jg
jbe
push
call
mov
insl
dec
or
popf
shl
inc
adc
scas
test
push
push
decb
dec
ret
add
incb
arpl
cmpl
imul
je
cmc
fisubl
inc
push
punpckldq
sbb
loopne
or
push
inc
dec
adc
inc
pop
adc
push
cmpsl
and
mov
decl
cmp
adc
ret
out
adc
mov
sbb
pushf
les
rclb
adcb
lcall
lock
add
popl
cmp
jge
or
push
insb
movsb
push
fs
mov
shl
shrl
pop
call
pushf
fdivrs
fbstp
cmp
jae
mov
and
adc
and
or
ret
adc
xchg
and
or
jb
jne
mov
cmp
mov
adc
and
jne
jae
je
sub
ljmp
mov
mov
or
shll
ret
test
fsubs
int3
pop
test
pop
adc
add
in
mov
or
xchg
mov
mov
aaa
mov
push
push
mov
insl
jb
sub
or
shlb
xchg
mov
popf
and
and
or
je
xchg
ss
nop
inc
pop
pop
lock
pop
push
pop
mov
add
testl
bound
ja
icebp
lcall
cmp
jle
xor
dec
les
sbb
dec
popa
cmp
arpl
sub
sub
cmp
cmpb
pop
mov
pcmpeqw
mov
in
and
jmp
sbb
dec
xchg
push
jp
mov
ficomps
fsubrs
popf
cmp
mov
xchg
and
mov
int3
lods
daa
jns
or
jg
dec
daa
jl
or
xchg
rorl
mov
leave
mov
sbb
movl
roll
imul
scas
mov
push
push
out
or
minps
or
cwtl
faddp
add
jnp
lods
fidivrs
aaa
lea
mov
repnz
xor
or
stos
jne
add
fists
xchg
push
add
cld
adc
push
inc
shlb
jo
lret
test
cmp
adc
inc
add
test
or
movsb
shll
cli
mov
clc
push
loope
add
push
cmp
je
orl
enter
and
push
xchg
lea
lret
gs
gs
add
xchg
inc
cmp
imul
les
add
imul
lock
inc
mov
dec
add
mov
push
push
add
xor
fcomi
cltd
and
inc
pop
ret
cmp
xor
xor
aad
inc
or
xor
aaa
sti
shl
sub
sbb
jno
push
movsl
xchg
dec
mov
test
jo
sahf
add
cmp
ja
lea
push
push
dec
orl
lea
lock
adc
lock
dec
add
sub
inc
aam
call
ret
push
jns
movl
add
mov
out
leave
subl
or
sahf
sub
inc
jecxz
inc
inc
mov
adc
rorb
js
mov
ljmp
xchg
stc
int
test
inc
add
adc
je
rorb
push
bound
xor
shr
add
cld
dec
cmp
pop
dec
in
mov
sub
push
enter
add
adc
inc
xor
insb
es
pop
xor
loop
mov
mov
jae
popa
mov
add
sbb
or
xor
stos
mov
nop
dec
or
and
mov
inc
mov
stos
enter
sub
add
cmpb
xchg
or
inc
mov
es
xor
cmp
scas
pop
hlt
lea
fdivr
lds
and
mov
xchg
loopne
pop
sub
jno
pop
call
pop
jno
pop
and
iret
clc
movsb
pop
sti
rolb
lds
int
test
stc
scas
rclb
movsb
xor
arpl
push
icebp
sub
xor
lods
push
lods
imul
cmp
sub
sub
mov
and
test
pop
movsb
mov
dec
test
andl
or
dec
cmp
mov
mov
into
inc
inc
in
je
push
mov
push
arpl
push
ja
ja
or
cltd
add
es
lds
jne
or
inc
pop
mov
subl
aas
jp
push
jmp
push
adc
sub
repz
or
add
gs
test
je
cmp
add
ret
jmp
push
xlat
push
add
add
and
rol
mov
adc
movsb
test
adc
jmp
push
fwait
mov
jnp
adc
lock
cwtl
shll
lcall
mov
mov
cmp
mov
add
lea
or
push
dec
or
push
xor
inc
in
or
pop
sub
cmp
setge
dec
and
dec
inc
mov
cmp
jl
push
cltd
inc
into
cmpsb
mov
pop
mov
cmp
mov
popl
rclb
inc
pop
movl
add
cli
push
dec
push
jmp
adc
mov
je
mov
filds
sbb
add
xlat
cmp
sbb
iret
jb
sub
cmp
arpl
mov
dec
inc
dec
cmp
cltd
inc
or
mov
les
stos
cltd
pop
pushf
mov
or
es
aas
jne
and
inc
cmp
adc
push
bound
cmovbe
xor
iret
jno
add
popa
add
lahf
stos
nop
faddp
xor
dec
loop
addb
mov
adc
je
cmpl
sahf
push
rorl
cwtl
gs
cli
out
enter
lods
mov
adc
aaa
pop
cmp
stos
or
push
pop
cmpsb
ljmp
cmp
add
and
je
jmp
test
jne
outsb
xchg
mov
mov
and
and
inc
xchg
push
adc
test
xor
rcll
cmp
bound
lods
loope
inc
jno
shrb
dec
rcrw
or
sbb
adc
or
mov
add
andb
sbb
add
pop
inc
jne
cmpsl
pushf
xchg
mov
and
or
lcall
push
out
stos
repz
push
jmp
sbb
shll
rorb
inc
sub
ret
xor
sub
cmp
add
cmp
push
fimull
inc
xchg
fs
flds
out
sbb
daa
and
inc
dec
movsb
inc
pop
cmp
clc
cmp
js
arpl
mov
adc
cmp
sar
cs
out
andl
clc
jb
cmp
xchg
rcrl
or
xor
pop
or
ds
das
xor
test
push
or
outsb
rorl
aas
dec
xchg
xlat
pop
jns
or
mov
sbb
sub
sub
out
dec
add
ja
adc
jge
orb
cmp
mov
xor
in
or
push
sarl
sbb
les
jle
into
mov
add
cld
mov
adc
movl
adc
inc
jne
mov
testb
cmpl
jae
inc
mov
sub
shlb
aad
dec
inc
or
sbb
inc
or
add
test
je
add
push
loope
sub
rclb
pop
mov
ret
shrl
push
sbb
mov
sbb
out
add
dec
xor
xchg
jb
addb
movsb
xlat
add
mov
sbb
push
push
jae
add
sub
jmp
popa
add
lea
inc
add
push
test
add
inc
ss
or
or
popa
add
jae
mov
test
jne
pop
add
add
jmp
mov
dec
cmp
adc
xor
sbbb
jmp
repz
sub
jne
lea
daa
add
jae
push
mov
sarb
xchg
rol
inc
pop
or
inc
lret
and
or
sub
mov
arpl
jno
mov
call
ret
sub
loope
inc
jb
jmp
jecxz
pop
inc
rolb
jmp
push
ret
ror
inc
mov
lea
xor
imul
jle
test
inc
fistl
dec
push
or
fadds
adc
or
mov
sbb
jbe
adcb
mov
xor
xor
pusha
jae
shlb
add
imul
sub
jae
mov
daa
push
hlt
inc
pop
jno
jne
mov
or
shlb
jbe
rcrb
xor
push
sbb
lret
cmp
aam
arpl
call
add
lret
xor
cmp
inc
jae
fsubs
scas
dec
out
pop
sarl
addb
inc
xor
je
cmp
push
cmp
xchg
cmp
addr16
push
push
mov
xchg
jnp
jecxz
icebp
sub
sti
push
adc
inc
aad
ljmp
adc
jecxz
pop
andb
out
in
je
push
test
movsl
or
adc
and
add
mov
mov
stc
daa
and
shrb
test
das
idiv
pop
mov
dec
pop
pop
pop
mov
dec
lcall
mov
lock
testb
subb
fsubs
cli
and
inc
sti
xor
or
push
insl
mov
add
jo
test
pushf
and
pop
cs
ret
push
push
mov
out
jne
mov
mov
std
pop
loope
in
or
fcoms
xor
fstps
dec
push
mov
add
dec
mov
inc
xor
and
mov
cltd
addb
adc
jne
or
xchg
mov
sbb
inc
arpl
and
pop
mov
clc
inc
cmp
sbb
jo
rcrb
xlat
sub
cmp
popl
mov
or
and
dec
mov
or
lea
pop
sbb
ja
inc
lahf
cli
adc
scas
push
rcl
pushf
xchg
insb
rorb
je
stos
and
xor
sub
mov
mov
adc
sar
mov
cmp
mov
and
testb
mov
aas
cmpl
dec
std
push
push
mov
jae
cmp
dec
stos
fisttpll
push
add
xchg
adc
scas
dec
adc
pushf
nop
xor
nop
xchg
movsl
enter
and
out
fimuls
xchg
mov
clc
fmull
addr16
enter
mov
test
mov
mov
adc
adc
adc
inc
pop
dec
add
popa
sbb
add
adc
adc
sbb
add
xor
jne
xchg
inc
cmp
pop
mov
dec
into
and
mov
and
mov
and
fidivl
adc
in
sub
mov
lea
or
cmpb
inc
inc
inc
xor
and
mov
inc
outsl
sub
adc
enter
jb
inc
and
dec
xor
cmp
fidivrs
orb
nop
cmpsb
mov
fs
mov
jae
add
insl
mov
enter
dec
and
pop
or
fdiv
mov
xor
pop
or
xchg
outsl
adc
pop
mov
inc
daa
loopne
add
sub
jne
cmpb
xorl
test
xor
jbe
or
je
int3
dec
movsl
jmp
inc
adc
push
xor
and
mov
sub
dec
movl
jl
jb
sub
xor
lcall
je
cmp
cmp
or
and
add
xor
or
xchg
add
inc
add
lcall
fwait
cmp
das
adc
addl
or
sub
je
push
pop
xor
int
lods
arpl
hlt
test
or
jmp
lods
cltd
mov
and
mov
xor
pop
dec
jne
loopne
cmp
cld
add
shr
cmpb
push
cmpsb
test
jne
or
or
and
mov
lret
or
cmpsl
xchg
sbb
mov
or
and
lods
popa
jne,pn
sbb
mov
pop
into
push
mov
xor
shlb
or
subb
lcall
in
les
add
daa
xchg
sbb
mov
inc
sub
pop
add
sbb
xor
add
dec
mov
adc
add
mov
sti
mov
cmp
je
testb
or
lds
in
jmp
mov
jmp
mov
push
shll
add
out
or
mov
clc
pop
cmp
cmp
je
in
cmp
inc
cmp
outsb
sbbb
outsb
cs
pop
sbb
sbb
insb
add
or
mov
adc
and
mov
or
or
sbb
pop
leave
inc
or
or
and
cmp
mov
lret
jbe
bound
leave
and
add
xchg
aam
jl
inc
dec
test
sbbb
loope
sub
adc
add
adc
bnd
rolb
dec
ds
add
pop
rcll
mov
add
inc
adc
mov
jmp
lret
push
int
push
and
dec
lret
call
jmp
inc
jno
sti
add
dec
stos
add
sbb
or
inc
outsl
add
sbb
jno
loopne
cmp
inc
hlt
jmp
addl
jg
je
sub
or
inc
je
dec
shrl
test
dec
adc
sarb
inc
cmpb
jne
enter
add
sub
or
lock
bnd
xorb
jge
inc
divb
or
jmp
and
and
sti
jmp
decb
sti
mov
jb
push
jecxz
push
jne
dec
adc
mov
inc
ljmp
adc
popl
fisubrs
arpl
and
xor
lea
add
xchg
xor
outsb
push
ret
les
das
add
cld
jnp
cld
pop
imul
push
aam
in
push
inc
mov
inc
loopne
and
pop
xchg
xchg
adc
outsl
jg
test
add
pop
sub
clc
add
cwtl
mov
jle
inc
sbb
subb
outsb
push
add
jmp
add
pusha
cmp
lods
push
pop
in
push
loopne
push
sub
pushf
jmp
stos
sbb
mov
daa
gs
jne
mov
cmp
sub
push
into
mov
push
inc
ds
insb
mov
and
adc
and
jle
dec
or
into
push
pop
and
xor
push
inc
and
subl
pop
call
shlb
inc
mov
nop
insl
in
fwait
enter
mov
inc
dec
enter
jnp
ret
push
gs
xchg
sbb
inc
jmp
leave
jne
and
popf
push
out
adc
leave
or
mov
outsl
arpl
daa
testb
add
int3
andb
fldl
and
dec
xchg
push
enter
mov
dec
mov
loopne
dec
hlt
mov
jb
jle
add
fidivrs
or
jo
sarl
inc
ficoml
ret
xorl
cmp
cmp
pop
pop
jmp
mov
dec
addr16
mov
lock
xchg
sbb
pop
xchg
jno
lds
mov
cmpsb
je
mov
shrl
sbb
icebp
hlt
lcall
jp
xor
mov
dec
push
dec
xchg
cmp
je
pop
sbb
add
js
fwait
loopne
push
pop
rorl
ljmp
jbe
push
mov
or
bound
jmp
movsl
shl
sahf
sub
jns
push
jge
jnp
mov
xchg
or
pop
inc
cmpsl
and
mov
mov
pop
je
inc
cmp
inc
inc
ljmp
add
push
add
inc
cmp
jae
mov
jmp
mov
cmp
ja
add
repnz
mov
mov
call
add
xor
pushf
inc
dec
jne
xor
jmp
push
jns
or
mov
mov
jmp
and
fwait
adc
mov
cmpsb
outsb
xchg
sub
dec
push
dec
or
and
dec
leave
or
push
jle
add
pop
call
sub
sar
dec
or
shll
adc
cmp
ljmp
es
inc
enter
inc
or
pop
leave
incl
or
xchg
cmp
xor
sbb
xor
icebp
shrb
xor
dec
mov
test
add
push
jg
cmp
adc
push
xor
pusha
and
bound
jne
xchg
cmp
jmp
lods
mov
insl
push
mov
pop
jne
movsl
add
pop
fildll
or
and
mov
mov
xchg
mov
gs
cs
cmp
push
pop
loopne
cwtl
lea
cmp
cmpsl
stc
cld
cltd
add
add
and
dec
adc
pop
and
cltd
add
fists
inc
sahf
push
inc
test
out
jmp
dec
jo
and
roll
push
imul
mov
je
add
insb
shl
jmp
lea
shl
les
sub
cmp
cmpsl
pop
add
mov
ret
mov
jl
rol
fld
jne
je
neg
inc
mov
push
test
jne
mov
mov
adc
hlt
push
cwtl
rorl
loope
pushf
jmp
repz
in
sbb
add
cmp
mov
and
inc
jmp
lcall
cld
imul
sbb
sub
cmp
jae
push
enter
sbb
adc
daa
sahf
jne
and
fwait
inc
addr16
sub
outsb
jne
mov
xchg
fistl
push
divb
shlb
lea
jae
call
repz
dec
push
out
cmp
dec
add
pusha
push
test
ds
data16
jle
inc
mov
enter
pop
cvtpi2ps
push
test
mov
xchg
jo
sbb
subb
or
and
or
push
push
std
xchg
mov
pop
xor
mov
jno
loop
mov
or
and
rolb
leave
sbb
mov
push
ficoml
jae
mov
or
mov
push
mov
adc
and
andb
test
je
push
push
push
and
bound
add
adc
mov
xor
inc
rcr
dec
add
ljmp
dec
or
xchg
out
subb
push
xor
dec
or
movb
inc
dec
xchg
or
add
lea
sbb
xor
cmpsl
sub
mov
jge
call
loop
add
jl
mov
in
inc
jb
sbb
mov
shlb
mov
push
pop
repnz
adc
inc
test
pushf
and
xchg
mov
mov
cwtl
sbb
xchg
adc
push
mov
pushf
xor
int
sbb
pushf
cmp
jb
or
xchg
mov
sbb
cmp
adc
lock
lds
adc
pop
jmp
fldl
std
pop
clc
rorb
cmp
lock
jne
fmull
pop
insl
add
sbb
jbe
ja
pop
push
mov
scas
and
rcrb
dec
add
mov
ret
mov
jle
and
jge
add
sub
inc
ror
movsl
cmp
orb
dec
ret
sbb
cmp
out
push
mov
dec
push
pushf
push
pusha
inc
rep
pop
insb
sbb
stos
or
mov
jo
mov
inc
hlt
fsubs
mov
xor
gs
mov
mov
je
cmp
jne
dec
mov
inc
mov
fldl
inc
adc
mov
push
push
mov
mov
inc
pop
lods
inc
xchg
sbb
cld
out
insl
adc
cwtl
xor
mov
daa
int3
xorb
mov
mov
leave
fisttpl
lahf
rcll
add
xchg
roll
sbb
sahf
add
cmp
pop
movsl
add
out
adc
pop
mov
lods
inc
add
ds
sub
adc
add
rolb
lret
out
imul
imul
sub
addb
jmp
mov
sbb
aaa
cmp
enter
mov
in
jnp
push
adc
mov
enter
pop
add
jns
neg
mov
xor
sub
xchg
or
push
cltd
pop
idiv
add
mov
or
cs
jb
and
or
xchg
ds
mov
lahf
sbb
xor
inc
cmp
lods
lea
sbb
int
incb
xor
test
mov
lret
inc
add
ret
add
lea
push
std
nop
inc
xor
add
enter
push
data16
inc
jmp
add
xchg
push
mov
inc
jl
inc
in
mov
add
idivb
push
addb
fsubrp
push
call
fidivrs
xor
pop
mov
scas
push
cmp
test
xlat
mov
dec
or
aaa
nop
aad
push
push
data16
icebp
push
push
push
jp
xor
jae
pushf
rorl
push
dec
into
adc
popa
andl
sbb
mov
and
xchg
adc
push
lret
lret
imul
sub
movb
sbb
xlat
enter
out
enter
pop
aaa
cmpsb
push
leave
pop
fstpt
xchg
pop
xor
icebp
and
mov
lcall
mov
dec
or
adc
adc
rorl
test
cmp
push
sbb
fdivrs
add
test
sbb
int
and
sbb
call
jne
push
pop
inc
push
add
sti
inc
adc
cwtl
stc
sub
sbb
jmp
push
fcmovbe
jbe
lods
inc
xacquire
call
pop
lret
dec
jo
add
or
sub
dec
repz
inc
push
push
ret
and
bound
cmpsl
xor
cmp
sarb
dec
ret
sbb
leave
in
fistps
cmpsb
sub
dec
cmp
add
fimuls
cmp
sbb
jmp
addb
mov
mov
out
fdivl
lock
and
fstpt
dec
dec
lock
mov
push
je
pop
loopne
or
aad
add
fimull
jg
push
aam
movsb
mov
in
cmp
fsubs
adc
stos
es
or
movsb
sub
fmull
xor
adc
xlat
in
je
push
arpl
xchg
in
pushf
stos
int3
shll
cwtl
loope
add
stos
dec
fsubs
inc
sbb
es
push
jno
jne
mov
sbb
scas
jp
adc
lds
adc
or
cmp
add
push
rcr
mov
or
dec
sahf
cld
aaa
movsl
fstps
jne
add
enter
and
jmp
pop
xchg
mov
cmpsl
mov
mov
shll
xor
adc
orl
adc
push
jle
pusha
fstpl
inc
lock
dec
jmp
shrb
and
nop
clc
add
add
ret
or
xor
test
loop
enter
sbb
xor
and
and
sbb
fcoml
lea
mov
test
scas
enter
xor
inc
and
fiadds
sbb
cmpsl
mov
cltd
xchg
or
cmp
push
ljmp
ret
adc
pop
adc
mov
out
pop
arpl
inc
insl
jne
cmpl
xorb
mov
inc
dec
mov
subb
arpl
mov
repnz
rcrb
adc
mov
add
pop
add
mov
mov
movsb
inc
mov
ds
add
add
orl
dec
test
inc
mov
and
daa
nop
ret
mov
xor
or
data16
cs
or
shr
js
cmpsl
inc
pop
push
aam
rcl
push
cmp
jae
push
push
aam
cmp
and
repnz
xchg
mov
dec
push
inc
in
push
sbb
add
incl
rorl
or
inc
push
sub
push
mov
xor
mov
test
add
dec
mov
mov
pop
mov
inc
inc
mov
sub
cmp
rol
repz
add
sub
test
xor
or
clc
fmull
loopne
sar
imul
jecxz
mov
add
shlb
cmpb
add
pusha
cs
inc
jmp
xorb
xchg
stos
inc
and
mov
mov
inc
test
xchg
mov
and
sub
movsb
or
movb
adc
pop
xor
xor
pop
jbe
rolb
sub
cmp
jae
cmpb
adc
lds
and
xor
testb
inc
mov
ja
push
sub
mov
je
sbb
and
insl
sub
add
fs
xchg
sub
ret
jecxz
pop
adc
or
in
xchg
push
pusha
out
pop
in
roll
sbb
mov
fisttpll
mov
frstors
test
enter
jo
int3
and
add
lea
sub
mov
mov
pop
pop
or
cmp
or
testl
inc
enter
jo
movsb
repz
mov
dec
cmp
repz
cmp
repz
and
popl
xor
mov
push
popl
pop
roll
rclb
jge
push
sbb
in
or
inc
push
mov
pop
mov
rolb
sub
cmp
sarl
add
and
add
adc
lds
lea
fsts
dec
je
and
pop
add
and
jge
jne
jne
mov
insl
sub
shll
and
cmc
xchg
xchg
xor
cs
mov
loopne
or
or
jbe
inc
and
enter
je
jmp
aam
movsb
lods
sbb
cli
mov
add
mov
cmp
je
cmp
lret
adc
add
rcrl
call
mov
and
mov
jno
add
nop
cmc
pop
mov
pop
je
push
push
inc
xor
lret
mov
pop
inc
cmpb
push
pop
push
xor
push
sub
xchg
pop
push
jne
pop
in
or
mov
xchg
pop
insb
add
xchg
jo
rcrl
mov
mov
push
mov
sbb
out
loop
nop
push
jae
or
aam
push
aam
insb
mov
sub
iret
or
xchg
es
cltd
dec
or
hlt
sarb
mov
sbb
xor
jns
andl
enter
and
mov
aaa
xlat
add
inc
add
nop
cmp
add
cli
repz
inc
clc
sub
mov
push
adc
add
fnstenv
mov
inc
inc
aad
into
jnp
sbb
mov
inc
aaa
outsl
pop
mov
jge
dec
adc
testb
dec
inc
pop
and
nop
gs
divb
imul
sbbl
ret
push
loopne
into
inc
jmp
mov
xor
cmp
call
and
and
icebp
pop
inc
dec
xchg
imul
mov
adc
movl
push
js
and
xor
jae
jmp
xor
push
or
rcrb
sete
cmp
shr
mov
dec
or
inc
sub
inc
das
mov
sbb
pop
inc
sahf
adc
xor
adc
dec
cmp
es
aas
je
loop
push
repz
ss
sahf
icebp
fwait
aad
jb
jae
into
adc
and
jmp
xchg
test
test
sub
xor
and
adc
mov
jmp
in
dec
mov
cmp
shrb
rorl
and
pop
cmpsl
add
xlat
test
test
jns
ret
push
or
pushw
inc
inc
or
push
and
jne
repnz
imul
sar
aaa
inc
pop
cmp
stos
sbb
xchg
dec
ret
aam
jns
jmp
xor
push
lret
push
jb
scas
enter
adc
inc
mov
xchg
into
sub
or
pop
call
pop
dec
mov
lds
aad
mov
cmp
push
sti
sti
imulb
movl
mov
insb
into
mulb
ds
mov
mov
sbb
pop
pop
movsl
fnstenv
out
mov
sub
sub
push
test
adc
and
enter
jo
inc
sbb
movb
mov
or
jmp
lea
or
movsb
jl
pop
xchg
int3
mov
xor
mov
andb
cs
add
push
jge
mov
cmpsb
adc
lahf
adc
orl
mov
sbb
jg
inc
mov
sbb
dec
mov
in
lods
push
jl
jmp
xchg
push
inc
mov
inc
addb
mov
adc
mov
or
gs
rcrb
cld
jle
test
jl
or
and
ret
add
jl
cmpl
fdivs
add
or
pop
jmp
enter
dec
shl
push
in
mov
lret
pushf
adc
push
or
or
mov
mov
outsb
sbb
push
add
jmp
addb
rorb
jl
call
call
xchg
enter
xchg
adc
add
jmp
mov
mov
in
inc
add
adc
dec
push
mov
pmaddwd
add
stos
shrb
push
xorl
add
inc
orl
je
icebp
xor
add
mov
mov
jl
jne
out
adc
push
inc
mov
adc
ret
popl
or
push
popa
fs
or
push
cmpl
mov
or
push
add
push
mov
sub
test
ficoms
add
pop
pop
ret
test
push
inc
xor
pop
inc
xor
or
dec
and
jb
jle
testl
rclb
mov
adc
jae
or
dec
push
popa
jbe
sbb
adc
lea
nop
roll
add
push
repz
jg
xchg
leave
or
popa
in
inc
jo
in
lea
or
dec
sbb
jmp
dec
inc
or
sbb
or
jmp
push
test
lods
gs
call
and
xchg
push
sbb
and
shrl
or
sub
inc
add
xorb
cld
addr16
mov
lret
mov
stos
sbb
inc
movsb
push
jecxz
lock
mov
inc
cmp
xorb
out
cmp
sbb
mov
xchg
bound
cmc
adc
cmpsb
jp
ret
or
stos
lea
and
cmp
or
push
xchg
dec
cmp
xlat
and
sub
movsl
mov
pop
test
flds
jae
pop
andl
subl
clc
push
aam
xor
faddl
call
jbe
fdivrs
pushl
fcoms
iret
lds
push
cmc
aad
pop
jmp
loopne
cmp
ret
pusha
ss
add
insb
filds
in
sbb
xor
outsl
bound
adc
pop
add
jo
xor
jmp
inc
rorl
pop
adc
and
mov
add
mov
push
push
lods
dec
jb
adc
xchg
add
decb
add
inc
ret
mov
shlb
pop
test
mov
and
arpl
negb
mov
and
xor
rclb
jbe,pt
push
arpl
lret
sbb
sbb
push
subb
adc
nop
inc
ret
mov
mov
sbb
push
lock
sub
or
or
and
push
pushf
adc
xchg
adc
mov
cmpb
add
inc
xchg
aam
xorl
out
stos
push
lods
sbb
ja
push
or
mov
xchg
insl
push
dec
push
add
sbb
out
in
or
je
mov
jo
push
je
sbb
cmp
fsts
xlat
insb
push
pop
pop
adc
fwait
mov
add
mov
rcrl
mov
add
dec
xor
pop
mov
and
jp
inc
es
push
add
sbb
movsl
sbb
jmp
int3
cs
sbb
lcall
cmpb
lea
rcpps
movsb
fsubl
jmp
sbb
push
mov
fwait
nop
dec
sub
push
lods
push
sub
sub
jne
test
sbb
jle
pusha
lea
js
andnps
icebp
loope
xchg
and
sbb
pushf
lock
lock
lock
push
test
sub
aad
out
testl
in
in
out
sahf
int3
les
and
call
repz
and
arpl
call
repnz
jge
push
repnz
pop
or
popl
jno
repnz
dec
iret
push
sar
cmc
mov
std
inc
push
dec
arpl
push
pop
jns
out
fs
je
test
vmovdqu
mov
call
dec
push
push
mov
add
push
push
adc
sbbb
or
clc
rcll
enter
jnp
push
es
and
jmp
jle
xor
xor
leave
xchg
cmpsb
movsb
adc
clc
adc
mov
shl
es
dec
fwait
mov
pop
xor
push
cmpl
pop
lea
popa
mov
jne
add
testl
push
add
cmc
jmp
ret
and
mulb
pop
mov
dec
add
test
mov
push
mov
push
xchg
jne
cmp
les
jle
pop
xor
xchg
jo
xor
dec
dec
push
push
and
or
shlb
ds
sahf
sub
testb
inc
mov
loope
je
mov
lret
pop
push
cmpsl
sub
shll
lea
xchg
adc
and
xchg
adc
gs
ficomps
test
pop
repz
add
push
test
push
and
loope
call
in
decl
andb
and
fsubs
mov
mov
test
inc
and
or
add
adc
subb
and
sub
jmp
sub
adc
mov
lds
and
jb
inc
jmp
and
stos
les
lret
roll
and
je
push
shll
lock
and
cmp
add
lock
mov
and
mov
add
inc
lret
je
cmp
je
push
xchg
orl
cmp
enter
aaa
clc
adc
js
cs
jmp
add
sbb
in
cmpsb
mov
add
jno
inc
jne
int3
or
je
mov
loopne
xchg
sub
shll
dec
adc
push
rcr
lret
sbb
mov
bound
or
or
insb
aam
test
pop
push
roll
sub
iret
xor
mov
mov
sbb
ds
int
rorl
cwtl
lock
sbb
movb
data16
out
shrb
mov
mov
push
imul
sbb
test
add
sub
mov
or
cmp
add
cmpsl
xor
inc
or
push
and
add
js
sub
add
add
cmp
testb
pop
adcl
xorb
adc
ds
push
adc
dec
jne
mov
mov
stos
outsb
mull
add
adc
hlt
mov
adc
pop
cmpsl
bound
sbb
jl
or
cmpsl
xor
pop
andb
pop
cmp
repnz
push
mov
ror
adc
push
cwtl
adc
adc
pop
ret
cmp
push
sahf
add
and
data16
push
push
add
punpcklbw
lahf
test
mov
jle
cmp
cmp
jl
xor
xchg
rcll
adc
pop
add
popf
jb
cmp
adc
pop
xchg
cli
rorl
test
xchg
lret
and
decl
fsubrs
jbe
add
push
push
gs
mov
and
cmpb
jae
and
shld
shl
movsb
add
add
and
shl
ret
fwait
push
xchg
push
or
xchg
call
inc
dec
filds
mov
push
cmpsb
sub
test
sub
imul
inc
or
add
and
mov
testb
or
decl
je
lret
mov
ret
mov
call
add
out
add
dec
and
fstcw
inc
xor
jmp
xchg
or
shlb
or
cmp
pop
and
lock
pop
fldcw
aam
cmp
sarb
sbb
cmp
pop
or
sub
push
pop
add
mov
icebp
jecxz
out
mov
adc
sarb
add
add
test
rorb
mov
rcrl
mov
xchg
pop
je
mov
cmp
pop
test
or
or
xchg
popl
stc
cmpsl
push
sub
shlb
fsubs
pop
pop
test
pop
lcall
sub
dec
ss
pop
add
xchg
cwtl
or
sbb
xor
sbb
ret
and
adc
into
lock
daa
jne
or
lds
jno
add
add
jns
add
push
cmp
or
cmp
pop
and
xor
adc
movl
xchg
xchg
push
sub
into
or
enter
lret
in
arpl
not
test
jne
inc
cmp
jge
pop
mov
mov
inc
or
add
rolb
pop
cmp
xchg
and
int3
xor
pop
pop
push
push
mov
lods
aaa
clc
lods
fstl
push
xchg
dec
js
clc
cs
add
sahf
mov
jge
icebp
out
or
mov
int
andl
lds
int
icebp
pop
add
pop
cltd
mov
leave
out
adc
xor
mov
sub
pop
mov
xchg
test
test
inc
in
mov
and
push
divl
dec
jmp
mov
xor
and
add
loope
enter
test
loope
or
add
fidivs
xor
xor
dec
mov
bound
sbb
xchg
and
adc
std
add
push
xchg
popa
jge
pop
cltd
lock
jne
mov
and
mov
out
push
sbb
enter
loopne
inc
call
xchg
shlb
lret
les
jne
cmpsl
add
adc
pop
mov
xor
mov
pusha
add
jl
cmp
mov
adc
imul
jns
andb
and
mov
or
pop
inc
dec
push
out
int3
inc
dec
add
jecxz
pop
mov
sub
and
sti
add
incl
cmp
testb
xchg
das
push
dec
rcr
das
hlt
jmp
pop
mov
in
jecxz
sub
loope
pushl
dec
jb
push
sgdtl
inc
add
inc
sbb
incb
or
cmp
fdivrs
sub
icebp
mov
cmp
sub
fsts
mov
cltd
sbb
iret
mov
popf
and
jbe
in
or
cmpsl
add
pop
inc
testl
xlat
pop
mov
rorb
sbb
or
repz
dec
jbe
shl
outsb
sbb
addl
xor
inc
or
mov
mov
sub
add
sbb
fldl
jmp
pop
es
je
mov
aam
fs
dec
mov
ljmp
adcl
adc
xor
xor
pop
mov
test
push
add
adc
rolb
mov
loopne
pop
mov
inc
pushl
sahf
and
adc
jo
adc
or
pop
adc
jmp
xor
inc
add
adc
mov
xchg
mov
in
or
push
mov
out
jne
lea
push
add
fcomps
cld
push
call
movsl
and
add
xorb
or
mov
mov
add
mov
lcall
inc
fistpl
call
inc
push
mov
inc
and
shll
sub
pushf
fstl
popf
inc
icebp
or
inc
mov
mov
dec
mov
and
mov
mov
jmp
pop
inc
xor
sbb
divb
pop
aad
add
andb
dec
jo
vpperm
sub
or
push
add
mov
add
mov
shr
or
mov
mov
ffreep
dec
xchg
cmpsb
or
dec
or
lcall
shrb
lock
push
dec
incl
inc
fs
push
sub
mov
sub
out
cmp
andl
clc
imulb
mov
sbb
test
mov
mov
cmp
xchg
pop
mov
adc
inc
icebp
imul
add
mov
sub
stos
je
mov
mov
repz
xchg
loope
jmp
cmp
or
pusha
sub
xchg
push
push
push
mov
mov
sarl
je
cmp
fwait
jne
mov
es
pusha
aas
or
sbb
mov
mov
rcrl
stc
aas
add
loop
aam
jp
orl
inc
repnz
es
adc
cmpsb
or
or
push
out
mov
dec
fisubrl
pop
and
lret
xchg
xchg
loope
lea
and
push
pop
popa
add
pop
inc
pop
and
add
mov
mov
imul
add
add
jg
inc
jmp
cmp
inc
jns
ret
int3
in
data16
add
aas
cmp
repz
std
jns
and
push
enter
cmp
cmp
or
shlb
and
mov
xchg
and
pop
xchg
hlt
pop
or
rcrb
cmp
and
adc
add
pushf
and
or
sub
xchg
mov
enter
lahf
jmp
int
popf
mov
dec
lret
xor
xlat
stos
push
push
jmp
sub
aam
push
or
test
cmp
xor
loope
push
pusha
inc
out
pop
pop
jne
dec
pop
sahf
leave
pop
push
pop
push
sarb
adc
mov
lret
jmp
push
push
or
push
jmp
push
ret
inc
inc
add
sub
into
std
push
push
jnp
rol
pop
add
push
dec
mov
cmp
jge
cmp
pop
mov
mov
mov
pusha
pop
call
sbb
xchg
inc
enter
push
mov
jle
xchg
ret
adc
in
or
mov
push
je
sub
shlb
rol
rclw
mov
push
add
popa
int3
adc
sbbl
gs
sub
mov
sbb
mov
push
lock
pop
imul
push
sar
insb
add
clc
lea
addb
insb
testl
jg
pop
sub
add
andb
sbb
cmpsl
push
jae
test
jp
sbb
push
cmp
adcl
sub
into
jle
sub
jmp
rolb
inc
or
xchg
gs
add
loop
dec
jge
imul
sti
inc
int3
sub
stos
sub
in
xor
jmp
fcompl
lods
add
loopne
or
xor
pop
es
fcomps
jecxz
push
in
dec
pop
inc
or
push
and
nop
test
mov
mov
shll
adc
jne
addl
cld
scas
push
inc
ss
sbb
loope
and
sarb
mov
hlt
push
les
inc
les
push
mov
das
mov
scas
mov
mov
je
push
stos
mov
push
int3
jb
xchg
movsl
mov
rcrb
push
insb
mov
sbb
and
and
inc
daa
jmp
jle
in
scas
or
push
mov
dec
in
jns
sub
ja
sub
and
mov
cs
sub
xchg
xor
inc
les
add
stc
mov
adc
aas
push
push
mov
dec
jne
lods
jae
xchg
sbb
push
and
jmp
imul
icebp
push
jmp
cmc
mov
popf
add
rorl
inc
das
testb
inc
je
outsl
mov
xor
add
insb
pop
mov
jl
pushl
xorl
and
add
sbb
add
inc
sbb
ja
push
mov
xor
adc
testb
repnz
leave
pop
xor
and
sub
dec
xchg
xchg
testb
xchg
or
lea
mov
add
das
adc
or
clc
jge
pop
movsl
pushf
cs
inc
push
xor
rcrb
jmp
sub
sub
shrb
inc
int
rorl
sarb
daa
or
mov
dec
sub
xchg
movsb
int3
jo
bound
aam
imul
bound
or
sbb
or
mov
cmp
insb
sbb
jae
sbb
adc
or
ljmp
outsb
inc
cltd
pop
fidivs
popf
outsb
and
call
add
pop
or
lret
jp
add
bound
mov
add
xchg
add
xor
shr
or
mov
sbb
adc
jo
shr
shl
or
pop
mov
mov
push
sbb
int
faddl
jmp
add
out
ljmp
mov
adc
add
push
push
adc
push
dec
inc
leave
and
mov
mov
or
push
push
in
repz
out
add
push
stc
sub
jecxz
push
sub
sub
cmpsl
into
mov
addr16
dec
fadds
sahf
out
cld
cmpsb
pop
xor
sbb
jecxz
imul
mov
sbb
dec
mov
add
shl
xor
push
dec
jae
jmp
mov
jae
ds
in
into
incl
cld
pop
mov
decb
pop
sahf
call
les
ret
movsb
loope
xchg
pop
cmpsb
adc
jno
ret
loopne
mov
in
in
mov
je
mov
or
sbb
sar
inc
jmp
mov
adc
or
xchg
andl
inc
sti
xor
xchg
fcompl
push
and
loope
std
push
dec
inc
xor
add
inc
jae
aam
xor
push
xor
fcomps
iret
in
pusha
cmpsl
push
add
sahf
es
adc
xlat
stos
pusha
push
or
dec
xor
adc
xor
jle
and
adc
sub
jb
std
inc
fs
dec
push
inc
in
arpl
nop
inc
mov
ljmp
mov
mov
jle
mov
push
inc
decb
jle
in
adc
push
mov
jns
cltd
cmpl
jae
push
xor
inc
addb
inc
mov
arpl
jmp
dec
fwait
inc
inc
loope
xchg
in
add
pop
jnp
fdivl
js
repz
rep
iret
mov
sbb
mov
mov
or
sub
out
das
adc
or
in
xchg
and
popf
jmp
lea
das
sub
xchg
popf
out
sbb
inc
jb
mov
inc
pusha
adc
gs
adc
bound
out
adc
mov
in
sub
or
xor
push
push
jg
push
pop
dec
repz
loopne
jmp
test
and
sub
shrl
je
inc
sbb
push
xorl
mov
adc
or
or
mov
and
push
xchg
inc
setne
or
hlt
or
lea
push
adc
test
or
mov
es
mov
jmp
in
xor
add
dec
les
cld
jbe
cmpb
inc
and
add
mov
hlt
dec
pop
adc
jmp
adc
nop
dec
add
inc
dec
xchg
push
lods
adc
stc
xchg
xor
sbb
xor
pusha
neg
add
mov
push
xchg
sbb
inc
sbb
jle
rol
sub
in
add
jo
adc
leave
and
in
xor
mov
lcall
mov
cmp
jl
dec
or
loop
jns
lock
inc
add
adc
orl
das
bnd
pop
push
mov
adc
add
imul
and
imul
les
mov
orl
stos
or
adc
cli
and
mov
jns
call
pop
push
repz
mov
loope
es
mov
jno
fmull
test
push
out
or
int3
in
out
out
sahf
call
cwtl
xchg
loope
in
out
sti
out
aas
xor
cmp
inc
add
xchg
sub
sub
inc
mov
or
loope
andw
xchg
jo
dec
add
add
subb
data16
bound
mov
pop
xchg
pop
sbb
test
shrb
jmp
lods
addl
mov
test
and
jne
push
add
mov
add
subb
add
push
loope
mov
ret
mov
rclb
inc
sbb
add
or
mov
subb
imul
mov
lea
decb
jge
repnz
sub
or
mov
dec
add
cli
aas
jb
inc
out
adc
add
sbb
xor
shrb
adc
xchg
and
sub
sub
adc
out
aas
lret
cmp
cli
out
orb
dec
dec
sbb
lock
sbb
icebp
pop
neg
and
jle
pop
dec
test
ret
mov
cmpb
jne
inc
mov
mov
cmc
test
insl
or
or
mov
mov
xor
pop
or
add
mov
xchg
ret
lea
push
add
clts
dec
jmp
cwtl
dec
inc
icebp
inc
callw
sub
sub
mov
dec
push
loop
sbb
pushf
out
sub
dec
jbe
hlt
flds
in
popa
add
andb
mov
lds
adc
subw
cmp
inc
je
outsb
subl
out
inc
sub
add
adcl
das
push
cmp
mov
sub
cmp
jne
xor
xchg
inc
add
rorl
and
xchg
jae,pn
xchg
mov
mov
mov
mov
mov
inc
mov
jne
jg
or
subl
or
sub
inc
mov
and
xchg
lret
popw
push
mov
into
push
push
xchg
push
xchg
and
in
and
mov
mov
xor
and
and
and
sbb
add
jae
pusha
xchg
std
mov
xchg
and
adc
mov
rcrb
push
mov
inc
add
pop
add
mov
lahf
adc
sub
enter
je
push
cmp
cmp
cs
dec
test
inc
rorb
lcall
pusha
cmp
movsb
and
or
out
push
cmp
sub
sub
roll
mov
cmpsb
sar
sar
push
pushl
cmp
inc
xchg
push
jp
mov
push
rorb
subl
call
mov
cld
xorl
subl
es
das
inc
mov
out
popf
in
mov
fcomps
mov
lcall
inc
push
cli
add
fmuls
sbb
add
test
or
pop
dec
ljmp
pusha
xchg
in
fsubl
lods
or
or
pop
cmp
jne
xor
sub
or
xchg
jge
inc
outsb
test
loop
out
add
xchg
pop
sub
data16
sub
loop
mov
mov
pop
add
push
mov
insb
mov
or
jmp
fistps
call
mov
std
add
lret
mov
push
mov
sahf
jmp
or
arpl
cmpsb
test
mov
pop
mov
cmp
push
mov
ret
push
mov
pop
in
test
je
lea
cmp
lea
repnz
in
sbbb
imulb
les
jecxz
mov
jne
mov
pop
jns
ret
and
jno
xchg
sub
xchg
ja
les
cltd
xor
dec
add
xor
sar
insl
lahf
inc
testb
lods
adc
je
mov
pusha
push
push
push
pushf
xchg
cwtl
shr
jl
inc
movsb
and
pop
jl
das
push
push
adc
push
xchg
ja
movb
dec
pop
and
lahf
dec
mov
jne
push
es
mov
cmc
inc
jge
xor
in
inc
lret
mov
mov
jne
push
mov
lods
mov
jge
pusha
cmp
ret
bound
sbb
test
movsb
in
divb
nop
add
cmp
jle
push
push
cmp
mov
cmp
xchg
into
push
mov
out
mov
mov
cmp
push
fnsave
add
aaa
dec
or
and
pop
mov
cltd
add
xchg
es
iret
lock
cmp
mov
test
imul
lods
lahf
idivl
lea
fcomp
sbb
mov
push
not
jo
add
outsl
add
add
lret
lret
mov
inc
das
cmp
inc
mov
jb
cmp
cltd
sub
jbe
inc
out
add
movsl
addr16
movsl
pushf
sbb
sbb
jge
and
jbe
loop
out
xor
pop
adc
imul
mov
movlhps
int
popf
jb
in
cmp
add
mov
cmp
stos
js
pusha
and
xchg
xchg
cltd
aad
in
loopne
lods
add
popa
test
jne
cld
insl
filds
xor
fsubrl
fiaddl
fwait
cmp
je
iret
add
xchg
add
mov
cmp
mov
std
mov
lea
and
add
icebp
dec
and
cld
cmpsl
repz
pop
outsl
xor
fstpl
jno
popl
je
push
or
mov
or
je
cmp
push
inc
mov
sub
cmp
insl
or
sbb
mov
jne
mov
cmp
adc
dec
ret
aas
test
cmpsl
mov
repz
jne
std
sarl
les
sub
popf
or
rorl
sbb
jl
cmpl
mov
pushl
lea
inc
aam
pop
or
lock
sub
mov
xor
lods
rolb
push
cmp
xor
add
jmp
jne
rclb
lods
cmp
es
adc
sbb
or
andl
insl
lock
xchg
inc
inc
inc
inc
xchg
es
inc
lods
sbb
jp
pushf
pusha
dec
lret
pop
sub
mov
bound
fistpl
fcomi
shll
fcoms
stos
mov
pop
sbb
std
push
adc
sub
add
add
add
clc
xor
test
test
rcrl
sub
mov
add
mov
test
fmuls
lcall
test
xchg
test
mov
pop
fisttpl
sbb
pop
imul
mov
or
mov
leave
dec
negb
inc
mov
adc
jne
mov
movsl
cld
mov
adc
sbb
popa
inc
cmp
sub
adcb
ror
aam
rol
cmp
push
hlt
push
inc
adc
and
sarb
push
or
jmp
les
decl
dec
je
sub
scas
mov
test
or
mov
and
jb
mov
es
jmp
scas
xor
add
xor
sbb
ljmp
or
pop
ja
inc
jb
movsb
mov
sub
sbb
xchg
call
pushf
push
aaa
cmp
je
jmp
and
std
or
ss
push
inc
push
inc
or
xor
je
pop
inc
push
inc
inc
cltd
mov
xor
and
enter
and
out
xchg
mov
sub
adc
dec
or
fs
mov
xor
inc
adc
push
mov
lret
das
andb
add
push
lds
sub
pop
mov
cwtl
lds
je
insb
es
mov
cli
sbb
cmp
push
adc
push
or
push
sub
imul
nop
dec
stc
rolb
push
test
dec
mov
sbb
lods
jae
ljmp
push
xchg
adc
mov
out
or
in
or
and
test
aad
in
test
xchg
loopne
and
cmp
add
add
mov
cmp
mov
mov
icebp
sti
icebp
out
mulb
push
fidivs
push
inc
pextrw
add
cs
dec
inc
sbb
mov
into
add
ds
loop
or
imul
nop
xlat
hlt
rcl
arpl
mov
in
jnp
inc
addr16
lret
es
fwait
dec
or
in
les
outsl
and
clc
test
mov
xor
iret
xchg
mov
and
mov
sub
mov
dec
scas
pop
nop
xchg
dec
inc
rcl
lret
cmpsl
inc
ds
or
sub
inc
sub
mov
xchg
mov
dec
add
pop
push
add
mov
mov
jne
sbb
jb
int3
sbb
rcll
adc
jge
je
aam
inc
movsl
mov
imul
mov
rorb
aam
sub
or
lea
jmp
or
jns
mov
movl
lea
pushf
jle
jnp
and
test
pop
addb
fnstcw
sub
jle
sbb
pop
add
cs
loopne
add
ja
popa
push
out
mov
push
or
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
add
add
rclb
mov
sub
mov
sbb
dec
jno
repz
add
inc
mov
in
insl
push
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
add
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
add
add
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
roll
add
add
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
add
add
mov
or
or
and
or
adc
stos
sbb
data16
add
mov
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
call
xor
test
xchg
add
add
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
add
add
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
add
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
cmp
add
je
mov
aam
movsl
fisttps
xchg
fadds
add
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
add
or
cmp
add
daa
adc
or
and
add
add
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
xorb
lods
insb
mov
mov
lcall
mov
cmp
add
add
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
add
add
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
add
ficompl
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
add
add
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
mov
fisubrl
or
scas
testb
pusha
jp
add
add
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
add
add
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
add
add
xlat
ret
shlb
sbb
ret
es
pushf
mov
insl
add
add
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
adc
add
int
mov
mul
ja
outsl
ja
mov
out
and
add
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
add
insb
push
js
or
push
addl
mov
cmp
cmpsl
add
add
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
add
sahf
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
ret
sbb
add
sub
sub
or
pop
add
add
xchg
loop
add
add
mov
xor
sahf
and
cmp
pop
or
aaa
xor
push
lahf
add
jb
add
pusha
xchg
add
js
dec
arpl
or
sub
outsb
add
insb
add
daa
subl
outsb
jne
insb
add
or
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
cmpsb
mov
push
push
inc
push
push
and
testl
add
inc
cmpb
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
and
out
outsb
je
inc
push
dec
push
mov
add
sub
dec
cmp
add
ljmp
mov
popa
loope
inc
cwtl
jo
and
and
insl
shrl
adc
gs
and
inc
mov
js
cmp
dec
dec
inc
add
pop
ss
dec
dec
sbb
nop
add
cmp
sbb
bound
outsb
imul
jp
inc
jo
cmp
iret
aaa
outsb
outsl
je
add
hlt
jne
push
arpl
sahf
sbb
arpl
bound
jmp
out
add
call
fs
test
jbe
jb
jb
lahf
arpl
or
inc
out
xor
inc
pop
pop
gs
cmp
add
xchg
les
cli
xor
outsl
sub
lds
jo
repz
out
fs
iret
pop
pop
arpl
or
in
gs
xchg
jg
sahf
aaa
insl
outsl
pusha
daa
ret
mov
arpl
pop
and
cs
int
fs
and
jmp
sbbl
add
add
popa
insl
mov
je
addr16
inc
mov
mov
jmp
cmp
addr16
push
fisttps
pcmpgtd
popa
mov
rorl
adc
cld
dec
cwtl
mov
addr16
inc
push
sub
jae
lods
add
push
je
rcrb
dec
imul
pop
or
shll
and
mov
cs
push
mov
add
mov
js
jbe
les
ljmp
xchg
ret
loop
push
dec
sub
inc
lea
push
push
inc
jp
add
inc
jb
push
popa
or
sub
es
add
cwtl
or
insb
inc
orb
dec
dec
outsl
push
inc
push
mov
gs
popa
shlb
push
test
jne
and
mov
sti
inc
fisubl
outsl
js
dec
add
xor
push
dec
inc
test
jecxz
add
mov
cli
cmpsb
stos
pop
inc
add
sbb
sbb
clc
jo
xchg
clc
loopne
clc
jo
cld
pop
push
and
clc
cmp
lret
in
sarl
mov
dec
or
xor
sbb
xlat
inc
test
mov
jno
or
inc
shl
mov
cmp
repz
ret
xchg
icebp
cmp
dec
xor
cmp
sahf
data16
xchg
mov
mov
in
add
repz
jecxz
es
pop
iret
repz
je
mov
ficompl
adc
push
xor
sahf
out
dec
pop
insb
xchg
out
rcl
add
iret
repz
push
sub
dec
pop
push
repz
adcb
repz
inc
fsubr
decb
jns
out
sbb
dec
pop
jo
out
sahf
out
cmpsb
mov
cmp
es
loope
cmp
cld
inc
push
inc
addb
out
sahf
scas
lret
or
iret
repz
sub
push
pusha
repz
rep
xchg
iret
rcl
xchg
cmp
or
iret
repz
je
pop
adc
repz
xchg
adc
xchg
cmp
add
adc
xor
adcl
bound
jno
add
fimull
xor
xchg
imul
sbbl
add
xchg
mov
dec
inc
jns
fiaddl
push
outsl
cmpl
stos
add
out
in
xchg
arpl
xor
inc
dec
mov
mov
add
add
pop
add
inc
mov
cwtl
push
mov
push
imul
jb
pop
push
adc
xchg
push
pop
fwait
dec
pop
gs
cmpsl
cltd
int3
int
aaa
sbb
aad
add
push
imul
mov
inc
imul
ss
add
dec
jl
loop
cmp
or
mov
inc
add
enter
ret
dec
movsb
lret
fisttpl
ja
pop
or
add
lock
ds
push
jo
xor
and
fimull
gs
sti
aaa
sub
nop
jp
sbb
imul
inc
sbb
leave
jns
rorb
add
jns
test
inc
stos
mov
hlt
lcall
lret
inc
call
popa
inc
fsubr
dec
jmp
insb
pop
gs
add
dec
add
mov
fcompl
dec
cmp
out
add
out
pop
push
inc
mov
imul
mov
inc
repz
adc
jmp
dec
xor
add
int
sub
inc
in
pop
push
inc
insb
lods
dec
in
add
mov
dec
lea
out
pop
pop
mov
sbb
pop
or
pop
iret
mov
lret
dec
pop
push
cmp
mov
inc
push
inc
add
and
lods
push
push
xor
nop
mov
jne
inc
rorl
lea
jno
add
ret
add
inc
aad
scas
mov
iret
xorb
add
add
arpl
data16
sub
sti
cmp
push
mov
lret
dec
addr16
int
xchg
pop
leave
xchg
xor
inc
fwait
jo
leave
jge
push
je
fs
push
daa
js
cmp
push
jo
jae
xchg
cmp
sahf
sarb
enter
orb
sub
push
fwait
add
dec
pushf
cmpsl
shrb
enter
jl
mov
xor
popa
fimull
push
jge
cwtl
mov
bound
dec
cmp
mov
jmp
dec
js
loope
scas
fwait
mov
fcmovne
outsl
jbe
repnz
xchg
push
imull
add
popa
adc
mov
insb
popa
push
mov
jns
mov
jecxz
es
lret
xor
dec
daa
xchg
push
insb
int
jns
mov
push
jae
fildl
jo
fwait
loope
inc
in
xchg
gs
jb
shlb
fldcw
bound
nop
hlt
outsb
js
jp
inc
jbe
inc
fisubs
jp
pop
nop
inc
jne
imul
outsb
pop
fmuls
shll
xchg
push
inc
scas
sbb
jnp
cmc
scas
jge
sbb
or
jae
mov
fidivs
mov
push
int3
mov
gs
cmp
jmp
dec
mov
and
inc
jmp
jns
fwait
lods
cmp
aad
jecxz
jne
push
xchg
lahf
inc
pushf
roll
xor
ret
cmp
pop
cmp
xchg
xor
inc
jo
fdivl
out
push
mov
lret
mov
pop
out
xchg
sar
dec
pop
mov
add
int3
pusha
repnz
sbb
rorl
fs
gs
push
jns
int3
xchg
out
divb
xor
dec
pop
sub
repnz
sbb
sub
mov
inc
iret
inc
push
sbb
shl
add
inc
jg
imul
xor
push
xor
push
or
pop
mov
loope
scas
in
inc
mov
leave
ds
inc
addb
pop
add
pop
sub
sub
imul
mov
push
add
das
xor
sbb
pop
and
movsb
and
je
test
add
cmp
das
cmp
dec
loopne
out
inc
sbb
add
adc
cmc
sub
or
std
jmp
pop
dec
rcr
add
xor
mov
xorb
loop
jmp
call
push
add
add
imul
xor
fsts
movsl
lcall
add
mov
lea
adc
imul
shrb
xchg
rol
pop
popf
fdivrl
adc
add
adc
mov
lcall
test
push
xor
js
or
sbbb
xchg
adc
lcall
ficompl
into
gs
jns
or
repz
lock
mov
pusha
repz
repz
imul
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
push
shl
sbb
adc
inc
xchg
test
jnp
adc
mov
add
pop
fbstp
leave
iret
lret
repnz
pop
fisubs
inc
stc
push
movsl
jge
pusha
add
xor
enter
sbb
jnp
pop
jno
or
sarb
cld
in
leave
jmp
cli
fdivr
std
jmp
ljmp
adc
in
cld
add
sub
fcomps
cltd
aad
clc
std
aad
sti
mov
clc
jmp
out
ljmp
adc
sbb
repnz
sti
lock
lock
clc
cli
jmp
sarb
dec
dec
dec
push
dec
dec
sbb
push
testb
int
add
jae
pop
shlb
jae
mov
xor
push
arpl
jne
cmp
ds
ss
rcrb
sti
jnp
jno
bound
ja
inc
aas
sbb
test
call
push
xlat
mov
movsb
dec
push
xor
movsl
shlb
jbe
cld
into
out
jne
es
and
out
imull
jg
jae
cld
scas
in
arpl
stc
push
mov
arpl
xor
insl
pop
xor
and
es
sbb
and
imul
mov
or
mov
gs
enter
jno
insb
and
jae
mov
sub
jae
pop
add
je
cmpsl
sub
pusha
inc
xor
lock
mov
outsl
xor
xchg
pusha
jno
aaa
xor
add
add
xlat
add
je
push
jp
rcll
cmp
das
xor
or
in
xor
in
rorb
imul
push
lcall
add
js
lret
gs
jg
push
push
mov
inc
jo
mov
rolb
add
jmp
leave
adc
adc
dec
fs
in
cld
jnp
add
fcompl
xor
std
int3
inc
fs
lret
ficoml
add
sub
shlb
or
add
mov
adcb
adc
add
and
push
rolb
pop
inc
or
test
or
pusha
or
dec
inc
test
mov
icebp
cmp
xor
cld
pop
dec
sub
adc
xchg
jle
je
fadd
sub
pop
iret
lods
add
add
pop
aas
lret
lahf
daa
mov
out
cmpsb
movsb
repz
out
lods
stos
repz
inc
pusha
pop
nop
inc
cmp
cmp
and
or
mov
and
jo
push
cwtl
push
fistpll
outsl
push
add
mov
sbb
mov
iret
add
push
fcomps
adc
mov
dec
popf
inc
iret
andb
push
sbb
pusha
push
not
xchg
outsl
dec
ja
cmp
add
add
jmp
mov
jp
cld
xor
movsl
mov
std
outsb
pop
pop
xchg
das
or
ja
imul
std
sub
sub
cs
mov
test
push
fs
xchg
cmp
mov
and
pop
pushf
shll
imul
push
les
popa
xor
or
loop
add
mov
in
pop
rorb
inc
dec
test
or
std
jg
sbb
and
mov
fdivl
xor
adc
push
sub
cmp
inc
push
push
and
jp
mov
les
pop
jo
test
aam
jbe
dec
pop
add
push
loope
jo
gs
inc
je
jo
xorb
rolb
fs
mov
testl
add
jmp
nop
stos
imul
sub
xor
daa
leave
fcoms
repz
mov
add
add
xchg
mov
ja
mov
inc
add
add
cld
ja
dec
dec
push
dec
push
inc
inc
pop
and
loopne
sbb
add
dec
ret
mov
push
popl
add
cmpb
dec
out
cmp
inc
and
sbb
cltd
std
cmp
jno
das
icebp
outsb
dec
adc
pusha
icebp
sub
push
inc
fadds
mov
jno
or
andb
or
icebp
xorl
xchg
sbb
lea
inc
icebp
out
add
rcrl
dec
adc
mov
lret
sbb
inc
arpl
ljmp
movsl
mov
add
fs
fnstsw
adc
mov
rcl
leave
adc
sub
or
leave
enter
out
loop
cltd
jo
iret
popf
data16
add
lret
test
movsl
adc
add
add
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
jb
mov
adc
mov
xchg
rolb
adc
mov
inc
fists
xlat
xchg
jne
sub
add
xor
pushf
push
jbe
jns
push
je
mov
jne
xor
jle
pop
loopne
popf
jg
mov
jmp
ret
push
or
adc
xchg
into
aas
scas
push
pushf
in
push
repnz
iret
jne
jbe
mov
jb
popa
cmp
iret
iret
iret
push
imul
dec
stc
fdivrl
sbbl
bound
gs
jbe
bound
std
cmpsl
cwtl
shlb
insl
nop
jge
test
push
adc
jl
dec
inc
jb
enter
stos
bound
add
xor
and
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
adc
nop
dec
add
dec
push
sub
bound
jae
or
or
imul
jne
xor
xor
popa
pop
sahf
dec
xor
and
add
and
xor
pop
jecxz
cmp
adc
add
add
or
xor
and
subb
xchg
adc
jb
ficoml
outsb
stos
das
lods
sahf
ja
jae
or
hlt
xor
push
cmp
fsubp
jb
inc
imul
cmp
jmp
fimull
and
lahf
add
inc
in
pop
lret
inc
inc
push
pusha
shll
adc
hlt
fstl
add
inc
sbbl
push
repnz
sbb
scas
xor
cli
call
int3
xchg
nop
fiadds
insl
enter
xor
ret
dec
jbe
call
je
pusha
jbe
pushf
cld
or
add
out
push
inc
inc
ret
dec
pushf
pop
and
lahf
add
cwtl
in
lretw
inc
mov
sub
cwtl
rclb
mov
mov
pushf
and
dec
dec
add
pop
xor
push
push
cs
dec
insl
es
lret
negb
and
xchg
shlb
mov
scas
dec
mov
add
cmp
rclb
fwait
test
rorb
cmc
sbb
ficoms
jecxz
aaa
or
pusha
mov
xlat
jmp
mov
add
call
mov
or
in
addr16
inc
push
jecxz
mov
jo
ja
ljmp
test
add
xor
mov
clc
das
imul
sbb
or
es
adc
add
xchg
or
push
stc
lock
or
psubusb
popf
jmp
jno
jo
cvtdq2ps
aas
xor
add
adc
btc
out
test
ret
jb
ljmp
jno
lods
dec
or
call
data16
xchg
outsb
jb
mov
and
rorl
std
push
into
add
imul
divb
jo
mov
adc
popa
in
inc
fs
pop
js
and
out
divb
iret
shrb
jne
test
mov
inc
addb
mov
jo
sub
fmuls
sbb
jmp
mov
std
scas
les
inc
mov
sbb
lds
push
add
pop
jae
sub
or
ret
inc
insl
or
mov
ret
les
insl
fs
and
arpl
mov
mov
shr
dec
push
inc
push
cmp
sbb
dec
jge
push
ss
sub
dec
push
add
push
dec
inc
cmp
adc
stos
popaw
cmp
insl
imul
inc
pop
xor
sahf
mov
xchg
fistpll
test
ret
andb
xor
sub
xchg
stc
imul
loope
and
inc
aam
shlb
js
or
xchg
arpl
ja
push
sub
xor
outsl
add
pop
inc
and
mov
daa
pop
enter
gs
es
pop
jae
and
jecxz
jo
or
dec
pop
sub
pop
or
and
pusha
flds
sub
xor
sbb
pushf
stos
adc
mov
fldt
test
test
sbb
add
pop
fnstenv
or
fsts
mov
lods
es
cmp
arpl
out
xor
pop
imul
xchg
add
inc
push
sti
mov
pop
xlat
rol
pop
jl
in
xor
cmp
or
lods
lods
jbe
jb
xor
out
mov
pop
outsl
jne
insb
imul
aad
inc
imul
fsubrl
dec
push
push
jg
pusha
inc
xor
push
xor
dec
xor
push
movsl
in
sub
xor
xchg
xor
xor
xor
ss
cmp
aaa
xor
sub
roll
cmc
xor
or
ja
bound
stc
dec
outsb
inc
xor
push
ss
outsl
mov
ds
inc
daa
pushf
popl
insl
pop
or
or
cli
adc
in
pop
aam
mov
test
inc
mov
popf
jo
mov
sbb
divb
lea
std
and
repz
out
idivl
xor
add
jecxz
in
mov
pop
adcb
xor
insb
dec
dec
push
xor
inc
js
mov
clc
loop
jno
pushf
adc
push
loope
popf
cmp
mov
jge
sub
sti
inc
lea
mov
adc
xor
pop
mov
xchg
jno
inc
xchg
es
or
stc
insl
or
xor
and
xchg
cmp
mov
inc
fnstsw
outsl
mov
loope
js
mov
out
xchg
jne,pt
outsb
sub
fstps
dec
movsb
lret
push
add
inc
mov
pusha
xchg
or
stc
xchg
adc
add
push
filds
xor
push
add
or
orb
imul
xor
ret
lods
add
cmp
bound
outsb
xchg
vrcpss
test
std
shrl
inc
sbb
pop
jo
enter
add
and
sub
inc
sub
jmp
push
outsl
je
insb
cmp
dec
aam
outsb
inc
add
jecxz
ljmp
inc
dec
sarb
mov
mov
mov
fimull
inc
dec
popa
mull
insb
push
rclb
xchg
pop
dec
push
push
les
lret
inc
inc
popa
testb
jae
and
daa
mov
divl
cs
mov
mov
in
outsl
test
cmp
call
fnstenv
pop
dec
pop
mov
pop
lret
outsl
popf
outsl
push
push
dec
data16
and
mov
push
and
add
in
int
mov
jnp
or
pop
filds
in
dec
lods
aam
pusha
jae
cltd
mov
ljmp
jnp
sub
imul
js
jb
data16
adc
pop
jne
jae
data16
inc
or
mov
push
inc
fwait
nop
repz
mov
imul
add
std
jno
sahf
inc
and
add
push
dec
xor
xor
fs
xor
or
lcall
or
push
ljmp
mov
jne
xchg
mov
xlat
inc
cs
adc
jge
addr16
sbb
inc
loopne
xchg
jp
inc
pop
sbb
inc
pop
add
mov
enter
sbb
test
subb
lahf
je
repz
repz
inc
inc
sub
jno
cld
icebp
cld
xchg
fcoms
jns
test
jl
jno
sahf
jmp
or
xchg
int3
xchg
jg
mov
iret
aas
mov
inc
leave
icebp
iret
add
xchg
clc
imul
mov
cld
insb
and
cld
clc
ret
mov
test
pop
cld
nop
in
nop
pushf
cld
cld
repz
adc
jecxz
pop
in
les
cld
cld
sub
mov
js
jnp
popa
jno
les
lea
mov
clc
ret
xlat
aam
mov
jmp
and
lock
iret
adc
mov
mov
iret
aas
aas
cwtl
test
inc
out
repz
mov
iret
std
rcrb
out
lahf
lahf
inc
sbb
add
ret
loope
in
aam
int3
mov
xchg
jl
xor
sti
outsb
cmp
cld
mov
loope
jne
mov
iret
aas
xchg
mov
or
and
dec
inc
dec
gs
cmp
ja
pop
add
and
addr16
xor
adcl
cli
push
outsb
pusha
xchg
out
cmc
jns
add
add
and
lahf
and
mov
push
imul
xor
outsb
arpl
notb
add
or
and
sarl
xchg
jl
je
pop
das
shlb
dec
pop
pop
push
imul
lcall
xor
pushf
and
dec
bound
jae
mov
jmp
imul
outsb
cmc
push
sbb
dec
dec
and
xor
sub
dec
outsb
jb
les
insb
adc
mov
out
cwtl
dec
lret
repnz
jmp
cmpsl
inc
cmp
mov
dec
mov
and
bound
aad
pop
test
sub
inc
push
subb
dec
jne
bound
push
divb
push
rolb
pop
mov
pop
lds
stos
repz
add
adc
popa
outsb
jno
inc
mov
les
xor
rcrl
stc
xchg
imul
cmp
mov
sub
bound
cli
or
sahf
shrl
jbe
jne
pop
push
movsb
das
mov
jl
add
insl
and
mov
and
jmp
inc
push
inc
dec
push
dec
dec
inc
dec
inc
inc
xorl
dec
jb
mov
scas
inc
sbb
xchg
outsb
and
adc
jae
adc
inc
jo
xchg
jge
pop
repz
mov
xor
mov
dec
xlat
mov
mov
mov
aas
add
inc
inc
imul
add
and
std
xor
repz
int3
pop
and
insb
roll
pop
scas
cmpsl
mov
dec
addb
inc
push
pop
mov
xchg
sbb
cmc
cs
dec
out
xor
xchg
or
dec
in
xor
popf
lret
jno
cld
stc
pop
sarl
add
lret
jne
jae
imul
push
scas
dec
ljmp
cmc
mov
adc
notb
repnz
ret
or
pop
and
and
jne
scas
cmc
cltd
in
jmp
out
ret
in
inc
jb
adc
and
dec
add
jne
hlt
stos
out
pop
dec
lods
outsl
rorb
xchg
or
push
jge
sahf
jae
cmc
lods
inc
xchg
in
std
fisubl
insb
dec
adc
and
push
aaa
cmp
aas
fs
stc
jbe
leave
addr16
xlat
and
pop
dec
dec
stc
push
int
mov
sub
test
rolb
imul
push
xchg
jg
enter
inc
les
lds
push
je
imul
iret
jb
ret
adc
or
or
je
jno
mov
push
dec
jne
lods
pop
lret
pop
push
outsl
popa
enter
push
mov
adc
xor
push
mov
and
push
movsl
add
xchg
popf
mov
loope
mov
bound
in
or
imul
dec
inc
dec
inc
or
jbe
mov
add
js
dec
xchg
rcl
adc
in
insb
sub
inc
fwait
notb
int
adc
out
pop
xor
xor
shlb
add
sub
pop
xchg
sub
or
push
push
xchg
aad
mov
xor
mov
sbb
lret
cmc
push
fs
aaa
cmpsl
jnp
dec
cli
idivb
xchg
dec
addr16
cld
sub
pop
sub
jo
scas
sub
jp
dec
data16
jno
les
xchg
push
inc
lcall
outsl
xor
fnstsw
xchg
into
adc
pop
rorb
xor
cmpsl
pusha
call
arpl
or
out
jb
gs
xor
lret
jecxz
out
cmp
call
jl
mov
jbe
pop
mov
sub
push
outsl
outsl
inc
inc
fisubrs
fisubs
sub
lretw
addr16
push
popa
pop
mov
jne
jle
mov
and
mov
mov
inc
leave
xor
ljmp
mov
or
jl
sbb
xchg
xor
sub
sbb
bound
inc
sahf
jmp
push
ret
out
out
inc
jle
shlb
std
pop
lds
adc
inc
inc
inc
leave
int
fsts
es
and
or
cmc
je
xor
or
or
jb
mov
push
adc
lea
je
fisubl
lcall
push
fsubrs
daa
fiaddl
imul
sub
jbe
xchg
cwtl
add
inc
push
push
lcall
lret
int
add
outsb
daa
xchg
pop
mov
ret
mov
xor
sbb
mov
jecxz
out
mov
loop
aas
pusha
data16
scas
cwtl
insl
out
out
cmc
scas
ret
inc
int
jmp
adc
xlat
add
bound
out
in
mov
pop
fldenv
outsl
movsb
mov
in
ja
aaa
mov
mov
movsl
and
inc
das
popf
lods
icebp
jo
pusha
and
lods
jae
movsl
mov
jne
mov
jae
outsb
cmc
sub
sti
xor
inc
add
mov
ret
jne
push
dec
xchg
leave
or
hlt
jns
push
out
mov
adc
bound
dec
mov
nop
ja
int3
xor
into
or
inc
mov
mov
mov
loop
adc
stc
outsl
dec
and
fimuls
and
push
inc
inc
xor
and
jne
jl
sub
push
adc
imul
sbb
ds
jns
jge
cmpsl
push
sbb
out
clc
fs
repz
popa
inc
ret
popa
add
xchg
loop
push
enter
jbe
fwait
int3
aaa
insb
sbb
adc
popa
gs
pop
pop
icebp
add
xchg
std
add
xor
stos
int3
rorb
cs
or
mov
jg
add
je
aad
pop
sub
imul
sub
xor
dec
in
test
inc
cmp
sbb
incb
sarb
pop
push
xchg
imul
push
jo
jge
jecxz
imul
ljmp
push
inc
push
push
inc
xor
bound
insb
and
int3
pop
cmc
filds
mov
scas
pop
inc
loope
mov
push
cmpsb
mov
pop
mov
pusha
insl
cld
cmp
xor
jo
mov
test
mov
cmpsb
sub
sbb
cmp
and
inc
sub
push
das
enter
push
jecxz
cmpsb
pop
inc
and
adc
sbb
pusha
dec
mov
imul
loopne
mov
lods
popa
inc
sub
lea
fs
out
and
inc
gs
aaa
insb
sbb
ret
cmpsl
fs
das
xchg
je
popa
and
mov
hlt
push
inc
dec
dec
cs
jge
rcll
xlat
test
fbstp
jo
lds
in
inc
mov
sbb
xor
push
inc
inc
adc
in
push
push
pushf
out
xchg
push
jl
mov
sub
fistpl
dec
das
inc
imul
mov
scas
mov
adc
xchg
sub
cmp
add
out
mov
push
xchg
lret
xor
add
adc
or
push
sbb
lcall
imul
jae
cs
sub
or
inc
jb
dec
cltd
stc
or
lea
inc
scas
loop
or
mov
nop
mov
jno
shl
shrb
dec
adc
xor
mov
inc
mov
bound
pop
test
inc
mov
push
inc
push
push
aaa
and
das
xor
push
push
inc
aam
jne
data16
mov
pop
fwait
dec
mov
js
xorb
sub
sub
sub
imul
or
add
pop
ljmp
xor
mov
adc
mov
pop
cs
aam
test
das
mov
je
js
xlat
mov
inc
push
pop
push
xlat
call
dec
pop
or
and
and
adc
lock
nop
sahf
test
jmp
enter
iret
xor
test
mov
clc
mov
jbe
pop
xor
xchg
imul
arpl
sbb
cmp
mov
xor
xor
jne
sbb
cmp
xor
ffreep
xor
xor
or
cmp
or
sbb
xor
insl
fs
fldt
push
push
xor
das
mov
jle
sub
adc
cmp
fcoml
inc
sub
insb
and
sub
enter
cld
and
pop
pop
pop
pop
cmp
cmp
cmp
idivb
icebp
and
adc
je
imul
push
popa
inc
cmp
inc
jne
adc
jo
dec
push
dec
sub
bound
imul
xchg
inc
jae
mov
inc
inc
rclb
inc
arpl
out
es
mov
outsl
add
pushf
cmp
fs
jns
push
and
jns
fists
lea
das
outsl
movsl
lea
insl
popw
xor
push
mov
hlt
jge
pusha
ds
cli
pop
push
dec
test
cmp
mov
mov
jne
shll
mov
xor
sub
xchg
popa
lods
loop
cmp
adcl
inc
andb
dec
dec
push
dec
cmp
pop
test
ds
cmp
jno
pop
imul
inc
inc
dec
inc
inc
dec
inc
pop
cwtl
loopne
xchg
ds
enter
xor
dec
cmp
fstpt
sbb
sub
cs
sub
sub
push
mov
xchg
inc
push
dec
dec
adc
xchg
jg
pushf
inc
or
mov
adc
mov
insl
andb
xchg
mov
jno
push
push
lods
push
inc
xchg
jae
pop
aaa
out
sub
aas
outsb
lea
sti
daa
pop
xor
jae
jns
jbe
xor
sub
cmpb
mov
inc
and
pusha
push
inc
inc
add
dec
insb
sbb
xor
mov
cld
push
sub
cmp
les
pop
dec
adc
sbb
inc
das
cmc
inc
push
cld
and
adc
roll
dec
jmp
imul
mov
data16
add
adc
xchg
inc
mov
inc
mov
sbb
xchg
or
inc
cmp
outsb
xor
lret
inc
cld
cwtl
pushf
imul
test
pop
push
push
xor
sti
cmp
fdivrs
jmp
mov
dec
push
sarb
xchg
leave
sbb
shlb
rcrl
xor
push
gs
sbbl
or
das
jno,pn
or
dec
inc
dec
push
in
push
push
xor
popf
test
xor
aad
jle
inc
sbb
dec
mov
inc
sub
cld
add
cmpsl
jae
imul
inc
ja
push
push
lret
cli
iret
rcrl
adc
insl
daa
pop
fwait
xor
pop
je
roll
sub
ss
cmpsb
sub
cli
cmp
xor
das
push
xchg
shlb
pop
pop
pop
bound
or
add
outsb
pushf
xchg
pop
movb
sbb
push
inc
pop
push
xor
xorb
pop
and
xor
pop
pop
pusha
outsb
out
xor
test
jae
out
lds
je
pop
lds
pop
pop
or
mov
into
pop
mov
pop
mov
cwtl
test
pop
mov
and
cmp
xor
pop
arpl
inc
jns
pop
sahf
push
shrl
xor
jnp
dec
xchg
xor
xor
aam
push
cmp
bound
xor
and
out
xor
int3
adc
add
xor
mov
xor
iret
mov
and
ss
aaa
iret
mov
cmp
mov
mov
sub
xor
sub
sbb
sub
jo
sub
xor
arpl
or
add
jns
inc
movl
out
add
out
cmpsl
sbb
lahf
add
sbb
or
add
stc
sbb
imul
jno
repnz
outsl
add
xlat
rclb
imul
mov
mov
inc
jge
xchg
in
inc
popa
sub
loope
push
jae
sbb
pop
cmp
push
xor
pop
data16
int3
int
ja
in
cltd
inc
out
push
dec
dec
push
mov
mov
pop
imul
gs
insb
add
cmp
sbb
daa
and
jp
into
sti
push
mov
and
push
add
mov
push
xor
popa
jbe
sbb
mov
pop
inc
dec
outsb
jb
je
add
mov
mov
sub
mov
mov
mov
setg
fcompl
adc
inc
mov
pop
xchg
clc
sbb
sbb
repz
push
insl
push
popf
testl
shrb
test
dec
pop
clc
sbb
ret
mov
loopne
add
dec
dec
inc
pop
imul
lret
outsl
xor
inc
push
or
inc
inc
lea
mov
add
sbb
addr16
add
jmp
push
leave
add
arpl
add
inc
inc
push
pop
add
mov
pop
cmp
fnstsw
mov
inc
pop
xchg
mov
jg
inc
fdivs
or
mov
mov
int3
aas
insl
cmp
sub
push
pusha
cmp
jne
fmul
mov
jno
adc
aas
in
xor
lret
cmp
mov
data16
fnstsw
addr16
fdivrl
fsubl
xchg
or
imul
push
dec
inc
pop
popa
ror
pop
and
mov
and
pop
mov
bound
sub
jl
xor
pop
stos
dec
aaa
orb
jmp
mov
push
fs
mov
or
jo
movsl
push
pop
jb
andl
sub
mov
inc
push
mov
ret
jbe
nop
mov
adc
call
nop
push
adcl
jae
cmp
leave
push
andl
stc
mov
xor
mov
inc
arpl
xchg
push
aaa
fmull
data16
adc
xor
int3
pop
aad
mov
jae
rolb
inc
fldl
xchg
pop
xor
ds
mov
add
pop
insl
jo
pop
xor
dec
jo
subb
adc
push
sbb
imul
imul
mov
dec
outsl
insb
pop
fs
outsb
std
sub
mov
in
pop
and
inc
aad
push
in
test
dec
cwtl
ficompl
cmp
cmp
mov
decb
ds
pop
xor
int
jb
inc
dec
mov
dec
xchg
push
fwait
push
jmp
outsl
js
mov
fidivs
xchg
ficomps
aaa
inc
gs
outsb
popf
hlt
xor
dec
arpl
add
sbb
push
sbb
std
inc
stos
dec
or
dec
outsl
jp
jo
or
popa
das
xor
pop
push
fidivrs
inc
fnstenv
push
insl
add
shr
jns
lods
push
test
insb
inc
jmp
outsl
dec
ja
out
enter
in
dec
sarl
out
in
push
inc
mov
push
cld
test
popf
shl
repz
and
cmpsb
imul
push
aam
test
xor
xor
adc
fs
ja
mov
and
pop
mov
in
int
mov
jecxz
add
stc
sub
adcb
pushf
pop
scas
mov
ror
je
mov
cmp
outsb
jle
je
fcomi
ret
jns
push
sbb
pop
pop
xchg
call
lret
sbb
insb
ret
ds
push
inc
loope
jg
and
push
jo
jl
orl
sti
xchg
pop
pop
lods
cmpsl
jp
inc
inc
dec
jae
inc
nop
cmpsb
lcall
aas
push
pop
xchg
fldl
mov
cmp
mov
cmp
nop
push
cmp
je
outsb
mov
or
inc
out
xor
add
shlb
cli
jmp
push
aas
xor
inc
js
andb
cmp
xchg
shll
jae
xchg
xor
lcall
lds
outsl
jae
and
mov
or
ljmp
cmpsb
jno
inc
or
add
cmpsl
addr16
xor
jle
inc
dec
xor
push
lret
jb
jne
pushf
push
loope
js
outsb
in
fwait
cli
inc
jae
dec
or
clc
mov
jne
adc
mov
dec
push
daa
loopne
cs
pop
jge
icebp
pop
cmp
jb
jnp
mov
cli
adc
iret
cmp
pop
ficomps
loopne
loop
sti
inc
outsl
popa
mov
or
dec
jmp
pushf
push
gs
test
jge
dec
pop
into
call
mov
pushf
orb
xorb
incb
xchg
inc
popa
dec
xor
add
sub
mov
inc
xor
fstl
add
sbb
mov
xor
mov
aas
push
aas
inc
lea
jae
push
mov
add
xor
cmp
roll
push
adc
sar
push
push
lret
mov
and
lock
xor
or
lock
outsb
push
dec
dec
hlt
movsb
pop
leave
jbe
mov
and
or
int3
mov
sub
pop
leave
sbb
scas
push
xchg
jl
sbb
pop
mov
out
pop
int
popf
imul
push
mov
scas
rcll
fnsetpm(287
cmpsb
xlat
lods
iret
inc
push
push
jb
inc
fs
imul
mov
scas
sub
sub
insl
dec
push
xor
mov
gs
test
fstpl
or
in
mov
loop
cld
out
add
dec
jae
and
arpl
pusha
int3
adc
or
mov
in
and
push
inc
pop
cmp
and
sbbl
mov
lret
jae
bound
pop
mov
mov
je
sahf
out
insb
fs
add
sahf
out
add
add
gs
or
sbb
jge
xor
mov
jo
in
sbb
mov
and
fs
fs
arpl
push
mov
mov
stos
inc
push
push
dec
mov
jle
and
iret
add
jns
iret
add
notb
stc
jns
cmp
test
xchg
and
cli
out
inc
outsb
jae
ljmp
sub
into
sub
sbb
jp
cwtl
adc
inc
fiaddl
mov
cmpsb
test
jae
les
jecxz
bound
and
fwait
mov
dec
push
cwtl
push
pop
lret
jecxz
arpl
scas
xchg
cmpsb
je
jmp
xor
push
sahf
dec
ficompl
dec
fnstenv
adc
sti
insl
imul
cmpsb
fs
test
dec
arpl
mov
mull
fnsave
push
imul
xchg
mov
cltd
fcoms
ret
js
in
aad
fdivl
adc
aaa
xchg
cli
iret
enter
push
mov
xor
fisubs
xchg
mov
jb
jg
adc
insl
imul
out
leave
jl
and
pop
inc
imul
aaa
icebp
xor
in
cmc
imul
fs
rorl
sbb
enter
jp
and
cmpsl
jmp
movsb
call
cld
cmove
shlb
sbb
bound
sub
aas
xchg
xchg
jp
nop
fisttpl
sbb
arpl
or
inc
inc
fs
lret
insb
mov
sbb
cld
or
mov
and
inc
adc
ljmp
push
cmpsl
push
and
rclb
mov
jns
imul
mov
in
stc
idivb
imul
pop
mov
cs
iret
inc
gs
in
lret
insl
addl
push
dec
xchg
pop
xlat
or
push
mov
shll
xchg
jl
xor
and
les
imul
arpl
stos
insl
and
cmp
sbb
pusha
jae,pt
pusha
mov
pmaddwd
aam
outsl
cmp
lcall
push
pop
adc
xor
jmp
cmpsb
rcll
bound
ss
cli
jnp
lcall
mov
pop
dec
std
dec
popf
leave
mov
dec
out
xor
cmp
mov
adc
in
jecxz
gs
jmp
ja
sbb
jo
xchg
pand
xchg
iret
mov
sub
mov
push
push
mov
bound
and
js
rol
pop
add
dec
mov
sti
xchg
jne
imul
xchg
aam
xchg
sub
inc
adc
scas
sub
fwait
mov
out
mov
outsb
mov
int3
adc
es
in
pop
mov
add
je
outsb
sarb
outsl
inc
push
push
cltd
daa
rorl
pop
jno
inc
jne
insb
fcmovb
inc
sbb
pop
stos
sbb
xchg
or
lea
inc
pop
cmpsb
inc
cmp
dec
mov
arpl
popa
mov
sbb
inc
lret
and
jne
and
xor
push
push
stos
fisttpll
fisttps
test
aas
mov
dec
cwtl
jecxz
jmp
jae
aam
jmp
jmp
incl
add
cmp
mov
int
mov
mov
mov
imul
xchg
int3
out
shll
pop
data16
cli
sbb
cli
xchg
cmp
sub
vpcmpgtb
sub
sbb
inc
xor
out
dec
jo
jb
jmp
mov
bound
mov
mov
jae
shl
out
out
mov
sub
jge
adc
insb
jns
and
adc
fs
dec
and
subl
scas
push
lcall
nop
shll
cwtl
pop
mov
pcmpgtb
xchg
popf
int
push
sub
xchg
pop
dec
sub
aam
std
in
jl
jb
fdivr
or
mov
mov
xchg
cmp
and
mov
xor
cli
daa
sub
insb
call
stos
xor
lahf
idivb
xor
ljmp
bound
lcall
sbb
repnz
insb
rorl
rolb
push
dec
lcall
adc
jns
outsl
cmc
and
inc
cmpsb
cmpsb
mov
arpl
adc
inc
push
push
and
insl
pop
mov
sub
je
arpl
jmp
aaa
jbe
pusha
sub
dec
inc
movsl
ja
rclb
movsl
xchg
jle
fildll
mov
adc
push
movsl
iret
pop
in
lret
add
mov
cmp
push
js
lods
inc
fbstp
xchg
sbb
loop
test
ret
xchg
add
loopne
inc
fsubs
rclb
out
sub
jle
ja
and
out
jle
pop
sub
ja
sub
ja
pop
cmp
aas
daa
pusha
jle
ja
jle
gs
outsb
and
arpl
ja
out
inc
and
out
jle
pop
ja
out
sub
sub
pop
jle
ja
cmp
ja
pusha
jle
inc
jle
and
or
addb
scas
jae
into
out
cld
into
inc
and
cld
into
out
cld
pop
es
cld
into
out
sub
into
das
pop
cmp
aas
daa
pusha
out
cld
into
out
jle
daa
mov
popf
ja
inc
ja
out
and
adc
push
in
jne
lods
rolb
in
popf
cs
jnp
push
and
stc
sbb
and
mov
push
jl
pop
and
or
test
and
or
leave
dec
or
push
fcoml
dec
inc
dec
mov
push
inc
push
ja
jnp
test
dec
xchg
cwtl
and
jb
jmp
fcoms
add
xchg
shlb
jns
fnstcw
jae
or
js
call
and
imul
in
push
mov
and
cmp
dec
push
push
lods
jle
addb
pop
jo
mov
push
push
push
add
jo
arpl
cmp
inc
push
xor
and
xchg
pop
out
sarb
push
repz
dec
push
xor
push
js
add
sbb
add
cmp
or
push
stos
iret
push
loope
sub
add
pop
push
jb
pop
mov
xor
xor
inc
imul
cs
bound
sbbb
sub
xor
xor
popa
popa
or
dec
fs
ss
movb
and
xchg
dec
je
je
xchg
roll
fs
inc
xchg
je
cmpsb
repnz
sti
les
subb
imul
fisubrl
dec
sub
stos
insb
sbb
sbb
out
xchg
out
repz
pop
adc
in
cmp
jecxz
and
in
dec
sbb
jns
out
jecxz
js
xor
repz
jecxz
loop
les
jl
dec
sbb
out
xor
add
loope
loope
repz
loope
push
clc
loopne
loopne
loope
sbb
loopne
rcr
fucomip
ficomps
pop
inc
push
ja
sbbb
adc
mov
rorl
inc
dec
mov
aam
scas
pushf
out
push
aaa
fisubl
xor
adc
add
cmp
ffree
repz
hlt
inc
call
jns
fcom
les
test
pushf
cwtl
xchg
jnp
es
mov
xchg
mov
jl
sahf
out
je
pusha
pop
pop
push
in
sahf
out
dec
inc
cmp
iret
repz
sub
adc
sahf
out
cmp
clc
fdiv
call
jp
rcr
enter
push
xchg
fdivrl
cmpsl
adc
movsb
fcompl
sbb
mov
test
jl
js
je
push
xchg
loope
fcompl
fmull
iret
jae
sbb
fdivl
sub
repz
adc
add
fstpt
out
hlt
in
call
jns
out
aam
enter
jns
mov
iret
repz
iret
repz
js
push
jl
push
dec
inc
cmp
repz
sub
adc
add
xchg
icebp
cld
fiaddl
fcmovu
fcmovbe
fcmovb
fidivl
sbb
mov
ficoml
js
int3
arpl
xor
sbb
jmp
ficoml
ficompl
xchg
inc
fidivrl
repz
repz
and
adc
jno
iret
or
cld
fxtract
in
and
cld
popf
loop
hlt
adc
stos
push
xchg
insb
insl
popa
sub
cmp
movsb
push
aad
bound
mov
cmpsb
gs
mov
daa
jo
or
dec
push
in
sbb
jae
mov
sub
jno
xor
mov
xchg
popf
sub
sbb
in
jb
mov
dec
jno
fwait
into
inc
mov
jae
jge
xor
xor
mov
add
idivl
push
imul
sbb
mov
in
out
ja
popa
push
lret
lods
out
mov
pop
add
data16
fnstsw
jne
loop
mov
pop
gs
arpl
in
cmp
mov
lods
mov
lret
sub
outsl
addr16
test
fdivs
mov
adc
pop
movsb
pop
pop
vpcomq
imul
roll
js
bound
mov
dec
pushf
jmp
insl
xchg
insl
jne
sbb
push
pop
mov
repz
daa
ret
int3
cmp
sub
xor
inc
sub
bound
jno
jp
fisubl
jae
popa
jp
and
cmp
push
xchg
loope
xor
cmp
add
add
fmull
shll
and
fs
das
mov
mov
cmp
xor
fs
shrb
jg
sti
mov
dec
inc
add
insb
dec
cmp
lods
clc
jb
lds
adc
cmp
scas
je
xor
rol
out
jne
mov
pop
push
outsl
pop
shrb
mov
je
test
out
xlat
add
jecxz
std
cmp
xor
xchg
hlt
sub
sarl
out
cmp
add
pop
lahf
pop
add
add
add
cmp
ja
ret
lcall
fcmovnbe
ficompl
push
aad
lcall
push
xor
lods
imul
icebp
addr16
cmp
pop
test
mov
inc
sbb
ja
decb
orl
call
jp
lea
pop
insb
jb
push
out
in
inc
in
mov
aas
xor
or
sbb
inc
adc
sbb
xor
xor
xor
cli
adc
xor
mov
or
sub
cmp
aaa
pop
add
scas
and
cs
add
and
sbb
adcb
js
xchg
xor
int3
xor
cmp
mov
xlat
rorl
and
push
or
ret
inc
inc
push
mov
jb
out
sbb
and
mov
push
inc
jb
and
mov
mov
fdivs
inc
mov
push
das
imul
outsb
push
xor
xor
popa
andb
stos
xor
les
and
add
xor
cmp
cmp
mov
das
pop
and
sub
xor
inc
pop
or
dec
int3
ja
insl
cmpsb
int3
aam
arpl
imul
bound
sahf
adc
cmp
lock
ja
imul
imul
xor
outsl
cmp
jae
imul
push
sbb
fwait
gs
je
lcall
ficoms
sub
add
push
js
aaa
xor
push
shll
outsb
add
subb
js
xor
push
pop
roll
add
push
test
arpl
xchg
add
and
inc
cwtl
pusha
sbb
ss
daa
xor
and
callw
jb
push
mov
insb
fyl2x
addr16
xor
adc
filds
orl
pop
popa
ja
push
adc
js
dec
ljmp
test
xor
stos
push
sub
arpl
sub
push
lds
xchg
and
sbb
jge
inc
test
cs
add
push
dec
inc
dec
dec
inc
mov
lcall
test
xor
test
mov
xor
add
dec
dec
adc
icebp
and
inc
outsl
arpl
sub
data16
push
push
shrb
dec
sub
and
inc
dec
adc
inc
xchg
or
fs
lods
inc
orl
push
mov
pusha
popa
sbb
ja
popa
js
gs
add
push
pusha
jb
inc
dec
adc
inc
dec
and
and
lcall
pop
es
test
outsl
jns
sahf
xchg
fs
jae
arpl
mov
or
jbe
jmp
call
repnz
into
sbb
inc
dec
and
fs
mov
sub
lods
jbe
jne
cmp
jle
ja
xor
pop
xlat
jns
loop
iret
mov
lock
mov
mov
ror
add
dec
mov
repz
xor
mov
cli
cmp
inc
mov
arpl
mov
imul
xchg
aaa
aaa
push
cmc
in
xor
adc
lahf
shl
mov
and
nop
cld
nop
cmp
mov
into
and
outsb
sub
rorb
shrb
das
xor
dec
dec
jp
dec
dec
adc
and
cmp
outsl
fsubrl
xor
push
push
imul
mov
jno
and
pop
and
scas
xor
fcoml
and
mov
aas
mov
xchg
push
pop
sub
push
das
mov
pop
and
push
and
daa
cmp
sub
fstl
dec
inc
jmp
jo
popf
and
jns
sub
or
mov
outsb
hlt
pop
jmp
or
jb
inc
shlb
push
out
push
cld
lar
jmp
push
dec
gs
push
dec
and
push
xchg
sbb
mov
shlb
xchg
xchg
lods
mov
insb
icebp
or
or
mov
adc
ja
add
out
mov
mov
dec
push
rcrl
mov
cmp
roll
dec
xor
mov
dec
pop
daa
je
or
mov
test
outsb
xchg
push
cmp
gs
adc
and
insb
and
sub
push
test
sub
into
mov
mov
es
xor
cmp
fbld
aad
mov
or
imul
aas
xor
pop
xchg
in
aaa
adc
or
mov
inc
mov
xchg
jbe
pop
xor
dec
das
mov
inc
pop
inc
ljmp
sbb
movsb
fbld
jne
xor
xor
mov
mov
pop
mov
xchg
in
mov
xchg
dec
mov
popf
mov
mov
imul
push
push
adcl
mov
mov
dec
push
xchg
sbb
or
fdivrl
test
sbb
and
insl
mov
je
jecxz
push
adc
or
or
ret
cmp
cmp
inc
xor
cmp
out
addr16
fcoml
je
dec
jmp
leave
pop
out
mov
mov
add
and
les
imul
movsb
insl
dec
rcl
ja
movb
mov
dec
ljmp
xor
adc
pop
mov
inc
push
push
inc
notl
shlb
lret
out
and
outsb
pop
hlt
scas
push
cmpsl
call
inc
push
mov
out
aad
xchg
test
cs
les
add
ficoml
xchg
or
push
mov
gs
hlt
je
cmp
stos
push
out
ljmp
inc
sbb
outsl
fs
xlat
or
mov
xchg
sub
push
xchg
xor
mov
shrl
test
pop
push
inc
inc
lret
addr16
fldt
sti
dec
outsb
sub
mov
bound
pop
ss
xor
fidivl
xchg
stc
ljmp
fldcw
outsl
pop
lods
xchg
jne
dec
lds
mov
sbb
cmp
stos
data16
sub
cmovg
push
cmpl
inc
pop
push
xchg
push
mov
mov
jnp
dec
push
mov
adc
daa
fisubl
jbe
pop
pop
push
out
jb
iret
js
pop
mov
mov
push
jmp
inc
lret
sub
adc
loop
shll
stos
lods
xor
mov
fcmovne
orb
cmc
fidivs
pusha
and
mov
fidivs
push
cmp
dec
xor
lea
sbb
add
in
sub
in
out
lcall
addr16
out
out
and
cs
ss
call
pop
test
aam
stos
iret
add
jmp
push
jno
ret
movsl
fdivrl
std
ja
movsl
popf
stos
cmp
mov
arpl
rcrl
movsb
or
dec
outsb
out
mov
sub
in
loop
sbb
rcll
sahf
mov
sbb
fldenv
add
inc
push
jb
inc
into
inc
push
cmpsl
repz
add
mov
dec
mov
mov
dec
mov
jae
mov
jb
or
and
and
sub
popf
sub
sub
mov
lahf
xchg
jp
xchg
lahf
push
sub
xchg
xchg
dec
pop
or
xor
sub
shll
stc
pop
int
sub
push
lods
imul
lret
lret
cs
or
push
dec
push
mov
movsl
pop
sti
lods
cmpsl
dec
or
lods
gs
push
arpl
push
push
adc
data16
outsb
outsl
jl
xchg
jmp
mov
sbb
mov
mov
ja
sbb
mov
hlt
jne
push
jae
mov
cmp
insl
popf
rcrb
sub
jbe
mov
gs
out
imul
ja
cmp
adcl
out
or
insl
cs
xor
int
scas
scas
jae
ljmp
lods
cli
es
idivb
cmpsb
int
sub
sahf
out
inc
mov
inc
test
and
pop
pop
xchg
fs
pop
xchg
popa
jae
fcoms
push
push
testb
test
repz
aas
outsb
cmp
insb
rcll
mov
jne
pop
mov
pop
arpl
mov
push
jmp
cs
cs
dec
cmp
pop
fs
test
insl
jbe
pop
xor
cmpsb
push
incb
jmp
jbe
cmp
lret
arpl
addl
push
movsb
pop
push
into
shl
dec
dec
dec
push
dec
loope
aas
jge
pop
divl
lea
neg
xchg
jge
jbe
pusha
ficomps
sbb
mov
addb
inc
xchg
xchg
and
int3
hlt
pop
add
cld
je
iret
adc
cmpsl
andl
iret
and
out
push
push
inc
inc
push
inc
jecxz
push
mov
or
ror
in
dec
inc
dec
mov
push
xchg
pop
bnd
in
bound
out
pop
je
iret
fldl
xor
jne
out
push
cltd
rclb
adc
pop
pop
cmp
pop
enter
stos
and
pop
jge,pn
imul
aam
ds
jg
jnp
movsb
out
inc
lods
sub
jns
mov
cwtl
xchg
int
addr16
gs
push
xor
rcrl
imul
xor
cltd
dec
fbld
mov
and
push
xor
outsb
sub
movsb
cmp
out
push
inc
jg
lahf
ds
dec
int
mov
test
dec
pop
jns
int
incb
test
test
cmc
or
fdivrs
pop
inc
dec
das
jnp
or
cmpb
notl
xor
sbb
inc
adc
lret
cmp
mov
jp
es
call
xor
add
ja
pop
mov
mov
inc
pop
jae
test
out
sub
cmp
inc
dec
xchg
inc
inc
dec
add
outsl
movsl
fisttps
repz
test
fdivl
fs
movsb
mov
push
mov
lea
shr
push
and
fs
je
imul
jecxz
mov
std
sbb
add
jne
xchg
icebp
xor
jns
icebp
cmpsl
inc
push
inc
push
repz
sti
push
push
xor
andb
test
xchg
imul
jnp
ja
jb
inc
shl
shl
addb
lahf
leave
cld
mov
pop
movsb
out
sub
lea
push
dec
aam
cmp
jo
cmp
daa
data16
jmp
mov
jb
fistpll
inc
push
jo
pop
dec
loope
push
jle
fidivrs
std
cltd
mov
xor
je
sub
pop
mov
mov
or
and
pop
mov
push
sbb
or
jne
mov
aas
push
or
in
pusha
push
fs
sbb
pushf
jge
jmp
out
mov
jb
scas
and
or
test
sbb
jmp
jae
mov
and
mov
in
or
or
push
sbb
das
je
and
add
jo
push
fsubr
jne
shll
xor
inc
iret
test
add
popa
cmp
mov
test
aam
insl
lret
sub
sarb
add
xor
out
or
cmpsb
das
mov
jne
push
in
out
jle
xlat
add
hlt
dec
sub
mov
push
push
add
int3
repnz
jl
adc
xor
mov
sarl
ret
insl
and
mov
push
mov
adc
mov
inc
ret
loop
jb
ja
repz
mov
xor
arpl
call
fisttpll
mov
fdivs
push
xor
mov
mov
lea
aam
and
addr16
sub
lods
insl
jnp
and
adc
inc
movsl
fimull
and
sub
fistpll
ret
jae
fisttps
cmp
fstl
mov
jbe
pop
shlb
sbb
imul
add
lock
out
lock
pop
xchg
data16
fnsave
sub
pusha
mov
xchg
fldt
cs
aad
test
pushf
push
push
scas
mov
pop
testl
dec
mov
xor
inc
inc
jbe
pop
lcall
hlt
lret
outsl
mov
aad
out
out
dec
cmp
data16
jae
xor
cmp
lahf
in
dec
inc
les
fs
stos
mov
test
lret
mov
in
stos
jo
sub
xchg
mov
mov
jo
int3
outsl
shll
imul
xlat
adc
das
cmp
nop
sbb
mov
inc
jae
jns
jnp
cltd
xchg
sti
cmp
lret
jno
movsb
gs
outsb
pop
mov
push
mov
jecxz
pusha
pop
cmpsb
mov
and
out
jo
pmullw
and
testb
jmp
sub
add
adc
sbb
sbb
jmp
jb
stos
into
jmp
cmp
imul
jmp
fsubrl
mov
jo
insl
pop
icebp
arpl
xor
dec
testb
hlt
sub
mov
cmp
hlt
fsubl
enter
and
jae
inc
xorl
mov
xor
push
fs
add
sub
jge
and
push
shl
fnstcw
imul
and
ljmp
jo
out
bound
jns
mov
stc
cmp
xchg
je
dec
jae
mov
fistl
pop
cmp
push
dec
lret
dec
add
sarl
call
jmp
aas
push
push
jp
adc
gs
negb
ja
mov
mov
imul
jno
int
aam
push
cmp
lods
idiv
cmp
push
fstpt
xor
push
test
dec
xchg
cmpsl
xchg
aad
aad
inc
jae
cmp
inc
jmp
insl
jbe
jmp
out
cmc
cmc
jge
xchg
cmpsb
adc
adc
adc
movsl
ret
mov
cmp
shr
lahf
jge
mull
pop
cltd
mov
fs
mov
movsb
sub
mov
int
dec
imul
dec
cmp
pushf
inc
negb
out
fildll
pop
in
stc
pop
dec
pop
xor
cmpl
shll
jp
lods
fs
xchg
add
pop
loop
xor
fnstenv
imul
xor
dec
call
pop
scas
add
push
push
and
and
popa
and
mov
sub
lods
in
stos
imul
imul
lea
pop
adc
cmp
out
mov
push
cli
cltd
fsubl
fimull
aad
fnstcw
add
stos
xchg
clc
ljmp
sub
pop
lcall
idivl
pusha
jg
inc
push
push
adcb
out
data16
inc
mov
mov
subb
jge
add
cmp
xor
mov
andb
sahf
cmp
lods
shrb
pop
out
pop
mov
dec
leave
fdiv
add
inc
or
and
and
dec
cmp
or
inc
movsb
jmp
lds
jp
add
sub
cmpsb
lods
pop
fidivrs
inc
mov
dec
mov
std
mov
mov
repnz
push
aad
roll
lea
xor
jo
punpckhbw
shlb
testb
pop
imull
shrb
mov
cmpsb
lret
sub
xchg
push
nop
fildll
fdivs
ret
push
jae
incb
shrl
and
sbb
mov
cmpl
in
out
mov
mov
adc
or
sbb
push
mov
insb
jb
dec
pop
cmp
adc
nop
mov
imul
cld
jecxz
addr16
scas
inc
les
jmp
cmpsl
xlat
sti
outsl
mov
or
and
jmp
aam
out
lcall
and
or
jmp
xchg
inc
pop
lea
ds
push
mov
add
add
pop
enter
cpuid
cmp
push
xor
inc
inc
mov
nop
dec
lret
xchg
jne
and
ljmp
xchg
leave
loop
add
popf
imul
push
sarl
cmpb
push
add
dec
ret
cmp
popa
pop
push
or
push
push
dec
inc
dec
push
shll
mov
insb
sbb
pop
pop
aad
xchg
stos
test
sub
push
popf
mov
jmp
or
inc
push
repz
adc
ret
repz
lock
cmp
out
xor
pushf
bound
movsl
cmp
jp
fwait
inc
xor
pop
mov
bound
xlat
gs
cs
dec
std
and
push
mov
out
mov
sbb
xor
pop
cmp
mov
test
jae
es
xchg
aad
mov
dec
and
in
dec
push
cmp
push
dec
push
out
mov
or
pop
int
add
mov
std
jge
mov
push
mov
mov
out
ja
ds
rclb
inc
pop
lret
aad
mov
lods
mov
iret
lcall
add
loopne
mov
arpl
mov
outsb
and
mov
gs
and
jb
mov
movsl
lcall
loopne
jge
out
mov
sub
pop
movsb
xor
xchg
je
cmc
dec
xchg
mov
push
adc
pop
ret
push
test
dec
sub
pushf
mov
pop
mov
jo
in
cli
push
jg
xchg
push
mov
jb
mov
and
jno
adc
mov
sub
lahf
sbb
gs
and
add
add
gs
xor
mov
push
call
mov
mov
add
jbe
xor
add
js
and
lds
les
or
or
les
cmp
rolb
lret
js
inc
and
pop
addb
push
push
or
ss
or
cmpl
xor
lods
sub
je
ss
xchg
cmp
add
imul
push
add
je
test
je
add
add
push
call
and
or
or
push
call
add
add
pop
add
in
ret
pop
pop
pop
push
sub
push
add
fisttpl
mov
rep
mov
stos
push
push
push
push
loop
add
adc
adcb
add
test
ret
add
sub
imul
mov
outsl
ja
lcall
and
and
mov
add
sub
cmpsl
and
mov
dec
cwtl
fs
mov
sbb
jnp
jle
neg
push
movsl
dec
movsl
test
popf
lret
arpl
push
adc
dec
sub
lea
and
les
jnp
dec
rolb
dec
dec
xchg
pop
leave
dec
mov
mov
imul
jbe
dec
mov
mov
nop
test
mov
mov
cmpsb
lcall
pop
jle
ljmp
adc
jmp
inc
fsub
vandpd
jb
mov
dec
jp
push
cmp
jns
jle
xor
scas
inc
bound
adc
add
ret
rclb
jne
aam
add
test
add
inc
xor
dec
outsl
push
sub
xor
adc
xchg
iret
sbb
pop
stos
stc
jl
lods
and
add
add
js
adc
mov
les
outsb
mov
fnstenv
xchg
into
inc
xor
loope
pop
sti
inc
mov
out
shrb
dec
add
pop
mov
popa
mov
mov
lret
daa
mov
sub
outsl
pop
cmc
pushf
sbb
mov
mov
ja
cmp
mov
divb
sub
fsubr
jns
pop
mov
or
ja
mov
dec
sub
sub
mov
xor
adc
shl
jmp
cmp
js
insb
sub
mov
aas
scas
push
adcl
cmp
mov
mov
outsb
icebp
add
test
inc
push
cmp
jno
leave
adc
pushf
fdivs
xor
popa
jo
sarl
and
iret
mov
mov
out
add
aad
es
fistpl
loop
cmpsl
cmp
ljmp
inc
push
inc
dec
and
push
push
into
ret
cwtl
jae
jnp
fwait
pop
or
inc
mov
lcall
add
add
or
sub
jns
and
pop
mov
pop
jbe
addl
add
lock
ja
popa
push
mov
iret
iret
scas
inc
mov
mov
in
xor
pop
mov
mov
pop
ficompl
push
xor
pop
cmp
rcr
fsubp
stc
xor
outsb
ret
adc
and
testb
adc
jne
adc
add
sbbb
jno
add
add
mov
xor
cmp
lock
addb
add
scas
stos
mov
mov
sub
or
fbld
cmp
push
repnz
pop
or
into
mov
out
or
xchg
out
repnz
push
lahf
xchg
pop
adc
adc
lahf
lahf
aas
lret
xor
lahf
xchg
push
push
cld
fwait
cld
pop
push
push
pop
stc
mov
lahf
insb
insl
pop
scas
xchg
jo
pop
adc
jns
mov
sbb
arpl
addl
sbb
addr16
outsl
repz
mov
aaa
jecxz
sbb
pop
js
lock
sub
add
add
outsb
add
cld
pop
push
sbb
cld
cmp
or
into
nop
xchg
xchg
repz
cmp
nop
enter
sbbl
mov
inc
push
cmp
out
push
iret
jecxz
adc
cmp
mov
cmp
jge
adc
push
iret
sbb
iret
jecxz
push
sbb
aaa
sbb
sbb
js
jns
cmp
out
bnd
mov
fidivs
jl
add
dec
int3
mov
sbb
jp
sbb
push
insl
fucomi
fists
xor
sub
cmpsl
inc
incl
bound
lret
add
and
sub
inc
adc
lock
and
push
push
jp
cmp
cli
mov
shll
lret
add
xchg
mov
ret
inc
incb
repz
cmp
xor
insl
and
mov
bnd
mov
mov
xchg
out
adc
sub
dec
insb
mov
add
add
jne
inc
pushf
or
ret
jno
hlt
adc
mov
push
lock
leave
sbb
into
sbb
rorl
and
sahf
mov
add
add
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
clc
add
mov
popl
cmp
cmpsb
iret
decl
js
add
add
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
add
add
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
add
add
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
add
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
aad
push
add
push
pusha
les
int
int3
sti
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
add
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
add
add
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
add
out
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
add
add
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
add
add
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
add
add
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
add
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
add
add
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
add
add
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
pop
add
mov
dec
dec
gs
std
orl
ficomps
add
enter
fmuls
