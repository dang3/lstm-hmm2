push
call
ret
ret
push
add
out
dec
xchg
jns
xchg
outsl
repz
adc
mov
pop
adc
mov
pop
dec
pop
lock
pop
or
rclb
cltd
lcall
ret
mov
jne
aam
dec
pop
sub
or
inc
push
adc
popa
ljmp
inc
dec
and
pop
clc
and
orl
mov
sub
andb
repz
maxps
in
cmp
cmp
test
add
sti
mov
push
adc
call
sub
fs
mov
inc
xor
call
or
add
jmp
movsb
inc
jg
jne
push
out
mov
mov
sbb
xorl
lret
rcl
jae
xchg
mov
mov
test
movsb
subb
xor
or
fnstsw
ret
in
sbb
sbb
jl
mov
mov
mov
imul
jnp
mov
mov
enter
mov
fidivs
mov
xchg
xlat
sbb
push
sti
stc
lods
pop
xlat
push
movsl
xor
hlt
test
jg
and
gs
lahf
mov
mov
mov
xchg
mov
std
xor
pop
xorb
push
popa
push
in
subb
ss
pop
jo
and
dec
cmp
inc
je
inc
ja
ret
sahf
cmp
mov
repz
sub
xchg
dec
lods
outsb
ljmp
mov
mov
test
pop
push
and
pop
pop
xchg
lods
inc
stc
rcr
movsb
mov
cmc
mov
test
int3
ja
sub
inc
lahf
mov
mov
fsubrs
es
ljmp
push
dec
adc
adc
xchg
sbb
mov
imul
mov
sbb
aaa
xor
mov
jb
mov
pop
loope
in
outsb
jp
into
lret
testb
pcmpgtd
ss
enter
ficompl
push
push
or
roll
jb
aaa
in
or
faddp
insl
imul
js
mov
mov
pop
into
mov
daa
jae
sbb
add
sbb
inc
aaa
fwait
lret
imul
ljmp
xlat
jl
out
outsl
movsl
and
xor
push
cli
mov
pop
jns
sub
cmp
xchg
xor
sbbb
ret
mov
jbe
add
neg
sub
inc
jp
jo
jle
mov
push
inc
pop
mov
stos
mov
cs
test
rolb
push
mov
shll
dec
aad
push
lock
test
mov
mov
mov
ret
lret
shl
aam
movb
jge
adcl
ret
mov
push
or
ja
push
stos
fnstsw
push
outsl
jne
sub
shlb
fs
scas
sub
push
adc
mov
pushf
mov
sub
or
mov
pop
test
sbb
mov
jp
outsb
je
cmpsl
cmp
dec
imul
addb
dec
push
fucomp
andb
add
mov
cwtl
sbb
hlt
sub
rorb
jb
das
and
das
xchg
arpl
push
lret
mov
gs
out
addr16
inc
mov
mov
mov
push
xlat
cld
pop
clc
enter
lods
cmpsl
or
and
mov
gs
lds
mov
pushf
sub
rorb
or
cmc
ss
lock
lea
adc
ss
cmc
cmp
ds
enter
cmpsb
jno
push
jne
nop
or
pop
pop
loope
push
pop
scas
aam
lds
xchg
lds
loope
sub
std
lret
mov
lret
inc
icebp
push
lret
mov
inc
xchg
ret
push
push
pop
ficomps
sbb
mov
icebp
jl
lods
loop
loop
cmp
push
jecxz
jge
les
scas
inc
jecxz
cmp
mov
add
push
mov
fwait
adc
dec
ficompl
mov
pop
fcoms
lds
mov
mov
repnz
xchg
mov
aas
es
push
test
out
jno
jge
xchg
mov
test
ljmp
pop
repnz
pop
cmc
push
xchg
or
and
sbb
test
mov
dec
push
mov
cmp
pop
inc
repnz
mov
dec
jns
push
add
mov
lock
clc
in
adc
cmc
cmp
inc
pop
out
jae
push
sub
je
and
push
rcrl
xchg
mov
aam
bound
push
mov
dec
mov
xchg
divl
adc
xchg
mov
repnz
outsb
scas
mov
popf
fadd
je
daa
jae
xchg
test
cmp
mov
push
fs
and
mov
cli
inc
jno
out
imulb
das
xchg
gs
dec
std
inc
icebp
mov
mov
mov
ds
cwtl
in
mov
dec
mov
icebp
jmp
incl
adc
hlt
cli
fldcw
inc
or
std
shrb
arpl
int
pop
stc
into
sarl
adc
push
inc
test
cs
jmp
test
aas
shlb
jo
jle
or
or
mov
fadd
inc
cmp
std
pop
cmp
or
fst
mov
out
hlt
mov
push
sahf
fwait
xchg
outsb
pop
std
jl
sbb
pushf
inc
mov
in
jmp
dec
popa
or
insl
jno
outsb
clc
sbb
xor
mov
movsl
add
test
xor
out
and
jne
repnz
cwtl
mov
mov
xchg
adc
mov
xorb
jp
sarb
xchg
adc
bound
out
inc
out
pop
rol
ss
inc
push
mov
js
adcl
adc
push
or
jmp
stos
sub
loop
cmpsb
inc
pop
mov
shlb
stos
cmpsl
test
push
popf
jb
sub
push
push
cmp
int
lcall
cmpsl
cmpsb
bound
repnz
sub
xor
mov
or
leave
pushf
neg
pop
mov
in
mov
subl
loope
scas
sbb
pop
fildll
sbb
fiaddl
add
mov
das
sub
adc
nop
aad
out
or
pop
gs
in
mov
sbb
cmp
test
mov
call
and
inc
in
jo
ficoms
jne
iret
dec
lret
test
jne
scas
cmpsl
outsb
inc
jg
adc
jbe
and
leave
sets
pop
or
mov
or
inc
jne
out
ds
inc
out
add
shlb
rcll
into
mov
jecxz
dec
lds
popa
cld
imulb
cs
xor
rclb
xchg
lods
shll
loope
and
icebp
push
ss
xchg
sahf
pop
inc
test
fdivs
sbb
inc
ja
dec
into
and
fidivrs
std
je
or
int3
out
jp
pop
data16
inc
mov
out
push
icebp
xor
mov
sub
fisubs
mov
imul
inc
jne
loope
sbb
adc
mov
and
mov
add
jbe
call
movsb
rcrb
push
outsl
mov
push
ret
cli
ror
fistl
stc
ds
testl
cmp
push
and
ret
jbe
rcrl
repnz
or
or
xor
rcl
xor
push
sub
sbb
jecxz
popa
out
dec
shrb
es
dec
fs
xchg
push
stc
push
in
lods
enter
xor
jg
cmp
fidivl
lds
mov
add
cmc
add
push
jg
daa
sarb
mov
mov
cs
ja
aas
jl
inc
push
test
loop
mov
int3
imul
rcrl
rol
adc
jp
rorl
inc
dec
pop
aas
dec
adc
or
lret
addb
js
int
and
xor
cmp
enter
adc
fisubrs
aam
es
sub
rcr
adc
xchg
push
lds
ror
push
mov
lock
fsubrl
sub
xchg
dec
or
cld
mov
cwtl
add
test
mov
jecxz
jno
push
sar
sbb
in
mov
cld
pop
xor
cltd
add
lock
icebp
jge
and
mov
adc
nop
xchg
sbb
std
mov
cmp
sub
out
jp
add
lret
pop
xor
adc
xchg
scas
push
lcall
jb
repnz
or
xchg
shll
cmp
mov
mov
lcall
imul
scas
ret
xor
addr16
hlt
aas
outsl
pop
cmc
imulb
outsb
adc
mov
jne
push
imul
push
mov
loopne
rol
cs
stos
jecxz
push
cwtl
pop
xchg
or
xor
inc
cmp
fmuls
pop
pop
jb
xchg
movsb
loop
mov
jo
sub
int
das
hlt
stos
jmp
sti
ja
xchg
inc
outsl
shll
stos
add
push
in
jae
sahf
inc
aam
cmp
lods
ss
dec
jge
jae
movl
dec
push
fidivl
or
sbb
ret
mov
xchg
out
data16
out
dec
mov
xorl
ret
lea
movsb
xchg
mov
ss
xchg
inc
jnp
cli
sub
dec
cs
mov
mov
dec
mov
jb
mov
cmp
fdivl
push
jge
inc
icebp
cmc
stc
mov
sub
adc
dec
mov
xlat
add
andl
lock
pop
sbb
inc
inc
in
xchg
paddd
adc
arpl
mov
movsb
divb
imul
aam
cmpl
sub
fiadds
dec
iret
ljmp
popa
aaa
shlb
cmpsl
loop
inc
push
dec
xor
fldenv
dec
rorb
push
jnp
xchg
cmp
nop
xor
adc
sub
insb
arpl
fldcw
xchg
and
cmp
jmp
jbe
andb
gs
or
adc
push
inc
call
sbb
out
mov
jmp
shll
call
sub
hlt
mov
mov
push
pop
in
push
lahf
les
xor
pushl
out
cmpl
lods
push
mov
sbb
dec
lock
lds
add
jne
fsubl
hlt
sub
sub
push
in
and
pop
mov
arpl
cmc
mov
cmp
aam
mov
cmc
call
pop
xchg
fldt
sub
push
push
jmp
add
sbb
rcr
imul
pushl
fsts
in
dec
je
jo
stc
xchg
or
js
test
xor
xor
push
jnp
adc
popf
adc
mov
inc
mov
insl
cmpsb
pop
mov
popf
idivl
cmp
fistpll
mov
jnp
jle
out
cmp
cmc
into
and
pop
outsl
repnz
push
notl
and
sub
jae
cli
loope
jle
push
imul
pushf
jl
daa
cmpb
sub
xchg
negl
mov
dec
fisubl
xchg
adc
fnstsw
jne
add
cli
xchg
push
dec
pop
sbb
and
sbb
xchg
into
cmp
xchg
cmpsb
or
sbb
or
xor
ljmp
mov
movsb
pop
mov
icebp
in
rcl
cwtl
jle
jnp
rcrl
jno
inc
xchg
mov
ror
pop
cmc
cmp
and
cltd
xchg
movsl
add
cwtl
jecxz
cwtl
popf
stos
mov
stos
movsl
pusha
arpl
popa
xor
and
ljmp
out
out
hlt
lret
jns
inc
jmp
aad
ja
mov
xor
mov
mov
mov
sahf
dec
xchg
mov
ret
imul
lods
rcl
lcall
test
mov
aad
xchg
push
xor
mov
nop
ljmp
call
mov
push
stos
adc
rclb
shll
popf
rcrb
in
jb
dec
push
clc
jp
push
sub
push
fiaddl
idiv
subb
inc
hlt
sbb
push
jnp
int3
pusha
popa
xchg
or
fisttpll
jns
mov
pop
adc
xchg
mov
imul
sbb
sbb
mov
pusha
clc
push
call
pushf
pop
pop
jne
je
mov
pop
xchg
sbb
ret
adc
mov
add
ret
movsb
xor
cmp
sub
sbb
xor
push
jl
aad
lock
pop
and
scas
inc
mov
xor
cmp
mov
lea
mov
or
xor
jb
ret
fcoms
js
shl
sahf
dec
andb
jp
add
popa
jnp
std
fs
add
mov
stos
add
xchg
pop
sub
andl
out
push
es
adc
adc
scas
mov
inc
lret
fdivrs
bswap
sarb
insb
xor
sti
pop
shrl
stc
or
or
xor
or
popf
ret
mov
int
mov
mov
sub
jne
jp
rolb
in
pop
shlb
sbb
mov
ret
mov
inc
add
push
lret
js
test
lock
lock
push
push
lods
cmp
push
or
inc
pop
lods
icebp
arpl
push
mov
pop
cmp
or
and
das
popf
sub
loope
mov
cmp
test
dec
adcl
testl
jns,pt
jae
sar
sub
mov
cmpb
mov
sub
xor
aas
jno
dec
dec
into
rcrl
mov
stos
jbe
mov
cmp
addr16
xchg
xchg
mov
mov
hlt
out
mov
rolb
fbstp
pusha
cld
pusha
push
cmp
mov
jne
jne
sub
gs
lret
sbbb
sub
or
loop
aam
testb
adc
daa
push
pusha
std
lret
jmp
aas
lret
repz
icebp
adc
inc
xorl
push
pop
enter
xchg
shrb
mov
mov
mov
mov
cmp
or
inc
lcall
jno
roll
dec
xor
idivl
cmpsl
push
lods
jae
inc
mov
add
and
dec
jae
repnz
sub
mov
mov
push
push
dec
cltd
iret
sbb
fistpll
cmp
sbb
xor
int3
stos
iret
push
push
clc
jl
push
sub
scas
mov
push
lods
cmp
rclb
inc
je
jbe
dec
sub
cmp
cmovae
push
mov
pop
enter
jl
sub
mov
add
jl
sub
pop
inc
fcmovb
roll
movsb
andb
cmp
lcall
cmp
fnsave
xchg
js
bound
mov
cld
xlat
popa
hlt
dec
ss
lds
clc
cmp
je
sbb
push
or
jp
push
inc
inc
mov
jmp
ds
mov
ror
loope
jg
adc
dec
faddl
lods
test
dec
filds
pop
inc
dec
push
rorb
int3
in
push
ljmp
and
in
sub
push
movsl
jns
xchg
movsl
sbb
cmpsl
sbb
xchg
pop
xor
arpl
mov
xchg
xchg
sub
push
hlt
xchg
jae
mov
fdivrs
mov
outsb
add
sbb
in
xor
push
mov
jne
mov
cwtl
sarl
adc
pop
call
pop
insb
add
and
and
add
jge
or
fs
pop
mov
addr16
movsb
int
mov
and
mov
add
cwtl
jge
popa
ficoms
ror
out
and
pop
fwait
aad
cli
adc
mulb
pop
cwtl
adc
mov
push
mov
sbb
or
ret
leave
out
rclb
sub
pushf
ret
ljmp
push
lahf
adc
cmpsb
cmpsl
xor
pop
inc
jecxz
inc
cmp
xchg
popa
add
stos
insb
lock
fsubs
inc
dec
into
repz
pushf
sub
cmp
enter
rcl
dec
xor
mulb
dec
dec
add
push
cmp
mov
jnp
xchg
sbb
dec
cmp
push
loop
xor
rorb
aaa
sbb
stc
in
call
mov
addr16
add
and
adc
or
xchg
in
les
fisubl
mov
insl
cmp
bound
jg
cltd
lea
leave
pop
pushf
fwait
psubusb
pop
push
mov
data16
pop
in
leave
insl
jb
dec
adc
jo
cs
fadd
es
dec
cmp
mov
das
in
lret
pusha
daa
clc
in
ds
enter
sub
enter
dec
icebp
imul
push
and
jl
outsb
fldl
adc
jl
iret
rorl
xchg
push
jns
cs
aad
data16
out
jmp
inc
jg
scas
jl
jo
xchg
xchg
xor
daa
cmp
xchg
out
mov
cmp
rcrl
xchg
scas
bound
leave
pop
pop
test
sbb
js
loope
xor
inc
call
loope
push
leave
dec
dec
imul
xchg
lea
shll
xchg
lock
lock
clc
enter
je
movsl
mov
mov
aaa
push
pop
sub
sub
pusha
mov
js
pop
repz
pop
fcompl
jb
xor
xchg
decl
loopne
out
loopne
pop
or
std
imul
adc
pop
shlb
xlat
fisubl
pop
pop
mov
cmp
mov
mov
adc
fs
shrl
dec
in
divb
add
jge
cmp
cmp
xor
popf
push
std
hlt
fdivrl
xor
add
les
sbb
mov
sub
stos
scas
daa
lret
dec
lcall
inc
push
jg
push
or
sbb
mov
scas
pop
push
bound
inc
xchg
cmc
mov
jl
lahf
pusha
es
jno
mov
pop
into
imul
jg
add
clc
fldl
out
push
pop
push
xor
pop
aad
sbb
push
xor
push
and
movsl
in
and
rorl
outsb
adc
xchg
mov
shlb
dec
inc
xchg
fs
lcall
jbe
movhps
xchg
fnstcw
cmp
dec
std
xchg
xchg
outsb
mov
ljmp
push
je
add
fcompl
inc
mov
or
test
dec
shlb
mov
ss
dec
loopne
mov
mov
aam
inc
aaa
inc
test
enter
mov
dec
mov
mov
mov
jge
ret
les
mov
push
adc
push
scas
cmp
or
shlb
cli
aas
add
fcoml
clc
or
in
insb
call
repz
sub
mov
add
mov
fcom
mov
mov
xchg
stos
sbb
cld
fadds
int
cmpb
mov
imul
pushf
pop
in
push
push
andps
mov
popf
fdivrl
adc
movsl
xchg
bound
ret
xchg
in
fnstenv
mov
pop
out
jecxz
mov
es
js
cltd
mov
shr
add
and
adc
imul
cmp
aam
cli
stos
mov
push
push
mov
andb
icebp
pop
xchg
cmp
in
adc
sti
xor
mov
adc
push
ss
fnstenv
lea
inc
in
jnp
adc
mov
pop
aam
push
outsb
daa
adc
aam
push
pop
out
lahf
aas
fisttps
leave
testb
and
sti
scas
popf
push
sub
push
mov
mov
jmp
and
insb
cmp
inc
sbb
or
sub
out
adc
mov
xchg
and
outsb
sbbl
mov
pop
cmp
or
popa
pusha
push
nop
xchg
mov
bound
and
loope
push
cmp
ds
mov
sbb
jge
cli
ret
or
scas
push
repz
movsb
sbb
jg
cs
mov
in
cmc
je
add
punpckhwd
fcmovbe
lock
mov
pop
rorb
xor
adc
or
and
inc
cmpsb
scas
das
xlat
imul
lds
mov
dec
in
in
xchg
push
xor
add
mov
pop
pushf
iret
add
mov
shrb
in
dec
mov
cli
mov
inc
dec
jmp
incl
test
cmp
dec
and
leave
mov
mov
inc
sarb
cmp
push
sub
xor
xchg
test
push
xorl
lret
fs
inc
xchg
call
push
mov
test
leave
ss
lea
scas
js
jo
ljmp
fiaddl
cmpl
adc
lods
lahf
addb
push
inc
test
xchg
sahf
add
and
adc
mov
idiv
or
jb
inc
mov
call
xchg
lea
out
push
mov
das
out
fadds
nop
cwtl
mov
mov
cmp
mov
cmc
adc
stos
cmp
subl
and
mov
nop
adc
push
aam
lahf
and
repz
dec
push
mov
sti
inc
pusha
fs
into
cmc
fisttpll
in
sub
pop
dec
add
mov
and
fsts
pushf
lahf
jbe
sahf
adc
es
enter
xor
scas
mov
jge
sarl
mov
lods
jecxz
mov
pop
test
sub
sub
arpl
cwtl
push
mov
scas
repz
aaa
push
lcall
cmpsl
fwait
cmp
xchg
loop
mov
or
test
pop
cmp
in
and
inc
jb
clc
add
je
aas
les
sub
ss
sbb
daa
test
repz
loopne
push
sbb
inc
cs
repnz
andl
dec
dec
lea
adc
push
push
cmp
fstl
fldt
sbb
inc
fstp
movb
insb
sti
dec
lcall
fnstsw
daa
cwtl
xlat
out
outsb
bound
aad
inc
inc
mov
jbe
sub
xor
push
pushl
dec
inc
and
jo
add
pop
or
jo
adc
mov
pop
mov
fildll
cmpsl
xor
add
mov
sub
stc
testb
xor
pop
imull
xor
popa
imul
aam
cld
cli
ds
pop
mov
adc
sti
lret
inc
out
xchg
mov
outsl
andl
jmp
xchg
movsb
ss
int
lcall
sub
xor
sub
push
fbld
test
imul
jmp
test
xchg
sarb
xorl
cltd
mov
sub
inc
leave
lahf
mov
ret
rcrl
insl
inc
imul
sub
sbb
sbb
xor
rcrb
jl
pop
arpl
jl
icebp
cmp
mov
add
int3
xchg
call
push
pop
adc
insl
div
push
mov
in
inc
notl
loop
sub
cltd
sbb
clc
mov
das
push
sbbl
mov
push
mov
test
imull
mov
adc
xchg
push
loop
shrl
rolb
and
pop
xlat
mov
xorb
mov
jp
js
mov
xchg
nop
and
insl
or
popa
lret
xchg
arpl
or
lock
pop
pushf
jo
stc
sbb
cmp
addr16
add
xchg
inc
ja
inc
mov
or
into
xor
outsb
push
and
out
fimull
daa
test
mov
outsl
mov
cwtl
sti
outsb
jnp
mov
push
adc
aas
and
pop
fstps
nop
call
fwait
sub
leave
test
out
inc
xorb
inc
sbb
and
fimull
fcompl
std
and
sub
inc
fadd
xchg
cmpsl
inc
push
test
push
xor
cmp
push
ds
or
jg
adc
mov
lods
or
cmpb
adc
mov
pop
sbb
sbb
push
clc
aaa
pop
and
sbb
ret
lahf
out
or
adcb
popa
adc
das
add
outsb
out
xchg
add
jne
fwait
xorl
jbe
decl
mov
fisttpl
out
xchg
push
cmp
fdivp
pop
dec
mov
xor
xor
nop
scas
mov
mov
enter
and
mov
bound
lret
jb
ja
jo
repz
xor
mov
stos
das
jb
in
shrb
repnz
insl
cmpsl
mov
push
movsb
adc
rcll
fwait
push
pop
mov
int
sub
pushf
inc
lods
xor
pushl
push
pop
mov
shl
xor
and
subl
andl
cmpsb
mov
ljmp
andl
imul
push
dec
xor
inc
div
sbb
pop
shlb
lcall
mov
dec
jbe
mov
stc
roll
mov
sahf
inc
in
dec
iret
int
or
dec
out
cltd
mov
sub
sahf
cmpl
adc
mov
cli
push
je
mov
and
je
mov
mov
in
mov
xor
mov
ja
mov
rcl
jmp
imul
je
repz
stos
inc
movsb
xchg
add
ret
jmp
lahf
sub
test
lods
nop
xlat
inc
and
xor
jo
ja
push
nop
fnstsw
inc
lret
into
arpl
mov
or
fimuls
lret
repnz
sbb
pop
test
sbb
cwtl
leave
cmc
push
push
xchg
sub
fimull
jge
jmp
sbb
cli
pop
adc
xor
mov
add
mov
inc
loop
rcll
insb
xchg
enter
idivb
decb
add
repz
sbb
insl
add
inc
in
pop
mov
cs
movsl
pop
dec
iret
stc
mov
push
cmp
and
sub
inc
pushf
cli
aaa
std
aas
int
cmp
add
sbb
repnz
loope
xchg
mov
jge
je
rcrl
sub
and
mov
sub
in
push
jp
repnz
out
xchg
adc
push
lods
das
adc
aam
addr16
in
out
lret
push
sbb
repz
mov
outsb
mov
mov
sbb
enter
pushf
inc
mov
mov
mov
out
dec
xor
hlt
jne
xchg
jns
stos
jecxz
pop
inc
lds
btcl
call
lods
repz
data16
enter
pop
xor
add
out
sti
dec
cmpl
jne
inc
cmpl
pop
lahf
nop
stos
add
std
fistps
loopne
fwait
sbb
pop
push
push
inc
sbb
cmp
scas
jecxz
stos
xchg
and
leave
jp
jge
lock
pushf
dec
stos
lock
daa
cs
mov
hlt
or
add
int3
mov
lods
jbe
das
std
or
mov
xchg
mul
pop
outsb
sahf
sbb
pop
cmp
je
pusha
shll
xchg
nop
sub
nop
jne
js
push
movsl
push
jnp
stos
inc
lods
mov
repnz
xor
inc
rorl
aad
movsb
in
mov
js
into
sbb
cwtl
ljmp
imul
mov
cmp
mull
out
cs
stos
push
in
sti
or
jo
inc
or
leave
inc
or
adc
repz
or
lret
xorl
mov
xchg
mov
xchg
fdivs
sbb
outsl
mov
daa
lock
mov
inc
jmp
enter
psllw
aas
lcall
test
in
dec
push
test
les
adc
push
jge
mov
push
dec
add
jmp
or
xchg
dec
cmp
loope
xchg
mov
insb
pop
movsb
fsubrl
inc
and
pop
jno
and
mov
jecxz
xchg
movsl
in
repz
es
movsl
sub
xchg
xor
adc
sub
mov
mov
loop
add
ret
out
cmp
cld
in
clc
cmp
pop
or
out
add
pop
dec
out
adc
push
mov
pushf
movsb
cmc
rcll
and
sbb
addr16
mov
into
adc
and
cmpsb
inc
insb
movb
inc
mov
jne
pusha
add
imul
and
rcl
push
stos
scas
pushf
push
jge
cmp
push
mov
sti
out
inc
shrb
rolb
pop
lods
fwait
xor
scas
push
push
das
mov
jecxz
xor
dec
fsubl
inc
ficoml
pop
outsl
into
inc
cltd
mov
dec
cmp
pop
xchg
ret
or
in
or
pop
sbb
popa
pop
int
shl
mov
xlat
xchg
pop
int
push
stc
popf
ret
adc
jo
aaa
insb
sub
mov
pop
dec
add
xor
scas
sub
adc
xor
fsts
or
arpl
xchg
ds
stos
out
out
xor
imul
decl
sub
shll
adc
jle
mov
flds
dec
movsl
rcrb
call
sbbl
shll
repz
stc
xor
pop
mov
insl
mov
add
jl
iret
fcompl
inc
mov
outsl
test
xchg
or
ja
mov
mov
add
imulb
adc
mov
sahf
jnp
in
and
xchg
lahf
inc
mov
add
out
and
push
adc
testb
add
cld
rcr
int3
mov
bnd
xor
or
pop
and
aaa
scas
push
jmp
adc
imul
jp
add
dec
inc
mull
xchg
ret
repnz
in
es
arpl
push
xor
cmp
and
dec
fistpll
adc
insb
repz
inc
in
push
negb
adc
jno
dec
nop
cs
scas
fisubl
jns
cmp
in
cmpsl
pop
mov
outsb
negl
imul
out
mov
and
adc
push
jmp
mov
inc
in
push
lret
push
dec
jmp
cwtl
pop
jl
jae
repz
xor
xchg
inc
push
and
pop
cmp
test
sub
rol
sub
sub
mov
loope
or
push
cltd
sti
arpl
cmp
fdivrl
jle
mov
pop
pop
push
xor
fmull
and
mov
imul
sbb
push
lret
mov
or
add
jecxz
in
cld
jno
pop
dec
inc
movl
sub
fldcw
inc
mov
lods
and
bound
adc
setg
xor
rorb
in
push
in
les
sarl
mov
mov
fbld
int3
aas
outsb
je
lret
xor
loop
stos
sbb
data16
addr16
push
and
cmp
stc
add
data16
cs
jmp
xchg
adc
pushf
mov
push
pop
push
adc
pop
mov
adc
jg
decb
repz
sub
cmpsb
popa
or
mov
jnp
cmpl
mov
jge
xor
loop
out
jg
movsl
ja
in
lds
iret
xor
pop
pop
dec
cmp
mov
shrl
mov
fldcw
pushf
jge
outsb
mov
test
testl
push
enter
xor
dec
or
mov
jbe
std
fldcw
push
xor
data16
movsb
sahf
jmp
and
mov
xchg
push
das
xor
pusha
iret
in
testl
loop
stos
pop
pop
push
lock
mov
xlat
and
test
rclb
push
pop
mov
je
xchg
fstps
sub
dec
jno
es
xchg
lret
sub
xchg
fisttpll
test
arpl
fstps
mov
inc
dec
lcall
and
add
xchg
xor
repz
fwait
jnp
inc
xchg
xlat
or
fwait
orl
cmpsb
add
jge
call
xchg
mov
mul
push
sbb
fstps
jmp
cmp
scas
ljmp
cs
shll
mov
stos
and
fcmovnb
or
fwait
mov
jns
addb
mov
or
bswap
sub
in
dec
in
ja
mov
rcrl
test
add
xor
addr16
jb
push
pop
pop
int
cmp
fdivr
cltd
inc
pop
daa
aas
add
mov
pop
add
test
sbb
jno
sahf
mov
lock
push
mov
sub
hlt
lds
sub
jmp
jo
inc
aaa
test
pop
xor
jmp
dec
push
sahf
dec
jb
inc
pop
jb
fisubrs
mov
js
xor
repnz
cmp
les
adc
subl
xor
sbb
mov
sub
jbe
sub
lods
push
jno
xor
fstpl
push
mov
adc
cli
and
cli
aas
inc
stos
mov
adc
es
fwait
mov
cs
stc
add
cld
adc
fisttpll
dec
adc
jle
inc
or
mov
push
shlb
jne
arpl
das
mov
out
dec
loopne
xchg
and
fiaddl
jge
or
fldenv
fsubl
inc
adc
sub
dec
insl
ja
adc
sti
add
ja
jb
mov
dec
arpl
add
adc
std
sub
xor
in
inc
inc
or
lret
jmp
test
scas
pop
xchg
sbb
pop
push
cmp
cmp
pop
cmpsl
xor
mov
aad
insb
cli
push
push
ds
test
sbbb
out
add
imul
ucomiss
lea
push
lahf
fs
std
and
out
das
jno
cmp
test
xchg
mov
xlat
in
sbb
gs
sub
pop
out
imul
data16
icebp
out
cmp
fbld
stos
xor
inc
xchg
jle
inc
mov
in
add
arpl
clc
notb
aad
int
mov
repz
push
add
sti
fdivl
sbb
das
pop
flds
and
insb
ljmp
dec
daa
int
push
push
cmp
xchg
jno
pusha
xchg
scas
outsb
lahf
cmp
in
gs
xor
cmp
push
dec
xor
inc
xor
jmp
xor
pushfw
icebp
fisttpll
adc
into
stos
fdivrp
loope
clc
push
in
out
fucomp
mov
and
mov
and
push
and
jmp
lods
cwtl
xor
jo
jns
scas
je
xchg
into
paddsw
and
push
pop
jle
hlt
jmp
push
mov
cmc
sbb
mov
and
test
das
jl
push
inc
mov
mov
xor
repnz
push
xchg
movsb
addr16
mov
cmp
mov
outsb
sti
adc
xor
xor
adc
sub
lock
push
push
shrl
mov
pusha
xlat
ror
sbb
push
mov
sub
and
ja
dec
xor
or
adc
out
and
sbb
jg
mov
cmp
pop
and
dec
leave
bound
mov
sbb
ds
fsub
cmp
xor
adc
mov
sbb
stos
insw
ret
adc
bound
ja
pop
cmp
lods
hlt
test
call
or
add
xchg
aas
iret
aad
push
and
or
out
dec
test
fists
movsl
mov
pushf
scas
add
lods
pusha
sarb
std
add
js
jne
std
and
test
sti
repz
adc
sarb
cli
aam
shl
sbb
out
js
mov
pop
or
dec
push
pop
out
jbe
fildl
sarl
sub
jg
mov
mov
jo
jnp
cli
cmp
pop
xor
shr
ftst
pusha
mov
mov
aas
test
cmpsl
xor
imul
jae
pop
mov
test
cmp
stc
ss
jge
jle
fsts
cwtl
jno
fiaddl
in
andl
test
mov
jo
cltd
stos
cmp
dec
pop
fisubrl
push
scas
or
notb
and
mov
leave
fildll
jno
mov
test
mov
data16
bound
fwait
or
int3
fwait
int
jle
adc
imul
push
int
push
lret
and
or
cmpl
adc
sub
out
add
icebp
das
add
das
xchg
fst
sbb
add
fs
add
pop
fdivrl
dec
jne
push
mov
push
dec
add
icebp
mov
xchg
inc
out
inc
mov
out
scas
jo
sbb
in
push
fadds
pop
xchg
mov
jg
scas
inc
iret
fstl
imul
das
adc
lods
pushf
pop
push
jne
adc
scas
jne
daa
add
sbb
stc
cltd
lret
cmp
mov
cmp
xchg
adc
mov
mov
cmp
iret
popf
js
and
ficoml
lret
add
add
in
mov
mov
mov
je
xchg
pushf
xor
pop
orb
je
xchg
in
pop
cmp
push
add
divb
out
ficoml
mov
inc
insl
and
shll
ud1
mov
jb
inc
push
cvtsi2sdl
jmp
cmp
xor
dec
jl
jg
push
cmp
mov
push
dec
daa
sahf
cwtl
cmp
add
fyl2x
and
inc
aad
js
xchg
and
in
dec
mov
xor
push
xchg
fwait
sub
pop
addr16
les
push
in
addl
repnz
gs
loop
mov
cmp
rolb
sub
rcl
stos
lods
sub
and
push
pop
cmp
testl
mov
pop
mov
dec
rol
clc
xor
push
xchg
faddl
repz
jp
mov
adc
andl
fwait
add
les
fcmovb
repz
sahf
lahf
inc
sbb
imul
xchg
fmull
ljmp
imul
ss
ret
imul
rclb
fstpl
xchg
mov
jecxz
pop
xorb
insb
jno
insl
push
cmp
jns
dec
out
rcll
int
dec
lret
out
mov
int
shr
cmpordps
movsb
arpl
stos
in
jmp
push
jle
mov
dec
orb
popa
pop
shlb
scas
pop
lock
mov
mov
jg
fistpll
fwait
addb
ret
in
mov
dec
mov
xchg
add
or
or
fisubs
test
xor
je
fcomip
jge
rorb
or
jnp
xchg
pop
insl
push
rorb
scas
xchg
stos
pop
cli
mov
inc
testl
bound
mov
pop
out
js
and
pop
ja
jecxz
test
xchg
orl
sbb
outsb
pusha
movb
incb
dec
stc
aaa
mov
sub
xchg
movsb
sbb
xchg
jmp
xor
pop
fcompl
rcl
pop
stos
adc
mov
cmp
sub
and
fisubs
cmpsl
fdivrl
mov
mov
sbbb
push
jns
inc
syscall
repnz
push
xor
int3
mov
test
cwtl
fnstenv
jae
insb
mov
lret
pop
mov
call
or
arpl
jne
popf
add
xor
fdivl
shr
and
std
inc
add
jp
jns
sub
fadd
je
addl
popf
adc
jmp
out
or
leave
cs
inc
dec
sub
mov
pusha
movsb
mov
dec
and
adc
les
xchg
sub
inc
insb
xchg
jnp
das
cmc
fidivl
inc
cmp
mov
stos
sahf
into
xchg
xor
sub
ret
cmc
rolb
lea
sti
push
xchg
mov
sbb
popf
jp
movsl
js
dec
test
mov
jne
cmp
push
mov
jge
fcmove
rorb
sahf
test
jge
and
fidivl
fsub
ror
cmp
insl
subl
mov
les
subb
repz
lods
cmpsl
mov
outsb
stos
sbb
ss
pop
int3
sbb
mov
aad
or
in
mov
sub
mov
jg
or
xor
bound
cmp
insb
xor
aam
movsb
mov
std
ret
mov
push
push
dec
in
xchg
aam
pop
imul
cmp
push
icebp
bound
xchg
int3
mov
lcall
mov
sbb
imul
testb
or
push
es
adc
mov
mov
das
jbe
iret
daa
cmc
pop
adc
inc
push
aad
out
or
out
inc
sub
cmp
call
out
popf
cmp
lahf
int3
fwait
and
pop
fisubs
push
adc
nop
xlat
daa
push
test
movb
dec
xor
push
inc
lods
mov
push
das
xchg
dec
inc
xor
xchg
push
mov
std
sbb
stc
cltd
sub
out
cmp
xor
jp
pop
lods
xor
sub
nop
cmp
xorl
mov
mov
or
jecxz
and
mov
sbb
leave
lock
inc
bound
cmpsl
loopne
sti
gs
xor
ror
ss
es
sbb
xchg
mov
add
adc
js
outsb
out
sahf
xor
xchg
and
sarb
mov
daa
sub
sbb
jno
loope
cmp
orps
and
xchg
xchg
test
mov
in
or
out
ss
negl
imul
rcl
mov
add
cmp
popf
push
adc
mov
mov
jge
loope
fmuls
test
or
int3
cmp
xchg
ja
fsts
pop
fbld
icebp
xor
push
sbb
adc
mov
xchg
in
lcall
rclb
fwait
mov
ja
adcb
rol
xlat
arpl
jge
xchg
add
js
popa
fs
out
iret
fwait
lea
xchg
enter
sub
sahf
popa
outsl
pop
bnd
jae
mov
xor
push
leave
jb
mov
es
dec
repz
int3
lret
jns
cmc
sub
xchg
scas
mov
test
push
xchg
loopne
call
mov
ret
in
cmovp
dec
or
mov
add
adc
jecxz
mov
xchg
push
mov
imul
and
mov
enter
aad
mov
adc
lcall
scas
ret
push
imul
pop
mov
ds
stos
jecxz
dec
mov
pop
dec
jge
adc
jecxz
mull
xor
adc
aad
xchg
push
insl
fst
inc
xchg
mov
je
lods
pop
inc
adc
mov
mov
imul
arpl
clc
adc
xchg
sbb
test
sbb
jnp
inc
nop
jmp
push
call
arpl
sbb
dec
out
jg
mov
rolb
cmc
pop
cmp
xchg
jg
je
mov
fucom
daa
daa
leave
cmc
notl
je
push
pop
sbb
hlt
xor
mov
fisttpll
sub
repz
lret
mov
arpl
test
hlt
pop
outsl
jle,pt
nop
sub
push
jo
dec
xor
push
movsl
xor
xchg
jbe
xor
shl
and
add
mov
into
cltd
cs
sub
insl
in
sbb
inc
add
sub
into
push
add
or
mov
pusha
sbb
pop
imul
mov
test
adc
imul
mov
cmpb
pop
xlat
lret
into
inc
push
inc
daa
inc
mov
addr16
daa
cmp
loopne
pop
xorb
in
inc
jbe
rcl
fs
add
sub
mov
jnp
hlt
in
jns
mov
jp
mov
daa
pop
pop
cmpsb
pop
jle
enter
int
in
out
add
jle
cltd
sahf
ds
arpl
adc
mov
lahf
cmp
fwait
pop
or
into
inc
test
out
movsb
xor
xor
mov
and
lods
cmp
mov
or
push
pop
mov
jmp
adc
push
cmp
pop
add
in
push
xor
scas
jne
push
insl
sbb
push
adc
push
push
or
xor
cmpsb
add
movsb
xchg
and
ss
fmuls
ljmp
rcrb
aaa
and
jns
sahf
inc
dec
in
repnz
xchg
sarb
outsl
out
push
pop
sub
and
jecxz
mov
stc
pop
aaa
jnp
push
add
in
popa
rorl
in
pop
xor
aad
sub
fmull
cmp
mov
inc
xor
jns
fwait
mov
inc
adc
or
jns
movsb
adc
adc
shlb
repz
add
les
ret
popa
inc
std
fcomps
enter
cmp
sub
mov
push
adc
aam
lock
mov
shll
mov
cmp
call
jbe
punpcklbw
mov
inc
and
push
cmp
mov
ljmp
sahf
arpl
add
push
cmp
rcrb
sti
cmpsb
test
adc
cmpsb
cmp
and
inc
mov
xchg
das
push
inc
jo
adc
jo
rorl
cmp
repnz
or
inc
add
cmpsb
pushf
push
cmp
hlt
mov
sbb
pop
mov
xchg
inc
adcb
mov
call
mov
ss
in
pop
cmp
sbb
outsl
sar
jp
mov
popl
push
repnz
pushf
in
mov
and
fwait
mov
into
fadd
nop
add
insb
add
fs
in
std
adc
mov
xchg
in
outsl
aaa
stos
mov
in
lock
movsl
cld
idiv
iret
add
dec
xor
lahf
fcoml
rorb
sbb
ficomps
push
mov
xor
pop
int3
push
lret
iret
inc
bound
mov
sbb
test
aad
repz
movsb
jno
je
out
jg
lods
cld
in
or
xchg
dec
mov
aas
lahf
sub
add
pushf
leave
lods
pop
push
rolb
pushf
inc
imul
aas
xor
push
sub
cltd
dec
cmp
ficoml
popf
xor
fwait
call
es
cltd
and
pop
stc
dec
lea
pushf
test
push
inc
mov
pop
into
aaa
pop
sbb
or
js
mov
fwait
jp
sbb
jle
dec
xor
fmull
pop
or
mov
inc
sarl
andb
stos
shll
jge
or
xchg
pop
sbb
or
stc
cmc
adcb
and
out
lock
mov
mov
mov
lods
and
js
addr16
add
jbe
or
cwtl
std
cmp
jmp
std
mov
push
add
popf
enter
dec
das
test
push
enter
lret
in
mov
sbb
cmc
xor
pop
enter
scas
mov
mov
clc
push
xchg
cmpsb
dec
sbbb
lret
adc
sub
push
sbb
je
out
das
call
xor
pop
or
sarb
setle
mov
push
add
cli
insb
mov
xchg
daa
jmp
ss
mov
lret
js
addb
loope
and
sbb
test
inc
cmp
or
pop
pop
mov
sub
addr16
mov
out
cmp
mov
mov
xorl
pop
push
daa
add
sbb
adc
xchg
mov
cmp
jmp
push
jbe
leave
sti
dec
shrl
lds
fisubrl
stos
inc
mov
mov
jb
ja
das
mov
aaa
daa
aas
xor
sub
add
or
fdivs
stos
scas
inc
cmp
dec
lea
ja
imul
mov
sub
test
jne
cmpsb
int
int3
pop
imul
movb
inc
push
int
repz
test
sbb
or
mov
xchg
sti
mov
out
mov
mov
in
xor
ja
divl
cmp
addb
mov
xchg
in
ficomps
sbb
lods
xor
push
iret
sbb
and
and
mov
cmp
jg
mov
pushf
daa
shrb
imul
xor
mov
push
jmp
xlat
mov
sbb
enter
fdivr
add
adc
push
add
lahf
pop
in
xchg
xchg
mov
sub
sub
cmp
leave
ret
pop
mov
pop
xchg
stc
add
rcrb
in
sbb
xchg
dec
add
add
and
scas
aaa
pop
lret
in
add
into
push
cmp
cld
out
and
jp
mov
xchg
cmp
jno
repnz
or
push
mov
inc
out
xor
mov
inc
pop
loope
adcb
sarl
jns
sub
out
inc
jmp
mov
icebp
hlt
jns
fstp
pop
jmp
push
nop
cmpsl
shlb
cli
andb
xchg
arpl
mov
and
push
xchg
xor
and
mov
push
mov
pop
aaa
test
inc
dec
mov
shlb
add
jecxz
outsl
inc
ret
pop
icebp
in
dec
mov
arpl
cwtl
push
insl
test
and
xchg
dec
arpl
inc
pop
flds
push
jo
movb
divb
imull
gs
sub
push
inc
das
dec
jecxz
mov
mov
xchg
jle
push
iret
imul
shlb
sub
leave
les
popf
ss
ficoml
mov
nop/reserved
shrb
test
stos
mov
mov
pop
addr16
cmp
std
incl
pop
js
inc
or
and
aaa
or
rolb
sub
fcomps
push
mov
push
sti
mov
clc
hlt
ds
cmpsb
fimull
mov
test
xchg
imul
or
fdivs
in
jge
mov
and
mov
mov
mov
push
xchg
gs
stos
sub
adc
sub
ja
push
movsb
rcrl
push
push
or
mov
mov
inc
int
scas
cmp
push
dec
mov
pop
andl
test
lds
xor
adc
imul
mov
xor
hlt
mov
mov
xchg
sub
xchg
push
push
les
mov
ja
lahf
or
add
add
jp
subl
movsl
or
xchg
dec
dec
das
push
or
jae
cli
or
nop
push
xchg
lret
rclb
je
out
pop
fdivs
gs
sahf
fs
sahf
mov
pop
push
fdivs
into
fisttps
push
mov
add
mov
mov
mov
loop
cmp
sahf
pop
scas
add
ja
in
cmp
mov
push
inc
pop
sar
insl
test
stos
aad
cmp
rcr
pop
dec
mov
les
jg
icebp
dec
xor
mov
pop
adc
mov
sub
dec
minps
mov
sahf
call
cs
out
ss
dec
popf
mov
adcl
push
in
jmp
xor
sub
ficoml
subb
mov
lret
pop
cmp
mov
ret
push
jnp
loope
xchg
jne
cltd
stc
mov
stos
adc
andb
xchg
sahf
mov
stos
pushf
ljmp
push
mov
popa
cmpsb
mov
push
jno
push
sbb
xchg
sub
lcall
sbb
stc
xor
loopne
dec
test
divl
mov
out
gs
sbb
sub
int
aas
fistpll
push
movsb
pusha
push
inc
stos
xor
das
cmp
adc
inc
loopne
add
repz
in
jg
add
ja
mov
dec
cmp
xor
inc
or
outsl
popf
pop
mov
lock
or
mov
push
add
mov
stos
mov
jmp
push
fldcw
mov
lods
add
sbb
mov
mov
mov
fidivs
inc
xchg
or
adc
xchg
sbb
leave
mov
mov
jo
out
sbb
dec
mov
sub
xchg
jo
cmp
iret
and
aaa
ljmp
lahf
mov
pop
sbb
and
sub
inc
push
lcall
jp
pop
icebp
pushf
xor
in
mov
cltd
sub
add
mov
add
dec
insb
xor
push
jmp
bound
sbb
mov
rolb
insb
jp
adc
adc
addr16
aas
cmpsl
repz
jnp
mov
mov
mov
cmpsl
clc
add
mov
xchg
mov
sub
xor
ss
dec
test
jns
aaa
jmp
sbb
ret
push
daa
pop
cld
mov
adc
sub
pop
icebp
mov
mov
push
mov
div
cmpsl
xchg
clc
mov
dec
or
fst
dec
xor
adc
inc
popf
xchg
test
and
jno
nop
je
mov
into
add
xor
push
pop
js
push
inc
xchg
cmpsb
push
aaa
inc
cwtl
add
jae
jb
jno
or
mov
jp
scas
repnz
fwait
mov
cli
lcall
push
add
shlb
ret
shlb
inc
jns
popa
mov
outsb
mov
cs
xchg
hlt
sub
xchg
lods
mull
cmp
inc
jle
sahf
nop
jp
jne
jl
pushf
popf
jnp,pt
mov
sub
adc
aaa
mov
loopne
gs
cmp
sarb
adc
out
and
aam
or
sub
out
out
fiaddl
add
xchg
test
dec
xor
dec
inc
lret
icebp
inc
jnp
mov
icebp
jae
mov
mov
dec
negb
std
push
into
and
inc
mov
lods
rcr
and
ret
into
les
pop
aas
pop
pop
inc
pop
test
shl
cld
rorl
xchg
xchg
loopew
push
rcrl
push
repz
ja
or
test
fdivl
sbb
leave
mov
cmp
xchg
sbb
xor
lea
mov
lcall
int3
repnz
xchg
ret
adc
cmp
outsb
hlt
lods
repnz
xor
fucomip
bound
pop
mov
cmc
sbbl
jecxz
mov
cmpsl
cmpsl
fstpl
jmp
xchg
ficoml
adc
in
sbb
adc
jo
mov
hlt
cmpl
jmp
std
dec
jo
mov
push
inc
push
mov
mov
xchg
push
and
shrb
jge
sbb
shrl
loope
into
lods
cmpsl
mov
fcmovu
cmp
jo
inc
pop
push
push
test
mov
mov
and
sahf
xor
dec
sti
jecxz
inc
xor
inc
adcl
push
scas
sarb
add
lcall
sbb
imul
dec
movsl
and
mov
fwait
xchg
stos
or
or
mov
mov
repnz
pop
xchg
xchg
mov
jo
aad
aam
ljmp
push
sahf
fisubrs
mov
movsl
orb
movsl
cmp
popa
pop
cltd
test
mov
jns
loopne
in
data16
lods
test
fnsave
gs
mov
movsb
cmpsl
dec
xchg
test
jo
leave
mull
lcall
fisttps
jae
xor
cs
loope
add
inc
stos
and
dec
mov
loope
aas
stos
push
popa
int3
sahf
mov
nop
imull
xor
fisubrl
les
sub
mov
rcr
dec
andb
inc
inc
jb
movsl
sbb
lcall
xor
sub
mov
int
xchg
inc
and
sub
cmc
jns
pop
cmp
pop
mov
cld
jge
mov
cmp
sbb
scas
and
sbb
mov
inc
sub
adc
mov
ffreep
inc
cmp
lea
push
push
push
nop
mov
add
or
push
out
out
add
mov
insb
push
and
pop
gs
cmc
sbb
xchg
add
test
pop
out
into
std
mov
sbb
clc
xor
in
dec
insl
nop
sub
inc
out
inc
jle
mov
enter
mov
dec
in
pop
mov
dec
dec
testb
mov
lds
cmp
add
dec
jl
push
movsb
cs
jle
sub
push
fcoms
dec
sti
pop
and
cli
fincstp
xchg
fldl
sbb
rorl
pop
xor
or
repnz
sub
mov
xor
jecxz
pop
mov
out
loop
inc
scas
pusha
sbb
emms
outsb
fnsave
pop
inc
mov
das
andb
inc
xor
outsb
jb
cwtl
xchg
arpl
aas
rcll
in
outsl
push
push
cmp
inc
inc
bound
outsl
test
push
nop
int3
xlat
dec
dec
scas
sub
mov
push
xchg
xor
cld
test
mov
sbb
jge
movsl
aam
je
or
mov
mov
fisubs
xchg
dec
push
sbb
and
sar
lods
call
sub
test
adc
push
scas
and
andl
out
xchg
fsubl
lret
jecxz
cmp
in
sub
pop
mov
movsl
repnz
mov
lea
xor
stc
jbe
les
cmp
xor
and
mov
jge
jmp
pop
push
sti
jnp
dec
jns
rcrb
sub
popf
mov
scas
push
push
xor
cmp
add
adc
in
std
out
loop
mov
or
mov
ja
lcall
inc
cs
sub
inc
cmp
lds
es
xchg
sbb
popa
sbb
imul
push
and
outsb
push
add
inc
dec
push
cli
mov
sub
out
dec
push
lea
mov
adc
cs
jae
insb
dec
int3
test
dec
sub
push
jg
dec
add
push
mov
adc
rcr
and
or
add
jg
inc
popa
outsb
mov
jns
test
mov
adc
sub
ret
insb
xor
jne
cmp
or
push
pop
dec
ror
std
mov
sbbb
xchg
nop
lods
sbb
inc
scas
adc
dec
sbb
stos
add
fiaddl
adc
jp
xchg
jl
mov
push
push
out
pop
xchg
push
mov
dec
xchg
xchg
scas
add
fcom
test
ds
sub
xchg
and
aam
es
outsb
data16
call
loopne
fsub
fs
or
mov
or
mov
fnsave
mov
sbb
cld
imul
jb
xor
jae
jl
cmp
sbbl
lahf
xchg
xchg
iret
xchg
adc
pusha
dec
call
sub
dec
cmc
clc
dec
bound
stos
inc
sbb
movsl
dec
fwait
pop
mov
addr16
mov
xchg
popa
aas
sbb
sbb
push
inc
stc
jmp
mov
std
stos
push
ret
pop
int
jg
sbb
push
xor
dec
out
mov
mov
adc
fcomip
cwtl
mov
outsl
cmp
push
fucomip
inc
les
inc
and
fs
adc
sbbb
lds
mov
inc
int3
add
jmp
nopl
add
push
imul
ret
mov
fcomip
iret
imul
cmp
das
in
arpl
std
nop
push
or
outsb
in
es
aas
and
xchg
aad
test
pop
ss
xor
in
call
lret
jmp
push
out
sbb
lret
xchg
cmp
int
dec
js
xchg
jno
adc
jmp
mov
or
movl
pop
mov
xchg
add
enter
pop
mov
sub
in
sti
push
xor
outsl
inc
xchg
xor
dec
or
jb
push
std
scas
add
xchg
mov
shlb
xchg
test
dec
test
int
xor
push
pop
aaa
or
sub
out
pushf
loop
cmp
jp
push
push
add
movsb
into
add
mov
fstps
out
cmp
pop
lea
orl
mov
jns
leave
rcll
cld
sarl
dec
daa
mov
jmp
mov
push
jg
sbb
or
arpl
sti
movsb
or
cmpl
sahf
sbb
popa
inc
push
test
sbb
loopne
in
adc
fisubs
inc
xchg
mov
push
pusha
scas
cmp
mov
push
pop
arpl
cltd
add
je
js
repz
and
xchg
push
or
mov
movb
out
ds
xchg
or
sub
dec
in
fsubp
addr16
mov
mov
xor
loop
or
add
push
add
inc
push
jle
out
test
and
xor
mov
loope
dec
jle
sbb
nop
cmp
rcrb
fidivl
lret
sub
add
or
ss
int3
xor
adc
stos
test
cltd
mov
xlat
mov
cmp
mov
lds
outsl
mov
add
xchg
dec
lea
iret
repnz
cmp
std
adc
pop
rcrb
into
push
fisubrs
aad
jl
pop
cmp
pushf
dec
cmpsl
pop
sbb
pop
daa
inc
das
push
rclb
in
jae
arpl
ret
mov
or
cmp
adc
ljmp
shl
jg
fildl
dec
lods
xlat
out
popa
xchg
negl
mov
mov
out
enter
or
or
pushf
es
sbb
pop
pop
add
idiv
push
cmp
add
add
adc
sbb
fwait
xchg
leave
repnz
shl
mov
jb
adc
mov
rorl
repnz
addr16
sub
into
movsl
xor
call
sbb
std
push
xor
daa
lds
fwait
rcr
mov
mov
test
mov
adc
icebp
sahf
inc
sar
sbbl
xchg
test
inc
mov
push
mov
out
fsubs
xchg
shll
and
mov
inc
fists
leave
fwait
fs
ds
jno,pn
popf
sbb
clc
mov
dec
and
or
mov
mov
sbb
ror
fistpl
frstor
and
mov
btr
inc
fdivl
pusha
inc
xchg
xchg
adc
stos
adc
cmp
scas
cmp
clc
cli
insb
xor
mov
push
jb
push
jmp
push
hlt
jbe
cmpsl
loop
out
mov
adc
jmp
dec
mov
enter
xchg
lods
or
pop
lcall
or
in
dec
xor
ret
add
sbb
mov
or
dec
sub
and
mov
add
add
bswap
hlt
test
fists
outsb
xor
pusha
sarl
sub
pop
sarb
scas
cmp
lds
push
test
dec
mov
jns,pt
add
in
les
fs
sbb
xchg
ljmp
adc
jecxz
fs
cli
sbb
add
add
enter
test
jg
out
xchg
mov
dec
dec
les
and
pop
bound
lea
adc
ss
fnstsw
cmpsb
and
mov
push
push
mov
rcr
jno
and
push
popa
lcall
imul
adc
mov
mov
stos
cld
and
ds
cmp
xorl
dec
leave
mov
arpl
and
mov
inc
add
call
cld
mov
rep
mov
mov
hlt
mov
repnz
pop
gs
inc
call
aad
cwtl
mov
xchg
repnz
push
addb
inc
pop
xchg
out
out
dec
test
jl
pushf
pushl
popf
xor
mov
outsl
push
xchg
inc
rolb
lds
push
dec
inc
jb
sub
pop
int3
movsb
mov
repnz
addr16
std
out
lods
movsl
sbb
sahf
into
mov
fldl
cmp
outsl
mov
dec
rorl
fldl2t
push
cld
adc
ljmp
mov
jb
mov
jne
add
xor
inc
out
mov
stos
popf
sub
push
push
and
add
mov
aad
inc
push
inc
shll
or
fcoms
adc
mov
in
rorl
xchg
in
jmp
dec
adc
pop
fucomip
imul
adc
mov
and
mov
jns
in
pop
addl
scas
pop
popa
inc
xchg
fists
inc
inc
loop
mov
dec
inc
push
jae
ljmp
xchg
fadd
insl
aam
mov
pop
mov
sbb
pop
sbbl
and
jo
pop
inc
stc
and
adc
int
call
test
stos
adc
fldl
pop
pop
sahf
repz
out
pop
xchg
xor
jbe
es
or
xchg
cmpsb
pushf
mov
inc
into
dec
sahf
adc
pop
sbb
xchg
inc
outsb
mov
xchg
pop
ljmp
notb
stc
mov
iret
jnp
shll
inc
idivb
push
sbb
or
pop
mov
stos
xor
or
xchg
nop
xor
mov
pushf
xor
aaa
pop
js
push
test
subb
add
stos
cmpsb
xor
fs
ljmp
sbb
pushf
sbb
mov
pop
inc
mov
sbb
pop
dec
les
sbb
rcll
ja
mov
ja
outsb
xor
js
jbe
enter
cmc
leave
jo
in
enter
inc
out
rcll
aas
cli
and
pushf
inc
hlt
lret
mov
lret
pushf
jg
inc
lret
out
push
es
je
incb
lcall
das
icebp
jmp
mov
fmuls
mov
in
mov
outsb
mov
inc
jmp
inc
add
shlb
inc
inc
mov
pop
push
shrl
jbe
fdivl
adc
imul
cmpsb
rorl
inc
popa
hlt
mov
xor
dec
pop
arpl
movsl
jl
enter
loope
pop
mov
loope
mov
dec
xor
in
insb
push
mov
dec
add
aas
out
dec
add
xor
shrb
mov
stos
scas
les
iret
mov
dec
pop
std
adc
mov
sahf
pushf
mov
cmp
mov
inc
imul
leave
dec
xchg
and
mov
sub
stos
sti
push
mov
insl
jl
xor
jmp
xchg
ljmp
ret
fisttpl
jp
add
out
mov
inc
mov
pop
shll
inc
fsts
insl
xchg
or
mov
adc
in
movsl
fdivs
cmp
pop
mov
sbb
insl
mov
and
mov
lea
dec
jo
xor
cmpsl
push
push
mov
stc
adc
push
sub
loope
ds
xchg
iret
and
jae
cmp
popf
and
sbb
in
lret
mov
insb
adcl
push
and
jecxz
call
xor
test
fwait
jg
pusha
movsl
and
iret
insb
xchg
pushf
mov
dec
sub
push
adc
aaa
push
jmp
int3
and
lret
push
inc
lods
pop
aad
pop
push
in
insl
sbb
jne
jecxz
repz
hlt
cmc
xchg
xchg
cmp
sti
inc
or
test
inc
mov
xchg
out
jge
sbb
fisubrs
sbb
xor
mov
adc
icebp
lods
jbe
xor
mov
push
xchg
mov
flds
jo
and
xchg
cmc
addr16
test
out
imul
dec
fsubs
push
aaa
insl
enter
aam
xor
or
sbb
mov
decb
sub
dec
gs
xchg
ljmp
lods
push
ss
imul
inc
int3
testl
ss
int3
int
shr
in
or
fisubl
add
jbe
mov
fidivl
mov
dec
movb
rcrb
xchg
ja
cmp
and
jmp
ret
push
scas
pop
test
imul
dec
xchg
sub
imul
mov
call
push
adc
test
jnp
pop
cld
sub
mov
in
jmp
movsb
jns
int3
lahf
clc
cmc
dec
mov
js
push
int3
std
jecxz
mov
pop
ja
outsl
repz
mov
rorb
std
sub
dec
dec
cmc
dec
ret
cli
add
jnp
sub
xor
addl
movsb
or
add
mov
lock
push
push
in
call
out
mov
add
adc
fnclex
into
andb
jae
jo
mov
cli
pop
add
mov
and
sub
push
outsb
xor
mov
or
mov
jne
pop
icebp
mov
mov
aaa
or
inc
cltd
or
mov
notl
add
dec
imul
push
jns
gs
cmpsb
xor
jno
dec
jne
shll
cld
cltd
test
cmp
addl
xchg
arpl
xor
in
imul
repz
test
repz
ret
jno
mov
cmc
cli
or
xchg
or
push
sbb
sahf
add
mov
mov
pop
out
add
inc
mov
jo
xchg
in
pop
sarb
pop
sbb
adc
ret
mov
sbb
cmpsb
stos
cmp
mov
dec
jecxz
xor
and
jle
popa
leave
movsl
jns
notl
incl
pop
dec
roll
jns
aad
pop
mov
push
adcb
enter
leave
xchg
movsl
push
cmp
loop
push
xchg
fiaddl
pop
mov
xchg
mov
and
lock
ret
push
cmp
sbb
test
cmp
andb
inc
xchg
popa
repnz
jo
push
lods
sbb
leave
or
cmpsb
fsts
push
andb
sub
fsub
out
ss
jp
movsl
mov
bnd
jle
lret
or
mov
popf
fstpt
gs
add
inc
gs
dec
dec
cmp
loope
push
mov
inc
push
sarb
into
jo
xchg
setg
inc
xor
sahf
cltd
out
dec
cmpsb
inc
xchg
push
cmp
cltd
or
hlt
pop
or
scas
inc
xor
inc
int
cmp
mov
aam
les
popa
mov
adc
push
leave
daa
in
cmp
sub
out
sbb
aaa
sub
cltd
das
notl
imulb
int
mov
into
add
and
shrl
pop
mov
outsl
ret
lods
in
fimull
sbb
lock
ret
in
lds
sbb
or
lods
sbb
popf
shll
movl
push
cmpsb
data16
rolb
ja
xchg
ret
stos
cs
inc
xchg
call
push
xchg
mov
cmpsb
inc
adc
dec
xchg
push
jmp
gs
pop
dec
or
test
rcrb
push
and
xlat
or
sar
xchg
jp
mov
push
lret
sbb
ss
jl
xchg
frstor
push
test
cwtl
jl
jmp
lods
movsb
inc
dec
stc
add
lods
xor
sub
loopne
add
cmp
stc
jg
in
sub
mov
mov
loop
sub
add
outsl
push
push
xchg
cwtl
add
ror
pop
cmpsb
pop
mov
push
sub
dec
jg
fs
shrb
push
addr16
push
mov
rorb
shlb
xchg
fadds
push
cmc
cli
sbb
popf
xlat
repz
lahf
push
and
int3
dec
jb
mov
into
rcll
add
jg
jo
fldcw
pop
loop
lahf
dec
sbbl
shlb
imul
cli
add
lahf
cmc
adc
mov
fldcw
lret
int3
outsl
jo
jmp
jns
inc
sub
cmc
jl
mov
std
lret
jg,pn
sub
movsl
adcl
adc
push
clc
inc
jno
mov
and
ret
mov
test
lock
xchg
lods
add
or
cmpb
aad
test
call
dec
popf
mov
ret
bound
outsb
outsb
fidivrs
insb
cld
andb
push
mov
lret
aaa
push
je
test
repnz
or
push
das
pop
je
cmp
fistl
in
push
dec
out
mov
xchg
outsl
cmp
jae
pop
aaa
subl
and
dec
cltd
jmp
mov
jg
out
test
addr16
jne
fwait
cmp
sbb
insl
and
xchg
lea
repz
push
sbb
push
sbb
mov
cli
jo
icebp
lods
jns
movsl
xchg
push
dec
cmc
jns
sub
sbb
rcrb
fidivrs
ljmp
cmp
ret
out
add
adcl
cmp
mov
xchg
add
xchg
int
icebp
pop
inc
jo
xchg
jle
std
test
popa
test
lret
lret
or
cmc
xor
imul
cmp
ja
pushf
cmp
aam
iret
test
jle
pop
pop
cwtl
mov
mov
jle
inc
cmpsb
push
mov
mov
test
mov
mov
leave
push
aam
or
dec
jno
and
push
add
mov
pop
movsb
roll
xchg
les
pusha
xchg
push
jne
enter
xchg
mov
lcall
hlt
pop
sub
pop
cmpsb
and
mov
data16
les
mov
out
mov
movsl
lret
movl
push
jo
mov
stos
push
sahf
pop
sbb
push
sub
fbstp
loopne
mov
jnp
pop
clc
lcall
adc
jle
xchg
loop
xchg
aam
lahf
cli
fwait
jnp
xchg
test
fcompl
pushl
pop
xchg
cld
mov
add
pxor
mov
or
xor
cmp
loop
mov
dec
out
sbb
fiaddl
dec
sti
test
mov
js
in
adc
dec
scas
mov
adc
out
insb
in
sbb
xchg
sbb
jne
pusha
push
test
xor
add
sub
mov
lret
cmpsb
jg
js
shll
add
in
andb
mov
outsl
push
mov
data16
enter
loop
pop
add
sbb
pop
pushl
inc
dec
iret
cs
sbb
dec
push
shld
or
imul
or
ret
test
incb
or
fildl
mov
push
das
push
xrelease
cmpsl
incl
xchg
push
xor
jne
data16
enter
outsb
lahf
pop
out
sub
inc
in
rolb
loopne
sub
adc
jmp
lret
rclb
loope
daa
repnz
xor
push
or
dec
cmp
ss
out
jg
push
ja
data16
jbe
pop
mov
pop
fistps
xchg
jmp
js
mov
popa
ficoml
mov
outsl
inc
push
or
xorl
pushf
mov
push
fisubrs
pop
xchg
sub
mov
mov
xchg
cwtl
leave
rcrl
fidivl
loop
mov
je
hlt
push
cmp
cs
enter
hlt
stos
push
jo
cld
sbb
addr16
mov
sbb
nop
xlat
xchg
adc
mov
gs
pop
lods
and
lods
and
cld
fisubrs
pop
jb
stos
out
arpl
sbb
mov
rcl
in
xlat
call
ret
sbbb
mov
movsl
lds
mov
hlt
mov
lea
or
xor
add
jmp
jne,pt
mov
test
dec
aaa
shlb
and
xchg
js
cltd
mov
shll
inc
inc
out
pop
xchg
push
je
cmp
mov
mov
daa
les
xor
mov
xor
enter
adc
rorb
pop
lcall
ds
push
lods
lds
jno
xchg
adc
push
push
mov
pop
xor
mov
xor
jno
push
push
fs
sub
lret
inc
cli
pop
mull
sbb
push
imul
dec
xor
daa
mov
mov
pop
movb
xorl
push
xchg
push
add
mov
imul
cmpsl
mov
sub
mov
cmp
fisttpll
jo
aaa
adc
test
sbb
sbb
mov
push
orb
ficoms
adc
loopne
iret
call
jle
push
fistl
mov
and
pop
je
inc
popa
dec
sbb
cmp
dec
sbb
and
mov
popl
cmpsl
out
mov
ja
jge
movsl
sub
in
mov
fildll
inc
hlt
dec
stos
add
and
outsl
mov
into
into
add
orb
sbb
and
iret
into
cmp
int3
mov
xor
and
pop
repnz
push
or
out
cli
mov
cmpsl
addr16
inc
mov
and
sahf
bound
cmp
movsb
dec
cmp
sbb
daa
ss
andb
adc
loopne
shlb
jno
sarb
adc
aas
adc
sbb
add
jge
fistpll
mov
out
ljmp
jns
aad
inc
jbe
fldenv
mov
mov
out
rcrb
mov
addb
lahf
not
addr16
sub
lret
inc
repz
mov
xor
jle
mov
sbb
loop
dec
sbb
subl
sti
mov
jno
rcll
lret
outsl
cmp
jnp
and
sbb
jmp
dec
lock
dec
cli
ja
cmp
shr
mov
mov
ljmp
push
nop
jg
pop
das
inc
out
xor
xor
push
daa
push
scas
out
data16
int
mov
pop
inc
aam
pop
repz
mov
push
imul
xchg
push
movsl
scas
in
xchg
lahf
cmp
inc
das
xor
std
rcr
xchg
dec
arpl
cmp
adcb
inc
popf
scas
jge
mov
test
jbe
sub
dec
fadds
ja
jl
jp
ljmp
sub
push
cmp
cmc
lret
pushf
inc
sbb
rolb
mov
or
mov
mov
mov
sti
sbb
idivl
jle
or
daa
mov
push
adc
in
add
or
lret
mov
adc
inc
mov
sbb
mov
popa
mov
in
sti
inc
fs
lods
cmpsl
sub
fwait
sub
mov
in
jno
in
fbstp
cmp
clc
sub
fisubrs
add
lcall
xchg
popa
cld
icebp
movsb
jmp
fsubrp
ret
xchg
push
mov
stos
fadd
cmpsl
and
fcmovnbe
dec
enter
jbe
dec
jno
xor
and
bound
pop
push
xchg
or
pop
cs
mov
adc
rorb
je
push
cmp
xchg
mov
popa
pop
mov
test
lds
js
nop
and
xchg
loope
xor
aam
lret
add
shll
sbb
sub
fs
leave
fnstsw
call
lahf
dec
push
aaa
loopne
mov
inc
sahf
inc
mov
mov
loop
jnp
cwtl
sti
jle
dec
sub
dec
lock
imul
sahf
imul
mov
test
xchg
movsl
scas
mov
adcl
mov
out
mov
fdivl
jno
mov
inc
jg
in
add
add
and
inc
sub
mov
enter
mov
stos
test
pop
orb
bound
lcall
test
arpl
and
daa
insb
imul
jmp
and
mov
aam
popf
mov
inc
das
adc
jmp
xchg
pop
daa
jnp
xor
negl
mov
push
movsl
stos
aad
in
in
mov
mov
add
inc
push
scas
repz
cmpsl
dec
lock
das
xchg
mov
mov
mov
inc
jmp
xchg
inc
cltd
int3
out
push
stc
idiv
std
mov
cwtl
push
arpl
xor
cmp
push
aam
xorl
xor
sahf
out
xor
fisttpl
addb
jo
or
dec
pop
sti
add
sbbb
cmp
mov
pop
jbe
xor
std
push
icebp
jnp
push
push
je
dec
arpl
pusha
mov
xchg
xchg
xchg
dec
out
data16
es
or
jg
popl
adc
pop
mov
jl
int
mov
popa
adc
jbe
lds
mov
mov
in
popf
andb
sub
pop
mov
loopne
imul
sti
test
sbb
pop
adcl
mov
mov
aad
lcall
adc
xchg
pushf
mov
lahf
es
pop
push
add
cmp
push
inc
mov
inc
cmp
frstor
inc
add
pop
sub
push
cwtl
fwait
lcall
sbb
jne
aad
test
das
inc
cmp
outsb
je
inc
imull
adc
inc
pop
push
pusha
dec
pop
adcl
fnstenv
fldenv
mov
fimull
lds
mov
out
inc
int
xchg
cmpsl
push
sub
aam
sub
push
sbb
popa
aad
pop
ja
fnstcw
and
out
outsb
cmpsb
fnstsw
or
sub
pop
daa
repnz
or
adc
jle
add
jae
fs
xchg
stos
xor
repnz
mov
test
mov
sub
or
pop
nop
sbb
cmovno
or
xor
mov
mov
fiaddl
rorb
add
mov
dec
xchg
mov
inc
fwait
push
aas
mov
in
push
or
rcrl
pop
out
popa
outsl
and
hlt
leave
mov
jno
jae
adc
or
popf
pop
adc
int3
and
iret
rcl
and
sbb
outsb
add
inc
xchg
push
cmpb
sub
dec
dec
hlt
insb
leave
subl
mov
jl
xchg
das
scas
add
push
icebp
ja
mov
or
pop
xor
mov
lock
inc
out
je
je
cmpsl
mov
pop
push
dec
mov
test
daa
mov
add
std
call
fstpt
movsbl
push
stos
mov
cmp
pop
fistpll
inc
fisubl
inc
js
mov
add
mov
cmp
cmc
in
movsl
and
mov
or
movsl
test
dec
and
and
rcrb
daa
inc
mov
loopne,pt
cmpsl
divl
sub
jmp
and
mov
cltd
cmp
cwtl
pop
insb
sbb
iret
test
jp
mov
pop
inc
insl
mov
ret
flds
ret
sub
std
mov
cltd
rcrl
cmp
add
inc
inc
outsl
cld
lds
xor
mov
stc
push
rcr
loop
jno
cmp
lahf
gs
cltd
mov
jge
or
scas
and
lret
jmp
mov
adc
sub
sete
adc
and
add
mov
dec
xchg
clc
xor
insl
sub
je
punpckldq
mov
mov
movsb
cmp
out
or
xor
loopne
dec
xlat
xor
aas
mov
mov
jge
js
cmp
out
call
test
dec
jg
xchg
fwait
or
sub
and
jle
sbbb
ds
inc
outsb
inc
dec
xlat
popf
test
fs
loope
cltd
mov
jne
sbb
inc
xchg
push
and
dec
xor
fs
cli
mov
add
xchg
dec
cmp
in
add
mov
sub
cli
ficomps
or
xchg
and
rcl
lcall
mov
mov
xchg
cmpsb
xlat
dec
sbb
movsb
cs
adc
sub
scas
imul
lds
int
dec
enter
mov
rolb
mov
mov
push
jno
pop
push
pop
fidivl
sbbl
mov
lret
shlb
mov
lahf
mov
pop
ljmp
jle
test
dec
push
jno
pop
pop
xchg
mov
int
pop
fst
movsb
mov
xor
mov
sub
aaa
int
stos
enter
icebp
push
cs
loop
lret
jb
push
jg
cmp
mov
insb
mov
fadds
dec
idiv
and
ucomiss
jb
xchg
popa
jne
jl
mov
sbb
outsb
out
aaa
cwtl
sarl
popa
sub
push
testl
lret
lea
ficompl
lret
xlat
dec
mov
add
lds
pop
mov
subb
je
jg
push
add
mov
add
icebp
dec
mov
ror
add
mov
in
mov
mov
std
repnz
aad
push
xchg
sarl
fdivrs
jle
outsb
testl
mov
jns
sub
cmp
sbb
andb
lret
out
dec
sub
fwait
mov
in
inc
enter
inc
xlat
mov
xchg
das
xchg
mov
adc
sub
mov
mov
loop
lods
fs
mov
lods
cmp
adc
jmp
stos
sub
sub
test
fnsave
cmp
in
adc
andb
xchg
shl
ljmp
aas
imul
push
push
jb
mov
in
dec
es
mov
pop
jns
ret
sub
jge
out
sub
ljmp
adc
stos
add
je
aaa
pushf
in
pop
push
jne
jb
adc
test
iret
inc
mov
mov
xor
mov
mov
arpl
cmp
jge
daa
jne
xor
dec
sub
push
cwtl
cltd
cs
push
jmp
loopne
push
hlt
jnp
sub
mov
hlt
cltd
mov
mov
shll
xchg
lods
dec
mov
add
test
ja
imull
cs
mov
pushf
jmp
push
movsb
int3
pop
adc
subb
jbe
mov
sarl
aaa
push
lods
push
pop
xchg
outsb
out
cmpb
pop
pusha
cmp
loopne
call
or
pop
insb
lock
mov
jae
scas
stos
cltd
cmp
into
std
aas
es
sbb
mov
pop
aad
out
push
add
dec
jo
jg
mov
loopne
mov
jb
out
xor
mov
mov
sti
mov
addr16
insl
inc
mov
xlat
dec
push
jb
mov
scas
mov
sub
mov
insb
inc
das
mov
adc
mov
add
addl
adc
xor
push
sbb
mov
dec
pushf
adc
mov
xor
push
or
lods
xorb
movsl
cmc
cmp
and
add
add
push
cld
ss
out
adc
aaa
aad
lret
cli
mov
xchg
inc
in
jp
sub
jp
mov
xor
jge
mov
je
xor
decl
jecxz
jo
adc
mov
stos
sbb
adc
sub
mov
inc
ja
mov
inc
fsubrl
mov
jl
test
jno
lret
mov
push
test
pushf
adc
dec
cmp
xchg
call
gs
dec
daa
cmc
cmp
adc
dec
mov
subb
andl
popa
repz
popf
push
arpl
dec
cwtl
or
shlb
jbe
out
testl
pop
faddl
sbb
mov
test
mov
add
or
push
jne
jecxz
dec
out
lret
jl
data16
adc
out
out
mov
out
xchg
lds
gs
adc
ss
jns
xchg
sahf
out
cld
dec
jnp
inc
cmpsb
mov
lret
jnp
mov
shrl
outsl
les
push
popf
adcl
dec
loope
lock
stc
sahf
lock
sub
mov
pop
in
adc
aas
sbb
test
addr16
or
cmpsb
fmull
mov
scas
mov
imul
std
int
popa
mov
data16
push
push
mov
add
cmpl
sbb
adc
shll
sbb
cmp
mov
mov
add
imul
pop
sub
pop
and
and
pusha
ja
jmp
mov
mov
push
jl
xchg
pop
push
arpl
sub
ficoms
pop
pop
out
in
jmp
shll
push
call
or
push
ljmp
int3
mov
aaa
jne
sarb
pop
nop
fdivrp
mov
xchg
jge
repnz
mov
push
fucomp
rclb
pop
mov
leave
adc
es
jb
lea
int
sub
aas
push
movsb
les
adc
xor
pushf
jb
mov
arpl
dec
je
sub
add
call
repz
inc
or
jnp
pop
or
aad
mov
add
dec
jo
inc
testb
mov
rol
or
pop
rcl
or
pop
xchg
daa
clc
pop
ret
push
pop
fcoms
scas
xor
cs
pop
cmp
pop
add
cmpsl
imul
outsb
ret
jb
pop
in
mov
dec
or
ret
mov
lods
add
loopne
mov
decb
mov
jbe
rorb
adc
aaa
jl
in
push
fstpt
inc
ss
push
jo
xchg
inc
pusha
aas
sub
daa
dec
mov
dec
push
mov
fcomps
mov
inc
xchg
test
inc
add
out
jp
add
mov
lahf
xchg
call
jnp
cmp
pop
pop
add
fists
pop
jecxz
xor
dec
rcll
inc
pop
hlt
stc
pop
or
cmp
mov
mov
xchg
push
ds
cwtl
xor
jmp
outsb
sub
pop
inc
mov
nop
or
dec
xor
insb
cmpsb
out
ret
mov
jecxz
pop
fs
add
add
pop
mov
cwtl
push
rcrl
repz
loopne
hlt
andl
jmp
aam
pop
jmp
bound
sub
in
orl
nop
xchg
xlat
popa
shrb
sarb
jle
ja
jge
mov
aad
mov
ljmp
sbb
mov
mov
sbb
push
imull
cmp
jmp
jae
lahf
xchg
aas
add
cmp
shll
lea
test
divps
xchg
mov
jmp
loop
and
sub
cmp
xor
mov
sbb
pusha
mov
pop
es
jbe
fldcw
repz
dec
js
test
ret
dec
pxor
das
orl
inc
movsb
inc
add
adc
fcoms
mov
or
test
mov
jo
sbb
and
and
ljmp
sbb
xchg
mov
loop
sub
mov
outsl
ja
in
scas
push
inc
rclb
lret
mov
pop
enter
incb
pop
sbb
push
or
sbb
stc
test
cwtl
sub
cmp
out
cmpsb
xlat
mov
dec
or
dec
popa
mov
jecxz
xlat
shll
aas
mov
push
ja
dec
adc
jmp
jbe
fcoml
cmp
sarb
aad
sub
or
jne
add
inc
sbb
xor
test
jl
imul
push
mov
lds
add
scas
ja
mov
xchg
fxch
orl
xchg
or
pusha
jmp
xchg
sub
mov
mov
outsb
nop
mov
xchg
jl
adc
lret
xchg
mov
in
and
lahf
bound
jecxz
insl
cs
cld
adc
add
repnz
sub
enter
js
in
aaa
cmpsb
jo
push
or
imul
xchg
sbb
fsubl
sti
xor
scas
push
pushf
into
imul
adc
je
xor
js
xchg
sahf
cmpsb
inc
pop
ja
pop
lock
cwtl
stos
fcompl
mov
popa
push
loope
addr16
int
and
cmp
jnp
add
jns
and
cmpsb
sub
jmp
dec
jo
dec
leave
and
inc
fdivl
movsb
fbld
push
mov
cltd
sub
lock
shl
sub
inc
mov
out
cmc
scas
inc
xchg
sbb
pop
push
int3
pop
dec
insl
lcall
xor
lods
xor
dec
jnp
xchg
adc
leave
cld
push
scas
xlat
dec
xchg
xor
mov
cltd
xchg
shll
cmp
or
inc
stos
imull
popa
pop
fisubl
add
movsl
dec
cmc
in
jge
aas
cmpl
js
inc
and
repnz
push
dec
jl,pt
mov
fisubs
mov
or
lret
mov
push
lock
int
or
inc
movsl
in
push
shrb
and
add
adc
jae
mov
stc
rcrl
das
cmpl
cld
mov
decb
ss
jno
jns
mov
lcall
repz
cld
xchg
cltd
add
jmp
xor
out
dec
mov
call
leave
scas
shl
push
lods
jbe
aaa
or
sbb
inc
popf
xor
or
add
mov
ficomps
push
push
out
lahf
jle
mov
imulb
test
and
or
jae
adc
inc
cmc
cmpb
movsb
jb
mov
scas
push
mov
shlb
sbb
out
stc
sbb
xor
test
or
xchg
ss
xchg
adc
cli
outsb
inc
mov
mov
das
sub
mov
push
fsub
push
pop
out
in
mov
arpl
xchg
shl
xchg
movsb
std
lods
in
ss
pop
jle
xor
cmpsl
lock
adc
in
movsl
int
mov
dec
jns
js
inc
pop
push
or
mov
xchg
ljmp
cmp
mov
daa
hlt
add
shlb
pop
mov
adc
test
push
sub
mov
xchg
xor
add
ljmp
sti
xchg
adc
pop
fwait
shl
bt
xchg
xor
lock
jo
cmp
xor
and
or
enter
and
lods
xchg
inc
clc
sbb
mov
and
mov
mov
mov
imul
sbb
bound
add
aam
inc
loope
shrl
mov
test
mov
and
cmp
dec
lret
dec
loopne
jae
xchg
inc
mov
pusha
fcompl
mov
cld
mov
movl
je
pop
mov
mov
ret
adc
loop
ficoms
iret
daa
mov
data16
sahf
gs
sbb
xor
jmp
sti
cmp
and
push
adc
mov
mov
pop
and
push
ljmp
add
add
xor
jo
cmp
out
pop
mov
push
dec
jno
daa
sti
nop
mov
ds
or
mov
add
test
stos
pushf
push
jmp
repz
out
inc
out
lcall
pop
jo
cwtl
rorb
ljmp
jnp
jle
xor
add
pop
int
xlat
cmp
mov
xchg
aaa
fld
adc
jo
cmpsb
mov
daa
sahf
xchg
jmp
les
stos
inc
pop
cmp
or
cmp
daa
js
pop
ffree
mov
jbe
push
jecxz
inc
push
ss
or
outsb
xor
pop
xchg
add
mov
xchg
divl
iret
shl
adc
mov
popa
dec
lods
jo
mov
mov
cmp
xchg
cwtl
int
fwait
movsb
sub
repz
pop
testl
add
dec
inc
mov
dec
xchg
jecxz
dec
into
sub
fs
out
mov
mov
jo
mov
mov
adc
xchg
test
lret
push
cmp
pusha
inc
xor
loope
xchg
add
jnp
outsl
jbe
clc
jo
inc
dec
mov
popf
jg
cmp
sub
das
stos
jae
mov
test
cmpb
jno
inc
inc
cmpsb
xor
ds
sbb
test
add
imul
adc
or
outsl
cmp
mov
aas
pop
jae
or
inc
loope
add
data16
mov
andb
divl
mov
xchg
outsl
cs
movsl
je
data16
call
jo
scas
adc
das
mov
adc
and
sbb
gs
mov
push
pop
lea
push
mov
repz
movd
shrb
xor
sub
dec
orb
mov
insb
icebp
iret
iretw
pop
scas
je
and
sbb
push
adc
xchg
push
test
pushl
mov
jo
xchg
das
mov
test
inc
cmp
xchg
sub
movsl
fwait
and
xchg
jno
xor
fs
xor
jp
xor
cltd
cmp
push
inc
mov
mov
jmp
inc
pop
pop
fidivl
pop
push
jp
pop
iret
enter
orb
int3
mov
pushf
or
or
cmp
out
jnp
rol
ficompl
and
jae
add
jle
movsb
out
push
mov
ljmp
pop
add
test
adc
mov
outsl
leave
adc
fimull
test
sub
dec
orl
fimull
jle
in
push
aas
stos
xchg
pop
es
adc
fldcw
push
es
mov
fldl
jl
add
aas
xor
sub
lods
adc
lret
sub
repz
fbld
jp
inc
mov
mov
loop
sahf
ffreep
daa
movb
lock
lahf
in
sti
stos
sahf
in
cmp
add
lahf
adc
repz
std
out
mov
and
mov
inc
xor
jbe
cmc
into
into
cmp
jnp
mov
inc
stos
mov
pop
pop
aaa
popa
xchg
push
sti
mov
int
pop
pop
push
jnp
dec
push
iret
jecxz
add
xchg
out
sub
mov
incl
hlt
out
divl
cltd
in
mov
popf
mov
dec
xor
shr
imul
and
mov
ljmp
cmp
and
das
add
xor
jns
rorl
xchg
and
divb
movb
popf
add
mov
jmp
add
cmp
ret
xchg
cmpb
stos
mov
aam
xor
pop
lods
xor
outsb
jl
push
jg
xor
sub
inc
xor
push
test
and
and
dec
sbb
add
sbb
push
xchg
push
jb
test
out
push
xor
test
pusha
out
sub
xor
movsb
mov
insl
xchg
mov
mov
or
cld
ror
cmp
jnp
xor
nop
mov
pusha
outsl
ret
in
ret
add
insl
aam
cs
adc
adc
push
bound
or
fcomps
in
cmp
into
arpl
sti
sbb
mov
loop
cmp
pop
fwait
xor
cltd
push
mov
xchg
das
xchg
push
mov
xchg
shll
decb
cltd
enter
mov
clc
sub
xchg
adc
jo
addl
repz
adc
test
aaa
mul
inc
sub
pop
mov
cmp
lcall
sub
jl
mov
daa
fs
mov
mov
xor
fists
xor
mov
mov
jbe
mov
insl
push
adc
fistl
xchg
out
lahf
pop
lods
les
sub
out
out
or
xchg
pop
ret
cmpsb
rorl
sub
mov
scas
leave
popa
in
cltd
lds
outsb
std
lds
and
xor
push
pop
push
jne
data16
inc
adc
lcall
sbb
xchg
push
lea
jae
push
stos
adc
in
pop
jne
xchg
fbld
inc
inc
pop
sysret
lods
mov
xchg
mov
mov
pop
in
jge
mov
mov
divb
lcall
incl
xor
sub
sub
sub
loopne
pop
test
test
jae
xor
outsl
ds
test
int3
xchg
fsubrs
xchg
in
or
adc
mov
sbb
or
jmp
jecxz
sti
sahf
mov
ljmp
push
pop
mov
mov
inc
sbb
pop
dec
cwtl
jne
pop
jecxz
fadd
lock
cmpsb
lcall
xor
mov
add
push
pop
dec
mov
add
mov
mov
idiv
and
jl
mov
lods
data16
pop
or
ficompl
jg
and
xchg
adc
xor
mov
lds
and
xor
push
sbb
lret
aad
pop
les
push
rorb
mov
shr
clc
rcll
insb
push
mov
xchg
into
lcall
popa
test
push
dec
jl
int
mov
mov
sub
roll
add
cmpl
sbbb
lods
lret
lret
pop
add
lahf
movsb
mov
mov
mov
iret
into
dec
pop
in
pop
inc
lahf
sub
fiaddl
fiadds
push
lret
nop
in
pop
dec
fisttpll
pop
mov
lods
mov
cmpsl
cli
movsb
rorl
jl
in
fdivrs
push
or
lahf
aad
popa
xlat
dec
pusha
into
inc
sti
or
pop
cmp
dec
call
pushl
cmp
xor
inc
jns
adc
mov
push
cmpsl
mov
sub
scas
cmpb
dec
repz
add
dec
and
test
fiaddl
and
sbb
ja
imul
les
bnd
pusha
xchg
das
inc
xor
inc
rcr
cs
loopne
or
divl
mov
jp
xchg
dec
lock
xchg
sbb
mov
xchg
lcall
jnp
jnp
insl
fisttpll
nop
dec
sub
fidivrs
cmc
dec
imul
filds
sti
mov
adc
and
fstps
pop
mov
js
aas
sub
loope
pop
xchg
test
gs
mov
call
loop
jne
mov
es
dec
shl
add
xor
mov
pop
xchg
or
addr16
lea
adc
jecxz
cmp
test
mov
cmp
jns
pop
pop
out
fidivl
repz
mov
test
fs
or
pop
mov
cmpl
dec
mov
leave
jmp
push
inc
inc
loopne
dec
stc
add
testl
lods
or
mov
test
jge
push
out
or
out
xor
adc
jmp
inc
jmp
sbb
push
adc
xor
daa
movsl
lds
and
loop
add
jecxz
test
out
ja
nop
stos
push
or
pop
addr16
inc
jle
push
loop
cmp
mov
stc
mov
push
dec
xchg
movsl
std
and
xchg
xchg
jle
das
mov
xor
mov
cmp
stc
push
test
lock
or
sub
fisubs
xor
scas
cmp
andb
pop
pushl
mov
popa
jl
jle
xchg
jno
je
mov
cli
mov
stc
jo
dec
in
loope
adc
xor
sub
jp
xor
stc
insl
and
lea
and
add
mov
sub
loopne
pusha
xor
leave
rclb
cmpsl
xchg
mov
xchg
in
mov
dec
xchg
aas
std
cmp
and
jno
sarl
adc
in
arpl
pop
or
xor
jbe
arpl
aas
pop
mov
add
xor
aas
mov
outsb
inc
inc
xchg
sbb
lahf
sub
and
push
mov
repnz
sbb
je
mov
jno
cmp
cmp
or
pop
mov
repz
lods
dec
cmp
je
jbe
daa
mov
xchg
cwtl
or
loopne
pop
sub
cltd
inc
xchg
bound
lret
jecxz,pn
insl
lahf
aad
and
sbb
xor
inc
pop
xchg
lea
push
mov
mov
mov
xor
clc
es
call
sbb
lock
stos
ret
adc
cmc
pop
fs
mov
sub
aad
pop
jbe
mov
cmpsl
xor
adc
les
push
rcll
push
and
inc
pop
arpl
cmp
cltd
test
outsl
cmp
push
out
fcoms
in
cmp
mov
int
lods
addl
das
repnz
dec
outsb
movsl
or
mov
jecxz
cmp
push
loop
sub
jmp
dec
inc
xchg
jae
out
insl
pop
pop
cmp
icebp
negl
add
jo
ret
fstpt
enter
or
jo
out
hlt
movsb
inc
xor
pushf
enter
add
ret
jne
les
leave
adc
push
inc
dec
cmp
aad
pop
dec
mov
popa
push
std
mov
jnp
mov
and
divb
mov
mov
lret
sbb
stos
xlat
cmp
andb
lret
or
lret
js
xorl
mov
dec
mov
lea
cmp
or
out
lret
stos
stos
push
pushl
iret
sub
cmp
and
pop
bound
push
mov
jecxz
lret
popf
clc
xor
das
jl
mov
icebp
insl
shll
ss
lret
push
cld
cmp
cmc
aam
aaa
lock
in
and
sub
jb
bound
out
cmp
fstps
lea
xchg
test
jns
cmp
or
xchg
setbe
ljmp
iret
insb
jmp
rcll
or
js
fmull
fwait
mov
out
sbb
loop
inc
mov
fldl
mov
movsl
mov
push
sub
sbb
into
lea
add
mov
inc
inc
xchg
lcall
int3
xchg
jmp
jg
pop
decb
jns
push
popa
test
aam
mov
and
push
fldt
rclb
pop
push
push
stos
sbb
jno
cmpsl
and
pop
mov
inc
and
cmpsl
nop
mov
fiadds
mov
adc
andl
mov
popa
in
aam
aad
adc
lahf
sub
cld
xor
adc
rcll
mov
aaa
bound
push
sbb
imul
xor
jge
xor
out
fstpt
and
xlat
or
mov
push
sbb
in
cmpsb
lea
outsb
popf
mov
test
xor
sbb
test
add
cmp
mov
lcall
and
lret
fisubl
add
ret
in
loope
cmpsl
or
dec
dec
mov
mov
inc
icebp
jo
jb
pop
int3
mov
ljmp
jge
test
push
pop
mov
push
lods
lods
add
mov
dec
inc
cmp
or
in
xchg
mov
cmp
mov
daa
and
nop
pop
aam
sub
push
pushf
sbb
rcr
mov
add
xchg
or
inc
push
clc
test
push
ja
jae
dec
dec
inc
shlb
fsubs
mov
mov
imul
in
stc
sbb
data16
push
sahf
cmpsl
jnp
loop
mov
cmc
lods
pop
jae
sbb
sbb
cmp
mov
inc
in
lock
mov
xchg
scas
mov
sbb
jne
jl
or
dec
pop
mov
sub
mov
addl
iret
lods
and
or
lods
into
and
pop
std
lds
bound
lock
cmp
int3
xchg
in
call
in
or
les
std
jbe
mov
mull
cmp
cmp
push
into
mov
add
sbb
in
aaa
push
imul
mov
in
daa
sbb
mov
add
xorb
or
adc
stos
addr16
push
arpl
push
push
imul
mov
repnz
int
call
icebp
inc
and
push
mov
and
adc
insb
pushf
out
sbb
push
jmp
hlt
lret
rcrl
mov
roll
cli
jbe
idivb
push
xchg
cmpsb
in
out
insb
sahf
mov
cmpsb
out
lret
push
subb
int
dec
inc
pushl
jmp
xor
and
int3
and
mov
pop
sahf
sub
mov
inc
add
dec
sub
aaa
cmp
jns
xchg
push
dec
frstor
and
aaa
sahf
bound
pop
out
nop
sub
sbbb
ljmp
xchg
push
lock
and
in
mov
aad
cmp
or
mov
adc
xchg
loope
in
and
jmp
in
out
mov
lods
xchg
xchg
sbb
add
in
jb
nop
js
mov
jo
sub
push
test
shll
stos
das
popa
fistl
shlb
jb
mov
adc
or
push
cmc
xor
pop
cmpb
cmp
mov
jmp
aam
mov
xchg
insb
or
mov
and
dec
mov
test
fdivs
orb
jecxz
pop
sub
add
mov
mov
push
add
xor
jae
ss
pop
outsb
jno
fiadds
cmp
out
jnp
or
addr16
std
cmp
or
sub
lahf
adc
push
lods
mov
and
popf
jge
imul
dec
cmpsb
pop
out
jg
sub
xchg
cwtl
jecxz
daa
and
jns
xor
js
mov
dec
lcall
and
jns
mov
mov
pop
jl
push
call
pusha
out
or
das
jmp
pop
je
adc
mov
adc
sahf
sub
adc
pop
int
mov
push
jp
pop
adc
jne
push
movsb
sbb
data16
movsb
and
mov
push
pop
or
cmpsb
int
sahf
xchg
or
into
fadds
jmp
sub
adc
sbb
mov
hlt
out
ret
cmp
inc
or
imul
cmpsb
in
leave
xchg
mov
pop
cmp
push
push
popa
sarb
mov
add
repnz
cmp
inc
pop
insb
test
cld
enter
adc
cmc
dec
cmp
nop
cmp
jae
cmp
sti
pop
aas
sahf
inc
and
adcl
jl
and
jmp
ret
sbb
dec
add
rclb
inc
mov
aad
push
popa
cmp
or
movsb
loop
inc
dec
inc
dec
xor
sub
push
sub
icebp
mov
inc
cmp
xchg
out
cmp
adc
insl
cmpsb
je
addl
xor
dec
das
out
sbb
inc
fbstp
mov
loopne
inc
mov
jo
mov
inc
mov
js
cmpsb
mov
and
sbb
push
pop
jae
xchg
xchg
sub
subl
adc
and
cmpsl
mov
cmp
xlat
jb
ljmp
and
jns
inc
arpl
mov
fmull
xchg
fidivl
jp
sub
lods
mov
pusha
jbe
movsl
add
jae
aad
addr16
fcomps
jno
jbe
inc
adc
xor
dec
adc
addr16
cwtl
lcall
std
repnz
movsb
dec
mov
sahf
test
imul
repz
into
sub
push
in
inc
aaa
arpl
adc
cwtl
into
jge
lods
inc
insb
dec
xor
out
dec
push
lahf
test
mov
adc
out
call
dec
inc
mov
fisubl
dec
in
arpl
mov
xor
cld
pop
test
scas
imul
cmp
repz
xor
add
adc
pop
jno
mov
rclb
out
ljmp
bound
ljmp
iret
pop
mov
test
or
test
test
mov
xor
jmp
repnz
lds
push
push
in
xchg
imul
fistl
inc
sub
in
lahf
mov
addr16
lods
jno
mov
sbb
in
sbb
push
push
xchg
xor
adc
test
and
fistl
in
cwtl
shrb
pop
int
scas
nop
je
addr16
sarl
jp
movb
cs
dec
inc
adc
out
dec
flds
mov
arpl
jg
arpl
imul
popf
enter
out
xor
dec
add
test
iret
xor
push
jge
jp
inc
out
in
movsb
pop
lcall
lods
mov
jge
pop
inc
and
aas
jne
jb
scas
daa
xor
frstor
add
mov
cmp
dec
out
xchg
in
pop
cmp
mov
arpl
insl
cli
andl
cmp
cs
cmpsb
xchg
sbb
jge
nop
fisubrl
lret
mov
push
xor
call
push
ficoml
or
lds
outsl
push
add
inc
dec
sbb
inc
push
repnz
xchg
xlat
pop
adc
fstl
add
setg
xor
leave
or
mov
test
jmp
testl
push
in
jle
mov
mov
pop
ds
shrb
cmp
cmp
xor
pop
xchg
lret
addb
mov
jo
loop
mov
fs
dec
push
negw
or
mov
mov
push
sub
add
add
push
repnz
out
sub
bound
push
adc
xchg
stos
movsl
dec
xchg
inc
jo
mov
dec
por
into
enter
enter
sub
add
cltd
inc
add
aaa
xchg
jl
popf
and
fnsave
arpl
xor
or
jae
cwtl
jg
push
mov
xor
clc
xchg
mov
ljmp
ret
ret
test
cltd
repnz
push
mov
cld
ret
push
sub
sub
call
pushf
mov
leave
pop
pop
out
ficompl
pop
das
cs
pop
ror
lea
iret
pop
loopne,pt
adc
pop
push
mov
inc
cwtl
xchg
lret
out
sbb
jl
xchg
add
out
shrb
cs
and
dec
mov
adc
pop
mov
adc
or
stc
mov
imulb
xor
cmp
test
pop
outsl
cmp
aam
into
dec
or
std
test
add
movsb
bnd
ficomps
jbe
and
repnz
sub
movsb
pop
or
dec
xorl
aas
push
mov
jmp
add
mov
push
and
jbe
cli
inc
sub
xchg
fimuls
es
dec
mov
and
repz
cmp
call
mov
push
jmp
inc
push
mov
insb
test
mov
rcrl
pmullw
push
cwtl
fistps
mov
pushf
out
cmpsb
jl
fcoms
jbe
dec
fisubrl
push
inc
mov
and
fdiv
sub
xchg
sub
mov
mov
jno
bound
add
mov
push
nop
fisttps
imul
lret
jnp
cmpsl
and
out
fcom
in
lret
loopne
popa
xchg
mov
ret
sahf
xorl
fs
add
mov
mov
clc
loope
and
cld
cmp
inc
push
add
fwait
sbb
mov
add
mov
add
sahf
cmp
stos
dec
inc
sub
int3
ret
call
adc
pusha
bound
aad
lahf
cmp
scas
in
loope
cmp
rorl
and
ret
jo
ret
ja
daa
inc
fwait
clc
pop
and
in
ja
add
jns
sbb
pop
or
dec
outsb
mov
jp
jbe
jbe
lds
inc
outsl
mov
sbb
imul
sbb
sub
call
add
les
mov
sbb
xor
lahf
imul
int3
push
adc
aam
push
xchg
inc
mov
mov
pushf
mov
pop
fsqrt
jmp
iret
not
call
mov
jbe
add
mov
fmul
ret
pop
mov
push
jge
jmp
pop
push
sahf
xor
cmp
xchg
dec
xchg
jns
and
xor
adcl
push
and
in
dec
mov
jge
insb
in
inc
jno
push
insb
test
mov
jbe
orl
sbb
fwait
inc
insl
sub
jp
jmp
sub
sub
cmp
jmp
inc
es
inc
daa
sbb
pop
nop
ror
sbb
dec
dec
adc
pop
ja
push
inc
int
push
fwait
insl
jp
or
int3
mov
mov
pop
jmp
aad
mov
inc
xchg
and
ret
sti
enter
ljmp
pop
cmp
sub
push
sahf
and
mov
push
push
stos
das
cli
push
xor
scas
enter
mov
lcall
popa
mov
inc
cmpsl
push
loop
push
jg
pop
inc
xor
cmp
idivb
cmp
in
imul
jae
jge
lods
test
add
daa
fidivrl
imul
je
sbb
inc
push
mov
lret
mov
popa
jmp
inc
cmp
jge
cmp
or
sub
in
dec
jl
pop
sub
sarb
dec
sub
mov
insb
fldt
inc
mov
dec
rorb
xchg
mov
leave
dec
pop
mov
je
scas
inc
mov
daa
mov
test
or
sbb
in
rcrl
push
xor
lahf
push
jg
in
inc
dec
push
icebp
xchg
and
dec
jb
shrb
or
loopne
add
imul
insb
into
push
imul
lock
ficoms
adc
jae
xor
sub
out
cmpsl
push
pop
xchg
rsqrtps
mov
incb
jp
mov
sbb
insb
cmp
insl
push
scas
mov
rol
andw
aas
es
push
push
fbld
lret
rolb
mov
test
and
xor
push
repz
fwait
aaa
fstl
mov
push
cmpsb
cltd
mov
xchg
mov
test
sbb
push
into
sti
addl
mov
jp
int3
add
mov
adc
cmp
pop
outsb
cltd
mov
jae
int
inc
add
xlat
inc
mov
jae
inc
inc
push
loope
std
sub
xor
sti
popa
push
push
fsubr
sub
mov
mov
mov
lret
js
mov
fisubrl
int3
test
ljmp
xlat
fwait
or
fninit
mov
mov
mov
pop
cmpsb
cmp
sahf
push
and
adc
icebp
pushf
pop
ret
jge
ret
sbb
mov
mov
push
add
sbbb
test
leave
lds
mov
push
fnstsw
mov
jecxz
jns
je
mull
push
mov
scas
mov
pusha
adc
lea
push
mov
div
cmp
daa
clc
pop
outsb
mov
lahf
sub
enter
cmpsb
int
fs
sahf
jg
pop
ss
cmc
dec
loopne
dec
mov
or
cld
jnp
popa
dec
xchg
sbb
hlt
adc
add
push
inc
xor
stos
jns
adc
sub
int3
inc
addr16
ja
xlat
and
push
ja
dec
scas
bound
lods
and
xor
imul
pop
mov
xchg
push
xor
test
fucom
subb
xchg
sub
stos
cmp
lcall
inc
je
pop
mov
dec
xor
pop
mov
sbb
ret
aam
mov
push
insb
clc
sar
popl
mov
xor
jg
inc
leave
inc
mov
rcrb
fstpl
pop
sub
insl
jae
sub
ret
pop
sahf
mulb
adc
dec
and
sarb
fwait
ljmp
iret
add
inc
add
outsb
adc
hlt
lcall
adc
shl
mov
inc
roll
pop
sbb
imul
out
pusha
dec
adc
xor
sub
push
inc
sti
clc
in
test
inc
inc
or
mov
sarb
scas
lea
xor
and
jge
xor
xchg
pop
xlat
xchg
movl
push
adc
test
cld
cmp
in
iret
mov
fs
movsb
push
add
sbb
xor
stos
and
mov
inc
xor
push
imul
mov
dec
cwtl
inc
scas
in
push
out
in
cltd
mov
mov
adc
outsl
inc
jp
jne
and
sbb
pop
mul
xchg
das
pop
add
outsl
add
mov
xchg
shlb
shl
and
sahf
sbbl
cmp
pop
cld
adc
rcrl
outsl
sbb
mov
aaa
dec
mov
idivl
int
mov
mov
popl
and
sub
add
mov
mov
xor
push
ret
in
repz
sarb
jbe
cs
in
mov
ja
mov
je
add
lods
ror
jns
outsb
add
sbb
ret
bnd
sub
fisubl
idivl
dec
ja
je
hlt
ja
sub
es
addl
inc
pushf
push
popf
rcrl
dec
push
ljmp
mov
pop
mov
inc
aad
lret
addr16
lds
sbb
test
fnsave
or
inc
je
and
orb
push
iret
leave
dec
mov
es
mulb
mov
add
pop
push
jle
pop
mov
popa
js
in
and
popf
sub
lea
dec
movsl
dec
outsb
ljmp
pop
cmpb
hlt
lcall
dec
dec
mov
xor
shl
sub
je
jg
and
mov
call
cli
push
xorl
mov
sbb
repz
mov
lods
pop
sub
pop
sbb
dec
pushf
in
sbb
pop
push
mov
je
mov
sbbb
adc
inc
or
lret
mov
pusha
cli
inc
sub
mov
push
scas
inc
inc
stos
movl
and
out
ss
dec
sbb
push
and
or
aaa
sti
mov
sbb
jo
add
ss
stos
int
jp
mov
sub
jge
repz
jb
jns
pop
xchg
adc
fs
add
jo
insb
sbb
stos
dec
aad
mov
push
mov
lcall
imul
sbb
dec
imul
dec
std
outsl
bnd
mov
and
mov
outsl
arpl
jo
and
cmc
adc
out
dec
lahf
loop
cmp
std
ret
mov
data16
add
or
inc
and
pop
push
je
dec
lock
rolb
pop
xlat
je
push
mov
sbb
out
stos
or
add
jmp
mov
mov
or
lret
push
dec
mov
push
cmpsb
adc
les
loope
imul
dec
int3
aam
pop
and
push
imul
cs
lock
push
and
adc
aaa
cltd
jno
fbld
out
fs
lds
hlt
sub
outsl
in
sbb
adc
enter
push
sbb
xchg
cmp
rolb
andb
mov
mov
pop
into
sbb
sub
scas
mov
adc
adc
xor
sub
and
movb
cld
clc
xor
es
mov
hlt
lods
push
iret
jns
push
xorl
andl
testl
mov
pop
jmp
cmp
mov
lock
mov
rcl
out
jp
pusha
fs
stc
xor
in
aaa
cmp
push
mov
nop
inc
or
push
pop
sbb
iret
data16
sti
incb
fisubl
xor
mov
ret
add
jge
sbb
jae
repz
xchg
sbb
pop
xlat
mov
fdivl
sbb
mov
sbb
sbb
xchg
ret
fldenv
push
out
adc
sbb
ds
xor
mov
fs
sti
nop
xchg
in
mov
addb
leave
push
imul
push
xor
dec
jp
test
dec
je
mul
out
pushf
aam
mov
js
xor
xchg
cld
jmp
push
rcl
mov
adc
aam
pop
fnstcw
cmc
mov
mov
jb
mov
push
dec
inc
mov
push
add
push
dec
pop
cwtl
add
or
and
push
dec
jb
shl
xor
sbb
xor
dec
cmc
loop
jg
scas
ds
shl
sub
test
ror
fdivr
mov
data16
ret
add
daa
and
mov
dec
jmp
inc
test
lods
mov
pusha
push
mov
lahf
hlt
sbb
les
fs
pusha
add
xor
mov
xchg
xor
jp
arpl
inc
cmc
cltd
sbb
push
dec
pusha
xchg
fwait
mov
scas
cmp
or
addr16
int3
dec
fsubrl
mov
test
and
xlat
sbb
rol
sub
add
jg
push
mov
pop
movsb
ror
sbb
in
mov
lea
dec
jns
bound
jmp
pop
sbb
outsl
sub
adc
pop
cld
inc
dec
cs
pop
adc
push
insl
add
call
mov
adc
mov
xchg
pushw
add
inc
test
or
adc
insb
js
bound
dec
rep
lret
ss
mov
fldl
inc
adc
or
sub
stc
push
imul
push
mov
daa
pop
add
fwait
mov
adc
mov
pop
push
push
xchg
cs
mov
or
push
out
out
push
out
cmpsl
mov
popf
arpl
jae
pop
push
mov
jmp
imul
sbb
jbe
gs
aas
sub
xor
add
or
dec
pushf
add
jle
sahf
lea
xor
dec
push
pop
xor
dec
push
xchg
dec
cld
shll
nop
mov
es
adc
cli
gs
outsl
int
mov
pop
fcomps
movsb
enter
xchg
jnp
aam
inc
push
lret
aad
inc
push
lods
out
int
test
pop
cmp
sub
lds
das
in
jbe,pt
push
loopne
add
aaa
cli
loopne
sahf
mov
scas
je
jno
incl
jns
imul
xor
cwtl
cmp
insb
js
das
pavgw
lret
push
sbb
rcrl
jae,pn
add
adc
jns
cli
dec
xchg
jmp
and
push
dec
fsubrp
pop
imul
jno
aam
fistps
fistl
cmp
pushf
dec
idiv
add
xchg
pop
andb
les
adc
imul
loop
jmp
sbbb
hlt
loope
xchg
in
repnz
pop
out
aas
bound
scas
dec
mov
lods
jecxz
jecxz
jae
lret
pop
mov
inc
mov
iret
cmp
push
dec
xor
imul
sub
push
ror
lods
adc
repnz
cmp
daa
push
outsl
xchg
fnstenv
stos
loopne
cmp
lods
push
icebp
data16
mov
sub
dec
stos
sbb
or
in
clc
inc
in
enter
std
cld
cmpsb
mov
xor
push
mov
mov
mov
jns
cmp
jmp
insl
movsb
pop
pop
pop
jmp
push
mov
mov
pop
mov
cli
pusha
pop
mov
pop
jb
loop
dec
pop
push
and
imul
jbe
xchg
push
shlb
push
scas
cmpsb
loope
sub
cmc
repnz
sar
dec
jge
fbstp
inc
xor
push
mov
fs
adc
pop
mov
cli
loop
mov
mov
popf
mov
mov
pop
ds
mov
scas
xchg
insb
xor
sub
ds
dec
testl
mov
inc
int3
leave
xchg
cli
inc
inc
xor
leave
xchg
negl
ds
mov
fildll
push
nop
movsl
xchg
push
lcall
xor
repnz
push
aas
lahf
mov
inc
ror
sub
mov
lahf
arpl
inc
jp
mov
js
shll
lods
jmp
scas
push
or
enter
rcll
cmp
aaa
cmp
cli
add
xor
pop
arpl
inc
push
movsb
add
das
jge
inc
mov
out
iret
loop
dec
aam
jecxz
ficomps
and
stos
fwait
insb
ret
ja
dec
insb
inc
lahf
lcall
lea
lods
lret
cmp
and
mov
sbb
sub
or
adc
cmp
cld
sub
insl
pop
es
dec
lock
faddp
mov
leave
fnsave
inc
insl
sub
in
ret
add
sub
outsl
mov
scas
adc
push
jg
ljmp
adc
int
mov
adc
sahf
add
rorb
hlt
jl
out
sbb
mov
shl
mov
jmp
cmp
xchg
out
jmp
shl
or
call
adc
xor
repnz
xor
pop
xchg
in
sub
sbb
mov
iret
movsl
ja
xor
mov
inc
ja
fcomp
movsb
sub
sbb
inc
lret
js
gs
pop
sti
mov
fsubrs
roll
hlt
jg
cwtl
sbb
rolb
in
icebp
and
xor
dec
jno
jge
call
add
jno
or
mov
aam
aas
pop
ret
xor
adcl
loope
cmp
lret
cmpsl
mov
pop
mov
loope
cmp
in
jns
pop
mov
sbb
pop
mov
push
pop
cltd
sbb
fwait
out
cmpsl
cmp
mov
test
inc
mov
jge
mov
aam
imul
in
adc
out
mov
add
adc
inc
or
add
in
rcll
call
mov
loop
rcll
pop
pop
xchg
mov
xchg
int
fcoml
lret
jecxz
add
mov
push
xchg
mov
movsl
jae
sbb
mov
testb
das
lea
orl
jb
xchg
mov
imul
ret
xorl
sti
xor
lahf
sbb
sarl
repz
sub
inc
mov
and
aad
lret
in
mov
daa
adc
into
push
imull
and
out
mov
test
pop
jmp
insb
xchg
pusha
pop
xor
pusha
data16
into
mov
jmp
mov
ja
mov
test
pop
xchg
popa
ret
mov
pop
dec
lea
addr16
pop
adc
repz
xchg
fcmovbe
and
paddd
xor
and
mov
adc
aam
mov
mov
insl
sbb
jae
pop
testl
call
lret
add
dec
fwait
arpl
xchg
lock
xor
mov
cmpsb
into
jle
mov
pop
loopne
pop
insb
or
aaa
mov
test
sahf
jge
in
and
fistps
jmp
sbb
out
sarl
out
add
iret
mov
and
adc
inc
sub
into
pop
jbe
in
sahf
inc
xchg
mov
push
ret
pop
jae
out
into
mov
cli
mov
loope
jl
lea
sahf
mov
sub
mov
ds
mov
push
xor
dec
inc
cmp
inc
mov
mov
int
fld1
nop
sti
imul
sbb
loop
mov
iret
int3
out
cmp
mov
inc
add
inc
scas
add
jmp
fldenv
cmp
scas
dec
jmp
pop
mov
sbbl
dec
cmpsb
lods
arpl
and
test
jne
sbb
repnz
adc
dec
sub
scas
pop
pop
cs
inc
flds
pop
pop
jnp
bound
cltd
sub
loope
lret
inc
pop
int
mov
call
dec
fmuls
cmp
or
sub
dec
xchg
arpl
cmc
cld
cwtl
lahf
out
inc
sbb
xchg
mov
push
das
nop
mov
lea
jmp
stos
or
push
test
push
in
mov
ror
mov
daa
or
test
data16
and
out
test
inc
push
je
mov
loop
ss
repnz
mov
test
sbb
stc
and
pusha
shlb
mov
mov
sbb
outsl
mov
and
push
mov
cli
inc
cmpsl
xchg
push
movsl
mov
outsb
push
aas
dec
aas
cltd
mov
aaa
mov
or
cmp
push
mov
push
addl
stc
dec
ret
incl
xlat
jp
cmpl
xor
jb
mov
andps
gs
insb
ret
sub
mov
dec
out
loop
hlt
cs
rol
xor
push
push
or
sahf
pop
cmp
add
jle
in
in
rcrl
cmc
pop
jbe
dec
push
mov
push
stos
addr16
leave
adc
or
mov
shlb
std
mov
inc
cmp
mov
insl
xchg
mov
push
pop
mov
cmp
jge
sub
movsl
paddusw
mov
adc
cmpsl
push
lret
xchg
pop
jbe
lds
loop
out
mov
aaa
test
cmc
lret
mov
xlat
in
xor
push
lret
xchg
xchg
xor
mov
mov
stos
mov
adc
cmp
xor
test
dec
pusha
inc
imul
push
imul
push
ficompl
outsb
push
lcall
jae
sbb
popf
bound
add
mov
arpl
ja
jns
aas
and
sub
leave
lds
pop
and
push
addr16
shll
and
sub
inc
lods
icebp
leave
sub
cld
and
push
add
cltd
lock
inc
shrb
cmp
sbb
adcb
xor
mov
loopne
mov
gs
pop
fadd
scas
hlt
xchg
iret
mov
xchg
fimull
popf
movsb
and
sbb
sti
incb
push
and
jo
leave
jno
iret
dec
sub
mov
scas
fcoms
js
shlb
roll
adc
pusha
mov
pop
adc
imulb
iret
mov
data16
push
aad
jne
or
mov
sarb
vfmaddps
repz
les
jl
daa
popa
sub
and
cmp
fxch
pop
fsubs
idivb
ret
dec
roll
das
mov
mov
fwait
cmp
push
insl
mov
outsl
mov
ret
cmp
jp
lcall
ds
sub
or
mov
push
dec
imul
jg
adc
fsubrl
iret
or
rcll
repz
outsl
ret
fwait
pushl
jp
mov
adc
xlat
xchg
outsb
xchg
jecxz
aas
xchg
fldt
add
pop
out
push
dec
xchg
inc
xor
in
or
jge
push
xor
fsts
xchg
movsl
lret
pop
adc
mov
dec
insl
mov
data16
mov
imulb
shll
mov
enter
jmp
adc
and
xchg
lods
insb
mov
sbb
imul
js
ficoml
add
popf
ds
lds
adc
jb
dec
stos
in
int
fsubl
je
out
out
lret
aaa
mov
jp
out
dec
scas
push
sbb
data16
stos
and
cmp
xor
out
loop
cmp
sub
push
fildll
push
xchg
scas
pushf
mov
push
cmc
xchg
sub
in
fdivrs
call
loope
inc
cmp
lahf
push
sub
fildl
adc
fbstp
adcl
inc
ja
and
addr16
xchg
in
inc
loopne
push
shll
jnp
daa
xchg
jbe
push
dec
or
stc
loopne
inc
or
lock
adc
cmp
es
add
xchg
pusha
or
rol
scas
mov
lods
mov
and
into
shrl
pop
and
lock
addb
mov
cltd
stc
cmp
xchg
je
xor
dec
mov
into
lods
outsb
sbb
pop
push
stos
mov
mov
push
stc
add
popa
int
push
dec
int
dec
add
hlt
les
popa
pop
mov
jl
sub
ret
mov
mov
or
scas
out
rorb
cmc
sti
cmp
clc
cld
lahf
sbb
sub
sti
mov
out
push
mov
cltd
sbb
cmp
nop
jp
xor
and
sub
popa
mov
cs
pusha
xchg
out
xchg
cwtl
mov
mov
mov
daa
mov
xor
lods
jb
inc
and
inc
aam
fnstsw
and
enter
adc
cmp
lahf
mov
push
jns
push
iret
bound
sbb
lods
cltd
lds
aaa
inc
lcall
and
pushf
or
cltd
push
fs
mov
jg
ret
arpl
test
cmp
cwtl
mov
jae
cmp
xchg
jno
es
mov
mov
jp
test
movl
adc
dec
sub
push
jmp
xor
gs
negb
xor
inc
xchg
xchg
in
scas
and
and
icebp
sub
push
dec
jp
add
jg
out
popa
and
ja
stc
outsl
rorl
cmp
je
push
sbb
out
and
js
push
out
mov
stos
mov
dec
inc
fldenv
and
mov
pop
push
xchg
or
inc
sub
jb
into
adc
shlb
lahf
aad
mov
test
test
aad
filds
jb
dec
jo
pop
movsl
jmp
fmul
inc
test
mov
push
lret
sbb
add
int
mov
cmp
sbb
xchg
repz
ffreep
or
adc
or
clc
xor
lds
pop
mov
dec
push
xor
jne
movsl
fs
lock
sarb
push
pop
frstor
push
sbbb
adc
inc
cltd
xchg
dec
movsl
pop
adc
add
imul
add
or
mov
fistpl
jmp
inc
mov
mov
pusha
cmc
adc
jecxz
or
frstor
mov
sbb
xchg
pop
add
xchg
dec
clc
mov
sbb
aas
dec
or
lds
insb
xor
ds
sub
adc
pushf
js
fsts
ss
jbe
push
jp
adc
cld
xor
push
pop
shrl
cld
bswap
loopne
ljmp
inc
xor
or
pop
stos
ds
or
mov
into
jbe
out
aam
shld
ret
in
mov
aas
ja
frstor
fcmovb
pop
fidivrl
jp
shl
mov
or
or
arpl
xorb
push
mov
dec
divl
cmpsl
or
sub
js
xor
out
sbb
das
inc
out
movsl
mov
mov
filds
sbb
insb
dec
push
jge
mov
sub
cmpsl
in
roll
shlb
hlt
mov
lds
popa
jmp
xchg
je
fimull
xor
cmp
fwait
dec
add
inc
lods
sub
or
inc
lret
mov
cmp
sub
out
sbb
push
xor
out
push
lods
cltd
ret
add
pop
gs
sub
xor
test
pusha
jbe
decb
mov
mov
adc
xor
pop
ja
mov
pop
fildl
lods
push
xor
cmp
inc
std
push
mov
or
mov
outsl
into
pushf
out
ret
mov
xchg
out
jns
pop
out
push
sahf
lods
iret
int3
in
fidivrl
xor
shlb
mov
fiadds
pusha
out
pushf
xor
adc
xor
xorb
lcall
insb
cmpsl
push
scas
pop
ljmp
jl
dec
into
fidivrl
aad
mov
pop
int3
inc
cmp
in
mov
call
or
push
push
pop
push
fdivs
push
jecxz
imul
adc
and
mov
or
xchg
sbb
imul
cmp
push
and
clc
inc
adc
scas
movsb
and
ret
cld
test
shrl
iret
data16
push
lds
sarb
mov
bound
add
aad
je
lret
cmp
jecxz
rclb
cli
les
xlat
addl
in
mov
mov
arpl
mov
ja
outsb
inc
pop
adc
mov
mov
adc
push
subb
xchg
mov
xchg
or
out
test
xlat
mov
sahf
fdiv
jle
ficoml
add
mov
sub
pop
rcrb
mov
jecxz
sub
in
stos
adc
add
or
push
dec
pop
mov
scas
adc
inc
add
sbb
sub
jp
or
xlat
movd
mov
mov
xchg
out
andl
pop
xchg
jge
dec
repz
fisubrl
loopne
shrb
rorl
adc
push
rolb
xor
call
jbe
ja
out
lret
lock
fxam
nop
adc
cmpsl
paddd
ror
pusha
cltd
sbb
xor
mov
push
push
test
xchg
ret
jge
and
dec
lcall
imul
arpl
jecxz
aaa
sub
scas
ljmp
xchg
scas
dec
push
add
mov
mov
push
cltd
pop
subb
dec
add
jae
ret
sbb
cmpsl
mov
lods
mov
cmc
imul
jecxz
cmp
add
loope
adc
or
jne
sub
pop
pop
loope
out
cmp
rol
inc
dec
jmp
pop
xor
lds
scas
mov
cmp
lret
movsl
ror
loop
xlat
aaa
hlt
mov
push
xchg
or
dec
xlat
sbb
incl
fs
rcrl
push
mov
mov
sub
test
add
clc
out
faddl
inc
lcall
sarl
adc
mulb
lock
call
pop
jb
daa
jnp
jb
and
lods
sar
and
mov
stos
roll
pop
push
jns
pop
jo
mov
roll
mov
and
xor
push
ljmp
add
and
mov
or
sarl
jb
sbb
xor
sub
cmp
jg
xor
push
testb
ds
pop
cmp
fsubrl
jae
je
cltd
repnz
inc
jg
inc
sbb
stos
mov
loop
pop
push
cs
shrl
mov
scas
mov
pushf
int3
icebp
mov
or
clc
jg
add
dec
push
mov
mov
call
pop
and
xchg
sbb
pop
dec
jecxz
imul
inc
cwtl
lds
lea
bound
test
or
fsubl
mov
mov
in
inc
mov
rolb
int
adc
jb
std
mov
sarb
cmp
mov
sbb
std
fwait
lea
out
lds
xor
icebp
lahf
je
lret
sti
xchg
mov
jl
lds
aaa
and
add
into
adc
xchg
or
jmp
xor
nop
loop
gs
fdivs
or
enter
inc
ret
pop
repz
pop
cli
ss
or
jae
out
xchg
lcall
sbb
loope
xchg
xchg
or
xrelease
inc
push
shl
ja
cmc
adc
je
fcmovb
mov
mov
xchg
jns
repz
or
inc
add
incb
arpl
xchg
mov
mov
lret
movsb
rcrb
mov
add
push
mov
and
orb
jge
test
cmp
aad
push
in
cmpsb
xchg
popa
addl
lcall
lea
sbb
xchg
pop
aad
es
lret
dec
push
cmp
sbb
jns
mov
xchg
aam
sub
outsl
cmp
push
jns
pop
pop
scas
or
loope
jmp
imul
jg
mov
push
sub
lods
and
add
imulb
or
insl
in
loope
repz
sahf
xor
js
dec
push
pop
sbb
pop
adc
mov
cmp
xor
dec
fildl
arpl
cmp
les
push
or
dec
int3
mov
mov
enter
pop
xchg
jle
mov
adc
and
mov
out
push
loop
xchg
nop
outsb
add
nop
sub
sbb
mov
repz
cli
pop
xor
ret
sub
pop
int3
mov
hlt
movsb
js
mov
jbe
adc
xor
call
mov
xchg
pop
iret
adcb
in
or
and
jmp
dec
adc
pop
or
orb
xchg
cmc
xor
repnz
dec
outsl
sub
sti
pop
and
mov
enter
pop
fsub
lret
iret
mov
out
sub
mov
ss
lcall
insl
lret
daa
mov
jge
pop
lcall
push
out
mov
pop
sahf
cli
xchg
call
inc
mov
sbb
push
add
ret
loop
cwtl
cmpsl
popa
cltd
int
in
bound
fs
jb
xchg
xor
jne
add
pop
rcrl
movsb
das
imul
xchg
cmc
fistl
cmp
push
mov
sar
mov
cmpsl
or
sub
mov
mov
add
mov
nop
les
lahf
arpl
jl
stos
into
cwtl
lea
shrb
and
adc
icebp
jae
adc
cmpb
push
das
dec
adc
daa
pushf
mov
and
add
add
das
repz
gs
in
adc
pop
sbb
fldcw
movsl
inc
sarl
mov
push
cmp
nop
imul
ds
loope
push
out
roll
pop
test
sbb
xchg
mov
mov
setg
dec
jp
es
fsubrl
adc
sarl
gs
popa
mov
xlat
incl
fdiv
xor
gs
mov
mov
imul
insb
cmp
pop
and
dec
lods
fwait
push
add
popf
daa
push
out
inc
jge
sub
push
cmc
repz
inc
psrad
cmp
stos
xchg
lds
out
lret
sub
je
pusha
test
jmp
mov
data16
fs
push
or
cmp
rcr
adc
mov
pop
xlat
jge
mov
out
clc
jle,pn
push
dec
ficomps
das
popa
cmpsl
pop
ss
loop
enter
into
sbb
cmpb
add
enter
insb
inc
push
mov
fdivl
js
sub
mov
or
clc
and
lods
mov
dec
or
jle
cli
popa
jmp
pop
out
shll
cli
mov
aad
cltd
inc
pushf
cmpsl
in
std
bound
out
dec
pusha
or
jmp
dec
inc
add
leave
cmp
lds
aad
xchg
jmp
icebp
cmpsl
in
jl
jne
test
pop
and
adc
cmpsl
insl
or
xchg
ljmp
sub
mov
filds
add
add
dec
mov
out
and
mov
push
sub
popa
into
fnstsw
shll
movsb
sti
add
outsb
lock
mov
and
scas
in
arpl
int
xchg
orl
jl
in
xchg
inc
jecxz
loop
icebp
push
js
scas
in
scas
insl
leave
xchg
js
dec
fimull
stos
dec
xchg
fld
sub
test
add
movsl
xchg
add
inc
sbb
jmp
lcall
mov
ret
pop
dec
ret
mov
paddd
jecxz
call
mov
mov
sub
cltd
aad
fwait
and
shrb
inc
stos
stos
jg
jns
lret
jbe
jnp
lea
fimull
adc
and
les
xchg
subl
pop
clc
adc
fcompl
mov
jge
cmp
rcrl
repz
fdivr
mov
loop
mov
cmpl
notl
cmp
dec
scas
mov
xor
gs
dec
ja
xchg
jbe
adc
xor
add
mov
jp
out
sbb
loop
mov
mov
pop
mov
mov
sbb
xchg
add
push
push
push
fs
jbe
insb
int3
mov
inc
inc
repnz
cmpsl
or
push
mov
cmpsb
or
sub
movsl
sub
mov
xor
mov
and
and
fwait
repz
fwait
lock
cmp
out
mov
inc
fsubrs
repz
push
and
pop
shr
cli
cmp
repnz
lcall
call
cmpsl
enter
inc
jg
push
mov
add
in
and
fisubl
cmp
or
adc
push
push
dec
jnp
sahf
lock
fucomi
nop
imul
sub
mov
cmp
xchg
enter
jae
mov
cli
int3
push
js
xchg
into
push
stc
fcoml
dec
lcall
jns
rolb
pop
xor
mov
ds
addr16
adc
addl
xlat
push
cmpsl
roll
sbb
xchg
dec
aad
xchg
lods
aaa
xchg
and
sti
mov
mov
cmp
test
cmp
pop
xor
sarl
mov
mov
sub
cli
dec
mov
leave
pop
mov
cli
mov
loopne
or
popa
test
fldl
jno
xchg
mov
out
imul
outsl
xor
lcall
mov
push
pop
shrb
inc
push
fistl
cmp
rcrb
mov
or
mov
ss
adc
jmp
iret
cmpsl
cld
cmp
loop
xor
sbb
mov
mov
clc
or
insl
dec
lret
shll
inc
lcall
aaa
xchg
dec
dec
push
pop
cmp
mov
adc
ds
jge
iret
push
mull
notl
test
ret
jecxz
mov
push
sbb
sub
or
xor
adc
mov
pusha
addr16
mov
loopne
adc
repnz
mov
fiadds
pop
xchg
dec
sub
daa
pushf
pop
mov
pop
movlps
lods
in
pop
mov
jl
sbbl
dec
jo
sub
sbbl
and
xchg
push
lock
or
push
bound
cld
mov
mov
pop
xchg
inc
xchg
jl
ret
sbb
xor
pop
std
mov
sub
ret
stc
daa
and
mov
dec
mov
adc
sbb
lahf
hlt
enter
dec
cmpsl
mov
xchg
rcrl
mov
jne
adc
cmp
aas
pop
fcompl
pop
test
cli
fstl
xchg
daa
scas
dec
cmp
xchg
sbb
xor
cmp
pop
sbb
jo
loopne
or
and
cwtl
xor
pop
fisubs
pushf
xchg
mov
sub
mov
les
jb
imul
dec
push
inc
pop
sbb
mov
cwtl
ss
mov
sar
xor
lcall
or
dec
sub
aas
ja
jne
ljmp
mov
mov
iret
mov
les
xorb
mov
sbb
pop
add
aam
jnp
mov
int3
idivb
fs
popf
dec
cmpsl
test
lds
jecxz
push
dec
mov
andb
ds
leave
sbb
jp
mov
cli
in
lock
adc
and
lods
bound
daa
add
out
mov
cltd
int3
ficoml
or
orb
sub
inc
aam
inc
ret
daa
imul
and
pop
xchg
sti
or
cmp
mov
jbe
inc
pop
pusha
shll
inc
test
addr16
into
inc
ds
scas
jno
xor
inc
adc
dec
mov
dec
call
jbe
testl
inc
jmp
and
dec
push
loop
pop
int
aam
mov
fwait
or
in
or
iret
pushf
fst
sub
adc
popa
push
imul
xor
mov
test
sub
lea
sub
jecxz
sub
pop
xchg
lret
or
push
add
pop
nop
adc
lret
fidivrs
and
push
adc
xor
cld
cmp
je
sbb
adc
nop
sbb
sub
or
adc
nop
test
out
roll
iret
bound
repnz
adc
outsb
jle
cmc
rorb
inc
sub
stos
push
jnp
ja
dec
cwtl
fildl
push
sub
cwtl
int
push
sbb
add
leave
hlt
and
cmp
jns
or
jge
inc
jp
into
cmp
idivb
jae
mov
lea
stc
xchg
fstps
pop
pop
out
push
xchg
xor
mov
lret
cmp
dec
dec
jne
adc
adc
ss
iret
dec
pushf
pop
pop
dec
mov
sbb
mov
xchg
ss
daa
mov
ficompl
jne
in
imul
fnstsw
jl
roll
repz
fcmovb
cld
mov
jmp
dec
lret
dec
aaa
dec
adcl
cmpsl
mov
mov
xor
dec
dec
push
fwait
mov
mov
push
dec
or
mov
movsl
ret
jge
adc
jg
and
xchg
ret
and
mov
insl
mov
dec
cmp
xchg
lock
lock
fcom
xor
mov
in
push
or
data16
out
jl
sbb
xor
xor
sti
xor
xchg
mov
lock
mov
nop
adc
sub
xchg
mov
f2xm1
and
test
iret
fwait
push
insl
sub
lahf
fisttpll
dec
imul
xchg
je
adc
adc
out
lahf
das
fisubs
inc
divps
imul
aad
sbb
fistl
out
out
jb
enter
addl
adc
lahf
jle
sub
mov
add
or
xchg
adc
call
lds
fstpt
fistpl
ja
idivb
mov
int
mov
mov
lret
pop
inc
inc
out
mov
cmpl
pop
or
adc
mov
xlat
aam
push
in
inc
adc
ja
jnp
jbe
jmp
cltd
outsl
push
cmp
lahf
fwait
popa
lcall
dec
insl
mov
fildll
sub
in
mov
push
shl
mov
ja
add
pop
dec
es
stos
mov
jb
out
sub
ss
and
xchg
adc
cmc
sbb
sbb
aaa
lods
sti
adcb
sub
std
leave
mov
outsb
sbb
xchg
mov
aad
xchg
in
push
cmpsl
push
mov
mov
imul
mov
test
xchg
outsb
int3
dec
repz
repnz
lock
bound
cmpsb
rclb
stos
mov
jp
dec
xor
add
out
push
imul
out
add
or
and
rcrb
mov
inc
cmc
mov
std
mov
int3
pusha
movlhps
js
and
in
ret
xchg
push
dec
popa
push
xchg
dec
mov
cmc
dec
mov
mov
mov
stos
subl
lds
inc
pusha
dec
stc
sub
mov
adc
add
sbb
pop
orl
sub
cmp
jmp
inc
test
imulb
mov
mov
mov
xchg
lcall
lret
push
and
sbb
dec
push
mov
shl
outsb
rcrl
mov
mov
mov
mov
das
rcrb
fwait
xchg
lods
std
mov
jecxz
fidivrl
lds
lahf
mov
rol
je
cmp
sub
xor
fisttps
and
leave
stc
pop
sahf
pop
jmp
dec
test
shlb
mov
das
cld
ljmp
mov
mov
xor
lock
cmp
div
iret
shrb
imul
ss
push
adc
push
in
and
rorb
js
push
mov
imul
xchg
lods
jg
cmp
in
pop
out
insb
sub
pop
sub
test
ret
test
decb
sub
or
mov
movsl
or
push
bound
inc
or
sbb
or
mov
fidivrl
mov
fidivl
lods
jecxz
das
push
data16
outsb
cmp
fdivs
sbb
mov
jge
pop
subl
pusha
lods
and
sub
mov
pop
mov
push
movsb
enter
js
cltd
mov
sbb
mov
push
push
hlt
and
iret
jae
fs
fildl
dec
ljmp
inc
pop
and
leave
xor
and
xor
js
xchg
shrl
repnz
cmp
pop
jp,pn
mov
jmp
xchg
loope
sbb
decb
out
jl
cmp
push
xor
movsb
mov
cli
mov
jns
push
cmp
jmp
jmp
adc
and
shlb
imul
xlat
mov
add
xlat
cmp
in
jl
fbld
int
lcall
and
cmp
cmp
lret
xor
insb
ss
push
jecxz
mov
lea
inc
mov
fwait
push
jb
cmpsb
ret
les
adc
or
adc
or
cmp
pop
dec
lea
mov
cltd
jo
cmpsl
dec
out
fdivl
jmp
lea
push
sbb
dec
ja
jae
aas
fidivrs
push
and
jp
jne
sbb
enter
test
sbb
scas
jne
push
push
subl
loope
dec
sbb
stc
mov
mov
adc
pop
xchg
dec
jp
xchg
and
xlat
cmpsl
aas
adc
mov
shll
js
push
in
cmp
movsl
int
nop
stos
test
cmp
push
sbb
or
rclb
imull
fldcw
int3
jp
jp
out
jge
outsb
rclb
mov
lock
stos
loopne
mov
int
and
cmpsl
mov
popa
cmp
hlt
aad
mov
in
push
pop
adc
push
call
insl
push
inc
mul
movsl
pop
pop
cld
fnstenv
mov
ja
int
fcomp
mov
push
aam
sbb
adc
xor
shr
push
and
out
inc
jae
pop
es
cmp
rcl
out
dec
xchg
and
je
xor
addr16
cmc
aas
and
andl
add
addr16
mov
popa
mov
dec
and
jge
adc
icebp
pop
jne,pt
push
rcll
fnsave
push
cld
test
cmp
filds
mov
outsb
pop
stos
out
pushf
stos
mov
push
sbb
inc
or
dec
sbbb
xchg
adc
pop
rorl
idivb
in
popf
and
mov
lret
push
mov
jle
cmp
lds
lock
cmp
hlt
push
push
push
mov
ret
mov
imul
inc
dec
stc
leave
xlat
push
jbe
lock
pop
out
ficompl
or
jb
push
push
lods
jp
mov
lcall
push
scas
popa
fdivr
inc
xchg
jle
xor
loopne
jb
pop
ljmp
xchg
jg
js
sub
fwait
aas
in
imul
mov
sub
ret
or
sbb
dec
inc
jnp
push
stc
popa
shlb
sub
push
stc
cmp
jle,pt
or
movsl
dec
xchg
jge
inc
out
jle
dec
dec
orl
test
int3
bound
dec
mov
add
and
aad
sub
jae
out
cmpsb
mov
dec
dec
outsb
mov
pop
ljmp
push
fldt
mov
testb
mov
xchg
das
scas
xchg
dec
sub
xchg
inc
lods
jo
adc
loop
repz
in
std
adc
imulb
out
shl
xchg
cs
push
and
int3
cltd
in
jg
xor
cmc
cmpsl
xchg
fs
cmpsb
or
pop
outsl
xchg
mov
aas
mov
loope
bound
inc
sub
shrb
insb
sbb
lods
cmp
rorl
ficompl
adc
aas
mov
sub
cmpsb
loop
jne
xchg
stos
call
mov
lret
sbb
or
inc
repz
nop
dec
dec
dec
mov
sub
mov
js
mov
fimull
adc
mov
in
out
mov
xor
stc
mov
and
popf
dec
insl
das
add
scas
mov
xchg
xchg
flds
and
inc
mov
call
sti
inc
pop
leave
ds
adc
das
mov
jge
xor
pop
fcmovu
adc
mov
mov
mov
lahf
dec
pushf
in
adc
insb
pop
or
and
sti
mov
xor
lods
lds
or
mul
and
fucomi
xchg
popf
rcll
push
xor
mov
or
icebp
push
ss
cmp
fildl
jb
test
repnz
daa
add
gs
sbb
pop
jecxz
enter
repz
repnz
fs
push
xor
fs
jge
jb
xor
fwait
js
inc
sbb
sahf
xchg
aad
jo
push
adc
std
mov
shl
int3
fisubrs
mov
xchg
add
xor
xor
xchg
stc
call
inc
jp
push
mov
jl
scas
ss
lret
jecxz
xorl
int3
sbb
div
jns
fwait
loop
scas
test
ljmp
je
push
lods
pop
mov
fldcw
or
mov
cwtl
andl
icebp
and
mov
fwait
inc
iret
cmpsl
movsb
and
sub
xchg
and
clc
dec
add
data16
nop
movsl
sub
inc
xchg
mov
cmpsl
push
aas
add
dec
inc
aam
push
pop
fistps
movsl
aas
lea
clc
negb
mov
xor
jae
dec
out
arpl
xchg
les
jg
cld
mov
pop
cmpsl
mov
addl
xor
jo
sbb
shlb
cmp
les
xor
sbb
stos
inc
or
dec
test
or
test
pop
and
cmp
leave
inc
add
lock
jne
imul
lahf
shrb
inc
icebp
lret
pop
stos
test
std
cmp
push
pop
sbb
sbbl
shrb
jmp
out
in
push
adc
das
int
enter
outsb
idiv
pushf
mov
xchg
cmp
add
sub
out
pcmpeqw
xchg
xor
lock
add
enter
pop
jle
js
jb
jns
mov
das
insl
cmp
xor
add
mov
jl
lret
lock
push
and
std
push
flds
enter
mov
into
pop
es
dec
and
out
aaa
cli
mov
push
jg
push
add
push
adc
cmp
imul
mov
pop
mov
in
xor
pop
inc
shrl
adc
std
sbb
lret
pop
mov
js
imul
adc
jecxz
mov
mov
mov
mov
test
sub
sub
inc
sti
hlt
sbb
cltd
sbb
fs
or
cltd
dec
test
daa
lock
xchg
enter
test
fmul
mov
push
sbb
std
fwait
pop
ja
out
adc
mov
int
add
iret
inc
aad
es
pop
xchg
push
and
ret
scas
push
push
and
lahf
mov
pop
in
cwtl
aad
mov
aaa
sbb
and
into
fst
imull
fstps
xor
dec
mov
cltd
jbe
xor
sbb
mov
hlt
nop
pop
andl
adc
xchg
mov
test
mov
add
in
sub
data16
mov
fdivl
addb
adc
xchg
mov
ficomps
out
shr
orb
jle
mov
mov
cmp
pop
sub
push
pop
repz
mov
mov
stos
and
add
xchg
dec
dec
jo
outsl
and
lods
add
sub
shlb
push
mov
push
xchg
cmp
adc
notb
or
dec
cmpsb
push
addr16
mov
add
xor
jecxz
test
cmp
sub
dec
aad
les
sbb
shr
nop
pop
enter
or
mov
icebp
or
jne
sbb
loop
into
hlt
cmpsb
subb
pusha
stos
iret
mov
adc
call
lock
inc
jns
mov
bound
test
adc
add
mov
sbb
inc
cmpsl
std
loopne
hlt
and
enter
cltd
ja
das
pop
xchg
push
push
lods
dec
sub
xor
std
add
sti
shrb
test
subl
lea
mov
enter
lods
inc
lods
es
leave
daa
icebp
cld
sbb
push
lcall
aam
arpl
outsb
inc
movsb
test
sbb
sub
pop
jecxz
adc
jmp
pop
cmc
fsub
sbb
inc
fisttpl
mov
lds
mov
mov
xchg
jmp
or
inc
inc
mov
inc
out
xchg
mov
shl
xchg
xor
in
aad
lea
push
rcl
cld
jg
push
fldcw
push
xchg
in
je
negb
cmc
adc
ret
ljmp
lds
dec
dec
sub
or
in
jne
fcoms
xchg
ljmp
test
std
push
lahf
sub
adcl
dec
mov
xchg
pop
xchg
sub
push
mov
mov
pop
arpl
pop
movsb
ljmp
repz
push
data16
mov
mov
mov
lret
es
rcrl
jb
das
in
addr16
and
xchg
mov
ds
inc
lods
aaa
xor
sub
clc
push
lods
or
lds
lds
adc
out
sti
mov
sub
dec
aas
xchg
outsl
lret
arpl
test
xor
icebp
in
cmp
sub
mov
xor
xor
lods
sahf
xchg
add
dec
adc
xlat
push
xorb
repnz
aad
sbb
pop
loopew
aas
xor
inc
mov
inc
scas
repnz
sbb
rclb
loop
mov
enter
push
or
lret
push
je
dec
inc
loop
popl
aas
sub
mov
lcall
popf
jae
pop
cmp
mov
mov
push
mov
adc
sbb
notl
pop
pop
cmp
mov
adc
xchg
dec
cmpsb
and
cmp
sbb
xchg
jnp
mov
cli
repnz
dec
gs
dec
sbb
mov
xor
xchg
jmp
enter
shrb
sub
xchg
nop
mov
add
int
sbb
cmpl
cltd
pushf
sub
and
xor
sub
add
rcr
add
adc
jo
ljmpw
mov
or
mov
rorb
push
in
outsb
nop
cmp
fiadds
mov
popf
adc
movsl
js
pop
test
jg
loopne
shl
or
cmp
mov
lcall
adc
fcmovnbe
sbb
fsubr
fcomps
in
rorl
mov
sub
mov
xchg
mov
adc
inc
jns
sbb
push
rol
xor
movntq
out
adc
sub
sbb
cltd
fdivl
add
cld
test
and
inc
sub
adc
int3
jl
addl
inc
scas
stos
mov
fnstsw
rorl
sub
test
xchg
and
cmp
add
sbb
shl
shl
mov
adc
mov
pop
and
and
pop
xor
xchg
or
push
pop
repz
repz
dec
lock
dec
mov
sub
das
push
sub
jbe
mov
ret
inc
dec
out
cld
pop
sbb
mov
dec
mov
shlb
xor
cmp
jmp
add
push
jmp
movsb
fistl
jb
adc
push
or
inc
jne
jle
jb
rcr
das
cmp
daa
test
jb
jbe
shll
sub
adc
les
dec
cwtl
or
and
dec
lods
cmp
dec
movsl
adcl
std
int3
sub
stos
add
xchg
lea
outsl
add
aam
dec
add
jge
push
jmp
mov
in
lahf
push
push
sub
dec
stc
jb
xlat
mov
mov
pop
call
xchg
pop
xor
or
shrl
push
pop
jp
mov
imul
pop
fstpl
popf
fwait
sub
ret
sahf
mov
add
fwait
sub
jp
sbb
mov
loop
enter
adc
adc
sbb
js
mov
dec
call
nop
gs
test
int
dec
and
inc
stc
addr16
loopw
outsb
bound
aam
in
int
fwait
xchg
loopne
lahf
rorb
mov
cmp
mov
pop
xor
xor
adc
jl
fmull
shrl
loopne
pop
and
mov
and
in
xchg
jo
jae
in
nop
xor
xlat
fdivrl
neg
jge
das
or
cmpsl
adc
sbb
inc
stos
xchg
shrb
and
mov
imul
sbbl
rcll
sub
bound
mov
nop
mov
xor
movsl
add
jns
mov
mov
and
scas
sub
in
out
cmpsb
xlat
xor
cwtl
cmp
pop
mov
divb
sub
inc
jbe
jp
and
mov
push
or
or
loopne
push
mov
imul
test
inc
call
lea
stc
call
loope
pop
xchg
repnz
or
push
andb
push
pop
add
mov
mov
rorb
xchg
and
in
cltd
test
mov
mov
mov
cmp
scas
fidivrs
mov
ror
adc
pop
incl
mov
sbbl
enter
sub
add
xor
jno
adcb
ds
cmp
add
mov
dec
fstps
imulb
jae
adc
push
add
or
cs
mov
cmp
icebp
je
cs
rcrl
faddl
sub
ret
and
popf
cli
pop
mov
xor
insl
mov
xor
jmp
fisubs
fdivr
dec
xor
jg
or
mulb
cmpsl
xchg
xchg
jmp
in
lods
push
loop
xlat
std
or
push
pop
repnz
xchg
out
fisttpll
clc
mov
sbb
les
arpl
out
xchg
jp
stos
push
jl
push
fistpl
lods
pusha
lret
dec
adc
out
aas
xchg
mov
pop
lods
mov
sbb
dec
or
pop
inc
cmp
jbe
jge
repnz
hlt
pop
pop
filds
test
sti
xor
jg
mov
fcom
popa
jbe
jns
dec
jp
push
icebp
daa
adc
xchg
cmp
mov
add
mov
mov
mov
lcall
adc
aam
in
call
jne
les
in
push
and
insl
das
xorl
pop
cmp
out
in
xchg
gs
add
lock
fs
xchg
loopne
outsb
ret
pop
clc
adc
js
mov
mov
popa
push
out
lods
xor
call
pop
jmp
inc
or
in
push
inc
pop
bound
lods
roll
jl
jmp
daa
fwait
iret
cmpsb
in
or
adcl
push
mov
mov
inc
stc
negl
xor
lods
pop
lds
out
outsl
cmp
rclb
lahf
dec
imul
pop
andb
jp
hlt
lea
mov
sahf
jbe
in
test
loopne
icebp
pop
cmp
in
add
lds
aas
lret
lea
fcomps
nop
sbb
insb
test
lds
pop
pusha
dec
cld
push
inc
addr16
insl
enter
adc
dec
or
add
mov
mov
cs
ficoml
pop
fdivs
cmp
pop
mov
fwait
dec
cmp
add
test
in
push
outsl
dec
mov
outsb
rcll
jg
in
jns
mov
cmp
mov
inc
xchg
cld
jo
sub
and
std
repz
mov
scas
push
in
ljmp
cmp
stc
inc
insb
cmpsl
repnz
dec
adc
enter
push
sub
fcmove
insb
iret
inc
mov
cltd
call
das
xchg
movsl
push
dec
add
sub
cmp
mov
movsb
cmp
lret
lods
call
nop
add
ja
jbe
ljmp
or
add
xchg
pop
and
mov
scas
sbb
movsl
icebp
aad
mov
push
in
insb
leave
iret
and
rcr
pop
xlat
mov
lret
fwait
aam
iret
bound
jno
fldz
jp
std
call
push
sub
jl
sub
jg
stos
mov
xchg
mov
std
ss
into
je
cmp
and
mov
scas
int3
std
hlt
sbb
cmp
fbld
inc
shlb
xchg
stos
adc
div
cwtl
shrb
mov
xor
or
cld
out
test
cmp
xchg
sub
int3
pushf
mov
push
jb
fidivs
sti
repz
sbb
cmp
ds
sub
cltd
movsb
in
inc
ror
sti
push
test
dec
insl
adc
addr16
xchg
neg
push
pop
or
pusha
jmp
icebp
push
repnz
fwait
pop
pop
dec
jb
test
push
mov
jle
push
stos
scas
imul
stc
mov
pop
out
repz
jge
sbb
mov
pop
pop
push
clc
mov
xchg
ja
dec
mov
dec
mov
xlat
sub
inc
pop
loop
add
pushf
pop
jae
or
lcall
data16
jmp
mov
dec
jno
dec
inc
out
in
shll
les
int
rcl
inc
add
inc
stc
cld
sub
and
mov
addl
jecxz
cmp
mov
and
jbe
pop
push
jnp
xchg
xor
fisttps
sbb
rol
xchg
out
adc
cmp
in
jecxz
cmpsb
lods
in
xor
test
or
dec
je
lods
cmp
push
cli
imul
enter
jp
cmp
bts
sub
test
lahf
out
insb
sub
sbb
repnz
fstps
fwait
movsl
add
xor
loop
sbb
nop
aas
push
cmp
ds
jmp
shlb
mov
dec
jmp
push
dec
jne
and
outsl
inc
lods
jmp
cmp
pop
inc
cmp
data16
adc
mov
lods
jae
pusha
loop
pop
test
pop
cmc
addr16
sbb
push
sub
jne
inc
clc
jp
cmp
out
xchg
comiss
lret
dec
test
pop
and
jmp
loop
mov
or
adc
pop
jmp
outsb
sbb
xchg
and
inc
and
mov
cmp
xchg
fiadds
cmp
bound
dec
faddl
push
jp
mov
mov
movsb
in
les
cmp
xchg
add
jmp
popf
into
in
jo
xchg
cwtl
jg
push
jp
out
dec
movb
sti
sub
and
sarl
inc
inc
jge
das
dec
jg
dec
in
data16
lahf
pop
popf
or
out
adc
lods
push
adc
idivb
jbe
inc
cmc
scas
jecxz
mov
sub
pop
xor
mov
and
or
pop
fwait
inc
push
cli
xchg
into
inc
push
adc
pop
loop
adcb
pushl
loop
push
push
lcall
inc
sub
out
outsl
out
cli
int3
mov
jbe
mov
out
cli
add
in
cmp
imul
jge
cmp
mov
sbb
xchg
bndldx
xchg
sbb
mov
pop
or
or
mov
and
enter
lock
mov
mov
insl
cmp
fstl
jmp
scas
repnz
mov
inc
in
daa
jnp
lret
stc
push
imul
movsb
pop
fists
stos
lock
dec
mov
dec
xlat
sarl
dec
pop
ss
pop
sbb
and
call
jae
push
sbb
arpl
pop
daa
repz
sub
push
out
adc
iret
dec
fwait
or
aam
adc
fstpl
push
sbb
adc
repnz
xchg
inc
lahf
mov
frstor
pop
mov
pusha
xchg
add
dec
jle
outsb
mov
pusha
jl
adc
jo
push
xor
mov
xor
fnsetpm(287
orl
inc
jmp
stc
lds
xchg
fidivrs
sbb
or
data16
fildl
icebp
insb
jg
lock
shlb
hlt
enter
ss
ds
xor
mov
and
icebp
decb
adcb
addb
mov
sbb
pop
stos
mov
scas
sbb
sub
je
inc
adc
mov
inc
imul
cmc
ljmp
lcall
fldl
xchg
pop
and
cld
mov
into
movsl
push
cmp
mov
test
mov
mov
mov
rorb
mov
mov
cmpsb
loope
flds
jns
mov
mov
loopne
sub
lock
repz
in
mov
out
lret
mov
test
dec
inc
test
fisttps
jle
rorb
dec
mov
andb
dec
lods
xchg
adc
aaa
dec
notb
add
clc
mov
push
insb
call
daa
xchg
add
add
js
out
sbb
pop
jp
push
sbb
ret
dec
jnp
mull
pop
pop
pop
jl
jbe
ret
push
or
cmpsb
das
mov
ja
mov
push
mov
sub
mov
push
xchg
xor
pushf
mov
cmp
sbb
add
ss
pop
call
inc
sbb
jae
imul
mov
or
fmul
mov
outsl
mov
sub
out
push
inc
inc
rorl
lret
outsb
ret
fldcw
fdivl
mov
in
inc
mov
cltd
or
cs
ret
push
test
fwait
mov
sub
in
mulb
push
mov
or
push
outsb
gs
scas
and
testb
imul
xchg
sub
icebp
push
std
add
jbe
into
mov
or
cmp
or
gs
outsb
jg
fdivl
xchg
shlb
repnz
daa
cmp
mov
ret
adc
mov
gs
rcl
jb
push
push
mov
lds
fistpl
sbb
stc
mov
shl
or
add
xor
add
adc
sub
cmp
cmpsb
sub
pop
push
xchg
in
mov
mov
mov
jecxz
popa
addr16
nop
scas
xlat
mov
cwtl
adc
mov
leave
jae
cmpsb
jb
sti
cmpsb
lcall
add
mov
add
adc
inc
fcoms
mov
mov
push
jnp
or
push
xchg
jmp
inc
mov
shl
xchg
in
bswap
inc
cmpsb
sti
out
mov
or
dec
enter
jmp
inc
popa
sub
or
aaa
and
push
adc
mov
fdivs
rclb
je
cld
cmpsb
mov
jns
adcb
cmpsb
cmpsl
xor
aad
test
xor
add
std
and
stos
xchg
cld
xor
add
les
scas
push
adc
push
xor
addr16
stos
push
dec
ret
xchg
jno
jnp
addr16
sub
mov
or
and
xlat
mov
jb
or
in
mov
ret
mov
push
in
and
dec
in
aaa
sbb
mov
mov
or
insb
ja
mov
fwait
pop
xchg
xor
sub
scas
dec
stos
push
scas
xor
lcall
jo
mov
and
incl
fdivl
mov
test
hlt
and
pop
insl
lods
jge
xor
in
pop
or
jae
rolb
addl
insl
and
cmp
jle
or
sub
push
dec
dec
sahf
call
push
subb
cwtl
pop
xchg
test
sbb
popa
pop
inc
repnz
je
push
ret
ret
xor
roll
scas
lahf
push
test
shr
stos
inc
aaa
cmpsl
xchg
pop
add
sub
add
mov
pop
push
dec
std
and
adc
insb
xchg
adc
pushf
mov
xchg
push
jecxz
movsl
arpl
push
jg
jl
push
clc
inc
stos
cmc
in
sub
rorl
arpl
xchg
mov
dec
and
js
push
cmp
mov
mov
int
inc
in
inc
push
or
mov
inc
pop
sahf
xlat
mov
cmp
sarl
push
sub
dec
icebp
mov
bound
sub
mov
or
outsl
mov
add
ficoml
les
and
hlt
jmp
popf
ja
fwait
out
mov
push
xor
sub
jo
inc
jnp
pop
popa
pushf
icebp
xlat
pop
and
or
xchg
or
out
mov
test
and
xchg
dec
mulb
sbb
in
xor
jl
xchg
or
faddl
inc
leave
addr16
lds
xor
mov
fnsave
sub
xchg
cli
scas
add
or
add
sbb
sahf
test
jns
lds
xchg
xchg
outsl
fidivrs
pop
jge
ret
push
xor
jg
cld
mov
out
sub
icebp
cmp
outsl
cwtl
dec
jae
cmp
scas
mov
jp
cld
ljmp
testl
daa
dec
stc
adc
das
paddsb
inc
xchg
xchg
sbb
mov
jb
or
add
mov
sub
divl
mov
sti
ret
adc
orl
int3
fimuls
arpl
hlt
sub
or
sub
arpl
aad
xchg
jns
lret
sub
pop
and
pop
xchg
sahf
iret
xchg
mov
jbe
sbb
mov
repz
loope
cltd
mov
mov
int3
mov
scas
cmp
cld
mov
xor
popa
les
out
icebp
loopne
push
pop
xchg
mov
xlat
pop
and
pop
inc
outsb
pop
push
xchg
pop
rorl
pushl
loopne
inc
pop
adc
or
jge
insb
or
inc
jae
push
jle
inc
stos
mov
bound
xchg
mov
or
shrl
push
iret
pop
xchg
xor
cmp
push
aad
addr16
movsl
ljmp
lods
shlb
sbb
mov
repnz
push
cmc
xor
lret
cmpsb
pop
adc
pop
outsb
lods
and
aas
imul
mov
xor
shrl
mov
data16
xor
fnstcw
rep
mov
add
div
movsl
fldenv
imul
adc
sub
jmp
dec
loope,pt
les
xchg
xor
mov
xchg
fs
jmp
inc
adc
add
sbb
stos
xchg
dec
dec
mov
xchg
mov
xchg
push
cs
dec
or
ds
pop
test
fstl
pop
outsl
ret
push
enter
iret
mov
push
sbb
fcomps
pop
push
push
fldt
lahf
and
sub
cmp
sbb
data16
xchg
or
or
and
push
movsb
or
jnp
xor
mov
push
or
dec
xor
or
or
test
mov
mov
adc
jg
lahf
add
int
in
pop
into
mov
adc
xchg
dec
enter
mov
sti
nopl
test
inc
in
mov
push
pop
jae
cld
sbbl
cmp
negb
out
std
mov
cwtl
repz
and
pop
out
push
mov
pop
stos
fnstenv
dec
ss
mov
dec
mov
add
push
cmp
cwtl
or
and
jno
dec
push
xor
xchg
add
mov
cmp
pop
dec
nop
insb
push
jmp
mov
stc
mov
rolb
daa
ret
and
fwait
xchg
adc
or
sbb
inc
aas
arpl
enter
mov
mov
jle
imul
ss
hlt
push
rcrb
pop
push
add
push
xor
ffreep
mov
xor
mov
adc
xor
sub
fimull
iret
rorl
lret
lahf
ljmp
push
or
xchg
cltd
pusha
mov
adc
mov
push
sub
in
addb
fiaddl
out
gs
in
ret
xchg
adc
adc
stos
push
mov
imul
sub
or
std
iret
lods
cmc
sbb
xchg
adc
hlt
ret
mov
fistps
or
movsl
or
ja
ja
das
mov
jne
clc
cmp
mov
dec
or
push
pop
mov
inc
add
int
and
adc
sbb
mov
outsb
cli
pop
fldenv
das
xchg
mov
enter
movsb
or
push
fstl
push
xchg
sbb
and
xor
ds
ljmp
arpl
sub
dec
jae
fxch
lods
bound
into
andb
mov
iret
xchg
fsts
es
shrb
xor
and
outsb
mov
or
pop
repnz
mov
xchg
sbbb
push
or
mov
loopne
mov
test
and
lock
inc
mov
cmpsb
imul
jbe
test
test
xlat
aam
adc
sbb
ss
push
es
arpl
sub
ret
rorb
repnz
xor
pop
outsb
mov
pusha
adc
mov
dec
and
sbb
push
sbb
cltd
repnz
mov
inc
int
xor
jno
sbb
add
add
fnstenv
out
ret
sti
int
push
fldl
mov
sub
nop
adc
dec
icebp
inc
cmp
lock
fistpl
imul
hlt
push
sub
mov
mov
lcall
ljmp
jp
adc
and
frstor
or
cmpsl
iret
addr16
repz
or
add
xchg
mov
mov
imul
enter
jns
sbb
adcb
or
adc
sbb
cmp
mov
lret
sub
loope
pop
xor
mov
pop
adc
xlat
xlat
pop
add
mov
pusha
testb
mov
lcall
xor
aad
adc
jne
cmp
aad
rorl
mov
adc
fcoms
call
sub
xchg
add
push
call
int3
pop
rclb
adc
sti
daa
sub
jge
xchg
leave
stos
les
pop
call
cs
mov
rorb
pop
adc
mov
or
adc
pop
push
cmc
xor
and
pop
mov
adc
mov
sub
sbb
push
lods
inc
and
jns
push
scas
inc
movsb
js
cmp
jecxz
push
push
je
inc
pop
cmp
aam
and
or
xchg
cmp
pop
pop
sub
or
popa
in
xchg
and
or
xchg
dec
mov
call
rcll
push
and
add
fwait
jnp
lods
lret
or
lahf
imul
mov
lcall
add
jmp
outsl
add
xchg
jg
jecxz
sub
jecxz
cmpb
jne
pop
int3
cmp
xor
cmpsl
dec
xor
popf
mov
sahf
inc
out
push
in
mov
cmp
sub
cmp
mov
jecxz
xor
addb
ja
ds
dec
xor
jb
popf
mov
inc
sub
xchg
jnp
repz
out
insl
nop
or
cmp
cmpb
pusha
pop
sub
push
sbb
and
loop
mov
add
fcmovnbe
xchg
imul
add
mov
pop
movups
and
inc
xor
mov
mov
enter
cmp
dec
jecxz
pop
mov
dec
dec
fnstsw
add
push
jecxz
xor
loope
inc
popa
mov
pusha
or
lods
stc
clc
xchg
pop
fs
jb
cmp
adc
das
mov
dec
sub
xchg
js
out
dec
pop
mov
adc
gs
cmp
push
push
sbb
les
pop
push
cmp
or
insb
sub
mov
pop
test
cltd
jle
in
pop
cmp
in
adc
inc
cmp
nop
je
add
mov
stc
mov
lcall
and
inc
mov
mov
mull
jne
mov
cmp
jle
inc
push
xor
shrb
mov
and
loopne
mov
js
xor
cli
insl
and
dec
or
ss
mov
mov
stc
mov
into
gs
fnstcw
pop
ficoml
mov
dec
into
jno
mov
pop
mov
jmp
loopne
jnp
push
adc
mov
jnp
sbb
lock
xor
daa
mov
insl
sahf
mov
es
rep
std
fisubl
dec
cmp
jmp
pavgw
push
adc
mov
jae
jo
adc
lret
fnsave
or
and
je,pn
push
mov
addr16
adc
dec
add
scas
mov
jle
icebp
fcoml
pop
leave
dec
xrelease
imul
sahf
arpl
scas
sbb
or
push
aam
std
dec
int3
push
mov
adc
les
iret
lods
push
inc
adc
and
mov
lahf
out
shlb
dec
mov
bswap
pop
mov
jno
pop
fwait
xor
test
mov
xor
shlb
out
push
mov
std
loop
xchg
imul
dec
mov
pop
fiaddl
and
cmpsb
dec
or
add
inc
enter
push
sub
dec
sbb
push
inc
ljmp
cmp
scas
xchg
inc
inc
ja
add
mov
xor
and
test
cmp
mov
cmp
mov
inc
into
scas
dec
data16
in
test
scas
dec
in
mov
cmpsb
or
mov
rclb
jb
push
scas
jecxz
cmp
xchg
dec
bound
mov
lds
xorb
mov
push
mov
sbb
bnd
stc
cmp
out
mov
scas
xor
dec
fidivl
sub
scas
leave
fisubrl
aas
leave
shrb
adc
js
mov
sbb
testl
dec
das
popa
test
aam
pop
ja
xor
jl
xchg
xor
mov
mov
sub
mov
das
scas
lahf
aad
outsl
push
push
fisttps
daa
adc
mov
sub
mov
jmp
stc
das
not
cwtl
ror
call
mov
and
xor
mov
out
subl
xchg
pop
insb
add
and
push
insl
test
sub
dec
push
out
push
xchg
aas
push
sub
insb
sbb
cmp
lret
or
jmp
inc
stos
adc
inc
ja
dec
repnz
fcmovnu
pop
call
and
inc
enter
stc
test
push
inc
xor
sub
stos
xchg
aas
jmp
dec
fdivrs
lock
mov
sbb
adc
dec
mov
jl
dec
add
lds
into
cmpsl
adc
cmpl
mov
imul
pop
enter
mov
pop
out
or
fisubrl
pushf
pop
adc
pop
fwait
into
sub
push
ds
sub
ret
test
loope
and
lahf
jge
dec
or
outsl
sbb
jp
jecxz
lret
adc
cld
ds
js
pop
and
xchg
add
ds
cmp
push
andb
dec
push
xchg
test
mov
je
test
arpl
dec
and
ret
push
inc
adc
push
cmp
cli
push
jle
mov
in
clc
pusha
xchg
jmp
clc
out
jg
inc
xor
int3
jg
jp
shrb
out
shll
test
in
cmp
xchg
xor
cltd
ror
lcall
add
xor
mul
rcll
mov
pop
push
mov
lcall
mov
add
xor
dec
mov
add
add
les
aad
mov
enter
test
in
repz
sbb
fcmovb
mov
cmp
mov
sbb
or
leave
mov
inc
cmp
sbb
jge
sub
jge
lods
cmpsb
outsb
sub
push
and
jo
bound
push
mov
imull
jge
pop
fcoms
shrb
dec
ret
and
cmc
xchg
mov
les
cs
sbb
or
dec
filds
cld
add
xor
jmp
sti
or
mov
pop
push
sbb
adc
das
imulb
jbe
fmul
cmp
cld
push
mov
and
fmuls
pop
insl
mov
or
sti
in
clc
fdivl
mov
sbb
and
xchg
pop
scas
ret
pop
push
or
sbb
mov
jge
pop
xor
or
xchg
push
mov
fcompl
add
sbb
imul
insl
pop
pop
nop
inc
xchg
push
mov
and
or
aas
ret
jbe
out
inc
sub
push
fdivp
push
push
sbb
or
cmpsl
cmc
sarl
test
xor
out
rol
lods
out
sarb
inc
js
cmp
sbb
add
arpl
adc
stc
std
jmp
scas
cmp
arpl
pop
sub
dec
cmp
dec
pop
push
mov
aas
dec
popa
jo
or
push
imul
lods
inc
orl
shll
xor
imul
sbb
fucomi
leave
jmp
push
lcall
out
rcrb
sbb
loope
xchg
fdivrl
xchg
dec
xchg
cld
mov
fimuls
mov
lods
jb
aam
dec
fwait
mov
jnp
inc
gs
jl
xor
les
add
hlt
pop
and
jl
pop
shll
dec
insb
das
xchg
cld
jmp
xchg
js
xchg
outsb
dec
xor
xor
adc
es
and
notl
flds
hlt
lahf
je
add
sub
jecxz
imul
cmp
pushf
clc
jno
aam
inc
loop
mov
aaa
mov
jb
jno
icebp
in
shrb
jbe
cmpsl
inc
insb
or
and
mov
lcall
sbb
fldt
pop
pop
dec
sub
mov
inc
pop
xchg
jle
cwtl
stc
cwtl
insb
mov
in
stc
in
cld
and
mov
xchg
loopne
orl
divl
mov
jmp
data16
mov
xor
lret
jne
int
lret
aad
adc
test
adc
jno
or
and
adc
ja
pop
in
push
and
mov
and
or
or
test
outsl
repnz
xor
add
jns
add
adc
jo
sub
push
test
int3
xor
testl
add
mov
mov
lock
mov
test
adc
stos
or
jp
fists
shrb
cli
popf
inc
jl
mov
mov
decb
int
adc
jno
stc
into
cmpsb
sbb
pop
data16
push
pop
adc
insl
mov
subb
inc
inc
js
mov
sub
lret
sub
mov
adc
lods
xchg
js
inc
adc
outsb
cltd
xchg
push
aas
xchg
inc
sbb
xchg
adc
int
sub
cltd
inc
fstl
inc
or
mov
ret
mov
xchg
incl
dec
sbb
aaa
ds
push
pop
ljmp
icebp
lcall
je
xor
jae
xor
pop
adc
xlat
shll
cmpb
xchg
xchg
bound
xchg
scas
inc
inc
pop
shr
test
jp
add
push
addr16
fmuls
xor
stos
lahf
es
iret
xor
cwtl
adc
mov
pop
into
sbb
sbb
mov
in
xor
xchg
enter
shll
sbb
sub
xor
mov
invd
push
cltd
repz
inc
les
cmc
pop
jno
aad
or
jae
lds
and
adc
mov
xor
arpl
lods
dec
jne
fidivrl
shr
in
adc
arpl
mov
orb
push
mov
mov
int
aaa
add
push
cli
stos
xchg
mov
adc
mov
mov
shrl
imul
pushf
sub
ja
loopne
jnp
adc
je
adc
out
ficoms
shll
dec
cwtl
scas
jmp
sbb
dec
sbb
addr16
cmpsb
stos
adc
mov
mov
cltd
out
fidivrl
sub
aad
or
sbb
or
out
pop
add
pushf
imul
imul
and
inc
inc
stos
and
inc
rcrl
fsts
mov
inc
add
je
pop
adc
mov
pop
in
adc
fmuls
lret
data16
dec
cs
fdiv
js
mov
add
mov
das
dec
out
cmpsb
cmp
sahf
aas
cwtl
scas
es
pop
pushf
icebp
cmp
loopne
xchg
inc
popf
mov
bound
pop
cld
mov
mov
cmp
cmp
push
data16
mov
movsl
jno
out
mov
out
sub
in
inc
loopne
popf
cmp
and
adc
sub
sub
rcrl
and
adc
jo
push
fldl
mov
mov
decl
mov
push
pop
sub
ja
cwtl
mov
stos
daa
hlt
int3
popa
add
mov
mov
dec
mov
loope
jg
push
push
mov
and
fmuls
lock
xor
enter
jns
add
sarb
imulb
xor
adc
cmp
outsb
shl
lret
or
mov
aad
rclb
out
jl
mov
mov
jecxz
xor
mov
sbb
aad
into
popa
clc
scas
mov
pop
movsl
into
in
dec
xorl
in
jnp
cmp
cld
fwait
addb
mov
std
daa
dec
mov
aad
hlt
mov
and
out
inc
lds
pop
sub
les
mov
outsb
pop
loopne
pop
jg
add
push
cmp
mov
arpl
hlt
call
push
jmp
dec
hlt
push
and
or
and
adc
sbb
fdivl
push
pop
mov
or
jbe
pusha
outsb
pop
sarl
sub
sub
lds
cld
dec
mov
add
push
pop
inc
sub
insl
stc
mov
into
xchg
pushf
ljmp
outsb
fcoml
jle
loop
out
xchg
add
inc
pop
imul
sahf
jl
popf
mov
xchg
ljmp
push
jno
mov
lea
pushf
ss
or
inc
add
push
pop
sti
cmpsb
adc
out
ret
mov
pop
adc
popa
aam
lcall
or
cmpsb
leave
adc
pop
push
nop
fs
jns
push
int
outsl
lds
jmp
xor
stc
rcrl
pop
mov
mov
xchg
pop
lds
mov
jbe
jae
inc
cmp
and
insb
bound
js
sbb
sbb
sub
sub
ret
loopne
inc
cmp
movsl
gs
fbstp
and
adc
nop
int3
out
call
xlat
clc
xlat
scas
mov
pop
movsl
mov
icebp
leave
adc
push
push
and
push
inc
pop
jmp
pop
xor
pop
and
enter
push
icebp
mov
add
pop
dec
mov
test
stc
cmc
sub
dec
cmp
fcompl
aas
movsw
pop
lahf
fnsave
and
aad
sbb
and
aas
daa
cmp
mov
mov
gs
imul
mov
popa
jecxz
ss
push
sub
insb
mov
sub
push
add
pop
in
je
idiv
sbb
mov
mov
repnz
lds
cmp
es
mov
xor
dec
btr
dec
lcall
aad
stos
and
jg
jae,pt
cmc
mov
iret
mov
sbb
mov
ds
sub
movsb
imull
mov
mov
xor
shrl
push
insl
xchg
push
mov
popa
and
xchg
xchg
int3
xor
pop
popa
loope
jmp
and
xor
enter
xchg
dec
or
or
addr16
sti
add
lea
mov
push
push
push
mov
addr16
push
mov
and
lds
jle
jns
dec
lahf
mov
dec
in
sbb
sahf
xor
inc
lret
jmp
xor
orl
pop
jmp
daa
cs
dec
xchg
cltd
push
mov
mov
loopne
outsl
loop
cltd
dec
popa
ret
push
cmp
rcl
sub
scas
cmp
lcall
mov
ret
push
or
sub
jl
add
insl
icebp
sub
or
dec
shl
mov
jge
xor
cmp
dec
inc
inc
pushf
in
call
sub
mov
fs
repz
cmp
es
push
xor
addr16
cwtl
fists
sbb
mov
inc
mov
test
mov
std
add
sbb
push
test
paddd
and
sti
dec
dec
mov
rcll
or
arpl
sbb
xchg
mov
sbb
push
das
movsb
mov
lret
or
adc
arpl
cs
aad
sbb
lret
icebp
cltd
inc
in
sub
lea
out
sbb
dec
test
sarb
icebp
shrl
dec
mov
xchg
and
enter
xchg
mov
out
leave
adc
mov
cmpsl
sbb
add
mov
out
cld
jnp
push
das
movsl
adc
cmp
nop
pop
inc
sub
scas
repnz
rcl
jo
mov
pop
int3
pop
arpl
inc
push
add
outsb
jg
mov
addb
sbb
out
mov
xchg
pop
pop
loope
pop
adc
stos
cld
cltd
insb
mov
fnstsw
mov
in
in
jne
ss
pop
pop
jge
loope
cmp
icebp
pop
sbb
int3
subl
mov
cmpsl
shll
sbb
lds
xor
xchg
mov
mov
pop
es
sbb
sbb
mov
cmp
jo
ja
lcall
xchg
sub
or
add
pop
leave
aam
imulb
push
inc
sub
and
pandn
xlat
cwtl
cmp
popa
xlat
mov
xorl
cmp
movl
daa
call
es
sbb
or
cmp
loope
cli
insb
sbb
insl
push
or
sbb
pop
add
sub
sahf
jno
sbb
loop
pop
leave
add
imulb
cmp
push
shl
add
or
cmp
sbb
test
hlt
dec
stc
icebp
jmp
mov
adc
sbb
xor
out
lods
jmp
hlt
stos
jbe
enter
lds
fcmovnu
jns
mov
push
mov
js
rcl
mov
sti
lods
push
push
push
lea
xlat
push
js
mov
and
add
mov
scas
aam
mov
ret
mov
pop
pop
outsl
dec
cmpsl
out
jmp
inc
int
mov
push
push
icebp
sbb
cmpsl
xchg
mov
rol
lcall
pop
scas
adc
adc
pop
mov
jecxz
xchg
xchg
lds
lods
icebp
xorl
jae
mov
mov
pop
icebp
rclb
int
dec
cmp
mov
fs
jae
dec
mov
int
mov
mov
adc
dec
in
divl
ffree
lahf
sub
loope
movsb
sub
add
cwtl
dec
and
mov
lret
inc
sbb
mov
push
inc
sbb
inc
mov
imul
mov
imul
adc
nop
fldenv
aas
in
out
loopne
xchg
test
ret
adc
js,pt
mov
cmpsl
pusha
sbb
push
inc
iret
and
stos
rorl
push
add
sti
pop
push
sub
xor
bound
pushf
daa
push
rclb
xchg
fsubs
mov
and
stc
cli
push
out
cmc
xor
sbb
stos
sub
fstps
adc
xor
mov
lahf
dec
int3
push
js
add
add
ds
mov
push
fstp
mov
push
mov
sbb
shrl
and
cmc
clc
cmp
loope
sub
jg
jge
cli
add
mov
fcompl
mov
inc
push
cmp
out
and
xor
mov
dec
mov
cmp
adc
xor
icebp
rcrl
icebp
outsl
inc
push
rcrl
cmc
lods
ret
ret
lods
push
and
jo
loopne
lods
lds
sahf
inc
test
test
sbb
dec
lret
push
gs
mov
rolb
sbb
mul
int
mov
out
int3
arpl
pop
cs
inc
add
jbe
mov
jns
sbb
xor
and
shl
das
js
pop
rcrl
in
cmc
ja
xor
pusha
jl
popa
ret
dec
fisubs
or
xor
mov
sub
jbe
mov
fstpl
xor
push
and
aad
pusha
shrb
jl
and
std
inc
cmpl
jecxz
sti
push
fsubl
add
int3
xchg
push
les
aaa
mov
xlat
mov
xor
jl
int3
inc
sub
sti
sub
pop
mov
pop
repnz
xlat
test
sub
iret
sbb
xchg
xchg
aas
stos
and
xchg
popa
mov
leave
fdivs
mov
xchg
mov
mov
sti
xchg
out
les
testl
cmpsl
push
inc
dec
shlb
out
fiadds
es
in
inc
or
rcll
mov
sub
xor
call
jge
inc
inc
ss
cltd
les
fstpt
stos
inc
mov
fidivl
outsl
add
add
into
jno
div
outsb
lock
aas
xor
loop
push
nop
aaa
push
mov
rcrb
dec
dec
jl
jae
sbb
in
loop
sahf
mov
mov
cmpsl
xchg
cld
jle
or
push
and
push
adc
sbb
lds
cmp
lock
cmp
fistl
sbb
sub
lret
loope
cld
sub
inc
movsb
inc
inc
dec
mov
cmp
test
sar
test
stos
repz
mov
jl
xor
mov
inc
cmp
loopne
xor
mov
gs
mov
mov
or
xor
add
pop
cmp
movsl
addl
sub
or
std
enter
mov
sub
pushf
mov
in
jle
lahf
pushf
dec
cmp
call
cmp
jmp
jb
ret
test
mov
pop
fisubs
fildll
push
and
xchg
push
daa
and
push
add
jg
rol
push
xor
inc
lock
leave
ss
jnp
push
jnp
mov
outsb
pop
mov
jp
clc
test
lock
push
xchg
ds
popa
incl
mov
and
push
push
xor
push
daa
popa
mov
notb
or
fisttps
ljmp
lock
mov
rolb
mov
pop
inc
push
ljmp
inc
push
vcmpsd
pop
xorl
out
mov
jne
test
mov
jmp
orb
aas
pop
popf
into
clc
jbe
ret
int
or
ss
loop
pop
mov
add
or
insb
lcall
add
sub
in
test
fcomps
pop
andl
mov
aaa
sbb
and
jecxz
xor
in
pop
add
gs
mov
pop
push
and
mov
push
test
cmp
out
pop
clc
sbb
sbb
incb
aaa
pushw
mov
and
inc
xchg
inc
mov
and
adc
fnstenv
cwtl
adc
add
cmc
inc
mov
xor
ljmp
xchg
data16
mov
test
lahf
mov
sub
in
filds
rcrl
pop
daa
sub
mov
lcall
mov
je
add
jle
jns
add
push
sub
inc
add
inc
rcrb
cltd
arpl
les
loope
sti
jp
push
std
sbb
jp
sar
in
nop
mov
sub
negb
cmpsl
popa
aas
cli
mov
int3
clc
mov
es
jno
lcall
das
daa
std
push
mov
or
movsl
adc
xchg
adc
daa
gs
sub
cwtl
loop
jl
lods
daa
xchg
xchg
mov
cpuid
dec
push
daa
adc
cli
sub
jg
lea
out
push
int3
repnz
add
dec
pop
cmp
push
and
dec
ja
push
pushf
mov
pop
xchg
iret
pushf
xor
rclb
arpl
xchg
js
xchg
push
lea
stos
arpl
dec
xchg
dec
and
mov
nop
mov
and
pop
dec
dec
jge
xchg
insl
mov
rcll
ret
aad
insl
sbb
scas
rcrb
or
push
std
dec
jecxz
xor
sti
je
mov
adc
cmp
push
lahf
mov
test
jbe
xchg
fildl
push
imul
adc
in
filds
in
inc
test
fcoml
leave
pop
mov
jbe
mov
repz
dec
loope
and
aaa
shrl
xchg
xor
inc
xchg
popa
cmpsl
and
xchg
inc
cmpsl
jg
xorb
idivl
push
mov
xorl
addr16
and
test
pop
lret
aam
lahf
movb
sbb
add
stc
sub
push
sub
lods
xlat
cmp
add
addr16
sub
shlb
push
daa
fucomi
inc
sbb
xor
ljmp
xchg
inc
pop
popf
out
mov
inc
out
inc
addr16
icebp
xchg
push
jle
sub
std
sub
inc
es
mov
jmp
imul
fcomip
xchg
repnz
lock
push
sbb
cmp
out
into
cmp
movsb
cmpsl
jge
cmp
sti
push
fcoml
add
lret
push
mov
stc
fnstcw
popa
mov
ss
fsubs
mov
sbb
mov
jle
pop
sub
fcmovnu
adc
mov
jo
jb
out
in
inc
dec
dec
lret
out
ss
lret
mov
mov
add
adc
cmp
js
rdmsr
mov
pop
arpl
mov
ret
mov
lods
and
cmp
add
daa
mov
mov
xor
fcmovu
mov
pusha
dec
js,pn
lret
orl
les
cmp
mov
ss
inc
arpl
mov
push
clc
xor
push
xlat
dec
adc
ja
push
cmp
pop
gs
fldenvs
in
push
ss
aam
stos
stos
xchg
xchg
lahf
rolb
pop
ret
xor
mov
int3
outsl
xchg
nop
adc
leave
call
push
imull
lds
outsl
inc
out
jmp
sub
xchg
xchg
rcr
add
pop
movsl
int
aas
add
gs
out
test
and
and
mov
pop
and
cmp
add
lret
and
sbb
inc
add
or
inc
stc
ljmp
insb
pop
aas
mov
adc
cltd
inc
aad
aas
test
jbe
in
dec
aaa
int3
xor
stc
or
push
aam
daa
loope
sarb
out
pop
lret
pop
sbb
popf
lcall
or
jnp
pushf
sbb
lds
into
xchg
cmp
cmc
insl
popa
js
pop
adc
and
inc
jo
jg
push
xchg
in
incb
xor
sbb
repz
xchg
cmpsb
jecxz
stos
iret
leave
push
shrb
out
dec
mov
push
dec
dec
mov
ds
cmp
movsb
sar
mov
mov
movsl
out
xchg
or
adc
or
popa
push
or
rcrl
scas
stos
adc
nop
rol
bound
xlat
jge
push
mov
pop
mov
mov
mov
lods
rcl
outsb
fiadds
sbb
mov
ja
sti
push
xchg
adc
or
cwtl
or
inc
xchg
xchg
popa
repz
test
int
and
rcrl
movsl
es
lahf
fadd
loop
or
cli
mov
push
sbb
fbld
mull
mov
and
push
test
dec
mov
shlb
iret
push
das
cmp
sti
out
test
cmp
insl
data16
inc
clc
jmp
push
pop
aam
mov
xchg
push
call
lahf
fwait
mov
mov
xchg
stc
sbb
fadds
std
sub
ljmp
mov
enter
mov
lcall
push
mov
mov
test
cs
push
fmuls
sbb
xor
push
pop
and
addl
in
out
hlt
outsb
push
and
push
fcompl
xchg
rcr
imul
pusha
pop
dec
xchg
and
and
dec
call
xorb
out
xor
lret
movsl
in
mov
lret
pop
mov
imulb
insb
dec
out
lahf
jo
fnstenv
mov
dec
mov
mov
pop
gs
lea
pop
aad
mov
out
mov
sbb
xchg
sbb
outsl
xchg
and
cmp
dec
inc
xor
jbe
push
xor
dec
jb
fsubr
lods
or
pop
loopne
shrb
pop
out
cs
jae
arpl
sub
dec
fstpt
fistps
imul
orb
fs
add
dec
ljmp
orb
ja
or
lock
and
push
xor
jne
mov
out
shl
addr16
or
mov
push
lea
test
or
enter
test
and
jecxz
jno
push
xchg
xchg
or
out
roll
sbb
and
and
mov
inc
mov
jo
ljmp
pop
pushf
push
jle
push
push
cmp
push
insl
aam
push
ficompl
xchg
in
jae
xor
xchg
push
cmpsb
iret
rcll
pusha
das
sub
fs
push
sbb
mov
fldt
pop
imul
xchg
cwtl
cmp
in
cmp
jo
outsl
jae
sbb
into
ret
sub
les
pop
inc
fwait
push
leave
jmp
leave
pushf
mov
pop
adc
orps
mov
lods
mov
lahf
pop
outsl
xor
push
aaa
fcmove
gs
cmp
xor
out
adc
cmc
sbb
fs
push
mov
pushf
push
ljmp
repnz
addr16
mov
push
mov
sbb
mov
mov
cmp
push
push
loopne
repnz
xchg
lret
inc
dec
call
fwait
dec
adc
jo
roll
movsb
mov
cmp
pop
inc
popf
sub
or
cs
mov
inc
aad
stos
cs
pushw
lods
push
mov
and
sbb
pop
inc
xor
out
mov
cld
fsubrl
lret
nop
sbb
arpl
ficompl
or
pop
xchg
scas
iret
add
or
mov
scas
mov
inc
ret
or
loopne
jge
adc
adc
mov
sbb
out
stos
js
pushf
mov
mov
xchg
sbb
inc
popa
in
mov
dec
insb
push
ds
xchg
mov
add
test
in
sub
xchg
fsubrp
ret
add
nop
adc
xchg
out
sub
xor
jmp
roll
cmp
lods
mov
or
sbb
xor
fnstcw
push
adc
adcl
sbb
mov
jbe
popa
xchg
insl
and
mov
pop
pop
dec
sub
or
in
mov
push
popf
repnz
jo
fs
jle
in
or
mov
pop
mov
mov
push
imul
and
fstl
xchg
lock
jge
mov
or
jbe
dec
imulb
or
imul
xor
xchg
mov
xor
pusha
xor
xchg
add
std
pop
imul
mov
ja
and
cmp
push
fsubrs
aas
xchg
mov
jo
sub
and
outsb
cmp
xchg
jb
rcl
mov
jnp
push
lahf
fs
xchg
push
popl
and
daa
mov
adc
or
js
mov
mov
or
aas
or
pop
cmpsb
loopne
xchg
cltd
mov
cmp
dec
xor
mov
adc
fdivl
int3
sbb
aam
sub
jno
into
iret
insl
xlat
inc
dec
cwtl
push
inc
sub
ror
mov
mov
lcall
loop
cld
je
sbb
pop
dec
ss
jne
mov
jnp
mov
or
push
cmpsb
mov
jg
mov
inc
push
mov
push
xchg
cmp
rcll
fcmovne
nop
sbb
enter
push
jl
stos
sbb
push
lods
movl
fwait
mov
into
in
daa
mov
jbe
push
jp
mov
inc
ret
lcall
test
add
mov
fadds
outsl
mov
push
imul
repz
mov
pop
loop
dec
ret
andb
fsub
sarb
sar
ret
push
inc
mov
jnp
int3
sti
std
sub
sub
les
cmc
jne
shll
je
flds
lds
leave
push
sti
mov
dec
mov
sahf
sub
jne
outsb
std
xor
ds
sub
or
scas
jo
inc
cmpsl
and
sti
xorb
shr
insb
sarl
and
daa
shll
fsubrs
jne
inc
ljmp
mov
sahf
push
or
pop
or
cmp
int3
shll
es
push
fs
pop
negb
fbld
add
pop
rcr
nop
xchg
aam
dec
cs
push
mov
and
and
je
int
lcall
insl
pop
ljmp
in
or
fmuls
imul
mov
jmp
mov
call
add
daa
mov
movl
xor
movsb
cld
inc
or
or
nop
mov
mov
lret
cwtl
sbb
ret
dec
fs
stos
inc
dec
pusha
sub
movsb
fstpt
inc
sub
je
out
xchg
lock
mov
jb
and
mov
inc
in
lds
mov
ja
ret
push
call
pop
shl
jbe
or
pop
pop
fadds
jne
mov
xchg
push
pop
cmc
dec
push
mov
xchg
and
lea
lea
mov
xor
pop
xor
cmp
les
add
enter
jmp
mov
gs
loope
add
jle
cmpsl
sub
push
jle
clc
jg
rclb
sub
pop
adcl
mov
add
daa
push
adcl
inc
push
push
and
mov
pop
sbb
addr16
mov
aaa
cltd
arpl
popa
sub
xor
lods
enter
out
xor
adc
jne
movsl
sub
nop
insb
push
ja
cmp
int3
sti
int
mov
pop
fs
jo
dec
stos
sti
xorb
mov
lret
hlt
or
lahf
rcll
dec
sbb
add
dec
mov
inc
mov
std
addl
movsl
aaa
scas
jnp
inc
adc
cmp
push
mov
add
mov
add
mov
movsl
pop
stos
pop
arpl
arpl
scas
inc
arpl
sbb
ja
inc
popf
push
xor
jecxz
xor
repz
into
cmp
mov
xor
sub
xchg
push
leave
lcall
movsl
std
int3
sarl
adc
cltd
sbb
cmp
lret
mov
xchg
int3
or
pop
pop
pop
scas
mov
push
adc
xchg
xor
and
clc
add
cmp
inc
cs
jne
fadd
clc
add
int3
jmp
in
jl
adc
jns
dec
in
add
idivb
orb
push
into
cmp
sbb
xchg
or
mov
sub
add
adc
inc
rclb
push
inc
and
cltd
mov
lret
iret
addb
subl
push
test
push
fdivs
jg
iret
aam
fbld
arpl
cmp
hlt
out
add
adc
sub
scas
cltd
xor
sahf
in
fsubs
mov
xchg
push
mov
xchg
xor
xor
xchg
cli
mov
mov
cmp
add
or
push
xchg
loop
addr16
inc
pop
imul
rcl
mov
jp
cmp
mov
pop
sbb
enter
test
ja
das
scas
pushf
loope
pop
xchg
sbb
jge
stc
mov
mov
sub
iret
addr16
cltd
mov
cltd
add
mov
out
rcrb
adc
in
jns
stos
mov
loopne
push
sahf
mov
notl
inc
jle
mov
cmp
fdiv
jmp
and
sub
imul
cmc
clc
xor
mov
inc
in
mov
and
rcrb
jb
and
aas
mov
sub
lcall
jg
push
data16
push
mov
das
fidivrs
jle
dec
popf
psubsb
mov
sub
imull
imul
mov
int3
mov
jns
xor
psllq
sbb
push
fadd
mov
std
pop
push
fidivl
sub
ja
scas
pop
jecxz
dec
fbstp
daa
inc
ds
jp
push
xor
je
adc
push
or
pop
cmp
sahf
cmp
pop
or
adc
jo
fiaddl
imul
push
cmp
test
pop
pop
mov
outsl
add
sbb
push
aaa
shrb
xor
add
adc
shrl
cmp
mov
orb
fidivrs
mov
hlt
aam
aas
cmpsl
or
xchg
mov
repz
pop
sub
mov
repz
addr16
mov
imul
inc
push
rcrb
pushf
repz
pushf
inc
push
dec
sub
mov
xchg
call
xchg
dec
and
push
test
mov
int3
cld
sbb
adc
filds
loop
leave
fwait
jp
cld
lret
jno
popa
clc
sarb
and
add
fwait
push
cmp
mov
sbb
add
sahf
ds
cmp
cmp
popa
ficomps
ljmp
pop
adc
pop
cwtl
lds
mov
xchg
pop
arpl
pop
mov
cltd
push
mov
and
jae
xor
das
in
pop
ret
or
lret
fmull
sub
mov
xchg
icebp
in
push
leave
jg
stos
movsb
gs
mov
push
popa
sahf
dec
lahf
add
fcomps
lret
mov
or
mov
enter
push
adc
rolb
inc
add
cmp
gs
inc
jo
cmp
inc
mov
test
add
sbb
cli
icebp
test
xor
test
dec
mov
rcr
push
out
add
push
mov
inc
in
mov
int
pop
or
fwait
mov
pop
and
inc
lods
push
es
xchg
lret
pop
sbb
in
jnp
andb
xchg
clc
mov
push
pop
iret
movsl
xor
js
enter
xor
add
pop
test
xchg
iret
dec
mov
push
notb
orb
enter
js
jne
mov
rorl
lret
xor
test
pop
out
cmp
jge
roll
mov
andl
clc
enter
push
aad
sarb
decl
leave
inc
js
mulb
push
pop
paddb
frstor
mov
cmp
loopne
faddp
or
inc
pop
mov
xorl
pop
jmp
movsl
or
repz
sbb
and
iret
ja
fidivl
popf
mov
aad
jmp
pop
jbe
das
dec
add
repnz
insb
fistpll
sub
ljmp
push
test
or
inc
in
movsl
jp
out
sub
popw
jo
ds
jge
dec
mov
in
cmc
cmp
iret
pop
mov
ljmp
sahf
sub
lds
test
cltd
inc
or
and
jnp
adc
int
icebp
mov
cli
repnz
jge
inc
sub
or
call
aas
xchg
xchg
cmpsl
jo
insb
rclb
sbb
stos
push
lahf
xor
das
adc
mov
mov
xor
cmp
inc
dec
inc
mov
out
adc
les
adc
test
mov
xor
ret
dec
sub
cmp
ljmp
xchg
imul
icebp
jecxz
sub
or
pop
add
xor
cld
fs
negb
fwait
mov
neg
cli
ret
ljmp
mov
mov
xor
add
cmp
pop
xor
adc
push
sar
push
insb
inc
push
cmp
adc
inc
inc
add
xchg
cmp
rcrl
je
jb
cwtl
mov
shr
outsb
gs
das
push
mov
mov
sub
enter
jne
scas
je
lods
loope
push
cmp
cmp
xchg
cs
dec
sbb
popf
ss
jmp
test
mov
sbb
pop
scas
je
movsb
and
clc
enter
xor
push
pop
mov
cld
leave
jg
test
mov
pop
inc
imul
in
add
stos
mov
std
dec
in
and
jo
ja
push
xor
push
aad
jb
jo
jbe
jbe
pop
aaa
sub
xor
jb
orl
xchg
sub
lea
inc
mov
andb
adc
cltd
push
add
stos
mov
cmp
lods
mov
iret
jne
inc
lret
push
in
jno
and
cld
cli
cmp
js
outsl
push
add
shrl
lods
xor
or
fsubs
mov
and
int
mov
sar
popf
into
mov
movsb
cmp
cmc
push
fmul
arpl
fistl
in
movsl
in
jb
mov
sbb
in
and
hlt
aaa
pop
xchg
push
cmp
enter
fwait
or
xor
mov
jo
insb
mov
subb
imul
cmc
cmpsb
push
jecxz
je
cmc
addr16
sub
inc
frstor
jp
cmp
and
pop
repnz
sbb
inc
insl
push
sub
adc
insl
push
adc
xchg
imul
pop
mov
mov
outsb
cmp
cwtl
dec
ret
into
test
mov
xor
jae
jg
dec
sbb
imul
mov
out
imul
adc
inc
leave
imul
jmp
ret
inc
pusha
test
lahf
sbb
dec
cmp
xchg
xchg
add
push
jmp
mov
jge
jmp
push
jecxz
test
inc
scas
lds
call
jmp
cli
cwtl
out
movsl
std
cs
clc
push
pushf
bnd
push
fstp
dec
clc
aam
cmp
add
add
sbb
loope
cmc
fdivrl
jl
cltd
push
mov
inc
mov
dec
jmp
cwtl
mov
jno
inc
jg
jg
jnp
mov
sbb
icebp
repz
popa
dec
mov
cs
jp
int
popa
xchg
push
lcall
enter
das
sbb
ljmp
and
shlb
jmp
stos
add
mov
inc
div
jo
jns
js
jo
mov
fildll
push
stos
shr
sbb
jns
rorb
cmp
pop
adc
dec
cmpsl
div
cmpsl
pop
jne
sub
out
ss
lret
nop
mov
mov
adc
mov
sti
fnstsw
stos
pusha
dec
or
cmc
or
movsl
in
stc
push
insb
jg
add
icebp
fnstsw
out
xchg
adc
js
test
sub
pop
mov
mov
mov
push
jnp
jno
fidivs
cmp
jg
in
push
loop
xchg
jmp
leave
ret
and
clc
cmpsl
fcompl
lock
loop
inc
dec
insl
mov
mov
adc
inc
ljmp
imul
shrb
cwtl
cmp
out
mov
sbb
jg
push
sti
repnz
loopne
mov
or
push
je
fidivrs
mov
dec
sbb
sbb
lock
lods
stos
inc
add
icebp
xchg
dec
shll
jmp
icebp
insl
pop
inc
dec
sub
adc
sub
mov
sbb
imul
popa
pop
xchg
push
pop
inc
jbe
lds
jnp
fildll
cmp
push
outsb
cmp
jge
mov
mov
into
in
shl
or
popf
mov
inc
and
add
pop
mov
in
push
dec
dec
icebp
adc
push
and
push
fucom
ret
cmpsl
cmp
pop
pop
and
test
cs
arpl
jno
lret
mov
arpl
adc
inc
jg
mov
sbb
push
or
jns
xchg
mov
jbe
out
out
in
dec
iret
scas
outsb
push
repz
mov
mov
ja
push
or
mov
inc
xor
mov
and
add
xor
nop
mov
add
xchg
or
inc
out
jecxz
lret
inc
xchg
mov
inc
dec
inc
fstpl
and
fwait
lods
enter
hlt
xor
test
sbb
es
cltd
cs
inc
fnsave
pusha
mov
mov
dec
and
xchg
in
nop
and
xchg
lods
push
iret
mov
outsl
push
xchg
insl
ret
and
loop
push
int3
clc
mov
test
xchg
mov
out
enter
jl
sub
not
mov
scas
aas
mov
push
mov
and
mov
or
push
or
jmp
add
mov
jp
insl
mov
rcll
or
jge
movsb
ja
sbbb
mov
inc
sub
sub
sub
adc
daa
jae
ret
pop
pop
jle
lret
jae
sbb
add
mov
scas
dec
stos
or
fsts
mov
pop
jb
jmp
push
push
pop
xor
sahf
cwtl
movsb
cld
inc
mov
scas
shlb
rcll
cld
add
inc
leave
imul
js
fisubs
fcmovnu
sub
imul
insb
dec
pop
div
ret
mov
loope
xchg
and
add
pop
lahf
mov
sub
mov
lahf
adc
dec
stc
mov
mov
aad
rcll
sub
int3
adc
sub
pusha
divb
cmp
push
cmc
xchg
cmp
jge
aaa
add
ret
inc
push
mov
fisubs
mov
push
fiadds
in
and
and
shrb
inc
lods
outsb
adc
sbbl
mov
mov
cmpsb
lea
cwtl
ret
loope
jb
cmpsl
into
loop
add
jns
jb
in
lds
dec
xorb
xchg
popl
stc
and
jecxz
mov
fbld
adc
mov
xchg
add
nop
sub
outsl
lock
xor
jns
or
sub
pop
ficoms
jns
pop
je
dec
lahf
mov
fs
or
push
lret
dec
mov
pop
sbb
lea
push
mov
pop
sub
cmp
imul
xchg
fimull
outsb
test
push
mov
test
xor
sbb
bound
mov
pop
sub
add
mov
stc
shlb
inc
jp
outsl
dec
cmp
or
xlat
or
ret
xorl
int3
sbb
jo
std
scas
mov
syscall
sbb
inc
xor
jecxz
mov
and
in
sbb
jno
jnp
and
jnp
mov
pop
dec
icebp
xor
adc
sub
lock
popf
xor
mov
ret
and
sub
js
mov
jp
jns
cmp
sarl
mov
into
cwtl
sbb
aas
scas
mov
mov
xor
jae
jns
jbe
hlt
fiaddl
jle
ss
stos
bound
test
lods
ss
pushf
jg
sub
popa
mov
mov
jge
sbb
xor
fstl
loope
insb
lods
ret
sub
mov
xchg
ja
faddl
mov
test
dec
pop
xor
adc
cmp
jbe
inc
pushf
stos
xchg
dec
aas
sbb
loop
les
lret
inc
and
movl
lock
mov
shrl
push
les
adc
sbb
das
mov
negb
out
jge
push
xor
arpl
mov
cmp
jg
ficoml
aaa
mov
pop
push
insl
mov
loope
xchg
out
pop
test
xor
sub
adc
jns
filds
or
push
icebp
js
xor
jg
push
fldcw
sub
or
leave
loope
sbb
leave
les
int3
adcb
jbe
stc
out
or
in
xchg
cmp
push
rorl
dec
or
dec
adc
mov
sbb
and
mov
int
cmp
test
xlat
jmp
cwtl
enter
inc
pop
xor
aaa
mov
mov
mov
dec
fcmove
fcomps
sub
add
mov
adc
aas
pop
fstpt
loope
cmpsb
mov
test
mov
cmc
xor
aam
mov
add
add
dec
push
or
push
add
or
push
fdivr
pop
lret
push
fsubrs
add
xor
inc
clts
lret
pop
pusha
divb
mov
add
mov
jp
popf
daa
cld
subl
out
xor
pop
aad
jnp
test
push
iret
add
dec
dec
and
gs
xchg
cmc
addb
pop
adc
mov
mov
lods
lret
cltd
pop
inc
add
mov
outsb
cmp
jb
cmp
push
or
mov
notl
cmp
xchg
imul
std
pop
mov
jno
jb
ljmp
xor
ja
imull
sub
rcrb
jge
sahf
jle
jmp
arpl
lods
push
test
jno
stos
nop
fadds
sbbl
repz
push
nop
pop
jg
pushf
cmpsb
insb
push
sub
cmpsl
inc
mov
cs
test
xor
xchg
daa
jg
fsts
inc
adc
in
outsb
loopne
pusha
pop
imul
sub
imulb
push
dec
das
add
ja
adc
xor
fs
or
push
push
pop
cmp
push
push
std
pop
incb
jmp
push
jge
pop
sahf
jle
dec
ss
lods
cmc
add
jne
bound
add
push
dec
icebp
mov
fadd
xor
mov
outsb
adc
sub
xchg
push
xor
xor
pop
mov
loopne
adc
cld
push
decl
dec
dec
mov
lret
xchg
std
jg
sbb
jmp
pop
test
incb
sbb
call
xchg
int3
sbbl
jnp,pn
out
inc
dec
enter
inc
sbb
mov
sarb
pushf
mov
dec
push
pusha
cmpsl
pop
ss
dec
ja
inc
dec
movl
mov
jge
sbb
and
mov
mov
add
cmp
addr16
sub
push
test
mov
in
adc
int3
icebp
enter
out
or
pushf
lock
pop
or
cltd
dec
icebp
jecxz
arpl
imul
and
push
dec
pop
push
fcmove
sub
insl
xchg
pop
push
inc
nop
aam
mov
add
mov
les
inc
fwait
shl
and
ja
xor
jb
mov
loop
mov
push
movsl
xchg
xor
stos
or
and
pop
movl
ljmp
lret
xor
lahf
push
rcr
popf
adc
dec
out
fimull
das
inc
xchg
jecxz
in
mov
daa
pop
pop
inc
and
std
imul
lods
shlb
jecxz
ja
add
xor
mov
pop
shlb
fmuls
dec
fstl
movl
loopne
jo
inc
pushw
pusha
loop
out
fsubrl
add
xor
jne
gs
push
popl
pop
mov
iret
pushf
cli
rcl
imul
adc
cmp
je
imul
pop
xor
pop
xor
movsl
mov
mov
jbe
jg
movsl
adc
daa
adc
mov
mov
xchg
lahf
mov
test
test
movsl
sub
mov
mov
jmp
dec
es
dec
mov
test
stc
pop
adc
cmpsb
pop
orl
into
sbb
mov
rcr
out
mov
icebp
aam
rcrb
inc
push
pop
insb
rolb
stos
loop
in
add
mov
sahf
ret
push
or
cmpl
fs
mov
imul
ljmp
in
xor
sub
cmp
xchg
fimuls
outsb
xchg
hlt
push
fwait
push
std
and
out
sbb
stos
xor
pop
pushf
xchg
gs
jne
lods
shl
cwtl
repz
push
rep
icebp
fninit
fcoms
lds
push
aad
mov
sbb
addl
add
rorl
pop
into
xor
negb
jle
fnstcw
pop
xchg
and
fnsave
outsl
imul
sti
mov
mov
and
fsubrl
cli
jnp
push
sub
mov
pop
bswap
ljmp
addb
add
aaa
loopne
ficomps
call
outsl
jle
cld
mov
nop
dec
test
cmpsb
or
xlat
fsubl
sbbb
aas
stos
sub
add
lret
idivb
xor
mov
aam
push
pop
ret
xor
dec
mov
fists
pop
fistl
pop
insl
and
movsl
push
mov
dec
imul
pusha
mov
mov
cmpsl
pop
aam
inc
mov
inc
aaa
mov
inc
fwait
in
fsubrs
inc
mov
scas
icebp
mov
adc
mov
xor
and
imul
shrb
or
pop
mov
popl
test
imul
add
fstps
push
test
pushf
sbb
adc
mov
ss
fcompl
adc
xchg
test
stos
pop
shll
fwait
xchg
add
inc
sub
add
cmp
lea
xor
mov
xchg
test
testl
sub
lds
mov
fisubl
push
jp
fisttpl
nop
mov
inc
roll
add
pusha
xchg
out
iret
dec
imul
aas
pop
ficomps
insl
sub
and
mov
cld
jno
cmpsl
jnp
imul
insl
pop
sub
enter
xchg
fdivl
push
jae
pop
pop
mov
clc
add
out
pushf
xor
dec
pushf
ljmp
outsl
mov
sub
sub
mov
imulb
adc
xchg
mov
inc
popa
adc
pusha
mov
and
scas
dec
jg
adc
jge
movsb
xchg
add
ret
mov
add
jae
pop
clc
out
xchg
cmpl
or
bound
repz
aas
rcll
addr16
pop
dec
mov
cmp
xchg
and
fcompl
jecxz
in
movsl
jbe
and
mov
inc
cmp
daa
cs
dec
push
jp
fcoms
loop
mov
into
add
daa
out
lods
addr16
push
sbb
int
fisubrs
mov
arpl
jmp
inc
icebp
loop
shld
sub
das
insl
clc
in
mov
pusha
cs
sub
jle
out
adcl
mov
pusha
pushl
mov
xor
xchg
cmp
pop
inc
les
loope
scas
sub
and
adc
mov
stos
lock
scas
inc
inc
repnz
adc
xor
push
repz
outsl
mov
pusha
shlb
dec
sbb
adc
stos
jle
sbb
or
rcrl
mov
mov
imul
ret
out
repz
dec
imul
pop
and
sub
pushf
test
test
lds
cmpsb
addl
jnp
mov
lahf
stos
pusha
nop
push
fucomip
or
nop
je
sbb
mov
sar
out
inc
xchg
rclb
imul
push
scas
pop
outsl
mov
pop
rcl
out
push
xor
in
js
sub
int
xlat
loopne
cmpsl
movsl
push
out
lcall
and
inc
gs
lahf
cmp
scas
inc
cmp
sub
lods
movsl
xchg
leave
clc
bound
lahf
addr16
adc
ffree
scas
pop
mov
pop
sub
push
pop
bound
pop
add
inc
mov
arpl
movl
jbe
and
movsl
nop
push
enter
sbb
pop
int3
jmp
lahf
insb
jecxz
push
clc
adc
stc
pushf
cmpsb
and
fmuls
fcoms
fsubrl
into
ja
mov
mov
cmp
adcl
xchg
sbbb
pop
in
push
loopne
adc
das
cmp
in
ret
out
adc
lea
mov
fbstp
add
inc
adc
shlb
sbb
js
pusha
fimull
pop
jb
xor
and
dec
adcl
pop
mov
sub
int3
jge
jae
push
popf
stos
das
mov
sbb
imul
push
pop
lods
inc
imul
mov
mov
xchg
fadds
push
mov
pushf
sub
movsl
sahf
adc
push
push
cmp
arpl
pop
stos
xor
loop
lock
jae
in
pop
cwtl
jp
or
jg
jno
sti
repz
jge
dec
inc
mov
rcrl
loope
push
bound
shrb
int
xchg
leave
test
cltd
pop
jg
xor
and
sahf
mov
push
in
or
mov
mov
daa
lcall
dec
mov
xchg
push
fcompl
iret
pop
sub
jle
mov
clc
xchg
cld
add
test
sub
mov
bound
sbb
orb
jb
bsf
outsl
push
loopne
aaa
dec
std
lea
out
jecxz
mov
mov
xor
iret
dec
jge
sbbb
dec
mov
es
push
inc
or
mov
popf
sbb
inc
pop
mov
mov
movsb
dec
push
lret
and
cmpsl
inc
push
movsl
push
mov
push
and
loopne
test
push
sub
cmp
sahf
out
jnp
gs
push
add
imul
mov
and
jne
xor
cmovg
lret
enter
sahf
pushl
icebp
mov
les
xchg
inc
jnp
andl
mov
dec
aad
lret
jl
imull
ds
sub
popf
mov
sbb
pusha
out
pop
out
fdivl
ror
lahf
cmp
xchg
lret
aaa
mov
imul
scas
and
cmp
push
loope
sbb
push
adc
pop
or
not
out
lret
xchg
daa
jl
enter
hlt
jecxz
xrelease
or
scas
sub
inc
mov
test
fimuls
jg
dec
jno
loopne
pusha
ja
pop
jnp
icebp
add
movsl
insb
push
xor
incl
xlat
dec
scas
xchg
orl
sub
jle
es
insb
mov
movsl
out
andl
cwtl
scas
popf
imul
push
mov
or
popa
jnp
lret
or
std
mul
sbb
and
jnp
js
out
rclb
das
or
enter
mov
ss
pop
outsb
shll
lock
dec
mov
cmp
mov
stos
je
mov
add
je
sbb
pusha
mov
mov
das
ljmp
roll
loop
es
xor
jo
cli
xchg
inc
stos
out
push
andb
dec
les
out
ja
inc
and
fisubl
aad
leave
xchg
in
dec
fs
cwtl
xchg
push
add
jg
and
inc
out
lock
push
stos
sbb
rclb
pop
adcb
xor
mov
int3
xchg
cmp
cmp
inc
dec
xchg
das
loopne
jecxz
jmp
sub
mov
pop
ljmp
lahf
rcrb
mov
ret
out
mov
ret
or
or
or
and
fsub
sub
lods
or
sti
incl
inc
loopne
mov
sbb
mov
cld
cmp
vcvtps2dq
and
or
add
clc
adc
mov
ja
cli
leave
dec
mov
aas
mov
ret
popf
sub
sbb
jle
lcall
sub
or
cmpsb
xor
push
pop
stos
in
std
pop
movsb
cli
add
imull
mov
adc
aad
xor
fs
addr16
in
jmp
push
xchg
inc
push
into
sub
test
sbb
xor
ret
add
add
or
dec
sbb
or
fsubrs
les
inc
call
or
aad
mov
faddl
sbb
dec
test
xchg
imul
pushf
and
mov
pop
fucomp
ret
test
mov
sar
pop
mov
push
adc
mov
or
mov
jbe
inc
mov
jne
loop
jg
test
test
sub
mov
add
test
jp
insl
js
dec
push
adc
jmp
popf
mov
test
or
push
fwait
ja
pop
lret
xor
movsb
fisttps
xchg
mov
rorb
lock
cwtl
cmp
mov
jp
cmp
pusha
xlat
ret
shr
pop
sbb
pop
xchg
out
repz
pop
xchg
sbb
jg
repnz
push
xor
lods
mov
push
in
jb
rcrb
imul
mov
out
cmpsb
push
insb
push
adc
jno
popf
push
jmp
jg
adc
cmp
xchg
in
insl
out
stos
shrb
adc
fstpt
jns
pop
sub
dec
arpl
lcall
fwait
aaa
cld
mov
pushl
shl
push
mov
xor
pop
fldt
in
in
or
mov
fnstenv
xor
loope
shlb
add
push
sbb
push
shrb
lods
cmpsb
jb
inc
xlat
aad
and
enter
push
mov
in
iret
or
push
stos
pop
popf
adc
xor
pop
add
int3
in
pop
mov
adc
adc
jmp
push
pop
mov
sub
xor
repz
out
jb
push
repnz
jle
fwait
sub
push
jb
loop
and
mov
jnp
sahf
cmp
pusha
out
test
or
push
mov
jne
sbb
loope
lret
mov
enter
inc
je
jo
subl
lahf
add
xchg
cld
xchg
aad
mov
adc
xchg
jl
cmc
sub
sbb
sub
fbstp
sub
dec
mov
or
out
push
xor
xchg
pop
cmp
dec
dec
xchg
faddl
in
pusha
adc
sub
mov
aas
xor
mov
popf
aaa
mov
inc
jb
xchg
lods
mov
and
stos
mov
imul
mov
mov
mov
fsubs
or
int3
rolb
js
loopne
jle
bound
and
adc
push
sti
mov
repnz
xor
dec
inc
cmc
lahf
or
fildll
mov
test
mov
xchg
stos
das
in
fstps
dec
and
xor
xor
outsb
push
cmp
sub
idivl
lahf
sahf
add
jecxz
repz
add
xor
lcall
mov
sbb
fadd
xchg
fucomip
pop
sti
mov
outsl
les
test
pusha
ljmp
mov
mov
jge
mov
adc
data16
mov
sub
jle
mov
movsl
fcom
xchg
ret
and
fcmovb
nop
jmp
jno
and
movsb
lea
in
jnp
int
int
leave
add
and
sti
jo
pop
dec
inc
adc
push
jno
jmp
pusha
xchg
add
adc
mov
roll
xor
inc
jmp
pop
fisttpll
jo
mov
add
mov
pop
test
cmp
lret
fucomip
jmp
inc
add
subl
std
mov
inc
add
fbld
mov
jno
fimuls
sbb
cmp
xchg
or
jecxz
stos
ucomiss
mov
stos
in
outsl
repz
roll
in
pusha
xor
adc
shr
sub
mov
int3
mov
int3
ret
push
pop
mov
aas
mov
idivl
sub
cmpsl
mov
sti
pop
imul
scas
mov
inc
xchg
mov
or
cmpb
int
sub
aas
roll
mov
jecxz,pn
xchg
test
inc
cmp
imul
call
dec
es
sti
ljmp
sub
sub
and
clc
mov
ja
mov
inc
and
cmp
aad
aam
test
pop
cmp
push
cmc
in
loopne
jae
ffree
inc
movsb
int3
pop
add
xor
or
jnp
xlat
or
push
jp
neg
popf
fstpl
aas
lods
jo
xchg
push
loope
inc
insl
pusha
gs
inc
add
icebp
cmp
adc
lcall
xchg
or
in
cld
aaa
pop
cmpsb
push
addb
push
dec
hlt
mov
lds
mov
test
pop
cmp
scas
in
in
mov
add
and
dec
or
add
repz
mov
inc
in
fs
mov
jmp
cmpsl
cwtl
sarl
arpl
push
lahf
iret
fidivs
mov
orb
add
in
rcrb
lods
gs
cmp
mov
jmp
push
mov
cmp
pop
sbb
not
jo
pop
xor
and
stos
arpl
out
mov
add
lods
jp
shll
sbbb
outsl
cmp
dec
pop
cmp
dec
popf
xchg
mov
jbe
test
repz
push
sub
push
dec
popf
push
lret
rolb
dec
add
push
pop
shr
jo
dec
xchg
addr16
pushf
adc
movsl
xor
mov
xor
lock
sti
shl
cmpsl
and
xor
sub
ret
mov
mov
lods
mov
sbb
or
subb
enter
out
leave
pop
in
sbb
inc
xor
and
sahf
adc
popa
insb
push
push
mov
push
mov
pop
aad
fistps
jb
or
pop
pop
test
inc
mov
repz
adc
out
clc
out
vcmppd
fildl
cld
xchg
mov
jne
and
xchg
daa
xchg
add
dec
insb
push
sub
jae
xor
adc
and
cmc
mov
hlt
inc
in
xor
mov
setns
cld
leave
std
por
or
xchg
dec
pop
jl
fcoml
xor
push
and
in
dec
mov
mov
shrb
xchg
clc
jo
jecxz
cld
jg
and
subb
jo
or
movsl
mov
in
roll
ljmp
mov
mov
scas
push
cwtl
pop
pop
cmp
sub
insl
jno
inc
mov
xor
cmc
enter
lea
cmpsb
xlat
xchg
mov
push
or
push
cs
xchg
mov
cmp
add
or
jg
xchg
ja
inc
aas
jmp
pop
fdivrs
fisubs
inc
cmpsl
int3
dec
push
aam
sahf
mov
sar
adc
cmp
or
push
loope
pop
shrl
adc
and
hlt
js
daa
jo
mov
imul
lcall
clc
aas
and
or
out
mov
xor
jle
or
imul
adc
pushf
ljmp
adc
daa
jg
cmp
popf
sahf
idiv
imul
dec
pop
jge
cmpsl
cmp
test
movsl
jl
jle
inc
popl
mov
cmpsb
jmp
push
adcb
xor
movsb
cmp
lret
movsb
ja
mov
jmp
fdivrl
fwait
jmp
popa
ret
fwait
lcall
jg
push
test
rcll
ret
jae
push
out
lds
sbbb
rorb
mov
adc
inc
and
dec
cmpsl
clc
xchg
xchg
stc
mov
ljmp
fwait
daa
inc
and
test
into
movsb
or
sti
aam
loopne
cmovg
pop
xor
scas
sub
xchg
xchg
pop
add
mov
cmp
movsl
jnp
outsb
leave
arpl
and
push
pop
pop
or
aad
cwtl
ja
pusha
cmp
sysexit
daa
xor
mov
mov
aam
cmc
mov
sarl
and
in
test
xchg
in
inc
aad
test
pop
out
cli
mov
push
cmpsl
imul
pop
mov
mov
stos
out
sbb
jae
rcrb
nop
mov
cli
clc
mov
subb
fcoms
test
mov
pop
in
lock
sbb
inc
es
shl
xlat
sbb
icebp
cli
cmp
mov
jno
aas
addr16
mov
mov
or
test
test
ja
ret
pop
roll
repz
mov
call
sbb
or
xchg
inc
add
lods
xchg
daa
shrl
fstp
insl
or
sub
test
negl
mov
int3
pop
sub
imul
sbb
icebp
adc
pop
into
pop
pop
std
std
lods
and
add
gs
xor
or
or
mov
mov
subl
cmc
int3
pop
pusha
adcb
xlat
pushf
cmp
ljmp
cmp
mov
jge
or
push
cmp
jg
cld
jmp
fidivrl
imul
mov
add
push
inc
jl
lea
scas
fistpl
add
loope
stos
ja,pn
out
stos
jmp
or
in
mov
adc
jno
je
ja
stos
pop
sbb
sahf
cmp
bswap
out
pushf
push
popf
mov
lea
js
outsl
sub
inc
loope
das
mov
mov
cmpsb
push
mov
push
adc
jbe
cmp
shl
loop
jns
dec
pop
addr16
ss
ret
leave
stos
pushf
mov
add
add
nop
repnz
jae
xchg
subb
adc
notb
cmp
xchg
icebp
mov
mov
xor
mov
mov
inc
cmpsb
jl
pop
jmp
sbb
aaa
add
xchg
jp
movsl
sbb
loopne
pop
ret
push
pop
dec
je
stc
sub
shlb
xchg
mov
int
scas
addb
daa
jl
dec
or
xor
mov
cmpsl
roll
movsl
ret
cli
out
xlat
std
lock
out
cmc
int
xor
fisttpll
xor
mov
xchg
testb
fmull
stc
les
lret
cmpsb
ljmp
andb
js
js
jo
mov
icebp
jne
call
and
sti
sub
xor
shl
push
nop
add
mov
pop
das
jo
mov
pop
ret
mov
or
xlat
repnz
and
mov
jl
mov
out
subl
stos
add
enter
jp
inc
lock
dec
jns
jl
adc
pop
inc
mov
icebp
add
jns
sub
mov
xchg
sub
mov
xchg
andl
sbb
jne
mov
push
pop
inc
jg
ss
add
mov
insb
cmp
imul
mov
or
stos
vorps
push
stos
pop
aad
divl
and
es
je
xlat
pop
lods
xor
adc
dec
cwtl
loop
fdivrl
or
leave
hlt
aad
adc
add
fisttpl
ds
mov
cmc
push
and
sub
sbb
xchg
push
mull
mov
add
inc
jne
in
repnz
inc
xchg
clc
cmpxchg
lret
sub
ret
cmc
mov
lock
aad
inc
push
mov
push
ret
push
leave
dec
sti
pop
nop
call
jns
scas
iret
in
and
sahf
stos
xor
xor
andb
out
or
adcb
jno
test
lahf
std
adc
and
out
pop
daa
mov
lods
mov
mov
mov
dec
bound
adc
loop
xor
mov
mov
sbb
pop
shlb
adc
ja
inc
xchg
lcall
jmp
pop
outsb
iret
mov
adc
mov
add
sbb
lret
push
push
xor
inc
sbb
movb
pushf
push
cmp
incl
popa
loop
leave
cld
incl
fcom
xchg
mov
xchg
sti
add
out
or
mov
push
sub
sub
sbb
inc
adc
arpl
mov
jne
aaa
jp
xor
xlat
dec
call
push
pop
pusha
subl
sarb
rcr
pusha
push
sub
sbb
clc
cmpsl
fmull
lea
aas
faddl
xchg
or
or
cwtl
xchg
jbe
scas
fimull
lock
daa
push
push
dec
mov
mov
int3
lea
mov
sub
dec
aaa
lock
mov
pop
pop
jns
push
into
sbb
ret
sub
mov
std
add
iret
jo
jle
in
mov
mov
imul
jnp
push
mov
repz
pop
jp
shr
mov
movsb
popa
pop
xchg
mov
insb
into
adc
push
int
lea
lock
or
fs
dec
sub
cmpsb
mov
jmp
mov
ficoml
inc
es
jle
mov
out
loope
jg
sub
loop
add
test
shll
jle
mov
jl
jmp
pop
dec
fistps
push
rorl
andb
sbbb
enter
push
push
push
addr16
out
xorb
mov
push
add
push
mov
lret
xchg
push
dec
inc
mov
push
lds
or
leave
out
cmp
jns
jne
or
int3
push
pushf
push
int3
sbb
shl
push
sub
lods
adc
inc
shlb
jnp
test
outsb
mov
cwtl
icebp
inc
jle
xchg
xchg
push
ds
add
sub
inc
lock
xchg
push
mov
sub
aam
fsubrs
or
push
ficoms
lahf
pop
lea
or
out
cmp
jmp
test
push
les
jb
orl
push
insl
mov
std
frstor
stos
pop
imul
stos
inc
or
mov
aad
dec
jmp
sti
jnp
inc
cmp
jbe
in
sarl
jmp
push
test
mov
mov
pop
mov
fistl
sub
js
stc
or
or
and
mov
loope
jnp
cmpsb
adc
ja
dec
idivl
sub
outsb
dec
mov
and
js
push
fsubrl
lea
mov
add
dec
inc
cmpsl
mov
outsb
inc
call
jae
sub
icebp
and
ds
orb
outsl
es
push
pop
xchg
xchg
jecxz
stos
push
in
xchg
stos
xchg
movsb
int
xchg
les
stc
push
das
dec
mov
dec
iret
mov
and
push
stc
mov
sbb
fisttpl
sarl
out
inc
xor
aas
cmp
xchg
pop
sub
mov
cmp
xor
or
sbb
jecxz
and
out
popa
mov
es
xchg
jbe
add
lods
adc
popa
push
ja
push
xchg
sub
popa
xchg
and
es
push
sub
push
cs
sbb
fwait
loopne
test
ds
mov
mov
sub
je
jo
and
xor
fwait
movsl
call
inc
lahf
or
lret
gs
outsb
xor
xchg
mov
jbe
fwait
repnz
pop
push
outsl
out
xchg
push
and
aad
jne
int3
pushf
pop
mov
pop
roll
enter
dec
or
mov
in
jl
sbb
icebp
xor
data16
jae
dec
adc
mov
dec
int
sbb
xchg
cmc
lea
imul
dec
mov
xchg
out
fiadds
arpl
push
in
dec
int
into
adc
add
std
arpl
into
pop
mov
inc
inc
idivb
pop
xchg
fwait
push
xchg
lds
mov
sub
repz
call
pushf
pop
pop
loope
pusha
lds
adc
mov
inc
mov
push
dec
int
mov
mov
pop
cli
cli
in
mov
or
scas
fs
sbb
inc
rorb
add
lods
xchg
scas
mov
lods
push
icebp
test
sub
pop
nop
outsl
add
aam
mov
lret
imul
mov
sub
sbb
mov
nopl
jp
cmp
push
mov
and
ss
in
scas
test
cmpl
scas
jl
insb
jmp
les
cmp
mov
rcl
fcompl
push
push
fs
xor
jb
loope
int
sub
ret
ffreep
jo
xlat
lahf
xor
cmpsl
adc
popf
cs
cmp
sbb
xchg
stos
mov
in
and
xchg
push
test
jmp
jb
sti
inc
or
push
mov
mov
inc
ljmp
add
mov
pop
scas
leave
push
fsts
mov
jns
clc
mov
mov
cmc
dec
pop
mov
repz
repz
push
hlt
push
mov
lds
adc
pop
ja
sub
hlt
xor
adc
loop
dec
pop
pop
fdivl
xor
aad
es
inc
data16
sbb
push
stos
imul
add
sbb
lock
add
xlat
or
mov
es
aas
mov
push
xchg
lods
add
dec
inc
inc
arpl
sbb
dec
sub
add
cmc
cwtl
packssdw
test
fwait
fwait
dec
ret
mov
sahf
push
inc
jo
and
test
clc
xlat
inc
mov
sub
mov
sbb
sub
cmc
mov
lret
sbb
jb
adc
lahf
mov
push
lea
inc
mov
mov
cmpsl
mov
outsl
imul
mov
jmp
jg
sahf
test
sahf
nop
sbb
sub
repz
jae
testb
fcoms
fmul
lods
lcall
inc
sbb
mov
jge
leave
stos
sub
push
inc
into
test
push
dec
aaa
cmpb
enter
push
adc
sbb
lcall
jg
xlat
sub
rol
sbb
xchg
sbbb
repnz
sbb
shlb
dec
xor
call
into
in
mov
aad
ljmp
filds
insb
sub
and
mov
mov
jmp
mov
jnp
stos
movsb
or
je
sbb
je
sar
scas
subb
loopne
xchg
inc
sbb
inc
test
in
je
das
out
in
cmpsb
out
in
lods
push
jno
pop
repz
add
sub
and
out
push
jns
xchg
stc
pop
add
and
or
orl
or
cltd
sub
orb
sbb
mov
lods
mov
jno
push
in
push
repz
push
daa
fnstcw
jo
pop
xchg
pushf
fisubrs
lods
int
push
fistps
ljmp
dec
jo
and
dec
lea
mov
arpl
cmpb
and
xchg
insb
ja
jmp
lods
push
lds
cltd
dec
mov
or
aas
or
int3
leave
sbb
jb
xchg
mov
out
push
stos
sub
mov
ljmp
js
pop
int3
scas
pop
and
sbb
jb
and
dec
mov
cmp
xchg
push
mov
mov
dec
jnp
es
sbbl
rcrl
repz
fstps
in
pop
xor
adc
scas
pop
or
push
xchg
outsb
popw
xchg
xchg
xchg
in
icebp
cmc
adc
xor
and
cmp
mov
div
pop
inc
repz
out
out
inc
pusha
jbe
fistl
pop
mov
addl
xor
mov
negb
mov
mov
inc
mov
jnp
xchg
push
mov
mov
jp
push
pop
dec
ds
cmc
sbb
pop
leave
cmpl
xchg
loop
mov
data16
or
dec
xchg
and
pop
push
adc
sbb
jnp
push
sbb
stc
mov
or
sub
pop
pop
loope
dec
jp
test
stos
ds
out
dec
ljmp
xor
setnp
xor
xor
inc
test
xchg
jmp
mov
test
out
test
sub
pop
mov
frstor
rorl
lahf
mov
shrb
inc
clc
lar
or
lret
fprem1
je
das
fucom
fstpl
jae
shlb
add
jno
add
lods
xchg
fs
outsl
insb
or
sub
jg
fadds
mov
jmp
nop
inc
mov
scas
ljmp
xor
mov
sbb
dec
sbb
push
call
insl
xchg
sarb
xor
or
fldt
dec
mov
push
ja
adc
pop
push
out
ss
cmpsl
into
sub
test
and
repz
inc
in
imull
mov
add
pop
mov
je
and
enter
xchg
inc
or
add
mov
jle
jbe
cli
cmp
pop
lahf
out
clc
sbb
int
pop
das
mov
pop
add
jmp
scas
jno
fisttpll
testb
adc
cmp
add
pop
imull
rcrl
cli
or
xchg
dec
enter
aad
or
repnz
test
jge
dec
mov
cmp
push
sub
push
add
push
leave
outsb
cmpb
aad
adc
xchg
mov
addr16
xchg
je
shr
xor
orl
cli
and
push
sub
outsb
sbb
jnp
clc
xor
cmp
jle
shll
push
loope
dec
js
lret
sub
adc
jae
test
test
xchg
lret
mov
sub
aaa
cmpb
pop
push
cld
daa
scas
cmpsl
sbb
add
in
mov
xchg
icebp
cmc
je
notl
pop
adc
in
sub
ja
adc
xchg
ds
jecxz
insb
clc
dec
incb
xchg
pop
loopne
out
cmp
clc
jbe
cmp
cmp
cmp
push
in
push
fcmovbe
and
inc
int
shlb
xchg
fildll
sahf
clc
push
ror
mov
movsb
es
insb
and
notb
mov
xlat
les
and
ret
sub
sbb
cld
xor
pop
fiadds
cmp
pop
mov
insl
data16
movsb
jl
aaa
fadds
test
bound
sar
inc
inc
loope
xor
repnz
js
or
mov
sbb
sbb
lods
lahf
xchg
inc
push
stc
jp
add
lahf
sbb
jne
fstpl
mov
and
ret
jbe
add
ret
pop
aaa
xor
jecxz
mov
movsl
add
movb
dec
cltd
fimull
mov
rcrb
nop
mov
push
dec
stos
or
and
sub
dec
lods
cwtl
aas
or
mov
sub
imul
cmc
lods
mov
nop
aas
adc
mov
push
xchg
mov
in
hlt
mov
test
mov
jmp
sahf
fsubrl
lock
jae
xchg
jo
clc
pop
mul
cmp
ljmp
int
mov
adc
test
shll
inc
popf
andb
leave
xor
mov
test
jb
xorb
add
je
adcl
mov
pop
repz
pop
jecxz
sbb
cmp
mov
cmp
shrb
push
imul
loop
cmpsb
dec
leave
mov
daa
in
int
out
fstpl
call
divb
cli
pop
bound
jno
cmp
pop
sub
add
jecxz
mov
cmpsl
subl
call
mov
movsl
mov
xor
push
or
xor
jp
xor
fs
pushf
dec
push
sbb
sbb
testl
ret
and
daa
mov
negb
loope
sbb
es
xchg
adc
mov
ret
dec
sahf
jbe
repz
push
je
test
xorb
fisttpl
fwait
cmp
sarb
int3
scas
dec
dec
add
notb
mov
inc
push
icebp
and
xchg
mov
sbb
pop
insl
gs
mov
ret
or
ds
push
xlat
dec
adc
notb
outsb
jb
inc
inc
idiv
popf
int
mov
loopne
sahf
push
add
xor
inc
adc
xchg
out
dec
in
jns
das
mov
fsubrs
xchg
mov
cmpsl
icebp
pop
loop
or
scas
leave
mov
out
jbe
push
cmp
icebp
mov
iret
int
jns
sahf
dec
push
mov
mov
repnz
es
jae
add
inc
push
ja
fstl
mov
mov
jae
mov
sar
xchg
mov
mov
and
mov
jae
sub
cli
in
xchg
xchg
add
mov
fsubr
mov
xchg
insl
outsl
jge
sahf
dec
push
mov
push
or
jae
roll
jle
ficoms
aam
repnz
dec
mov
jns
shlb
dec
add
jecxz
xchg
imul
xchg
ljmp
push
out
pop
into
stos
dec
jne
cld
pop
and
repnz
push
addb
mov
and
inc
lds
stos
cmpsl
push
adc
xchg
pop
push
fs
mov
jge
xchg
xor
rolb
fildll
out
jns
and
testl
cmpsb
ret
sbb
cmp
jle
and
cli
inc
push
sbb
arpl
insl
pop
add
enter
pop
ficoms
inc
call
dec
mov
test
inc
das
lods
mov
mov
mov
movsb
xchg
mov
jg
cmp
sbb
mov
or
out
scas
loop
sub
icebp
and
push
lea
or
xchg
and
push
mov
and
shl
pop
and
jmp
insl
mov
arpl
fmull
mov
aad
mov
sub
add
mov
adc
imul
outsl
jmp
in
es
out
mov
push
pop
pusha
int
jne
xchg
ret
sti
jne
mov
pop
push
int3
daa
lahf
subb
pushf
sahf
pop
pop
dec
cmp
test
lcall
fsubp
es
jg
jp
shrb
sbb
pop
dec
xlat
call
repnz
jne
sbb
adc
popa
sub
movsb
mov
pushf
stos
dec
xor
movsb
xor
inc
fnsetpm(287
jle
xchg
std
ret
arpl
pop
xchg
mov
jmp
add
repz
inc
push
mov
sahf
out
out
cmpsl
out
jb
rol
data16
sub
out
shl
adc
orl
pop
cmp
loope
pop
and
out
sub
hlt
push
imul
aad
iret
repnz
fisttpll
fstps
xorl
mov
dec
ds
imul
pop
clc
shll
sbb
roll
or
inc
dec
pop
xchg
stos
pop
pop
inc
xor
mov
test
xchg
enter
addr16
in
sub
push
sbb
or
push
aas
repz
cmpsb
cmp
call
jecxz
or
repnz
jmp
jns
lret
mov
daa
xchg
je
fisttpl
ret
fs
repz
sahf
mov
sub
andb
daa
scas
push
xor
jo
jo
mov
frstor
sbbl
jmp
in
push
mov
jne
shll
lods
bound
fiaddl
and
push
mov
cli
mov
or
popf
mov
outsb
push
xor
cmp
cmp
dec
and
sbb
jne
ret
sub
rcrb
jnp
mov
cmp
dec
sub
xchg
pop
inc
lahf
adc
inc
add
pop
xchg
in
inc
xor
sub
adc
or
jmp
cmp
sub
outsl
daa
or
sbb
push
js
pop
aad
popa
das
mov
inc
lock
pop
or
jns
dec
ljmp
outsb
pop
pop
pop
inc
inc
ret
jmp
pop
inc
and
xor
scas
pop
imul
iret
pushf
in
addr16
mov
sbb
sub
ljmp
pop
jae
cmpsb
ret
stos
mov
push
add
jbe
lret
mov
fildll
lods
lcall
dec
push
in
daa
ret
stos
jp
xor
or
inc
or
movsb
add
xchg
mov
mov
dec
rcl
sub
lret
xchg
movsl
pop
hlt
test
out
out
inc
add
negb
fmull
fnsave
das
mov
call
pop
dec
test
jmp
xor
das
inc
pop
or
jmp
mov
xlat
bound
daa
repz
in
imul
jg
or
mov
imul
adc
mov
and
clc
cmp
jnp
pop
in
adc
scas
enter
cld
pop
into
fwait
hlt
leave
sahf
push
xchg
sub
idivb
mov
push
cmp
ds
js
jmp
insl
cmpl
les
in
decl
scas
push
push
clc
pop
mov
lock
jbe
test
fcoms
mov
mov
mov
inc
sbbb
sahf
jge
push
jne
xchg
loop
or
xchg
fimuls
xchg
sbb
push
imul
mov
lods
outsb
push
push
lahf
fs
ja
test
rcll
imul
pop
and
clc
addr16
aaa
cmp
or
fnstcw
pusha
xor
inc
mov
cmp
call
inc
pop
sub
lea
repnz
testb
cwtl
loopne
cmp
mov
sarl
or
pop
cwtl
jnp
insb
xchg
dec
subb
or
sub
jno
cs
fldl
ret
sbb
fucomi
dec
dec
xor
jg
xor
mov
loop
xor
adc
jo
sbb
pop
jb
xchg
xchg
lea
xor
out
push
cmp
mov
clc
mov
inc
fwait
push
adcb
rcl
testl
enter
pop
lcall
pop
lcall
pop
aas
add
and
std
sbb
int
jle
dec
mov
aaa
mov
mov
push
stos
pop
addr16
xchg
addr16
pop
xchg
lds
lret
addb
mov
stos
pop
pusha
aas
cli
pop
je
jb
jp
sub
cltd
pusha
fcom
add
insl
movsl
roll
jg
mov
outsb
stos
sub
shrb
push
pop
mov
push
push
rcll
fnstenv
inc
pop
adc
jmp
cmp
sub
imul
adc
out
orb
push
es
inc
cmc
mull
loope
mov
mov
stos
flds
jecxz
loopne
add
jp
int
pop
pop
test
jb
out
daa
int
mov
add
cmp
inc
test
ja
xchg
cmp
nop
movb
xlat
or
imul
sbb
lahf
inc
sti
cmp
jg
mov
clc
cwtl
pushf
mov
xchg
inc
push
popf
dec
insl
cwtl
nop
addr16
push
ficompl
and
xor
int
add
cmpsb
or
arpl
lds
xchg
arpl
xor
xchg
loop
sbb
adc
lods
call
dec
mov
test
xor
mov
jg
or
xchg
mov
cmp
in
push
fmulp
lret
sub
lea
loope
jl
lahf
lcall
rcrl
orl
cmpsb
cmp
mov
pop
mov
in
inc
mov
in
pushf
out
dec
call
mov
pop
sbb
pop
cmp
mov
mov
add
xchg
test
inc
fstl
sub
lock
sbb
and
stos
fstpl
hlt
xor
sbb
push
loope
push
sub
add
push
imul
jecxz
mov
add
push
loope
pop
cmp
mov
mov
xchg
mov
loopne
stc
cmp
sub
ss
sbb
scas
in
mov
iret
add
mov
sbb
add
loope
cmp
loopne
fnstsw
test
bound
jecxz
fcoml
push
je
pop
testb
mov
xchg
loop
cmc
pushf
mov
aad
dec
push
cmp
sbb
xchg
sbb
jmp
push
andl
lods
xchg
jbe
imul
mov
or
cmp
loope
pop
xchg
sbb
cmp
aaa
add
andl
sbb
icebp
loop
or
sub
xor
pop
call
mov
xchg
fwait
out
xor
xchg
fadd
add
shl
mov
bound
adc
scas
sub
mov
xchg
mov
mov
bound
push
and
push
push
jecxz
dec
in
xor
ss
cmp
test
jle
loop
or
rol
pushf
sub
pop
cmpsl
push
xchg
cwtl
cmpsw
sahf
jno
xchg
mov
xchg
hlt
aaa
cmp
inc
imul
sarl
inc
mov
add
imul
xchg
adc
mov
test
mov
jnp
daa
xor
and
icebp
lcall
imul
sub
or
ljmp
mov
or
adc
xor
xchg
shrl
sahf
cmpl
mov
mov
sbb
ret
fisttpl
out
jo
add
cmp
out
idivb
arpl
outsb
dec
nop
iret
leave
dec
inc
ret
mov
mov
shl
loope
push
into
dec
mov
rcrb
mov
inc
test
in
jp
sahf
lock
xlat
cwtl
clc
ds
loopne
sahf
push
outsl
push
pop
push
or
jmp
and
push
ljmp
sbb
test
xchg
dec
sahf
dec
ror
sub
out
notb
inc
movsb
cmovs
out
pushf
scas
repnz
hlt
inc
fwait
imul
pop
add
xor
sub
adc
cmpsl
add
dec
cmp
and
repz
mov
rclb
push
mov
sbb
filds
cld
leave
cmp
push
mov
and
pop
dec
imul
and
adc
jbe
nop
sub
sub
stos
jp
inc
and
divl
and
in
push
sub
push
mov
jp
cmpsl
xor
lock
iret
repz
push
jne
andl
jge
loope
dec
les
stc
rolb
aam
adc
mov
andl
mov
pop
movsl
adcb
mov
push
mov
ss
rcrb
mov
push
push
inc
mov
mov
inc
jecxz,pn
ds
in
mull
xchg
test
xor
adc
xor
adc
aad
fdivrs
sahf
clc
out
in
fists
into
push
insb
fisubs
mov
test
in
lock
pop
in
gs
or
orb
cmp
xchg
jge
add
inc
xorb
jns
stos
pop
ss
roll
xchg
repz
test
inc
jge
out
fwait
pop
rolb
mov
das
mov
clc
xchg
imul
mov
xchg
lret
cli
mov
in
sub
xchg
addr16
sub
inc
cltd
nop
cmp
out
fidivrs
jno
mov
mov
mov
lret
xor
push
jno
sahf
rol
int
xchg
cmp
or
clc
cmpl
mov
add
lods
fs
mov
jae
inc
jp
xchg
push
fiaddl
in
mov
fnstsw
into
pop
sub
insb
jmp
sbb
lds
jle
rcrb
hlt
fdivl
sbb
sbb
push
leave
adc
mov
sub
lret
mov
js
in
aas
pushl
arpl
inc
or
add
jno
push
adc
mov
xorb
fs
je
gs
adc
cld
xchg
orl
outsb
in
cmp
sub
out
or
adc
jmp
test
lcall
sbb
fcoms
pop
in
pushfw
ljmp
mov
mov
scas
fs
sahf
in
push
pop
jmp
push
pop
or
sbb
mov
or
mov
pop
out
xchg
or
std
xor
add
pop
dec
repnz
jne
add
mov
jge
and
das
mov
adc
pop
stc
sti
xchg
inc
shl
dec
int3
or
loop
ret
lods
mov
mov
mov
mov
jns
jle
in
cmc
in
jmp
loop
in
inc
hlt
add
test
imul
xor
std
sub
negl
push
ret
imul
dec
popf
out
imul
xchg
repz
mov
jge
jmp
adc
and
add
jg
adc
sbb
out
mov
push
fs
les
ja
lock
hlt
hlt
adc
add
sbb
adc
and
arpl
or
xchg
cmp
shrl
sbb
xor
lods
add
arpl
mov
aas
out
bound
outsb
notb
stos
mov
rcll
lods
out
push
push
pop
inc
jns
loopne,pn
dec
stos
loopne
add
ret
scas
xchg
stos
dec
jge
rolb
or
leave
push
ss
pop
dec
inc
arpl
lods
push
mov
sbbb
rol
lcall
sbb
mov
ret
xlat
test
scas
in
arpl
push
lock
jg
je
in
dec
sbb
shlb
xor
dec
xor
xor
push
in
jmp
nop
xor
bound
xorl
leave
jb
sub
cmc
add
aas
and
ret
lds
stos
add
hlt
imul
adc
dec
movsl
jnp
adc
dec
decb
and
push
and
dec
jno
mov
clc
jle
aas
test
jl
xchg
cltd
sbb
shr
repnz
mov
aaa
cmp
inc
xlat
xor
in
cmp
pop
jmp
stos
stos
test
jne
es
jge
dec
jle
mov
comiss
pushf
cltd
shll
sbb
adc
inc
mov
in
push
dec
dec
xor
adc
ret
int
mov
popf
cltd
dec
xlat
out
cmpsl
repz
sbb
test
jnp
or
icebp
sbb
xor
jmp
test
lahf
push
mov
dec
in
sbb
jecxz
pushl
mov
bound
rol
out
xor
mov
and
lret
adc
sub
rcrb
dec
je
xchg
pop
sub
jp
pop
xchg
pop
aad
jg
mov
mov
stos
into
lahf
in
jle
rclb
int
and
pop
rorb
mov
jb
jne
jge
loop,pn
push
cmpps
jae
cmp
lock
xor
imul
pop
cmc
mov
add
mov
mov
jle
int3
imul
nop
stos
mov
xchg
adcb
add
testl
inc
xchg
loop
add
leave
aam
leave
push
scas
sarl
in
pop
xchg
out
adc
es
mov
cwtl
popa
adc
adcl
push
push
jp
jns
into
jae
fildl
jbe
xchg
cmpsl
inc
stos
sub
fildll
data16
daa
aaa
jo
mov
or
inc
lock
mov
stos
inc
paddusb
or
push
out
or
stos
rolb
cmp
jbe
into
imul
inc
into
mov
bts
cli
in
adc
mov
cmp
test
daa
jle
ljmp
pusha
pop
test
and
in
mov
int
shlb
jb
adc
mov
jmp
push
jae
sbb
sub
cmp
cmp
bnd
stc
mov
sub
shrb
pop
clc
aad
jno
rcrb
inc
lock
cld
mov
jmp
inc
rorl
push
aas
mov
add
mov
ss
inc
lahf
and
inc
xor
out
xor
adc
add
fldl2e
dec
or
scas
ss
mov
bound
int
fisttpl
js
cmp
inc
popf
mov
xor
xchg
pop
mov
inc
or
mov
and
or
push
push
repnz
loopne
dec
movsl
addb
out
insl
popf
ljmp
adc
out
out
pop
sub
xchg
sbb
fsubrl
rorb
jg
push
test
cmp
fwait
and
rcrb
out
scas
pop
add
test
addr16
jb
out
neg
mov
fsubs
js
in
imull
jecxz
fs
mov
enter
rorb
push
adc
and
mov
mov
mov
jge
push
hlt
push
test
movsb
adc
outsl
loop
push
adc
rclb
je
fistpl
xchg
mov
loop
mov
scas
daa
in
outsb
rorb
xor
dec
push
xchg
mov
imul
push
les
xor
mov
fidivl
stos
jp
sbb
xchg
cmp
add
movsb
cmc
popf
fmull
xor
adc
xor
jecxz
pop
lds
add
ret
mov
stos
in
mov
and
add
inc
idivb
adc
fmuls
jne
push
pop
mov
xchg
cmp
cmp
in
ret
ret
dec
pushl
jb
leave
sub
aad
into
lods
mov
movsb
sbb
or
cmp
loope
enter
lds
imul
xor
call
jnp
in
out
stc
clc
hlt
and
out
mov
cmpsl
addb
das
xchg
push
negb
cmp
xchg
mov
mov
xchg
inc
cmp
fisubrl
adc
mov
popa
pop
adc
cltd
int3
mov
aam
pop
das
pop
push
aad
mov
sub
mov
inc
testl
in
aad
jle
outsb
aas
or
rorb
pop
mov
clc
push
pop
fwait
push
jmp
sbb
or
push
xchg
adc
ljmp
gs
lret
int
mov
mov
inc
dec
into
and
popa
sub
incl
fdivl
xchg
push
add
inc
jbe
clc
adc
subb
xor
dec
mov
ja
sahf
into
ret
mov
mov
js
int
dec
out
adc
xor
ret
and
lods
lds
sahf
jl
sbb
stc
andl
cmp
mov
xchg
xor
jp
wbinvd
add
xchg
lahf
lock
dec
lock
or
fucomi
pusha
and
fisttpl
fwait
lods
pushf
mov
test
mov
inc
insb
mov
push
pop
pop
xorl
jp
ret
data16
shll
aam
imul
nop
data16
add
add
lcall
ja
ja
mov
cmp
pop
add
jg
je
cmp
sti
test
insb
roll
dec
push
outsl
add
js
cli
in
cld
cli
es
lahf
cltd
inc
pop
push
mov
mov
push
mov
mov
mov
jge
cld
mov
cmp
ss
pop
cmc
jno
inc
pop
in
jecxz
sub
ds
rolb
inc
mov
test
movsl
imul
repz
add
cmpsb
pop
jge
rorb
outsl
loope
sbbb
mov
mov
mov
jecxz
mov
inc
fwait
dec
add
stos
lods
insb
aas
movsl
sbb
mov
jo
push
sub
aam
bound
or
jl
push
cmp
jl
lock
lods
ljmp
lahf
aas
or
pop
inc
inc
xchg
pop
mov
sbb
lahf
cmp
xor
nop
xchg
sub
icebp
jmp
xchg
lret
jbe
jo
pop
sub
dec
fwait
xchg
std
mov
icebp
lods
jmp
jne
enter
mov
fiadds
dec
and
mov
jne
outsb
out
cmp
int
xchg
enter
jbe
sar
xchg
popa
lea
int3
lock
adc
mov
fnsave
mov
data16
jno
mov
dec
and
jmp
or
sub
jno
ja
and
mov
xchg
into
loop
pop
jne
mov
into
ffree
js
jb
pusha
pop
je
mov
mov
push
cmp
ret
dec
mov
lea
push
cmp
in
mov
fadds
sub
jbe
dec
daa
insl
rcll
outsb
push
les
mov
push
pop
pop
dec
mov
cs
sub
inc
sub
sub
les
sti
les
cs
adc
data16
leave
dec
sub
jb
mov
mov
daa
inc
test
leave
xor
test
in
gs
push
mov
fs
stos
cltd
mov
cmc
push
or
je
scas
push
or
bound
js
shl
cmp
clc
adc
jle
movsb
mov
ret
loopne
int3
fs
push
loop
lahf
fwait
clc
xchg
sub
cmp
aad
std
pop
ret
fwait
lret
inc
xor
xchg
push
fldt
test
mov
and
inc
jnp
mov
push
mov
addb
mov
xchg
xor
daa
xchg
sbb
and
lret
push
jne
mov
enter
pop
push
xchg
sbb
sbb
addr16
cmp
cld
cmp
fwait
mov
sub
or
push
ss
icebp
cmp
or
test
imul
sub
mov
int3
popf
sbb
pop
and
outsl
mov
test
mov
out
jae
ss
add
jle
push
lcall
das
cmp
inc
andb
dec
andb
inc
sti
push
inc
rcll
imul
ja
mov
add
mov
cli
mov
aam
dec
or
adc
dec
push
adc
loope
out
out
loop
lcall
xchg
andl
inc
mov
cwtl
and
shl
test
cmp
mov
mov
hlt
pop
movsl
cmp
or
pop
jmp
testb
pop
xor
mov
jbe
dec
cmpsb
iret
fiadds
shld
movsl
mov
cs
pop
in
or
sbb
mov
ds
and
inc
stc
jne
pop
mov
mov
pop
pop
mov
mov
in
hlt
test
cmp
push
mov
nop
cmp
pop
jecxz
mov
add
addr16
mov
mov
movsb
daa
push
mov
js
gs
and
pop
jo
or
rcr
or
adc
mov
andb
xchg
cs
out
stc
or
inc
jecxz
dec
es
outsl
cmp
push
adcb
mov
fsubs
adc
test
xchg
movsl
sub
cmp
idivl
mov
dec
xor
push
sub
insb
dec
inc
cmp
mov
js
fistps
xchg
scas
insl
jns
cmpsl
rclb
outsb
es
pop
out
sub
mov
aaa
out
aas
lcall
add
jae
gs
pop
add
add
test
sub
fbstp
sbbb
int
pop
idiv
icebp
lcall
sub
pop
in
je
bound
push
inc
cmc
push
push
loopne
xor
inc
or
test
push
ret
test
and
push
dec
loopne
subl
xchg
fsub
xchg
push
pop
ljmp
shl
in
or
mul
movsb
dec
out
arpl
adc
pop
dec
xchg
sarl
imul
pop
hlt
fimull
pop
mov
and
dec
push
mov
xchg
sub
xchg
push
stc
ror
lret
pop
out
add
popf
mov
cmp
lods
or
jno
xor
mov
lock
les
hlt
adc
stc
lret
aam
ds
addl
lods
incb
adc
jp
inc
lret
push
and
movsb
int3
outsb
mov
add
sbb
pop
add
mov
mov
mov
cld
xor
cmp
nop
sbbl
imul
ret
jnp
imul
ret
or
or
mov
dec
mov
sbb
sbb
jle
mov
and
sub
dec
jecxz
cli
cmpsl
jg
pushf
and
lret
and
scas
inc
push
loop
xor
cwtl
sub
inc
and
pop
adc
jecxz
js
jecxz
mov
sbb
mov
lret
inc
dec
xlat
shl
outsb
lcall
mov
xor
fsubrp
mov
xlat
sarl
cltd
cs
pop
loop
dec
mov
jne
push
dec
outsl
adc
fs
ja
and
rol
jae
mov
test
jmp
and
pop
movsl
enter
inc
cmp
loope
jmp
sbb
sahf
xchg
jno
cmp
in
repnz
decl
test
pusha
rclb
pushf
jne
decb
out
or
decb
les
pop
sbb
js
roll
mov
pop
bound
loope
into
push
adc
xor
mov
movsb
fwait
lds
add
pop
or
nop
xor
mov
outsl
int3
je
cwtl
or
xor
pop
sub
popa
mov
xor
sbb
push
rcrl
notl
test
or
add
pop
or
mov
cld
insb
hlt
int3
xchg
jo
pop
xchg
sub
cmc
pop
repnz
sbb
aam
daa
mov
test
outsb
mov
clc
inc
ja
or
pop
push
das
jp
sub
cmp
adc
scas
inc
test
inc
dec
jmp
sbb
push
mov
add
ds
lods
fisubl
jbe
enter
sbb
out
sub
sub
pushf
clc
dec
outsl
xor
mov
sbb
dec
dec
mov
jecxz
sbb
pusha
shlb
xchg
dec
fldpi
or
pop
push
mov
das
dec
cltd
hlt
add
addl
mov
in
and
mov
daa
push
sub
mov
icebp
pop
icebp
out
sbb
push
call
pop
sub
lret
xlat
cmp
mov
jo
jae
mov
jb
sbb
out
leave
mov
xchg
jmp
mov
dec
ss
out
or
inc
cmpsb
or
roll
sbb
push
push
jg
jnp
es
hlt
rcr
and
lods
das
push
cmpsb
adc
insb
sub
sti
arpl
sub
js
sub
inc
push
jno
decl
mov
pushf
cmp
pushf
mov
addr16
je
pminub
rcll
or
int3
and
ss
mov
repz
in
sbb
xchg
ss
mov
mov
pop
push
push
stos
leave
repnz
in
xchg
enter
repnz
mov
mov
aaa
int3
pop
sti
pop
or
jle
sbb
sbb
adc
sbb
cs
lea
push
rol
xchg
lods
test
push
sub
fs
push
inc
shl
pop
cmpsl
add
cld
jecxz
jle
xchg
adc
test
mov
mov
xor
mov
cmpsb
push
loopne
mull
fidivl
cmpsb
push
xchg
dec
mov
jp
cmpsb
sub
adc
gs
loopne
mov
mov
rcrl
repz
imul
lods
add
sub
pop
mov
je
mov
jne
mov
jp
psllw
sub
mov
decb
and
xchg
dec
mov
inc
mov
call
aas
stos
notb
pop
xchg
push
pop
rdmsr
mov
xchg
outsb
mov
or
push
mov
sbbb
add
adc
mov
xchg
loope
mov
mov
adc
dec
out
cltd
out
inc
xor
pusha
jne
or
stos
push
cltd
mov
repnz
sti
push
fdivrl
out
pop
icebp
popf
in
inc
jne
cmp
pop
cmp
mov
fsubs
add
xchg
lock
std
sbb
jb
mov
mov
or
nopl
ret
mov
xor
notl
daa
cmc
adc
dec
cs
je
adc
insb
adc
and
idivl
aam
das
push
call
jae
push
in
cld
movsl
xchg
lcall
mov
xor
push
add
lock
or
subb
ret
inc
andb
mov
popa
jbe
push
adc
dec
inc
sti
sub
enter
mov
out
adc
int3
push
lock
add
lret
daa
data16
test
sti
jp
push
fcmovne
mulb
mov
lea
sub
loopne
cltd
mov
bound
xor
lea
add
loope
fs
dec
loope
add
cmpsl
add
pop
cld
outsb
cmpl
or
pop
xchg
xor
out
inc
jecxz
push
gs
nop
xor
fidivrl
pop
adc
aas
enter
cmp
inc
aam
xchg
dec
in
fwait
sub
out
mov
movb
dec
call
push
and
aas
addr16
inc
cmp
push
mov
fbstp
and
cmp
xchg
data16
lea
leave
js
mov
pop
ja
cmp
ds
fwait
in
leave
mov
loop
cmp
into
inc
ds
or
test
sbb
adc
aas
ss
sbb
pop
sbb
sub
negb
push
and
jns
mov
pusha
xor
in
xchg
mov
punpckhwd
aam
ret
scas
and
lret
inc
and
and
or
leave
std
add
fmull
stc
lretw
and
jmp
pop
add
popf
ret
pop
or
mov
imul
adc
notb
jns
push
adc
mov
shl
in
inc
jle
fldenv
inc
sbb
push
inc
xor
outsb
imul
xchg
inc
neg
mov
and
mov
xor
loope
jo
push
or
ljmp
mov
mov
leave
or
dec
jg
add
pop
dec
pop
out
jmp
call
push
dec
dec
cmpsb
into
sbb
sbb
mov
stc
xor
aad
in
hlt
movsl
and
fmull
mov
push
jmp
xorl
add
dec
jo
sahf
sarl
call
pop
lea
stc
movsb
or
mov
sub
mov
push
and
insl
out
out
add
mov
shrb
jge
mov
popa
push
inc
lret
mov
jg
test
filds
cld
in
mov
ret
dec
pop
mov
mov
dec
push
jmp
iret
jne
jb
shrb
ror
mov
add
aaa
rcrb
in
inc
dec
xchg
mov
out
pusha
sbb
jle,pn
xchg
pop
mov
push
cmp
dec
add
adcb
fnsave
adc
mov
mov
pop
stos
aad
inc
or
rcrb
shll
or
sub
imul
aad
push
shrb
les
xor
jnp
inc
cmp
fisttps
fistps
or
cmpsl
mov
fidivl
mov
out
jle
xor
cmc
push
pop
negb
xlat
jge
mov
in
sub
nop
jl
push
mov
cltd
mov
repnz
cmp
out
mov
aad
test
cmp
ja
lcall
dec
lahf
fcmovnb
fs
nop
sbb
test
ret
jno
aaa
push
sub
adc
xchg
pusha
aam
inc
jmp
mov
push
mov
dec
loop
jb
and
nop
xor
sahf
inc
mov
fsave
nop
push
ret
pop
push
push
jns
add
out
and
incb
sub
inc
cmp
push
jbe
cmova
jbe
xchg
movsl
sub
push
idivb
sub
mov
sahf
push
push
jecxz
cmpsl
lea
pop
push
fwait
jno
mov
mov
loopne
test
or
jnp
fdivs
sbb
sub
les
xchg
orb
pusha
pop
pop
pop
adc
lcall
push
lds
mov
cmpsl
mov
imul
insl
mov
xchg
pop
mov
mov
test
imul
fistpl
repz
sub
mov
roll
mov
jne
mov
lods
frstor
mov
sub
xchg
xchg
addr16
dec
lea
xor
add
sbb
jnp
scas
sbb
shl
cmp
jae
push
mov
dec
jl
rolb
mov
inc
sbb
xlat
sbb
fbstp
add
push
jns
into
imul
and
and
pusha
ja
pop
jecxz
dec
jl
push
push
dec
cmp
mov
sahf
mov
push
and
xor
mov
jbe
mov
and
subl
or
pop
sti
jge
pop
and
cmp
jmp
cmp
test
ficompl
or
adc
aad
stos
jo
in
add
data16
arpl
mov
repnz
out
cmp
sub
faddp
sti
dec
xchg
adc
fidivrs
mov
je
mov
lret
stc
cmp
xor
mov
push
in
lds
and
sub
xchg
cld
lcall
aas
lahf
loopne
jp
inc
fbstp
jae
add
hlt
out
pop
jl
cli
push
inc
mov
fs
scas
lret
push
pop
js
sub
orl
lds
loopne
push
xor
sub
imul
xor
dec
adc
in
insl
cs
outsb
movsl
out
jnp
jnp
mov
push
inc
mov
pop
add
ss
xchg
shrb
ret
jae
lds
ljmp
inc
into
xchg
test
aad
cltd
std
cltd
sbb
popa
test
sbb
cmp
jnp
out
and
sub
std
stos
cmp
cmpl
push
fildll
popf
int
ljmp
insl
fs
and
fsub
es
int
jl
fdivrl
mov
ds
pop
xor
mov
jo
lds
call
xor
dec
outsl
sarb
pop
lock
push
loopnew
dec
add
gs
mov
and
jl
mov
enter
sti
cmpsl
dec
cltd
aaa
stc
mov
adc
xor
and
sbb
ljmp
fnsave
dec
mov
cmp
pop
jb
cmp
js
or
cmp
out
push
cmpsl
adc
or
adc
les
or
mov
test
and
mov
es
sub
sub
and
fildll
int
int
push
sub
pop
int
repz
xchg
in
and
outsb
push
popa
cmc
icebp
nop
int3
cwtl
lret
enter
rcrb
mov
mov
div
push
shll
sbb
shrb
jmp
dec
mov
sub
cmpsb
arpl
ret
test
bound
pop
inc
orb
int
cmpsl
mov
pop
insl
sub
leave
pop
or
movsb
call
jns
push
fsubrl
inc
sub
fwait
insb
dec
pop
add
rol
and
xorl
movsl
push
or
xlat
adc
repz
ljmp
test
js
sbbl
enter
add
cmp
dec
xor
dec
or
xchg
lods
stos
in
inc
cmp
pop
pop
rorb
popf
aaa
leave
mov
sbb
jle
out
pop
push
xor
scas
dec
lcall
movsl
cmp
add
into
adc
jle
xor
jae
insl
xchg
push
data16
and
sub
lcall
cmp
jbe
inc
mov
xchg
push
fwait
push
std
xor
mov
xor
scas
movl
add
ret
inc
lret
fisubrs
icebp
or
repnz
inc
push
lock
ja
jmp
fimull
mov
mov
es
push
in
popf
jg
data16
enter
mov
pop
in
lods
jno
xor
mov
sbb
sti
or
pop
cmpsl
jmp
sub
lret
pusha
iret
dec
or
mov
xchg
and
gs
stos
add
outsb
add
enter
dec
bound
jecxz
das
mov
sbb
stos
adc
lods
arpl
out
dec
dec
dec
es
ja
or
adc
sbb
pop
insl
adcb
fidivrl
sub
xchg
pop
mov
pop
mov
lods
xor
push
jecxz
xchg
int
mov
and
lcall
dec
sub
inc
addr16
mov
dec
pop
outsb
xchg
in
mov
test
push
xchg
iret
or
add
in
xchg
mov
aas
jno
arpl
sbb
xchg
into
lcall
lds
out
mov
stos
mov
jmp
sbb
repz
ret
sbb
push
mov
sbbb
inc
minps
pop
stos
fwait
cmpsl
in
ss
add
mov
fwait
mov
cmpl
mov
icebp
ja
data16
mov
addr16
dec
sbb
xor
mov
xchg
cmc
icebp
insl
pop
clc
outsl
inc
xchg
orb
outsl
lds
add
xor
xor
out
add
jle
mov
jne
cld
mov
xchg
and
test
add
clc
sub
mov
push
mov
jbe
fldcw
fs
stos
add
pop
sahf
pop
cltd
mov
out
fimull
mov
xor
push
in
in
jne
sub
mov
call
xor
xchg
pusha
aaa
loopne
in
icebp
sbb
mov
cmp
cmp
jo
shr
call
mov
mov
fld
out
lahf
inc
jns
inc
jns
arpl
jnp
test
jne
inc
dec
xor
movsl
fcom
int3
push
cmpsl
lahf
xchg
xchg
push
xchg
xchg
add
inc
or
imul
add
cmp
mov
cmc
cli
mov
or
scas
aam
sub
lret
xchg
xchg
push
repnz
cmp
out
in
push
repnz
mov
pop
out
js
out
outsb
xor
das
and
addr16
sub
mov
adc
int3
lcall
adc
sub
cmpsb
clc
pop
jno
cwtl
scas
mov
mov
mov
cld
jmp
leave
jecxz
shlb
ret
push
lahf
shl
cwtl
and
push
jmp
xlat
or
rorl
sub
sbb
gs
std
hlt
imul
fs
andl
push
add
scas
and
dec
push
and
mov
std
xlat
pop
idivb
out
in
push
mov
sbb
stos
xlat
insb
gs
mov
xchg
jne
dec
roll
xchg
dec
test
adc
outsb
imul
jl
ljmp
aam
pop
jp
lods
inc
mov
dec
popf
sbb
pop
in
push
mov
push
pushf
cmpsb
loopne
in
mov
bound
xor
pop
xor
mov
pop
cli
ja
enter
out
sub
imul
mull
pusha
pop
pop
lahf
inc
pop
mov
frstor
adc
jno
fs
mov
jo
insb
pop
dec
loope
xor
lret
mov
mov
test
and
addl
arpl
daa
mov
leave
dec
nop
scas
in
mov
mov
sbb
sub
inc
sub
stc
movsl
outsb
stos
dec
stos
sbb
outsl
mov
scas
call
ret
jg
shrl
enter
fsubs
dec
leave
hlt
outsl
xorb
stc
sub
loop
mov
ficoml
lods
mov
stc
push
outsb
mov
stos
push
add
dec
inc
ja
scas
fistpl
jl
fwait
std
aas
ficoml
cs
mov
jecxz
push
es
ja
popa
push
inc
sub
les
push
iret
mov
stos
jne
test
add
std
jo
jmp
jmp
pop
popl
cmp
ja
jecxz
push
mov
cmp
xchg
inc
mov
loopew
cmpsb
mov
sbb
mov
mov
daa
cmp
inc
aas
mov
orb
shrb
stc
and
orl
adc
push
out
push
lods
xorl
loopne
lock
jbe
popf
inc
rorl
out
pop
fidivl
rolb
mull
mov
divl
das
nop
outsb
adc
jne
cmp
push
xor
adc
mov
ss
adc
lahf
or
cmp
mov
popa
or
in
sbb
sar
in
mov
fwait
movl
int
xor
xchg
lea
addr16
sub
insb
jns
inc
cmp
repz
cwtl
jb
pop
shrl
shll
mov
add
and
movsb
mov
push
mov
cld
mov
daa
mov
pop
icebp
stos
mov
ret
lods
sbb
and
xor
pop
mov
and
jle
sbb
pop
push
push
jp
imul
lock
push
sub
cmp
push
cmc
xchg
popa
popf
jg
arpl
adc
dec
sbb
jmp
movsl
sahf
imul
pusha
outsb
lcall
adc
jecxz
xchg
sarb
aam
push
jnp
xor
mov
ficomps
mov
jp
and
mov
loop
mov
jecxz
lds
adc
push
lods
jge
mov
pushf
push
pushf
es
fwait
jo
and
out
icebp
repnz
inc
in
in
pop
mov
jns
data16
adc
out
jbe
lods
add
sbb
icebp
jbe
jae
dec
add
adc
dec
test
adc
or
jge
sub
sahf
adc
pusha
jge
xor
mov
mov
mov
mov
cmp
mov
xor
push
clc
xchg
pushf
inc
dec
hlt
mov
push
pop
movsb
mul
mov
push
mov
jnp
scas
or
hlt
imul
push
dec
es
jg
pop
jg
xor
jno
dec
jne
xor
and
repnz
lea
pop
pusha
lcall
and
jle
xchg
sub
mov
pop
cmp
pop
or
test
into
jecxz
std
pop
xchg
mov
fwait
cmp
mov
notb
xor
notb
in
and
insl
cmp
cmp
test
jne
ja
movsb
lret
push
cmp
adc
std
dec
add
je
cmpsb
testl
loopne
cld
fs
sbb
test
js
dec
xchg
mov
xchg
test
mov
test
rorb
int
cmp
std
je
sbb
lods
jnp
xor
add
mov
dec
lahf
cmpl
loopne
or
aaa
hlt
jg
adc
push
and
cmp
jae
cmc
fimull
pop
into
xlat
std
test
stos
xor
and
cmc
mov
cmp
fmull
cmp
adc
adc
push
mov
dec
out
jno
xchg
jo
xor
jnp
call
fcmovb
and
outsb
pop
add
dec
mov
mov
out
sbb
stos
jae
sbb
addr16
push
xor
ret
movsb
or
stos
inc
pop
in
lret
or
clc
leave
dec
aaa
jle
pop
mov
cmpb
ror
push
outsl
call
out
rolb
mov
fxch
pop
or
fdivl
mov
mov
pop
jo
cmp
fwait
out
and
push
loope
push
test
aaa
pop
testl
mov
in
cmp
cmp
add
jns
fbstp
mov
ljmp
add
aad
push
push
scas
lds
mov
xchg
jge
sub
inc
insl
xlat
push
fisubl
outsb
xchg
jb
push
jmp
aaa
insb
adc
jl
and
mov
add
pop
mov
out
pop
cli
pop
lret
push
add
pop
clc
jb
mov
cwtl
rcll
pop
fldt
or
push
daa
into
xchg
fsubrs
rep
lcall
les
pop
arpl
inc
push
js
in
mov
ja
push
rol
in
ror
pop
cld
pushw
xchg
add
jb
lret
dec
sahf
lcall
xchg
mov
pusha
lahf
mov
xchg
pop
jb
push
add
xchg
pushf
push
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
cmpb
jnp
xchg
add
add
add
scas
dec
fsub
mov
pop
add
mov
push
pop
jg
mov
pushl
jno
sbb
pop
push
mov
pop
xor
mov
xor
or
sub
or
mov
jmp
jp
mov
inc
pop
xor
shlb
jmp
jne
jp
mov
jmp
out
cld
test
or
add
addl
jle
sub
jl
mov
jmp
jae
test
js
fs
out
push
push
xchg
xchg
adc
cmp
decb
push
push
xor
push
loope
xchg
sahf
arpl
cmpsb
add
push
loope
notl
mov
les
jle
out
pop
push
sub
jg
fmull
shll
loopne
clc
sahf
jp
push
cmpsl
mov
fwait
arpl
mov
rcpps
loope
shl
fstpl
ficoms
cwtl
add
loope
cwtl
mov
fistpll
xor
sub
dec
aaa
movsb
mov
xchg
and
push
push
decb
xchg
jbe
scas
mov
mov
jnp
inc
sbb
push
loope
daa
dec
or
push
pop
fs
push
pop
loope
xchg
lock
fimull
repz
mov
inc
sarl
loop
aad
or
int
adc
inc
inc
es
cli
bound
cmp
ds
cli
mov
jl
xor
sbb
int3
cli
or
sub
push
mov
cld
xor
and
sub
mov
mov
cmpsl
jmp
add
in
aad
or
stos
fidivl
pop
test
mov
pop
ret
inc
mov
mov
dec
aas
cmpsl
and
xchg
aaa
arpl
xchg
xor
pusha
sti
fdivl
aad
xchg
aad
or
xor
xchg
in
aad
or
cld
popf
and
xchg
jbe
int
xchg
inc
or
push
dec
or
xorl
mov
mov
cli
mov
mov
xchg
mov
cli
mov
jb
stos
cmp
sahf
jecxz
or
cli
or
cli
mov
or
loopne
enter
xor
lret
mov
scas
sbb
pop
xchg
mull
sub
lret
aas
mov
std
aad
pop
dec
rol
mov
sbb
enter
push
std
mov
clc
pusha
push
subb
into
shlb
push
leave
clc
icebp
inc
int
mov
popa
mov
out
cli
mov
jecxz
and
mov
dec
rorl
nop
fdivs
inc
in
sbb
roll
pushf
push
fidivl
sarl
rcll
lds
insl
inc
cltd
gs
imul
fldcw
jge
pop
cltd
push
imul
mov
fs
push
mov
adc
or
push
fstpt
inc
cmp
outsl
fs
daa
ss
pop
imul
jbe
mov
push
fidivl
rcrl
rcll
sbb
push
scas
shr
imul
mov
xor
stos
push
ss
insl
cmp
roll
sbb
add
sti
jae
add
sbb
dec
adc
pop
cmp
mov
push
inc
cmp
js
pop
scas
add
inc
cmp
shlb
inc
mov
push
lcall
pop
or
inc
cmp
rolb
lahf
sbb
inc
cmp
sbb
xchg
mov
xchg
divl
pop
pop
movsl
inc
adc
push
inc
cmp
outsl
xchg
jb
sbb
sub
sbb
xor
push
cmp
pop
inc
sbb
lds
push
inc
sub
inc
jbe
fs
stos
add
idivl
sbbl
cmp
sti
jae
add
push
incl
sbbl
movsl
cmp
pop
cmp
inc
movsl
inc
in
sbbl
mov
sbb
xor
xchg
cmp
add
stos
arpl
cmp
jae
mov
inc
cmp
push
icebp
jae
sbb
data16
stc
pop
cmp
outsb
add
inc
jp
adc
pop
cmp
test
in
push
xchg
sbbl
add
sbb
cmp
cwtl
shl
add
and
sub
out
mov
daa
test
xchg
testl
xor
or
xchg
jae
add
dec
xchg
xchg
inc
cs
xchg
sbbl
rorl
pop
cmp
outsb
out
xchg
inc
jns
add
cmp
test
std
xchg
inc
jae
mov
inc
cmp
inc
jle
mov
data16
push
sarb
insl
sbb
notl
outsb
movsb
testb
inc
cmp
sbb
cmp
cltd
cmp
inc
cmp
sbb
push
or
jae
add
jl
or
cmp
jbe
dec
test
mov
add
sub
pop
jmp
dec
dec
add
mov
jbe
dec
test
mov
pop
scas
add
lock
pop
jmp
ret
pop
call
jge
test
repz
in
add
mov
jbe
dec
test
pop
cmp
dec
stos
jae
mov
bound
test
xlat
repz
in
add
mov
jbe
dec
test
mov
fsts
xchg
inc
cmp
rcl
repz
in
mov
jbe
dec
test
mov
mov
gs
or
mov
inc
cmp
cmp
icebp
push
jge
inc
cmp
add
inc
nop
mov
jge
test
repz
mov
add
xchg
outsl
cmp
sbb
cmp
xor
or
mov
inc
mov
push
ret
pop
push
xor
or
loopne
ja
or
int3
fstpl
jg
fsub
xchg
addr16
xor
or
loopne
pavgw
inc
cmp
dec
das
repz
scas
pop
enter
cmp
inc
cmp
inc
push
sbb
pop
inc
cmp
sbb
cmp
sbb
pop
add
aas
data16
pop
cmp
outsb
xchg
jns
sbb
sub
pop
cmp
push
inc
jne
and
cmp
js
cltd
pop
cmp
and
cmp
xchg
inc
movb
or
mov
inc
cmp
inc
loop
int
repz
sbb
add
mov
mov
scas
inc
loop
int
pop
cmp
pop
mov
cli
jnp
out
pop
xor
sbb
mov
mull
pusha
push
loopne
scas
jbe
rorb
lods
jb
xchg
push
mov
ss
or
faddl
xor
mov
in
push
mov
xchg
shl
cmc
xor
mov
test
cmp
sbb
cmp
inc
cmp
sbb
cmp
inc
cmp
sbb
cmp
inc
cmp
sbb
imul
mov
add
stos
add
cmp
inc
cmp
sbb
cmp
sbb
cmp
inc
cmp
sbb
sbbl
cmp
inc
cmp
sbb
cmp
inc
cmp
sbb
cmp
inc
cmp
in
pop
cmp
insl
or
test
jp
in
sti
jecxz
pop
dec
mov
sbb
mov
mov
mov
sub
adc
ret
cld
mov
sbb
pop
mov
sub
fstpl
out
jb
cli
mov
fsubrs
fwait
jb
mov
scas
jmp
adc
out
xor
mov
dec
or
stos
add
xchg
mov
mov
push
cmpsl
movsb
imul
jmp
out
movzbl
test
divl
fisttpl
push
jp
fisttpl
dec
pop
cmp
xchg
aad
xchg
fnstcw
icebp
xchg
popf
mov
stos
and
adc
adcl
jo
mov
rcl
fidivrl
mov
mov
jecxz
xchg
cmc
adc
stos
push
jne
jne
int
xor
cmpsb
stos
xchg
and
add
add
add
jp
add
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jp
add
jns
add
or
mov
jp
add
jp
add
jp
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
icebp
jp
add
add
add
jnp
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
push
add
push
imul
int3
mov
lea
mov
adc
inc
push
in
cs
xor
push
fldt
mov
movsl
insl
jmp
sbb
add
xchg
cltd
loopne
in
or
rcll
and
sub
inc
inc
repnz
pop
mov
mov
test
or
adc
and
sbb
cld
push
mov
in
scas
adc
sbb
fsubs
mov
mov
out
ljmp
arpl
outsb
cmp
mov
andl
xor
dec
aas
sbb
cmpsl
push
leave
cld
ja
outsb
push
push
in
push
pop
loope
push
fucomp
mov
pop
xchg
cli
xlat
aaa
movsb
setno
imul
pop
xchg
sub
leave
fildl
adc
pop
sahf
testl
shll
arpl
movsl
test
iret
shl
xor
loop
stc
mov
pop
mov
jno
nop
das
mov
xor
ljmp
out
dec
add
lods
call
and
insb
fcompl
jl
out
faddp
js,pn
in
xchg
adc
fsubr
jge
lret
les
dec
lds
adc
xchg
xchg
jg
sub
inc
cmp
inc
jmp
jp
pushl
bound
das
test
xchg
out
mov
cmc
jg
sbb
sbb
sub
imul
js
minps
mov
pusha
and
sbb
mov
and
add
xchg
lods
mov
testb
iret
mov
push
dec
std
inc
sti
mov
fidivs
mov
push
or
mov
sub
and
clc
jno
push
jle
adc
inc
jno
mov
inc
mov
lcall
mov
inc
imul
jns
mov
in
xchg
out
xor
push
jg
xchg
jg
bound
adc
popa
cmp
xlat
mov
int3
mov
push
call
xchg
add
clc
mov
jo
int3
jmp
std
jbe
pop
cld
and
adc
pushf
or
aaa
sbb
out
nop
mov
mov
cmp
ss
hlt
adc
aas
mov
mov
sub
iret
addb
test
ds
mov
jmp
jno
mov
sub
jno
or
xchg
adc
in
inc
xor
fisubrl
inc
inc
and
add
xor
insb
arpl
mov
popa
pop
lret
movsl
jg
jg
lret
pop
sbb
mov
mov
xchg
xor
cmp
shrb
push
mov
call
nop
inc
inc
js
pop
jg
fnsave
ljmp
rclb
mov
popf
sti
jmp
lcall
jnp
push
setge
mov
iret
cmp
flds
ds
dec
out
sub
mov
adc
pop
imul
pop
mov
insl
dec
loop
call
pop
adc
pop
cli
cmp
cmpb
xadd
and
aaa
pushf
xchg
lds
std
cmc
and
mov
push
mov
and
pop
in
add
pop
push
lret
pop
adc
cmp
jge
xchg
fwait
ljmp
mov
jecxz
sbb
inc
scas
push
bound
push
sub
mov
int3
addb
xchg
pop
inc
int
add
lds
nop
mov
or
adc
sbb
das
in
sarb
jo
jns
xor
vcvtsd2ss
inc
ftst
xlat
hlt
mov
and
mov
fwait
bnd
xor
and
dec
sub
pop
push
adc
lods
outsb
not
dec
dec
or
add
adc
shr
fwait
popf
mov
xor
jne
inc
enter
inc
mov
daa
jg
mov
cmp
add
xchg
and
dec
dec
dec
xor
mov
sti
sbb
sahf
push
sbb
xchg
insb
pop
xchg
pop
cld
xlat
cmpsb
lret
and
lods
out
fbstp
fcmovnbe
mov
lahf
fbld
inc
xor
lea
jo
lahf
pop
pop
test
negl
xor
and
ficompl
dec
sbb
mov
mov
mov
mov
fidivrs
mov
sbb
aaa
inc
mov
pop
cmp
dec
jle
fwait
push
mov
jle
call
add
testb
bound
nop
je
cmp
jle
ja
xor
aam
fstp
add
fldenv
and
rorl
and
ss
shl
and
ja
xchg
rcll
xor
jmp
pushf
pop
xchg
stos
add
stos
xor
cmp
icebp
dec
cmp
stos
dec
shll
idiv
mov
test
cli
jmp
mov
mov
cs
sub
pop
cmpsl
adc
imul
fwait
inc
sbb
imul
stmxcsr
fimuls
stc
pop
scas
out
fmuls
test
pop
and
test
adc
xchg
push
call
mov
cmp
xchg
xchg
mov
lock
repz
int
call
outsb
outsb
jae
dec
movsb
xor
xor
cwtl
mov
mov
outsb
test
das
pushf
pop
pushf
jno
jecxz
cmp
les
jmp
mov
sahf
mov
sarl
loopne
dec
push
xchg
out
pop
push
enter
out
js
xor
jge
dec
popa
rorb
add
mov
mov
fcmove
jmp
aad
fcompl
ret
and
mov
ret
scas
lret
mov
test
and
jl
mov
icebp
dec
nopl
and
dec
scas
aas
les
aaa
mov
popa
into
dec
xor
xlat
outsl
movsl
adc
inc
in
lahf
lret
xor
inc
arpl
movsl
movsb
sti
inc
push
dec
outsl
sub
xor
dec
jp
pop
mov
sub
pop
shll
adc
call
adc
fisubs
jae
lods
or
mov
test
push
test
xor
out
es
mov
mov
lock
pop
in
dec
mov
jo
pop
pop
cmp
mov
je
fstp
inc
in
movsb
cmc
test
add
icebp
sbb
movsl
xor
push
jbe
ss
into
inc
lret
lahf
repz
cmp
cmp
loopne
push
mov
pusha
jnp
jmp
add
in
loopne
nop
jbe
bound
inc
imulb
jp
jae
push
jo
and
fisubrs
and
dec
ljmp
cmp
shrb
dec
xor
in
int
ret
and
pop
mov
leave
mov
movb
push
push
mov
pop
rorb
inc
add
inc
mov
imul
popa
fnstenv
in
lret
jmp
inc
or
inc
sahf
dec
mov
cmp
and
scas
jnp
mov
push
jl
push
add
adc
sub
add
mov
add
aam
sti
push
sti
or
repnz
add
xadd
sub
lahf
lcall
sub
fcmove
in
xorl
stc
pushl
dec
xor
cmp
movsl
int
stos
in
in
scas
fstps
jge
insl
inc
flds
inc
push
adc
dec
rorl
and
mov
pop
xor
push
ret
cmp
dec
and
push
push
or
sbb
lea
sbb
aam
std
sarl
mov
dec
jns
dec
or
mov
or
inc
bound
sub
out
xchg
xor
mov
adc
cs
sub
ss
adc
jnp
push
int3
mov
popf
and
mov
xor
fst
popf
mov
cmp
or
inc
inc
xlat
dec
dec
leave
mov
imul
cmp
mov
sbb
fdivrs
ljmp
inc
pop
rorb
adc
pop
pusha
sbb
fistpl
movsl
stc
jae
xlat
inc
out
cmp
adc
and
xchg
xchg
mov
pop
jno
out
jle
rcll
nop
add
in
or
jnp
arpl
inc
mov
pop
cmp
jae
mov
mov
lods
xor
mov
sub
push
rcrb
jb
sarl
inc
adc
sarb
les
dec
add
or
test
lret
jge
call
adc
push
cmp
lock
inc
mov
test
lock
in
cmovae
add
inc
mov
pop
pop
and
addr16
cmp
pop
push
out
mov
adc
movsb
push
inc
adc
rclb
mov
pop
cli
pusha
movsb
mov
call
test
int
lea
jmp
jmp
inc
lds
or
jp
popa
ds
cmp
sbb
test
aaa
xchg
sbb
outsb
adc
and
mov
dec
add
cmpsb
out
mov
cmp
dec
pop
add
sub
mov
mov
sub
mov
or
ss
cs
mov
xor
inc
call
add
rcrb
mov
jge
int
inc
cmp
cli
popa
mov
or
jmp
xor
cli
xor
imul
mov
cmp
bound
jle
pop
and
call
xchg
ret
test
xor
or
cmp
cmp
xchg
jg
and
jmp
lret
in
loopne
adc
adc
push
movsb
das
pop
cltd
jmp
out
mov
and
sbb
cmp
out
inc
or
test
cmp
push
dec
pop
dec
inc
inc
or
jo
xor
add
and
xor
fildl
adc
push
inc
push
cmpsl
lods
test
repnz
sti
pop
outsl
or
mov
pop
jb
rcll
out
xor
mov
repz
fcmovnu
mov
push
mov
pop
in
arpl
add
outsb
arpl
jmp
sbb
aaa
inc
fdivr
mov
ds
sbb
inc
int3
inc
push
mov
sar
mov
mov
add
push
les
add
dec
mov
cmpsb
xor
aad
shll
pop
hlt
int
roll
iret
aaa
push
cld
xchg
stos
sub
sbbb
pop
negb
and
cmp
ss
cmp
hlt
int3
cmpsl
cltd
stos
stos
adc
jno
incl
out
mov
xchg
adc
mov
inc
mov
int3
pop
sbb
addr16
lds
pop
xchg
mov
inc
shll
inc
jle
mov
sbbb
cmp
paddw
xchg
mov
lcall
or
sbb
sub
gs
mov
mov
push
mov
dec
inc
mov
movsb
or
mov
adc
mov
push
loopne
out
test
and
push
pushf
add
sar
add
or
xor
int
mov
repnz
not
fimuls
mov
sbb
stc
repnz
outsb
push
jne
pshufw
test
mov
and
mov
jo
push
fmuls
dec
test
fwait
jl
xchg
mov
mov
outsb
js
adc
imul
xchg
xchg
mov
in
xchg
mov
scas
add
sahf
pop
mov
pop
add
push
lret
pop
test
lods
jl
mov
lcall
imul
or
testl
std
and
lock
orl
mov
aad
jnp
out
test
inc
bound
ficoml
cli
pop
in
dec
xchg
out
inc
addr16
dec
shr
out
cmp
and
cmc
jge
xchg
enter
imul
movsl
jg
or
int
sub
bound
test
inc
fildl
das
ficompl
cmp
mov
pop
js
xlat
dec
lahf
ret
sub
cmp
mov
jp
or
cwtl
sbb
xchg
iret
iret
call
push
testl
push
adc
enter
mov
mov
adc
pop
out
or
in
iret
out
mov
push
fidivl
repz
sti
clc
enter
adc
fisttpl
dec
lret
push
jb
loope
xchg
lcall
add
into
loop
insb
repz
fnstcw
fcompl
les
stos
inc
or
sbb
std
hlt
int
jo
cmc
loope
pop
test
jae
xchg
ret
add
push
mov
into
shll
inc
lods
je
cmp
sarl
and
in
frstor
pop
rclb
cmp
lods
mov
xor
lcall
int3
pop
fsubs
xchg
add
ret
jl
arpl
lods
and
sbbb
cmpsl
sub
or
dec
mov
dec
jecxz
sub
dec
gs
add
mov
xchg
jecxz
push
ja
in
fstps
popl
xchg
mov
mov
pop
mov
or
push
popf
or
mov
xor
add
hlt
sarl
mov
jbe
out
push
gs
das
sub
fisubrl
pusha
jmp
jg
xlat
gs
pop
pushf
in
dec
mov
or
addr16
mov
cmpsl
mov
rclb
hlt
cltd
sbb
loop
push
or
mov
scas
xchg
fnstsw
cmp
xchg
negl
push
dec
sub
mov
or
aaa
outsb
in
or
loope
xchg
jge
push
iret
or
sbb
xchg
and
pop
fs
xor
rol
pop
loop
sbb
mov
fnstcw
sub
incb
inc
dec
push
cmpsb
dec
loop
adc
iret
xchg
xchg
mov
dec
je
sub
andl
jb
jae
std
mov
fbld
push
arpl
sarl
mov
push
cmp
dec
cmp
pop
mov
xchg
mov
or
js
jbe
test
inc
fmul
in
add
clc
jno
loop
lret
cmp
fdivl
sbb
popa
jle
ret
arpl
mov
xlat
cli
repz
add
push
jno
cmp
xchg
push
enter
decl
ljmp
push
mov
ret
mulb
in
out
jno
jecxz
inc
cmpsl
insb
pushf
jno
rcll
mov
sahf
adc
cmpsl
jmp
mov
xchg
popf
icebp
std
or
xchg
sbb
inc
add
mov
mov
outsl
pushl
jg
inc
push
sahf
inc
pop
lret
lea
push
aas
pop
or
jbe
adc
in
or
mov
int
cld
cmp
mov
mov
jg
jp
pop
push
ljmp
call
rol
in
roll
fisttpl
iret
mov
in
divb
sub
xchg
icebp
roll
mov
xor
mov
sbb
flds
xchg
push
repz
aam
rolb
shr
adc
jl
rcll
jg
dec
lds
sbb
repz
mov
ret
hlt
fdivrs
imul
dec
cmpsl
in
loop
sti
or
out
and
bswap
sbb
ss
imul
push
jecxz
jns
cmpsb
cmp
lods
pop
pop
pop
sbb
addr16
test
lods
jge
das
pop
mov
push
cmpsl
lods
and
outsb
out
dec
in
dec
push
insl
fs
incb
gs
scas
cmp
xor
pop
and
jnp
stos
mov
mov
lds
push
xor
ja
dec
cmpsb
jnp
sbb
stos
daa
cltd
sub
mov
popf
jno
or
jno
cmpb
xchg
ss
dec
fnstsw
sub
jb
jb
pop
imul
insl
or
cs
cwtl
and
xlat
bound
out
out
daa
jae
jle
sub
fs
sbb
ficoml
push
scas
loope
loope
inc
inc
mov
cltd
leave
sti
jbe
insl
test
sbb
mov
mov
xchg
repz
arpl
mov
or
test
xchg
stos
pusha
rcr
and
mov
jp
jmp
rolb
sbb
xorb
stos
ja
fbld
nop
mov
std
stos
stos
pusha
dec
scas
pop
xor
ret
subl
movsl
ja
or
xor
sub
in
or
dec
jl
mov
daa
sahf
jmp
push
mov
pop
or
test
icebp
imul
test
mov
ljmp
inc
dec
pop
add
test
loope
rcr
push
inc
jbe
push
cmp
gs
mov
shrl
sub
xchg
cltd
orb
lods
scas
or
adc
addb
inc
sbb
fisttps
mov
pushf
mov
sub
scas
call
and
xor
incb
inc
in
loop
test
push
jg
jle
es
enter
bound
sbb
cmp
outsl
xchg
pop
lds
xchg
fstpt
mov
idivb
pop
fucompp
lcall
dec
pusha
lret
inc
push
repnz
hlt
ficomps
dec
rep
sahf
lcall
mov
loop
inc
mov
sbb
mov
sub
pop
jne
pop
adc
fidivrs
mov
loop
dec
lret
mov
insl
enter
push
test
adc
test
dec
push
adc
loopne
adcl
ret
lea
sbb
fwait
xor
shll
mov
out
into
mov
mov
fistpll
or
lret
je
into
jmp
iret
aad
mov
addr16
test
into
lods
dec
mov
xor
and
sbb
cmp
jns
pop
add
mov
ja
stc
cld
lock
shll
cwtl
and
filds
sbb
js
test
lods
ljmp
jecxz
arpl
loope
and
inc
stc
inc
push
sbb
xor
fldl
dec
out
jecxz
cmp
test
test
arpl
mov
pop
movsb
loope
jo
fimuls
jo
pushf
push
out
ficoms
cmpsb
pop
mov
xchg
push
stos
xchg
jnp
pop
sbb
in
sbb
mov
mov
repnz
or
jne
outsb
insb
pop
fcomps
add
ja
mov
inc
icebp
outsl
sub
jge
popf
adc
cltd
inc
gs
add
in
iret
int3
mov
es
inc
xchg
rcl
test
ja
cmc
fwait
mov
push
or
dec
lcall
scas
stc
sub
cmc
stos
dec
add
mov
icebp
jle
push
lahf
cmpsb
test
fnsave
dec
out
push
cmp
cmpsl
stos
sub
inc
arpl
enter
push
mov
lret
dec
lcall
lret
nop
xor
adc
icebp
mov
arpl
adc
dec
pop
pusha
gs
scas
fwait
and
adc
movsl
mov
push
imul
fidivrl
stos
arpl
or
adc
ret
test
add
jl
xchg
into
push
push
jbe
jo
dec
mov
popf
test
jnp
shrl
xor
lcall
sbb
mov
mov
or
and
clc
ja
inc
and
gs
adc
sub
pop
inc
icebp
inc
xor
sub
lret
shll
out
mov
push
rcrb
mov
daa
jne
fldcw
sbb
jne
fisubrs
hlt
out
lock
cmpsb
insb
cmp
daa
and
add
mov
adc
pop
cs
shl
sbb
sbb
rcrl
fs
and
adc
xchg
jle
pop
sti
pop
add
mov
push
push
push
fdivrl
sub
and
xor
cld
xchg
cmp
xor
sub
or
scas
pop
xchg
cmp
and
mov
jnp
pop
mov
or
out
push
and
test
insb
push
arpl
mov
aad
movsl
mov
loopne
lds
pop
mov
jno
outsl
cmc
adc
cmc
xor
dec
popf
shlb
ret
pop
cmpsb
pop
dec
dec
ds
xor
dec
movsb
jne
fst
daa
js
lods
lods
bound
ucomiss
idivl
sbb
shl
test
hlt
pop
xchg
mov
jno
jge
cmp
ds
pop
adc
bound
mov
adc
push
iret
sub
or
mov
cwtl
push
adc
pusha
push
sbb
dec
data16
xchg
xchg
push
shll
or
sub
aaa
test
lods
mov
and
push
push
div
outsl
fwait
sbbl
add
mov
add
mov
mov
aaa
clc
mov
inc
fisttps
ja
into
data16
sbb
xor
subb
sti
jb
out
insl
or
cld
push
mov
push
js
icebp
sub
ficoml
lock
and
into
dec
shrb
pop
add
pop
cmp
adc
sbb
sahf
pushf
xchg
arpl
adc
nop
in
jle
ret
adc
mov
cmc
jo
ret
xchg
loop
icebp
movl
lret
push
mov
add
nop
cwtl
mov
imul
cli
mov
test
lea
mov
test
lods
cwtl
or
push
sbb
xor
sti
push
arpl
imul
sub
popa
dec
andl
adc
jo
mov
mov
xor
jno
mov
sbb
adc
cld
jbe
and
jge
cmpsl
sub
or
bound
outsb
adc
pushf
loopne
int
test
mov
pop
lods
aad
jmp
shrb
cmp
adcl
hlt
mov
pop
push
sahf
lds
mov
jmp
inc
xchg
fcomip
jbe
push
cmpsl
lret
adc
dec
fbld
cmp
shrb
xor
cmc
into
arpl
xchg
dec
push
jne
jle
mov
dec
mov
xor
je
mov
push
jb
sti
cmp
clc
pop
cmp
and
dec
fists
add
xchg
cld
imul
popa
addps
xchg
jne
xor
ret
sbb
pop
or
push
cltd
inc
divb
xchg
jg
movsb
push
enter
test
cwtl
adc
jl
in
adc
pop
push
fcmovu
or
lods
and
sbb
popf
lret
fstps
or
lea
jp
lock
xchg
sbb
repz
popa
das
pop
pop
lods
cmpsb
lods
stos
mov
and
dec
mov
and
jmp
add
add
enter
aas
fsub
push
sbb
inc
sub
cmp
mov
dec
fdivrs
jae
jg
int3
in
leave
jp
and
rorl
mov
mov
jo
jp
mov
mov
mov
das
xlat
inc
aas
out
les
aaa
out
xchg
ret
ffree
pushf
or
ljmp
movsb
sti
cmpsb
inc
mov
ljmp
insb
shl
cwtl
pop
pop
cmp
xchg
frstpm(287
sahf
adc
ret
cmp
arpl
sbb
xor
inc
aam
pushf
and
jmp
js
fisubl
ja
cli
push
call
push
out
adc
in
stos
push
add
and
addr16
stc
jl
jo
es
into
daa
rolb
xchg
jle
mov
sub
das
cmp
ds
fbstp
or
stc
fs
inc
xor
xchg
stc
popf
push
and
add
cltd
loopne
mov
decl
xchg
sub
or
mov
sti
je
popf
xchg
mov
mov
outsl
in
jbe
ss
lock
movsb
sbb
xorb
inc
addr16
dec
mov
mov
test
dec
lcall
push
jg
xor
orb
mov
lcall
sbb
mov
fcoml
std
into
sub
push
mulb
inc
cld
xchg
decb
fistl
mov
jg
and
push
cld
mov
aaa
mov
mov
in
push
loope
add
ljmp
lret
xchg
jne
fistl
cmp
hlt
negl
cmp
out
stos
ret
sub
ret
es
subb
scas
and
sbb
mov
sbb
out
lret
ds
xor
or
jns
sarl
push
and
mov
adc
in
dec
push
add
mov
incl
add
cli
outsb
sub
dec
adc
push
scas
shll
fcoml
int3
sbb
jbe
sbb
es
inc
pop
or
sub
dec
dec
repz
pop
call
sub
out
mov
or
nop
push
mov
pop
mov
pop
mov
and
gs
xor
add
pslld
sbb
fisttps
fsubrl
movsb
sahf
cmpsl
jbe
mov
xor
lods
xor
sarb
out
push
sbb
fdivs
pusha
jp
je
mov
or
adc
test
push
les
sbb
je
sbb
jl
outsl
xchg
lea
jo
dec
ret
in
mov
push
cmp
js
cmpsl
test
popl
das
pusha
xchg
fcom
das
fs
jle
jecxz
aaa
ss
cmp
mov
lret
lret
loopne
sbb
imul
mov
mov
dec
cmpsl
and
movl
jne
mov
cs
movsl
lahf
lcall
shll
mov
mov
out
push
ror
sub
in
xor
dec
sub
dec
das
imul
imul
test
jbe
xchg
mov
inc
cmp
cmp
and
mov
jle
pop
mov
inc
and
addr16
addl
cwtl
fwait
lock
jnp
cli
inc
push
adc
fs
jns
pushf
popf
icebp
xchg
ficomps
in
jo
xor
popf
cltd
and
jnp
in
lcall
jns
cld
daa
dec
or
jo
push
fisubrs
add
mov
pop
loope
repnz
frstor
cmp
cwtl
out
xor
fisubrl
test
mov
outsl
dec
or
ss
clc
adc
lahf
mov
mov
int3
cmp
xchg
fmuls
sti
lret
mov
mov
inc
mov
dec
mov
add
push
aas
and
je
mov
mov
into
outsb
andl
les
push
mov
inc
sbb
mov
inc
clc
or
dec
dec
in
cmpsb
adc
jb
cmpsl
and
int3
xchg
xchg
xor
xor
inc
dec
lods
cltd
std
xor
mov
shll
pop
ljmp
aam
and
movsl
xchg
cmp
adcl
movsl
inc
rcrl
iret
repz
pop
lret
fsubrl
mov
fdiv
cltd
mov
push
cmp
jbe
ljmp
add
mov
shlb
cmp
sbb
rcll
shrl
leave
shlb
add
addr16
adc
inc
jae
and
daa
jb
push
xchg
aam
fisubrl
les
test
xchg
test
jl
into
cmpsb
mov
xchg
jl
dec
rcrb
in
into
inc
pop
mov
addl
enter
or
lds
adc
adc
mov
inc
pop
jb
arpl
cmpsl
jns
outsb
adc
add
xchg
mov
js
sahf
das
xchg
add
shlb
mov
cmp
mov
sbb
pushl
or
scas
lods
ljmp
cwtl
insl
push
dec
dec
test
sbb
pop
out
pop
cli
inc
sub
icebp
add
outsl
hlt
sub
std
pusha
sbb
lcall
mov
add
push
stos
aas
pop
sub
outsl
lahf
cmpsl
fwait
adc
shr
imul
icebp
cmp
add
out
cltd
ja
push
stos
in
cmpsl
dec
dec
xchg
or
mov
scas
dec
push
and
push
mov
lock
rclb
dec
es
fisttpll
cwtl
inc
out
stc
daa
jne
rcr
dec
dec
add
xlat
fisttps
fsts
cs
cmpsb
mov
ss
sub
loopne
ds
ret
jge
mov
dec
jnp
sub
rcrl
xchg
clc
xor
leave
pop
cmpsb
repz
or
cli
mov
inc
mov
sbb
xchg
test
sub
rcl
imul
xor
incb
pop
xchg
jge
outsb
cmp
loopne
or
mov
fnstenv
lds
stc
sub
adc
movl
xchg
mov
xor
jmp
repnz
jmp
and
ds
test
push
sub
mov
ret
jl
and
lcall
imul
jns
cmpsb
xchg
addl
xchg
add
sub
imul
std
add
jle
stos
insb
and
dec
jne
jbe
mov
add
adc
roll
test
xchg
das
cmp
dec
leave
ljmp
ror
popf
jmp
bound
cwtl
or
add
sbb
push
arpl
cltd
fbld
jns
jge
mov
xor
mov
jo
out
iret
mov
int
jb
int
push
mov
lds
mov
adc
xchg
mov
addr16
popa
cmp
xor
cmp
das
mov
and
leave
fcmove
jmp
in
push
xor
fadds
xchg
xchg
dec
sub
lods
cmc
movsb
pop
cli
mov
repnz
mov
cmpsl
out
sub
cmp
mov
clc
stos
sbb
inc
mov
in
push
xchg
nop
je
lcall
mov
inc
fisubl
xlat
aaa
mov
mov
push
es
pop
xchg
push
add
sbb
cltd
xor
sbb
xor
lret
std
movsl
in
scas
fwait
repz
jnp
mov
push
cltd
repz
cmp
push
xor
jmp
aam
mov
dec
jecxz
sahf
adc
cs
ds
add
jge
push
jnp
dec
jge
pop
lea
add
jp
inc
loope
mov
mov
scas
loop
out
cld
testl
lods
push
adc
mov
lcall
stos
in
xchg
adc
test
adc
cmp
lcall
jo
sub
stc
pop
mov
ds
or
iret
add
jmp
addl
or
fdivr
mov
xchg
dec
shlb
imul
xchg
loop
cltd
adc
xchg
popf
lods
xor
out
dec
push
loope
icebp
icebp
in
sahf
fcomi
sbb
xor
cmp
nop
mov
fwait
aad
add
mov
test
fwait
add
pop
pop
push
pop
lds
into
stos
notb
in
sahf
cmpsl
cs
xchg
iret
loope
xchg
pop
xorb
loopne
mov
inc
in
mov
fistpl
lcall
stos
xchg
shlb
sar
add
adc
push
cmpsl
push
jnp
mov
add
gs
inc
fmull
xor
mov
aas
iret
mov
fwait
sub
jno
lea
das
push
fidivrs
es
push
lret
sbb
push
scas
sti
shll
pop
hlt
xchg
mov
jne
adc
inc
mov
ds
cwtl
pushl
int
pushf
pop
sub
je
ljmp
inc
mov
ljmp
inc
xlat
xchg
pusha
sar
ret
jl
and
push
outsb
inc
xlat
dec
loopne
xchg
in
stc
movsl
int
loope
sub
sbb
loop
hlt
cwtl
push
mov
sarb
inc
sbb
scas
fcompl
es
outsl
lahf
xor
pusha
insb
shll
test
addl
mov
pop
jbe
sub
adc
mov
mov
cmp
in
jns
mov
cwtl
repnz
mov
add
jnp
add
lahf
fsubrl
mov
xchg
das
pop
fcmovne
daa
inc
dec
daa
add
das
add
test
add
cmpsl
mov
inc
ljmp
jbe
inc
movsb
aad
xchg
shl
addr16
xor
and
and
fdivs
adc
nop
popw
push
jns
out
xlat
jnp
stc
cli
lret
roll
and
jno
push
push
jle
push
or
mov
adc
into
sub
xor
pop
or
mov
cmp
inc
notb
cmp
les
bswap
es
jp
lock
loop
out
mov
dec
and
adc
inc
out
push
cmp
cld
cmp
lea
push
inc
push
out
and
sti
in
jmp
mov
dec
add
push
mov
jae
dec
or
fidivs
repnz
jnp
sti
push
jp
cwtl
pop
cmp
pop
dec
inc
cmp
aas
push
jae
lods
cltd
jl
in
ror
outsb
ja
je
lds
pop
sub
mov
mov
or
cld
xchg
imul
adc
lds
adc
lock
mov
cmp
xor
outsl
andb
mov
xor
inc
mov
cltd
sti
popf
out
subb
mov
push
pusha
add
inc
test
in
icebp
jmp
pop
pop
xor
add
xor
pusha
jg
outsl
jno
sub
mov
test
lods
in
push
push
notb
sbb
out
fmuls
mov
jecxz
add
mov
adc
mov
testl
mov
repnz
sbb
dec
call
jno
fsts
pop
fstpt
add
add
dec
mov
jns
mov
decl
dec
loope
xchg
daa
xchg
out
fcoms
iret
cltd
sub
std
in
cs
fidivl
adc
add
out
lret
push
out
lcall
roll
mov
jge
into
adc
pop
je
popa
stos
lds
jbe
aam
pop
in
nop
sub
int3
cli
out
push
inc
mov
insb
cwtl
imull
std
mov
add
mov
ljmp
and
int3
test
lcall
push
rcll
test
rorl
cmp
imulb
pop
push
inc
adc
cmp
pop
pop
shl
es
adc
andl
inc
les
aaa
data16
out
push
es
imul
fisttps
add
cli
push
mov
and
scas
mov
sahf
fisubrl
mov
xor
dec
xor
nop
sub
int
push
mov
jge
push
mov
or
mov
sahf
or
sti
mov
inc
cwtl
mov
or
sub
loop
fiaddl
ficoms
out
sub
aad
mov
es
push
jbe
in
rolb
shlb
ja
push
cmc
fcmovbe
sar
and
call
pop
inc
inc
pop
xchg
in
mov
faddp
sbb
in
les
jmp
or
inc
or
aam
cltd
inc
mov
jae
adc
or
mov
ljmp
push
mov
shl
xor
test
fdivrl
imul
pop
ljmp
pop
add
scas
lcall
adc
aaa
lret
mov
jne
dec
mov
mov
cld
std
in
add
enter
add
sub
mov
test
icebp
or
xchg
cmpsb
aam
sbb
lods
clc
cmp
leave
push
insl
or
jecxz
fcoml
push
inc
jnp
and
das
and
jb
es
test
xor
imul
xor
aad
sbb
adc
mov
insl
sar
lret
addr16
cmp
test
lret
xchg
dec
mov
or
in
cltd
stc
aas
sbb
inc
xchg
lds
inc
inc
mov
mov
cltd
rcrb
sub
clc
addr16
adc
adc
lods
lds
cmpsl
and
mov
mov
out
orl
imul
addr16
icebp
mov
ja
ror
push
xchg
and
mov
lret
jle
mov
sbb
cmp
cld
cmovle
xchg
imul
sbb
pop
pushf
xlat
es
addr16
cmp
ja
mov
movsb
mov
fistl
sub
fisttpll
or
call
jecxz
stc
hlt
es
mov
mov
inc
inc
add
jbe
sbb
loope
ret
mov
outsb
add
outsb
lahf
out
xchg
sub
sub
jo
push
adc
adc
mov
lcall
imul
jp
dec
mov
mov
stos
xchg
mov
dec
sbb
jns
loopne
cmp
jg
in
fsubrl
mov
lret
adc
or
lcall
bnd
jp
adc
cmp
sbb
gs
inc
pop
rolb
mov
push
ljmp
dec
lcall
mov
jecxz
push
mov
repnz
and
and
aad
es
jl
jnp
cwtl
and
arpl
jo
mov
jecxz
sbb
inc
jp
pusha
xor
mov
int3
jae
jbe
fmuls
sub
mov
jl
adc
test
inc
js
das
pop
cwtl
insl
inc
stos
pop
aad
or
repnz
in
fwait
idivl
idivl
cmpsl
mov
jns
shll
mov
imul
mov
mov
fisubrl
ret
out
fwait
and
jg
mov
adc
pop
jl
mov
mov
cli
push
cmpsb
mov
inc
jl
lds
inc
dec
in
popf
jo
jb
mov
jmp
lds
lods
inc
lcall
xchg
sub
in
in
push
shl
fsubr
loop
adc
sbb
int
mov
mov
inc
sub
dec
enter
mov
fmuls
popa
jnp
xor
mov
dec
imul
test
pop
jle
xchg
jl
jle
aam
or
push
cmp
and
dec
repnz
lcall
nop
scas
pop
inc
adc
loope,pt
daa
push
ret
jae
sub
popa
inc
into
jbe
jg
lcall
mov
jmp
cmpsl
shlb
sbb
add
setb
dec
inc
aaa
shlb
loope
push
jnp
aas
dec
outsb
cld
popa
mov
shlb
inc
dec
testb
aas
inc
mul
sub
mov
mov
push
push
sahf
das
aas
add
dec
or
sub
stos
sbb
out
test
jp
fwait
divw
lds
mov
and
cmp
aam
std
hlt
jno
subl
mov
add
jb
xor
adc
int
mov
out
lods
mov
mov
out
add
cmpsb
push
jb
adc
add
les
lcall
je
movsb
imul
inc
jnp
pop
mov
xchg
mov
xchg
out
inc
dec
and
and
push
cmp
loopne
ds
notb
or
jle
in
insl
xchg
cmc
xor
outsb
fmulp
mov
mov
lret
dec
and
sbb
lds
mov
fldl
mov
mov
pop
loopne
cmc
movsb
sub
out
xor
sub
jge
ljmp
scas
mov
icebp
push
in
adc
das
repnz
sbb
lret
scas
mulb
cltd
pop
lret
sbb
mov
cmp
adc
mov
daa
mov
pop
clc
xchg
and
decl
jbe
cltd
or
or
jecxz
add
inc
pushf
arpl
adc
jae
out
mov
xchg
imul
inc
mov
jb
loopne
or
insl
mov
xor
jg
outsl
xorb
push
mov
mov
testb
ljmp
sub
fidivs
aas
call
sub
jg
ret
jne
pop
fidivrs
cmp
or
xor
or
insb
or
adc
stos
les
pop
decl
mov
js
movsb
fsubrs
pop
jnp
pop
jle
ja
xchg
sbb
lock
dec
subl
pop
int3
push
jmp
cltd
sti
jge
dec
inc
add
pop
cmp
incb
mov
adc
icebp
mov
inc
sub
sub
popa
pop
in
dec
mov
mov
sbb
adc
mov
mov
fdivrl
repnz
insb
pop
lret
and
xchg
mov
movsl
push
sub
rcrb
loopne
sahf
adcb
lea
adc
pop
adc
int3
pop
pop
daa
das
adc
cs
mov
loop
mov
mov
test
out
pop
ffreep
inc
cmc
adc
mov
xchg
push
fisubrs
enter
shrb
sti
dec
fcmovbe
test
lret
aaa
mov
lods
loopne
imul
push
cltd
push
push
iret
xor
movl
push
pop
mov
sub
cld
rcrb
xchg
rcrb
cwtl
movsb
inc
sbb
lret
push
cltd
jo
mov
mov
inc
mov
mov
mov
pop
xor
enter
jle
clc
sbbl
dec
adc
data16
loop
sub
jno
pop
cli
jnp
clc
fst
sbb
int3
pop
xor
sub
mov
mov
or
mov
pop
xchg
icebp
fnsave
lock
mov
mov
arpl
rorb
jns
cmp
bound
in
test
lods
inc
adc
mov
cmpsb
addl
cltd
or
pusha
adc
jl
scas
xlat
push
push
mov
test
add
andb
xor
xlat
dec
in
mov
loope
lds
push
or
push
or
or
pmulhw
dec
xchg
sahf
pop
fisubrl
cmc
int
sub
insb
stc
mov
push
push
test
mov
jmp
lahf
mov
pop
inc
mov
jo
movsl
or
stos
sub
adcl
or
dec
push
dec
add
sti
sub
pop
dec
imull
push
std
push
into
inc
ret
stc
lret
lret
xchg
mov
jno
push
cmp
icebp
out
mov
xchg
mov
sbb
add
jbe
push
mov
mov
je
pop
rcll
in
xchg
cmp
sbb
sbb
fwait
xor
xor
lcall
repz
les
pushf
inc
fldenv
pop
sub
lea
dec
ret
mov
shrb
stc
and
les
jb
cltd
inc
push
and
or
negb
jbe
xchg
pop
xchg
js
sbb
loope
dec
inc
inc
cwtl
jg
mov
xchg
add
inc
sti
xchg
pop
mov
mov
cwtl
stos
add
rclb
outsb
roll
nop
sub
pop
mov
out
adc
pop
sub
sub
stc
sbb
mov
mov
xor
aas
dec
lret
inc
pop
xchg
sbb
sar
pop
sbb
fxch
push
sub
cmp
push
ljmp
xchg
mov
xor
les
ja
incl
dec
jbe
in
dec
cmp
inc
push
jp
test
jne
or
test
fwait
rcll
jb
cmp
out
cmpb
pop
popa
test
cmp
or
xchg
or
cmp
pop
mov
xor
cs
push
xchg
loope
push
push
stos
push
cmc
ljmp
cmp
adc
xor
jne
and
jge
lds
xchg
jle
mov
xlat
xchg
insb
push
cli
clc
shrb
and
pop
stos
icebp
dec
int
dec
repnz
xchg
loope
push
arpl
fstl
add
cs
adc
push
sahf
adc
lret
add
mov
mov
add
adc
jge
mov
rcrb
xchg
lds
les
xchg
adc
dec
int3
cltd
ja
dec
fwait
xor
pop
mov
outsl
notl
xor
ret
and
or
ss
mov
and
mov
pushf
jmp
mov
popa
dec
dec
push
push
pop
and
push
mov
push
inc
imul
cmpsb
inc
jb
leave
ljmp
push
addr16
adc
push
xchg
es
daa
popf
test
and
enter
lahf
pop
mov
dec
add
loop
xchg
mov
add
or
or
scas
fs
mov
or
dec
mov
push
xchg
inc
std
mov
mov
push
mov
or
int
test
lea
into
xchg
and
jnp
jns
push
into
fadds
add
rolb
fiaddl
mov
movsl
js
lea
leave
test
inc
in
sbb
or
out
cmpsl
cmp
mov
stc
stos
mov
adc
fisttpll
enter
inc
testl
test
adc
xor
inc
cmp
pushf
push
sub
jmp
sub
fstps
out
mov
cli
into
sbb
outsb
pop
mull
jle
into
test
or
jns
aas
dec
inc
add
mov
in
scas
mull
dec
or
pop
jno
pop
bound
or
stc
ja
mov
add
loopne
sub
pop
mov
hlt
jp
loope
push
idiv
pop
shll
xchg
xor
and
inc
or
jbe
loopne
fwait
std
push
imul
xchg
mov
pop
sbb
mov
scas
lds
xchg
dec
push
pop
jg
insl
cmpl
aaa
sub
mov
mov
pop
repz
mulb
dec
mov
add
aam
jl
cmpb
lret
mov
into
push
je
cltd
fadd
pushf
pop
or
sub
xchg
cmp
lds
sti
das
mov
decb
jle
out
test
xor
ljmp
mov
sub
faddp
movsl
and
cmpsb
ret
sub
test
mov
in
test
and
xchg
fwait
aam
movsl
in
andb
mov
or
jns
adc
sub
cmpl
xchg
pop
mov
jl
pusha
cmp
inc
push
aas
push
in
fucomp
adc
xor
mov
jb
jecxz
push
mov
fiadds
sbb
ret
std
jo
hlt
sbb
pop
divb
shld
pop
jg
sti
das
xchg
dec
bound
pop
fucompp
shrb
inc
jle
fwait
inc
in
add
aam
pop
sahf
mov
jl
inc
fwait
or
jg
repz
adc
popf
aaa
cmp
cltd
scas
or
sti
lods
pop
jnp
dec
arpl
sbb
inc
mov
shll
adc
imul
in
call
xchg
ljmp
add
pushf
imul
in
mov
sub
ss
pop
mov
add
pop
push
movb
out
push
cmc
mov
jge
std
fistpl
out
mov
adc
jns
push
ficompl
cmp
imul
jno
sbb
outsb
push
fstl
jb
jbe
mov
push
xlat
pop
test
or
mov
and
fnstenv
mov
pop
pop
out
int
jbe
pop
and
mov
orl
les
pushf
lods
call
push
add
sahf
dec
xor
aaa
mov
mov
and
lock
add
int3
xchg
ret
mov
pop
adc
push
or
fldl
jb
shrb
cli
cmp
out
mov
jmp
loop
pop
decb
xchg
loope
js
lret
int3
daa
lock
and
and
and
arpl
adc
out
cli
cmp
scas
int3
out
push
push
jbe
out
shlb
xor
imul
in
and
and
lret
lret
addr16
fdivp
inc
dec
in
int3
in
fcompl
test
jl
push
push
mov
out
sbb
movsb
rep
inc
pop
xchg
cmc
pop
nop
test
sbb
mov
outsb
mov
inc
cmp
push
push
add
sbb
lds
inc
xchg
mov
mov
mov
xor
pop
aam
lods
or
cmp
out
cmp
xor
rcrb
or
jb
mov
push
jno
jne
in
mov
jno
out
mov
sbb
adc
std
xchg
mov
add
push
mov
xchg
xchg
iret
push
sbb
push
cmp
adc
cmp
and
add
jnp
add
pop
mov
ja
jb
push
sbb
pusha
insb
and
mov
dec
in
cmpsb
das
repz
adc
jg
sub
das
sar
pop
mov
or
pop
fcmovb
mov
sub
pop
jae
imul
aam
aas
mov
push
scas
cmp
xor
mov
adcb
hlt
and
xchg
mov
pop
mov
mov
mov
push
scas
mov
ss
push
subb
dec
inc
lahf
aad
std
ds
lods
adc
inc
push
outsl
stos
pop
mov
adc
mov
aaa
lea
or
in
rclb
mov
cmp
cmc
cmp
jg
add
pop
fwait
js
xor
pop
pop
scas
add
xchg
xchg
fdivr
fnstsw
mov
dec
out
mov
pop
in
mov
sub
shrb
inc
mov
mov
ret
clc
and
in
inc
aam
fdivl
fildll
and
fcmovbe
xchg
push
popa
push
mov
inc
push
push
inc
add
xor
fwait
sub
lcall
inc
inc
dec
in
popf
loope
aam
cmp
out
popf
inc
and
ja
cs
roll
in
mov
inc
icebp
cld
push
inc
test
pop
pop
lea
or
insb
cmp
jae
jp
js
cmpl
es
mov
lahf
movsb
lret
lods
and
jnp
out
pushf
fs
jp
iret
add
xchg
lcall
sub
loopne
adc
fsubl
xor
push
inc
xor
enter
jecxz
jns
cld
pushf
fmul
cli
scas
dec
xor
call
in
push
es
mov
and
cmp
mov
std
ret
jnp
pushl
je
jo
mov
daa
mov
pop
fwait
in
push
cmc
sbbb
cmp
mov
mov
lahf
jne
cltd
or
sub
adc
loope
inc
sub
call
leave
pop
push
in
add
xor
daa
sbb
rol
mov
out
jmp
jg
mov
mov
adc
test
and
pop
popa
or
repz
sub
shll
inc
mov
call
jl
test
enter
movsl
adc
push
add
sub
inc
adc
movsl
imulb
mov
jmp
cmp
pop
inc
jmp
sbb
adc
mov
nop
inc
cmpsb
mov
mov
int3
adc
xchg
push
enter
xor
jno
mov
cli
fildll
xchg
sbb
sub
mov
sub
cld
hlt
andl
push
jge
cmc
lods
inc
push
pop
xlat
add
imul
int
mov
push
lea
or
stos
incb
ljmp
mov
dec
pop
push
xchg
mov
dec
xchg
cmp
mov
das
fcomps
pop
add
xor
mov
popa
ja
pop
cmp
inc
dec
rolb
pop
aaa
or
int
inc
mov
mov
mov
push
cli
out
inc
lret
stc
adcb
jle,pt
rcl
insb
pop
pop
inc
rcr
mov
sbb
push
loope
dec
loop
dec
pushf
or
jb
mov
popa
and
mov
or
add
xchg
andl
push
and
jecxz
nop
dec
aam
lods
lahf
pop
push
and
ds
cmp
outsb
adc
jne
sbb
pop
xchg
orl
fldenv
or
testb
std
sub
nop
add
fiadds
sub
cmc
push
cmp
sbb
fs
lcall
sbb
cmp
lods
rcrb
out
xor
fcmove
in
dec
ljmp
mov
rclb
inc
int
mov
mov
jb,pn
std
mov
push
jo
inc
jmp
sub
sbb
pop
xor
mov
fsts
xchg
push
jecxz
fidivrl
pop
sbb
aad
jmp
xor
loopne
sbb
sub
xchg
dec
aas
popf
jae
daa
aaa
mov
add
out
push
cmc
fcompl
jo
xorb
sarl
jnp
push
lea
sti
divb
inc
xor
mov
sub
cltd
pop
movsb
xor
dec
out
fs
imul
xor
pop
mov
add
mov
cwtl
xchg
cmpsl
sti
dec
andl
scas
insb
pop
mov
push
mov
xchg
mov
iret
mov
pop
lods
ja
cmpsb
out
and
outsl
lock
ficoml
and
popf
inc
outsb
pop
subl
and
test
jge
popa
fsubrs
movsl
jle
sbb
jmp
pop
das
mov
fdivrl
mov
insb
imul
leave
js
into
popa
adc
lock
dec
adc
push
push
and
cmp
addr16
jo
pop
movsl
sbb
dec
pop
push
sbb
mov
addr16
xchg
lcall
jo
scas
jmp
and
inc
xchg
xchg
lock
scas
xor
in
inc
push
fldenv
mov
jg
xor
movl
outsl
xchg
sbb
xlat
hlt
xchg
or
dec
or
pushf
daa
sub
mov
dec
sbb
xor
push
jno
in
js
sbb
mov
adc
imul
cmc
jns
cwtl
cmp
sbb
push
adc
insb
shll
mov
test
pop
cmp
dec
fs
jle
insb
or
and
std
push
in
push
cmp
xchg
cld
cmp
mov
mov
in
aam
mov
shll
in
bnd
cli
ficoms
sbb
outsb
ss
add
add
adc
repnz
nop
push
fbld
inc
das
repz
xchg
jbe
std
xor
dec
adc
pop
mov
mov
gs
jns
and
fsubs
loopne
sub
lock
dec
loope
adc
ja
jns
dec
inc
aad
xlat
dec
mov
repnz
rcll
and
fldt
push
nop
mov
int3
push
and
xchg
and
gs
sub
enter
pop
pop
popf
adcb
int
push
cmp
adc
out
inc
sbb
hlt
sub
xor
fisubs
or
iret
and
pop
pop
mov
or
jno
repz
fistl
push
cmp
fnstsw
test
add
jp
mov
dec
inc
mov
mov
sub
xchg
jge
jle
jne
out
fcmovnbe
idiv
mov
jbe
or
push
lahf
jp
or
and
clc
push
addr16
outsb
testl
mov
dec
fldt
mov
out
jge
shl
lahf
sarb
je
and
in
adc
shrb
sbb
les
or
lret
and
jbe
subb
in
mov
add
push
inc
and
jg
fdiv
pop
ds
arpl
and
sub
adc
in
cmp
adc
aam
pop
xor
adc
mov
mov
mov
ret
mov
and
lods
aas
daa
adc
fcomp
jl
jge
add
dec
mov
flds
sbb
mov
cmpsb
iret
fsubrl
push
dec
jg
je
xchg
test
std
dec
lds
daa
testl
daa
insl
inc
stos
jl
lods
pop
inc
ja
mov
cwtl
sub
mov
insb
imul
lahf
pop
cwtl
rorb
or
lock
jne,pt
rcll
adc
popf
pop
cmpsl
jecxz
testb
jecxz
and
movsb
dec
shrb
mov
inc
add
in
dec
inc
sbb
sub
test
pop
add
dec
or
clc
daa
push
adc
incb
dec
pop
into
js
add
dec
movsb
xchg
xor
jbe
mov
mov
pop
out
sub
addb
mov
adc
jo
das
outsb
push
mov
cmp
test
mov
adc
ds
arpl
adc
loop
mov
mov
pop
cwtl
adc
ret
mov
aad
sub
mov
les
ret
or
hlt
push
jne
mov
sub
xchg
xor
mov
add
dec
xchg
mov
mov
sub
sbb
pushf
lcall
lea
pop
jl
xchg
xchg
push
pop
or
jl
lods
idiv
rcl
inc
xchg
insb
and
mov
jns
fwait
inc
jnp
mov
arpl
sub
subl
iret
aaa
sbb
enter
es
or
mov
mov
int3
test
repz
mov
sbb
jecxz
push
adc
cwtl
mov
rep
fidivrl
mov
add
or
mov
jg
int
pop
out
jl
jno
out
jle
mov
add
stos
push
lcall
stos
fnsave
rorl
stc
push
or
adc
insb
bound
inc
pop
push
push
cwtl
std
lahf
inc
xchg
clc
sub
mov
jb
je
sbb
call
xchg
orl
mov
es
and
xchg
pop
adc
xchg
daa
addr16
not
into
mov
xor
push
sbb
out
icebp
aaa
mov
out
orl
bound
or
and
dec
add
cmp
xor
leave
call
shr
push
inc
cltd
loope
lea
test
std
addl
jae
pop
xchg
sub
xor
jl
insb
cmp
outsb
dec
test
inc
or
xor
int3
pop
faddl
push
cld
mov
mov
mov
xchg
mov
les
into
sub
insl
cs
fdivrl
imul
xchg
xor
pop
mov
inc
lret
rolb
pop
jo
out
fnstenv
sti
fsubrs
aam
add
jmp
push
lods
fistpl
mov
and
mov
clc
je
mov
dec
and
mov
adc
mov
sub
adc
adc
out
xor
adc
insl
cli
push
adc
sub
fwait
lret
mov
repnz
pop
add
lea
cmpsl
dec
xor
aaa
popa
xor
mov
loopne
nop
movsb
insb
mov
sti
xchg
xchg
push
ja
in
popa
push
pop
or
push
cwtl
adc
and
adc
loope
inc
sarb
jbe
out
sahf
or
jne
xchg
jp
jl
adc
cs
jno
rcll
rcrb
add
fs
dec
xchg
mov
iret
lcall
and
push
fiaddl
lds
lret
in
inc
or
jne
call
dec
jno
in
les
pop
popa
pusha
adcl
pop
mov
shl
movsw
cmp
jns
ja
iret
fadds
cmp
lods
adc
fadd
es
loopne
out
imul
mov
repnz
xchg
data16
mov
daa
int
jns
les
ss
xchg
jg
adc
cmp
adc
call
xor
loop
add
inc
daa
sarl
pop
and
adc
fwait
push
shll
pop
fisubrs
jle
gs
cmp
fistpll
iret
sahf
pop
sbb
ret
xchg
or
mov
mov
xlat
or
pop
inc
insl
lods
pop
adc
sub
sbbl
stos
sub
shlb
mov
out
push
add
mov
icebp
leave
mov
out
mov
rcr
sub
mov
and
pop
lea
sub
dec
and
adc
pop
xlat
lahf
pop
xlat
mov
lret
in
in
mov
rolb
movsl
sarl
push
adc
fs
dec
stos
and
cs
or
out
inc
jle
out
mull
loop
jmp
lcall
or
in
in
nop
ss
imul
dec
xor
fs
mov
rolb
push
and
pop
jp
orb
jecxz
mov
fwait
xchg
out
sub
roll
pop
cld
gs
stos
into
fwait
mov
stc
and
lcall
mov
clc
dec
les
sti
jns
pop
aaa
dec
std
or
xor
sbb
je
test
xor
mov
inc
call
mov
imul
cmp
imul
into
popa
sti
out
and
push
mov
mov
out
mov
into
mov
jl
mov
imul
lds
fsubrs
xor
push
mov
mov
cltd
ja
xor
test
ficoml
jge
out
push
mov
cltd
cmp
cmc
xor
movsl
and
frstor
xchg
in
dec
push
rcrb
lock
in
mov
sti
xlat
mov
dec
xchg
pop
mov
das
mov
dec
dec
xor
xor
pop
sti
insb
popa
repz
mov
loopne
sub
cli
adc
test
jle
sbb
gs
pop
pop
adc
scas
scas
pushl
push
cli
call
sbb
xlat
pop
xchg
mov
adc
in
xchg
iret
out
mov
mov
cmp
in
sbb
in
rolb
mov
jle
ret
rcrl
mov
pop
iret
fisubrl
mov
fildll
cmp
addr16
xchg
inc
and
cmpsl
or
cwtl
pop
fbld
lret
jb
addb
rcl
pop
inc
fistpll
pslld
jg
pop
ret
cld
inc
inc
out
outsb
mov
push
imul
fldcw
xor
push
enter
fdivs
and
cli
xor
scas
pop
add
mov
cltd
test
dec
dec
sub
push
repnz
add
orb
clc
xchg
aam
repz
dec
dec
enter
sbb
cmp
fldenv
jmp
xlat
outsb
jge
push
stos
jne
pop
ficoms
ret
add
push
ja
jo
mov
mov
ficompl
sbb
jle
add
sbb
call
andl
stos
imul
lcall
xor
mov
mov
dec
jmp
sbb
cld
data16
xor
cmpsl
pextrw
cwtl
jnp
jno
jne
std
insb
inc
aaa
out
and
cs
stc
test
push
and
aam
fidivrl
lret
pop
mov
daa
lahf
push
mov
xchg
aad
dec
shr
sbb
ret
inc
mov
scas
cmp
rol
mov
cmp
filds
mov
adc
inc
test
in
popl
sub
inc
pmaxsw
xor
insl
insb
xchg
push
cltd
fwait
mov
and
outsb
xlat
xchg
inc
sub
aas
add
je
in
mov
and
out
decl
mov
sbb
push
imul
jmp
mov
or
or
test
lret
dec
popa
xor
fwait
ljmp
mov
mov
int3
mov
movsb
push
mov
or
inc
cld
jl
or
in
pop
sbb
inc
into
pop
dec
cmp
cmpsb
jge
add
mov
xchg
inc
sub
sti
dec
icebp
inc
xchg
sbb
sub
aad
sbb
pushf
jo
in
jne
ret
mov
shrl
dec
inc
das
push
outsb
mov
lcall
push
ds
xchg
mov
aaa
lock
cmp
daa
cltd
xchg
push
adc
inc
push
test
mov
insb
aas
leave
icebp
iret
pop
mov
aas
les
dec
adc
push
jmp
roll
mov
add
mov
mov
push
jecxz
ret
cli
or
jecxz
add
cmp
xlat
mov
sbb
cmpsb
jge
pop
pop
jb
clc
mov
rcr
adc
push
sub
push
sbb
dec
push
sbb
jnp
cmp
daa
cltd
test
bswap
sub
ss
mov
push
repnz
out
mov
fldl
mov
outsb
sub
xor
cmp
hlt
das
xchg
nop
pusha
out
xchg
jmp
in
mov
xchg
rcl
mov
push
cwtl
negb
daa
cmp
in
or
push
xor
jmp
add
mov
or
nop
or
call
movsb
or
aad
xchg
pop
xchg
mov
dec
sbb
jno
addr16
out
sbb
call
in
cmp
xchg
or
mov
and
leave
cmpsb
sbb
xor
jecxz
ret
xchg
push
or
add
stos
test
aaa
divl
inc
lret
imul
xchg
inc
xor
push
popa
mov
cwtl
leave
pcmpeqb
icebp
lds
dec
mov
cmc
adc
cmpsl
aam
mov
or
mov
ja
pop
fsubrs
daa
push
cmpsl
or
xor
mov
inc
arpl
js
lret
lods
das
push
bound
and
repnz
sbb
xchg
jno
in
out
lret
pop
imul
enter
xchg
pop
test
repz
and
sti
ss
testb
xchg
push
sbb
pop
xor
xlat
dec
adc
xchg
push
aad
sub
into
fcmovu
fnsave
std
test
lock
loope
outsl
aaa
mov
cs
or
das
lahf
cmpsl
sbb
dec
xchg
nop
cli
inc
sub
fistpl
inc
mov
sbb
mov
adc
rol
sbb
pop
data16
pusha
dec
jne
ljmp
add
xor
outsl
push
mov
and
pop
inc
jl
cmp
sub
xchg
popa
lock
mov
sbb
add
mov
outsl
rorl
mov
push
push
mov
pop
mov
lods
repnz
frstor
rol
loop
mov
jo
mov
fwait
xor
add
pusha
es
push
les
sbb
js
lds
leave
or
loopne
adc
adc
xlat
mov
cmc
fstp
popa
mov
mov
gs
jns
dec
pop
stc
ja
mov
mov
jae
sahf
push
icebp
addr16
cwtl
jo
cmpsl
jae
fcomps
mov
inc
enter
sub
scas
add
add
mov
bound
inc
xlat
lret
inc
aas
and
dec
dec
push
mov
jle
jl
daa
aaa
hlt
in
pushf
cwtl
cwtl
mov
in
adc
in
enter
cltd
leave
jp
push
sub
sub
mov
add
mov
pop
or
mov
test
or
test
shrl
push
mov
adc
xor
das
fidivs
hlt
adc
lea
cmpsl
fnstenv
es
into
jecxz
mov
fisttpl
mov
ds
jge
sbb
push
push
xchg
sbb
mov
cmpb
inc
mov
push
mov
mov
imul
or
arpl
sub
and
je
jns
sub
imul
test
adcb
cmpsl
pop
mov
out
pop
xchg
jl
pop
imul
out
mov
movsl
andl
xchg
mov
incb
adc
addr16
aad
loop
std
jge
cmp
or
adc
inc
rorb
sub
cmp
stos
xchg
lahf
mov
stos
sub
mov
mov
xchg
cld
mov
ljmp
aaa
adc
and
xchg
jnp
mov
movsl
les
sub
push
lods
dec
popa
ja
cmp
lret
aam
subb
daa
mov
pop
pop
aad
push
cld
loope
mov
and
jle
mov
lret
int
jmp
addr16
cmc
push
xchg
xor
and
int3
icebp
push
cwtl
jnp
stc
mov
inc
inc
sub
adc
lcall
sti
mov
orb
push
mov
aaa
sbb
cmc
xchg
neg
lods
in
lcall
xchg
sbb
std
sub
pop
and
sbb
je
mov
pop
bswap
xchg
pop
mull
test
stos
inc
cmp
rorb
mov
addr16
jge
loopne
inc
jo
inc
sub
jae
cmp
in
jp
xor
sbb
rcll
jbe
mov
jnp
add
lds
push
jo
or
fwait
or
mov
sbb
cmp
push
sub
inc
mov
dec
aad
repz
sub
fisttps
in
loopne
mov
adc
and
fiaddl
repz
add
sbb
dec
loopne
mulb
int3
pop
aad
lods
sub
adc
es
dec
adc
std
adc
dec
int3
imul
scas
xchg
aaa
sub
cmp
add
aaa
jae
jge
push
iret
jecxz
sbb
cmp
adc
inc
or
xor
and
or
int3
rorl
and
push
pop
fildl
sub
enter
lret
jp
jle
mov
sbb
lcall
mov
jnp
mov
jmp
add
loope
aas
test
ljmp
mov
pop
cltd
push
movsl
cmp
in
lods
notb
push
lret
sub
mov
jae
loopne
sub
xorb
nop
xchg
mov
and
stos
mov
lods
pause
int
insb
and
jnp,pt
test
test
xchg
pushf
dec
stc
data16
out
lahf
xchg
adc
mov
cmc
adc
inc
test
lods
iret
push
outsb
std
ljmp
out
fstl
jle
aaa
insb
mov
cmp
mov
add
sahf
decl
adc
xlat
pop
aas
pop
xor
lods
pop
cmpsl
cwtl
pop
insl
popl
mov
sbb
ljmp
imul
push
jge
cmc
mov
nop
xor
out
jmp
ret
adc
imulb
repnz
xchg
sbb
cltd
push
stc
inc
stos
or
push
repz
dec
xchg
xor
je
mov
jns
aad
jecxz
idiv
xor
or
mov
jecxz
mov
filds
daa
pop
sbb
data16
adc
fidivs
ficompl
or
arpl
pop
movsl
cmp
mov
inc
sub
clc
push
xchg
inc
loopne
xchg
adc
enter
mov
daa
aad
and
xor
mov
adc
loope
or
pop
fwait
iret
outsl
sbb
mov
das
adc
add
mov
std
pop
out
add
cmp
xor
pop
test
insb
sahf
mov
pop
cmp
fchs
ss
jnp
shlb
aam
sarb
rorb
mov
mull
add
hlt
adc
add
inc
adc
lds
sbb
fisubs
leave
inc
push
adc
push
rcrl
sbb
jb
rorl
fwait
jb
mov
out
divb
pushf
xchg
jno
push
out
lea
push
rorb
xchg
pop
mov
cld
sbb
xor
addr16
mov
jno
outsl
dec
add
add
pop
pop
mov
mov
pop
push
pop
popl
inc
xor
mov
xchg
lods
or
out
or
dec
inc
out
out
push
fdivs
jmp
test
jb
fisttps
pop
sub
mov
ret
xchg
mov
or
push
out
leave
sbb
test
xor
xchg
inc
cmp
sub
cli
in
mov
daa
xor
mov
push
jmp
