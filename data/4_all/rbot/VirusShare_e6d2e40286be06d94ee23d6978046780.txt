fdivrl
outsl
jnp
xor
clc
mov
and
xchg
jp
mov
or
or
mov
int3
jo
hlt
lahf
cmp
push
outsb
scas
icebp
dec
add
cmpsb
icebp
test
mov
stos
idivl
cmp
inc
or
les
sbb
add
xor
xor
jae,pt
push
adc
xlat
jb
bound
fs
adc
int
pop
das
sbb
jmp
pop
mov
mov
cmpsb
into
mov
cmp
add
mov
lahf
lahf
or
lods
cmp
jb
fimull
sahf
addr16
or
xchg
mov
push
ret
push
mov
mov
mov
cld
xchg
daa
aaa
clc
out
mov
sbb
add
xchg
xchg
daa
aad
cmc
loopne
test
leave
js
ds
sarb
sub
add
fidivl
lods
xchg
mov
aad
fwait
subb
mov
bound
std
sub
roll
jmp
jmp
lods
mov
fsubs
sub
gs
popf
adc
daa
xchg
adc
xchg
push
pop
xlat
and
fwait
adcl
arpl
popf
mov
cmp
sbb
push
lahf
pushf
mov
rorb
lret
cmp
xor
push
pusha
imul
lahf
sbb
mov
daa
xchg
cmp
jp
in
add
repnz
scas
dec
aas
cmc
dec
mov
add
push
xchg
push
imul
sub
out
push
lds
cmp
aas
push
mov
pop
push
shrl
stc
rol
arpl
push
outsl
pop
hlt
sub
push
ret
bsr
xchg
andl
xor
dec
push
stos
dec
cmp
cmp
xlat
or
cmp
aaa
in
mov
adc
or
push
not
and
loopne
pusha
neg
repnz
pop
pusha
or
popa
cwtl
lods
bound
repnz
sub
add
mov
jge
mov
inc
rcrl
jle
int3
jo
insl
test
fdivr
mov
test
or
iret
movsl
fcompl
dec
es
pop
adc
cmp
xor
adc
data16
aad
xchg
rorl
jecxz
push
int
mov
repnz
js
sbb
push
jnp
leave
mov
mov
rcr
addl
adc
sbb
out
sbb
mov
shrb
mov
stos
popf
loopne
outsl
sub
pop
ja
adc
data16
jo
or
stos
sbb
subl
outsb
loopne
out
pop
bound
lahf
aad
scas
mov
jmp
loopne
mov
movsb
or
mov
pop
and
push
scas
sbb
sbb
push
leave
lds
push
adc
cmp
and
mov
aas
inc
lret
ljmp
cmp
xchg
sub
sub
pop
sbb
ss
pop
mov
mov
and
into
and
mov
out
cmp
bound
in
dec
mov
lods
int
cmc
gs
pop
xchg
addb
ret
dec
jle
jnp
dec
dec
stc
lret
sbb
lea
fiadds
and
push
pop
jbe
ja
bound
inc
jbe
jo
add
pop
mov
aad
inc
ffree
fidivrs
and
push
loope
imul
or
sub
or
lcall
int3
pusha
dec
or
sbb
xchg
xchg
ja
call
xlat
jp
jbe
jb
or
dec
out
rcrl
ret
shlb
xchg
push
xor
pop
ds
push
push
stc
xchg
movsl
inc
sub
ss
pop
lods
xchg
and
mov
inc
xchg
mov
cmp
xchg
cmp
inc
push
bound
imul
mov
fstps
jle
ja
jle
mov
leave
jo
xor
ja
test
int
mov
pop
push
adc
imull
cs
push
jmp
cmp
push
loop
js
mov
or
je
sub
jmp
fsub
xchg
mov
xor
or
cmp
adc
dec
test
mov
pop
push
addl
sub
data16
mov
nop
push
rcrb
fwait
xchg
fs
or
leave
aad
mov
mov
aam
sbb
and
pop
dec
sub
fadds
mov
sub
loope
mov
adc
into
mov
jg
or
add
xor
sub
lods
xchg
jecxz
das
sub
push
pop
or
sub
and
loopne
jecxz
add
sarl
sbb
je
adc
popf
dec
push
mov
xchg
lods
or
in
mov
mov
test
lea
lret
mov
pop
fs
push
jnp
faddl
pushl
push
repz
aas
lea
add
loope
sbb
dec
aam
add
enter
test
sub
imul
xor
lret
fnstenv
lahf
push
nop
or
sti
hlt
add
xchg
sbb
stc
lods
pop
sbb
sub
in
lea
pop
aas
sahf
test
stos
inc
ss
add
xchg
jnp
fildl
xor
cmp
xchg
arpl
decl
dec
rcll
ret
scas
cmpsl
aaa
flds
mov
in
movsb
dec
jo
test
jle
ss
dec
decb
lock
pop
shl
jae
mov
cltd
scas
jp
inc
add
mov
in
dec
fstp
sub
mov
in
add
jmp
xor
sbb
scas
fldz
pop
cltd
mov
iret
les
fwait
xor
in
mov
pop
inc
out
sahf
pusha
pop
push
adc
mov
pop
shr
mov
sbbb
push
dec
xor
and
fldenv
xor
ja
jmp
jns
imul
add
mov
lret
ret
loop
lret
pushf
xor
jo
sbb
adc
stos
pop
add
ja
aaa
and
leave
inc
push
out
js
addr16
shl
push
pop
mov
lret
jmp
pop
and
icebp
sub
jbe
addr16
dec
roll
jge
pop
stos
xchg
adc
femms
movsb
iret
dec
enter
lods
hlt
hlt
test
sub
in
xorb
and
push
xor
gs
jbe
cld
lahf
inc
add
mov
or
nop
or
sbb
nop
inc
xchg
and
cmpsb
js
inc
xchg
and
inc
add
es
frstor
stos
mov
popa
sbb
fcoml
mov
test
mov
xchg
push
adc
shll
loopne
outsb
loopne
stos
and
hlt
lods
mov
pop
test
jne
stos
adc
mov
push
aaa
jns
sub
stc
shll
mov
mov
push
out
cld
push
jg
push
sub
shlb
jnp
subb
or
mov
mov
test
cmc
or
pop
inc
fstpl
mov
inc
fwait
ret
add
cmc
lret
je
push
and
addr16
and
jge
dec
and
mov
sysret
fistpll
adc
xor
pop
out
sub
cmp
inc
out
push
and
xchg
mov
popf
shlb
mov
cmp
dec
jno
mov
xor
ljmp
pop
xchg
inc
scas
mov
cmp
jns
mov
xor
sbb
clc
sbb
outsb
cmc
popf
jecxz
push
dec
push
xchg
mov
mov
insb
mov
sti
adc
push
push
pushf
pop
or
add
dec
mov
xor
pop
bound
or
adc
hlt
popa
iret
cmc
ss
and
mov
and
cmc
movsl
imul
out
int3
cmpsb
jno
push
popa
push
dec
xor
out
cmp
das
sbb
mov
shlb
mov
pop
pop
enter
ficomps
add
testb
out
jle
popf
and
out
xor
mulb
mov
mov
adc
pop
lfs
js
pop
sub
imul
pop
lock
stos
xchg
add
inc
or
xchg
js
sbb
adc
jmp
pop
xchg
ret
jl
rcrb
ja
mov
flds
enter
sbb
push
iret
pop
iret
push
aaa
in
and
shr
dec
cld
pop
push
loop
cli
data16
dec
fldenv
xchg
fcmovne
or
xchg
dec
cltd
gs
xchg
andps
inc
movsb
push
lcall
add
gs
jmp
pop
push
sahf
dec
sub
in
inc
inc
in
adc
dec
jae
mov
add
jne
daa
into
js
call
lcall
call
test
das
sti
ds
subb
aas
or
ds
pop
mov
mov
es
jl
jnp
inc
xchg
cmp
loop
or
mov
popf
mov
enter
fcoms
jg
xor
test
gs
sbb
push
out
cs
rorb
lods
loopne
push
ds
cmp
shlb
cld
lock
pop
clc
pop
cs
cmp
aas
mov
in
push
pop
repnz
or
mov
or
hlt
or
lret
inc
xchg
and
mov
push
imul
adc
rolb
push
push
dec
mov
sbb
in
inc
adc
cli
jp
and
mov
stc
mov
js
mov
test
cmp
outsl
push
das
cld
ret
lahf
out
push
adc
xlat
xor
stos
cmp
jne
jno
test
sti
rorb
stos
shl
xor
lods
std
mov
loop
dec
mov
mov
stc
sti
aad
sbb
jae
or
mov
jae
fadds
mov
clc
mov
pop
fcomp
push
or
xchg
jmp
jns
pop
popa
addr16
or
lds
les
inc
and
shrb
add
rcll
incb
cmp
push
icebp
mov
movsb
sub
mov
fabs
aas
cli
mov
loop
dec
hlt
jne
mov
lds
shrl
sti
jbe
lret
xor
push
add
jns
lret
jo
ds
roll
pop
shlb
add
ret
std
xor
xchg
cmp
cmp
icebp
mov
shl
mov
adc
enter
jp
sub
add
and
push
repnz
push
movsb
fisttps
pop
and
inc
aaa
jg
rolb
cli
test
inc
dec
push
pop
and
or
push
imul
fwait
sbb
push
lods
cwtl
adc
xor
adc
add
or
xor
jne
imul
mov
in
fcoms
and
pusha
mov
xor
test
insl
sub
fdivp
ret
js
xchg
test
sbb
aad
arpl
push
outsb
fcomip
adc
lret
jmp
rorl
mov
xchg
jnp
pop
mov
cmp
jg
ss
cwtl
test
imul
mov
notb
jle
sub
in
adc
je
clc
ficompl
shlb
sbb
lahf
out
inc
leave
aam
ret
fnstenv
aad
imul
test
loop
fwait
add
mov
add
ud2
xor
pusha
data16
rcrl
cld
mov
mov
xor
insb
loop
cwtl
jl
decb
jno
lret
insb
inc
sbb
push
jg
mov
jne
movsb
arpl
and
or
data16
and
in
test
jl
ss
fcmovnb
roll
scas
mov
jge
jno
lods
pop
mov
mov
lcall
mov
push
lret
jnp
addr16
mov
fldenv
push
pop
lock
inc
lahf
mov
leave
fisttps
and
or
dec
push
test
mov
mov
iret
add
cmpsb
incl
test
rcrb
imul
or
push
ds
sub
and
pop
jmp
fnstsw
adc
scas
ljmp
aas
push
jno
sbb
arpl
mov
int3
roll
lahf
mov
inc
sbb
xor
in
inc
inc
out
lods
test
push
rclb
jae
push
es
xor
sub
jl
hlt
cmp
add
push
popa
add
loop
sbb
xchg
sbb
push
gs
or
mov
stos
movsb
mov
inc
fsubrs
push
add
push
fs
into
in
into
adc
test
popa
xchg
js
and
mov
sub
aam
jp
aas
mov
adcl
adcl
adc
mov
stos
out
jmp
xor
or
jl
test
out
push
pop
cs
xor
test
mov
and
mov
adc
sub
mov
jl
testl
push
push
jmp
mov
cli
fldz
leave
pop
and
repz
cmp
xor
fscale
push
xor
test
icebp
pop
iret
lcall
jmp
insl
mov
mov
mov
sbb
sar
inc
in
push
add
jle
arpl
sbb
sbb
dec
outsl
or
inc
push
sbb
dec
and
mov
mov
xchg
dec
dec
inc
mov
xchg
inc
and
xchg
shrb
mov
movsb
movntq
outsl
adc
mov
daa
ror
pop
and
in
faddl
xchg
lds
jns
lods
cltd
mov
xchg
cmc
dec
pop
sub
mull
add
mov
popa
mov
mov
in
ljmp
push
push
dec
mov
stos
shr
es
jg
loopne
mov
push
xor
sarb
fdivrl
cmp
cs
cli
fadds
test
test
push
push
or
xor
pop
cmc
or
rorb
fsubs
shr
mov
mov
insl
ud2
dec
imul
arpl
push
adc
insl
dec
cmpl
in
adc
shll
loop
fstps
jle
sbb
xchg
sub
sti
xlat
add
jnp
cmpsl
scas
pop
cmp
sub
outsl
popa
movsl
dec
mov
ficomps
sub
ljmp
adc
in
ds
sahf
xor
nop
in
dec
les
fistpl
daa
and
aad
jbe
fstpt
add
mov
mov
test
leave
ficomps
imul
push
mov
rclb
add
js
sbb
inc
iret
test
push
hlt
inc
mov
mov
push
pop
inc
pop
mov
push
xchg
lcall
outsb
adc
mov
pop
mov
push
lods
sbb
mov
mov
das
aam
fdivrs
fs
sbb
roll
adc
shll
test
dec
cmp
dec
dec
mov
xchg
cwtl
jnp
mov
loop
pop
jae
int3
je
mov
mov
shll
ret
xchg
aad
shrb
les
add
std
adc
xor
mov
fisubrs
push
ljmp
mov
xchg
adc
push
jp
in
test
mov
in
loope
dec
mov
std
lahf
or
add
leave
dec
stos
jle
push
cltd
ss
insb
pop
aas
pop
sub
dec
jl
push
xchg
insl
ss
adc
push
mov
lret
xchg
xchg
jp
xor
addr16
sub
mov
mov
and
aas
inc
out
sbb
and
imul
adc
jns
cwtl
cmp
test
repnz
xor
rcrl
add
clc
or
mov
popa
jecxz
cmp
xor
pop
dec
arpl
scas
adc
repz
cld
mov
adc
inc
pop
add
test
xchg
dec
int3
shll
dec
shl
inc
sbb
add
lret
icebp
or
outsl
ret
pop
sbb
fisttps
push
mov
les
dec
push
es
jb
add
daa
mull
mov
push
shrl
ja
fwait
aas
mov
loope
cltd
mov
mov
scas
mov
jg
repz
fwait
outsb
sbb
into
bnd
shlb
cmc
or
xchg
fcomip
mov
je
add
push
addb
xchg
lret
hlt
int
add
cli
insb
sbb
dec
std
jns
je
push
add
sahf
pop
push
dec
pushf
test
inc
mov
mov
loop
movb
inc
xchg
xchg
xor
pop
lahf
and
push
xor
xchg
xchg
and
push
popf
cs
add
out
aaa
lahf
dec
cmp
add
fistpll
mov
xor
imulb
inc
inc
loop
pop
sarb
mov
xor
test
jo
incb
mov
pushf
mov
out
mov
aaa
out
jp
cmp
lea
das
rolb
lret
fcomps
pop
inc
sub
sub
xor
adc
cmp
movsb
sbb
adc
jne
jl
add
mov
pop
mov
mov
inc
and
loop
xlat
mov
or
iret
test
add
or
add
jl
push
aam
cmp
mov
in
add
call
daa
xlat
and
sub
loop
cwtl
sbb
jge
inc
nop
jmp
xchg
icebp
pop
inc
test
mov
add
insl
fldcw
int3
pop
pushf
or
hlt
sbb
or
adc
fisubrs
inc
xlat
sub
cmpsl
fldenv
imul
js
jne
mov
adc
xlat
popf
push
pop
pop
push
out
mov
arpl
inc
ret
xorl
sub
out
cmp
jne
fisubs
jge
rol
cmp
fstl
mov
cmpsb
jne
data16
mov
aas
sbb
dec
lods
sbb
push
clc
ds
xchg
inc
shl
mov
stos
pop
xlat
lods
push
rcll
pop
pusha
in
hlt
push
dec
xlat
cmc
inc
repnz
mov
sub
adc
inc
stos
sub
cmpsl
push
adc
iret
icebp
sbb
or
nop
lret
jbe
jb
rcl
in
sub
xor
jmp
into
aas
jb
in
sbb
or
or
pusha
mov
push
test
fldenv
es
xchg
xor
hlt
aam
mov
pop
dec
enter
mov
je
sbb
xchg
push
inc
inc
cli
mov
fcoml
aam
mov
adc
mov
int
cmp
ret
push
jp
out
insl
jp
in
and
jb
out
sbb
movsb
xorb
outsl
stos
xchg
call
sbb
fs
in
inc
mov
mov
pop
sti
xchg
aaa
pop
jnp
lods
xor
xchg
cmp
sub
push
sbb
data16
aam
and
pop
or
nop
psraw
sbb
sti
lods
cmc
or
mov
clc
mov
mov
mov
int3
shl
pop
and
mov
les
movsl
sub
inc
adc
or
int3
or
xchg
xlat
out
add
ljmp
loopne
jno
mov
fistps
push
stos
mov
mov
add
call
push
fcmovnb
push
xchg
inc
inc
ja
je
test
rorb
jns
int3
movsl
jl
add
out
imul
scas
xchg
add
mov
mov
out
das
sbb
loop
push
ret
cmp
nop
cmp
fwait
and
lea
lea
cmp
mov
add
push
pop
shlb
orb
ficoml
xchg
pop
lret
sar
test
dec
pop
mov
adc
out
repnz
popf
cltd
push
adc
cld
movsl
cmc
mov
dec
lock
and
addl
add
jb
adc
loopne
cmc
icebp
jp
imul
mov
test
int
fimuls
movsb
dec
std
sub
mov
aaa
stc
xchg
mov
icebp
inc
cmpb
ss
cmp
std
push
adc
add
shrb
jmp
and
dec
jbe
xchg
into
dec
xlat
adc
jne
add
push
out
cmpsb
sahf
pop
lds
jp
lahf
sub
xor
arpl
cld
and
dec
jae
jnp
sub
push
mov
mov
push
pusha
sub
ja
cmp
cmpsl
add
aad
mov
js
test
pop
jo
push
and
mov
inc
sub
add
mov
sahf
push
ret
leave
cmp
sbb
ret
insl
add
fstpt
movsl
pop
cmp
ret
push
sub
lahf
ljmp
insl
push
inc
xchg
cs
inc
adc
jae
dec
and
mov
push
and
mov
inc
adc
add
adc
push
dec
mov
lret
scas
pop
cltd
orb
sbb
sub
xchg
xchg
add
pop
dec
popf
iret
cli
test
ljmp
lret
sti
testb
mov
or
cld
adc
adc
pushf
xsaveopt
out
mov
xchg
xor
dec
xor
test
imull
test
push
add
xor
repz
mov
ds
shrl
push
aam
ds
lcall
jne
pop
dec
pop
jp
push
push
imul
inc
mov
sbb
inc
adc
into
fsubs
adc
repnz
out
loopne
cmp
jp
mov
in
in
fwait
add
mov
in
loope
inc
mov
into
or
repnz
cmp
incb
cmp
dec
mov
dec
adc
cld
sbb
in
mov
xlat
loopne
mov
sbb
stos
lods
push
pop
mov
and
pusha
mov
in
inc
daa
sahf
aaa
sbb
lea
out
mov
xchg
pop
movsb
push
push
sub
xchg
lods
filds
daa
stos
dec
add
cmp
in
fs
or
mov
cmp
ret
js
pop
mov
mov
imul
or
pop
in
cld
rorb
fwait
mov
imul
sub
leave
divl
dec
pop
cmp
jge
in
jge
cmp
roll
or
cmp
cltd
add
mov
rolb
out
sbb
jp
in
mov
sub
loopne
leave
mov
dec
int
fadd
xor
inc
push
test
loop
mov
js,pt
hlt
or
push
jns
sub
inc
dec
movsb
sbb
or
and
inc
inc
fisttpl
ror
shll
cld
mov
jne
sti
lods
dec
dec
jb
mov
jecxz
in
das
fcmovu
pop
shrl
fsts
and
sbb
pop
aad
mov
int3
je
mov
push
test
and
adc
adc
sbb
push
pop
sbb
sbb
imul
lret
call
andl
mov
sti
int3
shl
and
test
jle
sbb
mov
sarb
xor
cmp
add
jnp
in
cmc
es
mov
je
xchg
mov
adc
insb
add
fcmovne
cmpsb
inc
ret
pop
ficompl
sub
shll
cmp
ret
out
lret
faddp
mov
imul
add
es
outsb
shll
jle
inc
cmpsb
sbb
subl
call
test
aam
data16
jecxz
jg
movsl
adc
sahf
add
jns
sbb
packssdw
cld
cmpsl
push
jl
sahf
inc
mov
ja
sahf
mov
sbb
test
movsl
xchg
mov
movsl
inc
fstpl
adc
mov
aam
fcoms
insb
pop
ljmp
pop
xchg
int
js
mov
pop
cmp
mov
xor
aas
pop
push
leave
nop
or
xchg
mov
shll
bound
and
sbb
pop
jmp
or
sarb
dec
sbb
test
add
loopne
mov
sub
add
out
and
sarb
loope
in
je
inc
mov
cli
jge
inc
cwtl
in
bound
jge
adc
outsl
ret
andb
mov
add
inc
dec
scas
adc
pop
scas
inc
jl
cmp
lret
sti
mov
cld
xor
add
inc
mov
movsl
das
cld
push
mov
repz
mov
hlt
scas
mov
cltd
xlat
add
dec
and
add
movsb
daa
data16
subl
jno
int3
repz
fs
call
xchg
push
mov
cmpsb
mull
pop
sbb
jl
adc
sbb
divl
ss
mov
adc
cmc
in
mov
push
insb
rcrb
cs
inc
and
and
mov
hlt
sbb
int
hlt
call
mov
mov
shll
push
xor
loope
jne
push
lds
ret
fnstsw
inc
and
popa
in
inc
lods
pop
jmp
mov
pop
add
mov
shll
push
scas
mov
or
test
add
inc
add
mov
test
cltd
add
or
cmp
sahf
int
jge
jg
mov
xor
sub
jo
push
sub
shll
jno
cmp
lods
add
loopne
cwtl
jg
mov
pop
aad
movsb
mov
mov
jns
push
pop
cmpsl
cmp
pop
push
popa
jns
mov
xor
mov
es
xlat
add
int
xor
das
add
les
je
sbb
dec
in
aad
lea
test
or
lcall
xor
cmp
mov
out
dec
pop
or
mov
insl
ja
mov
lock
ret
bound
mov
sub
lcall
pop
mov
or
mov
repz
pop
daa
push
xchg
and
testl
xchg
pop
inc
mov
in
insb
adc
out
or
aad
xor
push
pop
inc
in
add
rcrl
xchg
sub
mov
je
ret
push
shll
in
mov
pop
mov
pop
aas
cmpl
rcrb
cltd
js
and
lcall
pop
push
adc
xchg
adc
inc
dec
push
lcall
out
ss
aam
movsl
cltd
insl
bound
insb
rclb
rolb
inc
inc
ret
leave
jb
add
push
and
test
mov
stos
xor
ret
and
mov
in
xchg
sub
sbbb
orl
dec
in
fsubrl
cwtl
mov
bound
lcall
cli
push
pusha
test
pushaw
add
mov
lret
and
mov
lea
int
xor
push
lahf
push
or
xchg
inc
pop
dec
sbb
lods
sub
aad
lds
cmp
mov
dec
ljmp
inc
leave
pop
mov
fwait
mov
fmulp
das
bound
mov
adc
mov
int
clc
push
loop
repnz
gs
stc
or
sahf
gs
rcrb
out
outsb
mov
cmp
mov
addl
xor
mov
mov
scas
in
inc
xchg
mov
adc
adc
adc
mov
pop
in
dec
clc
and
cwtl
pop
cmc
mov
push
jns
js
fmuls
mov
xor
inc
jne
aad
test
loopne
clc
inc
mov
pop
outsl
loopne
loopne
jp
or
outsb
jecxz
or
daa
or
mov
or
sbb
mov
jecxz
pop
mov
jno
cmp
mov
lcall
loop
push
jne
repnz
add
cmpsl
mov
les
rcr
mov
js
sbb
test
stos
in
mov
mov
inc
sahf
pop
pop
aaa
outsl
jp
lods
dec
cmp
repnz
shl
and
mov
cs
and
mov
js
push
jmp
mov
cmp
sbb
stc
popa
in
imul
fidivs
das
cmp
cmp
or
xchg
ljmp
and
xchg
mov
xchg
ds
pop
ret
dec
and
pop
insl
addr16
sub
loopne
sti
xor
and
gs
repnz
aas
mov
sub
fwait
push
roll
mov
xchg
jae
and
cmpsl
insb
jle
add
mov
xor
jl
inc
and
and
outsl
scas
frstor
rol
pop
pop
daa
loop
enter
ret
aad
push
in
sub
push
test
call
dec
jae
or
mov
push
or
pop
push
mov
or
rorl
adc
out
ljmp
test
icebp
into
in
jne
mov
xor
shl
jp
lock
dec
daa
cld
cmp
fdivrl
mov
xor
scas
or
ljmp
cmc
jge
and
sti
mov
xchg
jo
and
and
mov
add
test
inc
ret
sbb
adc
push
je
mov
daa
daa
test
mov
push
lahf
jo
sbb
cmp
dec
or
lods
and
les
pop
and
mov
mov
add
dec
mov
dec
outsl
push
jge
cmp
dec
mov
aaa
imul
enter
jno
out
mov
shlb
xchg
hlt
ret
push
push
jp
mov
add
pusha
test
dec
push
sbb
into
inc
push
imul
call
adc
in
sub
add
clc
xor
mov
dec
add
shrl
cmpsl
jecxz
mov
jl
out
mov
addl
es
fdiv
in
add
enter
test
rcrl
jae
sbb
adc
outsb
push
jne
mov
mov
imul
ds
out
inc
cmpsl
jbe
test
xor
or
mov
pop
push
mov
push
sub
int3
lcall
cmp
and
movsl
mov
fisubrl
inc
push
rolb
push
jns
pusha
dec
clc
xchg
bound
iret
adcl
push
pop
and
subb
cmp
xor
pop
sbb
and
xchg
inc
push
mov
aaa
jb
ja
sarb
or
ds
lcall
mov
rolb
mov
flds
imulb
test
jb
push
mov
adcl
push
adc
add
lock
out
jge
or
dec
dec
jmp
fbstp
pop
add
out
dec
movsl
lds
pusha
and
lods
xlat
inc
mov
jmp
int3
jae
lahf
movsb
pop
cmpsl
dec
adc
jmp
lods
push
nop
dec
inc
pushl
mov
push
push
xor
test
sub
enter
sub
icebp
mov
add
out
mov
sub
or
movl
shlb
loope
mov
and
or
mov
mov
in
pushf
or
int
pop
sbb
and
push
push
fs
mov
popa
ja
mov
xor
jg
jno,pt
dec
jp
cltd
std
sub
adc
scas
orl
xchg
flds
push
cltd
shrl
inc
gs
dec
fnsave
fbld
arpl
or
ds
lret
daa
pusha
or
jae
fdivrs
stc
pop
ja
idivb
mov
mov
imul
sub
jne
es
addr16
aaa
lret
push
mov
imul
call
xchg
repz
push
push
mov
ss
mov
mov
cmp
fwait
scas
aad
sub
imul
decl
cwtl
es
in
cmp
arpl
xchg
pusha
push
insb
xlat
cld
or
rolb
hlt
push
pop
repnz
daa
cwtl
push
xchg
lea
dec
xlat
in
push
cld
es
ret
mov
xchg
adc
ja
cmp
adc
ret
inc
cmpsl
mov
mov
cwtl
jmp
dec
dec
xchg
sbb
mov
add
and
in
jae
push
int3
jne
mov
mov
icebp
loope
movsl
or
fistpll
push
mov
and
stos
adc
cmp
inc
cmp
xor
dec
sub
jge
inc
mov
sbb
popf
bound
sbb
cmpsb
pushf
jle
stos
sbb
jp
inc
pop
enter
pop
addb
push
gs
sarl
imul
ljmp
xchg
movsb
out
int3
jmp
push
out
cmpsl
xchg
mov
cmp
movsl
adcl
sbb
jnp
cmp
adc
loop
sbb
sbb
mov
push
inc
push
loop
cltd
jo
push
ficoml
aad
mov
mov
mov
aas
hlt
cmp
sub
cs
adc
or
pop
jbe
cmp
fwait
loopne
sub
pop
xchg
push
mov
cli
inc
mov
fisttps
mov
lds
into
jo
mov
in
inc
ja
xchg
jg
insb
cld
out
xorb
or
lock
dec
sbb
subps
push
mov
cmp
jbe
xor
jo
iret
imul
sbb
ret
lods
xchg
andb
sarb
jecxz
repnz
and
push
and
add
std
and
aas
movb
paddusb
pop
mov
mov
imul
dec
adc
lahf
sbb
xor
in
imul
mov
bound
push
mov
inc
test
nop
mov
loopne
aam
inc
jp
cmp
cmpl
push
lods
xchg
aaa
fs
inc
dec
cmp
jnp
ljmp
nop
dec
enter
xchg
pop
sbb
xor
adc
dec
lea
push
into
mov
lock
adc
sbb
in
mov
and
in
cmp
pop
test
shll
jmp
mov
push
push
pop
dec
rolb
shl
enter
pop
push
jae
mov
sub
divb
scas
or
icebp
sbb
in
sub
lcall
xchg
ds
test
call
mov
fucomi
arpl
and
cmc
hlt
lcall
jecxz
icebp
cmp
stos
lock
sarb
push
mov
mov
into
loope
rolb
popa
pushf
popf
mov
nop
lds
scas
sub
es
enter
scas
inc
fcompl
insl
inc
cmp
xor
mov
das
mov
outsb
push
mov
mov
cli
xchg
pop
sub
shlb
call
mov
sbb
in
loopne
dec
add
pop
clc
sbb
test
lds
out
jmp
lds
lahf
lods
ret
push
sar
jbe
ficoms
in
xor
mov
shlb
jl
icebp
mov
mov
mov
test
movsl
pushf
inc
pop
loopne
insb
cmp
lock
xchg
shll
jp
pop
push
push
jmp
popl
lds
es
sub
fcompl
xchg
jge
cwtl
fildl
fidivrs
mov
movsb
mov
scas
pop
dec
dec
je
pop
lods
xor
call
movsb
mov
pop
mov
sub
xor
mov
fsubrs
mov
adc
cwtl
negb
pushf
lcall
test
movsl
imul
xchg
mov
movlhps
fstpt
dec
fnsave
sbb
dec
out
out
shlb
aaa
fisubrs
jl
testb
pop
lods
stos
cmpsb
dec
cmp
int3
imul
scas
gs
out
cld
mov
xchg
pop
cmpsl
bswap
out
jmp
les
jno
inc
lods
daa
xchg
nop
mov
jge
aas
or
js
nop
out
jo
cmpsl
pop
sub
cli
inc
push
adc
mov
pop
lcall
add
lock
fimull
xchg
cmp
or
daa
adc
aas
xor
inc
inc
inc
shll
pop
fwait
and
jmp
sub
pushf
cmp
fcompl
les
aas
inc
repz
inc
push
xchg
testl
das
fsub
dec
mov
jmp
xchg
test
mov
or
push
push
sbb
sbbb
mov
mov
inc
xorb
mov
in
or
mov
jl
push
lock
aam
add
and
inc
jns
add
dec
leave
orl
pop
dec
insb
sub
popa
insb
jne
lret
out
test
stos
wbinvd
jl
scas
ret
push
in
pop
or
pop
add
jecxz
out
cmovne
mov
pushf
xchg
xor
cmp
sbb
fmuls
outsb
cmp
add
cwtl
fnstsw
outsb
arpl
fdivr
aad
mov
xor
imul
iret
push
cvtpi2ps
iret
lods
fnstcw
cmc
cmp
dec
mov
push
push
add
jnp
fld
inc
out
push
stos
mov
mov
mov
call
push
sti
mov
dec
sbb
cs
add
or
lods
out
es
insb
push
push
and
rcr
sahf
adc
and
jmp
cmc
addr16
add
enter
jl
repnz
js
jmp
cmc
repz
arpl
xchg
fucomp
cmp
add
imul
data16
or
fiaddl
xchg
and
test
hlt
xor
pop
dec
dec
inc
mov
or
sub
pop
pop
aaa
insl
lds
ret
dec
nop
lock
jle
adc
loop
cmpsb
stc
xor
dec
mov
dec
cmpsb
shl
cmpb
shrl
movsb
cld
pop
adc
into
xchg
jg
mov
add
bound
lock
inc
pop
xchg
cmpsb
push
inc
arpl
jnp
mov
pop
push
cmp
inc
call
adc
rcr
mov
push
adc
lods
adc
into
out
iret
faddl
clc
js
xchg
fadds
push
xchg
fimull
sub
mov
mov
mov
xor
inc
adc
push
or
inc
fstl
enter
sbb
sbb
lea
push
mov
fdivrs
mov
sub
hlt
cmpsl
stc
sbb
maskmovq
testl
xchg
jp
outsl
inc
or
push
es
test
lea
jo
push
es
mov
negl
xchg
add
cmpsb
pop
mov
lcall
out
push
xorl
scas
mov
call
push
addr16
inc
mov
popf
pop
xchg
or
scas
cmpsb
cmpsl
add
sbb
fmul
in
int
and
inc
ja
aaa
dec
mov
jge
out
sahf
mov
mov
jae
push
add
fistpll
jle
lods
loop
and
pusha
sub
jae
mov
pop
leave
jae
mov
mov
xor
push
push
mov
mov
jl
movsl
sub
jp
inc
cs
and
xor
dec
xchg
xchg
inc
test
adc
jnp
jg
jle
outsl
mov
aas
nop
loopne
inc
gs
call
xorb
arpl
jns
mov
push
xchg
aaa
mov
sub
push
jo
sub
cmp
and
pop
mov
jp
cld
push
shlb
inc
and
arpl
lret
lcall
mov
dec
popa
mov
shlb
push
outsl
ret
pop
or
fildl
and
pop
inc
adc
enter
xor
stos
jbe
cmp
cwtl
stc
xchg
dec
jp
xor
insl
xor
dec
inc
sub
sbb
push
lds
mov
out
xchg
pop
lods
xor
stc
push
loopne
dec
sarb
inc
pop
dec
and
lret
out
loop
repnz
fcompl
push
sub
adc
ja
inc
dec
cmpsl
fwait
mov
and
cld
mov
sub
mov
lret
sbb
pop
mov
mov
enter
or
cmp
pop
cmc
mov
xor
ret
int3
stos
mov
push
add
movsb
rorl
fmulp
int3
inc
add
xor
push
ficompl
leave
or
das
lcall
mov
jle
test
mov
sbb
xchg
dec
sahf
mov
mov
stos
stos
ret
jnp
faddl
jnp
push
cmp
andb
lods
ja
xchg
test
test
lock
jae
pusha
jl
js
or
lcall
push
add
loopne
sbb
pop
xchg
sbb
cs
or
filds
addr16
xchg
rcrl
ljmp
mov
lock
jp
les
mov
inc
movsb
js
mov
in
daa
or
arpl
aas
inc
jo
push
xchg
xor
push
mov
and
dec
test
pop
ret
lret
xlat
leave
js
mov
add
out
cmpsb
and
jnp
js
movsb
xor
in
xchg
push
mov
hlt
lret
xor
mov
repz
fildl
xor
jne
lret
mov
cmp
int3
add
loopne
and
mov
and
out
mov
push
nop
add
frstor
nop
lahf
mov
cld
cmpb
cwtl
data16
in
movsb
repz
test
loopne
jbe
jo
lods
dec
adc
mov
sub
add
xchg
jmp
mov
out
dec
aas
or
aad
adcb
inc
shrl
inc
mov
mov
cmpsl
rcrl
ja
lods
cmp
inc
enter
inc
or
mov
test
sti
adc
hlt
push
pop
vminss
pop
adc
dec
ja
ds
bound
mov
stos
rclb
jnp
mov
popf
sbb
lret
adc
loop
xchg
sub
test
inc
inc
lret
ret
mov
xchg
daa
mov
insl
notl
mov
pop
add
adc
mov
cmp
stc
mov
push
mov
fisttps
sub
push
mov
xor
int
and
fistl
push
les
push
adcl
push
into
sub
xor
xor
cs
add
adc
nop
mov
mov
shlb
int
add
ret
daa
dec
mov
fdivrl
rcrb
in
pop
jbe
fsubl
xchg
mov
mov
fdivs
inc
adc
cmp
mov
ds
push
test
mov
in
cmpsl
lret
out
ss
sahf
rcl
fbld
in
push
punpcklwd
push
cmp
mov
gs
push
dec
stc
jbe
mov
repz
imul
pop
inc
loope
gs
sbb
mov
fstl
fbstp
xor
lods
push
ds
cmc
int
imul
add
movsl
mov
jmp
arpl
mov
inc
repnz
mov
xchg
repnz
fistpl
or
push
pop
rcrl
hlt
dec
stc
xor
xchg
mov
mov
push
mov
dec
outsb
insb
cmc
cmpl
lcall
jo
sbb
std
ja
mov
xchg
sbb
and
pop
push
out
mov
and
jecxz
pushf
sub
add
imul
sub
fdivl
mov
xor
aaa
push
fisubrs
rclb
das
mov
clc
inc
sbb
arpl
int3
scas
cld
out
bound
sbb
out
jnp
movsb
in
push
hlt
js
mov
stc
sub
fnstcw
adc
mov
jge
addb
pop
repnz
inc
push
out
jmp
adc
pop
int
test
push
inc
xor
sub
mov
inc
sarl
adc
lods
sub
jae
iret
jl
dec
cwtl
push
inc
loopne
mov
and
sub
sbb
cmp
mov
mov
adc
mov
and
call
adc
int3
xchg
push
rcll
mov
loope
adc
add
js
mov
imul
and
scas
shlb
xchg
dec
imul
fwait
push
outsb
gs
jne
jns
xor
cld
sahf
stc
mov
jmp
pop
cmp
jnp
fnstenv
fdivl
loop
fadds
push
testl
and
in
fistpl
or
xchg
imull
shlb
lock
xor
icebp
incb
lods
mov
in
xor
dec
shrl
dec
stos
rcl
or
dec
jbe
lds
ss
xchg
jae
inc
sub
aad
cmp
mov
pop
sub
sarl
les
test
addb
div
mov
fs
sarb
or
adc
sub
add
add
pop
sbb
cmpsl
lretw
into
mov
pop
js
scas
mov
pop
cmc
icebp
rcrl
or
cmp
adc
aaa
addr16
adc
clc
lods
out
ja
data16
sub
enter
daa
imul
es
jecxz
adcl
pop
outsb
and
mov
test
in
test
xchg
insl
xor
imul
pop
jecxz
call
ficoms
push
or
xor
dec
sarl
shr
lock
dec
stos
sub
adc
xchg
ds
or
push
pop
lock
push
cltd
jns
jl
mov
dec
pop
int3
add
adc
ss
pop
xchg
fisttps
icebp
repnz
lret
or
leave
test
pusha
testb
jbe
mov
ljmp
dec
lods
and
outsl
pop
ljmp
mov
ljmp
and
cmp
adc
sbb
sub
adc
xchg
cmp
int3
lcall
lds
adc
or
orb
icebp
add
cmp
test
bound
pop
xlat
lods
add
fcmovne
and
inc
and
xchg
in
add
adc
xchg
inc
fidivrs
jb
adc
ds
repnz
jno
ret
cli
test
mov
paddsw
mov
movsb
push
mov
lret
mov
outsl
pop
ss
iret
xchg
cmp
push
mov
mov
push
movsl
mov
daa
dec
jnp
fsts
int
fimuls
push
out
out
shl
outsl
add
jp
push
pop
out
xchg
fmuls
lahf
lods
pop
stos
and
mov
popf
adc
pop
pusha
or
cld
pushf
pop
mov
mov
push
xchg
xchg
lret
pop
test
addr16
add
iret
adc
jg
loope
and
ret
fwait
in
stos
pop
sbb
imul
adc
jl
imul
or
imul
xor
push
mov
in
loop
xchg
popf
cmp
xchg
ljmp
fcomps
test
hlt
sbb
cmpsb
xchg
mov
xor
roll
pop
aam
sbb
lea
std
loopne
pop
xchg
mov
stos
xchg
lcall
mov
dec
cli
nop
out
lahf
push
hlt
add
out
jno
jle
es
adc
mov
movsl
mov
inc
and
icebp
sub
lods
dec
nop
xchg
cmp
xchg
adcl
addr16
int3
ja
subps
push
inc
push
mov
je
adc
or
mov
cmpb
xor
jo
add
in
jge
fs
test
pop
loop
mov
lahf
fists
lods
fnsave
fwait
addr16
call
aaa
jb
xchg
aam
pop
ret
repnz
sbb
push
or
jno
pop
push
stos
ja,pt
mov
mov
out
xchg
movsb
fsts
rcrl
and
jmp
jno
repnz
clc
adc
and
mov
jp
or
xchg
fucom
pushl
jle
cmpb
pop
inc
push
rcrb
sarl
mov
aad
aas
fwait
ss
ja
stos
cmp
xchg
daa
jmp
cmpsl
int
je
ds
push
pop
lret
fs
sarl
mov
cltd
mov
ret
cli
cltd
rcrl
mov
mov
dec
lcall
and
xlat
rcr
dec
test
aam
nop
add
inc
cld
int3
cs
dec
movsl
xor
add
adc
orl
xor
mov
movsb
movsl
bound
inc
mov
jbe
fiadds
push
xor
pop
jae
icebp
insl
pop
sbb
js
lret
mov
das
mov
fldt
xchg
fistpll
jnp
nop
insl
and
movsb
cmpsl
mov
es
fiadds
fsts
xlat
out
pop
dec
enter
jg
lods
je
fmul
out
addr16
and
and
ret
push
bound
fwait
mov
stos
inc
mov
lcall
mov
sbb
jmp
or
pop
stos
sub
jle
push
pusha
or
or
nop
ds
or
fbld
dec
testb
fnstcw
scas
adc
inc
inc
out
in
pop
add
testb
cmc
ja
les
pusha
or
xlat
gs
jp
adc
cmp
xchg
lods
or
fidivl
xor
mov
pop
dec
jmp
xchg
mov
xchg
aaa
shll
aaa
loopne
and
inc
mov
rcrl
or
loopne
push
gs
fwait
mov
in
xor
push
xchg
jns
addr16
fs
or
mov
mov
imul
jle
add
scas
inc
jb
fs
and
cs
outsl
cmp
jg
ja
pop
movsb
dec
push
mov
mov
jnp
icebp
xor
mov
mov
xchg
data16
outsb
jmp
jno
sub
stos
adc
and
sarb
push
outsb
sahf
jbe
sahf
pop
push
testl
and
repnz
ss
pop
mov
in
mov
lds
add
dec
test
and
inc
xchg
cmp
testb
jge
adc
out
jbe
jne
add
into
jg
fwait
loop
aas
ret
rcl
aad
outsb
xlat
and
xlat
and
subl
jae
adcl
cmp
or
repz
mov
imull
and
and
aaa
notb
xchg
cltd
inc
in
into
sub
xor
add
in
stc
push
cltd
stos
push
in
xchg
push
daa
outsl
mov
out
subl
mov
jle
fucomi
jl
pop
scas
clc
stc
mov
stos
jecxz
mov
dec
xor
dec
data16
mov
xchg
paddq
push
out
clc
inc
cmp
js
gs
es
sub
dec
push
aad
loop
xchg
pop
and
add
pop
fcomip
out
fs
sub
aas
inc
cmpsl
pop
fnstenv
sbb
ja
out
xor
sbb
in
xchg
fistl
popf
fmull
xchg
xchg
and
ljmp
out
repz
popa
ss
cmp
ror
xor
cltd
das
das
sarl
jmp
jecxz
fldl
push
xchg
fucomp
sahf
insb
jmp
loopne
popa
sar
lds
icebp
popf
dec
pusha
sbb
add
aad
pop
imul
cli
jnp
pop
jp
lods
push
xchg
lahf
orl
push
sub
inc
cwtl
aam
or
sarl
sub
xchg
orb
adc
mov
fbld
add
dec
sub
dec
pop
sbb
out
mov
push
xlat
push
sarl
pop
cmp
jno
in
mov
hlt
movsb
enter
xor
ret
xchg
adc
jge
lcall
xor
xor
bnd
rcll
in
das
into
jbe
pop
push
sub
mov
pop
leave
xchg
fsts
cmc
cmp
dec
mov
mov
mov
sbb
jge
jecxz
add
aas
adc
test
data16
lods
in
in
rolb
fldt
movsl
push
sub
dec
aad
jb
movsb
xchg
out
test
out
sbb
pop
inc
pop
inc
adc
and
rcll
sub
das
sub
loope
rolb
shl
add
sub
xor
and
push
cld
push
adc
dec
mov
mov
adc
mov
mov
inc
adcl
shlb
fisubl
dec
inc
fcompl
nop
jns
rorl
cmpl
jmp
and
jle
and
std
stc
nop
mov
mov
inc
cli
push
std
mov
shrl
sti
jno
or
adc
cltd
repz
hlt
lods
xchg
cltd
sub
push
push
pop
fcmovb
or
cli
outsl
pushf
loopne
xor
test
inc
cmc
sbb
imulb
xorl
push
cmp
add
sbb
mov
mov
mov
sub
dec
shlb
push
jg
sbb
loope
inc
in
add
movsl
and
mov
test
mov
push
out
lock
bound
fstl
gs
mov
mov
jecxz
aam
inc
sarb
push
stos
adc
cmp
fldt
adc
lods
sub
scas
cwtl
mov
pop
mov
lea
mov
push
mov
sbb
mov
jne
jmp
jmp
hlt
outsl
xor
mov
rcll
ja
dec
and
inc
add
mov
add
pusha
int3
mov
cmp
jle
iret
aad
or
xor
addl
mov
imull
fwait
and
mov
jb
cmpsb
inc
fidivl
test
dec
sub
mov
movsb
sbb
negl
ds
push
mov
scas
mov
push
sub
push
data16
ds
xchg
mov
lods
inc
shlb
out
stos
int3
clc
mov
xor
sub
mov
push
sahf
data16
in
sub
lods
jl
lods
arpl
fidivrs
aam
add
das
cmp
icebp
xchg
mov
ljmp
mov
push
and
iret
cwtl
mov
adcl
fs
popa
test
or
mov
clc
jge
addl
repnz
int3
mov
enter
dec
xlat
xorb
sahf
mov
gs
dec
jmp
and
sub
dec
pop
mov
adc
pop
les
mov
mov
xor
mov
imul
test
jb
mov
stc
or
mov
pop
roll
mov
push
daa
lock
mov
add
and
xorb
ja
rorl
mov
loope
repnz
xor
mov
hlt
push
lock
lret
adc
clc
sbb
pushl
mov
mov
cmp
dec
pusha
mov
pop
shl
fcomps
or
bnd
dec
jno
mov
and
icebp
push
inc
lods
repnz
cmpsb
pop
cmp
sar
je
std
repz
add
push
std
stos
xchg
xchg
js
sbb
sbb
adc
scas
mov
xor
push
add
mov
mov
mov
mov
jno
jle
push
jge
iret
push
sbb
imul
movaps
insl
push
movsl
push
jae
mov
jbe
inc
sarl
add
xlat
or
gs
jo
mov
rcrl
sahf
rorl
adc
jno
adc
jp
outsl
push
outsl
pop
out
fnsave
pushf
js
fwait
jg
sub
aaa
mov
xchg
sbb
pop
jmp
mov
ret
xchg
jno
lods
xchg
aam
out
sbb
lock
sbb
popa
aaa
aas
mov
inc
aad
out
stc
cld
mov
dec
loopne
jge
xor
pop
test
iret
mov
jo
sbb
mov
push
mov
scas
jg
mov
adc
sub
push
lret
fists
loop
enter
repnz
lods
sbb
push
sbb
jnp
lcall
sti
push
dec
mov
adcl
xor
jo
xchg
dec
out
cltd
mov
push
jge
scas
rorl
out
dec
xchg
out
push
shll
out
hlt
ds
cmp
jbe
cmpsb
cmpsb
sahf
mov
es
and
mov
aaa
lock
shr
arpl
fstps
cmp
sbb
les
stos
mov
cmp
xor
scas
pop
jmp
lahf
mov
xor
mov
ss
add
lret
mov
dec
cmp
shl
adc
or
mov
sub
lret
jg
sub
lods
sub
imul
jno
les
mov
in
aaa
push
mov
dec
leave
shll
xchg
shrb
les
out
or
adc
das
and
out
test
fdivrs
je
mov
repz
sub
pop
add
jbe
stos
js
sub
adc
xor
or
decl
xor
rcll
dec
mov
sbb
rcrl
mov
mov
leave
pop
hlt
lcall
int
int
jg
movsl
mov
mov
jl
addl
pushf
repnz
int3
bound
ja
loopne
push
js
popf
in
jno
sbb
int
arpl
inc
das
and
mov
inc
mov
dec
and
lods
mov
sub
jo
ret
jl
inc
and
mov
aaa
outsb
pop
and
in
scas
jge
xor
call
in
outsl
scas
loope
dec
sub
daa
jl
xchg
lds
lea
mov
cmp
push
fsub
test
mov
outsl
sbb
movl
push
data16
sti
xchg
xor
jno
mov
or
sub
mov
test
lock
das
push
sub
xlat
push
ret
jg
or
loopne
pop
mov
cmpsl
xchg
loope
and
push
dec
subb
lods
jae
adc
adc
mov
sub
ds
add
pop
movsl
fmul
mov
aad
ficoml
stc
dec
mov
scas
pop
sub
mov
push
loop
pop
adc
sahf
out
adc
repnz
pop
xchg
fwait
add
pop
cmp
repnz
nop
add
xchg
out
pop
push
mov
int3
or
mov
mov
movsb
mov
cli
cmp
aam
push
sub
enter
in
popf
lea
mov
adc
sbb
lret
push
nop
sti
xlat
jbe
xchg
adc
xlat
lods
sbb
sbb
imul
xchg
popa
sub
std
outsl
dec
call
mov
jmp
jmp
fstp
orb
sahf
mov
xchg
loop
insl
dec
rorl
shlb
popl
jb
push
orl
pop
mov
or
adcl
mov
mov
adc
fs
fsubr
add
imul
inc
dec
popf
filds
out
cmp
inc
je
add
xor
jbe
cmp
es
imul
shrl
jl
out
lahf
and
loope
mov
popf
xchg
pop
bnd
pop
pop
jl
sbb
andb
mov
insb
mov
insb
sti
fs
ret
rcrl
pop
xchg
fimuls
enter
sub
sub
pop
pop
gs
cmc
pushl
dec
shlb
sbb
pusha
test
sbb
and
enter
loop
lahf
dec
popa
movsl
fwait
or
inc
xchg
fs
jecxz
fwait
out
nop
arpl
leave
adc
fistps
jae
cltd
xchg
mov
jp
hlt
int
pop
xor
lods
dec
out
jbe
or
into
lret
xor
clc
pop
popf
xchg
fmull
ja
sahf
stc
rorb
js
pusha
outsb
cltd
stos
sbbl
cmp
cmp
dec
mov
dec
adc
xorb
inc
sub
pop
mov
pop
dec
sub
jl
imul
imul
mov
test
mov
jg
inc
movsb
adc
and
inc
xchg
push
xchg
sub
daa
pop
xchg
push
sub
lods
pop
push
je
popa
daa
int
shrb
loopne
cmp
push
xchg
push
xchg
push
addr16
clc
mov
test
sbb
and
icebp
inc
int3
adc
jne
push
xor
in
rcrl
pop
pushf
cmpsb
fstps
push
xchg
sbb
aam
push
sub
shlb
cmp
mov
into
cmp
jne
popa
jmp
xor
hlt
xchg
dec
ret
aam
es
paddw
push
cli
cmp
pop
sub
loopne
xchg
sub
mov
pop
nop
mov
fcmovnbe
fs
cmp
pop
stos
mov
aaa
inc
mov
je
sbbl
xchg
mov
iret
pop
sub
adc
int
mov
cs
iret
mov
mov
push
xchg
aad
adc
mov
aam
xchg
jle
ficoml
mov
sbb
jmp
add
inc
inc
mov
ret
pop
pop
inc
inc
lahf
mov
inc
xchg
insb
mov
negl
data16
mov
cmp
fcoml
mov
sbb
mov
leave
imul
jo
adc
dec
lds
js
inc
jb
cmp
inc
int
mov
pop
adc
in
push
sbb
adc
aaa
aaa
fst
or
push
movsb
sub
cmc
inc
mov
push
frstor
hlt
test
movsb
cmpsl
push
jbe
mov
xor
or
sbb
xchg
je
dec
sub
clc
sti
jecxz
mov
or
shrb
xchg
notb
shlb
int3
fstps
lcall
subb
ja
push
push
addr16
outsb
add
ud1
icebp
inc
cmpsl
fildll
jne
push
pop
jmp
push
mov
jo
sbb
add
pop
cmp
jo
outsl
sub
and
mov
jnp
cmpsl
jae
jnp
mov
or
fucompp
inc
mov
xor
mov
shlb
loope
cltd
jl
test
fsubl
mov
pop
xor
daa
mov
scas
es
xchg
push
data16
mov
scas
cmp
push
mov
jns
mov
xchg
mov
rcr
lds
mov
cmp
mov
add
enter
cmp
mov
and
sarl
lock
mov
loopne
addr16
loop
or
push
sub
lcall
mov
addr16
sbb
and
jp
push
repz
or
push
hlt
and
rclb
adc
pop
out
cmp
test
daa
push
and
das
hlt
fiadds
and
idiv
das
sub
in
sbb
jbe
cli
ret
push
sbb
jne
mov
call
inc
dec
dec
jmp
add
test
arpl
xor
inc
mov
hlt
lods
mov
adc
rorb
xor
mov
or
popa
fstl
xor
fsubs
in
icebp
add
rol
cmp
jo
cmp
jge
call
push
dec
inc
gs
inc
push
sub
loop
jne
test
pop
clc
mov
xchg
jg
or
fldenv
push
shlb
mov
inc
rcrl
jne
data16
nop
sbb
repnz
mov
mov
aas
in
sahf
mov
ss
push
fcomip
insl
mov
adc
addr16
fsubrl
mov
bound
or
xchg
mov
sbb
mov
shr
scas
jecxz
aad
nop
pop
pusha
lret
push
push
in
daa
mov
add
push
iret
pop
inc
out
mov
insb
jg
jmp
cmp
cmp
and
xchg
or
and
into
adc
inc
icebp
dec
or
hlt
outsl
lea
push
call
sbb
pop
mov
pop
enter
dec
push
mov
xchg
fstpl
cmp
icebp
mov
lods
sub
xor
arpl
sbb
das
or
jns
test
ret
push
xlat
clc
cmp
repz
jae
ret
sbb
sti
jge
inc
jbe
test
xchg
xor
adc
ret
nop
or
movsl
xchg
mov
inc
mov
gs
xchg
int3
rcl
lret
cmp
repnz
xchg
subl
enter
je
imul
cmc
data16
lds
xchg
push
inc
mov
fnstsw
mov
jl
sub
sub
sti
iret
adc
cld
and
adc
xor
pusha
pushf
xchg
xor
sub
repnz
push
inc
xchg
mov
cwtl
add
inc
and
mov
xor
repz
in
sbb
shlb
lods
andl
aam
push
std
jmp
bound
mov
cmp
pop
cli
push
dec
xor
jp
ds
pop
mov
mov
fwait
insl
insl
repz
pop
in
pushl
push
lock
repz
pop
inc
xchg
decl
stos
push
sbb
pop
jbe
mov
or
jnp
mov
repz
addl
test
push
mov
or
repnz
pop
mov
mov
repz
call
xchg
jns
sbb
in
jmp
clc
jne
sarb
and
push
mov
lret
test
push
sahf
daa
nop
fsubp
xor
push
xor
stos
dec
sysret
jmp
xor
or
fs
daa
xor
and
or
push
loopne
inc
mov
or
pushf
xlat
repnz
or
ror
mov
and
loope
push
sub
roll
out
sub
xchg
and
push
in
xchg
mov
test
ret
xor
decb
aaa
ljmp
test
jnp
aad
movsl
mov
pop
push
test
in
push
cmp
lret
xchg
mov
inc
inc
into
sbb
movsb
mov
out
aam
into
mov
out
popa
and
mov
push
adcb
or
out
roll
cli
and
jl
neg
and
dec
ror
pop
mov
sti
scas
into
shlb
mov
nop
cmp
and
lods
jmp
ds
or
fwait
jns
fwait
jne
lods
mov
mov
imul
ficomps
pop
mov
push
aad
xchg
daa
push
push
push
addr16
mov
popf
enter
sub
nop
scas
jno
xchg
shr
sbb
je
stos
pop
cmp
inc
fistpl
rolb
adc
imul
or
ljmp
scas
dec
push
movntq
out
xchg
mov
cs
fcoml
sbb
popa
xchg
sarl
mov
mov
jg
clc
and
rorb
mov
xlat
mov
jp
mov
movl
nop
mov
icebp
rclb
add
cmpsb
xchg
fs
dec
or
xor
fisubs
dec
out
ret
mov
dec
add
push
sarb
insb
je
xchg
xchg
daa
subl
decl
mov
mov
and
adc
sti
idivl
sub
rolb
or
jbe
repz
mov
loope
icebp
pusha
xor
sbb
xchg
xorb
loope
insl
loope
mov
popf
pop
push
sbb
and
iret
mov
dec
mov
shrl
pop
cli
sub
add
push
mov
push
fcom
out
add
in
jae
imul
xchg
jae
test
jl
movsl
int
and
add
inc
mov
int
lds
leave
nop
xlat
jl
gs
mov
jecxz
repnz
test
xchg
aad
mov
cld
and
insb
lcall
jbe
xlat
pop
idivb
mov
inc
push
jns
lcall
testb
sbb
mov
xchg
adc
pop
loopne
shlb
enter
nop
fimull
xorl
xorb
pop
cli
popa
lahf
sub
xor
mov
sbb
sarl
bound
sti
jmp
int3
jnp
call
mov
cwtl
ret
xchg
cltd
dec
pushf
mov
aas
or
rorl
icebp
sub
inc
sub
fidivrl
jo
lahf
inc
mov
xchg
clc
mov
inc
jne
pop
mov
cwtl
loopne
add
pop
dec
push
or
and
movsb
lcall
ja
std
sub
lods
push
xchg
mov
add
scas
ret
cmpl
cmpsl
leave
mov
mov
jb
shll
faddp
xor
addr16
mov
mov
cmp
xchg
xchg
out
sub
xor
xchg
push
jge
out
xchg
das
xor
je
dec
ficompl
in
insb
lock
fisubl
fwait
cmp
sbb
inc
orl
sbb
jmp
jl
popa
dec
cmp
stos
mov
cmp
cmpsl
inc
ja
rolb
mov
insb
jl
jo
popa
jb
mov
loopne
lret
mov
and
sbb
or
aas
xchg
pop
dec
aad
loop
push
popf
outsb
mov
xorps
fimull
pop
incl
jno
nop
scas
lods
lock
inc
or
sbb
and
dec
aas
mov
dec
ja
add
or
les
adc
repz
mov
xchg
mov
cmp
int3
out
aas
jle
xor
cld
push
loop
jl
push
jg
fsin
xor
mov
xchg
sub
and
push
cmpsb
add
lret
push
fs
mov
pop
js
lods
nop
and
jae
dec
mov
mov
test
jg
cmpl
push
inc
mov
ss
std
sti
ds
mov
mov
and
leave
fwait
les
push
faddl
fcmove
repz
add
out
dec
pop
mov
or
jns
clc
jb
pop
lds
loopne
add
rcrl
push
stos
sbb
fdivrs
iret
mov
dec
pop
addr16
and
pop
xchg
cmp
mov
fsubrl
repnz
cld
rolb
or
repnz
mov
out
repnz
mov
add
bound
lcall
ja
aad
stos
fnstcw
stc
fidivl
cli
inc
call
les
pop
and
bnd
test
xor
repnz
nop
xor
ret
aas
inc
lahf
dec
out
ja
sub
cmp
xor
loope
inc
cmp
outsl
xchg
xor
cmpsl
fs
test
xor
jmp
sbb
test
test
push
lcall
rcll
mov
adc
jl
outsl
bound
pop
add
int
hlt
test
insl
test
clc
xchg
int3
pop
xchg
xchg
push
cmp
int3
cmc
ret
nop
stos
out
rcrb
dec
cmpsb
dec
stos
jae
mov
lcall
mov
dec
popf
sub
cltd
mov
xor
push
and
fs
xorb
cmp
gs
sub
es
pop
clc
lods
push
ljmp
fiadds
mov
addl
notb
lock
dec
cs
xchg
cmp
int
ljmp
mov
cmp
adc
mov
dec
jno
and
test
and
scas
pop
hlt
jmp
lret
xchg
popf
lds
sbb
push
fdivl
ret
sahf
dec
pop
jecxz
mov
xchg
mov
adcb
mov
loop
xlat
fisttps
mov
or
or
jecxz
pop
pushf
cmpsl
cmpsb
bound
sbb
loopne
dec
cmp
outsl
sub
sub
mov
sub
test
mov
fld
sub
rorl
lea
mov
cwtl
inc
andl
rolb
sbb
xchg
cwtl
stos
out
jmp
sub
cmp
call
enter
repz
xchg
dec
es
inc
adc
push
jmp
jnp
pop
popf
sbb
sbbl
add
pop
pop
je
cld
andb
jp
inc
shr
lds
push
fdivrl
cmp
scas
lret
lahf
cmovle
cmp
addr16
faddp
push
and
push
jb
mov
sbb
inc
cmpsb
out
mov
pop
sti
pushf
mov
inc
sub
out
enter
nop
popf
mov
sbb
sub
nop
repz
popa
cltd
adc
push
add
inc
movsb
mov
lcall
ja
add
mov
repz
fwait
dec
xchg
xlat
mov
scas
pop
or
in
inc
outsb
or
lds
testl
ret
cmc
fimuls
adc
lret
scas
pop
pop
lcall
popf
jmp
out
gs
jb
shll
jbe
push
cld
pop
push
fucom
xor
lret
dec
insl
lea
inc
sbb
sbb
jl
fcomps
hlt
mov
push
mov
jno
dec
jne
mov
xor
cld
mov
in
stos
aad
cmp
mov
std
adc
in
loop
xor
xchg
pop
dec
loopne
pop
loopne
push
pusha
pop
xor
pusha
insl
sub
xchg
adc
mov
sahf
pop
jl
ljmp
fbld
jno
lea
sbb
std
leave
in
adc
jg
dec
mov
xchg
lods
cld
test
dec
test
jl
sub
das
mov
call
add
xchg
xchg
ss
lds
pop
test
mov
sub
outsb
pop
bound
inc
les
sub
mov
lds
stos
cmp
in
lret
adc
fs
aaa
or
add
sub
pop
jp
jb
test
call
jg
in
push
clc
push
mov
lods
leave
gs
and
dec
jl
cmovne
adc
js
lds
cltd
xchg
pop
cld
xchg
inc
fwait
and
in
push
ss
jnp
iret
out
jg
repz
cmp
mov
push
shlb
cli
test
pop
mov
cmp
call
mov
xor
jne
sub
jns
call
arpl
adc
push
in
push
insb
fimull
jbe
or
add
or
pop
mov
lods
aad
dec
sub
adc
out
aam
stc
in
icebp
push
enter
push
pusha
push
dec
clc
scas
mulb
sub
jb
iret
sbb
jg
ljmp
test
inc
inc
insb
pop
outsb
dec
inc
jnp
in
fs
stos
adc
cmp
test
sub
popa
jnp
push
add
jno
mov
pop
and
js
and
xchg
xchg
insl
lods
into
xor
inc
fdivrs
test
imul
jb
pusha
sbb
push
sbb
cmp
and
push
inc
nop
sub
cs
and
stc
lahf
insl
push
mov
mov
sbb
and
imul
xlat
cld
cmp
das
in
inc
fcompl
ret
ja
sbb
pop
mov
mov
rclb
lods
pop
fldenv
movsl
push
test
nop
shlb
pop
insl
leave
incb
js
ss
movl
jg
and
ljmp
in
int3
mov
test
push
fidivl
jb
inc
aaa
push
sub
cwtl
jp
jl
jge
dec
add
aas
popf
push
push
insb
vgetmantps
imul
xchg
fwait
and
into
fstpl
adc
test
pop
mov
pop
mov
ja
fwait
xchg
imul
shl
add
jmp
dec
pop
push
icebp
mov
pop
cltd
mov
adc
mov
enter
cmp
fs
in
cmc
push
xlat
xor
setb
shlb
fisttpll
jge
xchg
jl
xchg
lahf
jp
sub
cmp
out
adc
jp
and
add
int
xchg
in
sbb
push
jnp
sub
xchg
out
add
dec
xchg
or
sarb
aas
sub
cltd
leave
xchg
and
mov
push
in
popf
fidivs
jnp
mov
lcall
dec
out
inc
into
dec
xchg
adc
mov
shl
sub
mov
mov
sub
nop
mov
hlt
pop
mov
imul
call
cwtl
sahf
mov
ret
bound
les
stc
push
sub
jp
incb
adc
mov
or
xchg
dec
shlb
outsl
mov
scas
addr16
outsb
nop
shl
test
or
xchg
xor
mov
decl
cld
xchg
push
dec
fisubl
mov
nop
movsl
sti
in
je
sti
ja
fwait
jnp
push
xlat
into
jo
cltd
push
cmc
outsb
mov
jp
scas
inc
in
cmp
mov
lds
ds
pop
icebp
icebp
mov
mov
dec
js
jns
cwtl
aad
pop
outsb
jge
sub
add
and
mov
lods
push
das
jge
or
xchg
or
inc
push
scas
and
cmp
fs
sbb
decl
or
or
cmp
in
fisttpll
repnz
jb
pop
lahf
dec
in
mov
jl
subb
add
push
dec
xchg
pop
sbb
jae
loope
in
adc
jmp
add
shl
push
add
jne
inc
mov
mov
xor
dec
jbe
in
popa
xchg
inc
sahf
sub
xchg
cld
lcall
test
jmp
mov
xor
mov
andb
scas
rcrl
in
sbb
sahf
pop
icebp
add
jne
outsb
loope
mov
out
mov
rclb
xor
and
mov
adc
fildl
shrb
sti
inc
push
mov
adc
ja
sub
xchg
inc
add
js
mov
add
mov
add
rcl
mov
scas
dec
xor
scas
nop
ja
push
mov
loop
addr16
mov
sub
and
mov
shll
roll
mov
dec
orw
and
imul
test
inc
js
and
adc
mov
cmp
and
leave
cmp
mov
in
iret
mov
out
jecxz
and
loope
sub
popf
jnp
mov
fwait
dec
pop
lods
imul
dec
dec
fimuls
add
push
lods
les
push
pushf
adc
mov
jmp
loop
mov
cmc
push
sbb
xchg
inc
lds
in
jbe
dec
pop
pusha
ss
cvtps2pi
jle
cmc
pop
cmovle
cmpsl
ret
aam
xchg
xchg
dec
imul
shlb
xchg
cld
add
scas
adc
std
rorl
stc
and
mov
std
les
push
dec
push
mov
xor
lret
or
cwtl
adc
sub
stc
xchg
push
pop
lahf
sub
stc
icebp
ds
pop
insl
mov
cmc
add
sahf
adc
push
push
pop
cld
es
sbb
xchg
fdivl
cwtl
or
or
pop
ds
das
movsl
dec
mov
xor
ds
insb
lret
ficompl
mov
inc
ljmp
pop
adc
pusha
mov
add
andl
ficoml
test
cwtd
fdivrs
lods
inc
cmpsl
clc
xchg
add
lret
ds
cmp
out
enter
adc
fidivl
sub
mov
sbb
test
aad
xor
mov
sub
jmp
imul
jb
dec
add
mov
dec
divl
push
jae
inc
jp
pop
outsb
mov
jb
lock
xchg
mov
sub
mov
out
stc
loope
and
cmc
cmp
push
icebp
shlb
jge
aad
cmp
scas
mov
lret
fsub
aad
sub
hlt
jno
jo
aad
xchg
cmp
push
mov
push
fistpll
xchg
imul
sub
or
cld
dec
cmp
xor
jne
loop
inc
xchg
rcr
daa
mov
push
shl
add
cltd
stc
sub
cwtl
xor
lds
js
enter
outsl
mov
in
and
and
int3
clc
ja
fwait
sub
inc
add
ret
rclb
pop
jb
add
xchg
xor
push
adc
adc
adc
dec
xor
pusha
pushf
pop
lods
or
repz
dec
sahf
mov
into
iret
cmc
jle
jmp
or
sbb
xchg
jnp
fisubrs
add
std
add
pop
pop
js
aad
test
les
test
inc
pop
xchg
in
xor
xchg
inc
aad
or
cmovge
dec
test
add
inc
dec
sysret
push
cmp
js
mov
inc
or
cltd
lahf
in
das
pusha
addl
lcall
sub
mov
mov
addl
jecxz
loope
add
icebp
jl
aad
and
imul
das
pop
jge
popf
sub
and
dec
pop
fscale
cmp
pop
cmpsl
cli
stos
cmpsb
mov
jb
push
sbb
ds
jg
ret
insl
adc
push
ljmp
data16
pop
out
inc
mov
dec
aad
mov
les
mov
mov
jle
andb
cmp
adc
nop
stos
ror
xchg
xor
sbb
xchg
jb
sub
mov
outsl
inc
cmp
addr16
outsb
xor
testl
xchg
hlt
pop
or
pushf
insb
add
jae
div
pop
jbe
movsl
popf
sar
jb
jmpw
out
gs
jb
jo
pop
cwtl
dec
mov
ret
mov
orb
incl
int
scas
enter
ret
sbb
out
jb
xor
cmp
push
add
aam
mov
into
lock
xor
add
imul
or
cltd
outsb
bound
push
aaa
or
rol
pushw
cmc
xchg
xchg
repz
cli
sti
test
hlt
or
fcomi
movsb
cli
addb
psubusw
out
fdivrl
stc
or
jb
js
push
inc
xor
push
fsubrs
not
daa
outsl
cmp
loopne
add
jl
or
mov
pop
sbb
mov
aad
inc
test
jae
data16
sarl
insl
adc
daa
pop
pusha
mov
xor
push
mov
mov
dec
mov
shlb
fdivrs
mov
jle
jns
jne
leave
aas
and
loopne
sbb
inc
std
mov
test
sub
ret
push
push
adc
into
int3
or
fists
dec
cmpsl
add
lock
lds
fisubrs
pop
jo
or
int
mov
push
jno
pop
aad
imul
bound
ja
inc
mov
fcoms
cmp
add
cs
adc
pop
ljmp
sbb
cmp
add
mov
icebp
pop
dec
jb
fcomps
adc
add
add
and
fwait
dec
fneni(8087
inc
pop
in
lea
jmp
xor
rol
or
sti
jbe
mov
lcall
pop
cld
imul
mov
mov
rclb
mov
and
add
or
sbb
shlb
mov
mov
adc
jns
nop
add
or
sbb
adc
rolb
lret
dec
and
lret
inc
inc
inc
dec
ja
jb
xor
daa
cltd
xor
and
jne
imul
xchg
addr16
test
and
xchg
or
pop
int3
xorl
dec
sarb
jle
nop
daa
dec
cwtl
pop
xchg
xlat
pop
mov
lock
aad
or
lret
lret
jae
jnp
aam
jne
pop
push
push
insl
inc
mov
movsb
iret
shr
jnp
lret
push
ret
mov
sbb
lock
mov
or
mov
cmp
jmp
out
insl
or
rcrb
xchg
divl
ret
xchg
je
mov
jns
xor
lea
mov
inc
test
leave
call
lods
imul
inc
cmpsl
sbb
fisttpll
pop
shll
jp
pop
adc
mov
popa
mov
jge
subl
pop
lea
pushf
flds
mov
push
inc
loop
jnp
pop
sti
jns
inc
lea
clc
lcall
notl
mov
jb
lcall
shrb
aad
js
sbb
rcl
pop
mov
outsl
jnp
and
iret
scas
jb
add
shrb
loope
fwait
sbb
jmp
jmp
fsubr
out
mov
dec
push
and
std
rorl
ret
push
push
mov
mov
cmp
mov
bound
cmp
mov
pushf
inc
shlb
ja
les
xor
sarl
jae
jne
mov
fwait
xor
adc
cltd
dec
and
movsl
jbe
stc
mov
xchg
sub
mov
mov
push
js
in
sbb
lds
ss
jo
lcall
stos
out
push
sbb
push
into
sub
push
out
cmc
lret
out
mov
fs
rep
adc
sti
ret
add
xor
sub
lret
inc
xchg
sbb
nop
insl
and
in
loopne
cmpsb
xor
hlt
cmp
push
out
aas
gs
mov
sub
mov
inc
fistps
inc
sbb
outsl
mov
out
mov
xchg
add
js
pop
ljmp
dec
xchg
je
loopne
mov
fwait
jnp
inc
lahf
out
arpl
inc
xor
xchg
push
mov
iret
enter
jge
arpl
cmp
adcb
cmc
fdivl
xor
stos
xchg
jg
bound
jle
sbb
loop
adc
fcmove
or
clc
into
out
lock
and
into
dec
adc
xchg
pop
cmp
or
sahf
push
jmp
xor
rcrl
lahf
js
or
xor
jo
or
adc
mov
ret
cltd
das
xlat
shrl
sahf
dec
fs
or
fs
mov
xchg
aaa
dec
repnz
popa
test
sub
int3
test
out
in
test
pushf
inc
aaa
xchg
test
mov
mov
std
ret
cmp
cmp
lret
scas
dec
dec
mov
lds
mov
cld
adc
inc
mov
xchg
jge
or
aas
dec
push
shl
adc
into
xchg
fdivp
jno
cli
cs
loope
or
les
cmp
test
inc
das
or
sub
hlt
imul
cwtl
jp
mov
mov
je
or
sbb
inc
mov
sbb
scas
sar
or
notl
pop
daa
sbb
pop
ds
pop
dec
inc
jns
mov
je
cmp
in
push
cmpsb
ljmp
lods
adc
scas
sbb
jl
xchg
cmc
add
scas
cli
ja
mov
insb
test
or
int3
js
cmp
imul
push
and
adc
cmp
roll
lds
imul
lds
xchg
es
jle
mov
pop
pushf
or
repz
outsb
arpl
das
das
or
cmp
mov
fcoms
pop
andl
cmp
pop
push
adc
push
in
das
mov
int3
scas
icebp
loopne
das
sbb
je
js
mov
test
dec
test
xlat
sub
pop
xchg
jmp
imul
push
xchg
test
mov
mov
sahf
out
aas
jns
mov
mov
cmp
dec
xchg
cmp
mov
jno
dec
inc
xor
mov
cmp
in
fnstenv
sub
push
fsubrs
jmp
push
arpl
in
rcl
out
xor
inc
fmulp
popa
xchg
mov
ja
sbb
xor
jecxz
mov
insl
leave
or
xor
cmpsb
push
mov
jno
lcall
jbe
pop
xchg
test
stc
or
jecxz
pop
pop
movsb
aas
popf
int3
xor
mov
xchg
push
imul
xor
xchg
jb
or
sub
inc
pop
cli
pop
xor
cld
mov
je
mov
mov
and
mov
loope
lcall
lret
lock
dec
nop
aam
mov
xchg
add
int3
xchg
jnp
mov
or
hlt
cmp
iret
test
insb
cmp
fmull
out
xchg
push
cwtl
js
and
fwait
out
push
push
jge
ficomps
mov
xorb
idivb
lret
jbe
nop
mov
sbb
inc
adc
stc
and
icebp
add
lock
xchg
fwait
mov
jbe
sub
fwait
es
mov
push
out
mov
sbb
inc
mov
jae
xlat
stc
and
loop
mov
sub
ja
fmuls
adc
je
or
push
sbb
fdivl
call
pop
imul
dec
inc
enter
jns
or
insb
out
push
or
xor
cmp
mov
cli
push
jnp
inc
das
xchg
xchg
mov
lds
filds
cmp
aam
aam
adc
mov
pop
outsb
and
sbbl
dec
addr16
add
xor
sbb
pop
fs
fildll
mov
adc
and
pop
and
ja
mov
cwtl
inc
push
dec
mov
je
lea
stos
les
loop
jmp
lret
cmc
in
lds
sbb
ret
jb
sub
loop
fdivl
cmp
cs
je
repnz
insb
jecxz
shl
mov
mov
xor
adc
cwtl
jg
lret
mov
insl
pop
mov
mov
sahf
shlb
jmp
add
sar
add
mov
sti
addr16
sti
adc
test
lock
and
insl
and
nop
mov
xor
cmp
mov
mov
xchg
mov
sub
push
call
cmpsb
loopne
sub
cmp
in
lods
jecxz
pop
mov
mov
sub
aaa
sbb
mov
xchg
test
das
mov
ja
inc
push
pop
popl
dec
and
jns
xlat
jmp
jp
popa
jne
ja
push
mov
ja
push
cmp
repnz
push
js
je
loopne
enter
mov
sbbl
dec
pop
outsb
inc
add
mov
mov
xchg
mov
xchg
mov
pop
sahf
test
lock
mov
cmp
mov
pop
dec
std
clc
xchg
addr16
fstpt
popf
cltd
push
test
fldt
into
addr16
mov
test
jnp
stos
out
and
mov
pusha
cmpsb
pop
push
jbe
xorl
sysenter
adc
xor
int
aaa
in
nop
sub
ljmp
aaa
repnz
int
popl
jge
out
aas
add
push
fwait
lock
push
add
inc
enter
add
mov
and
push
inc
movsb
xor
out
fdivp
pop
std
xchg
js
sbb
inc
push
es
cmp
xor
int3
mov
xlat
icebp
sub
cltd
mov
jb
scas
xchg
stos
push
pop
fcoms
and
mov
adc
test
mull
push
and
rolb
leave
lret
int3
je
fildl
cmp
inc
call
jecxz
test
ja
js
pop
inc
xchg
out
icebp
leave
mov
xchg
fstpl
je
dec
mov
popa
or
loopne
inc
sub
mov
mov
sbbb
enter
inc
mov
pop
repz
jno
pop
mov
cmc
lods
pop
popa
enter
jmp
dec
clc
push
das
mov
pop
dec
pop
cmc
push
cmp
or
aad
lcall
jl
adc
lea
into
inc
push
adc
lea
and
cwtl
mov
shll
jb
pop
std
int
movsb
jb
mov
mov
stos
pop
and
daa
or
push
cs
adc
jmp
push
gs
out
cld
mov
cmp
pop
jnp
cmc
push
out
repnz
adc
xchg
sub
movsb
sub
insb
out
jnp
mov
loope
pop
add
mov
xor
xchg
jle
dec
jno
add
out
loopne
adc
mov
add
xchg
jge
popf
push
fsubl
push
mov
js
pushf
mov
adc
sbb
lods
imul
or
outsb
lret
imul
xlat
mov
pop
in
jmp
decl
inc
lahf
push
ds
mov
sub
xchg
dec
nop
pop
or
mov
xor
inc
mov
cmp
lods
jae
clc
in
and
sbb
ljmp
les
enter
in
mov
imul
mov
les
dec
mov
mov
nop
adc
inc
fldt
add
fdivp
cmpsl
clc
rorl
cmp
push
xchg
dec
fnstsw
leave
mov
xchg
test
stc
aad
inc
je
sbb
bound
push
adc
jle
test
loope
clc
popf
xlat
inc
ljmp
dec
push
leave
fdivrp
aas
fildl
scas
cmp
pop
out
in
add
test
and
iret
pushf
adc
fdivrs
repnz
aas
fwait
sbb
gs
adc
mov
test
jo
je
pop
sahf
int3
mov
ret
aaa
mov
minps
movb
enter
fwait
adc
mov
out
jecxz
inc
jae
movsl
add
mov
xchg
or
cmpsb
lret
push
dec
mov
int3
sti
jno
stos
fs
pop
ret
dec
fdivrl
push
sbb
and
push
cli
xor
aas
adc
pop
aaa
jb
dec
cmp
mov
mov
popa
jl
fsubrs
out
fistpl
test
inc
xor
adc
inc
mov
mov
cmp
jno
arpl
mov
and
sbb
gs
inc
jno
imul
shr
add
or
rolb
decl
mov
cltd
push
cs
mov
mul
jg
adc
push
mov
pop
sub
or
les
jae
dec
inc
imulb
pop
pop
call
fdivl
sbb
sbb
ds
fldcw
sbb
cmp
dec
lds
cmpsl
push
xchg
dec
std
das
mov
insl
jbe
stos
je
push
js
ret
cmp
mov
daa
lods
sbb
enter
in
test
jmp
clc
push
fsubl
repnz
mov
imull
dec
test
fsubl
xor
inc
jb
std
and
fdivrs
jmp
pop
in
jl
cmpsb
xchg
xchg
push
lret
dec
adcl
jg
xor
jp
inc
jp
adc
out
imul
ret
pop
mov
xchg
scas
xchg
lods
pop
fcoml
iret
adc
mov
mov
and
out
jle
push
mov
or
inc
movb
mov
push
sub
cli
dec
lret
jne
aad
pop
mov
jle
lods
leave
fisubl
mov
push
cmp
add
xor
cmpsb
xchg
jecxz
inc
lret
dec
lcall
iret
stos
inc
or
mov
pop
dec
in
or
stc
ret
mov
dec
loope
inc
dec
pusha
fstl
or
subl
adc
cmp
push
and
inc
cmp
or
push
mov
jnp
adc
pop
sub
aad
and
jmp
loop
cmp
test
or
push
ja
fstpl
bound
loop
pop
inc
mov
andb
xor
fldenv
jb
xlat
xchg
mov
cmp
adc
cwtl
lret
sbb
ja
js
iret
push
es
push
push
and
mov
xor
call
in
aad
mov
mov
negb
xchg
pop
imul
leave
jp
jg
sbb
cmp
push
mov
fsubrl
not
add
dec
cs
shl
sbb
cmp
int
cli
dec
test
lea
aam
lds
nop
cmpsl
push
mov
pop
fdiv
jecxz
nop
adc
movd
sub
sub
inc
jae
out
call
sub
sub
mov
dec
and
push
jns
and
mov
outsb
xor
jae
out
lret
popf
fdivrs
scas
fstps
dec
xchg
mov
ja
mov
push
mov
jecxz
call
ficompl
pop
pop
push
sub
jae
je
adc
cld
xchg
dec
outsl
jle
adc
cltd
cltd
sub
sub
xchg
cmpsl
insb
dec
ja
jp
or
cmp
mov
mov
dec
rcr
mov
jae
add
lea
mov
push
cli
push
cwtl
adc
and
mulb
adc
jg
mov
in
icebp
mov
cmpsb
pop
jnp
dec
sbb
loope
pop
popa
imul
ffree
mov
dec
adc
popf
rolb
ljmp
sbb
fsubrs
cmpsl
inc
sbb
std
cmpsl
xchg
or
cmp
cli
andb
cmpsl
not
jecxz
repz
and
or
sbb
sub
sbb
iret
je
dec
sub
pop
push
jns
call
push
pushl
adc
in
mov
mov
inc
sub
out
out
mov
faddl
cmp
addr16
add
jp
scas
push
cmpsb
mov
xchg
aad
mov
scas
fisttpl
rorb
add
je
scas
lahf
xchg
or
dec
xchg
lret
pop
repnz
punpckhdq
mov
or
inc
lods
in
adc
or
jecxz
cs
xchg
push
lahf
sbb
mov
pop
cmc
mov
stc
mov
add
sahf
int3
cwtl
jae
sbb
inc
sbb
dec
adc
lahf
add
fcoms
shl
push
jbe
sub
jg
mov
js
inc
nop
outsb
mov
xor
mov
sarl
push
fmuls
ja
adcb
sbbb
rdtsc
incl
gs
push
fmul
imul
or
shll
lret
push
cmp
hlt
ja
mov
loope
fdiv
dec
add
inc
insl
les
dec
sbb
push
loopne
not
test
pop
arpl
mov
sbb
sbb
lret
stc
lret
sub
jns
cmp
sahf
sub
adc
add
mov
fnstenv
in
js
mov
clc
pop
hlt
mov
jo
adc
xchg
ds
cltd
jb
sbbl
dec
mov
cmp
pop
push
jo
pop
rorl
add
xor
mov
daa
pop
jecxz
push
pop
cs
pop
in
xchg
jbe
je
out
pop
sub
cmpsl
mov
ss
scas
pop
cmp
mov
add
xor
and
in
fsubs
adc
pop
push
dec
out
sbb
cmp
sahf
inc
sbb
pop
adc
and
dec
pop
ds
int
dec
loop
dec
xor
das
sbb
add
ret
sub
les
inc
aad
int
sub
sub
das
dec
ss
ret
or
loop
test
sub
jg
lock
and
pop
mov
inc
and
inc
inc
in
jge
dec
pop
adc
fcom
push
push
xchg
xchg
cmc
sahf
outsb
stos
xchg
and
sbb
cmpsl
xchg
cmp
push
push
pop
fsincos
test
pop
out
add
sbb
fsubl
inc
jo
or
sbb
inc
add
mov
or
xchg
fildll
outsb
sub
xor
in
push
push
mov
in
and
pop
arpl
xchg
jbe
inc
sbb
pop
jne
outsb
jl
cmp
pop
jecxz
sub
sbb
sub
or
pop
and
call
pushf
fistpll
aas
jl
or
sub
cvtps2pi
pop
ds
and
push
push
ds
adc
dec
mov
sbbl
rcrb
imul
or
inc
sti
pushf
mov
jle
pop
jnp
test
mov
jl
sbb
push
notb
adc
repz
push
push
loopne
mov
scas
cmp
icebp
adc
and
pop
mov
nop
adc
sub
push
inc
adc
mov
push
xor
bound
add
repz
sub
mov
dec
cmp
cli
mov
pop
out
lods
out
pop
fisubrl
out
dec
pop
cmp
adc
out
inc
aad
mov
cmp
cmp
lret
cli
xchg
sub
mov
or
jae
into
pop
in
ret
movsl
adc
push
mov
scas
mov
sahf
popf
pop
insb
pop
sahf
ljmp
xchg
pop
mov
ss
ja
gs
pop
xor
mov
sub
sbb
mov
or
or
or
lcall
lret
loop
xchg
out
stos
pop
loopne
xor
mov
pop
stos
and
mov
dec
call
lahf
imul
mov
cmp
insl
scas
adc
cld
or
cli
pop
aad
std
adc
stos
sbb
cltd
push
mov
dec
in
cwtl
dec
int3
insl
push
sbb
dec
dec
cmp
repnz
inc
cwtl
gs
pop
out
mov
cltd
cmp
and
push
fists
inc
xor
push
push
mov
cld
push
cmc
and
xchg
pop
dec
jno
push
jbe
movsb
insl
pop
sub
and
fisubrl
or
xor
enter
adc
mov
pushf
xchg
or
sti
xor
sbb
xor
movsl
or
push
outsb
inc
sub
jnp
push
out
movsl
pop
lea
or
xchg
or
out
sbb
add
inc
or
jl
dec
mov
je
mov
rcl
sahf
loop
or
inc
xor
dec
inc
xor
clc
mov
sarl
iret
dec
fnstsw
push
in
imul
push
mov
loop
pop
stos
dec
inc
ss
mov
lret
bound
sub
xor
push
mov
xchg
cmp
lea
push
addr16
pop
push
jmp
lods
ret
popa
js
cmp
je
push
jbe
xchg
xor
jb
mov
movsl
push
jno
xor
fcoml
mov
push
xlat
xor
scas
mov
sbb
push
dec
pop
fdivrs
xor
mov
inc
jle
adc
into
inc
xchg
xchg
cli
mov
leave
jmp
in
fisttpl
xchg
add
push
pop
scas
sub
stos
jb
shl
lock
jno
ret
push
fdivr
insb
xchg
cli
pop
adc
or
sub
push
and
dec
mov
xchg
push
cmpsb
mov
xor
and
add
ja
repz
lods
add
enter
push
nop
test
lods
mov
jmp
lock
adc
inc
sub
iret
lods
mov
jns
and
mov
pop
rol
aad
sbb
icebp
xchg
or
dec
movsb
mulb
test
lahf
or
xor
mov
insl
adc
divb
push
cmp
out
aas
xor
jmp
scas
repz
mov
xchg
inc
push
mov
cmovge
iret
out
or
push
pop
xchg
sbb
loopne
dec
inc
insl
sti
aaa
xor
mov
popf
mov
inc
adc
lea
lds
mov
lock
and
stc
cmp
xchg
jg
sti
or
gs
or
das
lret
push
inc
and
lds
imul
push
jb
inc
ljmp
inc
sbbl
sti
addr16
icebp
jo
pause
inc
lfs
or
fimull
mov
andl
xor
xchg
negl
pinsrw
inc
jns
sbb
pop
jb
lahf
cwtl
mov
repnz
xor
jo
dec
movsl
inc
adc
in
leave
cmpsl
idivl
cwtl
mov
div
or
xchg
aas
in
imul
rorl
inc
mov
decb
xchg
push
mull
cmc
or
cld
jno
or
add
scas
xchg
je
mov
jmp
dec
pop
inc
add
add
push
mov
daa
dec
pop
enter
aam
sbb
dec
fistpl
imul
push
adc
nop
scas
or
les
int
loope
pusha
mov
mov
push
cmp
hlt
int
stos
ljmp
jge
push
cmp
sbb
in
xchg
ret
inc
sbb
jmp
lea
xchg
mov
mulb
push
xor
sbb
sub
sbb
and
inc
ss
cmp
cld
packuswb
into
inc
pop
lods
ficoml
add
in
xor
jbe
cmp
andb
out
mov
arpl
popf
cs
jecxz
out
mov
xor
xchg
cmpsl
push
stc
dec
pop
sub
inc
mov
in
sbbl
daa
test
cmpsb
pushf
mov
sbb
mov
sub
push
repnz
out
xchg
test
add
neg
sub
fnstenv
and
in
and
sub
sub
push
imul
fs
jp
loope
cli
mov
gs
out
sti
daa
pop
std
xchg
js
stos
add
jg
in
mov
xor
lea
adc
test
mov
enter
call
jle
xchg
sub
sbb
mov
or
xchg
mov
xchg
dec
into
in
push
fwait
jb
insb
mov
jge
mov
ficomps
sub
sbb
mov
adc
and
loope
push
iret
pop
jmp
mulb
jb
sbb
xchg
int3
repz
divl
inc
mov
pop
repnz
xchg
insb
dec
daa
pop
sub
xor
dec
xchg
xor
jmp
inc
mov
insl
imul
mov
dec
mov
xchg
dec
lret
sbb
lret
or
pop
fcoms
jnp
adc
iret
repz
dec
sbb
lret
fildl
movsl
mov
sbb
mov
in
push
sub
hlt
dec
lret
adc
inc
push
push
xor
mov
aad
repz
cmp
jbe
inc
scas
stos
in
pop
loope
imul
mov
dec
mov
loop
mov
pop
popf
out
int
loop
lds
shl
xchg
add
dec
xchg
adc
pop
push
fcmovnbe
jns
or
js
jne
jbe
mov
fsubs
daa
cmpsl
loopne
cli
mov
insb
outsl
fidivs
jns
mov
fldt
cmp
ret
inc
sbb
mov
hlt
pop
imul
push
xor
push
jne
sub
mov
int
jo
nop
xor
mov
jecxz
fsubr
jmp
ror
cmp
push
xchg
jecxz
cmp
das
int3
or
sarl
pop
jnp
gs
aad
pop
mull
lret
xchg
sti
fwait
out
in
jb
fidivrl
xchg
loopne
aad
movsb
jno
mov
ret
cld
loopne
dec
push
hlt
push
cmpsl
mov
pop
xchg
sub
xor
bound
mov
jle
jns
sub
insl
fadd
lea
dec
mov
in
push
lock
xor
stos
adc
sub
popa
pop
shrb
push
fldenv
add
or
push
lock
loopne
pop
add
mov
dec
lods
mov
rcrl
push
enter
bound
jecxz
fildl
in
int3
cmp
ficoml
dec
mov
dec
sbb
ffreep
cmpb
insl
rolb
mov
mov
mov
sub
sub
cmpsl
in
mov
lcall
mov
cli
std
in
je
dec
inc
das
call
push
sbbb
sbb
sub
xchg
push
loop
pop
aam
jl
mov
xchg
or
cltd
adc
add
dec
and
xchg
test
cmp
xor
cs
fcomps
sahf
in
scas
add
cmp
fiadds
fwait
stos
mov
mov
fsub
out
xor
pop
adc
in
subb
cli
int
sbb
push
pushf
dec
mov
addr16
mov
and
sbb
add
pop
data16
fdivrs
jnp
or
pushf
insl
push
push
test
push
aam
push
mov
cltd
add
xor
out
scas
and
pop
jle
add
cmp
push
xchg
mov
les
pop
or
int3
sub
add
ljmp
repz
add
sub
shrb
call
test
es
bound
movsb
fucompp
lret
cmp
xchg
jl
fmulp
or
push
stc
data16
testb
xor
xchg
xchg
mov
test
cmp
sti
xchg
mov
aaa
push
mov
dec
and
rorl
xchg
adc
cmc
enter
iret
sti
pop
nop
and
fsubl
shl
je
clc
pop
pop
jmp
dec
int
mov
sarb
pop
jnp
insb
jno
dec
mov
shlb
andb
mov
jmp
pushf
cmp
outsb
jl
cmp
idivb
adc
jg
lcall
fs
addr16
hlt
mov
xchg
mov
dec
push
dec
jmp
mov
int
gs
cs
add
mov
mov
xchg
sub
sub
jns
adc
insb
mov
cmp
pusha
int3
or
dec
xchg
pushl
mov
aaa
cmpl
mov
add
ljmp
notb
jb
xchg
pop
mov
fstpt
jne
lods
fwait
out
inc
shr
sbb
sbb
pop
lods
add
bound
xchg
push
mov
mov
mov
add
aas
mov
push
pop
insb
test
cmp
ds
popl
in
adc
sbb
pusha
into
mov
adc
or
fldl2e
lret
clc
in
jmp
test
xor
mov
fmull
jb
mov
jp
pop
iret
jnp
push
stc
fstps
or
in
xchg
xchg
cmp
add
daa
push
cs
cmpsl
pop
pusha
cmpsb
jg
fnstenv
popf
jmp
and
dec
cmp
sbb
imul
cwtl
mov
lret
add
movsl
cmc
clc
lods
ret
jmp
and
mov
stc
sbb
shll
xor
std
inc
ljmp
xchg
test
xchg
add
mov
mov
xor
shl
lcall
cmp
add
test
sbb
mov
mov
std
jae
push
cwtl
sub
inc
flds
sub
jae
sub
mov
cmp
lds
mov
pop
loop
cmp
sub
push
shlb
cmc
stos
pop
insl
xchg
xor
pop
pushf
fsubp
add
cmp
aaa
ja
mov
and
or
test
and
sbb
xchg
ja
adc
hlt
daa
into
jl
jns
jno
mov
pop
ret
mov
add
mov
xor
incb
int3
shrb
cmp
lret
cmpsl
pusha
pusha
sbb
add
ret
push
lea
push
xor
popf
cmp
lea
ficompl
int
xchg
add
movsl
aad
sub
cmp
pop
test
sub
add
sahf
dec
lret
mov
xor
ja
pop
aad
movsb
mov
loope
ljmp
or
jge
fstps
xchg
xor
pop
mov
lea
mov
adc
push
mov
test
imul
test
jae
mov
neg
stos
or
jns
ret
cmp
xchg
jae
dec
add
in
mov
and
loopne
jns
mov
adc
pop
xchg
xchg
dec
mov
mov
movsl
aam
lea
mov
mov
mov
sbbl
lea
in
or
ret
inc
mov
pushf
dec
leave
pop
int
inc
jbe
pop
and
fsubrl
lret
mov
mov
outsb
xlat
push
lds
in
sbb
push
dec
adc
add
mov
in
or
pop
enter
je
jl
mov
and
pop
or
orb
and
maxps
inc
into
mov
cmp
rcrl
ja
vpunpckhdq
adc
leave
add
dec
dec
int
idiv
jno
and
sub
push
mov
call
es
data16
jmp
sub
repz
movsl
fldt
rcrl
dec
adc
jb
dec
scas
add
mov
jp
xor
mov
mov
subb
xchg
dec
movsb
pushf
insl
xor
jmp
repz
or
inc
adc
or
ja
push
xchg
loop
sbb
cltd
sbb
lcall
cmp
int3
pop
sbb
mov
adc
or
mov
push
pop
dec
aaa
xchg
stos
lret
and
sar
dec
into
sbb
add
movl
fistl
pop
enter
mov
jecxz
nop
mov
sarl
enter
iret
mov
ss
jo
add
insl
xorl
mov
jno
mov
mov
xor
and
mov
and
bound
inc
cmp
loope
movsl
dec
aam
inc
lds
ljmp
ss
stos
adc
divb
sub
test
mov
sub
decl
rcr
jle
mov
xchg
mov
nop
pop
dec
loope
xor
cmovnp
xchg
mov
pop
fcomps
imul
or
mov
adc
sub
cmc
inc
xor
inc
jo
jge
ljmp
dec
or
repz
lahf
or
inc
lods
neg
jle
add
imul
les
aaa
cld
rcrb
jne
scas
and
imul
adc
out
data16
popf
mov
sub
shlb
in
aam
pop
aas
das
pop
mov
pop
out
jmp
jne
xor
shrl
cs
mov
int
mov
sub
imul
cld
mov
in
xor
orl
cmp
pop
adc
mov
shl
aad
scas
mov
jbe
mov
in
filds
inc
mov
syscall
or
push
xor
cwtl
out
cmp
jbe
or
push
int3
mov
ljmp
shlb
xchg
pop
fs
out
pop
xchg
notb
lods
out
mov
into
sahf
test
cmpsl
lods
mov
and
jmp
cmpsl
imul
stos
aaa
cmp
xlat
mov
xchg
test
cmp
js
mov
mov
jl
aaa
mov
adc
lcall
jmp
mov
fldcw
pop
aaa
imul
pusha
shl
imul
pop
push
fcomi
add
xor
sub
adcl
arpl
sub
divb
dec
jae
lock
sbb
push
je
push
xor
mov
ficomps
ja
loopne
js
adc
insb
loopne
pop
mov
insb
lods
jns
leave
loope
addr16
imul
dec
xor
or
pop
fsubrp
sbb
sub
mov
sysenter
mov
ss
xor
ds
xchg
push
fnstcw
push
iret
stos
shrb
xor
test
mov
icebp
rol
cs
and
imul
fdivs
pop
and
xchg
add
movsl
mov
lods
pop
mov
sarb
les
add
ret
push
fwait
add
ja
and
sbb
xchg
mov
lahf
sahf
mov
jno
ret
test
jp
cmpsl
and
iret
sahf
jo
les
mov
sub
imul
inc
arpl
xor
iret
jmp
icebp
cmc
xor
out
call
clc
movsb
jl
jp
shr
subl
pop
and
and
jae
pop
shll
xor
enter
shll
xchg
push
test
in
jmp
movsl
dec
jge
pushl
sub
shlb
inc
enter
pusha
sbb
jbe
mov
sarb
adc
mov
push
push
cmp
shrl
mov
daa
out
push
jge
dec
outsb
loopne
clc
scas
sub
sbb
fs
call
or
sub
cmpsl
fucom
out
testb
out
mov
rcl
cld
push
mov
imul
ret
popf
mov
xor
cmp
dec
xchg
cmpsb
xchg
xchg
add
mov
mov
xchg
xchg
stc
fbstp
push
pop
test
outsb
mov
inc
cmp
sub
push
pop
out
ja
std
scas
cmp
mov
add
inc
inc
idivl
jb
mov
sub
adcb
fs
xchg
pop
lcall
cmpsl
inc
clc
adc
leave
stos
pop
aad
push
jmp
xchg
xchg
sahf
or
test
xchg
push
xor
or
das
shlb
gs
mov
popa
push
mov
sbb
rcrb
in
mov
jmp
pop
sbb
push
adc
leave
xorl
das
inc
dec
cmp
mov
cmpsb
rcll
dec
std
sbb
icebp
rcrb
inc
dec
add
test
dec
repnz
sbb
mov
sub
mov
sbbl
orl
mov
add
add
sub
int3
xor
push
xorb
or
pop
jbe
out
enter
popf
imul
adc
xchg
loope
dec
popa
fistl
addr16
and
sbb
mov
mov
dec
sbb
mov
push
xchg
inc
test
push
dec
outsb
dec
sarb
cwtl
fwait
lret
xchg
out
in
add
mov
adc
mov
mov
scas
mov
fadds
cmp
xor
xor
adc
xchg
or
push
es
jecxz
test
mov
dec
and
gs
lret
push
lods
cmp
jmp
pushf
jge
lret
aas
mov
fsts
jp
jbe
cmp
mov
inc
cmp
jg
sbb
sub
pop
cmc
pop
dec
cltd
test
aas
sti
movsl
out
inc
out
or
dec
push
cmpsl
fs
add
jge
cmp
fbld
ret
cmc
mov
lods
arpl
es
mov
mov
out
std
inc
or
fidivs
movsl
ljmp
jg
jne
jmp
cmp
adc
adc
or
pusha
sub
inc
out
push
out
in
jecxz
ss
push
jp
sti
push
jae
mov
mov
test
cmpl
gs
cmp
rcll
sub
xchg
cmpsl
cmp
xchg
xchg
jmp
adc
daa
jl
int3
add
mov
iret
mov
jb
push
push
data16
gs
sti
push
and
push
sub
ljmp
jnp
mov
sbb
cmc
fcmovne
sarb
popf
push
test
xchg
add
jmp
fwait
pop
inc
xchg
shrb
repz
xchg
fdivrs
inc
lret
adc
xor
jo
loop
das
mov
sar
cmp
jnp
dec
cmp
mov
es
inc
mov
sub
pop
sbb
mov
loope
ljmp
nop
loope
cmp
aaa
scas
fwait
inc
es
xor
pushf
mov
fscale
pop
pop
clc
push
in
mov
movb
stos
inc
cmp
add
mov
fisttpl
in
dec
cwtl
xorb
push
mov
movsl
lods
and
sbb
sbb
xchg
jecxz
lret
xchg
xchg
movsb
div
sbb
sti
add
jno
jle
jg
out
jecxz
ret
out
stos
iret
pop
out
sub
es
test
pop
in
je
fbld
movsl
scas
pop
sub
cld
in
loope
cmp
mov
enter
dec
movsl
cmp
nop
cwtl
mov
cld
insl
jg
popf
xchg
jne
push
scas
mov
int
pop
loopne
mov
xor
dec
aas
xchg
or
sub
lret
dec
in
insb
pop
orl
lods
and
repz
inc
movsb
orb
mov
in
push
inc
stos
cmpl
orl
jp
in
pop
pop
mov
sub
arpl
repz
mov
mov
jg
mov
jmp
lock
pop
sub
je
aas
shll
fidivrs
rcll
sbb
xchg
sbb
add
mov
sub
cmp
int
test
xor
inc
mov
mov
and
out
xchg
fstps
add
mov
data16
in
push
fs
mov
iret
jns
mov
jo
dec
int3
arpl
pop
aad
and
sbb
mov
and
mov
ljmp
xchg
jge
cmpsl
pop
daa
enter
adc
pop
inc
mov
dec
sub
nop
cmp
movw
cmp
mov
sub
fdivl
popa
sub
mov
sub
out
leave
jno
dec
pop
inc
lods
sub
fwait
mov
and
xor
pop
rcll
push
in
shll
sbb
xlat
int3
andl
cs
lods
adc
stos
adc
sub
add
in
mov
lods
mov
enter
rclb
out
fnstcw
jo
inc
rcl
cmpsb
xsavec
jg
mov
ret
dec
rcr
mov
das
pusha
sub
popa
xchg
jecxz
lahf
cli
mov
insl
dec
negl
jl
push
jge
mov
push
es
dec
push
mov
dec
rcrl
out
stos
repz
cmc
lcall
out
jmp
xchg
jae
mov
jns
insb
adc
lods
js
cmp
mov
fwait
mov
cmpl
aam
sbb
call
outsl
inc
loopne
scas
icebp
or
test
cmp
cmp
push
and
ss
aas
cli
cmp
xchg
fildl
loop
mov
outsl
mov
jmp
mov
and
stos
outsb
mov
inc
jae
sub
push
inc
int3
cli
or
xchg
pop
fs
out
divb
rolb
cli
pop
xor
mov
and
pop
inc
jmp
xor
stos
push
out
push
std
leave
mov
dec
push
pop
scas
mov
xchg
test
sahf
pusha
outsl
test
faddp
sub
ret
addb
loope
push
int3
cmp
sbb
cld
jo
jecxz
mov
mov
xor
stc
push
and
enter
into
push
lock
out
bound
sub
ja
mov
dec
jns
orb
xchg
cmpl
mov
mov
xor
adc
or
ljmp
adc
je
shll
jg
mov
or
inc
mov
fisubrl
insl
add
pop
mov
lcall
sbb
loop
push
dec
cmp
out
js
sbb
loope
int3
int3
jmp
out
mov
sti
rolb
and
clc
xor
inc
cmpsb
pop
pop
push
in
mov
add
xor
mov
iret
es
ds
pop
int3
std
bnd
sbb
pop
mov
push
fucomp
xchg
rcll
inc
inc
gs
dec
cwtl
and
out
pop
cmpsl
push
xor
add
mov
scas
inc
cmpsl
mov
outsl
xchg
stc
add
cmp
lret
ja
imul
cwtl
jl
mov
ss
cmp
fwait
pop
sti
nop
scas
jg
scas
cmpsb
push
cmp
shrb
mov
ss
xor
pop
addr16
fadd
leave
xor
rolb
pop
pushf
mov
pop
in
sbb
or
mov
dec
popa
dec
sbb
cmp
pop
sbb
mov
sar
mov
inc
iret
and
into
hlt
fsubrl
cli
in
call
adc
clc
scas
jae
push
mov
mov
mov
push
xor
fdivrs
xor
xchg
inc
pushf
scas
outsb
shl
and
pop
mov
mov
leave
and
inc
movsl
ret
push
jmp
testb
lret
iret
insb
lcall
mov
dec
outsb
hlt
aaa
jno
adc
push
inc
push
aas
adc
out
push
inc
xchg
or
movsl
arpl
rorb
sbb
dec
lret
cwtl
mulb
into
aas
sub
dec
mov
loopne
jae
icebp
loopne
mov
dec
sahf
gs
outsb
jae
movzbl
jle
cmp
cld
add
sbb
popf
dec
cmc
scas
mov
mov
dec
js
inc
cltd
add
jge
lret
test
xchg
scas
sbb
test
pusha
adc
fwait
xchg
cmc
sub
mov
mov
mov
mov
adc
insl
in
stos
push
lcall
inc
outsl
bound
insl
ficoml
jno
sub
out
dec
mov
shrl
push
movsb
add
mov
and
gs
movl
dec
fs
shlb
aad
jmp
push
xchg
cmp
in
in
icebp
repz
mov
xchg
lods
fwait
push
mov
pop
mov
fildl
cmc
mov
jecxz
mov
sub
jmp
xor
xchg
notb
fmuls
inc
popf
mov
mov
push
and
pusha
test
imul
fnstcw
mov
outsb
js
sub
mov
mov
inc
or
sbb
ja
imul
sub
sub
cmp
and
cmp
mov
call
gs
cwtl
dec
out
or
or
popa
add
sub
push
icebp
in
push
in
out
enter
cmc
xchg
sahf
fidivs
jne
mov
cmp
pop
nop
and
enter
lret
das
iret
or
sub
insb
pop
jl
in
dec
mov
pop
mov
mov
mov
pop
lcall
jecxz
push
cli
xchg
hlt
les
jb
int3
mov
repz
test
sahf
xchg
cmp
xlat
sub
add
mov
adc
and
or
fmuls
push
xor
clc
daa
std
cmp
jg
mov
add
add
jnp
xchg
sub
pop
cld
mov
xchg
shrb
in
sub
out
sahf
mov
fists
in
sub
dec
sbb
nop
ljmp
pop
or
xorl
mov
inc
cwtl
outsl
cmp
xor
sub
cmp
mov
ret
adc
ljmp
cmp
jnp
push
xchg
and
push
push
dec
mov
sbb
fucomip
das
jge
adc
mov
in
fsubp
mov
leave
sti
loopne
mov
ss
and
lea
inc
jecxz
adc
clc
imul
xchg
in
out
icebp
scas
cmpsb
add
mov
jge
addr16
mov
mov
jmp
cmp
xchg
cmp
and
pop
or
jecxz
hlt
shl
stos
or
loopne
lods
pop
nop
shll
push
push
and
xchg
loopne
sbb
aaa
jo
sbb
xor
xchg
aas
sub
pop
pop
dec
add
ret
sub
repnz
jae
fdivs
in
mov
mov
push
ja
lds
mov
bnd
xchg
into
lret
pop
inc
sahf
sahf
mov
fbld
xchg
and
cmp
cmc
jo
dec
or
mov
rorl
mov
cmc
mov
sub
xchg
arpl
lods
fwait
xchg
jmp
adc
mov
pop
pushl
loope
data16
xbegin
inc
push
mov
mov
mov
fbld
sbb
test
sub
inc
shr
sbb
jl
rclb
arpl
and
aas
into
es
dec
ljmp
daa
imul
imul
sub
cwtl
and
loop
loop
dec
pop
in
sbb
shrb
cmp
or
adc
xlat
shrb
or
mov
or
jle
out
filds
adc
xchg
sub
cmpsb
xor
add
jbe
stc
sbb
pop
loopne
outsb
in
fidivs
xorl
lock
jb
add
jae
jnp
daa
rcr
pop
fsubrs
mov
and
inc
imul
orb
pop
enter
dec
mov
cmp
ret
jg
mov
andb
or
cld
adcb
mov
iret
fistl
hlt
fisubrl
jno
fistps
popa
int
sbb
xchg
mov
mov
push
iret
cmc
adc
pop
fidivl
mov
jne
stos
stc
xlat
or
cmpsl
sbb
repnz
push
leave
ds
adc
push
icebp
out
mov
lds
pushf
jns
addr16
test
rcl
loope
push
cmc
or
sbb
mov
mov
dec
push
push
fwait
in
incb
shlb
popf
add
xrelease
in
les
cli
adc
pop
pop
and
push
enter
mov
jge
test
cld
sbbl
push
outsb
ss
stc
ret
scas
add
enter
clc
mov
js
data16
or
jb
sbb
mov
movl
rcrb
fisubl
mov
xor
mov
in
popf
nop
scas
mov
stos
into
or
out
fabs
incb
lods
xor
pop
test
mov
inc
adc
mov
lock
pusha
cmp
cmp
pop
lods
xorb
sti
push
mov
ret
js
xchg
aam
cmp
ljmp
lods
cwtl
mov
hlt
std
mov
popf
mov
mov
jbe
adc
or
mov
cmp
pop
daa
dec
nop
repz
hlt
pop
lahf
ficomps
fldcw
cs
clc
cmc
ljmp
mov
or
inc
inc
movsl
jae
stos
std
inc
ja
test
mov
ljmp
movsb
pushl
scas
fwait
xchg
cli
cwtl
mov
mov
xchg
cmp
add
pop
add
in
jae
pushf
push
ss
lods
stos
pop
jns
repz
jns
sbb
js
pop
and
push
test
outsb
fistl
and
adc
je
in
ret
mov
popf
fs
cmp
daa
ret
dec
pop
inc
fcom
and
mov
fmull
ss
enter
add
push
inc
repnz
xor
mov
sbbl
shrl
movsb
jo
testl
imul
icebp
rorb
push
dec
fmuls
sbb
aaa
xchg
mov
inc
subb
jno
cmp
loopne
mov
les
stos
jmp
sbb
inc
xchg
aad
jb
pop
and
ret
std
insb
repnz
add
mov
xchg
xor
inc
sub
jnp
les
mov
mov
out
imul
sub
mov
xchg
outsl
sbb
dec
xor
adc
cli
out
add
pop
inc
mov
fsubrl
and
adc
cld
arpl
gs
mov
aad
push
mov
in
lds
dec
fmulp
cmpsl
add
jbe,pn
sti
mov
jge
adc
fwait
add
gs
pop
adc
inc
and
mov
add
das
or
mov
adc
mov
subl
lret
dec
outsb
xchg
or
pop
or
rcrl
sub
xchg
pop
mov
pop
push
sbb
push
js
ss
test
or
cmp
aam
lock
sbb
lds
negb
orl
cmp
sti
mov
repz
fstp
push
mov
fisubl
out
outsb
scas
shlb
ficoml
jno
icebp
enter
sbb
mov
js
das
xchg
mov
mov
push
mov
shrb
in
sub
shl
leave
call
fstpl
and
aaa
jecxz
imul
push
sarl
mov
xchg
shlb
stos
dec
and
psubsb
int3
ret
jnp
inc
lds
add
sbb
xchg
fs
out
adc
jbe
cmp
dec
into
sbb
iret
popa
mov
mov
push
icebp
mov
mov
repnz
push
and
mov
arpl
in
in
jmp
and
repz
pusha
rcll
pop
scas
out
adc
pop
andl
scas
xchg
out
add
adc
scas
out
push
loop
xlat
mov
inc
testl
int
fsts
jno
bound
mov
lock
mov
pcmpeqw
xchg
add
mov
pop
inc
mov
cmp
hlt
mov
jmp
jp
push
xor
ja
rolb
sub
lret
dec
fistpll
call
sbb
mov
andnps
push
add
cli
in
pop
mov
xor
in
push
adc
and
cs
ss
imul
ljmp
scas
in
sarb
dec
push
mov
push
cld
jae
arpl
je
inc
sub
into
or
mov
push
sti
jbe
sahf
mov
pusha
cmp
mov
and
ja
jmp
mov
pushf
popa
outsb
xchg
adc
leave
xchg
icebp
lods
pop
sbb
and
loope
outsb
fisubl
cmpsb
adc
mov
nop
sub
add
add
jnp
pop
xchg
cmp
subb
int3
clc
stos
mov
mov
sbb
jb
mov
mov
sti
mov
mov
jp
mov
fcoms
jl
mov
sub
pop
dec
jmp
pop
nop
mov
test
stos
adc
xor
das
mov
pop
in
mov
push
movsl
out
cmp
int
cltd
orl
pop
imul
insb
leave
add
cmp
sub
push
xor
xchg
mov
dec
bound
mov
aad
sbb
js
daa
jp
sbb
icebp
or
push
jae
adc
insl
dec
popa
sbb
shr
ror
xor
dec
mov
lret
fsts
dec
clc
add
mov
in
jne
cmpsb
and
sub
pop
cmp
mov
ret
cltd
das
or
stos
cltd
loop
movsl
and
hlt
jae
dec
sti
out
es
or
mov
jbe
roll
sub
mov
lret
cli
shlb
xchg
sub
mov
push
push
cs
sub
nop
insb
xor
mov
and
adc
adc
xchg
ljmp
pop
outsl
add
pop
sub
sub
add
sbb
cmp
jmp
in
sbb
sbb
xchg
iret
negb
and
stos
jb
xchg
cwtl
push
sbb
sti
pop
jecxz
mull
or
pop
and
outsl
icebp
dec
lahf
push
cmp
fstps
sub
push
imul
stc
in
je
or
lods
or
cmpsl
fistl
cli
pop
movsb
push
mov
ret
xor
pop
sbb
pop
mov
xchg
loopne
inc
mov
ljmp
sti
mov
les
sti
xor
bound
inc
out
cli
test
xchg
movsb
xchg
sbb
test
notb
stos
xchg
sub
push
cmp
xlat
hlt
pop
cmp
stc
incl
fs
call
dec
lods
fnstenv
inc
in
das
xor
test
inc
mov
insb
pop
add
push
xor
push
mov
sahf
jne
push
lods
in
ficomps
fldl
sub
sub
clc
mov
cmp
aas
adc
xchg
enter
dec
addr16
stos
repz
sahf
inc
ds
in
jnp
movsb
and
and
xchg
outsb
in
fldlg2
shlb
je
addr16
mov
inc
inc
push
jg
inc
mov
mov
jl
pushf
icebp
mov
cld
mov
lods
sbb
test
push
jle
sarl
sbb
outsb
add
jg
ljmp
fwait
dec
popf
ret
sbb
jb
fnsave
push
mov
add
cmc
push
mov
xor
ret
inc
movsl
or
je
jbe
repz
inc
xchg
in
inc
aaa
fsubrl
add
ja
mov
fsubrl
and
ret
sub
insb
fcomip
adc
sbb
cmc
mov
data16
sahf
or
stc
fsubrs
lret
lea
and
mov
outsl
xor
enter
dec
out
outsb
lock
push
fildll
mov
ss
xchg
dec
lret
push
mov
loope
dec
push
push
push
sub
jbe
fwait
adc
imul
into
adc
icebp
xchg
adc
jecxz
bound
lods
mov
out
sbb
mov
inc
adc
inc
xchg
imul
xchg
mov
xor
int
push
rcrb
jb
xor
and
dec
jl
mov
jmp
sub
jmp
test
xchg
pop
fwait
jne,pt
dec
jg
loop
mov
xlat
jo
push
ds
sbb
ret
rcrb
mov
mov
pop
adc
xorb
jno
loop
sub
gs
cmpb
dec
cltd
mov
rcll
cs
cli
jbe
cmpsb
in
fistpl
movsb
ret
jp
aaa
std
out
adc
gs
lahf
adc
fwait
sub
xchg
mov
cmp
lods
adc
lds
jecxz
jecxz
data16
mov
ljmp
add
push
ret
jecxz
mov
pop
mov
xlat
fstps
fiadds
inc
repz
or
dec
pop
and
push
jae
enter
push
mov
out
xor
xor
pop
negb
pop
jle
dec
push
mov
imul
outsl
lahf
xor
gs
cmp
sub
push
repnz
popf
xor
xchg
ljmp
sbb
mov
shrl
mov
std
dec
nop
push
or
sbb
mov
dec
dec
mov
xor
clc
leave
or
cmp
push
repz
add
or
mov
add
and
outsb
imulb
nop
pop
push
jne
pop
jns
sub
mov
stos
cmp
inc
in
lods
adc
cltd
cli
pop
sbb
rclb
sub
repnz
mov
or
arpl
leave
mov
push
aas
out
pop
sbb
pop
cltd
add
imul
stos
mov
loope
inc
movsl
xlat
scas
add
call
add
xor
loop
dec
mov
xor
sti
icebp
sub
xor
out
test
xchg
jle
ror
pop
in
mov
call
mov
push
cltd
mov
adc
cmp
cmc
mov
dec
jb
in
xlat
jae
fstpl
cmc
and
mov
pop
or
mov
mov
cmp
adc
pop
sbbb
rcrb
adc
icebp
ror
push
mov
stc
mov
rclb
mov
xchg
dec
test
dec
lds
ss
ret
inc
inc
repz
add
lcall
adc
lret
pop
and
aam
imul
jbe
dec
xchg
mov
in
subl
add
ds
xlat
pop
ljmp
pop
clc
fwait
add
cmp
stos
xchg
jg
jmp
call
lods
mov
outsb
push
mov
inc
fcoms
xor
xchg
cld
cltd
sbb
xor
mov
mov
lods
jmp
mov
adc
dec
inc
push
dec
xor
cmp
lcall
sbb
fidivrl
mov
sahf
pop
push
aam
dec
cld
sbb
adc
mov
lods
push
inc
mov
mov
sbb
shl
es
fdivr
sub
jno
sub
cmp
popl
sub
push
mov
xchg
js
call
cld
test
nop
mov
pusha
push
out
je
xor
call
push
outsl
add
cmovb
xchg
pop
enter
jecxz
jge
out
adc
inc
add
jbe
pop
insb
ret
mov
frstpm(287
add
push
adcb
inc
popa
push
shlb
scas
sbb
dec
out
clc
sbb
inc
hlt
stc
js
data16
mov
lret
clc
pop
sti
clc
add
jno
push
push
test
adc
mov
dec
in
add
cmp
xlat
mov
out
in
leave
rol
in
dec
into
sub
jge
lcall
mov
pop
add
xlat
outsl
mov
fimull
rorl
cmpsb
xchg
pop
xchg
js
push
or
sub
xchg
or
iret
xchg
pusha
or
dec
mov
in
imul
push
out
jmp
dec
adc
sbb
cmovo
mov
std
push
iret
shll
xchg
pop
cmp
fsts
stos
sbb
addr16
in
lods
shl
jecxz
jl
stc
in
mov
jae
outsl
add
or
fstpt
and
fidivrl
mov
mov
cmp
push
in
mul
psubq
xor
push
shlb
movsb
imul
mov
popf
push
mov
jecxz
lret
sub
cmp
ja
daa
xchg
lret
sbb
lahf
dec
mov
sub
mov
jmp
sbb
dec
in
mov
fs
jmp
into
sub
add
adc
cmp
and
pop
jne
mov
inc
outsb
lds
mov
mov
and
xlat
cmpsl
and
daa
cmp
bound
mov
jb
inc
ds
push
or
mov
mov
or
pop
xor
mov
lret
sub
int
cmpsb
into
movsb
test
fcomi
loop
sub
jbe
add
and
cwtl
jns
jae
es
xlat
mov
mov
aaa
sub
dec
dec
out
loop
repz
xor
cs
or
push
lcall
stos
idivb
and
ds
call
add
stos
test
dec
fcompl
push
dec
sub
sbb
jl
pmuludq
jle
sti
dec
cmp
sbb
push
mov
sub
push
sbb
mov
fsubl
xchg
dec
mov
jns
jl
xor
testb
mov
fcoml
incb
sub
mov
lods
dec
xchg
ds
push
in
pop
fwait
imull
test
insb
jo
jmp
rcrb
addr16
sti
inc
or
push
pushf
pop
sti
js
mov
les
cwtl
outsl
iret
inc
dec
addr16
arpl
pop
adcl
jmp
mov
out
call
cmp
pop
push
push
js
dec
in
pop
loopne
dec
cmp
imul
in
inc
ja
imul
not
pushf
sahf
arpl
xchg
sbb
aam
sbbb
mov
dec
call
adc
sub
cmp
push
cmp
sbb
cmc
fldt
cmp
rorb
dec
xor
in
mov
xchg
sbb
cmp
push
jg
inc
inc
jno
repnz
or
cmp
dec
sub
repnz
les
lds
aam
pop
rolb
ds
mov
shlb
and
push
out
stos
add
pop
mov
lret
sub
hlt
add
pop
add
in
push
jmp
dec
repz
mov
adc
negl
xlat
push
xchg
sbb
lcall
mov
mov
dec
xor
dec
sbb
xor
mov
push
out
mov
rorb
pop
lret
insb
xchg
aam
add
push
mov
rcll
xchg
outsb
mov
lcall
out
pop
ret
jbe
xchg
mov
sbb
inc
sbb
adc
mov
mov
mov
or
adc
or
push
sub
pop
pop
stc
inc
jg
push
clc
xchg
dec
mov
mov
mov
repnz
loopne
jge
push
mov
sub
dec
je
in
rcrb
sub
pop
mov
rcl
popf
sub
mov
xor
push
add
addr16
push
gs
adc
push
xor
dec
les
jecxz
fs
sub
pop
and
shrb
mov
or
push
arpl
xchg
sbb
adc
fs
fistps
cmp
gs
out
cmpsl
sub
mov
fwait
sbb
jecxz
inc
lea
lret
jp
imulb
push
xchg
adc
divb
mov
and
out
dec
sbb
xor
and
pusha
andl
xchg
pop
in
or
jno
push
mov
inc
loope
rcrl
mov
pop
mov
test
int
xlat
andl
das
xchg
clc
mov
cmp
xchg
cmpsb
divl
xchg
negb
jns
bnd
xor
pop
mov
push
cmp
pop
xor
jb
sbb
iret
call
scas
push
dec
push
enter
mov
scas
jecxz
xchg
movsb
mov
pop
clc
mov
xchg
push
loop
jp
mov
mov
sbb
inc
fnsave
inc
je
int3
gs
pmaxub
scas
scas
and
aad
inc
push
movsl
pop
pop
or
pop
mov
pop
mov
stc
icebp
lea
push
in
inc
pop
pop
fnsave
cmc
mov
test
std
negb
in
and
cmp
pop
cwtl
or
sub
imul
or
or
lret
daa
outsb
cs
inc
push
imul
ljmp
pop
sub
and
sub
cmp
popa
jmp
mov
int3
outsl
xlat
pop
enter
dec
cmc
jmp
out
leave
adc
lds
ds
in
enter
lods
add
mov
mov
sbb
sti
adc
imul
pushf
cmpl
lods
js
or
lahf
fisubrs
xchg
xor
jmp
mov
out
sub
fs
cmovl
jb
sub
fildll
lock
sub
xchg
sbb
push
pop
jno
rolb
mov
xchg
aas
xchg
loop
pushf
xchg
mov
xchg
arpl
fsubrl
jecxz
outsb
cmp
xor
dec
or
leave
test
imul
xchg
aaa
es
jb
push
cmp
mov
clc
add
rcrb
xor
cmpsl
lods
xor
loop
lcall
inc
je
pushf
mov
in
lds
push
dec
adc
insb
push
dec
add
and
idivl
xchg
aam
loopne
jae
repz
stc
push
sarl
jb
pop
pop
jno
cmpsb
rcl
in
jne
std
div
in
repnz
mov
mov
js
bound
mov
mov
xlat
mov
dec
push
lcall
mov
shl
push
les
mov
xchg
add
inc
ss
sub
or
xchg
iret
push
inc
cmp
ret
xor
outsb
push
lahf
shlb
sar
popf
rcrb
shl
loope
aaa
push
xor
mov
mov
adc
inc
jmp
mov
sub
xchg
cmp
jb
sbb
outsl
dec
mov
push
stos
popf
pop
push
mov
test
fnstenv
imul
push
push
or
loopne
push
icebp
mov
call
xchg
mov
cmp
in
addr16
enter
nop
scas
jecxz
clc
out
fdivs
lcall
and
dec
das
outsb
pop
cmp
adc
addl
int
icebp
sbb
in
or
add
cmp
inc
push
and
movsl
mov
pop
adc
mov
lea
fistl
mov
push
or
cli
xchg
xor
pop
or
pop
fimull
insl
mov
add
addl
inc
inc
jmp
push
into
andl
fisubrs
iret
mov
xchg
and
sbb
into
lods
pop
sub
push
push
push
cwtl
jne
push
inc
outsl
dec
movsl
pop
adc
xor
fcomps
pop
ficoms
mov
push
xchg
push
push
stc
mov
std
cmp
cltd
das
incb
pop
push
mov
dec
into
add
aaa
sub
or
push
xchg
cmp
iret
cmp
mov
and
rcll
fsub
jnp
pushl
sub
and
sub
cmc
fistpll
jl
ret
ljmp
inc
lods
sub
sti
out
push
mov
xor
mov
jns
push
icebp
cmp
sahf
test
push
pop
lret
add
jns
cli
add
mov
lds
std
ret
mov
mov
and
les
jl
repnz
dec
pusha
jle
pop
mov
movsb
push
xchg
lret
dec
xchg
std
dec
jbe
add
jp
cmc
jle
and
out
imul
jle
and
imul
stos
jnp
icebp
mov
call
icebp
xchg
into
call
sub
inc
gs
jp
roll
cvtpi2ps
mov
or
sbb
mov
sti
mov
movsl
pop
cmc
fildll
sahf
xchg
pop
mov
sbbb
xchg
sbbb
push
push
ret
push
call
pop
xchg
mov
inc
testl
pop
int
mov
lds
loop
or
sbb
xlat
pop
cltd
jl
lods
cmpsl
adc
fsubs
jg
inc
cmpsb
pop
adc
adc
adc
or
aas
cmp
or
pop
insl
cltd
sub
jns
cli
std
ja
cwtl
in
cltd
lahf
mov
sti
jge
sub
jae
cltd
xlat
inc
pushf
int3
pop
add
int3
xor
xor
push
sbb
shr
ss
fdivs
mov
pop
in
inc
adc
lea
sbbb
adc
dec
sbb
adc
mov
fwait
cmpsb
rorl
sarl
jmp
mov
dec
insl
inc
sbb
adc
mov
jecxz
fwait
js
pop
adc
or
leave
jmp
xchg
lret
cmp
cmp
sub
inc
popf
push
push
in
mov
dec
inc
or
push
rorl
arpl
adcl
dec
jns
and
and
or
pop
xlat
out
sbb
xor
dec
adc
xchg
roll
out
ja
push
mov
jbe
cli
xchg
sarl
pop
lret
mov
notl
xor
mov
in
jno
xor
lods
aaa
outsb
dec
addr16
mov
add
sub
fildll
ret
xlat
cmp
pop
push
mov
pop
inc
mov
pop
sysret
cmp
in
jo
cmp
sub
nop
xchg
jge
pop
jb
xchg
into
dec
push
push
ljmp
gs
movsb
mov
pop
sub
inc
inc
lret
shll
fs
out
mov
cmp
sub
movsl
loopne
sub
rolb
push
sub
rcrl
sbb
mov
mov
test
mov
xchg
add
shr
dec
dec
aaa
popl
repz
mov
push
enter
iret
mov
lods
insb
aam
lcall
scas
aas
in
stos
lds
cmp
cmp
sbb
out
dec
ficompl
dec
sbb
add
xchg
int
in
or
mov
ljmp
jae
mov
mov
popf
fs
cmp
lcall
pop
mov
inc
pop
fimuls
and
xchg
push
or
jp
fsubr
adc
xchg
cmp
sbb
lods
cmpsb
jl
cmp
pop
push
jl
inc
je
pop
jg
pop
push
sbb
fs
cmp
ljmp
loopne
pop
cli
shrl
mov
in
push
jbe
not
inc
imul
dec
xchg
push
shrb
cli
dec
mov
mov
xchg
jp
bound
outsl
outsl
out
in
mov
jb
or
mov
cmp
mov
test
out
cmc
mov
decl
fisubrl
inc
subl
in
jecxz
stc
sti
and
movsl
dec
or
fadds
push
cltd
mov
xchg
ret
mov
mov
xor
cs
sbb
pop
in
addr16
sbb
scas
sahf
cltd
jbe
push
out
push
int
in
jle
add
imul
es
sub
push
ss
xchg
aad
jp
add
cmpsb
cmp
add
xchg
mov
jge
popa
cmc
fdivp
ds
push
or
andb
aam
inc
loopne,pt
push
addr16
dec
sbb
daa
out
rcll
orl
xor
cmpsb
mov
push
shrl
xchg
js
add
outsl
bound
jmp
xchg
aad
mov
sti
int3
into
sbb
ds
cmp
imul
xor
dec
jge
stos
push
stc
movsl
sub
call
pop
jl
scas
add
popf
mov
scas
jmp
or
fs
mov
pop
je
fnstsw
sub
add
dec
jo
divl
iret
inc
pop
and
mov
cmpsl
fsubrs
sti
and
add
hlt
popa
sub
or
sub
inc
sbb
outsb
add
xchg
std
sub
mov
leave
in
fbstp
push
xlat
ss
bound
mov
xchg
andnps
xor
imul
xor
xchg
les
loop
or
std
adc
cmc
repz
jb
push
fisttpl
jno
sbb
out
push
popa
sub
mov
add
jmp
sbb
fwait
jge
jecxz
std
lds
and
jp
mov
mov
sbb
sub
sub
ss
dec
imul
sub
sbb
jbe
fwait
adc
test
adc
dec
mov
fnstcw
inc
xorb
sar
xchg
cmp
movsl
lret
mov
inc
fdivrl
je
pusha
dec
cld
daa
cmp
or
pop
xchg
imul
int
popa
call
add
pop
into
testl
jbe
push
les
dec
out
xor
push
dec
mov
dec
outsb
jmp
je
cmp
fcoms
cmp
mov
and
mulb
in
shll
lock
dec
add
cld
xchg
sub
xor
push
ret
leave
out
xchg
in
or
clc
mov
cmpsl
rcr
int3
daa
cmpsb
test
xchg
fidivrs
fwait
out
xchg
cmpsl
mov
adc
or
cli
jge
lahf
test
les
mov
fwait
ljmp
xor
je
movsb
in
cs
sbb
mov
out
jno
shlb
out
iret
xor
shll
test
lret
testl
jo
mov
mov
jne
js
pop
dec
stos
or
scas
xor
xchg
pop
mov
pushf
subl
mov
in
scas
or
mov
or
mov
in
inc
loop
dec
jl
ljmp
inc
popa
pushf
packuswb
xchg
mov
push
xor
xchg
push
mov
or
out
push
cmc
mov
adc
add
cld
popa
sub
xor
inc
jmp
pop
fsub
mov
push
push
shrb
ret
push
in
lock
leave
imul
arpl
sub
add
mov
add
mov
pushf
adc
divl
in
and
jle
pop
mull
insl
shrb
push
pop
mov
out
leave
test
arpl
xlat
inc
cmp
inc
stos
imul
aad
dec
mov
sbb
mov
das
inc
movsl
addr16
in
dec
jno
idivb
mov
ret
jns
mov
and
dec
sbb
into
rcrb
scas
sub
out
xchg
mov
jb
xchg
sub
imul
xchg
cmc
hlt
lcall
pop
and
cwtl
sub
cs
push
ds
or
pop
jae
in
popf
adc
pushf
insl
xor
push
mov
jecxz
leave
xor
clc
ds
mov
js
jl
sbb
test
jl
xor
out
pop
pop
arpl
test
jmp
inc
ds
ficompl
or
jl
jle
repz
adc
scas
cwtl
aaa
es
mov
outsl
jbe
dec
mov
mov
push
addb
adc
jmp
jb
fisubs
gs
divb
mov
je
mov
mov
shrl
jbe
xor
mov
in
adc
nop
mov
insl
adc
fmuls
add
dec
jmp
lods
fdivl
jbe
out
sbb
dec
in
push
sub
rolb
mov
cltd
push
add
ficoml
pop
pop
aas
xor
pop
or
das
inc
inc
leave
in
jae
icebp
xor
stos
xchg
loop
clc
stos
in
imul
cmp
je
dec
insb
movsb
sarb
cmpsb
js
jl
leave
push
push
pop
pop
jp
pusha
aad
mov
mov
into
ss
gs
fisubs
jmp
push
fstl
sahf
inc
and
dec
bnd
mov
inc
adc
into
arpl
aas
pushf
mov
fstpt
fstps
mov
mov
push
xor
jbe
or
sarl
sti
insb
xchg
fwait
into
push
jb
lock
adc
cmp
cmp
les
lods
imul
pop
sbb
adc
daa
int3
sbb
pop
icebp
pop
cli
jecxz
cwtl
pushf
and
push
mov
shlb
jmp
mov
and
push
pop
or
xchg
fisubrs
mov
pop
push
jmp
jecxz
bound
lret
mov
xor
popf
inc
movsb
mov
movsl
push
inc
aam
jb
adc
push
scas
xchg
imul
mov
in
sub
les
adc
mov
or
aam
mov
mov
xchg
mov
js
lods
and
xor
es
repz
test
pop
nop
call
stos
mov
ret
mov
movsb
mov
add
hlt
mov
mov
clc
inc
andb
inc
jle
fucomp
out
inc
addr16
push
push
lret
and
test
inc
dec
xchg
stc
dec
xchg
push
adc
leave
inc
in
sbb
aaa
lods
js
imul
mov
in
pusha
loop
mov
pushw
sub
push
out
inc
and
pop
add
imul
imul
dec
daa
shl
rep
jne
mov
stos
cmpsb
mov
inc
ss
cmp
xor
xchg
add
and
sub
cli
mov
sbb
cltd
outsb
or
jbe
cmp
pop
lods
adc
inc
mov
cmp
sahf
mov
jp
mov
and
mov
and
les
ljmp
mov
sbbl
movsb
mov
sbb
or
fs
js
pop
stos
int3
neg
mov
mov
add
out
push
jle
cmp
lds
lret
mov
test
fnstcw
and
mov
out
xchg
roll
in
hlt
add
lock
arpl
out
loope
repnz
xchg
jo
sbb
addr16
cltd
push
flds
mov
adc
out
int
call
sub
jmp
adc
dec
inc
cmp
xchg
sub
sbbb
pop
jle
imul
mov
push
in
pop
in
jb
xchg
push
sbb
insb
sub
pop
push
xor
iret
bound
cli
ljmp
bound
std
pop
fisttps
dec
mov
jbe
jns
imul
aaa
sub
ret
dec
loope
in
movsbl
ror
sbb
loopne
or
mov
mov
js
jp
adc
jae
push
out
and
sub
imul
adc
es
push
stos
mov
lods
xchg
addl
push
adc
mov
mov
dec
rcrl
mov
bound
dec
and
cmp
enter
out
pop
je
mov
idiv
pop
sti
dec
enter
sub
ljmp
xor
or
mov
sti
loope
imul
pop
xor
adcl
lods
mov
ja
pop
mov
or
test
sbb
movsb
jbe
jmp
sbb
nop
inc
inc
and
mov
addr16
sahf
push
roll
adc
outsl
xchg
pop
clc
repz
or
fsubs
call
pushf
mov
sbb
fdivrs
push
mov
add
imul
lahf
pop
xchg
lock
sub
repz
pop
fisubrs
cmpl
jecxz
sbb
pop
inc
push
ret
pop
inc
sbb
jbe
sti
jns
inc
test
mov
inc
arpl
out
insl
cwtl
das
pop
push
sub
movb
mov
pushf
cmp
cmpb
insl
and
and
cmpsl
les
mov
mov
repnz
idiv
in
xor
or
cmp
fnsave
mov
aad
pusha
fmul
pop
add
lods
call
push
adc
jo
test
xlat
rcl
repz
je
ret
fisubs
xlat
or
jb
test
mov
aad
add
push
movsl
push
insb
adc
lcall
push
and
sub
push
jnp
sub
stos
decb
jno
arpl
mov
adc
test
cmp
aad
cmp
test
shlb
xchg
sub
inc
or
sar
and
adcb
ret
or
or
icebp
nop
out
inc
dec
in
insl
aad
and
dec
and
ret
adc
les
push
dec
loop
dec
jl
es
push
xchg
xor
dec
cltd
lods
popf
inc
cmp
and
mov
lcall
fstpl
push
ljmp
stc
ljmp
stos
pop
inc
cli
push
adc
into
fisubrs
ja
sub
subl
jo
std
std
out
test
nop
mov
stos
repz
add
cmpsl
push
sbb
std
cs
pop
push
aaa
out
xorl
lods
xchg
inc
pop
xor
inc
scas
dec
mov
inc
ror
mov
fildll
add
leave
call
mov
push
js
inc
xchg
mov
lcall
ret
outsl
ljmp
setle
test
lcall
sbb
stc
hlt
bound
push
test
adc
jg
pop
push
lcall
and
mov
shrb
ss
xor
js
push
inc
iret
or
or
jle
push
outsb
outsl
or
mov
out
outsl
hlt
pop
or
popf
push
test
mov
sti
scas
ljmp
xchg
mov
movsl
test
cmp
sti
ljmp
sbb
fdivs
cmp
pushf
gs
ja
arpl
shlb
cltd
fisubl
sbb
add
and
xchg
xlat
call
mov
inc
cmc
repz
addr16
pop
add
push
sub
aaa
mov
ss
inc
cld
dec
pop
add
ficoms
sub
fisubrs
pop
dec
stos
repz
push
lea
call
push
adc
mov
mov
leave
cmp
aam
sub
push
add
into
cmc
out
ds
mov
aaa
daa
lret
push
shlb
push
in
or
mov
loopne
add
push
ficomps
mov
mov
scas
mov
in
repnz
mov
sbb
mov
mov
icebp
adc
xor
adc
xchg
test
pop
mov
xor
sbb
push
cmpl
rolb
cmpb
mov
push
push
adc
xchg
xchg
lods
pop
int
mov
outsb
addl
scas
out
sahf
enter
lret
int3
and
pop
jg
loop
rol
or
jae
adc
iret
mov
jne
xor
into
mov
xor
cmpsb
jl
dec
lcall
mov
lret
and
adc
inc
hlt
lahf
push
sub
test
dec
insb
inc
into
rclb
mov
push
shll
lcall
ds
cmpb
and
ss
cli
inc
pop
in
repnz
ret
ljmp
cmp
out
inc
inc
icebp
mov
pop
push
adc
popf
push
adc
insb
cld
sbb
cmp
inc
es
adc
cmp
adc
jnp
popa
jp
fdivl
sarl
loopne
jb
repz
je
cli
in
ret
mov
shll
sbb
popf
jne
bound
stos
jmp
loopew
mov
sbb
push
sbb
push
inc
mov
ret
icebp
rol
and
pop
mov
dec
jns
xchg
lods
mov
aas
aad
add
dec
iret
out
jg
push
aam
inc
inc
mov
gs
xor
in
cs
cmc
or
out
and
testb
inc
or
xor
cmpsl
pop
dec
dec
adc
sbb
cmpsb
pop
mov
mov
rcpps
pushf
ja
fsts
adc
adc
or
lods
testb
pop
add
pop
lret
mov
mov
add
mov
mov
lret
mov
and
cld
adc
fnsetpm(287
mul
nop
mov
pusha
dec
sbb
movsb
pop
mov
iret
insb
loopne
cmpsl
push
and
inc
add
push
sub
jg
push
sahf
jb
push
mov
scas
fmull
jb
in
lahf
pop
lahf
xlat
and
pusha
dec
pop
fsubs
and
js
ret
jle
mov
test
dec
or
jle
jecxz
xchg
jp
sbb
fcomp
testl
sahf
xor
mov
and
cmp
adc
fcoms
ss
stos
dec
ficompl
xchg
jo
adc
or
pop
pop
dec
mov
inc
jle
hlt
stos
or
add
test
stos
repz
xor
ss
mov
imul
xchg
or
add
jae
sub
outsl
fyl2xp1
mov
jo
in
xor
mov
jno
sti
lret
cltd
movsl
ljmp
aas
rcrl
cwtl
lahf
xor
shrl
out
fs
ds
pop
and
fiaddl
and
dec
mov
add
fs
aam
ret
jns
mov
and
lods
dec
cmp
mov
and
nop
lret
mov
sbb
loopne
push
imul
and
mov
aaa
clc
dec
std
mov
adc
sbb
push
sti
push
addb
xorb
sbb
mov
fistl
in
lcall
xchg
mov
lahf
lods
sbb
pop
sti
xor
mov
sub
mov
imul
mov
and
push
inc
mov
jae
js
xchg
in
outsl
sbb
sarb
push
mov
fistpl
icebp
cmpsl
mov
gs
add
aad
fnclex
aam
testb
mov
loopne
pop
stc
imul
out
sahf
clc
dec
xorb
movsl
xchg
fildl
clc
lcall
jbe
insb
dec
leave
sub
mov
pop
insb
jns
pop
aas
stc
popf
sub
imul
or
outsb
dec
push
push
adc
fcoms
fnstcw
xchg
cmp
stc
inc
outsb
cmp
xor
cmp
mov
sbb
scas
pop
aas
pop
push
mov
or
movsb
inc
or
dec
mov
cltd
or
fcmovnu
mov
pusha
ja
pop
adc
scas
xor
sub
add
orl
xchg
cmpsl
and
ret
jnp
das
xchg
fsubs
orl
lcall
das
bound
in
loop
add
sbb
jmp
xor
imulb
int
mov
adc
lret
sbb
push
imul
iret
mov
xchg
adc
push
ss
cmpb
js
sub
daa
and
adc
sarl
pop
jecxz
and
cwtl
sub
push
dec
mov
lahf
mov
xchg
xchg
xchg
lret
clc
lahf
imul
inc
mov
push
push
rcrb
fistl
imul
das
ret
xor
sub
mov
sbb
int3
or
stos
sub
nop
xchg
xor
sarb
jno
fwait
sbb
in
xchg
adc
test
mov
outsb
arpl
xchg
dec
into
insb
movsl
ja
push
pusha
jnp
imul
xchg
push
inc
sbb
lock
mov
aas
jge
fdivrl
and
inc
inc
jno
fstpt
cwtl
int3
in
mov
repz
sahf
lahf
sub
inc
test
add
out
inc
pop
mov
adc
adc
or
mov
insl
cli
stos
or
call
pushf
mov
dec
mov
enter
and
mov
fsubrl
test
pmaxub
rcrl
dec
dec
push
lcall
loope
or
mov
sub
mov
das
out
sub
stos
bound
imul
hlt
ret
rorl
sahf
xor
daa
pop
push
jecxz
fidivrs
xchg
mov
and
add
cmp
adc
insl
jns
adc
dec
sub
xor
sub
mov
shr
add
popf
js
dec
push
in
xchg
imul
or
mov
or
in
ja
and
sbb
cld
fdivs
cmp
jae
mov
pushf
pop
pop
int
sub
xchg
js
and
sarl
lret
adcb
jge
ljmp
jne
push
stos
dec
xlat
xor
lds
mov
std
or
xchg
les
pavgb
jae
clc
int3
and
mov
jmp
fsubl
cmp
imul
les
cmp
add
dec
cmp
aaa
mov
sbb
aaa
out
mov
leave
sub
mov
jb
and
ja
scas
fsubl
sub
inc
mov
hlt
or
nop
add
mov
fsubr
je
sahf
mov
movsl
lahf
dec
iret
sarl
flds
or
xlat
shlb
jge
test
test
sbb
push
jecxz
xchg
jp
cmp
add
pushf
adc
lret
xchg
cmpsl
push
xchg
fstps
enter
pushf
ss
cmp
cmc
fidivrs
push
pop
call
repz
sbb
jg
sti
inc
dec
pusha
dec
bound
cmp
mov
xor
divb
out
mov
test
mov
dec
mov
aam
out
cli
dec
xchg
xchg
pop
stos
adc
pop
loopne
arpl
shlb
scas
cmp
cld
pop
push
sub
push
adc
sub
mov
jns
dec
popf
test
push
test
push
leave
iret
mov
ja
add
imul
jbe
fnsave
sub
push
xor
insl
push
stos
js
xchg
cmpsl
leave
outsb
and
mov
pusha
mov
add
dec
call
mov
insl
or
in
clc
das
mov
jo
fists
and
mov
jns
inc
or
sub
cmpb
mov
call
sub
in
jl
push
cmpsl
xchg
rcrl
jae
int3
mov
mov
push
jnp
js
shlb
or
pushf
loope
jecxz
test
adcb
jmp
jno
inc
loopne
call
jne
stos
lahf
and
push
aaa
bound
add
sbb
shll
xchg
adc
pop
dec
pusha
js
cmpb
mov
stc
fstpl
popf
test
popl
out
into
in
into
cmp
pop
mov
and
test
scas
push
cmp
jg
mov
ljmp
mov
hlt
xor
aad
ret
mov
fildll
mov
push
inc
sub
lods
jle
cmpsb
push
push
cld
pop
and
mov
adc
mov
pop
repz
and
xor
pusha
test
rcll
jnp
inc
iret
pop
pop
inc
ss
cmpsb
bound
es
fcomp
sahf
cltd
push
inc
aad
jp
jl
out
cli
sub
xor
jp
fs
dec
mov
add
rcrb
sbb
divb
add
aaa
xchg
xor
jecxz
dec
flds
xchg
enter
aam
lods
std
mulb
fldt
es
cltd
xor
jae
jns,pt
pusha
cmp
jle
jnp
dec
mov
fidivl
pop
dec
or
inc
gs
mov
pop
pop
sbb
mov
lds
jge
fadd
adc
push
loop
out
xor
jno
mov
jns
adcb
sbb
or
out
dec
mov
movsb
test
iret
mov
and
fdiv
hlt
pop
push
fistpll
cli
lods
out
dec
int3
xchg
das
imul
imul
lret
jmp
mov
mov
cmpb
loopne
test
xor
stos
stos
push
mov
shrl
movb
xchg
sbbb
std
or
push
pop
lcall
or
sub
mov
mov
xor
les
push
sbb
pop
jbe
cmc
jle
int3
imul
mov
sub
jne
xchg
sbb
ljmp
fstl
mov
push
arpl
mov
mov
add
and
mov
out
or
dec
mov
push
pop
repz
pop
movsb
out
pop
add
sbb
cs
outsb
imul
pushf
xor
jp
lcall
push
xchg
sar
test
imul
fidivs
add
or
bound
aaa
fmull
sub
xor
cwtl
stc
lret
sub
pop
in
mov
daa
dec
pop
sub
scas
aas
jecxz
add
cmp
bound
sub
mov
sub
jecxz
pop
shll
in
dec
cmpsl
std
aas
hlt
mov
clc
xor
dec
fldt
imul
or
sti
add
xor
call
mov
add
sbb
or
cltd
push
in
fisubrl
xor
pop
dec
sub
add
mov
xchg
adc
mov
lahf
adc
inc
jae
lods
cltd
ja
aaa
call
sub
subb
xor
bound
or
cltd
xchg
push
fbstp
mov
or
in
pop
sub
jb
fwait
cmpsb
dec
test
cmpsb
sahf
out
loope
jne
xor
mov
inc
es
aam
hlt
add
mov
scas
fwait
sub
js
mov
mov
std
and
jge
xlat
xor
jle
loopne
pop
imul
jo
bound
xor
pop
xchg
push
and
fsubrp
push
adc
int3
pop
mov
fs
xchg
mov
and
ret
pop
cmpsl
cmp
movsl
xor
loope
inc
dec
lods
pop
movsb
inc
lds
cmpsb
adc
fstpl
inc
inc
std
mov
push
xchg
enter
and
fsts
push
mov
test
test
and
leave
pop
aas
fucomip
fwait
and
bsf
xchg
fisttps
icebp
sti
mov
shlb
adc
jecxz
dec
mov
adc
fs
fwait
pop
sbb
jns
fwait
push
pop
push
hlt
test
bound
or
push
loopne
cmpsl
pop
fstp
sbb
movsl
mov
inc
jb
and
mov
cmp
shll
aas
add
in
addr16
and
and
out
mov
adc
out
js
adc
das
stos
ja
outsb
add
aad
mov
and
cmp
rcll
inc
repz
lret
xchg
enter
mov
pop
cltd
into
lods
out
or
jbe
loop
mov
mov
jmp
loope
mov
out
call
loope
jge
int
xchg
lods
sbb
jb
xchg
aas
cmp
rcrb
sub
push
xor
test
jae
pusha
aam
lods
adc
sbb
sbb
and
cmp
mov
xchg
sarb
cld
mov
lea
push
das
dec
ljmp
ss
rorb
xor
cwtl
test
sub
push
sbb
rcrl
jbe
pop
mov
sub
mov
and
jbe
lods
and
shl
xchg
prefetchwt1
fnstenv
sbb
sub
arpl
jle
jns
mov
push
jp
lock
jne
cmc
push
cwtl
dec
scas
and
pop
adc
xor
inc
mov
std
cltd
pop
mov
xchg
push
imul
testl
mov
jae
xor
pop
adc
lods
in
cmp
fstpt
jno
imul
into
adc
dec
adc
inc
shlb
or
insb
in
mov
sub
aaa
repnz
pop
stc
notb
lcall
stos
jp
mov
stos
addr16
or
dec
in
je
subl
not
aaa
and
jecxz
mov
push
jne
gs
pop
repnz
push
push
fs
push
lcall
daa
and
mov
mov
movl
sub
xor
outsl
inc
sbb
push
mov
inc
dec
inc
int
incb
mov
lret
sahf
mov
movsb
int3
mov
and
push
xchg
in
cmp
jae
arpl
mov
inc
sub
lds
and
cmpl
mov
sbb
jbe
adc
lods
out
test
out
repnz
mov
xchg
mov
incb
add
cltd
jmp
pop
jae
in
adc
loope
cmp
inc
xchg
mov
popf
mov
jl
pop
and
scas
popf
sti
stc
dec
out
dec
popf
cmpb
jl
loopne
mov
imul
inc
int3
mov
adc
lock
in
fiaddl
mov
dec
xchg
gs
fdivl
jp
je
xor
dec
bound
sar
xchg
lods
les
cltd
out
subb
or
mov
fistl
push
push
ja
sbb
inc
lods
shr
xor
out
xor
inc
call
xlat
out
in
nop
push
push
xor
push
repnz
ret
dec
scas
and
dec
js
dec
mov
sarb
and
stos
pop
imul
imul
mov
adcb
xor
ret
in
pop
dec
xchg
dec
dec
sbb
mov
sub
rol
popa
inc
ret
call
mov
lods
mov
and
jno
xchg
mov
daa
xchg
ljmp
mov
cmpsl
dec
je
pop
stos
ret
outsl
push
fwait
add
mov
sbb
inc
sahf
add
int3
in
clc
mov
and
sub
cmp
sbbl
pop
enter
adc
mov
aas
add
add
inc
enter
stc
clc
inc
icebp
cmp
mov
xchg
xchg
mov
mov
jmp
std
jnp
cmc
push
outsl
jmp
sahf
fisttpl
xchg
cmp
push
or
fcmove
divl
or
lret
mov
imul
out
icebp
inc
jnp
lahf
mov
mov
gs
push
xor
mov
dec
cmp
jnp
scas
jno
jp
rorl
test
iret
pop
movsl
shrl
jns
push
adc
xor
jb
jnp
dec
mov
sub
and
inc
ret
inc
xlat
pop
js
mov
jp
jle
inc
lret
fwait
test
cmc
mov
push
xchg
inc
lock
and
push
pop
ja
cmpsb
sub
imulb
daa
push
into
mov
mov
leave
int
add
add
push
pop
sbb
shrl
rorb
adc
stos
fldl2e
inc
fcomps
popf
and
mov
aaa
cld
mov
imul
xor
add
jno
call
jno
inc
cmp
dec
mov
xor
dec
xchg
ds
daa
fdivl
icebp
add
inc
push
out
insb
aam
lcall
jbe
push
push
xchg
bound
cmpsl
enter
pop
fldcw
mov
mov
dec
mov
mov
outsl
xchg
xchg
jecxz
jb
push
sub
xlat
in
add
mov
test
ret
leave
mov
xchg
dec
je
mov
mov
xchg
dec
mov
cmpsb
dec
imul
pop
ret
mov
lods
hlt
inc
xchg
sbb
cmp
sti
in
icebp
cmpsl
cltd
fdivl
push
sarl
dec
adc
push
sbb
inc
xchg
fwait
mov
out
jae
inc
cmp
lea
xor
dec
cld
push
scas
les
add
jns
in
jb
loopne
test
pop
inc
jp
je
add
aam
inc
sbbb
and
inc
mov
push
mov
mov
insl
jns
out
mov
jmp
pop
lods
sbb
push
enter
or
lea
or
add
sub
push
out
testb
enter
pop
add
adc
cmp
jecxz
mov
leave
in
xchg
xorl
out
cmp
jmp
cmp
push
or
xlat
in
inc
mov
aaa
dec
pop
mov
xchg
repz
cmp
and
in
add
mov
push
mov
cmp
stos
mov
fdivrp
popf
xchg
and
mov
adc
push
mov
xchg
stos
jb
push
adc
xor
in
scas
inc
fwait
outsl
ret
cmp
inc
adc
add
add
xor
push
pop
cltd
or
push
inc
fisubrs
jns
pop
push
cli
sbb
jbe
call
cld
mov
mov
movsb
movsl
xor
test
pop
push
out
sub
decl
ds
call
out
addl
scas
out
outsb
icebp
xor
or
or
add
shl
in
sbb
jecxz
movsb
imul
add
adc
and
cltd
add
cmp
mov
insl
inc
in
shrl
bnd
out
mov
mov
je
lret
cmp
and
pushf
add
and
jecxz
add
lock
sub
push
test
pop
pop
in
jle
inc
push
ljmp
fdivrl
push
stos
sub
and
shlb
dec
jo
loope
aam
rorl
jle
cltd
dec
and
sbb
mov
cltd
in
ret
inc
sub
andb
ret
fstpl
call
imul
iret
jne
and
xchg
push
pop
aam
lock
push
insb
sub
cmp
sbb
mov
jmp
stos
cmp
sahf
mul
js
and
mov
push
dec
call
bnd
fildll
std
or
mov
leave
loope
movsl
xchg
xchg
sub
jg
testb
xchg
xchg
fstp
lods
leave
fildl
jl
call
or
pop
lcall
ret
dec
in
jnp
data16
adc
cmpsb
vpaddsb
adc
sub
adc
ss
xchg
leave
into
adc
push
mov
loope
fs
ret
adc
pusha
rcll
xchg
push
jno
inc
jp
jb
xor
push
out
cmc
xchg
mov
frstor
cmp
inc
sbb
dec
pop
inc
scas
jb
add
fimull
rcrl
sarl
mov
dec
sbb
test
lds
mov
mov
or
pop
or
xor
jmp
adc
ret
xorb
jnp
and
push
add
cmp
mov
xchg
sbb
pushf
shr
insl
lahf
jno
clc
push
jnp
xor
push
inc
xchg
out
in
jnp
jg
add
mov
xor
aaa
mov
push
push
mov
imul
dec
xchg
sub
mov
test
loope
push
std
adc
pop
pop
adc
push
jae
imul
pop
hlt
out
jo
cwtl
shll
lods
dec
adc
sti
mov
cmpb
jge
sbb
sub
dec
dec
adc
mov
inc
and
imul
les
fmull
sahf
lret
pop
add
cmp
pop
bound
jmp
push
dec
mov
loope
imull
xor
ficomps
xor
cmp
mov
mulb
jmp
dec
in
cmp
mov
xor
imul
data16
pop
jmp
lret
addr16
subb
dec
cmc
adc
push
push
jmp
xor
mov
sub
add
pop
aad
mov
adc
inc
pop
ja
cmp
imul
lds
call
stos
repnz
sar
xchg
dec
push
pushf
pop
test
or
loope
xor
or
push
je
stc
sbb
fmuls
mov
cltd
in
andb
or
notb
rol
sbb
dec
mov
idivb
ffree
push
xchg
sub
mov
mov
testb
sbb
iret
hlt
push
rorb
lods
daa
mov
out
pop
mov
xor
rorl
aas
sbb
insb
movsl
bound
shlb
in
into
cmpb
scas
mov
push
ja
xor
lods
popw
ja
push
lock
jecxz
push
add
adc
sbb
out
cltd
fidivrs
or
mov
jl
mov
jp
addr16
mov
divb
scas
imul
ss
into
repz
imul
inc
xlat
or
xchg
push
push
push
jle
dec
aam
aaa
dec
pop
add
ljmp
mov
or
in
stos
inc
ljmp
bound
dec
push
dec
inc
add
cmpl
xchg
je
mov
add
pop
addb
lret
inc
sbb
rolb
test
push
jecxz
adc
sbbl
jbe
stc
test
aad
arpl
movsl
and
push
call
movsb
stos
fbld
lds
je
int3
fsubp
sbb
rcll
movsb
pop
cmc
cli
xchg
lret
inc
xor
push
sbb
sti
fildl
loop
fnstenv
subl
push
mov
cmp
mov
mov
scas
mov
adc
test
pop
mov
test
xchg
push
xor
mov
sub
inc
xor
icebp
mov
cli
inc
xchg
and
lea
movsb
mov
out
sub
push
hlt
adc
imul
shrl
enter
sub
cmp
addr16
roll
xchg
sub
pop
and
cmc
mov
mov
cmp
add
sbb
pop
ret
cmc
mov
inc
inc
add
jl
push
orb
lds
jmp
ficoms
jb
fsubrs
lcall
sub
cmp
mul
mov
out
hlt
pusha
popa
xor
fldcw
sahf
xor
flds
push
xchg
mov
arpl
adc
mov
pop
das
cmp
cwtl
ja
incl
std
jmp
pop
sbb
in
aad
xor
ljmp
cmp
cmp
loopne
stc
xor
push
push
cltd
leave
add
dec
lea
xchg
inc
or
nop
rorb
mov
aaa
scas
sbb
ror
fstpt
cmp
sbb
mov
adc
imul
popa
aad
xchg
inc
or
adc
push
mov
sar
cmp
inc
filds
leave
push
jae
push
inc
inc
add
adc
xor
cs
shll
sbb
sbb
and
cmpsl
outsb
cmp
inc
mov
jl
sbb
pusha
lea
adc
stos
stc
dec
aas
mov
les
aam
push
daa
xlat
ret
or
mov
nop
out
mov
or
sbb
xchg
arpl
or
mov
pushl
hlt
add
add
decb
movl
int
loope
mov
mull
out
add
cmp
inc
int
dec
dec
in
mov
movsl
test
ds
mov
inc
outsb
sbb
cmp
mov
hlt
jns
dec
add
adc
xor
pop
loop
sub
xchg
mov
pop
in
imul
gs
pop
loope
mov
aad
lahf
mov
in
js
rol
mov
je
inc
cld
dec
imul
sbb
mov
jmp
jmp
sarb
sub
mov
dec
xor
imul
outsb
jnp
fildl
sbb
xchg
xor
int3
mov
xchg
int
mov
dec
outsb
mov
xor
or
cld
or
cmp
sbbl
lret
lods
aam
mov
mov
inc
fst
xchg
lret
mov
xor
and
xchg
mov
pop
mov
roll
ret
and
hlt
cld
jae
sub
cmpsb
adc
std
or
clc
call
pop
negb
ret
xor
call
sub
jno
pop
sub
lods
fadds
mov
cmp
push
clc
pop
dec
jbe
or
sahf
sbb
cld
sub
xor
dec
rcll
repz
mov
in
xchg
xor
sti
data16
push
dec
lret
and
popf
bound
pop
jp
hlt
pusha
cld
xchg
scas
jge
cmp
adc
pop
stos
xor
add
sahf
loop
fidivs
addl
jle
and
in
xchg
sti
mov
cmp
loope
mov
nop
pusha
frstor
andl
pop
int
bound
sub
mov
push
enter
fisttpl
out
cmp
mov
or
dec
xchg
into
shrb
popa
and
xor
stos
ret
inc
jmp
aad
mov
stos
xchg
rcrb
test
repnz
mov
popa
pop
push
fstl
lds
imul
fmuls
xor
stos
and
adc
es
mov
mov
incb
adc
push
jnp
cmp
xor
pop
mov
push
or
mov
push
pushf
mov
push
dec
das
jmp
jae
fiadds
sbb
imul
fisubrl
xor
jnp
jnp
or
push
and
xor
insl
dec
pop
sbb
jbe
mov
insb
subl
aas
xchg
cmpsl
stos
add
es
aas
mov
adc
cmp
ret
clc
push
pushf
pop
das
or
fildl
mov
mov
pop
stc
dec
scas
mov
js
stos
inc
sbb
stos
cltd
mov
popf
mov
mov
add
dec
mov
sub
mov
inc
sbb
xchg
xchg
rorl
sbb
enter
and
lock
cmpsl
imul
sbb
cwtl
mov
adc
pop
xchg
jge
add
mov
adcb
sbb
xchg
add
ja
inc
xchg
fimuls
outsl
shlb
popa
adc
sub
cs
xor
xlat
scas
pop
mov
dec
addl
lock
push
loopne
leave
inc
ja
movsb
cmpsl
sti
jnp
jno
mov
ja
rcr
imul
jg
jo
into
sahf
ret
push
xchg
dec
jo
jg
xor
daa
mov
cltd
filds
adc
lret
into
or
addl
and
clc
adc
jl
inc
fstpt
cmp
dec
and
jnp
fdivl
test
xchg
push
aam
mov
adc
mov
fistps
or
and
or
push
lock
repnz
mov
inc
xchg
lds
adc
push
mov
jge
clc
or
and
jle
jp
cmp
cltd
test
jp
in
in
jmp
mov
loopne,pn
add
mov
xchg
pop
jo
daa
gs
mov
sbb
popa
jge
or
lds
and
gs
shr
sub
jb
fstl
or
movsb
sub
mov
in
xchg
test
ret
cmpsb
cmc
inc
inc
xor
popa
dec
div
out
in
jmp
lret
push
outsb
jge
jno
shlb
addr16
inc
scas
mov
ret
je
test
jg
rcll
sub
cmp
adc
jge
repz
insb
jg
stos
sub
mov
in
cld
sti
xchg
ds
pop
outsl
cmpsb
jo
fbstp
leave
insb
call
std
std
stos
mov
sti
lret
xor
pop
adc
sbbb
sub
mov
xchg
outsl
rcl
mov
imul
xchg
daa
xor
jae
pop
movq
lods
out
mov
jb
stc
inc
outsb
add
cli
add
fisubrs
les
push
aam
stc
xor
inc
mov
sub
fimull
lcall
sbb
mov
cmp
loope
mov
imul
lahf
jl
sub
push
lods
mov
and
adc
out
in
push
xchg
or
cld
in
aad
inc
push
mov
loope
arpl
decl
add
mov
popa
jne
test
in
push
jmp
les
jmp
aaa
imul
ja
fidivs
popf
arpl
lods
mov
in
jae
loopne
jmp
iret
in
mov
inc
enter
push
dec
pop
in
sub
xchg
mov
jmp
ja
push
push
cltd
stos
out
dec
dec
lahf
in
xor
mov
pop
aaa
push
scas
ja
mov
xlat
push
leave
xchg
fisttpll
mov
mov
push
bound
mov
mov
lahf
inc
xchg
mov
push
mov
sbb
sub
in
inc
in
push
push
movsl
sub
sbb
jb
jne
pushf
es
movsb
inc
add
fwait
and
pusha
pop
jo
loop
pop
sbb
pop
or
lret
xchg
adc
ret
cwtl
push
mov
pop
mov
xlat
jge
adc
outsb
dec
inc
sbb
mov
movsl
enter
cwtl
fbld
jecxz
or
scas
xchg
inc
mov
dec
mov
xorl
ds
xchg
push
cmp
sahf
lcall
push
push
pop
test
hlt
mov
and
out
add
fcomps
outsl
test
adc
clc
or
jnp
mov
sbbb
xchg
fs
loop
xchg
in
sbbl
xchg
mov
sub
in
imul
inc
std
push
aad
xchg
cmp
cmp
out
aas
mov
movsl
imul
xor
dec
sub
rol
pop
sbb
mov
jae
push
out
jo
outsb
sbb
addr16
sub
cmp
out
cwtl
and
mov
bound
jnp
add
pushf
in
rcr
push
ret
pop
dec
mov
pop
andb
repz
pusha
inc
sbb
jne
pop
mov
jbe
pop
mov
adcl
add
cld
cmpsl
lret
jg
jg
lods
sarl
adcl
xor
repz
sahf
or
test
into
in
pusha
movsl
rorl
inc
cmc
and
int3
cmpsb
jl
scas
inc
mov
loop
aaa
fsubrs
addr16
jl
popf
push
or
cli
pop
out
pop
in
adc
push
add
outsl
shrb
xchg
mov
pusha
and
xor
loope
pusha
or
cmp
dec
movsl
fdivs
dec
cmp
mov
adc
test
pop
daa
xchg
jl
insl
ret
xlat
push
xor
mov
push
andb
lods
pop
mov
mov
mov
cmp
add
and
test
pop
mov
sub
cmpb
sub
arpl
lcall
inc
in
roll
mov
out
outsl
dec
fidivrl
dec
in
xorb
insb
xor
in
cmp
outsb
mov
fsubl
xchg
cltd
ret
mov
push
nop
cmpsl
mov
and
pop
stc
stc
sub
cmpsl
imul
add
pop
mov
mov
mov
xchg
stc
loop
push
ja
adcl
lahf
ljmp
inc
dec
cli
repz
push
mov
xchg
mov
cmp
popf
jle
je
mov
dec
jo
int3
mov
push
and
lea
and
inc
push
je
sub
aad
inc
pop
cmp
mov
pop
and
sbb
cmp
adc
push
sub
fs
add
pop
rcl
popf
fnstcw
loop
ss
ljmp
and
push
xor
inc
add
pop
icebp
mov
inc
cltd
push
jno
push
ss
cmp
es
jo
mov
movsb
jo
cmp
lret
lock
aad
data16
jbe
xor
test
push
movsl
push
push
aad
adc
call
pop
rol
xor
ss
outsl
cmp
dec
push
or
lods
inc
jmp
mov
fucom
jbe
icebp
pop
imul
mov
mov
xchg
jle
sti
popf
call
inc
test
jecxz
sti
cwtl
iret
push
imul
mov
scas
pop
nop
jb
jmp
jbe,pn
cli
push
jge
movsl
jmp
cwtl
fists
loope
dec
sbb
fwait
sbb
mov
jns
les
call
xchg
les
enter
and
mov
cld
mov
lret
cmpb
mov
xor
shlb
adc
jmp
fcmove
iret
mov
out
ja
insl
inc
add
xchg
test
pop
sahf
stos
xchg
cmp
mov
in
inc
jno
pop
add
je
pop
fcmove
cmpsb
push
sub
xchg
mov
lcall
push
loopne
inc
hlt
pop
add
lret
jmp
dec
std
cwtl
and
mov
ret
add
rolb
test
mov
pop
mov
cmp
xchg
add
jo
lds
xchg
rcll
es
outsl
xor
in
rcrl
pop
add
push
mov
aaa
test
sub
dec
or
mov
cmpsb
out
or
flds
mov
addl
lods
pop
test
aas
cmp
mov
addr16
callw
sarl
shlb
out
fs
insl
cli
int
pusha
adc
notb
push
sbb
jno
loope
sub
call
imul
and
fimull
mov
pop
fldenv
dec
imul
sbb
xchg
or
mov
ficoms
cmp
ss
sbb
sbb
mul
in
xor
into
mov
adc
add
sub
std
stos
pop
std
mov
ja
jge
add
xchg
mov
mov
inc
jge
sbb
mov
pop
and
push
sbb
ret
cmpsl
lods
sbb
adc
pop
fists
cli
add
fsubs
int
mov
cltd
fistl
inc
bound
cmp
enter
add
jno
and
mov
inc
adc
cs
pop
sbbl
cmp
mov
enter
pop
les
popa
jbe
cmc
mov
jecxz
imul
test
jb
jne
inc
adc
jl
lahf
mov
sahf
mov
ss
pop
jb
push
repz
sbb
adc
in
loope
sub
pop
mov
xor
pop
mov
cmp
mov
jle
movsb
push
cmpsl
mov
xchg
jp
jb
dec
imul
jns
ljmp
enter
pop
gs
xor
adc
xchg
pop
mov
lods
mov
cld
push
enter
arpl
dec
popf
or
add
movsb
out
repz
aam
lods
pop
mov
mov
int3
shll
dec
push
mov
pop
test
ficomps
mov
movsl
sub
mov
sbb
sub
loop
mov
adc
inc
xlat
les
pop
jl
xchg
inc
mov
and
inc
cwtl
wbinvd
cld
clc
sbb
sub
sti
mov
out
divl
xlat
rcrl
push
xchg
adc
cld
xchg
pop
push
cli
shll
push
add
sar
mov
adc
fbstp
aam
cmc
dec
inc
cmp
adc
jmp
dec
aas
out
call
icebp
aad
out
mov
sti
fildl
sbb
nop
aad
jbe
push
aam
push
shlb
test
clc
cmp
mov
jb
data16
out
pop
push
jmp
fimull
jae
pop
cmp
jmp
fcoml
popf
fistps
xchg
dec
sahf
jmp
sbbl
pop
mov
outsb
push
cmc
add
push
test
mov
lea
or
in
stos
fsubrl
and
or
fdivrs
lea
mov
mov
pop
fs
test
or
insb
mov
push
mov
dec
sahf
aaa
sbb
pusha
jge
out
dec
jge
call
mov
test
int
jecxz
daa
test
leave
add
rcl
cmp
jecxz
xchg
or
sub
xchg
push
icebp
or
pop
add
add
jb
pop
xorl
or
aam
push
pop
mov
adc
sbb
pop
lahf
leave
xchg
rcll
sbb
aaa
adc
imul
fwait
rcl
fwait
sub
cmc
ss
inc
fwait
pop
push
or
imul
sub
push
xchg
stc
in
jne
clc
sbb
ds
out
movsl
xchg
pop
mov
paddusw
into
mov
dec
mov
sbb
vpshab
scas
xchg
cmp
mov
add
stc
mov
adc
out
sub
int
out
imul
out
out
clc
or
int3
inc
mov
popa
mov
xchg
pop
jno
push
bound
sbb
addr16
pop
mov
inc
aas
call
ljmp
inc
jne
mov
mov
fcom
sub
aas
stos
fsts
pop
mov
or
push
pop
lahf
cmc
xchg
xchg
cltd
int
popa
mov
mov
orb
and
out
pop
fldt
sbb
in
movsb
insl
add
xor
scas
xchg
adc
imul
fucomp
add
pop
mov
adc
push
cmp
adc
shrl
pop
cltd
mov
xor
sbb
mov
sub
jle
mov
inc
call
xor
subl
push
sarb
cmpsb
ret
into
add
mov
mov
not
sti
mov
add
xlat
sub
xor
and
cmp
aaa
pop
loop
iret
add
imul
filds
dec
or
int3
or
cmp
push
fistl
xlat
push
fisttpl
lcall
ret
inc
scas
push
inc
sti
pop
mov
popl
iret
xlat
ja
stos
imul
mov
inc
cmp
out
ret
mov
loope
idivb
pop
shl
pop
jle
outsb
pop
pop
mov
push
ss
add
lea
ret
repz
xchg
push
popf
push
sysenter
jmp
add
xor
mov
adc
adc
adc
and
mov
repnz
out
push
pop
daa
dec
fsubs
sub
stos
jecxz
ljmp
mov
xchg
sub
pusha
push
gs
xor
pop
lods
in
mov
sbb
or
sbb
mov
std
inc
sbb
and
scas
frstpm(287
sub
xlat
fistpll
ret
in
push
popa
sub
or
xchg
mov
or
dec
sbb
movsl
jmp
xor
nop
ja
ljmp
dec
loope
xchg
and
rorb
lahf
inc
fwait
data16
ret
leave
cwtl
add
cmp
mov
jl
inc
sbbl
pop
ljmp
lcall
leave
push
pusha
sub
xchg
mov
cmp
clc
add
xchg
push
in
sub
sbb
pop
pusha
inc
popa
leave
bswap
pop
cmpsl
les
ja
outsl
push
mov
sar
clc
push
jl
outsb
jb
shlb
xor
popf
mov
inc
mov
xchg
idiv
incb
enter
sbb
mov
push
xchg
jmp
xor
shlb
ljmp
push
scas
pop
icebp
lds
mov
mov
js
mov
cli
mov
lods
push
xor
repnz
in
aad
xchg
xchg
push
jns
push
fisttpl
scas
movsb
test
cli
repz
cld
xor
mov
mov
ficomps
push
mov
cs
scas
gs
ja
mov
jle
pop
push
imul
cmpsb
in
adc
call
sub
sarb
jo
jne
mov
dec
in
rorb
inc
adc
pusha
sbb
cmp
or
insb
mov
shrb
sbb
jne
aas
and
sbb
mov
in
sbb
cltd
popa
loop
mov
stos
dec
mov
jmp
add
ret
and
outsl
jl
sub
testl
sbb
add
rolb
sbb
jle
pop
adc
popf
iret
shr
xchg
sti
pushf
sub
xchg
push
adc
sbb
in
mov
dec
and
add
fldcw
sbb
stos
push
inc
xchg
push
shll
push
scas
mov
cmp
push
push
mov
adc
push
fidivl
mov
iret
inc
clc
test
or
mov
ds
adc
fisubrl
dec
dec
pusha
sbb
inc
adc
daa
inc
fmuls
cmp
xchg
jecxz
fdivr
xchg
pop
adc
dec
mov
dec
scas
call
inc
cld
jns
lahf
daa
cmp
inc
sbb
inc
aaa
fs
stc
repnz
test
xlat
xchg
loope
loop
test
sub
xor
bound
jl
dec
mov
ret
dec
inc
je
push
popa
enter
mov
popf
lahf
les
sahf
push
or
inc
scas
inc
pop
orl
sbb
mov
loope
lret
xor
out
jge
movsb
xor
pop
push
adc
adc
xor
test
mov
xchg
sub
sbb
cmpsl
pop
pop
jae
shlb
jp
mov
mov
dec
adc
enter
scas
add
aas
iret
arpl
iret
push
imul
cmpsb
sarl
add
popf
mov
iret
dec
outsl
mov
or
push
mov
pop
jns
mov
jge
jno
pop
in
adc
mov
stos
js
popf
jp
arpl
xor
ficoml
xor
cltd
gs
arpl
dec
pop
sbb
push
jl
sub
setl
in
sbb
aas
ds
jle
aas
leave
pop
inc
imull
dec
jmp
pop
or
lahf
cmp
loope
or
aad
ja
outsb
je
fldenv
sbb
and
cmc
iret
int
and
fsubrs
pop
xor
jmp
movntps
scas
jecxz
scas
repnz
rorb
ljmp
insb
test
xchg
xchg
inc
jg
test
aaa
jnp
lret
fwait
loopne
adc
push
xchg
vpmullw
nop
mov
mov
shlb
dec
push
inc
aad
sbb
test
push
jecxz
cmp
pop
ret
out
or
clc
and
push
mov
test
lret
inc
mov
adc
pop
mov
nop
ds
aad
std
push
mov
inc
loopne
lahf
and
test
ljmp
cs
jb
jg
fxch
push
ret
jnp
adc
cmc
sub
push
aas
mov
nop
dec
insb
orb
pop
js
dec
inc
adc
xor
sbb
xor
int3
lret
xor
aad
xchg
in
stos
xchg
nop
pop
ljmp
xor
fstl
inc
sar
movsb
adc
mov
mov
or
dec
cmc
sbb
sbb
js
add
dec
int
or
js
out
xlat
adc
xor
xorl
in
mov
dec
xor
push
hlt
add
jmp
test
mov
ja
mov
lock
fisubrs
andl
jae
push
jg
adc
call
mov
dec
push
push
outsl
push
inc
xchg
push
fadd
aas
je
fadds
out
out
or
and
cmc
out
push
repz
enter
mov
inc
movsl
dec
inc
inc
sbb
dec
xor
daa
xchg
pusha
xor
xchg
js
xchg
arpl
repz
and
add
and
sbb
ret
mov
cmp
pop
pop
ljmp
nop
adc
mov
mov
insb
rorb
push
lcall
arpl
jo
aad
fstpl
pop
jp
mov
in
push
jno
mov
mov
jg
mov
pop
loope
xchg
les
out
loope
jl
call
in
pop
adc
pop
insl
je
mov
outsb
mov
andb
ds
pop
clc
push
cltd
pop
or
and
es
fs
lods
inc
lahf
cmp
cltd
jb
mov
sbbl
fwait
test
sub
and
push
ficomps
test
cmp
aam
xchg
pushf
pop
out
in
and
push
jmp
test
cwtl
mov
sbb
repz
sub
arpl
aad
lahf
jnp
add
in
pop
pop
adc
mov
in
aam
inc
je
and
sbb
sbb
cmc
adc
movl
inc
sub
int3
xor
mov
and
loopne
and
ljmp
push
lcall
cmpb
movsl
daa
pop
xchg
into
xor
lret
test
mov
int
push
iret
out
inc
movsb
test
pop
push
adc
jmp
push
imul
fwait
mov
gs
orl
aas
push
inc
leave
stos
push
aas
mov
mov
cmp
or
mov
sub
sub
and
jle
dec
iret
ret
aaa
mov
push
mov
cmp
lret
sub
push
js
insb
hlt
jmp
xchg
xchg
rolb
sbb
pop
shlb
push
into
mov
xorb
sarb
inc
mov
mov
rcrl
sub
lock
pop
stos
shll
js
mov
and
loope
cmc
sbb
mov
xchg
movsl
orl
repnz
or
dec
test
insb
out
aaa
push
dec
adc
movsl
out
cmp
js
in
cmp
jmp
mov
sbb
fisttps
push
dec
mov
jbe
addr16
jae
jo
scas
pop
andb
dec
pop
mov
dec
xor
pop
scas
sahf
add
cmpb
or
inc
lret
xor
test
jne
pop
xchg
adc
sbb
jl
pop
dec
xchg
loop
and
xor
push
scas
jge
adc
pop
out
xor
mov
sub
push
fdivp
fimull
mov
jmp
jnp
sub
aad
push
fbstp
jecxz
adc
mov
xchg
sbb
cmpsb
fnstenv
addl
sarb
pop
out
je
pushf
ja
fimull
fdivrs
sub
mov
les
mov
leave
mov
dec
pop
mov
das
fadds
movsl
sbb
jp
nop
xchg
fadds
es
gs
ficomps
add
loopne
icebp
sbb
add
mov
lret
mov
push
bound
stos
add
rcl
jecxz
push
mov
insb
outsl
outsb
cld
imul
cmc
push
es
and
and
fistpll
testl
sti
pushf
cltd
mov
subb
mov
mov
int
dec
push
jg
xchg
mov
jo,pt
pop
mov
es
and
or
cmp
and
adc
ret
addr16
insl
aaa
mov
out
hlt
sti
xorb
into
mov
fcmove
imul
sbb
fiadds
sub
fnstsw
pop
test
mov
in
or
mov
or
mov
pop
sub
push
jle
scas
jo
clc
adc
loope
ret
movsb
dec
push
cmpl
loop
sbb
sbb
adc
jb
pop
xchg
sub
scas
mov
xchg
iret
sub
xor
bound
into
pop
rolb
xor
cmp
sub
mov
jmp
sti
movsl
sarb
imul
fcomps
cmpsb
mov
fsub
pop
fcoml
lret
ds
test
shrb
aad
pop
in
bound
cmp
pop
out
cmc
adc
pop
pop
inc
xchg
jle
xor
dec
xor
lods
insl
adc
cltd
xchg
cmp
popl
dec
pop
jg
movsl
cld
and
out
jnp
push
sbb
out
mov
sar
add
iret
pop
into
sbb
mov
cmpb
lods
aam
stos
int
sub
cwtl
jno
mov
xor
test
pop
fwait
lea
mov
daa
xor
stos
cltd
pop
fstps
push
loop
fadds
push
or
push
sub
sbb
dec
jbe
outsl
mov
sbb
mov
dec
mov
fwait
cmp
add
cli
lods
fcmovb
inc
jo
push
sub
movsb
mov
cltd
gs
js
dec
add
es
int3
in
sbb
adc
xor
inc
dec
or
push
or
movl
or
lahf
inc
bound
pop
jecxz
add
std
xchg
loopne
push
add
cli
xchg
xor
sub
clc
enter
scas
ss
push
in
cmpl
ja
cmp
outsl
pop
les
xor
or
ret
add
in
sub
jo
jb
sbb
pop
imulb
inc
rorl
pop
jns
popa
loop
fbld
mov
sbb
inc
lahf
mov
mov
lret
test
scas
and
imul
hlt
repz
addr16
mov
xchg
adc
sti
lock
push
insl
cmc
repnz
jecxz
cltd
clts
lods
xchg
rcrl
arpl
pop
sbbl
dec
inc
push
xchg
scas
pop
cmpsb
out
imul
aaa
adc
lahf
js
mov
push
inc
test
aaa
int
add
std
jg
test
and
testl
add
mov
cmp
pop
mov
dec
mov
test
loope
or
push
je
jle
mov
daa
mov
xchg
insl
mov
ret
mov
adc
xchg
popf
subb
rcrl
sbb
push
inc
sub
mov
or
jg
mov
dec
jmp
xchg
icebp
and
fildl
inc
ss
xchg
mov
dec
mov
inc
add
pop
dec
jb
cmp
pusha
stc
iret
std
pop
add
out
jb
aad
mov
imul
mov
xor
insb
lcall
push
dec
ljmp
stc
roll
lods
push
test
push
aad
insb
cmp
pop
outsb
jns
sbb
fisttpl
add
xchg
call
mov
push
add
lods
loopne
push
clc
cmp
sub
inc
xchg
mov
outsb
mov
mov
int3
add
aad
pop
or
and
mov
es
inc
mov
adc
push
pop
mov
lods
pop
xchg
or
das
cmp
xor
dec
popf
bound
or
es
mov
and
enter
sub
and
in
clc
les
leave
movsb
aam
ret
jl
inc
repz
add
push
repz
into
add
mov
clc
cs
rclb
push
shl
push
outsb
or
lcall
mov
fisttps
loop
sub
sub
sarl
sbb
push
pop
adcl
shrb
scas
enter
dec
test
in
inc
fistpl
inc
xrelease
sub
xchg
and
xchg
sbb
sub
add
mov
inc
mov
inc
or
das
cmpl
repnz
mov
mov
xchg
scas
jmp
jbe
jecxz
fstpl
lods
push
inc
inc
mov
mov
or
in
scas
lods
jae
nop
enter
add
aam
push
add
icebp
arpl
sub
or
mov
push
mov
jmp
adcb
pop
cmc
aam
jl
imulb
sbb
cld
xor
lods
andb
sbb
pop
clc
jb
test
jne
push
jecxz
adc
jnp
add
aad
dec
ret
push
sbb
cli
sub
inc
jle
jnp
mov
test
clc
push
add
dec
mov
outsb
sub
mov
jmp
and
sbb
jge
mov
push
mov
cli
mov
xchg
in
mov
sub
sahf
mov
mov
jae
inc
frstor
jnp
dec
rolb
sahf
mov
pusha
adc
push
cmp
push
pop
movsb
mov
lods
sub
ret
sbb
pop
fldt
mov
mov
xchg
cmpsl
lret
xchg
push
xor
adc
jne
inc
jp
jae
out
repnz
push
push
mov
jne
xor
insb
sbb
and
cwtl
kxnorb
inc
fs
shrl
addr16
stos
and
ds
and
jle
pop
ret
jae
stos
xchg
in
subb
std
lds
test
sub
cwtl
flds
sti
xchg
sub
mov
es
adc
aaa
inc
fiadds
jnp
jae
jo
inc
fistpl
aaa
jb
push
xchg
cmp
mov
fwait
add
adcb
in
pop
sbb
loope
add
pop
mov
repnz
cmp
jne
in
lods
call
sub
outsl
sti
jl
inc
xchg
dec
das
es
je
sub
cmp
popa
hlt
jns
mov
sbb
stc
pop
pop
sub
mov
shlb
mov
popl
movsb
and
jle
jb
mov
outsl
and
push
dec
dec
mov
stc
mov
xor
add
scas
push
mov
dec
inc
scas
inc
cmp
xor
loop
adc
and
sbb
jo
ja
movsb
adc
sub
dec
clc
cltd
popf
cltd
mov
dec
dec
in
out
xchg
pop
and
loop
jmp
andb
inc
mov
sub
add
in
inc
adc
push
in
mov
mov
cmc
sub
dec
ljmp
jb
in
icebp
sahf
push
sbb
jnp
aam
testb
idiv
les
pusha
adc
mov
or
fstps
pop
in
ss
xchg
push
lahf
stos
lahf
cmp
das
xor
mov
fildll
insl
cmc
subl
fs
sbbb
rcrb
lahf
mov
mov
into
add
adc
popf
sbb
mov
pop
test
addr16
or
and
cltd
jle
lock
adc
inc
cld
jns
push
sahf
js
push
lods
fsubr
shrb
sbb
push
cmp
jp
mov
and
inc
int3
mov
inc
movsl
call
mov
jae
push
mov
push
bound
or
jo
andb
lret
ss
mov
and
test
pop
mov
push
lcall
fcompl
std
adc
pusha
popa
loopne
sub
lret
test
mull
and
jg
push
xchg
mov
jge
xchg
sbb
lcallw
inc
mov
dec
adc
fstpt
jmp
jae
cs
lret
rolb
cmpsb
jl
andb
pop
sub
xchg
mov
ss
ds
add
jbe
push
pusha
pop
cmp
add
mov
in
cmpsb
or
push
xor
sub
test
mov
imul
sub
push
fsubr
pop
mov
test
fldl
or
jb
fisubrs
pop
dec
stos
pop
add
sub
fisttps
lret
pop
cwtl
add
sub
mov
adc
sub
pop
adc
sbbb
jmp
and
sub
inc
repz
adc
rolb
cltd
inc
nop
pop
mov
test
and
aam
outsb
adc
insb
fldt
cmp
jb
lahf
les
adc
mov
push
dec
lock
loop
nop
pop
adc
push
ljmp
loop
fldenv
mov
inc
into
cmp
cmp
popa
pop
je
or
loope
sub
and
and
mov
div
outsb
mov
sbb
out
mov
mov
fwait
push
jbe
or
mov
stos
mov
popf
divb
roll
in
jl
inc
int3
mov
dec
stos
pop
cmp
cs
fildll
inc
push
jns
cmpsl
pop
cli
pop
adc
bound
scas
push
xchg
imul
fisubs
mov
mov
mov
lds
lock
jb
and
shrb
push
or
add
jg
push
loop
dec
xchg
mov
and
sti
xchg
dec
test
test
xchg
mov
xchg
dec
adc
scas
rcll
and
leave
or
sbb
push
push
push
xchg
mov
int
outsb
shlb
test
push
dec
fimuls
xor
dec
xlat
ljmp
es
xor
sti
mov
lret
je
sbb
fstpt
lock
inc
lock
xor
dec
stc
push
inc
int3
test
daa
fidivrl
mov
or
repz
sti
xor
bound
sub
fiadds
mov
lahf
mov
out
lea
add
inc
out
out
subb
mov
mov
push
adc
or
xchg
cmc
mov
inc
insb
sbb
subl
lahf
jns
cmpsb
jle
jo
push
aas
add
arpl
add
sti
pop
push
aas
xchg
out
pop
xor
js
push
lret
xorb
adc
pop
jg
push
pop
xor
es
enter
repnz
xchg
sub
fisubs
jo
adc
jae
jge
call
aaa
movsb
inc
xor
inc
je
int3
das
jle
cmpsb
fldt
frstor
jp
dec
or
ja
lods
lahf
push
mov
filds
mov
sub
scas
cli
add
cmpsb
int3
add
repz
jmp
scas
dec
add
add
fcomip
fistpl
sar
scas
fmull
or
or
mov
jle
cli
or
pcmpeqd
add
push
inc
repz
stc
pop
ljmp
out
scas
out
push
sbbb
out
or
push
xchg
dec
mov
mov
push
mov
leave
sub
xor
inc
sbb
int
adcl
dec
xchg
stc
cwtl
mov
test
icebp
inc
mov
cmp
repnz
mov
xchg
mov
bound
into
shr
into
aas
gs
sbb
inc
rolb
jl
ljmp
mov
mov
jnp
addb
test
shlb
cmpsb
and
out
addr16
push
out
shr
dec
sub
in
jl
js
lock
pop
sbb
lret
xchg
or
inc
cltd
cmp
jo
jp
test
and
int3
cmc
xor
jg
aas
or
mov
call
add
addl
in
test
std
jl
gs
mov
shl
xor
movsb
movb
imull
pop
jmp
enter
jmp
push
aam
lcall
jbe
int
lret
dec
inc
sub
or
dec
test
outsb
xchg
repz
insl
jle
xchg
fldl
mov
iret
mov
sahf
psubq
jecxz
pop
xor
adc
add
or
cmp
call
dec
shlb
pop
dec
imul
mov
cltd
sbbb
imul
push
testb
push
add
mov
fcoms
or
or
pop
push
sti
es
cmp
mov
push
cmpb
bnd
call
mov
mov
cld
inc
lds
test
cmp
sub
mov
scas
jbe
ljmp
mov
je
mov
xor
fiaddl
nop
lahf
and
in
imulb
aam
and
or
sbb
push
shll
jb
notl
ret
outsb
dec
mov
je
fidivrs
add
jo
sub
add
xor
repnz
xor
fs
stc
xor
jae
inc
lods
cmp
adc
jo
adc
daa
sarb
outsb
sub
fistl
lcall
jl
insb
cmc
mov
inc
jne
push
mov
dec
outsb
mov
je
xchg
outsl
lahf
xor
dec
shlb
dec
enter
lret
adc
sbb
inc
pushf
cmp
ss
imul
ret
push
bnd
and
add
cmp
out
outsl
out
lods
mov
int3
movsb
mov
dec
fisttpll
aas
sub
pop
xor
testl
mov
push
mov
insb
lret
mov
outsb
xor
ret
lods
dec
dec
iret
mov
sbb
movsb
xchg
jno
std
cs
xor
pop
mov
sub
cmp
inc
push
pop
aad
pop
sub
das
sbbl
pop
jns
pop
adc
sub
out
mov
mov
loop
lock
das
test
sub
mov
cli
popf
repnz
mov
xor
icebp
bound
insb
das
js
rorl
add
mov
int3
cmp
int3
jmp
xor
pop
jp
hlt
pop
enter
fdivr
jle
jp
inc
lds
adc
jno
jmp
xor
cli
mov
iret
inc
and
popf
clc
faddp
adcb
mov
and
sub
call
cltd
push
mov
mov
bound
not
imul
mov
mov
cs
sbb
xchg
mov
mov
ret
rol
xor
inc
pop
lds
dec
lods
cmp
std
mov
jecxz
fcmove
scas
cmpb
and
je
push
dec
repnz
sti
dec
dec
sub
in
adc
call
push
push
cwtl
sbb
into
fs
pop
inc
std
cmpsb
inc
fwait
push
mov
xlat
out
jp
xchg
push
mov
mov
insb
mov
dec
call
cmpb
mov
adc
pusha
pushf
push
sti
inc
xor
push
leave
popl
cli
push
popa
lds
nop
sti
add
mov
cmc
das
imul
mov
pop
add
xchg
test
push
pusha
into
psllw
sbb
pop
pop
and
mov
notl
inc
adc
mov
xchg
push
pushf
rclb
fcomip
dec
push
sarb
in
xchg
jge
hlt
dec
mov
push
addr16
aaa
xor
add
call
pushf
add
mov
xchg
es
adc
rcrl
loop
xchg
dec
les
add
dec
arpl
pusha
fistpl
jae
insb
pusha
adc
nop
mov
adc
ja
fdivrl
pop
fidivl
loopne
inc
xor
dec
stos
pop
scas
fucom
idivl
add
shll
sub
push
pop
cld
xchg
rcrl
jg
int3
aaa
mov
inc
jo
mov
jns
mov
movsb
xor
addr16
and
dec
scas
mov
sahf
inc
in
pop
push
cmp
mov
jle
mov
xchg
ss
cmpsl
je
dec
sbb
mov
push
ljmp
xchg
jmp
cwtl
pop
pop
or
fwait
lods
xor
push
aad
add
sbb
ret
popa
push
adc
lcall
mov
add
cmp
idiv
loopne
jmp
jnp,pn
add
lea
stos
pop
add
inc
push
cmpl
lock
popa
mov
mov
sbb
mulb
push
frstor
mov
std
cmp
push
aaa
pop
out
jg
lret
cli
dec
movsl
loope
loop
je
scas
stc
test
lock
sbb
ds
lret
mov
popf
xchg
in
cld
pushf
cmpsb
ja
push
jge
mov
cs
mov
adc
cmp
and
outsb
inc
mov
pushf
pop
inc
add
outsl
xorb
adc
dec
dec
fwait
push
das
clc
inc
push
pop
xor
xor
mov
xchg
test
cmp
jns
lds
repz
out
and
sbb
xor
pop
dec
cmp
sbb
loop
sub
inc
dec
cmp
repnz
and
and
stos
fidivrl
jmp
inc
adc
inc
xchg
xor
cmc
ret
push
inc
dec
outsb
movsl
pop
mov
dec
sbb
mov
push
fwait
ret
je
cmp
push
subl
pop
xor
mov
xlat
or
adc
mov
in
mov
fsubrl
out
cmpsb
adc
inc
test
adc
adcb
bound
frstor
push
das
aas
enter
insl
clc
vldmxcsr
pop
outsl
xor
out
mov
push
jb
or
jecxz
cmp
inc
aaa
js
push
into
daa
and
and
add
ret
dec
jno
enterw
push
insb
lods
sbbb
cmpsb
ljmp
lahf
das
cwtl
and
xor
lahf
xchg
mov
sbb
mov
fwait
dec
in
mov
outsl
jno
daa
pop
in
xor
daa
push
add
mov
in
call
dec
daa
aam
mov
jnp
pop
rcrb
in
mov
cmp
adc
test
icebp
andl
repnz
cmp
dec
ss
mov
jne
imulb
jno
fmuls
insb
into
xchg
push
pop
in
jnp
cmp
fimull
ja
cs
dec
cmp
addr16
jne
sbb
push
push
rcr
imul
jns
in
adc
out
adc
push
sub
xchg
mov
shll
cli
mov
or
repnz
fsubrl
in
or
test
cmp
sub
push
cmpsl
adc
push
loope
lcall
fcoml
add
adc
lea
pop
aad
jmp
xor
xchg
adcl
xlat
lea
or
pusha
lret
push
into
mov
push
xor
dec
pop
dec
sub
rcll
popa
mov
xchg
xchg
and
in
and
cltd
test
in
pop
idiv
pop
ljmp
xchg
add
in
aaa
test
push
adc
in
lahf
xor
popf
push
cmp
or
add
in
ljmp
mov
mov
test
push
pop
mov
sbb
dec
div
movsl
pop
fcompl
stos
scas
xchg
xor
psubd
jo
cmpsb
inc
ficoms
cmpsb
mov
push
ret
sbb
jne
cmc
mov
fisttps
push
aad
inc
push
cld
data16
inc
mov
aas
repnz
imul
dec
xor
dec
cs
or
pop
dec
mov
mov
lret
mov
cld
in
xchg
dec
bound
testl
mov
call
jg
mov
jnp
loope
in
lods
dec
clc
mov
loope
inc
int3
decl
adc
in
jp
xor
add
adcb
inc
mov
xlat
ds
lock
popf
adc
repz
mov
pop
and
int
int3
cltd
fdivp
vucomisd
test
mov
adc
ljmp
imul
pop
rorl
xchg
repz
lods
movsl
jl
out
in
xor
pop
sub
rcrb
jl
lea
cmp
gs
cmpsb
ja
std
dec
pushf
pusha
pop
test
xor
jne
addr16
lahf
std
mov
mov
adc
fiadds
xor
pop
sahf
pop
arpl
cld
cli
push
sub
add
stc
inc
push
pop
test
jae
ret
sbb
xchg
or
decb
in
push
add
adc
jl
outsb
imul
jle
mov
cmp
jmp
inc
mov
lahf
or
lret
or
push
pusha
lea
inc
je
nop
mov
push
adc
mov
xor
lcall
sbb
ret
adc
repz
mov
xchg
mov
mov
push
or
or
xor
add
and
pop
mov
pop
imul
xorl
xor
pushf
pop
mov
sbb
pop
cmp
cltd
sahf
cmp
into
xchg
add
inc
ficomps
popa
inc
rcrb
lods
leave
sahf
outsb
jl
fadds
and
push
and
inc
shlb
clc
pop
test
or
cli
push
xchg
lock
and
mov
jne
popa
sbb
test
xlat
lds
cs
jno
add
jp
pushf
inc
pusha
stos
xor
cmc
fadds
jns
jnp
cmp
rcl
test
js
add
mov
lods
xchg
pop
inc
jnp
jae
in
aaa
loopne
aad
inc
xor
inc
jle
ror
lds
xor
dec
rol
ljmp
and
add
ret
sbb
mov
lea
mov
outsl
inc
sub
fcmovnu
jmp
cmpsl
loopne
clc
mov
mov
scas
sbb
ret
xchg
jo
inc
dec
js
push
mov
mov
pop
lret
out
cmp
mov
mov
push
popf
in
gs
mov
fidivrl
lods
push
and
lock
adc
pop
shlb
out
into
movsb
out
jno
rorl
loop
mov
sbb
movsb
adc
mov
mov
icebp
mov
mov
nop
int
xchg
pushf
inc
insl
sti
mov
xchg
cmp
xchg
push
jns
lret
and
icebp
jp
cmp
xor
shll
jno
mov
xchg
push
out
mov
js
arpl
add
pop
aas
pop
xor
mov
test
decb
and
aaa
sub
in
mov
xor
inc
sub
mov
aam
in
movsl
pushf
push
ljmp
pop
cld
cmp
mov
adc
adc
mov
xchg
icebp
xchg
cwtl
ljmp
sub
mov
jns
cmp
xorl
imul
rclb
dec
int
popf
push
sub
push
and
xor
push
stos
xlat
mov
ds
into
sub
xchg
in
movsb
cli
cmp
push
cmp
xchg
std
daa
sub
sub
mov
mov
xor
cwtl
mov
ret
ja
imul
testl
test
sbb
lods
xchg
arpl
jge
xchg
cmp
and
dec
jecxz
cmp
dec
and
xlat
js
fsubrp
pop
scas
shrl
neg
out
pushf
push
mov
aas
pop
lahf
or
mov
jle
mov
mov
jb
arpl
push
ficoml
hlt
stos
and
xlat
push
divl
cmp
push
mov
cwtl
fsubr
ror
cmp
movsl
ss
incl
xchg
ja
push
stc
xchg
outsb
mov
fisubs
xchg
cmp
mov
xchg
enter
inc
sahf
aaa
inc
mov
loopne
cltd
fistpl
inc
roll
push
cmp
dec
repz
lds
jle
jg
lret
mov
push
cmpb
outsl
xor
or
std
cmp
jmp
sbb
int3
enter
pop
aad
mov
cmp
ljmp
cmp
lds
push
xor
xchg
push
andl
mov
subl
int
fs
pushf
xchg
mov
movsl
and
jge
int3
inc
push
mov
inc
push
js
jae
dec
push
inc
cwtl
insl
xchg
add
and
or
pop
test
stc
stc
psllw
and
out
pop
lods
jmp
sbb
out
pop
je
outsl
push
stos
add
adc
out
adc
fstpl
mov
loope
icebp
in
cltd
sbb
pop
inc
xor
popf
aam
shl
ret
mov
sbb
test
jecxz
orl
mov
outsl
push
lret
dec
cltd
es
pop
xchg
enter
mov
orb
cmp
cmpsw
pop
out
inc
movl
stc
xor
jno
ret
mov
ss
push
xor
nop
and
or
sub
push
imul
daa
enter
jecxz
or
mov
inc
cld
mov
dec
mov
sbb
sbb
ret
imul
scas
cmp
lret
shlb
testl
iret
cvtps2pi
out
stos
cs
aam
scas
lock
sub
inc
inc
cmp
fsubr
cmpsb
mov
or
movsl
pop
or
sbb
and
push
inc
mov
divb
or
jl
push
fnstcw
out
adc
mov
rcrl
inc
int3
daa
movsb
jmp
ret
ja
pop
sub
xor
jecxz
mov
inc
add
repz
js
fldcw
push
push
rolb
pop
jge
jo
shlb
adc
mov
jle
sub
stc
cmpsb
loopne
lcall
shrl
int
jge
lcall
out
cmpsl
pop
aaa
mov
out
stos
out
add
daa
jle
int
jg
xchg
mov
push
fwait
outsb
outsb
xor
fwait
xor
daa
lods
jecxz
fdivs
add
mov
add
subb
in
fistps
dec
adc
sbb
and
jle
jp
or
shlb
jecxz
dec
dec
sub
jge
mov
dec
leave
pop
add
loop
lea
outsb
repz
pop
adc
add
and
dec
add
outsl
inc
clc
push
out
adc
mov
dec
jle
push
test
sbb
add
in
lahf
cmp
or
pop
in
pop
mov
or
and
cmp
loop
leave
mov
fnsave
das
jno
enter
lcall
mov
jg
ret
push
xchg
inc
or
jge
mov
mov
mov
loope
test
push
enter
and
xchg
cltd
fiaddl
jecxz
stos
pop
jo
hlt
inc
scas
in
adc
adc
mov
fndisi(8087
adc
sub
cmp
pushf
imul
in
xor
adc
mov
test
or
jmp
adc
test
push
je
or
inc
scas
insl
add
imul
dec
lret
mov
and
adc
jnp
mov
int
dec
insb
call
or
inc
loope
push
loopne
xchg
mov
ss
and
daa
mov
loope
xchg
js
xor
jnp
repz
std
sub
mov
dec
mov
push
mov
les
pop
bnd
add
inc
cld
sub
pop
lret
sahf
subb
xchg
jne
mov
repnz
dec
fwait
pop
clc
and
xchg
mov
xchg
movsl
aam
jp
stos
cmpsl
scas
shlb
data16
jmp
lret
cmp
mov
std
adc
cmp
pop
decl
ljmp
shrb
push
pop
dec
mov
dec
jl
fisubl
sbb
dec
jo
mov
fsts
add
xchg
dec
mov
xchg
movsb
fisttpl
into
add
sub
ret
xor
mov
dec
or
xchg
mov
jns
pop
aaa
sbb
push
outsl
ss
dec
pop
mov
out
cmp
mov
ror
dec
xchg
mov
mov
mov
mov
mov
popa
xchg
rcll
rcl
leave
push
push
jmp
je
xchg
xlat
dec
pop
jno
cwtl
ret
adc
dec
xor
jb
ret
sbb
test
sbb
gs
jbe
inc
scas
add
xchg
aaa
ja
dec
ret
je
ret
lods
dec
inc
pop
ja
roll
add
fcom
mov
in
xlat
mov
jg
rolb
pop
adc
movsb
mov
fstpl
movsl
cmp
aad
unpcklps
call
and
xor
mov
imul
out
cli
lods
cmp
dec
jnp
sbb
enter
fnstcw
incb
jg
jno
inc
into
rorl
push
inc
push
stos
aas
inc
in
pop
ds
sub
jmp
or
mov
jo
xor
movl
into
aas
repnz
and
lret
fldenv
gs
sub
xchg
pop
adc
cmp
test
fimull
ret
js
jmp
push
imul
cmpsl
add
hlt
ret
mov
dec
jno
jle
sbb
fidivrl
mov
call
shll
pop
mov
mov
scas
jmp
jo
rcrl
js
cmp
xor
mov
sar
test
push
mov
dec
in
lock
movsb
push
sti
push
xor
xor
xchg
adc
push
mov
out
rcr
stos
adcb
cmc
jmp
lock
push
lret
mov
cld
and
pop
div
imul
pop
addr16
movsl
scas
inc
cs
imul
sbb
xchg
lahf
pusha
sub
pop
out
test
push
testl
ret
mov
sbb
or
mov
cwtl
sbb
pop
mov
jmp
push
inc
clc
repnz
mov
xchg
pop
pusha
pop
fcompl
enter
shr
push
xor
out
fwait
mov
ljmp
icebp
mov
mov
sub
pop
aad
xchg
mov
cli
cmp
inc
shr
add
mov
outsb
test
insl
mov
out
dec
test
in
lahf
ret
testb
jge
lcall
or
lcall
jge
or
cmp
lahf
cli
outsl
mov
int
std
jns
mov
jmp
arpl
jns
mov
adc
pusha
xor
dec
dec
add
sub
ficompl
or
mov
ja
cltd
jnp
mov
test
adc
jl
in
pop
dec
ja
scas
scas
jl
cmp
xchg
sbb
pushw
mov
mov
mov
push
xchg
pop
cmp
jg
or
push
movsl
aas
daa
std
stc
push
xor
sarb
inc
negb
leave
or
adc
insl
stc
adc
xchg
cli
test
loopne
out
in
shrb
shr
push
push
mov
mov
pop
shrb
inc
ss
mov
cltd
dec
pusha
sub
jo
and
int
xlat
fisttps
subb
scas
testb
xor
addr16
rcll
cmp
cmc
test
repz
std
lea
cmp
out
es
test
dec
pop
jp
mov
rolb
ljmp
pop
mov
inc
outsb
cmp
xchg
mov
or
xchg
xchg
jne
dec
dec
int
pop
cwtl
mov
ret
icebp
in
pop
stc
add
adc
push
push
push
xchg
sub
jp
testl
data16
jns
sbb
sub
iret
push
mov
sahf
mov
cmpb
push
iret
into
pop
cmp
inc
xor
mov
aas
cs
in
push
mov
mov
cmp
mov
shrb
pop
mov
sbb
jb
xor
ret
and
and
push
pop
fdivs
pop
push
jle
stos
ds
push
ja
testb
sbb
in
jmp
test
dec
ss
jle
aam
xchg
inc
je
pushf
jbe
and
dec
adc
loope
cmpsb
mov
int
sub
daa
cwtl
sub
rcl
call
or
dec
aad
or
addb
lods
aas
shrb
cmp
xlat
add
les
jl
icebp
sub
adc
lret
daa
stc
shrl
sub
bswap
lcall
scas
lock
push
shll
das
dec
cmp
pop
inc
hlt
or
lcall
shlb
lahf
je
xchg
mov
aad
dec
bound
les
xor
clc
iret
ds
orb
movsb
stos
cli
xchg
ds
sbb
push
int3
arpl
add
arpl
out
lahf
js
mov
test
lea
push
xor
sub
and
sbbl
or
xor
sbb
mov
push
fwait
adc
insb
and
mov
loopne
shll
repz
cmpsl
fdivrl
pop
subb
int
out
xorb
lods
aaa
pop
jle
cmpxchg
je
es
fists
aas
push
jb
pop
ret
aam
pusha
test
outsl
das
xor
ret
adc
fmul
cld
cmp
push
scas
cmpsb
into
ja
std
add
mov
cs
scas
test
xor
push
push
add
cs
mov
sbb
fldl
mov
mov
scas
xor
push
outsb
outsl
mov
ds
xchg
xchg
lea
jae,pt
jge
and
mov
movsl
loope
mov
divb
and
mov
aad
inc
test
cmp
or
adc
out
xchg
aad
add
fdecstp
test
xor
adc
lods
adc
sub
inc
sub
les
pop
jmp
clc
stos
push
mov
push
pop
push
mov
sbb
add
xor
xor
sub
push
mov
lock
push
xchg
nop
scas
adc
jbe
jp
adc
and
inc
in
inc
cmp
popf
in
popa
push
push
or
adc
test
testl
insb
lock
xchg
and
pop
jmp
lahf
fadd
push
push
pop
and
xchg
xor
pushf
sub
adc
xchg
cmp
lods
sbbb
xchg
clc
and
sahf
mov
leave
lods
push
arpl
lret
jne
or
pop
mov
loopne
add
jg
nop
push
inc
nop
lods
dec
popf
shll
and
or
cmp
add
jno
jmp
cmp
mov
jae
cmp
ja
repz
and
cmp
inc
gs
sub
and
adc
sub
lods
xchg
sub
mov
aas
mov
pop
push
popf
lcall
pop
stos
xlat
cmp
and
loopne
insl
dec
pop
mov
add
or
xchg
lea
repz
mov
xorl
add
jmp
pop
dec
test
lods
pop
shlb
xor
or
in
adc
and
pop
sub
movsb
test
xchg
jmp
dec
sbb
enter
not
xor
test
sub
lds
push
data16
adc
in
jle
pop
loopne
inc
mov
test
gs
xchg
jns
xchg
inc
push
cwtl
inc
test
sub
in
lcall
loop
iret
push
mov
mov
int3
bts
ljmp
push
test
cmp
sbb
or
or
jb
and
aas
dec
push
dec
pop
ret
lcall
ljmp
lock
clc
sub
ss
cltd
jmp
aas
push
or
sbb
pushf
in
sbb
sarl
leave
cli
mov
aad
lea
sbb
ret
cmp
lods
xor
mov
scas
addl
leave
mov
xchg
movsb
lret
popa
fs
xchg
xlat
andl
ror
mov
insl
and
fiaddl
mov
gs
mov
mov
xor
mov
ficoms
aad
mov
dec
rcl
xchg
cmc
cmp
cltd
shr
loopne
xchg
mov
sar
mov
iret
jecxz
in
test
or
lea
les
mov
idivb
push
and
cmp
vpsadbw
mov
and
xchg
clc
or
inc
xor
nop
fistps
add
and
or
push
imul
cmp
pop
sbb
ja
in
popf
loopne
dec
dec
push
pop
xor
push
pop
push
add
mov
imul
mov
imul
mov
dec
lea
push
sub
movsb
lahf
pushf
mov
movsb
fwait
cmc
lret
lcall
mov
inc
sbb
insl
pop
or
fcmovb
movsl
xchg
adcl
pop
out
sbb
cmp
pop
dec
aaa
pop
pop
mov
cli
pop
or
ljmp
sbb
aas
mov
pushf
rol
mov
fdivr
cmp
sahf
enter
pop
dec
cmp
imulb
xlat
aam
int3
cmp
adc
cmc
jmp
fidivrl
pop
jno
jmp
push
fcmovnu
push
or
call
sub
dec
xor
mov
mov
mov
lds
fidivrs
int3
je
push
test
movsl
mov
scas
xchg
ds
popa
fcmove
movsb
adc
negb
jge
xor
mov
subb
push
fucomp
xchg
mov
and
mov
in
imul
mov
repnz
out
stos
push
clc
out
ret
push
add
jns
push
mov
es
aaa
cmp
or
loopne
idivb
cli
dec
cmp
sbb
mov
push
xchg
imul
jae
daa
jbe
fimull
fcmovnu
or
lea
add
dec
shll
in
cmp
int
cli
cltd
push
shlb
fidivrl
out
inc
test
leave
mov
inc
enter
das
jl
cmpsl
rorb
xchg
lahf
or
mov
mov
xor
jmp
notl
pop
lret
ds
int
out
sub
int3
jg
scas
lds
mov
pop
imul
jb
int
fidivs
roll
mov
xchg
nop
scas
ret
les
pop
mov
jmp
cld
push
pusha
je
into
fsubrs
push
int3
jns
xor
cmpsb
jge
jo
imul
jno
jno
push
into
nop
popa
arpl
mov
popf
int3
jg
int3
dec
repz
pop
and
xor
stos
mov
add
push
sbb
mov
mov
fsub
sti
dec
call
cmp
in
scas
push
mov
push
outsl
jecxz
and
jl
mov
lods
icebp
and
shl
xor
mov
inc
negl
imul
bound
mov
movsb
popf
icebp
or
push
inc
mov
into
js
add
mov
pop
aad
in
nop
mov
aaa
hlt
cli
push
andnps
and
cmpsl
repz
ja
jp
jbe
popa
lahf
pop
enter
cld
cld
stos
ss
push
and
leave
add
in
push
es
lods
cwtl
inc
clc
test
sbb
rol
mov
push
insb
jb
das
int3
push
daa
cli
stos
pop
xor
roll
fsubl
out
sbb
cs
pop
ficompl
mov
cmp
test
movb
and
xor
sbbl
in
mov
call
scas
sbbb
adc
std
pushf
popa
mov
sbb
sbb
ror
pop
jns
and
js
or
push
lods
push
push
or
sbb
jecxz
jo
xlat
add
sub
icebp
xchg
inc
repz
lods
dec
cmp
pop
pop
int3
sub
sti
inc
mov
enter
push
sub
icebp
scas
xor
cltd
inc
inc
lret
decl
inc
mov
cld
mov
sub
jp
shlb
push
pop
or
insl
sbb
add
sub
add
inc
ds
dec
clc
jnp
lea
hlt
pusha
inc
inc
fstpt
cmp
mov
jecxz
mov
push
push
mov
in
fwait
jnp
push
xchg
and
xchg
mov
jno
push
or
fwait
inc
fistpll
and
cmp
pop
enter
lret
incl
fisubrl
adc
dec
push
daa
pop
lahf
inc
cltd
and
sub
xor
pop
dec
insl
mov
ret
or
mov
sbb
pop
stos
mov
pop
daa
or
fsubs
fisubl
ret
jge
pop
bnd
or
cwtl
jb
and
call
mov
lret
or
or
stos
cmp
add
dec
xor
cmc
gs
pop
and
lods
das
xchg
jae
pushf
pop
es
sub
leave
int3
add
jno
out
sbb
sub
pop
lret
push
jbe
xchg
in
arpl
adc
or
rep
roll
xchg
dec
mov
mov
shrl
dec
jo
push
add
push
loopne
jo
add
rorl
mov
push
rorb
xchg
loopne
cmc
inc
mull
into
push
cwtl
xchg
int3
aad
cmpsl
lods
leave
mov
mov
adc
orl
lods
sbb
sbb
pushf
xor
dec
xchg
or
scas
pop
pop
loop
mov
dec
and
inc
ret
add
pop
xchg
sbb
cmp
lock
mov
sub
pop
bnd
xchg
out
pushf
sbb
dec
sti
insb
dec
xchg
jg
insl
cmp
les
mov
bound
lcall
enter
dec
push
or
lret
rorl
add
xor
shrl
xor
hlt
scas
sbb
mov
cmpsl
insl
bound
and
jbe
jl
xor
aas
push
adc
jns,pn
rcr
mov
adc
cmp
rclb
xor
sub
mov
jge
jp
add
push
add
cmp
push
lea
aas
dec
js
or
mov
mov
and
push
pop
mov
out
xchg
std
mov
push
cwtl
jecxz
push
mov
mov
je
push
adc
iret
push
inc
xchg
mov
sbb
neg
adc
pop
xchg
pop
gs
fnstsw
dec
dec
daa
cmc
cli
loop
push
lcall
jne
push
dec
xchg
pop
cmc
repz
push
fsubrp
xlat
cltd
movsl
bound
orl
xchg
ret
sahf
adc
loopne
andb
test
mov
sbb
dec
outsl
sbb
clc
mov
xor
push
pop
mov
add
cmp
and
pushf
test
jbe
mov
jns
jno
popa
jl
fidivrs
test
cmp
movsl
es
shll
pop
pop
movb
push
push
les
adc
ja
test
stos
bswap
jo
fmull
dec
lock
test
push
push
push
insb
mov
xor
test
loop
dec
dec
push
scas
call
rol
fnstsw
cmp
jnp
or
inc
lds
dec
add
jmp
addb
jp
mov
xorl
push
adc
mov
int
sub
push
popa
movsb
pop
pushf
or
jne
inc
hlt
push
dec
xchg
or
stos
loopne
pusha
sub
dec
lret
xchg
ds
sbb
fldcw
imul
pminub
fsubrs
inc
mov
pop
lahf
daa
cmp
repnz
push
test
cmc
pop
jmp
push
repnz
aam
sub
clc
pop
repnz
push
fs
mov
xchg
xchg
xchg
loop
xchg
das
pop
cltd
stos
dec
jle
fmull
insl
adc
lahf
fldenv
xor
push
andb
mov
in
int3
aaa
icebp
mov
xor
fs
loop
ror
leave
scas
test
push
je
subl
in
sbb
outsb
dec
add
out
and
xor
dec
movsb
imul
mov
in
xor
lock
xor
sub
fdivl
sub
dec
jmp
int3
fiadds
xlat
andb
leave
aad
cli
cs
pop
push
push
add
bound
jge
dec
xchg
xor
in
int
jg
test
or
das
je
cld
les
fs
pop
call
out
test
cmp
pop
xor
pop
mov
ljmp
xor
jp
and
dec
testl
mov
adc
sar
js
adc
jge
adc
dec
cmp
cld
cmp
and
lea
imul
sar
lahf
jg
pop
ret
add
sub
ret
test
mov
out
push
push
inc
pop
and
mov
iret
adc
cld
inc
sbb
push
pop
popa
adc
jle
ss
push
movsb
and
aam
mov
xor
and
add
cli
jecxz
fidivrs
fld
xchg
xchg
in
dec
cmp
fiaddl
sbb
jns
shlb
cmp
sahf
and
mov
je
jb
fdivs
or
and
sbbb
int3
adc
mov
js
lret
xchg
adc
mov
inc
mov
test
dec
lds
dec
fisubrs
data16
push
cmp
adc
xor
xor
jns
sbb
cld
arpl
lret
orl
xor
add
sbb
cltd
rorl
out
nop
loop
jb
imul
out
in
adc
adc
rorl
push
in
push
out
xorb
fisttps
mov
jp
out
push
push
xor
mov
gs
repnz
std
in
repz
orl
jg
ss
cmpsb
into
xchg
push
cld
shr
fsts
jp
rcrl
sbb
push
xor
mov
fsubrs
push
jbe
jl
je
pop
test
cmp
lret
mov
insb
cltd
mov
xchg
sub
icebp
mov
mov
lock
and
xchg
and
shll
pslld
or
inc
xchg
cld
lret
adc
addr16
xchg
repz
adc
das
cs
mov
add
inc
test
mov
shlb
daa
mov
and
je
sbb
stos
mov
clc
mov
stc
aad
dec
sub
les
movsl
decl
inc
test
push
jo
adc
ret
lret
insl
add
dec
in
fidivs
jge
addr16
jmp
mov
js
outsl
ja
outsb
or
lock
in
xchg
subl
lret
adc
lods
jae
or
sarl
cld
xor
fstpt
mov
jae
push
inc
pop
call
insl
pushf
leave
call
push
push
pop
arpl
push
movsl
lahf
jle
add
test
xchg
sbb
mov
sbb
or
gs
mov
js
imull
mov
inc
arpl
push
or
lods
dec
sub
adc
sbbb
xchg
push
and
xchg
daa
ja
rcll
xchg
sbbb
and
nopl
mov
add
mov
push
sbb
cwtl
mov
ss
loopne
mov
imul
sub
movsl
add
push
je
outsl
push
dec
into
and
cmp
push
xchg
cmp
loope
dec
lea
shlb
lret
test
sbb
dec
loope
pop
in
and
and
xchg
inc
mov
cmp
aas
imul
pop
push
insb
pop
sub
mov
xor
loopne
xor
dec
ja
pop
push
scas
lods
jae
inc
fidivrl
sub
mov
push
bound
push
jp
je
daa
jl
cmp
clc
jecxz
mov
mov
mov
jl
pop
jl
mov
fcom
add
mov
ret
push
mov
loop
imul
push
xor
jbe
inc
xchg
and
loope
pop
sbb
jo
ret
hlt
cmc
jb
xchg
dec
mov
cwtl
xor
scas
nop
int
popf
mov
pop
call
inc
or
ljmp
fbstp
push
movsl
xchg
cvtpi2ps
xchg
pusha
movsl
xchg
imul
mov
sbb
mov
stos
int
dec
test
popa
in
in
lcall
sbb
mov
xchg
sbb
push
xor
loopne
int3
enter
repz
jmp
dec
xor
repz
xlat
lret
insb
xchg
xor
push
repnz
push
daa
dec
cltd
jo
sub
das
pop
mov
mov
fildl
gs
sub
pshufw
xor
in
jo
or
sub
mov
mov
call
sub
lahf
test
mov
mov
add
inc
jle
or
in
loop
dec
in
aaa
mov
mov
inc
add
repz
or
adc
add
mov
adc
fs
pop
push
mov
test
insl
mov
push
mov
insl
dec
xorl
jno
mov
aad
outsb
rcrl
cmc
je
out
scas
mov
sahf
cmp
loop
mov
cli
jmp
jbe
ret
mov
jno
add
fisubrl
mov
jne
sub
jmp
hlt
sbb
leave
shrl
add
ret
jmp
dec
sub
xchg
dec
cmpsb
insb
add
xchg
arpl
sti
and
xor
mov
pop
outsb
jbe
int
mulb
push
dec
outsb
mov
jo
cmc
loopne
pop
mov
push
in
mov
enter
jae
push
jo
mov
xchg
jb
aad
cmp
insl
test
jl
mov
cs
mov
pop
aas
push
xchg
mov
popf
imul
fs
push
fdiv
insl
and
jno
mov
das
cmp
cli
test
fbld
ret
sbb
rcll
sub
sub
push
xor
add
xchg
add
enter
aad
add
lock
cltd
lret
push
outsl
arpl
mov
jge
clc
jecxz
enter
lahf
jg
sub
push
popf
sbb
leave
pop
popa
out
mov
pop
and
mov
add
loopne
pop
push
pop
aad
fdivrl
out
xchg
xchg
repz
inc
fidivl
ret
lahf
inc
sbb
jge
outsb
adc
movsb
cmp
inc
push
int3
xchg
mov
cmp
ljmp
fs
fcoml
iret
out
mov
cmp
lea
pop
shlb
jle
fwait
xchg
inc
sub
rorl
mov
enter
jnp
dec
xchg
inc
ret
sbb
pop
jne
movb
push
in
sbb
loop
jbe
les
lret
adc
sbb
mov
mov
push
js
push
dec
ljmp
xchg
cld
fdivrl
mov
lods
inc
idivl
lret
xor
and
scas
sub
mov
lods
mov
xor
mov
jnp
pop
loope
enter
xor
enter
int3
jbe
hlt
or
je
hlt
xor
push
xchg
ds
sahf
aas
pop
aaa
pop
test
sub
dec
js
out
xchg
lret
int
sbb
icebp
fs
jae
and
push
enter
inc
mov
pop
cmp
dec
lcall
jne
test
adc
fistpl
lods
imul
pop
or
mov
je
xchg
jno
inc
stos
mov
test
call
mov
ret
pop
push
scas
push
lret
mov
xor
repnz
sub
dec
push
jno
insl
dec
pop
xchg
and
outsb
movsl
jo
rcll
ss
std
icebp
or
xchg
pmaxub
mov
popf
cmp
and
pop
pop
adc
xchg
dec
xor
test
inc
lock
notb
mov
cmc
sub
cmpsl
jg
adc
jp
icebp
sub
movsl
push
test
dec
adc
rcrl
mov
xor
aad
ficoms
leave
xlat
int
insl
dec
imulb
es
movsb
mov
int3
iret
out
repz
lods
sbb
adc
call
pop
cltd
fadds
lock
lea
xor
in
jle
cmpsl
rolb
mov
leave
sbb
cmp
push
in
xchg
iret
testb
mov
sub
in
data16
sbb
or
or
xor
scas
andb
and
test
mov
mov
xor
iret
adcl
ss
add
pop
xor
out
sub
arpl
cmp
or
sahf
mov
lock
inc
adc
in
lret
es
imul
jmp
pushw
xchg
gs
dec
jg
imul
jecxz
in
mov
adc
xchg
and
outsb
mov
xchg
jge
xorb
outsl
fwait
pop
cmpsb
xlat
nop
sub
call
andl
xchg
mov
mov
ja
mov
sbb
mov
inc
mov
pop
push
xchg
or
or
xor
adc
jp
mov
mov
fdivrl
mov
push
fsubrp
push
jo
mov
sub
fisubrs
out
lret
pop
jae
ficomps
dec
lret
mov
mov
sub
es
repz
insb
mov
inc
push
pop
lret
push
insb
lret
mov
and
sar
sbb
inc
add
fildll
icebp
sti
pop
inc
imul
sbb
insb
sbb
cmp
outsb
pop
fisubs
and
ret
inc
lcall
mov
nop
inc
je
stos
dec
inc
sbb
in
xchg
xor
movsb
add
inc
add
jge
mov
scas
dec
outsl
sub
test
push
outsl
inc
push
cmp
aaa
imul
out
sub
add
sbb
enter
push
mov
test
jge
call
ret
pop
in
ret
xor
jmp
scas
mov
jne
fcmovb
xor
outsl
jnp
cmp
xchg
pushf
dec
call
cmp
scas
insb
cmpsl
mov
sub
dec
push
loop
fcomp
in
test
xchg
inc
jne
ret
test
or
lods
xor
pop
lds
out
orb
mov
call
add
jo
dec
mov
and
bound
push
ret
dec
lds
adc
ds
loope
cmp
fcmovnu
and
repz
sub
cmp
fsubrl
dec
leave
stos
int
inc
sbb
test
mov
aaa
push
cltd
pop
pop
rclb
push
add
push
inc
loopne
jbe
loop
mov
fisttps
stc
mov
js
sub
test
dec
and
dec
iret
les
imul
outsl
jl
imul
inc
mov
addl
stos
inc
push
dec
loop
and
outsb
add
lret
jnp
lea
or
jne
scas
xchg
jo
hlt
stos
loope
in
push
imul
or
gs
fadds
cltd
aaa
lret
stos
bound
je
jmp
pop
mov
test
inc
out
mov
cmpsl
fcmovu
decb
mov
pop
call
stc
decb
insl
repz
mov
pop
jne
rcrl
push
mov
mov
xchg
dec
scas
mov
xchg
lcall
gs
inc
jae
fs
daa
pop
repz
fcmove
jecxz
fildl
lods
popa
stos
jg
mov
imul
mov
push
cltd
aad
mov
repnz
pop
adc
dec
repz
fisttpll
xor
sub
fmull
pop
pop
das
inc
cld
lret
cltd
or
mov
cli
mov
adc
dec
inc
loopne
sarl
mov
jae
cs
pop
xchg
pop
adc
test
dec
popf
cmp
test
dec
mov
and
int3
push
pop
xor
cwtl
jg
or
inc
shrl
scas
or
cmp
sbb
call
mov
mov
movsl
jo
xor
scas
jne
push
aad
push
inc
nop
xchg
inc
cmp
adc
dec
out
ja
ds
rorl
test
rorb
bsr
mov
out
dec
xor
mov
sub
adc
mov
out
pusha
lock
sbb
inc
inc
out
xchg
fwait
lahf
xchg
pop
fs
adc
aam
adc
sbb
testb
sti
push
inc
dec
das
add
jmp
lahf
push
int3
mov
add
xor
jecxz
pop
arpl
mov
rcr
imul
inc
movsb
imul
hlt
sahf
dec
cmpb
push
fisttpl
dec
es
push
les
fstps
jo
andl
add
arpl
outsl
je
movd
cmpl
mov
pop
mov
imul
rol
xorb
hlt
cmp
iret
cltd
or
aaa
add
jl
mov
jp
inc
cwtl
sar
jle
pop
andl
pop
std
mov
insb
pushf
jle
mov
xor
xor
imul
call
mov
jae
and
in
cwtl
mov
scas
leave
sbb
inc
add
ret
push
dec
or
rcrl
loopne
xor
pop
pop
pop
push
in
out
xchg
mov
or
adc
incb
and
mov
mov
dec
es
ljmp
lahf
mov
push
jecxz
je
arpl
mov
push
xchg
stos
fs
fiadds
cwtl
lret
push
jnp
arpl
mov
xchg
xchg
lahf
ljmp
inc
test
scas
and
cmp
mov
sbb
loope
test
test
pop
es
adc
imul
dec
loopne
or
repnz
jne
mov
and
jbe
je
lock
in
lret
divb
sbb
cmp
mov
add
pop
inc
les
test
dec
dec
fs
sbb
sub
push
pop
dec
jecxz
adc
fwait
std
xchg
mov
incb
jo
das
or
outsl
sti
movsl
xor
cmp
repz
cmp
jp
jno
xchg
es
and
js
gs
xchg
ljmp
cmp
lret
mov
inc
call
nop
adc
in
faddl
fsubrl
leave
lcall
ror
mov
in
hlt
push
cmpsl
jne,pt
fnstsw
inc
sti
mov
push
xchg
mov
gs
lods
pop
xor
rcl
add
outsb
mov
fs
xchg
sahf
cld
scas
cmp
mov
repnz
push
ljmp
jp
mov
mov
pop
rcrb
dec
nop
iret
shlb
test
xchg
les
test
rcl
into
mov
out
in
mov
pusha
jg
cmpsb
lret
sbb
sti
pop
int
push
add
and
imul
xor
leave
cltd
fdiv
shll
mov
nop
imul
mov
inc
mov
cmp
leave
ss
sahf
aas
jle
shlb
mov
mov
test
outsl
sbb
ret
ret
repz
add
lret
or
mov
test
add
pop
mov
xchg
cmp
jle
cs
add
mov
sub
add
adcl
xchg
sbb
xchg
ret
lods
xor
push
mov
cmp
imul
ret
sbb
xor
inc
mov
les
dec
lods
repz
mov
or
aad
push
lret
sahf
repz
rclb
repnz
sbb
aad
std
inc
jp
pop
mov
int3
cmp
inc
mov
fsubrl
je
mov
xorl
aad
push
sub
imul
je
aas
out
xchg
pushl
leave
xchg
daa
mov
adc
out
inc
lea
jb
popf
test
in
cmp
xchg
and
xor
popa
xchg
push
fiaddl
ret
pop
testl
ss
rorl
in
ret
mov
push
popf
rcl
xor
add
shrb
lret
mov
daa
decb
mov
pop
mov
add
aas
jo
pop
fstps
testl
cwtl
cmpsl
mov
cmc
imul
mov
loope
mov
push
dec
sbb
inc
repz
scas
test
fimuls
add
mov
jg
sbb
lods
dec
and
pop
stos
cmp
cs
and
mov
jo
cmpsb
push
mov
xlat
lock
stos
xchg
adc
rol
xchg
cld
mov
mov
cli
xchg
jle
push
inc
cmpsl
and
icebp
mov
rolb
dec
fnstsw
aad
cmp
hlt
imul
cmc
inc
dec
sbb
or
xchg
repz
push
movb
enter
addr16
and
and
sbb
scas
pop
test
jmp
push
out
test
mov
movsb
mov
imul
adc
pop
stos
jge
sbb
cmpsl
jns
xchg
loop
push
mov
pusha
test
xchg
dec
jg
mov
cmp
sub
loope
cs
fdiv
pop
mov
mov
int
mov
sub
hlt
into
mov
std
xor
sbb
inc
fisubs
lahf
add
out
cmp
sbb
push
test
lcall
lcall
lret
cli
test
loop,pn
ret
and
jb
cwtl
rorb
inc
and
xor
and
or
push
adc
push
sbb
add
js
out
out
arpl
mov
enter
test
xchg
enter
sbb
ss
int
data16
push
adc
imul
pop
hlt
fidivrs
mov
addr16
popf
add
push
sti
ss
push
lret
mov
mov
mov
jle
lret
shll
xor
in
add
cwtl
in
jns
insb
pop
mov
mov
inc
lds
push
pop
int3
sahf
sub
mov
clc
scas
inc
in
cli
mov
data16
fmull
pop
push
call
loope
in
ret
push
test
inc
or
loop
mov
jmp
xchg
std
repz
test
cmp
aad
push
popa
or
adc
div
sub
mov
ds
mov
xor
mov
shlb
in
xchg
bound
mov
and
adc
aaa
out
shll
data16
cmc
dec
stc
scas
cmc
bound
mov
out
or
push
adc
mov
mov
es
jmp
mov
out
push
hlt
fcomip
ror
inc
xor
mov
mov
je
jns
xlat
adc
xchg
imul
push
call
pop
enter
dec
test
enter
add
int
ficoms
mov
cltd
mov
in
lods
adc
popa
dec
popa
inc
cld
ja
dec
adcl
aas
add
mov
popf
pop
xchg
pop
sub
pop
jno
movsb
js
imul
sub
rolb
mov
cmpsl
push
jecxz
jge
pop
sub
out
cltd
mov
mov
pop
sub
insb
fstpt
dec
loop
shlb
cmc
add
mov
es
aad
lahf
cmpsb
push
add
jne
gs
and
inc
fs
fsubrs
and
roll
stos
lea
pushf
das
enter
pushf
cmpsb
outsl
dec
shr
cli
jp
in
aas
inc
fwait
aad
aas
mov
mov
sti
cmp
or
pop
jne
dec
xor
aad
xchg
pusha
mov
lret
scas
mov
fs
sbb
popf
cmp
int
push
dec
xchg
outsl
adc
add
dec
iret
in
outsl
sub
lcall
dec
pop
enter
das
loopne
lret
cs
aad
jbe
fwait
cmc
push
push
sbb
test
and
mov
and
dec
add
ret
repz
pop
cmp
mov
fisttpll
leave
repnz
lock
pop
arpl
test
jae
add
aas
or
mov
into
dec
dec
hlt
je
pop
push
push
mov
cmp
jge
jo
std
inc
aad
cwtl
xchg
mov
jp
icebp
loope
out
add
scas
iret
xor
pop
mov
add
in
push
dec
lock
jge
sbb
scas
dec
add
and
iret
aaa
jnp
dec
pop
sbbb
sbb
adcb
cmpsl
testl
cmp
jmp
push
mov
jns
add
incb
orl
ds
ljmp
out
dec
arpl
data16
inc
or
std
sti
sbb
sub
mov
xchg
shr
lods
jecxz
scas
mov
test
aaa
clc
pop
or
lcall
or
mov
mov
movb
mov
jo
lock
andl
jecxz
aad
cmp
push
jmp
ljmp
add
mov
nop
xchg
insb
adc
lahf
dec
mov
lods
inc
or
pop
xchg
fiaddl
mov
loop
adc
popa
mov
out
push
pop
out
cwtl
sub
push
xor
lock
scas
mov
repnz
das
cmp
sbb
xchg
sti
mov
shll
push
fs
adc
xor
cli
mov
adc
in
rorb
pusha
sub
orb
into
xor
in
cmpsl
cmp
ljmp
test
test
outsl
xchg
push
in
imul
cld
es
fnsave
rcrb
adc
loope
iret
loop
sbb
ds
in
sbb
aas
xchg
shrb
sbb
aam
jo
testl
in
jbe
outsl
jmp
and
jb
in
jne
idivb
push
pop
inc
ret
mov
insb
xchg
xchg
shrl
cltd
xor
ss
leave
xlat
xchg
cld
ljmp
sbb
pop
sbb
push
mov
in
test
push
in
jl
popf
gs
jae
jle
mov
pop
test
dec
mov
shl
mov
mov
mov
or
loop
stos
xor
lds
or
int3
jns
hlt
lret
add
in
loope
or
inc
mov
jne
aas
add
xchg
call
shll
and
cmpsl
and
pop
loopne
cmp
ljmp
icebp
out
dec
push
flds
or
add
and
inc
inc
dec
mov
push
shl
mov
mov
repz
dec
pushf
xor
rcrl
mov
inc
push
push
enter
lea
dec
xor
sub
mov
or
das
aam
mov
mov
adc
push
dec
shlb
adc
iret
inc
mov
pop
mov
ret
xchg
inc
in
sbb
push
lret
pop
jecxz
push
sub
cmp
lret
dec
shl
mov
movsb
std
mov
add
popa
sbb
js
pop
ret
int
adc
adc
je
jmp
sbb
inc
cmpsl
and
pusha
sbb
cmp
mov
and
test
mov
and
jo
in
or
xacquire
pop
or
cmp
lret
inc
dec
or
int3
mov
lahf
outsb
pop
add
repz
in
cmp
cld
bound
fimuls
cmc
push
mov
jns
scas
or
mov
pusha
call
cltd
fbld
fildll
lods
loop
jg
sub
sbbb
xlat
jae
dec
cwtl
test
cmp
adc
mov
pop
sti
cmp
mov
dec
int
or
mov
fs
movsb
lock
mov
lret
cmp
add
std
jp
in
jmp
pop
loopne
mov
xchg
lret
loope
xchg
add
bnd
mov
xor
mov
sbb
fsubl
mov
push
lahf
ret
cmp
out
test
add
ds
or
sub
xchg
sub
das
or
xchg
imul
ds
pop
add
inc
cmc
mov
sbb
add
xor
cli
push
pop
ss
jo
adc
iret
add
mov
mov
pop
push
cmp
int3
sub
cmp
lcall
jmp
mov
insl
xlat
outsl
xlat
popl
pop
stos
mov
jp
sbbb
adc
and
adc
push
xchg
xor
jne
sbb
inc
add
scas
jle
inc
inc
push
jl
cli
stos
cwtl
flds
js
jg
notb
es
dec
xor
add
pop
push
aas
or
orl
cmp
enter
mov
ds
and
cli
arpl
in
mov
mov
mov
sti
in
gs
clc
inc
mov
jg
push
dec
inc
cs
sub
pop
push
aas
sbb
xor
lods
jecxz
push
sub
ret
repz
cmp
sbb
nop
ss
insb
mov
jmp
fbld
pop
bound
scas
lods
push
jns
adc
push
cmp
stos
int
aas
cmpsb
lret
clc
jne
mov
mov
mov
leave
push
or
jg
popf
jmp
jp
fcoml
add
insb
pushf
pop
mov
scas
mov
jp
push
or
iret
shr
lahf
popa
xchg
stos
repz
out
imulb
jmp
clc
push
pop
aad
iret
xchg
icebp
sahf
mov
and
jo
push
mov
inc
push
shlb
mov
jp
mov
pushf
fcmovne
sub
pop
xchg
stos
js
clc
add
mov
push
push
std
push
add
call
call
mov
jge
test
mov
icebp
push
xchg
jg
mov
and
in
pop
mov
mov
loop
pusha
push
ds
xchg
outsl
outsb
je
or
mov
in
aam
sbb
jmp
test
jp
sti
sub
dec
xchg
inc
mov
xor
stc
add
pop
aad
cmc
inc
imul
xor
or
jo
push
push
jne
or
xor
insl
test
shlb
scas
add
mov
inc
movsb
clc
imul
dec
xor
cli
shlb
mov
jecxz
aaa
jne
xchg
rcll
lret
cli
xchg
arpl
pop
mov
bound
cmp
jl
xchg
addr16
loop
dec
dec
adc
ret
imul
incb
das
addb
xchg
jnp
jo
neg
sub
xchg
je
cld
dec
add
pusha
andl
out
outsb
or
inc
mov
and
aaa
adc
pop
mov
outsb
inc
movsl
ret
xchg
inc
sbb
dec
cmp
inc
sti
out
in
mov
out
mov
repz
push
fwait
pop
int
in
cs
push
roll
jl
add
stos
mov
outsl
arpl
ja
roll
lret
loop
xor
ja
pushf
insl
pop
pop
mov
jmp
cmp
stc
pushl
test
pop
jl
sub
cmp
arpl
xchg
lods
pop
push
push
cmc
mov
mov
adc
stos
out
mov
lcall
fidivrl
mov
cmp
xorb
sub
ret
sub
in
add
mov
pop
addr16
lea
lret
mov
enter
sbb
mov
mov
popf
xchg
mov
and
mov
cmp
mov
out
insl
dec
outsb
xor
xchg
sbb
ficompl
or
xchg
lahf
push
push
sbb
jbe
mov
mov
add
lods
sbb
sbb
add
out
mov
xchg
jmp
nop
dec
xor
mov
dec
dec
pop
jg
popf
jle
lods
sbb
popf
out
scas
inc
fisubs
and
xchg
mov
jmp
or
sbb
sub
or
loop
sbb
dec
imul
jg
cmp
mov
arpl
in
les
fildll
xchg
pop
imul
push
adc
movsb
add
push
dec
mov
adc
cmp
sub
cmp
mov
lods
test
or
flds
jne
mov
mov
cmp
inc
cmp
mov
arpl
sbb
stos
dec
or
negb
lret
pusha
jnp
push
mov
push
mov
popa
mov
mov
push
test
adc
sti
xchg
clc
sub
int
xor
sahf
popa
inc
movsl
pop
pop
push
aaa
mov
icebp
inc
push
and
push
pop
adc
sahf
shll
push
fwait
outsl
hlt
xchg
cmpsb
in
push
mov
int
imul
or
stos
ret
dec
data16
dec
mov
mov
xor
mov
inc
mov
adc
cmp
sub
andl
daa
push
cmp
sub
loope
add
sub
dec
sub
push
lret
fnstenv
push
push
mov
out
mov
data16
cmp
or
xchg
mov
into
sbb
mov
adc
test
add
xchg
and
fcompl
and
mov
adc
xor
and
jb
xor
call
inc
aam
lret
and
ffreep
scas
push
icebp
jp
ja
aas
rorb
xlat
and
fistpll
push
cmp
mov
adc
lds
cmp
cmp
push
add
das
sbb
push
pop
or
into
and
pop
cmpsl
add
mov
dec
jge
mov
test
xchg
jmp
pop
push
nop
arpl
push
out
inc
test
push
cltd
mov
aad
jp
into
pushf
out
jp
mov
stos
idivl
add
xchg
nop
xor
pop
inc
fcomps
jle
xlat
je
mov
adc
add
fucom
inc
add
ja
cli
push
mov
sub
jp
call
adc
push
inc
fucomp
and
icebp
lds
xor
js
cli
pop
add
sbb
fistpll
jb
lea
inc
rcrl
fwait
es
std
dec
adc
xor
mov
inc
fwait
mov
sub
jp
daa
stos
ljmp
mov
mov
push
scas
sub
or
inc
push
outsl
mov
sbb
pusha
clc
in
and
hlt
pop
fsubp
cmpsl
xchg
push
cmp
and
xlat
dec
xor
pop
jl
sbb
inc
jecxz
sarb
daa
cmp
in
insb
xlat
in
mov
dec
add
dec
je
daa
sbb
push
inc
test
jb
jge
lods
ret
lret
jo
sbb
adc
test
lret
xor
jp
mov
and
xor
lds
sbb
and
sub
cmp
mov
jge
dec
mov
inc
aam
pop
mov
cs
xor
push
loop
push
and
addr16
lahf
out
inc
xchg
or
inc
mov
push
jno
stos
clc
sbb
jle
xchg
cli
mov
add
ljmp
adc
popa
das
jecxz
cmc
loop
call
mov
xchg
dec
or
fstpt
das
dec
jnp,pt
pusha
ret
hlt
adc
loope
xchg
ljmp
in
cmp
sub
adc
mov
mov
lock
jb
stc
bound
sahf
mov
sbb
push
xchg
out
push
in
lock
mov
rorl
mov
or
inc
jnp
or
jge
dec
ja
jb
imul
mov
arpl
mov
push
cmp
mov
pop
and
mov
push
add
fcomps
pop
in
xor
nop
jno
clc
inc
jo
push
arpl
sub
andl
lds
pop
xchg
mov
lahf
cmpsl
fucomp
lock
loopne
jo
xchg
mov
je
cmp
ja
clc
mov
mov
push
mov
cmp
xchg
push
add
sti
push
data16
cli
adc
mov
mov
pop
imul
mov
pop
push
je
dec
test
mov
outsl
dec
mov
jae
shlb
mov
nop
call
pop
push
adc
and
enter
lcall
xor
mov
mov
out
adc
pop
xchg
cltd
xor
aas
jl
icebp
cmp
inc
aas
aad
adc
in
repnz
adcl
fs
into
jns
inc
jle
inc
or
xchg
lret
imul
iret
subb
dec
sbb
xchg
mov
rcrl
mov
mov
add
add
fmull
pop
je
mov
mov
shlb
mov
push
mov
sbb
mov
push
adc
ljmp
std
inc
es
ret
xchg
popf
sbb
scas
xor
pop
mov
xchg
and
fimuls
dec
jl
sub
sub
mov
fildl
add
fnstenv
stos
and
or
xor
push
fpatan
cmc
mov
sbb
fwait
pop
jge
ficoml
dec
movb
xor
jno
out
xor
mov
cmpsl
xor
fistpl
dec
not
xor
or
ss
cmpsb
add
adc
insb
pop
and
leave
test
push
insl
push
hlt
sub
pusha
jecxz
outsl
and
xchg
inc
add
in
jns
test
icebp
mov
mov
add
sub
stos
das
mov
aam
mov
subb
jp
fwait
mov
into
rclb
mov
pop
lods
xchg
sbb
loope
inc
push
inc
cltd
out
mov
jmp
jmp
jp
repnz
dec
and
pop
mov
insl
mov
insl
cmpl
into
testl
ret
popf
andl
push
cli
jmp
sub
int
fidivrl
es
jno
shrl
mov
test
clc
lahf
xor
loopne
cmp
cmpsl
ret
pop
int3
popf
jmp
inc
jle
fs
in
push
mov
andb
insb
jbe
mov
nop
addb
cmp
sbb
adc
jbe
add
dec
sub
pop
stos
and
lcall
pop
inc
loope
jp
ja
push
cwtl
inc
dec
push
imul
add
mov
cmp
dec
aas
cmc
push
cmpsl
jne
data16
mov
fildll
aam
mov
nop
sbb
inc
sti
sub
jbe
pop
push
and
or
inc
xchg
adc
cmp
std
cld
pop
adc
jo
cmpsb
lret
int
inc
xchg
or
cs
cmp
mov
filds
sub
pusha
sub
jo
popf
and
es
popa
jmp
aas
sbb
test
sub
mov
sbb
mov
mov
xchg
gs
lcall
orb
iret
movsb
lret
out
loopne
aam
inc
cmpsb
cmpsb
in
fwait
outsb
xchg
movsb
cmc
push
repnz
and
jmp
mov
adc
rcrb
push
xlat
div
and
subl
jo
cmp
test
sbb
jmp
or
rcrl
jbe
out
xchg
push
shrb
mov
adc
movsl
std
mov
popa
call
movsb
xor
leave
movsl
shrl
cwtl
aaa
loop
xchg
pop
adc
das
test
ficoms
jbe
mov
dec
pop
xchg
outsb
cmpsl
out
or
add
xchg
pop
cmpsl
xchg
dec
fildl
add
jno
das
pop
pop
jno
or
mov
pusha
sbb
xlat
pop
pop
sub
call
mov
inc
sub
std
out
and
inc
dec
mov
push
jmp
es
fdivrs
dec
pop
push
push
js
jmp
lods
in
dec
sti
sub
sbb
clc
mov
shlb
or
mov
and
das
popf
aas
mov
filds
push
lods
dec
cmp
sbb
mov
sahf
iret
push
mov
testb
aad
sub
out
add
jae
stc
outsl
lock
sub
outsb
outsb
jno
dec
ja
inc
icebp
xchg
sbb
sbb
and
sbb
pusha
mov
in
stos
mov
add
dec
mov
sbb
push
sbb
les
sub
dec
fidivs
pop
outsl
arpl
sub
fcmovnu
inc
and
sahf
stos
jmp
dec
add
or
aad
xchg
cmp
push
pop
pop
xchg
arpl
cmp
push
mov
cmp
jmp
das
mov
jne
mov
dec
out
add
push
sbb
popa
fldcw
shrb
pop
inc
mov
sub
daa
push
mov
xor
mov
inc
mov
sub
xchg
psrlw
inc
sub
scas
pop
mov
in
pop
dec
and
rcll
and
mov
or
adc
push
data16
mov
mov
jle
mov
movsl
jns
lds
sub
out
mov
arpl
lods
sub
adc
test
call
push
insl
fistl
jo
sub
insb
cmp
enter
dec
mov
mov
or
loope
sbb
push
dec
push
mov
mov
and
sahf
mov
iret
inc
outsl
jno
leave
das
adc
inc
xor
es
mov
and
inc
jge
fs
jns
push
push
rcrl
adcb
jmp
dec
cwtl
fstpt
inc
lock
repnz
cmp
adc
js
mov
imul
mov
shlb
xor
add
and
lcall
ret
icebp
mov
data16
gs
sbb
pop
xchg
cmp
mov
lahf
sub
test
cmpsl
jle
lods
and
sub
ret
in
addl
aam
lods
push
mov
ljmp
fsubl
xchg
push
cmp
push
xchg
jecxz
mov
jecxz
mov
imul
dec
mov
aas
out
and
scas
imulb
jno
mov
push
dec
hlt
pop
mov
in
push
ret
adc
jb
inc
adcl
mov
add
pop
and
pushf
ljmp
sbb
ror
mov
jnp
push
frndint
xor
adc
pop
mov
sahf
icebp
iret
xchg
fcomps
or
inc
stc
sbbl
cmpsb
aad
adc
adc
pop
add
mov
lds
sbb
xor
add
push
mov
je
and
jge
mov
test
scas
fldl
sub
sbb
jg
inc
push
mov
fs
mov
js
dec
ja
mov
add
daa
or
mov
push
out
imul
inc
pusha
xlat
push
jne
add
sti
cmp
shlb
inc
xchg
sar
cmp
cmp
push
mov
out
jmp
into
repz
add
adc
mov
repnz
adc
stos
pop
or
mov
lahf
or
pop
aas
jle
jne
fs
push
pushf
push
jle
test
cli
into
sub
cmp
test
adc
sub
aad
xor
xabort
push
aad
stos
sarb
icebp
push
outsl
push
mov
filds
xchg
or
mov
js
je
leave
clc
sub
mov
loop
push
and
cli
std
fs
adc
push
mov
sub
ror
xchg
addr16
dec
sub
mov
push
test
icebp
mov
xlat
fildll
addb
ret
jno
aaa
mov
rcl
push
xor
scas
xchg
fidivrl
pop
push
test
add
rcr
jle
scas
pop
adc
mov
dec
lods
enter
js
loopne
outsb
cmc
inc
mov
mov
sub
adc
lret
icebp
mov
adc
dec
cmpsl
iret
aad
hlt
ds
js
add
loope
pop
or
scas
sub
inc
xor
jl
add
cld
add
lods
jle
xchg
xchg
or
out
mov
xlat
sub
sub
xor
out
iret
dec
inc
les
cld
jb
jo
lods
push
dec
add
inc
stos
iret
cli
aad
and
mov
bound
fwait
jge
gs
nopl
xchg
inc
mov
lods
sub
push
clc
es
pop
lea
pop
cwtl
and
je
lcall
cltd
mov
pop
faddl
aas
adc
xchg
icebp
jno
ud0
cmp
shlb
mov
push
stc
into
stc
jo
cmpsl
sbb
jle,pn
pop
stos
mov
adc
cld
cmpsl
in
dec
or
xor
mov
je
fwait
std
sbb
pop
sbb
mov
roll
ror
sarl
sbb
mov
xor
sbb
lock
xchg
jb
cld
sbb
into
jg
xor
cmp
mov
test
out
test
and
rcrb
xchg
int3
stos
ror
cmp
out
lret
mov
outsl
adc
or
push
ljmp
push
repz
fisttpl
jb
test
adc
cs
dec
outsb
cmp
cmp
push
jns
or
stos
mov
pop
pop
push
mov
jae
cmp
dec
xchg
outsl
xchg
lret
pop
sbb
sbb
stc
xchg
test
in
jbe
and
cld
call
stos
lahf
sub
pop
in
sbb
cld
outsl
and
lea
jo
cmp
jecxz
ret
rclb
jb
jl
jnp
inc
and
in
jbe
mov
out
and
int3
or
mov
cld
out
xchg
push
mov
nop
xor
in
enter
loopne
enter
insl
jecxz
out
mov
decb
mov
loopne
sub
push
jge
push
sub
dec
adc
inc
cli
cmp
enter
xor
add
dec
mov
repnz
adc
add
andb
fbld
inc
lret
jle
shrl
or
xchg
xor
cmpsl
das
icebp
fwait
and
and
jno
add
pop
inc
dec
dec
pushf
dec
xchg
xchg
fbstp
ljmp
mov
dec
xor
mov
and
popa
in
and
cwtl
and
cmpsb
mov
jns
mov
pushf
add
cmp
add
dec
std
add
cmpsl
pushf
push
mov
xchg
jge
adc
inc
jmp
aas
adc
xchg
lods
inc
rolb
mov
stos
cmp
call
int3
add
jnp
xor
icebp
cltd
push
jbe
pop
daa
mov
cld
enter
xchg
es
loopne
adc
mov
stc
and
add
cmp
pop
pop
rcrl
xor
push
pop
int3
int3
pop
and
clc
pusha
mov
cmp
js
mov
jle,pn
pop
scas
lods
insb
sti
dec
mov
mov
lods
and
sbb
in
iret
pushl
ljmp
stos
mov
jno
cli
aas
mov
sub
cmp
pop
push
test
dec
jnp
in
lods
pop
jo
insl
js
sub
cld
jb
clc
push
add
jp
mov
shll
mov
hlt
jb
andl
cs
push
repnz
dec
les
cmp
dec
push
mov
cli
mov
sbb
daa
lcall
dec
mov
dec
hlt
loope
dec
movsb
xor
cmc
push
lea
bound
push
cmpsb
jb
mov
cmp
mov
jmp
loopne
jmp
rcr
es
and
pop
jecxz
test
push
add
outsl
push
and
pop
inc
enter
in
movsb
hlt
xor
out
cmp
sahf
xor
mov
js
scas
mov
sbb
push
out
movsl
test
sub
add
and
and
or
dec
daa
addr16
ja
mov
mov
or
insb
stc
add
movsl
mov
popf
dec
mov
mov
push
test
pop
push
mov
ss
mov
sbb
negl
les
stc
xor
mov
mov
cwtl
ds
sbb
cli
and
fxch
std
lods
hlt
push
push
shr
and
out
pop
int3
dec
fcmove
jae
flds
into
push
lahf
loopne
or
psllq
mov
push
mov
in
inc
cs
cmp
arpl
daa
jle
and
inc
fmuls
cmp
imul
cmp
add
pop
mov
or
adc
shll
jle
in
adc
dec
sub
push
dec
pop
inc
ret
jge
stos
lock
les
imull
xor
dec
xchg
test
lret
mov
sub
lock
adc
lea
adc
rcl
lods
adc
movsl
dec
enter
bound
int
test
xor
pop
leave
cmp
pop
imul
inc
pop
push
or
mov
decl
test
mov
and
push
rorl
push
cli
vmptrst
jns
faddl
mov
xchg
cltd
test
sbb
sub
jp
add
cmpsl
ret
pop
inc
out
ss
loopne
cmp
sub
test
into
lret
out
dec
and
xor
add
lods
xor
push
lretw
xor
or
xlat
push
push
jae
orb
ror
push
xor
leave
cmp
xchg
xchg
cmpsb
mov
fcmovb
mov
std
roll
into
lret
enter
mov
daa
mov
mov
jb
xchg
movsb
lea
in
in
idiv
adc
hlt
inc
xor
lahf
mov
lds
xchg
cli
xlat
loopne
xor
jl
add
pop
jno
loope
into
cmp
dec
pusha
in
pop
xor
in
and
inc
lret
sub
mov
inc
push
xor
push
adc
adcl
lahf
cmp
adc
inc
and
mov
lahf
loope
jmp
mov
fists
jle
mov
lahf
lock
sub
dec
pop
inc
cmp
pop
test
fwait
pop
jecxz
fdiv
out
or
in
ja
sti
ja
data16
mov
nop
enter
into
repnz
aaa
fmull
xchg
jnp
ja
jl
clc
cld
clc
jmp
push
scas
pop
pop
je
push
add
mov
add
inc
or
daa
adcl
pop
lods
sub
push
and
pop
std
or
push
add
inc
into
pusha
push
and
gs
mov
jne
mov
nop
adc
xchg
sbb
dec
cmpsb
jbe
sbb
jg
std
aas
andb
scas
bound
pop
lods
in
es
aam
cmpsl
mov
inc
push
jno
adc
sbb
lods
jo
dec
es
and
mov
fwait
rorw
mov
and
xchg
data16
icebp
mov
xchg
xchg
and
or
hlt
mov
test
mov
into
dec
jns
ret
jnp
aad
pop
adc
mov
jnp
lds
ja
call
add
sub
or
fldcw
pop
pop
sub
or
xor
das
jns
movsb
push
xchg
jo
add
nop
pop
sub
add
inc
nop
lock
push
sub
ja
mov
cmc
out
mov
loope
xchg
shr
adc
and
popf
ficompl
pop
xor
push
mov
pop
bound
push
mov
stc
test
sub
pop
lea
xchg
hlt
sti
mov
cld
in
jp
pop
rcrb
icebp
mov
cmp
in
in
jle
mov
sbb
call
sbb
lahf
add
push
cli
inc
es
push
es
ljmp
mov
arpl
jno
mov
jbe
xchg
mov
mov
push
mov
inc
loopne
sti
mov
jo
das
xor
iret
add
popa
gs
mov
xchg
clc
imul
xor
stos
push
ret
push
fistl
and
nop
dec
sahf
and
outsb
mov
repnz
mov
cmp
push
mov
cmp
jg
sti
dec
lahf
fdiv
adc
in
jle
cmp
push
xor
jge
iret
ret
push
lcall
mov
or
push
stos
data16
nop
dec
fistl
bound
outsl
sub
rcll
sub
xor
stc
out
imull
jo
lret
test
pop
fs
xchg
dec
jmp
dec
mov
mov
mov
pop
es
or
sbb
jno
mov
faddp
in
sbb
mov
arpl
das
mov
push
loopne
inc
subb
xchg
cwtl
add
cmpsb
mov
mov
ja
fwait
into
xor
push
lea
mov
imul
pusha
adc
cmpsb
inc
xchg
ds
pop
ja
sub
cld
mov
mov
cmp
shl
iret
test
dec
inc
or
ljmp
push
sbb
inc
jl
dec
dec
adc
aaa
sub
rcl
jle
data16
xchg
loopne
pop
and
and
lret
jg
bound
lods
xor
push
aas
adc
call
mov
mov
mov
ja
add
out
add
lods
dec
dec
into
xchg
pop
sbb
push
push
add
inc
mov
jb
adc
pop
lea
push
sti
add
cmc
jmp
mov
dec
rorb
roll
and
adc
test
xor
test
xchg
pop
mov
imul
sub
arpl
in
cmp
sbb
into
adc
fiadds
inc
pop
lea
pop
mov
fcomps
mov
ret
push
pop
jl
scas
xor
jg
adc
inc
xchg
add
cld
xchg
pop
sbb
jmp
push
ja
xlat
pop
ret
adc
mov
mov
aaa
push
aaa
jno
icebp
idivl
arpl
cmp
jno
fildl
sbb
shlb
lret
and
std
nop
gs
push
mov
out
shll
test
sbb
push
sarl
inc
cmp
lods
enter
arpl
jo
mov
mov
aas
mov
jle
clc
mov
inc
pop
jne
add
lret
out
adc
lds
add
sbb
mov
pop
sbb
into
pop
or
dec
out
scas
or
stc
clc
jne
jl
or
outsl
imul
adc
jne
mov
loop
out
xor
mov
out
outsb
addr16
or
rclb
pop
popf
test
cmp
adc
arpl
sub
loopne
arpl
loop
notb
jne
mov
in
sbb
lcall
gs
rorb
add
loope
dec
lahf
push
xchg
out
push
xorb
xchg
insl
js
hlt
add
lret
pop
jle
push
loopne
movsb
pop
add
leave
popa
dec
mov
cmp
enter
sbb
rcrb
std
jg
mov
loope
cmp
repz
pop
xor
and
xchg
and
hlt
mov
adc
push
sbb
es
lret
pop
inc
dec
clc
ja
push
pop
mov
das
sbb
sti
das
cmpsb
add
or
subl
outsl
and
jbe
xor
sub
dec
test
into
rolb
and
or
mov
mov
cmp
lock
jmp
icebp
sti
mov
xchg
inc
mov
xchg
pop
add
mov
cld
lcall
dec
stos
pop
mov
sbb
repnz
sbb
and
mov
into
pop
add
loopne
mov
push
mov
je
in
les
and
lcall
mov
data16
or
inc
int
iret
das
jne
push
mov
xorl
push
int
loopne
adcb
jnp
xor
mov
xchg
add
xor
add
cld
fldcw
xchg
xor
ljmp
jmp
add
adc
pop
pop
ljmp
inc
loope
adc
sub
dec
loop
test
push
xor
push
out
arpl
and
pushf
gs
adc
and
fidivs
pop
adc
inc
mov
into
inc
js
mov
movsb
subl
loope
push
addr16
les
aad
push
test
cmpsl
mov
sub
inc
aas
in
into
sub
push
popf
add
in
ja
shlb
out
jl
xchg
leave
enter
jae
jmp
sbb
cld
in
test
xlat
out
inc
pop
popf
mov
dec
adc
mov
bound
lds
mov
mov
xchg
mov
lcall
mov
fidivs
ss
cmp
in
lret
dec
xor
adc
test
ja
hlt
ja
ror
insb
inc
lcall
lods
loope
fisubs
int
movsb
std
dec
fldl
mov
mov
and
lds
pop
sub
nop
lods
jmp
and
std
mov
push
cmpsl
ret
xchg
lock
mov
int
push
xchg
mov
push
dec
dec
lds
jo
lret
add
add
jmp
xchg
xchg
jnp
dec
aad
les
jo
jb
imul
mov
test
pop
es
xchg
lea
rclb
ret
mov
fcoml
add
pop
and
or
imul
das
in
jg
mov
jb
int3
je
xchg
mov
add
stc
mov
dec
jns
inc
sbb
adc
mov
push
cs
cmpsl
ds
ja
lock
mov
rorb
xchg
pop
cmp
or
bound
pop
mov
cmp
ss
cmp
je
adc
icebp
cwtl
xchg
jmp
addr16
lret
push
push
sti
inc
sbbl
xor
adc
cmp
js
dec
loop
add
call
sub
decl
cmp
or
push
pop
shlb
mov
das
int
cli
subb
adc
jno
mov
mov
add
jmp
adc
jns
aad
scas
dec
cltd
repnz
or
mov
notl
das
out
shl
cmp
int3
leave
nop
or
mov
fcomps
xchg
insl
ss
cli
dec
imul
pop
pop
out
mov
dec
aam
lea
add
leave
xchg
xor
shlb
pushf
ficompl
movsb
dec
je
aaa
xchg
repz
stos
or
adc
icebp
fsubrs
sbb
cmp
cmp
mov
mov
dec
jmp
aas
jno
add
fistps
mov
jns
add
sub
mov
or
lods
cmpsb
cmp
or
xchg
lret
mov
fists
shlb
cmp
movsb
ret
cmc
pusha
rcl
add
leave
je
repz
push
adc
adc
scas
and
jnp
stos
cs
icebp
movsb
mov
cmpsb
and
sar
inc
mul
and
jo
or
sub
fwait
inc
jbe
fwait
sbb
mov
xchg
mov
orl
insb
xor
andb
ficoms
stos
push
sbb
and
jne
mov
sub
pop
in
add
daa
es
or
add
sbb
ljmp
stos
push
cwtl
mov
lds
sbb
push
xor
call
dec
adc
sub
addr16
xchg
andl
dec
rcrl
jge
out
mov
arpl
fimull
cmpsl
xor
sbb
cmp
adc
movsl
sbb
push
clc
fs
pop
xchg
and
adc
dec
push
mov
loope
enter
js
jge
mov
cmp
push
jae
daa
adc
lds
or
and
fistl
jl
and
gs
ja
sub
xchg
sbb
addb
dec
fnsave
inc
cmp
inc
xchg
sub
shr
push
mov
sub
lods
add
sbb
pop
xorb
jp
fsubrl
mov
fdiv
pop
mov
ds
int3
jge
in
addr16
adc
movsb
lods
adc
out
xor
push
jo
int3
and
cmc
lahf
mov
in
xor
or
fdivp
jb
sbb
xor
fdivp
cmp
dec
mov
inc
out
pop
nop
xlat
clc
xor
cmc
jae
in
pusha
rolb
out
and
lock
mov
ret
mov
jnp
ljmp
xchg
dec
push
ljmp
test
jbe
sbb
lods
mov
or
sub
stos
test
mov
ficoml
or
les
ljmp
fbld
test
xchg
lods
mov
int
pop
pop
dec
fsubrs
mov
enter
pop
stos
mov
icebp
xchg
rcrb
mov
stc
ret
cltd
push
jno
fidivl
xchg
cmc
enter
xorl
das
adc
add
test
jno
fistpll
cmpsl
shl
loop
je
pop
cmp
imul
aaa
lods
xor
xchg
lock
inc
and
sbb
fwait
cmp
mov
lds
pushl
pop
cmp
repnz
adc
mov
in
jbe
pop
pop
cmp
fcmovbe
jb
xchg
cmpsb
jl
repnz
idivb
andb
cltd
sub
jne
popf
adc
xor
xor
ret
lods
ss
mov
jecxz
cmpsl
mov
repnz
xor
fstpl
or
int
insl
push
int
jp
out
pop
adc
xchg
rclb
mov
data16
clc
adc
pop
lret
xchg
or
dec
adc
popa
mov
call
arpl
aas
stc
mov
xor
add
add
pushf
rolb
sub
xor
push
lock
mov
cmp
das
push
inc
mov
xchg
hlt
cmp
popf
pop
test
outsl
faddl
outsb
lret
inc
fwait
icebp
pop
pop
xchg
push
jmp
and
iret
cmp
in
and
test
ds
fnstsw
inc
out
lods
and
das
shll
scas
sbb
xor
mov
loop
mov
mov
cmp
stos
in
and
lret
call
add
dec
mov
jl
jb
pop
in
mov
sti
into
movsb
nop
cmp
xor
leave
rcrl
pop
or
sbb
arpl
lds
notl
out
mov
hlt
iret
cli
testb
jl
or
inc
scas
jmp
fadd
mov
dec
push
popf
xor
insl
add
shl
ja,pt
cmpsl
std
fucomi
jmp
pushf
fucomi
mov
inc
popf
mov
imul
cld
or
addr16
lea
mov
lods
lret
dec
inc
pop
cmc
cwtl
push
add
mov
add
push
popf
ljmp
rcrb
stc
addb
rcll
lea
jo
mov
fmuls
push
jno
adc
xchg
push
mov
xchg
cltd
jp
mov
aas
ds
jae
adc
dec
out
and
and
xchg
fcmovb
into
fisubl
xor
aas
lcall
sub
iret
mov
out
adc
sub
xchg
inc
sti
call
xchg
lds
test
xor
je
sahf
xor
movsb
pop
in
fcmovnbe
push
scas
mov
cmc
push
xor
xor
in
xchg
mov
outsl
fcmovnbe
xor
rol
push
inc
mov
fcoml
scas
shr
pop
lods
jp
jo
dec
aaa
aas
pop
sbb
out
sbb
lds
jnp
xor
mov
std
push
push
adc
call
lea
mov
mov
je
sti
add
or
sahf
test
ficoms
fmuls
inc
add
cmp
xor
les
lret
ds
mov
cmpsb
test
clc
jg
dec
pop
repnz
push
cmp
sbb
xor
add
cmp
jne
jo
dec
mov
idiv
pusha
push
add
sbb
stos
push
xor
hlt
and
fstpt
pop
lds
out
stos
sbb
mov
and
dec
sub
pop
scas
movsb
stos
pop
gs
jmp
cmp
out
lock
sbb
jb
jge
jbe
mov
orb
mov
adc
sahf
fbstp
push
xchg
cmp
mov
insb
ss
movsl
lea
loope
mov
clc
mov
bound
add
pop
mov
inc
ror
add
mov
mov
pop
or
sbb
mov
std
inc
jp
pop
push
cs
sub
clc
stc
daa
xchg
scas
fistl
mov
add
and
or
rol
lcall
sbb
mov
cmp
popl
hlt
scas
mov
sub
daa
sbbb
add
inc
add
sub
cmp
jmp
fidivrl
inc
ds
arpl
ret
mov
pop
adc
inc
push
repz
push
mov
xchg
sub
mov
int
js
add
cmp
xchg
andl
movsl
out
pmaddwd
jg
adc
jmp
loop
insl
in
outsb
imul
loopne
push
xor
adc
inc
in
test
fscale
inc
gs
sbb
cmp
stos
in
leave
sbb
fistpll
ret
stos
pop
dec
pop
cmp
or
and
adc
pop
pusha
shl
dec
loope
jmp
push
and
imul
xchg
dec
mov
popf
call
aaa
sbb
enter
inc
fldcw
ffree
mov
aam
repz
in
mov
push
test
shll
mov
pop
and
movsb
lahf
icebp
sbb
popa
xchg
lret
bound
pushl
jge
and
sub
or
dec
testb
pop
mov
in
das
icebp
adc
enter
aas
nop
and
es
in
mov
mov
push
cmpb
push
jne
outsb
outsl
xor
xchg
jge
xchg
lock
cmp
mov
inc
xchg
lods
jge
stos
js
in
mov
and
push
dec
xchg
sbb
jno
mov
int3
jnp
fimuls
loope
scas
rcll
sbbb
mov
lret
mov
sbb
lea
in
in
pop
dec
jg
pusha
dec
dec
adc
loope
jae
xchg
sub
cmp
int3
xchg
mov
ficoml
leave
push
lods
sub
add
sub
mov
psraw
mov
push
xchg
jae
sbb
call
mov
mov
lcall
pushf
cmp
test
or
nop
jbe
xchg
sbb
pop
fsubrp
aaa
sbbb
outsb
pusha
mov
rcll
in
mov
jecxz
lret
inc
xchg
mov
rcrl
cmc
loope
int3
or
int3
jbe
pushf
mov
fcompl
adc
sub
pop
pop
and
imul
pop
lods
inc
inc
xlat
call
sub
push
mov
sbb
scas
adc
cmpsl
stos
push
int3
push
jl
cs
cmpsb
sbb
fsubrs
jb
pop
out
stos
mov
fcmovnb
imull
jmp
popf
inc
push
gs
inc
rolb
xchg
sbb
mov
mov
pop
hlt
mov
dec
mov
fwait
addr16
in
cmpsl
fmuls
fisubrl
jecxz
rclb
adc
cltd
pop
ds
shrb
add
jge
lret
mov
insl
mov
push
xchg
xor
xorb
jg
and
adc
or
mov
xor
inc
jg
fnstcw
insl
add
rcrb
icebp
pop
loope
into
jne
pop
bound
pop
outsb
aaa
cmp
and
add
cmp
mov
pushf
pop
sbb
fidivrs
pushf
sarb
aas
cmpsb
cmp
arpl
pop
data16
sbb
mov
ret
sbb
aas
push
adc
add
sub
aam
in
jge
or
dec
sub
ja
mov
lock
aad
inc
icebp
lret
ja
ds
sub
mov
jbe
loop
out
out
popf
adc
mov
icebp
cwtl
jbe
cmp
or
or
push
sub
push
add
jno
jno
movsb
mov
dec
add
mov
xchg
aad
into
cld
and
cwtl
inc
addr16
inc
out
push
stc
and
or
pop
jb
fcoms
xor
push
gs
add
popa
das
popl
fs
or
scas
mov
pop
push
lods
mov
aad
mov
jmp
jp
xlat
negl
mov
jecxz
pop
mov
mov
sub
cmp
pusha
scas
xor
es
rcrl
inc
or
pusha
sub
push
mov
daa
mov
mov
test
cmp
adc
jb
clc
sbb
or
pop
mov
sub
dec
mov
pop
pop
pop
cmp
push
and
mov
xchg
xchg
fcomp
xor
sub
outsb
cwtl
jno
mov
addr16
stos
xchg
push
inc
adc
ret
sbb
jb
or
aas
and
cmp
repz
push
fldcw
sbb
mov
xchg
outsb
data16
call
inc
cmp
mov
jge
inc
inc
fwait
pop
dec
pop
push
nop
xchg
test
push
mov
pop
lds
dec
pop
aas
punpckhdq
cmp
aam
dec
xor
xchg
xor
mov
xchg
jns
mov
xchg
insl
scas
cs
or
mov
push
push
and
jg
mov
or
xor
incb
andl
scas
lods
xor
ds
cmp
loop
outsl
jp
dec
test
push
push
xchg
fisttpll
push
mov
pop
push
cmp
in
loopne
cmpsl
lcall
jnp
daa
or
lods
mov
pop
xchg
dec
dec
mov
sarb
jl
mov
mov
in
test
aaa
aam
mov
mov
pop
dec
pop
mov
test
add
mov
or
pop
dec
stos
clc
ds
mov
mov
cmp
mov
xor
rcll
addr16
mov
mov
repz
cs
xchg
or
ficoml
sbb
in
xchg
cltd
xchg
fildl
mov
jbe
cmp
divl
test
popf
jl
mov
push
push
pop
dec
cld
pushf
mov
pop
fistl
adc
out
cmc
lock
sub
dec
lds
out
mov
adc
lahf
jo
push
mov
out
mov
or
xchg
jns
data16
fidivs
test
jmp
adc
lea
sub
call
mov
jns
in
loope
scas
sub
cmp
xor
stos
outsb
mov
mov
mov
xor
sbb
push
fsubrl
push
push
add
sub
sbb
cmp
outsl
mov
push
sub
dec
and
ss
and
test
jl
fmuls
jae
jmp
iret
insl
in
mov
cmp
cmp
pop
jb
xchg
cltd
imul
inc
jnp
ljmp
dec
and
and
jecxz
push
cltd
aaa
paddq
push
mov
lret
fcoms
inc
cmp
cltd
shlb
push
mov
mull
int3
mov
or
mov
push
lret
adc
iret
insl
cmp
xchg
mov
mov
push
mov
lods
jae
cltd
pop
lods
or
fsubs
push
add
jle
mov
aaa
or
and
adc
lods
and
dec
push
pop
fs
ja
xchg
cmp
data16
adc
mov
mov
cmp
or
xorb
and
ret
movsl
sub
adc
cmp
clc
out
pop
mov
jb
pop
mov
lods
push
xchg
jle
test
add
jecxz
shlb
inc
lret
mov
loop
mov
add
rorl
add
jne
rcrl
repnz
mov
stos
cmp
into
push
cwtl
ljmp
dec
xchg
aaa
xor
icebp
cmpb
iret
test
ss
adc
add
and
sbbl
jno
pop
xor
hlt
or
xor
pushl
ret
leave
sub
aaa
mov
lock
js
outsb
lea
dec
pop
movsb
mov
jne
cld
xchg
fsubrl
loope
rcrb
clc
icebp
pop
or
sbb
iret
jbe
and
fcoms
popf
jle
push
mov
adc
rcll
inc
das
sub
xor
test
cmp
dec
mov
sub
dec
rcr
mov
or
jno
adc
gs
jae
cmpsb
jae
mov
and
icebp
jne
cwtl
or
push
mov
mov
stos
iret
fcmovnu
movsb
in
aaa
sbb
out
jg
sti
scas
mov
popa
adc
add
or
stos
mov
outsl
push
in
out
push
add
adcl
add
cmp
in
or
clc
dec
mov
pop
and
popa
ret
mov
pusha
shlb
rcll
popf
stos
insl
bound
sbb
mov
mov
inc
stc
mov
add
hlt
mov
add
jl
push
lods
and
add
lock
das
pop
and
ficoms
rcll
pushf
gs
js
pop
or
mov
sub
or
subl
imul
pop
and
push
cs
dec
pop
add
pop
daa
loope
push
sub
inc
out
and
repnz
data16
mov
into
push
and
shlb
popa
rolb
mov
xchg
and
lret
add
insl
sub
push
mov
inc
outsl
cltd
sub
xchg
cmp
les
push
push
mov
and
cmc
inc
xchg
out
bound
ds
jno
cmp
add
jno
dec
sub
cmp
in
fsub
arpl
adc
outsb
loope
into
out
test
insl
push
cmp
out
adc
ret
fiadds
into
js
loope
sub
pop
cmpb
test
xor
loopne
aas
fcomi
scas
jecxz
xchg
pop
dec
ja
adc
ljmp
test
adc
in
fwait
pop
data16
cmp
test
push
daa
std
push
imul
sbb
mov
adc
pop
repz
ss
test
push
cwtl
push
rcll
and
or
mov
icebp
xchg
jle
mul
mov
lods
or
std
inc
push
inc
adc
mov
mov
aam
and
pop
aad
xlat
mov
dec
mov
fs
mov
pushf
jge
in
fisubs
cmovle
xchg
fwait
pop
movsl
shll
mov
repnz
sahf
jecxz
fiadds
dec
and
jns
jge
hlt
xchg
and
jns
loopne
push
ljmp
cmp
daa
addr16
cltd
fs
daa
repnz
insb
std
mov
stos
dec
repnz
in
inc
popa
jb
sarb
add
icebp
out
jae
out
cmpsb
push
cmpsl
out
sbb
aam
stos
mov
adc
pop
push
jae
mov
mov
sbbb
adc
stos
mov
das
shlb
pusha
push
jge
ret
lret
mov
mov
not
jmp
inc
jae
lock
bound
aam
mov
dec
add
hlt
int
jecxz
sub
into
inc
stos
sahf
inc
pop
dec
fisubs
pushf
test
rclb
pop
sbb
adc
cltd
lret
dec
pop
sbb
dec
pop
mov
inc
ljmp
aas
and
mov
cs
xchg
xchg
add
pusha
pop
inc
xchg
xchg
push
imul
jmp
cld
stos
aaa
pusha
and
mov
xchg
pop
popa
cmp
mov
outsl
shl
and
bound
enter
xor
xchg
push
sahf
mov
lds
jmp
bound
sub
inc
cwtl
adc
jne
sbb
adc
loope
dec
addr16
mov
lcall
inc
incb
xchg
add
push
adc
clc
orb
xor
addr16
push
out
xor
hlt
testl
das
pushf
mull
cli
add
jmp
out
xchg
mov
jle
sub
cltd
jle
inc
jle
xor
jnp
cwtl
cmp
lods
adc
sub
pushf
lock
outsl
addr16
inc
fstpl
rcrl
pusha
ret
or
mov
das
sub
mov
sub
out
xchg
mov
lods
mov
push
std
hlt
xchg
ds
push
fisubl
test
fcom
push
lea
xchg
pop
dec
adc
je
stos
xor
scas
mov
push
cmp
push
xchg
jne
inc
xor
cmpsl
pop
push
pop
jno
das
in
cmp
or
pushf
ja
jbe
lock
xor
jecxz
push
lea
and
inc
mov
push
cmp
add
sbb
hlt
push
sbb
xor
aas
cmp
cmpsb
clc
call
scas
cmc
push
jmp
jge
xchg
jns
xor
lods
mov
jg
scas
je
jmp
insl
jmp
xor
mov
outsb
ja
add
cmp
aad
cwtl
mov
xchg
sahf
pop
in
pop
loopne
outsl
jg
sbb
jl
rcl
sub
cmp
or
xchg
int3
scas
xchg
mov
sbb
daa
xor
test
outsl
aad
testb
ret
push
out
xchg
dec
xchg
sbb
sbb
xor
sti
mov
loopne
adc
adc
scas
std
lahf
or
mov
mov
xor
cmpsl
std
push
bound
inc
mov
and
push
rorb
cmc
lods
imul
jae
jns
inc
add
xor
aas
and
outsl
mov
pop
movsl
pop
rcrb
mov
repnz
outsl
mov
or
and
dec
pushf
or
xorb
add
push
movsl
add
lods
cmp
dec
sub
push
out
out
nop
scas
test
and
ret
mov
xor
dec
je
jb
fsubl
mov
or
es
cmpsb
sbb
movsb
pushf
lahf
jl
dec
ret
movsl
cs
inc
aas
negb
arpl
push
aam
loopne
inc
cmpsb
xchg
xor
fwait
jbe
xor
inc
push
les
jne
int
adc
fcompl
outsb
dec
inc
rcrl
add
ret
sti
push
jl
sub
dec
enter
sub
jmp
ds
inc
push
lahf
mov
xor
ljmp
sbb
mov
xchg
dec
mov
pop
lret
arpl
ret
iret
xor
lods
jg
push
shrb
push
rorl
das
addr16
cmp
imul
xchg
decb
iret
add
mov
movsb
outsl
sub
push
in
sbb
notl
mov
gs
pop
scas
movsb
sbb
pop
push
sbb
mov
mov
inc
push
call
pusha
cmc
scas
mov
negb
lahf
inc
ret
pop
fidivs
jmp
add
push
mov
sbb
jecxz
mov
lods
loop
inc
pop
popa
clc
sub
push
and
sub
popa
into
lock
in
jle
xchg
jo
aas
inc
lret
shlb
in
popf
pusha
int3
dec
push
stc
and
pop
jmp
out
cwtl
sbb
mov
cmp
shl
mov
inc
push
sub
xor
xchg
loope,pt
sub
mov
mov
icebp
push
add
andb
and
xlat
mov
ficomps
or
pusha
ds
arpl
xchg
jne
adc
addr16
in
cmp
pop
inc
dec
js
or
xor
cmc
pushl
lret
pop
sbb
dec
or
xchg
jmp
das
stos
and
mov
inc
js
gs
shll
sbb
jmp
lods
sub
loopne
jl
xchg
insb
mov
sbb
mov
xor
xor
mov
mov
or
imul
lret
ror
pop
jo
pop
jmp
xchg
daa
leave
test
dec
pushf
lret
subb
cmc
shlb
sbbb
repz
jmp
jle
shl
and
xor
std
mov
cwtl
add
loopne
nop
mov
aad
push
jae
push
pusha
fildl
jno
push
add
mov
shlb
popf
xchg
cmp
loope
jge
fisubrl
sub
daa
jmp
pop
idivl
fildl
fwait
into
jne
mov
pusha
dec
test
imul
int
cmp
inc
adc
pop
sub
negl
popa
sbb
dec
pop
lds
push
sbb
sbb
cld
addr16
sbb
mov
out
fstpt
jnp
sbbb
mov
sub
mov
test
jp
ss
icebp
pop
out
inc
shrl
xor
test
xchg
stos
or
std
and
and
adc
sub
inc
icebp
inc
push
lcall
sbb
cmpsb
and
mov
push
pushf
jno
cmp
test
arpl
rcr
into
cmpsb
scas
rep
std
fdivr
imul
cmp
lock
clc
fdivrp
adcl
pop
xor
xchg
xchg
pop
jo
adc
roll
in
lock
in
mov
divb
test
xor
pop
push
mov
pop
xchg
mov
and
std
shrl
ljmp
mov
push
dec
lret
andb
and
mov
lret
xchg
mov
movsl
inc
adc
clc
data16
push
xor
xchg
mov
mov
int
dec
adc
cmpb
pop
ret
and
nop
out
daa
loopne
mov
sub
dec
rcrb
in
pop
mov
mov
fwait
leave
push
xchg
jmp
push
stc
xchg
mov
xor
incb
pop
es
sub
sub
inc
and
andl
cmp
loope
lahf
push
pcmpgtd
jmp
jl
daa
jl
and
pop
jb
loope
mulb
push
daa
and
sbb
jmp
loope
mov
out
imul
lods
inc
lds
cmpsl
addr16
js
cmp
and
add
addr16
cmp
popa
lock
and
movsb
pop
movsl
sahf
dec
ss
xlat
lds
in
xchg
xchg
jge
and
shll
dec
adc
in
lret
inc
sti
inc
xor
test
sbb
aam
adcl
mov
das
mov
scas
xchg
xchg
pop
gs
sbb
mov
fcoml
sbb
mulb
cmc
push
mov
decl
pop
xacquire
sbb
sahf
ret
or
loopne
aas
mov
imul
push
popf
pop
in
jno
jnp
mov
jle
cmp
sub
xchg
xchg
jnp
ljmp
scas
into
adc
mov
sub
xor
and
cmp
fldl2t
dec
dec
pop
or
mov
rcrb
mov
xchg
test
sbb
pusha
push
insl
adc
mov
sbb
sbb
pop
arpl
outsl
data16
out
pop
sbb
pop
jp
push
ds
jnp
mov
in
xor
jne
imul
inc
ds
cmp
cmp
adc
inc
enter
fdivr
es
call
mov
dec
xor
push
cmpl
popf
scas
pop
sahf
xchg
cmpb
cmpsl
test
daa
std
imul
and
lcall
scas
inc
fbstp
cmp
clc
pop
pop
cmc
imul
xlat
inc
pop
repnz
insl
pop
cmp
ljmp
adc
xchg
rcr
movsb
faddl
fdivl
inc
cmpsl
mov
iret
and
inc
popl
xchg
addr16
aad
or
fptan
jecxz
jg
aaa
hlt
xor
sub
cltd
pop
ss
imul
iret
adc
jmp
std
lods
or
pop
leave
xor
jbe
add
pop
cmp
sub
sub
ja
or
or
outsl
and
dec
das
xor
xlat
jmp
sub
int
ds
mov
mov
mov
or
stc
mov
loope
out
cwtl
call
std
adc
stos
dec
jg
xlat
sub
fdivrl
cmp
cmp
popa
jnp
mov
ds
inc
rcrl
les
lcall
std
and
test
cwtl
scas
sub
rcrl
bound
jge
rolb
jl
push
pop
ret
es
cmp
inc
pop
outsb
xor
lock
test
push
and
insb
fld
popf
dec
imul
mov
sbb
aas
inc
inc
jae
sub
sahf
push
mov
scas
les
sarl
rol
cltd
stos
inc
mov
push
aam
xor
xchg
adc
popf
sub
mov
mov
std
enter
pavgb
and
and
sbb
in
lds
in
xchg
adc
hlt
shl
sbb
or
jmp
hlt
mov
mov
pusha
xchg
int3
divb
xchg
inc
out
ret
dec
sub
jo
shrb
fnstsw
jle
xor
movsb
or
xor
loop
ficoml
mov
push
in
cmc
js
pop
pop
addr16
ret
adc
adc
and
mov
in
js
fldenv
out
mov
xor
imul
push
stos
or
pop
inc
push
in
mov
les
stos
lret
ret
push
popf
add
lcall
xchg
je
out
add
jge
mov
xchg
mov
xchg
pop
loop
filds
lods
out
popf
mov
adc
push
shrb
mov
or
xchg
push
divl
dec
nop
mov
mov
add
push
stos
dec
arpl
add
inc
sub
ja
xor
sbb
pusha
pushf
scas
repnz
pushf
adc
je
rcrl
adc
add
jb
xor
cld
pop
shl
jnp
es
jge
and
jbe
lcall
ds
cmp
lock
clc
cmp
dec
jne
ret
mov
adc
and
or
int3
dec
inc
loop
fisubl
sbb
dec
jns
adc
lcall
jmp
mov
mov
push
push
inc
sub
xchg
jae
idiv
lcall
cmp
add
push
push
jb
sbb
inc
cmp
nop
and
dec
loop
jno
or
insb
pusha
mov
je
lods
cltd
pop
mov
out
dec
adc
inc
jmp
mov
inc
inc
mov
ljmp
xor
rcrb
mov
iret
lahf
xorb
push
mov
or
mov
or
addr16
adc
insl
pop
jp
adc
add
mov
xchg
xor
sbb
movsb
mov
and
test
add
xor
call
imul
cmc
pop
inc
inc
inc
cmp
clc
sahf
mov
sbb
fistpl
xor
push
std
add
sbb
and
fstp
mov
andl
jle
push
push
or
repnz
lcall
int
and
push
jnp
mov
jg
ljmp
inc
in
in
dec
jecxz
rcl
xchg
mov
mov
inc
xchg
cld
int
fistpll
jecxz
mov
add
pop
pop
pop
xor
pushf
ret
dec
in
inc
pop
popa
mov
cmp
xor
aad
es
test
and
sti
out
loop
loope
test
cltd
mov
jp
adc
call
push
sbb
mov
jo
das
jo
call
shll
enter
sub
mov
cwtl
lahf
pop
pusha
fstps
cmc
imul
or
dec
inc
pop
test
mov
xor
dec
pop
inc
pushf
repnz
mov
sub
dec
or
cmpsl
test
data16
cmpsb
push
add
outsb
xchg
add
popa
pusha
mov
mov
das
cmpsb
push
in
xor
jno
sbb
xor
jp
imul
cmp
shrl
scas
adc
xchg
call
lret
xor
or
xsha256
cmpsb
push
fsubs
pop
sbb
mov
or
xchg
int3
cmp
pop
sbb
push
sbb
aaa
mov
mov
loop
cltd
popa
data16
fldlg2
xlat
cs
daa
inc
add
sub
fcompl
pusha
mov
jl
lret
movsb
jle
cmp
mov
sbb
sarb
push
pop
in
xchg
mov
loop
xchg
sub
xchg
jl
cmp
test
push
or
popa
dec
mov
xchg
aam
or
xchg
insb
sub
sarb
loopne
es
dec
push
sarl
lods
jae
dec
dec
and
sbb
pop
les
addl
pop
outsb
and
add
push
idivb
insb
xlat
pop
jge
ret
mov
lods
cmp
pop
and
es
popf
cmp
dec
lds
in
xchg
inc
data16
fdivl
loope
xor
dec
mov
daa
mov
in
arpl
cli
sti
push
push
sub
push
dec
into
cmpb
imul
scas
adc
dec
addb
jo
jo
inc
lock
push
in
scas
mov
add
dec
mov
or
mov
out
dec
aam
push
movsl
std
hlt
add
fs
dec
icebp
mov
cmc
mov
cmp
mov
add
int
mov
xchg
xchg
jl
lea
push
scas
xor
aad
push
pop
lret
xchg
mov
push
mov
clc
enter
rcll
mov
faddl
mov
call
imul
out
stos
mov
mov
jp
inc
and
cmp
jno
mov
xchg
push
jle
sub
popf
stc
and
je
inc
in
dec
into
shll
in
cli
xchg
add
cwtl
inc
in
xor
add
inc
push
and
clc
ret
out
cld
pop
repz
mov
popa
adc
lret
adc
mov
fisttpl
fidivrs
frstor
adc
pop
cmp
ljmp
movb
js
les
inc
repnz
dec
or
andb
enter
in
adc
idiv
xchg
xchg
mov
call
rolb
push
xor
aam
stc
add
or
cwtl
pop
rcrb
pop
cltd
fs
pop
inc
pushf
das
adc
int
push
dec
jecxz
inc
mov
push
xor
iret
xor
je
mov
addr16
nop
sub
adc
mov
xor
and
mov
mov
hlt
mov
mov
mov
fwait
std
add
bound
dec
sbbb
ljmp
ret
roll
test
mov
outsb
xchg
dec
and
fbstp
mov
pop
cwtl
mov
inc
mov
clc
cmp
idivb
movsl
addr16
bound
xchg
in
cltd
and
cltd
adc
test
ja
fstl
fwait
sbb
sbb
arpl
call
aam
sub
sbb
cmp
sub
lods
xor
add
push
or
jbe
cvtpi2ps
and
adc
ret
pusha
sub
ljmp
pop
insl
popa
pop
popf
notb
mov
sbb
fs
shlb
jb
rorl
xor
mov
pop
adc
test
dec
rcr
or
out
xor
xchg
lahf
loope
fnstcw
jbe
je
in
hlt
cmp
lret
out
aam
cmp
movsb
and
subl
fmull
sarb
jbe
cltd
dec
cld
loop
lds
repnz
jae
lahf
in
ljmp
jnp
lret
mov
cmp
xor
pushf
loop
sbbb
inc
mov
stos
push
xchg
and
xor
dec
cmp
stos
ljmp
push
xor
jnp
or
inc
mov
frstor
pop
and
or
int3
mov
pushf
sub
xor
or
arpl
xor
mov
jmp
add
das
popa
insl
and
or
xchg
negl
dec
sbb
inc
dec
mov
mov
add
push
sarl
movsl
inc
mov
adc
lods
dec
jnp
xor
loop
inc
mov
sbb
inc
imul
js
loope
test
xor
or
inc
cmp
negb
xor
inc
jae
mov
xor
rorb
aam
movsb
jne
ffreep
aam
stc
pop
xor
rep
sbb
pop
jae
or
dec
nop
mov
jbe
repnz
xor
jp
and
push
outsb
mov
enter
dec
mov
test
inc
subb
inc
or
or
cmp
ljmp
and
mov
iret
sub
daa
inc
out
in
or
das
in
push
mov
or
jo
out
clc
clc
fwait
mov
outsb
adc
repnz
adc
aam
jb
add
es
and
lret
or
out
sub
or
sbb
mov
hlt
xchg
mov
repz
inc
mov
inc
int
movsb
lcall
mov
sub
inc
or
cwtl
pop
cltd
mov
lret
jbe
lea
xor
ret
xchg
xor
sbb
sub
repz
xchg
push
les
lcall
push
pop
in
in
xchg
or
stc
testb
dec
mov
pop
loope
popa
adc
push
pop
sahf
jecxz
stos
add
mov
cltd
or
cld
cwtl
cwtl
dec
test
cmc
xchg
add
loope
cmp
sbb
xchg
movsl
mov
dec
push
aas
pop
js
sbb
pop
xchg
add
pop
int3
lret
inc
jp
cmc
mov
mov
clc
cmp
sbb
lea
aad
test
push
cmpsb
mov
scas
lahf
adc
fldt
mov
cmp
in
push
aad
xchg
sub
inc
nop
lock
mov
adc
push
push
movsl
es
ljmp
add
lret
lock
jge
rep
xor
sbb
adc
ret
test
sub
cld
pushf
enter
jb,pt
adc
mov
mov
add
pop
das
imul
iret
xor
inc
aaa
int
jmp
and
xchg
ljmp
jb
notb
insl
loopne
add
hlt
divl
stos
adc
mov
add
jns
sahf
movsb
leave
movsl
incb
rcrl
movsb
insb
inc
mov
and
ljmp
adc
xchg
lods
int3
mov
push
ds
and
jp
and
or
push
add
scas
fwait
dec
sbbb
cltd
jo
hlt
jnp
fimull
and
xor
mov
mov
or
iret
mov
cmp
push
dec
in
cld
push
in
psubw
fiaddl
or
leave
jns
ljmp
sarl
arpl
pop
stos
test
rolb
cmc
cli
mov
das
pop
addr16
mov
test
jle
testb
cli
lret
and
add
jmp
insb
pop
add
sub
in
sub
sub
add
push
popa
pop
cld
stos
shl
lds
adc
sar
or
fsubs
push
iret
test
cmp
es
cwtl
jecxz
and
push
mov
rol
mov
jle
aas
jmp
mov
xchg
fbld
psrlq
dec
jne
xor
add
sbb
cmpsl
fildll
mov
pop
dec
xchg
inc
push
ljmp
rcll
into
lret
mov
roll
sub
mov
push
lds
or
xor
ret
ds
cmp
add
in
or
outsl
push
lock
jns
xor
stos
mov
int
mov
sbb
mov
cli
decl
fwait
lock
out
pop
mov
ljmp
movsb
sbb
cmp
xchg
mov
aam
dec
test
or
jb
dec
popa
and
sbb
cmp
pop
cld
jle
pop
es
mov
js
test
pop
std
xchg
cmp
dec
out
dec
das
or
std
fstl
cmp
mov
popa
cmp
pop
mov
cltd
push
repnz
push
fcoml
push
push
cmp
push
sbb
push
mov
xchg
and
add
test
out
or
inc
pop
push
lods
sbb
scas
mov
mov
push
dec
xor
sub
pop
pushf
and
into
rorl
testl
into
mov
pop
mov
outsb
sbb
sub
jo
in
jp
fiaddl
cltd
or
out
mov
and
bound
xor
xchg
mov
in
adc
call
repnz
dec
loop
or
add
mov
iret
dec
mov
adc
and
and
fsin
nop
stos
mov
shlb
loopne
test
jmp
stos
test
rcrb
add
hlt
cmp
data16
mov
mov
dec
push
movb
add
add
pop
jmp
outsb
icebp
mov
repz
jo
fnsetpm(287
or
mov
scas
push
jmp
jle
in
push
outsb
pop
ret
mov
jg
mov
adc
xchg
repz
ss
xlat
loopne
clc
rcrb
scas
mov
jge
xlat
movsb
nop
mov
sahf
sbb
popf
and
negb
mov
sub
ja,pt
and
les
ret
sbb
fisttpll
or
jnp
repz
cmpsb
pusha
adc
cmp
add
data16
xor
dec
call
jo
clc
mov
loop
movsl
mulb
dec
or
out
sub
in
ljmp
fsub
in
imul
push
movsl
dec
out
mov
sbb
mov
test
sub
xchg
and
jne
inc
or
test
or
daa
pop
mov
cmc
repnz
xor
mov
xor
dec
divb
lret
dec
or
jge
add
mov
jge
adc
pop
xchg
pop
jp
sub
adc
or
out
dec
lds
aam
jecxz
pop
in
mov
pop
out
sbbb
jne
push
jne
fwait
pop
andb
int
and
rorl
sbb
enter
mov
add
mov
sub
push
cwtl
icebp
inc
pop
aas
jns
xor
xor
dec
insl
je
pop
pushw
test
inc
jo
stos
in
rorl
and
fsubs
inc
cmp
test
push
testl
xchg
jmp
or
mov
lods
mov
dec
pop
fistl
adc
inc
pop
and
cwtl
fstpt
or
out
jb
and
cvtps2pi
popf
xchg
xchg
scas
cs
into
jne
fisubl
sbb
pop
sub
cmc
xchg
incl
iret
add
dec
inc
add
push
jb
sub
clc
inc
bnd
test
dec
jl
mov
add
bound
pop
ja
add
fwait
movsb
inc
sbb
out
lea
sub
pextrw
stos
ja
add
sarb
rorb
out
cmc
scas
shl
jns
push
ds
mov
popa
repnz
inc
lods
cli
cmpsb
sbb
mov
icebp
outsb
push
sub
xchg
fnsave
push
cmpsl
shll
roll
mov
cld
lret
nop
and
sub
push
pop
push
in
dec
rcrb
jg
jmp
popf
push
mov
xchg
ja
nop
cld
xchg
fdivl
push
aaa
push
adc
mov
lret
cmp
or
mov
andl
xchg
pop
std
mov
mov
popa
adc
mov
jg
mov
pop
out
sbb
cmp
sbb
insl
sub
mulb
bound
push
shrb
add
rcl
stos
dec
inc
das
orl
daa
cli
aaa
add
ror
rorl
add
je
pop
movl
pushf
ljmp
pop
dec
xlat
mov
call
mov
jb
ss
pop
mov
inc
les
stc
ror
pop
icebp
xchg
pop
xlat
enter
mov
add
mov
xchg
and
mov
sarb
clc
rol
xchg
sbbl
pusha
pop
add
mov
gs
lahf
inc
movb
mov
repz
leave
scas
or
pop
shlb
insb
dec
add
sbbl
imul
jne
notb
xchg
out
and
rcrl
lret
fldl
and
xor
inc
rolb
test
sbb
mov
outsb
divl
dec
fld
inc
pop
sarb
cli
pop
push
sbb
mov
in
mov
aaa
add
mov
fsub
pop
mov
pop
loop
pop
mov
test
sub
xchg
xor
or
xlat
mov
mov
pop
insb
add
dec
sub
mov
movsb
jg
inc
dec
xchg
mov
call
repz
sub
nop
push
lcall
inc
jge
xor
mov
and
sub
or
pop
jo
dec
inc
cli
lods
jae
cmp
sbb
inc
mov
mul
test
fwait
mov
arpl
lret
imull
mov
mov
add
jmp
sbb
sbb
add
repz
out
ljmp
push
dec
repz
dec
push
das
ds
mov
rol
and
push
cmp
push
xchg
inc
mov
mov
aaa
jecxz
stos
xlat
lea
cmp
outsl
movsb
xor
scas
xchg
stc
lods
fsubrp
fldl
pop
jmp
test
pop
cwtl
mov
cli
jl
or
mov
xor
adc
aam
cmp
je
lret
fildll
jno
mov
cmpsb
and
cwtl
fsubp
test
or
les
fmull
xchg
cli
mov
xor
xor
into
int3
aad
movsl
adc
test
jbe
fsubl
addr16
dec
in
jno
out
nop
adc
or
dec
pop
push
xchg
sub
xlat
outsb
popf
push
and
js
mov
aad
push
fdivrl
lcall
stos
push
xor
out
jge
sbb
add
in
cmc
shlb
gs
scas
popa
nop
jbe
sub
sbb
leave
jns
dec
and
das
lahf
aas
aaa
ja
jmp
imul
cmp
ret
sbb
pop
jb
cltd
mov
fcomip
sub
sbb
movaps
adc
jmp
cmp
xor
adc
clc
xchg
or
fmull
add
pop
je
sbb
mov
mov
movsl
sbb
sbb
push
jp
push
push
fsubl
lds
insl
adc
mov
rorb
lahf
aas
cli
fisubrl
stos
or
sub
xlat
or
xor
nop
icebp
or
fisubs
and
push
pop
cld
adc
test
push
mov
cmpsb
daa
mov
cmp
jae
adc
mov
sahf
stos
xchg
push
or
shl
xchg
mov
aaa
or
jl
xlat
fadds
pop
push
addb
and
lea
or
in
shll
adc
jno
call
adc
pusha
jmp
mov
and
pop
and
pop
cmp
jge
lods
icebp
inc
cs
js
loopne
movsl
adc
or
and
lcall
mov
add
in
cltd
pop
mov
test
inc
mov
pop
mov
cld
push
cmpsl
push
mov
imul
enter
es
popw
jae
dec
daa
daa
dec
repz
stos
or
in
adc
lds
shrl
mov
xor
jp
push
popf
pop
jno
test
pop
test
dec
and
notl
into
mov
into
hlt
out
or
add
pop
adc
rcrb
mov
mov
int
movsb
ds
ret
jnp
push
add
test
setb
arpl
adcl
pushf
ret
push
adc
mov
sbb
mov
ret
aaa
jns
push
jns
push
loope
in
push
subl
dec
notb
aaa
fwait
gs
sbb
inc
je
or
cmpsb
cwtl
cmpsb
jmp
cmpsl
push
test
cltd
cmp
lcall
and
jge
jns
mov
cld
xchg
sub
aas
lods
pop
ja
sbb
lret
lret
lret
xchg
leave
xor
dec
hlt
xchg
mov
lods
jp
push
sub
inc
adc
jl
int3
adc
mov
lods
test
hlt
dec
or
jnp
js
lahf
xor
dec
cmpsl
pop
call
jne
xchg
loop
jmp
inc
icebp
pop
imulb
fisttpl
test
cmp
cmpsb
pop
jne
repnz
mov
leave
arpl
cmp
imul
sbb
pusha
in
outsb
pop
sarl
add
sub
call
mov
sbb
jl
mov
insw
roll
sbb
scas
xchg
aam
or
orb
iret
adc
stc
mov
lock
xor
mov
dec
scas
cmp
pop
fnstenv
inc
sbb
arpl
les
lock
and
adcl
mov
push
out
fistpll
rcrb
or
aam
cmc
and
ljmp
xchg
and
faddl
sub
stc
xchg
add
clc
ja
push
shll
mov
xor
cmpsl
sbb
loop
sub
lret
loop
popf
mov
fcmovb
jecxz
inc
cmp
lcall
adc
sarb
repz
sahf
mov
cmc
js
frstor
fwait
sub
dec
push
mov
lds
adc
pop
cmp
cld
cmp
lret
push
fsubl
xchg
into
sbb
in
pop
mov
lds
push
sub
push
gs
mov
lea
and
mov
daa
or
mov
in
cs
movsb
scas
cmc
faddl
xor
dec
outsb
fcmovu
imul
and
mov
adc
ljmp
in
outsb
xlat
lock
xor
dec
or
mov
adcl
movsb
cwtl
mov
mov
scas
dec
ss
bound
fstl
fcoml
push
push
mov
mov
mov
mov
dec
data16
and
aas
sub
shll
out
les
xchg
cmpsl
into
xor
fiaddl
loopne
jo
mov
mov
pusha
pop
jp
xchg
add
test
movsl
and
sbb
dec
push
lret
push
sbb
pop
rorb
pop
jnp
insl
cmpsb
jae
out
ror
rclb
rcrl
add
aas
fwait
aam
cmp
stc
mov
push
and
arpl
mov
movsl
or
and
push
shrl
mov
mov
aad
pop
repz
push
inc
push
outsb
jb
jecxz
push
mov
bound
shll
xchg
jne
in
cs
fs
ret
aaa
sbb
xchg
dec
sbb
sub
in
push
gs
mov
shlb
and
xchg
test
cmp
dec
dec
mov
aaa
fnstcw
sub
jmp
adc
mov
or
in
pusha
stos
lock
das
and
mov
pop
std
pop
jmp
pop
cmp
dec
xor
shll
jecxz
jbe
mov
rolb
loope
inc
cmp
push
and
pop
daa
roll
dec
mov
xchg
jne
push
xchg
jmp
inc
add
stos
ds
gs
in
cmp
mov
loope
or
dec
aam
mov
push
fistpl
clc
repz
pop
test
mov
bound
mov
xchg
enter
out
pushf
adc
sub
inc
cli
dec
xor
daa
pop
mov
loope
or
mov
mov
and
cwtl
mov
and
andl
fnstenv
imull
and
pop
insb
testl
std
out
mov
jae
xor
adc
and
sub
fildll
js
or
sub
arpl
in
enter
sub
mov
pop
ffreep
ljmp
mov
shrl
pop
mov
dec
xchg
and
add
mov
xchg
std
push
push
push
and
test
mov
lret
in
rcrl
ljmp
pop
push
add
lahf
jl
mov
repnz
push
and
insb
add
mov
or
mov
ficoms
adc
mov
ret
nop
adc
push
xchg
sub
xlat
sub
pop
test
rorl
xchg
sbb
pop
push
adc
sbb
imul
cmp
push
rclb
pop
xorl
sbb
daa
mov
jno
jno
mov
loop
mov
and
mov
div
mov
shr
xorb
cltd
bound
fistpll
lods
and
sbb
xor
inc
mov
add
mov
sbb
xlat
mov
imul
xchg
bound
stos
mov
sub
inc
icebp
jle
xchg
mov
adc
cmp
jns
mov
mov
sbb
adc
movsl
test
sbb
in
int3
mov
mov
inc
lahf
cmpsb
push
jge
rcrb
add
icebp
outsl
or
negl
fistpll
xchg
cltd
lods
fsubr
and
outsb
movsl
mov
jo
call
dec
jge
fcomi
xchg
sbb
mov
fcoms
or
mov
subl
shr
aad
es
jmp
xor
add
ror
jnp
outsb
lret
xor
je
fbld
call
imul
lcall
fisubrs
jle
dec
jne
sbb
rcrb
sbb
lea
sahf
imul
sbb
jmp
ds
fdivrl
outsb
out
sbbb
mov
lret
or
sahf
outsb
adc
pop
add
mov
int
iret
movsl
inc
mov
jne
shrl
and
xor
push
dec
sbb
sub
dec
pop
push
insl
pop
dec
outsb
xchg
pushf
mov
testl
cli
imull
pop
cmp
adc
imul
xor
movl
loope,pn
dec
mov
jmp
ljmp
jno
lods
push
repz
inc
add
sub
inc
xor
mov
jo
xchg
lods
movsb
adc
rol
dec
and
mov
movsb
push
jp
mov
lea
jae
adc
xor
movsl
mov
pushw
insb
out
xor
hlt
test
jmp
add
and
add
xor
push
imul
js
sub
sbb
loop
pop
mov
pop
jecxz
loop
inc
inc
add
arpl
std
xchg
inc
push
and
scas
mov
mov
gs
movsb
sub
adc
push
add
inc
sub
mov
inc
nop
sub
add
fwait
shl
xchg
cs
adc
jle
xlat
and
xchg
in
push
in
arpl
cmp
mov
pop
inc
and
mov
sub
jl
sti
push
sub
fadds
nop
add
add
in
stos
mov
outsl
cmp
loope
popa
add
push
cmc
aad
mov
fcmovnu
pop
rcrl
gs
push
adc
inc
jae
mov
iret
repz
add
add
out
sub
stos
jle
ja
xchg
lods
pop
jl
aaa
or
jp
fs
shlb
inc
push
mov
sbb
mov
lcall
cmp
lret
and
mov
jnp
jbe
add
jmp
sub
push
rorb
or
movsb
mov
scas
stc
or
ret
push
xchg
or
push
xchg
lds
test
fdivs
aaa
mov
lea
outsb
pop
shlb
sbbb
cwtl
loopne
out
insl
leave
icebp
int3
xchg
aaa
bound
fcomps
jae
jnp
pop
das
mov
repnz
mov
pop
aas
sub
pop
mov
inc
fisubrl
sub
aam
or
icebp
lret
outsl
ja
imull
fmulp
pop
inc
xor
fidivs
sbb
out
sbb
fwait
negl
cs
mulb
das
sub
jno
cmpl
pop
int
je
cmpsl
add
psrld
rolb
pushf
push
int3
lea
std
sahf
push
arpl
cwtl
and
inc
push
xor
or
fsubr
lds
pushl
cmp
push
div
imul
jg
movsl
pop
mov
mov
add
add
sbbl
and
adc
xchg
and
jge
push
inc
cmp
push
or
cmp
andb
xor
aas
in
xchg
cmp
add
frstor
pop
lods
pop
pop
jo
mov
pop
and
sub
push
and
push
xchg
stos
jnp
out
inc
test
xchg
mov
mov
test
or
dec
testl
lds
and
pop
sbb
mov
inc
in
mov
mov
lock
in
hlt
ret
iret
jg
inc
and
dec
das
iret
sarb
fimuls
jecxz
add
adcb
loopne
xchg
inc
test
stc
push
adc
pop
xchg
in
cmp
mov
dec
inc
stos
xchg
pop
xchg
pushf
scas
mov
outsl
fucomp
xor
cmpl
adcl
inc
dec
sub
insb
or
arpl
loopne
mov
and
jg
add
cmp
shl
pop
jbe
jp
fwait
sub
or
fcomp
popa
mov
xchg
bound
xchg
call
or
pop
nop
mov
mov
mov
pop
and
pop
clc
nop
pushf
adc
inc
ret
adc
cmp
mov
imul
mov
and
lods
xchg
or
icebp
cmp
cmpsl
call
ret
flds
inc
cmp
test
jns
cli
mov
add
mov
mov
pusha
adc
lea
ficomps
push
pushf
mov
jg
insl
mov
and
out
jg
sahf
dec
inc
pusha
xor
jae,pt
sub
out
push
fwait
xor
cs
pusha
fisubrs
mov
ficompl
jns
lret
cwtl
test
sub
jle
cwtl
mov
loope
xchg
out
scas
or
cmp
sbb
jge
jnp
jnp
int3
out
lods
pop
xchg
dec
lea
sar
cltd
mov
pusha
lea
xchg
push
std
xchg
ss
out
mov
repnz
dec
mov
push
lret
nop
inc
xlat
xor
stc
in
add
imul
or
lret
sbb
push
inc
pop
in
ffree
lret
scas
inc
ljmp
pop
scas
jg
cli
sti
testb
daa
xor
mov
adc
lds
jns
sub
xchg
add
sahf
fwait
jecxz
lods
xchg
pop
push
xchg
movsl
dec
pop
out
pop
add
push
fwait
push
or
lods
out
mov
mov
mov
aaa
jle
test
dec
jecxz
inc
mov
pop
inc
test
push
add
cmp
jne
mov
sbb
lock
lods
js
push
pop
cmp
push
dec
add
pop
adc
cmovg
fstpl
pop
mov
mov
scas
jp
lahf
or
sbb
jge
dec
dec
and
scas
call
sbb
fwait
ret
jg
repnz
insb
es
sbbl
cmpsl
fsubp
mov
notb
icebp
fsub
xor
enter
mov
pushf
and
sbb
jle
nop
inc
insb
sti
pop
jb
add
mov
mov
movsb
mov
fcompl
inc
pop
rorb
mov
mov
and
sub
lcall
xchg
arpl
mov
sarl
push
inc
dec
loop
cmpl
leave
nop
mov
jge
cs
mov
arpl
orb
xchg
dec
adc
inc
adc
mov
ss
test
mov
lahf
cli
pop
jp
divl
jg
add
test
mov
shr
push
call
inc
add
mov
rcrb
jl
inc
in
cmp
jae
fwait
mov
ds
adc
add
xor
in
fcoms
rorb
cmc
mov
inc
or
xchg
jecxz
mov
ret
in
cmpb
ljmp
sub
adc
mov
lret
les
dec
mov
icebp
push
sbb
loop
jo
and
testb
jne
vpmovm2q
lods
and
cld
cmp
fidivl
loopne
mov
dec
andl
push
xchg
lret
outsl
ds
and
sti
stc
int
stc
test
or
movsl
fisttpll
iret
xor
jp
inc
test
or
jg
mov
fdivrl
and
push
pop
xchg
pusha
ja
push
loopne
scas
add
insb
mov
jl
push
mov
mov
int
pop
fistpll
jae
mov
daa
xchg
xchg
dec
fnstenv
inc
stc
inc
subb
sbb
jg
pop
adc
pop
xchg
add
adc
mov
fwait
and
fbld
sgdtl
xor
ffreep
sbb
cmp
test
push
hlt
daa
ljmp
fdivl
cmc
jmp
push
cmp
cltd
test
dec
or
xchg
scas
pusha
pushf
xorb
push
ljmp
cmp
and
leave
mov
push
fs
insl
dec
dec
cmp
mov
inc
jecxz
pop
lds
cmp
in
mov
add
pop
aam
jp
pop
ss
sbb
sub
call
mov
dec
pushf
pslld
cmp
push
cmc
adc
or
dec
mov
repnz
aas
insb
jg
jle
xchg
fadds
cmp
stc
mov
sbb
std
sub
ret
ret
les
insl
scas
out
xchg
hlt
subb
test
bound
insl
sbb
adc
dec
mov
cli
decl
movsl
push
loopne
aaa
cli
dec
mov
les
test
cwtl
adc
mov
pop
xchg
sub
imul
or
jno
aam
jl
pop
addr16
dec
ror
adc
ficompl
adc
add
sub
jns
dec
movsb
rcrl
or
into
push
les
mov
pop
pop
iret
lcall
push
bound
loope
in
lahf
sbb
div
in
das
mov
push
mov
enter
inc
rdtsc
aaa
sub
sub
fwait
add
movsl
sub
mov
push
pushf
xchg
lods
sbb
sub
push
mov
movsl
pop
fisubs
adc
push
cmp
mov
xor
jae
repz
lds
repnz
aas
sbb
pop
jns
fucomip
cs
push
xchg
adc
jne
inc
adc
dec
imul
push
insb
div
dec
movsl
jno
push
jl
mov
sbb
insl
addb
mov
std
insl
sbb
scas
ror
dec
aam
inc
dec
mov
and
js
mov
and
add
pop
add
icebp
mov
shrl
gs
movsb
ret
inc
hlt
dec
and
jae
pop
push
dec
scas
mov
inc
shll
insl
inc
sbb
pop
mov
adcb
test
loope
mov
and
mov
data16
out
rolb
mov
pop
cs
xlat
cmp
inc
mov
add
push
mov
push
push
cmpsb
xchg
into
outsl
test
sbb
imul
mov
sub
pop
jo
call
xchg
mov
and
push
pop
xor
cwtl
pop
sarl
mov
sub
test
lods
xchg
in
dec
jbe
xchg
stc
scas
hlt
dec
cmpsl
imul
mov
scas
imul
imul
mov
scas
lods
ja
mulb
dec
add
sub
and
push
popa
sub
mov
lods
clc
add
addr16
sub
pop
mov
sub
out
push
enter
cmc
hlt
adc
mov
push
mov
and
cld
mov
fdivs
inc
xor
mov
cmpsb
lret
mov
push
call
scas
adc
cs
push
push
push
in
orb
dec
lret
cmpl
pop
movsl
sbb
rclb
data16
xchg
xor
mov
sbb
rorb
ja
jecxz
xor
xchg
stos
dec
push
sub
psrad
in
clc
gs
loope
mov
push
or
out
and
xchg
add
push
inc
ret
inc
lock
ficomps
inc
ss
fwait
test
ja
pop
cmp
inc
lret
mov
mov
sahf
fsubp
pop
xchg
dec
inc
fildll
sarl
mov
mov
and
jne
xchg
xor
idivl
rcr
rcl
or
push
inc
js
mov
cli
sahf
xchg
stos
sub
pop
jns
push
in
xchg
cmc
and
jl
or
cli
loop
sbb
push
pop
int3
sbbl
xchg
sbb
es
dec
in
addb
negb
shlb
and
cmp
aas
cld
icebp
hlt
jnp
enterw
xchg
dec
mov
xor
stc
sti
mov
mov
add
jecxz
int3
mov
gs
cmc
aam
out
loopne
divb
push
lds
ljmp
xchg
and
pop
aad
sub
addr16
negl
repnz
iret
dec
gs
mov
adc
imul
cld
stc
adc
adcl
pop
inc
cwtl
mov
es
adc
mov
fistl
xor
jae
cli
addb
shrl
fsubp
xor
loope
mov
lahf
scas
lock
insb
mov
push
mov
pop
add
sarl
push
mov
clc
cwtl
rol
and
outsb
add
das
mov
pop
mov
push
pop
das
pop
fistpll
cmpsb
add
jg
jbe
cmp
push
push
xor
out
es
ljmp
or
std
inc
mov
dec
xchg
in
js
add
push
ja
add
js
mov
sti
movsl
xchg
adc
xor
xlat
mov
lods
fmul
pop
add
into
lock
pop
fnstsw
fs
sti
sbbl
sub
mov
push
jae
inc
lret
fstl
enter
xor
nop
mov
push
xchg
lret
add
test
clc
jge
aaa
dec
call
pushf
jecxz
out
stc
out
int
inc
lret
mov
or
outsb
das
push
adc
adc
out
aad
mov
xchg
test
jo
and
lods
enter
pop
test
mov
mov
xor
jno
add
pop
pop
ljmp
push
jge
jae
stos
rcrb
and
or
out
mov
sub
mov
test
jno
add
pop
mov
movsl
cmp
mov
shrl
jae
xor
fwait
aam
jge
add
loop
out
fdivrs
ja
mov
sbb
add
fwait
mov
add
stos
fwait
cmp
mov
pop
inc
mov
adc
test
dec
stc
xor
pop
das
repz
ja
sub
adc
push
push
scas
test
clc
pop
in
dec
push
hlt
adc
dec
mov
pop
jg
scas
push
pushf
in
push
sub
jl
push
je
or
sub
push
es
in
push
lret
jo
addl
push
in
mov
xchg
outsl
or
addr16
xchg
leave
push
and
inc
pusha
jo,pn
loop
int3
adc
xor
fidivrl
out
pop
add
jp
shr
ret
test
nop
sub
adc
mov
test
imulb
out
mov
mov
jnp
loop
mov
ds
ret
dec
inc
sbb
cmp
dec
ficoms
cld
pushf
stos
out
sbb
lret
add
mov
xchg
aas
sub
cli
je
clc
and
dec
lret
xor
scas
mov
push
and
mov
cltd
aaa
add
mov
push
shrl
pusha
repz
mov
push
mov
cmp
cmpsb
add
and
lret
mov
testb
mov
fld
xor
adc
call
and
cltd
das
sub
movzbl
xor
dec
or
xchg
out
test
repnz
int3
jns
mov
and
aam
arpl
push
pop
pop
lods
ret
mov
or
ljmp
push
fnsave
add
add
divl
scas
cmp
cmpsb
mov
jne
out
out
xchg
fwait
int
jle
popa
xor
push
addr16
mov
or
push
mov
fsubrs
rep
outsb
xchg
sar
and
or
or
out
push
mov
cmp
call
dec
fs
or
and
cltd
imul
outsb
mov
cmpsl
push
sub
cwtl
adc
jecxz
cmpsl
cmp
xchg
adc
add
sarl
arpl
sbb
fsubs
or
clc
mov
xor
mov
xchg
lds
jno
arpl
inc
imul
repnz
mov
or
cs
std
xor
mov
jns
roll
subb
cmp
lahf
xchg
mov
mov
mov
fidivrl
push
sbb
mov
push
inc
pop
gs
adc
lds
outsb
out
or
jmp
mov
add
daa
push
cmp
push
fstpt
xor
cmp
jo
shrb
pop
aam
gs
xchg
cli
pop
mov
and
lcall
mov
xchg
or
leave
add
icebp
movsb
lret
test
not
inc
pop
rorb
idivl
rep
sbb
mov
and
popf
loop
and
pop
or
add
es
ljmp
cld
xor
cmpsl
nop
xor
inc
xor
cmp
adc
jmp
jl
xlat
cmp
int3
jno
jnp
clc
test
ret
into
push
cmpsb
adc
mov
jp
sub
out
outsb
mov
scas
cmpsb
adc
cmp
clc
push
inc
dec
xor
dec
jmp
dec
mov
int
sub
mov
lds
leave
jl
vxorps
add
xchg
and
pusha
push
popf
mov
pop
sbb
mov
and
and
shrl
lret
sub
nop
jecxz
pop
popf
cmpsb
clc
stos
add
test
push
pop
mov
xchg
jg
je
cmp
xchg
push
insb
or
sub
mov
in
jg
popf
leave
mov
enter
nop
jnp
and
xor
mov
push
lret
popa
xchg
jb
pop
pop
and
sbbl
jp
insb
mov
jno
jb
and
aad
stos
ljmp
int
sbb
test
lcall
sub
fstpl
shrb
dec
cwtl
add
add
cwtl
pop
sbb
iret
pop
stos
jno
push
pop
dec
scas
sub
or
pop
xlat
test
idiv
pop
jb
mov
mov
cmp
and
mov
or
fs
shlb
mov
sbb
inc
les
adc
mov
sub
adc
sub
imul
mov
xchg
ds
push
dec
jae
mov
sbb
fbld
dec
cmp
test
jno
mov
cltd
mov
cmpsb
xor
cwtl
sub
imul
out
xor
cmpsb
sub
mov
adc
out
out
lods
xor
dec
mov
lods
shlb
and
mov
mov
outsl
aad
fcomp
js
fidivl
add
arpl
mov
rcr
lds
imul
test
cs
add
cmp
out
fimuls
es
roll
rorl
dec
das
lret
mov
cmp
pop
repz
ds
stos
xchg
sbb
repnz
dec
mov
add
cmc
fdivrp
pop
adc
loopne
xchg
imull
loopne
cmp
mov
repz
leave
mov
cmp
movsl
mov
arpl
les
mov
ljmp
or
cld
dec
jo
jp
push
push
or
daa
sti
je
int
xlat
mov
xor
daa
std
into
outsl
sbb
adc
pop
ret
aad
dec
inc
mov
inc
int3
xchg
xor
cltd
in
mov
mov
ja
mov
jl
std
xor
inc
push
gs
stos
cltd
push
dec
mov
jge
sbb
dec
les
sub
popa
js
lock
imul
incb
cmpl
leave
and
sbb
sbb
sbb
lahf
iret
lock
mov
shr
imul
lds
and
sbb
div
xor
jbe
movb
jp
xor
jne
cs
dec
cmp
cmp
adc
mov
or
movsb
mov
mov
inc
ja
inc
and
dec
sbb
daa
popw
dec
popf
ret
fprem1
pop
shrb
lea
sub
daa
sarl
fwait
jl
pop
std
out
lds
arpl
mov
sbb
dec
rolb
mov
punpckldq
loop
lock
jnp
or
lea
or
xor
out
adc
and
pop
into
adc
pop
pop
sub
cwtl
cmpsb
fsubl
and
jnp
push
pop
cmp
adc
js
cmp
push
push
out
sti
or
in
mov
xor
sub
and
jge
ret
sub
sbb
cmp
inc
xor
sbb
dec
inc
lods
dec
loop
push
pusha
sub
dec
icebp
pop
xor
imul
mov
out
daa
adc
xor
scas
pushf
jbe
ror
cs
xchg
repz
sub
sbb
arpl
shrb
dec
xchg
repz
xchg
out
fstps
fidivrs
loope
sub
data16
push
dec
push
push
test
fdiv
and
jmp
cmp
sub
pop
mov
shll
mov
bound
aaa
adc
add
or
mov
adc
mov
mov
dec
loopne
push
jno
sti
adc
in
cltd
inc
faddl
lret
mov
loop
mov
inc
cmc
mov
ljmp
mov
push
negl
pop
cld
jo
loop
sbb
pop
mov
into
in
insb
stos
mov
push
arpl
dec
inc
jo
pop
loope
xor
jg
clc
icebp
push
mov
sbb
xchg
je
add
push
movsbl
xlat
leave
addr16
xor
loope
pusha
add
aad
scas
or
stos
or
imul
or
push
lea
aas
adc
push
sub
sbb
gs
xchg
mov
aaa
dec
mov
ja
cld
loop
fldenv
xchg
xor
lods
mov
cmpsb
adcl
xor
out
push
aas
cmpsl
mov
cmp
arpl
inc
movsl
xchg
sub
cmpsb
shlb
ss
fcoml
add
pop
mov
push
xor
ficompl
pop
and
repz
nop
outsb
add
sub
or
push
push
int
mov
inc
push
incb
icebp
cltd
imul
sub
cmp
inc
int
dec
or
shrb
bound
ds
jbe
nop
ficompl
repz
sbb
rcr
jg
cltd
mov
jmp
fs
or
int
inc
dec
fsubs
in
cmc
add
js
mov
lret
jnp
dec
in
movsb
cs
shlb
sub
jmp
cmc
add
ret
int3
in
cltd
mov
int3
popf
sub
call
ret
idiv
sub
cwtl
jae
cwtl
mov
pop
and
sbb
cld
dec
popa
push
sub
inc
xchg
test
cld
nop
sbb
mov
aaa
ret
aaa
sarb
fs
cwtl
jne
sub
mov
aaa
jl
mov
bound
and
inc
filds
dec
add
imul
movl
mov
mov
push
fs
pop
mov
nop
and
clc
gs
mov
clc
jo
cltd
pop
add
add
popa
test
adc
icebp
outsb
inc
fnstcw
pusha
popa
and
in
cmp
das
xchg
andl
sahf
iret
faddl
cld
in
mov
rorb
adcb
shrl
adc
jbe
nop
test
dec
sub
frstor
dec
jnp
pop
sbb
sbb
idiv
sub
cmp
dec
adc
int
arpl
lock
test
shlb
sub
shlb
xchg
add
push
inc
mov
xchg
adc
jge
dec
and
jnp
ret
test
xorl
cs
or
popf
sbb
stc
inc
jle
adc
mov
sar
lret
xor
notl
fwait
xchg
push
fildll
inc
sbb
or
xor
xor
lretw
js
pop
xlat
shl
cli
movsb
pop
outsb
fimull
scas
and
iret
xchg
and
mov
and
pop
call
pop
dec
shl
cwtl
in
subl
push
in
xchg
aad
sub
out
mov
test
sti
lods
jno
orl
pusha
inc
mov
mov
dec
mov
cmp
stc
xchg
add
xchg
mov
movsl
scas
push
inc
out
call
mov
loope
in
adc
jae
adc
arpl
test
sar
mov
push
lds
shll
lock
sbb
fsubrs
call
fidivl
sti
add
iret
leave
and
popa
dec
in
cmp
add
repz
or
aam
jl
jns
lret
aas
addb
mov
sub
adc
xchg
out
dec
or
int3
xor
decb
int3
and
ljmp
sbb
mov
jl
mov
fnstsw
lret
dec
add
sub
mov
dec
sbb
shrl
inc
mov
pop
or
ljmp
les
jb
sbb
xchg
push
push
jecxz
sti
fimuls
jnp
push
sahf
jecxz
sub
es
dec
loop
es
xacquire
inc
mov
adc
inc
xchg
jne
ret
into
jo
push
data16
dec
push
aam
adc
inc
aaa
daa
sarl
or
pop
outsl
mov
imul
aaa
and
xchg
xor
lds
xor
pop
xchg
out
shlb
aaa
adc
ffreep
cmp
sub
mov
test
dec
push
jbe
lea
inc
xchg
add
and
or
add
fnstsw
jle
idivl
push
xor
jle
roll
int
sbb
shlb
add
dec
emms
test
dec
mov
test
adc
mov
comiss
pop
inc
add
pushf
sub
stos
xlat
into
sub
xchg
inc
mov
out
stc
mov
mov
mov
lcall
push
push
dec
mov
mov
aad
pop
stc
inc
clc
lds
ret
jecxz
mov
pop
rcl
xor
cwtl
cmp
imul
in
or
mov
adc
xchg
ret
icebp
dec
xlat
outsl
cmc
test
sub
adc
push
add
mov
dec
or
mov
add
and
jb
andl
inc
rorb
ja
hlt
push
cmc
xchg
mov
jbe
xor
lock
or
scas
pop
pop
ja
sbb
les
dec
dec
fwait
dec
ljmp
push
into
ja
mov
jo
sbb
jb
jae
jb
aaa
or
and
fmuls
lea
hlt
push
push
push
mov
pop
int
dec
sub
sbb
and
lods
jnp
stos
loopne
mov
lret
gs
jne
stos
jno
js
cmp
daa
xor
mov
jp
sub
fisttpll
ss
repnz
and
sbb
mov
scas
pop
hlt
xor
sbb
push
idivl
idiv
sub
xor
rcll
rcrl
jmp
dec
inc
push
imul
mov
adc
dec
idivl
pop
or
jae
adc
sub
adc
imulb
xlat
inc
scas
sub
inc
leave
in
ret
push
cmc
jg
pop
mov
and
jecxz
add
jae
and
adc
pop
push
sbb
cli
adc
sbb
mov
mov
cmc
jae
cmp
mov
cmp
arpl
nop
repnz
xor
in
and
ja
or
push
cli
mov
xchg
cmp
inc
loope
sbb
sub
popf
xchg
icebp
in
or
inc
aam
or
jnp
in
pop
mov
lods
cli
and
xlat
dec
jge
mov
and
popf
jmp
ret
ror
test
clc
add
sbb
repnz
and
scas
or
leave
mov
notl
lods
xchg
loop
pop
testl
cmp
xchg
test
in
out
cwtl
leave
dec
add
xor
push
xchg
lds
loope
mov
or
dec
lret
arpl
xchg
cmp
loopne
aas
mov
sub
cli
push
mov
das
insb
test
fisubl
cltd
into
jne
enter
lock
in
fisubl
and
mov
andb
int3
jb
lds
aas
cmp
repz
pushf
cmp
push
or
mov
mov
ret
mov
les
js
mov
test
addr16
cld
push
inc
repz
push
out
cmp
inc
outsl
xlat
leave
in
xchg
cmc
bound
and
aaa
mov
inc
loopne
jl
mov
inc
test
sub
lock
lea
out
in
pop
jl
iret
ret
mov
pop
adc
call
pop
out
xchg
repnz
movntps
inc
xchg
in
out
push
movsl
hlt
xlat
push
ja
rorl
or
loopne
bswap
jmp
shld
adc
mov
pusha
and
push
xor
xchg
dec
leave
cmpsl
je
insb
into
sub
pop
rcr
loopew
enter
in
mov
popa
add
jge
js
pop
inc
dec
push
mov
sub
loop
sbb
pushf
aaa
mov
aad
mov
mov
les
sahf
jbe
out
jno
lret
push
add
push
jbe
adc
lret
dec
cmpsl
jmp
stc
enter
daa
daa
sahf
adc
test
xor
jmp
mov
and
dec
jmp
push
or
daa
jge
fwait
xor
ja
adc
mov
mov
pusha
aaa
mov
stos
sub
pop
xchg
imulb
fmull
or
scas
shlb
in
jge
movsb
outsl
hlt
push
dec
imul
js
andl
dec
imul
fwait
push
inc
test
dec
pop
fimull
rol
je
scas
cmp
das
in
jmp
loope
pop
pop
sub
popa
and
xor
jne
push
xchg
cltd
lret
mov
iret
inc
xor
adc
push
aaa
fisttpl
loope
jns
test
test
aas
mov
lret
cmp
fimuls
mov
icebp
aad
adc
sub
shlb
jb
push
pop
loope
mov
sub
push
jp
jle
adc
cmp
sbb
xchg
cltd
push
mov
test
pop
enter
jns
add
ss
lret
mov
mov
inc
ds
pop
add
addr16
hlt
dec
sbb
xor
popf
or
shrb
lcall
aas
jno
xor
neg
rcl
shlb
pop
mov
fsubrl
mov
addb
ss
xrelease
xlat
lods
add
leave
data16
xchg
pop
jbe
inc
sbb
test
loope
adc
push
sbb
hlt
push
mov
rcll
jp
xor
jp
xchg
add
mov
iret
dec
daa
xchg
cld
cld
sbb
mov
sub
xchg
shrb
cmp
mov
test
adc
inc
sub
sbb
addr16
adc
pop
notl
or
sbb
mov
idivl
or
xchg
dec
dec
fwait
cs
sub
ss
push
push
out
pop
cmpsl
ret
add
mov
loop
test
call
sub
lcall
daa
sub
outsl
xchg
push
je
pusha
scas
cmp
jbe
adc
or
test
jg
xchg
push
fsubp
pop
adc
sbb
dec
out
sub
loopne
fistpll
das
xor
subb
pop
xchg
in
test
xchg
pushl
daa
aam
bound
rcpps
lea
dec
mov
ljmp
je
std
xorl
and
iret
bound
mov
xchg
mov
aas
add
push
lcall
setge
mov
pushf
sti
es
push
roll
jg
arpl
cltd
iret
stos
jmp
in
dec
out
adc
clc
add
jecxz
push
xchg
enter
sarl
push
test
mov
xchg
push
jno
sbb
test
and
mov
adc
mov
stos
je
adc
cmpb
nop
inc
xor
jle
mov
cmp
push
test
lahf
dec
sub
sub
pop
lds
mov
das
imull
gs
sarl
add
fcmovbe
mov
int
pop
pop
and
dec
in
pop
mov
pop
aam
clc
loop
jae
cld
mov
push
sub
outsl
inc
lods
xor
mov
out
or
mul
popf
je
mov
rorb
cmp
jge
mov
leave
into
inc
mov
js
stos
push
cmp
cmp
fisubrl
imull
sbb
xor
in
aad
into
jno
fimull
fisubs
mov
in
subb
mov
push
adc
movsb
bnd
fcompl
push
mov
std
pop
xchg
or
mov
in
fcomp
and
xor
jae
and
mov
xor
pop
cli
popa
sub
mov
jmp
xor
jo
pop
sbb
add
and
pop
pushf
mov
jbe
or
sbb
pop
xchg
loop,pn
lret
pop
icebp
push
or
cmpsl
xor
xchg
pushf
stos
inc
pop
mov
fwait
dec
movsl
loopne
das
pop
test
sub
and
and
testb
xor
daa
in
and
sub
mull
cmpsl
adc
fwait
repz
mov
fstpl
aas
pop
sbb
repnz
xchg
test
dec
xor
stc
jmp
mov
mov
std
sbb
out
xchg
mov
roll
pop
or
test
ret
movsb
xor
sbb
push
call
sbb
mov
rorb
test
push
mov
xchg
or
push
cld
out
lahf
adc
sbb
adc
and
mov
out
xor
mov
jae
xor
das
xchg
test
iret
cmp
rcrl
xor
popa
out
mov
xchg
loop
and
push
jno
inc
es
xor
fcmove
or
outsb
iret
ss
add
mov
sub
jae
cmp
jae
test
ret
test
mov
pop
push
aas
icebp
sbb
jp
lahf
mov
pusha
test
lahf
xor
ret
stc
iret
mov
push
bound
rcll
movsb
pop
movsl
add
xor
jo
fiaddl
jmp
out
in
test
stos
mov
dec
mov
push
mov
mov
mov
adc
mov
insl
xchg
push
in
mov
movsl
and
xchg
xchg
rcl
xor
sub
push
daa
push
call
sbb
sbbl
push
call
pop
adc
insl
dec
xor
loopne
and
or
out
mov
fdivrs
fidivrs
adc
rolb
lods
mov
sbb
mov
fs
fldl
adc
jecxz
jb
or
or
mov
andl
inc
add
test
fs
aad
jb
popf
arpl
cld
data16
test
popf
je
xchg
xchg
jle
mov
rol
xor
jns
ret
push
fwait
mov
push
sbb
dec
add
cmp
xor
test
pop
lcall
roll
jno
xor
jl
int
movsb
mov
cmp
test
pop
into
dec
ds
xchg
scas
and
lea
mov
sub
mov
pushf
sub
ficomps
jecxz
clc
fdivr
in
sbb
insb
inc
pushf
mov
int
mov
imul
cmp
aad
push
jae
add
mov
call
adc
aam
dec
pusha
jns
shlb
mov
sbb
mov
mov
pop
ret
sub
popf
in
pushl
das
dec
stos
mov
sub
jmp
ret
dec
sub
enter
iret
xchg
sbb
mov
stos
jne
xor
xchg
gs
push
and
jo
insl
and
mov
dec
mov
sbb
test
mov
xchg
sub
jecxz
jae
and
jno
ljmp
adcl
andb
arpl
ds
lea
scas
les
loopne
jl
dec
xlat
and
and
xor
sub
mov
xchg
adcl
dec
lahf
clc
mov
lcall
ret
sbb
push
mov
xchg
out
mov
jecxz
mov
mov
adc
sarb
pop
dec
xchg
jmp
push
xchg
mov
ja
xchg
inc
int3
lods
lea
inc
add
xor
popf
xchg
push
pop
nop
outsl
dec
xor
jl
outsb
push
jecxz
mov
jmp
dec
rcl
stc
pop
das
xchg
xor
jbe
mov
fsubp
dec
push
repz
loopne
pop
ret
inc
cwtl
push
pop
inc
jg
and
push
std
cmp
sbb
arpl
push
inc
adc
cmpsl
sub
xor
das
ds
js
icebp
jg
sbb
movsl
iret
cwtl
pop
sti
xlat
sbb
mull
sub
out
clc
or
out
js
les
add
mov
xor
shll
xchg
pop
mov
fadds
and
nop
cltd
adc
outsb
pop
in
jp
std
adc
repnz
inc
inc
adc
lea
bnd
insb
adc
cmp
dec
pop
int3
pop
mov
adc
dec
daa
outsb
mov
jl
movb
sbb
out
jg
pop
jecxz
repz
push
sbb
pusha
ficompl
stc
sub
test
movsl
cs
push
xorb
fdivp
cmp
shrb
icebp
inc
fistpll
mov
dec
xchg
cmc
or
mov
sahf
mov
inc
cltd
insl
adc
inc
mov
push
cmp
rcl
add
scas
nop
mov
xor
in
jp
push
mov
xlat
or
xchg
lock
out
test
mov
jecxz
inc
lcall
push
int
mov
mov
popa
fcompl
aam
lcall
or
mov
out
nop
inc
shll
das
shrb
out
lea
mov
iret
pop
arpl
enter
int3
out
sub
lods
sub
fadds
out
adc
nop
or
shll
xchg
and
pop
jns
pusha
cmp
push
notl
fiaddl
pop
push
nop
loop
adc
jbe
cli
js
jnp
rorb
ret
cltd
pop
popa
stc
or
stos
iret
cmc
js
mov
aaa
shlb
dec
mov
mov
pop
sbb
dec
cltd
jmp
leave
xor
push
fbstp
sbb
data16
lods
mov
and
mov
fcom
lods
mov
cmovns
jp
or
xor
cmpsb
insb
test
jns
imul
mov
mov
xchg
dec
leave
sub
aad
bound
dec
popf
cmpsl
fists
adc
or
dec
pop
adc
daa
add
or
lahf
and
mov
sahf
or
and
dec
adc
fs
out
fcmovnu
loope
leave
cmc
cmpl
pop
test
mov
jo
mov
mov
mov
pop
mov
iret
add
dec
in
mov
loop
and
add
data16
imul
and
jns
sbb
enter
movsb
or
jne
sahf
daa
dec
in
outsl
mov
cmp
sub
mov
mov
lods
imul
jmp
cwtl
icebp
int3
icebp
jle
jle
push
add
jecxz
in
cmp
aaa
shl
inc
jp
xchg
neg
cmp
pop
fwait
les
inc
dec
mov
in
xchg
adc
jecxz
daa
dec
insb
fstpt
mov
stc
push
sbb
shlb
cmp
add
insl
xor
lret
dec
dec
push
out
fldenv
xchg
or
push
imul
arpl
orl
sahf
add
and
lcall
sub
sahf
ja
dec
xchg
jns
xchg
xor
fs
in
fwait
xor
insb
rcrl
test
jbe
cmovp
sbbb
xor
dec
cmp
rol
gs
push
stos
das
popa
popf
rorb
aad
ds
xor
jb
sub
mov
addr16
out
mov
adc
mov
xchg
test
in
in
mov
add
gs
mov
jae
imul
mov
cmp
std
xor
mov
outsl
push
jns
xchg
mov
jmp
inc
aad
jmp
dec
sbbl
cmc
mov
dec
pop
xorb
cmp
xor
xchg
insb
push
xchg
insl
cmp
in
fwait
ret
cmp
lcall
fwait
jae
push
les
aas
xchg
jno
mov
xor
mov
or
add
sbb
push
mov
or
iret
divl
xchg
lret
pop
data16
fs
ret
icebp
ret
mov
xchg
fiadds
out
push
push
push
cmp
in
xor
orl
and
cmp
std
sub
outsb
into
cmp
repnz
and
jmp
or
sub
sti
daa
jne
xor
cmp
sarb
in
adc
jmp
dec
or
sbb
sub
xorb
adc
xchg
movsl
mov
nop
sbb
push
outsb
fimuls
push
push
sbb
pop
addr16
aas
and
imul
outsl
out
ja
cli
pop
adc
imull
dec
leave
pop
or
mov
inc
sbb
insb
push
or
add
pop
push
cmp
addb
les
xchg
mov
aas
std
pop
jb
xchg
xor
mov
sbb
lods
aam
sbb
repz
roll
or
mov
enter
mov
aaa
in
jo
push
xchg
sub
clc
fs
mov
lcall
pop
inc
fidivrs
jb
addr16
popf
and
and
jge
jmp
addr16
pop
leave
mov
add
sti
ret
incl
inc
sbb
inc
xlat
pushf
jge
inc
xlat
popa
mov
outsb
pop
repz
push
movsb
cld
outsb
mov
xor
jmp
pop
mov
jecxz
mov
mov
add
jp
cmc
jle
xor
and
mov
popf
xchg
lds
jb
jns
lds
jmp
sub
jns
ja
cmpsl
ja
inc
fsubrl
test
adc
shrb
xchg
fsubrl
mov
push
hlt
loopne
dec
repnz
xchg
push
ret
gs
xchg
or
pop
and
dec
mov
fldt
daa
test
sub
sbb
add
lret
test
movsl
das
es
adc
push
sub
xchg
mov
mov
sbb
mov
cmp
les
jnp
add
addr16
addr16
push
dec
and
sub
popf
scas
jl
mov
in
addr16
es
and
ret
iret
dec
and
jg
rorl
or
sub
pop
cmp
push
loop
int3
lods
adc
mov
popa
push
and
clc
dec
dec
sub
pop
fld
je
jo
pop
fldl
insb
dec
sbb
jo
gs
mov
jl
daa
roll
or
sarb
enter
scas
sbb
xchg
fmulp
mov
mov
fs
cmp
mov
jle
dec
add
fsubrp
mov
adc
imul
mov
xlat
pop
pusha
inc
lds
sbbb
jecxz
or
cmp
xchg
js
dec
cmp
inc
jbe
rcrl
pop
xchg
add
push
inc
xor
daa
adc
roll
jne
arpl
test
test
call
sar
mov
push
sbb
mov
cmp
sub
dec
sti
rcrb
inc
dec
ficomps
jb
mov
mov
arpl
mov
and
sbb
fstp
jns
mov
cmp
inc
inc
stc
scas
mov
push
fdivr
mov
xlat
inc
add
xor
addr16
out
and
adcl
sbbb
roll
xchg
rcll
or
xor
andb
or
xor
daa
fldln2
hlt
imul
emms
ja
out
mov
pusha
das
dec
jo
adc
jl
mov
inc
into
shr
imul
loope
mov
mov
je
or
mov
lea
mov
push
mov
sti
and
xchg
out
push
inc
push
stos
outsl
add
gs
gs
sbb
lahf
xchg
bound
jl
je
cmp
adc
insb
jp
xor
ja
fucomp
sub
sub
loope
imul
pop
jno
xor
lret
mov
xor
lret
repnz
ss
sbb
mov
push
inc
nop
lock
fdivl
jae
stos
cmp
nop
outsb
mov
ret
mov
jbe
aas
jecxz
pop
adc
pop
orl
sbb
insl
sub
push
orl
dec
lahf
xor
popa
push
mov
pop
outsl
lods
mov
subb
ret
inc
jne
mov
jge
pop
into
fnsetpm(287
lea
mov
adc
push
push
in
test
lods
xor
mov
dec
sar
test
outsb
jne
lock
and
mov
xor
mov
lret
lock
cs
push
in
xor
addr16
add
hlt
xchg
mov
jecxz
nop
xor
push
arpl
pop
lcall
outsb
mov
inc
sub
or
icebp
xchg
mov
push
mov
xor
scas
test
lock
fcoml
pop
xchg
aas
lods
popf
in
and
push
nop
or
fstl
mov
arpl
loop
add
cmp
lock
mov
loop
stos
pop
cmp
xchg
pop
sbb
dec
jecxz
and
push
push
ret
nop
push
push
or
loopne
cltd
int
pushl
push
dec
or
jge
jne
fwait
add
or
sar
insb
imul
inc
pop
lods
cmp
mov
lea
or
sub
iret
mov
push
sarb
stos
mov
mov
cltd
sub
imul
fists
pusha
idiv
mov
shll
mov
pusha
pop
loopne
aam
fdivp
idivb
sbb
das
inc
fiaddl
jae
pop
inc
mov
fistpl
mov
in
dec
inc
pop
outsl
push
in
sub
mov
test
ret
add
cli
std
dec
into
mov
add
lods
call
cmp
pop
icebp
inc
mov
mov
push
repz
stos
pop
or
xor
sbb
inc
xchg
dec
mov
mov
mov
popa
fisttps
jb
lock
mov
mov
inc
test
or
sub
ljmp
xor
loop
xchg
mov
xor
in
out
pop
sub
es
mov
add
cmpsl
movsl
fisttpl
pop
pop
cmc
call
rcll
cltd
sub
mov
cltd
jnp
fadds
cltd
xor
fbld
sub
lds
or
dec
das
test
mov
cmp
or
out
movntps
call
xor
popf
mov
pop
lahf
xchg
push
cld
out
sub
push
in
jmp
pop
mov
cltd
dec
dec
or
out
jge
outsl
fbld
insb
mov
xor
or
mov
inc
ret
int
out
ret
jnp
mov
push
out
hlt
mov
jmp
mov
jae
cltd
cli
sbb
mov
loop
mov
fwait
inc
sar
pop
dec
cmp
in
cmpsb
movsb
or
lds
outsb
call
in
out
adc
jnp
adc
daa
jmp
mov
stos
sbb
outsl
scas
dec
test
cmc
mov
push
add
inc
test
imull
iret
roll
fimuls
loope
ret
out
push
stos
test
adc
fisttpll
ds
sbb
es
in
test
sbb
push
push
in
mov
movsb
inc
bound
hlt
cmp
out
pop
add
outsl
or
fildl
ljmp
dec
sbb
push
mov
inc
ds
and
dec
inc
sub
test
cs
int3
ja
int
push
or
ljmp
lea
cmpl
push
xchg
std
mov
fcoms
mov
push
shrl
mov
lret
dec
or
mov
jns
test
inc
cltd
push
xlat
fwait
rcrb
ror
daa
movb
and
shrb
cmpb
ljmp
pop
or
push
ds
pushf
cmp
test
lock
mov
aad
ja
and
in
cli
push
pushl
orl
add
pop
sub
add
inc
in
daa
out
je
or
ret
mov
fnstcw
sbb
jp
xchg
sbb
jbe
push
roll
orb
adc
or
push
sbb
insb
in
mov
sub
mov
add
mov
mov
mov
enter
movsb
mov
repz
dec
mov
jp
mov
xlat
bound
ret
aam
stc
jmp
rorb
mov
dec
adc
jmp
xlat
jp
test
dec
jecxz
pop
sub
pop
jno
ds
faddl
xor
ret
sub
cwtl
daa
adc
push
aad
dec
addr16
aaa
rcll
sbb
mov
fsubs
nop
adc
xchg
loop
mov
jne
imul
xchg
mul
or
adc
loopne
jp
out
repnz
call
add
jp
pop
pop
imul
fs
enter
flds
pop
mov
and
mov
mov
or
test
mov
xlat
xchg
xchg
hlt
mov
shl
sub
mov
pop
xchg
sub
add
mov
stos
add
lahf
sarb
sahf
movsb
add
xlat
pusha
les
inc
sarb
test
movsl
stos
out
mov
xchg
or
push
xchg
cwtl
loop
rorb
frstor
mov
inc
push
icebp
inc
sbb
in
shl
jo
mov
xchg
push
cmp
or
mov
pop
xlat
cmp
pop
test
sbb
fsub
shl
in
push
adcl
movsl
jl
push
fists
icebp
push
mov
hlt
cmp
pop
mov
push
adc
cmpsb
sahf
and
cmp
lret
cmp
mov
mov
adc
into
sub
loope
xchg
adc
lcall
out
mov
fwait
lds
fdivp
addb
shrl
inc
pusha
packuswb
xor
and
cmp
clc
les
mov
push
inc
inc
mov
sbb
stos
loope
int3
pop
pop
flds
addr16
call
lcall
jnp
daa
scas
adc
mov
mov
loopne
jb
mov
sub
cmpsl
xlat
ljmp
dec
jne
loopne
or
fldcw
imul
je
cld
incl
popa
pop
dec
add
bound
test
push
mov
rorl
leave
fldenv
mov
mov
nop
xchg
or
insb
arpl
adc
cli
mov
push
clc
mov
stc
or
jl
xchg
xchg
sbb
mov
sub
dec
or
enter
arpl
xchg
or
push
sbb
pop
adc
js
cmc
jg
mov
mov
out
test
mov
icebp
imul
into
out
and
cmp
mov
cmp
nop
xchg
adc
std
ljmp
inc
stc
push
cs
jge
sub
pop
es
xchg
cmp
xchg
aaa
add
dec
xor
jbe
jo
mov
pop
mov
ja
sbb
pop
or
add
jp
enter
xchg
roll
ja
jnp
xchg
jbe
je
sbb
ficoms
add
shll
jg
pop
shrb
pusha
adcl
leave
cli
in
mov
sbb
loope
lds
jmp
popf
je
outsl
daa
xchg
popa
xchg
ss
pop
mov
outsb
xchg
sub
push
fbstp
leave
dec
push
mov
fbstp
sbb
push
into
push
jg
in
outsb
out
xor
xor
sbb
push
and
mov
and
push
add
dec
jne
fcompl
adc
or
in
cmp
mov
ljmp
mov
jmp
cmc
sub
jo
out
mov
mov
rcrb
popf
subl
cs
flds
push
pop
mov
mov
aam
sahf
lahf
cmp
lods
sub
scas
js
ror
inc
add
dec
xchg
sbb
jo
pop
pop
inc
mov
sbb
adc
jmp
dec
xchg
jecxz
out
out
push
push
imul
ljmp
loop
cmp
add
repnz
xor
add
sbb
test
pop
cld
mov
ret
aam
insb
ja
inc
mov
lods
movhps
pop
inc
push
pop
arpl
idivb
decb
pop
add
sbb
mov
jmp
add
cmp
cmc
aam
mov
imul
inc
xchg
jbe,pt
pop
xor
andl
add
jle
dec
adcl
popf
imul
ret
cmc
bnd
idivb
je
ljmp
test
shlb
jmp
shlb
icebp
es
xor
xorl
fldl
xchg
fcos
filds
xchg
jb
adc
xchg
sub
fiadds
fisttpl
out
dec
mov
xchg
outsl
push
xchg
push
sub
sti
mov
dec
fwait
aad
daa
mov
mov
cmp
push
xchg
and
enter
xchg
test
push
lea
ss
jge
loope
lea
inc
add
mov
sub
test
cwtl
leave
icebp
add
push
xor
inc
pushf
dec
out
and
xchg
pop
push
sbb
jmp
mov
into
insb
sti
outsl
insl
shrb
imul
mov
sahf
and
or
insb
pushf
cmc
lcall
push
lret
fisttpl
js
cli
sub
dec
add
ret
dec
push
push
push
and
mov
sub
popa
mov
jmp
sahf
adc
sbb
jp
cmpsb
adc
jp
scas
add
or
repz
scas
dec
lods
nop
ds
lahf
cmp
insb
jns
lods
xlat
movsb
lcall
inc
popf
cwtl
sbb
sbb
loopne
outsl
and
push
ljmp
mov
stc
loopne
pushf
lret
outsl
test
rcrl
jle
xchg
das
mov
adc
fsubrs
call
into
out
xor
cmp
and
inc
cmp
enter
in
aaa
pop
push
fcomip
mov
inc
xchg
repz
int
lcall
aad
adc
or
xchg
pusha
lds
mov
std
mov
arpl
adc
xchg
mov
mov
adc
insl
test
jecxz
loope
dec
lret
xchg
ret
popf
loopne
std
lods
loop
ljmp
xor
jne
inc
fcompl
xchg
mov
push
jne
in
icebp
mov
pop
sarb
mov
popa
push
xchg
ror
mov
jae
lret
lea
into
dec
dec
mov
sbb
mov
pushf
dec
inc
out
mov
inc
xor
jae
mov
pop
adc
dec
ss
jae
call
fsts
ja
mov
push
push
movsl
or
mov
testl
fwait
rorl
popa
adcb
into
cmp
pop
loop
aas
or
mov
xchg
pop
aaa
mov
xchg
call
imul
push
lods
mov
lea
cmp
xor
push
pop
mov
int
mov
ljmp
int
ret
inc
pop
ja
cltd
rclb
mov
je
lock
mov
mov
loop
xchg
lret
mov
es
je
dec
lea
sahf
adc
cwtl
sar
dec
fsubr
aad
aad
icebp
xchg
cmp
test
mov
addl
xchg
sub
jge,pn
sbb
sbb
push
arpl
icebp
xchg
xor
sahf
sar
xchg
mul
jmp
pop
or
gs
in
cli
cmp
push
fistpll
xchg
xchg
clc
fsts
je
jmp
pop
ja
aam
les
call
mov
in
stos
fsubrp
mov
mov
inc
mov
cld
aam
addr16
cltd
cwtl
les
std
jb
xor
faddp
imul
hlt
andl
jle
insl
mov
mov
sbb
loope
jns
fdivrl
cmc
mov
shl
aam
out
xchg
mov
jmp
xchg
xchg
insb
out
xchg
je
jge
lods
mov
in
mov
lcall
add
inc
mov
mov
push
fwait
pop
jns
leave
icebp
push
imul
xchg
sbb
imul
vaddsubpd
add
pop
mov
andl
adc
out
jge
pop
xchg
ret
push
add
or
xlat
mov
ja
mul
rolb
dec
pop
fstpt
sub
fstps
lcall
and
mov
fdivrs
imul
inc
das
in
pop
mov
sbb
fucom
stos
sbb
pop
or
xor
mov
mov
into
sub
in
rorb
push
lea
mov
pop
jmp
pop
push
stos
jmp
push
je
pushf
adc
test
sub
dec
mov
dec
inc
loop
shlb
cmp
or
pop
mov
cmp
arpl
sbb
sub
pop
add
mov
jmp
and
cmc
xchg
outsl
adc
mov
bound
imul
loope
jae
ret
divb
das
insb
shrb
or
stos
pop
into
xchg
clc
jnp
stos
add
cmc
repnz
and
pop
pop
ljmp
aam
cltd
test
les
popa
sbb
lcall
js
movsl
push
sbb
das
adc
popf
jnp
fld
jmp
fnstsw
js
add
or
mov
mov
js
outsb
jp
aad
filds
mov
inc
enter
dec
sbb
xchg
bound
in
fdivr
jg
jae
add
into
push
js
ret
pop
push
xlat
jmp
daa
sbbb
stos
xor
push
add
int3
or
cltd
sub
sbb
scas
cmp
push
movsl
sbb
mov
xor
inc
iret
sbb
pop
add
jno
mov
pop
sbb
not
sti
loop
fwait
mov
movsl
stos
xchg
aam
adc
popf
inc
inc
fadds
cmpsl
fidivrs
and
jbe
mov
mov
stc
and
insb
xlat
scas
pop
cmp
flds
adc
lods
push
fistl
xor
dec
js
invd
hlt
pusha
mov
sub
sarb
imul
cmp
dec
add
leave
dec
mov
xor
fld1
mov
cwtl
stc
mov
aas
pop
addl
add
add
jge
sbb
cmp
push
sub
arpl
inc
adc
nop
dec
cmp
mov
in
cmpl
mov
out
xor
hlt
inc
int3
mov
repz
loopne
xchg
sub
push
mov
and
shll
xor
vmwrite
insb
push
mov
iret
push
pushf
push
pop
lods
fwait
jmp
mov
lret
xor
xchg
iret
cmp
jnp
mov
adc
lcall
cli
sbb
popf
sub
jnp
lea
mov
cmp
icebp
xchg
nop
push
lock
jae
imul
out
movsl
inc
shl
leave
push
lahf
mov
int3
push
loopne
jp
add
dec
dec
xor
or
lahf
lret
jbe
mov
test
daa
movsb
ja
loopne
cmc
cli
xor
pop
or
inc
mov
sbb
pusha
shll
es
xchg
or
inc
jbe
orb
xor
arpl
movb
cmp
jbe
xchg
lea
mov
outsb
mov
enter
push
or
das
cs
or
inc
fs
ret
jmp
or
add
add
stos
cwtl
sub
jl
aam
xchg
dec
and
mov
out
mov
jbe
arpl
xchg
sub
inc
mov
mov
in
jmp
in
sti
stos
jmp
pop
dec
add
iret
xor
mov
xlat
mov
mov
xchg
push
xlat
js
and
int
mov
inc
enter
xor
jmp
cwtl
faddl
xchg
or
cld
jbe
test
push
nop
sahf
imul
scas
add
ja
popf
stos
sahf
or
mov
mov
pushf
push
in
inc
add
xor
mov
stos
lcall
or
lds
mov
push
mov
dec
fadds
mov
push
add
push
pushf
sbb
pop
loope
and
and
es
into
dec
push
packuswb
and
mov
sbb
pop
ficompl
dec
mov
in
inc
mov
test
or
xchg
stos
xlat
or
pop
idivb
and
cmpsl
outsl
mov
ljmp
xor
or
dec
scas
and
loop
sbb
cmpsl
sbb
lret
mov
loop
inc
cmp
jbe
imul
pop
xchg
xchg
cs
sbb
and
pop
leave
sarb
xchg
arpl
adc
cmc
xor
aad
xor
aaa
shlb
pop
pop
jns
mov
pop
jmp
jle
pushw
mov
pop
sti
in
pop
cld
cmp
adcl
jmp
dec
dec
xchg
mov
stc
pushf
dec
lret
add
in
xchg
scas
fmulp
test
jecxz
subl
inc
dec
or
jo
push
pop
mov
fdivp
lcall
lock
negb
shlb
lret
mov
addr16
sub
fs
and
dec
jbe
pop
mov
sub
cltd
mov
adc
testb
jmp
mov
xchg
jne
jnp
jecxz
clc
clc
sbb
inc
pop
mov
or
insl
xor
mov
push
push
push
sbb
pop
cmpsl
jbe
mov
push
gs
in
mov
cmp
jbe
insl
in
mov
sbb
out
and
icebp
arpl
push
js
lock
add
dec
jae
subl
or
test
iret
stc
je
rcrb
repnz
mov
shlb
pop
mov
and
push
pushf
jae
mov
pop
in
push
in
pushf
imul
jbe
pop
mov
and
ja
cli
cltd
mov
dec
adc
imul
stc
mov
jne
cmpsb
mov
xchg
testw
scas
inc
adc
lds
bound
or
imulb
sub
scas
lahf
jg
mov
mov
pop
xlat
push
imul
push
shrl
add
and
aas
iret
mov
decl
xor
xchg
lock
push
shll
adc
popa
loopne
insb
cwtl
mov
aad
jl
ds
inc
lds
mov
lock
jge
clc
outsl
dec
sbb
outsl
mov
dec
mov
imul
sbb
mov
aad
fucom
push
sub
sbb
pop
fs
sbb
inc
insl
mov
adc
ret
ret
jnp
loopne
or
icebp
outsl
loope
stc
or
sbb
and
ja
jno
jno
jmp
push
and
mov
aas
adc
arpl
jmp
pushf
push
push
icebp
sub
cmp
imul
mov
fists
cs
movb
rcr
aad
pop
gs
bound
mov
and
and
lret
mov
rclb
hlt
mov
div
rclb
adc
mov
rcll
stos
cmpl
cmp
inc
into
pop
nop
fildl
jge
aas
out
inc
out
fisubl
xlat
sbb
fbstp
fwait
sarb
mov
pop
js
add
inc
dec
inc
pop
mov
mov
jae
testb
jbe
sub
xor
lahf
sub
fdiv
in
imul
cmpsl
testl
pop
push
mov
scas
addr16
sahf
pop
out
mov
cmc
sbb
inc
outsb
xchg
data16
and
sbb
xchg
clc
lea
sbb
xchg
popa
mov
in
cmp
daa
out
mov
stos
push
out
mov
lods
mov
and
or
pop
mov
das
or
test
jp
psrad
jle
scas
stc
mov
jns
aam
dec
mov
addr16
mov
mov
call
outsl
call
sti
pop
pop
push
push
mov
int3
inc
mov
mov
xchg
mov
jle
ss
into
xor
mov
test
pop
mov
mov
adc
xor
sbb
pop
jns
divb
mov
push
sub
idivb
sbb
mov
in
sbb
and
xchg
jl
es
xlat
or
scas
sub
cld
andnps
add
insb
and
jg
sbb
sti
inc
sbb
jmp
inc
lea
or
ljmp
aam
mov
sbb
in
or
cmp
jle
es
testl
pop
jp
aas
jg
movsb
mov
mov
leave
fcmovnu
inc
xor
pushl
sub
cld
or
lods
mov
rorb
out
mov
cld
cmp
cmp
sub
add
pop
out
lretw
inc
int
fs
jns
jns,pt
les
int
jmp
xchg
adc
mov
outsl
mov
pop
incb
loopne
or
push
fistpll
pop
adc
jmp
filds
lahf
pusha
mov
mov
enter
jns
lds
sbb
imul
outsb
mov
mov
add
dec
and
mov
mov
rorb
xchg
add
mov
jecxz
nopl
int3
mov
sub
icebp
hlt
loop
cmpl
xor
ret
inc
xchg
cs
mov
jecxz
mov
mov
aaa
insl
out
int3
sbb
ret
mov
iret
bound
jmp
bound
fstpl
dec
jnp
aaa
test
xchg
xor
mov
fcomp
fstpl
int3
xchg
jb
mov
inc
sbb
stos
pop
sbb
in
fisttpl
push
dec
push
pop
xor
and
enter
and
jo
nop
mov
and
les
pop
mov
mov
mov
mov
xor
aam
and
iret
pop
lds
and
pop
popa
pop
daa
mov
ficoms
fcomps
incb
ja
shll
cwtl
loop
xchg
jno
call
cld
fldenv
pushf
into
out
xor
push
lcall
push
fwait
adcb
imul
pusha
push
dec
pop
jg
insb
mov
jle
in
ret
jae
jle
shlb
push
ret
outsb
jne
adc
sbb
xchg
arpl
arpl
xlat
xchg
ret
stos
mov
mov
cmp
push
call
lcall
lods
loopne
cmpsl
pop
jo
add
add
jmp
xchg
enter
sub
sub
scas
arpl
add
movsl
sbb
je
popf
sub
insb
imul
or
fwait
jmp
adc
jecxz
add
fadds
sub
push
cmpsl
add
aad
pop
xchg
scas
popf
lock
add
insb
xchg
test
lret
xchg
mov
mov
or
loope
movsb
ds
in
xor
sbb
fstpt
push
ljmp
push
mov
pop
daa
sub
jmp
mov
fchs
push
jmp
jae
xchg
cwtl
pop
mov
and
lds
arpl
jmp
mov
push
imul
loop
dec
and
bound
adc
or
aaa
lret
add
adc
insb
fwait
daa
lea
jecxz
mov
in
sbb
push
mov
push
push
jo
daa
dec
sahf
mov
xor
mov
push
push
push
lods
jmp
imul
popa
fistps
push
dec
lret
mov
sub
xchg
adc
and
jnp
or
aam
into
loop
pop
pop
jg
lock
fucomi
sub
leave
push
dec
hlt
rcl
xchg
jo
inc
xor
sbb
mov
jnp
mov
and
ds
aad
out
ja
jmp
add
fs
pop
sti
popa
or
jecxz
mov
aad
dec
scas
in
and
jns
into
push
clc
sub
dec
mov
dec
cli
icebp
sub
fimull
xor
add
mov
pop
cmp
icebp
dec
cmp
pop
mov
mov
ljmp
lds
inc
cmpl
stos
imul
int3
neg
mov
mov
add
rcrl
inc
icebp
mov
std
xchg
movsb
mov
pushf
enter
cmp
into
lcall
cmc
jge
dec
or
les
clc
shrb
jnp
aas
inc
or
js
pop
jnp
mov
stc
in
test
clc
ljmp
mov
pop
daa
movsb
jmp
push
or
jg
jmp
popa
jp
aaa
in
xchg
fdivp
xchg
jb
sub
addl
sub
or
push
inc
sub
roll
pop
fs
sbb
ds
sub
xchg
test
out
dec
and
lcall
pop
dec
mov
leave
sbb
push
leave
jg
dec
in
repnz
test
or
xchg
inc
ret
jmp
aad
test
and
mov
cmp
pop
das
std
lods
hlt
fwait
hlt
roll
shll
sbb
pusha
gs
pop
nop
bound
pop
fsubs
test
jne
xchg
and
in
push
cld
pop
jmp
push
stos
stc
dec
shl
mov
push
xlat
jp
arpl
ret
aad
cmpsb
shll
mov
ret
fs
into
out
fwait
cmp
popf
cmp
test
sbb
iret
lcall
push
shlb
arpl
pushf
inc
idivl
scas
dec
mov
aas
xchg
dec
imul
add
mov
sub
les
inc
mov
sub
rcrb
push
in
or
push
push
insl
mov
mov
nop
inc
mov
aas
and
fs
jne
aam
xor
sub
lret
mov
aaa
in
mov
jno
dec
xchg
dec
dec
adc
imul
adc
js
lret
cmp
dec
dec
adc
subb
or
pushf
sub
es
es
repz
mov
ljmp
rclb
pop
push
fistps
pushf
and
int
push
xor
push
int
xor
xor
mov
adc
loope
push
xchg
cmpsl
push
dec
xor
jecxz
and
shrl
test
dec
lahf
jns
mov
pop
mov
ret
mov
mov
jmp
adc
loopne
adc
or
fadds
mov
in
xor
popa
xor
mov
sub
push
xchg
jno
sahf
movsb
push
pop
pop
xor
ds
xchg
and
pushl
into
movl
pop
pop
lret
insl
xor
push
test
gs
imull
cmpsb
dec
sub
sbbb
mov
pop
inc
pop
insl
jnp
jnp
mov
imul
push
dec
cs
push
mov
mov
mov
or
jp
std
cli
sbb
jp
sbb
lods
int
aam
data16
imul
cmp
out
push
stos
int
and
arpl
and
push
sub
movsl
and
insb
adc
cld
movsl
xchg
ss
out
into
data16
std
cmp
or
ret
adc
xchg
mov
fwait
or
std
push
int3
mov
lds
dec
test
xchg
sub
pop
inc
inc
cmp
jb
shlb
nop
adc
pusha
das
adc
dec
cmp
inc
xor
mov
ret
pop
int
mov
lods
outsb
adc
jae
into
sub
jl
adc
jmp
pop
add
and
in
lods
add
call
cmp
popl
sti
mov
jb
xor
repz
dec
pop
push
lcall
jg
gs
sbb
in
das
lret
dec
push
or
sbb
sbb
cmpsl
jo
ficomps
out
lcall
cli
mov
movsl
ja
jns
mov
pop
mov
lods
lahf
dec
popa
dec
insl
sbb
push
xor
lret
or
cmp
gs
add
push
push
and
pop
pusha
insb
mov
inc
push
pop
mov
push
insb
mov
cli
imul
lcall
and
lret
int
test
rcrl
ficomps
sbb
iret
je,pn
sub
mov
dec
pop
je
jbe
pop
and
mov
add
ficomps
imul
outsl
xor
insl
popa
xchg
cmpsb
mov
nop
fistl
lods
pop
call
or
mov
xor
hlt
lea
cmp
sub
gs
sbb
mov
repz
push
idivl
xlat
add
daa
push
xchg
xchg
xor
popf
test
lret
stos
push
dec
sub
dec
lret
adc
repnz
icebp
enter
jnp
adc
inc
jl
add
andb
gs
xchg
and
stos
sahf
add
in
and
cli
ss
add
in
sbb
mul
xchg
mul
jae
push
sti
sbb
cltd
mov
mov
mov
sti
mov
sbb
inc
push
xchg
inc
or
jge
inc
adc
jp
adc
shll
daa
xlat
lock
loopne
mov
xchg
andl
push
xor
ret
adc
dec
inc
int
sub
das
sahf
icebp
jmp
imul
xor
dec
and
sub
pop
fidivl
pop
push
push
jecxz
dec
sub
sub
divl
lock
enter
ja
ss
xchg
dec
mov
pop
mov
mov
nop
ss
sub
cmpsb
or
dec
sub
mov
xor
dec
mov
das
lahf
sbb
pop
popa
dec
and
xor
push
inc
rcr
pop
mov
jns
je
mov
cmp
outsb
add
cs
adc
ljmp
imul
mov
sub
push
mov
rcrb
jp
clc
ficompl
and
jns
jbe
jle
mov
inc
iret
add
mov
dec
int3
xchg
ja
fcom
pop
lea
mov
inc
xchg
lret
and
pop
mov
xchg
cmp
enter
inc
xor
or
lock
setg
adc
stos
dec
adc
sub
jbe
mov
dec
ljmp
andb
outsb
pop
clc
ljmp
data16
inc
ret
shlb
clc
orl
mov
sub
jae
aam
ds
push
aad
jle
rclb
repnz
test
mov
test
ss
inc
jl
pop
mov
xor
push
mov
popa
push
mov
rcl
daa
mov
sbb
jno
cmpsl
loop
out
shl
cmp
mov
add
mov
sbb
mov
fcompp
pop
shll
jmp
dec
xchg
and
fidivrl
mov
loop
and
mov
sub
add
mov
xor
divl
fcomi
jbe
jae
pop
mov
test
inc
mov
jo
iret
adc
xchg
inc
or
cmp
mov
lret
in
mov
mov
stos
int
js
pushf
pop
hlt
shlb
inc
ja
mov
add
cmpsb
addl
sub
rcrl
adc
sub
xchg
adc
and
dec
mov
xchg
int
scas
in
mov
inc
dec
daa
inc
out
loopne
pop
jo
jnp
jecxz
dec
inc
jno
jecxz
cmp
ficoms
out
and
pop
inc
mov
add
fisubrl
int3
sub
xor
sbb
xchg
test
push
and
in
add
in
cmp
hlt
or
dec
inc
insl
dec
pushf
sbb
adc
stos
in
mov
cmpl
fimull
add
int
sbb
push
fimuls
mov
jbe
ljmp
xchg
sbb
aam
inc
ret
and
arpl
ret
add
or
inc
lret
mov
lcall
pop
into
dec
sub
mov
push
add
rcr
push
cs
mov
push
js
fists
and
inc
jg
mov
sub
xchg
cmpsb
rcrl
adc
and
shlb
je
sbb
stos
xor
mov
inc
fistpl
int3
cld
imull
mov
jl
push
enter
test
inc
cld
movsb
cmpsl
dec
lods
mov
inc
or
in
scas
cwtl
or
test
hlt
shl
popa
xor
inc
xchg
lods
xor
cmc
movb
xor
ret
out
cltd
out
push
je
movsl
dec
sar
in
dec
pop
jle
fwait
and
faddl
fwait
div
and
movsl
and
fwait
rol
repz
push
mov
push
pop
mov
dec
cmp
jae
push
jae
je
je
das
and
pop
push
cmp
lods
jo
data16
fistpll
cld
hlt
ja
dec
inc
test
or
pop
push
test
xor
mov
stos
in
adc
mov
es
cmp
cmp
cs
fidivrs
fs
mov
xlat
push
cmp
mov
das
popf
jae
fwait
mov
movsb
popa
hlt
mov
fildll
lods
mov
iret
push
sub
xchg
lods
bound
das
hlt
xchg
lods
sub
cmpsb
lods
jecxz
icebp
xor
repnz
aad
out
xchg
cltd
test
stos
and
movl
repnz
or
mov
xchg
ss
pop
add
aad
xlat
fdivs
dec
roll
int3
jbe
nop
lock
test
sub
inc
es
jo
decl
mov
jb
clc
cli
pusha
outsb
sbb
cs
xchg
add
fnstenv
xor
xor
fwait
std
shlb
jno
loop
xchg
mov
pop
add
jbe
pop
fldt
xchg
xchg
xchg
sbbb
pop
bound
pop
outsl
ret
repz
and
cli
or
xor
add
call
cmc
inc
xchg
out
xorb
int3
fisubrl
mov
stos
ficoms
out
mov
mov
ss
popf
cmp
hlt
addr16
aaa
dec
aas
sub
inc
mov
mov
fldl
mov
icebp
jge
xlat
test
hlt
sub
insl
or
repz
and
push
mov
ds
out
es
push
ret
pushf
stos
sahf
push
adc
cmovl
lret
ljmp
mov
mov
in
mov
decb
cmp
and
xchg
sub
push
xchg
xor
fistps
cmp
outsl
mov
lods
mov
clc
xchg
sbb
test
sti
jnp
sub
bound
jb
ljmp
bnd
cli
test
cmpsb
aas
or
insl
insb
xor
push
insl
sbb
movsb
icebp
aaa
pop
sbb
dec
outsb
int3
out
js
sub
jno
sub
mov
jle
jnp
sub
arpl
in
fwait
iret
mov
push
arpl
fwait
popa
iret
and
cltd
movl
sbb
mov
lret
push
and
dec
ss
cmpsl
add
in
sub
in
test
cli
pop
fs
sti
in
xor
pop
ret
lds
jle
dec
inc
data16
xor
les
fildl
ret
iret
pusha
sub
iret
inc
inc
and
sbbb
out
pushf
sbb
lds
scas
push
or
fsubr
test
stos
or
xchg
inc
dec
sub
cmpsl
in
jbe
fldcw
out
dec
pusha
push
jne
xchg
mov
fidivl
aas
xchg
push
pop
aam
mov
sub
jnp
lds
push
cmp
or
bound
xor
mov
jbe
mov
lahf
lret
lods
mov
add
loopne
rcrb
mov
pop
test
mov
movsl
xor
shlb
and
pushf
test
ds
mov
add
in
rorb
outsl
push
inc
int3
xor
mov
aaa
icebp
loop
sbb
xchg
xor
mov
push
lret
mov
lods
mov
sti
or
mov
sbb
xor
mov
xor
mov
je
ret
ds
pop
fadd
pop
sub
and
repz
out
mov
in
repnz
aam
repz
aaa
cmp
adc
jnp
xorl
adc
cmp
sub
inc
je
adc
enter
sarb
sbb
xor
push
das
fs
das
mov
xorl
aam
cmp
shlb
pop
add
pop
xor
xor
test
popl
cs
jl
jno
scas
or
rclb
aam
and
sarb
pop
mov
or
dec
pop
sub
out
inc
sti
ret
cld
data16
cmp
mov
icebp
add
adc
cmpsb
lods
mov
das
push
jnp
jge
movsl
lods
int3
mov
or
test
dec
push
sub
jp
fisttpl
jno
jge
add
sub
lahf
dec
dec
pop
enter
out
xor
adc
push
enter
xchg
fidivrs
jmp
push
in
in
das
push
pop
xchg
addr16
xor
out
lret
xor
insl
pop
and
pusha
xchg
outsb
inc
cwtl
push
orl
and
mov
sbb
add
adc
mov
xlat
sub
sub
dec
add
push
in
push
pop
mov
dec
xor
scas
outsl
ja
sbb
int
insb
dec
pop
outsl
cmp
inc
push
cmp
or
cmp
xor
ljmp
push
int
jb
lea
mov
sbb
ss
pop
int3
or
mov
daa
aas
xchg
mov
mov
out
int
xchg
pop
or
add
repnz
or
ret
mov
jne
cmp
ja
cmpb
adc
jle
lcall
into
push
dec
in
adc
sti
and
rorl
sarb
push
les
add
mov
dec
mov
in
mulb
cmp
nop
adc
xchg
xorl
pop
push
inc
add
inc
mov
xchg
jne
fidivl
enter
aam
jp
cmp
jae
mov
and
loop
push
jo
or
ljmp
and
lods
outsb
call
xchg
xchg
pop
lcall
loop
jp
ds
aaa
out
dec
push
xchg
pusha
sub
or
and
ffree
inc
adc
jl
adc
push
adc
mov
mov
div
aas
push
std
mov
testl
into
and
addr16
cs
sbb
xchg
dec
jo
xchg
fs
or
mov
mov
sub
mov
mov
in
outsl
push
insb
jmp
cmc
mov
fs
xor
push
sbbl
add
shrb
rcr
lods
pop
cmc
dec
popa
xchg
call
test
dec
fisubl
mov
jle
arpl
xlat
sbb
cmp
gs
mov
sub
sti
sub
sub
cmp
push
ds
cmp
or
stos
lret
gs
fistl
mov
lds
inc
ret
or
push
lret
dec
push
mov
pop
dec
sub
inc
cmp
in
loopne
adc
fbld
test
mov
push
stos
cmp
sub
ja
jle
lods
push
cltd
mov
orl
or
mov
into
cltd
push
mov
jmp
xlat
ja
lret
pop
or
mov
add
cltd
js
inc
pop
fs
dec
aaa
sub
jae
cs
sbb
jle
jnp
rolb
jge
mov
repnz
orb
ljmp
mov
stos
xor
adc
push
dec
xchg
jbe
mov
leave
gs
popf
cmp
inc
xor
adc
mov
adc
push
mov
fdivrs
popf
fst
adc
dec
out
cmp
push
lods
negl
ficoml
daa
mov
pop
pop
arpl
push
lods
pop
ss
ja
mov
repz
in
aaa
cmp
inc
scas
add
mov
mov
sbb
sub
outsl
mov
xor
repnz
pop
lcall
insl
fists
das
imul
repz
cmc
and
outsl
xor
pop
aaa
cmp
cmp
movsb
int
aam
inc
sub
rol
or
mov
xor
stos
add
fnsave
pop
fcomp
loopne
mov
push
decl
add
mov
or
and
jp
shrl
aaa
xor
lods
rol
aaa
xlat
jns
pushl
cmpsb
mov
popf
shlb
dec
xor
sub
push
lds
and
ljmp
sti
jb
xchg
sti
int
shlb
sahf
fcomi
push
dec
or
ss
ret
add
popf
movsl
jp
mov
xchg
dec
dec
mov
shlb
pop
stc
inc
pop
inc
mov
insb
jo
mov
and
int3
mov
sbb
or
xor
sub
mov
mov
shrb
and
and
xor
les
adc
add
jno
dec
pop
fildll
jae
or
outsb
xchg
lret
outsl
mull
cmp
dec
cs
daa
mov
loop
and
add
inc
repnz
xchg
aas
ret
mov
pop
rorb
push
in
adc
ret
pop
mov
enter
inc
test
xlat
pop
jo
and
repnz
movsb
fidivl
fdivrs
andl
testl
xor
pop
xor
jecxz
or
lock
inc
imul
bound
push
cld
mov
dec
shl
cmp
mov
xchg
push
push
fmulp
icebp
call
adc
inc
insl
dec
or
cld
shl
repnz
movsl
mov
jmp
ja
cltd
in
xchg
mov
in
jae
mov
pop
adc
repz
mov
mov
jb
dec
xlat
sbb
outsl
int
mov
and
lods
adc
inc
aas
bound
mov
popa
incb
cmp
cmpsb
jmp
xor
pop
daa
mov
adc
insl
cltd
inc
or
in
ss
add
sub
dec
fdivrs
mov
in
pop
mov
and
and
scas
test
pop
push
cmc
mov
pop
sahf
lock
loopne
ds
inc
movsl
inc
rcll
cmp
movsl
push
cmp
sub
jnp
test
sahf
mov
fwait
cmp
or
cmp
imul
aam
push
lods
push
add
adc
mov
fcmovbe
out
repz
sbb
repnz
test
jae
fucomip
mov
xchg
add
lods
and
inc
enter
sub
inc
sbb
mov
inc
in
loop
sub
std
sbb
repnz
test
mov
jle
jecxz
imull
imul
mov
leave
popa
arpl
inc
add
ret
leave
lock
repnz
sahf
pop
or
add
dec
inc
and
or
filds
rcl
adc
rorb
or
stc
mov
js
pop
push
adc
idivl
or
and
xor
xchg
test
das
inc
jb
and
sar
pop
push
push
sarb
stc
inc
aad
dec
stos
or
pushf
popa
push
xor
add
adc
dec
cwtl
jbe
and
movsl
add
mov
or
and
lods
gs
push
adc
xchg
mov
xlat
shl
mov
sbbl
in
pop
in
pop
icebp
sub
shll
movsb
scas
and
imul
dec
xchg
pop
popa
lret
fs
aas
jns
xchg
mov
jl
push
mov
mov
data16
into
mov
jae
xor
fbstp
test
test
clc
adc
adc
test
cmp
pop
xchg
daa
or
mov
repz
ret
lahf
sub
iret
cmp
stc
mov
mov
or
jne
and
pusha
stc
pop
dec
dec
int3
add
or
sub
add
testl
and
mov
mov
xor
sub
cmpsl
shr
fsubr
gs
aad
dec
pop
xchg
push
jo
inc
sub
popa
add
loop
xchg
pop
movl
enter
ret
shlb
cs
das
ss
pop
clc
cmp
ret
shlb
sbb
mov
adc
and
and
or
dec
in
cmpsb
aaa
pop
mov
xlat
mov
add
cwtl
push
daa
cmpsb
and
push
sub
aam
sub
push
fcompl
adc
pop
or
jl
idivl
movsb
ja
popa
push
dec
sub
movsb
mov
jp
orl
adc
cltd
pushf
sahf
jecxz
dec
mov
jns
lds
sbb
popf
dec
daa
inc
scas
add
mov
call
and
lock
sbb
int
in
cmp
xor
sbb
mov
push
mov
mov
cltd
jge
dec
ss
pop
add
sti
sbb
pop
xchg
jne
push
sar
adc
jne
cli
pop
daa
mov
cld
push
pop
in
iret
sarb
jge
inc
xchg
mov
lahf
adc
pop
and
mov
iret
sahf
bound
mov
lret
iret
jne
mov
xchg
add
lock
mov
sub
pusha
frstor
jne
xchg
cltd
mov
sub
in
sub
pop
inc
cli
inc
shrl
repnz
cmp
ljmp
rclb
fcmove
shrb
jp
inc
or
jle
shlb
cmpl
add
int
and
push
lea
sub
lea
arpl
fnsave
popf
jg
sub
pop
pop
sbb
mov
aaa
xchg
pop
pushw
enter
cltd
cli
insb
dec
lds
xchg
cmp
cmp
push
xchg
clc
xor
nop
adc
vpackssdw
add
mov
into
dec
fcomi
loopne
movsb
outsb
roll
pop
and
sti
inc
or
pop
fistpll
cmpsb
xor
adc
or
push
push
or
ss
xor
sarl
out
ja
cmp
aam
stos
and
xchg
cmc
xchg
mov
pop
and
jb
aad
hlt
push
es
jmp
xchg
mov
negl
int
add
out
outsb
sub
leave
sub
dec
pop
add
fsub
arpl
shll
or
inc
dec
mov
daa
mov
mov
mov
xchg
or
lock
scas
or
sbb
stos
jne
mov
adc
xor
shlb
mul
inc
add
stc
call
jle
mov
mov
in
rol
lret
sbb
cmpsl
dec
add
in
jae
ss
cli
mov
mov
test
lcall
jg
push
rcl
bound
dec
scas
adc
test
data16
les
mov
lods
sti
add
std
and
ret
aaa
adcb
cli
cmc
mov
jl
stos
test
xor
aas
jle
sbb
pop
ss
or
cs
fstps
daa
dec
jle
in
xabort
movsl
std
sti
out
or
loope
inc
sub
cltd
sbb
test
mov
lods
ljmp
ret
sub
dec
ficoms
mov
adc
das
bound
gs
test
std
fldenv
push
jbe
or
outsb
inc
mov
pusha
andl
jecxz
add
daa
out
fxch
iret
mov
jns
jmp
into
movsl
in
or
addl
call
xor
fstl
ret
mov
jl
pop
push
insl
add
and
and
jb
or
out
ficompl
in
stos
mov
mov
dec
outsl
out
jl
dec
pop
inc
ljmp
call
in
push
stc
imul
and
mov
lret
xlat
outsl
add
enter
push
fs
je
adc
xchg
xchg
jno
clc
sub
xchg
jae
pop
cmpsb
dec
sbb
rcr
sarb
aad
inc
push
fstpt
mov
shrl
flds
push
jbe
das
mov
scas
divl
dec
sbb
lret
pop
push
sub
xor
aaa
or
test
inc
mov
faddp
div
lock
andb
movsl
data16
mov
cmp
roll
mov
repnz
sbb
sar
mov
inc
ja
stos
or
gs
add
xchg
inc
std
pop
push
gs
mov
fistpll
xor
xor
inc
xor
out
movswl
cld
push
nop
into
add
inc
fldenv
cli
test
movsl
cli
add
jmp
add
push
jae
stc
es
sub
cwtl
in
inc
jns
aad
push
int3
in
sub
sub
mov
sub
inc
add
xorb
dec
aas
jge
inc
in
in
ss
xor
sti
mov
jno
sub
popf
std
aas
fsubr
pop
inc
out
push
test
push
int3
in
fdivl
mov
ficoml
sub
jl
sti
popa
push
std
jae
cli
pop
push
shll
mov
push
and
jmp
sbb
jb
scas
aas
rorl
mov
outsb
and
sbbl
imul
loope
fldln2
add
lea
sub
cmpb
sti
cmp
or
pop
and
mov
sbb
xor
and
shlb
xor
mov
push
pop
inc
fldt
xor
inc
xor
dec
ret
add
inc
adc
xlat
pop
mov
lret
or
xchg
scas
sub
aam
xlat
fiadds
sub
aam
scas
jp
loope
dec
xchg
clc
xchg
int
fs
push
jge
jnp
mov
popf
testb
xor
inc
mov
pusha
inc
ss
imull
std
jns
popf
dec
and
jnp
mull
sbbl
cli
jle
dec
scas
adcb
or
ret
push
or
je
mov
mov
xchg
ljmp
repnz
add
adcl
bound
pushf
rorl
rdtsc
sbb
fisttpl
adc
inc
dec
xlat
test
mov
jbe
sub
scas
mov
push
dec
outsb
daa
fnstenv
lcall
les
int3
in
inc
into
pop
cmp
test
push
inc
pop
out
rol
movsl
dec
cmc
xor
or
mov
push
mov
xchg
sbb
push
pushf
pusha
pop
sub
in
insl
sahf
hlt
xor
inc
adc
jge
ror
adc
addr16
daa
popf
xchg
sti
jo
shrl
bound
add
sub
inc
push
scas
call
sbb
sbb
push
dec
lds
out
dec
dec
arpl
jl
mov
fbld
or
and
dec
push
jbe
mov
aad
xorb
scas
push
adc
lcall
in
jno
imul
lods
mov
pushf
mov
test
dec
scas
sbb
int
sbb
aaa
rcll
stos
outsb
rol
cmpl
dec
xchg
ret
jecxz
pop
adc
cld
test
sahf
cmp
mov
ret
call
mov
mov
xor
insb
jp
lods
imul
dec
in
pop
js
jo
in
nop
adc
and
jg
into
or
leave
add
ds
jmp
fwait
aad
out
movsb
sub
xchg
inc
in
fdivl
pop
jp
push
js
icebp
cmp
and
cmp
lahf
out
pop
sub
jg
loop
sub
mov
shl
push
test
pop
dec
fcomps
xor
pushf
test
jnp
push
pushf
cmp
lret
adcl
lahf
jp
out
das
cmp
jne
cmp
jbe
lret
mov
xchg
mov
push
ss
mov
xchg
jle
mov
clc
lods
dec
mov
jns
inc
push
or
jnp
lret
push
aaa
xor
push
push
dec
mov
jns
mov
xchg
fwait
jnp
pop
cmpsl
adc
mov
icebp
mov
mov
insb
into
rcrl
and
bound
cmpsb
lock
sbb
mov
imulb
inc
cmp
xchg
push
movl
lret
out
jecxz
pusha
repnz
pop
icebp
jp
add
fisubl
inc
push
outsl
scas
xorl
dec
lret
jae
xchg
aam
out
mov
stos
mov
jbe
les
xor
jbe
aam
sub
inc
adc
pop
pop
aad
push
fsts
pop
test
jecxz
icebp
gs
jle
es
shrb
fistpll
lods
jge
int
mov
sbb
sub
add
push
aam
ss
in
es
fnsave
cmpsb
adc
pop
xorb
mov
test
mov
leave
sub
sbb
add
pop
dec
mov
int3
adc
cltd
std
dec
lcall
mov
mov
bound
inc
pusha
adc
cmp
pop
sbb
push
movsl
cmp
pusha
push
int3
mov
mov
mov
mov
xor
mov
ja
in
repnz
pop
push
sbb
sbb
sbb
cmp
inc
mov
mov
rorl
fsub
into
scas
lds
adc
fwait
negb
test
outsb
mov
pop
adc
int3
shrl
test
push
and
mov
dec
dec
cmp
and
mov
add
mov
xlat
fisubs
push
ljmp
sbb
push
in
cmpsb
mov
in
adc
xor
je
outsl
decb
and
js
jle
movsl
mov
adc
aam
test
ror
dec
addr16
nopl
push
xchg
lock
jnp
add
repnz
jp
in
xchg
jg
jle
and
ja
pop
xchg
pop
push
jbe
dec
mov
jmp
lock
cmp
mov
inc
int3
mov
je
lds
push
stos
movsb
and
frstor
fadd
imul
je
sbb
and
mov
aam
push
imul
fwait
jns
sub
and
movswl
sarl
std
mov
aam
ss
rcrl
lods
stc
add
and
add
dec
sub
lea
les
push
jmp
inc
cltd
in
lret
js
push
sub
push
aad
icebp
ss
mov
bsr
jb
add
dec
and
jbe
xchg
mov
or
pushf
lahf
xor
dec
std
js
jl
je
cli
lds
add
lcall
lret
popf
jne
mov
test
fsubp
dec
push
sub
lea
scas
xor
mov
cwtl
inc
jne
nop
inc
cmp
xchg
xchg
test
mov
lea
dec
loopne
dec
push
test
push
repnz
cmp
push
jecxz
ss
inc
and
stos
or
adc
cmp
dec
mov
lcall
jcxz,pt
cld
inc
xor
lds
ja
push
and
jp
and
lret
sbb
cwtl
mov
fdivrp
into
and
dec
idivb
xor
dec
inc
push
mov
loopne
push
fimull
jb
aad
adcl
jb
jae
xchg
mov
mov
insb
data16
xor
push
lods
inc
ret
aad
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
insl
or
add
add
add
add
add
mov
inc
xor
repz
cli
mov
mov
out
test
inc
imul
mov
gs
nop
mov
fidivrs
xchg
sbbl
push
adc
cmp
out
sbb
push
inc
cmp
mov
pusha
adc
jbe
jns
inc
cmpsb
pop
jl
scas
adc
mov
insl
out
or
es
stos
scas
lret
ljmp
add
fdiv
aaa
dec
xor
fbld
movsl
cmpsl
xor
pop
bound
mov
xchg
pop
add
inc
push
jae
add
dec
aad
cwtl
mov
push
aam
loope
mov
mov
hlt
pop
stc
andb
xchg
ret
fnstcw
sarb
repnz
push
lods
inc
inc
cmp
jne
dec
jmp
lock
clc
sbb
sub
push
in
mov
movsb
enter
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
