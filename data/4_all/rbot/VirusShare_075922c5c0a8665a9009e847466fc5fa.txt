push
mov
mov
push
test
je
mov
test
je
jmp
pushl
pushl
pushl
call
add
mov
test
jne
jmp
mov
movb
mov
mov
mov
mov
mov
pop
pop
ret
pusha
cld
movzbl
test
jne
mov
sub
mov
mov
add
mov
call
mov
movb
cmpl
jne
popa
jmp
popa
pushl
push
call
push
call
ret
pushl
push
call
push
call
ret
mov
push
mov
push
test
mov
je
mov
mov
mov
inc
inc
dec
jne
mov
pop
pop
ret
mov
test
je
mov
push
mov
mov
mov
push
mov
mov
shl
mov
shr
rep
mov
and
rep
pop
pop
mov
ret
push
mov
sub
lea
push
call
test
pop
jne
lea
push
call
pop
leave
ret
push
mov
sub
mov
mov
push
push
pushl
add
push
lea
call
lea
mov
push
push
pushl
lea
call
test
je
cmp
jne
lea
lea
push
lea
push
push
call
test
je
cmpl
jne
mov
xor
mov
lea
push
lea
pushl
mov
mov
mov
call
cmp
jbe
mov
lea
lea
lea
push
push
push
call
test
je
cmpl
jne
mov
test
je
mov
lea
add
push
push
lea
push
call
test
je
mov
cmp
jne
inc
cmp
jb
lea
call
xor
jmp
lea
call
push
pop
lea
call
mov
pop
pop
leave
ret
push
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
pop
pop
ret
push
mov
push
mov
push
mov
push
push
mov
andl
andl
mov
mov
test
jne
xor
jmp
mov
sub
mov
sub
jne
mov
call
test
jne
jmp
mov
cmp
jb
mov
mov
push
add
mov
push
mov
add
push
call
add
add
sub
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
andb
push
mov
mov
lea
mov
add
mov
lea
push
mov
pushl
call
mov
test
jne
and
jmp
mov
sub
mov
mov
lea
push
push
push
mov
add
push
push
call
add
test
je
xor
jmp
andb
lea
push
mov
pushl
call
andl
add
mov
pop
pop
pop
leave
ret
push
mov
push
call
test
pop
jne
push
call
test
pop
jne
push
call
test
pop
jne
mov
test
je
mov
push
mov
add
push
mov
mov
add
push
call
add
xor
pop
ret
push
mov
push
push
mov
push
push
mov
test
je
mov
mov
mov
sub
mov
je
mov
add
push
add
jmp
mov
test
mov
je
mov
andl
sub
shr
test
jle
mov
mov
mov
and
cmp
jne
and
add
mov
add
add
mov
incl
cmp
jl
add
cmp
jb
pop
pop
xor
pop
leave
ret
push
mov
mov
push
push
push
mov
test
je
mov
lea
jmp
add
push
call
test
mov
je
mov
mov
mov
add
test
mov
je
lea
cmpl
je
mov
mov
sub
mov
test
jns
and
jmp
lea
push
pushl
call
test
je
mov
mov
add
mov
cmpl
jne
add
mov
test
jne
xor
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
mov
mov
test
je
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
push
pushl
call
mov
pushl
push
push
call
add
pop
cmpb
je
pushl
pushl
pushl
call
xor
pop
ret
push
mov
pushl
call
xor
pop
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
mov
sub
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
cmp
jae
add
push
push
call
pop
pop
ret
mov
test
jne
xor
jmp
mov
sub
sar
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
sar
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
sar
cmp
jae
lea
push
push
call
pop
pop
ret
push
mov
push
push
mov
push
mov
push
mov
mov
sub
cmp
jae
mov
test
je
mov
sub
cmp
jb
mov
test
jne
xor
jmp
sub
lea
test
mov
jge
xor
push
call
pop
mov
mov
mov
jmp
test
je
mov
mov
inc
inc
cmp
jne
test
mov
jbe
mov
test
je
mov
mov
mov
inc
dec
jne
mov
lea
cmp
je
mov
sub
sub
add
test
je
mov
mov
inc
inc
cmp
jne
pushl
call
mov
mov
pop
add
mov
mov
test
jne
xor
jmp
mov
sub
add
mov
add
mov
jmp
mov
mov
sub
cmp
jae
cmp
lea
je
mov
sub
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
mov
sub
add
je
mov
test
je
mov
mov
inc
decl
jne
mov
jmp
mov
mov
inc
cmp
jne
jmp
test
jbe
mov
mov
sub
jmp
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
sub
cmp
je
dec
dec
cmp
mov
mov
jne
lea
jmp
mov
mov
mov
inc
cmp
jne
add
pop
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
mov
mov
inc
inc
cmp
jne
mov
mov
pop
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
mov
sub
sar
cmp
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
shl
push
call
mov
mov
pop
mov
jmp
test
je
mov
mov
mov
mov
add
add
cmp
jne
test
mov
jbe
mov
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
mov
shl
cmp
mov
lea
je
mov
sub
sub
add
test
je
mov
mov
mov
mov
add
add
cmp
jne
pushl
call
mov
mov
pop
mov
test
lea
mov
jne
xor
jmp
mov
sub
sar
add
mov
lea
mov
jmp
mov
mov
sub
sar
cmp
jae
mov
shl
cmp
mov
lea
je
mov
sub
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
sub
sar
sub
mov
je
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
jmp
mov
mov
mov
mov
add
cmp
jne
add
jmp
test
jbe
shl
mov
mov
mov
sub
jmp
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
sub
cmp
je
sub
sub
cmp
mov
mov
mov
mov
jne
lea
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
je
push
mov
add
mov
mov
mov
add
cmp
jne
pop
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
xor
xor
movl
mov
mov
test
je
add
jmp
movzbl
inc
lea
test
je
mov
mov
inc
inc
jmp
xor
mov
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
cmp
jne
mov
jmp
movzbl
add
shl
add
inc
cmp
je
inc
mov
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
lea
test
jne
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
inc
inc
mov
mov
cmp
sbb
neg
add
mov
mov
sub
mov
add
mov
mov
inc
inc
mov
mov
inc
inc
decl
jne
jmp
mov
pop
mov
mov
sub
cmp
pop
pop
sbb
and
add
neg
sbb
and
leave
ret
add
mov
add
add
add
add
add
inc
add
add
lock
add
incb
add
add
add
add
add
add
add
add
add
add
pop
incb
add
add
add
add
cltd
add
popa
jo
insb
insb
outsl
arpl
inc
add
je
jb
arpl
jae
gs
jo
add
jo
jb
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
mov
jg
adc
add
and
mov
fadds
popa
sbb
adc
pop
ljmp
je
adc
movl
pop
decb
add
decl
lea
andl
jg
cld
mov
jbe
popw
fisttpll
add
jne
test
shlb
inc
pop
pop
fcomps
pop
pop
xchg
cmp
and
in
or
sti
push
mov
push
pop
pop
push
decl
test
data16
pop
enter
sbb
sbb
mov
sbb
lods
add
cmpl
adcb
fcoms
sbb
inc
pop
jge
hlt
mov
add
mov
lods
cld
cmp
xor
fcomip
stos
stos
mov
insl
sti
inc
mov
pop
sbb
in
stos
lea
ja
incl
push
push
outsl
xor
push
push
call
into
sbb
push
push
sti
push
call
lea
pushl
mov
addr16
cmp
adc
out
addr16
push
push
push
in
mov
add
and
mov
mov
sti
add
ret
jne
pop
jbe
push
pop
dec
je
fstl
je
fcmovnu
jmp
add
cmp
loop
loope
fsubrl
ret
loope
fsub
es
int
xchg
out
xor
jecxz
push
push
loope
in
xor
sbb
jmp
push
xor
push
push
outsb
push
fdivrs
jo
lcall
fstpt
call
jbe
xchg
outsl
sub
mov
mov
sbb
sbbb
pop
cld
iret
ret
xchg
xlat
fistpl
xchg
repnz
lock
mov
push
and
and
jb
jo
loopne
lods
nop
push
mov
push
fisttpl
loopne
out
loope
fnsave
lea
cmp
ret
push
je
addr16
in
je
xor
cltd
push
pop
idiv
stc
cmp
jne
cmpl
adc
enter
or
pop
adcl
decb
push
push
or
mov
popa
dec
cmp
fistpl
cld
out
out
mov
nop
and
repz
xor
repz
and
fstps
xchg
mov
insb
repz
or
out
mov
cmp
or
adc
mov
icebp
xor
cmp
in
push
mov
xor
clc
add
add
test
sti
lea
mov
push
bswap
or
or
jl
jl
adcb
mov
mov
mov
int3
dec
int3
mov
movsl
add
arpl
inc
xor
push
push
jnp
int
icebp
pop
mov
pop
cli
mov
les
mov
jmp
pop
mov
fildl
push
subl
or
inc
or
jmp
xchg
pop
inc
int3
inc
notb
pop
enter
es
lock
mov
push
push
add
push
push
mov
ja
mov
jmp
jne
mov
cld
imul
lods
in
add
das
cmpsl
imul
mov
push
lcall
stos
or
clc
je
mov
push
out
call
lock
scas
call
jecxz
push
mov
push
pop
cld
push
push
sbb
mov
insl
sbb
mov
sbb
adc
jne
sbb
cmp
pop
mov
inc
insb
xor
fs
insb
pop
pop
sbb
cmp
dec
sub
xor
sub
push
call
xchg
movsl
mov
fwait
shll
andl
jecxz
jmp
fidivrs
xchg
lock
cmp
sbb
clc
mov
sub
sbb
data16
sbb
ljmp
push
or
rorb
jbe
sub
mov
data16
imulb
int3
fisttpll
push
ret
cmpsb
loopne
dec
test
out
jb
inc
sbb
pop
mov
jne
out
lods
jmp
mov
pop
fsubr
aam
jl
jne
push
jmp
pop
push
cmp
push
movsb
aam
je
mov
loopne
in
inc
je
mov
hlt
or
daa
fistps
fldpi
sbb
sbb
sbb
shr
push
jae
pop
adc
jo
pop
inc
jmp
repnz
mov
cld
movsb
add
ds
notb
xor
jne
push
cmp
dec
push
jl
jmp
inc
cmp
push
sub
sub
mov
sbb
loope
call
adc
dec
loope
xor
xchg
insl
mov
imul
lea
mov
pop
xor
jmp
jl
mov
lods
das
jb
inc
mov
lock
hlt
mov
js
rcrb
adcl
rolb
mov
xchg
adc
shlb
mov
scas
inc
push
xor
fcoml
std
mov
mov
fcoms
decb
call
sbb
push
sub
addr16
test
mov
or
nop
lods
fiaddl
mov
adc
and
pop
and
sti
shr
push
stos
add
mov
cmp
mov
jmp
mov
jo
mov
mov
xor
sub
cmp
inc
fsubrl
adc
insl
pop
xor
test
mov
mov
mov
ja
sub
pusha
mov
inc
sub
loop
jp,pn
out
cmp
shl
daa
pop
jl
and
fstpl
push
or
xor
sub
test
inc
jnp
fcoms
ja
push
popa
add
stos
jge
rorb
dec
and
sub
outsb
and
pop
adc
and
icebp
fsubrs
inc
hlt
jmp
cltd
cltd
int3
fninit
cli
insb
sub
cs
sub
sbb
test
je
lahf
aam
lods
or
cmp
jge
scas
inc
lahf
cmpl
lea
mov
cmp
mov
ss
rcll
xor
mov
push
ret
push
out
push
inc
pop
push
ss
mov
inc
adc
mov
dec
jns
out
sbb
jbe
add
mov
mov
cmp
jl
mov
dec
jbe
xor
push
mov
popf
mov
mov
sbb
xchg
jae
sbb
pop
push
push
mov
jmp
mov
pop
jge
lock
incl
mov
cmp
sti
in
call
aaa
sbb
fcomps
mov
fcompl
push
jle
pop
ror
outsb
lock
movsbl
mov
mov
add
push
mov
jmp
lea
lea
mov
jmp
inc
push
mov
push
in
shlb
sub
push
sbb
dec
test
stos
js
push
xchg
jo
outsl
push
push
mov
sti
jecxz
pop
mov
jo
inc
pop
aad
sub
jp
nop
enter
or
jae
xchg
frstor
push
aaa
mov
fmull
stc
cmp
cmpsl
sar
in
out
mov
or
into
mov
je
jmp
test
push
sub
sti
sub
or
aam
shl
sub
mov
int
clc
jle
fimull
dec
sbb
or
inc
jl
and
sub
dec
mov
inc
xchg
je
sbbl
xor
sub
jge
in
and
adc
push
or
out
adc
mov
push
add
xor
cmp
push
fwait
sub
nop
mov
inc
sub
xor
inc
aaa
ret
ja
sub
clc
je
dec
je
lcall
mov
push
xchg
sub
movsb
enter
and
mov
sub
test
cmp
stc
and
movsbl
mov
sbb
in
jp
add
adc
push
ror
or
add
push
cmp
xchg
sbb
add
scas
or
cmp
xchg
or
nop
adc
js
xor
call
cmp
ja
test
pusha
add
jmp
add
push
mov
or
mov
daa
push
cmp
rcrb
movq
je
and
sub
mov
mov
roll
scas
push
mov
cmp
mov
adc
cmp
outsb
es
popl
inc
divb
push
insl
mov
pusha
or
mov
adc
xor
mov
fsts
push
repz
pop
inc
pop
push
pop
movsl
ret
push
xchg
or
cltd
xchg
or
data16
add
lods
negl
clc
push
mov
cmp
jge
shl
mov
ret
sti
pop
sbb
add
sub
jae
mov
push
sub
adc
pop
sar
testb
or
lea
jmp
out
movb
and
sar
mov
fists
add
jbe
ss
inc
xor
or
cmpsb
xor
pop
repz
add
in
lea
sub
rclb
loop
cwtl
in
adc
push
jae
loopne
cld
inc
out
popl
cmp
adc
mov
imul
nop
int
sub
shlb
pop
ds
call
dec
inc
jno
mov
bnd
dec
addr16
jnp
dec
arpl
mov
sti
clc
mov
cmp
xor
mov
or
or
mov
arpl
sub
fcomps
int3
bound
push
ret
dec
lock
sub
imul
insb
push
push
pop
scas
ret
into
push
jmp
pop
jne
test
mov
pop
loope
aaa
mov
sbb
clc
jge
jg
mov
je
or
adc
shlb
and
sahf
pop
pusha
mov
sahf
pop
xor
imul
push
shr
inc
enter
out
call
test
mov
test
jle
add
rorl
mov
and
setns
and
push
adc
push
outsl
je
or
js
call
rcpps
jns
mov
sub
in
cmp
cmpsl
loop
jg
xlat
xor
outsb
lods
in
cmp
out
int
mov
sub
push
sub
outsl
pop
test
adc
xorb
imul
dec
divl
cmp
adc
inc
inc
add
push
in
call
push
fcom
inc
fcoml
or
sub
or
jo
popf
pop
aas
mov
inc
xor
xor
int
add
mov
mov
loope
push
jmp
cld
into
out
popa
cld
and
add
insb
aam
inc
push
fsubrs
ror
popf
test
push
and
in
pop
aam
inc
fcoml
fsubrs
mov
and
out
xchg
es
add
repnz
push
icebp
arpl
inc
add
adc
mov
call
adc
sub
pop
and
scas
push
paddusw
pop
outsb
sub
cld
jp
inc
pop
mov
cmp
add
or
mov
mov
mov
daa
pop
pusha
jae
cmp
clc
mov
push
nop
jbe
test
cs
mov
sub
mov
ljmp
or
mov
icebp
mov
xlat
mov
or
sbb
andl
insb
aad
mov
lock
dec
out
mov
clc
jns
jae
std
mov
or
fcmove
add
cmp
lods
loope
lret
xchg
inc
shlb
adc
push
push
xchg
push
rclb
or
add
pushf
add
jp
je
cli
sub
and
fadds
xor
and
mov
fcompl
cltd
cmpsl
and
inc
or
jno
mov
sar
dec
and
jecxz
sub
out
pushf
or
testl
push
sub
mov
adc
pop
cmp
insb
cmp
ja
cli
push
add
xor
or
push
dec
cwtl
xor
sahf
stos
sbb
jns
test
call
les
add
xor
int3
xchg
test
xchg
inc
jge
or
rolb
cmpsb
std
mov
xchg
sbb
and
or
jbe
xor
add
push
jne
jmp
push
and
fs
call
push
cmpb
or
test
popf
call
sbb
and
and
shl
or
fmull
cmpsb
push
inc
out
adc
es
push
sbb
aaa
fstpl
dec
ret
push
mov
fadd
pop
pop
fcompl
call
idivb
out
sub
in
sub
sbb
mov
or
inc
dec
lock
add
mov
xchg
cmp
mov
or
push
add
pop
xor
divb
mov
addl
push
push
mov
jmp
or
js
add
sub
insb
cltd
fsubrs
sbb
fistpl
in
sub
icebp
jg
lret
mov
lea
lock
outsl
mov
xor
add
movsb
fwait
rorb
lock
cmp
aas
and
mov
insl
adc
mov
add
lidtl
shl
fildl
lret
insb
push
in
mov
test
loop
sub
negb
xchg
add
imul
jle
jbe
add
mov
inc
xor
xorb
call
cmp
loope
in
mov
dec
jb
pop
clc
shll
not
or
inc
and
icebp
mov
jnp
adc
add
push
aaa
xchg
cmpsb
rorb
cli
rolb
xchg
or
sbb
into
hlt
mov
call
adc
fucomip
push
inc
pop
ret
loopne
lods
pop
push
cmp
jb
pop
hlt
adc
mov
add
dec
dec
popf
sahf
sub
push
es
inc
in
xchg
sbb
cmp
in
ficomps
aaa
subl
lcall
sbb
jo
cld
lret
jne
mov
cmp
lea
outsl
xor
push
push
dec
adc
call
adc
arpl
out
cmp
je
lea
shrl
mov
stos
jmp
mov
or
add
mov
ja
andb
mov
loope
lock
adc
dec
and
sbb
leave
jo
call
movsb
push
pop
je
imul
clc
test
test
sbb
add
mov
fs
adc
add
lret
mov
inc
clc
inc
push
jne
or
test
jne
adc
out
aad
inc
xchg
iret
addr16
jge
out
and
stos
jo
add
fs
out
call
sbb
push
jne
mov
mov
xchg
out
xor
mov
dec
push
push
push
icebp
or
push
rcll
repz
jmp
xor
fdivs
sbb
lods
ljmp
jne
sbb
mov
mov
ljmp
cmp
push
push
incl
aaa
shl
add
jl
xchg
hlt
pop
cmpsb
movsl
xchg
lock
imul
mov
jp
sub
popf
outsb
je
add
mov
jbe
mov
fcmovnbe
add
pop
mov
mov
and
inc
scas
scas
push
cltd
jl
xor
sbb
mov
add
pop
int
sbbl
sub
orl
add
cmp
mov
or
pop
call
pop
xchg
loopne
or
dec
stc
cmp
push
jae
pop
out
or
sub
imul
push
sbb
icebp
lods
xchg
xchg
jg
push
iret
outsb
jbe
jp
or
jl
sbb
sub
jne
insb
aaa
add
cmp
jae
or
call
sbb
mov
inc
add
dec
or
xchg
jl
or
inc
sub
pop
mov
mov
inc
xor
shll
sbb
sahf
inc
lret
sbb
xor
mov
test
ret
xchg
inc
es
std
jbe
in
sbb
repz
sarb
ret
mov
clc
cmp
je
sbbb
adc
cli
or
jne
dec
adc
call
inc
mov
push
and
adc
sbb
out
xor
jl
lods
ljmp
pop
dec
lea
mov
jge
or
mov
mov
loope
or
rcrb
fisttpl
xchg
loope
push
lods
addb
push
jge
pop
xchg
pop
dec
mov
testl
add
cmp
add
mov
push
mov
xor
sbb
je
adc
sbb
add
add
mov
adc
or
pop
inc
outsl
cwtl
pop
and
cli
sub
cmp
jae
fadds
mov
sub
add
dec
inc
add
sbb
sbb
pop
mov
cmp
push
pop
mov
pop
sbbb
mov
pop
inc
sahf
and
sub
pop
aaa
iret
test
imul
in
jbe
adc
add
stos
jge
out
and
in
imull
xor
insl
incl
xor
mov
inc
xchg
ss
and
scas
push
loope
pop
popa
insl
jbe
fadd
push
xor
negl
push
in
sbb
js
pop
or
sahf
add
jo
inc
or
les
loope
subb
xchg
sbb
push
add
push
mov
pop
add
stc
shr
test
mov
lock
push
pop
xlat
mov
dec
aaa
cmc
mov
pop
pop
jnp,pt
out
cmp
ret
testb
add
in
orb
push
sub
add
dec
arpl
or
jb
add
sbb
ret
jbe
roll
clc
mov
mov
cltd
scas
dec
fucomip
roll
movsl
mov
mov
cmpb
jl
jb
pop
pop
fmull
das
xor
dec
dec
fsubr
outsl
sub
decb
sub
and
lea
cmp
ja
jmp
add
sbb
adc
adc
pop
mov
sub
mov
mov
adc
mov
xor
sub
xchg
jne
stc
mov
clc
cs
mov
jnp
and
aaa
push
pop
adc
or
adc
xchg
or
pusha
mov
test
call
xor
in
sub
push
out
sub
push
mov
dec
in
xchg
dec
push
sbb
sarl
test
sub
and
xchg
xchg
shll
call
push
inc
mov
outsb
dec
fcomp
jnp
cmp
xchg
mov
mov
fldl
xchg
add
negl
movsb
and
push
mov
dec
das
rolb
xchg
and
and
adc
jmp
xor
out
sbb
insb
scas
iret
add
sub
xchg
jge
shl
dec
pusha
ss
mov
mov
mov
shl
sub
fstpt
push
or
cmp
add
adc
inc
cltd
test
clc
std
pushl
sbb
pop
push
and
add
adc
adc
cli
pop
adc
fisubs
fadds
xor
fisttps
f2xm1
jb
ret
icebp
hlt
inc
inc
clc
shrb
sbb
sti
xor
jne
cs
push
enter
out
push
inc
mov
dec
inc
sbb
xor
leave
es
in
sub
sub
adc
pusha
pop
mov
mov
push
int3
and
sub
out
addr16
mov
nop
mov
dec
data16
push
out
or
aam
push
scas
sbb
add
inc
lcall
jmp
or
inc
mov
mov
cltd
pop
scas
pop
sbb
cwtl
mov
and
enter
lcall
cltd
mov
jge
mov
movsb
or
test
adc
lods
outsb
mov
mov
es
push
ss
jae
dec
or
mov
stos
cmc
movl
out
jp
jg
add
pop
je
adc
ljmp
adc
jmp
inc
imulb
jo
cli
add
test
push
add
icebp
add
fwait
push
and
inc
jns
inc
push
jbe
test
sar
push
fmuls
es
pop
dec
xchg
add
mov
int3
mov
pop
call
loope
jmp
mov
jne
adc
cmp
call
and
mov
add
adc
sbb
lret
and
test
test
je
mov
pop
add
push
pop
or
sbb
inc
add
mov
sbb
jl
sarb
outsb
pop
add
jno
mov
roll
fisubrs
adc
add
das
xchg
dec
pmulhw
add
push
shrb
iret
xchg
repnz
adc
clc
mov
jmp
pop
mov
sbb
lock
imul
loop
mov
stc
inc
xor
cmp
xchg
out
xchg
es
hlt
setne
out
jno
dec
or
outsb
adc
pop
out
loopne
pop
jge
add
mov
pop
and
popa
push
stos
testl
jne
jne
mov
enter
sbb
adc
cmp
adc
fsubrs
sbb
push
jmp
dec
sub
mov
mov
push
xor
xlat
mov
push
sti
or
fbld
mov
gs
hlt
cmp
add
sub
sbb
add
cli
pusha
dec
sbb
in
stos
dec
and
xor
jp
jge
lock
jp
pop
mov
movl
jmp
shlb
divb
or
std
jle
xchg
add
cld
inc
xor
lret
pusha
and
dec
clc
jne
and
mov
or
dec
mov
xorb
and
xor
outsl
mov
sbb
inc
in
fcompl
andb
mov
sbb
push
mov
dec
push
mov
cmc
ja
mov
push
or
and
jne
leave
rclb
adc
pop
cmp
arpl
cld
sbb
aaa
and
push
shlb
sti
inc
push
ljmp
jl
adc
inc
popa
ljmp
stos
push
or
adc
into
jge
rolb
pop
mov
sbb
subb
push
jmp
daa
pusha
fcoml
and
out
call
clc
mov
cltd
mov
mov
sbb
push
test
inc
xor
push
fs
mov
xor
push
push
insl
jne
dec
mov
push
stc
add
jmp
push
adc
cmp
sbbl
nop
pop
jge
call
add
push
hlt
adc
mov
ficompl
sar
and
add
mov
add
inc
fldl
push
xchg
stos
add
pop
mov
add
adc
add
insb
in
push
push
and
mov
push
loopne
push
lods
out
je
add
out
std
adc
adc
mov
les
ss
mov
add
pop
imul
call
jbe
out
fisttpll
or
fprem
push
sbb
cmpsl
incl
dec
out
mov
paddusb
pop
jbe
pop
nop
mov
fwait
xchg
pop
insl
fadds
push
and
xchg
push
mov
push
jl
in
inc
in
jnp
addr16
arpl
xorb
pop
add
or
leave
insb
jbe
adc
pop
arpl
lock
in
or
inc
insl
sub
mov
inc
nop
fwait
es
rorb
sub
sbb
fidivl
inc
add
and
cmp
inc
enter
mov
mov
insl
in
test
in
pop
adc
inc
jne
pop
mov
jns
pop
jo
mov
dec
loopne
test
dec
rolb
xchg
adc
push
or
mov
xor
ret
fimull
sbb
call
or
daa
call
push
loope
sbb
shl
aas
push
mov
push
sbb
dec
je
xor
call
pop
lea
sbb
and
cltd
idiv
inc
daa
mov
push
xor
mov
push
cwtl
pushf
add
jne
rorb
in
sub
dec
in
shrb
cmp
pop
xor
sbb
push
dec
aaa
mov
cmc
call
negb
xor
les
cs
xor
lret
push
lret
add
push
enter
daa
jne
popa
js
sbb
dec
xor
xor
xor
sahf
loopne
fidivl
mov
fcoms
addr16
cld
dec
jl
xsave
data16
or
aaa
xor
dec
or
cmpsb
inc
sub
push
inc
test
add
mov
push
xchg
lods
push
pop
fsubr
imul
test
aam
mov
sbb
out
ss
out
add
addr16
jbe
je
sarb
xchg
fcom
shl
repz
or
leave
inc
xor
sub
out
jmp
fcompl
mov
aaa
mov
mov
ret
xor
mov
sbb
jae
enter
xor
add
cmp
add
insl
push
inc
mov
xor
shrb
add
adc
or
push
push
and
jae
daa
sub
in
xor
mull
jbe
mov
lock
add
outsl
mov
shr
push
push
dec
jne
jge
mov
sbb
mov
sti
out
cmp
sbb
arpl
daa
cmp
leave
leave
popa
jbe
push
addb
mov
mov
je
out
and
cltd
or
subb
add
add
jg
in
cs
dec
in
pop
mov
and
in
add
gs
or
jne
leave
pop
mov
and
and
lods
xchg
push
adc
mov
leave
mov
in
pop
fdivrs
scas
dec
and
in
call
sbb
or
shr
pop
cmpl
add
jl
push
or
sbb
arpl
or
insb
or
inc
mov
enter
add
sarl
mov
cld
ja
jne
xchg
add
add
sarb
cmp
in
int
jl
out
or
enter
or
push
adc
or
lahf
testb
mov
mov
cmpsb
adc
movsl
mov
pop
inc
pop
stos
pop
into
pop
push
loope
push
arpl
add
jnp
jne
sbb
xchg
adc
lock
or
jge
imul
and
into
jl
sub
int3
and
sahf
or
mov
fildl
mov
mov
xor
in
adc
ds
push
ficompl
cmp
adc
data16
or
mov
fdivrl
das
pop
shrb
pop
fidivs
jne
mov
std
jle
call
xchg
xor
out
fildl
pop
inc
xor
sub
dec
aam
sub
jae
daa
mov
push
lcall
dec
jne
std
popa
sbb
inc
test
ficomps
pop
test
enter
or
jb
sub
notb
mov
adc
test
in
adc
ret
sub
in
jo
div
std
push
aam
pushf
mov
xchg
out
push
mov
dec
jo
cmp
pop
call
jnp
xor
mov
mov
xor
mov
adc
pminsw
add
cs
add
mov
and
es
adc
lcall
sbb
cmpsb
lret
ljmp
sub
aam
inc
lods
push
add
flds
hlt
dec
fidivl
fiadds
mov
adc
cmp
adc
clc
mov
adc
mov
xor
ljmp
int3
call
aad
mov
inc
push
stos
lea
adc
lock
push
and
pop
in
xchg
xlat
push
push
dec
aaa
enter
push
dec
icebp
fmull
fdivs
jb
pop
xchg
aaa
enter
mov
dec
insb
cmovne
ljmp
stos
dec
aaa
or
xchg
aas
and
and
cld
cmp
cmp
sahf
insl
mov
push
sub
mov
cmp
call
ss
popf
push
push
cld
dec
dec
enter
and
xchg
adc
push
adc
xchg
xor
push
std
dec
or
pusha
inc
mov
std
es
sbb
mov
mov
sub
pusha
xchg
call
cmpsl
rcl
aam
pop
orb
pop
add
sti
addr16
dec
lds
pop
adc
and
rol
push
mov
fwait
push
cli
call
xchg
rol
add
daa
pusha
aad
test
enter
int3
xchg
pop
fnstcw
and
bound
or
xor
dec
addr16
pop
xorl
jnp
insl
cmp
jns
and
cmp
aam
pop
inc
mov
and
inc
mov
dec
es
xchg
xchg
or
adc
or
add
cmpsb
jmp
ficompl
fdivrl
je
mov
push
out
inc
stc
sbb
dec
xchg
in
cmp
dec
jecxz
mov
ret
jne
dec
and
mov
shlb
add
sub
mov
xor
cmp
pop
std
mov
fnstcw
sbbl
call
lea
pop
jo
adc
in
je
mov
lock
pop
pop
cmp
dec
repnz
push
xchg
dec
cmp
pop
xchg
hlt
nop
call
dec
pop
popa
pop
push
push
xchg
push
cmc
inc
lret
fxtract
push
mov
mul
shl
sub
and
ss
jmp
clc
packssdw
leave
movsl
push
xor
and
mov
push
pop
dec
or
push
add
push
lds
jle
jge
mov
mov
sbb
push
adc
jmp
mov
hlt
call
fldcw
xor
or
std
testb
cmp
or
push
bound
push
xlat
insb
sub
ja
scas
or
mov
pop
adc
push
jp
mov
and
cmp
std
or
insb
inc
addb
jge
addb
fbld
adc
mov
add
mov
lods
xchg
mov
fs
cs
nop
xor
jl
or
xchg
mov
add
inc
jecxz
or
push
cld
add
testl
inc
mov
mov
imul
out
lea
xchg
sarl
mov
xchg
loopne
pop
inc
and
in
add
pop
jae
sbb
dec
pop
sub
nop
dec
inc
movsb
sahf
and
adc
lcall
sbb
pop
push
push
flds
decb
andl
bound
pop
imull
test
mov
or
ljmp
mov
add
outsl
stos
cmp
lea
xlat
pushl
sub
cmp
fidivrs
xchg
repz
sbb
add
clc
lock
lock
mov
out
or
xor
pop
dec
mov
inc
mov
jns
xor
loopne
movsl
xchg
jg
xor
mov
or
jl
decb
notl
les
jne
push
ss
adc
daa
push
jg
call
mov
and
lods
in
pop
ret
push
ret
in
adc
loope
and
mov
shlb
pop
push
adc
dec
push
xlat
sub
pop
inc
popf
call
les
jl
in
rcrb
sbb
ss
inc
cmp
pop
mov
push
push
mov
call
icebp
shrl
in
lea
mov
pop
imul
add
and
js
or
jb
cmp
jge
push
scas
cmp
xor
adc
cmp
int
dec
add
push
jno
jb
xor
fimuls
mov
sub
scas
and
loopne
sub
sub
sbb
push
daa
fwait
push
xor
xor
int
and
push
mov
cld
sbb
cltd
aas
lea
and
fbstp
inc
adc
xchg
jg
test
lcall
les
jnp
dec
fs
rol
cld
or
bound
xchg
add
xor
jmp
pop
push
push
or
test
add
mov
and
jmp
fnstenv
ret
shr
mov
add
cmp
sub
xor
inc
dec
jne
xchg
jp
pop
shl
rcrb
test
push
mov
or
and
push
push
and
dec
popa
and
inc
inc
test
lds
or
test
in
push
imul
or
adc
inc
or
je
arpl
daa
outsb
mov
fdivr
ja
call
mov
jb
out
xor
clc
out
mov
je
add
inc
push
mov
cmc
lock
or
inc
call
and
and
faddl
hlt
int3
jo
mov
daa
stos
or
fcomi
jmp
add
mov
aam
and
sti
xchg
cmp
and
jo
daa
test
push
cli
pop
call
fcomps
sti
xor
ljmp
das
fwait
sbb
inc
roll
mov
jge
jne,pn
push
cwtl
sbb
push
mov
pop
pop
ficompl
dec
mov
jo
mov
dec
inc
dec
insl
fsubrl
shlb
pop
fs
jb
cli
push
enter
push
ret
lcall
push
sbb
adcl
xor
mov
push
movaps
cmp
std
push
push
adc
adcl
jecxz
test
in
shll
and
ret
mov
dec
pop
cli
inc
repz
inc
sahf
jo
or
mov
or
xor
jo
sbb
push
sbb
fs
mov
or
orb
mov
push
sar
cmc
xchg
sub
pop
cli
aaa
rcrb
aam
adc
js
mov
out
push
sub
ja
sbb
adc
inc
inc
mov
cs
xchg
and
testb
test
std
jne
push
pop
jmp
test
fcmovnb
mov
cld
in
stc
ljmp
pop
push
jbe
push
push
lods
mov
xor
jbe
or
out
pop
jmp
call
loop
sti
movsb
add
popf
sbb
loopne
scas
cld
mov
inc
sbb
pusha
xor
mov
scas
inc
or
pop
xor
sbb
xor
jge
push
rcrb
and
mov
inc
cld
sbb
push
lock
jno
push
sub
mov
popf
push
mov
jo
cmp
inc
or
push
data16
cmp
lea
mov
add
push
iret
mov
test
ja
sbb
or
int
mov
dec
jmp
xor
or
inc
add
mov
inc
flds
cmc
push
jle
imul
neg
xor
xor
adc
loopne
loopne
xchg
jo
adc
icebp
xchg
cs
jmp
cltd
add
sbb
adc
daa
aas
cmp
ret
jl
cld
or
jne
mov
cmp
add
hlt
out
adc
int3
adc
jl
jl
add
sarb
stos
adc
out
jne
and
push
bound
nop
push
inc
and
inc
mov
and
lods
test
lods
and
sti
xchg
lods
push
cmp
push
punpcklbw
loopne
imulb
mov
loopne
enter
jp
inc
inc
inc
lcall
pushf
mov
push
push
mov
ds
pop
xor
push
ljmp
into
lods
add
pop
inc
jmp
push
inc
push
or
ss
jb
xor
pop
or
call
ljmp
test
mov
push
call
sbb
jl
push
leave
add
cmp
cwtl
sbb
add
dec
or
sti
outsb
mov
mov
and
cmp
aad
add
pop
push
and
hlt
add
pop
jmp
addr16
push
xchg
fnsave
hlt
push
out
push
adc
xchg
add
or
fsts
add
mov
add
jbe
or
lods
jle
call
andb
push
loop,pt
add
in
aad
stc
movl
mov
pop
in
fdivs
adcb
adc
xchg
add
rcrl
xchg
jns
push
or
popa
mov
movsl
sbb
sbb
jp
stos
add
loop
adc
inc
insb
push
inc
push
ljmp
mov
cmp
je
adc
and
addl
and
mov
xor
into
jbe
jae
sbb
mov
in
sub
pop
mov
pop
sbb
or
out
mov
and
mov
shrl
mov
and
loopne
inc
out
push
add
lcall
aaa
inc
mov
mov
mov
pusha
push
xor
into
fwait
mov
ret
je
sub
insb
idivl
fcoms
sahf
jo
adc
aaa
cmp
call
ret
sub
cmp
jbe
mov
aaa
adc
add
insb
add
push
je
cmp
ja
test
add
daa
mov
rolb
jge
mov
fmuls
add
push
sahf
repnz
jle
popa
lds
xor
dec
dec
je
inc
sbb
push
mov
jl
xor
add
sub
mov
xor
cmp
sub
rcr
div
or
enter
or
fidivrl
jae
jbe
enter
adc
fdivrl
inc
adc
mov
addl
lods
icebp
dec
sbb
add
fdivp
mov
in
ss
das
sbb
cmp
push
mov
loopne
call
mov
sti
imul
or
gs
push
push
push
inc
fsts
push
icebp
es
xor
test
mov
jge
sub
add
push
outsl
or
mov
or
aad
add
jbe
lock
push
cmp
dec
iret
call
cmp
enter
lock
filds
leave
nop
adc
mov
loopne
mov
adc
adc
add
mov
dec
fsubrl
and
push
inc
push
mov
jle
push
cmpsl
inc
insl
sub
pop
mov
imul
pop
scas
and
add
sub
nop
add
add
dec
inc
and
jmp
out
push
add
loopne
out
sbb
or
xchg
pop
sub
cltd
add
leave
or
jl
jle
mov
or
add
btcl
and
dec
in
daa
sbb
mov
adc
mov
popa
cmpsb
ds
xor
fbld
les
pusha
or
add
jle
xor
mov
or
mov
je
adc
pop
xchg
cltd
idiv
test
hlt
sub
jmp
test
push
mov
inc
dec
push
mov
repz
js
pusha
in
xor
in
je
dec
add
vmread
mov
mov
push
xchg
dec
xchg
inc
xchg
cmp
adc
shll
inc
test
loopne
and
push
mov
clc
add
call
push
lea
push
pop
loope
call
xor
mov
cwtl
lcall
jge
call
adc
and
and
push
hlt
sbb
pusha
mov
subb
sub
jmp
adc
prefetcht0
cmp
js
cmp
insb
sbb
push
lea
js
sub
frstor
adc
sub
es
lcall
in
pop
jmp
fdivrl
idiv
in
add
dec
dec
repnz
pop
in
and
sbb
insl
icebp
mov
das
sbb
add
add
sub
out
xchg
adc
cmp
mov
cmpsb
inc
subb
sbb
in
jne,pn
push
ss
hlt
and
pop
test
xor
pop
mov
xor
scas
adc
mov
mov
dec
repz
in
mulb
push
adc
mov
add
add
insl
xchg
in
sbb
inc
xor
insl
sarb
int
push
mov
adc
adc
jmp
push
push
outsl
adcb
xor
lock
jbe
push
push
adc
pop
mov
je
xor
mov
xor
and
adc
dec
leave
xchg
outsb
sbb
mov
push
jne
fistl
cmpsb
push
or
or
cmp
sbb
xchg
insb
call
pop
pop
stos
dec
sbb
call
or
daa
add
pop
aam
inc
lods
pop
push
or
pop
fisubl
mov
inc
push
push
ljmp
sub
adc
push
mov
jo
fwait
lock
lods
push
int
mov
inc
into
and
loopne
xchg
lea
xor
movsl
outsl
sub
mov
cmp
ja
add
fs
mov
fwait
push
jmp
and
mov
fs
nop
cwtl
loop
inc
insb
mov
jle
lcall
pop
pop
or
pop
mov
add
ja
push
into
or
ljmp
dec
add
subl
or
adc
dec
add
es
pop
push
jmp
pop
jb
sbb
rcl
jmp
mov
sbb
adc
push
adc
das
push
xchg
es
mov
pushf
jmp
push
xlat
lods
dec
ja
cmp
jbe
jno
sbb
adc
mov
cltd
mov
jmp
or
je,pn
pop
mov
ficompl
push
sahf
or
sti
jbe
adc
push
inc
or
test
jnp
inc
sbb
add
aas
les
push
ss
or
je
xor
xchg
rcll
and
mov
je
add
testl
out
push
aaa
xor
sbb
in
mov
mov
test
push
xorl
mov
add
into
and
je
insb
outsb
call
iret
cld
or
add
insb
sarl
push
mull
popa
adcl
lds
lcall
mov
push
xchg
test
lcall
decb
mov
mov
test
inc
jb
cmp
sbb
dec
js
mov
and
push
push
mov
in
xchg
pop
cwtl
test
pop
sti
mov
pop
js
jae
sub
jo
jne
inc
mov
push
jne
pop
call
cmc
call
inc
filds
popf
push
push
loopne
nop
lock
lods
out
ja
xor
inc
enter
orb
push
xchg
sub
pop
xor
xlat
lret
xchg
dec
daa
and
das
or
mov
pop
sub
pusha
sub
popf
and
loopne
adc
add
inc
xchg
mov
xor
ret
out
push
out
nop
mov
aas
fsubs
mov
push
push
push
sub
xchg
or
push
or
cmp
pusha
call
push
shlb
cs
adc
subb
jge
je
sbb
lea
sbb
mov
sbb
mov
das
inc
dec
pop
jle
sbb
mov
dec
push
test
rorb
mov
cmpw
jne
push
mov
sbb
add
bound
ret
cmp
and
in
addr16
cmp
or
pop
adc
test
mov
out
or
ret
lods
jge
pop
lods
in
add
or
shlb
imul
je
and
cmp
int
addl
fstps
loopne
adc
fs
ret
sbb
cmp
in
jl
sbb
jb
pusha
pushf
insl
outsb
push
mov
insl
xchg
add
and
push
aad
pop
pop
movsl
push
add
add
add
dec
stos
mov
jp
inc
rorb
lods
and
mov
fldcw
add
add
jge
lock
jg
pop
shll
dec
dec
js
jmp
shrb
jl
jo
je
movsb
mov
pop
xor
clc
dec
sarb
pop
push
fldt
inc
aad
mov
roll
add
xchg
add
ss
inc
push
adc
dec
mov
xchg
pop
aas
jo
jns
test
sbb
pop
fs
sub
push
push
pop
je
insl
inc
int3
inc
mov
inc
cmp
clc
jb
jmp
push
sbb
xchg
add
sub
adc
push
sbb
adc
add
scas
or
call
push
testl
bound
mov
cli
inc
sbb
sub
xor
filds
pop
insl
lock
push
cmp
jge
ljmp
dec
es
sahf
add
leave
ret
loopne
pop
adc
mov
fwait
mov
rol
fmuls
cmpl
jo
lahf
outsb
je
mov
in
aas
mov
and
stos
cmp
in
add
push
sbb
jmp
push
mov
clc
dec
dec
push
addr16
test
sub
mov
xchg
data16
adc
mov
xchg
in
inc
sub
mov
add
cmp
jno
xchg
sbb
addb
or
mov
fstpt
clc
add
je
inc
inc
inc
mov
xor
push
add
or
mov
push
sub
push
inc
mov
or
js
scas
daa
add
rcrl
inc
insb
or
pop
inc
xor
fstl
insb
repnz
add
test
fiadds
xchg
mov
push
and
push
and
nop
out
test
sbb
xchg
sbb
int
call
rcll
add
call
aas
and
or
cmpl
inc
mov
insb
inc
lock
and
push
sub
cmp
sbb
adc
sub
jne
cmp
pop
jmp
xlat
cmpb
jle
or
inc
cs
lock
add
mov
sbb
mov
in
rcrb
fs
jmp
jb
jb
sub
xchg
stos
out
pop
jbe
in
push
loope
nop
adc
rclb
sub
adc
jns
jne
adc
cmp
dec
xchg
push
xorl
incb
idivl
rolb
clc
ret
mov
jmp
test
call
aas
push
dec
push
je
adc
pop
dec
mov
sub
inc
bound
imul
fcom
dec
and
add
fisubrl
push
push
pop
mov
iret
ljmp
fmulp
or
shrb
push
jae
push
xchg
pop
push
xor
push
es
movsl
stos
inc
cmp
mov
add
pop
sub
in
aam
sbb
cmp
sub
mov
cs
mov
jne
sarb
mov
je
xor
addr16
je
push
mov
push
addr16
xchg
nop
xor
add
or
or
cmp
xchg
testl
sbb
pushf
mulb
sbb
aas
or
pop
jmp
xchg
loopne
inc
aaa
or
pop
jnp
xor
push
lret
ficoms
push
hlt
nopl
sbb
cmc
fdivrl
mov
cmp
xor
push
mov
movsl
push
mov
push
mov
or
inc
mov
adc
adc
mov
xchg
or
or
xchg
jne
and
xchg
sub
mov
or
adc
or
or
inc
sbb
repz
pop
call
int3
or
jnp
mov
and
xchg
push
inc
add
xor
in
dec
lea
les
cmp
or
je
mov
pop
mov
xor
jb
or
addr16
xchg
and
pop
je
pop
addr16
adc
push
cvtps2pd
hlt
dec
add
jb
std
sub
fwait
in
jbe
mov
jge
shr
adc
inc
loope
subb
movsb
inc
adc
mov
pop
adc
mov
addr16
in
or
daa
aam
sub
les
xor
in
arpl
sbb
js
nop
and
and
mov
mov
cmp
pop
sub
xor
je
xlat
pop
inc
in
je
pop
sahf
js
pop
fsubr
adc
in
pop
jmp
iret
sbb
jo
lret
adc
adcb
or
popf
mov
or
pushf
cmp
lods
pushf
sub
movsb
jp
and
shll
xchg
enter
push
movsb
jp
add
ret
dec
addl
pop
jge
insb
popf
imul
pop
insb
lock
inc
dec
inc
cmp
pop
popf
mov
mov
scas
mov
or
mov
js
in
xchg
fs
pushf
xchg
dec
mov
test
mov
addb
repnz
jp
pushf
push
dec
shrb
test
add
push
push
inc
xchg
daa
sub
inc
scas
mov
fmuls
fnstenv
clc
pop
or
enter
rorb
orb
mov
pushf
mov
int3
pusha
xchg
mov
movsb
mov
out
mov
or
bound
pop
enter
xchg
jp
int3
jb
jp
pop
arpl
pop
and
fsts
mov
pop
jbe
mov
or
jbe
or
sub
sbb
or
inc
cmp
jbe
or
and
mov
mov
dec
fcomps
or
and
or
xor
fadds
or
adc
jmp
pop
mov
or
mov
dec
loopne
aam
addr16
or
dec
ror
sbb
call
mov
sub
mov
add
sbb
mov
jbe
or
jo
pushf
xor
or
into
test
or
into
sbb
or
dec
push
inc
or
xor
inc
into
sbb
or
xor
or
test
adc
mov
add
stc
add
cmp
in
fs
loope
hlt
jp
aad
add
xchg
leave
xchg
and
mov
adc
jnp
cltd
mov
mov
jns
pop
jnp
jno
ds
imul
pop
out
pop
lret
push
jo
dec
mov
adc
xchg
jl
push
pushf
jnp
or
jnp
fs
lret
bound
jo
push
icebp
push
fcompl
insb
pushf
aam
push
jnp
rolb
mov
pop
adc
pop
or
sub
mov
test
fdivs
mov
mov
add
mov
cmp
pop
clc
jo
xor
pop
lret
sub
cmp
pop
les
mov
cs
xor
add
fidivl
shr
lret
cmp
rcrl
sbb
xor
stc
ret
push
je
lea
test
in
sbb
or
cmp
adc
test
cmp
je
test
cmp
push
xchg
in
adc
iret
bound
dec
xchg
pusha
je
or
in
test
adc
mov
mov
or
shl
add
jle
or
jo
add
dec
mov
sbb
das
jl
add
in
jp
adc
adc
sarb
jl
jp
jo
ret
push
fdivrl
fs
js
inc
and
ret
push
or
jp
sarb
sub
fwait
push
dec
add
call
and
pop
imul
sub
and
aam
dec
movsb
popa
sub
add
je
in
and
mov
pop
jb
jl
in
jae
xchg
and
sbb
arpl
and
in
fs
cmp
jl
push
orl
rcrb
sub
pusha
or
sub
push
shll
or
daa
fsubs
movsb
pusha
jge
shlb
jns
cmp
out
push
pop
jns
sbb
dec
fldenv
sbbl
mov
inc
pop
inc
fs
test
repnz
not
cmp
test
filds
sahf
sub
rorl
clc
adc
cmp
call
dec
jnp
xor
sub
push
cs
inc
inc
dec
jb
repnz
sbbl
leave
or
fwait
xchg
leave
fs
cmp
shlb
nop
addr16
sbb
inc
movsb
dec
xor
jo
je
iret
in
pop
jo
cmp
icebp
push
js
xchg
jl
shlb
lret
inc
nop
andb
sbb
sub
mov
pushf
inc
aam
and
arpl
adcl
sub
pushf
cs
sti
lock
andl
sub
lods
cs
add
fs
fsubs
into
and
mov
adc
adc
es
call
pop
or
add
jge
arpl
jp
inc
push
jae
je
push
push
call
xor
fistps
xchg
add
push
or
adc
cmpb
push
movsl
test
fcompl
inc
out
out
mov
fcoms
add
test
cmp
inc
xor
mov
adc
inc
xor
add
int3
adcb
add
mov
dec
mov
xor
pop
mov
leave
jp
jne
dec
rorb
loop
test
addb
xor
push
dec
fbstp
mov
cmp
je
add
add
enter
xor
and
jle
cmp
movsl
test
cmp
je
subl
mov
cmp
jl
cmp
jb
adc
jge
lods
ret
aaa
sbbb
push
dec
inc
ds
adc
lock
mov
js
pop
push
sbb
mov
inc
mov
decl
idivl
inc
or
and
add
mov
popa
pop
jl
cmp
jg
adc
pusha
test
add
mov
cmpsb
lock
and
inc
sub
push
or
out
push
out
dec
adc
jne
dec
pop
sbb
dec
mov
jmp
rcrb
enter
fs
push
pop
loopne,pn
loope
push
loope
je
pop
mov
popf
pop
mov
push
hlt
mov
sub
or
roll
fstpt
jge
ss
lea
decl
cmp
and
mov
es
shll
dec
outsb
pop
jg
sub
sbbb
sub
xor
in
inc
les
sub
or
add
push
decb
jg
mov
or
inc
jmp
add
outsb
dec
lea
jb
sbb
je,pn
add
and
jg
push
mov
lahf
mov
scas
xor
and
test
add
scas
push
mov
sub
les
mov
mov
loopne
imul
push
fdivrs
xchg
sbb
adc
mov
test
cmp
je
xor
pop
insl
add
mov
sbb
testl
inc
in
call
jnp
ficoml
and
xorb
enter
sbb
jae
push
in
mov
push
test
adc
pop
inc
or
push
shlb
jo
or
in
loop
add
in
mov
fdivrs
jae
mov
and
push
int
add
je
addl
lock
push
mov
fsubrl
ds
sbb
dec
add
ss
xor
repnz
inc
cwtl
stos
mov
fisttpll
jmp
add
fadds
lods
add
jmp
xchg
in
ljmp
pop
addl
jnp
mov
cltd
hlt
in
inc
ret
sub
in
add
ss
out
mov
pop
loopne
std
xchg
or
mov
enter
decb
xchg
or
dec
sti
and
xor
xor
mov
cmp
or
inc
lret
les
mov
and
add
scas
test
jge
inc
rorb
mov
movl
aam
pop
sarb
int3
daa
fisttpll
adc
adc
push
and
sbb
xchg
and
mov
outsb
adc
test
and
pop
scas
mov
fsubl
mov
push
fmuls
or
subl
insb
pop
mov
leave
ret
inc
scas
push
cmc
shr
out
call
mull
jp
sub
test
inc
add
shl
insb
cmp
loopne
inc
adc
adc
xlat
push
xor
aad
test
pop
pusha
sub
imul
cmp
mov
sbb
inc
dec
inc
adc
negb
pushl
adc
and
push
add
test
xor
sarb
jne
rorl
jmp
jecxz
incl
sbb
rolb
in
lock
pop
push
dec
subb
add
sbb
add
push
push
sarl
or
pop
call
push
sub
push
out
pop
or
or
adc
add
pop
sub
mov
xchg
or
jnp
sar
jo
pop
aaa
pop
enter
je
dec
dec
and
push
je
outsl
add
jne
or
repz
iret
mov
adc
mov
ja
or
sub
and
adc
and
arpl
test
or
jmp
nop
mov
cmc
push
outsl
sub
push
ja
je
pop
lea
stc
adc
psllw
sub
and
xchg
in
push
push
aas
mov
hlt
push
das
sub
fldt
xlat
in
push
rcrb
test
xor
pusha
fcompl
add
pop
in
pop
and
je
adc
dec
sub
inc
outsb
scas
dec
add
cmpsb
cmp
cmpsb
jle
add
add
add
or
add
add
dec
sbb
add
arpl
xor
pop
es
pop
xchg
hlt
push
jbe
mov
lds
lcall
fcoml
and
lret
jp
ljmp
pop
sbb
adc
sti
cmp
test
cmpsl
loop
mov
adc
lea
inc
or
inc
add
xchg
xor
pop
push
bound
xor
mov
imul
in
sub
push
pop
xor
mov
inc
inc
and
xchg
gs
xor
jb
pop
pop
ss
fidivs
mov
push
adc
ja
jp
adc
push
push
pop
cwtl
out
xchg
incl
and
stos
jl
or
andps
test
cwtl
mov
inc
cmp
clc
sub
dec
test
daa
xchg
sbb
sub
cmovs
push
sub
mov
add
movsl
mov
add
jno
cmp
pop
fmuls
and
add
loope,pn
adcl
lcall
add
xorl
xor
mov
and
and
mov
les
adc
adc
cmpsb
rclb
insb
jne
in
push
mov
lcall
lock
lods
divb
orb
pop
inc
mov
jae
cmp
xor
xor
mov
pop
roll
or
ret
push
add
push
cmc
or
mov
aaa
jecxz
add
gs
mov
into
mov
shl
call
lock
fsubr
or
in
add
fwait
pop
seto
int
cmp
es
push
push
xchg
in
push
push
adc
clc
lea
mov
xchg
and
fcoms
sbb
lods
adc
push
lock
mov
jl
push
push
mull
pop
test
sub
roll
mov
test
add
adc
dec
xor
les
cmpsl
cmp
pop
shl
add
clc
pop
test
scas
jne
fidivrs
sub
fnstsw
lock
pop
dec
or
test
or
arpl
mov
pop
push
jmp
insl
or
adc
pop
and
jno
mov
movsl
lret
xchg
stos
test
aas
cmpsb
sbb
mov
pop
shl
rcll
pop
xchg
sub
pop
push
adc
lods
add
insb
cld
push
inc
jae
test
push
adc
sete
adc
dec
or
lods
push
fstpt
fistps
xchg
dec
sbb
leave
je
push
aam
jne
mov
sbb
das
scas
mov
adc
popf
into
and
or
add
pop
adcb
je
push
in
mov
jp
hlt
shr
add
and
pusha
and
stc
push
or
mov
jecxz
sar
inc
enter
fwait
push
es
inc
adc
xchg
and
addb
rclb
mov
mov
mov
inc
mov
cmp
add
or
mov
fnstenv
faddl
push
mov
aad
add
jl
test
std
jae
std
xchg
jo
add
lea
cs
pop
sbb
adc
push
xor
fmull
test
lock
cld
push
lret
in
fdivs
inc
cwtl
push
fists
sub
push
lret
inc
mov
cmp
jno
xchg
loope
test
xor
fistpll
cltd
outsl
xor
nop
or
mov
inc
ret
push
mov
daa
fs
leave
push
loopne
inc
adc
sbb
daa
adc
xchg
push
push
iret
add
push
fidivrs
xchg
xor
cmp
adc
daa
enter
sbb
fwait
lret
sbb
push
adc
mov
sbb
and
and
push
push
add
pusha
sub
in
addr16
xchg
cmp
daa
xchg
aam
insl
cmp
adc
in
mov
rorb
daa
and
lods
mov
xchg
fsubrs
sub
jg
push
xor
pop
fsubs
leave
sbb
cmp
sbb
sbb
cmp
sbb
je
mov
push
sbb
dec
inc
dec
dec
neg
ficoms
inc
andl
and
and
mov
push
arpl
mov
idivb
or
cmpsb
jmp
popa
outsb
fadds
iret
int3
add
mov
call
jl
or
and
xor
sbb
pop
inc
push
les
jo
mov
adc
imul
jle
add
pusha
cmp
call
or
xchg
lea
int3
cmp
in
push
aaa
add
jecxz
jl
lea
adc
fnsave
frstor
jno
pop
out
stos
nop
pop
add
mov
lods
or
fisttpl
aaa
adc
loope
mov
bound
fdiv
xor
sbb
inc
sarl
mov
imul
xor
or
adc
pop
cmpsl
cld
add
orb
sahf
sbb
pop
xor
lods
or
sbb
jbe
fmull
shl
mov
mov
dec
clc
jnp
loopne
je
add
testb
or
xor
xor
fcom
mov
imul
bound
shl
movsb
sahf
leave
nop
jp
mov
jge
mov
adc
call
mov
mov
lds
scas
clc
sbb
test
fsubr
jle
lahf
push
stos
ja
testl
lods
aas
ja
je
sub
push
mov
inc
adc
jbe
xor
and
inc
push
inc
xor
push
sub
jp
pop
je
add
and
xlat
inc
lods
sbb
sub
js
sbb
imul
sti
add
jecxz
test
je
add
call
test
inc
aam
or
in
pop
cmp
jae
cmpsl
shl
push
jecxz
ja
add
and
ret
cmp
rclb
data16
push
adc
mov
lock
adc
out
mov
addr16
push
or
sub
lea
sub
cmp
mov
aaa
push
clc
imul
loope
push
popf
mov
fstps
push
in
or
add
rol
add
ret
outsb
pop
or
test
je
jmp
data16
mov
movsb
adc
push
cltd
stos
inc
rclb
lret
sub
je
add
xor
popf
out
jmp
outsb
shlb
cmp
pop
mov
pop
mov
pop
scas
push
psrlw
dec
pop
xchg
test
mov
cmp
mov
push
test
jae
gs
push
pop
mov
jbe,pt
loopne
pop
add
cmpsl
cld
in
outsl
mov
sbb
jb,pt
jmp
push
cwtl
sahf
xlat
lcall
pop
pop
or
push
mov
int3
mov
cli
inc
mov
int3
mov
test
pop
mov
scas
mov
sbb
aam
adc
cmp
add
repz
mov
xchg
cmp
push
add
icebp
pop
jp
or
push
push
sub
stc
add
jle
lea
push
shr
mov
fdiv
lea
mov
mov
add
inc
inc
aaa
mov
pop
fucomp
add
or
push
add
icebp
mov
and
jmp
mov
fcmovnb
call
rol
test
xchg
push
insb
cltd
hlt
inc
in
insb
popf
pop
add
jp
or
test
sub
or
and
aad
mov
push
fdivrl
push
inc
bound
scas
pushf
adc
or
rcll
loopw
dec
and
les
or
lea
popf
add
lcall
jae
cld
out
cld
or
scas
add
add
cmp
cmp
or
sbb
mov
push
pop
mov
add
and
adc
fistpl
movl
inc
sub
cmp
js
or
mov
cs
sbb
mov
insl
xchg
sub
sub
push
or
pusha
jb
shr
ss
fsubl
jg
push
lods
mov
or
add
fidivl
add
xchg
int
adc
test
int3
shll
cmp
je
lea
icebp
stos
adc
inc
push
insl
adc
cmpsl
or
outsb
cmpsl
decl
adc
adc
sbb
xlat
pop
data16
data16
jp
sarl
rol
or
ret
or
and
adc
push
mov
std
rclb
daa
andl
jne
add
jmp
and
into
mov
adc
cmp
hlt
push
sub
movsb
xchg
add
mov
xorb
std
inc
cmpl
xor
mov
sub
pop
pop
ljmp
aad
lea
lods
mov
fsubrs
test
jnp
pop
and
rcl
sbb
mov
inc
test
mov
adc
sub
sub
or
ret
cld
push
push
push
and
cli
or
incl
inc
rol
add
mov
pcmpgtb
lock
and
adc
push
pop
fstps
lock
jecxz
test
add
js
stos
inc
in
outsl
add
jnp
icebp
andb
mov
stos
inc
pop
scas
cmp
adc
mov
sub
std
rclb
arpl
or
push
cmp
or
add
inc
test
hlt
sbb
jmp
cmpb
mov
test
pcmpeqd
popf
push
lea
pop
rclb
jno
or
mov
stos
jmp
push
and
dec
inc
or
rolb
sbb
or
or
pop
mov
pop
jbe
xor
out
jl
xor
test
enter
rorb
call
add
in
and
lahf
inc
les
pop
addr16
add
mov
sahf
shll
sub
fadds
adc
mov
add
fidivl
mov
pop
mov
adc
sub
or
dec
jne
jmp
dec
mov
fistpl
sub
out
mov
jge
cwtl
cmp
mov
jbe
enter
in
leave
fs
call
pop
or
push
pop
or
nop
movsb
jo
lods
add
mov
push
adc
mov
orl
orl
daa
inc
les
inc
pop
mov
cs
mov
stos
adc
jnp
push
out
adc
divb
jo
cld
imulb
mov
addr16
test
adc
xchg
sub
sub
cmp
pop
inc
add
fmull
shll
loopne
sub
jne
xor
cmpl
jle
mov
fcmovb
call
nop
mov
dec
xor
je
sbb
xor
xor
imul
test
pushf
pop
out
adc
mov
ret
inc
xor
aam
pop
mov
cld
ficoms
sbb
les
add
or
or
push
xor
imull
cmp
leave
push
pusha
orl
fsub
cld
mov
test
imul
aaa
out
xchg
in
push
push
sbb
js
pop
xlat
scas
push
fwait
das
cmpb
cltd
or
and
adc
insb
psubsw
inc
and
pushf
arpl
popa
insb
jns
scas
add
insb
mov
push
ret
push
jbe
push
cmp
scas
jb
fwait
cmp
sbb
mov
jecxz
fs
mov
sbb
lods
mov
mov
adc
mov
test
mov
mov
aas
mov
outsl
ds
cli
mov
sbb
push
mov
inc
clc
rclb
mov
mov
icebp
jmp
push
pushf
mov
dec
aad
mov
mov
mov
cld
or
adc
push
jl
and
les
in
mov
mov
mov
lods
push
pop
mov
mov
add
and
cmp
or
dec
sub
ds
inc
xchg
adc
add
jmp
jl
adc
inc
mov
leave
ret
xchg
sbb
add
jb
cmp
add
pusha
add
outsb
bound
mov
jno
push
xchg
mov
call
pop
inc
xor
sub
cmp
test
mov
mov
fidivl
xor
call
adc
pushf
ds
add
stos
loope
mov
adc
daa
notl
mov
leave
add
and
sbb
add
mov
incl
incl
mov
movsb
mov
xor
stc
mov
call
push
and
in
add
or
sub
fdivl
imul
inc
enter
adc
loope
mov
mov
lods
push
pop
data16
dec
mulb
or
nop
sbb
outsl
stos
adc
les
enter
push
clc
sub
sbb
mov
icebp
cmpb
repnz
out
push
loop
int
jmp
xchg
xorb
popa
xor
pop
mov
mov
aad
stos
sbb
mov
rorb
pop
inc
xchg
stos
xor
or
add
cmpsb
pusha
and
mov
mov
sub
add
mov
in
fldl
cmpsl
sbbl
and
sub
cmc
add
inc
fst
add
idivl
lea
xor
pop
sbb
pop
leave
sub
fisttpll
add
out
push
pushl
adc
and
dec
sbb
jle
or
por
lods
jle
idiv
je
addl
mov
rclb
hlt
jl
jmp
shr
ss
add
mov
adc
jnp
test
cld
xchg
add
inc
mov
and
div
xor
inc
inc
ss
or
cmpsb
xchg
addb
or
imul
pop
adc
daa
data16
pop
out
insl
sbb
lods
in
dec
or
ljmp
cwtl
adc
out
int3
inc
int3
andb
add
out
pop
daa
fdivrl
pop
mov
pop
shll
mov
cs
jg
adc
pop
aaa
outsl
and
jl
mov
mov
cmp
loopne
add
je
add
cmc
arpl
push
pop
fisttps
in
lock
mov
jne
decl
mov
movb
outsl
xchg
mov
outsl
add
dec
jns
lret
cmp
fldln2
jge
or
outsl
testl
hlt
insb
cmc
mov
add
shrl
sub
lret
fidivrs
les
push
or
pop
push
call
pushf
inc
mov
outsl
cmp
push
movsb
lds
lret
sub
jne
sbb
das
fsubrs
and
adc
or
aas
push
addr16
nop
and
sbb
push
mov
pop
leave
rdmsr
nop
xor
cli
mov
sbb
loope
js
lock
mov
push
jno
adc
gs
cmp
mov
xlat
arpl
mov
sti
pop
push
mov
loopne
ret
mov
adc
test
outsb
pop
imul
and
dec
pop
subl
jecxz
cmp
fadds
and
jbe
add
inc
sub
cld
cmp
je
and
or
pop
std
fdivs
loopne
popf
sar
add
push
push
xchg
sbb
push
int3
std
adc
rcrb
push
xchg
enter
or
jnp
inc
pop
popw
or
xchg
mov
dec
lds
xchg
mov
xor
fidivs
test
dec
cmp
mov
stos
and
and
leave
in
pushl
idivb
movb
les
mov
mov
inc
jnp
mov
jne
das
shrb
and
sbb
loope
pop
cmp
inc
lret
mov
and
inc
std
jge
cmp
je
mov
pcmpeqb
inc
fiadds
add
jmp
pushf
mov
movsl
test
nop
test
fcmovnu
inc
or
pop
ja
mov
pop
push
adc
push
int3
int
jmp
jae
sub
rol
lahf
xor
push
movl
imul
orl
in
sbb
cmp
scas
movhlps
dec
loope
lods
pushl
lods
or
mov
and
mov
mov
adc
rcll
jne
int3
jbe
add
sbb
adc
and
ja
mov
or
push
push
mov
pop
push
inc
movsb
push
dec
pop
add
sahf
clc
imul
xor
jle
jmp
mov
lcall
test
movsb
iret
fnstcw
sbb
es
lods
mov
aad
add
xor
mov
adc
inc
add
and
in
popa
sub
arpl
adc
adc
loope
lock
add
pushf
xor
movsb
add
jae
mov
movsb
jl
mov
in
call
mov
in
pop
mov
mov
dec
bound
pop
rcll
es
cmp
cmpsl
mov
mov
js
leave
mov
mov
andb
pop
mov
jo
dec
stc
imul
nop
push
nop
jge
fld
and
in
test
mov
inc
sbb
in
outsb
inc
pusha
mov
adc
push
push
stos
mov
ss
inc
lock
xchg
push
stos
adc
push
ljmp
mov
inc
inc
je
xor
bound
insb
scas
or
sbb
add
mov
mov
sub
je
add
fnsave
aad
jl
jmp
sbb
add
scas
inc
xor
mov
sti
cmpsb
sbb
sbb
mov
inc
pop
lock
mov
sbb
addr16
mov
and
or
sub
mov
mov
push
mov
clc
pop
cmp
or
push
push
mov
inc
repnz
sahf
int
testb
and
and
bound
jl
into
push
mov
xor
std
fisubrl
sub
add
push
popa
and
and
add
jl
pop
xchg
pop
mov
sub
mov
lods
ret
xchg
xor
jl
add
in
jno
add
jno
add
mov
sub
cmp
scas
xchg
jns
scas
add
sub
iret
mov
sbb
xor
sub
and
jne
adc
out
lock
add
xchg
dec
loope
daa
cmp
scas
dec
and
cld
xchg
rcrl
dec
add
or
push
fucom
stc
lds
or
pushf
mov
in
lods
pop
sub
movsb
jae
pop
outsb
clc
cmp
call
add
cmc
jne
sbbl
xor
int3
pop
addl
xchg
add
shlb
cmp
push
cmp
jmp
and
jo
loopne
out
jl
cmp
imul
add
fisttps
add
mov
dec
or
fimuls
je
cmovs
xor
adc
fdiv
fisttpll
xor
stos
xor
inc
lds
pop
push
xchg
add
and
sub
stos
js
pushl
fidivrs
hlt
call
push
jne
shlb
jmp
das
aaa
jne
inc
dec
out
add
cmp
sub
mov
testb
mov
adc
sub
xor
std
hlt
lea
mov
dec
xabort
lods
enter
sahf
es
dec
sbbl
adc
popf
and
loop
mov
cmp
rorl
xchg
mov
les
andb
call
iret
xor
jbe
loopne
xor
int3
imulb
adc
cmp
in
xchg
sub
gs
sbb
sbb
and
arpl
or
mov
cmp
stc
jge
in
add
sbb
jp
push
sub
fsubr
stos
icebp
js
mov
sti
sbb
mov
or
aas
cmp
push
add
fs
mov
insb
or
cmp
push
xchg
jle
adc
add
xchg
lock
call
inc
fistpll
add
mov
in
and
lods
in
adc
adc
adc
sbb
cs
rolb
mov
cmpsb
loope
in
jg
negb
cmp
lahf
or
arpl
push
sbb
inc
pop
mov
pop
and
and
add
les
or
and
movb
jge
cmpsl
in
mov
mov
outsb
pop
test
lea
lret
cs
cmc
sbb
or
jl
test
pop
cmpsl
aas
out
mov
xchg
dec
sahf
movsb
mov
adc
ds
cmp
xchg
and
xchg
cmp
xchg
push
and
cmp
mov
daa
nop
cmp
jl
cmc
cmpsl
push
jnp
jo
loopne
inc
push
inc
pusha
jns
daa
sbb
cmp
repnz
repnz
jne
or
adc
fimuls
sub
inc
sti
pop
sarl
out
xchg
arpl
cwtl
sbb
add
adc
outsl
or
outsb
cmp
add
jmp
xchg
fs
sahf
aam
jns
sbb
mov
sub
pop
sub
xchg
dec
or
lret
sub
mov
dec
jns
push
mov
pusha
or
push
jns
inc
cmp
xchg
ret
or
in
addr16
repnz
scas
sbb
repnz
sbb
enter
jns
in
cltd
aam
add
sahf
push
jl
push
sub
lock
jmp
xchg
dec
jne
pop
push
stos
xor
push
adc
ror
xor
xor
mov
or
stc
adc
movsb
push
mov
es
xchg
jns
addb
xor
xchg
imul
jge
movsb
xchg
adc
and
movsb
ss
pop
adc
and
movsl
iret
jl
and
nop
iret
js
and
inc
iret
je
and
das
iret
insb
es
jne
call
outsb
mov
mov
push
push
or
js
adc
adc
and
mov
lods
jmp
jle
aam
ret
data16
xor
and
xchg
and
cmp
xchg
mov
adc
xchg
xchg
jns
adc
xchg
jne
xor
imul
inc
add
es
inc
cld
xchg
xor
xchg
sbb
hlt
cmp
xchg
lret
sahf
xor
jns
es
call
inc
in
in
mov
cmp
xchg
adc
fdivrs
xchg
std
sahf
xor
jns
daa
xor
repnz
dec
mov
repnz
shl
dec
add
das
xor
jl
inc
xchg
mov
xchg
mov
mov
and
and
xchg
add
dec
cwtl
jno
scas
mov
pop
nop
out
add
adc
mov
jbe
pop
cwtl
sbb
icebp
xchg
inc
add
pushf
sub
test
push
mov
push
and
daa
mov
dec
or
loop
xchg
xor
sbb
and
stos
pop
mov
mov
call
cmpsl
inc
ljmp
cltd
ljmp
stos
and
fsubs
add
inc
clc
xchg
push
dec
adc
cmp
in
sub
das
adc
cltd
xlat
fcoms
mov
mov
adc
outsl
cltd
jbe
in
pushf
sub
jns
adc
dec
xchg
mov
mov
dec
lds
mov
inc
sbb
push
and
mov
jno
out
lods
sbb
or
call
aas
cmc
xchg
xchg
pop
adc
push
push
mov
sub
ss
das
add
outsl
jl
fsubs
daa
adc
dec
or
inc
inc
test
add
xor
add
out
jo
xchg
fs
mov
in
cltd
stos
sbb
cltd
jb
pusha
in
cltd
pop
sbb
adc
sti
sahf
sbb
mov
out
into
and
adc
mov
mov
test
xchg
fstpl
scas
sahf
xor
dec
xchg
lcall
push
fbstp
sub
adc
inc
movsl
arpl
xchg
add
sub
sub
xchg
adc
sahf
and
jns
es
and
lcall
sahf
sbb
dec
xchg
sbb
add
and
cltd
jp
add
xchg
cltd
sub
nop
pop
pushl
adc
adc
jo
and
aam
adc
es
in
jns
daa
dec
imul
sahf
loopne
dec
shlb
add
out
pushf
sbb
mov
repnz
enter
lret
dec
and
les
and
mov
mov
iret
mov
and
add
mov
and
test
je
cmp
xor
imul
les
test
mov
push
push
push
adc
mov
or
inc
inc
xlat
jl
push
enter
pop
and
add
sub
js
rol
test
or
shll
repz
test
int
roll
xor
ds
xor
push
mov
jmp
sbb
sub
add
icebp
repnz
adc
enter
cmp
pop
sbb
in
jmp
in
cmp
cmp
mov
inc
fwait
in
push
push
daa
jmp
data16
add
jbe
leave
out
inc
jl
mov
fs
add
dec
nop
lret
mov
hlt
push
js
jmp
fmuls
out
jge
nop
cmpl
dec
cltd
xchg
stc
jg
repz
push
outsb
xchg
jmp
call
int3
lcall
jmp
sub
xchg
fistpll
mov
lcall
jne
xchg
cs
dec
pusha
fwait
dec
mov
fs
imul
add
bound
sub
and
jmp
pushf
adc
dec
cltd
add
push
sbb
out
fists
and
dec
mov
and
and
cmp
mov
sbb
cmp
jbe
into
sbb
gs
xor
dec
gs
adc
cmp
add
adc
dec
xchg
scas
sahf
sub
dec
xchg
xor
enter
jecxz
loopne
pop
inc
cltd
repnz
dec
mov
dec
scas
push
mov
pop
adc
and
cltd
iret
or
sbb
dec
rorb
fs
or
push
mov
adc
repz
sbb
sub
adc
cmp
jns
es
in
adc
hlt
adc
sbb
adc
cld
xchg
jb
xor
leave
out
jb
aam
shlb
pop
xor
leave
mov
pop
adc
test
packsswb
or
adc
shl
lock
dec
cmp
es
leave
push
jge
dec
repnz
dec
mov
cmp
push
dec
lahf
lea
or
in
call
mov
test
in
sbb
mov
and
jmp
mov
std
or
fists
les
mov
clc
jl
adc
out
andb
mov
and
adc
es
inc
jo
pop
daa
sbb
xchg
dec
fs
addr16
add
xchg
adc
pop
pushf
sahf
add
mov
mov
enter
loopne
jmp
adc
lret
sub
mov
mov
loop
fnstsw
and
stos
cmp
add
pop
call
cmpsl
push
jne
push
xchg
inc
mov
mov
mov
and
js
dec
and
add
dec
lock
hlt
add
jno
xor
jae
jo
mov
sbb
cld
cmp
push
lock
or
js,pt
jg
push
or
sub
xor
sub
or
cmpsl
sarb
out
mov
repnz
cmp
dec
cli
in
inc
fmull
sub
je
pop
xchg
aam
push
adc
mov
dec
push
or
mov
adc
test
or
mov
sbb
or
test
mov
jmp
mov
jne
jmp
pusha
mov
scas
call
je
pushf
xor
xor
add
test
test
call
fsubs
push
jae
enter
sbbl
movups
std
add
std
stc
jle
mov
ja
xchg
frstor
stos
sti
arpl
lret
outsb
dec
xchg
add
daa
xor
cwtl
cmp
cli
add
test
sub
push
orb
mov
cld
sti
lock
aaa
xchg
pop
push
sub
cmp
fdivrl
outsb
dec
push
or
sbb
sub
lea
mov
cmc
dec
xchg
pop
xor
push
mov
ret
pop
xchg
test
repz
or
xchg
enter
adcb
jp
or
push
imul
mov
fimuls
or
push
jmp
aaa
add
nop
idiv
push
mov
rcll
loopne
mov
and
imul
add
or
pop
jle
fsts
mov
ret
popa
pop
xor
jle
mov
leave
dec
testl
xor
push
pop
test
sahf
inc
mov
test
adc
aad
and
aas
or
dec
jg
and
cmp
pop
lock
cmp
sub
and
jmp
push
and
movsb
xchg
daa
xor
and
inc
cs
scas
fucomp
push
xor
fdivrs
addr16
dec
cs
xchg
and
xchg
add
inc
xchg
into
push
daa
xor
mov
sti
jmp
mov
adc
mov
xchg
xchg
unpcklps
push
pop
loopne
mov
loopne
xchg
js
mov
ret
ljmp
lods
pop
jmp
add
ret
add
lea
push
xchg
negl
sub
xor
fisttpll
lcall
ljmp
shl
call
mov
in
cmpsl
call
maskmovq
notl
clc
add
aam
or
push
pop
cmp
test
mov
lret
int
sbb
cmpsb
daa
add
jbe
adc
subl
cli
mov
pop
adc
mov
fcoms
sub
popl
push
cmp
sub
jmp
sbb
aam
imul
mov
cmpsl
scas
adc
movntps
sbb
cmpl
mov
je
clc
cmpb
je
push
add
pop
push
pop
jmp
sbb
xchg
jno
fisubl
jmp
mov
ljmp
adc
sbb
pop
sbb
shlb
pop
jne
inc
mov
mov
fists
and
xor
leave
mov
add
mov
and
popa
divb
sarb
xor
sbb
mov
ret
daa
mov
data16
into
pop
mov
jle
stos
ret
movb
adc
insb
sbb
das
pop
and
das
cmp
jl
int3
mov
inc
cmp
xchg
call
add
icebp
jl
stos
jo
inc
imul
test
fwait
jne
adc
and
sbb
icebp
orl
or
pushl
push
jmp
mov
adc
pop
ljmp
mov
ret
mov
mov
daa
xor
or
fildl
push
mov
out
cwtl
sub
subb
leave
clc
movsb
cld
push
cmp
sti
popl
clc
cld
or
pusha
pop
loopne
dec
testl
xor
adc
dec
push
and
mov
lea
cltd
lock
push
adc
sbb
push
aam
adc
pop
jp
add
fdivrs
mov
sub
das
dec
insb
add
repz
jg
and
sti
popa
repz
cli
jb
inc
pop
sbb
sti
xchg
add
inc
push
xor
repz
stc
loopne
int
and
push
xchg
iret
sti
call
or
adc
cld
negl
sarb
mov
fiaddl
or
mov
dec
aas
insb
sub
cli
jns
mov
mov
mov
dec
adc
cmp
cld
out
cmp
icebp
or
or
aaa
mov
jl
push
add
add
arpl
clc
add
imul
inc
push
pop
xchg
mov
cld
mov
repz
xlat
sbb
sub
add
pop
cmpsb
or
testb
xchg
push
sbb
outsl
pop
push
dec
pusha
cld
jb
mov
pop
movzbl
decl
mov
idivl
inc
dec
inc
packsswb
and
sub
orb
and
movsl
mov
cmp
add
adc
or
inc
and
fmul
cli
inc
cmp
lret
adc
and
loopne
ret
cli
cmp
jg
or
cmp
mov
movsb
clc
inc
cmp
dec
inc
dec
lds
pop
stc
xchg
xor
pop
dec
jne
rolb
mov
arpl
xchg
inc
jge
inc
add
js
dec
jp
and
daa
and
and
inc
cmp
jae
mov
add
out
add
test
popf
jnp
lret
ljmp
ljmp
dec
adc
pop
test
adc
dec
cmp
jbe
push
mov
jnp
fcoms
outsb
push
movsb
negl
mov
and
imull
nop
inc
hlt
mov
jnp
mov
pop
repnz
push
pusha
sbb
cmp
and
rcrb
xchg
mov
sub
sub
scas
sbb
sbb
xchg
adc
adc
xchg
jnp
sbb
sub
pop
mov
jg
push
jnp
cmp
push
popf
movsb
hlt
add
sarb
xor
addr16
push
hlt
dec
pushf
dec
add
add
xchg
mov
xor
es
call
addr16
push
jmp
scas
add
mov
mov
data16
in
push
mov
xor
mov
jo
fdivrs
lods
movsb
aad
and
cmp
jmp
sbb
push
jge
push
sub
jp
ret
je
jae
hlt
call
mov
sahf
sbb
std
mov
jns
cmp
inc
jo
mull
lret
or
adc
ficomps
sub
xorb
bound
int
inc
sub
xchg
jnp
int3
test
mov
inc
and
xchg
push
ret
sbb
and
lcall
xchg
jecxz
mov
jmp
sbb
mov
js
je
adc
mov
adc
js
add
jo
add
les
mov
movl
cmp
and
pop
push
rcrl
push
cmp
arpl
push
push
mov
or
lcall
ret
pusha
ja
jnp
add
mov
mov
adc
imul
ds
and
jne
push
shl
ret
add
lods
sub
shl
sub
xor
dec
scas
inc
add
int3
inc
pslld
pop
dec
cwtl
and
mov
hlt
nop
test
mov
arpl
test
sbb
int3
inc
arpl
pop
jmp
lods
aas
adc
aaa
sbb
and
cmpl
int3
xchg
xor
addr16
adc
subb
cmp
jle
sbb
add
icebp
pop
sbb
add
add
mov
mov
iret
lcall
rolb
fwait
jae
adc
stos
cmp
jae
jne
adc
jno
adc
call
addl
insb
imul
push
int3
or
out
inc
call
sub
std
inc
jmp
sbbl
loop
add
xor
inc
ds
push
or
push
push
je
mov
enter
mov
and
or
mov
and
xor
sbb
pop
sbb
add
cmp
cmp
mov
xchg
mov
arpl
mov
int
cli
ficoml
dec
stos
shr
pop
jb
adc
std
xor
pop
cld
test
or
ret
push
in
int
les
flds
stos
out
andl
push
lcall
xchg
cwtl
fwait
dec
push
inc
out
lods
jmp
fldenv
repnz
ficomps
jb
je
cli
hlt
pop
or
mov
aaa
push
mov
xchg
sub
cmp
xchg
push
aam
dec
call
fcoms
call
into
jge
mov
jno
jmp
repz
daa
mov
jae
scas
jae
das
sbb
push
push
pop
cmp
xchg
push
mov
inc
jmp
lret
out
mov
cmp
cli
outsl
push
jb
test
push
jb
or
cmp
addr16
mov
mov
outsb
dec
jne
mov
mov
in
insb
jnp
clc
push
xchg
addb
mov
push
push
ret
xorl
and
aaa
pop
sub
pushl
outsb
jmp
xor
adc
inc
add
push
and
mov
mov
add
test
ss
xor
add
aam
sub
add
or
sbb
push
sub
outsb
dec
add
or
ss
add
xchg
rcll
sub
xor
test
jno
push
je
or
jmp
push
ljmp
pop
rol
push
sub
sub
sbbl
sbb
push
mov
mov
imul
dec
ret
decb
test
cmp
movsl
push
xor
add
jo
imul
sub
mov
sbb
and
adc
arpl
or
mov
sahf
xor
movsl
repnz
pop
fisttps
pop
enter
sbb
pop
sub
sub
pop
push
popf
sbb
adc
nop
cmp
mov
mov
mov
nopl
push
dec
movsl
aaa
out
adc
mov
add
dec
daa
mov
jbe
call
adc
ljmp
pushf
push
adc
push
mov
add
push
lret
jo
add
shr
adcl
shrl
add
cmpsb
cmp
into
inc
and
pop
add
add
jmp
mov
cmp
testb
add
add
fidivrl
xor
leave
pop
mov
ss
sub
cmpl
cmp
xchg
push
jg
into
insl
subl
int
enter
jmp
and
iret
push
sbb
mov
sub
push
test
inc
or
sbb
and
xor
mov
add
add
or
ss
je
shlb
shll
fadds
les
xchg
adc
sbb
addb
pop
mov
dec
hlt
push
faddl
pop
hlt
jb
nop
push
lcall
sub
jp
add
jo
or
mov
or
mov
sbb
data16
or
lahf
mov
into
push
push
cwtl
cmp
fidivrs
insb
es
lock
xor
stos
loope
flds
push
aas
lea
jmp
in
mov
mov
mov
cmpsl
cmp
push
ror
mov
stos
sub
cmc
ret
sub
inc
nop
mov
in
arpl
and
insl
push
pusha
loopne
or
nop
daa
pop
jp
loopne
repnz
mov
jnp
shlb
jmp
fimull
js
lea
and
mov
push
fs
fdivrs
xor
call
or
pop
sbb
jo
inc
arpl
jns
push
ljmp
test
push
jne
lcall
mov
dec
jle
xchg
nop
loop
mov
cmp
lea
lcall
arpl
into
xchg
mov
pop
call
mov
cli
add
sti
cmp
adc
ds
imul
push
push
adc
sbb
hlt
pop
push
dec
js
imull
lret
rcr
popf
les
xchg
jmp
iret
jne
add
cld
clc
arpl
cmpsb
mov
inc
clc
sbb
fisubs
adc
jns
addb
mov
dec
mov
push
xchg
arpl
inc
sub
mov
cmp
add
aaa
add
add
xchg
addr16
dec
xorl
stc
popa
adc
fcompl
cli
or
and
hlt
jbe
mov
lea
ret
dec
cmp
pusha
mov
mov
sub
adc
or
cld
adc
sub
test
repz
les
sub
rorl
fstl
push
mov
add
rclb
mov
lcall
or
jb
repz
cmp
sub
into
fwait
inc
icebp
jbe
pop
icebp
xor
jl
ds
out
inc
push
or
jg
mov
dec
fs
jae
cs
xor
sbb
sbb
mov
inc
ret
fwait
jbe
sbb
add
fwait
adc
shlb
xchg
push
push
iret
sub
dec
loopne
jge
js
sub
inc
jl
and
std
jbe
fimuls
mov
aad
inc
sub
cmpsb
adc
bound
xor
jecxz
in
sar
dec
adc
lods
and
aaa
sbb
ret
fst
orl
out
mov
aaa
mov
or
or
imul
inc
dec
repz
xorb
cli
out
cld
sti
jle
sbb
fwait
cld
inc
push
outsb
arpl
clc
fldenv
fstpl
popa
stos
movsb
pop
nop
sbb
add
mov
xchg
mov
xchg
repz
mov
cmpsl
adc
js
jge
scas
cld
imul
xor
add
sbb
outsb
jno
rep
push
and
leave
shlb
int3
popf
movsb
int
sbb
mov
jne
push
or
xor
push
mov
dec
jmp
imul
xor
jo
mov
mul
pop
fsubrs
aas
sub
cmpsb
mov
es
lock
mov
stos
or
cmp
dec
sub
sub
test
xchg
lahf
add
repnz
pop
mov
sub
xchg
inc
fs
mov
xlat
mov
mov
in
fdivrl
cmc
jne
inc
cmpsb
push
fisttpll
jg
and
pop
and
inc
push
pop
cmp
subl
jne
inc
push
sbb
cltd
gs
inc
add
lods
adc
sub
push
inc
iret
pop
rolb
xchg
daa
mov
xor
loopne
sti
adc
repnz
addr16
ds
jnp
mov
test
xor
out
push
arpl
ds
pop
xchg
mov
gs
loope
out
xchg
sbb
pop
adc
or
out
pop
xlat
pusha
cltd
mov
adc
jno
fwait
aad
mov
test
mov
sub
jnp
clc
or
scas
test
mov
inc
addr16
and
cwtl
ds
adc
jp
std
mov
jne
jecxz
out
mov
xlat
out
jne
ficoms
cli
adc
cmp
vpmuludq
pand
cmpsb
or
inc
stos
inc
rorl
out
cltd
ret
fnstenv
xchg
outsl
outsl
pop
cmc
idivl
addr16
mov
jmp
ret
into
bound
gs
aam
lea
rcrl
incl
push
std
nop
and
lcall
sbb
aad
xor
lods
sbbb
mov
add
cmpsb
jge
out
enter
std
sahf
xchg
aas
lahf
dec
divl
cld
dec
imul
cli
mov
clc
pusha
movsl
jns
dec
mov
and
and
scas
pop
clc
les
lahf
mov
nop
push
int
insl
jl
and
fs
popf
call
insl
jmp
jb
cmp
int
dec
jne
sub
ficoml
mov
adc
xor
cmp
aad
jg
push
push
add
repz
dec
aad
mov
jno
std
or
int3
sahf
sub
aaa
hlt
sub
jno
fstps
stos
jns,pn
dec
push
mov
inc
repz
jbe
popa
push
out
xchg
leave
cmp
dec
dec
or
aaa
ret
add
mov
arpl
inc
stos
jae
dec
sub
push
gs
xchg
xlat
and
xchg
push
notb
aaa
int3
aas
cmpsl
cli
cmpsb
pop
hlt
push
inc
ds
ret
jnp
push
loopne
jg
mov
or
xor
cmp
pusha
pop
repnz
cs
inc
cwtl
mov
xchg
fcmovnu
sub
adc
mov
xor
clc
ret
movsb
xor
lcall
loop
movsl
lcall
dec
scas
lret
jp
aam
mov
push
test
xor
rorb
cld
testb
ficomps
push
pop
xchg
stc
push
lret
pop
pop
dec
imul
xor
mov
cli
movsb
test
cmp
stos
insb
push
jg
fcomp
push
cmp
call
adc
not
imul
pop
push
testl
sub
mov
in
and
push
jo
loope
sbbl
movb
shrl
ss
ja
inc
ds
mov
in
lock
push
sub
sbb
roll
adc
pop
jmp
mov
xor
cmp
mov
push
adc
test
aad
sbb
push
insl
cmpsl
out
ds
scas
or
das
push
push
push
adc
aas
add
call
imul
inc
dec
arpl
fiadds
jae
out
sub
or
pusha
aam
jbe
pop
cmp
mov
movsb
loopne
test
stc
push
xchg
push
cmpsb
pop
dec
fwait
sbb
int
data16
cmp
cmp
cmp
inc
sub
xchg
sbb
sarb
aad
push
dec
adc
mov
rcl
dec
jae
cmp
jp
sbb
xor
inc
test
mov
fldenv
pop
aad
mov
jle
push
out
aad
imul
stos
out
int3
inc
loope
push
fistpll
push
xor
icebp
imul
rclb
pop
dec
or
in
lea
in
jb
jge
pop
imul
mov
lret
jl
sarl
mov
lea
dec
outsl
enter
test
lds
cltd
fistpl
pop
cltd
aad
clc
icebp
mov
mov
mov
sub
mov
popl
xor
sbb
movsl
loop
and
adc
mov
add
mov
shlb
sarb
imul
lcall
sub
outsb
mov
test
jns
movsb
test
xor
push
cmp
jae
das
push
push
cmc
mov
test
loopne
push
dec
xchg
data16
gs
outsb
push
jns
mov
mov
or
pop
dec
lods
sub
sbb
xorb
sbb
xchg
xor
inc
ret
xor
add
in
jnp
fisttps
insl
inc
js
shl
cld
fidivrl
jns
pushf
aaa
pop
mov
cltd
mov
inc
push
push
push
scas
ja
jp
adc
xchg
dec
int
or
push
jmp
mov
push
sub
in
jb
sarb
push
icebp
sbb
sub
or
scas
fidivrl
out
ret
mov
dec
mov
test
arpl
push
stos
xchg
repz
cld
pop
jns
popa
mov
ja
mov
cld
imul
shll
jb
mov
stc
sub
fldt
into
lret
mov
lock
mov
cs
jo
jle
out
push
roll
sahf
or
mov
xchg
adc
mov
pop
ja
imul
das
fisubrl
push
incl
repz
sub
addr16
dec
jg
pop
enter
mov
loopne
jnp
sahf
lcall
push
xchg
insb
mov
inc
scas
mov
lods
mov
sbb
dec
iret
data16
cltd
js
jle
or
fmull
std
fsubrl
and
iret
mov
add
or
ret
xor
xchg
ret
inc
pusha
mov
xchg
xchg
insl
test
ret
out
ror
outsb
lods
sub
sub
fdivp
lahf
lcall
push
arpl
lcall
dec
sub
stos
jns
ja
push
sti
in
mov
aad
sbb
dec
inc
inc
cltd
push
in
jnp
cld
leave
inc
xchg
add
repz
loopne
add
test
mov
or
mov
stos
dec
mov
xor
dec
ret
imul
sbb
push
sbb
mov
fmuls
lods
rolb
in
cmp
or
mov
mov
stos
scas
in
jno
pushf
scas
test
test
adc
ja
xor
sub
stos
lods
aad
push
mov
sub
fsubs
or
ffree
repz
rcl
add
adc
jno
mov
pusha
jle
cmp
xchg
inc
xchg
push
xchg
xchg
scas
and
stc
mov
mov
sarl
pop
daa
mov
outsl
mov
sar
push
test
jl
cld
jae
sbb
dec
add
ja
jecxz
mov
sub
cmp
sbb
enter
adc
push
jne
sub
je
lea
and
daa
int3
loopne
xchg
jle
xchg
lcall
cmp
cmpsb
loope
push
dec
mov
movsb
repnz
mov
sbb
lahf
mov
enter
and
pop
pop
aaa
jmp
roll
jb
pop
xor
jp
cmp
stos
jle
mov
pop
dec
dec
dec
mov
push
xor
add
jo
pop
adc
push
xchg
test
outsb
dec
test
out
jmp
int3
cmp
imul
mov
lcall
cmpsl
in
sarl
cmc
scas
mov
inc
push
fldl
test
sbb
mov
aad
sub
in
enter
xchg
lret
mov
jae
lds
or
pushl
ficomps
mov
insb
push
in
cld
and
dec
mov
sub
adc
int
xor
test
pop
aas
sub
sub
pop
sbb
cmp
imull
jno
pop
lahf
xor
push
pop
gs
jle
xor
add
lcall
dec
gs
xor
sub
int3
lods
cmpb
pop
jbe
test
jne
aam
xor
dec
in
bound
pusha
cld
in
cmc
sbb
inc
cmpsb
xchg
movsb
cmp
pop
jmp
test
testl
je
daa
dec
popf
sbb
inc
and
aad
pop
add
mov
nop
jne
mov
aas
inc
jmp
out
jmp
test
lahf
leave
push
lcall
xlat
mov
fisubs
dec
jb
lret
hlt
int
push
mov
gs
jecxz
shlb
les
scas
mov
addl
stos
push
insl
adc
add
imul
add
cmp
cmp
push
pusha
fisttpll
xchg
dec
dec
fidivrl
enter
test
notl
sub
sbb
mov
pop
testb
cmc
mov
or
add
popl
inc
push
imul
sbb
xor
fstpl
push
mov
insl
mov
pop
stc
cmp
cmp
fnstcw
push
push
push
mov
pop
addb
add
xor
xor
push
nop
mov
xchg
xor
cmp
and
negl
sbb
stos
shl
test
push
mov
int3
jno
push
push
cld
xor
dec
insb
scas
cmpsl
mov
out
inc
push
inc
in
or
daa
pop
dec
int3
in
int3
adc
inc
pushf
xlat
mov
in
xchg
dec
or
jecxz
popa
sub
cmp
out
loopne
adc
pop
xchg
and
test
sti
lcall
and
xor
sbb
xchg
ffree
fisttps
fisubrl
fs
pop
or
adc
dec
sbb
clc
pop
sahf
jp
pop
xchg
pusha
sbb
xor
fwait
lret
inc
jle
rolb
pop
in
or
xchg
mov
xlat
cltd
lret
loop
adc
aaa
jno
js
xor
std
and
push
fsubl
mov
lret
add
jle
test
dec
clc
jg
add
push
das
movsb
dec
mov
sub
cwtl
jae
and
popa
in
cmp
mov
push
lods
aad
xchg
shrb
adc
adc
test
insl
fwait
inc
xchg
lock
mov
push
mov
push
push
test
in
jno
das
in
mov
inc
fnstsw
jo
fcomip
xchg
add
in
in
aaa
sahf
push
inc
or
stos
cld
and
cmpsl
or
inc
fs
sbb
xchg
test
sbb
dec
sub
mov
scas
ds
xor
mov
cltd
mov
adc
xor
data16
push
xchg
cltd
xchg
iret
pop
and
pushf
lods
enter
outsb
sbb
sub
add
jnp
fsubrl
jns
push
xchg
mov
inc
aam
adc
int3
sbb
and
lcall
jns
mov
outsb
xchg
push
adc
xor
imul
mov
pop
push
stos
cltd
lds
inc
lea
pop
push
xrelease
jg
outsb
test
sbb
inc
sub
pusha
out
ja
jl
aad
xor
dec
add
jmp
lahf
js
shlb
pop
ljmp
and
imul
adc
mov
invd
dec
rorb
mov
dec
xchg
cwtl
aas
cltd
cmpsb
not
fisubl
rcrl
ljmp
loope
cmp
sbb
das
xor
mov
mov
mov
add
ja
pop
mov
adc
or
adc
insb
mov
push
outsb
clc
mov
add
inc
xor
nop
fnstcw
pusha
inc
xchg
aad
test
and
jle
das
iret
dec
jno
aad
dec
mov
sub
hlt
jl
pop
std
inc
mov
xchg
cwtl
iret
dec
dec
mov
sbb
mov
les
inc
cmc
jns
pop
pop
pop
js
inc
loopne
aad
xchg
push
mov
ficomps
in
sbb
insb
into
sub
popf
dec
inc
rcrb
addr16
imul
lret
jb
pop
rcrb
insb
xor
dec
sbbl
xlat
mov
sbb
aad
cmp
push
loope
jmp
leave
inc
incl
lods
enter
and
fisttpll
daa
mov
lds
dec
dec
gs
pushf
cmpsb
je
push
fldt
repz
pop
in
jo
adc
cmpsl
ljmp
xlat
sub
inc
pop
pop
pop
test
push
mov
xor
mov
mov
fldcw
stc
inc
div
and
xor
jne
ret
cmp
jp
push
jae
test
jne
adc
fisubl
addr16
push
pop
cltd
in
out
pop
lret
cmp
mov
outsb
roll
push
hlt
fs
mov
xchg
pmulhw
and
and
ficoml
or
es
push
xchg
cmpsb
jge
and
aad
and
fcompl
push
xor
aad
fnstcw
sti
pop
out
sub
xchg
jmp
and
sub
xlat
pop
push
mov
lcall
adc
jne
daa
sub
movsl
mov
cs
or
jg
in
adc
jecxz
das
adc
inc
dec
jne
lret
xor
jo
jb
arpl
fwait
jo
dec
nop
in
and
rolb
push
push
cmpl
lahf
xor
jmp
adc
lock
bound
jp
and
pop
stos
pop
mov
dec
test
test
movsb
mov
push
movsb
cmpsb
je
mov
shrl
test
fisubl
nop
or
test
inc
jg
jne
and
stos
cmp
mov
cli
mov
adc
adc
popa
sub
icebp
movsb
enter
sarl
jno
xchg
stos
xchg
popa
xchg
mov
lcall
inc
push
stc
clc
cwtl
pop
repnz
jge
ja
fwait
aad
xor
mov
mov
iret
sti
shll
sub
mov
std
fwait
push
aad
mov
scas
stos
dec
fs
jbe
std
adc
pop
cwtl
iret
jle
insb
and
test
rclb
mov
xchg
sub
jne
fcmove
or
arpl
pop
shr
pop
sub
ja
add
add
pop
jbe
mov
arpl
movsl
imul
pop
adc
fimuls
inc
push
pop
popa
dec
push
negl
test
sub
and
sub
ja
in
loope
xor
loopne
cmpsl
xchg
xor
add
xor
insb
add
sub
pop
xchg
mov
sbb
add
cs
pop
lret
cmp
xchg
nop
inc
adc
jne
lea
xchg
aad
mov
into
or
dec
mov
repnz
aaa
dec
call
insb
test
jbe
sarb
ss
data16
mov
lret
aaa
int3
call
cmp
je
mov
lds
mov
bt
es
adcb
sbb
inc
mov
dec
jl
decl
xchg
fsts
das
ds
jp
inc
mov
incb
and
or
xchg
sbb
pop
mov
sbb
int
and
outsl
cmc
sub
xchg
adc
das
sbb
testl
stos
decl
mov
aaa
test
xlat
xlat
pop
xor
mov
jnp
mov
mov
lds
ljmp
mov
inc
jg
sti
pop
xchg
imul
outsb
pop
xor
add
push
xor
loop
icebp
out
fidivrl
imull
pop
mov
xor
std
mov
push
mov
aad
and
icebp
pop
sbb
inc
sbb
and
shlb
or
xor
or
hlt
std
loope
or
sub
inc
push
setb
cmp
mov
sub
cmpsl
xchg
and
data16
mov
stos
sbb
fadds
pop
ljmp
repz
cmp
ja
and
scas
ds
movsl
mov
add
iret
call
jb
mov
mov
lahf
mov
sbb
icebp
lods
out
leave
mov
push
xor
cmp
test
xor
lods
fdivrs
out
lcall
lds
cwtl
adc
das
movsl
fidivs
sbb
test
mov
les
or
mov
call
cmp
inc
shl
aaa
stos
mov
pushf
xor
xchg
push
jns
xchg
xor
pop
cmpl
xchg
xor
adc
popf
fucomi
ret
jecxz
xor
xchg
mov
jge
or
sbb
pop
and
pop
das
iret
dec
test
dec
adc
mov
or
outsb
cmp
es
xor
scas
cli
dec
or
sub
cmpsb
jbe
pop
adc
xchg
into
adc
dec
jl
adcl
fistpll
xchg
adc
or
pop
fistps
dec
insl
xor
fwait
adc
iret
push
pop
fcmovnu
bound
mov
movl
fcoms
xchg
sub
or
adc
data16
rcrl
cmp
push
inc
or
push
and
mov
pop
pop
and
cmp
scas
ds
test
mov
mov
push
adc
pop
dec
insl
push
out
fnstsw
movb
out
outsb
adc
sbb
ljmp
dec
repnz
idiv
sbb
insb
jg
or
jmp
stc
dec
gs
dec
je
xlat
fcoml
and
push
xchg
sub
xchg
out
jae
mov
daa
inc
mov
loope
add
mov
pop
dec
and
pop
push
sarl
mov
popa
jno
sub
out
sbb
enterw
decb
sti
idiv
lock
stc
lea
test
hlt
int3
pop
push
cmpsl
clc
sbb
cmp
or
add
inc
or
adcl
adc
sahf
in
scas
dec
cmp
aad
push
mov
ja
inc
cmp
iret
je
das
jp
imul
aad
or
sbb
in
mull
lea
push
jge
or
int3
subl
sbb
cmp
dec
jne
jb
jmp
push
pop
mov
pop
call
das
dec
call
jns
cwtl
cmp
call
aas
outsb
fwait
and
xchg
movsl
in
push
pop
aas
addb
mov
out
imul
push
pop
outsl
adc
not
add
mov
int
ret
xor
outsb
push
sub
adc
cmc
in
lcall
mov
js
push
vhaddps
cltd
ja
ja
jnp,pt
jb
lahf
pusha
xor
mov
lcall
test
inc
or
push
pop
insl
and
inc
jmp
xor
fcmovnu
lret
dec
and
das
or
dec
lret
xchg
mov
and
loop
inc
dec
ds
das
or
hlt
pusha
sub
push
ficoms
push
xlat
push
inc
stos
scas
or
push
push
mov
das
xchg
jmp
dec
loopne
ret
adc
pop
orl
popa
fnstcw
cmpb
add
movsl
sbb
dec
add
jle
xor
ret
push
push
dec
and
sarb
push
andl
mov
sbbl
pushf
mov
rcr
push
inc
dec
shrb
or
mov
sti
aad
jmp
dec
xchg
mov
in
testl
or
push
loop
adc
dec
adc
lret
mov
xchg
shrb
popa
xchg
pop
das
or
enter
fwait
mov
scas
repz
mov
adc
inc
mov
xor
orl
fidivs
fsubr
inc
add
div
shrl
loopne
imul
cld
fcoml
cmp
mov
jns
jp
or
adc
lret
les
iret
fcompl
pop
add
imul
xchg
cmc
aad
imul
push
das
push
xchg
lahf
mov
mov
into
xor
idivb
daa
lds
fidivl
mov
std
addr16
int3
mov
out
jmp
daa
cmc
mov
pushf
pop
idivb
pop
aam
dec
fcompl
mov
std
dec
fwait
mov
mov
lcall
mov
sub
sub
push
int3
adc
mov
outsl
mov
sbb
add
js
shll
cmp
cli
lds
mov
mov
popf
test
dec
mov
push
mov
std
lea
notl
xchg
and
mov
scas
cld
pop
js
cmp
lahf
jae
sbb
mov
fistpl
hlt
out
stc
movsb
dec
cltd
mov
xchg
orl
in
add
adcb
fdivrs
sub
arpl
xor
in
push
bound
shlb
repnz
xor
scas
bound
bswap
dec
sub
test
pop
dec
mov
fimuls
test
mov
xchg
gs
or
int
adc
cmp
push
fmull
cmp
sbb
mov
test
mov
fstl
mov
fs
cld
cli
lea
movsl
scas
pop
ret
je
test
adc
mov
ljmp
dec
cmp
cmp
sbb
dec
pop
gs
ret
sub
inc
mov
mov
sbb
rcl
xchg
in
stos
add
xor
out
jle
test
mov
jbe
sub
movsb
lcall
and
inc
push
and
shlb
mov
das
jl
mov
push
fcoml
dec
aaa
ds
add
movsl
and
fadds
mov
jge
cmp
bnd
std
mov
xchg
insl
idiv
sub
bound
inc
stos
inc
movsl
mov
mov
cmp
pop
cmc
test
fwait
pop
pop
sbb
lea
rcll
aas
ss
xchg
aam
and
xor
popf
loope
dec
or
cmp
xchg
rclb
adc
daa
sahf
popa
aaa
jmp
add
or
lahf
pop
or
or
sub
push
mov
lahf
mov
gs
ja
inc
cmc
loope
testl
mov
mov
loop
fs
cmp
pop
mov
xchg
ljmp
and
lock
insl
repnz
jbe
jb
iret
jae
xor
in
cwtl
out
pop
rclb
sahf
pop
cli
or
fdivl
out
xchg
bound
sahf
or
xchg
sbb
mov
cmpsl
movsl
fidivrs
jmp
rsqrtps
lock
imull
jnp
jae
addr16
jne
pop
inc
sahf
rcr
mov
ss
pop
out
add
aad
ds
sub
sahf
lcall
add
mull
fdivrs
lahf
fistpll
lds
movsl
outsb
fldl
cs
sbb
and
pusha
dec
je
iret
lret
aaa
sub
xchg
inc
out
stc
sarl
mov
ficomps
test
adc
push
or
divl
mov
fs
mov
pop
sbb
push
xchg
inc
push
inc
mov
pop
daa
paddw
mov
outsl
mov
xchg
mov
dec
sbb
mov
cmp
push
push
xchg
mov
addb
int
fucom
mov
sbbl
imulb
mov
push
dec
cmp
cld
into
xor
cmp
iret
adc
rclb
sbb
idivl
push
gs
dec
sub
mov
jle
fistl
faddl
jns
adc
mov
out
cmc
jb
mov
movsb
mov
or
push
dec
leave
dec
mov
jle
js
test
mov
inc
jecxz
or
and
cli
cmp
int
cltd
shl
adc
jmp
out
std
in
mov
je
and
les
movsl
adc
mov
dec
and
sub
mov
in
fwait
xor
daa
aad
push
pop
scas
cwtl
push
cmp
mov
ss
lret
icebp
inc
push
mov
jns
ret
mov
pop
add
outsl
jle
aaa
xlat
and
les
daa
js
int
mov
loop
push
pop
jmp
adc
test
sub
mov
jnp
loop
or
inc
dec
mov
rcr
sbb
mov
dec
rcll
push
mov
xchg
and
mov
xchg
lcall
sarl
fcmovnu
imul
ds
push
or
mov
hlt
sbb
mov
add
lea
push
mov
test
pop
lret
adc
cwtl
sub
pop
or
in
push
ret
add
sahf
fiadds
cli
adc
out
xor
mov
xor
les
gs
dec
push
in
or
lods
pusha
xor
leave
call
lahf
xchg
fwait
repnz
sbb
out
dec
aas
lcall
data16
mov
cmpb
cmp
cmp
cs
orb
xchg
sbb
pop
mov
mov
idivl
repz
bound
pop
notl
pop
out
cmpsb
xchg
dec
xchg
mov
and
push
icebp
cmp
inc
lret
jp
test
shll
pushf
daa
sahf
mov
dec
xchg
lcall
and
ljmp
xlat
fdivl
arpl
fcmovnbe
pop
aam
cs
movsb
and
repnz
push
sbb
cld
jno
xchg
shlb
xchg
xor
push
packsswb
das
and
pop
loope
push
xchg
mov
pop
pop
sbb
mov
push
sub
imul
adc
push
jle
shlb
icebp
mov
dec
dec
in
inc
mov
dec
mov
sbb
cmp
mov
cmp
divb
or
jge
loop
inc
lcall
jno
flds
test
imul
mov
sub
out
jae
icebp
pushf
add
scas
add
aam
in
movsb
repnz
mov
jb
jbe
iret
mov
out
les
cmpsl
into
repnz
pop
ficoml
es
sub
cli
dec
inc
popa
int
bswap
rcll
icebp
dec
ja
dec
and
les
sub
mov
test
sub
xor
mov
popf
rclb
pushf
xor
test
jmp
xor
dec
mov
mov
push
sbb
push
and
mov
testb
mov
data16
add
lock
nop
cmp
rdpmc
jbe
jno
popl
in
icebp
push
cmp
and
mov
call
ds
outsb
iret
or
xor
les
and
loope
sbb
loope
popa
das
push
fsubr
rcrl
xchg
or
popa
xchg
fwait
cmpsb
add
mov
lods
outsb
icebp
adc
mov
adc
daa
repnz
xchg
push
lcall
pushf
sub
mov
popf
or
xor
cs
loopne
repnz
sbb
cmp
fstpt
mov
cld
ret
pusha
loope
mov
das
daa
fcoml
xchg
or
inc
orl
jo
inc
dec
xchg
add
nop
jecxz
pop
and
ds
sub
sbb
sub
sbb
or
pop
lds
scas
push
popa
pop
loop,pt
das
out
sub
iret
vunpcklps
jae
scas
cmpsb
stos
icebp
jo
xchg
dec
and
or
xchg
add
hlt
dec
pop
add
iret
xchg
ja
clc
mov
inc
aam
mov
inc
mov
and
pushf
lea
cmpsb
push
adc
mov
add
cmp
mov
adc
push
mov
subl
mov
lret
jo
jae
xlat
bound
pop
mov
loopne
add
xchg
or
cld
inc
mov
add
jns
not
lcall
cltd
sahf
cmc
or
lods
adc
xor
mov
add
ja
test
int
sbb
inc
cmp
or
push
ja
rclb
sbb
mov
shlb
pop
xor
mov
adc
mov
fldt
cltd
mov
std
fstpl
push
neg
mov
adc
cmp
data16
push
test
xchg
xchg
sti
mov
mov
xchg
movsb
gs
adc
push
cmp
xchg
inc
sub
out
push
sub
outsb
fstl
int3
out
and
outsb
mov
jge
add
mov
clc
dec
push
add
in
movsb
jb
jp
cmc
jns
inc
lret
mov
push
lea
scas
dec
repnz
sbb
add
lods
insl
stos
and
xchg
lods
xchg
aaa
jecxz
lods
push
ret
ja
cmp
lret
push
ja
pop
mov
push
push
fadd
int3
push
xor
pusha
enter
nop
stc
fstpt
scas
jbe
sbb
and
push
push
mov
int
mov
bound
dec
adc
push
clc
mov
xlat
nop
arpl
cld
dec
lock
movsb
xlat
je
adc
js
cltd
adc
and
cmc
popa
cli
data16
pushf
test
adc
adc
fstpl
popa
sahf
aaa
fyl2xp1
xchg
nop
je
inc
imul
test
repnz
mov
fwait
sub
pop
adc
and
movsb
sbb
call
cmpsl
sahf
outsb
int
hlt
pushf
scas
xor
outsl
fs
mov
lds
adc
lret
and
dec
cmpsb
jno
aas
cmc
push
or
add
insl
xchg
sub
in
xchg
inc
iret
mov
stos
repnz
shll
lock
sbb
inc
xchg
aam
pop
adc
adc
inc
jmp
jecxz
sub
enter
dec
cmp
cld
int3
jo
shl
dec
jns
loop
test
adc
adc
push
sarl
dec
orl
jle
lds
mov
pop
xchg
adc
test
push
repnz
jno
fwait
inc
push
movsb
mov
int3
pop
push
mov
xchg
ljmp
pop
mov
jno
pushl
pop
push
mov
xor
movl
out
cltd
pop
sbb
cmp
inc
call
and
ljmp
or
ds
pop
dec
cmp
test
in
imul
mov
inc
mov
add
cmpsb
aaa
jmp
test
dec
cli
sub
xor
hlt
cmp
mov
or
inc
popf
arpl
or
lea
sub
push
out
sbb
push
mov
stos
xor
test
jno
out
imull
pusha
loopne
xor
lods
xchg
shrl
add
pop
push
fnstcw
and
push
inc
into
outsb
sbb
call
shl
cmpsb
scas
int
mov
aad
test
insb
notl
mov
sbb
xchg
cltd
jno
push
imul
cli
mov
xchg
mov
pop
es
inc
jge
clc
mov
popf
lods
adc
stos
sbb
movsb
sar
cmc
stos
out
stos
xchg
mov
xchg
rcrb
pop
or
push
adc
rcll
adc
cmp
int3
out
test
lods
and
xchg
sub
pop
push
sbb
add
jg
inc
out
mov
lods
mov
push
dec
push
adc
stc
add
jne
jbe
dec
jb
clc
imulb
mov
fadds
outsb
lock
clc
xlat
push
sbb
sahf
xor
dec
dec
stc
stc
loop
sbb
push
mov
jmp
adc
into
repnz
pop
push
lock
cmc
cltd
adc
pop
mov
outsb
loope
xchg
sub
mov
push
shll
imul
fwait
xor
jae
inc
cmp
fidivl
jne
mov
in
call
das
ds
sub
mov
dec
jnp
pop
scas
cwtl
xor
xchg
push
cwtl
addl
mov
mov
add
stos
sub
or
sarb
push
aas
jne
popa
aad
xor
sbb
adc
call
rcrl
mov
ja
jno
cmpsb
mov
hlt
orb
sub
std
adc
iret
aas
pop
inc
and
push
mov
pop
cmp
xchg
decl
pop
insb
inc
movsl
out
lods
cmp
pop
mov
cmp
pop
pushf
js
xor
ret
inc
jb
leave
xor
lcall
sahf
xor
mov
jb
sbb
cli
stos
je
aas
out
insl
dec
scas
xor
mov
fildl
insb
dec
sbb
add
mov
mov
add
xor
test
lea
es
jg
dec
in
test
jmp
divl
imul
adc
pop
or
rolb
daa
in
lcall
lds
mov
and
insb
add
std
and
jae
sub
out
mov
loope
inc
je
mov
sub
test
sarb
jbe
rcr
cmp
aad
push
fimull
sub
ret
push
push
or
dec
cld
add
push
and
sarb
lahf
pop
dec
add
push
cmp
sbb
stos
sbb
and
ds
xor
mov
adc
xor
into
mov
add
in
jno
out
add
test
mov
rolb
sahf
sub
clc
xor
or
loopne
cmp
sub
push
cmp
or
aad
pop
jge
and
sahf
clc
sub
push
movsb
popa
fildll
jecxz
add
inc
mov
movsb
xchg
xchg
aad
call
pop
cld
pusha
mov
ja
sub
fnsave
mov
jno
pmulhuw
or
scas
jl
in
rcl
jle
data16
je
sbb
ja
or
add
xchg
pop
repz
xor
xchg
ret
cli
sub
lods
xchg
pop
mov
rcrb
pop
sbb
adc
sub
cmp
lret
cmpsb
stc
jg
jecxz
std
or
fdivrs
cmpsb
push
mov
das
mov
test
lods
out
sbbb
xor
test
lret
add
popf
push
data16
call
outsl
mov
repz
or
inc
movsl
inc
lock
jge
sub
xchg
mov
xchg
or
sub
pop
fists
js
sub
mov
inc
movsb
or
pop
pop
sbb
fucomip
pop
dec
push
pop
pop
stos
and
sub
sbb
mov
in
in
mov
push
je
fldenv
push
push
jle
lret
fbstp
lret
mov
repnz
sub
adc
es
lret
push
add
mov
les
fsub
mov
mov
cmp
arpl
pop
jl
adc
and
mov
rcl
test
imul
xchg
xchg
mov
or
push
aad
gs
jo
xor
jecxz
das
pop
xchg
in
add
sub
jmp
push
push
push
pop
dec
repnz
repz
sub
mov
jno
arpl
ljmp
out
pop
jo
iret
add
sbb
ljmp
or
fmull
insb
shl
in
inc
cmp
frstor
repz
shrl
inc
and
outsl
sbb
pop
pop
xorb
je
outsl
mov
push
into
jge
pop
lods
add
arpl
das
stos
shrl
and
fidivrs
xchg
jecxz
rcll
pop
dec
pop
fldenv
andb
mov
or
stos
add
fidivl
clc
dec
pop
loopne
adc
repz
pop
push
dec
push
bound
test
xchg
push
jno
mov
mov
xchg
sti
mov
cmp
mov
mov
add
mov
les
jg
fs
movsb
mov
jbe
out
mov
sbb
mov
daa
lea
mov
leave
pop
xchg
adc
lahf
inc
or
push
xor
call
gs
add
adc
or
subl
fildl
pop
sarl
stos
daa
push
lods
cs
insb
aad
xor
xor
repz
inc
repz
pop
pop
jmp
inc
rcrb
and
fs
add
or
lods
jl
push
push
xchg
sub
sbb
dec
and
sti
mov
mov
aam
pop
mov
fildll
lcall
xchg
loopne
mov
addb
pop
ficomps
pop
cmp
dec
fs
cmp
lret
add
lock
jae
lret
das
mov
pop
aam
dec
decl
xchg
xor
and
imul
ret
dec
and
jle
mov
jp
mov
clc
add
sub
imul
add
xor
aas
cmc
das
test
imul
mov
out
jge
outsl
cmp
movsl
add
push
sbb
jb
fdivrs
cltd
call
into
and
jb
xchg
and
mov
mov
ret
cmp
sbb
sub
fldt
loope
rol
inc
call
pop
pop
or
push
mov
xchg
fldcw
ss
ss
cld
outsb
or
sti
fiaddl
jecxz
mov
xorl
ljmp
mov
in
adc
andl
jg
imul
push
aas
pop
or
test
test
shr
jo
aam
mov
jmp
jg
out
lods
jecxz
imul
and
insl
xor
stos
xchg
xor
xor
and
push
push
scas
call
gs
mov
popf
push
fstp
pop
or
dec
push
arpl
scas
or
sarb
sarb
adc
scas
or
add
std
cwtl
pop
pop
std
pop
cmc
jge
sub
xchg
xor
sub
cmpsl
push
mov
add
cld
sbb
mov
push
loope
fdivrp
ljmp
xchg
push
decl
pushf
lahf
pusha
aam
push
push
adc
in
movsb
push
xchg
inc
js
adc
aaa
mov
pop
imul
cltd
push
roll
mov
stc
jae
outsb
sub
mov
lea
insb
xchg
push
dec
dec
mov
xchg
sbb
fmull
insl
add
and
jno
ret
add
ds
out
jecxz
cmp
ja
push
rolb
dec
push
rorl
pop
mov
push
ficomps
out
and
xor
pushf
inc
ror
stos
pop
arpl
pop
addr16
inc
sbb
loopne
jno
dec
jae
inc
loope
loopne
mov
aad
xchg
mov
dec
xchg
cli
addr16
stos
cmp
cwtl
mov
test
sbb
push
cwtl
dec
mov
cli
stc
mov
sti
repz
and
mul
xlat
movsb
push
imul
fisttpll
sub
std
push
jbe
xchg
xchg
dec
inc
fists
inc
mov
sbb
aaa
aam
mov
sub
sahf
sub
dec
jo
mov
lret
and
adc
inc
rcrb
inc
icebp
xor
in
mov
pop
jmp
mov
xchg
mov
paddq
adc
dec
aaa
add
jae
incl
cmp
test
and
cmp
ret
fsub
sub
jge
dec
and
adc
pop
rcrb
dec
adc
xor
shll
push
xchg
jnp
pushf
mov
xchg
mov
and
mov
cli
sub
int
or
lahf
movsl
and
cs
adc
jns
pop
xchg
rorb
rclb
out
add
lods
cltd
leave
adc
add
inc
cmp
jg
sbb
xlat
fxch
jmp
aam
cmp
mov
movsl
xor
fwait
nop
iret
popw
call
loop
das
pop
sub
xor
shll
lods
push
jge
out
sbb
xchg
and
or
jmp
push
es
sbb
fstpt
pop
jb
std
adc
out
popa
movsl
aaa
lods
push
mov
or
jno
xlat
cmp
insl
incl
into
cmpb
sbb
mov
push
sbb
andb
xorb
sahf
shrb
repz
je
pop
andb
xor
mov
pop
out
daa
dec
add
jb
bound
dec
dec
xor
shr
and
adc
jo
sti
test
sbb
pusha
mov
dec
fnstenv
addr16
inc
jae
lcall
cs
imul
dec
adcl
xchg
sbb
fadds
dec
push
lahf
xchg
xorb
jmp
adc
mov
repnz
fsubrl
xchg
push
jmp
out
int
jbe
adc
cwtl
add
sub
inc
sub
aam
cmp
and
mov
or
in
mov
push
mov
outsl
rorb
push
mov
enter
shlb
loop
dec
sbb
test
mov
push
cltd
lahf
jmp
lock
lret
mov
dec
add
add
sar
in
xchg
lret
cmp
push
adc
cmpl
mov
in
and
adcl
jbe
addr16
int3
leave
push
loop,pt
loope
or
adc
imul
test
ficoms
mov
call
leave
xchg
push
fnstenv
jnp
xlat
lahf
dec
pop
inc
lret
xor
mov
addr16
sub
pop
xor
je
adc
xor
out
icebp
outsl
sarl
cmp
pop
cli
cmp
sahf
arpl
mov
xor
xchg
push
fdivr
jge
mov
sbb
dec
popa
pushf
stos
movsl
mov
fldcw
repz
aas
ret
and
dec
fwait
out
rolb
add
ficoml
mov
sub
in
pop
xchg
push
mov
inc
jg
stos
xchg
xchg
rorl
mov
cmc
jle
cmp
out
adc
jbe
mov
in
add
xchg
jae
mov
jne,pn
int3
popa
xor
rclb
and
jp
ret
sbb
mov
adc
jle
in
jno
xchg
mulb
ja
in
add
jp
iret
xchg
stc
in
aad
cmpl
out
push
sbb
lret
rcll
cli
sub
add
dec
fwait
sub
push
and
push
jp
aas
loope
lcall
fs
out
push
icebp
mov
out
lret
test
mov
dec
aaa
inc
dec
jne
mov
vhaddps
sarl
aaa
push
sub
nop
push
and
xchg
pop
es
int
mov
std
faddl
enter
jbe
das
ds
cmp
mov
aaa
out
jns
xchg
loope
lods
popf
arpl
mov
repz
push
test
sub
and
dec
mov
jnp
test
icebp
and
sub
adc
sbb
ffreep
adc
xchg
sub
ret
adc
sub
pop
adc
test
add
adc
jmp
insl
dec
dec
jb
mov
ret
dec
rcll
jl
push
mov
jae
jge
adc
stos
hlt
sarb
xchg
int
sti
and
lahf
stos
mov
dec
movsb
stos
xchg
roll
push
aas
andl
add
lcall
mov
imul
std
sbb
mov
xorb
sub
adc
cltd
lods
cli
sti
push
mov
push
data16
lcall
ret
sbb
and
aad
mov
imul
pop
out
nop
jp
mov
pop
repz
xchg
clc
pop
insl
cmp
and
addb
cli
popa
movsl
sarl
mov
adc
daa
ja
inc
pop
mov
push
mov
jne
mov
mov
dec
cmp
fucomi
pop
jp
mov
mov
addr16
mov
xchg
adc
and
mov
mov
dec
pop
std
mov
mov
out
mov
xor
add
mov
fs
les
cs
xor
pavgb
xchg
pop
mov
in
sbb
in
das
jmp
xor
insb
sti
jecxz
aaa
es
dec
or
loop
mov
data16
or
sbb
push
adc
jno
push
push
sarl
jae
pop
rclb
inc
xor
sub
js
enter
inc
add
jecxz
cli
scas
inc
out
push
adc
sbb
jmp
fmuls
shll
jne
jp
add
pop
sbb
aam
lods
lcall
or
wbinvd
dec
pusha
popa
sub
out
lock
xchg
adcl
mov
xor
popa
les
jmp
je
xchg
andb
sbb
pushf
fadds
rorb
jne
add
iret
daa
jp
and
loopne
setne
fistl
and
adc
push
ret
arpl
cmp
outsl
nop
jl
mov
in
inc
adc
fisubs
inc
out
std
dec
jnp
sbb
popf
cmp
xor
pusha
jge
cmp
and
in
lret
imul
xchg
cs
sbb
ljmp
push
sahf
mov
push
and
mov
test
sub
lods
cmp
pop
adc
jbe
inc
pop
xor
cmpsb
mov
push
out
repz
xchg
cltd
stos
flds
push
add
add
das
push
or
jecxz
cltd
aad
ds
out
leave
add
scas
push
inc
aaa
xlat
ds
fwait
in
ret
push
or
fmuls
add
mov
pop
sub
sub
sbb
mov
sub
pusha
xchg
popa
out
mov
pop
push
rorl
dec
dec
jl
dec
xor
xor
and
pop
jp
mov
mov
jbe
lret
adc
lcall
cmpb
jg
stos
stos
int3
add
std
into
repnz
cmp
cmp
repz
mov
jns
mov
shlb
insb
mov
icebp
arpl
test
pop
mov
insb
lahf
lret
gs
adc
ror
pop
mov
cmpsl
sub
xchg
shl
mov
outsl
xor
jmp
sub
into
fcmovne
fldenv
mov
lods
loop
add
in
pop
mov
xchg
jo
std
cld
xchg
jl
aas
popa
xor
cmp
lock
push
push
loopne
in
pmuludq
sbb
jmp
mov
push
shlb
cmp
jae
inc
outsl
in
mov
popa
mov
xor
and
int3
lret
je
fldl
in
push
js
mov
frstor
test
pop
lcall
repnz
leave
iret
pop
bound
mov
inc
pop
cmc
cmp
leave
jmp
out
push
leave
mov
and
dec
shl
xchg
cmp
xchg
out
pusha
out
xchg
mov
in
stos
mov
dec
sub
mov
testb
std
dec
outsl
in
mov
jl
mov
rcrb
mov
push
fimuls
leave
fs
jns
mov
outsl
adc
roll
jp
push
or
push
add
cli
in
outsl
stos
out
and
mov
or
lods
push
in
aas
loopne
mov
jmp
xchg
xor
sbb
adc
in
cmpsb
jmp
or
repz
jmp
rclb
mov
ret
mov
orl
inc
push
cmp
mov
int3
dec
pushf
out
add
mov
adc
add
cmp
cltd
movsb
fldl
xchg
pop
add
sti
sub
sbb
subl
jle
movl
iret
pop
leave
pop
mov
cmp
fildl
outsb
add
dec
fsubs
sub
lock
dec
mov
int3
xchg
jmp
jge
lds
and
fiaddl
pop
fs
stos
adc
push
out
jmp
lret
xor
je
in
sbb
dec
sbb
xchg
stos
sbb
xchg
repz
jbe
mov
movsb
mov
sub
cld
fcomps
push
test
cmp
std
out
mov
in
sub
cmp
jb
movsb
pop
jne
dec
insl
mov
cli
loop
jae
xor
loop
xlat
imul
mov
mov
sub
in
imul
xchg
rclb
out
icebp
inc
xchg
out
jno
ficoms
or
cmpsb
inc
imul
movsb
jmp
fs
inc
fwait
sbb
cmpsb
mov
inc
adc
cltd
test
mov
lock
push
inc
jbe
cmc
lahf
and
rclb
push
jp
in
aam
cld
inc
cmp
in
and
mov
scas
aas
inc
loopne
imul
sub
sbb
in
cltd
aaa
inc
sbb
pushf
sbb
or
ljmp
dec
sahf
dec
mov
in
pop
jp
sbb
gs
insb
scas
stc
mov
data16
xchg
into
sahf
sti
mov
arpl
adc
stos
push
cmc
call
inc
mov
push
sti
jno
mov
xchg
xchg
jle
mov
scas
jp
or
inc
js
les
mov
cmpsb
test
mov
mov
gs
sub
ljmp
out
insb
mov
xor
out
or
lfs
pop
imul
dec
fstp
cmpl
pop
jo
mov
ljmp
sti
repnz
nop
dec
ds
test
cwtl
mov
add
movsb
addl
ljmp
add
jp
push
push
or
fiadds
pop
push
xor
cmp
test
cmp
pop
les
mov
add
jge
fcmovb
or
loope
iret
jns
xchg
and
mov
mov
movsl
lret
inc
xchg
out
cmp
mov
inc
inc
lods
jl
adc
lds
sub
pop
jb
push
inc
scas
lret
addr16
addr16
inc
mov
or
add
xor
cmp
insl
dec
shlb
dec
cmp
mov
xchg
add
mov
cmpsl
or
xchg
pop
sqrtps
es
add
je
inc
cmp
in
xchg
jecxz
mov
shll
xchg
loop
js
cmpsl
xchg
ficoms
cmpsb
inc
adc
cmc
lret
push
jns
push
push
cs
outsl
pop
shlb
testl
subl
test
cltd
cmpsl
clc
push
leave
xchg
popa
out
faddl
add
jo
mov
repnz
mov
cs
fldt
cmp
cmp
push
sarb
bound
push
xor
push
mov
dec
out
enter
xchg
push
jne
cmp
mov
pop
rcll
in
jno
adcl
into
xchg
sub
mov
inc
jp
xchg
xor
repz
xchg
cwtl
ret
mov
cmpsl
xchg
inc
cmp
xor
pop
icebp
cld
mov
bound
nop
fldt
inc
roll
movsl
xchg
or
loopne
jo
or
int3
fs
or
mov
push
aaa
jns
gs
xor
xchg
test
xor
fcoml
push
push
mov
pop
arpl
stos
inc
dec
shll
dec
push
and
movsl
data16
fisubs
cmpsl
jbe
fisttpll
jp
cltd
mov
pusha
mov
push
dec
loop
imul
divl
jns
add
mov
adc
insb
mov
aam
iret
and
std
les
lcall
lods
dec
into
aam
lahf
push
add
daa
fwait
sbb
mov
add
and
mov
push
pop
sub
jne
xor
mov
dec
mov
scas
cmpsl
xor
push
je
cmp
sti
enter
cmpsl
ror
pop
aaa
mov
inc
push
aaa
aam
cmp
leave
mov
push
and
fisubl
jne
je
jae
das
adc
adc
testl
mov
lahf
test
or
sub
scas
nop
mov
sub
mov
test
or
popa
in
xchg
jae
fidivrl
or
cld
icebp
inc
roll
int3
push
lds
inc
in
rol
adc
xor
and
jmp
popf
pop
aas
mov
jecxz
jnp
xor
lea
dec
mov
cmp
arpl
outsl
addr16
daa
add
cs
jmp
cld
push
lahf
ds
fs
jnp
lcall
cld
jne
mov
les
mov
int3
push
movsb
das
xchg
push
push
xchg
fidivs
in
dec
enter
push
jl
sub
lods
or
xor
jp
lret
outsl
mov
cltd
stc
in
call
ds
mov
in
adc
fdivrs
adc
push
in
ret
mov
icebp
fstp
push
jbe
in
test
lea
loop
cmp
iret
pop
and
cwtl
dec
fimull
sbb
mov
xor
push
cmp
sarl
adc
mov
scas
xlat
cltd
lahf
jp
fistpll
test
jg
sub
loopne
cmp
xchg
sbb
sub
xchg
adc
inc
cmp
lcall
push
pop
mov
out
aad
sbb
cs
out
xchg
shl
xor
mov
or
pop
nop
jnp
insl
shlb
jne
push
std
pusha
fisttpll
lret
lret
cmpsb
loope
dec
shll
mov
outsb
adc
stos
fimull
mov
cli
sbb
xlat
mov
push
pop
das
rol
mov
stos
mov
mov
add
add
mov
mov
or
push
mov
sbb
and
dec
lret
or
inc
out
into
pop
inc
rolb
xchg
dec
jl
repnz
fnstcw
call
mov
sarb
xchg
inc
arpl
rcr
pop
cmp
inc
fldl
inc
loope
or
fdivp
adc
in
sti
jle
repnz
cmp
cmp
loopne
shlb
mov
push
mov
mov
mov
xor
call
ret
or
sub
xor
and
and
sbb
mov
arpl
sbb
sub
fs
dec
cmpsb
mov
dec
sub
mov
sbb
pop
and
out
mov
inc
or
stc
cmc
cmpsb
adc
mov
fcompp
test
test
es
jle
pop
jo
into
pusha
rclb
cltd
lock
jnp
xor
inc
mov
jbe
out
int3
js
dec
out
mov
pminsw
cmp
and
or
jmp
mov
int
mov
jae
ret
mov
cs
jns
setl
mov
cmp
lods
mov
adc
loope
ret
mov
mov
pusha
mov
and
dec
mov
or
movsb
pop
jbe
push
pop
test
out
inc
sbb
jmp
cltd
push
in
add
sub
dec
xchg
add
and
and
add
test
notl
sbb
xchg
out
pop
inc
xor
jae
jno
mov
pop
cmp
jo
mov
and
sqrtps
imul
sarl
push
inc
lret
sub
push
mov
lcall
in
xor
in
mov
fstp
sahf
mov
mov
stos
popa
mov
mov
cmp
fisttpll
jmp
sub
jge
shrb
or
fidivrl
sbb
aam
sbb
jg
mov
in
pop
dec
lds
cmp
sbb
xchg
gs
rorb
jo
mov
ret
stos
ljmp
or
sub
mov
xor
inc
jle
sbb
sbb
lret
and
cmc
mov
out
adc
mov
scas
gs
xchg
insb
fucomip
push
sbbl
lret
sbb
jp
subb
seto
push
ss
out
das
sbb
inc
movsl
push
setne
cmc
pop
and
pop
jmp
adc
imul
sarl
inc
cli
or
sbb
push
pop
ljmp
dec
out
sbb
push
movsb
pop
ljmp
mov
mov
popa
stc
sub
adc
in
div
or
sub
xchg
push
in
fs
stos
jnp
gs
push
mov
ret
push
add
jge
cmpsb
jnp
fcoms
sarl
ret
jge
push
lcall
add
mov
ret
and
mov
pop
enter
push
and
xlat
inc
add
fprem
sti
pop
pop
daa
sti
shrb
mov
cld
mov
fildl
inc
mov
mov
test
sbb
xor
ficomps
mov
lret
js
shll
jns
out
insl
jmp
pop
fdivrs
mov
and
popa
and
pop
add
xchg
xor
pop
test
xor
aaa
dec
es
pop
lret
xchg
cmp
push
mov
repnz
pushf
adcb
and
cmp
test
sbb
lret
cmp
and
ficomps
dec
imulb
inc
sbb
push
aaa
sbb
lret
pop
push
aaa
in
shlb
cwtl
gs
js
or
ljmp
adc
loopne
mov
dec
fcom
dec
les
jmp
aaa
fwait
add
ret
push
pop
inc
in
jmp
fdivrs
or
lcall
out
xchg
adc
sbbl
push
pop
xchg
push
aas
xor
or
xor
mov
rorb
dec
and
or
xchg
imul
test
lock
jecxz
pop
sbb
pushf
fldt
xor
insb
cwtl
movsb
rcll
cmp
and
jmp
hlt
push
pushf
pop
lcall
icebp
mov
inc
mov
jno
mov
cmp
sahf
cmc
push
and
pop
add
or
repnz
fisubrs
and
popl
and
outsb
xor
inc
xor
addr16
push
pusha
mov
dec
cmpsl
sahf
shlb
addr16
dec
xor
sar
adcb
stos
jbe
mov
or
fadds
shlb
cmp
daa
push
sbb
fdivp
dec
les
test
fs
xor
imul
fisubl
imul
popf
cli
mov
in
cwtl
jg
mov
popf
mov
inc
nop
or
cld
xor
xlat
pop
fisubs
adc
jg
cmc
pop
cmp
jb
dec
dec
sub
shl
sbb
xor
inc
decl
imul
stos
mov
lods
ja
hlt
repz
inc
fisttps
adc
pop
and
mov
inc
mov
add
cmp
add
adc
push
jl
xor
xchg
or
adc
stc
xchg
daa
mov
sti
adc
outsl
xlat
addr16
push
lahf
out
lds
ljmp
cs
lds
cli
popa
fcoml
shrb
jns
xchg
xchg
shlb
aam
leave
loopne
add
jg
rcrb
movsl
int3
lock
imul
cld
in
loop
cmpsl
cmp
add
je
fs
mov
outsl
pop
inc
fnstenv
into
bound
mov
mov
mov
sbb
iret
movlps
test
xor
push
das
push
inc
push
pop
outsb
xor
in
sbb
call
addl
pop
icebp
dec
jne
mov
jmp
sbb
jecxz
fs
mov
mov
cmp
sbb
push
rcrl
xchg
pxor
inc
mov
daa
loop
push
leave
pop
cmp
popf
push
sub
es
int3
pop
cli
outsl
pop
cmpsl
push
inc
dec
je
inc
adc
add
push
loopne
cs
inc
inc
sbb
and
pop
int
fdivr
push
inc
sub
ret
gs
icebp
mov
notl
lea
cmpsb
pop
dec
ss
fcmove
js
cld
xchg
mov
push
pop
repz
lret
pop
jg
inc
daa
push
std
orl
movsb
pop
or
pop
push
test
fldl
dec
fisttpll
repz
sbb
push
jb
xor
out
rclb
jmp
iret
or
into
cld
pop
jmp
stc
roll
lahf
repnz
scas
in
adc
or
mov
mov
mov
pop
jp
and
addr16
ss
jb
mov
dec
mov
stos
xchg
ss
movsl
adc
lahf
xchg
bound
or
mov
ds
push
or
add
sbb
sbb
cmp
sub
lods
icebp
xchg
test
cs
addb
movsl
and
sub
ja
int3
xor
xchg
shlb
mov
cmpsl
mov
in
pushf
pusha
dec
cld
es
lcall
lods
xchg
ss
xor
ljmp
mov
nop
push
fidivl
mov
or
cltd
pop
rcll
and
jmp
push
mov
jmp
fiaddl
cmp
out
mov
push
test
mov
adc
jae
jmp
sahf
in
jbe
cmpsl
fsubs
das
adc
cmp
arpl
sti
mov
dec
cmc
stc
push
fistpll
mov
sbb
mov
mov
adc
dec
xchg
mov
xor
je
mov
mov
jl
imul
mov
arpl
mov
rol
dec
fcmovbe
dec
pop
int3
mov
fcmovu
dec
jg
adc
cmc
push
std
pusha
out
add
rclb
or
xchg
and
sub
adc
inc
cmpsl
popl
sbb
push
or
sbb
stos
push
lods
mov
jecxz
xchg
adc
push
sbb
mov
or
cwtl
das
loop
adc
nop
and
push
ljmp
sti
jle
mov
es
stos
pop
jg
adc
in
aas
add
rcl
cwtl
and
shrl
dec
mov
pop
cltd
xor
fimuls
or
xchg
dec
jno
mov
jno
pop
jns
sub
adc
int3
in
dec
lret
jmp
mov
js
inc
jmp
repnz
mov
repnz
insb
add
cmpsb
cs
mov
fstpl
ss
add
xor
mov
adc
or
adc
xchg
sub
adc
lock
or
decb
jl
xor
scas
dec
fwait
xchg
push
push
fsub
xchg
sub
pop
test
mov
cmp
adc
jns
in
inc
inc
dec
je
jle
les
ss
fadd
and
mov
int
or
push
inc
std
jno
xor
xlat
push
nop
cli
addb
pop
push
xchg
pop
dec
mov
adc
xchg
into
out
mov
mov
loop
cli
data16
adc
cmpsb
repnz
push
cmp
pop
xor
orb
enter
mov
sti
inc
pop
push
sub
ror
setp
xor
mov
movsb
dec
jbe
inc
mov
push
int
jnp
pop
stos
ja
mov
cmpsl
jae
cmc
inc
jl
int3
push
mov
iret
push
dec
int
dec
pop
pop
in
mov
cmp
and
out
or
add
mov
cmp
jecxz
fldcw
adc
mov
mov
les
int3
dec
and
subl
mov
dec
jmp
mov
cmp
arpl
adc
out
rcll
jne
mov
je
cmpsl
xchg
xor
inc
push
dec
pop
aaa
mov
dec
pop
rorb
push
cmp
add
ret
and
pop
pcmpeqb
outsb
pop
jbe
clc
fistpl
pop
icebp
jnp
int3
call
adc
sbb
jp
or
ret
pop
sub
out
andb
dec
iret
or
int3
rorb
bound
xchg
cmp
cld
or
or
mov
sbb
adc
aas
imul
imul
call
test
add
loope
and
lods
in
lea
mov
in
xchg
xchg
inc
jecxz
jae
dec
push
sbb
inc
dec
fdivrs
mov
outsl
loope
or
adc
cmp
push
dec
xchg
pop
sub
mov
pop
rorl
mov
and
popf
dec
xchg
xor
adc
je
popa
or
addb
aad
in
fdivs
add
cld
jecxz
aaa
mov
jmp
and
test
out
lock
ss
pushf
and
nop
push
cld
cld
xchg
outsb
test
dec
sub
enter
jecxz
sbb
and
sbb
clc
jl
xor
loopne
mov
cmp
adc
push
pop
mov
mov
insb
mov
add
mov
xor
and
das
push
dec
mov
push
sbb
hlt
cmp
and
xchg
push
cmp
mov
mov
xchg
add
adc
std
imul
sub
adc
mov
pop
cs
pushf
movsl
test
clc
scas
lods
xor
lods
scas
aam
repz
addr16
aam
addr16
out
pop
lea
in
das
sub
out
or
pusha
mov
idiv
sbb
xchg
pop
sub
leave
arpl
mov
pop
adc
sbb
pop
dec
std
movl
aaa
scas
fdivr
rol
lock
aam
ret
pop
imul
push
jbe
fmul
fs
xor
xor
ljmp
push
movsl
in
ss
fs
sbb
sbb
mov
int
lret
xchg
jns
sub
or
pop
pop
mov
sub
call
xorb
cwtl
sub
pop
push
loop
inc
outsb
les
popf
aaa
lea
sub
jne
adc
mov
in
and
mov
mov
mov
inc
push
je
inc
imul
pop
xrelease
test
fs
pop
pushf
or
xchg
or
sbb
repz
inc
out
aad
cmpsl
push
fdivrs
push
ja
cmp
jae
fimull
mov
rcrb
pusha
mov
notb
paddsb
sub
pop
gs
int3
ret
and
outsb
enter
fcomp
in
cmp
flds
pop
int3
sub
je
pop
xchg
pushf
out
faddl
out
notb
je
mov
in
inc
jnp
vmovaps
loope
pop
pop
jl
daa
popf
cwtl
xor
mov
mov
and
sti
shlb
cs
sarl
and
mov
dec
cmp
rol
enter
cmp
cmp
jmp
loop
dec
insl
rorb
add
bound
mov
fstl
stos
arpl
mov
movsl
pop
push
adc
adc
cli
lcall
enter
popf
mov
sbb
gs
xor
xor
cmc
mov
xchg
fidivl
lods
call
cmp
pop
orb
fisubl
xor
add
hlt
jmp
inc
pop
push
movsl
push
add
cmp
outsl
jmp
pop
dec
ljmp
popa
sub
lds
cld
and
pop
jnp
fildl
push
cmp
inc
sbb
lcall
cmp
jle
jno
jne
push
jmp
jo
mov
arpl
xchg
out
pop
and
pop
add
hlt
adc
inc
daa
fs
icebp
lahf
sub
dec
mov
xchg
test
cs
jmp
or
fs
push
fdiv
pop
movsb
fstl
and
mov
mov
or
mov
inc
adc
cld
stos
out
sub
cld
fld
es
into
ja
cwtl
push
lds
addb
add
pop
jb
push
lock
mov
fadds
or
imul
add
jl
addl
jge
lock
out
mov
push
dec
sbb
push
mov
bound
pop
add
mov
xor
sbb
fistpl
or
dec
sub
push
xchg
imul
xor
ja
inc
dec
xchg
nop
jl
mov
mov
inc
inc
push
sbb
push
jg
push
inc
aam
repz
int3
push
xchg
leave
mov
jp
test
mov
mov
fdivs
insb
arpl
jmp
or
ret
fldl
dec
icebp
in
or
mov
mov
xlat
mov
xchg
cs
pop
int3
dec
sti
jmp
in
ficoml
and
test
pop
test
mov
mov
mov
jmp
rcl
lcall
imul
lret
cld
xchg
out
in
xchg
jae
adc
or
cmp
pop
stos
push
or
lcall
mov
adc
mov
xor
imul
ficoml
test
jb
mov
sub
push
cli
cmp
or
pop
jae
pop
movb
iret
inc
fcomps
shll
adc
outsb
cmp
mov
mov
out
fsubrl
mov
daa
jmp
dec
fldt
repz
aaa
sub
mov
mov
fistps
sarb
in
push
rclb
stos
popf
call
dec
push
sti
cmp
push
adc
test
mov
add
popf
addr16
add
loope
dec
add
pop
fwait
sbb
lods
xchg
nop
test
mov
mov
jmp
jge
fwait
jae
adc
xchg
int3
cmp
or
aad
bound
ret
test
add
dec
mov
shlb
push
dec
push
pop
fwait
dec
addr16
pop
lahf
sub
jmp
lock
sti
fdivrp
js
xchg
loopne
push
repz
sbb
mov
mov
mov
jno
push
and
dec
cwtl
fcompl
jp
jp
gs
push
out
gs
inc
push
nop
xor
xor
pop
pop
pop
dec
loope
sub
add
notb
popa
add
bound
jb
shlb
insl
push
out
scas
pushf
add
jb
mov
mov
lret
aas
iret
into
insl
lods
shlb
test
jno
aas
xchg
add
fs
mov
mov
outsb
and
dec
jmp
push
and
lea
dec
into
mov
cmpxchg
inc
cmp
mov
loop
mov
push
pop
sbb
popa
cmpsl
sarb
stc
fsts
imul
cltd
adc
xchg
inc
xchg
addb
test
add
js
cmp
xchg
dec
cmpsb
daa
in
movsb
mov
push
push
pop
lods
ret
mov
shl
adc
mov
test
jns
add
imul
and
mov
in
mov
pop
ja
pop
dec
mov
cwtl
dec
shl
xor
sbb
es
lds
nop
jle
push
and
lds
add
dec
les
xchg
cs
push
or
mov
mov
push
and
cltd
in
es
push
roll
hlt
je
aad
ljmp
popf
shr
ret
sub
pusha
dec
imul
add
loope
adc
adc
add
push
pusha
fwait
out
lock
lods
jl
mov
xor
add
and
subb
mov
dec
sub
cld
jl
daa
loope
cmpsb
cs
mov
mov
les
pusha
cmpsl
dec
lods
popa
cmp
jle
pop
loopne
js
add
cwtl
stc
sub
data16
cmp
cltd
in
jecxz
pop
mov
loopne
into
mov
decb
xor
and
pop
adc
or
into
cmpsb
pop
cmp
inc
shrl
dec
movsl
lds
out
ror
jno
andl
adc
sbb
repnz
xlat
aad
aaa
mov
push
nop
jmp
or
dec
inc
fldt
ror
inc
out
loope
sub
es
ficomps
shll
pop
mov
xchg
dec
sub
mov
es
push
push
jecxz
jne
call
push
idiv
xchg
icebp
mov
mov
rclb
mov
jmp
push
pop
mov
fisubs
push
push
xchg
mov
in
mulb
fwait
insb
lahf
notb
jg
sub
push
sbb
movsb
jmp
in
fsubs
test
shrb
or
outsl
add
mov
sarl
jnp
xchg
mov
insl
jne
test
sti
adc
inc
adc
mov
ret
mov
cmp
xor
jp
add
dec
hlt
mov
adc
mov
jnp
cltd
test
push
int3
cmp
add
inc
inc
movsb
cwtl
cli
add
sub
dec
out
outsl
mov
iret
jge
push
roll
push
mov
push
jmp
mov
mov
inc
addr16
fdivrl
jne
sbb
loopne
xchg
call
not
js
mov
cmp
xchg
inc
jbe
xor
sub
sbb
call
fsubl
add
mov
das
mov
adc
es
dec
dec
into
imul
pop
bound
dec
fwait
std
lods
inc
and
push
push
ds
in
push
xor
repnz
xchg
movsb
add
sbb
ds
inc
and
xor
mov
push
imul
dec
mov
inc
insl
cmpsl
xor
rorl
adc
dec
mov
dec
mov
ret
je
call
cli
mov
hlt
xor
les
xor
test
pop
sbb
cmp
inc
dec
sahf
cli
adc
xor
xor
and
out
or
mov
push
lods
push
lcall
orl
mov
cmp
dec
mov
sub
call
mov
fsubr
cltd
jge
mov
pop
inc
xor
or
sub
cmp
xchg
xchg
pop
inc
jge
jns
ds
add
les
pop
arpl
mov
fdivrs
lcall
cltd
mov
test
xchg
mov
push
mov
outsl
mov
sbb
jbe
mov
mov
fstpt
into
inc
cmp
adc
rolb
add
subl
mov
jne
sbb
cmp
sub
and
ret
adc
lcall
and
clc
xor
mov
sub
in
and
xchg
arpl
mov
adc
sub
fnstcw
dec
nop
call
mov
outsl
pcmpgtb
jle
cmp
lods
and
inc
add
enter
jne
adc
aaa
inc
pop
dec
jmp
test
dec
shlb
and
or
insb
or
test
not
dec
pextrw
outsl
dec
add
call
ljmp
adc
dec
cmp
jp
enter
pop
pop
mov
mov
sub
mov
cmp
aaa
call
dec
sbb
stos
mov
mov
mov
inc
sub
stos
dec
lds
mov
push
fildl
sbb
push
sub
fildl
mov
push
dec
or
jb
out
sub
lods
xchg
xchg
rcrb
test
loopne
pushl
cmpsb
mov
sbb
icebp
and
push
and
gs
jns
je
sub
push
cmp
xor
mov
push
bnd
jg
js
and
shrl
in
ss
jmp
ja
negb
xchg
inc
shrb
mov
sbbb
cmc
mov
fdivrs
pusha
leave
add
das
mov
mov
and
hlt
push
fwait
ss
movsl
inc
dec
mov
inc
testl
adc
imul
push
mov
and
mov
pop
das
or
xor
out
mov
ret
testb
aas
jecxz
icebp
loope
js
mov
cmpsl
add
sbb
cmpsb
fucomip
jne
inc
push
xor
push
into
adc
xchg
popa
fldenv
ret
push
push
sbb
push
mov
mov
or
or
pop
sbb
add
xor
xor
cmp
sub
clc
and
xor
notb
sbb
test
cmp
or
cltd
adc
xchg
add
cs
sub
lret
aaa
inc
dec
jecxz
loop
mov
adc
and
dec
dec
loop
lea
stos
inc
sbb
jmp
insl
mov
aad
push
sar
lret
mov
xor
mov
mov
test
jmp
or
ljmp
pop
mov
outsb
imul
mov
sub
shrb
jp
fstpl
and
and
scas
jmp
mov
inc
aas
test
lds
clc
mov
sti
push
cs
enter
and
imul
mov
icebp
adc
insb
int3
xor
sbb
and
inc
pop
push
ret
bound
push
repnz
movsl
int3
imul
mov
mov
push
xchg
jbe
inc
cmpsl
inc
pop
xor
cld
insl
jns
sbb
add
inc
jae
int3
add
imul
rcl
mov
xchg
cmp
or
mov
pop
loopne
ja
xchg
pop
sahf
scas
rcl
cltd
rolb
add
test
jle
xor
add
jns
dec
mov
mov
iret
fcmovu
cmpsl
ja
pop
sub
lcall
push
inc
xor
pop
addl
movl
jbe
ljmp
lret
pop
mov
cmp
cltd
daa
loope
cmp
push
push
xor
pop
mov
and
and
jmp
scas
mov
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
inc
push
adc
mov
xchg
mov
mov
jb
in
fnstsw
addl
test
add
dec
cmp
adc
push
sbb
adcl
jmp
jo
cltd
inc
shll
jp
push
cmp
pushf
daa
addr16
sub
pop
jmp
or
push
sbb
jbe
test
dec
lods
mov
push
mov
fs
xor
lcall
in
cmpxchg
pop
mov
push
inc
arpl
mov
aam
pop
ret
and
xchg
mov
xchg
repz
clc
jno
les
call
loopne
and
shl
enter
mov
loop
call
cli
mov
ss
test
call
jge
out
cmpsl
mov
movsl
pushf
add
pop
mov
stos
stc
int3
push
movsl
cltd
jnp
fdivrs
imul
pop
jb
sarl
arpl
stos
sbb
test
dec
addb
xor
push
xor
jmp
sub
sti
mov
push
jo
cli
or
dec
push
push
dec
and
stos
push
mov
arpl
outsl
nop
sahf
repz
jae
or
add
decb
div
arpl
push
push
sbb
lret
mull
ret
sbb
stos
mov
xchg
add
jne
sub
aad
cmpsl
xor
xchg
js
jp
jmp
aam
add
addr16
mov
out
cmp
fidivs
xchg
mov
dec
and
pop
aaa
andl
bound
mov
dec
inc
jbe
sub
jno
or
jbe
je
or
ljmp
pop
test
mov
mov
push
xchg
jle
pusha
push
lods
ficoms
hlt
push
into
rcrl
pop
in
adc
enter
mov
sbb
shrb
sub
sbb
cli
stos
adc
push
rcll
mov
fdivs
pop
imul
jnp
sub
mov
mov
dec
mov
add
xor
aad
xor
mov
imul
cmp
xchg
push
lcall
xor
insb
pop
adc
or
je
push
or
fwait
imulb
aam
les
push
lock
lret
push
adc
enter
repz
jl
in
jmp
mov
iret
and
jl
mov
mov
xor
arpl
stos
sbb
dec
mov
mov
fstps
lahf
mov
mov
aas
adc
jae
gs
sbb
push
mov
fs
sub
jne
aam
sar
scas
je
fisttps
push
xlat
pop
rorl
stos
push
out
loope
clc
shlb
cltd
sbb
cmpsl
and
std
data16
call
or
dec
pop
cli
out
in
cs
mov
mov
fiaddl
inc
lods
outsb
leave
cmc
out
jl
cmp
lods
mov
mov
incl
mov
shl
or
and
pop
nop
and
jbe
mov
or
sti
xchg
push
out
inc
in
popa
jne
sub
loop
scas
das
lods
test
fs
mov
cmp
or
cmp
dec
iret
xchg
ljmp
or
movsl
dec
mov
sbb
jae
orl
and
mov
int3
sub
push
outsl
or
jns
and
stc
call
adc
jno
mov
mov
lods
sbb
nop
jge
lock
lock
inc
stos
mov
test
adc
hlt
inc
push
lret
mov
imul
iret
inc
repnz
fisubs
adc
les
dec
fwait
add
mov
adc
shrl
popa
fs
mov
adc
movsb
mov
push
lret
gs
sbb
lret
cmp
or
addr16
or
push
xchg
lds
les
je
loopne
insb
fsub
jns,pt
jns
lahf
mov
and
pop
or
ffreep
es
dec
sbb
mov
outsb
popf
hlt
or
das
jle
sub
ret
int3
popa
lahf
loope
sbb
pushl
call
out
out
clc
add
and
and
sarl
mov
cmp
das
push
loope
das
jae
lret
push
dec
test
pop
xchg
fs
mov
or
loope
lret
push
xor
sub
dec
imul
out
imul
or
lea
repnz
and
pusha
fs
add
outsl
sbb
cmp
jnp
mov
mov
pusha
test
and
jp,pn
jl
and
xor
cmpsl
popa
rcrl
xchg
arpl
rorb
cmpsl
movsb
mov
rcll
ds
fmull
test
mov
mov
jge
jl
fistps
pop
imul
cwtl
out
dec
leave
jb
repnz
sti
and
sbb
sarl
test
sub
adc
mov
js
xchg
xor
leave
out
xchg
pop
ret
into
test
int3
icebp
fldl
mov
adc
xchg
push
pop
dec
fisubs
mov
push
ds
addr16
scas
or
adc
jo
xchg
mov
mov
sbb
jbe
mov
pop
daa
ss
sub
test
mov
out
rorl
outsl
jbe
push
repz
and
lcall
js
aam
and
push
sbb
push
mov
lock
add
ljmp
jne
jge
xorl
cmp
pusha
jbe
dec
inc
bound
mov
negl
xchg
cld
stos
stc
mov
es
dec
pop
add
cmp
jo
xor
mov
push
addr16
mov
adc
lret
sbb
jbe
xchg
adc
jg
loopne
not
fcomps
in
in
pusha
pop
xlat
sub
xchg
push
fidivl
fnstcw
pop
pop
cmpsl
rol
xchg
fildll
ljmp
ret
fstps
pop
nop
xor
jp
mov
fsubl
shlb
rcrl
clc
movsl
inc
data16
xchg
cmp
xchg
mov
in
dec
das
jbe
test
iret
xchg
push
mov
cmp
cmpsl
jge
mov
scas
xchg
popa
scas
stos
insb
and
xor
addl
daa
ret
hlt
mov
xchg
mov
rorb
pusha
ja
pop
adc
fwait
dec
cmp
cmp
pop
push
test
or
sub
mov
es
sbb
cmp
js,pn
mov
mov
push
lds
or
jne
push
sbb
aas
xchg
rcr
out
mov
dec
cmp
and
push
sub
popa
imul
adc
fiaddl
popa
cs
lret
into
arpl
adc
mov
stos
aam
sbb
xchg
call
sub
aas
aaa
inc
clc
cmc
or
or
lock
mov
mov
fidivrl
dec
jmp
push
out
jl
xor
neg
lods
sarb
push
jbe
icebp
sub
ds
into
dec
mov
add
add
jae
dec
imul
and
add
ret
sbb
mov
adc
gs
cmp
push
sbb
sbb
xchg
push
sbb
jno
vmovdqu
xchg
fstpt
js
dec
pop
sub
in
and
cmp
sub
ss
mov
cli
sub
add
loope
int
pop
jle
stos
mov
pop
pusha
add
adc
lret
or
mov
test
xchg
fstpt
out
lret
ss
dec
outsb
push
fmull
out
or
loope
push
lods
daa
faddl
in
mov
lea
les
fcoml
xchg
ja
inc
adc
mov
dec
or
mov
mov
mov
aas
jno
les
xor
pop
inc
es
icebp
jmp
cmpsb
pop
hlt
mov
sahf
jns
jmp
insb
cs
lret
in
es
lods
push
scas
test
or
outsl
pop
outsl
push
sub
pusha
mov
repnz
test
jnp
jp
pushf
jnp
adcl
outsb
outsb
repz
mov
ret
xor
loopne
enter
add
in
ss
ss
nop
inc
dec
scas
bound
filds
jecxz
sbb
xchg
shr
cmpsb
fdivrl
insb
add
sbb
push
loope
cmp
stc
std
jl
lds
paddw
push
jo
arpl
aas
cli
fbld
pop
loope
and
iret
xor
sbb
sub
push
lea
push
jb
pop
lcall
sbb
jae
out
jno
in
and
nop
in
adc
lcall
lods
movsl
in
or
sub
pusha
sti
rcl
push
dec
jp
popf
mov
inc
or
insl
sub
adc
cmp
popf
or
cmp
ljmp
mov
adc
dec
lds
sub
test
jns
or
repnz
es
jb
pop
mov
mov
dec
xchg
jecxz
mov
in
insl
jmp
mov
mov
jg
insb
jl
mov
aas
dec
shlb
stc
cmp
dec
lods
sub
or
ljmpw
shlb
and
out
push
in
int3
push
and
and
fnsave
nop
div
inc
sub
test
fdivl
jmp
xlat
sbb
adc
idivb
adcb
push
bound
mov
xor
sahf
xchg
dec
adc
push
out
sbb
dec
mul
sub
push
pop
inc
xchg
mov
sbb
out
push
icebp
mov
pop
adc
orb
jae
pop
rorl
pop
testb
cmpsb
sti
mov
push
scas
ljmp
int3
out
push
mov
inc
insl
shl
rolb
mov
inc
das
or
popl
inc
pop
sub
inc
dec
loop
in
mov
out
dec
pop
jo
cmp
test
out
insb
enter
jge
pop
lds
mov
aas
adc
inc
sbbl
repnz
jae
mov
mov
dec
xchg
xchg
push
sbb
mov
ja
cmpsl
and
fldt
push
in
adc
scas
lods
adcb
clc
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
inc
mov
insl
sar
test
push
adc
std
inc
adc
cld
in
into
mov
mov
mov
mov
jl
or
sarb
or
lret
sbb
nop
xchg
daa
lea
jecxz
outsb
jnp
test
and
sbb
jge
dec
pop
cmp
mov
add
dec
cmc
in
sub
jbe
cltd
push
cmp
mov
fstpt
aad
rep
push
xchg
sub
sub
and
inc
and
sub
das
movsl
xor
imul
xor
idivb
sub
data16
add
inc
icebp
daa
add
rolb
xchg
xchg
std
aas
cwtl
fcoml
out
add
shrl
insl
xchg
push
faddl
xchg
in
xlat
iret
cmp
nop
adc
xlat
outsb
stos
dec
xor
jb
dec
rorl
lods
inc
dec
add
out
xchg
nop
mov
and
and
adc
mov
loope
out
mov
xchg
ret
inc
and
je
add
xchg
jbe
xchg
lods
nop
orb
es
mov
cmp
jne
test
xchg
mov
or
mov
mov
lds
xchg
mov
sbb
cmp
sbb
mov
repz
mov
mov
and
mov
lret
xchg
shl
sbb
loopne
scas
shrb
hlt
sub
xor
mov
idivl
push
cli
dec
cmp
shll
push
mov
or
adc
push
xlat
pop
sbb
scas
push
mov
das
jmp
cmpb
add
push
jbe
repz
insl
out
notb
dec
es
negl
cmp
enter
fwait
mov
pop
or
jle
pop
addl
xchg
loop
jnp
cwtl
cld
imul
cmp
std
xor
lods
mov
outsl
repz
sbb
cmpb
ds
pop
and
adc
and
jae
dec
mov
repz
es
mov
push
and
je
mov
mov
addr16
iret
push
adc
jg
mov
out
mov
test
jne
add
mov
pop
push
adc
add
sub
xchg
lea
pop
jp
xchg
mov
push
add
in
idivl
andb
pop
add
xchg
lea
xchg
lcall
adc
push
sti
jg
enter
loopne
add
jns
fsubrs
imul
das
dec
out
negb
inc
clc
inc
ss
cmpsl
pop
and
sbb
push
cmpsb
ficompl
push
pop
inc
fildll
fdivs
fnsave
pop
cmp
mov
jge
push
dec
push
stc
add
in
aaa
jae
mov
icebp
ret
xchg
popf
ljmp
pusha
add
dec
or
fwait
xor
das
push
in
out
inc
ret
js
dec
std
out
add
jb
cmpsb
mov
push
and
jecxz
ficoms
lahf
cltd
mov
push
sbb
or
adc
lods
outsl
and
jns
xor
jmp
aas
and
push
or
or
test
inc
outsl
sbb
inc
pop
out
cld
scas
mov
sub
fwait
aam
insl
cmp
lahf
jo
test
notb
inc
inc
push
lods
jmp
add
aas
xchg
mov
test
mov
sbb
adc
dec
mov
fisubl
or
mov
sub
add
mov
push
in
mov
pop
inc
xchg
pop
outsb
xor
pop
repnz
push
cmp
mov
mov
test
xor
sbb
in
fisttpl
out
xchg
push
fcomi
add
xchg
std
addr16
cli
mov
test
adc
pop
adc
or
push
int
mov
dec
cmp
mov
dec
and
sahf
cmc
push
loopne
sub
iret
xchg
sub
out
or
mov
xor
nop
lods
or
push
cmpsb
lret
pop
xchg
jb
lcall
aaa
daa
dec
pop
nop
out
insl
xor
xor
int
insb
mov
arpl
jp
mov
xlat
pop
callw
adc
mov
addr16
scas
arpl
fxch
pop
xlat
idivl
sbb
lds
imul
mov
movsl
int3
insb
dec
gs
cmc
cmp
arpl
out
stos
cmp
inc
mov
cli
mov
jl
mov
divl
add
mov
lods
pop
lret
int
addr16
pop
je
loope
cmp
je
dec
dec
loopne
sub
cmp
stc
xor
fbstp
jecxz
test
je
iret
xor
rcrb
rol
fcomip
loopne
in
inc
sub
jle
cmp
or
mov
push
in
sbb
sbb
gs
push
jl
mov
fimuls
push
cld
pop
push
mov
pop
stos
push
jp
push
xchg
stos
pop
push
fs
push
je
adc
mov
xchg
xor
out
mov
inc
rclb
sbb
pop
repz
pop
xchg
pop
push
xchg
xchg
ljmp
and
mov
pop
mov
dec
loopne
rcrb
jmp
mov
xor
ja
sti
pop
jne
inc
popf
pop
dec
shlb
std
in
dec
xor
mov
and
sbbb
cmp
jno
mov
pop
jg
add
int3
pop
adc
push
and
dec
iret
sub
out
cmp
adc
int3
test
call
inc
jecxz
aaa
xchg
or
mov
mov
mov
fdivrl
loope
rorb
cmp
add
lock
sahf
mov
test
notb
adc
dec
int
daa
mov
stos
push
push
xchg
punpcklwd
rol
sub
xchg
test
imul
pop
sub
add
jbe
cmp
or
cmp
ret
jb
pop
pop
addr16
rorl
nop
mov
cld
inc
sbb
cli
and
pop
push
mov
adc
fidivrs
inc
push
pop
or
cmp
adc
outsb
in
iret
jns
add
pusha
out
push
jo
jbe
sub
scas
xchg
jo
imulb
lahf
lret
call
sub
mov
or
sbb
xchg
sbb
daa
fnstsw
push
lret
notl
out
roll
push
pop
pop
push
mov
fstpl
ja
fldenv
xor
or
pusha
xor
push
movsl
push
jae
dec
xchg
aas
add
xlat
rcrl
mov
jnp
jns
cmpsl
addr16
aaa
push
add
sti
mov
lods
setg
popa
divl
movsl
pop
sub
push
repnz
xor
popa
adc
inc
sbb
fs
xor
push
movsb
add
xchg
mov
jo
inc
fiadds
gs
les
sub
pop
jno
aas
add
aaa
iret
push
mov
subl
vphadddq
sbb
xchg
and
imul
xor
sub
or
or
sub
jno
psubusb
jle
mov
out
in
sbb
xor
inc
sahf
push
sub
sub
lods
mov
fsubrs
cmp
xlat
sbb
pop
enter
mov
push
dec
jbe
dec
cs
jb
call
clc
xchg
jmp
nop
enter
fiaddl
and
lret
mov
add
push
dec
sbb
cmp
cli
dec
mov
test
lret
sbb
pop
pop
fiadds
ss
lret
mov
popf
in
xchg
call
fucom
sahf
popf
out
and
jb
gs
sub
cld
fsubl
sbb
xchg
push
mov
and
add
scas
mov
bound
fwait
dec
pop
push
pop
call
in
pop
pop
pop
lds
mov
inc
insl
int3
dec
mov
stos
cmpsb
xor
adc
jecxz
andl
inc
sub
xchg
lods
fdivs
and
jbe
jge
mov
les
cs
adcb
mov
jp
fiadds
push
loop
roll
mov
cld
mov
mov
pop
sbb
inc
js
cli
ficoms
aam
nop
out
arpl
fnstcw
mov
jle
lahf
pop
xchg
jbe
jl
sbb
push
pop
inc
or
and
ret
daa
mov
mov
fadds
mov
pop
movsb
jmp
sbb
lods
or
adc
push
movsb
repnz
xchg
cs
fisubl
xchg
sbb
flds
sub
push
loop
mov
inc
pushf
cwtl
repnz
or
andb
adc
cwtl
jmp
movsb
rorl
es
pop
out
nop
dec
cltd
enter
xchg
cli
inc
mov
test
movsl
iret
je
mov
movsl
cmp
or
fimuls
cmp
cmp
ret
and
insb
negl
xchg
mov
xor
adc
xchg
mov
rcrl
in
pop
jne
inc
lcall
jnp
cmpsl
push
adc
loop
mov
mov
mov
lock
les
jno
les
inc
je
inc
xor
dec
sahf
push
inc
cltd
cmpl
dec
aas
les
fcmovne
sbb
jle
int
jns
roll
sub
push
push
push
pop
mov
popf
add
mov
loope
xchg
pop
leave
sub
pop
ret
adc
data16
xor
pop
push
xchg
xor
mov
sub
test
xchg
xchg
xchg
jmp
cmpsb
cmp
in
fisubl
paddw
xor
pushf
lahf
mov
insb
sbb
mov
push
dec
insb
pop
inc
and
xchg
fldcw
mov
dec
in
xor
xchg
scas
add
les
imul
jae
aaa
jbe
xchg
in
sbb
test
lea
popf
inc
je
mov
pop
enter
cs
out
cmpsl
sub
jle
in
out
pushf
pop
inc
in
push
stc
dec
test
aad
cmp
add
test
or
cwtl
cmp
in
jl
xor
sub
mov
mov
cmp
pusha
repnz
xchg
test
lea
stos
inc
enter
daa
fwait
pop
adc
shlb
xchg
out
cmp
cmp
mov
stc
stos
xchg
push
stos
into
lcall
in
dec
clc
push
addr16
insb
sbb
sti
std
adc
notl
btc
xchg
push
cwtl
lods
pushf
cmp
mov
and
lahf
shrb
fisttpl
fs
mov
out
xor
movsb
popf
les
jp
aaa
sti
dec
in
or
loop
mov
ja
pusha
sbb
leave
loopne
xchg
out
es
mov
mov
cmp
pop
sub
and
mov
xchg
xchg
or
sbb
loop
test
xchg
push
xor
dec
xor
js
imul
sbb
popa
mov
add
roll
test
and
or
dec
das
aaa
push
cs
cmp
add
lcall
rcrb
lods
jns
and
xchg
adc
push
push
sbb
and
cli
xchg
pop
cmpsb
fistl
mov
shll
pushf
pop
xor
jno
sbb
pop
and
mov
ss
cmp
sub
push
xchg
psrld
popf
pushf
sahf
je
and
in
dec
cmp
jo
fbstp
add
mov
dec
mov
in
popa
sbb
xchg
movsl
into
cmc
fistpll
jge
adc
minps
xchg
outsb
mov
imul
xor
push
mov
cmp
loope
popf
push
mov
ret
adc
dec
dec
fwait
enter
mov
push
push
pop
jnp
nop
jo
pop
iret
push
adc
pop
mov
mov
ss
scas
jp
loopne
xchg
ss
in
xchg
jno
lock
dec
mull
leave
dec
fistl
inc
mov
jno
fisttpll
cmp
sbb
mov
xor
adc
mov
mov
mov
lock
stos
dec
jns
mov
mov
clc
arpl
pop
or
push
lock
in
jmp
mov
sbb
push
xlat
mov
mov
xchg
mov
mov
out
cmpsl
dec
pop
hlt
loope
sti
add
mov
adc
ja
add
roll
enter
mov
int3
push
scas
aad
out
add
lret
fwait
icebp
mov
jnp
pop
orb
and
loopne
sub
sti
add
xor
pushf
repz
adc
lds
jbe
sbb
xor
movsl
add
xchg
int
sub
mov
jle
dec
push
mov
lea
mov
pop
int3
dec
mov
divl
loopne
sahf
pop
movsb
repz
rcll
sub
xor
je
mov
outsb
and
cmp
cld
aas
sti
cld
gs
jnp
add
testb
ds
test
scas
inc
adc
adc
arpl
pop
mov
lea
push
sarb
sub
cmc
in
js
adc
cmp
xchg
in
mov
lahf
insl
lods
pop
jge
lret
xlat
js
rcl
aaa
ss
sahf
mov
and
xorl
filds
xor
lret
movsb
enter
fsubs
lods
add
scas
pop
inc
push
das
jb
xor
pop
scas
mov
mov
stos
cmp
data16
gs
cmpsl
sti
pushf
and
sub
mov
jmp
cmp
rcll
push
adcb
imul
rorl
pushf
pop
push
lock
xchg
push
out
popf
push
loope
jae
mov
out
pop
sbb
xchg
fs
je
arpl
insb
sub
inc
bound
sbb
int3
xor
jns
fidivs
popf
mov
jecxz
and
sbb
arpl
jae
idiv
xorl
adcl
adc
lahf
lea
mov
push
pop
xchg
push
mov
in
lret
add
push
fildll
push
add
clc
xchg
and
mov
int
insb
or
nop
in
dec
mov
ds
push
icebp
pop
adc
pop
cmpsb
clc
mov
inc
pop
aaa
or
add
cmc
test
xor
rclb
pop
push
push
fdivr
cmp
gs
or
dec
xchg
out
dec
jno
js
bound
xchg
bound
sbb
rorl
test
add
inc
stos
mov
xor
stos
mov
repnz
pop
dec
fucomi
xlat
repnz
jnp
mov
xchg
pushf
lods
mov
testl
jae
clc
mov
cmp
sbb
rcrb
pop
sub
xchg
js
or
push
out
aaa
push
xor
mulb
ss
test
jle
adc
cmp
stc
lret
pop
pusha
mov
xchg
cwtl
push
mov
ss
or
sub
sti
cwtl
push
shl
ret
into
das
xchg
mov
cmp
mov
and
ss
nop
jne
and
rcrb
sbb
push
pop
nop
mov
push
xor
out
jle
lods
or
int3
pop
cmc
xor
and
dec
xor
lods
sbb
jl
fdivs
imul
jne
mov
xchg
rcrl
scas
cld
xchg
test
pushf
mov
xchg
test
mov
dec
sbb
pusha
test
data16
inc
jae
sub
daa
jo
mov
dec
test
daa
xchg
mov
sbb
cmpl
lock
call
mov
and
pop
sti
inc
jg
les
cld
and
sbb
mov
jbe
mov
insb
jne
cld
lds
pop
sub
jmp
cld
shrl
inc
test
ror
inc
inc
dec
mov
mov
icebp
dec
cmp
push
ja
lcall
sub
mov
add
lock
fnsave
and
or
xchg
xchg
lods
arpl
call
jne
push
inc
adc
mov
xchg
rorl
push
adc
inc
xor
xchg
repnz
stos
popa
cmc
into
push
mov
test
jnp
nop
push
push
jg
inc
inc
adc
and
inc
jmp
dec
mov
ja
jne
cli
mov
int
jecxz
cmp
leave
push
jnp
mov
jl
pop
cld
sbb
cmpl
orb
shr
or
xor
pmullw
pusha
stc
imul
pop
push
jge
adc
inc
movsb
arpl
movl
sarl
es
ss
scas
push
dec
movsb
add
jno
cmpl
ja
mov
sbb
ja
mov
dec
cld
pop
dec
jg
sbb
insb
xchg
add
out
sarb
dec
push
dec
inc
cmp
enter
push
dec
mov
shl
outsb
in
adc
dec
iret
loop
fisttps
idiv
add
sahf
or
sub
fildll
das
xchg
dec
add
loopne
push
sbb
inc
insl
popf
push
outsl
insb
jne
and
imul
cmc
adc
and
and
xor
jle
enter
rol
gs
in
fildll
bts
je
ret
mov
leave
fildll
mul
inc
add
into
inc
mov
xchg
push
push
pop
xor
dec
jbe
cmpsl
icebp
xor
push
inc
jle
js
mov
mov
xchg
imulb
es
stos
xchg
shll
xor
aad
push
push
push
cli
cmp
push
test
lret
dec
inc
xchg
repz
bound
hlt
adc
sbb
mov
cwtl
sbb
fadds
fwait
aas
fcmovne
dec
jns
jecxz
sbb
fs
imul
add
data16
add
fcmovbe
mov
sub
pop
out
stos
daa
xchg
addb
fcoms
fidivrs
popa
mov
or
pop
jecxz
ss
jg
jmp
loope
adc
cmp
lods
into
mov
inc
inc
lock
fldl
jmp
jns
xchg
xchg
adc
push
outsl
xchg
push
inc
mov
xchg
movsb
sbb
jle
out
jg
sahf
fcmovnbe
cmpsb
mov
xor
cld
xor
push
je
mov
shll
xchg
hlt
fcoms
xor
inc
or
stos
nop
inc
out
mov
or
repnz
out
int
fxch
gs
push
xchg
xor
sbb
fs
inc
arpl
adc
cmp
data16
cli
cmp
or
jae
xchg
sub
sarb
mov
loop
lret
nop
inc
adc
addr16
dec
sub
loopne
stc
js
push
xorl
mov
lock
mov
lock
es
mov
and
and
mov
mov
mov
inc
popf
xor
decl
jne
adc
cmpsl
sub
fdivl
icebp
cmpb
xor
int3
lea
ja
dec
lds
in
cmc
test
or
cld
mov
ljmp
pop
add
pop
test
dec
lahf
push
inc
imul
ficomps
ret
aaa
cld
pop
xor
pushf
mov
cmpsb
or
jno
notl
xor
mov
dec
gs
push
repz
daa
repz
rclb
insl
je
jl
jae
imul
lret
xchg
xchg
jle
das
fsubrs
dec
shll
mov
xchg
jae
xchg
mov
inc
adc
pushf
test
dec
inc
stos
adc
and
out
sbb
sbb
rorl
in
adc
push
ja
hlt
pop
rcrb
js
sbb
aam
pop
push
pop
loopne
shll
inc
mov
mov
lahf
add
outsb
pop
adc
mov
xor
xlat
jp
lahf
mov
popa
int
fmuls
decl
jg
pushf
leave
mov
out
sarb
aaa
dec
dec
push
idivb
xchg
sub
push
jnp
dec
stos
mov
inc
fdivp
ss
ja
lods
test
cmc
cvtpi2ps
popa
and
data16
inc
popf
pop
mov
cmp
jecxz
into
ret
push
mov
xchg
or
lods
lret
dec
xor
movl
lock
bound
scas
bound
mov
lret
je
in
in
in
and
mov
mov
jle
cmpsb
orb
and
mov
daa
js
fmuls
add
stc
testl
dec
jbe
clc
cmpsw
xchg
dec
mov
in
out
sub
and
pop
enter
loopne
fiaddl
in
test
inc
push
ret
dec
fucomi
inc
je
mov
loopne
subb
push
sbb
fldenv
mov
cld
out
push
int
inc
dec
mov
mov
xchg
mov
fldln2
cmp
out
and
xchg
xchg
mov
mov
sbb
xchg
pop
push
mov
mov
in
std
repz
and
pop
addr16
out
out
popf
and
in
adc
jb
sahf
xlat
mov
test
sub
les
jp
sub
xor
mov
inc
push
mov
pop
dec
aaa
in
rcr
movsb
cmc
cmp
jno
outsl
adc
push
adc
cmpsl
mov
add
push
pop
pop
mov
call
cmp
es
loope
cmp
shl
push
in
xor
lea
roll
mov
stos
mov
imul
xchg
sub
jb
jae
or
xchg
mov
ds
xor
je
push
loop
movsl
test
test
jns
push
mov
sub
push
jae
lock
test
sbb
jno
jae
ret
test
push
push
dec
inc
mov
sub
xchg
clc
mov
out
xchg
push
push
out
xor
aam
xor
fcomi
adc
adc
sub
popa
adc
jnp
xchg
aas
adc
mov
imulb
lds
call
rorl
or
mov
orb
les
rclb
xchg
sahf
jg
and
call
add
jae
cmp
mov
or
mov
test
sbb
jae
pop
test
sub
loopne
lods
pop
arpl
jmp
dec
aam
sbb
mov
inc
jo
sahf
call
outsl
repz
dec
inc
jmp
ds
fildll
add
cs
push
repnz
xchg
out
shrl
or
mov
cs
cltd
ud0
sub
lods
pop
pop
sti
add
test
rcrb
and
push
js
sub
shl
dec
pop
sbb
sbb
lods
repnz
movsb
inc
jp
adc
arpl
sti
push
stc
lret
in
and
dec
pop
pop
ds
mov
mov
mov
xchg
jp
and
pop
xlat
int
int3
cmp
in
loopne
sub
ja
add
push
pop
mov
subl
arpl
popf
mov
add
push
and
and
test
jge
xor
xor
ret
fsts
pop
rcl
js
push
inc
xor
add
imull
add
and
in
mov
outsl
sub
pop
pop
std
testl
sub
inc
jl
call
push
mov
stos
fwait
lea
dec
jo
inc
push
addl
lea
and
fldenv
and
test
pop
cmp
mov
aad
xchg
add
sub
imul
jl
outsl
dec
mov
test
add
into
lock
mov
pop
push
test
pop
stos
cmp
inc
xchg
jne
pop
fistl
pop
dec
shlb
dec
addl
js
fwait
enter
jl
xor
subb
js
pop
xor
cmp
mov
xor
dec
add
add
movzbl
in
or
mov
jge
push
pop
xor
inc
jne
jo
jnp
push
lea
fsubrl
ret
dec
jne
adc
pop
popa
call
mov
sbb
rclb
or
and
sub
popf
imul
push
add
mov
cs
mov
test
xchg
insl
jl
imul
stos
inc
rcrb
or
mov
sbbb
or
sbb
into
loope
mov
add
adc
insl
stos
fildll
mov
je
ftst
dec
mov
andb
pop
push
icebp
push
sub
xchg
mov
dec
mov
inc
pop
push
dec
push
cli
repz
imul
jnp
mov
aad
lods
aas
ljmp
icebp
call
push
cmc
inc
pop
push
jge
mov
push
ljmp
inc
fldt
outsb
imul
sbb
ljmp
out
bound
mov
and
clc
outsb
inc
testb
test
cmp
dec
mov
ljmp
pop
cmp
cltd
ja
xchg
inc
pop
getsec
sbb
cmc
xchg
sbb
pop
cmp
inc
das
test
jmp
adc
xor
xor
and
gs
pop
sub
mov
or
mov
lret
lcall
insb
cli
insb
dec
movsb
dec
in
mov
lcall
mov
hlt
test
cmpsl
adc
lods
inc
pop
inc
icebp
mov
nop
mov
mov
roll
popa
clc
sub
jnp
mov
push
sbb
sbb
mov
cmp
mov
js
xor
ljmp
out
cmpps
movsb
loope
and
lret
sbb
cmp
or
iret
jo
pusha
xor
mov
mov
fisubl
mov
insl
mov
popl
sub
push
mov
mov
mov
std
xor
in
jae
dec
out
jg
dec
nop
ret
pusha
inc
test
cmp
das
or
pop
rorb
call
or
pushf
test
pusha
inc
pop
imul
sub
aad
pop
jmp
ret
fiaddl
lahf
pop
pushf
aas
sbb
jb
mov
push
mov
push
jo
add
add
dec
lods
mov
nop
ret
ret
mov
call
pop
or
jmp
push
and
call
pop
arpl
bound
movsl
repnz
xor
loopne
gs
lcall
lahf
fwait
out
mov
mov
xchg
and
mov
mov
mov
fsubl
and
repz
and
pop
or
insb
fimull
mov
pop
je
clc
add
or
xor
ror
cmp
outsl
inc
dec
cmp
call
cmpb
mov
or
stos
inc
sbb
cmp
nop
mov
sub
outsb
loope
xchg
dec
inc
mov
cmp
mov
xchg
add
ds
inc
movsb
xchg
lret
leave
les
xchg
mov
ret
leave
daa
addr16
rcrb
je
test
dec
jnp
scas
mov
xchg
inc
mov
xor
leave
mov
add
add
ficoml
lea
pop
sub
push
mov
aas
hlt
int3
add
movsb
jns
pop
or
jno
push
or
pusha
dec
mov
lahf
push
repz
mov
xchg
int3
sbb
aaa
xchg
movsl
sbb
dec
jae
adc
push
xor
pushf
call
add
cmp
xor
incl
add
jp
pop
dec
jno
mov
push
jae
lret
cmpsl
jmp
mov
xchg
cltd
push
jp
jmp
mov
stc
mov
mov
fildll
or
mov
call
push
in
iret
push
pop
loopne
xchg
leave
mov
mov
dec
inc
mov
sub
imul
shlb
cmp
stos
jno
inc
incl
fucomi
pcmpeqb
lods
mov
inc
add
add
sbb
push
mov
sub
repnz
and
mov
lock
push
adc
mov
in
pushf
adc
add
push
pop
mov
lahf
sbb
aaa
stos
cmp
sbb
lret
push
jmp
movsl
sbb
cmp
test
mov
mov
xchg
push
jecxz
or
cmp
jl
push
outsb
adc
xor
lds
xchg
cmpsb
dec
insb
jl
fldcw
cmp
mov
inc
mov
jo
popa
lea
push
add
dec
adc
data16
jecxz
es
clc
adc
dec
movsb
push
sub
jne
rclb
push
sbb
mov
out
sub
gs
mov
add
add
jne
add
out
shll
mov
gs
lret
push
mov
js
adc
or
add
in
sti
mov
xchg
rcrb
aam
sbb
dec
aas
or
xchg
cmpsl
mov
jae
in
jae
fstl
mov
movsl
mov
cmpsl
mov
pop
mov
jno
jno
test
jo
or
and
xchg
mov
jnp
cmp
sbbl
stc
fwait
out
mov
vminsd
fisubs
scas
iret
lahf
lock
or
push
shll
cmp
lea
sub
cmp
mov
out
dec
sbb
jns
xor
xor
mov
pusha
or
and
scas
hlt
and
mov
stc
cmp
xlat
pop
lock
push
mov
out
fnstcw
lds
addr16
xor
push
out
mov
add
xor
test
mov
outsb
pop
cmp
mov
shlb
push
fsubrs
rol
fdivs
dec
gs
sub
or
xchg
jmp
adc
ret
add
cs
fistpl
and
test
repnz
clc
daa
or
adc
out
jle
xor
push
loop
push
outsl
jle
in
xchg
pop
mov
mov
cmp
cmpsl
mov
dec
ret
or
pop
and
in
pop
sbb
xor
pop
sub
xchg
imul
repz
movsb
mov
jmp
dec
jmp
in
in
add
xlat
sarl
mov
cltd
cmp
dec
xor
inc
mov
jno
out
mov
inc
scas
leave
mov
sbb
das
imul
jecxz
mov
inc
add
out
icebp
out
fwait
and
hlt
sbb
mov
shrb
sbb
add
mov
and
add
lds
shl
pop
or
xchg
fstpl
mov
fdivp
int
rcll
mov
add
push
or
sbb
mov
push
imul
shll
mov
and
fdivs
mov
shr
add
xor
push
dec
sub
roll
cmp
lods
jg
les
aam
into
rorl
pop
pop
call
scas
sahf
shlb
inc
inc
lret
mov
insb
cmpsb
jecxz
arpl
pop
mov
fs
mov
xchg
lret
or
and
int
inc
int
jae
pop
js
nop
data16
push
cmp
mov
popa
push
testl
int3
add
enter
and
mov
xor
jle
das
mov
adc
fnstsw
xchg
adc
fisubs
fsubrl
pop
sub
sub
jns
mov
fiadds
inc
mov
test
mov
push
adc
jmp
aam
pop
mov
lcall
lods
pushl
dec
cmpsb
add
imul
pop
sahf
xchg
fdivl
lea
mov
add
push
sub
add
lret
ds
ret
adc
jne
aam
data16
cs
sbb
call
stos
pop
pop
out
xorb
add
sbb
jnp
pop
scas
xor
das
mov
and
mov
push
pushf
scas
lds
movsl
jne
add
adc
aas
lock
adc
in
push
aam
mov
clc
in
push
rorb
jo
fcomi
cli
in
mov
sbb
xor
test
daa
jb
jg
mov
pop
push
push
orb
mov
or
adc
hlt
aad
push
adc
xchg
pop
repz
jl
jb
lret
js
ret
ja
cmp
push
loop
xchg
pop
mov
pop
shlb
or
sub
push
inc
xchg
mov
out
xor
movsl
lea
sti
or
mov
inc
or
adc
jl
pop
lret
scas
pop
lahf
adc
lods
mov
stos
test
aad
jecxz
or
rorl
cmp
push
fnstenv
cmc
inc
shrb
popa
enter
push
pushf
push
sub
jmp
and
fimuls
jb
lock
cmp
jbe
add
pop
lods
sub
dec
mov
sub
test
lret
cltd
aaa
sub
adc
fdiv
pop
pop
pop
jno
dec
loop
stos
shr
push
jo
xor
cmpl
sti
xor
cli
mov
xor
inc
xor
outsb
sti
pop
xchg
jmp
lea
outsb
dec
sbb
popl
mov
or
test
mov
mov
push
cmp
jmp
dec
enter
mov
or
sbb
subl
add
into
fwait
int3
pop
cld
subl
jno
or
lea
sbb
push
add
jb
clc
inc
ror
addl
dec
jge
pop
add
les
jne
dec
jp
inc
mov
outsb
in
sbb
ljmp
cltd
ljmp
loop
lcall
pop
das
adc
ja
ljmp
mov
fsts
mov
std
push
fsubrs
inc
les
dec
cmp
int3
sti
xchg
ret
mov
icebp
mov
lcall
nop
sub
nop
jae
push
push
mov
add
bound
mov
bound
jbe
sub
jl
ss
out
mov
cmp
flds
mov
cmpsb
jl
loop
loope
ljmp
jp
dec
cmc
shrb
xor
loop
pop
mov
lea
add
repz
push
and
aaa
mov
ret
mov
nop
adc
enter
out
imul
insl
jl
out
add
cmp
enter
mov
test
rcrb
xchg
cmc
adc
mov
sub
mov
imul
sub
mov
clc
stc
jb
rcll
xorl
adc
lahf
ljmp
test
ficoml
je
test
aas
xchg
dec
inc
test
enter
push
rorl
repz
fistpll
mov
and
pop
mov
test
sbb
xor
add
mov
or
movsl
orb
adc
push
test
leave
into
sar
and
bound
test
out
push
shlb
out
adc
cmpl
jo
fisttps
push
mov
mov
push
out
adc
adc
lret
jnp
pop
arpl
xor
and
sbb
movsl
scas
inc
add
insb
jecxz
lcall
cmpsb
out
fs
roll
mov
pop
ret
xlat
sti
inc
sub
mov
into
cmp
shlb
cmp
pusha
js
das
mov
fstps
test
cmpsb
clc
pusha
aad
sub
add
xlat
inc
mov
rclb
mov
arpl
loopne
push
sub
out
dec
les
jns
sub
aaa
adc
imul
test
sbbb
arpl
clc
loope
push
loopne
cmp
mov
mov
mov
sbb
sub
popf
sub
imul
shll
icebp
das
mov
pop
stc
stos
mov
ss
pushf
pop
xchg
inc
iret
pop
dec
cmpsl
mov
lods
test
movsl
cli
fsubrs
movb
or
jbe
xchg
outsl
mov
das
adc
incl
arpl
pop
pop
and
call
andl
mov
cs
in
jmp
cmp
cmp
or
pop
jnp
and
call
mov
into
add
push
ficoml
fsubrs
xchg
movsl
push
data16
les
mov
dec
aam
sbb
mov
pop
sub
sbb
and
repnz
sti
adc
pop
scas
insl
mov
loop
push
lock
cmp
shll
jb
xor
nop
aad
sti
testb
pop
sti
movsl
lock
pop
inc
cmp
clc
xlat
clc
popa
fcmovne
mov
orl
fcmove
addr16
jle
xchg
jbe
mov
in
outsl
test
clc
inc
cmp
jae
idivb
push
mov
inc
lret
insl
test
xchg
pop
xor
dec
out
xor
stc
cmp
xchg
cmp
lea
shrl
mov
xor
jbe
cs
sub
popf
clc
sub
jae
ja
scas
cs
cmp
add
mov
inc
jb
jbe
ret
in
pop
add
cli
notb
stos
mov
mov
icebp
sub
mov
dec
sbb
stos
or
insb
sbb
adcb
stos
add
push
and
jae
xor
and
sub
mov
ljmp
enter
mov
mov
roll
stos
mov
add
sub
mov
mov
mov
mov
mov
cwtl
incl
jg
repz
push
leave
clc
fdivs
sbb
push
ss
adc
aam
lds
mov
jne
add
xchg
jbe
pop
cmp
xor
xchg
idiv
filds
sbbb
mov
aas
dec
mov
dec
sub
mov
leave
movsl
aam
pop
out
mov
imul
dec
jnp
sarb
rcl
je
push
push
or
out
ret
inc
add
jle
lods
in
les
inc
jg
mov
fldl2t
xor
pop
popa
push
dec
es
mov
movsb
imul
fucomi
call
cmp
bound
sbb
or
and
nop
xchg
dec
inc
mov
rorb
ret
les
ja
cmp
aad
aad
ljmp
addb
iret
sbb
adc
pop
ror
adcb
dec
dec
in
xchg
mov
sub
dec
adc
es
imul
pop
stos
mov
iret
mov
sbb
mov
in
aaa
mov
clc
sub
lcall
mov
popf
shll
arpl
insl
shrd
sub
pushf
push
aam
or
sub
lock
cmp
insb
pop
shrb
xorl
dec
lods
repz
pop
xchg
jl
sub
mov
outsb
lods
rcrb
cmp
rcrl
mov
lcall
pop
pop
inc
jg
test
cmpsb
insb
cmp
pop
repz
jne
inc
xor
dec
adc
adc
xchg
nop
mov
into
sub
push
fldl
push
mov
arpl
fwait
or
das
mov
cld
push
loop
in
into
clc
inc
mov
adc
test
cmp
xor
mov
xorl
fadd
cmp
mov
movsb
icebp
loopne
stc
nop
andl
movsl
daa
cli
inc
push
push
jo
mov
inc
je
mov
sub
dec
loope
mul
inc
lea
push
jns
inc
das
hlt
mov
and
fbld
out
push
add
sahf
or
stos
in
out
pop
test
bound
cmc
cmpsb
and
bound
xchg
xchg
shrb
test
sbb
lds
xor
stos
mov
ss
aaa
push
pop
js
out
lea
mov
daa
cli
ret
xchg
pop
ret
inc
add
or
pop
or
xchg
int3
call
mov
je
fsubrs
mov
cmp
loop
cmp
stos
sub
imulb
cmp
pop
mov
ret
adcb
xchg
into
out
sub
lea
pop
mov
jmp
sub
add
and
das
js
pushf
lret
push
test
and
cmp
cmp
frstor
cmpsb
fnstsw
xchg
popa
and
push
push
xchg
cmp
js
cmp
jl
dec
std
mov
rolb
neg
sbb
fsubs
sbb
cld
test
movsl
jmp
aam
xchg
or
dec
cs
imul
lds
mov
mov
pop
pop
lret
push
int3
jne
sub
dec
and
inc
ljmp
jp
shl
cmp
push
scas
jns
jg
mov
mov
stos
aad
push
jbe
jno
xchg
mov
sti
jge
jno
orb
lods
sub
fnsave
push
sub
jg
dec
clc
inc
lret
push
cmp
push
testb
add
in
icebp
sub
pop
cmp
xchg
shll
fwait
jmp
pusha
push
es
pop
mov
add
leave
xlat
or
test
jp
cmp
mov
fsts
sub
pop
es
push
in
lods
jo
cs
cli
jecxz
adc
fwait
lea
adc
add
or
ret
out
lret
and
cwtl
sbbw
mov
pusha
pop
nop
cmp
mov
mov
scas
in
lret
mov
cmp
dec
test
cmpsb
movsl
movsb
inc
out
mov
add
int
aas
lcall
in
xchg
out
aam
push
int
lods
push
in
fs
out
dec
or
push
sub
mov
popa
pop
shl
ss
sub
push
fidivrl
mov
adc
lea
arpl
cld
sbb
sbbb
xchg
into
mov
mov
jnp
fstl
push
push
cmp
cmc
lahf
jne
ds
mov
mov
dec
pop
jno
and
add
jb
daa
lahf
and
ljmp
jge
xor
enter
xlat
dec
mov
stos
pushf
cmpsl
hlt
sub
add
test
sbb
xor
mov
shlb
jb
fiadds
je
cmpsl
add
icebp
mov
pop
rcrb
stos
xlat
jmp
std
aaa
stos
dec
mov
das
jo
daa
sbb
adc
frstor
cmpsl
lods
lock
sbb
pop
push
xor
mov
mov
cmpl
enter
aam
shlb
test
jmp
push
jp
adcb
outsl
aas
nop
mov
enter
or
xchg
mov
pusha
mov
daa
pop
mov
cld
ret
iret
mov
aaa
xchg
sub
xchg
mov
pushf
mov
pop
cld
lahf
add
xchg
mov
xor
test
sub
mov
scas
test
sub
mov
pop
or
gs
mov
dec
je
push
aaa
inc
or
in
inc
or
dec
inc
mov
pop
movsb
dec
and
jmp
sub
push
fmul
imul
push
arpl
jle
bound
idiv
stos
sbb
adc
pop
out
or
iret
pop
repnz
scas
jns
fcoml
sub
add
out
js
ret
int
xstore-rng
cmpsl
addb
mov
sbb
mov
jbe
adc
rclb
xor
dec
ja
jl
je
xchg
cmp
testl
jmp
jp
subl
sbb
mov
lds
pop
inc
adc
hlt
aad
ds
outsl
cwtl
dec
icebp
inc
jmp
dec
data16
or
mov
sub
out
mov
movsl
pusha
add
loop
inc
popa
mov
int
enter
and
add
pop
lret
xchg
inc
cmpsl
xor
das
mov
mov
sbb
imul
or
mov
test
cmc
lret
mov
add
mov
js
cmp
dec
dec
sbb
test
xchg
cmp
cmp
dec
in
in
dec
pop
add
icebp
jbe
mov
es
mov
iret
je
pusha
rolb
or
pop
adc
out
pop
lock
pop
test
sub
mov
loope
enter
std
int3
push
push
or
ljmp
mov
xchg
imul
push
dec
stos
and
out
pop
mov
enter
xor
mov
mov
jae
adc
loopne
lret
lret
inc
inc
test
xchg
cld
xchg
movsl
jle
test
or
and
xor
ljmp
enter
jns
clc
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
es
dec
inc
aas
or
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
pop
call
call
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
outsb
add
add
add
add
add
add
add
add
jb,pn
popa
je
add
sahf
sbb
add
addb
add
add
loopne
add
add
cs
je
add
add
imul
add
add
add
add
inc
add
loopne
je
js
add
add
out
add
add
or
add
add
add
jb,pn
popa
je
add
test
add
add
or
add
mov
add
inc
add
loopne
fs
je
add
add
add
add
or
add
add
inc
add
loopne
add
dec
dec
dec
inc
inc
dec
pop
xor
add
add
pusha
call
lret
aad
ds
add
ja
add
adc
cld
stos
add
xor
ljmp
dec
push
jp
scas
mov
add
or
pushf
cltd
gs
sbb
add
sub
add
jmp
call
scas
xlat
add
xchg
addb
jnp
adc
shll
or
inc
pop
adc
test
add
or
dec
insb
sub
mov
outsb
test
pop
popa
mov
scas
mov
pop
inc
mov
and
je
iret
push
test
lods
mov
mov
icebp
mov
sub
push
lret
scas
nop
add
dec
mov
inc
jne
arpl
inc
pop
mov
and
adc
stos
pop
push
ja
xchg
mov
cmp
sub
sbb
test
stc
dec
or
or
call
mov
mov
push
or
mov
stos
jmp
js
mov
adc
inc
jp
sbb
lret
jge
inc
push
mov
inc
mov
loope
pop
scas
rclb
icebp
cld
movsl
inc
and
mov
dec
js
das
ret
jg
in
dec
out
sbb
inc
sbb
das
aaa
mov
or
imul
int
test
and
add
shrl
es
adc
lcall
xchg
mov
xor
or
adc
push
cmpsb
xor
push
mov
push
aam
cmp
repz
adc
sbb
xor
dec
addr16
mov
out
mov
mov
mov
push
adc
ss
inc
icebp
mov
xor
xchg
adc
sub
cmpsl
test
popf
mov
mov
inc
repnz
mov
dec
cmp
popa
push
sbb
mov
js
shrl
inc
shlb
scas
mov
mov
adc
imul
fwait
stos
mov
lock
das
xchg
push
insl
ja
inc
and
movsl
sbb
xabort
repz
out
and
or
jnp
xchg
int3
jno
xchg
imul
or
mov
mov
mov
jbe
xor
shrl
inc
cmp
jl
outsl
mov
int3
mov
push
mov
add
mov
or
jl
test
inc
add
dec
jne
clc
and
mov
push
adc
sub
sub
ret
aad
shlb
or
pop
cs
incb
hlt
or
cmpsl
push
mov
aas
stc
inc
std
inc
insb
mov
jbe
pusha
pop
pop
sbb
adc
pop
jo
dec
cli
lods
xchg
in
adc
and
cmp
aam
cmp
mov
sbb
sahf
and
jo
or
gs
jecxz
push
inc
lahf
shrl
das
je
aam
mov
adc
adc
popf
push
inc
inc
jnp
jb
imul
dec
mov
loop
cli
loopne
push
dec
out
push
and
mov
fs
jmp
sahf
add
loope
fs
gs
mov
loopne
int
pushf
or
imul
push
xor
cmc
pop
jae
mov
push
push
adcb
imul
xchg
mov
pop
jp
jbe
imulb
mov
sub
das
mov
jne
clc
inc
repz
jae
out
ficomps
popa
popf
repnz
roll
adc
movsb
sbb
insb
xchg
mov
xchg
cwtl
sbb
adc
dec
cmp
mov
push
jecxz
push
lods
rorl
mov
sub
or
fnsave
scas
jo
push
js
jecxz
push
inc
movsl
and
push
push
mov
mov
and
les
movsb
outsl
fmull
xor
jno
mov
lahf
popf
enter
inc
adc
adc
test
enter
jp
aas
mov
std
xchg
or
clc
lods
pop
add
push
fistpll
push
addr16
xor
stos
push
inc
xchg
xchg
or
cmpsb
xor
fdiv
xor
push
pusha
sub
mov
mov
dec
orl
cmpsb
inc
sbb
xchg
mov
std
push
cmpsb
xor
repz
mov
popa
jb
cmp
insl
jno
roll
aam
add
mov
lock
aas
loope
ss
or
mov
loop
mov
daa
xor
and
sub
mov
mov
lea
andb
popa
add
sub
mov
lods
push
mov
scas
xchg
adc
pop
cli
mov
les
ret
addr16
in
push
out
fdivrl
je
dec
inc
jae
dec
clc
iret
movsb
sbb
dec
popl
scas
fidivl
bound
call
pop
mov
mov
lcall
nop
out
push
stos
and
push
repz
pop
aad
xchg
push
adc
mov
inc
inc
rdtsc
jmp
xchg
js
pop
dec
lea
pushf
int
das
and
push
mov
data16
mov
and
add
lcall
movsb
push
popf
out
sbb
add
inc
das
sbb
fistps
aam
or
add
push
mov
add
push
or
je
xor
out
scas
icebp
mov
mov
stc
mov
clc
imul
mov
ds
lods
insl
fsubs
cmp
xor
add
dec
xor
xchg
dec
jg
sti
jo
orl
mov
adc
mov
cmp
jno
xchg
sub
jo
cmp
adc
daa
sbb
call
and
mov
sbb
rol
loop
xor
push
test
inc
test
jge
xchg
mov
add
addb
adc
or
insl
lret
arpl
inc
roll
adc
push
and
pop
sahf
xchg
out
iret
ss
sub
stc
fisttpll
int
inc
adc
push
mov
jecxz
mov
pop
sub
xchg
jne
cmp
shlb
cmp
test
pop
in
jecxz
int
insl
out
pop
dec
es
dec
adc
lea
insl
insl
fmuls
push
add
int
test
bound
adc
mov
inc
push
aad
push
int
jmp
xor
sbb
xchg
inc
addr16
imul
add
sub
xchg
lret
icebp
add
push
iret
in
pop
lret
pop
aam
cwtl
xor
cmp
jnp
bound
adc
mov
cld
ds
cmp
les
das
push
fistpll
mov
jns
or
idiv
jle
insl
dec
sub
pusha
xlat
ja
sub
dec
sbb
insb
shlb
std
fimull
shlb
cwtl
filds
es
ret
push
push
insb
mov
mov
fs
idivb
sbbl
js
shll
scas
inc
in
int
push
jl
sub
mov
popf
outsb
mov
shll
adc
lds
push
ds
mov
ficomps
sbb
mov
bound
pop
and
push
lds
or
mov
push
jmp
xor
and
outsb
lods
in
xchg
in
jnp
or
mov
dec
pushf
adc
mov
insb
test
adc
mov
mov
dec
or
and
in
std
add
jmp
outsl
adc
in
jle
mov
adc
mov
xchg
dec
xchg
dec
mov
dec
cmp
and
mov
ret
cmp
push
or
fucomp
lods
add
fistps
daa
push
ret
into
repnz
pop
mov
inc
rcrl
xchg
lods
ret
and
arpl
inc
or
or
inc
jo
add
leave
jecxz
push
pop
push
loopne
or
dec
cmp
cmp
jae
data16
inc
inc
push
and
leave
pop
ret
outsl
or
or
adc
mov
adc
clc
lea
and
imul
inc
push
incb
mov
jl
mov
add
scas
sarl
ds
nop
and
mov
inc
std
ret
and
mov
jmp
sub
jp
add
int3
popa
popa
outsb
mov
or
mov
jmp
mov
jge
imul
cli
inc
xchg
ret
fwait
popa
outsl
push
pop
cs
inc
dec
push
cs
push
push
negl
mov
js
dec
adc
das
clc
insl
cmpsl
mov
mov
roll
mov
mov
bound
ds
jns
aaa
jmp
rolb
dec
jno
pop
incl
sub
div
pop
mov
hlt
das
inc
movsb
cbtw
mov
inc
mov
mov
test
add
sub
ljmp
sub
jno
mov
mov
pop
mov
jmp
or
add
mov
test
push
adc
sbb
rcr
fists
adc
xor
mov
sar
mov
in
jns
stos
aas
mov
add
gs
cwtl
sub
xchg
xchg
push
rclb
loopne
call
fisubl
sbb
pop
inc
sub
mov
aam
xchg
gs
jnp
lcall
sub
mov
out
add
inc
loope
out
mov
aam
mov
adc
lds
or
push
sbb
test
cmp
shll
inc
push
xchg
sub
adc
ffreep
sbb
xchg
mov
ss
xor
nop
in
test
adc
mov
and
decb
mov
dec
xlat
fbstp
xchg
xor
or
mov
int
push
imull
addb
repz
xchg
cmp
cld
fcomp
cld
out
pop
aaa
scas
pop
ja
mov
aad
ja
lret
mov
and
mov
iret
sbb
stos
mulb
sahf
mov
lds
add
movsl
lret
add
shlb
orl
jg
fldpi
int3
adc
outsl
sub
pop
rcll
or
ds
pop
inc
dec
ljmp
mov
mov
or
jg
xchg
loope
sub
cmpsl
or
es
loop
xchg
idivl
xor
dec
inc
sub
add
mov
das
das
data16
jmp
xor
push
ja
pop
inc
cli
fs
fisttpl
dec
jns
or
inc
and
roll
jne
fwait
repnz
ret
and
testb
inc
int3
mov
ret
outsb
or
push
das
scas
je
out
scas
mov
dec
mov
sbb
lods
cmp
sti
movsb
iret
adc
mov
loope
sbb
andl
push
xor
je
xor
sahf
sbb
movsb
dec
sarb
aas
sbb
cmp
mov
repnz
mov
dec
mov
xor
xor
inc
fisttpl
xchg
pop
or
push
push
out
mov
add
cmpsb
mov
mov
mov
addl
xor
add
xchg
int3
pop
cmp
push
xchg
mov
jp
xchg
jecxz
jl
xchg
int
je
ret
push
adc
cmp
dec
mov
fbld
pop
add
in
pushf
arpl
push
push
loope
test
push
mov
out
push
lcall
jmp
inc
or
mov
insb
repz
jmp
fcoms
sbb
sbb
cld
or
addr16
fs
pusha
imull
adcb
mov
stos
xor
loop
mov
rolb
in
xchg
mov
xor
sbb
and
mov
push
xchg
and
cmovp
xchg
pop
mov
push
mov
test
stc
gs
fyl2xp1
test
loop
ja
inc
das
sbb
leave
dec
mov
scas
jb
push
inc
int
iret
nop
adc
adc
es
inc
inc
shl
push
popa
pop
mov
or
mov
pop
inc
mov
iret
jnp
imul
inc
and
push
xor
ret
add
mov
arpl
addr16
pop
mov
dec
neg
lret
lcall
fdivs
mov
add
ficoms
ss
and
das
bound
inc
flds
hlt
ret
bound
hlt
and
gs
mov
stos
mov
adc
mov
sub
fs
adc
fnstsw
push
jnp
loop
in
mov
gs
cmp
cmpsl
sbb
cmc
cli
dec
scas
in
std
mov
mov
pop
mov
xchg
jbe
push
push
jno
push
dec
not
outsl
mov
leave
mov
icebp
adc
shlb
subb
xchg
adc
test
or
mov
xchg
sub
mov
adc
fdivrp
or
adc
pop
repz
adc
sub
push
fsubrs
cmp
push
mov
adcl
ret
ja
mov
add
xlat
xchg
dec
or
mov
sbbb
mov
icebp
or
loop
mov
and
cmp
sub
dec
xor
xchg
pop
or
popa
pop
es
into
mov
ucomiss
dec
fisubrl
in
mov
fs
aam
or
int
icebp
xlat
iret
into
xor
mov
loop
dec
loope
das
ds
outsl
js
xlat
popa
cmp
xlat
pop
mov
cmp
stos
cwtl
xchg
ret
loope
inc
mov
popa
xchg
sub
adc
clc
out
dec
cwtl
pop
xchg
xorl
jle
dec
xor
dec
mov
mov
push
xor
lret
shll
popf
es
loopne
bnd
fmul
push
cmp
lret
xchg
push
outsl
js
mov
pop
mov
or
aas
lods
add
cwtl
mov
jl
cwtl
imul
cmpsl
addb
pop
mov
pop
mov
mov
xchg
jg
push
jno
jg
jge
and
test
dec
jo
dec
lods
mov
pop
or
pop
cmp
adc
negb
mov
pop
mov
iret
ljmp
bound
stos
sti
push
mov
std
push
inc
xchg
scas
mov
mov
sub
add
mov
or
xchg
inc
jmp
xchg
dec
mov
xor
ss
icebp
push
sbb
in
ja
call
jp
enter
cmp
lock
mov
inc
ljmp
adc
xchg
jp
es
fdivrs
loopne
sub
ss
or
iret
add
adc
mov
insb
sub
imul
mov
dec
cwtl
ss
fdivrp
je
nop
das
cmp
adc
ss
shlb
add
lahf
rolb
mov
fbstp
or
aas
rcl
outsb
jg
and
jb
rclb
xchg
push
movsb
hlt
shrl
out
pushf
call
xchg
mov
add
dec
in
cmp
push
fwait
dec
add
xchg
adc
data16
mov
mov
and
sbbl
ss
sbb
inc
out
daa
imul
and
jne
lret
cmpsb
mov
mov
out
lahf
fistpll
push
mov
jnp
adc
imul
clc
test
xorl
sbb
push
cwtl
mov
mov
ja
adc
das
adc
sarb
lea
sbb
pusha
jp
aas
in
add
pop
adc
pop
mov
es
and
or
sbb
pop
jg
std
jl
add
xchg
mov
fidivrl
aaa
xchg
mov
fnstsw
xchg
daa
and
jno
js
movsl
bound
jl
ret
loope
mov
or
sub
sub
aad
lret
cmp
or
ss
fxch
jl
pusha
or
ds
mov
push
and
pop
mov
and
pop
add
inc
add
xchg
cmp
in
cmp
pop
insb
cld
and
xchg
ret
push
pop
dec
leave
sub
push
jge
xchg
insb
adc
int
fs
jmp
mov
mov
aaa
add
leave
sub
imul
in
pop
push
adc
aas
push
mov
push
stc
and
cmp
icebp
adc
stos
mov
mov
or
jbe
repnz
test
mov
adc
decl
rolb
jg
in
and
fbstp
insb
shlb
test
fmul
dec
mov
sbb
cmp
movsb
push
pop
sub
in
pushf
fisubrl
or
sbb
in
test
loope
or
jle
xorl
jae
stos
dec
sbb
orl
insl
jecxz
jle
adc
repz
pop
lock
pop
mov
int3
out
pop
sub
scas
mov
out
rcrb
xchg
test
adc
mov
sbb
inc
pop
cwtl
and
adc
push
sub
scas
mov
ja
ror
sbb
repnz
xor
cmpsl
mov
mov
cmp
mov
ja
or
stos
ss
jmp
mov
out
xor
insl
cmp
repz
lea
or
mov
jnp
movsl
mov
mov
fimuls
inc
jp
and
rcl
out
mov
sbb
xor
nop
shlb
mov
loop
mov
jmp
mov
sbb
xor
jge
sbb
shll
push
mov
addr16
mov
scas
and
xlat
fcmovb
cld
imul
fcmovu
lret
jbe
dec
push
cld
lahf
xchg
movsl
xor
mov
push
test
test
scas
sub
shll
and
push
inc
imul
add
std
gs
hlt
xchg
dec
push
aad
and
fs
int3
push
adc
enter
adc
or
xchg
mov
daa
imul
mov
movsl
sbb
xor
adcb
mov
cmpsl
leave
sarb
stos
jno
or
fsubl
nop
xlat
dec
jp
inc
sarl
aam
dec
fldt
in
lock
adc
out
mov
mov
decb
jnp
scas
lds
cmp
nop
mov
dec
in
jae
inc
ret
aas
jb
cltd
mov
imul
cld
pop
cs
mov
imul
dec
popa
mov
cwtl
adc
movsl
inc
cwtl
sbb
inc
inc
popf
aam
fisubs
xchg
fstpt
call
or
or
mov
push
shl
inc
stos
fldcw
sub
dec
aas
fs
push
ror
insl
call
mov
repz
cmp
adc
sti
in
xor
mov
ror
xor
and
mov
xchg
outsl
jge
pop
mull
inc
ljmp
jle
mov
push
inc
sbb
mov
push
bound
cmp
jne
pop
mov
mov
xchg
xor
lea
mov
push
or
pop
loop
push
mov
fsts
jnp
inc
cmpsb
adcl
push
inc
and
jns
adc
popf
nop
sbb
daa
push
adc
fisubrl
jp
sahf
sbb
loopne
popf
pop
ret
and
pop
jp
mov
sbb
fnstsw
gs
imul
jae
imul
iret
sub
cmp
jmp
sub
mov
stos
jmp
mov
cmp
aaa
add
int3
sub
cltd
and
adc
and
outsb
cmc
pop
mov
mov
mov
inc
scas
mov
mov
std
mov
idivb
add
push
inc
js
push
and
mov
pop
icebp
insb
mov
fisttps
imul
jl
ret
insl
lods
pop
pop
dec
xchg
roll
mov
sahf
vunpckhpd
jns
cs
and
cwtl
insl
mov
push
cltd
mov
in
sub
add
pop
arpl
fidivrl
mov
jb
pop
dec
cmp
inc
lods
mov
loope
xchg
push
test
inc
pop
setne
cwtl
dec
mov
adc
lcall
arpl
inc
mov
repz
hlt
add
xchg
fsubrl
or
inc
xchg
negl
test
arpl
add
les
adc
xor
jp
mov
cld
pop
jno
inc
cli
inc
fsubp
ljmp
mov
mov
cmpsl
sbb
xor
or
xor
shll
test
ret
jge
adc
js
xchg
xlat
je
dec
jno
popf
into
sti
adc
outsb
lretw
jns
daa
nop
xchg
push
add
scas
mov
inc
idivb
cmpsl
cmc
pusha
adcb
pusha
aad
jne
out
fcomp
test
or
mov
std
and
and
inc
push
fwait
mov
xchg
or
push
fdivr
popl
repz
or
aaa
push
out
pusha
mov
rorb
xchg
push
push
das
dec
jno
fstps
iret
xor
cltd
out
adc
pushf
out
and
jo
outsb
pop
mov
mov
inc
insb
stos
stc
ds
repnz
push
cmpsl
cs
inc
ds
in
cmpl
pushf
dec
lods
jnp
adc
movsl
out
sti
rolb
sbb
jbe
push
xor
ror
sbb
nop
mov
enter
cwtl
daa
gs
movsl
mov
insb
adc
cld
mov
and
outsb
mov
mov
adc
inc
arpl
inc
jnp
ret
xchg
cs
sub
push
sbb
pop
into
enter
cld
daa
xchg
js
cmp
shl
ss
inc
inc
xchg
jne
outsl
mov
fs
inc
iret
or
test
cld
mov
push
jnp
mov
push
xor
xor
inc
xor
mov
adc
into
add
push
in
add
mov
pop
push
xchg
jecxz
lods
jae
mov
ja
jb
xchg
jecxz
or
xchg
fstps
mov
rcrl
adc
ret
push
sbb
stos
xchg
dec
jle
jg
dec
insb
xchg
mov
aam
sub
fnstcw
jp
xor
and
sbb
xlat
inc
fsubrl
repz
adc
adc
or
xor
popf
and
and
movsb
pop
mov
lods
int3
xor
sarl
jg
in
and
mov
scas
lret
lretw
jne
mov
inc
cmp
fcomi
dec
fldl
cmpb
int3
ds
out
add
jge
mov
stos
rcr
mov
mov
or
pop
sub
jmp
pop
mov
fwait
add
pop
fidivl
inc
out
repnz
sahf
lahf
lea
icebp
je
je
sub
pop
jb
push
shrb
xor
adc
addr16
scas
sbb
jle
andb
xor
scas
hlt
pop
lods
dec
adc
ljmp
mov
inc
jae
fidivl
les
xchg
in
adc
xor
pop
dec
mov
xor
inc
inc
in
sbb
and
repnz
ss
jns
mov
into
or
push
shr
inc
cmp
adc
xchg
mov
xchg
stos
fmull
adc
aad
imul
es
adc
les
xchg
add
lret
jle
xchg
es
jmp
jle
rcll
cltd
push
push
pop
mov
xorl
pop
clc
sub
cmp
andb
cmp
fstpl
mov
jmp
ret
mov
test
shll
popa
sbb
xchg
shrl
gs
adc
xchg
rcrb
int
push
test
xchg
lahf
out
cld
into
or
and
icebp
xor
inc
fadd
pop
pop
dec
cmp
push
loop
xchg
push
call
inc
cmpsb
cmpsl
fstl
in
push
mov
dec
mov
mov
mov
repz
fisttps
dec
orl
and
imul
loopne
add
repnz
ret
push
push
sub
and
mov
outsl
mov
fistpl
lock
int
in
xor
pop
lret
pop
imul
roll
out
int3
or
push
xor
sbb
mov
pop
dec
call
and
mov
jg
out
jl
ja
addr16
stos
lods
add
push
popf
lahf
push
jp
into
xor
xor
dec
mov
pop
aam
and
hlt
add
clc
int
arpl
rorb
cmp
jno
outsb
clc
subl
lret
add
cld
ss
jne
incb
mov
sub
add
fcompl
arpl
jmp
push
sub
into
lret
sub
push
add
out
adc
test
dec
sbb
pop
dec
das
jg
pop
sbb
adc
test
xchg
jmp
xor
xor
dec
mov
pop
divb
mulb
fldcw
pop
mov
jmp
insl
pop
xor
xor
cld
fiaddl
imulb
cwtl
in
add
popf
lahf
test
in
add
repz
pushf
orb
mov
xor
shll
cmpsb
rcr
in
or
js
pushf
push
pop
cmp
mov
loopne
mov
call
clc
mov
mov
cmpsl
mov
dec
jmp
iret
sub
xor
sahf
cld
in
adc
js
int
cmp
pop
push
lods
arpl
pop
hlt
je
rcll
mov
and
jne
cmp
outsl
xlat
aaa
daa
and
std
cmp
mov
mov
inc
cwtl
sahf
outsb
adc
sub
data16
pop
mov
mov
ret
cs
sub
dec
or
cld
adc
repz
int
jl
js
or
lods
fwait
and
push
mov
mov
mov
adc
adc
lods
call
sub
cli
pusha
push
dec
jno
in
andb
adc
mov
pop
dec
mov
cmpsb
lods
rorl
sub
out
mov
andl
ds
cmp
pop
std
stc
rcrl
pop
add
out
mov
cli
jmp
pop
fcmovb
in
or
push
cmp
mov
add
shl
fadd
sub
and
xchg
mov
pop
mov
mov
dec
pop
add
sbb
cmp
cmpsl
pop
movups
repz
mov
adc
in
daa
pop
loope
pop
or
xor
repz
push
test
pop
cwtl
daa
and
aad
stc
xor
adc
imul
imul
mov
mov
insb
push
out
leave
cmpsl
sub
ret
sub
jae
lfs
xor
in
ja
cmp
outsb
cmp
jmp
repnz
in
in
mov
sbb
int
adc
shll
pop
or
xchg
inc
aas
mov
das
mov
xor
lahf
aam
mov
lahf
pop
add
loope
sbb
or
cwtl
xchg
sub
push
iret
faddp
push
or
movl
jno
ljmp
add
cld
dec
dec
shr
push
mov
jbe
movsl
mov
mov
jp
clc
xchg
push
fs
mov
adc
das
nop
dec
add
jne
jmp
push
arpl
in
jns
clc
jbe
inc
xor
mov
jge
aaa
dec
cmp
test
jae
push
lahf
fists
xchg
std
pop
xor
mov
rclb
cli
push
arpl
xchg
in
sahf
fstp
out
add
andb
ret
push
adc
jge
xchg
add
out
cmpsb
cs
pop
jle
sar
test
jle
loope
add
jo
loop
in
xlat
xor
inc
xor
lods
xchg
sub
push
jae
or
cmp
dec
daa
fiaddl
data16
sub
push
pop
mov
int
lret
pop
sub
ret
cltd
ja
jmp
aam
sbb
aam
mov
sub
add
mov
push
or
mov
sbb
mov
test
mov
adc
lcall
cmp
fnsave
test
cmp
mov
pop
cmp
das
hlt
jo
sub
add
call
pop
fsubl
and
add
inc
lods
push
adc
into
shll
pop
pop
sti
aam
decl
push
push
lcall
dec
imul
popa
js
dec
lock
test
das
mov
ja
dec
dec
mov
pop
fildll
mov
add
or
leave
push
pusha
push
das
cmp
aaa
and
xor
cmpsl
adc
inc
sbb
or
or
xor
mov
push
jg
js
test
data16
mov
pop
cli
test
call
iret
fisubrs
xchg
sbb
dec
push
pop
lods
sarb
pop
push
jnp
mov
push
mov
adc
fisubs
sbb
lods
mov
lds
xor
cmp
mov
sahf
nop
dec
sub
outsl
pop
mov
and
mov
ret
push
and
jbe,pt
mov
orl
addb
ljmp
push
pop
xchg
xor
cmc
aas
stc
adc
or
pop
insl
push
cmp
jmp
out
inc
push
mov
jg
inc
pop
loopne
jae
xchg
in
int3
xor
mov
adc
imul
loop
cltd
add
pop
xlat
data16
jl
cltd
pop
pop
out
xchg
rorl
movsl
and
cmpsl
mov
sub
cmp
mov
push
stc
xchg
mov
add
mov
stc
xchg
mov
int3
push
or
mov
jle
lret
xchg
push
out
cmc
lahf
outsb
aas
stc
fbstp
lds
sbb
mov
inc
cwtl
xor
mov
loop
ds
xor
push
iret
push
xchg
inc
int
and
sub
xchg
xchg
iret
fldl
in
loopne
adc
popf
inc
cmp
popf
les
fisttps
lods
cltd
out
mov
xchg
js
ss
push
pusha
cli
pop
outsl
movsb
loopne
insb
push
mov
jle
push
inc
adc
xor
sub
pop
add
cmp
loope
push
mov
xchg
add
add
icebp
shll
je
sbb
jg
add
mov
jmp
repnz
xchg
adc
sbb
out
jne
inc
pop
jmp
sub
pop
cwtl
rcll
test
cmp
call
popa
scas
test
push
aas
inc
xchg
push
push
addr16
cmp
pusha
xchg
add
lea
jae
dec
cs
loope
mov
out
loopne
push
xor
int3
leave
pcmpeqd
popf
int3
daa
test
mov
je
mov
xorl
xchg
out
sbb
jnp
lahf
repz
push
insl
pusha
rcr
mov
push
sbb
adc
lods
sub
ljmp
jl
inc
mov
mov
subl
jns
test
fsubrl
xor
inc
mov
outsl
add
cmpl
inc
lret
dec
push
icebp
cmpsl
lods
sarl
xchg
push
jecxz
popf
mov
into
ljmp
jns
push
fwait
add
jle
pop
cmp
jmp
iret
lea
mov
and
and
mov
pop
das
stc
pusha
pop
cmp
mov
mov
test
cmp
imul
or
rorb
mov
movsl
out
pop
sar
pop
dec
and
pushf
jecxz
in
andb
movsl
mov
lods
daa
nop
push
movsb
mov
cs
inc
loope
icebp
dec
add
and
clc
mov
or
pop
mov
dec
out
out
fwait
push
ds
sbb
jg
add
fildll
stos
out
lods
mov
jbe
and
shll
out
lret
sub
sti
or
pop
hlt
add
jne
dec
pop
movb
add
sbb
enter
jb
sub
add
jge
and
adc
fiadds
sbb
nop
or
fs
jge
lods
movsl
sub
add
mov
lods
sub
dec
xor
sti
cmc
inc
into
mov
mov
dec
add
stc
sub
pop
jne
gs
clc
push
xor
xchg
cmpsl
mov
push
push
sbb
mov
jle
cli
daa
adc
out
cli
rolb
les
sbb
ds
outsl
aas
dec
popf
fsub
dec
and
int3
ss
xchg
push
xor
xor
push
les
inc
loopnew
sub
pop
loope
jecxz
jo
push
push
jbe
or
cmp
push
mov
xchg
lcall
rcrb
mov
lcall
pop
sbb
fsubl
push
imul
xor
jae
popa
mov
sbb
dec
xchg
and
pop
add
and
jb
push
dec
mov
inc
and
popa
adc
cmp
lods
into
cmpsl
arpl
loopne
cmp
jge
xchg
mov
das
xor
mov
and
xchg
push
insb
push
mov
movsl
and
imull
push
adc
ljmp
inc
mov
cmp
pop
mov
rcll
mov
xlat
sbb
ljmp
daa
imul
pop
push
insb
push
jp
sub
fbstp
leave
les
fisubl
mov
clc
and
mov
xor
out
and
out
xchg
rcl
loop
jle
ljmp
nop
mov
mov
aas
lret
push
roll
stc
ret
cwtl
adc
roll
mov
adc
mov
mov
int3
decl
xor
dec
xor
les
mov
xchg
call
pop
mov
lds
and
std
cmc
push
fwait
xor
les
lahf
dec
je
jb
jge
xor
mov
scas
sar
outsl
repnz
mov
shll
jle
dec
cmpb
cmp
ret
or
fwait
add
lret
push
sbb
andb
mov
out
pop
imul
sti
lods
push
loop
xor
sbb
inc
imul
sbb
lds
mov
fsubr
fimull
sbb
mov
pop
mov
add
outsb
nop
stos
cli
add
jns
jg
pusha
add
xor
xor
mov
xchg
nop
into
cmpsb
ret
xor
scas
mov
cmp
add
dec
sbb
push
inc
xchg
lods
hlt
pushf
mov
jbe
mov
lcall
adc
sbb
inc
or
int3
mov
and
out
in
gs
idivl
and
push
test
pop
rcll
lcall
sahf
dec
sub
dec
mov
jecxz
testl
cmp
loopne
sub
push
mov
hlt
dec
mov
in
in
out
hlt
dec
movsl
jl
adc
fcomi
ja
mov
or
xchg
push
push
fildl
push
xor
iret
xor
and
call
push
icebp
insl
sldt
in
pop
arpl
and
hlt
ss
jnp
repz
lods
in
jo
mov
fstpt
aaa
mov
cmc
push
sub
scas
test
xchg
repz
bnd
mov
in
dec
bound
jnp
jmp
sub
pop
lcall
pop
int
aam
mov
je
sub
mov
mov
lahf
push
or
cmp
pop
mov
jecxz
adc
sbb
add
fdivs
sub
lret
in
fists
jl
push
dec
or
pop
jb
lods
add
shll
inc
or
ja
pop
lahf
cmp
push
jae
jg
xor
xor
xchg
lds
pop
inc
mov
sbb
outsl
sbb
aam
enter
cmpsb
scas
xlat
pop
in
js
fidivrs
mov
stos
pop
fmuls
cmp
pop
ja
cmp
shlb
fldt
push
cmpsl
and
xchg
xchg
iret
jp
stos
and
sbb
adc
gs
mov
scas
incl
jnp
xchg
push
mov
xorl
fwait
nop
sbb
fmuls
pop
loope
mov
jle
xlat
or
sbb
or
and
cmc
sti
jno
rclb
das
mov
dec
dec
iret
lds
push
repz
test
pop
or
cld
xchg
jp
iret
mov
fimull
cltd
xchg
mov
and
sbbl
into
add
cmp
mov
xor
add
cmp
pop
popf
aas
lock
xchg
divb
outsl
shl
mov
sub
sub
cmp
jne
adc
ret
or
jns
decb
into
pop
xchg
xchg
icebp
add
je
imul
adcb
pop
pop
ret
in
jbe
subl
mov
loop
movsl
fwait
xor
je
jmp
mov
dec
pusha
or
aam
mov
ret
pop
dec
rorb
out
sub
add
loope
fstl
ss
dec
outsl
aad
fwait
pop
jle
xchg
fmull
lods
aas
lahf
add
mov
stos
lock
mov
pop
sbb
mov
ja
dec
cmc
andl
push
mov
mov
into
loope
setno
ret
xchg
testb
add
jno
mov
push
cmpl
pop
pushf
call
dec
aam
clc
or
gs
faddp
das
inc
jmp
or
in
adc
mov
fistpll
add
mov
adc
stos
loope
cmc
sbb
ljmp
sbb
push
imul
push
push
call
push
lahf
xchg
pop
mov
xchg
shl
les
adc
dec
push
test
call
sub
iret
mov
dec
cwtl
stos
cltd
fcoml
outsl
into
jecxz
aaa
test
jl,pt
inc
stc
leave
lret
adc
addb
loopne
cmpsl
pop
ret
xchg
ss
push
pop
add
and
lods
test
cmpsb
push
pop
adc
pop
pushf
pop
psllw
mov
hlt
dec
fsubp
xor
jl
int3
ljmp
aad
xor
or
xchg
decb
or
aaa
test
ja
mov
lret
aaa
pop
or
add
fwait
addr16
pop
add
mov
ret
and
and
and
xor
data16
sbb
or
cmpsb
and
in
adc
sub
jle
lcall
into
cli
cwtl
stos
mov
push
cmpsb
sub
flds
cmp
inc
or
test
mov
add
call
clc
dec
outsl
xor
int
cwtl
in
mov
mov
lds
inc
xor
daa
add
out
rorl
pop
add
daa
pop
scas
jns
out
fstpl
loop
cwtl
sbb
out
sbb
xchg
mulb
mov
push
xor
sub
sarl
out
rolb
add
scas
cmpsl
or
sbb
fcomps
adc
ds
and
mov
cld
nop
ja,pt
inc
mov
xlat
lds
lds
push
in
leave
xor
pusha
out
popf
xor
outsl
in
xor
in
jge
sub
movb
push
adc
cmpl
gs
mov
arpl
dec
dec
aas
mov
jecxz
not
fistl
cmpsb
xchg
das
sub
sbb
loop
fadd
pop
xor
dec
pop
and
xor
fstps
lret
cwtl
test
adc
loopne,pn
leave
and
xor
loopne
mov
and
dec
xorl
jno
add
push
mov
push
jae
clc
xchg
jns
jns
mov
xchg
or
adc
jo
or
rcll
insb
aad
cmp
mov
movsl
cwtl
inc
movsl
fdivs
add
fldt
inc
inc
nop
movsl
fiaddl
sub
lcall
adc
js
enter
hlt
dec
mov
mov
cmpsl
in
cmp
insl
adc
push
repz
xchg
xchg
pop
mov
fwait
je
les
pop
sbb
fs
aam
int3
stos
sub
sbb
xchg
ret
push
add
or
lret
jo
mov
cmp
in
push
into
mov
pop
loopne
cs
cmp
mov
xor
jbe
xchg
pop
leave
cltd
pop
xchg
pop
iret
or
xchg
or
mov
or
sub
stos
std
stos
sahf
jae
cmp
add
rcrb
jle
dec
jo
rcrl
popa
inc
movsb
mov
cmp
int3
inc
lods
mov
mov
cmpsl
das
jbe
ss
insl
add
sbb
fcompl
pop
aad
ss
in
loope
pop
sbb
xor
xlat
pop
enter
xchg
sbb
xchg
jnp
ja
add
jnp
cmp
test
xor
mov
imul
rcrl
pop
cmp
into
imulb
mov
sub
clc
test
insl
jge
repnz
or
sbb
hlt
add
js
jb
push
dec
arpl
out
push
cld
int
add
sub
rcr
cmp
repz
jg
movsb
xchg
cmp
cmp
roll
hlt
test
jl
mov
ret
xchg
hlt
sbb
bound
xor
sbb
mov
jae
xchg
arpl
inc
xchg
mov
cmpsl
mov
pusha
aam
inc
pop
mov
int
lahf
daa
in
lahf
pop
lret
xor
out
out
insl
lahf
and
fdivl
add
adc
jg
aad
iret
and
pop
xchg
xchg
and
movsb
loope
mov
out
xchg
sti
mov
pushf
jae
std
iret
out
sbb
insl
xchg
mov
lret
xor
dec
out
cs
xor
xchg
pop
sahf
loopne
jge
adc
sbb
fildl
test
add
mov
mov
pop
sub
and
fdivr
sub
fwait
scas
fs
sub
rcrb
cmp
add
das
dec
xchg
jg
movsl
inc
jne
jp
cltd
cmp
or
xchg
not
mov
and
mov
jle
xchg
or
std
shl
movsl
inc
jne
push
sub
scas
add
and
sarb
xor
xchg
out
repz
movsl
sbb
roll
idivl
mov
mov
movsb
or
in
fdivrs
outsb
leave
fisttpl
popa
dec
pop
nop
mov
rcl
lcall
cld
movsb
pop
and
push
leave
leave
sub
outsl
mov
pop
popa
test
jg
add
cmp
das
js
sbb
sbb
aas
cmp
sub
pop
jne
iret
jle
test
clc
xchg
add
sub
bnd
imul
adc
shrl
push
clc
or
in
andb
or
sbb
std
push
pushf
jle
sub
sub
test
jl
aaa
or
pop
cmp
lret
xchg
loop
add
insl
dec
or
outsl
aaa
inc
mov
in
daa
mov
nop
mov
xchg
xor
insl
pop
adc
cmp
sub
mov
add
in
movsb
push
add
lahf
mov
mov
shrl
push
hlt
je
push
scas
inc
adc
xor
add
jb
jns
mov
pop
mov
sub
mov
xor
pop
dec
dec
and
adc
or
add
pop
movsb
pop
jns
dec
sbb
pop
mov
imul
out
xlat
andl
add
xor
sub
ja
cwtl
xchg
fists
xor
mov
lds
repnz
pop
mov
pop
std
and
xchg
sub
mov
lcall
aam
sub
jmp
pushf
fsubrs
daa
clc
jae
add
shl
icebp
mov
xchg
addr16
lods
lret
dec
mov
inc
int
mov
imul
mov
insl
stos
jbe
loop
inc
cltd
mov
fidivl
movsl
fcomps
into
pop
lds
paddb
callw
fwait
test
sbb
mov
inc
sbb
sub
dec
iret
dec
lahf
mov
xchg
or
es
rcl
cmp
aam
jo
push
and
int
fs
inc
test
adc
dec
or
pop
mov
push
rorb
roll
movsb
movb
xorl
mov
mul
lret
pop
dec
ja
mov
xchg
into
ss
popa
push
cmp
outsl
je
ds
inc
dec
mov
jo
aam
icebp
popa
in
dec
add
xchg
cmc
mov
xor
xor
pop
loopne
jle
shr
stc
lahf
cmpsb
cmp
in
or
lock
jle
xor
outsl
cmc
ja
movsb
xlat
out
fmull
call
out
subl
lods
loop
jb
mov
cmp
mov
push
sub
out
push
pop
scas
pop
clc
jle
mov
sbbb
xor
loop
mov
pop
hlt
dec
sbb
xchg
sbb
mov
dec
int
in
icebp
das
into
cmp
mov
imul
movsb
push
push
mov
into
jle
sub
sar
mov
scas
or
add
cld
push
testb
loopne
addr16
add
pop
add
add
loopne
adc
test
faddl
andl
dec
or
daa
or
sub
shrl
fcoml
mov
repz
test
fwait
xchg
jnp
out
xor
mov
aaa
ficompl
fdivl
sbb
test
add
xchg
mov
test
sar
dec
rcrb
lods
adc
sbb
sbb
mov
inc
adc
inc
mov
hlt
inc
dec
hlt
xchg
mov
int
sahf
inc
fdivs
orb
and
mov
icebp
fwait
push
mov
push
arpl
psraw
mov
and
cmp
in
mov
dec
flds
fstps
in
dec
adc
pop
mov
sbb
push
pop
pop
mov
popa
sbbb
not
or
icebp
pushf
cmp
or
ret
or
mov
pop
je
jmp
xchg
test
orl
jnp
in
mov
and
subl
cs
mov
inc
popa
dec
adc
lods
xor
push
dec
dec
mov
adc
pop
dec
outsl
jl
pop
and
sti
aam
or
pop
ja
clc
movsb
movsb
sbb
adc
icebp
jo
jnp
cmc
add
cmp
mov
or
push
inc
lret
mov
pop
or
jle
sbb
daa
add
arpl
fnsave
xchg
scas
cmp
adc
pushf
and
mov
lock
jae
ret
add
insl
in
inc
pop
insb
movsl
lods
mov
fnstsw
in
mov
mov
addb
mov
push
inc
jge
bswap
push
mov
pop
mov
dec
pusha
xchg
or
leave
adc
mov
and
lea
push
scas
lock
jmp
lock
loope
dec
aaa
xor
icebp
test
sub
mov
test
push
mov
and
je
inc
pop
mov
xor
push
les
arpl
std
movsl
sar
stos
jnp
outsl
hlt
scas
ss
pop
sub
shlb
and
xchg
outsl
fs
mov
sar
mov
push
mov
test
fwait
stos
pop
push
inc
mov
add
pop
push
jnp
xor
jp
repnz
ss
test
push
mov
inc
xor
xor
test
xor
out
imul
or
mov
xor
pop
clc
fisubs
push
js
or
fidivl
inc
xor
and
inc
lods
pop
dec
jg
mov
mov
push
cmc
mov
or
adc
stos
pushf
out
push
les
mov
sbb
cmp
cld
cld
aas
shll
sbb
mov
loope
xchg
xchg
mov
xchg
jle
pushf
rol
cs
xchg
push
fcomi
lock
and
lret
cwtl
insb
cld
repnz
and
push
lds
jae
lods
xchg
mov
fldenv
inc
pusha
lcall
jmp
imul
xchg
lret
cmpsl
cmp
bound
xchg
shrb
rcl
test
xchg
shll
pop
jo
xchg
add
out
ljmp
jno
add
jnp
push
adc
call
add
fcompl
mov
sub
insl
sbb
pop
mov
jecxz
mov
pop
xorl
push
ret
pushf
mov
add
mov
ljmp
les
jge
pop
loopne
ljmp
or
int3
movsb
pop
bound
xchg
outsb
pop
ds
out
int
pop
cmc
dec
sbb
mov
repz
xchg
rcr
mov
xchg
idivb
sub
adc
outsl
out
cmpsb
bound
daa
add
outsl
iret
pop
pop
js
nop
inc
fistl
xor
sub
pop
data16
jne
shll
xorl
loope
mov
cmp
in
push
imul
pop
cs
cs
sbb
xchg
sbb
test
sbb
movups
cmc
xchg
mov
gs
in
push
in
outsl
lcall
mov
mov
xor
jb
adc
pushf
imul
jns
jmp
jo
les
jb
inc
sub
int
roll
arpl
lock
decl
adc
pop
jg
push
cmp
mov
add
cmpl
mov
aad
ja
bound
dec
sub
cmp
pop
ja
xor
and
mov
push
cmp
subb
pop
jl
adc
lret
popa
clc
mov
ss
cmp
in
cmp
sbb
mov
iretw
mov
sbb
mov
pop
xchg
daa
hlt
adc
into
inc
add
loopne
rcll
jp
dec
push
ret
mov
out
outsb
gs
mov
mov
mov
inc
add
inc
cmp
cmpl
or
xchg
stos
mov
add
cmp
xchg
mov
popa
imul
fiaddl
xor
ret
das
pop
ljmp
fwait
in
xchg
lea
pop
mov
fstp
je
push
ret
gs
xchg
std
daa
mov
push
loopne
into
sub
inc
push
movsb
sbb
sub
mov
popf
xor
les
sbb
push
ret
sbb
inc
xchg
and
or
lret
test
mov
dec
stos
adc
or
sahf
in
data16
fnstsw
mov
bound
xchg
fldln2
push
mov
adc
mov
shr
lahf
xchg
adc
inc
add
xchg
scas
test
mov
movsb
sbb
rorl
imul
rcl
test
add
pop
inc
sbb
popf
cmpsb
enter
ret
sub
mov
retw
gs
lods
push
loop
cmp
and
inc
imul
lret
mov
push
add
hlt
push
sbb
stos
mov
add
mov
push
cmpsb
dec
cmpsb
cmp
and
icebp
sub
loop
push
jg
jge
inc
aaa
add
mov
or
dec
pop
addr16
sbb
arpl
jno
mov
pop
and
iret
stc
out
push
sub
push
inc
push
cs
cmp
and
jl
and
add
movsb
pop
cmc
cmpsb
out
mov
sub
sbb
hlt
adc
jmp
jb
dec
fadd
inc
push
inc
ja
jno
addr16
and
xchg
sub
cwtl
call
push
jmp
mov
fistpll
xor
xchg
cmp
mov
push
hlt
jp
jge
add
xor
jmp
pushl
dec
leave
xor
xor
add
fstps
fistpl
pop
sbb
mov
ds
popa
jg
lcall
les
push
sbb
inc
and
jl
sub
jl
and
les
in
into
pop
mov
pusha
or
jb
bound
jae
adc
cmp
push
stos
xchg
inc
add
adc
test
pushf
es
daa
pop
lods
jnp
idivl
arpl
pop
rcll
cmp
fcomi
push
adc
adc
jge
mov
xchg
je
cmpsb
sahf
aas
mov
mov
out
data16
cmc
mov
mov
or
jns
or
pop
mov
pushf
fnstcw
pusha
xchg
jo
cltd
and
jne
out
cmpsb
push
cmc
mov
frstor
cmp
sub
dec
pop
stos
negl
sub
add
andl
std
xlat
fwait
cs
out
in
pop
push
movsl
mov
bound
int
jge
imul
adc
dec
xor
dec
stos
loop
les
inc
arpl
cli
sub
sbb
incl
das
lods
popf
sub
dec
sub
into
sbb
and
mov
ret
popf
pop
ljmp
jb
and
jne
ror
add
push
test
and
mov
sub
xchg
sbb
out
aas
into
mov
test
jmp
pop
in
mov
pushf
xchg
aas
pop
ss
scas
pop
fidivl
sub
mov
mov
push
lret
jl
int
addr16
loope
shrb
adc
pop
xorl
add
jmp
mov
sbb
loop
push
jbe
jmp
xor
adc
aas
nop
idiv
loope
dec
lahf
lods
movsl
lds
rcl
stc
pushl
push
out
or
pop
movsb
lcall
arpl
outsb
pusha
sbb
orb
inc
int
jg
inc
loope
push
cmp
or
imul
popf
jge
fmull
rcll
xchg
fsub
push
scas
lret
sub
sbb
xor
xor
xlat
and
xchg
addr16
in
sub
int3
pop
cli
cmp
jg
ja
sbb
mov
ljmp
sar
mov
orl
data16
mov
mov
les
fistl
xor
cmp
pop
cmp
fcmovne
mov
icebp
pop
cmp
mov
dec
in
sub
in
sti
test
push
cmpb
fdivrl
movsl
ds
sub
cwtl
xor
cli
orb
mov
lods
add
push
test
int
movhps
xchg
dec
xchg
adc
negl
mov
or
fistps
sub
push
mov
bound
fdivl
outsb
sbb
mov
je
sbbb
push
push
lcall
dec
stos
outsb
push
inc
daa
cmpl
and
cmp
cmpsl
xchg
inc
pop
or
mov
lcall
bound
test
or
push
lods
aas
movb
dec
push
jecxz
xlat
out
enter
xorb
test
push
xor
ljmp
sbb
xchg
popa
loopne
pop
xchg
les
insl
jns
ja
cld
fisttpl
xchg
into
fistps
fcompl
sbb
je
out
xchg
xchg
fs
or
dec
fwait
dec
xor
outsb
inc
push
push
push
push
jae
or
lock
lea
mov
xor
iret
lcall
cmp
daa
loope
sbb
push
mov
xchg
enter
shlb
scas
aad
movsl
ret
add
pop
and
test
outsb
shll
sub
dec
mov
cli
adc
add
push
dec
dec
push
adc
xor
and
sbb
mov
int
sub
mov
notb
jge
cs
jne
sti
fidivrl
stc
jo
cmp
insb
xchg
out
push
das
push
std
inc
dec
sbb
jno
mov
push
ds
pushf
jnp
xchg
in
jge
push
push
inc
jns
mov
scas
and
xchg
mov
inc
mov
ffreep
sti
dec
inc
cwtl
gs
pop
ret
leave
rcll
ret
inc
ja
sub
mov
testl
adc
stc
cmp
daa
pop
clc
inc
mov
pop
nop
es
push
nop
or
pop
cmp
mov
insb
imul
cld
xor
subb
out
icebp
xor
pop
in
and
adc
nop
sbb
mov
jo
push
std
adc
jmp
fldl
or
sarb
jno
inc
mov
jmp
sbb
jmp
out
sub
sbb
inc
jbe
mov
and
sub
movsl
mov
rorl
mov
scas
or
push
aas
inc
dec
add
mov
inc
jp
addb
and
xor
add
pop
and
cmp
cmp
cmp
pop
mov
jle
push
addr16
out
loope
push
and
arpl
push
mov
xchg
mov
out
pop
sbbl
sub
sbbb
inc
addb
jnp
mov
adc
pop
jbe
pop
rclb
lcall
inc
xor
pop
mov
mov
push
mov
mov
sub
bound
scas
adc
int3
add
arpl
mov
cmpsb
push
shlb
cmpsb
jno
ljmp
js
mov
cmc
jl
xchg
cmp
in
sbb
or
stos
pop
mov
cli
int
xor
inc
shrb
daa
push
addr16
and
jge
lahf
lds
in
mov
mov
fsubs
adc
movsl
insb
pusha
mov
dec
lds
mov
shll
jnp
mov
jl
fmuls
sbb
jl
adc
dec
xor
dec
outsb
outsb
testb
shlb
ja
lret
ret
xor
iret
adc
xor
adc
inc
outsl
or
scas
sar
lcall
adc
pop
shll
push
add
and
shrl
xor
sti
and
push
mov
mov
mov
mov
bound
adc
repnz
xor
add
pop
cmpsl
xor
popf
xchg
icebp
std
jbe
insb
mov
repz
mov
sub
sub
and
popa
in
shr
mov
dec
test
mov
cld
pop
dec
mov
sbb
mov
pusha
mov
or
imul
lret
fdivl
push
jb
pop
mov
test
loop
sbb
cmp
ror
mov
mov
ds
sub
fistpll
lcall
and
adc
or
call
stos
addr16
xchg
lahf
imul
inc
lods
or
mov
enter
scas
sub
mov
lods
js
shrb
and
push
xor
push
jnp
test
mov
jb
jmp
push
out
dec
scas
xor
mov
mov
or
dec
mov
loop
insb
cmp
lahf
shlb
pop
movsl
add
mov
cmc
dec
lahf
mov
adc
push
add
jg
ficompl
jnp
dec
in
cmp
cli
insl
mov
andb
jb
jge
cmp
insb
xlat
sbb
inc
repnz
sub
les
jbe
adc
lret
shll
xchg
mov
sahf
test
xchg
mov
add
out
add
cmp
sbb
xor
mov
cmp
repz
pop
lea
insl
adc
mov
out
mov
sub
lods
mov
jnp
clc
push
subb
push
sahf
inc
fisubrl
add
push
aam
clc
or
pop
stc
loopne
stos
or
or
in
inc
clc
inc
jmp
arpl
test
mov
pop
xlat
pushf
dec
cs
mov
pop
notl
outsl
add
xor
int3
andl
jo
out
loop
push
dec
les
lods
scas
out
fmul
or
fsubs
scas
loope
pop
imul
in
setnp
aam
mov
bound
nop
leave
andl
nop
cld
xor
jo
xchg
scas
cmp
das
xor
in
inc
mov
ljmp
mov
imul
fsubrl
out
cmpsl
insl
mov
stc
test
push
jl
adc
dec
int
xor
mulb
testl
cmp
into
push
mov
fldl
mov
jmp
arpl
inc
dec
in
add
outsb
mov
out
test
sahf
xchg
xchg
xchg
adc
out
gs
push
sbb
daa
dec
aam
sbb
dec
sub
inc
dec
insb
inc
lods
movb
adc
push
dec
test
cs
fidivrs
lds
jl
push
dec
loop
fidivl
dec
out
pop
dec
fs
jg
pop
leave
icebp
mov
outsl
adc
out
cs
push
sahf
cmp
push
es
xor
loopne
push
fisttpl
aaa
icebp
fdivrl
test
mov
push
pop
mov
fcom
nop
aaa
sbb
fcoms
mov
jbe
mov
sub
and
nop
sbb
mov
sarb
and
frstor
mov
rcrb
or
mov
sti
sub
ret
loope
and
jnp
insl
adc
jns
pop
jp
jg
daa
mov
in
fs
daa
test
xchg
cmp
and
inc
out
andps
pop
mov
push
je
outsl
or
or
jb
add
sarb
hlt
pop
or
test
push
cwtl
xchg
aad
leave
pop
punpckldq
add
pushf
ret
and
or
insl
sahf
mov
inc
stc
jns
shll
or
xchg
mov
lahf
mov
dec
xchg
in
mov
push
xor
sbb
daa
mov
pop
or
mov
mov
mov
loop
or
nop
ds
ja
pop
iret
jnp
add
out
pop
movsl
ja
addl
out
stos
outsl
adc
decb
xchg
sub
mov
push
inc
inc
pushf
mov
negl
clc
jmp
and
sub
das
jne
ret
push
fisubrs
push
xor
jne
rcrl
insb
push
hlt
pslld
and
aam
dec
cmpsb
push
or
mov
loopne
mov
sub
daa
cmp
repnz
fdivrl
clc
jle
mov
xchg
lret
movsb
xchg
inc
jb
sub
das
leave
scas
pop
hlt
cmpsl
cli
xorl
mov
std
jecxz
sub
fnstcw
fcmovb
sbb
ja
fildll
repz
push
int3
insl
pusha
loopne
outsl
inc
nop
jmp
cmp
xchg
push
bnd
pop
sbb
xchg
divl
inc
aam
pop
xchg
lds
and
sbb
out
sbb
sbb
lret
mov
pop
or
pop
je
loope
jg
cmp
or
ds
mov
stos
push
dec
or
ret
push
pusha
pop
pop
sbb
xor
push
in
push
mov
test
loope
xchg
stc
inc
jle
lock
ja
mov
scas
fisubrl
pop
mull
and
andl
add
repz
shlb
ret
mov
sub
push
int3
push
push
inc
test
and
inc
in
movsb
jmp
xchg
inc
mov
mov
xlat
sbb
jl
or
pop
jnp
shlb
inc
dec
jl
mov
dec
arpl
mov
hlt
imul
mov
cmp
into
pop
aas
pusha
jg
jb
xchg
loope
inc
fcom
cmp
ljmp
dec
leave
cltd
mov
jne
negl
ljmp
orl
in
stc
inc
mov
adc
jg
in
cld
sub
mov
cmp
inc
jns
outsl
repnz
push
rol
sbb
dec
adc
lods
repnz
out
negb
dec
cmpsb
fwait
loopne
jecxz
leave
orl
iret
cmp
push
push
mov
les
cmp
sub
int3
adc
sub
imull
xlat
pop
push
lret
xchg
lret
adc
rcrb
push
sub
cmova
cmpsl
rcll
je
testb
mov
add
in
icebp
add
cmpsl
test
into
and
xchg
or
sbb
jmp
or
push
cmc
arpl
sub
xchg
pop
das
iret
daa
xor
out
pcmpeqw
pop
jbe
push
sub
mov
movsl
pop
mov
ss
add
lahf
mov
sbb
mov
pop
pushf
out
dec
pushf
daa
sub
clc
xchg
pop
and
adc
adc
mov
sarb
and
xlat
jg
pusha
add
mov
dec
and
in
scas
jnp
cmp
lcall
rclb
lods
out
fucom
andl
std
push
bound
stos
popa
std
fwait
xor
movsl
mov
pop
mov
xchg
xchg
fnstcw
pop
aas
mov
mov
pushf
xchg
add
test
js
repnz
ret
jle
aaa
pop
int
inc
mov
ja
enter
add
fwait
ja
add
push
push
xchg
cmp
mov
add
in
pusha
les
into
pop
sub
les
mov
dec
mov
xchg
and
inc
pop
mov
push
les
and
mov
repz
add
pop
dec
sub
sbb
xor
push
mov
push
sub
mov
ret
pop
cmp
cmpb
sub
mov
xchg
mov
pop
mov
les
cmp
aas
xchg
xor
pop
cld
rclb
adc
jae
sub
jle
popa
push
xor
adc
inc
push
es
mov
call
movsb
in
xlat
lret
out
mov
lret
cwtl
jno
enter
add
lock
push
adc
outsb
xor
sbb
push
mov
and
cltd
andb
mov
add
dec
push
mov
outsb
jp
mov
jbe
adc
popf
jo
dec
stos
add
or
or
sub
sbb
ret
mov
aam
test
insb
pop
push
lret
mov
sbb
jmp
xchg
aas
dec
scas
cmp
and
out
std
shrb
test
push
fwait
mov
jl
test
lds
cli
sbb
daa
arpl
push
push
fdivrl
mov
mov
or
cmpsb
scas
jecxz
xlat
lret
pushf
dec
xor
bound
and
je
test
lods
mov
dec
hlt
mov
jle
pop
mov
xchg
xchg
jo
xchg
push
aam
and
lret
mov
xchg
mov
or
inc
shr
mov
dec
mov
aam
cs
add
add
fcomps
je
sub
into
xor
adc
daa
decl
ret
mov
inc
push
xchg
arpl
in
rolw
mov
jmp
lret
dec
add
pusha
and
mov
sahf
pushf
das
dec
mov
cmp
cs
xor
push
bound
rcrb
jl
push
add
mov
loopne
pop
adc
or
test
notb
add
addr16
rol
ret
addr16
decl
pop
xchg
mov
push
mov
cmovns
js
cli
es
mov
les
jge
movsb
rcll
jecxz
pop
lods
call
lret
cmp
pushf
inc
lds
ss
ja
icebp
in
aad
mov
mov
adc
les
loop
and
jge
lcall
xchg
xchg
sbb
iret
outsb
into
push
and
push
cmp
movsl
sub
lds
or
pop
mov
xor
xchg
es
sub
jmp
jl
mov
cmp
cli
ret
sbb
out
aas
xor
mov
adc
rorl
jnp
hlt
test
out
dec
jp
outsl
sbb
push
mov
daa
xor
fstp
xchg
rcrb
jg
mov
cmc
negl
push
pop
mov
aaa
add
hlt
sub
xchg
add
imul
cld
xchg
push
pop
lret
inc
insb
pusha
loope
xor
xchg
inc
push
jmp
or
sub
aam
dec
imul
outsl
xor
scas
add
pop
mov
mov
mov
add
jle
adc
cmpsl
shrb
lret
jg
enter
pop
imul
mov
and
dec
test
jle
stos
jb
pop
mov
shl
fxch
jbe
rorb
dec
bound
and
out
maxps
enter
fcoms
cwtl
sbb
sbbl
ss
cmp
fs
push
inc
cmp
inc
and
mov
iret
xorb
sti
or
add
out
popa
xor
je
inc
pop
push
or
fs
and
or
dec
or
cmp
push
lcall
sbb
sub
mov
int
add
dec
mov
and
pop
xor
lret
test
cmpsb
add
and
subl
mov
repz
popl
lret
aaa
pop
call
insl
add
sbb
xchg
mov
cwtl
xor
push
inc
adcb
call
xor
xchg
jo
mov
push
cltd
dec
roll
scas
test
push
shrl
repnz
out
mov
xorb
inc
lods
fimuls
and
dec
fnstsw
xchg
fsubrl
xlat
ds
inc
jp
sbb
add
cmpsl
insl
dec
sbb
loope
jmp
add
fldenv
add
jg
sub
jnp
jnp
jecxz
pop
or
inc
enterw
fmulp
push
mov
dec
sbbl
push
mov
enter
daa
pop
dec
add
repnz
pop
mov
aas
add
icebp
and
push
xor
leave
mov
push
cmp
sub
das
hlt
cmp
rorb
jecxz
pop
scas
test
jl
or
popf
cmp
cli
aam
in
mov
call
movsb
add
or
dec
jl
lods
pop
cld
inc
inc
int3
mov
xor
add
int
js
cmp
xchg
scas
fcomip
pop
sbbl
xchg
push
ds
sarl
cs
pop
leave
mov
pop
mov
mov
and
shll
xchg
mov
in
cwtl
xlat
sub
rol
xchg
test
pop
mov
subb
imul
and
jg
fstl
push
inc
sbb
xchg
mov
inc
sub
orl
stc
into
stc
cltd
dec
inc
mov
pop
in
sub
sbb
aad
cmp
dec
jmp
push
out
jnp
popl
aas
imulb
add
and
notb
lcall
fcmovnbe
jae
sti
cmp
mov
sahf
out
mov
cmp
outsl
aam
sbbl
mov
sub
in
lods
mov
mov
xchg
fimull
movsb
sti
cltd
mov
or
jo
incb
xchg
pop
sti
push
jge
lahf
mov
pushf
adc
or
psllq
std
and
jmp
lds
fimull
lods
pop
in
inc
mov
xor
xchg
cmp
mov
push
adc
jo
mov
pushl
cmp
nop
jge
or
shrb
push
jge
or
in
jle
in
cmpb
stos
mov
xlat
adc
sbb
cli
dec
sti
lahf
cmpl
lea
push
push
cmp
jnp,pt
arpl
or
pop
sbb
xorl
adc
lcall
sti
mov
adc
mov
xchg
add
or
xor
add
insb
jmp
loop
inc
or
scas
cli
imul
scas
aam
stc
pop
decl
in
ss
stc
jno
lret
gs
xchg
lea
lret
lret
cmp
mov
add
pop
pop
mov
popf
scas
dec
sbb
addl
pop
stc
xlat
xchg
call
jne
push
adc
lcall
jl
add
add
or
lds
pop
xorl
or
rol
aas
pop
rorb
mov
push
xor
and
mov
sub
pop
push
insl
stos
mov
dec
data16
cmpsb
inc
mov
adcl
cmp
testb
std
push
out
popa
arpl
inc
iret
test
ja
xor
lods
xor
inc
sub
loop
xor
or
test
xor
mov
mov
test
jne
or
aas
in
int
fsts
fdivs
push
cli
out
inc
xchg
mov
xchg
loop
fildl
nop
call
jbe
clc
mov
cld
push
sub
cmpsb
rorb
aad
insb
movq
stc
push
ret
mov
dec
leave
jb
and
sub
xlat
mov
out
pusha
insb
rorl
mov
cltd
in
aad
movsb
cmp
cmp
jl
repz
xor
ffree
adc
and
sbb
lret
leave
inc
incb
or
inc
pop
sub
in
sub
sbb
imul
sub
push
add
cs
xor
cmp
nop
mov
xor
xchg
aad
test
stc
dec
scas
cmc
adc
rolb
mov
aad
mov
cmp
dec
sbb
into
repnz
push
dec
pop
mov
cmpsb
les
ljmp
sub
cmp
and
xor
fidivs
ret
mov
flds
ss
cmc
mov
cli
in
pushf
lahf
lcallw
and
or
int3
arpl
push
mov
xor
std
clc
out
jne
xor
sbb
loope
loop
dec
cmp
cwtl
sub
jnp
test
shl
mov
gs
push
movsl
or
pushf
aam
pop
jnp
mov
inc
insb
bound
mov
mov
xchg
jno
cmp
sti
jnp
out
gs
leave
sbb
inc
push
add
jle
sarl
push
push
jnp
push
pop
mov
mov
pop
adc
sbb
adcb
pop
inc
dec
cmp
mov
test
pop
popf
pop
sbb
das
xor
mov
or
xor
sub
push
cmp
aas
cli
into
mov
pop
das
jmp
xchg
pop
pop
fistpl
shlb
mov
icebp
mov
inc
push
in
and
popf
sbbl
sub
mov
mov
cmpsb
mov
push
push
shrl
xlat
jp
inc
subb
mov
xor
dec
std
flds
test
pop
into
dec
xor
les
cmp
jmp
mov
jge
cld
hlt
add
xchg
lock
aas
or
cmp
icebp
inc
fsubl
mov
xor
lahf
imul
test
dec
cld
mov
xchg
rol
mov
and
jnp
push
xchg
out
inc
dec
pop
enter
loopne
cmpsb
js
sbb
aaa
dec
clc
jle
mov
sub
js
shl
leave
sti
push
out
fsubrl
and
dec
icebp
pop
fdiv
fidivs
sub
jae
push
imul
out
mulb
mov
or
test
xchg
cld
imul
and
hlt
jl
sbb
popf
fcoms
push
imul
enter
mov
stos
cmpsb
sub
jmp
fadd
push
pop
movsb
iret
push
or
insb
scas
in
dec
jge
in
inc
sub
jle
dec
iret
pop
mov
xor
sub
dec
out
pop
mov
xor
mov
icebp
sbb
in
pop
andl
into
aaa
arpl
dec
jle
das
mov
xor
enter
inc
sub
dec
frstor
xchg
dec
clc
lahf
xchg
or
mov
adc
inc
push
cwtl
jle
addr16
jno
cmpsl
fwait
xor
stc
movsl
adc
cmp
jo
and
fcmovbe
hlt
add
pusha
mov
gs
andb
jns
arpl
xor
inc
cs
adc
xchg
mov
or
xchg
adc
and
loopne
mov
std
lea
shlb
test
jne
popf
je
loope
jge
pop
jl
mov
or
movsl
popa
inc
mov
std
add
ficoms
addr16
mov
rol
add
pop
aad
jns
add
lret
scas
push
xchg
adc
enter
mov
out
out
inc
sarb
flds
mov
adc
ds
dec
add
in
dec
imull
inc
or
in
sbb
mov
filds
xor
gs
nop
xor
dec
loopne
imul
div
ret
mov
shlb
icebp
mov
adc
mov
rol
negb
mov
pop
mov
xchg
mov
push
add
or
fwait
aas
pop
ret
and
xor
outsb
sub
pop
shl
aam
or
int3
push
pop
ds
add
inc
xor
shll
repnz
nop
fisttpll
xor
sbbl
and
push
cwtl
xchg
jbe
cmp
nop
sub
loope
sbb
push
iret
pop
lret
cmp
dec
mov
and
lahf
xchg
adcl
out
dec
inc
sti
inc
cmp
repnz
icebp
jo
jae
scas
fwait
int3
sub
cmp
loopne
mov
outsb
test
push
out
ficoml
fs
clc
out
pusha
xlat
lea
mov
pop
adc
pop
xchg
stc
leave
jnp
adc
jmp
stos
lcall
fsubrl
cli
outsb
xchg
rcrl
movsb
out
jge
rclb
cmp
sub
dec
in
mov
cmp
mov
mov
inc
shlb
inc
outsb
popa
shl
aad
mov
mov
or
sbb
stos
mov
adc
fisubrs
cs
aas
stos
rcrl
pop
stos
aaa
fistpll
and
mov
adc
sub
xchg
pop
xchg
in
dec
xchg
xor
fcomps
stc
and
nop
loope
out
push
inc
adc
es
jmp
add
jno
es
insb
fisttps
jmp
adcl
int
pop
call
out
lahf
stos
stos
inc
dec
fistps
addr16
push
shlb
out
pop
or
ret
or
mov
mov
sub
fmul
pushf
mov
stc
xchg
fwait
push
pop
nop
out
std
pop
xchg
mov
movsl
das
mov
insl
sub
pop
in
popf
lahf
adc
aas
popf
es
test
dec
outsb
fistps
les
xchg
pusha
ds
int
mov
push
cwtl
xchg
es
pop
popf
push
jne
mov
daa
mov
adc
xor
neg
lret
add
fcoml
mov
pop
shl
and
sbb
and
sbb
sub
iret
mov
fld
leave
push
push
mov
inc
daa
lds
jb,pt
out
fildl
xlat
mov
xchg
dec
cwtl
pop
and
jecxz
sub
mov
fnstsw
xchg
loope
mov
sarb
pop
cmp
fcom
lret
movsl
mov
insl
push
lods
inc
jne
mull
jg
je
push
jp
mov
inc
adc
shrb
lret
inc
xor
push
lds
aas
add
dec
push
in
xor
mov
mov
and
fsubs
fsubl
jae
in
loop
icebp
push
adc
pushf
insb
mov
aaa
mov
fbstp
and
notl
mov
adc
outsb
or
addb
pop
adc
push
cmp
lock
popf
es
aas
pop
in
repz
mov
lock
movsl
add
push
imul
aaa
or
sbb
add
mov
inc
loop
jle
bound
cmp
push
xchg
cwtl
or
int
gs
insl
jle
pusha
push
call
ret
aas
lea
pop
push
outsl
jmp
lock
rolb
mov
ret
movsl
xorl
or
inc
adc
test
ljmp
sbb
clc
movsl
sbb
data16
push
push
scas
imul
mov
mov
xor
jmp
outsl
loop
pop
dec
jle
add
rcrl
cli
jno
jecxz
mov
xchg
and
xchg
in
mov
pop
loopne
jg
std
xor
stos
ja
pop
sahf
das
lret
sbb
je
and
sub
or
xor
rorb
jnp
ret
and
lods
push
pop
cmp
std
bound
mov
sub
add
mov
test
arpl
mov
xchg
arpl
mov
mov
imul
push
gs
mov
add
jp
xchg
mul
fldenv
sahf
iret
sbb
push
in
mov
cmpsb
pop
mov
ret
mov
leave
and
fwait
pop
je
mov
loopne
add
dec
sbb
mov
dec
push
xlat
in
int
stos
jne
jle
hlt
lahf
cmc
mov
ljmp
idiv
shrb
cwtl
and
in
jne,pt
stos
cli
test
jecxz
cmc
das
test
pop
xor
shl
fisttps
int
outsb
ljmp
lcall
jge
ficoms
or
sbb
les
iret
dec
subl
movl
pop
jne
fistl
mov
ss
mov
jns
mov
mov
aas
ljmp
lea
daa
jae
daa
add
ss
xchg
cwtl
lret
insl
mov
and
in
fcompl
jl
je
mov
push
adc
fmull
cwtl
adc
jecxz
cmp
pop
xchg
lahf
inc
call
aad
dec
rcl
pop
cs
sti
jg
lea
jle
insl
popa
mov
outsb
mov
dec
add
mov
and
add
xor
and
clc
cwtl
pop
cwtl
stos
xchg
dec
cmpsb
mov
das
xchg
cltd
dec
aaa
or
pop
fisubl
or
pop
mov
and
xchg
fidivrs
mov
inc
inc
push
lds
cmp
enter
or
mov
adc
aas
lds
mov
push
cmpsl
repz
rcrl
push
lock
dec
sbbl
push
or
lock
xor
xchg
pop
jb
jb
in
jg
mulb
jne
pop
jo
sub
in
sbb
test
lret
out
mov
shlb
xlat
cmp
push
adc
test
out
scas
pop
mov
inc
ret
or
cmc
cmp
es
cld
dec
inc
fmull
or
lods
addr16
out
add
mov
jno
outsb
xor
mov
daa
mov
jecxz
int3
insb
dec
test
lahf
pop
add
test
xchg
fists
sub
cmp
sbb
add
dec
push
std
add
xor
jmp
mov
sbb
pusha
jbe
inc
jl
jae
jb
call
mov
nop
push
es
xor
imul
dec
sbb
xor
cli
cmc
cwtl
or
cwtl
add
cli
not
sbb
jo
jp
js
pop
xlat
scas
pop
add
mov
fisttpll
loop
xchg
js
fbstp
jle
ja
push
push
adc
mov
shlb
mov
jge
bound
jl
mov
adc
dec
or
jg
mov
add
cmp
dec
ja
add
insb
aam
pop
xor
cwtl
push
ljmp
and
bound
jp
mov
jecxz
stos
in
adc
mov
cmpsb
sarl
adc
cltd
or
test
fcmovbe
or
push
and
adcl
mov
mov
cld
imul
aas
inc
lcall
pop
mov
xlat
icebp
mov
push
fsubl
in
pop
mov
sub
lods
cli
push
out
ds
mov
and
out
lret
ficoms
mov
shll
ret
sub
xor
ljmp
pop
ljmp
test
push
cmp
hlt
in
ret
sbb
fldt
jl
imul
pop
and
fidivs
ds
negb
sti
mov
sub
lods
inc
popf
scas
xlat
or
or
je
jp
jo
or
mov
and
nop
adc
mulb
lahf
jmp
add
rep
enter
inc
sbb
out
mov
push
js
or
mov
xor
pop
popa
xchg
xchg
and
push
mov
jle
pop
cltd
xchg
jp
jmp
add
inc
add
dec
and
lcall
jne
les
int
popa
ucomiss
ret
les
xchg
inc
and
pop
sub
dec
jmp
or
lea
pop
roll
icebp
jle
negl
nop
fsub
dec
in
sahf
aas
aam
test
dec
test
notb
int3
int
mov
xor
and
xchg
adc
iret
ds
nop
jne
stc
scas
js
mov
insl
ds
jle
pop
lods
adc
or
mov
add
pop
cltd
roll
int3
shrb
les
jae
push
data16
loop
lret
lds
mov
in
mov
pop
mov
xchg
pop
cs
cmp
mov
push
ss
and
repz
inc
aam
pusha
out
loopne
pop
inc
out
xchg
mov
add
ds
loope
xor
and
shlb
in
insb
icebp
cmp
xchg
dec
mov
jnp
ja
int
cwtl
inc
add
jns
xor
les
imul
mov
fldenv
cmp
imull
daa
or
pop
jmp
outsl
jecxz
cmpl
sti
popf
mov
int
int
ss
jmp
add
sub
xor
xor
or
sbb
sbb
sbb
mov
adc
sarb
movsl
fwait
pop
xlat
lock
jle
orb
dec
sar
xchg
mov
fsts
pop
fcmovu
stos
loopne
andb
out
pop
mov
fsubrs
imul
jne
push
daa
xchg
or
in
loop
ja
aam
popf
push
mov
adc
lea
and
ret
ficoml
rcrl
adc
and
insl
xlat
fsubl
xchg
pop
lret
xchg
pushf
sub
ss
push
cwtl
mov
mov
pop
das
and
xor
test
test
mov
ret
stc
out
ret
xor
mov
pop
push
outsl
xchg
sbb
sub
xor
mov
stos
cwtl
stos
jmp
lods
mov
lahf
add
addr16
je
inc
sahf
in
imul
sbb
ss
out
xchg
cmpsb
pop
cmp
or
out
stc
imul
repnz
adc
icebp
ret
push
ret
jne
cmc
dec
xor
aam
pop
iret
jne
aam
and
cmp
repz
mov
jbe
repz
mov
or
test
jbe
inc
mov
movsl
sahf
jae
adc
loope
daa
enter
insl
mov
xlat
or
add
or
or
mov
faddp
in
stc
inc
mov
out
cwtl
movsl
push
or
stos
xchg
pop
jnp
in
push
sti
adc
in
shrb
inc
cmp
out
push
or
and
inc
cmp
add
adc
add
xchg
mov
adc
dec
add
inc
test
push
dec
xchg
dec
pop
aam
clc
inc
adc
mov
clc
lahf
mov
hlt
jmp
sub
push
imull
outsl
outsb
outsb
arpl
je
mov
mov
or
divb
cltd
in
fidivrl
jnp
decb
ret
dec
mov
jo
ljmp
xor
mov
and
sub
push
xchg
and
sbb
sub
mov
mov
mov
popa
das
fisubl
sub
sbb
mov
push
aas
movsl
adc
ss
test
push
xchg
mov
fisubl
fsubs
push
popf
sub
or
dec
lock
enter
in
adc
ja
and
subl
sbb
aam
scas
imul
repnz
adc
lea
daa
popa
hlt
pop
push
in
clc
pop
out
repz
scas
jle
jmp
faddl
mov
jbe
push
ficoml
in
fnstenv
lahf
xor
add
popa
inc
adc
in
movsb
mov
mov
in
stos
leave
mov
jg
lds
xchg
pop
mov
push
lock
lahf
or
gs
lret
pushf
push
mov
rcrb
mov
cmpsb
xor
imul
mov
and
push
fsubl
lcall
clc
lock
dec
sub
xor
push
sbb
lret
lahf
mov
incb
int
pop
lret
sbb
or
popf
jne
adc
push
fildll
lret
enter
xor
adc
out
inc
pop
cli
arpl
mov
arpl
fdivl
ja
lods
in
repnz
mov
push
dec
push
rcr
add
pop
cmp
imul
or
jle
fdivr
and
inc
mov
jnp
dec
sub
lret
lds
jo
fs
adc
sub
cli
push
pushf
je
pop
add
dec
push
inc
les
mov
push
leave
push
bound
mov
push
jle
sbb
add
adc
pop
xchg
ficomps
popa
rcrb
inc
inc
jae
inc
and
add
neg
rclb
test
outsl
pushf
lcall
addr16
out
lock
sub
insl
xor
scas
je
pop
jge
xchg
shr
adc
pop
add
and
les
cmp
add
xor
inc
xchg
lea
repnz
push
aaa
add
mov
into
fprem
adc
mov
cmp
out
test
sbb
ret
push
xchg
mov
nop
jnp
xchg
addr16
cs
pop
faddl
jecxz
loope
mov
jno
ficoml
rcr
nop
cmp
mov
jle
sub
mov
imul
jle
jae
pop
xor
push
mov
jecxz
in
fsubl
sbb
aam
loop
xor
jg
push
dec
push
pop
outsb
and
lods
and
mov
arpl
jg
sub
sub
sbb
push
daa
pop
push
inc
fldt
pusha
repz
orl
sub
fcomps
push
lds
aaa
cld
lahf
shll
daa
jmp
out
jns
add
sbb
push
pop
int3
popa
add
mov
cmp
lds
or
pusha
pop
pusha
lret
mov
mov
das
or
fwait
xchg
lds
scas
jle
cli
xlat
mov
jbe
xchg
push
fimuls
jp
cli
mov
push
sbb
mov
mov
adc
push
out
mov
and
xchg
push
or
outsb
mov
jae
inc
inc
sub
sub
aad
jge
or
pushf
mov
cli
cld
in
int3
add
mov
xor
pop
cld
lahf
fistpll
pop
jns
jge
mov
int
mov
ljmp
xor
loop
cmp
sub
lcall
push
es
in
insb
cmpsb
imul
loope
cmc
and
or
mov
in
push
into
cs
inc
inc
mov
and
push
sub
add
push
out
add
sbb
push
rcll
xchg
ds
add
xor
cmc
dec
cs
cltd
ficoml
dec
mov
ss
test
popf
enter
sub
mov
xchg
lahf
push
lcall
idivl
jns
push
adc
mov
xchg
sub
xchg
fldt
orb
xchg
inc
sub
ljmp
leave
nop
in
mov
lods
.byte
