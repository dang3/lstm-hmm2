fmull
mov
mov
sar
stos
jnp
mov
sbb
leave
fdivr
es
leave
popa
mov
popf
sahf
pop
icebp
xchg
xor
call
movsl
mov
adcb
test
fs
cmp
jecxz
scas
ret
xor
xor
sub
notl
dec
mov
or
pop
sub
loopne
jo
push
lods
cli
hlt
sbb
into
pop
sbb
jne
ret
jns
fisttps
andl
xchg
inc
inc
rcrb
addr16
loop
mov
inc
out
jmp
in
mov
fucomi
loop
push
mov
xor
adc
cmp
ret
push
push
sbb
dec
xchg
test
je
repz
jle
aam
dec
testb
test
cmpsl
cmp
dec
lock
sti
fistps
cltd
push
lods
mov
mov
push
and
mov
ljmp
pusha
push
icebp
push
stc
dec
cmp
loopne
addb
lods
popf
cli
xor
lods
notb
mov
jle
pop
add
ja
push
xchg
push
inc
xchg
pop
sbb
sub
jle
aad
lea
lods
sahf
jle
mov
xchg
add
int
fwait
jo
lcall
mov
daa
dec
daa
je
jl
xchg
mov
mov
and
cmp
jle
pusha
and
mov
cmp
adc
mov
jmp
das
pop
jmp
inc
std
sub
mov
mov
pop
shrb
repnz
nop
dec
dec
testb
cli
dec
push
dec
insl
adc
or
push
popa
or
inc
divb
aaa
or
fmuls
xchg
lods
fidivs
lock
inc
orl
sbb
addr16
into
pop
xchg
xor
ret
xchg
sbb
mov
mov
cmp
jne
fldl
shlb
mov
negb
leave
mov
jg
cwtl
pop
dec
fwait
rol
push
push
jo
sbbl
inc
mov
xor
fwait
sub
push
aad
lret
out
sub
popf
jp
mov
idiv
ret
mov
js
jo
popf
mov
divb
lea
fxch
pop
js
shll
je
dec
sbb
push
sbb
imul
dec
test
fidivs
rorb
sub
sub
add
pop
fisubrl
adc
xor
std
mov
dec
xor
pop
das
dec
xlat
rcll
test
jg
dec
pop
jo
adc
mov
mov
mov
xchg
jno
jne
push
xlat
pop
shrb
lods
iret
push
mov
jo
pop
cmp
add
inc
inc
adc
popl
mov
cmp
test
fisubs
stos
ja
das
adc
or
icebp
scas
push
fwait
and
lahf
xchg
pushf
push
jl
test
ljmp
mov
and
fs
push
or
mov
and
out
arpl
jnp
repz
push
push
push
and
sbb
mov
cmp
xor
jne
mov
pop
push
inc
pushf
adc
out
push
jmp
cmp
out
sti
pop
cmc
sbb
cwtl
push
mov
lods
adc
pop
and
gs
adc
jnp
jnp
mov
fcmovne
mov
push
movsb
sub
push
add
and
xlat
jae
cli
out
and
in
xchg
mov
div
push
mov
jmp
inc
sub
inc
cmp
out
lahf
and
jl
clc
test
sub
xchg
add
inc
xchg
fistpl
sub
sbb
call
sahf
sbb
aad
inc
fsubrl
xchg
aas
cmp
das
test
out
pop
inc
jns
jne
dec
xchg
adc
jo
sbb
scas
sub
pop
test
or
js
adc
leave
pop
loope
mov
sub
loopne
cli
jecxz
mov
lods
jmp
sub
lcall
stc
inc
push
stos
sub
out
cld
out
mov
add
xchg
xor
repnz
jns
dec
mov
fsubp
fsubs
xor
mov
dec
movsb
sub
jne
in
lods
push
inc
fisubl
mov
add
mov
pop
outsb
fsubrl
out
mov
cld
mov
sti
jae
cmpb
add
mov
push
mov
aas
jns
rcrb
and
movsl
jnp
repnz
push
fs
int
sti
dec
add
or
out
cmp
or
jge
mov
add
outsl
mov
xor
cld
mov
mov
mov
jno
out
jecxz
fcmovne
outsl
lcall
mov
fildl
stc
jmp
push
loopne
xchg
adcl
test
dec
test
mov
repnz
shrb
jb
push
scas
ss
mov
jge
sub
xchg
pushl
jbe
or
pop
mov
sub
adc
push
test
mov
inc
sbb
das
sub
mov
dec
jg
mov
sbb
push
cmc
fwait
movsl
add
lahf
mov
shl
pushf
cltd
insb
sub
xchg
int
or
jg
sbb
jp
pop
ret
mov
lahf
mov
lahf
cmp
out
adc
ja
sbb
xor
call
or
in
iret
faddl
inc
jns
imul
sbb
ret
jl
pop
adc
pop
or
repz
inc
mov
imul
xchg
test
fisubrl
jno
xorb
adc
mov
mov
jb
push
aas
push
cmp
xor
aad
cmp
xchg
call
sbb
pop
pop
lock
imul
jp
test
data16
movsb
dec
jle
lea
mov
cmpb
adc
mov
lods
mov
hlt
inc
inc
sub
enter
inc
mov
xor
into
imul
push
or
out
ljmp
xchg
test
inc
out
fdiv
sub
mov
mov
ss
xlat
test
push
xchg
shrl
dec
push
dec
or
xchg
lock
mov
popf
scas
outsl
popa
adc
xor
push
mov
xor
cld
lds
jae
and
mov
bound
cmp
daa
mov
in
ds
in
xchg
pop
call
adc
mov
ret
test
inc
dec
push
xor
inc
insl
dec
ljmp
and
add
pop
and
je
and
fidivrs
data16
call
push
jbe
lock
sub
xor
hlt
mov
test
inc
pop
mov
xchg
daa
insb
sbb
fmul
fisubrl
sbb
testl
sbb
rcr
dec
aam
cmp
pop
jae
lret
sarb
inc
dec
xor
mov
pop
test
xchg
aad
mov
cmp
sarb
push
aam
xor
shr
lea
je
idivb
mov
cmp
cltd
out
inc
mov
jp
pusha
rolb
sahf
icebp
jge
jp
fpatan
stos
mov
data16
into
cmp
mov
cmpsl
cs
adc
add
mov
enter
mov
push
push
gs
and
aad
pop
movsl
aaa
idivl
inc
das
mov
iret
push
push
jecxz
movsl
aas
pop
xor
in
insb
mov
pusha
inc
mov
jns
punpcklbw
xchg
scas
mull
xor
jge
sbbl
sub
pop
xchg
mov
dec
mov
jge
int3
and
loop
aas
lret
mov
or
les
mov
cli
mov
hlt
adc
movsl
rolb
ja
sbb
rcr
jg
sahf
mov
imul
fwait
sti
push
push
jge
call
test
test
mov
cmp
dec
pop
dec
pop
add
leave
push
aad
cmc
daa
push
lret
push
lret
bsr
push
jg
out
push
dec
aaa
mov
push
dec
sub
mov
sub
fwait
mov
cs
out
jb
mov
lock
sbb
add
sbb
int3
test
pop
rcll
mov
xlat
inc
cld
push
push
bound
mov
lahf
shll
loopne
jp
mov
outsb
lea
or
mov
ret
add
adc
lcall
or
insl
add
jp
idivb
jg
adc
gs
out
shlb
push
pop
mov
xchg
xor
mov
pop
and
arpl
cmc
push
mov
lds
lods
and
addr16
xchg
ficomps
mov
pop
mov
push
cmp
aad
and
xchg
test
mov
dec
lret
add
sub
sbb
out
xchg
cmp
mov
mov
mov
nop
cmpsb
loop
test
lds
sub
jo
outsb
inc
insl
mov
loope
outsl
sarl
xor
add
fadds
add
fsts
cmpl
mov
add
stc
jbe
jnp
sbb
inc
decl
in
fildl
ja
pop
jge
stos
xchg
insl
dec
pop
in
scas
imul
rcll
xchg
add
or
xorl
xchg
jg
add
or
mov
dec
mov
add
icebp
es
dec
fwait
xchg
gs
xchg
in
pop
dec
dec
dec
pop
loope
repz
ds
jp
popf
or
repz
jae
movsl
jnp
ret
lods
push
iret
test
push
mov
or
mov
popa
scas
push
mov
addl
inc
inc
lods
in
mov
pop
inc
xchg
fs
xor
clc
loop
adc
jo
out
fldcw
sub
push
jg
or
rol
jb
cld
xchg
pop
pop
in
inc
add
lret
push
icebp
aas
mov
roll
cmp
sbb
adc
xor
mov
fs
jp
lods
imul
pushf
stc
cmp
lods
test
insl
loop
adcb
lahf
fwait
jmp
inc
ret
mov
xor
lahf
outsb
enter
hlt
cwtl
pusha
and
leave
cwtl
mov
jne
add
or
mov
mov
out
xchg
mov
inc
sahf
in
hlt
out
jg
scas
jns
or
xchg
push
jp
pop
fcompl
fs
add
cmp
or
xor
add
push
and
mov
cmp
and
cmp
and
inc
pushf
push
cli
aam
push
icebp
leave
gs
jmp
imul
sbb
cmpsb
and
outsb
nop
lret
xor
fwait
loop
std
scas
dec
jg
loopne
cmc
stc
mov
jo
loope
push
adc
in
int3
out
mov
scas
cmp
pop
ja
daa
daa
xlat
dec
jnp
mov
fwait
out
pop
sti
aad
sbb
mov
ficoms
mov
testb
pop
imul
out
adcl
out
out
push
dec
push
dec
inc
cmc
add
ja
lods
jl
mov
mov
xchg
xchg
or
repz
loop
cmp
incb
xchg
push
mov
popf
add
or
inc
je
addr16
jno
pop
rcr
imulb
test
push
lret
xchg
dec
movsb
pop
jge
jnp
pop
lret
mov
xchg
inc
gs
xchg
xor
rcll
out
fldcw
pop
cltd
clc
leave
xor
xor
sbb
mov
lret
stos
in
aaa
js
mov
imul
imul
push
and
push
xchg
add
jp
add
dec
popf
shlb
push
jbe
fcoms
lahf
sbb
adc
jmp
call
outsb
cmp
repz
in
inc
lahf
pop
mov
jo
and
cmpsl
sbb
in
jg
loopne
rorl
cmc
push
mov
fnstenv
inc
es
iret
adc
mov
sbb
icebp
popa
lret
hlt
nop
push
jo
cwtl
xchg
lds
popa
testl
roll
dec
mov
and
mov
inc
andl
jno
mov
sub
fcompl
movsb
mov
loope
or
or
das
cmp
into
mov
xchg
rclb
in
inc
mov
push
jns
or
loope
or
imul
adc
lcall
xchg
sbb
pop
movsl
pop
sbb
int
ss
xor
ljmp
out
stos
or
cmp
jmp
add
js
stos
pop
inc
add
mov
jbe
xchg
jbe
in
es
push
in
dec
dec
cld
scas
jns
xchg
cltd
mov
xchg
jae
fisttpll
shl
lret
ficoml
jno
scas
cmp
cmp
inc
test
outsl
mov
inc
push
leave
xor
sahf
popl
add
push
scas
cmc
jb
out
pop
adc
ds
shrb
jne
sub
mov
outsb
cmpsl
jbe
inc
lods
stc
dec
cmp
int
lea
sub
push
int
jecxz
inc
outsl
out
in
mov
and
mov
fcomp
sub
lods
popa
push
mov
cmp
imul
mov
pop
mov
mov
xchg
sub
cld
mov
in
fcmovnu
push
bound
push
xchg
xor
testb
xor
filds
xchg
or
lcall
add
cmc
inc
mov
mov
stc
jnp
arpl
jae
in
lahf
fucom
push
insb
xchg
mov
aad
lret
push
mov
push
sarb
or
sub
push
mov
cld
imul
cmp
mov
add
addr16
fcoml
cmp
xchg
inc
xor
fadds
push
out
xchg
idivl
enter
pop
cli
nop
cmp
push
push
fimull
jp
movsl
std
ss
mov
mov
mov
inc
arpl
lret
cltd
xchg
adc
out
faddl
stos
add
cmp
jno
mov
cld
adc
jns
call
xor
xor
cmp
nop
and
ds
cmp
dec
push
pop
sub
inc
mov
leave
cmpsl
mov
mov
imul
dec
das
adc
dec
lock
mov
arpl
rol
and
push
idiv
cmp
push
cmp
cmpxchg
mov
test
mov
imul
jg
addr16
insl
in
into
and
xchg
shl
adc
xchg
sbb
dec
imul
dec
imul
testl
sub
jno
enter
pusha
mov
pop
fsubrl
push
xchg
in
inc
incb
bound
jae
push
cli
cmpl
push
mov
shl
adc
adc
mov
dec
inc
clc
scas
jl
add
xor
aam
js
xchg
push
xchg
lret
insb
test
push
dec
and
push
jecxz
clc
imul
add
mov
sub
xchg
xor
stc
stos
repz
inc
pop
loopne
scas
mov
adc
and
es
pop
mov
int3
mov
out
mov
mov
ja
push
lahf
fimull
sti
fmuls
add
lods
cmpsl
mov
sub
lods
sbb
mov
mov
add
sub
dec
or
dec
out
arpl
out
sbb
xchg
jp
pop
xchg
mov
stos
pop
and
adc
mov
loop
insb
fdivrp
rcr
test
sub
pop
lock
retw
cmpsl
jle
aad
aad
lcall
cld
fisttpl
aam
cld
or
push
in
push
movsl
shlb
iret
jg
jae
pop
mov
sti
or
movsb
enter
int
and
out
cmp
pop
stos
pop
out
imul
loope
dec
or
movsl
scas
dec
fdivs
in
in
or
mov
aas
cmp
push
ja
test
rol
pop
jle
std
adc
jnp
xchg
pop
shll
fs
out
push
pop
dec
outsb
push
cmpsl
out
iret
mov
jge
pusha
xchg
jl
or
cmp
sub
lea
outsb
es
outsb
rcr
out
or
mov
jp
pop
int
pop
inc
imul
pusha
stc
add
mov
cld
mov
jp
jbe
insb
je
ffreep
mov
out
push
adc
fsts
stos
jp
dec
cwtl
sbbl
jae
mov
jae
arpl
aaa
test
adc
mov
fcoms
gs
dec
mov
add
incl
scas
pushf
popa
test
aas
inc
jl
pop
sub
out
movsl
adc
rcrb
sub
test
push
or
pop
lcall
ret
in
cld
xor
aam
scas
mov
int
je
les
stc
add
cmc
mov
sub
repz
or
outsb
sub
fisttpll
inc
movsl
outsb
and
xor
loop
icebp
pop
addl
enter
mov
sarb
add
push
lods
addl
jbe
pop
mov
mov
std
mov
or
and
ja
pop
aas
pop
add
dec
or
stos
loope
test
clc
in
gs
cltd
mov
mov
cmpsl
xchg
cmp
int3
and
push
nop
sub
jno
inc
int
add
inc
xchg
sub
sti
adc
xchg
xchg
mov
test
int
cmp
loope
out
add
jbe
or
push
ljmp
dec
or
les
mov
in
sbb
jns
addr16
data16
shlb
jb
sbb
and
in
mov
fidivrl
ret
push
push
loopne
incb
adc
shrb
inc
mov
popf
and
hlt
movsb
sbb
incl
adc
out
daa
and
subb
out
xchg
int3
test
xlat
jb
mov
pop
enter
push
sbb
dec
mov
or
outsl
scas
aas
adc
jecxz
pop
cmc
adc
insl
dec
pop
fwait
jo
add
push
leave
or
mov
aam
ljmp
pop
dec
clc
mov
sbb
cmp
xor
inc
pop
aas
mov
dec
inc
addr16
imul
pop
clc
inc
xor
mov
sbb
das
lcall
daa
das
inc
pop
xchg
push
pop
in
adc
icebp
pop
adc
and
lea
cmpsl
xchg
jecxz
stc
and
ret
cmp
push
in
lret
sub
pop
lea
fistl
sub
cltd
xlat
test
testb
mov
out
pop
cmp
dec
lcall
icebp
jne
sahf
lahf
nop
xor
pop
into
inc
movsl
pop
and
ret
push
mov
dec
scas
push
cs
pushl
pushf
insl
ljmp
notl
jno
orl
sbb
lods
mov
jo
xchg
and
mov
mov
pop
sub
ja
add
cmc
test
addr16
sbbl
jae
je
ljmp
mov
gs
fwait
cltd
inc
iret
push
stos
clc
addr16
les
repz
mov
mov
lods
frstor
push
adc
nop
jge
imul
lock
pop
adc
jne
icebp
inc
test
xor
mov
adc
fimull
mov
ret
mov
addb
adc
jge
in
or
sarl
aad
jo
aad
mov
add
je
lea
mov
ret
in
sbb
insb
inc
gs
cmp
mov
cwtl
sbb
cmp
add
orl
leave
pop
xor
ljmp
and
jecxz
out
daa
jb
mov
push
cli
jmp
inc
xchg
scas
push
insl
and
xchg
rol
repz
push
mov
rep
notb
mov
shll
mov
scas
push
cmc
cltd
xchg
bound
cmp
or
dec
sbb
inc
inc
rcr
fldt
test
mov
sbb
pop
inc
jne
std
pushw
and
mov
inc
jl
lods
cmpsl
jp
push
enter
or
mov
cmp
adc
fsubrl
inc
sub
push
xchg
imul
test
out
call
pop
xchg
mov
mov
mov
sub
sahf
cwtl
push
popf
xor
sbb
sub
ret
sbb
pop
test
push
add
push
out
arpl
cwtl
cmp
xlat
fimull
add
sbb
movsb
xchg
or
mov
jge
xchg
aam
sti
psubusb
add
pusha
ret
push
ds
fistl
dec
test
js
jp
lea
mov
fst
int3
mov
aad
sbb
movl
loop
arpl
xchg
insb
mov
dec
inc
sbb
sbbb
insb
jecxz
lea
out
outsl
fdivp
in
cli
bound
fimuls
pop
fisubs
stos
enter
sbb
sub
push
sbb
rep
xchg
add
popw
pop
sbb
inc
test
xchg
inc
gs
sub
push
lds
sub
out
pop
mov
push
mov
mov
out
ret
sti
mov
popf
sub
aam
sti
mov
jmp
xor
pop
jo
sub
rclb
inc
push
pop
and
sub
xchg
lods
filds
adc
bound
sbb
xor
mov
out
movups
sub
pop
xor
mov
repnz
aaa
dec
push
fldl
mov
sbb
scas
ret
shlb
add
jmp
jbe
and
ljmp
test
push
jmp
lods
pop
and
add
shll
push
int
mov
frstor
xor
loope
jno
insl
mov
mov
xor
cs
icebp
xchg
orl
sbb
cwtl
subl
xor
dec
test
enter
cld
mov
jmp
push
popf
sub
push
sub
mov
xlat
iret
pusha
xor
inc
shrl
clc
movsb
dec
mov
hlt
iret
pop
rcrl
arpl
sbb
outsb
mov
cmp
mov
pop
filds
jge
stos
mov
nop
sahf
repnz
fildl
jbe,pt
cmp
ss
sbb
push
imul
push
repz
adc
jns
mov
push
and
pusha
pusha
push
mov
pop
jle
jp
lock
xchg
pop
xchg
fwait
xchg
mov
dec
repz
out
fldcw
push
adc
fadd
mov
push
pop
mov
icebp
cmc
mov
mov
adc
push
xchg
mov
gs
ds
inc
jb
mov
repz
mov
into
pop
xchg
aam
mov
mov
xor
xchg
jo
mov
iret
xor
inc
xchg
cmp
and
fwait
lret
lcall
push
xor
push
push
push
stos
addl
mov
test
jmp
ds
loopne
xchg
fstpl
mov
lret
into
cmp
test
xchg
ss
repz
xchg
mov
ret
inc
lcall
ds
xor
fistpll
mov
insl
icebp
adc
jns
cld
sahf
in
jnp
je
adc
mov
fldt
mov
xlat
fidivrs
and
sub
add
cmpsb
cmp
cmp
ret
lods
cmc
aas
pusha
inc
inc
cmp
xchg
cmp
hlt
pusha
loop
mov
inc
ds
mov
push
lret
cmpsb
mov
mov
jge
mov
loopne
in
mov
jecxz
dec
loope
push
add
sbb
jecxz
icebp
lret
outsl
add
loopne
add
inc
push
pop
dec
mov
in
jge
sub
cmp
out
pop
dec
xchg
inc
jmp
gs
fldl2t
cltd
int
addr16
dec
or
dec
movups
inc
jns
call
lods
and
mov
pop
pusha
lds
mov
ds
out
iret
nop
inc
pushl
push
fdivp
rorl
dec
jmp
mov
mov
and
push
jmp
ret
mov
mov
popa
mov
mov
dec
ret
sub
fdivr
mov
add
into
std
dec
mov
add
xchg
lahf
cmp
push
loop
rcrl
daa
add
xchg
idivl
lds
mov
jge
mov
jo
sub
jmp
movsl
mov
clc
popa
test
in
test
mov
or
mov
test
cmc
mov
push
mov
out
adc
or
jecxz
popf
pop
orl
nop
push
lret
rcrl
adc
lcall
dec
pop
pop
adc
in
pop
pushl
adc
mov
fs
sbb
xchg
adc
xchg
inc
and
add
pop
xlat
sti
loop
ljmp
xchg
mov
stos
outsl
xchg
xorb
sub
sbbb
dec
push
mov
push
in
inc
xchg
xor
int3
dec
dec
in
mov
cmpsb
call
shll
enter
scas
loop
ss
jge
ret
or
aas
mov
add
imulb
or
js
jnp
xchg
mov
fcmovnu
pop
js
out
and
mov
mov
sti
push
in
sarb
int
xchg
push
ljmp
icebp
jmp
fldt
addl
mov
mov
mov
pop
inc
jb
stos
mov
cs
push
addr16
push
push
in
orl
mov
mov
inc
icebp
nop
mov
pop
rorl
pop
loop
mov
mov
mov
movsb
dec
cmc
sbb
adc
push
ret
mov
roll
fmull
jg
imul
pop
icebp
aaa
icebp
adc
xor
jne
fs
cmpl
dec
jns
dec
and
hlt
jecxz
adc
adc
push
repnz
andb
hlt
sub
data16
jp
push
jp
ljmp
jno
fs
jo
cs
mov
xlat
shll
sub
mov
call
jge
or
shr
jle
fcmovnu
mov
clc
pop
push
loopne
lret
nop
subb
leave
bound
xor
fs
lds
xchg
pop
adc
push
or
mov
adc
popl
jge
dec
xor
mov
add
sbb
lea
iret
ret
cmp
popa
xchg
pop
mov
outsb
stos
scas
inc
sbb
cmpsb
pop
xor
sbb
inc
jne
addr16
pop
mov
or
repz
jle
leave
xor
mov
push
pop
pop
adc
add
xchg
pop
and
cmp
lods
pop
lret
mov
push
mov
mov
mov
cwtl
ja
add
mov
mov
test
ficompl
addr16
push
imul
fisubrs
loopne
mov
vmaxsd
or
loopne
in
in
pusha
sbb
lds
add
and
xchg
ret
pop
add
jo
sarl
xor
mov
dec
cmp
fsubp
pop
scas
push
ds
ljmp
push
es
push
adc
inc
cmp
xor
cmp
lret
inc
adc
pop
mov
sbb
mov
add
cltd
cli
aas
add
cmp
pusha
enter
sbb
mov
enter
pop
lcall
xchg
mov
loope
stc
aas
dec
add
setle
stc
insl
xchg
jo
roll
sbb
jecxz
arpl
ret
andb
movb
out
push
dec
lret
and
dec
out
pop
sbb
mov
loop
loop
and
fistps
jg
inc
fsubr
xchg
inc
sub
daa
jno
cs
cs
cmpl
ds
aas
repz
xor
pop
or
enter
dec
mov
clc
stos
sbb
mov
pop
pop
cmpsl
sub
add
push
aad
ja
mov
idiv
pop
sub
or
sarb
pop
adc
pop
leave
jg
adc
daa
outsl
dec
int
and
rorb
dec
mov
ss
sub
jmp
cltd
adc
insb
or
into
call
movsl
xchg
xchg
adc
inc
jns
jmp
stos
dec
lret
pop
jb
dec
add
inc
fisttpl
clc
insl
adc
dec
and
call
inc
hlt
icebp
jl
sete
push
inc
aaa
and
imul
hlt
pop
xor
in
lds
mov
and
out
jnp
inc
subb
insb
xchg
movsl
adc
gs
out
mov
mov
pop
pop
jo
jg
lret
insl
loopne
clc
jno
icebp
into
mov
mov
movsl
mov
call
add
or
sub
push
pop
punpckldq
mov
cmp
bound
rcrl
pop
addr16
jmp
int3
andb
insb
xor
jle
outsl
js
mov
fxch
jns
sbb
and
jb
mov
mov
out
lds
cmp
lods
lods
push
aam
call
xchg
aad
jge
bound
lods
jns
inc
sbb
add
jecxz
mov
loopne
xor
shr
cmp
pop
cmp
movsl
add
mov
int3
and
arpl
dec
int3
daa
out
pop
lahf
mov
jne
mov
imul
enter
dec
or
xor
xchg
arpl
int
xchg
cmp
mov
mov
sub
xor
dec
cmp
jle
mov
lods
repnz
mov
sbb
xor
sub
nop
repz
adc
sub
sub
pop
dec
xchg
pop
fcmovbe
enter
test
fstpl
in
adc
into
and
fwait
popa
pop
adc
fimuls
outsl
push
cmp
pop
mov
jno
inc
mov
xchg
sbb
lods
cmp
rcrb
inc
sti
fwait
int
test
mulb
andb
jns
xor
aaa
xchg
add
jo
sub
jae
fxam
ficoms
pop
inc
out
sarl
stc
loop
or
movsb
mov
loope
mov
jmp
mov
addr16
mov
dec
cltd
jbe
fs
push
mov
add
imul
ret
sbb
mov
add
pop
out
fldl
or
fisubrl
add
out
xor
jnp
jmp
lds
loope
scas
or
push
stos
push
ljmp
adc
rclb
popf
test
int3
fimuls
adc
xchg
call
mov
or
lret
pop
and
jb
sub
inc
imul
dec
rolb
hlt
dec
es
dec
push
testl
jg
cmovne
or
jns
mov
je
icebp
or
iret
int
jno
jg
mov
pop
mov
and
lods
jno
negb
mov
mull
sub
and
pop
xchg
sbb
jb
or
jp
push
and
lahf
cmp
clc
lea
push
mov
ret
sbb
xchg
mov
mov
cli
ljmp
inc
or
das
xchg
pop
movsb
push
xchg
pop
sub
jnp
cmpsb
negl
and
lods
inc
fcompl
fcmovne
push
popa
mov
push
cmp
jne
push
mov
out
repnz
xchg
xchg
movsb
popf
bound
mov
pop
or
rcrb
aas
lret
push
cmpsl
cmp
pop
mov
pusha
sbb
hlt
dec
aam
xor
add
push
xor
adc
call
dec
xchg
stc
cmp
ja
or
in
lods
pusha
add
xor
fstpt
out
mov
fidivrs
mov
clc
dec
cltd
sbb
imul
enter
cmp
inc
mov
enter
push
bound
lret
inc
jl
lods
push
daa
lods
imul
arpl
add
dec
xor
leave
hlt
cmp
push
pop
mov
sbb
xor
inc
arpl
jg
xchg
mov
jecxz
out
aas
add
aas
mov
sub
push
pop
push
xor
add
in
xchg
aaa
cmc
jge
fiadds
outsl
sbb
outsl
xchg
adc
out
filds
pop
jno
dec
mov
arpl
jb
lret
dec
add
ffreep
int
add
pop
mov
outsl
fisttpl
push
std
and
cmp
lar
sub
les
mov
lret
cmpsb
sub
xchg
arpl
daa
jo
mov
in
xor
cli
xchg
in
dec
stos
das
and
or
iret
adc
outsb
lea
mov
inc
xchg
jo
clc
cmp
leave
insl
fnstenv
jg
jge
xchg
mov
push
fnstcw
cmp
pop
scas
outsl
xor
pop
in
jnp
add
xlat
pop
pop
call
test
or
nop
test
mov
adc
xchg
out
mov
or
mov
and
mov
shll
dec
int
outsl
das
cli
mov
cltd
lret
sbb
xor
orl
push
pop
mov
xorps
leave
es
sub
jb
fwait
shl
popa
mov
xchg
cmp
popa
pop
lret
lods
push
fildl
cli
mov
cld
popf
xchg
and
lds
andb
fmull
test
mov
les
jl
pop
arpl
mov
cld
adc
dec
fbstp
cltd
pop
popa
sub
rcll
out
rclb
push
pop
jnp
or
lahf
dec
and
add
pushf
dec
xchg
mov
mov
dec
mov
aaa
cmp
test
subl
das
stc
xlat
lds
dec
cmp
mov
aas
jmp
jb
fimuls
jp
cld
int3
xor
in
sahf
mov
jp
mov
mov
imul
sub
shl
bound
add
add
mov
into
or
push
mov
outsl
imul
fwait
repz
shrl
xor
adc
jo
xchg
jl
mov
xor
pop
fs
sar
je
inc
repz
movsb
ljmp
push
jg
loope
call
push
sub
mov
lahf
push
cmp
bound
mov
in
jne
rol
add
inc
movsb
movb
clc
ret
sar
xor
test
jg
call
mov
jnp
cld
stc
pop
jl
sbb
jle
push
adc
jo
leave
je
into
mov
pop
fadds
mov
xchg
fwait
pop
mov
mov
xor
jbe
clc
pop
loope
xchg
xchg
in
ds
jmp
mov
xor
mov
scas
pop
in
inc
loopne
nop
pusha
in
adc
sti
mov
and
pop
mov
int3
negl
pop
dec
call
mov
adc
push
mov
mov
fildll
fld
inc
sub
sub
sbb
aam
sub
xor
and
adc
mov
leave
and
jle
jg
stos
adc
cld
jle
jmp
pop
aas
cmp
addr16
cmc
stos
push
mov
aad
aad
jmp
lret
sbb
and
sar
pop
mov
mov
jns
jecxz
or
pushf
mov
mov
dec
popa
inc
enter
addr16
mov
mov
jb
xor
mov
divl
gs
push
mov
sbb
lds
iret
inc
and
imul
cmp
ds
dec
lahf
dec
xor
push
popa
cmpsl
mov
mov
mov
outsb
pop
add
and
xlat
fwait
mov
sbb
xchg
pop
data16
jb
and
xchg
shlb
jp
mov
flds
int
mov
repnz
test
in
mov
out
jl
icebp
mov
or
jl
pop
lds
repz
adc
sbb
adc
popf
repz
adc
cmc
sbb
push
icebp
daa
inc
jge
and
into
stos
cmc
jle
mov
adcb
cmc
test
dec
cmp
in
aam
sub
in
xchg
rclb
adc
out
jecxz
es
dec
mov
sbb
gs
je
aaa
fdivrl
inc
mov
sub
ss
out
dec
cmp
negl
or
jns
std
mov
jmp
dec
push
pusha
pop
add
insl
in
and
sub
mov
pop
repnz
out
mov
add
inc
clc
mov
out
je
pop
xchg
pop
lock
out
and
lea
xchg
or
outsl
dec
dec
xor
push
inc
into
in
sbb
inc
cmp
test
lds
and
loop
pop
inc
cld
call
xorb
jecxz
in
je
ret
sbb
pop
xor
cli
hlt
test
loope
ss
lods
push
jns
vpcomuw
sahf
daa
push
js
add
dec
mov
push
xchg
pop
je
push
xchg
mov
inc
inc
adc
push
enter
cmc
jno
push
mov
sub
es
or
push
lods
push
pop
int3
push
xor
cld
cld
clc
or
cmp
pop
movsb
data16
insb
mov
loope
imul
cld
jns
mov
cltd
imul
xor
mov
shll
mov
cmp
lret
bound
jns
cmpsb
pop
dec
sahf
std
gs
je
cmp
push
pop
fucom
jmp
scas
insl
mov
lods
mov
addr16
dec
jmp
cld
ja
cmp
pop
ss
inc
fs
data16
sbb
dec
mov
dec
inc
adc
jecxz
pop
sahf
in
mov
xor
push
lock
push
pop
data16
ficoms
mov
sbb
mov
fsubs
test
and
scas
fdiv
hlt
push
inc
pop
les
fwait
out
sbb
or
cmpsl
sbb
push
stc
add
out
jcxz
push
or
stc
repz
movsl
stos
inc
fdivrs
xor
stc
dec
sub
syscall
mov
fisttpl
push
mov
into
xor
aas
rcrb
cltd
scas
dec
fwait
rol
rolb
je
or
js
popf
das
push
xchg
xor
sbb
lock
inc
arpl
popa
rcrl
push
ficoms
fadd
sbb
inc
or
dec
in
dec
mov
in
mov
fildl
std
pop
mov
mov
xor
lret
je
adc
push
int3
add
repnz
add
je
or
hlt
inc
nop
sbb
roll
lret
fidivrl
push
adc
lcall
push
lds
jp
cmp
xor
cmpsb
xor
out
scas
push
pop
into
pop
inc
jg
mov
ret
cmp
and
jmp
outsl
mov
xlat
lret
mov
pop
push
pop
daa
cli
inc
push
test
jmp
push
insb
leave
sub
mov
jge
sbb
loop
aam
inc
ret
mov
jae
icebp
repnz
adc
addb
push
adc
push
sarl
pop
ret
ds
rcrl
push
divb
xchg
mov
scas
popf
jle
push
call
cltd
push
xor
outsb
cld
mov
cmp
pop
sub
inc
test
outsl
ret
je
cmovl
repz
mov
jb
fldenv
pop
mov
sti
jecxz
movsl
sbb
lods
dec
push
inc
jmp
and
push
xchg
or
mov
pop
adc
in
jge
mov
dec
les
or
das
inc
aas
orl
cmp
fiadds
pop
cmp
mov
sbb
test
loope
push
cmpsl
mov
pop
aam
rcll
mov
xchg
push
push
into
mov
movsl
pushf
jae
pop
sub
push
xor
sarl
jle
sahf
jge
add
xchg
cmpsl
mov
inc
aas
inc
or
fstpt
rcl
xor
fidivrs
xchg
mov
aaa
add
jp
arpl
addr16
or
dec
idivl
and
sahf
pop
add
in
add
fnstcw
test
mov
clc
add
sbb
lcall
mov
stos
xchg
out
add
mov
addr16
insl
pop
mov
adc
enter
and
idiv
aad
fdivrp
adc
push
dec
test
pop
adc
push
fwait
jno
leave
or
daa
xchg
sub
es
aad
loope
rcll
dec
mov
push
jmp
jns
notl
sbb
push
aad
and
xchg
mov
test
mov
addr16
mov
and
stc
out
movsl
out
xchg
outsb
idiv
push
sub
inc
cs
xchg
in
dec
sub
iret
jo
add
mov
jle
stc
in
push
into
cmp
inc
xchg
jp
std
sbb
out
pushf
bsr
mov
xchg
push
sbb
push
sub
fcmove
test
insl
xor
insl
xchg
push
and
xchg
fdivrs
sahf
mov
icebp
mov
js
mov
cltd
jge
sbb
xchg
jbe
fwait
mov
test
aad
in
loopne
shlb
adc
pop
aas
sarb
xor
xchg
xor
popa
in
xlat
push
pop
cmp
inc
push
mov
add
addl
sbb
adc
daa
repz
dec
mov
fists
push
push
cmp
scas
scas
push
lcall
adc
and
mov
push
arpl
mov
mov
fwait
inc
sbb
dec
in
mov
inc
hlt
push
jb
sbb
mov
lods
cli
cmp
roll
test
dec
cmpsl
mov
shrl
xchg
mov
cli
jae
and
andl
rdpmc
cmpsl
push
cli
add
pushf
ds
xchg
xchg
dec
mov
out
mov
int3
lock
ljmp
lcall
scas
cmp
test
or
movsl
pop
fstpt
and
jb
jge
scas
les
std
sub
add
in
insl
lods
fidivrl
in
hlt
imul
pop
icebp
movsl
sbb
cmp
addb
jmp
xor
mov
icebp
enter
repz
push
and
out
adc
fdivp
mov
and
loopne
push
xchg
or
loop
jns
cld
and
rep
jbe
xchg
dec
imul
mov
cmp
ret
cs
sbb
jno
test
add
test
dec
scas
outsb
leave
lret
insb
aas
mov
loope
cmpsb
pusha
mov
dec
addr16
cmp
adc
fldenv
pop
pop
sahf
sbb
add
popa
sbb
add
sbb
sub
lret
pushf
mov
push
sub
mov
fldl
mov
push
call
in
insb
pop
or
xor
insl
ja
jo
xchg
outsl
cmpsb
sbb
inc
sbb
das
jnp
mov
jb
sub
jp
outsb
jns
mov
div
adc
add
pop
mov
add
inc
fdivr
test
loope
mov
shl
lret
arpl
inc
popf
xchg
mov
xchg
stos
dec
jno
jo
mov
insb
cmpl
xchg
sub
mov
push
sbb
add
clc
dec
out
lahf
out
and
gs
mov
or
loopne
push
dec
xlat
cld
test
in
jge
xchg
out
sbb
icebp
out
add
xor
lea
sub
ja
subl
push
sbb
mov
xor
sahf
mov
test
daa
jp
mov
mov
shlb
pop
sbb
pop
mov
mov
repnz
pushw
insb
xlat
push
enter
std
mov
aam
pop
sbb
call
jne
test
sub
int
hlt
mov
push
xchg
add
and
jle
lcall
jno
fcoms
or
jecxz
jecxz
inc
test
popf
mov
push
jo
les
push
test
ret
pusha
or
sbb
sub
incl
inc
stos
mov
pusha
movsb
bound
iret
cmp
fsubrs
add
jo
outsl
adc
imul
loop
js
int3
mov
mov
aas
inc
clc
add
lods
xor
or
xchg
ficoml
sbb
mov
jg
jl
mov
add
jg
ljmp
sbb
insb
pop
dec
ret
roll
lret
mov
repnz
and
jo
test
add
sbb
shrb
ds
insb
jnp
adc
repnz
push
or
adc
mov
mov
xchg
test
nop
sub
rorl
and
aam
je
gs
lock
setnp
loopne
gs
loop
adc
mov
inc
stos
ret
mov
cwtl
stos
clc
xor
cmpsb
sarb
add
pop
je
and
jge
mov
out
mov
aam
es
imul
mov
out
or
xor
sub
ljmp
test
cmp
sahf
dec
xor
test
pop
and
cmp
sbb
jp
popf
adc
pop
mov
outsb
mov
xchg
sub
cli
sbb
xchg
faddp
sti
mov
mov
mov
xchg
outsl
cs
add
mov
jns
imul
dec
xor
inc
push
adc
mov
or
push
sub
mov
scas
lds
in
xchg
push
cmp
repz
int3
fxch
push
arpl
push
fldpi
inc
xchg
out
cmp
cli
add
addl
rcrb
mov
mov
cmp
leave
sub
in
sbb
push
inc
pop
inc
mov
fwait
fadd
mov
mov
aaa
inc
mov
ret
das
std
std
adcl
mov
mov
adc
out
pop
xchg
push
mov
fistpll
test
push
es
dec
decl
rcrb
inc
mov
flds
mov
ja
in
sbb
in
and
mov
daa
dec
mov
cmp
enter
fsts
jb
int
out
mov
or
cltd
std
sbb
repz
outsl
repnz
pusha
mov
sub
aas
mov
mov
movl
inc
jp
mov
shlb
out
cltd
sbbb
dec
aas
mov
cwtl
test
lods
jecxz
cmp
das
lds
rorl
mov
lcall
xchg
mov
fisttps
xchg
mov
mov
stos
sbb
adc
sbb
iret
or
hlt
mov
subl
ja
xchg
jnp
es
xor
test
in
in
pop
rorl
cmp
int
fs
in
popa
cmpb
bound
stc
mov
orb
push
dec
cmp
push
jle
ret
adc
icebp
pop
cld
inc
repnz
inc
repz
mov
push
xlat
mov
ss
push
lods
pop
pop
mov
nop
mov
xor
pop
call
je
fisubrs
iret
adc
mov
les
xchg
ret
sbb
xor
mov
fwait
or
loope
lods
js
pop
lahf
sub
shlb
and
test
or
aad
cli
mov
sub
ror
sahf
outsl
pop
int3
add
imul
mov
add
inc
shr
mov
mov
push
inc
lret
ret
out
inc
cmp
cmc
fadd
mov
dec
mov
ficoms
ficompl
stos
cwtl
lods
cmp
add
pop
push
inc
xor
add
pushf
push
xor
pop
dec
or
mov
push
push
cmp
or
cmc
sub
lds
jmp
and
insl
lret
dec
sti
leave
iret
lahf
in
pop
test
sbb
pop
xor
jmp
lds
mov
jle
mov
lea
pop
cs
cmp
jns
scas
enter
shrb
pop
jg
sarl
loop
push
ror
dec
ficomps
gs
add
orl
leave
xchg
sti
xlat
and
pop
rcll
mov
mov
mov
pop
rclb
push
mov
mov
dec
je
inc
stos
jb
int
mov
clc
mov
repnz
mov
cmpsb
mov
pushf
imul
add
leave
push
push
mov
movsl
xor
data16
cwtl
pusha
test
mov
xchg
insb
sbb
pusha
test
jl
pusha
xlat
cwtl
sbb
mov
into
add
lcall
mov
sbb
xor
sbb
xchg
mov
insl
mov
rorl
fcmovu
xor
pop
and
lea
loopne
insb
jno
and
add
jne
out
xlat
jle
fstps
or
pop
lods
mov
sub
mov
pusha
cmp
orb
cmp
fisttpll
push
std
out
stc
repnz
in
mov
sub
add
pop
jb
mov
in
inc
sub
movsb
xor
fwait
jg
pop
xchg
std
out
js
sub
aas
popa
sub
xor
cmp
sub
cvtdq2ps
lods
movsb
or
das
nop
lods
and
pop
inc
sub
das
xchg
jmp
fwait
inc
push
dec
leave
fnstsw
push
mov
andl
cmp
mov
add
popa
popf
bnd
fucomip
lea
clc
mov
or
mov
push
js
push
add
xchg
xorb
xor
stos
std
popa
mov
loopne
mov
xchg
and
ds
or
out
lcall
aam
orl
jns
pop
in
dec
inc
mov
rcr
stos
std
ds
lods
push
mov
mov
mov
cltd
ja
mov
xlat
sbb
stos
imul
sbb
test
mov
scas
dec
add
divb
dec
lock
test
aaa
and
bswap
test
push
lret
sbb
sbb
out
icebp
mov
adc
cmp
add
fidivrl
push
lods
or
inc
inc
mov
cmc
cwtl
add
lods
sahf
movsb
sub
aam
into
adc
imul
pop
lock
jns
fmull
cwtl
rcl
dec
in
mov
inc
test
inc
fisubs
or
cmp
cmpsl
inc
mov
js
imul
cwtl
inc
out
mov
mov
fimuls
push
sbb
repnz
shrb
add
stos
ret
dec
dec
sub
cld
mov
fidivs
push
cltd
out
add
xchg
pop
pop
rcr
or
lcall
lea
pop
mov
ds
pop
scas
lock
in
xor
xor
mov
cmp
mov
outsl
adc
pop
push
cmp
call
ret
jmp
aad
js
jl
jecxz
fstpl
ja
or
adc
xor
push
rcrb
dec
jbe
mov
popa
pop
xor
jno
imul
lahf
jmp
into
adcb
cmp
sbb
ret
jo
cmp
shrl
fcoms
mov
fldl
in
push
or
test
jo
pop
stc
xor
mov
fstpl
test
in
mov
iret
sbb
aam
push
push
test
pushf
aad
mov
dec
je
inc
hlt
sbb
out
or
jnp
loop
clc
sbb
xchg
xor
add
cwtl
fstpt
add
dec
sbb
filds
pop
adc
inc
inc
ja
xor
das
and
inc
mov
movsb
int3
out
and
cmp
fisubs
mov
or
jp
sub
enter
cs
jns
pop
call
out
and
cmp
jb
int3
xchg
mov
out
and
nop
leave
pop
and
sbb
dec
shll
sub
test
push
ljmp
lods
or
xor
mov
aam
mov
cmpb
cmpsb
cmp
sub
cli
fwait
xor
pop
lock
divb
scas
lock
push
xchg
jmp
mov
add
push
push
pushf
fcomi
add
xchg
jno
push
es
pop
xchg
jb
lock
cmp
sti
outsb
jae
icebp
addr16
mov
mov
fidivs
lret
sahf
cs
xchg
pop
lods
lret
mov
xchg
push
out
roll
xor
lahf
sar
je,pt
push
mov
inc
iret
sub
ljmp
fxch
outsb
xchg
jns
cmp
or
fstl
jmp
or
insb
add
insl
ret
out
xchg
subl
lcall
repz
fnstenv
test
lock
imul
xor
jb
cmp
fimuls
cmp
and
pop
jne
inc
push
in
sti
mov
int
repz
pop
sub
call
sahf
ss
call
jo
mov
jecxz
mov
jle
and
iret
flds
add
loope
or
mov
or
cltd
adc
roll
cmp
lahf
in
dec
xor
inc
inc
dec
mov
mov
daa
popf
pop
shlb
cmp
repnz
icebp
loopne
sub
lcall
pop
mov
cli
or
add
loopne
mov
filds
push
cmc
ljmp
in
jle
or
outsb
loop
idivl
rclb
sbb
dec
push
jo
inc
js
stos
mov
xlat
cmp
neg
mov
inc
and
dec
jo
popf
push
and
jle
sbb
sarb
int
sub
mov
cwtl
lods
scas
dec
repz
sar
mov
adc
cmc
mov
fiaddl
sbb
pop
cmp
and
out
or
jg
lret
adc
pop
rcll
adc
gs
fcompl
inc
imul
dec
in
pop
daa
ret
fsubrp
add
lahf
in
loope
sub
fldenv
or
mov
test
dec
pop
cmpsl
stos
add
scas
fdivs
insb
les
dec
outsl
rep
xlat
dec
sbb
adc
inc
pop
aas
mov
sbb
lods
jo
jbe
mov
mov
mov
push
mov
sbb
ljmp
add
lds
out
lret
sbb
fs
mov
ret
mov
mov
ret
dec
inc
lret
pop
cltd
inc
xor
cmp
sub
test
mov
daa
pop
aas
sub
mov
pop
lret
cmpsb
sub
push
stos
or
push
mov
mov
jge
sti
vfmsub231ss
into
popa
roll
dec
lahf
call
lret
jmp
lock
notl
hlt
cmp
mov
clc
and
ds
or
inc
shl
fs
aam
or
ret
pop
clc
pop
inc
daa
leave
inc
xor
and
jp
mov
in
shll
adc
jmp
and
aaa
and
testl
lret
jbe
stos
mov
jne
xor
push
sbb
test
and
jl
mov
inc
mov
mov
lea
fstpt
ret
jmp
and
popf
or
adc
adc
inc
jnp
jne
loop
outsl
loop
inc
xchg
or
rolb
mov
xchg
mov
pop
enter
jle
xchg
xor
inc
push
gs
xorb
les
dec
int3
ss
pop
mov
imul
js
and
inc
fimull
mov
paddq
popa
cli
push
arpl
adc
divl
rclb
popa
cmc
push
outsb
pop
aas
popa
repz
mov
les
mov
cmp
daa
push
mov
sbbl
pop
push
cltd
xchg
xchg
xor
int
pop
rcrl
shrb
or
sbb
sti
mov
es
out
ret
pusha
mov
shrl
nop
cld
fldenv
mov
push
rorb
xor
test
cwtl
add
sub
fisttpl
aam
stc
dec
clc
pop
dec
aam
in
loopne
cs
cmp
sbb
femms
mov
push
pop
jp
mov
ror
push
xchg
std
incl
pop
or
mov
sub
dec
int3
shl
iret
inc
and
add
sbb
lret
jmp
aas
inc
icebp
stos
mov
int
add
xchg
dec
mov
xor
sub
pop
lcall
xchg
xchg
add
mull
stos
xor
pop
cmp
call
xchg
inc
pop
movsb
push
and
cwtl
ror
dec
push
pop
out
fwait
in
sbb
fdivrs
scas
cmp
pop
inc
dec
xchg
and
xorl
stos
push
movsl
pop
push
dec
or
aas
push
pop
and
dec
fnstsw
mov
aad
je
pop
js
ret
xchg
mov
or
push
push
push
in
jmp
mov
das
shll
pop
imul
dec
outsl
ret
ret
aas
jg
inc
inc
mov
lret
shrl
setb
gs
adc
data16
cmp
xor
popf
mov
insb
mov
sbb
popf
sub
xor
jns
clc
shr
outsb
cli
js
push
inc
mov
mov
jle
imul
sub
cmp
xchg
sub
cmpsl
sub
addb
dec
sbb
out
cmpb
out
cmpsb
into
jnp
test
mov
ror
hlt
ja
cmp
mov
push
stc
pop
cmpb
bound
xor
push
in
enter
cld
xchg
lret
sub
xchg
aas
sbb
adc
cmovne
push
jbe
enter
movsb
mov
test
lods
inc
repz
movsb
cmp
push
and
inc
hlt
movsl
out
sub
pop
incl
push
dec
mov
inc
xor
cltd
dec
out
fwait
ret
lret
jae
pop
outsb
add
pop
mov
sub
inc
dec
xlat
pop
sti
sahf
mov
pop
sbb
scas
jecxz
pop
into
jl
dec
xchg
rcll
mov
sbb
dec
pop
pop
xchg
xor
daa
adc
out
inc
sbb
inc
pop
mov
ficoms
jmp
xor
xchg
sub
faddl
sub
incb
gs
out
push
sub
lcall
cmp
test
repz
outsb
outsb
ss
lock
loop
sub
or
orl
lds
das
and
into
xor
jno
dec
inc
fisttpl
lock
fstl
divl
push
loop
sbb
lret
fxch
scas
pop
hlt
loop
or
jnp
fs
xchg
pusha
popf
jae
out
adc
fs
shll
scas
inc
pop
mov
pop
dec
inc
and
inc
xor
stos
jecxz
out
dec
xchg
std
addr16
int
xchg
sub
cmp
or
mov
pusha
jae
pcmpeqd
adc
cmp
test
lods
inc
push
push
xchg
das
jecxz
imul
iret
movb
cmp
jg
xor
je
mov
sub
jg
fstpt
jmp
lret
xor
mov
mov
inc
cld
enter
jbe
pop
pop
add
mov
and
push
push
stc
sub
in
lds
ficoml
js
add
add
pop
sbb
xchg
or
aas
dec
cltd
add
orb
fidivl
push
jp
mov
mov
cli
fstps
in
scas
sbb
xor
xchg
fadd
test
mov
push
push
sub
mov
ret
fldt
es
imul
stos
xchg
or
xchg
out
xor
sbb
mul
ret
incb
jo
sti
mov
push
testl
repnz
dec
aas
bound
push
scas
jnp
add
cli
dec
mov
sbb
xor
jle
scas
addl
pop
fwait
lds
push
fstpt
fs
xchg
stos
sbb
cli
add
hlt
inc
jo
loopne
mov
push
incl
and
sub
mov
sub
add
negb
cs
xchg
mov
mov
sti
mov
out
jae
sarb
add
cmp
les
ja
mov
movsb
xchg
shlb
fiaddl
mov
je
inc
push
mov
or
lret
stc
cmp
frstor
sub
cmp
push
test
dec
sbb
sub
ja
mov
addr16
mov
and
pop
int3
sbb
stos
popa
mov
in
sbb
dec
xor
sbb
mov
fcompl
aaa
cld
and
nop
out
xchg
xchg
inc
out
pop
add
mov
out
popf
popf
dec
mov
idivl
add
jnp
push
adc
lds
cmc
mov
inc
jge
leave
mov
mov
stos
mov
pop
ret
sub
sbb
popf
in
fwait
inc
andl
out
dec
outsl
dec
mov
inc
pushf
bound
sub
gs
iret
cld
xor
test
outsb
aam
bound
jg
pop
ljmp
fstpt
inc
nop
push
dec
fiadds
inc
pop
not
das
nop
and
rol
es
jge
and
jo
sbbl
iret
jne
shrl
addr16
loopne
rcrl
add
dec
push
in
inc
inc
xchg
jmp
add
pop
testb
pop
rcrl
imul
inc
mov
add
imul
ds
mov
cmpsl
shlb
inc
push
add
cmp
ljmp
mov
xor
and
rcrb
fs
imulb
outsl
or
out
jl
pop
nop
cs
or
xchg
adc
lcall
mov
test
sbb
mov
aam
flds
shlb
pop
sub
xchg
out
nop
mov
sahf
xlat
rcrl
dec
imul
mov
pop
enter
inc
pop
xchg
imul
imul
out
in
and
pop
cmpsb
fldcw
cli
jne
ljmp
cwtl
pusha
jne
jle
mull
push
ss
out
jae
dec
mov
sbb
sbb
dec
add
mov
int3
mov
mov
pop
mov
mov
testl
xchg
pusha
pop
lods
mov
mov
test
mov
inc
sbb
push
cmpl
sarb
xchg
xchg
das
stos
addr16
shl
push
jb
ljmp
in
cmpsl
adc
cld
scas
leave
ret
sahf
adc
pop
inc
xchg
xchg
jecxz
or
mov
fs
mov
pop
mov
inc
pop
mov
fs
inc
xchg
repz
jl
mov
inc
loope
pop
or
std
scas
xlat
out
and
or
push
leave
push
inc
idivb
and
sarl
ljmp
xor
xchg
cmpsb
cmp
stos
in
mov
inc
fsubl
xor
fadds
out
add
sub
mov
jnp
xchg
fcoms
in
fsubrl
mov
jg
les
shl
sarl
inc
dec
fistpll
ja
jge
cwtl
dec
imul
or
add
mov
pushf
push
dec
int3
mov
cmpsb
jo
sub
arpl
push
sub
pop
sti
arpl
in
jae
sub
or
js
mov
mov
dec
addr16
jecxz
push
or
mov
mov
es
fidivrs
xchg
out
inc
idiv
imul
aad
dec
jle
mov
in
pop
jae
js
test
mov
cmp
mov
and
push
in
dec
xchg
icebp
loopne
push
leave
sub
lahf
xchg
push
push
xor
adc
inc
lret
mov
adcl
fnsave
sub
ret
sub
cmc
pushf
insb
cmp
scas
clc
addr16
ret
insl
scas
jl
xor
lods
mov
jmp
mov
push
adc
inc
mov
cmc
sub
push
cmpsl
push
push
xchg
rolb
dec
imul
out
sbb
jge
test
outsb
pop
arpl
test
hlt
cld
std
mov
pop
leave
add
scas
mov
sahf
cld
jle
mov
jl
fwait
sub
adc
xchg
ret
out
cmp
lret
enter
mov
lahf
cmp
mov
and
mov
les
jo
xchg
in
js
popf
scas
popa
mov
loope
out
jp
mov
jbe
pop
mov
mov
ret
mov
icebp
inc
push
mov
shrl
mov
xor
cmpsl
fstpt
push
mov
mov
jle
daa
cmp
nop
or
cmp
popa
push
fisubrl
fnstenv
loop
adc
push
sub
cltd
jmp
repz
jns
xorl
pop
mov
sbb
es
adc
sbb
outsb
adc
je
dec
les
sub
arpl
ss
loop
push
mov
stos
add
daa
sbb
jp
push
int
sbb
lret
cmc
mov
mov
cmc
mov
xor
sbb
mov
adc
xor
pusha
sarl
ljmp
mov
push
clc
movsb
xor
xlat
popa
xchg
repz
and
cs
or
xor
cwtl
sbb
rolb
popa
iret
push
imul
outsb
fldl
stos
cld
call
or
loope
cmp
cmc
filds
inc
mov
inc
rolb
repz
xor
inc
leave
mov
xlat
es
sarb
push
in
dec
mov
insl
cld
jmp
xchg
in
sub
jl
loopne
test
aam
inc
fucom
inc
bound
cmp
push
or
outsl
xchg
in
test
stos
pop
lahf
incl
add
sbb
and
pushf
cmp
cmpsl
sbb
cli
inc
lea
inc
and
imul
shr
mov
inc
mov
cmp
stos
sbb
incl
loopne
adc
sub
inc
or
mov
or
int3
fnstcw
or
imul
pushf
ljmp
stc
xchg
or
lock
sub
mov
push
cld
repz
or
iret
lret
stos
popf
fnstsw
and
test
in
test
xlat
xor
xor
sub
jbe
sub
or
push
loop
repnz
test
jnp
outsl
movsl
imul
adc
es
js
cmp
in
sti
lds
push
jmp
stos
lods
stos
mov
jnp
and
xchg
and
popf
popa
movl
std
aad
ret
cmpl
pop
jge
fwait
in
rol
pop
inc
mov
fwait
add
cmpsl
nop
int
pop
das
rolb
cmp
ljmp
lods
push
mov
push
or
or
in
cmpsl
cs
xchg
es
into
lock
jns
push
sub
dec
insb
jmp
adc
repnz
addr16
lock
and
std
jg
dec
add
fsubrs
lret
insl
push
stos
daa
xchg
cmp
jnp
stc
lods
cli
and
xchg
mov
out
mov
inc
inc
fwait
push
shll
jnp
push
adc
inc
repz
popa
xchg
outsl
or
movsb
repz
xchg
jg
imulb
sub
mov
mov
push
xchg
or
xor
xor
in
dec
xor
pop
fmul
dec
ss
subb
test
jmp
cltd
repz
aad
in
cmpsb
imul
pop
and
ret
mov
sbb
lret
mov
arpl
inc
shrb
mov
lret
jb
sub
aad
out
lcall
repz
repz
jle
into
bound
call
repnz
jge,pn
call
negb
mov
lods
xor
shlb
cmpsl
and
push
sbb
in
popa
push
ja
fdivrl
inc
add
movsl
xchg
cmp
lock
inc
and
jns
lret
xchg
repz
lret
mov
ljmp
xor
fiaddl
mov
scas
add
ficomps
mov
cmpb
loopne
adc
mov
xchg
add
xchg
mov
xor
inc
arpl
lods
mov
and
pop
sub
lret
or
outsl
ds
pop
xchg
sbb
int3
out
test
mov
xor
jbe
aam
outsb
jmp
dec
clc
or
and
push
lahf
fidivl
fadd
sub
mov
pop
shlb
ljmp
in
push
jnp
sbb
fwait
loopne
stc
jmp
and
pushf
xor
push
dec
jg
push
insb
mov
xchg
fadds
xchg
fwait
pop
mov
pop
movsl
xor
enter
je
cmpsl
push
ja
pusha
sbb
push
stos
push
cmp
mov
mov
popf
xor
fnsave
test
scas
test
inc
iret
arpl
les
in
xchg
push
out
cmc
bound
push
jmp
int
xor
std
adc
mov
pop
mov
cmp
leave
dec
dec
pop
dec
test
lret
jo
lock
imul
pop
mov
adc
enter
test
adc
sub
decb
pop
cmpsl
test
cmc
add
sbb
push
mov
enter
mov
or
and
push
je
pop
ljmp
mov
dec
enter
out
add
push
pop
dec
and
lret
inc
or
in
ljmp
aad
std
xchg
outsl
imul
mov
ret
outsb
insl
push
bts
ds
arpl
jle
push
paddsb
or
js
xchg
and
jl
outsl
ret
sub
mov
ficoms
cmp
mov
sahf
out
fwait
or
xor
mov
mov
jnp
ret
xor
out
es
scas
pop
mov
xchg
add
pop
movsb
shrl
xor
std
mov
xorb
fisttpl
add
xor
and
dec
cmc
outsl
lock
int3
lret
dec
pop
scas
ja
jno
mov
icebp
pshufw
decl
xor
popf
jmp
arpl
mov
sub
inc
sbb
sbb
cs
push
push
or
mov
sbbl
imul
bound
mov
data16
cld
inc
pop
adcb
or
aas
movsb
mov
or
mov
push
dec
subl
push
ljmp
add
loope
lea
adc
and
sar
push
sbb
jp
dec
push
insb
jo
add
cmpsb
jo
xchg
out
sbb
add
or
loope
inc
insb
xor
stos
pcmpeqd
xor
xor
cmp
jp
jno
push
fmull
lods
pop
enter
jmp
mov
cmpsb
lahf
into
int
mov
fldenv
cmpsb
in
out
push
xor
pop
sbbl
xchg
call
jns
dec
adc
jbe
jle
cmpsl
out
in
shrl
into
cmp
hlt
hlt
insl
movsl
dec
sub
or
ret
add
or
movsb
cmp
inc
incl
movsb
sbb
cltd
push
mov
add
stos
cmpl
fidivrs
fnstenv
xchg
push
out
movl
fsubrs
pop
cmp
stos
inc
lds
loopne
xchg
adc
mov
lcall
je
mov
jl
mov
adc
sub
out
jns
stc
stc
dec
mull
pop
inc
xor
inc
test
add
pop
jb
lock
lods
add
pop
clc
enter
dec
nop
cwtl
std
les
inc
adc
inc
mov
and
and
mov
or
inc
arpl
sub
adcb
adc
pop
sahf
nop
cmp
in
cmp
daa
xlat
pop
mov
js
shrb
push
lahf
mov
cmp
jp
push
cwtl
leave
sub
sub
and
cld
int
mov
push
imul
or
iret
add
insb
jge
jne
dec
enter
stos
push
fldenv
jle
xor
mov
divl
mov
sbb
mov
lcall
and
daa
mov
xchg
sbb
push
in
lea
jmp
outsb
out
xchg
cld
ss
dec
mul
je
xchg
dec
outsb
sarb
jl
push
mov
lret
mov
loope
inc
outsb
insb
subl
sub
cmpsb
sub
sahf
lods
leave
data16
adc
push
push
adc
inc
stc
inc
in
pushf
add
xchg
mov
shll
flds
ss
sbb
jae
cmp
sarb
xlat
sub
out
sbb
shrl
mov
hlt
sti
or
add
or
scas
jg
fsubrs
leave
inc
je
inc
lock
bnd
mov
cmp
mov
mov
outsb
subb
and
mov
push
int
mov
sub
inc
cmc
clc
xchg
aaa
xorl
mov
pop
push
pop
aaa
cwtl
leave
sub
ret
or
dec
sti
fildll
adc
push
xchg
sub
sbb
fldcw
test
test
mov
lea
sub
ficoms
aas
cli
test
scas
xchg
cld
mov
bound
jle
stos
dec
xor
mov
push
cmpsb
push
movsb
pop
inc
add
push
jb
jnp
inc
mov
faddp
mov
cwtl
in
aam
xor
les
jno
jecxz
scas
xchg
and
aam
ret
push
push
mov
xor
xchg
or
mov
cwtl
in
fwait
dec
or
fisttpll
sbb
mov
cmpsb
mov
and
daa
xchg
sub
mov
lock
and
repz
xchg
ljmp
or
push
xchg
call
mov
mov
xchg
push
sarb
test
dec
and
ret
and
sub
mov
or
xor
pop
sahf
repnz
movsb
pop
clc
and
fisubs
adc
push
push
pop
mov
sbb
adc
push
popa
cmp
mov
xlat
cli
jge
push
and
mov
repz
dec
pop
lcall
int3
in
into
sub
or
xchg
adc
fmull
dec
popa
push
xchg
push
xchg
xor
jo
loop
sub
sub
sub
sub
aas
cld
shll
aad
mov
std
pusha
pop
dec
xchg
cmpsb
daa
mov
icebp
jge
xchg
out
aad
loope
add
jl
movsb
into
mov
and
andl
fisttps
out
push
inc
xchg
test
loop
fcoml
adc
mov
mov
sub
jno
mov
cltd
stos
sbbl
xor
inc
dec
mov
xor
jo
sahf
and
aaa
mov
mov
fadds
pushf
or
pushl
dec
stos
imul
dec
pushl
xchg
push
mov
leave
lret
pop
or
fs
call
pop
popf
push
out
popf
in
les
cld
sub
mov
je
dec
mov
xor
lahf
data16
mov
xlat
sbb
add
pushf
xchg
cmp
lock
shll
sbb
fmul
movsb
mov
sbb
aad
insl
movsl
mov
movsl
inc
fs
mov
pop
push
bound
out
cmp
scas
mov
data16
sar
jb
cmc
sbb
neg
lret
pop
xchg
xor
data16
out
sti
loope
jl
shll
cmp
pop
scas
ljmp
shr
mov
jge
adc
movsl
push
inc
popa
mov
imul
je
cmp
sub
xor
test
jecxz
push
dec
pusha
dec
pop
fmuls
dec
rorb
lcall
daa
dec
ljmp
rcll
jmp
mov
add
add
sbb
mov
out
pop
fsub
push
sbb
jmp
cmp
ret
shll
inc
test
add
pop
push
sbb
frstor
arpl
mov
sbb
inc
mov
add
in
xchg
cmpsl
out
push
mov
testb
cwtl
add
leave
rorl
add
add
mov
lods
mov
sbb
push
mov
inc
nop
sub
loope
push
in
jbe
mov
sub
jle
aas
mov
lahf
mov
cmc
mov
loopne
sub
cmp
push
xchg
pop
mov
fstl
aas
into
sbb
pop
ds
add
mov
out
sahf
xchg
mov
out
dec
mov
cli
iret
in
pop
mov
repz
dec
sub
mov
mov
dec
shrl
hlt
dec
xor
jecxz
bound
inc
out
cmpl
roll
mov
sahf
outsb
imul
pop
jmp
xchg
mov
ljmp
push
or
bound
mov
dec
mov
push
mov
or
jp
push
inc
push
iret
xchg
push
or
testb
mov
mov
call
jle
iret
pop
fld
mov
idivl
sti
jae
ds
int3
xor
vunpcklps
dec
push
jb
rolb
in
enter
dec
xlat
hlt
lcall
aas
enter
movsb
ret
cmc
mov
pusha
je
jmp
clc
pop
cmpsl
cmp
bound
arpl
sahf
mov
mov
jo
and
arpl
daa
xchg
jecxz
cwtl
and
pop
outsb
andb
mov
jno
je
out
outsl
jnp
imulb
push
test
jno
mov
jecxz
repnz
sub
cmp
mov
popl
and
mov
jb
lcall
mov
lret
ret
bound
lods
das
loopne
adc
pop
in
imul
int
test
push
call
xor
xchg
into
and
test
out
inc
pop
mov
add
mov
xchg
ret
cmp
stos
xchg
movsb
ficoml
mov
mov
daa
std
pusha
jae
push
loop
push
inc
mov
inc
ja
pop
xchg
movsb
cmp
xchg
xor
jne
out
scas
fimull
fldcw
stos
push
xor
mov
test
add
mov
cmc
dec
or
push
aad
xchg
lea
mov
hlt
mov
fisttpl
and
cmp
mov
xchg
lock
subl
in
cmp
adc
ds
pop
mov
jp
dec
out
mov
xor
add
cmp
jle
or
gs
and
ds
notl
in
sub
sbb
xchg
add
in
in
dec
inc
mov
sbb
sbb
push
cmp
mov
cs
jmp
scas
stos
mov
inc
sub
int
pop
push
mov
cli
js
movsl
pop
xchg
aam
dec
je
lret
mov
test
pop
outsb
or
sub
mov
xchg
outsb
inc
jns
jo
ds
int3
xchg
push
call
jle
dec
test
add
xchg
push
mov
cmp
fs
adc
push
cmpsb
push
inc
xchg
incb
aaa
sub
loop
pop
mov
popf
stos
inc
push
sub
pop
dec
aaa
into
cmp
push
inc
sub
cmp
dec
sub
xchg
movsb
fildll
cmp
adc
mov
movsb
pop
push
cmp
xor
cwtl
orl
push
js
inc
xorl
ret
cltd
mov
cmpsl
out
mov
push
push
mov
rol
sbb
aaa
popa
mov
sbb
hlt
push
lods
daa
cld
sbb
push
mov
and
xor
test
push
cmp
jae
mov
ret
dec
jl
scas
push
push
test
xchg
adc
mov
push
jbe
xchg
mov
movsb
addr16
inc
outsl
and
leave
inc
iret
and
int
stos
xchg
mov
js
movsb
out
test
roll
test
xchg
cmp
push
jg,pt
and
mov
div
out
sar
or
test
mov
mov
dec
test
ret
imul
jge
mov
movsb
cmp
lret
add
movsl
imul
stos
xor
lret
jne
lret
sbb
xchg
fcmovu
and
loope
enter
dec
faddp
cwtl
or
add
pop
lahf
mov
leave
and
xchg
aam
cmpsl
addb
jnp,pn
push
scas
xchg
stc
daa
adc
mov
popf
insl
push
sbb
je
out
push
addb
cmp
int
push
addr16
add
cld
jle
loope
ss
cltd
fdivrs
shll
pop
mov
subl
add
jge
push
add
sbb
stc
cmpsl
jne
sub
testl
xor
test
mov
add
les
icebp
lds
dec
sbb
ret
inc
cmpl
ds
mov
in
fs
push
dec
int
xchg
xorb
dec
jbe
mov
mov
jbe
std
sahf
mov
adc
ja
push
or
jns
shl
sub
es
imul
push
cmp
xor
sub
cmp
lds
xchg
iret
mov
sbb
push
pop
jo
sbb
or
jmp
leave
lock
dec
sahf
hlt
mov
push
sbb
mov
adcl
neg
sub
leave
cmp
fsubrs
cmp
and
getsec
push
cmpsl
sub
jb
ret
in
scas
mov
pop
cmp
loop
cwtl
dec
mov
fists
ja
jne
jns
adc
loop
or
or
movsl
fdivr
dec
adc
inc
lock
rcrb
sbbl
sahf
pop
mov
addr16
xlat
xor
cmp
jnp
push
test
push
test
mov
mov
xchg
insb
push
xchg
mov
pop
dec
pop
icebp
enter
xchg
sub
fstpl
jne
jbe
dec
mull
imul
cmp
aam
jns
jmp
cmpsb
dec
and
into
roll
and
movsl
popf
lret
lret
mov
daa
jge
dec
or
imul
mov
hlt
stos
push
lret
pop
pop
or
lahf
cli
mov
inc
das
mov
pop
aaa
and
in
fcmovbe
inc
clc
jmp
adc
mov
shrl
iret
mov
xor
outsb
daa
fcomps
sub
adc
out
xor
inc
jae
xor
js
sbb
out
cwtl
fstpl
mov
and
jp
js
movsl
mov
cwtl
pop
dec
cmp
push
int
ds
dec
out
push
fnstcw
gs
scas
leave
jmp
jge
jl
js
das
ss
add
inc
rolb
cmp
shrb
push
subl
rcll
adc
jle
adc
cmp
push
cmp
mov
fistps
aad
jge
xchg
pushf
inc
dec
mov
add
jo
mov
pop
fistps
ljmp
aaa
xlat
shlb
cmp
inc
inc
lds
scas
enter
adc
mov
ljmp
dec
inc
and
arpl
dec
pop
bound
push
insb
movsb
mov
push
adc
adc
scas
out
mov
xchg
jb
dec
ret
xchg
lcall
sub
mov
not
iret
mov
cmp
outsb
mov
sbb
ss
inc
arpl
rolb
or
adc
adc
push
clc
aam
inc
mov
cmp
jp
in
call
adc
in
and
xor
pop
clc
js
xchg
xchg
sbb
push
or
mov
mov
pop
ds
xchg
shll
cld
je
or
pushf
out
movsl
xlat
mov
jmp
mov
in
movsb
out
xlat
mov
sub
or
mov
or
jb
mov
lods
not
inc
clc
rorb
adc
dec
aaa
out
push
imul
enter
out
xor
push
sbb
fcoml
popf
add
mov
icebp
loope
movsl
andb
je
mov
ret
neg
push
ss
pcmpgtw
icebp
fnstenv
cmp
inc
jo
inc
push
sbbl
xor
cltd
sub
push
push
cmp
add
int
loop
shl
pop
sbb
pop
test
pop
dec
arpl
adc
scas
leave
js
into
ss
lcall
and
cmpsb
ficompl
cmp
ljmp
fmul
fs
sarl
fnsave
jp
cs
cmp
push
testb
shl
inc
add
jecxz
push
mov
out
gs
jno
aas
jl
fwait
cmp
or
lods
sarl
jo
jns
scas
pushf
mov
sbb
es
enter
adc
ds
dec
mov
cmp
stos
clc
dec
jle
std
push
out
in
mov
cli
loope
hlt
cmp
mov
pop
xchg
jp
fs
std
sbb
jns
arpl
nop
mov
cmp
aas
mov
dec
movsl
xchg
sub
push
out
sbb
inc
mov
mov
xchg
stc
in
testb
adc
enter
lcall
pop
icebp
sbb
add
pop
jns
rorb
mov
mov
add
into
cltd
cli
call
mov
mov
adc
push
mov
dec
out
jns
data16
iret
outsl
push
iret
ret
shl
pop
arpl
xchg
gs
xor
ljmp
rol
mov
lods
enter
adc
lds
cld
mov
inc
jno
xor
push
filds
cmpsb
stos
clc
int3
push
out
arpl
sti
add
fs
in
sti
shr
into
shr
jne
inc
popf
mov
mov
imul
dec
xor
lahf
daa
dec
andl
scas
pushf
imul
push
bnd
les
adc
outsl
sub
mov
ret
loope
popa
mov
pop
cwtl
pop
add
add
mov
mov
and
imul
mov
jae
mov
test
popa
fadds
lods
add
xchg
sub
sub
mov
daa
enter
pop
cmp
test
sahf
inc
scas
push
pop
and
mov
mov
cmp
jnp
xor
mov
jl
push
pop
pop
movsb
mov
rol
aam
add
jo
sub
cmp
mov
xor
in
mov
daa
jmp
or
fsubs
sbb
pop
in
cltd
cmp
std
dec
cmp
rcll
enter
jnp
push
test
lock
push
inc
jns
ds
js
incl
sti
dec
stos
ljmp
rcrb
mov
pusha
ret
mov
dec
pop
imul
jmp
xchg
outsl
pushl
fcomps
and
xchg
sub
loope,pt
sahf
fisubs
hlt
adc
cmp
or
stos
sbb
mov
aad
push
nop
fldt
setno
loopne
dec
nop
leave
pop
mov
nop
adc
xchg
mov
jg
and
jno
jo
or
in
push
push
rorl
push
pop
mov
cmp
aaa
nop
pusha
inc
add
ret
in
fisttpll
mov
mov
mov
sub
es
rcr
or
cmp
rolb
push
mov
jge
cltd
cmpsl
push
or
out
aas
xor
mov
or
fs
aaa
sbb
xor
jno
add
rcll
pop
mov
scas
jns
lock
std
notl
push
mov
dec
xchg
mov
add
jbe
push
or
jnp
shrl
dec
rorb
cmp
movsl
add
mov
cltd
dec
out
stos
out
enter
push
lea
sub
xchg
push
add
shrl
aaa
or
pop
test
xor
sub
jg
fs
stos
push
add
pop
mov
test
dec
scas
mov
mov
sub
pop
pop
movsl
push
lahf
push
dec
test
cmc
add
fistpl
inc
filds
imul
mov
mov
into
push
ds
jo
adc
push
sbb
das
divb
xchg
and
fstl
loop
outsl
cltd
int3
jecxz
push
push
sub
fildll
fiadds
cmpsl
fistpl
sbb
jg
dec
push
mov
mov
dec
sbb
jns
cmp
cli
mov
and
mov
mov
add
std
stos
xchg
out
mov
mov
data16
insl
pop
cmpsb
cli
mov
stc
jmp
cmp
subl
loop
in
cmc
call
mov
pop
push
jg
std
int3
mov
xor
dec
adc
lock
add
sbb
icebp
jmp
push
rcrl
and
mov
mov
into
cmp
cs
iret
repz
jp
xchg
jge
popf
iret
test
dec
fwait
pop
adc
xchg
sub
and
insb
sub
fildl
mov
adc
movsl
and
mov
dec
loop
fcoml
popf
pop
cltd
hlt
mov
hlt
ljmp
add
insb
mov
mov
sub
adc
in
xchg
add
cmp
dec
dec
enter
inc
daa
je
scas
jge
xor
clc
pop
lods
pop
lahf
xor
and
dec
mov
or
push
xor
outsb
adc
sbb
fistpll
push
lea
aad
clc
cmp
mov
adcb
jo
daa
shlb
icebp
jecxz
out
adc
inc
adc
ret
xchg
and
leave
ret
sbb
and
sbb
pop
jno
rolb
lods
aas
push
mov
adc
lock
mov
loopne
jecxz
inc
pop
scas
ja
mov
xor
fs
stos
push
sub
cmc
not
adc
pop
pop
add
rcll
lods
lret
rcr
bnd
and
out
and
xchg
pop
stc
scas
mov
cmp
push
pop
xchg
dec
mov
push
cmp
mov
push
lods
insb
fmull
fsubp
scas
jecxz
adc
fmul
mov
pop
jl
pop
inc
cmc
out
xor
add
cmpsb
push
imul
scas
mov
enter
xor
popa
pushf
aas
popa
pop
push
in
fidivrs
mov
xchg
push
clc
das
stc
and
inc
mov
in
bound
lahf
movsl
fiadds
adc
lea
xchg
jne
sbb
add
ss
roll
xchg
xchg
cs
jbe
pushf
pop
lahf
jno
sbb
loopne
mov
inc
and
adc
fsubr
add
cmovle
out
fcoms
pop
imull
dec
xlat
jge
jbe
rcr
int3
cld
push
mov
sahf
jp
jl
mov
inc
mov
xor
movsb
das
add
iret
add
addl
mov
addr16
add
xchg
add
xchg
dec
sti
sbb
subb
mov
inc
inc
push
xchg
hlt
push
inc
xchg
inc
lea
mov
mov
cmp
lea
fcompl
adc
xor
bound
adc
sbb
ret
mov
inc
stos
fdivr
cmp
sub
iret
fadd
add
sub
jo
jae
dec
xor
lea
mov
mov
mov
adc
mov
or
or
call
icebp
fisubs
mov
aam
cmp
mov
jae
test
shll
arpl
and
mov
aam
hlt
pop
in
pop
dec
mov
shrb
and
pop
aad
or
loopne
daa
clc
mov
jl
push
push
push
push
insb
mov
movsl
in
cltd
jle
loopne
fcomi
mov
arpl
dec
mov
sbb
test
mov
sti
xchg
jecxz
dec
push
aad
push
lea
xor
shlb
cmp
mov
cmp
adc
push
stos
gs
mov
repz
test
popf
jbe
mov
movsl
es
gs
aad
push
sbb
into
cmc
sarw
movsl
dec
cmp
aam
or
adc
jno
sbbb
adcl
push
dec
jne
lds
fbstp
push
push
xchg
fisubrl
sbb
xchg
fistpll
jns
jno
dec
jg
dec
fcmovnu
test
inc
add
lea
mov
push
out
insl
in
testl
fs
pop
lahf
mov
or
cmc
add
jnp
add
mov
jmp
shl
inc
fisttpl
jecxz
bound
push
push
or
dec
adc
push
xor
push
add
pop
sub
hlt
xchg
sub
fnsetpm(287
xchg
add
in
addl
push
and
repnz
dec
dec
data16
cwtl
movsl
fadd
shll
sub
leave
fucomip
dec
je
repnz
ret
mov
pop
xor
test
lret
sub
xchg
inc
ds
sahf
test
xor
xor
rorb
jle
inc
push
jno
inc
je
lods
imul
xor
sub
fwait
imul
lods
imul
mov
icebp
movsb
shrb
test
jge
sbb
pop
cwtl
xor
pop
cmp
ret
cmp
pop
push
dec
mov
or
sub
mov
add
cs
cmp
push
push
sub
mov
mov
xor
rcr
adc
cld
je
push
ljmp
fistpl
mov
decb
jp
lahf
dec
and
push
les
fidivl
and
jmp
mov
adcb
mov
ss
stos
mov
add
jl
dec
pop
xlat
pushf
icebp
sbb
mulb
dec
sbb
int
popa
mov
push
lret
mov
mov
testb
dec
stc
pop
add
in
aam
mov
adc
jnp
push
daa
sub
sbb
jl
sbb
sbb
daa
std
std
push
xor
pop
sbb
fldenv
ret
daa
adc
cltd
sbb
je
xchg
mov
dec
ss
mov
dec
sub
sub
push
pop
aaa
andb
mov
mov
repz
dec
mov
in
inc
aaa
out
sbb
adc
loopne
hlt
in
setno
xchg
mov
rclb
or
mov
icebp
sbb
adc
test
cmc
xchg
mov
inc
jo
cmp
mov
sub
arpl
lahf
stos
mov
mov
bound
sub
or
jmp
fidivl
xor
and
dec
ss
jmp
movsb
cmc
jp
pop
loope
mov
jno
into
or
sbb
filds
sti
jbe
or
mov
mov
mov
pop
dec
push
fdiv
sub
dec
ret
cmp
dec
pop
pushf
sbb
push
in
repnz
jecxz
scas
stc
in
xchg
leave
mov
imul
test
ret
imul
jp,pn
mov
mov
int3
sub
push
mov
mov
or
lret
pop
insl
cld
cmp
scas
loope
rcl
jb
rcrb
lods
mov
sub
push
jp
jp
int
daa
lahf
xchg
add
pop
mov
and
sub
lods
add
out
js
xchg
out
dec
or
sarl
dec
ja
mov
mov
insl
nop
jne
fsub
daa
jae
mov
xchg
sub
add
dec
adc
pop
data16
test
icebp
inc
mov
movsb
addr16
mov
mov
inc
lds
stos
scas
cltd
jne
mov
jb
fs
push
bound
clc
push
push
jg
ja
push
movsb
jne
clc
push
xorl
jl
push
dec
sub
cmp
sbb
xlat
push
mov
cmp
aaa
enter
rolb
sub
push
xor
adc
shrb
into
pop
jno
push
add
jnp
insb
or
sub
lcall
test
adc
dec
sub
xor
jbe
bnd
movsl
mov
fiaddl
jp
test
shrl
dec
imul
cmp
pop
repz
dec
add
lock
jge
fs
xchg
sub
pop
icebp
test
mov
sbb
filds
xchg
inc
nop
dec
fdivrl
pop
and
imul
mov
jle
incb
aaa
lcall
fcmovu
sbb
xchg
mov
jge
test
mov
das
lret
xorl
adc
jnp
daa
or
data16
out
dec
mov
rclb
mov
xchg
stc
xor
rorl
push
dec
lock
fsubrl
push
jae
push
and
movsb
sbb
int
lcall
enter
je
dec
push
cmp
shrb
scas
gs
dec
mov
jbe
daa
mov
sarl
cld
inc
push
mov
and
ja
mov
out
pop
movsb
add
loopne
mov
push
xor
rolb
iret
test
mov
mov
sbb
lret
mov
sbb
aad
jmp
xor
dec
ficomps
loop
cld
shrl
mov
add
xor
clc
push
scas
ss
inc
sbb
jle
xchg
sbb
push
xor
mov
xchg
mov
lret
dec
hlt
ds
lcall
and
fs
hlt
jp
pusha
cs
jne
outsb
sub
push
bound
incb
cmpsl
adc
out
test
fwait
and
mov
leave
test
sub
mov
ds
aam
jne
mov
insb
fistps
add
push
lret
mov
xchg
and
fmull
mov
mov
dec
mov
adc
lods
mov
mov
lock
mov
into
inc
adc
xor
dec
outsl
push
mov
bound
sub
mov
sub
repnz
pop
movb
pushf
jnp
lds
xchg
cli
add
cmp
iret
dec
icebp
jg
int3
pavgb
cld
test
cmp
scas
jp
add
loope
jbe
sub
jl
fstpl
outsl
jo
sub
loopne
mov
xor
ja
enter
cmpsb
movsl
jo
jae
addr16
lds
dec
sbb
dec
scas
lods
mull
push
jp
sti
dec
push
out
adc
dec
andb
ss
movsb
dec
mov
pop
pop
inc
sbb
into
jns
or
in
ja
dec
ja
in
lds
loop
mov
mov
aas
add
jl
mov
push
ljmp
lret
xchg
js
leave
fmull
leave
in
hlt
stc
add
add
mov
xor
sub
pop
dec
in
push
push
sbbl
mov
inc
adcb
dec
cmp
jae
push
mov
ljmp
mov
sarl
xor
jnp
cmp
sub
ror
fiadds
outsl
lret
scas
test
call
or
rcrb
xchg
dec
ja
push
fwait
mov
fisubrl
fistpll
or
cmp
push
mov
mov
xchg
xor
xchg
cmp
movsb
push
sti
mov
adc
jmp
cmpsl
inc
movsb
jmp
push
cld
sub
mov
imul
mov
ds
push
and
sub
or
sahf
rolb
lea
cmp
repz
sub
mov
mov
cmpsb
into
jns
pop
mov
idivb
adc
rcll
pop
mov
sbb
pushf
pop
bound
xor
or
stc
outsb
dec
push
cmp
xchg
aam
jae
popf
bound
pop
scas
push
das
xlat
add
adc
and
test
ds
push
dec
outsb
cmp
add
hlt
dec
mov
fdivs
dec
into
pop
jae
test
or
call
adc
cmpsl
xor
cmp
dec
lret
stos
ja
inc
loop
les
mov
dec
imull
addr16
push
pop
popa
jle
outsl
shlb
andb
popf
ja
mov
inc
in
ret
scas
xchg
xor
insb
ja
pop
dec
icebp
int3
shl
das
push
andb
andl
mov
jno
and
les
sub
icebp
mov
and
push
or
movsb
sbb
push
cmp
mov
xor
inc
popa
roll
std
push
mov
int3
mov
and
and
mov
dec
dec
sets
cwtl
scas
adc
push
pop
xlat
pusha
bound
xchg
icebp
lods
push
sbb
popa
sarb
xchg
or
xchg
adc
sub
push
into
pop
or
mov
filds
cmp
inc
jp
sub
cltd
pusha
popf
push
mov
pop
loop
test
sbb
jnp
divl
or
test
dec
xchg
jnp
fldt
ja
jge
jmp
js
inc
add
mov
in
push
imul
or
in
xor
sub
and
cli
je
xchg
dec
repnz
lds
pop
dec
imul
lea
pop
sbb
dec
cmp
jmp
lds
push
and
imul
aad
cs
in
loope
test
jmp
adc
sbb
add
pop
cmp
sbb
fwait
inc
repz
push
loop
mov
lcall
add
test
imul
outsl
gs
cmpsb
mov
fistpll
inc
mov
add
das
cwtl
cmp
insb
jns
mov
adc
push
pop
sbb
lock
aad
incl
pop
jo
jne
push
adc
pop
scas
dec
xlat
inc
gs
or
loop
or
add
xchg
mov
inc
cmpsl
mov
mov
dec
ret
ficoml
or
aad
and
add
jo
movsb
mov
inc
jne
std
nop
pop
gs
int
ljmp
dec
sti
mov
push
push
scas
out
push
outsl
popa
sub
or
std
rol
sbb
pop
and
cmp
aaa
incb
push
jmp
pop
sbb
or
cmp
stos
pop
addr16
jmp
mov
cmpsl
loop
idivb
jl
fidivl
roll
cmp
xor
lret
stos
mov
insb
hlt
and
jb
mov
pop
fs
paddusw
pop
ficompl
sub
or
mov
inc
xor
test
je
and
pop
jp
pusha
sbb
cmp
mov
es
inc
andl
sub
inc
mov
test
jmp
mov
int3
jp
or
roll
push
lret
mov
leave
dec
xchg
lret
mov
in
cmpsl
xchg
dec
movsb
ficoml
and
mov
cld
fimuls
movsl
sub
cmp
repnz
sti
fisttps
loope
inc
pop
xlat
aam
dec
mov
sarl
rcll
xchg
sbb
bound
mov
mov
aas
xchg
cmp
les
dec
push
xor
push
mov
cmpsl
fimull
push
stos
add
mov
cli
push
jb
jno
pop
jg
sbb
je
xor
movb
push
ret
sti
or
bound
push
data16
mov
arpl
enter
sbb
out
xchg
cmp
push
lcall
xor
fwait
mov
mov
dec
dec
mov
mov
sbb
and
sub
push
test
jmp
jmp
cs
jno
testb
jnp
cmp
jl
and
pop
sahf
scas
aam
mov
popa
push
sbb
dec
int
shrl
fsubr
lds
mov
stc
data16
jge
pop
les
jbe
incb
xchg
mov
orb
fisubl
nop
push
xchg
push
outsb
andb
aad
inc
and
pop
aad
mov
and
or
adc
data16
dec
inc
lahf
test
clc
ret
rclb
add
xlat
out
out
mov
cmp
jle
out
iret
cmp
enter
xchg
dec
fs
insb
in
ret
aad
pusha
aad
jnp
inc
cmpsb
shll
ss
imul
out
iret
inc
sub
lret
fidivrs
lock
mov
fdiv
adc
add
arpl
and
fildll
lods
imul
movsl
sarb
ret
test
and
aas
push
scas
push
daa
push
jmp
shll
fstpl
push
sbb
jle
jno
mov
inc
add
fs
cli
mov
add
xor
sbb
sbb
inc
pushf
in
fsubr
mov
sbb
movsl
push
mov
aad
sbb
xor
xchg
adc
jno
dec
push
push
in
je
adc
lea
jnp
enter
stc
in
ret
mov
ror
pop
jno
roll
xor
push
fisttpll
lcall
mov
and
sarl
stc
push
or
hlt
lods
push
jns
mov
call
mov
rcrb
mov
out
xor
push
popf
cmp
adc
sbb
xor
test
mov
out
lcall
mov
loope
clc
pminub
imul
push
lock
pop
push
fcompl
out
dec
push
cmp
jae
lods
sub
cmpsb
adc
pushf
std
sarb
mov
and
pop
cmp
in
aas
fs
cmp
pop
rorl
mov
fs
sbb
cmp
jbe
pusha
call
mov
scas
addr16
popa
dec
mov
cli
ljmp
cmpsl
movsl
cmpsl
ja
incl
inc
dec
hlt
mov
cmp
add
es
mov
sub
mov
arpl
cmpsl
pop
inc
mov
mov
and
mov
mov
sub
sub
fcmovnb
fwait
test
ljmp
int3
pop
repz
mov
lds
and
stos
and
dec
xchg
push
dec
pop
outsb
sbb
inc
lods
xchg
xchg
xlat
mov
insl
sbb
mov
notl
mov
js
mov
inc
fwait
pop
push
shr
push
mov
inc
repnz
jno
test
movl
and
xor
push
daa
addb
jmp
imul
pop
rcll
out
jb
test
xlat
sbb
mov
cli
mov
fcoms
fcmovne
jb
std
push
sahf
fldl
ljmp
das
dec
call
jae,pt
mov
inc
mov
or
or
jb
and
cltd
sbb
in
xchg
inc
in
fistps
ss
add
pusha
and
mov
add
jge
stos
add
jo
lcall
mov
dec
cmp
push
mov
mov
sub
push
sar
push
inc
rcrl
iret
stc
pop
popf
fimuls
icebp
in
cmc
int3
out
das
jns
mov
mov
xor
pushf
mov
hlt
or
leave
mov
fnstenv
rcrb
cmp
or
lds
in
mov
in
rcrb
or
inc
sbb
mov
mov
nop
dec
push
mov
pusha
jb
fimuls
stos
bound
push
mov
sti
jecxz
jecxz
frstor
push
lods
mov
mov
aas
xchg
clc
pop
xor
sub
mov
adc
mov
adc
sbb
jecxz
faddl
xchg
push
mov
repnz
movsb
lret
sub
jle
lds
dec
dec
mov
dec
push
inc
es
adcb
nop
pop
pusha
add
insl
xor
add
sarb
sub
sub
dec
leave
xor
aad
add
pop
inc
vmovdqu
dec
xchg
int3
lahf
mov
xchg
jmp
addr16
testl
jmp
or
loopne
mov
adcl
lahf
sti
mov
incl
adc
mov
jmp
mov
mov
fisubrl
adc
pop
lock
enter
ljmp
mov
sub
jp
mov
arpl
dec
xchg
mov
push
xchg
add
in
jae
pop
fsubrp
mov
pop
pop
push
xchg
mov
xchg
rolb
pop
stos
or
ds
lahf
or
leave
outsl
cmpl
lock
movsb
les
subb
imul
xchg
sub
push
fwait
dec
fcoml
jae
pop
lds
push
cmp
inc
mov
scas
seto
and
sub
jp
sub
in
or
ret
xor
add
mov
movd
insl
sub
mov
cmp
ret
in
arpl
cmp
jne
push
jecxz
jne
mov
add
fimuls
cmp
jae
push
js
cmp
and
int3
mov
adc
andb
je
es
roll
hlt
mov
dec
mov
cltd
push
adc
sbb
xchg
testl
dec
lock
pop
dec
or
int
adc
mov
mov
loope
xchg
lds
and
cwtl
adc
mov
lds
jns
sbb
inc
popa
scas
dec
pop
leave
mov
inc
repz
cmpl
inc
ss
movsb
nop
dec
jmp
xor
xor
jl
mov
mov
sbb
jle
out
ret
push
and
mov
ss
fdivrs
jo
cmpsl
mov
lret
xchg
hlt
jb
inc
outsb
lcall
dec
out
xchg
pop
daa
roll
inc
in
popa
movsl
lods
push
stc
enter
and
imul
pop
rorb
adcb
inc
loop
int3
into
fimuls
sbbl
mov
nop
in
jg
loope
xchg
mov
dec
adc
sub
in
sahf
lods
lods
sbb
push
jne
sub
sub
sar
cli
std
aas
stos
dec
pop
int3
inc
fistps
push
pop
ss
lods
inc
adc
shll
out
cmc
inc
test
rorb
les
or
cmp
loope
pop
cmp
imul
call
test
push
pop
inc
mov
arpl
sub
pushf
pop
mov
test
or
sub
adc
mov
repz
dec
mov
jl
mov
cmp
popf
sub
dec
dec
jns
jb
xor
rcrb
sti
sti
gs
pop
mov
xor
nop
cmp
mov
lret
ds
in
cltd
jb
xor
xor
mov
push
test
int
lock
pop
add
in
sbb
mov
push
jge
inc
dec
jo
pusha
int
gs
bound
pushf
ss
jg
mov
addr16
pop
push
in
xchg
outsl
sbb
dec
inc
ja
mulb
push
lret
dec
mov
scas
push
and
sbbb
mov
push
mov
out
sbb
add
ret
pslld
pop
sub
mov
xchg
jecxz
jp
and
or
stos
cli
cli
hlt
test
pusha
jge
and
pop
adc
int3
sub
mul
sub
aaa
imul
adc
sbb
lahf
pop
xor
pushf
test
xor
test
cmc
enter
js
lock
das
jecxz
sub
test
xchg
mov
je
mov
jp
xchg
orl
cmpsb
daa
inc
mov
or
or
ret
icebp
rcrb
gs
movsl
call
add
jns
xchg
pop
ss
xlat
jmp
fwait
mov
ss
int3
jb
inc
nop
sbb
add
jl
inc
jnp
ret
mov
dec
dec
stos
stos
push
sahf
mov
xchg
pop
mov
inc
test
mov
testl
into
adc
pushf
sbb
and
ss
push
xor
in
pop
mov
leave
fidivrs
outsb
cmp
adc
ss
fbld
and
fmull
push
loopne
ds
into
jae
dec
repz
out
shrl
sar
stc
std
pusha
mov
push
dec
shrb
cmp
test
sub
cld
andb
decl
xor
shrb
xchg
mov
fildll
mov
fwait
and
mov
into
sub
cmp
sbb
sbb
adcl
push
adcb
dec
aam
adcl
add
fsubp
sbb
mov
repz
push
mov
mov
cmpsl
and
stos
mov
int
dec
inc
jp
xor
fistps
stos
lret
sbb
jp
scas
inc
lods
cltd
inc
lods
aaa
pop
pop
dec
mov
mov
adc
mov
stc
aaa
aaa
jae
jmp
cwtl
add
dec
mov
xor
hlt
les
call
sbb
mov
mov
outsb
cwtl
pop
xchg
cmpsl
push
fadds
pop
and
clc
add
mov
adc
mov
jmp
mov
test
mov
and
cld
mov
xor
pop
xchg
xor
mov
aaa
xchg
ret
dec
lds
lock
es
je
inc
xchg
mov
lcall
cmp
mov
pop
jbe
iret
ja
leave
stos
testb
repz
lods
pusha
std
lea
imul
xchg
ret
fldcw
dec
sarb
or
jnp
mov
mov
xor
mov
jb
add
aaa
or
xor
std
mov
psrld
faddl
call
test
xor
daa
push
add
pop
pushf
int
nop
pushf
cwtl
and
arpl
icebp
loop
in
int3
push
xchg
lods
jg
sub
test
jbe
inc
cmp
push
aam
lahf
add
xor
xor
cmp
xorps
lods
push
stc
popa
sti
daa
das
lock
out
leave
jnp
xchg
cwtl
xor
fsubrl
dec
std
mul
xchg
xchg
hlt
lret
shll
lahf
jp
xchg
jns
pop
iret
fcomip
mov
scas
shl
sbb
orl
and
test
push
out
cmp
scas
aaa
icebp
jns
fs
mov
cwtl
insb
aaa
mov
mov
scas
mov
lds
pop
mov
shlb
lock
imul
pop
xor
fstl
fldt
rclb
push
cmp
ljmp
push
xor
xor
stos
lds
ja
lret
fdivrl
shll
fmull
loopne
sahf
repz
bound
lahf
sbb
add
stos
xchg
pusha
push
fistps
iret
mov
adc
test
inc
and
sub
xorl
scas
xchg
incl
aas
ljmp
enter
push
jno
pop
js
fnsetpm(287
loope
call
pop
stos
cmpsb
add
shrb
dec
loope
pop
xor
je
jecxz
cmp
add
cli
mov
adc
mov
enter
pop
lcall
fwait
jecxz
dec
pop
js
aaa
es
dec
lea
hlt
stos
push
cmp
cwtl
insl
jl
or
cmp
leave
add
xchg
jns
jecxz
xor
or
cmp
test
add
pop
aam
mov
push
out
push
div
xchg
fldl
stos
jns
pop
inc
dec
mov
ret
pop
sbb
movsb
mov
mov
imul
andb
and
imul
clc
push
sbb
push
mov
adc
pop
cmp
push
dec
ss
inc
ljmp
ja
jle
push
jo
lret
adc
jne
ret
mov
mov
nop
jmp
pop
inc
decl
mov
jbe
xchg
fsts
aam
mov
and
int
int3
dec
pshufw
mov
cmp
ret
pop
ret
mulb
test
cmp
mov
stc
xchg
sbb
pop
or
jmp
outsl
ror
lds
sbb
cmp
jge
push
pop
fs
and
hlt
or
pop
or
dec
or
dec
ss
hlt
cmp
int3
scas
push
inc
icebp
dec
out
pop
lods
arpl
pusha
sbb
pop
rol
xchg
popf
lret
jo
pop
mov
cmp
mov
sbb
add
pop
cmpb
mov
jne
and
repz
inc
jp
popa
inc
jmp
xchg
bound
je
sbb
jne
ds
sti
mov
je
and
sub
xor
mov
fs
jmp
leave
mov
push
in
mov
cmpsb
push
lret
inc
and
jle
mov
inc
jecxz
addr16
sbb
adc
mov
xchg
pop
mov
lret
insl
and
insl
push
or
mov
xor
les
xor
sub
mov
mov
cmp
push
into
clc
mov
hlt
enter
push
movsb
cmp
arpl
jnp
int3
jne
movsb
push
push
notl
sbb
shrb
push
shrb
mov
int3
out
aad
divb
divb
and
pop
push
jnp
xor
sbb
jecxz
add
mov
push
pushl
call
sbb
add
xor
pop
pop
arpl
mov
fstpl
push
out
inc
push
lds
stos
adc
pop
rcll
or
sub
jge
adc
ret
dec
pop
push
xor
ret
dec
pushf
inc
or
push
and
or
lret
fistl
aas
mov
sub
insb
enter
mov
mov
jns
sbb
std
repz
push
addl
mov
ficompl
add
and
xchg
movsl
repz
imul
pop
ret
dec
stos
rolb
cmp
addb
push
add
add
adc
add
arpl
js
lahf
leave
lahf
push
scas
mov
das
aas
sbb
loopne
push
cmc
lods
popa
insl
push
adcl
shll
dec
out
aam
pop
in
pop
sahf
inc
nop
sub
cwtl
sbb
movsl
sbb
clc
shld
mov
jns
mov
lock
xor
pop
js
xchg
out
movsl
adc
sbb
and
mov
add
dec
jb
lcall
cwtl
and
mov
pop
xor
iret
test
dec
dec
and
adc
cld
cmc
call
fisubrs
dec
test
call
sub
or
sbb
in
fidivrs
dec
xor
sub
jbe
push
mov
loopne
push
inc
scas
mov
das
into
xchg
insb
daa
fisttps
pop
inc
jge
sarb
sbb
fisubl
repz
leave
jbe
aad
popa
cmp
xchg
jp
xor
pop
pop
xor
clc
lret
add
ja
mov
sbb
sbb
jns
mov
xorb
out
xchg
ficompl
push
xchg
fistl
decl
imul
push
test
mov
pusha
pop
mov
gs
xor
adc
popf
inc
sahf
sbbl
mov
xor
xor
jmp
cmp
pop
lods
fs
loopne
sahf
rclb
jp
nop
out
stos
test
inc
add
gs
loopne
dec
bound
inc
cli
mov
sbb
push
call
inc
imul
insb
or
or
xchg
mov
sahf
and
cwtl
cwtl
mov
sbbl
adc
repnz
cmp
mov
enter
xlat
push
popf
mov
sarb
or
test
mov
jno
jl
es
es
loope
cmp
add
xchg
push
cwtl
xor
pop
test
dec
inc
out
or
mov
test
stos
mov
mov
adc
sbb
push
popa
inc
fidivl
iret
inc
lahf
mov
into
outsb
dec
test
loopne
scas
mov
aad
or
insl
inc
pushf
insb
fcompl
pop
notl
dec
mov
out
jo
pop
imul
adc
pop
les
xor
jl
scas
or
fcmovbe
insb
push
outsb
psubw
inc
push
out
and
negl
cmp
insl
scas
push
lods
js
fdiv
pop
sarb
pop
lock
lock
cs
push
mov
mov
fstpl
fimull
outsb
mov
jns
outsb
leave
out
and
popa
mov
jo
fildll
cmp
adcb
xorb
std
pusha
cli
or
sahf
or
jge
je
in
movsb
je
dec
loope
and
js
sub
xlat
fistps
mov
xchg
int3
popa
mov
xor
gs
push
pop
mov
imul
pop
add
test
push
in
outsb
pop
xlat
out
call
mov
cwtl
nop
sti
xchg
repz
ss
cmp
lret
mov
cmp
pop
xchg
fidivrl
lea
movsb
dec
ljmp
subl
xchg
ss
add
jbe
pop
and
dec
into
and
outsb
inc
vpcmpeqd
outsl
sub
xlat
out
adc
lods
push
jmp
push
stos
popa
in
xlat
repnz
cmp
add
xor
xchg
add
adc
ljmp
and
jns
or
jne
push
push
data16
or
mov
iret
cmp
jmp
cmp
data16
test
rcr
mov
push
lahf
test
xchg
mov
lods
outsb
loop
xor
xor
add
loopne
mov
cs
int3
push
or
ljmp
push
adc
aad
xchg
daa
shll
roll
int3
dec
or
pop
add
loope
pop
jle
pop
imul
aad
add
int
pop
push
add
jmp
test
mov
testl
push
or
std
pop
cmpxchg
push
sbb
cmp
outsb
test
das
jb
xor
jle
aas
push
cwtl
push
mov
sbb
xchg
add
sub
push
inc
filds
std
and
xchg
or
clc
sub
cld
mov
push
fwait
cmpsb
mov
aas
mov
scas
add
dec
mov
enter
mov
add
cmp
andb
icebp
das
lods
ret
nop
mov
lds
test
add
adc
bound
sahf
cwtl
push
or
fistpl
repz
or
push
andnps
jg
lahf
mov
and
aaa
adc
call
out
loop
sahf
adc
adc
xor
shlb
push
add
add
xor
mov
push
mov
mov
mov
test
sbb
cpuid
pop
inc
and
je
sub
mov
push
rcll
and
rorl
outsb
out
sbb
mov
pop
add
cmpsb
call
sub
dec
divb
js
aaa
pop
sbb
jmp
aam
ljmp
and
adc
jne
lods
xchg
popf
mov
lods
xchg
and
mov
mov
sub
cmp
xor
imul
mov
inc
push
arpl
aam
popf
pop
sbb
pushf
mov
xor
in
lret
adcb
push
in
ja
xor
insl
faddl
push
mov
jns
push
shlb
mov
jbe
mov
mov
imul
leave
filds
call
pushf
pop
insb
cmp
scas
xchg
jbe
push
mov
add
add
subl
out
insl
pop
jle
jmp
int
mov
lea
dec
jbe
rcll
mov
push
xor
mov
push
aas
arpl
add
popa
jmp
imul
xchg
call
addb
mov
or
jmp
or
push
and
out
mov
loope
outsb
outsb
mov
pop
repnz
jne
popl
inc
aad
mov
jle
in
lea
jne
xor
int
lock
or
or
xor
push
xor
lcall
pop
les
jnp
adcl
bound
inc
icebp
push
je
mov
mov
gs
das
inc
es
jbe
into
cmp
fidivrl
mov
mov
aad
pop
push
mov
add
sbb
test
sbb
pushf
jno
or
sub
dec
jge
push
iret
or
aaa
or
mov
push
cmp
rol
mov
outsl
xor
sbb
dec
push
push
push
ljmp
in
jmp
cltd
pop
mov
lock
fmul
cmpsl
push
cwtl
loop
and
das
dec
cmp
cmp
rcrb
pop
xchg
and
addr16
inc
in
ja
xchg
leave
pop
jecxz
nop
xchg
mov
scas
or
jb
fidivs
dec
mov
sub
test
icebp
jns
push
mov
fs
inc
push
stos
push
es
mov
sbb
mov
inc
cmpsl
pop
fidivl
lcall
xor
jecxz
outsb
ficompl
sub
clc
dec
jo
cltd
xchg
cmc
add
push
leave
and
in
mov
fstpt
pop
jnp
in
jb
xlat
js
leave
mov
fistps
fisttpll
lahf
pop
pop
xor
popf
lods
adc
sarl
out
fistpll
aam
or
pop
and
xor
jge
lods
xchg
lock
inc
push
hlt
lcall
sub
jmp
inc
out
xchg
ja
in
dec
out
iret
out
stc
lds
xlat
or
neg
insl
imul
push
pop
pop
adc
adc
outsb
adc
fcomps
popf
and
ljmp
sub
in
movsb
mov
or
sub
movsb
out
jmp
stos
jb
push
xor
adc
daa
lds
lret
fdivrl
addb
or
lret
addr16
jo
push
jns
jg
pop
rcll
xchg
dec
inc
js
and
xchg
lods
mov
cmp
scas
in
push
out
mov
sub
cmpsb
movsl
xchg
or
clc
xchg
jecxz
mov
xchg
lret
jp
mov
in
mov
dec
pop
pop
or
lds
mov
add
cmpl
push
ret
sarl
xchg
add
mov
jno
jg
push
mov
mov
std
xor
adc
mov
mov
imul
nop
pop
enter
lock
push
mov
scas
sbb
imul
popf
jl
mov
xchg
add
push
fwait
shll
xor
xchg
and
test
jmp
pusha
cmp
scas
add
xor
jmp
scas
sbb
add
das
je
subl
jne
out
mov
rcl
movsb
pop
fcomps
xor
adc
add
iret
pop
jmp
dec
cmp
cld
cmp
mov
sub
mov
and
lcall
pop
mov
out
cld
add
cmp
inc
mov
ror
cmc
in
pusha
mov
movsb
int3
jae
pop
lods
dec
pop
cmc
jne
in
mov
cmpsl
inc
pop
or
mov
mov
and
pop
mov
jnp
fsubl
dec
sbbl
lret
in
xchg
dec
pop
loop
fwait
pop
jae
stos
pop
mov
mov
mov
cmp
iret
and
aaa
ffree
inc
dec
movsl
fisubrl
aad
inc
or
mov
lea
ret
fcoml
inc
dec
push
dec
pop
jg
mov
xchg
jg
xor
aam
lods
jecxz
fadds
nop
mov
and
xlat
dec
and
push
outsb
dec
int3
call
dec
mov
jae
dec
jle
dec
test
out
into
pop
stc
mov
loope
idiv
dec
dec
movsb
orl
mov
inc
aam
roll
and
fwait
cld
mov
jle
xor
jno
shrb
movsb
cld
jno
shll
ljmp
adc
dec
jnp
fcomps
mov
xchg
int
and
cmp
test
xchg
pop
jg
out
shl
mov
jb
inc
lret
xchg
xlat
adc
ret
push
xlat
hlt
dec
clc
xorl
jb
push
out
lds
jae
xchg
sbb
orl
and
es
aaa
jns
cmc
push
sub
int3
pushf
xchg
das
mulb
mov
mov
cltd
jbe
insl
outsb
sbb
outsl
clc
pop
xchg
hlt
mov
lret
xor
mov
sarb
xchg
xchg
xor
arpl
cmp
jl
repz
lcall
fisubrs
pop
icebp
insb
outsl
fsubrp
jge
testl
mov
cs
icebp
xchg
pushf
push
jnp
stos
cmp
mov
icebp
and
scas
ret
dec
ror
dec
dec
sbb
and
push
xor
sarb
xchg
ss
std
pop
subb
shl
sbb
mov
sbb
pop
xchg
adc
lods
xchg
popf
push
imul
mov
lret
pop
mov
aam
icebp
out
xor
lods
call
jle
xchg
dec
aam
pop
call
sub
pushl
int3
cwtl
dec
adc
icebp
in
das
pop
pop
push
mov
jl
dec
cmp
xchg
wbinvd
lret
push
repnz
iret
leave
ret
lods
push
aad
popf
ror
xchg
out
jmp
sub
mov
or
inc
push
leave
lock
loopne
in
add
push
loope
into
jo
nop
ja
popf
lds
jae
leave
jnp
clc
pusha
and
iret
xchg
mov
clc
leave
ret
sub
dec
cli
lods
pop
and
sub
cwtl
mov
inc
pop
or
test
mov
jecxz
pop
push
dec
cmp
lods
jns
mov
ljmp
repz
mov
pusha
lods
imul
outsl
push
xchg
xchg
xchg
dec
mov
inc
aad
or
push
loope
xor
pop
mov
xor
cmpsl
test
pop
test
inc
ja
cmp
pop
sub
std
mov
insl
inc
das
in
aad
adc
xor
inc
push
std
repnz
loopne
in
jmp
push
in
xcrypt-cbc
cmpsl
aad
sbb
movsl
movsl
push
mov
in
shlb
insl
stc
or
inc
push
out
push
negl
sti
mov
jle
js
or
jmp
in
scas
add
cmp
push
xchg
mov
pop
xor
sub
adcl
or
pop
xchg
jo
jne
inc
adc
mov
sbbl
rcrl
cltd
arpl
mov
ffreep
bound
jno
in
cmp
fisttpll
dec
pop
sbb
cmp
nop
adc
sbb
stc
je
das
test
insl
mov
cwtl
into
rcrb
push
ja
out
bound
add
inc
aam
scas
pop
xchg
cmp
jo
or
mov
push
adc
loopne
xor
insl
push
and
test
shrb
dec
movsl
dec
icebp
in
loopne
int
mov
adc
or
jle
enter
sarl
pop
leave
scas
sub
or
add
mov
dec
cmp
cli
lret
jno
fcom
pop
add
popa
sbb
imull
mov
dec
xchg
sbb
lods
jl
jle
stc
ss
dec
cmp
push
push
xor
incl
pop
repnz
mov
sub
addl
movl
int
mov
mov
cld
in
lret
insb
push
or
cld
insb
fbstp
test
ja
push
push
sahf
imul
xor
or
cltd
test
jb
push
int3
mov
out
mov
sar
rcrl
sbb
movsl
inc
xor
mov
cmp
jae
stos
in
sub
pop
mov
imul
mov
and
cmpsl
adc
insl
bnd
cmp
xchg
push
iret
das
pop
push
enter
cli
xchg
shlb
push
divl
push
in
into
out
lcall
sub
sbb
inc
fdivrs
notb
ja
cmpsb
stc
rorl
inc
sbb
in
minps
or
mov
loopne
pushf
xchg
je
sub
insl
or
push
cs
inc
push
mov
mov
sub
ds
ja
push
insl
jno
gs
sub
dec
ds
dec
arpl
rcrl
pop
int3
scas
pop
push
inc
in
push
cs
hlt
scas
popa
mov
jne
or
mov
pusha
lods
pop
inc
jne
iret
data16
mov
xchg
add
sbb
mov
adcb
mov
fsubrl
sti
aaa
push
popf
lds
xchg
arpl
lret
sub
xchg
jl
push
in
push
rcrb
jl
lods
lods
loop
loopne,pn
mov
push
xor
mov
sub
or
sbb
clc
dec
xor
xchg
enter
cmpsb
xor
or
clc
push
in
inc
in
ljmp
mov
pushf
lret
std
inc
cmp
filds
dec
nop
mov
mov
fdivp
add
loop
test
sub
mov
jmp
xor
js
inc
mov
scas
incb
push
in
cli
dec
pushf
mov
cmp
ds
pop
cmc
sub
or
xchg
add
loope
jmp
enter
xor
mov
cwtl
push
mov
or
cmp
rorb
or
xlat
cmp
mov
adc
pop
mov
lret
xorb
scas
sbb
movl
data16
add
xchg
shrb
bound
xor
cmp
sbb
leave
and
jl
subl
lcall
leave
fildll
div
outsb
pushf
push
push
adc
sbb
push
int3
add
xor
dec
movsb
call
mov
sub
xor
add
sbb
jl
push
lea
ja
fldt
aad
mov
fdivs
std
fstl
lock
push
sub
dec
scas
iret
loopne
add
lret
pop
enter
es
mov
out
or
jb
mov
push
pop
dec
mov
inc
mov
xchg
adc
cmpsl
scas
mull
pop
add
in
in
or
addb
shll
mov
cltd
dec
pop
sbb
sub
loop
outsl
pop
mov
push
add
pushf
or
jecxz
loop
xchg
jge
shl
pandn
mov
push
ljmp
fcoms
icebp
jle
addr16
mov
and
sub
or
dec
pushf
push
jle
lods
mov
fs
sbb
xor
xor
fcoml
das
mov
mov
mov
dec
xchg
push
sti
les
rcll
fwait
add
xor
cmp
subl
jmp
lods
jns
inc
fs
in
out
enter
xor
lahf
adc
int3
insl
insb
scas
loop
push
rcr
popa
out
inc
out
push
mov
lret
sbb
data16
mov
cmc
lcallw
shll
int3
out
mov
popa
or
sbb
or
adcb
test
lock
mov
subl
dec
fcoms
arpl
jmp
sub
mov
jge
daa
cli
bound
test
push
sbb
or
push
adc
pop
leave
aam
sub
pushf
cmp
sahf
jo
ficompl
pushf
loopne
stos
idivl
addr16
icebp
pop
cmpsb
inc
adc
pop
push
mov
mov
fucomip
adcb
mov
push
test
dec
shr
das
repz
adc
test
incb
loopne
sbb
data16
xor
jbe
cmp
rcrl
and
movl
and
in
or
xor
push
or
mov
aad
and
xchg
push
jo
popf
in
js
push
mov
add
add
gs
mov
cli
cmp
sbb
pop
loope
call
jle
mov
ss
jno
mov
scas
popa
mov
ds
sbb
pop
inc
dec
mov
add
and
loop
inc
mov
mov
call
repnz
push
fdivrs
mov
xor
ror
add
aam
lds
xor
mov
jno
jno
mov
xor
dec
mov
adc
xor
imul
dec
adc
insb
inc
and
imul
sbb
dec
inc
call
loop
loop
sbb
adc
push
inc
mov
xchg
push
or
or
mov
pop
sub
fists
repnz
ds
insl
jl
pusha
movsl
mov
lahf
and
pop
cmp
clc
sbb
and
scas
rorl
sti
push
in
in
cmp
mov
roll
jo
inc
call
jno
cmp
and
test
icebp
pop
divb
test
cwtl
movsb
mov
loope
dec
mov
lret
test
inc
sub
mov
sub
push
adc
mov
jbe
mov
lahf
ja
int3
div
pop
sbb
rcl
pushl
lock
lea
inc
std
lods
clc
imul
cs
aam
sbb
inc
dec
imul
adc
xor
shrl
push
out
cmp
adc
jmp
loop
pop
push
notl
xor
sti
es
sti
xchg
push
jae
dec
nop
icebp
dec
push
jb,pt
xor
neg
pop
pop
lret
pop
push
mov
js
sbb
jns
jmp
cmp
or
stos
in
shrb
lret
clc
std
icebp
std
test
xor
inc
adc
sar
insl
pushf
enter
jnp
cmc
pop
popf
ja
sub
jb
fmull
iret
cmp
call
sub
pop
cs
aad
enter
daa
aad
jecxz
cwtl
push
imul
icebp
mov
popf
je
add
nop
or
cmc
pushf
jp
jbe
push
dec
jns
mov
imul
daa
mov
mov
les
es
dec
ret
mov
pushf
fwait
adc
scas
lret
xor
outsb
add
push
xor
popa
subb
and
and
push
aas
test
xor
xor
jmp
push
daa
leave
les
mov
stos
xchg
aas
mov
jne
das
and
cmp
stos
pop
and
sub
cli
nop
out
mov
ljmp
inc
lods
adc
mov
xchg
mov
jp
mov
dec
sti
pop
mov
cld
add
inc
dec
outsb
std
lret
pop
cmp
inc
scas
or
sub
dec
push
mov
in
std
add
sub
inc
or
stos
dec
nop
add
dec
sbb
int
in
inc
cli
cltd
mov
cmp
push
xchg
pop
cmpsl
sbb
fs
test
mov
fcompl
adcb
cmc
add
mov
icebp
je
mov
jns
fsubrs
push
push
push
jecxz
rcl
jb
push
pop
pop
adc
xchg
popf
pop
fwait
pop
sti
jp
adc
xchg
push
call
cmc
xchg
pminub
loopne
add
ficoml
or
cld
call
pop
addb
and
iret
fiadds
adc
int3
ret
les
arpl
enter
insb
stc
sbb
mov
pop
out
scas
rcrb
dec
cld
cmpb
mov
imul
pushf
jbe
bound
xchg
inc
in
push
adc
into
fiaddl
or
lcall
xor
test
xchg
das
xor
xor
adc
cmpsb
popa
jp
sahf
test
pop
sbb
fistl
xchg
clc
jg
cmc
ret
mov
push
mov
sub
popa
pop
dec
adc
mov
subb
daa
cmpsb
sbb
std
sbb
out
adc
cmpsb
sbb
cmp
and
mov
hlt
outsb
lods
test
cmpsb
push
test
xchg
mov
and
fwait
repz
ljmp
lock
pop
jg
ljmp
cmc
xchg
andl
testl
nop
test
cli
bound
push
or
mov
dec
dec
pop
ljmp
fcoml
jnp
cmp
sti
insl
addr16
negb
lcall
push
lcall
mov
mov
aam
cmpb
in
jle
fmull
pop
push
ret
sub
inc
out
pushf
roll
dec
roll
or
movsb
mov
out
and
and
insb
les
xchg
mov
dec
mov
test
and
cmpsb
or
das
xchg
shrl
int
dec
aaa
push
ficoml
nop
xchg
xchg
mov
cwtl
jo
scas
or
adc
inc
jae
cli
sbb
iret
sub
pop
std
into
addr16
arpl
mov
addr16
push
imul
pop
push
ret
sub
adc
movsl
subl
les
in
fsubrl
mov
je
or
xor
movsb
fcomps
not
in
in
mov
fists
movb
insl
sbb
shll
scas
xor
or
insl
xor
and
bound
aaa
sti
or
sub
gs
or
pop
iret
fisubrl
enter
inc
jae
addr16
daa
imul
mov
clc
cmp
arpl
pop
mov
repz
dec
pop
push
in
lods
testb
adc
cmpsb
test
sbb
mov
jmp
mov
xchg
sub
mov
ret
in
aaa
sbb
push
out
jle
jl
mov
lret
dec
inc
mov
push
imul
pop
mov
scas
dec
mov
lahf
stos
push
lods
lock
out
mov
mov
jge
cltd
pop
pop
shrl
inc
and
jb
scas
push
add
xor
leave
and
adc
adc
leave
lds
loop
sub
jb
cmc
fcmovne
inc
pop
stc
add
fsqrt
adc
xchg
out
or
or
inc
das
sub
adc
sbb
inc
incb
inc
sti
mov
or
cmc
and
dec
stc
push
repnz
mov
push
or
xor
jno
int
lock
add
xor
dec
xchg
and
mov
nop
pushf
pushf
add
call
out
mov
in
sbb
arpl
cwtl
mov
cmpsl
in
xor
xchg
hlt
push
mov
mov
pop
stos
loopne
or
lods
stc
jnp
out
outsl
repnz
push
and
andb
push
lds
inc
xchg
xchg
cmc
dec
jb
das
nop
iret
xor
sbb
mov
xchg
fisttpll
fcomps
mov
mov
inc
das
clc
push
pop
cmpsb
loopne
hlt
fistpll
cld
icebp
int
adc
adc
rcrb
dec
popf
sbb
mov
pushf
fstpl
ror
movsl
xor
test
adc
ja
xor
into
add
popa
mov
or
es
dec
mov
test
out
shrl
and
inc
sub
rorb
jnp
dec
fistpl
jg
push
and
add
jnp
cli
enter
xchg
loope
push
cmpsb
pop
mov
mov
lret
jb
fbld
adc
cmp
popa
adcb
mov
test
push
mov
sub
int
fwait
or
je
add
adc
ret
popf
daa
mov
movsl
mov
or
das
imul
push
adc
xchg
inc
push
mov
daa
int3
mov
xor
lock
cltd
add
stc
dec
imul
jp
insl
stos
call
mov
subl
in
mov
mov
nop
xor
fwait
nop
shlb
mov
pop
repz
es
mov
jns
loopne
rcll
jl
cmp
pop
mov
js
adc
loope
lods
call
sbb
lret
sub
cmc
dec
add
mov
jmp
pop
ljmp
pop
or
sbb
int
insb
fdivrl
mov
repz
sub
sbb
jbe
mov
cmpsl
push
std
push
lahf
fwait
or
inc
mov
mov
fiadds
in
xor
stos
fildll
inc
jecxz
sub
push
mov
clc
repnz
xchg
mov
pop
faddl
rolb
inc
xor
icebp
out
lahf
jg
inc
imul
cmp
hlt
pop
mov
enter
sub
mov
push
add
aaa
add
mov
xchg
adc
leave
aam
lods
inc
mov
xor
push
andl
pop
dec
mov
ds
mov
push
xchg
add
push
outsl
ret
es
dec
adc
mov
adc
add
negl
cmp
cmp
fsubrp
jmp
fiadds
push
pop
test
adc
mov
sub
cmp
test
pop
cld
adc
pop
cli
jae
mov
pop
popf
fildl
pop
mov
hlt
or
cltd
jmp
cmc
ja
loope
cwtl
cmp
inc
aaa
adc
and
sbb
inc
xchg
rorb
stos
test
sysret
xchg
pop
into
cmp
inc
jle
sbb
out
out
pop
mov
sbb
add
cmpsb
out
xlat
es
sbb
xchg
inc
movsb
xchg
add
scas
pop
shlb
fistps
in
and
jb
jg
xchg
movsl
imul
ss
sahf
sarl
push
xchg
add
sets
adc
pushf
dec
mov
cmp
fnstcw
push
test
and
pop
ja
mov
pop
pop
sub
xor
inc
sbb
inc
sub
push
arpl
pop
ljmp
cmp
popa
and
pop
jo
mov
cmp
in
pop
adc
jae
movhps
aad
fimuls
xchg
pop
mov
dec
push
in
cmp
or
push
je
sub
cmp
xor
mov
fbstp
and
cmp
and
or
jae
ss
das
adc
adc
adc
insb
jp
dec
jl
inc
mov
xor
cmp
testb
ds
scas
daa
push
sbb
incb
adc
rcll
xor
or
mov
data16
pop
push
cmp
rcl
cmpsl
pop
cmpsb
mov
jo
jg
int3
push
push
mov
mov
push
inc
popf
sub
lcall
addr16
jp
dec
or
lcall
ror
push
or
testb
jo
pop
mov
xchg
rorb
pop
inc
mov
cltd
xor
push
pop
nop
push
xchg
pop
or
sbb
sbb
in
loope
scas
jne
adc
add
in
push
jp
ret
les
dec
mov
pop
push
pop
pop
inc
and
movsb
fs
testb
rorb
cmp
pop
mov
mov
cmc
fnstcw
pop
pop
lock
dec
cli
mov
and
add
shlb
mov
clc
mov
movsl
pop
lods
mov
scas
mov
cmpsb
xchg
je,pt
sbb
je
pop
fiadds
sub
inc
jne
xor
add
inc
push
inc
add
dec
dec
rol
fcmovnb
jno
mov
inc
mov
cmpsb
mov
push
jb
mov
popa
pop
in
lea
cmp
pop
mov
loopne
add
int
inc
pushf
jmp
mov
out
fdivrl
out
dec
jmp
sub
jno
sbb
add
jne
xchg
xchg
inc
xor
int
btr
mov
xchg
stos
add
ja
jg
jno
pop
and
jle
fs
out
hlt
in
popf
push
xchg
inc
sbb
jmp
clc
mov
test
or
ret
mov
or
mov
adc
mov
pushf
ss
inc
fcompl
mov
dec
ja
jle
jl
shlb
andb
icebp
icebp
test
sbb
shlb
mov
jae
mov
mov
rcrl
xor
xorb
cltd
jmp
jge
fdivrs
xchg
cmp
sbbl
inc
xor
push
xor
push
or
push
xor
jecxz
mov
jge
mov
and
push
or
lock
fdiv
stc
inc
scas
cmpsl
aaa
adc
and
xor
jo,pn
inc
pop
out
jg
stos
mov
hlt
cmpsl
out
daa
int
sbb
out
adc
inc
lods
out
push
in
xchg
mov
and
mov
adc
dec
cltd
fists
adc
ret
sub
test
and
xchg
aas
jmp
jbe
call
inc
sub
in
cmpsl
sarl
loopne
stc
pop
push
xchg
nop
dec
xchg
or
iret
push
lock
push
pop
lcall
push
xchg
imul
fisubs
mov
xchg
xchg
imul
add
ret
adc
or
cs
xor
pop
jo
sub
nop
ss
jle
inc
iret
movsl
scas
insl
gs
cltd
loop
add
icebp
lods
adc
in
add
es
insb
aaa
mov
sbb
and
jge
nop
sub
xorb
inc
into
pop
jge
dec
cmp
int3
dec
negb
loope
std
in
fists
push
sbb
loopne
inc
xor
push
pop
test
mov
cs
adc
movsl
and
cwtl
icebp
jp
pusha
mov
int3
rolb
aaa
sub
icebp
out
int3
xlat
cmp
movsb
fnstcw
jnp
mov
push
sahf
inc
mov
sbb
inc
ds
xchg
aam
repz
or
push
cmc
outsb
push
inc
testb
adc
pop
lds
adc
insl
mov
mov
push
cld
xor
xchg
jae
xorb
adc
jnp
adcb
outsb
jl
jns
jnp
mov
sbb
cmp
mov
scas
mov
gs
out
pop
fs
fcomps
pop
pushf
jo
std
mov
ss
cmc
shll
push
add
out
and
pop
dec
lods
mov
xchg
rorb
xchg
add
clc
icebp
pusha
inc
hlt
mov
pop
fstps
and
and
add
xlat
aas
sqrtps
lock
loope
mov
push
fadds
sti
xchg
jg
bound
xor
std
int3
jg
mov
les
mov
xor
and
mov
test
cmp
iret
lock
test
data16
mov
scas
je
lret
cli
loop
sbb
cmp
les
adc
loope
test
lock
and
mov
out
mov
outsb
and
pusha
out
mov
push
shlb
frstor
js
and
mov
lea
or
test
repnz
shlb
mov
stos
cmp
cmc
in
std
bound
popf
pusha
mov
out
movsb
xor
jle
lahf
or
rolb
test
adc
cmpsl
mov
sti
xchg
cmp
nop
addl
pop
cmp
xchg
ret
cmp
shrb
cli
xchg
push
xlat
push
mov
sbb
lods
jg
add
movsl
push
imul
inc
cmp
cld
dec
ficomps
jp
mov
out
lea
lds
fcmove
dec
inc
mov
imull
mov
test
mov
dec
fcomp
push
pop
xchg
and
cltd
shl
push
cmc
xchg
pushf
mov
aaa
mov
jmp
sub
pop
push
add
lcall
push
mov
mov
sub
testl
push
cmp
in
loop
test
test
pop
jmp
std
pop
jmp
ficomps
dec
push
jae
mov
insl
fcoml
push
scas
dec
out
rclb
test
jge
das
push
imul
dec
or
cmp
stos
es
mov
dec
in
jae
scas
sub
lock
les
mov
aam
or
jb
mov
or
push
ja
scas
cmp
mov
std
or
mov
xor
daa
outsb
jno
sub
cli
das
fs
xchg
sbb
mov
mov
in
cmpsb
fidivs
mov
outsb
ja
and
dec
sub
rcr
sbb
inc
ret
mov
aam
popa
mov
sbb
rol
adc
sub
add
add
push
jbe
pusha
mov
lods
loop
outsb
les
jbe
mov
shll
cmp
add
jo
stos
jns
xor
dec
inc
cmpsl
pop
cwtl
dec
stos
loopne
xor
jecxz
push
sbb
jmp
xor
cmp
sbb
fstp
inc
sbb
mov
add
xor
mov
sub
stos
mov
and
inc
jbe
mov
mov
xor
fiadds
pusha
cmp
data16
or
fdivrl
xchg
stc
test
or
mov
out
xor
pop
or
imul
xlat
in
addr16
aad
ss
movsb
je
mov
gs
mov
xchg
negl
es
and
adc
aaa
sub
fdivrs
jb
outsl
stos
mov
xchg
xchg
lahf
cmpsb
imul
rcll
dec
add
cmp
mov
daa
pop
stc
sub
movsb
mov
mov
in
in
xchg
aaa
pop
sub
adc
jecxz
or
lods
mov
xchg
push
sbb
or
push
cmp
loope
addr16
enter
sub
mov
inc
fists
push
mov
lahf
dec
pusha
fwait
xchg
xor
lahf
loop
fwait
mov
mov
adc
sbb
push
mov
fldl
mov
push
out
rep
adc
imul
mov
push
ss
push
mov
xchg
addr16
mov
jns
lods
mov
sbb
repz
sub
inc
jmp
mov
mov
cwtl
daa
sbb
mov
mul
inc
aam
std
jno
leave
lcall
stc
lcall
xchg
push
jl
mov
adcb
inc
pushl
add
stc
xchg
test
imul
push
mov
sub
or
lret
mov
inc
ss
imul
xchg
mov
bound
push
jge
in
sbb
mov
inc
lret
int3
sbb
adc
xchg
sti
add
jl
jle
addr16
mov
or
ret
outsl
nop
mov
dec
cmp
inc
popf
mull
frstor
adc
xor
imul
dec
add
xlat
stos
jns
aaa
test
push
in
jno
shr
pop
sbb
xchg
add
add
adc
lahf
test
pop
push
bound
cltd
repz
rep
es
mov
sub
mov
int3
sub
fldl
adc
int3
in
cmp
or
sub
pop
adc
call
xchg
inc
mov
fs
fcmovb
adc
stos
sub
jae
mov
sub
cmpsb
scas
mov
add
lret
push
add
and
pusha
fcoml
cmp
add
add
cmp
mov
pusha
insl
push
jg
jo
mov
fs
ljmp
repz
cmp
out
int
ret
pop
test
adc
pop
imul
mov
mov
cmp
add
scas
scas
cmp
loopne
mov
rcll
xchg
sbb
jbe
adc
loopne
mov
sti
jl
xchg
xchg
or
es
mov
xor
mov
xor
inc
cltd
int3
xorl
dec
cmp
add
call
js
pop
sbbb
mov
push
adc
push
xor
sub
pop
jno
fisubl
loop
push
movsl
test
cltd
addl
mov
xor
fcmovnu
ret
cmp
fldcw
sub
fisubrs
or
insl
cmpsl
mov
lret
lret
lock
scas
add
adc
enter
jb
cltd
test
jp
jg
adc
int3
push
pop
icebp
test
adc
stc
std
mov
mov
cmpb
adc
push
dec
daa
pop
icebp
lcall
stos
lods
sahf
or
xor
nop
rcrl
cmp
cmp
xchg
ret
jns
cmp
add
or
rorb
iret
adc
fwait
or
jns
in
cs
ret
cltd
sbb
xchg
jmp
stos
clc
cmp
cmp
in
jo
fdivl
sub
or
cmpsb
leave
aaa
xchg
leave
lods
pop
out
xchg
and
pop
outsb
cmc
cmpsb
imul
mov
mov
or
imul
lret
mov
cmpsb
mov
ficoms
dec
adc
adc
pop
add
subb
sub
sub
xor
test
outsb
adc
sub
dec
rolb
jo
scas
popf
push
push
adc
ret
adc
fsts
push
sub
icebp
inc
jg
cmp
daa
mov
out
add
popa
push
in
push
push
mov
push
nop
test
add
inc
test
lods
cmpl
cltd
shlb
int
cmc
inc
jge
popf
sbb
dec
jle
mov
insl
push
stos
test
xor
fnsave
push
xchg
push
stos
repnz
rol
cmp
stos
icebp
insl
dec
shll
sbb
inc
jp
jo,pt
daa
or
mov
dec
in
fdivp
xchg
stc
add
pusha
repnz
xor
dec
jbe
dec
lods
mov
inc
jb
fists
sarb
push
mov
jnp
jno
ficoml
or
mov
adc
jp
xor
test
xlat
mov
call
ja
ror
fcmovbe
testb
mov
xor
push
movsl
fwait
xchg
sub
js
xchg
pop
cmp
test
and
aas
cmp
int3
sti
movsl
mov
or
lret
pop
sub
push
loope
les
leave
out
daa
lock
push
outsl
xchg
pop
dec
loope
fwait
sbb
and
ret
popf
fdiv
sbb
pop
and
outsb
or
mov
adc
adc
stos
mov
mov
adc
push
mov
cvtps2pi
dec
pop
cmp
pusha
cmp
bound
mov
inc
adc
int3
fmul
inc
call
or
dec
lea
mov
imul
ds
push
mov
dec
repnz
dec
xorl
pop
fldl
jbe
mov
inc
jp
cltd
lods
test
loopne
js
lcall
hlt
addr16
xchg
repnz
and
mov
arpl
dec
sub
sub
or
or
test
cmp
mov
xchg
add
addr16
xchg
xor
insb
add
loop
and
xchg
sbb
in
xor
fs
insb
cmpsb
or
out
insb
jbe
sub
inc
pop
lret
fmuls
daa
pusha
pop
int
popa
jp
xchg
je
add
decb
xor
inc
pop
mov
loope
mov
jg
and
and
cmc
sti
xor
jnp
fcomip
bound
sub
or
cwtl
mov
sbb
xchg
loopne
leave
ret
push
jl
jnp
lcall
mov
jo
push
mov
mov
imul
pop
pop
ja
push
xchg
or
cmp
imul
lret
addr16
negl
xor
mov
mov
cwtl
imul
dec
jle
mov
inc
jb,pn
es
push
xchg
scas
cmp
push
fdivl
test
sub
xor
sbb
sub
sub
aad
pop
cmc
inc
pushf
xchg
cmp
fdivrs
int
or
and
mov
and
pop
sub
in
xor
push
rcll
inc
test
bound
jg
xor
jns
shll
inc
jae
ret
rep
inc
clc
leave
ds
push
into
mov
dec
fidivrs
pop
mov
aaa
nop
add
aad
stc
mov
inc
jge
push
fidivrl
fidivrl
fnstsw
jo
adc
add
addr16
stos
jo
pushf
aam
jb
data16
mov
mov
xchg
pop
cmp
fs
stc
cmp
fimull
icebp
xor
and
jns
mov
imul
mov
pusha
rcl
ds
loop
inc
fdiv
sti
mov
test
in
loope
sahf
inc
rclb
mov
mov
cmpl
sbb
jl
in
inc
cmp
les
or
mov
mov
cli
dec
fsubs
mov
cmp
sub
movsb
pop
data16
int3
lods
adc
jl
mov
jl
or
jl
mov
pop
loop
lret
xchg
bound
fmul
imul
mov
cmp
adc
sub
in
push
test
jne
repnz
outsl
mov
pusha
adc
loop
movsl
mov
cli
mov
stos
repz
jmp
scas
dec
inc
and
call
or
push
lods
dec
jp
cmp
fwait
dec
jle
loopne
inc
jle
andl
add
sti
test
cld
xor
pop
adc
mov
imul
int3
jecxz
leave
adc
das
inc
and
sub
insb
popf
mov
cs
sbb
andb
lods
aam
inc
pop
cmp
or
aam
je
and
mov
std
cmc
mov
sahf
call
or
test
std
push
mov
xor
test
mov
mov
cmp
je
aas
jecxz
int3
sbb
add
mov
icebp
inc
add
xchg
movsl
test
leave
or
les
loopne
mov
stos
adc
push
outsb
cmpsb
iret
mov
rep
or
loopne
xchg
fiadds
mov
adc
cwtl
aas
adc
add
mov
mov
out
scas
add
push
dec
push
icebp
mov
push
mov
cli
xor
rorb
sbb
gs
out
sub
fdivrs
mov
punpckhwd
pop
cld
cmp
test
das
and
push
xor
test
int3
int
mov
scas
cmc
fimull
ror
or
sti
mov
add
xor
ret
fbld
dec
or
lcall
xchg
mov
orb
or
dec
std
cmpsb
std
dec
jo
dec
clc
xchg
sbb
inc
addr16
dec
lret
pop
dec
xor
fists
arpl
mov
add
lea
xor
test
pop
add
into
inc
icebp
jno
push
adc
mov
sbb
sub
push
scas
xchg
cmp
inc
inc
pop
xor
cmp
xor
test
xchg
sarl
into
sbb
push
or
sbb
int
aaa
mov
adc
lock
jo
inc
hlt
adc
loop
add
inc
mov
shll
fxch
mov
inc
fwait
push
cmpsb
fadds
flds
pushf
lds
push
iret
pop
sub
adc
mov
pusha
lret
loope
mov
les
pushl
out
in
xor
fstl
sahf
jmp
jmp
adc
mov
inc
inc
sub
adc
fwait
jbe
dec
dec
icebp
mov
pop
xor
nop
pop
std
dec
inc
cmp
movl
lret
adc
pop
dec
cmp
stos
pop
push
lcall
loop
cmp
shll
lcall
jl
mov
lods
sti
push
cmp
inc
aad
aad
dec
in
lock
add
mov
cmp
mov
pop
push
mov
dec
mov
cs
adc
bound
sti
add
test
and
and
das
mov
push
into
shll
sub
add
cmp
jecxz
jp
fdivl
jl
dec
sub
xchg
ret
or
and
xchg
pop
int
pop
xchg
lea
clc
repz
fs
in
push
xchg
pop
in
loope
push
inc
jl
je
mov
std
sub
jle
dec
xor
iret
push
cmpsl
sub
or
loop
shlb
push
sti
not
add
pop
pop
inc
fldenv
bound
orl
loop
iret
shll
cmp
movsb
dec
add
xchg
in
inc
mov
cmp
scas
pop
call
xor
dec
lret
add
and
pushf
jl
push
mov
icebp
add
cmp
negl
push
jmp
out
bound
mov
insb
call
outsl
sub
mov
inc
ret
cmp
cmp
jbe
dec
mov
jp
xor
js
cmc
cmp
in
movsb
test
enter
btr
movsb
mov
icebp
mov
mov
out
push
fimull
mov
adc
sbb
mov
stc
xor
dec
divb
and
inc
insb
dec
push
repnz
icebp
sub
loop
pop
ds
push
jno
addb
test
jecxz
pop
pop
imul
inc
sbb
sbb
popfw
pop
andb
and
loopne
adc
rcrb
push
stos
xor
fwait
insb
jnp
mov
pop
pusha
xchg
lcall
push
adc
xor
xor
xor
mov
xchg
fiadds
fstl
xchg
inc
addb
out
xor
push
je
call
and
test
jecxz
and
mov
xchg
or
addr16
je
sbb
or
loop
dec
or
add
in
pop
mov
int
icebp
xchg
and
lret
mov
jae
mulb
shlb
xor
lods
inc
add
mov
push
pop
adc
daa
bnd
ret
je
inc
jg
mov
stos
popf
sub
inc
shr
cmp
cmp
push
xchg
fbstp
out
add
icebp
or
xorb
and
in
cmp
int3
mov
mov
sbb
rcrl
in
fs
fmul
ds
push
movsl
leave
sub
mov
sbb
mov
cmp
adc
ljmp
jno
xchg
stc
call
cmp
xchg
sub
out
stos
stc
and
add
mov
mov
or
cmp
inc
inc
or
ljmp
cli
mov
push
add
pop
cmp
lods
lods
jne
mov
ljmp
clc
rcrl
xor
dec
jbe
cltd
out
shrb
lods
insl
out
les
adc
js
js
push
in
push
xchg
out
out
lock
test
jne
addb
iret
xor
iret
aam
and
inc
mul
push
cs
adc
cld
pop
sbb
rorl
stos
jecxz
push
repnz
mov
rolb
jecxz
int
pop
xor
sbb
xchg
ror
pushf
cmpsl
pop
adc
fsubs
xchg
mov
mov
daa
mov
mov
outsb
popf
push
xor
fucomi
add
stc
jg
cltd
js
out
xchg
jno
push
orl
divb
fidivrs
test
mov
getsec
inc
mov
arpl
hlt
cld
dec
movl
out
mov
enter
push
call
mov
in
popf
cmp
dec
inc
orl
movl
pusha
aad
hlt
xchg
lahf
push
mov
push
mov
jl
mov
cld
icebp
inc
in
sar
push
mov
mov
jl
dec
test
insl
mov
test
icebp
rcrl
mov
mov
pop
out
cwtl
out
call
push
or
cmpsl
pop
pop
pop
sbb
xchg
pushf
in
icebp
xchg
mov
sub
sahf
bound
jae
or
mov
mov
xchg
stos
shlb
jo
fcmovb
pop
mov
imul
pop
push
cmp
fdivrp
fcoml
sahf
pop
lcall
ljmp
jl
fmuls
aam
push
jecxz
imul
and
je
jle
or
jno
mov
mov
repz
xchg
test
cmc
xchg
adcl
jle
dec
mov
loopne
xor
mov
and
dec
fsub
push
outsb
test
mov
jg
mov
ds
dec
loopne
add
aas
pop
cmp
int
lahf
in
mov
push
in
aaa
jl
loopne
fcoms
sahf
jle
aam
cld
sbb
test
and
adc
xchg
lds
inc
dec
jae
leave
adc
faddp
int
mov
jecxz
mov
out
pop
xchg
or
in
daa
pusha
loop
mov
mov
pop
mov
stc
push
test
adc
sbb
cmovge
fbstp
adc
roll
dec
and
ret
sub
add
in
push
push
das
push
mov
stos
sbb
mov
pop
insl
or
and
lods
cmp
stos
pop
int
repz
mov
jmp
jge
xchg
push
add
ret
inc
add
add
pop
pushf
les
mov
loope
push
xchg
cmpsb
cmp
dec
dec
pop
and
sbb
lret
cmp
mov
test
rclb
mov
scas
in
aam
or
xor
jo
lods
fs
inc
scas
aad
loope
ficoml
outsl
push
add
cmpsb
fst
mov
outsb
cmpsb
enter
sub
call
test
popf
push
mov
add
and
pop
or
mov
push
xor
int
fsubr
pop
ror
aad
dec
pop
movsl
hlt
mov
test
fwait
or
ljmp
dec
mov
xor
adc
into
or
bt
in
jae
and
push
push
sub
xor
mov
push
aas
mov
adc
sbb
xor
xlat
dec
ret
fisubrl
fwait
xor
mov
shlb
cmp
daa
das
pop
shlb
add
xchg
aam
dec
sti
dec
adc
mull
push
fiaddl
adc
dec
inc
xlat
push
movsl
jmp
out
mov
outsb
lods
push
jb
mov
mov
scas
iret
fs
ljmp
mov
out
leave
adc
fists
push
call
loop
mov
cmp
clc
xchg
push
ret
enter
and
inc
jge
ss
sarb
fdivrs
xchg
dec
xor
xchg
xor
xor
pushl
data16
out
xor
ret
sahf
push
jle
addr16
scas
push
insb
and
sub
mov
add
dec
das
add
push
jae
ss
dec
cmp
sub
cmpsl
pop
out
mov
outsb
sbb
test
sub
jl
lds
cmp
push
outsl
xchg
cmpsl
sti
jbe
arpl
and
std
xor
mov
and
pop
cmp
and
test
out
and
xchg
int3
jl
push
test
or
cmp
add
daa
adcb
pop
sub
sub
sub
stc
outsb
push
es
cmp
shlb
cmp
xchg
cltd
rclb
rcl
push
aas
call
pop
rcl
mov
mov
mov
add
jmp
xchg
rclb
fstps
sub
addl
ficompl
notl
and
data16
js
pushf
dec
notl
xor
jecxz
sub
xor
xor
mov
mov
xor
xchg
dec
mov
lret
loopne
push
xlat
push
dec
jmp
jb
mov
xor
and
aas
adc
repz
and
jno
out
mov
mov
mov
test
mov
jne
arpl
out
xor
mov
sub
dec
sbb
aam
mov
out
xlat
sub
int
aaa
cwtl
inc
sub
adc
stos
imul
cld
ret
je
cmp
cld
frstor
ss
loope
repnz
dec
mov
sub
xchg
out
mov
das
adc
or
mov
jecxz
sub
xchg
push
sbb
mov
cmpsb
jp
push
mov
cmpsl
lea
mov
sbb
jnp
shlb
mov
adc
mov
fucomp
mov
insl
sbb
aam
inc
test
out
mov
adc
mov
rcr
adc
inc
cmp
lcall
adc
xchg
xchg
dec
xor
push
push
sub
loopne
xchg
outsl
lahf
rcl
fsubs
lds
adc
sub
ret
dec
pushf
cmc
pop
nop
popf
cmpsb
pop
fisttpl
dec
inc
jmp
push
scas
scas
call
ds
mov
sub
jbe
lods
inc
push
lods
jno
pop
add
jmp
jecxz
pop
mov
push
sbb
push
iret
cs
stc
mov
test
and
dec
add
movsb
sub
sub
shrb
xor
add
fiadds
mov
test
sub
xchg
cmpsl
fiaddl
in
pop
dec
divb
mov
mov
dec
shll
sarl
fists
mov
in
and
add
sbb
sbb
aaa
add
pop
mov
insl
inc
outsb
jnp
cmp
push
cli
aam
fisubs
movsb
sub
lret
ljmp
fs
mov
js
inc
mov
xchg
xchg
andb
scas
mov
fwait
repnz
outsl
lea
mov
loop
das
jmp
mov
sbb
mov
mov
mov
xor
xor
mov
ret
cmp
mov
rclb
test
test
data16
cmc
mov
into
fsub
or
jnp
push
xorb
mov
mov
lods
push
lock
mov
jnp
xchg
mov
sti
jl
cmp
cltd
inc
fcmovu
mov
aad
call
nop
fcomp
sbb
sar
aam
mov
sub
fiadds
aaa
or
pop
mov
stc
fldl
xchg
or
sub
cld
xchg
lahf
xchg
mov
dec
xor
jns
icebp
bound
lea
or
lahf
xor
int3
enter
sub
cs
fcom
arpl
and
pop
fisttpll
ret
and
cmpsl
dec
inc
cmpsb
inc
mov
cltd
mov
xchg
in
dec
addr16
cmp
scas
int3
xchg
aad
es
mov
push
sbb
fiadds
and
fdivrl
jge
inc
out
cltd
sbb
nop
mov
test
idiv
sub
mov
mov
dec
cmp
loop
lret
adc
xor
into
out
inc
icebp
xchg
repnz
ret
mov
div
pop
push
cmp
inc
ljmp
das
ret
je
popf
cwtl
maskmovq
mull
lea
repz
popa
mov
jns
jns
ror
sbb
xor
mov
inc
mov
enter
or
loope
lcall
scas
lret
and
push
xor
push
push
jns
inc
mov
pop
loope
scas
ss
xor
sbb
push
sti
push
dec
ror
imul
push
jne
mov
jge
or
dec
outsb
jo
push
cmp
inc
mov
movsl
pop
pusha
ja,pn
xlat
inc
lods
xchg
mov
add
or
inc
pop
mov
sti
cmpsb
arpl
ret
fcmove
lods
dec
shll
imul
mulb
pop
sbb
jbe
jne
sbb
inc
in
test
imul
add
repz
cmp
popf
test
sub
dec
push
addr16
add
stos
jp
movsl
jecxz
mov
int
or
cmp
adc
mov
adc
enter
jle
jb
push
pop
sbbb
add
mov
hlt
outsl
hlt
jae
shr
xor
pop
pop
fdivrl
and
shll
push
sub
sti
push
das
sub
mov
dec
scas
jecxz
out
js
ret
fiaddl
icebp
sahf
jmp
fisttps
ljmp
pop
negl
les
sub
push
xchg
sub
notl
sub
lock
mov
jle
sbb
jge
cwtl
adcl
sarb
add
jo
fbld
jecxz
and
add
jb
divb
cmp
mov
jno
push
xchg
jne
std
jecxz
jmp
or
aad
stc
push
cmc
xor
jo
cmpsl
rcr
adc
pop
and
jecxz
jo
sbb
insl
push
dec
fcoms
push
pop
sahf
mov
rcll
popa
jmp
and
rorb
in
bound
mov
ret
xchg
mov
lea
sub
addr16
jle
les
sahf
push
sbb
lahf
sub
inc
adc
insb
sub
jne
xor
xchg
or
jns
in
adcl
adc
lret
stc
pop
jae
lods
xchg
xor
sbb
int
rol
lret
lcall
or
lods
pop
fidivrl
int3
out
sbb
sub
call
cs
add
sti
rclb
mov
fsts
dec
or
sub
mov
xor
push
pop
out
outsb
stos
jge
lods
shr
lcall
inc
mov
cli
xchg
fcmovnbe
cltd
sahf
mov
rcrb
bound
stos
add
in
out
pop
mov
mov
out
push
sarl
jge
into
aam
mov
repz
xchg
pop
sub
mov
shlb
outsb
push
sbb
pop
pop
mov
mov
out
es
xchg
jo
push
imul
stc
sub
loope
bound
inc
and
mov
push
mov
cwtl
jmp
test
sbb
movsl
test
aad
mov
popl
push
fiaddl
gs
ds
or
mov
cmp
pop
repz
xchg
repnz
imul
dec
mov
adc
xchg
cmp
iret
mov
mov
push
out
push
mov
testl
or
cmp
jae
mov
or
sub
into
push
add
or
loope
sub
jp
fwait
or
xor
cmp
lcall
nop
pushf
ss
lods
shrl
imulb
sbb
push
and
sbb
sbb
mov
cli
cmpsb
jns
outsb
je
out
mov
lret
int
jbe
jns
add
icebp
dec
out
inc
inc
mov
pop
sbb
inc
xchg
sbb
pop
stos
jge
orl
iret
xor
xchg
pusha
adc
pop
mov
out
es
data16
cwtl
dec
outsl
inc
pop
cmp
popf
mov
mov
addr16
in
adc
lret
movsb
jge
cmp
lods
xchg
sahf
add
test
cs
ret
add
jnp
scas
push
insb
adc
xor
into
in
xchg
pop
rcll
jbe
movsb
icebp
int3
fistpll
xor
jecxz
push
ljmp
sbb
dec
addb
fwait
sbb
gs
pop
sbb
lods
hlt
in
dec
mov
mov
pop
mov
mov
add
or
or
xor
fsub
mov
inc
or
cmpl
std
in
cmp
test
xchg
sbb
inc
jne
pop
push
mov
push
jecxz
mov
jp
or
mov
sar
outsb
sub
xchg
push
dec
jno
or
out
addr16
int3
shrl
add
and
mov
ljmp
mov
rorl
lcall
ss
and
scas
rcrl
xor
aam
imul
lods
jo
jo
adc
adc
aad
pushf
stos
shrl
add
loopne
xchg
test
shlb
loopne
push
std
jge
popa
daa
add
push
outsb
cmp
das
mov
dec
stc
pop
xor
out
mov
adc
lds
loopne
dec
rclb
add
mov
cmp
rol
nop
xchg
mov
sub
or
lds
in
xor
push
orl
jo
in
cmpsl
and
or
repz
pop
cltd
or
pop
mov
es
stos
adc
sarb
and
insb
mov
push
repnz
xchg
adc
or
pop
mov
leave
and
jp
jno
hlt
mov
inc
test
xor
xor
adc
enter
xchg
push
fucomp
in
mov
and
test
imul
imul
add
lret
cmc
ja
icebp
movl
mov
push
or
call
test
jnp
fnstsw
rcrb
jle
ja
in
fadd
stos
int
sub
loope
or
nop
andb
cld
in
lods
xchg
notl
ret
addr16
rcl
pushf
mov
frstor
or
repnz
cmc
dec
orl
aaa
or
mov
out
xchg
push
jg
mov
shr
scas
mov
or
aad
andl
push
sbb
lods
mov
inc
addr16
pop
adcl
pop
jae
stos
xchg
or
fcomp
jns
mov
xor
jne
loop
xor
sub
je
mov
or
push
dec
mov
dec
adc
mov
lods
cmp
nop
jne
fsubrl
add
adc
dec
dec
lret
in
out
rcl
push
xchg
pop
or
insl
lea
sbb
jno
pusha
mov
xchg
popa
lods
sbbb
push
mov
inc
orb
inc
inc
mov
sbb
mov
gs
xor
sub
insl
dec
xorl
mov
mov
aad
xor
jmp
imul
leave
sbb
or
js
cwtl
cmp
imul
repz
push
jecxz
jo
push
rol
xchg
fcmovnb
aaa
cmp
aas
cld
inc
or
add
ret
pusha
fsubr
jg
stc
cwtl
out
xchg
jge
shll
bound
push
rorb
lods
mov
jb
cmp
sarl
mov
shll
or
jmp
mov
jge
leave
call
hlt
fcmovu
es
push
pop
stos
jne
scas
xor
xor
lds
mov
xchg
cltd
fdivrp
fbstp
cmp
xchg
sbb
cmp
mov
and
in
out
in
or
xchg
xor
lcall
xchg
pop
fsubs
jmp
stos
out
arpl
mov
shrb
jb
sbb
sbb
add
sbbb
loopne
sbb
cmp
jmp
xchg
xor
movsl
pop
mov
outsb
scas
cltd
stos
je
xchg
sbb
push
and
sbb
cmc
lcall
sub
std
adc
fstpt
inc
add
push
rorb
cld
pop
sbb
xor
pusha
repz
lret
aas
cld
adc
mov
jle
push
xor
fistl
shll
mov
sbb
paddsw
sub
mov
and
dec
icebp
push
jb
loop
int3
pop
cmp
add
xlat
xchg
add
jecxz
enter
dec
cld
or
inc
nopl
aam
jl
cltd
xchg
sub
lcall
ret
or
lock
repnz
andl
xor
and
enter
pop
pop
jae
cli
sbb
rcrb
cli
es
jge
mov
cli
adc
loopne
mov
cmpsb
mov
or
jbe
xor
xchg
xchg
cmc
pop
xor
fcomps
mov
mov
mov
pop
sbb
xor
mov
sub
in
xor
sbb
pusha
outsb
fidivrs
mov
xchg
or
incl
xchg
mov
fsubrl
or
add
xchg
jmp
push
sti
scas
cmpsb
leave
clc
inc
mov
mov
xchg
inc
aad
loopne
sbb
jmp
out
xor
jo
mov
ficoms
decb
arpl
aam
sahf
xchg
lods
add
dec
aas
push
jmp
test
mov
add
lods
mov
or
bound
cli
daa
ja
mov
inc
add
movsb
fwait
int3
testb
adc
mov
sub
testl
add
xor
jns
repnz
out
test
notb
jg
sub
pop
adcb
mov
pop
inc
cmpsl
adc
dec
imul
push
cmp
dec
dec
out
out
mov
sbb
insl
push
jmp
cmpsl
xor
and
divl
frstor
jb
test
cli
sub
movsb
adc
sub
jbe
mov
outsl
mov
add
ljmp
push
mov
dec
scas
pop
outsb
movsb
stos
orb
call
test
addr16
aas
rcr
imulb
inc
les
push
lods
cmp
testb
add
cld
test
cmc
pusha
adc
xor
jmp
iret
je
push
mov
shrb
xchg
repnz
inc
daa
out
stc
xor
lods
es
loope
xchg
sub
das
add
aam
sti
xchg
or
das
sbb
addr16
sub
hlt
xchg
cmpsl
sbb
sbb
xchg
call
push
and
in
in
push
and
std
andl
mov
push
pop
pop
jnp
adc
imul
mov
pop
mov
arpl
jp
mov
mov
sbb
mov
sbb
clc
sbb
pop
pop
aaa
cwtl
jnp
in
xchg
sbb
repz
pushf
sbb
adc
out
test
push
mov
sub
cmp
jb
lea
out
or
xorl
cmpsb
adc
jl
sbb
inc
sarl
mov
popa
push
pop
adc
data16
adc
push
inc
imul
ljmp
jp
aas
outsb
xchg
xor
and
dec
push
sbb
ret
aaa
lods
orb
jp
fs
inc
add
iret
jg
inc
call
fwait
jno
xor
pusha
mov
out
and
and
pusha
mov
ja
inc
je
int3
mov
nop
sub
nop
xchg
sbb
jnp
mov
or
insl
pop
lods
dec
push
dec
jl
pop
pop
mov
pop
ljmp
aad
test
cmp
or
xchg
lds
cmp
fldt
or
clc
push
call
frstor
mov
int3
or
pop
cmpsl
jb
cmc
loopne
adc
cld
cld
xchg
popa
insl
pushf
sbbb
or
xchg
sub
cmp
pusha
dec
pop
repnz
cmpsb
js
add
sbb
sbb
push
aaa
or
fists
xchg
shr
lret
cmp
push
adc
dec
pop
das
sbb
xlat
dec
test
scas
or
scas
movsb
xchg
push
jmp
mov
xchg
hlt
jle
sub
hlt
push
test
push
xchg
mov
clc
ds
add
xor
add
pop
addr16
in
aas
fsts
rep
sar
cltd
pushf
pop
pop
mov
push
xor
mov
sbb
loopne
insl
pop
mov
dec
dec
cmp
mov
outsb
test
mov
orl
mov
add
in
and
adc
pop
inc
nop
daa
data16
adc
xlat
cmpsb
adcb
pop
std
mov
cs
popa
jge
cmc
inc
pusha
sar
adc
stos
push
shl
mov
mov
xchg
dec
shll
add
test
mov
arpl
xor
mov
mov
fisttps
rorl
jp
push
repz
and
mov
ljmp
xchg
lea
ror
mov
test
in
jle
outsl
test
ljmp
or
ret
test
out
xor
push
loope
cmp
nop
or
inc
inc
push
ss
xchg
mov
dec
and
push
push
cmp
jecxz
test
vminps
adc
imul
cmpsl
decb
sub
push
roll
scas
add
cmc
shrb
gs
in
stos
andb
loopne
mov
inc
add
pop
cltd
mov
push
mov
cmp
sti
mov
sbb
inc
add
jl
mov
xor
xor
pop
sub
mov
ss
ret
pop
push
dec
jecxz
jnp
sbb
or
lcall
dec
sub
mov
ret
mov
mov
jae
or
imul
pop
add
xor
or
ss
pushw
aas
mov
jp
ficompl
sbb
dec
push
mov
out
push
sub
fstpl
jl
fsubp
jae
pop
push
add
pop
clc
gs
xchg
sbb
adc
xchg
adc
adcl
xchg
jo
lds
fisubrs
rclb
ds
xchg
push
mov
mov
repnz
ficomps
add
sub
cmpsl
mov
sub
mov
cmp
mov
ret
mov
cmp
mov
add
outsb
xchg
and
ret
fidivs
fimull
push
mov
xor
aaa
adc
in
leave
es
push
add
xchg
std
jle
or
movsb
and
in
stc
loop
int3
xor
push
xor
cmp
adc
ret
insb
xor
pushf
mov
out
outsb
jmp
and
mov
jae
pop
adc
mov
out
jp
ljmp
pop
xchg
decb
imul
push
and
adc
pop
insb
or
inc
scas
jp
sbb
test
mov
std
mov
arpl
mov
add
dec
lcall
mov
dec
push
lcall
shll
adc
cltd
in
stc
mov
jge
out
loop
movsb
test
mov
sti
aaa
xchg
add
xchg
jne
shrb
lret
movsb
or
out
rcl
sub
adc
mov
mov
int
fnstenv
pop
out
movsl
adc
xchg
mov
repz
push
mov
push
loopne
repz
jae
xchg
pop
add
fwait
mov
mov
xlat
jo
or
push
inc
jo
divb
lret
jmp
fstpl
andl
pop
ret
sbb
add
jbe
fwait
and
adc
aad
push
inc
mov
xor
std
lahf
dec
push
xchg
adc
xor
push
ja
jecxz
xchg
adc
and
pusha
mov
pop
xor
xchg
ja
hlt
ja
loop
mov
les
lcall
rcl
scas
sub
mov
xor
cmp
dec
orl
data16
orl
cmp
xchg
ret
data16
pop
adc
mov
fsubs
mov
ss
call
pushf
leave
or
sbb
jno
adc
push
mov
loop
subb
imul
dec
imul
cmp
mov
adc
mov
bound
mov
jnp
xchg
inc
popa
mov
mov
ja
rcl
cmp
mov
push
mov
or
scas
adc
or
sbb
pop
test
and
cmpsb
sub
fildl
adc
ficompl
test
sahf
cmp
outsl
rolw
mov
repnz
rolb
xchg
out
cmp
mov
push
cmp
jo
test
sbb
divb
hlt
lock
or
mov
push
nop
and
fdivs
jns
clc
mov
and
push
xchg
or
sub
es
sub
pop
lods
xor
insl
test
xor
lods
jp
push
sub
loopne
xor
pop
mov
shl
cmp
push
lods
add
mov
sub
or
sbb
push
pop
jg
mov
push
call
dec
in
repz
adc
push
ja
push
hlt
orl
and
lcall
out
pop
mov
push
out
push
pop
mov
cmp
cmp
call
ss
add
xchg
cmc
lret
add
xlat
ljmp
sbb
ja
shrb
inc
dec
push
rolb
pop
pop
xchg
xchg
jae
adc
out
adc
pop
outsl
jae
xchg
lods
dec
lds
fdivs
xor
mov
mov
jmp
xorb
push
mov
js
mov
or
pop
lahf
inc
mov
fstps
inc
fidivrl
xchg
inc
jne
or
add
jbe
pop
pushf
rorb
shll
int
jmp
inc
jae
enter
and
fsub
cltd
iret
cwtl
or
push
inc
xchg
scas
jbe
pop
or
mov
push
sbb
gs
xchg
sti
repnz
xor
lcall
dec
sti
mov
push
xor
push
push
pop
cmp
lret
and
ljmp
cmp
std
sbb
es
not
out
mov
fwait
inc
xchg
dec
je
das
pop
rcrl
cmp
fisubs
xchg
pusha
fstpl
xchg
sahf
notb
push
loop
push
mov
xchg
and
in
pop
jl
xchg
js
push
lahf
loope
xchg
lea
out
push
es
pop
mov
pop
inc
push
cmp
cmp
ret
and
push
mov
test
roll
xor
sub
rcrb
lahf
pop
dec
sbb
pop
or
mov
bound
daa
jne
in
jge
call
sar
adc
lock
mov
jl
jg
in
js
cmp
jmp
adc
cmp
lret
shll
or
mov
fcmovnu
jns
jbe
fiaddl
jmp
add
insl
xchg
shlb
push
cmp
in
lea
insb
popf
mov
pop
scas
pushl
outsb
adc
or
mov
ds
xor
test
and
push
lahf
cmpsl
sarb
out
lret
xor
sbb
xor
lret
and
stos
mov
add
pop
dec
mov
ret
hlt
shll
pop
sub
fs
aas
jecxz
orl
insb
ss
lret
repz
dec
loopne
aam
inc
jae
or
bts
xchg
dec
sarb
shr
fwait
call
sub
mov
pop
les
movsl
mov
lods
data16
mov
xor
gs
jp
cmp
loope
jnp
mov
int
jecxz
outsb
inc
ret
jno
xor
dec
and
scas
aas
cmpsl
pop
or
fwait
or
mov
rol
xchg
mov
push
cmp
stc
dec
into
or
mov
clc
xor
xchg
stos
mov
dec
sti
stc
jbe
addr16
imul
add
leave
aam
andl
jno
sbbl
outsb
mov
out
movsb
sbb
mov
out
or
movsl
and
jne
sbb
xchg
rorb
fs
jnp
cld
jmp
lcall
mov
ja
lock
mov
into
or
mov
jmp
idivl
inc
push
pop
pusha
xchg
mov
lds
push
in
sbb
out
cmpb
mov
mov
aaa
int
xchg
xchg
pop
xor
cmp
mov
lods
lods
divb
enter
stc
sbb
sbb
aas
pop
cmp
sbb
insb
xor
lcall
jl
insl
push
push
push
push
and
mov
mov
mov
add
pushf
xchg
out
ret
in
in
daa
das
pushf
xchg
jecxz
mov
mov
xor
cmp
lea
fdiv
cmp
pop
and
shrb
and
jecxz
xchg
adc
xor
dec
gs
mov
and
xchg
shl
add
stos
inc
scas
fs
add
popf
dec
popf
in
pop
push
icebp
push
and
dec
jo
jbe
mov
cmp
inc
insl
mov
mov
adc
xchg
adc
jns
cmp
sbb
sub
xchg
into
push
rol
cmp
lret
push
sti
sbb
add
add
or
fimuls
cmp
jnp
es
lret
mov
lods
dec
lods
incl
add
sbb
mov
sti
xchg
imul
sub
int
sbb
jbe
out
outsl
jnp
es
ret
in
lret
add
sub
mov
xor
je
jns
add
jg
movsl
das
pop
pop
add
mov
call
sbb
jnp
aad
mov
jbe
int3
sti
lret
add
aas
and
push
add
or
mov
adc
mov
ljmp
push
lods
xchg
hlt
xor
add
mov
push
mov
xchg
sub
jae
lea
ret
push
xchg
push
loop
lods
xchg
cmpl
enter
addr16
or
cmpsl
mov
cwtl
fiaddl
adc
or
cli
ss
jge
mov
aad
je
xor
mov
add
mov
cli
fsts
test
in
xlat
or
negl
sbb
ja
add
adc
idivl
push
jae
test
in
stos
repnz
jo
lods
add
cmp
cmp
ret
adc
mov
je
loope
pop
sbb
clc
out
mov
push
cli
inc
xchg
icebp
sub
scas
and
adc
lret
lahf
ret
xchg
inc
adc
adc
mov
test
cmpsb
mov
in
lea
xor
xchg
imul
notl
mov
xchg
or
sbb
ja
pop
cld
and
xchg
cmpsb
push
adcb
jg
or
adc
aad
jle
dec
xchg
out
push
cltd
or
xor
fimull
shrl
sbb
fstps
das
xchg
push
out
inc
js
mov
push
push
lods
xor
movsl
jg
clc
scas
rorb
std
mov
jg
gs
scas
adc
lret
pop
aad
rol
into
imul
sbb
xchg
test
inc
mov
inc
mov
push
jb
mov
fistl
andl
leave
xchg
push
push
fildl
cltd
sbb
movsl
mov
adc
shr
xorb
imul
jae
adc
add
ss
js
inc
jp
test
jb
cmp
jmp
out
cmp
gs
shlb
pop
xchg
fxtract
mov
pop
nop
adcb
ljmp
ret
jmp
jb
xchg
mov
sub
xlat
add
cmp
lahf
and
pop
lock
push
stos
outsl
jmp
addl
mov
jns
repz
mov
aam
adc
scas
jnp
fistpll
jp
mov
xchg
hlt
xchg
lcall
lret
popa
icebp
pop
test
pop
insb
and
pop
test
jnp
movsl
daa
iret
stc
jge
pop
and
movsl
test
add
or
inc
pop
cmp
mov
jo
ret
xor
addb
lock
inc
pop
xchg
test
dec
or
or
shlb
rcl
sub
push
mov
push
xor
movsb
lahf
ficoms
aam
js
sbb
pop
loope
enter
jg
out
xor
and
and
and
outsl
arpl
adc
loopne
int3
sar
add
popa
xor
lcall
dec
add
ja
movsb
outsl
ret
jmp
xchg
cli
enter
sahf
pop
mov
outsb
les
out
mov
ljmp
sub
int
test
cmpsl
cmpb
into
pop
mov
les
cli
aad
fdivs
pop
and
sarb
or
or
insb
mov
js
lea
push
idivb
mov
stc
jbe
push
in
inc
fstps
dec
rolb
emms
sbb
fwait
outsb
push
add
andb
or
adc
hlt
dec
test
shl
ss
stos
cmp
xchg
adc
pop
pusha
ret
or
test
hlt
mov
jno
ret
xor
cwtl
imul
stc
ja
lahf
xor
adc
mov
jl
and
mov
int3
xor
jo
push
push
mov
push
fs
rolb
out
cmpsl
xchg
and
imul
push
fs
shll
xor
rcrl
mov
cli
nop
subb
clc
xchg
mov
sbb
sub
mov
add
adc
mov
movsl
inc
cmp
jnp
js
mov
cmp
icebp
xorb
scas
sahf
in
call
je
outsl
push
adc
jbe
test
or
lea
mov
and
ficoms
ret
push
xchg
cwtl
add
pop
jmp
or
xorl
andl
sub
adc
sub
dec
cmp
out
push
jno
jmp
lods
and
xor
fildll
adc
loopne
adc
push
repz
notl
lds
xchg
add
sub
inc
sti
or
sbb
dec
jg
lcall
dec
inc
ss
inc
mov
mov
fs
repz
popf
mov
in
lock
push
mov
mov
addb
mov
scas
xchg
push
or
or
idivb
cmp
sbb
test
imul
jmp
addb
jno
lcall
pop
leave
shlb
jg
aas
scas
xchg
sub
imul
stc
push
jno
ja
imul
mov
pop
loop
jmp
xchg
loop
int
int
push
loope
xchg
test
aaa
inc
iret
dec
dec
stos
and
xor
inc
clc
insl
test
cmp
pop
mov
fs
mov
clc
pop
mov
mov
addr16
sti
cltd
aas
cmp
sti
cmp
sar
inc
inc
in
push
dec
adc
sub
inc
fwait
jne
adc
ja
lds
jns
push
push
ja
mov
cmpsb
add
jae
inc
adcb
inc
jg
cli
add
xor
adc
push
mov
add
fistps
dec
adc
mov
pushf
jb
hlt
xchg
stos
sub
mov
aas
frstor
aas
mov
shrb
inc
adc
outsb
test
add
jg
lds
xor
add
add
dec
add
mov
sbb
mov
scas
cmpsl
dec
inc
nop
es
addr16
sbb
cmp
shrl
dec
js
hlt
loop
push
cmp
call
cmp
mov
xor
subb
ds
pop
mov
pop
xor
test
ret
mov
mov
cmp
xchg
es
cld
push
mov
es
fstpt
sti
call
icebp
sub
fildll
mov
stos
pop
jp
inc
jl
sub
lea
or
sbb
testl
in
dec
mov
xor
stos
imul
lea
pop
mov
hlt
aad
fwait
iret
add
pop
stos
hlt
sahf
or
insb
inc
or
xchg
pop
or
jnp
push
pushf
in
pushl
fists
add
aas
dec
scas
push
adc
pop
out
mov
sahf
or
adc
call
in
shl
cwtl
mov
out
out
ljmp
lret
jmp
mov
mov
mov
sbb
inc
push
or
ja
xchg
into
add
divb
dec
fisubrl
inc
or
inc
sbb
fisttps
cmp
negl
jmp
mov
xor
mov
hlt
cli
cmp
sarb
jno
dec
cmp
insl
icebp
pop
lcall
stos
push
fiadds
sbb
and
push
arpl
dec
xchg
pop
scas
xchg
movsl
movl
mov
sub
jge
mov
mov
jnp
cmp
adc
outsb
les
js
stos
repnz
repz
ja
pushf
xchg
fucomp
jmp
sub
outsl
icebp
adc
sbb
add
adc
outsl
mov
and
ret
cmpsl
inc
push
pop
pop
jne
aam
lahf
sub
jecxz
int3
dec
cwtl
rclb
mov
out
jne
add
xchg
bound
mov
shlb
cs
xor
mov
cmpb
cli
fimull
imul
aad
mov
stc
out
pop
lret
push
mov
fnstenv
mov
sbb
pop
and
mov
rcrl
mov
dec
fistps
gs
pushf
mov
in
js
push
inc
fiadds
scas
cs
cmp
jne
lcall
sbb
xor
dec
mov
divb
fwait
ret
add
mov
fnsave
arpl
adc
stc
int3
shll
cmc
aam
dec
out
push
cmp
jno
cmp
or
add
lahf
add
sbbl
inc
xchg
sbb
std
jg
sub
add
xchg
ljmp
movsl
jg
lahf
ret
mov
dec
push
daa
leave
mov
in
adc
or
test
out
ficoms
lock
jmp
push
test
jg
xlat
push
int3
pop
inc
adc
jp
pusha
cmc
sti
jb
mov
pop
or
and
in
sarb
test
in
xor
sub
movsl
pop
cwtl
xchg
shl
inc
dec
test
scas
dec
sbb
pop
and
cltd
inc
dec
repz
gs
mov
cs
aaa
push
fwait
lret
in
into
cmp
jmp
pusha
push
movsl
and
mov
stos
roll
pop
test
fcoms
test
lods
jecxz
xor
fdivl
inc
dec
cmpsb
fnstsw
sarb
jg
fistpl
mov
mov
cltd
pop
push
sar
pushf
cmpsl
lret
dec
popa
add
aam
xchg
cmp
imul
stc
leave
mov
mov
fidivl
and
testb
repz
stos
mov
negb
xor
jp
mov
out
cmp
mov
mov
bound
shrl
pushf
loop
sbb
test
int
test
lret
mov
cmpsl
not
xchg
into
push
jmp
or
cmp
mov
roll
insl
mov
pop
les
push
out
adc
add
or
cmpsb
sbb
sahf
cmp
push
xchg
int3
shll
cmc
xor
dec
lods
popa
pop
cli
hlt
cs
dec
adc
and
out
pop
daa
aaa
mov
jl
arpl
jl
.byte
mov
.byte
dec
scas
add
clc
aam
popf
xorl
xchg
sub
cltd
cmp
sbb
mov
mov
inc
aad
ljmp
push
inc
and
inc
stos
cmp
mov
inc
and
jne
xchg
outsl
dec
sbbb
cltd
cmc
cmp
scas
fadd
jl
sti
push
or
in
stos
sbb
push
fisubl
fs
sub
sub
mov
xor
mov
stos
xor
mov
push
int
movsl
xor
push
mov
outsl
lea
int3
lods
jge
mov
scas
out
jmp
add
rorl
cli
cmp
dec
sub
adc
out
mov
sub
sub
push
mov
cmp
pop
adc
jle
cmp
mov
outsb
jae
cli
push
push
inc
fsubrl
sub
lret
mov
pop
mov
adc
loopne
ret
in
mov
and
stos
mov
fldcw
outsl
jb
cwtl
jle
mov
divl
jns
jbe
call
adc
in
pop
pop
sbb
jle
cs
sub
or
mov
sub
push
xor
jne
jl
mov
inc
insb
hlt
xchg
popa
arpl
mov
xor
notl
popa
cld
jns
insl
add
dec
daa
dec
jg
repnz
sbb
push
jns
xor
sbb
sbb
inc
sub
scas
cmp
test
aam
fwait
jno
aas
adc
xchg
adc
cmpsb
sti
and
jge
push
push
clc
cmp
cltd
mov
mov
repz
xchg
and
inc
push
dec
xor
cs
fcmovnb
add
roll
pop
push
ret
data16
mov
cmpsb
inc
jne
pop
aad
outsl
mov
lahf
cli
mov
pop
xchg
loope
stc
mov
inc
out
cwtl
pushf
pop
xchg
push
roll
add
repnz
fidivrl
mov
xchg
loopne
mov
sahf
rolb
pop
cmp
sbb
sub
inc
ja
fdivrl
dec
fs
or
shlb
lret
jns
mov
loope
xlat
jmp
mov
mov
dec
cwtl
jo
outsl
jl
xchg
dec
int3
or
jl
nop
ss
out
scas
loop
notl
shll
push
fdiv
leave
cmp
dec
jmp
lret
shrl
stos
jbe
push
fs
in
push
out
adc
repnz
and
pop
or
mov
xchg
mov
or
adc
in
hlt
jg
xchg
stc
dec
add
mov
and
and
mov
jp
cmpsl
sub
or
cmp
jle
push
mov
jbe
jecxz
into
cli
test
fcomps
inc
cmp
inc
ficompl
sahf
mov
cli
lds
int3
fcompl
inc
adc
mov
lods
pop
sti
lods
rcll
les
mov
iret
cld
pop
adcb
daa
int3
roll
and
jbe
lea
loopne
fwait
sub
xchg
jbe
xchg
int
andb
insl
int3
xor
xor
push
push
xchg
cmp
cmpb
pop
pop
int
jae
xchg
jmp
pop
ljmp
adc
jbe
pushf
ret
dec
mov
push
aam
cli
bound
repz
fcompl
cmp
test
mov
int3
cmpb
rcrb
jp
mov
dec
inc
mov
adc
jmp
jae
addr16
sub
mov
mov
mov
add
out
andb
and
cmc
fcmovnu
fistps
out
push
jg
std
adc
cld
lea
mov
xchg
rclb
ja
mov
into
push
sahf
pop
mov
stos
mov
lock
mov
pop
xchg
lea
mov
fadds
ret
add
inc
lret
xchg
rcrb
movsl
sbb
insb
ja
mov
cltd
pop
cmp
inc
jno
stos
mov
mov
out
lock
mov
or
fisubrl
div
adc
or
or
or
or
mov
movsl
popa
iret
out
repz
pop
dec
jnp
add
je
imul
add
jmp
mov
lea
add
sahf
out
icebp
in
sub
push
xchg
cmc
pop
xor
mov
mov
pop
mul
sbb
loop
jmp
aas
inc
xlat
outsl
and
sub
es
mov
int3
sub
inc
or
aas
mov
jae
push
or
jno
xchg
flds
lods
out
or
aad
inc
std
push
xchg
scas
and
jo
pop
cltd
imulb
push
push
stc
in
adc
into
mov
cmp
iret
xchg
mov
xchg
stc
mov
mov
outsl
ret
add
jo
fdivrs
bound
inc
or
inc
push
out
std
out
lret
xor
pop
jo
shr
or
mov
or
jno
les
adc
xchg
mov
je
inc
add
adc
mov
stc
mov
andb
out
inc
push
jecxz
movsb
push
fucomip
aas
cltd
or
cmp
dec
fdivrs
xchg
dec
out
rcrb
lret
cmc
and
or
and
rorb
test
loop
xor
sbbb
test
lds
fldl
or
dec
xor
outsl
inc
stos
push
mov
add
daa
pushf
aam
add
mov
mov
push
inc
ja
sbb
mov
dec
mov
cmc
imul
push
daa
mov
fimull
loop
inc
add
call
in
mov
dec
inc
add
and
and
mov
xchg
or
js
nop
jmp
xchg
test
mov
insl
cmp
hlt
add
pusha
xchg
xchg
push
sub
xchg
outsl
das
scas
and
push
add
mov
push
push
inc
mov
cld
xor
icebp
movsl
add
ja
add
push
movsl
lock
xchg
push
mov
cmpb
lock
pop
loop
loopne
pusha
std
rcl
pusha
lea
xor
dec
sub
push
mov
daa
orl
or
outsl
js
mov
inc
lret
cmp
push
adc
pop
cmpsb
test
mov
imul
sbb
jl
cmp
pusha
add
fs
fcoms
lcall
xor
cltd
inc
pop
outsl
ds
sbb
fs
jmp
sub
sbb
out
mov
jne
lods
xlat
inc
jbe
push
popa
push
push
sti
jns
dec
mov
or
jno
repnz
icebp
adc
sbb
and
cmpb
call
sub
cmp
in
pop
dec
sahf
mov
dec
push
mov
mov
movsb
xchg
lret
popf
pop
mov
int3
movsb
inc
push
inc
std
stos
inc
ror
arpl
mov
mov
mov
xor
push
inc
cmp
dec
push
sub
mov
in
mov
in
cltd
ret
sarb
testb
shll
test
fs
mov
loop
jno
lahf
stos
sbb
in
mov
mov
sbb
data16
test
dec
test
xlat
ret
insl
jp
ljmp
sarl
jbe
jno
dec
dec
mov
cmpsl
mov
ss
push
pop
andl
jl
stc
adc
cmpsb
mov
jmp
jb
jl
jo
out
leave
adc
std
mov
inc
call
pop
or
outsl
lds
inc
pop
jb
insl
adc
pop
cmp
cs
lret
leave
sbb
push
mov
in
xor
mov
dec
idivl
sbbl
xor
adc
int
movsb
xor
mov
lds
pop
clc
cmp
xor
repnz
in
pushf
call
popf
ds
mulb
pop
mov
mov
jmp
popf
lret
mov
outsb
data16
pop
xor
shll
cld
or
push
jns
add
push
jne
dec
push
aas
push
push
pushf
fsubrs
fs
jne
xchg
push
int3
adc
adc
mov
sub
push
cmp
adc
popf
xlat
mov
scas
jo
jnp
imul
sbb
and
xor
jo
and
out
jns
dec
pop
nop
and
jns
pusha
je
mov
push
ja
jae
sub
lods
dec
and
xchg
bound
ja
je
testl
fcoml
or
xor
in
push
mov
push
or
sbb
hlt
jb
pop
and
fstl
shlb
xchg
dec
fs
mov
sbb
iret
xchg
push
ljmp
push
mov
jbe
xor
sub
sbb
imul
xor
pop
fcoml
xchg
fsub
xchg
stos
xchg
out
xlat
push
adc
sbb
push
adc
mov
out
les
ljmp
ljmp
loopne
mov
pop
gs
test
cmp
mov
jle
cwtl
lock
loop
adc
ret
or
rcll
adc
jmp
xor
outsb
xor
dec
mov
or
in
sbb
pushf
xchg
enter
and
popf
xchg
clc
push
call
insb
ss
pop
iret
ss
outsl
cmp
fimuls
test
out
jbe
or
mov
mov
cmpsl
xor
insl
xchg
or
lret
dec
xlat
mov
jno
sbb
inc
lcall
cmpsl
arpl
push
push
push
mov
and
dec
mov
dec
inc
push
xlat
adc
hlt
push
and
push
push
pushf
pusha
out
push
daa
icebp
jno
out
andl
cwtl
cwtl
pushf
scas
test
cmc
cmpsl
ret
push
insb
mov
scas
mov
push
fstp
testb
jp
loopne
add
fs
push
imul
nop
sub
pop
mov
mov
adc
inc
fwait
xchg
test
repnz
pushf
out
les
sbb
jle
imul
mov
and
lret
loope
fwait
loope
int3
sub
fidivl
inc
ficoml
pop
add
sti
push
outsb
or
lea
outsl
jmp
sub
lods
xchg
test
push
mov
sbb
mov
adc
fdiv
mov
out
lock
cmp
cltd
ss
stc
dec
sub
pop
sarl
test
push
mov
xlat
xchg
inc
fyl2x
mov
test
mov
stc
push
int3
enter
in
and
rcll
sub
gs
jae
loopne
jb
lret
inc
ds
push
xor
dec
mov
xlat
dec
pop
in
addl
lock
call
stos
fisubrl
mov
dec
mov
pause
rolb
fistps
cltd
xor
sbb
or
or
outsb
jp
lods
rorl
fcom
dec
ss
je
mov
dec
cmp
dec
les
testl
push
lea
push
repnz
lcall
lea
cmp
sub
fbstp
add
ud0
cmpsb
or
push
mov
ds
push
jp
jmp
adc
adc
jb
fimull
stos
add
ret
pop
lea
xorl
adc
mov
pop
push
mov
adc
cmc
fchs
fnsave
pop
sub
fdivs
lods
es
stos
test
daa
out
icebp
cmp
dec
jg
pusha
push
call
ljmp
das
in
cmp
aad
ja
jnp
jb
jmp
and
jns
add
jle
fbld
lds
out
push
mov
mov
cmp
fsts
xor
xlat
xchg
xchg
sti
cmpsb
aam
xchg
pop
scas
push
inc
ja
rcrb
pushf
lcall
mov
jge
loope
dec
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
.byte
mov
.byte
rclb
sbb
or
dec
fwait
xchg
sub
ret
nop
push
pop
or
push
mov
jnp
pop
xor
add
jne
and
icebp
fidivrs
mov
lahf
gs
cmpsl
sbb
xlat
loop
add
sub
cmc
cmp
shrb
cld
pop
mov
sbb
push
add
dec
jmp
pusha
or
jmp
vcmppd
fidivs
insl
out
iret
jnp
cli
fmul
es
sbbl
jae
jne
xlat
xchg
insl
xchg
xlat
xchg
jmp
adc
add
sub
adc
ficomps
enter
sbb
adc
ss
clc
dec
fs
imul
test
bound
mov
lods
int3
dec
inc
and
js
xor
adc
outsl
rolb
xchg
in
outsl
jnp
dec
mov
mov
lea
mov
add
out
das
stc
call
gs
jbe
out
fstpt
nop
pop
mov
movsl
into
hlt
cmpsb
mov
inc
dec
pop
add
push
pop
mov
lock
jnp
sbb
push
mov
sub
int3
xchg
fstps
aam
movsl
mov
adc
mov
bound
cmp
dec
lods
jge
xchg
int3
outsl
leave
pop
adc
cmp
call
pop
jnp
jns
js
fisttps
pusha
movsl
das
ffree
addr16
notl
adc
dec
push
jecxz
jge
lcall
jle
movsl
repz
shlb
shll
insl
lahf
jno
and
sahf
dec
push
sbb
push
mov
mov
lcall
adc
cmp
mov
cmp
in
inc
insl
dec
sub
mov
push
sahf
and
fstpl
mov
cmpsl
rorl
js
das
js
test
pop
push
in
pusha
movsl
xor
inc
loope
inc
notl
cmp
das
out
dec
orl
mull
add
pop
mov
sbb
mov
outsl
cli
xor
stc
fists
ret
js
mov
lahf
pop
data16
pop
cld
les
arpl
mov
aas
das
sar
cmp
sbb
fpatan
or
cmp
xchg
daa
sbb
sub
fs
lock
hlt
ja
mov
and
mov
xor
xor
pop
sub
fcomps
loopne
mov
jge
out
xchg
scas
xchg
mov
daa
xchg
negb
xchg
dec
xchg
add
sub
movsl
js
adc
inc
and
mov
mov
dec
cmpl
add
inc
pop
mov
lods
sub
cwtl
insb
sqrtps
sub
inc
inc
negb
divb
shlb
xchg
addr16
or
or
sti
cmpsl
cmc
push
adc
mov
pop
outsb
loop
push
inc
and
xchg
movsl
mov
repz
xor
xlat
sbb
push
or
mov
test
add
pop
lret
insl
mov
je
pushw
add
mov
cmpsl
dec
inc
adc
stc
movsl
hlt
loop
shrl
jno
cmpsl
imul
push
mov
or
cwtl
cmovbe
mov
lret
pop
jp
nop
jg
nop
adc
mov
and
xchg
in
icebp
in
mov
mov
jno
fldl
or
adc
mov
cwtl
hlt
mov
and
stc
sbb
cmp
jns
cmc
popf
xor
sti
loop
repnz
cld
movsl
iret
inc
push
mov
neg
jecxz
pop
add
pop
test
cli
lret
sbb
ljmp
jno
push
sub
in
pusha
cmp
or
and
lock
or
mov
and
btr
sub
push
mov
not
mov
cmpsl
arpl
mov
in
mov
xor
and
cmc
mov
hlt
xor
inc
hlt
test
lock
jnp
push
xchg
jae
insb
imul
pop
push
xor
mov
sbb
lock
push
push
insb
mov
push
xor
pavgw
sbb
xor
dec
xor
in
ffreep
test
push
pop
add
cmp
jb
sti
inc
mov
adc
movhps
nop
lds
jecxz
ret
ror
es
dec
popa
mov
sahf
pop
movl
sbb
hlt
addr16
dec
repz
aam
mov
fs
mov
pushf
pushl
mov
xchg
add
and
fistpl
and
inc
push
ret
push
cmp
and
jo
jle
inc
mov
les
sub
lret
jge
fs
je
jmp
xor
rorb
ja
adc
jbe
pop
jbe
adc
xchg
iret
outsb
lea
pop
shrl
mov
xchg
pop
or
cmpsl
scas
movsl
fadd
dec
stos
aam
fcompl
pop
push
inc
mov
and
cltd
push
hlt
lds
iret
add
jp
jmp
mov
rcrl
int3
push
insl
mov
push
jae
outsl
rcrl
xchg
jno
dec
mov
shlb
aad
push
out
cmc
gs
rcll
sbb
imul
sbb
lea
roll
pop
push
pop
repz
repnz
mov
push
jge
das
jo
jecxz
adc
jo
add
inc
jno
in
dec
in
clc
mov
xchg
push
xor
push
sbb
sbb
mov
insb
lahf
pop
fwait
fwait
out
mov
sbb
xor
jae
enter
icebp
mov
cltd
scas
adc
scas
and
stc
sbb
xchg
ror
sbb
loopne
and
push
js
lret
jmp
pop
std
filds
imul
scas
push
mov
and
imul
add
jmp
add
pop
pop
sbb
imul
add
cmpsb
and
lods
out
or
call
repnz
repz
pushf
frstor
lcall
int3
mov
les
ss
outsl
or
xor
aad
jg
aad
xchg
xor
adc
fistpl
inc
adc
out
inc
jo
or
testl
rcrl
aaa
lods
dec
jmp
lock
mov
adc
shl
in
pushf
mov
xchg
sbb
ret
cmpsb
pop
cmpb
xchg
jge
xchg
xor
xchg
loop
mov
xchg
mov
lea
xchg
shlb
scas
cltd
test
imul
inc
and
in
adc
cmpsb
jp
insl
mov
and
xchg
sbbb
cli
add
pop
pop
push
jmp
dec
stc
in
dec
cmp
push
dec
cmpsb
imul
in
add
in
repz
hlt
leave
stc
jl
sarb
cmpb
fidivl
test
xor
inc
push
dec
icebp
jge
mov
jmp
pusha
mov
popa
in
cmp
decb
sub
inc
jge
add
cmc
mov
loop
int3
sub
push
je
lock
pop
mov
or
lahf
ds
inc
sahf
fidivl
mov
and
dec
hlt
rcrl
push
push
adc
js
mov
jp
into
mov
jg
mov
int3
lret
xchg
xchg
scas
data16
or
in
and
mov
or
fimuls
ljmp
xor
cmc
cltd
les
ja
lahf
inc
push
jg
or
stos
aam
sbb
mov
iret
mov
rolb
movlps
xorl
cs
aas
dec
push
xor
rcrl
std
add
and
cmp
movsb
setle
or
push
clc
mov
jp
shll
cmp
sub
push
inc
or
test
js
stc
cs
jecxz
rcrl
cmp
loop
mov
xchg
js
mull
outsb
loopne
mov
shrb
jae
cli
adc
dec
push
pop
add
jns
pusha
or
cmp
cli
mov
jmp
sbb
xchg
stos
popf
outsb
aam
das
cmp
jo,pt
jne
sbb
jp
sub
lret
xchg
ficomps
jge
or
rcl
cmpb
cmpl
in
ret
xchg
std
mov
jg
cmp
dec
es
inc
or
nop
sub
rclb
sbb
xchg
arpl
enter
jle
loope
push
cmp
bound
fwait
or
xchg
xchg
and
fimuls
dec
loopne
pop
sub
daa
inc
pop
sti
pop
mov
ret
add
inc
xchg
call
lods
sbb
sbb
pop
rol
sub
loope
mov
nop
aaa
jecxz
xlat
pop
es
sub
xchg
push
ds
fwait
test
das
adc
ja
xor
scas
pop
nop
cli
icebp
addr16
mov
xor
aam
adc
jle
dec
jno
pusha
mov
sub
out
inc
icebp
cmp
loopne
aad
mov
jns
add
jge
pop
xlat
sub
daa
jmp
jae
ret
cld
in
jle
in
or
stos
pushl
data16
call
lods
into
and
or
enter
arpl
jl
jb
fs
sbb
mov
lea
clc
add
ljmp
cltd
rol
imul
pminsw
or
bound
jl
jnp
cli
mov
rcrb
mov
jns
repnz
iret
lods
bound
cmp
iret
in
xchg
dec
sbb
or
movsb
inc
jne
int3
push
shl
imul
pop
sbb
adc
adc
test
lock
jge
hlt
jp
sub
pushl
jbe
imul
xchg
cmc
mov
sbb
jmp
push
mov
pop
inc
movl
fnstsw
leave
pop
arpl
cmp
lret
cs
in
mul
imul
stos
divl
stos
sbb
mov
push
ja
pop
pusha
sbb
mov
fdivr
out
push
movb
adc
das
fisubrs
sbb
cld
push
adc
out
fwait
in
push
in
dec
inc
adc
fildll
sub
add
mov
lea
sub
fscale
sub
pop
inc
inc
in
and
mov
mov
sti
iret
mov
movsb
push
dec
fdivl
mov
dec
in
xor
in
lcall
aaa
mov
push
imul
push
lcall
xor
insb
gs
adc
mov
addb
ds
lret
xor
jge
xchg
push
jnp
inc
pop
mov
cmp
in
cli
push
jo
pop
rcll
subl
lods
flds
int3
push
iret
flds
mov
roll
insb
mov
sbb
aad
adc
sar
dec
lds
arpl
mov
imul
subl
sub
insb
jecxz
rcrl
div
jns
cltd
jle
imul
gs
loope
outsb
xchg
hlt
jp
sub
cwtl
pop
les
jecxz
nop
adc
pop
mov
int3
add
loopne
pop
outsb
adc
jo
or
mov
xchg
clc
shrb
dec
aaa
arpl
push
outsl
arpl
js
xor
out
pop
jbe
and
leave
inc
stos
xchg
popa
pushf
push
mov
gs
fadd
aam
adc
and
sub
roll
and
aam
ja
mov
mov
sbb
iret
leave
push
mov
popa
pop
aad
xor
sbb
ret
inc
jbe
repz
jne
inc
pop
loopne
nop
xchg
cs
scas
xchg
or
movsl
jmp
loop
fstl
fisttpl
test
and
mov
clc
jl
sbb
sti
stos
and
cs
xor
and
int3
adc
pop
mov
and
jmp
xor
das
mov
pop
push
js
xchg
mov
dec
std
rcrl
mov
mov
add
push
rol
sbb
lock
xchg
out
loop
adc
shl
pop
out
pop
loopne
pop
mov
cmpsb
xlat
cmp
std
jo
ss
addl
movsl
xchg
push
inc
push
pop
dec
xchg
inc
sbb
lret
and
int3
nop
inc
rolb
lret
sbb
iret
inc
dec
or
insl
ret
out
int
movsl
fildl
lods
dec
pop
push
xsaves
shrb
pop
popa
mov
mov
testb
dec
push
dec
pop
dec
mov
jae
or
mov
pop
sbb
mov
roll
sbb
add
mov
push
inc
dec
sub
pop
fsub
ret
pop
out
ja
mov
adc
test
pusha
rclb
in
into
add
mov
scas
aad
inc
dec
scas
out
pusha
jns
lods
aad
sbb
loopne
fistpl
cld
rclb
aaa
and
sbb
or
js
clc
pop
cli
dec
fnsave
cwtl
std
ret
pop
pushf
push
xor
adc
sub
ror
fsubrl
into
out
mov
adc
mov
cmc
ds
gs
int3
ret
mov
jle
stos
or
sub
add
or
or
xchg
mov
sub
movsl
mov
pop
push
mov
repnz
mov
dec
mov
das
cmp
push
xor
dec
pop
push
push
lods
cmp
incb
rcrl
mov
inc
push
cmp
jge
test
out
in
nop
and
push
lods
pop
push
and
pusha
dec
jae
shll
ljmp
xchg
pop
push
or
cli
popf
sbb
ret
adc
out
loop
int3
mov
test
rorl
cld
cs
jno
loope
mov
fucomi
mov
das
test
inc
add
cmc
mov
inc
sub
repnz
jns
adc
jl
cltd
mov
scas
xchg
xor
jo
mov
xor
add
int
inc
in
bound
xchg
call
jnp
mov
jb
scas
nop
je
scas
push
mov
shl
cmp
pop
jo
roll
mov
gs
sbb
or
out
inc
cli
scas
xchg
dec
cltd
sbb
mov
and
xchg
xor
je,pt
sbb
pop
sahf
fwait
pop
or
vpacksswb
mov
xor
mov
mov
jp
pop
pushw
xchg
ror
cli
xor
inc
mov
cmp
adcb
sub
add
les
xor
ret
ret
xchg
inc
and
mov
out
loopne
rcll
mov
mov
inc
xchg
cwtl
loopne
xlat
lods
imul
xor
inc
aad
paddusw
repz
ret
sub
lods
imul
adc
xor
insb
dec
repnz
jne
fdiv
dec
test
cmp
sbb
outsl
push
push
enter
xchg
cmpsl
xorl
jl
push
cmpsb
jge
out
insb
pop
das
jmp
fadds
cmpsb
shlb
stos
mov
mov
push
hlt
lret
cmpsb
aam
repz
dec
push
push
fistpl
pusha
test
lea
fucom
out
je
xchg
cmp
pop
idiv
mov
aam
movsb
xchg
out
lea
and
add
xchg
cltd
dec
aas
push
push
imul
mov
nop
add
adc
push
fnstsw
jo
inc
add
shll
fiadds
out
shrl
xchg
dec
movsb
in
add
adc
lods
aad
cli
mov
sbb
arpl
arpl
ja
test
popa
and
cmp
aaa
dec
inc
push
pop
and
push
add
xchg
sub
mov
mov
jle
insb
sbb
test
fisttpl
xor
test
jecxz
arpl
mov
pop
or
movsb
das
popf
mov
das
nop
rclb
in
mov
inc
sub
xchg
jo
mov
push
outsb
inc
dec
insb
cmp
pop
cmp
inc
sub
mov
sbb
mov
rcrb
mov
jae
inc
clc
inc
and
or
mov
mov
daa
andl
dec
mov
gs
xchg
sub
mov
inc
cmpsl
cmp
repz
push
adc
outsb
cmp
pop
imul
push
test
jbe
sahf
cmp
jo
movl
push
cltd
xchg
cmp
xchg
fcmove
in
and
cld
adc
fadd
push
loopne
cmpsl
add
repz
mov
rcll
sub
sbb
adc
mov
jo
xchg
lds
sbb
incl
mov
or
arpl
test
dec
stc
shll
fnstsw
in
outsl
cmpb
sub
sbb
or
lods
aaa
sbb
pushf
js
xchg
sbb
xchg
lahf
or
test
aaa
add
sbb
out
push
xchg
dec
scas
push
lcall
lock
rcll
mov
mov
xor
jge,pn
daa
adc
mov
pop
fs
mov
cmp
cwtl
mov
push
cld
add
lcall
mov
stos
int3
test
out
mov
subb
xor
pop
out
mov
sub
inc
pusha
lea
push
inc
nop
inc
test
nop
out
mov
sub
and
pop
pop
add
cmpsl
push
mov
pop
mov
mov
pop
mov
sub
inc
sub
lret
cmc
faddp
lret
lret
rorb
mov
and
push
dec
inc
fcoml
add
movsl
clc
insb
push
cmp
mov
sub
iret
cltd
jle
mov
sbb
jl
repz
pop
imull
xor
popa
aaa
stos
inc
push
hlt
mov
xchg
clc
fisttps
sub
rcr
mov
in
das
cs
inc
mov
jecxz
jae
and
out
sbb
gs
xchg
xchg
xchg
jno
add
cmpsl
int
test
loope
fistps
xor
dec
pop
pop
mov
out
rorl
leave
ret
jp
aaa
xchg
push
test
or
scas
jns
inc
dec
imul
push
mov
test
jl
inc
or
std
sti
popf
loopne
lock
in
or
mov
jmp
sbb
adc
mov
sub
pop
mov
popf
mov
popf
add
sub
rcr
sarb
fdivl
or
cli
mov
mov
scas
ret
sub
sahf
sub
mov
mulb
mov
xchg
inc
test
jge
mov
inc
cli
imul
or
ffree
adc
or
jno
stos
test
js
jg
or
scas
inc
jmp
sbb
gs
int
xchg
rclb
add
inc
jb
fcompl
or
out
cli
and
push
cs
jno
jne
neg
cmc
inc
mov
insb
or
test
je
add
mov
jnp
or
inc
repz
xor
jecxz
xchg
lods
mov
or
cmp
sub
add
and
bound
fadd
sar
outsb
stos
es
pusha
add
cmp
inc
imul
cmpb
iret
mov
lahf
pop
or
cmc
sahf
push
orb
mov
xor
xor
outsb
int3
push
adc
int
push
xor
sti
sub
and
mov
popf
inc
sub
fldcw
addr16
jbe
mov
iret
repz
out
jl
pushf
add
ljmp
rolb
popf
pop
in
xchg
sub
jl
mov
sti
mov
jmp
outsl
push
subb
adc
pop
mov
and
cmc
push
outsb
adc
into
div
mov
xchg
ret
mov
shrl
cmp
mov
pop
out
ficomps
jnp
xor
orl
push
cmp
ret
popa
stos
pop
and
or
cmp
les
cltd
xor
fdivr
popa
mov
cmpsb
or
xchg
push
jl
dec
xor
mov
and
mov
out
mov
dec
sbb
adc
adc
mov
jle
pop
dec
mov
sub
cmpsl
xchg
and
lods
push
push
jmp
lods
sbb
out
rcrl
mov
push
jns
insl
mov
jle
sbb
lcall
pop
or
mov
xchg
xor
mov
ja
xchg
dec
sub
jo
xorb
test
out
jno
push
cpuid
int
out
or
lods
inc
and
icebp
jp
inc
mov
sahf
dec
inc
ret
jns
xor
movsl
ss
add
fsubrl
mov
test
and
push
mov
xchg
jb
mov
inc
ret
mov
sti
js
and
cmpsl
inc
mov
dec
dec
js
cmpsb
stos
inc
cmpsb
out
cltd
and
sti
mov
push
dec
ret
adc
in
andl
leave
daa
dec
outsl
adc
sbb
dec
scas
orb
add
lea
nop
mov
sarl
sub
insl
push
jmp
lret
mov
or
xchg
xlat
jp
insl
js
out
aad
jnp
push
loop
jle
fwait
xchg
js
mov
and
test
sub
insl
inc
hlt
addr16
jp
cli
fldcw
lea
fldcw
jle
pop
insb
mov
jmp
xchg
or
cmp
adc
inc
call
pop
add
xor
cmpsl
pop
dec
sarb
rorl
scas
and
insl
les
jp
movsb
mov
jge
push
pusha
mov
mov
sti
aaa
add
jnp
movsl
insb
out
aaa
and
ret
clc
mov
inc
in
xchg
cmc
inc
sbb
sub
cmp
shrb
lahf
xchg
inc
mov
inc
inc
mov
loop
shrb
ret
rcl
xor
mov
int
cmp
addr16
bound
xchg
pop
dec
jg
jnp
push
sahf
xor
inc
mov
sbb
xor
outsb
rcr
pop
outsb
pop
loop
jge
xor
pusha
movd
out
mov
mov
dec
sahf
push
jne
out
ret
jne
clc
testl
out
repz
imul
jp
add
push
xchg
or
inc
jae
cmp
fwait
xchg
cs
mov
cmp
ss
lret
jnp
mov
imul
loope
lret
jle
repz
lret
fdivrl
ja
mov
mov
pop
sbb
sbb
loope
loopne
sub
sbb
push
scas
das
inc
bound
or
mov
xchg
icebp
mov
sub
mov
mov
movsb
mov
cwtl
push
mov
in
or
jecxz
adc
push
je
push
mov
inc
jne
cwtl
sarl
mov
pop
cltd
in
push
movsb
inc
scas
outsl
mov
sbb
sti
sbb
iret
lods
sub
in
xchg
sbb
add
pop
push
icebp
test
jns
ss
in
add
pop
and
decl
xchg
roll
pusha
adcb
arpl
fcoms
and
leave
sbbl
sub
sub
ds
inc
in
in
mov
ja
inc
xor
mov
jmp
out
mov
insl
adc
outsl
dec
or
dec
lock
xor
sub
aas
pop
sbb
or
mov
bnd
scas
fcmovb
adc
pop
push
sahf
fwait
jl
enter
out
pop
bnd
roll
and
lds
inc
add
cmp
xlat
fistpl
sub
sbbb
add
push
mov
andl
mov
sub
add
enter
sar
lds
cmc
out
and
lods
pop
arpl
inc
ds
mov
pop
push
mov
stos
fcmovne
and
cmpsb
das
push
ljmp
and
lahf
xor
xchg
rolb
mov
mov
ds
jmp
outsl
out
loope
xchg
inc
cmc
and
cmpsl
cmp
jno
xchg
pop
int
cmp
pop
cmp
out
dec
push
push
int
xchg
fnstcw
push
cld
dec
daa
ljmp
push
cmc
adc
xchg
xorb
imul
xchg
xorl
add
xchg
mov
mov
sub
dec
gs
xchg
dec
scas
inc
pop
adc
add
pusha
sbb
stos
imulb
mov
shrd
pop
out
sbb
or
loop
xor
ljmp
add
jno
ljmp
cmpsb
gs
sub
dec
xchg
fimuls
ret
xor
mov
fdivr
movsb
fcoms
xchg
add
sbb
ss
jle
ret
sub
pusha
push
or
jmp
test
xor
int3
pop
xchg
clc
mov
xor
test
pop
push
mov
loope
xor
insb
pushl
cltd
movsb
jns
ret
adc
hlt
inc
inc
fldl
mov
lcall
sub
fnstcw
jle
or
push
adc
sahf
lcall
jle
add
lcall
mov
push
fs
ja
rorl
je
inc
jp
jbe,pt
and
jno
fsubs
mov
cmc
dec
orl
int
out
loopne
xor
sahf
movsl
add
sbb
mov
popa
mov
fstpt
cmc
out
mov
lret
inc
clc
popa
mov
xor
out
jmp
jg
push
fwait
push
out
mov
sbb
aas
inc
adc
jg
pop
cmc
clc
stc
mov
add
mov
std
push
lret
add
add
jle
add
imull
test
and
nop
pop
aad
in
mov
loope
dec
cmp
cmc
movsl
movsb
xchg
outsb
sub
mov
mov
and
adc
mov
push
es
sub
or
test
aaa
adc
jmp
jbe
sub
sbb
aad
cmc
ret
push
add
mov
jl
insb
fcoml
xchg
add
std
cmp
lods
pusha
and
mov
lret
int3
push
arpl
mov
out
lock
mov
sti
jge
xor
jge
ds
mov
fs
dec
inc
xchg
orl
mov
cs
orl
add
incl
pusha
inc
jo
pop
push
sar
popa
pop
inc
xchg
jne
or
data16
outsl
pop
sbb
iret
int3
stc
jg
push
sbb
mov
pop
sub
fcmovnb
ror
xchg
loope
lahf
mov
clc
inc
mov
pop
dec
xchg
add
dec
movsl
data16
loop
sbb
mov
cmp
in
jl
jns
mov
sbb
adc
push
jmp
pop
or
jno
xlat
pop
push
cmp
cmovnp
aaa
test
fwait
ret
pop
sbb
push
jp
imul
jmp
push
int3
sub
popa
push
lds
push
mov
jmp
imul
lock
push
mov
xchg
outsl
aas
cmp
and
out
sbb
or
jg
sahf
shrb
xchg
ljmp
inc
and
das
push
std
fmull
out
xchg
adc
xorb
pop
mov
mov
adc
lds
xchg
xchg
jnp
mov
pushl
mov
stos
lahf
pop
xor
mov
icebp
adc
pop
imul
das
rorl
gs
arpl
mov
xchg
push
adc
pop
pop
es
ret
fstpt
ss
xorb
jo
pop
repnz
call
lret
push
jb
inc
sbb
jmp
sub
mov
loope
mov
scas
add
shll
cmp
in
fcom
daa
dec
dec
and
push
mov
pop
les
nopl
arpl
push
pop
jmp
mov
sbb
push
ja
fldenv
inc
jno
jbe
lock
cld
clc
inc
dec
ror
mov
adc
pop
cmp
push
cld
adc
clc
jle
test
into
mov
lock
test
les
xor
add
pop
stos
push
push
mov
add
and
sbb
popf
xchg
or
sbb
ljmp
dec
decl
in
mov
pushf
imul
push
dec
xchg
mov
lods
mov
orl
stos
mov
mov
mov
and
addr16
repz
loopne
jmp
jnp
push
popa
hlt
xchg
add
mov
pextrw
push
movsb
rclb
lahf
or
push
std
out
inc
pop
mov
icebp
leave
rcll
add
push
into
xor
lods
xchg
pop
sbb
mov
lock
mov
outsl
push
bound
sarl
mov
cmp
and
xchg
sbb
rcll
pop
popa
cmp
aad
and
jp
xchg
push
mov
test
loope
aad
fadd
lret
pop
pop
inc
xlat
and
mov
sbb
insb
jmp
test
outsb
dec
lock
mov
adc
dec
sub
adc
or
movsb
mov
sarb
fs
movsl
loopne
ret
mov
and
push
xchg
ret
pop
test
mov
jle
jmp
xchg
mov
je
adc
inc
fldt
icebp
adcl
jno
aaa
das
xchg
shlb
mov
leave
insb
and
sub
stos
sub
mov
mov
adc
jne
les
pop
push
push
mov
cwtl
xchg
adc
mov
nop
js
add
xor
jno
sub
push
or
popa
cmpsl
and
call
shll
scas
clc
inc
cld
pop
mov
lret
gs
cltd
mov
je
inc
sub
movsb
inc
pop
into
dec
or
bound
data16
cmc
rolb
lock
dec
push
cld
int3
pop
fldcw
pop
sbb
add
leave
mov
push
into
pushf
mov
cwtl
and
add
sub
jmp
xor
std
fcoml
lahf
and
dec
adc
or
jb
push
in
loope
xor
mov
rol
rcll
ret
shlb
xchg
in
inc
dec
loop
mov
insl
add
and
mov
fstl
add
adcb
icebp
lods
mov
adc
sub
mov
or
insb
push
sbb
scas
sbb
rorl
cs
mov
in
pop
mov
add
add
gs
mov
cwtl
adc
lret
dec
out
xor
xchg
or
lahf
adc
xchg
dec
es
outsl
lahf
popf
sahf
das
dec
push
xor
xchg
cmp
divl
pop
sbb
andb
mov
xchg
in
jo
push
adc
or
loopne
jo
lods
inc
insl
sub
jg
sbb
inc
sub
outsl
or
loope
repnz
movsl
or
test
gs
sti
arpl
lods
int
lret
adc
pusha
dec
gs
mov
stos
push
dec
adc
xor
outsl
xor
jmp
mov
add
icebp
test
add
rcll
adc
or
sub
fists
lds
in
popf
xor
sub
adc
xchg
mov
jo
mov
pop
lds
add
add
in
sbb
fcmovnb
ficompl
and
mov
sahf
or
xchg
xchg
pop
jecxz
loop
mov
nop
dec
test
push
sbb
inc
popa
mov
fcoms
out
sti
popw
push
fsubl
jae
jnp
adcl
sub
aam
mov
add
mov
mov
adcb
test
sub
sub
lea
insb
dec
fld
rolb
aad
sub
pop
cli
test
ds
dec
inc
add
jnp
add
neg
and
repz
cmpsb
inc
imull
xchg
aad
fistl
andl
fmul
in
clc
ljmp
cmp
xchg
popa
inc
add
orb
adc
mulb
sub
cmc
xchg
aad
loop
jmp
and
stos
fistpll
nop
mov
pop
and
frstor
call
cld
lret
je
pusha
stc
test
inc
mov
push
dec
and
lahf
sahf
pop
or
sub
inc
xor
jns
or
adc
cmpl
sbb
insl
push
add
insb
dec
hlt
cltd
sub
int
dec
and
pop
out
fs
pushf
mull
or
xchg
cmp
pop
cmp
rclb
mov
stos
rorb
cmp
sar
loope
movsl
pop
idivb
enter
mov
xchg
out
mov
insl
cmpsl
dec
xor
das
cmp
xchg
sub
repz
jl
dec
out
into
rcr
shlb
cvttps2pi
pop
movsb
mov
imul
loopne
pop
ja
lahf
push
lds
pop
inc
lret
pop
mov
scas
loope
lcall
sbb
adc
xchg
daa
ss
in
jnp
daa
ds
sahf
pusha
xchg
mov
inc
in
xchg
lods
push
mov
shl
jp
fisubrl
mov
fidivl
push
xchg
les
push
pushf
push
call
pop
mov
mov
push
or
inc
cmpb
aaa
add
jmp
sbb
jge
adcb
mov
mov
xchg
fs
jge
or
les
dec
push
fsubrl
pop
xlat
push
and
inc
ss
lcall
sub
sahf
dec
xchg
outsb
pop
sub
mov
mov
mov
jne
push
sbb
jb
int3
and
test
pop
aad
push
pusha
rcr
fmuls
adc
jecxz
xor
ja
in
pusha
or
mov
in
icebp
dec
inc
fdivp
sbbl
shll
jecxz
cmpsb
mul
inc
jp
mov
jmp
sbb
xchg
and
adc
fistpl
mov
xchg
scas
cmp
ja
scas
or
mov
in
pop
arpl
popf
mov
into
int
aaa
inc
leave
aas
dec
mov
movsb
test
jo
std
push
mulb
push
adc
xor
adc
lods
loopne
lods
sahf
and
pop
fwait
js
or
inc
sarl
adc
jp
sahf
icebp
out
sarb
mov
xchg
jnp
mov
push
movsb
int3
push
adc
adc
jp
jl
fmul
inc
push
push
mov
mov
les
das
and
mov
push
dec
mov
mov
sub
mov
lahf
inc
insb
push
xor
out
add
pushf
pusha
mov
jne
push
sbb
outsl
xchg
mov
dec
std
dec
sub
add
or
fistpl
mov
int3
jbe
jp
mov
jp
sbb
xchg
inc
mov
les
in
xor
push
cs
jae
and
imul
je
inc
cmpl
hlt
dec
ficompl
push
and
push
push
push
outsb
adc
fsubs
out
push
js
sub
xorl
adc
rolb
notl
popa
mov
popf
ret
movl
pop
mov
add
movsb
les
testl
cmp
popa
pusha
lea
loope
push
mov
mov
push
fcomps
lea
mov
leave
aas
mov
inc
lea
repnz
out
sahf
fs
cs
mov
sbb
xor
pop
into
ss
stc
pop
test
dec
insl
push
mov
loope
jl
lods
test
push
js
add
xor
mov
sbb
pop
mov
stos
add
ret
lock
pop
or
jge
xlat
add
push
out
adc
loopne
jns
or
cmpsb
mov
pop
lret
outsb
sbb
inc
into
int3
popf
sarl
data16
ja
frstor
mov
jb
outsl
push
add
mov
sbb
sbb
adc
xlat
jbe
outsb
mov
jb
cmp
fwait
xor
pop
js
out
pop
jle
lahf
add
mov
add
repnz
pop
rolb
xor
xor
je
cmp
lds
dec
mov
in
and
cli
sub
inc
sub
loop
imul
divl
sub
rolb
or
mov
hlt
imul
popa
mov
adcl
mulb
jnp
sti
mov
fisttpll
lcall
lods
inc
inc
hlt
xchg
mov
insb
fadds
out
push
adc
ljmp
sbb
sbb
insl
ds
push
pop
lret
jmp
fdivrl
push
imulb
loop
popa
scas
jb
jecxz
jg
cmc
sbb
loop
cs
push
ret
sar
ret
jb
out
paddd
push
dec
add
insb
cmp
in
shrl
inc
mov
add
jg
pop
sub
mov
test
aad
inc
sti
and
pushf
pop
neg
mov
outsl
add
mov
jbe
iret
cmpsb
rcrb
lods
je
push
arpl
mov
mov
insb
adc
in
in
out
out
cltd
inc
push
xor
mov
stos
ret
jecxz
xor
popf
mov
shrb
or
lods
roll
sarl
ss
xorb
mov
xchg
and
popf
js
push
mov
movb
fidivrs
mov
fst
hlt
jle
jp
scas
cmp
inc
cmc
jno
aad
push
mov
test
pop
fisttps
mov
mov
push
lcall
cmp
mov
mov
ds
ja
pop
nop
xor
and
push
sbb
jmp
mov
out
inc
xor
xor
sarl
scas
data16
shr
fstpt
popa
inc
xchg
imul
cmp
jge
fiaddl
xchg
ret
ja
jmp
or
sub
jg
xor
push
subb
dec
adcl
push
nop
fwait
cmp
cmpsb
mov
jl
mov
pusha
sbb
xchg
lods
dec
adc
gs
adc
and
sbb
negb
push
sbb
sub
out
fldt
xor
pusha
lcall
add
icebp
or
xchg
mov
out
fdiv
imul
pop
and
jge
scas
push
add
mov
fnstsw
insb
dec
pop
out
and
sbb
jecxz
jl
inc
stos
pusha
repz
movsl
lcall
push
jecxz
mov
inc
mov
fcmovb
sub
or
lret
notl
repz
add
mov
or
xlat
dec
scas
pushf
outsb
repnz
add
scas
inc
mov
popf
mov
push
xor
mov
inc
ja
test
jecxz
pushf
adc
movsl
ret
sbb
rcr
xor
inc
push
flds
les
test
sbb
enter
mov
sbb
cmp
xchg
xchg
ret
cmc
divl
cwtl
sbb
mov
out
mov
inc
jge
mov
dec
not
repnz
mull
push
stos
outsb
xchg
fcomps
and
fstps
lods
sub
mov
cmc
aaa
pop
pop
std
jae
out
aas
xchg
dec
out
xor
sbb
cmp
pop
movsl
xor
inc
rorl
insw
imul
jae,pn
fstl
inc
mov
ret
mov
mov
cltd
mov
add
xor
fidivrs
icebp
movsb
iret
std
test
jp
dec
push
cltd
sbb
cmp
cmp
ror
cmp
test
push
pop
mov
mov
rcl
sahf
cmp
in
sahf
add
andb
sub
xor
or
adc
fsubrs
idivl
mov
outsb
outsb
inc
mov
fldt
and
scas
xor
test
fidivrl
arpl
out
in
out
inc
and
mov
or
loope
adc
pop
inc
jecxz
jno
rcl
ret
push
sub
call
int3
repz
in
sbb
lcall
out
outsb
mov
rorb
mov
out
inc
lods
xchg
pop
pop
sub
fwait
out
popf
xchg
mov
and
push
flds
es
sbb
mov
stos
lock
fiadds
pop
mov
xchg
lret
repnz
jle
jecxz
sbb
outsb
lock
mov
xorb
nop
inc
add
loop
andl
leave
outsl
fs
add
xor
sub
push
sahf
push
jmp
mov
int
stc
xchg
adc
arpl
and
mov
add
and
jg
and
not
inc
sbb
testb
dec
mulb
je
mov
inc
mov
xor
stos
or
sbb
mov
jo
add
fmul
lods
scas
ror
pop
dec
jne
lret
cmp
test
inc
add
and
or
xor
adc
js
bound
add
mov
repz
out
jp
or
sahf
dec
dec
push
sub
mov
insl
sbb
mov
xchg
pop
cmp
lahf
xor
fstl
mov
xor
imul
xlat
es
jg
leave
mov
ja
test
sub
stc
mov
repz
xchg
in
pop
mov
mov
jle
pushf
cs
sbb
lcall
push
xchg
fisttps
mov
xchg
and
icebp
xchg
mov
adc
cltd
sbb
mov
jo
out
cmc
rcrl
mov
mov
int3
cmpsl
jne
sbb
add
pusha
inc
sarl
jns
dec
adc
nop
call
in
inc
inc
pop
sub
push
or
in
inc
xchg
lods
fsubl
jg
push
in
cmpsb
pop
or
ss
cli
push
push
idivl
aad
out
xchg
mov
ja
in
or
sti
xchg
adc
mov
repnz
or
push
mov
mov
inc
push
or
mov
mov
mov
test
jbe
jp
sti
fldenv
adc
sbb
dec
push
pusha
jne
jno
mov
adc
rol
fs
or
mov
jp
lret
mov
dec
inc
test
pop
shrl
mov
or
outsl
xlat
mov
and
xchg
bound
mov
adc
dec
inc
loopne
fld
add
sbb
push
mov
mov
cmp
int
xchg
mov
mov
xor
pop
and
int3
cmp
inc
sbb
test
xor
std
add
adc
clc
lahf
incb
lds
push
cmp
int
stc
jmp
jnp
mov
xor
xchg
lds
jne
jmp
mov
jo
pop
ja
mov
pop
mov
lods
call
insl
and
pop
pop
pop
push
aad
icebp
mov
mov
push
mov
mov
mov
dec
mov
xchg
xor
int
imul
adcl
inc
sahf
aad
pusha
sbb
push
or
mov
cltd
sbb
pop
repnz
mov
jp
push
dec
sub
stc
pushf
dec
pop
lea
mov
mov
pop
out
add
div
call
dec
stos
roll
lret
cld
insb
rclb
add
loope
mov
mov
sarl
ret
lahf
loope
lret
rcr
cmp
lds
scas
and
jecxz
stos
push
loopne
mov
sub
sahf
fwait
mov
cmpsl
mov
ljmp
fcmovbe
mov
xchg
fs
cld
stc
pusha
jnp
pop
aas
loopne
sbb
aaa
mov
add
jp
sbbb
cmpsl
jb
push
sbb
mov
into
vmulsd
push
or
loop
xor
cli
jecxz
pop
xchg
inc
push
jae
add
dec
ds
or
jae
inc
mov
adc
mov
cmp
clc
xor
xchg
cld
push
push
xor
int3
data16
loopne
fdivs
ret
inc
movsl
lea
mov
fstp
push
pushf
popf
jge
or
jl
nop
sub
mov
data16
jmp
mov
je
gs
mov
insl
xorl
jnp
shlb
mov
xor
push
adc
std
push
les
das
jp
hlt
fcoms
and
leave
pop
das
rcll
rorb
adc
fbstp
ljmp
movsb
je
xor
xorb
and
int3
cmp
push
sbb
mov
data16
lret
outsl
es
xor
lret
jge
sar
jmp
inc
sub
jle
mov
mov
stos
inc
pop
inc
and
inc
lods
xor
mov
je
mov
leave
lret
pop
repnz
mov
dec
push
das
sub
lea
jmp
aam
ss
mov
mov
fsubp
imul
xchg
jnp
lock
out
or
sbb
mov
fidivs
cltd
mov
adc
repz
pusha
xor
xor
sub
icebp
outsb
dec
fldt
mov
jp
pop
jbe
add
out
fsubrl
dec
xchg
lret
mov
add
push
dec
out
and
inc
jno
and
sbb
out
and
fwait
xchg
mov
xchg
push
pop
fisubrs
mov
aas
sbb
mov
inc
mov
fldenv
jle
jae
xor
lcall
outsl
sbb
cmp
dec
aad
dec
movsb
bound
pop
fs
add
mov
pop
and
outsb
pop
shlb
mov
inc
repz
dec
orb
ret
call
cwtl
sbb
mov
mov
sub
sub
ljmp
sahf
mov
aad
andl
push
cwtl
sbb
fdivrl
xor
push
in
sar
dec
xor
int3
outsb
out
pop
xor
cmp
stos
icebp
jb
bound
add
inc
cmp
mov
jne
cmpsb
test
lcall
popa
adc
cmp
ret
fidivl
sub
mov
sbb
js
mov
sbb
inc
shrl
mov
cwtl
pop
loop
pushf
iret
or
adc
out
out
and
lea
sti
outsl
mov
add
into
std
or
mov
mov
cmpsl
xchg
aad
add
sbb
push
xchg
cmp
insl
mov
pop
inc
cld
arpl
sarl
in
inc
adc
inc
and
cld
push
xchg
ret
insb
push
test
mov
loop
outsb
loopne
stos
push
fucomp
sbb
pop
mov
adc
mov
loope
xor
enter
mov
movsb
test
iret
cmp
sti
out
fnstcw
jle
xchg
mov
push
fucomp
bound
cld
ljmp
jmp
sub
int
push
sbb
pop
test
jae
push
mov
push
loop
jp
shrb
les
xor
adc
imul
call
cwtl
in
rorb
gs
shrb
jae
cmc
mov
push
stos
cmp
pop
sub
rcrb
jae
sub
cmpsl
lods
or
xor
into
inc
loopne
int3
cmp
gs
dec
mov
loopne
sbb
rcr
filds
ficoms
xchg
or
fwait
adc
xchg
lahf
dec
repnz
clc
inc
xchg
in
shl
enter
repnz
cli
jae
lret
xor
sbb
pop
dec
sbb
xchg
idivl
push
push
xchg
push
pop
xchg
fcomi
xchg
das
and
adc
mov
aaa
mov
into
iret
aam
and
add
dec
add
sti
push
mov
test
mov
cld
jb
push
mov
adc
imulb
sub
les
push
xor
adc
cmp
jne
pop
add
inc
fsubrl
jns
jle
rcrb
test
dec
rolb
stos
add
loopne
pop
jnp
aas
pushf
and
inc
fsubr
mov
test
cmpsb
lods
cs
mov
push
sbb
pop
arpl
sbb
es
iret
js
or
cltd
push
cmpsb
xor
imul
mov
pop
pop
sbb
stc
aad
xchg
add
lock
sub
loope
xchg
inc
fldenv
inc
leave
adc
mov
imul
dec
jb
ret
or
leave
mov
sbb
fstps
je
mov
jle
jle
jo
bound
ja
mov
pop
lcall
xlat
cmp
cmp
std
cmp
lea
xlat
andb
xor
inc
push
add
ja
push
mov
cli
xor
mov
xchg
insb
outsb
cli
sub
lods
push
sarl
add
movsb
cli
mov
pop
xchg
jne
in
sub
fdiv
fwait
dec
in
adc
dec
ljmp
or
insl
pop
daa
loopne
mov
stos
or
mov
mov
mov
jecxz
inc
pop
xchg
loop
or
hlt
fwait
push
jo
jns
xchg
negl
ja
adc
and
add
adc
xor
pop
lock
lods
sub
xchg
adc
test
jae
push
out
fiadds
add
xor
dec
int3
aas
inc
mov
adc
jecxz
popa
insl
insb
jb
push
jmp
iret
push
ja
mov
test
cmpsl
mov
xor
outsl
or
mov
jae
mov
push
ss
sbb
adc
fdivs
out
push
pushl
enter
ljmp
scas
pop
sub
int3
adc
adc
mov
call
jg
fs
xchg
out
mov
aaa
add
scas
test
or
push
je
sbb
data16
xchg
pop
mov
into
insl
cmp
nop
push
test
imul
fucomp
pop
imul
add
xor
cmp
push
or
ljmp
push
ds
jmp
ret
out
lcall
pop
shl
sbb
mov
ret
xor
data16
mov
roll
lods
pop
xor
and
out
push
add
stos
test
sub
xchg
sti
push
adcb
sub
sbb
test
imul
mov
or
xchg
and
imul
shl
mov
sarl
xchg
in
popa
pop
shl
test
push
das
push
lods
mov
cmpsl
mov
mov
dec
dec
jne
in
lods
scas
adc
xor
push
insl
pop
cmp
and
pop
xor
daa
mov
fmull
sbb
in
sbb
mov
fstp
mov
mov
rcl
insb
jb
xchg
in
fldenv
inc
mov
subb
sbb
pop
xor
adc
lock
adc
xchg
shlb
cmp
sub
xchg
sub
inc
pop
cmp
add
mov
scas
lock
ljmp
mov
mov
ljmp
xchg
jae
jne
aam
inc
subl
push
inc
inc
mov
lods
sbb
nop
int3
hlt
jp
pop
int
lahf
pop
push
popa
lds
pop
jle
cltd
add
mov
xchg
fwait
lret
xchg
outsb
xchg
ud1
out
adc
pop
testl
dec
cmpsl
sbbb
stc
push
or
mov
pushf
pushf
into
lea
aad
push
jno
jl
les
inc
jp
faddl
jbe
mov
xor
push
test
cmp
sub
loop
or
roll
push
lea
adc
sub
push
sub
inc
dec
pop
fstl
inc
pop
jp
pop
fiaddl
fs
hlt
add
add
cmp
aad
lea
mov
sbb
push
mov
xchg
out
dec
mov
mov
or
aaa
imul
test
es
mov
jp
xchg
or
jp
push
xor
fsubrl
jns
jno
cmpsl
fs
shlb
mov
addr16
shr
push
sahf
fcomp
cmp
mov
xor
test
loope
lahf
sahf
jmp
aaa
push
movsb
lret
adc
or
add
jl
cmp
adc
in
iret
or
je
arpl
lcall
sub
jo
xchg
jge
shlb
mov
mov
or
dec
mov
mov
clc
jbe
dec
scas
dec
jo
xchg
jno
rol
lret
inc
nop
inc
push
sub
and
or
sub
push
pop
mov
roll
stc
in
cmp
sbb
lcall
xlat
stc
cmpsl
push
mov
aad
clc
jg
xorb
push
mov
rclb
movsb
mov
out
mov
lret
stos
adc
jbe
fnstsw
lahf
loop
xchg
cwtl
pop
out
jge
sub
enter
and
add
mov
push
hlt
xchg
lds
xchg
aas
lods
aaa
push
sub
loopne
add
xchg
push
add
icebp
adc
lock
cmp
mov
rcr
dec
into
fcomps
jle
or
stc
xchg
js
cmp
mov
xchg
jne,pn
daa
ret
test
jnp
loope
and
faddl
hlt
fadds
sbb
cmp
xor
xor
mov
push
in
stc
insl
fwait
jmp
in
mov
out
xchg
icebp
adc
xlat
repnz
sarb
mov
sbb
pop
push
scas
imul
mov
sbb
inc
mov
sub
movsl
mov
out
in
out
add
test
inc
and
mov
sbb
mov
xchg
fiadds
cmp
into
into
movsl
mov
pusha
cmp
outsl
xor
xor
data16
adc
leave
das
adc
repz
jle
fbld
out
pop
not
sub
add
dec
fcmovb
pop
fsub
xchg
xlat
cmp
pop
stc
dec
shll
pop
pushf
mov
push
dec
lds
shr
pop
fcomi
clc
jg
mov
lods
fidivrl
sbb
pop
inc
nop
and
inc
dec
pop
pop
add
mov
sbbl
dec
push
adc
aad
adc
aad
mov
adc
xchg
lcall
aas
or
cmp
cmp
ret
aam
inc
push
xor
movsb
adc
dec
sub
test
pusha
dec
dec
in
jbe
pop
fidivs
in
or
pop
or
dec
sub
jle
or
insl
int3
repnz
dec
xchg
add
jle
out
xchg
or
jp
mov
int3
jbe
jae
outsl
into
pop
cmp
push
pop
daa
sub
and
push
int
jmp
pop
and
cmp
add
mov
xlat
jns
loop
and
clc
push
ret
sti
dec
repz
lods
mov
inc
pop
xchg
pop
mov
cmp
inc
stc
mov
cmp
icebp
inc
jae
and
test
and
lea
dec
fidivs
iret
sahf
push
ret
ljmp
push
mov
mov
ja
mov
push
aas
stos
inc
jle
in
cmp
and
les
push
mov
add
cld
and
jae
mov
call
sbb
ss
lahf
stos
mov
push
pop
inc
filds
mov
es
mov
jecxz
int
filds
lods
add
xchg
shlb
push
pop
fists
xchg
xor
hlt
xchg
das
xchg
xchg
inc
dec
jne
ss
fwait
add
push
ret
test
or
dec
cmp
rcll
gs
or
mov
test
test
dec
mov
inc
repz
xchg
and
in
pop
xor
mov
jmp
adcl
lods
push
add
mov
cltd
pop
scas
mov
xor
push
je
testb
out
inc
inc
sbb
test
mov
stos
mov
pop
xchg
jbe
insb
inc
stos
inc
mov
pop
jbe
repnz
outsb
add
xchg
push
inc
nop
sub
mov
sbbl
out
cmp
sbb
xlat
scas
sti
mov
jecxz
das
in
cltd
hlt
mov
or
xor
fimuls
lcall
in
add
jl
adc
ds
adc
cmp
test
add
cmp
ja
jno
lcall
pusha
pop
push
push
add
in
outsb
sbb
ret
jne
inc
dec
ds
pop
jne
fdiv
cmp
mov
xchg
loopne
push
mov
addr16
sub
xchg
shr
or
xor
lret
cmp
out
addl
fidivl
lds
fnstsw
inc
stos
pop
sub
in
xor
add
and
fsubrl
push
rcll
cmp
aam
add
fmuls
inc
loope
jecxz
mov
jle
xor
loopne
sbb
mov
subl
fs
cmc
rol
sub
add
out
ja
enter
push
inc
js
jecxz
mov
addr16
add
jg
xlat
int3
shlb
dec
das
or
out
pop
xlat
dec
cltd
in
mov
push
repz
ret
sahf
mov
adc
imul
mov
stc
lahf
dec
xchg
les
jg
sbb
push
daa
or
adc
fwait
and
lcall
cmp
cmp
mov
out
jge
andb
fldl
cltd
adc
fidivrs
xchg
nop
icebp
adcb
jbe
in
push
adc
stc
das
aas
dec
gs
and
jo
push
sub
lds
sub
pop
xchg
ja
push
outsb
arpl
stc
fscale
sub
mov
movsb
les
aam
mov
xchg
outsb
into
dec
and
sub
rcrl
ret
imul
mov
adc
cwtl
into
shlb
ds
movsl
xchg
xor
mov
lret
fistps
or
push
es
sbb
inc
and
or
add
scas
mov
lds
sbb
shll
fs
mov
push
or
pop
jge
jne
rcl
lahf
mov
fsubrs
jmp
jne
mov
push
fdivrs
mov
or
pushf
jns
add
sub
stos
inc
fisubrs
imulb
or
add
ja
nop
mov
daa
daa
mov
pushf
sbb
adc
mov
pop
fdivrl
mov
lahf
xor
jno
xorl
sti
pusha
loopne
outsb
adc
dec
mov
dec
lds
pop
popf
subb
and
incb
loop
ljmp
mov
dec
stos
mov
jg
sbb
or
loopne
roll
out
adc
add
jmp
push
dec
push
pusha
scas
or
add
and
mov
in
rcll
insb
and
add
call
cs
inc
mov
out
xor
cmp
cmp
mov
cmp
out
jno
mov
mul
into
into
sub
mov
dec
cld
push
dec
pushf
stc
fsubrs
push
and
and
mulps
jns
push
jno
leave
jle
cmpsb
ret
sbb
cmpsl
ret
mov
mov
sbbb
sub
rol
addr16
scas
repz
add
call
sub
sub
dec
sub
mulb
adc
pushf
and
jns
clc
lret
aas
aad
addr16
das
testl
popf
outsl
mov
popf
nop
clc
paddw
inc
outsb
adc
mov
pop
lds
dec
mov
dec
xchg
daa
sub
das
pop
mov
cltd
dec
pop
inc
stos
iret
cmp
xor
jle
mov
cmp
out
cmpsb
mov
jnp
imul
fsubr
aam
sub
daa
mov
dec
sub
dec
pop
jl
mov
push
pushf
xor
xchg
or
lahf
dec
push
xchg
imulb
mov
adcl
popf
mov
pushf
mov
or
outsl
iret
inc
stos
dec
push
sub
test
sub
cmp
leave
sub
sbb
and
inc
and
jge
mov
lods
add
sbb
test
scas
mov
dec
addr16
adc
push
xchg
aaa
movsl
out
xorl
mov
sbb
loope
mov
xchg
sbb
lret
sbb
sarl
fcoms
push
shl
sub
jns
dec
add
data16
sbb
push
adc
cmpsb
mov
fwait
xchg
xor
adc
imul
xor
adc
into
mov
push
cmc
loope
inc
lcall
push
push
lods
sbbb
jo
adc
mov
or
inc
xor
hlt
sarl
jmp
inc
inc
jmp
mov
insb
adc
sahf
sub
pop
enter
pop
mov
icebp
je
lcall
xor
cmp
lret
inc
and
and
add
rolb
out
inc
sbb
adc
enter
leave
ret
popf
and
out
mov
dec
jo
add
pop
out
shrl
int3
sub
outsb
pop
daa
sbb
lahf
mov
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
.byte
mov
.byte
jae
push
sub
dec
mov
push
scas
xchg
jns
xor
cmpsl
mov
adc
and
in
loop
movsl
shll
jg
das
pop
fdivrl
addr16
iret
mov
cmpl
iret
or
fsubrp
std
mov
xor
aam
pop
dec
push
or
push
arpl
out
jge
leave
nop
and
add
push
repnz
mov
aam
add
lock
sbb
xchg
inc
sbb
cmc
mov
sbb
xchg
imul
and
addr16
ret
les
clc
mov
jns
into
xor
cltd
cmp
fstps
arpl
gs
xchg
dec
add
sub
fbld
xchg
stos
lods
push
or
dec
pop
xchg
dec
mov
subl
sub
ja
mov
cmc
fisttps
jno
lfs
cmp
aad
add
mov
mov
inc
int
fsubl
movsl
and
jmp
clc
xor
and
xchg
imul
cs
add
adc
mov
inc
fwait
mov
loopne
dec
imul
adc
call
imul
pop
pop
pop
shlb
cwtl
call
loope
loop
rcll
xchg
add
loopne
bound
mov
in
xchg
adc
cmp
cltd
rorb
sub
fists
out
lock
loop
xchg
inc
push
out
dec
loope
mov
in
mov
fucomip
mov
ret
das
enter
lods
jmp
sbb
jnp
push
fcomp
hlt
add
pop
inc
push
pop
fistpll
lcall
pop
imul
mov
popa
fmul
inc
imul
ss
jl
out
out
test
jb
std
loop
dec
add
or
mov
rorl
xor
scas
popf
data16
sbb
sbb
and
dec
lods
insl
in
adc
iret
mov
sbb
shll
push
dec
pop
add
cmp
xchg
mov
into
and
push
push
dec
insl
sub
cwtl
nop
fcoml
cmc
xor
cld
aad
jp
lods
jmp
dec
push
scas
mov
xor
es
inc
movsb
jne
and
repz
xor
sub
cs
insb
and
mov
inc
jle
jo
mov
in
xchg
dec
mov
or
fwait
inc
enter
or
shl
imul
sbb
into
loopne
fnstsw
jle
mov
add
mov
dec
inc
ret
mov
loope
mov
daa
cmp
jae,pn
ljmp
and
and
pop
test
cmp
or
pop
repnz
dec
adc
mov
and
movsb
rcll
mov
popf
mov
and
mov
adc
nop
ja
ds
cwtl
popf
sbb
mov
outsl
rcrl
adc
push
xchg
inc
xchg
mov
mov
xchg
inc
leave
add
lahf
jo
call
test
push
cmc
in
inc
pop
or
fdivl
mov
in
and
jne
xor
mov
cmpsb
test
iret
sbb
add
xor
cmpsl
xchg
fimull
aas
dec
cmp
inc
into
sub
pop
out
mov
out
gs
inc
loopne
jo
leave
out
shll
pop
jo
jne
leave
fucomi
adc
pop
inc
aas
mov
and
rclb
pusha
test
rorl
mov
dec
mov
xchg
push
icebp
sbb
inc
pushf
scas
cmp
adc
mov
inc
adc
cmp
loope
in
lods
inc
fs
push
inc
pop
bound
and
loopne
sar
sub
mov
inc
mov
pop
or
shll
xchg
aaa
sbb
int3
dec
or
pop
aam
add
ds
pop
mov
pusha
je
loopne
add
xchg
ret
inc
push
pusha
mov
stc
dec
jb
jae
jge
mov
cmp
fistpl
loop
cld
dec
pop
sub
aaa
shrb
and
mov
xor
sub
insl
sahf
mov
pop
fcomps
xchg
mov
mov
or
lods
sub
add
push
into
ret
push
sub
xchg
and
or
sub
andb
fdivs
dec
pop
insl
cwtl
inc
pop
xor
inc
ret
sbb
insb
inc
cwtl
sub
iret
push
cli
dec
mov
mov
mov
xchg
sbb
cli
outsb
or
xor
aam
std
pop
xchg
shll
loopne
fnsave
imul
xchg
jb
cld
les
sub
mov
mov
jae
add
scas
pop
js
insl
cmp
aam
and
arpl
or
jle
test
sarl
inc
outsl
into
insb
jno
lods
cwtl
push
add
push
test
mov
cmp
xchg
mov
aaa
push
sbb
fisttpll
push
mov
addr16
push
adc
mov
mov
fucomip
outsl
jb
pop
bound
shll
pop
pop
cmpsl
rcrb
cmpsl
imul
std
sub
pop
loop
imul
xor
dec
int
pop
dec
pop
sbb
stos
or
aam
leave
aam
add
pusha
mov
repz
test
aam
or
rcll
pop
sti
cmp
stos
pop
mov
outsb
lock
out
fldcw
shrb
mov
fldt
fnstenv
shl
pop
iret
mov
dec
or
sti
cs
push
popa
ds
cld
in
popa
outsl
call
xor
popf
pop
and
sub
fistl
inc
andb
fidivs
inc
inc
sbb
jl
daa
xchg
shl
stc
push
cmpsl
je
lret
subl
movsl
mov
aam
scas
add
xchg
ret
dec
and
and
and
insl
xchg
push
lret
add
fidivrs
repz
popa
xchg
movsb
inc
mov
mov
loop
add
pop
pop
mov
mov
rcl
dec
or
subb
cld
jecxz
add
push
add
adc
add
lea
cmpsb
shrl
xchg
xorl
or
movsl
add
cmpsb
dec
and
jle
sbb
xor
and
std
jnp
xchg
dec
mov
fwait
or
js
jbe
mov
add
mov
hlt
push
jbe
push
test
mov
add
movsl
rsqrtps
sti
lods
fmuls
cltd
lret
pop
rolb
and
jmp
cmpsl
cwtl
jl
pop
dec
fdivrp
ljmp
xor
mov
cwtl
adc
or
cmp
outsl
inc
xor
dec
popf
and
into
dec
adcl
popa
push
inc
push
repz
movsl
mov
dec
notl
add
add
adc
cmp
lods
adc
leave
sbb
sbb
push
dec
jg
aad
cmp
and
lahf
xor
push
mov
cli
dec
aas
aas
xchg
ds
popf
push
xchg
xchg
mov
mov
xchg
inc
inc
cwtl
and
aam
dec
dec
es
sub
xchg
inc
sub
pop
sbb
outsb
add
cmpsl
imul
pop
into
inc
jmp
or
pop
cmp
fnstcw
rolb
mov
push
ret
subl
das
jle
or
fsubrs
ret
rcrb
and
in
repnz
dec
cmp
fcomps
mov
in
outsl
mov
movsb
ret
jecxz
push
sub
push
push
or
sub
dec
sbb
lods
shlb
xor
mov
fbstp
in
aaa
mov
test
addl
outsl
mov
pop
or
mov
iret
mov
sbb
minps
sarl
fwait
cld
stc
ffreep
jecxz
out
ret
icebp
ja
sub
stc
lret
stc
xchg
sub
mov
lock
jbe
mov
sbb
mov
movsb
xchg
xchg
xchg
sub
das
or
sub
or
test
xchg
pop
push
adc
mov
fwait
imul
scas
jno
cs
mov
sbb
std
movsl
cmp
jb
ss
dec
sti
mov
sub
sbb
rcrb
pop
outsl
fistps
pop
cli
mov
in
adc
xchg
gs
inc
jg
bound
xor
int
mov
inc
jl
mov
lods
jno
rorl
jnp
popf
ljmp
sarb
dec
std
je
out
imul
add
les
je
leave
in
mov
mov
xor
sub
bound
loopne
adc
incb
xchg
out
push
pusha
cwtl
cmc
cmp
ja
add
int3
sub
clc
jmp
cmp
scas
popf
inc
gs
lods
pop
inc
stc
push
in
mov
mov
popa
sub
push
jmp
scas
in
jge
pop
push
repz
rcll
rcrl
das
push
push
add
lret
mov
push
cli
pop
imul
xchg
sub
push
nop
xor
pop
mov
add
nop
mov
sbb
test
in
mov
iret
mov
ja
sub
iret
cmp
fmuls
daa
nop
push
mov
xor
cli
nop
outsb
cld
mov
add
sbb
sub
mov
cs
dec
inc
movsl
gs
leave
loopne
lds
in
les
pushf
in
les
sbb
mov
jnp
lcall
ljmp
pushf
jl
pop
aam
mov
xchg
pop
cmp
jbe
sbb
shrl
bound
push
xchg
pop
cmp
mov
push
dec
fstenv
frstor
test
lods
and
xlat
mov
ficoml
add
fsubl
mov
imul
jno
mov
popf
subl
rorl
notl
inc
mov
insl
in
cmp
xchg
rcl
popf
mov
push
add
jne
dec
bound
sbb
push
cli
lods
ficompl
loope
dec
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
.byte
mov
.byte
inc
push
insb
nop
insl
push
ds
xchg
or
les
lret
shr
dec
cmp
daa
push
mov
inc
xchg
dec
or
xor
jno
cmpl
or
cmpsl
ss
mov
mov
incl
add
inc
mov
dec
sbb
add
dec
jo
popf
test
fisttpll
lret
pop
inc
sub
lahf
or
in
into
mov
or
lahf
rcrl
mov
mov
dec
sub
inc
push
dec
xchg
push
sbbb
push
push
jb
cmp
bound
or
sahf
movsl
sub
push
jae
or
insl
add
xor
mov
addr16
aam
mov
push
pop
push
lret
pop
xlat
push
les
out
xchg
lds
mov
outsb
push
test
sub
in
inc
stos
mov
xor
pop
inc
lahf
clc
pop
fwait
push
scas
sarl
test
decb
aaa
bound
xchg
into
inc
xor
sbb
insb
inc
cld
daa
xchg
pop
in
inc
dec
test
xchg
lock
lret
cmc
push
sub
fisttpll
lds
mov
add
aaa
and
push
cmpsb
mov
sbb
mov
fs
inc
movsl
imul
push
or
cmp
and
sub
inc
and
push
inc
sbb
cmp
sahf
inc
xchg
scas
shll
insb
rorl
fidivs
shrl
lcall
adc
or
lods
mov
loope
outsl
xchg
ja
sub
call
adc
or
lret
push
jnp
popa
sbb
jmp
pop
dec
mov
xchg
mov
sub
stos
pop
lahf
scas
mov
xor
mov
sub
popl
fisubrs
dec
repz
cmp
aas
dec
outsb
mov
and
addb
inc
icebp
mov
push
pop
push
andl
push
xor
jp
divb
push
jmp
fildll
popa
mov
lahf
mov
ss
mov
es
int
inc
lods
sub
call
and
sub
sub
clc
mov
fmulp
adc
pop
cmpsb
mov
sahf
mov
sbb
pop
or
fisttps
xor
ljmp
or
in
pop
sbb
dec
inc
and
jmp
xor
test
add
mov
xor
cs
pop
in
xor
fimull
xor
and
aad
movsl
mov
sbbb
pop
sbb
lahf
popl
test
xchg
mov
xor
scas
loopne
dec
jno
test
jg
inc
jns
push
sub
mov
fidivl
xor
mov
push
pop
lods
repz
pop
or
lcall
jnp
cltd
or
mov
pop
jp
fisubrs
imul
lret
gs
jmp
into
mov
lea
xor
lods
pushf
pop
into
jp
scas
lahf
mov
inc
and
push
inc
sub
popa
xchg
dec
xchg
lock
dec
mov
leave
xor
adc
xlat
loope
jp
fcompl
jl
stos
mov
and
test
pop
add
inc
xor
fidivrl
sub
xor
sti
and
jnp
rorl
inc
fcmove
sub
and
clc
icebp
inc
fcomip
inc
in
pop
imul
jnp
insl
mov
or
imul
sarl
mov
cli
lods
into
roll
repz
xor
pop
jb
inc
add
test
pop
icebp
lcall
enter
cmp
xchg
pop
in
or
enter
fisttps
addl
lcall
stos
and
cmp
pop
pop
inc
stos
nop
pop
sbb
jne
mov
fdivrs
xchg
movsl
lock
or
gs
and
test
aam
out
aam
dec
and
cmpsl
stc
sbb
mull
sub
scas
xchg
dec
sub
sbb
jne
xchg
push
xchg
rcrl
cs
loopne
adc
mov
fildll
addr16
xchg
aaa
cmp
xor
inc
xor
mov
gs
mov
imul
cmp
insb
insb
mov
shll
fistpll
in
ret
sti
jg
or
cmp
mov
fsubrs
test
in
inc
cmp
dec
aam
mov
fisubrs
dec
mov
test
stos
inc
in
rclb
jp
xor
xlat
es
shrl
adc
in
ds
lret
imul
test
push
mov
mov
fwait
ljmp
mov
adc
pop
into
pop
cmp
mov
popf
in
out
dec
popf
js
xor
cwtl
adcb
inc
mov
xchg
rcll
ds
hlt
mov
movsb
scas
xorb
or
in
mov
mov
je
shrl
test
inc
pop
daa
lea
jae
mov
adc
push
lds
inc
dec
ljmp
sub
or
sbb
mov
mov
jmp
cmc
gs
sbb
popf
aaa
mov
sbb
ja
sub
jmp
fisubrs
jl
hlt
inc
adc
imul
in
subl
xor
push
les
cs
jmp
mov
sbb
insb
outsl
cmpsl
ret
pusha
dec
mov
mov
push
iret
or
aad
jl
loop
rcll
jge
cmp
in
ret
xchg
addr16
data16
push
mov
test
fidivl
xchg
icebp
stos
add
push
add
mov
out
std
fcmovnu
pop
xor
mov
push
int
add
lock
out
push
adc
daa
rep
sub
mov
mov
pop
xorl
sub
jmp
sarl
dec
sarl
fadds
dec
sbb
add
dec
rcrl
add
jno
pusha
pop
inc
movsl
fmuls
shll
testl
jl
push
and
push
cmpl
lret
inc
je
stos
insl
aam
imul
dec
call
ja
mov
mov
in
cwtl
das
stos
sub
punpckhbw
loopne
dec
sbb
and
and
mov
pop
adc
jp
std
push
push
jnp
cwtl
inc
into
push
ljmp
aas
push
pop
jbe
inc
rorb
sbb
xchg
mulb
daa
ds
clc
jb
scas
add
mov
or
ret
test
or
xchg
cli
cmpsb
pop
icebp
sub
js
adc
xchg
dec
int3
cmp
inc
xchg
leave
jno
in
mov
lret
stos
sub
dec
push
mov
add
jo
mov
cmp
aam
cmc
sub
inc
scas
mov
sahf
cmpsb
iret
push
imul
in
ret
add
push
test
imull
xor
adc
mov
pop
loop
outsl
subl
repz
mov
mov
sbb
mov
and
mov
push
xchg
cmp
flds
mov
mulb
xchg
add
insl
dec
lret
icebp
mov
lds
int3
out
jle
add
gs
mov
sub
mov
adc
push
mov
mov
rorb
or
ds
decb
mov
sbb
out
push
enter
jnp
xchg
enter
test
icebp
mov
neg
xor
fimull
or
test
addb
push
fcomps
sbb
insl
inc
mov
adc
ljmp
dec
lods
or
mov
inc
and
mov
dec
add
cli
test
xlat
pop
add
lcall
jbe
outsl
gs
mov
andl
and
rcr
cmpsb
movsb
icebp
cmp
fnstenv
sub
push
sarb
les
bound
shlb
pop
xchg
out
xchg
mov
fwait
xchg
push
mov
ljmp
aam
mov
les
lret
or
pusha
mov
push
dec
cltd
xchg
pop
pop
dec
jae
jge
xor
dec
movsb
je
sbb
cmpsb
das
cli
mov
cmpsl
cwtl
xchg
adc
xor
cltd
data16
pushl
xor
or
or
sub
pop
mov
fdivrl
insl
insb
fisttpll
or
cmc
xchg
lret
cs
push
pop
pop
std
scas
pop
dec
cmpsl
daa
and
dec
int
cmpsl
mov
jmp
fdivs
jl
xor
inc
test
insl
inc
in
push
fisubs
ss
call
push
inc
xor
loope
mov
xchg
clc
insl
xchg
andb
dec
mov
aad
rcrl
pushf
or
ret
jge
cmpsb
sub
int
aas
lds
cli
dec
ljmp
xor
xor
imul
or
jle
mov
sub
daa
sbb
fadds
lret
jle
fs
adcl
mov
adc
cmpsb
je
or
orl
sahf
inc
lock
inc
cmp
std
inc
mov
scas
ror
movsl
mov
lcall
add
mov
jno
divl
add
in
xchg
fisubl
test
jl
jnp,pn
mov
in
mul
mov
xchg
or
aas
cli
fsubrs
cld
jbe
out
xchg
fnstenv
mov
rcrl
je
lods
push
and
pop
or
ljmp
stc
push
mov
subl
xchg
push
stc
and
mov
dec
xchg
enter
or
les
pushf
pop
push
movsb
push
scas
xor
idivl
dec
insb
or
push
xchg
cmpsl
cmp
mov
jge
loope
dec
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
.byte
mov
.byte
leave
mov
or
xor
jge
ja
mul
rcrb
xor
or
lea
lods
inc
mov
lret
mov
dec
das
push
fsubp
mov
loop
adc
dec
nop
inc
dec
test
and
mov
pop
pop
cmc
xchg
lret
and
cs
mov
jge
jmp
into
clc
or
mov
into
sub
int3
sbb
pushl
and
pop
inc
xchg
mov
add
inc
in
cmp
push
icebp
fwait
outsl
stos
xchg
incl
push
ss
ficomps
push
cli
cwtl
cmp
xor
mov
mov
push
imul
inc
push
or
add
ss
jp
add
imul
cltd
ljmp
mov
test
loope
sbb
adc
popf
in
mov
pusha
fistpl
mov
sbb
lea
pop
pop
les
sarb
jecxz
js
stos
mov
stos
xchg
shlb
dec
les
xchg
insl
scas
pop
jne
pop
test
and
inc
je
test
xchg
or
jbe
push
aad
inc
test
push
jge
out
add
js
or
sbb
insl
out
adc
lcall
xor
adc
add
push
je
faddl
inc
into
les
inc
gs
stos
sub
jmp
rcll
iret
pusha
je
in
mov
and
mov
pop
loopne
jle
xchg
mov
stos
lcall
adc
aaa
cmp
fsub
inc
and
cmp
and
jle
xchg
lods
dec
int3
cmc
call
push
insb
mov
cmp
out
out
inc
inc
mov
rorb
jnp
mov
mov
negl
cmp
mov
cwtl
inc
and
cmp
mov
jl
mov
lods
push
sub
ljmp
push
inc
add
cmc
pop
call
inc
inc
and
daa
push
and
cwtl
repz
dec
icebp
push
jecxz
push
jne
mov
xchg
cs
aad
inc
outsl
fwait
sub
xchg
push
xchg
aas
push
adc
lds
addb
jge
dec
sbb
push
cmp
sbb
scas
je
pop
sarl
int3
jbe
cmp
sbb
call
cmpsb
or
push
sarl
jbe
lret
sbb
imul
sub
jg
outsb
mov
es
sbb
add
inc
pop
lcall
push
jns
test
fistpll
adc
add
add
lock
test
cmp
popa
int3
jb
movsb
and
int3
lret
test
test
stc
mov
aaa
aam
pop
in
aas
dec
bound
lret
sub
inc
mov
push
mov
gs
daa
out
notl
sbb
mov
push
aas
cmp
ss
pop
jnp
xor
lahf
jns
repnz
pop
pop
xor
movsb
push
push
mul
mov
addl
aam
fdivrs
call
outsl
lret
ret
leave
cmp
clc
in
lahf
mov
jbe
adc
push
fwait
and
jg
fsubr
xlat
xor
cli
xor
sarl
incb
inc
cld
ficompl
mov
jb
nop
lret
dec
jno
aam
imull
mov
or
neg
push
cmp
xchg
stc
push
adc
outsl
in
add
and
movsl
into
cmp
push
xchg
or
inc
lods
pushf
testl
xchg
jno
imul
xor
repnz
repz
daa
pusha
ja,pt
mov
notl
loopne
negl
xchg
shrb
dec
jecxz
push
mov
inc
sahf
stos
mov
fstl
xor
add
push
add
in
jnp
pop
push
mov
sbb
jmp
arpl
iret
lcall
sbb
ror
adc
sbb
sahf
into
jnp
cmp
enter
cmpsw
xchg
je
mov
repz
out
ljmp
or
fildl
add
int3
test
sahf
ret
rcrb
push
int3
bound
jle
insb
dec
or
pop
xchg
add
test
test
sub
imul
repnz
inc
or
ret
frstor
arpl
outsb
cltd
inc
js
ret
dec
inc
rcll
ds
movsl
mov
jo
lret
lds
daa
cmpsl
xchg
aaa
mov
push
cmc
fs
adc
imul
stc
pop
hlt
lret
imul
push
push
mov
inc
xchg
mov
inc
sbb
aad
sbb
jle
rcrl
sbb
loopne
lcall
mov
addb
outsl
loope
cmpsb
and
jbe
push
test
in
loopne
mov
fwait
sbb
xor
push
cli
xlat
push
pop
sbb
xchg
call
xchg
loopne
dec
jnp
lret
xlat
or
sbbb
sub
jg
and
stos
test
mov
mov
sbb
shll
enter
mov
aad
mov
push
and
mov
iret
in
ja
or
lret
cmc
das
jmp
adc
pusha
arpl
mov
push
cld
add
jns
mov
cmc
cmp
test
mov
sti
pop
ja
out
popf
mov
icebp
les
fidivs
pop
sbb
cmp
fs
xchg
je
imull
inc
ret
andl
xchg
out
cmp
clc
inc
test
lods
dec
js
mov
xchg
mov
cmp
mov
mov
jns
jno
xorl
enter
mov
cltd
cmp
scas
mov
or
ja
dec
sub
and
sbb
out
push
pop
jnp
fldt
outsb
imul
xor
jle
and
cwtl
mov
repz
xchg
in
sub
push
rclb
or
pop
sbb
movnti
std
pop
xchg
cmpsb
bound
jno
movsb
mov
jno
mov
test
lds
dec
add
add
rcrl
sbb
push
xorl
mov
pop
ja
js
fwait
mov
add
repnz
or
or
inc
arpl
shlb
jmp
cmp
pop
push
dec
lods
icebp
jmp
mov
inc
dec
out
jo
cmp
push
loopne
jl
scas
test
ja
movsb
into
gs
push
js
sahf
fmuls
mov
xchg
movl
pop
jae
mov
adcl
mov
inc
ret
and
sti
jnp
add
icebp
enter
pop
cmpsb
repz
shl
or
inc
imul
dec
sti
jb
and
out
dec
mov
xor
cmp
mov
cwtl
ljmp
in
enter
mov
insb
in
cmc
leave
jnp
dec
pavgb
mov
push
shlb
cld
push
lret
popa
cmp
push
mov
xchg
xor
cmc
lret
das
repnz
outsl
mov
dec
cmc
data16
lds
pop
jo
fs
xchg
mov
xchg
bound
negb
dec
nop
mov
dec
sbb
insl
pop
aas
lret
adc
and
mov
cwtl
dec
sbbl
call
lea
out
xchg
push
cli
fwait
jbe
sub
adc
add
jecxz
dec
leave
enter
lret
push
in
xlat
lds
xor
mov
and
int
and
ja
adc
cmp
jae
mov
lahf
ja
xchg
aam
xchg
in
adc
dec
cmp
ficompl
gs
test
mov
xchg
das
or
pop
loopne
rcll
xor
and
xlat
mov
clc
sti
inc
or
pusha
icebp
or
lock
mov
repnz
aas
int3
les
gs
in
sahf
dec
or
lock
cli
inc
scas
add
mov
jb
loop
or
push
fbld
push
cmpsb
jle
popa
lods
movsb
test
cmc
les
mov
insl
int3
out
xor
outsb
add
add
nop
in
mov
sbbb
repnz
add
push
sarb
cmpsb
adc
push
jge
sub
dec
add
lret
dec
or
or
addr16
stos
mov
mov
jecxz
lret
xlat
mov
pop
dec
iret
push
fs
lds
mov
push
repnz
xchg
jnp
cmpsl
bound
jb
cltd
sti
hlt
loopne
pop
sub
lock
ljmp
push
pop
add
inc
test
cmpl
mov
pop
cwtl
and
push
pop
xchg
jae
push
jl
cmp
sbb
jmp
dec
lahf
out
icebp
xor
or
addb
pop
mov
out
ljmp
outsl
cmp
enter
inc
or
ret
insb
pusha
jne
inc
loop
adc
mov
pop
jmp
inc
cmp
dec
mov
pop
mov
notl
jle
dec
test
lcallw
movsl
sar
jle
push
inc
mov
sbb
adc
fs
add
int
je
sti
xchg
aad
push
fimull
mov
daa
xor
fs
pop
pop
xchg
or
cmp
les
jae
pop
fst
leave
adc
jp
push
inc
in
pushf
or
dec
in
or
dec
and
loop
test
sbb
push
sbb
push
movsl
out
insl
pop
out
mov
push
sbb
xchg
inc
mov
mov
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
.byte
mov
.byte
hlt
hlt
inc
or
out
cmp
jl
fcmovb
mov
xor
fldenv
mov
rcll
sub
mov
push
add
fdivp
mov
jns
mov
ljmp
cmc
mov
sub
jne
push
addr16
add
ret
inc
sbb
aas
and
bound
add
insl
out
add
or
pop
stos
push
shrb
xor
imul
xor
jge
sub
scas
mov
sbb
adc
repz
mov
roll
fucom
pop
scas
mov
in
dec
in
lods
fistps
pop
cmp
daa
shlb
in
lret
test
xchg
movsb
mulb
fwait
inc
mov
and
cmp
imul
xor
xor
lods
sub
adc
xchg
mov
js
ret
inc
fnstcw
dec
adc
jg
inc
out
fsubs
imul
nop
add
int
lahf
mov
ja
stc
insb
js
adc
xchg
enter
xchg
add
jl
lahf
movsb
jne
pusha
or
lcall
or
out
imul
mov
xchg
pushf
jns
loope
mov
xor
into
clc
or
fsubp
pop
mov
cmp
std
mov
scas
fdivrs
push
fcmovnb
add
outsb
add
test
mov
sbb
jne
imul
aad
mov
xor
mov
daa
xchg
in
mov
adc
rorb
int3
and
popa
xchg
stos
in
bound
in
fcmovne
sub
popa
pop
mov
inc
test
lds
sub
adc
cmpsb
addr16
pop
loope
jb
or
adc
loope
cmp
int3
in
popa
repz
inc
adc
scas
push
mov
fs
inc
cmpsb
loop
test
xchg
rcrb
inc
test
fwait
js
subb
cwtl
insl
mov
jne
icebp
xchg
mov
fisubl
cmp
loope
sarl
sti
xchg
mov
ljmp
push
mov
call
mov
push
daa
jp
mov
orl
aam
pop
mov
cld
std
aaa
pop
sub
and
xchg
test
js
jl
add
fwait
ljmp
fstpl
hlt
mov
into
out
xor
sbb
mov
int
mov
xchg
mov
inc
arpl
scas
into
inc
dec
inc
mov
push
ret
jo
stc
xor
mov
mov
sar
sbb
sbb
xchg
mov
leave
fadd
and
paddsb
pop
add
aaa
test
outsb
lds
pop
jmp
test
jge
adc
cmp
daa
mov
aad
pop
mov
push
loop
mov
inc
ds
fisttpl
cmp
insb
jno
lock
dec
rcrb
mov
mov
mov
out
adc
cmp
jnp
or
movsl
mov
sbb
sub
jmp
sti
in
lds
jnp
sub
mov
out
jae
and
outsb
jle
clc
clc
out
push
out
and
iret
xchg
jl
int3
ret
test
fistl
mov
mov
imul
ss
les
ja
in
inc
out
cmc
faddl
clc
adc
lods
jb
pushf
aad
test
lock
lock
pop
roll
ja
jecxz
insb
and
rorb
sbbl
jle
pop
loope
mov
xchg
push
insl
mov
pop
lahf
mov
imul
jno
in
repz
loop
stos
in
mov
mov
dec
dec
test
das
loop
sbbl
inc
les
out
sti
addr16
cmp
les
inc
xchg
xchg
cmp
jecxz
in
xchg
push
aam
aam
scas
subl
add
stos
adc
in
aas
xorl
sbb
imulb
hlt
outsl
adc
addr16
out
xchg
cld
dec
ret
dec
cmpsb
cwtl
arpl
ret
mov
sub
imul
adc
ret
inc
mov
push
pop
push
sbb
push
cmp
mov
cmp
sub
sbb
test
jne
dec
dec
push
or
in
push
add
mov
adc
pop
adc
fdivrp
out
test
and
popf
inc
push
mov
cmp
clc
mov
inc
cmp
xchg
fwait
cwtl
jne
es
test
push
fstpl
xchg
sbb
fildll
sub
in
ljmp
push
sub
sbb
lds
mov
mov
or
loop
andb
adc
cmp
int
loopne
pop
push
imul
or
xor
mov
lea
xchg
test
out
mov
addr16
enter
adc
adc
jmp
adc
dec
push
insl
push
jecxz
mov
jp
cwtl
fildll
adc
xor
stos
xor
outsb
shl
mov
cwtl
xchg
mov
inc
jecxz
fwait
or
es
in
fcoms
clc
sub
lods
add
int3
push
lret
xor
rclb
out
mov
cmc
cltd
jl
pusha
sti
dec
xor
jmp
add
pushf
in
xor
lds
push
imul
out
mov
cltd
xchg
shrl
push
inc
cmc
out
aad
cmpb
xchg
xchg
ja
sbb
cli
out
test
inc
insb
gs
add
lret
test
sbb
enter
in
std
inc
mov
lods
dec
inc
sub
cmpsb
pop
sub
daa
xor
in
das
sti
jne
push
orl
das
iret
jmp
out
repnz
sar
or
int
mov
or
js
imul
and
inc
mov
cs
or
lret
push
and
in
es
enter
sub
xchg
out
aam
pop
out
push
push
push
pushl
cmp
in
loop
dec
jo
mov
mov
xorl
or
xchg
ss
mov
shrb
jb
push
push
push
mov
pop
jnp
dec
call
shr
jne
sub
xor
add
int
mov
and
push
cmp
frstor
pusha
push
jo
mov
pop
inc
addr16
fisubrs
movsb
fwait
xchg
push
pop
jmp
mov
iret
pop
js
cs
pop
pop
scas
test
scas
scas
pushf
dec
addr16
rorl
js
cmp
xlat
inc
xlat
pop
fsubs
and
pusha
pop
fcompl
sub
fwait
inc
sti
inc
cltd
scas
dec
inc
insl
movsb
push
mov
popa
mov
ret
xchg
mov
divl
ret
inc
in
xchg
mov
pop
mov
xor
pushf
mov
js
pop
in
xlat
xor
mov
and
jne
jle
pop
imul
aam
add
or
orb
movsl
add
mov
fsubrs
jp
pop
loopne
lock
push
lahf
push
dec
pusha
or
xchg
bnd
loope
fwait
sbb
rolb
mov
jne
in
fwait
cwtl
pop
add
xchg
out
adc
and
pop
push
pop
sub
xor
push
inc
push
popa
mov
mov
dec
out
push
mov
mov
pushf
lret
sub
std
sbb
clc
push
mov
jge
mov
inc
test
fistps
je
xchg
pop
rorb
push
imul
stc
bnd
fldcw
mov
adc
mov
rclb
and
mov
adc
cmp
es
xchg
cmc
aaa
mov
outsb
jecxz
adc
outsb
mov
imul
jns
outsb
fisttps
sub
in
or
sbb
es
lock
test
or
xlat
repnz
dec
popa
inc
sub
xor
out
push
jno
jns
xor
jle
movsb
and
daa
lods
repz
shrl
cltd
cmp
cwtl
ss
iret
and
lret
loope
stos
scas
int3
mov
or
daa
out
scas
addl
mov
addr16
je
mov
hlt
jg
or
ds
leave
push
cmp
and
mov
jb
inc
sti
or
and
xchg
lret
jbe
push
ret
inc
mov
insl
add
je
rclb
popf
mov
inc
adc
xor
stos
rclb
imul
jle
mov
lret
mov
mov
test
cmc
xchg
mov
je
shrb
pop
ss
cmp
and
sbb
mov
out
fisttpll
cs
push
pop
adc
movsb
dec
add
loopne
shlb
stos
in
insb
push
aad
ljmp
xorb
cwtl
subl
daa
mov
push
stc
div
cmp
cmp
int3
fnstsw
pop
cmp
sub
cld
xor
in
leave
rcr
fs
stc
mov
aam
push
adc
add
fdivs
adc
push
xchg
adc
data16
adc
pusha
fstps
ret
ret
gs
test
out
enter
mov
lretw
loope
dec
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
.byte
mov
.byte
push
mov
mov
test
je
mov
test
jne
xor
pop
ret
cmpb
jne
xor
cmp
sete
mov
pop
ret
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
test
incl
mov
and
adc
rorb
push
mov
inc
jns
and
cmp
adc
jmp
xorl
mov
pop
add
jmp
jmp
call
mov
jge
add
inc
pop
rclb
outsl
popf
nop
cmpsl
mov
popf
pop
dec
sahf
clc
add
imul
jmp
or
shlb
sbb
push
out
stos
mov
pop
cmp
or
aam
xchg
sbb
mov
dec
decb
lcall
add
fsubl
cs
fmull
jg
sbbb
inc
dec
push
mov
test
jae
push
popf
push
sahf
insb
inc
push
mov
ds
cmpb
inc
pop
mov
sub
sub
cmp
xchg
push
pop
nop
sbb
cmp
mov
repz
inc
jmp
and
mov
add
dec
or
and
sbb
sbb
cmp
dec
mov
icebp
xchg
jecxz
cmp
xchg
cmp
adc
mov
test
in
jnp
or
cld
adc
loop
inc
scas
mov
sub
jno
in
out
cmp
lret
xchg
push
fimull
sbb
data16
mov
pop
lea
jmp
mov
mov
ret
movsb
add
mov
mov
push
repnz
outsb
incb
in
add
and
hlt
nop
int
cwtl
push
cltd
aad
in
cmp
test
jo
stos
lea
je
dec
notl
pop
xchg
jne
mov
push
sub
int3
or
icebp
insl
pop
add
adc
cmc
xor
push
push
outsl
jmp
loop
push
push
jg
sub
sbb
in
test
mov
mov
es
add
sub
shrb
hlt
cmp
adcb
jl
lds
lods
fdiv
adc
add
xchg
rcrb
fisubrl
and
insl
idiv
lods
and
pop
mov
fnstcw
stc
lcall
or
sub
mov
cmp
jno
push
popa
xchg
mov
in
mov
xor
cmp
and
lds
inc
rclb
lret
adc
movsl
cld
aaa
lcall
mov
xchg
gs
mov
mov
or
mov
sbb
sarb
mov
jmp
push
fcmovu
xchg
outsb
mov
test
inc
mov
mov
xor
addr16
mov
adc
aaa
dec
lret
pushf
icebp
rcrb
xlat
sub
adc
outsl
mov
sahf
jo
cs
lods
loopne
xchg
fcoms
or
in
xor
and
push
inc
ss
cmp
dec
jge
mov
call
push
movsb
sub
add
and
adc
jnp
aad
jecxz
push
lods
stos
std
xchg
push
xchg
xlat
lret
movsb
sub
pop
scas
int
jle
sub
push
xor
dec
mov
push
adc
test
and
adc
xor
cmp
inc
cwtl
bound
imul
pushf
adc
scas
mov
imull
adc
sti
int
mov
test
or
pop
and
pop
dec
mov
hlt
fildll
stos
cmp
imul
jge
rcr
fsubrp
dec
mov
jno
cmp
fistpl
sub
cmp
fcoms
pop
outsb
clc
jmp
cmp
jne
shlb
loop
or
cld
add
xchg
xchg
jbe
stc
mov
ss
movsb
inc
sbb
jle
adc
popa
inc
jmp
push
and
cmp
cmpsb
rorl
cs
xor
shl
push
xor
lea
push
cmpsb
inc
and
lret
rolb
out
repnz
mov
imul
xchg
fs
jp
mov
xchg
lock
push
mov
lret
ret
aas
dec
mov
and
mov
mov
loopne
push
adc
dec
notl
insb
fildl
and
push
dec
insb
sub
sub
sbb
sbb
jb
jge
hlt
push
jae
xor
mov
sbb
and
ja
cmp
cmc
call
dec
xor
push
das
imulb
jp
iret
push
xor
cmp
push
jne
inc
test
pop
adc
sbbb
mov
fcoml
inc
add
jnp
ja
pop
mov
inc
sub
gs
mov
loop
jbe
or
int
movsl
inc
or
insb
inc
test
out
add
adc
or
dec
adc
mov
jl
pop
push
rorb
sub
lea
int
pop
mov
inc
and
fmulp
int3
pop
and
sahf
push
aad
aaa
fs
pop
cmp
inc
es
and
test
mov
shlb
mov
out
lahf
jmp
mov
pop
mov
pop
xor
pop
jb,pn
jns
sbb
xor
xchg
jnp
ret
daa
ret
sbb
stc
mov
shl
clc
bound
andl
es
scas
cmp
lods
in
pop
dec
sub
vmovups
push
jno
add
mov
pop
mov
push
push
test
out
lret
cltd
jnp
outsb
and
mov
lods
jmp
sub
iret
bound
xor
dec
push
xchg
inc
outsb
rcll
jb
mov
add
loop
mov
xchg
pop
or
lret
sbb
testl
cmp
lret
push
pop
pop
push
sbbb
jno
gs
adc
int3
and
mov
inc
pop
sbb
sti
lret
mov
add
inc
push
andb
enter
cmp
sub
cmp
iret
outsb
mov
ret
or
mov
shlb
push
inc
inc
xchg
inc
in
adc
cltd
sub
scas
push
jbe
jle
mov
pop
pop
decl
mov
or
mov
popa
out
ret
xor
leave
pop
xor
sub
data16
mov
ret
jne
jbe
pop
pop
stos
aas
jl
cwtl
sub
jo
xor
divb
mov
push
adc
es
sti
call
clc
jae
jmp
lods
fsubrl
mov
stos
hlt
xchg
inc
adc
sti
nop
jns
movb
mov
mov
pop
rolb
lret
jmp
ret
sub
and
shrb
pop
jp
stc
cmpsl
in
mov
shlb
adc
xchg
mov
ret
in
push
std
fisubrl
mov
jmp
or
mov
es
imul
cs
out
inc
dec
movsb
lods
or
negl
stos
mov
sbb
mov
sbb
sbbl
cmp
pop
scas
jmp
aaa
stos
or
and
dec
testb
cld
push
clc
sub
inc
cmpsl
jb
jp
xchg
jmp
out
cmp
sub
outsl
cli
jo
jl
mov
pop
out
in
mov
daa
movsb
sbb
jno
add
adc
testb
or
push
push
sub
xchg
and
xchg
lock
mov
xlat
out
scas
jno
cmp
pop
sar
daa
rorl
outsb
bnd
int3
ret
pushf
mov
out
loopne
dec
sbb
adc
mov
gs
loop
push
outsl
aam
imul
adc
inc
enter
and
mov
aad
xor
rorb
repz
xchg
pop
sub
movsb
iret
pop
jbe
lock
pop
inc
cmp
test
or
dec
daa
sbb
stos
sbb
or
mov
call
popf
aas
dec
clc
pop
mov
sbb
inc
and
repz
mov
mov
sbb
cltd
and
stos
mov
mov
sarb
test
js
daa
mov
aam
or
cs
ret
push
xor
mov
push
or
loopne
stos
mov
xchg
pop
and
insb
sbb
testl
addb
or
jae
lods
inc
roll
sar
dec
ljmp
pop
xorl
jecxz
mov
stc
cmp
cmp
xchg
js
ds
inc
xchg
lret
cmp
adc
ljmp
xor
jle
fwait
les
or
or
xchg
sub
lret
add
div
mov
lahf
scas
repz
jecxz
cmp
adc
insl
push
repz
cli
lods
insb
test
xor
lods
ds
cmpsl
out
insb
or
das
jle
adc
lret
jmp
aam
arpl
mov
cmp
mov
sbb
pop
mov
hlt
outsl
aas
lods
dec
out
jmp
sub
stos
imul
pop
jmp
mov
rcl
push
ljmp
cmp
add
adc
out
jp
sbb
jno
cld
sub
addb
xchg
lahf
and
sub
push
addl
mov
jb
mov
dec
out
and
loop
test
jo
adc
dec
scas
push
insl
xchg
xchg
pop
aam
jecxz
inc
addr16
jns
push
or
lods
pop
mov
jle
fiaddl
cmp
push
or
insb
add
inc
and
or
aad
add
xchg
mov
pop
mov
or
cmp
jne
mov
out
adc
repnz
fstps
cmp
push
add
jb
std
enter
xchg
jmp
push
js
hlt
mov
out
shll
add
stos
dec
jl
mov
jnp
cmpsb
mov
test
inc
and
mov
mov
push
xchg
xor
mov
and
in
or
cltd
test
mov
cmp
inc
in
pop
dec
cli
add
adc
fcmovnb
je
cmp
xchg
and
jmp
fdiv
stc
mov
sbbl
or
push
or
fsts
dec
inc
xor
pop
decl
inc
and
dec
rclb
push
push
xchg
out
jp
in
jmp
dec
stos
fucomp
in
sahf
push
push
mov
ds
in
mov
sbb
mov
hlt
mov
mov
call
mov
int
sbb
sbbb
mov
adc
loope
in
mov
pop
jmp
rolb
js
in
iret
inc
outsl
jg
out
imul
xchg
mov
mov
in
cmp
test
xor
sbb
stos
adc
dec
test
xor
test
data16
or
jg
or
mov
and
jae
mov
movsl
ficoml
shrl
out
or
cs
cld
fcmovnb
lock
loopne
jb
sub
hlt
cmpsl
ficoml
sub
sbb
xor
inc
daa
arpl
cmp
lahf
je
imul
pop
push
in
ljmp
lea
arpl
sti
hlt
xchg
test
daa
shll
mov
and
enter
jmp
inc
jns
out
cmp
lcall
sub
push
loope
pushf
outsb
call
je
int3
negb
mov
xor
negb
dec
add
adc
push
addr16
sbb
or
ret
cltd
or
xchg
jbe
sub
mov
fsubrl
cmp
mov
and
xchg
cltd
popf
inc
xrelease
aad
leave
lcall
mov
cmp
push
shll
pop
cli
in
or
cld
jbe
test
mov
and
pop
into
mov
mov
add
aad
decb
rcrb
or
fmul
dec
cmp
or
stc
cmp
test
imul
jo
leave
xor
mov
test
jg
scas
mov
aaa
add
mov
sahf
test
add
adc
mov
pop
adc
iret
insl
call
adc
fistl
lds
incl
ss
adc
lret
imul
in
push
fcmove
sub
jmp
xchg
adc
shrb
sbb
dec
cmp
popf
cmc
add
or
xchg
jle
lods
mov
mov
pusha
jmp
push
sub
add
pop
dec
sbb
jmp
pop
pop
push
jne
imul
lcall
xor
out
out
jns
sbb
daa
out
xor
mov
subb
out
fs
pop
xlat
mov
or
popa
enter
xor
lods
and
inc
pop
fimuls
jb
ds
dec
dec
stos
push
sbb
jns
jg
sbb
xchg
or
jecxz
mov
or
push
leave
repnz
cli
stc
fucomi
or
add
cld
sbb
mov
sbb
pop
bound
add
dec
mov
mov
sbb
cmp
pop
or
jne
push
or
xor
pop
mov
sahf
mov
scas
inc
andb
mov
push
ss
or
aam
and
adc
in
dec
jno
push
sar
stc
ja
orl
and
adc
shrl
insl
out
ja
mov
mov
adc
push
aaa
xor
outsl
clc
fdivr
mov
xchg
jmp
out
add
adc
add
push
or
jns
test
cwtl
add
sahf
pop
lea
dec
and
xchg
xor
outsl
cli
sub
out
jns
fists
jp
push
mov
std
sbb
add
mov
stos
pop
inc
pop
xor
xchg
fisubs
sbbl
out
fisttps
sub
cmp
xor
js
lcall
add
mov
aad
mov
enter
sahf
adc
and
dec
stos
push
out
mov
pop
test
lods
ljmp
jbe
mov
sti
mov
add
inc
or
dec
pop
lret
mov
push
pusha
ret
ds
push
cmpsb
nop
add
mov
stos
add
scas
mov
mov
pop
pop
add
add
dec
jae
push
call
lcall
popf
cwtl
test
cltd
ss
jmp
ret
and
push
fdivp
mov
push
jge
andb
cli
int3
fildll
aas
in
jo
insl
inc
fisttpll
mov
sbb
inc
jmp
movsl
cs
mov
test
dec
pop
repnz
loopne
ret
pushf
imul
jb
js
mov
movsb
inc
lods
xor
icebp
int
pop
mov
add
lcall
jnp
pop
pop
sarl
lods
adc
idiv
into
jne
test
roll
xorb
sub
mov
cltd
adc
iret
sahf
jae
adc
in
adc
mov
in
cmp
loop
loopne
les
xorb
loope
testl
jge
mov
sub
aaa
mov
and
hlt
idiv
sbb
adc
and
aad
inc
inc
inc
push
ret
dec
xor
dec
mov
fs
sbb
jns
xor
mov
pop
mov
adc
jne
scas
lea
scas
in
call
dec
loop
das
xchg
push
push
pop
sub
in
inc
xchg
jp
andb
push
iret
test
dec
mov
dec
mov
pop
es
jns
outsl
sub
call
loopne
inc
icebp
inc
stc
adc
sbb
ljmp
shll
icebp
pop
cmp
je
jmp
ja,pt
lret
add
xor
aaa
jae
jae
in
or
aad
sbb
cmp
cmpsl
xor
mov
pop
cmpsl
aad
cmp
call
pop
push
lods
xchg
xchg
xchg
lea
push
mov
push
aaa
dec
mov
mov
sahf
dec
arpl
bound
adc
inc
dec
test
dec
movsl
xchg
adc
insl
cmp
neg
jecxz
adc
ret
scas
mov
mov
mov
jl
dec
mov
mov
push
mov
test
filds
fs
push
fstpl
lea
inc
fs
rorb
cmpsl
mov
call
shrb
pop
cmc
mov
add
jmp
out
fwait
mov
enter
testb
dec
rorl
mov
je
aad
xchg
fdivp
dec
inc
int
sub
jnp
cmp
into
call
push
test
or
imul
push
xchg
iret
dec
push
lret
mov
in
jnp
dec
cmpsb
pop
jecxz
stc
pop
pushf
std
call
js
sub
dec
pop
push
sahf
int
pop
jge
test
lcall
adc
inc
inc
cmp
idivb
dec
mov
popf
cmp
mov
jl
and
add
loopne
es
jb
xchg
dec
sbb
add
rep
jns
js
fwait
stc
cmc
daa
std
std
aas
pop
sub
jge
orl
mov
mov
addl
mov
mov
push
jae
cmp
jnp
sub
popa
in
jns
imul
xchg
jecxz
sbb
pop
mov
cmp
rcll
jmp
or
xor
sub
nop
cmc
faddp
inc
xlat
xor
dec
cmpsb
xchg
xor
ja
inc
aam
call
mov
push
dec
cld
add
imul
add
xchg
fdivr
cmp
jmp
mov
push
push
pushf
ffreep
test
jp
pop
inc
cmp
lods
mov
sbb
pop
cmp
add
mov
push
bnd
aam
sbb
jo
xor
cmp
or
xor
mov
adc
jge
int3
sbb
outsl
cmp
andl
push
cmc
jg
icebp
sub
pop
shl
cmpsl
push
push
sbb
sbb
add
or
xchg
scas
inc
arpl
sbb
ljmp
xchg
push
mov
cmp
add
mov
ljmp
sahf
mov
mov
pop
lds
stos
hlt
xor
cltd
cmpsb
xchg
or
sub
pushf
cltd
in
pop
jle
push
mov
lods
xlat
pushl
sbb
dec
bound
and
adc
mov
push
push
int3
dec
pop
daa
rorl
dec
in
gs
ja
push
lahf
xchg
pop
push
ss
aas
or
dec
lret
xchg
sub
mov
ret
data16
or
or
imul
mov
xchg
fistl
push
fistps
pop
jo
jl
cmp
bound
test
data16
lods
or
mov
lds
out
push
sbb
pop
push
pop
ret
enter
fisubrl
popf
jl
in
add
dec
lods
lcall
mov
imulb
jns
mov
fistl
sbb
jbe
and
mov
pushf
or
je
lea
loopne
adc
xchg
mov
xor
test
or
mov
push
sub
inc
ljmp
pop
cwtl
aam
and
push
jns
mov
test
hlt
cmc
push
push
ss
dec
popf
shrl
inc
sub
imul
or
negb
rclb
or
mov
pusha
popf
mov
xor
add
mov
sub
stc
and
jmp
pop
or
pop
mov
out
inc
pop
xchg
aam
and
mov
das
lret
pop
mov
cmpsb
repnz
daa
rorb
repnz
popf
call
adc
stos
push
cs
and
and
mov
sub
xor
adc
out
dec
pop
or
dec
into
aad
cmc
shll
sub
adc
xor
cmpsl
pop
ret
xchg
ret
div
pop
push
mov
pop
stos
cli
js
rol
jg
loope
add
pop
and
hlt
pop
iret
push
jae
jecxz
fidivrl
add
clc
out
popf
repnz
and
mov
aad
shll
push
ljmp
lar
inc
sbb
cmpsl
dec
inc
mov
bound
push
cs
lcall
fldl
movsb
popa
fstpl
adc
add
sarl
insb
call
lcall
pushf
fmull
test
ljmp
out
push
das
mov
mov
or
mov
pushf
or
sahf
ret
incb
mov
mov
pusha
scas
stos
add
jl
cmp
es
and
mov
pusha
ljmp
inc
xrelease
cmc
outsb
ret
rorl
xor
inc
xorb
cmpsb
inc
jo
push
add
sub
pop
add
outsb
loopne
fwait
insb
cmp
or
dec
and
mov
sub
mov
mov
imul
dec
daa
faddl
bound
aaa
push
int
push
push
lahf
loopne
adc
neg
shl
jl
push
loopne
push
cmpsb
xchg
mov
pop
in
sti
orl
insl
jp
test
add
jle
js
out
rclb
jae
xchg
xchg
jb
fisttpl
stos
adc
pop
ljmp
mov
loopne
inc
mov
test
xchg
adc
mov
lahf
and
mov
inc
inc
out
inc
rorb
scas
aam
mov
stc
push
or
shlb
sbb
jb
lods
or
int3
ja
pusha
scas
push
call
push
cmpsl
xchg
xor
cmp
jmp
inc
test
pop
fs
push
cs
dec
cld
or
pcmpeqb
lock
dec
jne
lock
lods
cmp
lock
dec
xchg
pop
xchg
sbb
cs
int
add
daa
push
stc
ret
nop
loopne
in
jmp
jl
dec
dec
or
call
adc
pop
jmp
mov
mov
add
push
push
fwait
lods
lcall
sub
pop
add
xor
testl
jg
add
daa
and
ret
mov
xchg
imul
ds
cli
jmp
mov
decl
fmull
add
int3
xchg
pushf
xor
adc
lods
xor
icebp
and
xchg
jp
nop
lock
fcmovbe
aad
jp
out
mov
scas
xlat
ss
sti
jbe
icebp
xchg
cltd
fs
cmc
pushf
or
addr16
jb
xchg
sbb
dec
mov
andl
add
icebp
mov
cmpsl
xchg
fbstp
sub
fs
ss
insl
or
mov
xchg
push
outsb
pop
lahf
sub
pop
pop
das
inc
ja
xchg
iret
mov
ret
jp
push
mov
dec
ret
jno
jg
sbb
outsl
into
aam
mov
mov
push
imul
or
in
and
lret
jecxz
mov
lods
das
lret
in
imul
ja
adc
jnp
pop
and
scas
cmp
clc
lret
or
aad
daa
and
adc
add
xor
jecxz
lret
test
push
jecxz
push
adc
fcom
outsb
les
inc
jae
in
ja
ret
jmp
fsubrs
mov
into
mov
adcb
dec
jl
jl
ds
or
pop
dec
xchg
rcr
dec
into
jmp
ss
inc
test
mov
xchg
mov
adc
mov
mov
aam
jb
mov
inc
daa
inc
clc
cmpb
pop
nop
jo
mov
rcll
imul
ja
pop
or
dec
dec
dec
out
punpcklwd
movsl
pop
mov
sub
cld
fwait
sbb
sbb
and
jmp
std
lea
jecxz
lods
mov
das
pop
ret
out
popa
and
int
clc
mov
das
loope
xor
add
mov
mov
test
ds
leave
popf
mov
pop
outsl
imul
push
movsl
jo
imul
int
dec
inc
stos
andl
nop
dec
xchg
lea
in
sub
ret
int
mov
lods
loope
xchg
pavgw
mov
pop
out
lcall
out
pop
orl
dec
mov
mov
les
sahf
xor
add
cmpsl
mov
icebp
dec
jae
stos
inc
and
shll
inc
sbb
scas
push
or
mov
mov
mov
clc
aas
push
xor
test
mov
aas
or
xor
jmp
mov
scas
xchg
in
out
scas
shll
btr
push
xor
test
fisttpl
icebp
stc
or
rcll
adc
jno
lcall
sbb
cmp
pop
push
sbb
or
popa
jle
rolb
cmp
adc
jmp
stc
xchg
outsb
pushf
out
jmp
shll
ljmp
mov
add
aam
sub
sub
pushf
sub
xchg
adc
hlt
scas
pop
adc
xor
mov
test
mov
or
push
fwait
addr16
pop
add
fucompp
push
insl
je
cmp
outsb
mov
mov
adc
lret
adcl
jns
xchg
push
sub
call
inc
or
push
and
lcall
fs
bound
cmp
pop
mov
xchg
push
test
push
sub
mov
adc
jp
push
mov
inc
cwtl
fnstenv
fsubrs
insb
scas
ret
push
ljmp
mov
in
in
pop
lahf
out
shlb
aaa
xor
pushl
jmp
pop
and
pop
inc
jae
out
ss
mov
fidivs
lret
mov
mov
xchg
out
jp
sarl
inc
dec
leave
add
xor
jns
hlt
add
mov
sub
or
out
push
jo
inc
into
mov
dec
addr16
cmpsb
hlt
xlat
mov
insl
mov
test
add
sahf
roll
xchg
adc
cmp
push
or
xorl
inc
test
andl
lret
push
sbb
out
mov
xorl
mov
fs
xor
sti
std
icebp
mov
mov
js
outsl
aam
cld
mov
orl
push
call
hlt
add
mov
popa
jge
jg
cs
sub
push
sar
inc
leave
sub
fs
pop
dec
push
xlat
lods
cmpsb
repz
mov
cmpsl
enter
out
pop
xor
mov
pop
mov
sbb
inc
mov
mov
and
push
gs
and
jb
arpl
and
adc
cmp
sti
int3
loop,pn
lahf
pop
sbb
xchg
xchg
shrb
lods
dec
stc
cmp
lahf
arpl
popa
shlb
add
mov
out
cmc
adc
insb
icebp
int
popf
or
xchg
out
pop
or
dec
sub
xchg
mov
pop
fwait
out
outsb
out
loopne
dec
int3
ror
idivb
jecxz
fiaddl
pop
sbb
in
clc
jmp
mov
push
fs
xor
add
iret
in
andl
vpminsw
dec
jmp
es
dec
in
loop
fisubs
int
ljmp
lods
push
imul
fcomp
fsubrl
jge
xor
sarb
cmpsb
xlat
movsl
repz
sub
push
sti
xor
pop
xchg
dec
fwait
hlt
mov
push
mov
leave
cmp
daa
sbb
shlb
ljmp
inc
enter
lret
sbb
fstpl
jo
std
mov
cmp
xchg
dec
sub
lret
or
adc
out
sub
inc
mov
call
jmp
pop
int3
pop
mov
dec
cli
stos
inc
or
push
and
mov
sbb
adc
fwait
decb
std
push
jl
or
push
push
jbe
and
repz
cmpl
xchg
mov
push
sbb
cwtl
icebp
cmc
int
add
mov
push
jl
leave
mov
ss
mov
outsb
pop
push
sarl
das
cmp
inc
aas
mov
divb
adc
out
sbb
dec
or
push
je
mov
ljmp
inc
jnp
add
xor
adc
mov
mov
mov
imull
rorl
push
das
fs
repnz
aaa
notb
aas
leave
call
out
test
icebp
lods
mov
pop
lock
adc
fsubrs
outsl
ds
mov
repz
out
es
and
ret
or
daa
pop
sar
fdivl
mov
or
daa
call
ret
jmp
pop
in
jbe
test
lods
cld
stc
and
mov
lret
pop
cmp
mov
inc
sub
shlb
mov
or
out
jb
cmp
out
push
and
sub
mov
jo
loop
xorl
xrelease
mov
push
xchg
jns
int3
dec
xor
sti
inc
loopne
sub
mov
icebp
scas
frstor
mov
push
mov
xor
mov
add
and
adc
popl
push
fidivrl
sub
in
cmpl
je
mov
jg
enter
in
into
dec
mov
out
arpl
xchg
aad
es
cltd
int3
inc
inc
xchg
xchg
mov
add
sbb
int
sub
push
mov
and
lcall
repz
inc
sbb
xor
shrl
jle
icebp
in
or
mov
or
mov
mov
call
pusha
rol
mov
push
scas
in
mov
xchg
sub
ffreep
cmp
test
or
xchg
add
jmp
add
pop
movsl
dec
or
test
mov
xchg
std
out
mov
mov
mov
sbb
jnp
das
stos
bound
sbb
mov
out
cmp
enter
mov
ds
inc
jp
jl
xor
movsl
ret
dec
fists
outsb
fmull
push
lods
enter
lock
lea
aam
mov
cltd
and
lds
ficompl
adc
test
test
lahf
int3
imul
stos
jns
lret
xor
loopne
pop
xlat
into
xchg
add
outsl
mov
ja
xchg
jbe
pop
or
sbb
jne
inc
pop
or
shlb
xchg
adc
push
test
cli
loopne
mov
movl
sahf
sub
fxam
out
call
ljmp
mov
and
xchg
sbb
pop
sub
cmp
dec
add
pop
loope
push
test
jnp
cmp
push
mov
cmp
or
pop
dec
mov
mov
jg
inc
rcr
mov
jmp
shlb
cmp
mov
dec
pop
push
call
cmpsl
jae
hlt
xchg
aad
into
enter
or
lea
neg
out
pusha
pop
popa
and
sbb
ljmp
and
pop
inc
inc
js
in
pusha
mov
out
mov
cmpsb
arpl
adc
addr16
popf
or
jno
std
add
jge
push
int3
jecxz
lea
int3
push
int
addl
dec
lods
jmp
push
hlt
pop
push
mov
idivl
adc
les
mov
jecxz
aaa
sbb
aaa
sbb
in
pop
sahf
cmp
and
dec
fistpl
jbe
xor
xlat
cli
dec
mov
cmp
lcall
or
push
push
pop
jp
test
notb
aas
inc
or
iret
imul
adc
movsl
pop
cli
dec
fisubrl
stos
xchg
add
xor
test
pushf
fstpl
or
jno
mov
shr
mov
fistl
cs
dec
insl
push
int
xchg
sbb
mov
inc
fildll
adc
mov
xchg
push
ret
pop
jmp
jmp
sbb
fwait
mov
adc
fimull
fldcw
add
jl
in
sub
inc
int3
mov
push
ds
push
add
movsl
add
pop
xor
push
jnp
xchg
hlt
fistpll
cmc
and
inc
xor
mov
pop
jne
ficoml
dec
lock
sbb
jmp
lret
mov
bound
push
xor
out
bound
pusha
lret
mov
dec
adc
mov
in
mov
in
loope
push
cld
std
push
adc
std
add
jbe
jne
in
and
sub
movsl
in
lods
xchg
mov
sbb
mov
orb
sub
out
sbb
jmp
ja
insl
jmp
xor
loope
mov
mov
sub
sub
sub
aaa
cmp
fists
adc
cmp
and
jecxz
outsl
mov
and
lds
xor
xor
nop
mov
xorl
fsubrs
jge
ljmp
mov
cmpsl
daa
mov
jp
push
or
adc
push
mov
xchg
inc
add
addr16
mov
sub
test
sbb
push
mov
gs
insb
je
dec
inc
adc
mov
cli
mov
jo
aad
adc
mov
test
iret
and
das
ret
adc
cltd
sub
jge
or
sbb
mov
pop
in
arpl
mov
fists
shlb
or
imull
test
push
cwtl
popa
xor
dec
mov
jge
xor
inc
clc
jle
jne
jmp
mov
adc
xchg
push
loope
ret
out
xchg
xchg
test
inc
test
mov
jno
or
into
sub
int3
push
frstor
inc
xchg
dec
popa
jge
loope
mov
mov
les
mov
jp
out
push
mov
xor
sahf
iret
dec
subl
in
sti
xor
stos
dec
ja
jmp
xor
sarb
ret
dec
mov
out
int3
loope
cmp
or
testb
pop
or
std
cmpsb
fucomp
adc
orl
cmpl
repz
jmp
dec
cltd
sbb
outsl
lds
mov
cwtl
out
dec
call
aas
dec
cld
adc
dec
and
lea
repz
mov
js
jp
fidivrs
push
or
lods
fstpl
xchg
dec
andl
das
pop
negl
and
xchg
mov
loop
cld
push
es
in
rcl
sarl
add
dec
mov
adc
aam
sub
push
dec
pushl
push
out
xchg
inc
iret
mov
test
ja
lcall
sbb
int3
mov
aaa
imul
in
push
dec
ficoml
lds
or
cwtl
sub
out
or
jno
mov
scas
inc
sbb
cmp
movsl
sbb
xchg
adc
scas
cmp
dec
sbb
sub
lret
cld
xlat
dec
or
dec
lret
call
push
int
or
ja
lea
ret
in
aam
and
xor
ds
add
popa
fidivl
add
roll
xor
dec
jne
in
inc
push
cltd
jp
mov
mov
or
fdivr
and
xchg
xchg
inc
inc
leave
movsl
jle
rcr
shr
hlt
pusha
pop
mov
mov
shll
enter
pusha
lods
adc
xor
xchg
sahf
ret
cmp
lahf
clc
ds
sbb
push
and
lcall
aad
in
loopne
pusha
es
fucomi
cwtl
push
leave
aad
mov
inc
jbe
lods
cmp
pop
rcll
dec
xorb
sbb
mov
jnp
in
cmp
pop
jns
cmp
es
push
mov
rorl
or
fcmovbe
adc
les
jle
scas
jl
cvtps2pd
add
xchg
scas
sub
je
fcmovnb
mov
movsl
jnp
lds
jbe
into
jns
xchg
mov
jnp
lods
popf
mov
and
pop
cltd
jg
leave
add
inc
pop
add
lods
pop
pop
sub
sub
fsubrp
pop
dec
fistpl
mov
xchg
sbb
ret
test
adc
sub
aaa
or
lret
and
repz
sbb
xor
jmp
or
into
fsubrl
and
mov
fistpll
add
xor
cmp
pop
clc
add
add
xor
ret
dec
fdivrl
stos
loope
mov
loopne
add
add
xor
cli
sahf
jl
or
aas
inc
lahf
sbb
adc
inc
jb
or
push
inc
adc
loope
xor
adc
xor
shll
jb
shrb
or
or
xlat
add
bound
pop
xor
rol
dec
sub
sbb
lods
mov
pop
sbb
or
pop
cmpb
cmpsb
mov
xchg
and
lea
jmp
test
mov
je
sbb
pop
xlat
mov
pushf
popf
stos
sbb
sbb
xor
xchg
push
lcall
mov
mov
leave
add
jbe
aam
pop
ret
jle
imul
cmpsl
mov
mov
scas
sub
push
sbb
outsl
xchg
xorb
xchg
mov
in
inc
and
aas
add
cmpl
mov
sub
aad
in
out
push
pop
out
in
jo
orl
cs
loopne
xor
sahf
or
sti
push
cmp
dec
jno
clc
dec
xor
mov
push
xlat
adc
leave
jp
jmp
sbb
lret
push
pusha
jns
xcrypt-ctr
cmpsl
sahf
mov
cmp
cmp
inc
movsb
jb
in
push
loop
xchg
cltd
repnz
adc
sti
ret
push
and
mov
adc
xlat
and
mov
sub
sbb
mov
inc
shlb
aam
mov
add
in
sub
push
sbb
mov
lds
mov
dec
mov
dec
mov
cmp
inc
testl
loop
or
cmp
leave
jmp
cmp
mov
dec
int3
inc
mov
pop
inc
inc
ret
pop
out
jle
rcll
stos
movsb
mov
fldl
dec
push
shlb
arpl
cwtl
into
add
add
std
mov
fisubrl
pop
outsl
call
ljmp
fucomi
data16
cmp
ror
shlb
das
lret
je
cmovge
fiadds
enter
and
fidivs
push
int
movsb
xlat
mov
loop
insl
jbe
mov
fdivrl
loop
and
jnp
push
and
push
dec
xor
mov
lea
bound
cli
out
push
jns
stc
fisttpll
fwait
aaa
stos
push
icebp
inc
in
push
sub
push
mov
cltd
test
sahf
insl
sbb
int
mov
jne
jg
filds
adc
fwait
stos
loopne
popf
push
fs
jl
xchg
jmpw
sub
pop
pop
mov
mov
lods
icebp
add
adc
out
mov
shrb
in
and
ljmp
inc
cltd
fdivr
xor
insl
push
cmp
fs
test
test
lods
fwait
shl
xlat
jns
xchg
sub
outsl
pushf
mov
iret
repz
mov
adc
add
repnz
andb
mov
imul
dec
addb
push
push
xchg
icebp
adc
test
mov
shlb
pop
in
xchg
fld
or
xor
add
pop
test
push
ret
ja
push
fidivs
cmpsl
dec
xchg
cmp
daa
mov
dec
cmp
xchg
adc
arpl
ja
mov
out
mov
pop
mov
in
rol
movsb
add
out
das
fwait
cmp
mov
flds
lret
or
add
pop
mov
in
pop
testb
jb
xchg
inc
add
test
out
push
lret
xlat
pop
add
aad
in
mov
jmp
enter
xor
push
fistps
inc
pop
adc
sbb
les
repz
out
movsl
vcvtsi2ssl
inc
mov
leave
jecxz
pcmpgtw
shlb
mov
lds
mov
mov
icebp
leave
cmp
dec
rcrb
jmp
mov
rclb
adc
and
insb
sahf
ret
mov
inc
pop
sub
in
repz
sti
es
cld
ja
data16
pop
pushf
cld
sub
cmp
stc
lods
out
dec
in
inc
push
cmp
mov
lds
and
outsb
stos
pop
mov
add
sub
xchg
movups
jmp
addb
int3
scas
popf
sub
jae
jl
inc
nop
roll
push
sub
lods
pand
mov
stos
adc
sub
sbb
aam
and
xor
jbe
xchg
cmp
xchg
repnz
dec
clc
in
mov
add
fdiv
popf
cs
xorb
sub
xchg
inc
pop
sub
inc
adc
mov
je
or
xchg
ss
add
daa
stos
mov
jg
xchg
xchg
xor
pusha
add
gs
mov
push
nop
fnsave
rolb
mov
outsl
dec
pusha
jne
mov
push
cli
rdtsc
mov
cmp
or
add
enter
inc
push
xchg
repnz
rorl
xchg
adc
sbb
sar
gs
out
mov
cmp
jmp
fisubl
lds
out
fiadds
sbb
jp
cmp
dec
dec
mov
xchg
out
test
jns
or
mov
bnd
enter
in
pop
and
or
mov
inc
imul
xchg
bnd
mov
js
mov
cmpsl
ljmp
mov
dec
adc
in
ret
lahf
call
or
orl
xor
sbb
call
cmpsb
adc
mov
outsl
sahf
adc
push
call
enter
inc
mov
insl
in
sub
mov
adc
ljmp
sbb
push
das
ret
ret
adc
sbb
negb
aas
ljmp
add
xor
adc
ds
loope
jno
sub
dec
aam
das
xchg
mov
xchg
mov
inc
cmpsb
mov
mov
sbbb
jmp
mov
fstpt
in
movsl
into
nop
add
loopne
xchg
push
adc
sbb
mov
mov
xchg
lea
dec
push
inc
adc
arpl
pop
xchg
sbb
add
inc
lods
mov
and
sub
out
push
adc
xchg
lds
jmp
xor
ret
mov
push
popa
shll
stos
cmp
pop
stos
lcall
push
push
scas
push
adc
seto
mov
adc
xlat
jg
fs
lret
aas
or
sbbb
call
lea
mov
ror
in
test
sti
mov
dec
mov
cmpsl
outsl
js
xor
ret
ret
iret
mov
cmp
mov
mov
stos
lret
sub
in
mov
aad
rcrb
or
pushf
mov
and
jnp
xchg
arpl
mov
out
scas
push
or
leave
je
mov
lods
hlt
in
out
mov
rcll
mov
add
hlt
xor
mov
pushf
iret
lahf
sbb
mov
in
imul
xor
xchg
pushf
addl
inc
mov
mov
push
sub
call
sbb
jb
jo
jbe
inc
inc
fimuls
push
clc
insl
cli
stos
push
leave
push
movsb
or
or
and
lds
and
nop
jmp
push
dec
lods
pop
mov
fistpl
add
push
add
lods
jecxz
push
nop
test
test
rcll
outsl
negl
gs
sbb
or
jp
into
ret
and
jo
push
cmp
aad
xchg
inc
stos
pop
sbb
aaa
cmpsb
mov
push
sub
shlb
in
sub
lods
jp
cmp
pop
sahf
inc
out
shrb
imul
nop
fsubrs
test
je
test
xchg
das
pop
int
mov
adc
or
out
or
out
inc
lahf
mov
pop
out
mov
xchg
and
lea
cs
jbe
cmp
mov
ret
loop
dec
cs
jp
enter
or
xchg
subl
mov
js
call
adc
sbb
dec
sub
ror
stos
divl
pusha
mov
scas
lcall
in
outsb
dec
enter
jmp
cwtl
lret
pushf
lcall
jle
imul
jge
xor
lcall
xchg
push
pop
popf
dec
idiv
data16
add
mov
out
inc
mov
std
lahf
add
sbb
adcb
inc
insb
push
js
inc
sub
pop
enter
lds
int
sub
popf
mov
jbe
mov
push
dec
les
jb
jne
int3
xor
push
xor
mov
and
shll
ret
xchg
jbe
jb
es
repz
jns
jno
push
adc
mov
dec
imulb
lcall
pop
inc
xor
popl
inc
sub
fisubrs
push
dec
push
mov
lret
pop
cmpsb
sub
int
prefetchnta
out
sub
hlt
mov
ficoml
bound
ds
scas
jo
sub
incl
push
adc
push
inc
pop
adc
inc
or
lock
nop
add
push
add
pop
stos
sub
leave
rdpmc
jns
add
adc
xor
clc
mov
test
loop
in
mov
sub
mov
shll
xchg
jno
rcll
add
aad
gs
aad
jne
mov
dec
xchg
dec
je
xor
out
call
and
push
xchg
pusha
bnd
mov
mov
cltd
lea
pop
incb
jnp
inc
out
push
int3
movsb
test
addr16
insl
xchg
int3
cmpsb
pop
adc
xchg
jl
pushf
jl
negb
imul
rorl
ja
sbb
mov
jmp
cmp
test
hlt
add
xchg
xor
lret
cmpsb
sub
inc
pcmpgtb
xor
movsb
add
cwtl
push
jle
outsb
xchg
movsb
pop
jo
subb
out
in
je
lret
in
jle
xchg
repz
data16
sbbb
in
out
xor
ja
insb
sub
xchg
movntps
and
sbb
pop
cmp
xchg
imul
pop
jle
jae
jmp
gs
stos
lcall
or
rorl
mov
and
jle
sbb
fiaddl
fistpll
xchg
or
adc
adc
cmp
xlat
mov
orl
push
fildll
bound
push
inc
outsb
mov
mov
popa
adc
mov
mov
sbb
cld
mov
and
adc
clc
in
push
push
ljmp
xor
push
jecxz
imul
lahf
mov
jl
fcmove
loope
sub
xchg
cmp
je
jnp
pusha
out
push
addr16
jp
and
hlt
das
cmp
and
jae
mov
sysexit
int
push
jae
mov
add
testb
adc
xchg
loope
data16
fs
arpl
and
popf
imul
jne
mov
gs
pushf
mov
gs
xchg
roll
pop
sbb
sub
push
push
cli
add
and
jmp
xchg
jp
jmp
imul
lods
lea
adc
adc
into
push
fs
sbb
in
leave
inc
int3
or
mov
pushf
inc
aaa
mov
insl
mov
adc
hlt
orl
lret
mov
int
pushf
mov
aaa
xor
sub
pop
arpl
pusha
jge
js
xchg
sahf
sbb
or
lock
sub
insl
aad
mov
popa
jge
jbe
inc
fmull
xchg
leave
jl
dec
gs
xlat
mov
jo
or
daa
dec
or
les
dec
ss
xchg
inc
or
lods
mov
mov
andl
mov
sub
cwtl
sbb
scas
addb
outsb
add
jg
in
push
movsl
xor
pop
inc
aam
or
pop
stos
or
aam
std
lock
cli
sub
movsb
mov
mull
adc
lock
mov
ja
outsb
test
aam
ljmp
push
xchg
mov
mov
adc
shrl
pop
ja
ret
aad
sbb
xchg
mov
mov
xchg
insl
adc
shrb
ret
lods
mov
and
fdiv
xor
cs
stc
leave
mov
loop
rorl
fcmovnbe
add
int
outsl
dec
mov
fildl
jb
add
sub
in
push
mov
xchg
jnp
dec
add
popf
xchg
jl
mov
inc
lds
adc
into
add
or
mov
mov
nop
dec
xor
cmc
aas
dec
add
fbstp
out
lea
lock
stos
hlt
les
insl
ljmp
cmpsb
inc
call
mov
or
pop
jl,pt
jp
mov
daa
cmpsb
testb
jb
xor
push
jo
pop
dec
call
push
push
rorl
out
clc
inc
or
orl
in
xor
pop
mov
negb
inc
push
and
das
mov
push
push
add
scas
inc
daa
sar
mov
cld
push
lret
test
adc
push
jl
xor
enter
push
outsl
aas
movl
inc
gs
fs
add
lds
setl
sbb
sub
fsub
or
cmp
sti
in
sbb
pop
jo
mov
cmp
xchg
pop
mov
adc
mov
out
dec
mov
adc
std
jo
dec
dec
pop
std
testl
sbb
inc
mov
cmp
cld
ret
xchg
enter
push
mov
in
ret
divb
mov
cli
sahf
or
mov
dec
js
cmpb
sbb
cmpsb
ljmp
adc
xchg
cmp
xchg
inc
cmp
sbb
sbb
aam
leave
lock
push
pusha
movsb
aaa
adcb
mov
jmp
aas
mov
outsb
or
jmp
inc
sbb
stos
xchg
xor
jmp
flds
and
xor
hlt
pop
jg
lcall
dec
loope
testl
sti
adc
or
jp
scas
pushf
push
bound
mov
mov
lea
cmpsl
mov
and
fcom
push
lock
adcb
xchg
ret
pusha
jle
dec
sub
mov
xor
pop
push
inc
rol
in
ret
and
ljmp
stc
lock
stos
push
daa
xorb
in
test
mov
aaa
xchg
lock
mov
push
sub
jl,pt
push
in
cmpsb
inc
mov
jecxz
das
nop
aas
test
cwtl
and
xor
out
cmpsl
icebp
fstpl
fadds
js
push
das
push
mov
fwait
push
xor
pushf
push
mov
or
push
mov
mov
hlt
and
push
xchg
mov
xorb
lea
ljmp
cld
sub
cmp
inc
mov
dec
jge
stos
pop
scas
scas
inc
shll
les
ds
push
pop
shl
sbb
xchg
dec
repnz
hlt
adc
repz
out
and
lea
xor
cld
cmp
jns
xchg
enter
pop
shll
mov
push
xchg
and
clc
ficomps
aad
aaa
incl
stos
mov
stos
mov
call
adc
jecxz
test
fsubl
inc
shrl
inc
das
mov
adc
add
pusha
fdivrs
push
inc
sub
or
lcall
iret
xchg
add
divl
pop
push
adc
cmpsb
mov
push
loopne
mov
mov
les
inc
insl
inc
mov
fdivr
insb
jns
dec
cmp
mov
push
pop
cmp
cs
mov
ja
and
pop
movsl
fildl
test
mov
lods
mov
xchg
icebp
sahf
push
mov
mov
loope
lods
in
jg
es
les
lret
arpl
leave
sbb
int3
cmpsl
into
cld
lret
mov
jns
outsb
in
push
adc
pop
movsb
jb
mov
movsl
cltd
sub
rcrl
stc
cmpl
dec
dec
sub
pusha
gs
xchg
push
xor
and
mov
lock
cmp
cs
pusha
dec
xchg
sti
sbb
cmpsb
mov
jg
pop
mov
outsb
mov
and
xor
add
movsb
pusha
inc
cmp
inc
aam
shl
adc
lds
dec
jl
pop
aad
int3
adc
sbb
lahf
outsl
mov
xor
adc
jo
sub
sub
mov
dec
fnsave
call
popf
imul
xchg
leave
pop
jbe
fwait
repz
out
mov
leave
das
mov
mov
fsubl
jp
into
into
pop
xchg
xchg
dec
adc
dec
fcom
mov
cwtl
push
jnp
sub
and
or
mov
dec
xor
fildl
xor
es
sar
data16
popf
push
in
lods
jl
fisubrl
ret
mov
es
mov
pop
or
pop
lds
lods
popf
inc
mov
jge
inc
xchg
addl
push
notb
roll
sub
outsb
cmp
sub
lcall
inc
add
stos
stos
pusha
fwait
outsl
push
jg
xchg
add
mov
jge
cmpsb
jmp
sbb
in
push
repnz
add
sub
sbb
fdivrs
cmp
repnz
inc
test
sub
mov
adc
data16
ds
filds
pop
jle
push
jg
mov
jp
clc
jae
xchg
aaa
xchg
mov
mov
mov
xchg
js
fwait
roll
jmp
imul
push
mov
outsl
adc
adc
push
or
jne
scas
jle
push
and
lret
mov
dec
mov
in
call
cli
popa
inc
std
pusha
int
and
jp
mov
mov
mov
out
jno
in
cmp
pop
inc
dec
inc
and
icebp
xchg
mov
lea
sbbl
xor
rcr
iret
push
out
push
stc
aaa
push
xchg
add
cwtl
jae
les
cmp
test
cmp
jnp
pop
dec
dec
pop
pop
enter
sub
mov
xlat
jge
and
push
push
push
imulb
arpl
jae
or
jmpw
push
fadds
mov
push
lcall
mov
lcall
enter
adc
aam
inc
jno
and
iret
xchg
or
push
mov
testb
dec
xchg
shll
inc
movsl
add
pop
fwait
xor
cmc
adc
push
cwtl
cmp
add
lret
add
adc
movsb
mov
xchg
ret
mov
jle
into
xchg
movsl
jge
push
out
fimull
fucomip
adc
mov
cmp
jecxz
push
call
adc
ds
test
pop
pop
mov
inc
push
leave
loope
cld
jg
xor
xor
movsl
mov
xchg
jb
js
ret
fdivs
jno
fldenv
pop
in
outsl
stc
jecxz
mov
addb
push
sbb
call
aas
jno
mov
call
jge
pop
pop
pop
mov
mov
add
sub
nop
test
xor
adc
rcrb
pusha
push
fisubrl
inc
into
dec
add
xchg
jns
sbb
or
dec
and
mov
xchg
je
xchg
cmp
mov
and
adc
pop
aas
rcl
jns
mov
addr16
push
ja
gs
dec
test
jo
sub
inc
in
xlat
jns
sbb
into
test
jp
push
fcoms
xchg
out
mov
adc
xchg
rclb
adc
insl
adc
jns
xchg
jg
mov
rclb
lahf
cmpsb
aaa
jne
je
jnp
insl
xchg
gs
les
add
xchg
fucomp
push
adc
pushl
mov
or
sbb
cli
sbb
loope
lock
insb
popf
jns
mov
fnstenv
jp
ficompl
mov
cltd
das
adc
xor
mov
lods
clc
loop
jnp
dec
jae
lods
out
and
daa
ret
sbbl
mov
jp,pt
hlt
mov
cmp
push
sahf
outsb
or
sub
pop
pop
in
mov
test
pop
adcl
push
push
and
gs
aaa
xor
inc
lods
cmp
ss
xchg
ret
mov
enter
inc
adc
addr16
pop
popf
mov
insl
or
std
mov
cwtl
or
dec
mov
sbb
out
cmc
fcmovnu
cwtl
add
push
mov
jo
cmp
scas
xor
xlat
lahf
pop
inc
sbb
sub
sahf
lret
aad
stos
stos
add
lahf
stos
xchg
out
jge
mov
sub
lock
jmp
sbb
sub
mov
adc
xor
add
lods
das
adc
fcmovnb
rorl
pop
cmpl
in
mov
sahf
test
mov
and
stos
ds
dec
test
fisubs
push
sahf
testb
pop
push
sahf
or
push
push
movsb
cmpl
repnz
out
jnp
jecxz
adc
lret
adc
in
sarl
pop
add
sub
dec
adc
mov
int3
mov
jge
imul
ret
dec
pop
push
jmp
arpl
or
or
mov
cmp
adc
lret
xlat
movsl
leave
mov
test
dec
cmp
mov
fs
sub
add
out
mov
push
bound
pop
std
or
jae
xchg
xor
dec
sbb
icebp
pop
mov
and
outsl
mov
jg
jb
dec
cmc
mov
mov
cmp
pop
cmc
xchg
je
push
pop
idiv
in
in
sub
inc
sbb
lret
es
inc
dec
dec
add
xchg
fs
xlat
fists
insl
cmp
mov
test
jo
push
mov
adc
xchg
mov
iret
cmp
push
add
lock
ja
jne
xlat
lods
push
xor
clc
ret
loop
iret
lock
int3
lea
adc
add
ficompl
sub
aam
xchg
aad
mov
ss
int3
adc
pop
out
cmp
popf
mov
cli
dec
dec
jmp
xor
ret
xlat
addr16
inc
mov
cmp
test
and
jecxz
xor
ja
add
test
mov
clc
cmp
cmp
dec
push
inc
scas
insb
xchg
push
in
pop
add
std
js
sbb
lods
cmp
fildl
add
pop
cli
mov
sub
xchg
mov
fs
lahf
stos
mov
lcall
jg
push
jmp
cltd
sub
sbb
xchg
jp
sub
sub
cmp
fildl
nop
gs
mov
cwtl
loopne
shlb
pop
xor
fcmovne
pop
cmovo
xchg
in
inc
mov
rcll
rolb
xor
cmc
aam
or
dec
sub
test
push
in
nop
hlt
dec
imul
sub
mov
inc
jl
jno
lods
xchg
loopne
push
sbb
mov
stos
xor
lcall
lods
lret
dec
aam
mov
jle
lret
in
jo
out
and
mov
add
mov
jae
xchg
pop
loop
in
cmpsb
xchg
out
movsb
int3
add
cmp
sub
lcall
call
adc
arpl
aad
jmp
pop
mov
pop
je
add
mov
inc
jl
jb
adc
sub
mov
ljmp
xchg
jl
and
daa
enter
js
arpl
mov
lods
xor
daa
push
es
sbb
jmp
pop
pop
pop
push
push
add
es
xor
push
dec
adc
mov
fbstp
xchg
fistl
out
outsb
jo
push
sub
daa
int3
cmpb
subb
inc
add
xlat
push
mov
mov
gs
out
notl
scas
fdivl
push
lea
in
mov
in
pop
scas
sbb
notb
subb
jnp
jns
xchg
mov
mov
xor
sub
lea
jecxz
push
push
shll
aas
mov
jno
faddl
or
cld
cld
sahf
sub
not
xchg
jo
sub
xor
orb
xor
enter
mov
inc
or
xchg
xor
rorb
in
outsb
jp
mov
mov
add
inc
xchg
movsb
sub
lods
jmp
push
hlt
push
ds
out
add
inc
in
shlb
lock
fsubrp
test
call
ds
adc
xor
je
adc
adc
cmp
lret
sarl
popf
bound
cmpsl
mov
lods
clc
jne
cwtl
or
movsb
fdivs
lahf
pop
pushf
add
adc
adc
iret
lret
mov
lret
pushf
pop
in
mov
cli
loopne
arpl
dec
je
mov
and
mov
pop
pop
adc
sub
push
sub
dec
push
leave
jg
outsb
cmp
insb
mov
fwait
xchg
clc
jle
or
mov
pop
xchg
sbbl
outsl
scas
push
mov
jl
stc
ret
pushf
testl
in
sub
lret
cs
push
lds
shlb
mov
mov
mov
pop
adc
in
testl
sub
pop
movsb
fsubs
lea
xor
xor
cmp
xor
cmp
cmc
dec
fsubs
outsb
lock
mov
inc
jne
hlt
adc
push
ret
cmp
push
repz
pusha
mov
cmp
mov
pop
fcomi
cmpl
and
das
inc
fs
lods
shlb
cmp
fbstp
pop
test
into
xlat
jp
orps
loope
popf
cwtl
lret
push
sbb
fists
or
lret
inc
notl
inc
push
in
mov
test
xor
aas
fdivrs
push
icebp
mov
lea
inc
mov
xchg
cmp
popf
popa
lods
xchg
or
inc
push
mov
mov
push
mov
fistl
clc
mov
jno
imul
mov
cmp
cwtl
pop
push
jb
push
pop
in
stos
mov
jns
imul
shl
int3
or
cmc
lock
sub
mov
push
cmp
sub
test
pop
jg
inc
lods
and
mov
sub
mov
fs
sbb
shrb
aad
xlat
adc
or
mov
cmpsl
cmp
movsb
mov
inc
push
xor
pusha
xorl
enter
ficoms
popa
mov
push
sbb
push
sbb
iret
adc
pop
dec
dec
icebp
aas
sub
fimull
popf
inc
xchg
xchg
aad
jae
pop
es
ljmp
out
add
push
inc
mov
icebp
xchg
loopne
jle
lcall
loopne
add
cmp
mov
cmp
sub
inc
stos
push
mov
iret
movl
divb
andb
xchg
jbe
in
xchg
sbb
rcr
fdivrs
dec
cmp
hlt
lret
jp
jmp
popf
lahf
mov
pop
xor
loopne
loopne
testl
loop
fidivs
dec
into
sub
roll
lds
xchg
mov
or
xchg
loopne
fildll
movsb
mov
pop
std
xchg
xlat
cs
cmp
in
inc
xchg
mov
and
adc
imul
popa
cmpb
sarb
sahf
inc
mov
mov
data16
pop
sti
addr16
std
inc
mov
or
movsb
and
mov
pop
testb
xchg
lret
mov
fwait
lcall
leave
xchg
pushf
leave
movsl
mov
xchg
sbb
lcall
sbb
cmpsb
and
into
ds
enter
pop
push
inc
xchg
dec
and
mov
inc
into
addr16
mov
cmc
decl
gs
mov
mov
push
stc
add
cmp
push
sbb
mov
dec
xor
rcl
test
sbb
mov
pop
cmp
cwtl
out
lock
stos
addr16
ja
cs
int
dec
mov
cmpsl
and
lret
es
rol
jmp
pushf
sbb
fs
mov
xchg
int
mov
scas
xorb
or
dec
repz
icebp
adc
lock
xor
pop
add
int3
pop
or
lds
xlat
fadd
sub
pop
xor
sbb
and
mov
sub
mov
pop
int3
leave
es
out
lock
cltd
mov
or
cli
ret
pop
or
push
mov
cmp
adc
into
mov
sbbb
add
or
icebp
inc
xchg
mov
sbb
jmp
lret
mov
aas
pop
das
sar
add
je
jecxz
gs
aam
jno
popf
jne
ss
daa
jno
in
push
fwait
outsl
mov
add
push
jb
jno
in
push
pushf
icebp
scas
cld
test
dec
ds
pop
pusha
inc
stc
popf
sbb
xchg
rcrl
movb
shlb
sarb
ret
mov
mov
mov
icebp
mov
in
cmp
dec
int3
jne
push
cli
insb
std
push
jae
xlat
dec
mov
aas
add
pop
adc
ret
mov
subb
loope
dec
and
and
lcall
lea
cli
xchg
xchg
rolb
or
stos
pop
push
add
fs
adc
push
or
jbe
repz
cmp
lcall
cmp
idiv
in
sbb
push
jl
mov
push
loop
rorb
cs
out
or
lods
movsb
sbb
das
push
lea
cmc
inc
in
push
jae
popa
sub
and
lods
adc
jbe
xor
push
xorb
push
imul
lods
cmp
mov
adcb
or
push
mov
bound
sbb
or
jb
sti
movsb
fstpt
cld
fwait
mov
jge
mov
cwtl
loope
or
sub
add
push
fadds
jbe
or
fisubl
fists
aas
xchg
pop
xor
jecxz
jmp
loope
push
inc
jae
je
sti
cwtl
and
int3
jle
sub
adc
push
hlt
push
jbe
dec
ljmp
sub
das
pusha
inc
stos
cmp
pop
scas
inc
mov
sbb
sub
pop
in
push
sbb
leave
fnstenv
sub
mov
pop
negb
je
int3
test
lret
or
jno
fidivrl
sub
or
push
cwtl
loop
or
sub
jnp
mov
scas
mov
mov
aaa
sbb
lahf
cwtl
add
js
lea
xchg
xor
testl
test
loop
push
jecxz
out
jae
mov
decb
test
push
inc
shlb
lock
es
xorb
or
popa
mov
div
lds
cld
sub
cmp
dec
sti
outsl
mov
jne
jns
ja
imul
inc
lret
sarl
cs
inc
js
mov
or
lret
adc
mov
loop
and
sti
pop
dec
rolb
jg
mov
fadd
sahf
aaa
sbb
dec
mov
cltd
xor
mov
push
xor
aad
loope
push
sarb
js
loopne
stos
or
std
rcrl
cmp
ljmp
xchg
sahf
mov
adc
icebp
imul
ss
jb
and
mov
out
sbb
test
lds
cmp
jb
fistps
out
adc
mov
adc
arpl
aad
mov
or
xchg
pop
test
pop
imull
icebp
in
inc
jne
movsb
notb
inc
jmp
and
inc
or
out
mov
mov
mov
lods
popa
rcr
pop
fs
leave
jae
lock
push
inc
inc
or
or
int
test
push
pop
aam
push
or
mov
xorl
xchg
sbb
loope
cmp
push
mov
sbb
shl
inc
jno
scas
andl
orl
mov
jno
push
dec
sbb
pusha
sub
push
mull
sub
dec
negb
xor
lods
les
mov
cmpsl
inc
popl
out
mov
mov
jp
xor
leave
movsb
pop
inc
aaa
cmc
repnz
popf
inc
std
dec
mov
out
mov
mov
add
repz
std
or
push
sbb
push
sti
mov
rorb
inc
jno
jmp
push
adc
cmp
cmp
out
sbb
dec
lahf
jnp
sti
icebp
adc
inc
clc
xchg
xchg
xor
scas
adc
pop
mov
call
jge
ss
mov
sar
int
push
jl
testb
js
pop
sbb
loopne
and
test
test
xor
iret
jmp
fwait
rorl
ret
mov
sub
cmp
mov
mov
mov
mov
lds
sub
push
jae
lahf
lods
mov
cmp
push
jecxz
mov
sbb
push
mov
mov
adc
mov
in
jp
fninit
sub
ljmp
add
mov
sbb
xchg
jb
ljmp
data16
dec
test
and
and
pop
testl
xorb
mov
das
popf
call
dec
ja
dec
pop
jp
push
and
push
frndint
mov
pop
out
inc
ja
test
pop
stos
cmp
push
xor
or
lret
cmpsb
lret
mov
push
mov
xor
add
lods
xor
leave
xor
sub
push
call
and
mov
cltd
lret
js
cli
mov
dec
jae
fimull
sub
pusha
and
adc
clc
mov
push
dec
clc
add
ret
shr
mov
loope
mov
arpl
sub
cmp
hlt
cltd
xor
mov
in
mov
inc
leave
das
shld
jl
mov
mov
cmp
out
dec
mov
sub
xlat
std
mov
and
rcll
jnp
cltd
dec
aam
shrl
sbb
call
inc
nop
inc
imull
or
sub
xchg
jae
jno
test
arpl
outsb
mov
popf
lea
mov
aaa
test
mov
in
inc
popf
jg
xchg
cs
repnz
pop
mov
inc
push
in
int3
mov
int3
inc
js
mov
test
popf
push
mov
push
dec
popf
xor
leave
xor
and
mov
adc
inc
pop
or
and
add
xchg
test
inc
sbb
mov
sub
and
push
in
inc
mov
lahf
jecxz
outsb
stos
xor
sub
outsb
loopw
pop
cwtl
mov
stos
mov
ljmp
fmuls
out
mov
push
adc
and
icebp
sbb
sti
cmp
jo
push
cmp
movsb
pop
mov
sub
lret
pop
inc
cmp
jg
fisubs
sbb
cwtl
adc
mov
mov
fldcw
add
mov
xchg
sub
dec
or
inc
add
loop
xlat
cmpsb
call
stc
shl
ljmp
lret
mov
jmp
lsl
mov
mov
dec
scas
xchg
loop
fadds
xor
cmp
aam
dec
jnp
sub
lock
mov
notb
adc
add
ljmp
ja
in
cwtl
cmp
js
loopne
jnp
ds
cwtl
fstl
dec
lock
outsb
sub
dec
icebp
push
js
add
shr
jae
mov
adcb
ss
bnd
in
popf
sub
xchg
jo
push
pop
js
int3
sahf
xchg
push
in
fimuls
fcoms
cmc
stos
xchg
xlat
sbb
es
inc
lods
and
fucomp
enter
subl
jecxz
and
pop
pop
lcall
or
mov
fs
or
sbb
call
lahf
mov
mov
adc
jbe
lret
icebp
mov
xchg
icebp
xchg
out
fdivrl
cwtl
ds
xor
jmp
push
out
cltd
pop
imul
fsubs
ret
or
pop
add
sub
xchg
jmp
push
pop
adc
lcall
or
xor
sub
enterw
jno
je
mov
jno
jmp
sarb
icebp
cmp
icebp
fwait
andb
cmp
dec
out
inc
pop
push
inc
loop
mov
je
movsb
leave
xchg
mov
popf
test
loopne
sbb
insb
mov
mov
or
jne
and
jp
lock
sbb
icebp
ljmp
lods
imulb
inc
jp
shll
push
add
and
fisubrl
adc
xchg
jmp
lods
jmp
bound
adc
or
jae
xor
ds
sub
btr
push
mov
jnp
dec
mov
test
fdivr
pop
sbb
push
ret
in
enter
test
inc
sahf
sub
fimuls
fwait
decl
aas
jmp
popl
int3
aad
pusha
pop
das
jg
shr
in
adc
and
mov
hlt
pop
cmp
scas
xor
test
int3
cmpsb
inc
mov
jecxz
or
out
or
push
dec
xchg
xchg
sahf
aam
stos
pop
in
out
push
int3
add
jmp
push
fwait
adc
sub
jb
mov
hlt
je
lock
adcb
mov
cwtl
dec
ss
test
out
int
repnz
mov
cmp
test
mov
gs
jno
loop
adc
push
push
loop
pop
or
lock
ds
push
mov
mov
ljmp
inc
andb
nop
pop
lea
scas
nop
lret
jg
repnz
pop
lcall
add
jp
cmp
adc
xor
xchg
or
xchg
mov
ljmp
inc
les
jecxz
jno
repz
faddl
imul
mov
xorl
or
xchg
movsb
movsb
adc
shll
mov
pop
repnz
test
cwtl
mov
sti
push
or
aam
pop
mov
lods
mov
xchg
inc
test
cmpsl
addr16
mov
jle
pop
dec
sub
out
push
lock
and
lcall
lods
push
pop
loop
mov
repnz
fwait
sti
cmp
lret
mov
mov
or
scas
adc
push
test
xor
pusha
fcmovb
es
fmul
clc
fisubrl
cli
xchg
sub
sub
addb
xchg
mov
test
test
push
pusha
in
cmp
mov
push
sbb
jne
cmp
repz
sub
stc
add
mov
idivb
add
mov
fildl
nop
out
add
sub
das
popa
popa
cltd
lock
jg
xor
negb
or
inc
xchg
cmpsb
pop
lods
inc
loop
jg
mov
fcmovnbe
leave
insb
dec
dec
pop
push
dec
cwtl
xchg
lret
lret
sbb
fldl
outsb
sbb
mov
mov
mov
out
call
sarb
mov
dec
jnp
int
lret
jo
clc
fistpll
jecxz
push
aam
iret
shlw
repnz
lret
cmp
pop
dec
mov
insb
jl
mov
mov
sub
sbb
cmpsl
sub
push
mov
xchg
js
mov
imul
dec
pop
fmulp
jmp
dec
push
out
loope
movsl
inc
call
and
dec
and
popf
lock
fdivs
pop
inc
add
mov
push
enter
xor
sub
dec
ds
inc
push
xchg
xchg
imul
add
mov
test
sbb
xorb
push
cmc
adc
push
cmpl
lret
dec
xor
fiadds
lcall
pop
cmp
and
adcl
sbb
jbe
inc
rcl
test
test
mov
mov
dec
out
test
mov
cmp
daa
repz
push
rolb
nop
mov
jle
jmp
inc
jne
jae
adc
mov
mov
sbb
pop
adc
jne
ret
or
push
lcall
divl
les
pop
add
jge
jge
test
pushf
cwtl
cmp
mov
es
insb
push
test
imulb
std
adc
adc
lahf
sbb
mov
in
mov
daa
mov
inc
into
bound
out
call
lcall
or
ljmp
cmp
out
loop
cmp
or
aad
sbb
inc
js
pusha
test
jmp
in
cmp
sbb
mov
or
cs
cwtl
sbb
jle
inc
sbb
xor
movsb
cmp
push
jecxz
push
push
lds
mov
outsl
int
ret
dec
mov
shll
fstps
shlb
mov
or
jb
iret
adc
pop
std
sbb
test
cmp
nop
xor
sbb
in
shr
addr16
push
sarl
stos
cmp
dec
jp
and
push
or
jo
stc
mov
in
in
daa
dec
fmul
and
dec
jns
inc
push
cld
aas
sbb
add
fcom
cltd
xlat
jle
das
push
xchg
mov
cwtl
loop
jmp
arpl
cmp
inc
call
push
insb
into
inc
arpl
test
jge
js
mov
add
push
pushf
mov
ret
fidivl
pop
sub
fnstcw
cmp
inc
enter
stc
cwtl
jle
dec
aad
xchg
pop
push
leave
ja
call
lods
lods
inc
lock
mov
jnp
inc
mov
bndldx
aad
daa
inc
jmp
popa
gs
cld
and
loopne
adc
jge
scas
or
test
outsl
fistps
fsubs
sub
or
inc
inc
xor
in
in
jo
mov
fwait
stc
add
mov
pop
into
jnp
imul
imul
or
in
sbb
mov
rolb
mov
fwait
repnz
adc
mov
lcall
rorb
lock
cmp
mov
addr16
lods
cmp
fs
loope
mov
scas
das
rolb
sub
dec
rcll
loop
adc
mov
fcoml
inc
outsb
pop
push
fwait
push
les
mulb
push
push
dec
mov
xchg
sbb
mov
add
lret
push
xlat
jns
or
filds
inc
ret
rcrl
fmulp
xchg
cmp
stos
leave
and
imul
cmp
mov
leave
push
jns
add
lods
int3
neg
cld
cwtl
mov
shl
pop
repz
lret
or
mov
xchg
inc
imul
xchg
sub
popf
repz
ss
mov
push
add
dec
popl
popw
add
ret
imul
inc
fadds
add
xor
jp,pt
icebp
pop
outsl
or
xchg
mov
out
dec
or
popf
and
cli
pop
mov
pop
aaa
cmp
cmp
into
rclb
aad
iret
dec
mov
or
sbb
ficoms
jbe
jge
popf
shrl
or
xlat
cmp
sahf
mov
sub
das
mov
ljmp
sti
leave
mov
lahf
xor
ja
pop
pop
jecxz
aam
mov
ret
movsl
push
or
movsl
std
dec
cmp
jl
loope
cmp
cld
mov
mov
dec
out
pop
dec
push
pop
shl
int
cmp
mov
repz
inc
sub
inc
jb
xor
jge
cmp
movsl
fiaddl
sub
lret
loope
cmp
inc
imul
stc
cmp
xor
cs
imul
push
fcompl
in
mov
bound
pop
fwait
js
mov
cmpsb
fcomps
mov
cli
into
mov
aaa
pop
scas
jnp
adc
popa
mov
xor
and
ja
adc
push
subw
jae
dec
dec
jns
push
xor
call
cmp
dec
aam
inc
pop
dec
xchg
cltd
inc
aam
sub
fucom
pop
jmp
mov
sub
inc
es
mov
pop
rolb
lea
mov
jne
inc
xor
xor
xchg
ja
ss
ss
je
and
movsl
lret
in
inc
push
cmc
leave
add
loope
inc
inc
adc
fidivrs
sub
aad
xor
push
add
inc
fdivrl
gs
jmp
jne
icebp
repz
or
ret
add
mov
cs
cmc
inc
push
into
xchg
pop
jle
pop
lds
out
xchg
repz
imul
add
shl
pmulhuw
dec
mov
xor
fildl
adc
lahf
push
or
fnstcw
insb
push
jmp
movsl
pop
adc
cmpsl
jmp
pop
jbe
into
and
mov
and
aam
xchg
push
std
pop
push
les
outsb
jns
mov
sahf
mov
push
aaa
sar
xchg
add
rorl
popf
in
ret
fsubp
pop
sbb
mov
in
add
pop
mov
pop
pop
pop
fnstcw
aaa
pop
dec
add
and
push
fcompl
lret
aaa
xchg
mov
inc
dec
inc
cmp
pop
js
push
xor
aad
mov
das
mov
js
lock
jb
xchg
pop
jl
dec
andl
das
pop
ja
lahf
and
jle
cmp
add
jnp
jp
adc
mov
int3
out
xor
mov
aam
mov
cmp
add
mov
out
cmpsw
mov
sbb
int3
andl
and
sub
jne
aas
push
rorb
jae
xor
mov
notb
pop
test
addr16
in
loope
sar
stos
nop
out
lods
xchg
and
xor
aam
fnstsw
lret
ds
xchg
stos
mov
ret
xchg
daa
pop
sub
add
mov
divl
mov
test
insl
mov
pop
shrl
out
lods
into
fidivrl
cmpsl
or
inc
cwtl
mov
push
in
mov
shlb
xor
shll
daa
shll
xor
push
addr16
nop
xorl
into
int3
pusha
mov
adc
iret
fs
mov
jae
sub
mov
icebp
lret
pop
movsb
ret
jns
xor
insl
fs
aaa
es
push
in
repz
push
pop
sbb
mov
xor
fidivl
shlb
mov
sarl
stos
pop
and
ds
and
inc
xchg
popa
cmp
jmp
sub
jge
jbe
and
jle
cmpsl
dec
rcll
int3
cmp
je
jmp
jmp
ss
pop
cltd
sbb
jo
fbstp
push
inc
adc
in
add
push
insl
fwait
imul
cmp
cmpsl
pop
sub
adc
pop
vpshrdvq
std
cwtl
test
jb
sub
xchg
call
les
cltd
add
call
popf
aam
lret
adc
sbb
es
imul
dec
out
add
cmc
and
mov
sbb
cli
inc
add
ret
sarb
jbe
mov
fcmove
and
jb
enter
xchg
ss
repz
stc
stc
in
lods
mov
cmp
lock
loope
int3
ss
subl
xor
imul
sti
testl
jge
lea
fcompl
inc
jb
add
jecxz
scas
repnz
xor
cwtl
adc
xor
arpl
adc
cltd
cmp
pop
jno
fwait
fwait
les
or
scas
stc
dec
mov
and
dec
shl
cld
stos
mov
dec
dec
bound
mov
mov
xor
jp
pusha
add
fstps
xchg
jmp
jecxz
push
xchg
mov
xchg
rorl
adc
fcom
data16
ss
mov
out
sub
int
loop
and
ret
rorb
fdivrl
and
cwtl
xor
jge
fisttpll
ficoml
shlb
not
jo
mov
inc
mov
cmovae
and
cmp
cmpsl
or
lret
xor
and
lods
lcall
orl
dec
testl
dec
popa
into
rorb
ja
jg
lods
dec
jns
pusha
mov
insb
cmpsb
fcoms
inc
push
sti
movsl
enter
clc
cwtl
push
or
jo
xor
lret
add
jno
mov
outsb
movsl
les
enter
inc
pop
adc
cmp
mov
popl
pop
ja
push
xor
push
lret
pusha
iret
lahf
out
jbe
jmp
testb
rolb
mov
aad
inc
mov
xor
leave
xchg
inc
pop
xor
or
cmp
adc
nop
push
mov
cmpsl
inc
inc
mov
sbb
mov
repnz
pop
shl
xor
mov
sub
ds
fs
add
push
test
add
mov
test
das
sti
push
lea
push
xor
test
outsl
dec
mov
dec
mov
inc
mov
rcrl
js
enter
scas
xlat
aas
cmc
ficoml
xchg
bnd
leave
fwait
or
sbb
dec
stc
push
mov
imul
and
iret
lds
icebp
mov
sbb
jns
mov
push
dec
and
dec
lock
insb
nop
and
iret
movsl
sahf
mov
js
fcomps
mov
mov
jg
fsubrp
cs
push
cmp
mov
scas
sahf
mov
push
in
cmp
mov
mov
mov
aad
or
outsl
ss
and
push
out
sti
cmp
mov
gs
cmp
xor
icebp
iret
aaa
sbb
arpl
jnp
lea
rcrl
push
lods
rcl
jb
sahf
xor
xor
mov
inc
push
dec
sbb
or
fdivrs
cmp
loope
mov
pop
mov
pop
outsl
fwait
enter
lods
mov
push
or
push
xchg
iret
cmpsl
sbb
sti
stos
shrb
sahf
mov
stos
or
mov
inc
adc
movsb
movb
adc
jmp
cmp
out
add
inc
stc
inc
mov
push
insb
fcmovb
out
cmc
mov
call
and
bound
sub
xchg
fdivrs
and
push
add
xchg
mov
pop
leave
in
shrb
scas
mov
mov
dec
fcoms
jge
int3
xchg
adc
out
jne
outsb
inc
mov
dec
sub
xor
call
sti
adc
xor
dec
mov
xchg
lcall
mov
xchg
mov
cmp
loopne
mov
call
xcrypt-ofb
cmpsl
in
lods
shlb
push
int3
test
mov
iret
not
sbb
fwait
pusha
sti
shll
sarb
test
jp
dec
ss
call
push
mov
flds
mov
cmp
mov
and
push
push
pop
push
inc
adc
in
dec
lret
mov
sar
adc
lock
sbb
jge
repz
fidivs
cmp
in
xor
push
add
and
loopne
xchg
dec
insl
pop
in
add
cmp
cmp
pop
xchg
lds
ss
inc
and
stc
insb
rclb
orl
push
je
mov
dec
mov
dec
sar
jge
mov
ffreep
dec
nop
sub
push
cltd
outsl
xchg
and
xlat
jb
test
cmp
dec
cli
jmp
fldcw
push
sbb
loope
mov
and
cmpsb
xor
mov
ljmp
xor
dec
frstor
xor
bound
add
sbb
cmp
pop
out
fmulp
ret
mov
mov
sahf
es
lods
mov
decl
jg
mov
adc
outsb
mov
cltd
rolb
add
pop
test
sbb
cltd
insl
push
sbb
in
cmp
in
insb
cmpsb
or
dec
divb
out
push
sub
add
aaa
add
inc
fidivl
outsb
pushf
or
dec
jnp
sub
dec
mov
push
add
sub
in
sbb
cmp
movsb
shll
nop
mov
insl
testb
ret
adc
fmuls
call
sbb
push
inc
jl
or
jnp
inc
imul
ror
dec
int
rolb
les
xchg
fcmovnu
cli
or
imull
jge
fcoms
cmp
xchg
fbstp
lods
mov
aaa
mov
hlt
lods
sarb
cmc
out
xchg
xor
push
jb
mov
xchg
iret
arpl
push
mov
cltd
mov
mov
aaa
incl
pop
pop
jmp
loope
and
notl
mov
scas
adc
les
leave
ret
lcall
mov
jecxz
add
stos
xor
fildl
mov
repz
loope
cwtl
xor
jns
ljmp
mov
es
cmp
mov
pop
pop
sti
ss
adc
jl
frstor
daa
or
leave
out
dec
andl
pusha
les
fldenv
mov
in
mov
frstor
dec
pop
or
hlt
adc
icebp
push
mov
mov
jl
jb
ss
dec
lea
in
popa
mov
lret
or
add
adcl
adc
imul
dec
push
enter
stos
ljmp
inc
xor
mov
daa
jae
xor
jnp
push
add
das
outsb
jmp
or
inc
pop
in
jge,pt
je
lea
dec
dec
inc
xor
jecxz
test
dec
jmp
int
sahf
div
sahf
sbb
mov
sbb
insb
insl
clc
in
aad
dec
ja
pop
gs
cmc
dec
and
add
in
in
movsb
loope
jae
mov
mov
loope
stos
push
inc
stos
inc
std
ret
cmp
sarb
inc
fisubl
pusha
pusha
repnz
nop
xor
dec
lret
fs
incl
mov
xchg
mov
push
fsubs
icebp
pop
rcrb
sahf
scas
add
jecxz
fstpl
lret
iret
iret
and
rcr
popa
mov
mov
gs
xchg
jmp
pop
out
mov
mov
cld
jl
int3
mov
lods
arpl
jns
pop
sbb
arpl
loop
mov
xchg
fildll
mov
pop
ds
clc
add
cmp
cmpsl
je
push
imul
in
hlt
pop
adc
in
adc
fbstp
sar
cli
lds
hlt
pop
fisttpl
mov
cmp
cmp
out
lret
mov
aam
sarb
iret
push
int3
fnstenv
add
sbb
pop
imul
xor
ljmp
mov
shrb
xchg
rcr
movb
jg
mov
jmp
add
push
and
sar
mov
jne
jno
sti
xlat
ljmp
cld
std
sti
mov
xor
cmpsl
je
aad
jb
xchg
lods
inc
cli
xor
xchg
insl
test
mov
jge
push
mov
gs
js
inc
ret
add
mov
clc
jae
inc
cs
sub
and
outsl
mov
jbe
orb
bswap
movl
adc
je
mov
out
mov
rcrb
pop
rcll
or
lret
stos
clc
jnp
or
loopne
xchg
xchg
ds
mov
leave
mov
jnp
in
loop
in
push
ss
push
jp
daa
or
jmp
jnp
frstor
insb
sbb
mov
jae
xchg
sub
inc
notl
fists
or
push
iret
popa
fwait
jb
decb
repnz
xchg
in
lret
arpl
dec
push
sarb
sbb
addr16
push
jno
lds
dec
std
adc
ret
enter
sbb
adc
in
and
call
xchg
pop
scas
out
je
hlt
or
push
insl
je
out
testl
and
mov
ljmp
in
incb
addb
jns
xchg
push
pop
fimuls
in
mov
inc
jge
fsubrs
or
jle
sahf
mov
mov
or
mov
out
inc
fcmovne
inc
shll
loopne
jmp
xchg
clc
inc
adc
test
inc
jo
in
hlt
xorb
mov
xchg
insb
mov
sbb
add
dec
push
adc
int3
or
jae
cmc
xchg
sbb
sbb
cmpsl
pop
sti
push
imul
jo
dec
cs
mov
mov
in
jmp
mov
hlt
cwtl
xorb
jecxz
xchg
ds
ret
jns
daa
cld
mov
add
fdivrl
push
sub
int3
test
or
in
lock
je
jg
push
mov
push
lret
clc
ret
sti
mov
and
aaa
btl
pushf
cmp
xor
iret
outsl
xchg
into
gs
cmc
jge
pop
loopne
sub
js
jle
adc
push
sbb
fucom
sar
stos
push
and
ret
or
into
pop
test
popa
pushl
mov
test
push
mov
loop
sbb
jecxz
mov
popw
push
dec
cmc
mov
adc
into
dec
inc
fcmove
out
xchg
leave
or
rcrb
xor
mov
xchg
cli
rol
add
jae
dec
shlb
mov
ret
mov
loope
dec
test
add
movsl
xchg
je
mov
push
pop
push
test
nop
les
jbe
bound
push
icebp
inc
dec
and
pop
xchg
cmpsb
iret
push
add
mov
daa
dec
pop
dec
cli
mov
mov
mov
and
mov
mov
dec
dec
sub
xchg
jle
adc
pop
pop
dec
sarb
arpl
movsl
hlt
ljmp
xlat
stos
repz
popa
sbb
lret
or
push
add
fidivl
lock
lahf
xor
jbe
das
jmp
arpl
stos
outsl
daa
aaa
hlt
rcrl
rcrb
aas
cli
into
mov
cmpsb
mov
jns
mov
fmul
into
jo
popa
mov
aaa
add
xor
xchg
testl
and
adc
test
out
xor
push
dec
dec
lds
xchg
insl
inc
dec
xor
out
push
add
lret
pop
jle
add
inc
sahf
gs
rcl
outsl
adc
insb
sahf
xchg
add
adc
idivb
or
xchg
pop
es
dec
in
roll
insb
sbb
lcall
call
arpl
clc
repnz
mov
mov
scas
jecxz
jg
add
adc
cld
xchg
jg
jle
cmp
in
or
popf
mov
insb
mul
add
lret
leave
mov
jecxz
pusha
arpl
imul
adc
inc
mov
jge
mov
jge
mov
jl
addr16
adc
fnstsw
pop
xor
and
or
and
push
pop
outsl
adc
push
push
notb
daa
ficompl
test
in
xlat
push
in
pop
fldt
push
sti
and
int3
lods
lret
decb
out
mov
pusha
movsl
xor
xchg
inc
fwait
icebp
out
loopne
call
xor
dec
mov
ja
insl
cmpsl
pushf
loop
sarb
xchg
popf
and
popa
call
imul
stc
pop
and
ja
mov
out
lods
ficomps
lods
fiaddl
mov
mov
and
fistpl
hlt
mov
jg
mov
repz
mov
iret
add
dec
sarl
pop
call
pop
adc
rcl
xchg
int3
jae
cltd
orb
xchg
xor
scas
mov
push
push
cs
xor
xorl
pop
loop
sub
cwtl
cld
xchg
nop
mov
fmul
int
inc
pusha
lock
sbb
test
xlat
loop
rol
test
jnp
jae
std
ds
in
adc
leave
sub
xchg
int
inc
sub
jb
cmc
xor
in
enter
push
hlt
movsb
aad
insl
iret
out
lods
or
loop
push
movsl
ret
sbb
jae
xor
xchg
push
push
inc
cli
not
jnp
test
cli
inc
push
dec
out
cmp
mov
xor
fisubrs
daa
negb
sub
shrb
in
push
sub
add
jg
add
inc
mov
gs
xor
pop
push
into
push
dec
lods
movsb
push
add
xchg
push
pop
pop
dec
out
cmp
pop
add
sbb
jle
xlat
decl
jecxz
sbb
pop
xchg
in
jae
icebp
gs
imul
cmc
adc
lock
gs
test
cmp
nop
lcall
push
sbb
mov
xchg
pusha
pop
inc
mov
lret
imul
dec
cmpl
pop
cmp
lods
push
and
aad
ret
imull
rolb
cli
ficomps
mov
adc
ret
cmc
xor
xor
hlt
sbb
pop
jnp
in
xor
fnstcw
imul
dec
cmpb
inc
je
push
icebp
es
test
pushf
mov
dec
fsubp
insl
add
scas
es
in
pushf
mov
sub
adc
or
xor
jg
cwtl
cmpsl
adc
xor
aas
out
hlt
xchg
xchg
pop
or
insb
mov
and
add
andl
test
push
pop
mov
or
adc
lds
outsb
push
fcmovne
jbe
jne
adc
pop
loope
jno
and
cmp
sub
xchg
jbe
and
inc
jp
sbb
adc
daa
aaa
xchg
ja
pcmpeqd
sub
mov
fld
aas
sub
and
loop
adc
mov
xor
and
sub
jne
mull
movsl
fildl
xor
push
push
aad
cs
and
out
sbb
xchg
outsb
sbb
sahf
pop
pop
sbb
mov
int3
push
xchg
popf
xlat
lods
sub
or
fsubp
cs
push
mov
nop
xlat
je
std
ja
add
fdivrl
hlt
aad
adc
repz
xor
sub
pop
xchg
jns
mov
adc
lcall
out
pop
loop
xlat
lret
ficompl
cld
pop
test
mov
cwtl
inc
icebp
or
aad
adc
jne
or
hlt
loopne
cltd
pop
movsl
xor
loopne
ret
mov
inc
out
inc
and
repz
xor
pop
cwtl
iret
aaa
cmpsl
lret
jg
les
inc
adc
mov
dec
xchg
jns
and
dec
dec
lods
mov
movb
pusha
aad
mov
xor
inc
repz
in
push
inc
ljmp
pushf
iret
repz
dec
in
popa
xor
pushf
or
jl
sub
movsl
lods
sbb
pop
xlat
mov
fstpt
stc
sbb
and
outsl
dec
cmc
je
or
bound
or
push
stos
push
out
fimull
int
pop
push
scas
mov
rorb
xchg
gs
js
in
inc
dec
in
mov
mov
ja
sahf
clc
hlt
call
mov
dec
xchg
or
mov
data16
daa
xchg
lods
pop
arpl
fsubrs
lods
mov
add
aas
into
arpl
lahf
outsl
jmp
rcrl
out
inc
sbb
leave
mov
inc
loopne
loopne
das
fimuls
movsb
test
negb
sub
sbb
test
jae
cmp
les
jae
out
jbe
pusha
dec
cmp
or
lea
cltd
xchg
pop
roll
mov
mov
add
jae
mov
push
add
push
mov
mov
hlt
pop
push
fimuls
das
xor
xchg
sbb
dec
and
or
push
es
and
sbb
pop
cmc
movsl
adc
push
jmp
mov
ss
adc
movsl
stc
add
inc
or
pop
fisubrs
jmp
loop
into
rcr
sbb
adc
sahf
pop
push
stc
inc
ss
mov
dec
push
jmp
jne
mov
arpl
cwtl
rep
addr16
mov
repz
loope
mov
std
push
cmpsl
stc
mov
pushf
push
fsubrs
mov
and
scas
cli
sub
add
popa
je
fidivrs
roll
inc
xchg
fdivrs
enter
sub
and
stc
pop
aam
in
xorl
fwait
sub
xor
mov
or
inc
movsb
dec
add
mov
jb
add
stos
shll
mov
jns
inc
push
stos
sbb
repz
repz
nop
xor
ret
adc
pop
js
mov
push
mov
mov
sti
sub
inc
push
mov
in
adc
dec
scas
stos
jne
xor
std
push
pop
sahf
cmpsb
pop
cmp
ficoms
in
push
out
pusha
test
shr
cmpsl
shrl
sbb
arpl
inc
pop
lods
loop
fistpl
push
dec
js
cmp
lahf
mov
xor
lahf
test
add
sub
mov
cli
mov
jmp
fwait
xor
lods
mov
je
inc
xchg
sbb
push
in
dec
jle
sbb
outsb
push
mov
mov
and
lret
mov
sub
pop
inc
inc
clc
cmp
xchg
cmpsb
mov
add
jbe
psrlw
jns
push
cmp
ficomps
mov
sahf
js
inc
xchg
idivl
inc
js
dec
and
sub
adc
jo
clc
mov
jle
lds
mov
dec
jns
push
jo
out
dec
jmp
cltd
test
inc
and
cmp
lock
inc
xchg
push
enter
jns
jo
xor
jae
icebp
outsl
rcll
dec
adc
shll
xor
movsb
shll
push
xchg
pop
jmp
dec
sub
je
testl
ljmp
leave
adc
xchg
jbe
push
mov
idivl
pop
filds
cmp
call
mov
sahf
lds
repz
pop
dec
push
in
xchg
or
cli
into
add
adc
jecxz
inc
push
call
mov
jle
sub
int3
mul
or
push
cmp
aaa
and
sub
test
xor
cmpsb
pop
jmp
sbb
sbb
inc
cmc
add
pop
xchg
add
xor
dec
xchg
in
adc
cli
fcmovb
and
subl
add
add
outsl
sbb
ret
mov
shl
mov
jno
dec
out
pop
push
or
fldl
xor
stos
arpl
push
cmpsl
sbb
out
leave
sbb
push
pop
insb
shrl
loope
stos
adc
cmp
sbb
scas
dec
adc
imul
fnstcw
xor
inc
pop
dec
xor
dec
push
mov
scas
inc
mov
dec
loopne
mov
cwtl
rcl
addr16
insb
repz
aam
cmc
and
jmp
mov
cmp
mov
push
fistpl
jge,pt
add
popf
imulb
adc
push
jp
mov
fmuls
pop
cmp
xor
xor
dec
pop
loop
jnp
jmp
inc
adc
add
and
inc
addb
mov
dec
icebp
cmp
mov
jge
loop
mov
push
add
dec
fistpll
inc
jo
nop
push
lahf
insl
dec
movsb
aaa
fcmovb
mov
and
sbb
cwtl
cmpsb
stos
mov
and
outsl
sub
call
pop
pop
sbb
addr16
mov
jb
movsl
push
loopne
clts
cli
outsl
insb
add
in
add
fs
inc
imul
js
jbe
pop
cwtl
shr
sbb
popf
mov
lock
les
fnstcw
or
fiadds
mov
dec
in
or
ret
out
adc
add
mov
push
out
pushf
inc
ror
mov
fsubrl
lea
ret
sbb
stc
inc
addr16
lret
dec
outsb
aam
push
daa
cmpsb
inc
cmp
cmp
notb
push
push
dec
inc
cmc
dec
xchg
mov
jo
jbe
out
aas
stc
pop
pop
push
negb
data16
dec
jns
repnz
xchg
mov
mov
pop
outsb
out
jb
inc
test
inc
xchg
mov
jg
ja
dec
adc
das
lret
sub
push
pop
adc
sti
sub
add
iret
ror
inc
cmp
iret
orl
mov
adc
mov
repz
gs
xor
or
scas
inc
sub
out
lods
ja
in
lea
jecxz
or
popf
dec
xor
testb
inc
xlat
call
lret
loope
outsl
mov
adc
imul
mov
push
and
inc
dec
into
push
jns
insl
xor
insl
or
mov
orl
ljmp
arpl
pop
andb
lahf
and
out
cmovns
push
sbb
loop
sbb
jae
aaa
stc
jecxz
fstpl
shl
inc
sti
test
fildl
xorl
jg
out
mov
mov
adc
repz
jnp
f2xm1
jno
mov
sbb
xor
and
pop
mov
imul
mov
jnp
jae
pop
sbb
pop
mov
and
out
xchg
cli
aas
cmp
lock
movsl
pusha
sub
dec
daa
sbb
stos
sti
aam
fwait
pusha
inc
addr16
cld
mov
or
out
popa
scas
stos
sbb
mov
push
insl
stos
xchg
jmp
fsubp
ja
bound
push
ret
xchg
int
pop
adc
xor
arpl
mov
stos
test
sbb
imul
sbb
dec
cmc
outsb
sahf
mov
xchg
cmpsl
je
jns
int3
out
or
loope
xor
out
push
test
adc
mov
and
jns
fcmovu
repnz
cmp
adc
stos
mov
inc
xor
pop
sbb
cltd
lcall
stc
outsb
cmp
mov
jae
lcall
sti
sub
pusha
filds
js
cld
or
jb
xor
pop
mov
or
jae
je
outsl
mov
mov
add
push
sbb
gs
lret
arpl
arpl
push
shl
jecxz
ret
inc
js
mov
sub
insb
cmp
test
adc
lahf
xchg
sar
push
pop
outsl
pop
cltd
cmp
add
jbe
jbe
or
loop
call
jno
xchg
mov
xor
jmp
cmpsl
fs
xor
out
leave
mov
movsb
push
into
ljmp
gs
pop
nop
in
cltd
push
cld
mov
pushw
lea
and
lcall
mov
out
adc
add
jl
xchg
jle
or
cs
add
mov
gs
hlt
adc
or
pop
push
pop
add
loop
mov
jnp
push
push
jns
and
dec
fdivr
mov
add
inc
popa
lret
xchg
shlb
cs
sub
fs
pop
and
iret
aam
inc
sbb
sub
sbb
lock
push
xchg
sub
mov
mov
xor
mov
in
rol
push
mov
jle
stos
test
stc
insb
in
scas
xchg
cs
sarb
inc
mov
sbb
popa
cmp
adc
stos
push
and
movsl
pop
je
aad
or
jae
lret
push
loope
pusha
mov
push
mov
out
mov
iret
xchg
xchg
mov
ds
shrd
movsl
leave
dec
aaa
pop
iret
mov
jo
xchg
imul
cmp
shrl
nop
lods
jge
adc
inc
adc
pop
sti
xchg
inc
cmpsl
jno
out
dec
add
jmp
or
and
fdivrl
in
imul
cmp
test
int
lahf
and
ljmp
gs
aaa
in
int3
fwait
lahf
mov
ja
lds
dec
adc
inc
adc
fwait
inc
mov
aaa
popf
cmp
in
push
xchg
sti
mov
pop
pop
shll
lahf
cli
jecxz
insb
pop
dec
loope
gs
gs
mov
stos
xor
dec
add
out
push
add
xchg
jle
packssdw
js
ja
clc
inc
repz
jge
pop
call
punpcklbw
ljmp
scas
daa
xor
loop
xchg
and
dec
inc
iret
or
jle
shll
in
jmp
fsubp
ds
fildll
loopne
pop
jbe
pop
rcll
stos
lret
cmp
in
xor
and
incl
push
adc
and
sbb
or
mov
scas
xor
sahf
shrl
rorl
sbb
cmpsl
push
mov
clc
fmuls
push
jg
push
cmp
push
dec
xorb
test
cld
movsb
jmp
and
xchg
lcall
sub
ror
jbe
arpl
leave
inc
pop
mov
mov
cmpsl
sub
dec
rcll
scas
test
insl
or
and
xor
jbe
mov
xchg
and
inc
loope
mov
sbb
sub
enter
mov
hlt
loope
xchg
pop
pop
mov
addr16
out
sarb
xchg
loope
xchg
jb
sub
pop
sbbb
jmp
dec
adc
xlat
cmpsl
adc
in
or
cmp
out
imul
push
dec
pop
ret
jl
dec
aad
mov
add
dec
xor
imul
cmp
add
inc
repnz
pushl
xor
out
cmc
and
cld
aad
pop
ljmp
adc
cmpsb
dec
je
sub
pop
mov
mov
pop
cmpsl
in
ss
mov
sub
mov
inc
mov
out
xor
jl
jp
sti
sbb
imul
sub
push
orl
dec
shl
ret
sarb
je
xor
mov
and
push
fstl
cld
sbb
fcmovbe
int
pop
enter
lahf
cs
and
scas
ret
notb
insl
fcomp
pop
ret
aad
push
cmp
hlt
stos
stc
les
int3
scas
adc
adc
rolb
adc
cmpl
daa
add
sarb
mov
xchg
push
shlb
and
jle
repnz
xor
jge
add
aad
mov
dec
sub
jnp
enter
mov
incl
cld
jecxz
cmpsl
xchg
pop
movsl
and
ret
sbb
mov
stc
mov
xor
mov
adc
jp
scas
aaa
adc
fimull
push
jl
add
arpl
aad
iret
nop
xlat
cmpsb
loop
sbb
xchg
lock
sbbb
int3
and
mov
test
pop
pop
fadds
sub
xlat
and
repz
in
enter
seto
mov
pop
mov
in
pop
mov
les
inc
sti
sub
pop
push
adc
cmpsb
nop
cmp
push
popa
sbb
repnz
mov
jns
push
insl
mov
fadds
ret
lret
cmpsl
icebp
lea
daa
iret
adc
cs
or
add
jnp
insl
fwait
inc
or
cmc
or
pop
js
rcr
shlb
outsl
mov
add
hlt
cmc
pop
add
scas
sbb
outsb
pushf
jbe
ljmp
in
dec
sub
ret
lret
cmpl
.byte
lock
or
add
or
push
lret
and
or
cs
push
lret
pop
lret
jb
or
mov
or
cwtl
lret
test
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
sbb
add
incl
add
add
add
add
incl
add
add
xor
add
add
xor
incl
add
add
add
add
incl
add
add
cmp
add
add
add
incl
add
add
cmp
add
incl
add
add
ds
add
add
add
lcall
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
ljmp
dec
dec
add
dec
dec
add
ljmp
dec
add
dec
add
incl
add
add
pop
dec
add
add
add
push
dec
add
push
dec
add
incl
add
add
add
call
pop
dec
add
jmp
add
dec
add
pushl
dec
add
imul
incl
add
add
imul
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
insl
dec
add
add
add
incl
add
add
add
add
incl
add
add
jo
add
add
add
decl
je
add
je
add
add
add
call
dec
add
dec
add
call
jbe
add
jbe
add
in
add
add
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
jp
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jge
add
add
add
incl
add
add
jle
add
add
add
incl
add
add
orl
incl
add
add
add
add
incl
add
add
dec
add
add
add
push
orl
dec
add
pushl
dec
add
test
sti
test
test
decl
test
test
pushl
test
test
incl
add
dec
add
ljmp
dec
add
dec
add
jge
dec
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
lea
add
add
jmp
xlat
dec
add
dec
add
call
xlat
dec
add
xlat
dec
add
decl
dec
add
add
add
add
add
inc
lret
add
or
lock
or
add
or
push
lret
and
or
cs
push
lret
pop
lret
jb
or
mov
or
cwtl
lret
test
or
mov
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
xor
xchg
sar
sub
push
icebp
pusha
insb
jmp
mov
imul
push
fidivrl
add
popf
nop
int3
dec
add
mov
ret
bound
orb
mov
add
aad
cwtl
jbe
daa
lret
mov
mov
xor
icebp
mov
mov
xchg
push
mov
arpl
icebp
push
jae
push
sub
in
push
stc
sbb
cmp
cwtl
push
std
and
out
or
and
sub
xchg
adc
aaa
jl
pop
stc
pop
out
sbb
pop
mov
or
mov
leave
sbb
or
fistpll
fcomps
fwait
lea
rcrb
or
out
and
repnz
movsb
cmp
imul
aam
movsl
fisttpl
andb
in
imul
pop
ja
sbb
push
ffree
or
imul
movsb
in
cmp
nop
aaa
xor
sub
test
cmpsb
mov
sub
cmp
in
enter
fdivs
inc
mov
push
xchg
mov
pop
test
andb
testb
or
cli
aam
xchg
pop
sub
addr16
mov
shl
rcrb
iret
push
inc
ds
inc
lahf
dec
es
fwait
push
scas
pop
push
fs
popa
test
out
xchg
cs
pop
jnp
aaa
mov
scas
sub
test
loopne
add
xor
jb
mov
ljmp
pop
sbb
loopne
loop
incl
cmpsl
jge
icebp
dec
jle
cmp
push
js
mov
add
dec
movsl
jle
cld
hlt
int3
sahf
xorl
mov
hlt
fists
addr16
mov
jp
shr
dec
out
in
cmp
outsl
or
stos
mov
push
in
jmp
repnz
or
mov
push
sbb
sbb
mov
mov
cmp
cld
jl
repnz
hlt
mov
ds
roll
push
fisttpll
mov
mov
sub
adc
cmc
insl
sub
or
and
inc
loopne
hlt
xchg
or
gs
or
or
and
addb
sbb
or
aad
mov
push
in
movsb
and
xchg
daa
push
jmp
cltd
or
jl
test
icebp
incl
jo
or
jge
inc
dec
pop
lods
and
adcl
pop
mov
movsb
das
lds
sub
sbb
or
cmp
imulb
cmpsb
mov
xor
sub
add
scas
popf
jbe
rorl
ss
icebp
into
mov
sub
lock
out
push
icebp
pop
mov
add
jne
mov
aas
fdivrs
addl
push
mov
dec
cwtl
inc
or
leave
aam
or
fcoms
div
pop
into
rclb
scas
push
iret
lcall
pop
jge
insb
sbb
inc
dec
ds
icebp
scas
inc
pop
and
lret
xor
hlt
movsb
pusha
push
movsb
idivl
mov
pop
aas
aas
aas
inc
and
in
and
pop
movntq
stos
lret
inc
stos
inc
push
ret
mov
push
and
sbb
jbe
add
data16
add
popa
nop
ss
dec
pop
push
pop
xchg
js
cmpsl
je
cli
shl
mov
jbe
jno
sub
addr16
push
sbb
sub
test
ljmp
jp
cmpsb
in
push
sti
mov
mov
push
fistpl
out
pop
cmp
adc
fs
repnz
loope
cld
fdivrl
popf
xchg
ds
cmp
std
push
pop
stc
pop
mov
xchg
sub
xchg
imul
adc
pushf
dec
xlat
lods
outsl
adc
into
test
and
jp
popf
push
dec
mov
gs
cmpsl
sub
or
mov
movsl
pusha
sbb
mov
adc
xor
inc
adc
testl
cld
mov
fisttpll
fldenv
imul
lock
adc
push
or
jle
and
cli
test
mov
lds
stos
imul
pop
mov
aam
inc
movsl
push
push
std
adcb
out
push
lret
ds
pop
jmp
int3
sbb
or
sbbb
pop
aam
sbb
aaa
shll
jo
insb
test
test
ret
insl
jg
paddsw
mov
daa
getsec
mov
sbb
fucom
movsb
ss
cmp
pop
mov
fsubs
fcoml
pop
jp
jmp
or
int
in
mov
mov
out
sahf
or
inc
push
lods
ljmp
outsl
ds
out
shll
ljmp
mov
int3
jmp
xchg
xchg
arpl
lcall
in
out
ret
test
out
call
clc
dec
mov
cmp
ror
mov
std
lds
andb
xlat
xor
outsb
rcl
loop
shrb
push
shlb
dec
xchg
xchg
add
int3
fiadds
push
repz
aas
mov
add
mov
out
inc
add
push
push
outsb
push
mov
mov
sub
add
in
imul
add
int3
push
mov
les
add
push
mov
repnz
fsubs
fstpl
push
imul
mov
cmc
fidivl
add
icebp
in
xchg
mov
xchg
mov
cwtl
mov
and
mov
adc
inc
scas
mov
push
out
push
std
and
inc
sbb
xor
pop
into
cmp
mov
std
mov
mov
push
xorb
lret
sbb
adc
bound
and
in
or
imul
push
lock
fstl
xchg
sbb
add
fs
pop
lock
loop
mov
cmp
gs
xor
sbb
nop
bound
lds
loopne
jl
sub
dec
sub
adc
bound
push
or
out
lcall
out
out
cmpsl
push
jle
xchg
dec
xchg
push
mov
sbb
inc
fidivl
mov
xchg
js
push
dec
seto
push
bound
movsl
push
sti
std
jb
nop
or
cmp
stos
outsl
mov
enter
mov
and
sbb
out
mov
arpl
add
xchg
lods
add
and
mov
insl
sahf
fcoml
js
hlt
int3
sbb
fcomi
mov
inc
adc
icebp
lods
lahf
fdivr
popf
in
dec
jecxz
fmuls
xor
ret
pop
xchg
push
push
faddl
movsb
stc
sbb
mov
add
in
out
arpl
or
cmp
jne
dec
out
jp
addr16
repz
or
aas
sti
jne
mov
js
mov
cmpsl
inc
cmpsl
bound
or
and
mov
test
ror
adc
rcrb
nop
xchg
repnz
adc
xchg
aam
or
loop
fcmovnu
clc
into
mov
xchg
mov
jae
pop
clc
push
jno
push
scas
rcl
xor
subb
mov
stos
push
int3
sbb
push
pop
xchg
cmc
int
mov
mov
jae
and
xchg
jae
pop
lcall
jmp
cmpsb
loope
xchg
insl
pusha
and
mov
xorl
sub
fiaddl
scas
mov
mov
mov
add
pop
repz
fdivrl
and
data16
mov
xor
das
loope
push
sbb
daa
cmp
insb
pop
mov
sahf
mov
pop
lahf
dec
dec
lds
call
shll
sbb
jge
pcmpeqd
mov
fdivr
es
ret
or
mov
roll
mov
jb
push
and
xor
roll
xacquire
xor
cmp
adc
and
mov
lcall
mov
mov
xchg
mov
add
icebp
xchg
or
xor
mov
icebp
xor
pop
inc
xchg
lods
fs
rcrb
or
mov
ja
scas
loop
push
das
jl
sarl
jmp
stos
push
xchg
mov
flds
sub
dec
ja
mov
cmp
mov
jg
cmc
add
movsl
sbb
nop
jb
inc
in
js
sub
sub
imul
popa
adc
push
inc
mov
jecxz
dec
jno
or
pop
loope
sbb
ljmp
cmp
dec
lahf
cmp
mov
or
sbb
inc
js
xchg
or
xchg
or
test
mov
push
imul
jno
call
push
adc
sbb
into
addr16
mov
sbb
xchg
mov
jne
jbe
mov
fldt
outsb
jmp
and
es
sbb
shll
cwtl
sub
jp
push
mov
fldlg2
and
mov
mov
jb
test
push
enter
adc
and
les
push
xchg
mov
xchg
int
sbb
filds
bound
xlat
lcall
cltd
cmp
ja
sub
lret
rcrl
mov
lcall
dec
mov
xlat
aaa
lock
test
pop
sub
gs
je
aas
pop
or
push
cwtl
sub
mov
inc
mov
jo
shr
stos
dec
and
adcb
xlat
mov
xor
and
jmp
add
sbbl
mov
call
mov
cmp
sub
xchg
orb
inc
xchg
pop
repnz
add
jl
mov
or
mov
jge
jo
sbb
add
out
repnz
clc
xchg
xchg
pop
lcall
jo
push
pop
lds
add
mov
or
repz
nop
xor
push
aad
cmp
sahf
jl
dec
xchg
push
ficoml
out
fdivrs
jecxz
or
movsl
jne
addr16
pop
mov
or
or
add
mul
jnp
xchg
ds
mov
and
jecxz
movsb
jbe
fsubrs
call
mov
push
adc
daa
or
icebp
pop
mov
dec
sbb
push
pop
xchg
jg
jle
or
mov
fstl
add
popf
inc
push
mov
fst
xchg
sub
dec
inc
jl
jl
mov
jle
and
fsubp
push
lods
lods
push
daa
and
cmpsl
in
out
shlb
jae
out
dec
xchg
stos
jecxz
movsb
rcl
scas
outsb
scas
sbb
imul
push
das
lods
testb
add
adc
push
mov
das
std
pop
lds
xchg
mov
jnp
mov
mov
pusha
or
add
ja
pop
fimuls
inc
sahf
xor
adc
clc
and
jmp
push
lcall
xlat
pop
sbb
xor
mov
daa
push
push
shr
sbb
mov
mov
ss
pushf
jo
pop
sbb
jnp
push
sbb
test
or
mov
pusha
pushf
repz
and
fistpll
adc
cmp
jp
xchg
sbb
sahf
mov
std
repnz
jl
fisubs
add
inc
pop
jmp
fbstp
cmp
jg
hlt
repnz
jp
mov
test
sub
dec
into
and
movsl
dec
enter
fimuls
pop
pop
mov
sub
xchg
xchg
xchg
fadd
clc
lret
cmp
xor
jnp
mov
sbb
clc
inc
mov
lret
aad
fisttpll
repz
fistps
insb
jg
pop
test
cmpsb
sbb
xchg
int3
std
push
aas
mov
and
fwait
push
sahf
xor
cmpb
lods
pop
push
mov
sbb
mov
push
mov
movsb
mov
test
add
or
repnz
inc
xchg
inc
inc
out
ljmp
test
stc
push
inc
nop
mov
pop
fistpll
adc
js
mov
or
jne
lea
outsl
mov
fnstenv
je
mov
vcomisd
icebp
xchg
test
lods
push
pop
call
mov
test
pop
sub
and
push
repnz
fldenv
mov
sbb
dec
into
sbb
daa
inc
jne
rol
mov
nop
lcall
push
fsub
repz
cld
cmpsl
addr16
cmp
cmp
mov
mov
shll
int3
fs
pop
or
inc
comiss
in
jecxz
cltd
pop
push
testl
and
xchg
sub
pop
incb
fldcw
fisttpl
mov
repnz
lret
mov
into
sahf
cmp
cmp
sub
push
adc
nop
popa
mov
lcall
cmpsb
fs
sbb
or
lea
jmp
mov
or
mov
lods
dec
fiaddl
out
aad
pop
dec
and
pop
jo
jecxz
add
push
fwait
xor
nop
mov
sbb
adc
lahf
or
add
mov
sub
push
lcall
subb
push
or
bound
mov
data16
dec
and
enter
mov
daa
mov
mov
push
sar
add
outsl
inc
ds
lea
ja
dec
jne
pop
dec
inc
mov
mov
xchg
mov
aam
lea
arpl
pop
mov
cltd
mov
lock
subb
pop
or
ds
mov
movsb
shll
hlt
imul
cmp
mov
adc
das
adc
inc
shrl
ds
stc
xchg
or
dec
out
imul
or
cmp
int
sbb
mov
lds
bound
test
leave
mov
cmp
lcall
repnz
pop
and
mov
test
push
push
xor
aaa
roll
pop
mov
scas
or
cmp
mov
loopne
adc
mov
ja
adc
push
sbb
call
mov
stc
rcll
and
inc
adc
scas
out
movsb
cli
cld
ret
mov
jecxz
into
rorl
mov
loopne
daa
push
fwait
cmpsl
mov
mov
nop
lock
shr
enter
inc
mov
scas
dec
cmp
stc
lahf
sbb
mov
inc
push
pop
das
push
lret
sub
sub
jle
ret
movsb
mov
or
sbbb
pusha
jp
stos
push
mov
and
call
daa
sar
sbb
jnp
cmp
push
popa
jle
lea
sub
mov
mov
repnz
sub
and
sub
lea
xor
inc
lock
arpl
pop
mov
mov
adc
cld
jb
js
shll
dec
hlt
or
push
iret
test
mov
cltd
test
mov
adc
jg
das
sbb
pop
adc
lods
mov
adc
mov
jecxz
rolb
lret
mov
add
mov
ret
mov
stos
jmp
scas
ret
aad
push
inc
push
xor
xchg
test
cmp
lret
stc
sbb
cmp
and
ret
jle
sbb
adc
iret
or
push
insl
xor
sti
pop
loopne
in
icebp
divb
adc
lret
push
lea
inc
stc
xchg
js
or
xor
xchg
dec
adc
stos
and
lods
ljmp
mov
adc
andl
push
test
xor
lret
cmp
inc
inc
cli
mov
xor
sahf
ljmp
dec
pop
pushf
vpavgw
add
cmp
sbb
cld
jno
and
sti
inc
sub
mov
ljmp
cmp
jmp
sbb
add
jae
or
or
cmc
outsl
jbe
xchg
xor
xlat
push
pop
xchg
adc
int
inc
ds
and
xor
clc
mov
add
push
sbb
jl
aam
popf
dec
mov
into
rcll
pop
clc
fs
mov
jae
adc
dec
out
or
push
cmp
in
jne
sbb
scas
inc
lcall
cs
mov
stc
add
push
pop
in
das
divb
daa
inc
lret
mov
addr16
adc
test
cmc
les
jp
hlt
inc
sub
xchg
jbe
mov
mov
pop
xor
fidivrs
sub
addl
popa
sbb
cmp
stos
inc
enter
push
push
pop
sub
sub
dec
xor
or
dec
sub
incl
ror
or
repz
ja
aam
mov
dec
cmp
enter
xor
pop
aas
inc
xchg
mov
sub
xchg
xor
inc
aam
cmp
and
xchg
inc
mov
test
lret
ret
jns
mov
insb
ret
das
les
sub
cli
rcrl
pop
cltd
pusha
bound
jp
add
daa
popf
inc
lea
dec
movsb
stc
push
xchg
stos
sub
les
loope
xor
sbb
jo
out
fisttps
clc
out
sbb
jmp
add
pop
addr16
cmp
rorl
cli
dec
xchg
dec
add
xor
fisubrl
mov
addl
fdivrs
pop
lahf
test
mov
mov
xchg
push
outsb
sbb
cmpsb
mov
push
dec
incb
test
mov
repz
data16
push
outsb
and
xchg
cmp
out
cmp
push
or
push
ret
xor
imul
mov
jp
loop
xchg
test
push
push
cmc
xchg
cwtl
jmp
enter
fsts
clc
dec
aad
pop
arpl
and
jmp
mov
mov
divb
lahf
mov
popa
push
mov
xchg
add
jne
inc
stos
mov
cmpsb
jg
inc
fwait
or
cltd
daa
sti
mov
js
scas
cwtl
and
dec
lret
add
add
loopne
fwait
loop
mov
je
ret
jge
insb
pop
xchg
hlt
jl
cld
xchg
pop
dec
sub
gs
mov
mov
cmpsl
cmpsb
mov
out
mov
popf
mov
xchg
sbb
jb
cmp
push
cmpb
mov
loop
cmpb
inc
mov
cmp
ret
mov
sbb
and
push
push
jno
or
call
cli
mov
jb
push
pop
jp
imul
outsl
rcll
xlat
push
push
mov
sysenter
icebp
je
inc
aaa
sarb
push
ss
mov
aas
test
mov
mov
pop
dec
in
jmp
aas
ljmp
rcr
hlt
shrl
aam
cmp
push
mov
push
and
pop
pop
data16
sub
cmp
push
add
inc
andb
pop
outsl
mov
xor
out
xor
imul
jecxz
push
sbb
pop
sbb
push
dec
inc
in
lahf
sbb
les
incl
stos
mov
cs
sbb
ret
pop
and
repnz
bound
fisttpl
mov
inc
in
pop
pop
adc
and
dec
cmpsl
cwtl
data16
adc
dec
lds
jecxz
xchg
xchg
jno
jne
dec
and
cmpsb
xor
sub
xchg
add
push
nop
insl
jae
jmp
dec
mov
lds
dec
inc
fwait
sarl
push
pop
flds
dec
out
adc
jg
cs
enter
adc
or
lods
push
fs
xor
mov
push
jge
iret
mov
test
lock
jo
lods
outsl
cmp
fs
das
push
pop
in
cmc
inc
enter
adc
paddd
add
jg
daa
nop
pop
rcrb
adc
rorl
pop
dec
mov
pusha
dec
shlb
fdivr
insl
mov
leave
inc
inc
movsb
outsl
jp
jle
adc
call
push
aad
repz
rorl
pop
push
pop
or
test
jge
test
pop
xor
es
lods
push
add
pop
ret
movsl
ja
or
ss
popa
gs
push
iret
lods
jb
mov
sbb
push
scas
int3
fistpll
inc
sbb
or
add
adc
xor
pushf
jecxz
xor
enter
test
popa
mov
pop
repnz
and
stos
js
call
mov
adc
xor
sbb
jp
int
outsb
pop
test
int
cmp
or
cmpsb
hlt
cmc
mov
aam
cmp
lds
and
sbb
add
mov
jge
xrelease
push
pop
xchg
jae
aaa
inc
in
jbe
pop
addb
xor
sub
push
cld
out
fdivrl
scas
mov
pop
sub
push
push
or
loopne
fld
cmpsl
dec
dec
cmpsb
enter
xchg
aad
gs
es
sub
fwait
mov
dec
jno
into
fdiv
addr16
mov
mov
mov
je
add
adc
jbe
insl
imul
out
out
andl
int
xor
lds
and
and
out
das
or
mov
or
arpl
mov
fdivrp
in
mov
sbb
ja
xchg
pop
jmp
jne
into
push
lea
dec
test
scas
inc
jae
mov
pushf
flds
in
push
repnz
push
xchg
cld
jecxz
dec
cli
rorb
sbbb
rdmsr
mov
loopne
and
sbb
cmp
jae
out
imul
js
dec
sahf
paddusb
dec
adc
inc
sub
es
pop
fst
mov
imul
inc
das
in
cmp
jl
ficompl
ja
hlt
outsb
lret
adc
or
mov
das
fxch
addr16
fnstenv
jmp
insl
fsubs
ljmp
adc
xchg
xor
insb
mov
mov
jp
and
dec
pushf
popf
mov
sti
cmp
mov
shrl
adc
xor
adc
pop
lock
ss
pop
xor
ret
lock
js
aad
scas
in
pop
push
jp
into
ror
mov
lret
push
call
lods
test
lret
lahf
sub
or
push
outsb
jge
and
aam
inc
sub
cmpsb
xor
pop
xchg
inc
stc
mov
jb
fistpll
sub
shlb
lahf
jl
pop
pop
cmp
das
xchg
scas
arpl
mov
mov
and
push
jmp
incl
mov
sbb
push
add
clc
push
jnp
xchg
sbbl
adc
mov
out
mov
ffreep
sbb
cmp
dec
add
leave
add
mov
insl
push
je
out
in
lods
jno
mov
inc
cmp
jae
cmpsl
stos
bound
adc
xor
xor
xchg
imul
lods
loop
jecxz
mov
mov
jno
inc
jne
cmpsl
or
sti
push
arpl
inc
fwait
repnz
cmp
jno
push
jbe
jb
out
xchg
mov
repnz
push
xlat
sbb
sub
gs
and
inc
mov
pop
fimull
test
lock
leave
inc
push
sub
decl
in
push
.byte
.byte
