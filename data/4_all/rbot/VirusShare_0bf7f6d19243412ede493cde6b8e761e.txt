and
push
cld
test
xchg
into
scas
dec
cli
xor
mov
inc
jbe
push
fs
mov
sbb
push
ror
mov
cmp
test
inc
pop
movsb
cltd
pop
outsl
inc
and
arpl
lea
cltd
push
popf
loopne
xchg
or
sbb
cltd
xchg
mov
mov
jge
jae
adc
call
int3
test
fisubs
adc
inc
jns,pn
xor
into
movsb
xor
vpunpckhbw
and
push
push
rorb
mov
iret
cmpsl
insl
mov
xchg
popf
testl
adc
subl
test
mov
xchg
jnp
pop
xchg
add
jmp
cmp
lahf
xor
xchg
and
pop
jo
cmp
add
test
mov
push
mov
cmpsb
movsl
sbb
and
xchg
sti
pop
int3
call
mov
dec
in
ror
push
repnz
test
subl
cmpsl
mov
lahf
out
into
jmp
fs
clc
adc
icebp
sbb
cs
imul
bound
adc
add
imul
sub
sub
lret
sbb
test
and
add
rcll
lcall
mov
push
sub
add
sub
lock
fildl
in
ss
frstor
ficoml
popf
adc
ret
cmpl
pop
sub
sbb
faddl
push
insb
pop
divb
test
lods
pop
loopne
and
js
andb
inc
add
ss
push
das
jle
pop
sbb
lret
rcl
add
inc
inc
mul
cmp
hlt
mov
pop
pop
nop
fsubp
and
test
shll
inc
sbb
dec
jle
push
out
add
scas
nop
into
pop
daa
jno
push
cmp
inc
lahf
mov
or
fs
movsb
test
jl
rclb
outsl
jnp
adc
push
pushf
adc
stos
popf
cltd
dec
cmp
mov
pushf
inc
imul
xchg
out
jg,pt
jmp
cmpsb
cltd
xchg
sbb
arpl
cmp
cwtl
lret
xchg
xchg
vpsubb
jle
mov
sbb
mov
cmpsl
aaa
xchg
aad
pop
and
push
xor
add
dec
sbb
ds
push
jecxz
push
add
adc
in
xor
out
sbb
cmc
sbb
jg
sahf
dec
aas
cmpsb
dec
mov
mov
dec
imul
pop
adc
pop
std
adc
add
pop
int
fildl
sar
ss
lods
fmull
adc
mov
cwtl
add
movsb
in
movsl
insb
adc
jle
dec
sbb
push
pusha
in
mov
mov
or
sahf
xchg
jne
xchg
adc
test
pop
lods
mov
jns
test
xchg
dec
adc
subb
out
leave
aam
adc
sbb
ficoml
test
mov
mov
jns
outsl
mov
mov
push
jb
out
cmp
dec
jb
push
xchg
inc
jne
cmpsl
fisttps
sbb
test
xlat
cmpsl
sub
dec
push
outsb
outsl
push
loope
icebp
jne
mov
mov
jbe
xor
daa
cmp
pop
jmp
ljmp
xchg
sbb
mov
mov
lahf
xchg
jnp
bound
insb
dec
jae
fidivl
mov
repnz
jmp
addr16
push
aaa
mov
pop
mov
mov
loop
decl
movsl
cmp
pop
xchg
sbb
test
adc
or
comiss
outsb
mov
mov
out
sahf
sub
xor
test
adc
sub
mov
and
cli
adc
cmp
dec
mov
cmpsb
and
cmpsb
clc
sub
push
mov
cmpl
call
pop
sub
lahf
xchg
addr16
add
xor
arpl
into
mov
mov
mov
pop
int3
std
insb
lods
sub
mov
adc
dec
push
lahf
lea
gs
dec
popf
andb
xchg
cmp
or
jnp
mov
push
loope
jl
sub
scas
inc
lods
inc
and
stos
cmp
arpl
jne
ficoml
mov
in
pop
das
or
out
fsubs
dec
sbb
into
mov
cmp
out
out
mov
xchg
loopne
sub
mov
and
cwtl
addl
inc
lods
inc
mov
jmp
and
fchs
lret
fsub
jne
out
cmp
jmp
add
dec
es
push
cmpsb
mov
test
js
jge
xor
les
mov
pop
jnp
jmp
push
lock
mov
xor
jne
push
mov
jg
fnstsw
dec
aas
push
enter
xchg
cltd
xchg
es
stos
int
fcmove
movsl
in
test
push
or
sub
xchg
call
jns
mov
mov
mov
mov
cwtl
and
push
data16
dec
outsl
rorl
pushf
fdivl
push
cmp
jno
jmp
sub
std
loope
cmpsb
or
push
jno
sub
adc
ret
loop
mov
rsqrtps
sub
fwait
sbb
data16
loope
mov
add
std
mov
ficoml
in
jnp
and
aad
jo
cmp
sub
scas
pop
inc
xchg
or
imul
inc
ss
test
inc
loopne
cs
mov
test
fcmovnb
in
mov
cli
mov
mov
pop
lods
pop
mov
push
faddl
idivb
movsl
push
repz
mov
adcl
mov
xchg
inc
dec
inc
mov
stc
mov
lds
adc
hlt
pop
sahf
hlt
shlb
push
and
mov
in
fcmovu
outsb
adc
sbb
iret
roll
fs
mov
and
lret
xchg
mov
mov
jb
ret
jbe
insl
jmp
sub
cmp
imul
sbbb
cmp
sub
iret
jl
pop
divb
movsl
adc
cmp
lcall
dec
inc
clc
and
lds
lods
in
insb
in
mov
jmp
shll
dec
and
sarl
or
add
xchg
das
scas
mov
clc
sbb
test
push
in
scas
lea
push
loop
and
rolb
pop
mov
mov
push
inc
in
iret
hlt
push
pop
mov
sbb
sbb
popa
aas
mov
das
sahf
pop
mov
negb
xchg
fwait
das
andl
test
das
jmp
pushf
lods
jo
push
jne
js
movsl
sub
lods
add
xchg
sbb
scas
in
jle
push
mov
xor
push
xor
xor
scas
cs
test
and
shlb
data16
lcall
sbb
loop
fidivrs
call
out
repnz
mov
pop
jns
enter
loop
pop
pop
jge
bound
sbb
and
lahf
dec
fdivs
mov
out
das
int
pushf
testb
push
dec
mov
and
cld
flds
popf
out
lods
negb
push
xor
mov
std
pop
mov
jne
lock
sub
arpl
nop
lret
mov
push
pop
scas
push
stos
daa
or
push
ret
into
mov
stos
fs
arpl
or
sahf
loope
adc
dec
clc
and
pop
roll
push
insl
sub
xchg
popa
cld
dec
mov
push
push
pop
pop
das
test
mov
daa
pop
add
xchg
loope
jo
stos
lcall
ds
pop
int
dec
xor
jns
mov
imul
popl
sub
loop
xor
repnz
ja
stc
jmp
lock
xlat
std
scas
xchg
imul
ja
sbb
or
data16
xor
mov
cmp
sbb
inc
push
cmp
mov
mov
addr16
ja
pop
imul
repnz
mov
fimuls
mov
sub
push
mov
mov
pop
mov
stos
rcll
mov
fs
pusha
in
test
ds
cmc
mov
out
into
arpl
mov
sahf
lahf
jle
mov
push
add
shrb
sub
mov
inc
cmp
enter
clc
jns
loope
push
dec
sbb
sub
pop
sbb
mov
fwait
or
inc
jbe
hlt
sub
stos
clc
or
xor
add
scas
cmp
xchg
pop
int
sbb
cmc
idivb
mov
fsubrl
mov
xor
push
push
arpl
clc
xchg
pop
jae
pop
stc
push
dec
jae
xlat
inc
cmp
repz
xorb
jmp
insb
andl
push
sub
dec
jae
xor
movsl
and
jl
inc
jmp
mov
dec
test
jl
push
rorb
stc
adc
sahf
test
xor
lds
sbb
jo
adc
cli
add
adc
andl
mov
fmull
ja
daa
sbb
pop
jp
xlat
pop
aad
adc
movsb
outsb
xor
and
icebp
imul
pop
mov
jl
xorb
hlt
shlb
pop
arpl
fbld
int3
hlt
sbb
lcall
mov
rorl
rorl
imul
movsl
jmp
or
mov
icebp
loope
rcrb
jo
sbb
das
gs
pop
arpl
neg
ret
dec
mulb
fistps
sub
cmp
mov
out
fwait
lods
xchg
insb
mov
lret
pop
movsl
fsubl
jp
test
xchg
sahf
enter
sub
insb
and
add
and
sbb
fmuls
lds
testl
mov
inc
in
gs
fs
outsl
adc
in
mov
dec
push
xchg
addr16
nop
push
add
js
call
lods
repnz
mov
int3
sub
jg
dec
jg
xchg
movsb
addr16
fsincos
data16
and
xorb
xchg
pop
lret
stos
dec
or
jae
lret
cmc
sbb
lret
movsl
and
pop
pop
and
enter
rol
push
xchg
push
insl
xchg
dec
leave
inc
dec
pop
lds
mov
adc
inc
nop
cmpsl
sub
sub
out
pop
inc
jnp
cmpsb
clc
insl
testl
sahf
cmc
clc
cmp
jmp
cwtl
push
add
arpl
cli
or
push
aaa
pop
mov
xor
int
int3
subb
leave
lock
sbb
or
cltd
out
mov
mov
xchg
pop
lock
cmp
inc
push
sub
add
mov
push
xchg
inc
loop
das
sbb
mov
daa
push
ret
mov
pop
cmp
cs
add
mov
push
or
aaa
pop
dec
je
sub
jge
mov
decl
and
subl
testl
jo
hlt
pushf
ja
dec
lds
sub
leave
pusha
cmpsb
mov
push
cmpsb
pop
mov
lahf
cli
pop
int
sbb
push
addb
test
js
add
pop
jmp
jns
test
cmp
dec
das
inc
insb
sub
mov
inc
xchg
fdivs
insl
mov
fisubl
xor
out
inc
add
bound
pop
daa
sbb
inc
adc
mov
enter
ret
lret
fildl
push
test
mov
mov
xor
in
inc
into
mov
xlat
xor
adc
mov
and
dec
dec
cmp
jae
mov
or
pop
fwait
push
out
xchg
mov
xor
loop
pop
icebp
ss
xchg
stc
cmpsb
add
push
sarl
scas
push
mov
aaa
xor
mov
inc
rorl
jecxz
sbb
mov
cmp
ja
mov
imul
mov
xor
fistl
dec
lret
mov
leave
cli
insl
xor
out
pop
mov
dec
pop
push
inc
mov
mov
xchg
pop
jg
hlt
inc
fists
xchg
mov
cmp
or
pop
add
ljmp
cmp
imul
lds
lods
dec
xlat
arpl
cli
mov
inc
imul
stc
dec
cwtl
inc
inc
dec
jecxz
pushf
shl
mov
notb
xlat
cmp
into
xchg
insb
dec
imul
bound
xchg
cmpl
gs
or
mov
test
pop
out
xchg
push
push
jne
popw
addr16
sahf
lret
xchg
mov
aaa
pop
dec
ljmp
sti
iret
loope
dec
lods
inc
and
out
mov
rcrl
cs
nop
popa
insb
xor
pop
scas
push
jp
sub
pop
jg
nop
xchg
shl
out
pop
js
push
push
dec
rorb
test
and
pop
rclb
jns
fcoml
out
outsl
cmp
push
in
adc
repnz
test
arpl
xor
arpl
movsl
mov
scas
outsb
in
ljmp
loope
xor
ljmp
aad
sbb
mov
out
push
aas
cltd
cmp
insl
fbld
or
clc
lods
cltd
ret
add
sub
inc
and
add
xor
call
add
adc
push
fstps
jge
pop
dec
lock
jg
push
lahf
jno
adc
lods
mov
jno
mov
jbe
das
movd
adc
out
mov
ds
inc
fsubr
xor
iret
movsl
sti
dec
and
cmp
insb
adcl
jg
hlt
ret
repnz
outsb
std
cmpsb
push
subb
mov
and
jns
sbb
in
jb
in
jbe
loope
jge
add
xchg
test
lea
cmp
jae
xor
lea
and
xchg
orl
mov
cmp
mov
lods
jae
dec
fmuls
adc
loop
sbb
popa
inc
lods
and
cmp
mov
mov
sbb
mov
in
sti
jecxz
into
sub
push
or
ret
xor
inc
fldcw
dec
xchg
sbb
xchg
sahf
mov
push
xor
push
mov
inc
out
and
dec
adc
push
das
pop
test
xor
dec
sti
push
adc
cltd
imul
add
cmp
mov
mov
lods
mov
fmul
jae
mov
inc
sub
push
pop
jnp
iret
pop
cmp
and
lcall
popa
push
dec
xor
cmp
mov
decb
sbb
pop
in
pop
add
jb
cmp
cmovno
and
lea
xchg
inc
insl
pop
repz
loop
xor
adcl
outsb
sti
add
jno
sub
aas
fidivrs
jae
mov
and
shll
xchg
lock
jmp
aas
inc
mov
xchg
rorl
addr16
xor
cmpsl
iret
jle
mov
loopne
cmp
repz
dec
sub
stos
lods
add
jb
sbb
dec
lds
cmpsb
insb
gs
cltd
ljmp
repnz
imul
sub
sbb
mov
push
int3
scas
mulb
pop
int
shlb
dec
movsl
cmp
out
movb
mov
adc
sysret
mov
mov
das
add
xor
jne
lahf
add
push
cmp
sub
insb
pop
sub
push
test
movl
xchg
hlt
mov
fwait
call
into
mov
xor
or
in
pop
mov
lock
pop
cmp
or
push
and
loop
mov
inc
push
push
jmp
movsb
daa
inc
das
loope
xchg
lret
clc
inc
divl
adc
dec
leave
mov
inc
mov
mov
xchg
loopne
loope
add
pop
mov
mov
adcb
lods
cs
test
push
mov
out
and
pop
rorl
jbe
fcompl
push
jbe
or
jl
cmp
ljmp
mov
mov
pop
mov
notl
decl
enter
sbb
das
je
cld
adc
fldt
sub
jne
clc
das
add
iret
pop
mov
test
mov
int
mov
inc
outsb
cs
push
seta
ficomps
push
rol
aaa
dec
inc
add
add
add
push
std
or
testl
inc
cmp
in
iret
fistpll
unpckhps
sbb
cmp
das
out
mov
test
movsb
sbb
push
mul
rcrl
jmp
bound
mov
dec
roll
inc
mov
push
jne
movsl
xor
rclb
fadds
fnsave
cwtl
or
dec
js
outsb
dec
pop
sub
sti
dec
pop
or
pop
ret
pop
cltd
and
and
push
pop
add
dec
ljmp
shl
or
pop
jg
fwait
aad
pop
xchg
aam
mov
sbbb
mov
mov
addr16
rol
aam
aad
adc
daa
leave
or
div
and
add
imul
jp
fs
sbb
dec
imul
cmp
xchg
leave
and
lret
add
iret
addr16
in
enter
out
out
int
fists
mov
push
loop
jae
pop
fwait
out
dec
fs
inc
mov
mov
fwait
pop
shlb
lds
scas
outsb
pop
mov
xchg
fs
fs
cltd
out
xchg
pusha
mov
xor
or
mov
and
mov
pop
mov
cmp
jge
lock
jne
dec
cmp
clc
jp
mov
loope
mov
and
jg
xor
lret
jnp
fs
sub
xor
xchg
lcall
adc
xchg
js
cmp
push
in
fcmovbe
mov
xchg
in
outsb
or
imul
mov
fnstsw
int
xchg
arpl
pop
add
sti
lods
std
push
push
xor
and
adc
pop
adc
inc
mov
stos
int3
add
jmp
adc
xlat
dec
mov
es
adc
inc
add
add
cmpsb
dec
fidivs
and
and
aas
cmp
loopne
sbbb
pop
or
ja
inc
mov
out
sbb
subl
outsw
inc
mov
stos
pop
adc
aas
mov
dec
inc
test
push
sti
inc
popa
push
jae
subl
mov
test
nop
cmpb
cld
loopne
add
adcl
sub
mov
adc
sub
lea
inc
mov
jp
loop
cmp
shl
cmp
and
or
inc
je
int
in
push
imull
cld
rcrl
lods
arpl
mov
lods
sbbb
xlat
pop
fstps
add
sbb
movsb
in
jne
xchg
sub
mov
outsb
cs
xchg
mov
lock
fadds
xchg
shlb
pop
xor
aad
cmpl
xor
xchg
mov
mov
mov
sub
std
or
mov
sbbb
add
pop
push
cmpsb
adc
loop
shrb
adc
mov
stos
push
xchg
jb
sub
push
cmp
scas
jg
out
adc
int3
outsl
fwait
xchg
shrb
push
mov
jmp
cmc
sub
and
lcall
dec
dec
aaa
in
aaa
mov
cmovb
iret
add
lods
scas
call
xchg
jle
inc
pop
std
fistpll
fadds
pop
jmp
inc
cmp
lret
xlat
lcall
adc
sarl
jo
sarl
mov
shrl
dec
mov
aaa
push
push
mov
shl
xchg
fisubrl
mov
dec
insl
pop
fnclex
stc
mov
mov
push
ja
push
fidivl
decl
mov
jmp
mov
movsl
push
das
and
inc
gs
mov
arpl
jb
mov
push
lods
shlb
imul
in
jg
sub
jb
out
cmp
cmp
jmp
and
mov
mov
dec
push
push
flds
mov
imul
sbb
sub
and
or
mov
cmpl
sbb
fisubl
wrmsr
ja
aad
aas
mov
pop
bound
lds
int3
sti
push
pop
mov
xchg
loope
lea
adc
lret
cmpsl
jge
out
pop
loope
xlat
roll
imul
aam
repnz
stos
xchg
add
push
in
popf
inc
int
rcrb
outsb
add
xchg
mov
test
leave
sbb
cmp
adc
out
cmp
push
xchg
leave
cmp
pop
int3
mov
cmc
xor
jmp
xchg
leave
std
or
outsl
adc
xchg
xor
ret
inc
iret
push
xchg
push
test
xorb
sti
in
adc
mov
mov
cmp
push
pop
push
cmpsb
call
mov
popf
or
ret
jg
dec
add
or
cltd
mov
popa
xchg
dec
popf
ss
jo
xorb
mov
mov
in
es
mov
and
xor
test
jbe
aas
jp
jle
xchg
das
stc
jge
mov
movsl
enter
fcomip
sti
and
rcll
sbb
mov
leave
cld
sbb
ret
fs
push
add
in
lea
movsb
cltd
cli
insl
mov
adc
scas
jne
jae
ficoms
push
dec
test
iret
push
inc
mov
push
shl
jmp
stos
xor
push
jecxz
mov
pop
dec
addr16
insl
push
repnz
push
or
push
lea
mov
adc
mov
jno
add
xlat
add
movsl
fld
lods
je
pop
mov
scas
faddl
add
add
les
jae
sub
inc
icebp
hlt
in
rorl
shll
call
lock
xchg
sbb
sti
and
out
loopne
adc
ds
nop
pushf
stos
scas
xchg
insb
repz
dec
push
xchg
bswap
inc
mov
fwait
rcrl
jecxz
cmp
fistpl
aas
and
lret
loopne
sbb
lock
jmp
and
fmull
mov
jbe
xor
jbe
sub
out
aad
xor
jo
jle
dec
add
cmp
push
push
pop
cmp
mov
sahf
and
pop
lcall
mov
test
dec
cwtl
lahf
cmp
leave
call
hlt
sbb
sbb
add
inc
push
xor
test
test
pop
cmp
push
jp
adc
shrb
or
stc
loopne
add
gs
inc
fucom
pop
dec
pop
mov
test
in
push
fcmove
add
xor
aas
fiaddl
scas
push
imul
push
jle
jg
mov
in
ret
adc
sbb
inc
xor
push
cwtl
mov
dec
mov
jnp
mov
lock
dec
xor
mov
lret
fisttpll
daa
jecxz
cmp
aad
outsb
testb
imul
lcall
jmp
stos
mov
inc
sbb
and
mov
imul
mov
xchg
sbbl
leave
loope
das
dec
mov
xchg
push
inc
and
call
pop
arpl
inc
movl
int
mov
jecxz
adc
fucomi
or
cwtl
scas
inc
ja
mov
push
mov
mov
jl
jecxz
xchg
mov
adc
enter
cmpsl
movsb
imul
mov
or
cld
cmpsb
mov
jne
fsubrl
cwtl
jecxz
leave
mov
psubq
bound
fsubrp
cmp
add
jno
pop
test
sbb
testb
es
xor
std
xor
hlt
lcall
mov
sbb
cmp
out
xor
xchg
sub
ret
lahf
mov
adcb
outsb
mov
inc
loop
push
xor
rcrb
jae
push
pushf
mov
std
sbb
xchg
mov
push
hlt
fldt
fbstp
xchg
pop
xorl
iret
mov
inc
sub
fwait
inc
pushf
into
in
mov
repnz
loop
rorl
pop
lods
pop
lods
and
inc
popf
pusha
cmp
xchg
ret
cltd
sub
mov
add
xor
inc
sbb
call
sub
mov
pushf
push
jle
mov
mov
mov
js
inc
sti
and
and
loope
or
and
inc
jbe
sub
dec
jecxz
mov
jge
iret
pop
movsb
and
not
jns
cmpsb
idivl
jb
repz
cwtl
mov
dec
add
mov
loopne
add
pop
push
xchg
inc
gs
sti
mov
lea
ja
lods
dec
and
sbb
aad
fwait
std
sub
out
mov
mov
aaa
cmp
sahf
mov
int3
dec
pop
xchg
push
jae
pop
adc
xchg
out
int
psubusw
arpl
dec
test
cmp
call
mov
push
fsubrs
mov
or
leave
add
mov
mov
ja
cmp
stos
ljmp
add
divl
jecxz
aad
rorl
shll
cmp
lods
pop
in
data16
hlt
test
or
dec
ljmp
arpl
stos
stos
push
sub
jp
mov
sub
pop
jns
insl
xor
cmp
lahf
pop
mov
cld
mov
mov
popa
pop
clc
mov
inc
jmp
pusha
pop
psadbw
jle
je
dec
pop
lea
sbbl
clc
push
and
cmp
mov
repnz
cmpsl
mov
jae
bound
lods
cmp
push
push
pop
movsb
push
sbb
jge
mov
xor
sti
cmp
bound
mov
lret
jecxz
fstps
xchg
loop
fs
add
mov
mov
adc
leave
shlb
and
cld
cs
popa
xchg
hlt
cmp
mov
pop
adcb
lods
cld
aaa
outsb
or
sub
cld
dec
dec
es
es
movsb
ds
push
cwtl
and
call
lret
jno
mov
push
aam
loopne
sbb
imull
mov
cmpsl
popa
mov
mov
or
ds
mov
sbb
mov
ret
pop
xor
inc
jne
dec
and
sbb
dec
adc
cltd
push
cli
jle
xchg
cmp
imul
rcll
and
leave
cwtl
clc
aam
les
inc
testl
out
cmp
data16
pop
es
gs
lcall
fmull
jb
repz
ja
test
and
add
arpl
dec
call
xlat
iret
and
mov
outsb
outsb
and
sub
out
add
enter
dec
xor
xchg
push
sahf
pop
aad
push
xorb
add
lret
jmp
jmp
or
adc
ret
jne
or
add
dec
out
popf
jnp
push
sub
fsubrs
jp
push
mov
cmpb
mov
addb
shrl
push
xchg
sub
dec
lock
and
xchg
ret
jb
jb
fidivs
aas
or
rolb
jo
cltd
js
xchg
inc
das
std
jno
fwait
jg
fisttpl
out
sbb
test
pop
xchg
les
int3
push
nop
adc
dec
and
sbb
push
lods
mov
xor
pop
push
dec
std
out
pushf
adcb
lret
popf
or
push
rcr
cmpsl
js
mov
lret
and
push
mov
fs
std
xchg
andb
jne
lea
and
cmpsb
adc
jmp
mov
mov
lods
cld
pushf
sub
adcb
mov
addl
nop
cltd
jne
mov
ja
call
push
add
xchg
xchg
mov
cmp
dec
out
fmull
fcmovnu
lods
ja
popf
inc
fwait
movsl
test
dec
xchg
cmp
fildl
sbb
jmp
xor
ds
cmc
std
jbe
fldenv
cmpsl
rcrb
push
sbb
push
in
cmp
arpl
rcrb
fiadds
fscale
push
iret
loope
fcoms
mov
sub
int
sti
subb
xchg
pop
xchg
adc
aas
push
adc
dec
push
push
dec
xchg
xlat
fdivs
aad
pop
adc
jl
cmp
mov
das
out
or
jle
jae
jne
popf
mov
in
pushf
add
scas
imul
push
push
xlat
sbb
in
mov
movsl
dec
and
lcall
popa
js
sbb
ret
pop
stos
mov
lods
push
jnp
push
icebp
add
push
lea
je
in
mov
mov
add
xor
or
dec
mov
mov
daa
pop
ss
incl
dec
and
add
add
out
test
in
adc
and
push
addr16
loopne
addr16
mov
push
mov
adc
test
mov
fistpl
fldcw
jns
and
mov
xor
push
xor
xor
sbb
into
jl
jo
clc
into
adc
test
or
fs
lret
movsb
loope
sub
fwait
ret
add
and
and
push
inc
cmp
sub
in
sub
push
push
negb
push
and
mov
shrl
ret
xchg
shl
cld
jno
fmull
daa
fnstsw
insl
sahf
mov
insb
sbb
mov
ret
dec
cmc
xchg
jmp
push
pushf
in
add
push
fadd
fcomi
jae
jecxz
sar
dec
mov
sub
jo
shufps
or
push
inc
inc
je
jae
dec
imulb
out
dec
mov
sbb
dec
sar
ljmp
push
pop
cmp
outsl
nop
mov
xor
jp
sti
cmp
repnz
push
mov
sbb
push
int3
cmpb
mov
xchg
test
in
or
pop
outsb
ficompl
pop
add
repz
sub
stos
pop
pop
pop
push
sub
stos
jle
xchg
adc
clc
mov
jns
or
jnp
sub
orb
xlat
call
out
in
insb
cmp
mov
push
outsb
movsl
push
bound
sbb
insb
call
push
adc
dec
lock
mov
sbb
out
lret
stc
fstl
adc
fnstenv
or
xchg
sti
jp
sbb
rol
hlt
das
mov
mov
sub
scas
pop
adc
xchg
sub
pushf
fmuls
push
push
push
lcall
icebp
push
dec
pop
and
lret
flds
sub
aaa
xor
xchg
or
into
push
xchg
aad
push
jo
push
xor
scas
jecxz
or
rcll
test
dec
loop
sbb
out
lret
hlt
or
inc
shrb
lods
xchg
jg
cmp
dec
aam
test
fistpll
je
insl
cmp
xor
push
js
mov
ljmp
mov
cmp
mov
push
daa
inc
rorb
insb
divb
out
out
pop
daa
add
sub
fwait
xor
xor
push
jg
jns
mov
notb
stc
push
mov
jb
ja
and
add
outsl
cmpsb
ds
push
jmp
mov
xor
movsl
punpckldq
clc
inc
jmp
repz
xlat
sbb
sbb
xor
xor
leave
adc
aam
jbe
jae
sarl
mov
adc
adc
int3
test
in
lret
push
je
mov
shll
or
adc
adc
stos
roll
daa
data16
jl
rolb
mov
xor
imul
mov
mov
sti
inc
mov
lods
iret
mov
ljmp
enter
mov
popf
ror
xor
or
jg
add
mov
fistps
mov
pop
cmp
mov
mov
shl
and
or
dec
stc
jo
mov
cmp
daa
jnp
addr16
sbbl
add
or
lret
stc
stos
popl
gs
add
ljmp
aam
mov
sahf
dec
out
mov
bound
movsl
mov
je
shll
sbb
jno
push
and
cmp
nop
pop
aaa
inc
shrl
test
dec
dec
xlat
jb
imul
mov
fsubs
jns
outsb
jge
insl
mov
rol
xor
ljmp
add
push
sub
push
inc
fisubs
loop
push
push
mov
insl
out
or
pop
sub
out
pop
pop
fwait
push
mov
out
adc
scas
sbb
mov
and
popa
ljmp
push
xchg
call
pop
imul
movsb
jno
lods
clc
xlat
push
lea
dec
push
xchg
es
fldcw
xor
dec
fldt
dec
out
into
outsb
rol
jg
test
mov
inc
jp
adc
cmp
jl
sub
xchg
fistpll
iret
xchg
xchg
nop
hlt
out
sti
aaa
movsb
shrb
lods
inc
cwtl
arpl
mov
mov
jp
and
push
jg
dec
std
mov
je
xchg
addr16
push
and
add
fucomp
adc
insb
xchg
cli
addr16
int3
xchg
rorb
data16
pusha
push
or
loopne
popa
or
stos
and
testb
stos
cld
jbe
mov
pop
lret
pop
mov
xchg
or
jge
out
nop
pop
ss
mov
or
mov
loop
ss
mov
push
mov
data16
sub
pop
mov
mov
negb
cmc
out
sbb
out
mov
mov
sbb
adc
and
hlt
pop
jmp
push
sbb
xchg
jo
mov
ds
dec
dec
adc
pop
sub
aad
pushl
push
jp
mov
inc
std
ljmp
ljmp
loope
call
stos
xlat
jno
jbe
and
je
fistpl
enter
and
push
test
and
nop
movsb
addb
mov
inc
push
mov
pop
sbb
ljmp
jb
mov
sbb
out
inc
push
outsl
dec
es
add
cmp
xchg
lods
inc
loope
iret
sub
pop
addr16
mov
subl
cmpl
mov
iret
push
adc
jbe
jb
adc
mov
jb
loope
pop
adc
sub
jmp
jmp
push
popf
cmpsb
xor
inc
mov
es
mov
ficoms
in
fiaddl
test
mov
out
je
lahf
mov
or
xchg
inc
hlt
cmpsb
cmp
aas
insb
add
pop
lea
out
push
mov
inc
mov
ss
insl
xlat
and
pop
insl
mov
adc
fxch
pop
push
std
repz
jecxz
lea
sub
mov
push
ds
lock
cmpsl
imul
imul
pop
cmp
test
cwtl
jg
jp
jnp
pop
fwait
mov
push
xchg
loope
lret
movsl
inc
xor
aaa
dec
mov
dec
pop
adc
adc
jb
jl
ret
sub
adc
xor
jo
mov
xchg
stos
cmc
xor
cltd
jne
or
test
jo
or
es
cmp
cltd
mov
lret
mov
mov
mov
mov
aaa
dec
sbb
or
xor
nop
enter
test
jle
add
mov
ss
out
inc
aaa
fsubr
scas
push
adc
dec
imul
and
stc
icebp
loope
xor
or
shll
inc
jp
xlat
sub
cmp
into
enter
jne
sub
jbe
xor
xor
sarl
incl
std
push
lahf
cmp
mov
jno
fdivs
jns
mov
shll
dec
jbe
mov
push
cltd
xor
sbb
and
add
xchg
fisttpl
push
mov
pop
repnz
and
xchg
repnz
inc
mov
sahf
stos
jnp
mov
push
inc
scas
dec
mov
bnd
adc
and
sar
ds
stos
pop
sub
jge
mov
or
inc
mov
or
xchg
fcmovne
pusha
jo
test
in
addl
imul
cmp
mov
xor
rcll
mov
or
add
jmp
lret
rcr
mov
jb
or
leave
dec
ljmp
icebp
and
jg
and
lcall
adc
lcall
jo
pop
and
fbstp
pop
or
and
mov
dec
xor
call
sbb
mov
dec
neg
bound
or
std
push
mov
movsb
cmc
xchg
jmp
or
add
pop
jmp
adc
push
mov
adc
shlb
imull
ficompl
ljmp
shlb
dec
mov
mov
cld
nop
das
sub
insb
mov
or
ja
dec
aas
push
testb
movsl
es
push
leave
fmulp
lods
int
mov
xor
popf
fsubp
adc
xchg
cltd
jae
adc
mov
mov
pop
ljmp
rorb
pop
cs
mov
cmp
mov
pop
out
addb
jle
rcrb
jl
arpl
add
adc
fcoml
test
inc
div
pop
jp
std
adc
mov
cld
mov
and
shrb
cmp
inc
mov
in
jle
jg
aas
mov
push
bound
aam
shl
xor
sub
popf
xchg
adc
pop
xor
push
pop
pop
aas
mov
cmp
mov
jecxz
js
daa
mov
pop
inc
pop
and
or
sti
ret
ss
sbb
out
mov
and
movsl
dec
lods
pop
stc
pop
push
push
jge
pop
push
rcrl
inc
jecxz
in
gs
dec
sbb
adc
xor
pop
sub
mov
jno
add
sbb
bound
pop
ja
ret
jg
mov
push
rcrl
fistpl
je
lcall
push
mov
cs
push
out
pushf
into
loopne
jle
dec
or
into
rcl
pop
jg
push
mov
sbb
mov
push
cld
mov
add
clc
cmp
lret
test
test
jmp
decl
pop
int3
adc
mov
cwtl
or
gs
aam
dec
push
and
test
in
mov
je
movsl
xorb
fucomp
enter
shll
movsl
les
aaa
sub
sub
push
adcl
add
aaa
cmp
into
dec
mov
sub
dec
test
add
aad
imul
and
insb
sub
pop
ja
fucomi
and
lods
popa
sbb
fildl
mov
jmp
pop
or
lret
xor
loope
dec
pop
int3
push
push
fsubr
jb
pushf
mov
subl
nop
xlat
jb
lock
out
and
mov
lds
push
gs
cld
mov
ja
incl
icebp
xchg
xchg
cmpsb
cmpsl
sbb
cltd
dec
inc
pusha
mov
dec
mov
icebp
adc
ret
lock
aaa
scas
in
adc
mov
pop
fstl
jo
ss
outsb
dec
jmp
fsubs
scas
mov
mov
sub
push
mov
fsubrp
js
pop
sbb
lahf
fbstp
dec
dec
mov
pmaxub
lcall
mov
and
nop
test
sbbl
pushf
inc
cs
xor
arpl
rorb
inc
popa
nop
cmpsl
jecxz
xchg
jno
dec
icebp
cmp
sub
jmp
add
pop
jecxz
or
push
xor
adc
stc
scas
add
sub
push
cmp
data16
mov
sbb
adc
ret
inc
or
adc
fiaddl
fildl
and
sbb
inc
out
or
push
lret
push
pusha
inc
movsl
push
or
push
pop
dec
pop
pusha
rcll
cmp
jge
loop
xor
loop
out
movlps
and
scas
cmp
hlt
adc
and
push
lds
out
sbb
out
ds
mov
fwait
mov
cltd
adcb
xchg
gs
in
fstl
pop
xchg
insl
lret
scas
sub
cmp
mov
jns
xchg
xor
mov
mov
jbe
shrb
add
sbb
jp
std
sub
gs
cmp
ret
xchg
push
push
dec
or
add
popf
ret
negl
ljmp
cmp
push
xchg
add
jnp
dec
cmp
sub
rcrb
imul
xor
shrl
lcall
aam
mov
mov
xchg
or
xchg
mov
loop
inc
fldl
adc
pop
mov
in
aam
lret
jmp
or
insl
ret
aaa
jb
call
shr
cmp
scas
dec
fldt
shll
push
out
sbb
test
dec
bnd
push
imul
es
in
sar
xor
xchg
sbb
mov
pop
push
rcll
xor
mov
cmp
fnstenv
mov
cmp
push
loopne
cld
push
mov
and
jbe
mov
push
imul
mov
pop
sub
pop
lea
lds
mov
scas
dec
fidivrs
jno
rcr
mov
adc
mov
sbb
and
insl
jge
clc
inc
lahf
cmpsl
pop
in
jp
sbb
cmp
mov
ret
fs
adcb
sbb
sbb
cmp
outsb
cmp
dec
jbe
sbb
adc
jge
inc
data16
loop
cmp
outsl
pop
pop
pop
test
sbb
inc
lret
pushf
cmp
mov
jnp
fwait
test
mov
fwait
repz
int3
icebp
arpl
into
ret
inc
in
jmp
jno
lds
pushf
sbb
pop
xor
xchg
push
sub
enter
push
orb
lcall
push
mov
sub
xchg
push
sbb
jecxz
sub
xchg
or
gs
clc
lret
in
adc
ss
jl
and
ja
mov
into
data16
xlat
call
movsl
movsb
jg
mov
sub
sub
js
push
out
inc
decb
loop
movsl
notl
sbbl
aaa
out
add
inc
mov
dec
cltd
dec
jg
mov
cs
cmp
xchg
cmpsb
testb
sahf
cmpsb
fwait
test
test
pop
int3
sbb
and
sub
aaa
dec
cmpsl
inc
fwait
mov
and
out
xor
push
hlt
shll
ret
adc
inc
xchg
push
cwtl
mov
rcrb
xor
mov
add
incl
aaa
mov
push
pop
sub
inc
xchg
test
lcall
nop
int3
push
je
push
xchg
adc
hlt
cld
adcb
pop
pop
pop
dec
sahf
sti
js
shlb
loop
test
daa
cmp
icebp
cmp
lret
lahf
add
idivl
int3
cltd
dec
in
ljmp
pop
lret
sbb
mov
incb
xchg
repz
insb
sbb
xchg
cs
xchg
imul
pushf
dec
mov
push
xchg
imul
leave
push
dec
xor
and
pop
cmc
ficompl
jo
jecxz
out
push
or
lahf
ljmp
loopne,pn
aaa
mov
mov
and
fcmovnbe
shll
xchg
outsb
loop
enter
dec
push
mov
imul
mov
dec
popa
xorl
dec
imul
in
add
cld
je
mov
test
and
ss
aam
leave
cmp
mov
jle
loop
jge
call
push
push
sub
mov
dec
jecxz
adc
popf
push
hlt
jl
roll
adc
cmp
mov
cmp
hlt
icebp
sbb
xchg
sbb
test
outsl
dec
loope
int
imul
rcrl
repz
subl
pop
out
jl
jae
in
push
inc
popf
sbb
inc
ror
mov
pop
cld
add
and
scas
sub
and
mov
arpl
gs
ret
das
fcoml
movsb
sti
sahf
scas
popa
iret
fidivs
pop
mov
lret
js
jo,pn
mov
push
imul
pop
fsubrl
adc
pop
xor
faddl
cmpsb
dec
sub
fadds
test
xchg
icebp
mov
lea
mov
icebp
push
hlt
add
cs
cmp
fisttps
fidivrs
jo
aas
xchg
aad
bound
and
jae
push
pop
xor
call
or
aam
fucomi
xchg
pop
jecxz
dec
push
aas
cli
or
jmp
or
daa
jecxz
adc
mov
and
test
cmpsb
jbe
stos
test
pop
pop
adc
mov
out
push
mov
jecxz
xchg
xchg
mov
scas
xchg
pop
addr16
push
adc
call
int3
dec
push
mov
js
mov
jl
mov
popa
sahf
fildl
test
out
mov
pop
sbb
sbb
clc
sbb
push
sbb
loop
jle
jno
mov
hlt
pop
fsubrl
iret
pop
sub
xchg
gs
movsl
out
sub
or
xchg
mov
sbb
data16
loop
fwait
mov
sbb
jle
lahf
jge
push
mov
pop
fnsave
out
lcall
popa
imul
lds
push
push
lret
cmc
out
sahf
lcall
or
jne
cli
ja
mov
dec
push
jo
xor
pusha
add
outsl
cmpsb
test
jne
mov
and
cmpsb
subl
int
push
dec
int
fiaddl
fdivrs
andl
outsl
in
insl
stc
xor
and
rorl
insb
aas
jge
mov
hlt
xchg
mov
divl
mov
inc
shlb
sahf
fcomps
lahf
push
shlb
sub
push
mov
sub
sub
mov
cmpb
push
jp
mov
roll
inc
xor
xchg
fcomps
fcomps
mov
call
lret
mov
aam
out
adc
inc
lods
fsubs
shll
cld
into
ljmp
or
out
mov
inc
push
mov
mov
stos
lock
sbbb
shl
pop
add
or
aaa
xchg
pop
dec
mov
cs
lcall
stos
addr16
mov
shlb
jl
jns
popf
inc
xchg
addb
and
aam
ret
stos
xor
mov
ds
jne
cmp
add
xor
sti
push
movsb
add
out
jp
test
clc
stos
jb
mov
jecxz
fisubs
mov
mov
cmp
cs
add
jns
sbb
xor
mov
dec
jno
mov
xchg
pop
push
xor
adcb
fistpl
leave
adc
and
dec
rclb
stc
fcomi
fstpt
jge
adc
xor
into
lret
jmp
repnz
mov
xor
arpl
mov
out
sub
push
shrb
das
adc
push
ficomps
adc
jns
push
int
cmp
repnz
lods
mov
jge
scas
ficompl
add
fdivl
outsb
mov
xchg
bound
dec
add
mov
mov
or
sub
push
popa
imul
mov
test
cmp
xchg
or
orl
or
cmp
out
loopne
mov
sti
je
aad
mov
fisubrl
cwtl
je
jge
aad
cmp
mov
add
xor
fldt
mov
fs
outsb
push
xchg
cwtl
fnsave
in
mov
xor
loope
push
push
xchg
sbb
repz
xchg
and
push
loop
popw
popf
cld
adc
movsl
pushf
movsb
sbb
sub
dec
ss
mov
test
lret
or
sahf
cmp
fisubl
jae
in
sub
mov
and
sub
lret
pop
push
gs
push
js
cltd
pop
enter
inc
pop
pop
and
les
lds
jmp
imul
inc
push
lods
pop
cmpsb
jnp
mov
mov
in
pop
test
jl
mov
inc
sub
fcomps
test
cmp
adc
sbb
testl
jb
and
lods
or
mov
add
pop
lds
arpl
jne
fimuls
daa
mov
cwtd
nop
sbb
adc
sub
and
mov
mov
enter
push
repz
xchg
popa
cwtl
cltd
add
xor
ret
sub
movsl
jle
push
xchg
loop
cmp
push
sub
test
xchg
lcall
mov
sub
xor
test
jb
mov
fdivrl
jae
sbb
out
dec
xor
gs
cmp
push
inc
jmp
rcrl
aam
xchg
mov
imul
sti
mov
xor
xor
sub
loopne
call
stc
push
and
lcall
fdivl
cltd
add
les
int
adc
jnp
shlb
inc
stos
xchg
dec
xor
cmpsb
call
add
add
repz
fwait
mov
clc
fidivrs
aad
adc
pop
mov
popa
or
mov
bound
jecxz
and
test
jmp
mov
scas
adc
dec
pop
xchg
sbb
scas
aas
jb
dec
jmp
cld
and
sar
mov
push
lahf
shlb
push
jmp
push
ljmp
mov
mov
pop
mov
xlat
daa
sbb
nop
fsub
fisubl
ret
lea
or
arpl
dec
cmp
add
sbb
stos
pop
adc
adc
pop
add
outsl
mov
fstps
fsubrs
inc
and
xchg
stc
xchg
ds
adc
je
mov
js
pusha
or
ja
fdivp
push
ss
aaa
jg
mov
outsb
outsb
mov
dec
xchg
add
fisubrl
and
cmp
test
mov
xchg
out
std
mov
dec
mov
inc
nop
dec
lock
pop
dec
insl
shll
jnp
and
xor
mov
sti
fisttpl
jl
test
rorl
ss
out
sbb
repnz
pusha
jle
and
fwait
push
and
andl
ss
rcl
xchg
inc
push
add
ret
imul
jne
pop
fiadds
ljmp
mov
xor
mov
dec
add
push
adc
cmp
outsb
ljmp
ret
cmpl
in
lock
leave
pop
pop
icebp
push
inc
incl
lahf
arpl
addl
jbe
pusha
xchg
in
ret
push
sahf
outsl
push
mov
std
push
xor
cmp
mov
jnp
rcrb
push
adc
push
mov
repz
int
pushf
add
pop
in
mov
aam
inc
aad
jmp
push
hlt
rolb
or
in
cmp
mov
or
push
sbb
and
std
in
inc
mov
loopne
pop
cmp
lret
pop
loopne
and
and
push
pop
inc
xorb
fmull
and
inc
dec
rorl
in
xor
mov
stos
sbb
xchg
xchg
sub
stos
test
outsb
mov
push
xchg
insl
mov
mov
mov
xorl
movzwl
pop
mov
push
scas
and
lds
insl
adc
or
xor
inc
pop
push
jae
mov
sahf
stc
iret
jae
fisubrl
aaa
push
orb
cmpb
push
or
pushf
cltd
loopne
mov
dec
jno
lret
outsl
js
pop
enter
mov
dec
cmpsb
dec
call
push
xchg
mul
xchg
xlat
jmp
icebp
add
mov
or
inc
push
push
testb
jb
std
dec
sbb
dec
xchg
xor
aad
je
cmp
pop
mov
push
mov
push
jae
jnp
sub
lods
repz
fs
xor
mov
cmpsb
mov
add
cmc
adc
imul
push
negb
pop
sbb
xor
cmp
movsl
dec
mov
sbb
pshufw
sahf
and
dec
and
ret
cli
ds
addl
mov
test
aad
pusha
repnz
je
fstl
xor
out
mov
inc
mov
popa
loope
clc
shll
xchg
movsb
shll
arpl
das
mov
not
add
test
xor
movsb
sub
xchg
and
fwait
dec
pop
jnp
dec
or
cli
pop
cmp
iret
xchg
les
push
jecxz
add
jp
lcall
mov
into
nop
loop
mov
mov
or
inc
or
test
ret
inc
sbb
xor
inc
mov
jmp
lret
arpl
fsubrp
sub
xchg
mov
mov
inc
lods
jmp
vrcpss
pop
jb
loop
mov
ss
ss
out
lret
cmpb
sub
cli
inc
out
jge
inc
jp
roll
lret
shlb
dec
loop
or
or
out
push
mov
fs
out
push
into
or
cli
cmp
fidivl
push
mov
mov
or
in
pushf
fiadds
dec
fs
arpl
jbe
sub
rolb
inc
push
aas
cld
js
cmpsb
call
nop
inc
cmp
or
cmpsb
out
jmp
or
clc
test
sub
or
scas
call
sarb
popa
gs
adc
inc
icebp
filds
jp
test
cmp
int3
sbb
mov
inc
aad
mov
xlat
flds
test
push
push
pop
andw
and
cmpsb
push
and
mov
mov
nop
xchg
out
push
mov
or
add
daa
jb
lret
std
ss
pop
lods
mov
add
dec
ret
jnp
xchg
js
or
cmp
cld
dec
stos
inc
inc
repnz
mov
lret
out
je
icebp
test
pop
mov
popf
jle
lahf
icebp
test
dec
cmp
jnp
jmp
mov
dec
popf
cltd
stos
imul
ret
add
xchg
imul
cmpsb
ljmp
pop
mov
test
push
dec
xor
mov
inc
xchg
xchg
pop
mov
push
xchg
mov
and
add
jle
sub
jns
mov
aas
ret
cld
mov
or
fisubrl
sti
xlat
or
out
adc
sarl
sub
lcall
movsl
repnz
xor
in
inc
mov
ja
pop
aad
push
mov
ror
lds
pop
pop
arpl
add
mov
cs
daa
xlat
int
fldenv
je
fcomip
and
repz
adc
pop
sbb
pushf
add
mov
or
adc
orb
cmp
mov
in
repnz
xchg
dec
aad
mov
cmp
inc
scas
mov
test
mov
dec
inc
xor
mov
orl
dec
repnz
push
push
out
sbb
aad
sub
sbb
jne
dec
mov
push
pop
std
xor
es
xchg
les
xor
add
sahf
outsl
push
push
fildll
shlb
xchg
xchg
mov
sbb
pop
daa
adc
ds
hlt
add
outsl
pop
test
ds
ljmp
mov
mov
idivl
sub
iret
push
lods
lods
adc
lret
push
cld
push
jmp
aad
pop
loope
push
loop
aaa
mov
pop
leave
add
inc
mov
andl
jg
gs
lds
dec
ret
std
xor
ret
in
jo
cld
cmpl
or
pop
inc
dec
pop
jnp
je
cmpsl
xchg
repnz
dec
mov
rcll
popa
sub
inc
movsl
out
std
or
les
cltd
mov
fdivs
inc
fsubrs
cmp
movsl
clc
cwtl
cmpsb
and
jae
stos
cmpsb
sbbb
and
or
push
add
icebp
mov
jne
mov
cld
repz
mov
mov
sbb
fadd
loop
enter
outsb
out
jo
fisubs
repz
push
lcall
dec
mov
add
ret
fildl
fistl
lea
sbb
dec
sub
push
inc
xor
jecxz
rol
int3
push
jge
cmp
in
mull
daa
inc
out
xor
add
ret
xor
subl
stos
jo
xchg
add
pop
ficoms
scas
sub
xchg
fldenv
sbb
aas
nop
fbstp
lds
testl
imul
pop
aad
movsl
loopne
xor
inc
addr16
addr16
or
out
inc
inc
sbb
popa
mov
lret
or
mov
cwtl
mov
call
jle
mov
mov
lods
iret
ret
test
addb
nop
cmp
stos
loope
cld
or
pop
popf
shrl
mov
pop
enter
sub
xor
sbb
and
cmp
int3
mov
dec
inc
sub
fstl
in
and
test
fstps
xor
xchg
hlt
jge
dec
add
pop
in
push
ljmp
imul
push
jne
inc
push
cmpsb
add
push
icebp
add
stos
mov
and
mov
bound
mov
insb
rdtsc
add
pushf
pop
repz
pop
lock
sbb
sub
sbbb
insl
mov
sbb
jmp
sub
push
sbb
adc
mov
push
inc
into
pop
cwtl
rorb
push
add
pop
cmp
in
iret
mov
lods
arpl
cmp
fsubrl
ret
pop
insl
push
pop
je
cmp
sbb
adc
movsb
dec
nop
imul
push
and
fcoms
push
fwait
mov
les
faddp
push
inc
push
jno
ljmp
rolb
int3
mov
sub
mov
or
lret
mov
push
push
data16
in
ds
xor
adc
push
pop
sub
jb
jp
in
push
aaa
out
imul
jg
lcall
ljmp
call
out
movsl
adc
jmp
xor
fisubrs
ds
sbb
loopne
push
notb
jb
xlat
js
stc
cmp
data16
js
xchg
imul
jp
shll
cmp
leave
inc
repz
ja
popf
add
pop
cmpl
cmp
push
ret
mov
shlb
les
out
jg
mov
inc
loope
cmc
popa
call
mov
adc
mov
and
xor
es
popa
outsl
fadds
pop
sub
leave
add
sbb
scas
pusha
or
cmp
lods
add
daa
pop
jne
repnz
das
pop
and
mov
mov
test
repnz
addb
and
xchg
push
push
xlat
xor
shrl
push
xlat
negl
daa
cmc
arpl
stc
jo
sti
adc
adcb
jo
idivl
cltd
mov
das
pop
scas
mov
popf
sbb
js
das
cmp
xchg
gs
dec
call
xor
aam
jne
loope
or
xchg
call
stos
mov
lock
repz
jo
push
push
test
push
inc
mov
inc
add
loop
mov
adc
mov
psubsw
popf
pop
xlat
outsl
bound
cs
cmp
sub
ficoms
in
sub
daa
insl
dec
dec
push
or
into
out
enter
jno
jecxz
imul
push
cmpsl
push
cltd
dec
xchg
jecxz
orb
adc
cmp
jp
out
das
jle
cli
sub
clc
ljmp
int
xchg
push
loopne
adc
push
inc
xorb
gs
adc
int
sbb
pop
fnstenv
add
pushf
or
lods
sub
int
cs
js
nop
mov
xor
dec
xlat
and
xchg
insb
aad
in
xchg
mov
pushf
pop
movsl
sub
out
jae
int3
xchg
sbb
loop
subb
jo
sub
cmpsl
rcrl
sbb
cmp
mov
jnp
pop
adc
or
sbb
cli
inc
fs
popa
mov
or
or
xchg
les
dec
pop
movsl
jo
adc
pop
enter
dec
call
es
lods
mov
arpl
insb
int
fs
aaa
pop
je
insb
xchg
xchg
xchg
out
sbb
fucomip
add
pop
cmpsb
xchg
pop
mov
xchg
xchg
and
xor
sbbl
cld
dec
push
xchg
push
and
sub
and
inc
std
cmp
movlps
push
inc
and
xor
ret
fcoms
jbe
adc
mov
mov
pusha
inc
in
repnz
mov
mov
insb
pop
mov
lcall
push
insl
ds
mov
inc
jne
mov
shrb
aam
movsl
xchg
into
mov
stos
sbb
mov
int
mov
aas
jo
mov
lock
bound
mov
fmuls
adc
fwait
push
mov
aam
stos
shl
sub
mov
mov
xchg
movhps
test
stos
sarb
jl
add
inc
mov
sarl
xor
popf
std
imul
xlat
mov
movsl
int
mov
inc
or
ljmp
movsb
fwait
in
sub
loop
daa
push
inc
xlat
or
cltd
test
testb
push
data16
adc
adc
inc
mov
jg
add
in
sbb
into
sub
mov
shrl
mov
aad
push
addb
out
push
imul
jmp
lahf
jbe
sarl
xchg
push
aas
fs
push
xor
leave
daa
pop
cltd
xorb
and
idivb
mov
jnp
stos
mov
pop
jae
dec
in
xchg
dec
sub
mov
outsl
pop
fs
sbb
mov
fidivrs
fdivs
push
jb
ret
iret
pop
push
and
jns
leave
adc
icebp
enter
mov
int3
sub
insb
shlb
xor
inc
rcr
or
mov
cltd
loop
push
dec
jge
adcl
test
cmp
mov
pop
icebp
gs
mov
dec
xor
xlat
sti
cltd
lcall
ret
pop
inc
inc
xchg
mov
sbb
pop
jo
xchg
jecxz
mov
jo
jg
cmpsl
cs
mov
bound
pusha
daa
jge
dec
mov
pop
adcb
lahf
movsb
mov
lcall
aad
std
pop
das
xchg
sbbb
or
jns
adc
pop
xchg
and
xchg
dec
mov
dec
stos
pop
add
popl
xor
add
inc
cmp
push
aad
insl
cmp
sub
add
sti
fdivrs
push
jne,pt
repz
jp
mov
add
jge
inc
xor
arpl
aas
out
push
sub
cli
push
iret
pop
imul
inc
mov
or
por
test
pop
inc
ds
cmc
aad
jae
mov
lods
xchg
addb
clc
push
std
ficompl
and
fisttpll
xor
ss
mov
ret
imul
xchg
js
mov
or
xor
pop
add
dec
dec
outsb
mov
test
or
adc
daa
fadd
inc
xor
fdivs
dec
das
loope
cld
fwait
adc
add
stc
pop
pushf
add
dec
cli
mov
lds
iret
add
rclb
push
cwtl
inc
mov
rcrb
shll
inc
aam
push
mov
xchg
jle
jne
loope
add
xchg
loop
push
sub
or
rcrl
test
in
sub
mov
cwtl
fld
scas
sbb
pushf
pop
xlat
enter
ja
cmpsb
das
cld
and
mov
push
rclb
or
dec
jo
jne
pop
pop
in
sub
out
xchg
mov
xchg
pop
test
pushf
pop
xchg
sub
push
cwtl
lods
pop
xor
mov
shrb
repnz
lea
insb
lods
fstpl
sahf
outsl
stc
mov
jno
xchg
jne
adc
push
ljmp
pop
outsl
pop
js
push
imul
popf
out
sbb
inc
adc
dec
es
ret
lcall
daa
fwait
lea
cli
ljmp
or
movsl
jmp
push
out
aaa
xchg
push
jnp
push
repz
fwait
push
sub
jbe
cmc
pop
rorb
sbb
cwtl
push
pop
mov
fdivrs
imul
fdivrl
xchg
push
lds
in
push
pop
adc
scas
jnp
mov
dec
and
lods
in
xchg
in
adc
je
stos
scas
sbb
mov
mov
stos
sbb
pop
add
push
je,pt
push
ret
mov
xorl
xchg
dec
and
cwtl
jle
and
jb
jnp
inc
movsl
jp
mov
lret
fs
ja
xor
inc
test
ud2
mov
jnp
mov
push
or
and
jg
xor
lret
out
dec
xchg
mov
ret
mov
out
cmpb
push
mov
or
jb
jns
out
daa
sbb
fs
insl
sub
adc
movsl
and
push
xor
sub
sarl
adc
add
je
roll
negb
call
add
inc
xchg
mov
scas
xor
mov
sub
or
add
icebp
mov
sbb
sub
push
ret
add
sub
dec
xor
pop
imul
lret
cmc
inc
adc
popf
xchg
xor
dec
lret
or
or
pop
je
sbb
mov
fnstcw
fucomi
cltd
push
sbb
jge
mov
setno
lea
enter
lea
xor
push
ds
fdiv
adc
fst
xchg
or
iret
in
jl
inc
dec
loope
cmp
jg
aam
xor
mov
push
jns
fwait
xchg
xor
xor
orl
add
jle
adc
mov
repnz
lods
inc
xlat
xchg
idiv
mov
mov
and
inc
lahf
dec
repz
jle
sbb
out
pop
fbld
outsl
mov
add
fdivs
subb
add
dec
insl
testb
xor
imul
mov
les
mov
je
adc
mov
dec
pop
xchg
int
dec
cmp
loop
push
sbb
into
mov
push
fucomp
stc
pop
frstor
loopne
fwait
sub
push
fstpt
mov
sub
fwait
add
xorb
sti
lcall
xchg
rclb
loopne
dec
lret
mov
mov
dec
cwtl
lea
add
ret
nop
inc
lret
jecxz
cmpsb
lahf
cmc
xchg
cmp
out
mov
fwait
xor
jg
cmpl
movsb
push
mov
adc
mov
test
out
or
pop
cmpb
xchg
ljmp
sub
mov
mov
enter
arpl
shlb
jmp
das
insl
pop
mov
sahf
sub
jmp
xor
sbb
in
daa
enter
lds
mov
pop
xchg
sarl
mov
xor
js
dec
dec
mov
cmp
dec
aas
ss
aad
addr16
lods
jmp
xchg
in
jbe
adc
adc
mov
xchg
popf
xlat
andl
loop
call
push
imul
pop
inc
add
sti
xor
push
cmp
outsl
mov
rcll
not
ret
cli
cli
jb
mov
outsb
orl
mov
cmp
inc
rorl
sbb
fdivs
adc
add
into
dec
cmp
fisubrl
daa
pop
lcall
mov
sarl
cld
adcl
cmpsb
aaa
push
cmp
je
cld
push
add
cmpsb
or
push
xorl
fs
arpl
jbe
jge
push
jmp
scas
mov
pushl
insl
fiaddl
cmpsl
lcall
sbb
cld
rcrb
mov
pop
cmp
adc
jle
add
jge
and
push
mov
insb
xchg
leave
test
xchg
popf
xor
arpl
sbb
cmp
lock
insl
pop
mov
das
arpl
pop
mov
in
jp
cmpsl
rep
cmc
pop
in
icebp
mov
nop
shl
xchg
pop
or
ret
cltd
inc
or
fdivp
mov
arpl
push
xor
ficompl
in
xchg
sarb
imul
sbb
mov
sti
enter
fistl
int3
jp
push
js
xlat
shrb
fwait
adc
not
into
loopne
push
repnz
icebp
and
les
mov
jbe
rorl
mov
popf
pop
mov
loop
out
test
add
jbe
sti
sub
in
daa
int
clc
inc
jb
adc
jecxz
mov
scas
mov
cmp
mov
fwait
jb
popl
mov
mov
mov
add
add
and
jl
sbb
cwtl
arpl
lea
jno
loop
jle
mov
mov
es
xchg
sbbl
daa
ficoms
test
sti
lea
inc
stos
sbb
cmp
and
cmp
jbe
mov
mov
fs
and
sub
xor
adc
and
and
stc
pop
mov
jle
cmp
pop
push
test
mov
or
pop
adc
mov
sti
shll
inc
call
pop
adc
push
xor
icebp
jg
scas
ja
mov
cmovb
cmc
mov
sbb
inc
lret
sub
inc
fwait
les
sub
push
xchg
lods
lods
xchg
xchg
movsl
jb
lahf
iret
adc
sbb
dec
pop
mov
dec
xchg
and
lds
xchg
cmp
pop
cltd
push
test
in
and
cwtl
test
mov
pop
xchg
stos
mov
out
xor
xchg
rorl
pop
xor
cld
jmp
push
inc
in
cwtl
aam
adc
pusha
pop
ss
lret
cld
mov
test
jl
in
or
fstl
sahf
or
add
cs
push
lods
inc
inc
push
sub
leave
ljmp
adc
pop
imul
aam
dec
sbb
in
arpl
imul
push
gs
sub
inc
jecxz
inc
cltd
mov
fistpll
jl
mov
mov
in
add
mov
fnstcw
mov
pop
pop
jb
in
xchg
and
loop
cwtl
orl
sbb
dec
lods
fldcw
or
inc
dec
mov
outsb
enter
fdivrp
and
push
sub
test
xor
xchg
jge
dec
test
sbb
xchg
sahf
inc
xor
addb
or
int3
insb
jecxz
jmp
jae
andb
jg
xchg
decl
push
dec
sbb
cmpsl
lods
outsl
pop
dec
je
adc
jne
pop
adc
fiadds
or
mov
clc
aas
pop
pop
shrb
rcll
xlat
push
bound
cmc
aam
sub
divl
jge
je
sti
fidivs
repz
dec
mov
xor
arpl
xchg
cli
lahf
mov
cmpsl
mov
imul
js
mulb
cwtl
sbb
push
and
enter
push
mov
iret
xor
push
adc
mov
mov
dec
enter
ljmp
bound
and
push
je
cwtl
push
fwait
xchg
push
std
das
pop
and
jae
lcall
push
xchg
mov
cmpb
dec
xchg
shl
jge
lahf
jne
jl
mov
add
push
xchg
mov
mov
cmc
int
or
ja
mov
cmp
or
insl
push
push
pop
mov
mov
filds
mov
dec
aaa
enter
xor
inc
das
sub
cmp
xor
pusha
xor
aad
int3
xor
inc
xchg
mov
sti
sbb
jg
jns
inc
incl
inc
call
sbb
scas
lea
pop
sbb
loopne
inc
dec
das
loope
cs
ret
dec
push
jge
movsb
mov
fldl
mov
add
or
js
pop
jle
xchg
pop
mov
fistps
dec
fsubs
fidivs
clc
pop
je
pop
das
cmp
aaa
test
pop
cmp
and
mov
adc
popa
sbb
xchg
mov
mov
scas
rcr
mov
jecxz
fwait
mov
int
lods
es
testl
or
mul
lods
push
adc
mov
inc
ret
insb
cmpsb
outsl
in
mov
adc
push
popa
mov
popl
or
push
fwait
aas
out
call
pop
pop
test
adc
sub
push
movsl
mov
testb
and
mov
fldenv
pop
fdivs
sbb
pop
pop
lock
repz
inc
popa
mov
mov
adc
sub
adc
push
or
scas
xor
or
and
mov
cmpsb
and
cmpsl
pop
sbb
mov
movsb
std
cltd
out
cmpsl
adc
xor
mov
hlt
mov
jne
sub
jno
fistl
jl
enter
or
add
ret
xchg
int3
jb
lods
mov
bound
xlat
faddl
and
cmp
mov
push
inc
or
jmp
aaa
xchg
adc
aas
lock
add
aad
mov
inc
pop
lea
push
fidivrs
mov
push
scas
aad
or
movsl
pop
iret
aad
push
sbb
leave
and
cmp
jle
xor
mov
lahf
pop
xchg
xor
test
aad
out
test
lock
adc
int
or
addr16
sbb
or
jmp
jl
imul
and
and
rcll
int3
clc
pop
daa
inc
mov
lds
dec
dec
lea
cmp
mov
lcall
ret
xor
add
call
cmp
and
fisubrl
or
ljmp
popa
and
ss
bound
popa
fmuls
cmpsb
cmp
out
out
ljmp
arpl
insb
insl
and
mov
adc
sub
stos
mov
pop
jge
sbb
jns
mov
imul
repnz
fisttps
xchg
into
mov
into
push
xchg
ja
jg
pop
xchg
add
mov
loope
jle
gs
xchg
je
scas
inc
inc
fadd
jmp
adc
jne
inc
cwtl
out
inc
test
repz
insb
imul
jne
dec
mov
stos
jnp
pop
out
ret
xchg
scas
xor
push
mov
xchg
add
aas
xor
push
iret
aas
cmc
mov
mov
pop
bound
add
test
pop
pop
and
fists
dec
adc
in
cmp
add
lret
xchg
ja
cwtl
movsl
aaa
and
mov
mov
mov
loopne
dec
adc
sbbb
int3
jge
nop
aad
loopne
pushf
inc
mov
fwait
addr16
call
xor
lahf
rcl
or
xchg
stc
inc
jno
ljmp
rcrb
sarl
mov
xor
push
mov
or
mov
cmp
ret
lahf
and
lods
dec
xchg
lock
xor
mov
aad
mov
fcompl
rcl
mov
jbe
push
mov
push
test
jg
mov
mov
cli
or
mov
jg
xor
loop
shrl
sub
pop
insb
movsl
imul
in
repz
or
lret
arpl
jo
push
mov
xor
push
xor
inc
adc
inc
lods
sub
loopne
lret
les
mov
cs
push
sbb
and
cmpsl
nop
lahf
mov
sbb
xor
push
stos
aad
push
xchg
push
lds
pop
je
jl
mov
bound
mov
pop
aaa
xchg
fwait
stos
and
push
test
cld
push
jl
outsl
dec
scas
scas
add
pushf
dec
push
push
lea
mov
sbb
mov
out
xlat
cwtl
loop
ret
and
xor
es
aad
mov
fldcw
es
adc
mov
arpl
jp
jle
gs
adc
sbb
popf
scas
push
pop
lret
adc
cmpsb
inc
and
cmp
pop
xchg
jno
test
or
jno
adc
fnsave
outsl
int3
inc
repz
test
mov
lods
or
popa
jae
cs
sbbb
lods
std
push
xchg
sub
insb
negb
cmpb
and
sti
push
add
inc
inc
pop
int3
outsb
movsb
add
das
outsl
or
cmp
cmp
push
sub
in
inc
xor
pushf
sysenter
stos
iret
mov
push
sub
mov
push
or
movb
dec
dec
inc
icebp
xlat
mov
pushf
dec
push
pop
addr16
bndstx
roll
jb
xchg
xlat
sbbb
cmp
mov
in
int3
aas
loop
stos
sbb
out
xchg
xchg
stos
cmpsb
mov
jmp
pop
or
sbb
lds
sbb
pop
jbe
jns
add
sub
out
sub
pop
sbb
out
in
mov
sub
mov
cmp
add
xchg
pop
cmp
je
push
cwtl
mov
adc
adc
in
lds
pmulhuw
mov
fistpl
push
mov
xchg
call
pop
sbbb
ret
ss
lret
jbe
cmp
sbb
lret
jle
movsl
insl
or
mov
xchg
jns
rolb
sub
rclb
gs
dec
scas
xchg
push
sub
xor
adc
arpl
arpl
icebp
sbb
lea
xlat
inc
les
jp
outsb
out
pop
sarl
mov
lods
ror
outsb
mov
pop
in
lahf
lock
mov
xor
cltd
fs
jp
jb
mov
jns
push
adc
xor
add
mov
lods
mov
fs
mov
cmp
jl
xor
mov
test
xor
das
mov
int
xchg
dec
push
dec
jns
incl
faddl
in
xchg
mov
inc
lea
mov
ss
or
inc
lods
mov
push
in
out
pop
lods
mov
scas
mov
les
inc
and
cmp
fs
and
mov
cmc
mov
pop
lret
subb
pop
pop
push
in
rol
das
dec
cmp
bound
shll
sbbl
lret
pop
jno
jge
sbb
aam
inc
addr16
push
fstpl
push
jns
pop
loopne
mov
xor
lahf
xchg
lret
sti
xor
mov
push
fcmovnbe
pop
xlat
mov
pop
pop
pushl
mov
iret
in
jnp
into
fldt
aam
sub
outsl
jb
mov
xchg
test
pop
popf
gs
idivl
mov
dec
adc
jnp
sbb
dec
jns
dec
sti
mov
leave
insl
sub
aam
inc
faddl
inc
scas
movsb
imulb
faddp
cmpsl
pop
insl
in
sub
sbb
jecxz
pop
lea
dec
mov
xor
shlb
push
aas
test
movb
pop
cmp
hlt
loopne
sub
lahf
sbb
xor
fimuls
cs
mov
sbb
cwtl
push
outsl
pop
mov
icebp
enter
mov
sbb
xor
and
out
xchg
inc
dec
mov
aas
inc
iret
add
ja
dec
mov
insl
mov
sbb
lret
push
push
and
mov
xchg
fadd
ret
insl
sbb
adc
aam
mov
jl
sub
mov
ret
mov
hlt
push
sbb
mov
or
out
and
aad
and
outsb
pop
call
leave
and
cmp
rcrb
popf
stc
in
sub
mov
sub
rolb
cltd
push
fwait
dec
xor
push
cltd
xor
xorb
aad
mov
pop
push
rcll
cmp
daa
xchg
aas
adc
aas
add
sbb
xchg
loope
fsubs
out
or
xchg
add
int
jae
idiv
loop
icebp
out
push
or
adc
add
xchg
and
repnz
jne
ljmp
into
fisubrl
mov
rol
mov
jg
push
push
repnz
xor
pop
ljmp
divb
push
pop
aam
das
pushf
dec
popa
int
dec
arpl
div
cwtl
int3
xchg
xor
mov
in
or
mov
sbb
adc
lea
sub
shlb
xorb
data16
push
dec
aaa
adc
in
add
gs
sbb
in
cltd
out
ljmp
jb
ljmp
mov
fadds
mov
xchg
data16
mov
test
dec
test
xor
mov
add
aas
les
lcall
or
fyl2x
ja,pt
mov
add
pop
sbb
dec
cmc
and
iret
jge
and
in
mov
mov
iret
push
mov
xlat
xchg
mov
mov
jecxz
cwtl
aaa
sbb
lret
mov
mov
cmpsb
mov
cmp
sahf
mov
movl
add
pop
pop
sub
mov
mov
sub
xor
test
lret
cwtl
pop
dec
jo
or
in
lds
mov
repz
cmp
mov
mov
jnp
add
pop
mov
and
add
fldenv
push
adc
test
jno
cmpsb
popa
push
rcl
push
or
gs
pop
roll
je
push
into
ret
cmc
in
xor
xchg
jg
shl
mov
sahf
push
call
dec
gs
lock
mov
dec
cld
enter
insl
adc
dec
and
push
int
lcall
arpl
sbb
daa
fs
push
out
dec
sub
mov
stc
xor
pop
cmpsl
jno
inc
mov
pop
jmp
xor
nop
pop
mov
and
add
and
jecxz
cli
out
mov
sar
push
mov
fisubl
and
cmc
ja
push
outsb
xchg
leave
out
mov
pusha
in
pop
jle
cmpsb
xor
bound
adcb
push
xor
repz
adc
je
sub
insl
push
inc
inc
je
and
cmp
add
shrb
shll
pop
arpl
cmpsl
mov
cmpxchg
pushf
icebp
rcrl
cmp
inc
test
das
push
aas
fcoml
cmpsb
inc
mov
lods
out
add
jg
mov
ret
or
push
sbb
mov
and
cli
cmpsb
mov
adc
mov
mov
into
add
jbe
mov
mov
mov
and
and
fprem
and
nop
pop
andb
inc
sysexit
sbb
loopne
std
and
push
mov
jns
cwtl
fdivl
pop
in
cmp
test
cmp
pop
inc
faddp
lret
addr16
cld
data16
jecxz
test
xchg
clc
loop
cmp
xlat
dec
cwtl
cs
popa
ja
cmp
mov
lods
mov
xchg
les
mov
andl
loopne
add
les
pop
or
xor
shrl
popf
filds
xchg
es
and
jge
mov
sub
mov
loopne
sbb
div
pop
or
sub
cli
pushf
das
xor
jno
sti
xor
loope
mov
repz
or
dec
fbstp
cmp
sub
scas
sub
cmp
cld
sub
and
inc
sti
adc
in
jnp
dec
aaa
fs
push
test
mov
mov
ret
clc
mov
cltd
std
jg
xchg
jns
dec
xchg
inc
mov
stos
sbb
aad
loop
xor
add
js
xor
adc
fildl
jb
loop
inc
aas
sbb
cmp
cmpsb
lcall
push
repnz
cld
xor
xchg
mov
insb
cld
mov
fdivl
ds
arpl
jge
inc
jmp
loop
sub
addr16
ja
lods
xchg
jmp
lock
shrl
xchg
shlb
push
mov
and
or
and
cmpsb
out
inc
cli
and
adcl
mov
imul
clc
jnp
cltd
adc
imul
and
mov
inc
add
int
pop
sub
mov
fndisi(8087
jae
xor
test
jne
je
leave
sbb
rolb
cmp
bound
xor
adc
out
fldt
sub
mov
cmpsb
icebp
sub
les
mov
ja
and
sahf
push
lcall
lea
push
arpl
mov
sub
mov
sbbb
or
sbb
out
mov
pushf
pop
lahf
xchg
icebp
mov
fwait
in
pop
push
sub
dec
xlat
add
cs
hlt
cli
sbbb
and
sub
scas
out
and
stc
clc
sahf
movsb
xchg
aad
imul
xor
lods
mov
cmp
lea
push
int3
dec
repz
mov
jo
push
cmp
out
push
mov
lret
in
imul
xchg
mov
dec
xchg
mov
shrl
clc
pop
mov
jno
push
adc
addr16
lret
jae
pop
pop
push
ret
orl
jmp
mov
mov
pop
aad
dec
mov
repnz
sti
lret
gs
cli
je
rcrb
inc
adc
dec
dec
jae
push
mov
std
fcoms
push
pop
mov
inc
and
pop
sbb
in
lods
pop
mov
out
mov
dec
hlt
loope
imul
sub
sbb
je
sub
xchg
mov
js
jo
orb
pop
iret
js
ja
imul
mov
jb
dec
lds
stc
pop
sbb
cmp
and
and
popf
repnz
or
cmp
inc
vpandn
daa
mov
xchg
sub
aaa
add
pop
mov
push
xor
out
jbe
cmp
popl
pop
xchg
in
es
ja
add
cmpb
jle
in
call
jp
dec
mov
adc
outsb
mov
js
pop
push
push
mov
out
and
mov
das
adcb
fbld
jge
lret
fs
pop
lahf
stos
inc
xor
call
mov
push
in
push
jmp
xchg
pushf
push
pop
cmp
cmp
mov
mov
sub
and
adcl
out
rorb
xchg
add
cmc
jp
lcall
cli
pop
scas
pop
popf
sub
ret
jecxz
dec
adc
pop
add
rolb
sub
rcrb
frstor
sbb
xor
imul
inc
movsl
loopne
lods
adc
inc
int
cmp
push
mov
fnstenv
enter
fadd
sarl
cmc
and
adc
dec
add
mov
dec
scas
loop
lods
psraw
push
pop
xchg
js
in
xchg
out
pop
or
andb
pop
nop
pushf
sub
pop
popa
sub
xor
mov
shll
loop
repnz
cltd
or
jnp
dec
mov
push
sbb
in
jge
xor
insl
fdivrs
inc
add
or
das
mov
mov
aam
test
push
mov
pusha
and
pop
shl
ret
test
push
adc
aas
or
adc
sbb
dec
stc
out
mov
flds
push
adc
fwait
xchg
fidivl
fwait
mov
inc
adc
insl
sahf
lods
ror
mov
sbbl
insb
xchg
out
dec
jns
jmp
push
les
and
movsl
adc
lock
clc
jns
mov
xlat
sahf
out
sbb
popl
push
stos
shl
enter
adc
fs
in
rcrl
fisubrl
lods
pop
pop
popf
push
mov
shrl
jo
and
loope
inc
add
pop
mov
xor
clc
mov
or
aas
std
out
test
ret
push
dec
sbb
ljmp
or
scas
out
jecxz
dec
mov
or
cmp
pop
ss
pop
jns
and
sbb
jmp
dec
jnp
jg
orb
sbb
mov
mov
and
push
cmp
inc
test
sbb
xchg
mov
sub
sbbb
ret
fwait
lcall
mov
cmp
pop
pop
push
shr
sub
outsb
testb
mov
outsb
mov
into
movsb
mov
unpcklps
sub
mov
cltd
dec
dec
push
adc
jne
add
xchg
popf
ds
sahf
fwait
outsl
shrl
jae
mov
jbe
sub
rorb
inc
jle,pn
lods
mov
iret
sti
call
inc
mov
jge
jo
add
mov
sub
push
or
fdivrs
popl
ret
sub
mov
movsb
jbe
pop
lgs
adc
hlt
and
xor
push
enter
icebp
aas
out
cld
xor
fnsave
cs
push
js
fsubrl
subb
pop
int3
aad
add
mov
xlat
loope
and
aaa
icebp
dec
ret
into
mov
xchg
lea
pandn
sub
mov
jno
adc
cmc
ret
shrb
jmp
jmp
lahf
add
out
test
cltd
mov
xor
icebp
enter
repnz
inc
mov
int
xor
xchg
inc
out
push
pop
stos
inc
lret
gs
pop
pop
outsl
push
pop
das
inc
scas
out
cmp
inc
push
test
mov
cmovne
mov
lock
inc
mov
lods
jnp
cmp
clc
stos
addr16
dec
rep
push
and
mov
dec
out
andb
enter
adc
xor
push
sarb
xor
mov
andb
fmulp
push
call
mov
movsl
add
bound
sub
sub
in
jle
rcr
mov
pop
pop
fdivp
lods
icebp
subb
lods
xchg
outsb
add
push
jne
jecxz
cmc
icebp
pusha
incl
mov
pop
in
clc
pop
stos
ljmp
cmpsb
mov
mov
dec
pop
xchg
rclb
jbe
fcmovnbe
mov
out
push
ja
lds
push
fsubs
jmp
aaa
lret
mov
stc
dec
mov
jle
mov
sub
out
mov
jge
pop
push
insb
jp
jo
adc
xorl
insb
mov
lds
jo
arpl
in
iret
and
xchg
push
movsb
mov
arpl
adc
xor
leave
fisubrs
sub
mov
jmp
jle
mov
nop
cltd
or
fisubrl
aad
dec
mov
js
sbb
ret
je
sub
pop
cmp
in
mov
sbb
leave
mov
lcall
push
mov
mov
cltd
jg
pop
popf
mov
pop
out
loopne
xchg
cwtl
cmp
dec
mov
adc
insb
and
push
add
fisttpll
xor
daa
sub
fbstp
inc
dec
imul
rclb
mov
push
in
sub
cmp
xchg
nopl
mov
aas
add
js
ficompl
dec
outsb
and
in
stos
loopne
testb
mov
mov
cmp
aas
cmpsb
push
mov
mov
and
outsb
push
mov
push
dec
sub
push
cmpsl
imul
xchg
lret
mov
add
mov
xor
push
inc
lods
xchg
ret
jns
mov
push
inc
or
sub
dec
fwait
xchg
lret
js
and
xchg
sbb
or
sbb
ljmp
mov
stc
and
fimuls
xchg
pop
sub
cmp
inc
lock
xlat
lcall
sub
fistpll
shlb
cmp
cmp
ljmp
test
jns
mov
iret
mov
jbe
xchg
mull
mov
repz
cmp
out
cmp
je
mov
pop
movsl
repnz
push
popa
mov
mov
fsubrp
outsb
fs
jge
mov
subl
adcl
adc
leave
or
jg
mov
loopne
sahf
imul
pop
in
rorb
xchg
ss
jg
lcall
jns
sbb
or
icebp
jb
test
scas
push
jle
sti
pop
push
jle
mov
into
pop
inc
xchg
or
test
imul
jo
ret
icebp
out
div
mov
aam
and
mov
ja
xchg
xor
test
dec
cmp
mov
adc
fldl
jge
pop
xchg
jl
pop
pop
out
lods
and
add
mov
test
int
sub
xchg
xor
cmp
daa
push
and
sbb
push
push
bnd
dec
or
xor
adc
and
outsl
inc
cmp
and
pop
cmp
popa
xor
addr16
outsl
push
pop
pop
fdivrs
test
gs
fsubl
mov
xchg
inc
lret
fdivrl
sbb
dec
mov
ja
sub
shlb
aam
je
inc
pop
imul
mov
out
dec
push
in
ja
jae,pn
jo
jmp
sbb
lret
rorl
lods
jg
lret
idiv
arpl
xor
xor
adc
pop
rcll
pop
add
dec
test
loopne
movsb
int
jnp
and
orb
pop
jnp
mov
pop
clc
mov
xchg
xchg
cwtl
xchg
fidivl
sub
fsubrl
inc
int3
test
pop
faddl
or
dec
mov
test
inc
loope
adc
mov
or
in
aas
cmp
aaa
and
add
xchg
add
xor
movsb
xchg
sarb
jl
hlt
sbb
icebp
dec
push
fstpt
inc
lea
je
sbb
adc
mov
aas
and
push
xchg
push
mov
push
leave
adc
or
icebp
and
xlat
out
insb
mov
dec
out
in
or
mov
lods
jge
or
out
in
addb
mov
cmp
pop
ret
xchg
pop
or
inc
inc
jmp
pop
aas
sti
jne
pop
mov
push
mov
xchg
int3
sub
push
daa
jno
jecxz
mov
pop
jg
fisttpll
pop
dec
dec
jns
mov
cltd
jmp
xchg
jne
xchg
mov
into
je
add
lahf
imull
testl
sbb
in
out
insl
shr
das
mov
and
push
inc
pop
push
xchg
test
outsb
sub
cmp
xchg
mov
sahf
jmp
mov
cmp
outsb
xor
fs
or
add
sti
leave
movsb
jb
cmpsl
sub
mov
push
fcompl
push
adc
clc
jle
sbb
fsubl
imul
pop
fdivs
cld
mov
rcll
clc
icebp
ss
xchg
sti
xchg
bound
incb
shlb
in
xchg
scas
sbb
icebp
dec
push
xchg
adc
mov
fs
fwait
jo
fistpl
add
and
dec
sub
mov
or
or
bound
dec
ds
rcrb
cmpsb
scas
clc
xchg
xor
sub
cmpsb
add
fsubl
mov
mov
je
fsubrl
icebp
mov
mov
fnstenv
pushf
pop
ja
xchg
sbb
ret
pop
rcll
mov
mov
loop
xor
arpl
sub
add
mov
repnz
std
sahf
pop
mov
mov
outsl
push
inc
sub
scas
out
mov
inc
xchg
mov
fxch
loop
push
pushf
icebp
les
cld
mov
lods
xchg
std
jle
in
call
mov
mov
xchg
mov
xchg
lods
inc
lret
adc
ja
clc
jne
pop
jmp
push
cs
mov
jno
and
xchg
inc
and
sbb
inc
add
ljmp
cs
arpl
jno
sti
sbb
imulb
shll
loop
jne
pusha
jbe
push
ljmp
add
loop
fdivrl
or
push
ss
std
fcomp
popf
inc
jg
imul
xchg
inc
mov
aas
cmp
sbb
stos
pop
dec
int
push
fildll
pop
iret
pop
sub
lcall
jmp
xor
in
and
and
lods
mov
jo
int3
decb
jae
xchg
js
jnp
mov
adc
add
iret
cmp
push
lret
and
insb
add
mov
push
outsb
fildl
lahf
add
pop
or
ja
leave
xor
aam
inc
insb
pop
pop
jbe
xlat
mov
dec
jnp
mov
ficoms
mov
pop
inc
cmpb
push
arpl
xchg
fisttpl
ret
adc
rcrl
fadd
aaa
cmp
movsl
cs
je
pop
repz
mov
stos
lret
jo
popa
fadds
ss
popf
add
leave
out
addr16
inc
xchg
andb
daa
cmp
ljmp
inc
outsl
jno
xchg
fs
mov
fs
push
in
loopne
jbe
or
cmp
outsb
mov
outsb
cmp
mov
cmpsl
in
dec
out
lds
ljmp
adc
addr16
call
sub
xlat
sbb
cmpsb
arpl
mov
scas
sub
jecxz
cmp
pop
cmp
arpl
or
xor
inc
xchg
les
mov
dec
popf
bound
xor
out
mov
cli
push
stos
or
std
outsb
icebp
inc
fwait
es
pop
loopne
dec
jb
or
in
xchg
imul
cmp
shrl
pushf
scas
hlt
fidivl
lock
pop
mov
jno
outsb
jg
call
dec
push
sub
pop
add
dec
addl
scas
jp
cwtl
dec
push
lret
dec
add
jl
mov
push
and
sub
fwait
ljmp
xchg
in
nop
cld
push
jmp
imul
stc
popl
pusha
push
inc
or
xor
mov
jne
pop
jbe
notb
xchg
xchg
ret
sarl
dec
add
lea
leave
cmp
cs
pop
mov
xchg
shl
push
dec
mov
or
sarl
push
pop
xchg
fs
shlb
dec
jge
sub
inc
xchg
xchg
cs
lock
data16
cmp
xor
icebp
dec
xchg
inc
jge
arpl
push
inc
rsm
sbb
push
xor
jmp
mov
dec
push
mov
test
enter
adc
div
inc
data16
test
testl
sub
add
xor
pop
in
pop
or
or
arpl
cmp
pop
push
sbb
xchg
xor
add
push
mov
inc
inc
mov
inc
stos
idivl
mov
or
mov
mov
add
ficoms
gs
imul
decb
pop
sub
add
out
add
mov
fstps
or
test
outsl
aam
sub
push
sahf
ficoms
daa
lods
push
push
inc
mov
inc
jae
xor
fstps
jnp
push
mov
inc
lret
mov
mov
sbb
adc
mov
aam
sbb
push
fsub
and
push
in
int
pop
lock
fidivrs
daa
add
addr16
lea
daa
and
adc
sbb
out
je,pn
pop
push
cld
nop
popa
xor
in
outsl
inc
add
and
sti
bound
test
jo
arpl
mov
insl
dec
jo
add
and
pop
in
int
sbb
pop
shrb
sub
xchg
in
lds
lret
insl
shufps
dec
lods
mov
scas
add
xchg
mov
stc
stc
xchg
sti
lock
lods
pop
and
sbb
daa
adc
push
pop
add
push
mov
or
movsb
dec
notb
scas
mov
iret
xchg
imul
cmp
sub
mov
rolb
add
int
inc
add
int3
sbb
pop
sbb
pop
sbb
or
mov
inc
out
in
add
sub
sbb
mov
arpl
in
pop
leave
je
fidivrl
push
subb
inc
and
dec
cmp
call
fistl
cmp
add
push
sbb
pop
ret
dec
fiadds
mov
xor
xor
lds
or
mov
fiadds
inc
cmp
loopne
dec
lcall
pusha
lock
fwait
lods
fisttpl
sub
mov
dec
xor
mov
popa
cmp
lret
or
inc
popa
outsb
pop
mov
add
jge
mov
cmc
fmulp
cmpsl
adc
jne,pt
sbb
push
jne
inc
or
cmpsl
rol
inc
mov
dec
out
mull
es
mov
cmp
mov
lahf
dec
xor
jo
sbb
ret
stos
testb
pop
add
mov
jle
outsl
jge
sub
push
inc
mov
jns
outsl
sarb
enter
adc
jns
xor
push
ret
imulb
bound
fsubrl
xor
or
data16
mov
cli
mov
push
out
mov
dec
and
add
xchg
sbb
dec
imul
sbb
pop
pusha
fmuls
loope
jp
mov
mov
lds
add
jmp
jg
mov
sbb
lods
adc
push
repz
pop
repnz
aam
rorl
mov
jne
loopne
jp
scas
adc
pop
adc
or
pop
iret
fadd
mov
dec
sbb
in
dec
data16
testl
cmc
jp
mov
xor
dec
mov
dec
jmp
adc
outsl
bound
push
sub
addr16
mov
rclb
add
lret
and
loopne
mul
cltd
outsb
out
xlat
pop
mov
and
pusha
pushf
movsl
sbb
iret
add
addr16
or
fwait
and
mov
rcrb
lret
je
cli
mov
xor
pop
fxch
hlt
cwtl
xlat
insl
loope
xchg
iret
ret
sbb
and
push
or
stc
roll
cld
inc
in
roll
inc
movl
sbb
xor
movsl
mov
mov
ss
mov
cmpb
leave
pop
push
fimuls
and
mov
dec
arpl
adc
fcmovb
or
bnd
sub
shll
dec
out
jle
imul
mov
jnp
xchg
sbb
mov
push
test
inc
xchg
adc
pop
pop
xor
sub
iret
je
movsl
fcoms
rorl
repnz
insl
imul
dec
xchg
test
addl
shll
fstps
daa
jne
add
sti
or
addl
lods
lahf
popa
inc
sar
sub
lea
fldl
push
sbb
adc
sbbb
aam
popa
mov
jnp
fwait
imul
nop
shr
xchg
cwtl
addr16
addr16
pop
jp
xchg
xchg
push
clc
orb
ret
outsl
pop
ljmp
push
sti
mov
push
lods
cmpsb
adc
out
mov
push
cmp
aam
mov
and
sbb
loop
inc
imul
mov
test
xor
sub
pop
sbb
sbbl
dec
call
cmp
cld
inc
smsw
sub
xlat
mov
mov
fldt
and
gs
clc
mov
pop
mov
ja
aaa
iret
xlat
pop
push
dec
pop
cmp
test
adc
inc
mov
adc
mov
clc
jno
aas
and
sbb
mov
das
decb
xchg
push
jo
gs
or
jecxz
sub
fwait
mov
pop
cmp
imul
cs
xchg
mov
jne
js
jae
movsb
inc
sbb
xor
inc
lret
cmp
adc
lock
xchg
inc
mov
popa
dec
jns
inc
xor
and
pop
outsl
xor
and
dec
push
popf
inc
push
decb
stos
ficomps
push
inc
test
inc
adc
sub
fidivl
lea
push
lds
sbb
movsb
nop
leave
xlat
inc
imul
aad
aaa
mov
jmp
std
or
sbb
push
dec
iret
pop
jbe
sub
packssdw
pusha
lods
and
sbb
sti
inc
insl
push
loopne
add
mov
cmp
jle
je
int
dec
nop
cs
push
stos
dec
iret
shll
add
mov
inc
mov
jg
aad
movsl
xchg
pop
cs
push
je
aas
xchg
and
cmp
sub
cmp
push
mov
push
rorb
mov
mov
cmp
div
jp
or
add
xlat
inc
test
lcall
idivb
cmp
addl
mov
dec
stos
loope
mov
dec
mov
xchg
add
lea
mov
inc
stos
inc
push
adc
lcall
stos
stos
outsb
inc
aad
sub
jmp
push
aam
jno
and
lock
roll
dec
sbb
adcb
ja
add
adc
inc
jg
jns
push
push
sub
xchg
add
xor
jno
iret
gs
pushl
or
mov
movsl
test
pusha
inc
cwtl
out
sub
insb
mov
push
in
adc
mov
sub
mov
mov
jle
xor
rolb
mov
rclb
or
in
je
outsl
mov
and
inc
ljmp
cmp
ficoms
xchg
fs
fsubrl
rolb
aam
cmp
xor
rorl
test
mov
push
cmp
adc
nop
add
add
popf
cltd
stos
iret
sub
imul
and
call
mov
xor
loop
fld
mov
sarl
xchg
mov
aam
fnstenv
cwtl
outsb
scas
jbe
xor
mov
push
jmp
insl
or
mov
daa
clc
aam
out
mov
mov
stos
sub
daa
fsubrl
dec
add
decb
mov
arpl
inc
out
ret
mov
xchg
in
jl
pop
pop
andl
xchg
jecxz
divl
push
icebp
xchg
inc
test
aaa
xchg
fdivs
arpl
out
nop
enter
adc
sub
jbe
cmp
insl
push
in
jle
loope
pop
pop
pop
mov
out
jbe
dec
aaa
jo
xchg
test
jg
je
push
mov
mov
scas
dec
mov
fisubrl
mov
ljmp
push
xchg
push
mov
movsb
loop
mov
std
and
mov
cmp
xchg
ss
push
dec
xor
sub
sbb
and
shlb
je
cmp
jne
xor
and
lods
push
bound
inc
test
pop
lret
mov
mov
int
popf
mov
popf
fwait
daa
std
bound
sarl
sbb
mov
aad
mov
fsubrs
xor
lods
popa
push
test
rcrl
enter
hlt
pause
push
mov
pusha
cmpsb
pop
pop
cmp
fimull
inc
pop
and
inc
cld
push
jns
stos
dec
roll
fmul
lret
pop
jb
lods
and
dec
inc
adc
push
lea
popa
rolb
or
lea
popf
pop
sbb
xchg
push
addr16
popf
data16
add
pop
xor
inc
jnp
sarb
jb
dec
jbe
pop
mov
outsl
aaa
or
mov
dec
sbb
jo
mov
push
mov
divb
inc
mov
ljmp
add
daa
rcrb
xor
inc
sub
add
cmp
pop
sub
cltd
movsl
adc
mov
pop
fiadds
lock
or
pusha
sub
or
jo
mov
jo
je
shlb
xchg
mov
xchg
aaa
xchg
adc
jle
add
std
mov
das
and
push
jmp
inc
push
push
cmpsb
adc
fdivr
hlt
pop
repz
cltd
jp
push
loopne
xchg
push
jmp
lret
in
iret
or
dec
mov
ret
cmp
std
jns
shlb
pop
dec
pop
xchg
das
xchg
inc
push
dec
rcrl
fdivrs
jae
sbb
es
or
sahf
add
in
adc
xchg
push
in
in
dec
shl
fisubs
out
jb
xor
mov
cld
sbb
jb
mov
jae
mov
rcr
dec
jne
cmp
popf
int3
fwait
and
jmp
shrb
sub
cmp
adc
fisttps
stc
jnp
int3
mov
jmp
push
and
sub
inc
sbb
lea
pop
push
jl
test
xor
mov
aad
popf
push
pop
push
lret
ljmp
cwtl
fidivrl
xchg
pushf
xchg
push
mov
test
pop
xor
fdivrp
test
jl
xchg
pop
out
imul
sub
outsb
jecxz
sbb
mov
fdivs
insb
or
enter
push
or
dec
pop
sub
cmp
divl
or
dec
jmp
pusha
or
incl
pop
mov
cmp
and
and
add
and
inc
cli
cmpsb
cmp
mulb
out
mov
ret
xor
fidivrl
sbb
and
and
jmp
xchg
lods
jno
std
inc
mov
inc
ret
mov
aad
loope
test
jecxz
pop
cmp
jecxz
push
es
ret
push
icebp
stos
cmp
mov
jl
jecxz
insl
mov
push
cmp
add
mov
mov
test
in
jno
test
in
xor
inc
das
sub
jmp
jp
lahf
xchg
loope
add
and
pusha
cmpsl
pop
mov
movsl
jbe
sub
mov
stos
push
inc
inc
lods
inc
sub
pop
pusha
rorb
les
int
test
xor
xchg
cmp
pop
mov
and
cmp
inc
mov
mov
xor
gs
and
ss
and
cmpb
popf
addl
pop
cmpsl
pop
in
pop
add
popa
sbbb
mov
testl
pushf
push
lock
inc
je
pop
cwtl
cwtl
test
dec
jmp
repz
cmp
cmc
cltd
daa
movsb
sbb
pushf
shlb
lret
repnz
adc
ror
mov
out
popa
mov
xchg
bswap
pop
mov
jo
add
sub
pushl
or
out
iret
cmp
cmp
repnz
imul
les
icebp
xor
jle
mov
popl
jne
jne
in
xchg
shlb
imul
add
gs
clc
mov
cltd
fistl
jne
push
insl
and
push
test
dec
mov
cmc
aas
jb
into
clc
lret
stos
adc
jl
imul
test
icebp
lret
loope
jle
shrb
adc
fdivrp
andb
pop
call
sub
les
arpl
mov
insl
out
mov
cmpsb
ret
inc
sbbl
mov
pop
dec
jo
pop
xlat
jl
pop
sub
xlat
imul
std
cwtl
sar
addr16
dec
push
fs
xor
mov
mov
pop
xor
call
mov
ja
sub
jne
sbb
and
popf
cmp
jne
out
xlat
or
imul
dec
in
loop
mov
stc
pop
jnp
pop
addb
clc
xchg
and
dec
lcall
stos
lcall
cmovno
sub
cmpsb
xchg
shll
ret
mov
adc
in
mov
add
mov
or
pop
fidivrl
icebp
int
mov
lea
adc
lcall
xchg
push
mov
inc
imul
mov
out
xor
sahf
dec
repnz
test
lea
push
test
fwait
push
add
sbb
lcall
inc
rcll
push
or
xor
arpl
mov
push
sbb
rorb
pop
scas
adc
push
xchg
add
insl
daa
and
cltd
push
jno
dec
andb
xchg
and
push
push
jne
ds
or
insl
cmp
int
ror
lods
adc
xchg
inc
cs
sbb
add
pusha
sbb
loope
aad
js
ret
pop
shll
incl
mov
cmc
push
mov
sub
sub
xchg
dec
insb
pop
out
lahf
int3
pop
cld
inc
aad
mov
scas
mov
jns
cmpsb
mov
mov
jp
iret
and
or
xchg
inc
movsb
pop
rcll
pop
test
hlt
lods
adc
aas
jmp
jb
aaa
and
jl
fcompl
pop
out
adc
loope
mov
push
les
hlt
int3
clc
stos
int
in
mov
les
mov
and
add
in
xchg
push
sti
test
testb
mov
clc
aaa
sbb
insb
clc
fimull
cmpsb
mov
and
push
int3
cld
stos
xor
movsb
ss
divl
cmpsl
popf
es
in
lock
test
or
movsl
cli
jae
mov
add
sub
mov
insl
adc
xor
sub
ljmp
mov
push
dec
ss
mov
lock
sbb
in
lods
xchg
mov
fnstenv
sub
xor
inc
lret
lds
in
adc
jnp
lea
jbe
xor
dec
push
mov
pop
arpl
movsb
testl
adc
sub
testb
xchg
icebp
cmp
lret
mov
inc
dec
outsb
adc
jnp
xchg
sub
or
fidivs
jnp
adc
push
std
popf
xor
mov
movsb
or
cmp
fistl
and
je
mov
adc
xchg
push
bound
addr16
not
push
adc
mov
ds
pop
cld
repnz
inc
sbb
stos
sub
xchg
adc
mov
cmp
and
enter
outsb
xlat
sub
shl
cmp
sahf
xlat
mov
std
adc
jp
mov
cmpsb
push
lock
cmp
insb
outsl
xor
lock
pop
gs
push
aam
push
dec
fwait
sahf
and
mov
data16
test
outsb
fsts
cltd
repz
out
es
fistps
sbb
adc
nop
ror
ret
loope
jecxz
mov
iret
cli
insl
or
or
in
jp
inc
imull
movsb
je
inc
adcb
fisubrs
pushf
testb
sub
xchg
jo
leave
ds
inc
sbb
outsl
xor
aad
mov
int3
pusha
sbb
ss
cli
push
out
jnp
push
dec
add
and
dec
jae
popa
jmp
jg
lcall
stos
insb
pop
incb
int3
mov
test
aam
sub
pushf
add
clc
imul
xchg
mov
xchg
subb
cmp
or
mov
lods
lds
xor
jae
addb
shl
jge
bound
jno
movsb
data16
jmp
aad
enter
mov
add
sub
imul
inc
lret
enter
shll
outsl
outsb
flds
lahf
out
xchg
pop
ds
sbb
aad
aam
inc
mov
roll
pusha
fwait
push
sub
cmp
xor
push
sbb
xor
es
fnsave
dec
jl
inc
xchg
push
sbb
arpl
jmp
fidivs
mov
movsb
add
shlb
jge
adc
mov
jo
push
xchg
mov
jge
pop
lret
mov
insl
test
cmp
pop
jbe
push
push
push
leave
inc
std
pop
sbb
or
lret
data16
lret
in
jbe
imul
add
cmpsl
in
popf
movsb
sub
lods
jle
outsl
gs
and
pminsw
sub
xchg
xchg
mov
jo
pop
lret
idivb
ja
jb
mov
shl
fcos
push
and
inc
add
nop
out
ja
loopne
mov
push
lcall
lods
push
rclb
mov
nop
cmp
push
stos
mov
adcb
rol
fcomps
pop
jg
jae
pop
push
sub
xor
stos
rorl
sahf
fmuls
mov
fiadds
shrl
or
push
fldt
mov
lods
orl
in
inc
out
cli
lret
pop
push
data16
push
int3
fcoml
movsb
stc
push
call
or
insl
sub
movsl
rcrl
gs
inc
push
jge
mov
xchg
push
mov
ja
inc
popf
sbb
movsl
dec
fs
or
rcrl
ret
mov
jno
div
shll
mov
and
pushl
in
popl
mov
lods
out
or
mov
push
pop
jle
sbb
mov
hlt
push
pusha
sbb
mov
dec
jge
mov
sub
cmp
jp
enter
sbb
mov
pushf
push
dec
pop
ss
ds
rcrb
fdivp
jbe
rcrl
lret
in
adc
call
lcall
inc
fdivrl
pmaddwd
mov
mov
lret
cmp
push
sub
push
test
pop
notl
inc
mov
std
cmp
icebp
out
cmpb
pop
xchg
jnp
inc
repnz
mov
frstor
inc
std
sbb
xchg
pop
js
in
lods
push
adc
or
ficomps
and
xor
stos
lea
stos
sub
addr16
imul
mov
movsb
and
xchg
dec
nop
test
aad
cmp
ds
movsb
fs
push
dec
movsl
mov
lods
out
test
leave
cltd
or
dec
out
pusha
daa
stos
adc
ret
rcrl
xchg
mov
lods
movb
movsb
pop
movl
lock
xlat
cli
mov
dec
adc
sub
inc
cmpsb
xchg
arpl
or
stos
dec
pop
clc
gs
cwtl
jge
cmpsb
xlat
test
les
aam
mov
in
mov
and
loopne
sahf
sub
dec
dec
and
adc
lea
loope
lahf
jo
mov
pop
dec
jbe
sub
dec
fimuls
xchg
rcrb
pop
xor
test
test
outsb
orb
sub
adc
sub
movsl
cmp
or
dec
test
pop
sti
orl
es
push
cmp
icebp
dec
mov
pusha
addr16
pop
imul
mov
in
cltd
dec
cmp
mov
pop
or
mov
insl
fwait
adc
push
fiadds
or
inc
inc
lods
loopne
lods
jb
dec
fnsave
mov
add
pop
mov
mov
cs
cmp
stos
icebp
jg
xchg
add
cmp
pop
sub
test
sbb
and
sbb
iret
iret
mov
mov
mov
lock
movsl
aam
and
push
xchg
loop
cld
cli
test
dec
dec
lretw
cltd
out
mov
int
inc
repnz
fwait
jbe
in
popa
mov
sbb
jns
sbb
leave
lret
push
and
cmp
sbb
inc
or
hlt
mov
inc
lret
xor
cmp
jl
jmp
daa
sti
lret
sbb
and
lods
add
in
push
adc
movsl
lds
cli
pop
dec
jb
xor
test
stc
scas
xchg
aad
rorb
add
xor
dec
hlt
pop
jp
fiadds
jmp
xor
pop
dec
imul
data16
into
xor
fld
pop
in
cmpl
xchg
insb
sti
xlat
dec
jnp
int3
insb
inc
fs
outsb
stos
mov
xorb
lea
shrl
int
popf
mov
ret
scas
dec
push
add
pop
fadds
adc
jp
mov
cmpsl
mov
inc
inc
imul
inc
and
gs
lock
xor
sbb
mov
and
fisubs
jecxz
jnp
arpl
out
int3
negb
add
add
fs
rcrl
mov
lods
pop
xchg
mov
ss
int3
inc
or
sti
mov
mov
les
inc
inc
es
xor
ds
inc
mov
mov
lods
sub
mov
mov
test
add
jp
sbb
pop
jl
or
mov
lea
loopne
mov
xor
push
or
jo
jns
call
mov
lret
sahf
fsubrs
jecxz
sub
pop
jmp
lds
cmp
fidivs
dec
inc
pop
mov
and
insl
dec
pop
dec
out
xor
push
mulb
pop
shrl
sub
repnz
outsl
mov
jg
fdivrl
jecxz
call
sub
jp
jne
jl
and
fidivl
mov
mov
adc
sbb
rcll
mov
lret
stc
mov
bound
and
or
or
mov
data16
ljmp
leave
rcrb
lods
mov
push
loope
fldl2e
pushf
ja
stc
js
pop
push
fiadds
mov
add
adc
les
push
push
adc
mov
inc
sahf
push
jle
lret
ljmp
mov
rcr
mov
popa
mov
cmp
xchg
bound
push
cmp
push
es
fwait
xchg
inc
cld
out
ret
inc
xchg
sub
cmc
sub
jne
cltd
in
mov
inc
inc
xchg
push
adc
fbld
mov
adc
repnz
add
clc
lahf
xlat
mov
xchg
fidivrl
in
push
fs
pop
aaa
sahf
xchg
pop
insl
sub
push
ljmp
xchg
insl
pusha
insl
or
lds
mov
dec
adc
pushl
sbb
aad
pop
mov
or
lock
jmp
mov
adc
xor
adc
subl
movsb
leave
out
mov
movsl
les
call
or
fistpl
icebp
loope
jne
fdivs
in
cmp
jmp
xchg
mov
and
ds
inc
addb
xchg
repnz
in
fimull
shl
loop
or
nop
lcall
test
movsbl
push
sub
in
jno
ss
out
mov
dec
mov
cs
addr16
lcall
or
mov
and
into
mov
push
dec
mov
sbb
jmp
filds
sar
jbe
pop
or
jge
and
imul
or
or
and
mov
popa
repnz
xor
push
mov
ljmp
xor
push
cmp
lret
mov
ljmp
push
lods
test
cld
inc
js
xor
pop
pop
xchg
sbb
sbb
mov
dec
test
pop
int3
cmpsb
and
or
mov
into
cwtl
int
jae
mov
jle
jp
sti
popa
das
jno
out
cmp
aas
test
xchg
and
add
inc
add
inc
jl
test
leave
je
ss
fmuls
jp
dec
and
test
fldenv
mov
mov
inc
push
inc
mov
jne
cltd
add
xor
push
mov
movsb
sbb
outsb
leave
ss
jne
dec
pop
pop
fnsave
lock
jg
jecxz
inc
sahf
popa
movsl
aaa
adc
jge
popf
std
std
das
xlat
lock
inc
push
mov
cmpb
xchg
dec
dec
enter
adc
sbb
inc
pop
loope
lret
add
cli
je
mov
cmp
mov
pop
cmp
mov
mov
inc
push
cltd
fdivs
push
out
sbb
adc
mov
ss
aas
data16
sbb
or
sarb
inc
adc
out
sbb
jmp
or
repnz
fadds
jns
jne
je
xchg
xchg
dec
inc
dec
adc
fstpl
in
mov
jl
testb
call
out
rclb
lret
lods
mov
adc
push
ds
int3
push
iret
push
pop
call
and
inc
add
inc
add
dec
push
xchg
jne
adc
jnp
insb
std
push
fbstp
inc
mov
call
inc
sub
in
xlat
cmp
stos
fistpl
dec
stc
fs
sub
les
bound
shlb
pop
sbb
jg
mov
push
mov
leave
nop
ja
jge
fstps
lock
ret
int
sbb
adc
xlat
xchg
imul
mov
cmp
mov
cmp
ljmp
out
es
idivb
lods
cmc
ja
fs
mov
xchg
outsl
push
pop
lret
lret
xchg
xorl
clc
inc
in
mov
or
mov
push
sbb
jecxz
rorl
gs
push
inc
xchg
pop
jne
pop
lret
push
leave
jg
adc
stos
sub
fisubrl
out
jmp
add
scas
sub
pop
pop
sbbb
push
in
pop
sub
xchg
sbb
rcll
mov
push
mov
fmuls
cli
insl
xchg
mov
push
inc
movsb
mov
call
mov
lret
call
nop
xchg
out
test
je
aam
in
cs
pop
movsb
dec
ljmp
mov
nop
loop
pushf
jge
jl
adc
ds
stos
hlt
xchg
fildll
sarb
inc
sahf
inc
or
jnp
or
inc
mov
and
push
nop
jnp
shll
decl
inc
xorb
push
cmp
pop
mov
push
xchg
xor
out
sti
dec
mov
cs
cmp
js
jmp
jnp
js
ret
jo
lea
repz
jge
mov
jns
movsl
lret
fs
push
loopne
mov
mov
jno
cmp
pop
cli
aas
inc
push
push
sahf
ss
push
in
iret
dec
repz
cmp
pop
jmp
adc
sbbl
and
fcomps
lods
loopne
or
push
sbb
mov
adc
fadd
stos
push
xchg
arpl
jg
xlat
shr
push
pop
sti
enter
mov
movsb
sbb
mov
fwait
jo
push
dec
add
in
add
das
stc
mov
or
fldt
add
dec
dec
lds
insl
add
mov
adc
jle
jp
jne
push
xor
fidivrl
inc
out
push
jo
into
xor
ss
jmp
add
jg
push
loop
sbb
push
mov
dec
inc
sub
mov
mov
xchg
dec
fdivl
aaa
out
jl
mov
stc
mov
add
repz
and
ss
cmp
aas
mov
inc
les
add
das
jle
xchg
mov
cld
movl
inc
mov
cmp
outsb
mov
mov
add
and
and
and
xchg
mov
mov
dec
add
push
lods
icebp
inc
cmp
xor
or
insl
or
push
ljmp
or
enter
push
jmp
cmp
nop
imull
dec
push
scas
es
int3
and
xchg
xchg
pop
or
outsb
push
in
loope
dec
addr16
jb
adc
sbb
adcl
mov
cmp
adc
jl
fwait
lods
cwtl
add
std
out
notl
pop
dec
nop
or
roll
insb
inc
in
jns
inc
sbb
decl
add
xor
out
int
push
lods
or
adc
test
test
lcall
or
xor
out
cmc
fs
xor
cld
sub
jnp
dec
mov
fidivl
fidivl
fwait
jno
shll
das
mov
sbb
push
out
xchg
decl
lock
jne
addl
sbb
and
in
jb
aas
scas
imul
rorl
sarl
fs
imul
xorb
push
xchg
mov
stc
jne
and
dec
sarl
pop
loope
jns
xor
cli
mov
in
jge
test
pop
add
jle
mov
xchg
xlat
cmp
sbb
imul
mov
lcall
or
les
inc
mov
out
cmp
or
sbb
push
jmp
add
ljmp
cmp
xor
dec
add
mov
hlt
pop
shrl
aad
loope
inc
mov
or
or
and
fnstenv
push
xor
hlt
jmp
inc
jo
cld
out
cmp
test
add
notl
stc
adc
cmp
fstl
jns
inc
in
mov
insl
mov
icebp
fidivrs
xchg
jle
fs
pop
mov
mov
cmp
pusha
repnz
fiadds
add
loopne
or
lahf
cli
jb
cmp
in
arpl
or
or
sbb
adc
jns
sub
jno
xor
fldt
std
repnz
or
adc
cli
adc
and
rcr
in
mov
movsb
int3
dec
cmp
add
mov
rolb
repz
js
into
mov
das
mov
sbb
or
aaa
xchg
fnstsw
mov
std
adc
stos
mov
mov
out
sub
dec
imul
lock
leave
fidivs
insl
outsl
ret
mov
movl
adc
jmp
jo
jb
adc
cmp
jle
ss
inc
dec
inc
sbb
xlat
jbe
push
loopne
push
lods
scas
test
loop
or
dec
xor
icebp
jne
jmp
dec
jo
jecxz
cmpsb
cmp
outsb
dec
push
push
insl
ds
jns
scas
mov
cmp
aad
ljmp
aad
cmc
leave
test
clc
addr16
jae
enter
in
xchg
inc
sub
jg
in
fs
pop
push
pop
sub
nop
aaa
mov
pop
vmulps
lahf
xchg
into
std
sbb
mov
inc
fwait
daa
add
jl
xchg
sub
dec
lods
mov
lret
xchg
cltd
fsubp
in
das
stos
sub
adc
rcr
cmpsl
and
or
in
sbb
mov
add
ficomps
and
mov
test
cmpsb
inc
shrl
pop
pop
lds
push
adc
push
ljmp
std
cmp
leave
fsubrl
pop
pop
insl
sbb
jg
int
idivb
sub
aas
xchg
push
ja
clc
outsl
inc
lods
das
outsl
lea
shll
jmp
cmpl
inc
adc
xchg
insb
mov
xchg
mov
xchg
jl
shll
dec
imul
inc
shl
cmpsb
lods
adc
sbb
cltd
mov
adc
rclb
mov
adc
mov
dec
sbb
push
xchg
jb
xor
nop
mov
and
pop
sbb
arpl
int3
mov
mov
mov
and
mov
xchg
mov
add
and
call
shlb
dec
mov
movntps
push
xorb
call
jae
push
mov
lret
add
or
inc
cmp
lcall
sahf
testl
je
add
aaa
push
xor
inc
xchg
cmp
push
into
sbbb
mov
sub
pop
in
sub
jbe
push
inc
aas
cmp
enter
outsl
fwait
adc
push
dec
test
dec
pusha
scas
jo
dec
push
mov
enter
adc
out
ficomps
pop
int
inc
in
mov
roll
int3
cmp
sarb
and
adc
mov
das
int
adc
or
sub
jle
xchg
sbb
popa
pop
lea
inc
in
xor
mov
fucomp
das
push
inc
push
es
hlt
inc
sbb
xor
testl
add
in
icebp
addr16
jnp
mov
cmpxchg
xchg
xlat
test
adc
xchg
sbb
adc
enter
dec
xchg
sub
lds
mov
rcl
jge
nop
cltd
div
call
dec
mov
fisubs
dec
loope
mov
stc
sbb
idivl
sbb
xchg
ss
push
mov
push
loopne
inc
dec
inc
aas
push
sub
jl
loope
push
pop
push
inc
dec
fcomps
jb
rolb
fsubrs
pusha
push
adc
cmc
fimull
xor
lahf
xchg
adc
xchg
and
out
or
insb
cmc
or
add
adc
outsl
cmp
mov
insb
ja
cs
lahf
divl
sbb
loop
sbb
fcoms
arpl
and
push
aam
icebp
jg
pop
push
jmp
dec
inc
sbb
shrb
loop
cli
out
rorb
cmpsb
cld
adc
mov
leave
repnz
jle
pop
insb
lcall
bound
add
mov
add
imul
dec
shl
and
test
rcrb
pop
push
fisubl
aaa
sbb
jnp
jl
loop
adc
or
inc
test
mov
test
lds
xchg
notb
cmp
push
out
pusha
outsl
fisubl
icebp
adc
mov
pop
jne
xor
hlt
inc
je
loopne
ret
dec
adc
cmpsb
lock
jl
add
ja
or
in
inc
fldl
js
pushf
push
into
jno
es
pop
mov
adc
mov
push
cmp
call
out
xchg
or
add
arpl
leave
push
push
cvtps2pd
dec
das
lock
int3
xor
sub
jg
mov
addb
push
xor
ss
out
mov
pop
rorb
test
mov
and
loope
adc
stos
sub
int3
push
add
jecxz
divl
aas
mov
ret
jno
push
pop
int
sbbb
pusha
xchg
nop
mov
xlat
inc
daa
xchg
data16
mov
andb
sub
loope
lock
jmp
xchg
sub
ss
pop
into
cs
pop
inc
pop
xlat
pop
dec
insb
decl
enter
sbb
mov
pop
dec
jne
filds
push
lahf
cld
dec
in
ds
insl
mov
push
xchg
std
pop
adc
in
xchg
lret
or
mov
flds
pop
fimull
call
ficoms
dec
addl
push
arpl
repnz
sbb
mov
insb
lahf
test
pusha
aas
lret
test
roll
cmpsb
lock
pushf
pop
sbb
imul
ds
xchg
pop
sbb
mov
cld
jae
mov
jae
out
sbb
repz
inc
add
adc
pop
mov
add
ret
pop
dec
jge
pop
cmpsl
mov
xor
fldenv
and
push
clc
xor
push
rcrb
xchg
jl
adc
sub
lret
int
not
stos
dec
dec
js
sub
lret
icebp
push
in
xchg
dec
pop
iret
jae
pop
in
pop
pop
cwtl
cld
iret
pusha
sub
popf
and
mov
loope
and
inc
out
add
fisubrl
push
dec
sub
in
mov
pop
adc
xchg
push
inc
push
dec
mov
push
xor
or
sbb
mov
mov
mov
lock
xor
hlt
ret
push
xchg
push
lods
nop
test
dec
mov
cmpb
inc
xchg
inc
in
movsl
jo
sbb
jmp
jp
mov
adc
push
or
idiv
imull
gs
xchg
mov
data16
push
dec
cs
cli
mov
push
daa
pop
in
andb
xchg
ret
mov
jecxz
sub
xor
test
xor
fisubs
out
inc
fistps
adc
dec
stc
jge
popa
push
lret
je
push
sbb
push
xor
aam
enter
dec
imul
mov
cmpsb
pop
ljmp
xor
fcom
shlb
sbb
xchg
cmp
cltd
out
daa
xchg
movsl
jb
xor
push
xor
mov
mov
jb
mov
addr16
add
sub
jle
xor
pop
sbb
push
lea
mov
call
stos
fwait
enter
mov
loopne
cld
cmpsb
push
rolb
rcl
notl
mov
aad
jge
je
adc
sub
xchg
dec
jae
pop
mov
xor
loop
jge
jp
or
mov
test
add
shrl
lcall
lds
mov
sbb
or
mov
ret
dec
push
cmp
sub
inc
dec
pop
push
mov
cmc
push
in
ja
decl
jb
loop
push
mul
shufps
cs
or
cmp
aaa
push
outsl
sahf
stos
fst
sbb
or
inc
lea
das
add
mov
lods
fidivrl
push
daa
and
rolb
inc
cs
inc
fistpll
mov
cmp
leave
push
and
call
sbb
push
addl
hlt
pusha
mov
pushf
mov
sub
out
shlb
inc
jae
sti
ljmp
out
mov
adc
test
imul
xchg
jl
gs
negb
mov
pop
pop
jmp
ja
test
push
mov
enter
jl
sbb
inc
mov
cltd
cmc
pop
mov
out
push
pop
test
movsb
cmp
xchg
mov
pop
inc
cmp
insl
mov
into
inc
call
call
loop
inc
jne
adc
loop
cli
pop
mov
jmp
cmp
or
or
pop
sbb
cwtl
pop
fsubs
pop
xchg
pop
jnp
push
subl
sub
pop
cmp
mov
cmpsb
jns
dec
js
xor
pop
shll
scas
gs
shll
inc
sub
lahf
es
lods
jae
cltd
test
outsl
ret
adc
ss
arpl
nop
inc
stos
insb
in
fwait
aam
fucomip
mov
dec
and
jmp
xorl
cld
xchg
loopne
cmpb
adc
inc
pop
rorb
lahf
lods
popf
xchg
imul
les
stc
loope
repnz
loopne
ficoml
repz
scas
mov
sarb
fxch
pop
jae
and
outsl
xor
cld
and
in
cmp
push
inc
mov
xor
call
or
sub
adc
mov
jg
fnsave
in
out
pop
into
pop
aad
testl
xchg
repnz
test
xchg
xor
stos
ja
sbb
xor
or
sbb
xor
mov
pushf
push
imul
pushf
rcll
xorl
push
int
xchg
sub
push
ss
mov
xchg
xorb
xchg
imul
filds
cld
mov
std
add
jl
push
addr16
push
loop
data16
cltd
rcrb
test
inc
int
test
shll
xchg
aad
clc
push
fisttpl
loopne
pop
xlat
jb
cmp
sti
fstl
negb
divb
shl
cmp
inc
pop
lods
push
and
xchg
loop
xchg
fsub
xlat
or
and
mov
popa
mov
adc
add
mov
cmp
loope
mov
xchg
mov
lahf
popf
hlt
inc
push
cmp
cli
dec
mov
fsubrs
pop
mov
xchg
pusha
popf
sbb
push
dec
iret
sbb
jo
jne
mov
ret
pop
inc
jo
push
test
cltd
add
test
cmc
movsl
xchg
adc
add
dec
pop
imul
pushf
mov
jo
imul
fstl
test
pushf
jle
mov
js
push
mov
xor
rolb
cmp
mov
push
adc
movsb
adc
cmpsb
bound
push
jecxz
fs
ljmp
cmpsl
push
mov
test
xor
push
xor
outsb
mov
lret
rol
pop
jbe
enter
popa
aam
mov
into
pop
xchg
pop
scas
xor
enter
cmp
push
sub
adc
fcmove
and
cmpsl
pop
dec
push
jecxz
ret
rcrb
fldt
xchg
cmp
or
xchg
outsb
fstpl
inc
or
mov
imul
jb
cmpl
addr16
data16
sti
imul
xor
push
sbb
ror
sub
aad
lock
inc
ret
iret
pop
cld
or
jno
jge
mov
sbb
inc
scas
sub
inc
or
cmp
icebp
repz
adc
arpl
mov
jge
orb
out
inc
andl
adc
leave
sub
popf
mov
sub
testl
jle
mov
xlat
mov
test
sahf
cld
sub
xchg
pop
ror
test
mov
xchg
dec
mov
fmuls
repz
mov
add
dec
sub
lret
xor
mov
jp
ss
mov
xor
imul
jbe
jg
inc
test
push
mov
pop
jbe
push
push
mov
mov
imul
lcall
jmp
jmp
pop
cmc
and
js
dec
fwait
je
fwait
inc
inc
cmpsb
sub
out
mov
iret
mov
scas
sbb
jge
add
mov
inc
outsb
cwtl
push
icebp
dec
adc
push
scas
imulb
adc
lret
outsl
pop
sbb
stc
ret
lods
lock
push
subb
xchg
pop
out
rcl
sbb
jl
sarb
jae
shrb
js
scas
movsl
lock
mov
stc
jmp
sub
stos
xchg
movsb
ret
inc
jbe
daa
adc
loop
fbld
adc
mov
sbb
test
mov
or
adc
out
jle
xlat
dec
pop
xlat
pop
adc
mov
fdivl
nop
mov
mov
inc
call
mov
xchg
les
pop
sbb
and
mov
repz
faddl
add
ja
sarl
sahf
out
int3
sbb
jmp
pop
cmpsl
push
ja
sbb
add
adc
idiv
xor
dec
dec
in
dec
push
pop
xchg
scas
insb
cmp
sbb
stc
pop
jnp
std
adc
push
push
add
dec
movsb
inc
sub
fsubrl
jg
stos
dec
xchg
jmp
scas
js
or
stc
in
call
xor
test
imul
dec
scas
into
mov
mov
jns
mov
js
rcll
or
ret
std
rorb
dec
ds
jmp
xor
repnz
out
or
or
test
in
sub
adc
dec
repz
mov
sub
lahf
add
dec
or
pop
xor
lds
or
sbb
push
sbb
jl
xchg
jecxz
loop
inc
lock
mov
std
mov
push
arpl
xchg
in
dec
push
lret
fsts
mov
dec
sarb
enter
mov
and
or
out
insl
lods
xchg
jg
lea
mov
ja
popf
cmc
addb
scas
jb,pt
inc
push
in
cmc
mov
jge
pushf
popa
rorb
dec
lcall
loope
xchg
pop
xor
mov
dec
pop
push
pop
dec
and
xchg
repz
imul
int3
inc
add
push
lret
adc
mov
jmp
cmp
jle
fsubrs
test
push
sub
and
inc
pop
data16
dec
pop
push
cmpsl
lock
movsl
mov
xor
push
lret
push
or
xchg
hlt
cli
scas
aas
mov
stos
adc
push
mov
xchg
ss
rclb
movsbl
push
insl
call
lods
adc
adc
in
inc
rclb
jp
push
cmp
jle
clc
cmp
fcompl
out
xchg
xor
mov
sbb
jne
cmp
in
pop
std
sti
lcall
ljmp
sar
push
stos
ret
cs
xor
std
mov
mov
movsb
xchg
lock
or
movzwl
add
lcall
cmp
lret
lds
push
xchg
jb
pop
mov
push
fadds
aad
cmp
mov
cltd
shll
mov
jge
inc
clc
fdivp
test
xchg
test
test
add
sub
pop
jns
push
fisttpl
jb
pop
inc
and
popf
addr16
jno
cs
movsl
rcl
or
test
cmp
xor
bound
imul
mov
addr16
rclb
in
mov
movsb
call
cmpsl
xor
add
or
mov
mov
movsb
xor
inc
call
fsubrs
sbb
fdivrl
aaa
lcall
xor
adc
sbb
inc
das
add
lahf
jmp
xor
fidivs
and
add
jb
rcll
pop
aam
sti
jg
adc
cld
cs
xchg
sub
add
jge
mov
inc
sbb
or
shrb
scas
cmpsb
mov
sub
adc
jb
mov
sbb
mov
std
aaa
imul
xchg
push
pushw
clc
push
mov
cmp
or
lcall
cmp
jmp
mov
xor
mov
mov
fcomps
andl
cmp
mov
gs
pop
jge
mov
test
test
xor
push
dec
push
pop
mov
test
add
mov
mov
pop
pop
push
lods
xchg
fadds
mov
fpatan
jno
popf
or
in
roll
inc
cltd
mov
dec
cmp
sbb
ljmp
or
ljmp
pop
aaa
imul
mov
stos
push
test
loop
mov
cwtl
mov
inc
xorb
sub
lret
je
jb
loope
jae
push
and
adc
or
cmc
adc
push
inc
xchg
inc
jbe
dec
push
pop
lock
cmpsl
mov
jne
xchg
pop
add
int3
push
xlat
jnp
mov
mov
nop
and
adc
jp
lock
dec
mov
sub
sbb
push
sub
fwait
cmp
mov
lea
std
bound
push
jmp
xor
jle
add
pop
scas
jbe
dec
rcrl
or
xor
mov
pop
jne
test
inc
adc
adc
add
mov
pushf
mov
adc
mov
fstpl
ss
iret
in
cmp
ds
xor
xlat
negb
mov
mov
sbb
jae
xchg
pop
mov
setnp
and
dec
lea
xor
ret
adc
add
cli
mov
inc
mov
or
lea
dec
cwtl
js
mov
cmp
and
jl
cmc
xlat
icebp
push
push
in
inc
adc
shlb
jnp
push
cmpsb
and
dec
lods
sbb
cmpsb
outsl
lret
ret
popa
cmp
fcoml
mov
sub
push
jo
daa
loop
dec
fstpl
or
loop
adc
in
in
jo
icebp
test
cmc
ljmp
in
pop
xor
fmuls
stos
ds
lret
ds
sbb
fcmovb
repz
aad
cmp
add
das
icebp
cli
and
pop
sbbb
add
xor
aaa
out
fistps
dec
xchg
mov
fucomip
and
icebp
shl
jecxz
xchg
nop
mov
out
dec
out
add
movsl
jmp
or
imul
push
pop
std
push
scas
cmp
inc
dec
sbb
cmp
dec
add
insb
loope
sbb
in
xchg
push
das
in
mov
in
cmp
adc
loope
mul
cltd
dec
inc
fisubl
fdivrl
sub
icebp
sti
dec
or
sub
test
pop
add
nop
add
ja
pop
push
dec
in
xor
aaa
sarb
ret
inc
add
push
repz
lret
fs
out
nop
dec
bound
add
inc
cmp
mov
pusha
hlt
pop
call
jecxz
mov
xchg
jnp
mov
movsl
stos
jge
push
out
out
in
stos
arpl
das
push
int
loopne,pn
inc
into
stos
and
lret
inc
scas
shr
adc
outsl
imul
arpl
xor
in
aad
adc
or
push
and
mov
leave
or
jb
aad
loopne
lods
push
inc
imul
mov
imul
xchg
cmp
and
xchg
xchg
scas
push
pop
arpl
and
arpl
cmc
pop
push
sti
mov
lcall
lcall
adc
jo
out
in
push
stos
push
hlt
stos
stos
test
rolb
enter
dec
push
add
stos
pop
add
or
movsb
inc
and
pop
cwtl
fucomp
jmp
inc
fidivrs
or
fiaddl
xchg
in
out
pop
xor
ret
lahf
cmp
jns
bound
sbb
scas
or
jg
and
mov
int3
inc
fadd
lods
push
daa
cmpsl
mov
jle
xor
stos
xor
mov
mov
insl
xchg
lods
je
jp
sbb
or
fcoms
mov
or
ss
add
stos
jns
pop
enter
sbb
lret
pop
insl
pusha
rcrl
push
mov
sub
fwait
nop
subl
add
das
aad
jno
sbbl
fnsave
decl
repz
push
xchg
outsl
test
in
jb
fstpl
sbb
in
stc
lret
cmp
lods
jmp
roll
out
mov
popf
lcall
adc
xchg
xchg
roll
cltd
dec
and
or
aaa
test
lea
rolb
inc
in
fdivl
test
scas
xor
js
cltd
mov
int3
pop
push
adc
fisubrs
inc
gs
mov
and
xchg
lret
dec
inc
repnz
fldenv
test
shr
icebp
mov
jmp
xchg
pop
lds
ljmp
sbb
lret
pop
test
sbb
mov
push
and
int
clc
data16
mov
sahf
cld
jmp
xorb
mov
mov
or
loopne
aaa
lods
or
sbb
bound
pushf
jo
movb
mov
scas
add
push
nop
adc
xchg
adc
out
jne
jmp
mov
mov
lea
mov
shll
fimull
gs
mov
test
xchg
mov
or
out
mov
mov
popf
out
out
dec
push
or
push
test
aas
sub
js
cwtl
push
leave
roll
mov
int3
mov
aad
lock
inc
push
mov
mov
fsubrl
in
mov
mov
pop
add
nop
mov
or
sahf
pop
and
inc
insb
imul
bound
mov
mov
lret
rcll
mov
fiadds
sub
cmpsb
xchg
test
loopne
push
js
sub
jecxz
jns
in
dec
dec
jnp
aaa
test
aad
dec
jnp
push
imul
pushf
cmp
leave
fs
jne
js
test
dec
xchg
fisttpl
jmp
mov
mov
andl
out
pop
mov
stc
jecxz
push
jae
push
mov
pop
dec
in
and
adc
mov
adc
dec
jbe
lcall
dec
jp
sbb
push
cltd
sub
scas
xchg
adc
inc
in
jnp
dec
das
or
data16
pop
in
cmp
cwtl
pop
insl
jb
xlat
ret
xchg
adc
mov
xor
vprotb
add
adc
ljmp
jge
leave
pop
sub
das
push
out
shrb
xchg
push
je
sub
or
clc
adc
cmpsb
insl
adc
pusha
fs
js
out
lock
mov
xor
adc
inc
dec
xor
out
mov
add
mov
mov
and
sbb
xchg
es
xor
sbb
xchg
int3
bound
repz
lds
dec
inc
sahf
jmp
fistps
inc
add
aad
leave
pop
inc
nop
es
or
hlt
addb
mov
in
insb
outsl
das
sbb
repz
loopne
aas
push
cld
jecxz
mov
lret
push
lahf
cmp
std
mov
mov
cmc
scas
shrl
inc
jne
addr16
or
lods
push
popf
xorb
push
or
jo
sbbl
pusha
mov
inc
adc
dec
ds
aam
sbb
into
sub
xchg
sub
or
hlt
sbb
scas
fisubl
and
scas
xchg
jb
repz
test
push
aaa
add
pop
in
and
pop
and
dec
mov
xor
cmp
stc
dec
and
call
js
inc
push
jno
ljmp
sub
inc
or
outsl
int
xor
pop
add
icebp
xor
jmp
jns
add
add
outsl
and
sub
movsl
mov
fldt
mov
es
sar
pop
add
inc
data16
jmp
and
dec
xor
xor
bound
jae
es
lock
or
test
mov
dec
jecxz
add
mov
xor
or
shrl
adc
or
fmulp
fldt
push
sbb
mov
ret
sbb
insb
lahf
dec
call
dec
adc
jmp
mov
loope
dec
cmp
inc
sahf
adc
push
icebp
sti
adc
xchg
sub
add
popf
adc
mov
xor
fs
and
and
int3
gs
sub
add
push
push
pop
aas
inc
rcrb
scas
and
jae
sub
in
lock
push
into
xchg
scas
imul
sbb
enter
jle
sarb
insb
ja
xchg
rcll
xor
ficoml
fisttpll
or
mov
pop
xchg
adc
hlt
mov
jbe
cmp
cmc
movsl
mov
nop
inc
andl
xchg
int
roll
mov
out
outsb
jo
popf
mov
jb
out
inc
dec
sbb
adc
mov
ja
inc
mov
xchg
popf
fisubrl
pop
vpminsd
pop
cli
xor
jmp
aam
stos
test
enter
stc
movsl
add
pop
jl
add
ds
push
pop
or
insb
popf
fstpl
mov
sbb
jl
push
lret
arpl
addr16
mov
in
out
cmp
lcall
fs
leave
push
popa
push
leave
icebp
div
xchg
xlat
or
xor
ret
mov
jle
jns
mov
aaa
push
cmp
jmp
sub
and
movsb
daa
add
sbb
enter
ret
sub
jl
in
adc
push
pop
xor
add
mov
inc
das
jecxz
add
insb
xchg
mov
pop
scas
cmp
test
dec
cwtl
cmpsl
inc
aas
into
xorb
xor
notl
nop
push
pop
push
movsl
out
daa
or
jnp
mov
aad
lods
and
outsl
into
xchg
cmp
cld
xor
xchg
test
in
pop
pop
xlat
test
adc
lahf
movsl
imul
fidivrs
test
aad
cwtl
dec
cmc
js
pushf
test
ds
out
cs
cwtl
insl
dec
pop
cmp
ret
mov
sbb
in
fidivl
or
jmp
inc
cmp
adc
pop
push
push
subb
test
pop
lds
scas
jge
lret
sub
sub
out
aam
not
add
pop
mov
inc
mov
icebp
push
pop
lods
cmpsl
repnz
sub
xchg
mov
addr16
shrl
test
je
mov
or
xor
rcrl
cmpsl
out
filds
in
inc
cli
mov
mov
sti
in
nop
or
movsb
jge
and
add
cmpsl
js,pt
mov
push
insl
cmpsl
call
pop
fstpt
push
addb
test
aad
push
cmp
in
inc
push
leave
xchg
jl
push
into
out
push
add
int
je
push
push
sbb
repz
pop
push
inc
stc
jns
iret
les
dec
mov
fs
loopne
insl
mov
andl
loop
add
les
dec
or
xchg
sahf
add
negb
mov
xchg
mov
repz
filds
and
xchg
push
adc
and
lret
mov
lret
scas
in
xchg
cmp
jp
stos
mov
or
movzwl
ja
mov
lock
lret
push
leave
cmpsl
pop
pop
into
inc
stc
test
movsl
loopne
cwtl
lock
mov
sbb
cmpl
lock
jnp
pushw
sub
call
xchg
sbb
sbb
sub
pusha
ljmp
mov
int
rcl
xor
sub
mov
jle
mov
gs
fadds
add
imul
add
and
subb
sbb
je
xchg
or
mov
push
add
arpl
adc
lcall
cmp
mov
adcl
mov
in
repz
xchg
stc
mov
xchg
sahf
push
xchg
xchg
push
adcb
xor
rolb
sub
aad
rclb
jge
push
push
divb
add
outsb
adc
or
or
hlt
in
xor
dec
jo
mov
inc
pop
jecxz
repnz
xchg
imul
jp
inc
mov
adc
clc
ret
sbb
int3
arpl
rol
fdivrs
in
gs
sub
push
pop
les
pop
dec
pop
mov
push
or
ja
xchg
stos
cmp
adc
stc
jl
push
call
adc
push
xchg
add
xlat
cld
or
aad
mov
sub
nop
ds
cld
cli
iret
jl
adc
fnsaves
xor
cmpb
inc
fwait
cmc
xchg
addb
dec
aas
mov
xor
les
mov
inc
push
in
xchg
push
dec
cwtl
cmp
imul
mov
sbb
std
jb
js
sbb
dec
add
pop
push
add
out
mov
out
and
icebp
daa
or
ja
sub
jp
cmp
cltd
push
add
adc
clc
sub
xor
mov
mov
shrl
bound
js
jne
out
lret
pop
mov
rolb
sub
push
pusha
cmp
cld
xchg
jbe
push
jp
jl
sub
inc
mov
pop
scas
dec
lcall
rcrb
cmc
sarb
jmp
repnz
iret
popf
outsl
mov
xor
iret
mov
push
push
mov
scas
rorl
or
movl
es
fistl
mov
dec
jg
lahf
xor
xor
fdivr
test
fsts
mov
jae
bound
imul
pushf
lds
xchg
ja
orb
adc
ljmp
cmp
ljmp
sbbl
arpl
jnp
adc
sbb
out
rcrl
inc
push
dec
ljmp
sti
add
sbb
pop
mov
add
mov
cld
pop
sbb
push
clc
es
bound
mov
into
loope
inc
inc
test
std
lods
in
adc
es
sbb
jecxz
ret
push
push
in
movsb
std
mov
fistps
xchg
dec
and
gs
call
mov
fwait
aas
mov
cs
jecxz
jb
ljmp
mov
insl
or
mov
xor
outsl
cld
cmpsb
ret
lods
jl
out
inc
mov
int
jecxz
sub
loopne
popf
pusha
jecxz
pusha
mov
fsubs
aaa
insl
or
and
cltd
inc
loope
sub
sbb
mov
pushl
test
repnz
leave
aaa
push
in
mov
movsl
mov
out
mov
ficompl
nop
push
xchg
add
cmpsl
call
add
dec
mov
mov
mov
imul
push
mov
add
jmp
xchg
pop
mov
lods
imulb
sub
js
xor
push
mov
fsubp
ret
mov
or
in
cwtl
push
hlt
pop
xchg
sub
xchg
and
xchg
mov
cmp
adc
push
and
sub
push
mov
repnz
mov
add
int
or
cmp
icebp
cmp
in
daa
add
cli
lods
sbb
cmp
cmp
cli
pusha
cmp
mov
fcmovbe
cmc
lret
dec
jp
mov
test
mov
adc
ret
mov
pop
mov
and
stos
push
sub
test
xor
pop
mov
scas
mov
add
mov
push
ds
push
aad
cli
dec
cs
ljmp
jne
js
lds
dec
mov
sub
or
mov
es
rorl
mov
popa
mov
add
pop
xchg
inc
pop
out
fcomi
imul
orl
pop
sbb
aaa
je
push
and
out
cmp
aas
out
in
xlat
inc
inc
sub
pusha
mov
fsubrl
sub
outsb
and
mov
fwait
mov
test
ss
push
jmp
cmp
cmp
loop
in
adc
int3
sbb
pop
add
lret
lds
pop
jbe
hlt
fdivr
repz
add
fadds
mov
ljmp
iret
test
sub
in
xchg
sbb
not
outsl
add
mov
sub
aaa
mov
cmp
rolb
dec
ret
mov
sub
enter
rcrb
ss
push
fsubl
sbb
pop
sbb
mov
pop
in
inc
xor
pusha
pop
jo
mov
xor
repnz
mov
mov
lods
out
mov
repz
adc
clc
mov
mov
dec
dec
aaa
cmp
pushf
out
push
xchg
imul
and
sbb
test
push
mov
jmp
inc
inc
or
mov
sbb
xor
in
adc
sbb
push
push
or
pop
jp
xchg
xchg
mov
movsl
add
pop
les
cmp
aam
sbb
cmp
inc
push
inc
push
push
aaa
jbe
xchg
sbbw
ja
push
imul
js
lods
fs
das
cmpl
shlb
xchg
inc
jno
inc
xor
test
and
mov
mov
dec
fcmovbe
roll
cmpsb
cli
pushf
pop
roll
push
dec
adc
ljmp
dec
scas
mov
in
shl
outsb
cmpsl
lret
xchg
inc
xchg
push
into
mov
faddl
in
pusha
lret
cs
fsub
inc
jl
sub
mov
dec
push
popa
sbb
or
decl
int3
xchg
and
cli
adc
dec
les
popf
xchg
inc
clc
bound
std
ss
jmp
cmp
jb
movsl
lods
pop
and
icebp
inc
sub
loope
lret
pusha
mov
pop
mov
pop
or
lea
mov
pop
sub
mov
test
scas
repz
pop
fists
xor
cld
stc
or
mov
or
shlb
xchg
pop
pusha
stos
fwait
adc
std
ret
stos
cli
test
sub
xor
clc
stc
pop
xor
fnstcw
and
or
push
dec
in
mov
lock
in
dec
push
jg
mov
push
jmp
lret
xor
insl
lock
sub
or
arpl
mov
mov
outsl
div
mov
es
loop
jae
mov
std
adc
icebp
das
loopne
jb
outsl
pusha
xor
dec
arpl
mov
push
dec
lcall
adc
add
adc
mov
test
out
pushf
js
arpl
xchg
inc
cmp
rorl
jl
shrl
or
js
sbb
pop
andb
sub
mov
nop
aad
mov
arpl
jg
pop
and
xor
adc
das
nop
or
mov
push
and
add
testl
push
pop
xor
outsb
cmpsb
sub
sub
xchg
enter
and
add
add
pushf
inc
cs
daa
pop
test
mov
mov
xchg
xchg
data16
aaa
ds
adc
sub
clc
les
rcrl
dec
lret
jns
std
mov
mov
inc
subps
xor
fiadds
mov
push
test
dec
inc
stc
loopne
xor
cmp
jno
push
cmp
data16
jl
into
and
add
out
fidivl
fldt
sbb
xchg
fldl
mov
stc
mov
xor
pop
fs
mov
cvtps2pi
or
fdivs
mov
imul
add
push
out
xor
mov
xchg
push
test
roll
fdivp
dec
push
sub
fdivrl
int
rcrl
mov
insb
push
fsubl
dec
popa
jae
ja
fistps
jle
sahf
not
sbb
push
ror
pop
pop
mov
xlat
xchg
xchg
popa
mov
or
dec
sahf
popf
dec
sti
movsb
repnz
push
sbb
jg
iret
dec
sarb
mov
sbb
cmp
sbb
fistl
push
mov
clc
pop
and
roll
test
push
adc
cmp
cmp
movsl
jno
movsl
icebp
test
adc
mov
cmpsb
inc
cmc
ss
cs
jbe
nop
xchg
sbb
scas
leave
pop
pop
cmp
mov
mov
adcb
and
mov
sti
or
fisubrs
mov
jb
clc
mov
mov
stc
and
xor
xlat
jle
add
push
xor
popa
iret
dec
sub
call
jecxz
call
sub
dec
push
inc
nop
mov
jo
cs
fmul
das
stc
xlat
dec
and
cmp
faddl
add
or
out
add
lods
clc
xchg
or
mov
xor
outsb
add
mov
outsl
movsl
mov
frstor
xor
jne
ret
out
out
movsl
push
test
and
jecxz
inc
lods
pop
cmp
and
or
cmp
out
in
xorl
in
mov
imul
dec
addr16
cmc
mov
loop
push
xchg
pushf
test
adc
cmp
jbe
adc
fadd
mov
lods
inc
sbb
mov
rcr
mov
cld
daa
dec
push
shrl
stos
cwtl
and
or
ja
mov
test
dec
std
fwait
out
dec
mov
lods
into
test
in
jbe
sbb
or
push
cmp
mov
negb
sti
cmpsl
cmp
dec
test
notb
mov
pusha
and
jnp
dec
adc
sub
mov
adc
inc
inc
notb
stos
mov
rorl
mov
gs
inc
loope
sbb
cltd
jge
mov
add
jmp
and
xchg
gs
dec
rcpps
mov
pop
inc
mov
ret
ret
fnsave
jg
inc
pop
pusha
stos
add
cwtl
imul
cmpsl
or
jmp
rcrb
int3
stos
push
mov
jno
push
aaa
and
stc
sub
jge
cmpsl
shrl
pop
movsb
dec
mov
sub
sbb
push
and
in
jmp
sub
lahf
aam
lods
out
in
sub
cmp
vmread
mov
xor
scas
add
insl
inc
dec
cmp
notl
xor
pop
sbb
dec
mov
test
xchg
inc
mov
daa
movsl
outsl
data16
xchg
loop
shl
and
jno
unpckhps
and
sarl
std
or
xchg
lret
sahf
imul
notl
sub
or
mov
or
fsubp
jne
add
push
adc
popa
mov
and
mov
std
pusha
loope
push
xor
imul
push
mov
loope
imul
mov
loopne
ss
aam
and
ja
mov
mov
loope
pop
movsb
push
push
inc
jp
sbb
and
jle
sbb
mov
push
popf
fs
les
fisubrs
shll
pop
cli
js
enter
pushf
cmp
repz
sub
cmp
inc
push
inc
mov
jnp
cmp
mov
in
and
stc
jne
ret
xchg
mov
sub
jne
addr16
or
pop
dec
pop
jge
xchg
mov
cmpsl
jg
dec
fs
roll
in
out
xor
pop
ljmp
pop
add
push
ret
outsb
ror
sub
push
dec
call
in
add
xlat
scas
into
pop
out
xchg
mov
xor
dec
insb
inc
or
push
push
stos
call
sahf
lahf
or
or
mov
int3
sbb
fistps
push
dec
or
pop
adc
test
jo
data16
inc
jmp
daa
push
pop
scas
arpl
lea
sub
call
sub
pushf
sahf
nopl
int3
jbe
imul
int
dec
add
jl
pop
loope
mov
icebp
adc
add
sti
dec
sbb
insb
cmp
ds
pop
pop
add
loope
insb
jl
inc
adc
jnp
inc
adc
xchg
fwait
or
xchg
push
ss
daa
or
fwait
cltd
cmp
dec
mov
lds
fmuls
adc
je
and
jns
pop
cmp
and
push
xchg
divl
pop
div
jge
dec
scas
mov
icebp
cld
pop
jl
or
dec
sub
cmpsl
add
xor
jb
sti
inc
xchg
xor
mov
into
xor
outsb
mov
mov
add
and
mov
fdivs
jg
ljmp
or
pushf
or
mov
imulb
cli
jle
cmp
jp
xchg
mov
ret
and
out
push
loope
push
sbb
mov
or
push
addl
mov
pop
shll
dec
inc
mov
shll
and
dec
outsl
mov
in
mov
and
iret
pop
dec
push
rorl
xlat
pop
xor
fs
lret
mov
sbb
inc
or
mov
jl
sti
out
and
jmp
xchg
pop
add
enter
adc
add
loope
push
stos
mov
xchg
cs
decl
pop
push
cli
ret
test
mov
test
lea
int
mov
pop
and
mov
sub
imul
jle
add
ljmp
push
or
fwait
sahf
test
into
scas
jmp
cwtl
lods
sbb
nop
jmp
fdivs
cmp
jge
ja
inc
adc
xchg
das
jnp
test
and
mov
aad
mov
push
xor
sub
ret
daa
clc
jg
sbb
dec
clc
das
xor
dec
xor
call
sub
sbb
mov
setb
adc
pop
xor
loopne
iret
test
jecxz
lcall
push
dec
and
push
mov
or
test
sub
cli
out
roll
pop
fimull
pusha
daa
sarl
cmp
jne
xor
nop
inc
push
stos
mov
sub
add
sti
in
ljmp
fcoms
mov
cwtl
orl
data16
sub
lea
je
sub
fisubrs
push
xlat
mov
loopne
cmp
pop
sbbb
xor
roll
cwtl
sbb
cmp
lar
out
shl
std
les
jo
fdivrl
dec
mov
add
and
inc
xor
xor
dec
sbb
int3
scas
imul
push
pushf
fsub
in
aam
test
jne
push
sar
inc
lret
mov
insb
jmp
shr
sbb
iret
mov
sbb
cltd
int3
rorl
cmp
pop
lods
data16
ror
ljmp
scas
dec
fmulp
jb
sub
mov
movsb
pop
add
mov
fs
or
rcll
mov
ret
loope
jp
stc
mov
bound
jmp
or
push
dec
cmp
and
jg
xor
les
ret
mov
shrl
repnz
test
arpl
xorl
js
xorl
loop
das
gs
mov
pop
mov
aas
stc
jns
out
mov
add
adc
mov
mov
cmp
rcr
sub
fs
insl
cltd
inc
mov
daa
ret
push
jl
mov
pop
push
lods
jnp
jae
sbb
aaa
cmpsl
shlb
adc
pop
push
lcall
mov
mov
push
cmc
pop
ds
fisubrs
std
subl
pop
sub
cmpsl
jecxz
jmp
add
cmp
jnp
xchg
jno
iret
and
dec
clc
sbb
lahf
into
push
jle
xor
into
call
push
lock
mov
int3
xor
mov
pop
inc
or
lcall
cmp
xor
mov
cmpsl
mov
mov
adc
jl
mov
repz
lahf
jns
mov
icebp
icebp
mov
cmc
inc
or
mov
movq
jns
cs
cmp
pop
mov
mulb
js
or
sti
in
or
and
push
test
adc
fmull
push
pop
pop
mov
adc
mov
jne
xor
pop
pop
jno
jecxz
fidivrs
in
jp
mov
or
xchg
test
jle
loop
sbb
hlt
jecxz
lret
repz
out
call
imul
data16
daa
pop
pop
or
mov
dec
icebp
xchg
rclb
fiaddl
les
out
mov
adc
in
frstor
sahf
jecxz
dec
xor
lock
repz
dec
pop
xchg
fwait
cmp
sti
aaa
jnp
scas
mov
test
test
mov
pusha
roll
jno
jae
ljmp
lret
fucomp
mov
lods
insb
pushf
movsb
je
cmp
pop
stc
mov
clc
or
movsl
xor
xchg
xor
sbb
in
sub
push
pop
push
mov
jecxz
shr
xor
bnd
je
adc
shrb
and
mov
mov
jecxz
dec
in
loopne
les
cwtl
push
les
jbe
add
jp
lock
repnz
ror
sbb
or
pop
or
xchg
or
aaa
inc
int
or
pop
hlt
adc
push
cld
clc
adc
dec
iret
mov
dec
movl
int3
pusha
outsb
xor
insb
mov
push
mov
hlt
ret
push
xor
sub
push
or
daa
sbb
mov
inc
mov
adc
cmc
mov
scas
sbb
std
lds
adc
sbb
orb
mov
mov
push
mov
jae
bound
jp
lret
dec
mov
sahf
cmc
mov
push
jae
dec
mov
arpl
or
mov
lds
addr16
aad
daa
test
in
cli
mov
imul
outsl
ret
insb
lock
sbb
mov
adc
pushf
xchg
xchg
mov
cmp
repz
js
adc
and
fisttps
pop
add
xor
jmp
adc
inc
stos
sub
or
stc
gs
sahf
mov
fcoml
aad
std
adc
mov
add
mov
mov
cmp
shrl
dec
mov
xor
jg
sub
dec
pop
sub
hlt
lcall
out
push
pop
shlb
dec
movsl
mov
and
mov
push
sbb
jg
cmp
pop
fwait
js
mov
repnz
insb
fisubrl
mov
paddusw
sbb
cmp
adc
sbbb
mov
mov
mov
and
test
and
inc
add
shlb
push
stos
add
xor
dec
xchg
jle
push
inc
lret
imul
dec
xchg
xlat
ss
xchg
icebp
std
cwtl
push
jb
fcomip
xchg
lahf
jbe
sbb
ja
sub
test
dec
jns
shlb
loop
mov
clc
stos
add
jecxz
aaa
mov
loop
repz
mov
stos
imul
cmp
dec
popa
jns
sub
sub
int3
das
les
test
xorl
jo
cli
push
dec
adc
mov
pop
adc
pop
sti
push
sahf
sub
push
out
mov
lahf
fwait
cmpsb
js
dec
mov
dec
loope
fnstsw
jge
mov
mov
mov
sbb
or
jg
stos
push
adc
mov
ss
adc
test
pop
push
sarb
adc
pop
lds
xchg
in
loope
iret
mov
or
xlat
mov
lods
mov
or
and
notb
hlt
cmp
xchg
dec
out
and
in
mov
and
cli
insb
leave
popl
push
mov
adc
xor
add
mov
xlat
push
xor
jp
fdivs
mov
lea
rorb
test
xlat
sub
push
cmp
xchg
gs
jp
jp
pop
ds
insb
or
cmc
lds
inc
icebp
mov
mov
or
shll
ja
cmp
cmp
jb
jecxz
in
lods
aad
int
xlat
sub
imul
js
shll
movsl
xchg
fcmovu
sti
inc
sub
mov
inc
out
pop
push
jg
cmpsb
insl
mov
mov
pop
rcrl
in
mov
xchg
xchg
jle
adc
cld
loopne
xor
or
out
xchg
dec
pop
jae
stos
hlt
push
iret
xchg
and
push
dec
xchg
insb
sbb
and
movl
mov
data16
jg
es
arpl
outsb
or
icebp
pop
cmp
push
imul
shrb
ret
or
sub
movsb
dec
icebp
lret
jmp
psrlw
mov
cmpsl
mov
add
iret
jno
mov
mov
test
iret
jne
sub
dec
xchg
mov
xchg
inc
adc
xor
dec
add
mov
sbb
pop
mov
push
pop
loop
mov
fwait
mov
pop
cmpsl
ja
and
push
mov
pushf
popf
push
enter
aam
insl
xor
in
fcoms
incl
in
loopne
pop
imul
push
imul
jmp
jmp
clc
mov
mov
push
lods
inc
mov
fwait
test
dec
in
mov
fildl
fdivr
adc
jmp
cltd
pop
or
lcall
insl
xor
icebp
test
insl
lret
mov
cmp
pop
rcl
jbe
mov
lret
ljmp
mov
mov
jle
arpl
ret
in
in
dec
test
jle
jecxz
add
jecxz
add
daa
mov
movsl
popl
loope
pop
test
test
test
shrb
mov
sub
test
mov
xchg
inc
stc
out
mov
das
nop
push
imul
jmp
push
out
push
xchg
inc
jno
xchg
cmc
jl
cld
jne
pop
arpl
jmp
hlt
mov
mov
sbb
xchg
repnz
add
jb
xor
or
xor
cmc
into
mov
xchg
inc
rcrb
imul
movsb
fsts
popa
sub
dec
inc
mov
mov
sbb
push
adc
mov
dec
sub
and
push
jl
pop
mov
add
mov
mov
or
mov
pop
pop
clc
jecxz
adc
xchg
dec
aam
insl
or
mov
test
or
icebp
js
jmp
addl
adc
mov
xor
enter
addr16
mov
ja
mov
mov
push
dec
fnstsw
push
dec
xchg
int3
xor
add
inc
and
mov
movsb
fnstenv
add
stos
mov
ror
jp
pop
xor
notl
xlat
pop
sub
test
sbb
mov
mov
aam
pushf
cmp
fwait
imul
nop
lcall
icebp
jne
inc
mov
js
leave
mov
nop
repz
xchg
xchg
fs
popa
and
push
lea
mov
out
cmp
test
sub
or
sbb
add
addr16
addr16
cmp
repnz
dec
and
sti
pop
mov
mov
jnp
cmp
sub
movsl
sbb
mov
and
negb
and
lock
sub
nop
test
dec
loop
adc
dec
stos
les
or
in
jl
or
mov
cmc
out
adcl
loop
or
pop
sub
cmpsl
jae
stos
add
push
fisubrs
test
incb
and
mov
cmpsb
ds
shlb
test
stos
dec
cmpsb
scas
pusha
mov
insl
mov
popf
repnz
mov
loope
mov
or
popf
pushf
jge
leave
adcl
add
rorb
sbbb
and
cltd
cld
xchg
mov
inc
dec
pop
sbb
cmp
lock
xchg
mov
aad
leave
out
dec
mull
cs
ja
jg
xchg
imul
xlat
sbb
rcrl
lods
shll
xchg
xor
aaa
enter
sbb
push
xchg
incl
je
push
pop
mov
aad
inc
cmc
jecxz
ja
stc
or
data16
sbb
mov
xor
mov
incb
pushf
jns
aaa
cmpsl
out
push
rcll
pop
sub
outsl
ss
pushf
imul
xor
xor
mov
aaa
pop
ret
push
sub
lods
xlat
sbb
ficoml
mov
push
or
lret
sub
lcall
lods
rorl
cwtl
inc
jle
mov
xor
xchg
push
dec
and
sbb
xor
mov
mov
xor
mov
sbb
jno
pop
cmpl
ljmp
movl
iret
loope
adc
stos
xchg
fimuls
stos
loope
cltd
std
mov
add
ret
sarl
xor
inc
cmp
dec
jp
aaa
xchg
or
sub
jne
adc
sbb
hlt
test
lret
push
wrmsr
adc
sub
xor
int3
adc
dec
call
aam
je
or
xchg
jnp
test
fs
lods
in
fistpll
push
pop
adc
jmp
sub
inc
adc
popa
fldcw
aaa
xchg
sub
or
inc
rcrl
out
iret
push
pop
bound
lcall
sbb
ror
in
outsl
cmpsb
add
bswap
mov
jecxz
add
pop
ret
stos
addr16
insl
mov
cmp
or
dec
fstpl
popa
insl
pop
or
mov
xchg
out
cltd
jge
adc
sbb
int3
adc
jmp
cwtl
outsb
ljmp
out
cmp
xchg
and
fidivrl
bound
xchg
pop
test
dec
out
dec
sbb
and
orl
adc
pop
and
out
jo
pop
pop
enter
and
adc
sbb
mov
jne
adc
xchg
xchg
mov
or
outsl
inc
lret
clc
jmp
add
push
sub
sub
or
in
pop
or
jmp
test
jns
mov
stc
in
aam
xor
mov
push
dec
dec
adc
jmp
int3
or
scas
adc
adc
out
xor
inc
mov
and
adc
mov
aam
into
dec
pop
loopne
icebp
sbb
test
out
jo
arpl
add
jns
gs
mov
jnp
dec
push
incb
push
mov
movsl
das
push
loope
push
xor
test
push
fidivs
and
sub
jp
pop
ret
adc
je
repnz
loope
inc
mov
cld
pop
stos
mov
push
pushf
lods
mov
incl
jp
cld
cmp
add
ss
jb
add
stos
push
push
je
fistpl
popf
adc
jno,pn
xchg
shrl
dec
cmp
popf
out
sub
or
jbe
pop
add
inc
sti
addr16
inc
ja
iret
iret
mov
dec
and
movsl
xor
outsl
loope
pop
mov
shll
sbb
lret
push
xchg
leave
jns
shld
mov
out
lahf
pushf
stos
push
cmp
pop
lcall
out
mov
inc
dec
cmp
lcall
pop
bound
dec
cmp
push
es
flds
fists
out
iret
fcomps
es
mov
cmpsl
and
int
outsl
ds
fisubrs
xchg
inc
rorl
sub
lock
in
push
pop
aas
jnp
into
pop
mov
call
or
dec
inc
pop
sbb
lcall
pop
jl
pop
cs
call
rcll
fidivrl
inc
mov
and
jl
jmp
xchg
sbb
mov
test
sbb
mov
pop
xchg
push
jl
sbb
sahf
pop
nop
iret
pop
pcmpgtd
ret
lahf
adc
mov
and
lret
insl
cld
mull
dec
jbe
in
xchg
mov
std
mov
push
xor
frstor
xchg
mov
int3
xor
out
outsb
lcall
lret
add
inc
fs
adc
rol
repz
jle
out
loopne
jnp
xor
cmp
xor
jg
lods
sbb
xor
clc
inc
stc
call
xlat
sbb
add
mov
cmpsl
int
pop
fnstsw
mov
inc
ret
push
inc
mov
push
ja
cwtl
pop
sub
jl
lret
fiadds
sbb
sbb
sub
mov
inc
out
stc
ficompl
xchg
jns
adc
and
lds
push
xchg
adc
pop
insb
add
add
mov
adc
pop
inc
test
mov
jmp
cmp
cmc
daa
cld
cmp
jle
int3
out
hlt
repnz
and
xlat
lahf
call
stc
pop
sbb
push
mov
jno
sub
adc
fisttpll
push
stos
pop
push
cltd
aad
add
aaa
imul
scas
jecxz
out
mov
mov
jb
jg
inc
in
pop
les
and
dec
es
cld
xchg
insb
les
mov
sbb
push
addr16
sahf
cld
aas
pop
mov
mov
mov
clc
xchg
imul
mov
jecxz
jmp
ret
jecxz
test
sbb
daa
sub
mov
jnp
push
push
sub
shl
hlt
into
sbb
mov
pop
hlt
mov
push
mov
push
shufps
addr16
jmp
mov
and
jl
adc
xlat
jnp
add
inc
imul
push
iret
in
jbe
mov
je
cmp
xchg
mov
jno
push
ja
fimuls
push
out
or
movsb
mov
mov
mov
imul
adc
hlt
and
flds
sub
or
mov
scas
add
jle
xor
inc
fisubrl
sbb
cmpsl
jbe
lahf
cld
cli
pop
push
cwtl
addr16
stos
jp
or
jle
setp
insl
imul
xor
negl
ret
icebp
and
cmc
sub
jb,pt
adc
cmp
push
pop
xchg
dec
sti
add
jne
pop
inc
push
mov
cmpsl
inc
xchg
cmpsb
sbb
jb
dec
pop
fisubrs
cmpsb
int
xlat
pop
sub
test
mov
sub
daa
xor
fsubs
add
addb
jb
cmp
fcoms
cmp
les
push
xchg
aaa
adc
pop
mov
xchg
out
xlat
pop
inc
sahf
cmp
enter
sub
test
cltd
xor
out
push
sub
cmp
adcb
jo
adc
cmpsb
fs
icebp
inc
call
jnp
loope
cmp
jmp
pop
stos
nop
mov
dec
dec
add
dec
bound
inc
popl
in
dec
mov
cltd
ret
daa
or
cwtl
mov
xchg
push
xchg
push
mov
js
xchg
adc
xchg
out
push
xchg
xchg
les
aam
sbb
lret
xchg
out
fildl
scas
jg
jno
jno
mov
mov
dec
xchg
fldl
adc
sub
cmp
dec
popa
fdivrs
mov
jnp
test
cmp
stos
pop
test
pop
adc
clc
daa
push
mov
out
test
mov
dec
or
cmp
xchg
jbe
int
pusha
pop
pop
arpl
and
jo
jne
pop
and
xor
frstor
mov
mov
movsb
cmp
test
push
je
das
dec
ror
jl
push
subl
sub
cmp
xchg
push
in
sbb
imul
sub
inc
jle
sub
scas
cmpsl
lods
dec
jp
les
fisttps
rcrl
pop
lahf
repz
adc
or
into
mov
sbb
jge
pop
lahf
ss
dec
jle
je
js
mov
lcall
mov
imul
sahf
pop
test
lds
mov
arpl
xlat
test
ja
xchg
mov
hlt
andps
addr16
jae
adc
fwait
jae
cmp
xchg
lods
jg
mov
pop
xor
jmp
gs
jae
or
popa
mov
push
mov
imul
loop
push
mov
sahf
cltd
orl
mov
jne
mov
cmp
add
jle
push
mov
push
loope
stos
or
pop
sahf
cmp
xchg
sub
mov
sbb
and
cmp
mov
pop
arpl
mov
adc
sti
mov
xchg
xchg
fnstsw
jl,pt
pushf
jp
fwait
or
jg
mov
setge
mov
rcl
cld
inc
cltd
cli
xorl
or
xor
out
pusha
mov
std
cltd
rcrb
decb
and
fiadds
fiadds
fadd
push
jnp
add
or
cltd
sbb
sub
or
cltd
addr16
jnp
pop
mov
pushl
sbb
and
or
testl
gs
xor
mov
js
and
xchg
sub
mov
out
push
mov
insb
and
xchg
xor
cmp
out
fstpl
xchg
addr16
mov
loope
dec
sub
shr
inc
mov
enter
dec
xchg
pop
xor
scas
lods
xchg
dec
jl
mov
pushf
adc
fimuls
aad
lds
repz
sbb
call
scas
gs
adc
mov
jo
cmpsb
int3
or
inc
jb
xchg
mov
out
dec
or
xchg
dec
xchg
jne
insb
mov
mov
js
inc
mov
data16
in
lahf
test
call
inc
rorb
sbb
loope
xor
jo
das
in
ljmp
xchg
jo
cmp
dec
lock
or
fstps
pusha
push
inc
scas
out
pushf
outsl
mov
jp
xchg
mov
jmp
sub
fwait
add
scas
pop
mov
jns
addr16
movsb
inc
fidivl
pop
int3
xchg
ficoml
in
lahf
mov
push
lock
popw
lret
cmc
dec
imul
pop
cmp
sub
mov
cs
cmpb
jle
cmp
dec
pop
pop
xchg
nop
shll
inc
pop
add
test
roll
js
and
movsb
mov
sub
sub
orl
push
mov
jmp
add
push
shl
les
jb
insl
je
test
adc
lcall
pop
inc
add
cmp
lods
mov
pop
adc
lods
pop
adc
icebp
cmp
icebp
out
sysret
ja
dec
mov
popa
xorl
sti
cmp
cld
inc
dec
xor
loope
push
scas
out
jae
adc
sub
fdivs
rorb
dec
in
jno
jnp
testl
addr16
jge
add
adc
fs
pop
or
mov
outsb
xchg
pop
dec
or
jecxz
nop
lea
cs
add
das
and
pop
call
push
adc
add
je
and
push
les
imul
test
mov
ret
mov
sub
mov
dec
jg
jne
shr
mov
enter
loopne
jecxz
jp
outsb
mov
aas
cmc
movsl
clc
mov
iret
sahf
insl
xchg
js
iret
push
lret
pop
mov
jnp
jp
bound
stos
call
mov
and
xchg
leave
call
test
sbb
popa
subb
clc
cmc
sar
mov
pop
ss
out
mov
jne
pop
imul
dec
rolb
inc
in
lea
leave
or
pop
into
sub
xchg
or
jmp
ljmp
pop
xor
dec
lret
cmpsb
stos
mov
add
adc
mov
iret
imul
inc
mov
call
jmp
fmul
fwait
das
aas
cs
cmp
xchg
lcall
push
es
ja
lods
cs
sbb
rep
add
push
mov
mov
mov
mov
rclb
cmp
scas
xchg
mov
pop
outsl
loopne
lds
or
mov
les
jne
aas
repz
cwtl
push
mov
enter
or
mov
or
xor
and
sbb
iret
sub
xchg
mov
fiadds
push
ds
lcall
scas
lret
lcall
inc
xchg
mov
jne
inc
mov
cld
imul
incb
int3
mulb
insl
aad
addr16
test
or
movq
std
sub
inc
int3
sti
call
pop
adc
nop
sbbl
addr16
mov
xchg
roll
pop
stos
jbe
std
adc
mov
xor
xchg
pushl
pop
enter
jo
cli
rolb
cmpsb
dec
movsb
adc
mov
mov
dec
adc
lods
pop
inc
out
dec
sub
xor
dec
js
push
loop
daa
push
sahf
popa
and
xor
pop
int3
pop
rcrb
xor
loop
push
pop
lcall
flds
mov
ffree
xchg
push
testl
or
je
mov
hlt
add
pop
dec
sub
dec
jp
mov
sti
scas
imul
scas
js
dec
xor
or
fistpll
cmp
fistl
mov
dec
movl
test
mov
and
inc
cmpsb
popa
pusha
or
test
and
out
cmp
mov
pop
jns
or
out
cltd
data16
mov
jg
int3
sbb
xor
mov
push
or
loopne
sub
sbb
mov
ret
xchg
jns
movsb
and
sub
negl
add
popa
pop
mov
push
push
push
jo
push
xchg
divl
scas
cmpsl
adc
dec
imul
mov
js
int3
xlat
cmp
cmp
cmp
sbb
mov
push
addl
xchg
stos
sub
ss
idivl
sbb
jns
inc
pop
gs
mov
outsl
jnp
push
aad
add
mov
stos
div
xlat
clc
pop
out
imul
imul
cli
mov
jae
sub
leave
jo
lods
insl
sbbl
and
popf
cld
or
jl
jnp
clc
shlb
pop
cli
xor
xchg
adc
inc
pop
mov
mov
ret
cmp
and
jne
decb
sbb
mov
cli
shr
ss
add
mov
mov
imul
je
sub
std
ss
test
mov
xor
mov
or
xor
cmpsl
jp
push
xchg
rolb
fsts
add
aam
pop
pusha
ds
shlb
scas
test
mov
mov
jl
outsl
popf
fidivs
or
mov
ljmp
mov
cltd
jecxz
add
popf
jmp
bound
ja
mov
mov
sub
mov
mov
xor
es
loope
adc
pop
cmpsl
xchg
ret
push
fistpl
fidivs
sahf
pop
pop
cmpsb
or
inc
or
stos
or
sbb
out
inc
inc
stos
lods
das
xor
push
mov
call
ds
sbb
lahf
lea
push
aaa
pushf
cmpsb
push
rclb
sub
push
or
rcll
cmp
cmp
add
lods
cmp
pop
push
scas
mov
fsub
ja
int3
faddl
test
fs
test
mov
push
xchg
repz
mov
jo
adc
fldenv
fucomp
jg
jmp
jmp
aaa
fdivrl
cmp
stos
jle
sbb
stos
jge
mov
adcb
scas
xor
inc
mov
and
ss
aas
mov
inc
movsb
xor
cmp
push
dec
cltd
xchg
push
adc
cld
int
fnstcw
imul
inc
push
testb
and
pusha
add
mov
adc
in
adc
subl
aad
mov
sub
mov
lahf
sub
sub
and
dec
fs
pusha
mov
pop
add
push
adc
jecxz
ret
push
fsubr
call
mov
imul
pushf
mov
enter
ds
sbb
inc
add
insl
add
pop
push
jbe
pop
stc
lock
and
or
and
pop
ljmp
aad
sti
xchg
inc
cli
add
test
imul
iret
xlat
jp
adc
jge
test
fwait
dec
push
sahf
hlt
cmp
cmp
push
cmpsl
lods
loop
xchg
add
cmp
es
out
decl
jp
idivl
or
xchg
add
mov
mov
adc
mov
add
lds
das
repz
cmp
loop
mov
iret
and
adc
cmp
outsb
mov
insb
ret
or
mov
xorb
std
mov
jge
enter
pop
fs
std
inc
dec
pop
lea
add
jno
mov
pushf
mov
and
sub
sbb
test
jo
int3
push
mov
mov
xchg
ret
and
insb
xchg
xor
lahf
out
outsb
mov
lds
mov
sbb
nop
out
sahf
jle
inc
mov
test
jae
imul
mov
inc
mov
in
push
fwait
aaa
fdivs
fsubrp
and
in
mov
sub
mov
push
cmp
clc
jp
lock
jle
jmp
mov
sbb
movsb
iret
mov
call
imulb
sahf
push
xor
or
add
dec
and
adc
fiadds
cwtl
fcomps
cwtd
nop
add
stc
lret
imul
cmp
mov
sub
popa
and
add
repnz
les
push
into
paddw
inc
pop
sub
shlb
ljmp
movsb
add
in
mov
push
mov
ljmp
sbb
int3
push
push
stos
pop
mov
mov
jb
aam
mov
mov
dec
fs
frstor
xchg
stos
hlt
cmp
outsl
mov
add
pop
and
or
mov
sarb
jp
cmc
inc
ja,pt
rorl
push
les
icebp
aam
push
lcall
iret
push
push
adc
pop
stos
mov
int
dec
clc
mov
in
jecxz
out
mov
lret
add
sbb
jo
push
cmpsb
push
nop
cmpsl
repz
inc
loop
loopne
leave
mov
outsb
mov
add
data16
xor
test
loope
leave
fstl
push
mov
movsl
test
jge
mov
mov
cmp
adc
and
inc
sti
mov
dec
xor
xor
pop
or
xchg
push
xchg
jno
enter
jae
out
in
cmp
shlb
jo
repnz
mov
sahf
inc
subl
call
outsb
or
xchg
int
sbb
std
cmp
cmp
mov
sbb
out
lods
inc
rol
stos
loope
repnz
xchg
pop
jmp
das
jmp
imul
jnp
hlt
imul
cmp
fistl
movsb
dec
mov
sbb
or
mov
adcl
push
les
fs
or
adc
fstp
or
jecxz
int
sub
pop
adc
add
push
das
xor
xchg
and
mov
nop
test
mov
into
mov
push
pop
call
mov
xor
hlt
fdivrs
cmpl
jecxz
or
clc
cmpsl
mov
xchg
or
testb
orb
xlat
xchg
ja
or
orb
cvtpi2ps
push
jne
cmp
sub
imul
jg
mov
bound
sbb
mov
push
mov
subl
sbb
push
pop
inc
inc
lds
popf
xor
pop
out
mov
push
pop
mov
data16
or
or
inc
push
push
or
mov
popf
sbb
jl
jge
xchg
jb
lret
push
aas
inc
ficompl
jmp
fucomp
jl
shlb
jge
ret
xchg
int
shl
test
flds
dec
ljmp
mov
sbb
or
fidivrl
sbb
pop
cmp
cmc
add
mov
mov
xchg
into
dec
push
adc
xchg
and
lds
aas
sub
jl
jo
pop
enter
xlat
arpl
in
add
loopne
xchg
xor
sbb
push
test
or
jb
cmp
jb
enter
adc
mov
stos
push
cmc
sbb
fnstenv
lcall
rdtsc
nop
push
adc
lea
jmp
fcoml
mov
inc
into
jg
rcll
mov
lret
insl
pop
outsb
lea
jne
push
ljmp
push
and
out
mov
push
sub
iret
jne
hlt
xor
adc
mov
adc
in
mov
cld
shll
insl
insl
fwait
hlt
jl
pop
mov
mov
add
mov
add
out
loopne
arpl
fucomp
inc
rcl
pop
xlat
jp
popa
outsl
xchg
sti
out
fidivrs
mov
jl
mov
dec
int3
pop
jae
mov
daa
cwtl
dec
push
jg
inc
test
outsb
jp
filds
pop
stos
cli
sub
mov
sub
sub
int
shll
insb
and
sub
ja
movsl
cld
and
dec
rolb
pop
je
mov
jg
inc
mov
or
xor
fisttps
push
enter
lock
or
std
jg
push
inc
adc
mov
popa
cltd
cmpsl
mov
lcall
mov
sub
scas
mov
fcomp
sbb
sub
popf
mov
pop
stos
xlat
dec
mov
fwait
movsl
rorb
pop
push
push
push
out
jno
inc
mov
outsl
das
pop
or
adc
xor
inc
jae
sarb
xchg
lds
jae
cli
cmp
jecxz
in
pushf
xchg
rorb
inc
dec
lahf
sbb
xchg
out
xchg
pop
test
jmp
out
or
in
test
sbb
fistl
rcrb
out
cwtl
cli
fwait
jle
inc
test
dec
dec
jmp
jg
loopne
gs
daa
in
or
push
or
fldenv
data16
jmp
fcomip
cwtl
popf
stos
mov
dec
fbld
int3
sti
dec
loope
sete
stc
arpl
jb
incl
xchg
mov
adc
cltd
mov
lea
in
in
inc
loop
dec
cmp
xor
fimull
shl
lret
sub
mov
jle,pt
mov
mov
pop
into
fucomi
out
push
test
push
lods
fucom
xchg
adc
dec
dec
mov
jg
add
nop
lds
sub
fsub
ds
cmp
jmp
adc
scas
mov
fcomi
xchg
bound
pop
loopne
xor
enter
and
jne
xchg
jge
adc
jae
loop
or
int3
cmp
fucomip
mov
adc
jbe
xchg
xor
add
push
push
xchg
adc
sbbb
es
into
sub
test
loope
mov
and
xor
call
cmp
movsl
mov
xchg
sbb
stos
fildl
push
faddl
lret
adc
dec
imul
adc
js
faddl
lds
mov
pop
dec
lods
sbb
add
das
int
movsl
jle
fimull
insl
leave
int
fmul
xor
sbb
cmp
int3
inc
add
push
jno
jbe
popf
mov
hlt
int3
push
sub
insb
push
cmp
xchg
inc
mov
test
lea
pop
sti
add
or
rorb
mov
sarl
lods
sbb
insl
mov
xor
rcl
loope
jnp
mov
add
xchg
in
dec
sub
push
or
sbb
mul
lcall
in
fstpl
add
aad
jmp
jle
in
test
inc
add
mov
fadd
and
xchg
cmc
sub
inc
sub
int3
sbb
xchg
orb
mov
xor
ficoms
sub
cmp
out
and
rorl
mov
hlt
fistps
push
xchg
add
jnp
scas
popf
inc
push
dec
je
fiaddl
aas
ret
lcall
lds
pop
dec
adc
jg
jbe
in
aam
sub
loope
push
into
in
movsb
push
push
push
int
sahf
jmp
dec
test
push
std
add
ret
stos
add
fsubrl
movsb
jno
adc
es
fadd
cmp
test
pop
inc
push
orl
lret
mov
lods
xor
dec
bnd
sub
sub
or
inc
andl
ja
pusha
and
xchg
lds
in
scas
mov
pop
xor
mov
push
sub
cmp
aam
pop
stos
xlat
add
cmpsb
inc
je
push
popa
pop
mov
movsb
sbb
mov
fnstsw
jp
into
cmpsl
xchg
add
mov
outsb
mov
lret
inc
sbb
movsl
cwtl
sbb
into
dec
loop
jge
mov
repnz
ss
or
hlt
ret
add
pop
fwait
push
mov
and
push
stos
push
movsl
stc
pop
and
cmp
lds
shrb
leave
repz
out
pop
pop
add
insl
push
mov
xor
pop
mov
lods
mov
loop
jmp
imul
leave
adc
add
aaa
sub
rcrl
popa
mov
insb
push
and
dec
test
xor
sub
int3
mov
adc
sbb
pop
add
or
xor
or
cltd
inc
pop
xchg
adc
mov
pop
insl
dec
insb
fcoml
and
mov
lock
inc
adc
dec
mov
out
xchg
sub
das
fwait
jmp
popw
jae
je
in
push
outsl
popa
enter
push
mov
insb
or
jo
and
stos
and
ja
dec
stos
xchg
inc
mov
ret
mov
fiadds
cmc
sbb
in
lret
and
ficomps
loop
rcrl
rorb
cmp
orb
inc
cmpsb
mov
jle
in
shll
cmp
mov
aad
add
mov
push
sub
data16
sub
mov
leave
xor
jp
jne
lods
cs
inc
mov
pop
jmp
jne
xor
sub
sub
sub
outsl
movsl
jno
popa
dec
mov
loope
int
pop
scas
insl
fdivrs
jno
adc
in
push
int
clc
lret
dec
pop
and
insl
lds
je
lcall
cltd
outsl
pop
xchg
inc
push
ret
dec
xlat
lods
leave
cmp
clc
stos
or
fs
or
and
adc
test
in
icebp
push
gs
xchg
mov
cltd
lret
jo
shll
mov
std
cld
or
fiadds
aaa
xor
add
jbe
arpl
push
add
lock
push
test
iret
mov
sub
pop
xchg
add
lods
inc
push
sti
mov
pop
and
pop
lds
pop
add
lea
dec
jns
mov
pop
sbb
mov
test
sar
out
xor
xchg
imul
aad
int3
sub
inc
jl
pop
mov
mov
test
repnz
lock
sahf
dec
dec
mov
pop
sarl
insl
test
cmp
jb
outsl
jae
sub
push
pop
imul
sub
adc
jb
data16
popf
mov
add
xor
mov
lods
mov
sub
mov
xchg
mov
or
jo
test
aam
pop
pop
jmp
dec
or
popf
sbbl
mov
jl
xor
aas
jp
shl
movsb
sarl
mov
shlb
loopne
loope
fnstsw
jb
jecxz
call
xor
enter
cwtl
clc
stc
pop
xchg
fistpll
mov
push
push
mov
bound
xchg
fiaddl
arpl
les
mov
lds
out
mov
add
add
cmc
cmp
xchg
pop
stos
add
daa
adc
sub
jae
out
das
dec
dec
sbbl
mov
inc
and
aas
insb
in
cs
mov
jno
repz
int
push
movsl
jnp
dec
popf
mov
in
shrb
push
shll
and
shr
xchg
sbb
and
popa
lock
mov
aas
rcr
mov
adc
jno
stos
sub
ret
xor
in
inc
adcb
xchg
jb
dec
arpl
std
xchg
sbb
mov
pusha
ret
push
repnz
sbb
pop
inc
incl
sahf
mov
fcomip
jecxz
mov
adc
outsl
lret
ss
push
lcall
fnstenv
ficomps
mov
mov
loop
jae
add
sbb
jge
adc
shlb
test
add
xor
jp
aam
sbb
or
cwtl
loope
xlat
push
add
mov
dec
dec
dec
insb
aad
ds
call
cld
jp
push
frstor
gs
aaa
sbb
aaa
lcall
pop
fstpt
nop
jnp
out
ja
in
lret
ret
test
lahf
push
fildl
and
inc
in
lds
mov
ja
leave
ficompl
sbb
xchg
out
scas
cltd
mov
stos
pop
int3
mov
test
cwtl
les
jo
pop
pop
push
clc
pop
aaa
fidivl
xorl
fcmovbe
cmpsl
ret
xchg
andl
into
andb
push
add
daa
adc
out
mov
dec
push
pop
negb
jne
push
jp
stos
outsl
pushf
push
lret
and
mov
inc
mov
inc
fsubr
repnz
pop
repz
mov
rcr
negl
inc
cmp
xor
mov
scas
fidivrs
ret
push
xchg
sub
cltd
push
lret
in
or
push
cld
push
adc
jns
adc
sub
or
sub
aaa
fnsave
jb
fisubs
xor
divb
jae
or
lahf
jno
loopne
je
pop
adc
and
jbe
pop
mov
cmp
add
aad
int3
push
popa
sbb
push
enter
mov
addl
pop
xchg
es
dec
loop
popa
cltd
pusha
aam
xor
sub
call
xchg
fnsave
test
jp
out
fmuls
jl
insb
testl
aad
cltd
imul
icebp
jns
and
out
sarb
inc
cmp
xor
or
mov
jle
sbb
stos
add
mov
lret
add
pop
fstpt
mov
mov
pop
adc
cs
and
xchg
adc
loopne
lret
cmpsb
fs
adc
jp
cmpsl
pop
mov
adc
bnd
rorl
lock
mov
in
outsb
les
orl
pop
int3
mov
outsl
ret
sub
and
cld
fimuls
call
loop
add
cmp
fsubr
subb
dec
orb
xor
adc
daa
mov
rorl
or
sub
add
mov
jmp
mov
insb
popa
push
xchg
faddl
ja
push
pop
rclb
mov
fsubs
add
pop
lods
xor
repnz
dec
js
pop
jae
jno
mov
fldcw
idiv
movsl
adc
add
test
cmpsb
enter
pop
mov
xor
dec
sbb
in
lret
les
and
in
jb
out
and
push
adc
jecxz
mov
add
in
out
outsb
dec
pop
mov
xchg
je
test
jl
pop
inc
dec
fstl
lea
aam
dec
repnz
mov
fcomps
xchg
sbb
jp
pop
and
pmulhuw
icebp
mov
ficoms
mov
jp
ret
mov
aad
test
pop
inc
or
dec
push
ss
popa
push
addr16
and
jge
loope
mov
sarb
in
cmp
sub
or
mov
pop
add
adc
and
scas
daa
js
cli
mov
jle
lock
repnz
lcall
aam
sbb
icebp
repz
hlt
insl
mov
int
cmpsb
in
lods
push
jmp
mov
mov
sub
out
mov
icebp
int
subb
jbe
test
aas
stc
adc
inc
xchg
arpl
pop
jne
pop
sub
sbb
in
and
std
aaa
and
stos
cmc
ret
jl
push
jne
repz
pop
adc
xchg
xlat
jbe
test
int
hlt
push
arpl
sarb
dec
cmpsl
xchg
out
jmp
filds
inc
dec
lcall
push
out
xor
mov
out
test
fisubl
push
ret
ja
loope
cmpsb
hlt
imul
cs
xchg
dec
into
lret
inc
or
adc
jg
outsb
imul
loopne
pop
xchg
das
cmc
xor
fstpl
mov
hlt
es
push
dec
fnsave
out
les
shll
xchg
out
aaa
mov
bound
mov
xchg
push
cmpsl
mov
xchg
cwtl
push
sbb
pop
pop
fbstp
cmp
sbb
xor
sub
inc
repz
push
xchg
loope
sahf
mov
in
mov
leave
testl
or
sbb
divb
mov
scas
bound
insb
bound
cmp
popa
movsl
inc
daa
dec
push
or
xorb
adc
push
in
jo
mov
sahf
dec
push
mov
push
mov
lds
mov
stos
mov
pop
and
addb
movsl
mov
pop
sbb
fwait
stc
sti
and
in
sbb
jmp
iret
cmovae
mov
bound
add
pop
mov
mov
mov
mov
mov
inc
cmp
jno
sbb
pop
mov
pop
xchg
adc
adc
and
and
outsl
xor
pop
fs
jl
jno
xchg
cmpl
leave
xchg
imul
mov
les
adc
push
ret
xchg
pop
sub
jecxz
mov
int3
jb
adc
lock
popa
adc
cmp
mov
inc
and
lods
fiaddl
add
pop
mov
add
jg
sarb
jnp
sbb
xchg
or
adc
nop
cmp
shlb
mov
inc
and
stc
pop
loope
aad
sarl
imul
sub
or
adc
sbb
pop
jns
divl
fildl
lods
adc
daa
cmp
cmp
and
and
pusha
out
in
pusha
jno
push
sbb
add
loopne
scas
cmpsb
fbstp
loope
dec
into
sbb
pop
jle
dec
add
jb
sbb
mov
stos
pop
jno
inc
das
inc
lods
std
dec
in
xchg
or
lcall
das
test
icebp
cmp
dec
push
cmp
aad
and
call
orb
and
fnstsw
jl
lret
mov
icebp
and
pop
sbb
es
sub
pop
sbb
jle
loope
int3
sbb
out
adcl
or
mov
negl
jne
sub
les
mov
push
cltd
xchg
and
std
mov
push
in
add
ljmp
mov
movsl
xchg
push
mov
insb
clc
mov
dec
cmpsb
rcl
es
push
dec
orl
pop
push
rolb
out
cmp
pop
xor
popf
subl
fwait
daa
std
popa
nop
fwait
push
pushf
push
popf
popf
cmpsb
insl
xor
fisttps
jns
cwtl
sub
dec
fbld
mov
aas
adc
test
outsl
aaa
and
jbe
lret
sbb
dec
jp
je
mov
fildll
int3
movsl
fsts
push
push
push
xchg
pop
movsl
rcll
lock
fists
mov
sub
cmp
test
insb
inc
push
js
movl
sbb
movsl
call
mov
mov
jp
popa
inc
scas
test
out
adc
lcall
test
scas
pop
dec
dec
push
jae
pop
testl
mov
sbb
aaa
pop
pop
dec
xor
and
iret
add
out
insl
pusha
add
xchg
hlt
xchg
leave
jl
shl
pop
mov
test
mov
imul
sbb
cmp
test
nop
popf
pop
mov
sar
ds
sbb
push
data16
push
shll
xchg
inc
jne
fistpl
cmp
in
mov
rcll
loope
xchg
or
push
push
push
push
iret
jae
fs
int3
xchg
push
test
push
sub
popa
dec
add
ss
jbe
filds
arpl
lahf
pop
stc
jl
dec
dec
xchg
in
icebp
repz
gs
xlat
and
and
lea
jmp
por
add
nop
bound
sahf
adc
push
pop
insb
cli
lods
aad
jecxz
dec
push
dec
xchg
stc
rcrb
lds
test
lcall
loope
clc
mov
xchg
add
movsb
andb
in
inc
lcall
pop
repnz
jle
mov
fcmove
les
jae
sub
or
cmp
inc
adc
or
insl
pop
pop
pop
addr16
icebp
add
xchg
rcrl
sbb
mov
sub
sub
lods
rol
xchg
mov
popa
iret
mov
flds
inc
hlt
sbb
add
pop
pop
fwait
inc
rclb
shll
inc
rcrb
jo
pop
movsl
test
inc
rcrl
mov
dec
xchg
pop
push
cmp
add
rcrb
test
push
xchg
push
repnz
and
mov
jnp
sbb
lcall
cmp
mov
loope
xor
mov
nop
aad
loope
mov
repnz
in
lock
xchg
icebp
inc
cltd
popf
and
inc
stos
mov
or
push
popa
sub
insl
xchg
out
mov
cmpsl
popf
sbb
xchg
pop
cwtl
lea
mov
cs
jne
xchg
add
sub
daa
cmpsb
cwtl
roll
push
and
jecxz
rclb
mov
movsb
rolb
rolb
xor
lods
fwait
mov
cmp
or
aaa
mov
cmp
test
lock
inc
loope
mov
mov
loopne
gs
aaa
lea
cmc
popa
lret
push
mov
imul
xor
gs
jmp
adcb
pop
pop
fdivrs
xchg
imul
jmp
pop
mov
movsb
inc
popa
inc
dec
or
mov
mov
dec
cmp
and
or
mov
cmp
movsl
xor
andb
adc
int
dec
adc
sub
cmpsb
or
icebp
lcall
out
add
adc
movsb
cmc
mov
ss
gs
lock
mov
push
ss
lcall
aas
dec
ljmp
loope
out
imul
scas
hlt
movsb
push
pusha
aaa
sets
loope
das
jne
mov
xchg
sub
popf
sbb
sarb
les
aas
cli
idivl
dec
rcll
repnz
push
test
ss
sub
jl
pop
fdivrs
leave
jg
fs
sahf
rep
out
or
pop
jmp
mov
lea
cli
lods
mov
filds
jbe
fbld
int
sub
push
lret
add
fs
inc
or
popa
test
mov
aam
push
jae
icebp
loop
xor
mov
call
pushf
addr16
scas
and
icebp
xchg
scas
ja
shrl
cmpl
clc
fwait
mov
push
fs
inc
jae
nop
cmpb
int3
jmp
cmp
lods
insb
mov
ds
in
ret
xchg
ja
jg
les
dec
sbb
pop
adc
pop
out
mov
or
popa
loope
rorb
std
stos
dec
sti
icebp
lret
pop
leave
push
xchg
push
xchg
jecxz
arpl
xchg
jp
mov
add
mov
dec
pop
or
mov
xlat
sub
adc
pop
testl
fmul
loop
popl
cmp
dec
call
cwtl
xchg
addb
and
mov
sti
je
into
pop
jae
cmp
popa
add
gs
andb
sbb
dec
sbb
pop
js
les
jns
ja
xchg
jne
xor
dec
dec
cmpsl
jmp
aam
pop
add
daa
add
insb
rcrl
push
movsl
cmp
jb
addr16
and
pop
xchg
fiaddl
mov
pminsw
lcall
and
mov
mov
popf
push
gs
xor
mov
cs
xchg
leave
pop
add
cs
je
test
pop
scas
out
fstpl
jae
js
in
jnp
jbe
cmp
jge
dec
inc
pop
int
pop
mov
ds
out
ds
adc
loope
aas
xchg
lahf
pop
push
fs
mov
add
test
push
lods
jns
sub
cmp
daa
cld
cld
mov
repz
jae
dec
inc
out
ret
or
ret
clc
push
pop
adc
add
xor
add
data16
pop
aaa
lods
fisttpll
sbb
jns
mov
xor
add
pushf
inc
sti
pusha
jge
and
cwtl
andl
shrl
adc
dec
ss
clc
popf
fidivrl
sbb
hlt
xchg
outsl
out
mov
dec
loope
sbb
out
mov
mov
inc
or
sub
nop
rcrl
ret
je
loope
fsubs
aas
pop
mov
ret
insb
sbb
orl
int3
enter
jge
xchg
shlb
pop
jg
add
jno
incl
lret
pop
xchg
pop
insl
dec
mov
pop
mov
inc
push
loope
jg
inc
adc
rcl
roll
adc
or
sbb
cmp
out
dec
sbb
and
fxch
fwait
jne
inc
sbb
loopne
call
pop
push
xchg
rep
or
cmpsb
dec
dec
dec
loop
aad
push
sarb
imul
xchg
ss
ror
mov
add
imull
mov
inc
clc
sbb
mov
aad
push
into
mov
push
je
lock
pop
push
mov
mov
add
jb
sbb
stc
mov
push
aam
cs
sbb
xchg
jle
les
faddl
dec
data16
jnp
pop
dec
das
cmp
dec
push
bound
and
movsb
jbe
adcb
push
mov
test
mov
mov
dec
adc
imul
mov
mov
sub
xchg
xorb
push
insb
enter
sbb
loopne
ror
pushf
add
pop
inc
mov
adc
add
nop
cmp
es
cmp
add
pop
push
decl
aad
sbb
jb
je
sub
cwtl
nop
jge
sbb
std
test
aam
sbb
fs
ja
sbb
mov
fcompp
pop
lahf
lock
pop
repz
imul
and
adc
nop
int
sub
pushf
jbe
and
in
dec
sbb
loope
dec
jbe
loopne
lods
addl
xor
lods
mov
fldl
sbb
cmpl
lret
pusha
adc
insb
inc
mov
outsb
in
and
pop
or
shl
or
push
movsl
aaa
adc
cmc
cmp
xor
sbb
imul
mov
and
jmp
in
cwtl
mov
lcall
clc
mov
leave
mov
mov
pop
lods
jg
fwait
es
fildl
inc
jno
push
out
push
testb
lcall
pop
or
sub
adc
or
mov
push
dec
hlt
jbe
add
in
add
add
dec
jbe
adc
inc
xor
pop
ss
aam
stos
xlat
stos
inc
xchg
push
pop
mov
lahf
lock
xchg
mov
mov
xchg
aad
mov
push
sbb
mov
and
push
mov
jmp
lret
push
mov
mov
or
icebp
inc
inc
push
push
cmp
ljmp
xor
popa
inc
int3
mov
js
data16
fmuls
nop
lock
dec
mov
and
mov
mov
push
lods
and
and
ja
xor
xchg
jecxz
inc
cmpsl
adc
sar
push
sti
shrb
aad
xchg
sub
pusha
xchg
dec
pop
xchg
pop
call
les
mov
in
push
add
mov
aas
mov
roll
inc
aam
inc
lahf
int
inc
int
shlb
cld
cmp
xor
out
adc
sahf
loopne
inc
inc
out
in
cmp
adc
or
mov
aaa
mov
rcrl
sbb
je
roll
mov
std
adc
xchg
imulb
movsl
fneni(8087
jbe
pop
in
in
adc
mov
sti
xor
add
sbb
and
mov
mov
outsb
add
and
loope
jmp
clc
push
sbb
test
cs
outsb
cmp
mov
nop
mov
add
shlb
ror
popa
test
loope
adc
sub
sbb
into
adc
cs
ficoms
shrb
pop
sub
mov
std
pop
cmp
adc
pop
test
pushf
fistps
enter
jg
cld
scas
lret
pop
aad
les
and
push
push
lea
pushf
imul
out
ljmp
leave
mov
or
clc
xor
jae
inc
incl
adc
jns
je
xchg
rcrb
adc
test
scas
dec
jge
dec
cmpb
inc
mov
xchg
jecxz
movsb
push
and
inc
jbe
add
int
sbb
into
test
adc
outsb
push
push
pop
orb
xchg
addl
sub
mov
push
test
and
cmp
pop
loopne
fcoms
jae
jge
jnp
pop
loope
push
notb
push
cltd
mov
inc
jbe
pop
test
hlt
gs
je
popa
jle,pt
shll
cs
dec
bound
pop
popf
loop
lret
adc
bound
call
insl
pop
mov
je
lret
loope
mov
stos
int
push
cld
repnz
mov
adc
xchg
in
mov
lret
jge
push
sub
and
fadds
dec
shll
notl
adc
test
sti
sbb
in
rorb
shll
push
add
and
testl
xor
add
cmp
cmc
nop
xor
rolb
roll
xor
sahf
mov
shrb
sbb
inc
inc
ja
xchg
out
les
insl
cmpsl
ljmp
sub
push
test
dec
outsl
sti
dec
and
repz
xchg
call
or
dec
xchg
mov
popa
mov
lret
jns
xchg
cli
cmp
jle
movsb
mov
mov
mov
push
loop
xlat
lret
inc
popf
test
ret
loope
int3
pop
push
sub
scas
jle
jno
xchg
add
dec
push
aam
fwait
insl
adc
outsl
lret
fidivrs
jne
aas
popf
ss
xor
jmp
loop
sub
jb
daa
out
subb
loop
dec
cs
xchg
push
cmc
test
jl
xor
lret
ja
mov
rcl
lahf
mov
sbb
pop
xchg
stos
ljmp
das
sub
stos
mov
jmp
pushf
inc
mov
mov
in
pop
xchg
push
icebp
call
jns
push
cltd
sarb
adc
xchg
jle
add
add
mov
pop
int3
mov
jge
inc
jbe
or
nop
das
mov
add
jbe
test
fisubrs
xor
mov
stos
mov
jmp
mov
dec
pop
in
lods
pop
into
jae
popa
in
daa
decb
mov
cmp
cld
orb
dec
mov
jle
repz
rclb
pop
mov
push
jp
jmp
fwait
pop
dec
push
sbb
mov
mov
push
mov
sub
mov
xchg
adc
movsb
in
pushf
adc
mov
push
mov
jmp
cltd
xor
movsl
dec
ljmp
cmpsb
jmp
dec
jg
es
jne
nop
popf
test
or
outsl
fcmovb
repz
push
fdivl
lock
mov
cmp
mov
xchg
ds
jne
adcb
lret
dec
lahf
inc
and
fwait
mov
cmpsb
or
shrl
imull
insb
pop
pop
out
shlb
cmp
shld
test
mov
imul
ret
andb
test
xor
in
mov
loopne
jecxz
inc
mov
inc
repnz
insb
adc
in
inc
cmp
out
cmc
dec
sub
mov
int3
arpl
mov
js
add
push
cli
out
ja
inc
fidivs
sahf
push
pop
mov
mov
outsl
or
or
mov
push
in
movsl
adc
inc
ljmp
push
push
pop
adc
adc
xchg
xor
ret
jns
xchg
add
icebp
lock
inc
inc
sub
add
dec
mov
inc
xor
les
ljmp
and
push
add
or
negl
mov
cmp
pushf
jne
into
lds
jae
mov
jl
adc
mov
xchg
push
lret
or
enter
imul
mov
jecxz
into
adc
xchg
cmp
pushf
lahf
mov
hlt
popl
psrlw
sbb
mov
roll
lahf
sub
and
mov
push
adc
pop
push
xchg
add
adc
jb
adc
cmp
imul
adcb
std
mov
outsl
andb
movsb
std
out
or
test
pop
mov
inc
add
inc
aad
push
mov
out
mov
in
push
or
adc
fs
sub
inc
jmp
outsb
pop
addb
pop
push
sub
dec
or
sub
jnp
push
packsswb
fwait
sub
dec
mov
leave
fists
pop
jg
sarb
arpl
push
test
cmpsb
pop
cmpsb
lock
mov
mov
xchg
jno
jge
mov
inc
in
sub
push
dec
ljmp
aad
xor
pop
inc
push
mov
mov
lcall
mov
fimuls
lods
mov
add
imul
xchg
sbb
in
sub
sub
sub
movsl
push
in
ss
mov
push
sbb
inc
jne
dec
mov
mov
sub
inc
notb
and
dec
or
out
push
jnp
and
aas
sbb
add
push
insl
xchg
cli
lret
je
into
shll
inc
or
sub
addl
jo
inc
xchg
incl
sub
shll
jle
xor
stos
mov
mov
sbb
xchg
mov
cmp
lcall
mov
loopne
dec
and
mov
sbb
or
adc
push
lds
imul
push
and
in
fdivrl
int3
jl
push
cltd
mov
push
jne
aam
or
das
add
pusha
adc
push
or
aas
xchg
dec
add
les
jno
push
mov
jne
insl
cltd
rcrb
ficoml
sub
cmp
dec
mov
call
aaa
lods
out
and
mov
xor
push
inc
inc
gs
xchg
dec
int
mov
sub
or
inc
stc
adc
cmp
inc
minps
leave
fmul
push
pop
fidivrl
adc
cmp
dec
sbb
fcmovnu
push
cmp
xor
cmp
clc
jl
xchg
push
sbb
inc
nop
xchg
sbb
mov
add
daa
or
mov
cmpb
mov
xor
leave
inc
notb
repz
iret
dec
inc
push
imull
xlat
push
ds
movsb
dec
mov
xlat
sbb
mov
imull
jae
mov
mov
jnp
jge
mov
mov
outsl
ds
aaa
jb
hlt
shrb
xchg
inc
outsl
in
xchg
mov
int3
pushf
mov
adc
mov
cmpb
lods
sub
icebp
scas
cmpsl
mov
inc
dec
flds
add
adc
fsts
mov
xchg
inc
mov
fs
clc
dec
mov
ficoms
outsl
scas
mov
jp
shrl
or
pop
mov
and
repz
fnstcw
cmp
sub
test
out
push
jp
sub
pop
add
mov
outsl
inc
stos
test
push
cmp
mov
aas
push
loopne
pusha
cmp
mov
mov
scas
mov
stos
lret
add
es
inc
in
pop
mov
int
stc
push
push
shrb
jb
pop
fcoml
es
mov
sbb
arpl
daa
mov
pusha
rcll
sub
inc
sbb
push
enter
movsb
xchg
lret
push
adc
push
or
xchg
xchg
pop
out
int
adc
pushf
jl
sub
xchg
xor
aaa
xchg
or
out
jecxz
insl
iret
or
mov
jl
push
xchg
arpl
mov
adc
pop
or
cmp
sub
decb
cmp
jle
in
push
and
test
jecxz
outsb
psubsb
inc
jae
incl
popa
lret
cs
dec
xchg
or
dec
int3
cltd
inc
ret
pop
mov
xchg
inc
das
outsb
shlb
pushf
imul
dec
pop
icebp
mov
pop
mov
xchg
mov
and
jp
xchg
ficomps
cmp
push
add
or
incb
jp
jnp
mov
je
jp
xchg
imul
lret
adc
mov
xchg
xor
pop
jge
xchg
ja
jg
fwait
fwait
repz
sbb
in
data16
mov
pop
fists
arpl
das
adc
in
stos
sbb
es
adc
inc
mov
imul
xchg
push
cmp
inc
pop
cmp
out
imul
inc
add
or
out
cmp
push
mov
in
jbe
mov
adc
imul
call
cli
and
iret
cmpsb
inc
cwtl
imul
mov
sbb
push
mov
stos
dec
popa
mov
subb
mov
movsb
fcompl
jns
std
mov
scas
add
jnp
mov
push
mov
mov
fs
fs
lock
mov
or
mov
out
shll
mov
adc
cmp
jae
loope
sub
xlat
jmp
add
pushf
dec
inc
jge
pusha
enter
or
jle
fidivl
dec
addr16
push
daa
pop
testb
mov
loop
sub
pop
adc
sbb
ljmp
cltd
mov
add
lods
enter
sbbl
cmp
cmpsb
and
out
jo
mov
mov
adc
aam
in
loopne
int
frstor
out
lock
jmp
or
stos
push
dec
aad
mov
in
pop
imul
xchg
je
fdivp
mov
cmp
mov
pushf
outsl
and
xchg
mov
cltd
adc
mov
imul
and
sub
loop
aad
mov
pop
xchg
cmpsl
push
aam
xchg
pushl
out
jbe
in
iretw
scas
in
fbld
jl
xchg
ss
dec
cli
test
adc
call
push
fcoms
sbb
inc
insl
jns
jb
and
in
jbe
int3
push
adc
xlat
stos
jge
cmp
and
push
imul
scas
and
adc
insb
aaa
das
adc
in
xchg
cmpsl
movsb
leave
dec
jl
mov
inc
popf
mov
into
sahf
adc
dec
lcall
orb
lods
sbb
loopne,pt
mov
pusha
cltd
mov
movsb
mov
lret
pop
xchg
movsl
jb
push
les
psrad
shlb
push
mov
enter
xchg
and
sbb
gs
movsb
push
xor
sub
loopne
adc
dec
clc
outsb
out
clc
sub
punpckhwd
mov
cltd
mov
repnz
scas
es
popf
cwtl
add
or
add
jle
or
cmpsl
int3
shrb
call
mov
imul
neg
push
adc
into
out
jbe
xchg
stos
in
mov
into
sahf
in
mov
dec
aas
push
fnstcw
loop
xchg
mov
fbld
inc
xchg
xchg
movb
movsb
add
lcall
and
mov
mov
pusha
sbb
mov
sub
frstor
lret
fimuls
push
mov
lods
aaa
push
paddd
add
les
scas
pop
stos
out
and
dec
adc
jp
dec
sbb
push
sti
stos
fldenv
dec
mov
in
add
pop
jns
dec
out
addr16
cmp
mov
mov
scas
mov
cld
and
mov
testl
mov
jae
lret
outsb
test
mov
sub
iret
push
hlt
je
jno
and
push
inc
jns
imul
cmp
aaa
cli
std
sbb
mov
pop
pop
jno
fsubrl
stos
pusha
jmp
mov
sub
fs
and
dec
jne
popf
cmpsl
xor
je
mov
dec
fdivr
dec
ja
push
push
or
and
cmpsb
lock
sub
xor
mov
fwait
inc
imul
sbb
jge
inc
sbb
in
fwait
jbe
insb
jne
ret
daa
dec
loope
inc
pusha
jnp
mov
out
aad
and
pop
cmc
rcr
mov
gs
lods
lds
hlt
push
xchg
jge
and
dec
or
sub
jmp
sub
jl
fildll
fsubrp
or
inc
pop
lds
out
sti
dec
and
in
shlb
movsl
push
js
pop
arpl
sub
push
je
mov
mov
ljmp
je
xor
xor
out
or
out
out
mov
popa
lods
push
ds
dec
gs
dec
lock
mov
xchg
xchg
adc
lods
aad
aam
xchg
push
shlb
fbstp
sub
nop
push
cwtl
dec
cs
aas
fs
dec
xor
add
aaa
shll
mov
stc
shrl
cmpsl
in
or
jns
push
mov
or
rcll
dec
or
in
mov
lcall
loope
mov
lods
push
bound
inc
inc
sahf
lds
mov
sub
add
popf
add
ljmp
mov
jae
dec
jg
lods
mov
test
out
xchg
frstor
fwait
xor
mov
pusha
mov
dec
xchg
out
mov
cmp
add
and
bound
pop
jmp
fwait
cmp
out
fs
add
cmpsb
fistpll
cmp
inc
repnz
mov
test
mov
xlat
pop
mov
push
mov
mov
mov
andb
sbb
sbb
iret
jae
enter
sahf
pop
pop
sti
pop
mov
sub
pop
cltd
cli
adc
mov
clc
mov
dec
jle
mov
icebp
xchg
into
sub
clc
jl
xchg
std
sbb
in
jg
in
push
mov
fbstp
mov
push
and
xchg
sahf
cmp
sbb
leave
out
jb
aam
push
pusha
xchg
push
mov
add
out
inc
or
fiaddl
mov
push
test
and
hlt
jp
mov
jnp
jecxz
insb
fcompl
mov
cmc
repnz
and
pop
jo
adc
add
leave
inc
push
push
insl
cmp
jp
cmpsb
int
adc
pop
xor
test
rorl
ja
stos
sbb
pop
mov
outsl
pop
add
sarl
jae
pushf
add
dec
cwtl
sbb
stos
in
enter
imul
pop
jno
cmc
enter
or
imul
pusha
popf
outsl
mov
imul
xlat
inc
cmp
push
xor
mov
xchg
movsb
mov
mov
push
mov
and
inc
pop
xchg
jns,pt
outsl
cld
adc
add
enter
lret
sub
push
xchg
add
sarl
popf
in
mov
add
mov
xchg
inc
ss
fdivrs
mov
sub
test
dec
xlat
fmull
or
and
fwait
add
sbb
popf
lock
dec
test
pushf
pop
aad
cmc
ds
out
in
flds
inc
js
call
loop
hlt
addr16
adc
xchg
ds
pop
sbb
in
jge
imul
mov
ret
mov
dec
add
xor
stc
lods
inc
movsb
adc
ret
pop
shlb
pop
aad
push
xchg
aam
mov
shll
jb
jb
add
loopne
into
ds
mov
sub
outsl
and
or
pop
jp
mov
dec
ret
xchg
push
insb
fisubs
arpl
sbb
pop
push
lahf
fdivl
cmpsb
and
in
enter
rcrb
pop
xor
xor
pop
add
lret
testb
pop
dec
xchg
int
dec
fdivrs
dec
shrl
cmpsl
jnp
cmpsl
jmp
and
or
sbbb
xchg
jmp
xlat
pusha
loop
lock
cmovnp
adc
or
sub
adc
rcrl
ss
adc
stos
les
es
rcrb
add
adc
pop
sti
movb
sbb
and
dec
dec
addr16
lret
mov
dec
mov
jb
mov
aam
rcll
inc
add
cmp
adc
sbb
add
in
aas
or
repz
shl
int
and
pop
mov
orb
in
in
jl
push
dec
enter
rorb
inc
in
and
fwait
pop
dec
xor
aam
fidivs
iret
jle
jne,pn
out
dec
mov
xchg
mov
bound
cwtl
fdivrp
xor
and
pushf
sub
jb
sahf
pop
popf
and
scas
mov
push
test
jle
shll
adcb
jmp
add
outsl
jecxz
ret
mov
jb
mov
mov
mov
pop
sbb
incl
xor
iret
subl
arpl
push
or
int3
bound
in
adc
mov
xor
sarl
pop
stos
push
cli
lods
je
fld
xor
stos
movsb
test
dec
fsqrt
sub
rol
and
aad
test
xchg
mov
xorb
jno
dec
or
rorl
mov
rclb
push
push
jbe
fistps
les
xchg
dec
movsb
adc
pop
dec
test
lret
loope
add
jns
sahf
jmp
mov
jb
cli
xchg
mov
mov
ja
leave
xchg
lock
leave
pop
imul
jge
loop
lock
and
jmp
repz
rorb
mov
aas
dec
sub
hlt
shl
clc
sub
and
das
sbb
pop
jns
repnz
mov
out
sbb
scas
fistpll
gs
scas
push
dec
ret
cmp
xchg
sbb
cmp
fwait
push
movsl
cld
mov
adc
in
xchg
cmc
cs
fs
ljmp
jns
push
aam
dec
and
out
adc
sub
ss
push
int3
loope
sub
movsb
xor
cmp
adc
xor
mov
mov
push
inc
ja
enter
scas
pop
xchg
filds
fs
stc
int
scas
sbb
fwait
pop
inc
lods
and
and
pop
mov
xchg
cmp
cmpsb
fidivrl
scas
int3
adc
pop
add
adc
push
lret
push
fbld
ja
sbb
xor
jae
cmp
mov
out
sahf
cli
dec
inc
inc
clc
movsb
orb
notb
xor
jl
push
cmpsb
and
sub
enter
test
js
mov
cmp
stc
popf
xor
divl
mov
dec
popf
inc
and
jmp
push
pop
or
dec
push
mov
insl
xchg
cmp
int
out
dec
orl
pop
jnp
xor
ss
dec
adc
mov
mov
mov
mov
mov
sbb
lods
xor
pop
pop
iret
jmp
stos
lcall
jl
loopne
or
dec
or
out
mov
sbb
push
lcall
push
dec
arpl
mov
aaa
insb
jmp
pop
movsb
mov
icebp
in
push
mov
mulb
inc
lods
adc
or
fwait
xchg
pop
pop
mov
xchg
shr
mulb
mov
push
inc
pop
and
push
pop
mov
adc
or
pusha
xorl
push
cli
xor
enter
insl
jecxz
or
adc
add
and
mov
xchg
dec
les
cmp
jg
bound
mov
pop
jge
jg
push
mov
pop
dec
push
repz
add
mov
inc
push
pop
aaa
jo
push
inc
cmp
pop
dec
jo
add
das
push
and
mov
shll
jae
mov
pmovmskb
fs
or
daa
sarl
fld
das
pop
scas
sbb
test
scas
xor
mov
pop
lea
cmp
mov
mov
lods
insl
mov
hlt
fildl
bound
lret
xchg
pop
fcomps
mov
xchg
cmpl
addr16
std
imul
and
mov
add
movsl
inc
or
inc
dec
and
adc
sti
bound
ds
sbb
sti
rolb
xchg
popa
andl
mov
cmp
shlb
xor
jg
lahf
adc
add
loope
cltd
repnz
fbld
xor
aaa
lahf
push
es
jns
outsl
cwtl
mov
xchg
or
sbb
cmp
add
inc
ss
cwtl
aam
filds
pop
adc
cmp
inc
into
jae
in
pushf
push
push
sub
adcl
or
in
sub
jmp
int
data16
pop
lock
push
repnz
cmp
xchg
xchg
add
pop
add
xchg
insb
repnz
jecxz
lock
mov
pop
jle
dec
roll
stos
popf
jnp
lret
and
loope
popf
xchg
inc
mov
dec
cmpsl
sub
mov
xor
rcl
and
push
loopne
aas
mov
test
add
xchg
xchg
adc
add
sar
insb
jb
rclb
insb
int
idiv
jmp
mov
pop
pop
aam
dec
call
push
adc
fsub
adc
in
sub
xchg
cltd
arpl
sti
or
sub
iret
aas
adc
push
dec
sarb
add
push
dec
push
repz
fdivrp
mov
and
and
add
fstps
data16
pop
ja
mov
jl
xchg
cwtl
es
pop
sbb
and
test
shlb
add
sbb
jb
mov
dec
stos
loope
dec
xor
sbbb
sbb
pushf
or
xchg
lea
xor
test
push
jg
andb
arpl
out
add
sub
sbb
outsb
jo
mov
int3
jnp
inc
les
mov
xor
stos
sub
jmp
movsl
ficomps
pop
push
push
addr16
push
sbb
sti
and
mov
mov
scas
popa
popf
or
push
adc
cs
adc
setne
or
fldl
mov
mov
xchg
push
fs
pop
add
pop
dec
or
xor
dec
mov
aaa
fstl
stos
ret
shll
inc
test
or
push
mov
push
ret
mov
mov
call
add
mov
xor
push
inc
hlt
jae
dec
jnp
xchg
lds
jo
aad
cld
insl
and
push
add
pop
push
in
outsb
jl
frstor
cmpb
out
mov
ret
shll
lods
insl
sbb
cmp
mov
sub
into
mov
xlat
and
cwtl
fsub
mov
pop
fsub
jns
addr16
outsb
lods
push
jns
ja
inc
lcall
shll
dec
push
stos
cmp
xor
pusha
inc
dec
xorb
ja
orb
sahf
lret
jo
jne
sub
subl
fistpl
jg
bound
aam
lods
scas
adc
sbb
pop
push
pop
sti
xchg
mov
pop
inc
jecxz
mov
fdivp
sub
pop
xor
jle
testb
out
xor
and
out
push
or
pop
mov
mov
jno
cmp
push
adc
or
push
push
push
outsb
mov
mov
push
xchg
lret
xchg
in
dec
mov
add
in
ljmp
xchg
xchg
imul
lcall
push
pop
ret
and
popf
jecxz
lret
ljmp
movl
hlt
sub
push
xor
push
mov
addr16
inc
lret
fcoms
mov
sar
or
out
sbb
incb
or
repz
out
icebp
test
cmc
popf
iret
mov
fcomps
jae
out
aaa
in
ds
jne
mov
sbb
jo
pop
xlat
add
ror
lock
mov
daa
fmuls
xlat
xchg
pop
pop
push
lcall
pop
fidivl
loope
orb
int3
lcall
add
lods
sbb
shll
test
pop
mov
mov
mov
pop
in
inc
add
test
push
pop
jmp
leave
fmuls
and
imul
lcall
xchg
dec
out
cs
dec
xor
xor
xchg
adc
pop
in
jnp
jb
mov
inc
fcmovnbe
cltd
add
push
sub
mov
scas
out
fwait
loope
outsb
cmpsl
or
adc
push
repnz
cmp
inc
mov
pop
dec
xchg
jne
dec
mov
fs
es
lcall
repnz
inc
and
pop
jecxz
mov
ret
fs
aas
adc
or
dec
mov
pop
cltd
cmovle
xchg
ret
mov
xchg
or
int
pop
jp
loope
pop
mov
xchg
inc
inc
insb
nop
and
stos
cmc
fsubs
mov
pushf
mov
mov
adc
lock
inc
sbb
cmp
jns
out
jmp
inc
pop
jno
mov
lea
sbb
pop
ret
inc
aaa
mov
sub
sbb
add
mov
mov
lods
mov
repnz
fucomi
push
pop
popf
loopne
xorl
mov
dec
frstor
mov
leave
int3
out
cwtl
psubsw
cltd
cmp
ss
cltd
or
inc
movsb
out
jbe
xchg
mov
mov
mov
or
cmp
loopne
data16
xlat
cmpsb
insb
lret
repz
pushfw
outsl
push
push
mov
dec
xchg
xchg
bound
mov
lahf
je
sub
out
jb
dec
jl
add
aaa
mov
cmpsl
lea
daa
cltd
adc
daa
dec
jge
fistpl
mov
repz
leave
xchg
xchg
sbb
dec
ret
mov
cmp
add
sbb
jno
jg
mov
loope
jp
jg
sbb
pop
jnp
fiaddl
fwait
xor
add
clc
insl
jno
xchg
es
jp
aad
stos
es
or
mov
out
popa
push
cltd
xchg
dec
arpl
addb
sarl
lret
lahf
xor
mov
ss
pushf
xchg
movsb
jb
push
mov
mov
pop
iret
shrl
mov
ljmp
sti
aaa
addr16
ret
sub
xchg
int3
cmp
mov
lahf
frstor
xchg
mov
pop
adc
out
test
cmp
into
outsl
fmuls
enter
cmp
fdivs
mov
call
scas
jl
test
les
xor
or
popf
jle
ret
xchg
or
push
sub
out
jecxz
incb
stos
hlt
imul
aas
pusha
insl
jnp
xor
adc
mov
sarb
dec
scas
add
mov
in
fwait
dec
push
dec
mov
popw
sarl
out
dec
cmp
push
push
repz
mov
sub
pop
dec
faddl
sahf
into
mov
out
inc
pop
scas
je
cmp
cmp
aas
jmp
mov
enter
shrl
movsl
lods
push
cmc
scas
sub
mov
out
push
mov
or
mov
in
data16
loopne
stos
loop
inc
and
fisubrl
aam
adc
cmp
imul
xor
jp
sub
mov
mov
enter
pop
inc
cmp
fsubl
push
cld
push
stos
stos
clc
lods
cli
push
jns
push
fidivl
mov
mov
cld
and
mov
dec
mov
nop
sahf
cmp
or
scas
or
xor
dec
cmp
dec
mov
dec
es
add
into
ret
jae
pop
ljmp
loopne,pn
or
jecxz
notb
inc
push
xorb
imul
test
sti
mov
push
stos
cltd
jmp
jae
loope
adc
movsb
jle
arpl
movsb
nop
nop
and
add
push
in
adc
sbb
into
mov
fdivl
dec
sub
xor
pop
ja
sti
push
mov
ja
leave
ret
inc
addr16
mov
sub
cmp
push
mov
pop
push
xor
sub
call
mull
pop
push
popf
push
cwtl
sub
aas
pop
dec
out
fs
popf
imul
mov
mov
popf
mov
and
xchg
cwtl
mov
test
mov
ror
mov
push
jmp
dec
add
shl
push
lret
popa
test
mov
jns
fimuls
fildll
push
adc
mov
imul
and
popa
call
inc
jecxz
call
aaa
out
mov
sbb
sbb
lock
ror
es
jae
and
cmpsb
xchg
ljmp
xor
mov
shrd
jbe
fstl
sarb
movsl
fnsave
sub
add
cmpsb
int3
in
push
test
inc
cltd
jge
jo
pushf
inc
pop
jle
sub
adc
in
adcl
xchg
fwait
dec
sbb
ljmp
push
mov
enter
sub
dec
or
arpl
jb
mov
jl
cwtl
inc
filds
into
fs
mov
lahf
std
or
jne,pn
mov
jmp
mov
jo
pop
mov
rol
in
xor
sbbb
mov
mov
jl
push
test
lock
aam
rclb
test
sbb
enter
dec
mov
out
push
mov
iret
scas
pop
out
sub
test
adc
sub
mov
push
sub
mov
scas
mov
xchg
popf
or
cmp
les
arpl
aas
icebp
ret
lea
sbbb
cmp
stc
std
ret
inc
sbb
mov
mov
pop
addb
popa
inc
push
mov
pop
sub
outsb
fwait
pop
jae
inc
insl
lock
xorl
mov
mov
lea
insb
outsb
sub
pop
cmp
out
fildl
pop
cs
sub
jb
push
hlt
shl
jnp
push
push
cs
push
lock
or
sub
jne
rcll
and
shl
scas
mov
fbld
test
test
test
mov
xchg
or
push
sbb
cmp
xorl
into
sub
push
pop
push
flds
cmp
cmpsb
xlat
iret
mov
test
cwtl
adc
aaa
jbe
roll
repnz
jbe
mov
push
in
mov
std
aad
lahf
jns
mov
imul
xor
movsb
dec
jo
lahf
mov
pop
lods
ljmp
pusha
int3
dec
inc
js
push
push
xchg
cmp
inc
fnstsw
ss
ficomps
jo
rolb
lcall
lahf
dec
incb
adcb
inc
sub
mov
sub
mov
or
mov
jo
xor
xchg
test
cmpsl
sub
cmp
lret
in
dec
jmp
xchg
out
cmp
adc
pop
mull
inc
je
pop
or
sarl
stc
dec
cmp
pop
imul
stos
cli
leave
or
sub
clc
xchg
aaa
push
repz
mov
xor
daa
fidivl
movsb
jae
je
das
jae
dec
mov
xor
pop
and
push
pop
xor
xor
mov
push
xor
sub
xchg
and
mov
gs
push
push
movsb
lods
pushf
jecxz
inc
push
sub
jo
test
pop
bound
sti
push
sti
or
add
dec
mov
jne
shrb
leave
hlt
repz
mov
inc
js
pusha
lret
jmp
cli
mov
mov
pop
repnz
cmp
arpl
iret
sbb
cmp
fisttps
ss
aam
mov
cmp
xchg
mov
aaa
mov
rorb
popa
pop
jmp
pop
pop
cmp
push
mov
js
sub
mov
sub
mov
cmp
ja
sbb
loope
outsb
adc
sbbb
insl
incl
test
repz
cwtl
xchg
das
mov
sbb
xlat
lret
mov
inc
inc
xor
lcall
mov
cld
gs
jb
xlat
testl
jg
cwtl
push
leave
xorl
neg
xchg
mov
or
pop
test
push
xor
lods
pop
and
or
fdivl
inc
popa
sub
lcall
pop
mov
xor
fnsave
fildll
in
mov
push
sbb
cmp
cli
pop
xchg
or
mov
pop
push
xchg
adc
mov
addr16
mov
push
mov
js
add
pop
addb
cs
inc
sbb
clc
outsl
jns
xchg
cmp
out
mov
lock
icebp
dec
bound
lds
push
mov
cltd
dec
xchg
loope
push
or
fstps
jle
dec
mov
imul
in
mov
mov
sub
and
xchg
mov
jae
jmp
fwait
xlat
dec
addl
adc
mov
jbe
jle
lock
mov
push
add
insb
xchg
mov
rclb
pop
loopne
clc
jge
xorl
jns
inc
jle
lock
lret
mov
orl
jne
pop
cld
lret
dec
cmp
jle
push
cmc
test
add
dec
lea
fcoms
pop
movsb
out
cmc
push
push
adc
fnsave
scas
jne
je
mov
xchg
xor
lahf
lds
xchg
and
adc
fcompl
ds
mov
sarl
repz
dec
push
push
adc
and
add
jg
cmp
jecxz
xchg
dec
add
pop
cmp
sub
mov
and
xchg
sub
mull
inc
sahf
insb
and
mov
and
addr16
add
xchg
test
push
sub
dec
push
cmp
mov
mov
or
mov
jmp
mov
hlt
std
mov
push
jecxz
sub
bound
adc
pop
subl
lret
push
je
push
or
popa
mov
fistpl
cld
rol
jecxz
sbb
and
fs
xchg
in
xor
stos
xor
jmp
xchg
popa
aad
xchg
lds
adc
or
sbb
mov
call
in
fldl2t
xor
je
out
jmp
out
xchg
xor
pushf
cmpsl
sub
loope
and
sub
push
adc
or
xchg
test
sub
inc
movsb
repz
cmc
scas
ret
mov
cli
mov
test
mov
jp
dec
out
push
ret
call
pusha
cld
test
push
ljmp
and
mov
inc
lret
or
loopne
fsubl
xchg
mov
cld
test
cmp
cld
icebp
popa
lea
push
pop
lret
push
loopne
sahf
and
aam
pop
mov
xor
xchg
icebp
inc
xchg
out
popf
mov
ljmp
outsl
outsl
mov
das
into
popf
xchg
shrb
add
xor
repnz
sub
rorb
and
jle
insl
jno
xchg
cli
lret
mov
jge
mov
cmp
std
sbb
sbb
sti
sbb
insb
cmp
js
inc
jne
add
hlt
mov
repz
lahf
xchg
mov
mov
sbb
xchg
repnz
adc
pop
lods
lret
jns
cmpsb
push
pusha
rorb
fnstenv
inc
aas
subl
mov
mov
xchg
shrl
and
cmp
push
je
sbb
sbb
dec
xlat
lock
pop
mov
sahf
cltd
pop
push
mov
repnz
dec
pushf
mov
movsl
jno
shlb
test
fs
sbb
sbb
mov
jge
add
jle
lcall
xor
pop
jae
adcl
imul
pop
mov
mov
rcll
std
ds
ret
mov
loopne
xor
in
cmp
data16
lds
lock
dec
jmp
xchg
test
push
dec
mov
test
clc
dec
xchg
ja
fsubl
cld
add
mov
movsl
dec
sub
xchg
je
iret
in
and
or
adc
sti
mov
sub
jnp
add
pop
add
jle
cmp
call
push
in
cmp
cwtl
mov
jp
push
sbb
adc
bound
xchg
outsl
adc
test
lea
testl
divb
test
or
mov
and
repz
int3
jb
cmpsl
xchg
dec
fdivl
sbb
jle
xor
arpl
cwtl
imul
xlat
add
popf
insb
mov
pop
xchg
push
adcl
and
adc
ds
adc
test
add
mov
daa
stos
push
inc
sbb
push
popa
push
sub
jno
and
aam
mov
xor
pop
ljmp
pop
add
imul
mov
mov
ja
push
jmp
jl
xchg
test
push
sub
sbb
shlb
stos
push
out
imul
movsb
add
loope
sarl
cmp
lods
cmp
aas
shrb
mov
mov
add
push
icebp
xchg
nop
enter
not
cltd
xor
and
push
xor
jo
jg
icebp
iret
sbb
mov
call
daa
or
lods
jmp
mov
or
xchg
mov
jge
das
pop
out
outsl
ljmp
pop
adc
cmp
mov
and
xchg
cmp
push
jno
pop
dec
clc
cmpsl
imul
or
jle
xor
jle
sub
nop
lret
ss
jb
nop
inc
mov
xchg
cmp
push
movsb
int3
pop
stc
dec
jmp
arpl
cltd
fisubl
push
sbb
and
dec
pop
push
sti
mov
mov
xchg
and
mov
out
and
sub
aam
lret
pop
cltd
sub
dec
hlt
in
shl
mov
dec
mov
js
add
jae
fimuls
hlt
fwait
aad
or
mov
fld
cmp
lds
dec
xor
xchg
jge
sub
jmp
lds
fildl
pop
insl
mov
insb
or
bound
push
pop
cltd
insl
int
orl
scas
stc
ds
jp
mov
lahf
ret
imul
das
dec
mov
or
jnp
pop
mov
iret
stos
loop
aad
js
inc
mov
adc
fdivs
mov
adc
inc
sbb
mov
in
adc
dec
sbb
es
push
stos
js
xchg
pusha
pop
mov
pop
pop
dec
add
inc
add
inc
rcll
inc
hlt
mov
fists
sub
lods
stc
fwait
mov
add
outsl
push
sti
push
mov
mov
out
sub
scas
jl
clc
bound
adc
stos
lods
push
subl
push
aas
addb
fdivr
push
loope
loopne
dec
fs
sub
into
outsb
mov
inc
mov
and
insl
rorl
pop
jne
bound
push
push
cli
outsb
jbe
mov
mov
mov
cmc
pushf
sbb
lea
inc
mov
and
push
lock
pop
mov
push
add
mov
adc
xchg
or
ljmp
insb
test
leave
add
and
sub
adc
fsubrs
pop
dec
ret
xchg
sub
mov
ror
dec
lcall
movsb
je
jl
push
dec
xor
cli
dec
aam
dec
call
ja
pop
mov
test
xchg
vunpcklps
sub
or
xorb
insl
mov
je
sub
ss
jl
mov
xchg
inc
test
loop
stos
in
insl
fadds
push
lods
xor
add
insl
das
jno
xchg
inc
ds
jp
enter
lods
push
adc
sub
into
pop
sbb
sub
xor
mov
mov
int3
jns
cmpsb
mov
pusha
jne
test
pop
cltd
pop
enter
sbb
lret
divl
cmp
int
mov
jle
mov
push
jnp
dec
push
test
pushf
mov
dec
cld
ret
and
repz
mov
inc
lahf
and
cmpsb
push
cmpsl
xorb
daa
inc
imul
jge
stc
stos
rorl
loope
inc
sar
scas
xchg
adc
inc
mov
add
out
mov
dec
aas
jno
mov
out
mov
mov
cs
test
adc
inc
mov
mov
mov
and
sub
mov
push
fwait
mov
push
das
pop
inc
test
inc
xor
fimuls
xor
push
or
pop
daa
push
ret
mov
aaa
mov
testl
push
shlb
out
subl
bound
shll
dec
cmp
inc
and
push
push
pop
push
sub
repnz
stos
jbe
test
xchg
dec
clc
jge
repz
xchg
mov
pop
jl
bswap
sbb
cmpsl
pop
in
and
lds
test
mov
imulb
mov
sarl
bound
cmovg
lahf
fs
lret
fdivs
stc
addr16
aaa
adc
loopne
addl
pop
mov
mov
sub
mov
je
outsb
lds
push
pop
mov
lds
cmpsb
sub
dec
daa
jo
pusha
fcomip
ret
lcall
mov
sbb
add
dec
mov
sub
adc
insl
inc
sti
mov
jne
push
xlat
in
lods
or
mov
iret
sub
mov
imul
jno
sub
pushf
push
pop
dec
xchg
fiadds
test
mov
push
cmpsb
inc
and
arpl
clc
insb
loope
fadd
mov
push
push
loop
cmpsb
nop
mov
hlt
mov
arpl
aaa
call
pop
and
leave
mov
sbb
ja
stos
push
sbb
sbb
rorl
repz
test
mov
call
jno
or
dec
dec
pslld
mov
hlt
out
jl
js
xor
sub
leave
adc
orl
xor
insb
mov
mov
in
pusha
jnp
xor
loopne
mov
rol
jbe
sub
sub
jp
leave
xchg
fdivrs
jecxz
mov
dec
jl
inc
jp
jg
jne
inc
mov
ss
gs
mov
jge
xchg
dec
add
cmp
and
dec
test
cmp
adc
sbb
test
jecxz
sub
imul
xlat
mov
idivb
add
test
out
repnz
shlb
out
or
std
and
add
aam
xlat
addr16
inc
push
pop
xlat
cmp
pop
push
push
das
ret
fwait
sub
jg
sti
sub
pop
or
cmp
lods
dec
push
outsb
outsl
fsubl
mov
pop
outsl
mov
out
in
aam
in
arpl
lret
aas
movsb
adcl
mov
sbb
testl
pusha
pop
outsb
sbb
call
js
jg
in
and
insb
fs
dec
ss
add
orl
push
out
adcb
cmp
insb
jl
mov
sub
lcall
insl
jecxz
popa
pop
sbb
mov
pop
add
imulb
sub
add
outsl
in
mov
sahf
sbb
vxorpd
mov
jno
cwtl
leave
loope
sahf
xchg
and
adc
test
loope
popf
xchg
xchg
popa
mov
cmp
ret
jno
insb
jl
hlt
add
xor
popa
ret
cmp
jo
in
or
mov
xchg
cmp
jge
dec
or
ljmp
pop
mov
cmc
dec
push
mov
and
aam
cli
cmp
pop
xor
loop
xchg
and
jp
xor
mov
cmp
mov
repnz
inc
cli
aaa
sub
fdiv
adc
adc
push
outsb
ret
adc
or
push
aaa
cmp
jge
mov
scas
sub
jns
push
or
jne
add
hlt
inc
rcrl
aas
bound
ret
iret
jb
mov
mov
xor
inc
icebp
shrl
xchg
mov
mov
inc
adc
dec
lea
out
mov
adc
sub
and
stos
popf
push
and
inc
flds
mov
cltd
adc
push
xchg
and
mov
hlt
pop
lcall
imul
andl
shlb
rclb
mov
fsts
and
aaa
dec
push
add
cmpsb
mov
mov
ficomps
stc
into
cmp
in
in
dec
fdivr
lods
out
mov
notl
rcl
lret
inc
mov
fidivs
shll
pop
dec
in
jmp
js,pn
or
out
inc
into
ret
mov
es
dec
shl
stos
fistpll
mov
sub
jg
stos
imul
daa
add
sahf
mov
mov
push
xor
fbld
mov
stc
cmc
iret
inc
jmp
push
aaa
sbb
loop
adc
xchg
jno
arpl
sbb
mov
push
mov
es
pop
jo
jg
data16
ljmp
xchg
subl
cmp
leave
jo
mov
dec
adc
cmc
scas
loopne
iret
ss
xchg
das
lds
clc
xchg
dec
mov
jmp
mov
pop
mov
push
xchg
mov
enter
test
adc
push
rcrb
rol
sbb
out
push
out
pop
mov
hlt
outsl
gs
jae
adc
jnp
out
imul
dec
push
cwtl
jmp
cli
gs
imul
pop
repnz
fwait
imul
pusha
mov
mov
dec
decl
sub
pushf
cmp
add
loope
sbb
mov
pop
xchg
stos
movsb
int3
fdiv
mov
clc
push
js
pop
add
es
sahf
lahf
sub
ja
ds
frstor
and
in
xlat
add
nop
add
insl
fdivl
cmp
mov
shrb
sar
push
fldl
sbb
mov
out
xor
in
add
push
sbb
lret
cwtl
jge
jb
test
lea
jl
arpl
cwtl
sahf
adc
xchg
push
addr16
mov
jl
jae
jb
cmpsb
and
and
dec
cmpsb
adc
sbbb
rcll
push
in
cli
push
cmp
stos
or
int3
cmp
scas
jecxz
xchg
cltd
stos
pop
mull
aaa
repnz
inc
jbe
lea
jmp
dec
dec
daa
or
or
scas
or
sub
cltd
repnz
fnsetpm(287
adc
lock
pop
pop
sti
push
add
adc
cmp
mov
pop
test
push
nop
nop
popf
or
xor
stc
xor
sub
xchg
ret
mov
push
jno
insl
in
xchg
lret
ret
mov
jb
ljmp
add
enter
es
stc
addr16
xlat
aam
inc
into
leave
lods
inc
push
jp
xor
push
sbb
jge
lea
lcall
mov
inc
inc
mov
daa
push
mov
jnp
mov
inc
jg
dec
js
in
adc
xor
jge
inc
pop
mov
nop
out
icebp
pop
iret
sarb
fdivs
and
loope
or
adc
sbb
mov
add
sbb
stos
sbb
adc
ret
loope
mov
dec
inc
or
push
pop
mov
call
mov
push
lret
outsb
add
jg
pop
cld
add
sbb
test
in
mov
stc
sbb
xchg
mov
adc
and
push
je
push
cmpsl
push
and
loope
mov
adc
cmp
mov
loop
jge
xor
jge
aas
in
xor
in
dec
jno,pn
push
pop
push
and
mov
pop
roll
shrl
jecxz
sbb
pop
sarb
je
or
or
mov
aam
or
or
mov
sbb
push
test
push
pop
cmc
divl
xor
xchg
nop
push
mov
ret
int3
xorb
sbb
xchg
outsb
cmp
jb
xchg
repnz
shrb
sbb
arpl
out
push
xor
insb
cmpsl
push
out
pop
mov
ror
sub
dec
fadd
inc
fiadds
hlt
mov
pop
dec
icebp
std
dec
cmp
ret
sub
dec
xor
outsb
out
scas
mov
sahf
and
or
jp
cld
xchg
dec
js
push
sahf
test
or
outsl
test
stc
fisttps
fmulp
int3
mov
lods
inc
bswap
mov
lods
jp
sbb
movsb
add
jbe
dec
jns
enter
ret
xlat
mov
lds
testb
lock
outsl
rorl
mov
pop
and
or
mov
outsl
jb
cmp
sub
fimull
fs
add
xor
add
pop
or
mov
add
push
scas
inc
adc
jecxz
or
cld
dec
insl
push
out
bound
jb
cmp
ljmp
add
pop
arpl
jns
inc
mov
push
icebp
jne
shlb
adc
test
mov
or
pushf
stc
sbb
out
lret
cmpsl
push
ret
ret
pop
popa
cmp
mov
xor
shlb
fbld
fists
xorb
push
data16
cwtl
fcomps
jle
jecxz
in
add
imul
int3
mov
cwtl
sbb
dec
xor
dec
hlt
mov
mov
mov
or
push
mov
imul
inc
lcall
push
jle
not
cmp
dec
decl
out
xchg
test
dec
dec
jl
sub
clc
push
sbb
pop
stos
adc
jecxz
jle
jmp
adc
imul
jl
loope
pop
jae
imul
shlb
cmp
mov
rclb
sbb
and
sbb
sub
scas
popa
gs
cli
fistl
cmp
add
notl
pop
or
or
imul
add
mov
stc
inc
lock
loopne
xchg
sub
decb
aam
scas
inc
pop
and
scas
scas
sbb
jae
iret
ret
aaa
stc
xchg
inc
arpl
aas
mov
out
js
in
xchg
aam
xor
loopne
scas
pop
std
mov
aad
mov
movsb
push
into
inc
cmp
loope
push
inc
sub
dec
cmpsb
push
aaa
hlt
mov
adc
push
clc
jbe
cmpsb
daa
inc
cmpsb
cld
dec
pop
dec
adc
inc
fucomip
push
hlt
adc
je
push
xor
insl
mov
testl
shll
xor
je
mov
pop
ljmp
or
data16
xor
aaa
popa
mov
aad
je
fnstenv
xchg
pop
mov
xrelease
cmp
and
mov
sbb
mov
dec
enter
insb
lock
mov
aad
out
adc
insl
out
and
popf
push
pop
push
cli
mov
xor
mov
inc
loop
or
mov
add
mov
xchg
cmp
or
outsl
cli
je
mov
fnstenv
outsl
insl
lcall
aam
arpl
pop
data16
lods
push
repz
push
mov
test
xor
cli
andl
jbe
call
popa
dec
and
add
mov
adc
mov
pop
mov
mull
mov
nop
xchg
mov
mov
mov
scas
mov
sbb
pop
push
loope
inc
lock
xchg
scas
dec
ror
scas
loope
xor
packsswb
bound
mov
pushf
lods
nop
push
xor
or
mov
shlw
sbb
bound
add
sbb
xchg
fidivrl
and
mov
inc
lret
cmovbe
fistpll
outsb
ds
loopne
mov
iret
dec
out
xchg
cmc
adc
pop
mov
jae
dec
xchg
adc
mov
jmp
jno
push
xlat
or
add
movb
mov
adcb
out
aad
int
fstpl
add
in
jne
mov
push
adc
jge
out
lods
xchg
fucom
sbb
add
sub
sub
insl
adc
add
hlt
mov
mov
test
les
mov
test
subl
xchg
mov
pop
cld
xorb
mov
push
es
lret
cmp
mov
add
leave
aas
stos
pusha
pop
mov
aam
sub
fs
push
loope
pushf
xor
dec
mov
pop
sti
clc
je
int3
clc
mov
add
iret
jle
shrb
rcl
out
and
mov
enter
pop
sbb
jns
xchg
aaa
std
mov
stos
sbb
push
xor
andb
pop
xchg
mov
add
les
movsb
clc
inc
xchg
jo
and
xchg
adc
ficomps
mov
loopne
add
inc
cmp
dec
aaa
aad
iret
jns
bound
pop
fcmovnu
movd
cwtl
push
sbb
neg
add
mov
inc
es
cmp
push
mov
mov
cltd
bswap
imul
sub
stc
cld
lods
cmpsl
aam
mov
mov
lock
cmp
hlt
push
inc
fnsave
jecxz
incl
xor
xchg
cmpsl
dec
call
test
mov
push
cli
mov
rclb
aad
adc
push
mov
add
stc
sbb
dec
into
xor
out
sub
dec
mov
push
aaa
inc
icebp
lcall
fsubs
xor
shll
shl
fidivrs
cs
int3
inc
xchg
punpcklwd
cmp
mov
add
rcrl
mov
in
pop
call
psubq
popf
xchg
in
pop
imul
es
pop
je
mov
jb
mov
sub
insb
mov
dec
test
pop
ljmp
call
push
loop
inc
dec
inc
xor
jae
pusha
lock
jp
frstor
lods
scas
shlb
xchg
cli
xor
mov
repz
pop
xor
addr16
or
cwtl
jle
fcoms
inc
cmp
mov
xor
sub
sbb
cmp
mov
popf
sti
sbb
clc
pop
adc
jle,pn
xchg
scas
inc
push
add
in
mov
in
sub
sub
jne
jne
mov
cmp
cmc
and
lds
and
or
es
xor
pop
cmpsl
inc
negb
add
mov
leave
lret
xchg
adc
cmp
cmp
pushf
shll
out
jns
ja
push
insl
test
adc
dec
lret
mov
mov
add
das
xchg
shl
dec
sub
nop
mov
insl
stos
imul
inc
cmpsb
mov
test
dec
sub
mov
iret
inc
mov
push
jne
dec
cmp
and
insb
inc
or
cmpb
jno
mov
mov
pop
jmp
inc
cmp
divl
call
scas
xor
pop
cmp
pop
xchg
shll
pusha
mov
adc
pushf
test
bound
fadds
push
mov
ja
jo
xor
mov
xor
adc
nop
push
into
mov
sub
jle
jns
in
push
push
into
hlt
ret
jmp
sti
and
out
adc
arpl
and
mov
data16
push
out
inc
cmp
inc
push
add
inc
add
pop
cmp
sbb
call
mov
in
sbb
outsb
xorl
nop
add
fidivs
inc
data16
jo
push
xchg
inc
mov
push
fisubl
outsb
shll
fucomip
leave
flds
push
dec
inc
xchg
rcrb
incb
jno
sub
rcrl
cli
iret
jle
pop
mov
dec
scas
in
pop
add
cmp
jl
inc
pop
or
movsl
cmpsb
dec
daa
lea
out
and
sub
rol
outsl
out
jbe
lods
cmp
fidivl
imul
je
cmp
xchg
scas
divl
out
push
xor
pop
pop
fistps
clc
repz
xor
cmp
mov
cmp
notl
popf
cld
lock
mov
xchg
xorl
out
mov
out
out
popf
lahf
loop
leave
loopne
sbb
sub
and
loopne
fwait
sbb
fiaddl
std
push
or
mov
lea
mov
test
scas
imul
push
mov
aaa
mov
jmp
pop
jbe
add
cmp
push
xchg
inc
and
sub
scas
mov
xchg
jge
gs
xlat
add
pushf
das
mov
xor
add
rcrb
subl
das
cmp
scas
in
xchg
sbb
and
out
into
imul
test
lock
xor
add
int
lret
pop
int
dec
push
cld
icebp
mov
int3
xchg
pop
jne
cli
lock
repnz
addr16
cmpsl
and
test
int
outsl
mov
xor
add
pop
and
insl
jecxz
lds
jns
pop
subb
dec
test
push
mov
loope
leave
inc
or
movsl
mov
or
jne
push
movsl
imul
incl
aaa
dec
adc
ja
scas
sub
das
xor
xchg
jg
outsl
mov
xor
cwtl
sbb
and
clc
mov
addr16
fisubs
fisttpll
lock
imul
pop
mov
aad
pop
ljmp
push
adc
adcb
shrb
imul
mov
ret
mov
psraw
xor
std
repz
jo
dec
push
hlt
push
test
xchg
xchg
mov
push
lock
jne
cmp
mov
pop
iret
xor
xor
add
fists
mov
adcb
xchg
or
fildll
in
mov
mov
inc
pop
fmull
cli
and
outsl
pop
movsl
out
cmpsl
and
test
sbb
aaa
jns
in
adcl
andl
js
fcoms
adc
dec
pop
or
outsb
xchg
icebp
testb
cmp
shlb
movsl
fs
adc
xchg
inc
jmp
push
lea
test
xlat
into
push
jno
add
ljmp
or
imul
clc
xchg
fwait
sbbb
mov
rolb
add
nop
mov
inc
xorl
sbb
fcomp
cmpsb
or
ljmp
adc
cmp
cld
lahf
shlb
pop
mov
std
shl
mov
inc
mov
sbbb
pop
loopne
outsl
or
or
test
cmpsl
mov
jl
sbb
sarb
dec
lods
xor
sub
lcall
dec
clc
fs
insl
fstl
sbb
insb
inc
xor
xor
pushf
out
adc
mov
aad
or
je
fs
jns
sbb
push
cli
pop
inc
xor
mov
into
jno
nop
mov
pop
ja
loop
push
les
shll
inc
or
fsubr
dec
and
cmp
sub
shrb
cmp
sti
jnp
mov
mov
and
loopne
rol
andl
dec
and
push
mov
dec
fldt
and
orl
adc
push
cmpsl
fnsave
cltd
ret
pop
imul
mov
jnp
cmovp
enter
push
mov
lods
enter
push
sbb
ljmp
inc
mov
es
lds
jle
mov
testl
or
outsl
mov
or
cs
aad
or
xchg
sbb
push
dec
mov
cmp
sti
pop
add
inc
or
adcb
and
ss
push
imul
ds
repnz
pop
fldenv
add
adc
push
adc
and
adc
mov
jns
pushaw
xor
mov
jle
sbb
adc
cmpsl
enter
push
jbe
cmp
pusha
sub
in
cmp
push
adc
fldt
pop
movl
into
loopne
mov
stos
testb
cwtl
push
push
inc
jmp
ret
and
push
pop
out
push
pushf
jne
jno
xchg
shll
push
push
pop
mov
adc
out
inc
int
xchg
and
mov
mov
out
bound
aad
lahf
xchg
fisttpll
pusha
adc
push
push
aad
fidivrl
xchg
seta
popf
test
and
push
sbb
jg
popf
popa
add
add
jns
add
cmc
add
sbb
xchg
sub
nop
incb
cli
pop
lea
xor
or
ljmp
mov
jne
dec
sub
pop
shll
cmp
aad
fmul
es
leave
cmp
cli
jnp
mov
arpl
popf
dec
jmp
out
das
scas
xchg
dec
push
adc
jp
or
mov
or
cld
lods
push
inc
and
ss
inc
mov
jmp
ret
lock
stc
iret
mov
in
xor
pop
loopne
mov
cmp
dec
push
loope
sarl
fisttps
mov
fisttpll
arpl
xchg
icebp
push
imul
std
into
lods
pop
cs
push
fnsave
rcrl
or
insl
xorb
ljmp
inc
mov
clc
sbb
jmp
cmc
dec
aad
fwait
in
mov
xor
cmp
pop
mov
xor
mov
icebp
insb
xchg
dec
mov
sub
in
pop
xorb
movsb
or
mov
aas
bound
push
into
mov
pop
lret
les
mov
pop
or
pusha
out
xor
pusha
dec
mov
sub
mov
push
fbld
sub
sbb
ret
clc
out
push
mov
popf
xchg
push
outsl
push
test
sub
frstor
mov
fadd
sti
push
out
mov
lock
jnp
in
mov
and
flds
sub
and
jp
mov
movsl
cmpsb
in
lret
test
scas
add
aam
push
pop
les
dec
aad
add
test
pop
test
push
add
shlb
and
pop
add
aas
popf
cmp
xor
fnsave
mov
cmp
icebp
adc
in
scas
or
jecxz
aad
xor
mov
sub
inc
mov
imul
pusha
in
push
test
inc
inc
push
cmp
stc
push
outsb
fistps
mov
dec
xlat
fiaddl
gs
pop
or
add
xor
ds
pop
arpl
and
push
inc
mov
scas
imul
les
stc
xor
mov
sbb
lods
in
push
push
dec
int3
and
lds
xor
or
aas
sbb
repnz
mov
cmp
divl
pushl
sub
mov
jnp
loop
xchg
push
pushf
out
dec
jl
rclb
mov
xorb
sub
shl
aad
xor
mov
pop
adc
jge
movsl
cmc
add
xor
push
dec
inc
loop
push
scas
into
subb
xor
push
and
push
lods
js
loope
nop
mov
add
nop
fs
das
inc
stos
test
pushf
popf
sbb
jmp
test
pop
or
push
push
into
add
movsb
xor
mov
dec
in
cmc
mov
out
and
push
push
push
mov
mov
loope
fucomp
lret
sbb
jo
in
iret
pop
xchg
shlb
icebp
mov
xchg
jge
sub
jle
pop
push
mov
mov
xchg
stos
arpl
mov
stc
leave
adc
mov
dec
sbb
pop
pop
test
sarb
mov
out
push
loope
sub
jp
and
and
loope
aad
fisubrl
es
fstl
in
aaa
xchg
leave
pop
gs
je
xor
stos
lds
popa
sub
aad
dec
out
loopne
pop
sbb
xor
cmpsb
cwtl
fcompl
test
xor
xor
jbe
jmp
sbb
mov
dec
mov
mov
sub
mov
ret
jae
fs
shl
jle
inc
dec
inc
lods
mov
ds
in
add
push
frstor
cs
mov
ret
jmp
jnp
insb
aaa
outsb
adc
pop
data16
ret
sbb
mov
inc
cmp
jne
mov
xchg
loopne
or
cmp
cmp
rorl
sub
incb
push
dec
pop
out
rolb
add
jmp
shr
or
xchg
je
lods
clc
test
dec
push
dec
movsl
icebp
sub
loop
fisubrs
mulb
or
add
mov
sbb
and
push
in
aaa
sbb
rcll
adc
mov
daa
lds
sbb
clc
lahf
popl
adc
pushf
loopne
popa
lds
icebp
and
dec
outsl
jns
std
pop
ds
test
cmp
push
dec
xchg
or
shlb
mov
hlt
bound
out
sub
std
xchg
mov
inc
mov
loop
or
cmp
fstpt
adc
lods
ficoms
in
xchg
xchg
mov
outsb
mov
jecxz
adc
lcall
ret
ror
fcompl
mov
es
jle
sahf
fadds
cmova
adc
cmpsl
int
fbld
mov
add
mov
enter
hlt
repz
cs
and
cmpb
push
bound
inc
inc
lock
sbb
test
fnstcw
adc
movsb
test
jne
sub
sub
gs
fdiv
insb
ret
xchg
insl
add
lds
iret
sub
fstpt
jae
push
enter
push
adc
xor
push
cmc
pop
ficomps
jae
test
shrl
lcall
int
cmp
fwait
lods
or
add
fstp
inc
in
push
inc
aaa
push
jle
fdivrl
mov
out
mov
fwait
loope
sub
aaa
sbb
mov
push
sub
cmp
inc
and
pop
cmpsb
roll
hlt
jl
or
mov
mov
outsb
and
arpl
test
pusha
pop
ret
inc
lds
or
or
inc
fdivrl
xchg
sub
mulb
push
xor
and
inc
inc
scas
mov
sbb
and
pop
sub
ja
cld
jnp
cmpsb
lret
rcr
push
mov
dec
adc
fldenv
in
sub
mov
pop
mov
out
data16
jae
mov
push
mov
sub
lds
pop
loopne
dec
movsb
lretw
dec
out
pop
xchg
jecxz
add
lret
xchg
jns
mov
ja
int3
fisttpll
mov
dec
mov
sbb
jl
add
and
xchg
dec
xlat
mov
xchg
dec
xchg
dec
cltd
pushf
jmp
xor
movsb
or
mov
dec
imul
aaa
jbe
cmpsl
lret
clc
mov
or
or
xchg
mov
and
stc
orl
sahf
xor
xchg
xor
das
or
inc
mov
cmp
hlt
sub
dec
mov
adc
add
out
mov
cmp
pusha
mov
scas
in
rcr
pop
cltd
xchg
sbb
test
std
add
add
cli
ret
lods
push
jbe
pop
mov
cld
in
push
cmpsl
sbb
out
fs
nop
stos
jb
fldcw
xchg
jge
mov
mov
mov
dec
jbe
dec
fsubrp
and
addb
imul
mov
test
aad
cmpsb
test
or
mov
aam
repz
dec
dec
jp
or
testl
popf
aas
xchg
jge
mov
dec
push
imul
clc
mov
cmp
cltd
scas
jo
cmp
cwtl
and
sti
mov
push
sub
clc
mov
aam
mov
cmc
and
mull
inc
cmpsb
ljmp
insl
mov
pop
mov
into
cli
hlt
mov
ljmp
mov
fiaddl
jle
shll
fnstenv
out
and
repnz
clc
in
push
lods
jns
or
scas
inc
xchg
add
inc
jae
pusha
es
fisttpl
aas
pop
mov
fcmovbe
cmpsb
leave
repnz
cmpsl
jae
sbb
sbb
sbb
dec
icebp
inc
lds
xchg
and
fbstp
outsl
add
shrl
fildl
cmp
mov
mov
and
and
mov
cmp
rcll
inc
out
add
cmp
add
int3
shrb
cltd
cmp
pop
push
push
inc
xor
mov
das
cld
rcr
jge
and
jp
adc
stc
cmp
arpl
lret
clc
das
mov
inc
popa
sbb
xor
cs
or
repnz
mov
and
xlat
adc
add
xor
mov
xchg
in
sbb
out
jo
cmp
dec
jns
jne
stos
xchg
push
xlat
jb
mov
sub
shlb
in
in
jmp
popf
sbb
and
pop
pop
xor
mov
xchg
and
pop
lock
pop
insb
and
or
rorb
in
pop
push
adc
in
mov
test
out
icebp
gs
cltd
pop
test
mov
fadds
test
pop
sub
or
aaa
pushf
adc
jae
adc
mov
inc
xchg
push
call
aam
notl
or
pop
je
out
dec
fsts
and
cld
jp
movsl
dec
adc
sbb
push
mov
mov
pop
mov
fs
jge
addb
das
test
int
jle
jp
cmpsb
imul
cmp
and
enter
aam
jle
pop
sbb
mov
jne
xchg
js
mov
jnp
lds
fs
ror
add
xor
pcmpeqw
dec
mov
lcall
xor
scas
test
aas
inc
je
dec
sbb
push
repnz
push
sbb
and
mov
cmc
xchg
repnz
cmc
in
loope
add
jno
push
pop
sub
cmp
ror
iret
pop
or
xor
push
jbe
sub
sbb
push
xchg
dec
or
or
loope
cmpsl
rol
cmp
push
sahf
and
addr16
and
mov
sub
inc
jmp
fdivrl
adc
jno
ret
in
inc
pop
pop
pop
rol
out
enter
test
test
fs
xor
xchg
add
into
cmp
das
out
pop
cmpl
add
sub
call
ss
add
cmp
and
fildl
loope
cwtl
xchg
stos
js
inc
and
xlat
fsubl
fcomi
xchg
jmp
jl
inc
mov
subl
or
scas
cmpl
inc
xchg
pop
lock
mov
xor
ror
ficoml
pop
mov
test
pop
add
inc
sub
xor
jle
lea
xor
push
clc
inc
inc
outsl
mov
andb
dec
mov
insl
mov
stos
sbb
sbb
inc
pusha
lea
mov
sub
adc
xchg
jmp
or
or
inc
pop
and
cmpl
pop
xlat
lret
jne
popa
mov
or
cmpsl
xchg
popf
subl
out
daa
lret
inc
or
fwait
add
movsb
and
lahf
dec
jecxz
sub
js,pt
sbb
xlat
ret
loope
xchg
pop
inc
lahf
jo
xchg
xor
xchg
cwtl
shlb
mov
mov
lods
out
jp
jb
clc
fistps
sub
fmulp
add
scas
aas
stos
push
push
and
sub
popf
cld
mov
mov
mov
fdivrs
cmp
je
repnz
xlat
out
push
and
cmc
push
aam
mov
mov
lea
lcall
mov
adc
sub
mov
sahf
cli
adc
mov
mov
xor
out
dec
inc
cmpsb
cmpxchg
jbe
dec
outsb
ret
lods
cld
xchg
jae
or
jge
inc
push
shr
jp
mov
test
jl
or
or
cmp
mov
push
enter
or
leave
sub
ds
xorl
stos
or
pop
xlat
inc
add
mov
nop
loope
pop
in
es
lock
sbb
jo
nop
in
sti
mov
sub
pop
icebp
inc
and
js
and
shrb
xchg
stos
and
jnp
loop
popa
push
jp
subl
sbb
cmp
js
cmp
adc
leave
sahf
cmp
in
or
shlb
mov
leave
call
scas
mov
addl
mov
dec
insl
and
leave
sub
inc
jle
inc
sub
ja
int3
add
dec
scas
lret
or
inc
daa
mov
frndint
fcom
mov
jns
movsb
movsb
lret
pusha
insl
push
pushaw
xor
aas
inc
std
or
sbb
push
xchg
pop
imul
scas
std
daa
loope
mov
lds
inc
clc
ds
and
ss
or
dec
fdivl
call
gs
imul
jmp
xorb
call
icebp
pop
cmc
mov
test
cmp
mov
jge
jp
in
inc
mov
ljmp
pop
xor
stc
mov
fsubrs
aad
das
xor
cmp
rcrb
push
std
mov
jns
outsl
or
pop
mov
mov
inc
xchg
cmp
mov
sub
pop
mov
js
vpmacswd
mov
int
pusha
mov
and
jecxz
gs
cmp
mov
jb
and
add
xor
mov
sub
in
sbb
and
js
sbb
test
out
mov
cmc
ja
mov
loope
pop
je
cs
xchg
mov
cmpsl
xchg
dec
pop
push
scas
lcall
imul
std
cmp
adc
inc
cmp
jb
ljmp
not
mov
xchg
lcall
mov
and
hlt
into
jb
insb
add
fcmovnbe
cmpsb
ljmp
jno
mov
push
adc
mov
movsl
lret
mov
imul
cli
xor
arpl
or
bound
lret
les
movsb
cmp
or
leave
lods
enter
cmp
cmp
rorl
lahf
or
std
and
imul
cli
xchg
jecxz
cs
xchg
sub
aas
sbb
fcoml
cmpsl
or
rep
or
mov
fisubl
add
jnp
inc
jle
roll
mov
in
cmp
mov
push
and
and
xchg
dec
mov
fisttpll
scas
add
mov
sub
xchg
sti
loopne
adc
cld
mov
sub
and
pushl
loop
incl
mov
fstp
pop
shrb
das
testl
fwait
mov
xchg
addr16
or
out
daa
dec
add
cmpsl
xchg
xlat
rcl
imul
xor
adc
pop
jecxz
mov
test
push
loope
mov
aad
dec
ss
in
adc
push
inc
loop
sub
movsl
bnd
dec
mov
inc
cmp
mov
insl
sub
xlat
pusha
push
push
dec
aaa
lods
dec
lock
in
dec
mov
aam
aad
dec
mov
pop
or
or
aad
sub
inc
or
fildll
or
jbe
push
cmc
hlt
push
pop
jge
push
lret
dec
int
jg
lahf
lods
dec
repnz
pop
pop
loopne
mov
add
je
loopne
lods
lods
xchg
push
push
sub
or
push
lret
scas
inc
inc
adc
jne
ds
lret
and
jnp
and
add
or
std
and
sar
fldt
icebp
xchg
pop
add
enter
and
std
scas
mov
cmpsb
out
js
jno
fmull
bound
mov
loop
dec
loopne
sbb
xor
pop
add
ljmp
cmp
loope
out
outsb
es
lea
pop
es
sbb
push
dec
cltd
push
cmp
je
dec
xchg
lret
lret
int3
xor
lret
xlat
mov
mov
or
mov
xchg
scas
movsb
fdivrl
test
fsts
jne
and
add
dec
lea
fildll
cld
icebp
sub
outsb
mov
repz
arpl
jne
stos
fsubrl
nop
sti
shlb
arpl
push
sbb
jo
cmp
ss
inc
and
sbb
inc
or
fimuls
stos
popa
sub
sub
imul
dec
out
and
inc
fs
sub
scas
lcall
test
push
dec
jno
loop
ret
add
sub
inc
mov
push
push
fwait
jmp
pushf
push
mov
and
or
xchg
xchg
lods
jge
cwtl
xchg
lds
mov
icebp
in
movsb
cmpsl
inc
cmp
movsb
or
out
jns
mov
adc
out
test
outsl
test
push
mov
inc
outsl
sti
or
adc
iret
mov
mov
and
mov
test
and
dec
sahf
mov
mov
out
xchg
test
imul
arpl
fwait
out
inc
es
push
sahf
xor
mov
jns
mov
xchg
cmp
pop
loopne
push
movsb
cwtl
test
push
jb
stos
out
sarl
or
stos
jb
adc
jmp
pop
subb
fdivrs
test
arpl
das
add
js
inc
rclb
jp
int3
int
cli
push
inc
pop
shlb
mov
movsl
call
pop
mov
pusha
cmp
minps
xchg
jns
shrl
lea
fmul
inc
jp
or
cltd
out
ror
insl
and
jbe
loopne
xor
sahf
cmpsb
pop
add
xor
xlat
pop
jo
adc
mov
lahf
int3
inc
xchg
popa
sub
push
hlt
sub
jae
ret
lea
rcrl
out
loope
stos
icebp
hlt
fists
mov
outsb
lret
loopne
int
dec
push
and
or
fwait
xchg
cmpsb
pop
add
push
sahf
jge
cs
sbb
ljmp
pop
jnp
adc
pusha
or
mov
push
lcall
cmpsb
mov
lods
out
xor
xchg
inc
into
movsb
add
jbe
mov
cmc
lret
mov
xchg
fidivrl
pop
clc
jle
jl
xchg
sbb
xchg
popa
cs
std
cmp
test
mov
popf
call
dec
cmp
jae
in
push
pushf
notb
xlat
fs
lret
insb
sbb
jp
mov
xor
ds
lods
cld
insl
mov
cmc
inc
push
movsb
sbb
bound
pop
mov
xor
and
icebp
dec
push
push
into
dec
cmp
ljmp
mov
sbb
in
test
mov
push
cltd
orb
add
addr16
sbb
mov
xor
jmp
inc
lcall
xorl
mov
mov
xlat
xor
leave
mov
and
push
mov
scas
lods
pop
leave
jnp
xorl
cmp
mov
je
cmp
femms
fdiv
adc
mov
and
xor
fidivl
test
xchg
into
shrb
mov
sahf
lret
pop
fwait
adc
jecxz
iret
jle
sub
sub
leave
jle
pop
lock
popf
mov
cmp
sub
sub
imul
lcall
andb
inc
dec
out
jae
lods
fs
test
in
pop
repnz
dec
es
out
pop
adc
notb
js
sbb
pop
or
add
mov
in
out
ficompl
pop
loope
or
aas
jge
ds
xor
xchg
cmc
jg
daa
jle
jb
repnz
jne
adc
enter
rol
dec
addl
mov
mov
std
or
inc
add
mov
cmp
push
enter
cwtl
add
push
push
orl
aam
mov
mov
mov
cmp
and
jge
frstor
cmp
jmp
xchg
sub
bound
and
push
fdivr
sbb
lret
sti
push
xchg
pop
lods
xchg
and
xchg
ds
sbb
repnz
dec
mov
push
fisttpll
jne
pop
out
jle
lods
sub
mov
lcall
das
sub
out
imul
jae
dec
push
sbb
sbb
adc
hlt
inc
push
sub
sarb
out
dec
les
mov
repz
mov
fxch
cmp
lret
das
inc
xchg
movb
inc
pop
out
adc
jmp
ds
lds
mov
mov
cmp
insb
jbe
mov
adc
jp
movsl
es
mul
cmp
adc
mov
mov
jo
lret
in
cmp
outsb
pop
stos
sti
pop
test
sbb
sbb
sbbb
mov
insb
and
imul
cmp
pop
push
add
lods
incl
add
repz
dec
and
mov
punpckhbw
repz
or
sub
adc
mov
js
mov
xor
push
lcall
and
or
xchg
push
pop
xchg
lods
fildl
mov
test
add
imul
out
lock
loope
shlb
push
sub
sbb
ret
test
cmc
repz
adc
push
fs
cmpsl
in
inc
in
adc
gs
cli
add
rep
out
xor
lret
aaa
adc
in
push
fisubl
mov
xor
cs
and
xor
aad
add
xchg
sbb
sbb
xor
lock
mov
jb
or
pop
cmp
push
mov
xor
sub
mov
loopne
push
lret
sahf
pop
mov
mov
test
mov
mov
cmpb
ror
cs
adc
dec
push
mov
sahf
cltd
dec
cmp
in
js
and
dec
repz
inc
push
add
and
aaa
pop
and
test
pop
test
dec
xchg
pop
push
jg
add
mov
cmp
jge
cltd
lret
ret
dec
mov
pop
cmp
push
ja
pusha
jmp
mov
jo
stos
js
jne
push
mov
adc
jge
lods
and
adc
xchg
sub
outsl
test
pop
xor
not
aaa
sbb
jp
icebp
leave
jne
dec
scas
sti
jnp
sbb
cmp
jne
lret
test
ret
mov
mov
sbb
stos
aam
inc
mov
ret
std
outsb
pop
stos
dec
call
cmpsl
sbb
fld
pop
mov
mov
mov
outsl
cmp
out
inc
lods
lret
jmp
jne
xchg
in
xchg
lods
fdivrl
fidivl
lea
cmpsb
into
jl
pop
out
add
loope
mov
mov
inc
jle
mov
inc
jo
jl
jnp
xchg
call
aas
outsl
dec
lret
pusha
repz
mov
xor
add
mov
pop
cmp
movsl
sub
sub
aam
xor
jl
popa
xchg
mov
jle
fdivrs
mov
sarb
sbb
repz
je
dec
push
and
xor
mov
hlt
jecxz
xchg
ja
dec
cmp
roll
scas
ret
pop
out
mov
dec
fistpl
mov
push
adc
sbbb
push
daa
pop
xchg
jge
scas
ljmp
sahf
xor
aad
or
push
lahf
fs
lods
fistpll
roll
cwtl
add
insb
repnz
add
mov
aam
sti
pop
jns
push
xor
pop
jg
dec
imul
cmp
sub
dec
adc
roll
jg
push
stos
jo
add
pushl
add
jae
push
xchg
roll
add
inc
jecxz
mov
mov
popa
mov
in
fmulp
nop
jge
cmc
xchg
mov
mov
cmp
pop
jae
je
daa
lret
sbb
data16
subl
mov
lods
fcompl
inc
imull
jp
out
roll
inc
fsubs
bound
aaa
or
ffreep
movsb
jp
inc
cmp
cld
pop
jmp
inc
daa
push
xor
xchg
mov
sub
sub
movsl
sbb
push
fwait
ret
fisttps
mov
mov
dec
sub
scas
cli
mov
lds
xlat
aaa
rcr
pop
cltd
push
mov
cmp
pop
dec
popa
ret
leave
pop
iret
ja
push
push
das
lds
pop
xchg
xchg
fs
xor
outsb
pause
sbb
push
push
test
cmp
push
into
addl
jle
sbb
sarl
std
out
ljmp
lret
fs
mov
xor
cmp
push
adc
push
xor
xor
lret
adcl
pop
testb
cmc
cld
sub
pop
outsl
xchg
sub
sbb
stos
mov
les
pop
pop
decb
adc
das
test
lcall
lret
sbb
adc
jbe
cmp
add
dec
loop
push
pop
repnz
sub
jg
and
cmc
push
aaa
mov
clc
iret
fsubrs
push
mov
inc
or
xor
pop
inc
fstl
mov
mov
shll
adc
popa
push
test
sub
xchg
repz
pop
jo
in
sbb
icebp
mov
push
lods
adc
imul
or
mov
dec
mov
cmp
inc
test
and
cmp
mov
push
data16
add
in
inc
je
pop
fldenv
sub
adc
movsl
add
mov
add
and
push
xchg
cmc
movsl
inc
arpl
stc
sbb
mov
imul
cmp
stos
adc
jl
add
xlat
xchg
test
hlt
imul
and
add
addr16
nop
xchg
ror
int3
mov
jle
ror
mov
inc
inc
push
jl
fstps
lods
mov
xchg
aas
lea
movsb
fsubr
jno
stos
xorb
outsl
sbb
push
sbb
sahf
bound
inc
lods
sub
incl
cmpsl
xchg
lret
frstor
cmc
adc
stos
mov
mulb
std
sub
pusha
and
inc
mov
loope
dec
lcall
sub
xchg
lock
push
cmpl
cs
stos
jl
cld
cmpsl
lret
sbb
cmp
test
xchg
xor
cmp
dec
repz
in
mov
pop
clc
mov
add
and
sbb
repnz
sbb
faddl
leave
mov
loop
fwait
ss
outsb
xlat
push
lcall
push
ljmp
pop
or
jp
mov
lds
testb
loop
fwait
cmp
cmp
fcmovne
shr
lods
or
clc
mov
arpl
loop
out
gs
xchg
out
out
xor
std
or
sar
aad
sbb
add
dec
inc
clc
add
jbe
inc
push
push
arpl
or
jo
mov
lds
inc
push
jle
adc
inc
mov
pop
inc
mov
xor
adc
gs
insl
push
lea
sub
hlt
icebp
insl
shrb
fdivrs
stc
das
add
imul
ss
fdivs
out
rcll
mov
xor
jl
repnz
lods
dec
xor
inc
les
adc
fnstcw
pop
adcb
test
pop
push
lds
test
stos
loopne
inc
lock
jp
and
in
lea
add
fcompl
inc
jecxz
lock
movsl
jmp
sbb
out
orb
call
adc
push
sub
cmpsl
scas
addr16
jb
mov
add
jb
sbb
add
xchg
mov
pop
ret
sbb
jl
dec
pop
addr16
mov
mov
inc
in
add
scas
rorl
loope
daa
ficomps
inc
jmp
test
jmp
jae
outsb
inc
mov
cmp
xchg
xchg
pop
dec
insl
xchg
test
and
gs
push
adc
xlat
jbe
xchg
inc
push
push
jmp
std
adc
bound
pop
mov
jmp
sub
test
data16
pop
jbe
loop
mov
adc
jecxz
sahf
popf
cmp
add
push
xor
fstps
xor
divl
test
dec
sbb
test
or
xor
fidivl
add
scas
jns
ss
cmpsb
mov
in
mov
aam
cmc
sbb
cmp
insl
imul
push
adc
push
loop
mov
add
loope
cmp
xor
cld
mov
inc
mov
xchg
in
inc
sub
mov
sbb
push
sbb
inc
mov
js
sub
mov
push
shlb
push
xor
fidivrs
aam
outsl
sahf
lret
and
dec
fistpl
ret
lods
iret
add
testb
repz
adc
insb
jg
idiv
dec
aad
test
ret
mov
js
inc
cmpsb
ljmp
outsb
mov
ret
jecxz
sub
mov
sbb
lret
fcom
pop
mov
adc
lcall
push
jno
movsl
lret
and
scas
mov
or
mov
push
orl
xor
xor
decl
mov
push
lea
push
dec
sbb
out
pop
cli
jbe
outsb
sbb
sbb
mov
shlb
cld
call
xchg
push
mov
cmp
fisubrs
cmp
jp
out
sbb
sub
push
cltd
test
xor
mov
sbb
je
sbb
les
push
cmpsb
repnz
test
stos
gs
add
inc
cmp
pop
xchg
push
ljmp
jge
lods
pushf
push
call
mov
sahf
mov
push
push
push
ret
jge
push
adc
push
sti
dec
push
pop
mov
push
xchg
inc
popa
ficomps
enter
bnd
popf
dec
jb
in
inc
sbb
jg
pop
mov
sub
ret
iret
call
sub
repz
cmp
data16
adc
adc
dec
jns
cltd
dec
adc
imul
or
mov
jns
mov
jp
sub
rclb
call
andb
jne
in
sbb
jecxz
rcrl
lret
mov
imul
mov
mov
or
sti
sbb
ret
adc
cli
popa
out
ret
cmp
call
sbb
xor
ret
dec
mov
iret
mov
inc
mov
sub
lahf
cltd
jno
mov
cmp
xchg
pusha
in
cwtl
jecxz
ret
hlt
xchg
stos
inc
cld
int3
in
pop
sahf
mov
sahf
mov
dec
cmp
add
mov
xorl
pop
ds
inc
and
mov
jo
add
xor
mov
jl
sub
in
negb
sub
push
cmpsb
fwait
xor
push
dec
push
lods
loop
in
adc
and
int3
pop
pop
pop
fwait
xchg
pop
and
sarb
lds
in
push
bound
sbb
fnsave
outsb
ffreep
imul
aas
or
jno
aam
ljmp
fmul
add
sahf
mov
inc
fs
push
push
outsl
sub
sub
pop
dec
movsl
movsb
push
jg
mov
psubq
mov
data16
sub
roll
cmp
mov
pop
stc
mov
push
jbe
nop
aad
sub
out
jns
test
xor
mov
jne
nop
mov
or
imul
hlt
add
das
fstl
mov
or
in
cltd
push
sub
push
rorb
cwtl
add
push
push
cmpsl
pop
fsubrl
std
cld
nop
ss
daa
or
jle
movsb
push
and
pop
loope
or
lods
leave
into
xchg
push
jge
mov
in
sbb
pushf
push
mov
sub
inc
mov
xchg
aam
mov
pop
jae
ja
enter
ret
jns
and
push
and
sbb
mov
dec
fwait
mov
mov
mov
pop
mov
adc
lcall
clc
movsb
pop
sbb
aam
jmp
out
repz
pop
jecxz
cmp
stc
pop
sar
mov
pop
adc
xchg
push
sbb
pop
xor
adc
xchg
jae
clc
jge
cld
xchg
jmp
addb
lods
jge
mov
dec
adc
dec
cmc
mov
mov
mov
mov
cmc
cli
mov
xchg
cmpsl
lcall
shrl
sbb
jne
dec
dec
inc
sbb
cltd
insl
push
mov
fldt
xor
mov
outsl
sarb
cmp
jle
dec
mov
inc
xor
push
mov
pop
pusha
in
fildl
adcl
push
rcrb
je
std
pop
ret
mov
jnp
adcl
sbb
pop
je
lods
xchg
cmp
repz
mov
mov
int3
call
pop
xchg
aaa
xchg
sbb
dec
pushf
fstps
cld
or
ficomps
sub
cwtl
ss
out
stos
fdivl
inc
sub
out
in
mov
dec
lret
test
cmc
pop
mov
and
jp
enter
push
jg
out
mov
pop
push
test
mov
push
add
lret
out
inc
jbe
and
mov
dec
sbb
or
push
adc
jmp
add
sahf
notb
call
imul
outsb
cs
jno
adc
ds
push
sbb
fs
idivl
jb
out
inc
cmp
jle
pop
mov
call
lret
clc
lods
xor
call
and
mov
aas
dec
adc
or
adc
xlat
mov
xchg
and
not
mov
aam
js
xlat
push
sbb
xor
adc
shl
rcrl
push
lcall
adc
xchg
sti
rcr
cmp
cmp
nopl
mov
xchg
andb
loop
idiv
jecxz
xor
pop
xchg
sbb
inc
sub
add
js,pt
jmp
movsb
xor
pop
or
clc
fucomip
arpl
jne
lcall
and
push
imul
dec
mov
clc
mov
out
cmp
loop
repz
hlt
and
sti
pop
scas
mov
jae
push
outsb
subl
and
cmp
arpl
and
lock
jmp
dec
push
dec
clc
outsl
sti
fwait
ss
fsubp
adc
shrl
push
and
push
fcompp
jns
xchg
lcall
jnp
iret
fisubrs
hlt
jnp
push
ja
js
roll
lea
fidivrs
xchg
cmp
xchg
cld
push
sbb
addl
pop
lret
cli
out
jae
sbb
mov
dec
test
push
or
cmp
push
movsb
daa
enter
pop
daa
imul
cmp
fistl
imul
mov
shlb
sarl
cmp
cmc
and
jbe
or
sub
subl
jg
jbe
sbbb
or
push
mov
cwtl
pop
jg
icebp
adc
call
jge
aad
pusha
xchg
mov
ret
jnp
add
sub
sbb
lret
mov
cmp
mov
adc
std
sub
andl
int3
pop
xor
popf
mov
notl
pop
clc
adc
lock
mov
popa
push
mov
jo
or
adc
popf
int3
xchg
dec
sub
dec
lds
sti
in
mov
pusha
cli
pop
jns
mov
push
pop
or
insb
xchg
test
test
iret
int
fsubl
leave
lcall
scas
lcall
fsts
ret
jle
mov
in
aam
sub
loop
mov
int3
lods
cmp
pusha
mov
adc
lcall
decl
scas
orb
popf
push
jmp
push
imul
sarb
push
push
add
sbbb
add
loop
dec
aaa
mov
fdivrl
bnd
dec
cmpsb
mov
addr16
lret
insb
cld
repz
mov
in
ret
in
arpl
and
pop
clc
or
push
daa
push
out
pop
add
jns
xchg
or
lods
ljmp
shrb
xchg
movsb
rcrl
je
mov
cmpsl
mov
mov
das
add
push
dec
adcb
pop
daa
out
dec
arpl
testl
push
push
cmovg
mov
mulb
mov
mov
push
notl
pop
mov
push
or
cs
dec
addr16
test
mov
insb
xorl
stos
or
mov
xlat
inc
cmpsl
inc
popl
mov
inc
bound
xchg
sub
lret
lock
in
adc
xor
gs
lods
xor
mov
jno
leave
mov
fistpll
jmp
mov
in
pop
mov
ja
mov
adc
fnsave
movsl
adc
push
addl
inc
pop
or
js
pop
inc
testb
mov
sbb
clc
enter
rcrl
sbb
daa
out
and
mov
enter
xor
dec
cmp
bound
lret
push
addr16
and
dec
xor
sub
hlt
push
or
imull
xchg
stos
mov
int3
xor
sub
lret
jg
in
sti
jmp
fcoml
test
insb
clc
pop
stc
jnp
aad
adc
or
pop
pushf
ret
ljmp
mov
xor
dec
mov
orl
jno
dec
outsb
or
dec
into
fldt
cmp
in
bound
sbb
bound
pop
jmp
out
je
movsb
fmull
jge
sub
fldl
and
sub
push
adcl
push
jecxz
adc
push
jmp
scas
insb
mov
xchg
in
cmpsb
sub
std
test
rcr
jge
notb
cmp
das
or
leave
cld
das
mov
pop
in
sub
cmc
shrb
out
adc
sub
add
mov
insl
jb
jecxz
inc
roll
push
mov
or
imul
mov
xor
cmp
or
sub
std
ss
mov
enter
mov
movsb
add
aad
jmp
and
stos
dec
jae
mull
jbe
pop
loope
data16
addb
dec
or
or
or
insb
and
sub
pushf
femms
in
imul
xlat
cmp
insl
mov
shlb
jg
insl
xor
dec
dec
push
inc
dec
jmp
cwtl
mov
mov
repnz
ret
adc
out
test
and
rcll
cmpsl
dec
daa
adc
pop
subb
mov
into
or
clc
ret
cmp
xchg
mov
fdivrl
xor
xchg
fidivs
pop
repnz
sbb
pop
fwait
and
push
cmpl
sbb
push
ds
rorb
fwait
push
add
out
cmp
mov
mov
and
xchg
or
or
enter
fld
imul
mov
mov
outsl
das
js
leave
cmp
xor
mov
mov
dec
std
pop
jne
iret
jae
pop
ja
dec
cmp
js
negl
cltd
cmp
cmc
or
inc
mov
push
repz
loope
out
cs
fwait
mov
movsb
fstps
dec
add
add
sbb
cmp
enter
add
ret
xor
loope
add
repz
cli
push
adc
or
aad
test
gs
mov
push
rcll
jmp
mov
lahf
stc
push
test
dec
pushf
pop
inc
dec
cmp
les
sbb
mov
jo
out
push
in
xor
movsb
test
leave
mov
xchg
mov
add
sbb
rcr
outsb
mov
enter
inc
inc
rcll
jae
fsts
imul
out
rcrb
sti
sub
lock
out
testb
jne
fiadds
scas
and
lea
inc
push
pop
dec
hlt
je
xor
inc
mov
out
loope
lret
out
or
xchg
hlt
movsb
iret
xchg
in
jp
movsb
or
ss
mov
jle
clc
adc
jmp
movsb
jg
cltd
idiv
xchg
adc
xor
outsl
xchg
shl
sub
and
loop
test
popf
ljmp
lret
cltd
mov
dec
aad
test
in
mov
inc
mov
lods
or
ret
cmc
cmpsb
jb
pop
lea
mov
shr
sbb
mov
mov
pusha
sahf
add
cmp
lds
out
or
in
mov
xchg
mov
xor
jl
or
stos
dec
fwait
dec
popl
inc
mov
add
mov
ljmp
jno
fsubr
inc
jnp
cmp
jg
movsb
jecxz
insl
out
push
or
gs
std
push
push
and
lcall
loope
icebp
ficoml
jns
or
adcl
jne
xchg
call
jne
in
adc
lods
inc
pushf
push
out
sub
out
call
pusha
jge
repz
or
pop
cmc
in
inc
rcrl
jle
daa
mov
scas
gs
popf
xchg
dec
jge
mov
outsl
push
sbb
xchg
sbb
clc
loope
in
sub
pop
mov
dec
mov
xchg
outsl
lock
pop
idivl
jl
push
pushf
push
cmp
ds
fidivs
adc
sbb
sbb
inc
mov
pop
nop
push
mov
jno
adc
rolb
popf
push
popf
test
ljmp
mov
movsl
int
scas
mov
xor
and
out
dec
or
je
add
faddl
mov
inc
fwait
adc
int
data16
mov
data16
out
push
test
stos
or
jns
and
stos
pop
push
inc
cmp
test
pop
push
xchg
stos
outsl
mov
ja
fstpt
shrb
xchg
cmpsl
mov
or
adc
push
mov
xor
xor
outsb
fbld
insl
outsb
adc
mov
and
xchg
or
and
or
shr
xorl
nop
out
dec
scas
mov
mov
cmpsb
xchg
xchg
pushf
ffreep
hlt
push
cwtl
rcr
fwait
in
scas
push
inc
or
dec
adc
mov
pop
fildl
mov
lods
rclb
inc
adc
es
sub
pop
out
pop
jb
lret
lock
psadbw
mov
lds
push
jmp
add
inc
add
int
psubusb
daa
adc
test
xor
popa
sub
xchg
jns
jecxz
fcoms
into
in
pop
mov
mov
and
pop
shrl
cmp
pop
xor
sbb
and
push
inc
repnz
dec
daa
aaa
fnstsw
out
out
pminub
daa
xor
adc
out
test
pop
push
lret
sbb
xor
ss
jmp
test
xchg
lret
jno
lea
sarb
or
mov
push
mov
cmp
push
test
jl
in
scas
jne
nop
mov
adc
push
icebp
sub
pop
dec
xor
xor
sub
in
push
mov
inc
pop
stos
jae
jne
fldt
dec
aas
dec
mov
les
aas
testb
dec
aas
sahf
inc
shrb
adc
xchg
outsl
dec
loope
dec
pop
adc
and
pop
jmp
and
cwtl
cmp
pop
aas
mov
ror
adc
mov
test
mov
xor
popa
rorl
add
and
adcl
dec
dec
leave
add
fiaddl
mov
sbb
nop
bound
pop
popa
loop
jge
lret
inc
dec
mov
adc
ds
cmp
sarb
adc
xor
cmp
ret
aam
test
pop
fsubl
fiadds
mov
mov
addl
in
imul
cmp
add
xchg
in
push
shrb
das
les
xlat
ja
adc
rolb
out
jp
inc
cli
mov
push
loop
or
and
cs
test
or
les
cli
inc
shrb
aas
dec
jo
cld
push
xor
or
aaa
mov
pop
inc
pop
fcmovb
jg
cmp
sub
stos
sub
xor
outsb
pop
insb
xchg
pop
ret
cld
mov
inc
and
stos
fwait
sub
cs
cld
mov
cmp
sub
or
test
out
mov
rcll
xchg
sbb
insb
pop
adc
inc
outsb
or
and
aam
ret
fimull
pop
cwtl
push
jl
int3
int
mov
xchg
popf
stc
jp
insl
jae
shlb
push
imul
movsl
cld
les
cmpsl
arpl
push
imul
aad
mov
daa
mov
testb
mov
insl
inc
push
ljmp
cmpl
nop
mov
ds
jno
mov
xchg
movsw
setno
push
lret
lret
ret
inc
inc
dec
icebp
lea
mov
movsb
pop
je
mov
xchg
arpl
clc
push
and
xchg
push
std
xor
mov
fwait
pop
add
adc
cmc
arpl
push
and
pop
leave
cmp
fld
push
enter
das
fwait
jbe
adc
sahf
push
xchg
in
push
gs
and
dec
mov
andl
fwait
mov
xor
std
fistpll
sarl
adc
clc
pusha
nop
ljmp
add
out
test
mov
pop
rorb
lds
mov
stos
xchg
sbb
into
lret
inc
cmp
jp
or
hlt
adc
testl
sbb
andl
pop
shlb
pop
popa
lahf
in
jb
daa
jno
fidivl
jns
or
loopne
jno
pop
sbb
mov
or
imul
xor
mov
mov
dec
jp
out
xchg
lret
loop
ret
mov
xchg
icebp
arpl
subl
imul
xchg
idivl
repnz
lcall
ss
outsb
inc
cmp
movsl
mov
negb
xchg
push
ret
sti
leave
xor
cmc
mov
pusha
jle
xor
icebp
xchg
push
sbbl
enter
mov
xchg
jp
jp
ret
inc
xchg
faddl
pushf
and
pop
data16
push
jno
fisubrs
or
sub
fcomps
push
lods
mov
shl
loop
adc
or
jb
xlat
pop
pop
lret
inc
ss
call
sub
sbb
inc
sub
add
mov
sub
ljmp
outsb
mov
mov
pop
xor
push
and
js
mov
out
push
push
ljmp
popf
lret
push
sub
mov
and
leave
sbb
jns
xchg
imul
pop
add
int3
es
fidivl
in
pop
movq
mov
daa
int
xor
inc
int
cmp
jg
aaa
dec
arpl
mov
pop
pop
push
div
jo
jecxz
pusha
xchg
lcall
xor
or
shll
xchg
mov
sbb
xchg
lret
pop
mov
cwtl
mov
pop
fs
daa
cmp
xchg
ds
orb
pop
arpl
mov
mov
xchg
movsl
and
ret
das
inc
add
call
sub
sbb
in
mov
int3
mov
mov
cwtl
pop
fstpl
mov
and
pop
std
lret
cmp
int3
addr16
aad
insb
repnz
pop
inc
push
add
pop
shrl
fsubr
or
pushf
das
cmc
outsl
adc
inc
dec
aaa
or
lcall
dec
adc
bnd
cmp
stc
adc
fwait
lods
mov
mov
sub
ret
faddl
repnz
xchg
gs
imul
and
inc
xchg
jno
xchg
xchg
cmp
cmc
lods
cli
add
xorb
aam
or
mov
jmp
inc
movsl
push
popa
ret
ljmp
imul
push
add
js
clc
repnz
rolb
bound
add
leave
mov
and
jg
mov
int
js
lea
or
jmp
popf
push
shll
mov
in
mov
inc
cmp
cs
cmp
cs
cmpsl
mov
leave
jae
push
dec
push
es
mov
sub
or
lds
cltd
pop
movb
sbb
jbe
dec
push
mov
xchg
hlt
or
test
jb
cld
jnp
iret
inc
mov
cmp
lret
adc
rorb
cltd
and
daa
in
ror
mov
out
xchg
mov
mov
shll
xchg
inc
add
cwtl
data16
pop
xchg
cmp
push
loopne
xchg
sub
push
mov
adc
xor
lret
inc
or
shrl
jge
adc
out
data16
in
jl
adc
imul
mov
mov
outsl
jp
push
mov
add
das
mov
xorl
ja
in
in
inc
add
mov
fstl
iret
out
adc
push
imul
push
pushf
js
or
mov
add
out
jb
jmp
and
mov
pop
mov
xchg
push
lods
enter
cmc
dec
xchg
fld
sahf
popl
loop
and
push
or
xor
shrb
fcoms
inc
shl
das
rcl
lods
push
mov
iret
out
out
in
scas
repnz
jb
and
xorb
fstps
hlt
mov
add
push
jo
stos
aas
mov
or
aas
add
inc
inc
mov
jne
jo
xchg
stos
loopne
je
mov
in
fld
inc
cmp
into
xor
and
shrl
aaa
xor
out
pop
mov
jle
iret
mov
scas
les
rorl
stc
ja
xchg
mov
sahf
inc
and
xor
add
xchg
das
xchg
out
into
cwtl
or
mov
daa
xchg
shr
mov
rcrb
out
fidivrl
jb
jb
cwtl
out
pop
jnp
sahf
enter
and
enter
cld
fiadds
xchg
or
or
lret
dec
addr16
xor
and
push
jno
inc
pop
mov
push
hlt
je
cli
insl
add
mov
ss
jp
fdivl
mov
stc
repz
lods
daa
into
mov
loop
inc
inc
jg
imul
xor
adc
cmp
fnstcw
mov
and
cltd
push
inc
jo
test
jl
push
shl
sar
lea
movsb
inc
out
inc
adc
mov
pop
fsubs
out
pop
push
mov
dec
fisubrl
popl
pop
scas
insl
xchg
aad
xchg
mov
fbstp
cmpsl
jbe
rorl
aas
cwtl
lea
popf
or
pop
cmpsl
pop
mov
xchg
jg
shlb
and
xor
add
inc
mov
je
cmp
fstpt
cmpsb
popa
out
push
hlt
cli
fidivrl
mov
push
jecxz
dec
fbld
in
push
arpl
pusha
mov
pop
inc
or
mov
aad
push
sub
loopne
xchg
cmpsl
int3
nop
mov
xchg
mov
or
cld
mov
xchg
xor
cld
addl
fistps
push
push
xchg
xchg
movsl
stc
add
cmp
out
call
xchg
pop
push
push
sbb
cld
lods
pop
cmp
gs
les
or
test
jb
push
aam
sbb
int3
dec
loopne
mov
mov
test
pop
xor
rclb
mov
lret
dec
or
lock
push
xchg
mov
subl
xor
in
cld
out
and
inc
fstl
inc
jb
sub
xor
loop
aad
jecxz
cltd
pusha
push
or
idivb
loopne
adc
movsl
sbb
xor
inc
adc
xchg
out
fs
add
pop
mov
imul
jle
xor
push
stos
inc
sub
mov
mov
call
lret
mov
aad
mov
push
and
stos
in
mov
ljmp
adc
add
or
cmp
lods
push
xchg
int3
dec
jg
mov
lret
stos
push
sub
add
jge
sub
shlb
push
unpcklps
aam
mov
pop
mov
mov
xchg
jle
or
mov
xchg
mov
lcall
roll
pop
negl
mov
fs
into
cwtl
pop
lea
lret
stos
in
jecxz
data16
pop
xor
dec
scas
mov
fwait
aad
mov
filds
pop
stos
inc
push
stos
cld
mov
popa
sub
sbb
int3
call
and
outsl
test
data16
cmp
jecxz
pop
outsb
push
lock
pop
sub
cmpsl
jae
jo
lret
adc
xchg
dec
enter
mov
push
pop
xchg
cmp
pop
adc
dec
psubusw
mov
ficomps
shrl
hlt
outsb
out
arpl
sub
cmp
shll
xor
js
lret
sbb
lahf
pop
aas
into
mov
loope
sahf
mov
push
mov
in
cwtl
xchg
mov
sub
jns
adc
not
xchg
or
and
cmp
movsb
imul
or
xlat
or
dec
push
xor
hlt
mov
dec
sub
xor
jns
adc
scas
std
popl
pop
test
cli
loopne
int
push
scas
in
stos
xor
or
pop
inc
loop
sbb
push
jecxz
cmp
cmp
jmp
rorl
lcall
inc
pop
dec
mov
pop
sbb
out
dec
mov
jge
mov
pop
cmp
pop
test
adc
pusha
rcrb
mov
bound
push
dec
mulb
lret
pop
mov
lcall
mov
dec
inc
pushf
out
cmp
jns
fs
pop
andl
movb
mov
add
loopne
push
and
divl
mov
mov
xor
jmp
nop
mov
sbb
fists
push
enter
adc
jge
or
rcll
add
sbb
pushf
sbb
or
icebp
jmp
dec
fimuls
push
and
xchg
int3
mov
pusha
cli
jae
test
in
mov
repz
bound
cs
pusha
shlb
push
movsl
cltd
mov
aad
aaa
add
xchg
ds
sub
gs
negb
push
or
clc
out
lcall
call
fwait
shll
mov
mov
mov
outsb
loop
sbbb
inc
pop
pusha
mov
sbb
clc
xor
ret
push
xor
iret
repz
push
ret
ror
mull
ljmp
mov
xchg
push
add
pop
out
cmpsb
mov
or
mov
jmp
lock
push
mov
addb
imul
into
jb
pop
loope
cmpsb
lret
fcmovbe
mov
dec
adc
inc
inc
in
cs
stc
dec
into
xchg
ds
cmp
cli
add
repnz
add
push
in
adc
shrb
sbb
out
in
hlt
adc
rolb
sbb
cmpsb
sbb
inc
scas
jno
icebp
xor
int
push
sub
cmpsb
and
das
lcall
ljmp
xchg
adc
pop
ss
dec
scas
xchg
push
xor
std
dec
or
outsb
push
clc
xchg
faddl
sbb
jnp
ret
jae
add
pop
dec
xor
jo
dec
out
popf
mov
jp
aam
testl
lcall
mov
ds
icebp
nop
push
test
jmp
mov
and
call
push
mov
add
mov
aaa
sahf
mov
inc
xor
movsl
sti
sub
test
sbb
jbe
add
jne
xor
pop
or
loop
insb
lcall
cmp
lods
cmp
out
sub
repz
sbb
sbb
int
pushf
push
lahf
push
das
push
ficoml
add
jge
pop
and
cmp
xlat
mov
push
je
fs
add
loop
push
pop
adc
in
push
and
inc
lods
lea
jo
mov
xchg
dec
sarl
movsb
fbstp
xchg
scas
call
or
sbb
jne
loop
bnd
in
and
daa
jg
push
xchg
dec
adc
in
add
cs
mov
iret
pop
cld
sbb
sub
add
dec
lods
pop
test
daa
sbb
jo
pop
xchg
lret
adc
dec
push
jo
mov
sub
loope
aad
fmulp
mov
fincstp
daa
gs
mov
in
cltd
cmp
or
in
in
lds
out
xor
mov
lea
fistpl
mov
cmc
out
lret
lods
neg
iret
push
popa
and
loope
arpl
dec
jl
cmp
add
int
pop
push
std
mov
mov
jmp
imul
xchg
cli
bound
inc
dec
movsl
das
jnp
cmp
add
xchg
mov
add
xchg
or
or
mov
mov
adc
insb
out
test
mov
sbb
mov
in
stos
fisttpll
into
pop
ret
scas
shr
jo
out
dec
popf
or
add
lret
mov
cltd
cmp
sbb
cmc
loop
fwait
add
push
or
mov
jecxz
leave
jecxz
lret
fsubrs
push
or
out
pusha
pushf
cmp
js
cmp
repz
sub
sti
mov
in
imul
pop
mov
test
lea
bnd
and
fstl
jns
xchg
inc
sub
dec
aam
mov
push
mov
cmp
in
mov
clc
cmpsb
shlb
icebp
mov
jp
sarb
lahf
sti
dec
mov
movsb
inc
pop
push
ds
aas
negl
push
sbb
xchg
sbb
dec
lahf
push
test
in
rorb
rcll
divb
and
aaa
cmp
cmp
add
mov
add
or
push
das
repnz
je
insl
cmp
les
and
sub
decl
pop
dec
cmp
xor
or
in
cmp
xchg
sbb
or
xchg
ret
xorb
cli
sbb
adc
movsl
jmp
dec
into
in
aaa
jg
iret
cmpsl
orb
dec
and
iret
jmp
pop
aam
inc
movsb
xchg
in
add
clc
out
or
jl
and
and
outsb
push
jp
cltd
insb
mov
add
add
pop
cmovb
or
fsubrl
pop
je
lock
shrb
cmp
inc
xor
xchg
pop
pop
xor
mov
jnp
bound
sbbl
rcrb
mov
js
sub
mov
jecxz
scas
xor
js
sahf
aas
fldt
out
data16
aas
mov
repz
inc
dec
mov
pop
in
insb
add
xor
addr16
mov
xlat
pop
enter
sub
in
and
mov
and
rcrb
divb
dec
mov
icebp
paddw
xor
dec
stos
mov
cwtl
fstl
subl
inc
sub
enter
rol
xchg
mov
adc
insb
pop
adc
push
push
addl
in
hlt
jp
sbb
inc
pop
sbb
jl
lret
mov
test
fsubl
pop
pop
out
orb
popa
cmp
sahf
hlt
and
repz
mov
mov
lcall
mov
loope
add
pop
rorl
ss
jmp
loopne
mov
ljmp
pop
jo
mov
jo
xchg
test
pop
pop
fnsave
mov
lock
dec
inc
push
mov
lea
jae
sti
push
inc
adc
push
loope
xchg
mov
mov
sub
in
pop
adc
mov
mov
loop
cmp
jmp
cs
scas
jb
outsb
in
inc
cmp
and
dec
clc
jno
pop
popf
inc
dec
dec
mov
int3
lock
xchg
xlat
adc
mov
add
inc
addl
mov
je
repnz
sbb
pop
inc
int
clc
mov
xor
cld
mov
or
adc
adc
cmp
sbb
ss
lods
xchg
jmp
jne
fstps
add
mov
push
ret
lods
shll
stc
cmp
js
push
xor
pop
sub
pop
sbbl
data16
repnz
jl
add
mov
push
inc
mov
hlt
sub
loopne
push
loopne
jne
xor
ret
xor
out
xlat
lret
dec
pop
lods
mov
push
imul
stos
dec
loopne
out
lahf
fcompl
hlt
mov
sub
lea
jb
int3
sbb
pop
push
or
dec
xchg
and
outsl
xchg
cwtl
cld
hlt
les
xchg
stos
inc
or
dec
scas
inc
cmp
jae
or
fmuls
mov
cwtl
and
insl
pop
inc
ja
test
jle
jb
add
push
and
fstpt
inc
ret
int
add
jne
fstl
cmp
mov
xchg
addr16
lock
dec
adc
dec
data16
pop
jo
add
xor
xchg
push
push
push
jl
push
xchg
mov
shlb
dec
pushf
mov
xchg
bound
xchg
add
decb
subb
adc
xchg
fists
mov
sbb
test
fcomps
and
sti
dec
and
and
cmp
xor
xchg
sbb
enter
mov
cmp
or
stos
dec
dec
lret
pushf
mov
ret
xor
ds
pop
lcall
mov
dec
pop
lock
cs
jbe
aas
inc
xchg
lret
and
scas
gs
mov
popf
jmp
les
hlt
out
mov
xchg
adc
stos
scas
dec
in
cwtl
popa
or
push
pop
cs
mov
stc
sar
sub
fs
cmpsl
stos
ljmp
pop
test
in
xorb
mov
inc
mov
pop
cltd
mov
or
bound
lcall
xlat
sub
fistps
mov
lea
mov
push
rolb
mov
ljmp
arpl
sbb
iret
ficoms
dec
stc
adc
aaa
mov
jo
or
cmpsl
mov
shl
sub
push
sar
lea
cmc
xchg
lock
xchg
into
testl
mov
jae
inc
cmc
cmpsb
test
out
ds
xchg
enter
pop
push
std
fwait
pop
fnclex
xor
add
xchg
rcrl
andb
arpl
orb
push
clc
cmp
or
xor
adc
jbe
sub
and
xor
scas
fdivrs
mov
rorb
sub
mov
pinsrw
testl
or
cli
fiaddl
jae
fmull
fsub
mov
cmc
xchg
sub
js
imul
lods
cmp
enter
test
lods
push
fs
pop
push
pusha
pop
dec
rorb
test
icebp
xchg
pop
rcl
add
xor
jnp
cmpsb
or
insl
or
adc
iret
lods
and
mov
mov
dec
or
push
mov
bound
or
mov
and
divb
enter
or
push
pop
shr
push
or
add
cmpsb
inc
clc
fmuls
pop
dec
scas
and
and
das
push
jns
in
je
inc
pusha
rol
mov
rcrl
int3
rorb
fwait
mov
jb
insl
addr16
or
jnp
call
loope
sbb
inc
je
cmp
jl
lea
jg
int
mov
mov
xchg
dec
xor
mov
stos
jg
jne
mov
test
fs
pushf
test
arpl
and
lock
fisttpl
ss
aas
push
mov
mov
movsb
rcrl
pop
push
out
pushf
sub
das
lods
stc
popa
daa
inc
cmpsb
cmpsb
adc
jl
mov
mov
inc
icebp
inc
out
popa
mov
lret
sbb
adcl
nop
enter
mov
packsswb
fnsave
jmp
sub
xchg
inc
push
adc
mov
push
in
mov
ja
xchg
test
cmp
je
out
jl
in
les
xchg
xchg
jl
cmp
aaa
add
stos
or
popa
stos
push
jle
into
addr16
outsl
ficoml
or
std
pop
fbstp
out
bound
inc
xchg
push
cltd
ret
mov
mov
pop
xlat
sbb
es
sbb
jno
lea
cltd
adc
add
lcall
cmc
mov
aam
les
das
data16
jp
add
test
sub
dec
jne
popf
stos
dec
add
andb
mov
fcomi
lods
xchg
and
pop
leave
rol
jge
stc
sub
mov
push
mov
scas
pop
bound
mov
nop
inc
dec
push
cmp
sbb
xchg
push
addr16
repnz
jne
add
cmc
push
in
xor
fdivrl
and
cmpsl
aaa
mov
enter
xchg
in
sbb
sub
cmp
lods
les
repnz
xchg
jno
xor
in
push
in
stc
int3
cmpsl
cwtl
and
push
or
xchg
fimuls
cmp
pop
hlt
lea
push
push
add
insb
rclb
cmp
jo
in
or
xchg
icebp
sarb
stos
or
into
xchg
pusha
sub
sub
test
cmpsb
jbe
xchg
or
pop
push
pusha
sbb
inc
pop
pop
subb
cmp
fdivs
mov
add
and
loopne
mov
das
xor
movsb
dec
movsb
adc
fdivrs
cmp
add
repnz
lods
inc
lret
in
jecxz
push
cmp
pushf
not
les
pop
mov
xchg
dec
push
imul
pop
fwait
cmp
pop
jle
mov
mov
test
ss
bound
cli
xlat
xchg
xor
jecxz
pop
xor
ss
das
add
dec
fcompl
cmp
outsl
rorb
cld
xchg
mov
jle
mov
add
xchg
imul
pop
aas
push
in
cmp
pop
repnz
cmc
repz
mov
sbb
push
add
pop
push
shll
jb
lcall
or
push
fs
pop
cmpsb
repnz
jae
and
jns
cwtl
adc
shrl
iret
xchg
test
add
pop
stos
adc
nop
inc
ja
psadbw
add
addl
jae
cmpsb
add
mov
mov
std
stos
lock
cwtl
je
push
mov
loope
fbld
arpl
mov
push
push
xlat
inc
ret
jne
push
sbb
xchg
lahf
and
iret
push
rorl
mov
cmp
lods
or
test
shlb
add
inc
and
pushf
xchg
aad
or
sub
cmp
jmp
sub
push
insb
lcall
into
xlat
fcoms
repnz
push
arpl
scas
repnz
mov
push
xchg
pop
daa
push
cs
dec
repz
mov
aaa
ret
jl
fidivrl
test
adc
push
adc
rorl
push
add
sbb
inc
lahf
ljmp
adc
mov
stc
mov
sbb
icebp
jne
sbb
js
mov
inc
push
adc
pop
dec
and
or
dec
stos
mov
test
ljmp
adc
inc
push
push
fst
push
pop
adc
lret
lret
and
fildl
pop
xchg
jmp
outsb
aam
sarl
call
mov
pushf
pushf
fistps
xor
sub
mov
int
push
mov
pop
mov
das
pop
shlb
pop
push
add
lds
ret
or
sbb
jecxz
jge
push
ljmp
aas
mov
cltd
int3
mov
push
mov
jb
pusha
mov
data16
aas
into
std
xchg
cmp
cli
test
adc
inc
leave
sbb
cmp
test
dec
lods
add
lods
stos
out
sub
subb
jl
jmp
sub
gs
or
insl
and
pop
jnp
std
lods
mov
scas
mov
in
fidivrs
int3
lods
test
movsb
jno
dec
or
sub
mov
insb
push
xor
sbb
pop
inc
imul
fiaddl
jb
xor
js
mov
ljmp
bnd
ljmp
mov
xorb
fcmovbe
mov
adcb
pusha
sti
test
sub
adc
add
sub
mov
bound
cld
repz
mov
insl
js
mov
sarb
mov
pop
es
aaa
mov
or
xor
xor
in
mov
in
xor
pop
cs
cmp
and
mov
aaa
push
xor
and
rorl
flds
scas
scas
aad
ljmp
je
or
mov
or
fldt
jle
mov
out
stc
scas
mov
faddl
jge
add
pop
pop
mov
imul
push
mov
cld
push
inc
outsl
add
sbb
add
repnz
test
jmp
cmp
push
enterw
adc
sub
adc
sbb
push
inc
push
mov
inc
dec
cmc
push
ss
leave
fisttpll
and
rorb
pop
dec
mov
dec
cmpsb
hlt
int
lret
mov
xor
aad
adc
lods
lcall
jge
mov
cli
adc
in
xchg
mov
push
lods
push
add
fdiv
out
push
mov
icebp
stos
aam
push
popa
ds
rclb
cmpsb
bswap
cs
insb
int
xchg
aas
xchg
add
sub
dec
loop
inc
dec
loop
fstps
sub
sbb
notb
test
xor
pop
in
shrl
inc
loopne
and
sbb
xchg
shll
test
in
pop
jo
jns
gs
ficomps
xchg
fs
sub
xchg
aam
out
cmp
test
aaa
movsb
fmul
dec
iret
adc
aam
push
cmc
outsl
and
cli
xchg
push
mov
dec
pop
pop
xchg
sti
in
mov
mov
xlat
jg
adcb
inc
loop
repnz
xchg
loop
cmp
sub
addr16
adc
sbb
sbbl
in
in
dec
inc
dec
lret
inc
into
dec
dec
ret
sub
movsb
or
mov
scas
bound
nop
inc
xor
cmpl
insb
hlt
xchg
pop
adc
push
sbbb
pop
int3
adc
scas
sbb
push
insl
sub
pushf
inc
pop
adc
dec
ljmp
add
mov
rcll
fwait
push
dec
push
movsb
and
sbb
lods
cmp
inc
dec
mov
xchg
adc
jmp
aaa
jns
lods
std
jecxz
adc
loopne
sbb
jle
inc
or
ficomps
pushw
pusha
hlt
xor
enter
or
arpl
or
sbb
mov
icebp
and
xchg
or
fiaddl
mov
jo
xor
cmp
stos
add
rcr
popa
fmuls
lods
lahf
jle
fcomip
ret
imul
lods
pop
push
test
and
in
mov
dec
outsl
cmpsl
mov
stos
ret
pushf
cmp
dec
jle
js
test
push
repz
pop
aam
or
inc
adc
psllw
rcrl
jp
mov
dec
push
jno
add
insl
add
mov
jo
test
in
adc
mov
les
fadds
pop
inc
loop
xor
das
cwtl
xchg
cli
rclb
jns,pn
and
mov
insb
mov
cmc
je
and
sbb
inc
lahf
xchg
sbb
jmp
xchg
xchg
jne
pop
ja
subl
xchg
or
scas
cmc
jnp
push
out
jnp
insl
aas
pop
xor
jbe
lods
dec
mov
mov
adc
inc
sbb
add
push
popa
je
gs
outsl
pop
sub
aad
cmp
inc
or
rorl
repnz
sti
mov
push
lods
dec
popf
js
push
dec
ret
fdivl
sub
aaa
pop
cmp
and
jbe
jmp
dec
xchg
scas
add
xor
mov
stos
xor
aaa
movsl
movsl
mov
inc
add
stos
addr16
loop
sub
addl
mov
jg,pn
std
sbb
jo
push
cli
inc
mov
sub
in
cli
jnp
jle
cmpsb
stc
sub
popa
add
push
jge
inc
popa
push
xor
cwtl
mov
pop
jmp
mov
or
into
xchg
adc
or
adc
fnstenv
push
and
out
mov
xchg
loop
cltd
movsb
push
out
movsb
cli
incb
jne
xor
and
scas
mov
loopne
add
in
xchg
xor
push
adc
push
insb
xchg
push
stos
push
mov
loopne
rcll
or
icebp
xchg
push
les
cmp
cli
out
test
insb
out
sub
fimull
cld
aaa
jb
sahf
jge
sub
les
cmp
mov
jg
inc
and
enter
les
sahf
dec
ja
fwait
adc
jmp
outsb
push
cmp
gs
stos
push
stos
enter
lea
inc
stos
mov
push
mov
bound
lret
lods
mov
aaa
stos
mov
rclb
jae
mov
pusha
jmp
or
mov
insb
int
jle
and
jp
sbbl
mov
popf
inc
sahf
jae
cmpsl
push
mov
dec
push
js
sti
adc
mov
int
les
movsl
mov
push
mov
jg
fisubrl
mov
loop
andb
aaa
fst
insb
fstl
mov
rcrb
fsubl
ds
dec
jle
pushf
xchg
js
xor
pop
pop
inc
or
and
movsl
push
outsb
cmp
call
mov
test
addl
and
cmpsb
int3
cmpsb
add
push
cmpsl
xchg
or
push
lods
push
or
into
mov
cmp
sarl
adc
sub
adc
cmp
xchg
divb
scas
push
xor
daa
pop
dec
sub
add
ds
adc
ret
out
ljmp
pop
xchg
fisubrs
mov
out
xchg
mov
inc
inc
fsubr
shr
pop
aad
scas
pop
int3
jno
xchg
sbb
cmp
sbb
push
add
mov
fildll
out
and
sbb
ss
sub
scas
mov
out
push
push
adc
icebp
mov
iret
or
fistl
fcoml
push
ret
lcall
movsb
mov
push
sub
or
adcb
lret
dec
pop
jmp
aaa
mov
data16
stos
push
push
mov
inc
pop
xchg
clc
hlt
add
mov
pop
mov
push
or
fnstenv
inc
sbb
call
push
or
mov
add
shll
mov
and
adc
lock
es
out
mov
mov
ss
mov
push
mov
sub
sahf
int3
out
ljmp
in
dec
pop
rorl
add
adc
adc
ret
adc
jo
test
in
fsubrs
sahf
test
shrl
xor
lea
int
popf
insl
or
sub
jbe
cmp
or
movl
jb
pop
mov
or
movsl
repz
lcall
adc
mov
and
test
ljmp
or
lods
pop
mov
out
or
das
mov
sub
mov
fld
gs
popa
movsl
ja
insb
mov
adc
mov
in
dec
pushf
jle
sub
bound
out
rorl
mov
pop
leave
subb
arpl
adc
mov
loop
call
add
mov
mov
test
nop
push
out
dec
and
lcall
xor
add
lds
mov
sbb
sub
inc
mov
sbb
xor
push
pop
sub
pop
shll
iret
pusha
ror
xor
daa
sbb
inc
and
sbb
in
xor
aas
adc
cli
cwtl
adc
sub
or
rcrl
push
fstpt
dec
mov
push
mov
pop
ret
int3
and
movsb
aaa
lcall
data16
add
mov
ja
lcall
mov
pop
aad
out
dec
cmp
lcall
xlat
inc
imul
jne
push
push
adc
xchg
aad
int
mov
add
fwait
jb
aam
repz
and
stc
cmp
shld
add
out
cmovbe
lds
sbb
loopne
lods
ds
xlat
dec
pop
jg
sahf
sub
push
hlt
push
or
adc
and
dec
jnp
and
repz
mov
xchg
push
cwtl
jo
push
mov
adc
pop
mov
add
and
jl
or
xlat
loop
mov
out
mov
inc
inc
adc
rcl
add
and
stos
cmp
add
push
aaa
lods
push
jl
lods
aaa
loopne
adc
push
add
test
push
imul
push
pop
mov
in
lods
out
loopne
cwtl
lods
dec
into
cli
loope
ja
pop
loope
cmp
frstor
mov
jmp
dec
lods
or
in
add
jmp
ds
lods
push
ret
sub
and
sbb
cld
or
pop
push
adc
lret
sub
sahf
xchg
pop
test
ljmp
mov
xlat
filds
fiadds
stos
push
lahf
push
jne
xchg
std
pop
stc
dec
leave
mov
push
mov
js
adc
cmp
sbb
push
sub
lds
mov
pop
andb
mov
cmp
lcall
mov
js
popa
sub
cvtps2pi
rorl
lret
push
lods
jae
out
iret
and
lea
outsb
xchg
mov
mov
and
inc
xchg
mov
scas
sarb
sub
rol
dec
lret
xor
adc
xlat
in
sub
testl
arpl
out
push
mov
mov
jns
insl
add
push
test
mov
xor
call
aam
in
lds
or
stos
pop
push
dec
roll
cmp
pushf
test
shll
cmp
fcmovnbe
stos
sbb
mov
jecxz
mov
in
shrl
popf
int
pop
push
or
pop
out
ret
and
mov
scas
push
jecxz
and
dec
and
cmp
mov
xor
add
push
loopne
mov
pop
js
test
jmp
insl
pushf
scas
inc
les
sub
jl
xchg
inc
xchg
mov
push
adc
push
push
sub
adc
mov
dec
rsqrtps
jb
add
xorl
fistps
push
int
or
or
movsb
lea
jmp
xchg
add
dec
adc
lods
mov
jns
fcoms
push
movsl
push
mov
scas
popa
dec
jns
jno
orl
out
imul
xchg
jp
not
add
jno
or
xchg
xchg
sbbb
mov
outsl
xor
sbb
stos
out
and
push
sbb
mov
lcall
dec
lret
gs
test
out
adc
out
jae
adc
and
cltd
sub
addr16
fbld
jo,pt
inc
xlat
sti
aaa
stos
data16
sub
fs
arpl
nop
mov
mov
pop
add
andps
rcll
jl
imul
cmp
addr16
lock
push
hlt
sub
insl
decl
scas
or
cld
cld
cmc
ja
mov
nop
push
mov
in
dec
fwait
mov
iret
xchg
pop
xor
jb
pop
fildl
jge
inc
arpl
cmc
dec
jg
cltd
mov
jb
add
outsl
xor
or
mov
cmp
lret
xchg
mov
loop
pop
xchg
mov
movsl
rolb
mov
stos
adc
ret
mov
les
mov
icebp
out
mov
shll
incb
lock
mov
mov
and
and
sbbb
cs
push
and
data16
adc
int3
adc
mov
and
or
xchg
inc
mov
hlt
cld
pop
adcl
inc
mov
pop
mov
int3
repz
shlb
mov
vmovaps
push
aaa
sbb
out
xor
incl
pop
or
fs
cmpsb
pop
stos
sbb
movsl
mov
and
xchg
cmpb
xlat
in
ja
jg
jp
pop
adc
insl
or
jge
icebp
mov
mov
xchg
add
cmpsl
sub
or
iret
jne
mov
and
lea
mov
jnp
out
xor
jae
ret
popa
xchg
mov
sub
mov
mov
lock
in
jno
out
sub
xchg
and
in
xchg
push
jge
inc
fdivrp
inc
and
lret
inc
sahf
icebp
and
mov
jbe
sti
loopne
pop
ss
dec
ds
push
sub
dec
pusha
mov
jnp
ja
stc
out
mov
test
pop
sar
xorl
push
out
and
popf
push
in
enter
out
pop
mov
mov
xchg
sbbl
sbb
roll
jns
repnz
and
jle
push
xchg
stc
sub
and
gs
cmp
jmp
sub
pop
jae
xor
popf
mov
add
jbe
inc
incb
je
mov
clc
xchg
shlb
pop
inc
push
cmc
mov
mov
sahf
sbb
cmp
cmc
test
push
dec
mov
sub
aaa
adc
aam
dec
sub
and
movsb
sub
movsb
shlb
out
sti
scas
mov
mov
xor
fwait
xor
and
test
into
add
clc
and
add
sbb
decl
mov
and
pop
or
mov
js
cwtl
ficompl
mov
pop
mov
mov
adc
xor
push
inc
je
or
iret
mov
sbb
les
pop
pop
pop
mov
xchg
nop
and
mov
lret
fucom
out
fstl
fsubrs
mov
xchg
cmpsl
scas
divb
fcmove
mov
pop
mov
cmp
scas
out
xchg
add
std
dec
and
scas
ljmp
jg
pusha
mov
cld
xchg
pop
jp
out
enter
test
js
pop
mov
movsl
mov
or
jp
mov
mov
mov
xor
stc
cmp
popf
add
push
test
imul
mov
xchg
das
cmp
add
xor
adc
cmpsb
sub
or
pop
jl
push
out
int
aaa
repz
mov
jnp
adc
loop
dec
repnz
icebp
lret
jl
push
loope
test
adc
jecxz
test
cli
idivb
std
int3
mov
shrb
jns
mov
add
movsl
icebp
xchg
mov
testb
mov
das
jp
sub
sbb
mov
xchg
nop
fwait
popf
lds
push
pop
mov
mov
pop
sbb
nop
xchg
int3
adc
xchg
enter
xchg
xchg
xchg
lock
gs
mov
xor
dec
insb
jge
test
jno
add
hlt
cltd
stos
add
jnp
xor
test
lret
xchg
push
mov
inc
mov
dec
inc
pop
mov
add
call
mov
test
inc
ss
mov
cmp
dec
loop
addr16
lods
inc
dec
dec
testb
movsb
test
cltd
and
aas
movsb
std
or
dec
ss
repnz
dec
int3
gs
nop
mov
sarl
or
out
xchg
pop
dec
sub
call
lcall
sub
shll
sbb
mov
stc
mov
imulb
jns
addr16
xor
sahf
or
sub
cli
and
fiadds
jnp,pt
clc
or
cmpsl
loope
and
cmpb
pop
xor
adc
inc
arpl
jle
stos
sbb
enter
xchg
insb
mov
push
cmp
mov
dec
subl
fwait
pop
mov
lock
add
int
sarb
fisttpl
out
pop
inc
cli
popl
arpl
icebp
xor
mov
loope
and
inc
sti
fsubl
lock
jle
xor
stos
and
scas
xchg
nop
or
in
es
mov
adcb
jmp
or
mov
test
xor
andl
cmp
rclb
iret
sbb
pusha
in
mov
inc
loop
cmp
push
loop
jne
sarb
rcl
jl
rcr
dec
shr
rcll
pop
xchg
scas
mov
insl
test
jge
inc
jl
jo
jmp
cmc
jae
aas
jnp
in
movsl
and
jae
jecxz
pop
inc
push
and
xor
stos
mov
inc
jbe
mov
mov
fidivl
stos
and
xchg
adc
adc
dec
and
notl
clc
add
inc
mov
lret
lahf
addb
cmp
push
jmp
mov
xchg
loopne
add
lods
or
inc
add
add
loope
loop
movsb
mov
inc
outsb
ret
cmp
lret
ret
hlt
fmull
mov
mov
sahf
fst
in
sbb
adc
andl
stc
mov
lods
jo
pushf
cmp
sub
jmp
xchg
iret
aaa
jns
mov
hlt
lods
loope
pop
addr16
nop
test
xor
scas
jmp
cli
inc
push
cmp
cmp
sub
incl
dec
or
push
xlat
or
pop
mov
sub
dec
lret
mov
mov
clc
stos
xchg
insl
mov
out
sarb
jg
pop
ret
jnp
push
sub
xlat
inc
out
scas
or
gs
loop
nop
sarb
cmp
enter
jno
pop
das
xchg
fcmovne
push
dec
mov
std
sbb
and
cmpsl
cmp
iret
mov
divb
dec
adc
imul
mov
pusha
mov
pusha
dec
les
jnp
cmp
icebp
insl
scas
mov
cmpsb
mov
aas
sahf
mov
sub
scas
mov
clc
mov
int3
gs
sbb
mov
cld
stc
add
sbb
fwait
mov
jle
lcall
es
and
jno
pop
jmp
jns
jbe
in
xor
or
add
xchg
cs
shlb
fistpl
fdivrs
xlat
cmp
or
pusha
push
mov
inc
sub
inc
in
test
mov
cwtl
ds
pop
pop
pop
mov
inc
jg
or
shrl
mov
jno
jg
cmc
dec
push
or
xorb
push
pop
jnp
xor
aad
add
push
aaa
loop
mov
cmp
orb
lcall
rclb
jmp
ret
xor
and
cmpsl
jle
cmpl
cmp
pop
cmpsl
pop
lods
mov
add
xor
scas
test
pop
or
xchg
ja
inc
mov
cmpsb
lock
add
push
jae
dec
lods
aas
je
sbb
mov
or
mov
sahf
mov
sub
mov
setno
fdivrs
sarl
push
mov
lock
imul
nop
push
adc
xchg
fadds
jnp
insl
jne
mov
int3
inc
rcr
int3
and
mov
lcall
mov
push
rorl
and
insb
shll
jne
orl
pushf
or
push
ja
cwtl
push
pop
xor
jb
lods
adc
inc
mov
inc
orb
lds
rolb
mov
dec
jmp
dec
mov
bound
xchg
test
and
push
loopne
dec
inc
mov
mov
js
or
dec
dec
roll
das
push
xor
rcrl
cld
aas
lret
push
scas
sbb
int
adc
mov
adc
add
and
jae
cld
into
mov
loopne
sub
fdivr
test
xor
pusha
xchg
push
rcr
push
test
add
pop
jl
sar
xor
shlb
push
dec
aaa
movsb
mov
push
mov
outsb
subl
push
inc
scas
or
out
pop
inc
sbb
mov
sbb
es
pop
dec
mov
push
dec
sub
push
ds
mov
xchg
mov
lods
popa
cmpsl
stc
pushf
div
push
mull
mov
adcl
cmp
dec
lds
fsts
call
mov
cld
inc
or
push
mov
or
sub
pop
xchg
inc
mov
cmp
inc
cld
sub
mov
xlat
dec
mov
or
xor
jne
mov
mov
mov
push
out
sahf
js
dec
sbb
scas
popa
cmpsb
jne
movsl
jns
call
pop
xchg
pop
inc
fnstenv
rcrb
movsb
jns
mov
sub
mov
and
push
jle
sbb
jb
movsb
cltd
mov
jmp
loope
xchg
stos
test
arpl
and
inc
push
repz
movzwl
lds
push
pop
aas
inc
popf
ljmp
mov
in
xchg
pop
repnz
and
outsb
cmp
out
cmpsl
push
leave
lock
jle
lds
mov
and
stos
insb
mov
in
push
sub
mov
cmp
adc
or
push
xchg
dec
cld
addr16
insl
fsubl
mov
es
mov
xchg
xchg
loop
mov
loop
lods
push
test
xchg
addr16
pop
cmpsb
rcll
inc
ret
movsl
and
add
jg
das
cs
lods
sbb
insl
fwait
pop
push
mov
inc
je
dec
pop
jbe
xchg
mov
jo
in
cs
inc
les
fldenv
jne
jnp
push
adc
in
xor
adc
mov
jb
cmpsb
imul
dec
in
icebp
cmp
lods
mull
xcrypt-cfb
cmpsl
cmpsl
je
scas
les
imul
clc
cltd
and
mov
inc
fildl
jo
and
testl
imul
pop
sub
inc
icebp
cmp
mov
cmp
and
xchg
inc
jo
push
cmc
jno
or
rcr
push
xor
movsl
xchg
insl
clc
mov
imulb
popa
mov
mov
sbb
sub
in
mov
test
imul
adc
das
jo
push
call
es
xchg
in
add
mov
sbb
aaa
mov
outsb
das
out
sub
push
dec
subb
sbb
imul
hlt
mov
movsl
jae
push
xchg
movsb
flds
sbb
pop
cli
dec
insl
mov
mov
or
ljmp
jbe
jnp
xchg
or
out
add
dec
in
or
lcall
in
jl
push
daa
das
cmpb
dec
lret
mov
lcall
in
jnp
jmp
outsb
pop
imul
jns
int
scas
cmpsb
dec
adcl
xor
fs
sti
cmp
inc
add
add
or
sub
shr
flds
sbb
mov
inc
xor
jmp
push
xor
ficoml
shll
shrl
add
rol
arpl
pop
pop
sbb
add
into
jp
sbb
jb,pt
lods
jp
incb
xlat
add
pushf
pop
aad
call
xchg
ret
fdivs
and
fnsave
aas
dec
dec
imul
sbbl
subl
mov
ss
fs
mov
outsl
dec
fwait
push
lret
pop
xor
imul
loopne
out
divl
xchg
sub
adc
cmpsl
sub
xor
rorb
pop
pop
xchg
inc
sbb
pop
pop
daa
xor
int
jle
idiv
add
daa
test
mov
pop
cmp
fbstp
sti
lds
inc
xchg
out
subl
dec
js
out
aaa
testb
jo
sbb
jg
nop
xchg
or
out
cmpsl
insb
jns
mov
scas
cmpsb
insb
inc
icebp
enter
mov
mov
cltd
inc
cwtl
cwtl
xchg
xor
adc
hlt
ja
rcll
and
aas
movsl
pushf
dec
fstpt
enter
pop
push
sub
stc
mov
pop
adc
int3
sahf
shrb
pop
inc
repz
push
xchg
pop
jns
fwait
jl
inc
add
js
push
jl
ds
pop
leave
lods
ljmp
inc
es
rcrl
cmpsb
mov
les
sarb
imul
aam
or
imul
inc
sbb
rcrb
sbb
adc
jnp
jnp
nop
das
test
faddp
bound
lcall
mov
lret
lds
js
mov
js
test
rorb
popa
jbe
xlat
in
js
add
into
addr16
mov
pop
cmp
add
sub
enter
sbb
bound
outsb
into
repnz
loope
jb
inc
popf
cltd
sbb
xor
dec
pop
ja
shrl
xlat
lods
data16
jecxz
or
cmp
push
popf
add
sub
pushf
xchg
inc
test
xchg
int
jne
sbbb
das
fsave
inc
orb
in
aaa
adc
test
or
xlat
ljmp
jb
aas
in
or
dec
lcall
sbb
orb
scas
insl
test
test
and
mov
xorl
xlat
pop
mov
and
adc
lcall
lock
clc
or
hlt
imul
in
adc
xchg
sarb
cli
mov
dec
sbb
push
int3
inc
and
fadd
jno
sbb
xlat
inc
lods
call
fisubrl
iret
cmp
lods
stos
mov
xchg
or
adc
out
inc
ret
popa
jmp
fs
addr16
outsl
push
stos
xchg
mov
ds
pop
std
cmpsb
jp
xchg
mov
fnsave
movsb
pop
mov
stos
out
inc
daa
push
repz
out
es
dec
mov
pop
inc
inc
mov
add
jp
das
bound
cmp
and
imul
sub
test
inc
loop
xchg
data16
push
aaa
shlb
add
sti
lret
test
mov
pop
mov
ja
jg
mov
into
aad
jb
fimuls
ret
pop
and
cli
fmulp
lahf
int
add
add
lahf
inc
je
je
xchg
mov
pop
xchg
xlat
scas
or
dec
rorb
data16
jnp
mov
cltd
aaa
push
push
das
mov
pop
cmp
and
pop
and
popf
rcll
inc
mov
cltd
sarl
sub
shl
sbb
iret
dec
xor
sbb
or
push
repz
cmp
repnz
arpl
pop
mov
adc
ret
ja
bound
shll
sub
jb
dec
push
out
adc
outsb
mov
movsb
mov
out
sub
addr16
adc
adc
pop
cmp
xor
jns
adc
pushf
into
inc
sahf
mov
cld
xlat
je
and
jg
cmpl
jne
and
mov
push
xchg
call
arpl
loope
in
mov
sbb
sub
mov
ret
xchg
push
mov
ret
loop
pop
pop
fbld
ljmp
push
cmp
push
xor
stc
loope
pop
and
mull
jnp
dec
mov
dec
in
ffreep
loope
adc
xor
int3
dec
movsb
ret
shr
pop
xchg
cmp
pop
adc
push
cmp
mov
sub
out
daa
notl
xor
shll
repnz
movsl
pop
mov
rorl
lds
inc
mov
sub
pushf
lock
jae
mov
icebp
pop
jno
sarl
jl
movl
pop
lock
lret
fs
fidivl
jo
out
decl
sub
jmp
sbb
test
in
jmp
inc
mov
adc
xchg
and
shl
test
mov
add
int
jno
fsubs
pop
test
jmp
insl
mov
stos
dec
dec
mov
loope
xchg
mov
cltd
outsl
or
pop
out
jo
shlb
fmuls
cmp
and
lock
push
jecxz
call
and
mov
in
lods
loope
cmc
add
xchg
push
pop
fisttps
pop
pop
mov
and
lcall
pop
imul
ja
pushl
jnp
adc
sarb
sar
cmp
jp
mov
outsb
pop
test
gs
xchg
lret
scas
stos
jmp
push
jmp
push
mov
cmp
mov
push
aam
push
dec
mov
lahf
arpl
pusha
cwtl
fxrstor
xor
lods
lea
and
sbbl
jecxz
call
and
dec
or
sbb
cmp
jge
imul
mov
std
sbb
mov
lahf
pushf
add
out
sbb
adc
sahf
icebp
cld
inc
xlat
and
rclb
loopne
add
pusha
push
push
push
xor
mov
ljmp
jg
das
push
cmpsl
jp
push
jo
test
push
outsl
and
sub
shrb
xchg
scas
mov
inc
pop
cmp
pop
enter
sti
inc
mov
out
mov
bound
lock
cmc
fidivs
loop
es
call
cmpsb
cwtl
push
mov
push
pop
dec
lock
sti
mov
pop
push
pop
and
push
stos
iret
stc
bound
mov
scas
push
sub
repnz
jo
jo
pusha
addb
mov
mov
ss
in
mov
bswap
and
jmp
ss
outsb
enter
mov
test
fcmovne
out
xlat
call
xor
ds
imul
in
or
rorl
es
push
sbb
push
xchg
outsb
stc
lret
test
popa
negb
pop
lods
jnp
pop
neg
scas
inc
fcoms
or
add
addb
add
sahf
jb
pop
outsl
shlb
cmpsb
dec
dec
fstpt
and
and
sahf
in
mov
sub
jne
mov
fstl
cmp
xor
pop
dec
dec
ficoml
pop
xor
dec
push
sub
aas
push
in
hlt
imul
insl
aas
lds
inc
js
pusha
cli
fwait
mov
or
push
pop
xchg
add
pop
test
lods
jns
or
and
cmpsl
lock
mov
dec
nop
cwtl
dec
das
js
loop
pop
jmp
icebp
dec
stos
inc
and
or
addr16
out
dec
or
push
mov
xchg
push
repnz
pop
call
jno
xlat
das
icebp
pop
dec
sbb
adc
inc
out
add
jmp
or
xchg
mov
lahf
dec
xchg
pop
out
xchg
in
add
dec
rcrl
dec
mov
enter
sub
pop
mov
arpl
int
jae
cmpsb
loop
pushf
out
loope
mov
mov
cli
ja
daa
pop
int
shlb
iret
xchg
add
sub
xchg
sub
pop
insl
inc
sbb
out
sub
popa
cmp
pop
mov
jno
xor
jg
or
inc
jns
in
pushf
test
jmp
dec
fadds
and
icebp
mov
pop
frstor
mov
add
nop
mov
cmp
ror
cs
fs
adc
sub
shlb
lret
data16
fdivl
mov
jb
popa
mov
push
data16
xchg
stos
jmp
scas
clc
lea
push
push
jne
sub
mov
fidivrl
mov
jno
dec
in
sbbb
mov
dec
fstpt
push
sbb
pop
inc
mov
push
xchg
push
add
fwait
push
and
adc
push
add
scas
add
repz
jne
push
jo
rclb
pop
ret
xchg
cmp
in
xchg
sbb
jmp
pop
jle
add
dec
popa
in
outsl
out
cli
pop
mov
mov
jge
je
cmpsb
mov
out
dec
cmp
jns
inc
pop
push
es
dec
jnp
push
mov
push
jno
push
bound
xlat
jb
adc
imul
jo
inc
hlt
mov
ret
push
pop
adc
push
enter
mov
sbb
mov
and
test
sbb
dec
das
jno
cli
movsl
imul
push
test
inc
mov
popa
sub
mov
xchg
mov
adc
in
or
jmp
sahf
pop
and
stos
std
push
lea
mov
or
pop
cmc
cmp
lret
cmp
xor
roll
or
add
jns
or
rcr
sarl
push
sti
push
inc
icebp
mov
in
test
inc
outsb
lea
aad
lods
loope
push
add
out
jp
shrb
lea
dec
fsubrl
lock
ret
leave
cwtl
pop
xchg
addr16
fidivrs
xor
xchg
add
sbb
cmp
xchg
repnz
xchg
push
jo
and
jns
std
ret
test
imul
lods
add
repnz
sbb
jecxz
sub
push
add
dec
sti
rol
lret
gs
bound
xor
push
into
popf
mov
dec
xlat
jecxz
shlb
xor
pop
or
jne
mov
fsts
jp
adc
inc
mov
lea
js
inc
movsl
sub
adc
sahf
mov
icebp
subb
push
cmc
bnd
push
fisubrs
and
push
sub
xor
xchg
inc
popa
pop
xlat
cli
call
xor
push
cli
ffreep
cltd
enter
mov
push
jne
inc
push
and
mov
mov
cs
mov
cmp
push
add
sbb
mov
mov
int
xchg
inc
test
and
push
lods
mov
filds
aam
out
nop
mov
popa
fnstenv
pop
mov
dec
rorl
and
jge
adc
xchg
sbb
shl
inc
fs
dec
rcrl
ret
aas
jmp
sti
mov
jle
and
cmpl
sahf
lods
inc
dec
fdivp
xchg
imul
addb
insl
ja
ror
in
pushf
lfs
xchg
inc
test
repnz
adc
mov
cmp
jne
push
fldcw
test
pop
data16
mov
adc
mov
leave
subl
and
cld
insl
inc
cli
idivb
pop
clc
scas
xor
and
mov
ds
mov
push
xchg
nop
push
jb
pop
lds
xchg
nop
cld
fistpll
cwtl
negb
out
std
ret
cli
pop
test
adc
aaa
ja
sahf
or
int3
in
ret
cmpsb
mov
test
enter
push
stos
xorb
push
adc
ffreep
or
fldl
inc
sbb
jno
into
sahf
push
sub
insb
cmc
xchg
insb
lret
aad
lahf
call
dec
sub
and
cmp
sahf
push
in
pop
cmpsl
pushf
sahf
int3
and
and
xor
ljmp
test
push
xchg
inc
stos
lahf
nop
cmp
dec
repnz
pop
out
jae
addr16
gs
das
xchg
dec
mov
and
imul
lahf
loop
test
add
inc
add
jbe
aam
aaa
dec
daa
xchg
add
dec
inc
push
aam
push
xchg
andb
cs
stos
pmullw
push
out
push
imul
ljmp
pop
xorl
cmp
jl
cmp
xchg
sahf
clc
jbe
dec
mov
test
mov
addr16
sarb
mov
lods
push
pushf
sub
jl
mov
stos
sarb
movsl
fwait
xchg
not
push
jg
rolb
push
mov
mov
rcrl
leave
mov
cmc
rcrl
jmp
and
xor
insb
stos
sar
js
push
aad
xor
add
adc
mov
sarl
jns
xchg
dec
push
sbb
or
lock
dec
dec
mov
mov
cwtl
mov
xchg
sbb
leave
mov
pop
jmp
xchg
xchg
rolb
mov
iret
mov
sbb
jnp
xchg
jnp
pop
call
push
sar
inc
mov
mov
out
fs
adc
int
mov
js
jbe
jae
pop
lret
mov
lods
push
mov
push
ja
fimuls
inc
outsl
lock
cmp
mov
lods
pusha
mov
pushf
add
cld
and
testb
push
dec
add
inc
int3
loope
mov
mov
lret
in
or
pop
dec
ja
xchg
lahf
sbb
scas
pop
cmpsl
mov
stc
hlt
xchg
push
add
das
out
and
sti
mov
stos
mov
data16
stos
fnstcw
or
mov
fimull
sbb
aas
adc
push
lods
xlat
sbb
cmp
xor
push
adc
pushf
lods
mov
subb
mov
mov
gs
daa
pop
cld
pop
scas
jnp
out
mov
push
ljmp
leave
fld
shll
dec
push
negl
test
into
sub
cld
add
cmp
xor
into
inc
sbb
adc
jnp
repz
in
dec
push
sbb
inc
pop
int3
xor
add
adc
jb
jp
dec
rcrb
out
mov
lods
fsubl
cmp
xchg
pusha
sbb
hlt
outsl
xchg
mov
insb
jp
xchg
xchg
mov
sub
jmp
arpl
lret
cmp
fmul
pusha
sub
jle
dec
loopne
outsl
xchg
cli
adcb
pushf
push
sub
cltd
divl
push
pop
loope
shlb
ljmp
clc
mov
sub
sahf
sbb
pop
jle
pushf
fbld
and
dec
xor
mov
xor
in
mov
daa
test
lock
lret
cmp
jnp
pop
sub
xor
mov
js
sahf
pop
jno
imul
ret
mov
push
daa
jle
ljmp
jmp
push
out
xchg
mov
scas
daa
xchg
jns
sbb
js
daa
repz
jbe
fwait
push
mov
cwtl
xlat
sbb
in
cmp
sar
or
xor
jecxz
cs
cmp
sbb
nop
pop
clc
mov
add
fcmovne
add
sub
cwtl
mov
mov
or
push
or
mov
repz
xchg
mov
mov
fmull
pop
sub
daa
pop
ret
or
repnz
mov
popf
repnz
mov
rorb
fistpll
lcall
sahf
adc
push
and
sahf
add
lcall
imul
movsb
or
loope
lock
xlat
imul
xchg
push
rorl
in
int3
jecxz
adc
sub
test
pop
cmp
add
and
pop
and
jnp
add
lods
sbb
push
dec
jbe
ss
dec
jmp
sbb
scas
cld
testb
rolb
pusha
dec
pop
fwait
les
dec
xchg
lods
fucomip
jle
nop
clc
push
mov
and
jne
inc
adc
adc
or
bound
out
fsubl
lcall
test
sbb
into
cmp
sbb
cli
mov
out
les
movsl
insb
nop
adc
push
push
out
sbb
aad
pop
push
pop
xlat
jp
add
pop
fstp
sti
push
and
push
and
scas
and
mov
orps
xchg
sbb
jns
insb
pop
pop
jae
sbb
or
cld
sub
xchg
cmp
cld
int
insb
mov
dec
dec
mov
daa
ficompl
aam
popf
shll
ss
pop
out
ficoml
aaa
lods
mov
mov
in
and
and
sti
jb
pop
int3
jp
jnp
dec
xor
mov
add
dec
add
or
mov
shlb
xchg
xchg
sbb
aad
add
in
cmp
mov
mov
je
nop
mov
mov
xor
js
and
in
fdivr
fcmovu
stos
dec
push
mov
inc
aam
sbb
dec
cltd
clc
scas
and
filds
and
xchg
jg
addr16
and
mov
fildl
test
dec
int3
dec
push
pop
sbbb
mov
pop
sub
push
test
daa
pop
enter
push
out
leave
or
test
or
loopne
mov
lcall
cmp
cld
or
jo
mov
adc
sub
notb
inc
rol
mov
fbstp
cld
mov
inc
push
push
mov
daa
dec
les
add
leave
cmp
or
cs
push
cltd
jae
leave
ja
iret
and
dec
pop
jg
or
lock
call
roll
mov
test
adc
and
pop
insb
xchg
mov
add
inc
lods
bound
cmpb
jp
cmp
jl
add
adc
insb
xchg
icebp
test
cld
gs
lret
lods
fwait
mov
dec
fisubl
push
mov
jno
je
xchg
insb
out
repnz
inc
std
inc
rcll
xor
std
stos
fisubrs
gs
and
cltd
test
insl
and
mov
inc
dec
xchg
xchg
mov
stos
mov
push
das
jbe
xchg
push
pop
xchg
xor
add
adc
lds
and
fmull
or
gs
aad
adc
lds
mov
stos
scas
jne
push
push
mov
pop
cmp
pop
adc
or
mov
decb
loopne
mov
hlt
pop
lret
aaa
jnp
adc
add
ja
cmp
cmp
dec
pusha
mov
add
addl
inc
mov
scas
pushf
xor
adc
or
mov
cmpsl
cmp
shrl
fcmove
or
repnz
fprem1
lret
mov
jbe
add
clc
inc
jge
mov
dec
aam
aad
jb
cmp
mov
imull
push
sbb
insb
xchg
notb
dec
sub
insb
push
jle
cmc
adc
jge
daa
add
lea
data16
loop
aad
ja
aam
mov
or
push
idivb
pop
daa
xchg
movl
cmpxchg
pop
notb
stc
dec
pop
mov
mov
imul
inc
pop
lds
adc
jns
int
fmull
jbe
enter
mov
cmp
pop
cmpl
test
or
jge
cli
aam
xadd
int
dec
aam
ror
dec
cltd
adcl
fisttpl
jecxz
jmp
cmp
jnp
mov
adc
push
xorl
xchg
inc
in
scas
cmc
pop
push
test
mov
sub
push
stos
scas
pop
stc
ret
lret
fisttps
pop
pop
xchg
xchg
rcll
dec
dec
mov
and
or
adc
dec
stos
jns
mov
mov
outsl
sbb
je
jmp
lcall
jge
mov
lods
xchg
sbb
xor
faddl
cmp
ret
and
xchg
sbb
dec
xor
pop
jne
and
repnz
or
jecxz
jmp
lds
test
lods
shlb
mov
fs
scas
out
in
inc
mov
xchg
imul
cmc
pop
pop
or
push
je
push
or
jo
mov
adcl
xor
inc
gs
mov
inc
lods
mov
adc
cmp
mov
ret
rorl
repnz
jae
pop
sbb
jmp
xchg
cmc
nop
int
in
nop
xor
cs
push
std
cs
add
lahf
pop
xor
sub
or
mov
loopne
negl
dec
pop
xchg
mov
nop
rol
shrb
lret
cltd
adc
negb
jno
jae
outsl
inc
xlat
sbb
inc
imul
sti
pop
cmp
test
fstpt
mov
ret
mov
jno
shll
enter
test
cmp
in
adcb
dec
out
out
sub
sub
aaa
push
cli
movsl
pop
xchg
or
in
data16
push
or
pop
jbe
fcom
sbb
je
sub
and
cmpsb
cmpsb
adc
or
addr16
mov
fcmovbe
aam
xor
pop
aad
in
inc
mov
xchg
mov
cltd
icebp
popa
sub
lock
mov
std
jne
js
movsl
ja
imul
sarl
loop
sbb
jge
dec
aaa
insl
ret
cmpsl
jl
sub
pop
lods
adc
imull
mov
aam
fsubrs
pop
push
cmp
pop
inc
inc
sub
mov
or
sbb
fists
orl
jp
pop
xchg
outsb
adc
je
sbb
xchg
sahf
pop
popf
mov
mov
inc
mov
scas
shlb
into
loope
jg
dec
loop
imul
mov
xchg
pop
nop
or
xchg
std
das
stc
cmp
mov
bound
cmpsl
es
push
jl
inc
jmp
aam
inc
mov
lock
mov
aad
js
insl
lock
mov
data16
mov
or
loopne
mov
push
jb
pop
adc
mov
mov
test
mov
and
into
in
pop
aam
adc
aam
ret
sub
inc
in
in
sub
or
jno
mov
push
sbb
cmp
inc
mov
cmc
xlat
pop
add
push
sahf
push
jp
xor
cmp
cmp
sub
cmp
sti
and
mov
inc
loope
mov
dec
inc
cmp
jmp
clc
lret
mov
and
pusha
add
mov
dec
sahf
add
mov
mov
cmp
out
dec
adc
outsl
push
scas
sub
leave
test
push
cmc
fildl
pusha
ds
and
mov
je
les
sti
mov
sbb
insb
xor
and
dec
lret
lret
push
mov
jmp
std
sbb
jge
iret
jecxz
pop
push
cmp
adc
in
cmc
popa
cs
add
lods
mov
dec
cmp
mov
outsl
mov
add
fucomi
xchg
rorl
ds
mov
mov
push
enter
cmp
mov
add
cmp
ja
and
aaa
mov
mov
pop
inc
add
ret
inc
pop
push
mov
push
sub
xchg
inc
xor
daa
and
sub
das
sahf
xor
mov
fisubrs
int3
lcall
faddl
or
stos
addb
notb
mov
push
xlat
push
adc
neg
jb
std
cmp
push
xor
sbb
jg
or
pop
add
in
and
data16
add
fmull
insl
into
jp
addr16
adc
fistl
outsl
mov
mov
jecxz
fs
mov
adc
jno
fld
and
mov
bound
popa
fcmovnbe
mov
lock
xor
xor
push
out
iret
jns
xchg
inc
cmp
or
test
push
inc
sti
dec
add
bound
das
stos
ret
rorb
inc
add
sti
shrb
xor
hlt
push
out
adc
mov
pop
mov
cmp
jbe
dec
mov
nop
mov
fs
mov
jge
or
mov
mov
movsb
mov
negb
lods
inc
adc
and
push
sub
inc
jno
and
inc
repnz
pop
lret
xor
sub
into
pop
pushf
lods
scas
inc
pop
jg
enter
adc
pop
shr
and
pop
enter
pop
xor
stos
inc
or
nop
sti
jg
xor
neg
sbb
mov
and
mov
mov
add
or
inc
or
arpl
stos
xlat
loop
sub
jge
ffree
mov
jl
rcll
inc
loop
push
lret
dec
aam
loop
aaa
dec
inc
cmp
xchg
sbb
shrl
inc
pop
ja
push
dec
and
lret
add
or
in
test
push
sbbb
xor
loope,pn
mov
ret
and
jns
outsb
stc
das
hlt
push
sub
std
add
shll
mov
jl
in
movzwl
jge
and
fildl
lea
cld
out
loop
lods
pop
or
lea
pop
test
test
mov
rolb
repnz
clc
ret
lcall
icebp
aad
decl
or
mov
nop
incb
cmp
imul
js
pop
jo
xchg
lods
fidivrl
cmc
sbb
pop
sbbb
xor
inc
aam
sbb
aad
das
sub
outsb
std
add
int3
outsb
add
dec
fwait
or
fimull
imul
fisubrl
ja
sub
or
jge
insb
movsb
cmc
mov
fadd
mov
jbe
and
adc
add
inc
hlt
mov
leave
xlat
sub
jecxz
dec
cmp
pop
mov
jo
sahf
bound
pop
js
push
sub
cmp
push
les
sbb
xor
inc
pop
and
cmp
popf
cltd
test
jno
mov
aas
out
outsl
xchg
scas
loope
rolb
cmp
inc
clc
lods
push
fucomip
add
repnz
sbb
je
lds
fldenv
scas
fs
bound
lock
js
xor
test
jle
mov
adc
mov
jae
pop
inc
mov
and
cmp
repz
ret
push
mov
divb
push
jle
xchg
sbb
dec
cmp
into
push
sbb
nop
daa
pop
sub
add
popf
inc
add
sbb
loope
scas
ret
dec
and
sbbb
fcomip
les
sbb
pop
mov
in
lods
mov
shlb
add
mov
fld
test
jg
cmc
mov
sbb
sbb
fdiv
push
rcrb
aam
jns
icebp
push
fwait
jle
ja
push
movsb
idiv
pusha
mov
int
or
xor
and
add
jmp
ret
and
add
jg
inc
ds
mov
int
mov
cmpsl
push
je
mov
nop
jno
pop
stos
jp
jno
filds
xchg
aas
adc
hlt
cli
adc
std
in
mov
mov
mov
xor
mov
sbb
mov
push
xchg
adc
or
aaa
imul
daa
push
in
jb
subl
adc
jns
arpl
outsl
fldlg2
push
cld
mov
jne
jnp
sti
pop
das
insb
pop
std
pop
xchg
pop
or
or
add
jnp
mov
fildll
inc
inc
add
call
fsubl
faddp
mov
test
add
movsl
into
lds
add
iret
cmp
sbb
sbb
ja
leave
or
sbb
mov
push
ss
pop
dec
cltd
cmp
ss
sub
sub
push
jae
daa
inc
dec
dec
push
adc
jbe
lods
ret
aam
sbb
test
mov
stc
cmp
mov
push
ja
and
fucomi
dec
inc
mov
xor
aad
scas
pop
es
dec
push
aaa
jb
stos
clc
insb
dec
scas
ss
repz
int
mov
aam
xor
mov
cmp
mov
or
js
pop
hlt
out
dec
lret
arpl
inc
xchg
js
pop
cmp
imul
and
sbb
xor
push
mov
push
ror
cmp
vcvtpd2ps
xchg
cmp
mov
mov
lcall
mov
daa
cmpsl
inc
and
sub
ret
inc
mov
inc
lcall
les
or
or
sbb
testb
sub
xchg
push
icebp
test
mov
mov
jg
aad
xchg
adc
sub
lods
testl
movsb
mov
daa
scas
mov
xchg
adc
pop
popf
xchg
jmp
mov
mov
cwtl
xchg
shlb
xchg
pop
jb
call
lods
mov
mov
dec
pop
cmpsl
daa
and
fdivrl
or
mov
xchg
ret
fisttpll
faddl
stc
in
ds
aaa
push
lea
pushf
add
out
mov
mov
cs
test
test
lods
in
pop
ljmp
aas
cli
and
loop
addr16
sub
sbb
xchg
jae
push
mov
and
insb
stos
inc
cmp
ret
push
xchg
dec
das
testb
jnp
mov
pushf
mov
dec
cmpsl
jp
or
ret
mov
or
std
sub
xchg
pop
sub
sbb
sbb
ss
mov
fidivrs
dec
rorb
test
or
add
or
repnz
int
lock
sahf
inc
test
sub
fcompl
add
scas
pop
dec
jl
inc
frstor
pop
pop
sbb
cmc
adc
iret
jge
or
loopne
sub
inc
pop
das
jne
dec
inc
xchg
mull
cmpsl
mov
cmp
pop
ja
dec
sub
and
popf
xlat
icebp
gs
mov
and
dec
data16
les
lret
cmpl
mov
ljmp
aad
rcrl
pusha
xor
mov
jae
fsub
add
sub
call
jno
imul
cmp
inc
stc
mov
repz
movsl
mov
jno
fbstp
jno
push
je
jmp
dec
shll
mov
and
dec
adc
je
mov
js
loop
cmc
cmc
jae
or
inc
cld
fisttpl
ret
lods
cltd
cli
cltd
daa
sbb
test
pop
fwait
scas
mov
jo
adc
sbb
mov
and
adc
adc
and
cmp
xor
ss
mov
jnp,pt
lea
lods
rcll
loopne
cmp
push
adc
addr16
add
dec
or
mov
push
out
mov
and
sarl
xchg
or
icebp
fsubr
rol
enter
jne
movsb
cmp
lahf
out
dec
popa
or
stc
dec
push
in
sbb
cmpsl
cmp
cmpsl
or
test
push
lods
addr16
jno
scas
pop
decb
adc
rorb
aad
cs
mov
outsl
pop
or
dec
negb
xor
mov
fcomps
ret
nop
cwtl
sub
das
repnz
pop
jnp
xor
mov
mov
sbb
jg
and
adc
out
out
ficoms
loope
pusha
push
ja
jns
in
imul
int3
dec
mov
lock
lcall
mov
in
dec
fidivrl
or
ljmp
xor
jb
push
xor
mov
popa
ret
jle
sub
aam
add
gs
lods
mov
int3
rcll
es
mov
add
and
js
add
pop
sbb
leave
dec
sbb
ret
popa
adc
roll
and
fdivr
sbb
in
pushf
mov
push
cld
hlt
lret
cmpsb
push
mov
addr16
and
pop
sub
mov
cmp
push
in
imul
test
pop
leave
push
add
orl
mov
or
sub
adc
xchg
testl
scas
test
pop
or
xchg
dec
push
ficompl
and
jns
aaa
or
mov
aaa
das
inc
stos
sbb
sbb
js
sbb
cmpsb
out
dec
xchg
mov
and
push
mov
nop
push
lds
fsubr
sub
push
icebp
xchg
inc
jo
int
dec
stos
iret
dec
push
cmpsb
xor
ror
mov
fists
pushf
sbb
dec
out
jmp
loopne
or
popa
int
mov
or
adc
inc
push
add
repz
lret
adc
pop
das
test
xlat
mov
jl
clc
icebp
pop
je
in
pop
pushf
xor
popf
or
jg
stc
pushf
sub
jnp
sarl
in
pop
sarl
adc
fmull
mov
pop
aas
jne
push
addr16
js
scas
dec
mov
clc
shll
std
stc
ret
mov
sbb
jg
push
js
pop
cmp
inc
dec
mov
aas
rclb
inc
jne
sub
jmp
jb
scas
mov
fadd
sub
ficoms
or
pop
and
dec
andl
dec
scas
or
in
sbbb
nop
sar
data16
test
test
mov
fstps
dec
aad
jae
int
cli
mov
fmull
mov
mov
insb
sub
movsb
xor
add
cmpsb
imul
imul
cmp
sbb
sub
and
hlt
out
aad
push
xlat
sbb
mov
outsb
and
and
inc
mov
pop
insb
daa
subl
loopne
sbb
rorl
or
xchg
popa
pop
popf
gs
push
imul
mov
jle
push
and
adc
pop
cmp
lahf
ss
xchg
mov
in
bound
insb
popf
xchg
negb
mov
jle
pop
add
push
push
and
add
mov
jo
xor
sub
aas
negl
mov
push
lods
fimuls
sub
insl
fmuls
inc
adc
jl
adc
cmp
jae
push
dec
dec
xor
shr
aam
add
mov
mov
pushl
cmp
jge
je
lock
insb
mov
loop
or
cmpsb
pop
push
test
cs
rolb
xchg
sub
leave
adc
test
out
ret
lds
sbb
add
adc
stos
xor
sbb
inc
mov
aas
mov
lret
icebp
stc
je
out
pop
cmp
and
cmp
loopne
mov
cmp
nop
leave
mov
jl
lock
scas
ret
out
jp
adc
mov
lret
mov
xchg
cmp
cwtl
mov
mov
inc
jno
sbb
push
xchg
jl
out
stos
and
adc
mov
lret
insb
mov
dec
xor
sbb
inc
inc
dec
push
lcall
xlat
daa
rorl
pop
stos
mov
ss
cmp
push
xchg
loope
or
jge
bound
adc
pusha
sub
push
xchg
or
jg
add
shrd
lcall
xorl
dec
inc
or
xchg
xor
inc
sbb
cmp
xchg
mov
jno
imul
jns
or
xchg
pop
push
fdivp
loopne
jns
call
cltd
add
pop
xchg
aad
jb
dec
fidivl
cmp
adcb
jne
add
push
and
add
inc
aaa
outsb
or
mov
sti
xchg
add
push
sub
mov
sub
or
imulb
mov
insb
jmp
and
sti
push
cmpl
fstpt
stos
rcrl
loopne
inc
xchg
mov
sub
pop
js
mov
es
sub
push
ss
test
sub
mov
fsubl
sbb
pop
cli
shlb
sti
and
sbb
push
pop
mov
cmp
sbbl
nop
xchg
and
xchg
jmp
jbe
stc
push
xor
lods
inc
push
sbbl
ljmp
sbb
loop
fst
pop
xor
popa
jae
into
push
mov
cmpsb
sbb
rorl
jecxz
pcmpeqw
outsb
mov
add
outsl
int
stc
inc
test
cltd
sarb
pop
mov
sbb
insb
iret
int
ret
lahf
inc
es
cltd
cmp
jge
cmp
mov
push
stos
test
fs
xchg
cwtl
mov
mov
pop
iret
push
aaa
cmp
fsubs
mov
dec
cmpsl
jns
add
movsb
mov
pop
popa
addr16
arpl
scas
das
imul
test
inc
pop
lods
pushf
jb
push
sbb
sbb
add
ds
xor
jae
adc
in
inc
jmp
xchg
rorl
sbb
ds
inc
out
add
mov
mov
sub
ljmp
test
xor
sbb
movsl
adc
push
cmp
xor
fistl
aaa
push
xchg
xor
stos
add
je
pop
add
andl
pop
xchg
out
mov
adc
cmp
pop
cmp
or
cmp
or
insl
out
aam
lods
aad
sbb
mov
in
shrb
fwait
push
mov
popf
jl
js
std
or
pop
movsb
rep
mov
jle
jl
pop
aam
adc
xchg
mov
inc
adcb
addr16
jmp
lcall
out
or
sarb
mov
adc
push
adc
in
scas
jae
ret
sbb
cmpsl
push
aad
inc
dec
lret
mov
sbb
ror
add
jae
lods
aas
scas
ja
jo
test
dec
push
rorb
ds
pop
jecxz
cs
or
mov
add
in
out
push
lahf
mov
add
imul
frstpm(287
inc
outsb
sub
push
aas
jbe
out
jno
repz
aad
mov
cmp
shlb
xchg
push
jo
ljmp
inc
cmp
hlt
sub
sub
fildl
mov
cltd
mov
pop
jecxz
jmp
mov
or
cld
push
or
cmp
mov
jo
popl
test
popl
add
test
mov
mov
insl
mov
inc
xchg
xchg
fldenv
ss
pop
cmp
xlat
fsubrl
stos
and
and
andl
push
add
stc
sbb
mov
cltd
xchg
dec
pop
stos
sbb
bound
jg
mov
sub
add
mov
dec
sub
ljmp
inc
xchg
add
aaa
xor
out
mov
rcrl
sub
mov
jnp
or
imul
loope
in
inc
lea
lods
cwtl
stc
mov
sti
adc
add
aam
push
push
mov
push
rcll
fwait
ss
dec
lods
dec
pop
sub
jp
mov
sub
and
stc
ret
int3
imul
outsl
xchg
lret
hlt
jb
aad
or
cmpsb
mov
addl
cmpb
iret
dec
aad
xchg
adc
scas
cwtl
shrl
les
adc
sbb
xor
push
mov
fcomip
and
cmp
divb
nop
test
in
push
push
dec
add
adc
scas
jne
dec
pop
in
out
xorl
mov
jno
or
xchg
xlat
bound
or
or
int3
imul
mov
push
test
loope
test
stos
outsl
das
ret
jae
cld
xchg
test
mov
leave
add
add
insl
xorl
jle
xor
std
jmp
rolb
sub
es
push
orl
movsb
cwtl
cli
in
int
and
jmp
cmpl
fmull
and
test
sahf
daa
inc
xor
jg
inc
sub
xor
stc
imul
sub
ja
ljmp
sub
sarl
jnp
popa
sub
pushf
adc
jmp
add
shrb
xor
push
mov
outsl
or
xor
cmp
pop
dec
jno
push
push
fs
rolb
adc
mov
mov
jns
adc
pop
das
sub
mov
mov
ds
int
nop
aad
push
mov
push
stc
inc
stc
mov
ret
mov
dec
or
jae
sbb
pusha
dec
das
faddl
push
jge
xor
push
hlt
gs
nop
negb
popa
out
mov
mov
add
add
xchg
jmp
inc
stc
cltd
mov
mov
inc
push
jge
xchg
pop
inc
cwtl
fcmovb
cld
mov
add
scas
sbb
jl
andl
shlb
mov
jp
outsl
outsl
push
jl
das
cmc
shlb
icebp
sbb
pop
mov
and
scas
push
enter
dec
in
add
pop
inc
pop
xorb
sbb
add
sub
aaa
add
sbb
test
addr16
cmp
jle
popf
fcmove
jno
jecxz
lahf
push
adc
test
in
inc
repnz
mov
out
fldt
jns
push
xor
push
xor
std
pushf
out
xchg
pop
fcoms
addl
sub
mov
inc
out
sbb
xchg
lds
outsb
pop
stos
or
xchg
push
leave
xchg
aad
clc
push
inc
fisubrl
arpl
xchg
cmp
mov
popf
movsb
mov
cmp
test
jne
jne
inc
scas
xor
mov
pop
sbb
loopne
lea
inc
mov
cmp
add
aaa
js
push
out
pushf
push
jb
xchg
mov
sub
mov
xchg
lret
loop
sub
inc
cmp
test
scas
inc
inc
mov
leave
pop
sti
mov
sub
stos
push
or
int
pop
cmpsb
cli
xchg
outsb
xchg
cmp
inc
push
lock
xchg
mov
add
lods
cmp
popa
test
pop
lods
mov
xor
test
xchg
mov
jl,pn
imul
sub
std
pop
ds
testl
pop
test
jp
pop
pop
stos
inc
repz
cli
rcl
inc
mov
das
add
jne
sbb
sbb
mov
push
dec
sub
jp
mov
add
cmc
js
inc
shll
pop
bound
es
dec
push
lock
in
jp
insb
cmpb
lcall
outsl
js
cmc
outsb
insb
psubusw
pop
pop
xor
popf
stos
cmp
dec
shrb
imul
dec
inc
rcl
cmp
out
fists
pop
sub
in
je
jp
xor
insl
out
icebp
test
aaa
xchg
mov
test
outsb
clc
mov
shlb
imulb
lock
push
cmc
call
push
cmp
loope
arpl
jg
push
ja
and
pop
or
pop
inc
mov
test
sbb
fxch
or
movsl
sub
pop
aad
pop
fstps
and
pop
movsb
or
es
and
jle
imul
aaa
jmp
dec
leave
rorb
push
cmpb
and
push
cmp
js
pop
jge
mov
test
jecxz
cld
rol
add
jmp
adc
cmc
xchg
adc
cmp
xchg
int
cli
jmp
stos
or
test
ds
cmp
mov
pop
outsb
jnp
out
out
or
dec
jbe
or
out
sub
add
mov
loope
inc
test
mov
jns
int3
sub
mov
jg
push
cmpsb
inc
pop
gs
sub
dec
jl
adc
cmc
popf
pushl
add
cmpsl
or
or
or
rol
int
aad
int3
push
push
xor
ret
cmp
xchg
mov
mov
shrl
lods
sbb
lds
int3
out
adc
gs
sbb
jp
xchg
or
sub
or
bound
mov
aaa
or
aad
dec
mov
ja
div
and
ficoml
pop
aas
nop
dec
std
jbe
daa
dec
xchg
ja
mov
rcrl
xchg
sbbb
dec
jo
dec
cmp
and
mov
mov
jmp
mov
imul
sbb
icebp
fs
and
or
lods
out
out
sbb
adc
inc
fwait
sub
add
outsl
lock
mov
sahf
repz
fists
inc
sub
ficomps
std
xor
and
xchg
xchg
pop
pop
jbe
les
cmp
xchg
sub
es
icebp
fsubrl
xor
lods
sarb
loopne
xor
ret
stos
gs
loop
je
ret
out
into
cli
clc
mov
push
pop
mov
and
xchg
adc
and
mov
stos
pop
pop
pop
movsl
or
add
sbb
cmpsl
push
jmp
call
sbb
lods
gs
and
mov
cwtl
mov
fdivr
mov
jne
cld
xorl
sub
lods
add
xor
mov
leave
in
jne
mov
aad
ret
jl
ljmp
mov
and
pop
sbb
stos
cmpsl
jg
insb
jp
in
cmp
les
add
lods
call
dec
pop
inc
outsl
test
mov
pop
enter
push
lea
xor
or
mov
mov
insb
loope
jp
mov
outsl
push
fucomp
icebp
inc
mov
cmp
dec
lock
loop
fsubrl
pop
mov
cli
fcomp
push
loopne
sub
mov
popa
repz
mov
mov
jb
cmc
cmpsb
pop
stc
les
or
mov
ret
mov
jo
inc
popa
not
repnz
cs
nop
std
cli
cmp
aam
jo
in
ficompl
popf
pop
push
push
sub
gs
addr16
push
stc
es
sti
sarb
jge
xor
daa
mov
je
jecxz
xor
pop
cmp
lods
jb
xor
and
test
lds
notb
das
lods
mov
int3
outsb
dec
out
jg
imul
jbe
jecxz
popa
repnz
xchg
mov
inc
inc
lods
and
ljmp
push
sub
lret
enter
pop
adc
sbb
or
insb
call
xchg
mov
pop
inc
inc
add
sbb
lds
inc
in
pop
cwtl
and
sub
jp
and
faddl
xchg
lret
sub
pop
insl
adc
sub
xchg
cli
push
or
xchg
mov
cwtl
jno
into
dec
call
mov
xchg
jo
push
dec
push
shll
imul
aas
call
jae
sub
int3
fidivs
iret
xchg
xlat
icebp
fsts
jbe
fs
sbb
cmp
test
popa
push
sub
push
add
cmp
int
dec
hlt
xor
rorl
fcompl
sub
or
cmpsb
inc
cmp
lds
xchg
mov
sub
mov
pshufw
pop
addr16
subl
mov
xchg
mov
negb
mov
cmp
add
pop
outsl
xor
in
lret
sti
sbb
fucom
loop
test
lret
xchg
aad
int
mov
mov
mov
sbb
mov
int
dec
lods
rol
fstps
jbe
jl
pop
dec
test
jae
ds
mov
dec
stc
int3
mov
push
test
adc
outsl
add
mov
cmp
inc
jno
cs
push
call
mov
cwtl
icebp
mov
add
sbb
push
test
sbb
lds
cltd
cs
and
imul
jo
sub
jbe
cs
add
aaa
mov
xchg
jne
arpl
pop
shrb
das
mov
cmc
xor
cs
or
call
or
fists
lock
push
dec
lret
fs
inc
cli
cmp
push
mov
pop
dec
scas
mov
clc
arpl
pop
dec
cmp
xor
lret
clc
fwait
adc
xchg
sub
push
jno
mov
mov
call
mov
lcall
lret
mov
lret
cmp
aas
inc
in
outsb
mov
outsb
icebp
fwait
xchg
pop
stos
stos
xlat
test
clc
cltd
loopne
cld
jo
cmp
dec
addr16
pop
or
mov
push
inc
push
jbe
inc
popf
mov
jle
mov
adc
lods
bound
inc
jp
mov
fisubrl
loop
shlb
jmp
fimuls
pop
fmul
or
mov
push
jae
sahf
inc
xlat
popa
stos
mov
dec
addr16
and
push
stc
lea
sbb
inc
movsl
and
inc
dec
add
outsw
add
jl
push
addr16
sbb
stc
scas
push
frstpm(287
filds
movsb
xchg
xor
mov
adc
scas
mov
repnz
or
dec
roll
jno
jl
gs
jl
dec
iret
jbe
xchg
es
jg
jmp
cmp
dec
pop
mov
sub
ret
cwtl
and
sub
in
mov
stc
fldl
sub
lods
fwait
mov
or
lods
fcmovnu
adc
test
out
ret
pop
negl
cwtl
das
cli
xchg
imul
roll
xchg
add
jb
pop
inc
xchg
bound
fdivrs
jns
and
sbb
xor
sbb
add
pop
mov
ja
popf
movsl
add
scas
pop
adc
push
jp
fs
cmp
mov
fisubl
fistpll
mov
jp
sarb
adcl
aas
js
push
sub
mov
sahf
ja
or
xor
lds
ret
inc
and
icebp
push
mov
fnstenv
mov
les
or
push
scas
sti
clc
and
add
add
imul
xchg
inc
popa
push
mov
push
dec
scas
fisubl
mov
xchg
rclb
scas
dec
mov
adc
fisttpl
iret
dec
dec
testb
subl
or
jbe
repz
cli
xchg
sbb
push
cli
dec
pop
ret
pop
daa
pop
pop
les
mov
repz
mov
fcomps
pop
loopne
out
xchg
sbb
dec
xchg
es
daa
add
das
pushf
dec
scas
mov
jecxz
mov
mov
fwait
repz
dec
sbbl
das
adc
les
daa
das
hlt
pop
sbb
add
jb
jle
inc
outsb
jmp
jb
sbb
adc
mov
jb
out
nop
pop
jl
cmpsb
cld
cli
addr16
sarb
hlt
adc
sti
push
add
inc
fs
les
mov
mov
and
int3
pop
int3
mov
cmpsl
in
add
loop
sub
test
mov
std
sbb
sbb
xchg
or
enter
xlat
mov
ffreep
sbb
sahf
loope
sahf
mov
ljmp
popf
pop
cs
loopne
sti
rorl
push
sahf
mov
adc
mov
sti
and
sldt
repz
inc
mov
and
inc
addr16
shll
cmp
dec
xchg
xchg
dec
dec
cmpsl
hlt
and
lock
cmp
push
adc
mov
mov
pop
shlb
push
rcrb
sbb
mov
call
or
push
cmp
popf
ficoms
pusha
js
call
jmp
out
dec
cld
fcomp
adc
in
or
lahf
mov
xchg
xchg
pop
fdivrs
push
add
into
ja
and
fdivs
fwait
ds
cmp
sbbl
push
fadds
enter
add
push
push
lods
sbb
jne
inc
mov
mov
leave
into
addr16
ror
push
dec
stos
jmp
fsubrl
dec
rcrl
aam
je
adc
shlb
sub
loope
pop
filds
bound
xlat
push
xchg
scas
cli
mov
sbb
or
loopne
xchg
in
out
lea
jg
mov
xor
test
fdivr
pop
xor
push
jbe
ja
push
in
jp
push
in
mov
ret
cmp
insl
xor
fwait
dec
jg
inc
subl
stos
sbb
mov
add
cmp
xor
ja
mov
in
dec
jns
das
xchg
push
mov
sub
enter
pop
pushf
es
outsl
jl
adc
std
pop
inc
mov
mov
push
lahf
mov
cltd
inc
xchg
into
aam
push
pop
cwtl
xchg
hlt
cmp
loopne
push
jne
out
loopne
pusha
cmp
jbe
xchg
test
imul
mov
jge
mov
mov
mov
pop
sbbb
inc
and
ja
pop
rcll
popf
js
adc
movsb
das
push
fcompl
call
into
cmpsb
mov
movsl
in
popf
push
cwtl
push
pop
xchg
add
js
lock
movsb
sbb
icebp
imull
in
scas
sub
mov
cmp
shrb
mov
mov
jb
int3
aad
cmp
mov
xor
cmc
fcmovne
add
cmp
add
cmp
cmp
jecxz
inc
mov
ret
jbe
xchg
sub
lods
xchg
dec
pop
cmpsl
sbb
pop
sbb
imull
push
sbb
xlat
inc
dec
cmp
pop
daa
push
scas
out
or
mov
nop
sub
rolb
popa
mov
push
add
lcall
mov
push
jnp
test
fistpll
cmp
mov
mov
aas
jle
jmp
xchg
jecxz
jg
movsl
cmp
insb
aaa
fstl
inc
pop
pop
cmpsl
add
xchg
enter
fistpl
lcall
cmp
cmpsb
push
mov
lds
or
or
movsl
repnz
in
sarb
xor
or
daa
mov
lods
sbb
outsb
fwait
rcll
out
lret
xchg
rorb
fwait
mov
xor
mov
movsb
addr16
pusha
stos
adc
cmp
push
mov
fsubrl
adc
mov
iret
popf
and
mov
nop
rol
call
test
inc
mov
mov
arpl
pop
outsb
inc
or
adc
scas
cmc
add
dec
pop
cmpsl
lahf
jmp
loopne
in
into
test
jns
lcall
out
imul
jecxz
cs
imul
xor
mov
ror
in
xchg
div
sub
dec
jp
jne
and
mov
ljmp
fcompl
outsl
pop
out
pop
push
es
ss
test
into
scas
xorl
fists
sub
mov
stos
fbld
in
outsl
sbb
mov
bound
or
fsubl
rorb
or
or
mov
rclb
jne
mov
push
xor
nop
cmpsb
fstpt
push
je
adc
or
test
ljmp
cmp
cmc
mov
daa
mov
jno
sub
adc
mov
mov
mov
sub
inc
sbb
adc
mov
cli
or
push
mov
fimuls
push
fsubrp
mov
mov
add
out
out
hlt
pop
lret
xor
xor
xchg
sub
cmpsb
sti
dec
pop
push
push
and
fiadds
repnz
mov
adc
cld
push
aad
mov
mov
mov
add
sahf
jne
fidivrs
adc
in
in
out
jae
xor
hlt
sub
sbbl
sub
das
shll
xor
pop
dec
mov
xor
inc
es
mov
addr16
push
push
fs
xor
and
or
andl
jno
sub
sahf
inc
dec
mov
adc
js
aad
cmp
and
mov
pop
insb
int
test
and
xor
jg
lock
sar
mov
mov
shr
shrl
adc
jb
cli
adc
es
loop
ret
out
out
sahf
insb
dec
mov
push
jecxz
or
loopne
pop
cmp
sub
in
fbld
addr16
lret
lock
pop
jmp
ljmp
sbb
stos
mov
push
sbb
int3
mov
into
push
notl
push
dec
daa
mov
cmp
xor
out
cmpsb
inc
xor
mov
and
pop
pop
adc
leave
pop
cld
ret
push
fcmovu
aas
arpl
push
sub
push
mov
jnp
add
lret
pop
clc
dec
cli
dec
mov
push
xchg
bound
cs
scas
mov
dec
outsl
test
mov
push
iret
or
popa
lcall
cmp
xchg
xor
pop
stc
sub
aas
mov
adc
loopne
jmp
outsl
lock
out
adc
fcoms
add
mov
data16
test
or
sbb
push
aad
mulb
push
mov
push
mov
stc
mov
hlt
ja
pop
pop
inc
pop
arpl
test
testl
mov
dec
sbb
imulb
and
cmp
inc
mov
cmp
push
pop
add
in
ljmp
pushf
enter
std
lret
pop
daa
push
mov
push
xor
cmp
shrb
int
mov
not
mov
xor
pop
shl
add
push
dec
daa
pop
push
insl
in
sbb
or
add
pop
decl
or
es
jmp
rcll
cmp
adc
cld
push
test
cmp
cmpsl
fwait
or
outsl
dec
cld
mov
inc
repnz
push
gs
jnp
mulb
or
leave
aas
scas
sbb
es
lret
xchg
mov
insb
test
sub
daa
loop
add
das
xchg
mov
fbstp
lcall
mov
mov
xor
jmp
leave
test
scas
xor
fsubl
xor
jp
into
sbb
std
arpl
pop
sbb
add
loop
push
and
fcmovu
mov
lods
cs
add
mov
mov
loop
fs
movsb
mov
xor
rcl
mov
pushf
push
sub
xor
je
leave
dec
dec
pushf
orb
inc
add
and
push
mov
jbe
sub
scas
outsb
pop
sbbl
adc
outsl
adc
mov
mov
fst
rorb
jp
add
xor
div
mov
xor
lock
roll
and
dec
in
dec
sbb
cmpsl
inc
jg
push
push
dec
cld
fucomi
sti
addb
and
sbb
inc
mull
dec
cmp
pop
dec
lret
mov
stos
dec
cmpsb
pop
hlt
pop
push
push
cmp
sub
pop
ja
pop
out
scas
inc
or
mov
or
imul
in
test
sbb
add
inc
push
adc
dec
cwtl
pop
cs
cli
push
sub
xchg
xchg
bound
xor
jne
pop
push
xchg
sub
add
nop
mov
mov
mov
or
push
mov
lock
xor
pop
rolb
sbb
push
or
icebp
lock
dec
mov
cwtl
jge
push
adc
ret
mov
movsb
lahf
movsb
jmp
adc
adcb
repz
mov
adc
pop
pop
mov
cmc
ds
cwtl
mov
xchg
xchg
inc
mov
xor
icebp
push
sarb
inc
cmc
cmp
iret
out
pop
lds
mov
fwait
add
add
shll
pop
inc
xchg
lret
sub
cmp
lds
lahf
sti
xor
mov
mov
int3
mov
inc
movsb
es
out
rorl
dec
mov
add
dec
negl
dec
sti
adc
aaa
stos
stos
cmp
fmuls
aam
stc
pop
aas
rcll
out
out
sbb
push
add
push
inc
mov
mov
aam
dec
add
cmpsb
nop
cltd
jmp
les
pop
xor
add
cs
cmp
mov
jb
pop
mov
pop
adc
ret
cmc
xor
mov
clc
push
inc
cmpsb
cs
lock
mov
mov
sbb
pop
mov
sbbb
push
ret
xor
data16
pop
jle
and
push
popf
fcomip
add
pop
lret
mov
mov
inc
roll
jbe
stc
aas
data16
out
movsl
add
mov
icebp
fcmovu
fstpt
insb
ret
xchg
aam
mov
es
jmp
lret
push
mov
mov
mov
push
mov
inc
inc
or
mov
xchg
adc
and
and
iret
xchg
mov
test
cmpl
mov
mov
inc
sub
and
scas
divl
sub
icebp
mov
jmp
add
fwait
gs
or
adc
fwait
mov
sbb
inc
loope
sub
or
cld
lret
stos
addr16
push
les
cmpsl
in
jp,pt
mov
ficoml
cli
push
test
or
cmp
aam
cmp
sub
pushf
shr
arpl
inc
lahf
inc
ret
ss
cmpl
mov
imul
cmpsb
fs
rcrl
pop
shrb
xchg
cmp
mov
enter
fidivl
xor
aaa
ds
in
js
movsl
xor
sahf
call
lea
lahf
test
hlt
int3
fcmove
push
xor
mov
mov
arpl
lds
inc
out
movsl
mov
rol
mov
sub
sub
fadd
lcall
xor
shrb
stos
push
cmp
pop
jmp
imul
sti
test
pop
adc
cmp
cmp
cli
pop
add
imul
mov
loopne
popa
and
add
adc
sub
es
lods
je
rcl
xchg
mov
fwait
or
mov
sbb
loop
sub
out
jns
sub
mov
mov
dec
rorb
push
f2xm1
loope
inc
scas
sub
aad
andb
jmp
push
mov
or
jno
mov
jb
stc
add
jae
dec
jbe
test
jb
jle
movl
in
cld
xchg
or
shll
inc
out
or
push
movsl
fwait
inc
mov
add
jp
adc
jg
push
scas
jecxz
aaa
inc
test
pop
inc
std
cwtl
pop
bound
jo
xchg
mov
dec
pop
xchg
les
sub
sub
adc
es
jnp
fbld
add
pop
xchg
mov
xor
jle
sub
les
and
mov
jle
sub
push
adc
push
sbb
int3
xchg
inc
sub
nop
data16
dec
xchg
and
jne
and
insl
test
stc
cld
cmp
les
add
cmp
xchg
mov
mov
or
mov
ja
pushf
adc
adc
sub
pop
cmp
nopl
aad
push
or
xorl
xor
aad
icebp
iret
pop
cmp
lret
inc
xor
inc
in
mov
mov
mov
mov
mov
fs
push
lock
add
push
jno
shr
sub
cmp
dec
add
fistpl
test
addr16
and
and
sbb
fildl
andb
pop
js
pop
roll
mov
mul
es
sbb
mov
movsb
lea
cmp
jg
subl
xlat
add
hlt
xchg
movsl
xor
xchg
push
add
push
out
jnp
jne
push
dec
xlat
das
insb
int
stos
jb
xor
xchg
cmp
pop
sub
jbe
adc
cli
clc
or
outsb
mov
dec
fmull
jae
sub
shrb
or
jne
or
test
fcmovnbe
das
mov
mov
or
xchg
inc
adc
shlb
adc
mov
push
push
and
and
mov
xchg
lret
pop
hlt
in
inc
pop
xchg
les
loop
sub
mov
or
mov
mov
les
sbb
call
lcall
loopne
lahf
cmp
jl
jnp
shrb
in
sbb
or
bound
fsubrs
adc
mov
cmpsb
fs
push
xchg
fiaddl
sub
xlat
cld
cmp
xor
aad
dec
jp
aam
or
andl
jge
enter
jmp
jp
mov
dec
ds
lahf
nop
idivb
in
jns
popf
jns
jae
adcl
adc
push
pusha
sbb
aam
bound
in
xlat
test
outsb
outsl
push
pop
or
pop
inc
mov
adc
scas
inc
sbb
call
mov
jg
cmpsb
dec
lods
rolb
clc
movb
into
mov
sub
icebp
cmp
pusha
or
jge
clc
repz
mov
jne
pop
cmpsl
fimull
inc
into
rorb
and
or
outsb
or
xor
inc
jp
adc
aas
mov
adc
shll
cmc
xchg
mov
mov
pop
xor
repnz
pop
cmp
xor
inc
loop
ds
mov
jae
scas
pop
pop
cmp
inc
inc
mov
push
push
cmp
mov
pop
fwait
xchg
arpl
adc
inc
pop
clc
data16
lret
sub
push
mov
cmp
push
lret
sti
and
scas
jne
mov
pop
xchg
mov
jp
jno
dec
xchg
mov
xor
cld
sarl
dec
mov
pushf
push
aad
xchg
test
test
fisubrl
and
mov
jo
bound
testb
pop
push
cmp
cld
pop
lret
add
xchg
les
cld
mov
lret
mov
fstpt
fisttpl
jns
cmc
loop
ss
rclb
cmp
leave
inc
inc
sbb
into
dec
and
loope
sbb
imul
ja
mov
or
and
pop
dec
rcll
stos
pop
xorl
inc
lock
mov
and
lret
insw
and
scas
lcall
lds
xchg
push
mov
pop
test
pop
adc
adc
repnz
pop
push
fwait
daa
push
cmpsb
mov
jg
fsubl
in
movsb
mov
and
outsb
pop
or
add
jnp
xor
sub
dec
sub
push
xchg
mov
lds
dec
loopne
outsb
sbb
rcl
push
loopne
or
loopne
dec
and
pop
push
jl
jl
push
mov
and
mov
lods
xor
dec
and
outsb
push
inc
incl
scas
xchg
jp
outsb
add
movsl
pop
lods
adc
xor
in
pextrw
or
dec
lock
xor
cmp
lods
outsb
out
cs
ret
adc
fistpl
imul
cmp
rolb
loope
sbb
bound
sub
or
lds
mov
pop
stos
adc
mov
add
rcrl
jae
lret
xcrypt-cbc
cmpsl
xchg
sub
lea
subl
fwait
in
inc
xchg
mov
out
nop
arpl
sub
lds
je
imul
lret
insl
cmpl
int
add
stc
dec
jae
sub
sbb
or
inc
inc
sahf
mov
sub
mov
adc
mov
leave
inc
fldenv
add
pop
pop
adc
test
jb
jae
push
cmp
int
sub
movsb
sub
aaa
cmp
mov
out
add
xor
lcall
or
adc
fisttpl
sbb
decl
repnz
adc
das
das
leave
jmp
mov
pop
sub
mov
or
jbe
push
pop
stc
pop
mov
jb
das
fmull
test
daa
int3
iret
lods
loopne
dec
push
mov
push
stos
std
xor
push
mov
cmp
inc
cmp
leave
adc
cli
inc
std
pop
cmpsb
xchg
pushf
xor
cs
jo
ret
fnstenv
bound
push
fwait
lds
inc
pop
in
nop
pop
lcall
mov
sbb
arpl
rcrl
mov
stos
mov
sbb
mov
iret
xchg
inc
and
inc
or
lcall
jne
ljmp
in
sbb
leave
mov
jno
aas
or
scas
sbb
inc
adc
pushf
sbb
daa
add
dec
sbb
xor
mov
fsubrl
push
mov
mov
aas
imull
mov
clc
shll
shll
dec
dec
mov
or
push
clc
sub
inc
xor
push
sahf
xor
fcoml
jg
mov
xchg
sbb
cmp
aam
cli
mov
or
xor
das
gs
cs
pusha
and
scas
add
mov
aam
xchg
add
movsb
cs
mov
hlt
mov
shll
add
dec
test
cmp
in
insb
mov
xchg
bound
mov
jmp
in
pop
sarb
iret
fildll
inc
cmp
subb
push
fstl
adc
cmpsl
dec
add
jno
test
divl
hlt
sbb
pop
call
mov
push
aaa
dec
subb
cld
ret
repnz
mov
pop
je
sbb
jbe
pop
arpl
mov
push
jge
popf
mov
add
or
lods
push
lcall
add
adc
idivb
inc
lods
cs
dec
enter
adc
in
cmp
xchg
xor
roll
fs
mov
push
pop
and
in
stos
pushf
arpl
in
sbb
and
dec
ret
or
nop
pop
shr
sbb
fwait
sbb
mov
sub
or
pop
dec
add
sbb
loope
push
dec
lock
jmp
cmpsb
aad
cmp
push
fwait
sub
or
sub
in
adc
and
dec
stos
inc
xor
or
loopne
inc
loope
jecxz
jp
pop
int
sbb
int3
or
and
lret
ljmp
mov
inc
and
or
pop
mov
in
insl
jo
push
xchg
cld
repz
sub
cmpsl
outsb
and
adc
cmc
or
pop
outsb
ja,pn
loopne
lea
lahf
insl
jle
subb
jbe
jmp
idiv
pop
and
add
sub
jg
lds
jl
test
add
pop
sti
or
adc
rcl
testl
sub
mov
xchg
mov
addr16
mov
das
lahf
cld
xchg
push
push
test
jmp
jns
cmp
jg
es
xor
loop
repz
ss
mov
jns
int3
sub
xchg
js
xchg
mov
jns
inc
cwtl
sub
sbb
insl
mov
mov
sub
mov
xchg
jg
loop
or
pop
add
jae
cld
mov
mov
mov
out
sahf
pusha
fsubrs
xchg
cmp
mov
adc
mov
out
out
sti
out
repz
fnstenv
sbb
inc
in
mov
xor
or
mov
xlat
lods
mov
xchg
mov
and
stc
add
mov
push
cmp
inc
or
pop
pop
inc
roll
jg
imul
out
repz
sub
icebp
stos
mov
xor
mov
pop
fnsave
cmp
scas
lods
ja
xor
adc
fcmovnbe
test
insl
scas
rcll
iret
cli
pop
xor
jo
pop
mov
fcmovne
adc
outsb
jle
mov
push
js
lahf
sub
in
pop
push
xchg
andl
icebp
data16
std
and
mov
xor
pop
sub
inc
and
shrb
cmp
hlt
mov
xor
jnp
hlt
out
or
lock
xlat
pop
rcrl
in
inc
outsl
sub
cmp
pop
ret
push
mov
and
sahf
call
sbb
adc
push
lahf
push
ljmp
add
or
outsb
sbb
mov
jb
loope
arpl
es
and
in
inc
icebp
test
xor
ret
adc
dec
pusha
sub
push
cmpsl
adc
xor
mov
add
fxch
enter
or
fidivrs
mov
cltd
sub
jp
mov
in
dec
jo
aaa
sbb
test
stos
jb
das
mov
insb
mov
andb
jnp
stos
cmp
es
stc
repz
lcall
xor
mov
jg
andb
pop
les
ret
fisubl
sti
js
cli
insl
sbb
jecxz
jb
out
test
test
and
adc
sarb
jmp
cmp
out
insl
jecxz
popa
mov
push
pop
insb
inc
fwait
addl
push
mov
push
das
in
sbb
add
jmp
data16
jb
icebp
loop
add
insb
insl
fldl
xor
aam
je
push
add
mov
clc
pop
shll
mov
mov
add
xchg
pop
dec
mov
sub
inc
ret
inc
jbe
mov
cmp
lods
pop
and
stos
lahf
inc
incl
cmpsl
inc
cwtl
mov
shll
loope
pop
movsb
and
adc
out
adc
mov
sbb
shrl
xchg
test
xor
sbb
lret
in
inc
pop
xor
push
cmp
sub
sub
mov
adcl
aam
pusha
push
aas
clc
and
roll
xor
outsl
inc
cmp
popl
scas
sub
xchg
scas
add
or
cwtl
sbb
out
out
jg
sub
rcrl
movsb
sti
adc
add
push
arpl
arpl
jne
xor
int3
cmc
cs
mov
fwait
mov
arpl
mov
les
push
js
jns
push
mov
sbbl
mov
push
sub
fsub
imul
cltd
bound
xor
test
inc
lds
loopne
add
sub
pop
and
int3
pop
pop
xlat
fstl
mov
and
mov
daa
repnz
jmp
mov
lock
push
xlat
xchg
daa
xlat
fwait
insb
mov
fdivl
imul
mov
hlt
inc
inc
add
jge
add
jmp
insb
mov
orb
push
push
shl
sbb
sahf
mov
aam
add
lea
pop
aad
jg
insl
cli
int3
test
or
mov
add
cmp
test
in
out
mov
loop
lods
jle
mov
lret
popf
enter
mov
mov
sub
mov
enter
xchg
pop
ja
mov
ds
pop
mov
xor
decb
cli
stc
outsl
das
loop
andb
rol
sbb
aaa
mov
jno
mov
dec
call
push
std
adc
xchg
push
mov
adc
fcom
cmpsb
cmp
cltd
pop
sbb
push
push
inc
inc
mov
iret
lods
cli
out
mulb
xchg
inc
cmp
popf
test
sbb
cli
inc
cmp
lret
mov
sub
fildl
icebp
jbe
fwait
loope
fistpll
js
mov
pop
dec
sub
sbb
mov
rorb
scas
pop
adc
aam
call
gs
dec
stc
sbb
nop
mov
sbb
pop
cmc
xchg
mov
push
lds
mov
pop
push
add
into
sbb
popa
imul
fists
or
mov
hlt
scas
xchg
int
lea
mov
ret
fsubrl
cld
stos
sub
inc
lods
pop
pushf
adc
push
add
mov
iret
iret
inc
cmp
repnz
std
pop
jg
rcl
or
pushf
xchg
orl
sub
sarb
je
add
xor
scas
mov
outsb
cmp
jo
outsb
cwtl
adc
jmp
adc
sarb
jle
dec
bound
ret
inc
push
adc
mov
bound
out
cmp
outsb
icebp
fucom
nop
inc
jmp
pop
es
xchg
adc
pop
dec
arpl
pop
add
addr16
xor
dec
jge
inc
mov
and
hlt
xor
test
mov
sbb
adc
inc
mov
dec
jb
fimuls
push
mov
pop
sub
pop
pushf
mov
inc
mov
fdivrl
inc
jo
les
sbb
call
jo
cmpsw
loopne
xchg
push
ret
or
adc
cmp
dec
dec
mov
shl
paddsb
or
push
mov
xlat
shll
xchg
outsl
fistl
loopne
inc
dec
push
sbb
pop
shlb
or
xlat
fcoms
or
mov
fwait
push
xchg
les
or
shlb
iret
inc
fsubp
mov
or
into
mov
jmp
pop
out
jno
push
cwtl
test
inc
jl
rolb
out
popa
and
adc
xor
sbb
cmpsl
add
push
imul
aam
test
clc
and
jmp
jae
test
cmp
arpl
shl
stos
and
stos
lahf
fbstp
adc
lcall
jge
fstps
jae
xor
cmp
fists
add
pop
sarl
xchg
popf
aad
jns
mov
int3
jl
or
push
in
inc
cmpsb
push
icebp
inc
sub
shl
imul
lods
fdivl
pop
out
xor
cltd
inc
shrb
inc
pop
mov
and
mov
jp
mov
movsl
push
pop
int3
test
mov
arpl
sub
outsb
mov
frstor
into
jne
mov
pop
mov
mov
mov
mov
les
cmpsb
adc
in
repnz
adc
xlat
mov
push
les
xchg
cld
mov
mov
adc
adc
cli
cmp
pusha
jecxz
mov
loopne
adc
out
pushf
push
mov
sbb
enter
movsl
pop
or
mov
dec
insl
xor
or
stos
nop
jne
cmp
out
mov
loopne
sub
repz
jmp
xchg
mov
jmp
xlat
or
test
mov
cmp
lds
sub
arpl
pop
es
leave
inc
roll
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
insb
or
add
add
add
add
jmp
and
pop
mov
imul
mov
jg
add
jge
xor
or
jl
mov
cmpsl
mov
xchg
arpl
mov
push
xchg
inc
sub
add
in
sbb
and
loope
jb
bound
gs
jae
insb
sub
dec
sti
adc
xchg
lock
sbb
dec
fildl
xchg
imul
xor
outsl
scas
pop
sub
sbb
sahf
test
inc
push
es
mov
test
mov
xor
mov
nop
and
ja
jnp
mov
je
xchg
pop
js
push
into
test
popa
inc
xlat
stc
repnz
xor
frndint
adc
or
lds
pop
mov
out
push
xchg
cmp
inc
fs
and
int3
clc
rcll
adc
inc
fmulp
mov
fwait
out
orl
or
rolb
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
