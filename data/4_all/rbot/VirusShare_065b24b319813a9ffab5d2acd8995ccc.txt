in
test
or
pop
sbb
stos
hlt
into
add
test
pop
inc
rorl
add
adc
in
add
cmp
or
xchg
fwait
test
xor
mov
loop
in
rclb
inc
sarb
push
inc
pop
adc
xchg
ret
rcr
mov
inc
les
inc
push
fisubs
out
out
sbb
cmp
cmp
loope
mov
mov
mov
faddl
mov
and
test
aad
ret
stos
push
dec
lret
sbb
sub
jbe
mov
ss
int
pop
mov
push
sub
or
cwtl
in
and
sahf
xor
jecxz
pushf
sbb
mov
lock
lock
jne
mov
ret
rcl
push
adc
ret
cmpsb
mov
dec
lret
stos
inc
in
stos
gs
loop
movsb
jmp
lret
fucomp
add
dec
popf
lret
fistps
insb
sbb
hlt
mov
lret
imul
test
cmpsb
fistpl
test
dec
push
xchg
mov
pusha
pop
into
mov
fucomi
repnz
push
jae
lret
hlt
and
cmp
push
and
mov
mov
xor
push
cmc
or
les
xchg
xchg
pop
xchg
int3
push
mov
xchg
lock
sarb
inc
jmp
xchg
adc
inc
test
into
es
aam
push
adc
cmpb
jmp
lret
cltd
flds
shll
call
aam
jb
adc
pop
lret
aam
mov
fists
test
sbb
dec
adc
repnz
jnp
stc
testl
fwait
into
jmp
mov
pop
ret
dec
sbb
mov
sbb
cli
stos
cmpsl
int
fs
scas
dec
scas
pop
rcr
mov
add
cmp
mov
xchg
add
mov
movsl
or
sbb
mov
pop
pushf
xor
cmp
xlat
push
jno
cmc
mov
faddl
repz
nop
xchg
filds
mov
push
sarb
sub
mov
jge
pop
inc
xchg
int
dec
sarb
pop
mov
adc
xchg
and
mov
mov
cmovae
call
push
fidivs
das
xor
push
and
jle
inc
loop
mov
dec
outsl
dec
fidivl
enter
push
adc
mov
sbbl
add
cmpb
pop
ficompl
pop
es
cmp
cwtl
sbbb
inc
sbb
dec
cmpsl
or
mov
cwtl
or
outsl
sub
cmp
cli
sub
aaa
imul
cmpl
jmp
ja
in
lret
sbb
daa
sub
daa
mov
mov
pop
xor
add
pop
mov
fldl
pop
gs
xchg
pop
loop
adc
jp
js
loopne
repnz
popl
adc
into
test
xor
addr16
fwait
cmp
mov
aam
sub
push
jns
fcom
pop
xchg
pop
jbe
sti
mov
xchg
sbb
pusha
mov
sbb
push
push
push
or
sarb
xor
mov
pop
sahf
dec
sub
cmpl
int3
inc
pop
lods
dec
or
loopne
iret
xlat
jmp
test
or
loopne
daa
mov
lock
ss
sbb
popa
mov
test
cmp
push
test
lret
ljmp
sahf
cmp
repnz
dec
pop
les
jbe
cmp
daa
je
cmp
lret
ret
rcrl
lret
or
dec
cmpsl
ds
fistl
cmp
cmpsb
fstp
push
int3
xor
inc
push
mov
mov
push
test
ss
das
loopne
push
scas
xlat
in
pop
inc
loop
scas
out
mov
rol
sub
fcompl
out
push
cmpsb
shrl
push
fidivrl
fistps
or
jae
stos
mov
stc
out
mov
fisubs
lods
mov
mov
test
jle
push
dec
mov
pop
pop
test
jbe
mov
popf
inc
inc
mov
cwtl
fcmovnb
add
sbb
ds
aas
notl
xor
mov
outsl
ret
popa
mov
cmp
mov
mov
into
dec
cmpb
adc
subl
ficompl
jno
les
add
jb
lcall
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
stos
hlt
jle
or
dec
xchg
or
add
adc
mov
jmp
ret
ficoms
jle
scas
fcompl
and
xchg
mov
add
shlb
push
inc
pop
sti
push
dec
mov
sbb
jge
inc
push
fisubs
add
fidivrl
push
pop
cld
inc
and
pop
jb
fwait
in
mov
fucomi
push
adc
adc
inc
inc
mov
shrb
cmp
inc
js
or
lret
adcl
inc
lcall
popf
divb
fstl
rcl
adc
jnp
mov
add
push
bnd
pop
int
inc
pop
adc
insl
cwtl
ret
dec
test
jns
or
lds
mov
mov
sbb
sbb
fidivl
push
dec
shll
jno
dec
push
jg
mov
outsb
stc
fs
or
xchg
aad
pop
inc
shll
jne
gs
mov
fnstsw
jecxz
mov
loopne
jne
jo
and
stc
xchg
les
lahf
testl
cltd
lds
repz
cwtl
xor
pushl
mov
fwait
jmp
mov
out
shr
mov
jge
imul
leave
sub
cmp
jg
sti
xor
pop
decb
jb
out
adc
addb
inc
mov
pop
xchg
inc
mov
cmp
cs
sarl
cmp
lcall
xchg
rcrb
aas
push
repz
or
and
jns
popf
dec
pushf
cmp
adc
ss
sbb
rcrb
mov
insb
fs
vfnmadd213ps
mov
int3
and
xchg
enter
jae
fistl
repz
jo
fnstenv
lds
jl
dec
sub
add
inc
sub
mov
xchg
jl
rorl
test
fistpl
mov
push
mov
jp
xor
ffree
div
std
cld
mov
fs
rcrb
adc
pop
arpl
dec
add
add
pop
push
cmpsb
stc
xor
fidivrl
adc
mov
mov
test
fs
sti
mov
jno
xchg
dec
inc
xor
inc
xor
mov
fisubrs
aam
jb
xchg
mov
imul
ret
inc
mov
pop
cmp
movsl
push
jmp
loopne
aam
negl
inc
add
ret
jmp
divl
pop
adc
cmp
pusha
dec
add
or
inc
pop
repnz
dec
cmp
push
mulb
inc
inc
xchg
out
les
sub
lods
pop
inc
mov
shl
mov
leave
mov
gs
cmp
insl
mov
lock
in
addb
ficompl
outsl
divb
jno
mov
movsb
push
aad
xor
push
dec
les
jmp
test
push
fbstp
stos
or
roll
repz
mov
mov
dec
addr16
int
dec
mov
ss
xchg
imul
stos
repnz
xchg
sbb
addr16
xchg
push
into
jns
pusha
jb
sti
cmc
mov
sub
xchg
dec
xorl
es
cmpb
mov
mov
sbb
fdivl
call
les
xor
jg
mov
addb
jmp
xor
sahf
add
lret
inc
xchg
jo
push
adc
mov
and
loop
sbb
orb
adc
xor
sbb
adc
cwtl
mov
jae
sub
cmpsl
popf
lret
add
adc
test
jo
in
ljmp
pop
sub
jp
lcall
pop
mov
lret
int
lcall
in
ret
push
xchg
out
fcmovnb
popa
jae
sarb
add
or
sbb
les
mov
or
les
xchg
xchg
push
mov
or
dec
mov
or
mov
mov
sahf
pop
jne
xchg
push
adc
or
fsubs
loopne
in
sub
cmp
loop
cmc
enter
popf
push
adc
dec
mov
mov
sahf
or
test
outsb
pop
aam
mov
in
lea
pop
rcr
cmp
lahf
rcl
or
js
sub
jecxz
test
jno
sub
mov
imulb
push
mov
std
push
xchg
les
xchg
call
jl
iret
push
cmp
lods
fcoms
movsl
test
nop
std
dec
xchg
adc
sub
xchg
push
mov
xlat
xchg
jle
cltd
lds
jnp
mov
movsl
xchg
cs
jmp
pop
mov
cld
or
sub
push
adc
inc
mov
dec
adc
pop
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
mov
enter
inc
popa
lcall
faddp
loop
push
fisubs
gs
adc
in
adc
push
push
fwait
dec
dec
ds
push
inc
mov
sbb
test
jns
push
in
outsb
adc
repz
loop
scas
icebp
cmp
incb
ret
scas
add
andl
push
rorl
jmp
neg
in
movsl
ret
sbb
cmpsl
xchg
lcall
dec
sbb
push
xor
mov
xor
push
lcall
repz
pop
or
adc
mov
or
dec
mov
pop
xchg
lret
pop
pop
jae
push
cmp
pop
jnp
enter
sub
pop
xchg
pop
jno
and
adc
xor
idivl
add
arpl
push
inc
inc
lea
xchg
loopne
test
push
jmp
mov
stos
sub
cmpsb
fcomp
jg
cmpsb
jnp
enter
or
fwait
mov
push
or
movsb
hlt
xor
cmc
sub
mov
leave
das
loopne
pause
sub
ret
pop
stos
jns
test
rcpps
mov
addr16
aas
decb
adc
js
popf
rcrb
add
adc
lret
lds
movb
ret
sbb
adc
sub
mov
lds
jge
push
in
stos
inc
shl
cmp
les
jl
lcall
inc
cmp
inc
lret
cmc
add
cmp
shrl
jl
fistpl
lcall
mov
fstl
outsb
pop
scas
std
fabs
cmp
fwait
sbb
sti
sub
test
jo
cs
or
sarb
jns
dec
mov
repz
out
jp
mov
rcrb
les
fwait
pop
test
push
out
mov
fwait
lea
mov
add
test
or
adcl
dec
sub
in
cmc
fsubrl
mov
repz
cmp
arpl
int
fbld
out
push
mov
in
xchg
xorb
mov
inc
mov
add
lds
ror
inc
sbb
pop
ss
push
imulb
stos
mov
outsl
and
les
call
mov
pop
dec
scas
xor
jge
jp
lods
sbb
cli
int3
mov
mov
pop
outsb
fsts
pop
pop
add
sub
stos
ja
shlb
fistpl
popf
fcompl
jbe
scas
xor
sub
jl
cmp
inc
fwait
leave
cmc
xor
adc
mov
mov
dec
mov
push
stc
addr16
addr16
fwait
mov
aam
lcall
mov
sub
cmp
jae
gs
outsl
cmpsl
fcmovne
out
shlb
loop
push
dec
add
inc
hlt
xchg
imul
pop
push
and
daa
enter
push
decl
adc
inc
stos
shrb
cmp
jae
divl
shl
mov
repnz
adc
jne
leave
add
add
cmpsl
mov
enter
push
inc
stc
fisttps
lret
push
sub
rorb
sbb
jae
inc
adc
adc
cld
or
xchg
or
xchg
cmp
shrl
push
mov
jb
mov
sub
inc
int
xor
xchg
jnp
xor
lods
pushl
loope
js
dec
in
idivl
roll
test
cmp
jp
stc
fisubrl
xor
fistl
mov
cmp
mov
outsl
push
pop
std
sbb
mov
mov
xchg
fdiv
jl
sub
mov
lods
out
push
cmp
inc
pop
aam
sbb
into
pop
stos
les
push
mov
inc
xor
lds
ds
mov
movsl
xchg
inc
add
aad
add
mov
or
or
cmpsb
jno
fsubs
es
mov
xor
orl
fldl
rcrb
push
jae
mov
into
xor
rcrl
push
cmp
les
pushf
cmp
add
xchg
add
jl
fstpt
stc
scas
jle
imul
jecxz
lods
fdiv
mov
pusha
jp
movsb
cmp
in
mov
pop
ret
sbb
adc
push
clc
add
mov
rcrl
or
es
rcr
and
popa
aam
push
cmpsb
xlat
sub
mov
xor
insl
scas
add
jmp
jns
sbb
aam
test
dec
inc
mov
cmp
cwtl
pop
inc
mov
dec
xchg
lret
cltd
sbb
pop
xor
mov
add
lea
popf
jae
add
dec
pop
lds
cmp
test
dec
aaa
add
add
mov
sbb
or
and
or
pmuludq
icebp
imulb
xor
popf
dec
cmc
push
push
test
cmp
cld
and
xchg
movsb
dec
clc
and
jae
mov
into
ss
rcr
xchg
cmp
push
cmp
shrb
jp
xchg
or
xchg
sbb
xchg
fsts
movsl
fcoml
or
adc
cmpsl
rcrb
mov
in
jg
fbstp
arpl
jecxz
arpl
iret
rcrl
or
push
pop
mov
cmp
mov
rclb
scas
mov
xchg
insl
lsl
fidivrs
call
and
das
xchg
enter
pushl
xlat
sub
movsb
jne
out
enter
std
ret
push
xchg
mov
adc
test
lcall
into
out
sarl
mov
in
xchg
lods
add
mov
add
or
ret
xchg
int3
addr16
imulb
fisubrs
mov
cpuid
push
lods
and
mov
leave
pop
dec
aas
mov
sbb
pusha
cmp
sar
xor
cwtl
adc
sub
fdivl
push
stos
shll
push
mov
jae
mov
in
push
mov
jge
push
cmp
ljmp
ss
in
jl
aas
add
add
inc
loop,pt
jo
rcrb
dec
add
cli
out
push
push
lods
xlat
push
int
sbb
ja
fistps
movsb
jnp
imul
iret
sbb
pushf
aam
aaa
es
hlt
xor
aas
adc
cmp
xchg
pop
pop
daa
adc
lret
adc
mov
das
xor
mov
fidivl
jne
inc
inc
xor
fidivs
mov
xor
gs
pop
dec
aaa
adc
mov
loopne
sub
cld
or
inc
mov
xchg
mov
dec
sbb
test
push
lds
add
pushf
test
jmp
shl
sub
movsl
test
adc
xchg
or
cs
rorl
dec
dec
adc
into
lods
decb
movsb
cmp
xor
jmp
mov
push
repz
push
mov
js
rclb
shlb
ja
es
adc
or
dec
inc
mov
les
fdivl
cltd
jne
mov
rorl
imul
gs
adc
cmp
leave
xchg
cmp
jecxz
jne
dec
movsb
xchg
stos
mov
cmc
xor
pop
das
or
push
add
div
jae
cmp
add
clc
cmp
dec
lahf
lret
hlt
mov
inc
test
add
and
mov
divb
aad
inc
add
arpl
les
cmp
repnz
stc
push
test
cld
sub
std
mov
mov
int
leave
push
dec
pop
mov
outsb
push
cld
nop
imul
shll
push
mov
jb
xor
sti
mov
cmp
inc
test
add
repz
dec
cmc
xor
sub
or
mov
dec
mov
enter
inc
pushf
pop
mov
push
fsubs
push
call
push
push
test
push
push
data16
mov
fwait
dec
inc
xchg
pop
pop
mov
mov
hlt
je
test
out
aad
movb
lret
imul
mov
les
inc
inc
mov
stos
fldt
xchg
push
push
int
inc
ds
cmpsb
notl
in
dec
dec
add
test
cltd
pop
movsl
rcrl
cltd
cmp
movsl
ret
xchg
int3
addr16
xor
cmp
mov
movsb
jmp
push
idiv
fs
mov
sbb
jno
mov
insl
sbbl
fistl
cmp
ja
mov
sahf
jns
andb
adc
lret
jge
andl
push
mov
ret
rolb
xchg
mov
js
jns
pop
and
leave
aam
imul
xchg
and
fdivl
lcall
push
mov
outsl
push
or
std
and
je
test
mov
jl
adc
dec
sbbb
loope
mov
sti
gs
or
sbb
fidivrl
push
sahf
xchg
imul
ficoms
xchg
iret
sarl
sbb
pop
and
fcmovne
dec
sbb
adc
std
pop
dec
andb
insl
cmpsl
ret
or
push
sbb
test
movsb
push
cld
mov
aas
int3
dec
lock
cmp
adc
dec
adc
xchg
test
mov
idivb
add
dec
cltd
and
std
mov
pop
scas
dec
jns
push
pop
jmp
xchg
dec
sbb
scas
dec
call
and
in
mov
ss
adc
push
mov
adc
es
mov
xor
dec
xor
pushf
outsb
add
cmpsb
xchg
xor
stos
mov
push
in
bswap
test
mov
push
pop
out
inc
sbb
and
inc
inc
add
xor
xchg
lret
insl
rorb
popf
mov
wbinvd
mov
ret
mov
popf
idivl
repz
cmpsl
std
mov
incl
add
in
cmp
dec
lock
push
xor
nop
pop
lret
mov
cmpsl
mov
clc
xor
std
mov
scas
dec
sbb
push
lahf
lcall
daa
sti
xor
mov
mov
in
mov
cli
or
mov
iret
xlat
lcall
ja
inc
gs
add
and
movsb
push
add
push
jno
shll
lret
int
loope
lds
rcrl
and
add
add
loop
mov
hlt
js
jns
stc
int
je
ljmp
je
xlat
cltd
xchg
and
and
fs
mov
jecxz
shlb
xchg
insl
sahf
add
std
inc
fscale
dec
inc
xor
loopne
enter
or
hlt
jl
into
mov
sbb
loopne
cmc
mov
pop
das
or
dec
add
lret
gs
fisttpll
call
jne
test
lahf
lret
jecxz
add
add
test
hlt
sub
add
sbbb
sub
sbbl
push
dec
jb
sbb
xchg
dec
xor
mov
mov
mov
pushf
dec
pop
pop
nop
insb
sbb
xchg
cld
ss
xchg
insl
cwtl
popa
xor
mov
pop
scas
dec
push
xchg
outsb
sbb
mov
jp
lahf
ficomps
xchg
jg
add
cwtl
or
aas
adc
ret
jle
adc
sbb
js
pop
cwtl
inc
cwtl
in
xor
icebp
inc
push
test
test
fsubs
jno
in
sub
pop
mov
sti
xor
push
icebp
dec
add
addl
mov
stc
and
inc
jne
or
rcrb
pop
push
mov
dec
add
in
and
shrd
cmp
and
sar
loopne
test
lahf
lret
jecxz
add
jnp,pn
leave
or
dec
inc
pop
repnz
insl
cwtl
mov
dec
mov
dec
xchg
dec
and
rorb
add
lods
push
test
pop
and
xlat
sahf
mov
cld
sub
mov
test
shlb
rol
cmp
mov
xor
cltd
test
dec
movsl
sub
pop
cld
bnd
cwtl
out
xor
jmp
mov
pop
xchg
cs
sbb
outsl
cmpsl
xlat
popf
dec
stc
andl
adc
dec
xor
xor
rclb
repz
mov
in
sub
test
push
mov
xor
mov
push
add
xchg
hlt
jb
jl
adc
rcpps
loop
lea
cmpb
pop
stos
shlb
inc
mov
popf
or
add
sbb
fsubs
xor
hlt
mov
shl
xor
xchg
lock
mov
outsl
xor
sbbl
je
push
dec
jb
mov
add
sub
xchg
cli
xor
mov
cli
je
aad
push
cmp
dec
mov
lcall
aam
mov
fbld
jne
inc
sub
mov
movsb
push
fs
mov
inc
pusha
sahf
rcrb
dec
bnd
popf
jecxz
neg
add
addr16
or
and
je
in
pushl
sbbl
aam
jns
dec
xor
imul
cmp
add
enter
mov
mov
and
call
add
xor
hlt
push
or
movsl
int
imul
popa
dec
mov
jbe
push
inc
mov
cltd
call
push
repz
sbb
add
pop
inc
or
jns
lahf
sbbl
ret
repnz
adc
mov
js
push
stos
cmp
dec
jb
mov
push
es
push
fiaddl
jae
jns
inc
and
sbb
inc
imul
jno
dec
ret
push
xchg
mov
dec
lret
insl
scas
push
cmp
les
sbb
roll
push
mov
sbb
loope
jno
sarl
and
sub
add
js,pt
or
inc
cmc
out
mov
insb
xor
xor
inc
pop
popf
out
jbe
cmp
xchg
imul
inc
lcall
test
fwait
mov
mov
or
or
xchg
fxtract
insb
aaa
lret
push
or
mov
dec
inc
xor
add
jp
xorl
adc
popf
movsl
pop
in
push
pop
adc
sbb
test
mov
in
or
repnz
jo
test
rorb
sbb
or
pop
stos
push
lods
xchg
sub
adc
fisubrs
sbb
stos
mov
xor
int
arpl
jo
test
jae
les
xchg
fisttpl
push
mov
xor
xor
aaa
pushf
add
ja
and
adc
dec
and
popf
scas
leave
loop
adc
fildl
and
xlat
add
mov
in
mov
repnz
jecxz
das
lock
mov
jmp
popf
loopne
mov
fdiv
dec
push
and
sbb
xchg
enter
jl
and
and
mov
mov
in
xlat
or
cmp
loop
xchg
repz
aam
xorl
mov
pop
pop
or
repnz
push
dec
aaa
add
ljmp
and
nop
addr16
add
xchg
int3
sbb
add
adc
fisttps
aaa
test
jge
pop
sbb
push
dec
rcl
adc
pop
adc
test
xchg
mov
dec
and
scas
xlat
stos
lds
push
lret
jge
mov
jle
fcoml
jbe
xchg
xor
scas
shr
bnd
into
scas
cmp
andl
pusha
and
add
or
add
ja
or
mov
fwait
xor
push
sub
fstl
fiadds
jb
fwait
outsl
push
ret
cmpsl
lret
out
cltd
int3
pop
sub
or
jne
dec
cmp
jmp
mov
shlb
ljmp
repz
pushf
dec
pop
movsl
pop
call
fucomip
icebp
clc
sti
mov
out
lds
adc
popa
mov
add
sbbb
or
nop
xlat
dec
pop
dec
arpl
aam
sbb
scas
mov
fldl
xor
movb
jmp
les
xchg
xor
inc
pop
xchg
xchg
xchg
xchg
add
addr16
rcrl
push
adc
mov
fucomi
repnz
lret
ds
mov
in
jge
arpl
rolb
popl
enter
test
xor
call
push
fdivrs
insl
out
fwait
pop
mov
gs
out
push
aad
xchg
mov
jle
or
es
cwtl
dec
or
roll
out
pop
ret
cmp
stc
mov
arpl
int3
lea
mov
in
xrelease
fistps
aaa
rcrb
mov
cmp
adc
popa
push
sbb
fs
test
xchg
xlat
stos
mov
pop
stos
mov
pop
pop
fs
mov
cmpl
stc
dec
data16
mov
and
test
adc
push
inc
inc
push
stos
jge
sub
pop
xchg
or
sub
in
lcall
jnp
xor
pop
test
mov
xor
in
stc
subl
cmp
cwtl
dec
cmp
cwtl
clc
outsl
jmp
jns
dec
and
popa
clc
pop
and
or
push
pop
xchg
jae
cld
pop
cmpsb
fcomp
add
cmp
outsl
push
int3
sbb
clc
cmp
push
pop
sub
push
pop
jb
dec
mov
shrb
nop
lcall
test
mov
rclb
mov
sbb
mov
loop
stc
mov
lock
adc
arpl
sbb
add
ret
push
sbb
in
imulb
and
mov
cmp
aaa
imul
dec
mov
jno
fldcw
loopne
movsl
jno
inc
cmp
cld
dec
das
xchg
lret
mov
es
outsl
xchg
add
sub
jecxz
fisttpll
adc
not
push
inc
in
shr
pop
cld
repnz
int
and
stc
popa
std
push
push
pop
jmp
xor
jge
xchg
iret
xchg
inc
cwtl
inc
icebp
adc
mov
rclb
in
mov
push
gs
mov
mov
std
loopne
xor
push
adc
sub
inc
inc
leave
sbb
or
les
out
rcr
jnp
xchg
out
push
sub
mov
sti
scas
lret
in
repz
add
cmp
mov
cld
sti
mov
es
add
mov
cmp
mov
mov
test
jno
dec
mov
dec
pushf
dec
and
inc
lods
push
and
leave
fiaddl
mov
sahf
pop
stc
dec
cmp
je
fstps
aam
cmp
dec
inc
sbb
ret
fcmovnbe
lcall
xor
xchg
pop
add
sbb
scas
pop
insb
jbe
lods
sahf
jg
fisubl
test
cmp
mov
sti
ret
andl
andl
inc
pop
jecxz
incb
test
dec
cmpsb
mov
fwait
cmp
xchg
and
mov
and
xchg
pop
out
mov
pop
fsubl
xor
mov
int3
pop
sub
pushf
dec
inc
hlt
je
xchg
push
jmp
mov
push
inc
mov
ffree
pop
push
push
cmp
lcall
adc
jne
inc
add
pop
adc
in
stc
mov
hlt
mov
shrl
add
or
aad
inc
sbb
sbbb
popa
fwait
orl
in
sbb
les
leave
mov
cmp
xchg
lahf
pop
in
mov
imul
je
fcomi
cmp
fidivrl
xchg
dec
data16
stos
jne
dec
xchg
cmp
fstpt
pop
scas
jb
push
cli
icebp
xchg
jmp
popf
fstl
jnp
add
scas
ds
fidivrl
scas
add
dec
jl
cmp
js
or
inc
sbb
test
dec
mov
pop
dec
and
pop
xor
bound
mov
cli
jae
push
jne
in
xor
cmp
daa
pop
sahf
fdivs
jecxz
sub
sahf
cmp
push
or
xchg
test
push
adc
xchg
pop
xchg
enter
cmc
xor
and
cmc
pop
adc
cld
icebp
mov
aam
test
jecxz
mov
lret
hlt
mov
adc
arpl
sbb
mov
or
ret
or
cwtl
lret
aad
or
pop
xor
jno
test
fucomp
pop
test
dec
push
dec
adc
dec
sub
movb
mov
fisttpl
pop
xchg
dec
imul
xchg
fcoms
stos
nop
test
inc
cmp
sbbl
mov
inc
imul
jecxz
fwait
popf
xchg
fsubl
xor
test
pop
negl
mov
call
je
add
dec
and
mov
cltd
movsb
jp
cwtl
inc
js
imul
or
cmp
pop
cmp
fldl
xchg
mov
sbb
add
mov
dec
dec
mov
ret
incb
shrb
dec
mov
out
add
int
fsubrs
and
fnsetpm(287
sbb
clc
lds
cld
add
mov
sbb
sbb
push
aas
repnz
ret
jp
cwtl
pmuludq
add
stos
mov
inc
mov
lds
pop
movsb
push
test
scas
mov
shl
fs
out
mov
lods
xchg
lret
or
mov
test
or
lret
cli
inc
sub
mov
test
stc
lods
jle
mov
in
push
test
jmp
pushf
sahf
ret
js
pop
movsl
cs
jmp
xor
fdivrs
adc
inc
sarb
pop
pop
sbb
rcrl
js
sbb
mov
sbb
imul
mov
scas
pop
xor
mov
xlat
pop
imul
mov
int3
pop
sub
push
adc
xchg
xchg
jmp
adc
jmp
cwtl
and
cmc
pop
pop
dec
popa
mov
mov
imul
sar
imul
mov
mov
nop
push
inc
sbb
inc
aas
repnz
push
int
inc
sbb
sarb
rorl
stc
and
sahf
xor
clc
scas
mov
ffree
stc
test
scas
pushf
repz
ljmp
push
sub
cld
jo
and
add
imul
push
cs
cld
xchg
lcall
lret
ret
mov
dec
enter
pop
xorl
popf
scas
leave
loope
in
inc
shlb
pop
je
movsl
idivl
mov
idiv
add
adcl
data16
fists
out
push
mov
ret
push
incb
stos
cmp
sbb
mov
mov
xchg
fwait
inc
insb
aaa
and
scas
icebp
loope
add
mov
in
cmpl
rorb
or
add
stos
xor
int3
bound
lods
call
ja
or
test
sbb
outsl
cltd
xor
aad
dec
pop
xor
clc
mov
xor
or
inc
das
jno
jp
aad
stos
mov
pop
test
push
xor
inc
sbb
stos
aaa
lret
fucomp
insl
cmp
rcrl
nop
sbb
mov
nop
test
push
cmp
lret
add
movsl
and
scas
ja
test
dec
mov
mov
lds
pop
mov
pop
lcall
xchg
cwtl
fists
das
xchg
in
repz
addb
mov
inc
mov
stc
sbb
inc
lahf
pop
inc
jp
cwtl
fildll
leave
aad
jns
shlb
or
cmp
out
inc
lea
inc
popl
enter
dec
imul
jns
mov
push
xchg
mov
sbb
in
and
cmpl
mov
lds
add
jo,pn
pop
xchg
inc
movsl
xchg
sub
pushf
cltd
push
mov
and
mov
sbb
imul
jge
les
push
cli
sub
mov
push
icebp
fisttpl
add
int
lock
or
in
dec
bound
sub
fnsave
les
pop
lcall
inc
sub
sbb
xchg
xchg
sahf
mov
and
push
leave
aad
sarl
lods
xchg
pushf
fists
jl
sub
add
adc
iret
es
mov
out
test
fwait
xor
aam
fsubl
sub
xchg
ds
mov
push
lds
fsubr
rcll
ret
pusha
ds
jecxz
mov
sub
fwait
int
imul
in
jne
test
fbstp
test
ss
cmp
imul
loop
scas
fcmovnu
lcall
js
sahf
rcrb
rcrl
imulb
mov
xlat
sbb
rcrb
sbb
test
push
test
pop
pop
stc
xor
in
dec
decb
add
push
lret
sbb
stos
ret
dec
mov
ret
pop
jns
ret
add
or
push
xchg
push
add
sub
pushf
push
xor
cld
cmpsl
or
xchg
xchg
mov
cld
cli
repz
mov
pop
sub
fcomi
jecxz
popl
xchg
rcr
and
mov
das
adc
insb
std
xchg
fsubl
sti
sub
inc
fnsave
pop
push
ret
xor
repnz
test
fmull
sub
aam
loop
fadds
int3
sub
push
pop
pop
mov
pop
adc
lods
cmp
mov
pop
xchg
clts
loop
mov
pop
shrb
rcrb
mov
mov
lds
out
popa
lcall
and
cltd
lret
lcall
sbb
test
lods
stos
push
cltd
arpl
lds
sbb
jo
and
add
dec
adc
or
dec
mov
jle
pop
lds
jl
sbb
cld
mov
cmp
loop
xchg
fstl
or
cmp
loop
insb
mov
sbb
sub
lods
push
imull
fsubr
push
xchg
insl
mov
popf
rol
jne
pushf
sub
sbbl
imull
cmpl
mov
add
cmp
fadds
add
jl
push
xchg
popa
mov
out
xor
fldl
pop
jmp
clc
sti
inc
lahf
divl
rcrl
inc
fcomip
lcall
test
jno
jl
adc
dec
hlt
dec
adc
aaa
push
aaa
dec
fsubr
stos
test
push
sub
out
int3
repnz
in
mov
cmpsl
xchg
push
nop
jg
xchg
dec
mov
fwait
test
pushf
sti
pop
sub
movsb
push
mov
sbb
push
xor
fnstenv
push
loope
stc
jg
enter
push
xchg
add
aam
and
popl
lret
jp
xchg
push
and
pop
ja
mov
pop
mov
insl
fildll
mov
fdivl
iret
sbb
pusha
out
fdivs
mov
test
fisubs
jmp
fstpt
and
or
ret
jbe
repz
mov
pop
pop
inc
inc
mov
mov
jne
pop
dec
aaa
lds
cwtl
push
mov
cld
or
sbbb
pop
dec
dec
xchg
dec
and
jne
xchg
ss
test
xlat
test
sahf
jne
pop
sbb
test
adc
mov
xor
pushf
dec
pop
mov
mov
inc
movsl
out
xchg
lds
pop
push
xchg
repz
inc
mov
stc
pop
add
push
mov
mov
cmp
bound
aaa
js
js
adc
push
loopne
mov
push
xor
push
cli
xlat
sahf
or
dec
popf
icebp
iret
dec
push
leave
imul
inc
loopne
inc
std
pop
fldcw
cmp
pop
out
enter
int
sub
adc
hlt
jl
jbe
mov
out
mov
adc
inc
dec
sahf
dec
mov
mov
push
sub
jae
mov
pop
divl
iret
pusha
or
jge
inc
inc
mov
ficoms
imul
cmc
loopne
or
sbb
and
adcb
xor
ds
outsl
mov
jle
push
int3
and
shrb
jae
imul
xor
and
movsl
mov
imul
push
xor
push
push
imul
fwait
lods
mov
rcrl
inc
push
icebp
scas
fnstenv
mov
fimuls
add
pop
nop
out
add
arpl
iret
addl
mov
mov
add
add
movsl
mov
xchg
mov
sbb
jo
ret
shr
jb
cmp
bound
sbb
mov
loopne
aad
dec
int
out
dec
test
pop
dec
daa
adc
sbb
pushl
into
loopne
shrb
inc
mov
mov
mov
out
repz
fisttps
pusha
xor
jnp
mov
aaa
mov
pop
dec
mov
pop
xchg
jg
pop
push
xor
int3
addr16
add
add
mov
push
sbb
inc
push
movsb
dec
out
pop
fldt
mov
sub
push
pop
rclb
push
and
fistps
mov
push
jmp
nop
sbb
and
cmpsl
dec
pop
pop
sahf
mov
sub
ret
push
fucomi
loope
repz
dec
xchg
inc
idiv
and
sbb
rcll
dec
fidivl
fucomp
or
push
stc
ret
push
sbb
mov
pop
inc
pop
lods
xlat
sub
mov
lahf
cmpsl
ret
out
cmp
fwait
lea
shlb
cltd
push
hlt
call
pop
mov
push
mov
mov
jmp
ffree
pop
loop
xchg
sti
mov
icebp
out
divb
inc
add
pop
adc
mull
fidivrl
mov
aam
or
sub
hlt
and
mov
sti
xchg
daa
leave
fsubrl
jae
inc
sbb
jg
sbb
stos
xor
inc
inc
mov
mov
fucomp
movsb
cmp
popf
lret
add
sub
inc
sbb
fucomi
lret
test
lret
jno
mov
adc
mov
sbb
ficoms
jle
xor
aas
iret
loop
xchg
mov
inc
aam
fdivrs
fidivrs
jge
sbb
data16
push
mov
push
push
jmp
or
lahf
cmpsl
jge
call
fcomi
pop
popa
dec
mov
cltd
int3
pop
fsubrp
inc
dec
mov
xchg
xor
and
mov
inc
ja
mov
sub
xor
pop
adc
movsl
mov
fcmovnbe
imul
rorl
iret
sbb
mov
mov
xchg
les
add
insb
push
pushf
mov
negb
nop
psadbw
xchg
adc
stos
lods
arpl
xor
push
fists
mov
clc
test
dec
mov
lret
push
sbb
ret
or
mov
or
stos
push
mov
inc
ret
loope
cmpsl
fstl
cld
scas
push
pop
icebp
sbb
xor
les
and
add
jecxz
and
cwtl
clc
dec
shlb
lcall
rcrl
mov
mov
cltd
insl
push
or
enter
outsl
push
int3
aad
jne
dec
inc
adc
sbb
add
add
in
rcll
mov
dec
ret
pop
cmc
sbb
fwait
pop
cmpsl
fisubl
mov
or
repz
ds
jecxz
mov
shlb
mov
add
leave
fcompl
mov
push
sahf
cwtl
icebp
mov
xor
test
or
cmp
cli
movb
test
inc
cmp
nop
cwtl
adc
jno
je
add
mov
mov
mov
or
pop
rcll
pushf
adc
mov
shll
das
ret
or
jle
scas
fdivr
pop
js
cmp
pop
jae
in
sub
push
fisttpl
dec
mov
or
and
repnz
aad
inc
movsb
xlat
jmp
mov
mov
les
cmpsl
fcomi
cmp
cltd
jge
inc
lds
lea
and
adc
enter
mov
add
in
pop
add
sbb
add
pop
adc
inc
stos
shrb
and
mov
sbb
rcrb
adc
inc
cmp
aad
inc
in
fldcw
xchg
sub
popf
fsubl
dec
mov
and
lds
cli
lret
push
in
stos
jae
adc
rcrb
pop
in
jmp
pop
lock
test
inc
cmp
leave
or
dec
roll
test
adc
sub
dec
lds
addb
xchg
sbb
push
je
leave
ret
loope
cmp
xchg
rolb
sub
decl
jnp
inc
push
mov
xchg
sbb
dec
mov
int
incl
outsb
ret
fld1
jb
outsb
add
xchg
fxch
mov
hlt
xchg
das
jns
add
mov
shr
dec
cmpb
pop
lcall
rorb
inc
sahf
pop
and
jo
mov
imul
jb
fdivrl
out
movl
add
sbbl
mov
lock
outsb
adc
sub
jno
xchg
repnz
sub
mov
shr
xor
push
sbb
leave
dec
and
aam
sub
fs
sbb
dec
outsb
test
sub
pop
pop
jne
fwait
lods
movb
lods
inc
inc
mov
test
xchg
or
popf
scas
inc
inc
mov
cmc
arpl
repz
and
and
add
sub
push
test
adc
imul
jmp
or
fisttpll
inc
test
mov
sti
xor
popa
rcrb
mov
int3
xchg
jns
es
je
seto
ret
push
dec
mov
inc
cmpb
sbb
shr
repz
xor
mov
xor
xchg
iret
sbb
lock
movsb
push
aad
fnsave
pop
rorb
insl
nop
ret
inc
les
in
sbb
inc
cmpsb
xchg
adc
test
ja
add
inc
inc
mov
stc
or
ljmp
shll
or
jge
sbb
mov
sbb
orb
xchg
add
pop
jae
mov
fcoml
sbb
push
imul
dec
bound
pop
dec
ljmp
sbb
sar
mov
xchg
or
mov
call
enter
sub
sbb
aad
push
mov
rclb
jp
mov
out
or
dec
cwtl
cmp
lea
or
xor
ds
in
sbb
mov
call
imul
or
aad
jns
jb
int3
add
imul
jne
and
ds
mov
mov
fldenv
mov
mov
rcr
jno
mov
cli
pop
out
call
push
cmp
clc
cmpsl
and
lret
lahf
sbb
sbb
push
cmp
ret
jo
test
dec
sbb
scas
add
mov
leave
xchg
fcmove
xchg
pushf
mov
adc
pop
js
pop
push
adc
gs
mov
mov
mov
popa
testl
add
xchg
push
pop
adc
stc
xor
push
mov
and
push
fisubl
jmp
or
stos
xor
into
fadd
pop
fsubl
jae
cwtl
jno
popf
add
add
add
imul
cltd
outsl
mov
dec
adc
or
or
mov
pop
test
or
mov
or
mov
lock
xchg
adc
jo
aad
dec
rorb
push
adc
stos
repnz
scas
inc
std
stos
dec
sbb
test
dec
lret
fucomp
fwait
lock
clc
test
fwait
loopne
xor
push
cwtl
nop
sbb
loope
fdivl
xchg
adc
add
sub
ljmp
pop
pushf
add
roll
and
mov
cmc
mov
les
cmp
jb
pop
add
add
adc
sub
data16
dec
aas
stc
xor
bswap
push
cmp
in
or
xor
cmp
lret
pop
fdivrs
jnp
int3
jno
xchg
push
adc
inc
sub
loope,pn
jl
dec
mov
sbb
mov
fistps
insl
or
inc
lcall
adc
push
sahf
jecxz
mov
or
clc
cmp
jb
xrelease
add
rcrl
mov
hlt
mov
mov
and
int
sbb
iret
stos
repz
cmp
inc
insl
xlat
hlt
dec
add
sbb
ljmp
clc
mov
pop
adc
or
adc
xchg
lret
add
dec
sbb
push
push
adc
dec
mov
or
or
lahf
mov
fmull
cmp
int3
cmpsl
sbb
jmp
adc
inc
mov
orb
cmpl
int
sub
lea
inc
mov
push
in
or
adc
imul
mov
ds
call
aad
xchg
mov
cltd
daa
xchg
inc
inc
mov
cwtl
fld
es
addr16
add
cmc
mov
pop
cmp
push
and
inc
call
call
mov
into
scas
fsubp
aas
repz
clc
sti
pop
push
rolb
idiv
outsl
inc
sbb
into
mov
ret
mov
mov
jg,pn
pop
and
sti
add
dec
test
frstor
inc
lods
cmpsl
adc
dec
sbb
in
xor
push
call
fs
icebp
or
outsb
adc
nop
std
das
adc
mov
lock
std
xor
scas
push
mov
fcoml
xor
aad
ret
push
cmc
outsl
push
iret
pop
test
sub
jmp
subl
pop
pop
inc
adcl
call
les
lock
xor
ret
lret
mov
inc
fdivr
cmpsb
mov
xabort
mov
xchg
enter
adc
inc
sub
inc
cmpsb
push
shr
lret
sbbl
inc
shll
xor
sub
call
pop
sbb
ljmp
xchg
inc
mov
xchg
mov
sub
cmp
std
rolb
lea
xor
rorl
repnz
fwait
test
cwtl
lret
inc
sub
xchg
cmp
mov
push
inc
cmpsl
test
push
xchg
cmp
jae
aas
lock
fmul
arpl
dec
pop
sbb
cmp
lret
or
lods
mov
push
sub
lock
enter
sbb
cltd
fmull
cmp
cmc
popa
mov
enter
cld
mov
aas
lret
sub
js
push
cwtl
add
jo
sbb
sbb
adc
pop
mov
aas
push
mov
add
jno
adc
mov
sub
enter
mov
cmp
call
xchg
mov
outsl
jle
mov
jge
pop
xor
mov
pop
pop
pop
dec
inc
enter
ljmp
dec
stos
jb
push
jne
insl
sub
imul
popf
xchg
pop
loopne
cld
xor
ds
mov
in
lret
in
inc
rcll
push
add
inc
push
stos
push
call
inc
ljmp
dec
push
xchg
xlat
stos
mov
pop
mov
push
adc
sub
cwtl
pop
mov
popf
jmpw
fistpll
push
sahf
stos
adcb
dec
out
and
push
add
enter
fimuls
adc
nop
fwait
sbb
jge
cmp
ret
out
lahf
roll
test
ss
lock
andl
insb
adc
mov
rcll
pop
xchg
jae
fadds
data16
sbb
scas
mov
movsb
cs
dec
outsb
lahf
scas
pop
ds
xorl
mov
sbb
adc
std
sbb
xchg
and
mov
cwtl
xchg
sub
jbe
int
jg
pop
adc
call
pop
loopne
dec
scas
iret
fisttps
mov
into
add
lock
push
xor
push
mov
or
add
insb
push
pushf
mov
fbstp
cwtl
pmuludq
js
mov
lret
pop
and
fs
sbb
test
lcall
or
pop
fnstenv
jno
shll
dec
mov
daa
or
lcall
lcall
pop
cmp
lods
cmp
mov
rcrb
std
mov
pushf
popf
into
push
fwait
leave
insl
jne
and
adc
adc
ffreep
mov
pop
int3
adc
cld
fbld
sbb
jb
cwtl
jmpw
or
sbb
xor
enter
mov
dec
sbb
enter
rcll
ret
add
sbb
fwait
icebp
mov
xor
loop
inc
imul
ret
mov
pop
mov
call
mov
mov
cwtl
test
iret
fwait
cmp
inc
hlt
pop
divb
jl
shl
int3
pop
out
mov
ret
lds
popa
fwait
aad
jnp
pop
sub
mov
and
aam
push
mov
sbb
xor
lret
xor
pop
fnstenv
jno
cld
cmp
outsb
push
loop
daa
or
cmpl
ljmp
adc
call
lods
jle
cltd
shll
xchg
fcoml
repz
jp
pop
loope
jge
subl
or
rcr
cmp
or
test
call
fstps
xchg
fnstsw
mov
mov
int
inc
xor
out
jne
repz
cmp
es
in
test
enter
cmc
enter
xchg
push
adc
mov
mov
jae,pt
shr
repz
sbb
mov
sub
cld
aas
in
and
icebp
mov
cli
mov
cwtl
mov
sbb
stc
pop
into
out
leave
ja
loopne
lret
movsl
mov
ja
and
add
jmp
hlt
test
imul
clc
stc
fs
in
xor
out
lret
shlb
sbb
xor
pop
aad
imul
sbb
sbb
shrb
jns
push
pushf
add
xor
in
cwtl
and
push
sar
add
popl
addr16
rcll
imul
jecxz
xor
inc
insl
out
imul
in
shll
jg
xlat
adc
mov
es
aam
sbb
lcall
test
xor
cmp
popf
fistl
adcb
pop
add
lods
and
adc
mov
ret
sti
jns
inc
sbb
add
mov
gs
lcall
cld
ror
sarb
imul
dec
or
stos
push
insb
rcll
and
mov
popa
cs
pop
pop
es
nop
les
rolb
and
nop
xchg
mov
scas
fs
lcall
pop
jno
lds
pop
and
jmp
mov
popf
fists
pop
mov
stc
and
sbb
mov
mov
test
insl
hlt
dec
ficoml
dec
aam
adcl
test
rcl
scas
sub
and
fcmove
lods
stos
stos
call
xchg
inc
lods
icebp
bound
mov
mov
popa
mov
push
jb
faddp
test
mov
sbbl
sub
int3
inc
pop
add
addr16
sbb
mov
pusha
xor
mov
inc
or
fs
mov
or
xor
ret
mov
push
out
and
dec
and
jb
stos
pop
out
imul
sub
lods
cmpsb
imul
xchg
fucom
jmp
pop
xor
inc
mov
mov
adc
sahf
popa
movsl
adc
jl
fistl
cmpsb
dec
movsb
aad
xor
xor
cltd
idivb
addr16
dec
scas
movsl
fdivl
push
xchg
add
clc
mov
adc
mov
xchg
adc
data16
push
cltd
and
xor
inc
jge
imul
stos
cmp
call
sti
xor
jns
mov
fidivrs
dec
push
or
cmpsb
gs
mov
sbb
cmpsl
pop
push
int3
sbb
in
xor
mov
repz
sti
pop
push
ret
inc
jnp
xchg
sbbb
mov
jo
push
adc
test
inc
test
and
iret
xor
mov
and
jns
lds
mov
fwait
pop
jnp
mov
js
in
push
pushf
pop
or
jo
xchg
adc
inc
inc
movsl
sbb
sbbb
jns
mov
sarl
jp
sub
jno
cmc
mov
fcompl
sti
and
jmp
loop
xchg
adc
nop/reserved
jns
sub
pop
icebp
addr16
aam
sti
stc
xorb
adcl
imul
rcr
das
pop
and
les
xchg
xchg
lahf
out
int3
and
cmp
sbb
cmpl
mov
push
inc
fwait
lret
insl
or
leave
jae
add
fcompl
cwtl
movsl
pop
and
daa
cld
rol
pop
cmp
pop
push
jg
js
xor
lock
or
xor
hlt
daa
push
or
add
add
jg
stos
mov
in
sub
add
sbb
inc
mov
addr16
int3
jmp
push
jp
jmp
adc
ret
mov
xchg
add
mov
mov
test
mov
fcoml
jbe
cmp
xor
adc
pusha
push
jg
pushf
jne
jle
fimuls
inc
sarb
js
fistl
push
xorl
ljmp
fcos
xchg
xchg
pop
dec
loope
adc
xchg
xchg
incb
movsl
cli
xor
rclb
gs
out
cmovge
popf
xchg
mov
stc
or
cmpsb
aam
mov
lret
sub
cltd
add
or
jns
les
jns
pop
mov
test
fwait
mov
jmp
push
pmaxsw
adc
lds
mov
add
ret
mov
sbbl
test
push
test
cwtl
mov
aaa
stos
xchg
mov
popf
mov
mov
mov
jno
inc
repz
bnd
add
dec
sub
inc
stos
imul
cmp
cmp
or
dec
push
fwait
test
cmp
popf
scas
jg
jmp
add
addl
into
lret
add
mov
adc
rcll
add
xor
mov
insl
xchg
adc
enter
ret
mov
jmp
lret
jge
out
gs
sub
sbb
subl
jmp
lret
insl
sub
ret
fiadds
mov
jns
pop
test
cmp
mov
or
xchg
lcall
mov
lcall
sbb
inc
and
iret
mov
inc
cmc
dec
and
mov
test
fmull
lret
pusha
mov
scas
movl
into
scas
je
mov
sub
adc
or
push
sti
jb
dec
cmp
adc
gs
jl
add
movsb
or
pop
cmpsl
pop
fs
lods
loopne
cmpsl
push
adc
mov
in
jno
rclb
andl
inc
xor
xchg
std
pop
sbb
nop
loope
fwait
xor
sbb
sub
cmpsb
fidivl
test
rcrl
cmpsb
sahf
lock
fwait
insl
ds
aad
jb
out
sub
je
or
and
cli
mov
dec
dec
mov
cltd
sahf
mov
mov
fsubp
jp
cmc
and
add
jecxz
pop
mov
in
ljmp
mov
jae
mov
clc
add
mov
orb
mov
testb
in
fadd
jg
shll
fidivrl
mov
inc
push
add
mov
xchg
repz
ret
pop
sub
test
roll
in
dec
imul
fcmovne
xchg
fwait
adc
loopne
cmp
jns
inc
leave
or
or
dec
push
fwait
test
cmp
popf
scas
jg
jmp
and
push
mov
sub
add
inc
mov
rcll
add
push
orl
pop
cli
xor
cmpsl
ret
mov
jmp
lret
jge
out
gs
sub
sbb
jb
inc
mov
inc
loope
mov
sub
xchg
repz
movsb
mov
fsubr
fbld
push
or
std
fists
iret
int3
adc
movsl
ret
aaa
lods
inc
add
mov
mov
xchg
dec
mov
pushf
sbbb
jl
cli
mov
pop
xchg
add
pop
clc
mov
in
and
push
dec
push
dec
push
dec
adc
sbb
test
int
bound
cld
repz
dec
add
mov
subl
leave
xchg
fwait
adc
loopne
cmp
jns
inc
rorl
pusha
inc
mov
fmull
jnp
dec
push
dec
incl
enter
adcl
mov
adcl
dec
sti
pop
sub
dec
and
pop
inc
stc
xor
clc
sbb
ret
inc
mov
dec
test
gs
fwait
mov
mov
clc
cmp
iret
outsb
out
loop
test
push
adc
hlt
add
dec
cltd
push
adc
xchg
cmp
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
dec
dec
js
sti
mov
imul
arpl
addl
and
mov
xchg
push
pop
iret
sbb
rcrb
adc
mov
mov
inc
lahf
push
lock
or
lret
fucom
cli
mov
cld
mov
jb
stc
mov
pop
sub
les
xchg
rcl
movsb
jae
dec
sbb
sub
mov
mov
mov
or
popf
adc
pop
push
sahf
aam
xor
jno
dec
sti
icebp
popa
or
add
dec
shl
rorb
or
mov
sbb
pop
xor
cltd
sbb
fsubl
stos
cmp
inc
jb
pop
mov
mov
and
mov
enter
int3
push
push
xchg
stos
outsl
sub
pop
xor
aas
mov
pop
push
mov
les
dec
mov
arpl
inc
fbstp
mov
jecxz
push
xchg
mov
jbe
mov
in
js
pop
adc
mov
fs
out
pushf
jecxz
sbb
mov
test
cwtl
xor
in
fcmovne
mov
jge
sti
mov
rorl
sbb
shrb
dec
pop
lock
dec
sahf
adc
jae
and
shrl
cmpsl
push
gs
cmc
mov
enter
adcl
mov
adcl
or
inc
push
lret
pusha
xor
outsb
test
mov
std
inc
jp
movsb
addl
fisubs
push
adc
push
ret
sbb
sbb
mov
sbb
sbb
es
push
xchg
jae
pop
rcl
adc
xor
fisttps
push
xchg
mov
pop
loopne
mov
sbb
lret
lahf
mov
mov
jae
cmpsl
sbbb
sbb
jnp
repnz
xchg
jo
scas
mov
sbbb
jne
les
sbb
in
shlb
xchg
dec
sbb
mov
lcall
lret
rcr
jae
add
inc
add
push
pop
push
stos
rcrb
jne
inc
pop
mov
mov
lods
jle
mov
dec
xchg
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
mov
popa
test
add
mov
sbb
add
xor
mov
insl
xchg
adc
or
rolb
call
push
ret
mov
cmpsb
lods
pop
add
int
sbb
push
sub
mov
cmc
clc
dec
mov
int
pop
ja
mov
adc
divb
ljmp
lcall
setae
jecxz
test
pushf
jmp
out
cltd
sub
dec
lret
ret
sbb
dec
mov
scas
inc
in
xor
test
jecxz
cli
push
dec
sbb
xlat
or
push
jge
leave
test
out
cli
sbb
or
dec
popf
ljmp
pop
sbb
stos
xchg
sbb
test
pop
pop
outsb
stos
push
fisttpll
push
mov
xor
jecxz
fwait
pushf
imul
lret
dec
inc
loopne
sbb
loop
inc
mov
pop
jb
add
loopne
adc
mov
test
xchg
cwtl
sbb
rcll
in
in
xchg
sbb
push
inc
xchg
adc
enter
ret
mov
jmp
lret
gs
movsb
add
xchg
dec
xorl
mov
loope
mov
sub
fld
cmp
sbb
out
add
cmp
cmp
jne
push
adc
xor
dec
sbb
jns
mov
pushf
push
lock
pop
insl
dec
or
sub
nop
jg
repnz
aas
shl
imulb
js
bound
and
stc
push
scas
xchg
mov
cli
mov
lcall
dec
rcr
jae
add
nop
xor
add
xchg
or
jecxz
mov
leave
xchg
fwait
adc
loopne
cmp
mov
mov
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
inc
clc
jb
mov
rol
adc
lret
push
xor
add
push
stos
icebp
mov
stos
cmp
jo
cmp
cmpsl
mov
sbb
outsb
inc
pop
lock
je
cmp
imul
mov
ret
into
shll
push
jne
les
inc
cmp
sbb
cmp
test
sbb
lds
add
mov
int3
sbbl
mov
add
testb
push
lock
imul
push
xor
stos
jecxz
sbb
mov
sar
xor
sti
add
shrb
mov
sbb
sub
dec
push
mov
sbb
inc
xchg
fsts
test
lods
inc
pop
insb
mov
jg
xchg
cld
loop
cmp
jmp
mov
andl
push
out
aas
sbb
pop
jb
out
mov
pop
xor
fiaddl
ret
fstpt
push
fsubs
stos
cmp
jb
pop
mov
mov
shlb
sbbl
add
mov
rol
popl
adc
fsts
ljmp
mov
lcall
setae
jecxz
sbbl
or
mov
cltd
xor
std
imul
pop
leave
fsubl
pmuludq
cli
pop
dec
sbb
xlat
or
mov
test
leave
test
cli
mov
dec
pop
cs
add
fbstp
inc
fmuls
push
cmp
jge
mov
xchg
push
sbb
sub
or
adc
xchg
fsts
icebp
push
outsl
jbe
lods
arpl
pusha
mov
cld
loop
xor
sbb
push
xchg
cwtl
add
je
dec
mov
mov
fwait
jmp
loope
jp
imul
or
jns
enter
cmpsb
nop
and
in
pop
fsubl
pop
insl
push
adc
shr
jecxz
enter
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
loopne
addl
sti
fstl
dec
mov
mov
lock
loop
cmp
push
sarb
imul
ror
pop
movsb
fisubl
ja
inc
push
lret
fstpt
xchg
fbld
pop
aaa
hlt
repz
ljmp
inc
cmp
adc
xchg
fiadds
lcall
ja
lds
ljmp
cmp
fstl
pop
rclb
cs
scas
std
leave
loope
mov
dec
ja
into
loope
inc
or
add
shlb
add
jge
jb
addr16
or
sbb
xchg
mov
mov
mov
and
movsl
adc
xorl
sti
xor
sti
mov
or
sub
inc
ds
pop
pop
mov
shr
and
jle
mov
das
cmp
xor
pop
cmp
jae
into
inc
mov
int
pop
pop
subl
lahf
inc
cmp
mov
jecxz
push
xchg
mov
jbe
pushf
mul
rcrl
cmpsl
mov
cli
pop
and
iret
inc
sbb
xor
leave
sbb
mov
pop
rolb
xchg
jmp
jno
xchg
lahf
pop
arpl
test
int
sbb
stos
xchg
or
inc
mov
push
outsb
stos
push
ffree
in
mov
xor
add
test
scas
mov
lahf
jecxz
fdiv
and
or
fwait
add
mov
mov
test
sbb
and
mov
mul
mov
std
inc
jp
loopne
sbb
cmpsb
jnp
enter
jg
mov
sbb
outsb
inc
xor
mov
je
cmp
imul
lea
mov
ret
into
ret
mov
push
jne
pop
add
pop
mov
loopne
pop
daa
dec
xchg
jecxz
add
in
clc
outsl
cltd
sub
dec
lret
ret
sbb
dec
xlat
xchg
repnz
fwait
dec
ja
lret
inc
sub
jne
adc
stc
pop
test
push
pop
inc
cmc
sbb
push
test
outsl
cmp
xchg
orl
xchg
dec
bound
push
inc
lcall
or
testb
jae
lods
pusha
arpl
cli
jecxz
fwait
cmpsb
enter
pusha
jle
cs
icebp
leave
es
into
scas
push
fdivl
mov
inc
adc
add
sbb
mov
cmpsb
call
les
xchg
sub
xor
imul
xchg
push
pop
and
xchg
insl
push
inc
push
dec
pusha
sbb
out
call
pushf
add
lcall
or
sub
mov
push
dec
mov
ret
or
cmp
jne
pop
divb
ljmp
lcall
dec
xchg
jecxz
jnp
pushf
divl
jmp
enter
add
std
test
mov
fs
out
sub
sub
inc
xchg
cs
test
cwtl
xor
mov
lcall
lret
rcr
jae
add
pop
dec
and
les
xchg
fisttpl
sahf
adc
xor
ret
movsb
test
fs
lods
loopne
cmpsl
push
cmc
mov
enter
inc
shlb
or
sbb
or
lret
js
mov
test
mov
std
inc
jp
or
inc
sbb
cmpsb
gs
lods
int
dec
bound
cmpb
je
inc
into
xor
push
xor
mov
cmc
clc
pop
mov
jmp
gs
fiadds
aam
cmc
fistl
dec
pop
out
cmp
mov
clc
sti
pop
es
rcr
repz
js
ret
mov
mov
cmpb
lret
mov
pushf
inc
stos
pushf
adc
mov
stos
add
rorl
lret
xor
pop
int3
stc
mov
adc
lahf
fisttpll
test
or
push
ret
lock
lcall
gs
std
sub
mov
pop
pusha
xchg
out
mov
stos
jnp
jg
scas
pushl
jmp
out
popa
adc
add
sbb
xor
mov
rol
sub
fmuls
in
xchg
add
mov
addr16
mov
and
std
bound
pop
pop
in
out
cmp
mov
or
rcll
int3
dec
or
sub
mov
fsubr
push
and
pop
mov
lret
in
mov
call
fucomip
hlt
cmp
fists
iret
int3
mov
std
add
mov
sbb
sub
mov
adc
les
dec
dec
leave
js
lret
movsl
ret
insb
test
pop
inc
incl
adc
push
pop
lret
xchg
sub
scas
mov
sti
lret
fbstp
mov
cmc
in
mov
pop
sub
les
xchg
adc
sub
fcmovne
xchg
fwait
adc
sub
and
push
mov
pop
pusha
xchg
shlb
lret
or
jnp
jg
scas
loope
pusha
clc
sbb
popa
or
mov
push
addl
or
sub
cmp
test
push
xchg
imul
cmpsl
les
dec
adc
or
daa
fwait
psubw
call
lahf
into
fisubs
daa
loopne
ljmp
xchg
inc
adcl
cmp
mov
mov
repz
or
dec
popa
pop
mov
inc
mov
test
fwait
lahf
aas
int3
les
negl
mov
add
sub
mov
repnz
dec
mov
sbb
iret
push
notl
sbb
test
push
in
xor
rcll
ljmp
add
sub
test
inc
scas
ja
les
ja
lds
ljmp
sbb
lods
pop
xchg
aaa
pop
mov
mov
es
fadd
fidivs
arpl
add
push
inc
mov
test
orl
dec
and
sbb
jl
cmp
inc
and
cmpsb
pop
repz
mov
xor
fnsave
xchg
cli
sbb
pop
and
mov
dec
dec
mov
inc
sbbl
cmp
mov
mov
repz
lds
cmp
sbb
adc
jno
mov
mov
aas
in
jnp
mov
adc
ss
imul
lock
rcrb
cli
aad
mov
ja
repz
sbb
mov
add
pop
popf
in
nop
mov
cli
shl
ljmp
sbb
xor
cmp
inc
jae
ja
sub
add
leave
mov
mov
mov
mov
fwait
popf
adc
or
jg
leave
push
nop
mov
ret
sub
pop
testl
mov
jb
addr16
adc
mov
xchg
mov
mov
mov
and
movsl
pop
mov
cmc
cmp
or
cmp
fsubl
xor
push
and
addl
mov
sti
mov
sub
mov
sbb
daa
cmc
mov
leave
orl
stc
icebp
iret
inc
mov
fmul
jp
aas
in
mov
jnp
mov
adc
ss
xchg
or
mov
fwait
lock
leave
rcrb
cli
shlb
cmc
jb
mov
inc
dec
scas
mov
add
cli
mov
fistpll
stos
add
arpl
lds
sbb
in
pop
stc
daa
das
or
nop
ficoml
lcall
jge
imul
jecxz
fwait
out
enter
jle
lods
pop
icebp
leave
es
mov
fists
fisttpl
mov
dec
xchg
out
mov
mov
add
sbb
mov
inc
xchg
jmp
js
test
mov
inc
popf
push
jo
or
sti
xor
cmpsl
sti
mov
fdiv
dec
push
and
xor
xchg
push
or
sbbb
adc
dec
mov
cmp
ret
fimuls
les
iret
mov
arpl
inc
fistl
sbb
mov
cltd
xor
std
dec
dec
jbe
int
repz
hlt
or
xor
test
jecxz
sbb
incl
push
test
cwtl
mov
aaa
stos
push
in
loop
xor
je
std
fbstp
push
in
pop
in
mov
pop
sub
les
push
inc
push
stos
loopne
dec
test
jne
test
pop
mov
inc
jns
inc
js
mov
fmull
pop
scas
dec
push
xchg
loop
iret
movsb
in
inc
fwait
imul
xchg
or
mov
rorl
dec
aam
adc
lahf
adc
jae
call
cli
xor
imul
xlat
xchg
mov
out
adc
adc
sahf
inc
in
mov
ljmp
cmp
cmp
repz
push
mov
and
mov
daa
out
into
mov
xor
jp
add
cmp
out
insb
and
mov
popf
push
push
int
sbb
iret
jp
nop
loop
les
sbb
test
push
in
dec
sbb
jmp
frstor
fisubl
mov
or
or
les
loopne
testl
inc
sbbb
xchg
sbb
add
aas
cltd
lods
jle
leave
shll
xor
pop
repz
jno
xor
sti
and
dec
adc
inc
mov
fdivs
sub
adc
sub
push
xor
imul
cmpsb
enter
lret
clc
xor
mov
jge
out
xchg
sub
sbb
xchg
stos
call
enter
mov
add
insl
sub
ret
dec
add
lahf
dec
pop
test
cmp
mov
or
cmp
pusha
sar
repz
mov
leave
sbb
add
mov
and
rcrb
cli
push
xor
dec
out
mov
add
sahf
popf
in
xchg
out
and
shll
ljmp
push
lcall
int3
push
xchg
add
mov
adc
xchg
fsts
test
lods
arpl
pusha
mov
cld
loop
sbb
out
and
xor
insl
fmuls
add
cwtl
rcrl
xchg
iret
pusha
sub
adc
movsb
pop
jae
xchg
cmpsb
aad
pop
leave
xchg
xor
cmpsl
sti
fsubs
lahf
pop
addr16
out
cmp
lret
sub
dec
aaa
xchg
xchg
jmp
cmpsb
inc
imul
fsubp
movsl
mov
fisttpll
pusha
lock
dec
call
push
aaa
push
iret
int3
xlat
aaa
cld
add
mov
sbb
and
push
pop
adc
dec
inc
sbb
leave
js
lret
movsl
ret
insb
test
fiaddl
lahf
inc
stc
cmpsl
movsb
mov
sbb
mov
popf
inc
ja
push
dec
sbb
punpckhwd
cmpsl
cmpsl
xchg
data16
lcall
sbb
and
rcl
lahf
pushf
xchg
sbb
int3
add
jnp
xchg
sub
mov
fists
fildl
mov
dec
xchg
inc
out
mov
cmpsl
mov
xor
rol
xor
mov
dec
jmp
jb
or
ret
sti
xor
fsubl
cmp
mov
or
rcll
int3
dec
xor
sub
mov
fsubr
push
and
hlt
and
add
jl
dec
add
repnz
cmp
test
or
push
add
mov
in
sbbl
mov
add
testb
iret
fwait
inc
daa
sbb
clc
hlt
push
stos
xchg
pop
insb
outsl
mov
xchg
jmp
and
lret
pop
imul
inc
les
lcall
mov
mov
pop
mov
sub
cltd
outsl
pop
mov
lods
jno
pusha
mov
scas
mov
lahf
fists
fcmovne
pop
shl
std
rcrl
or
push
mov
in
mov
sbb
popa
rcr
mov
out
loope
fwait
xor
push
sub
and
sub
fisubl
cmp
fnsave
out
sbb
xor
sbb
dec
add
fwait
dec
dec
mov
sbb
cmp
hlt
imul
jle
fwait
pop
loop
xor
mov
shlb
lahf
inc
fbstp
mov
jecxz
push
xchg
mov
jbe
add
mov
ja
imul
scas
add
and
mov
test
push
dec
sbb
lahf
sub
xchg
in
sti
dec
into
sahf
je
mov
sub
adc
sub
sub
les
ja
lds
or
sarl
repnz
jecxz
sti
add
dec
pushw
pusha
mov
ficoms
fwait
lods
and
xor
icebp
xor
push
push
mov
adc
or
inc
mov
sbb
ffreep
push
adc
mov
xchg
pop
xchg
fs
sbb
cmpsb
gs
inc
bound
outsl
or
or
and
fimuls
cmc
cmp
fwait
or
int
gs
das
in
cmc
hlt
imul
adc
pop
divb
cli
mov
jno
mov
repz
pop
and
addb
mov
sub
xor
imul
xor
mov
mull
imul
cli
cmpsl
ss
sbb
mov
test
shll
xchg
fcoms
sbb
sub
xchg
add
mov
fwait
adc
sub
imul
cmp
pop
pusha
sub
xchg
andl
loop
xchg
loop
iret
movsb
sub
fwait
imul
js
or
cli
bound
adc
sbb
xchg
lock
mov
cltd
xor
addb
pop
insb
push
lahf
outsl
aas
ret
bound
in
stos
jae
and
mov
ror
xchg
or
lea
lret
lret
cltd
fimuls
jb
std
mov
shrb
movsl
imul
fucomip
hlt
cmp
fists
iret
int3
shll
out
repnz
sbb
cmp
push
pop
adc
insl
movsl
sbb
jbe
ljmp
push
js
scas
mov
inc
mov
stc
mov
push
in
stos
imul
xchg
frstor
fisubrl
or
mov
push
sbb
cli
xchg
fisttps
sub
lret
xor
mov
or
add
pop
jo
cmpsl
and
leave
in
loope
inc
or
movb
shlb
add
jge
xchg
sub
mov
movsb
fs
add
mov
int3
xchg
les
pop
mov
gs
shrb
push
jno
jecxz
adc
cmp
push
adc
mov
inc
lods
rcl
adc
pop
fldt
pop
shl
pop
and
arpl
mov
fisubs
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
push
and
test
aas
and
mov
inc
stos
cwtl
adc
mov
sbb
dec
sbb
lahf
sub
mov
scas
movl
sar
loope
xchg
lret
les
sbb
test
dec
xchg
mov
scas
testl
inc
jb
lods
ret
sbb
hlt
push
push
pushf
rorb
mov
push
data16
leave
in
loope
inc
add
add
fsubrs
test
mov
jge
dec
pushl
sbb
fisubl
nop
sbb
push
push
mov
cmpsl
gs
fdivs
mov
and
enter
rcll
dec
or
movsl
movsl
inc
xchg
or
cltd
sahf
ret
bound
int
call
int
aas
lea
mov
shll
jp
aas
in
mov
lcall
rcrb
pushf
sub
mov
out
sbb
inc
movsl
mov
mov
xor
insb
push
test
mov
sbb
int
dec
cmp
movl
sbb
jno
test
xchg
sub
add
lret
stos
xchg
fimull
fisubrl
pop
andb
or
mov
xchg
mov
jecxz
fwait
sahf
xchg
fwait
inc
ficoml
mov
push
popa
xchg
cwtl
add
cmp
loope
fsubs
adc
aam
out
data16
mov
test
in
xchg
jmp
ret
xchg
and
test
cmpsb
jnp
mov
jecxz
adc
lahf
orb
mov
insb
push
adc
enter
mov
add
insl
sub
xor
mov
lock
call
aad
ja
push
dec
push
dec
adc
sti
mov
imul
add
fidivl
add
mov
divb
nop
jecxz
xchg
dec
and
ror
sbb
scas
push
cli
mov
pop
dec
popa
mov
xchg
jmp
cmpsl
aaa
xchg
in
cmc
in
mov
pop
sub
les
xchg
add
pop
imul
pop
ja
or
or
shll
cmpsl
push
fucomi
cmc
mov
fdiv
inc
mov
jmp
adc
add
sbb
clc
jb
mov
rol
sub
fmuls
cmpsb
cmpsl
shrb
xrelease
xchg
pop
inc
cmp
fwait
ret
hlt
int
jge
pop
and
mov
mov
int
sub
inc
pop
xchg
inc
xchg
imul
fidivs
sbb
or
jo
mov
lods
negl
into
adc
lods
sbb
xchg
negl
iret
or
mov
cltd
addb
mov
clc
lea
outsl
in
inc
test
mov
ror
sbb
mov
pop
shlb
dec
das
or
scas
sbb
fisubl
or
mov
push
sbb
push
pop
mov
inc
lcall
jle
mov
lcall
rorb
cmp
leave
push
nop
sbb
cli
stc
and
cs
je
sub
jb
in
dec
shlb
sbb
pop
xor
pop
mov
jmp
insl
fstpt
mov
enter
push
arpl
sbbb
add
dec
cltd
push
adc
stos
mov
fwait
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
jne
push
adc
jle
dec
sbb
jns
mov
add
mov
jno
sbb
mov
pushf
ret
xor
inc
inc
sbb
push
jmp
lds
push
cld
mov
mov
inc
or
cmpsl
mov
fimull
mov
jae
add
cmp
and
daa
sbb
lods
cmp
mov
or
lods
jecxz
dec
into
push
push
pushf
rorb
mov
push
jg
leave
push
nop
sbb
inc
xchg
cli
stc
and
sbb
popa
inc
sbb
mov
dec
mov
jb
addr16
or
mov
xchg
mov
mov
mov
and
leave
xchg
sub
cmpsl
sti
dec
popa
jge
pop
test
andl
inc
dec
adc
aam
sub
sbb
aaa
fidivs
int3
ret
addb
pop
clc
aaa
call
pop
call
fucomip
hlt
cmp
fists
iret
int3
sbb
jecxz
mov
ret
mov
adc
lret
cmp
xchg
jo
out
dec
sbbb
jne
clc
jmp
sahf
inc
in
std
test
and
inc
push
rcr
dec
sbb
punpckhwd
cmpsl
xchg
xchg
cs
dec
gs
add
mov
mov
leave
xchg
fwait
adc
loopne
cmp
add
rorl
cmp
or
dec
push
dec
add
pushf
in
add
enter
mov
rclb
andl
jns
dec
nop
lock
mov
cltd
xor
mov
mov
mov
cltd
inc
pusha
push
sbb
ret
sbb
cmp
ds
mov
xchg
lahf
aad
dec
cmpb
or
lret
add
mov
aad
ret
adc
adc
in
mov
jns
into
jg
jg
sahf
repz
pop
and
test
lock
movsb
mov
sbb
leave
xchg
xchg
lret
movsl
ret
insb
test
rcl
stos
fcmovbe
int
sbb
cmc
fstpt
stos
inc
mov
scas
xchg
frstor
fisubl
jno
inc
fmuls
fmuls
jp
or
les
xchg
push
add
leave
sbb
mov
cmp
popf
adc
into
or
leave
push
nop
mov
ret
adc
jnp
xchg
fdivs
adc
cwtl
and
xor
js
push
xchg
adc
rcrb
movsb
inc
add
ljmp
fnstcw
mov
mov
cwtl
push
orb
mov
lret
cmpl
sub
aas
stos
shrl
mov
lret
imul
inc
loope
repz
cmp
lock
rcrb
mov
adc
lret
cmp
xchg
jo
addr16
sbbb
jne
les
push
xchg
stc
aad
lahf
push
lock
or
cli
mov
cld
mov
popf
arpl
add
xchg
dec
bound
push
mov
popf
lock
pop
stos
jne
vsubss
pusha
fwait
xchg
fwait
mov
lds
frstor
jns
into
scas
push
fmull
jo
arpl
add
add
mov
cmpsb
call
les
xchg
sub
xor
or
push
fsubs
stos
cmp
jb
pop
mov
jne
jecxz
out
mov
jp
dec
mov
jecxz
sbb
sub
mov
fsubr
push
and
mov
add
dec
aad
js
repz
dec
call
dec
out
xor
fists
int3
ret
aaa
repz
mov
sbb
add
mov
adc
mov
leave
js
lret
movsl
ret
insb
test
ror
stos
fcmovbe
int
push
lret
xchg
mov
popf
stos
mov
jae
mov
mov
pop
or
stos
push
hlt
sbb
test
mov
inc
lret
rcl
cltd
pushf
xchg
sbb
and
scas
dec
push
lds
adc
jmp
mov
add
mov
add
inc
mov
or
add
push
xchg
mov
insl
xchg
adc
enter
ret
mov
jmp
lret
jge
out
gs
sub
sbb
mov
inc
mov
inc
loope
mov
sub
ret
ret
lcall
mov
movsl
sti
and
imul
lahf
lret
in
rol
dec
mov
hlt
mov
pop
dec
pop
or
sub
nop
jg
repnz
icebp
mov
cmpl
mov
inc
mov
stc
sbb
push
icebp
stos
or
cli
mov
cld
mov
int
cmp
xchg
jecxz
xchg
add
fdivl
sub
lcall
or
testb
jae
lods
pusha
roll
aam
adc
mov
cs
icebp
leave
es
fucom
jbe
pushf
repnz
fiaddl
sbb
mov
mov
inc
xor
dec
mov
fnstenv
dec
aam
sbb
sbbl
mov
or
jns
ret
xchg
push
fldenv
pop
jecxz
adc
pusha
shl
enter
or
sub
mov
xor
ss
orl
pop
movsl
pop
in
call
rclb
out
sub
jecxz
repz
pop
divl
loope
enter
add
std
dec
dec
dec
adc
lret
mov
add
sbbl
xor
jb
mov
inc
mov
arpl
jge
cli
fimull
cmp
xor
nop
cwtl
nop
sbb
imul
sub
test
xchg
stos
xchg
rorl
xchg
out
leave
inc
mov
mov
mov
sbb
popf
adc
xor
dec
loope
bnd
lods
scas
fbstp
test
xchg
sbb
xor
andl
addr16
mov
and
inc
or
xchg
fsubl
and
std
bound
pop
push
sti
mov
ret
mov
int3
inc
cmp
and
xchg
xchg
fwait
or
cmp
das
in
jmp
loop
pop
pop
mov
shr
xor
pop
mov
clc
sti
pop
es
rcr
repz
mov
sbb
add
mov
and
iret
xor
adc
test
mov
push
mov
ret
mov
mov
sub
inc
out
arpl
test
lret
inc
or
test
jge
pop
sahf
fistl
fiaddl
jae
xor
lods
jge
shrl
gs
std
pop
inc
mov
scas
push
fmull
jo
arpl
add
or
mov
rorl
mov
add
mulb
push
stos
icebp
lea
stos
cmp
jb
pop
mov
mov
shlb
sbbl
add
mov
rol
popl
adc
fsts
imul
lods
pop
call
mov
in
ljmp
mov
jae
cmpsl
sbbb
sbb
sahf
test
ret
test
jns
cmp
insl
stos
push
sub
movsb
leave
test
pop
sbb
rcrb
xor
pop
hlt
adc
roll
in
dec
gs
or
loop
mov
leave
xchg
fwait
adc
loopne
cmp
mov
mov
lods
inc
pop
lcall
fwait
cmp
lahf
adc
pusha
sub
dec
loope
adc
inc
mov
fdivs
sub
out
mov
cmp
bound
inc
stos
add
movsb
fs
xchg
and
mov
fwait
in
cmovae
or
xchg
mov
out
test
mov
daa
sub
idivb
push
dec
mov
cmp
push
mov
repz
mov
imul
pop
call
inc
jg
mov
daa
shr
stc
jnp
mov
adc
ss
outsb
or
mov
fwait
lock
rcrb
sbb
test
jmp
cli
mov
aaa
stos
stc
arpl
sub
lret
cli
lcall
xchg
push
fcoms
sbb
mov
cmp
arpl
xchg
loopne
into
pop
mov
pop
jno
push
jp
fstl
pop
enter
lahf
scas
std
fabs
cmp
icebp
jmp
mov
andl
or
pop
dec
shlb
sbb
pop
xor
imul
push
pop
scas
enter
ljmp
movsb
push
inc
cltd
jmp
and
mov
mov
mov
lret
sbbl
negl
or
into
pop
movsl
pop
in
call
imul
inc
xchg
push
clc
cmp
testl
lock
push
pop
adc
insl
movsl
adc
adc
cmp
jg
shll
fisubl
and
jne
std
inc
xchg
jae
sbb
mov
push
cmp
sbb
imulb
inc
sbb
or
stos
jge
dec
mov
sub
jl
cmp
or
mov
fmull
pop
scas
dec
push
lds
adc
mov
dec
test
add
arpl
rclb
mov
rcl
mov
and
xor
clc
mov
movsl
ret
jb
xor
push
gs
fwait
mov
mov
fldenv
mov
loope
xchg
enter
aam
sub
jecxz
inc
push
inc
mov
rol
pop
mov
orl
loopne
call
imul
inc
xchg
sti
repz
cmp
repnz
popf
sbb
ret
mov
adc
lret
cmp
das
adc
mov
nop
push
lcall
out
lds
pusha
std
fbstp
sub
aaa
ljmp
inc
cmp
mov
push
stos
rcrb
xor
mov
les
inc
rorl
js
mov
fmull
pop
scas
dec
push
xchg
inc
fwait
imul
popw
or
lcall
lea
mov
xor
jge
inc
jecxz
vmulss
movsl
cli
mov
inc
shlb
cmp
xchg
mov
or
mov
dec
fsubl
inc
inc
mov
insb
inc
ds
xchg
fwait
or
cmp
das
in
cmc
xor
mov
jl
inc
xor
sbb
xor
jg
iret
ret
clc
jmp
pop
mov
repz
pop
and
addb
mov
mov
add
sahf
dec
es
aas
and
int3
inc
sbb
push
jmp
lds
push
cli
mov
xchg
mov
push
dec
mov
cmpsl
test
clc
mov
fcmovb
gs
jae
add
cmp
and
daa
or
lods
cmp
fisubrl
pushf
mov
inc
jbe
jb
lods
rcrl
aam
mov
xor
push
pushf
rorb
xor
inc
dec
dec
js
mov
out
push
mov
divl
or
mov
jb
addr16
adc
mov
xchg
mov
mov
mov
and
movsl
pop
mov
or
cmp
fsubl
xor
push
and
andl
and
cmp
fisubrs
sbb
xlat
adc
int
mov
repz
mov
imul
lds
cmc
lret
push
adc
ret
jns
mov
add
mov
nop
dec
sbb
mov
jbe
xor
mov
xor
pop
xor
shll
jne
ja
repz
sbb
mov
add
lahf
popf
lahf
hlt
in
push
xchg
sti
lret
into
shlb
xchg
rcll
dec
outsl
jmp
add
mov
std
xor
mov
inc
mov
loope
dec
mov
jle
into
scas
ret
lock
jge
inc
xlat
fdiv
sbb
popa
or
mov
addl
or
pop
and
cmc
nop
dec
and
sbb
jb
xchg
imul
sub
mov
fisubs
cltd
rcll
dec
or
mov
sbb
push
xlat
outsl
mov
cmc
clc
sub
jmp
gs
filds
aam
cmc
fistl
dec
sbb
lods
sti
jmp
inc
fucomip
repz
mov
out
dec
inc
sbb
mov
ret
mov
mov
pop
and
iret
mov
cmc
pushf
dec
and
mov
test
fisttpl
lret
pusha
mov
mov
clc
mov
or
cmpsl
cli
test
add
test
sbb
add
xchg
lcall
jmp
mov
mov
xchg
jle
mov
sbb
shr
sbb
std
in
mov
leave
loop
in
nop
xchg
sbb
mov
inc
std
clc
scas
and
jns
dec
xchg
lock
xor
sbb
insl
aas
xchg
push
pop
cmpsb
enter
ds
jmp
std
mov
sti
and
imul
sbb
adc
pop
stos
or
dec
cmc
popf
icebp
pop
pop
dec
shll
sub
push
idivb
sbb
loopne,pt
iret
xor
in
icebp
jge
rcr
lret
dec
inc
mov
or
inc
in
pop
push
pop
repnz
ret
and
sbbl
clc
aaa
testl
cli
ss
jns
inc
pop
fwait
rcrl
push
clc
test
push
pop
daa
fcoms
add
sbb
das
ficoml
or
imul
xor
fidivl
xchg
cld
or
adc
daa
stc
sub
movsb
cwtl
hlt
inc
sarb
push
cmc
gs
inc
ret
and
or
lret
out
imul
xchg
imul
inc
mov
or
xor
out
push
ret
mov
add
cwtl
dec
push
or
cltd
outsl
movsb
xchg
jecxz
cmpsb
aad
mov
cmc
mov
lds
mov
loopne
in
mov
or
out
aas
divl
pop
cmpsb
fcomps
pop
mov
sbb
iret
cmpsl
mov
xchg
inc
test
shl
test
pop
or
popa
sbb
xor
sub
pop
pusha
cmc
movsl
dec
sbb
adc
in
jno
or
mov
cld
xor
xchg
movsl
add
or
xor
jb
mov
xor
inc
pushf
shl
iret
iret
push
dec
add
jb
pop
enter
fdiv
repz
lret
pop
inc
shlb
shlb
icebp
cwtl
mov
mov
push
fisubs
xchg
je
repz
pop
xchg
ds
jb
fwait
ja
aas
mov
bound
out
enter
pop
xchg
add
leave
addb
in
mov
int
or
int
int3
mov
push
xchg
mov
push
dec
adc
lock
stos
sbb
push
lock
sbb
in
pop
inc
xchg
dec
inc
ss
adc
dec
and
pop
jne
cmc
xor
lds
mov
pushf
pusha
jne
sbb
cli
in
mov
pushf
inc
adc
inc
mov
mov
or
cli
add
adc
mov
add
pusha
mov
into
jo
adc
loop
jl
ret
les
sbb
add
jp
pop
xchg
aas
insb
xor
mov
mov
fistps
jp
mov
test
mov
pop
fsubl
cmp
int
loop
ret
pop
test
push
xchg
add
leave
addb
in
mov
int
or
sbb
clc
mov
repz
mov
sub
out
les
inc
cmp
movsl
sti
imulb
and
mov
sbbl
cld
push
dec
xchg
mov
insb
push
xchg
ret
push
mov
repnz
stc
and
sarl
mov
sub
cmp
outsl
mov
int
add
decl
dec
popf
imul
xchg
sub
inc
push
mov
inc
fs
or
jns
fs
mov
lods
movb
xor
enter
jae
fisttps
in
icebp
push
addr16
add
rcll
sbbl
cmp
es
dec
xor
and
adc
stc
mov
aaa
stos
lds
cmp
xchg
jnp
enter
lcall
and
es
fdivs
dec
inc
pop
hlt
out
mov
jbe
imul
and
jp
dec
fucomi
repz
outsb
dec
aam
sbb
push
add
mov
sbb
cmpsb
sbbl
mov
dec
sbb
rcrb
sub
mov
das
stos
push
insb
sarl
incl
stc
arpl
sub
mov
dec
push
lret
pop
xor
test
or
mov
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
enter
lods
xchg
cwtl
push
push
call
inc
clc
xchg
xlat
test
xor
bound
das
push
sub
add
jl
mov
xchg
in
rorl
mov
std
test
out
out
mov
in
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
cmpsb
leave
mov
mov
add
jbe
fwait
sub
adc
je
push
popf
mov
sub
pop
or
shrl
mov
dec
sbb
adc
fucomip
mov
push
daa
cli
push
push
sub
adc
mov
outsl
movsb
sbb
clc
xchg
fidivrl
stos
pop
push
in
addr16
rcrb
lret
sbb
inc
mov
rcrl
pop
out
mov
pop
les
jl
lret
and
add
inc
sbb
adc
scas
adc
inc
popa
lock
ficomps
xchg
sbb
cltd
je
sbb
cltd
jbe
or
or
std
stc
loope
lds
mov
daa
loop
xchg
adc
subl
sbb
in
rorl
mov
cld
ret
pop
sub
jne
inc
xor
in
ret
push
icebp
aas
dec
mov
lret
sbb
sysenter
sti
ss
repnz
leave
pusha
and
es
sbb
mov
adc
bound
test
ss
xchg
dec
ret
jecxz
jne
leave
addr16
aad
jno
xor
inc
insb
sub
jle
incl
inc
xorl
fwait
mov
fistl
testl
ret
out
cwtl
push
out
jnp
dec
xorb
stos
repnz
push
fcoml
push
lds
mov
lahf
sbb
jg
sbb
fcomps
aad
xor
lret
or
mov
xor
adc
push
shrb
sub
inc
cmpsb
xchg
aas
scas
shrb
movzwl
outsb
jno
mov
bnd
inc
cwtl
inc
and
push
out
pop
and
push
fisubrl
xchg
fisttpl
and
fcmovnbe
jno
movsb
out
dec
loopne
je
mov
add
jnp
out
mov
cmp
and
loopne
push
iret
pushf
inc
addr16
xor
seto
sub
out
mov
mov
out
lret
inc
pop
add
push
push
push
lds
sbb
and
inc
les
inc
xchg
cmc
hlt
add
movsl
jg
addr16
into
and
rorl
imulb
or
ljmp
mov
je
xchg
ja
jmp
and
push
mov
ficompl
xchg
pop
pop
jae
shrb
aad
fdiv
adc
in
imul
in
dec
jg
cmpsb
and
arpl
lret
xchg
mov
cmp
imul
orl
pop
pop
notl
xor
add
add
pop
imul
adc
mov
adc
mov
pop
call
into
call
inc
cmp
jne
fwait
push
loopne
adc
inc
inc
mov
mov
pop
mov
push
and
sbb
ret
clc
movsb
cmp
outsl
ja
add
mov
insl
mov
and
fstl
add
popf
mov
dec
lds
adc
mov
push
rol
fldt
ret
inc
movsl
adc
push
out
and
add
popf
shl
pop
xor
std
shll
pop
pusha
imul
ret
adc
sbb
xor
push
xchg
cmp
dec
push
jmp
outsl
add
je
or
jmp
or
pop
es
or
sarb
clc
xor
cmpsb
mov
shll
push
push
jge
outsl
ja
fucomip
js
ds
xchg
scas
out
jp
mov
loopne
js
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
nop
inc
stos
jae
repnz
or
xor
ja
repnz
pop
movsl
jnp
enter
not
xor
ja
iret
inc
fistps
push
sar
adc
sahf
mov
adc
mov
shlb
mov
cwtl
mov
xchg
xor
pop
pop
jb
movsb
mov
stos
jecxz
push
mov
cli
mov
mov
xorl
clc
mov
jp
jge
scas
xchg
iret
stc
push
mov
mov
scas
push
mov
roll
xor
and
dec
pop
jo
sub
cmpxchg
out
sub
arpl
sar
mov
mov
orl
pop
je
sbb
pop
push
inc
out
out
jae
pushf
sub
addr16
mov
adc
fidivrs
sahf
sub
adc
jg
lahf
inc
outsb
out
loope
addl
mov
sub
sub
lods
imul
scas
jge
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
and
into
add
ficompl
hlt
testb
mov
fisubrl
out
adc
mov
xor
test
fs
xor
jp
inc
sbb
mov
outsl
mov
aad
jno
outsb
loope
push
shlb
lods
push
outsl
andl
stos
inc
repnz
sub
jne
test
lret
xor
or
mov
std
push
dec
sbb
js
adc
jno
mov
testl
push
mov
adc
jns
sbb
rorb
push
fisubl
mov
aam
cmp
cmp
or
lea
fwait
inc
jbe
push
insb
into
add
and
sub
mov
dec
push
aaa
adc
inc
or
mov
add
inc
mov
dec
pop
ret
aam
push
inc
movsb
jle
ljmp
lahf
mul
lock
xchg
daa
sub
mov
mov
aam
mov
inc
test
pop
dec
orb
adc
lods
clc
das
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
and
cmp
push
add
jo
imul
xchg
shlb
sub
cmovb
nop
shr
rcrl
dec
pushf
push
jno
fucomi
and
inc
fwait
daa
xchg
sbbl
or
push
sarb
mov
rol
mov
or
jge
xchg
xchg
or
jbe
addr16
scas
shlb
sbb
into
call
inc
cmp
jne
fwait
push
loopne
adc
inc
inc
mov
mov
pop
mov
push
and
sbb
ret
clc
movsb
cmp
outsl
ja
add
mov
insl
mov
and
fstl
add
inc
inc
dec
lahf
inc
mov
add
test
or
add
sbb
stos
outsb
ja
xor
inc
aas
push
inc
push
fwait
xchg
push
add
xchg
ret
call
xor
stos
enter
and
repz
or
adc
aad
sbb
add
xchg
aad
xchg
test
dec
mov
dec
mov
int
or
inc
nop
rcrb
stos
enter
add
sbb
sbb
enter
int
and
fcmovbe
cmp
sbb
cmp
mov
push
xchg
xor
nop
pop
mov
stos
dec
sub
pushf
push
push
bound
js
call
adc
pushl
loope
cmpb
xchg
add
push
pop
fcmovu
mov
or
imul
jnp
sahf
add
add
pop
mov
loop
add
push
cmc
or
jl
dec
movsl
mov
jbe
adc
mov
aas
cli
add
out
sbb
loop
adc
pushl
adc
test
test
cmp
hlt
jp
lahf
popf
stos
mov
sbb
fcoms
pop
xchg
test
or
push
inc
sub
dec
pop
pop
push
dec
fs
cwtl
push
mov
lods
xchg
jb
push
es
jle
mov
scas
jmp
sub
mov
out
scas
inc
fwait
xor
loop
clc
das
push
roll
scas
dec
or
sbb
xor
iret
shl
xor
cmc
pop
adc
popa
test
pop
out
cmp
pop
fidivrs
jnp
pop
xor
fwait
inc
pop
dec
xor
loope
rcll
inc
inc
fidivrs
fpatan
leave
sbb
add
movsb
jne
mov
daa
popa
mov
test
pop
sub
jbe
ficoms
or
pop
outsl
mov
out
mov
lock
mov
xor
add
sbb
mov
decb
lock
dec
pop
adc
aas
movsl
hlt
imul
cmpsb
push
dec
rcll
mov
mov
pop
arpl
pop
mov
cmc
mov
mov
in
fxch
pop
or
movsl
mov
sbb
loope
pop
lds
xchg
jnp
xchg
nop
dec
pop
pop
rorl
movsl
lods
adcl
jmp
fidivs
aad
rorl
xchg
pushf
pop
outsb
js
lods
cs
movsb
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
and
dec
aam
stc
mov
test
inc
cmpsl
lock
add
mov
xor
sub
ljmp
mov
dec
cmpsl
leave
cmp
adc
add
pop
push
andl
pop
je
and
rcrl
movsb
fnsave
or
adc
arpl
add
inc
push
sbb
xchg
xchg
jmp
popa
roll
outsb
push
stos
or
push
les
das
mov
paddusb
xchg
mov
sbb
shrl
pop
dec
xor
cmp
push
lock
jle
fs
cmpsl
dec
out
pop
rcrl
mov
push
mov
jo
lret
pop
rcl
xchg
mov
lods
inc
pusha
xor
pop
mov
dec
fidivrs
lods
mov
add
inc
pushf
cmp
loop
push
sub
xor
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
dec
cwtl
mov
out
jb
fadd
scas
xchg
out
cmpsl
mov
jg
repz
jns
fwait
lret
aam
ret
cmp
mov
sbb
inc
les
mov
aad
jge
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
and
into
add
ficompl
hlt
testb
mov
fisubrl
out
adc
mov
xor
test
fs
lret
dec
pusha
sub
mov
sub
mov
sbb
daa
pop
xor
loope
loope
divb
lock
out
add
xchg
cltd
mov
pop
sub
lods
dec
gs
mov
lods
sub
pop
xchg
shlb
je
add
aas
cmpsb
shrb
iret
lods
fisttpll
mov
and
pop
lahf
bound
das
push
sub
idiv
xor
out
and
mov
pop
xchg
cmp
mov
push
sahf
cmpsb
test
xchg
xchg
test
mov
inc
ljmp
subl
and
in
jb
add
je
cmp
dec
pop
xchg
cltd
xchg
pop
es
xchg
mov
add
inc
sub
repz
lods
in
dec
pusha
xor
aam
aaa
imul
cmc
mov
xor
arpl
leave
cmpsl
inc
icebp
xchg
jle
sbb
adcb
cmc
cwtl
in
imulb
push
inc
outsb
jne
cmpsl
mov
int3
dec
pushf
ret
inc
mov
ffree
stc
inc
repnz
popf
lret
push
xchg
lods
push
xchg
test
push
xchg
shll
cmpsl
jbe
je
sub
outsl
sub
and
data16
ss
dec
push
lret
ret
mov
jp
test
sbb
inc
bound
sbb
push
scas
push
mov
add
in
cmpb
jge
xchg
movsl
out
gs
sti
sahf
stos
fdiv
fwait
push
lds
jb
movsb
arpl
mov
sub
ljmp
es
push
lock
mov
inc
iret
fs
insb
or
mov
pushf
stos
mov
xor
in
fiaddl
mov
or
test
ret
imul
outsl
clc
stos
jge
lret
inc
adc
lock
lock
adc
inc
inc
sbb
add
add
gs
ret
sub
lea
pop
sub
clc
jge
xchg
mov
stc
and
shr
sub
mov
neg
dec
cs
fistps
xor
divb
sbb
mov
shll
stos
pop
mov
xchg
mov
rcrb
fldt
jae
arpl
mov
jnp
jno,pn
jecxz
cmpsb
xchg
faddp
jle
scas
add
ret
pop
pop
out
and
lret
jl
das
inc
iret
aaa
jge
outsl
inc
call
adcl
add
sub
sti
xor
clc
mov
cld
xor
shlb
enter
cwtl
flds
lcall
xlat
adc
ret
orb
cmp
sub
outsb
ja
inc
sbb
and
and
mov
pop
push
iret
sbb
xor
int
inc
sbb
cmp
mov
push
pop
dec
dec
pushf
movsb
rorl
mov
sbb
or
sub
aaa
pop
add
lock
inc
sub
int3
adc
jecxz
dec
bound
jg
shl
mov
cmpsb
dec
mov
test
pop
cltd
enter
mov
test
clc
aam
push
sahf
pop
and
push
aad
jno
arpl
das
push
roll
aas
xchg
xor
mull
mov
sbb
xchg
xchg
or
fwait
into
pop
jae
inc
and
cmpb
xchg
fldl
add
out
enter
push
hlt
enter
movsl
inc
sbb
xchg
cmp
movsb
cmp
stc
inc
jp
pop
cs
jbe
mov
jns
adc
cmp
and
sbb
add
mov
mov
stos
adc
outsl
mov
xor
ret
push
mov
aaa
add
aad
int3
and
ss
int
inc
jno
pop
cmp
into
ret
addb
jbe
jmp
mov
inc
pop
adc
pop
cmpsl
lret
dec
sbb
add
ret
push
mov
sub
push
popa
fsts
movsl
fstl
cld
test
mov
dec
shll
pop
push
fmuls
mov
popa
sbb
in
mov
adc
nop
jns
scas
sbb
and
mov
xor
cmp
jb
adc
pop
scas
sbb
fisttps
lods
divl
stc
adc
and
pushf
ret
addr16
sub
adc
shlb
mov
shlb
bound
mov
jmp
clc
orl
sbb
lret
sub
push
xor
jo
and
mov
pop
sub
popa
dec
push
mov
daa
fs
mov
push
mov
inc
push
xchg
xchg
mov
mov
shrb
dec
cmp
ror
jmp
dec
ds
je
aam
jl
ret
add
pop
push
scas
ja
test
adc
pop
ret
cli
movsl
mov
pop
mov
movsb
nop
imul
or
bound
fwait
inc
and
mov
push
sub
sub
bnd
sbb
or
imul
mov
mov
pushf
lret
mov
dec
popa
scas
mov
pop
pop
adc
jg
sahf
subl
stc
cwtl
shll
or
add
movd
nop
lds
dec
dec
adc
dec
add
inc
shll
mov
sub
movsl
inc
mov
fldl
pop
inc
xchg
jecxz
inc
xchg
sub
insl
rolb
gs
rcrb
repnz
icebp
mov
int
inc
sbb
push
mov
jl
cmp
idivb
or
push
xchg
ss
outsl
mov
std
fistpll
pushl
jo
test
jp
jge
scas
xchg
iret
stc
push
mov
adc
mul
movaps
es
sahf
pop
and
sub
and
test
lret
cmp
lock
dec
mov
loopne
push
repz
xchg
xchg
mov
scas
mov
out
jae
popf
sub
divb
mov
jae
fidivrs
sahf
sub
test
mov
add
icebp
mov
jae
push
inc
test
ss
push
andl
fisubrs
pop
pop
cmp
dec
add
mov
push
push
push
push
adc
test
sbb
sub
jb
mov
xchg
sbb
xchg
fisubrl
push
xor
jo
cs
mov
inc
ljmp
fwait
mov
dec
sub
and
dec
pop
inc
cmp
jnp
mov
and
mov
je
icebp
add
push
cmp
sbb
outsb
push
inc
sbb
dec
sub
push
stos
in
cmp
inc
pop
test
xchg
fs
int
dec
fidivs
sub
btr
outsl
jno
insb
out
mov
push
sub
pop
mov
fidivl
or
test
out
mov
push
in
imul
adc
iret
subl
pop
fdivrs
gs
push
adc
aam
cmp
and
sahf
inc
push
pop
sbb
movsb
xor
mov
js
push
mov
repz
inc
lahf
jge
dec
call
xor
sub
xor
jmp
fistpl
xor
sbb
daa
and
mov
push
dec
sbb
add
xchg
loop
sub
test
sbb
ficomps
pop
push
stos
test
hlt
int
aam
cmp
aam
mov
jmp
ret
inc
adc
mov
add
divb
loope
stos
movsl
sub
pop
cld
and
fstps
cwtl
xchg
pusha
or
sti
fstps
sub
pop
and
or
mov
mov
push
mov
dec
mov
mov
sub
aaa
adc
inc
add
adc
mov
push
call
jle
and
sub
cmc
fisttpll
pop
arpl
mov
outsb
dec
mov
imul
mov
call
pop
inc
fldcw
sub
cld
mov
mov
sti
fistps
enter
dec
dec
das
cwtl
enter
stos
in
sbb
sbbb
scas
push
pop
scas
mov
jp
jns
addr16
or
pop
cmc
jmp
int3
shll
pop
xchg
repnz
popf
in
jns
in
test
dec
cmp
xor
or
push
fstps
lds
xchg
mov
arpl
fcomps
jg
pop
pusha
arpl
inc
push
scas
je
sbb
leave
insb
adc
mov
fisttpl
and
loopne
sbb
xor
ljmp
icebp
jno
push
xchg
inc
add
or
outsb
ret
adc
pop
jno
inc
pop
add
pop
or
mov
shlb
out
lods
imul
jmp
pop
loop
sarb
rcr
jno
clc
stos
pop
inc
leave
call
cli
icebp
outsl
clc
daa
push
lret
lahf
pop
stc
cmp
xor
mov
adc
sub
add
ret
mov
stos
mov
sbb
mov
mov
sar
mov
xor
arpl
mov
shll
orl
push
dec
clc
cmpsl
pop
or
dec
adc
mov
in
add
outsb
daa
push
and
shlb
addr16
push
fs
pop
std
mov
cmp
lods
ret
stos
jmp
scas
jge
sarl
pop
movnti
or
xchg
adc
dec
in
int
push
xor
add
xor
and
sub
cmp
imul
lock
stos
ss
inc
push
into
mov
bound
xchg
fbstp
and
xor
sub
dec
test
out
addr16
outsb
cmpsl
in
sub
xor
push
fbld
fdivrs
repz
jns
cli
stos
lahf
pop
jmp
repnz
xor
int3
sbb
sbb
xor
cli
mov
ja
lret
adc
test
and
xor
repnz
test
fbld
scas
ljmp
mov
daa
cmpsl
pop
or
dec
adc
inc
xlat
pushf
fmull
scas
pop
or
lret
push
mov
sub
outsl
mov
insl
call
push
imul
and
pushf
popf
mov
inc
add
in
hlt
xchg
adc
add
pop
inc
fsubs
jb
dec
fs
xchg
jmp
push
xchg
mov
fsub
add
fs
cmp
cmp
jmp
adc
ljmp
xchg
jge
int3
pop
xor
int
xchg
jns
jmp
sbb
jb
jecxz
mov
leave
adc
sub
data16
movsl
in
lods
jmp
in
repz
dec
rcrl
cmpsb
hlt
jl
adc
sbb
or
je
cwtl
pop
stc
jo
pushf
xchg
inc
cmp
out
lret
adc
sbb
mov
rcrb
jge
pushl
sub
jecxz
in
subl
scas
pop
or
lret
push
mov
mov
arpl
mov
or
dec
nop
rcrb
lods
call
je
or
insb
cmp
bound
fdivs
jmp
push
movsb
xorl
and
lcall
adc
mov
fs
cld
sbbb
jno
sti
push
outsb
lahf
in
push
shl
jb
mov
inc
add
popf
pop
mov
cmp
insb
or
adc
cmp
xchg
jmp
sbb
jb
jae
pop
je
xchg
stos
push
mov
sarl
sti
sub
int
aam
cs
lock
out
ljmp
jns
push
pop
arpl
call
dec
xor
pushf
xchg
pusha
cmp
test
orb
into
cmp
clc
mov
aaa
neg
iret
pop
enter
or
xlat
add
jge
push
xchg
into
adc
imul
mov
add
stos
jbe
sbb
push
mov
or
lret
xchg
js
inc
fsubrs
mov
shl
dec
cmp
out
clc
xor
adc
or
les
bound
fs
xchg
cmp
lahf
lods
test
and
fs
and
sbb
inc
push
cmp
in
mov
cmpsb
jo
clc
and
out
sbb
bound
xchg
jb
mov
sub
enter
pop
out
fsubrs
lock
push
jmp
xchg
cmpsb
repz
clts
mov
inc
rcrl
iret
adc
pop
add
movsl
aad
pop
or
aam
xor
adcb
jmp
push
lds
dec
rcrb
jecxz
lock
mov
fwait
push
lahf
lock
sbb
cmp
icebp
hlt
out
mov
popf
push
jns
mov
test
push
mov
xor
lds
add
xchg
int3
adc
sarl
jae
and
decb
xchg
mov
shl
fildl
rclb
cmp
adc
cmp
sbb
mov
sbb
sarb
out
insb
ret
mov
pop
jbe
inc
adc
and
fmull
xor
orb
mov
repnz
mov
aad
vrsqrtss
dec
pop
pop
adc
sarb
dec
call
insl
mov
cld
testl
jecxz
addl
xchg
mov
adc
or
lcall
or
mov
dec
xchg
call
scas
and
push
fisubs
clc
scas
mov
mov
repnz
popf
push
imul
push
dec
jg
lods
rcrb
lds
divb
testl
ljmp
arpl
cltd
lret
add
cmp
test
iret
scas
je
stos
cmpsb
xchg
inc
inc
adc
stos
shll
inc
aad
aad
dec
add
xor
or
outsb
cmp
push
shrb
int3
mov
xor
xchg
mov
mov
lret
add
std
sub
cltd
fdivl
mov
shlb
pop
fisubs
mov
sahf
neg
sbb
arpl
mov
xchg
jb
fdivrs
outsl
clc
aas
clc
sub
in
lret
xchg
test
mov
sti
je
push
mov
adc
inc
jp
adc
jp
lret
imul
mov
pop
mov
adc
mov
call
ljmp
mov
jg
rcrl
mov
jnp
cmpsb
in
mov
mov
ja
pop
ja
rol
lcall
cmc
xor
xchg
es
or
fidivl
xchg
inc
mov
enter
jle
inc
cmp
xor
mov
dec
dec
add
jecxz
imul
cld
pop
xchg
inc
add
dec
xchg
push
sbb
scas
pop
hlt
pop
sbb
push
add
cmp
and
adc
dec
les
xor
cmp
fisubs
mov
shrb
and
pop
addr16
xor
sub
fstpl
shl
repz
jne
xchg
dec
push
lahf
pop
shl
mov
sub
outsb
or
sub
mov
hlt
sbb
lret
imul
xor
push
jae
shll
xchg
inc
xchg
pop
scas
shrl
imul
repz
xor
sub
hlt
pop
mov
pop
arpl
mov
mov
sub
test
or
push
sbb
mov
mov
mov
mov
lock
mov
jl
sub
sahf
add
cmp
stos
push
mov
pop
xchg
inc
add
mov
stos
add
inc
push
push
enter
sbb
out
js
mov
iret
add
jp
and
or
aad
jg
int
aas
mov
out
and
jecxz
cmp
pop
fldenv
loop
mov
loopne
jmp
dec
fbld
jmp
jl
mov
leave
sbb
adc
or
cltd
dec
test
mov
jp
scas
cwtl
pavgb
shr
push
scas
idiv
mov
jne
pop
out
gs
or
inc
add
lea
adc
inc
mov
arpl
pop
js
out
mov
adc
shlb
dec
fstps
loop
nop
fwait
mov
pop
xor
enter
scas
std
cli
lret
outsb
js
dec
sbb
nop
xchg
adc
inc
and
ret
add
inc
cmp
cmp
mov
dec
sub
movsb
jno
or
outsb
lahf
inc
pop
int3
enter
subl
js
jg
ret
xchg
sti
gs
test
sub
mov
fdivs
cmpsb
outsl
in
dec
xor
jmp
cmp
stos
ret
sarl
sti
sub
daa
stc
add
cs
lock
cmp
or
xor
into
iret
lds
int
push
xor
push
sbb
mov
stos
rcrl
pop
in
cmp
outsl
mov
dec
or
imul
lret
test
arpl
xorl
add
xor
and
dec
test
out
push
stos
out
sub
xor
fidivs
jge
push
gs
push
frstor
cwtl
lahf
mov
dec
cmp
call
cli
cli
or
les
les
loopne
adc
repnz
je
mov
add
fdivl
stos
fnstcw
ret
xchg
or
fisubs
pop
lret
stos
call
cmpsb
jo
pop
es
jg
add
xchg
imul
jno
shrl
push
mov
jnp
or
mov
insl
cmp
mov
sub
call
insl
mov
iret
xchg
mov
test
ret
inc
lcall
shlb
mov
jg
lahf
adcb
test
jl
ss
hlt
cmp
xlat
leave
adc
sbb
popf
dec
test
mov
fisubl
mov
out
lret
test
test
push
mov
xor
lds
push
inc
adc
jo
arpl
mov
enter
lods
in
or
push
pusha
fidivl
in
jmp
addr16
xlat
popf
jecxz
mov
or
cmp
mov
or
sahf
adc
sti
cld
dec
scas
sbb
arpl
cwtl
test
hlt
xchg
movsl
icebp
xor
xchg
jmp
lret
inc
lcall
mov
adc
xor
imulb
inc
sub
loop
jp
mov
mov
jnp
add
push
mov
mov
fcomps
cwtl
divl
orb
fsubrs
mov
scas
popa
clc
clc
and
lret
test
lds
enter
add
mov
add
fsubl
mov
js
mov
dec
pop
dec
dec
ret
jns
mov
push
rcrl
mov
xchg
adcb
dec
addr16
int3
push
lds
push
stos
pop
or
jo
repz
fs
xchg
scas
xor
mov
or
push
cmp
call
in
and
cmp
sbb
push
pop
arpl
mov
mov
sub
xchg
movsl
clc
cld
mov
sub
push
sbb
mov
lock
ss
out
pop
enter
mov
jg
ljmp
pop
shrb
sub
lods
imul
jb
mov
sahf
divl
inc
dec
xchg
rorl
fwait
jne
sarb
pushl
inc
into
shl
lret
jge
cli
stos
lahf
in
stc
xor
xor
mov
lods
push
or
mov
mov
nop
mov
xchg
icebp
cs
pop
dec
ret
jo
test
mov
frstor
imul
jns
cmpsl
icebp
or
push
adc
inc
sbbl
mov
cs
outsl
shlb
int
dec
rcr
push
mov
es
or
or
data16
push
inc
xor
lock
add
or
adc
add
ret
stos
push
imul
jecxz
mov
mov
mov
push
sbb
mov
cmpsb
sbb
mov
stc
dec
out
cmp
push
xlat
cltd
add
fdiv
and
xchg
rcrl
ret
cmpl
xchg
int
aas
cli
int3
mov
sbb
aas
shlb
and
stos
mov
jge
sub
dec
shl
pop
sbbl
mov
dec
adc
mov
sbb
sbb
mov
js
mov
imul
inc
test
arpl
mov
lret
push
scas
inc
xchg
pop
xchg
repz
frstor
jns
dec
ds
jp
pushl
pop
in
mov
jb
les
scas
cmc
or
xchg
push
mov
sbb
sbb
lret
xchg
mov
fsubrl
imul
mov
mov
lock
and
rclb
add
or
sub
push
mov
adc
into
cmp
sub
insl
inc
push
fsubl
mov
int
or
mov
cmpsl
cltd
add
call
decb
add
push
cltd
sub
and
mov
notl
shlb
push
pop
mov
decl
lret
ficompl
sbb
pop
loopne
cli
cmp
lods
jmp
outsl
pop
out
mov
mov
dec
adc
sub
ret
jns
rcrl
adc
int
xor
pushf
insb
cmp
fadd
test
in
sub
mov
lret
xchg
mov
mov
andl
cwtl
mov
jnp
push
inc
jae
iret
push
fisubl
stos
jbe
lcall
pop
nop
rcl
pop
lds
inc
cwtl
lahf
leave
xchg
sbb
outsb
js
fsubrs
fucomip
leave
xchg
dec
loopne
mov
inc
orl
or
add
adc
dec
add
adc
dec
adc
sbb
push
lret
stos
call
outsl
inc
aad
loop
shlb
sti
popa
mov
test
mov
jle
mov
fdivs
std
sub
sahf
xchg
std
aaa
fwait
xchg
cmpsb
repz
pop
mov
mov
inc
mov
fcomps
pop
inc
jg
add
cmp
sub
fdiv
mov
xor
inc
into
iret
imul
lds
cmp
jnp
push
cmp
add
xchg
push
fwait
push
scas
shrb
sbb
pusha
xchg
jae
mov
out
lret
test
jge
roll
jae
stos
out
and
movsl
mov
jg
outsl
ds
imul
inc
pop
gs
lods
jne
lret
mov
shl
ret
xchg
popf
add
add
mov
sub
push
jae
cli
xchg
mov
push
mov
int3
mov
mov
jmp
sub
inc
add
adc
mov
push
call
jle
cmpsl
out
sub
cmc
fstl
pop
arpl
mov
negl
dec
mov
imul
mov
call
pop
inc
fsts
out
sub
cld
mov
mov
sti
fistps
enter
dec
lcall
stos
in
sbb
lahf
orb
cmp
scas
push
xchg
dec
divl
addr16
or
jae
jmp
int3
shll
pop
nop
repnz
popf
in
jns
arpl
test
dec
cmp
mov
push
pop
lds
xchg
mov
arpl
fcoms
scas
pop
pusha
arpl
inc
scas
je
leave
movsb
ds
add
adc
adc
sbbl
clc
in
sbb
xor
ljmp
icebp
jno
push
xchg
inc
add
add
outsb
ret
adc
cmp
inc
pop
dec
mov
bound
popa
mov
sub
mov
mov
shlb
out
lods
imul
jecxz
jae
rcrb
loop
sarb
rcr
jno
clc
stos
pop
inc
leave
hlt
outsb
sub
cmc
cli
int
clc
daa
mov
fistpl
xor
mov
adc
push
xor
cmp
mov
leave
inc
sarb
jl
mov
push
das
stos
and
sti
mov
xor
arpl
pop
int3
shll
or
dec
push
or
stc
cmpsl
pop
or
and
das
cwtl
hlt
imul
aad
and
shlb
call
adc
std
mov
movsb
popf
test
push
cmp
and
scas
jge
out
jle
pop
icebp
lea
or
xchg
adc
dec
in
int
push
xor
add
xor
and
sub
cmp
imul
lock
cmp
jbe
inc
push
or
adc
int3
xchg
push
ss
sbb
rdmsr
xor
ljmp
fimuls
adc
es
shrb
and
sub
xor
push
fbld
fdivrs
repz
jns
cli
stos
lahf
pop
jmp
repnz
or
mov
cmp
fcompl
sbb
mov
mov
ja
lret
adc
shlb
sub
mov
mov
test
fbld
scas
ljmp
mov
daa
cmpsl
pop
or
dec
adc
inc
xlat
pop
or
push
mov
sub
outsl
mov
insl
xchg
inc
push
imul
and
pushf
popf
mov
inc
add
in
add
adc
add
push
inc
fsubs
jb
js
pop
xchg
jmp
push
xchg
adc
lods
inc
sbb
add
fs
cmp
cmp
jmp
adc
jbe
xlat
xchg
jge
or
xchg
aad
int
and
xchg
jmp
sbb
jb
jecxz
mov
leave
adc
sub
data16
and
lods
jmp
in
cmc
jne
dec
rcrl
cmpsb
stc
and
adc
sbb
or
mov
cld
inc
scas
cwtl
pop
adc
fstpl
mov
xor
lret
adc
sbb
dec
mov
lcall
pushl
sub
jecxz
inc
subl
scas
pop
or
push
mov
mov
fwait
mov
dec
dec
nop
rcrb
scas
call
je
or
insb
pop
arpl
and
mov
jmp
or
adc
and
mov
mov
cmp
lcall
adc
mov
rolb
sub
outsb
lahf
in
push
rorl
popl
pushf
xchg
adc
mov
popf
cmp
cmp
insb
or
movsl
insb
in
testb
inc
jb
jae
sbb
push
jmp
repz
rorl
ret
sarl
sti
sub
int
aam
cs
lock
out
ljmp
jns
push
pop
arpl
call
dec
xor
pushf
xchg
insb
cmp
test
push
hlt
ficomps
cmp
clc
mov
xor
enter
or
mull
push
xchg
into
adc
imul
insl
test
ret
pop
flds
out
mov
or
lret
xchg
cmp
rcrl
push
push
dec
lret
dec
cmp
out
clc
xor
adc
or
les
adc
xchg
cmp
xchg
lods
test
and
fs
cmp
sbb
inc
push
roll
and
rorb
and
out
sbb
or
xchg
jb
or
dec
xchg
loop
mov
pushf
ds
fsubrs
lock
in
dec
sbb
pop
pop
and
cmp
adc
popf
je
cwtl
dec
sub
idiv
sti
loopne
test
sbbb
repz
mov
push
pop
dec
dec
sbb
test
adc
push
insl
xchg
cwtl
std
sub
mov
cli
stos
popf
pop
dec
or
rcrb
adc
push
in
sahf
jns
loope
pop
fcmovbe
add
in
jg,pn
shl
movsl
mov
gs
dec
mov
sti
push
mov
scas
push
and
sub
jecxz
test
pop
and
xchg
xchg
cmp
inc
mov
or
gs
or
ret
rcr
push
inc
xchg
jne
pop
lret
inc
lods
xlat
xchg
mov
outsb
or
daa
loopne
js
xlat
mul
jle
mov
jecxz
mov
add
dec
mov
std
pop
push
lds
movsl
xor
push
or
mov
adc
movb
and
int3
inc
lds
cltd
arpl
imul
enter
xchg
fwait
jo
fnstenv
dec
add
jno
pop
aas
jle
lahf
dec
and
push
in
adc
ljmp
ss
lea
push
lret
imul
push
lret
cmpsl
mov
hlt
cwtl
rolb
sbb
jg
out
sub
sub
shl
sub
mov
sbb
sub
add
inc
cld
ja
adc
fadd
push
bound
cmpsl
xchg
scas
mov
and
or
xlat
or
stc
fildll
repz
inc
aam
lret
fwait
adc
dec
in
sbb
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
idivb
and
jb
dec
sbb
fdivs
ret
orb
sbb
fistl
inc
sahf
cmp
fbld
test
fwait
jl
jo
stos
outsb
adc
sbb
or
int3
jle
cmp
insb
push
sub
push
mov
insl
aad
insl
ficomps
fldcw
and
sbb
ljmp
and
adc
cmp
sub
push
bound
sub
xchg
pop
sub
fsubr
addl
std
mov
stos
xchg
mov
pop
shll
ss
test
inc
and
mov
xchg
cmp
bnd
popf
mov
mov
cmp
repnz
mull
dec
fcmovb
xchg
cmp
fwait
inc
push
rol
fbstp
push
mov
lea
mov
xchg
pushf
add
and
xchg
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcll
inc
add
bound
insb
or
cmp
sbb
daa
jne
jnp
xchg
dec
fstl
inc
sub
sbbl
clc
sti
mov
or
addr16
faddl
or
arpl
cwtl
pop
push
jno
rclb
insl
push
imul
push
fcomi
pop
iret
inc
pop
test
test
pop
push
rorl
mov
dec
cli
xchg
dec
les
dec
dec
fsubl
ja
in
xor
shlb
sub
bound
movsl
mov
cltd
pop
and
add
pop
sbb
arpl
sbb
btc
and
dec
fwait
or
or
jns
mov
mov
or
inc
cmc
add
rcll
or
psraw
test
and
mov
jne
insl
cmovl
pop
xor
fcomp
outsb
dec
push
add
and
mov
test
arpl
xor
imul
lcall
adc
push
add
sub
mov
mov
mov
lods
enter
push
fisttpl
cltd
sbb
scas
cwtl
and
fldcw
mov
jb
pop
push
popa
push
lret
sbb
repnz
mov
scas
ljmp
rcrl
or
sbb
or
les
add
std
cld
jns
sbb
sbb
push
inc
ficoml
cmp
sbb
gs
adc
adc
outsl
xchg
adc
aaa
jb
xor
scas
and
ret
jg
out
add
lret
jge
outsl
cmp
inc
aam
lret
fwait
adc
dec
mov
push
scas
fcomp
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
imulb
and
jb
dec
sbb
fdivs
ret
orb
xor
sub
fistl
inc
sahf
cmp
fbld
stos
iret
mov
add
stc
loop
mov
aas
pop
dec
inc
arpl
decb
sbb
mov
push
mov
xchg
sti
adc
call
shrl
inc
pop
mov
rorl
push
daa
jb
add
adc
fwait
shll
adc
adc
xchg
jnp
push
or
mov
in
mov
mov
jbe
popf
dec
adc
gs
ret
xchg
cld
sbb
cmp
add
mov
lock
fidivrs
inc
mov
addr16
rcll
test
xor
cmp
mov
inc
cmp
cltd
pop
insl
mov
std
bound
enter
enter
rcll
add
ds
aas
mov
dec
push
in
cltd
shr
inc
shlb
in
pop
xchg
dec
and
push
scas
push
test
adc
push
pop
pop
xchg
sub
push
cmp
in
ret
arpl
mov
cwtl
in
sub
arpl
js
imul
cli
mov
clc
das
stos
lock
pop
cli
stos
jb
pop
inc
aam
dec
sbb
xor
pop
pop
mov
inc
cmp
sbb
push
sub
fnstenv
add
or
js
mov
xor
jecxz
cmpsb
out
in
ret
das
stc
movzwl
outsb
jno
lahf
push
loopne
movl
pop
jnp
or
add
das
inc
iret
shl
ja
std
outsl
addr16
lahf
xor
sub
jbe
jp
fisubrs
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
xchg
and
add
out
call
jmp
loop
sbb
mov
fisubl
mov
pop
xor
mov
add
movl
test
cmp
push
rol
cmc
mov
lock
dec
adc
mov
in
and
mov
inc
mov
in
push
push
push
inc
int
mov
hlt
xor
pop
push
inc
ds
lret
push
gs
mov
adc
insl
bound
stos
in
imul
in
dec
jg
cmpsb
and
arpl
lret
xchg
mov
cmp
imul
lea
or
jns
mov
mov
adc
icebp
jmp
xchg
sub
mov
lock
mov
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cltd
push
es
inc
xor
mulb
mov
xchg
ds
mov
pusha
or
cmc
push
sbb
testb
es
mov
pusha
pop
jo
or
inc
rorl
jne
lret
imul
inc
cmpsl
leave
sbb
test
jmp
sahf
cli
test
mov
ja
xlat
inc
push
nop
cmp
or
jl
pop
adc
mov
cs
push
stos
shlb
fimull
mov
lret
arpl
xorl
and
inc
outsb
data16
mov
adc
fsubl
ja
in
xor
loopne
js
cs
add
mov
xor
das
shrb
out
cmp
push
mov
in
mov
shrl
fdivrs
cli
jno
add
lahf
inc
push
dec
rcl
jmp
test
enter
push
leave
daa
in
hlt
xor
and
gs
sub
gs
inc
and
cmc
mov
and
xor
jg
ss
jae
fdivrs
jns
ds
and
ret
push
ds
adc
bound
or
pop
into
push
fadd
int3
sbb
dec
imulb
adc
or
imul
and
stos
push
push
jp
sbb
shrb
std
pop
mov
xor
test
jb
les
scas
jecxz
pop
mov
mov
rcll
push
rcl
fistpl
fwait
pushw
push
jo
ret
sahf
inc
and
cmp
xchg
and
in
sbb
add
or
aas
and
mov
adc
xor
sub
ja
pushf
cmp
test
loopne
mov
rcll
mov
mov
imul
xchg
or
lds
dec
test
outsl
mov
shll
popf
xchg
push
sbb
mov
sub
adc
xchg
cltd
mov
ljmp
xchg
rcrb
mov
jp
lods
outsb
inc
or
add
insb
push
pushf
xor
outsb
aaa
and
iret
mov
sbb
mov
push
ja
inc
in
lods
std
orl
inc
sbb
mov
bound
sahf
pop
xchg
iret
loope
pop
ret
adc
add
subb
ja
adc
aam
jne
insl
dec
movsl
xchg
mov
out
jnp
shrb
sub
ds
xchg
push
fs
mov
mov
xchg
jo
andl
cld
xor
out
xor
into
push
aaa
pop
dec
add
xchg
jecxz
fstpl
push
ficoml
lret
xchg
mov
test
daa
dec
out
jno
pop
jp
jne
fwait
xchg
inc
test
dec
les
test
sbb
and
mov
cmc
xchg
jmp
xchg
hlt
test
lods
lea
and
stc
lea
fsubs
sbb
jnp
mov
sub
inc
cltd
add
call
inc
je
xor
xor
repz
and
adc
and
lods
fisubl
jno
jle
cmpsl
es
mov
mov
mov
mov
sub
add
fcmovnb
push
scas
pop
or
push
mov
fcomi
add
adc
xor
mov
data16
xor
out
jl
or
pushl
rorl
cmp
pop
inc
shlb
insl
test
rorl
dec
aam
je
mov
adc
test
sub
mov
sbb
fisttps
add
lahf
stc
cmpsl
leave
stc
and
rolb
dec
pop
icebp
addr16
sub
or
dec
mov
push
andl
leave
stc
rclb
mov
rcrl
ds
ret
icebp
add
inc
ret
or
mov
sub
out
and
xor
js
clc
sub
int
inc
jmp
rcrb
rcrb
jne
mov
out
dec
sub
out
cmc
sub
pop
je
fnstsw
ds
loopne
and
sub
xchg
mov
sbb
adc
push
xor
cltd
sahf
mov
sbb
adc
shll
xchg
out
into
cmpxchg
out
jno
insb
out
pop
mov
and
flds
jg
out
das
dec
lock
test
cwtl
jg
jge
outsl
outsl
and
push
xor
cli
pop
test
jnp
sbb
xor
cmp
testl
add
cmp
hlt
xor
xchg
jle
inc
lret
mov
ret
mov
pop
push
mov
rcll
xchg
push
mov
xchg
jns
lret
subl
dec
cmpsl
cmp
sbb
aas
ja
int
sbb
fsts
inc
pop
add
sarb
adc
mov
adc
sbb
mov
pop
out
mov
outsl
cmpsl
je
or
jl
daa
dec
inc
or
cld
xor
and
fisubl
pop
outsl
les
jmp
fwait
lods
movb
std
pop
mov
pusha
inc
imul
cmpsb
je
jp
out
jae
in
and
mov
dec
das
inc
mov
fadds
mov
dec
or
in
dec
mov
ljmp
ret
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
pop
shlb
xchg
es
and
shrl
ret
dec
sbb
cmc
jb
push
xchg
mov
pop
adc
xlat
mov
in
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
arpl
cltd
pop
jmp
incb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
cld
xchg
fcmovnbe
js
fldt
lds
pop
insb
test
std
mov
adc
mov
mov
dec
xchg
jmp
lret
shrl
mov
das
mov
popf
mov
xchg
xlat
pop
xchg
sub
cltd
jno
insb
out
jecxz
cmpl
mulb
cltd
scas
push
or
adc
std
subl
xchg
mov
scas
mov
out
jae
pushf
mov
jnp
mov
and
mov
outsl
mov
bound
cmpsl
push
fwait
jbe
dec
push
cli
mov
insb
je
scas
jge
fs
stos
dec
sbb
mov
rclb
push
pop
ljmp
ja
repz
pushf
popf
arpl
lock
inc
sbb
ljmp
test
out
cmc
int3
inc
scas
leave
faddp
xor
sbb
inc
cmp
out
fisttpll
frstor
mov
xchg
pop
in
dec
insb
or
cmp
xchg
lret
rcll
sbb
fisubrl
adc
or
cmc
shlb
adc
scas
shrb
lret
jbe
daa
push
inc
mov
stc
das
jg
iret
adc
jl
std
mov
cli
js
outsl
daa
push
sbb
outsl
arpl
cli
push
stos
clc
cmp
in
cmp
or
mov
mov
mov
js
jbe
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
sahf
negl
mov
out
les
inc
cmp
or
imul
jecxz
add
mov
in
lret
in
pop
add
ljmp
cmc
add
sub
cwtl
mov
insl
mov
jne
jo
push
mov
or
movsb
hlt
sbb
aam
cmp
jb
push
xor
jbe
xor
dec
inc
sub
jno
cmp
ret
and
lds
fcom
dec
sub
cmp
add
pop
cld
and
adc
sbb
mov
nop
inc
repz
lret
jp
pushf
adcl
pop
jl
lods
xchg
push
add
push
test
dec
jp
inc
cwtl
les
ret
mov
lods
enter
rorb
arpl
lret
cmpsb
cld
divl
mov
xor
outsb
pop
repnz
out
push
push
or
std
sub
xor
jecxz
enter
xchg
add
in
dec
addr16
lahf
jg
dec
push
sahf
sub
xchg
fldt
fbld
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
lret
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
ds
fxch
push
test
fistps
outsl
movsl
xchg
dec
xor
ret
ss
inc
shlb
sub
push
xchg
inc
mov
loope
jns
dec
aad
mov
lods
jge
mov
jnp
inc
movb
push
inc
add
sarl
cli
repz
test
inc
repz
push
xchg
xchg
jg
sub
lret
xchg
lcall
push
jmp
fnsave
xchg
push
xabort
mov
add
cli
icebp
bound
test
leave
addb
fwait
xchg
les
cltd
sahf
sub
out
jae
sbbb
push
test
lcall
mov
loopne
lret
pop
inc
pusha
lods
jno
pop
in
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
shll
cmpsl
adc
addb
in
aad
insl
into
pop
mov
insl
push
orb
incb
push
bound
push
movb
mov
andl
dec
pop
inc
test
arpl
pop
outsb
push
roll
push
push
mov
mov
or
sbb
lods
jge
insb
ss
jnp
xchg
add
movsb
repnz
jo
mov
pop
jb
add
fsubl
test
adc
adc
adcl
int
sahf
lahf
ss
outsl
push
loope
clc
xor
scas
adc
aaa
pushl
jg
out
lret
cwtl
add
test
jo
jl
pop
push
mov
dec
test
jmp
or
mov
xchg
add
and
push
inc
push
pop
jo
nop
jl
fbstp
dec
sbb
push
ret
cli
arpl
sbb
xor
lods
popl
pushf
rcrl
in
sti
scas
push
jns
imulb
in
dec
pop
inc
inc
adcl
fcmove
mov
lret
sar
out
jnp
adc
shll
add
jo
ret
add
pop
push
scas
ja
test
stos
sar
mov
push
imul
repz
test
dec
sahf
jo
fistps
xchg
adc
jno
arpl
enter
fadds
jle
pusha
das
dec
iret
std
subl
hlt
idivl
outsl
outsl
and
push
stos
cwtl
ret
pop
movmskps
ja
popf
lods
push
jae
fidivrs
sahf
sub
adc
iret
jae
mov
into
pop
or
les
xlat
or
adcl
cltd
cmp
and
pop
push
mov
bound
test
cs
arpl
call
push
pusha
and
rorb
test
mov
mov
dec
and
int
sub
cmp
cmpl
ss
lea
mov
loop
and
inc
in
test
mov
xchg
pop
mov
das
pushf
cmp
mov
or
sbbl
cltd
add
std
cld
jns
push
push
ja
nop
test
repz
lea
pop
cmp
pusha
jle
das
pop
icebp
sbb
cmp
fs
loop
out
in
adc
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
test
mov
repnz
push
lds
jb
movsb
adc
mov
sub
ljmp
inc
mov
inc
inc
adc
jp
gs
fsubrl
jle
mov
and
ljmp
mov
ficoms
and
xchg
scas
lcall
and
ljmp
shll
add
add
cmp
mov
inc
int
sbb
cmpb
xchg
pop
dec
dec
pushf
cmpsb
ret
loop
faddp
add
int
inc
push
inc
mov
flds
inc
ds
push
mov
xchg
test
dec
fsubl
mov
faddl
mov
testl
jae
fwait
lret
push
mov
loope
xchg
faddl
mov
or
mov
incl
fcoml
and
and
sub
adc
cmc
inc
lahf
mov
stc
mov
addr16
sbb
movsl
cli
jg
inc
insl
in
imul
pop
out
inc
dec
jb
fwait
int
sarl
push
scas
std
int3
inc
aas
mov
dec
jle
nop
inc
mov
cmp
test
repz
inc
bound
iret
test
inc
insb
and
loopne
mov
icebp
push
sahf
popf
jecxz
push
adc
dec
and
inc
mov
inc
adc
lds
stos
dec
xchg
lods
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movsb
bound
xchg
add
fsubrl
pop
push
sub
mov
mov
leave
psubd
movsb
test
loope
shll
pop
and
iret
lds
repz
int
mov
mov
in
sub
add
or
into
iret
cmp
cs
xchg
scas
out
movsl
jg
outsl
jae
fiadds
stos
mov
dec
adc
es
inc
clc
pusha
mov
js
jbe
mov
xchg
lds
xchg
mov
pop
cmpb
pop
mov
mov
pop
sub
filds
xor
shrl
mov
or
ret
pop
jmp
shrb
sbb
mov
inc
cmp
add
rcrl
jo
lret
cmpsl
mov
mov
rcll
and
popf
ficoms
lock
cmp
pushf
ficoms
pop
loope
lcall
inc
cmp
mov
jecxz
fsubrs
loope
pop
dec
sub
cli
lods
xchg
stos
xor
sub
into
pop
push
and
pop
test
fstpt
pop
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
leave
xchg
jo
enter
dec
loopne
call
push
rcl
test
mov
pop
cs
icebp
fcomi
movsb
dec
int3
lahf
stc
cwtl
shll
or
add
insb
adc
inc
shlb
mov
ljmp
leave
xchg
sti
mov
pop
cmpsb
fiaddl
inc
inc
dec
lahf
inc
mov
adc
sbb
sub
pop
adc
subb
push
mov
ret
mov
adc
das
movsl
je
lret
scas
arpl
pop
jecxz
mov
inc
pop
mov
shll
pop
adc
aad
imul
into
inc
mov
movsl
push
orb
mov
stos
test
jne
lret
adc
and
cmp
cmpl
repnz
jg
enter
stc
sub
imul
inc
add
or
push
rcrb
std
gs
addl
mov
xchg
imul
cmp
pop
jb
or
sbb
xor
mov
repz
ss
cmp
or
fcmove
mov
andl
push
xchg
or
push
pop
lods
arpl
call
add
test
push
sarl
xor
push
fwait
mov
jbe
orl
leave
fsubrl
xchg
int3
inc
push
cltd
dec
xlat
and
dec
lods
fbld
jns
lahf
jp
imul
and
pop
xor
xchg
xor
inc
pop
jae
lret
nop
sbb
push
inc
icebp
jo
rcl
lcall
push
int3
fisttpll
xchg
dec
ficoms
addr16
xchg
ljmp
gs
jb
dec
imul
hlt
idivb
pushf
ljmp
jno
sbb
jbe
sub
out
scas
mov
pop
cs
icebp
loopne
inc
out
cs
jl
cwtl
shll
or
add
push
andl
fcmove
mov
andnps
sbb
push
inc
push
pop
lock
dec
pop
mov
or
xchg
xchg
adc
adc
xor
divl
mov
sub
fwait
aaa
fisubl
shlb
xchg
movsl
aam
lcall
push
lcall
repnz
inc
push
int
inc
cmp
mov
out
lret
movsl
inc
bound
mov
xor
push
add
add
xchg
cwtl
xor
push
stos
jge
pop
mov
leave
jns
or
inc
sub
push
sub
jg
lahf
rclb
in
and
js
enter
mulb
adc
add
lock
aas
pop
push
sbb
sarb
out
cli
dec
test
xorb
sbb
cli
repz
jae
lahf
xor
lods
iret
xor
into
orb
push
ficompl
cs
pop
shrb
or
sbb
gs
std
aaa
test
cmpsb
repz
jne
les
cmpl
sbb
imul
aaa
adc
or
and
bnd
fldcw
lret
loopne
ret
sbb
icebp
lock
inc
mov
lds
cli
xor
fildll
jnp
fldt
arpl
push
mov
les
or
inc
shlb
add
test
imul
or
lret
data16
movsb
fstl
fdivrl
cltd
jg
mov
jo
loop
add
dec
inc
add
subl
dec
std
adc
les
inc
movsb
push
rcrl
jb
mov
ret
icebp
cld
mov
mov
cwtl
outsb
lahf
outsl
aas
adcl
int3
clc
popf
enter
repnz
mov
xchg
jae
mov
dec
insb
add
arpl
ret
das
add
xor
inc
cs
sub
sub
push
stos
aam
jne
insl
xchg
pop
outsl
jbe
lods
push
mov
mov
push
mov
cmc
js
sbb
cwtl
data16
cld
inc
daa
xchg
lret
push
fidivrl
inc
xor
lds
std
addr16
ss
mov
shr
dec
sbb
inc
mov
rcrl
sti
out
mov
pop
les
jl
lret
and
add
inc
sbb
adc
sub
test
mov
test
ficomps
xchg
sbb
cltd
je
sbb
cltd
jbe
in
or
std
stc
loope
lds
mov
out
jl
jl
rcrb
pop
pop
lret
sbb
add
das
pop
xor
or
sbb
imull
scas
loope
sti
jp
popa
mov
js
cs
icebp
in
lods
lods
xlat
xor
mov
aaa
push
test
push
xorl
fs
fisubrl
sbbl
dec
mov
and
push
inc
push
pop
push
test
pop
jl
mov
xlat
bound
push
shrl
dec
sub
stos
stc
sbb
mov
or
sub
fcompl
cwtl
mov
xchg
cmpsb
ljmp
mov
shr
push
popf
mov
scas
xchg
xlat
xchg
lcall
scas
popf
push
jns
add
mov
into
ss
mov
ja
aad
cmp
rorl
stos
mov
push
mov
xor
jecxz
into
aam
inc
cmp
mov
cld
loop
inc
fsubs
xchg
jmp
loope
cmp
pop
inc
sbb
rcr
rclb
mov
fbstp
loopne
outsb
imul
es
pop
lods
addr16
push
pop
sbb
jo
shrl
dec
fwait
lret
cmpsl
dec
adc
das
mov
lock
mov
test
jae
push
xchg
ror
xor
fwait
loopne
test
and
jp
or
lods
jl
and
ljmp
xor
rcrl
add
cmp
fadds
sbbb
mov
and
push
leave
pop
inc
add
stos
mov
inc
fnstsw
jle
jge
jnp
dec
sub
cli
jno
inc
fcom
mov
jl
sbb
or
mov
fsubrl
test
sarb
shr
fnstenv
or
mov
mov
jmp
xchg
daa
push
dec
int3
ss
andb
mov
sarb
and
lret
jl
das
inc
xor
je
sti
scas
mov
aas
lods
inc
inc
insl
jmp
mov
adc
movsl
ret
daa
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
sbbb
cmp
cmpb
test
imull
pop
loopne
mov
push
cmc
sbb
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
and
dec
or
mov
xchg
or
rcrb
int3
and
ss
int
inc
mov
fwait
jae
imul
ror
inc
lret
push
mov
mov
sbb
or
dec
lcall
lds
adc
lcall
push
js
jbe
mov
in
xor
lahf
fisttps
jle
add
repz
or
loop
cwtl
add
xor
sub
xchg
xchg
aas
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
test
aaa
mov
pop
jle
nop
add
mov
sahf
dec
gs
inc
pop
adc
or
call
jg
dec
push
sahf
sub
fldt
fbld
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
lret
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
cmp
fxch
push
test
fistps
les
pop
sbb
bound
mov
and
sub
outsl
push
dec
in
mov
cmp
rcll
pop
pop
xor
inc
fucomi
movzwl
data16
in
push
mov
pop
loop
ret
addl
ljmp
iret
shl
aaa
out
inc
and
enter
dec
adc
mov
pop
lock
sbb
into
call
inc
cmp
jne
fwait
push
loopne
adc
inc
inc
mov
mov
pop
mov
push
and
sbb
ret
clc
movsb
cmp
outsl
ja
add
xor
and
fstl
add
inc
inc
dec
lahf
inc
mov
pop
inc
repz
inc
dec
hlt
xor
shll
dec
cmpsb
loop
loop
test
movsl
xor
lret
scas
addr16
dec
sbb
jmp
mov
sbb
push
jo
icebp
add
test
push
inc
inc
out
lcall
mov
lcall
and
dec
fdivl
movsb
mov
jle
mov
cld
stc
inc
es
or
xlat
cmp
xor
sbb
inc
icebp
or
pop
je
sbb
lahf
push
inc
out
inc
dec
je
ret
aad
dec
xorb
cld
js
fstpl
jge
sbb
jmp
aad
scas
test
ss
push
addl
shlb
stos
rcrl
mov
adc
and
adc
sbb
shlb
pusha
push
pop
add
loopne
fsts
jbe
push
mov
sub
mov
and
cmpsb
xchg
dec
mov
xchg
pop
push
sbb
mov
or
inc
jns
loope
lret
aam
and
shrb
fsubl
mov
shlb
sub
xchg
stos
mov
sub
mov
test
clc
aam
dec
loopne
fidivs
sub
btr
outsl
jno
insb
out
mov
push
sub
pop
mov
fidivl
or
test
out
mov
inc
push
fidivrl
out
push
lods
sub
hlt
hlt
push
sbb
push
push
mov
addr16
jo
add
iret
fnsave
sbb
fidivl
push
cmpsl
leave
sub
loop
jge
mov
repnz
adc
cs
pushf
mov
out
push
aam
pusha
mov
cmp
scas
mov
jl
xor
inc
daa
jne
xchg
test
enter
xor
or
push
xorl
fnstcw
hlt
xchg
push
das
jno
xchg
add
lods
sbb
sub
pusha
std
mov
repz
pop
outsb
push
roll
push
push
mov
mov
or
sbb
lods
jge
insb
ss
jnp
xchg
add
movsb
repnz
jo
mov
pop
jb
add
inc
pop
or
mov
addr16
sub
jo
mov
dec
mov
push
lods
shrb
fisttpl
jg
lahf
sub
adc
jnp
sahf
xchg
outsb
iret
lahf
icebp
cwtl
ret
data16
ret
addr16
or
add
in
data16
imul
out
movsb
adc
test
enter
das
lea
mov
sub
cld
mov
mov
sti
leave
adc
sub
lea
jg
or
and
js
pop
adc
mov
xor
test
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
push
dec
pop
xchg
test
inc
push
lea
dec
cmpsb
push
and
mov
sub
inc
insl
pop
fwait
enter
inc
sub
push
mov
push
inc
pop
xor
mov
es
test
lret
aas
addr16
xor
scas
addb
push
mov
fdivs
fistl
roll
cmp
rcll
adc
test
mov
push
gs
pop
xchg
mov
mov
jne
dec
inc
adc
dec
les
push
hlt
xor
and
gs
push
sub
gs
das
in
cmc
mov
add
mov
shr
repz
xchg
pop
out
xchg
fcmovnbe
out
jno
pop
in
xchg
pop
xchg
into
popa
mov
rep
aam
sub
adc
das
sbb
xchg
outsl
xor
or
cmp
es
sub
imull
jge
sbb
out
mov
out
lret
arpl
mov
mov
xchg
cmp
jae
lret
push
and
xchg
sbb
into
arpl
pop
stos
sets
cwtl
mov
js
lds
xchg
popf
movsl
cmp
sub
mov
fcompl
sti
and
xlat
adc
adc
sbb
cltd
cmpb
pop
fsts
pop
xor
xchg
xchg
sbb
push
ja
popf
lods
push
jae
fidivrs
sahf
sub
xor
aaa
xor
add
and
push
add
adc
or
mov
lret
or
push
pop
cmp
test
cltd
push
push
idivl
sub
lods
in
xor
leave
pop
ret
pop
xor
daa
sbb
ljmp
roll
mov
insl
lcall
push
out
jnp
dec
xorb
stos
repnz
push
fcoml
push
lds
mov
lahf
sbb
jg
sbb
fcomps
aad
xor
lret
or
call
xor
adc
mov
push
sbb
outsl
rcl
in
jo
sbb
out
xchg
int3
jbe
daa
sarl
or
jg
dec
or
ljmp
aaa
jge
test
out
ja
popf
sub
jae
pushf
loop
shll
lahf
cmpsl
repz
in
aaa
incl
es
push
lock
mov
jb
mov
mov
ret
xchg
mov
ret
push
xchg
sti
mov
fildl
mov
arpl
lds
movsl
sbb
iret
addl
imul
jmp
sbb
or
ret
daa
inc
addr16
mov
orb
xchg
out
jmp
dec
mov
mov
fnstsw
mov
push
mov
inc
sub
jecxz
enter
pop
inc
shlb
cmp
pop
sub
outsb
add
dec
jb
int
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
fcmovnu
lahf
adc
clc
aam
adc
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
xchg
push
stos
icebp
mov
ret
cmpsb
mov
fcmovbe
or
mov
xlat
pop
jo
inc
cmp
sbb
inc
hlt
aas
adc
arpl
out
mov
fsubrs
pop
sbb
xor
mov
jle
xchg
nop
out
push
xor
mov
xchg
xchg
daa
adc
test
pop
aad
add
mov
sbb
xchg
xchg
sbb
les
pop
es
test
ljmp
sbb
test
cmp
pop
dec
sbb
and
fcoms
fisttpll
mov
addb
xor
rcr
jne
test
adc
adc
dec
or
mov
xor
push
pushf
cmp
sbb
push
bnd
sub
pop
mov
scas
pop
out
cld
jb
mov
popl
mov
and
pushl
xor
sub
jbe
fisttpll
loopne
jmp
jne
movsl
cmpsw
insb
lock
fdivl
xchg
mov
enter
hlt
xor
daa
jp
dec
mov
mov
je
mov
je
pop
mov
xor
mov
push
mov
inc
mov
adc
mov
and
daa
add
test
mov
xchg
out
push
push
inc
int
and
pop
test
sbb
jecxz
push
sub
mov
or
xchg
lods
jb
xchg
or
inc
jge
shlb
aam
adc
rol
lods
push
outsl
andl
stos
inc
or
subl
out
xorl
sahf
repnz
scas
sarb
xchg
mov
rsqrtps
ret
mov
and
repnz
fimuls
out
push
repnz
je
in
imul
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
inc
mov
aam
cmp
jnp
testb
stos
mov
and
call
or
mov
sbb
and
adc
jmp
loop
fisttpll
shl
insl
bound
fdivl
stos
or
and
pusha
sbb
scas
mov
jmp
inc
mov
and
dec
ljmp
adc
mov
bound
data16
inc
ret
pop
ficomps
pop
push
dec
movsl
in
adc
inc
pusha
pop
ror
stos
bound
aad
lahf
jmp
mov
and
cmp
imul
enter
insl
dec
xor
pop
push
inc
pop
mov
shlb
dec
arpl
push
pushf
sub
cmp
enter
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
repz
dec
call
add
xchg
gs
xchg
add
pop
outsb
aaa
inc
popf
push
jo
lret
stos
call
push
mov
fstpl
rcr
hlt
xor
mov
dec
xchg
in
add
pop
or
and
jo
push
or
bound
test
cs
pop
ret
ds
adc
pushf
add
jmp
seto
or
xchg
push
jmp
jle
sbb
mov
mulb
sbb
xchg
mov
pop
push
mov
xor
shl
sub
xchg
daa
push
push
jl
lret
rcrl
mov
mov
mov
leave
xchg
inc
mov
push
into
fmull
inc
sbb
cmp
enter
les
cli
cli
icebp
sbb
xchg
js
mov
and
cli
orb
dec
lock
mov
clc
xchg
test
popf
mov
inc
mov
fists
lods
push
jae
mov
cs
jae
popf
xor
into
add
and
sub
mov
lock
or
andl
nop
and
andl
add
mov
xchg
inc
pop
sbb
mov
out
iret
into
ret
adc
lods
aad
ret
ficomps
dec
and
dec
mov
adc
inc
mov
insb
movsl
lds
inc
inc
xchg
mov
pop
dec
sbb
adc
jno
lds
inc
in
das
stc
scas
ljmp
jbe
arpl
and
dec
inc
add
adc
dec
jge
mov
jp
pop
test
sbb
or
sarl
shl
jecxz
fwait
cmpsb
mov
mov
cld
or
sbb
loop
jb
enter
mov
andl
cmc
les
push
and
and
dec
and
fldl
cmpsl
in
decl
inc
lret
leave
push
gs
cmpsl
xor
call
jg
out
xor
into
orb
sub
mov
repz
cmp
das
in
cmc
idivb
sahf
divl
movl
adc
loopne
std
into
lcall
mov
cmovge
lcall
jg
aad
pushf
ret
pop
mov
hlt
mov
arpl
mov
lock
lds
push
clc
sub
jne
mov
mov
roll
movsb
shll
lock
inc
jle
int3
inc
sub
jecxz
enter
pop
inc
shlb
adc
cwtl
xchg
xchg
push
dec
xchg
test
inc
stos
rclb
adc
mov
jne
push
addr16
adc
arpl
pop
stc
add
adc
test
dec
mov
je
test
or
push
repnz
xrelease
daa
mov
xchg
inc
add
inc
js
mov
fsubs
out
rcr
imul
jo
sbb
testb
push
lret
gs
imul
loopne
xor
js
jle
lahf
adc
push
xor
push
inc
lods
enter
mov
loopne
movnti
lcall
mov
nop
jae
or
stos
popf
call
stc
push
fbld
scas
ljmp
jbe
arpl
and
or
nop
roll
jge
rorl
pop
test
sbb
or
sarl
shl
jecxz
fwait
cmpsb
mov
mov
cld
or
sbb
loop
push
jae
fwait
xor
mov
sbb
cltd
imul
xchg
ss
out
es
jae
pushf
sub
divb
mov
jae
fidivrs
js
cs
jae
xchg
xor
jo
shll
or
or
push
andl
es
and
xorl
ja
daa
pop
js
dec
dec
lods
les
pop
inc
cmpsl
lcall
push
jb
cmp
and
mov
pop
movb
sbb
mov
jecxz
sbb
or
lods
jno
mov
lods
pushf
inc
stos
xchg
js
fidivs
std
push
xchg
les
mov
and
movb
in
jmp
loope
insl
dec
mov
add
shrb
test
xor
inc
sahf
repnz
sarb
xor
and
movsb
lret
aas
loope
negb
or
pop
dec
data16
sbb
fwait
jl
mov
adc
xchg
test
jmp
inc
loope
jnp
in
stos
xchg
lods
sarl
cmc
pop
adc
popa
test
cltd
lods
inc
push
jns
lret
sbb
in
jp
movsl
iret
mov
cld
adc
shlb
enter
cwtl
flds
lcall
xlat
adc
ret
orb
aas
sbb
outsb
ja
inc
sbb
and
and
mov
pop
push
iret
sbb
xor
int
inc
sbb
cmp
mov
push
pop
dec
dec
pushf
movsb
rorl
mov
sbb
or
sub
aaa
pop
add
lock
inc
sub
int3
adc
jecxz
dec
bound
jg
shl
mov
cmpsb
dec
mov
test
pop
cltd
enter
mov
test
clc
aam
push
sahf
pop
and
push
aad
jno
arpl
das
push
roll
aas
xchg
xor
mull
mov
sbb
xchg
xchg
or
jbe
ja
mov
shlb
sbb
into
call
inc
cmp
jne
fwait
push
loopne
adc
inc
inc
mov
mov
pop
mov
push
and
sbb
ret
clc
movsb
cmp
outsl
ja
add
xor
insl
mov
and
fstl
add
inc
inc
dec
lahf
inc
mov
pop
popf
adc
xor
cmp
or
mov
clc
sub
ficomps
fldcw
and
sbb
ljmp
ret
xchg
mov
mov
shll
lock
inc
mov
and
push
outsl
xorl
or
shl
push
fsubs
cmpsl
mov
or
lret
fs
movsb
fstl
fdivrl
jg
mov
jo
loop
add
dec
inc
add
subl
dec
std
adc
les
inc
movsb
push
rcrl
jb
mov
ret
icebp
cld
mov
mov
cwtl
outsb
lahf
outsl
aas
adcl
int3
clc
popf
enter
repnz
enter
jae
mov
dec
mov
inc
sar
les
filds
cmp
dec
movsl
or
pop
inc
inc
movsb
gs
lahf
jg
xor
loop
movsl
test
xchg
shl
lret
jge
fisubrl
popa
popf
rcrl
sub
addl
push
adc
mov
sbb
xchg
sbb
ss
mov
dec
or
inc
incl
xchg
xor
in
mov
out
mov
mov
je
flds
cmp
inc
in
ror
cmp
insl
dec
xor
pop
push
pop
fwait
enter
push
stos
add
test
mov
shl
xchg
cmp
ja
in
aad
mov
out
and
mov
cmp
and
in
sbb
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
lret
stos
call
insl
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
idivl
dec
scas
mov
dec
call
cs
xor
jmp
clc
sti
jle
dec
lahf
stos
std
cmp
pop
mov
mov
adc
dec
mov
pop
lods
sub
push
insb
xor
testl
cmp
hlt
out
push
sub
lds
into
pop
mov
jbe
push
add
decb
adcb
dec
dec
jmp
js
scas
mov
xchg
sub
add
pop
push
add
mov
sub
addr16
push
js
adc
fsts
jg
sbb
enter
mov
dec
std
arpl
popl
xchg
xchg
add
imul
cwtl
dec
int
adc
push
jmp
pop
mov
cmp
iret
push
mov
jo
repnz
leave
pusha
and
es
pop
xchg
enter
mov
mov
bound
test
cs
mov
cld
cwtl
dec
mov
leave
addr16
aad
jno
xor
inc
insb
mov
jle
incl
inc
sbbl
inc
pop
adc
cltd
mov
fs
xor
cmp
cmpl
ss
lea
pop
lret
xchg
cs
dec
adc
mov
adc
lret
jle
fs
cmpsl
dec
out
pop
rcrl
mov
push
mov
jo
lret
pop
rcl
xchg
mov
lods
inc
pusha
xor
pop
mov
dec
fisubs
adc
test
add
inc
pushf
cmp
loop
push
sub
cmp
fwait
add
jecxz
sti
iret
jnp
scas
inc
dec
dec
lock
iret
rclb
test
stos
xchg
ret
scas
xchg
push
adc
jge
outsb
aam
out
mov
int3
data16
out
push
or
cld
sbb
shlb
enter
cwtl
flds
lcall
xlat
adc
ret
orb
mov
sub
outsb
ja
inc
sbb
and
and
mov
pop
push
iret
sbb
xor
int
inc
sbb
iret
cmpsl
xlat
in
sub
push
insl
mov
imul
inc
stos
xchg
scas
pusha
lods
fwait
imul
pop
push
ja
pop
imul
fsubs
dec
lods
push
outsl
xchg
xchg
test
sbb
in
mov
sub
shrl
push
and
sub
imul
cmpsb
aas
stos
jmp
sub
pusha
aam
fstl
mov
add
movsb
out
inc
mov
inc
cmc
add
or
psraw
test
and
mov
jne
insl
cmovl
pop
sbb
fcomp
outsb
dec
push
add
and
mov
jns
push
xchg
test
mov
das
fsubrs
test
aad
mov
mov
pop
stos
rcll
mov
add
xchg
fcmovnbe
sub
test
push
sarl
xor
pop
xchg
cltd
fcoml
or
jmp
add
out
mov
cmp
pop
iret
sahf
mov
outsb
aaa
dec
lea
jecxz
lods
shrl
idiv
sbb
sub
sub
add
add
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
mov
cmpsl
and
sub
jle
fcoml
jbe
fmull
jp
scas
ret
add
mov
sarb
in
xlat
in
or
dec
or
push
jl
das
push
xor
je
pop
popa
outsl
ja
testl
lds
adc
xchg
xchg
ss
sbb
dec
cmp
loopne
sbbl
and
insb
sbb
out
jne
dec
cmc
xchg
jmp
sbb
pop
fsts
inc
pop
cmp
leave
sti
int
fadds
mov
pop
jno
adc
push
pop
xchg
fldl
lcall
or
mov
and
xor
movsl
ret
insb
test
incl
popa
int3
pop
mov
inc
dec
pop
fisttpll
movsb
repz
loopne
lcall
xchg
stos
push
repnz
pop
push
jne
mov
out
fldcw
mov
sub
jmp
scas
aas
test
fisttps
clc
dec
fnsave
insb
out
pop
mov
push
roll
aas
xchg
xor
outsl
cmpsl
fwait
loope
outsl
and
lock
dec
xchg
inc
push
fidivrl
imul
jnp
out
xchg
inc
into
xchg
xor
out
adc
sbb
jo
repnz
leave
jne
lret
jg
lret
data16
repz
in
cmc
add
jae
pop
cmp
xor
push
in
push
xchg
adc
aaa
call
test
shl
sub
fists
rolb
rcrb
hlt
scas
lock
push
sub
fs
icebp
mov
movsb
lds
nop
lds
clc
mov
loop
mov
xchg
int3
stc
inc
push
cld
sub
xor
rcl
negl
adc
out
in
sub
mov
imul
mull
sub
sbb
arpl
jo
sub
repz
mov
xchg
test
lret
popa
jl
icebp
jle
scas
pxor
cld
repz
sbb
and
das
dec
iret
shl
idivl
outsl
outsl
call
mov
pop
sbb
insl
mov
clc
mov
cmp
xor
mov
test
pusha
mov
mov
mov
pop
xor
shlb
in
rclb
mov
fsubrs
outsb
sub
rcl
int
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
into
iret
inc
sub
cmp
lret
stc
and
sarl
mov
sub
mov
fs
pop
add
decl
dec
popf
imul
xchg
xchg
dec
mov
and
cmc
test
sub
outsl
xchg
jno
inc
and
pop
test
dec
lret
cmp
fidivrs
pop
pop
dec
push
lret
stc
and
movsb
mov
sbb
cmp
or
stc
xor
or
test
cltd
cmp
jmp
insl
inc
add
pop
popf
xor
fdivs
add
mov
imul
dec
xchg
push
and
push
jp
dec
mov
and
jmp
es
fxch
cli
sarb
inc
inc
inc
inc
lahf
ds
add
and
inc
pop
mov
xor
pop
roll
add
decb
push
in
dec
push
data16
test
imul
push
and
jne
mov
mov
dec
dec
pop
insb
cmc
test
sti
mov
mov
and
insl
adcl
mov
stos
sub
mov
rorl
test
xchg
pushf
lds
push
fdivs
mov
mov
lock
ret
jge
dec
mov
fists
pop
mov
rolb
lods
push
rcrl
repnz
test
stc
add
pushf
xchg
sub
clc
pop
xchg
imul
xor
inc
and
aas
int
and
filds
lahf
sti
cwtl
inc
leave
ret
add
push
xor
jle
incb
int
imul
lcall
mov
push
pop
lahf
fistl
inc
mov
fstps
stc
outsl
clc
adc
fwait
pop
lds
add
mov
adc
inc
ret
sbb
inc
pop
repnz
loop
pop
scas
push
pop
leave
jb
cld
rcr
push
jge
sub
cmp
sbb
lahf
jne
enter
repz
cli
pusha
std
movsl
dec
push
test
and
shrb
fsubl
mov
shlb
sub
xchg
stos
mov
sub
pop
push
fcoms
inc
jb
sahf
pop
and
sub
pusha
aam
fstl
mov
add
movsb
out
inc
mov
inc
icebp
sub
testb
jnp
out
mov
out
lock
sub
decl
inc
inc
lret
repnz
inc
add
inc
js
mov
ret
xorb
jae
pushf
pusha
cli
and
jb
push
dec
or
test
push
mov
insl
lcall
push
test
sbb
stos
cmp
ss
mov
mov
pop
pop
inc
pop
adc
in
dec
cs
scas
push
or
add
adc
lret
mov
cwtl
jg
scas
cwtl
or
aad
aas
loop
mov
jge
dec
in
mov
out
cmp
enter
and
mov
sub
or
cli
and
mov
dec
mov
fs
mulb
mov
shrb
es
dec
dec
lea
stos
jmp
addr16
and
lea
les
les
adc
dec
test
dec
fidivrl
cmp
jmp
cld
rclb
mov
mov
lahf
outsl
aas
andl
les
lds
fsub
addr16
add
sbbl
or
cmpb
mov
inc
dec
sahf
es
movb
cs
push
lds
mov
xlat
js
jge
mov
cmpsb
mov
stos
adc
inc
push
imul
in
cltd
xorl
fdivrs
out
lret
cli
push
scas
jnp
jne
and
lds
inc
in
es
scas
ljmp
jbe
arpl
and
dec
inc
add
adc
dec
jge
fisttpll
pop
test
sbb
or
sarl
shl
jecxz
fwait
cmpsb
mov
mov
cld
or
sbb
xchg
js
mov
and
adc
fldenv
lock
jl
cmp
insl
cmp
arpl
or
scas
scas
loope
sti
jnp
out
scas
mov
outsl
outsb
scas
insb
repnz
es
outsb
out
lahf
stc
cmpsl
leave
pop
and
and
addr16
sub
add
or
fsubr
mov
shll
xor
adc
mov
xchg
inc
pop
sbb
lret
call
iret
sti
roll
jnp
dec
inc
mov
mov
or
adc
push
imul
fisubrl
dec
out
mov
mov
push
xchg
fildl
inc
cmp
mov
or
lods
cmp
rcrl
xchg
popf
pop
sbb
jns
add
xchg
inc
and
inc
jns
dec
rcr
xchg
mov
xchg
sbb
sub
inc
pop
lcall
cmp
test
test
fildll
mov
loop
mov
fidivs
ja
pop
dec
out
ret
lret
and
push
pop
outsl
jae
pusha
es
hlt
movsl
call
repz
data16
jecxz
fwait
jne
hlt
pop
das
orb
xor
sub
sub
push
dec
mov
lcall
mov
mov
popf
je
int3
dec
sub
idiv
sti
dec
cmpsb
push
pop
add
push
cwtl
xor
out
ja
int
mov
sbb
mov
xor
cltd
and
mov
push
mov
enter
lods
push
shrl
sub
lahf
push
push
cltd
jae
pop
fistpll
shlb
jp
mov
push
out
fisubrs
in
es
shlb
jns
inc
dec
xchg
aam
jne
insl
pop
fwait
enter
pop
push
out
push
mov
outsl
fildl
push
cli
mov
pop
rcll
fcompl
adc
js
inc
std
rorb
mov
in
sbb
and
sbb
mov
call
cli
mov
out
imul
stos
cmp
dec
stos
jbe
insl
add
aam
adc
cwtl
xchg
and
gs
inc
push
xchg
nop
adc
stos
sbb
adc
lods
cmp
test
xchg
push
stos
cmp
jle
pop
push
jl
and
mov
leave
ss
aad
bound
or
pop
into
push
fadd
xor
sbb
cmpsb
lret
outsb
mov
in
and
cmpsb
imul
lret
adc
lcall
jecxz
add
movsl
push
dec
cmp
xor
or
mov
xor
add
xchg
fstps
call
gs
pop
lcall
xor
pop
repz
xor
and
fxch
inc
andl
push
sbb
jmp
sbb
xor
and
cmp
pop
daa
lcall
iret
sbb
xlat
negl
mov
or
out
popa
rcr
jecxz
loopnew
mov
out
sub
adc
out
pop
sub
cmp
aaa
call
test
shl
sub
fists
rolb
rcrb
hlt
scas
lock
push
sub
fs
icebp
mov
movsb
lds
nop
lds
clc
mov
loop
stos
int
scas
movl
movsl
cmp
and
into
ss
mov
cmpsb
mov
sub
sub
push
mov
test
scas
out
jno
lds
push
gs
cmpb
fsts
mov
dec
mov
sbbl
xchg
pop
adc
mov
and
add
or
incl
sbb
push
dec
jp
mov
xlat
sbb
and
fidivrs
jnp
sbb
andl
add
test
add
xor
xchg
and
jo
pop
nop
les
cld
shlb
cli
mov
adc
and
push
inc
push
adc
test
pop
jl
mov
pop
add
mov
pop
lea
or
loopne
aam
mov
es
push
insl
aad
dec
and
stos
lea
push
gs
mov
inc
cmp
mov
mov
sbb
or
shlb
sub
mov
add
cs
push
loop
sti
add
inc
mov
leave
pop
popf
outsb
js
in
xchg
pop
sbb
lret
adc
iret
inc
sbb
cmpsl
pop
stos
push
imul
cmp
cwtl
hlt
jle
imul
ja
push
clc
popa
jge
outsl
push
mov
and
loopne
push
aam
inc
addr16
xor
seto
sub
xchg
inc
gs
je
pop
mov
xor
dec
arpl
orb
aam
aaa
test
mov
hlt
push
aas
push
mov
adc
shl
andl
adcb
or
ficomps
pop
movsl
je
push
les
mov
mov
mov
leave
aaa
jnp
popf
fnsave
cmpsb
loop
lret
add
mov
xor
test
jb
les
scas
jecxz
pop
mov
mov
rcll
push
rcl
fistpl
fwait
pushw
or
ret
sahf
inc
and
cmp
xchg
and
in
sbb
add
or
aas
and
je
mov
pop
cmp
sub
jbe
fldenv
xchg
lret
pop
jae
fs
dec
int3
arpl
sbb
fsubl
or
nop
add
and
shlb
mov
nop
add
and
push
pop
push
xchg
push
mov
cwtl
add
call
mov
cmp
mov
and
mov
sub
je
in
sti
scas
push
xchg
lods
insl
jnp
adc
xor
stos
dec
sbb
jns
out
lods
jmp
into
and
movb
mov
jmp
ljmp
aad
ret
daa
or
push
mov
leave
xchg
fwait
adc
sub
call
lods
inc
sbb
mov
mov
stos
inc
push
lret
in
or
jg
loopne
fwait
das
rorl
mov
repz
call
push
iret
hlt
ss
outsl
jae
fadds
subl
cmpsb
iret
mov
outsl
cs
repnz
lret
aas
xorl
clc
inc
orb
xor
sub
sub
push
dec
mov
lcall
mov
mov
popf
je
rorb
mov
cmpsb
push
pop
add
push
cwtl
xor
out
ja
int
mov
sbb
mov
xor
cltd
and
mov
lds
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
jg
and
jbe
bound
jg
shl
mov
fcomps
jne
sbb
push
inc
ficoml
xchg
push
jns
inc
in
scas
aas
test
stos
adc
pop
aam
fwait
leave
jecxz
or
das
push
roll
aas
xchg
xor
pop
sahf
not
int
add
push
inc
cwtl
dec
xor
cmp
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
scas
xchg
lds
and
or
inc
dec
adc
dec
add
jno
rcll
sti
mov
sub
inc
push
lds
push
push
inc
mov
lret
movsl
xor
xor
or
outsl
aam
or
mov
mov
push
mov
mov
std
ficoms
mov
and
scas
fistpl
xchg
cmp
pop
outsl
xor
xchg
mov
dec
shlb
les
scas
pop
or
mov
pop
testl
push
xchg
pushf
cmpsl
inc
imul
bound
jnp
adc
mov
rorl
sbb
pop
inc
shlb
inc
imul
call
and
lahf
xor
sub
in
cli
mov
cmp
mov
test
cld
repz
sbb
mov
sub
bound
push
push
jb
mov
jb
inc
jg
sti
int3
mov
inc
rcrb
push
dec
test
adc
lret
pushf
jne
aam
subl
outsl
clc
cmp
adc
cmp
test
pop
lock
sub
pmuludq
sub
push
mov
inc
movsl
icebp
sbb
sbb
push
ret
mov
mov
movsb
repz
test
lock
in
push
outsl
and
xor
xchg
sub
jne
insl
outsb
mov
sub
es
test
jmp
popa
xchg
xchg
test
xor
arpl
mov
imul
push
or
int
mov
add
xchg
leave
fnstenv
inc
insb
ret
jecxz
mov
sahf
pop
push
mov
cmpsl
test
aas
xchg
xor
jne
fwait
cmpsl
inc
popf
fistps
cmp
inc
inc
adc
gs
inc
and
mov
add
jge
adc
pop
movsl
pop
in
aaa
call
gs
mov
incl
push
lret
jecxz
cmp
push
inc
jecxz
xchg
lret
bound
enter
test
cmpsl
mov
adc
xchg
scas
insl
lret
sub
push
ja
inc
movsl
mov
jge
test
aad
filds
or
in
dec
and
or
sbb
xor
add
mov
std
inc
jnp
push
push
inc
jle
mov
cmp
dec
fs
xor
sbb
mov
inc
das
ret
cld
aas
or
popf
pop
cmpsl
icebp
cmp
mov
daa
push
adc
aas
pop
dec
iret
mov
cli
adc
push
test
dec
mov
out
xlat
fdivrp
xor
sub
pusha
mull
fdivrl
sti
icebp
mov
out
sbb
adc
adc
add
push
aad
lret
gs
loopne
cmc
mov
add
jge
adc
pop
movsl
pop
in
pop
xlat
divb
incb
test
add
in
mov
popf
loopne
roll
das
pop
rorl
add
fsubrl
dec
dec
xchg
dec
push
xchg
dec
mov
or
jmp
pop
loope
lcall
stc
jecxz
cmp
fiadds
push
push
sub
dec
or
dec
sub
push
cmpb
inc
lcall
dec
inc
scas
pusha
lahf
fistps
inc
leave
scas
dec
xchg
jp
mov
test
push
addr16
adc
arpl
pop
stc
add
adc
test
dec
mov
jne
test
or
push
repnz
xrelease
daa
mov
jo
mov
jb
stc
mov
int3
dec
pop
inc
xor
aad
dec
fdivrl
sub
mov
push
xchg
xchg
dec
adc
arpl
sbb
push
xchg
jl
mov
pop
add
cmp
sub
mov
sub
mov
xchg
es
push
mov
insl
aad
insl
and
adc
and
aaa
push
lea
mov
adc
cmp
sub
roll
push
mov
pushf
inc
orl
sub
jno
or
dec
dec
pop
jb
mov
or
jnp
leave
cltd
jbe
mov
stc
dec
es
jg
xchg
test
cmc
ljmp
adc
sahf
add
and
fwait
and
adc
mov
shr
jmp
jnp
out
mov
out
loopne
js
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
or
repz
lods
xchg
add
xchg
xor
jbe
mov
mov
imul
and
clc
push
aam
and
push
aas
mov
adc
outsl
mov
or
or
mov
ja
adc
mov
xor
and
ss
int
inc
mov
scas
lods
bound
movl
and
sbb
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
gs
pop
xor
mov
cs
adc
imul
rol
dec
jae
xor
jns
dec
mov
adc
lret
imul
sti
xor
jb
pop
outsl
or
test
pusha
mov
cltd
push
fstpl
sbb
xchg
xor
sbb
push
daa
int
adc
mov
movsb
ret
lock
loopne
mov
push
xor
in
test
inc
aad
js
sub
mov
das
iret
imul
push
mov
mov
fwait
dec
mov
and
mov
push
add
dec
push
fcmove
stc
inc
sbb
test
std
fnstenv
aam
sbb
ret
or
pop
push
scas
ja
test
adc
pop
ret
cli
movsl
mov
pop
mov
sub
mov
cld
or
addr16
scas
inc
fwait
das
cli
jo
sbbl
or
fldenv
rorl
inc
das
xlat
mov
shrb
pop
sub
mov
dec
call
push
rcl
jae
pushf
lods
pop
jae
fidivrs
lahf
cs
stc
pop
std
out
or
push
out
fldenv
inc
and
mov
pushf
cmp
stos
ljmp
movsl
jne
cwtl
mov
inc
inc
adc
pop
xchg
sbb
lret
movsb
jbe
ret
clc
sti
cmpsl
aam
iret
adc
dec
jnp
inc
sub
jae
add
mov
into
iret
inc
sub
imul
fisttps
push
test
mov
lea
push
lret
push
jnp
cmp
sahf
ja
pusha
mov
mov
cs
stos
fs
insl
or
xchg
push
mov
inc
mull
inc
lods
xchg
xchg
out
sbb
push
loopne
fbstp
filds
xchg
and
test
xor
out
ljmp
sarb
clc
jo
inc
dec
dec
add
push
xor
jnp
or
test
aam
sahf
cmpsb
sub
mov
fists
out
cmp
sbb
sti
mov
in
and
aas
lahf
es
dec
loope
pop
lods
enter
decb
and
in
js
mov
shl
jae
fcomi
pop
cs
daa
jp
or
xor
or
adc
icebp
leave
cmp
mov
mov
lock
push
icebp
nop
jle
sbb
outsb
and
cmpsb
shlb
push
pop
or
push
lea
push
lret
int
pop
sti
adc
xor
jbe
lods
push
fmuls
xchg
test
push
jne
mov
in
pop
gs
nop
push
loope
leave
pop
shll
xlat
int
sahf
pop
xchg
fxch
mov
lods
xor
fiaddl
scas
mov
pop
jno
insb
negb
mov
scas
pop
out
adc
xchg
pop
or
out
inc
or
repz
fldt
jb
fsubrl
data16
xchg
dec
enter
ss
repnz
leave
mov
mov
mov
jle
dec
push
les
andb
nop
and
xorb
dec
rorb
push
dec
push
push
adc
mov
pusha
test
cmp
ret
das
and
rol
inc
sub
rcrl
push
sbb
mov
imul
scas
leave
fimuls
push
out
jnp
dec
inc
popf
mov
jl
shrl
sbb
jne
addr16
flds
cld
test
fldl
push
adc
add
daa
pop
ret
fsts
push
subl
icebp
jo
rcl
lcall
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
addb
mov
das
outsl
iret
fxtract
cmc
rcrb
mov
out
ja
popf
cli
push
subb
dec
lods
out
popf
cmpsl
ret
rol
bound
ret
pop
shrl
xchg
test
cmpl
jecxz
mov
rcll
mov
sub
or
lods
lods
inc
pop
push
ds
loopne
mov
cmp
dec
adc
clc
lds
cld
outsb
ss
jo
or
lods
sbb
mov
cltd
xchg
and
mov
test
rorb
ss
xchg
scas
lods
pop
imul
scas
mov
fst
loopne
pop
fcomip
xor
and
rolb
stos
inc
repnz
jns
mov
push
popa
dec
leave
test
adc
jle
les
jecxz
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
repz
call
cmp
bound
xchg
gs
xchg
add
pop
outsb
aaa
inc
popf
push
jo
lret
stos
call
push
mov
fstpl
int3
pop
cmpsl
push
fwait
xlat
mov
dec
push
data16
shl
mov
pop
dec
inc
inc
loope
mov
xor
mov
sbb
mov
aam
pop
cmpsb
cmp
jo
arpl
pop
addl
cmpsl
dec
icebp
xchg
jle
das
jmp
push
mov
subl
xor
popf
arpl
sahf
bound
push
mov
mov
xchg
flds
pop
xchg
shll
sub
xchg
fstpl
sub
add
jge
imul
inc
std
mov
add
pop
cmpsl
pop
insb
ja
xor
xor
fiaddl
scas
mov
dec
mov
ja
pop
xchg
sarb
repz
push
mov
repz
xor
movsl
xchg
pop
test
out
xor
lods
outsl
mov
lods
add
pop
into
aad
mov
pop
out
sbb
and
cmp
call
movsb
lea
push
push
pop
push
test
cmpsb
repz
and
in
jne
or
pop
hlt
adc
imul
out
push
sub
rol
xchg
cli
rcll
pop
dec
leave
fsub
mov
adc
insl
xchg
cwtl
std
and
and
push
inc
push
push
or
adc
jmp
int
jno
fildll
in
mov
and
lods
push
xor
push
inc
jg
shl
movsl
mov
gs
pop
mov
sti
push
inc
arpl
enter
lods
mov
test
push
xchg
and
in
mov
push
pop
mov
mov
cmc
mov
jle
jno
sub
jl
sahf
add
les
stc
dec
mov
adc
dec
inc
adcl
mov
push
fmulp
mov
ret
addr16
xlat
sbb
xchg
push
and
les
inc
inc
mov
hlt
hlt
cmp
int
out
mov
mov
js
mov
bound
pop
sbb
push
adc
jo
push
sbb
push
and
outsb
fsubs
mov
lods
enter
or
sub
js
mov
sub
pop
ss
fwait
insb
test
lret
inc
in
dec
lea
mov
std
xor
stos
test
or
aad
push
rcll
movsl
inc
bound
inc
sbb
adc
mov
pushf
test
pop
pop
add
fs
pop
and
dec
inc
sbb
and
mov
mov
push
dec
in
pop
mov
es
jb
mov
mov
sbbb
mov
and
repnz
clc
mov
subl
out
mov
pop
dec
add
popf
loopne
fdivrl
sti
icebp
mov
out
sbb
adc
adc
add
push
aad
lret
gs
loopne
cmc
mov
add
jge
adc
pop
movsl
pop
in
pop
xlat
divb
incb
test
add
in
mov
popf
loopne
roll
das
dec
and
add
jbe
lea
dec
test
and
pop
sbb
or
insl
lahf
aam
and
bound
imul
jns
loope
pop
push
xor
sub
mov
repnz
sub
in
stos
aam
xor
inc
push
fsubrs
in
scas
aas
test
fisttps
clc
dec
fnsave
insb
out
pop
mov
scas
pxor
cld
repz
pop
pusha
sub
rorl
mov
fstp
outsl
cmp
leave
sbb
mov
xchg
xchg
mov
lahf
cmpsl
js
call
inc
iret
es
jae
inc
mov
enter
roll
popf
or
shlb
push
mov
subb
push
mov
push
jp
or
lods
jl
and
mov
mov
cmp
roll
add
decb
push
in
je
xor
test
imul
push
adc
call
mov
data16
fmull
lret
filds
cmp
in
jo
add
push
mov
ljmp
xchg
fcmovne
aad
adc
sub
xor
inc
mov
pop
lret
pop
ljmp
mov
rolb
and
ja
jo
mov
scas
or
call
mov
out
mov
js
std
jecxz
inc
repnz
repz
jns
outsb
out
sti
cwtl
inc
data16
add
add
jle
nop
inc
fs
inc
dec
adc
pop
sbb
test
and
sub
les
xor
push
cmp
add
push
mov
pop
leave
cmp
jae
les
lret
sub
mov
addb
jno
int
inc
rcrl
mov
pop
divb
jo
xor
sbb
or
sarb
xor
mov
add
pop
jb
lods
ret
movsb
std
and
cmp
xor
push
jmp
outsb
inc
fwait
leave
or
fstl
nop
dec
and
mov
sbb
ffree
insl
mov
sub
mov
xchg
mov
out
ja
popf
cli
push
pushf
scas
jmp
out
mov
push
dec
add
fwait
out
xchg
mov
xchg
mov
inc
adc
daa
mov
mov
and
mov
cmc
xchg
jmp
xchg
hlt
test
lods
lea
and
stc
lea
fsubs
sbb
jnp
mov
sub
inc
cltd
or
call
dec
cld
xchg
cld
jp
sarb
imul
mov
inc
out
cmp
adc
fsubrl
fstps
inc
cmp
or
xor
mov
mov
xchg
xor
xchg
int
gs
xchg
aam
jne
sbb
nop
xchg
jae
pop
loopne,pn
pop
jg
sub
cmpxchg
out
mov
mov
mov
pop
sub
loope
ds
scas
push
repz
xchg
mov
ds
je
dec
call
scas
push
jmp
pop
cmpsb
ret
jns
mov
les
pop
inc
xor
and
sub
xor
daa
loop
je
fadds
inc
ret
push
inc
mov
sbb
pop
vpavgb
mov
int
cmc
test
mov
cmovne
mov
aaa
lcall
adc
ljmp
cmc
add
mov
into
push
mov
insl
cmc
cwtl
inc
fcoml
ss
push
fidivs
mov
and
push
cmpsl
mull
call
dec
imul
movb
aam
push
repnz
rcr
je
sub
mov
les
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
xlat
incl
or
std
stos
push
mov
movsb
mov
imul
xchg
filds
clc
hlt
lcall
or
or
les
inc
push
test
in
xchg
pop
outsl
testl
cmp
mov
outsl
push
ret
sbb
dec
insb
push
and
lea
loope
aas
out
mov
loope
ret
xchg
inc
gs
imul
test
xor
int
sarl
ret
xchg
add
mov
popf
mov
les
es
sbb
pop
int
test
sbb
stos
jb
push
mov
insl
movsl
cwtl
icebp
and
adc
call
mov
mov
fwait
test
mov
pop
in
mov
fisttps
jno
and
mov
mov
insb
mov
inc
pop
push
dec
in
mov
mov
sub
popa
dec
ss
xor
xchg
inc
movsb
fidivs
pop
aad
jmp
fstl
pop
xlat
cld
adc
cmp
mov
fdivs
xchg
pop
nop
cwtl
mov
and
cmpsb
mov
sbb
cli
xor
or
sti
cmp
fdivrl
sti
mov
les
add
in
jecxz
mov
rclb
inc
popa
and
fwait
sub
stc
adc
stos
shl
mov
int
bound
xor
out
pop
xchg
sub
je
cs
mov
ss
adc
mov
pop
repnz
inc
mov
pushl
adc
test
test
cmp
hlt
jp
lahf
popf
cmpsl
fs
inc
dec
mov
lret
paddd
test
loop
cwtl
in
jg,pt
shl
je
sub
out
cltd
insl
jle
popf
enter
lods
sahf
das
movsl
int3
ljmp
shr
sbb
out
jno
insb
pop
mov
scas
pop
out
jg
out
aas
add
lea
sbb
mov
iret
aad
shlb
sbb
cs
push
mov
jl
xchg
push
enter
inc
push
popf
mov
iret
inc
outsb
ret
inc
cld
cmp
mov
fstpl
mov
add
cwtl
aam
clc
xchg
xchg
xchg
and
fisubrl
fsubrs
test
mov
pop
dec
pop
jbe
movsl
or
pop
sub
divb
stos
adc
jp
aas
in
and
mov
inc
dec
cmp
inc
and
or
push
add
sbb
es
call
xchg
fldl
xchg
shl
and
aaa
push
lea
aaa
insb
out
and
adc
call
cltd
insl
inc
dec
inc
xchg
fucomi
test
xchg
xchg
and
dec
push
jne
insl
outsb
call
into
adc
das
mov
movsb
into
fsubrl
sbb
repz
lds
popf
cmc
jmp
js
inc
add
movsb
push
push
inc
jl
das
push
iret
xlat
hlt
jbe
mov
add
xchg
shll
loopne
test
inc
lret
sbb
adc
jle
fildll
mov
mov
pop
add
xchg
add
mov
push
loope
sbb
aam
or
pop
in
pop
push
test
sbb
xchg
dec
scas
mov
xor
jecxz
xor
mov
roll
xchg
ds
inc
dec
fxch
test
dec
fwait
roll
dec
and
dec
cltd
sbb
rorl
dec
pop
lods
leave
push
sbb
and
scas
ljmp
adc
std
mov
add
scas
fsubr
adc
sub
and
xchg
fimull
mov
loop
cli
icebp
xchg
jmp
lcall
xchg
pusha
or
sti
fstps
mov
in
mov
inc
addl
mull
mov
shrb
pop
sub
mov
dec
mov
sub
jae
jnp
out
mov
out
jbe
jnp
dec
fsubs
out
loopne
mov
add
jno
push
aam
xor
xchg
jle
push
insl
nop
fisubrs
data16
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
or
mov
cmpsb
push
movsl
add
test
inc
mov
jns
cmpb
xor
aas
lahf
out
dec
and
aad
sbb
cli
mov
dec
sbb
inc
push
and
adc
inc
cmp
dec
movsb
jecxz
cld
dec
inc
fisubrl
orl
je
sub
addr16
insl
pop
fwait
mull
sub
fs
mov
adc
sti
xchg
inc
xlat
pop
mov
pop
mov
add
inc
adc
cmp
dec
rorl
push
mov
inc
jmp
or
xor
cwtl
cld
jle
insl
sbb
mov
daa
jbe
xchg
jne
jecxz
inc
popf
sbb
cmpb
xor
xchg
test
imul
or
mov
jbe
push
pop
push
nop
push
mov
push
jl
mov
stos
sbb
cmpsl
mov
nop
mov
mov
mov
and
adc
arpl
movsl
mov
sub
pop
mov
insl
and
mov
insl
jg
adc
mov
push
pop
mov
shll
adc
movsb
lret
xor
xchg
movb
roll
fsts
aam
imull
mov
jno
mov
dec
inc
adc
sbb
cmp
mov
dec
fistps
jno
dec
sti
icebp
arpl
ret
andl
stos
mov
cmp
lret
xchg
sub
and
push
cmp
in
scas
out
jp
mov
loopne
js
lock
lahf
loope
xlat
ds
test
ss
push
shll
or
ret
add
xchg
inc
stos
repz
mov
rcll
sbb
sub
cld
mov
mov
sti
leave
adc
sub
lea
jg
or
and
js
pop
adc
mov
movsb
pop
lods
inc
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
adc
add
xchg
dec
pop
in
enter
mov
movl
stos
xchg
mov
scas
push
jnp
out
scas
and
mov
stos
pop
or
out
hlt
pop
pop
lret
push
lret
bound
scas
popa
or
lea
push
or
xor
into
lock
sub
jo
rorl
orl
ret
cli
shll
inc
mov
rcll
fs
cmp
xchg
xchg
pop
cwtl
out
cwtl
je
enter
rcll
ret
inc
push
jb
adc
cmp
lods
imul
fcompl
adc
and
cmp
adc
popf
je
test
sub
idiv
sti
loopne
test
adcb
xchg
adc
bound
shrl
fst
outsl
mov
imul
pop
dec
ficoms
fldt
inc
lods
dec
push
xor
mov
aas
dec
imul
mov
lret
iret
xlat
mov
inc
and
enter
sarl
stos
and
sub
jae
in
mov
scas
shlb
hlt
dec
jbe
jae
mov
dec
flds
pop
ficomps
out
loope
sarl
xor
inc
add
andl
sarb
mull
into
sbb
movsl
cli
jg
in
jbe
imul
pop
fstl
pop
mov
imulb
gs
cltd
pop
adc
xor
cmpb
je
test
loope
and
arpl
adcl
aad
cmpsb
ret
test
inc
inc
and
add
inc
and
adc
xor
in
inc
cltd
aas
ja
int
popf
mov
icebp
xchg
jle
sbb
roll
insl
cmc
imul
test
icebp
testb
dec
inc
add
dec
mov
jno
push
popf
mov
mov
push
dec
in
clc
popa
mov
push
clc
mov
jns
gs
mov
pop
push
inc
pop
dec
out
js
orl
adc
scas
hlt
mov
mov
mov
sub
or
add
jecxz
out
xchg
adc
cmpsl
js
xorl
dec
movsb
inc
jmpw
or
sbb
mov
leave
mov
ret
mov
mov
pop
jle
adc
jb
lds
outsl
push
or
mov
xor
mov
jno
add
mov
push
mov
mov
jns
fldt
fbld
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
lret
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
cmpsl
sbb
fxch
push
test
fistps
jp
mov
push
out
ret
cmp
mov
les
je
out
mov
leave
pop
popf
enter
jnp
dec
call
or
mov
sub
mov
cld
mov
scas
pxor
ret
sti
mov
subb
pop
das
dec
iret
shll
pop
lods
fs
lcall
ss
dec
push
les
pop
cs
icebp
in
pop
pop
loope
loope
andl
add
fld
sbb
mov
and
je
jge
pop
mov
or
jmp
push
sub
repz
jnp
push
int
or
sbb
lahf
jmp
negl
stos
pop
rorl
arpl
cwtl
sbb
in
aas
dec
push
dec
mov
insb
jne
inc
into
push
mov
insl
cmc
cwtl
in
outsb
xor
hlt
cmpsl
mov
dec
ja
test
fdivl
dec
scas
pop
rcr
loop
insb
push
les
pop
sbb
clc
mov
jns
gs
jmp
push
insl
pop
fwait
pop
and
add
add
arpl
stos
jmp
iret
test
inc
xchg
in
fwait
and
cs
rorl
cs
fadds
mov
inc
pop
dec
lret
inc
inc
pusha
test
fwait
lods
lds
pop
pop
ret
adc
and
popf
scas
inc
pop
int3
mov
test
xchg
fistpl
xchg
jg
cltd
dec
xchg
mov
or
mov
jne
sub
xchg
jmp
sbb
xchg
add
fsts
inc
pop
cmp
leave
sti
int
fadds
mov
pop
jno
adc
push
pop
xchg
fldl
lcall
or
mov
and
mov
in
movsl
ret
insb
test
incl
popa
int3
pop
mov
mov
ret
mov
mov
fisubs
dec
inc
sbb
dec
fsub
ja
in
jg,pn
aam
dec
imul
jne
sbb
nop
out
mov
outsl
lea
push
push
pop
xor
fsubr
cmpxchg
out
jno
lahf
into
decb
pop
or
or
sti
inc
scas
push
repz
imul
sahf
mov
pop
out
xchg
out
les
out
dec
mov
fcoml
mov
imul
ret
push
outsl
popa
jne
insl
or
sbb
dec
leave
pusha
push
or
cmpsl
dec
loope
pop
lods
enter
push
jae
xor
jp
cmpl
push
mov
arpl
lds
rclb
inc
mov
lret
movsl
xor
mov
pop
sub
inc
arpl
add
sbb
jecxz
das
sbb
movsb
insl
cmc
cwtl
in
adc
jmp
je
test
test
add
mull
pop
in
mov
sbb
loop
fistl
rcrb
xorb
dec
mov
xchg
push
pop
push
inc
pop
dec
dec
pop
pop
push
dec
fs
cwtl
push
mov
sbb
adc
arpl
mov
std
pop
mov
popf
enter
jle
outsl
sti
nop
adc
es
clc
mov
add
dec
test
dec
je
mov
aam
pop
outsb
ja
aas
call
jp
mov
cmovae
pop
inc
sub
fdivs
cltd
push
adc
aam
xchg
shl
mov
or
mov
outsb
xor
xchg
dec
and
push
push
push
push
adc
sahf
call
iret
mov
rcll
jo
sbb
xchg
push
fninit
lock
arpl
fmull
inc
adc
add
xchg
xlat
sub
insl
fwait
ret
dec
lret
cltd
adc
stos
repnz
sbb
lahf
jne
test
mov
sti
cli
int
jbe
or
data16
icebp
call
test
sti
mov
sub
lcall
gs
mov
add
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
fidivl
add
jnp
sahf
sub
adc
mov
popf
outsl
pusha
into
add
and
push
outsb
add
adc
or
cmp
nop
inc
out
pop
insl
or
call
clc
mov
sti
mov
repnz
sti
mov
jecxz
cs
test
ret
or
mov
add
push
push
mov
les
lret
lahf
jb
pop
notl
sub
mov
add
in
push
jns
pop
ds
movsb
mov
push
mov
push
shlb
fcom
add
push
in
subl
xchg
and
adc
dec
pop
sahf
mull
int
sub
sub
sub
loopne
mov
add
adc
aaa
jecxz
scas
add
jns
xchg
enter
add
mov
nop
ljmp
cmp
mov
xor
ret
jae
mov
sahf
pop
push
mov
cmpsl
test
aas
xchg
xor
jne
fwait
cmpsl
inc
popf
sbb
cmp
inc
inc
adc
gs
inc
and
mov
add
jge
adc
pop
movsl
pop
in
aaa
call
addr16
lahf
bound
sub
repnz
add
addr16
call
subl
push
outsb
sahf
mov
sbb
and
mov
repz
lret
mov
jp
mov
lcall
movsb
in
mov
out
loope
jp
cwtl
push
inc
sarb
imulb
sub
inc
lcall
inc
xchg
mov
mov
mov
fucompp
xchg
outsl
or
movsb
std
repnz
cmp
jle
jp
add
jno
sub
int
les
and
push
inc
xor
adc
jmp
mov
es
add
dec
ficoml
xlat
lock
sub
pushf
sub
fidivrs
push
vpcmpeqb
sbb
sub
das
es
push
test
ss
xchg
test
popf
or
dec
adc
or
ret
bound
sub
pop
push
test
or
push
imul
jecxz
sti
popf
cmpl
rorl
and
cld
pop
inc
xchg
mov
fldenv
stos
cmp
lock
push
mov
shl
jmp
scas
lods
pop
imul
pop
push
mov
shrl
fisttps
xchg
stos
inc
repnz
sub
shlb
xor
fs
fistps
inc
leave
cmpsl
push
xor
xor
push
push
or
push
enter
arpl
das
push
roll
dec
pop
or
iret
iret
jl
cmpsb
push
sbb
jbe
aas
push
and
pop
iret
inc
stos
push
shll
pop
dec
add
mov
add
and
dec
cltd
addr16
xchg
mov
push
je
test
cmpsl
jns
dec
xchg
lcall
pop
inc
pop
push
mov
sub
or
lods
lods
inc
pop
cmp
pop
loopne
mov
cmp
dec
adc
clc
lds
cld
outsb
ss
jo
or
lods
sbb
mov
cltd
xchg
and
mov
test
rorb
ss
xchg
sbb
push
jmp
imul
lds
mul
negl
js
mov
stos
inc
repnz
int
add
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
jl
call
je
jmp
ds
popf
pop
xor
adc
rolb
sub
xchg
xchg
pop
inc
mov
dec
sti
jno
xchg
cmc
mov
addl
mov
pop
xchg
cltd
test
outsl
inc
test
push
inc
mov
cwtl
mov
pop
inc
mov
or
add
lds
or
mov
mov
lods
adc
dec
lret
mov
push
cmpl
or
push
fisttpl
xchg
jle
and
divl
and
jbe
and
mov
icebp
nop
add
movsb
insb
push
sub
push
mov
insl
aad
insl
and
mov
popa
lods
fldt
ljmp
inc
bound
cmpsb
push
lea
cmp
lds
subb
adc
ss
jb
les
scas
pop
or
ret
push
mov
pop
testl
push
xchg
pushf
cmpsl
inc
imul
bound
jnp
adc
mov
rorl
cmp
pop
inc
shlb
insl
test
rorl
dec
aam
fs
mov
adc
test
sub
jae
fidivrs
pop
xlat
negl
scas
lods
out
mov
lret
push
ficompl
cs
dec
in
scas
fisubrs
mov
jecxz
leave
inc
pop
sbb
push
inc
push
xchg
push
in
dec
dec
rcrl
jae
add
inc
cli
arpl
or
dec
xchg
dec
inc
adc
cli
add
aam
sbb
sbb
xor
aam
dec
test
dec
aas
outsb
xor
stos
dec
in
ficoml
jmp
mov
dec
cltd
out
fisttps
mov
xchg
lds
sub
into
push
sarl
mov
cmp
sbb
xchg
push
cmc
add
xchg
imulb
inc
lcall
pop
les
outsl
lea
push
inc
pop
xor
xchg
movzwl
outsb
movsb
test
xor
fs
pusha
fsts
add
incl
add
leave
cmpsl
and
testl
xlat
push
add
stos
xchg
in
cmp
cli
xor
sub
adc
incb
shrl
xchg
mov
mov
mov
ret
xchg
mov
ret
push
xchg
sti
mov
fildl
iret
je
ret
arpl
lds
movsl
sbb
iret
addl
imul
in
jns
add
or
insl
cwtl
ret
das
inc
cwtl
iret
movsl
mov
cld
dec
and
fimuls
push
imul
dec
and
out
icebp
stc
jnp
dec
push
and
adc
add
adcl
je
sub
in
stos
xchg
mov
scas
push
and
sub
push
bound
or
ret
iret
in
popf
sub
add
addr16
mov
push
or
xchg
inc
sbb
add
add
or
ds
push
adc
pushf
jmp
nop
popa
cmpl
lahf
push
lds
test
sub
dec
jbe
jg
lahf
dec
rorb
shll
outsb
add
adc
or
dec
adc
divl
ret
xorb
inc
push
pop
push
test
jge
pop
aas
dec
jae
add
inc
scas
rcrl
leave
xor
mov
or
outsl
aam
sub
push
inc
arpl
mov
in
push
push
push
cmp
xor
push
sahf
scas
mov
ljmp
fnsave
cmpsb
loop
bound
ss
outsb
test
add
and
and
push
cmp
pop
sub
outsb
add
dec
rolb
jb
fsts
xchg
push
jns
push
in
cmpsb
ret
mov
adc
pop
xor
mov
cs
or
xor
pop
or
xchg
fnstsw
clc
push
jmp
push
cmp
xchg
imul
push
gs
push
or
shll
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
and
es
mov
add
inc
inc
add
cmpb
sti
stos
inc
sahf
fistpl
clc
cmp
mov
mov
sbb
pop
int
xchg
cld
jg
cmpsl
xlat
cmc
push
mov
mov
outsb
xor
push
inc
push
push
or
and
das
push
jno
xlat
jbe
sbb
lock
iret
push
nop
sub
add
push
xchg
ja
in
addl
xchg
and
sub
dec
stos
inc
in
pop
lods
mov
mov
fwait
mov
popa
shr
pop
sub
cmpxchg
out
jno
insb
out
pop
mov
out
or
cld
icebp
mov
or
enter
cmp
or
ret
dec
fcoms
outsl
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
insb
test
jae
enter
lret
int3
and
add
and
push
inc
push
push
push
lds
orb
daa
jb
sub
xor
divl
es
test
dec
jecxz
rol
and
jl
or
push
pop
bound
push
cld
pop
outsb
fistl
insb
jnp
inc
sub
jecxz
cmp
into
int3
in
jne
pop
xchg
cmp
ret
push
xchg
int3
add
xchg
or
testl
imul
es
or
test
sbb
xchg
and
sarb
test
shll
jecxz
scas
add
jns
les
sub
xor
stos
push
add
push
dec
mov
and
lea
mov
xchg
mov
notl
int3
fwait
nop
xchg
xor
gs
rcll
inc
add
bound
insb
or
cmp
sbb
daa
jne
jnp
xchg
dec
fstl
inc
sub
sbbl
pop
sti
mov
ret
hlt
mov
mov
xor
mov
mov
cmpl
mov
inc
ret
dec
and
mov
ficompl
push
mov
jg
adc
pop
push
push
mov
scas
fistl
inc
jg
mov
scas
pop
pop
cmpsb
loop
orl
inc
stos
sbb
fildl
add
xchg
aad
xchg
test
dec
mov
dec
xor
xchg
xchg
inc
push
fsubrs
sbb
ds
test
push
addr16
adc
arpl
pop
stc
add
adc
test
dec
mov
je
test
or
push
repnz
xrelease
daa
mov
jo
lret
mov
jb
stc
mov
int3
into
sbb
aad
dec
movsl
dec
insb
jmp
xchg
mov
shr
mov
rcrl
repnz
int
pop
add
push
push
push
bnd
push
sbb
sub
insl
fildl
add
inc
rcl
jo
cmpsl
pop
daa
add
adc
cmp
sub
inc
cmpsb
loop
adc
dec
int3
dec
cli
leave
sbb
mov
test
fbld
sbb
mov
xchg
repz
sub
icebp
add
cmp
sbb
xchg
push
inc
pusha
jo
decb
fwait
add
jge
jns
push
sbb
add
sbb
cltd
shll
inc
dec
je
bound
fwait
inc
and
roll
bound
sbb
bound
pop
cmpsb
xchg
lods
out
cmp
out
std
adc
js
mov
fs
jnp
or
lock
mov
jne
sbb
mov
addr16
fcmovb
loope
orb
xor
sub
sub
push
dec
mov
lcall
mov
mov
popf
je
cld
dec
sub
idiv
sti
dec
cmpsb
push
pop
add
push
cwtl
xor
out
ja
int
mov
sbb
lahf
orb
xor
cltd
and
mov
lds
ss
mov
icebp
lods
fisubrl
ljmp
pop
sub
mov
aam
dec
push
bound
sub
int3
adc
and
in
jg,pn
shl
je
sub
sub
aad
xchg
dec
arpl
xchg
ret
pop
mov
sbb
fidivrs
jge
dec
push
inc
jmp
fsts
mov
dec
cwtl
loopne
aam
inc
addr16
jge
mov
mov
out
jae
lock
mov
cmpsb
arpl
clc
xor
icebp
bound
mov
pop
inc
mov
or
add
dec
popf
sub
imul
inc
loope
jmp
ds
int
loop
lret
movsb
pop
push
sbb
push
xor
je
xor
je
add
outsl
hlt
sbb
push
inc
out
mov
xchg
scas
sub
int3
dec
pop
fwait
dec
inc
mov
pop
push
ljmp
mov
insl
pusha
cmc
cmpsl
dec
sbb
lods
fldcw
data16
mov
push
add
add
addr16
rcrl
pusha
fwait
pushw
shlb
jecxz
sahf
sahf
xchg
cmp
js
adc
fwait
leave
xor
rcrb
or
sub
shrl
push
lret
cmc
ret
fisttpl
dec
and
push
std
mov
pop
and
jae
mov
loop
cmp
call
jns
outsb
repz
cmpsl
or
sub
push
jmp
dec
mov
adc
jnp
lret
mov
imul
iret
jp
incb
mov
sbbl
dec
int
jle
pop
mov
add
add
test
lock
clc
add
pushf
cld
ds
dec
push
pop
ljmp
cmpsb
sub
ss
xchg
insb
mov
lret
inc
std
scas
dec
in
pop
push
fbstp
xor
mov
or
aad
push
rcll
movsl
inc
bound
inc
sbb
adc
mov
pushf
test
pop
pop
add
lods
pop
dec
jbe
mov
push
pop
arpl
xchg
shr
cmc
xchg
mov
int3
pusha
xor
rorl
mulb
cwtl
adcb
cmp
das
outsl
iret
fxch
cmc
loop
xchg
pusha
mov
lret
ret
popa
mov
test
xor
jb
aaa
ret
bound
cmp
icebp
push
jle
jg
push
inc
adc
ret
add
push
aad
lret
gs
loopne
cmc
mov
add
jge
adc
pop
movsl
pop
in
pop
xlat
divb
incb
test
add
in
mov
popf
loopne
roll
das
insl
leave
cmc
cld
or
jmp
lahf
push
cwtl
lret
jae
fnstcw
hlt
xchg
push
das
jno
xchg
add
mov
test
lods
mov
sub
jb
and
dec
inc
loop
rorl
sbb
repnz
call
lret
sub
mov
mov
jbe
stos
push
rsqrtps
ret
mov
xchg
and
test
xchg
stc
and
jb
add
cs
sub
icebp
xchg
jbe
popf
inc
aam
lret
fwait
adc
dec
mov
push
scas
fcomp
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
testb
or
jb
dec
sbb
fdivs
ret
orb
aaa
sbb
fistl
inc
sahf
cmp
fbld
stos
iret
mov
push
aas
jmp
clc
add
cld
ds
popl
cmc
add
xchg
fdivs
data16
dec
cmpsb
mov
mov
or
jmp
fidivrl
and
adc
inc
ds
lret
pop
push
sahf
jnp
popa
mov
adc
and
iret
xlat
xchg
jnp
mov
fcmovne
aad
hlt
pushf
xchg
adc
pop
popf
fwait
dec
xchg
cltd
lret
add
sahf
adc
or
sub
mov
add
jecxz
jl
mov
les
decl
jns
js
inc
cmp
or
pop
and
cwtl
push
gs
inc
push
jae
fwait
fistl
inc
fsubs
out
xchg
int3
pop
sub
addl
push
test
out
xlat
int
imul
sahf
dec
movsl
or
pop
inc
pop
mov
mov
inc
push
mov
sarl
fldt
fildll
cwtl
cmp
or
add
scas
lock
add
mov
cmc
sub
jp
inc
push
pushf
sbbb
jl
nop
xor
out
testl
aas
fbld
negl
fs
movsl
cmp
mov
lret
movb
inc
rorb
inc
pop
or
pop
lret
not
in
aam
arpl
enter
sti
push
inc
xchg
push
mov
adc
jns
jo
stos
cmp
bound
add
popa
mov
enter
fdivs
fistl
roll
cmp
rcll
adc
test
mov
push
gs
pop
xchg
jns
out
cmp
es
movsl
jne
dec
inc
adc
dec
rorb
hlt
xor
and
int
adc
xchg
pop
pop
imul
mov
dec
cmpsl
push
jne
dec
pop
jecxz
mov
adc
or
fs
arpl
out
inc
sbb
jo
or
adc
mov
sub
dec
inc
xchg
mov
jl
shrl
inc
in
lods
dec
sbb
sbb
nop
push
aad
jmp
outsb
bound
callw
mov
pop
ret
fsts
push
subl
icebp
jo
rcl
lcall
lcall
mov
sub
btr
addr16
test
inc
movb
std
rcrb
in
jge
or
sub
fmuls
sti
fbld
daa
or
into
out
inc
insl
jmp
mov
adc
mov
mov
cmp
enter
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
sbbb
cmp
cmpb
test
imull
pop
loopne
mov
push
cmc
sbb
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
sbb
ss
or
in
pop
xor
cmp
dec
add
mov
rcrb
jnp
leave
pop
mov
ficoms
leave
xchg
xchg
ljmp
daa
mov
addb
test
push
mov
add
pop
fistpl
pop
mov
dec
or
sti
jb
xlat
shr
lock
fst
pop
fld
loope
inc
jecxz
fcoms
mov
test
out
subl
fsubr
mov
jge
dec
pop
fists
enter
not
xor
ja
iret
inc
fcmovnu
mov
adc
sahf
mov
adc
mov
shlb
mov
cwtl
jnp
scas
cwtl
or
jne
pop
pop
jb
movsb
mov
stos
jecxz
push
mov
cli
mov
mov
lds
pop
insb
test
std
mov
adc
mov
mov
dec
xchg
jmp
lret
shrl
mov
das
mov
popf
mov
xchg
xlat
pop
xchg
sub
cltd
jno
insb
out
jecxz
cmpl
mulb
cltd
scas
push
or
adc
std
subl
xchg
mov
scas
mov
out
jae
pushf
mov
jnp
mov
and
aaa
ret
and
popf
int
mov
xor
push
pushf
add
jmp
push
mov
test
sbb
mov
mov
movsb
ret
lock
arpl
push
and
imull
adc
inc
adc
pop
xor
sbb
add
ljmp
cmpsb
cltd
lods
icebp
mov
subl
cmp
pop
movsb
fisubrl
inc
cmc
sbb
out
push
cld
mov
bound
data16
iret
idivb
scas
pop
repz
mov
cmpsb
dec
sub
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
lods
ret
mov
lret
push
pop
mov
test
arpl
jl
ret
inc
add
arpl
dec
add
add
or
icebp
xchg
sub
dec
lret
fidivrs
jge
imul
sbb
sti
clc
int3
outsw
sbb
mov
stc
in
jbe
out
inc
sbb
xchg
push
hlt
cwtl
movsb
popf
xchg
and
mov
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
repnz
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
jl
or
xchg
call
dec
data16
ds
jle
mov
pop
inc
pop
push
fsubs
or
fyl2x
xor
lret
mov
jle
lods
sbb
std
call
shll
cwtl
cld
lds
mov
push
adc
stos
xchg
shll
pop
dec
dec
ja
loop
xor
repnz
pop
dec
into
fcompl
pusha
test
or
inc
dec
hlt
jle
nop
pop
fs
pusha
pop
or
xor
pop
daa
and
aaa
or
test
mov
xor
fstl
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
mov
mov
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
cmpl
xchg
test
mov
mov
mov
dec
pop
push
mov
gs
jmp
mov
dec
mov
pop
push
rorb
dec
out
sbb
jg
xlat
adc
decb
pop
movsl
arpl
add
inc
sub
sahf
add
xchg
adc
mov
and
dec
add
int3
and
imul
jbe
jg
sti
xor
jnp
clc
les
push
adc
mov
je
sbb
add
daa
jmp
fisubs
ljmp
and
xchg
jb
sbb
mov
dec
inc
loope
repnz
add
inc
mov
aam
aaa
mov
mov
std
popa
int
pop
fcomi
imul
adc
subb
mov
insl
cmc
imul
push
adc
and
ss
int
inc
add
sti
repnz
scas
mov
in
mov
lods
adc
mov
pop
mulb
mov
inc
cmp
int
jl
cs
inc
in
fwait
xchg
pop
inc
pop
movsb
mov
mov
dec
aad
xor
push
leave
inc
pushf
xor
inc
fisubrl
adc
dec
gs
pop
pop
mov
popa
cmp
aas
sbb
lcall
stc
js
pop
cmc
or
ficoml
lret
xchg
mov
inc
sbb
sbb
insl
test
outsb
lcall
adc
or
jno
nop
setl
mov
int
and
data16
rcll
add
pop
push
call
lret
arpl
sbb
pusha
pop
jge
push
sub
adc
lds
pop
mov
sbb
daa
adc
lahf
jbe
push
mov
dec
add
je
es
xchg
mov
dec
sahf
mov
outsb
xor
and
cmp
xor
aas
jmp
xchg
mov
repz
pop
outsb
push
roll
push
push
mov
mov
or
sbb
lods
jge
insb
ss
jnp
xchg
add
movsb
repnz
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
cwtl
push
scas
xor
and
adc
cmpsl
mov
jg
repz
mov
mov
mov
aam
ret
cmp
mov
sbb
jo
or
leave
or
movsb
popf
xchg
sbb
push
mov
bound
jle
mov
cltd
ljmp
cmp
mov
inc
cmp
inc
pop
adc
les
je
in
sti
scas
push
xchg
mov
int
jnp
and
out
lods
jmp
into
and
movb
mov
jmp
ljmp
aad
ret
daa
or
push
mov
leave
xchg
fwait
adc
sub
test
insl
repz
es
sahf
pop
mov
sub
mov
test
lret
xor
das
push
mov
mov
out
push
cmp
scas
xor
lcall
shrb
xchg
incb
movsb
jno
or
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
jge
addl
push
sub
lret
addl
int3
lcall
jne
add
into
fwait
cmp
mov
lock
push
inc
jecxz
xchg
leave
arpl
cwtl
pop
push
jno
fst
dec
mov
sub
mov
test
push
stos
lods
scas
imul
mov
vpsllw
pop
lahf
push
test
jmp
pop
inc
orl
sub
rorl
dec
dec
pop
jb
mov
or
jnp
leave
cltd
jbe
inc
or
std
stc
dec
es
jg
xchg
test
cmc
ljmp
adc
mov
and
fwait
and
xchg
jne
pop
lret
inc
lods
xlat
xchg
mov
outsb
or
sub
jl
aas
xlat
mul
jle
mov
cwtl
inc
sbb
movl
xchg
arpl
shll
popf
cltd
mov
add
pop
pop
sbb
push
inc
push
push
cltd
shr
movsb
ret
es
repnz
enter
jle
dec
cmpsl
cmp
sbb
aas
ja
int
dec
push
xchg
fisubl
ja
xor
sub
ss
hlt
test
fisttps
aad
test
mov
mov
stc
inc
repz
adc
div
arpl
lds
pop
adc
push
mov
ficoml
jmp
pop
stos
fsts
loopne
outsb
int3
sub
gs
adc
adc
das
jp
mov
fwait
leave
cld
mov
das
and
out
fiaddl
push
ljmp
int3
or
inc
int
sbb
adc
and
sub
lret
imul
sti
xor
jb
pop
outsl
or
test
pusha
mov
cltd
push
ljmp
shlb
xor
sbb
push
daa
lea
or
xor
jnp
cmpsb
repz
and
push
sahf
cmp
adc
and
clc
push
xchg
adc
leave
cmp
xchg
mov
xor
mov
xor
mov
psrld
xlat
insl
aad
in
das
mov
movsl
fistl
lea
lret
mov
adc
inc
aas
adc
dec
inc
mov
lds
nop
mov
cs
stos
push
repnz
xchg
xchg
and
adc
xor
dec
scas
lds
sbb
into
xor
sti
mov
mov
lock
ja
or
or
push
xchg
add
mov
out
mov
stos
adc
sbb
jp
fst
jge
mov
mov
out
ja
fisubs
push
mov
out
call
jmp
jecxz
loopne
pushf
aad
or
inc
and
mov
dec
out
adc
adc
inc
cmc
imul
bnd
inc
mov
pop
inc
inc
mov
and
rolb
out
inc
sbbl
mov
pop
leave
cmp
les
nop
xlat
dec
sbb
push
shrl
sub
mov
loopne
pop
fcomip
xor
and
push
stc
and
pop
mov
add
add
push
mov
movsl
nop
add
mov
mov
leave
ljmp
and
inc
xchg
daa
jb
adcb
xchg
jge
inc
insb
out
fwait
lea
test
bound
mov
into
iret
cmp
cs
push
pop
lcall
shlb
mov
pusha
add
mov
sub
ja
aas
cmp
mov
in
inc
cmc
xor
add
lret
out
fdivs
scas
jg
dec
add
xor
mov
pushf
ja
push
roll
shrl
into
fwait
sbb
ja
sbb
scas
call
and
sub
or
mov
lret
inc
sub
rcrb
sbb
fbstp
push
push
test
pop
sahf
adc
and
out
cmpsl
adc
cmp
std
sahf
jge
ljmp
inc
cs
stos
push
repnz
push
push
daa
cmpsb
dec
sub
cltd
mul
out
sub
arpl
mov
in
fsts
popa
xchg
xchg
dec
xchg
icebp
pop
mov
pop
sub
mov
jg
out
das
dec
je
inc
dec
addr16
sub
cmpsl
or
int
sbb
fcomp
push
lret
imul
ret
push
outsl
popa
jne
insl
or
sbb
dec
leave
pusha
push
or
cmpsl
dec
loope
xchg
lods
enter
push
jae
xor
jp
cmpl
push
or
arpl
lds
rclb
inc
mov
lret
movsl
xor
inc
clc
fbstp
jmp
ss
movnti
dec
mov
movsl
push
aad
jbe
mov
inc
inc
ret
scas
arpl
mov
ja
lds
inc
ret
inc
dec
push
mov
in
mov
inc
sbb
xchg
out
inc
xor
push
mov
mov
int
or
inc
nop
rcrb
mov
add
sbb
sbb
enter
int
and
fcmovbe
cmp
mov
mov
pop
and
adc
cmp
and
xor
xchg
ficompl
and
xor
gs
inc
pop
scas
ror
repz
inc
mov
mov
nop
sbb
xchg
imul
push
dec
push
xchg
push
mov
mov
push
sub
gs
push
mov
stc
adc
inc
ret
rorb
adc
stos
add
inc
cmp
outsl
in
and
dec
mov
insb
fsubs
sbb
push
fistl
addb
mov
mov
xchg
dec
ds
cmc
fldenv
pop
xor
xchg
xor
inc
pop
jae
lret
nop
sbb
push
test
jo
rcl
lcall
push
int3
fisttpll
xchg
dec
ficoms
mov
stc
and
popa
jg
cld
xor
add
pop
sub
mov
orl
in
popa
pop
push
ret
adc
push
mov
js
fldl
lods
sti
mov
pusha
sbbl
ja
dec
push
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivs
imul
xor
sub
gs
jnp
hlt
leave
popf
add
jp
inc
pop
adc
xor
mov
pop
leave
sbb
adc
xor
mov
pop
sahf
adc
pop
cmp
push
ret
mov
jb
push
adc
movsb
repz
dec
inc
sub
sub
or
je
sbb
mov
dec
xchg
aam
out
sbb
mov
xchg
sub
es
test
push
pop
imulb
pop
and
and
icebp
jle
pop
xor
addr16
out
das
add
cs
xchg
mov
push
lret
mov
pop
popa
stos
repnz
lahf
sub
pusha
icebp
mov
fistpl
inc
lret
loop
and
daa
je
leave
aad
jecxz
sbb
pop
aad
inc
ret
fcom
test
shll
out
mov
pop
jns
adc
push
sub
ja
sahf
je
ds
cmp
repnz
mov
mov
mov
sub
imul
jns
pop
repnz
push
mov
sub
mov
gs
push
int3
jno
mov
lea
divb
shrb
in
jp
andb
or
xor
xchg
cwtl
cmp
stos
jbe
pop
in
mov
xchg
pop
xor
adc
inc
fdivl
jecxz
fistps
adcb
loop
in
dec
and
aam
mov
sbb
push
rclb
mov
pop
sub
mov
mov
lahf
shl
fld1
jb
jb
mov
jae
inc
mov
enter
roll
popf
or
shlb
das
in
cmc
testb
test
sarl
add
adc
loopne
std
into
lcall
mov
cmovge
lcall
jg
aad
pushf
ret
pop
mov
hlt
mov
arpl
ret
std
lock
lds
push
clc
sub
jne
mov
jo
mov
xchg
inc
repnz
sahf
jge
loopne
sbb
or
mov
in
pop
sub
daa
je
loop
pop
cltd
enter
adc
sbb
lds
xchg
adc
pop
push
jno
insb
out
test
xchg
out
sar
jg
cmpsl
dec
sbb
je
inc
dec
sbb
mov
jmp
pop
int3
inc
dec
mov
jp
stos
adc
xchg
inc
add
icebp
outsl
in
push
dec
lds
xlat
push
pop
divl
and
cmpsb
je
enter
mov
test
add
shlb
push
xor
cs
cmp
ja
mov
mov
dec
sbb
out
and
or
clc
sti
jne
jp
sti
push
push
and
daa
add
test
or
jle
mov
cmp
ret
xchg
and
mov
xor
xor
jbe
xchg
mov
mov
inc
orb
ljmp
mov
aam
adc
mov
ret
loope
or
push
mov
gs
push
mov
xchg
nop
xchg
mov
outsl
xor
push
and
inc
cld
ja
adc
fadd
push
bound
cmpsl
xchg
scas
push
mov
add
in
inc
dec
cmp
push
mov
lea
jmp
mov
pop
fiadds
mov
adc
xor
and
je
pop
adc
es
cmpb
xchg
sub
mov
mov
mov
add
ljmp
repz
xor
adc
push
cwtl
add
push
mov
sbb
pop
int
jmp
mov
int3
arpl
inc
sbb
movsl
mov
push
dec
and
lahf
xchg
mov
mov
fildll
in
inc
mov
xor
jmp
stos
sub
cmp
mov
cli
xor
mov
jp
cmp
dec
int
pop
lcall
roll
dec
jb
inc
fimuls
sahf
xchg
jl
call
je
imul
lret
adc
rolb
sub
xchg
xchg
pop
inc
mov
inc
repz
xchg
cmc
mov
addl
mov
pop
xchg
cltd
test
outsl
inc
test
push
inc
mov
cwtl
mov
mov
jle
inc
push
shr
mov
fstpl
je
insb
scas
lcall
and
push
adc
inc
dec
call
xchg
sti
xlat
add
mov
mov
adc
cmp
and
dec
mov
insb
sub
xchg
cmc
in
cmp
add
sub
call
mov
lahf
stos
sub
shrl
frstor
imul
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jae
or
fldcw
stos
jne
add
inc
int3
aad
pop
sbb
test
pushf
shrb
and
popf
jge
jo
popf
mov
jne
sahf
fidivrs
sbb
addl
mov
test
pop
orb
adc
and
fidivl
add
out
mov
mov
repnz
jge
push
int3
xchg
fwait
and
out
sbb
adc
addl
jb
aad
lret
gs
das
out
cmc
xor
pop
das
jge
adc
pop
movsl
pop
in
pop
xlat
divb
incb
test
add
in
mov
popf
loopne
roll
das
dec
and
add
jbe
lea
dec
test
and
pop
sbb
or
insl
lahf
aam
and
bound
lret
push
bound
cs
adc
xor
cs
stos
push
or
shl
je
fisubrs
cmpsb
dec
sub
scas
push
and
sub
jecxz
test
pop
and
xchg
xchg
cmp
inc
mov
or
sbb
je
jge
jecxz
inc
mov
jo
rorl
xchg
cltd
xor
and
sub
lret
imul
sti
xor
jb
pop
outsl
or
test
pusha
mov
cltd
push
fucomp
ljmp
shlb
xor
sbb
push
daa
lea
or
xor
ljmp
push
sahf
cmp
adc
repz
push
cld
leave
inc
lahf
lret
jecxz
mov
or
jl
add
xor
fsubrl
inc
push
push
lds
insl
lods
into
mov
pop
push
ljmp
lea
lret
push
insl
pusha
cmc
cmpsl
dec
sbb
lods
fldcw
data16
mov
push
add
add
addr16
rcrl
pusha
fwait
pushw
xorb
jecxz
sahf
sahf
xchg
cmp
js
xchg
xor
fwait
leave
movsb
mov
xchg
push
inc
scas
pop
out
cld
jb
mov
lock
cmp
mov
loopne
testw
jns
jp
fisubrs
ljmp
fists
jecxz
cmp
aas
ja
xor
bound
add
push
mov
insl
popf
fisubrs
push
test
sbb
stos
cmp
ss
mov
mov
pop
pop
inc
pop
adc
add
cs
scas
push
or
add
adc
lret
mov
cwtl
fildll
shll
incl
adc
test
pop
push
xlat
out
icebp
cmp
outsl
sahf
pop
xchg
iret
loope
pop
ret
adc
fsub
ja
push
push
cwtl
mov
aam
xor
rolb
xlat
push
mov
lods
testb
xchg
jbe
mov
rcrl
ret
or
scas
mov
leave
jecxz
pop
cmp
das
rorl
scas
outsb
test
lds
inc
xchg
jne
pop
andb
adc
pop
mov
arpl
xchg
aas
movsl
dec
fistl
cmpsl
sbb
cld
inc
test
inc
inc
mov
pushf
mov
hlt
lods
ljmp
movsl
jne
cwtl
mov
inc
inc
adc
pop
xchg
sbb
lret
mul
jbe
ret
clc
sti
cmpsl
aam
iret
adc
dec
jnp
inc
sub
jae
add
mov
into
iret
inc
sub
imul
ret
stos
push
adc
test
pop
push
shl
repz
ss
popf
lret
push
lds
inc
es
iret
push
mov
enter
sarl
stos
xor
sub
dec
mov
stos
movsl
jle
enter
sub
adc
mov
outsb
js
fidivs
xchg
inc
sarb
jl
arpl
iret
add
add
pop
sub
or
test
dec
mov
cmpsl
clc
mov
adc
stos
cmp
dec
test
fwait
insl
ds
fstpl
je
sbb
aaa
sbb
mov
in
scas
int3
fwait
lds
stos
xchg
mov
jnp
adc
mov
mov
cld
mov
sbb
in
xor
in
push
cmp
arpl
push
sub
cwtl
mov
or
mov
xchg
xchg
mov
inc
rorl
and
adc
and
aaa
push
lea
mov
adc
cmp
sub
roll
push
mov
orb
mov
push
pop
lds
adc
lcall
push
js
jbe
mov
in
ljmp
xchg
dec
and
add
repz
or
loop
cwtl
add
xor
sub
xchg
xchg
aas
inc
mov
addl
add
sub
movsb
inc
sbb
das
sti
jb
test
mov
ja
cmp
and
add
sbb
mov
xchg
jle
push
insl
test
test
data16
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
mov
sub
xor
enter
add
leave
jae
mov
xor
cmp
push
aad
sbb
sti
push
xor
mov
mov
mov
repz
xor
jbe
pop
sahf
xchg
mov
sbb
cltd
or
shl
je
sub
sub
pop
push
and
sub
jmp
ficompl
mov
sahf
pop
and
add
addr16
cmp
es
pop
scas
pxor
ret
sti
mov
leave
lock
jl
das
dec
iret
shl
idivl
outsl
outsl
int
adc
scas
jmp
pop
cmpsb
ret
jns
out
mov
cmp
aam
xor
repnz
mov
dec
inc
dec
push
xchg
xchg
pop
pop
and
or
loopne
cmp
adc
mov
and
jp
insb
and
pusha
or
pusha
jae
les
xor
mov
push
scas
jecxz
or
mov
scas
jno
inc
add
mov
push
xchg
cwtl
icebp
mov
xchg
sub
inc
mov
movsb
hlt
xor
pop
push
inc
ds
lret
push
gs
mov
or
dec
out
add
scas
push
mov
fmuls
or
xchg
xchg
mov
gs
adc
adc
bound
lahf
orl
mov
dec
sarb
rorb
cmpsl
or
repnz
imul
xorl
mov
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
jge
xor
cmpb
lods
inc
test
jns
pop
int3
inc
and
hlt
dec
adc
popa
cmpsl
pop
test
xor
and
pop
ja
repnz
mov
clc
lahf
loop
pop
testl
or
adc
pop
mov
addb
add
sbb
into
in
xor
test
ficomps
sbb
push
lods
sbb
ljmp
sti
cmp
int3
es
mov
mov
or
adc
mov
or
pop
push
outsb
shlb
lret
jns
dec
fsts
pushf
test
lods
jle
cltd
jl
adc
adc
mov
das
jb
xchg
cmc
xor
jl
mov
inc
mov
fdivs
sti
adc
ds
push
out
mov
mov
insb
adc
xor
cld
xor
jo
jge
jg
imul
jle
addr16
mov
mov
inc
imul
pop
and
dec
mov
xchg
lea
addl
fsubrs
pop
or
icebp
ds
lock
mov
aad
mov
cmp
mov
sbb
aas
and
or
xor
sarl
iret
test
cwtl
xor
aaa
jns
in
cmp
sahf
mov
lods
shlb
mov
fsubs
cmp
insb
enter
addb
mov
jmp
mov
adc
enter
lods
xchg
mov
jnp
sub
mov
pop
jg
repnz
aam
cmpsl
adc
or
adc
mov
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
sahf
xchg
sarb
mov
mov
add
mov
lea
enterw
insb
ffree
ljmp
dec
mov
cltd
cmp
rcr
mov
testb
or
pop
inc
loopne
push
test
adc
out
xchg
fcmovnbe
out
popa
mov
push
sbb
daa
push
rcll
jo
and
leave
fsubl
stos
jnp
das
int3
dec
pop
fwait
mov
and
shrb
dec
cmp
ror
jmp
dec
ds
je
aam
jl
ret
add
pop
push
scas
ja
test
adc
pop
ret
cli
movsl
mov
pop
mov
and
mov
cld
or
out
push
inc
fwait
inc
and
das
rorl
scas
repz
push
push
fwait
arpl
lret
scas
xchg
out
cmpsl
mov
sub
ljmp
fists
jecxz
cmp
or
dec
push
or
call
jmp
loop
sbb
lods
adc
and
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
lods
inc
rcr
cmp
add
outsl
hlt
sbb
push
inc
out
mov
xchg
scas
sub
int3
dec
pop
fwait
mov
and
loope
jne
mov
mov
xchg
mov
in
lret
cmp
subb
pop
imul
mov
shrl
shlb
jnp
or
mov
dec
mov
imulb
jne
sub
jbe
rcrl
ret
adc
mov
fxam
nop
xchg
or
or
repz
pop
mov
xor
rol
sbb
xchg
xchg
sahf
xchg
sarb
mov
mov
add
mov
lea
enterw
insb
fst
ljmp
dec
mov
cltd
cmp
xchg
push
stos
mov
out
jmp
test
rolb
repnz
in
dec
jo
push
lcall
push
lcall
adc
in
or
jl
loop
jp
or
xchg
outsl
jp
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
stos
dec
loop
arpl
clc
scas
movl
aaa
in
xor
nop
ret
mov
mov
add
add
xchg
lcall
jnp
lds
mov
xor
cltd
push
jnp
stos
sub
inc
cmc
push
sarl
sub
mov
cld
xor
adc
jl
in
sbb
and
sbb
mov
call
cli
mov
out
imul
stos
cmp
call
add
aam
adc
cwtl
xchg
and
gs
inc
push
xchg
nop
adc
cmp
sbb
xlat
adc
sub
pop
daa
push
mov
pop
mov
rolb
sti
push
sbb
cld
cmpsl
adc
dec
roll
inc
push
adc
push
dec
aad
les
mov
outsb
xor
scas
popa
lods
fldt
ljmp
ret
xchg
out
mov
fildll
push
sahf
jns
loope
pop
lods
push
jge
and
push
pop
bound
jg
out
out
out
inc
xor
push
mov
add
adc
test
je
insl
jb
sahf
fsubl
ja
in
gs
xlat
pop
mov
mov
arpl
sbb
mov
add
adc
je
or
inc
jecxz
mov
vdivss
add
adc
lods
ret
daa
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
sbbb
cmp
cmpb
test
imull
pop
loopne
mov
push
cmc
sbb
mov
xchg
std
pop
int3
push
into
shr
ret
mov
insb
xchg
push
into
push
mov
insl
mov
jne
nop
shrl
dec
popa
ret
cmp
xchg
adc
cmp
in
imul
fsubs
js
push
outsl
and
jmp
inc
or
pushf
push
xor
sub
out
jns
dec
adc
fistpl
ret
pop
pushf
jbe
cmp
imul
loope
jge
or
mov
mov
inc
out
ret
insb
test
rorl
dec
cld
or
data16
xchg
loope
iret
cmpsl
jecxz
fsubs
mov
mov
mov
ds
xor
mov
dec
fidivrs
xor
xchg
and
jo
pop
les
nop
sub
sbb
hlt
inc
roll
sbb
or
push
fwait
jp
and
add
xor
jo
and
daa
adc
xorb
mov
fstl
data16
sbb
outsb
xor
mov
xchg
ret
push
movsl
adc
mov
xor
lods
rcr
mov
and
mov
xor
test
adc
enter
dec
movsl
or
sbb
fistl
cltd
or
mov
xor
loope
je
dec
enter
pop
cmc
xchg
mov
fdiv
and
das
push
sub
adc
popl
push
sarb
rcr
mov
mov
mov
out
cli
dec
test
shll
lods
inc
leave
mov
mov
in
cmp
push
mov
jb
sub
push
shrl
adc
mov
and
shlb
cmp
or
faddp
loopne
shrb
mov
sarl
fldt
fildll
cwtl
cmp
or
add
scas
lock
add
mov
cmc
sub
cli
jp
inc
push
pushf
sbbb
jl
nop
xor
out
testl
aas
fbld
negl
fs
movsl
cmp
mov
lret
movb
vplzcntd
push
stos
fs
orb
dec
pop
sbb
jp
jns
dec
lds
fwait
enter
inc
sub
xchg
push
es
inc
loope
stos
shrb
test
mov
and
cld
mov
add
sbb
movsb
add
add
xchg
adc
mov
and
dec
add
int3
mov
in
pop
insb
jbe
jg
sti
xor
jnp
clc
les
push
adc
mov
je
sbb
add
daa
jmp
fisubs
or
xlat
mov
xor
dec
arpl
sti
mov
in
xor
inc
enter
jmp
daa
add
test
push
leave
cmpsl
inc
or
lcall
fmull
xchg
jle
add
mov
dec
lods
jg
leave
gs
mov
cmp
clc
mov
xor
shl
sub
xchg
daa
push
push
jl
lret
rcrl
mov
mov
xchg
inc
mov
push
into
fmull
inc
sbb
cmp
enter
les
cli
cli
icebp
sbb
in
or
jns
pop
sti
mov
xchg
cmpsl
or
mov
ficomps
jo
pop
mov
fists
fistps
jl
das
push
iret
hlt
ss
outsl
add
loope
xor
into
icebp
sbb
mov
mov
xchg
lds
xchg
mov
pop
cmpb
pop
mov
mov
pop
sub
filds
xor
shrl
mov
or
ret
pop
jmp
shrb
sbb
mov
inc
cmp
add
rcrl
outsb
xorb
push
xchg
mov
dec
dec
movsb
mov
cmp
dec
push
inc
lods
push
in
inc
dec
jne
dec
fimull
mov
scas
in
imul
push
shlb
cs
dec
dec
add
repnz
xchg
aaa
cmpsb
lret
addb
rcrb
mov
jae
in
mov
jo
sub
les
jno
insb
loop
mov
xor
scas
add
ret
jmp
xor
adc
roll
cmp
rcll
adc
test
mov
push
gs
pop
xchg
stc
pop
out
cmp
es
movsl
jne
dec
inc
adc
dec
les
push
hlt
xor
and
gs
push
sub
gs
das
in
cmc
mov
pop
push
inc
mov
mov
call
dec
pusha
xor
aam
aaa
imul
cmc
mov
xor
arpl
leave
cmpsl
inc
icebp
xchg
jle
sbb
adcb
cmc
cwtl
in
imulb
push
inc
outsb
jne
cmpsl
mov
int3
dec
pushf
ret
xchg
mov
ffree
stc
inc
repnz
popf
lret
push
xchg
lods
push
outsl
xchg
bound
in
ss
shlb
lcall
popa
or
xchg
push
es
inc
jb
sahf
pop
mov
push
ja
add
jp
ljmp
sahf
inc
xchg
dec
scas
arpl
push
sarb
rcr
mov
mov
mov
out
cli
dec
test
shll
lods
inc
leave
mov
mov
in
cmp
push
mov
jb
sub
push
shrl
adc
mov
and
shlb
cmp
or
faddp
pop
mov
loope
clc
sarl
ret
xchg
add
lret
popf
sub
test
pop
mov
xor
dec
pop
or
std
popa
int
and
hlt
imul
cwtl
jp
mov
mov
nop
adc
sub
jmp
adc
jno
int
inc
rcrl
mov
pop
divb
jo
xor
sbb
or
sarb
xor
mov
add
pop
jb
lods
ret
movsb
std
jp
xchg
cltd
fmull
cmp
xor
push
jmp
das
inc
fwait
leave
or
fstl
nop
inc
daa
rorl
inc
das
xlat
mov
insl
mov
sub
mov
dec
mov
xor
mov
adc
pushf
lods
pop
jae
mov
cs
stc
in
jns
test
jbe
into
sbb
xchg
add
pop
rolb
xor
imul
js
mov
shl
jae
fcomi
sbb
add
call
les
and
into
cli
adc
jno
sbb
sbb
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
nop
cmp
insl
dec
xor
pop
push
dec
mov
stos
movsl
jle
in
lds
in
ret
dec
loop
add
loopne
cmp
mov
push
or
jo
test
jae
cld
add
cmp
cmpsl
fsubp
fadd
xor
hlt
ja
jge
dec
or
xchg
xor
lret
scas
out
xor
lods
outsl
dec
push
pop
sbb
jo
shrl
sub
push
mov
xchg
jns
and
test
out
aad
addb
fcompl
pop
ret
mov
cwtl
movsl
sub
movsb
popf
divb
fstl
test
clc
mov
xor
je
jge
mov
sub
fs
sbb
xchg
sbb
jge
mov
mov
dec
sbb
push
shrl
sub
mov
push
ja
cmp
dec
movsb
jecxz
cld
xchg
out
test
inc
inc
sbb
or
shlb
jns
inc
dec
xchg
aam
jne
insl
mov
into
add
push
lahf
pop
pop
mov
movsb
fsubrl
imul
in
std
inc
popf
scas
inc
fcompl
and
jl
rcrb
pop
stos
insb
subb
cmc
test
xchg
test
inc
mov
ror
jmp
fimull
arpl
pop
mov
arpl
xchg
xchg
xor
subb
sbb
les
add
pushf
inc
je
xorb
cmpsb
adc
pop
inc
iret
movsb
sbb
mov
pop
xchg
out
int3
lcall
mov
call
sahf
or
inc
std
div
xor
rol
adc
sbb
enter
out
inc
add
aam
pop
rorl
ja
xchg
movsl
lock
pushf
mov
adc
mov
imul
dec
and
push
pop
into
mov
lods
sbb
jno
mulb
push
ret
andl
cmpsl
jns
gs
mov
inc
push
mov
xchg
gs
orl
cmc
pop
pop
into
jecxz
lahf
cmpsl
jns
out
js
int3
xor
repz
inc
adc
fnstenv
or
add
jmp
mov
rclb
sarb
out
sbb
cmpsb
fldt
push
iret
cli
ss
lds
mov
or
pop
fsubl
pop
shlb
xor
loopne
dec
es
test
insl
push
xor
bound
mov
subb
xor
dec
arpl
insl
mov
pusha
mov
sbb
sbb
xor
lods
popl
or
dec
mov
insb
jne
inc
into
push
mov
mov
adc
insb
jns
ret
xchg
ret
pop
push
or
push
pusha
jb
lods
jp
xor
sub
cmc
sbb
dec
inc
adc
lret
push
cld
imul
ficoml
outsl
shlb
cmp
cmpsl
pop
insb
sbb
xor
inc
xor
mov
int3
scas
inc
fs
sub
js
cwtl
hlt
inc
sarb
push
aad
adc
vphaddbw
push
pop
pop
xchg
dec
mov
push
lods
shrb
jg
lahf
sti
xlat
fmull
pop
outsb
iret
lahf
icebp
es
clc
pop
int3
rcrl
adc
popf
or
rorb
pop
add
inc
rorb
xor
sub
sub
jno
dec
xchg
or
lods
sbbl
fistpll
loope
push
or
xchg
in
dec
or
repnz
int
jle
in
mov
mov
cmc
jbe
ljmp
fs
or
xchg
push
sub
movsb
leave
pop
jbe
dec
xor
ljmp
repz
call
or
push
push
ja
in
ds
movsl
ja
mov
cmpsb
dec
sub
scas
push
and
test
pop
pop
cmc
test
pop
and
xchg
xchg
inc
insb
out
pop
mov
push
roll
faddl
and
imul
cs
push
pop
hlt
testl
nop
arpl
scas
scas
scas
loope
sti
jnp
cmpsb
iret
pop
call
sbb
icebp
jnp
sahf
popa
xchg
out
imul
leave
pushf
sti
xchg
shlb
ljmp
movsl
jne
cwtl
mov
inc
inc
adc
pop
xchg
sbb
lret
repz
iret
ret
clc
sti
cmpsl
aam
iret
adc
dec
jnp
inc
sub
jae
add
mov
into
iret
inc
sub
imul
loopne
scas
lods
pop
imul
pop
push
mov
in
daa
push
jle
mov
mov
shrl
dec
sub
int
add
jmp
dec
and
data16
ss
dec
push
lret
ret
mov
mov
popf
enter
jle
outsl
sti
nop
adc
es
clc
mov
add
dec
test
dec
je
cmpsl
xchg
ljmp
ja
aas
call
jp
mov
cmovae
pop
pop
sub
fdivs
cltd
push
adc
aam
xchg
shl
in
push
or
mov
outsb
xor
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
xchg
lds
xchg
imul
and
das
stos
lock
pop
cli
stos
jb
pop
inc
aam
dec
sbb
xor
pop
pop
mov
inc
cmp
sbb
push
sub
fnstenv
add
or
js
mov
xor
jecxz
cmpsb
std
in
ret
outsl
test
out
test
xor
jno
jle
pop
lahf
adc
or
fwait
or
add
cmc
jl
das
dec
xor
mov
mov
pop
jae
pushf
sub
in
sti
jnp
sbb
xor
jg
lahf
dec
mov
addr16
and
rolb
ss
push
andl
cwtl
mov
xlat
nop
inc
out
xor
push
pop
lahf
outsl
lea
mov
sub
cld
mov
mov
sti
leave
adc
sub
lea
jg
or
and
js
pop
adc
mov
xor
test
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
insl
int3
imul
mov
cmp
inc
and
test
test
out
sub
dec
out
int3
scas
jae
mov
jae
mov
call
mov
mov
mov
sub
or
add
jecxz
out
xchg
adc
cmpsl
js
mov
test
inc
jmpw
or
sbb
mov
leave
mov
ret
mov
mov
pop
jle
adc
mov
cmp
hlt
xor
push
lock
dec
or
arpl
call
or
call
or
mov
pop
mov
jno
scas
mov
sub
inc
test
push
pop
mov
pop
sub
dec
roll
jmp
incb
xchg
sub
jle
in
out
mov
outsb
mov
in
and
lods
sbb
ljmp
addr16
loope
dec
mov
scas
dec
rcr
mov
and
mov
adc
enter
dec
movsl
or
sbb
fistl
imul
push
loope
je
dec
enter
pop
cmc
xchg
mov
fdiv
and
sub
sub
adc
popl
push
push
js
rcr
mov
push
mov
xor
clc
jp
pop
pop
pop
jne
sbb
mov
mov
leave
adc
jg
lahf
dec
rorb
shll
outsb
add
adc
or
dec
adc
je
adc
ret
push
inc
push
pop
push
test
mov
adc
pop
add
push
and
mov
push
cmpb
test
sbb
ret
pop
cmp
leave
dec
pushf
dec
xor
test
add
leave
aad
pusha
mov
out
stos
sbb
movsb
pop
imul
lods
push
fmuls
xchg
test
push
push
dec
sub
stos
les
aam
add
imul
lods
arpl
pop
jg
repnz
aam
cmpsl
adc
cwtl
hlt
stos
das
pop
mov
es
cmp
outsb
xchg
jge
outsl
addr16
lret
push
ret
adc
aaa
and
ljmp
mov
dec
mov
mov
ss
cmp
leave
mov
pop
ja
fistpl
hlt
inc
or
push
nop
shrl
aad
jno
xor
inc
insb
inc
mov
ret
push
mov
add
loopne
cli
sub
fwait
imul
mov
sbb
fdivrl
ret
insb
mov
cli
stos
iret
mov
test
sti
sbb
sbb
ja
stos
cmp
in
mov
xor
xchg
lret
rcll
mov
fisubrl
fwait
add
rsm
hlt
dec
jns
mul
test
call
in
mov
jo
sub
cmpxchg
out
jo
jecxz
pop
add
jle
scas
mulb
cltd
dec
push
inc
dec
mov
sub
xchg
jbe
popf
scas
inc
jecxz
call
push
jmp
push
sbb
sub
adc
jg
lahf
cmp
hlt
repz
pshufw
dec
or
sbb
lret
and
daa
adc
mov
addr16
inc
and
push
dec
push
adc
inc
mov
sbb
inc
and
add
fwait
lret
jecxz
inc
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
inc
push
cltd
jns
ret
xchg
ret
dec
lods
jmp
cmp
inc
push
stc
inc
jb
dec
mov
lret
wbinvd
sub
push
outsl
sbb
push
in
dec
out
outsl
stos
int
jns
xchg
jmp
mov
sbb
mov
sbb
jmp
fsts
jecxz
fbstp
jns
push
mov
mov
and
adc
pop
sub
dec
stc
arpl
or
xor
xor
test
icebp
xchg
sub
dec
lret
fidivrs
jge
imul
sbb
sti
clc
int3
outsw
sbb
mov
stc
in
jbe
out
inc
sbb
xchg
push
hlt
cwtl
movsb
popf
xchg
popa
lret
cwtl
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
adc
loop
push
mov
or
mov
cmpsb
push
mov
mov
mov
call
mov
lret
imul
push
inc
sub
sub
sub
ljmp
ret
xchg
xchg
mov
fildll
and
dec
dec
cwtl
mov
ret
sbb
xor
stos
jge
lcall
addl
insb
cltd
jb
lods
xchg
das
cmpsl
int3
push
mov
shrb
jmp
dec
fisttpl
jns
das
push
roll
scas
inc
xor
fcmove
xchg
out
bound
daa
daa
pop
cmp
xchg
into
xorl
repz
out
cli
pop
int
gs
sarb
call
jmp
push
xor
into
add
and
mov
les
subb
or
mov
dec
xchg
clc
mov
dec
fmuls
int
push
dec
add
or
cmc
and
lahf
pop
push
enter
test
lock
sbb
in
cwtl
mov
filds
insb
lret
mov
and
push
leave
pop
inc
add
sub
js
jle
jge
jnp
dec
sub
cli
jno
inc
fcom
mov
jl
sbb
or
sbb
push
inc
lcall
sub
es
test
pop
scas
inc
fucomi
in
mov
pop
xchg
movsb
pop
out
lock
jle
scas
pop
out
ret
cld
jae
cld
out
daa
dec
iret
jge
cmpsl
addr16
sub
mov
shlb
jne
push
sub
bound
out
inc
test
jns
outsb
negl
int3
pop
pop
add
subl
insl
or
and
or
mov
add
inc
mov
dec
pop
ret
aam
push
inc
movsb
jle
ljmp
js
xchg
mov
dec
addr16
xchg
outsb
mov
or
push
xorl
dec
imul
out
push
cli
add
mov
mov
ret
and
inc
ds
arpl
push
rorb
enter
sub
pusha
insl
cwtl
and
dec
pop
pop
push
dec
fs
cwtl
push
mov
adc
xorl
out
and
outsb
adc
inc
pop
cmc
or
fcoml
inc
adc
sub
xchg
jo
rorl
jbe
rorb
or
inc
cmc
gs
rcll
or
psraw
test
and
mov
jne
insl
cmovl
pop
aam
push
cmpsb
jnp
fcomp
outsb
dec
push
add
and
mov
jns
push
xchg
test
mov
das
fsubrs
test
aad
mov
lret
stos
ror
adc
or
lahf
add
sub
push
xor
icebp
xor
xor
and
inc
mov
sub
insb
push
imul
in
insl
ficomps
fldcw
fists
push
aaa
mov
imul
fildll
push
bound
sub
sub
mov
mov
push
push
and
insl
dec
pop
xchg
enter
pop
stos
pusha
lahf
fistps
inc
ror
and
fucomi
repz
cmp
ja
in
xor
out
mov
fsubrs
xor
ror
xchg
xchg
jg
sub
ljmp
xor
push
jmp
fnsave
xchg
push
xabort
mov
add
repnz
bound
test
leave
addb
fwait
xchg
les
cltd
sahf
sub
out
jae
sbbb
push
test
lcall
mov
push
jl
inc
and
add
loope
jl
mov
mov
jae
or
test
inc
into
push
mov
insl
cmc
imul
shll
dec
mull
push
push
and
aam
filds
loope
in
arpl
rcl
jbe
lods
adc
fsubl
ja
in
xor
adcb
fadds
add
out
imul
stc
add
dec
xchg
cltd
lret
add
sahf
adc
or
sub
mov
add
jecxz
jl
mov
les
decl
jns
js
inc
cmp
or
pop
and
cwtl
push
gs
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
out
pop
pop
xor
mov
adc
out
push
test
or
push
fucomi
jmp
pop
add
push
and
rclb
adc
push
mov
sub
mov
xchg
xchg
mov
mov
mov
ret
pop
imul
out
loopne
mov
jae
fldt
sahf
jle
and
lods
xor
fsubl
int3
push
jne
inc
inc
dec
les
xchg
outsl
sub
test
gs
xchg
push
shrl
fstpt
loopne
adc
dec
mov
mov
movsb
adc
pop
dec
decb
std
jb
jmp
std
xchg
and
data16
mov
xchg
push
stos
icebp
mov
fdivl
popa
pop
cmp
call
add
shlb
mov
clc
mov
or
andb
nop
and
invd
cmpb
add
and
push
inc
push
pop
lods
arpl
call
add
sti
test
into
inc
popf
xor
and
rclb
inc
mov
or
add
pusha
insb
push
sub
push
xor
push
lds
or
lea
xor
fbld
jns
jae
sbb
mov
ljmp
sub
and
push
mov
arpl
push
je
push
xchg
testb
xchg
cld
xchg
shlb
lods
jne
cmp
mov
cmc
add
pushf
adc
loop
nop
xchg
lahf
push
cwtl
lock
jle
add
add
add
inc
push
rorl
mov
jmp
insl
inc
add
mov
xchg
movsl
gs
arpl
cltd
enter
sub
ljmp
jle
scas
dec
mov
inc
mov
jge
je
jo
jns
nop
add
lret
xlat
push
sbb
pop
xchg
pop
cmpsl
fists
inc
decl
xchg
pop
cmpsb
pop
pop
cmpsl
bound
jecxz
pushf
sti
add
dec
push
xor
into
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
mov
inc
and
les
test
inc
fcoms
or
inc
push
sbb
xchg
cmp
xchg
stos
ja
add
jno
xchg
mov
push
ret
mov
loope
xchg
xlat
inc
sarl
call
mov
inc
mov
aad
iret
jge
inc
das
inc
jbe
test
adc
cmp
jae
je
repz
mov
push
sbb
push
push
mov
jmp
les
dec
inc
dec
pop
or
mov
test
jae
je
and
lret
mov
mov
mov
mov
lahf
cli
lret
aam
xchg
mov
mov
add
setle
xor
mov
cltd
cmp
xor
popa
push
sbb
fs
push
outsl
pop
mov
fisubrl
jns
cmpsl
loope
lret
cmp
std
and
dec
cmpsl
xchg
int
sar
lret
sarl
mov
sub
sub
addr16
inc
rolb
mov
addr16
and
mov
jb
sahf
pop
mov
cmpxchg
in
das
test
xor
arpl
sbb
mov
das
dec
lock
jl
fmul
adc
outsl
outsl
call
scas
loope
sti
pop
pop
popa
stos
lods
icebp
sbb
jbe
jnp
mov
lock
mov
jb
mov
mov
ret
xchg
mov
ret
push
xchg
sti
mov
fildl
dec
je
ret
arpl
lds
movsl
sbb
iret
addl
addr16
mov
push
shll
insl
xchg
imul
test
push
stos
popf
scas
lods
fisubrl
inc
lcall
js
in
jnp
cmp
sbb
fs
cmpsl
inc
inc
rclb
arpl
jmp
popa
inc
sbbl
lret
xchg
jl
fistl
cmp
lea
pop
lds
jl
pop
pusha
jle
das
xor
test
popf
adc
cmp
push
dec
js
or
xor
adc
rcll
cwtl
jge
jge
outsl
jg
out
jno
sbb
aaa
push
leave
jne
jb
loopne
js
fisttps
lahf
outsb
lahf
std
cwtl
shlb
test
or
cmp
inc
sbb
adc
in
or
rcrb
out
pop
sarb
push
pop
mov
test
ljmp
in
lret
test
mov
test
pop
sbb
adc
imul
sub
std
lock
lds
push
rcrb
jbe
movsb
lcall
mov
push
push
arpl
pop
sub
inc
sbb
or
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
lret
jecxz
bnd
int3
scas
pop
fmull
sub
inc
sarb
pop
add
jp
pop
repnz
and
adc
jmp
lret
adc
mov
shll
jno
jb
pusha
repz
push
enter
and
inc
dec
les
mov
push
adc
pop
cwtl
adc
es
xchg
icebp
scas
int3
sbb
scas
jns
loop
dec
loopne
call
idiv
sti
loopne
test
dec
sbb
pop
sbb
cmp
fadds
hlt
sub
call
mov
sub
rcrb
sbb
vandnps
test
cmp
addr16
push
lret
fucomp
cld
std
mov
mov
popf
aad
push
fs
cmp
mov
scas
xchg
push
xchg
std
xchg
mov
stos
fs
pop
dec
mov
adc
shrb
sbb
scas
fcmovnb
js
pop
cmpsl
lods
jg
aad
cmp
mov
adc
push
cwtl
int3
dec
out
add
or
stc
dec
cmp
jnp
mov
daa
scas
xor
imul
pop
sbb
into
add
lret
fnstenv
xorl
and
xchg
sti
in
and
or
mov
out
cmc
mov
add
mov
mov
cmpsb
repz
ds
sbb
pop
loopne
mov
push
cmc
sbb
mov
js
sbb
mov
add
dec
inc
push
loopne
ja
add
xor
pop
leave
sbb
rcrb
cmpsl
jmp
xchg
mov
stc
and
lahf
loop
fildll
sbb
pop
jl
mov
bound
or
shlb
scas
vpminub
sbb
lcall
gs
lods
cmp
mov
pusha
mov
out
and
movsl
dec
stc
filds
and
popa
sbb
xlat
cs
dec
cmp
cmp
sbb
imul
repnz
inc
insl
imull
push
aad
push
pop
xchg
mov
xlat
pop
jmp
jp
rcll
jo
sbb
hlt
mov
in
and
dec
sub
cs
dec
ret
fildll
stos
sub
cmp
dec
in
out
and
stos
push
jae
adcb
mov
popf
jp
outsb
or
pop
or
jp
fnsave
leave
and
and
sbb
pop
sbb
out
mov
cmp
sub
jg
fwait
pop
dec
popf
lret
leave
cmp
test
xchg
test
and
dec
jbe
xchg
stos
mov
stos
xchg
push
adc
lahf
mov
leave
adc
mov
sbb
xchg
dec
xchg
out
jg
mov
dec
xlat
cld
imul
mov
pop
lock
or
xchg
adc
es
inc
jmp
fucom
dec
sarb
inc
repz
xchg
mov
adc
xchg
adc
mov
arpl
or
mov
mov
outsl
jle
jg
xchg
cmp
mov
loop
mov
sbb
inc
cmp
ret
push
adc
out
sbbb
mov
test
mov
dec
sbb
out
mov
test
mov
xchg
push
and
leave
mov
xor
mov
xchg
xor
mov
scas
pop
rcr
push
jge
sub
cmp
mov
sbb
scas
mov
jecxz
ret
lods
mov
mov
jg
cmpsl
xchg
push
nop
pop
gs
dec
mov
or
mov
or
sub
pop
mov
test
cltd
lods
inc
inc
pushf
shl
iret
pop
fiadds
imull
push
or
enter
pop
pop
adc
mov
mov
add
je
xchg
xchg
sahf
inc
cwtl
aam
sarb
fcoms
test
cld
push
sub
stos
push
jne
insl
jne
push
cmpsb
jo
fdivrp
adc
mov
cltd
sbb
mov
cmp
push
jb,pt
dec
mov
jne
js
and
mov
mov
xchg
sbb
jmp
lcall
adc
out
out
jno
mov
cld
cmp
in
mov
mov
sub
jge
push
sbb
sti
inc
cli
shlb
scas
ss
stos
push
outsl
jno
dec
sbb
inc
mov
stc
and
mov
mov
mov
sti
addb
add
fsubrs
pop
dec
les
adc
test
mov
pop
or
jmp
mov
mov
in
fsincos
cltd
push
fwait
leave
loop
jnp
or
cmp
mov
mov
test
adc
pop
in
ret
mov
cli
mov
push
gs
insl
es
push
mov
repnz
xchg
rcll
ret
inc
push
fwait
nop
sub
and
int3
mov
or
enter
pop
and
arpl
mov
jne
popa
pop
push
or
lods
cltd
jle
fstpt
lock
adc
mov
and
je
lahf
xchg
jno
pop
mov
push
sahf
ret
push
test
lret
cli
mov
test
xchg
mov
cmp
mov
sub
arpl
pop
sub
inc
sbb
or
cmp
movsb
pop
and
fwait
lods
jle
mov
mov
mov
inc
mov
aaa
jg
cli
rol
popf
scas
inc
and
icebp
xor
xchg
into
cmp
addl
mov
mov
rorb
cs
add
xchg
mov
loopne
fdivrl
xor
ja
fldenv
mov
lds
and
sub
addb
and
mov
push
mov
loope
cmpsb
mov
dec
movsb
adc
fsts
mov
loopne
xor
mov
in
inc
mov
xor
jne
clc
js
inc
cmp
add
rcrl
ret
ficomps
cmc
jbe
ljmp
and
outsl
stos
push
test
clc
scas
mov
jge
pop
lret
fucomp
cld
std
stos
repz
popf
aad
push
add
cmp
cli
mov
mov
push
xchg
pop
jns
pop
stos
add
dec
mov
ficompl
aad
xor
push
popf
scas
pop
movsb
jp
aaa
pop
push
mov
xchg
fbstp
in
xchg
pop
sub
jg
or
inc
pop
fwait
cmp
jge
fwait
jmp
xchg
fidivl
dec
and
insb
cmc
xchg
xchg
pop
xchg
in
push
fdivrs
cmpsb
mov
jbe
outsl
or
add
dec
cld
mulb
mov
in
leave
cwtl
cmp
push
stos
in
jb
and
cwtl
cmp
es
xchg
mov
iret
fldl
push
roll
shll
sub
loop
fdivrl
cmp
adc
cli
add
rolb
enter
ret
fnstenv
dec
pushf
dec
lods
aad
ja
lret
fnstenv
test
cli
fildll
and
fldt
arpl
inc
sub
mov
or
imul
pop
push
mov
lds
lods
popf
xchg
cmp
icebp
or
cmpl
ror
or
iret
add
arpl
mov
pop
xchg
jne
or
imul
push
shlb
cmp
xchg
in
mov
les
out
loope,pt
call
daa
sbb
inc
xor
loopne
je
sbb
inc
inc
sbbb
sub
out
dec
cmp
test
aad
mov
int3
sbb
pop
and
popf
movsl
imul
shl
pop
icebp
fdivrl
cltd
in
lret
in
xchg
aas
cli
or
add
cs
jg
dec
lret
movsl
mov
mov
call
fwait
xor
rcrl
xchg
stos
fucomp
jae
jns
out
dec
popf
lret
rorl
test
movsb
leave
xchg
test
and
arpl
xchg
stos
mov
stos
xchg
fistl
fimull
inc
jbe
dec
jle
mov
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
sbb
mov
mov
cmp
xchg
cmpsl
sub
cmpb
jnp
lret
adc
push
mov
clc
enter
leave
add
sbb
mov
or
ss
gs
das
in
cmc
mov
add
test
sub
lods
int
cmp
jbe
and
mov
mov
inc
sbb
xor
enter
add
out
push
sbb
out
xor
pushf
dec
and
popf
enter
fsubr
mov
xchg
leave
inc
insl
scas
mov
jecxz
mov
aaa
mov
insl
mov
xchg
push
nop
cmp
pusha
add
or
mov
imul
fistl
mov
fwait
pop
sbb
pop
or
fsubrs
stc
sub
les
adc
push
addl
jmp
fucom
dec
sarb
push
icebp
imul
or
inc
stos
xor
jbe
out
bswap
pusha
and
and
insl
andb
mov
out
push
and
dec
mov
cmc
hlt
mov
int
pop
ljmp
pop
ds
loopne
mov
repz
mov
imul
pop
xchg
fldl
lcall
pop
cmpsl
mov
loop
lcall
sub
nop
xlat
stos
dec
sahf
mov
pop
sbb
push
mov
cmp
sub
fucomp
jae
jns
jo
popf
lret
rcll
sbb
and
add
xchg
stos
jge
dec
xor
js
xorb
jle
mov
lods
inc
movsb
outsb
shll
pop
psubusb
popf
push
fcom
pushf
jae
sub
std
xor
adc
adc
pop
dec
cwtl
rorb
cmp
mov
xor
es
fs
lods
cmc
add
inc
fst
adc
call
push
sbbl
clc
hlt
pusha
sbb
inc
xor
aam
mov
add
aad
add
out
pop
popa
push
push
push
xchg
mov
int
mov
adc
in
jbe
ret
clc
sti
jno
or
cmp
and
add
sbb
testb
mov
dec
sbb
dec
add
pushw
cwtl
sub
test
push
jne
mov
in
mov
xchg
leave
inc
pop
scas
mov
jecxz
mov
aaa
mov
inc
mov
xchg
push
nop
fnstsw
xchg
dec
mov
or
fstps
ja
sbb
jb
xor
push
xor
cwtl
xchg
fucomi
repnz
add
pushf
jnp
sub
cmp
xchg
stc
xchg
xchg
sahf
inc
cwtl
fmull
cmp
clc
push
repnz
mov
ret
add
push
xchg
imul
cmpb
pop
mov
gs
cltd
xlat
xchg
mov
call
mov
je
sbb
int3
pop
inc
sub
dec
adc
sbbb
xor
and
test
mov
sbb
xchg
sbb
or
xchg
in
lods
es
inc
cltd
xchg
dec
popa
xchg
clc
dec
sbb
mov
movsl
or
inc
int
mov
mov
stos
mov
ja
push
test
test
inc
mov
cli
ljmp
popf
lret
add
sub
inc
sbb
or
lods
stos
std
fnsave
adc
mov
sub
test
xor
fnstenv
push
loope
fistpll
mov
jae
punpcklwd
dec
inc
sub
xchg
pop
les
mov
inc
mov
lods
jno
and
test
jge
inc
and
and
mov
mov
mov
mov
xchg
pop
lcall
xor
xchg
test
mov
dec
lea
or
adc
inc
xor
rcll
stc
fdivrs
cwtl
insl
mov
and
fstl
addb
iret
adc
dec
jnp
inc
sub
bound
mov
ret
mov
mov
popf
sbb
lret
push
sbb
cli
test
outsl
jno
adc
sbb
movzwl
stc
push
into
lods
mov
mov
xchg
test
dec
mov
push
push
inc
outsb
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
ffree
pusha
mov
lret
fstl
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
faddl
mov
pop
mov
fcomp
pop
fisubs
movb
mov
jmp
popf
and
mov
pop
and
daa
hlt
xor
and
mov
sbb
mov
ficoms
loopne
into
mov
sub
test
add
icebp
jae
ljmp
out
sbb
ja
adc
sbb
add
xchg
or
fsubrl
frstor
push
test
lret
lcall
sub
lahf
mov
pop
push
inc
mov
ret
pop
sub
lret
inc
inc
push
sbb
xchg
pop
cmp
or
push
dec
in
xchg
cmp
testl
cltd
jnp
mov
jno
test
mov
in
pop
in
xchg
pop
sub
jg
or
inc
pop
mov
je
aas
push
mov
sbb
sarb
cmp
lret
or
enter
push
mov
push
cmpsb
mov
shlb
xor
loopne
dec
inc
jp,pt
adc
movsb
cmc
clc
dec
adc
test
mov
sahf
testl
xor
aam
test
filds
pop
and
lret
scas
push
mov
pop
xor
mov
and
mov
iret
cmpsl
mov
negb
insl
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
test
addr16
addr16
fucomp
cld
std
mov
aad
jo
xchg
test
mov
aam
dec
and
sbb
cmc
add
ja
stos
inc
lcall
xchg
jge
mov
cmp
scas
push
je
lret
jle
mov
popf
int
leave
or
iret
add
arpl
or
sbb
scas
test
dec
mov
movsl
cwtl
data16
push
mov
push
dec
xchg
push
mov
jns
push
insl
std
dec
jo
popf
pop
out
cmp
dec
cli
icebp
bound
mov
push
adc
xchg
xlat
mov
stos
fwait
in
dec
pop
les
movsl
pop
in
aaa
call
les
jg
add
sarl
xor
mov
adc
push
or
subb
pop
fsubrl
pop
imul
mov
pop
mov
inc
xlat
test
lcall
sub
fldt
arpl
aam
xchg
test
jae
sbb
das
sbb
cmp
xchg
fnsave
std
lcall
sti
push
lret
pop
pop
adc
cld
arpl
fcmovnu
popf
fdivl
leave
loop
jl
nop
xchg
push
push
mov
clc
js
rolb
hlt
pop
jbe
mov
int
js
faddl
dec
inc
insl
xchg
popf
aad
aas
mov
mov
aam
ret
es
cmpsb
jnp
fdivs
cltd
push
adc
faddl
adc
add
xchg
nop
sub
and
int3
mov
or
fwait
jns
negl
mov
mov
int3
inc
pop
movsl
or
ret
pop
jae
pop
mov
lahf
lret
insb
mov
repz
pop
xor
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
push
lret
fucomp
cld
std
mov
in
mov
pop
xor
cltd
nop
cmp
or
imul
mov
xchg
jmp
in
sarl
fcoml
aaa
jge
dec
ljmp
fwait
push
adc
sub
push
cwtl
les
adc
sub
add
mov
cmp
stos
push
and
inc
mov
jp
cwtl
repnz
xchg
stos
cwtl
outsb
lahf
jo
lcall
cmpsl
enter
insb
popf
lahf
push
and
pushf
and
jmp
mov
mov
loope
cmp
in
dec
movsb
adc
fsts
imul
imul
push
idiv
mov
das
lock
mov
adc
dec
or
subb
fsubrl
pop
imul
lret
flds
mov
and
mov
imul
jge
fldt
mov
stos
dec
jl
aas
xor
add
outsl
icebp
push
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
psubusb
popf
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
mov
movsl
cwtl
outsb
mov
movl
mov
daa
sti
cmp
fdivrl
sti
mov
ret
mov
or
movsl
leave
sbb
aaa
incb
in
jb
and
mov
jne
pop
mov
lea
addl
les
inc
cmp
or
dec
pop
ret
repz
sbb
and
lahf
lret
jecxz
gs
and
int
lahf
mov
sbb
mov
cmpsl
mov
loop
cli
and
movsl
mov
mov
dec
nop
xlat
stos
dec
sahf
cmp
test
pop
sbb
test
scas
mov
jns
mov
add
sbbb
push
sbb
ret
add
addb
lcall
sti
or
dec
dec
test
icebp
lcall
xor
cwtl
xchg
fucomi
repnz
add
pushf
imul
mov
add
mov
inc
orl
jle
sahf
add
mov
cmp
test
mov
push
jno
and
fiadds
stc
into
clc
les
movsb
inc
popa
sbb
cmpsb
hlt
js
xor
sbbb
sub
out
dec
cmp
sub
xchg
lea
fiadds
cmp
sub
and
mov
and
sub
mov
push
mov
mov
xor
sbb
add
and
hlt
scas
mov
jne
pop
lret
fsubr
stos
imul
scas
mov
cmp
movb
sti
xor
push
cmp
sarl
test
sbb
jno
or
xadd
xchg
stos
cmp
or
icebp
mov
jns
enter
icebp
fnstenv
push
loope
fistpll
or
fdivrl
and
je
inc
mov
movsb
sbb
test
push
test
or
sub
or
fistpl
mov
dec
jp
inc
mov
ds
mov
jl
cmpb
mov
or
mov
cmp
das
in
cmc
mov
movsb
xor
add
inc
inc
add
xorb
mov
repz
sti
dec
push
ret
jecxz
and
sub
sub
dec
popa
cltd
rorb
or
fdivl
jo
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
rorl
cmp
mov
lds
mov
xchg
push
fistl
sbb
or
imul
pushf
sub
mov
roll
mov
ffree
pusha
mov
lret
fnstcw
mov
stc
leave
sbb
adc
sub
sbb
xchg
pop
ret
xchg
sub
cmp
pop
test
jp
jecxz
insl
inc
add
mov
xchg
pop
test
pop
push
pop
jmp
iret
push
adc
push
and
lods
enter
decb
sub
in
jne
dec
mov
pop
dec
pop
jbe
movsl
or
pop
mov
daa
pop
mov
mov
lahf
aam
sub
mov
rorb
mov
lret
cmpsl
dec
popf
fidivs
cwtl
lret
push
sbb
xor
stos
mov
push
outsl
jno
push
dec
sbb
fildll
xor
int3
lods
shl
fnstenv
cmc
sahf
xchg
pop
sub
mov
or
jae
stos
inc
roll
cmpsl
fistl
cld
movsl
or
sbb
testl
cltd
jnp
mov
jno
in
fnstsw
push
fcom
jle
push
adcb
dec
adc
subl
movb
in
dec
test
dec
dec
cmp
mov
pop
xor
mov
imul
cmp
sbb
xor
jne
test
in
sahf
bswap
sbb
or
jne
addl
mov
sub
and
xor
pop
cmp
sahf
push
mov
enter
inc
sbb
jecxz
push
sbb
fsubrs
adc
sbb
add
popf
and
fsubrl
fnstsw
push
test
lret
shrb
aaa
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
cmpsb
int
fcompl
lret
mov
cmp
scas
push
jg
je
xchg
fwait
add
push
cmp
or
dec
repz
pop
inc
test
or
nop
leave
repz
out
popf
out
mov
in
xchg
jmp
lea
bound
fdivrl
es
lods
sti
xor
jl
cmpsb
xchg
adc
pop
aam
dec
stc
ljmp
dec
mov
cltd
jns
jb
cs
adc
gs
subl
adc
inc
mov
loopne
out
movsb
xchg
fucomip
repz
pop
mov
dec
lahf
lret
insb
mov
out
enter
insb
mov
rcrb
cmpsl
mov
neg
test
sbb
xlat
pop
sbb
test
clc
mov
pop
test
xchg
xor
test
xor
in
cwtl
nop
cmp
sbb
or
imul
jge
pop
les
mov
movsl
nop
aaa
std
lcall
sti
push
lret
dec
jmp
lods
fiadds
ja
pushl
mov
inc
jle
inc
mov
sub
mov
or
cmp
push
jecxz
mov
aad
jns
fcom
push
fsubs
jno
fidivrl
mov
mov
mov
xchg
lcall
cmp
xor
xchg
test
cld
or
inc
push
daa
jne
dec
sub
lahf
bsr
pop
mov
cmp
mov
jb
mov
cmpsb
clc
sti
mov
jecxz
push
sbb
and
lods
sbb
add
pushf
ret
push
fnsave
push
test
lret
inc
imul
int
xchg
call
nop
cmp
dec
loope
mov
das
sub
jo
pop
dec
outsb
les
jmp
in
sarl
pushf
pop
jmp
cli
mov
je
scas
ljmp
adcb
dec
adc
andl
inc
je
pushf
dec
sti
jno
xchg
cmc
mov
mov
ja
fcomps
cmpsb
movb
mov
jmp
popf
and
mov
sbb
daa
loopne
hlt
xor
test
outsl
push
pop
sbb
movsb
xor
mov
shl
mov
shr
repz
adc
enter
sbb
and
fucomip
repz
pop
test
dec
lahf
lret
insb
mov
lret
mov
pop
xor
mov
and
fimull
imulb
dec
sbb
xlat
dec
sbb
sub
leave
push
in
mov
or
mov
rcr
cli
cmp
sub
adc
mov
ret
push
inc
cmp
push
sbb
xchg
pop
icebp
mov
cmp
inc
mov
scas
hlt
mov
popf
fists
fldl
push
andl
stos
clc
jb
sbb
inc
movsl
push
and
sti
sahf
imul
sub
fldl2t
inc
gs
fstpl
fiadds
or
mov
push
cmpsb
mov
shlb
cmp
loopne
je
sete
mov
in
repz
dec
mov
into
pop
stos
pop
lods
lahf
dec
mov
cmp
mov
xor
sti
mov
and
pushf
sbb
sbb
sub
lods
or
push
pop
imul
test
inc
sub
cmc
enter
cltd
push
in
leave
sbbb
iret
push
xchg
fucomip
sub
test
rorl
fsts
jl
sub
pushf
xor
sti
or
dec
dec
test
icebp
mov
sub
pusha
es
pop
or
shl
repz
cmpsb
ds
or
cmp
cmp
test
pop
xorb
mov
add
pop
fistpl
xor
xlat
cmp
push
jne
dec
jo
popf
pop
out
cmp
add
icebp
bound
stc
add
cwtl
hlt
xor
xchg
sub
or
mov
fcomi
mov
mov
repz
ret
loopne
dec
pop
shll
and
gs
fmul
pop
sub
sbb
mov
cmpsl
mov
loop
mov
lret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
jl
sbb
in
pop
movw
gs
popa
or
fiaddl
mov
add
xchg
enter
incl
push
or
push
fdivrs
xlat
cmpsb
std
mov
cli
mov
pop
sahf
fisubrs
pop
mov
test
push
inc
mov
cwtl
stc
and
adc
and
inc
cltd
pop
movsb
mov
jmp
adc
sub
rclb
cmpsb
inc
pop
stos
shrl
push
mov
pop
mov
cli
mov
sbb
mov
xor
jbe
and
fwait
dec
add
in
xor
fisttpl
and
push
dec
cmp
fisttpl
rcl
fiadds
fists
push
neg
fs
mov
lret
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
jb
mov
push
jmp
adc
or
xor
cmp
add
xchg
cltd
lret
mov
add
mov
push
scas
fcomip
sub
xor
jle
outsl
cltd
fisubrl
out
sub
mov
js
pop
cmc
or
mov
je
dec
inc
mov
cmp
in
adcb
pop
xor
test
fwait
insl
ds
fisttpll
ret
pop
xchg
add
leave
addb
add
dec
subl
imul
push
sub
push
mov
push
repz
daa
loopne
mov
repz
sti
dec
push
sarl
sub
pop
sub
dec
popa
popf
xchg
dec
sbb
mov
scas
data16
faddl
sub
xor
adc
test
insb
pop
push
dec
sbb
jae,pn
stc
inc
add
mov
and
add
cmpl
jae
enter
fnstenv
stos
inc
roll
cmpsl
fistl
mov
cwtl
pop
inc
outsl
nop
rcrb
clc
xor
xor
mov
into
mov
mov
inc
sti
and
enter
and
pop
mov
and
fwait
and
xchg
jg
fldl
imul
adc
hlt
lret
inc
fists
call
push
or
fisttpll
xchg
mov
cmp
push
and
test
mov
mov
cmp
fsubr
mov
sbb
mov
add
stos
shr
adc
mov
daa
pop
xchg
iret
fucomip
jl
mov
dec
lahf
aam
sbb
mov
repnz
ret
mov
or
popf
pushf
insl
loop
or
sbbb
lcall
shrl
leave
insb
sbb
das
push
adc
mov
aaa
jmp
add
insl
test
out
test
scas
xchg
push
pop
xchg
cmp
roll
movsb
fistl
cld
addr16
mov
fldenv
stos
movsb
insb
jne
jmp
fcmovne
push
inc
cld
imul
mov
sub
in
sbb
mov
mov
cmp
repnz
mov
xchg
lahf
aam
jg
das
stos
xlat
shrb
out
dec
adc
sbb
sti
clc
popa
jge
outsl
push
or
dec
pusha
mov
add
adc
or
cmp
imul
sahf
dec
sub
cltd
xchg
mov
or
mov
or
mov
push
sbb
shl
lock
push
sbb
les
adc
sbb
add
insl
movsl
mov
fs
push
mov
inc
sarb
sbb
xchg
stos
push
test
xlat
test
jnp
leave
fs
adc
inc
pop
clc
scas
repz
stc
adc
jl
or
adc
push
cmc
add
cmp
rorl
cmpsb
fildl
mov
sub
cmp
int3
mov
jnp
pop
inc
cwtl
lahf
sahf
adc
js
xchg
jg
or
xor
clc
xor
mov
movsb
adc
cld
dec
mov
dec
je
mov
fwait
cmp
mov
sbb
mov
gs
insl
mov
repz
push
and
cmp
sbb
mov
mov
adc
mov
int
jle
xchg
mov
xor
inc
lcall
adc
orb
clc
fucomip
repz
pop
xchg
dec
lahf
lret
insb
mov
addr16
pop
xor
mov
inc
pop
adc
arpl
in
stos
sbb
rcrb
or
mov
pop
jne
and
lds
cmp
xor
adc
fnstenv
clc
das
clc
aaa
jmp
mov
pop
sub
test
movsl
out
xchg
adc
xchg
lods
lock
sub
jne
jmp
mov
or
ficoms
fstps
pop
fistpll
js
adc
cmp
adc
jmp
mov
cmpsl
or
push
xchg
cwtl
loopne
mov
inc
les
mov
sub
or
pop
fidivrs
jnp
cmp
sbb
xchg
xchg
mov
je
cmpsb
enter
sbb
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
andl
mov
arpl
mov
std
lock
mov
adc
adc
ret
sub
aad
inc
sbb
xlat
stos
dec
push
adc
xchg
mov
inc
mov
fwait
fnstenv
scas
sbb
in
js
mov
xchg
dec
mov
sub
or
push
stos
jbe
pop
cmp
fcoml
aad
gs
push
mov
movsl
jg
cli
in
jae
add
negl
sbb
cwtl
dec
adc
xchg
pop
mov
or
loopne
daa
cwtl
and
movsl
cmp
mov
aam
cmp
cmp
fsubrp
fnsave
mov
clc
pop
sub
dec
push
or
fidivs
int
mov
lahf
idivl
es
pop
pop
ret
loopne
dec
pop
add
jmp
clc
sbb
mov
aaa
gs
push
enter
int
shrl
or
test
dec
and
leave
sbb
xor
in
mov
sbb
popf
sahf
mov
jmp
loop
imul
les
jge
les
sbb
pushf
cltd
jae
pop
xor
mov
push
negl
add
xor
aaa
aaa
cs
jecxz
pushf
popf
push
push
aaa
dec
cmp
xchg
adcb
clc
jb
mov
lea
inc
jne
fdivr
mov
xorl
mov
aam
mov
jnp
popf
cmc
insl
pop
mov
lea
mov
int3
pusha
ds
jecxz
mov
shr
inc
cltd
cmp
mov
jmp
adc
dec
mov
xor
shrl
push
cmpl
mov
dec
mov
or
mov
test
or
cmp
or
hlt
sub
jns
and
mov
and
sbb
test
test
shrb
jne
rcrb
jns
movb
adc
xchg
les
cld
xor
xchg
dec
lea
fisubl
arpl
sbb
arpl
test
add
cltd
cmpsl
pop
movsb
cmp
popf
dec
mov
xacquire
leave
in
test
or
add
xor
sarb
push
out
repz
test
cmpsb
lret
movsl
cwtl
mov
xchg
shrb
mov
aad
mov
testb
stos
mov
pop
ljmp
popf
sub
and
or
int
imul
push
sub
mov
mov
loopne
mov
repz
sti
dec
push
inc
cmpsl
lret
jecxz
add
mov
sbb
adc
inc
inc
cmp
lcall
push
adc
xor
mov
xor
mov
sbbb
lret
push
movb
fwait
jne
sbb
cmp
test
xor
in
cwtl
xchg
sbb
cmp
pop
push
mov
notb
stos
ja
leave
add
pushf
cmpsb
or
sub
cmp
les
and
fstps
mov
popa
or
fiaddl
mov
sub
iret
add
adc
sarb
xor
test
mov
clc
pop
xchg
imul
xor
jge
fcmovbe
or
cmp
in
jne
xor
adc
mov
mov
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
jmp
mov
lahf
in
clc
daa
cltd
push
lock
ss
add
mov
adc
fsubrl
popa
pmuludq
icebp
mov
adc
pop
stos
mov
loop
inc
std
mov
push
xchg
aad
dec
pop
inc
shr
and
call
nop
cmp
pop
sbb
xor
out
imul
push
jae
mov
jno
jb
adc
stos
sbb
mov
pop
outsb
js
lods
fbstp
xchg
rclb
insl
in
pop
jmp
rcrb
repz
mov
xor
and
and
lea
leave
aad
repz
stos
jmp
std
shl
fwait
lea
xor
mov
cwtl
cwtl
push
enter
orl
imul
sahf
dec
sub
cmpl
add
mov
and
mov
std
clc
sti
mov
xor
push
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
xchg
xor
cmpl
mov
dec
aam
popa
cmpsb
out
mov
jb
sub
pop
pushf
pop
addr16
std
mov
je
cmpsl
and
jnp
jg
xor
mov
inc
sti
and
int3
xchg
jg
lret
fsubrl
daa
cmp
sub
push
mov
push
in
imul
pop
inc
cmp
mov
call
cmp
cltd
enter
test
lea
adc
and
mov
int
jle
pop
jmp
mov
shl
mov
shr
repz
adc
push
mov
loopne
out
cmpsl
mov
pop
mov
and
add
lcall
or
xorb
popf
mov
lret
adc
dec
int3
imul
cltd
and
repnz
test
sbbb
iret
sbb
rcrl
add
mov
sbb
sbbl
idivb
xchg
fwait
xchg
pop
sub
jns
mov
push
icebp
loopne
or
cwtl
lahf
fisttps
jle
lods
inc
cld
sbb
js
mov
subl
inc
stos
or
fmuls
js
cltd
jns
scas
sbb
and
mov
xor
rolb
imul
jle
int
imull
ret
fincstp
clc
in
sbb
roll
mov
enter
sbb
pusha
add
inc
adc
or
cmpsl
scas
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
iret
cmp
cmp
in
jne
rcrl
add
lcall
aad
or
ret
or
lret
movsl
mov
push
insb
mov
sub
testl
jo
push
scas
mov
bound
sbb
rcr
cmp
sub
inc
popa
mov
sub
lret
push
mov
or
or
fistps
sbb
push
js
ret
sahf
sahf
xchg
cmp
js
xchg
jg
mov
ss
mov
mov
pop
fsubl
mov
push
std
adc
mov
and
dec
aam
stc
mov
and
pop
inc
std
inc
les
lods
ds
mov
pop
xchg
jg
jb
fwait
jl
into
test
bound
add
and
inc
mov
test
je
xor
pop
jp
idivl
aad
repz
ret
loopne
pop
pop
dec
rorl
jnp
jl
mov
inc
sbb
mov
lcall
push
cwtl
xor
sbbl
mov
lods
popf
aad
fldenv
cltd
xchg
rcl
fiadds
fists
push
ja
fs
mov
cli
dec
fsub
add
push
xchg
fsts
pop
lds
lds
xchg
mov
out
jg
add
pop
push
cli
std
ret
andb
lcall
pop
test
xor
pop
imul
or
adc
insl
test
rorl
dec
aam
jns
dec
xor
jp
cmpsb
mov
fdivrs
out
mov
std
jge
push
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
lock
mov
shr
inc
cltd
cltd
or
sbbl
rclb
mov
das
push
mov
mov
movsl
sti
iret
mov
jae
fsubl
movsl
lds
jg
ret
sbb
loop
leave
fdivl
ret
sbb
cmpsb
mov
out
les
pop
push
dec
sbb
cli
scas
jae
stc
fs
mov
sar
mov
nop
sbb
dec
adc
test
cmc
add
jl
or
xor
nop
fwait
push
xchg
sub
es
xor
push
pushf
cmp
sbb
sbb
adc
cmc
and
sbb
mov
jl
adc
jae
add
jg
mov
stc
mov
movsl
inc
push
mov
or
mov
clc
adc
movsb
inc
daa
popf
jmp
lahf
cmpsl
mov
fwait
lea
jg
bound
out
adc
pop
sub
std
push
or
int
imul
push
sub
repz
push
out
repz
inc
or
pop
mov
sub
out
divl
mov
add
movsl
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
fldenv
mov
scas
popf
push
jnp
rcrl
les
jl
jnp
hlt
xor
or
add
sub
cwtl
int
jo
scas
mov
test
add
inc
pushf
loop
jp
xor
and
add
fstps
cld
into
mov
cmp
add
or
jg
repz
or
data16
xchg
loope
pop
xchg
fisttps
sub
mov
jl
mov
cmp
in
jne
es
sub
mov
dec
and
push
jg
mov
mov
fcomps
fsubr
mov
sbb
sbb
ret
shr
ss
les
jl
ss
pop
int
cmp
in
es
push
lahf
jecxz
pop
mov
sbb
sbb
add
lds
inc
cmpb
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
out
into
arpl
sbb
jge
shrl
cmpsl
pop
pushf
pop
pusha
add
sub
ss
ret
repz
je
enter
cmp
push
sbb
ror
rolb
inc
push
rorl
xor
test
insl
stc
mov
inc
sbb
cmpsl
ret
out
lret
mov
lea
xor
mov
cwtl
jns
xchg
enter
ret
add
out
sbb
imul
sahf
dec
sub
xchg
jp
into
pop
test
adc
aam
cmp
lds
aaa
rcrl
lahf
lret
or
add
sub
cmp
xor
mov
mov
inc
sbb
inc
inc
sbb
orb
or
mov
pop
jne
and
lds
cmp
dec
jmp
int3
das
imul
pop
sub
addr16
xor
and
or
push
sbb
clc
ds
jbe
sub
sub
cld
int3
cmp
inc
pop
pop
mov
lock
loop
push
sub
adc
cmove
rcrb
std
gs
inc
cmpsb
pop
xorl
sti
repz
sbb
lahf
jle
push
leave
call
mov
testl
sbb
xchg
out
mov
sub
mov
int
jle
fldpi
mov
xor
int3
lcall
int
xor
shrb
adc
inc
rcl
fidivrs
gs
adcb
adc
pop
and
dec
push
repnz
sahf
push
inc
mov
rclb
and
testl
push
clc
mov
lods
push
fildl
jnp
rcrl
les
sbb
ret
add
pushf
addr16
and
xchg
lcall
pop
stos
fsts
call
push
adc
xchg
xchg
jge
mov
push
scas
mov
mov
push
cwtl
cld
inc
sarb
js
or
in
ja
jns
data16
push
dec
and
xor
test
insl
decl
movsb
inc
sbb
cmpsl
ret
out
mov
fwait
lea
xor
mov
cwtl
sbb
xchg
enter
and
add
out
pop
fisubrs
pop
dec
test
sahf
dec
mov
repz
mov
arpl
fsubs
movsl
popf
sysret
fists
add
push
sbb
mov
pop
cmc
loopne
imul
ret
fs
pop
lret
adc
dec
int3
imul
mov
xor
mov
int3
shll
jno
rorb
cmpsl
icebp
add
cmp
sbb
xor
xchg
push
test
push
stos
jne
add
adc
pop
jo
sbb
aad
fstpl
lahf
pop
outsb
js
cwtl
push
add
lock
in
nop
xchg
incl
cwtl
cld
inc
mov
test
mov
mov
inc
cmpsb
pop
mov
xchg
mov
sub
lret
lahf
jle
int
call
cmp
cltd
enter
mov
pop
sub
push
adc
xor
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
cmp
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
add
pop
or
xor
add
testl
add
xor
movsb
cld
and
rcrl
mov
mov
stc
and
rorl
inc
clc
or
fildl
pop
dec
xor
mov
js
and
je
mov
out
xor
int
out
shlb
fdivrl
fnsave
mov
cwtl
push
enter
sbb
inc
adc
out
mov
cs
push
fnstcw
xor
xchg
and
rcr
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
inc
pop
xchg
add
push
cwtl
xor
sbbl
mov
sub
cmp
test
pop
out
fisttps
inc
inc
ficompl
lret
shl
sub
xchg
adc
lret
in
test
std
cld
jns
sbb
sbb
lods
pop
fs
dec
inc
mov
xor
out
adc
cwtl
lahf
push
xchg
cmp
ss
fmull
sti
and
push
fsts
aam
mov
add
mov
rcr
mov
inc
cwtl
push
test
dec
mov
es
mov
lahf
pop
xchg
incb
jb
fwait
jl
int
enter
loop
icebp
pop
sub
dec
push
or
fiadds
rorb
jnp
cltd
push
mov
xor
test
aas
xlat
push
dec
pop
mov
cmp
es
clc
rolb
mov
movsl
mov
jg
std
dec
inc
sbb
add
add
adc
mov
fdivl
ret
sbb
fs
dec
imul
push
cmc
mov
out
mov
mov
ret
cmp
mov
dec
push
mov
mov
sub
lcall
jge
pop
add
flds
cld
into
jo
ret
sub
test
incl
or
fmull
repz
mov
inc
es
mov
sbb
scas
and
xchg
jp
bswap
test
sub
mov
out
mov
ret
fld1
std
jge
sbb
fsubl
mov
fsub
mov
xor
shr
lret
insb
int3
sub
add
mov
lcall
mov
sub
out
daa
push
adc
adc
mov
outsb
add
cmpsl
inc
test
shr
sub
nop
aas
mov
sbb
jecxz
jl
les
mov
mov
and
das
jmp
dec
sar
mov
sub
insl
pop
imul
xor
lock
rorl
stos
movsl
xchg
mov
fcoml
test
leave
push
or
std
stc
loope
sarl
xchg
sti
jne
fsts
mov
or
add
xor
sub
lods
push
stc
stc
movsl
ret
fmul
das
mov
lahf
cmpsl
mov
fwait
lea
decb
adc
sub
cmp
or
inc
mov
cmpsb
or
jle
pop
push
mov
call
jns
dec
and
rcrl
add
call
xchg
movsl
mov
or
inc
movl
inc
cmpb
adc
ret
mov
jmp
addr16
cmp
iret
test
cld
lods
jns
cmp
xchg
sbb
stc
mov
dec
pop
pop
in
inc
cmp
add
and
xchg
fmuls
cmp
or
pop
dec
or
jge
imul
sub
mov
cs
mov
scas
das
pop
icebp
cmp
cmp
pop
pop
mov
popa
cmp
aas
sub
inc
sbb
mov
jle
mov
aaa
mov
adcl
mov
pop
adcl
jns
inc
and
rcr
call
rolb
in
jne
mov
int3
pop
xor
or
mov
add
inc
sub
xlat
adc
ret
dec
sub
mov
popa
push
mov
sbb
in
mov
mov
pop
xor
call
or
add
test
pop
and
dec
mov
adc
stos
inc
sbb
int
mov
pushf
adc
test
pusha
dec
stos
push
xchg
inc
sub
lahf
mov
outsb
popa
push
fnstcw
mov
xchg
sbb
cmp
xchg
lret
rcll
push
xchg
or
sbb
sbb
pop
call
test
add
jnp
xor
cmp
cwtl
cmp
xchg
test
mov
addl
add
push
cmp
cwtl
dec
and
xor
test
insl
loope
movsb
inc
sbb
cmpsl
ret
out
stos
into
fwait
lea
xor
mov
cwtl
pop
aaa
xchg
enter
int3
adc
lret
sub
add
mov
idivl
dec
arpl
aad
mov
loopne
rorl
callw
pop
in
cmp
xchg
xchg
push
xchg
jle
mov
pop
shlb
inc
sbb
mov
mov
cld
pop
mov
lahf
sbb
cmp
push
mov
mov
push
adc
dec
and
inc
cmp
adc
ret
push
nop
sbb
ja
or
mov
fadds
or
add
cmp
xor
fsubr
in
adc
cmp
sarb
iret
and
inc
jecxz
mov
les
pop
jecxz
xchg
mov
sub
aaa
inc
and
call
mov
testl
test
add
mov
popf
mov
lea
dec
mov
add
mov
mov
imul
pop
xor
iret
sbb
lds
or
adc
pop
sub
jno
hlt
test
lds
jo
cwtl
push
cmpsb
add
jge
rorl
icebp
cltd
pop
out
lret
sbb
lock
das
cmp
lods
aad
lods
dec
or
dec
mov
test
cmp
ret
add
and
lcall
insl
fdivrp
ds
dec
sahf
sbb
jmp
cwtl
popf
adc
jg
pushf
jne
jle
fimuls
adc
mov
cmp
imul
popl
xor
mov
stos
dec
and
je
cmp
pop
test
out
xor
int
jmp
idiv
enter
inc
cmpsl
fucom
aaa
out
mov
and
movsb
cmp
cmp
jne
js
popa
popa
mov
dec
and
adcb
inc
rcll
push
imul
lcall
into
inc
xchg
lods
nop
in
mov
mov
lock
add
cmpsb
sub
rcrb
mov
das
stos
inc
in
dec
sbb
lahf
movsb
fldenv
test
shll
ror
stos
out
lret
movsl
icebp
add
push
cmp
sbb
aaa
push
in
jae
int
mov
out
mov
mov
lods
shlb
adc
popa
jp
add
jno
sub
int
push
adc
jb
in
sub
or
mov
sub
push
mov
hlt
decb
xorl
cmp
lahf
pop
xchg
pop
enter
jl
dec
mov
loop
rcrb
or
cwtl
sub
and
mov
jmp
test
mov
mov
xchg
fisttpll
pop
pand
ret
pop
fistl
adc
cmp
jnp
std
aam
lret
jecxz
cmp
sbbb
lock
jl
roll
call
pop
ja
lret
inc
sbb
add
cmp
in
aad
lds
fwait
hlt
jle
and
mov
mov
jno
or
sbb
xor
mov
js
mov
xor
jecxz
movsb
fmull
cmpsl
or
pop
jb
sbb
insl
xor
pop
aaa
cwtl
rolb
andl
mov
mov
and
xchg
jp
dec
xchg
test
sub
cmp
sbb
and
jge
dec
cmpsb
inc
cltd
out
cmp
mov
hlt
pop
aaa
test
and
sbb
fisubrs
and
in
cmc
mov
nop
imul
sarb
ficoms
ja
pop
inc
ret
call
mov
jns
xchg
rcrb
mov
add
scas
push
int
imul
nop
adc
stos
jb
lcall
xchg
test
out
fists
xchg
ficompl
mov
mov
je
scas
xchg
adc
jno
les
cmp
dec
mov
mov
mov
dec
movsl
xchg
mov
add
jmp
sbb
xchg
leave
jg
ret
in
push
cmp
lcall
sahf
jne
or
or
add
fsubrs
fildll
mov
lods
push
jecxz
movsl
ret
fadd
mov
mov
mov
fwait
xlat
pop
fxch
mov
mov
cmp
xor
or
cmp
aad
mov
mov
dec
cmp
in
aam
pop
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
jns
test
or
mov
jbe
push
xchg
add
mov
iret
add
movsl
pushf
outsl
mov
fucom
cli
mov
mov
ret
cmp
lods
cmpl
lret
cmpsl
test
adc
lds
push
stos
jge
pop
mov
int
add
jecxz
into
aam
inc
cmp
mov
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
mov
jmp
mov
jo
xchg
mov
ds
sub
mov
jl
mov
mov
sahf
int
mov
rcll
sbb
orb
adc
mov
daa
fistpl
dec
sahf
dec
dec
sub
out
movsb
jbe
cwtl
movsl
mov
xor
sysret
fists
ret
sahf
push
gs
rorb
mov
mov
xor
jp
lahf
orb
stos
cli
mov
movsl
sbbl
dec
sbb
and
cmp
clc
scas
movl
sar
loope
mov
jl
xor
or
pop
push
scas
push
cs
push
sub
mov
mov
int
mov
pop
ds
jle
mov
xlat
add
lods
rcrl
push
or
pop
out
or
cmp
add
push
mov
xlat
xor
test
insl
jmp
movsb
inc
sbb
cmpsl
ret
test
stc
out
mov
dec
mov
rcll
addb
sbb
hlt
mov
dec
dec
test
cltd
clc
or
mov
sbb
out
and
cmc
mov
stc
ss
lock
jne
mov
lods
lahf
pop
adc
ret
fidivrs
rol
mov
add
test
add
insl
fwait
ret
sbb
mov
sbb
iret
test
lods
push
inc
jle
inc
and
stc
test
dec
pop
test
xor
test
push
jl
inc
cld
xor
push
insl
lcall
outsl
les
aaa
jns
adc
lds
lret
mov
stos
bnd
insb
push
lret
loop
sarb
or
adc
and
lea
pop
mov
lock
sti
ret
xchg
mov
sub
xchg
inc
and
dec
outsb
mov
mov
jno
test
adcb
inc
rcll
sbb
xchg
fcoms
lret
mov
fsubs
sbb
out
movsb
cltd
xlat
test
xor
ret
loopne
inc
adcb
in
cltd
pop
push
add
enter
mov
cmp
mov
pop
sbb
nop
pop
ret
cmpsb
mov
cs
mov
cs
push
jnp
mov
cltd
dec
sub
lahf
pop
stos
fs
movsl
stc
dec
push
pop
ljmp
rcll
mov
mov
cmp
dec
mov
sbb
jle
cmpsl
or
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
xchg
addl
add
add
sbb
dec
and
je
mov
out
xor
push
gs
mov
mov
in
mov
jne
aad
popf
pop
sub
addb
pop
xor
mov
push
inc
xchg
sbb
cmpsl
or
dec
dec
lcall
push
dec
pop
mov
cmp
cmpsb
ja
clc
in
popf
pop
aas
push
jg
pop
mov
adc
imul
sbb
jg
enter
mov
lock
dec
mov
sub
or
mov
jae
sbb
inc
jno
movb
mov
push
jle
push
pushf
push
dec
pop
xchg
sbb
jno
add
xchg
lcall
lods
mov
mov
and
or
pop
mov
and
lahf
scas
mov
mov
mov
or
push
sub
or
cmp
sbb
add
sub
push
mov
loopne
mov
das
xchg
mov
sahf
outsl
mov
call
mov
push
mov
mov
lea
in
test
push
xchg
and
xchg
sbb
sahf
sbbl
int
std
repz
imul
cmc
fsub
hlt
xor
sti
jne
sub
add
mov
outsb
or
int
inc
sbb
pop
inc
test
shl
and
into
test
insb
ror
sbb
inc
lahf
arpl
sbb
sub
and
mov
push
out
add
pop
mov
inc
push
sbb
xchg
jge
jae
outsb
in
add
addr16
rorl
push
test
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
pusha
andl
mov
mov
and
xchg
jp
into
popa
test
sub
movsl
pop
pop
les
sbb
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
inc
shlb
mov
jbe
adc
leave
mov
sbb
jnp
arpl
or
cmp
in
lods
dec
sbb
lahf
movsb
fstps
sbb
call
push
xchg
push
test
dec
push
mov
sbb
lret
or
inc
jns
dec
rcr
xchg
and
pop
test
lods
inc
sbb
scas
in
dec
sub
dec
fnsave
sbbl
out
adc
xorl
rorl
add
insb
ds
fsubrs
fildll
mov
lods
push
testl
and
inc
cli
jnp
jecxz
cmp
add
push
out
call
push
xchg
jg
enter
aam
sub
jne
movsb
popf
push
mov
shl
mov
inc
arpl
int
jns
push
jbe
inc
xor
cs
cld
or
or
jo
lock
aas
mov
scas
push
mov
popf
aas
lods
pushf
inc
stos
xchg
adc
sub
ljmp
mov
inc
fstpt
push
cmp
lcall
jl
orl
pop
rcl
xchg
mov
mov
xchg
dec
mov
addr16
test
in
sbb
scas
fcomi
js
mov
fsubrl
fiadds
mov
addl
add
push
mov
fwait
xor
cmpsb
xchg
das
push
lcall
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cltd
jne
dec
mov
imul
sbb
dec
mov
inc
add
pop
arpl
int
mov
into
scas
pushl
xchg
mov
call
jp
loopne
sbbb
cltd
test
inc
sbb
lock
jns
mov
jl
repnz
in
movsl
ret
insb
test
iret
add
stos
jb
stos
jecxz
jne
push
and
enter
push
xor
cmp
pushl
jo
test
inc
sahf
cmp
mov
mov
sub
mov
lods
cmp
cli
mov
lahf
push
xchg
faddl
mov
leave
loop
sarb
and
lea
mov
fmuls
test
shl
mov
clc
push
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
sbb
pop
fisubs
rcl
ror
mov
xor
or
xor
and
in
mov
aaa
jbe
cmpl
insl
in
lret
lock
fiadds
dec
inc
push
add
xor
jg
ret
scas
push
pop
leave
sbb
adc
sub
mov
stos
mov
push
sahf
lea
das
fstl
jg
sbb
fcoms
callw
mov
pop
ret
flds
mov
stos
add
jmp
mov
pop
pop
test
push
inc
sbb
scas
fcomi
js
lcall
testb
dec
or
adc
add
push
mov
lock
sub
fisttps
cmp
aam
inc
and
stc
jmp
adc
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
xor
cs
mov
mov
sbb
push
outsb
sbb
pop
sub
xor
icebp
cli
jp
fnsave
fs
inc
inc
mov
sub
call
scas
dec
mov
cmp
or
fisttps
lret
pop
adc
push
mov
ljmp
pop
stos
inc
lcall
gs
lods
cmp
or
mov
out
js
insb
push
leave
mov
loop
sarb
and
lea
inc
mov
adc
and
push
xor
push
jg
fsubr
pop
out
inc
sbb
jnp,pt
sti
inc
adcl
das
jno
adcl
xchg
mov
add
sbbl
mov
push
inc
xchg
sbb
mov
rcr
cmc
fsubs
mov
jae
xchg
mov
out
mov
jnp
xchg
push
and
or
mov
xor
sbb
xor
cltd
and
ret
mov
popf
jnp
fadd
stos
dec
sub
insb
push
push
in
jbe
inc
pop
aad
xor
fxch
push
add
fisttps
lcall
xor
push
lock
pop
stos
xchg
push
adc
push
mov
add
push
sbb
jmp
scas
inc
fwait
push
shlb
or
or
popl
jecxz
dec
mov
sbbl
into
and
scas
enter
aas
pop
adc
jb
fwait
jo
jmp
cmpl
lea
in
test
push
xchg
and
test
sbb
gs
into
fsubs
sub
xor
int
add
in
aas
dec
ret
push
cwtl
mov
pushf
or
mov
sub
mov
test
les
xchg
bnd
loop
dec
xchg
imul
std
mov
dec
popa
cmp
rcll
andl
xchg
or
fisubrl
lahf
or
sub
pop
mov
mov
lods
inc
and
lahf
scas
mov
mov
jo
jb
iret
pusha
sub
or
mov
mov
repz
dec
xchg
adc
stos
fwait
xor
test
sub
xchg
push
jg
enter
add
rcrl
sti
xor
adc
sub
je
or
push
or
inc
cmpb
push
dec
xchg
lea
ljmp
cmp
dec
call
jg
pop
ret
mov
sbb
jns
rcrl
add
xor
js
xor
in
mov
mov
mov
sbbb
xor
lods
jno
push
sbb
push
and
mov
rcll
adc
aaa
push
idivl
fs
mov
pop
fnstenv
jno
cld
cmp
sbb
or
jl
push
stos
xchg
stos
cmp
fwait
push
xchg
pop
mov
push
push
mov
pusha
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
enter
inc
inc
sbb
ror
loopne
stos
popf
jecxz
or
dec
into
movsl
ret
mov
push
aas
out
xor
push
into
fdiv
pop
fdivrs
lock
mov
and
mov
jno
mov
dec
mov
push
adc
in
shlb
fdivl
test
push
push
orb
ret
imul
in
cltd
jle
push
fstpt
lock
adc
mov
and
nop
out
sbb
push
xchg
cltd
pusha
or
lahf
mov
movsb
sbb
stos
lods
mov
sbb
sub
cmp
dec
or
data16
mov
mov
lcall
mov
les
push
lcall
pop
test
lods
inc
sbb
scas
in
sub
mov
or
jo
sbbl
xor
or
stos
sub
hlt
sub
push
jmp
scas
or
xchg
mov
adc
mov
inc
and
xchg
lahf
fdiv
push
fdivrs
clc
sbbl
jecxz
xchg
mov
xchg
xchg
lea
add
es
repnz
lret
jge
xor
push
mov
mov
mov
in
inc
xor
lret
gs
js
inc
cmp
add
rcrl
adc
mov
dec
pushf
sbb
jecxz
sbb
popa
cmp
les
cmp
sub
fs
jne
sbb
cli
les
ljmp
cmc
inc
sbb
or
cmp
pop
arpl
mov
lods
mov
mov
push
adc
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
xor
rorb
cmp
jnp
mov
daa
scas
xor
imul
fstl
shrl
lahf
cmp
dec
xchg
scas
adc
xchg
or
and
xor
xchg
int3
and
cmpsl
stos
pop
lea
xor
icebp
fisubs
sub
pop
adc
popf
movsl
pop
and
adc
pop
icebp
fsubs
xor
rcrl
add
xor
push
repnz
pop
jecxz
repnz
jns
mov
or
inc
mov
lds
mov
sbb
ja
stos
cmp
andl
jb
xchg
dec
inc
shlb
or
imul
mov
fwait
lods
gs
lods
cmp
cmp
pusha
mov
shl
js
insb
push
dec
mov
shlb
call
sahf
cs
les
cmp
cmp
sbb
jnp
push
cmc
in
xchg
xchg
pop
test
fildll
push
into
inc
fstp
sbb
std
jecxz
sti
int
fdivs
enter
int
cltd
sbb
and
jle
push
inc
enter
repnz
notl
pop
jnp
sbb
sub
lods
cmc
lods
int
cmp
jbe
and
mov
mov
inc
sbb
fiadds
je
pop
sbb
add
adc
or
sub
sub
cmc
in
movsl
dec
or
dec
sub
and
les
mov
ds
movb
cltd
add
popf
lret
int
test
nop
je
test
and
cmp
ljmp
mov
push
dec
pop
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
out
js
mov
add
xchg
ds
inc
jmp
fucom
dec
aam
stc
mov
adc
out
inc
jge
imul
rcr
push
pop
insl
cmovg
jmp
mov
cltd
pop
xchg
mov
js
sbb
mov
lret
xor
and
lods
imul
ret
aas
shlb
call
jae
push
mov
xchg
test
cmp
clc
cmp
mov
mov
sbb
outsl
in
fnstsw
and
inc
dec
or
inc
mov
xor
les
out
dec
and
aad
sbb
sub
test
sub
call
sbb
lods
mov
mov
cmpxchg
or
add
dec
mov
fisubrl
lahf
or
adc
pop
mov
test
lods
inc
and
lahf
scas
mov
mov
into
xor
mov
mov
and
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
cmc
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
cmp
jno
xchg
mov
and
jne
dec
aad
and
cmp
xor
cmp
add
lods
cwtl
insl
mov
xor
in
cld
aas
in
and
mov
inc
jnp
pushf
fwait
aaa
test
dec
mov
sbb
mov
jp
and
cmp
pop
xor
lods
dec
sbb
and
dec
pop
inc
cmp
pop
pop
ss
popf
lret
add
sub
inc
sbb
or
in
jnp
stos
xchg
stos
cmp
fwait
push
xchg
cmp
shrb
push
ret
into
mov
fucomi
repnz
and
nop
adc
adc
fwait
andl
xchg
stc
xchg
xchg
mov
jmp
inc
cwtl
dec
int
push
fidivrs
not
xchg
xor
nop
xchg
fld1
jb
addr16
or
lds
enter
sahf
xchg
jge
adc
sbbl
sub
mov
cli
int3
mov
cltd
pop
gs
fistps
andb
lock
inc
sub
fdivrs
jns
ds
mov
mov
jp
mov
imul
xor
or
aad
dec
test
imul
jb
mov
in
xor
insb
jecxz
mov
mov
xchg
test
dec
mov
sub
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
movl
out
cmc
out
loope
mov
mov
mov
push
inc
or
push
outsb
mov
push
fidivrs
repz
jp
mov
adc
punpcklwd
outsl
or
vpsubq
sub
cmc
les
cmp
push
and
or
iret
push
mov
dec
mov
sbb
or
sbb
dec
call
jl
ret
arpl
lds
rcrl
adcb
mov
add
xchg
cld
xchg
or
fs
icebp
mov
and
push
dec
or
inc
incl
xchg
mov
mov
jnp
jae
fistpl
stos
lret
inc
ret
pop
sub
inc
sbb
or
cmp
movsb
pop
jnp
mov
lods
mov
mov
push
adc
jge
inc
aad
sar
lret
pop
filds
in
or
sbbl
sub
push
xchg
adc
data16
or
mov
loopne
mov
inc
and
lret
gs
stc
outsl
push
pop
clc
dec
pop
movsb
and
ljmp
fwait
push
mov
jb
xchg
pop
inc
push
dec
mov
cmc
hlt
pop
mov
sub
sti
jge
mov
lret
imul
in
test
inc
sbb
push
out
inc
sbb
xor
in
call
dec
mov
jno
dec
xor
jns
pop
jb
movsb
mov
xor
scas
ret
sbb
lcall
mov
mov
popf
aad
insb
scas
xchg
test
cmc
mov
lcall
popf
mov
mov
dec
mov
push
pop
test
dec
inc
sbb
mov
push
repz
cld
mov
icebp
xor
pop
sub
jg
or
ret
fdivs
rcll
movsb
mov
sub
cmpsb
shrl
pop
out
inc
sbb
mov
jge
outsl
daa
sbb
sar
xor
or
dec
adc
mov
aad
inc
cmpb
cs
mov
sarb
or
push
sahf
cmp
mov
push
pop
push
or
fisttps
data16
lahf
add
ja
add
lods
cmpsb
sbbb
popf
xchg
icebp
mov
movsb
lds
nop
lds
mov
js
test
ljmp
mov
fldt
arpl
add
xchg
dec
inc
shlb
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
test
into
pushl
andl
in
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
push
xchg
jbe
cltd
add
mov
cmp
add
sti
in
and
or
or
insb
sbb
das
std
fisubs
sub
fistl
inc
sahf
jecxz
cmp
and
and
mov
xor
sbbl
fsqrt
jns
add
or
insl
lcall
push
fcompl
jne
fs
adc
push
push
test
pop
sbb
mov
cmp
lods
push
jns
inc
dec
popf
lret
xlat
and
lods
add
push
lcall
loop
stos
xchg
push
adc
push
lret
shrb
enter
ffree
cmpb
mov
push
popf
loop
xchg
pop
jb
add
adc
or
divl
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
call
lret
push
into
dec
scas
out
jae
popa
sbb
idivb
shrb
movsl
pop
sbb
inc
adc
test
call
repnz
loopne
dec
mov
leave
mov
sub
push
pop
ljmp
inc
clc
lds
lock
xchg
lahf
bswap
pop
stos
fsubr
mov
xchg
leave
js
scas
mov
jecxz
lret
lods
mov
mov
xorl
sub
lret
addb
ss
imul
adc
pop
xchg
push
mov
aad
jge
sahf
adc
js
ja
or
fwait
leave
or
js
cmp
mov
andl
or
add
int
dec
and
pop
ja
mov
aas
cmpsb
enter
adc
or
enter
jg
xchg
cmp
cmpsl
hlt
xor
and
xchg
push
dec
imul
mov
lods
sti
lods
int
clc
into
cmp
sbbl
pop
lds
jl
out
hlt
repnz
int
aaa
push
sub
rol
pop
inc
pop
ljmp
gs
adc
pop
addb
stc
sub
fisttpl
mov
int3
ljmp
popf
lret
add
sub
inc
sbb
or
jl
pop
stos
xchg
stos
cmp
fcoml
jb
dec
jns
arpl
sbb
subl
out
push
pop
xchg
jl
or
sub
dec
jae
and
push
push
scas
or
xchg
mov
adc
mov
pop
mov
outsb
ret
inc
fdivrs
mov
cmpsb
sti
xor
add
sub
or
cmp
ds
mov
stos
sbb
aaa
test
xor
and
jmp
arpl
xchg
mov
push
into
lcall
ja
pusha
fwait
call
lock
add
mov
mov
or
fnstenv
jmp
sbb
and
pop
stos
push
outsl
jno
mov
mov
in
push
mov
stc
pop
lods
mov
mov
xchg
test
dec
mov
mov
add
ljmp
xor
adc
cmpsl
adc
mov
push
mov
pushf
pop
jae
bnd
jecxz
adc
out
mov
in
add
pop
sub
icebp
inc
aam
clc
mov
je
jmp
cmpl
jecxz
adc
jmp
mov
dec
outsb
lahf
inc
es
mov
fdivrs
adc
mov
sbb
push
adc
data16
mov
xor
jb
int3
mov
add
ljmp
or
mov
imul
and
leave
sub
jle,pt
lock
xchg
xor
stc
add
mov
popf
mov
icebp
mov
dec
mov
pushf
push
test
lret
loop
shrl
in
mov
fisubrl
push
add
inc
ret
pop
sub
inc
sbb
or
cmp
pop
mov
ret
sahf
arpl
add
stc
arpl
scas
add
sbb
xchg
xchg
mov
repz
call
stc
fisubrs
add
xor
imul
mov
imul
daa
fld
fdiv
add
bound
ds
test
mov
or
mov
mov
sbb
sub
fistps
add
push
jns
xor
dec
out
mov
jmp
in
cmp
push
add
das
jo
stc
adc
inc
inc
or
add
insb
push
pushf
mov
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
das
scas
sbb
xchg
push
lret
fucomp
cld
std
test
aad
pop
mov
test
icebp
mov
lret
scas
xchg
push
xchg
fdivl
pop
stos
ja
lds
faddl
ja
shll
outsl
call
pop
xchg
cld
imul
lods
popf
fdivl
leave
loop
jl
nop
xchg
push
push
mov
pop
nop
es
dec
mov
pop
adc
js
fnstenv
imul
add
sbb
mov
and
lods
std
add
xchg
mov
xor
lea
xchg
adc
push
lahf
lods
jb
ret
push
dec
mov
sbb
or
cwtl
movsl
pop
loopne
pop
push
add
push
jg
fwait
xchg
fdivrl
imul
cs
insl
push
sbb
jnp
fcmovb
sub
test
pop
imul
mov
pop
mov
je
test
adc
scas
mov
idivl
mov
fidivl
mov
bound
or
dec
inc
shlb
or
imul
fistl
mov
fwait
pop
sbb
pop
or
fsubrs
stc
sub
les
adc
push
addl
jmp
fucom
dec
sarb
push
icebp
imul
or
inc
stos
xor
jbe
out
bswap
pusha
and
and
insl
andb
mov
out
push
and
dec
mov
cmc
hlt
mov
int
pop
ljmp
pop
ds
loopne
mov
repz
mov
imul
pop
xchg
fldl
lcall
outsl
cmpsl
mov
loop
lcall
sub
nop
xlat
stos
dec
sahf
mov
pop
sbb
stc
mov
cmp
sub
fucomp
jae
jns
fs
popf
lret
rol
test
mov
and
add
xchg
stos
jge
dec
xor
js
xorb
jle
mov
lods
inc
movsb
outsb
shll
pop
psubusb
popf
push
fcom
pushf
jae
sub
std
xor
adc
adc
pop
dec
cwtl
rorb
cmp
mov
xor
es
fs
lods
cmc
add
inc
fst
adc
call
push
sbbl
clc
hlt
pusha
sbb
inc
xor
aam
mov
add
aad
add
out
pop
popa
push
push
push
xchg
mov
int
mov
adc
in
jbe
ret
clc
sti
jno
or
cmp
and
add
sbb
testb
mov
dec
sbb
addb
iret
push
sbb
hlt
test
push
jne
and
pop
stos
fsubr
mov
xchg
leave
inc
ret
lret
jecxz
mov
aaa
mov
xor
nop
fisttpll
add
or
fstps
ja
sbb
jb
xor
push
xor
cwtl
xchg
fucomi
repnz
add
pushf
jnp
sub
cmp
xchg
stc
xchg
xchg
sahf
inc
cwtl
fmull
cmp
clc
push
repnz
mov
ret
add
push
xchg
imul
cmpb
pop
mov
gs
cltd
xlat
xchg
mov
call
mov
je
sbb
int3
pop
inc
sub
dec
adc
sbbb
xor
and
test
mov
sbb
xchg
sbb
or
xchg
in
lods
es
inc
cltd
xchg
dec
popa
xchg
clc
dec
sbb
mov
movsl
inc
mov
fdivl
inc
daa
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
pop
ljmp
popf
lret
add
sub
inc
sbb
or
lods
or
fnsave
adc
mov
sub
test
xor
fnstenv
push
loope
fistpll
mov
jae
punpcklwd
dec
inc
sub
xchg
pop
les
mov
inc
mov
lods
jno
and
test
jge
inc
and
and
mov
mov
mov
mov
xchg
pop
lcall
xor
xchg
test
mov
dec
lea
or
adc
inc
xor
rcll
stc
fdivrs
cwtl
insl
mov
and
fstl
addb
iret
adc
dec
jnp
inc
sub
bound
mov
ret
mov
pop
or
dec
popf
sbb
sbb
cli
test
outsl
jno
push
dec
sbb
cmp
push
push
lods
mov
mov
xchg
test
dec
mov
push
push
push
outsb
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
ffree
pusha
mov
lret
fstl
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
faddl
mov
pop
mov
fcomp
pop
fisubs
movb
mov
jmp
popf
and
mov
pop
and
daa
hlt
xor
and
mov
sbb
mov
ficoms
loopne
into
mov
sub
test
add
icebp
jae
ljmp
out
sbb
xlat
sub
mov
lock
insl
xchg
dec
leave
fsubrl
frstor
push
test
lret
lcall
sub
fildll
jae
fistpl
int
arpl
pop
sub
lret
inc
inc
push
sbb
xchg
pop
cmp
or
push
dec
in
xchg
cmp
testl
cltd
jnp
mov
jno
test
mov
in
pop
in
xchg
pop
sub
jg
or
inc
pop
mov
je
aas
push
mov
sbb
sarb
cmp
lret
or
enter
push
mov
push
cmpsb
mov
shlb
xor
loopne
dec
inc
jp,pt
adc
movsb
cmc
clc
dec
adc
test
mov
sahf
testl
xor
aam
test
filds
pop
and
lret
scas
fdivs
pop
jbe
mov
and
mov
iret
cmpsl
mov
negb
mov
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
test
addr16
fmulp
fucomp
cld
std
mov
aad
jo
xchg
test
mov
nop
fmuls
daa
sbb
cmc
add
ja
stos
inc
lcall
xchg
jge
mov
cmp
scas
push
je
lret
jle
mov
popf
int
leave
or
iret
add
arpl
or
sbb
scas
test
dec
mov
movsl
cwtl
data16
push
mov
push
dec
xchg
push
mov
jns
push
insl
std
dec
jo
popf
pop
out
cmp
dec
cli
icebp
bound
mov
push
adc
xchg
xlat
mov
stos
fwait
in
dec
pop
les
movsl
pop
in
aaa
call
les
jg
add
sarl
xor
mov
adc
insb
or
subb
sbb
xor
popf
scas
dec
pushf
dec
lods
aad
les
inc
pop
test
lcall
sub
fldt
arpl
push
mov
xorb
xchg
or
push
cwtl
pop
stos
xchg
push
fcmovbe
pop
cmp
adc
test
popf
adc
push
nop
push
js
jp
mov
push
popf
loop
xchg
pop
repnz
mov
push
mov
test
adc
test
test
add
popf
mov
cli
jae
pop
sahf
push
lods
or
fsts
pop
lods
jmp
outsl
inc
test
push
inc
mov
cwtl
fisubrs
test
add
adc
pop
es
mov
jg
pop
sbb
call
aam
push
dec
adc
mov
lahf
lret
jecxz
gs
pop
sub
sbb
mov
mov
loop
repnz
lret
movsl
mov
mov
mov
sahf
sbb
push
test
pop
sbb
bound
test
jg
popf
push
dec
popf
lret
mov
stos
pushf
ret
test
mov
jo
xchg
add
fisubrl
scas
push
testl
leave
imul
pop
jbe
loope
stos
fstl
jge
push
xchg
popf
out
jns
repz
fwait
leave
or
js
cmp
sbb
sahf
add
test
or
and
pop
xchg
jmp
dec
js
fidivrl
in
into
push
dec
mov
imul
aad
fwait
mov
xor
xor
dec
dec
xchg
xchg
lea
lcall
push
cmc
jb
push
xchg
mov
pop
sbb
sbbl
jns
pop
mov
dec
mov
mov
mov
cli
add
or
sbb
fisubrs
cwtl
sub
cs
jne
cmpsl
lret
fsubr
movsl
icebp
mov
sbb
scas
mov
jecxz
repnz
mov
loopne
mov
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
stos
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
cmp
dec
xor
imul
lret
inc
fists
call
push
mov
fldl
and
fldenv
mov
hlt
mov
popf
jle
xchg
push
sub
xchg
fwait
pop
icebp
out
jae
sbbb
push
xchg
lcall
pop
jb
movsl
sbb
scas
inc
fwait
pop
or
push
add
repnz
sbbl
popa
xchg
leave
dec
sbb
mov
mov
jne
jl
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
in
jae
push
cld
mov
fs
and
and
shlb
xlat
pop
addb
xchg
pop
lock
movsl
sbb
lcall
dec
pop
cld
dec
push
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
js
jle
mov
inc
dec
or
pop
sbb
lcall
push
xchg
lahf
aam
jg
das
mov
out
imul
clc
popa
jge
outsl
push
inc
sbb
clc
int3
dec
dec
adc
cmp
mov
enter
repnz
and
push
xchg
rclb
mov
in
int
add
inc
daa
pop
mov
mov
lahf
aam
sub
mov
bound
stos
push
ret
mov
sub
sti
mov
sbb
loopne
and
pop
stos
push
outsl
jno
dec
sbb
outsb
mov
ffree
stc
mov
xchg
aam
lcall
adc
mov
or
insl
mov
lock
loope
xchg
stos
inc
and
jns
or
jnp
lret
sar
fisubrl
icebp
adc
push
inc
insb
adc
cmp
or
cwtl
mov
mov
fwait
xor
mov
jbe
sbb
cmp
and
daa
pop
repz
xchg
cltd
xlat
xchg
jle
popf
gs
push
and
cmp
push
call
aas
in
cmp
sbb
xlat
adc
ret
push
xchg
int3
nop
mov
jns
test
dec
and
mov
clc
sti
mov
jecxz
push
sbb
and
lods
je
or
inc
insl
sahf
repz
fsubrl
fnstsw
push
test
lret
mov
shrl
dec
mov
popf
in
mov
repz
fadd
cmp
mov
loope
mov
das
or
cmp
xchg
fnsave
push
add
lock
lds
xlat
outsl
call
pop
xchg
mov
fists
std
out
in
and
rcrl
les
sub
mov
and
dec
aam
inc
les
pop
enter
sub
sub
pop
fidivrs
jnp
test
mov
mov
mov
jecxz
enter
out
dec
cmpsl
ljmp
pop
and
cmc
clc
jnp
popf
xchg
push
adc
or
pop
add
sbb
add
dec
adc
pop
mov
loopne
out
and
aas
pop
mov
dec
lahf
lret
insb
mov
mov
cltd
push
and
lret
cmpsl
mov
test
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
lods
cmp
lods
popl
in
mov
sar
ljmp
sub
adc
test
or
fisubrl
mov
xor
add
jno
aad
xor
fwait
pop
sbb
add
repz
out
xchg
cwtl
mov
mov
and
inc
mov
or
and
movsl
cmp
mov
aam
cmp
movsl
movb
mov
mov
dec
or
jecxz
cmp
mov
cmp
mov
cmpsb
pop
ret
adc
and
cmp
mov
xor
mov
inc
aam
mov
mov
pushf
pop
aaa
adc
or
add
fsubrl
pop
imul
mov
pop
mov
push
inc
lahf
push
popa
stos
sub
jmp
mov
pop
pop
rcr
sub
test
roll
fsts
cmp
icebp
push
scas
xchg
stos
mov
outsb
shlb
xor
inc
jb
mov
pop
lods
loope
cmp
shll
xchg
imul
clc
mov
jl
mov
and
push
mov
mov
xor
mov
mov
and
pop
fdivr
mov
int3
cmp
xchg
push
cmpsb
enter
push
or
pop
fadd
pop
mov
jmp
mov
sub
mov
or
sub
and
cmp
push
cwtl
sbbb
cmp
xorb
repz
ret
loopne
dec
pop
inc
push
jmp
clc
sbb
and
aaa
gs
cld
enter
int
xchg
mov
sbb
mov
cmpsl
mov
loop
ljmp
mov
nop
xlat
stos
dec
sahf
pop
mov
test
dec
sbb
adc
and
psllw
push
pop
push
sub
mov
xchg
push
pop
push
cmp
ret
add
addb
lcall
shlb
jbe
lea
std
shrb
fs
fidivs
jge
or
push
scas
je
fistpll
mov
in
popf
in
imul
test
cmpsb
inc
cmpsl
shld
nop
insb
ret
pop
mov
cltd
leave
push
insl
loope
pop
xchg
push
out
xor
xor
push
and
movsl
les
or
out
cmc
fldcw
cmp
stc
inc
jp
adc
cmpsl
aam
stos
shrl
push
mov
movsl
xchg
in
mov
and
mov
and
mov
jbe
lods
mov
mov
add
loopne
xor
pushf
dec
and
fwait
push
lret
inc
in
xlat
fldcw
sub
into
lods
push
mov
fs
mov
lret
pop
icebp
add
push
cmp
sarl
test
sbb
jno
add
test
nop
adc
fistl
faddl
push
jnp
shufps
xchg
ja
mov
mov
aad
fnstcw
sahf
cwtl
rep
js
sahf
push
mov
mov
add
sbb
and
iret
inc
sbb
cmp
sub
test
xor
cli
pop
xchg
imul
xor
loopne
xor
test
jno
fnstsw
xor
mov
xor
mov
sbb
fwait
jne
push
xor
cs
sbbl
into
popa
mov
mov
loopne
mov
repz
sti
dec
push
inc
lods
lret
jecxz
and
sub
dec
popa
fwait
xchg
or
fdivl
push
mov
stos
mov
ja
rolb
dec
test
inc
mov
das
jae
stc
inc
add
mov
and
add
mov
pop
adc
add
mov
fimull
das
roll
fwait
lods
mov
jbe
xor
xor
jg
addr16
pushf
jae
and
add
arpl
sbbb
xchg
dec
mov
xor
and
and
or
push
fidivrl
push
out
mov
std
lea
xchg
scas
or
std
call
fwait
inc
inc
mov
sbb
into
adc
je
push
popf
movsl
inc
sbb
jnp
shl
dec
adc
call
pop
mov
daa
pop
mov
fucomip
jl
mov
mov
adc
mov
ret
mov
mov
iret
cmpsl
dec
popf
pop
jp
cwtl
lret
push
sbb
dec
and
sbb
cmp
fs
das
push
adc
mov
mov
je
xchg
pop
sub
enter
jnp
movsl
add
fcmovne
aad
fidivs
dec
mov
xchg
sbb
enter
fists
out
lahf
leave
pop
neg
mov
mov
stc
leave
mov
xor
add
xchg
ds
xchg
lret
fsubrl
daa
cmp
clc
mov
pop
xor
imul
int
fwait
push
jo
fidivrl
xor
arpl
lea
mov
mov
mov
jp,pt
inc
mov
inc
push
and
lret
fdivs
pop
dec
sbb
xchg
popf
jne
into
pop
mov
xor
sahf
jp
mov
cs
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ror
fsubrl
fs
repnz
mov
in
popf
test
adc
adc
inc
pop
cld
das
repz
push
or
into
sbbl
daa
jne
dec
push
shll
inc
lcall
xchg
jge
pop
movsb
jbe
push
shrb
ret
ss
jmp
das
push
std
inc
jle
inc
sarb
andl
fmuls
js
cwtl
scas
sbb
and
mov
xor
push
mov
imul
sbb
testl
in
and
in
adc
xchg
icebp
leave
adc
add
dec
cltd
push
es
loopne
adc
mov
xor
inc
lcall
adc
inc
mov
loopne
out
mov
aas
pop
test
lahf
lret
insb
mov
dec
mov
pop
xor
mov
and
loop
iret
cmpsl
mov
imulb
cwtl
lret
movsl
ret
sbb
push
xchg
push
jb
mov
lds
cmp
xor
adc
stc
je
cld
rclb
arpl
lock
enter
add
push
cwtl
pop
stos
xchg
push
fcmovbe
sbb
fistpl
xchg
std
xchg
gs
cmpb
jg
lret
jno
ljmp
shlb
lds
mov
push
std
adc
mov
mov
stc
mov
sbbb
dec
push
in
xchg
popf
aad
aas
mov
mov
es
cmpsb
jnp
fdivs
popf
push
adc
adc
rcrb
mov
adc
push
imul
sahf
dec
mov
into
pop
stos
pop
lods
popf
or
dec
add
mov
cmp
sti
mov
push
mov
adc
dec
or
subb
mov
imul
add
and
xchg
mov
inc
mov
mov
ret
adc
popf
lret
arpl
mov
lock
sbb
xor
test
fisubrl
scas
push
testl
fistl
or
es
sub
pusha
jp
mov
mov
popf
lahf
xchg
pop
out
jl
popa
or
adc
insb
test
rorl
dec
aam
inc
les
inc
push
mov
mov
or
jo
fwait
js
out
cmp
push
movsl
faddl
mov
and
test
je
or
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
adcl
in
mov
aaa
gs
jecxz
pop
sub
sbb
mov
cmpsl
mov
cmpb
mov
fs
xchg
mov
mov
sbb
pushf
lahf
sti
mov
lods
fldt
leave
js
xor
or
data16
and
mov
or
pop
cmp
mov
mov
fs
call
test
pushf
sbb
icebp
sbb
mov
cmp
sbb
mov
jl
adc
xor
sub
xchg
xchg
aas
inc
mov
mov
mov
call
add
sub
xor
orb
sti
cmp
fdivrl
sti
mov
shlb
add
and
mov
shr
inc
cltd
js
mov
jmp
adc
cmp
rclb
es
pop
stos
shrl
push
xor
movsl
fdivrl
adc
mov
add
mov
jbe
cmp
sbb
add
ror
sbb
mov
or
fnsave
dec
jns
shrl
fisubrl
jge
test
ljmp
fnsetpm(287
leave
jl
mov
rolb
sbb
xlat
pop
addb
xchg
pop
jo
movsl
or
jns
cmp
or
dec
xchg
cltd
fstl
pop
inc
fsts
data16
xchg
faddl
repz
cld
into
dec
mov
cmp
add
or
pop
sub
adc
inc
stos
sbb
push
push
mov
mov
xlat
stc
into
clc
int3
pop
fdivrl
jnp
int3
jne
dec
inc
adc
dec
mov
loopne
pop
push
or
int
imul
push
sub
mov
adc
xor
mov
repz
sti
dec
push
and
repnz
sbb
dec
popa
xchg
push
dec
sbb
adc
lret
xlat
scas
sbb
jmp
test
negb
aad
int
fwait
pop
stos
push
pop
das
lret
sbb
inc
lahf
lret
ljmp
jno
push
sti
es
js
xlat
fcoms
outsl
decl
inc
sbb
insl
mov
jo
movsl
sbb
fsts
push
cs
sbb
jecxz
stos
lret
mov
push
dec
xchg
ljmp
repz
hlt
stos
lret
popa
cmp
push
sbb
test
out
mov
xor
ljmp
adc
jb
inc
mov
jle
clc
int3
pop
mov
sti
mov
in
and
sbb
ret
dec
and
sub
mov
mov
or
sbb
mov
shl
shr
adc
and
pop
mov
daa
pop
test
iret
fucomip
jl
lea
imul
bound
xchg
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
sbb
shrl
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
movsl
push
popa
jp
lcall
movb
inc
pop
mov
xor
sub
pop
push
iret
lock
out
push
sub
adc
popl
push
dec
aam
aam
cmp
test
xor
scas
test
jp
mov
insl
inc
add
mov
xchg
jle
mov
pop
hlt
or
mov
mov
xchg
enter
add
add
out
iret
fisubrs
pop
dec
sbbb
sahf
dec
sub
xchg
pop
or
mov
adc
cmc
pop
loopne
sti
mov
jecxz
push
sbb
sub
mov
lock
pop
adc
dec
inc
cmp
push
hlt
sub
push
push
and
ja
inc
in
mov
sbbl
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
xor
aas
fimuls
out
mov
pop
dec
ret
movsb
mov
push
and
std
aad
jmp
fs
leave
nop
mov
mov
dec
std
arpl
inc
lcall
dec
les
dec
dec
sarb
mov
inc
xor
mov
jne
mov
imul
cmp
mov
lea
xchg
lea
adc
sbb
mov
int
jle
jmp
mov
shl
mov
shr
repz
adc
or
ret
loopne
out
and
fucomip
repz
pop
cmpl
pop
add
andb
mov
sbb
adc
or
inc
mov
dec
pushf
dec
int3
imul
mov
mov
mov
dec
sbb
int
dec
push
movl
mulb
or
or
push
mov
lods
hlt
xor
dec
mov
rcll
lahf
cmp
lret
xor
dec
sub
lret
sub
mov
js
jo
mov
pop
jb
add
xchg
decl
push
repz
inc
cwtl
fmull
repnz
repz
out
popf
ljmp
xchg
jmp
or
out
iret
popf
xor
fdivs
cmpsl
ffree
mov
enter
sbb
lahf
add
inc
adc
and
fmuls
in
outsl
sahf
dec
mov
into
pop
stos
pop
lods
xchg
dec
pop
xchg
dec
or
mov
adc
sti
mov
in
lock
mov
ret
cltd
push
lock
mov
popf
cli
or
lret
movsl
mov
push
insb
test
push
nop
push
test
push
mov
mov
push
cmc
mov
scas
fs
mov
sub
mov
xchg
push
pop
push
jl
ret
or
lcall
pop
mov
std
xor
pop
jge
jmp
nop
jbe
sub
outsl
loopne
mov
insb
jno
and
inc
sarb
js
push
mov
mov
dec
lcall
sub
sbb
insl
jmp
or
insl
fcomp
xchg
test
aam
jl
dec
add
bound
add
and
sub
dec
push
or
fidivs
jmp
pop
push
idivl
sub
sbb
ret
loopne
dec
pop
sar
repz
sbb
cmpsb
aas
lahf
lret
jecxz
mov
rorb
push
aas
mov
insl
xchg
adcb
xor
cli
fs
lret
mov
repnz
xor
jae
leave
je
pop
lret
sbbl
pop
icebp
add
jl
ret
add
push
scas
pop
sub
outsb
shlb
nop
fwait
pushf
adc
add
call
jnp
xor
popf
fimuls
mov
shlb
pop
jl
mov
mov
dec
call
sbb
std
mov
pop
jae
inc
insl
jmp
pop
clc
jecxz
insl
cmp
mov
mov
call
int3
pusha
and
mov
xor
int
out
mov
cltd
fldcw
mov
jmp
adc
testb
adc
mov
das
push
xorb
pop
mov
ds
cmp
mov
xor
add
or
inc
pop
mov
adc
mov
fdivl
ret
sbb
xlat
stos
mov
xchg
mov
pusha
push
cld
sub
mov
scas
repz
inc
add
mov
and
add
movsl
hlt
movsl
sub
or
dec
insl
movsb
out
and
inc
sbb
mov
fsts
movsl
fcoml
rcrl
pop
pop
cmp
pusha
inc
lcall
fstps
pusha
scas
popa
or
rcl
mov
inc
inc
pop
mov
shlb
mov
stos
push
shld
fidivrl
jp
jnp
enter
xchg
pop
fstl
pop
mov
mov
fwait
lea
aas
jg
xor
inc
adc
sub
addr16
or
int
imul
push
sub
jnp
mov
fs
fneni(8087
mov
repz
sti
pop
push
iret
xchg
push
rorb
add
mov
in
sub
nop
jg
adc
adc
sub
test
dec
cld
lods
sbb
push
lahf
xchg
push
adc
mov
aaa
jmp
add
push
sbb
ja
pop
sbb
xchg
ficoml
int
arpl
jl
fistl
mov
add
iret
test
cli
cli
icebp
sbb
cmc
cmp
lahf
es
add
repnz
mov
adc
js,pt
pop
jne
test
or
push
fidivrl
cli
pop
lods
inc
int
jns
cli
jle
fwait
pusha
jl
mov
cmp
in
jne
or
sbb
mov
dec
and
inc
popf
out
mov
mov
clc
pop
fsubr
mov
sbb
out
mov
add
shr
adc
mov
daa
pop
pop
iret
fucomip
in
dec
mov
mov
jp
cltd
dec
bswap
adc
or
jns
imulb
jno
jns
and
mov
and
pop
push
test
ret
dec
sbb
add
mov
fnsave
push
mov
nop
sbb
adc
pushw
adc
mov
mov
mov
add
adc
or
mov
cs
sbb
pop
pusha
jle
das
pop
icebp
sbb
cmp
jl
sbb
inc
fiaddl
mov
enter
incl
push
or
les
xchg
out
aam
mov
clc
mov
daa
popf
jecxz
lahf
cmpsl
mov
fwait
lea
pop
push
adc
subb
enter
fstps
or
int
imul
push
sub
mov
mov
loopne
mov
and
cmp
inc
jns
xchg
rcrb
mov
shrl
dec
or
sub
xor
imul
mov
lods
pop
shrl
fildll
loop
jno
pop
sti
in
and
ret
sbb
cld
mov
in
movsb
out
and
dec
sub
jl
pop
call
test
and
jnp
xor
test
test
adcl
mov
fisubrl
out
or
adc
stc
js
pop
icebp
or
and
add
js
dec
and
cmp
cmp
in
jne
test
sbb
xchg
mov
dec
and
dec
popf
out
mov
mov
enter
mov
sbb
sti
mov
shll
call
pop
mov
imul
inc
mul
xor
ds
push
inc
sar
push
gs
adcb
adc
jp
mov
adc
fsubrl
popa
stos
icebp
ss
lds
mov
iret
sbbl
mov
and
sbb
xor
mov
imul
pop
sub
les
bound
inc
cmp
add
loop
sbb
sti
call
add
cltd
fmull
cmp
lods
ret
or
inc
enter
jmp
inc
sub
inc
cmpl
mov
mov
pop
repnz
mov
sarl
test
movsb
inc
sbb
cmpsl
ret
out
ret
jo
lea
xor
mov
cwtl
pop
rclb
add
out
daa
fisubrs
pop
dec
mov
dec
sahf
dec
sub
cli
mov
sub
mov
and
lds
xchg
fists
add
fisubrs
sbb
mov
pop
cmc
loopne
popa
xchg
rcrl
jo
iret
cmpsl
mov
adc
push
lock
ss
repnz
scas
pusha
adc
mov
mov
dec
sbb
xor
enter
lret
mov
cmp
or
or
test
movsl
adc
fdivrp
ds
dec
sahf
pop
enter
jmp
cwtl
popf
adc
cmpsl
dec
jo
jge
or
pop
cmpb
inc
pushf
imul
mov
sub
in
sbb
mov
add
cmp
clc
or
xchg
xchg
lods
mov
xchg
mov
push
and
call
cmp
testl
sbb
xchg
test
sub
mov
dec
jmp
mov
shl
mov
shr
repz
adc
adc
leave
arpl
test
mov
pop
push
add
leave
lock
mov
mov
popa
nop
adc
or
xorb
pushf
lcall
push
adc
test
push
nop
push
test
push
mov
mov
push
cmc
mov
ficompl
cwtl
ds
std
fdivr
xchg
adcb
ffree
sbb
push
cmp
lret
or
jp
out
mov
mov
movl
fstl
fwait
enter
lret
push
xchg
sbb
jnp
xchg
jg
or
xor
clc
xor
mov
movsb
adc
hlt
dec
cmp
std
and
inc
sti
push
je
mov
out
xor
gs
cmpsl
ret
fincstp
clc
in
lea
xor
mov
mov
mov
inc
sbb
add
inc
adc
lods
imul
sahf
dec
mov
into
pop
stos
les
add
int
movsl
push
mov
in
cltd
fisttpl
pop
cmp
sbb
aas
lcall
aad
or
ret
xchg
sbb
sbb
pop
lret
mov
repnz
push
in
dec
ss
sahf
lock
mov
mov
arpl
or
sbb
push
mov
sbb
adc
xor
mov
jp
mov
xor
jecxz
popf
cmpsb
jno
pusha
lahf
adc
test
sub
fistpll
js
adc
loope
xchg
adc
es
dec
mov
mov
dec
mov
test
arpl
sti
lcall
xchg
and
sahf
jb
fwait
jl
dec
jecxz
bound
add
and
cmovno
or
cltd
push
mov
sub
mov
dec
mov
mov
push
add
pop
mov
xor
in
daa
ja
clc
rolb
mov
mov
inc
sbb
mov
xchg
or
aam
lcall
inc
xchg
sub
test
stos
mov
xchg
mov
pusha
push
cld
sub
aaa
mov
addr16
frstor
imul
lahf
repnz
addl
sub
cltd
dec
mov
mov
mov
dec
movsl
xchg
mov
add
cmp
xor
fdivl
jecxz
popf
movsl
jg
cli
in
cli
mov
lret
fsubrs
inc
cmp
andl
push
ret
add
or
jb
jmp
std
xchg
pop
adc
xchg
jp
in
test
sub
mov
out
mov
std
jge
movsl
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
push
jecxz
mov
shr
inc
cltd
pop
sub
inc
cmpsb
dec
mov
rcrb
jmp
or
xor
and
out
daa
push
adc
adc
movsl
lds
jg
ret
sbb
inc
pop
lcall
jg
sbb
dec
and
sbb
bnd
xchg
es
scas
rorl
icebp
fnstenv
neg
dec
sbb
add
dec
jl
add
or
cmp
call
jmp
lds
push
stos
jge
pop
mov
leave
jns
flds
push
leave
pop
lcall
jecxz,pn
adc
mov
cmp
xchg
adcb
dec
adc
leave
pop
outsb
rcl
pinsrw
fildll
mov
inc
cwtl
dec
lods
push
std
jno
ret
fdiv
push
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lock
or
int
imul
gs
pop
sbb
movsb
xor
dec
and
rcrl
add
in
daa
divl
mov
add
cmpsl
inc
sbb
inc
sbb
imul
dec
pushf
xchg
rcrb
jge
les
push
stos
push
int3
sub
cs
mov
inc
pushl
jo
xor
add
sub
scas
push
cs
push
sub
mov
mov
mov
in
sub
cltd
cmpsl
push
dec
mov
xacquire
leave
in
test
or
repz
repnz
test
stc
addr16
xchg
pusha
mov
insb
adc
mov
sub
mov
jl
mov
cmp
jne
stos
mov
and
mov
dec
and
shr
mov
mov
push
lret
sbb
dec
jb
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
lahf
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
out
jge
test
mov
ja
adc
scas
popf
in
stc
dec
sub
push
sbb
inc
cld
cmc
mov
push
gs
es
cmp
les
fistl
movsb
xchg
icebp
dec
aad
mov
fstl
cmp
les
and
stc
dec
or
fyl2x
xor
inc
stos
adc
inc
mov
or
sbb
xor
push
dec
and
xor
test
insl
std
jg
inc
sbb
cmpsl
ret
out
mov
aas
mov
add
out
inc
cwtl
cmp
enter
inc
sahf
or
mov
dec
mov
ret
push
inc
xlat
xor
pop
arpl
aad
mov
loopne
rorl
aaa
rcrl
lahf
lret
or
add
test
negb
frstor
sub
dec
roll
sbb
rcrb
sbb
les
icebp
or
shll
adc
fbld
mov
lods
xchg
jno
mov
shll
mov
mov
cmp
jl
add
mov
jge
jb
sbb
sbb
mov
pop
outsb
js
lods
fbstp
arpl
lret
sub
js
or
rcr
mov
inc
cmpsb
pop
xchg
xchg
mov
sub
mov
and
call
mov
testl
sbb
fwait
lock
add
int
jle
sbb
cmp
fsts
add
mov
imul
sub
mov
dec
cmp
imulb
jnp
or
cltd
push
lock
cmp
mov
arpl
sbb
ror
mov
movsb
adc
jmp
pop
int3
shll
jge
pop
std
mov
push
jle
push
pushf
push
dec
pop
xchg
sbb
xor
xchg
cmp
ja
mov
mov
test
stos
lods
ret
pop
cld
pop
addr16
cmp
je
xchg
add
jnp
jg
xor
mov
in
pop
popa
sbb
in
mov
add
cmp
sbb
dec
and
je
ds
xor
int
in
in
cmpsl
ret
fincstp
clc
shrb
cmpsb
inc
cmpsl
fnstsw
mov
call
inc
sbb
pop
add
push
adc
enter
je
mov
pop
adc
call
push
sahf
pop
imul
push
ja
repz
add
sbb
in
cmp
imulb
inc
add
add
jbe
and
test
jp
clc
xchg
cmp
mov
test
pop
xor
xchg
filds
repz
jge
outsl
mov
and
mov
inc
push
sbb
xchg
pop
sub
adc
sub
jns
mov
push
xlat
loopne
or
cwtl
lahf
fisttps
jle
xor
int
xchg
sub
js
es
dec
pusha
sarb
sub
push
mov
int3
mov
sub
sbb
and
shll
jl
lea
loop
fstpl
xchg
cmovno
xchg
test
cmpsb
fadd
call
mov
xchg
xchg
fisttpll
pop
pand
inc
sahf
dec
jns
cli
mov
jno
iret
sbb
daa
dec
cmp
rcrb
adc
or
jns
repnz
jno
jns
push
mov
push
dec
xchg
push
and
rorb
push
inc
cmp
cs
adcb
push
mov
sbb
lret
or
lcall
fimull
mov
aad
jp
pop
sbb
push
jo
ret
sahf
sahf
xchg
jl
js
jp
mov
mov
gs
pop
aaa
cwtl
fdivrs
mov
add
xchg
sbb
sub
adc
test
sub
cmp
sbb
lahf
ret
fld1
std
jge
mov
call
int3
pusha
ds
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
and
call
ret
loopne
inc
adcb
in
popf
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
cmp
movsb
sbb
fstps
ss
sbb
cmpsl
popf
out
lret
insl
stos
and
pop
daa
sbb
aaa
cld
xor
lret
or
mov
scas
sbb
shl
shlb
fstps
lods
jle
cltd
shll
push
repz
lret
jp
pushf
cmpsl
jb
int
sub
or
cmp
sbb
add
sub
push
mov
lock
movsl
ret
fwait
and
sub
and
sahf
jb
fwait
jl
dec
jmp
loop
mov
inc
mov
ret
inc
sub
push
dec
test
rorb
pop
sub
xlat
push
dec
pop
mov
cmp
cmpsb
ja
fadds
divl
lds
jg
ret
sbb
inc
pop
mov
insl
xchg
ret
lret
ds
lret
imul
nop
adc
lods
stc
cmp
test
leave
lods
testl
xor
mov
cmp
xchg
data16
push
ret
cld
dec
adc
add
push
mov
das
sahf
cli
sbb
push
xor
and
xchg
mov
cld
enter
icebp
mov
fdiv
andl
mov
mov
and
xchg
jp
mov
test
sub
mov
out
mov
ret
fld1
std
jge
cmpsb
inc
cltd
xlat
call
int3
add
orl
mov
inc
es
adc
aaa
lock
pop
push
mov
lcall
mov
sub
ljmp
ds
cmpsl
ja
iret
rorb
mov
add
cmpsl
inc
sbb
pop
lcall
push
xchg
or
mov
test
push
dec
xchg
push
and
lds
jge
push
in
mov
pop
out
mov
repz
lds
sbb
jae
mov
cmpsb
stos
rolb
mov
inc
jne
add
pop
cmpsl
pop
insb
ja
xor
xor
cmpb
adc
lds
cmp
sbbl
loope
or
or
add
lock
fildll
mov
lods
push
in
movsl
ret
fadd
stos
mov
lahf
cmpsl
mov
fwait
lea
lahf
aam
xor
push
adc
test
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movsl
imul
lds
cmp
jecxz
pop
mov
or
inc
cmp
call
mov
movsl
ret
sbb
xchg
add
adc
mov
push
pop
lea
das
fstl
jg
sbb
fcoms
ffree
push
adc
pop
or
jne
mov
push
stos
mov
nop
fisttpll
jbe
xor
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
mov
rep
mov
lds
xchg
mov
push
in
sub
mov
jl
mov
cmp
jne
jecxz
movsb
hlt
pop
aaa
test
and
sbb
fisubrs
and
in
cmc
mov
nop
imul
sarb
ficoms
ja
pop
inc
ret
call
mov
jns
xchg
rcrb
mov
add
scas
push
int
imul
nop
adc
stos
jb
lcall
xchg
test
out
fists
xchg
ficompl
mov
mov
je
scas
xchg
adc
jno
les
cmp
dec
mov
mov
mov
dec
movsl
xchg
mov
add
jmp
sbb
xchg
leave
jg
ret
in
push
mov
mov
hlt
jo
sbbl
cltd
adc
xorl
stos
or
add
outsl
fsubrs
fildll
mov
lods
push
jecxz
movsl
ret
fadd
out
movsb
inc
daa
popf
mov
mov
fwait
xlat
pop
fxch
mov
mov
cmp
xor
or
cmp
aad
mov
mov
dec
cmp
in
aam
pop
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
jns
test
or
mov
jbe
push
xchg
add
mov
iret
add
movsl
pushf
outsl
mov
fucom
cli
mov
mov
ret
cmp
lods
cmpl
lret
cmpsl
test
adc
lds
push
stos
jge
pop
mov
int
add
jecxz
into
aam
inc
cmp
mov
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
inc
xchg
push
mov
xchg
adc
loope
sub
mov
jl
mov
mov
sahf
int
mov
rcll
sbb
orb
adc
mov
daa
fistpl
dec
sahf
dec
dec
sub
out
movsb
jbe
cwtl
movsl
mov
xor
sysret
fists
ret
sahf
push
gs
rorb
mov
mov
xor
jp
lahf
orb
stos
cli
mov
movsl
sbbl
dec
sbb
and
cmp
clc
scas
movl
sar
loope
mov
jl
xor
or
pop
push
scas
push
cs
push
sub
mov
mov
int
mov
pop
ds
jle
mov
xlat
or
lods
fstps
push
and
pop
xchg
or
stos
add
jbe
sbb
mov
xlat
xor
test
insl
jmp
movsb
inc
sbb
cmpsl
ret
test
stc
out
dec
mov
rcll
addb
sbb
hlt
mov
dec
dec
test
cltd
clc
or
mov
sbb
out
and
cmc
mov
stc
ss
lock
jne
mov
lods
lahf
pop
adc
ret
fidivrs
rol
mov
add
test
add
insl
fwait
ret
sbb
mov
sbb
iret
test
lods
push
inc
jle
inc
and
stc
test
dec
pop
test
xor
test
push
jl
inc
cld
xor
push
insl
lcall
outsl
les
aaa
jns
adc
lds
lret
mov
xor
js
insb
push
lret
loop
sarb
dec
pop
sub
iret
and
lea
pop
mov
lock
sti
out
mov
sub
xchg
inc
and
dec
pusha
mov
mov
jno
test
adcb
inc
rcll
sbb
xchg
fcoms
lret
mov
fsubs
sbb
out
movsb
cltd
xlat
test
xor
ret
loopne
inc
adcb
in
cltd
pop
push
add
enter
mov
cmp
mov
pop
sbb
nop
pop
ret
cmpsb
mov
cs
mov
cs
push
jnp
mov
cltd
dec
sub
lahf
pop
stos
fs
movsl
stc
dec
push
pop
ljmp
rcll
mov
mov
cmp
dec
mov
sbb
jle
cmpsl
or
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
mov
fwait
jl
popl
xor
mov
fimull
adc
repz
test
out
xor
push
gs
mov
mov
in
mov
jne
aad
popf
pop
sub
addb
pop
xor
mov
push
inc
xchg
sbb
cmpsl
or
dec
dec
lcall
push
dec
pop
mov
cmp
cmpsb
ja
clc
in
popf
pop
aas
push
jg
pop
mov
adc
imul
sbb
jg
enter
mov
lock
dec
mov
sub
or
mov
jae
sbb
inc
jno
movb
mov
push
jle
push
pushf
push
dec
pop
xchg
sbb
jno
add
xchg
lcall
lods
mov
mov
and
or
pop
mov
and
lahf
scas
mov
mov
cld
loop
xchg
into
or
adc
pusha
sarb
sbb
add
sub
push
mov
loopne
mov
das
xchg
mov
sbb
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
xchg
sbb
sahf
sbbl
int
std
repz
imul
cmc
fsub
hlt
xor
sti
jne
sub
add
mov
outsb
or
int
inc
sbb
pop
inc
test
shl
and
into
test
insb
ror
sbb
inc
lahf
arpl
sbb
sub
and
mov
push
out
add
pop
mov
inc
push
sbb
xchg
jge
jae
outsb
in
add
addr16
rorl
push
pop
mov
pusha
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
lds
rcrl
xchg
sbb
pusha
and
xchg
jp
into
popa
test
sub
movsl
pop
pop
mov
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
inc
shlb
mov
jbe
adc
leave
mov
sbb
jnp
arpl
or
cmp
in
lods
dec
sbb
lahf
movsb
fstps
sbb
call
push
xchg
push
test
dec
push
mov
sbb
lret
or
inc
jns
dec
rcr
xchg
and
pop
test
lods
inc
sbb
scas
in
dec
repz
dec
mov
xchg
adc
xorl
data16
add
cltd
fsubrs
fildll
mov
lods
push
testl
and
inc
jp
xchg
push
insb
pop
mov
clc
cld
push
jecxz
inc
cltd
enter
loop
je
cmp
dec
mov
push
adc
pop
and
orb
sub
mov
popa
pop
mov
sbb
movsl
dec
sub
mov
repz
std
fsubl
insl
in
lret
hlt
movsl
mov
mov
scas
lock
and
jmp
adc
lcall
fstpt
mov
dec
pop
fnstcw
out
div
arpl
repnz
adc
sub
or
imul
xlat
ficompl
fnsave
inc
movsb
pop
add
jno
push
push
fldl
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
and
rorl
mov
sub
xchg
mov
xchg
sbb
inc
cli
jnp
jecxz
cmp
add
push
out
call
push
xchg
jg
enter
aam
sub
jne
movsb
popf
push
mov
shl
mov
inc
arpl
int
jns
push
jbe
inc
xor
cs
cld
or
or
jo
lock
aas
mov
scas
push
mov
popf
aas
lods
pushf
inc
stos
xchg
adc
sub
ljmp
mov
inc
fstpt
push
cmp
lcall
jl
orl
pop
rcl
xchg
mov
mov
and
lret
pop
test
icebp
inc
sbb
scas
fcomi
js
out
scas
inc
movsl
fsubrl
sbb
mov
addl
add
push
mov
fwait
xor
cmpsb
xchg
das
push
lcall
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cltd
jne
dec
mov
imul
sbb
dec
mov
inc
add
pop
arpl
int
mov
into
scas
pushl
xchg
mov
call
jp
loopne
sbbb
cltd
test
inc
sbb
lock
jns
mov
jl
repnz
in
movsl
ret
insb
test
iret
add
stos
jb
stos
jecxz
jne
push
and
enter
push
xor
cmp
pushl
jo
test
inc
sahf
cmp
mov
and
test
fwait
lods
gs
lods
cmp
cli
clc
pusha
mov
aaa
bnd
insb
push
or
sarb
and
lea
lds
fmuls
test
shl
leave
aad
popa
xchg
lods
sti
jmp
push
inc
popf
lret
mov
fnstenv
xorl
out
mov
add
in
pushl
mov
popa
popa
mov
dec
and
addb
dec
arpl
fdivl
in
cmp
lds
bound
jecxz
popa
popf
rcrb
addr16
pop
mov
add
mov
movsb
sbbl
dec
sbb
xlat
push
stc
push
adc
lret
sbb
sbb
ljmp
cli
xchg
test
jae
xchg
add
xchg
lods
outsb
lods
mov
pop
stos
xchg
push
adc
mov
dec
ss
aaa
aas
sbb
inc
fucomi
jge
leave
cwtl
scas
inc
fwait
push
shlb
mov
lret
add
je
sbb
jmp
xchg
out
aam
jne
inc
gs
imul
outsb
push
pop
xchg
std
jmp
cmp
xor
cmp
in
sbb
xchg
fsubr
dec
test
xor
mov
xchg
pop
adc
xorb
pop
ret
into
lcall
ja
sar
adc
mov
or
lods
sbb
sub
sarb
imul
dec
lahf
lcall
push
gs
sub
mov
jge
sbb
cld
lods
movb
in
jmp
cld
pop
sub
add
jge
pop
add
pop
fisubrl
lahf
or
sub
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmc
loop
xchg
push
inc
sub
or
mov
sub
push
mov
fwait
mov
mov
insl
icebp
out
xchg
adc
mov
arpl
jne
enter
pop
xchg
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
sbb
fisubrs
and
loopne
cmc
xor
mov
xchg
pop
cmp
sbb
dec
call
push
mov
imul
fdivs
rol
sti
mov
test
mov
fcmovne
iret
inc
sub
imul
lds
mov
arpl
aas
fbld
mov
jae
mov
in
inc
stos
mov
adc
mov
push
or
in
sbb
stos
xchg
stos
cmp
fwait
push
xchg
mov
push
ret
into
xor
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
clc
mov
addl
xchg
lock
rclb
jp
mov
movsb
inc
cmpsb
outsl
push
gs
insl
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
insl
lock
mov
mov
dec
sbb
loopne,pn
cmc
mov
mov
cmp
addr16
insl
xchg
xor
inc
ficoms
stc
fisubl
in
lods
jmp
mov
pop
push
sbb
or
inc
aaa
adc
ja
les
int
sbb
cmpb
push
imulb
adc
mov
sbb
lret
sar
xor
pop
cmp
mov
clc
lock
dec
lret
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
and
popf
scas
cmp
sbbl
pusha
adc
xorl
and
add
dec
mov
clc
or
sbb
outsb
mov
pop
xchg
cld
push
sub
mov
nop
xchg
fld1
jb
addr16
or
lds
pop
fldl
add
icebp
mov
mov
add
leave
mov
cs
cmc
sbb
fisttpl
jae
xchg
cmpsb
repz
push
ret
call
push
mov
in
std
test
sahf
popa
cmp
enter
push
cmp
adc
mov
sbb
pop
inc
test
movb
sub
dec
or
pop
cltd
out
fisttps
mov
nop
movb
test
inc
fmuls
inc
lcall
sbb
or
cmp
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
outsl
mov
and
xchg
mov
in
ret
mov
cli
xor
cmpsl
ret
punpcklwd
outsl
or
inc
popf
repz
outsl
push
adc
sub
dec
push
aam
dec
inc
test
cwtl
clc
inc
cmp
mov
lret
stos
jb
jecxz
fisubl
sub
jne
pop
jns
pop
loopne
in
mov
jae
mov
adc
cmp
pop
fwait
xor
ss
adc
mov
sbb
mov
sub
push
mov
in
ss
push
push
fxch
xor
int
test
in
adc
shll
shlb
mov
pop
inc
inc
scas
xchg
push
xchg
sbb
mov
stos
add
push
lret
pop
test
mov
mov
lret
mov
js
into
popf
scas
inc
movsl
faddl
popa
xchg
sbb
addl
adc
inc
jns
jle
xchg
sub
cs
add
xchg
mov
in
fdivrs
aam
inc
and
lret
gs
std
inc
or
xor
fcoml
mov
rcll
adc
xchg
cltd
mov
adc
dec
pop
jnp
sbb
sub
in
mov
stos
pop
lods
pop
sbb
out
ds
jp
movsb
fldcw
in
fwait
cmp
pop
and
mov
lock
lock
mov
ss
xor
iret
mov
sbb
jbe
adc
cli
pop
pushf
cmp
movsl
dec
pop
test
imul
sarl
xchg
leave
mov
xchg
dec
inc
shlb
sbb
addb
imul
mov
fwait
lods
gs
lods
cmp
sub
pusha
mov
iret
bnd
insb
push
dec
ror
loop
sarb
andl
cwtl
into
push
push
ret
pop
dec
xchg
adc
xchg
pop
mov
fidivl
dec
and
insb
cmc
xchg
xchg
aas
xchg
in
pop
out
inc
sbb
mov
insl
call
test
mov
gs
popf
pop
sub
rolb
dec
dec
test
or
jmp
cmp
xor
movsb
std
aas
std
dec
lret
lea
xlat
pop
push
andl
mov
pushf
loopne
roll
mov
inc
aas
cli
shll
repnz
icebp
cli
dec
xchg
adc
push
mov
xlat
push
aaa
xchg
cld
pop
iret
test
cwtl
xor
aaa
pop
push
in
dec
stos
fildl
dec
sub
lret
in
cmc
iret
push
test
pushf
and
xor
scas
xchg
stos
mov
stos
xchg
push
adc
push
mov
test
mov
sbb
fucomi
jge
ret
cltd
scas
inc
fwait
push
rolb
dec
and
lcall
jge
adcl
rcrl
jg
and
scas
call
jo
lret
cwtl
sub
mov
mov
mov
popf
xchg
add
sbb
shlb
aam
xchg
test
outsb
mov
shll
xchg
sbb
aam
popf
jl
fwait
pop
outsl
clc
add
or
cld
repnz
movsl
mov
cltd
cwtl
jmp
sbb
push
xchg
mov
cmpb
xchg
xchg
add
faddl
movsb
fisubrl
pop
inc
inc
pop
dec
or
ret
mov
mov
mov
xchg
push
nop
cld
arpl
leave
in
or
mov
or
sub
pop
mov
andb
inc
and
lahf
scas
mov
mov
aad
jo
popa
or
mov
mov
inc
roll
or
mov
mov
pop
icebp
test
sub
xchg
pop
pop
cmpsb
call
xchg
push
xabort
pop
mov
bound
out
xchg
test
inc
cmp
mov
mov
sbb
xchg
into
adc
mov
jne
fstpl
popf
adc
fists
insl
mov
jmp
gs
rcrb
dec
sbb
out
sbb
jge
mov
cmp
dec
std
lock
lds
push
clc
sub
mov
pop
sbb
clc
cmp
lods
pop
popf
lret
add
sub
inc
sbb
or
jl
xchg
stos
xchg
stos
cmp
fwait
push
xchg
sbb
shrb
push
ret
into
mov
fucomi
repnz
fwait
leave
cmc
xor
inc
stos
sbb
movsl
loopne
fdivs
adc
nop
fsubrs
out
ja
or
dec
into
movsl
ret
mov
pop
jg
call
xchg
lahf
out
cmp
add
cltd
enter
out
je
cmp
pop
adc
shlb
add
push
mov
inc
xchg
lea
js
sahf
neg
adc
add
and
ljmp
mov
sub
rcr
sbb
cmpsl
mov
ja
lahf
rolb
adc
lods
fs
fildll
or
jae
adc
test
pop
adc
cmc
sbb
push
mov
xchg
test
dec
mov
icebp
addb
add
movsb
imul
xchg
adc
test
lods
inc
sbb
scas
in
jae
mov
jmp
mov
fadds
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
mov
jb
cmpb
jmp
shlb
outsl
in
dec
mov
mov
push
fldl
mov
je
ret
pop
cmc
fisubl
cmp
fists
add
ret
mov
mov
mov
sbb
sub
sar
jnp
sbbb
jne
les
push
rcrb
jbe
movsb
lcall
and
fistpl
pop
lret
inc
ret
pop
sub
inc
sbb
or
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
lret
jecxz
bnd
int3
scas
pop
fadd
and
nop
adc
adc
fwait
andl
xchg
stc
xchg
xchg
mov
jmp
inc
cwtl
dec
int
push
fidivrs
not
xchg
xor
nop
xchg
fld1
jb
addr16
or
lds
enter
sahf
xchg
jge
adc
sbbl
sub
mov
cli
int3
mov
cltd
pop
gs
fistps
andb
lock
inc
sub
fdivrs
jns
ds
mov
mov
jp
mov
imul
xor
or
aad
dec
test
imul
jb
mov
in
sbb
stc
insb
xchg
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
movl
out
cmc
out
loope
mov
mov
mov
push
inc
or
push
outsb
mov
push
fidivrs
repz
jp
mov
adc
punpcklwd
outsl
or
vpsubq
sub
cmc
les
cmp
push
and
or
iret
push
mov
dec
mov
sbb
or
sbb
dec
call
jl
ret
arpl
lds
rcrl
adcb
mov
add
xchg
cld
xchg
or
fs
icebp
mov
and
push
dec
or
inc
incl
xchg
mov
mov
jnp
jae
fistpl
adc
arpl
pop
sub
inc
sbb
or
cmp
movsb
pop
jnp
mov
lods
mov
mov
push
adc
jge
inc
aad
out
sti
lret
pop
filds
in
or
sbbl
sub
push
xchg
adc
data16
or
mov
loopne
mov
inc
and
lret
gs
stc
outsl
push
pop
clc
dec
pop
movsb
and
ljmp
fwait
push
mov
jb
xchg
pop
inc
push
dec
mov
cmc
hlt
pop
mov
sub
sti
jge
mov
lret
imul
in
test
inc
sbb
push
out
inc
sbb
xor
in
call
dec
mov
jno
dec
xor
jns
pop
jb
movsb
mov
xor
scas
cltd
sbb
lcall
mov
mov
popf
aad
insb
notb
push
push
mov
lcall
popf
mov
mov
lret
pop
test
dec
inc
sbb
mov
push
repz
cld
mov
icebp
xor
pop
sub
jg
or
ret
fdivs
rcll
movsb
mov
sub
cmpsb
shrl
pop
out
inc
sbb
mov
jge
outsl
daa
sbb
sar
xor
or
dec
adc
mov
aad
inc
cmpb
cs
mov
sarb
or
push
sahf
cmp
mov
push
pop
push
or
fisttps
data16
lahf
add
ja
add
lods
cmpsb
sbbb
popf
xchg
icebp
mov
movsb
lds
nop
lds
mov
js
test
ljmp
mov
pop
jnp
arpl
cmp
xchg
dec
inc
shlb
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
test
into
pushl
andl
in
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
push
xchg
jbe
cltd
add
mov
cmp
add
sti
in
and
or
or
insb
sbb
das
std
fisubs
sub
fistl
inc
sahf
jecxz
cmp
and
and
mov
xor
sbbl
fsqrt
jns
add
or
insl
lcall
push
fcompl
jne
fs
adc
sub
sbb
dec
mov
cmp
lods
fcomp
ljmp
popf
lret
xlat
mov
sbb
sbb
into
scas
xchg
stos
mov
stos
xchg
push
adc
push
lret
shrb
enter
int
cmpb
mov
push
popf
loop
xchg
pop
jb
add
adc
or
divl
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
call
lret
push
into
dec
scas
out
jae
popa
sbb
idivb
shrb
movsl
pop
sbb
inc
adc
test
call
repnz
loopne
dec
mov
leave
mov
sub
push
pop
ljmp
inc
clc
lds
lock
xchg
lahf
std
lret
fsubr
mov
xchg
leave
js
scas
mov
jecxz
lret
lods
mov
mov
std
mov
xchg
push
nop
jge
xchg
dec
mov
or
clc
fisubrl
lahf
or
sub
pop
xchg
push
mov
aad
jge
sahf
adc
js
ja
or
fwait
leave
or
js
cmp
mov
andl
or
add
int
dec
and
pop
ja
mov
aas
cmpsb
enter
adc
or
enter
jg
xchg
cmp
cmpsl
hlt
xor
and
xchg
push
dec
imul
mov
lods
sti
lods
int
clc
into
cmp
sbbl
pop
lds
jl
out
hlt
repnz
int
aaa
push
sub
rol
pop
inc
pop
ljmp
gs
adc
pop
adcb
stc
adc
fistpl
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
jl
pop
stos
xchg
stos
cmp
fcoml
jb
dec
jns
arpl
sbb
subl
out
push
pop
xchg
jl
or
sub
dec
jae
and
push
push
scas
or
xchg
mov
adc
mov
pop
mov
outsb
ret
inc
fdivrs
mov
cmpsb
sti
xor
add
sub
or
cmp
ds
mov
stos
sbb
aaa
test
xor
and
jmp
arpl
xchg
mov
push
into
lcall
ja
pusha
fwait
call
lock
add
mov
mov
or
fnstenv
jmp
sbb
and
pop
stos
push
outsl
jno
ret
mov
in
lret
stc
pop
loop
mov
mov
xchg
test
dec
mov
push
addb
add
pop
imul
fistl
cmpsl
adc
mov
push
mov
pushf
pop
jae
bnd
jecxz
adc
out
mov
in
add
pop
sub
icebp
inc
aam
clc
mov
je
jmp
cmpl
jecxz
adc
jmp
mov
dec
outsb
lahf
inc
es
mov
fdivrs
adc
mov
sbb
push
adc
data16
mov
xor
jb
int3
mov
add
ljmp
or
mov
imul
and
leave
sub
jle,pt
lock
xchg
xor
stc
add
mov
popf
mov
icebp
mov
gs
pushf
push
test
lret
loop
shrl
cli
mov
fiaddl
mov
aas
lret
inc
ret
pop
sub
inc
sbb
or
cmp
pop
mov
ret
enter
in
add
stc
arpl
scas
add
sbb
xchg
xchg
mov
repz
call
stc
fisubrs
add
xor
imul
mov
imul
daa
fld
fdiv
add
bound
ds
test
mov
or
mov
mov
sbb
sub
fistps
add
push
jns
xor
dec
out
mov
jmp
in
cmp
push
add
das
jo
stc
adc
inc
inc
or
add
insb
push
pushf
mov
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
das
mov
xchg
or
fucomp
cld
std
test
aad
pop
jne
test
add
lret
scas
xchg
push
xchg
fdivl
pop
stos
ja
lds
faddl
ja
shll
outsl
call
pop
xchg
cld
imul
lods
popf
fdivl
leave
loop
jl
nop
xchg
push
push
mov
pop
nop
es
dec
mov
pop
adc
js
fnstenv
imul
add
sbb
mov
and
lods
std
add
xchg
mov
xor
lea
xchg
adc
push
lahf
lods
jb
ret
push
dec
mov
sbb
or
cwtl
movsl
pop
loopne
pop
push
add
push
jg
fwait
xchg
fdivrl
imul
cs
insl
push
sbb
jnp
fcmovb
sub
test
pop
imul
mov
pop
mov
je
test
xorb
mov
idivl
mov
fidivrl
arpl
subl
mov
sbb
addb
imul
sbb
scas
pushf
adc
pop
lods
jg
push
inc
sbb
ss
cli
rol
popf
scas
inc
and
icebp
and
cmpl
int3
add
add
fdivs
rcll
data16
push
mov
inc
insl
xchg
push
sbb
mov
sti
inc
es
mov
mov
rorb
dec
xchg
dec
cmp
xchg
push
hlt
cwtl
movsb
popf
jecxz
lret
cltd
jns
pop
test
test
je
in
je
ret
pop
cmc
fidivrs
sbb
fists
add
fimuls
jae
jecxz
xchg
mov
mov
dec
and
mov
mov
cmp
sbb
xlat
pop
sbb
test
clc
test
sbb
xchg
jmp
fucomp
cld
std
scas
ss
popf
aad
pop
xchg
xchg
test
pop
mov
or
lcall
std
clc
pop
add
adc
mov
cmp
scas
dec
lods
jp
aaa
pop
push
mov
xchg
fbstp
ljmp
rep
add
push
aam
sub
popl
mov
adc
mov
cwtl
pop
in
sbb
push
mov
call
inc
vpor
mov
sub
mov
les
out
jne
sub
push
dec
mov
adc
scas
int3
fwait
jns
scas
push
loop
dec
loopne
enter
mov
mov
orl
xor
cltd
adc
jecxz
sbb
or
subb
test
push
pop
imul
mov
pop
mov
dec
push
test
mov
scas
mov
testl
pop
cli
mov
add
sbb
xchg
dec
inc
shlb
or
addr16
outsb
xchg
dec
jl
fistl
test
popf
adc
dec
movsb
jae
or
cmpl
xchg
and
jb
adc
adc
or
divl
or
cmp
roll
xchg
inc
and
aas
and
sub
mov
add
xabort
mov
psraw
inc
mov
jge
movsb
les
or
out
enter
mov
movsl
jne
imul
pop
mov
mov
cmpsb
repz
ds
mov
mov
push
cmc
cmp
mov
ret
pop
pop
xor
sub
cmp
pushf
int
fidivl
push
test
jg
cli
lret
movsl
mov
mov
iret
nop
xlat
stos
dec
sahf
pop
cmp
rcrl
add
mov
cmp
stos
mov
ljmp
popf
lret
fists
test
mov
xchg
test
inc
sbb
sbb
inc
sub
ret
testl
leave
imul
pop
jbe
loope
stos
fstl
cmp
lahf
scas
mov
jle
aaa
hlt
xor
or
sarb
mov
andl
lea
scas
sub
dec
inc
sbb
mov
clc
loopne
mov
mov
mov
test
mov
dec
jno
fnstsw
xor
mov
ret
xchg
dec
xorl
adc
push
xchg
sbb
sub
fildll
stos
sub
xor
in
out
and
cmp
sbb
add
push
cwtl
mov
mov
mov
add
lret
push
cwtl
sub
sub
dec
and
xchg
in
lret
fsubr
mov
xchg
leave
dec
adc
stos
jmp
mov
inc
mov
xchg
push
nop
pop
xor
add
adc
mov
add
sub
or
mov
fwait
push
pop
pop
mov
lahf
fnsave
loope
xchg
popf
pop
mov
enter
out
mov
xchg
jl
or
sub
or
enter
clc
pop
mov
xchg
pop
fs
mov
push
mov
lods
jnp
sti
insb
xchg
or
xchg
test
int3
inc
cmp
sbb
jecxz
cwtl
sbb
rol
push
adc
out
cmpsb
pop
inc
sub
test
mov
dec
adc
out
and
fsubr
in
push
dec
adc
clc
lds
mov
repnz
jnp
sub
dec
popa
xchg
cld
dec
sbb
mov
mov
jne
inc
inc
movsl
mov
mov
stos
mov
ja
ss
test
inc
mov
jge
jae
cmp
test
popf
lret
add
sub
jne
mov
mov
movsl
sbb
lcall
or
mov
lods
inc
sbb
jmp
mov
adc
arpl
in
add
pop
sub
icebp
inc
aam
clc
mov
adc
cwtl
fwait
jb
sbb
xchg
lea
mov
push
xchg
jmp
int
popf
pop
jo
fdivrl
xor
arpl
lea
xor
push
and
mov
hlt
je
and
inc
mov
sbbl
aas
rorb
mov
shrl
mov
dec
adc
xchg
lods
ds
sbbl
aas
mov
xor
imul
cwtl
lret
push
sbb
dec
and
pop
stos
push
outsl
jno
mov
mov
in
loope
lret
stc
dec
push
lods
mov
mov
xchg
test
mov
inc
cmp
jge
jp
loope
xchg
stos
inc
and
jns
mov
cltd
push
fsts
push
jmp
lods
enter
shl
sbb
xchg
xchg
mov
clc
xor
adc
and
in
or
mov
xchg
out
cmp
sub
or
fwait
cmpsb
fsub
sbb
xchg
dec
mov
jb
xchg
call
gs
in
adc
add
mov
es
pop
loope
jb
lea
lods
data16
xchg
pop
test
in
loopne
into
inc
mov
int
mov
adc
jne
sub
lods
inc
sbb
cmp
lock
push
sbb
and
stos
sbb
insl
nop
cwtl
leave
fsubrl
fnstsw
push
test
lret
adc
test
lock
pop
jae
fistpl
movsl
lret
test
sbb
jae
sbb
das
sbb
cmp
xchg
fnsave
std
lcall
sti
push
lret
pop
pop
adc
cld
arpl
fcmovnu
popf
fdivl
leave
loop
jl
nop
xchg
push
push
mov
clc
js
rolb
hlt
pop
jbe
mov
int
js
faddl
dec
inc
insl
xchg
popf
aad
aas
mov
mov
aam
ret
es
cmpsb
jnp
fdivs
cltd
push
adc
faddl
adc
add
xchg
nop
sub
and
int3
mov
or
fwait
jns
negl
mov
mov
int3
inc
pop
movsl
or
ret
pop
jae
pop
mov
mov
dec
mov
pop
xor
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
adc
std
mov
in
mov
pop
xor
cltd
nop
cmp
or
imul
mov
xchg
jmp
in
sarl
fcoml
aaa
jge
dec
ljmp
fwait
push
adc
sub
push
cwtl
les
adc
sub
add
mov
cmp
stos
push
and
inc
mov
jp
cwtl
repnz
xchg
stos
cwtl
outsb
lahf
jo
lcall
cmpsl
enter
insb
popf
lahf
push
and
pushf
and
jmp
mov
mov
loope
cmp
in
dec
movsb
adc
fsts
imul
imul
push
in
sti
mov
lcall
adc
fimull
add
fsubrl
pop
imul
lret
flds
mov
and
mov
imul
jge
fldt
mov
stos
dec
jl
aas
xor
add
outsl
icebp
push
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
psubusb
popf
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
mov
movsl
cwtl
outsb
mov
movl
mov
daa
sti
cmp
fdivrl
sti
mov
ret
mov
or
movsl
leave
sbb
aaa
incb
in
jb
and
mov
jne
pop
mov
lea
addl
les
inc
cmp
or
dec
pop
ret
repz
sbb
and
lahf
lret
jecxz
gs
xor
pop
sub
sbb
mov
cmpsl
mov
loop
cli
cmp
movsl
mov
mov
loop
xlat
stos
dec
sahf
cmp
test
pop
sbb
cmp
scas
mov
jns
mov
mov
sbbb
push
sbb
ret
add
addb
lcall
sti
or
dec
dec
test
icebp
lcall
xor
cwtl
xchg
fucomi
repnz
add
pushf
imul
mov
add
mov
inc
orl
jle
sahf
add
mov
cmp
test
mov
push
jno
and
fiadds
stc
into
clc
les
movsb
inc
popa
sbb
cmpsb
hlt
js
xor
sbbb
sub
out
dec
cmp
sub
xchg
lea
fiadds
cmp
sub
and
mov
mov
jns
dec
mov
push
xor
mov
push
mov
mov
add
xchg
push
cwtl
sub
scas
xor
lret
fsubr
stos
test
dec
sbb
scas
mov
cmp
movb
sti
xor
push
cmp
sarl
test
sbb
jno
or
xadd
xchg
stos
cmp
or
icebp
mov
jns
enter
icebp
fnstenv
push
loope
fistpll
or
fdivrl
and
je
inc
mov
movsb
sbb
test
push
test
or
sub
or
fistpl
mov
dec
jp
inc
mov
ds
mov
jl
cmpb
mov
or
mov
cmp
das
in
cmc
mov
movsb
xor
add
inc
inc
add
xorb
mov
repz
sti
dec
push
ret
jecxz
and
sub
popa
cltd
xchg
dec
sbb
mov
mov
jne
jo
movsl
mov
mov
stos
mov
ja
ja
shrl
inc
mov
rorl
cmp
mov
lds
mov
xchg
push
fistl
sbb
or
imul
pushf
sub
mov
roll
mov
ffree
pusha
mov
lret
fnstcw
mov
stc
leave
sbb
adc
sub
sbb
xchg
pop
ret
xchg
sub
cmp
pop
test
jp
jecxz
insl
inc
add
mov
xchg
pop
test
pop
push
pop
jmp
iret
push
adc
push
and
lods
enter
decb
sub
in
jne
dec
mov
pop
dec
pop
jbe
movsl
or
pop
mov
daa
pop
mov
iret
fucomip
jl
xchg
pop
mov
sub
mov
shlb
ss
fwait
or
dec
popf
fwait
mov
cwtl
lret
push
sbb
xor
stos
lcall
push
dec
sbb
fildll
xor
int3
lods
shl
fnstenv
cmc
sahf
xchg
pop
sub
mov
or
jae
stos
inc
roll
cmpsl
fistl
cld
movsl
or
sbb
testl
cltd
jnp
mov
jno
in
fnstsw
push
fcom
jle
push
adcb
dec
adc
subl
movb
in
dec
test
dec
dec
cmp
mov
pop
xor
mov
imul
cmp
sbb
xor
jne
test
in
sahf
bswap
sbb
or
jne
addl
mov
sub
and
xor
pop
cmp
mov
push
mov
push
clc
sti
mov
jecxz
push
sbb
lcall
or
add
popf
xor
fsubrl
fnstsw
push
test
lret
shrb
aaa
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
cmpsb
int
fcompl
lret
mov
cmp
scas
push
jg
je
xchg
fwait
add
push
cmp
or
dec
repz
pop
inc
test
or
nop
leave
repz
out
popf
out
mov
in
xchg
jmp
lea
bound
fdivrl
es
lods
sti
xor
jl
cmpsb
xchg
adc
pop
aam
dec
stc
ljmp
dec
mov
cltd
jns
jb
cs
adc
gs
subl
adc
cld
mov
loopne
out
movsb
imul
repz
pop
mov
mov
mov
enter
insb
and
rclb
iret
cmpsl
mov
neg
and
sbb
nop
xlat
pop
sbb
test
clc
mov
pop
stos
inc
inc
pop
dec
ds
pop
int3
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
cmpsb
xchg
dec
rcrl
les
jmp
inc
mov
dec
mov
fisubrs
sbb
lock
mov
or
fwait
cmpsb
fcomp
aaa
jo
dec
push
insb
ret
shlb
xchg
push
and
push
push
dec
mov
ret
inc
js
or
lret
addl
aas
into
pop
stos
pop
lods
cltd
xchg
mov
cmp
mov
pop
sti
mov
xor
mov
adc
decb
add
fsubrl
pop
imul
mov
pop
test
mov
sbb
xchg
sti
stc
jl
ret
adc
popf
lret
arpl
xor
mov
inc
movsl
out
xchg
adc
add
sub
xchg
leave
imul
pop
jbe
loope
stos
fstl
cmp
pushf
sbb
dec
mov
leave
cmc
and
mov
mov
mov
mov
sub
push
mov
sbb
mov
inc
insl
fwait
popf
aad
dec
mov
inc
pop
fdivr
sbb
test
icebp
iret
in
sarb
sbb
xchg
or
rcll
add
push
lahf
test
push
popf
push
daa
dec
mov
mov
call
fldcw
ret
loopne
dec
pop
add
mov
aaa
gs
mov
mov
sbb
mov
mov
loop
rcrb
mov
sub
sahf
sbb
xchg
push
bnd
loop
jns
lahf
sti
mov
lods
fldt
jmp
pop
xchg
jge
dec
mov
sub
dec
jno
movsl
sbb
push
scas
mov
fwait
push
pop
pop
cld
inc
jecxz
test
adc
mov
movw
stos
push
scas
pushl
ljmp
pop
push
mov
inc
shlb
inc
inc
cmp
mov
stos
push
das
movsl
cwtl
inc
stos
adc
fidivrl
jp
call
mov
fwait
fwait
xchg
call
outsl
inc
cbtw
imul
cmp
add
mov
cwtl
sbb
xor
inc
adc
dec
mov
mov
stos
shrl
push
decl
mov
sbb
sbb
sub
mov
jg
ret
mov
add
jl
xor
pushf
dec
and
jne
lea
xchg
scas
push
mov
lret
sahf
test
ljmp
sti
in
je
std
or
pop
sub
les
cmp
adc
lock
mov
sub
popf
adc
dec
mov
dec
pop
cld
pop
jecxz
stos
fldl
mov
popa
outsb
js
enter
lahf
jnp
mov
push
cwtl
add
arpl
or
repnz
js
repz
test
or
push
fisubl
jns
fdivrl
stos
xor
lret
fwait
jb
sbb
jge
xor
cmpb
je
test
inc
pushf
cmp
inc
push
es
mov
jecxz
dec
sahf
push
sub
mov
bound
repz
daa
loopne
mov
repz
sti
dec
push
add
lret
jecxz
and
lods
or
dec
popa
lcall
mov
mov
fdivl
pop
dec
movsl
mov
rcrb
mov
test
sub
inc
lahf
lret
ljmp
jns
pop
mov
xchg
test
andb
divl
mov
fsubrl
loope
xchg
stos
inc
and
jns
mov
mov
mov
insb
jge
jmp
fcmovnb
pop
mov
sahf
sbb
mov
loop
and
add
pop
pop
mov
adc
mov
test
add
push
clc
rclb
movsl
inc
inc
das
shrb
adc
pop
orb
cltd
jmp
and
daa
je
clc
xchg
sub
add
add
sub
mov
fsubr
mov
sbb
add
inc
int
shr
adc
daa
xchg
pop
mov
daa
pop
xchg
mov
lahf
aam
sbb
mov
bound
lret
mov
sbb
popf
fidivl
cwtl
lret
inc
sbb
xchg
jmp
les
jno
inc
in
dec
sbb
shrl
fildll
ljmp
lret
pop
in
cwtl
xchg
sbb
cmp
daa
or
pop
cmp
xchg
fnsave
push
add
pop
cltd
stc
add
or
cwtl
lahf
ficoms
fstl
adc
and
cmp
dec
mov
sub
les
xchg
sub
xor
xchg
sahf
cmpsb
mov
jb
test
sbb
cmp
sbb
ud1
call
hlt
pop
das
test
jns
pop
orb
jmp
dec
add
sahf
dec
sub
fwait
xchg
mov
xor
mov
add
cmc
js
clc
sti
mov
jecxz
push
sbb
add
adc
sbb
add
xchg
push
leave
fsubrl
aad
or
lret
aaa
mov
sbbl
mov
and
pop
pop
cmp
mov
popf
adc
fcoms
sbb
fsts
pop
pop
add
stc
or
fisubrl
mov
xor
adc
sbb
sbb
or
leave
pop
ja
mov
mov
fdivr
and
cmp
lods
outsb
add
sbbl
cmp
lret
xchg
sub
sub
mov
mov
jmp
jae
pop
cmp
pop
xorb
xchg
pop
ds
les
mov
popf
es
sbbb
adc
jle
ljmp
xchg
shl
mov
shr
repz
adc
stc
mov
loopne
out
and
fucomip
repz
pop
xchg
mov
mov
pop
xor
mov
and
addb
dec
mov
dec
inc
scas
cmp
jnp
inc
adc
sub
adc
mov
mov
dec
pop
xchg
or
mov
rcrl
into
xchg
sbb
mov
add
icebp
push
scas
xchg
stos
mov
outsb
shlb
mov
mov
jge
jge
pop
gs
adc
inc
fcoml
mov
jmp
push
xchg
out
mov
sub
dec
xor
adc
mov
mov
les
jge
dec
dec
cmp
xchg
cmc
mov
xchg
shrb
push
test
outsb
ret
mov
mov
pop
ds
mov
lock
add
inc
sbb
inc
adc
or
mov
pop
push
mov
pop
stos
pop
lods
adcl
pop
xchg
dec
add
mov
and
mov
mov
adc
and
add
fwait
push
xor
dec
inc
cmp
sbb
adc
sub
test
push
mov
aaa
mov
sbbb
iret
sbb
rcrl
aad
cmp
lret
ret
rcrl
inc
push
jmp
sbb
pop
jb
nop
fwait
lret
push
ja
xchg
es
push
lret
jmp
pop
mov
in
mov
cmc
lahf
loope
fsubrs
cmpsl
js
call
sbb
inc
icebp
gs
pop
inc
test
and
into
test
inc
push
fidivrs
inc
mov
pop
add
outsl
aas
adcl
dec
xchg
out
insl
push
out
add
adc
inc
test
dec
push
or
fidivs
lret
dec
mov
mov
shr
repz
ret
loopne
dec
pop
inc
leave
jmp
clc
sbb
and
lret
jecxz
gs
lock
int
pusha
mov
sbb
mov
aam
xchg
sbbl
lds
lret
mov
repnz
cltd
jo
push
scas
mov
bound
sbb
inc
lahf
repnz
jno
dec
inc
sub
inc
sbb
jno
add
inc
cmp
jo
arpl
test
sub
pusha
jnp
mov
icebp
fsts
sbb
jmp
xchg
pop
cltd
mov
inc
mov
fdivs
sti
adc
adc
mull
rcrl
mov
adc
xlat
cltd
call
inc
in
in
jl
jmp
xlat
sbb
xchg
push
and
pusha
xor
jecxz
mov
shr
inc
cltd
sbb
fsubr
inc
adc
adc
mov
das
push
andb
pop
mov
sarl
insb
mov
add
mov
sbb
sbb
or
push
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
fs
clc
sub
rcr
inc
mov
ja
fs
mov
mov
jae
aam
iret
mov
fistl
adc
add
inc
stos
int
xor
inc
add
pushf
cmpsb
or
fs
call
cwtl
jp
cs
jnp
in
mov
fs
mov
fwait
or
sarb
clc
xor
mov
mov
xor
adc
je
xchg
rcl
insb
ret
pop
sbb
sbb
in
jl
imul
gs
inc
adc
ljmp
add
or
int
imul
push
sub
aam
mov
stc
repz
sti
loopne
mov
repz
sti
dec
push
inc
xchg
jecxz
and
test
add
mov
add
ret
mov
les
xchg
adc
sub
test
pop
push
dec
sbb
cli
scas
jae
flds
repz
fs
cmc
sahf
xchg
pop
sub
enter
lret
or
enter
pop
sub
jb
mov
cmp
dec
dec
xchg
cltd
popf
xchg
fsubl
push
mov
push
scas
mov
mov
push
cwtl
hlt
inc
shlb
push
jo
mov
xchg
and
pop
xchg
je
lcall
and
xor
gs
mov
sti
xor
jnp
leave
in
jne
push
mov
sbb
mov
dec
and
xor
hlt
sbb
jmp
inc
sbb
dec
adc
call
pop
mov
daa
pop
test
fucomip
jl
cmpl
inc
mov
add
mov
fwait
add
cmpb
pop
loopne
dec
pushf
xchg
rcrb
jne
les
shrl
jmp
js
leave
cltd
test
fwait
into
push
or
into
sbbl
test
imul
mov
cs
pop
or
shl
adc
enter
pop
js
lahf
pop
outsb
js
cwtl
sbb
clc
lock
in
nop
xchg
mov
arpl
xchg
imull
les
mov
ljmp
es
cmpsb
fldt
fdivrs
cli
xor
rcrb
sbb
mov
scas
aas
mov
fbstp
out
inc
cwtl
clc
sub
shl
add
out
pop
fisubrs
pop
dec
fimuls
dec
sub
test
pop
add
mov
sbb
mov
aad
sti
mov
jecxz
movl
or
dec
adc
lods
inc
sbb
lret
movsl
dec
rcrb
sbb
xchg
stos
push
test
xlat
test
pop
movsb
jmp
pushf
push
stc
jo
popf
xchg
rclb
arpl
lock
mov
test
idivb
xchg
fistl
faddl
fs
pop
pushf
and
adc
ja
add
fistl
lret
xchg
xchg
ljmp
imul
or
xchg
aaa
nop
cmp
pop
dec
jge
mov
mov
fcomp
push
fdivrs
jp
mov
xor
jnp
out
js
fdivrl
inc
xchg
lea
adc
sbb
mov
int
jle
lret
mov
shl
mov
shr
repz
adc
push
mov
loopne
out
mov
aas
pop
lea
lahf
lret
hlt
mov
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
lcall
jge
mov
fldt
leave
js
xor
test
js
sbb
lcall
cmp
imul
mov
lret
jns
push
flds
sahf
into
jo
ret
cli
mov
test
incl
mov
fadd
and
ds
jge
mov
subl
into
movsl
push
and
xchg
fisubrs
test
cltd
xor
cmpsb
xchg
sub
movd
lahf
pop
xchg
pop
shll
fwait
jl
push
test
loop
mov
inc
xchg
dec
push
or
fidivs
or
jb
idivl
popa
call
cwtl
stos
ret
loopne
dec
pop
ret
out
repz
ds
mov
adc
nop
fimull
dec
push
lock
rcrl
or
mov
pop
and
test
dec
and
leave
pop
inc
add
lret
fwait
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
into
test
push
scas
jne
dec
inc
pop
cltd
xchg
mov
stos
mov
mov
fcoml
jge
scas
stc
test
jmp
std
stc
loope
lds
inc
sbb
js
das
jl
dec
inc
cmp
pop
inc
aam
mov
add
insl
test
pop
xor
call
add
pop
lret
fwait
xor
xchg
mov
mov
std
jge
sub
call
pusha
sub
xor
test
out
mov
cltd
stc
jg
fsubr
inc
adc
testb
adc
and
test
movsl
lahf
jle
iret
ffreep
jns
sbb
hlt
mov
jp
cltd
dec
bswap
adc
or
jns
imulb
jno
jns
and
mov
and
pop
push
test
ret
dec
sbb
add
mov
fnsave
push
mov
nop
sbb
adc
pushw
adc
mov
mov
mov
add
adc
or
mov
cs
sbb
pop
pusha
jle
das
pop
icebp
sbb
cmp
jl
sbb
inc
fiaddl
mov
enter
incl
push
or
les
xchg
out
aam
mov
clc
mov
daa
popf
jecxz
lahf
cmpsl
mov
fwait
lea
pop
in
xor
inc
adc
or
xchg
enter
into
push
or
int
imul
push
sub
mov
xor
repz
int
mov
and
cmp
inc
jns
xchg
rcrb
mov
shrl
dec
or
sub
xor
imul
mov
lods
pop
shrl
fildll
loop
jno
pop
sti
in
and
ret
sbb
cld
mov
in
movsb
out
and
dec
sub
jl
pop
call
test
and
jnp
xor
test
test
adcl
mov
fisubrl
out
or
adc
stc
js
pop
icebp
or
and
add
js
dec
lret
and
fcompp
call
out
cltd
enter
adc
sub
mov
dec
and
dec
mov
mov
mov
enter
mov
sbb
adc
adc
call
pop
mov
imul
inc
pop
in
ds
push
inc
sar
push
gs
adcb
adc
jp
mov
adc
fsubrl
popa
stos
icebp
ss
lds
mov
iret
sbbl
mov
and
sbb
xor
mov
imul
pop
sub
les
bound
inc
cmp
add
loop
sbb
sti
call
add
cltd
fmull
cmp
lods
ret
or
inc
enter
jmp
inc
sub
inc
cmpl
mov
mov
pop
repnz
mov
sarl
test
movsb
inc
sbb
cmpsl
ret
out
ret
rcrb
mov
inc
cwtl
pop
add
add
add
out
cmpsb
fisubrs
pop
dec
mov
dec
sahf
dec
sub
mov
pop
sub
mov
and
lds
xchg
fists
add
fisubrs
sbb
mov
pop
cmc
loopne
popa
xchg
rcrl
jo
iret
cmpsl
mov
adc
push
lock
ss
repnz
scas
pusha
adc
mov
mov
dec
sbb
xor
enter
lret
mov
cmp
or
or
test
movsl
adc
fdivrp
ds
dec
sahf
pop
enter
jmp
cwtl
popf
adc
cmpsl
dec
jo
jge
or
pop
cmpb
inc
pushf
imul
mov
sub
in
sbb
mov
add
cmp
clc
or
xchg
xchg
lods
mov
xchg
mov
sbb
lahf
jle
dec
out
call
cmp
testl
sbb
xchg
adc
sub
mov
xor
mov
xor
inc
lcall
adc
adc
shll
jle
or
test
mov
pop
push
add
leave
lock
mov
mov
popa
nop
adc
or
xorb
pushf
lcall
push
adc
test
push
nop
push
test
push
mov
mov
push
cmc
mov
ficompl
cwtl
ds
std
fdivr
xchg
adcb
ffree
sbb
push
cmp
lret
or
jp
out
mov
mov
movl
fstl
fwait
enter
lret
push
xchg
sbb
jnp
xchg
jg
or
xor
clc
xor
mov
movsb
adc
hlt
dec
cmp
std
and
inc
sti
push
je
mov
out
xor
repz
in
lea
arpl
mov
mov
mov
inc
sbb
add
inc
adc
dec
imul
sahf
dec
mov
into
pop
stos
les
add
int
movsl
push
mov
in
cltd
fisttpl
pop
cmp
sbb
aas
lcall
aad
or
ret
xchg
sbb
sbb
pop
lret
mov
repnz
push
in
dec
ss
sahf
lock
mov
mov
arpl
or
sbb
push
mov
sbb
adc
xor
mov
jp
mov
xor
jecxz
popf
cmpsb
jno
pusha
lahf
adc
test
sub
fistpll
js
adc
loope
xchg
adc
es
dec
mov
mov
dec
mov
test
fisttpll
sti
es
mov
lahf
pop
xchg
aas
pop
jb
fwait
jl
dec
add
loop
mov
inc
mov
dec
push
or
fidivs
outsb
mov
dec
mov
mov
push
add
mov
xor
in
daa
ja
clc
rolb
mov
mov
inc
sbb
mov
xchg
or
aam
lcall
inc
xchg
sub
test
stos
mov
xchg
mov
pusha
push
cld
sub
aaa
mov
addr16
frstor
imul
lahf
repnz
addl
sub
cltd
dec
mov
mov
mov
dec
movsl
xchg
mov
add
cmp
xor
fdivl
jecxz
popf
movsl
jg
cli
in
cli
mov
lret
fsubrs
inc
cmp
andl
push
ret
add
or
jb
jmp
std
xchg
pop
adc
xchg
jp
mov
fdivrs
out
mov
std
jge
dec
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
cli
jecxz
mov
shr
inc
cltd
pop
cmp
inc
cmpsb
dec
mov
rcrb
sti
aam
jo
xor
and
out
daa
push
adc
adc
movsl
lds
jg
ret
sbb
inc
pop
lcall
jg
sbb
dec
and
sbb
bnd
xchg
es
scas
rorl
icebp
fnstenv
neg
dec
sbb
add
dec
jl
add
or
cmp
call
jmp
lds
push
stos
jge
pop
mov
leave
jns
flds
push
leave
pop
lcall
jecxz,pn
adc
mov
cmp
xchg
adcb
dec
adc
leave
pop
outsb
rcl
pinsrw
fildll
mov
inc
cwtl
dec
lods
push
std
sahf
movsl
ret
fdiv
jns
sti
rcrb
imul
fwait
lea
mov
inc
adc
sub
stc
push
or
int
imul
gs
pop
cmpl
xor
dec
and
rcrl
add
in
daa
divl
mov
add
cmpsl
inc
sbb
inc
sbb
imul
dec
pushf
xchg
rcrb
jge
les
push
stos
push
int3
sub
cs
mov
inc
pushl
jo
xor
add
sub
scas
push
cs
push
sub
mov
mov
mov
in
sub
cltd
cmpsl
push
dec
mov
xacquire
leave
in
test
or
repz
repnz
test
stc
addr16
xchg
or
sbb
adc
pop
push
sub
mov
jl
mov
cmp
jne
pop
mov
and
mov
dec
and
lret
out
mov
mov
push
lret
sbb
dec
jb
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
lahf
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
out
jge
test
mov
ja
adc
scas
popf
in
stc
dec
sub
push
sbb
inc
cld
cmc
mov
push
gs
es
cmp
les
fistl
movsb
xchg
icebp
dec
aad
mov
fstl
cmp
les
and
stc
dec
or
fyl2x
xor
inc
stos
adc
inc
mov
or
jno
xor
push
dec
and
xor
test
insl
std
cltd
movsb
inc
sbb
cmpsl
ret
out
mov
aas
mov
jge
out
inc
cwtl
cmp
enter
inc
pop
or
mov
dec
mov
ret
fiadds
xlat
xor
pop
arpl
aad
mov
loopne
rorl
aaa
rcrl
lahf
lret
or
add
test
negb
frstor
sub
dec
roll
sbb
rcrb
sbb
les
icebp
or
shll
adc
fbld
mov
lods
xchg
jno
mov
shll
mov
mov
cmp
jl
add
mov
jge
jb
sbb
sbb
mov
pop
outsb
js
lods
fbstp
arpl
lret
sub
js
or
rcr
mov
inc
cmpsb
pop
xchg
mov
jae
push
sub
pop
inc
and
call
mov
testl
sbb
fwait
repz
add
int
jle
sbb
cmp
fsts
add
mov
imul
sub
mov
dec
cmp
imulb
jnp
or
cltd
push
lock
cmp
mov
arpl
sbb
ror
mov
movsb
adc
jmp
pop
int3
shll
jge
pop
std
mov
push
jle
push
pushf
push
dec
pop
xchg
sbb
xor
xchg
cmp
ja
mov
mov
test
stos
lods
ret
pop
cld
pop
addr16
cmp
je
xchg
add
jnp
jg
xor
mov
in
pop
popa
sbb
in
mov
roll
xchg
jle
xor
mov
ret
adc
push
pop
test
out
xor
int
in
out
cmpsl
ret
fincstp
clc
sarb
lea
or
mov
mov
call
inc
sbb
pop
add
push
adc
enter
je
mov
pop
adc
call
push
sahf
pop
imul
push
ja
repz
add
sbb
in
cmp
imulb
inc
add
add
jbe
and
test
jp
clc
xchg
cmp
mov
test
pop
xor
xchg
filds
repz
jge
outsl
mov
and
mov
inc
push
sbb
xchg
pop
sub
adc
sub
jns
mov
push
xlat
loopne
or
cwtl
lahf
fisttps
jle
xor
int
xchg
sub
js
es
dec
pusha
sarb
sub
push
mov
int3
push
mov
cld
xchg
mov
lahf
pop
xchg
sahf
std
jb
fwait
jl
ror
bound
add
cmpsl
jl
sub
dec
push
or
ret
push
int
mov
xchg
xchg
fisttpll
pop
pand
inc
sahf
dec
jns
cli
mov
jno
iret
sbb
daa
dec
cmp
rcrb
adc
or
jns
repnz
jno
jns
push
mov
push
dec
xchg
push
and
rorb
push
inc
cmp
cs
adcb
push
mov
sbb
lret
or
lcall
fimull
mov
aad
jp
pop
sbb
push
jo
ret
sahf
sahf
xchg
jl
js
jp
mov
mov
gs
pop
aaa
cwtl
fcomps
andl
mov
mov
and
xchg
jp
int3
clc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
pop
and
add
cmp
add
ret
int3
sub
in
mov
jmp
ret
div
arpl
divb
mov
sbb
adc
xor
and
xchg
mov
out
idivb
cli
in
test
lcall
jl
xor
in
jnp
out
repz
xchg
pop
xchg
fisubrs
or
or
add
lret
fsubrs
fildll
mov
inc
cwtl
dec
lods
push
out
movsl
ret
fmul
jns
xchg
xchg
lahf
cmpsl
mov
fwait
lea
push
fsubl
out
adc
sub
push
pop
pop
test
insb
push
xor
cs
aam
pop
mov
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
hlt
sub
mov
filds
inc
or
sub
cmp
push
in
movsl
aam
mov
addr16
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
lcall
jl
orl
pop
push
mov
mov
inc
mov
nop
fwait
push
xchg
or
mov
xor
push
pushf
sub
sbb
cmp
xchg
mov
mov
rcrb
dec
jmp
pop
mov
dec
xchg
sahf
mov
ficoms
xchg
mov
jle
push
sub
mov
jl
cmp
cmp
in
jne
jb
int3
pop
add
cmp
xchg
mov
inc
cmp
fistpl
dec
sahf
dec
dec
sub
ljmp
jns
mov
mov
pop
adc
lea
push
ret
or
imul
cmc
loopne
imul
add
push
xor
out
dec
xor
mov
xor
cmp
iret
test
cli
stos
repnz
mov
push
and
test
adc
mov
test
std
dec
jge
shll
inc
pop
inc
sbb
jo
scas
mov
test
add
inc
pushf
sub
iret
cltd
xor
pop
repz
xor
faddl
xchg
cltd
or
add
jbe
or
push
mov
xlat
xor
test
insl
out
movsb
inc
sbb
cmpsl
ret
out
xchg
cmp
lret
insb
xor
mov
cwtl
push
insb
inc
dec
xchg
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movsl
imul
lds
cmp
jecxz
pop
mov
or
inc
cmp
call
mov
movsl
ret
sbb
xchg
add
adc
mov
push
pop
lea
das
fstl
jg
sbb
fcoms
ffree
push
adc
pop
or
jne
mov
push
stos
mov
nop
fisttpll
jbe
xor
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
or
repz
mov
in
xchg
mov
push
or
xchg
js
mov
inc
and
ret
jb
cmp
jne
jecxz
movsb
int
test
inc
aam
sbb
fisubrs
das
pop
xlat
adc
sub
mov
popa
pop
mov
sbb
imul
cltd
in
stc
aaa
rcrl
lahf
lret
or
add
test
idivb
add
movsl
inc
xor
pop
adc
add
popa
xchg
aam
xor
leave
sbb
add
sub
call
scas
dec
mov
stos
neg
dec
cs
fistps
jl
fidivl
mov
scas
fmuls
pop
dec
xchg
adc
sahf
fsubrl
pop
push
nop
sbb
icebp
jo
rcl
lcall
jb
mov
xor
inc
xor
fdecstp
js
mov
fmull
xchg
rorl
sbbl
jbe
iret
punpckhbw
sbb
ds
cwtl
dec
and
xor
test
insl
in
movsb
inc
sbb
cmpsl
ret
out
repz
fwait
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
sbb
or
sbb
cmpb
stos
int
sub
dec
xor
stos
dec
sbb
insb
push
push
xchg
jbe
inc
pop
aad
stos
or
fxch
push
test
filds
shlb
movsl
jl
lret
rcll
out
mov
and
xchg
lcall
pop
stos
fsts
cmpsl
adc
loopne
jp
cmpsl
sbb
leave
push
xchg
pop
loop
js
insb
push
or
loop
sarb
iret
and
lea
xor
rcr
mov
inc
cmpsb
pop
repz
mov
sub
lods
inc
and
call
cmpsl
pop
fsubrp
shlb
xchg
fmuls
and
rcrl
shr
test
pop
movsb
popf
mov
lea
dec
mov
inc
add
dec
rcrl
adc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jl
push
in
mov
cmp
iret
inc
sbb
pop
sbb
mov
imulb
les
jnp
cmp
fisubrl
jmp
cli
pusha
std
movsl
dec
push
dec
pop
in
dec
add
cmp
mov
add
test
mov
xor
adc
xchg
xor
pop
cmp
sbb
jmp
scas
inc
fwait
push
shlb
and
mov
popl
xor
mov
fisttpl
adc
movsl
pop
test
out
xor
int
decl
ret
fld
clc
xor
es
aam
jl
xchg
or
fistps
dec
push
or
out
jne
js
popa
popa
mov
dec
and
add
pop
adc
add
mov
jno
iret
sbb
mov
adc
outsb
or
mov
imulb
sbb
push
and
mov
adc
cmp
mov
negl
fs
sarl
pushf
in
jae
inc
fadds
cmp
xor
adc
testl
rol
fcmovnu
cwtl
mov
js
lds
inc
and
lahf
scas
mov
mov
fsub
jo
jb
or
pusha
sarb
sub
push
mov
cld
mov
mov
xchg
mov
lahf
xchg
cltd
out
mov
sti
sti
faddp
mov
js
loopne
jecxz
mov
or
out
push
adc
mov
jmp
test
xor
mov
xchg
jne
inc
hlt
out
les
shrl
loopne
mov
bound
mov
sbb
in
repz
lds
sbb
mov
mov
mov
dec
test
dec
sarb
mov
movsb
sbb
stos
lods
mov
sbb
sub
stos
shll
jge
pushf
mov
sub
xchg
xchg
jl
out
lret
popa
inc
in
mov
stos
std
cld
jns
sbb
xchg
mov
xchg
pop
sbb
test
mov
pusha
pop
into
xor
mov
fwait
leave
insl
xor
pop
aaa
cwtl
call
es
mov
sbb
and
xchg
jp
int
test
sub
mov
stos
cmp
out
aas
pop
sahf
push
dec
aad
jmp
inc
orb
sbb
mov
js
or
fstps
int
imul
mov
test
mov
sub
mov
pop
mov
pop
add
adc
jae
mov
xor
mov
cmp
test
mov
sbb
jecxz
sbb
popa
cmp
hlt
test
leave
pop
sbb
mov
sbb
test
cmp
or
mov
mov
sub
mov
mov
ficomps
xchg
sbb
test
sub
sbb
scas
in
inc
cmp
mov
pop
xchg
pop
push
adc
xorl
push
or
add
mov
push
pusha
inc
cwtl
dec
lods
push
out
mov
call
inc
popf
push
loope
mov
int
ljmp
fucomp
test
pop
hlt
pusha
inc
inc
or
cmp
aad
mov
mov
dec
sbb
loopne,pn
xor
dec
shll
movsb
negb
loopne
jns
mov
mov
pop
adc
jae
fdivs
cld
add
add
inc
pop
mov
add
imul
gs
fdivr
mov
les
xchg
push
sub
movsb
leave
mov
dec
push
add
adc
mov
rcrl
adc
sub
popa
pushf
add
inc
imul
jge
mov
push
nop
test
mov
mov
push
adc
outsb
pop
dec
mov
int3
xor
mov
mov
popf
dec
icebp
or
inc
sbb
mov
addb
loopne
test
adc
mov
sub
sub
out
dec
pop
cmc
stos
popa
jne
outsl
push
andnps
dec
xor
mov
push
adc
or
orb
adc
mov
jbe
mov
sbb
mov
call
mov
aam
popf
pop
pop
add
cs
shl
mov
or
push
aas
repnz
mov
add
or
inc
mov
lds
popf
lret
push
in
mov
in
mov
dec
sbb
in
data16
add
and
cmp
or
insl
movsl
mov
std
inc
jnp
push
lret
pop
test
inc
sbb
scas
fcomi
js
popf
scas
inc
movsl
fsubl
aad
andl
addl
add
push
mov
xlat
xor
test
insl
xchg
stc
mov
stos
mov
sti
gs
jmp
adc
rcll
add
sbb
hlt
mov
dec
inc
test
cwtl
mov
icebp
lret
sbb
inc
and
cmp
pop
into
pop
stos
cmp
aaa
in
movsl
divb
pop
ds
pushf
icebp
outsl
clc
bound
jecxz
insl
xchg
xlat
or
sbb
ret
ret
sbb
inc
pop
sbb
or
sub
sub
cmc
in
movsl
dec
or
leave
sti
dec
sub
and
mov
pop
jne
movl
fnstcw
mov
xchg
sbb
rcll
mov
scas
mov
sbb
or
cwtl
push
sub
gs
lods
cmp
ljmp
cmp
insb
push
dec
cmc
leave
loop
sarb
iret
and
lea
fisubl
call
cmpsb
pop
mov
jp
mov
rclb
dec
lock
fdivrl
jnp
sti
inc
adcl
das
jno
adcl
enter
rcll
adc
test
cwtl
cwtl
mov
lret
sub
mov
and
in
and
xor
movsl
outsl
sub
daa
jmp
popf
xor
jb
rol
ljmp
sbb
dec
or
addr16
out
dec
and
aad
sbb
clc
push
cli
sub
fbstp
jae
stc
insl
push
lcall
xor
inc
cmp
adc
out
add
jo
imul
test
sbb
mov
mov
test
mov
sbb
test
cmp
fwait
push
shlb
inc
addl
add
and
sbb
dec
and
push
fisubl
adc
sbb
fidivrs
pop
adc
jb
fwait
jo
aad
popf
pop
sub
rolb
sti
inc
test
pop
mov
mov
ss
mov
fwait
sbb
and
data16
mov
sti
pop
adc
push
sti
enter
mov
ss
add
lds
jle
mov
jp
and
sbb
ss
mov
dec
sbb
push
jnp
push
lds
cltd
push
lock
das
cmp
loopne
aad
lods
dec
or
jae
test
cmp
ret
add
sbb
fidivl
lahf
or
sub
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
jl
adc
pusha
sarb
sub
push
mov
sbb
pop
cli
pop
mov
fs
mov
enter
add
rcrl
sti
mov
push
mov
mov
popf
xchg
add
adc
ret
inc
aaa
lock
pop
pop
mov
fwait
jns
pop
and
mov
ret
sar
fisubs
in
lods
jmp
lods
lahf
jno
push
stc
inc
jg
add
scas
jo
sbb
mov
iret
pop
xor
or
aad
mov
lods
std
scas
dec
sub
lahf
movsb
jmp
inc
mov
jae
ror
xor
movsl
icebp
add
rcl
fstps
lock
sub
fnstenv
shl
adc
xchg
stos
cmp
fwait
push
xchg
popf
daa
shrb
push
ret
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
andl
mov
mov
repz
push
mov
jp
mov
aad
aas
out
xor
push
into
clc
hlt
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
jne
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
xchg
add
fs
icebp
mov
sbbl
xchg
lahf
xor
xlat
mov
and
mov
mov
mov
jno
mov
nop
ret
push
rclb
inc
mov
add
and
pop
dec
les
push
lcall
pop
test
lods
inc
sbb
scas
in
cmp
mov
push
jo
sbbl
add
or
or
add
mov
push
lcall
cwtl
adc
mov
mov
inc
and
xchg
mov
jecxz
inc
cltd
enter
out
je
sbb
popf
xchg
lcall
rorl
pop
xlat
adc
ret
pop
push
mov
push
repz
cmpsb
repz
push
jns
pop
loopne
ljmp
fdivrl
imul
and
xor
jne
mov
mov
cmpsl
ret
test
dec
mov
dec
sarb
sub
stos
bnd
repz
push
mov
fists
xchg
jl
out
mov
mov
je
fnsave
aam
mov
xor
add
fidivl
mov
xchg
stos
inc
movsb
pop
adc
mov
lods
mov
mov
push
adc
ret
outsb
pop
mov
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
fcos
inc
rorb
mov
jmp
sbb
test
decl
cmpsb
cmp
out
enter
and
or
es
je
cmpxchg
mov
int
mov
add
pop
cmp
fidivs
in
mov
stos
pop
movsl
imul
into
shl
jno
or
decl
rcrw
lahf
add
xor
add
inc
mov
xchg
mov
push
add
fisubl
outsl
mov
fucom
cli
mov
mov
fs
daa
jno
adc
movsb
bound
jmp
xchg
jl
mov
stos
fs
jmp
mov
es
test
cltd
inc
sbb
scas
fcomi
js
cmpsl
popf
scas
inc
movsl
fdivrl
in
andl
addl
add
lret
and
mov
xor
imul
fstl
fldt
jno
jb
pusha
repz
push
enter
mov
add
sbbl
push
je
movsb
lea
jnp
mov
aas
mov
int
pop
inc
aaa
jbe
xchg
fiadds
jae
mov
std
dec
jno
cmp
add
or
insl
cwtl
ret
sub
pop
inc
stos
cwtl
decl
xchg
cmp
clc
scas
movl
lcall
jl
daa
dec
or
mov
sbb
addb
imul
mov
mov
lods
cmp
sbb
pushf
inc
bnd
insb
push
mov
loop
sarb
iret
and
adc
rol
jmp
xchg
lods
in
fptan
pop
xor
xchg
pop
test
fildll
or
inc
popf
lret
mov
fnstenv
xorl
pop
test
leave
das
fistps
dec
push
or
loop
jne
js
popf
lea
adc
push
aas
shrb
or
arpl
fimull
fstl
inc
cmp
test
out
es
loopne
dec
mov
test
sub
push
pop
cli
or
mov
addr16
fwait
ret
or
sbb
iret
test
lods
add
jbe
inc
and
stc
dec
sbb
in
bound
sbb
and
sub
xchg
stos
mov
stos
xchg
push
adc
push
mov
add
push
sbb
mov
jmp
scas
inc
fwait
push
shlb
jae
sub
jns
jle
xchg
sub
cs
add
xchg
mov
in
fdivrs
aam
inc
and
lret
gs
std
inc
or
xor
fcoml
mov
rcll
adc
xchg
cltd
mov
adc
dec
pop
jnp
sbb
sub
in
mov
stos
pop
lods
pop
sbb
out
ds
jp
movsb
fldcw
in
fwait
cmp
pop
and
mov
lock
lock
mov
ss
xor
iret
mov
sbb
jbe
adc
cli
pop
pushf
cmp
movsl
dec
pop
test
imul
sarl
xchg
leave
iret
sub
sti
sbb
addb
imul
mov
fwait
lods
gs
lods
cmp
sub
pusha
mov
bnd
insb
push
dec
sti
leave
loop
sarb
andl
cwtl
into
js
ret
pop
dec
xchg
adc
xchg
pop
mov
fidivl
dec
and
insb
cmc
xchg
xchg
aas
xchg
in
pop
out
inc
sbb
mov
insl
call
test
mov
gs
popf
pop
sub
rolb
dec
dec
test
or
jmp
cmp
xor
movsb
std
aas
std
dec
lret
lea
xlat
pop
push
andl
mov
pushf
loopne
roll
mov
inc
aas
cli
shll
repnz
icebp
cli
dec
xchg
adc
push
mov
xlat
push
aaa
xchg
cld
pop
iret
test
cwtl
xor
aaa
pop
push
in
dec
stos
fildl
dec
sub
lret
in
cmc
iret
pushf
jl
test
and
xor
scas
xchg
stos
mov
stos
xchg
push
adc
push
mov
test
mov
sbb
mov
cmp
fwait
push
rolb
dec
and
lcall
jge
adcl
rcrl
jg
and
scas
call
jo
lret
cwtl
sub
mov
mov
mov
popf
xchg
add
sbb
shlb
aam
xchg
test
outsb
mov
shll
xchg
sbb
aam
popf
jl
fwait
pop
outsl
clc
add
or
cld
repnz
movsl
mov
cltd
cwtl
jmp
sbb
push
xchg
mov
cmpb
xchg
xchg
add
faddl
movsb
fisubrl
pop
inc
inc
pop
dec
or
ret
mov
mov
mov
xchg
push
nop
cld
loopne
dec
mov
or
fstp
imul
adc
pop
mov
adcb
inc
and
lahf
scas
mov
mov
aad
jo
popa
or
mov
repz
roll
or
mov
mov
pop
icebp
test
sub
xchg
pop
pop
cmpsb
call
xchg
push
xabort
pop
mov
bound
out
xchg
test
inc
cmp
mov
mov
sbb
xchg
into
adc
mov
jne
fstpl
popf
adc
fists
insl
mov
jmp
gs
rcrb
dec
sbb
out
sbb
jge
mov
cmp
dec
std
lock
lds
push
clc
sub
mov
pop
sbb
clc
cmp
lods
inc
popf
lret
add
sub
inc
sbb
or
jl
pop
stos
xchg
stos
cmp
fwait
push
xchg
sbb
shrb
push
ret
into
mov
fucomi
repnz
fwait
leave
cmc
xor
inc
stos
sbb
movsl
loopne
fdivs
adc
nop
fsubrs
out
ja
or
dec
into
movsl
ret
mov
pop
jg
call
xchg
lahf
out
cmp
add
cltd
enter
out
je
cmp
pop
adc
shlb
add
push
mov
inc
xchg
lea
js
sahf
neg
adc
add
and
ljmp
mov
sub
rcr
sbb
cmpsl
mov
ja
lahf
rolb
adc
lods
fs
fildll
or
jae
adc
test
pop
adc
cmc
sbb
push
mov
xchg
test
dec
mov
int
inc
scas
add
lock
xchg
adc
test
lods
inc
sbb
scas
in
jae
mov
jmp
mov
fadds
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
mov
jb
cmpb
jmp
shlb
outsl
in
dec
mov
mov
push
fldl
mov
je
ret
pop
cmc
fisubl
cmp
fists
add
ret
mov
mov
mov
sbb
sub
sar
jnp
sbbb
jne
les
push
rcrb
jbe
movsb
lcall
je
mov
mov
arpl
pop
sub
inc
sbb
or
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
lret
jecxz
bnd
int3
scas
pop
fsub
in
add
sub
inc
sarb
pop
add
jp
pop
repnz
and
adc
jmp
lret
adc
mov
shll
jno
jb
pusha
repz
push
enter
and
inc
dec
les
mov
push
adc
pop
cwtl
adc
es
xchg
icebp
scas
int3
sbb
scas
jns
loop
dec
loopne
call
idiv
sti
loopne
test
dec
sbb
pop
sbb
cmp
fadds
hlt
sub
call
mov
sub
rcrb
sbb
vandnps
test
cmp
addr16
cs
fucomp
cld
std
mov
mov
popf
aad
push
fs
add
mov
inc
scas
xchg
push
xchg
std
jo
pop
stos
fs
cmc
dec
mov
repnz
test
sub
and
fcmovnb
js
pop
cmpsl
das
jg
aad
cmp
mov
adc
push
cwtl
int3
dec
out
add
or
stc
dec
cmp
jnp
mov
daa
scas
xor
imul
pop
sbb
into
add
lret
fnstenv
xorl
and
xchg
sti
in
and
or
mov
out
cmc
mov
add
mov
mov
cmpsb
repz
ds
sbb
pop
loopne
mov
push
cmc
sbb
mov
js
sbb
mov
add
dec
inc
push
loopne
ja
add
xor
pop
leave
sbb
rcrb
cmpsl
jmp
xchg
mov
stc
and
lahf
loop
fildll
fidivrs
pop
xchg
cmpsl
bound
or
xchg
dec
inc
shlb
scas
jge
fisubrl
sbb
lcall
gs
lods
cmp
mov
pusha
mov
out
and
movsl
dec
stc
filds
and
popa
sbb
xlat
cs
dec
cmp
cmp
sbb
imul
repnz
inc
insl
imull
push
aad
push
pop
xchg
mov
xlat
pop
jmp
jp
rcll
jo
sbb
hlt
mov
in
and
dec
sub
cs
dec
ret
fildll
stos
sub
cmp
dec
in
out
and
stos
push
jae
adcb
mov
popf
jp
outsb
or
pop
or
jp
fnsave
leave
and
and
sbb
pop
sbb
and
inc
mov
fucomp
jae
jns
cmc
dec
popf
lret
leave
push
test
test
xchg
test
and
dec
sub
lret
stos
xchg
push
adc
mov
push
mov
add
push
sbb
xchg
dec
stos
out
jg
mov
dec
xlat
cld
imul
mov
pop
lock
or
xchg
adc
es
inc
jmp
fucom
dec
sarb
inc
repz
xchg
mov
adc
xchg
adc
mov
arpl
or
mov
mov
outsl
jle
jg
xchg
cmp
mov
loop
mov
sbb
inc
cmp
ret
push
adc
out
sbbb
mov
test
mov
dec
sbb
out
mov
test
mov
xchg
push
and
leave
mov
xor
mov
xchg
xor
mov
scas
pop
rcr
push
jge
sub
cmp
mov
sbb
scas
mov
jecxz
ret
lods
mov
mov
scas
mov
xchg
push
nop
pop
xchg
dec
mov
or
dec
fisubrl
lahf
or
sub
pop
mov
test
cltd
lods
inc
inc
pushf
shlb
jecxz
push
sar
pop
or
fsubrl
pop
mov
andl
outsb
jno
popl
cwtl
rorb
cmp
xor
add
mov
xchg
sbb
push
jne
insl
or
mov
call
add
and
add
or
dec
mov
cltd
mov
jbe
push
aas
rorb
mov
shrl
mov
dec
lock
pop
push
add
pop
add
mov
lcall
sub
pushf
add
test
imulb
js
inc
push
pushf
sbbb
jl
nop
mov
test
test
inc
mov
mov
cld
sub
ja
stos
cwtl
les
sbb
inc
sbb
or
in
imul
mov
xchg
pop
mov
push
pop
or
jmp
mov
mov
in
fsincos
cltd
push
fwait
leave
loop
jnp
or
cmp
mov
mov
test
adc
pop
in
ret
mov
cli
mov
push
gs
insl
es
push
mov
repnz
xchg
rcll
ret
inc
push
fwait
nop
sub
and
int3
mov
or
enter
pop
and
arpl
mov
jne
popa
pop
push
or
lods
cltd
jle
fstpt
lock
adc
mov
and
je
lahf
xchg
jno
pop
mov
push
sahf
ret
push
test
lret
cli
pop
shrl
in
mov
cmp
mov
pop
lret
inc
ret
pop
sub
inc
sbb
or
cmp
movsb
pop
and
fwait
lods
jle
mov
mov
mov
inc
mov
aaa
jg
cli
rol
popf
scas
inc
and
icebp
xor
xchg
into
cmp
addl
mov
mov
rorb
cs
add
xchg
mov
loopne
fdivrl
xor
ja
fldenv
mov
lds
and
sub
addb
and
mov
push
mov
loope
cmpsb
mov
dec
movsb
adc
fsts
mov
loopne
xor
mov
in
inc
mov
xor
jne
clc
js
inc
cmp
add
rcrl
ret
ficomps
cmc
jbe
ljmp
sbb
nop
xlat
pop
sbb
test
clc
scas
lea
cwtl
cwtl
lret
fucomp
cld
std
stos
dec
mov
popf
aad
push
mov
test
stc
mov
mov
push
xchg
pop
dec
mov
stos
add
dec
mov
ficompl
aad
xor
push
popf
scas
pop
movsb
jp
aaa
pop
push
mov
xchg
fbstp
in
xchg
pop
sub
jg
or
inc
pop
fwait
cmp
jge
fwait
jmp
xchg
fidivl
dec
and
insb
cmc
xchg
xchg
pop
xchg
in
push
fdivrs
cmpsb
mov
jbe
outsl
or
add
dec
cld
mulb
mov
in
leave
cwtl
cmp
push
stos
in
jb
and
cwtl
cmp
es
xchg
mov
iret
fldl
push
roll
shll
sub
loop
fdivrl
cmp
adc
cli
add
rolb
enter
sub
lods
xchg
sub
adc
push
cmc
xor
lds
xchg
test
jno
sub
push
mov
inc
cwtl
sbb
fisubrl
data16
in
or
test
cmp
jns
dec
mov
lcall
lret
mov
loop
mov
push
js
cltd
rcl
cmp
ljmp
aas
xchg
int
stos
mov
xor
jne
dec
lods
lods
leave
movsb
inc
sub
or
cmc
cmp
inc
cltd
enter
fsubl
mov
pop
mov
push
or
xor
fcoms
lock
mov
fisubs
adc
cs
dec
add
iret
sbb
jmp
idivb
in
and
ret
lock
pushf
dec
aaa
add
or
push
cmp
jl
pop
ret
cltd
int3
loopw
add
jnp
fcoml
fisttps
cwtl
cmc
push
test
pop
sub
xchg
sub
in
lock
lods
mov
ficompl
cmpsl
jae
inc
push
cmp
lret
sbb
daa
sub
enter
xchg
fistpl
xor
call
cmp
adc
scas
pop
mov
or
fdivrl
sbb
sbbb
testl
push
xorl
sbb
mov
mov
xchg
cmc
mov
xchg
xchg
gs
jae
inc
loope
in
push
int
pop
rcrl
aaa
popf
mov
mov
dec
inc
dec
inc
cmp
mov
aas
jnp
fadds
pushf
cwtl
xchg
dec
movsb
adc
and
repz
pop
or
in
aas
mov
mov
ret
xor
jp
aas
in
and
cmp
test
inc
sbb
outsl
xor
repz
cmp
orb
scas
push
and
mov
push
jmp
lds
shrl
fbld
and
mov
fwait
cld
sbb
insb
push
sti
pop
mov
loop
nop
mov
mov
imul
leave
cmp
cmp
or
xor
leave
nop
inc
pusha
push
pushl
sub
xchg
push
lahf
add
push
push
cmp
std
jle
js
or
icebp
js
pop
hlt
sbb
out
adc
fldl
out
mov
ljmp
inc
mov
test
mov
dec
clc
mov
hlt
js
orb
inc
mov
std
bound
xchg
inc
test
adc
dec
jae
ja
mov
pop
or
in
pop
mov
mov
mov
outsl
clc
iret
mov
call
int
sbb
je
pop
adcb
andb
add
stos
data16
pushf
dec
and
stc
enter
push
lods
cli
cmpsl
or
lret
into
test
add
popf
sbb
gs
push
cmp
lock
in
push
dec
imul
mov
mov
dec
fs
ja
sub
sbb
pop
cli
loop
lods
jg
leave
jl
sbb
rcrb
mov
shll
idiv
pop
les
mov
loopne
je
scas
dec
test
xor
cmpsb
dec
enter
xchg
pop
in
jb
mov
test
xchg
enter
push
or
aam
xchg
es
and
mov
js
xchg
jae
mov
dec
loopne
fidivl
xor
mov
cmp
push
inc
sbb
lret
xchg
pop
or
inc
xchg
inc
hlt
pop
xor
ret
adc
xchg
cwtl
xor
sbbl
lock
xchg
xchg
les
sti
push
push
rclb
lret
call
jl
iret
push
les
fcoms
popf
adc
test
inc
pop
xchg
adc
sbb
cmp
mov
jbe
push
mov
xor
jecxz
cmpsl
fstl
adc
or
jo
cmpsl
test
xchg
leave
in
andl
and
or
jmp
inc
stc
jge
mov
mov
mov
cli
mov
or
inc
mov
xchg
pop
xabort
pop
sbb
clc
shlb
cmp
orb
dec
fwait
dec
dec
mov
imul
or
das
jge
cltd
sub
sbb
inc
cmp
or
fstl
addl
imul
insb
add
mov
sbb
iret
cmpsl
ret
inc
mov
pmuludq
lds
scas
inc
and
fstpl
test
mov
fidivl
fldt
mov
test
test
nop
frstor
mov
rcrb
xor
adc
lds
inc
pushf
and
sbb
jmp
xor
adc
dec
pushf
inc
sarb
andl
inc
cmp
xchg
xchg
lahf
inc
mov
mov
dec
and
ret
push
leave
adc
popf
add
mov
dec
aaa
shr
jne
cltd
outsl
push
or
frstor
ret
xchg
enter
pop
inc
ds
inc
btr
xchg
jmp
adc
repz
or
aaa
ljmp
imull
outsl
clc
into
mov
jecxz
movsl
mov
jmp
lock
mov
cmpb
lret
stc
pop
pushf
inc
stos
xchg
adc
pop
out
test
leave
push
sbb
test
ja
pusha
jmp
pop
in
dec
sub
sbb
jno
les
jae
xchg
stos
movsl
adc
lds
adc
pop
xchg
ja
xor
xor
sbb
fcoml
repz
push
pop
sbb
lds
inc
aam
clc
or
adc
inc
test
rcll
push
fbld
jae
push
call
jl
fisubs
pop
testb
call
cmp
std
stos
mov
fisubrs
fnsave
push
jp
sub
daa
cmc
adc
sbb
xor
sub
sbbl
imul
add
sti
loopne
divl
mov
jmp
jo
cmp
fldl
or
test
insb
rcrb
mov
movsb
fisubl
stos
addr16
cmp
stc
inc
pop
cld
test
testl
push
mov
add
or
lret
or
pop
push
sub
xor
add
cmp
mov
push
sbb
scas
aaa
jns
sub
xchg
fmull
and
stos
or
pop
es
or
sarb
fdivs
aad
insb
mov
fisubrs
mov
and
xchg
cmp
into
sub
fdivrs
cli
ss
sub
pop
bound
cltd
popa
bound
insl
lock
or
hlt
cmp
test
xchg
cltd
xor
es
movsb
fs
pop
dec
or
xor
enter
repnz
mov
ret
adc
pop
sbb
xchg
jmp
enter
mov
xchg
rcll
add
cs
fwait
push
cmp
out
dec
faddl
adc
mov
xor
mov
mov
cmpsl
mov
pop
loopne
mov
lock
enter
mov
test
sbb
mov
or
call
add
mov
xor
or
push
sbb
sbb
js
popf
push
push
xchg
mov
sarb
pop
push
fildl
add
cs
jno
cltd
xor
or
xchg
aam
in
sub
pop
mov
pusha
out
cmp
out
cltd
out
insb
mov
jg
ljmp
sbb
out
mov
int
arpl
dec
sbbb
push
xchg
int3
lcall
mov
imul
inc
cmpsb
icebp
clc
cmp
lock
cmp
pop
and
mov
lock
lock
adc
mov
push
cwtl
push
hlt
sub
test
sbb
push
sub
dec
dec
sbb
mov
fcmovnu
ljmp
imull
pusha
les
fcoms
sbb
mov
fisubrl
dec
test
arpl
mov
cmp
or
jecxz
scas
cmpsb
enter
pusha
jle
das
pop
mov
sbb
enter
mov
pop
jmp
pop
adc
cmp
or
iret
jecxz
and
push
mov
not
sbb
enter
cmpsl
inc
sahf
in
cmp
sbb
push
cltd
mov
lret
adc
aam
inc
lret
jecxz
leave
sbb
dec
sbb
sub
mov
add
test
pop
adcl
stc
pop
adc
lods
jnp
into
add
mov
in
popf
fildll
xchg
or
mov
lret
sbb
adc
sub
sbb
cmc
test
inc
lahf
shl
and
mov
scas
ljmp
fisubrs
mov
test
xor
sub
push
test
xchg
stos
fistpll
inc
cs
subl
mov
mov
adc
shrb
subl
lret
cwtl
inc
shl
nop
or
push
mov
xchg
mov
aam
mov
add
rcrl
cmp
enter
fidivrl
xlat
sbb
in
fdivrl
test
int3
push
cltd
jmp
and
mov
call
sbb
rcr
fcmovne
fmulp
rcll
sub
inc
inc
stos
rorl
sbb
popf
je
cwtl
out
sub
push
push
adc
pop
ds
and
movsl
popf
aaa
lods
sub
adc
mov
sub
xor
hlt
movsl
fcompl
inc
sub
ret
bound
pop
stos
push
test
stos
stc
pop
loop
or
cmp
or
bound
sbbb
aam
inc
push
ficoml
stos
rsm
std
lock
fistpl
xchg
fwait
add
scas
or
jg
adc
jg
cltd
stc
xor
sbb
sbb
inc
pop
sti
cmp
push
cmp
mov
push
adc
and
mov
add
cmc
jmp
jne
scas
aaa
cmpsl
cltd
aaa
dec
jl
and
mov
loope
sbb
enter
hlt
mov
xchg
pop
xchg
call
dec
into
cmpb
push
pop
iret
adc
xor
add
mov
lahf
cmp
sbb
lahf
ljmp
popf
jae
notb
cli
sub
imul
inc
lahf
lcall
imul
pop
loopne
mov
mov
sbb
clc
sbbl
insl
test
mov
test
stos
mov
cwtl
mov
ret
jnp
jle
or
cmp
xchg
and
bnd
lods
dec
bswap
leave
loop
sarb
iret
and
inc
jecxz
xchg
fdivs
les
pop
jecxz
xchg
mov
js
sbb
jmp
cmpsl
ret
inc
fwait
jmp
pushfw
loop
shlb
cmp
mov
dec
and
push
out
mov
jne
sub
add
mov
add
pop
jns
mov
loopne
mov
repnz
sti
mov
jecxz
xchg
ret
mov
push
lock
sahf
xchg
in
lahf
push
pushf
lret
pop
adc
lea
sbb
les
shrl
add
addl
jecxz
ja
mov
sbb
inc
sbb
scas
and
dec
cmp
dec
les
cmp
test
gs
push
pushf
mov
fucomi
jge
fstps
push
sbb
mov
in
sbb
add
fsts
dec
mov
dec
and
xlat
xchg
movsl
ret
subb
mov
stos
cmpsl
aas
leave
dec
add
mov
xorl
xchg
rcll
addb
dec
sbb
fdivs
dec
and
sub
xor
cmpsb
push
mov
movl
mov
or
cmp
movsl
shlb
repz
xor
pop
add
push
aas
pop
dec
mov
pop
pop
push
ljmp
fs
inc
sbb
scas
insb
mov
or
push
dec
sub
mov
lods
jmp
xor
jle
mov
in
add
jg
push
dec
nop
repz
cmc
idivb
adc
test
mov
test
mov
nop
rorb
ja
xor
in
mov
mov
fisttps
js
push
mov
xchg
mov
cmc
jl
ljmp
ret
stos
push
mov
out
push
jnp
xlat
sbb
dec
aam
jo
sahf
stc
cmp
lret
jl
mov
mov
xchg
rorb
add
hlt
jl
fwait
xchg
in
fstp
gs
sub
mov
xorl
test
cmp
dec
mov
sti
fimuls
add
sbb
mov
out
pop
and
addb
push
outsb
das
and
js
pop
adc
lock
arpl
fwait
mov
stos
add
cli
pop
lods
push
sti
push
push
mov
inc
sbb
test
mov
test
stc
dec
sbb
dec
pushl
push
jl
leave
shrb
inc
sbb
or
outsb
jae
mov
add
lds
movb
sub
dec
fsubl
dec
aas
lahf
scas
int
stos
outsb
js
cld
xor
fs
dec
xchg
imul
inc
xchg
push
stos
lret
enter
xchg
icebp
sti
pop
mov
xchg
inc
mov
xlat
insb
jne
and
and
sbb
xchg
sbb
mov
ret
movsl
mov
leave
jecxz
or
cs
and
mov
dec
sub
inc
mov
jecxz
shr
xor
lret
mov
outsl
clc
cmp
xor
sbb
xchg
enter
or
pop
and
orb
sub
jo
jns
dec
sbbb
mov
cli
dec
pop
es
test
enter
jne
dec
dec
jae
lret
sar
cmp
sar
loope
and
sub
pop
ret
or
push
scas
hlt
sbb
push
shlb
fsts
dec
sub
ret
ret
into
xor
or
lcall
or
jl
rclb
add
adc
shl
push
xchg
out
xchg
out
cwtl
test
ret
mov
insb
rcrb
mov
movsl
xchg
jns
lea
aad
or
dec
enter
insb
aaa
dec
fbstp
iret
adc
cmp
daa
popa
mov
cmc
pop
push
mov
xchg
cmpsb
repz
shlb
cmp
mov
push
add
lar
xor
mov
mov
roll
sti
xor
pushf
or
inc
stos
push
and
mov
imul
fbld
push
mov
jae
and
mov
out
lret
popf
pop
fcoms
test
and
fiaddl
dec
dec
das
test
lea
push
xchg
mov
mov
inc
sbb
push
ret
and
xor
mov
or
idiv
and
hlt
imul
decl
mov
xchg
mov
movsl
loope
pop
mov
sbb
pop
cmc
imul
push
aaa
popf
bound
movsl
call
cmp
dec
leave
adc
in
jl
dec
sbb
fists
xor
or
push
mov
orl
stos
shrb
inc
mov
fnstsw
add
push
sbb
mov
call
int
jle
test
mov
shll
mov
aam
xor
arpl
mov
pop
data16
xor
divl
mov
dec
fimuls
mov
jno
mov
ja
cmpsb
scas
lret
add
sub
rorl
imul
and
lds
test
out
pop
repz
cmp
inc
push
and
rcr
xchg
mov
jmp
add
dec
jne
into
push
mov
inc
push
mov
cmpsl
jecxz
test
dec
or
enter
stc
and
rcrl
movsl
fdiv
dec
push
and
fldenv
enter
dec
aas
xor
add
mov
ret
clc
ja
ret
push
jbe
roll
push
mov
mov
outsb
sub
jmp
cmp
and
mov
test
repnz
js
mov
sbb
jnp
fcmovu
pop
popf
xlat
sub
pop
ss
mov
gs
dec
test
popa
sub
sub
fildll
mov
lock
aaa
mov
inc
cmpsl
shrl
mov
inc
cmp
ret
dec
xchg
lcall
jne
dec
push
jo
push
or
jmp
push
fdivl
mov
xor
xchg
xor
add
cwtl
movsb
adc
pop
fadd
mov
fdivs
mov
add
fstl
mov
loopne
inc
and
fistpll
xchg
mov
bound
out
call
lea
dec
push
jo
mov
cmc
clc
pop
mov
xchg
roll
movsl
sub
ret
arpl
in
push
sti
loopne
jl
insb
push
enter
insb
mov
mov
jecxz
rclb
call
cs
dec
mov
and
push
stos
push
rolb
mov
clc
scas
popf
inc
imul
mov
mov
js
fldl
sbb
ret
vunpckhpd
shlb
imull
pop
arpl
sbb
out
add
push
inc
sbb
repnz
out
fcoms
mov
sbb
ret
xchg
mov
add
leave
adcl
scas
dec
mov
scas
insb
ret
clc
adcb
cli
jae
push
insl
out
or
test
xlat
pop
ds
lret
mov
cltd
sub
adc
push
jge
movsb
lea
push
push
jecxz
xchg
mov
sub
jp
lcall
mov
mov
jno
out
jmp
mov
in
jmp
lock
lods
imull
lret
movsl
mov
mov
cmp
cmp
test
add
add
addb
adcb
mov
ret
xor
fistl
pop
sub
pop
stos
enter
jp
push
mov
pop
mov
cmpsb
inc
imul
cmp
cmp
out
js
sarb
cmpsl
xlat
in
test
mov
mov
in
push
les
rcll
mov
fadd
inc
pop
stos
sub
rcr
and
cmpsl
ret
lds
xlat
xchg
sbb
popf
and
add
push
adc
rcrb
mov
mov
popf
popf
push
adc
jecxz
rorl
test
adc
imul
jmp
int
sbb
out
and
sub
lock
cli
add
rcrl
nop
out
mov
push
mov
mov
dec
pushf
in
sbb
vandnps
jb
sub
stos
dec
push
inc
add
mov
stc
dec
sbb
rol
xchg
cmpsl
xchg
test
inc
retw
rorl
xor
lret
fstl
test
pop
arpl
mov
xor
and
xor
pop
lret
jo
in
lret
addr16
mov
fsts
xchg
shll
insb
xchg
push
daa
or
mov
mov
daa
int3
fidivrl
jp
mov
fcmovne
pop
jb
fwait
in
cld
adc
popa
fdivrs
ss
inc
inc
mov
pop
push
cmp
insb
cwtl
cmp
fcmovbe
negb
mov
movsb
sub
or
arpl
fisubl
movsl
loope
jne
sub
lock
hlt
mov
lock
out
ja
inc
sbb
add
or
insl
movsl
ret
xchg
int3
addr16
mov
xchg
dec
cmpl
mov
imul
push
dec
push
jno
mov
dec
push
inc
push
pushf
cmp
sub
cld
mov
jg
push
div
mov
add
dec
add
mov
pop
cld
ret
add
jnp
scas
pushl
leave
repnz
or
loop
inc
fdivrl
shl
lds
inc
sarb
inc
repz
imul
mov
test
shrb
mov
lret
rcr
call
pop
mov
shlb
enter
fsubrl
sbb
mov
pop
xchg
or
subb
push
clc
push
sub
xor
adc
sub
mov
or
inc
inc
pop
out
enter
dec
nop
lret
add
adc
sbb
add
xor
cmpsl
cmp
cmpb
lea
cli
sub
test
out
cmp
mov
mov
mov
outsl
mov
repz
idivb
gs
je
and
aad
jge
pop
mov
mov
jp
ja
cmp
jbe
lods
jle
shll
ljmp
fwait
leave
loop
arpl
add
scas
out
adc
adcl
out
push
or
int3
out
ja
and
in
shl
jb
xor
cmpsl
add
test
push
sbbb
dec
dec
mov
jne
push
xor
cs
cmpl
sub
negl
dec
add
push
into
add
into
fwait
cmp
clc
sti
popf
push
inc
cmp
hlt
mov
mov
sahf
push
std
mov
push
andl
xor
pop
ljmp
lods
xchg
push
shrl
dec
cmp
scas
mov
negl
jns
pop
lods
mov
fidivl
mov
jae
test
cmp
ret
add
daa
sub
inc
sub
dec
movsl
xchg
mov
pop
inc
inc
cld
sub
sbb
sub
lahf
ficoms
ror
adc
xorb
outsl
cld
pop
clc
jle
add
push
inc
pop
sti
push
dec
and
test
dec
mov
stos
add
cmp
mov
push
pop
xchg
js
dec
lea
cmpsl
lock
mov
mov
push
out
fmul
mov
push
sub
je
and
mov
jne
pop
adc
pop
jnp
dec
sbbb
push
mov
dec
loopne
out
dec
mov
ljmp
ds
cmp
fcoms
inc
or
add
add
popa
sbb
insl
mov
and
imul
sub
std
enter
push
ficoms
mov
xchg
clc
stos
push
or
mov
sahf
lods
mov
dec
push
lcall
loope
cmp
js
add
stos
mov
movsb
into
jo
push
aam
ret
inc
mov
and
inc
std
xchg
fwait
add
push
pop
xchg
clc
xor
mov
mov
hlt
imul
jg
adc
or
pop
fwait
imull
inc
inc
mov
stos
xor
test
jge
xabort
mov
call
hlt
in
adc
inc
test
sbb
idivl
lods
je
adc
sarb
mov
int
pop
adc
pop
adc
sbb
pop
int
lock
mov
xor
lret
pop
and
inc
ret
cld
lock
dec
repnz
push
jbe
in
push
hlt
test
mov
xor
movsl
dec
pop
movl
lds
jnp
ret
sub
jns
iret
pop
mov
cli
xor
lods
test
mov
pop
jns
or
mov
mov
sti
ret
add
inc
fmul
pop
clc
test
xchg
jbe
lret
adc
andb
cli
les
fwait
ja
sbb
mov
xor
xchg
mull
mov
rorb
fnstenv
jbe
out
and
shrb
pop
aam
ret
lock
into
sbb
shll
xchg
sar
les
mov
mov
jb
xor
in
jmp
adc
pop
sub
pop
and
insb
loope
jp
mov
push
pop
mov
loopne
pop
push
rclb
and
inc
sbb
sahf
repnz
gs
rcrl
sub
dec
pop
movb
inc
imul
test
shl
mov
jmp
arpl
lahf
sbb
and
xor
imull
test
sbb
dec
enter
fcompl
push
gs
xor
and
lds
push
rorl
and
add
mov
jno
inc
idivb
xchg
inc
xor
lds
xor
divl
out
test
rclb
shrb
imul
pop
jge
out
adc
inc
and
loopne
cmp
mov
mov
je
xor
pop
mov
fwait
mov
test
jae
enter
lret
lret
cltd
fldcw
and
out
daa
std
pop
xor
stos
repnz
fstl
add
xchg
or
adc
sub
nop
mov
shl
enter
je
rcll
mov
les
jnp
push
add
stos
mov
in
stos
insl
pushf
mov
imul
mov
xor
push
in
les
fcompl
stos
inc
sbb
ret
mov
test
repz
push
adc
lods
pop
cs
or
addr16
fadd
mov
lahf
ds
movsl
jecxz
sti
fstpl
jg
sbb
jge
jg
mov
test
pop
pop
loopne
int
push
fidivrs
stos
xlat
mov
sbb
jge
dec
lcall
out
mov
hlt
cmp
movl
dec
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
ret
sub
jp
xor
cmpsl
mov
push
sub
mov
mov
dec
xchg
mov
jle
mov
rorl
or
inc
sbb
adc
scas
jmp
fisubl
push
cmp
inc
lcall
pop
dec
lods
shrb
lret
jno
aad
lds
or
popf
fists
cmp
jb
inc
shlb
into
and
add
fldcw
cmp
sub
scas
pop
dec
adc
mov
pop
test
push
das
popf
adc
pop
fdivl
cmp
in
lahf
add
shr
pushf
addr16
adc
push
sub
push
or
add
loope
jg
cmp
mov
movsb
jae
adc
call
pop
lea
pop
mov
loope
pop
xchg
mov
mull
es
pop
sub
arpl
sbb
adc
add
jg
and
popf
in
dec
dec
pushf
dec
sub
jmp
push
test
push
push
ss
js
mov
jp
fstps
stc
aaa
shll
dec
je
fnsave
inc
push
sbb
lds
mov
and
or
push
cmpsl
and
and
iret
nop
shrb
lods
jne
es
sbb
iret
js
dec
loope
mov
inc
mov
sbb
inc
sbb
rclb
adc
mov
inc
out
pop
mov
xchg
push
mov
ret
cmpsb
mov
fcmovbe
or
cmp
clc
enter
push
xor
test
push
pop
jp
push
mov
fsubr
push
adc
inc
pop
dec
fbstp
sub
adc
std
lea
cmp
aas
push
mov
in
xchg
inc
rcrl
pushf
sti
repz
add
sbbl
mov
rcrb
sbb
rcrb
cmp
mov
mov
sub
xchg
sbb
not
imull
je
lret
repz
cmp
xchg
mov
sbb
ja
pushf
cmc
add
xchg
push
push
inc
mov
mov
xchg
mov
loope
mov
aas
ret
jno
icebp
lcall
xor
loope
lea
rcll
sbb
mov
cmp
orb
pop
std
adc
jecxz
clc
mov
loop
or
test
lret
sbb
xor
jle
sti
subl
insb
inc
jp,pt
pop
dec
mov
daa
adc
mov
add
fscale
jo
test
popa
inc
inc
dec
pop
test
jecxz
ja
sbb
in
xor
add
mov
hlt
ret
pop
add
stos
or
pop
dec
dec
sbb
test
ja
inc
mov
dec
pushf
pop
mov
je
or
mov
ljmp
push
ret
mov
xor
mov
arpl
cmp
js
sti
rcll
lret
or
dec
cmp
jns
pop
cmc
inc
pop
xchg
jbe
sub
and
xchg
add
fcompl
sti
mov
push
mov
mov
pop
adc
sahf
add
mov
cmp
fsub
xchg
pusha
mov
xchg
dec
movsb
inc
sbb
pop
sbb
movb
bound
shlb
dec
xorl
adc
ret
xlat
test
push
sub
mov
xor
lock
and
imul
jns
inc
inc
dec
lahf
push
lock
mov
sbb
jne
in
mov
mov
pushf
mov
scas
jp
nop
jg
sbb
mov
in
push
sub
cmp
and
test
inc
mov
pop
dec
mov
or
arpl
orl
ret
imul
daa
sbb
lcall
mov
sbb
add
xor
movsb
std
cmp
cltd
popf
adc
cmp
sub
ss
out
lods
das
popa
or
mov
sub
mov
add
insl
dec
add
jnp
sub
jg
stc
mov
xor
jp
sbb
xchg
jmp
mov
mov
xchg
pop
dec
pop
fs
xchg
jle
loope
and
es
fcmovbe
insb
aaa
mov
add
dec
cltd
push
es
cmpb
dec
mov
cltd
mov
out
mov
stos
in
fistl
inc
mov
mov
adc
call
in
sti
rcrl
add
loop
imul
lods
jno
stc
xor
inc
rcrb
sbb
aad
mov
clc
sub
mov
pop
dec
push
test
in
jno
jge
push
pop
in
inc
cmp
stos
rep
pop
or
lcall
xchg
outsb
shlb
mov
xor
jno
enter
or
xchg
or
sbb
out
fwait
test
repz
push
fsts
aam
mov
rorb
pop
aaa
movsb
sbb
dec
xorb
ret
push
in
icebp
mov
mov
sub
in
xor
push
cmpsb
push
sbb
imul
cmpsl
cmc
fsubrs
popf
fwait
push
sbb
or
pop
movsl
push
jmp
sti
xchg
push
loopne
adc
jp
sub
jmp
int
jle
test
jns
lahf
orb
test
and
xchg
dec
sbbb
sbb
jecxz
test
jmp
imul
fstpt
jnp
jns
mov
mov
sub
xchg
test
fbld
xchg
test
jb
les
scas
pop
or
ret
push
mov
sub
inc
popa
jo
jmp
shrb
fdivrl
jne
xchg
movw
pushf
popf
in
mov
loop
das
cmpsl
xlat
mov
gs
addb
sbb
daa
sub
pop
adc
ljmp
stc
ss
mov
pop
cmpsl
cmp
or
jbe
ret
cltd
enter
repz
enter
add
hlt
jl
adc
scas
iret
lods
imul
cmpb
mov
lods
test
mov
inc
pop
mov
out
cmp
insl
mov
fdivrl
jg
pop
loop
cli
sub
dec
jo
mov
xor
inc
sahf
xor
mov
fisubrs
stos
mov
pop
add
imul
lret
and
dec
mov
into
arpl
pushf
shrb
mov
jge
mov
jg
cmpsb
push
push
sahf
cld
mov
scas
mov
in
js
add
xchg
cmp
mov
popa
lods
jo
and
sbb
jle
mov
jge
mov
rcrl
movsb
adcl
enter
lock
addb
sub
pop
push
lods
xlat
inc
cmpsl
mov
sbb
pop
sbb
fldpi
inc
lret
movsl
orl
xchg
repnz
aas
adc
das
fdivs
in
arpl
idivl
fld1
repz
and
inc
mov
mov
idivl
in
sbb
mov
hlt
cwtl
push
mov
adc
add
mov
in
jl
cltd
lret
movsl
mov
sbb
mov
cmp
scas
cmp
js
mov
popf
lret
popa
lock
sbb
inc
push
sbb
cmp
imul
dec
mov
lahf
sahf
inc
sub
fidivs
jg
dec
add
or
pop
pop
es
mov
fnstsw
mov
ja
sbb
pop
pop
jmp
je
cmp
xchg
jae
cli
jno
add
lahf
inc
push
or
shll
sbb
mov
xchg
imulb
xchg
enter
jecxz
hlt
daa
aas
gs
mov
dec
int3
mov
adc
sub
push
gs
inc
xchg
xchg
adc
outsl
clc
mov
xor
mov
mov
push
ja
xchg
push
sub
call
xor
pop
inc
add
nop
insl
mov
lods
push
cli
xchg
mov
sbb
out
lret
fucomp
js
loope
pop
adc
pushf
dec
arpl
and
movsl
inc
dec
and
ja
push
ret
out
and
xchg
sbb
push
les
pop
lahf
stc
rorb
arpl
add
fildl
adc
pusha
loop
or
imul
mov
lahf
adc
cltd
fidivrs
lock
cwtl
push
and
xchg
je
inc
pop
xchg
push
js
xchg
pusha
cmpsb
sbb
stos
mov
mov
mov
into
fs
test
test
dec
inc
mov
hlt
test
inc
imul
sahf
int
repz
dec
call
insl
mov
add
fisubs
clc
sti
pop
pop
xchg
mov
in
popf
lahf
jmp
pop
cmpsb
call
xchg
int3
loopw
aad
xchg
dec
and
add
clc
out
mov
pop
push
test
mov
xor
dec
popf
arpl
sub
push
popa
inc
sub
xor
js
cs
push
shlb
aad
in
cmp
jp
dec
data16
add
lahf
ficomps
jns
or
add
lods
mov
mov
jle
inc
mov
mov
ficompl
call
mov
xlat
push
mov
push
sub
ja
jb
lret
stos
call
pop
mov
and
sub
push
xchg
mov
int
sub
mov
mov
das
add
lcall
push
add
cmp
pop
sti
clc
sti
popf
inc
ret
stos
push
push
xchg
xchg
hlt
add
scas
mov
push
mov
mov
dec
and
mov
dec
sbb
and
imul
jb
leave
mov
and
sbb
push
loopne
xor
mov
xchg
negl
fstps
mov
and
popa
and
imul
sti
repnz
jne
imul
cli
jmp
sbb
arpl
dec
mov
cmpsb
lahf
fnstsw
xchg
or
bound
xor
mov
cmpsl
rcrb
mov
mov
rorl
pusha
test
add
cmp
mov
call
sbb
sahf
jne
jge
jmp
and
cld
mov
loopne
xchg
imulb
popa
rcr
lds
loop
pusha
jbe
arpl
imul
mov
push
loopne
out
fcmovbe
mov
pop
cmp
daa
inc
mov
add
push
xlat
jne
add
addr16
gs
cmp
movsb
fbstp
push
mov
adc
sub
push
push
push
test
enter
jne
sbb
mov
sahf
or
neg
into
add
push
pushf
loop
xchg
scas
aam
daa
sbb
mov
in
and
scas
or
repnz
stos
outsl
and
inc
fsub
decl
lods
and
push
cmp
mov
dec
fs
pushl
scas
insb
push
dec
loop
xchg
push
inc
adcl
push
lahf
imul
cmp
xchg
mov
sub
push
and
call
add
xor
add
pop
out
dec
jb
mov
adc
mulb
xor
popl
rcrb
mov
pop
stos
aam
icebp
and
mov
divl
icebp
lea
test
in
lret
sbb
stos
xchg
inc
cmp
add
mov
push
sarb
push
nop
mov
xchg
sub
das
ret
das
stos
push
xchg
cmpsl
or
arpl
fbstp
out
mov
or
arpl
add
mov
test
loopne
xor
pop
rcl
xchg
mov
xlat
jno
inc
lcall
movsb
std
sub
cltd
fmuls
xchg
data16
cmp
ss
dec
jle
push
mov
push
inc
mov
out
fsubrs
dec
mov
push
mov
jp
or
fildll
jle
cmpsb
fwait
mov
fpatan
clc
rcrb
popf
and
adc
jp
pop
mov
out
mov
cltd
jns
dec
int
mov
inc
push
dec
xchg
sbb
mov
mov
fbstp
dec
push
jae
clc
cmp
xor
sbb
xchg
enter
add
jecxz
xlat
cmp
dec
cwtl
stc
ljmp
pushf
jmp
lds
sub
test
cli
and
and
cmp
xchg
sbb
imul
adcb
dec
bound
xchg
movsl
add
jge
enter
xchg
mov
sub
rcl
lcall
xchg
out
mov
mov
add
cld
iret
cmp
andl
movsb
sbbl
dec
enter
push
mov
push
jmp
add
sub
imul
dec
ror
jmp
cmp
aaa
jno
cltd
push
push
add
adc
test
lock
mov
insl
mov
test
lahf
lahf
je
adc
mov
pop
add
ret
nop
jmp
sahf
dec
lahf
lret
xor
fwait
jecxz
enter
or
mov
dec
test
mov
addr16
scas
inc
sbb
test
lods
clc
cmpsl
cmp
lret
lahf
cmp
imul
les
pushf
loopne
xor
sbb
mov
mov
shrl
push
cmp
mov
or
call
loopne
aaa
jmp
xchg
dec
data16
sbb
dec
scas
or
hlt
fldl
dec
fstpt
xchg
test
jnp
inc
mov
cwtl
add
or
push
out
fistpl
mov
and
xchg
mov
push
sbb
cmp
adcb
aam
jb
fwait
outsl
or
or
movsb
shlb
xchg
rcll
add
pop
jae
enter
sbb
and
out
cmc
xor
pop
cmp
popf
into
inc
mov
adc
popf
je
lock
sub
ja
cmp
jno
cli
stos
lahf
in
add
ficompl
hlt
testb
mov
dec
sbb
mov
iret
inc
sbb
nop
jg
sbb
mov
pushf
dec
lret
xchg
and
mov
and
sahf
mov
lcall
dec
dec
cmpsb
mov
fisttpll
pusha
fcom
mov
ja
cmpsb
xchg
jne
adc
sub
mov
mov
pop
push
shr
rcrl
dec
nop
jnp
xor
cmp
xor
xlat
pushf
xor
cmp
repz
pop
add
mov
xor
mov
sbb
movsl
ret
fcom
push
mov
push
insl
loope
pop
rcl
call
arpl
popf
fwait
mov
pop
sub
push
push
sub
and
loopne
mov
cs
jne
inc
mov
mov
add
xchg
repz
push
addl
or
cmp
clc
ljmp
repnz
jo,pn
dec
ret
lock
add
into
lds
push
sbbb
sub
mov
rcrb
adc
test
push
loopne
mov
sbb
fcomip
push
mov
fs
movsl
xor
imul
je
fnstenv
in
cmp
popl
scas
test
sbb
push
dec
push
mov
aam
mov
lret
out
push
mov
xchg
mov
push
test
mov
aad
ret
jge
dec
ljmp
and
shl
stc
arpl
jecxz
arpl
sub
push
add
imul
sub
xchg
out
pop
cli
test
xchg
inc
and
cmp
fucomip
popa
jge
ja
sti
repz
xor
aaa
test
dec
xorb
cmp
mov
int
imul
jle
pop
pop
test
dec
stos
shll
xchg
inc
shrd
cmp
and
ds
lock
mov
xor
sbb
imul
ret
sbb
adc
sub
pop
lahf
outsl
push
adc
repnz
inc
fmulp
sbb
fidivrs
lods
dec
mov
lcall
adc
pusha
call
mov
lock
lcall
out
cld
sub
adc
ret
mov
push
adc
dec
pushf
inc
sarb
andl
orl
cmp
aam
mov
jnp
inc
push
mov
or
add
sbb
inc
mov
pop
xchg
pop
stos
out
cmp
lea
xchg
mov
push
mov
gs
stos
test
and
sub
lods
imul
mov
test
dec
mov
add
jecxz
mov
loopne
mov
push
cmc
dec
in
fists
add
lret
mov
jo
stc
mov
jb
nop
dec
add
sbb
insl
lcall
jmp
mov
sbbb
jne
clc
stos
push
mov
push
add
pop
scas
movl
popf
shrl
in
add
imul
add
stos
insl
mov
leave
xchg
fcmove
stos
jne
repnz
lods
inc
pop
xor
xor
xchg
pusha
mov
pop
cli
loop
fcmovnb
das
cmp
jl
aas
cmpsl
xchg
pusha
fisttps
inc
inc
pop
jmp
out
push
jmp
sbb
mov
xlat
adc
push
lods
xlat
insb
jae
cli
xor
loopne
in
bswap
test
xchg
aaa
leave
push
outsb
cmp
jne
jo
dec
aam
jne
arpl
add
je
mov
imul
inc
rcll
xchg
js
dec
jae
cmp
ss
and
xchg
addr16
jae
iret
ret
clc
sti
pop
mov
xlat
outsb
cmc
ret
xchg
pop
add
jl
inc
sbb
xchg
test
ret
test
push
lods
pushf
mov
xchg
fists
push
insb
xlat
enter
xchg
dec
movsb
xchg
cmp
fcmovnu
ljmp
jnp
pushl
pop
daa
sbb
dec
mov
mov
adc
arpl
stos
jge
imul
push
inc
fdivl
xor
dec
pop
push
cmp
data16
subl
mov
add
dec
mov
cltd
fidivrs
xor
xchg
icebp
data16
subb
loopne
dec
fwait
xchg
mov
mov
dec
jle
jae
int3
pop
mov
jecxz
mov
daa
xor
inc
loop
mov
sub
pop
jne
das
sub
shr
repz
dec
pop
mov
nop
insb
sub
ja
cmp
dec
test
repz
push
mov
cmp
mov
mov
sbb
data16
mov
adc
cwtl
or
nop
push
lcall
push
test
scas
sbb
aad
lret
fucomp
mov
repz
sbb
pop
sub
or
int3
sub
xor
stos
push
scas
push
stos
vshufps
pop
arpl
pop
dec
add
and
pop
pusha
jno
add
cwtl
lahf
dec
fucomi
and
mov
das
mov
adc
pop
js
or
push
add
aam
adc
cmp
push
mov
sub
mov
sti
rclb
test
ss
push
and
jl
sbb
adc
push
cs
dec
sub
dec
popa
mov
or
push
scas
shrl
mov
cmp
mov
jp
cmp
scas
mov
fimuls
rolb
cltd
je
hlt
scas
inc
adc
int3
jcxz
sbb
jmp
lds
shrl
stos
lock
mov
out
lret
shll
mov
jl
ret
add
addb
sub
fisubl
inc
xor
rol
cltd
fcoml
jb
test
inc
cmpsl
push
pop
jno
and
fbstp
inc
jbe
je
cli
push
inc
sarb
mov
sub
jns
fwait
xor
mov
lret
xor
inc
adc
mov
cli
mov
out
cmp
inc
jo
pop
mov
fs
add
inc
adc
rolb
mov
xchg
jmp
sbb
cmp
movsl
sti
sarl
pop
jns
clc
stos
pop
xchg
leave
clc
mov
mov
adc
daa
mov
hlt
mov
adc
or
cwtl
mov
fsubrl
xchg
push
lock
lds
pop
imul
mov
lahf
jne
fmul
cmp
xchg
fstpt
ja
fidivs
cmp
imul
sbb
stc
daa
or
xor
stos
inc
sub
ljmp
cmp
insl
fidivs
jp
sub
and
repnz
inc
or
in
inc
out
sub
pop
sub
and
aas
gs
push
push
sti
sub
mov
jns
call
or
sub
mov
insl
out
fwait
cmp
call
cmpsb
inc
pop
inc
jno
adcl
pop
mov
inc
sbb
push
loope
add
idivl
push
dec
xchg
cltd
sub
das
or
das
out
in
movsl
divb
fstl
roll
xorb
mov
add
mov
xor
aas
ret
lahf
stc
inc
sbb
xor
mov
xor
lahf
leave
sbb
outsl
push
mov
jmp
push
iret
cli
fs
mov
sbb
rorl
gs
sti
pop
roll
xchg
add
stos
inc
sub
or
or
sbb
js
int3
xor
sub
cld
jae
mov
push
cwtl
les
and
jb
add
jo
mov
pop
dec
sahf
addb
mov
push
mov
jnp
push
mov
pop
sti
in
push
dec
test
cmp
std
lret
mov
mov
xchg
enter
hlt
mov
test
cmpb
fwait
xor
mov
pop
scas
scas
shrl
mov
imul
aas
aas
sti
mov
das
jnp
xchg
jge
and
mov
adc
movsl
inc
mov
pop
or
lea
lds
mov
fisubrl
jne
lahf
cmp
repz
sar
cmp
add
dec
out
stc
adc
cmp
lret
add
inc
mov
mov
push
lock
mov
in
and
sub
push
pushf
sub
mov
push
add
mov
nop
addl
xor
rolb
mov
adc
data16
push
fdivs
push
mov
aad
frstor
xor
je
int3
xlat
push
pop
out
xchg
and
sub
or
push
adc
inc
push
lret
xchg
pop
int
pop
sbbb
mov
ss
push
cmc
stc
add
ss
jecxz
fdivrs
repz
xchg
frstpm(287
dec
js
cltd
push
sbb
dec
roll
inc
pop
fimuls
insl
cltd
ret
dec
test
jns
test
mov
pop
add
mov
jge
loop
pop
cmp
xchg
fldt
and
xchg
test
jmp
cwtl
daa
sbb
fistl
rorl
mov
pop
inc
mov
fs
or
fstl
jns
mov
sub
inc
jmp
arpl
or
andl
xchg
es
cmpsb
js
inc
fsts
xchg
sub
bound
imul
cmp
inc
and
daa
sti
xor
jb
lahf
outsl
push
add
cmp
pop
cli
addl
leave
sbb
mov
xchg
xor
sbb
push
daa
int
lock
das
or
adc
adc
pop
push
into
lea
imul
gs
insb
fdivrl
jg
mov
cltd
cwtl
jmp
sbb
out
sbb
pop
leave
sub
cmp
and
daa
lods
jb
std
push
xchg
test
into
test
and
dec
pop
jp
sub
test
mov
inc
pop
cmp
ficoml
loope
stos
std
mov
in
std
or
mov
inc
aaa
scas
sub
jp
sub
js
cld
hlt
adc
adc
sub
add
daa
leave
bound
dec
repnz
sbb
xlat
sbb
mov
ret
inc
jmp
or
push
cmpsb
sbb
mov
cwtl
and
dec
inc
jnp
mov
lahf
sub
les
pusha
imul
shl
inc
pop
add
xchg
rorl
pushf
jne
xchg
iret
repz
in
jge
mov
push
cmp
pop
sub
mov
sub
and
dec
adc
mov
outsl
xlat
stos
mov
add
push
cmp
test
mov
and
adc
rolb
pop
dec
cmpsl
outsb
mov
pop
mov
test
cwtl
mov
out
and
dec
mov
cmp
fwait
lods
pop
mov
mov
push
inc
sbb
lahf
fldenv
bnd
out
and
pushf
sbb
dec
lods
jle
cmpsl
xchg
addl
mov
lock
jns
lcall
outsl
mov
popf
pop
mov
lods
cmp
das
pushf
and
mov
cmpsb
sbb
andl
sub
hlt
jb
jle
adc
fstl
dec
mov
idiv
mov
jge
push
inc
mov
je
sbb
mov
pop
jno
lcall
xor
jo
shrb
xor
sub
scas
push
popf
int
jnp
push
out
inc
stos
leave
add
and
adc
mov
sbb
xchg
dec
mov
cli
je
fldt
cmp
jg
mov
outsb
in
pop
or
lds
mov
inc
adc
inc
std
or
xchg
dec
data16
ja
aas
lahf
inc
lret
leave
ljmp
push
ljmp
mov
or
or
andb
iret
out
xchg
rcll
xchg
mov
stos
arpl
inc
and
jo
enter
xchg
test
inc
lret
and
int3
aam
fdiv
and
rol
sbb
mov
push
popa
dec
mov
decl
pop
mov
cmp
pop
pop
loopne
inc
sbb
pop
negl
fcmovbe
loopne
add
mov
fldcw
adc
add
leave
les
push
sub
push
lods
pushf
mov
or
cmp
out
test
inc
sub
pop
je
testl
xor
mov
jl
arpl
mov
dec
in
push
mov
fisubl
lock
push
cmp
xchg
dec
mov
subl
fwait
jp
mov
jmp
push
addr16
leave
cld
hlt
icebp
andl
addb
add
js
sbb
push
push
cwtl
dec
icebp
mov
xor
mov
mov
add
in
bswap
test
xchg
push
jmp
jno
mov
sbb
es
imul
mov
cltd
jns
cmp
jmp
mov
inc
sarb
rorl
pushf
jne
popf
movsl
pop
adc
sbb
jno
or
sbb
js
pop
stos
adc
mov
sbb
mov
inc
adc
js
xor
push
loopne
add
dec
xchg
xlat
xor
push
pop
scas
mov
sbb
mov
insl
ffree
jmp
inc
sysexit
dec
mov
jo
xor
add
jns
push
scas
jne
cmovs
stos
popf
mov
add
adc
nop
es
mov
aam
ret
sub
xchg
cli
mov
and
fdiv
or
pop
push
sub
or
and
push
add
and
add
sub
test
stos
or
mov
mov
mov
adc
sub
dec
push
or
loopne
dec
fsubr
mov
repz
or
or
xchg
lea
stc
imul
xor
mov
sti
jle
ret
orl
mov
in
ja
and
push
inc
movb
ds
mov
std
sbb
fiaddl
incl
sub
sub
mov
imul
jae
jns
mov
cmpsl
pop
mov
jnp
or
outsb
or
or
xorb
imul
xchg
mov
fistpl
pop
xchg
es
adc
jp
fisttps
fiaddl
fsubrs
jecxz
push
int
mov
pushf
movsb
sub
add
xchg
xor
mov
ret
into
push
mov
add
mov
leave
pop
xchg
cmp
cmp
and
jmp
mov
xchg
jae
int3
inc
sub
in
and
shr
neg
cmpb
mov
mov
xchg
mov
dec
call
dec
xchg
loopne
mov
call
push
fwait
inc
jg
add
lcall
ret
loop
jmp
push
aad
icebp
dec
sbb
test
sbb
test
aaa
lret
ja
stos
cmp
lret
xchg
mov
les
adcb
or
shlb
fwait
adc
inc
pop
mov
pop
push
add
jbe
aam
or
pop
icebp
or
sub
xor
loop
in
nop
xchg
pop
push
cwtl
loopne
sarb
out
ds
cld
daa
or
inc
mov
adc
movsl
lcall
out
ljmp
lea
jge
lret
mov
jne
popf
rcll
addb
pop
cwtl
xchg
cmpsl
sbb
or
sub
fsubs
aas
clc
int3
mov
sbb
gs
add
cwtl
dec
and
mov
mov
test
clc
iret
mov
call
int
sub
popf
mov
or
test
xchg
into
scas
mov
dec
data16
cwtl
xchg
xor
dec
fwait
pop
sub
test
enter
jne
sbb
and
jnp
mov
sub
xchg
mov
repnz
in
and
add
sbb
stos
jecxz
sub
mov
aad
mov
add
pop
jl
pusha
test
ficoms
cmp
lock
fstp
sbb
dec
sti
icebp
jecxz
js
adc
shll
jo
test
movsb
sbb
mov
and
jno
sbb
fstl
fbstp
shll
pop
cmpsl
sbb
dec
inc
xor
cmp
or
loope
adc
cld
jl
dec
sbb
fists
push
sub
push
mov
repz
mov
imul
shll
jp
aas
in
and
cmp
test
inc
sbb
outsl
xor
nop
lock
aad
pushf
scas
jmp
sub
ret
xchg
inc
xor
imul
jb
cli
xchg
mov
sbb
mov
bound
fcoms
inc
or
xor
pop
addr16
idivb
jmp
push
pop
mov
leave
push
sbb
pop
pusha
jp
lods
pop
stc
leave
or
mov
leave
in
addr16
add
iret
mov
idivl
mov
cmp
stc
loope
insl
jmp
aad
jns
push
jne
sbb
mov
cmp
call
int
push
jb
es
jl
enter
mov
inc
push
xchg
dec
daa
sub
mov
push
stos
aam
icebp
fistl
inc
mov
into
lcall
cmp
in
lret
hlt
hlt
pop
sar
add
cli
add
bound
cmpsb
loop
mov
and
int
cwtl
or
pop
ficompl
jno
test
test
mov
adc
int
inc
cmp
xchg
rcrl
roll
imul
add
add
xchg
mov
fwait
add
jge
sub
sbb
dec
add
fadds
inc
pushf
rol
scas
cmp
push
aad
push
mov
pop
jl
adc
pop
sahf
scas
cltd
js
stos
aas
xchg
insl
cmp
jno
icebp
xchg
in
cbtw
mov
pop
dec
push
pop
clc
ljmp
mov
lahf
scas
fistpll
push
stos
xorb
loopne
aam
aam
enter
mov
jmp
enter
pop
push
and
shl
mov
adc
add
int3
push
pop
pop
loop
jge
ret
push
adc
jl
fs
fcmovne
adc
inc
pop
ljmp
rcll
arpl
adc
sub
rcll
xlat
fbstp
adc
sbb
sbb
imul
gs
mov
iret
jns
sub
ljmp
fbld
jno,pn
out
and
sub
mov
test
shlb
jnp
pop
mov
cmpsl
out
ret
sarb
jge
pop
xlat
fcoml
sti
and
mov
mov
mov
jmp
mov
inc
or
push
jle
mov
out
sbb
imul
orb
ret
xlat
arpl
out
push
test
jmp
and
daa
je
clc
aam
test
mov
sub
xor
aad
adc
nop
int3
cmpsl
addl
call
shl
fstpl
jbe
pop
xor
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
imul
movsb
data16
xchg
xor
in
xlat
testl
xchg
sbbl
int3
add
fwait
and
inc
add
bound
aad
int3
outsb
xor
add
scas
mov
or
pop
mov
repz
lahf
lret
movsl
cli
jg
inc
insl
out
push
int3
push
fsubrl
mov
cmp
rorb
xchg
cmp
xor
sbb
loop
mov
dec
sbb
imul
push
shrb
aad
or
and
cmp
adc
popa
push
xchg
lcall
mov
add
mov
stos
lahf
aam
pusha
cmp
add
ljmp
adc
mov
cmpb
dec
mov
lods
pushf
push
sub
sub
add
stos
or
or
dec
and
mov
mov
aam
ja
in
xor
xchg
popf
pop
out
adc
nop
std
dec
push
xchg
sub
stos
std
cld
jns
dec
cmpsl
xor
sbb
fistl
xchg
shrb
test
jae
out
cs
mov
dec
push
fwait
imul
and
push
cwtl
clc
inc
sarb
add
cmp
mov
test
mov
test
in
xchg
imul
cmp
mov
jnp
fdivs
dec
inc
adc
insb
mov
pop
dec
sub
out
scas
int
imul
sahf
dec
mov
xor
loopne
divb
and
mov
sti
test
jg
add
sub
sbb
ret
inc
sub
xor
stos
mov
lret
ficompl
jp
faddl
mov
push
test
hlt
hlt
hlt
subl
mov
clc
outsb
out
mov
ficompl
mov
jae
test
xchg
dec
mov
lds
test
cltd
test
add
cmpsb
or
push
imul
jnp
jle
push
push
jp
jle
push
mov
in
testl
adc
out
je
jecxz
cwtl
dec
xor
cmp
xchg
mov
push
sahf
inc
fisubs
fwait
mov
jecxz
xor
sub
mov
inc
cwtl
aad
dec
int
out
dec
test
mov
adc
sbb
pushl
into
loopne
sarb
inc
mov
mov
pop
xor
add
or
push
ds
mov
push
dec
mov
mov
clc
mov
dec
stc
lret
es
insb
mov
and
mov
pop
stos
push
imul
dec
push
daa
dec
out
repz
adc
adc
adc
jbe
movsl
pop
cltd
in
outsb
push
ja
out
mov
fisubl
push
jbe
scas
xorb
push
flds
jno
jae
in
jmp
pop
jno
in
jecxz
push
mov
js
rcrl
push
or
push
xor
or
xchg
out
mov
mov
xchg
call
fidivl
insl
pop
or
pop
lea
cltd
pop
xchg
mov
mov
icebp
mov
sahf
xchg
add
leave
mov
mov
jno
xchg
sub
mov
orb
pop
add
pushf
adc
fdivs
mov
or
add
clc
mov
sbb
jle
pop
shl
inc
and
pop
movsl
mov
sub
mov
push
lret
rcrb
mov
lods
push
sbb
mov
fcmovnbe
or
and
push
cmp
aas
lret
mov
outsb
into
imul
push
xor
push
push
push
mov
xchg
pop
ja
das
xchg
dec
jns
int3
in
jbe
jp
sub
cmp
idiv
mov
pop
js
sti
sub
cmp
in
inc
pop
ret
mov
imul
sub
fstpl
pop
add
inc
xchg
ljmp
pop
xlat
mov
loop
inc
lret
and
adc
sbb
pushf
addr16
sub
sub
cli
int3
mov
dec
int
pop
je
fldl
roll
pop
mov
loopne
mov
repz
mov
jecxz
and
jp
cmp
cli
out
sbb
sub
fidivs
push
idiv
out
jmp
and
jne
mov
out
pop
sbb
sbb
cld
sub
lcall
or
mov
ret
adcb
mov
jg
push
add
in
cs
imul
cmpsl
cmp
sub
mov
jbe
xor
and
test
int3
xor
lods
add
xor
std
pushl
mov
xchg
or
xor
push
out
jns
clc
mov
imul
xchg
mov
mov
xor
mov
xchg
add
leave
sbb
mov
in
imul
push
sahf
add
xchg
xchg
xor
sub
mov
pop
pop
sbb
dec
push
adc
and
cs
xor
mov
xor
pop
ret
cmpsl
mov
adc
cwtl
mov
fldenv
xlat
shr
lcall
mov
fcomps
ss
jbe
adc
and
lret
popf
pop
fcoms
retw
jo
cltd
adc
les
stc
movsl
xor
push
mov
sub
or
sbb
pusha
mov
jmp
int3
push
fwait
leave
cld
cmc
mov
jl
sub
sahf
add
ret
stos
push
clc
mov
loopne
adc
test
cmp
das
popf
fwait
and
ret
fld1
jb
cmp
mov
and
cmpsl
hlt
pop
das
orb
aas
jmp
enter
pop
imul
mov
lock
lea
ss
lcall
addr16
push
add
lahf
rcrb
mov
or
xchg
leave
fsubrl
aad
icebp
mov
sbb
mov
mov
fbld
jne
xor
fcmovne
scas
mov
cmpsl
jno
mov
nop
roll
mov
sbb
xchg
cmp
test
pop
sub
mov
flds
repz
roll
ss
sbb
hlt
add
in
lcall
sti
dec
push
pop
or
js
inc
int3
cmpsl
dec
mov
pop
sub
jl
pop
push
fbstp
in
push
std
mov
adc
fs
mov
push
jg
mov
enter
enter
and
aaa
and
es
mov
jl
icebp
mov
sahf
xchg
jmp
adc
idivl
jle
repz
cmp
mov
in
mov
mov
enter
fwait
dec
aaa
mov
pop
dec
sti
je
cs
iret
add
push
pop
or
and
das
stos
pusha
adc
pusha
mov
mov
push
dec
xor
cli
pop
neg
lret
orl
icebp
sbb
and
push
push
push
out
mov
pop
xchg
jg
mov
push
xchg
push
lahf
dec
pop
jbe
loope
test
mov
dec
pusha
push
aaa
cmpsb
fistpll
inc
fistps
fnsave
popl
push
in
addl
mov
out
jl
shlb
aam
inc
inc
cwtl
xchg
iret
fwait
not
mov
sub
fstps
pop
and
vpshuflw
jecxz
pop
fmull
movsl
sub
ror
test
mov
out
mov
shlb
dec
inc
jle
lods
xor
mov
shr
repz
pusha
je
daa
cmp
jmp
clc
sti
aad
es
lret
rorb
push
enter
or
adc
cs
iret
roll
movl
sub
dec
ficoml
test
sbb
push
mov
and
test
nop
cmp
push
cmp
outsb
push
mov
aas
jecxz
push
push
dec
cmpsl
sub
sbb
mov
push
cmp
push
mov
loopne
dec
pop
repz
mov
mov
dec
sti
pop
pop
scas
stc
or
add
add
out
mov
jmp
ljmp
icebp
iret
dec
jb
xchg
mov
popa
ss
mov
pop
lock
push
push
pop
fwait
lea
mov
bound
out
or
and
insb
mov
inc
mov
or
movsb
lods
imul
and
xor
cmpsb
repz
pop
add
or
inc
jge
inc
pop
push
sub
dec
push
adc
addr16
cmpsl
cwtl
out
jne
sbb
mov
rclb
orb
cmp
push
dec
cmp
pushf
push
sub
lds
sbb
add
xor
test
idivb
inc
and
lcall
outsl
lret
into
int
pop
dec
pop
lock
out
ljmp
lods
pop
mov
sub
scas
test
push
scas
je
das
ret
sbbl
xchg
sbb
out
and
popl
xor
mov
adc
out
fst
push
stos
pop
cmp
xchg
loope
sub
jno
xchg
inc
cmpsl
ret
punpcklwd
xchg
fmuls
out
mov
sub
rorl
inc
popa
hlt
jl
imul
xchg
jmp
inc
rcl
pop
stos
aas
or
lods
aam
jno
mov
xor
popf
inc
xor
or
inc
mov
cmp
cmp
add
arpl
cld
or
push
insb
sbb
test
inc
mov
mov
dec
and
inc
mov
mov
or
test
mov
push
add
testb
stos
xchg
push
pop
loop
test
cmc
int
repnz
mov
push
pop
xor
pusha
mov
push
or
mov
inc
loop
cmpsl
xlat
xchg
call
addr16
sarl
dec
addb
loope
pop
mov
push
xchg
push
mov
inc
sahf
or
jo
adc
mov
cmp
xchg
cmp
sub
mov
push
or
cwtl
jle
movsb
popf
jecxz
lret
cltd
decb
mov
repz
inc
lahf
mov
xlat
divb
incb
ljmp
into
stc
iret
sbb
mov
jo
stc
popf
mulb
add
imul
stos
divl
push
out
stos
stc
and
lods
leave
pop
sbb
sub
cli
xlat
xor
lret
pop
arpl
or
pop
push
mov
or
lds
imul
xchg
mov
add
pop
xchg
xchg
dec
push
clc
subl
add
enter
dec
fdivl
xchg
popf
adc
push
mov
dec
decl
mov
xchg
mov
out
fistpl
mov
test
push
mov
push
push
jmp
mov
cmpsl
dec
sub
xchg
mov
fwait
cmc
jnp
iret
sbb
adc
add
inc
rcl
aam
enter
mov
xchg
nop
mov
pop
cmpsb
mov
int3
sbb
mov
arpl
pop
movsl
setge
incb
ja
pop
hlt
cmp
pop
add
jecxz
popf
fildl
outsl
mov
dec
xlat
cmp
dec
cwtl
stc
ljmp
arpl
dec
xor
push
mov
hlt
xor
rol
adc
push
adc
pushf
repz
dec
pop
in
xor
xor
push
sub
adc
push
loope
mov
popa
jmp
push
arpl
test
js
and
int3
cmpsl
out
bound
inc
mov
sbb
lret
clc
push
imull
js
adc
stc
pop
jo
pop
mov
sub
fs
lcall
mov
inc
mov
pop
shlb
inc
mov
lds
aas
loopne
jmp
inc
jnp
shlb
xchg
les
add
inc
je
stos
jecxz
sbb
xchg
inc
xchg
jb
cmp
out
push
sub
call
xor
jo
mov
fdivs
mov
leave
mov
sbb
mov
leave
fsubrl
je
mov
call
shr
mov
out
testl
sbb
outsl
cli
lret
lcall
lret
fdivrp
cmp
cmpsl
insb
or
pop
adc
mov
or
mov
repnz
stos
negl
add
mov
shrl
push
cmp
mov
lahf
jne
push
cmp
in
mov
jmp
cmp
xor
sub
dec
jl
lds
dec
fadds
adc
inc
jl
sti
adc
push
pop
xchg
js
shrl
pop
cmpsl
cwtl
pop
std
scas
inc
cmc
jmp
in
aad
and
xchg
into
mov
mov
xchg
jb
jl
adc
inc
pushf
pop
out
das
fcom
je
jge
pop
jb
or
divb
cmp
fisubrs
lahf
pop
jbe
mov
mov
add
inc
sysenter
repz
rcrl
mov
sbb
divl
or
jmp
lret
call
inc
sub
lret
es
test
call
and
lret
shrl
mov
decb
cmpsl
shll
mov
mov
jbe
xchg
adc
adc
push
push
inc
push
insl
dec
mov
fsubrl
mov
fwait
fs
pop
call
shlb
sub
xchg
xor
retw
inc
xchg
xchg
mov
test
mov
bound
jg
iret
in
jle
cld
addb
sti
movsl
mov
and
pop
pop
inc
mov
rcll
fs
cmp
into
ss
enter
xor
iret
xor
and
jbe
adc
jmp
call
mov
cs
insb
sub
repz
or
subl
jno
mov
adc
mov
hlt
cwtl
push
mov
adc
cmp
dec
mov
scas
push
xchg
das
pop
mov
push
std
arpl
cmp
nop
rcl
add
fists
stc
xchg
mov
jbe
out
lcall
jns
push
push
sahf
mov
pop
mov
cli
orl
mov
jbe
rcrl
xchg
stos
cltd
inc
jp
rcrb
stos
enter
enter
scas
xchg
and
bnd
cmpsl
das
jge
xchg
jle
mov
cmp
jl
jnp
cmp
sub
add
xchg
int
je
pop
mov
jg
pop
iret
pushf
sbb
xchg
scas
pop
pushl
push
lea
add
jae
inc
mov
or
inc
aas
push
adc
insl
dec
ffree
jge
ret
movsl
mov
cwtl
sahf
sbb
inc
fdivl
insb
loope
sub
mov
ret
arpl
mov
fadds
pop
jmp
loopne
adcb
ret
jecxz
adc
fbld
adc
add
test
sub
sahf
sbb
testl
mov
add
adc
shrl
mov
outsb
fistps
jmp
dec
cmpsl
outsb
hlt
xor
mov
dec
sar
and
fidivrs
cwtl
loop
repnz
push
or
pop
rclb
pop
fists
out
js
sbb
int
or
adc
scas
mov
fwait
pop
mov
or
mov
pusha
jo
cmp
sti
mov
jo
xor
out
inc
mov
jmp
mov
adc
mov
xchg
divb
pop
pop
add
rolb
sbb
xor
inc
inc
divb
clc
cmp
add
push
pop
ja
clc
add
pop
mov
enter
outsl
jmp
fdivl
adc
sbb
add
or
jne
xor
pop
dec
dec
xchg
dec
and
adc
int3
and
shrb
jae
cltd
mov
lret
orl
icebp
sbb
insl
insl
lock
out
mov
pop
xchg
jg
mov
push
lahf
dec
pop
jbe
loope
mov
mov
int3
pusha
push
aaa
cmpsb
fistps
push
pop
push
sbb
mov
in
addl
mov
xlat
ds
shlb
aam
inc
inc
cwtl
xchg
iret
fwait
not
mov
sub
fstps
pop
and
vpshuflw
jecxz
pop
fmull
add
mov
xchg
sarb
mov
push
in
pop
mov
add
shlb
sarb
sub
repz
cmp
sbb
lods
mov
sti
mov
sbb
or
mov
pop
sub
jno
shlb
cmc
adc
mov
mov
mov
rcrb
jbe
push
mov
xor
lods
push
dec
sbb
mov
and
imul
sbb
in
cwtl
popf
pop
mov
mov
repnz
out
imul
push
mov
pop
jecxz
dec
fcompl
xor
sbb
sub
cmp
sub
jne
js
and
imul
ret
add
shll
jae
add
xchg
xchg
adc
js
fnstenv
fucomi
push
push
lods
sbb
out
xor
mov
dec
out
pop
lea
repnz
xor
dec
mov
adc
dec
inc
xor
sbb
adc
mov
aam
or
shl
inc
adcb
push
pop
or
or
clc
je
jns
mov
add
cwtl
bound
sub
adcb
adc
pop
xchg
cld
jg
in
xor
or
mov
mov
push
insb
or
push
dec
jb
clc
sahf
push
sub
inc
xchg
jns
mov
movsl
and
push
in
and
insb
push
xor
aas
subl
inc
call
xchg
stos
mov
lret
xchg
dec
inc
lcall
fdiv
mov
fmull
inc
fnstcw
xchg
fs
aad
push
mov
js
in
xchg
push
sahf
mov
push
or
jo
vunpckhps
jl
mov
adc
and
push
ljmp
std
xor
pop
add
pop
mov
cmp
out
mov
pop
out
cmp
data16
loope
jmp
mov
adc
sub
shll
popf
cltd
mov
pop
shll
or
daa
lahf
xchg
adc
sbb
push
pushf
mov
mov
add
xchg
push
fsubl
inc
mov
cli
icebp
push
movsb
or
xor
cmpsb
jbe
int3
sbb
aas
lods
mov
mov
mov
mov
or
sbb
sahf
xor
jb
jmp
js
fwait
mov
dec
dec
sbb
jno
lods
lret
dec
push
les
xchg
xchg
xchg
imul
in
pop
sub
or
lds
shll
jns
mov
aad
inc
lahf
pop
push
cmp
shl
hlt
xchg
cmp
insl
cmc
repz
adc
mov
mov
jmp
mov
inc
or
push
jle
mov
out
sbb
imul
orb
cmp
call
mov
xor
ljmp
push
movsb
mov
mov
mov
mov
mov
jo
or
or
into
loop
shll
cmpsl
enter
popl
int3
lret
xor
iret
mov
sbb
jecxz
xlat
jg
loop
fldt
sbb
cmpb
gs
inc
jae
mov
loop
push
cmp
sbb
bound
in
or
mov
in
and
imul
push
mov
leave
fs
ret
movsb
std
fimull
cltd
mov
or
jmp
push
fs
loop
mov
adc
cmp
and
lea
xor
push
jle
addr16
and
xchg
imul
inc
sbb
test
es
jns
in
pop
ficoml
xor
dec
xchg
pop
aaa
sbb
sbb
out
mov
pop
emms
fisttpll
pop
pand
enter
imul
arpl
and
lods
jne
add
mov
popf
cmp
cmp
lock
ja
inc
add
cmc
cld
sbb
aas
cmpsl
and
gs
movsl
dec
and
dec
in
pop
pop
ljmp
mov
and
loope
js
popa
in
rcrb
out
cwtl
popf
mov
lock
jae
dec
push
push
jl
cmpsb
sub
les
pop
jbe
dec
dec
cltd
lods
inc
push
lahf
sub
mov
mov
xchg
pop
fdivs
sbb
xchg
std
decl
cmp
daa
xchg
add
daa
scas
xor
pushf
pushf
out
notl
out
xchg
inc
and
pop
out
pop
lea
push
cs
pop
out
inc
push
adc
cs
leave
xchg
cld
nop
jl
push
xchg
dec
push
and
cld
inc
fldl
inc
xor
mov
pop
mov
lret
add
cld
dec
adc
mov
xor
iret
push
enter
pop
pop
mov
loopne
scas
inc
stos
flds
inc
cwtl
cmp
adc
adc
test
fldcw
rcrl
rcll
icebp
fstpt
rcrb
out
or
shll
mov
fsubrl
mov
imul
lods
mov
shlb
aaa
cli
cmp
loop
repnz
sbb
lods
ss
rclb
pop
fists
out
js
adc
pop
xor
cwtl
xchg
rcrl
cmpsb
xchg
loopne
pop
mov
mov
lcall
adc
scas
aaa
popf
mov
mov
or
push
add
adc
mov
push
mov
mov
rcll
ja
push
pop
sub
in
or
int
add
mov
or
fsubs
jne
pushf
dec
aaa
lds
cwtl
push
mov
pop
add
inc
and
pop
movsl
mov
adc
fcoml
mov
enter
jne
mov
cmp
mov
ret
mov
popf
lret
arpl
scas
stos
movsl
test
int
push
mov
scas
xchg
push
pop
xchg
aas
fidivrl
push
lahf
dec
pop
jbe
loope
xchg
jo
in
fdivrs
push
fistps
inc
jecxz
push
cli
push
sbb
scas
cmpsl
xlat
or
inc
mov
sub
cld
js
xor
jp
sbb
rcr
out
adc
inc
outsb
push
lods
sub
inc
test
fs
out
xchg
jmp
pop
fwait
pop
add
sbb
xor
popa
rorl
inc
xor
jb
dec
daa
adc
or
sahf
aad
mov
je
or
sub
xchg
sarl
or
mov
mov
fidivs
shr
enter
data16
pop
inc
sub
mov
sub
adc
lret
loop
xchg
test
jno
mov
dec
mov
pushf
andl
cwtl
inc
mov
test
xor
push
scas
pop
or
ret
push
mov
sub
pusha
cld
or
pop
clc
or
inc
std
out
and
sbbl
fists
inc
shll
inc
xorl
sbb
add
dec
out
cs
xchg
xchg
jo
mov
hlt
jle
in
push
movsb
push
sub
and
fbld
stos
lea
stos
mov
stc
sbb
mov
fmul
dec
mov
call
dec
mov
inc
fstpt
or
dec
xor
add
dec
rcl
pop
loop
vcmpss
cmp
inc
cmp
mov
mov
or
enter
mov
or
pop
imul
test
aad
outsl
adc
ss
push
inc
movsl
int
jge
inc
fisubrs
ss
scas
in
in
mov
repnz
call
je
icebp
sbb
insl
ret
popa
xchg
push
mov
mov
cs
dec
in
ljmp
jnp
xchg
mov
fstpl
mov
fisubl
dec
lock
scas
pop
pushf
roll
mov
addl
sbb
jl
pop
pop
mov
pop
push
mov
repz
insl
mov
lods
xchg
jo
mov
pusha
jo
xchg
fwait
mov
cmp
je
cltd
iret
mov
xchg
pop
sub
and
jl
sub
test
dec
and
mov
pop
pop
add
cmp
cmp
lahf
xchg
notl
sbb
cld
mov
pop
sbb
mov
inc
les
pop
mov
repnz
cmp
in
out
or
ficoml
xor
pop
data16
pusha
pop
cld
das
ss
pop
inc
mov
cmp
xchg
cmp
jns
in
add
add
add
addb
imul
ja
fwait
push
pop
pop
mov
fstl
std
out
mov
sub
scas
mov
enter
repz
jno
in
mov
icebp
inc
loopne
cs
jae
mov
sub
js
fnstenv
out
out
push
push
lods
daa
inc
ljmp
cltd
ss
cmp
push
pop
xor
jb
sti
mov
scas
iret
sbb
xchg
jle
insb
aaa
bound
fisubs
dec
int
out
dec
gs
into
xor
js
mov
imul
insb
les
xor
ret
add
mov
fsubs
mov
cmp
cmp
outsb
cmp
rorl
or
lea
pinsrw
arpl
dec
xor
push
clc
das
rcl
lret
fists
push
icebp
or
xchg
inc
xchg
cmpsl
xchg
push
pop
push
jg
lods
pop
outsb
mov
fnstenv
dec
inc
shrl
push
mov
pop
fistpl
push
mov
cld
xor
jge
adc
jne
pop
xor
jle
sbb
lahf
std
decl
insb
adc
notl
clc
stos
sbb
and
insb
ss
adc
les
ret
xor
outsl
repnz
mov
sti
int
outsb
push
enter
dec
xchg
test
sahf
xchg
add
lret
pop
aaa
repnz
adc
loopne
push
xlat
mov
xor
shll
mov
mov
xchg
enter
inc
iret
xlat
jmp
jae
mov
lock
adcb
lock
rorl
or
mov
leave
clc
addr16
adc
bound
sub
fdivrs
or
ljmp
mov
pushf
cmp
adc
push
mov
push
push
jns
push
ja
lret
mov
pop
pop
pusha
cli
ss
movsb
push
aam
sub
ret
jge
push
xchg
je
das
loop
jge
pop
filds
adc
fistpl
sti
xchg
xchg
ds
mov
inc
mov
dec
push
lcall
xchg
inc
and
pop
ret
fld1
popa
mov
cmpsl
fsubrp
aad
dec
mov
lea
or
shl
dec
push
dec
orb
or
mov
scas
cli
ja
pop
in
mov
insb
mov
clc
xor
inc
inc
divl
mov
pop
sub
jno
les
push
jecxz
adc
movsl
fimuls
aam
push
cmp
icebp
xor
call
xchg
cmp
cs
jne
nopl
testb
lret
bound
test
fidivl
into
imul
push
jge
xor
and
cmpsl
dec
stc
pop
or
mov
scas
xor
mov
mov
push
or
xor
adc
push
sbb
lock
clc
mov
iret
pushl
incl
jle
je
lcall
je
ficoms
inc
loopne
cmp
lcall
ds
stos
call
outsl
inc
add
inc
adc
mov
sbb
cmpsl
bswap
jp
and
insb
or
lods
imul
popa
mov
jecxz
out
jo
add
sub
repz
jle
push
adc
clc
inc
pushl
inc
rcl
mov
aas
bound
push
and
cmp
xlat
xchg
push
mov
and
xchg
imul
sub
in
ja
sbb
ds
test
mov
inc
shr
pop
neg
pop
ss
popf
lret
sarb
mov
idivb
push
mov
push
stos
sub
dec
mov
ss
lods
mov
icebp
arpl
mov
sub
pusha
xchg
sarb
test
pop
in
jl
jnp
lret
inc
xor
xchg
and
repz
mov
mov
mov
mov
sub
push
xor
push
add
sbb
add
fdiv
bound
xchg
cwtl
or
mov
std
pop
push
lds
gs
jmp
mov
aad
mov
into
outsl
stos
shr
ret
jne
sbb
and
or
adc
fistl
testb
mov
cmovge
les
cs
scas
inc
test
test
cwtl
test
aas
jnp
mov
jae
adc
aam
cltd
and
cmp
ss
int
lret
push
push
in
add
lret
popf
bound
insl
xchg
sub
mov
xchg
call
dec
mov
test
int3
clc
xor
sub
ljmp
mov
mov
and
pop
push
mov
sub
pop
sbb
add
mov
mov
mov
xchg
jmp
adc
xchg
inc
add
add
ret
daa
mov
pop
mov
and
sbb
or
mov
mov
test
es
movsb
imul
sub
mov
inc
or
mov
mov
pop
loopne
fsubrl
pusha
and
mov
cltd
std
cwtl
jge
pop
dec
testl
in
inc
outsb
or
adc
adc
cwtl
lret
imul
lods
add
inc
in
xlat
loopne
dec
sbb
in
adc
add
xor
pop
mov
xchg
insl
lret
rcll
sub
push
negl
mov
pop
cmp
mov
cmpsb
loopne
jbe
movsb
das
or
lahf
fnstsw
dec
push
xor
mov
push
cwtl
jle
pop
gs
or
add
push
mov
ljmp
cmp
aad
insl
inc
xor
mov
jb
pop
pop
mov
xor
js
inc
and
mov
xchg
mov
jb
adc
inc
pushf
cmp
das
fcomp
inc
in
dec
outsl
pop
xor
dec
shr
repz
mov
add
jne
inc
aas
jae
xchg
lods
stos
lahf
push
lock
popf
dec
aaa
xchg
sub
mov
insl
test
icebp
adc
jg
pop
scas
addl
pushf
dec
sub
loopne
adc
dec
lods
push
shl
xor
and
mov
mov
lret
mov
sbb
leave
jg
pop
repz
lods
xlat
stos
lds
push
jecxz
mov
in
daa
or
pop
shl
push
and
mov
ret
jb
inc
bound
test
andl
mov
sbb
dec
xchg
sbb
fwait
push
mov
and
icebp
pop
mov
xchg
jbe
mov
pusha
jo
stc
inc
jb
adc
imul
xor
aaa
sbb
or
hlt
jl
inc
mov
dec
daa
fidivs
aas
shlb
fsubs
adc
fistl
dec
mov
cmpl
imul
imul
imul
lahf
cli
popf
push
jg
jo
scas
int3
push
outsl
and
and
and
enter
push
inc
push
xchg
mov
lds
adc
xor
lret
repz
push
pop
pop
ficoml
sbb
adc
xor
pop
add
movsl
xchg
mov
pop
lret
ljmp
test
pusha
jle
scas
jg
cltd
fbstp
mov
ss
mov
or
mov
and
inc
sbb
push
mov
out
sbb
xchg
call
mov
outsl
outsb
lahf
sbb
mov
sub
mov
je
pop
mov
mov
lret
sbbl
xchg
add
xchg
lods
ror
mov
movsl
jge
testl
push
ret
sub
mov
mov
pop
jle
out
imul
jge
pushf
and
ja
mov
add
in
int3
inc
adc
sub
push
stos
inc
mov
inc
and
push
sar
mov
cmpsl
mov
out
lret
sub
pop
or
jmp
mov
stc
jmp
mov
gs
xchg
jne
push
cmp
push
mov
cwtl
lahf
push
xchg
jle
outsb
js
int3
xor
leave
loop
dec
mov
aas
cmpsl
push
cmp
jns
pop
push
pusha
das
in
shll
int
je
jmp
dec
cmc
xor
out
popf
pop
fists
xchg
cld
or
and
movsl
ficoml
sbb
insb
sbbl
mov
leave
leave
pushf
add
mov
push
mov
dec
inc
xor
sub
inc
xlat
leave
jnp
sahf
sbb
add
sarl
daa
insl
mov
call
and
cmp
hlt
inc
dec
lahf
lret
call
mov
mov
mov
gs
jne
cld
or
in
mov
mov
nop
imul
lds
mov
shrb
sub
fisttps
jb
mov
and
sub
lret
and
test
fucomi
push
mov
scas
divb
push
push
leave
mov
leave
mov
sub
mov
das
or
roll
jp
fcom
je
sbb
or
mov
push
aas
std
pop
adc
in
adc
push
jl
stos
jae
cmp
dec
aaa
mov
mov
cs
ret
pop
adc
add
and
and
lea
or
cld
cmp
sub
xchg
mov
insb
or
lds
jg
sti
int3
mov
inc
ficomps
movsb
cli
inc
pop
or
jno
outsb
stos
pop
jg
jae
mov
fwait
push
add
mov
cmp
jg
add
inc
pop
sti
and
cltd
test
mov
push
data16
ds
negl
cld
jecxz
pop
divb
lds
repz
jnp
sub
out
outsl
dec
mov
push
mov
mov
xchg
dec
jecxz
into
dec
mov
push
push
pop
pop
mov
sbb
or
or
mov
adc
xorl
dec
push
inc
add
jns
adc
and
cmpb
lods
fwait
leave
add
inc
fcoml
jg
adc
idiv
mov
clc
scas
sbb
mov
enter
test
loope
test
and
mov
lahf
xchg
aad
jo
fwait
lods
sbbl
pusha
shrb
pop
sub
movl
dec
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
ret
mov
ss
test
outsl
sub
dec
jmp
enter
mov
jne
inc
adc
mov
repnz
rorl
push
dec
pop
shll
dec
inc
pop
xor
rcrl
rsm
popf
ss
inc
scas
dec
cmpxchg
test
push
push
jl
cmp
mov
sub
repz
mov
xchg
adc
or
xchg
leave
mov
in
call
into
xor
jno
sti
lahf
pop
pop
sar
adcb
xchg
jge
inc
adc
mov
addr16
and
xchg
push
jge
or
movsl
or
jne
pusha
mov
or
pop
xor
pop
fxch
mov
mov
inc
xor
sbb
mov
lock
mov
lods
bound
cmpsl
mov
jo
aam
xor
adc
jae
push
mov
popa
lods
push
push
enter
jne
and
jle
rorl
outsb
scas
into
push
lret
push
pop
repz
sub
test
lcall
jnp
gs
xchg
outsb
ljmp
lock
add
add
clc
add
fmuls
clc
dec
dec
fs
in
mov
jmp
jle
addr16
and
test
inc
addl
mov
das
dec
fwait
inc
push
rol
lock
fwait
test
jl
stos
mov
mov
cwtl
rcrl
xor
and
xchg
fdivr
insb
aaa
mov
push
shlb
jmp
push
cmc
dec
sahf
ja
adc
push
les
les
inc
mov
xchg
int
cmp
inc
inc
jl
loope
decb
sbb
inc
mov
in
push
out
test
hlt
add
imul
mov
xchg
fwait
ds
hlt
or
and
sbb
inc
insl
add
fisttps
mov
pop
mov
int
popf
addl
push
stc
mov
imul
and
or
push
mov
dec
add
movl
jmp
push
mov
cmp
dec
es
cmp
sahf
add
mov
fmul
and
inc
and
stos
shll
xchg
imul
cltd
xchg
cmpsl
ret
pcmpgtw
jb
sub
sbb
jecxz
inc
gs
test
cmp
or
jno
dec
pop
lahf
cmc
mov
push
mov
lret
loopne
int
fbld
xchg
xchg
xor
cmp
push
inc
int3
sbb
push
mov
or
loop
jbe
sti
int3
sti
mov
gs
cmp
ja
mov
iret
fs
iret
sbb
sbb
and
test
mov
scas
ljmp
fwait
sbb
clc
in
xor
repnz
in
in
ljmp
insb
imul
movb
push
popf
dec
lretw
stos
sbb
test
jg
dec
xor
sbb
pop
mov
call
in
xchg
adc
ja
int
test
sub
pop
xchg
call
pop
call
pop
mov
enter
ret
dec
sbb
mov
adc
leave
pop
pop
cld
insb
aaa
jecxz
sub
push
or
xor
xchg
mov
negl
call
inc
mov
out
mov
inc
repz
lea
mov
int3
cs
add
test
pop
mov
add
mov
aad
mov
imul
movsl
ret
adc
adc
pop
test
lods
testb
cmovbe
sub
les
xor
add
push
jl
sub
pop
icebp
xchg
xor
or
pop
sbb
icebp
ja
call
mov
fldcw
stc
ret
bound
sti
dec
pop
into
cmp
popf
shl
mov
imul
sbb
mov
test
dec
loopne
mov
xchg
mov
adc
push
int3
mov
xor
inc
mov
xchg
insl
cltd
enter
pop
aaa
jl
jmp
xchg
push
mov
push
sub
cmpb
adc
xor
inc
int3
xor
daa
sahf
pop
stos
shr
outsl
fsubrs
adc
je
in
cmp
mov
jne
rolb
popf
lcall
jo
mov
cmpsb
test
test
add
movsb
ret
xor
xchg
jns
fsubrl
or
pop
stos
lahf
outsl
adc
inc
rolb
jmp
mov
mov
std
or
and
insl
pop
mov
cmpsb
lea
roll
in
push
pusha
xchg
cmp
rcrl
dec
xchg
dec
jns
push
lahf
add
cmp
and
stc
push
out
int3
jge
pop
fmuls
xor
and
mov
cmc
pop
fcompl
xchg
mov
adc
lahf
rolb
xchg
mov
aas
scas
test
pop
inc
lret
mov
jle
call
inc
fsubs
int
pushf
add
adc
sub
repnz
mov
sahf
loop
pop
xor
ljmp
xchg
movsl
jmp
ja
stos
or
xchg
mov
dec
mov
or
add
sub
mov
pop
mov
adc
cltd
fcmove
cmpsl
cmp
push
in
movsl
mov
int3
arpl
lock
aad
inc
sub
sarl
repz
mov
mov
ljmp
pop
jae
hlt
stc
imul
imul
mov
ret
pop
outsl
adc
es
inc
das
mov
lahf
pop
pop
mov
xchg
xchg
leave
lods
inc
pusha
push
out
in
repnz
cmp
std
loop
mov
sub
enter
pop
out
sbb
movb
sbb
mov
fwait
push
mov
ret
ljmp
repz
fld1
jb
add
notl
sti
xchg
xor
daa
xchg
enter
pushf
stos
xor
lret
mov
sub
dec
pusha
das
idivl
fidivl
enter
pop
testl
stc
add
push
loopne
mov
inc
mov
cld
mov
add
xor
xchg
dec
and
push
fbstp
adc
sbb
sbb
imul
gs
mov
iret
jns
sub
ljmp
fbld
jno,pn
out
and
sub
mov
test
shlb
jnp
aaa
lret
inc
jg
xlat
imul
or
mov
fistps
push
aaa
lock
xchg
mov
inc
loopne
outsl
out
fs
lret
daa
stos
push
movsl
cwtl
test
aad
insb
ret
repz
dec
dec
sbbb
cmc
cli
xor
fwait
outsl
push
dec
push
aaa
popf
mov
repz
sub
loopne
mov
es
xchg
dec
push
leave
cmp
neg
aas
int
fdivrs
mov
jbe
arpl
mov
clc
jmp
add
jecxz
negl
in
adc
xchg
pop
sarl
dec
inc
dec
lock
addr16
jae
mov
pop
dec
dec
pop
enter
nop
inc
cmp
xchg
fwait
xor
mov
icebp
mov
aam
sbb
pop
mov
or
push
cmp
cmpsl
ficompl
arpl
jg
mov
pxor
push
xchg
cltd
fldl
mov
outsb
js
cld
mov
fs
sub
je
inc
mov
or
idivb
stc
fisubrs
test
xor
lods
and
pop
lcall
jne
pop
mov
push
aaa
popf
mov
repz
jmp
xchg
enter
dec
xchg
imul
fdivrs
jnp
imul
inc
fimuls
inc
lahf
pop
dec
rcrl
adc
pop
or
dec
adc
clc
jl
cwtl
pop
lahf
lret
hlt
jge
pop
dec
aaa
test
jnp
in
push
nop
in
add
pop
mov
xor
xor
outsl
sub
jmp
rcll
out
andl
scas
ljmp
xchg
dec
insl
mov
mov
xchg
adc
add
xchg
mov
sub
in
pop
xor
mov
cmp
adcl
xchg
lahf
push
xchg
outsl
lahf
push
cs
inc
jle
inc
loop
out
cmpsl
xlat
and
cmpsl
out
adc
mov
add
sub
into
push
lods
jns
std
cmpsl
inc
sbb
cmpsl
ret
fsin
repz
mov
shlb
sahf
ret
in
sbb
lea
jno
adc
mov
xor
inc
cmc
inc
fwait
xchg
xor
mov
inc
inc
addr16
xchg
lcall
adc
push
cli
fcom
cmp
xor
cmp
clc
ljmp
lea
pop
mov
arpl
divb
push
aad
add
jae
pop
or
and
mov
pop
cmp
xor
adc
in
in
lock
mov
xchg
shrl
ret
popa
movsl
push
mov
scas
lret
testb
cmpsl
push
aad
inc
lcall
and
fstpl
jg
push
fucomi
stc
mov
mov
add
inc
fcoml
jg
adc
idiv
mov
ror
out
out
push
addr16
inc
test
pop
dec
into
push
lods
mov
out
shll
jne
arpl
lds
mov
mov
add
cmp
lods
imul
xor
popa
mov
cld
sarb
sub
fistpl
mov
je
mov
fisubl
nop
xlat
mov
dec
repz
cmp
test
mov
nop
xor
sbb
or
cli
ror
arpl
mov
xor
addr16
rcr
or
inc
mov
adc
mov
fwait
cmp
or
popf
lret
xchg
sub
loop
xchg
dec
jae
sub
sbb
mov
ds
div
push
stos
negl
add
mov
test
and
enter
lods
jne
fildl
lods
push
or
mov
xchg
adc
inc
and
xchg
std
mov
inc
jl
cmp
mov
sub
push
inc
and
cmpb
push
fs
cmp
sub
cmpl
jg
jmp
mov
sbb
sub
mov
and
jle
js
sahf
divl
xchg
rcr
jno
fsubrs
mov
ja
fnstenv
test
mov
or
xor
jg
inc
adc
std
push
xor
pushf
xchg
pop
inc
cmp
out
lret
push
add
mov
lret
inc
adc
fwait
inc
pushl
sub
or
inc
cmp
int
aas
in
pop
xor
xor
dec
mov
icebp
and
pop
std
lret
dec
xchg
cltd
lret
add
aas
cmc
test
es
mov
xchg
add
adc
add
or
fidivl
dec
add
mov
mov
es
mov
in
pop
cli
mov
or
inc
add
or
mov
cmpsl
cltd
add
mov
mov
aaa
sbb
sub
or
lds
jg
sti
int3
mov
sbb
xor
test
in
jno
dec
xchg
fstps
jnp
clc
cmpsl
jge
lret
lock
sbb
add
lods
in
sbb
xchg
sti
scas
push
lea
sbb
jle
push
add
push
test
scas
sbb
cmp
clc
cmc
ljmp
ljmp
and
mov
xor
test
jb
les
scas
cmc
sbb
lods
xchg
dec
shll
mov
mov
or
es
push
or
fsts
movl
enter
jle
inc
loop
cmpsl
xlat
add
inc
cmpl
adc
out
scas
addr16
ret
inc
stos
sub
mov
sbb
popf
stos
add
aam
pop
push
mov
popf
mov
inc
rcrl
icebp
mov
jnp
mov
les
xor
or
cmp
scas
pop
test
popf
inc
xchg
adc
xchg
push
in
mov
into
pushf
sbb
pusha
add
fildl
dec
add
sbb
fsubrl
xchg
roll
jnp
rorb
ret
into
lret
fisubrl
jne
and
shrb
mov
insl
aam
fs
and
sbb
cltd
int
sub
cmp
cwtl
push
mov
jg
pop
in
lds
cmp
inc
inc
adc
jp
sub
test
bound
lcall
loopne
jl
cmp
fsubl
jmp
mov
int
mov
addl
out
lret
stos
mov
icebp
push
xor
jns
xchg
je
cmp
iret
arpl
push
test
sbb
ljmp
mov
adc
xchg
cwtl
dec
inc
int
imul
jmp
sti
mov
xor
mov
in
pop
push
mov
stos
arpl
xchg
sub
add
outsb
ss
mov
or
and
sub
test
test
push
repz
out
pusha
sub
cmpl
xor
out
xchg
dec
mov
add
pop
pop
mov
sbb
or
or
mov
adc
xorl
dec
push
inc
add
jge
jb
and
ljmp
dec
out
repz
ds
adc
test
pushl
add
or
imul
cltd
ljmp
sahf
sbb
mov
jle
popf
iret
and
mov
mov
or
push
cmp
jne
sub
adc
cmp
sbb
hlt
push
pop
stos
aam
icebp
fisttpl
sub
cmp
fadds
mov
xlat
aas
std
andb
rclb
mov
add
daa
cltd
inc
sbb
xor
mov
out
outsl
sub
iret
sub
and
xchg
push
xor
pop
xor
fmuls
dec
mov
into
in
cmp
imul
out
or
sub
adc
hlt
in
test
fadds
aaa
je
arpl
clc
lea
std
cmp
sbb
test
xchg
and
jle
pop
adc
sbb
js
jns
pop
out
out
gs
push
aam
mov
lcall
lods
lods
out
xor
pop
adc
fwait
lea
iret
sbb
cld
je
test
stos
jns
dec
xchg
dec
jecxz
mov
roll
dec
lret
lea
jns
sahf
negl
dec
sub
icebp
push
std
xor
ds
aas
push
repz
call
sarb
sub
inc
cmp
outsb
xor
pop
nop
pop
adc
mov
mov
inc
cmpsb
xchg
adc
ds
push
inc
sub
inc
mov
mov
jno
scas
inc
and
push
mov
xor
sub
push
pop
sub
adc
cltd
sbb
push
hlt
push
stos
pop
or
xorl
jne
jo
movsb
xchg
pop
jnp
ret
cmp
fucomi
sbb
add
ss
aas
cmpsl
push
sbb
inc
pop
xchg
out
jo
xchg
add
inc
cld
jp
jns
pop
xor
push
scas
xlat
insb
fldl
cmpsb
iret
loop
mull
push
xor
pop
ret
push
pop
out
mov
xchg
sbb
lods
jae
lea
cmp
cmpsb
jecxz
arpl
xchg
push
push
clc
xchg
dec
xchg
add
sbb
shrb
mov
test
ret
test
jmp
pop
jno
iret
sbb
xchg
int
add
fwait
push
loop
inc
fstps
test
dec
mov
pop
in
mov
outsb
mov
xor
dec
ja
mov
fcoms
sbb
inc
mov
sti
mov
les
sahf
push
int3
shll
xchg
add
dec
push
mov
dec
or
mov
push
dec
xor
repz
int3
push
xchg
mov
or
inc
xchg
pop
out
xchg
int3
inc
jl
cmc
cmp
xchg
fs
rcrl
fldl
jne
pop
xchg
clc
loop
add
fistl
pop
jbe
push
dec
fdiv
mov
inc
pop
push
dec
pop
or
aam
adc
mov
repz
mov
imul
cmp
jle
incl
inc
or
repnz
in
ja
fwait
pushf
xchg
sbb
add
leave
push
add
adcl
xchg
mov
hlt
outsl
sub
lods
push
jnp
push
inc
sbb
inc
lock
push
inc
pop
daa
jae
jmp
shll
repnz
loope,pt
les
push
es
inc
sbb
push
repnz
arpl
jmp
out
mov
add
add
mov
push
popa
outsl
mov
inc
popf
scas
inc
fwait
pusha
sbb
cmpb
in
pop
negl
sub
or
out
das
daa
xchg
and
mov
xchg
mov
adc
jbe
cli
mov
fbld
fwait
sbb
mov
lret
bound
sbb
shlb
loope
add
mov
adc
cs
dec
xor
pop
cmp
test
mov
inc
inc
std
xor
xor
repz
cs
add
push
or
xor
imul
pop
rol
push
cmp
imul
ret
ror
addr16
movsb
add
adc
js
es
dec
stc
mov
into
mov
js
iret
push
or
mov
insl
shll
mov
cmpsl
add
imul
test
mov
nop
outsb
sub
add
mov
inc
int3
bound
mov
adc
jnp
in
testl
aad
jo
adc
enter
or
pop
pop
sbb
or
ds
cmp
xor
je
mov
cmp
mov
mov
or
cld
stos
iret
ss
movl
push
fmull
sbb
xchg
rolb
leave
addr16
aad
jno
xor
inc
insb
aam
jecxz
inc
xor
cs
xor
adc
arpl
rcll
fisttps
fsubrl
adc
rcrb
sub
pop
stos
push
push
xor
mov
mov
xchg
pop
and
jb
push
dec
dec
rcr
lret
pop
pop
insb
fcomps
lcall
inc
idivb
push
and
xchg
adc
insl
adc
frstor
mov
sarl
dec
pusha
push
dec
in
stc
stos
cmp
jnp
fwait
leave
and
fsubp
jle
xchg
xchg
sbbb
bound
xchg
sbb
aaa
sub
push
xchg
push
mov
and
insb
jbe
xorb
pop
test
and
enter
shlb
les
jge
adc
sub
aas
add
xchg
mov
das
sarb
andl
fists
inc
xchg
loopne
mov
push
shl
inc
dec
nop
fildl
sbb
movsl
fdiv
cmp
xor
xor
pop
test
xor
bound
adc
mov
fldt
inc
mov
pop
mov
adc
lahf
cmp
cltd
leave
sbb
sub
stos
mov
inc
xorb
mov
jnp
push
pusha
les
jg
mov
dec
sbb
cmp
pushf
aaa
mov
xor
adc
inc
std
movsb
test
adc
adc
mov
ret
pop
out
mov
shll
popf
pop
cmpsl
mov
icebp
xchg
inc
jns
inc
mov
out
filds
out
repnz
cmpsl
or
xor
popa
cltd
lock
shll
stc
lea
dec
std
jb
inc
jnp
push
repnz
repnz
mov
adc
fs
test
mov
mov
adc
cs
negb
mov
inc
ljmp
mov
aaa
mov
xlat
mull
les
fsub
sbb
enter
dec
push
shrl
mov
aam
ret
pop
cli
lds
xchg
outsl
adc
inc
mov
in
jne
pop
xchg
cmp
ret
cmp
push
insb
mov
imul
push
pop
testb
cmpsl
push
cmc
sbb
pop
mov
mov
mov
push
cltd
sbb
sbb
push
or
add
mov
aas
cmpsl
and
or
or
les
dec
loopne
xchg
arpl
jecxz
es
ret
mov
repz
movsl
cmp
out
xchg
ret
fbstp
addb
dec
add
fs
ret
sbb
lods
push
and
add
xor
gs
jecxz
mov
std
pushl
bound
mov
rolb
ret
mov
xor
andb
sub
jecxz
pop
orb
adc
or
arpl
insl
ds
inc
pop
push
rolb
ljmp
lcall
dec
push
out
mov
jb
arpl
stos
hlt
sub
stos
push
cmc
or
mov
imul
test
pop
test
sbb
mov
cmp
pop
cmp
bnd
clc
mov
fs
add
paddw
stos
jl
lret
jae
enter
js
mov
adc
jecxz
pop
pop
push
cmp
and
lds
xor
test
daa
pop
cltd
pop
std
cwtl
sbbb
cmp
push
sub
mov
inc
test
mov
add
fldpi
iret
pusha
int
dec
mov
lahf
movb
dec
ret
out
mov
int
jle
pop
inc
jl
and
fisubs
hlt
inc
fwait
jmp
cmp
rcll
movsl
cld
jg
xchg
repz
fwait
ss
cwtl
lret
inc
sub
rcrb
sub
cmp
lods
push
pop
lret
loop
jecxz
mov
scas
dec
inc
ljmp
in
gs
addl
jp
into
xchg
mov
xor
push
push
xchg
insb
lds
add
fcmovnb
into
jne
into
pushf
js
push
ja
add
dec
lret
fsubrl
xchg
fisubrs
xor
movsl
jns
aas
fiaddl
or
jns
pop
clc
xchg
cmp
roll
movsl
cwtl
or
insl
je
icebp
pop
xor
fwait
call
mov
jnp
stc
movsl
fstps
mov
pushf
mov
mov
dec
inc
imul
cmpsb
xor
dec
mov
cmc
bnd
mov
imul
cmp
mov
std
clc
sti
pop
or
xor
jae
loope
cwtl
adc
inc
mov
cld
add
addr16
xchg
mov
cwtl
push
xlat
jecxz
popf
cli
mov
cmpb
test
call
inc
sub
shrl
frstor
pop
mov
nop
mov
mov
outsb
test
jge
xchg
mov
mov
mov
add
std
fwait
dec
xchg
cltd
push
pop
fmuls
pop
pusha
and
fstpt
mov
fs
insl
xor
cmpsl
add
pop
jno
pop
fdivp
adc
add
sahf
daa
xchg
sbb
test
xchg
js
mov
out
cld
mov
mov
flds
sahf
jecxz
pusha
jo
inc
pop
lods
lea
lds
enter
insb
fstl
movl
jae
push
mov
sarl
lock
xor
stos
and
leave
test
shll
out
sbb
mov
std
je
mov
jmp
ss
movnti
into
and
cwtl
lret
pop
push
icebp
lock
ficoml
pushf
sub
push
lds
mov
pop
aaa
pop
jno
movsb
inc
and
pop
bound
mov
nop
dec
mov
out
mov
pop
xchg
jg
mov
jl
roll
fwait
lods
mov
inc
push
int
lock
jae
lods
mov
jmp
cmp
fs
jge
je
pop
xchg
push
lahf
fdivs
adc
notl
mov
addr16
test
repnz
cmp
popa
jbe
cli
xor
dec
push
fwait
cld
jg
sbb
sub
out
addr16
mov
fdivs
mov
jns
iret
add
sbb
test
xor
push
push
mov
arpl
lret
loopne
inc
cmpl
add
fsubs
mov
lcall
es
jecxz
mov
fsubrl
cwtl
push
hlt
sub
push
or
xlat
push
mov
enter
dec
sbb
shrl
fildll
dec
pop
and
mov
sub
dec
les
popa
shll
mov
inc
xlat
cwtl
pop
pop
cmc
mov
push
jmp
sbb
ficomps
jb
ds
movsb
push
int3
jne
adc
dec
pusha
push
aaa
cmpsb
mov
fistps
jg
sbb
leave
ja
in
or
dec
cli
stos
cwtl
xchg
add
je
shr
xchg
imul
mov
push
adc
add
stos
repz
ret
mov
pop
jae
gs
inc
cld
fcomps
push
bound
sbb
pop
ss
pop
aaa
sbb
loop
sahf
xchg
add
lret
pop
xor
imul
popa
push
test
add
stos
shll
mov
loopne
rorl
ds
and
lock
pop
mov
or
ja
adc
outsb
mov
arpl
dec
mov
jle
dec
push
int
lret
fs
push
pop
das
lret
push
inc
xor
sub
lea
xor
sub
fwait
aam
mov
pushf
push
pop
insb
dec
imulb
pop
mov
jae
int3
xor
mulb
and
and
mov
jns
push
pop
jmp
xchg
jne
outsl
ret
ficoms
xchg
cmc
mov
fwait
dec
or
call
aam
xor
add
ja
push
cltd
sbb
int
adc
xchg
inc
mov
ret
pop
test
lods
int
pop
mov
pusha
jo
rcr
call
xchg
inc
mov
rorl
lret
jno
insb
inc
inc
xchg
rclb
xchg
jge
dec
daa
mov
jno
xchg
sub
mov
addb
inc
lds
jl
xor
mov
add
fdivs
adc
hlt
jge
fimull
and
or
xor
lock
enter
inc
nop
mov
les
arpl
or
mov
mov
pop
jbe
mov
push
lret
and
daa
adc
and
mov
xchg
ret
aaa
lcall
xorb
scas
xor
mov
fcmovne
stc
rorb
pushl
cmp
js
std
inc
add
xchg
in
jl
cwtl
dec
cwtl
sbb
or
push
aaa
ret
cltd
pop
out
push
enter
test
and
cmpb
cmp
out
cmp
into
cmp
enter
dec
inc
xor
mov
inc
push
and
adc
pop
push
popa
sub
das
sbbl
imul
int
xchg
je
jle
sti
jno
test
clc
push
test
cmp
scas
mov
mov
and
sbb
incb
in
push
xchg
xlat
stos
les
fstpt
push
adc
je
xor
mov
bound
sbb
mov
inc
or
mov
xor
pop
in
lea
lds
jnp
push
pop
pop
pop
mov
cltd
dec
xchg
mov
pop
roll
sub
add
xchg
insb
leave
push
repnz
lcall
adc
idivl
inc
sbb
rorb
mov
mov
or
insb
cmpsb
push
and
mov
ljmp
xchg
pop
out
mov
popa
jmp
aam
dec
cmp
or
int
imul
aam
ret
popa
mov
pop
xor
std
std
sbb
dec
inc
andl
mov
aam
inc
inc
dec
out
shl
mov
in
ja
adc
or
xchg
stos
stos
clc
repnz
cli
or
xchg
test
xchg
jne
mov
xor
ret
rcrb
lret
cmpsb
xchg
test
mov
test
pushf
jnp
jge
pop
jne
add
push
mov
stos
adcl
jno
stos
dec
movsb
push
shl
pusha
push
mov
mov
push
or
inc
fwait
imul
cs
cmp
jl
jnp
out
or
jl
pop
les
gs
aam
imull
aam
js
lods
xlat
or
out
xchg
shl
lea
data16
mov
popa
aam
dec
xor
adc
xchg
jl
sub
aas
mov
xchg
mov
ljmp
cmp
shrl
pop
stos
jae
fwait
jp
lret
test
in
scas
inc
leave
lret
pop
mov
in
inc
mov
les
mov
mov
pop
out
push
sub
inc
mov
leave
testl
dec
pusha
sub
stc
dec
pop
lcall
loop
mov
push
int3
xor
bound
jnp
pop
pop
mov
pop
aam
inc
push
push
shlb
xor
push
xor
std
fdivr
push
lret
cltd
jbe
xor
or
inc
dec
push
aam
fildl
rorb
aas
aad
mov
jnp
add
sub
cli
fbld
inc
pop
push
xorl
sbb
and
mov
rcrl
push
lahf
fucomp
push
cltd
and
cmpsb
cld
orl
mov
pop
mov
ret
test
jmp
fs
sti
cmc
mov
dec
int3
add
inc
hlt
pop
sbb
aas
cmpl
dec
ret
and
pop
ljmp
inc
into
lret
mov
cli
movsb
int
jmp
adc
jns
mov
mov
pop
dec
mov
movsl
pop
or
dec
cwtl
lret
movsl
dec
les
push
adc
test
jle
jns
inc
cmp
and
dec
lahf
cmp
push
mulb
and
movsl
jge
push
fwait
push
push
inc
scas
xchg
stos
lds
push
mov
mov
sbb
xchg
dec
push
dec
adc
push
fucomi
repnz
xchg
dec
fistps
jno
dec
sti
icebp
arpl
ret
pop
js
inc
int3
fcmovb
add
push
in
adc
sub
or
xchg
outsl
dec
sub
push
mov
pop
jne
inc
jbe
push
jns
insl
xchg
inc
mov
jne
and
loop
jmp
cmp
hlt
xor
xchg
xchg
imul
fdivrs
jnp
imul
inc
fimuls
inc
lahf
pop
dec
rcrl
adc
pop
pop
dec
sbb
outsb
fdivrl
es
add
adc
pop
imul
cmpl
mov
pushf
in
imul
add
cmp
arpl
jne
dec
movsb
pop
cs
mov
gs
into
mov
jge
and
push
pop
inc
sbb
gs
xchg
stos
lods
fdivr
aad
inc
sbb
push
inc
fidivl
cmp
push
pop
cltd
push
arpl
or
add
push
cmovg
sbb
movsb
lods
repz
adc
xchg
jnp
std
mov
jge
pop
in
shrl
sub
movl
call
cmc
adc
insl
mov
cmp
xchg
xor
loopne
jb
add
cwtl
aam
call
mov
push
dec
mov
popf
pop
adc
rorb
int3
fwait
mov
mov
adc
push
jl
mov
stos
sbb
cmpsl
out
sbb
lea
shl
imul
cmpl
into
cli
add
iret
mov
int
mov
jmp
mov
and
pushf
mov
inc
cmpl
jl
pop
sub
scas
xor
aam
adc
and
sub
enter
sbbl
ret
xorb
jmp
cmp
sub
xchg
xchg
add
adc
pop
inc
ret
push
add
dec
out
xor
push
je
dec
mov
les
add
pop
xchg
jae
jno
pop
inc
lret
xchg
icebp
xlat
fadd
cmp
sbb
fildl
ja
lret
ret
test
push
leave
lds
outsb
dec
loope
aad
lods
adc
rcrl
or
je
add
pop
mov
and
or
inc
ret
testl
or
adc
fnstenv
cwtl
pop
sub
xchg
cmp
outsb
or
dec
cmc
data16
lds
mov
hlt
test
lods
popf
popf
inc
dec
fcom
push
adc
push
and
mov
xchg
cmp
inc
cwtl
push
mov
divb
lock
out
aas
cmpb
mov
pop
mov
jbe
cwtl
movsb
mov
clc
test
dec
frstor
scas
xor
and
ret
fistpl
hlt
pushf
mov
aaa
outsb
lret
clc
mov
and
stos
push
mov
fdivrs
pop
add
stos
or
xchg
subb
sti
push
in
test
int3
xchg
std
sbb
mov
jno
inc
inc
and
dec
test
lock
sbb
mov
fcoms
into
pop
stos
pop
lods
mov
add
mov
pop
or
xchg
dec
cmpsb
mov
imul
stos
dec
jecxz
mov
movsl
inc
imul
leave
sbbl
dec
lret
inc
aad
lcall
pop
jnp
adc
fstpt
sub
add
dec
jae
xor
imul
sbb
sbb
or
fistpll
xor
pop
outsb
xchg
cmpb
push
lret
and
mov
outsb
dec
fmul
pop
js
and
ja
mov
xchg
in
cli
mov
std
inc
mov
sbb
cmp
in
jle
mov
je
mov
jg
mov
fdivrl
sub
lahf
pop
pop
lods
gs
vcmpps
mov
sub
cmc
or
lds
jecxz
cmp
scas
les
push
popa
pop
mov
jo
les
sbb
sub
jecxz
mov
jmp
ds
in
movl
mov
shrb
fsubs
leave
pop
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
int3
adc
xor
adc
jmp
mov
and
inc
hlt
sbb
in
push
pop
jg
xchg
popf
aad
clc
rcr
and
daa
sahf
repz
cmp
hlt
icebp
xstore-rng
cmpsl
inc
rcrl
mov
adc
mov
push
push
mov
rol
jecxz
cmpsb
mov
out
pop
test
mov
inc
fld
jl
cmpb
mov
cltd
push
pop
sbb
jge
outsl
pusha
add
push
in
and
adc
lret
inc
imul
jp
lahf
adc
shll
mov
outsl
aad
sbb
push
inc
jbe
sub
mov
pop
dec
xchg
dec
pushf
mov
xchg
sbb
aas
jg
mov
add
aam
adc
push
stos
divb
cmp
push
mov
jl
push
test
dec
lret
ret
gs
shll
inc
les
das
leave
pop
cmp
jecxz
pushf
pop
ja
ret
fistl
jno
outsl
xchg
icebp
repz
cld
movl
pop
ja
daa
divl
fcom
fisubs
pop
mov
stc
sbb
lahf
cmp
mov
lcall
arpl
dec
xor
pop
loope
lret
inc
add
fistpl
cmp
mov
ds
mov
adc
popf
orl
and
and
add
jge
loopne
rcll
rol
cs
filds
dec
inc
pop
jnp
call
insl
pushf
sbb
cmp
lods
push
dec
push
test
xlat
and
shlb
ds
cmc
sub
cmpsl
jno
pop
out
adc
pop
and
add
cmp
mov
imul
cwtl
fwait
jmp
cli
cmp
push
jns
enter
mov
cwtl
lahf
ficoms
cmp
sahf
pop
mov
loop
fldl
fs
add
dec
sbb
sahf
add
mov
mov
push
xor
cwtl
data16
sbb
xchg
popf
mov
jbe
xlat
mov
adc
push
iret
push
sbb
adc
test
and
aad
fisubrs
sbb
mov
adc
push
loopne
out
fcmovbe
mov
pop
cmp
daa
inc
mov
add
push
xlat
jne
add
addr16
gs
cmp
movsb
fbstp
push
mov
adc
pushf
cmp
out
pop
xor
loop
mov
sti
cmp
int3
es
mov
xor
roll
addb
adc
push
mov
shll
lods
sub
repnz
push
mov
mov
xor
lds
cmp
inc
push
fdivrl
rcrl
sarb
incl
or
jns
jle
sub
adc
cmp
jb
fstps
adc
mov
aam
fldcw
movsb
sbb
or
insl
shll
popf
test
icebp
inc
out
scas
pop
or
cltd
and
dec
or
out
mov
or
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
je
or
pop
popf
mov
xchg
dec
aas
iret
xor
fwait
lahf
nop
pushl
dec
sub
mov
sbb
xchg
cmp
test
pop
sub
mov
flds
repz
roll
ss
sbb
hlt
add
in
lcall
sti
dec
push
pop
or
js
inc
int3
cmpsl
dec
data16
rcr
sub
jo
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
fcoms
xor
mov
mov
cli
cmp
lods
jmp
cli
roll
dec
xchg
repnz
cmpsl
fcmovnu
and
cld
pop
jmp
stos
ret
ja
leave
in
pop
leave
push
outsl
mov
cmp
mov
dec
add
leave
lcall
mov
cs
scas
or
sub
sbbl
sub
cli
and
in
int
fisubrl
imul
ljmp
popf
loop
fcoms
insl
rcll
and
test
inc
add
mov
push
idiv
adc
mov
mov
inc
enter
inc
sbb
and
mov
jno
xchg
not
int3
out
dec
loopne
push
movsb
mov
daa
adc
cmpsl
or
adc
lcall
les
jb
cli
dec
mov
xchg
sbb
jae
mov
pusha
pop
into
cwtl
fists
je
ficoml
mov
out
jg
lahf
cwtl
cmp
pop
pop
push
dec
mov
jecxz
mov
add
mov
aam
cmp
sahf
sbb
sub
int3
pop
adc
psrld
sub
mov
adc
pop
sti
inc
sbb
sub
shrl
frstor
imul
fsubs
inc
jbe
jp
les
inc
push
mov
xchg
xchg
pop
out
push
mov
cmovb
nop
sarb
cmp
cltd
in
dec
insb
jp
scas
jg
clc
fbstp
mov
aad
jne
es
fadds
stos
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
test
jae
sub
or
mov
js
mov
mov
xor
lods
imul
sub
mov
imul
dec
pusha
cwtl
push
mov
test
cmp
push
mov
fdivs
pop
cmpsb
fwait
mov
mov
pop
jbe
mov
push
lret
and
daa
adc
and
mov
outsb
push
mov
test
add
inc
and
lods
mov
std
push
neg
fwait
adc
or
fucomi
repnz
sbb
loopne
xchg
and
mov
inc
cmpsl
out
adc
out
and
orl
scas
xor
movsl
add
cmpsl
lods
popa
xchg
fwait
inc
movsb
inc
cmpsb
outsl
push
fldenv
inc
adcl
push
adc
xchg
or
in
mov
dec
xchg
pop
aaa
hlt
pop
mov
jb
insl
dec
cmpsl
dec
mov
pop
pop
jmp
call
mov
add
loopne
cmp
in
lahf
dec
or
cmp
sbbb
mov
cmpsb
cmp
outsb
mov
arpl
aam
push
or
xlat
push
mov
pop
clc
and
xor
pop
and
jnp
cld
lods
test
sbb
in
cwtl
nop
pop
scas
lcall
xchg
addb
lcall
aad
ficomps
aad
push
dec
in
sahf
cwtl
push
sub
mov
sub
scas
mov
inc
bound
icebp
filds
pop
aas
cmpsl
push
mov
xchg
idiv
mov
mov
out
inc
cli
jb
mov
aaa
xchg
mov
add
inc
movsb
inc
add
fwait
pushf
icebp
aaa
xchg
mov
insl
mov
xor
into
sbb
test
mov
shlb
int3
out
mov
adc
adc
outsb
jp
pop
or
inc
dec
pop
mov
movsl
mov
adc
clc
jnp
mov
lock
mov
pop
sub
jno
sarb
test
push
adc
jge
lret
pop
shll
mov
outsl
sub
pusha
adc
pusha
mov
mov
push
dec
xor
fmulp
addr16
lret
orl
icebp
sbb
insl
ret
lea
in
fwait
push
push
push
push
mov
dec
jns
shll
mov
sub
loop
repnz
jg
rcrl
inc
cltd
repz
into
adc
jns
pop
pop
inc
add
pop
fsubr
fstps
mov
mov
pop
notl
cmpsb
dec
pop
pop
xchg
pop
cmp
and
adcl
mov
push
je
test
inc
push
cli
add
insb
jo
outsb
xchg
loope
jle
pop
pop
mov
les
lods
sub
xlat
inc
movsl
inc
mov
cmp
mov
pop
scas
mov
aad
pop
sarl
or
cmpsl
into
sbb
lds
or
lods
lret
xchg
and
lret
popa
repz
nop
rcll
in
dec
repnz
imul
xchg
adcb
dec
cmp
mov
inc
icebp
pop
lds
jnp
mov
lods
sub
popa
or
xchg
jbe
xor
jno
and
jp
xor
and
xor
xchg
out
mov
and
fcmovnb
call
inc
sbb
je
jge
jns
dec
and
inc
les
and
sbb
movsb
fidivrl
jb
stos
add
aam
pop
push
mov
popf
mov
inc
rcrl
icebp
mov
jnp
mov
les
xor
or
cmp
scas
pop
test
popf
inc
xchg
adc
xchg
push
in
mov
fsubs
lahf
jnp
loopne
add
incl
add
mov
sub
pop
loop
dec
push
sbb
aam
xor
fisubrl
lds
lret
imul
lea
push
rcl
mov
jns
cs
xchg
or
out
test
cmpsb
test
mov
cmpsl
push
pop
add
pop
adc
fs
ja
int3
in
jnp
lods
inc
and
pusha
scas
xlat
fucomi
mov
lock
scas
ficoms
lods
jo
jle
pop
je
in
idivl
sub
xor
addr16
and
pop
jl
iret
pop
in
xchg
ret
pusha
test
fildll
adc
out
mov
rcll
lea
aad
ljmp
aam
aaa
fs
or
loope
jl
and
push
in
dec
leave
dec
inc
mov
pop
cmp
or
jae
sub
or
in
mov
mov
and
repz
dec
xchg
test
sbb
lock
inc
jo
aas
ficoml
mov
dec
sbb
adc
lret
fs
push
pop
sub
adc
jne
pop
inc
sbb
dec
and
dec
dec
popf
lret
insb
push
cmp
mov
outsb
test
sbb
roll
pop
pop
sub
pop
stos
push
pop
scas
dec
repz
sarl
outsb
shl
mov
fisttpll
cmp
cltd
inc
mov
loope
add
push
pop
push
aam
and
popl
push
out
jp
cltd
pop
mov
out
adc
shll
pop
mov
xchg
cmp
incb
fs
mov
sbb
dec
shll
and
push
add
jle
int
insb
aad
aaa
mov
adc
pop
movsl
faddp
loopne
call
nop
lods
jmp
aad
mov
clc
bound
mov
lret
jecxz
aas
pusha
inc
nop
sbb
adc
add
out
dec
leave
fsubrl
sbb
mov
push
mov
pop
stos
adc
lret
fists
push
icebp
push
inc
and
ss
lret
scas
pop
test
fnsave
cmp
pushf
scas
push
negl
les
pop
call
xchg
dec
repnz
mov
push
fsts
cli
lahf
inc
pusha
ficomps
cli
push
or
xchg
sti
dec
mov
cmpsl
adc
popf
lea
mov
jo
inc
cmp
or
out
inc
cli
jb
mov
aaa
xchg
mov
add
inc
movsb
inc
add
fwait
pushf
icebp
aaa
xchg
mov
insl
mov
xor
into
sbb
test
mov
shlb
int3
out
mov
adc
adc
outsb
jp
pop
or
inc
dec
pop
mov
roll
xor
std
repz
add
mov
hlt
mov
mov
xchg
push
mov
pop
shlb
cmp
jg
iret
xor
ret
insb
mov
and
dec
xor
push
iret
orl
inc
push
and
pop
mov
adc
dec
pop
push
sub
xchg
cmpsl
xchg
push
pop
push
jg
mov
outsb
fstps
jl
inc
and
xchg
push
mov
mov
push
cmp
mov
dec
mov
inc
pop
div
dec
adc
pop
mov
ret
inc
das
je
pop
sbbl
inc
and
jnp
add
pop
outsb
or
sbb
sub
cmp
inc
xlat
addr16
push
fsts
movl
enter
cli
inc
int3
pop
sub
mov
pop
xor
adc
jecxz
inc
mov
push
cltd
or
push
sub
jecxz
jnp
jae
cmp
add
jae
out
aas
xlat
xchg
insb
cmp
popf
sbb
xchg
push
in
rorl
aad
xchg
cmp
xor
mov
or
fwait
sbb
lcall
insl
outsl
mov
pop
jle
movsb
aas
xor
movsl
rcrl
imul
inc
dec
sub
icebp
adc
push
stos
fnsave
sti
xchg
fldt
fstl
std
gs
xchg
cmp
movsl
fists
jge
idiv
and
push
cwtl
aam
mov
xchg
pop
xchg
movl
cltd
and
lahf
cmc
aad
inc
jns
ret
adc
flds
aaa
movsb
or
lock
inc
cmpsl
shrl
fistpl
dec
jecxz
push
pop
lea
sbb
pop
shlb
sbb
push
mov
jmp
jle
pop
jge
outsl
sub
jp
xor
in
cltd
mov
gs
and
and
lds
mov
sub
jnp
fildl
imul
cmp
je
popa
roll
inc
push
in
pop
mov
sub
push
cld
xor
or
movl
adc
xchg
jnp
pop
sub
and
or
nop
popf
imul
outsl
shlb
lret
adc
sub
lods
cs
hlt
jae
mov
dec
xor
inc
or
in
in
adc
mov
inc
icebp
dec
or
cmc
xorb
xor
jp
pop
push
jmp
inc
or
fwait
out
stos
stos
call
inc
or
int3
bound
fbstp
cld
add
inc
mov
je
xchg
aad
adc
cmpb
dec
xchg
cmp
fcmovnb
hlt
lret
daa
in
cmp
sahf
pop
inc
fistps
adc
sbb
push
pop
dec
test
and
pop
mov
mov
mov
pop
xchg
jmp
pop
adc
inc
sti
push
pop
mov
imul
aam
push
push
inc
adc
aas
aas
shll
inc
push
sbb
mov
add
xchg
mov
hlt
scas
inc
fstpl
movsl
adc
sbb
int
pop
mov
leave
ljmp
add
test
lods
loopne
or
fwait
add
in
sbb
lahf
cmpsl
or
repnz
aam
adc
mov
inc
in
xchg
push
sub
mov
inc
and
es
stos
insb
lock
cmpsb
mov
xor
sbb
push
mov
je
pop
imul
mov
mov
stc
lock
and
cmp
inc
xorl
jns
arpl
push
clc
out
fwait
inc
test
cltd
xor
jae
mov
pop
in
dec
cmp
bound
clc
add
ret
pop
fwait
icebp
cld
jg
divb
lret
inc
xor
pop
adcb
lahf
mov
in
fnstcw
clc
sub
icebp
fxch
sbb
xor
iret
pop
pop
rcrl
les
sbb
xor
xor
xchg
or
cmpsl
imul
icebp
mov
mov
lods
jno
aad
lahf
cmp
xchg
out
lret
pushf
push
dec
jecxz
xchg
jo
subl
or
dec
mov
testb
ficoms
lahf
mov
add
insb
lret
push
fisubrs
xor
cmpsb
jbe
inc
cltd
mov
sbb
mov
jnp
clc
jne
jecxz
sbb
loope
xchg
mov
adc
lods
sbb
add
add
inc
xchg
sub
insb
inc
inc
je
incl
inc
adc
jg
ret
cmp
sbb
sbb
aas
out
xor
enter
pop
repnz
rcrl
imul
lahf
dec
mov
repz
dec
push
mov
xlat
jne
dec
fwait
inc
cs
lahf
fucom
dec
lock
add
dec
retw
mov
scas
push
scas
cmc
sub
push
adc
push
stos
sbb
adc
dec
cwtl
inc
pop
push
adc
add
push
das
lock
inc
sarb
movsb
adc
adc
adc
cltd
fidivrs
inc
int
test
mov
nop
test
inc
enter
dec
sub
xchg
add
xchg
nop
pop
je
add
jle
les
test
or
pop
push
adc
mov
xlat
cwtl
in
in
shl
mov
jo
or
sbb
or
sub
inc
test
jnp
test
std
arpl
ljmp
adc
inc
ss
sub
xor
jae
xchg
cmp
pop
push
mov
repz
mov
xchg
xor
inc
mov
stos
sti
sahf
pop
mov
mov
mov
ret
cmp
xchg
jnp
pop
pop
mov
pop
aam
push
push
push
movsl
mov
gs
fisttps
and
lock
mov
adc
roll
mov
rcl
sbb
fwait
inc
jne
iret
pop
in
mov
inc
lahf
mov
aam
push
mov
xchg
cmc
mov
xchg
add
pop
ja
das
pop
fdivrl
jnp
imul
outsl
es
leave
push
adc
cwtl
xchg
and
inc
adc
push
or
sub
dec
cmp
out
hlt
mov
and
loopne
xchg
int
divb
ljmp
mov
loopne
mov
add
mov
aas
repnz
sbb
adc
sbb
inc
pop
xchg
push
lock
sbb
lahf
mov
scas
sbb
cld
mov
popf
aas
pop
xor
xchg
lret
gs
daa
xchg
inc
or
das
jae
lret
inc
pop
xchg
add
fisubrl
cwtl
xchg
aam
adc
movsb
rcl
fcompl
lds
dec
aad
mov
push
or
adc
mov
sub
addl
sbb
mov
inc
rclb
pop
outsb
or
movsl
cli
mov
jg
xchg
mov
loop
pushf
cli
mov
cmpsl
rcr
call
cmpsb
push
jo
push
lods
xchg
cltd
xchg
imul
jne
mov
jae
xchg
sub
out
fldl
push
inc
mov
sub
jp
ds
mov
mov
cmp
adc
mov
push
lahf
sbbb
aad
bound
cltd
fwait
sbb
out
add
es
sbb
cmp
cmp
jne
mov
jae
test
cmp
lret
sbb
daa
or
inc
sbb
pop
mov
sar
dec
add
pop
sub
sbb
cmp
nop
jg
mov
xchg
rclb
mov
push
repnz
test
stc
addr16
mov
xchg
mov
xchg
cmc
mov
xchg
xchg
cli
jae
push
xor
test
addr16
mov
xchg
pop
lea
hlt
js
test
iret
adc
dec
add
imul
int3
mov
sbb
add
call
jl
mov
arpl
or
fdivrs
out
dec
fdivs
mov
or
mov
sub
or
jns
out
in
or
mov
ss
fsub
jl
sbb
mov
xor
mov
lds
push
loope
lret
aam
stc
addr16
or
mov
add
add
xchg
xorl
rcr
jp
imul
lahf
fs
sar
or
test
bswap
cmc
xchg
mull
daa
leave
xchg
stc
sbb
sbb
xchg
inc
stos
out
xchg
ss
lock
dec
lods
xchg
xor
push
sub
daa
push
inc
or
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
inc
xor
shrb
loope
push
sarb
inc
mov
mov
xchg
clc
inc
sbb
xchg
cmp
adc
ret
into
push
xchg
ret
int
leave
call
lret
jnp
movsl
imul
sbb
xchg
cmp
pop
sub
push
inc
loop
inc
sub
push
lahf
arpl
jns
xchg
and
jae
sbb
push
add
lret
popa
ss
and
jmp
dec
and
or
cwtl
mov
outsb
dec
sbbl
divl
jbe
loope
xlat
mov
adc
into
stc
mov
stos
mov
xchg
inc
repz
add
mov
shrl
aas
icebp
jno
adc
movsb
int
shll
or
or
xor
mov
scas
pop
or
cltd
and
dec
jbe
xchg
xchg
and
in
popf
clc
lcall
gs
xor
divl
idiv
xchg
cmpsb
rep
inc
inc
addr16
xchg
lcall
adc
push
cli
fcom
cmp
xor
cmp
clc
ljmp
lea
pop
mov
arpl
divb
push
aad
add
jae
pop
or
and
mov
pop
cmp
xor
lock
xchg
aaa
in
xor
lret
add
mov
aad
outsb
fmuls
cmp
sbb
jns
movsl
or
sbb
lods
pusha
js
clc
int3
and
lods
jno
aad
mov
insl
outsb
js
scas
out
inc
fwait
pusha
loop
inc
mov
aas
cmpsl
imul
js
cmp
shrb
sbb
and
addr16
fwait
cmp
jmp
insl
inc
xor
in
cmp
pop
add
popf
shl
std
mov
mov
add
ds
mov
fisubrs
sbb
inc
adc
adc
cmpsl
dec
push
stos
shrl
push
sbbb
fstl
add
adc
imul
push
sti
inc
addr16
adc
ss
dec
popf
cmp
cwtl
lret
mov
faddl
adc
mov
or
add
fwait
stos
mov
rcr
dec
xor
mov
orl
or
sbb
nop
xchg
mov
scas
jne
test
fs
push
nop
shl
adc
cmp
lahf
sahf
xchg
sbb
lock
sub
scas
popa
or
scas
mov
sub
inc
dec
dec
mov
adc
rcl
popl
insb
ret
stos
or
mov
inc
fistpl
pop
fdivrl
inc
pushfw
mov
shlb
xor
lods
mov
shr
inc
cltd
mov
dec
sbb
xchg
jb
pop
push
xchg
clc
push
sub
or
adc
sbb
mov
ja
sahf
je
popf
mov
cmp
jp
add
ds
test
xor
addb
insb
lock
movsl
mov
shlb
adc
stos
mov
mov
out
test
push
mov
or
icebp
mov
mov
xor
pop
adcb
sbb
inc
lcall
xor
dec
mov
pop
stos
add
movsb
scas
sarb
pusha
mov
bnd
popf
push
push
sbb
jo
cmpsb
mov
pop
es
inc
mov
std
adc
pop
leave
xorb
dec
and
add
jbe
inc
sbb
add
mov
stos
xor
dec
sbb
adc
test
or
cwtl
sbb
xor
cmc
mov
inc
cmp
mov
xor
mov
loopne
mov
clc
cmp
xor
sbb
or
loop
ret
jmp
cld
sarb
fs
jno
mov
sbb
and
xchg
imul
xchg
push
dec
movsb
push
dec
repz
sahf
dec
pop
pop
movsb
or
adc
inc
push
sbb
nop
xchg
ret
pop
mov
jmp
pop
ja
insl
xchg
dec
jnp
mov
jbe
xor
scas
loop
push
cwtl
inc
bound
inc
mov
mov
jl
mov
add
js
aam
push
mov
cmc
cmp
jp
in
dec
xchg
adc
ret
push
sbb
pop
adc
fmulp
xchg
sub
enter
insl
or
pop
les
test
movsl
xchg
jb
fidivrs
mov
sahf
ljmp
sti
leave
dec
call
push
mov
imul
or
lahf
dec
lret
mov
push
mov
adc
fdivs
add
xor
xor
scas
push
mov
pushf
jmp
push
lock
les
xlat
mov
fbld
popf
inc
jno
push
stos
xchg
scas
popf
in
in
inc
fmuls
lahf
cmp
dec
mov
or
or
dec
shrl
push
mov
mov
sbb
pop
sub
sbb
mov
push
or
lahf
test
rclb
jl
pop
js
sub
jns
outsb
jmp
or
xor
sub
cld
repnz
add
adc
inc
cltd
add
mov
mov
sbb
dec
sub
movsb
out
and
mov
lods
or
mov
addl
sti
fisttpll
inc
sub
jnp
andl
lret
or
add
cs
mov
push
dec
mov
mov
adc
dec
leave
js
lret
movsl
ret
insb
sub
dec
repnz
scas
push
sub
cmp
and
xchg
sbb
mov
push
lcall
xchg
fdivl
fidivrl
push
ja
add
add
ds
jb
xor
movsb
push
jb
inc
mov
inc
pop
lcall
sub
or
inc
fwait
imul
aas
das
cmpsl
xlat
ret
adc
pushl
mov
fwait
jmp
mov
out
mov
test
or
mov
insl
fcomp
xchg
test
aam
out
push
dec
sbb
dec
sub
and
and
pop
mov
dec
inc
mov
inc
iret
popf
mov
sub
sahf
mull
cmp
jne
jae
mov
cwtl
jecxz
pop
or
shll
adc
clc
push
ficoms
or
mov
adc
lea
call
lahf
jmp
lret
lahf
mov
pushf
dec
and
rorl
pop
inc
cltd
lret
lcall
sbb
neg
mov
ss
lret
cmpsl
xchg
test
insl
mov
sbb
test
xchg
popf
inc
cmp
stos
std
lock
adc
mov
xchg
mov
lods
inc
inc
xor
scas
std
stc
jge
lds
mov
and
insb
add
arpl
sbbb
rcr
xor
pop
fbld
sbb
or
gs
jmp
add
popf
mov
jnp
sub
inc
cltd
mov
imul
adc
hlt
add
enter
imul
in
fadds
in
mov
imul
stos
imul
lods
orb
insl
mov
clc
leave
inc
sbb
lret
jecxz
add
mov
pop
sub
mov
add
insl
inc
cmp
dec
and
ror
into
lea
mov
inc
mov
and
jo
fldt
in
daa
imul
adc
pop
pop
push
push
add
fmul
dec
pop
stos
xchg
fistl
jb
adc
shrb
sbbb
es
xchg
xchg
jo
mov
or
ret
mov
cmpb
push
push
mov
xchg
rcll
sub
test
dec
push
xchg
and
inc
push
push
pop
fwait
insl
addr16
call
add
loope
inc
cwtl
cltd
das
xchg
enter
dec
add
xor
mov
fsubr
mov
push
pop
ja
movsb
testb
pop
lea
adc
lret
cmpsb
ret
daa
pop
mov
hlt
jg
mov
test
es
sbb
push
sub
mov
or
sub
mov
fsubrl
cwtl
lret
push
inc
ret
and
inc
jns
stc
pop
mov
lods
pop
js
ss
ljmp
aam
mov
mov
jecxz
hlt
push
sbb
mov
leave
pop
inc
pop
jae
ficoms
jne
mov
push
nop
test
add
sti
call
loope
dec
test
ficoms
mov
leave
loop
in
or
repnz
lret
mov
sbbb
or
add
mov
inc
stos
fsubs
rolb
sbb
loopne
or
xchg
cmp
sub
xor
es
pop
cmp
enter
or
xor
mov
cwtl
pop
adc
fsubr
mov
int
mov
sbb
gs
adc
mov
arpl
inc
pop
pop
mov
loopne
pop
adc
clc
inc
aas
iret
sbb
aam
aam
cmc
fmul
inc
fisttps
ja
pusha
dec
sbb
adc
or
sbb
fcompl
xchg
dec
pushf
dec
xor
fstl
push
aaa
cli
push
aad
jmp
jae
pusha
and
cltd
pushf
sbb
xor
jle
fs
push
inc
inc
inc
fmull
xchg
jp
jl
outsb
enter
jno
and
pop
mov
scas
dec
loope
out
test
lods
loopne
cmpsl
push
ret
loop
adc
push
shl
arpl
jl
pop
fdivrp
or
add
mov
pop
test
into
les
or
mov
fisubs
mov
cmp
push
cmpsb
push
fdivrl
xchg
push
add
mov
mov
lds
xor
mov
rcrl
inc
mov
mov
addl
mov
sbb
jae
lods
into
loope
in
or
mov
jo
leave
add
out
test
test
or
mov
push
inc
cltd
pusha
sysexit
mov
push
add
inc
and
mov
mov
or
mov
xchg
cmp
or
nop
pop
mulb
pusha
outsb
cmpsb
sub
mov
std
mov
mov
xchg
iret
fcoml
fwait
jnp
in
and
pushf
ficoms
jle
lods
jg
rcll
std
pop
push
mov
inc
loope
and
or
add
sarb
mov
cmpb
imul
push
cmpsb
fcomp
pop
fidivrl
pop
push
enter
outsl
mov
sub
cltd
cltd
or
cmpsl
je
lret
xorl
ret
fcom
xor
sbb
push
in
mull
aam
idivl
shrl
test
sub
int
loopne
in
mov
lock
ja
pop
pushf
lock
adc
test
mov
push
shll
pop
rcrb
xchg
mov
pop
test
push
push
mov
sub
dec
sbb
mov
ror
inc
cmpsb
cmpsl
xchg
fcoms
add
cld
jo
xchg
adc
fisubrl
rorl
stos
sti
xchg
sbb
dec
jb
lods
jecxz
aaa
shrb
jns
push
inc
push
js
adc
test
lahf
adc
test
fldl
or
push
lock
lcall
lea
rol
sbb
or
xlat
insb
jbe
xchg
mov
cmp
fadd
pop
fsubl
and
mov
and
mov
dec
dec
mov
fstps
dec
and
pop
jle
in
icebp
shl
mov
push
int3
cmp
clc
into
sbb
lds
cmp
jle
lahf
lret
lock
mov
aas
loop
mov
sbb
gs
stc
jno
pop
xchg
adc
ret
pop
sbb
stos
mov
jnp
inc
in
lods
dec
sbb
sub
lahf
sbb
imul
push
sub
pop
or
adc
les
cld
xor
xchg
adc
loop
sbb
add
adc
push
mov
xor
cmp
enter
mov
and
jg
int
cmp
inc
adcl
mov
sti
mov
mov
mov
adc
push
fidivrl
sub
jnp
jno
insl
xchg
test
xlat
push
fwait
out
int3
and
test
dec
rcll
add
jp
inc
mov
fdivrs
cmpsl
mov
mov
mov
les
inc
stos
mov
test
lds
mov
ds
std
bound
sti
sub
mov
insl
test
inc
popf
mov
fadd
lahf
and
faddl
xlat
mov
jb
mov
test
push
and
cmpsb
mov
lea
mov
push
mov
add
sub
les
xchg
inc
scas
xchg
stos
jge
dec
cmp
inc
lcall
out
test
fstl
scas
push
mov
mov
out
mov
mov
inc
std
popa
pop
sbb
push
mov
push
or
jnp
pushf
cli
push
mov
jmp
push
mov
pop
pop
in
jb
fwait
outsl
jl
out
mov
and
cmp
dec
dec
mov
fsubrs
test
jle
gs
add
lret
das
push
xchg
sti
mov
jecxz
mov
push
mov
pop
sub
add
rcrl
test
ss
mov
dec
pushf
inc
fstps
lcall
sbb
stos
imull
push
mov
popf
lret
add
test
inc
data16
movsl
mov
or
add
or
hlt
ds
lea
es
mov
mov
adc
pop
fucomi
cmc
mov
cld
adc
das
pushf
xchg
cmp
aam
and
xchg
jl
shlb
ja
pop
push
fdivrs
jno
fwait
xor
clc
and
cmp
push
mov
test
xorl
out
cmp
pop
cmp
pop
mov
dec
shrl
dec
inc
jb,pt
das
xchg
mov
aam
add
jle
shlb
add
int
fsubs
scas
iret
fucomip
in
test
lcall
xor
mov
adc
dec
inc
sbb
add
cmp
mov
cli
xor
bound
sub
cmpsb
push
test
cli
mov
xchg
cli
push
cmc
mov
or
loope
lahf
ffree
adc
sbb
dec
mov
cli
cmpl
fidivrl
add
cmp
fisubs
and
test
jae
in
adc
lahf
scas
jg
leave
cmc
add
cld
repnz
or
push
mov
fistpll
mov
popl
test
dec
xchg
adc
data16
xor
mov
jge
jmp
inc
inc
popf
mov
xor
divl
fwait
outsl
jl
xchg
mov
loop
and
mov
test
int3
mov
pop
xlat
adc
mov
inc
lcall
push
inc
adc
iret
imul
jecxz
sbb
or
mov
imulb
lock
sbb
test
lahf
iret
cmpsl
mov
push
mov
sarb
mov
sbb
add
stos
outsl
repnz
dec
sbb
mov
mov
jae
ljmp
pop
clc
int3
ret
add
push
push
pop
jne
or
clc
pop
stos
xchg
fimull
fisubl
pop
jb
stos
ficoms
push
cld
rclb
mov
leave
in
mov
leave
loop
inc
sarb
clc
xchg
js
jl
arpl
rorb
rorl
dec
fwait
mov
pop
jmp
push
lods
xlat
or
inc
lret
or
inc
lds
jp
and
enter
sbb
cmp
es
hlt
mov
fisttps
sbb
pop
sahf
dec
mov
mov
mov
mov
int
pop
test
in
mov
mov
in
cs
or
pop
dec
push
adc
xlat
sbb
cmc
pop
inc
sbb
rolb
sahf
cld
dec
cmp
lret
stos
sub
test
push
mov
xor
imul
clc
sub
fistps
pop
cmp
mov
adc
test
cmp
xchg
add
lret
fistl
or
sub
jmp
mov
cmp
leave
cmc
add
cld
sbb
cmpsl
xlat
je
ja
mov
in
pminub
pop
xor
or
inc
cmp
jns
faddl
adc
mov
or
fld1
jne
xchg
insl
or
inc
mov
fnstcw
xor
mov
and
out
mov
cwtl
cmp
pushf
sub
loop
pop
pop
test
ljmp
mov
lods
sti
jmp
inc
fucomip
repz
mov
pop
loopne
jo
jbe
pushf
enter
mov
movb
cld
mov
mov
jmp
cwtl
scas
push
test
push
mov
loop
fildll
inc
jae
sahf
dec
popf
lret
mov
and
insl
pop
outsb
test
cwtl
daa
sbb
imul
push
mov
fisttpll
push
mov
jmp
mov
fidivrl
mov
gs
cmp
ret
add
mov
dec
mov
sbbb
cmp
adc
movsb
pop
push
clc
inc
jge
jmp
inc
stos
cmp
xabort
pop
popf
and
cmp
jne
jecxz
xchg
lea
xchg
inc
inc
mov
dec
mov
mov
nop
in
nop
or
push
pop
pop
push
mov
inc
clc
enter
pop
movsl
inc
lock
and
xor
repz
in
dec
lahf
lret
hlt
mov
sbb
xchg
xchg
push
mov
pop
inc
pop
adc
out
movsb
mov
cwtl
or
rcl
pop
add
sti
stos
lds
sbb
mov
negl
fs
fisttps
mov
ret
inc
cmp
and
test
add
sbbl
xchg
fwait
loope
sub
mov
jle
stc
test
inc
test
jmp
fwait
jbe
jp
sub
xor
mov
add
add
pop
mov
std
jb
jmp
dec
fisubl
push
xchg
imul
in
jbe
mov
lahf
insl
push
inc
test
xchg
pop
jle
cwtl
int3
repnz
lcall
rcll
or
add
xor
dec
xor
mov
dec
ret
pop
pop
mov
cmp
ss
aam
sti
sub
fwait
lahf
lds
push
pop
adc
pusha
subb
sbb
adcl
adc
lret
inc
sti
or
lock
mov
sbbl
test
fisubl
psubd
scas
cmp
fbld
jae
outsl
pop
mov
jno
inc
enter
pop
test
cmp
xchg
or
movb
adc
xor
iret
stos
jecxz
mov
xchg
mov
cmp
inc
xchg
loop
lahf
lcall
xchg
xchg
rclb
xlat
mov
inc
mov
clc
mov
lea
xchg
fwait
xor
dec
mov
imul
les
and
sub
xchg
inc
sti
xor
jb
pop
outsl
push
addl
scas
and
xor
dec
inc
mov
cwtl
sbb
aam
ss
fmuls
shlb
xorb
into
inc
stos
xchg
mov
ljmp
std
fists
add
and
popa
sub
mov
inc
pop
adc
imul
lods
shr
pop
and
cli
test
mov
inc
mov
std
jae
lret
iret
stc
push
fnsave
sub
orl
mov
xchg
add
inc
adc
ja
lds
loop
aad
fcoml
cld
push
push
xchg
fstl
mov
jge
inc
xchg
mov
andl
bound
add
push
popl
and
adc
push
mov
inc
gs
int
stos
cmp
call
cmp
sub
out
push
adc
fpatan
leave
sbb
ljmp
mov
inc
mov
pop
stos
push
adc
push
add
mov
stos
into
sbb
lds
rcrb
add
ljmp
pop
and
test
hlt
cs
lcall
subb
lret
sub
fisubrs
mov
inc
mov
lds
int
lock
test
push
sbb
xor
iret
jl
mov
out
xchg
test
sbb
cwtl
daa
sbb
xchg
xchg
or
add
jle
dec
lds
inc
test
jmp
mov
jno
sbb
out
test
xor
inc
sarb
cwtl
mov
in
or
xor
cmp
and
and
lds
jnp
pusha
xchg
dec
std
cli
mov
push
stos
xlat
or
cmp
mov
pop
add
test
push
or
xchg
push
dec
mov
shlb
out
and
or
call
in
movsl
or
cmp
jae
mov
push
ret
sahf
repz
scas
rcrb
mov
push
cli
iret
inc
in
mov
leave
faddl
push
icebp
cmp
loop
les
sbb
xchg
pushf
rcrl
dec
pop
dec
or
shlb
in
rclb
add
sbb
dec
jp
xchg
int
jmp
push
stos
std
lock
jecxz
xchg
dec
jnp
push
push
jp
and
test
dec
fwait
leave
loop
and
test
clc
xchg
xchg
fmull
or
sub
xchg
sub
dec
and
xchg
imul
sub
test
pusha
test
call
arpl
mov
call
jecxz
adc
and
inc
shr
mov
cltd
lret
mov
dec
sahf
ds
xor
pop
adc
inc
mov
imul
iret
push
testl
iret
sbb
in
cld
push
cltd
adc
flds
adc
arpl
movsl
stc
inc
in
xor
mov
and
loope
sbb
inc
pop
dec
test
push
inc
mov
rorl
mov
xchg
lret
or
pop
or
shll
popf
jne
inc
in
push
stos
xchg
stos
std
lock
jecxz
fadd
cmp
scas
jg
js
sub
fwait
leave
loop
and
test
fmuls
adc
dec
xchg
dec
cli
xchg
and
fiaddl
push
fisubl
xchg
dec
in
pop
push
mov
jl
scas
xlat
pop
clc
cmp
cmpsl
xor
inc
inc
mov
sub
mov
push
inc
mov
sbb
xor
mov
ljmp
les
scas
hlt
xor
adc
push
enter
mov
add
movl
or
ret
insb
loopne
dec
movsl
mov
adc
lds
stos
stos
mov
pop
dec
push
cmc
fldt
mov
pop
push
inc
popf
lret
xchg
xchg
fcoms
test
nop
pop
es
or
dec
adc
xchg
fistpl
xchg
ja
es
mov
aad
xchg
movsl
test
push
cmc
mov
in
popl
rcrl
repz
decl
mov
add
rol
inc
fwait
xor
mov
les
pop
push
jle
inc
and
fdivrs
sar
mov
xor
jne
jecxz
lock
or
cltd
es
imul
dec
fisubs
enter
cmc
xor
mov
mov
sahf
ret
arpl
mov
arpl
inc
mov
bound
mov
orl
and
mov
mov
imul
mov
movsb
lds
nop
lds
dec
mov
sub
lahf
popf
out
dec
mov
xor
mov
jnp
sbb
fsts
pop
pop
jb
scas
lret
mov
mov
popf
xchg
add
sbb
fstps
test
push
adc
dec
xchg
jle
pop
icebp
cmp
push
cmp
cmc
and
sbb
repnz
jle
clc
mov
jo
mov
push
test
repnz
prefetchw
or
push
fwait
mov
and
mov
ret
pop
jle
clc
cmp
jecxz
je
or
inc
ds
dec
dec
scas
lret
inc
aaa
mov
and
xchg
fstpl
dec
add
int
pop
movsl
popa
fdivrl
out
and
mov
pop
adc
andl
insl
popf
rcrb
sbbl
inc
mov
shll
cli
test
pop
stos
push
and
js
mov
pop
add
jns
pushf
cli
lret
shlb
xor
loopne
inc
cmp
int
test
mov
mov
mov
lret
push
mull
lret
jnp
dec
ret
adc
jge
enter
icebp
sbb
fsubrl
jo
andl
and
cwtl
in
dec
std
sbbl
xor
fcmovb
sbb
xchg
xchg
incb
aam
cmp
cmpsl
ret
fld
fmul
mov
push
ret
mov
jge
sbb
bound
xchg
dec
and
imul
stc
gs
xor
les
inc
sahf
shll
movsb
fucomip
cmc
lds
ds
hlt
mov
jl
add
mov
adc
insl
movsl
ret
inc
mov
sbb
adc
mov
pop
push
jae
mov
push
in
jno
mov
xchg
fsubl
test
fstps
orb
adc
and
gs
std
or
adc
pop
pushf
sub
sbb
into
jmp
fwait
sahf
xchg
cmp
or
data16
and
mov
fcomps
mov
les
rcll
xchg
imul
int3
loop
inc
and
es
enter
outsl
push
mov
out
cmp
div
je
sbb
and
mov
dec
dec
mov
fadd
ds
push
dec
mov
dec
ret
pop
pop
mov
pop
loopne
lods
mov
add
mov
dec
push
rcrb
mov
lahf
fwait
pop
mov
mov
adc
mov
fs
push
dec
sti
das
xchg
xlat
stos
fistpl
inc
pop
dec
test
push
dec
mov
rorl
mov
mov
xchg
fsts
and
test
adc
loop
sbb
pop
mov
xchg
xchg
lret
jnp
fadd
push
insl
fstl
jp
scas
pop
pop
call
test
fdiv
sti
mov
push
sbb
sarb
push
mov
xchg
popa
push
sub
shll
add
clc
and
lods
cli
jae
push
jno
insl
push
inc
ljmp
test
xchg
xor
jge
cltd
push
add
cmpsl
hlt
je
xchg
xchg
std
xlat
out
imul
mov
movsb
push
dec
jp
arpl
xchg
divb
mov
jecxz
pop
mov
dec
clc
push
cmp
out
ret
mov
xchg
fmuls
fst
inc
mov
and
iret
inc
sbb
shlb
repz
push
aaa
jns
std
xlat
dec
in
lods
mov
jns
sarb
mov
mov
scas
in
jnp
test
dec
imul
inc
dec
mov
scas
xchg
cli
adc
stos
dec
outsb
shrb
mov
mov
pop
pushf
ret
mov
aad
lds
fildll
jo
sub
mov
loop
xchg
push
andl
sub
or
jmp
xor
dec
mov
adc
sub
ret
dec
mov
mov
mov
cltd
into
xchg
xor
mov
cmp
dec
inc
dec
push
adc
mov
sub
push
jo
sbb
dec
data16
or
mov
mov
mov
movsl
mov
inc
cmpl
inc
xlat
lret
jecxz
inc
jecxz
jo
mov
dec
or
or
sbb
dec
sbb
xchg
mov
cltd
repnz
test
mov
fisttpl
dec
sub
lahf
fucomp
loope
test
jo
test
pop
mov
inc
scas
xchg
ficoml
sub
mov
adc
cmpsl
add
int3
lods
fimuls
aad
mov
out
lock
push
js
sub
clc
xor
adc
inc
test
sub
sub
mov
xlat
cmp
lods
cli
jae
push
jno
insl
cmovae
adc
add
out
call
je
or
inc
ds
dec
inc
mov
jg
in
and
daa
nop
xor
mov
movsl
mull
int
cmp
shr
ficomps
dec
and
jnp
std
iret
fucomip
popa
test
divb
xchg
stc
dec
mov
and
mov
mov
icebp
shrb
int
sti
iret
xor
rorl
mov
incl
idivb
rol
sbb
mov
xlat
mov
fldt
out
shrb
out
stos
cld
mov
xchg
or
pop
mov
rcrl
push
fistl
cltd
faddl
xchg
jbe
stos
jne
mov
aad
mov
mov
popf
jg
xlat
mov
fadds
add
pop
es
fs
dec
jb
and
enter
fwait
cmp
lock
sub
mov
fwait
insl
xchg
lret
jb
cmp
bound
mov
add
scas
or
cltd
sahf
dec
xchg
inc
loopne
mov
xor
mov
ret
mov
cwtl
in
xchg
mov
xchg
mov
sbb
repz
add
adc
popa
mov
add
jbe
push
pop
push
pop
mov
add
leave
sbb
and
in
movsb
leave
test
mov
fs
rcr
cmp
sub
retw
rcrl
cmp
jne
inc
xchg
rorl
outsl
sub
test
lods
mov
aad
mov
enter
enter
fdiv
and
lods
in
pop
es
sbb
mov
inc
mov
pop
and
pop
mov
xchg
cmc
mov
xchg
sbb
movsb
adc
xlat
cmpsl
ret
xchg
cmc
test
outsl
or
test
lret
test
clc
es
jl
pop
nop
lea
call
faddl
mov
movsl
lret
add
int
cmp
inc
mov
pop
push
rcll
lock
in
iret
inc
sbb
pop
add
imul
mov
movsl
cltd
inc
popa
test
xor
ss
xchg
push
mov
lret
xor
or
ret
xchg
divl
stc
mov
xchg
ss
cmpsb
loop
fdivs
hlt
addb
adc
push
mov
fiaddl
dec
sub
mov
adcb
or
sbb
dec
mov
scas
jg
lret
bnd
incl
fdiv
sti
mov
sub
or
mov
sbb
mov
icebp
mov
mov
fwait
mov
rcr
mov
or
sbb
ds
mov
gs
lahf
outsl
out
rcl
sarl
aas
or
mov
xchg
jmp
repz
mov
aad
or
or
int
js
pop
or
lds
ds
mov
popa
test
add
test
pop
stos
or
ret
xchg
sbb
adc
sub
mov
imul
jns
xlat
pop
lcall
test
mov
jo
or
mov
and
and
mov
inc
arpl
cmp
mov
mov
aad
jg
xlat
xchg
mov
enter
cmc
and
dec
sub
sarb
add
enter
dec
sarb
out
imul
xchg
jle
out
pop
insl
bswap
vpshuflw
add
mov
jb
xchg
enter
addb
orl
cmpsl
xor
push
adc
dec
mov
fsubs
divb
mov
lcall
add
loopne
jno
xchg
sbb
pop
jo
ret
inc
sbb
inc
and
add
rcrl
cmpsb
or
imul
cwtl
lret
inc
sbb
jne
les
cmp
and
sbb
add
pop
pop
repnz
lods
mov
cmpsl
jno
or
nop
roll
add
scas
jne
lret
mov
or
test
fidivl
xchg
jb
mov
mov
aad
leave
push
xchg
outsl
fwait
pop
mov
mov
xor
cmc
xor
fadd
xchg
arpl
mov
add
mov
or
dec
and
fisubs
adc
adc
pop
incl
insl
in
inc
mov
shlb
cltd
push
xor
test
dec
out
mov
push
adc
pop
ds
stos
test
popa
sub
ljmp
mov
xor
add
loopne
lea
addb
mov
inc
sbb
jg
add
rcrl
mov
hlt
sub
mov
ret
sbb
inc
mov
cmp
ja
inc
in
imul
or
mov
data16
in
icebp
arpl
sub
in
rorl
cld
jo
test
pushf
sbb
hlt
adc
mov
add
pop
xor
enter
sub
xchg
mov
cld
jns
mov
mov
add
xchg
or
add
dec
rclb
icebp
jp
jns
pop
xor
add
lods
push
sub
lret
jns
test
push
mov
jb
cmp
mov
pop
add
xor
xchg
jmp
adc
and
push
iret
mov
mov
shll
push
fsubrs
in
mov
movsl
xor
in
mov
mov
ret
repz
mov
pushf
sbb
xorl
adc
mov
sbb
aas
and
imul
adc
mov
add
cld
repnz
push
loop
dec
push
dec
subl
scas
cmp
pop
sbb
andl
stos
jne
inc
xchg
rorl
push
or
pop
and
mov
aad
mov
test
inc
adc
repnz
mov
push
mov
xchg
sub
add
mov
and
pop
and
cwtl
inc
lret
fidivrs
js
scas
fstpt
pop
fsubl
insl
lahf
insl
jmp
mov
pop
sub
hlt
je
test
cmpb
push
dec
mov
jmp
aaa
lds
loop
in
mov
loopne
mov
add
lret
jecxz
popa
mov
xchg
rcrb
mov
or
sbb
das
sti
adc
ret
int
jl
lcall
inc
and
mov
aam
test
dec
sbb
mov
iret
jnp
push
pop
dec
pop
lret
iret
fcmovnbe
arpl
mov
lock
inc
inc
cmp
lret
addr16
movsl
adc
mov
pop
jb
mov
and
stos
mov
ljmp
pop
jo
cmp
in
pop
popa
or
and
addl
cmp
outsl
pop
jb
and
inc
cwtl
dec
inc
test
inc
jge
adc
or
dec
and
call
inc
cltd
enter
xlat
mov
test
sub
shr
adc
shl
dec
daa
jmp
mov
sahf
dec
mov
lcall
fcmovbe
dec
test
mov
fadds
push
orl
sti
pop
add
test
xor
int
inc
sbb
inc
cmp
mov
mov
scas
pop
and
testl
push
in
dec
cmpsb
subb
cmp
in
push
fldl
loop
loop
imul
adc
aaa
cld
jo
xchg
adc
jl
rorl
sbb
fsts
xchg
jb
in
mov
shrl
xchg
inc
xchg
cmp
pop
fstp
adc
out
jbe
inc
shlb
inc
stc
pop
cs
mov
adc
lds
or
les
fwait
xor
fs
mov
cmpsb
fsubrs
push
fldt
jnp
enter
outsl
lds
enter
adc
xor
xchg
jmp
adc
outsb
jnp
lret
cltd
fisubs
call
insb
lret
stos
ss
mov
lods
sti
pop
xchg
or
fsubp
sahf
ds
xor
sar
addr16
mov
ret
repnz
push
lret
adc
lret
inc
cld
into
fcoml
into
xor
dec
icebp
mov
lods
shl
stos
mov
pop
test
mov
sbb
lods
out
in
mov
xchg
pop
fs
xchg
daa
add
jl
lret
sahf
test
dec
push
lods
jge
dec
mov
xor
sub
pop
add
jecxz
fstl
sub
and
sub
scas
push
fmul
jo
arpl
roll
les
cs
push
dec
shlb
sub
jp
jns
pop
xor
cli
mov
push
pop
adc
fdivl
xchg
fld
clc
xor
stos
inc
loope
add
out
enter
xor
lret
xchg
xchg
addr16
stos
cwtl
cltd
inc
cmp
cs
test
test
pop
in
pop
out
stos
rorl
pop
movsl
pop
call
fucomip
in
lcall
das
lret
jecxz
gs
mov
addb
mov
inc
dec
inc
sbb
sub
mov
movsl
ret
popf
fisttpl
xlat
stos
mov
testl
movsl
pop
scas
pop
lcall
repz
ljmp
pop
sub
or
pop
xlat
ficoml
out
mov
inc
lcall
mov
rcrb
jnp
movb
push
sbb
jbe
jle
scas
ja
cwtl
icebp
xor
jb
adc
addl
mov
les
int3
or
sbb
test
in
fwait
imul
mov
call
int
imul
je
test
inc
pop
xchg
dec
lret
cltd
sahf
inc
and
imul
add
adc
xchg
mov
lock
jecxz
mov
nop
mov
hlt
mov
dec
fwait
adc
lret
inc
mov
adc
sub
in
jmp
sub
sbb
push
lock
lods
fdivrp
stc
mov
mov
pushf
cmp
pop
adc
xchg
test
mov
xchg
ret
stos
vpcmpeqd
xchg
fisubl
sarb
loopne
sbb
inc
dec
pushf
or
mov
shl
mov
scas
jg
int
xor
call
mov
add
dec
shlb
xchg
mov
and
cmpsb
test
sub
movsl
and
lcall
repz
or
mov
xchg
add
add
sub
mov
fsubr
mov
sbb
inc
push
test
movsb
lahf
jbe
mov
mov
pop
mov
ret
pop
clc
sti
mov
sbb
lds
fiadds
addb
mov
push
fwait
push
ret
ret
das
and
iret
xor
adc
test
mov
lahf
fistl
dec
mov
lcall
or
lahf
jae
cmpsb
jae
lds
mov
jno
test
xor
mov
test
sbb
and
and
lret
lds
jge
pop
xor
fwait
jmp
scas
jg
mov
jle
cmpsl
xlat
lds
shlb
add
ja
adc
pop
xor
mov
movsl
ret
inc
gs
imul
repz
mov
jne
outsl
mov
and
mov
inc
dec
mov
push
dec
mov
cmc
clc
pop
aad
inc
inc
adc
stc
inc
pop
fdiv
cmpsb
pushl
mov
nop
std
mov
shll
mov
cwtl
out
push
pop
add
ret
sbb
sahf
repz
movsb
rorl
sti
sahf
push
repnz
inc
pop
adc
out
mov
loop
out
mov
mov
dec
std
or
test
mov
inc
lahf
push
pop
mull
jmp
dec
popf
lret
mov
xchg
xor
inc
sbb
dec
lock
dec
jb,pn
call
adc
xchg
dec
mov
xchg
inc
pop
mov
xchg
push
sub
or
inc
fwait
out
js
xchg
mov
andl
call
mov
cs
adc
xchg
mov
stos
das
andb
pop
and
xchg
pop
xchg
mov
jne
repz
cltd
push
aam
call
je
nop
and
orb
popa
mov
cmp
mov
ret
arpl
mov
ret
loopne
pop
adc
aas
fstpt
in
shll
jg
ret
sbb
out
mov
xor
fdivrl
push
sub
jnp
and
fldl
movsb
xlat
push
clc
mov
mov
mov
dec
mov
andb
or
inc
adc
leave
push
iret
int
leave
xchg
fwait
mov
lds
lods
lret
cwtl
fists
jb
inc
frstor
shl
add
hlt
out
idiv
sub
mov
daa
xchg
int
mov
rcrl
mov
mov
shll
mov
bound
fsubl
mov
gs
lahf
sbb
mov
mov
lock
add
enter
imul
out
cmc
sbb
push
adc
subb
xor
mov
cmp
std
jl
jecxz
in
add
call
adc
cmp
pop
sub
or
sub
add
imul
ret
jle
pop
inc
sub
push
ror
pop
inc
mov
dec
clc
mov
aas
arpl
jns
mov
lods
lret
add
pop
or
lds
jl
or
mov
roll
xchg
fisubrl
sub
lods
jle
mov
jns
enter
stc
movsb
mov
sti
push
decl
popa
or
insb
adc
rclb
mov
and
xchg
cwtl
dec
and
cltd
sti
or
imul
inc
cmpl
fld1
mov
sti
repz
icebp
mov
fwait
dec
xorl
fdivl
mov
shrb
cmpsl
cmp
xchg
jg
shl
pop
pop
dec
popa
mov
mov
test
dec
xchg
imul
repz
punpckhbw
dec
lahf
in
clc
add
xor
inc
sbb
add
or
sbb
dec
popf
lret
movsl
ret
sbb
insb
mov
cli
mov
pop
mov
push
lret
dec
sub
dec
popf
in
mov
iret
ljmp
int3
add
adc
xchg
ret
dec
xlat
ficoml
or
and
lods
divb
mov
outsl
pop
lods
inc
sbb
in
subb
mov
scas
xchg
fwait
leave
loop
and
dec
inc
andl
inc
add
scas
xchg
rcr
loope
mov
and
xchg
roll
daa
sbb
sbb
gs
outsl
mov
out
enter
arpl
jecxz
mov
inc
in
mov
jne
pop
mov
int
inc
stos
push
cmp
sbb
lea
ss
mov
and
push
dec
xchg
out
jecxz
push
mov
idiv
daa
lret
mov
or
jmp
cmpb
ret
inc
sbb
rorb
push
imul
adc
push
in
aad
mov
ljmp
rcrl
dec
push
pop
or
shrl
mov
xchg
add
pop
mov
adc
addr16
jb
lods
jle
gs
loop
jmp
shlb
jge
inc
xchg
lret
lahf
fists
out
out
rclb
push
adc
clc
pop
add
xchg
popa
mov
sar
dec
dec
movsl
ret
dec
mov
pop
cmpsb
shlb
cmc
xchg
enter
outsl
push
ret
mov
repz
pop
shlb
mov
xchg
jmp
sti
decb
xchg
sbb
inc
es
push
mov
push
loopne
call
inc
loope
ljmp
ds
cmp
lock
mov
rcrl
lea
mov
divb
jp
dec
sbb
and
lds
test
mov
pop
lret
fisttps
mov
fbstp
mov
pop
push
inc
and
push
pop
imul
dec
push
mov
mov
mov
jb
lods
jle
fld
sub
push
test
jmp
popf
fsubp
cmp
bnd
popf
scas
int3
mov
loop
jae
loope
pop
push
mov
inc
aad
cmp
cmp
add
imul
stc
repnz
in
sbbb
sub
ss
mov
lahf
xchg
push
test
xlat
push
out
and
in
enter
mov
jb
push
mov
cs
sbb
cs
mov
dec
add
jmp
sarb
adc
xor
repz
clc
pop
push
rcr
adc
popf
xchg
sbb
cltd
jo
mov
dec
sbb
cltd
mov
hlt
lods
jno
dec
and
lds
or
fs
dec
add
sahf
out
inc
mov
ja
fs
aad
mov
cmp
xchg
fcom
mov
xchg
test
cmp
addb
stos
jge
sbb
inc
sbb
rorl
xchg
inc
mov
dec
insb
jnp
mov
mov
in
mov
fdiv
stc
scas
adc
sbb
mov
inc
xor
push
mov
inc
test
fmul
add
mov
pop
dec
mov
xchg
imul
fwait
in
out
repz
jl
rcrl
mov
imul
shlb
cmpsl
rclb
add
out
push
hlt
mov
and
pop
push
mov
dec
loopne
in
mov
movsl
sti
fnsave
jae
mov
repz
cmpsl
add
ret
test
ret
mov
adc
ljmp
dec
sbb
add
imul
mov
sbb
mov
lret
jbe
fs
cmpsl
xlat
aad
popf
lret
mov
jl
ret
adcb
dec
imul
jge
dec
movsl
sbb
jl
fsts
cltd
fcoml
jbe
lods
xchg
inc
push
ljmp
loop
push
jg
mov
adc
mov
rcl
pop
add
cmp
adc
push
or
mov
movsb
inc
inc
fstpl
xor
loop
pop
testl
dec
add
orl
leave
sbb
pop
enter
jne
sbb
or
pop
push
mov
ret
arpl
lea
movsl
dec
call
xlat
lds
aas
aas
iret
sbb
in
in
add
mov
dec
pop
add
shrl
mov
inc
sti
or
push
cwtl
lret
movsl
ret
popf
fcoml
mov
and
incl
repnz
dec
dec
cmp
push
xchg
jae
lret
aad
testb
xchg
test
mov
outsb
push
cli
jp
jg
push
push
inc
cmpsl
push
ja
nop
test
sbb
cmpsl
jb
mov
cmpsb
repnz
pusha
sub
lock
xor
mov
lret
je
xchg
mov
adcl
dec
popl
jne
cmp
or
pop
fistl
stc
xchg
and
daa
inc
mov
insl
out
add
or
sahf
mov
mov
out
mov
inc
dec
mov
ljmp
lret
cmpl
test
sarb
ret
das
shlb
aam
sti
pop
mov
or
repz
sti
pop
xchg
dec
add
movsl
mov
or
int
nop
dec
sbb
adc
push
out
icebp
mov
int
inc
sbb
pop
ficompl
jno
aad
adc
repnz
mov
fidivrs
xchg
xchg
dec
popf
lret
mov
insb
stos
mov
lds
lret
pop
rcl
xchg
mov
mov
cwtl
mov
adc
test
push
mov
mov
push
fs
lldt
push
mov
andl
inc
add
scas
xchg
push
mov
aam
sti
xchg
sub
movsl
xlat
insb
jbe
insl
sbb
inc
xchg
fisttpll
addr16
repnz
loopne
hlt
mov
xchg
mov
ds
sub
mov
rorl
loopne
adc
jge
divl
cltd
pop
test
xor
adc
cmp
and
dec
rcl
xchg
mov
jecxz
mov
adc
push
pop
loop
imul
das
jno
dec
xor
mov
mov
arpl
loop
outsl
jae
lret
fisttps
lret
rcr
cmp
jl
rorl
fsts
pop
daa
adc
mov
push
jns
and
pop
mov
push
jno
lds
mov
add
jmp
lcall
adc
in
test
inc
add
jecxz
mov
es
dec
shll
jns
dec
and
xor
imul
les
movsl
inc
mov
outsl
test
fnstcw
push
cmp
xchg
and
out
pop
inc
test
xor
adc
sub
cmp
cltd
std
das
fsubr
push
and
xor
shll
add
loopne
jle
ret
nop
int3
icebp
clc
sti
pop
push
iret
orl
jns
mov
or
dec
inc
aas
sbb
testb
pop
pop
mov
pushf
fs
jb
mov
rclb
fists
jge
mov
push
aaa
js
loopne
cmp
xchg
dec
mov
scas
xchg
lret
movsl
divb
xor
shrb
aaa
stc
add
pop
fidivrl
mov
xor
scas
fcmovnb
push
cmp
pop
pop
mov
jge
andl
rorb
mov
aam
repnz
inc
adc
mov
and
xchg
imul
cltd
call
and
pop
fisubl
clc
sbb
push
add
jp
mov
fwait
je
or
or
mov
enter
jne
jge
mov
mov
push
rcrb
mov
push
mov
pop
in
ljmp
pop
mov
repz
sti
pop
pop
iret
xchg
insb
repz
ret
sub
pop
hlt
mov
cmp
dec
lds
or
pop
nop
icebp
mov
inc
push
inc
push
mov
pop
test
mov
mov
scas
rcl
xchg
mov
movb
jmp
test
xchg
into
push
scas
jne
inc
aam
mov
mov
dec
les
jno
aad
xor
add
inc
mov
sahf
adc
jecxz
inc
ficoms
inc
and
pop
add
andl
std
add
outsl
out
dec
test
mov
jno
and
jmp
dec
stos
jae
xchg
xchg
jns
call
pop
jae
jne
xchg
lea
pextrw
mov
dec
adc
cmp
or
cmp
xchg
sub
test
loopne
sbbl
shl
jno
dec
add
mov
or
loopne
iret
jl
in
repz
dec
ret
sti
repz
jg
fiaddl
lock
sub
iret
inc
sub
gs
adc
jmp
lds
mov
sub
cmc
sbb
mov
push
dec
dec
popf
in
jmp
fcoms
outsb
test
push
cmp
ret
adc
pop
stos
xchg
xchg
jno
dec
mov
outsl
imul
inc
sahf
ffree
pusha
push
popf
ficoms
dec
pop
push
adc
enter
or
adc
sti
andl
cwtl
adc
cmp
sbb
test
or
in
imul
add
mov
xchg
mov
int
push
jle
sarl
daa
sbb
loopne
hlt
je
in
stos
jecxz
jne
cwtl
mov
das
in
cmc
hlt
test
popf
mov
adc
add
lret
fistl
mov
push
add
orb
pop
shl
dec
jl
mov
sbb
dec
imulb
testb
loope
pop
xor
test
pop
inc
in
imul
mov
jg
jge
sar
lcall
data16
push
and
inc
push
xor
push
dec
sbb
mov
add
ret
cmp
adc
sarl
ret
fmull
icebp
sbb
add
rclb
and
andl
sarb
into
xchg
jecxz
xor
cmp
dec
push
insl
in
jmp
int
mov
lea
std
mov
cli
out
push
mov
std
xchg
xor
mov
cltd
add
jmp
cmp
test
and
and
xchg
icebp
ja
sbb
mov
mov
aam
cmpl
xchg
incb
jae
mov
jnp
pushf
shl
adc
ljmp
sub
js
repnz
fiaddl
xchg
push
imulb
insb
adc
stos
cli
negl
std
scas
dec
sbb
add
pop
jp
mov
aad
xor
stc
jmp
mov
or
sbb
inc
sbb
mov
xor
adc
pop
mov
adc
xor
jo
in
lds
fcoml
loop
jl
nop
xchg
mov
xor
add
ja
or
jae
out
addr16
xchg
lret
add
xor
cmpsl
lret
in
mov
mov
sub
call
push
mov
mov
aam
pop
xchg
enter
xor
imul
fiadds
shrb
fwait
dec
sahf
gs
xor
jle,pt
stos
les
inc
mov
lock
lret
stc
mov
mov
lock
popa
mov
add
dec
subb
into
iret
inc
sbb
jne
sub
movsl
mov
pushf
fs
stos
pop
stos
push
test
test
inc
or
scas
mov
fucomp
jae
jns
mov
mov
mov
test
dec
or
vshufps
xchg
outsl
sub
test
add
push
pop
mov
bnd
addr16
jo
sbb
add
jmp
jecxz
xchg
adc
push
clc
cld
sbb
jns
fwait
and
or
dec
xor
xchg
mov
aam
mov
loope
mov
mov
or
clc
int3
and
mov
mov
push
movsb
cmp
dec
mov
mov
pop
mov
cmc
hlt
imul
ds
call
or
out
loopne
mov
jns
sbb
jecxz
mov
adc
enter
sbb
add
cmp
fnstenv
iret
push
sbb
mov
fsts
mov
adc
mov
fucomp
jae
jno
xchg
pop
in
mov
push
sti
mov
cld
xor
dec
lret
jmp
imul
outsb
shrb
mov
fcoml
jbe
mov
addl
loop
lcall
fs
andb
mov
push
inc
pop
adc
cwtl
movsb
mov
and
imul
mov
mov
fisubs
stc
sbb
ret
aad
dec
mov
mov
mov
dec
push
or
int
inc
or
insl
mov
jbe
mov
push
cmp
dec
inc
mov
mov
push
shlb
mov
add
sahf
ret
mov
adc
or
call
scas
insb
ss
stos
mov
ja
inc
and
mov
xchg
mov
mov
sbb
fcoms
mov
dec
xchg
movsl
add
jge
imul
xor
call
add
pop
mov
cmp
fucomi
jge
sbb
dec
js
sarb
or
sub
mov
popa
rcr
and
dec
aam
daa
aam
inc
push
xchg
mov
push
sbb
push
in
mov
sbb
cmpsl
ret
test
bound
loop
mov
or
inc
push
xchg
dec
mov
sbb
shrl
repz
adc
arpl
int
mov
in
mov
cmp
push
iret
rorl
and
push
lock
pushf
or
sbbb
test
push
bound
divb
xchg
stos
les
fsubrs
pop
hlt
fistl
push
or
lods
mov
jl
stc
mov
pop
pop
cmp
or
jne
into
push
mov
cs
fistl
fcmovbe
mov
out
push
lods
movb
ret
mov
inc
sbb
scas
pop
cmp
js
push
mov
xchg
popa
adc
xchg
or
orl
inc
pop
adc
lret
rcr
das
aam
test
cmp
sbb
gs
imul
inc
scas
sub
lahf
fucomp
test
bound
scas
mov
cltd
enter
push
adc
xchg
mov
hlt
xor
in
fcoml
outsb
imul
sahf
gs
xor
mov
mov
inc
sahf
shrl
mov
pop
lock
das
cmp
mov
test
hlt
inc
mov
dec
aas
mov
xchg
dec
cmp
xchg
ret
inc
sbb
shrb
aaa
jmp
lahf
sbb
clc
stos
sbb
jne
mov
pop
ljmp
popf
lret
dec
lods
fcoms
sbb
test
inc
pop
xchg
lret
out
mov
sub
pop
mov
pushl
push
pop
push
add
xchg
pop
insb
pop
pusha
jp
ficoms
mov
scas
jp
out
js
popa
xchg
lret
call
xor
xchg
pop
xchg
adc
test
pusha
inc
cwtl
inc
test
push
fsubs
xchg
imul
mov
ss
xlat
stc
xabort
pop
scas
xor
cltd
enter
push
adc
cli
fsubp
mov
rcll
cwtl
popf
out
mov
mov
fdivs
dec
sahf
dec
mov
sbb
dec
rcrb
mov
loopne
dec
pop
inc
iret
jmp
clc
ds
hlt
jp
es
ret
rcll
add
testb
orl
cwtl
dec
pop
jns
shrl
test
leave
call
sub
dec
popf
stc
mov
mov
je
mov
and
inc
mov
and
push
stos
sahf
pop
stos
in
vsubss
xchg
sbb
mov
jno
aad
mov
not
xchg
loop
xchg
cwtl
fists
fmul
daa
js
mov
sbb
fisubrl
add
dec
xchg
inc
test
mov
push
sub
mov
in
cs
enter
xor
pop
fisubs
xor
shrl
lods
pop
sub
es
sub
loop
out
mov
jge
inc
sbb
fcom
jmp
cs
mov
inc
cli
repz
jb
and
mov
shrb
cmp
pop
out
jecxz
dec
rcr
sub
mov
fiaddl
imul
sub
fsubrl
pop
clc
int
fsubrp
dec
xor
cmpsl
dec
sbb
add
xchg
and
test
sbb
lods
jnp
cltd
sub
out
lahf
jae
arpl
mov
or
inc
sub
push
scas
xchg
shrb
mov
out
pop
cltd
repnz
ffree
mov
lret
mov
xchg
and
jmp
xchg
mov
clc
mov
adc
rolb
pop
nop
data16
push
sbb
jp
sub
xlat
insb
mov
lahf
cmpsl
jno
cmp
fwait
outsl
jle
out
cmp
rorl
inc
dec
mov
fs
in
adc
dec
mov
inc
cmp
mov
push
insb
test
rorb
notb
popf
sub
ds
mov
out
mov
mov
lods
or
or
ret
xor
cwtl
dec
hlt
cs
imulb
adc
incl
cmpsl
inc
xchg
dec
sbb
mov
fstps
mov
popf
in
in
inc
fmuls
inc
lcall
sbb
xchg
add
ficoml
fildll
imul
decb
lods
inc
pop
stos
xchg
pusha
mov
fsub
stc
pop
cltd
iret
inc
fwait
mov
and
inc
sub
mov
adc
pop
sbb
or
dec
nop
lock
inc
test
fwait
cmp
cwtl
push
sub
and
xor
gs
insl
mov
imul
sahf
fldl
out
je
mov
mov
dec
dec
mov
sbb
xchg
sub
xor
sbb
or
js
lcall
mov
lods
test
into
ret
loopne
ret
push
adcb
ds
lock
in
pushf
cld
imul
inc
adc
lret
mov
push
sbb
popl
jno
rcrb
cli
xchg
pop
xchg
push
test
inc
mov
fucomp
jae
jno
pop
inc
add
xchg
test
dec
mov
push
xchg
or
mov
aaa
cmp
lcall
mov
mov
pusha
negb
std
mov
repz
out
rorb
or
sub
mov
dec
sbb
dec
mov
rclb
imul
outsl
sub
cmpsl
fisttps
enter
outsl
scas
ret
mov
push
add
cmp
xchg
test
aad
mov
dec
inc
dec
sahf
gs
sub
ret
mov
pop
call
outsl
jmp
jae
mov
jecxz
add
scas
adc
or
add
addl
call
mov
push
hlt
mov
fcomps
jmp
and
test
sbb
cld
mov
xchg
in
adc
fucom
data16
xchg
test
add
stos
or
lds
ja
lds
ljmp
cmp
xor
cltd
push
adc
pusha
mov
jmp
pop
push
iret
mov
addl
sub
or
and
sbb
push
std
or
cmp
pusha
inc
cwtl
pop
out
xor
push
sub
fstl
pop
sub
gs
inc
lahf
and
out
mov
mov
in
hlt
or
xchg
xchg
jmp
icebp
mov
mov
leave
ds
and
xor
mov
lods
divl
sub
mov
push
lahf
lds
ds
hlt
mov
add
add
out
rclb
mov
xor
jns
xor
mov
imulb
adc
mov
sarl
test
dec
in
ja
movsb
fldcw
insl
ljmp
cmp
mov
clc
or
add
addb
ficoml
outsb
les
push
mov
icebp
jle
mov
jecxz
mov
inc
sbb
aam
jp
scas
mov
mov
out
les
add
or
mov
and
inc
rorb
ja
jp
mov
cltd
dec
movsb
inc
add
fsubl
cmp
popf
jb
xchg
test
push
or
dec
dec
mov
inc
adc
mov
sub
cmp
movb
mov
mov
call
fucomip
hlt
cmp
pop
add
push
cwtl
xor
add
ret
sbb
pop
sbb
out
movsl
ret
pop
ficoml
popa
cmpsb
ret
insl
fsubl
adc
stos
mov
or
pop
xchg
inc
call
fucomp
jae
jns
dec
inc
lcall
test
dec
mov
daa
sbb
cli
movsl
or
jno
mov
lds
leave
ret
jecxz
stc
sbb
mov
std
pop
dec
xchg
loop
jae
sub
fwait
addr16
shlb
or
dec
xchg
adc
xchg
xchg
cwtl
inc
test
dec
cmpsb
mov
rorb
cmp
mov
js
mov
in
insl
push
int3
ljmp
std
sbb
sbb
xchg
and
add
cltd
jne
enter
xlat
adc
ret
pop
push
add
popa
mov
mov
fstpt
icebp
jae
mov
jecxz
add
mov
dec
or
mov
inc
sbb
inc
pop
ret
cmp
push
fnstsw
jg
sbb
jns
jge
push
test
clc
mov
aaa
jns
and
stos
mov
ffree
jmp
sub
jno
inc
push
imul
mov
or
push
xor
jo
aam
cwtl
ja
in
mov
pop
jb
cmp
jbe
lods
ficomps
in
cmp
in
mov
mov
sti
and
js
or
clc
pop
fildll
mov
jp
rclb
dec
jns,pt
insb
pushf
imul
fdivrs
sub
mov
mov
push
jle
call
jl
sub
int3
inc
add
aam
mov
sbb
xchg
ljmp
lods
fmul
pop
test
fnsave
or
pop
dec
xchg
test
repz
ret
incb
mov
sbb
mov
inc
sub
mov
test
icebp
mov
nop
xlat
dec
test
add
ss
sbb
mov
ljmp
rcrl
test
rolb
or
xchg
lcall
les
push
mov
pop
inc
pop
mov
negb
mov
sub
inc
ljmp
cld
out
sbbb
insl
js
add
inc
sarb
clc
mov
into
mov
fs
leave
sbb
and
push
fisubs
sub
call
cltd
in
faddl
cmp
pop
sbb
and
add
and
nop
in
mov
lea
pop
mov
push
test
ss
pop
xorb
shl
pop
test
sbb
push
hlt
mov
cmp
sbb
iret
cmpsl
ret
fs
pmuludq
pusha
jg
pop
dec
iret
or
push
jge
leave
test
cmpl
mov
in
mov
pop
sub
les
sbb
ficoml
lcall
std
mov
mov
mov
pushf
inc
add
negb
mov
xor
fwait
test
mov
mov
jecxz
addl
adc
aam
gs
sbb
and
fsubs
adc
addr16
xchg
xchg
movsb
imul
xchg
cmp
movsl
cli
mov
xchg
xchg
ds
jae
xchg
pop
pop
out
cmp
out
jg
or
cmp
or
sbb
xchg
mov
negl
inc
add
mov
pop
mov
mov
jae
test
pop
or
cli
jp
popa
mov
add
mov
dec
out
cld
cld
inc
sbb
pop
and
add
xor
shll
lods
add
lds
pop
movsb
push
cmc
insl
mov
cmp
or
es
cmp
dec
push
jl
ret
loope
mov
or
jle
adc
fistl
pop
cmp
mov
shl
adc
sti
shlb
lahf
scas
je
adc
repz
dec
mov
js,pt
sbb
arpl
pop
inc
sbb
rorb
mov
addl
jmp
scas
mov
imul
scas
mov
push
xabort
pop
test
push
ror
mov
insl
add
push
sahf
inc
ds
ret
dec
mov
loopne
sub
lret
sbb
cmp
xor
shll
mov
shll
push
notl
insl
pop
adc
ret
fdivp
jnp
popf
rcrb
arpl
aam
cmpsl
mov
jbe
and
ret
inc
sbb
adc
xor
stos
roll
mov
dec
push
lret
mov
jnp
ljmp
aaa
in
xor
sahf
arpl
test
ret
mov
xchg
add
pop
stos
roll
xchg
pop
pop
fistl
cwtl
sbb
xor
jno
aad
mov
cld
pop
repz
out
pusha
inc
sarb
or
or
add
lret
xor
iret
test
aam
push
xchg
and
movsb
inc
and
frstor
push
sahf
and
cltd
out
cmp
nop
stos
mov
sub
xor
xchg
out
push
adc
dec
sub
jmp
lret
insl
cmp
add
int3
fwait
pop
movsl
push
jmp
hlt
or
pop
lahf
out
repz
ds
mov
fs
mov
enter
pop
push
lock
lock
gs
cld
inc
cmp
int3
inc
mov
icebp
decb
daa
adc
jmp
push
sbb
lods
movsb
leave
pop
sbb
stos
jae
cmp
iret
pop
add
lahf
ret
scas
gs
mov
test
hlt
adc
mov
cmp
sbb
xor
shl
adc
shl
pop
xchg
into
fcomi
js
mov
pushf
inc
dec
sub
cmp
rcll
sarb
jns
sub
add
or
sub
mov
xchg
cltd
addr16
nop
lea
cmp
adc
mov
mov
mov
adc
int
pop
adc
mov
and
jnp
add
adc
int
cmp
ret
loopne
mov
fwait
lahf
int
pop
lock
sbb
push
cld
das
enter
xlat
inc
mov
add
dec
lds
inc
cmpb
adc
aam
scas
fs
int
mov
jno
mov
jb
mov
stos
push
mov
dec
fs
fbstp
add
or
push
pop
sbb
push
pop
add
stos
jge
lret
scas
or
lea
xchg
mov
mov
fstp
dec
xchg
jbe
lods
and
bound
lahf
scas
jg
or
sub
leave
sbb
jo
sbb
pop
push
mov
inc
aam
es
sbb
jns
mov
or
test
or
out
jmp
int3
inc
lods
push
jne
outsl
cli
rcll
mov
mov
outsb
bound
out
adc
push
cmp
sub
add
out
aad
rol
adc
insb
xchg
dec
dec
sahf
dec
mov
xchg
ficoms
mov
int
pop
movsl
lret
jge
iret
xchg
incb
pop
mov
fwait
stc
xor
sbb
inc
sbb
aas
repnz
cwtl
add
mov
or
sarb
adc
test
roll
jns
adc
insb
inc
cmpsb
cmp
je
popf
idivb
or
jno
dec
data16
add
outsl
mov
or
sub
movsb
push
pop
xchg
dec
data16
xor
inc
xor
jp
ds
movsl
fcompl
jno
andl
inc
mov
fdivs
sti
add
add
pop
inc
cwtl
data16
push
fisubl
pop
mov
jle
pop
jno,pt
insl
notl
push
repz
and
pop
sub
add
or
sbb
sub
push
loopne
sbb
gs
outsb
leave
jno
cmp
int3
cltd
cltd
mov
loop
dec
into
lcall
xchg
ret
cli
imul
sbb
lock
mov
jno
sub
adc
lock
sarb
nop
push
lcall
xlat
xor
sbb
sbb
ja
stos
jmp
fstps
fcoms
mov
sbb
adc
xor
push
outsb
stos
std
push
leave
mov
mov
fcoml
mov
cmpsb
jno
pusha
mov
scas
mov
lahf
sahf
imul
loop
scas
popa
or
mov
jl
rorb
pop
mov
xchg
and
push
aam
fistl
pop
xchg
aam
mov
fisubs
pop
fsubl
lods
pop
adc
inc
cltd
faddp
inc
out
stc
jb
add
cwtl
cli
sbb
xchg
jmp
mov
outsb
imul
hlt
imul
add
les
inc
cmp
or
dec
pop
inc
and
pop
ds
aas
jl
push
hlt
mov
bound
ljmp
popf
pop
jp
cwtl
lret
inc
sbb
push
jne
in
pop
stos
fsubr
stos
imul
jecxz
push
mov
mov
imul
or
dec
jnp
xchg
dec
cmp
outsb
les
sbb
ret
jecxz
cmp
push
sub
xchg
fmull
repz
idiv
and
std
push
jecxz
arpl
pop
cmp
or
test
jle
cmpsb
mov
enter
push
fdivrs
jp
sbb
xchg
adc
and
call
sub
std
mov
into
add
inc
inc
mov
hlt
jp
imul
mov
cmc
shrb
lea
insl
mov
into
add
sub
pop
mov
arpl
jb
push
shrb
lea
pop
add
push
lds
add
repz
xchg
daa
mov
ret
sub
mov
dec
in
pop
inc
lahf
push
sbb
cld
std
movsl
lods
mov
popf
in
pop
arpl
mov
mov
xchg
cmp
dec
or
cmc
fisubrl
mov
ja
mov
push
and
imul
jbe
mov
mov
jmp
mov
fwait
leave
loop
pop
cmp
aas
add
test
sub
js
cwtl
lea
mov
sbb
mov
jmp
mov
jne
movsb
inc
inc
fstpl
ljmp
int3
pop
fsubl
mov
shlb
les
jne
jne
dec
jg
scas
cltd
js
sahf
gs
outsb
leave
jno
sbb
call
pop
mov
imul
jmp
lds
sub
decl
mov
add
sub
push
aad
jno
test
cwtl
lret
aad
leave
rcrb
sbb
test
idivl
stos
push
call
cmpl
pushf
dec
cmpsl
xchg
fcoms
sbb
mov
mov
push
addb
rorl
pop
mov
and
dec
mov
mov
std
jmp
shl
adc
dec
aad
mov
jmp
add
xchg
loopne
xchg
add
es
or
xor
xor
xor
add
movsb
inc
sbb
pop
aad
pop
cmp
enter
mov
int3
pop
xchg
cmp
loopne
fistps
je
push
fisubrs
push
dec
mov
rcll
out
mov
bound
or
lods
sti
es
pop
mov
clc
enter
mov
das
jns
jae
pop
add
sbbb
lock
enter
out
fsubrl
adc
ret
int
fs
inc
std
scas
inc
in
dec
sahf
or
addl
jge
jmp
repz
dec
mov
jecxz
inc
push
cmp
ret
xchg
add
mov
dec
movsl
or
pop
mov
lahf
sahf
fcoml
dec
cltd
lods
xor
scas
jne
cmp
js
imul
stc
dec
scas
arpl
pop
push
mov
and
or
inc
pop
inc
mov
and
fisubs
insl
xchg
imul
out
insl
push
inc
ljmp
and
jecxz
mov
enter
hlt
or
scas
shr
adc
sbbb
sub
sub
cmc
mov
shr
repz
rolb
fnstenv
xlat
out
xor
mov
in
xchg
jg
add
shl
push
add
pushf
repz
xchg
and
sbb
jns
fldcw
test
dec
sbb
sub
xorl
in
mov
fldt
je
mov
sub
nop
pop
daa
and
mov
dec
mov
lds
add
jg
outsl
pop
scas
daa
pusha
jbe
lods
pop
test
cmpsl
xchg
lahf
fists
addr16
shlb
pop
icebp
loope
mov
sub
push
pusha
inc
cwtl
pop
xlat
fwait
xor
jle
xchg
imul
inc
subb
lahf
pop
sahf
xor
outsl
push
ret
aad
or
out
les
add
dec
xchg
mov
sbb
xchg
je
mov
lock
inc
sub
fcoms
inc
cs
mov
sbb
xor
imul
xchg
jge
jns
ds
mov
lock
push
sbb
pop
sub
mov
jecxz
sbb
or
sub
negb
add
and
xchg
aad
pop
stos
and
ja
push
cmc
fndisi(8087
out
insl
ljmp
popf
in
dec
loope,pt
dec
cli
cld
push
dec
les
ljmp
test
stos
std
xor
mov
in
push
lods
mov
lds
sahf
rol
pusha
mov
jg
leave
ds
mov
inc
fwait
out
js
icebp
insl
js
ljmp
sbb
add
cwtl
inc
cwtl
adc
and
clc
or
addl
mov
mov
std
imul
pop
cmp
popf
jb
mov
cltd
push
add
mov
mov
push
sbb
mov
sbb
pop
das
idivl
repz
mov
or
jecxz
aas
movsl
ret
inc
loope
in
sub
add
add
lret
lds
jae
inc
sbb
jl
add
lds
fisttps
jae
lret
subl
je
mov
jno
dec
nop
push
lock
jo
dec
leave
outsl
mov
sbb
xor
movsb
adc
pop
scas
mov
in
jbe
jmp
pushf
fildll
mov
aas
inc
fwait
leave
inc
sti
and
adc
inc
mov
clc
mov
add
xchg
cwtl
jl
adc
push
movsl
ret
dec
mov
inc
cmp
mov
cmovge
pop
pop
fsubl
jo
push
jne
out
adc
ds
jecxz
mov
shr
inc
cltd
pop
jnp
fsubr
push
adc
pop
push
xchg
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
add
mov
in
mov
pop
rcrl
pushf
fcoml
or
mov
adc
mov
jg
stos
das
cmp
lea
push
xor
stos
dec
pop
add
jns
lds
cli
leavew
push
popa
sub
jmp
loopne
lahf
lcall
sub
xor
xchg
pushf
jne
mov
outsl
shlb
and
mov
xor
lods
inc
arpl
ficoms
and
decl
nop
adc
push
mov
clc
dec
fisubrl
add
dec
xchg
inc
test
xor
push
fisubl
xchg
mov
xchg
pop
inc
out
pop
jmp
mov
lea
mov
push
add
cwtl
hlt
je
xchg
xchg
in
jecxz
cmpb
ret
mov
cltd
fiadds
stos
scas
pop
stos
push
adc
pop
adc
inc
stos
shrl
mov
ds
mov
xor
sbb
imul
imul
mov
pop
push
cwtl
pop
xchg
pushf
dec
test
clc
mov
adc
xor
pop
movsb
inc
adc
scas
mov
mov
push
pop
fucomp
inc
add
xchg
test
movsb
les
ljmp
push
outsb
idivl
lcall
mov
mov
pusha
negb
push
int3
imul
repz
loop
push
sarb
sbb
mov
cmp
xchg
xchg
aas
enterw
adc
outsl
mov
stc
push
mov
sub
xor
mov
jmp
cli
out
cmp
out
cmp
jne
cmp
ret
mov
out
mov
cwtl
sbb
shlb
sub
sahf
dec
mov
into
add
fiaddl
movsl
lret
cmp
pop
jae
mov
lock
int3
mov
cltd
xor
mov
out
adc
and
xchg
and
mov
fdiv
push
test
rorl
sbb
dec
decl
mov
cmpsl
mov
subl
sbb
inc
sbb
jae
push
fimull
xor
std
xor
adc
loopne
loopne
popf
fstl
pop
cmpsl
push
je
out
jg
leave
loope
mov
push
or
popa
or
push
xchg
or
jae
jns
dec
xchg
dec
test
mov
push
sub
mov
ljmp
pop
stos
xor
pop
fidivrs
sti
xor
add
aam
sub
xchg
enter
hlt
push
fldcw
jne
dec
jg
scas
cltd
js
sahf
shlb
test
xorl
push
hlt
mov
in
fucomip
add
lret
jecxz
gs
roll
cltd
je
repnz
mov
mov
nop
aas
xchg
and
movsl
mov
lds
sbb
xchg
sar
repnz
test
or
cmc
lods
and
xchg
sti
in
mov
push
sti
mov
cld
xor
dec
lret
jmp
imul
outsb
shrb
mov
fcoml
jbe
mov
addl
loop
lcall
fs
andb
mov
push
inc
pop
adc
cwtl
movsb
mov
and
imul
mov
mov
fisubs
stc
sbb
ret
aad
dec
mov
mov
mov
dec
push
or
int
inc
or
insl
mov
jbe
mov
push
cmp
dec
inc
mov
mov
push
rol
mov
add
ret
mov
adc
cmpsl
mov
lret
inc
test
inc
sub
and
push
sbb
push
sbb
sub
dec
inc
fists
sahf
xorb
out
push
xchg
sbb
cmpsl
bound
dec
dec
sub
inc
sbb
stos
push
pop
mov
jnp
lcall
pop
inc
int3
lods
xor
scas
movl
fistps
xchg
loop
mov
mov
or
es
or
xor
push
stos
push
sbb
dec
and
sbb
es
push
insl
fwait
insl
lea
cmp
clc
cmp
jne
shr
mov
int3
inc
push
xchg
dec
lret
mov
cltd
sahf
inc
xor
scas
mov
cmc
hlt
imul
mov
int
cmp
mov
call
fistpl
iret
lock
push
out
jo
or
add
lea
sbb
test
test
push
aad
cmp
sbb
adc
test
dec
xchg
dec
cmpsb
subb
imul
pusha
add
test
lahf
push
addb
stos
jge
mov
add
jl
fnstenv
outsl
pop
push
pop
insb
mov
fcoml
nopl
dec
fildl
outsl
dec
loope
jo
sarb
or
sarb
mov
add
sbb
test
bound
inc
gs
push
ret
cmp
fldenv
push
adc
sub
roll
subl
or
subb
arpl
mov
jbe
mov
lods
negl
cvtdq2ps
shrl
into
fidivrl
jbe
ds
mov
mov
add
ret
mov
mov
testb
roll
sbb
vandnps
repnz
inc
inc
and
lret
cmp
mov
call
shrl
sbb
cs
mov
adc
push
mov
or
mov
jmp
rolb
add
jmp
mov
fcmovnb
js
jle
cmp
fwait
leave
inc
xchg
inc
shlb
push
addl
or
xor
cmp
fidivrl
test
daa
popf
xor
lahf
cmpsl
push
push
fdivs
mov
adc
enter
cwtl
stc
add
sub
popf
mov
jmp
cs
mov
dec
insb
test
pop
clc
mov
aam
sti
es
pop
mov
clc
ds
mov
popa
lahf
es
push
mov
rcrl
xchg
mov
divb
mov
sbb
rorb
adc
mov
mov
mov
push
xor
add
jns
iret
fucom
jmp
dec
cli
sub
addb
xchg
lcall
sub
mov
mov
scas
pop
test
lods
inc
test
sub
pop
mov
js
enter
sbb
jo
popa
or
jns
clc
inc
shlb
add
fwait
xor
rol
dec
push
xchg
mov
in
add
jmp
mov
insl
push
inc
ljmp
sti
xor
jne
mov
loop,pt
inc
mov
push
mov
mov
sbb
jb
jbe
mov
adc
call
inc
fnstcw
xlat
out
aaa
sti
mov
test
hlt
inc
mov
add
rcrl
add
xchg
js
divb
xchg
stos
jns
fildl
inc
lods
mov
jns
shl
out
les
shrb
arpl
push
or
inc
mov
les
lcall
mov
adc
icebp
fdivrs
test
cmpsb
inc
xchg
loop
fwait
cwtl
mov
js
xlat
and
dec
sub
dec
xchg
stos
add
cmp
inc
mov
inc
cwtl
in
movsb
pushf
mov
and
mov
xor
mov
cmp
mov
cmp
cmpl
jae
enter
cwtl
pop
cmpsb
sub
sub
fisubrs
popf
out
push
stos
push
cs
mov
dec
insb
test
pop
clc
mov
aam
sti
es
pop
mov
clc
ds
iret
lock
arpl
ret
add
add
add
sub
leave
or
xor
rcrb
lahf
xchg
pop
xchg
dec
popa
shrl
inc
dec
pop
int
addl
xchg
arpl
sbb
test
sub
addr16
pop
stos
sahf
pop
stos
ja
lds
add
jg
outsl
pop
scas
pop
xchg
mov
lods
xor
pop
inc
xchg
mov
fists
inc
xor
pop
mov
rolb
popa
rcr
adc
mov
push
xchg
imul
push
mov
fisubs
insl
leave
in
cli
mov
inc
mov
int
sub
dec
push
inc
jbe
dec
mov
push
push
test
adc
ret
idivl
jnp
mov
into
push
leave
stos
idiv
mov
or
jg
sbb
in
inc
int3
mov
mov
lods
or
out
pop
ret
repz
xchg
and
sbb
cmpsb
flds
push
cli
mov
adc
mov
fucomp
jae
push
clc
sub
aaa
imul
cmp
ret
test
xor
test
xchg
cmpsl
xchg
or
dec
push
mov
lods
mov
mov
shll
mov
sub
js
popf
xchg
xor
sbb
xchg
add
mov
and
add
dec
shlb
sbb
shll
add
imul
pop
pop
cmpsb
inc
mov
jae
arpl
outsl
push
ret
vrcpss
out
leave
rclb
cmp
daa
adc
mov
cmpb
dec
mov
cmc
cmp
shl
mov
les
sub
ljmp
mov
clc
sti
pop
adc
ret
shll
push
add
addb
movsl
sub
adc
leave
inc
out
fsts
mov
arpl
lock
les
xchg
lea
sbb
dec
push
lret
sub
mov
dec
sar
arpl
xchg
leave
sbb
or
ret
faddl
js
push
stos
fnsave
enter
mov
mov
imul
loop
jle
sahf
dec
ror
loop
inc
xor
inc
xchg
xchg
or
adc
or
bound
push
mov
mov
ficompl
lods
cld
cli
xsha1
cmpsb
mov
fcmovbe
or
cmp
jne
jecxz
scas
inc
out
sub
sub
or
outsb
imul
lods
gs
jbe
mov
push
cmp
dec
inc
mov
cmp
jae
xchg
inc
xchg
in
imul
cmp
mov
mov
test
jno
inc
aaa
adc
test
dec
and
sbb
test
inc
mov
sbb
or
ret
lock
test
test
fimull
xor
std
xor
fptan
mov
pop
xchg
sub
pusha
pop
dec
out
pusha
mov
jmp
fbld
out
js
pop
and
push
test
mov
inc
mov
stc
fmull
lcall
mov
pop
pop
cmpsb
out
fisttpl
jo
insl
sahf
push
lds
enter
insb
aaa
jecxz
leave
cwtl
pop
loope
shr
jnp
mov
cs
rol
jle
mov
fldt
mov
scas
mov
imul
mov
fildll
inc
sbb
mov
and
mov
lds
js
lock
shlb
xlat
stos
jns
sbb
inc
lods
mov
jge
movb
jae
pop
stos
repz
ljmp
adc
jae
or
mov
xchg
pop
push
roll
test
xor
jb
mov
loope
mov
ret
cmpsl
ficoms
mov
scas
mov
lcall
add
or
jecxz
rorl
dec
sbb
add
pop
and
cmp
xor
xchg
sbb
inc
mov
sub
pop
lea
pop
cmp
out
scas
mov
pop
sub
mov
sub
adc
and
sbb
gs
ss
popf
jbe
mov
mov
xchg
iret
fucomip
add
ds
hlt
movsl
ret
inc
sti
mov
sbb
add
ror
add
orl
cmp
pushf
dec
xor
roll
add
dec
inc
mov
mov
xchg
in
adc
fucom
data16
xchg
test
sbb
lods
fsts
pop
das
mov
jnp
inc
sub
pushf
shlb
pop
xchg
jbe
cmp
sbb
scas
mov
mov
out
js
loope
lret
call
adc
mov
aam
jns
dec
and
les
fwait
xchg
ljmp
in
imul
or
jae
gs
inc
sbb
loop
je
fadds
dec
push
or
xchg
adcl
pop
sub
into
jmp
pop
movsl
test
mov
push
xor
pop
adc
inc
mov
fsubp
sahf
fldcw
sti
scas
inc
sbb
or
cmp
mov
gs
cld
inc
add
mov
fs
jb
mov
mov
pop
inc
mov
out
stc
mov
mov
add
iret
ljmp
adc
adc
stos
jge
cmp
mov
fcmovnu
xchg
sbb
ss
or
cmp
inc
push
test
mov
mov
imul
mov
mov
adc
roll
stc
mov
xor
push
inc
inc
gs
imul
inc
scas
sub
lahf
fucomp
test
bound
scas
mov
cltd
enter
push
adc
xchg
mov
hlt
xor
xchg
dec
mov
mov
push
inc
mov
in
adc
negb
scas
shrb
pop
loopne
mov
push
jb
mov
stos
lahf
in
dec
dec
xor
rcrb
loope
sbb
hlt
movsb
jno
mov
int
inc
sbb
jg
mov
push
mov
mov
sbb
dec
push
dec
adc
sbb
jecxz
arpl
jo
hlt
adcl
xchg
ficoml
mov
cmp
jns
int
test
fstl
pop
adc
lock
scas
movl
xchg
loop
inc
cmp
pop
sub
rolb
scas
xorb
dec
shll
jns
dec
xor
addl
aad
pushf
rolb
jg
cmpsb
jnp
enter
outsl
push
ret
mov
push
add
cwtl
hlt
xor
nop
nop
in
adc
shl
dec
daa
jmp
lret
sbb
lods
adc
mov
shr
sbb
int
pop
adc
jno
cmp
jae
nop
jl
lahf
in
and
mov
movl
mov
sbb
test
imul
jecxz
imulb
sbb
sub
xor
loop
rolb
in
insl
scas
jae
lret
sahf
xorl
mov
movsl
pop
sub
push
and
push
scas
xchg
ficoml
orl
rorl
movsb
lods
ss
shrb
jnp
dec
inc
pushf
xor
cli
cmp
cmp
xlat
cld
jae
popl
addl
push
add
or
rcr
and
or
xor
lock
sub
aad
pop
adc
or
mov
or
out
adc
pop
inc
sub
inc
aas
out
mov
jne
dec
movsb
nop
out
push
adc
ret
pop
std
sti
int3
sbb
test
xor
pushf
divb
pop
push
dec
inc
mov
jl
lahf
int3
push
clc
add
mov
push
or
pop
pop
add
imul
mov
push
sbb
mov
stos
orl
inc
mov
movsl
xchg
jge
jp
adc
dec
mov
jno
inc
push
and
pop
mov
aas
sub
jne
inc
xchg
sub
dec
stos
xchg
xlat
out
jl
fistpl
icebp
shrb
and
adc
aad
out
scas
call
lahf
or
jo
popa
or
or
addl
or
xor
pop
or
adc
xchg
mov
dec
lods
xlat
push
fsubl
mov
xchg
std
repz
mov
fs
jae
enter
dec
push
or
orb
jmp
mov
xor
sub
jns
call
jne
packssdw
xchg
jge
fbstp
sub
in
mov
out
mov
mov
push
lds
bound
cmpsl
mov
cmpb
out
cmpsl
ret
sbb
xchg
scas
xchg
jb
mov
dec
in
pop
inc
lahf
push
sub
stos
pop
popf
es
ficomps
leave
mov
dec
mov
or
inc
mov
les
lcall
mov
sbb
push
shrb
enter
mov
pusha
sub
push
cmpb
and
popl
xchg
sbb
pop
mov
jb
sbb
rclb
addb
sbb
aas
imul
imul
stos
sub
lahf
fucomp
test
bound
in
mov
cltd
enter
push
adc
nop
js
mov
hlt
mov
xchg
inc
mov
mov
push
dec
mov
push
cmp
mov
std
pop
xor
push
mov
shrl
xchg
jge
ffreep
cmp
cmpl
gs
mov
pop
sub
sbb
mov
mov
rcrb
sbb
dec
pop
jns
stc
lods
dec
test
test
sub
pop
jp
lock
and
cltd
inc
out
test
sbb
subl
lret
jmp
imul
adc
pop
mov
add
sbb
ficoms
jl
pop
jo
lods
mov
adc
mov
mov
xchg
dec
sarb
loopne
mov
adc
aaa
imul
mov
inc
cmp
out
mov
ret
fld1
gs
insl
mov
cmp
jle
sbb
push
jp
lahf
aad
add
cmc
mov
mull
jne
jo
rclb
mov
sbb
mov
repz
repz
div
jmp
and
inc
add
sub
or
and
mov
mov
jno
dec
and
roll
sbb
vandnps
bnd
and
shrb
jns
scas
pop
fucom
repz
pop
jns
pop
and
les
stos
ret
into
xlat
ficoml
outsb
stos
and
lods
movb
ret
mov
inc
sbb
mov
shl
scas
inc
fstpt
dec
sti
and
cwtl
add
and
xor
pop
adc
mov
xchg
sub
inc
cmpsl
adc
movsb
pop
inc
gs
adc
pop
pushf
rolb
lods
cli
inc
test
bound
test
jne
jecxz
mov
xchg
mov
sbb
mov
sbb
movsb
xor
in
jne
cltd
shl
mov
ret
fistpl
rol
loopne
pop
inc
iret
fucomip
in
lcall
iret
ret
fdivp
jnp
cmpsb
mov
addb
xor
push
adc
lret
lds
stos
mov
adc
nop
aaa
adc
inc
loopne
dec
sbb
inc
mov
aad
pop
popf
shrl
ljmp
xor
xchg
icebp
stc
adc
inc
sbb
int3
lret
add
inc
sub
shrl
lock
jecxz
frstor
xchg
jp
scas
pop
sarl
push
outsl
push
xchg
loop
xchg
adc
or
pop
outsb
rcl
je
mov
addr16
stos
adc
fsubs
xchg
mov
lahf
dec
aaa
enter
mov
mov
xor
or
pop
sub
inc
push
xchg
dec
iret
mov
mov
inc
sub
loope,pn
jne
dec
mov
repz
imul
mov
call
int
in
lcall
push
ret
jnp
mov
nop
mov
hlt
mov
dec
pop
adc
pop
test
cwtl
pop
pop
mov
pushf
fs
jb
mov
mov
inc
fists
stos
mov
pop
std
xor
aaa
mov
pop
sub
mov
jae
les
xchg
lret
or
dec
lcall
sbb
inc
pop
call
fstl
fwait
xchg
popa
jnp
lods
lahf
xchg
cmp
ret
dec
js
adc
js
sbb
sbb
test
dec
test
roll
rcll
push
fisubl
dec
fst
in
mov
mov
adc
call
movsb
sti
repz
mov
lock
mov
stc
insl
ljmp
in
mov
add
ficomps
push
mov
mov
mov
inc
jnp
lcall
mov
adc
mov
mov
dec
sbb
adc
lret
push
mov
cwtl
push
divb
nop
xlat
stos
les
push
mov
push
cmc
fisttpl
dec
or
push
ffree
xchg
mov
adcb
in
bnd
int
ficoml
lcall
std
mov
mov
test
cmpsb
js
vpsraw
aad
mov
pop
jo
or
xor
pop
std
add
sbb
add
mov
pop
stos
ret
adc
sbb
mov
gs
jmp
add
mov
xchg
add
clc
les
lea
bound
loop
xor
mov
mov
shrb
mov
out
push
repnz
sbb
cmp
or
mov
mov
inc
sahf
cmp
mov
cwtl
cmpsb
lds
ds
repz
test
in
fcmovbe
inc
sub
inc
pop
cli
rorb
hlt
mov
push
lret
imul
enter
stos
and
aam
popf
movsb
leave
pop
sbb
fs
pushf
enter
ja
xchg
test
ret
add
cli
es
sub
jp
rorl
stos
fistpl
jo
or
sarl
pop
mov
add
jmp
sahf
sahf
xchg
cld
push
fbstp
sbb
xor
adc
lret
subl
shll
mov
dec
aam
jns
mov
pop
cmp
push
or
inc
mov
inc
fstl
mov
into
clc
xchg
pop
fidivs
fcomi
imul
out
mov
sub
xor
xchg
enter
cmc
xor
outsb
clc
dec
sahf
or
mov
cltd
jb
shrl
sbb
add
ret
loopne
pop
adc
pop
mov
xor
add
mov
ss
add
roll
enter
or
mov
cltd
jl
icebp
xor
mov
xor
test
lcall
ja
push
loope
dec
sbb
xor
dec
pop
lret
rcrl
nop
fisubrl
add
pop
inc
push
or
xchg
stos
std
cld
pop
popa
or
mov
movsl
mov
pop
pushf
sub
cmp
cmpb
ja
iret
js
jle
xor
int
cmp
inc
and
subl
idiv
mov
dec
mov
jns
dec
xor
inc
add
jmp
or
outsb
push
rcr
call
and
and
daa
rorb
daa
sbbb
test
dec
dec
mov
sbb
out
cmc
xor
mov
dec
loopne
cmc
js
lods
test
inc
push
sahf
sbb
mov
repz
pop
sahf
dec
lahf
in
cld
out
rcrb
ficomps
push
imul
inc
mov
pop
out
cmp
push
pop
roll
push
mov
sbb
dec
jnp
push
fildll
jmp
repz
ljmp
fs
mov
outsb
push
cld
xor
xchg
or
xchg
rorl
scas
fwait
popa
jp
cmp
xor
mov
add
xor
ret
out
in
mov
pushf
cli
sti
and
sbb
xchg
push
mov
or
push
inc
cwtl
adc
dec
and
rcrl
inc
insl
jmp
popf
stos
stos
cmp
aam
fsubs
xor
leave
dec
int3
pop
sub
push
push
push
dec
mov
push
dec
sub
loopne
xor
rorl
stos
les
push
sahf
sub
test
push
int
adc
call
jecxz
movl
mov
xor
jg
pop
ret
inc
cltd
insb
psllw
frstor
decl
jno
test
movsb
fldcw
stc
mov
mov
leave
mov
jo
test
mov
xchg
add
xchg
outsb
shrb
pop
mov
ret
adc
pop
fs
dec
scas
inc
sbb
mov
mov
imul
inc
xchg
jo
rcrl
sub
or
sub
ret
test
xchg
sub
data16
fidivrl
pop
dec
mov
push
lea
push
gs
insl
scas
inc
rol
insl
popf
out
out
ret
mov
add
inc
inc
and
adc
ret
popl
adc
shl
pop
stos
les
push
mov
fld
mov
in
lea
div
sbb
cmp
lock
jo
fsts
inc
ret
sbb
scas
movsl
sbbb
pop
ret
popf
cmp
test
mov
cld
sub
jne
mov
jbe
stc
mov
lods
xchg
dec
popf
lret
mov
xchg
push
dec
inc
shrb
add
dec
ss
stos
std
xor
mov
mov
pushf
sbb
xchg
cwtl
fstl
jnp
dec
pushf
sub
ficoms
mov
test
inc
js
shlb
js
fildl
sbb
mov
dec
xchg
gs
dec
inc
mov
rcll
fnstcw
xchg
mov
mov
divps
xchg
mov
pop
mov
cmpsl
jnp
enter
jl
lea
loopne
push
xor
test
push
ficoml
int
imul
mov
or
int
lea
ss
mov
loop
adc
or
loopne
div
jmp
movsl
mov
aas
add
gs
or
das
push
into
jp
aad
inc
sbb
rorl
dec
inc
addl
lahf
pop
sub
xchg
mov
xchg
in
mov
enter
mov
test
imul
push
jb
lods
jle
dec
movsb
cmp
test
movsl
les
lods
mov
mov
mov
cwtl
lock
adc
or
movsl
jae
mov
mov
js
push
xchg
imul
std
scas
call
ret
mov
xlat
pop
clc
enter
je
imul
inc
mov
hlt
je
and
or
int
js
push
dec
mov
sbb
gs
in
ljmp
ja
dec
test
aam
sti
pop
mov
xchg
add
std
fwait
pop
fs
jnp
mov
cltd
jo
lock
int
inc
sbb
jg
mov
sarb
jge
inc
xlat
sub
lds
sbb
test
test
mov
in
jno
movl
rcrl
lret
or
sbb
mov
mov
ret
jnp
dec
pop
jl
jecxz
fstl
mov
into
scas
jg
pop
loope
mov
add
fsubrl
stc
cmpsb
adc
cmp
mov
adc
es
or
xor
cmpsb
adc
and
repnz
movsb
jp
dec
inc
push
imul
mov
cmovae
mov
psubw
cmp
mov
cwtl
fisubrs
xchg
enter
int3
inc
dec
mov
mov
cltd
pop
xchg
cmp
xor
cltd
mov
out
mov
out
ss
aam
xchg
into
lcall
mov
jae
mov
mov
repnz
lock
push
aad
lds
xchg
cltd
sbbl
clc
stos
push
aaa
or
dec
cld
or
sub
xchg
std
fnstenv
fidivs
jl
or
cmc
push
pop
inc
inc
push
stos
pop
mov
adc
ficoml
clc
fwait
lods
movb
push
fwait
mov
pusha
mov
leave
in
sar
inc
pushf
repnz
and
push
mov
aam
fcoms
or
orl
roll
lea
std
dec
mov
inc
mov
xchg
js
clc
sub
out
cmp
mov
or
lret
in
push
or
xchg
jle
push
dec
mov
pusha
lret
popf
orl
sub
call
les
jg
push
add
mov
push
rcrb
sbbl
repnz
push
push
jp
fnsave
test
sbb
push
or
aad
push
test
jmp
ljmp
lahf
stos
sbbl
fisubrs
pop
jae
les
imul
lahf
ficoml
outsl
xchg
std
xor
adc
pop
pushf
lret
cmpsb
leave
push
inc
pushf
fwait
popf
iret
imul
fists
sti
out
mov
rclb
inc
adc
clc
jb
mov
jns
dec
xchg
lock
mov
stc
xchg
dec
movsl
ret
mov
arpl
pop
sahf
xchg
and
std
lods
jbe
fwait
lea
mov
hlt
sbb
jle
and
xchg
jne
dec
mov
int
stos
mov
lcall
adc
imul
imul
sti
hlt
mov
sar
add
or
imul
shll
aas
sub
out
cmpsl
ret
sbb
adc
fsts
cmp
bnd
loope
jne
std
jae
lret
push
mov
sbb
test
mov
cltd
nop
mov
sub
movsl
sbb
lcall
mov
mov
push
movb
mov
sti
push
mov
jp
jo
arpl
push
inc
adc
test
andl
rcr
xor
jle
rcll
data16
push
sbb
jge
jmp
addl
stos
cmp
fdivs
fdivrl
icebp
mov
clc
cmp
out
cld
fadds
mov
xchg
xchg
aad
jne
dec
movsb
xchg
xchg
xlat
mov
ret
xorb
cmp
add
fmuls
test
or
iret
ffreep
pop
sbb
pop
sahf
xlat
xor
outsl
mov
add
add
lret
pop
ljmp
pop
lret
in
popf
jnp
mov
mov
negl
cmp
push
dec
repnz
pop
inc
inc
pop
dec
push
dec
subl
je
mov
cmp
rcrb
inc
push
stos
pop
mov
sbb
pop
dec
fistl
mov
dec
test
jae
in
push
testb
cmp
cltd
stc
jl
adc
inc
test
pop
sbb
add
dec
shlb
fmuls
addr16
aam
xor
icebp
imul
das
xchg
mov
cmp
gs
insl
mov
cmp
ret
mov
inc
ret
ret
add
xchg
push
hlt
test
movsl
xchg
mov
add
xor
mov
xchg
sti
adc
shrl
mov
in
out
sub
sbb
xor
aam
xchg
mov
or
inc
pop
adc
insl
lcall
push
lock
rcll
cmp
adc
lds
cli
es
sub
ficomps
scas
xchg
in
mov
rolb
sbb
ret
pop
fsts
xchg
mov
shll
aad
nop
push
sbb
push
bound
ret
jge
inc
in
clc
js
popf
fists
inc
mov
call
push
scas
or
cwtl
pusha
xor
mov
rcll
pop
push
xchg
vmulss
cmpsb
fidivl
inc
bswap
mov
xchg
mov
loop
int3
pop
sub
int3
inc
pop
push
inc
mov
sub
cmpsl
cmp
xor
mov
test
cmc
mov
sahf
lret
arpl
fstps
sahf
fldt
mov
jmp
fidivrs
jns
add
cltd
jo
xor
lock
mov
jno
dec
xchg
jo
in
mov
sbbb
xchg
push
lret
lcall
movsb
jmp
jmp
fildll
add
jmp
add
inc
and
adc
add
ss
push
mov
xor
test
pop
xchg
jbe
cs
mov
jge
or
out
cmp
pop
dec
pushf
jnp
cmpsb
adcb
mov
clc
mov
adc
pop
jb
and
dec
aam
sti
fwait
xor
fsubs
push
fwait
and
and
insl
push
inc
test
xlat
pop
fldz
ret
arpl
int3
pop
and
cltd
xor
shr
pop
sbbb
pop
mov
xor
movsb
jbe
call
cmpsl
lcall
sbb
arpl
lds
jp
cmpsl
fdiv
js
jae
mov
fimull
pushf
or
or
fdivs
dec
and
mov
cli
dec
sarb
jge
test
mov
cli
sub
pop
lcall
test
fs
fisttpll
lret
test
mov
ret
or
xchg
lret
or
sbb
ja
test
cmp
mov
aad
mov
in
sbb
repnz
xchg
mov
enter
cmc
mov
dec
push
cwtl
cld
push
xor
cld
dec
testl
rcl
sti
stc
aas
je
cmp
xor
popf
stos
stos
cmp
aam
fdivrs
xor
mov
or
orl
sub
mov
sub
in
pushl
adc
add
ret
popa
pop
mov
sbb
push
in
in
mov
lods
cltd
pop
push
inc
orl
popa
lahf
mov
and
xchg
add
or
mov
aaa
sub
xchg
or
mov
pushf
inc
fstps
push
push
and
lds
ret
push
in
dec
mov
mov
cmp
jae
ljmp
pop
sub
push
ficompl
push
scas
add
xor
shrb
cmpsl
jns
inc
pop
cld
or
sbb
pop
test
das
jg
fxam
cmp
icebp
stc
cmc
and
sbb
pop
xchg
addb
pop
or
pop
ret
xchg
scas
mov
adc
add
push
sbb
sbb
mov
popf
cmpsl
sti
xor
or
mov
sbb
sbbb
cmp
cltd
mov
out
cmc
adc
mov
xchg
pop
adc
adc
int3
bound
lods
imul
cwtl
out
loopne
cltd
pop
adc
lahf
push
push
jnp
mov
mov
aaa
cli
das
mov
and
mov
xor
fsubrl
pop
imul
mov
pop
test
mov
mov
push
in
mov
rcrl
cld
stc
or
lock
enter
mov
les
lcall
jge
mov
sbb
mov
push
lods
shrb
int
and
mov
jecxz
xchg
sahf
xchg
pop
out
mov
leave
loop
cmp
mov
inc
inc
cmp
jmp
dec
cltd
gs
les
xlat
pop
leave
movsl
ret
clc
fcoms
cmpsb
cli
xor
scas
roll
xchg
addr16
clc
cmp
out
push
aam
test
inc
sub
insb
movsb
xchg
in
xlat
xchg
int
push
mov
out
add
lea
movsl
dec
lock
pop
push
andnps
pop
lock
in
rcr
clc
pop
sub
cltd
dec
adc
xchg
xor
popf
fisubrl
and
xchg
icebp
scas
inc
mov
scas
test
shl
clc
ss
lret
and
sahf
popf
stc
dec
pop
cmp
je
shl
addl
test
sarb
sub
xor
lret
push
outsb
shrl
jae
lods
jle
cltd
lds
xor
cmpsb
test
int3
das
inc
cld
repnz
add
fwait
add
dec
rolb
test
dec
xor
lret
push
mov
test
push
cltd
mov
xlat
mov
cmpsb
enter
addr16
fld1
gs
outsl
or
aad
and
cmp
cmp
xor
nop
sub
adc
arpl
ret
rcll
add
push
mov
shrl
mov
ja
ds
mov
mov
sbb
sub
jno
xchg
mov
test
mov
fs
or
push
insb
aad
in
sbb
scas
mov
ffree
jmp
lret
rol
loopne
push
mov
pop
daa
sbb
ret
xchg
das
sub
jns
adc
movb
adc
xchg
ja
xor
xor
push
dec
xchg
arpl
add
sti
and
mov
fdivs
mov
push
mul
or
les
aam
sbb
gs
jae
int
lahf
cmpsl
ret
xchg
and
fwait
outsl
or
cmpsl
shrb
enter
or
daa
mov
daa
dec
dec
mov
jne
dec
adc
or
dec
sbbb
push
mov
push
fdivl
call
aam
xorl
inc
scas
in
lcall
dec
adc
jecxz
sbb
test
add
shrl
js
mulb
jno
js
aad
inc
sbb
rcrb
repnz
rorb
jnp
and
lds
mov
cld
mov
ja
pusha
jmp
sar
cmp
pop
sbb
daa
and
mov
adc
sub
xor
lods
jle
dec
shll
jnp
inc
mov
push
inc
push
dec
mov
or
outsb
mov
xchg
sbb
push
add
dec
add
popl
test
dec
xchg
cmpsb
stc
xor
push
loope
in
add
mov
push
cmp
cmp
fdivs
sbb
clc
cmp
jecxz
je
sbb
je
xchg
xchg
xchg
aad
mov
out
pop
ret
addb
pop
in
dec
mov
lock
xor
orb
add
sub
dec
pop
add
lds
push
push
dec
or
insl
movsb
ret
and
popa
cmpsb
ret
insl
faddl
sbb
test
sbb
clc
sub
or
cli
test
push
cmp
mov
je
mov
sub
add
mov
jge
dec
movsl
adc
sbb
fistl
xchg
jbe
xor
xchg
cltd
aad
mov
leave
in
mov
into
cmc
cmp
add
or
inc
cmp
xchg
aam
inc
mov
adcl
mov
push
pop
test
in
xchg
jae
fsubrl
mov
lcall
iret
inc
sub
hlt
xor
ror
cmovne
dec
movsl
adcl
fdivrs
xor
into
arpl
inc
call
mov
sbb
pop
lds
push
xchg
xor
inc
sbb
and
push
repnz
xchg
stos
cmpsl
or
dec
int3
std
fs
icebp
push
fiaddl
dec
sbb
inc
std
aad
decb
add
mov
jmp
std
xor
test
pop
pop
adc
adc
ret
ficoml
subl
xchg
mov
add
pop
in
subb
fstl
pop
scas
bound
scas
jg
leave
in
mov
dec
sti
icebp
popa
or
unpckhps
add
pop
inc
ret
jmp
pop
stos
aam
mov
jnp
inc
push
mov
fs
aad
pop
int
jne
jo
rol
push
cmp
mov
pop
sub
orl
dec
inc
mov
cltd
cmp
aam
cmpsl
cwtl
cmc
xor
mov
fprem1
popl
sahf
sub
mov
dec
sbb
adc
jne
sub
test
sbb
in
hlt
add
scas
jo
sbb
pop
lock
lock
adc
int
sbb
lods
sbbl
cmp
push
ja
inc
in
dec
sahf
or
mov
jge
pop
sbb
jecxz
jmp
out
xor
mov
sbb
imul
jo
xchg
adc
cmp
rorl
mov
mov
pop
and
fstl
pushf
cmpsl
jmp
mov
sahf
scas
inc
cld
jnp
xchg
loopne
sti
add
adc
add
stc
popl
es
lret
inc
cwtl
data16
push
fidivrl
pop
dec
sub
xchg
imul
push
int
stos
cmp
into
loop
pop
fsubs
sti
mov
xor
and
cmp
xchg
sbb
loopne
aam
sub
xchg
das
movsb
popf
out
push
adc
shrb
pop
pop
mov
jae
push
test
pop
ffreep
aam
xchg
mov
pop
or
out
imul
hlt
mov
push
pusha
jp
mov
add
xor
insl
mov
and
insl
lcall
adc
das
jb
mov
lret
push
add
sti
test
pop
cmp
fnstenv
mov
je
mov
insb
repnz
jae
les
loop
or
sub
fisubl
jl
lret
jno
lds
pop
jl
pusha
test
ficoms
inc
sub
push
inc
out
out
rclb
inc
mov
xor
and
rcll
pop
data16
push
sbb
pop
push
mov
jmp
test
mov
xor
into
clc
fcomps
cmp
mov
mov
int3
inc
fidivrs
enter
sbb
dec
shlb
dec
movsb
popf
xchg
xlat
repnz
ret
pop
pop
mov
ss
stc
pop
pop
add
pop
xchg
iret
xchg
mov
add
sbbl
cltd
orb
cltd
mov
inc
sbb
jg
lcall
shrl
sbb
dec
ljmp
xchg
rcl
leave
ljmp
dec
pop
sbb
daa
sbb
lcall
sbb
mov
pop
mov
enter
inc
cs
loopne
cmc
mov
out
pushf
push
mov
in
push
addl
pop
jmp
sub
dec
xor
aam
fwait
fwait
xor
mov
out
or
sbb
stos
xor
loop
pop
pop
cmpsl
sti
xor
in
xor
mov
int3
adc
xchg
jecxz
adc
add
jg
mov
mov
insb
push
adc
bound
sbb
test
aaa
lods
cmp
xor
mov
out
sti
pop
pop
roll
mov
imul
add
mov
clc
mov
fimull
cmpsb
ret
pop
sub
lock
ror
push
fs
stos
mov
ja
push
dec
ret
enter
movsb
fsts
out
push
lret
fucomp
mov
repz
or
mov
xchg
test
popl
or
cmp
shlb
jns
or
mov
jecxz
lcall
jp
jg,pn
sbb
fldl2t
in
inc
and
or
push
sub
dec
xchg
popa
pop
xchg
sub
js
fwait
xor
clc
push
sub
and
and
mov
insl
jmp
push
mov
mov
int3
pop
and
cltd
xor
add
mov
js
pop
mov
pop
lahf
gs
xor
es
sbb
pop
adc
push
or
pop
mov
shll
mov
jbe
insl
mov
cltd
test
repnz
rcrb
mov
imulb
ret
icebp
ret
sbb
add
std
stos
push
sub
mov
jns
push
aad
jmp
js
loopne
cmp
movsb
ror
push
sbb
inc
repz
inc
pop
jnp
into
xlat
lcall
movsl
stos
fnsave
fs
jle
sub
cmp
sbb
pop
pusha
jp
mov
cltd
stc
hlt
mov
enter
fprem1
xor
mov
dec
stc
arpl
lea
ret
mov
mov
xchg
pop
movsb
mov
stos
rcl
pop
outsb
mov
jp
imul
jmp
ret
mov
ret
fld
clc
enter
fcomi
dec
jne
mov
ret
scas
enter
fwait
mov
out
int
imul
ret
pop
shll
pop
xor
sub
divb
aam
xchg
fstl
jae
sbb
ret
sahf
sti
jnp
mov
or
arpl
mov
ret
inc
cltd
pusha
psllw
mov
sbbl
test
jb
mov
inc
push
mov
add
mov
cmp
xchg
cmp
stc
dec
ds
clc
aad
sbb
fwait
shlb
or
xchg
add
outsb
mov
or
inc
daa
pop
jae
ss
jmp
enter
pop
test
xchg
fcmovnb
pop
mov
scas
lahf
sti
ljmp
shrl
dec
add
clc
mov
movsl
ljmp
push
ror
xchg
cmp
cmp
fidivrs
jp
sbb
mov
enter
fwait
dec
cmp
mov
mov
dec
loope
clc
shlb
mov
lea
and
in
imul
sahf
sub
xorl
push
test
sbb
popa
in
cmp
and
sti
in
fidivrs
jecxz
incb
jns
mov
adc
imul
xor
in
movsl
dec
sbb
sub
dec
add
mov
push
pop
movsb
fnstcw
xor
ja
fs
mov
decb
sar
cmp
cmp
ret
xchg
lcall
inc
sub
sub
sub
jmp
out
xor
scas
mov
sbb
inc
cld
add
das
adcl
mov
jb
add
mov
mov
dec
push
fsubs
subl
inc
mov
xchg
mov
sbb
jne
cltd
jns
je
sbb
mov
nop
mov
push
adc
out
push
adc
ret
pop
mov
sbb
out
les
pop
lret
ja
mov
fprem
mov
in
inc
rcrl
add
mov
jbe
movsb
pusha
or
sub
insb
push
lock
lds
test
mov
loop
mov
sahf
jp
pop
xor
rcr
cmp
jl
roll
sbb
jge
sub
cmp
xchg
pop
test
fstl
jnp
xor
leave
in
leave
push
out
add
or
sub
rcll
mov
rcrl
mov
imul
pop
xchg
pop
dec
adc
push
insl
jecxz
scas
add
gs
lahf
outsl
push
ret
or
mov
addl
mov
fldenv
movsb
jle
stos
push
leave
cs
cmc
fmull
sbb
sahf
pop
add
pop
push
into
inc
sbbb
stc
lds
aas
out
movsl
ja
test
incl
add
addb
scas
rorb
ficoml
mov
mov
inc
sbb
and
mov
test
push
std
xor
mov
push
in
dec
push
inc
add
adc
push
dec
sbb
rol
fwait
add
prefetcht0
pop
daa
and
mov
jo
movsl
sbb
jl
fistpl
jl
jecxz
fstl
and
stos
andb
jo
stos
fcomip
sub
and
andl
or
inc
dec
bound
and
dec
cwtl
movsb
jle
rcll
add
mov
jge
jmp
iret
add
pop
xchg
cltd
call
sti
xor
jne
mov
icebp
or
dec
test
int3
sub
and
sahf
inc
sbb
cs
cmp
xor
mov
lods
divb
aam
sbb
mov
out
aas
pop
ret
sahf
repz
pop
and
test
bound
dec
sbb
mov
cmpb
insl
pushf
jecxz
fmuls
xor
stos
dec
lods
ficoml
mov
les
lods
flds
lods
repz
pusha
in
mov
push
lret
sar
mov
jl
ret
sbbb
mov
ret
sub
lea
sbb
aad
pop
scas
dec
jns
leave
lods
shrb
cltd
xchg
int3
add
scas
aaa
mull
js
jg
mov
mov
xchg
add
add
cltd
in
sub
inc
nop
xor
mov
pop
jmp
lods
rol
inc
jge
imul
inc
popf
mov
jmp
xchg
xchg
sbb
push
cmp
fs
scas
je
leave
orb
aaa
mov
outsl
mov
jne
dec
movsb
lea
pop
addl
inc
mov
pop
test
cmp
mov
mov
fists
rol
repz
popf
in
fucom
xor
mov
test
push
jbe
in
push
hlt
mov
fdivrp
jne
stos
leave
sbb
add
cmp
jns
lds
pop
movsb
fstps
mov
fnstenv
iret
or
jl
or
lret
inc
cmp
lret
add
movsb
nop
rorl
xchg
fcmovnb
sbb
cmp
xor
fs
lods
decb
cmp
xchg
xchg
icebp
sbb
leave
or
inc
mov
dec
xchg
arpl
rolb
daa
adc
mov
xchg
and
xor
push
jmp
cwtl
inc
jns
dec
mov
jo
insl
push
add
outsl
push
ret
mov
fisubs
in
leave
cwtl
pop
dec
push
or
mov
cmc
clc
pop
pusha
cltd
ljmp
shl
mov
pop
sbb
movsl
imul
jne
in
xchg
pop
mov
jnp
lahf
dec
fcomps
mov
and
dec
sbb
stc
pop
dec
cmp
jno
sbb
iret
sbb
jmp
sahf
sti
test
push
adc
xchg
shlb
push
cmc
fisttpl
inc
xchg
jecxz
xor
pushf
repz
cli
cmp
sbb
sub
xor
or
xchg
cmp
rorl
xchg
fistl
push
xchg
sbb
mov
pop
shll
mov
in
lods
push
add
xlat
pushf
mov
xchg
sahf
push
mov
inc
aam
clc
adc
je
xchg
lcall
icebp
out
inc
les
fwait
xor
and
fdivrs
fimull
cwtl
push
insl
cltd
insl
or
jge
outsl
scas
ret
and
lock
add
mov
mov
dec
dec
mov
enter
lea
mov
pop
stos
aam
cmc
ret
jns
pop
mov
lods
xchg
dec
fucomip
repz
pop
mov
hlt
movsl
ret
inc
sbb
mov
mov
jno
cmp
ror
inc
sbb
dec
sbb
add
inc
stos
mov
lret
push
sub
sahf
cmp
push
xor
lahf
pop
in
repz
stos
loope
cmp
sbb
test
inc
scas
ja
add
stos
add
pop
scas
jb
lods
jle
jp
sub
fdivrl
pop
cwtl
ficoms
jg
pushl
stc
cmc
xor
xor
add
clc
xor
adc
or
test
or
les
cltd
mov
aam
fabs
inc
insl
xchg
popf
aad
pop
int
int3
sbb
movsl
pop
js
movsb
lods
data16
popf
mov
stc
or
mov
xchg
loope
adc
iret
mov
sbb
sub
cmp
sbb
test
jb
int
jg
arpl
cmp
ja,pt
sbb
jmp
cmc
sub
mov
into
add
test
inc
sbb
xchg
test
ret
test
dec
mov
fstpl
lret
lds
scas
and
mov
pushf
push
in
ret
sbb
mov
aas
rol
out
dec
or
cld
xor
and
or
sbb
xchg
or
cmp
stos
xor
xor
mov
popf
scas
inc
enter
inc
shlb
subl
pop
sbb
mov
cmp
insl
or
cmc
arpl
cmp
xor
fsubl
addr16
popf
pop
jo
fsubl
cmp
popf
jb
xchg
daa
mov
loopne
loopne
je
clc
js
jmp
push
sub
es
sub
cmpsb
mov
shl
in
divb
mov
jns
add
fimuls
mov
mov
dec
cmp
imulb
repz
mov
push
sahf
addb
cli
and
pop
inc
in
pop
xchg
dec
sbb
nop
out
int3
flds
sub
popf
lret
cmpsl
jno
or
lcall
push
xchg
xchg
stos
jge
lcall
jl
xchg
aaa
fwait
lods
pop
xchg
jb
sub
mov
aad
shrl
fucomi
repnz
out
js
inc
ds
andl
add
or
aas
ja
sbb
mov
prefetch
mov
pop
jmp
pop
mov
gs
in
out
cltd
enter
mov
sarb
xor
loop
xor
or
add
pusha
mov
sbb
mov
jbe
pop
aam
icebp
fistl
daa
mov
jns
cmp
hlt
mov
pop
sub
add
shlb
jl
imulb
lret
inc
sbb
jno
les
shrl
inc
pusha
pop
add
fisttps
dec
popf
in
dec
and
pop
lock
mov
lcall
inc
sbb
sti
movsl
xchg
aaa
jns
or
mov
fstl
jnp
xor
mov
repz
xlat
lahf
lret
jl
sbb
xlat
in
testl
fiaddl
sbb
sbb
movsl
ret
rol
or
inc
inc
popf
add
es
lcall
pop
mov
out
pop
je
sbb
push
loopne
push
pop
fwait
aas
adc
push
mov
push
pop
das
or
xchg
cmp
shll
mov
mov
call
pop
fdivrs
rcrl
sbb
push
sbb
jg
pop
dec
xchg
jl
int3
addr16
movsl
mov
ret
jbe
sbb
inc
or
dec
mov
test
mov
push
dec
lret
jle
fs
cmpl
jmp
ret
popa
xchg
push
mov
push
push
dec
cmpsl
push
pop
sbb
jns
xchg
push
mov
jp
scas
cmp
loope
out
scas
inc
fwait
out
jl
jl
std
dec
push
cmp
jl
pop
lock
js
stc
fisubrs
lea
mov
push
sahf
xlat
insb
jbe
sbb
mov
cmp
pop
xchg
adc
daa
mov
jmp
inc
xor
sbb
mov
hlt
test
dec
inc
xor
sahf
cmpsl
pusha
adc
dec
scas
shl
inc
call
pop
or
or
loopne
cmp
fstp
sub
mov
add
or
pusha
xor
lock
cmpsb
pop
mov
loopne
dec
inc
cmp
jg
pop
ret
fdivs
mov
pop
or
push
test
aad
dec
mov
mov
sbb
ss
adc
dec
mov
lahf
add
or
insl
mov
lock
mov
movsl
push
mov
insl
nop
push
mov
dec
fs
xabort
lds
in
cmp
pop
and
or
mov
js
pop
pop
rolb
sbb
jle
js
sbb
test
pop
lret
fwait
imul
cmp
mov
cmp
jbe
inc
sbb
inc
xchg
fisubrs
fs
sbb
aaa
popf
iret
and
es
pop
cmp
or
dec
inc
jne
pop
repz
adc
lret
sbb
gs
push
aas
jmp
inc
mov
cltd
call
neg
out
in
std
inc
inc
mov
fprem
sarb
pop
dec
jo
jp
ja
inc
call
jg
pop
ret
xchg
int3
addr16
hlt
xor
fs
sub
stc
pushf
adc
push
test
jge
dec
mov
push
dec
lret
fucomp
jae
sbb
push
jl
cltd
addl
push
push
dec
cmpsl
push
push
pop
scas
dec
push
shll
cmp
push
pusha
mov
push
or
inc
cmc
cmc
cmc
test
inc
sub
addl
sbb
js
jb
jmp
push
add
mov
cmpsb
xchg
mov
inc
mov
xlat
insl
ror
fmul
pop
incl
out
les
and
xor
dec
jecxz
inc
mov
sbb
pop
and
cs
cmp
ja
or
mov
mov
call
push
jae
or
add
push
dec
pusha
xor
fildl
or
cwtl
cmp
dec
lock
cld
jg
imul
out
int3
inc
add
mov
sbb
add
dec
mov
lods
dec
pop
mov
sbb
dec
bound
push
cmp
outsb
push
fdivl
mov
movsl
aad
push
mov
andl
push
lahf
cmp
cmp
sub
fistpll
js
in
adc
lret
jle
cwtl
cmp
std
decl
adc
xchg
loop,pt
je
rcrl
clc
mov
out
or
cmpsl
cmp
push
ljmp
pop
in
push
add
pop
lea
data16
and
dec
inc
sti
je
cwtl
movsb
sbb
inc
push
sbb
inc
jne
lret
adc
orb
inc
int3
xchg
sbb
sub
fdivs
mov
je
loop
aas
ret
frstor
pop
add
iret
push
cld
xor
rsqrtps
adcb
push
cmpsl
pop
sbb
add
or
adc
mov
mov
xchg
fstl
push
adc
mov
stos
adc
xor
dec
cmp
fldt
jae
or
nop/reserved
in
xchg
adc
pop
xchg
dec
cmpsl
outsb
les
inc
dec
fs
jle
or
bound
das
mov
add
push
and
or
mov
xchg
jl
aas
or
adc
jl
mov
ja
or
js
dec
repnz
mov
push
push
lods
xlat
jp
xchg
sbb
mov
cmp
pop
gs
inc
aaa
sbb
aaa
popf
iret
pop
int
jle
sbb
rcll
inc
inc
pop
mov
test
dec
daa
adc
or
pop
orb
lods
movsl
push
inc
stos
aam
icebp
pop
push
inc
xchg
lret
and
xor
sbb
cmp
mov
fcmovb
sbb
and
lods
or
xlat
sahf
test
das
inc
ret
xor
aaa
ljmp
int3
mov
fildll
mov
in
fcomps
cmp
mov
jo
xchg
mov
mov
or
jo
movsl
sbb
xchg
fcoms
mov
inc
adc
ljmp
sbb
mov
ljmp
xlat
in
neg
shll
inc
pushf
pop
ds
inc
cmp
jp
stc
hlt
out
push
cwtl
lods
xlat
insb
jae
cli
jne
mov
add
pop
mov
data16
cmp
dec
inc
jg
imul
mov
aas
adc
inc
cmpb
push
loope
lret
sbb
insl
or
cmc
inc
movsb
jbe
mov
sbbl
dec
mov
pop
add
jg
repz
sbb
cmp
mov
sbb
ja
inc
add
jecxz
cld
mov
and
roll
arpl
dec
xor
sub
dec
hlt
imul
mov
mov
iret
pop
or
pushf
or
xchg
test
mov
outsb
shrb
mov
push
cmp
push
ja
imul
movsb
push
sub
mov
jp
sub
and
cmc
xchg
cmp
sbb
fs
aas
cmpsl
test
or
fdivs
std
pushl
add
push
pop
mov
pop
jmp
lods
ret
std
out
xchg
jmp
jo
sti
xor
lea
adc
dec
cltd
mov
xor
xor
jl
ljmp
fsubr
mov
cmc
mov
pop
das
or
sbb
les
cmpb
mov
icebp
clc
sti
pop
push
int
ljmp
into
stos
adc
pop
add
ljmp
xchg
int3
jno
in
dec
rcrb
adc
stos
filds
lcall
cli
push
clc
ss
inc
mov
pop
das
fisttpll
cld
lods
mov
cmp
imul
mov
or
imul
push
dec
dec
adc
lock
lds
cli
mov
dec
pop
fists
cmp
sbb
int3
stos
cmp
sbbl
fucomip
idivl
setb
test
dec
pop
cmpsb
les
rorb
arpl
movsl
ret
clc
fdivrl
cmpsb
fadds
insl
or
sbb
enter
and
les
adc
inc
push
mov
inc
daa
mov
daa
sub
lods
mov
jecxz
out
mov
shl
jg
mov
add
loopne
divl
sbbl
jge
iret
pop
test
test
divl
pop
imul
sub
pop
cld
lret
clc
fbld
and
mov
loope
pop
fcoms
bound
push
push
push
xor
rorl
jmp
xor
lea
cmpsl
dec
push
test
enter
jne
jo
add
adc
aaa
adc
adc
mov
add
dec
push
inc
imul
jnp
inc
push
mov
or
xchg
and
fwait
and
jne
insl
out
rclb
xlat
push
pop
and
add
jno
cwtl
push
add
cmpsb
repnz
and
ds
hlt
test
xchg
xchg
jg
ret
dec
pop
pop
mov
push
clc
enter
jg
popa
lock
and
xor
repz
adc
push
in
aaa
cmpsl
mov
pop
sub
inc
aas
ljmp
inc
mov
jns
cltd
xor
ror
cld
mov
mov
mov
dec
movsb
fsts
sbb
mov
mov
jae
mov
or
shrl
mov
xchg
add
xchg
inc
rcl
add
add
adc
push
mov
les
xchg
add
mov
js
inc
mov
lea
mov
mov
inc
cwtl
adc
mov
pop
adc
inc
insl
xchg
imul
xor
inc
clc
rcrb
sti
repz
jne
popf
jge
int
je
dec
push
ds
push
mov
enter
xor
int3
fwait
aas
test
callw
jne
shlb
and
sti
pop
or
in
popa
in
divb
cld
inc
sbb
sahf
and
js
inc
sbb
arpl
push
divb
push
rorl
dec
adc
lds
sbb
shll
jge
pushf
repz
cmp
pop
pop
push
test
ret
add
or
mov
add
xchg
cwtl
fcoml
sbb
stos
xor
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
cwtl
adc
adcl
dec
pop
and
pop
and
inc
aam
ret
fwait
xor
mov
lock
fsubl
gs
push
inc
test
enter
push
mov
cltd
and
mov
fsubrs
daa
jg,pt
mov
rcl
or
mov
push
cmpsb
repz
inc
mov
mov
lods
xchg
pop
adc
aas
push
cmpl
or
inc
push
repnz
jnp
and
or
leave
out
jg
xchg
stos
sbb
jg
adc
jmp
push
mov
sbb
imul
cltd
fs
ror
xor
rcrl
iret
pop
push
or
dec
sbb
or
add
pusha
mov
iret
ja
dec
add
mov
iret
jns
mov
mov
and
jnp
lret
inc
into
shll
xchg
cmp
adc
repz
nop
xchg
lahf
push
mov
inc
sti
sbb
pop
rcl
or
sti
push
fmul
adc
mov
jle
xchg
xchg
fiadds
cmc
adc
xchg
xchg
pop
xabort
pop
mov
sbb
mov
je
test
sub
inc
inc
pop
inc
dec
dec
mov
lea
xor
ret
rcrl
mov
mov
sahf
and
mov
sbb
int
and
loop
mov
mov
jg
add
aam
sub
or
test
lret
inc
mov
sbb
push
fistl
std
mov
fcomip
dec
cmp
pop
call
xor
pop
or
ret
adc
add
test
add
mov
fimull
cmp
mov
testl
arpl
movsb
pop
cld
arpl
sti
push
lret
inc
pushf
add
iret
fwait
pop
lret
mov
popf
fists
inc
sarb
pop
repz
xchg
xor
add
or
loop
cmp
sub
jb
mov
fcoms
cmp
mov
loope
or
mov
mov
mov
or
test
xchg
push
adc
inc
add
inc
cmpb
push
dec
shl
push
inc
pop
push
fcomps
ss
xchg
pop
adc
jno
or
pop
in
add
mov
cmp
adc
inc
pop
xor
ljmp
insb
dec
roll
mov
clc
sub
or
in
int
lds
xchg
js
rcrl
xchg
cmp
ret
xchg
sub
leave
rorb
mov
xchg
dec
mov
int
pop
enter
loope
mov
sub
cltd
dec
loope
sarl
fmull
cli
andl
lret
or
inc
sbb
xchg
xchg
jg
test
dec
incl
insl
loope
or
out
imul
fidivrl
insl
out
push
or
lret
pusha
mov
cmp
and
test
inc
sbb
sub
mov
lea
ficoms
mov
int3
rclb
lods
pop
or
ljmp
mov
lds
add
scas
jo
stc
adc
inc
ret
sbb
inc
aas
fiaddl
cmp
sbbb
clc
or
aaa
mov
cli
sub
mov
jns
les
lods
jmp
repz
pusha
std
mov
insl
popa
cmp
test
xchg
popf
pop
sbb
pop
jae
into
xlat
lcall
movsl
mov
mov
mov
sarl
pop
pushf
or
sbb
shr
mov
loop
icebp
adc
arpl
sarb
js
fwait
adc
mov
sahf
aas
fsubrs
xchg
and
xchg
imul
add
enter
mov
sub
mov
cmpsl
cltd
out
aam
mov
push
xor
test
push
sub
mov
les
in
jl
mov
pop
and
call
inc
or
push
add
lods
xchg
int
jg
sahf
push
les
push
adc
lcall
and
dec
dec
repnz
jbe
and
mov
sbb
jno
aam
test
jo
fldl
mov
lahf
push
in
xlat
dec
push
rol
pop
cmp
xchg
fcoms
data16
jo
aam
push
sub
dec
mov
outsb
sub
nop
imul
and
push
int3
stos
fadds
push
cmp
mov
leave
jmp
xcrypt-cbc
cmpsl
xlat
rcl
andl
xchg
cmp
cld
dec
adc
cmp
jmp
xchg
mov
xor
insl
or
mov
mov
xchg
mov
rcll
ret
push
enter
sbb
adc
test
push
inc
mov
sbb
sti
int3
fwait
cltd
pop
jo
pop
int
fsubs
aas
inc
pop
lds
cmp
hlt
mov
adc
mov
dec
push
cmp
or
sbb
shl
sbb
pushf
dec
and
jne
les
push
leave
fs
cli
sub
mov
rorb
sbb
std
mov
stos
jnp
pop
movsb
jno
or
sbb
ret
or
or
pop
movsl
adc
jl
fistpl
xchg
sub
js
lret
push
imul
lret
sub
push
xchg
or
shlb
clc
mov
push
adc
and
dec
xor
dec
shlb
fxch
push
or
adc
imul
cmpsl
ret
xchg
mov
cmp
int
or
and
mov
jnp
adcb
dec
dec
addl
sbb
jbe
xor
sub
test
aaa
call
shrb
mov
iret
sbb
imul
cltd
nop
imul
adc
mov
pop
rclb
out
lods
ret
sbb
fs
jb
fiaddl
lret
sahf
or
jnp
jns
rorb
mov
push
sar
cmp
xchg
fcoms
addr16
nop
fisubl
sub
xor
cmp
push
mov
sbb
xchg
dec
pushfw
xchg
mov
add
pushl
ja
adcb
inc
xlat
and
sbb
pop
cmc
arpl
int
stos
add
sub
pop
sbb
inc
xchg
xchg
pop
out
fwait
cmp
xchg
nop
push
fdivrs
cli
jae
inc
insl
jmp
mov
xchg
push
jle
call
je
dec
lds
daa
loop
hlt
mov
xchg
test
pop
adcl
mov
gs
xor
and
sbb
pop
adc
inc
adc
icebp
pop
xchg
dec
test
mov
ret
fstpt
pushf
sbb
aas
and
gs
or
cmp
stos
ja
lret
pop
push
lret
and
cmpsb
icebp
cs
push
mov
fwait
sbb
out
dec
mov
lret
push
lods
mov
push
bound
mov
add
daa
add
inc
push
jae
sub
push
cli
ret
mov
pop
jl
test
add
rcrl
fimuls
jmp
adc
js
or
out
or
push
mov
shrb
test
fnstenv
mov
mov
pop
movsb
dec
push
movsl
inc
add
addr16
loope
cmp
pop
xchg
stos
shl
out
push
in
inc
xor
rcrl
sbb
cmp
inc
and
jg
popa
scas
pop
je
jne
push
or
pusha
push
stc
int3
and
test
sarl
jmp
lret
ret
add
xor
xlat
pop
ret
sbb
pop
aaa
nop
sahf
inc
movsl
cwtl
or
and
mov
or
mov
dec
cmpsl
inc
lods
mov
jae
aas
jg
repz
jo
jl
adc
xorl
leave
lea
clc
push
push
rorl
jae
fsts
xchg
and
xchg
jp
cmp
xor
sti
fcomip
js
popf
into
dec
subl
push
dec
xchg
clc
je
push
in
push
out
mov
insb
ljmp
xchg
sub
add
jae
out
ja
jns
ljmp
mov
rol
clc
xor
bound
insb
das
orb
push
xchg
mov
cmp
stc
and
daa
adc
mov
sub
cmp
pusha
pop
test
call
repnz
xor
sbb
sub
fadds
mov
and
add
push
cld
mov
xlat
lds
sub
jns
xor
jbe
cmpsb
lds
inc
mov
add
xor
insl
rclb
xlat
incb
jmp
cmp
out
push
std
test
fbld
lds
push
into
pop
ficoms
xchg
sbb
push
and
jle
add
sbb
xchg
leave
ret
cli
movsb
inc
xor
mov
or
mov
outsl
std
jecxz
loop
xor
jno
scas
xor
sbb
mov
in
jbe
sbb
cmpsl
aam
pop
frstor
movsb
jle
cmpsb
or
in
pushf
add
xchg
push
xchg
je
arpl
pop
or
jne
push
mov
push
cmp
mov
pop
mov
popa
rcrl
idivb
pop
mov
jno
pop
aas
idivl
inc
mov
jle
sbb
loope
xor
iret
cmpsl
rol
les
lret
std
pushf
fsubl
jns
inc
add
mov
jnp
inc
sub
jl
xchg
in
xor
insl
cmpsl
aas
test
jmp
clc
ss
ret
mov
inc
jmp
jmp
lock
push
pop
dec
gs
pop
cmp
pop
mov
loop
fnstcw
push
mov
scas
aaa
mov
cli
jnp
inc
mov
or
pop
orl
testl
out
dec
movsl
ret
jp
addr16
insb
add
fstps
jge
cmpsb
sti
cmpsl
and
mov
push
jle
mov
jno
shl
mov
gs
adc
mov
mov
shll
cmpsb
ret
ret
pop
sbb
jg
mov
ret
pusha
sbb
sbbl
and
xlat
pop
ret
lcall
pop
movsl
cwtl
or
pusha
das
sbb
ficoml
push
and
les
or
shll
inc
leave
enter
lret
dec
xor
bound
adc
pop
rcrb
sahf
pop
and
insl
stos
mov
mov
xorb
lods
add
ret
dec
scas
xorl
scas
mov
pusha
cmp
andl
fs
push
rcll
mov
push
mov
cli
cmp
cmp
stc
fidivs
fwait
dec
subl
add
add
mov
insb
or
shll
jno
rolb
hlt
cltd
pop
jbe
mov
pop
dec
scas
out
test
scas
mov
aam
xchg
out
jecxz
les
add
inc
add
pop
pop
pop
or
js
xchg
adc
jg
fisubl
imul
daa
sub
fs
in
or
lock
popf
in
inc
dec
insb
sub
dec
gs
test
and
test
xchg
fistpl
mov
iret
leave
fldcw
cmp
xchg
cmpsl
push
cltd
mov
cmp
dec
scas
iret
lods
repnz
pop
lret
aam
ds
loope
inc
iret
add
ficomps
push
dec
xchg
lahf
je
shll
pop
fcoml
lcall
fsubrl
push
xor
jp
addb
adc
sbb
jle
mov
mov
mov
sbb
xchg
inc
shlb
cmp
and
rorl
sti
inc
in
mov
push
inc
jge
lods
mov
mov
inc
xor
inc
cmp
push
mov
loopne
in
mov
and
outsl
mov
sbb
jno
xchg
pop
adc
mov
bound
add
push
or
jmp
jo
sbb
dec
mov
jg
jnp
icebp
dec
ss
mov
sub
dec
mov
call
imul
dec
aaa
repz
jo
jl
adc
pushf
cmp
addb
lret
lret
dec
jl
popf
push
icebp
lcall
inc
and
dec
lods
andl
jmp
popf
xor
pop
mov
js
push
cwtl
cld
xor
adc
add
mov
lret
push
jecxz
repnz
mov
jne
jmp
push
sub
sbb
leave
mov
adc
sahf
mov
mov
sti
mov
pop
cli
sbb
mov
dec
sarl
jbe
sarl
pop
sahf
dec
mov
insl
daa
jle
scas
push
stos
xor
jecxz
adc
push
std
mov
aaa
movb
inc
mov
std
xor
je
sub
dec
xlat
mov
jg
aam
icebp
insb
ret
lods
jnp
lea
sbb
pushf
jge
movsb
xor
mov
dec
lret
gs
mov
sbb
jae
fldt
mov
inc
repnz
jl
mov
adc
sub
lret
cwtl
mov
stos
mov
mov
lods
jne
jl
and
aam
jge
pop
jmp
xchg
jg,pn
jns
std
rolb
push
adcl
inc
ret
sbb
jl
js
add
or
repz
loop
fsub
dec
mov
dec
fadds
repz
mov
loop
xor
pop
push
subb
jp
arpl
cmp
or
cmp
enter
adc
test
sbb
ficomps
cld
out
sub
push
rorl
shl
lock
jmp
pop
inc
sbb
fwait
pop
daa
xchg
xlat
lds
jae
pop
mov
sbb
pop
xor
mov
aas
lcall
pushf
daa
and
sub
xor
imul
cmp
imul
ljmp
daa
in
jno
xchg
arpl
xchg
pop
ja,pn
inc
push
xchg
mov
gs
lret
mov
push
jne
mov
jbe
sub
imul
shl
imul
shr
lock
fwait
leave
jecxz
in
dec
jne
sub
int
rorb
shlb
cmp
mov
lcall
stos
mov
pop
nop
test
add
xor
out
cmp
out
jp
sbb
xchg
out
enter
xor
push
dec
rolb
xchg
sub
test
stc
mov
dec
sahf
gs
pop
shll
aad
repz
inc
fs
mov
repz
sti
loopne
notl
cmp
lds
in
mov
push
or
orl
cltd
cmp
insl
and
aas
and
xlat
push
mov
sub
push
cmp
mov
push
adc
adc
test
xchg
dec
bound
xchg
dec
mov
dec
add
mov
dec
bound
sub
jne
jae
fnstsw
int3
push
fstl
lret
inc
push
idivl
out
jl
popf
mov
sbb
hlt
out
sahf
daa
mov
stc
pop
jmp
andl
shll
ss
fdivs
dec
jbe
xchg
mov
mov
in
jecxz
mov
cltd
xchg
cmc
mov
outsl
cs
mov
and
cmc
or
ret
inc
arpl
insb
sbb
adc
divl
pop
dec
je
xor
cmp
movsb
les
adc
sub
jge
jl
jnp
mov
lods
mov
lock
hlt
clc
hlt
imul
push
dec
rorl
add
scas
mov
cli
cmp
clc
inc
nop
xchg
pop
inc
out
sbb
sti
popf
lods
jno
mov
sub
ror
out
push
jl
cmp
div
sbb
orb
xchg
mov
nop
jae
cli
mov
xchg
into
flds
bound
cwtl
fldt
adc
aam
pusha
cmp
in
xchg
push
push
xchg
sti
mov
scas
aaa
mov
cli
jnp
mov
and
or
or
pop
ffree
push
add
dec
and
scas
push
push
clc
push
mov
jno
xchg
and
popl
mov
mov
dec
cmp
imul
mov
xchg
mov
push
hlt
imul
les
fldenv
inc
sub
jmp
dec
pop
pop
shll
enter
xor
and
out
and
jnp
rcrl
dec
daa
cmp
jp
loope
xor
call
fisttpl
xor
ror
fsubrl
in
mov
daa
in
push
xchg
bound
inc
scas
jo
cmp
cmp
xlat
lret
fucomp
cltd
push
push
fisttpl
xor
daa
adc
xor
shlb
cmp
mov
xor
pop
add
pop
dec
push
mov
mov
xchg
fnclex
mov
lods
cmp
ret
adc
xchg
mov
adc
test
lods
lret
inc
inc
sarb
sub
jl
sub
sbb
gs
push
push
cmp
test
mov
or
fld1
lea
mov
enter
add
sub
mov
into
das
cmove
fisubrs
iret
push
mov
pusha
rclb
movsb
pop
cmc
ja
pop
cld
xorl
aas
scas
sub
ds
fistps
repz
in
aam
cmp
pop
pop
sbb
mov
and
or
cmpsb
test
pusha
out
push
ret
lea
mov
or
inc
pop
jmp
lret
fidivs
xchg
call
out
mov
loope
and
clc
test
in
jnp
inc
adc
push
jge
test
stos
jle
inc
mov
dec
push
dec
scas
mov
add
adc
pop
mov
pusha
mov
jmp
scas
leave
leavew
loop
inc
mov
cld
or
or
sbbb
add
shll
or
add
jmp
adc
cmpsl
cld
inc
adc
xchg
pop
ljmp
clc
enter
lds
sbb
dec
nop
ja
mov
enter
push
mov
and
inc
ss
cmp
shlb
lahf
and
mov
mov
jnp
scas
repz
into
mov
nop
xor
cmp
xor
cmpb
xor
fildll
xchg
lret
loope
adc
sbb
fcmovne
adc
shll
push
stos
xchg
scas
popf
mov
out
mov
inc
sbb
fldenv
or
push
mov
imul
xchg
loop
adc
or
sub
and
lahf
scas
ret
xor
mov
xchg
mov
mov
sbbb
es
mov
iret
fsubr
xor
or
loope
clc
ja
movsl
ret
inc
out
mov
sbb
jmp
fsubrl
pop
stos
xor
cli
fcmovne
sbb
or
fimull
fsubs
cs
sub
ja
ret
rcll
dec
mov
ret
mov
lock
je
fnsave
lock
mov
adc
inc
inc
cmp
pop
and
movsb
mov
xor
rcrb
pushl
push
cwtl
icebp
lds
sbb
out
lret
fucomp
fs
leave
movsl
into
fucom
cmpl
jp
mov
lods
pushf
mov
cmc
and
push
faddl
aaa
fldt
pusha
mov
mov
std
bnd
popf
fimuls
sti
mov
sub
mov
or
ljmp
push
pop
and
shll
push
adc
in
and
cld
dec
scas
pop
outsb
ret
test
bound
mov
gs
pop
sbb
sahf
inc
cmp
jecxz
sub
popl
lret
cwtl
gs
or
cmp
out
sbb
cmp
mov
mov
ret
push
sti
jnp
mov
roll
pusha
sbb
hlt
insl
xor
adc
movsb
sbb
mov
dec
mov
xchg
andl
outsl
cmpsl
mov
jae
ljmp
js
andb
sbb
andb
sub
cltd
mov
pop
test
lods
inc
sbb
call
popa
and
and
les
jg
jmp
mov
push
inc
clc
or
lcall
sbb
iret
push
mov
out
push
mov
push
jnp
sbb
cli
cli
sbb
add
mov
sbb
inc
in
mov
pop
xchg
test
pushf
mov
mov
cmc
sbb
jne
repz
out
pop
bound
adc
in
xor
fstps
aas
mov
xlat
pop
jae
divl
ljmp
int3
fisttpl
xchg
enter
adcl
fsubrs
lahf
xor
leave
inc
add
jp
ss
pop
or
xor
hlt
xor
jb
dec
mov
cli
mov
fiadds
add
dec
pop
mov
pop
lds
xchg
pop
outsb
sub
call
jnp
xchg
lds
mov
and
cmp
js
int3
mov
fs
lret
push
mov
sbb
add
xchg
movsb
sbb
je
dec
mov
subl
add
pop
add
aad
push
adc
jb
mov
lock
push
jle
out
pop
enter
adc
hlt
jl
dec
sbb
mov
xchg
dec
xor
subb
sbb
stos
cmp
xor
daa
dec
mov
inc
pop
cld
flds
lahf
inc
je
repz
and
test
jno
pop
sub
outsb
or
push
pop
push
pop
fnsave
test
imul
je
pop
sti
push
push
lcall
jae
lret
aad
or
in
popa
jns
fmuls
inc
lcall
mov
xchg
add
mov
jae
adc
mov
mov
sub
movsb
mov
sub
jo
int3
mov
lcall
lds
sub
rolb
es
pop
imul
daa
mov
add
push
push
mov
cmp
pop
fstl
aaa
insl
lsl
enter
cmp
inc
sbb
icebp
sub
adc
mov
push
xchg
mov
adc
imul
test
cmc
ss
and
inc
call
movsb
jbe
js
xchg
stc
pop
push
dec
fwait
out
or
ljmp
fwait
js
jns
andb
fsubs
repnz
negb
xor
leave
out
push
dec
sbb
lock
lret
fsts
add
cmpsb
and
xor
mov
scas
les
cld
mov
xchg
push
cwtl
adc
adc
ret
sub
lcall
test
inc
shl
nop
sahf
dec
dec
mov
cmp
cmc
sbbb
loop
lds
ret
sub
sbb
add
inc
jnp
xor
vdivps
xchg
mov
inc
xchg
popa
cmp
cltd
cltd
mov
arpl
mov
pop
int
and
and
fisubrs
int
fsubr
xchg
jmp
adc
testb
imul
cmovae
inc
cwtl
pop
lds
add
mov
shlb
in
pop
pop
mov
aas
or
cmpsl
dec
pop
pushf
and
cwtl
xor
xor
dec
shrb
inc
push
mov
ja
lods
mov
sbb
xchg
bound
frstor
cld
lods
pop
std
xor
push
ret
jp
ss
xlat
inc
dec
or
or
lea
xchg
fcomps
xchg
out
test
lods
mov
call
push
enter
mov
xchg
and
inc
mov
add
ja
stc
xor
mov
dec
and
loop
test
insl
lahf
imul
and
cmp
pop
dec
fmul
bound
adc
int3
pop
lods
inc
les
orl
lret
jge
lods
imul
mov
aam
adc
and
dec
in
cmp
test
inc
mov
hlt
xor
bound
popl
lahf
rcll
jns
adc
out
pop
lock
push
dec
xor
test
mov
jp
fbld
jbe
cmpsl
mov
bound
dec
cmp
sub
xchg
inc
sbb
test
fisubrl
adc
cld
inc
lcall
inc
inc
or
addr16
mov
into
cwtl
lahf
push
nop
jnp
sub
pushf
popf
fists
sti
or
xchg
and
sub
mov
sti
sub
rol
outsl
push
mov
andl
stos
add
imul
insb
mov
and
cwtl
sub
shlb
out
shrl
sbb
sub
push
or
loopne
jne
cmp
popa
sahf
mov
into
pop
or
repz
mov
jmp
call
push
mov
sti
outsb
lock
pop
push
aaa
sub
je
ret
mov
add
negb
aad
pop
sbb
rorb
in
lret
mov
in
push
test
hlt
ss
mov
sbb
sub
mov
lret
sarl
pusha
les
cmp
inc
sbb
mov
pop
shlb
xchg
inc
pop
cmc
xor
add
mov
push
adc
lea
push
cltd
aad
mov
popf
scas
leave
xor
and
repz
enter
mov
out
js
cltd
jge,pt
sbb
mov
mov
stc
mov
jns
test
pop
lahf
and
mov
test
cld
movsb
es
xchg
mov
add
mov
daa
push
mov
sbb
mov
je
mov
shr
xor
dec
clc
xlat
inc
adc
inc
mov
jecxz
xor
dec
lahf
cld
lods
ret
mov
add
insl
movsb
dec
sahf
pop
ret
xor
mov
fcompl
jne
dec
popf
std
movsb
mov
dec
inc
lahf
jae
fistl
inc
fucomp
jae
fcoms
sbbb
test
pop
mov
js
cmp
dec
test
push
fidivrl
test
cmp
mov
addl
data16
and
lods
sub
xchg
dec
fisttpl
pop
cld
jae
jo
sarb
xchg
xlat
clc
sbb
fsubl
dec
popl
in
dec
fisubl
stc
bnd
pop
cs
mov
xor
adc
mov
ljmp
or
outsl
sbb
dec
cmp
loop
push
loope
insb
lea
sub
shlb
cwtl
mov
jg
jno
mov
adc
jbe
out
arpl
push
div
mov
lahf
test
lds
into
aas
cli
and
mov
sub
sbb
adc
pop
dec
test
or
or
dec
sub
pop
fsubrs
mov
fistpll
in
idivb
int3
pop
inc
cmp
repz
mov
addr16
mov
int
jno
loopne
and
mov
dec
fnstcw
lds
test
pop
pop
fsts
cmpl
data16
dec
mov
adc
push
jg
pop
cld
pushl
cmp
addl
rorb
insl
sub
inc
test
fs
and
dec
sbb
iret
daa
pop
cli
loopne
mov
sbb
push
adc
sbb
into
sbb
leave
sub
daa
xchg
enter
xor
aam
mov
mov
mov
lds
movl
push
pop
inc
es
mov
repz
cwtl
in
cmp
rcrb
lock
push
adc
sub
adc
ss
fldcw
out
leave
xchg
mov
iret
jo
pop
cli
ds
xchg
lret
fsubrp
fnstcw
inc
enter
lret
inc
dec
cmp
fwait
scas
mov
cli
mov
lret
addb
mov
jno
mov
sub
add
mov
inc
mov
push
imul
mov
cmc
inc
mov
ss
js
clc
xchg
inc
addl
scas
sbb
stc
and
dec
push
mov
addr16
movsb
out
adc
push
mov
nop
pop
pop
mov
jb
leave
pshufw
mov
xlat
cmp
int
pop
cwtl
sub
dec
inc
and
add
idivl
jle
mov
sahf
push
test
ficomps
shrl
push
mov
ret
loopne
test
clc
sti
pop
mov
lock
mov
sbb
ret
mov
add
dec
add
xchg
int3
adc
mov
push
adc
mov
adc
mov
mov
sbb
icebp
mov
fucomp
jae
jns
int3
fucom
je
stos
dec
test
pop
dec
xchg
dec
mov
jnp
inc
scas
notb
pop
nop
cwtl
sti
lret
fwait
dec
lods
aad
pop
cmp
mov
rclb
jge
dec
mov
cmp
cmpsl
iret
mov
popa
js
test
add
mov
pop
xchg
inc
cs
xchg
mov
mov
jo
out
push
xchg
push
sub
fsub
lret
test
sub
cmp
repnz
mov
shlb
jmp
ficoml
inc
xor
test
testl
cmp
pop
sub
sbb
sub
mov
jp
push
cwtl
adc
clc
xchg
hlt
test
inc
jbe
mov
jne
aaa
and
les
xor
cmp
out
imul
iret
test
clc
mov
aaa
stos
jecxz
add
mov
rcrl
std
cld
lods
mov
rorl
xor
xchg
test
pop
mov
xor
stos
fistps
jl
pop
aas
les
mov
pop
push
scas
nop
xchg
mov
mov
lret
scas
mov
mov
push
ret
aad
int3
add
mov
lds
xor
sub
xor
mov
out
ljmp
jnp
data16
push
gs
insl
cwtl
pop
popw
je
cltd
out
push
ret
push
pop
popf
outsl
and
fiadds
sub
scas
sbb
sub
mov
and
jb
rcrb
dec
or
or
xchg
idivl
lods
stos
xchg
lods
sti
pop
pop
dec
mov
iret
ret
mov
lock
outsb
dec
popl
fwait
shll
inc
sbb
jae
adc
xchg
sub
jns
sbb
mov
ret
cmp
and
int
dec
cmp
das
std
fsub
iret
int3
jae
xor
adcb
inc
scas
data16
subb
pop
gs
std
loopne
cmp
sti
fs
sbb
jge
mov
cwtl
inc
sbb
or
fucomi
repnz
int
les
and
sub
sub
je
mov
adc
push
add
xchg
fbld
push
xor
ljmp
pop
xor
xchg
stc
mov
outsb
lahf
inc
jns
sahf
xchg
dec
cmp
call
mov
mov
push
or
mov
out
xchg
jmp
cmpsl
int3
sahf
dec
in
cmp
mov
call
pop
sub
adc
inc
mov
roll
push
sahf
repnz
cmc
out
enter
jle
xchg
nop
cvttps2pi
insb
lds
or
sub
push
xorl
push
scas
push
pop
clc
mov
pop
and
add
pop
movsl
dec
pop
imul
push
inc
pop
pop
mov
xor
jge
outsb
fsubrs
sub
lcall
mov
test
lods
inc
in
mov
cwtl
lahf
test
out
push
xor
xor
sti
mov
mov
add
in
scas
sbb
rorl
adc
add
xchg
jg
aam
xor
push
adc
insb
mov
test
mov
push
sub
xchg
xor
sti
hlt
xor
cmc
lds
rcll
xor
std
mov
push
or
xor
cmpsl
movsl
and
dec
aas
fistpl
inc
cmp
mov
insl
cmp
in
test
out
addl
pop
xchg
add
or
xor
jno
jl
in
flds
mov
and
shrl
adc
push
pop
lods
cli
lret
addr16
sbb
push
movb
in
out
mov
shll
push
in
add
jge
cs
adc
add
pushf
jge
stos
jge
inc
dec
inc
pushf
mov
pusha
in
rorl
and
mov
add
cmpb
inc
std
and
inc
inc
or
or
adc
mov
mov
sti
adc
call
test
fisubs
mov
fistpll
fadds
fwait
jb
add
imul
xchg
pop
inc
and
push
outsb
loope
lret
les
jge
adcl
dec
rorb
cmp
or
movsb
daa
adc
shll
pop
out
adc
sub
mov
fwait
inc
dec
sbb
or
mov
ret
out
ret
or
in
test
sahf
pop
es
cld
insb
cmp
mov
scas
lods
mov
mov
mov
mov
fmul
enter
test
push
movsl
pop
mov
daa
or
test
or
adc
dec
insb
jp
lods
dec
iret
aad
mov
cmc
jmp
dec
push
stc
mov
xor
fisttpl
dec
jp
dec
push
xchg
and
push
adc
sub
cs
and
es
enter
sub
cmpsb
add
into
lahf
nop
push
and
sbb
sbb
mov
imul
adc
int
push
dec
mov
sub
xlat
stc
lea
cmp
adc
scas
shrl
inc
out
lret
jecxz
movsl
mov
jne
ds
sub
adc
das
cltd
adc
rcll
and
or
sub
ljmp
repz
or
fistpll
es
jae
mov
loopne
mov
or
inc
inc
subb
mov
lret
cmp
push
mov
shlb
pop
mov
lods
inc
inc
test
lcall
insl
add
cld
iret
cmp
xchg
add
call
dec
fidivrl
lea
push
test
and
push
mov
jmp
or
ret
xor
dec
ss
jmp
test
jb
daa
xchg
dec
loopne
outsb
lock
mov
mov
inc
data16
xchg
je
test
fnstenv
or
push
pop
mov
mov
call
pusha
cmpsb
ret
arpl
inc
push
jne
loopne
xchg
fists
rcrl
sbbb
mov
shlb
les
cmp
fisubrs
adcb
aad
jno
pop
test
dec
sbb
cmpsb
fildll
mov
jae
cmp
mov
sbb
enter
inc
sbb
sbb
imul
mov
ja
pusha
loope
mov
ret
int3
xor
lret
out
daa
fwait
leave
cmc
xor
xor
adc
push
cs
jnp
add
fsubrs
xor
add
adc
xchg
mov
insl
jmp
adc
mov
cld
jb
pop
mov
je
xchg
int
mov
repz
fcmovu
inc
adc
imul
loop
idivl
add
mov
jecxz
mov
fimuls
fmuls
fcompl
dec
lahf
leave
popf
jge
mov
xchg
mov
std
leave
fnstsw
cltd
fsubrl
int
inc
adc
xchg
sbb
push
mov
push
mov
lcall
in
push
fs
mov
leave
mov
je
inc
cwtl
adc
pop
sbb
repz
cmp
or
jne
xchg
jbe
inc
ss
push
arpl
fisttps
aad
xchg
mov
sub
jo
arpl
addl
dec
mov
rorl
push
cmp
or
xchg
and
mov
out
dec
sahf
pusha
jo
xor
std
push
push
cltd
push
lea
mov
pop
add
addb
or
jne
stos
xor
ret
sbb
idivl
jle
xor
ret
loopne
pop
mov
stc
sti
mov
insb
mov
jecxz
enter
test
repnz
dec
jo
jb
xor
gs
lahf
ret
push
mov
pushf
push
test
lret
push
test
xor
cli
dec
push
aad
push
adc
jae
std
movsl
test
ret
les
test
xor
popa
mov
push
insb
mov
pop
mov
xchg
or
mov
fwait
lods
movb
jle
lods
sub
shr
repnz
mov
stos
ljmp
fucomip
mull
ds
sbb
add
daa
dec
mov
inc
cwtl
jle
add
test
call
pop
cwtl
dec
jmp
ss
bound
enter
mov
pop
xchg
enter
pop
push
or
push
mov
lods
addr16
into
insl
sahf
dec
loopne
push
sub
add
ret
loop
mov
sub
clc
sti
mov
or
xchg
mov
jbe
in
std
mov
aas
jb
out
cwtl
sbbb
movb
jae
fadd
adc
mov
shl
lds
pop
push
cmpsl
lret
fucomp
fwait
lods
sbb
test
ss
sti
in
push
cmp
mov
rcrl
out
xor
stos
pop
mov
inc
gs
xchg
mov
sub
pop
mov
cwtl
sbb
loope
dec
mov
movsb
ss
rcrb
popa
add
lcall
inc
xor
fsubrs
push
or
xor
dec
mov
aas
imul
insb
jbe
popa
lcall
rcl
icebp
sbb
sub
out
les
pop
sub
xor
pushf
cwtl
dec
push
sbb
sbb
les
push
dec
mov
push
ret
push
sahf
cmpsb
mov
jmp
inc
cmp
sub
loope
mov
repz
sti
dec
push
add
repnz
cwtl
ret
mov
mov
out
lret
mov
dec
pushf
push
imul
stos
mov
sbb
shl
jne
fdivr
test
xchg
aad
popf
lret
fstps
test
inc
sbb
stos
mov
stos
xchg
xchg
ja
dec
mov
mov
mov
jb
hlt
mov
insb
jns
lods
ret
idivb
lret
rcll
fcompl
push
mov
sub
dec
mov
push
add
push
in
ljmp
cmp
divl
lods
jae
shlb
pop
sub
jge
dec
dec
cmp
adc
int3
scas
ficoml
shlb
inc
xchg
mov
adc
pop
mov
xor
cmp
xor
jbe
dec
ret
popf
jnp
pop
rcl
repz
push
mov
hlt
ss
push
pop
mov
fimull
ss
sbb
lock
xor
lods
int
iret
out
inc
in
mov
push
push
pop
xor
mov
orl
mov
xor
test
add
or
dec
xorb
pop
push
scas
adc
mov
jno
ret
pop
cmpsl
ret
fnstsw
xchg
sub
lahf
loope
popl
or
ds
sbb
adc
lds
or
js
popf
ss
cli
mov
insl
out
scas
xchg
sbb
fdiv
clc
fcompl
lea
sbb
fcompl
pop
xor
jl
jmp
test
aaa
mov
jmp
and
jp
xor
loopne
hlt
mov
pop
mov
arpl
cmp
push
sbb
mov
pminsw
insl
ret
mov
add
mov
lahf
ficompl
cmp
adc
aad
adc
sub
mov
scas
pushf
xchg
fisttpl
sub
pop
jae
popa
ret
sbb
jno
inc
inc
push
sbb
iret
lret
jb
cmp
pushf
dec
scas
or
test
jb
cld
cltd
sub
into
xor
and
loop
mov
loop
in
rclb
cmp
sub
shll
js
or
jae
pop
jns
fisttpl
xlat
and
push
test
addr16
movsb
cmpsb
push
movsl
inc
jbe
pop
cmpsl
jnp
lds
out
pop
cmpsb
push
lds
jge
dec
nop
mov
loopne
les
hlt
or
push
xchg
pop
rcrb
adc
inc
int3
lcall
pop
jb
mov
aam
into
or
stos
in
pop
fsubl
aam
ss
jge
in
cld
shll
add
mov
add
lds
lcall
sbb
sub
cmpsb
xor
jle
push
mov
sub
das
bound
sub
xchg
mov
adc
mov
int
push
add
and
mov
fadd
mov
cwtl
faddl
cmpsl
shr
pop
mov
in
test
out
push
inc
xchg
ds
repnz
lret
pop
inc
shlb
stc
pop
mov
adc
loopne
sub
pop
aam
jmp
cmp
sbb
ja
das
cmpsb
shr
into
dec
pushf
lods
or
loop
push
test
les
push
rol
adc
outsl
addr16
mov
dec
repnz
pop
add
mov
imul
push
and
pop
outsl
jmp
sbb
jp
in
mov
ds
cmp
jl
adc
in
scas
xor
bound
icebp
pop
fs
mov
push
cmp
icebp
mov
in
mov
pop
je
leave
jns
sahf
mov
and
test
les
test
push
out
inc
scas
xchg
dec
cmp
addb
cli
addr16
add
jl
sahf
push
pop
add
pop
jbe
push
aas
push
mov
fucomi
repnz
inc
mov
xchg
mov
pop
push
jge
add
or
mov
mov
sub
cmp
and
and
xor
test
lea
inc
xor
mov
addr16
aaa
push
popf
into
enter
mov
call
negl
mov
mov
mov
lahf
push
cli
dec
sahf
cs
repz
mov
sub
fwait
inc
aam
shl
sub
cs
test
imul
jge
push
lods
mov
inc
lret
jmp
lret
imul
xlat
leave
push
inc
ja
push
and
sbb
sbb
scas
mov
push
cwtl
mov
adc
sub
lods
push
dec
ds
dec
or
add
and
inc
test
addr16
stos
repz
mov
sahf
and
shlb
bound
call
cmpb
into
sub
sbb
or
xor
cmp
loope
dec
sbb
mov
dec
xor
mov
jl
sbb
lahf
in
das
sbbl
cmpsb
inc
xor
divl
mov
les
pop
rolb
add
daa
adc
or
scas
jnp
jmp
mov
mov
cmpb
call
sbb
aaa
sbb
mov
js
mov
adc
mov
xor
iret
pop
imul
fiaddl
lahf
adc
sub
in
hlt
test
nop
pop
scas
mov
sub
insl
cmp
in
mov
nop
stc
push
cmpsl
pop
adc
dec
fwait
test
rcrb
add
sub
dec
insl
int
arpl
out
inc
scas
dec
push
mov
pop
push
sub
jns
jbe
movsb
mov
outsb
js
mov
dec
and
adc
cmpsl
adcl
push
shrl
pop
fstpt
jge
sbb
ret
sbb
jo
mov
inc
adc
dec
daa
pop
push
mov
pusha
rolb
cmpsb
inc
aad
ret
mov
lods
mov
inc
aaa
cmp
out
jge
int3
dec
inc
lds
sbbl
and
mov
aaa
ljmp
ja
dec
scas
lcall
std
les
fisubrs
rolb
aad
out
mov
insb
cmp
fwait
lock
mov
iret
stos
push
mov
mov
ljmp
aad
add
push
jmp
mov
push
and
push
clc
sbb
cld
jg
ds
bswap
jo
xchg
mov
pop
mov
push
scas
ja
add
pop
xchg
sahf
dec
mov
mov
and
or
jne
insl
mov
nop
jecxz
jae
popf
pusha
mov
lret
js
or
mov
je
repz
push
mov
test
adc
stos
cmp
pop
test
lahf
adc
int
sbb
mov
sbb
inc
adc
or
int3
aam
cld
lds
fidivrs
push
lods
imul
push
jb
xorl
sarl
addr16
fstps
sub
fisubl
pushf
cmc
cmpsb
and
cltd
jo
pop
sub
lods
sbb
mov
push
xor
dec
dec
adc
jae
rclb
sub
xchg
push
clc
push
inc
adc
shll
push
mov
dec
inc
neg
js
mov
adcb
roll
and
fstpt
cmp
dec
ds
xchg
push
mov
inc
ss
push
icebp
xchg
cltd
inc
inc
in
ljmp
inc
imulb
adc
pop
sbb
shl
mov
out
mov
leave
mov
test
sbb
sbb
push
mov
xchg
or
mov
ret
dec
repnz
sbb
lock
push
lods
data16
adc
fdivs
inc
mov
test
dec
shll
sub
jb
push
loop
dec
dec
shlb
pop
test
mov
das
xor
mov
scas
icebp
arpl
mov
iret
push
rcrb
iret
fstps
sbb
jg
inc
les
mov
xor
popl
inc
ljmp
aas
add
push
lret
pop
stos
inc
in
fxch
pop
dec
add
arpl
shll
xor
gs
aam
fsubrs
gs
adc
sbb
xlat
adc
movsb
test
mov
sub
xor
jl
adc
ljmp
idiv
loopne
jb
int3
int3
pusha
test
int3
add
xor
pop
push
mov
push
push
and
and
lods
adc
stos
cmp
cmp
cmp
jmp
mov
and
xchg
lret
inc
mov
imul
mov
cmp
xchg
pop
jns
adc
aam
call
jg
int3
ret
mov
inc
adc
mov
lock
mov
sub
popa
stos
fldl
or
insl
xor
stc
neg
loope
mov
pop
inc
xor
cmp
sahf
pop
test
and
add
xchg
pusha
fstpl
cmp
cmpsl
add
push
sbb
cltd
xchg
fstpl
inc
addb
mov
cmpsb
xor
jb
inc
mov
jbe
lods
sahf
xor
cmc
cs
cmp
enter
out
sbb
mov
enter
mov
cmpb
insl
aas
clc
popf
aad
loopne
outsl
and
xchg
popf
adcb
pop
cli
bsf
push
mov
fld1
jb
jbe
pop
jecxz
sbb
in
call
mov
pushf
lahf
add
or
std
jmp
lret
stos
and
lcall
mov
lret
les
inc
cmp
ja
jmp
xor
fadds
dec
jecxz
movl
xchg
andb
jecxz
mov
pop
sbb
and
popa
cmp
pop
xorl
adc
in
jmp
jb
in
mov
fisubl
add
or
jg
push
adc
mov
push
push
jge
out
rorl
scas
sub
es
or
mov
fistps
and
addb
movsl
fnstenv
pop
lock
inc
orl
ljmp
roll
dec
mov
sti
jb
sub
xchg
cmpsb
sbb
lods
fidivs
mov
cmp
mov
fs
and
mov
les
adc
mov
aad
shll
pop
sub
repnz
test
mov
mov
ret
loopne
xchg
aas
sti
imul
sti
pop
mov
mov
std
je
jecxz
enter
std
lds
enter
fdivrs
in
leave
fsubl
dec
test
dec
xor
test
lahf
inc
and
test
sbb
insl
cmp
sar
testb
push
dec
and
testl
fdivs
push
stos
jge
dec
movsl
xchg
mov
add
stc
or
repnz
pusha
ffreep
cs
mov
data16
andl
leave
adc
adc
add
jp
add
fsubrs
insl
lea
stos
jno
xchg
xchg
mov
sub
pushf
imul
pop
ret
fld1
movsl
syscall
out
cmpsb
inc
lahf
sbb
jno
pop
and
lahf
bound
addl
mov
popf
jp
das
fsubrs
psubusw
mov
fnstcw
mov
pop
gs
adc
sbb
sarb
imul
inc
stos
add
inc
pop
adc
mov
jp
rorb
dec
pop
sbb
arpl
sub
inc
test
mov
dec
adc
cltd
push
stos
jg
fnsave
mov
xor
sahf
pop
lds
xchg
lret
ret
xchg
iret
sub
ljmp
insl
xchg
bound
mov
scas
orl
xor
movsl
shlb
movsb
jnp
fwait
jecxz
dec
xchg
fiadds
xor
pushf
add
push
fldenv
paddq
xor
dec
mov
push
scas
push
cmc
repz
add
xchg
xor
push
sub
mulb
test
fdivp
dec
jg
pop
mov
into
xchg
and
sbb
test
out
mov
sahf
sahf
or
jmp
dec
inc
dec
ret
xor
repnz
inc
iret
loope
test
xor
repz
sti
test
sbb
mov
incb
enter
mov
sbbb
mov
mov
test
cltd
mov
push
dec
xor
in
xor
lock
aad
jg
pop
insb
xorb
outsb
push
roll
adc
xor
dec
or
lcall
pop
mov
loope
mov
outsl
mov
xchg
enter
scas
xlat
fucomi
repnz
fisttps
push
add
sub
add
adc
lock
mov
stos
xor
xchg
push
mov
sbb
out
push
fdivrp
shlb
les
loopne
int3
pop
add
daa
xchg
sub
sub
or
mov
out
les
fsubp
mov
rol
xor
ficoml
popf
movsl
dec
sbb
mov
and
sti
mov
in
int
sbbb
les
sub
jno
inc
test
jl
inc
popa
nop
adc
mov
add
outsl
shr
mov
sbb
push
cmp
ss
fxch
sbb
test
mov
push
fstpt
imul
push
mov
xchg
xchg
push
push
mov
dec
push
repnz
mov
imul
shll
gs
sar
pop
or
mov
xchg
push
cmp
xlat
adc
cwtl
sub
inc
lret
xor
fistps
mov
ljmp
pushf
sbb
fnstsw
sub
add
std
lods
cld
adc
jmp
aaa
mov
insb
enter
dec
sbb
or
mov
pop
xchg
mov
mov
jbe
rcl
dec
shl
mov
mov
xchg
sti
fstpl
loope
loopne
std
pop
adc
pusha
ret
insb
mov
jecxz
enter
or
mov
or
pop
aam
mov
in
aam
push
mov
mov
test
inc
xchg
fisttpl
or
in
xlat
outsb
and
rcrl
shll
bound
add
jbe
cmp
mov
push
cmpsl
dec
jmp
mov
mov
call
pop
jl
pusha
test
test
in
into
and
pop
jg
loop
mov
sub
or
test
paddq
jge
aam
scas
sbb
dec
fstl
mov
scas
cmp
test
xchg
mov
cmp
decb
inc
outsl
enter
mov
xor
push
inc
sub
stos
lahf
sub
xor
jle
cmpsl
and
outsb
inc
pop
jbe
inc
xor
cmc
dec
sbb
ret
mov
loope
mov
flds
pop
daa
adc
test
mov
pop
xor
mov
sbb
add
cmpsl
mov
rorb
dec
pushf
cmpsb
in
push
fiaddl
cmpsl
xchg
sbb
sbb
cmp
fucomip
mov
dec
lahf
push
adc
push
fstl
push
addb
andl
dec
cmp
push
std
frstor
mov
sbb
sub
add
leave
sub
dec
add
pop
nop
dec
les
cmpb
mov
fdivr
cwtl
and
daa
cmp
cmp
and
jno
jge
xlat
sbb
mov
bound
std
dec
sahf
popf
mov
or
out
addr16
sub
loope
xchg
xor
lds
outsb
loopne
sub
xor
das
or
push
in
stc
push
sub
rcrl
mov
cmp
dec
cwtl
jecxz
enter
ja
inc
scas
fnsave
shr
mov
popa
scas
pop
jmp
int3
rorl
scas
xchg
out
dec
lods
xchg
cmpsl
add
stos
push
test
or
sub
mov
sbb
sbb
dec
mov
test
cmp
aad
jbe
lret
push
mov
push
cs
lcall
jle
cmp
rcrl
fstpl
mov
jmp
cld
mov
js
push
mov
jnp
sbb
mov
mov
cmp
xor
push
lahf
add
out
in
aam
test
adc
pop
mov
mov
xchg
scas
stos
sbb
xbegin
hlt
gs
or
xchg
push
inc
or
filds
enter
xorl
dec
pop
mov
es
inc
dec
sub
call
mov
xchg
call
push
pop
jno
lcall
inc
dec
jo
sub
push
lock
ret
cmpsl
add
iret
pop
sbb
imul
jne
int
test
adc
addb
and
cltd
dec
adc
cmc
sbb
das
mov
mov
add
lret
dec
push
or
push
shlb
xlat
test
movsl
mov
and
ja
cmp
lods
inc
sbb
add
dec
pop
fmulp
sbbl
mov
sub
incl
stc
xor
and
sbb
mov
xchg
cmc
lcall
cmpsb
mov
and
ja
jo
sbb
movsl
aad
call
js
icebp
inc
popa
jae
fs
add
mov
aas
add
es
mov
or
popa
jge
mov
fnsave
pop
pop
mov
pop
jne
fwait
sub
std
jb
negb
enter
bnd
rcll
aad
ja
cmp
rolb
lock
addr16
mov
clc
jmp
incb
inc
gs
loop
fildll
ficoml
push
mov
cmp
dec
popf
push
clc
aam
lods
push
mov
mov
xchg
mov
mov
jecxz
or
testb
dec
popa
and
sub
in
jge
adc
and
pusha
cmc
jns
jno
fs
stos
cmc
cmpsl
jl
sub
std
decl
das
cs
xchg
fimull
into
lds
push
mov
rcrb
sbb
pusha
fwait
push
fwait
jg
mov
mov
enter
inc
aaa
das
or
inc
inc
mov
out
cltd
aad
mov
cwtl
mov
xor
sti
xchg
dec
xchg
jle
xor
mov
testl
negl
jecxz
in
sbb
pop
lds
icebp
std
add
ret
pop
dec
inc
idiv
psubusw
ret
mov
dec
push
pop
imul
xchg
jp
sti
push
push
dec
adc
inc
and
scas
ljmp
les
and
mov
fists
inc
pop
lret
addb
gs
mov
test
pop
push
xchg
pop
pop
dec
push
imul
shl
pushf
popf
fmulp
xchg
sbb
cmc
out
in
mov
xchg
inc
add
push
pop
sti
add
mov
jno
inc
push
mov
adc
test
pop
test
rclb
call
mov
call
rcr
push
jle
jge
mov
and
mov
xor
push
test
jmp
and
dec
out
fwait
shl
mov
shrl
stc
pop
push
pop
mov
loopne
adc
ret
pop
mov
mov
mov
adc
sbb
or
mov
dec
dec
cld
outsb
xor
xor
popa
lret
lds
int3
jle
fbld
and
cmp
loopne
cld
and
movsl
inc
jl
outsb
push
inc
rolb
jae
xchg
fstpl
popf
cmp
mov
mov
test
cli
sub
int3
jbe
sub
in
lahf
inc
dec
out
or
lahf
mov
sbb
cwtl
sub
mov
and
pop
mov
jo
dec
les
out
inc
addr16
js
ljmp
insb
jbe
sub
and
stos
cmp
pop
rcl
or
pop
mov
out
or
mov
shlb
pushf
test
loope
mov
cmpl
stc
das
sahf
mull
mov
jl
inc
inc
fistpl
inc
sbb
test
clc
mov
in
lret
pop
cmp
mov
mov
test
outsb
or
xchg
mov
jp
lock
inc
xor
lds
iret
test
dec
adc
jo
inc
mov
mov
jae
pop
addb
popf
aad
adc
add
adc
ds
push
mov
push
out
pop
xchg
jb
or
push
cmpsl
push
push
inc
shrb
cltd
loop
pop
mov
mov
push
mov
jno
sub
int
fists
cmp
jne
testb
repnz
sub
xchg
js
sbb
dec
and
push
fdivrs
jmp
popa
sahf
and
fimuls
pop
fdivrs
sti
sub
jno
fwait
push
adc
dec
mov
stos
adc
mov
mov
subb
cmp
les
pushf
ss
shr
repz
int
andl
repnz
lcall
ret
repz
xchg
adc
test
mov
or
leave
fstpt
mov
fnstenv
push
xor
shl
sahf
mov
lahf
stos
and
leave
jp
mov
jle
out
dec
pop
cmp
repz
cli
jo
fnstenv
test
pusha
add
xchg
fstps
loop
or
dec
mov
outsb
ret
test
or
pop
test
fstl
mov
nop
mov
add
ljmp
js
inc
notl
or
dec
jp
or
scas
cmp
lcall
mov
shll
and
sub
push
test
jnp
lods
cmpsb
roll
push
ret
sahf
js
sar
push
pop
fisubs
mov
pop
sub
pop
mov
mov
or
jnp
fisubrs
out
pop
adc
pop
xchg
dec
add
int
jg
and
cmp
mov
std
inc
fdivp
jne
in
mov
inc
or
dec
inc
aas
loop
loope
xor
mov
jnp
rorb
test
sbb
cmp
mov
cltd
fildll
cmp
sub
sbb
xchg
sub
xchg
dec
mov
cmpsb
xchg
or
fisubrl
fsubrs
sar
negb
adc
popf
rclb
int3
push
sbb
ret
mov
loop
pop
pushf
pop
jecxz
and
jo
mov
arpl
addl
cld
dec
push
xchg
test
and
mov
xchg
and
xchg
jecxz
sbb
test
call
sbb
outsb
ret
test
sbb
repnz
mov
int3
pop
mov
pop
loope
xchg
int
fdivl
shrl
mov
cmp
mov
call
insl
mov
mov
stc
jmp
clc
sti
aad
xchg
in
lret
hlt
mov
sbb
cld
push
call
mov
xorb
iret
cld
xchg
jo
sbb
push
in
jg
lret
dec
push
mov
mov
je
sub
fistl
ret
xchg
repz
std
clc
pusha
les
jge
in
xchg
sbb
push
inc
inc
push
lahf
into
mov
mov
iret
mulb
push
std
or
sbb
mov
lods
jle
mov
movw
aad
popf
pusha
pop
xchg
push
lods
adc
pop
cmpsb
dec
movsl
movsb
adc
test
adc
sti
pop
fisubrs
fldl
mov
fdivr
push
into
sub
mov
imul
mov
sbb
cmp
repnz
es
cmpsl
push
xor
adc
loope
enter
lahf
inc
mov
and
pop
inc
daa
das
call
and
mov
call
test
dec
fdivrs
loopne
jmp
test
lock
cli
stos
push
mov
inc
inc
enter
cli
or
std
mov
pop
lret
inc
jmp
cwtl
outsb
out
les
test
movsl
inc
mov
movsl
push
pop
xor
int
arpl
lret
mov
es
lcall
lock
dec
or
fimull
push
jbe
das
js
inc
arpl
sbb
sahf
adc
sub
inc
fwait
lods
cmc
cmp
push
inc
jae
scas
sbb
popl
scas
sbb
mov
out
push
fidivrs
test
xchg
icebp
mov
push
fdivrl
dec
add
setns
bound
cltd
cmpsl
jns
and
daa
dec
jb
or
test
xorb
dec
test
pop
pop
repz
test
sarb
cs
outsl
jnp
or
imul
int3
sti
cli
sti
mov
loope
mov
xor
push
adc
cwtl
inc
cmp
inc
iret
cmpsl
mov
fucom
test
mov
les
cli
test
push
rorl
clc
ja
push
push
sbb
test
sub
out
cmp
fisttps
push
sub
loopne
faddl
push
lahf
add
pop
imul
lods
jno
stos
xchg
out
xor
cmp
dec
nop
sbb
dec
jo
into
xor
data16
mov
adc
jbe
or
dec
movsb
mov
fsubrs
out
int
scas
loopne
cwtl
cld
sub
xchg
les
pop
and
add
cmpsb
jnp
clc
jne
out
xchg
aam
out
xor
sub
lea
mov
dec
ror
cmp
jmp
push
stos
pop
sarb
inc
in
outsb
sub
out
pop
pusha
int
fsubp
test
xchg
out
js
and
lahf
add
adc
xorb
leave
fadds
cmp
sbb
and
pop
pop
inc
test
mov
pop
out
scas
inc
mov
fucomp
aam
pop
jae
repz
js
jecxz
test
test
xchg
test
push
inc
pop
dec
xor
add
dec
pop
push
outsl
pop
fwait
adcl
enter
push
mov
dec
scas
pop
push
sarl
xchg
stc
mov
ret
mov
push
dec
or
andl
sahf
add
fisubrs
mov
push
outsb
ja
cmpsl
adc
sbb
outsb
lahf
sbb
es
dec
sub
fistpl
iret
mov
inc
xor
xchg
lahf
sbb
mov
aad
pushl
pop
je
mov
in
dec
xorl
je
push
jns
cmpsb
repz
sbb
mov
lret
call
inc
repnz
ffree
dec
cltd
cmp
subl
mov
jecxz
lret
mov
ret
mov
stos
shlb
fsts
dec
cmpsl
jne
pusha
or
xor
enter
popa
scas
cmc
and
icebp
outsb
pop
test
cli
popa
inc
inc
adc
test
outsb
scas
cmp
imul
pop
lods
ret
clc
mov
xor
add
dec
fdivrp
mov
scas
inc
dec
jmp
movsl
ret
mov
andl
fidivrl
fnstcw
ret
jmp
test
pop
test
jg
int3
stos
inc
imul
dec
es
push
cmp
or
jp
push
rdmsr
ss
popl
pop
mov
or
push
mov
or
mov
add
push
sub
xlat
mov
ret
loopne
jl
iret
imul
sar
sti
fidivs
aaa
add
adc
sbb
jo
mov
adc
int
fwait
dec
mov
sub
out
cmpsl
sbbl
jmp
cmc
stos
test
test
or
test
lahf
popf
enter
insl
xchg
int3
mov
mov
js
cmpb
test
sbb
add
imul
stos
std
mov
add
sbb
add
pop
test
cmp
xchg
loop
int3
mov
adc
out
inc
fwait
sti
jno
ret
mov
andl
repz
cs
adc
test
mov
inc
in
sarb
adc
mov
ffreep
inc
pop
scas
cmp
fisttpll
jnp
xor
jge
jns,pn
cmpsl
dec
addb
jbe
mov
push
test
inc
pop
fsubr
mov
jo
cmp
xor
xchg
mov
test
fidivs
pushf
jno
in
sbb
mov
xor
popa
popf
add
cmp
pop
push
xchg
jle
cli
jae
mov
jno
leave
inc
pop
leave
shlb
sbb
les
jge
lods
mov
ja
adc
repz
pushf
pop
mov
popf
in
dec
shrb
movsl
cmp
in
outsb
inc
lcall
inc
push
testl
fstps
lcall
ja
sub
rcrl
test
xchg
aas
daa
aaa
mov
rol
das
push
or
dec
repz
add
imul
xchg
fsubrs
mov
sub
test
jp
adc
mov
aaa
fiadds
jb
fwait
lods
fdivr
cmp
or
rclb
lret
or
pop
pop
inc
sbb
cs
xchg
mov
fnstenv
mov
mov
inc
sbb
scas
stc
inc
nop
div
clc
sti
jno
roll
shl
pop
sub
jo
add
push
add
sbb
adc
repnz
push
mov
and
sbb
les
scas
xorl
dec
and
adc
jae
xchg
push
xor
bnd
jns
movsl
xchg
inc
outsl
sbb
stos
pop
dec
andl
mov
inc
jbe
lods
push
shll
sub
cmpsl
fadd
fucomi
rep
dec
daa
daa
mov
cmpsl
cmp
pop
sub
add
add
xchg
pop
mov
jns
dec
and
add
jne
fwait
sub
xchg
aad
xchg
fidivl
sbb
sub
xor
sbb
xchg
ds
shl
cmp
adc
fwait
inc
inc
mov
fnstcw
and
mov
xchg
out
call
stos
push
mov
push
pusha
aad
cmp
push
mov
out
jmp
jle
fucomip
repz
push
les
pop
sarb
jle
adc
inc
sahf
add
dec
cmpsl
sbb
daa
lret
movsl
mov
add
xor
shr
lcall
test
mov
mov
push
xor
xchg
fistl
xchg
shll
mov
mov
adc
xchg
ret
xchg
xlat
xchg
fxch
loop
mov
lods
cmp
stos
mov
mov
push
mov
mov
jmp
jno
f2xm1
js
jg
inc
lcall
ret
ret
xchg
mov
mov
out
xor
aas
xor
mov
and
cwtl
dec
and
mov
in
xlat
jns
mov
and
call
nop
pop
aad
xor
out
sbb
lahf
ss
and
aas
cmp
mov
pop
cmp
lods
imul
mov
aam
mov
sub
sahf
mov
mov
clc
sti
fbstp
repz
jns
mov
lahf
sbbb
push
sbb
add
movsb
sbb
rcrb
sti
sbb
aad
lods
dec
push
pop
push
lods
shrl
inc
imull
in
mov
cmp
jnp
es
ret
sub
xchg
mov
inc
test
inc
xlat
xchg
stos
mov
stos
xchg
xlat
mov
push
jne
sbbl
aas
dec
fsubl
push
imul
pop
adc
lock
or
in
push
lods
lret
jl
es
push
mov
pop
xchg
lds
inc
bound
insb
add
mov
out
js
jecxz
jb
mov
add
lock
pop
out
mov
int3
daa
mov
fmuls
xlat
push
mov
or
leave
movsb
jb
das
fmuls
jbe
out
jne
ss
cmp
insl
mov
sarb
clc
sti
pop
adc
xlat
mov
insl
mov
outsb
scas
dec
sbb
jmp
leave
fisubrs
fwait
call
dec
and
sub
fsubrs
stos
pop
push
loop
pop
mov
cmp
jae
fidivrl
loope
shll
cs
jo
mov
sbb
cmp
icebp
aad
lcall
js
mov
fldt
mov
jl
add
cli
test
mov
add
leave
icebp
cmpb
loope
xchg
mov
cmpl
shl
push
xchg
inc
push
inc
addr16
dec
mov
mov
dec
cmpsb
sbb
push
ljmp
lock
xlat
roll
mov
adc
lods
cmp
out
test
mov
or
mov
push
sarl
hlt
lcall
test
sub
sbb
lea
cmpl
lret
fwait
sub
idivl
stos
mov
push
push
jno
ret
fsubl
movsb
leave
fs
sub
mov
pushf
dec
and
stos
mov
pop
stos
mov
rep
mov
dec
jle
fdivrl
arpl
rcll
shll
jno
rcl
fs
cmp
xchg
push
cmpsl
ja
cmp
xchg
cmpsl
fwait
lods
jle
add
xchg
leave
add
enter
or
cmpsb
jg
pushl
xchg
mov
js
cmp
xchg
mov
sub
adc
jae
and
add
mov
cmp
popf
mov
jnp
enter
outsl
outsl
inc
cmc
xor
inc
fiadds
push
push
jp
pop
incl
cli
mov
inc
mov
mov
lods
xchg
negl
dec
movsb
adc
fisubl
in
xor
and
mov
arpl
push
adc
adc
js
jle
lret
cmp
dec
shlb
in
push
push
das
dec
loopne
dec
movsl
mov
pop
push
mov
cmp
adc
dec
mov
push
lahf
inc
xchg
push
andl
mov
std
les
jl
test
aam
nop
stos
add
dec
dec
cs
test
dec
push
xor
nop
mov
add
sbb
jnp
mov
inc
cmpb
push
jg,pn
mov
xor
mov
xor
or
jmp
call
test
adc
fisubs
push
sbb
mov
out
loop
pop
fwait
cmp
call
xchg
push
cmpsl
int
shl
mov
enter
mov
clc
imul
lods
imul
inc
push
inc
mov
push
loopne
add
test
cmp
ja
lret
loop
fists
mov
test
sbb
mov
mov
insb
movsl
imul
dec
ss
rcll
les
rorl
push
and
stos
dec
sbb
sti
aaa
cmp
and
xlat
into
xchg
lret
cmpsb
pop
mov
test
add
inc
cmp
lret
add
lods
mov
fcompl
mov
adc
loop
ja
in
call
jecxz
rclb
pushf
rcl
xchg
inc
shll
add
mov
adcb
sub
dec
fdivl
bound
xchg
jp
mov
sub
les
jb
in
inc
roll
adc
mov
jae
cmp
sbb
dec
inc
jp
push
dec
sbb
sub
imul
out
jge
data16
gs
cmp
sbb
das
push
sahf
cmpsl
cwtl
fldl
jne
std
mov
inc
lret
or
data16
mov
pop
xor
inc
rcll
or
xor
fs
pushf
lret
pushf
leave
rorb
mov
in
inc
fistpl
sbb
aam
pop
rol
dec
leave
jne
push
js
xchg
lret
xor
mov
push
add
adcl
pop
inc
inc
scas
hlt
addl
mov
repz
and
dec
gs
aaa
pushf
dec
xchg
jp
cmpsl
sbb
jp
lods
xacquire
xor
cmp
repz
test
jb
sbb
insl
loopne
jge
xor
cmpsl
loop
loopne
lods
adc
mov
dec
push
fsubs
lcall
cmpsl
ret
add
xchg
insl
pop
mov
sti
mov
cld
pop
test
sub
in
pop
xchg
ret
fadd
gs
jne
dec
mov
pop
test
fucomi
cmp
ds
mov
and
cmp
dec
repz
repz
imul
int
loope
dec
sbb
mov
fcoms
inc
mov
sbb
jle
std
add
adc
sub
pop
pushf
sbb
mov
unpcklps
popa
les
xchg
lret
fildll
adc
mov
jecxz
stos
push
fisubrl
mov
push
pop
pop
loopne
scas
lea
jb
xchg
cltd
pop
cmp
pusha
or
xchg
mov
sbb
and
jns
rcrb
sub
mov
cltd
sbb
lea
sbb
cwtl
dec
lods
adc
adc
pop
mov
in
jne
mov
or
pop
fisubs
sahf
shlb
leave
jecxz
leave
push
inc
int3
add
insl
push
addr16
sbb
push
test
stos
mov
insb
pop
stc
mov
popf
neg
adc
push
adc
and
stos
aas
or
and
mov
add
mov
shll
cmp
dec
test
aad
in
lret
adc
push
and
mov
sbb
sub
fs
movsl
addr16
mov
ret
xor
or
mov
in
adc
stos
adc
outsb
cmpsl
sbb
sub
push
ja
sbb
mov
sbb
mov
es
lock
clc
jb
or
xorl
mov
jge
and
ret
stc
mov
je
xchg
inc
or
xlat
push
fdivrs
stos
lahf
cmpsl
push
xor
lcall
call
lods
inc
sub
or
fidivl
subl
mov
int
aas
inc
clc
int3
mov
sbb
in
pop
push
xchg
mov
mov
jae
fdivrs
in
sbb
adc
adc
adc
adc
add
int
jecxz
adc
in
leave
push
lds
dec
sbb
dec
mov
cli
xor
pushf
ret
xor
sahf
add
clc
scas
xor
fucomp
pusha
test
xchg
xor
cld
jae
mov
adc
imul
sub
dec
pop
test
jns
pop
mov
nop
fwait
mov
adcb
push
mov
mov
leave
sbb
iret
das
movsl
int3
shlb
andl
and
adc
das
and
pop
mov
cwtl
outsb
and
push
lcall
mov
ljmp
outsl
mov
mov
out
mov
je
mov
ret
shrb
and
add
ljmp
push
xor
and
mov
es
or
pop
add
mov
loopne
test
sub
xchg
je
ss
mov
add
aad
sub
or
inc
sbb
imul
adc
stos
inc
lods
pop
dec
lods
dec
add
jle
ds
adc
scas
popf
in
cmp
jecxz
xchg
inc
mov
ret
mov
or
cmp
mov
aad
inc
and
sti
xchg
lret
pusha
nop
rclb
push
aam
jae
ret
shlb
or
out
xchg
fwait
leave
gs
sbb
xchg
jge
fdivrs
cwtl
xor
loopne
inc
test
mov
xchg
push
jp
test
dec
gs
imul
and
scas
xchg
stos
call
jmp
sbb
xor
mov
lahf
incl
enter
dec
insb
or
sbb
hlt
scas
in
dec
not
idivl
push
and
mov
mov
pop
aaa
lea
jb
negl
or
iret
outsl
jmp
roll
add
test
aaa
xchg
and
imul
jno
cli
sbb
loope
mov
mov
xlat
or
loop
aaa
hlt
sub
in
cmpsb
mov
fwait
sti
pushf
rcll
jnp
add
lea
pushf
jae
cwtl
sub
adc
in
push
pusha
jo
sub
mov
jp
add
sub
jbe
sub
cwtl
mov
push
fadds
loope
imul
xor
add
xchg
adc
cmp
mov
outsl
push
or
xor
int
test
jb
jnp
gs
mov
adc
sti
js
dec
lahf
inc
add
movsb
lret
jns
mov
inc
cmp
in
jecxz
fadds
mov
mov
scas
test
in
dec
jae
sbb
mov
call
ss
loopne
pop
and
mov
jno
xchg
ret
sub
lahf
lods
sbb
insb
jmp
nop
lods
scas
stos
adc
je
jno
lret
les
jnp
enter
repz
mov
xchg
call
fcmovnbe
jp
fldt
and
push
test
insb
data16
add
mov
mov
mov
push
adc
mov
pop
lahf
cmovb
rolb
pop
push
outsl
jge
scas
fisttpl
lcall
test
cmc
cmpsl
std
xor
cmp
mov
out
addr16
insl
xchg
test
mov
cli
and
and
xchg
inc
loopne
xchg
dec
popa
ds
pop
aam
sti
ds
mov
dec
addr16
arpl
insb
aaa
and
sbbl
sub
and
stc
or
mov
pop
dec
mov
repz
jne
fwait
sub
pop
je
repz
adc
sbb
pop
adc
insl
test
aaa
cmp
fsubrl
cwtl
fs
aad
jns
sbb
mov
inc
pop
mov
mov
sbb
and
int3
enter
ss
ja
popf
aam
dec
fcmovb
adc
xlat
jmp
and
lret
aam
mov
test
addr16
arpl
imul
push
jnp
cmp
subb
add
xchg
popf
sbb
xchg
add
outsb
inc
add
insb
or
add
add
lock
mul
dec
and
cli
mov
pcmpgtd
pop
sarl
repnz
lahf
dec
push
ret
add
icebp
bound
pop
jl
sub
pop
pop
imul
test
sub
scas
add
cwtl
data16
cwtl
test
insl
xchg
movsb
pop
dec
pop
mov
pop
add
pop
insb
mov
mov
testl
pop
sub
sysenter
add
test
push
ret
jnp
cltd
ds
xchg
push
jge
sub
inc
pop
sbb
hlt
test
test
repz
insl
xor
lods
mov
subl
test
push
sbb
cmp
xchg
mov
fcmovb
mov
inc
add
adc
jmp
push
rcl
es
shll
inc
pop
fdivr
mov
mov
popa
add
rclb
leave
jnp
xor
test
popa
fcompl
cwtl
cmp
scas
jl
stos
cwtl
and
xchg
out
dec
lahf
in
push
or
in
push
and
or
and
enter
adc
fcmovu
sti
mov
jnp
imul
insl
jbe
sbb
into
popf
mov
mov
mov
lret
call
lds
repz
cmp
aam
add
mov
add
lea
mov
cld
add
movsb
lret
cmpsl
cmp
fst
jne
dec
test
cwtl
and
rol
jno
mov
iret
add
push
dec
push
xchg
mov
outsl
mov
int
xchg
cmpsl
pop
popf
lret
or
add
xchg
dec
or
or
int3
cli
mov
xchg
int3
push
mov
stos
or
mov
xchg
jns
mov
imul
scas
jg
int
cmc
xchg
ret
mov
enter
mov
add
xchg
cmp
scas
sbb
neg
jo
sbb
dec
jne
pop
test
test
xor
lahf
in
push
cmp
sbb
jae
cltd
enter
dec
pop
cmpsl
enter
and
dec
push
or
fadd
outsb
mov
jns
fsubs
lcall
loop
mov
leave
pusha
push
dec
mov
mov
xor
mov
pop
xchg
flds
push
pusha
fsubs
lock
and
mov
push
adc
cmp
xor
movsl
mov
shll
xchg
lret
lods
in
lods
dec
int3
lret
mov
lahf
popf
cmc
jns
push
ds
popf
lret
jbe
fisubl
pop
mov
dec
mov
mov
fsubs
stc
add
sbb
pop
lret
mov
in
xchg
push
mov
sti
cmp
fcmovne
jb
inc
popf
scas
inc
or
dec
cwtl
roll
xchg
movsb
sbbl
ja
and
add
jo
sbb
and
imul
ret
cmp
les
sbb
adc
mov
mov
push
jmp
shr
movsb
and
cmp
cmc
push
jae
xchg
dec
mov
fsubrl
in
xor
jnp
scas
mov
shrb
ja
cmp
call
scas
ret
xor
mov
sbb
add
mov
mov
mov
lret
xchg
xchg
adc
cmp
cltd
int3
sarl
cmc
mov
ljmp
subl
mov
xchg
shll
ret
jle
lea
gs
pop
mov
flds
cs
jp
fldenv
nop
data16
jp
cmpsl
sbb
leave
lcall
nop
mov
jns
jle
js
shrb
sub
and
or
xor
sub
pushf
or
push
scas
mov
xchg
into
mov
in
jbe
inc
cmp
pop
push
xchg
inc
aam
xor
mov
sbb
shrb
lahf
mov
sbb
int
repnz
sbb
out
inc
mov
or
gs
or
enter
gs
or
fists
movsb
ss
push
cmp
ucomiss
inc
aas
pop
dec
out
sbb
or
dec
ss
add
lret
xor
outsl
sub
mov
xor
and
int3
pop
add
inc
mov
ret
cmp
movsl
jo
and
fisttpll
loopne
imul
stos
dec
fs
jle
jb
imul
cmp
or
jmp
xor
xchg
sub
mov
adc
in
icebp
js
jg
push
cwtl
inc
push
mov
sub
pop
push
jl
rcll
add
outsl
mov
mov
stos
outsl
inc
sbb
repz
mov
bswap
push
jbe
ret
adc
sub
fimull
inc
int3
mov
in
dec
jo
add
dec
call
mov
sub
pop
sbb
inc
cmp
nop
fdivrs
dec
cwtl
sti
nop
mov
add
mov
jg
adc
lods
mov
mov
lcall
movsl
stos
fidivs
imul
mov
sbb
xchg
mov
and
mov
mov
xchg
sbb
stos
adc
lods
sahf
pop
js
loop
or
dec
pop
cbtw
jmp
jp
fdivrl
cli
mov
nop
xchg
mov
mov
mov
add
xorl
data16
mov
add
jbe
adc
stos
loopne
subl
cmpsl
ret
flds
mov
subb
arpl
int
sub
cwtl
sahf
out
sbb
push
jb
jb
mov
mov
mov
sbb
insl
mov
popf
lea
mov
shrb
jmp
mov
mov
jecxz
inc
push
iret
das
cmp
sbb
mov
or
dec
iret
xor
pushf
repz
scas
or
add
repnz
lcall
inc
ficomps
jge
mov
sti
lret
sti
nop
sbb
cmpsl
or
test
movsl
sbb
mov
push
and
adc
fistpl
int
sbb
adc
mov
jnp
push
lahf
sub
pop
add
pop
push
mov
fisubs
lock
sarb
mov
jnp
pop
ds
inc
test
je
cmp
rcll
jns
mov
incb
push
lods
xlat
clc
add
fs
adc
adc
xor
leave
rorb
orl
or
sub
jle
scas
js
adc
push
test
in
pop
stos
rcrl
and
imul
ror
xor
pop
inc
test
in
jns
add
aas
ljmp
fistl
or
dec
inc
nop
jg
adc
iret
stc
rcrb
mov
cmc
push
pushf
data16
cld
jg
jbe
mov
mov
inc
mov
test
mov
iret
mov
jae
push
mov
mov
pop
push
out
adc
sbb
mov
xlat
adc
adc
insb
and
dec
sub
shl
sti
pushf
adcl
cmp
and
enter
es
addl
xchg
dec
jmp
push
shl
ja
imul
lds
mov
cmpsb
inc
call
faddp
cmp
mov
lret
push
push
addr16
mov
fs
es
nop
cmpl
aam
dec
add
lret
sub
dec
fwait
lahf
sbb
push
jmp
fdivr
mov
inc
sbb
sahf
repnz
mov
add
cld
shll
mov
sbb
andb
mov
in
movsl
cmp
fisttps
dec
cmpsl
push
fcomps
sarl
shll
jb
ljmp
fwait
sbb
iret
jno
pushf
test
mov
xchg
inc
or
push
push
pop
jl
push
pop
pop
mov
je
dec
push
xchg
pop
dec
push
orb
xchg
loope
jmp
or
xchg
xchg
xchg
add
or
icebp
dec
stc
shl
sarw
pop
adc
mov
std
test
or
lahf
jg
pop
cmp
jb
mov
enter
repnz
inc
sub
or
mov
in
and
ret
mov
int
imul
mov
bound
mov
push
arpl
leave
mov
insl
loope
mov
push
jp
pop
jg
adc
inc
mov
sti
mov
outsb
or
cmc
inc
imul
icebp
cmpsl
fwait
push
add
mull
mov
clc
out
dec
sbb
or
js
test
sbb
bound
into
sahf
adc
jl
idivb
dec
jne
xchg
test
jb
addr16
pop
xchg
pop
jae
lret
repnz
lods
cwtl
inc
fs
cld
das
fstpt
in
pop
jge
or
fs
sub
add
addl
push
mov
mov
pop
push
mov
lea
mov
lods
addb
daa
ret
add
nop
xchg
test
dec
dec
insb
fldt
cld
mov
hlt
rorb
mov
fmul
jnp
inc
repz
lods
test
movsb
jg
leave
mov
push
test
shll
fisttps
fimull
lret
call
lock
scas
dec
mov
ss
test
mov
addr16
inc
addb
jb
cmp
jl,pt
jge,pn
shlb
das
outsl
cmpsl
push
int
sbb
or
in
mov
jbe
outsb
outsb
or
cmp
mov
ja
test
dec
dec
pop
movsl
in
mov
xchg
lcall
mov
iret
daa
jle
repnz
cwtl
xchg
mov
sub
jae
std
cmp
xchg
test
iret
loop
inc
les
xchg
notl
mov
jp
sbb
and
pop
pop
mov
cmp
mov
sub
cwtl
sar
outsb
dec
push
rcll
dec
inc
cmc
sbb
sub
loop
sarb
fwait
clc
jae
les
shld
imul
inc
add
xchg
jae
in
jae
cmpsl
mov
jl
xchg
aad
pop
push
shlb
jg
mov
xchg
mov
adc
cmp
test
cwtl
aaa
adc
pop
dec
sbb
push
dec
cmp
in
js
cli
into
pop
pop
lahf
iret
cmp
je
mov
adc
cmp
lahf
lds
sbb
sahf
push
xor
dec
pop
xorl
cmp
push
js
adc
push
mov
popf
xchg
lods
andb
push
mov
js
adc
sti
push
mov
into
ljmp
stc
out
js
and
or
add
dec
cmp
incb
lods
ret
imul
xchg
clc
pop
sbb
inc
pop
mov
cmp
enter
cli
mov
and
gs
push
sahf
push
repz
sbb
add
lods
enter
xchg
es
into
stos
stos
shr
repz
mov
sub
mov
cs
mov
pop
jae
ja
stos
xchg
lods
sbb
orb
jne
aam
ss
pushf
dec
and
mov
lods
test
stc
jae
pop
mov
fildl
dec
test
lds
cld
mov
adc
push
xlat
test
popa
xchg
dec
mov
xchg
pop
xchg
sbb
imul
or
add
inc
mov
clc
sub
push
push
adc
jb
push
cmp
mov
mov
or
jbe
fidivl
sub
pop
fidivrs
mov
rcll
pop
xchg
xchg
test
jle
mov
mov
push
adc
xlat
cmp
xchg
pop
int3
adc
mov
lock
xor
sub
ljmp
add
xor
in
out
cmc
ja
ret
or
test
icebp
cltd
test
mov
sbb
leave
add
pop
sbb
arpl
cs
xlat
push
push
enter
and
fucomp
jae
mov
incl
les
sub
push
jecxz
cmp
cli
addb
sbb
mov
mov
flds
fcoml
jmp
cmpsb
push
clc
mov
sarb
jge
dec
inc
push
xchg
mov
sbb
dec
push
xlat
clc
in
jl
cmp
mov
inc
rcll
popf
jmp
xor
jae
mov
mov
push
mov
pop
popf
jbe
ret
stos
lds
cmp
push
outsl
inc
lds
adc
pusha
xchg
xchg
xor
stos
inc
mov
pop
xchg
sub
push
sbb
add
fadds
sbb
mov
movsb
sub
sub
pop
stos
shrl
daa
pop
mov
mov
loopne
test
clc
ds
cld
mov
mov
cltd
mov
jg
dec
add
ss
pmulhuw
pushf
pusha
sub
push
xchg
cmc
xchg
pop
jg
and
push
fptan
mov
dec
iret
xlat
sbb
insl
push
mov
enter
lret
push
cmp
rorb
andl
shlb
xchg
loopne
cmp
iret
cmpsl
push
jno
jb
mov
lods
inc
in
mov
cwtl
lahf
mov
xor
or
dec
cmp
mov
fisubs
in
cmp
jbe
divl
dec
icebp
idivl
shrl
roll
mov
je
cmpsb
cmp
rcrb
mov
mov
xchg
pop
mov
mov
xor
cs
enter
adc
decb
in
xorb
mov
das
or
maxps
les
xor
cmp
imul
aas
jl
push
sbb
fxam
inc
xor
loop
out
add
add
stos
sbb
int3
fwait
mov
addr16
mov
lret
sbb
cmp
mov
mov
mov
out
lret
cmpsl
xchg
es
aad
push
ret
push
inc
fwait
mov
jno
clc
icebp
pop
stos
xchg
stos
inc
mov
fwait
lods
cmp
je
sbb
add
and
jge
jns
mov
dec
or
mov
loop
sub
lret
cmc
cmpsl
jl
sub
adc
xchg
pushf
mov
sbb
pop
rclb
lods
repz
xor
or
aam
fchs
jb
fwait
outsl
or
inc
pop
sahf
and
dec
pop
int
rclb
cltd
sub
cmp
pop
xchg
pop
les
mov
rcrb
mov
aam
int3
rorl
cmc
pop
inc
mov
or
repz
adc
dec
stos
xchg
sub
lea
mov
cmp
fnstsw
jnp
rcrb
stos
cs
pop
mov
dec
sub
les
aad
xor
jno
fninit
sbb
push
mov
aaa
add
add
cwtl
imulb
push
shrb
test
mov
push
lcall
adc
ss
jne
cmc
sub
mov
repz
jmp
outsl
sbb
bound
cmp
in
jo
sahf
jo
sbbl
ss
out
in
pop
cmp
scas
rorb
fisubl
push
fwait
add
xor
or
rcrb
dec
inc
xor
data16
aaa
pop
mov
fsub
faddp
aas
movsb
lahf
sub
dec
cmp
inc
pop
add
xor
and
pop
movsl
push
jmp
xchg
imul
dec
jnp
addb
test
inc
sbb
aad
inc
sbb
cli
out
pop
sbb
dec
arpl
jg
imul
std
push
imul
pop
jle
aad
and
xor
mov
in
pop
jae
sbb
xchg
cmp
push
jl
scas
test
mov
xor
mov
aad
int
shll
lea
jp
mov
add
mov
xchg
mov
std
sub
cmp
inc
incl
jle
insb
adcb
mov
stc
je
add
cltd
andb
in
or
pop
into
cmpsb
inc
cltd
enter
rol
cld
mov
cmp
push
cwtl
mov
stos
sbb
pop
imul
push
test
mov
dec
and
mov
testb
imul
mov
pop
loopw
or
mov
adc
mov
sub
js
mov
sahf
pushf
mov
jnp
add
push
lret
test
je
fildll
out
mov
push
aas
jnp
sub
push
leave
sahf
adc
lret
in
mov
and
gs
loop
mov
xchg
mov
roll
stos
repz
or
scas
adc
pusha
ljmp
aaa
mov
inc
mov
fisubl
push
mov
or
sbb
mov
mov
push
xor
test
xchg
movsl
add
jle
and
cmp
out
bswap
sbb
leave
aas
pop
cli
test
mov
aam
add
lret
call
and
rcrb
movsl
pop
cld
pop
add
ss
adc
cmp
xor
cli
add
rdmsr
jmp
lock
mov
inc
or
adc
sbb
sbb
or
or
stos
lds
sub
mov
addr16
pop
mov
mov
xchg
popf
adc
scas
mov
sbb
jae
roll
xchg
sbb
mov
fldt
scas
inc
push
sarl
add
adc
pushf
cmovg
sarb
out
sbb
dec
cmpsl
jo
and
in
fistpll
out
cmc
out
add
mov
jle
add
js
lea
addr16
jmp
lods
or
into
cli
rolb
imul
ds
mov
cmp
out
pop
mov
repz
fcompl
clc
repnz
push
xchg
mov
repnz
pop
fdivl
push
jno
mov
pop
push
mov
push
imul
gs
mov
repz
roll
hlt
add
outsl
jo
incl
loop
fwait
clc
add
cmc
mov
dec
inc
dec
xchg
fidivrl
xor
mov
and
xchg
movsb
fisubrs
movsb
enter
pop
testl
xor
inc
mov
cld
outsb
sub
cmp
mov
fcoml
add
ljmp
movb
scas
lcall
leave
push
jle
jbe
adc
jg
xlat
js
cmc
xchg
push
test
in
rolb
ret
into
stc
jle
aad
pop
mov
adcl
inc
mov
jno
xchg
not
in
icebp
dec
adc
imul
jmp
cmp
je
fistl
inc
arpl
movsb
push
rcl
xchg
push
hlt
fiadds
pop
test
mov
je
js
es
push
xchg
inc
push
sub
movsb
cmp
inc
xchg
fisttpl
mov
roll
mov
sbb
pop
cmp
mov
out
roll
and
test
push
sbb
das
xor
iret
movsl
fsubrs
lahf
aas
outsl
insl
test
add
push
lods
icebp
daa
mov
dec
sbb
adc
sub
aas
arpl
orb
insl
mov
cmpsl
xchg
popf
mov
adc
sbb
or
fldt
fstl
mov
imul
popf
int3
fnstenv
sbb
data16
pusha
fsub
add
fmull
cmp
je
clc
ds
inc
sbb
and
pop
xchg
push
cmp
adc
scas
mul
or
insb
jbe
int3
aad
mov
jnp
movsl
mov
jnp
test
iret
pop
arpl
mov
int3
push
pusha
mov
fidivl
das
fcoms
sub
dec
mov
xor
sahf
ret
arpl
mov
sub
imul
pop
add
adc
add
pop
roll
outsb
pop
add
add
push
push
push
icebp
jmp
lahf
addr16
decl
sahf
mov
fwait
ljmp
iret
test
xchg
add
mov
inc
popf
lret
fnstsw
pop
out
scas
xor
mov
fsub
jmp
movsl
inc
sub
xchg
test
and
xor
scas
xchg
fisttpl
push
mov
jge
lret
jne
arpl
mov
jmp
movsl
shll
leave
jle
inc
jg
leave
mov
popf
pop
adc
mov
xor
sbb
ror
add
sbb
fsubrs
and
xchg
dec
movsl
cwtl
test
and
lods
pop
xchg
jbe
lea
sbb
cmc
jmp
cmp
or
inc
je
dec
cwtl
aaa
fsqrt
pop
daa
push
or
les
cmc
in
xorb
push
mov
ret
fs
adc
mov
push
inc
mov
cwtl
repz
and
scas
into
mov
jg
cmp
and
sub
add
jl
rolb
movsl
dec
bound
jecxz
sbb
es
fbstp
lods
xchg
or
rcll
scas
and
arpl
fistl
inc
lock
xchg
int
push
sbb
xor
fcompl
mov
dec
fs
insb
dec
push
clc
ljmp
cmc
divl
sbb
frstor
lods
cmc
in
call
pop
xchg
sbb
adc
push
pop
adc
cltd
fidivrs
shll
mov
push
pop
call
pop
cmc
jnp
jg
jnp
out
push
push
push
cmpsb
inc
xor
popf
inc
loope
pop
dec
sbb
stos
aaa
sbb
xchg
cltd
add
insl
fucomp
jge
lods
divb
inc
sub
dec
sarb
jno
push
cwtl
out
divl
in
fmul
in
addr16
aas
or
repz
xchg
popf
cmp
or
ss
inc
testb
cmp
and
int
ljmp
arpl
fadd
stos
add
mov
or
fildll
dec
fidivs
push
mov
mov
arpl
or
or
xor
mov
cmpsb
xor
and
cmpsl
test
jle
lods
inc
sbbl
mov
inc
mov
lret
and
lret
xchg
sbb
pusha
sub
mov
xor
outsl
adc
push
cmpsb
push
xchg
inc
cmpsb
jbe
jge
mov
inc
jecxz
hlt
jae
daa
inc
pop
or
insl
sub
mov
enter
test
xor
push
outsb
dec
inc
add
xor
lods
test
mov
push
jno
jnp
cwtl
dec
and
mov
mov
test
inc
lds
jle
pop
pop
xor
jecxz
add
mov
mov
or
add
adc
inc
add
or
ljmp
jnp
out
jo
sub
push
xlat
fisubrs
imul
jg
mov
imulb
sub
lds
roll
ret
push
loop
cltd
inc
lahf
mov
lea
jnp
movsl
xor
ja
in
stos
gs
cmp
in
cs
cmpsb
jae
aaa
setg
mov
std
stc
and
enter
mov
fiadds
rcrl
cs
idiv
pushl
jecxz
push
inc
mov
movsb
push
fwait
jge
data16
inc
push
fisubl
adc
lds
xchg
lea
ret
fnstcw
cmpsb
or
push
outsb
xor
pop
stos
add
sar
mov
rol
xor
pop
mov
adc
lods
gs
adc
into
xor
or
mov
mov
cltd
fdivl
cs
lock
xchg
xor
mov
decb
bnd
xchg
jecxz
mov
mov
sbb
mov
pop
stos
repz
pop
loopne
dec
sbb
jnp
mov
mov
repz
test
arpl
inc
xor
out
popa
inc
out
addb
popa
cmp
lock
stos
hlt
mov
fisubrl
add
or
cmp
aam
lahf
xor
pushl
stc
decl
and
adc
xor
test
out
sub
xor
push
or
xchg
sbb
shl
fsubrl
ret
out
push
and
pop
cwtl
xor
push
jmp
mov
addr16
hlt
cltd
and
dec
xlat
faddp
mov
fistpll
popf
sti
and
sub
dec
les
out
dec
pop
mov
mov
scas
fstl
roll
in
jl
std
mov
jae
arpl
ja
ret
sbb
inc
sbb
lds
or
rcrb
dec
pop
idivb
dec
sub
test
mov
test
aas
pop
inc
popa
test
arpl
fwait
push
xchg
pop
test
dec
or
or
xchg
fstl
sub
mov
dec
rcll
ffreep
pusha
mov
jmp
into
add
js
nop
xchg
pop
push
stos
subl
test
test
jecxz
lock
fnstcw
mov
ret
sub
jnp
aam
mov
cltd
jo
inc
es
push
dec
cmp
jne
mov
or
subb
or
shll
jne
cld
es
inc
jne
jnp
repnz
cltd
jg
jg
lock
adc
push
and
or
ja
ret
sub
mov
and
add
leave
lret
or
mov
fcoml
pop
das
push
ret
or
push
aam
stos
add
push
jmp
mov
iret
xchg
cld
sahf
int
xor
enter
mov
subb
ret
cld
jge
dec
rcll
push
cmp
jle
adc
or
lcall
push
inc
add
xor
test
cmp
enter
xchg
sbb
cmp
adc
adc
sbb
fwait
jge
data16
jp
xchg
mov
mov
adc
inc
and
call
cmp
push
mov
sti
sbb
inc
sbb
cmp
fwait
sub
pop
int3
mov
mov
pop
loope
neg
movsl
mov
pop
add
adc
popf
rclb
fs
adc
mov
cs
mov
dec
dec
push
rorb
xor
xchg
xor
xor
ja
int3
in
int
sbb
arpl
stos
mov
stos
mov
stos
push
sub
mov
inc
lock
popf
insb
sbb
cld
lods
xchg
pop
xchg
int
or
pop
lds
adc
mov
fiaddl
rcll
mov
jne
mov
pushf
adc
mov
scas
jbe
jmp
xchg
cld
pop
adc
sbb
adc
xlat
lds
mov
stos
jl
popf
shll
jo
or
les
out
fdivrs
xchg
inc
mov
xlat
sub
sub
xchg
ret
fsts
cwtl
and
inc
jmp
imul
pop
sub
push
cmp
mov
sub
dec
inc
aad
call
es
add
mov
pop
adc
xchg
ds
and
push
xchg
sbb
mov
inc
js
add
xor
in
add
scas
xchg
int3
bound
les
mov
test
adc
ror
sbb
mov
pop
out
in
cmova
hlt
ds
xor
fwait
cmp
shlb
movsl
ficoml
pop
clc
mov
inc
pusha
xor
push
fwait
lods
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shll
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
inc
mov
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
ret
