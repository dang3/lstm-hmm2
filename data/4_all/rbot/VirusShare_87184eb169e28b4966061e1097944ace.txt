push
call
ret
ret
and
aaa
sub
adc
adc
mov
loope
xor
jae
sub
call
sub
lds
sbb
fldcw
fisubrs
mov
subb
xchg
or
xor
sbb
inc
in
je
xchg
cli
jnp
mov
push
jno
inc
lea
adc
push
sub
sbb
adc
push
push
sti
add
jl
sbb
rclb
xor
push
mov
test
and
repz
mov
or
sub
fdivrl
xchg
movsb
addl
fs
mov
mov
pop
std
jo
loop
les
fisubrs
outsb
fwait
cwtl
add
xlat
xor
pop
frstor
xlat
loope
xor
pushf
stc
pushf
dec
xor
push
stos
dec
es
test
cli
mov
je
test
push
xorb
lock
pop
sahf
inc
sbb
shll
bound
insl
push
xor
xor
in
fldcw
add
loop
dec
in
mov
hlt
pop
xchg
jo
inc
imul
call
push
sbb
ds
jo
je
pop
rorb
mov
rcll
pop
shrl
mov
lods
and
test
daa
js
jnp
mov
jle
and
sahf
or
imul
cmp
pop
sbb
pop
js
xchg
pop
cmc
pop
mov
sbb
cli
movsl
inc
sbb
pop
rol
je
mov
fsubp
or
lret
lahf
pop
and
inc
test
and
jl
xor
dec
cmpsb
add
stos
cs
push
daa
mov
popa
mov
int
in
mov
out
shlb
ss
jo
lret
movl
fisttps
std
das
shl
xor
nop
idivb
add
lock
popf
inc
lret
pop
lods
inc
or
or
das
popf
push
imul
orl
aas
add
sti
or
cmp
dec
fsubrp
inc
std
push
cmp
inc
mov
and
loope
inc
mov
pop
scas
add
hlt
push
pop
clc
in
sub
ds
cmp
rcr
daa
mov
icebp
cwtl
test
jo
cmp
pop
and
jle
or
sbb
rcrb
lea
or
call
ret
stc
call
movsb
repnz
push
mov
icebp
xor
call
hlt
leave
loopne
mov
loope
mov
sbb
call
enter
vpunpckhwd
mov
pop
data16
addr16
pop
movsb
cmp
movsl
xchg
xchg
rcrb
jae
nop
sbb
lods
jp
add
adc
scas
ror
mov
dec
mov
movb
call
cli
fiaddl
movsb
fisubs
sbb
in
lcall
push
andl
mov
cmp
jne
cmpsb
push
imul
inc
loopne
mov
inc
and
pop
inc
inc
sub
jbe
outsb
mov
xchg
fs
mov
aaa
dec
leave
pop
dec
repnz
mov
fwait
adc
ficompl
icebp
loopne
imul
push
dec
aaa
sub
or
xchg
out
mov
sub
bound
sbb
je
mov
jg
es
mov
stos
rclb
pop
or
or
loopne
dec
mov
dec
int3
sub
dec
in
imul
sahf
pushf
shrl
add
cmp
cwtl
and
cmp
sbb
sub
sahf
imul
dec
xor
sub
cmp
int3
inc
and
xchg
xchg
pop
ja
xchg
mov
push
jle
ljmp
jmp
fs
out
mov
loop
aad
ss
fidivl
xor
xor
addr16
test
adc
cmp
add
pop
jno
mov
pop
test
cmp
xor
xlat
pop
dec
test
or
add
loope
sub
inc
inc
and
mov
push
sub
lds
sub
fsubl
sbb
out
pop
bound
lahf
add
sub
test
cmpb
xor
push
mov
pop
add
daa
out
pop
ljmp
loope
sbb
jp
cmpsl
fldt
aaa
push
jl
xchg
xlat
mov
sub
push
imul
sti
jge
fiaddl
pop
clc
scas
jp
lock
or
push
addl
xor
jne
adc
mov
push
add
push
sub
and
push
pusha
add
inc
mov
icebp
mov
stos
inc
outsb
call
add
movl
pop
dec
mov
mov
in
xor
outsl
ret
stos
aas
and
lret
aam
lock
cltd
aam
movsl
adc
icebp
nop
int
adc
mov
pop
rcll
test
pop
adc
and
gs
xor
insl
mov
sub
mov
icebp
or
cmc
sub
lret
xchg
or
inc
dec
sbb
pusha
fistps
xor
test
push
out
out
or
dec
test
outsb
ja
outsl
and
pop
popa
popa
or
mov
fnsave
mov
daa
les
pop
scas
inc
mov
stc
sub
xchg
cli
dec
cmpsl
in
sbb
sti
sahf
pop
stc
sahf
add
fistpll
mov
fdivrs
jb
fcmovnb
jle
add
repnz
pop
xchg
jno
fsts
out
or
or
negl
int3
push
mov
fwait
lods
xor
cmp
adc
ret
pop
jae
cmp
jecxz
push
and
pop
inc
push
insl
inc
rcrb
fsubrs
sub
mov
aaa
inc
hlt
data16
jecxz
jl
test
add
jp
in
cmp
int3
add
add
adc
cli
int
xchg
jne
push
xchg
test
daa
test
scas
imul
push
call
incl
adc
xor
stos
inc
mov
lods
jecxz
mov
ljmp
addl
xchg
xor
add
inc
or
mov
loope
lret
mov
les
adcb
out
xchg
mov
pop
fwait
adc
gs
jecxz
push
and
and
push
mov
fwait
cmpsb
icebp
es
fidivs
pusha
dec
icebp
dec
jp
jg
lret
cld
clc
sbb
js
jmp
pop
xchg
jne
fldt
mov
lret
loope
and
adc
lahf
psrld
cmp
orl
daa
push
sub
fmuls
test
aad
lea
and
xchg
xchg
test
lret
mov
jnp
mov
dec
insb
loopne
lahf
mov
mov
imul
sbb
into
ljmp
test
outsb
pushf
mov
adc
or
outsl
mov
repz
rol
cmc
andl
mov
ret
cli
lods
fs
lods
sti
aam
js
sbb
xor
xor
xchg
testb
cltd
add
test
dec
xchg
fdivrs
cld
xchg
pop
push
pop
outsb
add
jnp
xchg
ret
imul
push
fsub
pop
movsb
push
sbb
jle
add
mov
mov
lea
add
mov
jmp
xchg
cwtl
cmc
into
fdivl
pop
in
aas
jb
cmp
dec
mov
xchg
push
bsr
inc
imul
xchg
test
push
loope
xor
cmp
cmpsb
cmp
add
jmp
sti
jno
popf
fisttpl
jbe
lret
stos
fists
jno
dec
xor
pop
mov
cmp
xchg
shrb
dec
cmp
shll
sbb
in
xor
jbe
add
orb
aas
xor
movsl
and
push
gs
orb
cmp
adc
les
jne
rclb
xchg
xchg
add
mov
sbb
xchg
sub
xor
in
repnz
adc
lcall
insb
xor
test
sub
fcomps
mov
mov
in
and
xchg
sti
shl
mov
ret
arpl
bound
xchg
mov
mov
inc
push
mov
mov
sbb
in
arpl
mov
in
dec
mov
mov
sbb
leave
sbb
adc
dec
xor
pop
dec
or
sub
ss
idivb
jnp
inc
jns
adcl
ret
sbb
lahf
push
xchg
mov
aam
inc
scas
rorl
mov
mov
xor
xchg
jmp
out
test
enter
jmp
shl
jle
leave
nop
js
ficoms
mov
lods
sub
jns
imul
mov
sbb
push
aaa
fimull
mov
inc
jp
in
gs
ljmp
int
jmp
mov
dec
cmc
imul
dec
mov
sbb
scas
ds
inc
ret
push
dec
movsb
outsl
daa
jnp
out
enter
mov
pusha
mov
in
xorl
in
loop
jl
jbe
sub
fdivs
sbb
popa
and
subb
add
xor
mov
push
gs
subb
popf
cmp
test
rorb
fisubs
das
mov
pop
rol
jb
mov
xor
orb
adc
popf
lret
add
mov
mov
movsb
inc
xor
fsubrl
jl
or
or
push
call
out
adc
in
aad
test
cs
jl
xchg
divl
stos
lock
or
les
sbb
clc
cmp
xor
movsb
jecxz
add
ja
cli
add
or
addl
dec
bound
iret
push
sbb
sahf
shlb
aad
xor
in
cmpl
jne
jl
pushf
and
hlt
pop
lds
enter
jbe
leave
gs
inc
data16
sbb
jns
pop
outsb
mov
mov
sub
popf
sub
pop
bound
jo
hlt
popf
pop
stc
mov
xorl
imul
adc
jne
xlat
push
mov
out
fisttpll
adc
cwtl
cld
js
dec
stc
fsts
sbb
push
push
xor
fsub
addr16
mov
sti
int3
jns
push
xor
jo,pn
cmp
repz
and
lea
jae
movb
sub
xchg
mov
aaa
and
out
or
icebp
sub
stos
add
pop
mov
add
addr16
idivb
fstp
repz
scas
push
shlb
out
leave
add
out
std
cli
push
jmp
aam
sbb
push
xchg
outsb
pop
into
xchg
repz
in
push
jns
jo
inc
add
movsb
loopne
int
jbe
inc
sbb
sbb
or
lret
popa
pop
jge
sbb
cwtl
nop
lret
les
jbe
mov
into
and
notl
pusha
arpl
jae
jg
jg
arpl
rep
mov
inc
xor
sbb
mov
sub
mov
frstor
dec
push
in
lret
adc
sub
ljmp
push
pop
xchg
fsubrl
pushf
jmp
pop
decb
shrb
cmp
push
test
movsl
orb
xor
jmp
adc
clc
mov
out
outsb
dec
cmc
leave
inc
gs
mov
push
push
into
jp
push
adc
stos
cmp
xor
inc
les
int3
in
xor
lret
and
sub
mov
cwtl
stos
fsubs
cwtl
out
fcmovnbe
adc
adc
rorl
jg
mov
in
push
pop
push
rcrb
fs
push
xchg
pop
add
sbb
xchg
add
insl
aas
push
sub
pop
loope
mov
jnp
hlt
scas
and
iret
add
mov
adc
and
nop
movsb
out
xlat
clc
stc
jp
mov
rolb
adc
mov
sbb
mov
aas
shrl
jmp
mov
dec
iret
loopne
inc
cmp
decb
and
popa
adc
pop
jnp
xchg
stos
cli
les
dec
mov
movsl
inc
ljmp
add
lret
popa
push
dec
or
xchg
xchg
ss
loop
cwtl
xchg
jne
aad
push
push
sahf
stc
dec
loop
xchg
push
dec
xchg
out
sbb
lock
jp
cld
loope
ja
addr16
je
hlt
push
or
sbb
lahf
shrl
push
sub
add
and
roll
imul
jg
mov
in
pop
mov
cs
and
fwait
in
add
pop
mov
in
test
subl
in
cmp
push
push
inc
push
jb
jne
popf
sti
outsb
xor
xor
inc
aam
push
sbb
cs
xchg
sbb
incl
icebp
mov
hlt
push
xchg
mov
sti
in
rcrb
mov
xchg
mov
cmpsb
dec
cmp
nop
fwait
repz
adc
inc
pop
addr16
stc
add
and
xor
cltd
pop
sbb
shl
add
inc
mov
popa
add
cmc
mov
push
imul
inc
and
pushf
lds
add
fidivrs
outsl
jmp
cltd
out
jne
in
divl
adc
sub
je
xor
inc
leave
addr16
cmp
adc
stc
lea
push
pop
mov
leave
jle
in
mov
in
idivb
inc
lret
pusha
jno
adc
mov
xchg
mov
insb
out
incl
inc
jge
cwtl
push
sti
out
xor
add
and
mov
lods
add
pop
push
shll
pop
dec
loope
xchg
jl
movsl
je
out
xchg
mov
sar
das
mov
les
pusha
js
cmp
and
sbb
push
lock
xchg
mov
mov
ljmp
jb
push
iret
mov
sbb
icebp
test
push
cmp
xor
pop
ss
inc
lock
jmp
outsb
sub
arpl
adc
daa
jle
daa
cmp
cmpsl
xor
xor
das
enter
je
mov
adc
hlt
adc
xchg
adc
bound
pushf
push
mov
call
sbb
push
inc
das
ret
aas
rorb
mov
push
xor
adc
mov
out
test
out
test
mov
jnp
pop
adc
fcoms
inc
lahf
stos
xchg
imul
enter
into
scas
std
not
dec
lahf
or
ljmp
cld
repz
fdiv
test
dec
push
sbbl
xor
mov
rol
pusha
mov
add
cmp
sbbb
addr16
jne
and
cmp
ror
loope
xchg
pusha
in
fstps
aas
xor
inc
mov
lds
sub
pop
mov
sbb
sti
mov
mov
xor
or
lods
pop
ret
mov
jb
pushf
or
outsl
push
sbb
mov
pop
sahf
push
pop
cmp
sbb
std
imulb
pop
mov
loop
and
cmc
ret
sbb
ljmp
mov
mov
or
jne
or
lcall
lahf
xor
cwtl
dec
rclb
xchg
cmpsl
in
movd
xchg
inc
shlb
cmpsl
call
gs
jae
push
pop
adc
hlt
mov
imul
fisttpll
mov
out
in
out
push
jns
mov
in
imul
subl
xor
push
cmp
fs
test
daa
add
mov
fsubs
imul
scas
bound
dec
in
xor
and
cwtl
out
pop
clc
xchg
icebp
repnz
pusha
and
adc
mov
jne
outsl
pop
and
jo
pop
pop
fcoml
jg
mov
fcoms
push
push
aas
mov
and
shlb
pop
dec
js
push
jmp
fcmovnu
add
mov
add
xlat
lock
fmul
es
jmp
stos
pop
arpl
sar
cmp
cld
xchg
ss
or
hlt
xchg
lods
sbb
stc
pushf
xchg
ljmp
ja
repz
arpl
xchg
rclb
push
jnp
adc
ds
adc
jge
sub
cmpsb
mov
js
pop
mov
mov
pop
hlt
mov
shrl
pop
pusha
pop
mov
jp
loope
out
push
clc
lcall
xchg
inc
jmp
shll
iret
jbe
je
mov
inc
cmp
jg
dec
arpl
pop
insl
or
lock
out
mov
xchg
push
xor
mov
xchg
pop
ds
jl
daa
iret
in
or
sbb
imul
fldcw
add
idivl
in
mov
mov
push
dec
lret
out
xlat
sbb
popf
pop
cli
add
and
ret
ror
push
pusha
pop
scas
push
push
sbb
nop
and
and
in
jae
bound
movl
fists
in
int
push
ret
ret
sbb
push
outsl
cmp
cmp
cmp
and
push
hlt
jg
push
ffree
xchg
js
mov
xchg
push
lahf
xor
and
rol
hlt
inc
test
xchg
pop
les
jecxz
mov
sbb
lea
aam
mul
lods
mov
xor
roll
repz
dec
pop
fcomip
jno
sbb
imul
iret
rorl
or
leave
dec
shlb
mov
hlt
rorl
mov
xor
sbb
test
inc
xchg
adc
outsb
not
call
jne
push
push
addr16
and
jno
xor
jae
jbe
xlat
enter
hlt
rorl
in
sub
rcrl
sti
mov
loope
pop
xor
in
or
frstor
arpl
pop
adc
ss
inc
mov
aaa
stos
add
test
ljmp
aaa
lret
ds
dec
sub
adc
push
mov
sub
jge
push
jne
cmp
push
pop
pop
jge
xchg
pop
add
mov
adc
fucomip
testl
push
shlb
adc
dec
xor
jb
jl
mov
es
ja
stos
loopne
xchg
dec
data16
je
shll
cmp
lods
in
pop
mov
xchg
mov
or
mov
out
mov
pushw
xchg
in
or
sbb
outsl
das
adc
sbb
cmp
jmp
dec
stos
test
ljmp
insl
add
push
push
stc
hlt
mov
aad
cwtl
or
mov
lea
aam
sarb
dec
adcl
sti
ret
or
jb
mov
les
push
inc
and
call
pop
mov
cmp
int
jns
shll
pop
and
loopne
cmp
fstpl
xlat
inc
push
pushf
ffree
dec
sbb
ljmp
ss
mov
push
addr16
cmc
cmp
cli
mov
fwait
dec
aaa
cld
shlb
loopne
stos
dec
cmp
pop
aad
xchg
in
xchg
inc
jmp
fwait
push
sbb
std
pop
lea
mov
jecxz
orb
js
pop
cmp
es
leave
shl
inc
stos
sub
xchg
mov
and
ljmp
daa
xlat
cmpsb
mov
and
in
pop
test
int3
adc
in
ret
inc
loope
test
push
imul
aam
rolb
shll
mov
inc
jnp
inc
lret
or
test
mov
into
adc
popa
mov
push
xor
mov
xor
inc
out
adc
aaa
mov
pop
punpcklwd
dec
lock
fnstenv
cmpsb
push
or
jns
hlt
adc
loopne
xchg
ss
jne
mov
jle
mov
lods
jno
mov
jg
std
inc
mov
lret
fldenv
sub
or
lock
das
dec
ja
lds
mov
mov
fwait
sub
fdivr
cmp
jns
inc
jo
sbb
and
xor
xchg
inc
insl
orl
xor
add
inc
xchg
mov
jo
jo
jmp
add
cmpsl
xchg
and
test
sub
jo
inc
push
jmp
jge
xor
mov
lahf
es
dec
test
out
cltd
pop
xor
or
pop
mov
pop
lret
xor
popf
mov
fmulp
adc
push
mov
sbb
test
shrl
repz
cmpl
xlat
inc
jne
stos
inc
in
mov
or
inc
insl
mov
and
imul
xchg
inc
add
fcoms
sub
fdivrs
mov
ret
cmp
mov
es
ja
mov
call
loop
sarl
xchg
add
or
shl
inc
cmc
out
mov
popa
clc
inc
push
fadd
add
cs
imul
push
jno
push
mov
ret
pop
push
ljmp
and
sbbl
push
mov
nop
out
sub
inc
aaa
aam
mov
mov
or
pop
dec
popf
mov
pop
das
and
pop
aad
mov
lea
inc
fmul
je
lret
mov
subb
add
movsl
in
or
pop
ss
mov
repz
mov
mov
jbe
in
fidivs
sub
int3
outsb
lret
fs
sub
lock
sbb
dec
xchg
push
lods
scas
sub
jle
push
push
stos
out
loope
mov
jae
lods
push
dec
xchg
scas
fadds
jl
xor
pop
xchg
bswap
push
add
and
fwait
sbb
repz
jnp
ret
or
arpl
jmp
mov
dec
xor
leave
mov
and
cmpsb
mov
movsl
mov
sub
push
das
xchg
ds
test
xchg
inc
movsb
gs
gs
loopne
mulb
add
inc
into
stc
jmp
inc
lret
les
mov
dec
jmp
adc
cmp
pop
or
jle
jl
andl
push
stos
pop
xor
cmp
int3
inc
fcoml
enter
scas
frstor
dec
rclb
and
jp
dec
hlt
mov
pop
in
pushf
push
fwait
xchg
cmp
in
and
pushf
leave
push
jne
movsb
inc
mov
lcall
mov
push
cmp
imul
out
add
sub
sub
push
pop
lods
aas
pop
push
mov
adc
rcrl
mov
jmp
xchg
or
pop
daa
pop
cmp
mov
xchg
pop
inc
xor
clc
nop
pop
fisttpll
and
lahf
mov
in
fsubr
mov
xor
or
rorb
int3
push
lea
adc
rol
xor
mov
lods
mov
repz
jnp
shll
xchg
xchg
loop
cltd
repz
cltd
xor
cltd
push
cltd
add
ds
lods
cmc
sbbb
xchg
setl
outsl
mov
mov
adc
bts
mov
icebp
jl
jge
lcall
loopne
idivb
addr16
jbe
dec
subb
in
daa
in
cltd
push
nop
adc
out
push
stos
fisttps
sbb
js
arpl
out
inc
popf
inc
mov
mov
nop
js
sbb
fsubrs
in
rclb
js
movsb
sub
jnp
outsb
cltd
ss
lahf
into
test
sub
cmp
in
adc
adc
jge
rol
setl
pop
dec
in
stos
push
lods
push
lcall
cld
lret
lea
sub
xor
mov
dec
add
push
sub
mov
sbb
gs
jp
insb
and
pop
das
imul
call
int
rcrb
aas
aaa
xchg
icebp
cmpsb
leave
ds
mov
cmp
nop
mov
inc
inc
dec
pop
test
pushf
stos
repz
and
je
insb
push
jns
mov
jecxz
not
out
or
punpckldq
jle
mov
xchg
mov
push
mov
ror
mov
es
dec
mov
sub
gs
arpl
inc
sbbl
mov
cmpl
sahf
fbld
and
pop
sbb
jge
push
out
pop
out
insb
fidivrl
out
push
sbb
shrl
movsl
fs
mov
aaa
jg
andl
mov
out
jp
aad
addr16
repz
hlt
imul
rorl
sub
outsl
icebp
pop
mov
add
pop
nop
adc
jns
mov
mov
loop
push
popa
jecxz
inc
repz
outsl
stos
decl
insb
jnp
scas
adc
sti
loope
lahf
psubw
loope
mov
lahf
mov
lods
jmp
and
push
shrb
dec
xor
nop
sarb
cmp
bound
imul
lret
scas
add
test
into
xchg
fdivl
xchg
mov
subb
adc
sub
add
xchg
mov
dec
sub
in
les
pop
fs
xorb
adc
push
mov
mov
lret
addl
out
hlt
out
inc
inc
xchg
je
push
sub
neg
in
jg
sti
mov
pop
imul
push
cmp
add
push
mov
sub
outsl
into
cli
fmul
jo
movsl
jae
arpl
repnz
lods
xor
sbb
xchg
cmpsb
lds
insl
adc
icebp
in
mov
movsl
push
mov
push
mov
xchg
mull
popf
xchg
and
fwait
test
add
out
test
testb
inc
mov
jnp
into
pushf
aam
lods
mov
mov
push
dec
je
sahf
mov
shl
push
popa
pop
popf
sbb
adc
mov
aaa
scas
jno
js
pop
push
and
hlt
clc
and
push
test
mov
xor
or
leave
outsb
fnstsw
mov
lahf
lea
fidivrl
push
lods
in
and
sarb
jns
xchg
push
ds
dec
adc
xor
push
inc
insl
jge
lcall
fwait
push
outsl
es
inc
int
xchg
mov
jae
sahf
xchg
jb
mov
jge
pop
shlb
jecxz
mov
adc
mov
jp
dec
adc
inc
push
pop
mov
cmpsb
fcoml
push
stos
push
mov
xor
mov
insl
cld
mov
and
pop
mov
int3
lahf
shlb
xlat
scas
mov
push
adc
int
out
jno
jnp
out
add
mov
jp
mov
mov
mov
call
sbb
sbb
subb
adc
jecxz
loop
gs
lods
mov
outsl
mov
shlb
push
pusha
mov
push
push
testl
add
test
inc
adc
out
sub
inc
adc
jle
mov
std
push
inc
inc
inc
pushfw
sub
add
movsb
jno
ds
fldlg2
jae
ja
pop
xchg
scas
mov
hlt
dec
dec
rclb
jecxz
add
or
sub
dec
dec
inc
shll
ret
mov
outsl
push
or
cmc
fwait
mov
add
orb
out
ds
pop
bound
vcomisd
cmp
ret
add
adc
pop
sarb
repz
movntps
dec
xor
inc
cmp
out
cmovo
std
dec
or
mov
pop
div
mov
popa
sub
js
push
and
inc
sub
ret
dec
out
gs
jp
xchg
daa
inc
pop
cmp
xor
push
faddl
inc
fwait
out
packssdw
sbbb
dec
pop
sub
adc
pop
popa
push
aam
push
mov
cmc
out
jns
push
pop
pop
enter
sub
ror
xor
mov
lret
ret
sbbl
sub
cmpsb
lods
scas
pop
sbb
mov
cmp
fimull
mov
sub
mov
xlat
cmp
inc
mov
dec
adc
aaa
pushf
pop
out
jb
stc
fisubs
ja
cmp
push
cld
mov
jmp
negb
cltd
mov
cli
cmp
les
rorl
cmp
mov
into
ljmp
pop
pop
clc
jle
sahf
movsb
jnp,pn
rorb
sti
rcrl
fildll
mov
jne
outsl
lret
mulb
test
aas
pop
push
or
test
adc
es
addr16
cld
sbb
arpl
stc
jne
mov
in
xchg
fwait
mov
push
sbb
or
mov
mov
cmp
and
das
pop
int
sub
bound
rol
dec
xchg
push
ret
mov
add
or
dec
cmp
mov
int3
test
cmpsl
js
push
imul
inc
aad
sub
and
mov
daa
lcall
mov
stc
adc
jnp
xorb
cs
xor
lret
scas
jns
cli
lods
popa
lret
cs
ds
in
test
add
out
scas
jl
aam
mov
negb
mov
test
mov
or
cmp
ficompl
xchg
mov
in
lods
dec
inc
sub
cmpsl
popf
sarl
test
inc
in
xlat
rcrb
fwait
mov
lret
imul
mov
inc
jne
mov
inc
andb
imul
test
sub
cmpsb
sub
dec
sbbb
mov
lods
es
lret
and
mov
popa
lds
fs
nop
pop
in
push
popf
xchg
lds
sbb
icebp
adc
ds
stos
and
enter
outsb
int
and
loopne
insb
scas
out
cli
cli
sub
jge
dec
pop
xlat
or
and
sub
inc
andl
mov
pushf
cmp
lds
inc
fists
and
ljmp
sti
jge
leave
scas
js
jmp
push
xchg
in
bswap
addr16
mov
jbe
imul
pop
sbb
js
jle
daa
xor
sub
and
jbe
cwtl
testl
jo
nop
out
and
xchg
mov
pop
or
sub
adc
cs
pop
inc
fwait
shrb
lret
fs
jp
pop
cs
xlat
dec
out
adc
test
movsl
inc
sbb
xchg
xor
mov
xlat
outsl
add
xor
xchg
scas
imul
inc
push
vmovlpd
inc
mov
or
in
daa
imul
xorl
cld
aad
dec
nop
mov
out
cmpsl
and
adc
push
pop
test
or
sahf
jmp
push
mov
jae
nop
shl
sbb
inc
jmp
sub
fsubrp
xchg
jmp
sub
jns
call
das
lock
out
inc
push
mov
adc
cli
pop
roll
mov
stc
mov
mov
inc
pop
sub
add
test
mov
bound
add
ljmp
pop
push
cwtl
pop
ret
int3
xchg
jo
sub
pusha
pop
jmp
xchg
out
aam
pop
mov
scas
mov
cs
rdmsr
inc
aad
pop
sub
lret
scas
cmpsb
or
mov
push
out
cmp
fcmovnu
sbb
rcr
pop
lods
or
sbb
xchg
ret
sbb
and
or
pop
jbe
fldcw
adc
xchg
mov
or
outsl
mov
adc
cmp
dec
je
sub
bnd
mov
jg
rcl
and
les
les
shrl
adc
push
insl
mov
cmp
nop
mov
jo
mov
or
pop
or
ja
dec
lods
inc
and
je,pt
stc
mov
push
push
or
push
test
inc
inc
push
cltd
mov
movsl
sti
test
jl
add
arpl
adc
pop
push
test
adc
arpl
jecxz
arpl
mov
int
mov
lret
or
mov
pop
testb
lahf
ljmp
inc
mov
pop
cld
or
jbe
shlb
sub
xchg
into
cmp
jg
pop
inc
mov
xchg
xchg
ret
cmp
out
lret
jg
xchg
lods
pop
lds
imul
sbb
add
ljmp
jl
pop
scas
sub
adc
xor
arpl
aaa
cmp
es
flds
sti
sub
lods
imul
jp
test
gs
push
mov
jecxz
add
repz
das
dec
inc
lret
cs
or
rcr
les
mov
mov
ds
sbb
aad
push
or
cs
add
adc
pop
fcmovbe
xchg
ficoml
sti
dec
addr16
mov
inc
sub
dec
sbb
mov
push
arpl
test
inc
dec
int
loope
sub
mov
cli
hlt
jno
push
nop
xchg
push
es
movb
inc
lcall
mov
popf
inc
lcall
test
aad
movsb
lds
push
pop
xor
enter
lods
mov
movsb
gs
jb
arpl
ja
filds
push
incb
cli
xchg
pop
mov
mov
popa
mov
xor
xchg
mov
pop
sbb
dec
adc
add
mov
inc
cmpsb
je
dec
inc
push
outsb
jno
xchg
mov
cmp
gs
imul
cld
xor
shlb
aaa
or
js
jne
inc
inc
fwait
addl
or
shrb
sub
mov
fnsave
insb
loope
dec
xchg
jg
sbb
pop
jg
pop
cmp
cmp
push
pusha
xchg
dec
or
push
in
adc
or
sub
inc
sbb
sbb
call
push
add
mov
icebp
jl
sbb
aad
mov
xor
mov
out
es
sti
sub
aas
add
fwait
jo
fstps
gs
xor
sar
mov
mov
xor
push
mov
cmp
jecxz
fsts
out
ss
dec
fwait
jb
leave
mov
mov
shll
lret
add
mov
inc
add
popa
dec
and
sbb
flds
je
or
notl
lahf
out
jle
cmp
out
fstpt
test
scas
pusha
push
mov
mov
mov
lock
addr16
cmpsl
iret
aas
scas
push
mov
popf
mov
push
fwait
xchg
sbbb
mov
sbb
dec
mov
lret
jg
cmpsl
pop
lret
sub
lods
mov
sahf
push
mov
jle
sti
xchg
out
push
imul
scas
push
not
sbb
jle
sbb
pop
nop
sub
xchg
sub
pop
lcall
and
adc
mov
arpl
loopne
sub
mov
shll
adc
loop
lods
sti
mulb
into
add
jmp
and
pop
pop
loop
fisttpll
fistpll
ja
movsb
xor
jae
mov
push
mov
xchg
cmp
sbb
pusha
or
sbb
add
mull
pop
inc
sahf
shrb
xor
mov
scas
jge
adc
cwtl
imul
and
aas
notb
repnz
push
push
mov
jno
inc
push
das
push
loop
mov
or
aaa
push
mov
inc
inc
xor
and
dec
lock
mov
mov
out
stos
aas
popl
mov
arpl
cli
sbb
in
inc
inc
call
mov
jg
push
or
cld
cwtl
movsl
repz
scas
ja
pusha
jns
test
in
imul
inc
je
rolb
mov
enter
fcmovnbe
xchg
fcmovnb
jne
repnz
lock
sub
iret
xchg
ds
xor
xor
cmc
push
test
xchg
xchg
adc
add
popf
sbb
dec
sub
sahf
mov
sti
fimull
pop
adc
cmp
fisubrl
filds
orb
wbinvd
push
dec
mov
dec
mov
sarl
pop
hlt
adc
movsb
loop
cwtl
push
xchg
pop
insl
pusha
negl
mov
sub
cmc
push
fs
roll
cs
iret
inc
and
stos
shl
and
xorl
mov
sbb
jnp
call
add
loope
pop
and
mov
pop
add
jne
scas
jnp
jmp
mov
and
stos
jmp
les
cmp
test
out
mov
cmp
cs
dec
int
daa
and
inc
cmp
add
sub
and
in
cmpsl
cli
scas
in
mov
mov
int3
push
repnz
sar
push
sbb
imul
int3
shl
mov
push
jecxz
push
ja
arpl
or
into
xchg
mov
dec
insb
popa
adcb
pop
fidivs
cmp
cmp
cld
mov
add
xchg
or
mov
xchg
pop
mov
jae
pop
shll
adc
rcrw
pop
inc
mov
jl
push
test
pop
adc
xchg
mov
pop
push
xchg
mov
pop
xchg
adc
sahf
xchg
add
and
mov
xchg
jns
lods
daa
sub
call
jo
inc
mov
rol
fcmovne
and
mov
adc
std
mov
mov
mov
into
mov
xchg
mov
xchg
and
xlat
nop
icebp
insb
mov
adc
pop
popf
mov
sub
adc
int3
xorl
jecxz
pop
dec
sbb
and
adc
push
leave
mov
cmp
cmp
inc
pop
mov
or
insl
rcll
pop
push
pusha
sub
sub
jle
push
lods
repz
sub
mov
mov
and
adcl
cmp
inc
stc
cmp
mov
lss
jne
aam
fistps
sub
enter
jns
mov
and
lret
push
and
shlb
pusha
jg
subl
jns
lahf
loopne
rolb
jbe
ds
fdivl
pop
cmc
clc
xlat
sbb
mov
mov
jmp
lock
cmp
imul
shll
out
jle
ret
lods
push
stos
movsl
pop
inc
jns
and
aaa
loop
sub
dec
pop
mov
jae
lock
sub
pop
repnz
xor
inc
adc
popa
iret
xor
inc
je
mov
rcll
stos
cmpsb
psubusw
push
cli
xchg
mov
pop
xchg
call
inc
dec
cld
sarb
mov
mov
or
sbb
int
scas
int
cmp
cwtl
mov
hlt
mov
and
jmp
popa
popa
std
in
addb
inc
adc
push
dec
jbe
sub
xor
sbb
inc
xchg
cmc
push
sahf
hlt
dec
and
mov
and
mov
outsb
test
dec
inc
out
pop
cmpsl
sarl
out
mov
fs
fidivs
mov
mov
and
popf
aaa
cmpsl
mov
dec
jnp
aad
ret
jecxz
push
push
xlat
push
bound
addb
out
cmc
roll
xchg
xchg
arpl
add
ret
or
cs
jp
jns
lret
stc
adc
mov
rcll
or
xor
pop
mov
fdivrl
jnp
ss
mov
and
sbb
cmp
xchg
or
mov
xchg
pop
jns
jle
enter
cmc
dec
jbe
mov
cwtl
jle
das
fwait
inc
dec
rorb
scas
fdivp
aad
cmp
loop
lret
arpl
imul
aad
xor
ror
adc
push
enter
movsb
pop
ror
rcr
out
stos
jnp
pop
repz
cs
jb
xor
inc
inc
cli
xor
outsb
push
mov
xor
adc
jno
cmp
outsb
lock
jno
mov
add
push
push
out
xor
mov
scas
out
dec
or
jge
data16
pusha
lods
fstpl
inc
pop
jmp
in
or
mov
mov
pop
pop
cmp
jl
cmpl
cmp
hlt
bound
xchg
sub
test
sbb
mov
cltd
fidivs
iret
test
cmp
mov
jb
ret
ret
fnsave
mov
jnp
mov
mov
repz
notb
pop
sub
cmp
or
adc
mov
pop
pop
inc
jmp
sub
sub
mov
addr16
mov
fisubrs
adc
data16
fwait
inc
in
xchg
fmul
and
sahf
inc
fwait
sti
mov
test
jno
mov
jbe
adc
stos
cmp
mov
pop
insb
lcall
stos
rclb
mov
mov
lds
cmpsl
pop
test
dec
cmp
and
or
shrl
ja
pusha
das
mov
int
imul
sub
jb
cli
jno
pushf
lahf
push
xor
push
fiadds
inc
add
jg
ljmp
mov
cmp
pop
in
push
jle
aaa
je
add
mov
mov
sub
mov
in
ficomps
xor
mov
push
push
gs
add
fsubl
cmpsb
stos
push
jno
push
and
filds
test
loope
sbb
lahf
pop
es
hlt
jae
fcompl
mov
lret
les
arpl
movsb
and
repnz
out
xchg
js
aad
and
ficomps
dec
insl
and
pusha
hlt
gs
adc
cmp
ret
data16
or
jae
mov
xor
sub
adc
sbb
enter
sub
insl
cmc
xchg
setae
les
sub
push
mov
negb
ss
jge
fimuls
rcrb
ljmp
jp
mov
cmpsb
arpl
mov
push
jmp
sti
inc
xor
outsb
xchg
js
fildll
jle
mov
jmp
outsb
scas
popf
test
lcall
rol
fists
testl
iret
xchg
add
std
push
cld
adc
mov
push
imul
add
push
and
mov
cmp
inc
ds
adc
fcomp
cltd
pop
jmp
std
movsl
xchg
insl
xor
mov
lods
addr16
push
and
subl
jge
dec
repz
mov
movsb
pop
or
out
sbb
mov
outsb
jp
dec
stos
mov
in
insb
movsb
jle
sbb
cmp
out
inc
in
xchg
shlb
sahf
cld
sub
xchg
xor
shlb
jmp
jmp
mov
mov
adc
lahf
inc
fmull
stc
push
cltd
dec
adc
or
out
push
mov
jno
pop
sbb
in
loope
clc
lret
ror
fadds
xor
push
movsb
cmp
jae
repz
jnp
pop
adc
out
in
in
pop
or
js
jne
adc
sbb
jg
jb
dec
arpl
xchg
test
int
push
iret
jo
jns
sbb
rorl
push
add
xchg
or
mov
outsb
test
sbb
jbe
ds
xchg
mov
cmp
jp
push
xchg
adc
lods
jge
out
mov
mov
sub
mov
rclb
mov
adc
loopne
es
adc
fcompl
mov
dec
hlt
cltd
fistl
ss
inc
movsb
inc
sbbl
inc
mov
push
add
mov
and
cltd
jb
clc
in
pop
and
and
rcr
adc
or
xchg
imul
jb
or
nop
dec
shrl
or
outsl
jmp
pusha
xchg
pop
fcompl
or
or
cmpsb
mov
pop
in
out
bound
pop
cmp
or
pushl
jo
or
imul
aas
xchg
pushf
push
pushf
jno
jns
aas
add
mov
lock
add
mov
lret
inc
mov
mov
js
dec
dec
push
insb
ss
sub
sbb
das
notb
arpl
arpl
dec
inc
jle
jecxz
sbb
mov
pop
push
shrb
dec
loopne
jb
rcrl
rolb
aas
jmp
clc
pop
jp
mov
test
sbb
xor
jge
int3
sbb
pop
inc
jno
dec
push
mov
daa
sbb
lea
push
imul
mov
inc
cmpl
shlb
sbb
out
push
jmp
and
popa
shr
test
fildll
jno
pop
xor
test
and
or
pop
cs
jmp
fsub
lcall
push
bnd
add
mov
mov
cli
mov
push
xchg
test
inc
pop
scas
mov
or
cli
inc
in
mov
lock
aad
sbb
movsb
mov
cs
pop
loop
dec
data16
dec
fucomip
push
outsb
adc
hlt
mov
jecxz
xchg
xor
xchg
pop
cmp
in
jo
fwait
cwtl
jno
pop
loope
aam
fmull
mov
sbb
jle
push
inc
cmpsb
icebp
fwait
pop
fdivp
push
loop
cli
xchg
je
jbe
cld
cmp
fcmovnu
jmp
mov
mov
aad
nop
xchg
ret
adc
outsb
enter
sahf
mov
dec
xor
in
icebp
icebp
jecxz
jne
ds
rolb
mov
and
mov
sub
pop
sub
iret
out
xor
enter
js
inc
imul
ror
js
and
repz
sub
out
push
push
insw
or
xor
popa
test
lds
out
loope
pop
cmp
and
push
lock
and
lcall
or
xor
jne
dec
pusha
sahf
stc
aas
push
std
jp
sbb
les
xlat
lods
mov
aad
enter
mov
frstor
sbb
enter
mov
jg
xchg
lret
adc
nop
mov
push
and
and
jae
je
and
push
pop
psadbw
push
mov
mov
cmp
mov
jae
pop
mov
cmp
ljmp
pop
outsb
mov
ja
test
inc
frstor
test
daa
in
rcl
or
dec
in
and
mov
cmp
pop
cmpsl
mov
arpl
mov
or
mov
and
repnz
ja
lods
gs
mov
je
jo
xchg
test
sarl
pop
fimuls
or
flds
pop
lret
pop
cmp
or
cmp
jne
popa
dec
divl
cwtl
mov
xchg
sahf
lock
call
sub
inc
in
popa
fmul
inc
jns
push
mov
fmuls
addr16
and
movsl
mov
mov
xchg
int3
dec
outsb
test
andb
inc
fistps
icebp
pop
stos
mov
xor
xor
ja
jnp
jns
mov
imul
shrl
add
add
push
fs
outsl
pusha
lcall
inc
lcall
inc
in
fcoml
sarb
aaa
pop
cmpsb
jle
jmp
mov
cmp
nop
push
mov
add
sahf
popf
cmp
leave
mov
dec
mov
shll
cld
shll
mov
fsubrl
push
leave
call
incl
shrl
icebp
in
lret
pop
inc
cmp
push
shl
outsb
stos
mov
ss
test
jg
repnz
xchg
divb
les
scas
fcoms
int
outsb
xor
xchg
and
adc
inc
out
in
test
jne
in
jmp
xchg
rolb
sub
inc
mov
xor
leave
xchg
mov
loope
sub
xchg
add
fidivl
cmc
cs
mov
sbb
les
stos
daa
test
cwtl
aam
lret
addb
mov
jecxz
or
cwtl
inc
cld
pop
and
rcl
sbb
push
insb
xchg
imul
ja
scas
dec
jge
push
icebp
pusha
jns
xchg
nop
mov
ret
adc
stos
add
popf
aaa
mov
pop
cli
std
sub
frstor
in
mov
lcall
mov
std
sarl
repnz
mov
cwtl
fistpll
movd
add
insl
xchg
icebp
movsl
dec
add
sbb
lret
push
pop
or
scas
push
push
out
out
and
js
mov
mov
adc
movsb
movsb
push
push
dec
lods
divl
xchg
jp
repz
jl
imul
icebp
xchg
cmp
push
and
xchg
out
stos
mov
mov
mov
sbb
fbld
mov
loopne
lret
mov
ds
inc
shlb
je
push
stos
mov
outsb
jge
jo
cmpsl
hlt
mov
jl
adc
jne
add
jecxz
push
jle
repnz
cld
cmc
add
pcmpgtw
lock
in
test
jbe
pop
int3
cmp
dec
pop
ret
fcoml
loope
rorb
sub
loope
cmpsb
add
icebp
and
push
enter
push
pop
loop
aaa
inc
or
bound
outsb
jp
ljmp
xchg
add
aad
push
or
dec
xchg
fs
sti
lods
jb
jg
push
notl
jbe
cmp
lock
pop
adc
xorl
jl
stos
adc
jbe
mov
cs
cmpsl
idiv
mov
and
stc
jne
push
cmc
pop
mov
arpl
jp
sti
pop
inc
sbb
icebp
pop
xchg
out
rorl
stos
or
sub
mov
cmp
adc
mov
jo
or
and
int3
outsb
inc
loope
mov
or
pusha
xlat
and
cmpsl
push
int3
or
add
push
mov
inc
cld
ja
pop
test
mulb
cld
mov
jmp
pop
inc
push
cli
stc
push
xor
add
js
mov
push
push
loop
push
xchg
fwait
ds
jb
loop
into
int
xor
inc
xor
cmp
xchg
loop
subl
dec
les
lock
outsl
or
xor
inc
dec
aaa
xlat
lods
and
in
sbb
rcl
cmpsb
inc
frstor
movsb
inc
mov
cmovnp
push
int3
mov
cmp
sbb
daa
adc
test
jno
mov
roll
rcrl
aad
stos
xor
inc
sub
dec
sbb
mov
inc
inc
das
fs
daa
mov
stos
xor
aaa
cmp
stos
pop
fisttpll
sub
ljmp
dec
and
lcall
mov
rcll
bound
in
stc
jecxz
hlt
ljmp
push
lock
btr
stos
dec
dec
mov
fld
push
cli
clc
adc
sbb
es
sbb
xlat
icebp
xchg
xchg
fiaddl
cwtl
xor
clc
xor
fs
pop
loop
mov
sbb
setbe
into
aad
aam
inc
adc
push
xor
sub
cmp
js
cmp
pop
popf
mov
out
adc
stc
sbb
xchg
pop
cmp
repnz
cmp
out
xchg
jne
int
in
add
les
clc
repz
mov
push
mov
xchg
xchg
jmp
dec
sti
xchg
aad
sub
pop
pop
xor
dec
insl
fimuls
push
sbb
cmc
cmp
inc
inc
cld
call
mov
mov
mov
notl
lds
pushf
mov
or
and
jge
xor
aam
movsb
mov
adc
dec
fisubrl
imul
les
out
dec
or
and
push
inc
or
fidivrs
push
jecxz
push
imul
popf
les
pop
movsb
or
mov
jns
ret
iret
inc
out
push
fldenv
fucom
sub
sbb
hlt
stc
out
jp
lret
add
jnp
jmp
mov
scas
sarb
mov
rcrl
fldl
test
xchg
sub
mov
sub
ss
xchg
mov
fcomps
pop
fcomps
xchg
mov
outsb
cltd
xor
push
jns
repz
insb
jno
jp
mov
mov
les
lret
pushf
fs
or
xchg
mov
jg
subb
popf
pop
mov
das
jecxz
mov
aad
push
cmpsb
sbb
sub
inc
mov
mov
arpl
mov
out
mov
aam
mov
insl
sub
pop
mov
pop
fiaddl
adc
dec
xchg
arpl
mov
mov
aad
movsb
gs
bt
mov
xor
test
shrl
dec
lret
adc
pop
cld
pusha
push
inc
push
xchg
mov
lock
mov
aas
leave
xchg
xorl
and
mov
pop
loop
shlb
int
inc
push
or
mov
popa
repnz
fistpll
and
xor
aad
mov
mov
mov
jmp
lret
outsb
inc
push
lret
dec
push
inc
aad
mov
cmp
mov
add
pop
push
jns
and
dec
pop
imul
sti
mov
or
cmc
stos
out
inc
stos
iret
mov
out
push
cltd
test
sub
jb
rclb
add
inc
cmp
stc
js
cmpsb
xor
xlat
inc
dec
add
sbb
add
arpl
cs
xchg
movsl
push
pop
nop
push
dec
cmp
jmp
movsb
dec
stos
fwait
sub
push
jecxz
sub
in
jo
push
lock
xchg
xchg
jle
cmpsl
icebp
movsb
fidivs
dec
xchg
add
das
add
jmp
pop
or
sbb
lods
xchg
loopne
add
pop
inc
cmp
int3
jno
lock
jmp
xchg
sub
pushf
pusha
add
fsincos
ds
pusha
and
mov
mov
out
shll
inc
sub
mov
ror
xor
int
scas
roll
enter
pop
pop
mov
bound
sub
cs
out
in
jno
jge
arpl
fildll
test
clc
ret
outsb
push
xchg
test
sbb
jno
sub
mov
add
sti
cmp
les
stc
xchg
gs
rclb
pop
loopne
aaa
pop
xchg
mov
faddl
or
hlt
jo
pop
or
js
in
push
adc
adcl
xor
jge
push
pcmpeqd
sbbl
mov
sub
sbb
jge
or
mov
call
sub
cmpsl
das
or
sahf
das
cmpsb
sti
arpl
push
pop
cmp
sbb
out
or
mov
pushf
stc
sbb
sti
cmp
xchg
jg
mov
pop
je
icebp
sbb
ds
out
shll
pop
and
adc
popa
sti
sbb
and
mov
jo
fucomi
mov
push
sarb
insl
cmp
psubq
scas
xorl
xchg
mov
mov
mov
adc
pop
adc
mov
insl
sub
push
lods
pop
nop
cmp
xchg
sbb
cltd
pop
maskmovq
idivl
ja
dec
adc
mov
rorl
inc
xchg
fwait
push
jo
test
jae
cltd
popf
jbe
loopne
and
cld
int
push
fldl
addr16
sub
shll
jno
xor
bound
and
push
insb
sub
test
sub
xchg
push
jg
dec
cmpsl
mov
dec
mov
xlat
stos
and
in
ljmp
scas
dec
rcl
imul
dec
and
add
ret
arpl
loopne
dec
test
cmp
out
andl
out
ljmp
jp
add
cs
pop
ret
dec
mov
or
outsb
shrb
adc
adc
in
hlt
int3
pop
jbe
sub
lods
sub
mov
loop
es
sub
sbb
cwtl
inc
dec
cmp
ss
scas
cwtl
rclb
stos
mov
sarl
bound
aam
adc
cmp
icebp
sbb
xor
pop
jl
rcrl
sbb
and
sub
loopne
add
icebp
ljmp
pop
test
negl
ss
pop
jne
or
and
test
testl
mov
je
data16
push
outsl
pusha
js
xchg
addr16
adc
stos
negl
or
js
cltd
xlat
repz
je
leave
mov
outsb
frstor
test
inc
cmp
arpl
push
lret
int
mov
jmp
pop
lock
out
dec
or
mov
imul
insl
sbb
test
or
jecxz
push
mov
push
out
ret
pusha
pop
repnz
aas
xchg
aas
mov
rcr
and
cmpsl
jno
mov
std
xor
adc
mov
xchg
mov
pop
pop
mov
adc
rcrl
and
setno
add
add
xor
cmp
mov
jae,pt
aad
dec
mov
dec
mov
push
mov
sbb
fcomps
push
push
and
cmpsl
ja
dec
or
addr16
mov
lahf
popf
push
add
icebp
mov
push
popa
mov
add
imul
adcl
mov
stos
push
mov
jge
imul
es
and
jns
ret
push
pop
mov
adc
pop
call
and
mov
mov
xchg
ret
lret
pusha
scas
das
xor
fdivrs
xor
inc
xchg
pushf
mov
mov
ret
xchg
jg
xchg
stos
add
mov
and
std
or
arpl
rorb
cmp
push
jl
sub
xchg
and
inc
xchg
rolb
sbb
sbb
jp
push
cmp
ret
dec
mov
je
les
lahf
cmp
shrb
xor
sub
cmpsl
add
xor
ja
adc
mov
lret
pop
mov
test
jmp
push
inc
daa
out
jge
mov
dec
stc
repnz
lret
scas
dec
push
and
popa
imul
in
andb
lds
xchg
das
out
ds
jae
jp
cmpsb
pop
loopne
dec
icebp
add
cmpsb
mov
xchg
add
xchg
lcall
mov
lahf
add
shll
fistpll
xchg
pop
cwtl
into
push
sub
fstl
mov
xchg
lock
push
dec
pop
or
xchg
push
inc
xchg
sbbb
mov
push
dec
fisubs
xor
scas
adc
adc
push
mov
repz
xchg
in
jns
jbe
imul
fiaddl
lcall
xchg
cmpsb
shlb
scas
sbb
pop
cwtl
push
or
js
je
cli
das
and
in
insl
pop
sub
push
jnp
mov
mov
xchg
fwait
xlat
das
aad
std
pop
lret
out
mov
adc
adc
int
insb
dec
xor
push
inc
inc
sti
in
xor
pop
and
imul
xlat
push
out
imul
fwait
jp
mov
push
mov
test
cli
iret
stos
gs
inc
xor
sbb
ljmp
fs
sbb
addr16
lods
insl
and
xchg
lcall
lcall
loopne
cmc
inc
pop
jle
sub
dec
out
js
dec
stos
fldl
cmpsl
pop
mov
int
mov
lods
pop
mov
or
jle
out
into
push
int3
jne
and
movsb
mov
and
fcoml
inc
jbe
pusha
movsb
push
jmp
mov
pop
aaa
xor
pop
push
ficomps
or
pop
jns
jp
sub
fdiv
fs
dec
push
dec
shrb
jmp
out
push
inc
rorl
sub
cs
out
jg
nop
insb
addr16
subl
mov
sarb
pushf
cmp
outsl
jns
and
adc
cmp
mov
push
xor
aaa
dec
popa
ljmp
mov
or
sbb
inc
adc
jge
ret
cs
sti
inc
pop
fnstcw
jg
out
les
xor
cmp
dec
add
mov
pop
lds
sbbb
stos
movsb
push
and
mov
les
shr
inc
xchg
loope
rcr
aaa
ds
pusha
dec
repnz
popf
das
lods
adc
iret
pop
imulb
loopne
nop
cmc
pop
add
pop
sbb
inc
call
mov
imul
jne
aas
lret
js
add
jns
inc
loop
mov
mov
mov
cmp
fildl
jecxz
out
fwait
sbb
notb
dec
mov
dec
sub
mov
cwtl
lahf
test
pusha
add
out
ds
into
lahf
aaa
jmp
cmp
lcall
cltd
push
fcomps
mov
mov
orb
add
and
xchg
std
jl
xchg
dec
dec
inc
jb
jae
jno
movsl
pop
adc
pop
insb
sbb
sub
sub
add
dec
push
and
push
push
mov
aas
adc
dec
xchg
int
fcomp
xor
jae
lahf
mov
or
pop
sbb
arpl
inc
nop
mov
xor
cmp
dec
loop
xorl
and
and
dec
push
loop
lock
and
outsl
cmp
divl
cmpsl
cld
mov
outsb
push
fs
and
add
or
sub
sahf
out
imul
stos
xchg
mov
sbb
or
ficomps
mov
mov
icebp
pushf
repnz
push
fdivl
loopne
or
pusha
nop
insb
lock
aam
test
pop
push
mov
mov
in
dec
lcall
gs
xlat
jo
scas
test
aam
push
loopne
mov
cmc
arpl
mov
sbb
cmp
mov
lods
js
jecxz
sti
das
inc
xchg
mov
adc
pop
jmp
adc
sti
pop
fsub
popa
add
sti
faddl
mov
mov
aam
hlt
pop
ds
dec
loop
in
jne
push
sub
ret
push
xchg
and
hlt
pop
xor
icebp
subl
repz
shll
loop
or
lahf
ret
fsubl
jp
mov
sub
xchg
mov
clc
and
aaa
mov
inc
imul
fdivl
subl
inc
cmp
jns
and
lahf
mov
cs
xchg
mov
fs
hlt
mov
pop
xchg
pop
int3
nop
sbb
out
mov
aaa
loope
fcoml
and
enter
out
lods
pop
mov
popa
push
into
cmp
pop
repz
mov
inc
repz
sub
lahf
mov
xchg
push
pxor
jne
jbe
push
xor
pop
pop
xorb
out
es
sub
gs
loopne
add
pop
in
pop
out
ret
out
clc
sbb
push
imul
mov
movsl
push
fnstenv
jl
aam
jmp
fstpl
pop
xchg
mov
test
shl
add
addl
sub
in
outsl
aad
outsl
jp
add
test
mov
mov
outsl
pushf
mov
sbb
add
loope
add
push
loope
flds
xchg
mov
xor
movsb
adc
out
jo
dec
inc
lea
inc
cmp
dec
sub
mov
fwait
cmp
jnp
ret
cltd
cmp
xor
sbb
aam
xor
mov
movsl
xchg
or
mov
aam
xchg
push
cmp
mov
add
cmpb
cmpsl
jbe
or
fadds
push
adc
adc
int3
iret
pop
adc
fcompl
ror
mov
mov
sar
iretw
dec
jmp
jl
inc
sbb
fisubrs
dec
lods
lcall
mov
orl
lods
out
scas
and
out
cmp
fmul
sbb
pop
xchg
aad
pop
rorl
cmp
nop
iret
mov
sbb
scas
out
leave
js
cmp
or
pop
fnstsw
or
les
enter
mov
lock
jnp
in
push
cmp
popl
sub
sahf
scas
jmp
pop
sub
pop
aam
rcr
fnstcw
inc
call
mov
mov
lcall
jno
mov
mov
int
outsb
xchg
push
sub
inc
push
nop
mov
dec
ret
jmp
stc
xlat
jg
fcoml
inc
xchg
add
adc
mov
adc
mov
cltd
int3
or
dec
jp
jnp
std
dec
nop
pop
or
bound
jae
or
imul
xchg
cld
sub
xorl
inc
jne
mov
pop
xchg
cld
stos
and
and
fiaddl
or
or
icebp
addr16
xor
and
jae
rol
inc
mov
sbb
mov
das
not
outsl
sub
shl
cmp
das
test
push
outsl
aaa
mov
adc
inc
ret
mov
insl
and
outsb
jno
ds
xor
adc
xor
mov
mov
sub
adc
arpl
addr16
jge
cmc
lock
pop
jbe
loope
stc
or
les
push
sbb
sarl
inc
or
popf
das
mov
adc
xor
negl
xchg
push
loop
popa
inc
inc
mov
push
pop
inc
dec
or
mov
mov
pop
xchg
adc
call
push
sbb
mov
push
jp
loopne
movhps
out
int3
pop
mov
mov
push
jle
mov
dec
pop
and
arpl
add
into
sub
sahf
cmp
mov
adc
adc
mov
inc
movsl
pop
jp
and
clc
and
lret
jns
lahf
fwait
mov
cltd
xchg
cs
add
jmp
adc
dec
insl
imul
mov
xchg
xor
cmc
cmp
pop
stc
outsb
or
mov
lock
adc
lret
out
lock
in
pusha
add
sahf
dec
std
cmc
test
sarl
data16
fwait
sub
xor
pop
xor
push
lahf
and
lcall
push
mov
aas
movsl
cmpsl
xchg
sti
rcpps
std
fsts
push
test
push
adc
add
das
sbb
sub
jnp
xor
or
insl
out
cmp
lcall
lret
sub
addb
stos
pop
adc
ljmp
and
push
adc
roll
andb
jne
and
jbe
adc
scas
in
test
xchg
lret
mov
bound
test
add
dec
mov
mov
sbb
cld
test
aaa
pop
cld
aam
rcrl
dec
outsl
loope
test
push
xchg
fwait
into
fprem
dec
mov
out
and
pop
jecxz
cmpsb
cli
outsl
je
cmp
dec
outsb
pop
mov
test
sub
cld
mov
fimuls
test
inc
lods
idivb
out
sub
sahf
imul
mov
cli
mov
dec
iret
add
test
push
mov
pushfw
pop
loop
dec
in
add
movsb
add
pop
cwtl
addr16
pop
inc
shll
or
push
fiaddl
or
repnz
frstor
push
test
xchg
pop
mov
push
jo
lods
out
sbbl
pushf
outsb
pop
int
jl
pop
test
pushfw
popa
fiadds
dec
dec
mov
push
jle
outsl
loope
shll
push
ds
pop
dec
insl
jge
jecxz
add
shl
add
jno
in
dec
mulb
in
enter
sub
sub
popf
enter
and
push
inc
xor
out
push
popf
daa
aam
cmp
daa
xor
jmp
subb
inc
add
cli
lcall
out
pusha
jecxz
mov
imul
xchg
faddl
mov
sbb
or
mov
cmpsb
push
cmpsb
cli
stos
push
imul
xor
pop
leave
mov
pop
clc
pop
xor
sbb
jnp
loopne
mov
cmpsl
mov
andb
int3
push
fs
mov
in
mov
push
adc
and
push
test
inc
pop
pop
fwait
pop
rolb
jmp
push
iret
std
je
mov
cmp
fists
aam
xor
push
inc
or
fildl
adc
imul
jns
rcll
xchg
enter
sub
dec
jg
je
imulb
and
sub
pop
out
mov
mov
push
mov
cmp
push
idiv
push
sub
rcrl
int3
mov
rolb
or
inc
loopne
fnsave
clc
xchg
lods
or
mov
adc
xlat
xchg
mov
int
jecxz
arpl
rol
sbbl
or
jnp
popf
fildll
cli
aam
fnstsw
mov
mov
dec
test
xchg
jb
jecxz
xor
rorb
adc
sti
in
js
add
xchg
ret
mov
jmp
aas
fstps
divl
jecxz
test
loope
cld
mov
pop
ds
shr
xchg
cmpl
addr16
fs
or
pop
stos
adcb
mov
jecxz
or
stos
pop
in
jp
inc
mov
push
call
roll
and
lods
inc
adc
in
or
jb,pt
repz
insl
shlb
pop
cli
js
adcb
fcmovbe
test
xchg
xor
outsl
clc
xorl
cmp
xchg
cwtl
movsb
ss
lret
std
ficomps
lods
xchg
xor
stos
aad
test
xchg
mov
outsl
mov
mov
mov
and
xlat
data16
aad
jno
xchg
adc
lea
add
fcompl
mov
dec
adc
adc
stos
inc
cmp
test
fidivrl
sbb
pop
iret
bound
push
scas
cld
mov
jo
lods
lret
pusha
popa
orb
pop
arpl
enter
inc
cmpsl
mov
pop
sub
loope
or
std
jp
dec
cltd
inc
inc
lret
ja
pusha
fnstsw
nop
push
mov
lods
sbb
lcall
inc
outsl
inc
inc
jne
in
hlt
daa
xor
pusha
addr16
stc
inc
jns
push
shr
aaa
xlat
fsubrs
ja
xchg
xor
mov
nop
inc
les
push
pop
or
and
pop
push
in
dec
mov
xchg
aaa
pushf
dec
mov
clc
fcomi
pop
addr16
pop
lret
lret
in
jo
test
add
xor
iret
sub
test
push
mov
xchg
iret
or
fs
mov
cmp
mov
dec
ja
sbb
push
cmp
rclb
dec
mov
iret
mov
and
imul
cmc
ret
cmp
orl
xor
mov
push
pop
pusha
stos
ffree
mov
dec
xchg
test
and
and
xchg
movsb
mov
add
mov
cld
add
in
push
popf
enter
icebp
rcr
xor
ret
jns,pn
cltd
stos
push
cmp
push
pusha
push
not
ds
out
adc
rorb
pop
mov
out
popa
dec
and
jns
ljmp
inc
mov
jbe
xor
es
pop
sub
xchg
pop
fimull
xlat
jnp
or
xchg
pop
adc
aad
loopne
lret
data16
popf
pop
push
rolb
test
imul
sbb
mov
subl
ret
hlt
fstl
jnp
mov
xchg
ljmp
ret
mov
hlt
lds
inc
and
mov
push
icebp
jle
push
pop
dec
inc
jb
mov
lods
xchg
lods
dec
in
rep
jmp
movsb
loop
inc
orb
sbb
addb
mov
mov
push
adc
or
pop
or
nop
subl
sbb
mov
out
mov
jmp
rcrl
adc
push
mov
push
sti
clc
xor
je
and
cmpsl
sbb
add
xchg
rolb
jmp
add
jnp
icebp
je
popa
pop
and
fldcw
and
loopne
pop
clc
xor
bound
stos
dec
xchg
dec
mov
adc
lret
ljmp
sti
insb
xor
mov
scas
js
pop
std
shlb
pusha
push
inc
test
jp
mov
xchg
movaps
mov
jbe,pt
jo
les
cmpsl
fimull
jnp
int
add
adc
dec
sub
and
incl
or
jge
loopne
adc
adc
sbb
stos
js
popf
pop
lret
andl
jb
das
shrb
pop
mov
xchg
dec
xchg
aaa
inc
iret
pop
or
mov
mov
ret
and
mov
inc
jno
mov
cmpsb
add
sahf
and
bound
pop
rorb
or
pop
xchg
aad
ja
add
inc
pushf
xchg
pushf
imul
ret
xlat
or
nop
into
das
jo
ja
int3
in
or
add
in
push
or
jmp
mov
mov
gs
ret
xchg
outsb
stos
aaa
in
out
xor
lret
pop
pushf
inc
push
push
jecxz
ljmp
mov
sbb
cmp
pop
jmp
fidivrs
lret
push
jg
inc
ja
enter
push
push
sub
insl
xlat
std
fcmovu
insl
sub
sub
add
ja
lods
in
inc
pop
lcall
mov
mov
cli
inc
mov
dec
popf
fmul
lret
jmp
add
out
add
push
mov
and
stos
stos
sbb
and
es
test
ret
xchg
pop
ja
rcll
push
mov
pop
push
iret
and
outsl
push
mov
lds
mov
xor
sbb
cmp
call
sbb
dec
pusha
popf
test
push
adc
data16
imul
loop
mov
pusha
push
scas
mov
pusha
lods
stc
loopne
fisubl
es
loope
clc
mov
ss
mov
out
xchg
and
dec
roll
dec
adcl
mov
lea
ljmp
js
jns
xor
jnp
cmpsl
mov
adcb
xchg
fldenv
pop
add
xlat
in
dec
push
push
aad
xchg
shrl
and
cs
lea
mov
mov
add
scas
xor
sarb
add
mov
cmp
lret
fcoms
inc
mulb
aam
lcall
aaa
jb
push
push
sti
or
pop
add
xor
cmp
cmp
ficompl
dec
jnp
cs
mov
adc
rol
xorb
cmp
testl
mov
rclb
or
sub
adc
cmp
std
xchg
hlt
xchg
xchg
xor
sti
dec
test
loopne
and
jo
jle
xchg
dec
fwait
mov
or
icebp
aam
movsl
sub
pop
push
dec
push
insl
sbb
sbb
mov
push
subl
or
jmp
daa
cmc
cmpsb
push
imul
adc
cs
out
hlt
mov
jns
jl
adc
add
or
mov
xlat
cmp
mov
sub
fcoml
sbb
cmp
add
xchg
push
shl
sbb
bound
dec
sub
adc
xor
stos
loope
fs
sub
cmp
adc
mov
sbb
aaa
xchg
ds
insl
xchg
inc
mov
test
or
shll
ja
fs
shl
jbe
or
mov
mov
mov
xor
addr16
popf
imul
bound
dec
inc
pop
or
cmpsl
je
insl
or
mov
xchg
fs
jle
out
sub
je
mov
sub
nop
inc
shll
fbstp
pop
add
sub
add
sbb
mov
pop
cmp
sub
push
sub
push
in
lods
sub
or
jbe
mov
daa
push
das
jecxz
cmp
and
pop
sbb
movsl
popa
add
add
cmp
test
movsl
inc
fsubrs
cmpsl
or
lock
xor
in
cmp
mov
pop
mov
mov
inc
fidivs
outsb
xchg
pop
mov
or
and
test
daa
mov
jbe
pop
and
jmp
xchg
sti
jg
out
mov
inc
xchg
lret
nop
test
arpl
jmp
xchg
jmp
cmp
or
adc
lods
call
xor
adc
jmp
stc
or
pop
loop
mov
jp
and
push
ret
sub
sbb
inc
xchg
out
js
push
fwait
xchg
sub
dec
mov
add
add
mov
jle
jae
mov
scas
cs
mov
push
or
push
mov
test
insl
pop
aas
inc
popa
lea
xor
mov
or
push
stc
cltd
dec
ja
pop
cmp
popf
cmp
aad
fsubrl
jp
shrl
sub
enter
jecxz
faddl
mov
loope
push
inc
inc
xchg
push
sub
adc
lods
stc
ss
xchg
icebp
nop
mov
enter
mov
pop
lods
ds
push
push
lret
pop
jecxz
mov
ja
shlb
or
mov
cmp
ss
mov
cltd
push
stc
gs
pop
mov
hlt
test
movsl
inc
dec
mov
das
in
mov
out
dec
mov
inc
sar
jb
add
inc
push
fdivp
mov
insb
fidivrs
psubusb
popf
cmp
hlt
enter
lcall
cmpsb
cld
fdivrl
mov
or
mov
fldt
lds
sub
or
aam
shrb
xor
pop
adc
in
cmp
xchg
mov
insb
int
ja
jae
dec
arpl
or
sub
jnp
jbe
and
xchg
sti
popa
fucomi
adc
add
push
repz
adc
imul
js
test
popf
sub
enter
jne
repnz
fxtract
xlat
lods
loop
stos
inc
dec
push
lret
xor
insb
pop
lods
sbb
ja
dec
rolb
imul
je
mov
std
sub
les
sbb
std
cmp
dec
xchg
cmpb
dec
inc
inc
sub
dec
movsl
mov
fidivl
sub
lea
jns
xor
xchg
incl
inc
sub
add
test
sub
cmp
pop
pop
das
push
and
cmpsb
leave
or
dec
push
movsl
out
xor
adc
push
mov
mov
sbb
addr16
dec
xor
and
test
or
sub
jne
imul
test
adc
dec
in
adc
cmp
xorb
and
mov
lcallw
jnp
imul
xor
and
out
cmp
lret
mov
jecxz
lcall
sub
mov
xor
movsl
pop
jecxz
mov
add
add
bound
sbb
xchg
hlt
sbb
mov
sub
xor
ja
shrb
adc
and
inc
jbe
xchg
popf
iret
push
xchg
out
je
sub
jmp
fisubrs
mov
dec
sbb
bound
mov
pop
push
data16
adc
inc
mov
add
mov
add
in
test
clc
xlat
test
enter
sbb
jl
xor
into
les
into
ds
scas
mov
xor
fcoms
cld
push
bound
dec
ja
fldenv
outsl
adc
outsl
les
sub
in
fstl
filds
mov
in
call
cmp
sub
inc
xchg
jns
mov
jge
push
mov
mov
nop
and
in
pop
imull
jb
mov
fcmove
xor
add
sti
jbe
movsl
or
out
fwait
mov
adc
jge
and
pop
rcrl
popa
or
push
testb
sbb
icebp
icebp
sbb
mov
pop
cmpsb
orl
push
arpl
outsb
fidivs
xor
cs
push
push
leave
mov
mov
add
sarl
adc
or
mov
fstps
mul
stos
add
inc
sub
sbb
lahf
push
cmp
dec
mov
sete
jbe
repnz
sbb
movsb
jo
xchg
and
js
out
mov
mov
mov
fwait
xchg
mov
out
pop
push
pop
in
mov
imul
xchg
mov
daa
dec
mov
xchg
push
sub
lock
sub
mov
add
inc
stc
mov
insb
jns
add
pop
add
inc
mov
loope
push
out
mov
pop
negl
sub
imul
popf
fwait
in
int3
xor
dec
adc
loop
inc
push
popf
lea
test
push
icebp
stc
sub
xlat
in
xor
insb
jmp
stos
insl
jecxz
sbb
aam
mov
ret
std
fs
aas
das
jecxz
nop
adc
repnz
cmp
dec
adc
inc
mov
or
push
test
mov
shll
jne
lret
lret
arpl
sbb
add
xor
fcmovnu
lock
lea
repnz
subb
mov
and
or
aad
loopne
shl
mov
fucom
sub
push
adc
arpl
in
cmp
in
jmp
ret
mov
loope
jp
xchg
aad
sub
out
cwtl
fsubs
fmull
orl
sbb
imul
mov
mov
pcmpeqd
and
add
push
or
fwait
lss
icebp
icebp
mov
test
fstl
iret
pop
xlat
add
push
push
and
cltd
sub
repz
cmp
push
out
inc
xchg
inc
inc
lds
xchg
je
add
insl
int3
loope
dec
add
inc
xor
std
into
fstl
popa
sbb
mov
dec
imul
jecxz
faddl
rcll
lds
jecxz
push
data16
cmpsb
jns
daa
sbb
cmp
adc
inc
movsb
xlat
mov
push
sub
sub
jmp
popf
inc
adc
push
test
insb
xor
or
filds
xchg
xchg
jle
or
inc
mov
and
xor
inc
mov
ds
mov
jne
into
cli
pop
dec
pop
sahf
or
sbb
aad
jmp
push
push
repz
mov
push
je
sarl
pop
lahf
mov
ja
dec
add
xchg
pop
adc
pop
pop
lret
js
insl
or
xor
ret
jae
add
sub
mov
xchg
inc
jbe
popa
xor
push
in
das
jmp
stc
mov
xchg
ja
or
sbb
lea
arpl
jo
mov
mov
xor
andnps
test
ja
or
fidivrs
outsl
cli
nop
push
shll
dec
jns
cmp
es
cld
aaa
cli
add
cltd
xor
or
mov
imul
inc
cmp
dec
add
dec
jae
add
stos
scas
repz
xor
sub
and
adc
jbe
inc
or
int
jb
shll
inc
push
mov
push
idivb
es
dec
cld
fstpl
sbb
scas
and
cltd
cmpsl
fsubs
in
sub
lahf
add
sub
test
mov
inc
push
mov
pusha
std
xchg
and
rcl
imull
fisubrs
cmpsb
adcb
xchg
adc
rcrb
add
mov
xchg
xor
or
or
scas
cmp
xor
pop
hlt
add
push
std
test
ss
dec
jmp
xor
cwtl
bnd
mov
int3
es
js
les
popl
and
movhlps
call
mov
sbb
mov
test
inc
into
adc
lret
fs
xor
arpl
inc
add
aaa
jbe
jmp
pushf
cld
jg
jmp
dec
xchg
aam
int
shrb
shlb
pop
jo
mov
push
mov
icebp
jmp
push
leave
cli
xor
sub
hlt
mov
rcl
out
sub
xchg
adc
int3
cs
dec
std
inc
iret
test
outsb
movsb
add
add
fcmovbe
insb
mov
jo
mov
sub
mov
ds
sarb
pusha
cmp
aam
jnp
push
or
xchg
ret
sti
or
mov
sahf
inc
xor
mov
imulb
mov
cld
pushf
inc
or
scas
js
and
andb
mov
adc
dec
fisubrs
xor
jecxz
shlb
aam
lret
cmp
sbb
je
frndint
sub
mov
xchg
mov
and
xchg
pop
std
mull
in
fwait
mov
in
sub
nop
or
mov
insb
iret
or
pop
insl
in
fadd
jbe
mov
mov
ljmp
jno
cli
test
jne
and
jmp
call
adc
xchg
fxch
pop
xchg
shrb
or
movsl
ret
mov
adcl
and
pop
popf
add
push
fstpt
pop
pusha
xchg
repz
jg
imul
xchg
mov
jp
add
sbb
add
mov
push
push
jae
inc
movsl
push
push
or
mov
dec
roll
int3
aas
fsubrs
cmp
mov
negb
mov
adc
cs
xchg
jp
mov
and
test
test
or
inc
xor
sbb
cmc
movsl
repz
clc
sub
imul
out
and
dec
pop
enter
jb
adc
inc
test
sbb
fs
dec
es
jno
xchg
push
dec
xchg
dec
mov
mov
insb
bnd
inc
loopne
notb
repz
das
cmpsl
cmpsl
fsubs
mov
xor
or
adc
adc
push
push
call
test
or
pop
ljmp
inc
dec
xor
or
sbb
ds
push
js
sahf
xchg
test
in
aaa
mov
das
aaa
test
ret
sub
mov
icebp
das
xchg
inc
lods
cmp
xchg
sbb
jg
pop
addb
enter
aaa
cmp
shl
cmp
inc
lcall
mov
imul
cmp
dec
and
mov
cs
ss
lret
ret
adc
xor
push
ffree
lods
das
mov
add
sub
add
xor
stc
jecxz
sarb
movsl
ret
jecxz
not
lcall
hlt
hlt
inc
int3
adc
cmp
jle
ds
pop
mov
pusha
jg
lcallw
pop
test
pop
push
imulb
xchg
adc
mov
adc
sbb
cli
or
mov
sbb
sub
adc
lea
movsl
iret
icebp
ja
in
lcall
pop
dec
cmp
pop
js
sbb
shlb
adc
insl
int3
ja
shlb
adc
sub
test
and
enter
ja
xlat
push
daa
fnstenv
js
jle
add
movsb
les
sbb
in
iret
push
add
faddl
jle
fldlg2
add
insl
mov
repnz
jle
push
arpl
aam
mov
push
aam
fdivr
inc
inc
shll
lds
inc
adc
jno
ja
sarb
cmc
lahf
mov
notb
mov
sub
mov
lods
dec
adc
xor
arpl
jns
dec
dec
subb
adc
pushf
mov
int3
xor
jge
lahf
fsubl
outsl
xorb
aaa
enter
mov
fistps
push
jnp
xor
sub
xchg
stc
sbb
push
jno
lcall
fadd
gs
jb
mov
xor
xor
aam
flds
lcall
in
fisttps
lea
or
sub
xchg
or
xchg
das
sbb
dec
outsl
adc
cltd
out
sahf
sarl
or
pop
fs
test
int3
inc
pushf
xchg
repz
and
sbb
sub
or
in
push
ljmp
dec
cmp
js
jmp
sti
add
rcll
mov
mov
jne
pop
xchg
neg
aad
fistpll
ret
cmp
or
shl
jns
in
push
test
cmc
call
adcl
sbb
out
out
dec
or
pop
dec
dec
adc
adc
xchg
adc
inc
rolb
or
inc
loop
sbb
stos
das
ja
ficompl
shl
out
push
dec
lds
inc
and
inc
sub
orb
movsl
inc
mov
fldcw
out
dec
rorb
rorl
lods
popa
test
ss
enter
add
jg
inc
jno
or
mov
mull
dec
pop
dec
adc
push
les
push
mov
sbb
aam
inc
in
xchg
clc
dec
loopne
mov
mov
testl
shlb
add
jns
lcall
stc
mov
repnz
jae
sub
aam
push
mov
pop
arpl
mov
cmpsb
cmp
jns
cmp
js
cmp
daa
sti
mov
cltd
jecxz
cmp
jp
outsb
push
aas
popa
test
idivl
lods
inc
pop
push
ret
jmp
rolb
sbb
arpl
das
mov
push
or
lods
cwtl
mov
insb
xor
mov
cmp
ret
pop
sahf
jno
jne
sub
push
imul
xor
cmp
dec
lods
add
and
dec
repnz
push
rcll
aas
xor
and
lea
leave
xchg
push
shl
punpcklwd
or
adc
mov
das
das
aaa
fisttpl
xchg
ret
push
xchg
in
cmp
or
mov
inc
pop
loope
outsb
mov
div
adc
cwtl
cmpsb
or
fs
cmc
call
fstpt
jb
mov
jb
rcll
push
lods
cmp
inc
into
sahf
movsl
push
dec
mov
mov
jecxz
jbe
cmp
adc
cmc
mov
mov
decb
push
out
mov
mov
out
aad
orb
jle
pop
mov
xchg
mov
cmpsb
mov
movb
test
sbb
push
in
xchg
stos
nop
push
mov
cmp
loope
aas
fwait
ja
xchg
fimuls
lock
jecxz
mov
and
dec
dec
lock
js
iret
xor
in
in
loope
enter
jmp
out
popa
sub
push
movsb
scas
popf
out
push
imul
lcall
stc
mov
daa
mov
jb
mov
fidivrs
fxch
rcrl
std
or
mov
in
sbbl
std
testb
cmp
inc
mov
daa
sub
sub
mov
sar
outsb
aaa
jmp
mov
out
jmp
fildl
out
pusha
and
xchg
nop
pop
repnz
cli
insb
test
rcll
loope
push
or
sahf
ret
or
decl
push
pop
and
cltd
dec
rcr
sub
push
mov
lock
pushf
scas
mov
push
jcxz
fidivrl
pop
lock
in
and
or
adc
or
sub
sub
scas
popl
push
insb
fadds
push
cmpsb
fstpl
out
subl
cmpsb
cld
test
enter
in
aaa
push
pop
add
jne
rcll
orb
sbb
jmp
xorb
mov
push
daa
icebp
outsb
mov
shl
testl
ss
lds
push
scas
sbbl
sqrtps
xor
mov
hlt
negb
in
jle
icebp
jbe
insb
roll
sbb
adc
mov
or
icebp
fstpl
outsl
jbe
adc
mov
mov
subb
cmp
jp
repz
loope
fwait
in
lock
cmp
int
clc
push
xchg
fstps
cmc
push
adc
out
pop
jl
pop
sbb
add
je
push
imul
add
add
xor
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
imul
add
add
aam
stc
in
sbb
in
xor
or
pop
test
