xchg
xor
mov
sub
subb
in
sub
lcall
jmp
je
into
lock
ret
xor
pop
ret
adc
aam
aam
pop
out
js
sbb
lock
scas
cmp
cs
xchg
pop
scas
cwtl
lret
and
adc
enter
jl
test
add
sub
stos
in
movsb
mov
rcrb
or
into
out
fsubl
jns
andb
aam
cmp
fimuls
sbb
sub
std
movsb
push
fisubrs
mov
jb
pop
in
sbb
sub
lahf
rcrl
adc
add
inc
pop
outsl
les
jne
xorl
dec
cld
push
push
repz
ror
mov
nop
xchg
test
fwait
popf
pop
mov
add
lcall
mov
adc
sarl
mov
vandnpd
xlat
and
popl
bound
sub
jl
push
jge
jp
push
jl
in
add
les
jbe
dec
cmpb
jne
jno
imul
pop
enter
pop
in
adc
mov
push
mov
xchg
lods
out
dec
cmp
repnz
and
xlat
rolb
xchg
mov
sahf
fiadds
mov
sub
fwait
adc
gs
lods
lcall
icebp
aam
dec
xor
add
mull
out
cmp
push
std
mov
or
xor
mov
add
fwait
inc
inc
xchg
fsub
sbb
add
mov
or
push
pop
sub
mov
out
and
fldcw
outsb
fwait
adcl
xor
sub
mov
sbb
pop
sbb
xchg
jge
stos
aas
lret
js
xor
ds
pop
pop
add
ret
jmp
call
sbb
lcall
push
test
mov
lods
jb
decl
cmc
mov
or
jb
add
add
cmp
pop
icebp
push
icebp
mov
out
push
into
in
jb
cltd
out
filds
clc
jb
stos
enter
jb
lock
jmp
cmpsl
int
ficoml
xor
add
pusha
bnd
cs
js
and
inc
lahf
pop
outsb
lcall
cmp
xchg
leave
and
jle
aam
test
cld
jmp
mov
daa
jbe
mov
push
sti
sbb
callw
cltd
dec
sub
js
loopne
lahf
mov
and
leave
xor
test
sub
mov
pushf
sub
pop
pusha
je
add
ss
pop
cmp
aas
imull
mov
aaa
xchg
ss
mov
fcmovu
pop
test
xor
mov
int3
adc
mov
imul
dec
hlt
sahf
mov
and
mov
xlat
sub
xchg
xchg
out
fadds
cld
sub
and
cld
jecxz
frstor
mov
fidivrs
cmp
cmp
mov
mov
sub
xchg
test
das
and
sbb
dec
or
cmp
clc
les
push
test
arpl
add
loop
in
xchg
mov
test
and
xchg
and
mov
fsubl
outsb
push
adc
sub
movsl
mov
mov
dec
pop
les
stc
rcl
jp
imul
in
iret
sbb
arpl
inc
pop
and
in
mov
push
movsl
xor
ljmp
adc
add
adc
xchg
add
fwait
jg
and
xchg
add
test
xchg
mov
add
sbb
loop
imul
mov
jp
jb
push
inc
ret
sbb
sub
scas
add
adc
enter
fdivrl
mov
push
loopne
in
inc
insb
fwait
push
push
sti
push
movsl
mov
mov
mov
out
xor
jmp
sub
mov
mov
fsts
cmp
mov
sub
sub
imul
pop
xor
pop
loopne
cmp
add
lahf
cmp
sti
int3
dec
mov
and
xchg
or
mov
popf
bnd
lock
in
jbe
lods
leave
loopne
jge
xchg
dec
sub
lods
fimull
stos
dec
fsubrl
mov
dec
pop
jge
out
push
popf
push
sub
aad
js
fcmovu
mov
shlb
mov
sbb
add
inc
fildll
mov
pop
flds
inc
das
std
ja
outsl
int3
cmp
ret
adc
jg
mov
jns
mov
fmuls
mov
jmp
clc
mov
and
cs
cmp
pop
inc
gs
pop
cltd
test
js
in
sub
repz
inc
data16
pop
out
test
movsl
sbb
pop
fadd
xchg
loope
cmc
pusha
push
add
and
dec
sub
lds
sub
mov
into
cmpsl
sub
lcall
mov
insb
and
mov
jne
movsb
inc
insb
mov
push
push
stc
sub
and
sub
jno
out
lea
mov
adc
mov
or
and
cmp
jne
xchg
imul
mov
add
nop
jmp
and
ja
daa
dec
sarb
aaa
cmpsb
lret
pop
test
and
jg
imul
sub
aad
out
lock
sbb
sub
fmuls
xchg
dec
push
out
sbb
sub
add
adc
inc
inc
xor
or
insl
test
js
imul
andb
fisubs
jge
faddl
idiv
and
inc
sub
rorb
dec
cmp
add
xchg
mov
jle
mov
pop
les
scas
xchg
dec
xor
cmp
clc
out
xor
and
xor
enter
xor
push
mov
xor
pop
insl
cmp
cmp
or
cmp
xchg
out
test
inc
stos
xor
ss
ljmp
pop
aam
inc
add
lods
add
push
test
aam
sbb
int
aam
loope
add
das
dec
and
fidivrs
jbe
negl
sub
sti
push
clc
fbld
and
jnp
out
clc
add
dec
sbb
ret
mov
mov
pop
pop
sti
mov
adc
lcall
sub
orl
push
jg
and
je
outsb
std
sti
divl
adc
cwtl
jns
in
ret
int3
cmp
mov
jae
cwtl
insb
adc
aam
push
mov
or
xchg
movsl
add
push
mov
jnp
add
fidivrl
sbb
icebp
jl
jp
pop
sub
inc
in
je
int
pmulhuw
pop
pop
js
add
push
or
dec
cwtl
cmp
or
pushf
rol
push
addr16
imul
in
outsb
jg,pn
dec
movsb
mov
mov
mov
jle
jg
mov
ja
cmp
or
or
clc
sar
sub
inc
pop
cmc
mov
add
inc
std
movsb
xor
dec
mov
outsb
mov
mov
gs
cmp
and
adc
add
fldl
add
fucomip
mov
imul
lock
sti
sbb
or
movsl
in
pop
push
mov
cli
subl
inc
not
inc
je
add
out
xchg
adcb
mov
mov
lahf
pop
repnz
arpl
movsl
lds
xor
gs
push
aad
push
sbb
jo
xor
pop
out
imul
imulb
daa
jmp
mov
dec
rolb
and
push
clc
push
pop
cmp
popa
hlt
mov
jo
adc
inc
mov
ret
test
sbb
mov
lcall
insb
stc
subl
int
loopne
ret
mov
push
pushl
outsw
call
sbb
sbb
pop
enter
fs
mov
adc
sub
mov
adc
xor
outsb
test
inc
mov
cld
dec
aas
loope
jae
push
push
mov
and
js
xor
cmpsb
cmp
test
jl
mov
movsb
leave
imul
adc
cmp
int
scas
mov
cmp
sbb
inc
int3
jecxz
std
roll
xchg
add
mov
repz
push
clc
xlat
and
fidivrl
and
jb
push
jmp
sub
stos
rcll
cmpl
pop
inc
sub
imul
inc
cmpsb
cmp
cmpsl
cmp
fldt
mov
sahf
jmp
pop
push
push
mov
or
sub
jge
lock
negl
ret
sub
sub
adc
or
sbb
mov
dec
popf
movsb
mov
push
test
arpl
or
scas
dec
inc
out
and
cld
mov
in
aam
mov
xor
call
sbb
lods
fs
adc
pop
and
jle
lret
repz
fcomip
jae
push
mov
popa
lock
popl
mov
les
mov
push
adc
mov
insb
fsub
xor
mov
std
sahf
out
call
ja
sub
mov
and
cmp
xor
call
adc
gs
add
pushf
iret
pop
xlat
cmp
xor
sbb
shll
add
cwtl
mov
dec
js
sbb
inc
xchg
inc
aas
jge
mov
clc
stc
jmp
add
arpl
mov
pop
jb
jno
xchg
push
push
adcl
jae
sub
dec
cmpsl
xchg
movsb
gs
push
inc
sbb
xor
mov
jle
pop
and
dec
loop
inc
mov
xor
outsl
movsl
xor
jb
lock
insl
mov
adc
dec
clc
or
clc
arpl
aam
xchg
ljmp
jne
dec
sub
push
aam
jle
and
iret
ficompl
cs
out
test
pop
mov
push
sbb
daa
mov
push
dec
xor
xor
notl
lret
hlt
js
lods
test
or
add
fildl
out
loopne
fs
sbb
pushf
dec
sti
mov
push
jge
add
cmp
push
pop
lea
sub
add
xchg
pop
aas
out
dec
in
or
jp
pusha
fmul
push
mov
cmp
in
cs
and
jb
jnp
sarl
ja
jno
jne
sarl
mov
mov
pop
inc
cwtl
push
cmp
and
out
mov
sbb
lods
add
sub
xchg
lds
mov
xor
mov
fsubs
xor
mov
add
push
sbb
mov
lds
push
loope
call
jle
and
sbb
or
cs
jo
pop
std
data16
aaa
pop
jae
push
pop
xor
cwtl
push
push
in
js
inc
pop
and
test
pop
mov
ds
call
sti
pusha
xor
icebp
inc
cmp
outsl
xchg
sub
arpl
inc
sbb
pop
add
cmpsl
mov
jg
fbld
mov
cli
xchg
movsb
stc
ret
shrl
gs
push
push
scas
cmp
insb
test
les
sti
xchg
loope
out
inc
add
inc
xchg
les
mov
cmp
pop
icebp
inc
testb
ret
aas
pop
sahf
jle
out
aad
mov
mov
add
sbb
and
imul
xchg
add
jl
fs
inc
jae
jl
dec
pop
pop
lock
mov
lea
mov
push
outsb
adc
xor
pop
xor
mov
jge
bound
pop
sub
rcrl
imul
inc
mov
jo
cmpsb
sarl
in
popf
mov
cmc
js
mov
xchg
mov
rcr
aas
dec
out
add
in
inc
out
cmp
andl
addl
outsb
jbe
inc
fldl
in
mov
inc
fisttpll
dec
jb
and
out
mov
xchg
ds
ss
or
jle
cli
and
hlt
inc
xchg
ds
arpl
lds
cmpl
cld
in
xchg
mov
outsl
jmp
jnp
push
fs
cmp
jnp
mov
sbb
push
and
mov
mov
dec
jp
out
pusha
repz
dec
pushf
cmp
in
jmp
orb
mov
shrb
cltd
sbb
and
sub
fisubrs
jns
test
adc
and
xchg
dec
jnp
cmp
mov
and
aas
mov
leave
mov
scas
int
sbb
popa
pop
jns
roll
jbe
adc
cmpsb
add
ljmp
outsl
shl
push
out
push
sbb
leave
enter
inc
dec
sbb
mov
jno
scas
add
pop
nop
pop
mov
jle
xchg
divl
pop
push
pop
add
pop
push
cmp
xor
sub
inc
xchg
jmp
pop
lods
lcall
jmp
push
push
dec
push
jp
sbb
cltd
js
and
push
jo
fdivl
sub
ljmp
pop
scas
push
sti
sbb
mov
pop
push
pop
les
subb
out
ffree
arpl
xchg
and
daa
out
popf
add
sbb
hlt
and
hlt
test
loopne
or
cmpsl
loope
ja
jge
addr16
cmpsl
aam
pushf
outsl
lods
jp
dec
hlt
fwait
mov
dec
scas
sub
outsl
loopne
repz
ror
rolb
fwait
in
lahf
mov
inc
dec
pop
pop
repnz
jg
mov
push
xor
popf
test
cmp
mulb
dec
jge
mov
fnstcw
pusha
lahf
push
pop
shll
add
stos
jle
xor
cli
pop
push
rcll
cwtl
adc
decb
and
aad
xchg
aam
loopnew
sub
mov
popl
fstl
xlat
out
sub
adc
or
sub
js
and
inc
in
faddl
mov
sub
inc
subl
or
jg
mov
repnz
icebp
xchg
repnz
pop
incl
into
lock
rcrb
es
inc
in
hlt
dec
cmpl
push
das
outsl
ss
mov
sub
sbb
dec
jb
add
movb
test
enter
movsl
xchg
and
sbbb
test
out
lret
cld
push
push
pop
or
dec
mov
dec
dec
scas
bound
or
xchg
pop
adc
push
inc
or
pop
mov
dec
and
mov
adc
xchg
mov
les
lsl
adc
mov
inc
scas
xor
das
lods
pop
ljmp
das
andb
pusha
popa
lea
add
jno
idivl
sub
mov
push
pushf
xchg
shlb
pop
cmp
xor
or
das
mov
inc
add
xor
nop
mov
inc
or
mov
sub
int
repz
xorl
loope
lods
or
das
repnz
pop
cwtl
popa
mov
or
je
add
inc
test
sub
jmp
cmp
movb
dec
adc
int3
sbb
out
cld
jno
dec
pop
fists
push
aam
or
nop
in
dec
popa
cwtl
sbb
andb
mov
mov
shll
mov
stos
insb
sahf
lods
pop
imul
insl
jo
test
popf
call
cmpsb
es
and
jnp
fiadds
std
fldenv
sub
cmc
add
les
aad
divl
adc
inc
out
shll
mov
jp
aam
mov
aas
cs
bound
das
sub
cli
inc
jle
outsb
or
dec
mov
or
or
and
add
inc
inc
std
fs
xor
pop
pop
dec
stos
mov
sarb
adc
mov
nop
scas
pop
movsb
cmp
lea
inc
jnp
push
loop
nop
mov
sbb
mov
add
lahf
aad
cmp
bound
mov
push
jmp
data16
leave
call
lahf
nop
cltd
int
sbb
sbb
aas
add
leave
stos
enter
das
cld
jne
push
cmc
xchg
inc
cmp
jnp
pop
dec
jno
xchg
dec
xchg
jmp
in
jbe
sbbb
xchg
or
frstor
xchg
push
push
mov
or
jmp
xchg
pop
mov
lret
mull
movsb
add
fildll
adc
inc
mov
and
arpl
outsb
xor
int
xchg
sbb
std
fists
call
into
mov
cmp
cmp
xchg
dec
mov
out
rcrb
mov
fstps
mov
sub
outsb
mov
sub
pop
fsubs
insb
jge
xchg
add
insl
xor
and
add
jg
popl
push
xor
hlt
push
jle
pop
dec
stos
pop
call
adc
sbb
nop
subb
mov
fistpl
sub
mov
lea
cli
aad
les
mov
hlt
insb
lods
mov
inc
cmc
cli
mov
cmp
push
mov
adc
or
xor
push
dec
test
dec
sub
rolb
aaa
pop
fimuls
adc
and
mov
jmp
mov
and
cwtl
mov
ss
mov
ret
hlt
faddp
cld
in
sbb
rorb
outsb
testb
orl
jne
and
lret
icebp
mov
ljmp
andl
jmp
ljmp
ret
mov
sbb
xchg
std
add
or
adc
adc
fildll
jge
adc
add
in
inc
jl
lds
scas
adc
movsl
clc
push
scas
and
popf
insl
orb
mov
mov
lods
sahf
out
loope
hlt
iret
sub
idivb
test
ret
lods
mov
cmp
jno
xchg
pop
dec
into
lods
jb
orb
ret
sahf
mov
pop
mull
push
xchg
rcr
cwtl
xchg
aad
js
pop
lahf
ljmp
lods
shll
mov
mov
cld
jmp
pop
and
pop
shl
push
daa
mov
cmc
stos
sub
inc
sub
push
cltd
cli
ljmp
movsl
cmp
lods
test
xor
stos
lods
mov
mov
insb
cmp
xchg
cld
add
mov
insb
js
jmp
and
and
sarl
pushf
dec
cmpsb
cmp
cmp
push
pop
ja
pop
iret
aaa
fidivl
stc
stc
in
add
sub
inc
inc
loop
dec
jo
and
jbe
lock
insl
fwait
out
push
sti
enter
stos
nop
pop
outsb
add
add
es
inc
lcall
daa
mov
das
cmp
ds
enter
push
cld
ret
test
cmp
sbb
jno
je
fisttpll
fstps
out
mov
xchg
inc
sti
int
lds
jbe
mov
cmp
shll
je
int
mov
sub
fstpt
fmuls
lcall
mov
add
adc
add
jne
sahf
sub
jno
imul
sbb
mov
int
rorb
push
pop
ljmp
jae
fisttpl
test
iret
and
jle
repnz
test
xchg
mov
xor
mov
andb
insb
arpl
or
cmp
sub
aam
mov
push
jmp
jns
mov
arpl
or
sbb
mov
test
jge
or
sti
sub
mov
mov
jmp
pop
scas
je
add
mov
push
cmpsl
mov
mov
add
xor
and
lods
push
in
sub
enter
add
inc
popa
dec
insb
mov
imul
mov
sbb
aaa
mov
test
cwtl
and
out
fsubs
or
jno
jae
sbb
jo
cmp
xor
fists
mov
xor
iret
sub
xchg
inc
xor
push
fisttpl
xor
sbb
mov
lds
aad
insl
mov
ret
sti
ljmp
xor
mov
sub
imul
xchg
mov
in
ret
push
call
int3
aam
push
adc
sub
ret
cmp
imul
mov
dec
push
mov
mov
xchg
jnp
pop
mov
cwtl
sub
rcl
in
ja
mov
aas
mov
jno
lds
sub
nop
xchg
fstl
pop
mov
sub
or
mov
lea
or
inc
mov
add
iret
and
sbb
movsb
inc
adc
mov
and
push
dec
fmul
aam
jmp
pop
fsubl
cmpsb
pop
dec
xor
movsl
and
sbb
jb
cld
jecxz
cmp
mov
cmp
sti
add
bswap
sub
mov
dec
push
jp
scas
test
xor
call
in
dec
or
bound
dec
cmp
loope
cmp
jecxz
sub
je
xchg
add
cs
imulb
cltd
mov
cmpsb
cld
inc
das
fstpt
aam
out
cli
test
ss
cs
addb
pop
or
lods
or
mov
cmp
mov
pushw
sbb
iret
lahf
or
test
std
jne
scas
cwtl
sti
repnz
push
push
pop
rcl
insb
adc
inc
jle
jb
push
dec
pop
mov
cli
bound
jno
cwtl
fisttpll
xor
mov
jp
push
mov
mov
xchg
mov
fcoml
es
sahf
adc
ss
fimuls
dec
or
ja
xchg
roll
sub
inc
daa
mov
lods
mov
dec
xchg
and
push
dec
mov
aas
push
inc
add
cmpsb
cmp
sbb
insb
cld
mov
fsubrl
test
js
fldenv
inc
lds
push
ss
rcr
call
cwtl
das
les
mov
sub
sub
inc
shlb
out
jp
add
gs
into
or
in
cmp
sub
mov
iret
add
push
mov
sbb
in
sti
inc
dec
pop
pop
dec
lret
jmp
insb
cmp
testb
sub
jnp
in
test
add
pop
jle
popf
sub
gs
add
in
dec
pushf
leave
mov
rcll
inc
mov
mov
push
das
xchg
sti
rorl
mov
cld
in
mov
cltd
jae
mov
ror
leave
cs
mov
in
sbb
mov
das
adc
pop
sub
sbb
push
iret
push
jecxz
mov
add
shlb
add
mov
das
lods
jo
xor
sbb
xchg
inc
mov
and
int3
clc
test
sbb
jns
daa
jno
dec
insb
pop
mov
addr16
or
aas
outsb
addb
push
lods
test
add
adc
cmpl
repz
lahf
jg
mov
cmp
pop
cmpsl
insb
popf
frstor
jno
lods
aam
ja
mov
sub
cmpsb
insl
lea
int3
inc
xor
inc
jge
sbb
xchg
daa
into
js
lea
jo
mov
pop
test
pop
jp
out
out
xchg
bound
sbb
cld
clc
loope
cwtl
pop
ror
push
jo
jns
into
sbb
xchg
lret
shll
sbb
or
pushf
fwait
xchg
sbb
sbb
mov
test
inc
movsl
aaa
xchg
jge
mov
lahf
dec
fstpt
fcoms
scas
dec
orb
mov
aad
lds
gs
pop
stc
mov
nop
jle
ret
pop
and
inc
cmp
xchg
xlat
dec
xchg
orl
add
add
hlt
rolb
dec
mov
lcall
andl
mov
jb
dec
and
jne
fidivl
jo
mov
cmpsb
xor
push
and
xchg
xor
les
fsubrs
outsb
and
cmp
ror
sub
push
sbb
imul
mov
sbb
aam
es
mov
call
stos
or
cli
pushf
xchg
outsl
lahf
outsl
cmp
cltd
or
jmp
mov
adc
inc
push
xchg
push
cmp
std
pusha
dec
or
outsb
out
sub
xchg
jo
mov
inc
xor
rcrl
jp
jno
aam
pop
jo
or
xor
ljmp
and
rclb
lret
ret
mov
xor
popl
xchg
or
or
mov
xor
mov
sbb
addr16
or
leave
add
lret
movsb
dec
je
or
repnz
push
xor
add
fildll
out
out
xchg
dec
nop
fdivs
mov
test
add
adcb
test
aaa
sbb
jns
int3
cmp
orb
xchg
cmp
aas
ljmp
out
add
xchg
movsb
or
push
lods
lock
inc
sbb
mov
xchg
rolb
mov
or
or
xchg
les
sbb
inc
push
aaa
andb
mov
jae
dec
pop
sub
mov
xor
test
push
les
fs
lret
sbb
add
mov
jne,pn
push
ret
in
lods
add
xchg
xchg
pop
sub
add
andl
mov
adc
aas
mov
je
push
sbb
push
inc
add
ret
adc
sub
mov
aaa
mov
scas
adc
lcall
mov
sub
push
lcall
or
xchg
repnz
frstor
dec
ret
out
xor
push
and
xor
push
inc
pop
lds
push
sahf
imul
add
push
sub
sub
mov
cmpsb
scas
push
inc
lock
mov
xor
pop
jb
jecxz
pop
inc
icebp
xchg
mov
or
xchg
sub
sub
loope
in
adc
rol
sti
std
adc
out
popa
movsb
pop
outsb
mov
lods
sbbl
stc
push
pusha
mov
lods
lock
push
add
lods
xchg
fdiv
sti
pop
cmp
mov
fstp
mov
sub
gs
lcall
sub
loopne
jo
iret
fs
mov
enter
xchg
mov
aam
push
popf
fdivr
inc
and
xchg
xor
sbb
and
pop
outsb
fwait
test
inc
push
xor
cmpl
in
xlat
mov
lahf
pop
outsb
push
push
or
fcom
xor
cltd
orl
je
xchg
sbb
ret
out
je
loop
or
cmpsl
mov
mov
mov
rolb
inc
and
push
cwtl
sbb
in
mov
add
xlat
in
test
pop
mov
adc
test
ret
mov
sbbb
push
and
stos
es
mov
call
dec
cld
loop
ljmp
pop
insl
movsl
jbe
dec
xor
sbb
mov
sub
stos
jns
pushf
add
je
mov
mov
mov
rcll
or
nop
push
add
leave
in
out
test
mov
stos
jb
gs
sub
cli
out
xorb
mov
sub
jb,pn
jmp
sub
mov
stc
mov
inc
out
lcall
mov
popf
inc
cmp
push
test
imul
in
fiaddl
movsb
lret
inc
das
aam
out
je
lcall
test
sahf
out
mov
push
js
ss
pop
popf
adc
mov
xchg
mov
nop
xchg
mov
andb
xor
cli
ror
mov
roll
icebp
icebp
fidivrl
testb
repz
push
mov
out
push
mov
dec
in
jle
andl
int
push
or
and
outsl
out
test
or
in
cmp
add
inc
mov
push
inc
xchg
adc
mov
jle
andl
mov
int3
out
int
push
sbb
stc
in
xchg
inc
das
pop
add
add
ss
sbb
outsb
es
lock
sbb
mov
jbe
out
popf
pusha
cmp
shrb
pop
lock
pusha
icebp
xor
rol
insb
daa
and
jb
mov
fidivrl
inc
add
inc
mov
jbe
repnz
test
cmp
mov
bound
xor
movsl
xor
or
shlb
cwtl
xchg
icebp
xchg
add
pop
repz
sub
popa
adc
insl
mov
popf
cld
cmp
mov
mov
pusha
sub
les
lock
mov
fidivrl
dec
add
adc
out
push
jnp
and
mov
out
mov
cltd
andl
mov
mov
sbb
stc
in
xchg
inc
das
push
push
out
mov
sbb
sbb
cmp
and
sub
inc
leave
pushf
lods
inc
jns
js
outsb
add
inc
pop
in
sub
fnstsw
pop
mov
adc
pop
jmp
jnp
and
pop
adc
loop
xchg
lods
mov
jmp
jns
add
out
ljmp
or
fwait
pushf
outsl
fsts
inc
pop
pop
es
sbb
pop
cli
ljmp
cs
js
xchg
fidivrs
int3
or
pop
cmp
pop
dec
leave
loop
mov
call
inc
pop
push
movsb
stos
sub
xlat
xchg
xchg
mov
cmp
ja
aas
mov
data16
sub
inc
mov
cmp
je
js
ret
push
notl
loop
lret
cmp
ficoml
lret
vmovaps
jne
adc
fsubr
repnz
adc
xchg
filds
sbbl
and
mov
sbbb
jmp
mov
lcall
in
outsl
xor
mov
and
inc
or
test
test
inc
fstl
lret
rol
gs
push
les
and
add
mov
pop
js
push
jg
push
out
daa
mov
rol
pop
xor
push
and
scas
movl
adc
jge
jge
and
inc
push
pop
outsb
add
cmp
inc
sbb
nop
test
gs
mov
lcall
jae
mov
cmp
push
push
icebp
cmpsb
loopne
test
push
fstps
aas
mov
xlat
fs
cmp
mov
sub
and
xchg
xorb
jnp
xchg
pop
repz
lret
aas
callw
mov
inc
hlt
dec
inc
push
push
xchg
rolb
pop
aam
xor
sub
or
mov
call
idivb
push
mov
ja
cmp
cmp
push
mov
cs
rcll
ljmp
jb
fnstcw
sub
dec
sbbb
inc
mov
adc
rcll
inc
jl
sub
inc
inc
jo
rcll
loope
fdivrl
xorb
divb
in
xchg
loope
inc
add
cmp
add
pop
push
loopne
and
outsl
mov
loope
jmp
mov
roll
and
push
fistpll
lahf
gs
or
mov
mov
push
push
out
pop
cmp
jne
pop
mov
pop
cmp
jg
inc
mov
test
push
in
je
mov
ds
movsl
sbb
xchg
sub
ror
mov
imul
push
jmp
cmp
mov
and
adc
nop
jae
jb
add
adc
xor
mov
push
and
or
mov
sbb
and
mov
sbb
and
scas
xor
or
js
and
enter
push
in
lahf
xchg
add
push
jmp
push
in
mov
inc
sub
sti
mov
cld
cwtl
jno
push
sub
jge
aam
aam
cmp
ds
test
dec
test
push
push
notb
push
fstpl
mov
int3
call
xor
adc
insl
sub
insb
aaa
notb
fstpl
mov
cmp
stc
jbe
loope
xchg
imul
sbb
mov
mov
mov
inc
std
mov
sub
sbbl
inc
sti
cs
pop
fwait
sub
out
mov
push
adc
cmp
aam
pop
xor
xchg
inc
and
dec
test
jo
sbb
sub
out
out
shll
push
jae
idiv
add
cmpl
lds
dec
dec
icebp
lods
pop
imul
pop
shll
sbb
mov
dec
or
ss
xchg
push
push
imul
cld
dec
and
xor
push
push
ret
insb
lret
and
xchg
xor
add
push
js
sbb
cmp
sbb
fisttpll
movl
mov
in
cmp
cmp
imul
adc
call
out
mov
jle
cmp
fdivrp
jg
pop
dec
cmp
sub
push
test
das
pop
inc
cmpsb
mov
js
push
lahf
idivb
call
aaa
data16
imul
fucom
loop
and
icebp
push
or
pusha
sti
mov
imull
mov
stc
popa
xchg
aam
cmp
push
inc
loope
or
hlt
bound
lret
jmp
sub
cmpl
mov
aad
add
xchg
mul
push
adc
aam
lcall
fcmovnu
dec
push
cmp
insl
pop
lcall
out
pop
cmpsl
inc
movsl
mov
lret
cli
mov
cwtl
shrb
pushf
sahf
sub
push
cmp
add
out
iret
arpl
call
cmp
pop
scas
mov
push
add
outsb
jecxz
mov
cmp
das
mov
adc
xchg
out
out
iret
sub
push
push
mov
pop
mov
mov
xor
dec
mov
jns
jns
add
xor
fsub
and
push
cld
jmp
out
pop
scas
dec
ret
inc
jbe
leave
and
lret
sub
sbb
in
pop
loope
adc
test
or
call
cmpsl
push
or
nop
cmc
inc
les
xchg
movsl
aam
roll
jno
mul
jo
lea
cmpl
cwtl
xlat
popf
je
scas
test
lahf
ficomps
add
sub
aaa
movsl
push
clc
repz
and
pop
mov
sub
mov
push
addl
xor
lret
neg
and
jbe
das
out
imul
cmp
sahf
pop
inc
and
mov
mov
and
sbb
cld
les
adc
xor
mov
mov
cmp
sbb
jg
outsb
icebp
call
insl
pop
lock
add
in
mov
sbb
dec
mov
pop
pop
stc
out
xorb
or
movsb
arpl
pushf
add
push
jg
pop
loop
stc
jo
fstps
inc
popa
add
ljmp
pop
inc
aas
incb
imul
pushf
rcrb
sub
lahf
cmp
rcrl
pop
insb
sub
scas
pop
popa
xor
pop
outsb
shll
dec
testb
push
cmpsl
mov
dec
mov
xor
test
test
data16
in
pusha
push
xor
aas
outsb
add
and
inc
pop
insl
repnz
and
cld
adc
mov
add
cs
jo
push
xor
xchg
xchg
inc
or
and
rcrb
or
data16
sbb
xor
dec
jge
lock
lds
sbb
xchg
data16
fmull
cmpb
push
push
nop
fucom
arpl
cli
stc
ss
addb
hlt
fwait
push
lock
cmp
js
mov
shlb
das
sahf
inc
loope
add
dec
cmp
adc
mov
les
fdivrs
hlt
jecxz
adc
insb
inc
add
addb
imul
outsl
ret
ficoml
cs
cmp
xorb
daa
das
js
add
sbb
pusha
mov
sbb
loopne
popf
out
test
sub
xchg
out
push
movsb
and
cmp
in
jecxz
aaa
adc
ror
xor
dec
pop
in
dec
cmp
mov
out
inc
pop
mov
fcmove
mov
or
mov
test
add
aam
jb
inc
cwtl
sahf
pop
lret
xchg
daa
inc
test
cmp
cmp
push
sub
or
lcall
call
mov
cli
cli
fstpl
push
lods
push
xchg
xchg
mov
adcl
or
add
mov
in
bound
cld
ffree
jp
negl
movb
push
sub
sub
nop
dec
outsb
ficomps
pop
in
ds
sbb
sub
test
lds
xchg
mov
out
cmp
push
fistpll
and
pop
cli
divl
roll
in
movsl
outsb
outsb
popl
mov
xchg
xchg
cld
and
mov
aad
dec
pop
imul
rorl
dec
sbb
add
pop
stos
aad
xchg
jl
xchg
push
in
ds
cmpsb
clc
lock
push
data16
jecxz
das
lcall
and
icebp
and
cmpb
mov
inc
je
mov
ss
repz
lret
mov
ja
fidivl
sub
and
ljmp
pop
xchg
pop
mov
mov
adc
push
sub
dec
popf
pop
inc
mov
mov
sbb
add
mov
dec
jl
mov
xor
and
ret
push
push
in
mov
das
repnz
ret
or
jns
out
mov
loope
pop
loope
mov
xor
movsb
fnstenv
pop
push
loop
push
sbb
mov
icebp
outsl
mov
cld
inc
add
sbb
and
mov
mov
xchg
pop
sub
js
imul
data16
int3
xorl
xchg
xor
call
test
ljmp
imul
pop
lret
ss
cmpsb
aad
push
fmull
pop
mov
adc
and
mov
lds
and
mov
xchg
inc
mov
hlt
fiaddl
adcl
push
push
ror
sub
out
out
mov
mov
in
sub
sub
inc
and
add
pop
jle
push
add
add
and
not
int3
xchg
hlt
dec
test
ds
call
push
xchg
adc
add
push
jb
cld
call
add
pop
dec
stos
pushf
pop
sbb
pop
enter
ja
mov
mov
push
xchg
add
test
daa
scas
mov
mov
addr16
jns
add
cli
pop
inc
mov
ss
push
pop
ljmp
insl
gs
lcall
mov
inc
sbb
or
sbb
std
pop
inc
mov
nop
xchg
pop
sahf
pop
in
or
mov
mov
cld
ret
arpl
shrl
pusha
mov
sbb
push
subl
pusha
jns
pop
iret
mov
mov
lods
int3
adc
jecxz
cmc
ret
in
jecxz
xchg
inc
xlat
add
roll
std
sarb
fcoml
jmp
dec
inc
jnp
aam
mov
cmp
sbbl
cmpsb
aam
pop
dec
mov
pop
xor
ja
gs
bound
pop
adc
fiadds
ret
cmp
dec
cmpsb
cltd
pop
sbb
xor
inc
inc
jno
xchg
ret
stos
stc
inc
je
out
ljmp
sbb
push
inc
lcall
das
sub
push
xchg
push
outsb
mov
add
add
out
aad
or
and
bsr
pop
bound
sub
mov
js
sahf
or
mov
loope
cs
mov
pop
mov
outsb
push
mov
insl
mov
mov
add
cmp
mov
jg
inc
mov
mov
and
pushf
sub
scas
das
sub
mov
leave
sbb
push
sub
jp
jbe
xchg
push
sbb
cltd
in
addr16
inc
aas
ret
jno
lods
les
pop
and
aas
adc
lods
fimuls
xchg
xchg
or
incl
aaa
andl
sbb
jnp
push
loop
sbb
sbb
cld
pop
pop
cmc
imul
cmp
aas
lcall
imul
ret
test
in
or
push
sbb
into
mov
mov
cs
hlt
adc
jno
cmp
shlb
sub
les
movsl
test
xchg
or
xchg
sbb
icebp
enter
push
lret
push
ljmp
sbb
cmp
pop
cwtl
dec
jmp
leave
mov
xchg
mov
fisubrs
pop
inc
push
hlt
lods
jp
cmp
fdivl
ret
fs
cmpl
mov
mov
sti
xor
inc
xchg
mov
je
orb
popf
call
data16
mov
shlb
jbe
in
insl
bound
test
push
mov
ds
sbb
js
xchg
loope
mov
push
mov
insb
jecxz
add
hlt
push
ret
xchg
mov
xchg
leave
push
enter
push
mov
addl
out
adc
test
pop
test
je
mov
mov
lret
xor
movsb
sub
int
cmp
sahf
addr16
adc
push
loopne
ret
sub
inc
add
es
xor
dec
enter
mov
jbe
inc
in
push
mov
or
mov
dec
mov
pop
ret
addb
and
push
jp
mov
pushf
int
ss
pop
dec
daa
and
cwtl
lret
xor
loope
and
loope
adc
mov
push
inc
mov
adc
insl
ret
xor
inc
ds
fmuls
and
lcall
mov
and
sub
call
lea
fucomip
mov
pop
mov
subl
insb
fcompl
xchg
cmc
ret
xor
mov
mov
decb
dec
stc
and
imul
fcompl
add
in
fcmovnbe
push
in
call
insl
fwait
pop
pop
and
adc
and
icebp
xchg
mov
cli
dec
popf
inc
lods
jmp
ja
cmp
in
sbb
aam
push
xchg
fmull
or
imull
out
sbb
sub
shrl
decb
adc
orl
inc
aas
add
and
test
sub
rcrb
adc
cld
sub
cs
add
arpl
mov
mov
je
stc
jbe
mov
xchg
push
iret
sub
mov
sub
mov
icebp
mov
ss
inc
imul
test
lea
push
movsb
sahf
pusha
push
cmp
notb
dec
sub
sbb
xor
aad
clc
icebp
setns
lds
leave
mov
lcall
ja
lea
pop
out
xchg
sbb
ja
add
jno
data16
loop
dec
and
dec
inc
xchg
fs
cmpsb
mov
lret
adc
xchg
cld
cmpsl
js
push
int
push
cmpsl
mov
jmp
push
jmp
je
or
cmpsb
imul
cld
data16
dec
subl
fdivr
fisubrl
lods
mov
or
xor
outsl
pop
fcompl
insb
mov
and
loope
in
imul
inc
pop
push
cs
sub
jno
mov
ret
push
xchg
rcll
mov
loop
test
push
xchg
sbb
mov
test
pop
int3
ror
scas
negb
scas
and
inc
scas
rclb
sti
adc
inc
inc
test
out
mov
mov
push
das
in
aad
push
test
mov
das
aas
pop
inc
fbld
mov
xor
call
mov
ficomps
cmp
jb
jp
cwtl
sbb
fcomps
pop
xchg
jne
subb
dec
sbb
repnz
inc
adc
or
sbb
psraw
pop
lods
test
test
mov
fsubs
outsl
and
jo
cmp
push
jo
out
push
out
fwait
shrl
jmp
xor
fldl
std
notb
jns
aam
cmc
fucomp
jge
lods
dec
inc
add
rcrb
cmpsb
mov
xchg
sbb
and
shll
or
pop
jle
negb
stc
int3
dec
push
cli
cmp
xchg
dec
vunpckhps
test
shll
xchg
mov
pop
fisttps
mov
mov
inc
mov
adc
push
lds
jnp
inc
into
cltd
hlt
push
sbb
xchg
push
nop
pop
loop
imul
cwtl
inc
lret
fidivs
sub
sub
loopne
loop
in
inc
adc
sub
popf
cmp
cmc
addr16
push
mov
inc
addr16
out
stc
push
mov
xchg
pop
mov
add
xchg
nop
push
pop
xchg
dec
adc
inc
stos
sub
mov
push
jle
adc
cmpsl
and
fdivr
insl
lods
or
xchg
add
jmp
movsb
lret
dec
pop
jno
mov
popa
jno
out
enter
enter
jns
fwait
xchg
and
lock
pop
mov
sub
push
jl
cmp
jno
push
sbb
rcll
js
add
mov
iret
in
ret
mov
out
dec
push
cmc
pop
mov
cmc
pop
mov
mov
cli
pop
jb
pop
les
push
dec
or
call
xor
xor
jp
ds
xchg
sub
push
jge
pusha
stc
mov
idivb
cwtl
or
push
xchg
pop
lds
dec
inc
and
xchg
xchg
jns
shrl
xchg
mov
and
ds
in
test
add
mov
jl
adc
sub
sub
sbb
pop
xor
fld
mov
fistpl
mov
scas
pop
push
sub
and
cs
and
outsb
inc
dec
addr16
dec
insb
andb
cmp
mov
cmpsb
lds
or
shll
sti
dec
clc
pop
xchg
loope
inc
fsubs
cmp
ret
lea
mov
sub
test
jge
stos
ds
push
pop
js
aad
fnstsw
mov
fnstenv
push
cmpsb
jl
sbb
ret
dec
jo
sbb
jae
je
push
lahf
fmull
les
mov
add
and
mov
sub
mov
sub
mov
jo
jecxz
jne
scas
aam
jae
jns
enter
adc
add
push
add
call
xchg
push
push
xchg
test
cmp
cmp
mov
push
and
pop
imul
pop
dec
subb
mov
movnti
dec
shlb
xchg
repz
push
ret
lea
cmp
decb
outsb
test
imul
xor
push
add
jbe
xchg
jbe
addr16
sub
jle
dec
cmc
ss
push
in
call
sbb
imul
cltd
fists
dec
push
insl
fstpl
cmpsb
cwtl
sti
jne
out
dec
nop
pop
xlat
aad
icebp
adc
pop
cld
adc
and
inc
mov
repz
movsl
jmp
adc
or
popf
fisttps
adcl
repnz
test
mov
sub
jp
incl
jge
cmp
and
adc
lds
das
sub
outsb
xchg
dec
pop
mov
sbb
push
adc
add
jp
sbb
aad
in
dec
cmp
fwait
push
or
inc
mov
jno
or
sbb
hlt
lcall
and
cmp
mov
mov
fimull
pop
pop
lods
xchg
cmc
and
sbb
xchg
cli
jg
pop
push
xchg
mov
mov
mov
in
mov
rcrb
sub
add
or
js
mov
mov
aam
sbb
pop
and
lret
outsb
or
cmp
out
into
jg
in
repnz
lahf
test
xor
nop
loope
and
pop
ljmp
inc
in
test
adcb
cmp
stos
xchg
dec
cmc
push
in
adc
out
cli
fcompl
push
aaa
cwtl
sub
mov
jge
cs
push
xchg
jno
scas
mov
xchg
out
lods
mov
into
lock
rcrb
push
mov
cwtl
pop
jecxz
cwtl
js
lret
in
call
inc
movsb
lahf
shrl
jae
loopne
dec
jbe
jmp
cli
aam
lods
xor
mov
sbb
or
jno
popaw
mov
mov
into
push
mov
movsb
lock
xchg
lods
scas
shll
and
notb
and
enter
insl
imulb
movsb
mov
sbb
add
push
and
test
sub
and
lds
xchg
insl
sbb
xchg
test
popa
inc
imul
imul
cltd
adc
xor
lret
movsb
lret
and
add
push
xor
push
jmp
lock
pop
jb
neg
dec
lods
add
aas
push
into
adc
and
js
sbb
pushf
and
or
or
pop
pusha
fmull
in
xchg
push
sub
push
and
fildl
mov
lcall
insb
and
jns
cmp
jecxz
lock
fadds
or
inc
cmp
sbb
cmp
dec
mov
pop
pushf
jnp
mov
jmp
lods
dec
imul
call
mov
loope
sbb
or
aas
cmpsl
jne
fcoml
push
addr16
adc
sub
inc
ljmp
outsb
aad
mov
adc
sub
movsb
hlt
xchg
mov
cld
leave
dec
add
mov
mov
xor
fcmovu
cmc
xchg
cmp
in
test
aam
es
js
push
and
xor
fs
mov
call
fisttpl
insb
call
cli
mov
rorb
sbb
in
testb
pop
test
adcl
icebp
aaa
push
jnp
iret
dec
lret
jecxz
shrb
pop
jo
subb
in
pop
sti
sbb
int3
insb
dec
cmp
mov
xchg
in
inc
xchg
int3
jb
loope
int3
xchg
adc
repnz
add
pop
jge
pop
and
sub
js
sbb
mov
sbb
fisubrs
inc
push
fsubrl
or
xor
sub
sub
cs
and
sbb
je
call
and
out
push
dec
inc
outsb
inc
pop
stos
xchg
xor
pushf
mov
jno
pop
cli
sti
xchg
add
sbb
into
jecxz
mov
out
add
and
jge
insb
mov
cmp
test
stos
fistps
sub
mov
mov
mov
and
and
lds
xchg
pop
stc
mov
jmp
add
inc
dec
or
pop
lret
cmp
mov
cmc
shl
fcoms
int
inc
lcall
dec
in
or
ljmp
aam
cmpsb
mov
stos
test
gs
xor
loop
pop
xor
xor
or
adc
mov
xor
stos
jmp
mov
cmc
sub
sub
jbe
pushf
add
xchg
sbbl
repz
repz
fs
in
mov
fidivs
repz
adc
lret
out
cmpsl
mov
push
xchg
pop
xor
or
dec
cmp
sar
repz
or
inc
rcr
cmpl
xor
imul
fiadds
sub
dec
ss
fs
test
adc
push
cmp
inc
dec
adc
fists
sbb
inc
sbb
mov
cltd
pop
or
movsb
fimuls
stos
iret
jo
xchg
cmp
js
sahf
cmp
add
mov
movsb
sub
insb
lea
push
push
stc
std
hlt
pop
scas
out
bound
sub
std
mov
notb
jns
nop
pop
ljmp
lods
test
mov
lea
ret
cmc
ds
xchg
dec
daa
or
push
pop
mov
mov
mov
jns
ret
fwait
adc
mov
fneni(8087
mov
sub
jne
popf
sbbl
les
clc
cmp
pushf
xchg
inc
adcb
pop
leave
lahf
cs
jmp
mov
in
cmp
repz
test
insb
inc
or
or
lods
stos
lret
sti
dec
xchg
sti
jl
ja
cmc
out
sub
push
cmpsl
add
push
sub
mov
cmp
lea
jmp
sub
jmp
mov
push
lea
ret
test
xchg
leave
lret
out
lret
mov
in
leave
loop
and
xchg
jg
fdivs
mov
ss
aad
aas
jg
mov
pop
roll
jnp
insb
cli
sub
xchg
sub
loope
dec
jno
push
pop
sub
ja
mov
outsb
jl
push
xchg
arpl
pop
ds
mov
push
adc
rclb
xor
dec
les
add
jge
mov
adc
fcmovb
jle
inc
fcomp
xchg
xchg
mov
adc
add
sbb
lock
lret
fsub
sub
pop
or
xchg
cmp
insb
dec
insb
xor
mov
jmp
mov
inc
aaa
loope
clc
int
add
stc
and
push
xchg
jmp
inc
mov
sub
sbb
jae
orl
xor
shl
mov
sbbb
and
xor
cmpsl
je
pop
lods
ss
mov
sbb
push
aad
cwtl
lods
faddl
fs
test
push
and
aaa
sahf
cwtl
jp
scas
sub
xchg
out
cwtl
inc
and
xchg
dec
sbb
inc
mov
jge
inc
das
xchg
push
sbb
aaa
sbb
inc
mov
clc
jmp
call
inc
dec
fstpl
repnz
ret
sub
fsubs
daa
sti
nop
mov
data16
add
inc
sub
lock
cmp
jl
mov
add
cmp
push
dec
cmpsb
lods
in
cmpb
push
inc
in
and
sti
daa
adc
cmpsb
sti
lods
out
out
cld
or
add
mov
sbb
enter
or
mov
cmp
inc
pmaxsw
pop
pop
or
call
jne
xchg
mov
lahf
addl
push
cmp
pop
inc
roll
cmp
stc
fildl
xchg
mov
bound
cmp
jge
pop
mov
jg
mov
xchg
loop
add
out
fcoml
das
adc
lock
xchg
dec
out
xchg
pop
add
mov
cmp
sbb
mov
bound
shrl
pop
adc
ret
and
lret
aam
jb
push
jbe
xor
xchg
sub
sahf
inc
mov
add
das
dec
lock
test
stos
stos
mov
scas
sub
xor
adc
insb
dec
dec
je
mov
mov
andb
lcall
mov
cmp
pop
mov
jno
repnz
bswap
enter
xor
hlt
mov
enter
int3
mov
hlt
cs
je
iret
cmp
sbb
out
andb
mov
inc
xchg
subb
sarl
xchg
adc
push
sbb
mov
sahf
jecxz
pushf
sbbb
xchg
pop
dec
push
int3
out
mull
inc
call
add
cmp
popf
sbb
repnz
mov
adc
sub
aam
mov
lea
popf
cs
inc
push
repnz
mov
ja
jmp
inc
pop
xor
sub
xor
sbb
inc
jle
xchg
add
dec
xor
push
cmp
xchg
mov
dec
ds
inc
shr
or
pop
cmova
dec
and
push
notl
loop
cld
sub
push
lret
or
cmp
inc
lahf
idivb
lahf
icebp
pop
insl
and
mov
mov
jp
adc
push
insb
cmp
jnp
cs
or
clc
push
jo
fiadds
inc
dec
divb
xor
jne
hlt
dec
lea
mov
or
rclb
sahf
mov
test
pushf
mov
sbb
pop
add
mov
cs
pop
inc
clc
repz
ds
mov
loop
std
mov
flds
das
loopne
inc
mov
push
es
sbbl
in
pusha
out
push
lea
mov
aas
mov
pushf
in
dec
pusha
pop
jmp
sub
jmp
cmpsl
xchg
lock
mov
mov
lock
mov
sbb
idivb
xor
subl
mov
xlat
test
jne
aaa
iret
pop
sub
push
sub
add
add
xchg
xchg
sub
add
cmp
jmp
adc
into
jle
xchg
shrb
inc
out
jb
inc
inc
out
or
ljmp
nop
ja
sub
daa
and
or
dec
jbe
push
lahf
mov
or
hlt
sbb
jge
or
enter
js
test
push
outsb
dec
std
cmp
and
or
fsts
jno
cmc
mov
cmp
cli
pushf
nop
lret
jl
mov
iret
fstpl
or
outsb
inc
xor
js
movsl
push
pusha
mov
fidivrl
pop
cli
push
jne
sbb
mov
mov
xchg
xchg
push
jge
popf
adc
push
or
dec
pop
test
scas
lds
add
in
xchg
sub
sub
shrl
push
mov
pop
in
shll
xor
push
mov
mov
hlt
pop
cmp
insb
jae
es
insb
lock
mov
hlt
mov
mov
hlt
fwait
loope
mov
pusha
insb
pop
dec
cmpsb
fisttpl
fsubrs
loopne
outsb
cmp
clc
and
sub
xor
pop
xchg
out
xor
inc
shll
jmp
frstor
das
sub
inc
inc
sti
hlt
jo
lea
inc
lahf
popl
into
mov
pop
xchg
outsb
test
fucom
sub
popf
loope
jecxz
mov
jg
sub
sub
or
inc
lds
pushf
mov
setl
xchg
xor
dec
in
add
mov
popf
xchg
sahf
ret
aad
sbb
stc
addl
dec
js
mov
jae
inc
ds
fwait
jbe
mov
push
fsubl
das
fsts
push
fstps
les
fldt
dec
adc
mov
adc
push
test
inc
adc
in
jnp
mov
xorb
cmp
mov
jmp
mov
push
xchg
xchg
and
daa
hlt
in
outsb
and
push
push
add
pop
adc
shl
mov
jge
mov
into
shrl
xor
sub
and
pop
add
mov
ds
pop
cltd
insb
mov
xchg
or
lcall
sbb
push
popf
xor
cmp
xor
fiaddl
xor
xchg
or
mov
test
dec
cmpb
ja
lock
pop
sub
sub
ret
ret
pop
mov
aam
pop
pop
jl
mov
packsswb
ficoml
sbb
ss
pusha
xor
xchg
adc
movsb
and
and
inc
cs
mov
mov
loop
xor
addb
push
jne
mov
sub
or
fidivl
xchg
push
xor
ds
mov
outsl
out
imul
xchg
xor
and
arpl
mov
cli
aad
jmp
adc
repz
jmp
insb
push
mov
sub
sbb
mov
xchg
dec
push
xor
outsl
and
push
shll
hlt
dec
faddl
bound
je
aaa
cltd
sub
sub
das
in
mov
ret
aaa
mov
ja
inc
cmpsb
push
or
mov
lahf
mov
inc
pop
cmp
jle
outsb
mov
push
lcall
or
or
sub
pop
inc
pusha
mov
out
cwtl
cmp
jae
stos
pop
sahf
or
dec
hlt
dec
jmp
inc
dec
sub
mov
xlat
sbb
jae
daa
sub
pop
popf
and
pop
stc
sahf
dec
repz
xor
clc
nop
mov
mov
lock
out
cmp
inc
xchg
jne
add
mov
jns
ljmp
push
out
addl
pop
sbb
and
jmp
stc
sbb
imul
es
adc
add
sub
sahf
rcl
clc
insb
jns
push
cmc
loopne
mov
mov
pop
push
xchg
mov
mov
jl
sub
dec
xchg
xchg
icebp
lret
xchg
lret
pusha
dec
lea
sub
mov
add
mov
mov
mov
inc
mov
test
jb
cli
xchg
stc
inc
dec
mov
fucomi
push
ret
adc
mov
in
pop
js
aaa
int
jno
sub
test
mov
sub
ret
stos
js
pop
mov
inc
loope
xlat
xor
pop
lods
flds
sbb
sub
and
and
test
fwait
mov
fistpl
test
mov
xchg
dec
add
stc
inc
xor
test
out
outsb
xchg
xchg
or
jmp
aam
xchg
add
inc
adc
faddp
mov
jl
push
sub
test
mov
movsb
fistpll
inc
xchg
xlat
hlt
scas
jmp
sahf
adc
mov
mov
xchg
jmp
movsb
xchg
push
xor
and
rolb
push
jmp
and
xor
cli
xchg
fcmovnbe
jle
loopne
or
jmp
mov
mov
push
add
cmp
mov
les
fs
mov
cmp
adc
sub
xchg
into
push
pop
popf
loope
fdivrl
dec
test
in
sub
and
push
and
mov
rcrb
cmpb
sti
in
inc
or
sbb
fnstcw
cltd
adcl
imulb
dec
mov
mov
jb
xchg
hlt
xor
jge
mov
dec
out
mov
call
inc
out
xchg
ja
pop
xor
fwait
repz
adc
and
mov
rorl
mov
xor
pop
cmp
shll
pop
push
sarb
int
mov
pop
in
inc
movsb
rcll
inc
mov
imul
adc
pop
int3
and
idivl
push
mov
ds
mov
xchg
aaa
cmp
mov
pop
ror
sub
xchg
or
cmp
cmp
lret
jns
cmp
jg
mov
pop
nop
add
int
std
pop
xor
inc
cltd
ds
mov
adc
leave
call
add
ja
out
outsl
and
je
and
cmp
lods
pop
sbb
push
into
push
adc
bound
push
sub
cmp
add
mov
jns
dec
xchg
cmp
pop
xchg
mov
push
pop
jns
xchg
cmpsl
rcrl
dec
ficoml
xor
pop
lock
adc
push
fstpl
sub
sti
inc
sub
fldl
test
out
push
pusha
xchg
mov
sbb
inc
mov
mov
dec
xchg
aaa
pop
gs
pop
mov
jg
mov
xor
ja
xchg
and
or
mov
insb
cltd
stos
push
add
xor
repnz
push
mov
mov
ret
dec
adc
enter
push
and
or
xor
sahf
pusha
cs
scas
nop
push
cld
jno
cmp
xchg
sub
adc
sbb
adc
or
out
std
mov
add
adc
jmp
mov
call
rcrb
push
xor
int
xchg
sub
push
lock
jge
inc
sub
scas
insl
stos
rcrb
cmp
lods
cmp
fcomps
les
adc
das
mov
les
pop
sbb
shr
fstps
mov
mov
xchg
adc
adc
mov
cli
inc
into
popf
lea
in
jbe
int3
jns
cld
cmp
jl
xor
roll
push
aam
movsb
loop
or
xlat
pop
push
mov
imull
icebp
sbb
cmp
insb
xchg
test
inc
mov
jno
and
xchg
jno
xchg
inc
out
std
stos
sub
jl
xchg
add
jp
and
incb
cmp
add
cmp
bound
scas
movsl
sub
loop
iret
push
jnp
les
sub
and
add
ret
add
push
and
pop
jae
push
popf
push
lds
pusha
js
cmpsb
out
lahf
xchg
loop
inc
std
xor
inc
nop
stos
inc
xorl
xor
insl
xor
pop
dec
in
popf
jns
iret
xchg
flds
xlat
adcb
xchg
stos
and
mov
sub
popa
les
pop
xor
push
repz
mov
leave
add
xlat
es
pop
xorl
stos
js
insb
decl
mov
add
inc
inc
jle
sbb
lock
addr16
jae
add
jl
fstpl
lahf
pop
pop
loope
aaa
cmpsb
hlt
xchg
in
das
fcoms
stos
in
scas
mov
adc
aaa
push
icebp
in
out
jne
mov
push
repz
lret
mov
scas
aaa
hlt
push
cmpsb
and
mov
arpl
mov
call
shll
mov
insl
clc
into
insb
test
inc
cmp
out
lahf
add
jg
test
cmp
push
pusha
push
or
movsb
shrb
or
inc
add
loopne
jp
js
jb
fcmovu
mov
addl
in
sub
push
xorb
scas
nop
dec
xchg
jne
outsb
mov
scas
arpl
loopne
movsl
mov
cmpsb
mov
and
orb
cmpsb
stc
cmp
out
jg
icebp
notb
or
mov
mov
push
imul
fcoml
jle
je
xor
dec
out
test
mov
test
xor
push
sub
sar
rcr
add
scas
push
lgs
std
in
in
jg
inc
xchg
sbb
int3
jp
push
adc
add
xchg
aaa
mov
out
fisttpll
jno
sbb
dec
lods
leave
adc
mov
cltd
pusha
cmp
ret
lea
rolb
cmp
dec
and
mov
sti
and
mov
cld
test
sarb
and
stc
pop
clc
jne
ljmp
test
cwtl
mov
xor
and
lret
fiadds
shlb
inc
adc
cmp
mov
cwtl
repnz
sbb
data16
sbb
xchg
and
rolb
cmp
sub
scas
sbb
xor
mov
insb
pop
sbb
or
xor
mov
popa
xchg
jp
cld
mov
je
dec
dec
mov
neg
sbb
lcall
or
outsb
push
push
xor
out
or
out
jecxz
add
movsl
dec
pop
test
or
into
out
mov
je
dec
mov
movsl
or
fcoml
add
aam
test
gs
dec
inc
or
lahf
jne
adcl
cmc
pop
xchg
lock
push
in
sub
mov
sub
mov
cmc
pop
sbb
pop
call
test
insb
sub
js
jle
and
idivb
hlt
dec
scas
pop
sub
test
sbb
xor
test
arpl
inc
sub
hlt
aad
sbb
les
push
rcrl
mov
fidivl
mov
xchg
notl
ljmp
in
mov
push
in
add
pop
lcall
jp
mov
out
aaa
pop
rcl
xchg
punpckhbw
lcall
adc
out
insb
dec
insb
cmp
nop
inc
sbb
call
push
lods
push
or
dec
adc
rcl
mov
dec
jle
lret
xchg
inc
push
pop
cmc
mov
sbb
sahf
test
or
pop
mov
imul
sti
movsb
je
and
outsl
jecxz
cmc
fsubrl
push
jno
mov
insb
icebp
in
outsl
sbb
jmp
hlt
mov
es
adc
int
cmp
mov
loopne
outsb
mov
push
clc
push
xor
mov
dec
mov
sbb
cmovg
jl
mov
inc
nop
jg
hlt
sub
lds
es
jle
div
js
bound
outsb
pushf
cmp
xor
dec
in
into
jmp
mov
mov
pop
cltd
xchg
sbbl
mov
popa
cs
xor
movb
jno
rclb
dec
fmuls
enter
sub
push
push
cmp
stos
lock
lcall
or
faddp
aam
cmp
pop
hlt
sub
mov
inc
xchg
daa
andb
xchg
dec
scas
sub
daa
movsb
mov
ss
mov
inc
push
jg
push
jne
mov
faddl
pop
inc
fnstsw
data16
sbb
sub
add
dec
in
or
gs
cmp
sub
push
repnz
cmp
pop
lods
mov
sub
out
lock
and
sub
insl
push
cmpsl
pop
into
test
ret
xor
into
xchg
adc
loope
xor
xchg
push
loopne
add
out
add
xchg
or
clc
pop
adc
test
xchg
inc
fdivr
xchg
inc
and
insl
push
and
mov
repz
or
mov
pop
sub
or
fwait
sub
testb
push
xchg
gs
mov
sysenter
loope
mov
adcl
jb
push
imul
jno
mov
jl
enter
loopne
mov
dec
gs
cmpsb
imul
push
insl
add
xor
add
jmp
push
push
cmp
inc
mov
pop
lret
mov
outsl
popw
jp
outsl
aas
and
sub
mov
lret
mov
inc
mov
dec
sbb
sahf
inc
fdivrs
jg
mov
pop
xlat
int
je
mov
xlat
and
hlt
sub
push
mov
jle
sub
mov
and
mov
aam
xchg
xchg
sbb
inc
adc
btc
imul
lahf
inc
mov
pop
fistpl
cmp
rol
stc
test
jmp
cld
outsl
cltd
sub
mov
cmp
push
lcall
fldcw
inc
dec
jg
lods
in
and
mov
fidivrs
cmp
xor
xchg
fstpl
sbb
and
daa
push
aad
mov
pop
popa
mov
lods
jo,pn
shlb
push
or
push
cmp
inc
ss
push
shlb
xchg
pop
das
lret
mov
mov
xchg
loope
xor
sub
jecxz
cmpl
insb
cmpsb
mov
cmc
jge
pop
fidivl
in
jmp
leave
push
xchg
jmp
addr16
decb
sub
lds
ret
xor
loope
icebp
outsl
or
insl
out
rorb
out
inc
mov
pop
push
push
xor
inc
or
inc
mov
ja
sbb
pusha
cli
mov
mov
adc
bound
scas
jne
imul
lods
pushf
xchg
aad
xchg
cltd
mov
sbb
es
jb
add
stos
or
push
pop
or
fidivrl
sbb
mov
xor
or
sub
xchg
and
shl
adc
xchg
inc
les
iret
xchg
daa
adc
lea
fwait
cmc
mov
in
dec
imul
nop
cs
xor
aad
cmp
pop
out
or
or
sbb
push
cwtl
ret
mov
sbb
pop
sahf
ret
std
dec
test
outsl
pop
pusha
push
sbb
insb
sti
shrb
mov
incl
mov
cmp
loope
pop
mov
and
jp
sbb
insb
jmp
js
ret
cmpsl
push
cmc
cmp
dec
repz
test
inc
aam
cli
loope
xor
add
pop
int
mov
aas
mov
fisubrs
xchg
inc
shr
mov
insl
clc
jb
cltd
jns
or
mov
aas
out
jbe
sub
repz
jp
or
rcrl
jmp
add
dec
pop
push
mov
cmp
into
dec
adc
lahf
ret
sub
jns
shr
lea
adc
adc
dec
lcall
pop
jmp
repz
mov
fnstenv
xor
add
mov
int
rolb
popa
xchg
sbb
adc
adc
aas
cmp
mov
mov
stc
pusha
int
xor
push
cmp
xchg
jns
push
mov
and
inc
xchg
cltd
add
ljmp
xor
pop
subb
dec
sub
mov
outsb
loope
rcr
and
or
movsl
xchg
dec
xor
cltd
decb
push
mov
inc
add
stc
bound
outsb
mov
xchg
mov
test
jl
or
aas
fs
mov
cwtl
pushf
inc
xchg
repz
mov
fnsetpm(287
dec
sbb
lods
movsb
mov
lahf
stc
mov
inc
lods
shlb
int3
ret
shlb
orl
popa
push
and
nop
cmc
repz
xchg
jne
out
dec
ljmp
sub
inc
push
mov
dec
jp
dec
xor
xor
adcl
cmpl
and
jno,pn
test
mov
mov
dec
push
lea
dec
fisubl
fidivs
pop
jne
dec
or
lcall
es
stos
outsl
jae
jecxz
xchg
dec
mov
mov
insb
enter
mov
push
loop
imul
sub
push
out
inc
jo
and
sti
dec
adc
cmpsb
push
not
out
mov
nop
sbb
cmpsl
pop
xchg
push
faddl
pop
pop
dec
adc
aad
je
std
aam
in
ficoml
int
call
mov
sbb
xchg
rolb
mov
stos
mov
lods
jl
pop
lret
mov
lock
push
in
adc
out
fnstcw
out
inc
call
xchg
mov
dec
push
bound
jno
sbb
xor
loopne
push
and
cld
je
push
push
ret
mov
pop
repnz
fmull
and
and
sbb
sbb
fdiv
and
mov
xor
notb
dec
lcall
test
subl
hlt
xchg
jg
jnp
enter
enter
cmp
dec
int
cwtl
inc
cmp
sar
and
push
cwtl
xchg
test
dec
mov
push
cmp
pop
mov
imul
cmp
aad
mov
pop
das
pop
pop
adc
and
insb
cmpsl
scas
or
repnz
jl
repz
pop
testb
fistpl
cs
sahf
xchg
and
mov
inc
int3
mov
ds
inc
mov
inc
inc
aaa
jno
sahf
popa
dec
inc
div
push
popf
mov
jge
and
nop
add
inc
adc
xor
push
fld
cmpsl
sbb
lahf
scas
cmp
mov
cli
scas
insb
push
cmpsl
push
mov
dec
ret
lods
scas
cmp
dec
clc
fnsave
in
mov
xlat
jp
pop
push
call
sub
or
addl
ds
add
cmp
fcoml
test
inc
mov
sub
test
int
dec
push
mov
lock
adc
jae
add
mov
xlat
insb
fsubrs
mov
jno
sbb
pop
mov
jne
mov
add
jns
and
inc
insl
das
dec
adcl
rorl
and
push
lcall
stc
jle
test
jno
stos
xchg
jecxz
cmp
loope
adc
out
fdiv
fwait
xor
test
push
js
mov
add
inc
adc
negl
lahf
lock
sbb
sbb
out
jo
out
jecxz
pop
cmpsl
or
mov
add
imul
test
dec
sbb
pop
scas
or
add
jp
cltd
add
and
insl
xchg
out
sub
push
sti
sub
pop
inc
adc
sub
adc
sub
mov
add
icebp
cmp
sbb
add
pop
gs
ret
in
sbb
addb
mov
add
icebp
nop
out
or
jle
pop
inc
xor
lret
data16
push
ds
insb
xorl
ret
clc
nop
shufps
out
dec
cmp
xchg
add
out
inc
cmp
push
add
lock
test
rcr
adc
and
xchg
call
je
pop
mov
pop
in
sub
orl
rcrl
test
mov
les
cmp
and
in
xor
sbbb
mov
xlat
pmaxub
cmp
pop
push
mov
pop
leave
loopne
jno
dec
adc
and
dec
scas
sahf
sbb
inc
xchg
mov
mov
pop
inc
subb
add
mov
cmova
dec
pop
xor
js
call
in
xchg
or
and
loop
aam
adc
push
inc
andl
pushf
loop
xor
mov
outsl
mov
aas
js
movsl
jne,pn
in
adc
test
dec
imul
pop
xor
mov
sbb
mov
pop
xchg
mov
cs
jnp
je
mov
add
xchg
pop
repnz
insb
jno
roll
mov
mov
jbe
jbe
ret
fcmovnb
lea
sub
add
jno
and
gs
add
pop
ret
mov
adc
fs
xor
or
and
cmp
sub
xlat
cmp
lods
adc
ds
mulb
pop
pop
push
lcall
test
repnz
fcoms
mov
and
pop
sbb
push
adc
jo
xor
bound
dec
in
addl
pop
cmpsb
mov
outsb
mov
ret
mov
mov
fstps
inc
sbbb
rclb
loope
xor
mov
add
stc
or
cmp
cmp
in
jp
dec
mov
inc
mov
test
xchg
ret
pusha
jns
jecxz
bnd
cmp
icebp
jg
dec
iret
hlt
push
push
mov
xchg
and
scas
adc
mov
add
lret
gs
adc
mov
and
lds
or
aad
sub
pop
cwtl
cmp
inc
mov
enter
xor
add
add
sub
loop
pop
cmp
adc
cmp
cmp
and
jae
mov
xchg
jmp
lods
jp
adc
add
imulb
lds
rcll
xor
cmp
icebp
insb
or
movsl
mov
std
xchg
icebp
out
xchg
sbb
inc
loop
sub
scas
push
adc
mov
cmp
push
inc
mov
dec
pop
mov
pop
lcall
rcrb
push
std
stos
lods
dec
adc
mov
pop
lcall
nop
fistps
mov
mov
or
sbb
bound
push
pop
fldenv
addw
pop
out
adc
icebp
ja
mov
sbb
inc
mov
in
pop
mov
mov
xor
rolb
xchg
pop
insb
xchg
jb
inc
push
lret
sahf
stc
pop
add
mov
add
xor
mov
lds
push
sti
sti
jmp
popf
jne
lcall
xchg
dec
shl
mov
out
or
xchg
dec
push
push
mov
dec
xor
and
stc
dec
daa
jo
adc
mov
in
push
add
ds
pop
adc
xchg
dec
mov
xchg
and
mov
pop
cmp
inc
lret
ja
jl
sahf
mov
fbstp
jnp
or
jge
and
scas
cmc
pop
xor
mov
sbb
sbb
cld
add
cmpsb
aam
stc
idiv
ja
xchg
or
sub
dec
int3
dec
je
sub
add
cmp
shrl
cmp
ret
adc
mov
pop
and
xor
orl
cltd
dec
jp
shll
repnz
xchg
mov
jns
ret
adc
stos
cmp
fisttpll
pop
jbe
pop
fists
inc
imul
sub
push
adc
popl
cmc
dec
lock
jb
inc
pop
iret
cwtl
jp
jo
dec
in
int3
xor
daa
not
in
cmp
mov
adc
incl
xorb
inc
push
into
sbbb
jecxz
fcomi
mul
add
push
push
jle
jg
add
xor
push
lret
jmp
cmp
sti
jno
icebp
inc
outsl
adc
push
xchg
das
js
test
mov
ror
testl
sahf
out
pmullw
pop
clc
outsl
sub
push
pushl
mov
mov
mov
pop
mov
loope
lods
ja
out
vbroadcastf64x2
das
sbb
stos
or
rorl
and
jo
hlt
fistpll
aaa
lds
fcmovnbe
cmp
jp
push
lods
out
fldl
leave
pusha
rcrl
jecxz
push
sub
aam
adc
std
cmp
fistl
stos
pop
jo
push
jecxz
ljmp
xor
lods
mov
pop
and
out
imull
in
mov
mov
cmp
es
cld
movsl
mov
fcoml
ss
and
nop
mov
cmpsl
mov
adc
cmp
cli
movsl
leave
icebp
lds
xor
adc
sub
movsb
push
es
xor
push
adc
enter
or
rcll
pop
xchg
insb
addr16
jbe
jo
pop
mov
sbb
popa
or
cltd
mov
dec
dec
cmp
dec
gs
repnz
pop
inc
mov
sub
mov
inc
out
and
sbb
movsb
stos
pusha
dec
insb
push
cmp
test
xchg
sbb
push
jle
sbb
pop
cmp
mov
clc
xchg
jl
pop
mov
add
xor
imul
mov
ss
mov
rcrb
in
stc
mov
add
mov
jnp
jl
adcl
fstpl
test
xchg
shr
iret
idivl
mov
dec
mov
and
xchg
add
pusha
rcll
mov
insl
sbb
subb
push
or
sub
push
mov
je
mov
test
or
mov
xchg
mov
dec
jno
adc
out
mov
adc
xchg
sub
add
lret
pop
fsubl
test
scas
xor
mov
mov
push
jg
in
sub
cs
addb
jne
cs
xlat
cltd
or
xchg
dec
pop
mov
in
pop
pusha
repnz
inc
push
jle
test
pop
dec
fists
loope,pn
lods
mov
shrl
jmp
push
mov
sahf
push
mov
adcl
pop
dec
sti
test
jg
inc
adc
aaa
jae
pop
mov
mov
xchg
sbb
es
and
jp
out
scas
adc
inc
jo
inc
or
fisttps
jb
insb
push
pop
shrb
add
fldt
jg
pop
xchg
fistpll
lock
loop
movsl
and
add
pop
adc
dec
inc
dec
pushf
cmp
fiaddl
adc
test
jns
or
push
inc
rcrl
fsubrs
push
push
in
enter
in
loop
lods
insl
sub
and
and
fcomp
divb
adc
mov
shrb
cmpsb
mov
xor
jge
jp
sar
xlat
aas
mov
iret
mov
and
imul
and
stos
cmc
jmp
push
imulb
js
lea
notl
push
ficompl
mov
sub
dec
pop
and
ja
dec
js
xor
pop
scas
shrl
fwait
sub
les
cmp
jno
inc
lcall
cmp
mov
push
add
pop
xor
ficompl
jnp
mov
xchg
push
fwait
movsl
dec
int3
jns
jb
cmpsb
or
sub
xor
repz
imul
pop
mov
xchg
fdivrp
cs
xchg
lret
push
adc
and
pop
fwait
test
jne
lock
jg
sbb
sbb
daa
movsl
cmc
push
cwtl
xchg
lcall
sbb
mov
or
or
cmpsb
xor
cmpsl
dec
xchg
mov
je
movsl
xor
adc
inc
dec
or
ret
shll
mov
xchg
mov
mov
mov
ss
add
das
pop
enter
movsl
rclb
je
mov
es
movsl
insb
sbb
add
push
clc
cmp
or
pop
mov
ret
mov
xchg
js
mov
mov
jle
mov
mov
mov
filds
and
mov
fnstcw
push
out
hlt
inc
sbb
ficoms
cld
and
stos
pop
stc
or
jns
sbb
adc
lret
sub
push
sub
mov
insb
fdivr
mov
inc
lock
ficoms
push
pop
mov
mull
push
xchg
dec
stc
mov
sar
pop
sub
pop
testb
test
out
inc
xor
orl
adc
lock
outsl
jns
add
sub
pop
pop
lret
sbb
jo
popa
idivb
fcompl
imul
cmp
jns
adc
xor
sub
lret
enter
sbb
push
pop
das
test
in
lea
jge
sbb
dec
pushf
jno
fldcw
pop
ja
scas
dec
ja
stos
jns
xor
sbb
sbb
add
in
push
lock
pop
inc
xor
scas
mov
mov
pop
leave
jbe
int
stos
notb
inc
sbb
addl
push
adc
inc
adc
push
mov
clc
push
push
movsb
jecxz
add
inc
sub
sbb
mov
std
and
sarl
data16
int3
or
sti
pop
mov
dec
cmp
fildl
inc
cld
clc
jnp
int3
scas
cmp
movsb
test
stos
dec
loopne
daa
or
clc
pop
push
lahf
pop
sub
fildll
fs
arpl
ret
cmp
push
sbb
fnstcw
enter
cltd
push
outsb
lcall
push
pop
pop
or
stos
jbe
xchg
dec
sbb
push
outsb
test
add
fdivp
addl
lcall
iret
sbb
int
icebp
data16
popl
call
pushf
fidivl
jmp
jb
pop
push
arpl
xchg
pop
mov
push
add
mov
out
mov
aas
in
or
or
imul
sub
adc
push
scas
xor
sub
lock
notl
mulb
push
adc
sub
in
pop
pop
adc
test
push
sbb
lret
sbb
sbb
xchg
fsubs
mov
sbb
pop
lea
jns
negl
pop
jge
inc
out
xchg
in
pop
ja
or
cmc
loop
in
cmp
rcr
sti
xchg
je
inc
sub
pop
icebp
rcr
lock
and
pop
mov
sbb
loope
jg
mov
pop
dec
inc
mov
cmp
mov
push
or
and
adc
push
movsl
repnz
cmpsl
pandn
push
mov
pop
shlb
and
xchg
or
lds
and
lods
push
repz
rclb
pop
ret
jle
cmpsl
in
and
cld
scas
iret
in
aas
xor
jbe
cli
mov
mov
les
mov
and
cmp
js
imul
mov
cmp
add
cmc
lods
jbe
xchg
das
push
or
loope
std
lahf
movsl
dec
add
icebp
ret
jmp
fisttpl
adc
xchg
push
sbb
push
sub
pop
pop
xor
add
scas
mov
push
mov
xchg
pop
not
lock
mov
xchg
push
add
insb
insl
cmp
mov
pop
mov
dec
sub
fwait
out
xchg
mov
inc
pop
orl
mov
stos
inc
sub
xchg
sbb
lds
and
icebp
mov
das
dec
sarl
loopne
shlb
mov
sub
or
je
mov
clc
mov
je
dec
and
ss
fisubrs
push
loopne
mov
imul
lds
push
xor
aad
mov
filds
imul
xchg
jnp
sub
lods
adc
stos
rclb
mov
mov
sbb
add
data16
pop
in
mov
sbb
in
fdivl
push
sbb
push
fsub
dec
lods
add
adc
add
lea
ss
sahf
movsl
les
dec
or
shll
stos
mov
sub
popf
add
cmp
or
mov
orl
cmp
xchg
pusha
dec
pop
shrb
stos
fcoms
fsts
xor
cmp
dec
rclb
xchg
push
sahf
mov
pop
xchg
pop
mov
fdivl
cmp
pop
xchg
cld
fnstcw
add
mov
xor
int
lods
outsl
mov
sub
mov
subb
mov
sub
dec
push
and
mov
jp
add
and
aaa
ss
add
mov
mov
popa
cmp
push
and
notb
push
fdivr
dec
dec
xchg
mov
xchg
neg
jecxz
rcr
movsl
sbb
test
push
push
cmp
je
mov
dec
ja
mov
sub
leave
xchg
sbb
test
inc
stc
push
push
fs
pop
jmp
insb
pop
stos
in
leave
iret
push
lret
xor
jae
out
jae
push
adc
adc
aas
add
mov
cmp
cld
mov
les
fists
push
or
fcos
data16
xor
push
mov
push
das
pop
nop
or
lea
cltd
pop
xchg
jb
inc
cmpsb
pusha
adc
int
adc
in
add
cmpb
adc
nop
test
loopne
repnz
sub
adc
cmp
nop
pop
nop
lret
mov
repnz
jbe
inc
jb
nop
xchg
xor
leave
push
sub
adc
adc
sbb
xchg
inc
subl
or
movsb
repnz
dec
cwtl
cs
xchg
in
jmp
xchg
inc
cli
xor
rorl
inc
sub
lcall
stc
mov
cld
add
inc
mov
mov
mov
or
pop
ljmp
mov
fwait
pop
sub
in
mov
mov
fcoml
cmp
in
mov
mov
idivl
addr16
movsl
inc
or
mov
pusha
cmp
inc
or
in
lds
xchg
dec
jle
addb
popf
lret
jb
mov
mov
shll
les
adc
sub
daa
clc
movsb
fnstenv
add
dec
mov
adc
or
adc
sbbb
xchg
lcall
loopne
sahf
stos
stos
adc
cmc
pop
jecxz
bound
leave
pusha
pop
rcrl
xchg
xchg
stos
cmp
xchg
lods
lock
fcmovu
or
sub
ret
es
or
insb
jge
test
lock
testl
loop
mov
inc
xor
insl
adc
les
pushf
sub
mov
jge
sbb
lcall
sbb
cmp
lods
mov
pop
adc
add
mov
nop
lea
scas
sbb
test
repnz
shll
xchg
add
test
fs
mov
pop
in
stc
loopne
mov
movsl
das
sub
mov
inc
xchg
in
jmp
push
mov
pop
mov
popl
push
in
ss
jg
fnstsw
negl
test
mov
fstl
or
test
jmp
loopne
daa
test
ja
fstpl
push
sbb
jmp
std
fstpt
mov
push
imul
pop
jmp
xchg
jl
and
mov
popl
xor
jne
out
xor
jb
inc
pop
inc
jmp
push
mov
sbb
pop
sbb
push
mov
sub
test
test
in
out
ror
mov
in
pop
enter
push
js
jne
pop
std
fimuls
lahf
xchg
scas
js
dec
or
gs
sbb
lret
je
in
xchg
pop
push
mov
xchg
out
or
push
cltd
rclb
push
test
pop
inc
sub
pop
inc
notl
je
xchg
dec
jnp
out
shl
sbb
cmpsb
hlt
imul
outsl
cmp
loop
pop
rorl
out
lcall
mov
dec
pop
xor
jne
cmpsl
lods
nop
push
and
xlat
sbb
outsb
pop
pop
jmp
int3
sbb
movsl
movsl
inc
adc
xor
repz
add
loop
dec
ret
jns
xor
pop
loope
mov
pop
ficompl
and
add
push
add
aad
int
mov
add
cmp
push
adc
js
mov
cld
stos
fmull
pushl
loopne
orb
fdivr
rcrl
mov
dec
addr16
gs
mov
cmc
outsb
push
inc
or
enter
xor
cmp
mov
flds
mov
clc
cli
push
push
insb
mov
cmp
cltd
aam
push
sub
xchg
and
lret
hlt
lds
test
scas
adc
mov
sub
les
push
nop
cmp
js
outsl
ja
loop
pop
adc
cmp
in
addr16
add
lock
outsb
nop
mov
cmp
daa
cmp
stos
cli
ja
mov
lret
sahf
pusha
xor
ds
rclb
adc
pop
cmp
push
lcall
aad
aam
sub
lods
or
xor
loop
pop
loop
js
xchg
call
inc
adcb
repz
sbb
icebp
or
xchg
fs
sbb
adc
inc
sbb
sub
je
jg
pop
or
cmp
insb
xchg
lods
pop
test
stos
rol
dec
ja
mov
mov
out
cmp
mov
or
add
dec
sbb
hlt
shl
pop
lret
fcomps
lea
push
xchg
insb
sub
std
cmp
push
mov
cmpsb
cmc
lods
mov
in
repz
jecxz
or
xor
scas
sub
push
jp
xchg
inc
fs
sbb
sbb
fildll
pop
and
xchg
mov
mov
popf
and
push
ret
lock
mov
push
sub
pop
shll
aam
out
aad
or
das
jge
adc
mov
inc
cli
lds
popf
mov
scas
in
push
nop
iret
dec
mov
fisubrs
leave
pop
inc
es
icebp
cltd
imul
ret
adc
pop
test
push
adc
jns
scas
imul
into
and
cmp
and
and
les
sbb
or
xor
popf
jmp
ja
mov
sub
jge
mov
dec
sub
adc
mov
xor
sbb
inc
fisubrs
or
and
push
lea
insl
mov
adc
pop
or
and
aam
adc
mov
adc
cmp
lock
dec
jle
out
mov
and
gs
sbb
lods
sub
icebp
cs
in
push
in
adc
adc
out
add
cmp
sahf
jo
in
inc
bound
sbb
xor
xchg
cmpsb
das
aas
jo
sub
mov
dec
lea
shll
cld
scas
dec
in
or
add
and
mov
loop
in
dec
lea
out
inc
adc
xor
fsubl
xor
xchg
inc
or
into
repnz
popf
mov
bound
push
dec
pop
out
inc
push
icebp
aad
les
push
dec
mov
fistpl
or
cltd
and
cmp
mov
in
inc
fldt
jno
adc
orl
sbb
lahf
dec
inc
outsl
push
sub
int
das
push
inc
and
xchg
xchg
pop
dec
xchg
dec
add
sub
push
adc
xchg
arpl
lcall
call
mov
mov
test
test
filds
add
inc
arpl
mov
and
pushf
push
addl
rclb
arpl
sbb
push
jns
daa
push
push
sub
lods
leave
dec
pop
ret
dec
jae
xlat
xor
fadd
js
xor
pop
sarb
xor
es
adc
sbb
and
xlat
scas
aam
sbb
daa
icebp
addr16
int
sub
or
and
divb
fcompl
aad
and
pop
push
pop
out
push
aam
js
out
roll
ficomps
inc
xlat
mov
pop
cli
je
cld
and
cmp
dec
jp
insb
imul
bound
adc
arpl
mov
dec
pusha
pop
scas
dec
push
dec
jp
int
clc
fstpl
dec
into
add
in
mov
in
out
fwait
test
imul
push
and
fwait
out
sub
int3
test
push
repz
fldt
outsl
mov
rcrb
dec
pop
xor
jo,pn
push
fistpl
dec
push
das
lods
xor
pop
mov
dec
stos
out
push
mov
or
mov
mov
pop
or
push
fidivs
hlt
xlat
stos
jecxz
loopne
in
in
xchg
push
inc
pop
add
sub
adc
inc
and
pop
sti
repz
fs
pop
lret
adc
incb
notb
lods
leave
sti
xchg
adc
outsb
bound
sbb
push
xchg
imul
push
add
adc
loope
div
inc
mov
fsubrp
gs
cmp
cmp
jle
sub
data16
mov
inc
cmpsb
xchg
insb
mov
add
adc
pushf
inc
inc
xchg
sub
ret
cmp
cmp
loop
lds
push
ret
push
add
data16
int3
mov
repz
loopne
data16
or
hlt
out
cmpsb
sbb
test
sub
sub
pop
nopl
push
cmp
cwtl
cwtl
xchg
repz
lret
dec
xchg
cmpsb
lods
mov
mov
fmull
lcall
push
and
into
pushl
scas
mov
pop
insl
inc
adc
shr
inc
or
adc
nop
mov
dec
mov
jns
das
adc
mov
cmp
loope
jg
out
push
mov
fcoml
lcall
sub
loopne
clc
outsl
add
fmull
fwait
data16
rep
push
popl
lods
add
sbb
movsb
nop
dec
sbb
cmpsl
sti
add
inc
lret
shlb
mov
cwtl
movsb
ficomps
movsb
inc
lcall
fucomp
add
add
adc
and
test
pop
ljmp
push
loop
jge
mov
cmp
adcb
inc
xchg
adc
fsqrt
stos
mov
push
test
mov
jge
adcl
mov
pop
out
mov
xor
cmp
aad
pushf
lcall
aaa
lahf
cmp
and
pop
lahf
js
faddl
inc
cmp
jno
iret
aas
clc
orl
mov
sub
imul
pop
in
test
xchg
and
pop
mov
mov
xchg
jno
cmp
xor
cmp
adc
push
scas
aam
mov
or
addl
das
aaa
orl
cmp
loop
sub
in
repnz
push
fidivl
lods
jno
iret
movsl
jl
pushf
in
pop
add
pusha
cltd
js
sbb
jl
call
popf
enter
sbb
adc
addl
xor
popfw
xor
in
pop
adc
mov
ss
icebp
scas
adcb
or
add
pop
pop
mov
mov
lcall
sub
sbb
pushf
and
js
mov
sub
jmp
mov
call
inc
fcoms
mov
movsl
dec
and
pop
sarl
or
sbb
pop
sub
mov
and
lret
mov
cmpsl
sub
mov
inc
dec
ret
ljmp
push
aas
mov
insb
iret
mov
or
push
sbb
sub
push
push
rorb
xor
nop
sub
enter
sbb
sahf
ljmp
jg
ds
jo
mov
sub
xor
fisttpll
sbb
scas
cltd
cmp
aaa
add
clc
or
dec
cmp
and
fiaddl
stos
mov
or
mov
repz
shlb
push
dec
jo
test
add
pop
adc
fwait
add
iret
repnz
hlt
mov
jle
call
push
push
pop
mov
cmpsb
add
into
rcrl
push
jl
inc
in
test
xlat
jle
jbe
jge
in
shl
sbb
cmp
push
fdiv
xor
fmull
outsl
xor
add
mov
xor
jae
adc
sbb
test
ficompl
xor
xorb
sub
sub
or
push
imul
and
aas
inc
cmp
mov
std
lods
jl
push
cli
push
mov
jg
std
inc
push
call
mov
cmpsb
inc
jmp
jmp
dec
daa
sub
mov
push
mov
fdivl
sub
or
ret
or
add
shrl
xor
sub
xor
mov
shrb
mov
or
inc
aam
cmp
adc
vcvtdq2ps
lods
test
cmc
jns
test
adc
push
test
inc
pop
icebp
add
adc
rclb
imulb
dec
xchg
fcmovnbe
adc
sti
in
sbbb
or
lea
es
fmull
xlat
es
mov
push
cmp
xchg
testb
stos
in
adc
repnz
fnsave
jo
mov
dec
int
mov
xchg
cmp
pop
push
adc
inc
ret
cwtl
or
cmp
cmp
in
shll
test
mov
dec
popf
xchg
insl
int3
lds
or
stos
or
jae
push
bound
jb
loope
test
mov
cmpl
sti
add
insb
sub
in
enter
jnp
push
lods
inc
mov
push
sub
cmp
and
in
mov
inc
cmp
or
mov
iret
mov
int
movsl
xchg
push
inc
dec
jge
clc
rep
fwait
mov
dec
mov
push
andb
fwait
enter
popa
icebp
push
pop
sub
dec
ja
mov
in
fmul
or
xor
jl
js
pop
mov
mov
stc
pop
pop
xor
cmc
sub
xor
cmp
inc
mov
sbb
insl
jp
dec
pop
movsb
mov
test
lahf
xchg
out
pop
jb
and
ds
addr16
pushf
pop
shrl
outsb
push
into
addr16
jp
xchg
out
ret
ret
imul
mov
addr16
fsubl
fmuls
ret
loope
sar
scas
fildl
adc
jno
sub
ret
xchg
xchg
sarl
mov
dec
sahf
or
pop
mov
lret
movb
pop
lcall
pop
jae
movsb
cmc
mov
sbb
out
out
out
push
mov
test
sbbb
cmp
hlt
in
add
into
cltd
cs
mov
stc
or
repz
int
xor
ret
aam
add
inc
sub
addb
sbb
lock
enter
jecxz
inc
in
pop
dec
mov
xchg
in
cmpsb
in
add
fisubs
popf
es
lahf
scas
inc
cli
sub
mov
fnstcw
xchg
int3
in
int3
push
xchg
orl
dec
sbb
imul
mov
and
jo
xlat
js
cmp
pop
xchg
xchg
std
cmc
hlt
fdiv
daa
cld
cld
pop
jo
adc
xor
xor
sbb
inc
mov
pop
out
sub
stc
mov
xor
dec
add
cmc
aaa
hlt
xchg
dec
add
xchg
ljmp
dec
pop
mov
push
jo
push
adc
sub
push
push
mov
xor
adc
push
inc
lock
sub
cmp
jo
push
clc
add
jle
iret
and
mov
leave
int3
dec
inc
iret
mov
pop
and
sbb
mov
pushf
test
loop
ja
and
push
add
and
ret
add
mov
aaa
leave
or
cmpsl
pop
loop
sbb
or
push
jb
add
pop
into
jne
in
sbb
inc
iret
fwait
incl
or
jnp
lds
mov
add
xchg
jno
dec
jge
movsl
mov
fdivrl
mov
pop
into
mov
cmp
inc
adc
lods
in
mov
fdivs
ror
add
cmp
nop
or
test
xlat
mov
into
xor
dec
pop
popf
and
mov
jo
sub
or
push
inc
add
pop
cli
outsl
call
jns
push
mov
loopne
push
pushf
iret
lahf
or
jmp
lret
mov
aas
sahf
push
inc
mov
sub
xor
pop
jmp
in
scas
cwtl
cmp
sub
das
int
xor
roll
sub
lock
xor
push
orl
in
mov
loopne
daa
push
jnp
cmpsb
lret
cmp
pop
and
int
rcrl
mov
decb
jno
and
dec
push
movsl
scas
ret
mov
out
ror
and
jo
sbb
xchg
pushf
inc
adc
xchg
xchg
rol
fisubrs
inc
test
lods
dec
sbb
and
scas
cmp
jae
ficompl
lds
mov
repnz
fstpt
fstps
push
cmpl
sar
inc
add
sub
popf
push
inc
inc
sti
hlt
push
push
mov
mov
daa
push
inc
addr16
pop
push
out
push
shll
pusha
fbld
dec
imul
xchg
repnz
scas
dec
xor
daa
call
inc
int
pop
pop
sub
pushf
loopne
clc
adc
loopne
xor
inc
mov
and
sbb
cltd
sbb
sbb
popa
add
hlt
pusha
test
sbb
sti
pop
clc
pusha
xor
mov
add
outsb
movsw
mov
xchg
push
adc
dec
xor
bound
mov
daa
xor
mov
mov
ret
xchg
push
fstps
or
push
mov
lock
fwait
dec
and
test
cmp
xor
xor
push
jmp
inc
ret
jo
cmpb
mov
sub
mov
je
push
and
fwait
test
int3
or
lret
loopne
inc
rolb
jg
adc
cmp
jp
rorl
in
out
push
mul
or
movsb
jnp
pop
test
or
xchg
es
xor
add
daa
loopw
test
loopne
add
repz
jle
add
fmul
lret
sub
arpl
fcoms
mov
inc
ljmp
dec
xor
pop
mov
fs
mov
or
addps
rcr
into
adc
xlat
popa
jnp
push
push
test
mov
dec
dec
push
fdiv
dec
lahf
scas
arpl
lret
js
inc
call
dec
or
sbb
fnstsw
hlt
pop
out
pop
loopne
das
jns
arpl
data16
pop
ret
inc
add
xor
jo
inc
dec
fsubrs
inc
add
sub
mov
push
jne
mov
cmp
ja
fcmovnu
fmuls
movsb
out
jb
pop
out
jno
jne
xlat
sub
mov
dec
cld
sbb
mov
js
and
jge
jmp
add
push
push
imul
cmpsb
loope
sbb
imul
cmp
pop
mov
test
pop
inc
or
or
les
sbb
movsl
outsl
cmpb
leave
jg
clc
cmp
daa
ret
add
adc
clc
roll
push
sbb
add
popa
inc
push
xchg
push
inc
fwait
adc
push
mov
jae
mov
dec
pusha
dec
mov
add
loop
pop
push
inc
pop
bswap
jne
in
stos
stos
or
ljmp
pusha
testb
decb
popf
and
outsb
pop
in
ljmp
mov
jle
xchg
stos
fdivl
aas
cld
add
outsl
add
xchg
jb
movsb
sub
adc
test
sub
dec
into
sbb
arpl
imul
movsb
cltd
ss
mov
in
sub
xor
adc
lods
lret
adc
inc
testl
mov
addl
mov
push
pop
and
and
test
popa
in
add
cs
lcall
push
adc
out
add
sbb
sub
fs
jb
cmp
pushf
leave
mov
jne
fcomp
jb
push
inc
movsl
push
cmp
stos
iret
cmp
adc
mov
cmpsl
scas
sub
xchg
mov
add
out
dec
cmc
fbld
outsb
test
push
mov
test
sub
mov
cmp
push
hlt
mov
fisttps
cmp
sub
add
adc
dec
cmp
push
idivl
cli
test
cmp
push
dec
cmp
ss
adc
out
inc
sbb
jo
sahf
movsb
test
add
cmp
cli
out
pop
pop
pop
xor
add
inc
xorl
cmc
cmpsb
push
loopne
shlb
sar
push
lods
and
repz
add
popf
jbe
and
cmp
add
jge
test
std
lods
push
cmp
or
add
shl
pop
lret
jbe
sub
push
inc
pop
dec
enter
mov
leave
test
push
jno
int3
adc
icebp
repz
jno
fwait
add
fcompl
xor
dec
into
push
mov
popa
cltd
daa
mov
push
pop
outsb
push
cmp
jg
adcb
fisubrs
data16
stos
test
pop
ror
sti
imul
sub
lea
into
js
clc
jno
mov
inc
add
inc
cmp
stos
xchg
xchg
les
daa
outsl
mov
add
adc
pop
lock
into
movsl
cmp
mov
xor
or
orl
dec
dec
leave
jg
mov
mov
mov
mov
sub
fcoml
pop
xchg
into
testb
psrad
xlat
push
gs
out
out
mov
mov
sub
cmc
mov
int
das
outsl
add
imul
push
insl
frstor
mov
in
pop
jge
rol
inc
mov
fwait
outsb
cmp
jle
nop
scas
xor
stos
push
xchg
stos
sbb
push
jecxz
gs
cli
cmp
into
imul
into
add
mov
sbb
notb
xor
mov
jg
xchg
jne
pop
and
mov
jnp
aam
mov
mov
jno
sbb
adc
sub
and
pop
inc
pop
sbb
fdivrp
int
dec
mov
lret
call
sub
pushf
aam
int3
push
jae
jae
push
xor
push
sub
cmp
rcrb
les
jbe
sub
in
loop
mov
fmull
int3
or
dec
jbe
dec
add
dec
popa
divl
jle
jno
mov
sub
sub
mov
jg
mov
daa
ret
lods
mov
inc
into
mov
ds
lcall
xor
dec
inc
lret
and
mov
fildll
mov
pushf
out
xor
mov
xchg
notl
cmp
das
push
inc
pop
jmp
inc
sub
pushf
pop
jne
mov
inc
sub
loope
das
fwait
jno
lock
sub
xchg
cmpsb
mov
cmp
push
and
sti
cld
rcll
fidivs
in
stos
sub
xor
call
xchg
repz
sbb
pusha
mov
mov
push
jp
mov
or
xchg
mov
sysexit
leave
pop
not
lret
xor
jae
cli
cmp
rorb
dec
pop
enter
movsb
sbb
pop
mov
mov
inc
sarb
fstps
sbb
lea
push
dec
xchg
in
movsl
sub
pop
cmp
shl
xlat
sub
mov
sti
add
lahf
negl
pop
das
insb
clc
enter
fbld
pop
jmp
push
cmp
push
outsl
push
sbb
icebp
mov
mov
and
mov
xor
lret
pop
stc
ss
out
xchg
cltd
popa
jae
stc
in
xlat
xchg
jne
xchg
and
jecxz
cmc
push
cmpsb
ja
sub
mov
xchg
popa
nop
mov
cs
shll
sub
mov
push
mov
cmp
aad
bound
outsl
push
lds
ja
xchg
xlat
add
fs
and
xchg
mov
xchg
jle
into
cmpsl
popf
or
ret
test
push
xor
mov
sub
popf
push
cmp
mov
jle
lods
mov
sbb
cmp
mov
ficoms
xchg
loope
sub
lea
sar
xor
in
inc
dec
shll
repz
pop
mov
or
push
sbb
mov
sbb
inc
push
sub
xor
cmp
pop
adc
xchg
insb
mov
rorl
ret
or
ret
mov
cltd
in
mov
rcrl
or
adc
outsl
sub
das
and
rcrl
test
push
jbe
mov
into
ss
cmpsl
jl
push
popf
cmp
dec
outsl
cmc
inc
in
add
and
movsb
les
jnp
popa
fsubrp
fwait
test
add
xlat
lret
inc
xchg
ret
sbb
pop
cli
bound
or
movsl
sub
sti
leave
sbb
jbe
add
and
cmp
aam
rol
les
cmc
lock
loopne
movsl
xor
pop
xchg
out
repz
loopne
or
ret
xchg
cmp
outsb
mov
push
mov
pop
add
in
push
xchg
jecxz
pop
test
sbb
xchg
fldenv
pop
shll
and
cltd
sbb
pop
mov
cmp
pop
lcall
mov
xchg
lret
mov
adc
push
or
and
cmp
jae
inc
xor
mov
lahf
jp
cmp
shlb
adc
mov
jmp
cmp
jmp
and
jb
sbb
fstl
lods
mov
stos
cltd
pop
shrl
insl
xchg
nop
pusha
mov
adc
fcmovnb
sub
fimuls
es
out
inc
aaa
call
push
sub
push
sbb
jp
std
jae
movsl
leave
add
inc
cmp
sti
jge
xor
xor
outsb
jno
ljmp
push
test
pop
shrb
xor
fstpl
call
mov
dec
mov
stc
cmp
mov
repnz
les
mov
pop
pop
cmp
cmp
xor
ret
outsl
flds
jp
jmp
mov
test
xchg
subl
imul
and
adcl
fidivrs
mov
pop
jo
dec
add
or
lahf
ja
sub
movsl
and
sbb
ret
popf
push
in
mov
push
js
mov
jbe
scas
adc
lcall
sub
fisubs
imul
inc
pop
incb
add
push
lds
fs
pop
dec
imul
xor
loopne
in
and
mov
fadds
stos
jb
mov
and
lods
mov
dec
jnp
push
js
inc
xor
dec
testl
inc
xor
mov
ret
addl
movsl
std
jp
sbb
pop
in
mov
cs
fnstcw
mov
daa
sub
scas
push
rcr
pop
out
sub
add
sub
icebp
lock
jns
addl
clc
outsl
pop
mov
fs
aam
jo
or
xor
mov
jae
cld
iret
out
fisubrs
push
ljmp
sub
lock
sbb
clc
lret
cld
mov
loop
inc
mov
pop
aam
add
mov
jmp
push
and
sbbl
mov
insl
in
pop
ucomiss
out
mov
std
jb
xor
push
jns
adc
shll
dec
cmpsb
fstpt
push
jmp
push
sub
in
mov
cmp
mov
xchg
dec
sbb
push
in
pop
pushf
daa
or
cmp
dec
jb
call
fildl
test
jno
imul
jecxz
sub
sbb
lahf
inc
xor
ret
xchg
pop
sbb
mov
in
jl
mov
popl
bound
das
adc
orl
xchg
or
aaa
adc
mov
and
subl
mov
push
aaa
mov
push
rcrl
in
xchg
enter
pop
dec
mov
cwtl
jge
jne
push
jmp
fsubrl
adc
out
sbb
add
xchg
in
cmpsl
add
pop
add
das
lods
mov
xchg
xchg
push
les
pop
sti
jo
add
out
inc
ja
mov
test
push
inc
or
movsl
pop
mov
sarb
inc
iret
lea
bswap
push
out
mulb
dec
jb
push
repz
sub
push
int3
bnd
inc
xchg
mov
sbbl
sub
mov
ficomps
lret
das
mov
lret
sub
sub
jg
jne
xchg
dec
into
rolb
aam
out
sbb
adc
inc
adc
add
pop
adc
shrl
push
adc
lods
or
jmp
sub
lock
sti
mov
and
jle
sub
push
and
and
mov
jecxz
leave
mov
add
dec
enter
jne
mov
push
pop
mov
stc
call
icebp
icebp
fldt
loopne
js
dec
push
pop
lret
repz
cmpsl
jns
cmpl
loope
sub
and
sub
pop
inc
push
cwtl
stc
call
lds
les
ss
sub
bound
test
mov
and
xlat
int3
imul
xchg
dec
out
into
lahf
push
or
mov
clc
adc
out
push
or
push
sub
inc
inc
test
xchg
cmp
sbb
hlt
xlat
dec
sbb
mov
inc
mov
push
inc
arpl
enter
mov
inc
mov
bswap
inc
jmp
pop
push
test
push
push
int3
push
in
xor
test
jmp
jmp
mov
mov
or
ret
cld
std
lods
idiv
xor
cmp
mov
js
xchg
lock
or
mov
hlt
aad
js
xchg
call
push
xor
sbb
jns
push
mov
mov
cld
fldcw
cli
adc
outsb
or
or
leave
imul
push
daa
lea
loop
or
aas
push
cmp
sub
inc
loope
mov
lds
and
xlat
aas
out
mov
inc
getsec
lock
mov
fldl
lods
push
fimuls
testb
adc
push
dec
fldl
jg
call
inc
sbb
loop
fucom
daa
and
hlt
push
int3
mov
mov
inc
dec
scas
lea
pushf
shrl
lea
dec
push
sub
or
sti
pushf
outsl
sbb
dec
and
cmp
pop
push
lods
inc
inc
inc
xchg
mov
ret
icebp
and
sbb
out
ljmp
inc
mov
repz
data16
jp
cmc
fsts
xchg
and
shl
orl
call
mov
and
jecxz
insl
stos
mov
pop
les
push
loopne
lock
jo
xchg
vmread
mov
inc
and
pop
push
stc
int
cmpsb
push
into
data16
mov
mov
and
and
js
xchg
mov
fsubrl
jmp
ret
push
call
cmp
insl
ljmp
movsb
sbb
out
mov
or
inc
push
mov
or
aad
aad
mov
xor
mov
push
mov
push
outsb
out
xchg
in
xchg
xchg
inc
mov
inc
out
inc
mov
lds
or
mov
xchg
lcall
mov
dec
mov
inc
out
frstor
or
inc
xchg
ss
sub
push
xchg
sbb
lock
cmp
push
sub
mull
sbb
stos
icebp
or
lds
mov
jns
leave
and
and
popf
mov
imul
and
int3
test
arpl
cmc
insb
test
sbbl
xchg
adc
mov
movsb
pop
pop
jp
mov
test
xchg
jle
fidivs
cmp
lcall
dec
gs
xor
pop
mov
dec
or
inc
stos
dec
sub
push
repz
iret
out
fisubl
mov
leave
rorb
sub
push
in
xchg
jmp
and
scas
aad
xor
sub
jl
and
out
pop
cmp
jl
push
cmp
int3
push
call
push
sub
mov
jbe
and
test
push
mov
mov
jne
in
mov
gs
fst
loope
rolb
xor
mov
mov
dec
push
push
popa
mov
push
jbe
pushf
cli
adc
push
or
jmp
xchg
sbb
lret
arpl
pushf
xor
adc
push
and
adc
fnstsw
out
cld
jp
aam
cmpsl
dec
cmc
xchg
outsl
or
xchg
or
std
jp
inc
call
into
add
xor
xchg
mov
das
lret
xchg
out
jp
mov
pusha
push
cmpsb
cmpl
inc
mov
lahf
mov
rcll
sub
cmp
adcb
or
mov
cmp
lds
cmpsl
mov
adc
outsb
roll
fbld
cmp
jle
inc
mov
test
cmp
sti
movsl
dec
push
sub
insl
sbb
mov
mov
sarb
mov
outsl
into
dec
test
sub
aam
push
jge
and
out
fistpl
aam
jge
fwait
xor
gs
xchg
pop
push
aaa
movsb
lret
xor
push
jge
sbb
sub
mov
xchg
mov
out
jmp
inc
sbb
pusha
dec
js
mov
in
mov
sub
or
cmpb
stos
repz
xor
pop
pop
and
mov
test
lahf
jle
sub
lea
or
in
in
popf
adc
das
stos
ficompl
jle
inc
mov
pop
xchg
mov
inc
and
gs
outsl
dec
jns
mov
add
push
mov
sahf
pop
cld
out
xchg
stos
lods
mov
sahf
imul
dec
pop
leave
rol
xor
and
iret
xchg
fiadds
or
enter
sub
xchg
int3
push
and
push
pop
and
adc
adc
mov
add
xchg
mov
sbb
adc
sub
scas
adc
push
xchg
mov
xor
lahf
loop
push
jecxz
mov
faddl
xor
mov
aaa
ja
data16
add
fisubrl
hlt
lcall
adc
scas
mov
addl
icebp
out
jns
push
jb
jge
lods
leave
xlat
ret
cli
and
lods
xchg
mov
jecxz
mov
int3
push
mov
icebp
insb
push
and
in
add
cmp
pminsw
mov
add
xchg
sub
jg
xor
fisubrl
in
jne
sbb
mov
ljmp
and
mov
mov
fmul
jne
push
dec
mov
push
mov
loopne
dec
rolb
mov
fistps
int
pop
sub
ret
xchg
pop
cmp
lcall
jo
aas
mov
enter
jne
int3
mov
rorl
add
leave
into
cmp
cmp
mov
and
sbb
pop
repz
xor
cmp
movsb
orb
lret
lret
sub
dec
mov
mov
mov
and
push
mov
fucom
lea
mov
mov
mov
mov
test
jno
int
fstps
adc
jbe
pop
mulps
mov
aas
test
mov
jge
mov
icebp
dec
add
lock
leave
push
push
jp
lret
xchg
rcrb
outsl
sahf
mov
add
mov
mov
ljmp
sbb
sti
loopne
push
cs
movb
or
shll
sbb
ret
mov
imul
adc
xor
sub
lock
jge
test
sub
test
push
jbe
and
mov
push
lea
leave
pop
pop
jns
pushf
cmp
dec
and
in
into
dec
inc
pop
scas
mov
incl
stos
push
minps
jb
aaa
and
sub
cmpsb
cs
repz
or
call
jnp
push
insl
xchg
mov
int
pop
nop
add
xor
inc
ss
mov
mov
xchg
aad
stc
xorl
push
cltd
inc
jno
js
hlt
cs
movsb
mov
pop
sub
int3
test
jge
or
aaa
fwait
data16
add
cmp
add
pop
cmpsb
dec
and
cmpl
js
bound
icebp
aas
inc
repnz
add
in
inc
idiv
rcll
outsb
sbb
call
jmp
outsl
pop
lret
jmp
cmp
es
stc
arpl
mov
jo
nop
push
popf
inc
stc
dec
jo
mov
hlt
les
fisttpll
xor
or
add
push
sbb
mov
mov
sbb
jmp
push
outsb
data16
pop
mov
fbstp
out
dec
iret
cmp
adc
adc
xchg
ja
add
fdivrp
inc
stos
call
repz
cmp
inc
insl
add
mov
pop
jl
pop
mov
sub
les
mov
out
mov
shll
fsubl
adc
dec
push
scas
jl
fmulp
lret
jmp
ret
mov
or
mov
inc
clc
pop
mov
adc
and
dec
cld
pop
jns
dec
and
test
in
cltd
or
push
loope
and
cmp
mov
inc
or
outsl
jno
adc
xor
in
clc
xchg
mov
call
sub
sbb
lret
sbb
enter
jns
pushf
inc
pop
mov
test
repnz
and
sbb
inc
sub
sbb
cli
mov
mov
mov
ret
leave
or
jne
aas
outsb
pop
jge
nop
hlt
xchg
inc
test
stc
sub
mov
test
inc
ja
jae
xchg
outsb
push
jle
xlat
xchg
cmc
pop
fstps
ret
push
push
or
ret
mov
sti
adc
clc
repnz
fidivrl
test
test
adc
scas
mov
repnz
and
mov
flds
bound
pop
jns
push
sub
outsb
add
shlb
push
and
cwtl
xchg
popa
pop
in
jno
and
mov
sub
fnstenv
mov
cld
cli
or
fs
movsb
nop
jno
imul
repnz
sbb
aaa
jno
daa
cmc
cmpl
and
sbb
int
sahf
xchg
fstl
frstor
adc
rclb
push
push
adc
ja
ds
out
jo
subl
cmp
or
xchg
mov
lea
lcall
push
mov
lds
or
leave
xor
repnz
dec
inc
mov
and
call
xchg
or
push
out
lods
push
dec
jmp
sub
bound
into
ret
loop
ljmp
adc
cmp
xchg
xlat
mov
pop
cwtl
fists
sbb
lahf
or
fcomp
insl
bound
jo
push
in
inc
push
jne
negb
lret
dec
dec
pop
and
pop
inc
cmp
bound
ss
lods
stos
pop
cmp
inc
outsb
xchg
cmpsl
out
out
cld
loope
and
sbb
push
icebp
inc
and
addr16
je
jo
gs
insb
jle
push
mov
push
push
adc
push
rol
dec
repnz
sub
cmp
repz
xchg
pop
xlat
push
pop
rorb
push
ljmp
lret
in
dec
pop
into
stos
dec
jge
repz
push
sbb
jo
movsb
loop
or
push
xor
sbb
rolb
popa
dec
cwtl
pop
test
out
je
stc
pop
imul
inc
sub
dec
cmp
test
cs
xlat
xor
pop
orb
inc
das
jns
in
pushf
sub
sahf
xor
daa
mov
fistps
das
test
inc
in
cmp
mov
add
mov
jle
lret
push
or
add
mov
xor
mov
bound
cmp
xchg
faddl
cmpsb
mov
mov
and
les
sbb
mov
aam
ret
subb
sub
xchg
pop
jb
fiaddl
sub
insl
sbb
mov
adc
pop
xchg
jns
pop
js
adc
mov
push
fnstsw
jecxz
ss
or
jno
arpl
int
fdivrs
ror
repnz
cli
das
and
mov
fists
js
scas
mov
cmp
sub
jbe
dec
cs
leave
lret
sub
mov
jb
scas
or
stos
jecxz
push
push
test
mov
out
lds
mov
pop
pop
xor
sub
mov
mov
popa
pop
idiv
adc
pop
add
push
sub
jnp
scas
jae
lahf
jmp
jns
nop
lea
inc
mov
and
push
add
push
leave
pop
shll
push
dec
jno
dec
xchg
xchg
daa
dec
addr16
inc
lret
popf
push
and
or
test
pop
xor
push
jmp
cmp
xchg
sbbb
jmp
or
loope
inc
cmpsl
dec
outsb
xor
fsubl
sub
mov
dec
adc
call
jle
bound
mov
loope
ljmp
mov
cmp
inc
xor
in
rorb
sbb
scas
xchg
cwtl
push
push
cmp
pop
sbb
jp
jns
sbb
jle
aaa
testl
sub
pop
push
push
xor
es
fwait
xor
jp
ds
rol
jo
pop
adc
mov
jmp
sub
aam
test
sub
jns
popf
int
out
stos
ret
loope
xor
jge
js
mov
inc
leave
mov
cmpsl
rorb
stos
shl
in
daa
mov
imull
xchg
lret
mov
sbb
dec
cli
and
fstl
insl
sub
mov
pop
int
sub
mov
aas
js
jecxz
idivl
mov
rcrl
sub
fwait
enter
mov
mov
mov
je
aaa
sbb
jno
pop
shll
fs
popa
push
adc
out
fisubrl
cmpb
pop
push
out
sub
sub
outsl
scas
data16
mov
add
push
pushf
xchg
mov
or
jno
hlt
add
hlt
bound
jb
pop
add
push
in
jg
mov
xchg
mov
xchg
mov
fisubrl
mov
outsb
shrl
rolb
xchg
rcrl
stc
cmp
mov
mov
test
sub
test
pop
adc
iret
mov
xchg
pop
subb
pop
arpl
add
mov
mov
mov
hlt
jo
mov
cmp
inc
mov
lea
push
or
mov
push
fiadds
loop
and
xor
sub
mov
jl
mov
test
test
sub
jmp
mov
ja
pop
nop
cmp
lods
stos
pop
repz
push
dec
xor
push
mov
lds
xor
lds
dec
pusha
pop
add
shr
outsl
hlt
jmp
outsb
sub
sub
loopne
dec
test
xor
mov
mov
repz
sbb
into
out
lea
inc
iret
inc
push
dec
add
imul
sti
lods
fmuls
movsb
addr16
out
pop
xchg
mov
sub
sub
mov
cmp
out
pusha
jmp
scas
imul
mov
cmp
insb
fwait
cmpsl
repnz
test
jmp
mov
adc
lea
xchg
enter
dec
lcall
mov
push
inc
mov
pop
addr16
push
push
sub
movsb
scas
cmpsl
mov
mov
xor
dec
imul
push
lea
push
pop
push
xchg
int
les
repz
xor
decb
pop
cmpsl
mov
jge
mov
xchg
ret
sub
scas
lahf
ss
cmp
pusha
cmp
jnp,pt
pop
fucomip
add
pop
cmp
leave
mov
xorb
push
insl
fwait
dec
cltd
js
add
fdivrp
lods
out
add
movsb
inc
pop
arpl
stc
jae
stos
cli
scas
call
mov
filds
pop
adc
or
lea
mov
jne
in
cs
daa
mov
into
iret
mov
nop
in
xorl
dec
loop
inc
mov
out
mov
sub
jp
popf
test
fs
mov
jbe
jo
xchg
lcall
push
insb
push
dec
leave
xor
movsl
in
jmp
test
test
or
lock
pop
pop
xchg
stc
mull
mov
int
mov
pop
inc
loop
xchg
push
lds
dec
pop
stos
and
std
xchg
and
sub
push
popf
mov
xor
cmp
xor
std
cld
pop
es
push
aas
or
icebp
aad
loop
cli
faddp
dec
mov
mov
sub
xor
xchg
ljmp
push
xorl
mov
pop
dec
pop
rcrl
xlat
int
sub
pop
jae
stos
lcall
lock
idivb
inc
insb
inc
loop
lret
and
orb
jmp
cmp
movsb
stos
push
in
hlt
aam
ficompl
cmpsl
lods
sbb
sbb
sub
xchg
popf
sbb
xor
or
inc
cmc
icebp
xchg
dec
push
test
repnz
sub
test
aas
xchg
adc
push
xchg
shll
ds
or
shrl
dec
push
aad
add
sbb
scas
out
push
cmpsb
cmp
ret
push
shll
sbb
add
adc
mov
lret
inc
shl
adc
out
mov
aad
mov
les
push
push
and
xor
test
test
sub
lods
push
push
lock
in
fs
add
dec
mov
mov
popl
mov
pusha
push
std
aad
fcoml
push
mov
lea
pop
xchg
push
push
movsb
or
or
and
jo
stos
push
icebp
jnp
aam
or
sub
in
mov
inc
or
cld
xor
sarb
and
repz
ret
xor
sbb
shll
push
mov
js
and
inc
cmpsl
mov
scas
leave
mov
xchg
xchg
cltd
out
push
pop
pop
and
sbb
push
cmp
jnp
mov
shll
cmpsb
shrb
arpl
jo
jo
stc
test
ret
lret
pushf
inc
sub
pop
ja
and
mov
add
int3
jp
xchg
outsl
jne
in
or
hlt
or
mov
out
lret
xchg
pop
xchg
and
ds
cmpsb
mov
and
lock
lock
fld
push
clc
mov
add
mov
or
mov
fsubrs
into
mov
ret
push
add
dec
dec
mov
fcom
cwtl
fdivs
inc
or
aas
test
aam
sbbb
lds
xchg
adc
push
icebp
add
mov
scas
stos
lea
push
lock
in
pop
pusha
scas
mov
clc
mov
mov
jle
jle
push
fadds
dec
pop
loopne
js
adc
fwait
adc
and
aaa
lds
dec
xor
jge
fbstp
xchg
mov
push
sbb
and
mov
jnp
cli
mov
sub
daa
add
sub
pop
jae
imul
dec
xchg
jbe
pop
in
shl
sbb
outsl
dec
gs
xchg
push
add
js
mov
loope
mov
dec
and
pop
pop
xor
loopne
and
roll
movsb
jmp
pop
dec
jno
jo
in
mov
into
rclb
cmpsl
outsb
lcall
push
in
cld
ret
dec
in
inc
imul
call
dec
mov
push
out
xchg
iret
sahf
push
loope
inc
cwtl
rcrl
dec
cmp
lret
or
mov
and
sbb
push
mov
dec
loop
dec
xchg
popf
push
jne
repz
mov
insl
lods
sub
dec
imul
fcoml
das
mov
in
or
lahf
enter
fsubrp
xor
dec
ljmp
dec
cmpb
arpl
or
and
adc
ljmp
subl
pop
push
cld
lea
into
das
cltd
jns
jmp
pop
pop
out
je
dec
pushf
pushf
call
xchg
daa
push
push
sahf
sub
adc
xchg
push
xchg
cmpsb
lret
pop
push
jno
mov
sub
sub
cli
outsb
xchg
pop
fdivs
push
push
pop
or
cmp
test
jne
mov
aam
inc
push
cltd
fdivp
mov
dec
inc
mov
mov
outsl
mov
ficoms
sub
ss
mov
clc
scas
insl
es
pop
outsb
cmpb
mov
add
andb
mov
mov
mov
push
in
or
in
outsl
cmp
mov
push
adc
sahf
jge
daa
push
adc
dec
add
push
cmp
das
or
test
mov
sub
jo
cwtl
ret
jmp
stos
cmp
data16
shl
xor
pop
lock
and
subb
sub
lahf
loopne
insb
fwait
xchg
push
push
nopl
xor
movsb
sar
inc
es
imul
pcmpeqw
or
into
cltd
pushf
pop
mov
cmpl
movsb
and
adc
scas
rorb
test
dec
push
xchg
insb
je
adc
mov
xor
roll
pop
loop
aas
mov
nop
fcmovu
mov
pop
pop
jge
xchg
mov
aaa
in
cmp
inc
lods
stos
sub
sahf
int
pushf
lods
sub
and
mov
cmc
xor
xor
data16
cmp
leave
test
mov
sbb
sbb
iret
aaa
xor
popf
inc
lret
mov
xlat
stc
insl
or
mov
stos
sbb
mov
ja
lret
inc
lahf
push
movsb
push
outsb
lods
int
icebp
outsl
daa
mov
repz
imul
pop
adc
mov
mov
insb
jbe
jne
xchg
scas
sub
es
test
jbe
inc
adc
loop
push
jp
nop
mov
dec
pop
out
xchg
jg
sub
movsl
xchg
pop
mov
fnstenv
js
mov
ret
loop
les
out
js
xor
lods
sbb
xor
stos
jl
mov
push
inc
dec
in
or
adc
dec
jns
in
push
jp
mov
in
mov
xor
and
pop
fsubr
jo
add
loop
cmp
rcrl
jp
sti
lods
rorb
pop
or
dec
ds
lds
jae
ss
fwait
jle
mov
add
mov
xor
lea
and
mov
sub
sbb
out
mov
add
pop
pop
xor
mov
popl
icebp
jne
sub
pop
inc
push
fcoml
jmp
cmp
add
pusha
in
inc
les
in
mov
add
pop
fcmove
cmpsl
cli
loopne
jae
or
lcall
movsl
lods
test
fnstenv
jbe
and
inc
xor
pop
or
shr
mov
sar
bound
jne
xrelease
inc
xchg
pop
xchg
xor
jb
js
cmp
fisttpll
test
sub
push
insl
pop
enter
icebp
dec
cmpsb
sub
in
inc
rol
mov
stc
jns
pop
mov
js
mov
lret
cmp
mov
mov
roll
mov
std
mov
xor
arpl
leave
test
fstpl
jbe
mov
sub
cmp
mov
outsb
popf
and
cmp
cmp
in
je
icebp
xchg
testl
popa
fwait
lcall
mov
rcll
sbb
out
in
add
es
stc
fs
ret
aaa
xor
rorl
add
sbb
pop
pop
lods
adc
jmp
das
pop
mov
or
or
xchg
and
test
xor
mov
outsl
movsl
mov
shlb
jne
mov
daa
sub
pop
jns
mov
rcl
fistl
pop
add
sbb
das
movsb
mov
and
cmp
push
and
repnz
shll
inc
int3
or
add
push
sub
inc
movsb
inc
int
lea
cmp
or
pop
mov
test
imul
cmp
and
pop
sub
lret
cmp
xchg
hlt
movsl
pop
negl
pop
mov
or
imul
movsb
push
or
mov
scas
xor
pop
push
hlt
aaa
dec
and
lret
mov
mov
ljmp
sbb
xlat
push
or
pop
test
mov
sbb
sbb
pop
mov
jo
adc
in
inc
mov
sbb
out
or
xchg
punpckhbw
test
sti
negl
cmp
stos
push
mov
pop
popf
xor
and
je
jle
or
inc
out
add
out
inc
imul
cmp
sbb
call
cmpsl
add
xor
movsb
ret
sub
dec
sahf
leave
inc
insb
pop
fsubl
stos
mov
or
jmp
pop
js
scas
add
cmp
lods
pusha
pop
addl
ss
and
jmp
jecxz
aam
stc
js
stos
push
insb
std
in
dec
sbb
adc
cld
out
subb
out
jno
dec
cmpsl
pop
les
jmp
mov
loopne
jmp
xor
in
xchg
mov
mov
std
xchg
in
lea
mov
in
mov
repz
mov
sbb
jb
aam
ljmp
sub
push
nop
and
int3
aaa
mov
std
cmp
or
dec
lea
ficoml
nop
es
in
cmpsb
mov
fldenv
or
and
cld
inc
jmp
testl
or
sub
cli
out
outsb
aam
testl
or
inc
push
inc
push
cmp
xchg
pop
iret
xchg
xlat
js
xor
or
cmp
mov
mov
repz
test
mov
leave
jmp
repnz
sbb
sub
repz
or
pop
inc
ja
sub
daa
or
mov
cmp
subb
jle
mov
outsl
pusha
test
fcmovne
outsl
mov
mov
sbb
int
icebp
push
and
push
sbb
lods
fildll
movsl
inc
and
sbb
push
popa
cmpsb
loope
or
cmp
mov
mov
icebp
add
fstl
rolb
adc
mov
sub
dec
ficomps
pushf
cwtl
stos
lds
xchg
jne
xchg
pop
popf
outsl
pop
daa
mov
push
jno
jne
jno
jg
jge
cmp
sbb
fwait
sbb
clc
xchg
adc
sbb
mov
outsl
adc
mull
mov
dec
mov
pop
cwtl
xor
jne
and
add
outsb
fistps
imul
loop
jae
sub
loopne
imul
lcall
mov
in
aam
out
sti
cltd
jo
repz
add
xor
jge
jbe
inc
int
lds
xchg
cmpsb
sub
out
dec
imul
aam
icebp
movsb
push
mov
mov
lods
flds
pop
outsb
mov
xchg
lcall
push
mov
pusha
xchg
lret
or
sub
sbb
adc
pop
gs
fsubr
rcrl
add
popf
dec
ja
sbb
sub
inc
jbe
aad
mov
add
push
aam
xlat
aad
subb
push
pop
inc
scas
repz
repnz
dec
mov
pop
loope
mov
and
cmp
sbb
mov
cmpsl
pop
cld
xor
push
cwtl
push
mov
subb
mov
shl
sbb
mov
adc
sub
fsubrs
adc
or
out
popa
fsubr
mov
insb
dec
or
dec
mov
dec
es
hlt
xchg
mov
push
xchg
jno
cmp
dec
xchg
xchg
out
adc
out
mov
mov
sbb
ja
mov
test
shlb
adc
or
mov
in
pop
inc
or
jmp
int
into
in
out
inc
pusha
sbb
lahf
fwait
insl
movsl
insl
jne
test
pop
in
in
cmp
mov
push
cmp
sub
das
mov
mov
jmp
fdivrp
or
cmp
popf
nop
lock
sub
sub
lods
call
stos
and
mov
xchg
scas
cmc
fcoml
js
mov
popa
out
sbb
push
mov
gs
shrb
or
test
ja
cmp
push
lods
xlat
hlt
jmp
jmp
jae
dec
daa
cmp
push
fs
sbb
sub
pop
dec
lret
and
lock
data16
push
jae
jmp
or
mov
shl
and
enter
lods
xlat
jne
aas
cmp
sbb
aam
lea
mull
pop
cmp
movsl
lods
ret
dec
cwtl
inc
add
ror
or
js
jo
jmp
addr16
es
jne
or
fdivrp
push
jae
outsl
sub
enter
mov
or
sub
push
bound
ss
push
dec
test
loope
mov
loopne
sbb
rcl
clc
jns
mov
arpl
sub
cmp
jns
sub
loop
mov
jle
test
cld
dec
lods
inc
ds
cld
sbb
mov
lds
add
mov
imul
sbb
loope
sub
mov
add
fdivr
push
fdivrl
nop
sub
xor
fcmovnb
mov
xor
and
inc
ja
dec
mov
lods
and
scas
sub
hlt
rcr
inc
lret
xchg
sub
dec
jmp
lea
lea
push
insl
repnz
test
mov
cld
vunpcklpd
xor
in
mov
and
push
js
mov
fsts
test
outsb
aam
mov
add
lret
or
out
mov
pop
sub
xchg
aas
mov
mov
inc
sub
jns
popf
push
mov
rorl
sub
ret
mov
or
push
or
push
fldl
mov
xchg
cmc
sub
mov
inc
js
sub
pop
xchg
scas
add
or
imul
subb
add
mov
iret
inc
cli
or
jg
or
push
dec
jo
mov
push
jl
adc
push
mov
jp
movsl
inc
or
jmp
jb
mov
add
bnd
xchg
jbe
outsb
outsl
fsubs
and
stc
lea
add
cmp
inc
pop
in
lods
sbb
rolb
stos
outsb
pop
push
mov
inc
ret
test
popa
inc
iret
push
adc
fcmovnu
push
cmp
gs
sbb
notl
lcall
or
push
cmpsl
lock
sbb
cmp
arpl
roll
pop
cmp
pop
in
iret
jmp
pop
mov
mov
pop
sti
stc
es
push
icebp
push
xor
pop
ss
stos
sbb
jns
faddl
sbb
movsl
inc
xor
out
ss
outsl
xchg
pop
jle
loope
pop
or
imul
test
xor
cmp
push
add
jle
add
add
shrb
push
lret
jg
lahf
lcall
pop
cmp
hlt
inc
sub
or
and
arpl
or
repnz
into
and
jg
push
stc
adc
xlat
std
ret
aaa
stos
popaw
cs
scas
pop
inc
pop
aas
out
xor
adc
lret
pop
std
mov
sub
mov
pop
add
mov
out
or
push
push
pushf
sbb
test
fnstcw
das
sbbb
loop
inc
outsb
sub
nop
push
pop
call
dec
sub
push
jae
lcall
xor
xchg
sub
mov
mov
cmp
adc
les
bound
push
mov
push
or
cmp
fdivp
xor
xchg
js
sti
adc
pop
xor
jnp
mov
in
sbb
test
xor
test
lods
pop
mov
jo
xorb
sbb
in
add
pop
add
cmp
push
adc
movsb
in
outsb
xchg
gs
lods
les
lods
stos
inc
add
mov
repnz
jecxz
in
out
cltd
outsb
sub
push
mov
xor
pushf
xchg
cwtl
cwtl
cmpb
lcall
cs
mov
cmpsl
mov
lret
and
inc
stos
int3
cs
aas
pop
jnp
mov
sahf
xor
orb
int3
pop
sahf
aad
xor
push
loop
mov
and
and
lods
mov
and
inc
inc
lds
jo,pt
dec
ljmp
jae
push
xor
lds
aas
or
jmp
xchg
mov
imul
enter
mov
pop
lcall
adc
sti
leave
push
leave
arpl
es
out
shl
shl
loope
stos
shld
movsb
pop
cmpsl
fisubrs
inc
jle
jmp
add
or
loope
xor
mov
fs
push
ret
cli
mov
sbb
call
jno
adc
int3
xor
loop
push
fmull
or
xchg
lcall
push
push
sub
setb
cmc
or
fcmovnu
sub
mov
lea
pop
into
in
call
aam
fnop
cmp
and
ja
daa
xorl
lea
popl
outsl
mov
stc
pop
inc
pop
ret
in
aaa
xor
sbb
mov
xorl
jns
xlat
test
add
lea
les
icebp
mov
jne
lcall
push
push
int3
seto
inc
push
add
jp
dec
dec
rclb
das
inc
iret
sub
push
or
mov
into
pop
mov
sahf
out
sub
out
arpl
fucom
mov
or
pop
mov
mov
xchg
ljmp
mov
test
mov
and
adc
mov
or
pop
ljmp
jecxz
xor
add
cmp
fisttpl
cmp
dec
and
or
pop
and
roll
adc
sti
add
xor
test
rcl
enter
add
xchg
push
sbb
xchg
filds
stos
mov
push
mov
add
mov
roll
fldcw
dec
and
aas
adc
aaa
test
sbb
out
in
xchg
ret
mov
push
fcmovnbe
and
scas
add
push
mov
mov
lock
push
mov
sub
cmp
mov
stos
cmp
movsl
mov
push
push
test
xchg
aam
fsubrl
fisttpll
pop
shr
out
stc
imulb
push
inc
rorl
insl
mov
rol
testl
sahf
push
jno
les
and
ss
fiadds
fcomip
mov
mov
je
outsl
inc
mov
in
lahf
push
std
mov
fildll
pop
jge
lods
xchg
movsl
mov
pop
jae
push
pop
sbb
xor
lock
outsl
into
scas
wbinvd
xchg
mov
inc
sbb
sbb
adc
push
adcl
movsl
or
cmp
and
push
fcompl
push
leave
cli
dec
mov
pop
xchg
dec
push
inc
mov
loop
sub
mov
cmc
loope
mov
out
addl
addb
dec
and
jp
mov
xchg
movsl
mov
push
outsl
cmc
xor
sub
xor
sarl
push
xor
and
jae
int3
call
testb
or
ficomps
sbb
and
or
sbb
test
out
xchg
mov
jp
adc
repnz
cmpsl
mov
mov
adc
push
stos
dec
push
fsubr
orl
fistl
push
push
inc
into
mov
mulb
jecxz
adc
stos
lds
mov
leave
leave
cmp
jns
xchg
int
lods
dec
dec
push
adc
xchg
clc
sbb
mov
testb
lea
test
mov
mov
push
cltd
push
adc
cmpsb
xchg
das
xor
cwtl
inc
stc
mov
lret
and
push
insb
test
inc
xchg
comiss
cmc
cltd
push
fdivl
test
mov
or
and
dec
icebp
out
outsl
mov
rclb
sti
sahf
outsl
adc
out
idivb
sub
mov
fildll
fadds
cwtl
sub
ret
pop
adc
push
lds
mov
out
loope
mov
push
repnz
nop
mov
test
and
cld
xchg
daa
add
insl
clc
mov
test
pushf
loop
repz
add
jb
sub
inc
xchg
dec
push
mov
jecxz
scas
sub
push
xlat
mov
rcr
psllw
push
ret
fwait
shlb
adc
in
call
ret
enter
add
rorb
or
jle
test
in
sahf
cli
fcmovu
cmpsb
out
subb
or
mov
cs
mov
sbb
cmp
sub
cmp
and
mov
ljmp
lods
cltd
divb
or
mov
js
aad
arpl
jb
sbb
push
cs
enter
aas
mov
xor
idivl
clc
subb
pop
gs
arpl
push
sub
or
xchg
mov
xor
movsl
shll
jb
ret
cmp
mov
data16
and
cmp
ficoml
mov
popf
sub
cmc
xor
pop
push
jge
test
ds
mov
adc
rolb
mov
jns
xchg
adc
add
push
out
cmpsb
sahf
xor
lret
dec
in
aad
add
stos
daa
btr
add
fwait
jle
arpl
outsb
out
mov
and
jmp
sti
pop
sub
cli
aas
mov
int3
mov
mov
pusha
or
add
les
push
pop
repz
inc
out
lock
test
nop
sub
or
loopne
xor
lds
nop
xchg
add
mov
cwtl
xor
mov
adcb
pop
mov
cmpsb
je
mov
js
mov
out
and
inc
xlat
fwait
sti
jbe
movsl
pusha
rclb
fistl
xor
sbb
addl
cmpsb
pushf
push
shl
fimuls
mov
sbb
data16
std
std
jl
inc
inc
out
ds
pop
push
cmp
mov
sbb
inc
xlat
idiv
mov
fs
movb
test
xlat
lock
or
pop
jmp
les
ret
inc
hlt
lds
lock
cmc
push
out
sub
clc
xor
fs
shrl
xchg
sysexit
das
sub
test
bnd
ficompl
cs
sbb
mov
int
fisubrl
mov
jbe
xchg
ret
adc
mov
fsubr
cmp
xor
lock
lcall
cmp
bound
js
mov
scas
mov
cmp
rcrl
fnstcw
fisubl
cmp
je
and
lods
fld
cmp
cmp
dec
xchg
inc
xchg
popa
dec
xchg
push
cltd
xorl
jecxz
or
jp
cmp
imul
adc
mov
outsb
cli
pop
icebp
sbb
mov
sbb
nop
push
out
mov
scas
jg
cmpsl
or
in
loop
addr16
jmp
test
xchg
inc
push
into
xor
mov
notb
rcl
mov
push
mov
pop
enter
je
in
push
pop
out
hlt
aas
scas
inc
sub
insb
cmpsl
sahf
jp
pop
call
inc
adcb
or
or
cwtl
fildll
cmp
push
fistps
mov
pop
lods
inc
xor
adc
icebp
dec
call
std
das
xlat
and
inc
jle
sub
cmp
fldl
mov
movsb
push
loopne
pop
push
pop
js
inc
lret
mov
and
sub
out
push
mov
lds
mov
mov
idivl
in
push
idivb
and
mov
lock
xchg
jns
test
jmp
xchg
iret
xor
enter
mov
fiadds
daa
mov
or
mov
add
and
push
lea
sbb
add
iret
dec
xlat
call
mov
mov
adc
scas
mov
add
stc
add
add
inc
bound
fdivrs
lds
xor
cmp
pusha
xchg
xchg
push
and
add
out
push
add
daa
imul
out
push
sub
cmc
and
insb
or
iret
imul
insl
or
fdivrs
in
out
ds
sub
in
test
inc
or
sbb
cs
xchg
sub
push
pop
frstor
test
subb
push
inc
cltd
push
xchg
imul
repz
addb
cwtl
add
dec
dec
mov
sub
xchg
sbb
or
sbb
orl
fisttps
fadd
push
repnz
lock
push
ljmp
test
movsl
es
clc
xchg
and
ret
or
out
sti
or
js
and
test
sbbb
adc
cmpsl
cmp
mov
ret
add
or
sahf
pop
stos
sahf
push
shrb
sub
cmpsb
sahf
sub
jl
pop
orl
pop
cld
and
in
ljmp
xchg
adc
inc
push
flds
stos
sub
std
mov
les
int3
lret
fcmovb
iret
push
push
stos
popa
addr16
popa
fldenv
push
jne
jns
insl
scas
out
dec
push
ja
stos
cmpsb
out
mov
mov
jb
sti
shlb
test
fcomps
lock
ffree
mov
addr16
adc
daa
fildl
jl
jae
or
and
push
push
xlat
cmp
js
push
stc
sub
js
mov
fcmove
sbb
daa
lcall
jg
mov
out
jae
fcmovu
pop
lret
mov
and
sbb
ficoml
lret
mov
and
ret
jbe
sub
mov
lahf
lea
or
ds
dec
movsl
shlb
mov
pop
inc
rclb
les
hlt
arpl
scas
lcall
pop
inc
ret
jle
push
idivl
fimuls
rcrl
outsb
push
inc
xor
xchg
in
imul
push
push
cmpsl
cmc
lret
sbb
out
out
addr16
mov
push
cmp
push
mov
mov
pop
mov
jl
pushf
mov
cmpsl
jle
je
das
js
xchg
cwtl
mov
xchg
mov
fsubrp
pusha
pop
dec
sbb
mov
jp
push
bound
movsb
xchg
add
adc
mov
in
mov
mov
push
and
mov
sub
adc
or
pop
int3
int3
and
lret
mov
cltd
jecxz
push
out
pop
xchg
push
mov
sbb
sbb
aaa
xchg
pop
pop
ret
adc
mov
or
push
mov
scas
in
mov
jns
idivl
jle
push
inc
les
cmp
mov
sbb
inc
pushf
gs
lds
cmpsl
lock
std
scas
imul
sbb
es
mov
inc
or
push
push
insb
packsswb
jl
in
loope
mov
adc
jb
mov
cmp
adc
cmp
outsl
cmpsl
gs
push
rcrb
add
lea
jg
adc
call
ret
clc
fldl
mov
push
mov
or
sbb
pop
add
add
jg
jg
or
mov
mov
loop
dec
lcall
test
mov
fsubrl
push
push
xchg
add
mov
jg
insb
fdiv
test
mov
out
cs
mov
sbb
jb
jns
push
in
std
jne
fimull
pop
arpl
movsb
jle
cmp
sbb
loope
fadds
mov
test
xor
loopne
mov
outsl
xchg
subl
add
add
lods
nop
mov
jl
hlt
jns
push
push
sbb
in
sbb
outsl
test
dec
mov
pop
lahf
and
or
std
sbb
push
shrl
cli
xlat
mov
repnz
ds
pusha
leave
or
in
pop
ja
push
pop
lds
movsl
int3
mov
movsb
sahf
cmp
pop
cmp
adc
ret
call
and
jns
arpl
push
out
neg
jp
add
mov
pop
pop
jno
mov
int
gs
dec
mov
jg
and
lods
pop
jae
nop
jne
movb
sbb
mov
out
es
sub
data16
mulb
sbb
andl
frstor
cmp
mov
sub
pop
pop
xor
add
mov
inc
mov
jle
push
dec
xor
inc
fisubrl
mov
fs
ret
inc
nop
xchg
xor
push
dec
and
out
add
sbb
adc
imul
pop
mov
ljmp
push
aam
sbb
sub
dec
push
aad
push
inc
jg
fcompp
or
push
xchg
lahf
cltd
and
fists
insl
sbb
outsl
jae
scas
jp
insl
repz
addr16
and
inc
fs
shrl
xchg
imul
outsl
or
into
jb
or
adc
mov
jl
or
aas
aad
mov
add
mov
je
rorl
or
jb
in
loopne
js
outsb
outsl
or
jl
call
pop
mov
rclb
pop
adc
inc
rcrb
cmp
rolb
lock
mov
and
arpl
dec
pop
jns
aas
push
das
sub
sbb
insl
jb
aaa
fstps
sbb
push
jae
lcall
cmp
cwtl
jle
icebp
das
xchg
jo
lahf
push
js
push
push
sub
fsts
scas
jns
add
xorl
test
mov
jp
adc
insb
xchg
push
pop
push
sbb
cmp
push
dec
pop
ljmp
lock
xor
xchg
dec
or
jb
gs
adc
ja
imull
sub
pop
jno
stos
shrb
add
insl
dec
clc
test
and
and
push
arpl
int
es
js
jns
dec
sub
mov
mov
into
mov
insb
add
mov
inc
mov
cmc
mov
outsl
js
mov
sub
jne
and
stos
repnz
or
mov
mov
inc
shl
pop
jbe
jb
push
inc
inc
pop
sub
jecxz
jne
mov
add
aam
mov
mov
jns
pop
sbb
popf
jp
mov
fwait
sub
ljmp
cli
cwtl
dec
add
mulb
sub
test
insb
aas
or
jl
sbbl
mov
xchg
jmp
adc
xor
cmp
dec
jge
and
loopne
jnp
mov
fs
pop
mov
dec
sub
loopne
mov
outsl
sti
fs
repnz
pop
dec
aad
ss
mov
adc
pop
xor
add
and
push
jmp
push
lods
mov
js
repz
cmp
add
aam
push
fcoml
and
data16
xchg
sbb
fcmovne
dec
or
xchg
add
sahf
fs
mov
loop
sbb
pop
ja
rclb
mov
stc
mov
pop
popa
popf
jp
and
out
mov
das
push
sbb
lret
insl
fdivrs
adcb
pop
sahf
mov
dec
push
mov
adc
test
and
pop
fwait
add
inc
pushf
jne
cs
icebp
lret
xchg
adc
ljmp
repz
push
push
sbb
xor
and
mov
push
cmpl
mov
fiaddl
mov
xor
int3
sahf
add
mov
xor
enter
and
shlb
xor
clc
adc
jg
adcb
cmp
cmp
and
mov
sbb
cld
loopne
add
cltd
or
xchg
shll
jnp
pop
lods
icebp
pop
and
ljmp
and
cmpl
repnz
les
xor
mov
gs
mov
test
mov
lods
bound
mov
mov
mov
sub
mov
dec
dec
popa
popa
mov
gs
fidivl
lcall
popf
lahf
aaa
fistpll
enter
in
push
js
inc
je
fucomp
inc
jge
dec
dec
mov
and
sarl
inc
gs
jle
scas
sahf
cmpsb
shll
mov
sbb
das
xor
sahf
dec
and
jns
mov
loopne
jl
popf
xchg
div
es
mov
mov
mov
push
popa
scas
push
push
mov
clc
dec
mov
gs
in
test
mov
std
and
sbbl
jns
cmp
imul
or
test
mov
imul
dec
jg
mov
lods
lret
mov
lea
data16
mov
mov
arpl
push
jb
scas
mov
call
into
cltd
popf
sahf
add
pushf
int3
cmpsl
jmp
int
push
in
jb
lods
out
pop
enter
aad
or
iret
or
outsl
sbb
inc
inc
lahf
pop
adc
negl
xchg
inc
into
inc
adc
jbe
xchg
and
and
and
out
movsb
or
les
pop
fdivl
push
aas
cmp
mov
bnd
rorb
ds
out
jo
in
pop
aas
test
fbld
add
fdivrl
push
shll
out
sbb
pop
mov
mov
pop
mov
push
out
add
or
mov
adc
jmp
inc
push
sbb
dec
call
adc
lock
pop
mov
dec
push
xchg
adc
les
enter
lret
jge
mov
je
scas
or
data16
fisubl
mov
xchg
shll
xchg
sub
pop
ja
pop
dec
mov
push
inc
stc
loopne
loopne
gs
das
fstpt
out
std
jle
add
data16
fcmovnu
ds
add
aam
repz
or
mov
roll
fwait
lret
adc
js
and
mov
ficompl
pop
shrb
sub
cmp
in
mov
sub
shrb
push
xor
and
fdivs
pop
std
and
lcall
lock
into
out
jb
out
cmp
sub
rcr
mov
fisttpl
gs
lahf
dec
jle
mov
clc
jo
pop
shrb
sbb
push
mov
pop
nop
lret
das
aad
cltd
or
test
sahf
add
pop
pop
notl
jge
jae
push
sub
ljmp
hlt
add
mov
ret
add
int3
xor
mov
pop
adc
aaa
inc
sub
fcmove
xor
mov
or
dec
in
in
xor
mov
xchg
mov
adc
sub
sti
mov
call
inc
lcall
in
in
jmp
sub
cld
out
push
push
decl
xchg
stos
imul
iret
push
hlt
xor
dec
outsl
sti
xchg
lcall
xchg
mov
jne
scas
xor
lcall
xlat
mov
insl
or
in
push
push
insl
mov
sub
outsb
xchg
jg
cmp
xchg
movsl
inc
repnz
adc
cs
mov
or
sub
lods
inc
mov
adc
lahf
mov
orl
lods
mov
or
inc
jns
mov
lret
cmp
shlb
xchg
test
mov
iret
cmp
add
aad
fs
aas
mov
push
cmp
test
mov
push
or
fnstcw
fisubrl
cmp
mov
scas
sub
ret
iret
push
imul
adc
icebp
aam
pop
mov
hlt
adcb
xchg
and
pop
popa
shl
sti
aam
stos
mov
popf
call
adc
icebp
adc
test
jle
or
sub
test
mov
mov
arpl
inc
mov
in
sahf
jmp
dec
pop
mov
je
mov
jge
mov
inc
out
add
negb
lcall
addr16
mov
cmpsb
fists
add
push
orb
push
sub
or
inc
xchg
repz
adc
jo
in
imul
xchg
push
lret
push
xchg
xchg
out
fistl
xchg
dec
sbb
pop
movsl
dec
fdivrs
test
push
inc
mov
pop
adc
cld
hlt
dec
pop
cltd
or
cmp
mov
xor
xor
or
sbb
popa
dec
xchg
xchg
pop
pop
mov
and
cmp
mov
fsts
mov
adc
stc
mov
cld
int3
jge
mov
pusha
sbb
xor
jnp
pop
aaa
jp
jb
mov
inc
imul
inc
mov
jb
mov
pop
jo
cmp
flds
pop
cmpsb
pop
mov
push
inc
inc
mov
pushf
xor
cmp
jge
rolb
dec
test
jae
into
fmull
and
mov
xchg
ljmp
outsl
test
into
test
cmp
xchg
call
push
stos
rcrl
dec
enter
push
int3
cmc
push
cwtl
mov
enter
cmp
shll
leave
add
shll
aam
jb
cmpb
dec
cmp
flds
xor
mov
mov
sbb
loopne
cmp
sub
inc
shlb
sbb
fadds
std
test
cmc
sub
repz
or
cwtl
int
adc
movsl
xchg
cmp
xchg
xor
sbbl
popa
inc
mov
in
dec
push
pushf
add
dec
mov
shrl
and
adc
sar
je
rcrl
lods
pop
clc
push
leave
mov
jl
mov
rcrb
insl
xchg
clc
addb
push
cmp
sub
pop
les
stc
pushf
jbe
test
leave
sub
fstps
adc
lods
xchg
xor
test
and
mov
jne
addb
cwtl
in
cmp
clc
lods
pop
or
cld
push
mov
rcll
leave
clc
sbb
and
cmp
xchg
xor
pop
sub
test
jge
mov
in
inc
push
in
xor
xchg
pop
and
pop
add
adc
sbb
inc
cli
cli
pop
jp
out
rolb
xchg
aas
dec
or
xor
mov
jnp
mov
jae
scas
sti
push
jecxz
nop
outsb
and
repnz
psrlq
lods
mov
push
cwtl
cmc
sub
nop
mov
xchg
sarb
pop
popf
stos
xchg
nop
fsubp
add
sub
std
aad
sub
sbb
pop
aam
inc
cmp
test
ds
or
fldl2e
lods
dec
cmp
insb
int
cmp
xchg
pop
add
cmp
out
mov
add
mov
mov
mov
test
repnz
mov
dec
adc
jecxz
mov
test
mov
or
inc
or
pop
adc
sti
inc
sub
imulb
in
add
in
pop
sbb
or
or
popl
dec
js
pop
dec
mov
push
stc
enter
pop
mov
mov
rorl
sub
or
or
inc
rcr
sti
sahf
push
scas
xor
inc
xorl
lahf
jle
pop
loope
mov
sarb
lods
adc
inc
or
push
cmovns
or
pop
mov
sbb
or
cmpsl
jno
cld
adc
repnz
xchg
subb
repz
mov
pop
int
daa
mov
or
stos
lds
cmp
dec
fdiv
leave
and
adc
mov
mov
pop
adc
notl
es
adc
out
add
or
sbb
cmpl
mov
sbb
mov
mov
scas
xchg
mov
inc
push
adc
sbb
outsl
xor
mov
hlt
xchg
xchg
stos
in
adc
fldenv
push
scas
or
roll
faddl
cmpsb
or
jle
jg
lret
mov
movsb
scas
je
scas
jg
or
mov
in
arpl
cmpsl
hlt
adc
shll
fmull
push
or
dec
das
push
jle
and
outsl
adc
or
in
mov
sbb
sub
in
dec
or
je
mov
mov
adc
inc
jbe
int
rclb
push
loop
adc
add
jae
push
jbe
ss
xor
cmpsb
mov
adc
or
out
sti
aad
add
shlb
mov
cmpsb
insb
inc
pop
adc
es
subl
out
push
outsb
dec
inc
xor
out
outsl
mov
fdivrl
and
pushf
mov
ret
lds
mov
cmpsl
insl
dec
mov
jmp
js
mov
sub
or
xchg
xlat
mov
cs
loopne
dec
adc
xchg
dec
repz
lods
fcoml
sub
imul
add
cld
mov
enter
pop
std
idivl
mull
out
jecxz
adc
or
test
pusha
cmpsl
mov
jp
adcb
les
or
mov
jne
fdiv
cmp
cmp
pop
add
dec
divb
adc
les
xchg
ret
xor
or
aad
xchg
jnp
cwtl
pop
popa
and
cmpsl
push
or
xchg
xlat
popf
loopne
mov
sbb
shl
mov
cli
mov
fnstenv
add
dec
rcll
repz
or
rcl
out
fcompl
push
in
and
mov
pushf
lret
or
fisttpll
out
mov
data16
mull
frndint
dec
dec
icebp
cmovle
push
repnz
inc
sub
or
les
cmp
jp
push
out
rcr
and
mov
or
lods
loop
into
fsubl
xor
mov
movb
sub
xor
movsb
push
xor
out
or
jmp
mov
lret
shrl
sub
pop
ret
fildll
inc
sbbb
test
sbb
xor
cmp
adc
sub
push
mov
xchg
cmp
aas
cs
jo
fadd
mov
das
push
mov
out
jge
adc
repnz
xor
lret
jns
int
adc
adcl
loopne
lea
pop
inc
movsb
xchg
leave
fdivrl
std
xor
xor
cwtl
pop
jmp
adc
adc
sub
popf
or
dec
push
sub
push
add
push
jne
orl
mov
and
jns
repz
fsubl
or
mulb
inc
sub
push
adc
jno
cltd
xor
fistpl
xchg
lods
and
test
sbb
pop
mov
fdivl
out
test
les
loop
adc
lret
sbbb
xlat
or
jge
shll
loopne
shll
imul
mov
xor
inc
mov
mulb
jmp
mov
je
or
mov
lock
fdivl
mov
mov
mov
pushl
dec
insl
fsubl
adc
cmpsl
das
jmp
jge
or
mov
fnsave
nop
in
xor
cmpsb
cmpsb
fsubrl
mul
jno
repnz
lds
xchg
push
push
in
or
sbb
std
ret
cmp
orb
cmp
gs
cmp
insl
cmpsb
mov
mov
inc
test
std
sbb
jp
xchg
pop
int
xchg
mov
sub
mov
inc
mov
mov
cmpsl
pop
fldenv
je
cmp
sub
sbb
rorb
aad
jbe
fistl
nop
xor
adc
fistpl
jae
cli
push
aad
addr16
cmp
ljmp
mov
pop
or
iret
xor
adc
inc
sub
lcall
das
add
data16
pop
cmpsl
xlat
push
inc
ret
sbb
out
push
sub
movb
adc
dec
push
xchg
pop
sub
lds
mov
lds
insb
ds
fdivl
jne
adc
adc
test
and
ret
mov
out
push
out
jmp
fidivl
dec
incl
shll
dec
loope
jno
popf
sbb
pop
imul
jb
pop
adc
xchg
and
sbb
addl
popa
mov
or
or
lock
pop
in
or
cmpsb
ljmp
dec
add
inc
and
jno
mov
pop
in
push
push
mov
push
divl
mov
or
stc
fcompl
mov
movsb
mov
cli
mov
imul
dec
adc
mov
sbb
inc
adcb
or
idivl
adc
dec
or
sbb
clc
jg
jecxz
sub
adc
jns
ret
and
prefetch
or
in
lods
inc
fwait
gs
push
or
xchg
dec
fdivr
shrb
xchg
data16
xchg
clc
dec
outsl
mov
pushf
pop
sbb
fcompl
je
sub
mov
int
ror
push
pushf
fdivl
dec
pop
dec
inc
icebp
arpl
cltd
mov
sub
xor
pop
outsl
cmp
dec
into
cmp
xchg
mov
andb
mov
neg
pop
test
pop
jge
mov
iret
dec
lret
jbe
dec
outsb
stos
dec
sub
gs
loope
mov
leave
and
imul
mov
push
sysret
mov
sahf
and
sahf
cmp
fucomip
mov
popa
ja
jb
adc
stc
and
push
xchg
or
jmp
repz
cmc
sub
inc
icebp
adc
xor
push
xor
push
dec
push
call
jno
pop
mov
mov
pop
and
sbbb
inc
adc
mov
add
jbe
jecxz
dec
lea
jmp
or
mov
aam
fdivrl
sbb
xchg
sbb
or
dec
faddl
aad
iret
pop
insb
or
jp
adc
stos
orb
les
pop
jmp
add
shlb
lods
push
cli
or
pop
cmp
or
push
pop
xor
xor
mov
aad
mov
mov
fcoml
lahf
xor
mov
stos
imul
inc
cmp
andb
mov
cltd
js
jnp
cwtl
fsubr
mov
xor
cmpsl
imul
testb
faddl
mov
in
mov
bound
aam
das
jle
dec
popa
push
or
idivl
or
sbb
shl
out
or
pop
xor
adc
mov
fcompl
fidivrl
iret
mov
lods
sub
icebp
mov
dec
in
jnp
fadd
js
test
sbb
mov
add
or
pushf
mov
dec
out
push
and
pop
cmp
fwait
xor
jbe
mov
sub
fcmovnu
rolb
ret
jne
jnp
xorb
popa
test
mov
stc
or
or
push
movsl
inc
jns
jge
jno
cmp
ja
push
divl
loope
inc
mov
xor
mov
loopne
xchg
loope
gs
jns
add
jle
or
fs
cld
sbb
sub
push
cwtl
pushf
in
push
fdivp
inc
mov
and
cwtl
nop
outsb
inc
xchg
repnz
orl
lret
xchg
dec
adc
in
test
adc
mov
xor
inc
or
cmp
lret
adc
xchg
sbb
popf
fcoml
add
movsl
dec
push
sbb
testb
cmpb
cmp
fiaddl
and
aaa
push
mov
movsl
adc
sub
mov
maskmovq
loop
cmpsl
push
daa
movsl
xchg
push
stos
in
mov
cmp
mov
jbe
fdivr
push
jb
addb
mov
add
fildll
inc
std
jmp
mov
hlt
shll
fcompl
in
int
lea
out
jg
lret
pop
ss
shr
or
mov
addr16
cmp
dec
mov
frstor
mov
cld
xor
or
xor
push
cli
mov
lret
mov
sbb
add
mov
test
sub
out
fsubl
mov
sbb
cltd
mov
xor
fdivl
mov
or
stos
dec
imul
adc
or
jge
call
add
mov
pop
cmp
shl
dec
cmp
mov
mov
add
popa
adc
cmp
jle
add
mov
cld
pop
push
rcrb
adc
xor
leave
xor
fcmovb
sar
mov
push
push
sahf
mov
pop
fistl
sbb
dec
xchg
aad
sub
adc
cltd
rcrb
test
jmp
or
shlb
fwait
push
das
andb
cs
cs
faddl
jecxz
js
es
fisubrl
jge
jno
or
call
nop
xchg
pop
or
aaa
add
faddl
or
jno
loope
or
fisttpl
jge
sub
sarl
mov
loope
xor
jl
xchg
adc
jl
mov
fdiv
mov
jp
mov
mov
mov
mov
scas
or
icebp
enter
mov
pop
jl
jl
push
in
pop
fstl
jb
xor
mov
push
add
mov
stos
popf
popf
sarl
leave
fcompl
ret
mov
pop
mov
ficomps
mov
dec
ljmp
cwtl
enter
into
xor
xchg
test
jl
lret
add
mov
or
insb
aaa
je
pop
or
xchg
xchg
or
std
xor
adc
mov
cmp
or
sbb
pop
outsb
dec
pop
imul
push
inc
xchg
and
std
js
mov
cmp
cmpsl
mov
mov
outsl
jns
xor
ficomps
xchg
insl
in
movsb
shl
mov
lahf
fisttps
push
mov
cli
adc
cmp
rorb
jnp
pop
mov
fstpt
ret
sub
mov
ds
in
mov
enter
fdivl
xchg
loope
or
sub
mov
pushf
dec
inc
mov
ror
dec
adc
adc
mov
cmpsb
cmc
fistpll
fsubl
pop
ds
sub
pusha
dec
and
adc
movb
mov
jo
insl
inc
insl
dec
fcompl
or
push
mov
mov
aas
xchg
and
dec
pop
lods
fmull
inc
stc
mov
xchg
add
jl
pushf
xor
xchg
ljmp
sub
adc
mov
scas
sbb
xchg
or
cmpsl
sbb
imul
add
out
orb
rolb
cmp
or
ret
cmp
and
or
cmc
xchg
fucomip
fadd
adc
sbb
add
rolb
in
dec
in
stos
push
lret
lods
push
push
aas
imul
mov
repz
dec
xlat
fistl
fldl
movsl
xor
shll
or
aad
sub
and
or
jns
in
fisttpll
cmpsb
cmp
xor
mov
jne
mov
mov
les
push
gs
in
loopne
sahf
lcall
jns
push
mov
adc
or
dec
mov
sub
xchg
jp
cmp
shrl
fsubl
mov
jl
stos
cmp
pop
clc
mov
push
mov
rolb
and
shrl
push
mov
dec
add
int
out
inc
fwait
nop
fsubl
pop
lret
cmp
or
test
imul
xchg
sti
dec
adc
xor
jl
mov
dec
fst
sbb
lods
jg
loopne
dec
in
lods
out
shrl
cmp
int3
enter
mov
and
cmpsb
clc
xchg
scas
cmpsl
mov
jns
jne
out
adc
into
fildl
daa
les
sbb
cld
jbe
retw
xchg
xchg
mov
push
mov
sbb
sub
outsb
popf
adc
cltd
stc
out
or
std
cmpsl
sti
jmp
testb
or
loopne
add
sarb
scas
mov
jb
sbb
jge
adc
mov
pop
mov
sub
ja
iret
and
lcall
mov
insl
adc
push
push
outsb
fdivl
enter
fsubrp
std
jae
jns
pop
adc
fisubrl
hlt
stc
jo
mov
test
push
ja
pop
dec
pusha
xor
ret
mov
push
ss
push
sbb
scas
jns
stc
sahf
or
jecxz
fdivrl
fcomp
sub
bound
fcoml
xor
insb
sbb
mov
adc
pop
push
fisubs
fsubrs
mov
fstp
add
dec
mov
and
ret
stos
adc
mov
sub
inc
in
jbe
cs
push
or
pop
int3
lods
and
outsl
fiaddl
push
xchg
ss
jno
in
jnp,pn
test
scas
daa
pop
inc
scas
in
mov
es
pop
inc
push
pop
fs
cwtl
rclb
rcll
insl
sahf
adc
mov
adc
push
mov
xor
xchg
xchg
outsl
mov
in
jmp
sub
pop
imul
flds
cmp
mov
pushf
movsl
or
sbb
cmp
enter
inc
xchg
jnp
xchg
arpl
ds
and
dec
and
mov
and
es
out
daa
fidivs
pop
inc
add
xchg
dec
prefetch
lods
lret
inc
faddl
mov
ficoms
inc
cmp
insl
adc
push
add
inc
test
mov
adc
repnz
add
rcrb
or
loop
insb
mov
mov
inc
mov
sahf
mov
popa
mov
push
jo
and
pop
fcmovb
stos
loope
sbb
adc
push
cmpsl
fiaddl
pop
gs
fcompp
iret
inc
rcrb
push
ljmp
sarl
mov
fistps
scas
add
fdivl
out
out
mov
xor
imul
daa
jmp
lcall
fsubr
sub
xor
rorb
jno
add
pop
in
pop
push
cli
inc
filds
mov
push
or
xchg
sub
push
pop
jge
mov
jae
mov
pop
mov
push
xchg
das
shl
cmp
xor
mov
out
add
jno
push
mov
bound
sbb
or
jnp
mov
fnsave
push
in
jae
mov
add
sbb
jecxz
or
or
daa
call
aas
push
mov
arpl
adc
jmp
ret
cmp
test
in
fdivrl
fsubl
es
jo
sbb
adc
dec
xor
jecxz
sub
in
or
pop
adc
cmp
arpl
mov
xor
popa
jbe
mov
adc
jno
or
mov
lret
jo
push
mov
dec
sbb
or
loop
shlb
das
repz
and
mov
cli
aaa
sub
insl
imul
inc
scas
sbb
into
lcall
xchg
mov
or
sub
cmpsl
lods
add
inc
xlat
or
es
push
aaa
shrb
mov
sub
inc
push
push
test
and
xchg
sub
adc
xchg
scas
mov
fldenv
ss
pop
mov
or
inc
add
xor
xchg
subl
fisubrl
adc
lcall
adc
cmp
jp
clc
dec
xor
scas
xor
test
icebp
add
imul
aad
add
enter
das
cmp
cmp
shlb
lahf
push
ds
push
mov
fs
int3
adc
mov
adc
inc
sti
ja
sbb
loopne
shll
lods
cwtl
test
ss
mov
test
ret
mov
sbb
push
and
insb
dec
mov
cli
cmp
loopne
add
and
lretw
scas
fcoml
fwait
adc
outsw
fmull
psllq
xchg
cmp
arpl
fnstsw
push
ret
jl
pop
sub
jmp
mov
sub
loopne
adc
mov
add
jl
scas
mov
stos
pop
pushf
sti
inc
cli
les
and
ret
push
or
frstor
loope
into
push
repz
outsl
cli
mov
adc
xor
mov
lock
dec
cmc
pushf
cmp
filds
inc
sub
xor
loope
lret
add
lds
lods
adc
cmpsl
outsb
xchg
pop
add
and
xchg
adc
inc
mov
mov
adc
add
inc
imul
fdivrs
mov
push
pop
cs
aam
adc
fucom
test
loope
mov
mov
stos
movsl
enter
pop
jo
pop
adcl
mov
mov
adc
and
into
nop
test
jno
cltd
mov
xor
mov
cmc
das
push
sub
push
and
idiv
or
mov
fisubrs
jb
mov
sbb
out
dec
dec
add
jmp
mov
popa
adc
mov
push
xchg
lea
loop
mov
push
cmp
push
sub
or
or
jl
int3
pop
enter
popf
adc
pop
orb
movsb
iret
aaa
jg
lahf
adc
test
adc
out
inc
cmp
inc
cld
in
cmp
addr16
lods
jl
aam
in
rcr
or
mov
out
adc
xchg
mov
push
fidivrs
pop
adc
out
lcall
imul
xlat
mov
xchg
or
orl
out
fsubl
cmpsb
cld
and
das
fistpll
mov
popa
out
adc
pushf
loopne
sbb
shll
cmpsb
aas
fnstcw
or
mov
lods
les
fisubl
jno
stc
out
jmp
out
stc
stos
push
pop
mov
rol
loop
mov
and
or
insl
mov
shll
adc
aam
cwtl
les
xchg
aaa
pop
and
iret
in
ja
xor
jecxz
cmp
mov
sub
stos
cmp
insb
or
fxch
sbb
mov
insl
cmp
dec
mov
sti
adc
xchg
sub
mov
js
mov
pop
adc
cmp
or
inc
and
pop
push
mov
mov
in
cmp
jmp
fcomps
push
mov
mov
push
lods
adc
dec
es
mov
cmp
sbb
pop
leave
add
cltd
rorl
jae
jecxz
bnd
aas
lods
jne
sub
test
cltd
dec
add
mov
mov
push
in
adc
popa
movsb
lret
add
fdivl
popf
xchg
xchg
push
or
inc
sahf
mov
loope
fdivl
jge
cmc
sti
jno
mov
cmc
cltd
rcl
push
pop
lahf
sbb
or
andb
ffree
into
std
iret
fcmovnu
lds
ss
dec
pop
in
push
dec
jp
push
aad
scas
xor
in
idivb
pusha
push
adc
dec
pop
or
dec
dec
push
scas
sbb
jae
xlat
ljmp
out
inc
sbb
mov
dec
adc
notl
sub
lock
xchg
lods
or
add
mov
mov
negl
jge
adc
rcl
mov
pop
lds
mov
mov
ja
sub
outsl
xchg
xlat
sar
push
mov
aam
js
dec
pop
cmpsw
push
push
add
pop
dec
or
push
je
popf
push
sti
add
cwtl
out
movsl
mov
aad
push
and
mov
rcrl
mov
shrb
xchg
std
aam
lcall
les
and
xchg
fcompl
push
out
xchg
mov
dec
or
scas
push
cmpsl
mov
jge
mov
aad
xchg
shl
jno
push
inc
inc
or
jns
or
ds
adc
movsl
fsubl
fcoml
adc
cmp
xor
enter
mov
jge
dec
jmp
enter
lea
and
sub
mov
pop
xlat
jae
sub
mov
jle
les
lock
lret
or
and
or
in
dec
dec
in
mov
adc
enter
pop
arpl
xchg
mov
mov
js
mov
fbstp
sbb
or
inc
clc
mov
add
sub
in
adc
fs
fistps
jne
push
xor
ja
movsb
out
mov
movsb
pop
divb
enter
lds
addr16
jp
mov
mov
mov
sbbl
pusha
lods
cmp
vunpcklps
frstor
std
inc
and
sub
movsl
adc
jae
and
pop
fdivrs
and
sbb
push
aas
mov
mov
das
movsb
push
sub
ds
sub
cld
push
cmpb
test
sub
inc
adc
mov
push
je
mov
push
sbb
xchg
cmpsb
or
fs
inc
xchg
add
adc
sbb
mov
je,pt
xchg
pop
jg
jp
or
mov
dec
mov
faddl
in
jp
sub
cmp
je
stos
and
subb
mov
mov
stc
mov
adc
sarb
xor
jne
add
jbe
pop
jl
pusha
faddl
and
add
andl
mov
xor
dec
lds
mov
fistpll
jo
call
xchg
xchg
scas
ljmp
cltd
fdivrl
sahf
test
mov
int3
insb
sub
adc
fdivrs
xor
stos
jmp
frstor
mov
fwait
inc
adc
or
test
in
jecxz
cmpsl
subb
add
pop
fsub
nop
outsb
push
bound
inc
cmpsb
jecxz
jbe
adc
cmp
add
int3
sbb
adc
das
mov
cmp
jmp
cs
inc
sub
pop
or
adc
stc
inc
push
rorb
push
inc
or
jo
adc
std
adc
dec
push
movsl
das
mov
out
xorl
mov
fisttpll
into
nop
pop
popa
nop
cli
mov
xchg
loopne
pop
push
sub
lret
les
add
fs
das
adc
sbb
push
xchg
pop
andb
bound
sub
fmull
xchg
xor
popf
and
cld
jo,pt
call
pop
enter
or
pop
test
fmull
lret
pop
cld
mov
add
cmp
pusha
xor
or
test
dec
mov
and
shrb
pop
mov
dec
pop
loopne
cmc
iret
fistpl
pop
and
ror
out
adc
scas
movsb
push
and
xor
fs
mov
mov
and
xor
adc
push
out
adc
dec
inc
cs
jmp
xor
movsl
pop
sbb
cld
bound
pop
lods
cmp
or
cmp
cs
ja
ja
filds
pop
add
push
pop
fistl
ret
loope
fnstcw
sub
mov
enter
add
lcall
addr16
or
and
lods
hlt
jl
xchg
fsubr
dec
push
gs
insl
jbe
mov
je
xchg
adc
sar
roll
and
nop
aaa
cmp
test
mov
push
xlat
arpl
or
mov
mov
or
ja
sti
std
fcoml
and
push
xchg
sbb
cmp
mov
int3
fndisi(8087
cmpsl
or
icebp
lret
adc
aam
shlb
test
adc
sub
push
fdivl
adc
imul
call
cmp
imul
fnstenv
pavgw
das
orl
mov
and
and
sub
or
nop
ss
jne
cmpsl
xchg
mov
hlt
xchg
scas
imul
inc
add
fdivr
pop
push
pop
inc
test
add
xor
movsl
fcoml
nop
aad
mov
pop
sahf
int3
mov
inc
pop
push
popf
imul
addr16
jecxz
sub
sub
xchg
incl
adc
push
mov
or
mov
mov
cmc
js
sbb
cld
pop
or
xor
pushf
xor
mov
mov
jge
rclb
cmp
das
jbe
inc
adc
dec
xor
movsl
inc
and
cmp
mov
pop
leave
ljmp
data16
mov
inc
or
mov
out
push
addb
icebp
int3
lods
lock
mov
inc
outsl
aas
aam
or
add
mov
adc
test
inc
and
and
or
repz
xchg
mov
icebp
inc
sbb
outsl
adc
sub
cli
sbb
fwait
in
ret
mov
jns
mov
mov
jne
adc
push
add
jno
mov
push
fwait
cmp
adc
scas
inc
cmp
adc
or
inc
inc
lods
fisttpll
int3
add
add
mov
and
mov
loopne
dec
lea
xchg
adc
daa
js
and
cmpsl
fdiv
or
mov
mov
aaa
es
push
or
lods
in
test
mov
ror
mov
loopne
test
adc
mov
lret
push
pop
mov
stos
shll
sub
xcrypt-cbc
cmpsl
shlb
shll
adc
xlat
lods
in
lret
int
sbb
shr
or
jmp
in
pop
add
jge
xchg
cwtl
pop
ret
or
roll
sbb
pop
adc
or
or
push
sbb
fmull
xchg
push
out
shrl
jecxz
cmp
adc
stc
xchg
cmpsl
or
xchg
insl
jae
add
test
movsb
popf
lcall
mov
clc
in
shl
enter
mov
scas
cltd
fistpll
ret
mov
aaa
mov
scas
lret
dec
xchg
xchg
ss
nop
push
or
ret
xchg
xchg
rclb
sbb
cmc
adcb
jle
adc
or
jnp
xchg
pusha
xchg
and
adc
sbb
or
dec
or
sub
and
in
jbe
fdivrl
jae
icebp
movsb
fbld
stos
int
clc
mov
or
fstp
push
scas
push
adc
jnp
int
ja
jne
add
fs
shrl
xor
sarb
mov
mulb
pop
ljmp
fnstsw
jmpw
je
lods
fldenv
test
fldt
mov
cmpsl
dec
xor
fimull
adc
fadd
hlt
mov
mov
test
jmp
adc
and
cmp
push
test
xor
add
mov
sti
popa
aas
mov
jne
mov
push
or
add
dec
test
mov
or
or
dec
les
lock
or
or
insl
fdivl
data16
and
andb
pop
rorl
jae
shrl
mov
shl
or
push
ja
stc
faddl
dec
js
pusha
insl
pop
mov
lods
xor
into
test
mov
ret
mov
out
and
or
xchg
mov
mov
mov
dec
adc
insb
push
mov
jl
mov
cs
repnz
jg
cmp
mov
push
jp
bound
mov
jbe
adc
mov
movsl
sbb
push
adc
push
pop
in
push
sub
outsl
xor
jmp
insl
shlb
mov
mov
or
cmp
shrb
jnp
cmpsl
sbb
adc
jp
andb
jne
inc
add
roll
push
fisubrs
test
fsubrl
dec
add
add
movsl
imul
xor
lahf
fwait
xor
sahf
jp
fisttpll
sbb
mov
clc
mov
insb
jb
movsb
sbb
cmpsb
or
int
adc
cltd
addl
push
dec
fdivs
mov
in
aaa
sbb
xlat
xchg
ret
adc
les
lret
fistl
lret
sbb
psubw
inc
or
dec
cltd
je
fnstsw
roll
inc
insl
sbb
iret
fcomp
js
adc
mov
int3
sub
xor
roll
xchg
aad
movsl
mov
mov
xchg
mov
push
and
push
movsb
sti
adc
sbb
mov
sub
roll
sahf
mov
or
add
test
xchg
fs
mov
push
push
fs
mov
cmp
jne
sbb
dec
sbb
mov
xor
fs
fsubrl
in
icebp
roll
dec
or
jbe
and
add
call
jae
int
decl
rorb
xchg
ss
fsubl
pop
or
adc
popf
in
dec
test
adc
call
or
into
sti
cmpsb
dec
fmull
cwtl
xchg
cmp
adc
mov
mov
mov
jmp
push
pushf
insl
xor
pushf
cs
faddl
jg
std
and
fwait
mov
rclb
adc
cmp
mov
mov
sarb
pop
xchg
pop
fwait
loope
jne
adc
add
icebp
lcall
dec
sbb
push
jp
fnstsw
push
inc
or
xchg
sti
mov
scas
mov
sbb
jno
adc
dec
mov
shlb
bound
add
mov
jne
mov
jge,pt
xchg
mov
mov
mov
les
sbb
mov
xchg
imulb
push
testb
imulb
or
push
fxtract
jg
fsubl
mov
lods
loopne
frstor
inc
sbb
rcrb
mov
and
mov
std
fwait
sbbl
mov
or
fdivs
popf
push
es
lock
sub
push
sti
sub
mov
mov
push
add
sbb
rcll
mov
ret
lods
repz
incl
push
popa
or
push
rcr
pop
faddl
push
rcl
mov
pop
loopne
call
add
int3
cmp
dec
pop
dec
or
jge
rcr
hlt
cld
scas
jl
jp
mov
pop
pop
sub
add
mov
lret
cld
pop
add
bound
std
insb
xorl
jns
adc
lret
scas
or
stc
mov
and
jmp
ss
scas
adc
cltd
push
cmp
cwtl
dec
fwait
adc
decb
lock
adc
das
xchg
pop
inc
xchg
push
mov
imul
ja
call
dec
xchg
or
mov
daa
movsb
sub
mov
int
jne
mov
pop
je
dec
orb
or
jp
movsb
out
cmc
xchg
cld
out
insb
and
pop
rolb
adc
add
cmp
andl
ret
decl
jmp
adc
fsubrl
clc
sub
loop
fcoms
shlb
imul
popa
addr16
xor
mov
xchg
xor
mov
sbb
shrl
mulb
or
je
push
sbb
frstor
hlt
mov
mov
int
xlat
fadd
sbb
lock
adc
xchg
sbb
lret
sahf
pop
in
sub
addr16
or
push
or
or
das
inc
jb
imul
ret
ja
cmp
mov
les
leave
fistps
jns
mov
in
pop
xchg
int
test
jno
xor
mov
nop
and
fsts
les
jno
or
push
adc
cmp
mov
xor
cs
insb
adc
leave
cmp
mov
in
add
out
stos
add
jo
push
and
fcoms
jmp
push
and
shl
loope
aas
in
inc
loope
mov
std
roll
lds
sub
or
sub
add
mov
mov
jns
adc
adc
call
mov
andb
pop
cmp
mov
jl
jmp
mov
fldenv
fdivrl
sbbb
push
iret
mov
jno
mov
push
mov
or
subl
add
fisttps
push
push
xor
imulb
fmuls
fsubl
cmp
jbe
in
push
out
xchg
cmp
push
insl
addr16
or
mov
stc
fsubs
cmpsl
xchg
xchg
cmp
xor
xchg
hlt
sarl
test
adc
loope
icebp
cmp
into
or
lds
out
fdivrl
xor
or
dec
sti
xor
push
lret
shr
mov
lock
stos
push
lahf
repz
repz
jg
movsb
lret
bsf
xchg
enter
lahf
xor
pop
xchg
lock
xor
cltd
test
xchg
cltd
imul
out
add
sbb
lea
popa
adc
les
aad
idivb
data16
out
ss
adc
clc
sub
fisubrs
daa
xlat
and
jg
mov
dec
repz
add
ret
int
test
in
in
mov
adc
ja
mov
or
enter
faddl
push
xor
mov
add
in
adc
jge
xchg
cmpsb
adc
or
add
aas
xor
call
or
stos
mov
lods
jp
sub
jo
inc
cli
movsb
pop
jecxz
shr
int3
repnz
fnstenv
adc
ret
lret
in
ljmp
lods
push
jb
pop
adc
loope
xchg
add
mov
out
mov
push
js
nop
pop
or
cs
lds
push
jle
and
cmc
cmp
adc
xor
fsts
or
push
or
ret
outsl
movsb
inc
sbb
jl
pusha
dec
imul
inc
adc
js
std
rorb
mov
mov
cmp
mov
scas
mov
mov
dec
jecxz
mov
ret
dec
jmp
jne
test
push
scas
push
sbb
mov
xor
lock
les
jp
out
fsubl
xchg
movsl
xchg
xchg
ja
mov
pop
repz
dec
call
je
push
stos
cmp
cli
loope
cmp
push
shrb
inc
or
and
add
dec
pusha
fsubrl
mov
push
pop
push
rclb
adc
cld
mov
or
xor
mov
cmpsb
shlb
and
outsl
xor
add
das
jge
mov
repnz
jp
movsl
xchg
add
inc
and
inc
xchg
mov
cmp
fwait
rcl
test
je
xchg
scas
sub
icebp
aad
jp
push
cmp
fcomp
mov
inc
repz
loopne
mov
fsubrl
int
inc
or
decb
cmc
lods
mov
fs
ja
and
mov
dec
rol
add
fldl
lcall
and
adc
imul
loopne
aad
inc
push
in
xchg
dec
push
mov
xchg
xorb
hlt
xchg
jge
dec
incb
rcll
test
das
cmp
addr16
adc
ret
xchg
fistpl
adc
mov
or
add
idivl
and
jmp
fdivrl
lods
bound
loopne
pop
mov
xchg
insl
clc
inc
adc
decb
testb
jp
loop
push
or
xor
mov
clc
icebp
sahf
jb
mov
or
stos
fmull
jns
mov
popa
jp
sqrtps
loop
push
or
or
nop
outsl
popf
fs
xchg
pop
jmp
arpl
insb
cltd
mov
adc
push
jb
jmp
adc
lods
loop
xchg
cld
mov
faddl
inc
sub
insl
gs
mov
adc
cwtl
sub
pop
or
cmp
xor
stos
and
jmp
rclb
pushf
mov
add
in
insl
xlat
movsl
jnp
in
outsb
jbe
adc
inc
shrb
in
jg
jb
cmpb
dec
xlat
inc
fdiv
inc
test
adc
ret
push
cmpsl
and
jbe
aam
sbb
and
in
cmpsl
or
arpl
aad
jecxz
loopne
test
cmp
imul
pop
loope
xor
insb
sbbl
mov
dec
int
xchg
pop
or
imul
mov
mov
or
pop
dec
not
xor
inc
lahf
adc
mov
or
mov
inc
fildll
mov
xor
sub
mov
ret
xor
cmpsl
imul
fdiv
adc
pop
cmpsl
inc
fs
mov
inc
enter
and
bound
pop
mov
push
adc
in
ja
icebp
dec
mov
or
lock
pop
xor
xor
hlt
jmp
insl
jmp
rorb
cmc
aad
sbb
jecxz
test
lods
cld
jb
test
mov
fcoml
loope
les
cwtl
jge
ds
cmp
xchg
adc
dec
pop
test
mov
or
push
cmp
inc
sahf
jne
mov
int
rcr
fldl
js
add
cvtpi2ps
or
fidivl
mov
enter
lret
or
imul
movl
in
dec
jmp
xchg
sbb
mov
hlt
in
lahf
adc
inc
pop
sbb
mov
iret
and
mov
movsl
loop
cs
lcall
pop
sbb
loopne
jmp
outsl
ja
loope
xchg
scas
dec
faddl
sbb
push
mov
cmc
sti
scas
loope
push
and
xor
std
mov
and
xor
jmp
mov
jg
sarl
std
daa
jbe
and
jno
push
push
sbb
and
sti
mov
mov
daa
dec
xor
lea
outsb
imul
shl
mov
sub
adc
pop
ret
xchg
fcompl
lcall
icebp
lods
aad
adc
xor
lods
fwait
out
outsl
mov
mov
mov
adc
mov
xor
in
sbb
xchg
mulb
leave
cmpsb
test
adc
je
fs
out
xlat
or
movsl
out
sbb
cltd
fiaddl
pop
adc
mov
mov
cs
adcl
adc
mov
or
out
add
dec
adc
mov
or
fwait
iret
out
lods
fsub
fwait
ja
pop
dec
push
ret
fisttpll
mov
sahf
shl
stos
or
pushf
fisttpl
je
cmpsb
pop
int
std
jle
scas
cwtl
adc
sarb
jbe
or
mov
icebp
leave
ret
lcall
les
roll
cmp
movsb
dec
add
jl
popf
lahf
scas
add
hlt
fdivl
andb
mov
out
sub
jge
lahf
jecxz
mov
or
mov
data16
sbb
mov
clc
xchg
aaa
and
push
inc
cli
inc
sub
xor
jo
mov
xchg
jecxz
sub
mov
mov
add
and
push
inc
jo
icebp
cli
fcompl
adcb
xor
test
and
pushf
pop
add
jp
orb
lcall
xor
mov
out
lret
aam
imul
sbb
jo
rorl
mov
mov
inc
cltd
ret
push
repnz
xor
mov
lock
push
xchg
push
fwait
jmp
add
adc
mov
lea
fcoms
stc
in
add
mov
cmp
movsl
lahf
cld
fsubrl
scas
into
mov
pop
ljmp
insb
ljmp
mov
cs
nop
mov
cltd
xchg
stos
fpatan
or
push
inc
iret
rcr
cltd
out
test
mov
pop
adc
push
push
dec
mov
ljmp
mov
adc
xor
add
sbb
dec
or
sbb
mov
sbb
pushf
jle
mov
js
pmulhw
ja
lea
jo
mov
adcl
cmp
mov
jecxz
fmull
sti
dec
dec
xlat
popa
lret
dec
cmp
test
mov
lods
pushf
out
jmp
xchg
mov
mov
add
lahf
hlt
popa
cmovg
mov
jg
lea
scas
sahf
mulb
jge
fcoml
stc
cli
xchg
dec
insl
xor
xor
add
push
aam
mov
arpl
adc
test
and
add
aas
repnz
jl
pop
sbb
pop
mov
inc
out
pushf
sbb
test
shll
int
enter
xchg
popf
push
outsb
xchg
fnsave
mov
das
sbb
inc
out
les
je
xchg
mov
mov
pop
adc
js
in
mov
or
fs
pusha
mov
xor
adc
aas
in
push
daa
pop
in
mov
dec
nop
or
jns
lods
dec
std
xchg
fnstenv
dec
xor
mov
pop
cli
movsl
or
icebp
ds
dec
outsl
icebp
jl
aas
mov
loopne
pop
lahf
out
int3
jb
mov
aad
cmp
stc
out
jmp
insl
ret
lds
lret
in
pusha
aaa
fisttps
sub
dec
sbb
or
orb
arpl
push
xor
adc
sbb
sub
adc
dec
mov
mov
inc
push
or
shl
pop
jecxz
mov
and
test
mov
cmpsl
movsb
push
cmc
sbb
sub
lds
dec
mov
push
movsb
faddl
jns
jns
push
out
xor
adc
pop
and
pop
test
mov
dec
lcall
jno
jno
xor
mov
adc
fsubl
xchg
fucom
mov
or
shl
mov
and
jecxz
add
mov
sub
fnsave
or
ljmp
adc
cltd
cli
cmp
inc
sub
mov
mov
movsl
jb
in
pop
sbb
test
aam
lock
mov
outsl
xchg
lret
jae
scas
xchg
testb
sbb
push
out
mov
in
addb
movsb
xchg
in
aad
sub
adc
xor
fwait
lea
shlb
or
cltd
aad
insl
clc
lock
fcmovnb
mov
cltd
pop
mov
and
add
or
dec
aam
adc
cltd
fs
jne
mov
fldenv
cltd
push
mov
adc
jne
cmp
xchg
xchg
push
sub
fcomps
xchg
mov
cli
hlt
sbb
cmpsl
xchg
test
out
insl
jae
pusha
fs
adc
push
xor
in
sbb
xor
ret
mov
pop
or
pop
out
sub
lahf
or
inc
jnp
xchg
ds
mov
mov
jns
movsb
jns
lcall
notb
add
aas
adc
loop
imul
jb
xor
jmp
push
nop
jl
xor
cs
mov
mov
data16
sti
sbb
jns
xlat
add
scas
daa
out
rcrb
lock
xchg
mov
dec
dec
repnz
jne
fcmovnb
jg
fcmovu
cld
sbb
push
cltd
jp
and
dec
jns
push
jns
push
adc
decb
jecxz
pop
pop
sub
mov
popa
mov
arpl
shrl
sub
repnz
xchg
sub
cmc
sub
mov
mov
adc
lret
sub
adc
rcrl
pop
sub
adc
fcompl
adc
fiaddl
das
or
leave
sbb
inc
pop
push
inc
pop
pop
mov
or
and
jge
mov
into
pop
and
add
ja
movsl
pop
out
in
sbb
pushf
aad
add
inc
inc
cmpl
scas
or
add
mov
shrl
ja
or
mov
dec
sub
mov
arpl
mov
inc
mov
loopne
aam
jecxz
inc
jg
mov
push
frstor
fdivrs
sbb
rcl
lds
or
jge
movsl
and
cmp
sub
mov
imul
fdivr
fcom
or
or
dec
sub
push
xor
pop
test
and
or
insb
jge
aam
xlat
inc
addl
test
in
dec
shlb
jle
div
subl
pop
mov
aaa
or
imul
mov
mov
dec
test
dec
mov
jb
inc
adc
sahf
or
push
sbb
addr16
dec
loopne
lds
or
leave
fcompl
cli
dec
out
pop
fcomi
popf
jbe
pop
std
fnstenv
push
stc
mov
fidivs
add
xchg
sar
push
lods
ficoms
inc
out
shl
clc
jb
inc
fbld
or
xchg
scas
faddl
mov
inc
pop
test
sarl
pusha
dec
sbb
cld
xlat
push
push
push
push
flds
push
push
adc
pop
shl
or
sbb
sub
inc
in
orl
jp
enter
leave
or
jp
ret
sbb
pusha
scas
jg
in
jae
add
or
data16
cmpsl
lret
bound
or
mov
jl
fcoml
and
icebp
imul
mov
notl
fstps
mov
mov
mov
lods
sbb
test
inc
dec
push
cmpsl
xchg
cli
int3
int
lods
jp
cmp
adc
add
dec
fisubs
jecxz
mov
std
sbb
lods
movups
xor
mov
jg
jle
cmpsl
in
imul
adc
ret
inc
and
ss
ds
mov
push
shrb
lret
or
lods
mov
xor
jnp
mov
mov
push
push
mov
rclb
sub
aaa
inc
jb
push
cmpsb
lock
mov
sbb
push
adc
pop
fwait
sub
mov
mov
in
adc
or
push
fwait
int
je
mov
sbbl
xchg
pop
pop
jle
popf
sbb
rclb
add
inc
mov
pop
aaa
pop
or
pusha
and
test
pop
mov
pop
xor
mov
push
sbb
inc
rorb
ret
mov
movsb
jecxz
andl
je
xchg
jbe
sbb
cmpsl
jo
fadds
mov
mov
les
nop
xor
xchg
mov
mov
or
xchg
dec
rcl
sti
lahf
cmpsl
sahf
mov
stos
cmc
js
jne
mov
and
es
adc
mov
pushf
jl
test
push
xchg
xchg
add
mov
mov
arpl
push
scas
or
inc
add
mov
mov
insl
adc
mov
xchg
cmpsb
notl
jmp
adc
push
or
mov
sbb
loope
insb
mov
jp
pop
adc
insb
jmp
loopne
mov
pushf
loopne
pop
jno
mov
adc
mov
stos
fstl
in
dec
shufps
shrl
pop
mov
push
add
sti
scas
pop
lods
mov
ret
into
out
or
xchg
xor
push
cmp
mov
mov
or
testl
cmp
add
std
adc
push
lods
in
xlat
test
push
faddl
inc
loopne
mov
leave
pop
adc
cmpsb
jo
pop
cmp
into
lods
stc
mov
jb
pop
pop
adc
cmp
sbb
adc
and
loopne
cmp
adc
movsl
dec
jg
xchg
or
dec
xchg
push
je
fsubr
popa
sbb
sub
mov
mov
cmp
mov
push
dec
in
and
pop
or
rcrl
int
jg
add
sbb
jp
lret
mov
fmull
jne
fisttpll
test
jecxz
mov
mov
cmp
or
mov
les
mov
xlat
jp
and
lahf
jmp
cmc
mov
fisubl
hlt
lcall
popa
orb
and
inc
mov
add
jle
cwtl
out
fs
addl
cmp
jae
jle
ja
mov
or
mov
daa
mov
jge
lods
mov
fsubl
lds
nop
dec
test
scas
mov
lret
popa
adc
push
push
lea
jmp
in
dec
orl
and
shrb
xor
mov
or
ret
jle
cmpsb
rorb
ja
cmp
aad
or
aaa
inc
xlat
in
rcr
outsl
mov
add
in
push
int
cltd
mov
in
inc
or
out
and
inc
jae
lcall
insl
pop
push
sub
dec
mov
stos
cld
xor
mov
lock
jae
aaa
clc
orb
pop
xor
in
ljmp
cwtl
cmp
repz
sbb
pusha
or
scas
movsl
xchg
pop
push
sahf
imul
push
mov
ficoms
sti
push
mov
call
mov
push
inc
js
aaa
mov
sub
sub
lea
scas
pop
add
xor
mov
ljmp
and
xlat
dec
mov
or
out
mov
xlat
mov
mov
sub
out
out
rorb
dec
rcr
dec
inc
sub
dec
test
mov
xchg
and
lds
out
stos
loop
push
push
add
xchg
xor
std
movsl
es
fsubrl
inc
mov
mov
or
jmp
pop
test
in
mov
rcr
pop
addr16
lds
add
sub
mov
sub
inc
fidivs
jns
std
fimuls
xor
pop
pop
mov
ljmp
ficomps
mov
sbb
hlt
adc
mov
imul
jge
mov
fcompl
loop
and
frstor
movsb
daa
add
cmpsl
or
repnz
inc
sbb
fdivrl
jns
xchg
mov
xchg
cmpsl
ss
jmp
fstp
mov
int3
lret
and
bound
adc
mov
faddl
cmc
lods
mov
sbb
and
sbb
fsubl
mov
cld
xor
mov
leave
cmpsb
outsb
fmull
cs
lret
shlb
pusha
movsb
rclb
dec
aad
mov
dec
or
jb
in
out
mov
jb
ficompl
pop
nop
xchg
clc
push
fs
or
fstl
pusha
xor
add
adc
xchg
xor
jns
mov
ss
xchg
adc
sbb
or
xchg
push
aad
jg
test
xchg
stos
ss
dec
xchg
imulb
add
xchg
lock
mov
or
and
push
or
popf
jbe
fmull
adc
fmull
xor
ss
test
dec
xchg
sbb
jno
in
andl
insl
sub
out
push
and
mov
mov
adc
sti
rcrb
jl
xorb
sub
adc
push
mov
add
cmpsb
and
scas
int
lahf
or
push
push
xchg
mov
fwait
ret
test
or
stos
lea
in
fisttpll
movsl
fisubrl
stos
dec
push
mov
pop
fcompl
or
push
lock
jge
mov
mov
and
popf
sbb
fdivp
iret
mov
or
out
cmp
xorl
xchg
movsb
iret
mov
add
fnstsw
pop
sbb
jl
int
mov
mov
adc
or
mov
adc
loopne
loopne
outsl
or
xor
insl
push
push
into
ret
clc
pop
testl
fisttpll
mov
fdivr
dec
ror
xchg
rcl
lods
in
mov
cltd
sbb
dec
subb
movd
scas
and
mov
jge
mov
or
outsb
xchg
pop
or
cmpb
std
mov
ret
ja
imul
dec
mov
pop
lods
add
jmp
sub
inc
adc
pop
xchg
cmp
adc
dec
pop
js
pushf
flds
ret
mov
cmp
mov
mov
or
les
push
adc
mov
imul
fwait
pop
outsl
pop
xchg
cmp
sbb
in
out
or
dec
pusha
addb
jl
mov
lcall
mov
in
mov
sbb
add
std
xor
iret
adc
and
fnstenv
or
pop
sub
out
pop
movsl
js
mov
adc
ljmp
lods
mov
inc
jns
pop
push
loopne
push
push
inc
or
inc
sbb
and
sub
mov
jmp
shlb
mov
jge
mov
stos
xor
xlat
or
bound
scas
in
mov
sub
cmp
adc
dec
mov
pop
jnp
enter
push
mov
xchg
add
jmp
aaa
dec
in
push
shrb
sti
mov
enter
lea
fimuls
xrelease
dec
outsl
push
jl
cmpsl
fcoml
add
fidivl
call
decb
or
mov
sarl
fldenv
xchg
out
or
adc
xchg
or
push
mov
cmc
fdivrl
aam
call
mov
movsl
adc
mov
ja
adc
je
or
bound
mov
fbstp
rcll
or
sbb
sahf
sub
imul
movsb
les
xchg
or
dec
jmp
rcr
aad
mov
hlt
out
mov
fwait
pop
adc
fdivl
mov
add
mov
into
push
pop
adc
shll
rcl
mov
stc
sbb
popf
and
fwait
mov
pushf
push
mov
push
or
adc
aas
adc
xchg
inc
aas
std
sar
sub
movsb
ds
inc
pop
adc
and
sub
addr16
dec
or
decl
adc
pop
mov
mov
dec
sbb
sbb
cmp
arpl
xor
push
ja
add
or
cmp
leave
cld
fsubrl
cmp
mov
les
sarl
sub
scas
fs
fnstsw
lds
outsb
int3
xor
sbb
add
pop
cltd
add
jge
std
in
aam
faddl
jb
inc
adc
xchg
pop
scas
sub
cwtl
notl
in
cmpsb
add
shlb
lret
fisubs
shlb
mov
or
ds
inc
sub
jl
out
mov
cmpsl
mov
sti
clc
sbb
fsubrl
lret
xchg
sbb
push
adc
outsl
out
sahf
xor
or
and
push
mov
in
jbe
mov
leave
test
hlt
adc
popa
pushf
mov
or
in
loop
fsubr
movsl
jne
lahf
push
or
pop
pop
shl
xlat
lea
push
mov
mov
push
cmovno
mov
pop
mov
mov
mov
icebp
xor
aad
test
rcr
jl
cli
sarl
push
and
call
dec
lret
mov
outsb
push
or
xor
pop
lea
mov
shll
repz
push
inc
fnsave
adc
ds
mov
rcrb
pop
jnp
hlt
mov
cld
jmp
shl
mov
iret
pusha
push
dec
cwtl
stc
pop
cmp
adcb
shlb
iret
or
lods
enter
xchg
insl
cmp
mov
insb
push
or
mov
pop
jle
in
cmp
adc
mov
inc
pop
push
adc
loopne
jmp
inc
adc
sarb
push
adc
xchg
add
xlat
loopne
sbb
mov
or
and
das
adc
jge
scas
pop
sbb
in
or
add
push
mov
insl
hlt
jp
mov
or
adcb
push
mov
fldcw
mov
inc
cmp
scas
mov
mov
lret
inc
adc
adc
fdivs
or
cmp
inc
inc
xchg
push
lods
jecxz
adcb
jg
mov
or
sbb
xchg
cmp
dec
es
push
mov
sbb
xchg
repnz
data16
push
or
in
mov
test
pop
lods
ret
ret
loopne
repnz
notl
inc
and
into
cmp
fiaddl
push
sbb
cmp
pushf
or
aam
testl
ret
jo
sub
std
pop
cmpb
cld
test
pushf
xlat
mov
pop
mov
pop
lcall
icebp
shlb
mov
int3
jl
jecxz
faddl
jge
push
mov
loop
aaa
add
add
xor
xchg
xchg
pop
mov
mov
dec
or
into
lock
pop
shrb
addl
mov
or
or
cmp
fildll
mov
mov
xchg
insb
mov
lods
movsl
mov
pop
insb
inc
dec
out
ja
aaa
and
test
dec
push
and
jne
and
cli
jno
xor
xor
fwait
mov
rorl
aas
jns
leave
scas
mov
pop
inc
inc
mov
jle
cmc
lds
jnp
sub
loope
cli
pop
icebp
mov
stos
sbb
imul
scas
dec
adc
fstl
lods
push
movsl
into
pop
daa
cmp
ljmp
subb
mov
mov
mov
jecxz
in
add
fxch
out
stc
xor
testb
fidivs
je
mov
imul
sub
mov
xchg
xchg
mov
call
push
in
cltd
cli
imull
or
lahf
int
out
sub
push
js
pusha
mov
dec
mov
fs
rclb
repz
dec
xor
mov
add
inc
sub
dec
jmp
sbb
aas
and
xor
adc
add
loop
popl
fsubs
lret
cmp
jne
jb
mov
movsb
scas
push
mov
xchg
pop
daa
xchg
in
adc
mov
fcompl
sub
mov
fstp
cmpsl
and
outsl
test
fwait
hlt
mov
fwait
and
dec
adc
mov
in
cli
and
xor
push
stos
cmp
adc
test
arpl
mov
sub
ja
adc
jmp
mov
or
shrb
mov
sub
mov
jecxz
jnp
adc
xlat
sbb
fcomi
and
fsubrl
mov
jge
mov
daa
xorb
dec
jmp
xor
or
ljmp
scas
cld
jecxz
enter
lods
mov
add
faddl
fnstsw
icebp
inc
mov
jno
or
push
pop
mov
sbb
push
inc
add
fstl
sbb
fildl
adc
add
jno
lea
mov
fdivrl
cmp
decl
js
mov
daa
mov
in
inc
adc
icebp
push
in
jo
or
clc
or
rcr
xor
aaa
sub
out
mov
repnz
arpl
arpl
and
jle
out
insb
or
lret
xchg
dec
decl
inc
rcl
mov
pop
stos
xchg
pop
mov
test
cmpb
jmp
stos
in
repz
mov
mov
xor
popa
adc
mov
inc
mov
fmull
int3
loop
mov
in
daa
sub
outsb
fcompl
sbbb
stos
mov
adc
jl
add
sbb
jo
adc
rcr
int
les
dec
xchg
rolb
iret
stc
loopne
pop
pop
mov
in
and
cltd
lods
fsubrl
pop
int3
sub
icebp
or
dec
hlt
pop
cs
adc
mov
outsl
sbb
jae
and
dec
mov
or
add
fmulp
fdivrl
jmp
jg
sub
pop
mov
mov
sbb
ds
int3
ficoms
add
sbb
inc
mov
mov
fcompl
sbb
push
pusha
rorl
lret
cmpsb
fstp
fs
fsub
inc
notb
pop
mov
and
dec
pop
inc
mov
sub
pop
sarb
mov
sbb
pop
xchg
scas
add
or
add
xchg
cmp
cmp
call
ss
jo
scas
push
int3
cmp
inc
call
add
orl
je
pop
test
roll
add
test
lock
adc
pop
xor
xor
fsts
xchg
fdivrl
mov
inc
ds
fmuls
lock
push
dec
mov
mov
add
aam
sub
jmp
lock
push
nopl
xchg
into
sbb
cmp
fsubrl
push
icebp
scas
and
or
jg
pop
inc
xchg
adc
mov
jbe
leave
fcoml
cld
mov
mov
push
fstpt
sti
xchg
and
ret
jmp
mov
sub
adc
stos
lahf
clc
or
jg
or
jecxz
jne
icebp
fidivs
mov
dec
xchg
mov
std
jp
fdivl
cmp
mov
push
loop
mov
scas
addr16
sahf
js
sbb
push
sub
xchg
fmull
shrb
dec
sub
push
gs
addl
iret
sbb
scas
dec
push
and
mov
adc
js
dec
jmp
mov
adc
xchg
dec
mov
xor
mov
mov
mov
push
lods
nop
add
lods
inc
pop
mov
xchg
mov
push
add
stos
add
push
and
mov
je
jmp
sub
mov
add
or
popa
or
adc
sub
in
xchg
or
lcall
in
gs
inc
mov
imul
fcompl
mov
adc
jns
mov
xor
loop
push
push
jne
cmpsb
and
push
repz
into
ret
jo
push
fisttpll
lods
stos
pop
pusha
sub
stos
push
repnz
loop
fwait
leave
shll
lock
inc
or
sbb
arpl
faddl
nop
pop
leave
add
std
jge
inc
loopne
leave
pushf
adc
mov
push
add
push
push
xchg
pop
neg
adc
gs
push
mov
jle
xchg
hlt
push
or
ret
adcb
inc
daa
jne
adc
push
rcr
jge
scas
mov
in
mov
ret
cltd
lcall
pop
divl
shrl
sub
or
mov
mov
out
lcall
nop
orl
mov
mov
popf
jnp
xor
repnz
and
cmp
fsubrl
pop
stos
cmpsl
push
or
loopne
mov
push
shrb
testb
pushl
fcom
or
sbb
or
aas
cltd
xor
cmp
sub
out
adcl
mov
sbb
or
cs
cmp
pushf
in
sub
inc
ds
outsl
add
int
insl
push
lds
mov
xchg
sbb
xor
mov
mov
rolb
aam
xchg
push
fsts
add
add
fstl
aaa
and
mov
fwait
pop
in
or
lret
mov
adc
cmpsb
fldenv
sub
inc
or
stos
jg
mov
fcmovb
sbb
repz
ja
stc
movsb
jg
js
dec
popf
cli
jg
adc
inc
lret
jo
daa
and
push
out
xchg
das
cmp
push
jg
adc
or
adc
stos
or
or
cmc
xor
pop
mov
mov
push
dec
icebp
movsb
es
shlb
xor
adc
dec
cmc
or
push
add
dec
adc
adc
or
subb
fildll
aad
xchg
lock
cmc
pop
or
jno
daa
and
scas
in
push
mov
adc
inc
nop
xorb
and
aas
ficoml
ret
pop
jmp
into
cmpsl
xchg
mov
mov
test
push
rcll
into
pop
fmulp
mov
insl
push
inc
push
adc
scas
and
lret
pusha
stos
repz
pop
mov
sbb
frstor
push
test
cmp
sbb
sub
sub
push
faddl
lahf
xor
sub
dec
mov
mov
shrb
das
mov
or
fisttpll
andb
xor
mov
or
call
mov
fcmovnu
sahf
xor
mov
mov
pop
pop
mov
inc
mov
roll
or
jle
or
fdivr
das
cmp
xor
mov
icebp
mov
push
push
fldenv
int
in
jp
test
or
jb
pi2fd
cmp
idiv
popf
lds
std
or
push
jle
and
inc
pop
gs
arpl
pop
rcl
xor
mov
push
sub
xor
inc
xor
je
xchg
adc
test
mov
pop
pop
js
push
mov
or
sub
dec
mov
or
inc
inc
lcall
shll
out
rcrl
outsl
loopne
sub
mov
addr16
xchg
out
mov
adc
add
test
pop
mov
dec
shl
imul
lea
cmp
jmp
call
jae
sbb
js
mov
mov
pop
jp
xor
data16
or
xchg
push
mov
ss
iret
adc
inc
cld
test
jle
sbbb
lods
daa
int
add
iret
aas
fisttps
cmpsl
scas
xor
test
out
addr16
shlb
lea
and
in
mov
add
gs
or
adc
and
rclb
xor
pop
cmpsl
sbb
push
or
sbb
fsubrl
cld
mov
fwait
negb
outsl
cmc
les
popa
and
dec
out
fstp
mov
and
and
push
adc
jbe
loop
rorl
cli
xchg
fwait
push
sbb
xchg
ret
or
repnz
push
ret
fcoml
cld
clc
sahf
or
sbb
push
mov
add
nop
insb
addr16
enter
mov
jp
hlt
fldt
rcl
leave
pushf
std
clc
jle
outsb
or
cmc
pop
mov
fisttps
inc
movsl
sub
leave
or
xchg
mov
fmul
adc
popa
in
pop
sbb
lret
or
in
adc
mov
loope
xor
repz
cmc
adc
shl
int
inc
or
sahf
enter
test
out
popf
push
pop
fsubl
and
xor
push
pop
in
xchg
dec
test
mov
sbb
pop
ret
lock
sub
cmp
or
lock
or
adc
mov
pusha
xchg
and
sahf
xor
lods
iret
faddl
cli
sbb
dec
pop
mov
rcrb
jo
and
test
rorb
cwtl
out
dec
arpl
add
scas
push
out
or
xchg
addr16
dec
and
inc
nop
jo
or
xchg
add
popa
push
gs
or
xchg
jae
adc
dec
dec
cmpsl
or
mov
or
fcompl
or
sbb
ja
repnz
add
je
jle
mov
in
and
fisttps
fsub
mov
xchg
pop
pusha
loopne
jp
inc
sub
clc
sbb
test
sbb
addr16
das
or
dec
ret
and
enter
or
pop
mov
icebp
jecxz
fstl
lcall
inc
cmp
mov
loopne
sahf
mov
push
sti
aam
jmp
sub
or
bound
mov
pop
dec
or
pop
in
enter
sbb
push
pop
lcall
push
inc
pop
inc
or
pop
ffree
mov
mov
sub
cld
dec
xchg
fdivrl
fwait
inc
fmull
ljmp
add
imull
icebp
adc
in
stc
mov
mov
push
fidivrl
cltd
inc
xchg
cs
mov
mov
movsl
dec
mov
xchg
mov
cmp
sub
lret
mov
mov
sbb
cmp
ja
or
int
dec
push
iret
mov
add
add
fnstenv
int
add
ljmp
mov
rclb
enter
leave
mov
pop
or
iret
inc
js
mov
adc
movb
or
inc
clc
pop
mov
das
sbb
aas
pop
mov
cmp
insb
push
cs
or
and
subb
jno
imulw
xchg
leave
sbb
hlt
rorl
cli
adc
aad
or
ss
xchg
sbb
mov
cwtl
cmc
gs
pop
loope
dec
imul
mov
mov
scas
mov
push
adc
mov
jmp
cmp
ret
or
je
mov
inc
xchg
iret
adc
leave
inc
jno
movsl
jae
push
xor
stc
scas
push
dec
adc
inc
repnz
sub
mov
adc
cltd
pop
xchg
push
cmp
out
push
test
inc
not
mov
sub
or
xlat
dec
out
loopne
movsl
mov
mov
aas
cmp
cld
loopne
sub
jo
ss
jecxz
lds
jl
and
cmpsl
orb
mov
test
loopne
in
sub
inc
adc
xchg
xor
and
fisttpll
icebp
mov
cld
fdivrl
mov
mov
mov
jae
out
lock
daa
xor
xor
add
push
aas
dec
jmp
xor
lods
mov
push
faddl
aad
rcrb
repnz
add
fsubrl
xchg
pop
jl,pt
jp
mov
pop
jne
xchg
scas
es
sbb
out
sbb
or
adc
mov
mov
pop
ret
lea
xor
sbb
and
xor
xor
icebp
adc
sub
sub
push
je
push
fildll
cs
shlb
sbb
shr
mov
outsb
mov
lods
aas
outsb
cmp
dec
sbb
pop
mov
cmp
sub
lea
mov
push
mov
xlat
das
repz
mov
mov
orb
push
sub
mov
pop
mov
lcall
push
inc
popf
mov
arpl
mov
sbb
cmp
jmp
sub
lds
faddl
fs
mov
add
mov
in
mov
cwtl
repz
sbb
jb
mov
pop
pop
mov
call
pop
jl
cld
xchg
iret
xor
or
add
lret
mov
movsb
adc
cli
lcall
adc
mov
inc
pushf
imul
loop
and
flds
cmc
cmp
repnz
aam
fucomip
push
fcoml
or
fdivl
and
loopne
mov
sub
lret
scas
jno
adc
shll
loopne
mov
lods
jb
xor
fcomi
mov
add
stc
push
es
xchg
aam
lock
xor
sub
rcr
sub
cmpsl
push
cmp
sub
or
push
sub
sub
push
or
and
fcoml
sbb
xlat
mov
insb
push
mov
daa
out
mov
out
hlt
mov
lahf
leave
mov
pop
pop
js
mov
mov
bound
mov
sahf
or
stc
test
push
popf
dec
pop
adc
scas
rcr
inc
mov
mov
fldt
xor
dec
sbb
mov
mov
cmpb
inc
ljmp
subb
daa
sbbl
cmp
pushf
std
or
shll
adc
ficomps
or
sub
push
inc
fdivrl
dec
add
cmpsl
xor
lea
arpl
roll
and
pusha
lahf
cmp
cmpl
stc
stos
xchg
adc
es
inc
scas
add
or
push
xor
pop
xor
negb
add
mov
or
iret
bound
fwait
sbb
insb
stos
frstor
sahf
push
lods
bound
fdiv
orb
sarl
mov
sarl
sti
xlat
faddl
lods
xchg
push
aam
aad
or
pusha
pop
imul
cmp
mov
bound
in
lods
mov
es
repnz
popa
clc
bound
fcompl
jae
xlat
stc
sbb
scas
xor
ss
icebp
ja
inc
inc
inc
xchg
mov
cmp
dec
mov
xor
and
leave
xchg
mov
adc
dec
inc
test
aas
xchg
daa
or
cmp
sti
test
and
lds
fimuls
rorl
int3
sbb
nop
cmpsb
jae
mov
inc
std
es
dec
nop
mov
stc
push
test
clc
lea
add
and
pop
adc
and
ljmp
jae
test
mov
adc
insb
test
jo
or
jbe
in
pop
cli
iret
fldenv
mov
cltd
or
pusha
pop
jo
mov
adc
and
mov
pop
pop
rcl
test
fidivrl
rcl
out
mov
sbb
xchg
cmpb
adc
cltd
lahf
lods
out
fwait
lods
xchg
in
mov
rclb
das
in
sub
and
pushl
xchg
mov
sbb
mov
jnp
popa
push
and
aam
cmpl
cs
mov
faddp
repnz
in
xchg
and
fwait
add
and
dec
sbb
pusha
fwait
xchg
mov
push
xor
cmp
or
aaa
or
pop
fdivr
int
pushf
jne
push
andl
mov
pop
call
jmp
xor
inc
xor
jge
or
pop
cmp
test
cmovl
jns
jle
pop
lods
mov
and
ja
and
daa
enter
and
mov
or
inc
adc
addb
fcoml
sbb
fimull
or
push
pop
or
cmp
sbb
stc
outsl
adcl
stos
fnstcw
sub
into
iret
add
add
mov
outsl
inc
int
adc
or
mov
xchg
scas
mov
dec
iret
gs
popf
je
mov
jge
xor
fcmovnu
roll
xchg
dec
fstl
sub
sbb
mov
mov
sub
pop
inc
mov
jp
sbb
adc
daa
jns
dec
mov
sub
jnp
cld
lcall
mov
lods
mov
mov
sub
test
mov
push
mov
std
ds
xor
fnstcw
das
fcomps
xchg
lods
lea
jecxz
loopne
cmpsb
cmp
fdivrl
lea
xlat
mov
dec
inc
cmp
cmp
leave
xchg
shl
mov
jb
rcrl
ja
shll
sahf
fs
sbb
or
mov
sbb
aaa
cld
fistl
sahf
dec
and
jne
fwait
xchg
fmul
add
ret
fsubrs
push
aaa
and
test
ds
ds
bound
mov
test
push
lds
out
jg
or
or
fwait
push
adc
adc
xchg
imul
mov
mov
or
lahf
sbb
lcall
push
mov
jo
adc
push
js
inc
jno
jle
mov
test
iret
fwait
jae
sbb
fdivrl
out
add
sub
jae
mov
repz
fsubrl
pop
iret
cmpsb
lret
test
push
lret
sbb
mov
jnp
sti
stos
fcoml
xor
pop
or
in
enter
push
add
mov
je
cli
push
mov
in
xchg
push
addr16
daa
dec
pop
fsubs
and
push
mov
add
jp
repz
adc
gs
sub
arpl
xchg
aad
stc
enter
cwtl
rclb
rolb
pop
ficoms
jne
clc
in
aas
outsl
add
sbb
jmp
js
mov
loopne
jmp
mov
in
cmp
rcll
pop
mov
out
xor
cltd
inc
and
aaa
iret
sub
fdivl
dec
sub
ljmp
fwait
or
ss
sub
movsl
loop
jae
lock
insb
sub
xchg
stos
out
and
jle
popa
sar
mov
cmp
mov
cmp
push
rcrl
stc
xlat
mov
test
out
out
test
adc
pop
idivb
hlt
imul
sbb
mov
mov
cmp
insb
and
jg
jle
test
push
fisttpl
adc
xchg
mov
shlb
adc
les
mov
add
jle
int
cli
ds
inc
adc
and
or
xlat
repz
or
test
add
dec
popf
mov
rclb
bound
mov
add
pop
mov
cwtl
or
xchg
jmp
pop
les
std
mov
shlb
imul
repz
pusha
jge
pop
out
pop
dec
push
mov
fdivl
push
sbb
cltd
mov
inc
pop
xchg
or
mov
test
mov
mov
cmpsb
or
sbb
out
cwtl
push
repz
fstp
arpl
push
adc
dec
xorl
sub
icebp
and
jmp
icebp
push
pop
je
or
sti
and
cmp
ret
mov
or
or
fiadds
lds
cmp
cmp
sahf
mov
nop
mov
adc
or
or
and
movsl
xor
xchg
leave
jo
adc
dec
inc
adc
test
shll
push
pop
pusha
imul
jne
xchg
out
mov
sub
or
rol
pop
fdivrl
sub
mov
daa
outsb
fwait
cmc
imul
xchg
xchg
test
aas
jge
fidivrs
add
add
test
rcr
inc
xor
xchg
ja
fdivp
fwait
xor
test
fmull
sub
in
movsl
test
mov
imul
or
fmull
cmp
sbb
rcrb
aam
fsubr
in
cs
xor
aas
leave
int
pop
das
and
mov
jno
imul
and
dec
cwtl
adc
pop
out
pop
xchg
insl
pop
cld
push
test
jb
pop
jle
xchg
mov
aam
hlt
mov
cmpb
popa
iret
or
adc
dec
call
or
push
aad
icebp
cmp
call
iret
inc
mov
out
inc
stos
dec
mov
and
rcr
fs
or
push
in
loopne
ror
notb
inc
repnz
repnz
into
mov
ret
xchg
dec
sbb
jg
ja
inc
arpl
mov
mov
add
scas
pushf
or
or
clc
lock
sub
or
mov
push
stos
mov
adc
and
jmp
mov
repnz
stos
xor
incb
mov
dec
adc
clc
repz
out
add
or
xchg
inc
lds
stos
dec
or
xchg
ret
shl
in
and
scas
and
jno
fmull
pop
mov
neg
in
mov
mov
in
cmp
xchg
and
inc
out
xor
pop
cmp
or
fucomip
xchg
jle
std
icebp
pop
push
scas
jne
mov
add
jno
adc
adc
and
movsb
inc
js
cmp
out
dec
adc
fists
in
test
sub
or
aad
leave
xor
mov
cmp
fisttpll
insl
jbe
mov
sub
scas
xchg
or
sbb
fldt
jge
aam
jae
ja
or
push
daa
ja
pop
jne
pop
roll
xor
xchg
sbbb
pop
test
inc
into
lods
into
cmpsl
mov
and
ljmp
repz
xchg
or
push
clc
in
cli
jne
sbb
sahf
sbb
cmp
dec
or
test
cmp
xchg
fs
or
xlat
adc
loope
xchg
scas
mov
sub
mov
imul
mov
adc
mov
inc
sbb
xor
pop
cmp
cmc
push
xchg
out
mov
inc
push
scas
dec
in
scas
fcoml
xchg
insl
push
insl
aad
xor
fdivl
in
adc
mov
arpl
xchg
xchg
imull
or
dec
sub
adc
icebp
push
push
scas
mov
repnz
pop
jbe
sub
sbb
mov
mov
mov
insl
insb
jg,pt
xchg
inc
idivb
adc
mov
loope
xchg
lds
xchg
scas
js
jge
jno
add
std
nop
cmpsb
loopne
sti
jp
adc
jae
adc
sbb
ljmp
push
loopne
mov
faddl
adc
or
mov
arpl
fcoml
fimuls
stos
lahf
gs
rorb
call
clc
gs
jl
mov
test
clc
mov
fcompl
in
xor
fisttpl
mov
popf
cmp
movb
adc
push
mov
push
or
sbb
daa
aaa
fdivl
or
xchg
bound
fcompl
xor
aas
mov
push
je
rcll
mov
in
and
adc
adcl
shl
add
xchg
repnz
sub
ret
loop
ficoml
sti
stos
aas
adc
fdivl
outsl
je
add
imul
add
jo
xor
sbb
push
fsubl
mov
repnz
jmp
roll
mov
ret
add
mov
push
and
jmp
icebp
jbe
push
mov
xchg
xor
ja
cmp
js
adc
movsl
mov
adc
mov
fsubr
jp
cmc
dec
or
jbe
inc
mov
sub
and
jmp
shrl
adc
out
cwtl
cltd
out
jnp
imul
or
std
pop
scas
adc
scas
dec
adc
mov
ljmp
mov
leave
mov
mov
push
movsb
mov
out
or
mov
ret
jmp
pop
mov
std
inc
call
cli
gs
fldt
cmpsl
lods
adc
lret
adc
mov
lods
xchg
add
fsubrl
mov
pop
adc
mov
and
dec
xchg
mov
jo
add
lods
mov
es
mov
push
int
test
lret
stos
and
aaa
ja
xchg
dec
and
xchg
fists
pop
insl
and
mov
mov
and
cmp
pop
xchg
insb
lret
xlat
cltd
leave
pop
adc
cli
push
pop
xchg
cld
jp
fidivrs
xchg
mov
jns
adc
ss
out
sbb
sarb
xor
xor
sbb
or
mov
jmp
pop
jl
std
mov
movsl
in
sub
and
mov
cs
decb
sub
xchg
bound
jle
inc
xor
sbb
movsb
insl
mov
das
mov
xchg
and
xchg
xchg
mov
cmp
push
int
out
xor
test
negb
xor
sub
and
nop
in
ficompl
jae
mov
shll
jle
lret
shr
pushf
shrb
test
icebp
xlat
xlat
fisttpll
ret
mov
fistpll
ss
gs
or
xchg
jmp
test
insl
mov
mov
mov
mov
adc
rcrl
cmc
call
rorb
adc
sub
lea
inc
add
and
fdivl
test
push
ret
adc
stos
testb
je
popa
imulb
jo
mov
fmull
scas
add
dec
inc
xor
insl
mov
push
xchg
or
ja
mov
fdivr
mov
mov
mov
mov
inc
fsubl
les
dec
into
mov
repz
mov
pop
mov
mov
inc
testl
push
leave
rol
inc
div
test
xchg
dec
xor
test
add
fsubrl
out
jae
dec
in
cmc
jo
push
cmp
pusha
or
fcmovnb
dec
jecxz
dec
adc
enter
xchg
leave
pop
stos
xlat
cli
xor
lcall
xchg
dec
or
xor
fcompl
insb
imul
es
and
in
pop
mov
add
sub
adc
ss
push
jge
mov
dec
icebp
fcoml
push
add
or
lret
mov
push
mov
or
loop
out
sbb
mov
fmull
dec
loopne
push
lahf
iret
mov
in
rclb
inc
mov
push
in
inc
out
xchg
mov
mov
xchg
adc
dec
push
add
mov
nop
xchg
adc
stos
jl
sub
jecxz
jno
mov
into
loop
and
sub
js
dec
or
or
icebp
jno
int
in
mov
mov
and
push
pop
scas
adc
loop
lods
pop
pop
or
hlt
jl
fdivl
jbe
in
cmc
out
adc
push
into
or
pop
xchg
scas
jp
test
ljmp
mov
mov
xchg
loopne
and
mov
ret
aam
lcall
repz
xor
adc
subl
or
dec
mov
lea
mov
adc
xor
dec
div
fstl
stos
adc
test
or
aas
arpl
js
mov
dec
dec
cltd
pop
fisubrl
mov
rclb
pop
insl
je
mov
iret
mov
sub
push
pop
and
pop
fbstp
mov
cmc
xchg
pop
divb
ljmp
sbb
jmp
in
push
mov
push
pop
sbb
test
mov
stos
shrb
pop
jmp
test
pop
mov
loope
and
mov
cmp
or
nop
aaa
jae
rcl
ljmp
or
cmpsl
jle
sarl
lds
int
int
or
or
pop
nop
push
sub
imul
inc
mov
or
mov
xchg
and
xor
push
bound
lods
jnp
js
adc
testb
lea
or
xchg
mov
add
add
frstor
inc
test
stos
xor
push
xor
das
mov
mov
jge
in
mov
mov
push
pop
xchg
push
stos
jl
pop
xchg
into
jp
stc
cli
lock
dec
sub
jne
cmpsl
jecxz
mov
mov
int3
int
das
call
aas
outsb
aad
fcompl
std
arpl
or
xchg
add
dec
cmp
mov
ret
rcr
mov
add
sti
outsb
pop
imul
fists
mov
fxch
repnz
sarb
adc
push
arpl
cmpsl
stc
xor
adc
roll
push
dec
mov
lods
mov
xlat
fsub
xchg
data16
xchg
cmp
cltd
push
imul
mov
popf
jmp
or
sahf
movsl
jp
faddl
mov
mov
into
mov
mov
mov
add
inc
inc
orl
pop
out
ror
das
pop
mov
or
popa
mov
ret
lea
cmp
pop
aas
fisubrl
mov
xchg
mov
rolb
mov
jne
in
insl
sub
jecxz
insl
addl
ljmp
cmc
sbb
rolb
adc
push
lahf
in
int
jns
cmpsb
cmpsb
hlt
jae
inc
mov
dec
mov
xchg
or
dec
je
inc
gs
or
popa
mov
jmp
adc
push
cmpsl
push
test
dec
sbb
sbb
aaa
fildl
ja
mov
scas
loope
mov
and
and
or
xchg
arpl
push
lds
mov
lret
pop
or
lea
gs
adc
fsts
xchg
lods
xor
pop
out
push
pusha
nop
fsubr
arpl
pop
pop
cmp
adc
xorb
push
pusha
cwtl
sub
xchg
dec
xchg
into
faddl
pop
xchg
push
mov
sbb
adc
cmpsl
xchg
pop
or
sbbb
pop
mov
mov
lret
or
ret
stos
fsubl
sub
js
pop
ret
or
add
mov
push
adc
cwtl
fsts
pop
mov
pop
leave
push
lret
pop
mov
rcrl
cmp
fisttpll
inc
or
mov
int
testb
dec
ds
mov
ret
xchg
rcrb
filds
dec
mov
outsb
cmp
mov
ds
es
or
lock
or
sub
call
lea
lds
mov
jmp
shl
imul
fmul
push
adc
cmp
adc
xor
sbb
je
pusha
iret
popa
nop
push
arpl
shll
jmp
mov
fucomp
loopne
leave
mov
fucom
jnp
cmp
mov
sarb
push
or
pop
xor
dec
ss
frstor
xor
into
sbb
jbe
aad
aaa
movb
loopne
cmp
sub
ljmp
adc
jecxz
arpl
sub
rorl
mov
adc
inc
adc
mov
cli
out
sbb
sbbl
aam
test
push
decb
repz
fcmovu
lret
in
iret
imul
mov
adc
sbb
push
jecxz
push
das
int
and
cli
add
jns
mov
pushf
dec
ret
and
insl
pop
adc
ja
leave
bound
cmpsb
outsl
ret
js
int
aas
adc
fimuls
sbb
mov
mov
call
ret
dec
shl
or
sar
cwtl
adc
pop
das
or
jne
pop
or
sub
bound
jnp
adc
dec
loop
outsb
loopne
pop
lods
mov
jo
cmp
sbb
das
fildl
movsb
pushf
je
dec
sub
out
mov
xchg
or
sub
inc
sbb
xor
push
xchg
inc
fdivrs
mov
sbbb
push
inc
js
cmc
das
xorb
test
out
mov
insb
add
sbb
cmc
lcall
bound
xlat
leave
pop
sbb
fisttpl
xor
popa
nop
and
mov
aam
push
out
lock
ljmp
stos
jnp
and
popf
adc
out
mov
ljmp
mov
pushf
or
lods
push
mov
fdivr
push
pop
mov
fs
inc
mov
and
or
pop
fs
jmp
int3
in
fsubr
push
jb
in
int
dec
jae
push
push
mov
sub
data16
aas
mov
aad
out
sbb
insl
hlt
mov
rorb
xchg
ret
jae
xchg
sub
pushf
mov
xchg
adc
push
xlat
inc
or
in
xchg
or
rcrb
mov
flds
fdivl
outsb
ljmp
cli
mov
or
mov
fcompl
jb
out
scas
pop
mov
xor
sarb
lods
ss
pop
mov
insb
in
scas
xchg
ljmp
lods
stc
test
xchg
pop
pop
popa
js
xchg
jg
out
nop
inc
cmpsl
pusha
mov
test
popf
mov
out
ret
push
fcoml
ds
dec
lahf
or
ror
add
or
pop
add
test
or
xor
adc
stos
pop
fldcw
adc
sbb
adc
dec
add
xor
mov
movsb
xor
outsl
adc
shr
lahf
into
xchg
or
fs
ret
fistl
mov
in
mov
push
icebp
jb
mov
dec
jns
xor
cmp
xchg
leave
inc
jg
or
jp
xchg
mov
jmp
imul
mov
jne
mov
lock
xor
mov
adc
jp
stc
clc
inc
or
movsb
inc
cwtl
push
out
mov
sti
cmc
push
scas
pop
mov
mov
cltd
fucomp
add
sbb
add
xchg
add
popf
adc
and
call
stc
jle
pop
mov
andl
sub
int
dec
imul
loopne
cmp
aad
rclb
cmp
stos
or
in
sbb
jmp
adc
pop
iret
fdivl
call
pop
lods
popf
test
imul
sub
mov
push
jae
push
xchg
out
or
and
xchg
es
adc
dec
mov
sbb
inc
xor
aam
fdivrl
mov
xor
inc
xlat
dec
adc
outsb
sarl
sub
js
bound
mov
adc
sahf
lret
cmpsl
adc
and
cmp
les
popf
xor
jg
push
pop
adc
shl
sub
ds
mov
insl
xor
jae
and
fcoml
xor
and
shll
fsubrs
inc
loopne
mov
fadd
pop
dec
pusha
add
aaa
pop
xlat
xchg
mov
adc
sub
mov
adc
cmp
or
push
out
jge
out
arpl
rol
gs
pusha
leave
nop
mov
loopne
xor
xchg
lods
imul
cmp
sbb
shl
jl
nop
sub
mov
out
imul
lds
sbb
xchg
mov
int
push
dec
mov
lods
cmpsl
inc
mov
js
inc
mov
sbb
clc
call
js
push
lahf
push
cltd
lcall
add
push
or
pop
lea
mov
adc
jae
fstps
or
mov
xchg
adc
jmp
mov
push
jns
addr16
gs
lret
xorl
sbb
inc
mov
cmp
outsl
popa
inc
or
push
test
lea
mov
or
les
ror
fsub
aas
sbb
adc
sbb
pop
jne
repnz
repz
bound
out
cmp
adc
cwtl
lret
fwait
push
movb
mov
test
or
ja
or
push
xor
neg
or
xchg
lret
pusha
loope
icebp
mov
arpl
bswap
jns
adc
outsb
jo
inc
cmc
sbb
push
sub
push
jbe
mov
or
cmp
jp
hlt
inc
mov
loop
cmp
fbstp
sti
pop
cltd
jge
cld
mov
mov
jecxz
jecxz
push
lret
cmp
adcb
test
sbb
inc
mov
sbb
mov
cmp
aas
addr16
icebp
xor
xchg
loope
or
xchg
mov
arpl
es
lret
or
inc
mov
dec
jmp
xchg
push
mov
pop
lea
xlat
sbbl
adc
xor
jle
sbb
sbb
cmpsb
fdivrl
push
rorb
sbb
mov
cmp
adc
shll
cld
mov
cs
inc
xor
rclb
mov
xchg
scas
aad
adc
cmp
fmull
sbb
fbld
sbb
inc
push
xchg
fwait
out
addr16
and
xor
fmull
das
in
mov
cmc
mov
sbb
or
lret
or
push
inc
in
shrb
pop
ljmp
rclb
sbbb
dec
fisubrl
test
xor
sbb
jg
incb
pop
fistpll
dec
scas
or
push
loope
push
fdivl
stos
jge
mov
push
out
ljmp
imul
gs
push
or
inc
mov
jmp
dec
stos
loope
mov
cwtl
cmc
push
insl
pop
lock
xchg
in
clc
test
pop
adc
xchg
clc
and
stos
jecxz
add
fistl
in
movsl
fmull
xchg
push
int3
or
jne
movsb
dec
xchg
dec
out
faddl
jnp
data16
cs
pop
mov
scas
sub
mull
rolb
mov
sbb
jmp
adc
push
jp
addb
jl
test
imul
adc
mov
or
xor
and
push
sub
andb
mov
mov
push
cmp
push
add
div
jno
cmp
out
or
pop
cvtps2pd
push
testb
lahf
stos
and
mov
cmpl
mov
jp
add
fwait
test
ja
dec
rclb
or
jmp
aad
push
cwtl
out
scas
pop
push
int
int3
xor
jle
mov
int
push
sbb
sub
push
mov
adc
sbbb
adc
xchg
mov
inc
push
xor
jmp
adc
not
and
or
jg
seto
in
inc
sub
das
das
pop
inc
sub
mov
xchg
pushf
mov
aad
or
jp
out
sub
ret
loopne
mov
insb
and
pop
jmp
cmp
mov
daa
and
pop
jmp
adc
sbb
cmp
in
pusha
sbb
jle
loopne
imul
scas
and
sub
sub
cmp
xlat
in
push
out
pop
stc
inc
adc
insb
pop
xor
xchg
lds
inc
mov
lock
adcb
nop
jae
sub
sub
sub
insb
dec
orl
pusha
iret
push
je,pt
xchg
lock
movups
cmc
sbb
dec
or
cmp
add
jg
lcall
js
loope
mov
cmp
pop
call
sub
repnz
mov
in
mov
mov
outsb
in
adc
jae
or
xor
xchg
cmpsl
mov
sbb
inc
cld
rcr
xchg
mov
loope
add
sub
stc
cmc
jnp
scas
aad
movsb
adc
mov
in
in
mov
daa
sbb
jecxz
sub
adc
pop
ds
push
out
mov
stos
adc
mov
sbb
sub
inc
mov
hlt
ret
adc
inc
aad
shl
fnsave
cmpsl
lret
test
call
in
scas
xchg
jbe
fisttps
mov
or
sti
mov
mov
sub
data16
mov
pop
ss
adc
repz
cmp
icebp
stc
pop
mov
iret
adc
es
lods
cmpsb
cmp
and
mov
mov
mov
loope
fs
add
or
mov
dec
jp
fcoml
push
sub
or
xor
fistpll
dec
adc
scas
or
daa
lcall
dec
push
inc
add
daa
rorl
adc
ljmp
jecxz
jne
mov
xchg
aad
jno
jb
popf
or
sub
adc
cmp
and
push
or
sbb
add
mov
int3
pop
or
imul
fsubrl
fs
pop
push
sbb
sbb
adc
xchg
add
frstor
out
push
je
cwtl
fdiv
sub
xchg
cld
sub
and
jmp
dec
test
add
cs
adc
jno
dec
rolb
out
jmp
pop
sub
push
inc
shl
mov
cld
or
loope
sbb
imul
mov
loope
fildll
jne
movsb
cmp
jno
sub
pop
pop
sub
icebp
mov
sbb
inc
mov
xor
roll
outsb
mov
into
adc
mov
jo
jmp
imul
jo
loope
jg
mov
or
dec
test
dec
scas
ret
dec
es
mov
lds
mov
shlb
lret
out
ss
mov
fisubrl
mov
sub
repz
shlb
rorl
mov
xor
icebp
fists
sbb
mov
adc
or
movsb
pop
mov
fadd
lods
xchg
stos
arpl
popa
mov
push
xchg
daa
std
push
sub
jo
add
or
subb
insb
lret
aad
cltd
std
add
mov
out
fdivrs
pusha
data16
cmp
push
xor
mov
push
lcall
call
in
inc
push
addr16
imul
sbb
lds
incb
sub
push
cmp
out
imul
ljmp
daa
lret
lock
sti
mov
gs
xchg
stc
cs
xor
std
adc
push
cmpsb
or
and
cmp
fisttps
insl
cltd
bound
aaa
sbb
sbb
add
sub
mov
dec
pop
xor
aad
inc
or
inc
pushf
ret
push
mov
xchg
pop
inc
cmp
or
pop
mov
push
sti
or
cmp
gs
mov
mov
cmp
sbb
adc
xchg
outsb
je
pop
push
rclb
mov
insb
maxps
cs
daa
test
jp
icebp
out
xor
mov
xchg
push
mov
inc
adc
jg
or
divb
lahf
push
in
or
dec
das
or
cmp
jecxz
loop
js
inc
inc
imul
dec
pop
andl
push
cwtl
int
movb
cli
xor
pop
shll
or
push
lret
push
lret
cmc
jmp
jbe
push
xchg
mov
add
mov
imul
mov
popf
arpl
or
and
ljmp
daa
repnz
orl
cmp
adc
arpl
inc
or
adc
enter
inc
loopne
mov
jge
cld
sub
fistpl
scas
dec
or
pop
lods
ja
adc
int
xor
pushf
fninit
xor
testb
or
sub
sbb
or
insb
movsl
or
sbb
push
sbb
jno
mov
stc
imul
scas
clc
popf
sub
pop
or
mov
cmc
cltd
ljmp
ja
xchg
or
add
rorb
cmp
jnp
xor
and
dec
lea
iret
xchg
or
pop
adc
add
adc
xor
jp
flds
cmc
shrl
inc
xor
loope
enter
xchg
lahf
xchg
popf
fsubrl
and
add
xlat
push
push
mov
aam
jbe
lret
cmp
sub
lods
loop
mov
aas
push
or
cmpsl
cmp
fsubrl
fisubrs
inc
cmp
sub
sbb
jo
lea
adc
les
pusha
lcall
loope
pop
fdivl
xlat
mov
lods
jnp
insw
jb
fwait
call
mov
stos
or
sbb
jp
cs
mov
or
clc
nop
xchg
or
inc
or
sub
mov
adc
mov
adc
fistl
mov
loopne
sbb
aam
push
dec
rcrl
sub
mov
mov
and
rcr
adc
clc
and
test
xchg
sub
clc
sahf
add
aam
xor
ss
scas
cld
and
push
mov
adc
jnp
lret
shrb
jb
mov
adc
sbb
add
rorl
adc
cmc
xorb
outsl
xchg
mov
test
aaa
xchg
adc
ret
or
das
push
or
nop
pop
jle
shrb
in
add
jb
mov
daa
sbb
sbb
faddl
outsb
xchg
andb
fisttpl
psllw
adc
fisubl
add
mov
out
out
fsubrl
sbb
leave
and
loop
cltd
out
es
dec
aam
cld
sub
stos
mov
and
xchg
adc
pop
ljmp
int
rcr
fsubr
icebp
pop
imul
or
lods
call
add
pushf
cltd
adc
or
lods
and
xor
data16
or
call
cltd
les
mov
push
add
adcl
fldcw
bound
adc
mov
mov
cli
jge
sbb
rolb
lcall
lret
sub
cli
add
sbb
insb
dec
push
pop
int
push
jl
jnp
cmp
loopne
cmovle
lds
or
ljmp
sbb
ss
cmp
pop
mov
cmp
sbb
adc
mov
mov
jle
lea
lods
or
dec
ss
stos
rclb
cmp
imul
insl
std
pop
cmpsl
pop
loope
popa
sub
loope
mov
and
das
adc
push
pop
stos
js
mov
enter
cmpsl
sbb
test
ret
fsub
loop
jns
ljmp
jae
sub
xchg
adc
daa
je
js
addr16
fmul
xor
mov
das
cltd
lret
in
mov
pop
and
and
inc
mov
mov
ss
jg
nop
fistpll
sbb
adc
mov
xor
stc
dec
in
dec
in
aam
or
stc
fcmove
push
lea
jge
int3
adc
lret
adc
leave
dec
mov
cmpsb
scas
mov
in
rcr
scas
push
cmpl
stos
std
aaa
test
dec
adc
mov
mov
pop
and
adc
daa
cs
lea
mov
leave
sarl
fwait
dec
addr16
pop
pusha
aam
add
sbb
pop
adc
out
pop
outsb
cld
ja
push
or
jae
dec
xchg
jge
repz
imul
xchg
insb
ljmp
fmull
sahf
push
insl
sahf
sub
enter
faddl
cmp
and
mov
popf
ficompl
repnz
xor
aam
into
pop
fdivl
push
adc
xor
aam
je
ror
cmp
aaa
sub
fs
push
std
mov
aam
mov
add
dec
ds
cmp
xor
and
xor
adc
dec
pop
imul
mov
std
je
dec
adc
movsb
popf
xor
push
or
adc
ret
aam
out
test
dec
mov
mov
jne
cmp
fnstcw
xlat
insb
cmc
adc
movsl
ss
or
adc
pop
sub
cmpsl
inc
scas
adc
xchg
mov
daa
mov
test
lret
xor
test
push
ja
in
sahf
mov
mov
in
lock
adc
sbb
in
fsts
xchg
loop
aad
mov
fisttpl
adc
data16
sub
das
mov
add
jnp
and
in
dec
mov
dec
out
mov
dec
icebp
cmp
lods
hlt
xor
fdivs
insb
adc
in
jne
loopne
xor
sbb
cs
pusha
and
pop
sub
adcb
xchg
cmp
ret
mov
xor
xor
inc
lea
mov
cs
xchg
jne
xchg
xchg
mov
xchg
test
scas
imul
movsl
jmp
fcompl
cltd
loopne
leave
sbb
xchg
inc
ret
and
mov
and
jle
fwait
test
repnz
pop
fiadds
pop
cld
test
test
dec
pop
and
adc
test
rorb
xchg
pop
jmp
cld
mov
fs
fs
mov
xorb
push
sub
loope
push
mov
shl
mov
out
mov
stos
jns
push
push
cld
mov
fdivl
int3
movsb
mov
shll
outsl
adc
push
repnz
add
or
ljmp
or
loop
insb
add
push
lds
loope
jbe
adc
push
shll
cmp
xor
ficoml
lock
cs
fwait
std
add
pusha
les
or
pop
dec
sbb
loopne
jne
push
jbe
push
daa
and
mov
ds
or
pop
inc
pop
insl
sarb
cmp
mov
xor
push
dec
outsl
mov
shr
pusha
imul
mov
lcall
fcoms
push
sbb
enter
adc
mov
cmp
or
push
shll
cltd
testl
mov
push
cli
adc
sbb
push
inc
add
jae
sub
ljmp
dec
xchg
enter
data16
test
mov
imul
or
inc
mov
testl
mov
mov
sub
imull
adc
notb
fdivl
ds
and
jno
test
adc
mov
cmp
push
in
cmp
addb
leave
or
or
sub
cmc
test
adc
jne
sbb
pop
mov
mov
fldl
xchg
mov
pop
adc
lods
cmovb
cmpsb
adc
sbb
pop
jge
cmp
mov
or
loope
pop
sub
pop
pop
or
xchg
push
lahf
adcl
and
xchg
xchg
xchg
shl
sti
adc
xchg
sub
or
sbb
or
and
scas
ss
jmp
sub
test
sub
cwtl
fistpll
jle
pop
daa
or
xor
ret
rcr
sbb
addr16
sahf
into
dec
je
imul
jb
insb
adc
and
cld
cmp
int3
jns
push
xor
xchg
pop
loop
mov
mov
bnd
into
or
mov
mov
add
mov
sub
test
mov
adc
lahf
mov
mov
mov
and
pop
cmc
xchg
xchg
mov
fmull
push
and
adc
int
xor
cmp
fimull
stos
fsubr
hlt
rcl
push
adc
xchg
add
xchg
mov
fcmovnbe
inc
xchg
iret
dec
adc
xor
call
loop
inc
es
pop
jecxz
ror
into
ds
xchg
daa
mov
arpl
lods
xor
sub
rcrb
out
mov
mov
mov
sub
push
outsl
std
add
mov
or
and
mov
ret
jno
cs
pop
je
sbb
ss
fs
fdivl
adc
lcall
cmp
xchg
aad
sti
jmp
or
je
inc
out
aad
loope
xchg
and
imul
or
inc
jo
aas
cmpsb
and
sbbb
and
mov
in
mov
fnstsw
or
ficoms
lock
out
leave
rolb
sti
xlat
shr
rcl
or
mov
repnz
sarb
leave
stc
stos
in
ds
jo
mov
dec
jle
dec
dec
or
cmpsl
mov
adc
mov
stos
mov
jecxz
mov
pop
lcall
mov
or
addb
cld
fcoml
dec
fs
test
aad
jb
and
inc
sbbl
sub
cli
loopne
psllw
into
test
mov
mov
or
or
pop
xlat
ljmp
sub
inc
mov
cmp
jecxz
out
pushf
subl
add
and
inc
and
scas
fildll
out
or
test
je
movsb
pop
stc
mov
rcll
push
inc
mov
push
pushf
popf
dec
insl
fstl
ret
sbb
loopne
mov
cwtl
fbld
adc
shrl
sbb
das
test
pushf
mov
scas
subb
fwait
icebp
icebp
cmpsb
xchg
rorb
adc
icebp
lret
sbb
imul
loope
cmp
jge
jg
xor
dec
nop
aad
addb
push
es
jo
rcr
int
imul
decl
and
js
mov
mov
ss
mov
xchg
xor
pop
je
mov
outsl
dec
mov
adc
imul
jge
mov
xor
punpckhdq
push
push
loopne
das
aad
adc
sti
xchg
add
out
std
add
dec
mov
push
rcl
push
fsubrl
int3
push
inc
mov
xchg
mov
fdivl
or
test
clc
xor
sbb
pop
shlb
aaa
dec
xlat
or
lock
lcall
mov
mov
or
xchg
or
sbb
push
decb
push
out
loopne
xor
push
adc
bnd
mov
dec
push
fwait
dec
out
fsubrl
mov
cmpsl
call
add
cmp
test
adc
cli
adc
xchg
jge
jle
adc
cmp
mov
jnp
mov
dec
sti
call
iret
roll
jp
sub
cmp
stc
xor
std
mov
out
lahf
lds
mov
negb
xchg
mov
mov
adcb
push
cwtl
insb
call
sbb
lea
inc
adc
cmp
pop
push
dec
pushf
shll
pop
cmp
scas
jne
push
mov
mov
scas
sbb
push
xchg
les
mov
stos
inc
xchg
ret
sbb
mov
and
xor
xor
xchg
cmp
or
lahf
push
or
fmull
imul
mov
mov
scas
jns
xchg
push
js
sbb
sahf
ja
ds
mov
jbe
jp
in
or
inc
bound
fmull
cmp
je
pop
pushf
inc
sbb
mov
ss
inc
out
cld
mov
enter
std
lock
mov
mov
jne
dec
stos
sub
loopne
push
and
push
push
mov
mov
nop
xor
push
push
inc
outsl
fsubrl
xor
push
mov
int3
outsb
ret
inc
cmc
cltd
int
imul
mov
inc
push
and
xchg
dec
cmc
aas
shr
shll
movsl
pop
adc
test
popf
clc
and
insb
or
data16
pop
cmp
adc
mov
loope
nop
mov
das
push
sub
push
jo
pop
loopne
roll
notl
rcll
push
mov
faddl
or
mov
shlb
mov
lods
scas
mov
popf
sub
loop
inc
jo
in
adc
or
sub
mov
xchg
mov
js
fmul
xchg
adc
wbinvd
lea
or
movsb
or
dec
push
push
add
xchg
inc
adc
push
or
cmpl
jne
lret
out
clc
cmpsb
dec
mov
in
cltd
into
sub
and
sbb
xor
xchg
scas
mov
out
in
in
jne
cmc
dec
cld
imul
mov
inc
adc
push
sarb
xor
out
nop
mov
mov
cmpsl
inc
lahf
ja
pop
loopne
or
insb
stc
sub
sbb
daa
aad
pusha
mov
mov
pop
cltd
mov
leave
mov
test
fnstsw
test
sahf
pop
xchg
test
ds
or
push
inc
dec
in
or
push
add
jae
dec
rorb
jno
js
and
lret
dec
mov
fsubrl
mov
flds
mov
sbb
inc
notl
push
das
mov
lcall
inc
push
pop
loopne
sbb
cmp
hlt
aam
adc
dec
test
rcr
mov
push
push
fsub
shlb
jge
mov
pop
inc
or
pop
repnz
fwait
mov
cs
fcomps
aad
lret
or
filds
lds
dec
imul
xor
fldenv
ja
mov
pop
mov
scas
mov
xor
mov
adc
dec
enter
or
scas
xorb
jno
mov
xchg
xor
test
lret
mov
cmp
scas
push
push
mov
mov
lcall
mov
xchg
mov
mov
ljmp
push
faddl
sbb
loop
mov
arpl
adc
je
pusha
sarl
jmp
xor
adc
ret
xor
mulb
fwait
xor
xchg
xchg
mov
stos
outsl
push
lea
bound
cmp
jnp
jecxz
cmp
dec
ss
push
pop
lds
movsb
inc
cmp
xor
push
call
adc
xchg
mov
ljmp
nop
mov
fcompl
adc
fistpll
sbb
inc
xor
adc
and
aad
mov
sbb
sbb
add
lock
test
fmul
pop
adc
dec
mov
imul
mov
inc
add
inc
and
rorb
dec
jle
sahf
popa
push
dec
shrl
dec
mov
sub
or
xor
xchg
pop
jae
fsubrl
mov
popf
mull
cmp
or
mov
adc
shrl
popa
adc
mov
pop
mov
fmull
cwtd
es
std
mov
fdiv
cs
fs
cmp
mov
inc
loop
adc
sbb
mov
lods
loop
nop
and
fistpl
pop
bound
shll
inc
addr16
enter
adc
pusha
fbstp
ficoml
repnz
pushf
pop
fwait
pop
pop
fadd
lcall
mov
cmp
mov
test
test
mov
mov
adc
dec
pop
fisttpll
loope
rcll
pop
sti
ffree
clc
aas
into
and
adc
std
inc
cmpb
lcall
cmpsb
mov
push
xlat
mov
das
xor
pop
mov
xchg
bound
mov
shlw
mov
mov
fstl
xchg
sub
fadd
inc
sub
pop
mov
clc
push
push
pop
jl
aad
into
xchg
and
pop
enter
add
xchg
or
xchg
mov
sbb
xor
jb
fcmovnbe
lods
xchg
in
mov
mov
rcl
cmc
and
leave
push
or
sbbb
jbe
xchg
jl
loop
or
fimull
popa
xchg
movsl
loopne
stos
jl
jg
test
push
xchg
inc
aam
incl
outsl
mov
add
outsl
add
mov
fsubl
mov
cmpsb
or
mov
adc
push
cs
lret
pop
or
loopne
pusha
jae
inc
jle
fadd
leave
loop
arpl
in
orl
push
adc
fisttps
and
dec
mov
adc
sub
xchg
or
xchg
adc
inc
xchg
les
ret
mov
imulb
or
adc
or
scas
mov
mov
inc
shrb
mov
movsb
sub
mov
cmp
add
push
adc
fsubr
imul
insl
lods
fsubr
js
pop
xchg
aas
jnp
mov
fmull
jmp
push
lahf
jmp
lds
xlat
fistps
dec
add
test
cmc
pop
sub
pushf
jmp
call
scas
or
or
shrb
sub
insl
test
bound
decb
xchg
xchg
shlb
je
mov
cli
jno
pop
adc
test
dec
sbb
push
shlb
fcoml
lods
dec
imul
sub
dec
outsb
adc
paddusb
shll
mov
mov
les
xor
push
mov
jl
adc
adc
xchg
cmp
das
or
dec
repz
push
adc
inc
jp
add
lea
jns
sbb
fdivl
xor
jp
mov
adc
inc
mov
fabs
pop
pop
std
lods
insb
sar
lea
pushf
and
mov
mov
cli
scas
fdivl
rcl
call
call
mov
push
daa
das
test
or
pushf
dec
inc
sbb
sbb
jnp
cli
shrb
or
jge
xchg
dec
fcompl
mov
and
outsl
rol
ss
push
sarl
cmp
int3
test
fsubl
pop
jmp
cs
mov
fdivrl
jne
dec
adc
mov
mov
cld
inc
fsubrl
je
inc
cmpsl
bswap
adc
add
push
in
data16
sub
ja,pn
repnz
movsb
cmp
xchg
adc
fisubs
xor
icebp
push
mov
out
or
bsf
adc
pop
jp
cmpsl
inc
cwtl
in
cltd
dec
enter
fcoml
sbb
outsb
aam
sub
dec
adc
stos
add
dec
or
or
les
dec
cmp
push
cmpb
fdiv
pushf
or
mov
movsb
dec
pop
push
adc
sahf
cmp
loopne
out
push
rcr
sub
cmp
lea
mov
idiv
in
rorb
mov
iret
stos
sahf
stos
adc
dec
pop
fucomi
push
cmp
int
das
xchg
fwait
lahf
push
shr
inc
xchg
into
shl
jb
aam
add
dec
in
lret
adc
cwtl
sub
cmpsb
jge
mov
or
jbe
loopne
cmpsl
xchg
dec
xor
push
or
mov
mov
cld
dec
push
mov
pusha
shrb
xor
xor
push
mov
mov
mov
jle
divl
aaa
mov
mov
jns
fadds
cwtl
sbb
xchg
jecxz
mov
mov
fadd
mov
popf
out
lret
push
daa
xor
flds
mov
xor
adc
lods
mov
or
fnstenv
jns
fsubrl
movsb
pop
push
mov
push
js
icebp
sahf
push
call
scas
ret
icebp
mov
les
xorb
aam
out
test
cmpsl
mov
mov
cwtl
icebp
pop
fsubr
push
dec
push
mov
jb
cli
clc
adc
xor
mov
or
leave
push
mov
orl
pushl
adc
leave
sub
inc
mov
push
repz
test
xchg
repnz
stos
cmp
test
xor
icebp
sub
add
decl
push
fadd
repz
jle
push
xchg
jle
scas
mov
incl
mov
popf
or
loop
adc
jg
fldl
pop
xchg
jle
mov
test
dec
das
cld
call
ljmp
mov
cmp
data16
jp
rorb
sahf
addr16
sbb
add
pop
scas
adc
loop
mov
or
nop
add
push
divb
rcll
mov
xchg
repnz
mov
fidivrs
hlt
add
loop
sub
xor
stos
leave
cld
adc
pushf
sub
cltd
or
rclb
ds
ja
push
add
add
xlat
or
inc
or
and
mov
xchg
out
adc
into
jb
arpl
lret
pop
push
add
xchg
sbb
in
fyl2xp1
cltd
gs
movsb
or
stos
addr16
scas
and
ret
ss
jge
cs
fcompl
repnz
fildl
inc
clc
scas
mov
sub
rol
aaa
repnz
mov
pusha
push
test
mov
add
inc
in
push
push
jae
push
stc
les
jnp
sub
pop
pushf
push
xchg
fsubrs
out
adc
lcall
jg
je
es
add
insl
dec
pop
cmp
fwait
cmp
xor
rcrl
stos
jl
neg
fiaddl
mov
mov
cmpl
fdivl
jge
sbb
inc
dec
or
cmp
adc
pop
jg
loop
cld
and
mov
adc
mov
fld
or
adc
fmul
loopne
data16
dec
faddl
xchg
cld
fsubr
lret
icebp
jb
lock
fdiv
out
and
mov
outsl
push
mov
push
sub
popf
insb
mov
aas
xchg
push
sbb
data16
test
test
call
mov
adc
int3
dec
sahf
shld
lea
outsl
push
jne
push
call
mov
into
cmc
mov
gs
movups
push
ja
cld
xor
in
jbe
pop
arpl
pop
movsl
jecxz
push
jecxz
sarb
dec
out
sarb
xchg
cmp
mov
test
sub
dec
push
fwait
cmc
mov
pusha
orl
aam
pusha
mov
imul
jecxz
mov
mov
insb
scas
add
or
in
and
jp
and
mov
mov
cli
fldt
lds
fwait
mov
and
add
sbb
inc
fsubrl
in
mov
jle
loopne
fnstsw
and
inc
mov
cmc
pushf
sub
mov
jle
mov
xor
cltd
pop
cwtl
roll
add
mov
sub
test
aad
loop
inc
push
aaa
xchg
mov
pop
cmp
mov
sbb
xor
mov
xchg
stos
sbb
sahf
jbe
pop
and
sahf
sbb
fdivrl
and
or
and
xchg
cmp
cld
jge
add
or
scas
adcl
jno
stos
xor
xchg
js
xlat
in
fdivl
xchg
sbb
mov
cmpsl
add
daa
test
adc
adc
sbb
mov
cld
lock
sbb
mov
lret
inc
pop
cltd
xor
mov
dec
lea
push
sbb
xchg
or
movsb
jnp
faddl
dec
mov
or
mov
push
or
in
xlat
adc
int
sbb
icebp
jno
lock
mov
pop
sbb
scas
or
loope
lds
cmp
dec
out
mov
out
decb
mov
cmp
mov
addr16
neg
push
push
cld
add
xor
cmp
scas
inc
lods
jae
popa
fmull
fs
and
lret
shll
or
mov
cmc
mov
mov
ja
or
sbb
and
dec
jmp
add
data16
out
sahf
adc
in
mov
cmpsl
cltd
push
jle
add
xchg
mov
ljmp
sbb
mov
ret
outsb
add
std
or
inc
lret
dec
fldcw
xor
adc
lods
mov
sbbb
shl
adc
cmpsb
testb
ret
sbb
add
inc
aad
adc
and
mov
push
and
lret
or
cmp
cmp
push
insl
nop
ljmp
xchg
adc
andl
adc
xchg
lret
scas
dec
adc
fldt
mov
adc
flds
bound
dec
pop
cmp
dec
loope
loop
and
mov
mov
add
inc
xchg
shll
sub
out
cwtl
sbb
xor
in
fsubl
mov
pop
mov
sbb
sbb
fs
ja
sti
test
outsb
fmull
hlt
xlat
pushf
mov
jg
popf
mov
jmp
mov
pop
mov
enter
add
mov
or
mov
fsubr
aaa
or
shll
mov
or
pop
scas
push
nop
push
cs
or
jp
pop
pop
mov
insl
fcmovb
leave
fsubs
test
fdivl
cmp
pop
xchg
mov
in
fnsave
shlb
insl
inc
push
fimull
repz
iret
subb
mov
popf
pop
popf
shlb
loop
mov
ds
adc
ljmp
inc
mov
push
mov
sarl
in
mov
enter
popl
js
es
adc
jns
fistpll
lods
sar
out
mov
push
jecxz
push
stos
int3
pop
sbb
lods
mov
rcr
mov
adc
xlat
aad
shlb
push
or
addb
into
jmp
fistpll
outsl
std
lods
pop
mov
add
out
lea
xlat
movsb
dec
test
mov
stos
mov
push
fstp
rcll
in
mov
stc
adc
push
inc
icebp
xchg
pop
fucomp
stc
mov
cld
je
jp
lahf
and
loope,pn
scas
pop
sub
add
dec
sbb
mov
pop
mov
rep
fsubr
fcompl
mov
mov
shlb
cltd
fwait
mov
cmc
mov
inc
aas
in
lock
enter
lcall
aaa
shr
mov
and
fdivs
pop
add
xchg
mov
ss
sbb
cltd
mov
test
xchg
fnsave
mov
or
fs
sub
addr16
push
push
push
xor
orl
shrb
sub
xchg
lcall
scas
pop
into
and
xchg
lods
pusha
sbb
stc
push
push
ja
mov
push
je
adc
mov
jecxz
push
std
xchg
mov
lret
fstl
sub
js
add
mov
sbb
pop
jge
test
pop
ljmp
pop
sar
in
ds
or
add
dec
sub
sbbl
lock
fdivrl
inc
sub
mov
push
sti
sahf
out
push
mov
fdivrs
dec
out
or
nop
mov
sbb
inc
fcompl
dec
jecxz
fdivr
pop
pop
mov
cmp
jge
fiaddl
fidivrl
jns
mov
and
push
push
xchg
cmp
sub
pop
mov
rol
mov
cwtl
add
lea
stos
dec
and
pop
ljmp
mov
inc
mov
cld
les
push
mov
add
mov
cmp
ret
fwait
js
dec
or
sbb
popf
das
enter
outsb
inc
jo
jno
sbb
or
loopne
outsl
lods
dec
es
out
or
aad
mov
and
and
pop
loopne
dec
adc
int
add
xor
lods
mov
lea
lds
in
jne
push
inc
std
or
ret
xchg
fdivrl
or
dec
rclb
lods
insb
sbb
push
enter
adc
out
loopne
or
cmc
xor
inc
fwait
adc
sbb
or
pop
orb
inc
fisttps
push
movsb
ret
mov
inc
mov
sahf
xchg
cmp
adc
mov
lods
jmp
or
xchg
stos
js
sub
shlb
cmp
out
leave
add
lcall
into
lret
fcoml
fistps
addl
fwait
mov
push
mov
mov
outsb
jnp
push
push
cmp
int3
jmp
add
repnz
xor
xor
loopne
repz
jo
neg
push
outsl
rolb
rcrb
jl
je
xlat
adc
lods
cmc
jecxz
aam
movsb
sub
mov
mov
rcr
rcrb
mov
xor
insb
push
scas
insb
fdivl
lods
mov
mov
stos
push
insb
jbe
shlb
xor
popf
arpl
inc
mov
lahf
pop
fstp
test
divl
pop
cmp
mov
pop
arpl
cmpl
inc
mov
sbb
lds
stos
and
aad
pusha
cmp
jo
xchg
inc
fnsave
and
push
xchg
sub
push
out
aaa
fstpt
aam
mov
in
cld
faddl
inc
sbb
jae
outsb
shlb
xchg
loopne
inc
adc
jno
xlat
je
sbb
or
fbld
mov
dec
subb
pop
mov
out
jmp
inc
xor
in
cwtl
adc
lods
outsb
cmp
pushf
adc
xchg
in
nop
pop
inc
addl
sbb
inc
and
popa
adc
ret
stos
push
push
cmp
xchg
int
push
push
sbbb
jge
adc
sbb
adc
fsts
shll
icebp
sbb
mov
adc
sahf
jge
jne
or
push
sarl
and
imul
pop
sbb
lret
and
cli
push
fsts
call
out
push
mov
xor
rcrb
xor
adc
mov
mov
adc
fcomps
inc
adc
loopne
jmp
mov
inc
xchg
push
mov
lds
stos
xor
push
test
rorb
idivl
xlat
cli
ret
call
fs
adc
arpl
adc
das
sub
or
mov
clc
call
test
inc
adc
xor
xor
fwait
hlt
push
or
jmp
mov
scas
cwtl
pop
loopne
rcll
fsub
mov
cmp
nop
ja
and
push
jl
lahf
cli
mov
mov
sbb
shl
xchg
dec
pop
adc
or
fcoml
fnstenv
sub
push
loope
adc
mov
mov
sub
or
mov
das
jle
dec
cltd
pop
hlt
cmp
test
movsl
fadd
stos
sub
ss
sbb
inc
pusha
inc
leave
push
fdivl
loopne
pop
mov
xor
popf
fs
sbb
jo
sub
sub
xchg
push
test
daa
adc
adc
hlt
and
mov
xchg
pop
push
jbe
and
xor
xchg
test
outsl
call
orb
xchg
mov
scas
ljmp
and
jge
mov
mov
aad
pop
sahf
pop
and
adc
vfrczss
roll
or
push
in
popa
jo
or
add
lods
leave
dec
adc
andl
xchg
cmp
lea
faddl
pop
xchg
mov
mov
dec
fcoms
mov
shrl
push
mov
inc
cs
insb
adc
inc
dec
cmpsl
jae
sub
sub
lahf
adc
pop
sub
addr16
cltd
mov
cmc
dec
jae
and
sub
ret
push
insl
push
out
bound
adc
xchg
mov
daa
pop
icebp
xor
mov
or
pop
mov
dec
and
add
out
jle
mov
mov
rclb
fsubrs
add
mov
sbb
ja
push
pop
sbb
push
xchg
xchg
and
pop
push
adc
loopne
adc
shl
push
jne
xchg
add
mov
cmp
in
push
dec
dec
push
in
jle
mov
or
rorl
add
loopne
call
lea
pop
mov
or
add
test
ss
mov
stc
adc
popf
jne
sub
dec
add
aad
adc
mov
dec
push
fcompl
into
iret
xchg
flds
and
icebp
sbb
mov
jne
loop
mov
dec
mov
adc
and
popa
mov
jp
imull
insl
cmp
adc
pop
pop
jge
fldl
fldenv
inc
cmc
mov
jmp
or
jle
and
mov
loope
test
rcll
cmp
and
fcoml
outsl
lret
mov
xchg
pop
sbb
psubw
setl
rcl
fbld
add
int
sbb
jno
icebp
pop
std
add
and
rcrl
xchg
cld
stos
cmpsl
sub
mov
ficoml
fsubrl
xchg
mov
inc
and
lcall
ficompl
in
lock
imul
sub
fmulp
mov
mov
sub
iret
push
mov
lods
push
pop
rorl
es
arpl
lahf
clc
and
jmp
mov
aad
and
movsb
pop
gs
jnp
mov
lret
in
inc
data16
and
push
push
push
aam
sbb
jl
or
lds
xchg
cmc
aad
mov
testl
jmp
loopne
pop
pop
cmp
out
inc
test
adc
test
js
cmp
mov
pusha
js
test
lret
movsb
fcomps
test
int
jnp
mov
repnz
addl
mov
xchg
adc
jecxz
add
mov
cmp
test
xlat
jp
andb
sarl
loope
adc
pop
xor
or
cwtl
iret
lahf
arpl
jl
dec
push
dec
dec
inc
test
mov
insb
or
sahf
or
jl
push
test
loop
in
inc
sub
fcompl
xchg
scas
push
and
daa
mov
fdivl
mov
mov
mov
adc
arpl
cmp
xlat
or
or
dec
add
in
ds
adc
mov
inc
movsl
or
stos
mov
shll
xchg
dec
subb
inc
mov
movsb
inc
sub
call
push
jmp
jnp
jl
adc
imul
adc
lcall
cwtl
and
pop
sub
call
ret
sub
cmpsb
inc
or
or
pop
xorw
test
mov
pextrw
push
lods
dec
mov
loope
cmpsb
sbb
xchg
mov
inc
aas
sbb
push
and
icebp
std
adc
adc
mov
pop
adc
mov
mov
hlt
adc
xchg
jl
or
xchg
push
out
sbb
or
ret
xlat
mov
clc
scas
fcmovu
jge
or
test
repnz
test
push
adc
push
lret
sti
xchg
lcall
push
fcoml
dec
xorl
sarb
inc
gs
pop
mov
cltd
ja
pop
int3
cwtl
arpl
sbb
es
out
mov
xchg
mov
stc
ja
imul
data16
push
mov
aaa
lret
popa
sbb
jecxz
call
mov
test
xchg
or
fnsave
lods
cmp
fs
bound
nop
push
sub
cltd
and
neg
mov
ror
pop
adc
push
jp
or
jl
or
out
into
ss
lcall
hlt
lret
or
mov
in
add
sub
or
stos
pop
or
clc
cmpsl
in
push
xchg
fwait
or
shll
hlt
fsubl
ret
or
dec
aad
sbb
xchg
mov
adc
push
out
or
ds
nop
test
sbb
sub
std
fimuls
dec
and
leave
shll
lods
xchg
movsb
negb
cmp
hlt
add
pop
xor
or
aam
inc
out
ret
lahf
cmp
cmpl
cs
xor
test
jl
adc
pop
mov
mov
dec
call
dec
push
int
aam
outsb
mov
ds
jge
fsts
outsb
shrb
push
imul
flds
lds
lcall
inc
in
adc
or
repz
rorl
data16
lcall
inc
das
xor
mov
xor
jmp
aas
mov
pop
aas
outsl
iret
adc
pop
jp
ffreep
nop
and
cmpb
and
pop
push
daa
and
add
out
push
std
xchg
lcall
or
dec
shll
jb
das
jno
pop
and
sar
or
fbld
loopne
es
outsl
adc
dec
inc
loopne
push
fdivrl
test
add
pushf
out
hlt
push
inc
and
pop
sbb
cs
pop
adc
roll
out
jmp
insl
jbe
jle
pusha
das
adc
loope
xor
cmp
push
es
cmp
aaa
dec
lds
xchg
subl
mov
jecxz
xor
inc
adc
push
mov
pop
or
xchg
ss
xchg
fdivrl
xor
test
aas
fistpll
adc
mov
enter
adc
dec
out
inc
das
and
jp
popf
hlt
repz
imul
mov
xor
xor
ret
jne
sbb
out
push
inc
adc
in
adc
mov
iret
mov
pop
dec
scas
pushl
sub
cwtl
testb
mul
pop
fcompl
cmp
cmpsb
inc
adc
dec
mov
rcrl
fldl
fisubrs
or
or
js
pop
lock
dec
xor
ret
ret
hlt
lods
cmp
cmpsl
insl
push
cltd
add
xchg
lods
jnp
xor
jne
xchg
pop
sub
arpl
or
sub
addb
es
in
lock
inc
xchg
adc
int3
pop
ja
int
loop
or
inc
mov
imul
add
lea
sti
push
dec
arpl
outsl
imul
in
inc
sbb
push
lret
cmp
mov
pop
inc
mov
popa
xchg
dec
mov
and
ret
fmuls
out
rorl
cmp
insb
int
push
mov
daa
fsts
jae
mov
ds
xchg
je
adc
divl
jg
test
jne
and
fisubrs
xchg
or
mov
int
fs
rorl
or
cmc
dec
or
cs
ret
pusha
add
shr
ja
xchg
jle
cltd
push
call
frstor
test
test
pop
cmpsl
jl
xchg
shll
xchg
jnp
fisttpll
add
sub
lds
fildll
movsb
or
bnd
adc
sarb
or
inc
pop
in
xchg
in
inc
jne
daa
addr16
or
fsubl
add
mov
out
pop
dec
adc
push
iret
push
mov
adc
cmpb
or
in
es
xor
jmp
xchg
push
add
inc
xchg
mov
testb
loope
idivb
xchg
or
sti
or
stos
add
test
and
or
push
or
bound
ja
jmp
inc
adc
rcl
pushf
push
das
outsl
clc
or
lock
mov
pop
aad
rcrl
insl
or
cmp
add
xchg
dec
lds
jbe
adc
fs
aad
aaa
ret
rorl
pop
adc
addb
in
ss
mov
jmp
pop
out
jmp
ror
sbb
stos
pop
adc
xchg
push
aaa
mov
aad
fcoml
hlt
loope
cmp
sub
outsb
negl
int
iret
fsubrl
adc
mov
aaa
imul
hlt
rcrl
jne
dec
add
test
inc
fwait
jnp
jae
repz
pop
mov
cmp
repz
sub
add
jae
mov
mov
mov
mov
test
ja
leave
repnz
cmp
int3
cwtl
fsubr
cmpsb
rcll
nop
sbb
cmpsl
subb
push
push
cmp
repnz
dec
xor
pop
sbb
cmp
lea
clc
push
ret
hlt
dec
push
adc
ror
push
mov
mov
mov
sahf
xchg
cmp
stos
mov
fnsave
testb
mov
dec
stc
mov
std
cvtps2pi
cmc
fwait
or
push
fbld
test
pop
cli
sub
popa
sbb
data16
mov
pop
inc
push
pop
stc
jmp
add
fsts
fcompl
mov
mov
and
ret
loop
nop
ds
jg
sub
imul
mov
push
imul
mov
xchg
xchg
pop
outsb
int3
dec
in
push
call
xchg
cmpsb
or
std
lret
pop
mov
cmpsl
adc
fidivrl
or
loopne
cs
dec
cmp
push
popf
cmp
sub
mov
xchg
testb
mov
adc
roll
out
jecxz
cmp
into
cmpsl
jae
adc
idivb
nop
or
daa
adc
jecxz
sbb
jb
or
ljmp
das
ret
ds
xchg
push
rcrb
aaa
xor
hlt
adc
xor
inc
push
sbb
cmp
xchg
sahf
and
mov
int3
add
mov
cmpsl
out
inc
fnstenv
cmpsb
or
jp
dec
dec
jnp
loope
xchg
jo
mov
loope
mov
es
call
dec
mov
jo
cltd
or
push
push
push
pop
inc
xchg
and
stos
or
jae
mov
std
ljmp
fsubp
xor
ljmp
movsl
adc
test
push
add
xchg
stc
push
mov
pop
adc
mov
shll
mov
mov
xchg
push
daa
in
dec
jnp
mov
push
std
movsl
adc
push
cmpsb
fnsave
or
das
sub
andl
push
mov
mov
paddusw
push
push
jbe
cmpsl
clc
aad
es
std
and
faddl
xchg
pop
cmp
loopne
push
pop
sbb
imul
icebp
aas
shlb
dec
mov
test
mov
insl
sbb
add
mov
or
lret
fiadds
sahf
pop
xchg
andl
cmc
inc
mov
or
add
mov
pop
jno
pop
adc
test
aas
outsl
shll
inc
cmp
jbe
mov
cld
mov
arpl
dec
mov
mov
inc
hlt
jns
adc
ja
aaa
and
movsl
mov
cmp
pop
cmp
adc
and
pop
fcoml
jl
sbb
movsl
bound
xor
cmp
movsl
in
adc
andl
ljmp
cmp
adc
dec
hlt
mov
movsl
pusha
mov
out
fs
inc
call
ret
sahf
mov
dec
mov
jbe
fwait
pop
adc
jl
mov
or
push
loopne
jg
je
lahf
mov
fsubrl
xor
mov
popa
aam
nop
xchg
inc
sbb
mov
adc
lods
push
lock
fildll
loop
std
cmpsl
sub
sub
daa
ds
or
dec
mov
test
out
xchg
mov
add
js
xor
xor
pushf
xchg
mov
sarb
repnz
mov
lret
outsb
mov
sub
sbb
inc
lds
pusha
inc
sbbl
xchg
mov
sub
shlb
icebp
cmp
mov
subl
xor
pusha
mov
mov
fnstenv
mov
xchg
adc
pop
dec
cmc
cltd
mov
cmp
or
mov
es
push
lods
or
movsb
ljmp
test
stos
mov
aaa
adc
lcall
or
push
cmp
add
mov
inc
adc
ret
and
or
jp
lea
cmc
inc
mov
or
add
andb
bound
aam
daa
or
inc
aad
mov
adc
fcomp
dec
lcall
mov
jecxz
cli
or
mov
inc
movsb
or
aas
fdivrs
inc
faddl
xor
stc
jbe
movsb
or
pusha
mov
sub
pop
jecxz
push
cs
mov
xchg
ror
flds
mov
sub
or
and
divl
inc
ljmp
repnz
mov
out
jae
repz
push
cmpb
pop
idivb
cwtl
mov
pusha
mov
mov
or
push
in
pusha
or
movsl
int
loopne
nop
scas
or
mov
loopne
mov
mov
inc
jl
aam
hlt
fbld
sbb
push
cwtl
or
cmp
xchg
ds
adc
imul
cmc
mov
movsl
or
inc
dec
and
adc
rol
scas
lods
std
fsubr
cmp
mov
fcompl
xor
inc
enter
cli
or
mov
inc
loop
add
cld
jmp
sub
stos
jnp
imul
cltd
add
loop
pop
or
sbb
sub
sub
and
cltd
jle
mov
loope
pop
or
out
add
adcb
mov
fadd
movsl
lea
lods
jo
mov
mov
jae
lds
xchg
pop
jl
bound
or
pop
loop
fcompl
arpl
mov
arpl
push
xor
adc
ja
jle
or
xchg
or
pusha
aas
fsubr
inc
mov
add
jae
mov
adc
je
jle
adc
icebp
ret
mov
push
cmp
ficoms
mov
sbb
pop
mov
push
jne
loop
dec
adc
test
or
mov
adc
stc
or
inc
pop
mov
jg
lock
or
mov
adc
pop
dec
out
and
fdivrl
pusha
pop
xchg
sbb
adc
jnp
sahf
adc
mov
or
inc
xchg
std
js
dec
cmpsl
mov
jp
push
pop
mov
sahf
xor
outsb
lock
adc
mov
int3
leave
faddl
mov
cmp
rcll
pop
scas
fcoml
xchg
push
push
fmull
imul
xor
xor
cmp
adc
pop
imul
lds
or
sub
or
stos
sub
dec
xrelease
lcall
and
mov
out
sahf
shr
xlat
mov
jle
inc
into
adc
dec
mov
inc
in
mov
jne
aam
dec
sbb
lret
rclb
sbbb
push
push
jbe
jnp
mov
inc
pop
std
imul
movsb
mov
sub
clc
mov
int3
fisubl
inc
inc
inc
lahf
adc
ss
adc
lea
inc
nop
hlt
cmp
add
xor
popf
mov
es
cmpsl
daa
sub
cld
lods
dec
pop
cmp
pop
in
mov
sub
leave
cs
es
push
push
fdiv
pushf
or
inc
fldl
fsubrl
inc
or
add
sbb
mov
daa
pushl
fcoml
movsb
xor
ret
pop
sahf
adc
movzbl
add
push
fnstsw
xchg
test
adc
jge
adc
push
jbe
popw
and
stc
frstor
or
fldenv
cltd
fwait
or
mov
pop
sahf
cmpsb
push
add
push
dec
dec
dec
xlat
xor
daa
fsubrl
jecxz
pop
pop
sti
mov
ret
movsb
adc
in
cmc
and
sbb
sub
into
rorl
imul
lret
ds
lods
andl
lahf
mov
or
pop
jns
inc
dec
aaa
lds
inc
inc
lods
fsubl
int
test
add
das
dec
faddl
nop
or
xchg
fisubrs
ss
adc
cmp
mov
jo
jo
xor
adc
fnsave
sub
in
dec
inc
insl
xor
sub
jae
push
mov
adc
pop
hlt
fisubl
jle
insl
and
jo
leave
lock
adc
pop
scas
lods
or
cmp
aaa
ret
sbb
neg
xchg
lods
inc
inc
jle
fldt
popa
dec
pop
and
cli
into
push
ffreep
fnstenv
rcll
or
or
inc
in
outsl
pop
cwtl
pop
mov
add
jo
fcompl
adc
mov
mov
cld
icebp
sub
sbb
arpl
pusha
jecxz
fmull
add
pop
testl
cmp
subb
rcrb
sbb
pop
pop
jle
mov
and
cmpsb
pushf
icebp
mov
xchg
push
clc
xlat
jg
mov
push
jnp
mov
xor
mulb
mov
sti
or
popa
out
movsl
mov
mov
inc
add
jg
in
mov
mov
sti
rclb
or
inc
pop
test
or
enter
xchg
and
or
std
pop
rorb
lods
push
inc
or
cmc
std
mov
cmp
sub
es
fidivs
xchg
xor
lods
hlt
stos
adc
adc
add
adc
sbbl
fimuls
insl
pop
cwtl
mov
ljmp
outsl
shl
or
push
or
dec
nop
pop
sbb
or
lahf
sbb
rolb
mov
and
insl
xorps
sub
xchg
fsubp
xor
cmc
xchg
xchg
mov
add
dec
jbe
imul
mov
in
mov
pop
jno
fldl
mov
inc
sbb
pop
pusha
repz
fiadds
or
mov
aas
fisubs
jl
adc
and
nop
mov
and
sahf
les
les
out
scas
fprem1
adc
in
test
adc
mov
pop
cmp
nop
enter
push
push
jmp
aaa
icebp
imul
adc
mov
inc
in
mov
lahf
andl
out
aas
test
and
jle
jnp
mov
inc
lahf
adc
mov
insb
int
mov
mov
stc
xchg
xor
enter
fdivs
inc
fildl
lods
mov
push
push
mov
mov
jp
push
and
cmpsl
ret
out
cmp
mov
cmc
mov
scas
xorl
mov
push
ret
adc
jno
fisubrs
lea
shrl
adc
ljmp
sub
bound
jle
adc
sbb
mov
jmp
loope
cmp
fcomps
mov
adc
lret
inc
out
xor
fisttpll
adc
mov
add
lahf
push
ja
iret
mov
popf
arpl
add
pusha
or
jmp
ret
or
push
mov
shll
adc
cmc
lea
icebp
xchg
filds
leave
in
stos
mov
loopne
popa
push
icebp
or
mov
mov
in
ret
popf
mov
icebp
mov
shll
repnz
sarb
in
stos
push
xchg
push
faddp
ret
xor
cmpsl
xchg
adc
pop
pop
fs
cmp
enter
mov
sbb
add
sbb
mov
and
or
imul
mov
inc
fsubs
jecxz
cmp
roll
push
sub
mov
sbb
sub
jns
clc
xor
xor
fisubrs
mov
dec
sbb
push
aas
out
rorb
push
daa
sbb
xor
js
xchg
sub
pop
inc
push
xor
fisttpl
rorl
lods
or
outsl
pop
push
mov
and
movsl
mov
cs
cmp
adc
push
cmpsl
jg
push
out
or
add
push
lds
push
mov
jle
inc
mov
int
cmp
xchg
push
fsubl
sbb
ffree
xchg
cmp
mulb
enter
jbe
das
and
pop
imul
sub
mov
bound
sub
adc
or
test
daa
jmp
sarl
jb
mov
lcall
cmp
cltd
xchg
out
sbb
gs
out
imul
pusha
jbe
xor
xchg
ret
push
xchg
lret
scas
rcl
popf
rcr
mov
xchg
fsubrl
push
outsb
pop
scas
ss
xchg
rcll
movsl
and
or
push
scas
mov
jmp
movsb
test
jl
cmp
mov
cmp
mov
inc
pop
sub
xorb
jge
jl
push
adc
inc
xchg
fsubl
dec
dec
fimull
int
jne
in
mov
lods
or
mov
lret
and
pop
xor
add
xor
es
xor
pop
sbb
adc
rolb
jae
outsl
sub
pop
jo
ljmp
jl
add
push
mov
lret
call
shll
push
dec
fldenv
mov
cli
sbb
pop
cmpsb
pop
mov
iret
xor
mov
imul
stc
adc
cmpsl
jbe
pop
push
adc
add
test
xchg
repnz
int3
jbe
inc
pop
add
add
scas
xor
sahf
mov
test
fdivrl
cmp
popf
mov
jae
xor
cld
sahf
filds
mov
test
clc
sub
sbbb
repz
adc
push
in
push
jo
jl
mov
add
lahf
pop
movsl
lds
outsl
shll
addb
push
xor
and
push
ret
adc
repz
test
orb
ljmp
adc
dec
lahf
fidivs
addr16
dec
ret
sub
push
insl
mov
ljmp
push
mov
int
mov
in
and
movsb
and
jmp
sbb
jns
sub
jnp
out
rorb
jmp
xchg
adc
jo
std
or
fdivrl
push
arpl
and
std
stos
scas
push
mov
sbb
inc
test
or
sbb
imul
cmp
push
rorl
xor
sarl
add
adc
mov
dec
mov
fs
daa
jo
sub
popa
out
pop
in
popa
pop
into
es
jge
inc
add
je
xor
add
pop
and
mov
push
dec
outsb
inc
fists
xchg
std
adcl
and
iret
adc
sbb
lahf
js
mov
fsub
fcom
outsl
fnstenv
xchg
mov
pop
pop
push
adc
inc
lea
add
dec
jno
mov
scas
lock
or
dec
icebp
push
or
fildll
dec
ficomps
sbb
mov
push
dec
sub
mov
scas
fcoml
rcrl
shlb
pop
pop
aaa
loopne
xchg
jge
mov
sub
shl
stc
adcl
mov
cwtl
push
adc
cltd
jae
pop
xchg
call
icebp
leave
jnp
jl
jne
jne
js
xlat
ljmp
mov
mov
adc
in
cwtl
jne
fsubrl
out
sbb
add
out
cmpsw
xchg
pushf
xchg
or
gs
or
add
shrl
xchg
loope
sub
sbb
dec
push
out
fdiv
cltd
lret
std
dec
cs
es
movsb
fucom
xchg
pop
bound
sub
cld
das
insb
insb
pop
lea
fiadds
push
sub
cs
out
xor
cmp
jnp
fnsave
popa
int3
orb
xor
ljmp
in
push
or
pop
adc
or
subb
or
adc
fdiv
lds
outsl
xor
sub
or
test
popa
xchg
fmul
call
lds
inc
mov
jp
and
shlb
mov
jg
test
push
mov
fcoml
sbb
mov
sub
adc
cli
testb
push
ficoms
cmp
jl
pop
insl
bound
mov
cmp
dec
dec
cmpsl
mov
pop
aas
popw
fmull
and
inc
lret
loope
cmpsl
xchg
in
adc
inc
or
jmp
mov
cs
in
scas
pop
xchg
xor
adc
cwtl
mov
dec
hlt
popa
test
insl
mov
hlt
std
push
mov
or
lret
gs
in
or
add
sub
jl
fwait
stos
rclb
jmp
mov
sub
dec
inc
or
adc
sbb
or
pop
mov
fldenv
xchg
sub
sub
ret
ja
dec
cmp
leave
mov
jns
pop
xchg
stos
cmp
jnp
pop
xor
or
sbbb
xchg
mov
testl
loopne
cmpsb
xor
add
icebp
mov
pop
or
mov
addr16
pop
sbb
sbb
mov
mov
out
stos
scas
and
outsb
xchg
sub
dec
out
addps
rcrl
cwtl
inc
je
aam
cmp
hlt
push
aam
fildl
mov
inc
outsb
test
adc
lret
lret
pop
cmp
sub
or
mov
test
rcl
pop
push
xor
scas
sub
push
or
xchg
mov
sub
xchg
dec
dec
cli
test
testb
push
scas
pop
orl
loope
sarb
addb
lods
cmp
and
adc
ljmp
cmp
xchg
fwait
ja
cmc
adc
fcmovne
sbbb
push
pusha
fmull
hlt
mov
pop
sub
stos
push
jne
and
mov
sbb
push
sarl
bound
mov
or
sarb
mov
sbb
pop
fnsave
cmpsl
pop
in
xchg
or
add
push
data16
pop
jle
popf
dec
xlat
rcl
or
scas
xchg
sbb
sbb
sub
mov
scas
mov
mov
jmp
sub
fstl
in
mov
xor
cmp
mov
pop
std
mov
fxch
push
cmp
ficompl
sub
ss
nop
push
sub
xchg
call
insl
inc
sbb
or
inc
jl
jle
xchg
mov
dec
push
mov
push
test
lea
fisttpll
roll
cmp
fdivl
mov
and
shrl
insl
sahf
or
push
pop
cmpsb
lret
and
fdivrl
and
faddl
sub
sbb
fcompl
test
je
mov
add
cmp
xor
pop
int
out
stc
mov
fsubs
shll
les
and
add
sti
add
or
jg
push
out
mov
out
dec
or
mov
push
inc
or
xor
mov
mov
jg
push
inc
xchg
xchg
xchg
lds
inc
mov
sbb
enter
pop
sub
adc
pop
outsb
faddl
sahf
inc
sbb
push
lahf
or
mov
or
outsl
sbb
or
sub
cmpsb
xchg
jno
sbb
cmpsb
mov
aas
mov
sbb
mov
in
mov
cld
addl
fisttps
test
or
gs
test
dec
mov
mov
lds
sbb
pop
popa
sub
jle
addr16
ja
mov
mov
rolb
jge
mov
xchg
shrb
mov
or
jmp
pop
or
ljmp
cltd
mov
lock
cmp
adc
hlt
fimull
cmp
mov
xchg
and
sub
add
xor
imul
mov
loope
inc
mov
imul
adc
pusha
mov
adc
mov
mov
jmp
std
shr
stos
fildl
inc
xor
xchg
or
or
imul
add
xorl
or
dec
and
fsubrl
adc
mov
ret
mov
pop
icebp
adc
clc
xchg
sarb
sbb
fwait
sub
das
push
outsb
mov
mov
cld
pushf
pop
push
pop
and
lods
hlt
lods
jp
xor
mov
je
mov
inc
dec
mov
adc
cmpsb
sub
jl
loop
pop
cmc
mov
pusha
loop
paddusb
lcall
mov
scas
adc
sahf
pop
cmpl
mov
mov
mov
fmuls
cmp
enter
mov
cmp
and
mov
and
pop
adc
xchg
leave
adc
cmc
push
cld
cmp
fcoml
lret
into
icebp
movsl
stc
adc
enter
pop
pop
push
or
inc
lods
push
es
stc
add
jle
movsl
test
insl
sarl
rorl
xchg
fisubl
adc
outsl
jmp
sbb
pusha
ret
lret
ss
mov
xor
push
xchg
stos
movsb
in
jnp
mov
mov
subl
xchg
jle
and
int
jnp
lods
mov
ss
loopne
leave
fcoml
dec
fnstenv
mov
mov
mov
adc
enter
push
pop
ss
sub
fmul
out
test
icebp
or
mov
pop
fwait
push
adc
mov
lcall
out
test
push
or
mov
fists
xchg
es
out
xor
jmp
mov
push
addr16
push
dec
in
push
inc
mov
or
inc
cmp
jl
das
fsubl
arpl
dec
leave
ljmp
mov
in
xchg
lahf
cmp
push
add
sbb
mov
sti
loope
adc
xor
je
adc
ret
cld
xchg
inc
cmp
jge
mov
jns
pop
pusha
cmp
inc
cmp
xchg
pop
add
repnz
shlb
xchg
dec
lahf
adc
jmp
sahf
fdivrs
mov
aaa
shl
fs
lret
add
iret
test
mov
movsl
and
loop
or
sbb
scas
das
aas
subl
adc
mov
lea
mov
jo
pop
stos
adc
sub
mov
cltd
aam
jle
jge
js
movsl
out
fs
or
jnp
imul
sbb
push
loop
adc
iret
cmp
or
sub
jb
xchg
push
or
jno
mov
stos
cld
add
std
inc
lret
stc
add
enter
pushf
inc
push
nop
cmpsl
push
sub
jo
popf
xor
mov
jmp
les
inc
xor
int3
or
pop
dec
filds
in
cmp
les
in
or
mov
xor
nop
sbb
or
fcmove
add
lods
add
fists
clc
sub
push
out
or
sbb
fnstcw
pop
inc
insb
and
sbb
int
out
imul
jbe
mov
mov
xor
lret
gs
mov
outsb
sub
lahf
add
mov
insl
cmc
pop
push
pavgb
shr
pop
adc
fwait
testl
movsl
stc
lods
xchg
shlb
or
fimull
mov
enter
adc
js
pop
imul
mov
mov
fstl
daa
mov
mov
mov
inc
outsb
fcomp
dec
sbb
jo
lods
test
push
or
and
in
stc
fsubl
sbb
and
xor
scas
xchg
jp
jno
ja
mov
xlat
les
jg
or
loop
sub
ret
sarl
mov
or
repnz
addr16
mov
dec
xor
mov
std
cmp
test
mov
stos
jecxz
adc
xorl
adc
push
movsl
repnz
inc
loope
push
icebp
xchg
jb
sbb
out
mov
cmpsl
mov
jb
clc
punpcklbw
lods
out
imul
add
mov
fcoml
pop
and
loop
pop
mov
push
push
fdivr
repnz
gs
fmuls
sub
jle
inc
push
xor
mov
push
fcomp
int
adc
push
testl
int3
cmovl
rol
je
fstp
shrl
cwtl
hlt
pop
faddl
inc
cmp
adc
xor
es
cmp
mov
mov
loop
stos
adc
dec
rol
inc
jno
xor
cltd
mov
lods
push
cltd
rcr
jae
adc
clc
xchg
jmp
inc
fwait
push
xchg
or
negl
jbe
fstl
stos
mov
pop
cmpsl
mov
mov
dec
pop
repnz
mov
gs
sub
jmp
or
cmp
cmp
mov
iret
push
int
dec
add
cmp
xchg
ret
lock
push
sbb
or
imul
xorl
mov
add
cmp
adc
fs
push
mov
inc
mov
adc
xorl
icebp
mov
dec
mov
insb
enter
adc
pusha
mov
cmp
dec
adc
mov
pop
in
bound
adc
mov
loope
and
inc
mov
in
mov
sub
lcall
loope
xchg
stos
jl
mov
lahf
adc
mov
iret
push
sahf
add
and
jae
push
cs
xchg
pop
idivl
dec
xlat
or
mov
ror
fistl
popa
sbb
add
lcall
ss
inc
adc
mov
ss
push
adc
mov
or
cmp
pushf
xor
add
out
loopne
and
or
mov
or
xchg
push
adc
sahf
jns
mov
dec
jb
int
outsb
push
imulb
mov
jge
push
jmp
fsubs
pop
int3
jl
mov
rcl
push
sub
push
and
sahf
mov
xchg
cmp
insb
imul
mov
push
fmull
pop
js,pt
jl
cs
pop
ret
or
mov
int3
ja
xor
mov
sub
nop
es
adc
xchg
dec
enter
mov
sbb
jno
jb
fsubl
sarb
push
xchg
lret
adc
mov
stos
stos
adc
add
or
icebp
ds
fdivrs
and
fistl
or
roll
mov
mov
loope
out
and
aaa
pop
stc
adc
outsl
dec
and
pop
mov
test
push
mov
rolb
or
sarl
xor
sub
jae
cld
loopne
and
mov
push
mov
sub
nop
mov
outsl
iret
sbb
inc
xchg
sbb
or
bound
movsl
sub
fmull
leave
idivb
cmpsl
jne
pop
cmpsl
mov
leave
jl
nop
jmp
pop
cmp
mov
sub
cs
ret
or
repz
mov
jae
imul
pop
lds
inc
loop
repz
or
add
pop
jne
mov
int
es
adc
add
push
cmp
push
or
test
in
lods
ret
xchg
mov
xor
arpl
stc
jno
sub
negb
shll
jp
mov
mov
ret
leave
sbb
mov
mov
adc
sub
dec
faddl
lahf
jns
mov
repnz
cs
and
lcall
test
xchg
arpl
and
mov
stos
push
mov
push
xchg
test
test
mov
in
inc
out
dec
mov
rcl
aas
jnp
add
push
mov
leave
or
xlat
push
jns
fdivl
lock
mov
sub
clc
lods
sbb
fdivrl
adc
sti
pop
mov
sub
fcoml
frstor
mov
movsb
push
sub
add
ss
xchg
xor
popf
fwait
add
xchg
jo
fcmovne
nop
cld
adc
aam
mov
sub
sbb
fwait
add
push
shr
mov
xchg
mov
sbb
xor
aaa
les
adc
jp
mov
dec
sbb
clc
es
mov
pop
incb
ss
cmp
or
adc
or
fmull
push
push
mov
push
add
mov
fmuls
dec
jbe
jp
or
jecxz
inc
cs
mov
in
inc
mov
lea
pop
or
negb
mov
xchg
xchg
mov
or
push
adc
mov
shll
mov
repnz
sarb
xchg
mov
icebp
cmp
imul
push
mov
pop
sub
jl
push
jmp
mov
data16
cmpsb
fadd
jbe
enter
out
dec
decb
sti
cmp
xor
mov
or
push
mov
dec
jg
push
ja
or
xor
xchg
fucomi
push
test
or
sub
xchg
icebp
sbb
push
lahf
pop
mov
loope
sub
cwtl
fistpll
js
mov
clc
std
jecxz
fsub
sbb
xor
mov
mov
repz
push
push
inc
sbb
inc
sbb
mov
daa
or
sub
fdivrl
cmpl
push
sub
test
inc
out
pop
pop
ss
mov
mov
fmuls
notb
mov
add
test
sub
jmp
mov
sbb
cmpb
mov
adc
or
xor
loope
mov
fdivrs
ljmp
adc
jae
shll
fbld
outsb
lock
pop
jb
adc
jo
jne
into
inc
xor
je
aaa
push
jecxz
bound
sub
ljmpw
insb
fcoms
cld
xlat
dec
ja
and
adc
fildl
mov
scas
int
je
lods
fcoml
mov
leave
rcr
mov
inc
cmp
out
xchg
ss
cmp
in
and
int3
ja
mov
xchg
or
push
xor
push
in
pop
add
adc
das
pop
bswap
test
rcrl
xor
leave
push
dec
and
jbe
fmul
fmull
xchg
fildll
mov
int3
sbb
sbb
fstl
jns
jmp
clc
or
dec
enter
fisttps
into
mov
add
cmp
jno
lods
mov
dec
jl
imul
mov
jbe
mov
scas
or
mov
movsl
nop
jb
std
daa
push
aam
and
gs
or
lds
fsubrl
add
inc
and
or
xchg
ss
mov
fwait
jno
inc
mov
cmp
fists
xor
in
adc
push
mov
jne
and
adc
repnz
jns
add
mov
mov
jle
cmp
pusha
in
jle
mov
rolb
push
out
ds
add
jb
mov
xchg
ja
add
jmp
adc
mov
adcl
std
push
mov
sub
fdivl
in
push
mov
xchg
mov
filds
stos
jne
leave
adc
cmp
cmc
fcoml
or
in
fildll
fiaddl
and
xchg
movsl
fcoml
mov
push
cmpsb
jae
or
cmpsl
jb
int
fists
xchg
loope
jecxz
jo
sbb
fwait
sbb
cmc
std
xor
push
push
scas
pop
mov
jecxz
adc
imul
iret
or
push
mov
add
add
fmull
pop
filds
sbb
mov
pop
insb
rcr
add
out
sbb
movsl
nop
or
hlt
sbb
daa
and
cmp
aas
or
int
lds
or
cmp
gs
dec
aad
push
std
scas
xlat
icebp
fcoms
adc
jmp
into
jae
outsb
add
gs
sbb
and
je
mov
inc
inc
adc
orb
daa
or
cmp
rorb
cmc
cli
dec
pop
fst
sbb
and
mov
adc
or
sti
and
add
ss
mov
xchg
mov
mov
call
push
movsb
sbb
pop
sub
dec
xchg
inc
pop
into
sub
mov
aad
mov
fwait
lcall
cmp
mov
shrb
xchg
inc
stos
rolb
jle
test
inc
fcomi
dec
fdivl
imul
adc
sbb
mov
pop
fdivrl
cmc
cmpsl
mov
add
inc
mov
sbb
or
leave
sahf
rclb
cli
or
push
rorb
fmull
je
add
scas
out
push
jmp
push
adc
imul
push
int3
jmp
mov
xchg
add
leave
or
daa
sar
sbb
mov
mov
push
xchg
fnstenv
fsubl
in
dec
pop
jecxz
cli
out
dec
js
xchg
mov
push
stos
sub
orl
pop
cltd
cmp
call
fnstsw
sbb
or
sbb
push
mov
ja
popa
fidivrl
jmp
xor
pop
mov
mov
dec
dec
pusha
push
mov
data16
in
mov
mov
lret
into
pop
or
cld
adcb
clc
mov
shll
dec
push
fucomi
cwtl
push
inc
rcrl
addb
icebp
pop
shrb
ret
dec
lret
push
fsubs
cltd
outsb
xlat
cmp
scas
sbb
flds
pop
adc
adc
xchg
adc
jle
and
xor
pushf
loope
scas
xlat
xchg
or
psubusw
push
push
or
sbb
adc
inc
stos
mov
pop
or
sbb
push
fbld
enter
jle
xor
dec
mov
jle
bound
adc
mov
jne
mov
mov
push
jno
in
fadd
call
cmp
pop
jp
dec
dec
cli
leave
loop
imul
sbb
inc
cmpsl
cmpsb
adc
cmp
sbb
adc
dec
mov
pop
xchg
push
push
mov
rcrl
mov
add
outsb
je
orb
dec
out
faddl
sti
outsl
jmp
outsb
or
adc
add
inc
mov
and
dec
adc
push
xchg
xor
inc
mov
jmp
mov
test
or
mov
fnstcw
lea
fnsave
scas
mov
leave
jb
xchg
xor
adc
sbb
mov
xchg
cltd
add
in
cmp
dec
mov
repnz
and
leave
add
xchg
jg
inc
cmp
or
xchg
push
add
rcl
xchg
out
rol
cmc
rorl
into
mov
push
push
ljmp
cmpsl
pop
in
pop
xchg
jecxz
xchg
sub
cmp
mov
imul
jg
fdiv
mov
flds
mov
jns
add
mov
sub
repnz
or
js
aam
sub
xchg
mov
push
sbb
sahf
dec
xor
andb
adc
mov
jle
xchg
or
lret
test
adc
subb
movsb
or
in
mov
sub
mov
sbb
popa
iret
dec
pop
add
add
inc
adc
pop
cld
mov
sub
xchg
nop
lods
ficoml
shrb
stos
fldt
jmp
stos
inc
movsb
mov
out
mov
popf
push
das
push
lcall
shll
orl
sbbl
fbld
push
lods
mov
cmpl
pop
or
in
lods
sub
cmp
cmp
jecxz
ret
xchg
ljmp
mov
insb
xchg
sub
stos
push
cmpl
pop
and
sar
insl
lock
pusha
andb
mov
pusha
mov
ret
mov
fcoml
out
imul
pop
roll
pop
sub
pop
lcall
repnz
push
adc
fists
or
test
aaa
clc
dec
or
or
add
sub
pop
xor
mov
adc
fmull
mov
pop
lahf
xorb
mov
nop
fsubr
sub
jne
je
movsb
test
xchg
adc
or
fwait
xor
inc
mov
xor
cmpsl
es
or
jp
lds
mov
mov
add
jnp
push
lea
frstor
cmp
mov
add
nop
cmpsb
jne
adc
imul
cli
test
mov
adc
loop
cmp
rorb
or
cmp
sbb
addr16
pop
movsl
cltd
and
lret
adc
mov
mov
adc
ja
out
or
sub
push
jge
push
pop
push
mov
mov
cltd
ret
adc
int
fdivl
mov
push
dec
mov
lea
int3
imul
shlb
jae
xchg
adc
or
push
fldcw
push
mov
dec
mov
test
scas
xchg
xchg
xor
jns
mov
xchg
test
inc
pop
daa
or
arpl
je
lods
stos
jmp
mov
negb
div
lahf
or
cmpsl
mov
cmpsl
fcompl
int3
test
mov
lahf
inc
dec
test
cmpsb
mov
pop
cmp
std
test
mov
ror
or
xor
xor
cltd
xchg
fdivrl
sub
inc
rcl
xchg
jnp
or
fdivrl
leave
sub
aad
cli
jp
mov
sub
sub
stos
in
or
or
cmp
cs
and
push
ret
xchg
nopl
inc
adc
in
pushf
inc
aaa
pop
shlb
repz
mov
cld
push
cmpsl
adc
jl
cmp
out
or
loop
cld
sub
mov
cmpsb
std
dec
mov
and
xor
sub
pushf
pop
into
ja
pop
js
push
lret
pop
push
insl
les
stos
inc
adc
xchg
rolb
xchg
sbb
out
fcompl
fbld
add
les
fisubrl
dec
cmp
pop
mov
mov
push
adc
xchg
sbb
or
cmpsl
roll
in
outsl
push
test
fstpl
sub
les
mov
xchg
ret
and
cmp
jg
adc
into
stos
out
xor
and
mov
adc
mov
int
imul
dec
lods
bound
mov
cmpsl
sub
scas
inc
mov
fistps
aad
xlat
add
jecxz
flds
xor
and
and
pop
imul
sub
out
pop
mov
stos
add
jge
out
lcall
mov
vpinsrw
movsl
mov
sub
mov
pop
add
jnp
mov
xchg
inc
sbb
push
fcoml
adc
inc
test
cmp
daa
sub
dec
imul
ljmp
or
pop
xchg
cmp
mov
push
ror
subb
mov
nop
push
pop
and
loope
cmpsl
sub
jne
fimull
xchg
andb
stc
filds
fistpl
xor
cli
int
fmulp
add
jmp
push
int
mov
push
daa
jp
pusha
lahf
dec
cwtl
adc
roll
mov
or
imul
fsubl
rcrb
mov
loopne
sbb
mov
fdivrl
int
or
into
push
lods
or
stc
pop
arpl
test
mov
xlat
pushf
xchg
adc
enter
mov
aaa
mov
fistps
lods
mov
xchg
addr16
cwtl
imul
cmpsb
mov
fdivr
adcl
pop
cmp
or
cmp
mov
push
lret
mov
rol
sbb
popf
inc
test
imul
psrlq
rolb
ja
cltd
scas
mov
adc
xlat
stc
xchg
cs
mov
test
je
lea
mulb
jo
rorl
pop
mov
imul
pop
cmpsb
dec
ja
or
inc
int3
xchg
ja
cmpsl
pop
lea
mov
pop
mov
cmp
adc
jmp
inc
xchg
pop
xor
and
addr16
clc
lods
or
jl
daa
sub
mov
and
xchg
into
lret
ret
test
or
and
xchg
inc
insb
pop
adc
repz
push
pusha
dec
bound
in
mov
push
xor
and
inc
lea
adc
xchg
mov
in
add
or
adc
jp
mov
popa
jo
loope
pop
or
add
xlat
out
dec
test
inc
mov
pop
enter
fcompl
xchg
movsl
mov
mov
pop
out
jne
stos
pop
and
jle
fst
push
dec
pop
push
shrb
out
add
cmp
aad
scas
scas
loopne
cs
xchg
dec
stos
call
mov
xor
mov
dec
ret
add
cmp
test
inc
aas
test
fcoml
push
add
mov
push
mov
js
lahf
and
inc
or
rclb
pop
push
xor
nop
lods
fildll
mov
mov
push
in
and
arpl
sub
dec
jae
pop
fmull
dec
test
fcompl
pushf
push
fcmovnu
cmp
scas
repnz
mov
and
dec
int
mov
pop
xchg
lret
stos
adc
pop
scas
mov
or
xchg
mov
dec
ret
cld
fcoml
jecxz
xchg
jp
dec
pop
aad
adc
and
pop
jne
and
ja
jmp
xchg
lahf
in
and
rcl
or
dec
cmp
into
mov
and
fwait
or
std
pop
xchg
xor
and
daa
pop
je
sbb
sub
adc
ss
sbb
inc
push
mov
dec
mov
add
ffreep
mov
lahf
fdiv
fistl
adc
mov
mov
fwait
cltd
sub
jbe
sbb
insb
and
add
mov
cmc
mov
repz
addr16
lock
lcall
sub
inc
movsl
daa
fs
daa
add
lds
movsl
mov
mov
leave
push
mov
sbb
sbb
push
out
jge
mov
fcmovnu
fistl
xor
jmp
mov
or
pop
inc
loope
fcoml
ja
cltd
mov
adc
aaa
jecxz
fcoml
lret
negl
mov
cmp
mov
mov
adc
mov
add
jmp
or
into
clc
add
movsb
ss
xchg
mov
call
lds
lods
fldl2e
stc
fdivrl
jg
jge
cmp
xor
inc
out
ficoms
popf
mov
test
jae
sti
inc
pushf
aaa
pop
movsb
pop
push
insb
jnp
xchg
sbb
negb
push
xor
outsb
pop
mov
mov
clc
loope
jcxz
iret
pusha
cmp
dec
mov
pushf
dec
ds
xchg
pop
fcoml
mov
aaa
cs
adc
dec
scas
subl
push
cmp
pusha
in
scas
push
dec
mov
loope
adc
mov
lods
sbb
popa
scas
fsubl
movsl
inc
mov
lcall
jb
xchg
add
sub
dec
gs
or
addl
not
inc
mov
pop
dec
in
add
fcoml
mov
mov
xor
fldt
and
dec
jns
or
jmp
movsl
inc
faddl
sbb
fimuls
sub
in
shr
push
sub
add
std
sbb
jbe
xor
pop
in
shll
test
mov
sbb
or
daa
or
fmull
sub
movsl
mov
mov
adcb
cmpsl
adc
mov
mov
push
push
iret
mov
in
loope
shlb
imulb
inc
push
pop
loope
lcall
and
adc
mov
fistpl
pop
mov
sub
and
cs
mov
add
sub
sbb
pop
jl
movsl
bound
sti
xor
adc
pop
mov
xor
fwait
mov
popf
push
mov
pop
dec
in
fdivl
and
pop
add
xchg
mov
or
pusha
movsb
adc
mov
push
popa
mov
mov
hlt
inc
or
insb
mov
out
mov
scas
or
jno
roll
lret
inc
sub
test
mov
es
add
pop
popf
mov
jmp
nop
mov
xchg
lahf
jge
cs
lods
jo
jl
mov
push
ret
pop
mov
jo
out
fdivrp
test
fistpll
lock
xchg
mov
xor
and
leave
scas
pop
mov
xchg
pushf
jge
push
daa
dec
filds
jo
imul
cltd
mov
sub
bound
gs
es
mov
testb
sub
mov
loop
jne
sbb
cmp
mov
mov
fwait
data16
push
fwait
adc
add
aad
push
xchg
jp
lea
mov
push
jg
shrb
push
pop
in
mov
in
cli
xchg
imul
nop
clc
rorb
mov
push
mov
fcomi
frstor
sub
mov
mov
call
mov
fdivl
sbb
cmpsl
shll
mov
adc
popa
push
into
sarb
jle
repz
jnp
bound
popa
lods
int
mov
call
add
rcr
mov
loopne
outsb
das
call
inc
fcompl
fsubr
dec
scas
push
dec
iret
icebp
daa
bound
or
int
or
std
dec
mov
clc
sub
scas
scas
push
xchg
clc
icebp
cmp
sub
adc
or
ret
leave
and
dec
out
mov
pop
jo
in
sub
cmpsb
mov
std
jl
add
fsub
xor
xlat
ficoml
pop
or
inc
fstl
xor
jmp
push
xchg
mov
sbb
ss
adc
mov
mov
push
and
in
in
ret
or
push
fcmovne
dec
mov
out
or
dec
xchg
fdiv
hlt
test
mov
ds
loop
lock
fs
lods
xor
mov
std
scas
mov
std
pop
call
iret
les
fldenv
movsl
mov
movsb
mov
leave
std
aam
dec
jl
jae
xchg
mov
dec
popa
daa
sbb
mov
in
nop
inc
inc
repnz
sbb
cs
and
sbb
adc
repz
mov
ss
adc
push
mov
adcl
shll
enter
call
dec
fs
mov
and
xchg
shrb
add
movsb
mov
adc
cmp
pop
fcmovnu
push
dec
loope
icebp
adc
subl
test
mov
scas
int
lea
jg
in
scas
cld
fdivl
leave
jo
data16
loope
lea
jp
jnp
xchg
cmp
ret
jns
mov
pushf
dec
and
fistpl
iret
xchg
testl
or
push
mov
push
fmul
sti
sbb
lock
add
xchg
pop
das
jb
push
dec
xchg
mov
adc
loopne
adc
xchg
jle
lea
arpl
adc
test
xchg
ret
mov
dec
adc
add
int3
or
push
aas
xchg
pop
fadd
gs
scas
ds
mov
rorb
cs
and
cmpl
into
xor
sbb
popa
jbe
pop
jp
jecxz
data16
js
pop
sbb
ds
sti
gs
sbb
faddl
testb
ficoms
int
pop
or
js
mov
adc
mov
push
inc
or
xlat
xchg
mov
call
fdivl
mov
mov
cmpsb
pop
scas
pop
inc
adc
pop
nop
clc
dec
cmpb
dec
inc
inc
or
sbb
adc
fldl
sarl
push
push
sarl
jl
mov
xor
outsl
sbb
xor
rorl
idivl
fcompl
mov
in
push
adc
lahf
mov
ficoms
xor
adc
sbb
jle
out
inc
cld
subb
jecxz
jno
push
mov
outsl
insb
lcall
imul
clc
jmp
jnp
or
adc
xor
mov
xchg
pop
inc
pusha
nop
xchg
push
call
jecxz
cmc
add
cli
inc
rorb
mov
lds
cmp
push
and
jecxz
dec
push
lods
adc
or
mov
or
lcall
mov
push
stc
aaa
out
popa
roll
les
ljmp
lret
add
fsubl
adc
xor
aaa
or
subl
mov
call
sarl
add
xchg
and
pop
lds
cmc
stos
rcrb
adc
das
fucomi
fcompl
jle
cwtl
cltd
jmp
mov
lret
push
xor
adc
mov
or
std
cmp
dec
add
push
in
lods
adc
adc
pusha
js
or
stc
bound
lret
out
nop
adc
and
add
test
lret
mov
pop
mov
push
jmp
and
test
push
aam
cmc
xor
bound
adc
aad
jl
dec
ss
in
sub
or
sub
cmp
jp
adc
xlat
adc
std
es
push
stc
push
imul
fsub
addr16
add
fnsave
mov
test
xor
xor
test
mov
idivb
adc
scas
mov
inc
repz
ljmp
in
fdivr
out
cmpl
notl
aam
ret
shr
push
std
repz
shlb
repnz
mov
fidivs
cmp
pop
sbb
pop
fisttpl
xchg
push
test
stc
mov
mov
push
jle
mov
mov
hlt
test
lcall
mov
test
lahf
xchg
push
fs
fcompl
inc
xlat
push
repz
pop
mov
lds
pop
adc
imul
fidivrs
mov
je
jg
in
sbb
scas
or
mov
outsb
adc
jo
test
mov
out
or
or
mov
xor
xchg
mov
or
scas
imul
sbb
repz
mov
aaa
mov
mov
jno
xor
or
xchg
or
int
stc
rclb
adc
jo
lcall
add
pop
fcoml
sub
mov
out
sub
cmpsl
icebp
and
dec
fcoml
sub
gs
sarb
outsl
fsubrp
adc
sub
cmpsb
push
cmp
repz
mov
adc
dec
xor
push
inc
pusha
mov
les
mov
mov
mov
cmp
push
mull
fdiv
cltd
mov
pop
leave
mov
jl
mov
dec
ret
das
stos
xor
pop
ficoms
test
xor
mov
gs
push
je
loopne
rcll
pop
clc
push
mov
add
inc
fcomps
pop
cmp
sub
jl
in
add
ret
push
add
push
fcomps
loop
mov
push
std
xchg
push
adc
mov
jns
push
mov
push
call
and
and
and
xor
xor
inc
mov
or
mov
mov
push
sub
mov
sbb
and
mov
enter
jp
cmc
inc
cld
rcll
mov
enter
xor
dec
adc
mov
sbb
aaa
xor
lahf
cmp
ret
imul
pusha
dec
jge
dec
or
pop
lock
xor
sarb
mov
mov
ret
cmp
adc
aad
jl
add
push
out
push
mov
inc
in
or
lret
ret
jge
push
or
fcom
xor
mov
mov
repz
pop
mov
shl
loope
aaa
addr16
inc
mov
xchg
mov
inc
dec
adc
movb
fcoml
addl
divb
pushf
in
push
gs
dec
add
popa
cmpsl
dec
jbe
mov
inc
pop
filds
xchg
mov
cwtl
xor
adc
sti
pop
jl
push
ret
adc
aam
sub
sti
cmpsb
push
adc
scas
imul
or
aam
icebp
out
or
ja
pop
inc
dec
mov
lcall
dec
adc
cmpb
push
es
insb
fidivl
pop
cltd
sti
mov
movsl
dec
and
pop
das
pop
lahf
add
xchg
sti
pop
lret
mov
gs
or
xor
or
xchg
int3
mov
sti
fdivl
sbb
sbb
dec
pop
cmc
rcll
lret
data16
je
into
add
pop
and
fsubrl
fistl
mov
mov
mov
jmp
pop
cmc
enter
test
test
pop
rcrl
jnp
loop
or
xor
lea
and
cli
pushf
inc
mov
fmull
movsl
ljmp
stos
xchg
arpl
or
scas
or
or
stos
rcll
into
jp
fcmovu
scas
stos
fwait
lret
das
hlt
lahf
lcall
inc
inc
imul
cltd
insb
sbb
mov
lds
sbb
push
dec
jp
aaa
out
in
loopne
add
xchg
mov
rcll
sbb
push
xor
push
push
xor
dec
adc
inc
insl
imul
add
fistpl
jo
add
leave
inc
dec
mov
ds
aaa
push
dec
mov
dec
imul
test
dec
ret
mov
aam
xchg
xchg
data16
je
lret
mov
insl
mov
sub
xchg
sbb
jne
lods
xor
test
sbb
das
test
imulb
adc
test
popf
mov
xlat
push
pushf
push
fists
and
or
jo
cmp
mov
and
arpl
in
mov
mov
insb
nop
adc
or
ss
mov
out
sbb
pusha
xchg
push
cwtl
xchg
cmc
cld
scas
sbb
sub
mov
add
mov
jp
loopne
or
push
mov
lods
mov
jns
adc
clc
fwait
insw
imul
cmpsb
mov
inc
cs
dec
push
or
xchg
and
fdiv
das
sbb
cmp
add
in
sahf
mov
mulb
push
repnz
and
and
into
scas
adc
pusha
out
pop
jl
mov
jb
in
pop
shlb
and
into
lea
dec
sti
mov
shlb
movsl
mov
inc
lret
or
xor
jp
xor
xchg
fists
or
test
adc
adc
mov
sbb
inc
sbb
mov
int3
fwait
out
iret
add
pusha
loope
jl
sbb
lods
inc
adc
das
clc
or
lds
cmp
xor
adc
pop
jle
add
sub
xchg
adc
mov
ljmp
notb
nop
ja
mov
mov
fdivrl
js
xchg
pushf
cmovl
dec
mov
int3
mull
add
testb
dec
fbld
sti
dec
dec
jmp
cwtl
lret
sub
mov
sbb
popf
sbb
mov
das
pop
sub
and
addl
or
psrld
and
enter
push
popa
mov
adc
adc
neg
cld
push
jae
pop
sub
adc
fsubrs
or
mov
aas
imul
mov
push
jb
push
inc
cmpsl
shll
pushf
call
mov
xchg
fstl
imul
dec
test
push
push
or
jne
sti
popf
aam
js
and
push
int3
cltd
sub
inc
sub
push
sub
lds
ret
mov
icebp
pop
push
fcmovnb
cmp
movsb
pop
lods
sub
cmpsl
ljmp
imul
xor
push
and
mov
mov
pop
adc
adc
lock
xchg
sti
aam
xchg
mov
jbe
cmp
mov
jns
mov
daa
std
xor
cmp
mov
xor
pop
jb
jne
dec
pop
xchg
fisttpll
dec
cmp
lret
push
or
xor
js
fstpl
sub
pop
dec
xor
xchg
add
jp
ret
cmp
pushf
and
insb
xchg
push
pop
lds
arpl
pop
xchg
aam
pop
mov
mov
nop
sbb
cmpsl
add
loope
mov
xorl
cs
cli
inc
jb
mov
in
enter
jo
dec
adc
lock
sahf
test
jl
imul
lret
inc
sbb
mov
pop
inc
aam
adc
in
cmpb
aad
push
xchg
inc
add
imul
lods
iret
cmpsb
sahf
loope
movsl
or
or
test
out
xchg
add
imul
mov
mov
jne
jl
shll
sti
adc
cwtl
mov
adc
mov
push
ss
mov
ja
stc
fcoml
int3
inc
and
mov
pusha
lcall
or
testb
mov
inc
cltd
sub
testb
lcall
mov
xchg
nop
insb
loop
in
rorb
sbb
sbb
lcall
out
push
mov
mov
mov
pop
push
xor
jg
adc
pop
mov
mov
sbb
adc
js
adcl
movsl
cmc
addr16
or
dec
or
push
call
lock
jmp
stc
scas
or
aaa
mov
push
sarl
xlat
cltd
jle
inc
ret
ljmp
mov
or
lea
repnz
dec
mov
std
adc
mov
fistl
or
push
mov
pop
add
mov
jle
lcall
mov
in
or
imul
fmull
scas
lds
mov
subb
sbb
lret
rorb
push
icebp
mov
or
pushf
pop
es
xchg
loopne
ss
pusha
adc
sbb
lds
addr16
test
xchg
or
xchg
mov
pusha
bswap
ljmp
cmp
ret
xchg
jo
adc
loope
outsl
cmc
cmp
mov
sub
or
jle
xchg
mov
adc
mov
dec
or
dec
repz
dec
fsub
xchg
mov
clc
mov
add
jl
loope
sub
push
lahf
adc
int
cltd
mov
lds
adc
movsl
xor
mov
lods
stos
cmp
adc
cmpsb
adc
pop
push
fldt
add
mov
pop
sbb
lock
xchg
pop
rcrb
or
add
mov
pusha
mov
mov
push
fdivl
aad
jle
mov
mov
add
sti
fidivl
or
outsl
xor
push
and
in
popa
or
xorb
jbe
pushf
sarb
adc
cmp
adc
pop
stos
xchg
repz
loope
or
sub
push
add
or
fxch
push
and
push
popa
or
fsub
lret
stos
or
in
out
fiaddl
or
sub
lret
mov
mov
xor
int
inc
call
das
mov
xchg
adc
stos
lret
lods
cltd
int3
cwtl
dec
andl
int3
add
fnstsw
xlat
mov
les
xchg
maxps
mov
movsl
or
mov
xchg
faddl
sub
mov
inc
push
and
adc
inc
rol
or
mov
sarl
dec
or
mov
jle
mov
lds
jl
fstpl
fldl
mov
mov
les
imul
cwtl
jns
leave
mov
pop
dec
sub
pop
or
inc
pusha
sub
pop
push
mov
push
mulb
cmp
xchg
rorl
enter
mov
mov
xchg
sbb
sub
pop
xor
mov
test
loopne
mov
insb
adc
xabort
add
imul
lret
leave
frstor
push
adc
xor
mov
jmp
fidivrs
mov
scas
jno
aad
lret
cli
sbb
subb
or
xor
xor
icebp
fmull
cmp
scas
sub
mov
sub
out
adc
hlt
xchg
call
or
icebp
add
and
mov
subb
aam
hlt
faddl
push
leave
test
lods
mov
sub
fdivs
push
ljmp
push
popf
outsb
ret
pop
or
pop
mov
sete
jns
cmpsl
xlat
mov
mov
adc
adc
adc
test
js
ret
or
sub
fdivl
subb
jecxz
cmp
ror
sbb
repnz
xor
mov
aaa
insb
xchg
mov
leave
jecxz
xor
xlat
push
xchg
sbb
je
dec
jg
fcmovne
xor
sbb
adc
into
sub
or
pop
rcl
fisttps
jne
cmpsl
mov
or
mov
pop
xchg
lret
out
shrl
mov
call
std
notl
cmp
jmp
mov
je
xor
adc
jge
mov
mov
fcompl
push
xchg
aam
aas
imul
cld
lret
pop
xor
lods
sbb
shrl
icebp
jo
pop
aaa
fdiv
gs
aam
push
mov
push
push
loopne
and
inc
dec
mov
dec
je
mov
sti
sbbb
stos
lea
in
pop
jp
out
stos
insl
ficoml
imul
mov
fcoml
inc
lret
loopne
and
adc
sub
push
and
jp
or
or
or
jo
fsubrl
mov
fildll
cmp
add
xchg
or
push
mov
xor
out
jecxz
mov
popf
add
adc
or
orl
mov
jbe
pop
push
cmp
mov
pop
aam
cmp
dec
test
or
or
mov
ud1
rorl
imul
ret
out
or
lahf
adc
inc
mov
or
add
lock
adc
xchg
or
into
int3
adc
inc
dec
mov
insb
or
or
xchg
adc
and
cmpsb
unpcklps
mov
xor
adc
sbb
orl
popa
jo
testl
in
push
or
sbb
cmc
mov
fwait
xlat
jb
loop
cmp
mov
lcall
in
sbb
ja
cli
pop
fs
std
dec
cmc
in
stc
push
or
xor
add
and
inc
push
int3
aad
jne
mov
pop
aaa
test
lret
testl
and
pusha
fwait
call
std
insb
test
or
and
rcrl
dec
cmpsb
stc
inc
cmp
xor
jg
cmpsb
adc
sbb
sbb
adc
lds
or
rcrl
push
popf
daa
ds
mov
out
enter
shl
and
cltd
stc
mov
je
fsubrp
mov
push
stos
xor
mov
inc
xchg
mov
outsl
leave
out
push
or
fildll
aaa
xchg
dec
dec
test
pop
cs
push
and
stc
movsb
fcomp
inc
mov
sub
fcoml
shr
sbb
std
cmpsl
mov
inc
bswap
cli
push
fmul
pop
mov
mov
subb
lahf
dec
out
fdivrl
pusha
loop
cmpsl
test
cmpsl
jne
ds
dec
mov
mov
mov
xchg
fs
xchg
repnz
sub
je
cli
push
adc
adc
push
jo
adc
jl,pn
out
xchg
xchg
mov
outsb
or
bound
push
nop
mov
stos
xchg
add
sbb
in
shll
lret
mov
mov
fmull
test
lock
add
sbb
fsubl
js
and
jmp
mov
inc
mov
lea
sbb
mov
cmp
adc
cld
inc
sub
stc
fcmovu
imul
popa
lock
icebp
shll
and
fwait
stos
pop
jo
in
or
xchg
ja
jg
dec
aaa
add
cmp
push
xchg
ficoml
adc
stos
mull
out
repnz
add
bound
inc
notl
fildll
jbe
decb
push
pop
inc
faddl
arpl
xchg
cld
stos
xchg
filds
out
int
mov
adc
push
push
js
loope
or
jo
loop
decb
sahf
or
and
fdiv
popf
imul
sbb
shll
pop
lret
mov
lahf
adc
xchg
sub
sub
les
stc
stos
sbb
hlt
repnz
fsubrl
insl
sbb
or
xchg
push
add
fsubr
cmp
xor
repz
pop
ret
shll
aaa
fdiv
push
mov
xor
mov
xchg
sbb
xchg
cmp
xchg
sbbl
jae
mov
mov
mov
sbb
jo
adc
or
lret
or
add
push
inc
xlat
or
jne
push
pusha
pop
sbb
mov
xlat
movsl
sbb
mov
add
mov
aas
cltd
movsb
mov
mov
sahf
mov
fs
movsb
mov
xor
push
or
and
xor
fmull
or
stc
into
pop
push
fbld
in
jne
outsb
mov
icebp
fdivl
out
in
dec
ficomps
bound
icebp
adc
xchg
hlt
in
into
loopne
xchg
mov
imul
dec
mov
xor
mov
mov
dec
pop
in
pop
mov
pop
je
cwtl
fstl
scas
push
fwait
jle
xchg
and
ret
ret
cwtl
das
pmuludq
push
adc
test
mov
inc
ret
or
sbb
jle
sub
test
aas
insb
or
in
fdivr
pop
mov
jl
loopne
lret
dec
jp
popa
inc
shrb
xchg
xlat
mov
cmc
es
gs
insl
sbb
movsl
xor
and
fsubr
out
les
sbb
push
mov
mov
push
sub
test
das
push
push
cmp
lods
xor
push
jbe
mov
push
pop
lea
sub
cmp
mov
pop
leave
adc
mov
repnz
or
or
shrb
push
imulb
pop
fmul
cmpsb
cli
enter
aam
push
adc
stc
inc
adc
sbb
push
push
sub
clc
mov
jmp
fst
adc
arpl
cmp
xchg
std
xor
ljmp
shlb
lods
iret
and
fcmovb
fsubrl
push
or
jmp
cmp
mov
cli
push
push
stos
sub
cld
jp
pop
inc
mov
or
adc
stos
fdivl
mov
mov
movsl
sub
adcl
test
mov
mov
test
adc
xor
ljmp
insl
jns
mov
and
lret
add
icebp
sub
test
ror
push
mov
leave
dec
or
sbb
mov
pop
mov
xor
sbb
push
jae
push
inc
mov
in
adc
or
xor
push
pushf
sbb
push
sbb
add
insl
int3
movsb
mov
cmpsb
pusha
test
rolb
and
xor
lea
fisubrl
add
in
fs
aas
fdivr
fldenv
pop
mov
fsubl
or
pop
sbb
sbb
or
sub
sarb
rorl
inc
push
and
mov
cld
lcall
lods
sub
jbe
and
mov
int
add
mov
push
dec
lcall
daa
sbb
add
mov
arpl
aam
pop
adcl
or
out
dec
lods
stos
fcoml
scas
mov
rcll
sub
sbb
cld
pop
cli
pushl
sub
je
testb
scas
enter
insl
lcall
das
xchg
mov
adc
iret
or
adc
mov
push
xchg
loop
js
aas
andl
rolb
cmpsb
test
scas
cmp
inc
adc
mov
lahf
mov
rcl
fs
data16
push
fsubrs
fcomps
jae
push
xchg
in
sbb
pop
xchg
lcall
sub
fsubr
sub
fsubr
clc
mov
mov
rcr
push
popa
lahf
mov
insl
mov
dec
xchg
arpl
aad
add
push
push
xor
adc
and
cli
sub
or
fmull
sarb
sbb
push
mov
push
jae
jmp
mov
popa
push
jno
jns
adc
repz
jb
out
push
lcall
fnstsw
inc
lret
out
add
imul
inc
aaa
adc
xchg
sbb
negb
arpl
hlt
add
dec
shll
jmp
movsb
lcall
sarb
jmp
rcll
push
outsb
lds
dec
push
xor
test
test
outsb
sbb
shlb
jmp
jmp
pop
fstp
fdiv
sub
sub
int3
cmp
adc
adc
jl
push
mov
push
movsl
fdivs
cmpsl
mov
nop
in
dec
push
adc
insl
add
adc
mov
adc
jge
adc
and
inc
ret
fsubrl
ss
das
push
push
lock
clc
adc
adc
xchg
cltd
adc
or
or
neg
and
inc
jge
cmpsl
popf
repnz
mov
test
fmull
mov
dec
mov
imul
outsb
inc
and
or
xchg
mov
fimull
cmpl
inc
inc
shlb
test
jg
stc
or
pop
fiadds
xor
xchg
inc
dec
stos
or
mov
cmc
dec
imul
loop
jmp
inc
outsb
mov
xacquire
cmp
or
xchg
ss
and
sub
mov
push
jns
mov
inc
clc
mov
test
and
addr16
mov
lea
and
fmull
gs
push
cmp
or
stos
mov
push
mov
je
jo
lds
nop
pop
mov
or
mov
jecxz
es
adc
jg
andl
in
into
jmp
call
icebp
dec
sub
mov
jl
or
hlt
adc
xor
sbb
sub
iret
mov
sbb
in
aam
jmp
pop
stos
loopne
adc
dec
dec
push
ret
mov
xor
fsts
xchg
faddl
inc
sbb
mov
mov
or
adc
xor
and
or
pop
std
roll
iret
fdivrl
mov
or
xchg
jns
arpl
hlt
ds
xor
xchg
bound
js
loopne
or
inc
and
xor
or
push
cmpsb
in
pusha
lock
pminsw
leave
jl
xchg
insb
pop
pop
cli
sub
and
mov
repz
cmp
cmp
push
aam
inc
fs
test
add
enter
ficompl
mov
mov
into
inc
xor
xchg
mov
add
fsubrl
pop
enter
cmp
mov
loop
fcomi
clc
adc
sbb
pop
cmp
jge
mov
je
addr16
mov
into
mov
outsl
or
aaa
push
test
push
or
push
or
mov
setns
fdivl
pop
js
scas
jg
mov
je
cmp
out
adc
rolb
sbb
ret
jno
arpl
xor
iret
loop
mov
pop
xor
jmp
loope
or
add
mov
xchg
xchg
add
lret
add
divl
or
leave
test
les
push
mov
inc
aad
inc
aaa
push
push
pop
jbe
mov
ret
pop
adc
outsb
mov
inc
or
lods
inc
push
lods
fmul
mov
decb
jno
outsb
mov
cli
pop
roll
jmp
xchg
cmpsl
shlb
push
ret
outsb
xchg
fdivl
imul
into
inc
or
push
adc
fs
bound
sub
mov
and
mov
jb
loopne
sub
out
enter
test
adc
mov
push
pop
pop
add
mov
lret
cmpsb
sbb
cmpsl
pop
cmpsl
testb
insl
push
lcall
sbb
or
jp
sbb
xor
push
fisttps
dec
xchg
aam
adc
xlat
xchg
jmp
pop
cmpb
xor
push
jnp
repnz
sbb
mov
mov
xchg
cmp
inc
jecxz
les
es
lds
xchg
mov
in
addr16
dec
in
fnsave
cmp
sbb
jg
rcr
sub
sbb
das
or
mov
jecxz
mov
rorb
imul
cmpsb
xchg
bound
mov
jmp
insl
mov
jnp
inc
or
movsl
out
aas
push
fsubl
orl
mov
ret
jns
sbb
rcll
xchg
popf
in
jno
mov
mul
rcrb
negl
jle
sub
or
cmp
adc
test
or
mov
movsb
mov
cmpsb
sbb
jmp
mov
test
jle
les
lods
ds
gs
loope
cld
rorl
mov
xor
fsubl
test
mov
mov
das
lods
push
push
push
outsb
push
gs
cmc
nop
cmp
jbe
fchs
fisttpll
or
cltd
cmp
pop
mov
cmpsb
adc
mov
push
or
nop
xlat
mov
enter
push
add
or
rcrl
pop
fists
insb
js
stos
push
or
pop
aam
or
mov
push
sbb
dec
pop
test
dec
sub
js
cmpsl
xor
add
xchg
mov
xchg
leave
adc
test
es
xchg
or
cld
lcall
insb
aad
fsubrl
mov
ret
lret
out
adc
mov
out
inc
imul
insl
adc
aas
in
xlat
or
fsubrl
fwait
ret
cmpsb
insb
ss
es
adc
xlat
repz
adc
int
push
pusha
sbb
xchg
jg
adc
imul
sub
pop
data16
iret
mov
in
loop
aas
mov
pop
or
pusha
xchg
inc
mov
ja
adc
xor
push
mov
bound
cmp
xor
insb
fdiv
ret
dec
pop
add
pusha
loope
xor
scas
adc
jo
cmp
sub
repnz
fdivr
inc
push
mov
cmc
adc
xor
pusha
arpl
shlb
mov
int
inc
or
sub
movsl
xchg
scas
dec
stc
mov
mov
push
mov
push
sbb
arpl
addr16
imul
rorb
xlat
repnz
mov
outsl
pushf
faddl
adcl
add
push
aas
insb
in
xchg
mov
pop
jp
jl
imul
inc
lea
or
nop
mov
jbe
jns
adc
call
mov
sub
sti
mov
add
in
mov
call
cmc
sahf
loope
lea
adc
sbb
call
jno
aaa
cmp
jno
scas
fiaddl
scas
imul
jns
lock
int
push
pop
pop
mov
insl
aad
pop
adc
mov
xor
mov
or
push
cmp
mov
scas
adc
fstpt
sbb
pop
cmp
add
sti
or
pop
adc
je
scas
push
mov
mov
jns
loope
adc
pushl
arpl
dec
cld
sub
outsb
mov
fdivr
dec
push
mov
and
pop
push
xor
and
adc
and
or
xchg
lea
inc
inc
mov
test
jg
mov
adc
add
sbb
fwait
cmc
mov
mov
pop
int
adc
hlt
xor
test
pop
int
jae
inc
fwait
pop
mov
es
test
hlt
arpl
sbb
push
jmp
leave
lea
aaa
inc
cs
pop
fsubrs
sub
cmp
mov
jg
jbe
je
xchg
call
pop
add
lods
jns
sub
lock
pop
jnp
add
pop
je
and
cmp
xor
bound
lods
inc
enter
or
data16
nop
jb
xor
mov
scas
ficoms
xchg
aas
nop
out
scas
xor
iret
in
gs
mov
out
inc
sar
lahf
fcoml
test
icebp
int3
js
fcomps
xor
test
mov
add
lock
repnz
mov
inc
push
test
or
sahf
call
mov
rolb
xchg
mov
mov
aas
mov
pop
fsubl
idivl
jp
loope
out
push
sbb
pop
add
fnstsw
stos
jb
push
push
or
dec
cmp
jge
adcl
movsb
ret
in
das
push
sbb
jb
inc
or
cmp
cmpsb
ret
or
imul
jnp
sub
out
push
ljmp
jae
pushl
and
shrl
cmp
sbb
cmpsb
add
dec
iret
cmpsl
lods
neg
jg
jb
and
mov
mov
ret
cmp
enter
mov
pop
int
out
data16
jl
or
repnz
sub
add
nop
cmp
inc
dec
or
jb
sti
xchg
frstor
xchg
cmpsl
push
fs
mov
cmpsb
mov
mov
test
addr16
or
jns
roll
mov
add
fsubp
jns
push
loope
fwait
add
xor
adc
mov
jl
adc
lret
pop
jnp
push
or
xchg
adc
faddl
fsubrl
jecxz
ja
ret
dec
insb
scas
call
bound
add
imul
or
adc
and
xor
negb
mov
pop
jmp
jae
cs
leave
adc
mov
iret
inc
mov
push
dec
or
mov
mov
sarl
loopne
loope
inc
adc
outsl
test
or
pushf
xchg
fcoml
int3
xor
mov
clc
pop
mov
inc
aaa
ljmp
and
mov
push
xor
inc
inc
and
in
inc
dec
xchg
add
xor
mov
ficoml
and
xor
ficoml
cwtl
xlat
ja
je
iret
mov
inc
adc
movsl
push
shrl
push
dec
daa
stc
mov
sub
aam
adc
sub
or
pusha
sbb
pop
sbb
out
push
and
test
fmuls
dec
push
bnd
int
ljmp
loopne
jae
sahf
push
inc
shl
movb
mov
imul
xchg
cmp
and
dec
mov
mov
cwtl
call
and
and
lods
popf
mov
je
mov
sub
or
push
xchg
mov
orb
call
cmp
push
enter
mov
mov
dec
fdivrl
inc
add
imul
lds
in
pop
ficoms
in
ror
ror
fcmovne
int
insl
outsb
or
ljmp
adc
aas
pop
les
sub
in
xlat
popa
and
fcompl
clc
jno
cmp
icebp
sub
scas
jo
add
out
cmp
adc
aad
out
jg
xor
mov
jns
aam
pusha
pop
ljmp
dec
or
mov
push
and
out
or
rclb
es
push
stos
scas
lock
inc
cmp
and
loop
adc
xchg
mov
mov
popf
push
addr16
add
lock
dec
push
sbb
sbb
data16
mov
mov
and
xchg
and
shrl
jp
mov
jns
dec
mov
rcrb
sbbb
loop
cld
inc
decl
movsl
popa
test
or
jno
or
scas
jne
std
nop
test
or
sub
leave
add
frstor
mov
pop
dec
mov
pushl
lret
mov
loope
pop
scas
adc
aad
fdiv
popa
dec
mov
test
xchg
int3
cld
pusha
nop
mov
mov
sbb
jp
mov
lcall
fistl
ret
push
cmpsl
pop
xor
add
out
mov
lods
xchg
mov
xchg
sahf
push
lds
and
mov
mov
insb
test
ret
xchg
mov
mov
adc
pop
decl
dec
insl
dec
enter
mov
pop
pop
cmp
fcompl
icebp
fs
xor
mov
notb
push
decl
pop
enter
adc
loopne
imul
popa
insl
fmull
push
push
fstpt
sbb
scas
mov
es
dec
mov
mov
fiaddl
mov
jne
push
cmpb
xlat
out
call
int3
and
jp
sub
push
cmpsl
jnp
scas
ljmp
test
roll
mov
add
push
ret
mov
out
fsub
icebp
aad
fildll
jl
mov
aad
ret
cmp
imul
or
or
cmp
xor
pavgb
sub
push
hlt
xor
mov
lods
cwtl
pop
mov
pop
push
dec
pop
push
xor
cmp
and
sahf
add
mov
loope
xchg
inc
or
aad
push
rcr
mov
dec
or
and
sub
push
stos
scas
jbe
mov
xchg
xlat
cmp
xor
cmp
enter
mov
push
jnp
cwtl
cld
pusha
sbb
push
and
sbb
fs
adc
mov
jbe
add
adc
xchg
cmpsb
shll
lods
xchg
lods
jno
mov
clc
pop
jge
xchg
mov
cmp
ds
push
fcoml
in
jno
mov
nop
bound
js
xor
icebp
jne
out
push
rorl
fwait
and
pushf
fcomi
ds
jno
mov
aas
dec
test
cmpsb
outsb
push
out
sarl
xchg
adc
push
mov
sbb
es
mov
push
adc
lcall
test
int3
lea
mov
daa
in
sbbl
or
push
mov
and
test
jo
fldl
sbb
cmp
test
into
je
pop
pop
adc
adc
shlb
test
clc
push
mov
jne
sub
cltd
jns
cmp
push
mov
pop
insl
enter
mov
gs
ljmp
outsb
push
sub
inc
push
sti
fisttpl
dec
cmp
cmp
loop
pop
out
adcb
add
and
pop
push
rcll
mov
and
mov
xchg
mov
add
xchg
or
into
ja
cmp
cmpsb
cmp
push
stc
in
add
cld
mov
movsl
scas
test
sub
test
xchg
shll
std
mov
cmp
mov
and
stos
lock
loopne
push
rcrl
mov
or
lret
sbb
inc
pop
lods
fsubrl
xchg
in
jg
and
lds
sti
adc
sub
pop
dec
mov
or
fcomps
xchg
dec
mov
xchg
popl
lret
fnstcw
push
jae
mov
pop
mov
sub
aaa
ret
dec
sbb
xor
in
mov
pop
add
jo
dec
fmull
sbb
cmpsl
jmp
lea
clc
and
gs
sbbb
cmpsb
lock
hlt
pushf
adc
xchg
mov
or
mov
insl
adc
xor
push
rolb
cmpsb
mov
inc
shl
out
sahf
mov
pop
pop
push
ljmp
and
or
mov
sahf
mov
in
rol
adc
xchg
xor
push
cmp
xchg
fsub
sub
cs
iret
inc
pop
clc
adc
in
loopne
ret
outsb
bswap
cld
add
sbb
popf
or
push
andb
push
repz
ret
hlt
adc
sbb
inc
sub
jecxz
jns
adc
arpl
mov
loopne
or
pusha
cmp
adc
mov
int3
xchg
dec
xor
xor
mov
out
sbb
inc
push
fsub
arpl
sub
in
add
je
insl
inc
dec
and
fsubl
and
fwait
mov
js
dec
jl
aaa
mov
mov
or
or
push
jno
mov
lock
mov
dec
jmp
test
cld
mov
hlt
shrb
pop
ljmp
or
into
data16
loopne
lods
lea
mov
add
or
int
push
scas
jno
cli
sub
sub
or
jl
shl
dec
cmp
cmp
mov
mov
inc
adc
and
mov
fmuls
mov
fdivl
lods
dec
pop
ljmp
test
mov
push
xchg
fistps
rcrb
std
es
push
not
cmpsb
mov
adc
push
add
or
fs
mov
dec
pop
adc
jmp
pop
inc
dec
mov
rol
loopne
sbb
sub
movsl
in
bound
or
into
pusha
mov
xchg
adc
in
adc
xchg
in
shr
sub
jp
dec
cmpsl
dec
scas
push
push
xchg
insl
ss
movsl
fcompl
or
add
cmp
dec
mov
loope
mov
roll
fsubs
xchg
ret
cltd
cs
das
xchg
fucomp
adc
jmp
lock
jo
mov
fsub
subl
fwait
xchg
out
out
js
mov
lock
outsb
or
jne
pop
xchg
fcompl
dec
hlt
mov
mov
adc
out
lock
mov
call
dec
in
jbe
les
or
and
fstpt
inc
psrlq
lea
lret
gs
xchg
or
rcll
icebp
int
incl
pop
enter
mov
pop
jno
sub
loop
lcall
and
stos
or
mov
mov
addr16
jb
test
out
gs
aam
sbb
cli
mul
ror
into
adc
fildll
mov
pop
pop
add
jecxz
movsl
push
into
in
ret
or
icebp
jmp
scas
fs
adc
in
mov
jle
jnp
mov
jns
xchg
mov
cmpsl
fldenv
jns
scas
xorb
movsl
xchg
mov
fmull
arpl
nop
sahf
push
jnp
inc
lods
mov
jmp
fwait
je
cmp
mov
daa
notl
jb
mov
add
sbb
nop
pop
or
pop
sbb
int3
cmpsl
or
loopne
xchg
loop
lahf
sahf
in
mov
pop
add
push
push
fdivl
andl
pop
aam
mov
sub
adc
or
pop
rcr
mov
pusha
or
mov
or
jg
scas
into
xchg
ret
popf
push
bound
sbb
stc
test
rcrb
dec
and
fs
outsl
xorb
aas
stos
in
xor
xchg
hlt
stc
inc
sbb
lea
add
pushf
or
inc
and
mov
jbe
sahf
fwait
mov
out
jne
loop
mov
les
out
xor
mov
jb
xchg
xor
jo
xchg
call
icebp
out
adc
mov
stos
cmc
in
shll
rdpmc
mov
ja
mov
push
push
daa
pushf
cwtl
add
loopne
rcrl
pop
mov
pop
or
xchg
adc
jo
xchg
addr16
push
pop
or
mov
nop
loope
mov
loop
sti
dec
or
cmpsb
nop/reserved
out
orl
sbb
push
cmpsb
mov
call
mov
out
mov
fstl
hlt
int
inc
adc
push
lock
in
add
fisubs
push
jb
pop
in
add
js
push
int
rorb
xlat
pusha
out
dec
jge
and
das
movsl
stos
xchg
imul
dec
shlb
int
mov
pusha
jg
adc
mov
repz
mov
aam
xor
iret
add
adc
mov
pop
jmp
and
dec
repz
es
fmull
pop
imul
xor
mov
cmp
fistl
js
push
push
or
pop
mov
sti
sarb
dec
fsubs
mov
ret
movb
dec
lds
jns
adc
inc
adc
insb
pushf
outsb
cmpb
mov
xchg
mov
sbb
outsl
or
int
sub
or
aaa
jae
or
std
pop
je
stos
cmc
adc
mov
mov
push
mov
lret
in
test
cmp
adc
mov
cmp
stc
push
inc
ss
mov
adc
out
xchg
stc
dec
sbb
xchg
xchg
jae
lods
pop
sbbl
pop
neg
or
divl
or
cmp
cmpsb
stos
and
movsb
andl
stos
mov
fwait
hlt
inc
mov
scas
fsubr
cmpsl
mov
clc
xor
lea
dec
mov
in
mov
sub
stc
fisubl
mov
inc
mov
pop
hlt
cmp
push
or
add
sbb
or
and
xchg
into
pop
ljmp
test
mov
scas
xchg
sbb
add
mov
fsubl
sub
call
inc
or
mov
mov
aas
mov
or
pop
inc
sbb
hlt
cli
adc
cmp
or
jge
outsb
movsb
fcoml
dec
jg
mov
stc
or
or
fdivrl
dec
xor
rcll
jle
out
fcompl
in
ds
xor
fisttps
call
add
inc
fstpl
rolb
push
add
mov
mov
repnz
fwait
sub
mov
add
inc
and
imul
mov
and
stc
and
push
lret
in
xchg
cmp
daa
or
fdivrl
push
sbb
mov
jae
fcomps
xor
aad
outsb
std
and
les
mov
xlat
pop
sub
adc
test
insl
xor
inc
xor
sbb
xchg
dec
xchg
mov
jb
std
scas
in
subb
or
subl
dec
or
testb
out
mov
jae
imul
mov
fwait
adc
mov
lds
pop
cmp
pushf
sbb
pop
cmpb
pushf
imul
xor
mov
or
sti
mov
lods
insl
rorl
jb
mov
fsub
fwait
mov
mov
ret
mov
or
adc
ljmp
sti
cmpsb
cmp
mov
call
mov
sarl
stos
jmp
dec
xchg
call
mov
or
pop
in
mov
push
mov
fistpl
sbbb
inc
xchg
sbbb
add
adc
push
inc
xor
jg
ja
stos
and
cs
xchg
cmp
xchg
mov
rorl
std
lods
cwtl
pop
andb
xchg
notb
adc
dec
inc
orb
push
lahf
push
cmp
pushw
mov
dec
dec
mov
int
pop
mov
jb
push
cltd
adc
fistpl
jbe
mov
adc
ret
and
add
out
or
mov
xor
fdivrl
int3
jnp
pushf
ja
add
adc
addb
adc
or
adc
mov
jle
int
outsl
cmpl
cmp
cmc
popa
cmpsb
sub
push
addr16
dec
cmp
sub
or
cmp
mov
xchg
xchg
push
adc
xor
cld
frstor
inc
jp
cmp
movsl
inc
ror
or
mov
aad
sbb
fnstsw
mov
or
repnz
fdivrl
rolb
call
loopne
pusha
pop
out
jecxz
repz
and
cld
pusha
inc
inc
fmuls
shrb
mov
xor
movb
fnstcw
es
pop
sahf
mov
pop
mov
xchg
jbe
push
fdivrl
clc
pop
jne
movsb
sarb
and
fsubl
sbb
ds
ret
sbb
inc
daa
pop
lock
xor
or
sti
mov
xchg
fcmovnu
add
stos
jne
cwtl
pop
sbb
pop
repz
cmp
popf
movsl
lahf
iret
or
stos
adc
les
mov
bnd
pop
xor
sbb
out
cmp
lds
xchg
pushf
inc
test
mov
push
cwtl
mov
push
lods
inc
push
push
xor
pusha
jns
std
push
orl
hlt
add
rcrb
mov
aaa
fadd
fldenv
lock
xor
xor
jg
test
fnstcw
mov
movsb
popa
filds
sub
gs
xor
pop
lcall
push
and
push
mov
stos
sub
cld
sbb
jne
xchg
out
mov
sub
add
in
das
int
push
nopl
xchg
iret
fnstenv
pop
sbb
and
jge
mov
xor
mov
jp
out
or
cmp
jge
sbb
popf
lahf
lret
rorb
jg
mov
pop
jb
mov
mov
les
stos
scas
push
movsb
lods
adc
add
or
jns
in
sub
imul
mov
test
push
repnz
imull
and
ljmp
inc
mov
mov
jp
jmp
dec
push
adc
les
mov
popf
push
push
or
cmc
jl
sti
rol
adc
mov
jmp
nop
push
add
fsub
js
push
cmp
jecxz
mov
cmp
add
adc
sub
jg
cmpsl
ds
jo
sub
cmp
push
out
js
rcrb
adc
rcr
jnp
push
mov
imul
or
xchg
xchg
addl
push
in
mov
sub
mov
or
mov
push
lret
fucomi
pop
call
cmp
stos
push
mov
mov
test
mov
std
out
ds
subb
cltd
fscale
xor
adc
movsb
mov
jmp
imul
stos
push
jns
mov
xor
jne
xor
ja
enter
or
jns
loopne
add
in
pop
loopne
faddl
xor
into
or
in
std
push
fbld
mov
lcall
jmp
jge
nop
cld
ficoms
adc
inc
sub
mov
scas
fcmovb
sahf
adc
lds
mov
jae
cmp
jbe
jmp
xchg
pushl
xor
mov
das
ljmp
mov
jp
in
movsb
in
dec
fdivl
scas
and
stc
ffree
mov
pusha
pcmpgtb
fsubl
inc
testl
dec
push
dec
mov
jecxz
adc
cs
iret
inc
push
or
hlt
push
mov
cld
arpl
inc
cmpb
fcompl
adc
add
add
xor
xchg
mov
xor
mov
mov
insb
or
cltd
jo
jle
aas
inc
mov
mov
out
cltd
mov
subl
xchg
mov
cmp
test
pop
jo
fs
enter
shll
push
and
sti
add
nop
adc
lea
scas
mov
xchg
aad
sbb
push
fcompl
push
jnp
repnz
rcrl
in
shlb
lods
std
mov
out
mov
rcrl
test
push
xor
push
pop
xor
mov
xor
sbb
xchg
pop
popa
adc
and
arpl
xchg
fdivr
xchg
mov
xchg
in
mov
rol
inc
jb
cmc
shl
mov
push
or
popf
adc
mov
push
pop
mov
mov
sarl
dec
pop
push
pop
and
dec
mov
ret
adc
sahf
xchg
subps
inc
jns
mov
jae
stc
outsb
insb
or
out
mov
das
xor
movl
add
jae
cs
jnp
notb
icebp
push
pop
mov
sub
sbb
pop
mov
sub
mov
xchg
dec
popf
sub
mov
and
aaa
lock
xor
mov
or
data16
fs
cmc
fsubr
hlt
and
mov
int
call
xchg
sbb
pusha
sub
pop
or
lock
dec
mov
push
push
mov
in
jmp
leave
xlat
dec
out
dec
sub
leave
push
mov
out
fmul
push
jg
mov
jns
fisttps
lds
and
mov
repz
mov
jae
sti
xchg
mov
cmp
and
jmp
mov
push
push
push
sub
add
cmpsl
mov
xlat
jle
stos
popa
in
bound
sbb
ja
mov
pop
or
xor
mov
or
xchg
sub
xchg
les
and
and
xchg
or
mov
add
cmp
xlat
je
push
or
cmp
les
pop
call
fstps
js
and
into
adc
jno
xchg
icebp
mov
dec
dec
dec
push
adc
shll
movsb
rcrl
ret
pushf
clc
leave
xor
push
mov
xchg
or
and
ds
jecxz
adc
mov
and
les
loope
pop
lea
sahf
loopne
call
out
add
cltd
int3
into
faddl
sbb
mov
dec
mov
dec
sbb
adc
pop
xor
call
sub
out
in
xor
and
stos
inc
sub
dec
fcompl
nop
addr16
mov
add
xor
pusha
mov
xor
pop
fdivrs
js
jae
iret
aaa
shlb
mov
in
scas
aas
jmp
scas
in
mov
inc
aad
cmp
mov
jl
fldcw
out
jle
jns
adcb
shll
sar
push
out
scas
push
inc
dec
adcl
pop
fsubl
cmp
adc
stos
mov
popf
repnz
push
imul
jo
inc
pusha
fmul
mov
ret
clc
je
cmp
and
sbb
mov
call
cmp
decl
testl
inc
inc
adc
jbe
ret
push
lods
test
push
sbb
push
cmp
sbb
mov
jmp
out
lret
cwtl
adc
ljmp
cmp
test
push
adc
outsb
adc
mov
sub
lods
mov
lea
sbbl
addr16
pusha
pop
sbb
cmp
pop
imul
push
andb
aaa
push
stos
or
or
xchg
or
cld
dec
orb
mov
mov
out
out
iret
scas
into
dec
sub
rorl
xchg
enter
cmc
inc
aaa
negb
aad
int
inc
mov
dec
jb
dec
call
inc
pop
or
push
inc
xor
stos
pop
adc
xor
orl
adc
jno
bound
out
fyl2xp1
int
dec
je
mov
testb
inc
adc
pop
into
les
xchg
fdivr
ljmp
jmp
mov
imul
inc
ja
into
scas
cltd
or
or
mov
cmpsb
aam
leave
jl
sbb
mov
lds
into
rorl
insb
or
into
in
stos
mov
sbb
push
adc
rclb
ret
add
dec
stos
cs
adc
jno
or
das
filds
loope
add
bound
and
fcoms
sub
adc
inc
rcll
nop
cld
clc
int
lods
xchg
mov
cmpl
push
rcrl
adc
addb
adc
rol
icebp
sti
enter
mov
pop
cmpl
je
mov
pop
xor
lret
pop
pusha
add
loope
mov
xor
shrb
mov
mov
xor
mov
inc
orl
mov
xlat
movsl
and
add
es
sarb
in
pop
arpl
int
or
fsub
add
jp
mov
cmpsl
popa
mov
push
add
enter
fsubl
lea
adc
mov
sbb
adc
jmp
in
or
or
mov
mov
outsb
out
or
hlt
add
loope
lds
xor
push
loop
or
imul
lahf
fdivl
adc
imul
dec
std
inc
adc
in
or
mov
js
scas
or
int3
mov
add
or
xchg
pop
dec
push
fucomi
call
les
ficoms
jg
fucomp
or
loope
or
lret
and
fdivrl
mov
mov
cmc
and
subb
adc
js
lods
outsl
jbe
dec
or
jg
sbb
xchg
cmp
mov
clc
dec
orl
push
ljmp
or
lods
push
pop
movsl
fisttpll
cmp
adc
scas
mov
popf
xor
dec
dec
popa
js
mov
push
daa
repnz
movsb
fdivrl
pop
mov
mov
aam
cld
ds
out
xchg
pop
imul
fidivs
mov
out
and
adc
sahf
mov
jmp
lods
and
and
xor
inc
push
cmpsl
pop
fisttpll
or
push
push
aas
mov
adc
stc
sti
mov
loopne
imul
pop
mov
pop
js
pop
xor
or
aad
in
jnp
pop
shlb
lret
mov
cmp
sub
or
stc
dec
cmc
pop
and
fistl
mov
add
pop
lock
fnstenv
gs
mov
push
cmpsl
adc
jo
inc
push
lods
dec
dec
lods
or
push
push
inc
lods
lods
in
fscale
sbb
data16
lea
jp
clc
ss
jle
inc
or
fcoml
mov
pop
mov
enter
jnp
push
xchg
mov
mov
dec
or
pushf
shlb
out
lods
clc
and
lock
stc
add
ds
imul
xchg
loope
adc
inc
loopne
add
pushf
test
sarl
add
adc
xchg
clc
rolb
insb
sbb
or
jl
adc
inc
xor
pop
into
dec
inc
insl
loope
repz
mov
cmp
outsl
push
testl
lods
outsb
out
and
icebp
fwait
pop
in
or
adc
popa
sub
mov
adc
imul
and
mov
jge
jge
pop
xchg
fbstp
pop
ljmp
mov
adc
daa
inc
jbe
aaa
sub
mov
jne
sub
mov
rclb
jbe
lock
cmp
dec
pop
cmp
jg
or
in
ljmp
not
sbb
ret
push
enter
xchg
xor
pusha
jne
repz
fs
cmp
popf
cmp
adc
push
dec
rcr
or
push
movsb
inc
push
and
mov
addr16
mov
dec
cld
das
imul
fisubs
test
std
mov
inc
cs
jbe
or
inc
sbb
aaa
sbb
cs
add
out
or
aam
mov
clc
and
adc
mov
cwtl
mov
lcall
rcrl
fidivs
cld
out
sub
jg
xchg
jo
mov
insl
iret
scas
mov
jp,pn
icebp
aam
test
inc
mov
arpl
xor
scas
popa
nop
test
mov
mov
adc
dec
loopne
cmpb
incb
pop
das
in
out
xchg
mov
mov
gs
fs
and
ds
xor
or
icebp
mov
dec
pop
dec
xchg
jnp
mov
xchg
mov
faddl
movsb
xchg
pusha
outsb
push
dec
test
xchg
aaa
stc
or
mov
add
int3
lret
inc
fnsave
mov
andl
sbb
cli
leave
shll
ja
subl
lock
push
sbb
dec
jne
adcl
xchg
mov
aaa
push
inc
xchg
cld
mov
outsb
mov
pop
test
scas
add
jle
mov
push
out
and
adc
mov
mov
push
loopne
jp
fists
pop
xchg
cmp
add
dec
adc
mov
out
hlt
and
aaa
ret
sub
clc
pop
xor
lea
xchg
add
mov
jno
fwait
psubsb
cwtl
xlat
xchg
fmull
daa
pop
or
iret
clc
and
jne
mov
cmpsl
add
mov
clc
loopne
test
dec
sti
daa
fsub
pop
out
cli
mov
mov
test
mov
or
or
arpl
xchg
sahf
mov
rcrl
inc
outsl
jb
xor
xor
pop
push
mov
loope
jne
mov
fisubrs
adc
and
xchg
shrb
mov
mov
sbb
inc
sub
ss
clc
loop
inc
xor
sahf
out
in
lea
jecxz
or
pop
std
and
add
popl
into
mov
push
cmp
lcall
or
mov
sub
jnp
pop
mov
add
mov
jbe
stos
ljmp
xchg
push
jne
sbb
out
mov
jb
movsb
xor
nop
dec
bound
mov
or
mov
sbb
push
lock
lahf
lret
loop
pop
and
adc
cwtl
push
imul
loope
subb
or
xchg
mov
jl
adc
aam
add
mov
dec
and
inc
aam
sar
mov
xchg
dec
loop
js
push
fdivrl
stos
rcll
inc
inc
mov
ret
das
js
sarb
pop
mov
mov
fwait
adc
movsl
push
fildll
or
cmc
mov
fcoml
inc
lods
cmp
pop
fdivrl
dec
push
cld
add
insl
sbb
mov
mov
mov
sarb
adc
sahf
test
add
xchg
adc
sahf
es
push
shr
lret
xchg
or
adc
xor
incl
int3
cmp
or
stc
shufps
rol
push
stos
sub
insl
mov
xchg
scas
imul
push
fsubrl
inc
mulb
outsb
lods
out
jmp
fcompl
push
in
xchg
fdivs
je
cmp
sbb
mulb
or
test
shr
sbb
sbb
imul
les
mov
test
xchg
fists
jmp
nop
lds
or
sub
daa
cmp
xor
in
lods
divl
pop
mov
mov
mov
push
and
inc
lods
xor
or
cmp
add
jp
lahf
jbe
scas
lea
lds
push
jae
cmpsb
pop
pop
test
pusha
push
lahf
cmpsl
mov
pop
shrb
mov
and
xchg
scas
jle
or
out
sbb
movsb
push
inc
test
sub
addr16
or
dec
and
push
dec
push
push
sbb
iret
in
cmpsb
in
mov
or
fnstcw
cltd
sbb
push
nop
push
out
fildl
sbb
fdiv
icebp
mov
push
mov
push
jne
arpl
xor
lret
dec
subl
cmc
aam
fistl
xchg
push
mov
mov
lea
fcoml
fcoms
scas
or
add
push
out
lds
adc
mov
dec
push
push
ja
adc
xchg
repnz
insb
mov
xchg
pop
cmc
fldcw
add
push
sahf
mov
push
cmp
bound
adc
add
jl
das
sbb
mov
lcall
and
xlat
inc
ja
adc
pop
jns
ficoml
clc
cmp
and
xor
dec
inc
arpl
lcall
int3
stc
cwtl
cmp
lds
pop
icebp
jge
in
and
jno
ret
test
addr16
fmull
adc
jo
gs
inc
fstl
and
movsl
pop
lahf
sub
call
adc
pop
fcmovbe
jno
dec
outsl
shr
dec
nop
push
dec
mov
lods
xchg
mov
mov
jne
icebp
xor
dec
lods
mov
mov
and
jbe
mov
and
push
inc
fidivl
adc
leave
cwtl
clc
fisubs
adc
loope
adc
mov
sbb
popa
pop
adc
add
pop
mov
jg
imulb
fimuls
data16
push
insl
cmp
icebp
push
mov
sbb
das
insl
fs
bound
notl
sbb
cli
mov
subb
int3
sbb
mov
mov
pop
addr16
out
add
xor
scas
daa
pushf
sbb
out
aaa
pop
out
pop
stos
adc
or
imul
rclb
cmp
push
lds
mov
add
mov
pop
or
orl
mov
mov
shrb
jle
fwait
mov
add
dec
cwtl
jnp
sti
out
fdivl
jbe
ss
adc
loope
pop
adc
dec
fildll
or
inc
push
es
iret
gs
mov
sbb
push
enter
das
fmul
mulb
sub
cmc
hlt
subl
into
outsb
mov
push
ret
sbb
xor
or
addr16
fnstsw
mulb
xor
xchg
or
xchg
or
je
cmp
push
cld
cmp
mov
jbe
sub
lcall
popa
pop
test
sti
ret
jecxz
pushf
or
leave
sub
pop
jmp
fsubrl
test
adc
push
fisttpl
lgs
in
lret
sarb
pop
add
mov
popf
xlat
fdivr
inc
xor
xor
or
push
data16
in
push
sub
xor
xor
enter
gs
xchg
pop
je
fstpl
jmp
fiadds
scas
loope
or
mov
cwtl
aad
adc
rcl
in
and
sub
fdiv
lds
inc
jb
shrl
shl
pop
clc
inc
lret
out
sbb
bound
add
loopne
pop
mov
xlat
mov
dec
xchg
out
inc
inc
jbe
inc
test
mov
cmpsl
mov
cmpb
adc
rclb
repnz
or
mov
jnp
fcompl
or
jg
enter
rclb
adc
mov
mov
xor
push
cmp
cmpsb
xchg
arpl
adc
test
jns
or
cmp
push
rcrl
fnstenv
cmp
dec
sub
or
dec
mov
xchg
and
xor
inc
fildll
adc
sub
cmpsl
dec
out
sub
in
jno
ja
std
push
rorb
jb
repnz
test
sub
adc
dec
push
mov
dec
jnp
push
inc
jnp
fstp
fildl
mull
lea
adc
repnz
push
mov
inc
add
outsl
mov
xlat
stos
int
xchg
mov
movl
enter
call
cmc
xchg
cmp
repz
jb
jge
mov
inc
xchg
mov
and
add
adc
jbe
push
test
arpl
mov
or
mov
lea
ret
or
movsl
into
and
and
push
mov
cmpsb
mov
inc
das
imul
jecxz
or
sub
pop
shll
test
jle
call
int3
ja
fwait
subb
cmpsb
adc
fsubrl
fstp
nop
cs
icebp
jb
cmp
pop
imul
fsubr
ljmp
loope
sti
push
pop
sbb
out
ss
addr16
cld
mov
dec
imul
sarb
add
sub
sbb
adc
lcall
fmull
xor
xor
and
shll
shrl
cmp
out
dec
mov
test
and
loopne
in
sbb
aas
mov
in
scas
fcoml
xor
inc
test
mov
cmp
pop
repnz
cs
aas
hlt
push
mov
mov
mov
sbb
sub
cmp
insl
pop
out
movsb
jnp
inc
jp
int
dec
rcrb
adc
test
and
xchg
inc
jmp
or
and
mov
loope
jbe
jg
sbb
xchg
outsl
rolb
push
push
enter
xchg
jae
xchg
mov
jo
in
xor
sbb
enter
mov
addr16
add
cmp
push
loop
scas
add
gs
in
push
in
nop
or
mov
btl
dec
int3
mov
ffree
pop
ficoml
jbe
roll
xchg
mov
dec
incb
lahf
mov
mov
inc
outsb
or
xor
sti
lea
leave
pop
xor
add
dec
push
cmpsb
sub
or
sti
sbb
les
aad
fs
sbb
fdivrl
lea
xlat
or
fdivl
imulb
aaa
mov
push
xchg
push
bound
jb
push
dec
arpl
cmp
mov
cmc
xchg
dec
push
insb
stos
fsubl
sahf
pop
mov
je
fcoml
ja
push
mov
test
cmp
push
outsb
clc
add
outsl
inc
mov
cli
mov
pop
pop
pop
xor
sub
and
jg
adcb
lret
ja
xor
adc
cmpsl
mov
cmp
or
adc
in
mov
mov
out
or
fidivrl
xchg
shlb
adc
xorl
js
shr
outsl
sbb
addr16
jecxz
icebp
jecxz
sub
loop
rcrb
scas
fdivrl
pushf
in
push
mov
sub
dec
adc
fwait
inc
repz
sti
fimuls
loope
sbb
setb
lea
mov
iret
cwtl
movl
lret
mov
xchg
cmp
js
mov
pop
leave
inc
push
out
aad
dec
or
imul
mov
lock
adc
in
popf
push
dec
pop
pop
add
or
jp
mov
pop
mov
hlt
add
sbb
outsl
adc
test
lcall
and
das
loope
dec
xor
mov
and
or
sub
mov
pop
sbb
push
push
int
in
in
adc
push
ror
jnp
inc
mov
push
in
cmp
or
outsb
lahf
orl
aad
out
out
mov
lea
sub
outsl
out
dec
adc
pop
std
cld
cmc
pushf
or
pop
mov
int
xchg
mov
loope
adc
inc
mov
push
ret
pop
xor
frstor
dec
jae
pop
popa
add
aas
push
in
sbb
xor
cli
nop
decl
or
hlt
fs
ret
xchg
mov
ljmp
jb
push
fcoml
call
test
sbb
push
cmp
inc
ljmp
xor
dec
adc
das
out
and
sarb
pop
push
xchg
pusha
sbb
mov
lds
mov
cmp
adc
cld
pop
jne
fmul
lock
pop
xchg
and
mov
rorb
popa
adc
sub
lea
mov
cmovp
inc
push
jno
push
loop
pop
aam
adc
idiv
mov
cmc
les
sti
and
stc
in
mov
rclb
andl
mov
or
testl
pop
scas
insb
icebp
add
fs
fs
adc
cld
jecxz
lock
add
and
stos
sub
push
stos
add
ss
cltd
cmp
jno
jb
jg
aam
idivl
test
daa
or
stc
js
daa
lods
jbe
in
lret
mov
aaa
imul
fcomps
inc
lahf
mov
adc
dec
cs
pcmpgtw
aas
lods
pushf
gs
fdivr
push
es
push
mov
fisttpll
leave
and
cmpsl
dec
addr16
ret
and
adc
cli
cmpl
push
out
dec
aaa
cmp
adc
mov
or
xchg
mov
inc
dec
scas
je
cmp
jp
pusha
sbb
clc
and
fcoml
sbb
sbb
push
pop
or
adc
dec
fimull
cmc
shlb
mov
mov
or
jge
lcall
icebp
inc
cmp
adc
add
and
lds
shll
es
sbb
sub
push
movsb
shll
xchg
mov
imul
sbb
mov
jb
aad
sub
sbb
push
jmp
add
pushf
sub
pop
rolb
cli
cli
cmovp
pop
mov
mov
int3
jl
mov
ret
jo
test
cld
flds
insb
test
sub
sub
adc
pop
lods
push
sahf
xchg
pop
test
push
xor
push
adc
and
stos
jnp
push
ficompl
inc
mov
scas
aam
sub
mov
ficoms
loop
faddl
hlt
dec
ret
pop
mov
sbb
test
push
nop
out
xor
sub
lcall
loope
imul
adc
out
pop
shrl
push
and
arpl
dec
jns
pop
mov
dec
add
add
stos
push
sbb
adc
pop
aaa
pop
pop
gs
xchg
sarb
fidivl
sarl
pop
testl
sahf
mov
imull
repnz
cld
icebp
movsb
inc
xor
inc
xor
mov
jg
aad
or
sbb
xor
into
sbb
pop
stos
sub
push
imul
push
out
insl
push
test
jle
movsl
push
lcall
dec
out
dec
and
fsubrl
sbb
mov
cmp
fstps
xchg
ret
cld
xchg
xchg
add
and
loopne
push
mov
fdiv
movsb
mov
pop
fcomp
lea
or
daa
and
jecxz
fimuls
in
xchg
loop
or
cmc
or
in
clc
sbb
enter
cmpsl
inc
es
add
popf
aaa
push
inc
xchg
fimuls
pop
pop
mov
call
rorl
stos
and
fisubs
inc
frstor
ds
outsl
lds
or
ret
pop
jae
push
pop
mov
jle
pop
into
adc
jecxz
push
dec
stos
pop
into
add
push
jg
jo
cmc
pop
and
adc
mov
repz
ret
es
dec
out
mov
ljmp
test
jno
mov
ret
scas
shll
pop
pop
mov
pop
or
loop
xlat
and
rorb
mov
or
xor
mov
fdivs
add
mov
xor
pop
or
push
or
adc
mov
loope
pop
das
push
adc
xlat
mov
mov
mov
aad
mov
subl
pushf
mov
adc
pop
sbb
xchg
pusha
cltd
imul
and
xchg
sbb
sub
and
and
daa
add
and
ljmp
mov
sti
or
cltd
xchg
adc
jg
insl
push
pop
mov
fdiv
pop
mov
xor
and
test
call
adc
lcall
mov
rcr
add
xchg
test
scas
xorb
cmp
in
or
adc
mov
inc
into
dec
movsl
pop
int3
jl
xor
push
mov
mov
movsl
cltd
mov
ret
and
adc
dec
lock
push
movsl
inc
into
fcompl
loope
add
andb
lds
pusha
lahf
cmpsb
push
leave
push
mov
fsubl
xor
sub
lahf
scas
adc
sahf
adc
fsubrl
push
mov
lcall
add
pop
inc
in
pop
cmc
push
iret
lahf
push
mov
mov
mov
iret
xor
adc
es
mov
or
test
cmpl
scas
or
jl
or
aaa
xorb
cmp
fimuls
xchg
and
jp
add
hlt
icebp
cld
iret
add
xor
shll
fnsetpm(287
add
xor
in
fsubs
fwait
repnz
xor
scas
in
or
xlat
sub
mov
bound
adc
add
int3
mov
jb
jno
stos
insl
push
pop
and
push
aaa
push
xchg
jp
idivl
adc
mov
inc
stos
lahf
jns
ja
aas
lret
rcll
stos
jns
pop
sbb
push
movsl
or
pushf
jne
mov
pop
mov
stos
sub
aaa
or
pop
je
dec
push
inc
pop
lret
lahf
mov
jnp
xor
in
adc
adc
xor
inc
mov
lods
or
add
outsb
mov
out
sub
pusha
jnp
and
cmp
lcall
ljmp
shll
jmp
fdivrs
into
pushf
sbb
repz
and
pusha
ljmp
or
or
fcomi
je
fidivl
insb
pop
scas
adcl
xlat
jnp
popa
enter
push
or
repnz
sarl
rol
cmp
popa
loopne
inc
mov
inc
pop
mov
push
xchg
cmp
pop
adc
sub
ficomps
in
or
mov
mov
sbb
pop
call
int
in
fwait
mov
pop
pop
stos
push
sbb
imul
xlat
fcoml
sbb
xor
int
mov
fadds
pop
inc
das
and
adc
out
and
inc
mov
xchg
sbb
or
dec
jnp
movsb
xchg
adc
xchg
faddl
in
or
inc
push
mov
cmp
push
lahf
aam
popa
xor
or
inc
fwait
leave
scas
push
adc
daa
sahf
mov
or
jae
sub
je
fstpt
push
out
jg
cmc
adc
and
popf
pop
or
fdivl
sub
mov
pop
es
cmc
outsb
rolb
adc
jae
popf
mov
fadd
mov
mov
mov
fimull
mov
subb
orl
add
push
jb
jb
fstl
repnz
xor
jno
xchg
pop
fdivs
fmuls
loopne
scas
movsb
out
xchg
sub
jge
push
sub
mov
cs
inc
push
push
mov
mov
sahf
dec
adc
jmp
cmpsl
hlt
in
stos
or
dec
mov
sub
imul
fdivrl
lahf
mov
loopne
push
test
xor
inc
push
les
mov
sbb
cwtl
test
jg
adc
mov
adc
sub
mov
ror
xor
mov
mov
xchg
push
inc
pop
jns
inc
fsub
mov
xor
xchg
data16
mov
mov
sahf
addr16
stc
add
jg
arpl
mov
mov
mov
sbb
push
xchg
xchg
out
lcall
outsl
cmp
leave
sbb
mov
xor
mov
cmpsl
sbbb
stc
test
mov
sub
xor
inc
adc
insl
les
cmp
sub
sete
push
add
aas
mov
loop
push
inc
lcall
fcomps
sub
and
xchg
or
mov
pusha
cmpsb
xchg
and
adc
push
push
adc
fcoml
insb
ret
or
mov
pop
dec
push
lret
arpl
enter
fmull
lock
jne
sahf
sbbb
out
push
mov
leave
outsb
inc
fdivrl
lods
aam
mov
scas
ret
jno
adc
insb
testl
mov
shrb
out
sahf
outsl
or
jecxz
push
sbb
sbb
mov
das
int
mov
xorb
test
mov
daa
shrl
js
fmull
push
cmpsb
inc
push
dec
xchg
aam
pop
adc
nop
push
cld
fs
sub
minps
push
stos
fdivp
enter
ret
push
push
dec
pop
jo
ja
lahf
adc
pop
or
adc
ds
cld
jge
jbe
or
inc
dec
stos
test
jnp
imul
mov
jp
pop
or
into
xor
jl
or
lods
or
in
fistpll
xchg
imul
or
leave
xor
sbb
ljmp
dec
mov
xchg
fdivl
subb
cmpsl
sbb
mov
or
icebp
repnz
adc
jo
sbb
lahf
push
mov
arpl
mov
pop
es
in
repnz
push
mov
imul
jne
lods
fdivs
add
das
fsubrl
bound
mov
push
cs
adc
or
mov
pop
cmp
dec
adc
push
jge
xchg
jle
int
cld
testl
pop
and
int3
cmpsl
jmp
fldcw
sub
scas
es
mov
mov
inc
adc
or
ret
mov
cmp
faddl
ss
dec
in
mov
mov
sub
ficoms
cmc
cmc
mov
xor
je
sub
jb
and
xchg
mov
mov
or
test
adc
jnp
pop
je
cmp
fidivs
and
daa
mov
cmpsb
std
or
popf
xchg
out
pusha
xor
adc
add
pop
lods
divl
icebp
sub
cmp
jmp
dec
add
cli
loopne
addb
scas
pop
lret
out
mov
icebp
and
sbbl
and
push
rcrl
push
mov
pusha
dec
mov
mov
aam
loope
xchg
cmpsl
or
adc
ffree
xchg
test
mov
loop
xchg
or
addr16
xor
or
mov
pushf
sbb
mov
inc
nop
jmp
scas
xor
dec
jmp
xchg
jne
into
mov
out
fwait
inc
pop
pop
inc
lret
sbb
inc
mov
pop
fmul
fisubl
or
gs
or
xor
xor
jbe
fwait
push
xor
adc
ret
xchg
mov
adc
cmp
imul
cmp
in
popa
push
or
jle
gs
in
or
sti
in
or
add
cmp
sarb
add
add
and
dec
adc
xor
int3
pushf
push
cltd
pop
mov
popf
sub
add
fistps
jmp
and
repnz
into
jge
xor
adc
adcl
mov
push
js
sub
sbb
iret
iret
test
orb
out
mov
mov
mov
rcrl
add
insl
orb
or
jecxz
movsb
mov
cmpsb
ret
pop
shr
push
test
cmpl
or
mov
in
sbb
pop
xchg
das
test
insb
orl
jle
mov
and
and
push
xchg
mov
jo
mov
mov
in
or
push
push
scas
aaa
lods
daa
sarl
cmp
ljmp
and
sbb
inc
or
jnp
jg
xor
scas
inc
push
pushf
in
xchg
push
lret
push
dec
cmp
mov
fcmovnbe
movsl
mov
mov
int
and
jno
mov
cmc
shl
sbb
int3
divb
int3
stc
rorb
push
inc
lret
mov
rorb
mov
clc
or
incl
jnp
jecxz
mov
xlat
call
fs
mov
ret
adc
xor
in
mov
push
jno
das
popf
in
xchg
fsubl
sbb
test
add
dec
mov
push
or
pop
ret
loope
pushf
add
cld
repnz
and
pop
push
test
xchg
stos
test
mov
mov
add
jmp
lcall
and
xchg
xorb
loope
dec
je
ljmp
lret
and
xchg
enter
push
fwait
decb
shll
dec
mov
dec
pop
mov
jl
or
dec
call
push
data16
inc
lret
or
scas
packuswb
sub
test
addl
not
test
xchg
insb
sub
insb
fimuls
loope
mov
jp
dec
lods
xlat
pop
cli
rcr
repnz
push
into
stos
mov
call
ss
inc
lea
push
mov
test
imul
lcall
mov
adc
sbbl
lods
push
mov
xchg
mov
cli
mov
mov
jne
and
add
or
mov
repnz
mov
jne
inc
notl
add
mov
andl
jg
rcr
jb
and
aas
cmp
mov
sub
mov
jge
cmpb
adc
decb
jmp
stc
jns
fcomp
std
mov
add
sbb
cmc
adc
sbb
push
mov
inc
dec
mov
push
adc
xchg
rorb
ja
sbb
outsl
out
enter
lret
adc
push
mov
pop
icebp
inc
mov
bswap
adc
adc
dec
add
call
dec
daa
nop
inc
xchg
inc
inc
cltd
adc
pushl
fsubrl
cmpsb
andb
cmp
cmp
mov
xchg
mov
adc
cmpsl
in
test
jno
xchg
sub
add
pop
test
pop
shlb
enter
adc
test
clc
aas
aas
inc
hlt
stos
lret
insb
ret
lahf
cmp
hlt
or
mov
mov
adc
xor
shl
pop
sbb
xor
mov
pop
stc
pop
xchg
in
push
push
pushf
add
xor
faddl
in
sbb
shlb
push
jno
imul
rcrb
and
call
mov
sbb
dec
int
jo
pop
cld
mov
test
or
repnz
testb
or
in
sub
jo
lock
es
push
sbb
into
push
cmp
test
mov
sahf
cwtl
inc
push
add
xchg
xchg
fcompl
mov
jp
push
add
cli
push
mov
mov
test
and
or
nop
add
stos
jle
mov
mov
into
sbb
cmp
mov
sub
stos
cltd
lahf
sub
inc
dec
pushf
sbb
sub
std
cmp
insl
sub
int
and
cmp
test
shlb
into
sub
xor
add
ljmp
push
mov
sbb
js
call
fisttpl
cmp
orb
xor
leave
mov
stos
mov
mov
sub
fsubl
xor
out
cmp
or
mov
in
fcompl
dec
sub
cmpsb
ficomps
stc
pop
xchg
xor
clc
js
dec
inc
cmp
out
dec
cmp
adc
sbb
inc
in
mov
sub
aaa
xchg
adc
movsb
je
enter
or
hlt
mov
addr16
fstl
out
adc
imul
out
jecxz
mov
xchg
imul
ss
add
arpl
mov
add
xor
xor
mov
icebp
cltd
sbb
sub
lahf
dec
mov
frstor
pop
pusha
nop
pop
icebp
shll
adc
and
add
popa
mov
jp
adc
jno
inc
or
sub
dec
mov
fwait
jae
dec
xchg
cmpsb
mov
loopne
adc
sub
mov
sub
dec
rolb
mov
andb
push
insb
fcomps
jge
push
mov
scas
adc
sbbb
jecxz
into
or
test
xchg
in
and
inc
in
das
pushf
testl
xor
icebp
xchg
fdivl
mov
incb
in
shll
fsubs
inc
dec
rolb
sti
dec
rcrb
and
sbb
imul
or
cld
add
push
xlat
rcrl
mov
cs
add
mov
fmul
lahf
pop
in
stos
xor
or
mov
push
sti
rorb
adc
mov
shlb
shll
push
xchg
aam
jb
or
and
pushf
dec
adc
out
xchg
or
ljmp
mov
lahf
push
icebp
jae
mov
or
cmp
sbb
push
js
mov
mov
bound
sbbb
xor
aaa
loopne
mov
mov
sbb
arpl
add
mov
or
sbb
cltd
mov
mov
mov
or
aas
ret
in
or
pop
or
lock
fistpll
imul
sbb
dec
mov
sbb
mov
lea
in
or
dec
clc
cs
or
mov
fs
mov
jbe
out
jb
setge
or
or
addr16
push
es
ss
xchg
insl
andb
mov
sbb
cli
jnp
scas
inc
and
jno
cmpsb
push
mov
arpl
adc
jns
mov
mov
mov
xor
pop
mov
testl
push
and
cmp
push
sbb
subl
stc
adc
lahf
lods
adc
fisubl
pop
or
jne
in
aaa
jo
imul
repnz
cmp
dec
ret
pop
ss
arpl
lock
add
push
mov
add
pop
or
xor
pop
push
fdivrl
add
std
adc
rorl
data16
xor
or
flds
imul
xor
cli
push
or
sbb
cmp
push
in
mov
push
sub
pop
cmc
stos
inc
cmp
or
mulb
jno
push
std
popa
aas
adc
imul
and
lods
jno
push
xor
add
repz
in
pop
xchg
mov
leave
andl
cmpsl
ret
or
out
jmp
xor
adc
sub
pusha
js
mov
sbb
sub
int3
fdiv
mov
test
scas
out
mov
add
lcall
out
lods
nop
and
aas
idivb
sbb
loopne
lahf
movsb
adc
test
pop
xor
mov
jae
in
cmpsb
lcall
sbb
out
mov
push
lahf
ja
adc
pop
loop
sub
add
xchg
xor
push
sbb
adc
jne
or
loope
cmp
inc
lret
test
adc
cli
call
lods
jae
cmc
or
and
outsb
inc
inc
inc
push
fcmovne
jg
mov
add
xlat
stos
or
sbb
fwait
movsb
adc
cmpsl
jp
leave
mov
mov
sub
xor
jl
jp
cmpsl
cmpsl
adc
movsb
mov
sbb
sbb
jle
shll
rorl
arpl
scas
rclb
mov
adc
sbb
lcall
mov
scas
jae
aad
jns
push
pushf
push
lds
adc
xor
je
outsb
jns
lret
mov
xchg
fists
push
cmc
test
ffreep
or
arpl
ds
fnstenv
xchg
mov
or
decl
icebp
jno
adc
pop
mov
cmp
xchg
push
mov
out
rcrl
xchg
and
cmpsl
xchg
inc
xor
call
fdivr
loope
lods
mov
pusha
sbb
orb
test
mov
jg
jg
adc
inc
clc
jp
roll
icebp
or
popf
push
inc
jae
push
js
pop
lods
mov
ja
popa
mov
prefetch
mov
push
imul
adc
int
pop
cltd
mov
xchg
xchg
sbb
add
or
adc
inc
shlb
jbe
or
stc
out
scas
mov
sub
jnp
push
andl
int3
pop
aad
xor
lahf
les
push
and
repnz
adc
pop
cwtl
lock
stc
subl
mov
xor
sbb
ret
mov
or
stos
mov
test
xchg
mov
inc
lock
mov
mov
jmp
xor
dec
fcoms
add
stos
dec
adc
cmp
or
push
cmp
or
mov
shll
or
mov
lods
sti
rcrb
aam
repz
mov
insb
mov
std
adcl
pop
pop
xor
pop
rcl
inc
movsb
es
cmp
lds
insl
jmp
mov
sub
xor
ds
and
pusha
in
sub
fsubrp
jbe
sbb
stos
dec
mov
aad
ja
cmp
mov
jbe
enter
sub
mov
dec
insl
movsb
jb
xchg
mov
imul
mov
sbb
icebp
cwtl
test
test
lcall
sub
jno
xchg
adc
xchg
int3
lock
mov
inc
nop
stc
sbb
xchg
and
cs
xchg
xchg
adc
jae
jae
bound
or
cld
pop
mov
hlt
mov
js
shlb
mov
stos
mov
mov
xchg
fadd
bnd
mov
jb
mov
pop
enter
sbb
in
cmp
call
or
call
and
or
in
or
das
dec
out
dec
jge
dec
clc
mov
scas
cmp
sbbl
fmul
or
testl
sti
fsubrl
mov
fsubrl
stos
mov
pusha
jp
xchg
adc
xor
cmpsb
push
inc
inc
cmp
lock
repz
lea
jae
fwait
daa
mov
pusha
fsubr
in
dec
cli
loope
mull
mov
jle
cmp
pusha
movsl
mov
int
mov
cmpsb
fdivl
dec
shrb
aam
sub
pusha
xor
jne
mov
push
mov
je
es
or
or
inc
fsubl
outsb
xchg
pusha
mov
loop
cmp
xchg
pop
lret
pop
out
dec
push
mov
rcrl
push
fwait
je
mov
dec
mov
jne
xchg
fcoml
outsb
or
push
in
orl
dec
mov
popf
ds
jns
cmp
and
adc
mov
jo
bound
psllw
out
push
and
adc
aam
sbb
ret
or
cld
mov
mov
and
test
lahf
stos
fcoml
dec
sbb
test
out
push
push
scas
mov
mov
add
add
fistpl
out
fwait
rorb
or
test
nop
dec
dec
mov
or
push
test
sbb
jge
mov
inc
or
insl
call
pusha
xchg
icebp
or
push
jne
cmp
jg
out
mov
repnz
pop
sbb
sbbl
fcmovnb
fadd
hlt
jne
xchg
add
mov
push
push
xchg
aas
ds
fwait
movsb
lock
push
nop
cltd
cmc
mov
push
dec
sbb
adc
cmpsl
es
dec
jae
mov
push
xchg
mov
addb
cmpsl
int
das
mov
sbb
rcrl
ss
adcl
sahf
loopne
push
rdpmc
sub
je
adc
xor
sahf
mov
xchg
push
push
mov
add
adc
mov
out
add
or
add
insb
fildl
inc
popa
jno
add
imul
or
hlt
clc
cmp
ja
movsl
aam
fsubrl
jecxz
insb
filds
or
or
in
mov
fiaddl
sub
jns
mov
jne
out
or
jg
testl
or
mov
or
add
int
jge
cwtl
push
lods
scas
dec
mov
fs
mov
call
jb
inc
lock
add
dec
xchg
push
and
push
fnsave
or
add
nop
or
repz
test
fdivl
xlat
iret
jnp
scas
mov
xchg
and
int3
xchg
pushf
pop
xchg
add
dec
push
ds
out
push
mov
in
sbb
sub
add
sub
test
loop
fsubr
out
inc
inc
and
shlb
mov
add
jg
jl
popa
mov
loopne
xchg
xorl
push
add
or
sub
adc
leave
scas
out
sub
xor
scas
loopne
sahf
nop
sub
add
ror
sbb
test
mov
or
out
std
test
inc
dec
fsubl
loopne
or
imul
or
push
xchg
or
jecxz
dec
neg
addr16
ret
movsb
pop
push
dec
adc
xorb
daa
mov
out
repnz
mov
leave
inc
cmp
popf
lea
loop
popa
mov
mov
xor
and
fmull
fsub
xchg
dec
jae
andb
clc
fsubr
mov
and
and
push
adc
in
or
sbb
bound
je
sub
jg
dec
pop
test
push
sbb
lret
test
push
lea
cld
add
lahf
xchg
lock
fmull
xchg
xchg
scas
cmp
cltd
int3
fsubs
or
push
sub
jge
or
mov
pop
pop
loop
imul
inc
test
stos
mov
jmp
out
add
mov
push
jbe
or
rclb
add
outsl
pop
decb
ss
mov
popf
mov
mov
mov
es
adc
loop
dec
dec
mov
cmp
mov
mov
rolb
mov
push
lock
in
les
leave
cwtl
sub
dec
mov
sbb
xorl
mov
adc
and
ss
xor
popa
xchg
fadds
gs
or
and
sbb
jecxz
mov
mov
hlt
jge
fs
outsb
add
push
mov
pop
push
imul
mov
xor
out
pop
outsl
cli
mov
push
hlt
sbb
mov
gs
outsb
in
ret
push
adc
or
jmp
iret
cmp
insl
mov
add
push
push
mov
lahf
jb
and
popa
clc
push
adc
mov
cmovo
inc
mov
jp
bound
hlt
jge
sbb
lret
sbb
mov
rolb
sbb
out
std
int3
repnz
div
mov
addr16
popa
or
fs
push
fdivrl
add
mov
inc
stos
scas
cld
sti
lret
jnp
jo
loopne
out
pop
loop
mov
in
in
pusha
jle
mov
int3
lret
cmpsl
in
jmp
stc
and
test
shlb
sub
cmp
mov
js
mov
add
fadds
push
out
lods
in
cmpsb
cwtl
in
and
and
cmp
fmul
add
dec
inc
xor
jnp
shlb
test
add
in
or
mov
cmpsl
test
adc
mov
jg
push
mov
loope
push
dec
outsl
or
push
faddl
mov
mov
pop
cmc
push
iret
sbb
insl
adc
movsb
cmp
push
hlt
adc
jb
les
dec
rorb
mov
dec
xor
ss
mov
shll
shll
mov
cmpsb
ss
inc
cmp
icebp
mov
fisttpl
filds
mov
mov
xor
lock
mov
cwtl
ret
jg
adc
mov
xchg
addr16
xchg
dec
xchg
mov
outsl
cmp
push
jne
mov
pop
sbb
lods
pusha
shrl
xor
jl
push
out
inc
in
mov
adc
sti
add
or
push
loopne
icebp
repz
divl
lea
mov
fdivl
test
pop
inc
mov
xor
mov
ret
dec
push
or
or
xchg
into
sbb
xor
insb
int3
add
or
mov
sbb
inc
arpl
xor
adc
out
inc
xchg
pop
or
push
pop
add
jmp
iret
push
xchg
lcall
imul
cwtl
xlat
or
xchg
mov
gs
bt
inc
ret
mul
call
adc
imul
scas
rcr
in
fnsave
fstp
inc
lcall
flds
adc
mov
inc
lods
adc
xchg
dec
in
sub
xchg
cmp
lods
shrb
jmp
xchg
pop
bound
or
nop
or
je
sub
xchg
stc
jp
mov
push
mov
negl
test
lock
add
sub
add
xor
mov
mov
or
aam
shll
sti
mov
daa
add
test
int3
push
movsb
pop
and
add
or
loopne
mov
iret
popa
shrl
or
pop
ss
es
jg
rclb
clc
std
push
enter
or
cwtl
mov
movsl
cmp
push
gs
xor
jno
add
outsb
sbb
lods
mov
mov
adc
loope
insl
jo
aas
out
test
cli
icebp
fstps
sub
icebp
test
jg
cmpsb
cli
pop
aam
setl
in
fdivrl
lds
mov
xor
push
and
lods
adc
cmp
inc
rorb
rolb
les
rcr
out
push
frstor
mov
hlt
push
cltd
dec
ja
push
mov
imul
ret
and
mov
lods
int
insb
push
or
inc
jnp
inc
fdivl
dec
out
mov
fdiv
push
adc
sub
or
es
dec
jecxz
mov
mov
adc
movsb
cmpsl
mov
or
and
decb
xchg
dec
ror
popf
dec
mov
lods
iret
adc
or
out
inc
xor
mov
int
fadd
aaa
mov
and
or
mov
inc
inc
adc
pop
imul
rcr
or
cmp
jbe
mov
cli
pop
gs
adcl
sbb
jo
cmp
dec
and
pop
jl
or
mov
cwtl
pop
and
adc
ret
cmp
lods
push
or
push
into
adc
sub
pusha
mov
mov
cld
sbb
fdiv
jecxz
mov
mov
ljmp
fcoml
nop
inc
mov
xor
jno
cmc
ret
addr16
inc
adc
push
cmp
add
lret
fstps
adc
std
dec
jo
lcall
clc
rcll
inc
mov
inc
xor
scas
int3
addr16
mov
cmc
adc
and
dec
nop
push
imul
inc
and
fdivs
jae
and
sbb
je
xor
lcall
fldcw
outsb
ja
pushf
shll
out
test
or
adc
iret
gs
clc
stos
xchg
xor
stc
ljmp
out
int
fadd
jle
adc
or
fists
xor
mov
mov
mov
or
xor
dec
fmull
int
xchg
mov
rorl
out
je
pop
std
xchg
mov
and
jp
iret
inc
movsl
adc
dec
cmpsl
dec
std
pop
or
ljmp
daa
or
or
scas
imul
hlt
xor
rcr
push
and
push
jbe
fwait
inc
ljmp
pop
shlb
cmp
mov
sub
xchg
push
ret
jne
subl
mov
xchg
pop
and
cmp
repnz
mov
repnz
pop
fcoml
push
or
xchg
cs
mov
mov
fcoms
out
cmp
shr
mov
jecxz
aaa
pop
adc
sub
ret
lods
or
or
push
push
mov
fsubl
xchg
cmpsb
adc
mov
xor
inc
jns
in
arpl
test
xor
fs
and
mov
jnp
or
and
and
push
sub
jns
sarl
fimull
jno
scas
jmp
push
adc
or
xchg
fcoml
loop
aam
daa
dec
and
clc
xor
pusha
and
dec
fdivrl
mov
shufps
repnz
ss
loopne
adcb
jl
add
clc
mov
movb
imul
inc
cmp
xlat
xchg
sub
mov
pop
pop
inc
bound
cltd
leave
jmp
fmuls
packuswb
pop
and
and
xchg
adc
lea
push
movsb
adc
jo
or
sub
and
cli
testl
mov
shlb
fdivr
insb
mov
pop
fcmovnu
aaa
xchg
adc
dec
stos
xor
stc
and
insl
pop
mov
sub
dec
adc
mov
subl
and
cli
fdivr
cmp
fstps
loope
outsb
lcall
cltd
test
and
insb
jmp
dec
iret
sub
icebp
aad
add
lds
loop
fldenv
sub
ret
xor
mov
sbb
inc
lahf
push
scas
pop
imul
pop
adc
or
imul
pop
popf
testl
adc
xor
in
jne
add
mov
loopne
loopne
or
inc
mov
push
push
test
mov
jl
ljmp
pop
cmp
sbb
dec
mov
movsl
or
cmpb
xor
push
test
mov
adc
adc
cmp
and
outsl
add
rcll
pusha
sbb
xor
mov
call
or
icebp
jp
aam
aas
or
mov
insl
mov
mov
mov
inc
leave
rorb
fstps
rorl
pop
int3
adc
mov
xlat
inc
dec
les
sbbl
mov
aam
rol
mov
adc
cmp
pop
xor
stc
enter
xor
adcb
mov
mov
and
and
inc
xor
clc
pop
xchg
add
mov
mov
cs
cmpsl
into
and
jmp
xchg
push
ror
mov
test
ljmp
gs
pusha
lahf
pushf
mov
jl
insl
and
rcll
fisubrs
sti
push
loope
adcl
mov
jg
xchg
outsb
repz
faddl
pop
fcomp
call
int
loope
jno
jle
push
insb
xlat
enter
and
xor
orl
fwait
dec
fsubl
addr16
inc
bswap
jle
fs
daa
xor
insl
pop
adc
cmp
add
enter
or
outsl
xchg
in
fdiv
ret
or
les
xchg
add
loope
outsl
mov
test
in
inc
adc
or
mov
repnz
mov
and
aad
ficompl
outsb
dec
pop
mov
jbe
pop
outsl
adc
dec
iret
cmp
or
bnd
inc
fcoml
xor
fcoml
orl
loopne
or
ljmp
adc
xchg
loope
mov
out
or
jp
mov
fsubl
or
pop
enter
outsb
or
lcall
adc
add
inc
mov
int3
or
insb
fnstsw
gs
test
sar
add
jl
or
lahf
repnz
incl
mov
mov
xor
out
mov
pushf
push
cli
pop
lock
movsl
nop
cmp
mov
inc
xchg
or
test
jle
jmp
lea
push
dec
dec
or
or
icebp
iret
adc
in
outsl
lea
pop
test
test
mov
stc
mov
push
add
cmpsb
dec
lods
mov
ret
lods
cmpsl
or
jae
mov
pop
xchg
fstp
adc
loope
out
loopne
inc
or
pop
jno
mov
mov
adc
out
stos
inc
mov
or
cmpsl
stc
mov
dec
mov
imulb
pop
adc
sbb
and
inc
cmpsb
adc
popf
adc
and
fdivl
pop
gs
into
enter
aaa
or
dec
rclb
cmp
mov
cwtl
rcrl
mov
jge
test
xor
xor
repz
push
push
hlt
outsb
sbb
pop
out
adc
out
dec
jae
adc
or
adc
mov
or
sub
xchg
loopw
lods
or
inc
xor
aas
mov
adc
adc
add
push
or
outsl
or
adc
sub
xchg
int
lods
pushf
pop
repnz
or
adc
sbb
lea
dec
add
stc
mov
shlb
sbb
inc
inc
mov
in
sub
smsw
push
pop
fmull
or
xchg
mov
arpl
stos
sbb
call
popa
sub
ret
mov
cmpb
int3
sub
or
lcall
stos
movsb
sbb
push
dec
push
std
cmc
add
xchg
cld
fsubrl
xchg
shll
sub
ret
repnz
cli
sub
adc
push
push
mov
mov
out
xor
lock
aaa
cmpsl
cmp
dec
pop
ja
repz
adc
dec
jp
push
inc
xchg
xchg
rol
mov
fmull
clc
call
ror
and
fsub
cmp
dec
xchg
iret
out
cwtl
jge
fistpl
and
aas
mov
insb
ret
xorl
shll
pop
or
jo
rol
into
jb
dec
daa
pop
movsl
cmp
add
cmpsb
jnp
sbb
pop
or
adc
jns
hlt
pop
fbstp
or
cmp
fsubrl
push
movsl
pop
mov
bound
jl
aaa
jae
movsb
stc
aam
add
sbb
lods
cwtl
cmp
inc
fmull
pop
jle
test
js
xor
enter
fsubl
out
mov
inc
mov
or
and
sahf
fstpl
or
adc
xchg
and
clc
lods
xchg
jl
mov
inc
lcall
aam
mov
xchg
or
push
or
into
xlat
mull
mov
gs
nop
sub
sub
sbb
or
daa
xchg
ret
cmpsl
jmp
fmull
into
into
inc
and
ret
loopne
and
ret
jnp
leave
push
sbb
push
mov
movsb
jb
and
pop
sbb
fwait
rcll
push
testb
add
loope
and
cwtl
xor
or
push
dec
fwait
mov
mov
mov
iret
test
pop
adc
insb
dec
loope
cmpsw
rcrl
xorl
lea
popa
add
jle
xchg
pop
xlat
adc
test
jmp
daa
test
adc
popf
out
mov
or
mov
ds
fmul
xlat
pop
int
or
push
aam
push
fdivl
repz
lcall
add
and
adc
clc
aam
or
shlb
aad
fsub
jge
scas
pop
cmpsl
fbld
mov
and
jle
sbbl
pop
mov
cmp
xor
imul
jo
mov
lret
adc
add
stc
pop
sbb
mov
push
fdivl
mov
mov
pop
push
mov
mov
and
push
push
cmpsb
nop
mov
lods
in
sbb
adc
cmp
or
pop
inc
dec
mov
sahf
xor
filds
jle
mov
fwait
or
jl
sarb
inc
ds
dec
jns
out
lods
mov
out
push
cmp
and
mov
sbb
jmp
mov
sub
fnsave
xlat
rcrl
push
inc
adc
ficomps
adc
leave
movsl
cmp
popa
subl
inc
adc
rol
add
cltd
and
jno
push
sub
jns
insb
popa
jno
mov
and
iret
xchg
fmuls
adc
test
jne
ljmp
jnp
fnstcw
test
adc
out
jle
cmp
or
adc
jl
add
pop
and
and
mov
xchg
inc
enter
and
xchg
sbb
lcall
xchg
test
dec
mov
xchg
or
fcoml
lds
and
out
jbe
sub
inc
inc
mov
in
mov
pop
xchg
add
mov
add
jecxz
mov
add
rcl
adc
mov
xchg
adc
push
jle
cmp
test
mov
test
adc
xor
nop
xchg
popa
mov
or
js
sub
in
les
pusha
nop
fabs
daa
mov
out
sbb
jns
insl
aas
lock
mov
ds
push
cwtl
adc
or
push
mov
cmc
adc
enter
or
jae
sub
shrl
faddl
pop
sub
fdivrl
incl
icebp
xor
subl
adc
je
outsb
je
je,pt
mov
jo
mov
sbb
cmpsl
addr16
je
mov
add
xchg
loope
ss
les
das
imul
mov
xor
fiadds
xor
mov
mov
push
xchg
push
leave
push
add
mov
out
mov
jmp
xlat
jmp
lret
xor
mov
fs
pop
lcall
mov
adc
dec
jae
add
sbb
inc
push
mov
loopne
fistl
lods
pop
hlt
cmpsl
in
aaa
mov
nop
sbb
sbb
mov
xchg
std
sub
out
fcmovnu
jno
mov
aaa
jl
adc
idiv
mov
xchg
mov
shlb
push
xor
and
cmp
clc
pop
push
pusha
cmpsl
dec
xor
or
fdivr
and
and
mov
mov
out
pusha
mov
pop
lods
push
or
loope
mov
fcmovnbe
addb
cmp
arpl
pushf
cmpsb
inc
leave
mov
inc
mov
xchg
out
insb
fbstp
adc
or
popf
enter
imul
cmpsl
or
and
cmp
outsb
push
jo
and
out
or
adc
adc
adc
leave
pop
inc
js
pop
or
adc
add
fdivrl
movsl
and
mov
orb
push
lea
popa
or
loopne
mov
adc
mov
push
add
dec
movsb
mov
out
mov
cmp
stos
adc
test
stos
lds
sub
fdivrl
jb
mov
ss
in
add
mov
jecxz
enter
lahf
dec
out
cvtdq2ps
jp
cld
je
mov
repz
faddl
sbb
cmc
outsb
pushf
dec
inc
or
dec
test
push
adc
cmpsb
incb
orb
mov
jp
scas
and
sbb
mov
dec
js
inc
sbb
sub
pusha
fdivl
push
dec
fwait
cmc
inc
mov
xor
mov
add
pop
sbb
xor
out
inc
fsubs
icebp
jmp
cmpsb
gs
loope
sub
cmp
cmp
cmp
xchg
negl
push
loop
adc
cwtl
mov
or
lea
fsubrl
mov
xchg
fmul
adc
mov
in
mov
add
daa
lods
ret
movsl
xchg
stos
mov
imul
outsb
jo
push
sarb
clc
orl
es
mov
sub
sub
insb
mov
mov
fistpl
mov
stos
sbb
add
push
lock
mov
out
std
xchg
inc
sbb
push
add
sub
mov
mov
jb
mov
das
xchg
test
leave
scas
or
sub
scas
mov
push
and
pop
andb
test
jl
jo
fdiv
dec
popa
dec
add
xlat
sbb
mov
popf
or
mov
aad
add
pop
sbb
pop
pop
icebp
addr16
inc
push
dec
jbe
jne
jge
dec
cmp
xchg
enter
xchg
das
mov
xchg
fsubl
mov
mov
jl
and
fistl
icebp
cmc
ss
ja
ja
scas
pop
mov
cli
in
popf
lea
in
jb
popa
add
in
ljmp
gs
adc
lcall
or
cmp
adc
fdiv
insb
cmp
gs
out
les
or
add
xlat
mov
pop
jecxz
int
leave
mov
adc
add
sarl
nop
cwtl
dec
or
xor
mov
inc
inc
dec
pushf
mov
shrb
add
rcll
outsl
roll
sbb
mov
sbb
mov
sub
and
pusha
add
or
add
inc
adc
mov
leave
loope
test
sub
xor
aas
test
jmp
clts
scas
mov
add
xchg
or
push
cmp
fcompl
sbb
xlat
adc
add
xchg
pinsrw
sbb
outsl
lret
pop
sub
unpcklps
lahf
adc
in
aad
into
pop
push
pop
push
out
mov
inc
push
cltd
mov
push
das
out
ret
rcl
and
pop
inc
movsb
jp
iret
add
fadds
sti
std
inc
mov
dec
adc
dec
scas
loop
push
add
dec
sbb
stc
out
pop
fcoml
push
sbb
push
or
imul
or
mov
gs
or
dec
xor
sub
mov
jl
aad
push
mov
out
mov
ss
fwait
xor
mov
ficoml
and
loopne
adc
popf
scas
icebp
imul
cli
mov
push
fmull
and
mov
rcll
ret
xchg
dec
inc
fsubrs
or
mov
mov
mov
int
rcrl
push
into
scas
jnp
out
sbb
dec
adc
xchg
lahf
ja
lcall
or
rcll
rcrb
insl
mov
pushf
adc
nop
fs
adc
cltd
xchg
and
inc
int
jno
mov
cmp
fsubl
fldlg2
dec
jbe
dec
sbb
jl
and
in
push
leave
xchg
jecxz
loope
test
adc
mov
jge
cmp
lods
int3
push
push
pop
mov
pop
adc
pop
xchg
int
nop
cmpsl
sub
pop
stc
mov
outsl
test
data16
pop
sub
fcoms
xchg
xor
mov
mov
out
enter
adc
push
and
mul
sbb
xor
mov
int3
jle
imul
jnp
jne
and
jmp
arpl
xchg
or
mov
or
loopne
and
fimull
sub
push
lock
push
movsb
cmpsl
lods
jns
fldt
fsubr
mov
aam
mov
dec
loope
outsb
mov
adc
stos
push
call
mov
pop
mov
add
adc
dec
and
add
fcmovb
scas
mov
and
je
mov
dec
mov
js
adc
lods
and
andl
xchg
fidivs
jne
sbb
popf
sti
mov
cmc
icebp
out
aas
adc
sbb
or
lahf
inc
mov
mov
insl
add
xchg
adc
push
fisubl
add
pop
pop
push
mov
pop
cli
inc
sbb
sub
out
imul
adc
adc
das
xchg
add
fcompl
inc
mov
jne
cmp
mov
mov
idivb
xor
dec
popf
jl
shll
test
subb
or
add
lods
aad
fcoms
pop
or
lea
or
rep
cli
cmp
aam
lds
ljmp
cmp
leave
into
sbb
jg
popa
sub
or
adc
mov
lock
out
sub
add
sbb
popf
cld
mov
xchg
mov
mov
loope
fldl
jne
inc
mov
add
cs
mov
imul
mov
adc
sub
cmpsb
mov
push
mov
fistpl
rcrl
in
add
cmp
cs
sbb
aad
es
int3
jmp
and
jbe
hlt
sbb
incb
dec
inc
test
xorl
mov
add
dec
xor
adc
mov
jge
or
and
ja
es
addr16
into
scas
inc
aam
adc
xchg
fcmovne
cmp
rcrb
mov
fsts
sbb
mov
jno
sub
xchg
dec
mov
inc
sub
adc
iret
mov
sbb
or
mov
push
clc
sub
adc
dec
jo
fnstcw
cmpsl
pushf
adc
sub
shlb
push
inc
mov
add
jno
and
mov
adc
dec
sub
dec
aam
filds
test
inc
inc
mov
sub
push
test
or
insb
out
mov
sarl
les
xor
out
stc
or
sbb
cs
repnz
rol
sbb
pop
xor
lret
adc
mov
lods
fadd
sbb
das
pushf
bsr
or
adc
xchg
pop
test
fsubl
loop
hlt
mov
jnp
imul
mov
cltd
loop
test
mov
fsubrl
outsl
dec
scas
mov
stc
xor
lds
adc
es
fistps
or
and
in
fmuls
cmpsl
dec
or
scas
sbb
imul
inc
push
je
cltd
cmp
mov
clc
cmp
pop
leave
cmc
add
addr16
jp
cmp
pusha
mov
inc
dec
mov
insl
movsl
outsb
inc
roll
xchg
loope
popa
stc
adc
fwait
jmp
in
mov
enter
inc
push
mov
sbb
jg
arpl
std
jnp
int
add
or
test
mov
inc
jg
mov
sub
push
out
test
std
inc
imul
and
mov
iret
lahf
jmp
nop
ja
mov
aaa
call
or
mov
call
mov
les
dec
mov
inc
xchg
in
lods
addb
les
dec
add
fmull
fdiv
pop
xor
shrb
or
movsb
notb
or
pusha
cmpsl
adc
push
movsl
out
lods
sbb
popa
mov
insl
aad
adc
inc
push
xchg
mov
pop
mov
pop
adc
adc
arpl
push
sbb
add
iret
addr16
add
in
sbb
mov
inc
mov
imul
push
sbb
pop
add
inc
sbb
pushf
mov
test
rorl
mov
mov
in
mov
and
cli
in
fsts
cmp
pop
fneni(8087
xchg
cmp
fdivr
cld
es
lahf
cmp
pop
stc
imul
sbb
out
negl
frstor
insl
dec
xor
sbb
push
push
jg
cld
sub
inc
stc
mov
dec
mov
dec
fildll
add
sub
aad
sbb
sub
out
insl
leave
cs
pop
cmpsl
movsl
nop
inc
jle
cmpsb
push
cmp
imul
mov
shll
sub
sub
insb
lcall
add
orb
mov
push
cli
imul
adc
adc
cmp
xlat
or
sbb
das
mov
mov
movsb
pop
dec
idivb
xlat
sarb
xor
mov
mov
fsubrl
jns
mov
inc
sbb
adc
mov
cmp
and
or
inc
xchg
test
lret
nop
pop
aas
pop
in
dec
in
jmp
out
push
or
adc
push
sbb
and
pop
mov
add
inc
adc
cwtl
shr
mull
or
pushf
int3
sub
mov
adc
add
jne
fnsetpm(287
push
xchg
adc
add
adc
dec
sbb
roll
sahf
fsubl
xchg
mov
imul
mov
mov
inc
cltd
adc
js
ret
arpl
jmp
adc
pop
dec
and
jno
dec
cmp
jge
jne
push
fs
loope
adc
jbe
cltd
daa
lcall
sarl
or
and
fmull
xor
mov
add
jl
mov
inc
shll
pop
mov
dec
lods
lret
pop
mov
xchg
sub
push
mov
inc
shlb
sub
data16
in
call
pop
movsl
pop
xor
mov
shl
or
lods
test
shll
movsb
push
icebp
cmp
dec
hlt
jge
cltd
fisubl
inc
or
lods
xchg
lds
inc
pusha
sarb
flds
or
dec
lods
rcrl
fmull
dec
cs
mov
jecxz
cmpsl
jae
dec
fimuls
sub
and
insb
aaa
out
mov
or
enter
rcll
push
pushf
aad
leave
cmp
andb
shrb
push
inc
dec
cmp
repz
arpl
int3
test
mov
rorb
out
pop
std
pop
mov
vpaddw
lea
pusha
adc
ret
push
mov
xor
arpl
adc
cmp
out
dec
push
mov
adc
shrl
pop
movsb
add
inc
imul
push
adc
icebp
ss
pop
stc
cs
mov
call
pushf
xchg
inc
aam
mov
test
cltd
sbb
cs
or
dec
ficoml
xchg
cmpsl
fisttpl
jo
cmc
loope
dec
or
mov
mov
fs
rorb
or
movl
xlat
int3
shrb
das
pop
or
push
cmpl
mov
orl
clc
cmpsl
mov
je
or
loope
sbb
mov
jg
subb
xchg
nop
rcrb
ljmp
into
pop
repz
sbb
idivl
jne
aas
pop
cmp
ja
fmull
push
aam
push
aas
lock
fs
subb
fcompl
cwtl
dec
andb
mov
adc
or
and
pusha
sbb
jl
lea
mov
out
push
and
leave
cli
mov
or
pop
dec
and
ret
cmp
scas
sbb
cmp
andl
pop
int
call
or
add
mov
lcall
aad
lock
mov
mov
rcll
dec
shll
adc
push
pop
mov
push
dec
outsl
cld
add
jo
pop
fistps
adc
js
insl
fisubs
bound
or
mov
and
je
mov
or
dec
adc
lods
and
sub
mov
rcrb
inc
or
pop
cmpsl
mov
insl
pop
fsubl
fildl
push
sbb
adc
orb
mov
dec
mov
gs
and
cs
lcall
dec
inc
inc
or
clc
clc
test
pop
pop
xorl
dec
iret
jge
mov
fs
fmuls
loopne
inc
mov
leave
in
call
push
pop
inc
adcb
push
fisttps
popf
mov
jmp
and
fwait
sbb
insl
mov
xor
mulb
xchg
adc
scas
pop
or
mov
or
and
mov
lods
jecxz
data16
lods
fidivs
addr16
mov
or
out
inc
js
cmpsl
cmpsb
lret
mov
sahf
in
cmp
mov
into
sub
out
mov
sti
xchg
inc
lcall
cmp
fldcw
and
faddl
ret
jns
shl
or
std
sub
rcr
inc
dec
je
popa
sbb
mov
mov
xor
adc
ja
jno
mov
lods
adc
xchg
jg
ss
imull
arpl
fcompl
ljmp
push
cwtl
push
dec
pop
push
fs
scas
or
es
xorb
das
sub
pop
cmpsl
cmp
mov
out
outsl
jo
shrb
adc
data16
mov
out
mov
pop
fiaddl
push
xor
xor
repz
shlb
adc
lock
mov
divb
cmp
inc
sahf
jno
and
clc
dec
scas
cmp
adc
movsb
adc
outsl
inc
dec
or
mov
pusha
adc
decl
or
mov
fstp
mov
pushf
fldt
mov
mov
push
sbb
into
sbb
xchg
sub
pop
lret
and
fmulp
ret
push
jge
mov
fsts
addl
xchg
jne
inc
ret
pop
mov
in
jle
mov
cwtl
sbb
mov
and
push
sahf
push
es
jbe
add
sub
fdivrl
icebp
imul
icebp
js
fstpl
call
inc
movsl
jge
int
ds
ret
pop
lds
int
in
jo
jle
out
fadd
icebp
idivl
flds
rclb
push
repnz
scas
orl
iret
jno
cld
inc
mov
test
mov
iret
mov
sub
fldl
lahf
rcrl
fstps
sbb
or
jecxz
mov
jbe
arpl
leave
fidivs
mov
sbb
test
out
pop
push
or
mov
mov
fdivrl
clc
and
mov
pop
xor
adc
out
les
jno
cmp
xchg
aaa
mov
push
inc
in
ret
fmull
sbb
and
pop
adc
cs
pusha
cltd
pop
sub
xor
pop
pop
in
popa
cli
xor
fdivr
or
test
movsb
jae
sub
xor
cld
cwtl
add
and
scas
stos
jno
xchg
xor
dec
dec
pop
and
xchg
dec
in
mov
pop
sub
fcomp
into
mov
and
sub
fisttpl
or
add
push
es
sub
jnp
movsl
fs
cmpsb
pop
mov
stos
in
pop
stc
fsubl
fwait
inc
pop
add
test
in
xor
addr16
movsl
pop
mov
aad
mov
xor
and
adc
adc
mov
mov
fs
add
aaa
stos
pop
lahf
mov
xchg
push
loopne
push
adc
outsb
or
es
leave
movsb
ljmp
add
imull
fdivrl
sub
push
push
xor
into
pop
ret
cmp
dec
punpckldq
dec
ret
or
pop
int
stc
mov
test
sbb
adc
repz
or
lods
add
int3
lret
in
mov
cmpsl
stc
inc
loop
cmp
xchg
std
dec
mov
push
xchg
fmul
mov
sub
lea
mov
jns
loopne
rcr
sbb
add
shrl
add
inc
ret
mov
and
cmpsb
popa
or
stos
mov
jg
mov
mov
loop
pop
loope
ja
out
pop
dec
pusha
xchg
repz
decl
insl
popa
js
fsubl
movl
dec
dec
dec
push
into
lahf
jge
inc
dec
jb
fwait
add
in
inc
or
or
mov
out
std
int3
inc
pop
int3
sub
push
ja
sbb
jge
xor
xchg
lret
cmp
xor
pop
mov
inc
ds
inc
aam
inc
cmpsl
data16
xorb
dec
and
mov
push
add
adc
push
cmpb
in
push
mov
data16
mov
inc
imul
adc
or
imul
mov
inc
nop
push
add
jge
jmp
mov
add
fmull
jne
inc
scas
mov
mov
orb
inc
add
push
cmp
or
test
sub
inc
insl
mov
xor
scas
mov
mov
cmp
mov
bound
lcall
cmp
popf
lock
push
jno
mov
mov
out
aad
push
ret
jl
jp
mov
fnstcw
push
scas
out
mov
cmc
pushf
dec
jle
push
mov
clc
sbb
adc
and
jnp
or
loop
cmp
inc
out
subl
xchg
orb
mov
fiadds
movsl
add
lcall
scas
lods
cld
pop
lds
push
cmp
inc
push
ret
sbb
fdiv
and
aas
stc
pop
or
pop
dec
divb
loope
cwtl
in
mov
insl
insl
adc
das
cli
fsubl
add
out
cmp
sub
and
insl
mov
mov
mov
add
dec
adc
fwait
cs
mov
add
or
add
push
mov
or
imul
hlt
negb
add
mov
push
and
cwtl
outsl
xor
sbb
fsubrl
mov
lods
cmpsl
in
xchg
and
js
arpl
fnsave
add
mov
and
repnz
adc
sbb
cltd
mov
pop
fnsave
or
xchg
iret
sbb
adc
scas
loop
mov
inc
xchg
cmp
frstor
xor
imul
lods
fnstcw
sbb
pusha
lea
mov
imul
gs
rorl
sbb
add
insb
stos
jp
and
cmpsl
aaa
mov
fmull
adc
add
loope
adc
std
into
or
jo
lret
pop
fcompl
push
movsl
scas
fisubrl
sti
or
push
mov
dec
adcb
out
pop
jbe
repnz
test
sbb
cli
push
pop
xchg
fwait
mov
add
sub
jl
push
adc
lea
or
rorl
dec
cmp
leave
push
adc
movb
scas
jg
xlat
sbb
stc
test
nop
or
cmp
cmp
or
roll
cld
xchg
push
or
stos
jno
test
pop
je
mov
adc
lods
fcomip
std
fidivrs
in
sbb
les
imul
pop
sub
or
jge
dec
in
mov
stos
scas
fsubl
push
mov
mov
push
mov
fstpl
mov
push
mov
lock
and
pop
inc
xchg
call
jb
or
adc
push
faddl
sub
sahf
mov
out
xchg
jae
out
inc
roll
cltd
sahf
iret
and
or
sub
lret
xchg
gs
push
push
sub
bound
hlt
mov
inc
addr16
test
mov
cwtl
cmp
xchg
jno
addr16
add
mov
repz
ljmp
or
std
xchg
out
fcmovnu
mov
dec
in
jnp
and
mov
mov
fdivl
push
aad
or
jmp
in
sbb
push
jle
mov
mov
jecxz
shrl
pop
and
cmp
xchg
into
and
notb
xlat
mov
aam
lahf
mov
adc
sahf
into
or
jbe
repz
jns
std
and
mov
jo
rolb
les
cmp
jb
insb
ljmp
jg
push
push
loop
or
nop
sub
movsb
inc
xchg
xchg
xchg
loopne
or
jbe
lods
arpl
adc
push
in
mov
dec
fcmovnu
decl
das
sti
push
mov
add
add
pop
inc
je
lea
mov
sub
push
cld
fs
in
loopnew
mov
and
sti
push
mov
into
pop
jns
stos
loop
fsts
cmp
push
sahf
or
and
fs
mov
imul
jne
dec
subl
iret
mov
xlat
imul
notb
arpl
or
push
hlt
xor
lds
fs
cli
add
insl
in
addb
das
aad
mov
inc
bound
dec
mov
push
cmp
divb
stos
cmp
mov
or
jnp
xchg
cmp
pop
in
movsl
fs
sbb
xor
imul
es
cmp
dec
in
cmp
mov
adc
shlb
pusha
sbb
ja
nop
sbb
mov
mov
pusha
or
sbb
addr16
fsubl
inc
cmp
icebp
xor
jb
imul
sbb
leave
sbb
or
mov
or
xchg
shlb
or
push
test
insl
push
cmp
ljmp
adc
movsb
lret
sbb
sub
cli
xor
adc
ljmp
or
mov
pushf
je
xchg
loop
push
and
xor
out
mov
push
cmp
push
cmc
adc
push
pop
cmc
xchg
in
push
leave
or
mov
adc
inc
lea
aaa
inc
adc
pop
insl
mov
flds
dec
nop
xor
add
dec
or
cmp
lods
leave
xchg
or
mov
adc
xor
cmp
setnp
fsubrs
lea
sub
nop
or
and
adc
cld
fcompl
das
fstl
ss
adc
cmp
mov
mov
cmp
loope
ds
fdivrl
jno
insb
addr16
sbb
jmp
xor
ror
pop
push
push
jge
dec
or
dec
jo
hlt
xor
mov
lds
cmp
je
cli
lock
rcll
jg
mov
insb
xor
fdiv
mov
pop
cmp
loopne
xchg
adc
cmp
push
adc
sbb
cmc
mov
fsubl
jb
adc
mov
dec
mov
fcompl
xor
jb
adc
fmull
mov
call
dec
fcomi
mov
arpl
push
xchg
and
mov
xchg
testl
push
mov
mov
fidivs
cmp
xchg
popa
adc
mov
std
sub
insb
shll
mov
fwait
or
or
and
imull
mov
push
popa
repnz
push
clc
jle
das
adc
aad
add
and
popa
pop
lahf
push
fistpl
das
daa
cmpsl
and
fdivr
inc
movb
mov
mov
jl
sub
inc
outsb
leave
fstl
add
insb
push
stos
push
or
sbb
mov
adc
xchg
adc
cmp
es
inc
mov
fsubl
mov
out
insl
or
cmp
add
jmp
sub
fidivrl
movsl
mov
mov
nop
cmpsl
push
and
loope
fcompl
stos
outsl
mov
loopne
jns
mov
lods
jae
repnz
aam
push
lea
clc
dec
nop
stos
fcompl
dec
cmp
pop
mov
mov
outsl
fadd
loope
stc
pop
inc
shr
add
call
cmp
cwtl
add
daa
pop
jecxz
xor
or
jb
mov
and
cmp
mov
cld
pop
cmc
loope
aaa
daa
sub
scas
je
gs
cwtl
pop
dec
fcmovnb
mov
mov
nop
sar
int3
lret
scas
fdivl
mov
sti
sbb
add
lahf
stos
nop
rcrl
adc
adc
cmp
je
mov
add
pop
mov
imul
pusha
hlt
jmp
pop
xor
insl
xchg
faddl
ror
push
and
out
clc
jae
arpl
pop
mov
fdivs
push
sub
int
cmp
into
sbb
xchg
xor
into
dec
and
imul
or
movsb
xlat
icebp
xor
pop
gs
sbb
movsb
sti
dec
push
adc
pop
and
dec
andb
mov
repz
xor
shl
mov
dec
xlat
mov
stos
icebp
sbb
sbb
mov
jae
inc
inc
push
and
mov
push
pop
cmpsl
pop
popa
cmp
repnz
jp
pop
ss
daa
push
and
add
sarb
mov
push
rcr
mov
nop
inc
das
shrl
out
lcall
adc
mov
lcall
adc
dec
jmp
fwait
inc
xchg
pop
ficoms
or
out
dec
or
scas
mov
inc
imul
inc
dec
mov
fldt
das
push
aaa
repz
mov
pop
jp
jnp
xor
push
dec
adc
jnp
dec
jmp
mov
rcrb
test
mov
jo
fs
lahf
push
fsubrl
xor
or
fisubs
sub
sub
je
addr16
mov
ds
sbb
jae
movsb
outsl
or
insb
decb
mov
push
push
mov
and
lret
mov
loope
pop
stos
outsl
insb
sbb
ja
cmc
jns
or
xchg
loopne
push
rcrb
cmp
sbb
push
imul
loop
fdivrs
push
push
in
add
jl
sahf
test
clc
jmp
shr
cltd
xchg
filds
pop
cmp
pop
daa
jno
mov
scas
jae
cli
xlat
add
test
add
jo
test
dec
xchg
stos
lods
inc
jp
adc
dec
jno
pop
ljmp
cmpb
fstpt
shll
stos
mov
nop
loope
in
es
ljmp
add
je
call
push
mov
sbb
adc
adc
mov
adc
stos
mov
test
orl
jge
mov
cmpsl
mov
cli
dec
or
push
fnsave
mov
mov
pop
sbb
arpl
adc
jnp,pt
loopne
adc
adc
or
sbb
in
mov
insl
and
ret
addr16
xchg
push
mov
xor
mov
fidivrs
int3
ficoml
xor
idivl
pop
dec
js
mov
push
xchg
mov
adc
xchg
in
xchg
cmpsb
outsl
scas
sbb
inc
push
imul
or
repnz
inc
shll
or
call
arpl
sub
movsl
mov
in
ljmp
mov
add
add
adc
or
int
shll
in
xchg
scas
cmpsl
movsl
xor
in
dec
in
mov
cmc
and
insb
les
and
and
mov
js
aad
mov
and
aad
test
mov
cmp
mov
sahf
push
aas
or
or
xlat
mov
pop
push
jg
or
popa
push
adc
pop
sub
jecxz
leave
mov
jae
or
inc
and
test
test
hlt
insb
out
out
and
dec
mov
loopne
popf
popa
adc
leave
test
sbb
xor
aad
xorl
mov
jmp
dec
xchg
xor
mov
mov
outsb
jl
sub
sbb
and
subb
mov
inc
sbb
dec
jae
mov
test
sub
inc
movsb
and
popa
fistpll
or
fld
clc
lock
hlt
pop
or
call
mov
fwait
lret
jle
adc
aam
or
or
or
out
fstps
adc
lock
sahf
add
adc
pop
mov
push
into
jae
adc
aam
or
cmp
xor
xchg
cmpsl
pop
mov
or
jne
movsb
push
fidivrl
in
adc
sub
ss
or
pop
pusha
push
inc
movsb
pop
adc
insb
push
loopne
popa
dec
pop
stos
test
or
out
rsqrtps
stc
adc
imul
test
ds
test
push
fwait
mov
and
xchg
rorb
movsb
or
pop
jle
mov
mov
jo
hlt
sub
das
or
pop
jnp
xchg
fdivrl
clc
mov
ljmp
jle
sbb
lcall
cmpsl
ficomps
pop
shr
pushf
push
xchg
movsb
fmull
in
cmp
and
and
movsl
xchg
lods
fidivrl
scas
aas
and
adc
push
in
push
and
shrb
fisubrs
out
fsubrl
dec
cmp
xchg
cmpsl
push
andl
adc
in
pop
movsb
clc
test
or
inc
xlat
hlt
ljmp
sub
xchg
sub
xchg
mov
fstpt
test
push
or
rclb
fsincos
and
repnz
test
sub
cmc
xor
pusha
ficoml
cmpsl
fidivrs
out
ss
pop
das
fcomps
jns
in
clc
mov
mov
rcrb
push
xchg
pop
and
pop
cmp
shr
xabort
adc
pop
xchg
sbb
sbb
mov
fisttps
aaa
out
into
in
adc
and
mov
cmpsl
mov
call
call
daa
or
sbb
push
jo
jmp
pushf
or
lds
jmp
pop
adc
dec
add
repnz
sti
fimull
psraw
sub
enter
fwait
cwtl
mov
lds
mov
arpl
dec
mov
pop
lock
int3
fsub
jecxz
imul
or
test
sti
daa
lret
jb
mov
pusha
jne
sti
dec
int
or
scas
sub
lahf
push
jg
icebp
pop
mov
xchg
in
adc
inc
icebp
mov
jmp
pop
lods
jmp
cmp
fisubs
cs
pop
rcr
inc
xchg
imul
dec
adc
je
scas
in
pop
pop
rcl
mov
subb
jg
mov
ficoms
adc
dec
scas
inc
aad
adc
sbb
ljmp
lods
in
pushf
scas
inc
mov
fnstsw
repnz
dec
push
xor
sahf
xchg
scas
mov
adc
outsl
enter
push
or
fcoms
jp
xchg
imul
arpl
or
idivb
mov
push
gs
sub
scas
push
jle
sub
jp
sbb
jg
jge
fsts
aam
mov
testl
shll
sbb
icebp
rcr
sbb
sub
fdivrl
sti
insb
stc
out
mov
or
rorb
or
les
mov
test
dec
mov
mov
jns
gs
fildl
inc
or
sbb
xlat
mov
dec
cmpsl
cli
dec
outsb
sbb
or
inc
fsub
int3
jle
testl
xor
and
cmp
pop
mov
mov
push
fsubrl
sahf
jbe
sbb
jecxz
dec
jmp
gs
sbb
jl
cwtl
sbb
push
xor
xlat
cld
insl
inc
loop
stos
fsubrs
push
scas
lahf
lods
test
and
popf
xchg
mov
test
ljmp
popl
movsb
aaa
iret
fmull
sahf
xlat
into
pushf
jle
fsubrl
fs
dec
fcmovnu
repnz
les
jle
cltd
sub
test
inc
push
fsub
adc
pop
mov
jbe
pop
icebp
arpl
pop
aad
lcall
insb
cli
rcrl
mov
test
adc
xchg
divl
sbb
sub
add
fstl
fldlg2
jle
push
fcmovb
lock
add
out
jge
mov
dec
mov
scas
adc
push
sub
or
pop
add
call
outsb
sub
jno
bound
imul
ret
dec
pop
cmp
lods
pop
push
add
insb
neg
push
cmpl
iret
subb
test
stc
test
fdivrl
out
into
xor
ret
mov
int
mov
mov
and
fstp
scas
mov
mov
scas
jns
mov
lods
mov
mov
imul
add
lea
sbb
mov
or
mov
jae
dec
rol
inc
cld
cwtl
aaa
xchg
xchg
mov
out
adc
and
addb
xchg
xchg
stc
aas
mov
hlt
aam
scas
arpl
fsubl
inc
outsb
aas
adc
adc
mov
or
mov
dec
mov
bsr
adc
mov
je
cwtl
lret
cmc
fsubs
mov
inc
adc
sub
test
stc
out
adc
cmp
push
ret
push
cs
popa
inc
pop
push
sub
sbb
shr
por
push
push
lock
mov
mov
fsub
jmp
xchg
pop
mov
add
repz
fcompl
push
pop
jp
fldt
jmp
mov
rcll
or
ror
stos
mov
cmc
loopne
push
out
xor
dec
sbb
out
jecxz
add
imul
mov
cmc
nop
rorb
orb
cmpsb
das
and
inc
adc
out
call
pop
cmp
pop
sbb
mov
rcrl
dec
and
jg
enter
mov
popf
scas
xchg
or
push
aad
sbb
sub
int3
mov
enter
xor
jecxz
fadd
insl
inc
and
push
aas
add
testb
loop
adc
mov
fisttps
test
icebp
lods
rclb
cmp
fisttpl
inc
cmpsl
or
mov
push
push
ss
xor
and
mov
bound
dec
popf
mov
and
in
int
stos
lods
loop
sub
fldenv
ret
insb
mov
adc
ret
add
cmp
cmp
jb
mov
jbe
adc
adc
add
or
in
lock
fdivp
faddl
movsb
hlt
push
scas
jns
in
xor
cmp
xchg
or
nop
or
adc
push
fcompl
repnz
pop
fdivr
popf
fidivrs
sbb
shr
faddl
out
mov
xchg
dec
mov
xchg
scas
fs
repnz
cmp
jl
fsubl
adc
lea
jp
xor
dec
pop
xor
fistl
sub
repnz
pop
mov
push
sar
cs
xor
clc
pslld
jmp
hlt
ret
mov
stc
xchg
outsb
push
jae
call
sahf
mov
insl
or
sbb
lret
mov
cmp
in
ror
not
xchg
outsb
inc
std
sbb
mov
xchg
pop
adc
ds
jp
loopne
xchg
sbb
in
daa
cmp
aad
fbld
shrb
pop
cmc
adc
xor
mov
xchg
call
das
push
out
test
in
jl
ds
leave
fisubs
ss
jb
mov
lock
adc
push
cltd
loop
inc
sbb
data16
inc
pop
mov
test
fidivrs
jmp
dec
cs
negb
andl
mov
push
adc
mov
ja
int3
push
dec
in
jmp
test
or
loope
ja
aam
pop
dec
leave
movsb
adc
push
lcall
fsubl
sahf
xor
cs
addr16
fistl
adc
xorl
jbe
stos
xor
femms
push
in
in
testb
mov
pusha
in
xchg
fdivrl
lods
test
fistps
cld
popf
jne
xchg
adc
fcomps
mov
insb
cltd
out
fcmove
fcmovnb
pushf
mov
jns
and
or
jb
push
lret
mov
xor
inc
sbb
inc
mov
fsubr
testb
mov
sub
les
mov
in
jae
mov
mov
mov
pop
int3
das
and
mov
mov
fistpl
push
ficoms
cltd
in
leave
fmull
mov
ficoml
mov
je
mov
sbb
aad
addr16
or
jne
inc
push
xlat
push
pop
mov
and
mov
popl
cmp
cmp
inc
jge
lock
mov
in
movsb
or
adc
sub
in
jnp
mov
loopne
in
pop
push
push
mov
mov
xor
sub
xor
adc
out
xlat
adc
std
mov
mov
into
pop
cli
xor
push
daa
lea
mov
pop
jnp
dec
xchg
or
aam
xchg
paddusb
mov
xor
shll
aaa
xchg
adcb
adc
dec
add
addr16
or
push
fwait
or
mov
rcl
push
mov
xchg
and
dec
fidivs
xor
jg
xor
and
test
push
jnp
sub
bound
xor
scas
or
test
pop
mov
pmullw
ss
adc
adc
or
imul
notb
mov
in
les
pop
and
repz
adc
scas
popf
movsl
je
mov
sbb
stos
js
mov
div
sub
xchg
mov
in
add
dec
enter
sbb
xor
xchg
xor
fucomp
or
mov
cmp
fdivl
ret
mov
in
mov
lret
test
adc
jle
mov
sub
ret
add
jnp
add
mov
pop
sbb
lods
mov
into
js
sub
aaa
jg
scas
mov
push
cmp
int
outsl
dec
insl
es
movsl
and
or
push
xor
in
movsl
push
jp
fmuls
cmpsl
sbb
add
inc
inc
andl
ja
sub
sahf
push
orl
mov
lock
addr16
arpl
nop
sti
xor
adc
sahf
cmpb
in
rorl
popf
arpl
bound
adc
sahf
push
pop
aaa
or
xor
inc
xchg
scas
lahf
push
sbb
rcrb
cmp
les
and
dec
pop
jo
pusha
mov
dec
sahf
mov
adc
sub
dec
outsl
jmp
mov
sbb
ljmp
negl
cltd
jne
popf
pop
fcomp
js
pusha
pop
adc
enter
push
aam
in
jmp
xchg
cs
arpl
aad
adc
mov
mov
ja
add
rcrb
mov
cmp
sbb
add
mov
push
fsubs
add
faddl
cld
mov
orb
mov
shrb
mov
fsubrs
cld
or
xchg
lcall
push
mov
inc
stos
xchg
daa
pop
sbb
dec
mov
jae
adc
cs
inc
mov
and
cltd
mov
adc
in
ret
shr
out
mov
bound
sub
mov
sahf
lret
les
and
adc
cltd
adc
adc
sbb
mov
dec
and
mov
fadds
xchg
mov
sub
xor
pop
cmp
or
mov
aas
fstpt
inc
insl
cli
jmp
xor
xor
xorl
jl
dec
jnp
lods
add
cmpsl
fdivrs
xor
mov
sti
cmp
or
adc
adcb
push
inc
fimull
fdivrs
aaa
dec
mov
or
add
fmull
or
cld
add
and
test
adc
push
mov
stos
mov
inc
mov
dec
mov
mov
repnz
jnp
mov
aas
test
cmp
lods
fdivrl
popf
fbld
mov
ja
sbb
fnstenv
les
or
jnp
shr
faddl
sub
cmpb
adc
xor
add
out
cmc
stc
pop
dec
out
popf
out
cmp
push
out
xor
sbb
xchg
shl
xor
mov
sbb
pop
adc
push
jne
cld
aas
sbbb
mov
mov
shll
xor
jecxz
jnp
insl
ljmp
adc
dec
inc
cltd
jae
pop
lods
or
pop
pop
iret
into
fldl
ret
shlb
sub
add
push
push
test
push
rcrl
jecxz
adc
jmp
xor
jge
js
lock
mov
push
hlt
xchg
adc
mov
das
fnstenv
add
adc
ffreep
psubb
jns
cmp
pop
mov
pop
mov
inc
dec
enter
or
jle
push
sahf
fdiv
lret
and
mov
sub
xchg
jecxz
in
cmp
cmp
ror
bound
out
rcr
mov
jl
inc
jae
into
jbe
sub
ds
pusha
adc
or
hlt
xchg
mov
jbe
and
adc
mov
leave
pop
or
or
mul
sub
pop
xor
shlb
add
jmp
out
xor
movsb
rorl
imul
cs
inc
and
xchg
mov
mov
lretw
mov
mov
faddl
rolb
xlat
mov
or
icebp
fmull
mov
iret
in
xchg
scas
mov
pop
popf
icebp
pop
xor
arpl
fdivr
push
fsubrl
xchg
fprem1
mov
mov
nop
and
push
mov
inc
outsl
mov
ret
mov
rcl
jne
and
test
int
mov
dec
mov
mov
sbb
lods
jb
jae
mov
mov
dec
or
les
and
arpl
mov
jo
adc
scas
adc
cmpsb
pop
pushf
and
je
or
loope
pop
mov
ret
mov
fimull
jge
mov
jo
cmp
mov
xchg
inc
daa
fstpl
lock
dec
bound
subb
dec
add
and
mov
add
movsl
push
jae
fcompl
rcrb
inc
insl
or
xor
jo
xchg
adc
sti
repz
mov
dec
xorb
rcll
test
xchg
leave
lea
xor
sbb
stos
nop
sub
pusha
pusha
imul
jmp
sbb
mov
mov
xchg
mov
mov
sbb
outsb
cmp
test
cmp
push
in
or
mov
clc
pop
jle
out
loop
add
iret
aaa
cmc
sti
ret
das
ret
mov
lahf
or
sarb
imul
mov
push
int
fs
dec
xchg
and
jle
or
mov
fstpl
lret
adc
or
xchg
divb
adc
fisubl
test
hlt
sbb
icebp
mov
xlat
popf
sub
cld
or
mull
xor
sarl
adc
mov
mov
adc
and
call
adc
movsb
aaa
cli
nop
mov
pusha
cmp
inc
out
adc
iret
xor
push
in
mov
icebp
pop
lea
cltd
mov
ss
popa
inc
or
lods
cmp
and
fiadds
mov
notb
mov
in
push
or
lods
jb
cld
jge
mov
lcall
add
pop
mov
std
dec
ficoms
fidivrl
mov
xchg
loope
int3
or
push
or
jp
mov
loope
xchg
aad
test
xchg
cmpsb
or
rcrl
pushf
dec
aad
add
rorl
adc
xchg
mov
shr
mov
pop
lds
cld
mov
adc
pushf
xchg
hlt
xlat
inc
lods
add
sub
mov
mov
ftst
movsb
aas
mov
repnz
test
ret
pop
inc
push
shl
mov
xchg
pop
sub
sub
jge
mov
or
push
xor
test
shll
pusha
xor
cli
or
push
add
sub
add
xor
mov
not
inc
dec
mov
xchg
push
or
and
pop
xchg
dec
jo
cmp
insb
mov
or
add
and
sbb
cmp
xor
jae
push
adc
and
fs
pop
xchg
les
ja
mov
inc
push
sbb
inc
mov
in
inc
int
cmpsb
pop
xor
mov
mov
sbb
rcrl
faddl
xor
fbstp
cld
jo
mov
mov
pusha
outsl
ficompl
ret
fadd
stos
mov
adc
mov
lahf
inc
adc
cmp
cli
fmull
xor
mov
adc
pop
and
testl
cmp
adc
inc
sar
jae
or
push
pop
jae
sub
mov
inc
adc
mov
cmp
sub
inc
scas
mov
mov
fistps
rcll
sub
or
mov
add
rcr
jnp
lods
dec
pushf
jb
mov
pop
pop
ffree
adc
popf
sbb
adc
ljmp
hlt
xchg
xchg
fsubrl
or
ret
inc
testb
adc
push
fdivrl
ds
movsl
lcall
pop
and
lret
and
sub
dec
sahf
mov
pop
mov
adc
or
push
and
roll
mov
xor
in
js
mov
mov
push
jb
xchg
pop
dec
pop
xor
call
popa
scas
mov
add
pop
cs
andb
lods
sub
mov
add
jle
mov
movsl
adcl
cwtl
das
or
in
xorb
xorl
call
pushf
pop
mov
push
adcb
comiss
movsl
jno
arpl
mov
leave
xor
aam
adc
mov
lea
lods
sbb
cmc
pop
sub
outsl
xor
in
inc
cmp
xor
pop
lahf
ss
outsb
and
add
xor
pop
mov
mov
jmp
shl
xorb
adc
xchg
pop
fbstp
ficomps
mov
loope
mov
popa
cmp
dec
aas
shll
out
push
pushf
negb
ja
lea
cld
in
xor
sbbb
cmpsb
pop
shll
in
fcompl
sbb
lock
mov
dec
into
out
inc
or
and
jl
icebp
mov
lds
push
mov
in
dec
or
sti
cmp
mov
cmp
ret
jne
out
mov
mov
ret
add
xor
push
and
and
add
rcrl
in
xchg
dec
jle
xor
pop
sti
das
add
int
xchg
cmp
fwait
mov
inc
and
orb
jecxz
negl
jb
cmp
xor
mov
cli
sub
cmp
mov
inc
repz
fsts
cltd
bound
or
daa
lds
or
js
mov
mov
dec
in
add
int
ljmp
out
and
dec
jnp
icebp
mov
pop
repz
adc
mov
inc
mov
lds
xor
lcall
inc
jp
adc
or
jecxz
test
scas
push
lret
lods
lods
subb
dec
mov
add
cmpsb
outsb
outsb
pop
add
jbe
push
mov
fstpt
js
faddl
movsb
lods
mov
clc
ret
adc
int3
mov
or
dec
pop
xor
adc
mov
jae
dec
push
or
and
sbb
inc
imul
insl
arpl
mov
xchg
aad
movb
mov
ror
xchg
mov
jle
or
adc
test
xor
jno
mov
cltd
cmp
out
jmp
hlt
lcall
rep
mov
jp
xchg
jg
aaa
add
gs
ds
mov
ja
mov
adc
sbb
push
or
movsl
ljmp
mov
mov
push
mov
icebp
adc
adc
mov
mov
xchg
dec
pop
cmpsl
and
adc
dec
adc
or
mov
lock
sub
cmpsb
mov
mov
pop
jne
cmc
mov
mov
and
push
or
inc
aas
mov
jle
jmp
mov
jae
je
sbb
movsl
pusha
popa
pop
frstor
aas
and
ljmp
mov
mov
or
test
pop
clc
pop
dec
add
mov
std
jecxz
insl
mov
fsubrl
jno
cmpsb
jae
inc
sub
sub
pop
insl
mov
mov
pop
xchg
adc
dec
cld
pop
or
xchg
jae
add
cmc
or
mov
lea
aas
xchg
or
lds
push
faddl
xor
andl
adc
pcmpgtb
pusha
mov
or
test
insl
lret
insb
faddl
jp
sbb
dec
shrl
jbe
pop
loopne
push
xchg
lds
jge
addr16
imul
insl
xchg
flds
fiaddl
push
xor
mov
sub
mov
add
sub
inc
and
movsb
push
xchg
mov
pop
and
or
sbb
out
fdivrs
xchg
add
in
inc
mov
jo
cmpsb
cmpsb
push
sbb
test
xor
push
ret
pop
mov
dec
jns
or
out
std
daa
pop
jge
les
icebp
inc
aaa
mov
out
jge
stos
and
mov
or
sbb
adc
dec
mov
inc
test
xchg
push
pop
dec
inc
lcall
cli
or
mov
push
inc
lret
pop
pop
lock
int3
movsb
stos
mov
or
int3
scas
xorb
in
cmc
cmc
xor
fildll
mov
cmpsl
xchg
xor
cmp
popf
and
js
es
scas
sbbb
dec
imulb
lahf
shll
pop
aam
test
dec
fimull
pop
in
add
test
test
jp
js
mov
iret
aas
dec
setbe
mov
mov
aad
pop
mov
iret
int
adc
pop
xchg
xchg
vunpcklpd
imul
adc
cmpsb
mov
stos
loope
lcall
push
push
dec
mov
rcr
les
adc
and
stos
dec
adc
popf
mov
ds
fsubrl
dec
mov
fwait
or
lods
pop
je
popf
sub
inc
or
push
xchg
ja
faddl
push
lahf
js
sti
cwtl
insb
mov
sbb
icebp
les
jb
enter
lret
jo
xchg
negb
les
scas
test
ret
xchg
gs
xchg
pop
mov
cld
adc
sub
pop
in
dec
lea
movsb
sbb
ret
xor
aam
jae
lahf
add
ljmp
popf
insl
mov
mov
hlt
les
adc
pop
add
sbb
sub
push
ja
push
jecxz
xchg
pop
xchg
jecxz
lcall
repnz
fdivrl
jns
mov
xor
sbb
int
mov
pop
icebp
loopne
adc
fwait
es
or
cwtl
in
imul
mov
push
out
mov
ret
pop
xor
lods
loopne
int3
clc
sub
shll
mov
xor
fmuls
or
arpl
dec
fcoml
dec
sbb
pop
inc
mov
fcoml
pop
aad
and
sub
lret
fdivl
sbb
or
addl
loope
xchg
mov
mov
int3
imul
test
jno
popa
repnz
out
pop
pop
sbb
inc
mov
rcl
std
insl
lahf
xchg
ljmp
daa
cmp
test
sub
push
adc
lret
arpl
insb
test
fsubrl
stos
dec
sbb
inc
mov
or
out
adc
inc
xchg
xchg
into
jp
fsts
imul
nop
mov
mov
cmc
mov
cltd
cmpsb
mov
push
insl
mov
and
xor
mov
lret
cmp
scas
notl
jge
xchg
push
cmc
add
mov
mov
fcmovnu
pop
inc
cmp
or
lods
pop
jl
inc
ret
pop
push
pop
ret
stos
dec
push
cli
inc
out
mov
pusha
leave
jle
jne
loopne
jl
cmp
mov
ljmp
cmpsb
fcoml
inc
test
cld
mov
jno
xchg
lret
shll
out
arpl
push
fsubrl
mov
popa
cmc
or
int3
data16
mov
jecxz
mov
mov
or
xchg
ljmp
mov
stos
sub
roll
fwait
insb
jo
cmpsl
ss
adc
sub
je
fisttpll
xor
cmp
cmp
dec
xchg
fsubs
jl
popa
sbb
mov
dec
jecxz
jnp
sbb
sub
adc
mov
loopne
ret
jle
popf
testl
push
mov
fsubrs
loop
pushf
jbe
lods
mov
and
std
nop
mov
xchg
sub
shl
ret
push
cltd
cmp
cmp
dec
and
mov
sub
adc
repnz
sbb
pop
dec
fldt
xchg
dec
pop
call
loopne
dec
fcomp
mov
push
in
movsl
push
push
or
xor
sbb
mov
push
fisttpll
push
cmp
imul
in
fmuls
fdivr
sub
and
hlt
movsl
xor
push
pop
mov
jne
iret
mov
in
inc
fsubrs
ja
mov
cmp
jmp
cmp
mov
outsb
xchg
adc
mov
xor
ret
mov
ret
mov
test
adc
dec
jns
or
xchg
aaa
push
cmc
mov
sub
in
cmpb
scas
and
imul
xchg
fmuls
pop
and
aam
clc
pop
dec
or
add
cli
jo
pushf
fcmovb
fwait
mov
outsl
shlb
adc
das
rcr
push
xor
mov
outsb
lods
xor
jbe
push
ret
push
add
adc
mov
int
xor
and
or
ja
push
add
mov
sub
cmc
mov
sbb
in
push
or
and
js
cmpsl
sahf
insb
or
and
int3
lock
mov
sbb
add
mov
lods
and
adc
scas
les
or
push
mov
repnz
adc
aad
in
mov
and
hlt
aas
sbb
push
bound
fwait
jns
xor
sahf
pop
and
or
int3
cmp
fsub
dec
scas
push
pop
lock
test
adc
ret
cmp
jmp
int3
aad
and
fdivrl
out
pop
jo
mov
pop
mov
cs
subl
jno
mov
mov
in
inc
cmpsb
or
lea
cmp
insb
dec
lds
hlt
cmp
xchg
shlb
inc
pop
mov
fnstsw
inc
mov
push
fwait
ret
add
mov
xchg
sbb
cld
faddl
sbb
repz
neg
jb
or
testb
movsb
faddl
and
jmp
jmp
popa
test
push
mov
lret
aas
dec
out
ret
add
aam
add
ret
fsub
inc
or
shll
pushf
scas
leave
int
in
jbe
xchg
scas
loopne
cmp
in
popa
xchg
pop
cmp
in
test
pop
add
adc
xchg
adcl
sub
ret
push
cmp
in
insl
mov
xlat
pop
lods
out
out
cmp
sar
cmp
or
lds
stos
fmull
push
outsb
mov
fsts
mov
inc
dec
das
mov
jne
outsb
jge
mov
pop
pusha
in
mov
add
sub
lea
out
stc
or
or
fsubs
mov
jecxz
cld
stc
mov
pop
add
sub
insl
fisubl
pop
fwait
xorb
aas
cli
pushf
sbb
lods
lcall
jmp
pop
ljmp
push
add
adc
adc
jecxz
adc
jno
ret
repnz
lods
xor
mov
jecxz
minps
mov
sbb
add
lods
jnp
test
pushl
fwait
scas
popf
push
adc
push
xor
cmp
dec
mov
aad
sbb
psubsw
sbb
push
aas
sahf
insb
adc
mov
mov
or
cmp
sti
dec
and
xchg
mov
imul
fidivrl
pop
and
add
cld
pushf
adc
fs
in
stos
cli
xchg
fdivr
push
dec
ret
js
adc
and
dec
sub
imul
jl
mov
mov
inc
sub
fldcw
ret
dec
push
mov
cld
cmp
enter
and
or
dec
mov
pop
mov
arpl
neg
pushf
jb
loope
or
mov
icebp
jbe
xorb
jl
imul
orb
ret
mov
push
mov
xchg
in
xor
ljmp
xchg
xchg
lea
in
js
pop
jmp
insl
je
cmp
fcoms
pop
mov
fmull
jno
iret
dec
and
arpl
cmpsb
daa
ret
mov
loope
aad
jns
mov
pop
adc
xchg
mov
jge
mov
jo
mov
xor
inc
or
cs
ret
popf
or
cmp
inc
mov
cli
fmull
xchg
adc
jbe
adc
movsl
dec
fnstsw
rcrb
dec
mov
or
or
fnstenv
leave
cli
adc
jne
xlat
or
aam
loope
fsubl
shl
in
pushf
jp
pop
pushf
xchg
in
adc
jecxz
sbb
mov
hlt
or
mov
sub
mov
mov
mov
mov
mov
sbb
int
sarb
in
aaa
push
inc
popa
imul
icebp
jecxz
repnz
cmc
daa
mov
add
inc
or
pop
mov
mov
cwtl
sbb
inc
dec
mov
pop
xor
mov
loop
and
outsl
adc
pushf
out
pop
sub
push
orb
scas
mov
fcompl
add
rcrl
stc
mov
lods
push
or
rorl
dec
mov
mov
inc
mov
jae
mov
lds
cmc
cs
jo
xlat
scas
sahf
mov
push
shrl
cld
jl
fmull
xchg
cmp
xchg
aas
push
mov
data16
hlt
inc
icebp
ficompl
xor
cwtl
mov
nop
faddl
xchg
jns
imul
out
add
inc
adc
mov
mov
cmp
push
in
inc
adc
mov
xchg
rorb
inc
and
mov
lods
leave
xchg
or
jg
ljmp
js
stos
fcmovne
adc
sbb
in
or
clc
mov
jecxz
adc
jge
add
icebp
mov
js
lcall
fisubrs
fnsave
or
in
pusha
fwait
push
aad
clc
jmp
mov
xor
cwtl
fstl
xchg
xchg
push
add
je
decb
jns
aas
mov
xchg
in
in
adc
or
rcrl
mov
or
mull
cmp
cltd
ss
cmp
leave
push
pop
sbb
pop
dec
addr16
popf
jmp
pop
faddl
dec
mov
fcompl
sub
fcmovnb
or
and
pop
fnstcw
cwtl
or
pop
faddl
or
lret
adc
cmp
cmp
popl
int3
ss
sub
test
movsb
sti
sti
in
lods
int
cld
pusha
pop
hlt
pop
test
cmp
adc
add
xchg
lock
adc
jmp
dec
leave
leave
daa
mov
adc
adc
lds
dec
or
add
mov
fistl
mov
aam
insb
cltd
push
pop
pop
cmp
ljmp
or
in
iret
test
dec
loopne
add
fcom
cmpsl
mov
fimuls
jp
push
jmp
insb
add
jb
mov
cltd
sahf
inc
fsubrl
mov
mov
lret
mov
inc
enter
mov
fs
or
loop
test
mull
imul
fptan
sub
mov
or
add
push
pop
incl
shll
sub
sahf
dec
dec
in
xor
cmp
add
sub
add
ss
cmp
in
lret
repnz
imul
jno
pusha
sbbl
mov
ret
xchg
mov
mov
push
dec
pop
adc
fwait
push
cmp
sub
mov
add
lds
out
cli
jmp
cmp
push
fst
sbbb
out
or
and
ja
faddl
or
js
and
repz
sti
push
stos
xor
jns
pop
and
in
xlat
scas
test
dec
cmp
fwait
jnp
mov
inc
loopne
push
mov
scas
cld
int
dec
dec
adc
inc
cltd
jno
adc
xchg
xor
jg
cmp
add
inc
lahf
and
mov
cmp
xor
fildl
cmp
lahf
int
push
inc
cmc
negb
lret
popf
imul
and
push
push
jecxz
xor
mov
lret
and
mov
push
jmp
fnstsw
pop
scas
sub
mov
lcall
mov
loop
sbb
icebp
movsl
fcompl
out
sbb
test
adc
inc
lret
int
lock
mov
mov
adc
imul
popa
mov
shll
test
pop
leave
mov
adc
push
jno
mov
shlb
sub
cmpsb
in
mov
cmp
mov
fsubl
insb
movb
or
fcomps
xchg
std
pop
inc
jno
call
inc
fisttps
stos
fdiv
out
fcoml
inc
add
movsl
test
out
or
lret
nop
imul
jp
xchg
jp
jg
jae
push
add
aam
enter
rorl
cmpsl
std
stos
mov
pusha
sbb
sti
pop
sbb
fadd
lret
mov
cmpsb
and
jg
insb
out
sahf
cmovge
sbb
dec
mov
clc
lods
push
mov
enter
call
fsubr
inc
mov
call
add
mov
int3
sbb
adc
mov
inc
sbb
xchg
adc
movsl
divl
jp,pt
or
out
cmp
mov
push
push
test
ret
test
jo
dec
adc
xor
jbe
loope
push
xor
adc
bound
mov
and
call
jbe
mov
fstpl
jmp
mov
enter
iret
sbb
adc
xor
loope
stc
mov
jmp
pop
je
outsl
fstpt
pop
outsb
fsubrl
push
fwait
lea
aad
cmp
cmp
daa
insb
aaa
dec
outsb
cmp
pop
jmp
sbb
int
add
xchg
jecxz
xor
sub
ljmp
pusha
mov
in
xor
aaa
fsubl
sub
mov
ja
lcall
push
or
sbb
pop
les
inc
xchg
mov
loope
cmp
fmulp
xchg
addb
dec
sub
xchg
push
ret
adc
bound
cld
into
add
add
mov
sub
stos
leave
testl
sahf
rol
iret
int
icebp
or
push
sbb
mov
mov
testl
cmp
mov
mov
mov
shrl
sbb
call
jae
mov
push
int3
mov
scas
sti
lock
pop
out
int3
push
push
xchg
sbb
pop
shlb
pop
inc
jmp
fbld
jecxz
das
test
mov
or
add
lods
loop
jl
push
ficoml
data16
adc
push
mov
xor
xor
and
jecxz
out
in
jle
popa
test
inc
pushf
xchg
shl
es
faddl
mov
mov
inc
ljmp
std
das
push
dec
push
in
pop
clc
popf
sub
je
lahf
int
cmp
notl
in
lea
clc
ja
mov
jno
mov
pop
jo
into
cmp
push
mov
gs
mov
add
fldlg2
mov
mov
pop
stos
and
out
fdivp
and
cmc
sbb
cmp
mov
dec
push
lea
and
mov
push
mov
dec
jecxz
xchg
cmp
shlb
mov
ret
cmpsl
cmp
xor
iret
xchg
push
lret
push
test
cli
mov
fbld
cmpsl
push
xchg
or
fsub
int3
mov
mov
jns
mov
cmpsb
xchg
out
push
push
out
jbe
sub
ficompl
out
pop
push
cmpsl
xor
out
fsubr
mov
mov
push
aad
adc
sti
jns
or
decl
addr16
loop
sbb
rorl
mov
repz
fistpl
popa
mov
addb
outsb
pop
aad
fmul
lea
cmp
loop
pop
dec
das
pop
cmp
cmp
mov
loope
out
dec
icebp
push
mov
loope
repz
cmpsb
add
rorb
shlb
outsl
inc
enter
mov
cwtl
add
mov
mov
mov
test
push
mov
jno
js
mov
ss
mov
or
or
inc
pop
pop
jo
sbb
push
shll
cmpsb
jmp
pop
int3
cmp
dec
dec
gs
adc
pop
inc
fcomps
push
mov
test
cltd
in
jp
rolb
outsb
lret
or
test
adc
fistl
or
push
into
scas
cli
subb
andl
rorb
cmp
mov
or
fsubrs
add
push
daa
cltd
mov
mov
ljmp
mov
add
dec
mov
popa
fistl
xlat
xlat
sub
int
cmp
adc
sbb
jecxz
jb
or
jno
jg
sub
stos
mov
enter
cltd
neg
loop
pop
out
adc
cli
in
adc
lahf
cmp
in
inc
push
pusha
mov
sbb
test
mov
hlt
push
fwait
iret
adc
mov
adc
push
mov
loop
mov
sbb
insl
data16
adc
and
ret
pop
push
stos
xor
push
cwtl
jg
pop
fs
mov
push
adc
fisttps
test
aas
sbb
cmp
dec
push
cmpsl
jne
stos
mov
aad
cmp
and
repnz
mov
push
cmp
in
movsb
and
aas
pop
mov
adc
jle
and
dec
pop
inc
lret
fdivrl
popa
mov
xor
or
dec
sbb
push
fadd
pop
adc
pop
out
leave
fistl
or
mov
pop
imul
addr16
aad
pop
nop
or
pushf
shlb
lret
ffreep
iret
jno
inc
fistpll
lock
icebp
dec
mov
pop
sbb
adc
testb
movsb
fwait
lret
cmp
sbb
out
pop
cmp
ret
xor
xchg
inc
inc
loopne
cmpsb
enter
sbb
sarb
lcall
shlb
fdivl
add
xchg
and
pop
rorl
mov
and
in
pop
push
stos
inc
adc
rorb
fcoml
data16
and
mov
mov
test
mov
dec
and
out
dec
movsb
mov
mov
cmp
or
pop
add
cltd
sbb
outsl
jl
xchg
mov
adc
inc
or
xor
xor
arpl
fstl
add
mov
push
or
sbb
fisttpll
pop
adc
or
icebp
leave
xchg
cwtl
add
add
mov
movsl
hlt
pop
inc
out
push
imul
mov
push
je
adc
outsb
cmp
repnz
pop
fcompl
or
sbb
cmp
xchg
mov
hlt
dec
and
adc
popf
mov
push
sarl
adc
test
mov
stos
sbb
jecxz
aas
mov
addr16
roll
push
push
movsb
jge
and
fcomps
adc
dec
adcl
sub
mov
fcoml
xchg
jle
mov
cmpsb
and
adc
xor
xchg
cltd
mov
push
add
and
imul
mov
arpl
pop
jge
mov
jb
add
into
push
mov
push
insl
sbb
adc
cmp
add
xor
pop
pop
adc
inc
shlb
roll
mov
or
xchg
xlat
icebp
int
dec
sbbl
fldt
mov
lods
jb
ret
scas
inc
insl
mov
cmp
adc
push
dec
int
repz
loope
data16
xlat
cld
and
pslld
test
jae
aad
mov
pop
cmc
xchg
mov
pop
loopne
lcall
nop
inc
mov
pusha
and
mov
jge
adc
roll
fs
pop
adc
mov
sub
in
adc
out
je
insl
jg
push
sub
add
xor
push
pop
setb
or
cld
dec
xchg
or
pop
pusha
call
inc
push
cmp
sub
adc
add
mov
test
rclb
adc
cmp
push
adc
or
ss
aam
sbb
cmp
fsubrl
or
mov
jns
pop
pop
scas
rcr
stc
rcrb
cltd
push
cmp
mov
fdivrl
sar
jb
dec
out
push
pop
popf
imul
push
pop
gs
pop
pop
xchg
add
or
and
adc
cltd
call
fisttpl
xchg
loopne
int
insl
clc
fcoms
lret
imul
js
jge
fcoml
cli
sahf
mov
mov
negl
ljmp
fcmove
lret
std
mov
push
dec
adcb
xchg
mov
repnz
fwait
push
xchg
or
sub
mov
pushf
pusha
test
mov
cltd
int3
jbe
lahf
icebp
pusha
jns
pop
pop
pop
xchg
jns
push
push
jmp
mov
pop
and
cmp
into
and
shrl
lret
push
mov
sbb
push
or
rolb
mov
shlb
xor
pop
xchg
or
dec
jl
scas
fistps
aas
fistpll
lret
sub
insb
ficoms
push
iret
rcrb
fldt
adc
jne
gs
xchg
repnz
or
or
xchg
movsl
lock
addr16
push
push
adc
mov
aad
lret
jg
jno
sbb
cmp
popa
cwtl
jmp
inc
arpl
ss
js
nop
mov
fucomip
loope
pop
mov
arpl
jl
in
cld
fsubrl
mov
push
pop
or
pushf
outsb
jg
adc
dec
mov
jns
lret
and
xchg
adc
je
or
jecxz
fldl
adc
push
aaa
add
sarb
das
ss
push
xchg
jmp
ficompl
mov
push
or
push
ss
adc
xchg
xchg
andb
xchg
lret
mov
and
sub
xchg
ret
xchg
fnstsw
cmp
push
pop
adc
aad
lods
out
test
mov
or
pop
jle
in
js
cmc
xor
push
outsl
mov
xchg
inc
adc
dec
lea
or
jo
jp
push
pop
or
stos
shlb
ret
popa
in
pusha
xor
aas
rcr
xor
out
lock
dec
dec
mov
test
bswap
cli
mov
inc
pusha
xlat
sbb
mov
and
das
mov
rorb
inc
out
and
arpl
push
movsb
push
push
xchg
and
xchg
cwtl
sub
iret
fadd
xchg
fmulp
arpl
mov
lods
jl
repnz
mov
mov
ret
xchg
bt
adc
incb
sub
rclb
cmc
cmp
cltd
or
out
inc
out
push
sbb
fisubs
fimuls
divl
lahf
leave
or
dec
mov
mov
sub
fwait
jo
push
sub
lods
repz
or
test
sahf
out
shll
add
not
mov
sbb
pop
movsb
outsl
das
fstps
stos
sbb
sahf
or
sub
or
adc
dec
dec
push
std
out
fdiv
adc
inc
out
push
mov
jge
mov
js
leave
faddl
mov
sbb
pop
cmpsb
sub
adc
mov
fmull
or
push
push
in
dec
addb
or
xor
and
aam
jb
xchg
pop
insl
and
add
lods
and
sarl
loope
add
or
pop
lods
in
fstl
push
sbb
adc
popf
xor
jns
daa
cmpsb
movsb
lahf
dec
mov
jg
dec
aam
gs
fdivl
dec
inc
mov
push
jae
mov
pop
les
pop
aas
add
fimuls
fdivr
fcompl
repnz
andl
mov
inc
xor
jb
mov
xchg
stc
gs
arpl
jns
pop
js
aad
mov
fsubrl
or
xchg
mov
stc
jmp
mov
std
push
roll
jo
adc
test
loop
fs
xchg
push
fiadds
stc
cli
ljmp
pop
and
lret
fisttpl
lret
frstpm(287
xor
xchg
rclb
or
jl
mov
inc
push
add
adc
lret
popa
lods
adc
sbb
add
push
add
fld
int
mov
pop
add
cmpsb
xchg
sub
xchg
xchg
mov
or
shrb
test
fdivrl
jl
aaa
addr16
aas
xor
jge
scas
mov
and
ficoms
test
subb
cmp
aad
sbb
shr
and
xor
imul
dec
popf
adc
dec
dec
jb
fdivrl
xor
mov
int3
in
insb
adc
fcoml
jbe
test
sbb
or
or
lcall
clc
mov
jns
neg
test
stos
xchg
sar
adc
or
pop
sub
adcb
clc
cmp
mov
imul
dec
sub
xlat
mov
xor
leave
fmull
pop
pop
negl
inc
and
push
popf
push
cltd
jmp
sbb
pusha
push
mov
jmp
hlt
push
rcrl
gs
mov
flds
adc
or
and
jmp
sbb
outsb
repnz
mov
incb
or
lds
or
loopne
pop
int3
xor
add
push
or
sbb
mov
inc
dec
xcrypt-ecb
cmpsl
or
cmp
adc
inc
bound
adc
xor
pop
loopne
mov
mov
mov
outsl
call
pusha
add
dec
and
mov
cld
mov
icebp
ljmp
jge,pn
sti
adc
test
rorl
pop
mov
mov
je
imul
popf
faddl
pop
movsbl
push
jge
xlat
mov
lret
ljmp
faddl
ds
dec
loopne
pop
push
dec
in
xchg
mov
ret
in
xchg
push
jo
leave
mov
or
fildll
adc
ret
or
mov
jl
sbb
xor
inc
int
popa
ret
and
loop
mov
call
js
mov
or
mov
adc
adc
fptan
adc
scas
mov
push
pop
sub
mov
insb
sub
les
xchg
ja
or
dec
or
jae
lods
push
adc
out
xor
xor
jge
add
in
repz
in
cmp
insb
cmp
out
jmp
jl
adc
js
pop
into
hlt
scas
jge
aad
cmc
xor
xchg
stos
adc
lods
lret
bndstx
jg
fs
push
test
mov
dec
imul
sub
leave
xchg
test
cltd
sub
mov
dec
xchg
stc
out
inc
loop
sub
mov
push
push
or
push
jmp
mov
ljmp
mov
popf
cmp
mov
adc
sub
mov
dec
fimuls
movsb
sbb
and
in
clc
sbb
aad
push
test
int3
rclb
xor
jmp
cld
les
or
adc
sub
or
lahf
xor
shll
inc
roll
mov
mov
mov
xchg
or
dec
ja
mov
mov
rcrb
inc
in
xor
lret
xchg
fisttpll
mov
fdivr
je
pushf
test
mov
xor
fs
adc
jp
or
leave
ds
lds
cmp
bound
push
fidivrl
int
lahf
dec
rcr
sahf
xchg
loopne
push
loope
jmp
push
lock
imul
and
mov
mov
mov
mov
add
xchg
adc
push
mov
decb
mov
rorl
ss
fsubrl
leave
std
test
data16
push
sbb
lcall
mov
outsl
aad
pop
ds
test
jo
lods
adc
je
inc
dec
push
movsl
or
or
dec
cmc
fcoml
xlat
pop
aas
imul
mov
imul
mov
adc
or
push
push
sbb
xor
xchg
xchg
adc
mov
push
push
push
mov
xlat
mov
fbstp
fcoml
cwtl
pop
dec
jg
sub
lret
loope
aad
adc
pop
pop
and
js
lret
or
outsb
inc
dec
rcr
and
push
insl
or
scas
out
insl
mov
cmp
adc
scas
daa
gs
fcompl
rcll
shlb
repnz
call
push
dec
dec
pop
test
adc
or
aad
xor
sub
stc
mov
adc
and
faddl
movsb
ret
cltd
dec
or
gs
mov
xchg
jne
lods
fdivl
lock
xchg
push
es
sahf
aas
leave
cli
je
fldcw
pop
adcb
cs
mov
mov
add
outsl
mov
cmc
cmp
inc
inc
lds
cmpb
add
test
adc
xchg
mov
daa
and
jl
test
idivb
js
fmull
dec
aas
lcall
lods
cmp
nop
jbe
xchg
lods
sbb
add
sub
jg
fcompl
jecxz
andb
aas
push
stos
arpl
test
pop
in
jnp
mov
daa
loopne
add
adc
dec
movsl
mov
add
out
cld
push
fcmovb
adc
inc
daa
ret
cmp
add
outsb
cwtl
test
pop
lret
xchg
iret
lea
mov
xchg
cwtl
faddl
loope
xchg
mov
outsb
test
lahf
ret
cmp
sub
in
decb
les
pusha
push
fs
pop
fmul
ljmp
fcmovu
push
int3
push
jbe
pop
sub
test
dec
cs
out
jmp
add
sbbb
xor
fsubl
sub
mov
aad
mov
nop
nop
inc
out
mov
adc
dec
push
fstpt
shrl
loopne
cli
lods
mov
push
push
sub
lcall
aam
push
andl
push
jg
xor
cld
and
sub
push
xor
push
jno
cmpsl
jnp
jp
adc
inc
js
mov
out
sar
adc
sub
std
daa
dec
xchg
ret
push
mov
pop
mov
mov
in
mov
cmp
cmpsb
fcomps
adc
mov
ljmp
cltd
imul
ljmp
sahf
jl
adc
rol
or
orl
add
insl
rcll
lea
je
jmp
dec
mov
xchg
pop
dec
or
adc
adc
outsb
clc
add
sub
mov
and
sbb
adc
fdivrp
push
aaa
or
sbbb
nop
mov
mov
xchg
movsl
das
shrb
mov
xchg
push
ljmp
data16
jbe
bound
test
push
dec
in
adc
aaa
xchg
push
and
or
gs
cmpsl
js
loopne
sub
mov
lock
adc
stos
jmp
and
in
or
insb
ret
adc
inc
pushf
imulb
insl
movsb
pop
out
jnp
aad
ret
cmp
clc
cs
mov
pop
inc
cmpb
lret
loopne
lds
push
mov
pop
lcall
jg
adc
sub
mov
push
aaa
adc
mov
icebp
adc
lret
aam
in
sub
jmp
ljmp
sub
in
stos
faddl
jl
or
or
ss
dec
shll
xchg
insl
and
in
jge
faddl
movsl
int3
sbb
rorb
outsb
mov
mov
jge
nop
mov
fsubl
std
cmpl
bound
xor
roll
in
sub
mov
pop
jno
pop
insb
xchg
and
or
push
mulb
insb
insb
in
es
lcall
popf
int
sbb
fdivrl
mov
push
mov
adc
stos
in
data16
fistl
mov
and
fildll
cmp
enter
jl
stc
leave
mov
or
sbb
jb
lsl
xchg
fs
dec
and
and
xor
adc
dec
or
or
xchg
dec
push
rcl
aad
push
adc
das
xorb
xchg
lods
out
into
das
iret
fsub
dec
jmp
jmp
nop
mov
pusha
stc
lahf
fcompl
mov
mov
sahf
test
adc
scas
sub
negl
xor
in
test
popa
or
xchg
mov
inc
xlat
xor
mov
ss
mov
imulb
adc
adc
mov
sarb
push
pop
mov
adc
popa
or
addr16
dec
pop
add
mov
pop
or
repnz
pop
inc
xlat
and
xor
inc
push
dec
push
or
pop
leave
jne
pop
mov
mov
jge
xlat
jo
call
test
cmp
lahf
xchg
pop
fistpll
mov
or
cmpsb
cmpsl
mov
filds
loopne
mov
sahf
clc
je
arpl
pop
and
leave
jg
mov
ret
pop
push
jecxz
or
nopl
pusha
dec
mov
stos
out
adc
repnz
dec
mov
cmp
adc
decl
adc
repnz
lods
adc
jo
ja
jp
sbb
xchg
pop
sub
xlat
enter
add
shrb
dec
cmc
xchg
incb
add
scas
inc
sti
adc
aaa
sbb
popa
mov
negb
enter
xchg
loop
fdivrl
add
cwtl
mov
cmpsb
jecxz
ficomps
in
mov
int
push
push
les
pop
pop
sub
imul
jne
mov
dec
ss
sub
into
push
and
cwtd
sbb
push
pop
shl
fistl
jo
and
jmp
xchg
pushl
inc
mov
or
push
jne
jmp
cltd
scas
dec
je
mov
data16
imul
adc
dec
repz
sbb
mov
pop
adc
mov
xchg
push
or
test
sti
push
in
lods
mov
movsb
vmovlps
dec
xor
clc
or
jecxz
lcall
in
leave
arpl
rorb
adc
mov
adc
push
adc
dec
pop
mov
cmp
xlat
adc
in
cmp
out
fcomip
push
test
inc
jns
mov
fcomps
shl
cmpsl
scas
mov
push
test
das
sbb
cld
inc
mov
xor
jno
xchg
cld
movsl
insb
add
rcrb
push
popf
loopne
pop
out
adcb
mov
sbb
vmovss
je
mov
lret
push
jecxz
adc
jb
loope
dec
mov
fildl
adc
test
loopne
adc
sub
add
or
or
inc
inc
fistl
pop
jnp
mov
xchg
fwait
sbb
push
dec
cld
sbb
xchg
xchg
mov
and
movsl
adc
cwtl
mov
or
add
adc
mov
mov
std
dec
stos
rolb
movl
adc
add
cltd
adc
loopne
add
gs
nop
dec
lea
mov
fidivs
dec
inc
repnz
pop
sbb
mov
imul
mov
mov
fnstsw
xchg
add
or
ret
icebp
fcompl
and
xchg
sub
int3
push
dec
pop
xchg
adc
in
lcall
mov
or
push
push
jg
stos
fwait
push
fldl
popa
andb
or
push
mov
in
push
xor
int
inc
insl
jmp
pop
mov
lgs
aam
mov
adc
push
js
xor
arpl
sub
popa
cs
jo
inc
mov
push
shrl
mov
adc
inc
adc
xchg
movb
mov
mov
inc
fisttps
shll
cmp
lret
lahf
int3
rclb
dec
mov
insb
das
inc
adc
push
or
jmp
ja
and
jl
jo
sub
cli
or
fdivp
add
cmc
movsb
jnp
jns
dec
mov
mov
inc
test
push
push
mov
push
das
fstl
cmp
js
mov
xor
fcompl
mov
addr16
or
add
adc
mov
in
mov
in
scas
inc
jae
inc
jge
adc
or
filds
sar
loope
in
push
adc
sbb
cltd
fidivs
fcomi
int
sarl
mov
pop
or
pop
rcrb
popa
movsb
and
sub
jo
mov
dec
or
mov
jb
pop
hlt
fwait
or
icebp
js
sti
cmp
adc
jecxz
mov
rcll
inc
cli
dec
iret
mov
adc
cld
xor
fldenv
mov
int
push
adc
lcall
dec
dec
push
jg
jg
adc
xor
dec
mov
add
jle
inc
fstps
or
popf
and
mov
adc
mov
clc
pop
push
inc
mov
pop
mov
mov
icebp
push
test
jmp
ror
sub
xchg
mov
negb
dec
lcall
loopne
or
inc
push
addl
in
mov
ds
pop
sbb
or
xchg
cmc
loope
fdivrl
xor
test
cltd
loop
or
and
xchg
fcoml
push
cli
fldcw
sub
mov
adc
outsb
inc
jp
push
lods
adc
lds
aas
adc
faddp
icebp
mov
mov
int
sub
push
cmc
fst
das
js
leave
push
fcoml
pop
bound
gs
xchg
jo
adc
scas
mov
aad
stos
test
dec
adc
ror
inc
test
jl
in
xlat
xchg
or
lods
jmp
imul
rorb
pop
psllw
or
int
xchg
sarl
imul
cltd
mov
or
mov
aas
adc
jecxz
jg
push
out
pop
pop
lea
orb
cmp
fwait
xor
insb
adc
daa
subb
test
adc
ljmp
adc
and
imul
roll
adc
pop
sbb
adc
fsts
xchg
mov
dec
bound
mov
sub
push
mov
push
cmpsl
in
adc
mov
mov
adc
cmp
roll
mov
adc
xor
mov
adc
mov
push
push
cmp
pop
ds
xchg
xchg
pop
push
ja
popf
loopne
movsl
fstl
scas
xchg
cmp
xor
pop
cmp
mov
rcr
jge
ja
push
mov
fsubl
mov
ljmp
shll
mov
cmpsb
call
shll
or
imul
xchg
push
or
insb
cwtl
mov
inc
cwtl
dec
mov
cmp
int
loop
xchg
fdiv
mov
fwait
insl
mov
stos
cmp
sbb
mov
scas
aad
test
and
pop
repnz
jg
mov
orl
shlb
lahf
adc
mov
push
enter
rcr
mov
sub
ficoms
in
loopne
test
std
loopne
xchg
xor
add
dec
mov
lahf
sbb
imul
out
inc
ret
hlt
repz
and
pop
inc
lods
push
or
cmp
or
movups
imul
aaa
and
mov
or
mov
ret
xor
sbb
sub
ljmp
ret
mov
mov
sbb
mov
push
adc
or
shrb
addr16
or
test
push
sbb
mov
sahf
mov
pop
pop
dec
xor
out
scas
adc
in
xchg
xchg
adc
out
pop
mov
stos
out
aaa
adc
mov
fnstsw
mov
out
insl
dec
mov
mov
loopne
mov
fwait
scas
mov
rol
fsubrl
repnz
mov
xchg
add
mov
push
ds
daa
rcl
inc
adc
loop
jmp
and
push
mov
lcall
aas
push
sub
dec
clc
pop
out
add
or
loope
loope
push
dec
dec
cltd
lods
lcall
fwait
roll
cmp
out
imul
cmc
dec
les
mov
aam
sub
dec
jg
mov
mov
xor
or
fcmovu
aad
ret
fisubrs
cmp
jp
mov
mov
roll
or
mov
lods
fsts
cld
sub
cwtl
cmp
stc
mov
xor
sbbb
pop
cmp
cmp
pop
push
and
xor
mov
icebp
data16
aam
jae
jb
hlt
scas
mov
or
or
and
mov
inc
insl
add
mov
mov
dec
stc
push
pop
xorb
add
dec
mov
cmc
cmpsl
xor
stos
data16
clc
clc
xor
jmp
jl
xor
adc
mov
icebp
mov
mov
aam
sbb
adc
ret
orl
mov
outsb
push
sti
fdivr
sbb
cwtl
adc
hlt
mov
mov
adcl
movsl
fsubs
jecxz
sbb
xor
fdivrl
aaa
enter
cmp
or
dec
cmc
mov
andb
jge
sub
jl
jbe
cmpsb
mov
and
fdiv
pusha
and
push
mov
or
sti
dec
push
adc
popa
test
pushf
fcoml
mov
mov
shlb
push
cmp
sbb
dec
cs
outsb
aam
imul
xor
test
and
fwait
in
fistpll
mov
bnd
dec
mov
sbb
lea
cli
jo
mov
push
das
andb
lret
cltd
jmp
popf
add
pop
fsts
das
and
lret
add
mov
aas
ss
pop
fldenv
sub
jno
cmp
mov
pop
jge
or
jbe
movsl
flds
jne
adc
dec
adc
test
incb
mov
xor
mov
or
push
sbb
popf
or
sarl
cmpsb
mov
cld
lods
inc
add
ljmp
shrl
push
add
push
fisubrl
fsubrl
insb
mov
outsl
push
mov
cmp
sbb
push
into
mov
add
imul
mov
xor
push
inc
adc
add
pop
or
sub
sbbb
mov
or
sub
push
rorb
movsb
push
xchg
pop
push
loopne
cmpsb
fildl
cmc
faddl
inc
xor
mov
je
imul
pop
xchg
inc
test
push
xor
std
push
mov
sub
mov
out
icebp
push
stos
mov
dec
cli
and
or
adc
loopne
faddl
subb
movsb
mov
scas
mov
in
repz
dec
add
sub
ljmp
xlat
pop
jmp
fisttps
adc
cmpsl
leave
sub
cmc
or
or
fsubs
std
jp
jo
jb
xchg
adc
jmp
inc
add
shr
pop
xor
pop
and
mov
sbb
or
outsl
aas
mov
aaa
lea
jmp
data16
pop
shll
or
xchg
dec
cmp
xor
mov
roll
cmp
xchg
loope
sarb
popa
int
js
pop
fs
push
ljmp
push
dec
mov
aam
fcompl
ret
stos
push
movsl
pushf
pop
int
cmc
cwtl
lea
dec
inc
data16
xor
stos
stos
and
xorl
inc
fstl
pop
dec
mov
inc
xor
mov
xchg
or
pop
pop
adc
out
cmp
out
je
or
aas
jbe
mov
push
aaa
or
mov
and
xchg
int3
dec
mov
arpl
mov
shll
fs
sbb
fisttpll
aam
call
or
rclb
shlb
arpl
push
not
mov
mov
js
cmp
decl
lahf
inc
adc
jp
fcmovnbe
pop
mov
js
pop
adc
add
in
and
fsubl
loope
pop
push
sbb
mov
mov
aad
out
mov
les
aaa
adc
dec
jae
int3
jle
adc
ljmp
pop
add
add
imul
xor
cwtl
jecxz
sub
sub
gs
cmpb
fisubs
cwtl
out
fdivl
sub
mov
es
xor
pop
push
iret
sub
and
pop
mov
fisttps
aas
mov
insb
or
addr16
rcll
jle
cmp
pop
adc
adc
out
cmpsb
loopne
test
inc
sbb
xor
repz
fs
lret
xor
ficomps
inc
xor
ret
push
sbb
mov
enter
xchg
out
xchg
enter
bound
jns
mov
xchg
orl
scas
jg
popa
or
sbb
push
or
jl
pop
insb
ret
mov
jbe
xor
out
adc
arpl
jae
mov
jg
jge
push
cli
pop
popa
icebp
je
xor
gs
out
and
popf
xchg
xchg
adcb
mov
cmc
not
jae
fimuls
push
das
add
mov
and
jmp
bound
mov
xor
cltd
fdiv
add
push
mov
fs
int3
andb
sarl
dec
into
mov
mov
lcall
or
push
xor
or
pop
adc
ficompl
cmp
push
cld
test
xor
xor
inc
icebp
lret
pop
pop
out
mov
adc
adc
ret
paddb
xchg
insb
adc
jb
jbe
inc
mov
mov
imul
push
lods
xor
push
push
cmc
pusha
xlat
sbb
jnp
mov
rcrb
scas
or
out
push
jno
into
aas
dec
das
faddl
cmc
shr
pop
jl
fisubl
dec
jae
loope
mov
lret
or
jo
mov
std
inc
dec
xchg
adc
iret
xor
clc
shlb
rcrb
lcall
shr
mov
icebp
rclb
push
push
add
dec
jb
add
test
lret
cmp
data16
or
mov
insb
or
sbb
adc
mov
mov
xor
insb
and
sbb
fidivs
rorl
adc
mov
imul
cltd
add
rcrb
sbb
imul
cmp
jns
sub
mov
adc
in
xchg
xor
mov
fldl
imul
adc
enter
daa
adc
jns
lds
xchg
push
dec
lea
rcl
into
dec
mov
fistps
bound
mov
in
push
sbb
jge
pop
adc
sub
sbbl
js
adc
orl
daa
mov
lahf
jo
pop
or
scas
mov
pop
fdivr
les
mov
xchg
sbb
or
fadd
mov
jbe
popf
pop
add
jnp
loop
fs
pop
jmp
or
lret
xor
iret
mov
loopne
xor
or
pop
es
cmc
inc
mov
cmc
scas
out
or
jnp
pop
fs
fdivrl
mov
jno
mov
fcoml
imul
pop
push
lea
and
data16
xchg
fcoms
pop
mov
push
iret
mul
divb
rolb
pushf
sbb
adc
jmp
mov
adc
adc
mov
mov
or
jns
xor
pop
mov
or
fimull
rcll
or
cmpsb
subl
scas
sub
test
sar
push
xchg
adc
lods
sbb
xlat
mov
mov
fmull
jnp
inc
addr16
add
jne
inc
and
gs
inc
faddl
lods
mov
dec
xchg
xchg
movsl
cld
rolb
movsb
aam
pop
aaa
mull
or
call
jle
xchg
stos
jge
aam
dec
sarl
pop
mov
bound
cmp
andnps
ret
sub
and
sub
ljmp
xchg
in
xor
or
add
fistl
cld
lret
xor
mov
subl
aas
ficompl
or
lock
jge
dec
push
pop
int
out
nop
adc
xchg
scas
in
test
ds
cmpsl
fcmovnu
inc
sti
inc
jle
push
jl
dec
mov
movl
mov
mov
out
ja
add
fmull
dec
mov
push
mov
mov
bound
pop
js
negb
cltd
test
or
push
jo
sahf
jmp
jl
cmp
push
mov
jno
loope
adc
push
cmp
test
push
add
pop
lret
ja
inc
out
push
pop
push
or
or
jae
mov
jg
es
cltd
negl
adc
loop
fistpl
mov
jmp
dec
mov
pop
pop
adc
outsb
sub
outsl
fstpl
push
mov
inc
stos
fdivrl
sub
aas
jne
inc
mov
imul
and
jle
adc
lahf
lods
pusha
mov
pop
and
sti
add
ret
test
mov
adc
enter
mov
andw
stc
add
repz
imul
test
in
ljmp
fldenv
nop
jo
push
mov
xchg
xor
xchg
adc
push
in
mov
or
pusha
jne
rcr
pop
aad
and
inc
js
rolb
aas
adc
test
inc
cmc
mov
out
std
inc
add
dec
jecxz
dec
or
sarl
vpunpckldq
flds
test
adc
mov
cwtl
lods
fstl
add
dec
lea
rorl
pop
rcr
push
mov
mov
or
sahf
cltd
cmp
fdiv
push
or
xchg
mov
repz
dec
lret
mov
mov
push
push
add
scas
pop
jo
push
mov
sbb
jne
inc
jle
mov
sub
rorl
dec
pop
xchg
mov
pushf
inc
std
enter
or
fwait
adc
mov
mov
cmp
sbb
cli
int
or
dec
rclb
add
test
xor
dec
xor
hlt
aad
int3
dec
xchg
hlt
shll
mov
inc
dec
fcompl
pop
mov
mov
nop
pop
mov
mov
mov
mov
add
xchg
adc
jmp
xchg
mov
mov
jns
and
and
push
pop
scas
mov
push
pop
xor
push
cmp
lret
sti
pop
clc
adc
mov
andl
fdiv
in
dec
or
mov
lds
test
rol
adc
mov
dec
or
andl
fdivl
fsubl
cmpsl
lahf
lret
inc
or
stos
jmp
add
or
add
push
aas
dec
fimuls
enter
fsubl
add
mov
mov
or
push
enter
jo
stc
rorb
jcxz
pop
mov
sahf
fimuls
or
cmp
xor
xchg
shrb
mov
push
lret
lods
jae
pushw
sbb
ret
xor
mov
pop
push
add
dec
pop
add
stos
test
sbb
add
pop
adc
cs
or
push
xchg
dec
sub
sbb
lods
xor
loop
icebp
cs
shlb
and
mov
or
mov
push
xchg
adc
scas
lret
rclb
stos
fdivs
shrl
pop
cmp
es
xchg
adc
sub
xchg
mov
cmp
push
lret
call
push
mov
jae
pop
xor
ficoml
push
nop
adc
jp
subb
jne
dec
mov
mov
mov
adc
pop
pop
sub
add
iret
dec
pushf
call
sbb
movsb
sbb
pop
pop
in
cld
xor
adc
data16
mov
aas
mov
jecxz,pt
cmp
xor
fdivrl
shrl
mov
fsubs
aaa
add
scas
or
in
pop
push
mov
repnz
dec
pop
loope
out
adc
jge
mov
push
xor
jo
cmpsl
xor
mov
sbb
fdivr
test
inc
aaa
mov
fimuls
xor
jp
out
test
or
xlat
mov
mov
dec
push
cs
inc
roll
sub
cmp
xor
adc
and
sbb
lcall
push
into
mov
mov
fsubs
stos
shll
sbb
movsl
push
dec
jnp
adc
pusha
inc
fdivrl
cmpsb
lods
in
dec
std
pop
push
fsubrl
or
mov
repz
aaa
aaa
adc
gs
sub
sti
mov
subl
xchg
dec
pushf
sahf
js
sub
or
mov
repz
pop
sub
jecxz
fadd
push
push
mov
fwait
jnp
fsubrl
xchg
scas
loopne
out
bound
fistps
and
sar
loope
repnz
adc
outsb
adc
mov
mov
xchg
movsl
or
repnz
cli
sub
add
pop
or
iret
sub
pop
out
aas
mov
jl
movsl
fistl
imul
hlt
movsb
dec
lcall
push
xor
and
test
mov
mov
out
mov
sarb
mov
mov
fadd
push
in
jp
inc
stos
mov
sbb
sub
aad
mov
dec
jg
mov
out
jmp
push
cmp
xchg
cmp
mov
gs
xor
imul
xchg
imul
cs
repnz
test
cmpsb
ljmp
cs
xchg
mov
push
xor
or
mov
gs
mov
cmpsl
movsl
test
cmc
push
jne
add
push
jle
out
mov
loope
mov
cwtl
pusha
inc
adc
adc
jmp
mov
adc
or
ret
inc
adc
popa
les
sahf
in
or
lret
push
mov
cwtl
enter
sub
stos
and
push
rclb
inc
pop
std
push
lcall
inc
lret
push
push
jne
hlt
adc
mov
mov
lock
adc
icebp
adc
jecxz
lods
stc
or
gs
stc
cwtl
test
adc
imul
jns
mov
rol
jge
repz
adc
mov
or
dec
push
or
fwait
cmpsb
imul
xchg
test
jp
jnp
fwait
outsl
mov
mov
and
icebp
rolb
fidivs
dec
push
lea
scas
inc
or
loop
clc
loop
push
cltd
mov
and
sahf
sahf
ret
mov
dec
and
add
inc
addr16
mov
repz
test
adc
sahf
adc
jo
xor
mov
shrb
test
repnz
cmpsb
mov
xchg
sbb
test
scas
mov
repnz
or
push
jp
adc
push
not
dec
data16
pusha
cmpsl
fmull
mov
lods
mov
pandn
das
adc
fwait
push
adc
push
or
lods
adc
in
sub
push
in
mov
int3
shrl
adc
mov
das
cmp
mov
push
fwait
dec
add
insb
int
je
inc
push
adc
ret
push
jp
or
pop
jne
cmp
or
shrb
pop
xchg
push
jno
push
push
hlt
shlb
fisttpll
pop
sbb
cmc
cwtl
mov
push
xchg
xchg
ja
pusha
push
dec
outsl
mov
mov
stos
mov
mov
cmp
imul
xor
jg
std
jmp
dec
mov
imul
mov
scas
cwtl
inc
adc
adc
jns
insb
test
shrl
neg
cmc
loop
xchg
das
or
mov
pop
adc
inc
popa
lea
fistl
stos
std
aaa
mov
in
nop
add
jecxz
adcl
mov
add
repnz
int3
ret
movsb
and
repz
mov
mov
mov
cmp
push
sbb
and
mov
pop
cs
dec
xchg
add
mov
movsb
insb
jb
mov
pop
push
and
in
cmp
cmp
int3
mov
out
jl
push
adc
jno
popf
or
dec
test
std
fldenv
dec
movsl
pop
cmp
out
mov
sub
in
push
sbb
dec
sub
out
push
cmp
xchg
andl
idiv
mov
xchg
pop
xchg
mov
pop
cmp
out
or
roll
pushf
xchg
pop
xchg
loopne
mov
jo
movsb
mov
mov
dec
test
add
stos
lahf
mov
loopne
adc
mov
xchg
cmc
mov
loop
jb
adc
push
scas
mov
xor
popf
cmp
arpl
xchg
pop
cs
cltd
fsubrl
and
gs
dec
xchg
out
xchg
call
rorb
roll
mov
cwtl
stos
add
push
pushf
ja
filds
iret
add
cmp
dec
or
sbb
call
out
clc
mov
mov
fsubl
cmp
fsubl
je
fnstsw
fbld
mov
rorb
mov
mov
adc
push
fmull
femms
imul
or
push
cld
cmp
int3
cmp
adc
xchg
pop
and
add
bound
sub
inc
cmp
ja
lock
lock
scas
and
sub
aas
data16
xchg
mov
sbbb
pop
mulb
push
popf
mov
mov
cmp
sahf
sub
xlat
sti
mov
inc
mov
mov
push
and
shrb
ror
inc
repz
mov
xor
dec
xchg
mov
rclb
mov
js
xchg
add
lret
push
xor
jecxz
jecxz
insb
lea
xchg
lods
or
or
cmp
arpl
je
popf
xchg
jl
push
cmpsl
dec
xchg
insb
sub
into
cmp
mov
inc
or
add
cmp
jne
lock
and
jl
dec
mov
gs
adc
or
add
mov
fsubrl
jle
ret
cld
insl
jbe
insl
or
adc
or
sbb
outsl
std
jnp
loopne
insb
or
push
cmp
clc
gs
mov
inc
mov
cmp
sbb
in
test
lock
aam
les
pop
pop
sahf
cwtl
std
call
cmp
mov
adc
movsb
push
daa
cli
aam
push
lcall
adc
adc
movsb
testl
mov
ret
xor
mov
mov
js
push
adc
jb
sbb
mov
ljmp
shlb
inc
sbb
add
shrl
cmp
push
repz
pusha
add
sti
pop
xchg
jb
xchg
cli
pop
inc
or
movsb
adc
ja
mov
push
ds
in
sbb
insl
jle
mov
or
cld
sbb
out
adc
push
leave
adc
adc
xor
cmp
ljmp
aad
jne
imul
add
ja
imul
or
adc
hlt
mov
stc
arpl
out
xchg
mov
mov
jmp
sub
sahf
ret
push
sub
mov
xchg
xchg
adc
pop
je
xchg
lret
ljmp
pop
jno
sbb
adc
outsb
loope
into
mov
nop
les
faddl
mov
lcall
pushf
cltd
es
pop
pop
dec
adc
lods
push
push
jno
mov
xor
add
adc
icebp
or
fisubs
loope
adc
mov
popf
mov
inc
and
insl
pushf
or
sbb
adc
mov
into
js
inc
out
stc
lods
cmp
mov
pop
ret
hlt
jecxz
dec
or
push
adc
mov
adc
xchg
cmp
aas
or
loopne
test
mov
shrb
xor
in
pop
fisubrs
ja
cmc
sbb
cmc
dec
xor
int
outsl
fldenv
cmp
js
xor
xchg
adcl
mov
pushf
pop
pop
shlb
add
sub
mov
imul
pop
les
test
mov
mov
frstpm(287
sub
stos
adc
or
js
mov
lea
xor
mov
push
dec
sti
es
push
pop
xlat
adc
xchg
imul
sub
fucomip
xchg
cs
outsb
imul
loope
or
js
adc
mov
jbe
mov
imul
sahf
and
hlt
or
add
lock
sbb
test
sbb
sti
inc
aad
jo
fcomps
das
sbbb
sahf
das
adc
sub
sbb
fst
xor
mov
in
pop
jp
ja
fdivl
int3
fsubr
fwait
lds
scas
pop
adc
fidivl
mov
push
jge
push
xchg
inc
mov
push
xor
pop
inc
loop
orb
mov
sub
ss
dec
sbb
and
dec
lods
in
in
adc
sub
fwait
pop
fwait
std
call
pop
mov
sbb
xchg
rcr
out
scas
and
cmp
sub
jbe
xor
add
data16
roll
xor
push
fmull
fmuls
aam
inc
cld
mov
jmp
icebp
pop
jno,pn
aad
adc
sub
adc
xor
imul
stc
notl
aaa
add
rcrb
lock
cli
cmp
in
ljmp
mov
xor
ja
aas
pop
mov
xchg
hlt
xchg
push
fcompl
jg
mov
jle
shlb
int
lock
mov
aas
xchg
mov
xchg
inc
xor
adc
out
cmc
sub
cmc
adc
xor
repnz
xor
pushf
sbb
insl
push
inc
mov
fnsave
mov
cltd
mov
out
pop
aam
pop
lea
std
sbb
jle
loope
jg
lods
cmp
or
sbb
xor
pop
pop
push
cmp
inc
xchg
pop
les
shrl
xchg
xchg
push
int3
rorl
into
mov
lret
les
pop
aam
inc
xchg
mov
sbb
shl
add
test
dec
loopne
call
pop
ss
inc
pop
and
pop
fcoml
outsb
call
js
push
adcl
inc
pop
sahf
sbb
insb
call
nop
mov
sbb
in
xchg
roll
stos
test
pop
shrl
jb
mov
push
and
shlb
out
out
mov
aad
sub
pop
nop
push
pop
les
lret
pushf
push
adc
es
dec
push
push
jecxz
sbb
mov
leave
js
adc
and
fcoml
xor
out
push
or
sub
dec
mov
xchg
mov
push
or
ds
lcall
cmp
push
test
xor
push
fists
cwtl
jo
out
js
pop
sub
test
lcall
mov
push
ja
notb
lcall
or
jg
cwtl
adc
fnsave
addr16
pop
out
and
sbb
adcl
in
sub
or
lahf
inc
int3
stos
out
cmp
cmc
mov
int3
sub
pop
adc
loope
lcall
shl
adc
add
lock
jo
cltd
fs
and
adc
mov
inc
mov
adc
push
stos
iret
inc
pop
sub
sbb
push
repnz
pop
out
mov
lock
mov
iret
pushf
and
popf
mov
mov
cmp
flds
or
mov
mov
jns
add
leave
movsb
fisttps
jae
sbb
xchg
mov
lods
test
pop
sub
fisubl
lret
aad
or
rolb
push
mov
popf
push
lcall
int
push
cwtl
pushf
jbe
adc
adc
push
push
adc
addr16
cmpl
shll
xchg
mov
loope
cmc
mov
xor
push
in
in
dec
sbb
mov
xor
shl
pop
int3
scas
jns
add
mov
sub
daa
dec
xchg
popa
add
or
push
ljmp
int
lock
xlat
cwtl
mov
stc
cmp
cmp
mov
xorb
and
mov
cmc
adc
add
leave
cwtl
and
mov
xor
inc
xchg
icebp
mov
jb
aad
mov
test
or
mov
test
in
subb
add
loope
add
lret
mov
stos
mov
add
lret
adc
mov
or
shlb
int3
std
popa
xor
jmp
int3
stc
popa
aaa
int3
sti
popa
cmp
cmc
popa
cmp
cmp
int3
repz
or
movsl
and
stos
xchg
ljmp
sub
in
sub
out
arpl
loope
das
or
mov
push
adc
mov
ret
mov
pop
sub
push
sub
mov
jge
rolb
rolb
popa
mov
repz
out
add
out
adcb
repz
push
into
enter
addb
sub
inc
add
std
daa
fstl
sbb
xchg
dec
in
xor
lret
pop
mov
sub
movsl
pushf
sbb
fisttpll
push
cltd
push
frstor
nop
test
mov
je
stos
in
xchg
push
adc
lret
pop
in
push
add
fiadds
cwtl
dec
into
divb
cmp
push
movsl
push
test
dec
aad
sbb
dec
xchg
cmp
mov
sub
sbbb
cwtl
ror
dec
xor
or
mov
or
je
sbb
jl
mov
push
js
mov
pop
jns
jl
arpl
sarl
outsl
push
ja
sub
loop
xchg
enter
pop
xchg
bound
adc
push
outsb
mov
xor
icebp
sub
mov
imul
inc
ret
jp
loope
push
jne
rcrb
in
mov
mov
mov
ret
pop
lea
lds
out
arpl
int3
fistpll
sbb
push
aaa
cmpsl
pop
cmp
mov
mov
mov
jle
mov
xchg
rclb
lods
int3
mov
mov
ljmp
sbb
jns
mov
sbbl
dec
test
sub
inc
or
jns
mov
xchg
shll
lret
cmp
pop
mov
inc
test
xor
ret
shrb
jns
js
repnz
pop
movb
pushf
je
jo
addl
add
add
stc
dec
dec
add
ds
scas
mov
mov
and
lods
jnp
ds
enter
int3
xor
mov
jnp
mov
jns
inc
dec
sbb
addr16
xor
mov
std
in
movsb
pop
push
leave
in
lret
cmpsl
enter
and
sbb
push
lea
jae
cltd
xlat
push
xor
jp
mov
data16
dec
popa
fs
stos
roll
outsb
jg
inc
xchg
jb
sarb
stos
shll
js
lahf
jae,pn
or
sbb
mov
in
fs
add
add
cwtl
cmp
push
les
mov
mov
pop
dec
jo
shlb
scas
shr
xchg
ret
insl
xor
in
push
dec
xchg
imul
mov
stos
out
ret
cmp
ds
into
clc
mov
scas
xlat
xchg
in
sbbb
add
pop
shlb
jnp
aad
jne
pop
mov
mov
add
jne
test
rcrb
icebp
mov
je
unpcklps
adc
fiadds
adcl
dec
add
scas
test
data16
jne
in
mov
and
xor
call
in
lret
ss
xchg
cmp
mov
ror
sbb
push
sub
lea
fsub
push
or
rolb
inc
lret
icebp
call
adc
or
and
out
rclb
pop
in
jnp
aam
sub
enter
and
popa
movsb
push
xchg
scas
jp
es
fs
in
int
cmp
pop
test
jmp
push
dec
push
cli
adc
pop
jno
out
xchg
hlt
rcrb
loop
dec
jmp
adc
push
mov
sub
xchg
cld
xchg
repz
in
lock
dec
jbe
xchg
out
xor
cwtl
je
jo
adc
mov
pop
dec
test
sub
js
int3
and
pop
iret
pop
out
les
jmp
cltd
fcmovbe
ljmp
sub
push
push
sub
pushf
mov
aas
popf
ss
cmp
ficoms
mov
imul
cli
pusha
test
mov
js
push
dec
mov
cwtl
mov
nop
cmp
lahf
pushf
lds
mov
xlat
lods
je
negb
loop
xor
cltd
cmp
test
jmp
mov
mov
scas
inc
pop
sti
lock
jns
cwtl
lret
dec
sbb
mov
aaa
mov
cmc
dec
pop
orl
mov
test
insb
dec
cmp
cmpsb
push
dec
scas
pop
outsb
jb
add
sub
enter
push
xchg
fsub
mov
je
fimull
mov
test
xchg
popf
adc
and
mov
jo
insb
test
and
in
mov
hlt
aad
lea
aaa
pop
call
push
hlt
mov
dec
fadds
test
bound
into
xor
inc
mov
mov
jle
dec
in
pop
dec
mov
add
scas
je
lds
xchg
sub
jno
inc
cmp
mov
je
iret
jl
dec
jae
lcall
shrb
adc
call
loop
cmp
imul
mov
xlat
jno
pushf
loop
xor
sbb
mov
xchg
in
mov
jmp
pop
jl
adc
orl
mov
mov
pop
aas
or
jne
movsl
icebp
push
jge
imul
xor
cwtl
dec
push
movsb
sbb
cmp
ljmp
js
ror
insl
dec
inc
xchg
js
lahf
xchg
dec
mov
push
ljmp
repz
push
mov
sahf
fistl
or
jnp
push
or
out
mov
out
lahf
and
push
add
shr
ficompl
mov
push
fwait
cltd
mov
fidivrl
cltd
jo
fisubrs
sbb
cmp
xor
xor
xchg
sbb
or
fwait
and
pushf
scas
sbb
cmp
pop
and
sarb
dec
mov
sub
adc
movsb
sub
push
call
fdivl
jno
out
or
inc
xor
push
cmp
aaa
xor
mov
jo
push
aas
or
call
sub
push
stos
nop
mov
sbb
lds
push
sbb
test
repnz
lcall
add
loop
cmpsl
dec
sub
pusha
leave
sbb
cmp
push
and
push
mov
add
pop
jmp
stos
pop
pop
push
adc
pop
push
or
jo
aam
add
adc
loope
add
add
cmp
or
sbbb
imul
pop
sahf
or
pop
fsubrp
sub
movsl
lock
inc
sti
shufps
push
addr16
jns
xchg
mov
mov
mov
iret
cmp
call
push
add
cmpsl
pop
imul
dec
mov
xchg
hlt
rcrl
inc
and
jmp
dec
pop
jae
jmp
dec
out
mov
in
cmpb
cmc
dec
fucomi
cmp
std
les
loop
sti
lea
daa
pop
shlb
ja
lret
stos
out
fimuls
or
in
cmp
aas
xchg
sti
sahf
test
inc
repnz
adc
insl
xchg
xchg
pushf
sbb
mov
dec
mov
push
cmp
ja
jae
pop
push
and
xor
scas
daa
dec
cwtl
xor
push
icebp
jmp
mov
sub
xor
inc
repz
xchg
arpl
lret
hlt
es
leave
mov
sub
test
jnp
test
mov
cmp
sub
dec
pop
cmp
xchg
aas
cmp
and
aas
xchg
sub
add
push
sub
je
mov
shl
dec
dec
xchg
ficompl
xor
in
cmp
jne
mov
dec
mov
xor
dec
sbb
roll
push
cli
and
rorb
loop
dec
xchg
out
repz
sbb
cmp
mov
jl
icebp
lret
inc
dec
add
pop
dec
add
movsb
lea
ljmp
out
mov
add
jle
xchg
mov
imul
int
xor
out
loope
enter
out
cmpsl
mov
inc
inc
ljmp
test
clc
jne
xchg
push
mov
ljmp
mov
cmp
test
scas
lcall
fldcw
out
sbb
xchg
or
cltd
inc
push
xchg
addr16
mov
mov
scas
imul
dec
push
mov
fnsave
add
repz
or
pop
sub
scas
shrl
xchg
lahf
arpl
and
dec
lcall
sahf
mov
push
push
sub
clc
and
jmp
and
aas
loopne
jnp
xchg
lods
pop
mov
insb
push
inc
mov
mov
push
stos
outsl
in
inc
dec
mov
inc
xor
pop
in
fistpl
imul
mov
cmc
sarl
jmp
inc
jmp
dec
shrb
sub
shl
in
xor
ret
mov
sbb
nop
jne
mov
and
add
fs
hlt
repnz
lret
sub
sub
inc
call
pop
jecxz
mov
test
aas
xor
stos
call
mov
pop
mov
mov
pop
or
test
sarb
fdivs
lea
jmp
jge
mov
xchg
nop
emms
jb
xchg
cmp
dec
rclb
rcrb
mov
sub
mov
mov
xchg
xchg
outsb
cmp
pusha
and
mov
xchg
lret
outsl
cmp
hlt
xchg
hlt
jnp
in
mov
dec
jne
test
xchg
mov
out
popa
xchg
dec
xlat
call
jmp
cmp
push
push
leave
sbb
aad
into
or
js
aam
ljmp
inc
jge
pop
loope
xor
sbb
fs
std
icebp
pop
cwtl
je
faddl
sti
mov
inc
sarl
mov
pusha
popf
stos
and
imul
push
call
inc
or
repnz
inc
pop
or
dec
dec
outsb
push
js
cmpsb
mov
mov
sbb
mov
fisubl
icebp
imul
mov
xorl
jge
nop
cwtl
mov
hlt
insb
subl
mov
daa
shrb
dec
xchg
and
jmp
fisubl
push
out
mov
add
mov
jnp
or
mov
and
shrl
in
das
mov
movsl
mov
cld
lds
xchg
jne
inc
lea
out
adc
lea
push
les
dec
roll
adc
dec
into
add
repnz
push
pop
dec
xor
dec
pop
pusha
mov
or
scas
and
outsb
dec
lods
jp
test
and
insl
sub
mov
fisttps
cmp
jg
std
test
pop
int
xor
push
movsb
and
stos
xchg
mov
jne
sti
aad
xchg
xchg
xchg
fs
pop
repnz
es
sub
jp
mov
cmp
les
aam
adc
std
fiadds
cmp
sahf
add
aas
cmp
and
jmp
jmp
mov
dec
mov
mov
xlat
rcrb
lret
inc
push
loop
sub
mov
call
jb
jb
sbbl
xor
hlt
cmp
jmp
mov
jecxz
mov
jno
xchg
shl
xchg
pop
xchg
jne
mov
inc
subl
mov
arpl
sub
xor
push
fimuls
jge
mov
icebp
and
lcall
aas
in
mov
or
mov
pop
repnz
pop
jg
pop
bswap
dec
test
jecxz
inc
lods
lahf
inc
imull
repz
add
cmp
dec
shlb
cmc
and
mov
dec
xor
pop
mov
inc
lods
jo
jae
jg
inc
lcall
lret
inc
push
sbb
fnstsw
adc
lret
lock
and
and
xchg
xor
cmp
mov
xchg
push
push
dec
ljmp
sahf
in
inc
enter
fstpt
in
push
or
jge
push
add
add
js
or
imull
and
cmpsb
cmp
xor
pop
mov
into
jl
rolb
cmp
pop
cmp
xor
loope
mov
jno
sub
push
lea
xor
lret
aam
mov
enter
xor
mov
inc
sub
push
stc
xchg
adc
lahf
insl
enter
arpl
fistps
mov
mov
inc
adcl
mov
and
xor
sbb
int3
push
mov
mov
mov
and
ja
das
std
xchg
sti
cwtl
popf
jl
out
mov
inc
dec
in
std
dec
nop
mov
ret
mov
push
mov
xchg
push
out
xchg
pop
in
jns
sub
stc
mov
out
xorb
loope
push
mov
pop
jg
mov
push
js
repnz
push
ret
cmp
push
mov
inc
mov
into
notb
mov
leave
insl
or
inc
push
push
js
loopne
mov
lea
nop
xchg
cmpsb
cmp
enter
repz
cmpsl
ret
imul
stos
push
fs
fs
pop
cwtl
sub
test
or
clc
mov
mov
xchg
push
and
das
jl
lods
fstl
ret
in
es
dec
loopne
adc
stc
jo
adc
or
test
stc
adc
out
cmp
in
int3
jns
xchg
xchg
dec
inc
fs
nop
dec
add
xor
mov
inc
pop
sub
cmp
pop
push
in
xchg
sti
inc
pop
pop
xchg
or
mov
stc
mov
xchg
sub
adc
fwait
xor
mov
mov
arpl
bound
arpl
stc
sar
pusha
sbb
push
xchg
int
jbe
int
xchg
xchg
dec
xchg
push
pop
lock
pop
mov
xchg
fldenv
fwait
sarl
loopne
cmc
xchg
sbb
ljmp
sahf
or
xlat
popa
dec
mov
lret
cli
cmpsl
sub
je
fwait
jle
mov
mov
gs
jnp
inc
pop
mov
add
jo
push
dec
xchg
add
call
ss
pop
hlt
pop
lahf
repz
out
lret
shrb
dec
das
test
xchg
mov
in
xchg
mov
mov
xchg
in
cmp
out
mov
fimull
add
ds
sub
push
imul
lcall
mov
daa
and
jmp
xor
push
xchg
mov
and
daa
add
xor
mov
sarl
sbb
cmpsl
sub
cltd
popf
push
cmp
notb
mov
shl
mov
es
xchg
in
xchg
inc
xor
lcall
test
cli
mov
movsb
mov
fiaddl
and
lret
loop
test
cmpsb
roll
and
in
mov
and
pop
cmpl
xchg
cmc
or
pop
pop
out
andb
or
push
mov
insl
imul
lods
dec
fwait
and
sti
pop
mov
xchg
adc
xchg
xchg
cwtl
dec
fstpl
dec
xor
out
inc
add
cmp
mov
outsl
push
cwtl
into
push
out
mov
pop
call
test
jo
dec
sub
int3
and
hlt
jge
shlb
xchg
test
inc
add
adc
mov
sub
push
std
lret
inc
xchg
jg
mov
push
jmp
pushf
pusha
into
sub
lahf
xchg
in
mov
cltd
and
test
push
push
std
push
push
les
mov
adc
mov
cmc
out
push
mov
loop
jmp
nop
out
sub
xchg
in
cmp
mov
sbb
out
pusha
push
movsb
out
stos
dec
out
into
push
add
ss
aad
sub
lds
shll
ja
sti
pop
cltd
jo
cld
fwait
adc
out
xchg
pop
orl
cmpb
loopne
push
xchg
in
mov
ja
sbb
lods
out
adc
mov
xchg
push
in
jbe
jle
xlat
loopne
dec
pop
cltd
in
pop
sahf
pop
and
loop
jle
sub
adc
mov
into
add
inc
add
jg
push
jecxz
inc
lock
jg
fcoml
clc
xor
stc
mov
stos
clc
mov
fadd
mov
sahf
shlb
pop
adc
adc
xor
sub
fstps
cmpb
cmp
lahf
xchg
loop
jae
adc
cmpsl
dec
pop
icebp
aas
repz
fs
in
es
fstps
mov
pop
ss
fdivl
adc
cld
pop
xchg
inc
dec
dec
aaa
jne
jno
cltd
mov
mov
data16
push
fisttps
jb
nop
jnp
push
std
sub
mov
sti
inc
scas
jmp
push
jge
mov
aad
arpl
je
lods
das
jp
mov
js
mov
xchg
jmp
fs
mov
and
test
sbbb
push
lea
fucomp
add
mov
xchg
movsl
repnz
sub
jmp
mov
je
dec
cmp
sub
mov
mov
xor
test
test
test
adc
les
jb
in
mov
fwait
imul
ljmp
loop
repz
ret
stos
inc
dec
cmpsb
or
inc
in
jl
cmp
add
mov
inc
and
sbb
xchg
rcrl
popf
cmp
xor
out
jmp
xchg
dec
lahf
mov
cmp
jns
jge
test
mov
mov
xchg
fldenv
dec
ljmp
mov
sbb
addl
adc
scas
test
push
push
iret
dec
xchg
xchg
ret
in
cs
nop
cmp
sti
push
and
pop
cltd
xchg
mov
js
adc
lcall
xor
into
add
xchg
push
push
mov
imul
xchg
aad
push
cs
xorl
dec
sbb
inc
push
dec
xor
fmulp
pop
aam
int
xchg
xor
outsb
sbb
jae
jg
mov
sbb
push
movsb
lds
dec
mov
mov
jmp
push
inc
jmp
xor
mov
dec
aas
mov
mov
xor
in
mov
in
dec
mov
fisubrl
inc
xchg
sarb
mov
and
or
xchg
aas
cmp
stc
mov
sub
inc
sub
push
mov
jnp
xchg
mov
int
jne
int3
sbb
cltd
mov
sbb
ret
out
es
mov
add
mov
mov
dec
dec
mov
mov
jo
movsb
jmp
sub
mov
addr16
dec
popa
mov
jmp
hlt
add
fwait
mov
and
pop
subb
imul
mov
fsubs
sahf
pop
jne
push
xchg
cli
stc
mov
cmp
fadds
lret
jb
pop
cld
sub
cltd
xchg
cmp
adc
fisttps
or
pop
fabs
dec
imul
cmp
mov
fstpt
push
sbb
mov
mov
frstor
dec
lods
in
sbb
xchg
pop
mov
lret
out
and
cmp
mov
pop
mov
cmp
popa
loope
imul
sub
xor
jns
jge
inc
fstpt
icebp
sub
cmp
sar
ljmp
lcall
lds
dec
xchg
inc
jae
lcallw
cltd
mov
push
pop
cld
out
imul
add
sbbb
stos
fs
int
or
ja
test
push
cmp
push
dec
jns
jae
xchg
icebp
xlat
mov
fisttpll
pop
sbb
rcll
mov
xlat
dec
jp
aas
cli
in
stos
aad
cmp
inc
divb
mov
repz
and
out
cwtl
xor
jl
stos
push
sub
or
push
leave
and
xlat
mov
and
rcrb
sub
je
pop
ds
cwtl
clc
addr16
mov
sbb
push
sub
loop
lods
inc
lahf
add
sub
push
movsl
dec
hlt
inc
adc
sahf
jle
outsl
cltd
inc
or
pop
jmp
jl
mov
xor
dec
dec
fcomps
inc
ror
dec
jmp
js
mov
xchg
mov
jo
lret
jle
or
xchg
jl
loop
ret
hlt
mov
push
lea
pop
cmp
lret
push
mov
clc
sub
sahf
cltd
sbbb
inc
enter
cmp
outsl
sub
push
ljmp
push
fcoml
js
ret
mov
pop
dec
bound
ja
jmp
lret
out
sbb
cmc
jl
cmp
or
movsl
jb
jne
xlat
mov
xchg
dec
mov
scas
xor
out
in
pop
cli
test
push
das
cmp
in
test
ficomps
xchg
add
lahf
bound
addb
fsts
cwtl
jp
loope
dec
movsl
mov
flds
push
out
outsl
pop
call
jae
fnstenv
push
pop
fistl
fwait
dec
repz
mov
jns
xor
ds
push
xchg
fsubs
fsubr
and
or
push
sbb
adc
in
ds
dec
sub
imul
xchg
pusha
cli
ficoms
mov
mov
insl
test
stos
xor
lcall
sub
xor
inc
or
xor
mov
inc
cltd
test
movsb
jno
inc
cmovl
push
dec
jl
mov
lret
hlt
dec
repnz
clc
lock
pop
leave
jbe
mov
sahf
cmp
int
rorb
stc
lods
push
lahf
test
push
mov
test
icebp
push
iret
ljmp
or
and
dec
fiadds
cmp
mov
pushl
aaa
mov
or
pusha
mov
cmp
cmc
loop
sub
js
dec
xchg
cld
mov
sub
dec
lods
add
in
pushf
xor
rcr
jg
or
xlat
mov
jmp
imul
pop
xchg
xchg
pop
add
push
cmpsl
and
jl
aaa
and
inc
mov
in
into
sub
cmp
notb
lods
xor
js
adc
mov
xchg
nop
ss
pop
mov
xchg
xor
lcall
pop
jbe
lock
mov
jmp
push
dec
stos
ss
dec
cli
jo
in
mov
pop
xor
subl
push
shrl
aad
inc
jmp
mov
lea
mov
push
aas
mov
inc
add
imul
fisubl
inc
cmp
cli
mov
mov
mov
sub
mov
lock
js
sahf
xlat
imul
cmc
popa
lret
je
repz
jnp
mov
pop
jle
jp
mov
xor
push
and
mov
into
outsb
cli
mov
ja
aaa
mov
sti
xchg
cmp
pop
cmpsb
xorb
mov
cmp
xchg
xchg
sub
xor
rcll
mov
inc
pop
ret
js
addr16
lcall
push
and
xchg
jb
jp
jae
mov
push
inc
mov
mov
sub
add
in
push
bound
les
arpl
xchg
test
pop
rcll
sbb
lcall
cmp
mov
test
pop
sub
sahf
jb
mov
xchg
aad
adc
and
jp
pop
xchg
cli
das
push
or
mov
xor
lcall
stos
lret
adc
or
cmovno
jl
mov
repz
mov
ret
mov
insl
jmp
pop
fnstenv
jne
call
loop,pt
jg
push
inc
ret
imul
ror
mov
out
sbb
xchg
cmp
out
jbe
aad
bound
pop
rorb
hlt
ss
and
mov
cwtl
movsl
push
push
faddp
or
call
pop
addb
sub
clc
cmp
pause
pop
xchg
add
xor
xor
lods
xchg
mov
dec
popf
ss
and
sarb
lret
and
loopne
dec
ret
inc
enter
pop
jo
jne
outsb
mov
inc
repnz
les
push
lock
mov
dec
jne
in
sbb
loop
pop
push
mov
add
jbe
int3
or
xchg
fxch
shrl
jle
sbb
ror
iret
mov
inc
sub
xlat
lcall
sub
adc
mov
ret
dec
in
es
les
ret
jg
or
and
mov
push
mov
out
inc
or
push
add
sub
aas
mov
jns
outsb
pop
aaa
cmp
push
mov
pop
stc
clc
jnp
in
cmp
inc
pop
xchg
inc
xchg
jb
mov
mov
cmp
popf
or
decl
test
jg
sar
mov
sub
add
dec
push
pop
fwait
or
mov
aas
inc
frstor
add
xor
xor
scas
jl
in
xchg
mov
and
es
and
bound
jno
cmp
xor
aad
mov
stos
cmc
and
push
add
fmuls
or
imul
ljmp
adc
scas
xchg
out
sbb
insl
sub
mov
loopne
cli
cmp
mov
add
mov
jo
rorb
out
sbb
mov
loope
pop
out
sbb
loope
movsl
add
xor
iret
jno
imul
jecxz
jp
mov
mov
xlat
cld
mov
add
fisubs
inc
dec
pop
dec
pop
and
shrb
adc
xor
jl
mov
sbb
xchg
jmp
pop
cli
div
mov
lcall
cmpl
xor
xchg
jg
mov
enter
sub
pop
and
rcr
sti
fnsave
add
dec
shr
movsb
shll
jnp
mov
dec
mov
cli
add
mov
sysexit
pushf
mov
nop
adc
sbb
and
dec
jb
mov
pop
cld
sbb
enter
push
dec
stos
adc
loopne
sbbl
into
out
adc
or
mov
test
and
and
lea
cmp
jns
mov
loope
xor
xchg
in
enter
ret
and
cld
xchg
lea
cmp
fidivrl
inc
add
bound
stc
jle
jno
icebp
jnp
addr16
lret
sbb
dec
inc
negl
and
xchg
mov
mov
sub
aad
fcmovnbe
lcall
pop
in
sub
and
ljmp
mov
insl
push
cmp
dec
mov
sbb
imul
mov
mov
cli
imul
iret
add
sbb
xor
pushf
mov
inc
sub
cli
cmp
mov
mov
lahf
push
mov
lods
sub
cmpsl
aad
std
pop
jl
jle
lret
mov
mov
dec
and
push
inc
fisubl
out
popf
push
adc
nop
xor
fcomip
je
pop
jp
mov
subb
inc
push
loope
adcl
sbb
adc
xor
mov
cmp
sub
cmpsl
xor
jae
sbb
ret
jno
adc
xor
ss
pushf
lcall
xchg
inc
pop
jp
mov
in
sub
xchg
pop
js
sahf
add
fcmovu
sub
sbb
jne
ds
jns
clc
sbbb
jbe
jnp
xchg
mov
jbe
mov
ficoml
fisttpl
int
sub
cmp
inc
mov
rorb
loope
movsb
test
push
lds
inc
jo
lahf
dec
fwait
in
or
negb
dec
cmp
dec
jns
jne
les
and
cmpsl
outsl
inc
in
out
mov
sbb
xor
daa
dec
lahf
test
loopne
mov
cmpl
notb
and
mov
cmp
mov
jl
loop
xchg
xor
sub
jno
xor
push
dec
mov
xlat
add
fistps
je
int
sub
mov
jae
mov
pop
xor
sahf
pop
sti
mov
repnz
ret
jo
test
testb
jae
mov
inc
sahf
add
int3
xchg
sub
push
cld
icebp
inc
dec
lds
xchg
leave
mov
lods
jecxz
sbb
movsb
movl
aaa
notl
xor
movsb
xor
cltd
clc
je
jne
mov
lods
nop
popa
adc
dec
pushf
mov
jb
mov
mov
jae
lds
inc
shrb
cmp
push
sub
sbb
lahf
cmp
sarb
xchg
sub
popa
jl
mov
stos
jp
jge
bound
pusha
jmp
jnp
into
lret
push
bswap
xchg
aad
mov
xor
inc
js
xchg
push
imul
mov
pop
popa
and
sbb
xchg
dec
inc
mov
mov
dec
clc
jne
cmp
mov
cmp
cli
mov
in
pop
lret
sub
into
lahf
ja
push
dec
mov
push
sbb
xor
push
stos
jmp
das
sub
lret
fs
inc
xlat
out
imul
push
jo
lahf
out
inc
cmp
aad
mov
or
outsb
fs
data16
dec
sbb
cmpsb
js
loope
fsubrp
inc
pop
fidivrl
adc
inc
pop
push
cmp
cmpl
mulb
js
and
leave
cmpsb
mov
fists
push
scas
sbb
popa
jmp
ret
add
rcrl
cli
test
and
inc
mov
mov
hlt
cmp
xor
cld
push
push
add
inc
mov
add
dec
sub
setae
dec
lea
mov
xchg
and
les
jecxz
fs
in
lahf
add
mov
pop
lock
and
cmp
clc
pop
test
movsb
mov
lret
pop
dec
iret
out
jmp
movb
push
and
cmc
cmp
jp
mov
je
cmc
or
hlt
fsubrs
add
gs
xchg
mov
mov
inc
cmpsb
mov
and
xchg
dec
jb
push
divl
push
pop
sbb
push
push
jmp
fisubrs
in
xchg
rclb
xchg
jge
cli
daa
push
not
fdiv
sar
dec
cld
aad
or
cmp
iret
sahf
fwait
cli
or
mov
dec
ret
jns
sbb
mov
fxch
test
dec
inc
push
pop
inc
and
ljmp
dec
ret
cmp
add
cwtl
ret
mov
fildll
lods
out
mov
les
movsb
test
xchg
pop
jnp
cmp
sarl
jae
inc
lahf
mov
cli
mov
mov
ljmp
jg
scas
cmc
inc
push
aam
xchg
fisubl
jp
ret
pop
pop
fcomip
pushf
test
and
mov
cmp
mov
xchg
sbb
cwtl
ljmp
lods
jbe
push
stos
xchg
xlat
sub
sub
mov
out
mov
inc
xor
mov
cmpsb
cmpsl
pop
xor
cmp
fcomps
test
and
sti
adc
inc
mov
push
jp
xor
xchg
jp
sti
mov
test
test
adc
lahf
sub
pop
dec
into
cmp
cmpsl
mov
dec
cmpsb
sbb
pop
inc
imul
inc
and
xor
sbb
outsb
mov
add
out
pop
cmpxchg
mov
mov
in
push
mov
sahf
cmp
mov
rorb
or
push
stc
and
lret
mov
cmp
mov
imul
sbb
xchg
cmpsb
cmp
nop
rolb
inc
scas
sub
push
enter
aaa
ds
add
inc
mov
add
and
fisubl
repnz
repnz
je
in
iret
cmp
pop
pop
adc
sti
mov
out
popa
mov
ret
sbb
in
sub
xchg
stos
xchg
cmp
jmp
cmp
je
fdivrs
mov
loopne
dec
bound
je
adcb
mov
repz
mov
push
jmp
cmpl
fdivr
push
mov
hlt
mov
repnz
cmpsb
jns
imul
push
pop
out
pop
aam
andl
out
mov
rclb
loopne
fadds
icebp
add
push
cld
sbb
ljmp
lock
jae
leave
sbb
dec
subb
jnp
ds
cmpsl
jg
and
push
andb
sahf
jp
scas
mov
lret
cmpsb
xchg
icebp
ljmp
jae
lcall
fimull
shlb
cli
push
pushf
repz
test
inc
and
dec
lret
push
inc
cli
sbb
xchg
arpl
sbb
jl
mov
pop
lahf
sub
push
jae
lods
addr16
out
cmp
sti
not
stos
pop
xor
fidivl
pop
or
pop
shll
ja
push
jbe
jb
adc
imul
xchg
imul
cmp
jae
in
leave
lahf
pop
outsl
add
lea
pop
push
mov
or
call
adc
and
push
or
xchg
or
mov
mov
pop
fisttpl
jae
int
sub
aam
add
inc
push
pop
mov
orb
std
adc
loope
jbe
dec
test
cwtl
repnz
inc
inc
sbb
ss
jecxz
jno
lahf
dec
cld
ret
mov
lahf
mov
add
out
inc
inc
xchg
mov
or
out
xchg
test
int3
push
xor
test
jb,pn
or
rcl
ret
adc
addr16
ja
lods
jle
int
sub
cmc
les
ret
mov
js
xchg
mov
out
sbb
jp
lahf
shrl
icebp
cwtl
lret
mov
xchg
in
add
pop
stos
sub
pop
jns
mov
mov
jbe
mov
add
or
lea
loop
lea
adc
adc
scas
xor
inc
dec
into
cmp
or
pop
cmp
and
or
cmc
out
pop
cmp
in
xor
bound
mov
lods
nop
adc
js
iret
aaa
pop
es
dec
loopne
std
dec
arpl
inc
and
pop
push
mov
xchg
jne
pop
xlat
mov
lret
inc
daa
xchg
psrlq
jns
push
test
std
fs
jbe
xchg
test
ljmp
xchg
cltd
movsb
pop
test
cltd
dec
dec
sti
test
sub
sbb
js
int3
imul
imul
call
mov
out
sbb
dec
jbe
lret
stos
sbb
out
inc
shlb
mov
dec
or
rolb
fstp
adc
pusha
push
lock
pop
stc
out
loop
jo
xchg
arpl
and
mov
les
aaa
nop
xlat
inc
inc
push
repz
push
mov
fwait
aad
cmpsb
jmp
jp
xor
lods
xchg
mov
repz
jmp
cwtl
mov
push
pop
pusha
clc
push
out
mov
push
and
repz
in
lea
inc
sarl
xchg
arpl
call
ret
push
jne
inc
inc
sub
mov
daa
fcmove
push
les
fcmovnbe
and
mov
adc
dec
loopne
rorl
pop
mov
cli
imul
pop
int
jnp
sbb
adc
mov
cmp
xchg
xor
mov
sti
dec
dec
sbb
ljmp
push
rdtsc
je
js
mov
mov
inc
jmp
clc
sub
jg
push
gs
lock
dec
enter
mov
movsl
jne
pop
dec
lock
dec
cmc
inc
je
lret
push
add
fdivs
fsts
call
dec
xor
fildll
xor
das
adc
inc
fiaddl
ret
pop
sub
cld
or
clc
xlat
sub
loopne
fcomps
cltd
pop
mov
fisttpl
dec
push
dec
sahf
insl
mov
jno
int
push
js
cmc
mov
repnz
in
xchg
lods
xor
mov
cmc
cwtl
sbb
dec
inc
adc
dec
push
test
js
jo
lock
mov
cmp
insl
mov
pop
test
iret
push
mov
sub
push
add
jns
xchg
hlt
lahf
out
jecxz
icebp
loope
jl
sub
fsub
mov
into
daa
lods
adc
filds
in
mov
dec
inc
call
xchg
inc
pop
cmp
inc
and
sub
cmp
loopne
inc
fidivl
addr16
jge
je
push
lret
xchg
push
xchg
xor
clc
es
repnz
inc
and
sbb
sbb
lods
dec
call
or
push
sbb
fnstsw
cmp
jle
push
add
push
pusha
imul
movsb
aad
xor
bound
out
fldl
movsl
pop
jae
mov
cmpsb
fdivrl
mov
xchg
cmp
inc
jae
cmc
jo
xor
inc
movsb
dec
ret
jmp
sub
pop
subl
cmpsb
jbe
and
es
cmp
xchg
push
int3
dec
push
lret
jnp
repnz
lods
add
jns
inc
int
pop
aaa
mov
dec
mov
push
or
mov
pop
fsubl
ss
sub
mov
mov
imul
inc
inc
and
or
lods
mov
jl
hlt
push
lock
sbb
xchg
divb
std
fnstenv
or
int3
xchg
rcrb
in
movsl
arpl
xchg
imul
pop
cld
and
lret
pop
dec
loope
push
add
inc
push
adcb
movsb
mov
repz
std
sub
out
xchg
cmp
ljmp
mov
test
push
inc
jnp
add
lock
imul
jno
xchg
dec
pop
pop
cli
sbb
push
mov
dec
push
out
cs
cmc
mov
dec
repz
in
rorb
cld
cli
pop
cmpsb
cmpsb
mov
and
shll
dec
pop
les
xchg
cmp
loop
xchg
cltd
push
dec
add
lea
push
sbbl
mov
mov
mov
cli
push
push
int3
fbld
sar
and
cmp
out
dec
jb
or
dec
adc
cmp
jp
flds
dec
popa
fadd
and
xlat
mov
and
es
gs
jp
aaa
nop
xchg
inc
fiaddl
insb
sbb
pop
xchg
cmpb
loop
mov
mov
inc
lret
or
loop
adc
push
lds
insb
inc
dec
mov
sbb
dec
leave
paddw
int
xchg
test
jecxz
and
sub
aad
mov
in
scas
insl
push
je
lret
pop
push
adcb
mov
jb
or
outsb
in
addl
adc
ss
clc
repz
lock
push
in
mov
pop
pop
pop
cli
cmpsl
subb
movl
pop
cli
leave
mov
push
pop
flds
xchg
push
and
ljmp
loop
or
push
mov
jbe
scas
out
jmp
jl
sbb
xor
aaa
leave
roll
cli
pop
xlat
call
mov
cmp
shll
jne
out
xchg
xchg
imull
dec
sub
dec
dec
add
icebp
xor
data16
scas
pop
in
dec
mov
adc
mov
push
lea
jb
lret
lods
push
gs
orl
test
out
movsb
aaa
imul
mov
xchg
mov
dec
or
imul
cmp
mov
xchg
jecxz
mov
mov
jecxz
inc
or
mov
pop
in
cmp
stos
pop
mov
push
leave
das
lds
sub
jne
dec
lret
inc
loope
push
or
aaa
mov
xor
aaa
pop
xchg
fcmovbe
fxch
xchg
inc
test
lret
dec
imul
in
dec
sub
test
daa
aad
addb
cmp
sub
scas
push
mov
xchg
push
aam
xorl
les
mov
xor
pop
out
cmpsb
sub
fs
loop
loope
cmp
xchg
jmp
sbb
std
ljmp
repnz
or
inc
lods
jae
pop
mov
outsl
arpl
pop
hlt
inc
mov
xlat
mov
sti
gs
pop
xor
les
cwtl
lahf
sti
shrb
xchg
xor
xchg
dec
inc
ret
dec
test
mov
repz
and
test
dec
pop
lods
notb
loopne
fadds
out
dec
lods
pop
mov
sti
cmpsb
cld
popa
xor
xchg
inc
orl
repnz
jmp
mov
adc
and
loopne
pop
jecxz
hlt
icebp
xchg
jne
cltd
dec
sub
hlt
jns
sbb
cs
adc
adc
pop
dec
mov
test
adc
ret
dec
push
mov
cmp
adc
inc
cli
jbe
lock
lock
xor
xchg
jbe
mov
subl
cltd
stos
adc
sbb
or
dec
inc
rorb
js
cltd
xchg
sbb
fs
cli
and
inc
jb
movsb
push
sti
hlt
xor
xor
add
inc
scas
cwtl
push
addb
xchg
aas
jae
push
add
out
add
cltd
inc
xlat
jnp
and
push
andb
xor
in
push
mov
adc
fcomps
xchg
fstl
clc
data16
adc
push
in
dec
pop
or
lock
mov
dec
push
sahf
loope
outsl
call
sub
stos
test
std
ja
iret
imul
or
test
cmp
dec
or
adc
dec
test
in
sbb
lods
imul
lahf
dec
cmc
bound
fs
lock
call
clc
scas
adc
dec
and
imul
pop
enter
push
cmpsb
jb
fistl
loop
and
popa
fwait
sub
cmp
pop
adc
mov
fcmovne
nop
mov
xchg
push
xchg
cmp
out
hlt
jle
sbb
xor
sbb
out
test
shrl
cmp
popf
push
ret
dec
fadd
int
pushf
pop
enter
push
test
fbld
fwait
nop
shll
pop
push
or
and
lahf
pop
pop
ret
je
ficomps
je
aaa
push
aad
cmc
push
in
jno
pop
inc
cwtl
push
es
or
stc
xchg
mov
jae
or
mov
jp
sub
out
inc
and
pop
jnp
sbb
lea
fs
iret
mov
stc
arpl
adc
mov
inc
jo
dec
andb
jb
cmp
pop
jg
les
and
xchg
stos
cwtl
movsl
mov
push
dec
xchg
in
jno
mov
loopne
pop
push
out
push
lock
xchg
test
ds
xchg
add
icebp
xchg
xchg
add
not
add
push
xchg
push
aam
mov
sti
mov
and
xor
les
dec
adc
cmpsl
in
pusha
mov
inc
cwtl
imul
dec
flds
push
gs
cltd
lock
inc
loope
lods
jle
jne
cmp
dec
dec
dec
leave
mov
dec
push
xchg
xor
ficompl
ds
push
jae
jl
lret
sbb
cwtl
sub
xorb
test
and
clc
repz
pop
aas
push
push
mov
fs
into
xor
mov
sbb
inc
das
sub
iret
ret
pop
sarl
push
pop
fnsave
inc
add
xor
mov
sub
cmpsb
nop
rorl
cmpsb
movsb
xor
dec
in
xchg
push
dec
add
sub
test
mov
sub
lret
xchg
mov
mov
dec
clc
jge
ret
je
or
pop
adc
jbe
jg
icebp
in
or
out
push
jo
fadd
cmp
xchg
fxch
xchg
and
es
or
rep
or
call
push
xor
out
sti
adcb
addr16
fmuls
jns
mov
mov
das
jecxz
mov
mov
cltd
ficoml
mov
sub
movsb
insl
test
data16
or
fistps
lret
in
push
mov
mov
jge
pop
add
lret
add
xchg
mov
addr16
pop
dec
jns
jmp
mov
lock
jo
fildl
out
inc
setns
push
or
inc
out
sub
mov
push
dec
xchg
xchg
popf
push
pop
aaa
push
xchg
lcall
cwtl
adc
cli
test
cli
idivb
sub
mov
push
adc
out
and
imul
in
lret
imul
jb
loop
aad
mov
in
out
mov
hlt
out
outsb
pushf
nop
pushf
dec
fcomi
jbe
andl
inc
inc
dec
ljmp
ss
sti
push
and
xor
dec
xor
in
sbb
pop
arpl
cmpsl
pop
sub
inc
ss
xor
in
mov
lock
cmovbe
mov
dec
ds
lea
inc
lahf
dec
dec
imul
push
inc
cmpsl
or
cmp
push
xchg
jno
sti
aaa
or
fwait
iret
cltd
pop
cmp
lret
push
cs
add
pop
mov
dec
jnp
mov
add
aad
bnd
cmc
popl
pusha
xchg
cmp
cmp
inc
cld
mov
jmp
sbb
mov
or
pop
cmp
insl
or
inc
movsb
xchg
stos
lods
inc
mov
icebp
mov
pop
out
icebp
icebp
es
cmpsl
xor
cltd
inc
jne
faddp
cwtl
ss
in
jne
jmp
and
cmpsb
sti
cmp
cmpps
notb
out
fildl
imul
jnp
and
adc
mov
ljmp
lret
pop
sbb
addr16
mov
jmp
out
cmp
inc
cmpsb
pop
pop
insb
aaa
jecxz
sub
jl
cwtl
fisttps
test
daa
out
decb
mov
add
mov
mov
cmp
push
cmp
pop
add
push
lret
and
lds
lods
push
xchg
in
add
lcall
inc
jl
jecxz
cltd
filds
mov
sub
and
xchg
ficomps
ret
sub
loop
mov
addl
outsb
dec
movsb
stos
mov
pushw
loop
bound
das
leave
inc
and
xchg
in
lock
pop
mov
mov
and
scas
negb
test
mov
dec
mov
in
lea
stc
adc
gs
and
mov
data16
psadbw
lds
lock
rorl
pop
dec
cmp
fidivrl
std
sbb
pushf
pusha
xchg
popa
sub
outsb
stos
jl
push
into
inc
dec
jo
lret
out
pop
mov
call
or
movsb
int
lea
inc
push
icebp
xchg
cmp
je
dec
mov
lret
test
pusha
fbstp
call
or
fistl
mov
or
in
dec
lock
lods
divl
jg
lahf
test
xchg
mov
movsb
dec
rolb
lods
xchg
mov
mov
push
inc
cmp
mov
cmp
movsl
inc
mov
dec
cmpsb
or
rclb
or
mov
fucomi
and
add
cwtl
aaa
adc
xchg
movsb
jmp
in
iret
add
adc
mov
push
jmp
jecxz
dec
lret
inc
xor
mov
fs
fs
xorl
repnz
add
imul
cli
ljmp
int3
push
out
fiaddl
mov
push
adc
jp
in
lcall
mov
push
in
jmp
ret
jne
pop
mov
jne
js
movsb
cmp
dec
xchg
pushf
sub
imul
lods
inc
call
ret
jno
fstpt
lds
fwait
cli
test
cwtl
and
and
mov
test
or
fs
in
pop
mov
pop
les
dec
es
mov
dec
sbbb
lcall
pushf
test
mov
jg
pop
lock
movsb
loope
outsb
in
add
lea
adc
xlat
aaa
and
cwtl
push
pop
rolb
fildll
movsl
imul
sbb
cwtl
sti
lret
dec
sbb
outsb
xchg
inc
dec
lcall
faddp
dec
outsb
push
push
cli
dec
subl
pop
ret
xlat
jp
push
xchg
xchg
in
lahf
repnz
inc
movsb
test
in
test
arpl
push
mov
out
push
int
mov
test
mov
ljmp
cmc
ret
insb
lahf
aas
imul
and
inc
inc
imul
les
fwait
jg
scas
dec
xor
xlat
cwtl
xchg
ret
in
iret
das
push
jae
fisubrl
push
pop
or
mov
add
shr
xchg
inc
mov
xor
xor
xchg
pop
in
sub
nop
mov
arpl
out
mov
in
lret
cmp
push
lock
loop
mov
stos
js
cmp
cmpb
dec
inc
adc
test
nop
in
shl
daa
mov
mov
ss
push
xchg
mov
pop
ss
cmp
out
leave
cmp
test
dec
sti
cli
pop
lahf
test
lret
adc
push
sti
mov
mov
cli
mov
test
aam
jns
outsb
pop
mov
aad
jns
sub
xchg
mov
pop
stos
jne
loop
das
addr16
cmp
cmp
decb
stc
mov
mov
outsb
cmp
outsl
insl
repz
das
in
hlt
fwait
mov
and
push
iret
or
or
jl
xor
enter
push
pop
inc
adc
mov
dec
imul
cmpsl
es
std
out
jo
xchg
xor
daa
xor
adcl
lods
imul
jg
sbb
stos
mov
lods
sub
cs
ret
loop
stos
push
or
sub
dec
or
lahf
xor
std
cmp
lahf
mov
iret
insb
fimull
daa
outsb
add
in
adc
aaa
mov
jp
or
stc
or
mov
inc
push
insl
clc
push
add
adc
fcompl
andl
ss
fmuls
cmp
sarl
sbb
sbb
dec
jmp
mov
and
jns
jecxz
loope
incb
mov
dec
sub
push
dec
negl
inc
subb
outsb
cmp
or
fstpt
loopne
imul
xor
fcmovnb
and
pop
fwait
mov
lret
push
call
test
into
les
add
push
xchg
jecxz
push
mov
arpl
add
out
loopne
lret
imul
inc
pop
lret
add
das
xlat
lds
addr16
and
dec
movsl
sti
add
sub
fildll
je
arpl
sbb
cmc
in
xchg
and
call
icebp
pop
ss
lds
cmpsl
es
ret
stc
sbb
cmpsb
mov
xchg
sbb
and
mov
movsb
out
xor
sub
jae
mov
push
dec
jmp
sbb
jnp
xor
cltd
push
xor
daa
imul
fisubrl
insl
fstpt
hlt
les
inc
cli
pop
jp
test
fdivrs
adc
xchg
add
push
flds
mov
sahf
lahf
push
dec
gs
lods
popa
add
xchg
push
rcrl
mov
mov
aam
repnz
pop
jl
jecxz
cmpsl
aas
xchg
loop
mov
jns
outsl
push
mul
int
mov
movsb
imull
xor
cmc
sub
insl
add
dec
dec
imul
notl
or
pop
cmpsb
cmpsl
mov
add
jle
add
cmpsb
sbbl
test
pop
inc
fsubs
out
into
add
lret
xchg
lock
repnz
data16
mov
roll
jp
jne
or
daa
add
cwtl
cld
sbb
popa
in
mov
adc
loop
dec
mov
and
inc
sbb
add
inc
fucomi
push
enter
shrl
mov
cmp
push
mov
jnp
andl
fisttpll
inc
fucomip
mov
mov
in
movsb
lret
cmp
sub
adc
sub
je
push
mov
mov
mov
lret
adc
sbb
nop
dec
ds
jecxz
mov
pop
cmc
in
xchg
scas
or
xor
test
mov
jnp
adc
jg
js
adc
movsl
dec
scas
lss
push
sub
xchg
daa
pop
mov
jae
lea
ror
push
or
iret
mov
outsl
test
push
pop
stc
dec
and
aas
xchg
fdivs
jmp
jb
xlat
jge
in
or
dec
xor
call
enter
push
jmp
call
nop
js
fidivrs
adc
je
cmc
inc
iret
ja
clc
dec
scas
pop
lcall
cmc
mov
in
aas
xchg
xchg
jno
cltd
in
les
push
mov
in
mov
stos
movsb
test
scas
icebp
call
imul
cs
push
and
outsb
cmp
fucomi
push
ret
pop
dec
js
sbb
mov
and
je
jg
add
daa
cmp
movsb
jmp
jno
adc
cmpsb
leave
jbe
inc
inc
ljmp
fwait
in
js
xchg
push
push
push
push
lcall
sub
jo
xor
fadd
in
cld
daa
out
repnz
xchg
inc
adc
cli
repnz
sahf
in
inc
jl
das
pop
jmp
nop
sbbl
mov
gs
cwtl
dec
notb
repnz
pop
adc
sub
cmp
les
and
pop
cltd
js
cmp
xor
jmp
fwait
nop
cli
in
scas
and
mov
dec
stos
pop
movsb
add
sbbb
adc
loop
test
je
dec
pop
rorb
inc
into
cld
mov
call
test
inc
dec
inc
lock
mov
dec
imul
jns
push
iret
xchg
xor
test
ljmp
dec
adc
mov
out
mov
data16
scas
pop
fildl
outsl
movsb
mov
fbld
pop
sub
jbe
mov
inc
fsubl
pop
testb
popf
shlb
repnz
aad
pushl
fwait
dec
push
xor
pusha
dec
mov
push
in
pop
sub
cmpsb
mov
xchg
jecxz
jns
and
les
aas
sub
xor
sub
push
push
sub
scas
ficoml
mov
test
mov
jecxz
xchg
xor
mov
lock
lret
imull
sub
in
jae
add
mov
push
and
xchg
loop
rorb
xorl
loope
push
mov
xor
xor
pop
inc
inc
pop
jmp
scas
xchg
mov
psrad
pop
clc
fsubs
push
adc
ds
inc
jecxz
mov
negb
cmp
mov
pop
lock
mov
cmpsl
mov
loop
jmp
cmp
loopne
inc
iret
mov
push
insl
fimull
dec
and
xor
jmp
and
fdivr
je
xchg
cmpsb
push
lcall
test
clc
int
ljmp
in
xchg
mov
inc
outsb
aad
xor
iret
xchg
xlat
dec
pop
add
popa
sub
jne
mov
into
sbb
in
or
and
adc
adc
or
jmp
movl
adc
xchg
push
rolb
popf
push
mov
fidivrs
in
dec
lods
xchg
aad
jae
dec
mov
mov
xchg
push
xchg
push
imul
dec
mov
dec
fsubl
pop
into
xchg
dec
fadds
addr16
insl
es
mov
push
jns
pop
arpl
jp
sub
or
call
int3
mov
jnp
fildl
cltd
pop
jg
xchg
mov
xchg
lcall
lds
daa
dec
xor
inc
and
dec
and
pop
int3
or
js
mov
jns
adcl
popf
pop
in
mov
jb
mov
cltd
fimull
xor
das
inc
cmp
repnz
test
daa
pop
clc
int3
enter
hlt
sub
mov
repnz
xchg
push
jmp
inc
out
repnz
pop
dec
lock
icebp
fsubrs
or
xchg
pop
dec
test
or
jp
movsl
cwtl
add
sbb
push
adc
ss
sub
repnz
jbe
cmp
add
fs
cmp
pusha
jmp
xchg
xorl
xor
jg
test
mov
mov
mov
out
test
insl
mov
aaa
cmp
out
movsb
fildll
dec
call
jb
je
mov
mov
dec
es
mov
dec
push
push
mov
bound
negb
xchg
dec
dec
cmp
aas
clc
into
cmp
pop
xchg
mov
fsub
push
cwtl
in
fs
mov
and
adc
test
xor
cli
cli
cmp
xlat
clc
test
je
pop
test
nop
mov
xlat
cmp
movsl
sub
pop
pop
or
xor
movsb
inc
cld
and
pop
push
adc
mov
fadds
fwait
sbb
loopne
jmp
dec
jmp
xchg
inc
clc
inc
mov
cmpsb
sub
sub
xchg
push
mov
arpl
cmp
inc
jmp
cmp
leave
mov
es
enter
dec
xadd
arpl
cmp
jmp
mov
cmpsb
hlt
or
addl
pop
inc
pop
mov
and
adc
cmp
xchg
mov
fcmovnu
bound
lods
or
fldt
xchg
xchg
loopne
jo
loop
push
andl
jns
fucomip
jae
inc
push
imul
ret
lret
xor
or
pop
bound
fiaddl
cs
cmpsb
icebp
fadds
mov
inc
mov
in
sbb
sub
or
std
dec
dec
repnz
lds
mov
cmp
andl
xchg
in
js
iret
mov
jns
sbb
int
mov
lods
inc
decl
pop
ret
movsl
pop
jb
test
cltd
xorl
out
add
adc
inc
and
push
enter
dec
push
stc
sub
cmpsb
xchg
mov
pusha
call
lret
test
ds
dec
jl
in
or
jmp
in
je
mov
jge
add
xchg
sbb
cmp
iret
incl
dec
mov
or
enter
cmp
sbb
mov
xchg
mov
fs
inc
inc
xchg
mov
inc
sub
mov
push
inc
add
fs
lock
or
mov
shr
sub
pusha
cs
jnp
xchg
in
imul
test
ds
jecxz
sbb
jnp
adcb
lahf
fcomip
repz
insb
jne
mov
cmpsb
mov
loopne
leave
jp
test
xchg
clc
enter
sahf
int
ljmp
aad
jae
mov
cmpsb
fists
clc
xchg
movl
sarl
cs
and
jno
pop
ss
stc
fildl
pop
cmp
repnz
mov
jns
js
push
and
leave
sub
sbb
mov
cmp
and
inc
loope
enter
cwtl
movsb
or
xchg
arpl
fsubrl
je
push
leave
cwtl
cs
out
movsb
jns
pop
and
mov
dec
les
xlat
lea
jmp
mov
mov
mov
cltd
push
push
cwtl
xchg
popf
adc
dec
pusha
test
add
pop
jbe
movsb
es
mov
gs
mov
xchg
and
loope
sti
add
out
popa
push
push
push
or
test
fimull
jg
out
cmp
push
je
hlt
pop
test
into
hlt
sub
aam
ljmp
mov
lds
mov
fdivs
push
dec
std
mov
out
lahf
mov
xchg
xor
cmpsb
mov
or
pop
stc
cmp
aas
jle
adc
movsl
scas
add
fwait
push
mov
ret
push
and
stc
icebp
adc
adc
mov
xchg
push
les
push
or
das
pop
jno
xchg
mov
push
popf
insl
pop
mov
out
mov
popf
mov
popf
push
xlat
out
ljmp
je
lret
add
leave
es
or
mov
into
rcrb
jnp
test
xchg
mov
xorb
inc
ja
repz
push
aaa
js
mov
lret
inc
lods
cmp
stos
daa
jge
aas
jo
in
std
inc
fs
push
add
cltd
jle
sub
mov
or
push
mov
push
push
scas
test
xchg
and
imull
add
xchg
enter
push
mov
movsb
push
out
movsb
dec
dec
test
aam
and
aad
int3
push
xchg
in
jg
test
pop
call
stos
push
sahf
cwtl
pop
pop
out
pop
inc
inc
pop
ret
popl
cs
lahf
jge
loopne
in
inc
sub
xor
mov
iret
fs
scas
inc
fistpll
outsb
mov
cmp
in
and
sub
push
stos
jbe
mov
jns
mov
mov
cmpsb
push
lods
fbld
pop
push
cmp
pop
out
jns
scas
cmp
xchg
cmc
inc
jae
pop
cmp
in
or
pop
test
inc
mov
jmp
lret
mov
and
push
pop
push
push
cli
mov
out
int
or
jl
dec
fwait
cwtl
cltd
cmp
push
loopne
jg
movsb
cltd
jp
push
lock
adc
pop
mov
jo
int3
sbb
int3
xchg
pusha
rorl
into
cwtl
leavew
scas
dec
repz
fwait
sbb
lcall
test
popf
gs
int3
clc
sti
and
js
lods
fcmovbe
cmp
push
push
movsl
push
outsb
test
jmp
jns
pop
sub
xchg
jg
fs
push
sub
xchg
int3
outsl
cmp
fbstp
je
ret
mov
cmp
sbb
popa
xlat
or
jns
push
jb
es
cmp
lea
data16
dec
cmc
bound
xchg
cmpsb
addr16
fidivs
fidivrl
dec
lods
cli
xchg
cltd
shlb
dec
lcall
adc
cmp
shlb
and
sub
or
fstpt
hlt
push
xor
jb
and
test
xchg
inc
pop
xchg
stc
mov
add
int3
push
scas
xor
xlat
jg
sub
stos
int3
int
ror
sub
lods
add
mov
mov
jle
mov
dec
idivb
sarb
movsb
shl
in
mov
ja
in
or
xchg
je
jl
hlt
cltd
pushf
fsts
mov
jl
mov
popa
push
out
fs
xchg
sbb
ret
bound
inc
mov
xor
rol
jge
add
xchg
outsl
popf
andb
jmp
jo
mov
xlat
scas
ss
add
pop
int3
jp
pop
dec
lods
jp
sub
push
lock
and
std
add
cmc
push
adc
loopne
or
ljmp
call
js
sar
add
jge
iret
icebp
xchg
outsl
scas
cmp
or
jge
faddl
movsl
popf
push
push
push
inc
int
ja
sbb
lods
js
scas
mov
push
xor
lods
jmp
add
jp
in
or
stc
ss
xchg
mov
shll
mov
mov
shll
loopne
sbb
push
jne
je
mov
xchg
and
cli
stos
mov
dec
int
xor
lds
fs
fsubrp
mov
push
push
ljmp
hlt
test
rclb
jg
add
arpl
dec
mov
xorl
jne
adc
push
pusha
xchg
jb
scas
dec
pop
sbb
and
dec
xchg
sbb
imul
fdivrs
test
mov
xorb
add
cli
ja
dec
scas
popf
std
lahf
pop
test
in
mov
test
outsl
mov
jl
xor
shlb
xlat
jae
sbb
fimull
sbb
mov
and
adc
mov
bound
iret
out
and
add
mov
or
in
jge
push
rolb
inc
ret
aam
push
pop
shl
sbb
mov
mov
sub
mov
fcmovb
or
sub
scas
ret
jno
in
hlt
bound
cmp
cmp
shl
inc
push
adcb
push
fs
lcall
dec
xorb
mov
lea
jp
lret
mov
mov
push
jge
fcmovb
divl
push
mov
sti
cmp
movsl
das
push
xor
in
add
testl
int
sub
mov
jbe
inc
pushf
sarb
xor
out
imul
jae
push
pop
cltd
loope
jmp
mov
mov
addb
add
scas
nop
mov
inc
xchg
out
push
dec
pop
lahf
pop
xor
popa
movsb
cwtl
push
dec
mov
inc
std
mov
push
inc
sbb
pop
dec
loop
dec
mov
ss
loopne
mov
lock
adc
add
in
pop
inc
jp
out
push
sahf
cmc
pop
pop
push
mov
aad
bnd
lret
add
enter
mov
sti
inc
test
iret
jnp
lock
ret
inc
add
xchg
repz
mov
lds
cmp
js
inc
xor
out
and
mov
pop
pop
mov
ficoml
push
out
shlb
mov
sahf
sbb
mov
jecxz
inc
push
adc
push
f2xm1
push
xor
push
imul
xchg
and
jecxz
dec
dec
repz
fists
sbb
int3
js
sbb
dec
in
xor
sbbb
xor
add
mov
clc
rcrb
loopne
and
clc
lds
fwait
push
cmp
les
rcrb
bound
popf
popa
mov
out
jae
addl
dec
repnz
call
ljmp
inc
mov
xor
bound
shlb
push
push
jg
jns
cmp
fsubr
or
enter
js
lds
int3
lret
test
mov
loop
cmpsb
ljmp
movsl
push
cmpsb
repnz
add
and
mov
mov
adc
test
add
fcmovb
scas
jo
clc
fwait
sbb
mov
sub
xchg
mov
int
mov
mov
leave
or
push
int
jle
xchg
mov
jge
sbb
add
popa
not
cmp
sbb
negb
sbb
loope
and
jp
or
jmp
rclb
ret
pop
inc
xor
jae
iret
gs
mov
cmc
push
or
or
mov
add
pop
daa
popf
divl
test
lretw
sbb
jp
mov
xchg
hlt
movsb
jae
shll
das
xchg
cmp
xor
add
imul
push
xor
mov
fcoml
mov
jne
addb
repnz
pusha
arpl
xchg
sbb
out
or
xchg
repz
mov
shlb
movsb
mov
cltd
ds
sbb
cld
sub
mov
mov
inc
mov
inc
mov
lret
or
mov
sbbb
lods
rcll
pop
add
xchg
repnz
sub
pop
dec
mov
sub
inc
test
xchg
push
mov
add
in
xchg
and
push
les
sete
in
popf
pushf
jo
movsb
es
mov
lcall
pop
test
xchg
movups
mov
cmp
std
push
jno
mov
jg
pop
je
sub
sarl
ror
and
int
xchg
dec
stos
jne
push
cwtl
pushf
test
sub
gs
sub
xchg
faddl
aas
movsl
cld
and
or
cmp
pop
mov
jp
sub
addr16
inc
movsb
ljmp
xchg
xchg
xor
xlat
sbb
or
xlat
jbe
popa
mov
mov
loop
je
je
ror
imulb
jmp
mov
cmp
mov
xor
adc
xor
into
ret
lock
test
orl
test
lret
or
aaa
xchg
ja
mov
pop
cmpsl
adc
lea
push
jp
push
mov
push
jle
xchg
lods
mov
or
adc
jbe
jmp
sbb
push
in
cmpsl
inc
mov
hlt
and
adc
jp
cmp
int
xor
sub
mov
jb
mul
cmc
cmp
mov
dec
jle
repnz
inc
jmp
cmp
adc
and
scas
jl
sahf
bnd
mov
cmp
and
das
lahf
shll
dec
dec
push
xor
adcl
pop
pop
mov
movsl
mov
lret
push
xchg
dec
jmp
jge
mov
or
xchg
ljmp
mov
inc
or
mov
dec
push
fmuls
mov
jg
lods
shll
sbb
addr16
fldcw
mov
mov
add
aas
mov
sbb
int3
push
or
cld
mov
inc
negb
jnp
xlat
push
sbb
shl
aam
mov
xor
dec
lcall
push
cmp
xorb
mov
sbb
jbe
fistps
mov
or
enter
xor
sbb
shlb
in
pop
inc
add
clc
fs
mov
adc
lods
cwtl
xor
sub
andb
cld
mov
mov
xor
das
or
aad
push
or
xchg
clc
sub
dec
int3
xor
hlt
pop
test
mov
sub
call
add
incb
fstpl
sub
inc
dec
xor
insl
push
lock
and
cwtl
mov
int3
xchg
push
xor
push
mov
sub
sbbb
mov
sbb
push
push
in
js
leave
clc
adc
movsl
dec
cmp
sbbl
call
or
pop
cmp
lahf
xor
add
xor
das
sbb
test
cmp
cld
xor
call
or
test
pop
add
js
rcrl
movsl
pop
je
lea
xor
push
push
in
add
clc
mov
dec
lods
popa
test
pop
nop
in
jl
fstl
push
xchg
pop
sub
mov
jne
test
pop
das
pushf
in
and
clc
movsb
push
cmc
and
lds
adc
movsl
into
cmp
popa
inc
push
pop
cwtl
sub
pop
hlt
test
inc
rcrb
cmpsb
testb
dec
push
mov
mov
or
lods
clc
xor
test
xor
enter
mov
sub
call
in
idiv
push
push
jmp
pusha
test
das
mov
hlt
add
xchg
pop
and
cwtl
movsb
in
popa
and
jo
leave
clc
adc
movsl
dec
cmp
sbbl
call
xor
stc
and
stc
pop
add
das
jo
mov
push
and
jns
enter
call
xor
and
js
rcrl
subl
mov
dec
dec
xchg
cwtl
cwtl
and
xorb
sub
int
push
add
dec
sub
jno
int3
dec
test
call
sbb
and
add
inc
roll
mov
enter
hlt
xor
and
and
in
push
js
pop
mov
cwtl
sub
mov
dec
sub
orb
das
mov
das
adc
movsl
movsl
push
cmp
cmp
enter
lock
test
mov
sub
call
in
decb
or
aad
test
das
pop
in
popa
push
les
push
clc
in
pop
dec
dec
pushf
xor
shlb
add
js
rcrl
test
inc
dec
xor
gs
clc
add
pushf
pop
and
sub
std
dec
add
into
adc
movsl
xchg
cmp
popf
and
jno
sub
mov
xor
sbb
xor
fstps
xor
mov
aam
imul
sbb
dec
adc
clc
inc
pop
xor
push
mov
sub
push
dec
loopne
cwtl
adc
mov
sbb
push
cld
pushf
test
cwtl
test
xchg
and
pop
cwtl
sub
pop
lock
loope
and
out
jl
rorl
sbb
xchg
push
imul
mov
pusha
jne
inc
sbb
andl
or
out
mov
xchg
and
int
int
fmulp
ja
mov
jl
xchg
adc
pop
mov
mov
loopne
sub
xchg
jp
mov
shll
pop
sub
jae
mov
ret
cli
nop
cli
mov
xchg
into
dec
adcl
nop
sub
xchg
mov
jl
mov
in
dec
add
sbb
jp
outsl
js
jae
sub
and
mov
dec
ja
in
mov
jl
jg
mov
and
dec
ret
cli
cmpl
mov
arpl
les
int3
inc
sub
bound
sti
add
mov
jg
stc
aam
imul
inc
pusha
jno
or
cld
or
addr16
cltd
xor
ret
jbe
sub
xlat
cld
add
pusha
scas
cmp
jae
jne
dec
or
jge
xor
adc
out
nop
bound
mov
jbe
lods
and
movsl
fdivrl
icebp
mov
mov
add
stc
ret
int3
add
mov
gs
push
mov
or
ret
mov
dec
xchg
je
test
pop
rorb
das
hlt
add
cmp
fdivl
mov
ds
outsb
jae
xor
mov
shlb
push
int
in
test
in
sbb
jb
jno
jns
cli
and
pop
inc
mov
and
movsl
ja
mov
cmp
sbb
or
sbb
add
jp
iret
mov
lea
sarl
adc
mov
mov
loopne
jo
sbb
mov
sbb
xchg
arpl
test
push
mov
hlt
movsl
into
push
fadds
movsb
pop
mov
mov
out
mov
sub
lock
lods
push
imul
loop
sti
ret
lahf
daa
out
je
jg
lret
rcl
mov
mov
or
jp
xchg
aam
test
dec
mov
mov
push
cmp
mov
pop
int3
repz
and
mov
gs
push
mov
sub
mov
mov
push
imul
int
outsl
les
and
cwtl
inc
jae
orb
pop
sub
and
into
cltd
test
shrl
push
dec
flds
loope
or
jnp
std
je
and
dec
or
mov
or
ret
ret
js
outsl
mov
and
pop
in
sub
add
clc
pusha
cmpsb
dec
mov
xchg
mov
jp
in
jecxz
adc
cmp
mov
sub
imul
mov
loop
mov
add
and
push
adc
in
nop
xor
in
mov
pop
pop
lahf
add
push
or
filds
sbb
call
pop
xor
mov
loop
aaa
js
stos
adc
rorl
xor
push
in
imul
fnstsw
xchg
and
mov
and
pop
aaa
int3
scas
pop
sahf
cmp
xor
addr16
pusha
sub
mov
dec
jmp
xchg
jns
iret
pop
je
pop
sub
rcll
mov
jno
js
mov
inc
mov
or
xchg
jne
cwtl
cmp
mov
cld
adc
mov
cmp
jmp
adc
push
pop
fwait
test
out
mov
test
data16
nop
data16
xchg
add
addr16
or
adc
sub
push
mov
sub
jno
xor
cld
push
mov
inc
inc
push
and
leave
add
mov
adc
lods
add
stos
pop
lea
cmp
repnz
shlb
or
mov
aam
sub
and
jnp
mov
sub
sub
lods
xchg
xor
add
shrl
std
xchg
push
aas
dec
call
and
clc
xor
inc
lea
push
add
call
inc
adc
aad
or
in
ret
mov
dec
push
int3
repnz
cld
jno
inc
rolb
sub
ret
shrb
or
jns
mov
mov
scas
add
mov
xchg
iret
xor
sbb
push
mov
outsb
adcl
and
lret
mov
adc
fcmovnbe
in
jl
lds
popf
xchg
sub
cmp
out
fucomip
xchg
test
in
sub
mov
scas
mov
rorl
out
inc
aaa
jge
xor
inc
stc
jl
movsb
outsb
mov
out
cmp
dec
mov
imul
xor
stc
xchg
lds
fwait
mov
jecxz
dec
test
jle
jne
std
mov
aas
shr
js
push
imul
stc
stos
pop
and
ss
xchg
push
and
mov
pop
ds
fildll
shrb
fld
std
mov
mov
fisubs
mov
xor
push
pop
sbb
shlb
dec
outsb
or
cli
ret
sbb
mov
clc
jp
mov
into
xor
cltd
fcomip
mov
fs
xchg
mov
cmp
mov
cmpsb
add
inc
cld
repz
adc
mov
add
adc
mov
daa
mov
lods
lret
sbb
inc
push
addr16
lcall
push
mov
ljmp
inc
inc
clc
sbb
push
test
dec
xor
loopne
mov
mov
sti
xlat
pop
cmp
clc
enter
les
jmp
mov
add
iret
mov
setns
adc
fsubrl
jnp
or
lods
cltd
cmc
add
and
pop
jg
xchg
imul
les
sarl
sbb
add
add
pop
aam
in
mov
in
inc
les
pop
outsb
lds
fwait
das
mov
cltd
leave
adc
repnz
mov
sbb
cmp
mov
lcall
rcr
movsl
dec
pop
fiaddl
xchg
cmp
adc
leave
inc
and
xor
mov
inc
js
sub
lods
ret
pop
add
fiaddl
cmp
jge
adc
jmp
mov
xlat
idivb
cmp
ret
js
lods
jl
mull
sti
sbb
jnp
lea
aam
xor
pop
ja
mov
jae
daa
stc
aas
arpl
inc
mov
sarl
enter
dec
mov
mov
push
ss
mov
inc
ret
sbb
mov
movsl
xchg
jg
and
and
or
push
sti
push
scas
sub
add
jno
pusha
lds
stc
xor
fdivs
xchg
sub
bnd
leave
pop
pusha
add
mov
lods
pop
xlat
xchg
mov
enter
daa
stos
mov
cmp
jge
push
add
shrl
adc
inc
sbb
mov
jb
lods
mov
cmc
adc
and
dec
mov
jp
pusha
cmp
enter
scas
leave
push
jg
jl
outsl
pusha
dec
dec
in
ret
stos
nop
jne
pop
sahf
jbe
stos
lods
or
in
inc
and
scas
sbb
dec
or
adc
pop
fcompl
in
inc
sbb
imul
pop
inc
adc
icebp
fs
pop
cli
xor
scas
into
mov
mov
ret
andb
rcrl
pop
in
add
out
add
or
mulb
nop
pusha
cmpsl
adc
in
mov
mov
mov
bound
insl
mov
cld
adc
fxch
xchg
popa
rorl
mov
pop
sar
push
pushl
lock
add
mov
xchg
lock
test
or
test
mov
gs
lret
dec
jp
mov
xor
push
daa
add
adc
ficoms
mov
jbe
adc
sub
or
mov
pop
inc
cs
cmp
dec
sbb
mov
jne
fldt
jns
sub
jnp
sti
ds
mov
add
lock
mov
les
pop
seto
cmc
xlat
js
xchg
incb
ret
mov
jle
out
mov
int
sbb
mov
or
jns
xor
xchg
icebp
mov
jbe
inc
js
mov
enter
in
push
ror
pop
adc
arpl
lds
out
mov
cli
decl
cmp
jno
daa
arpl
test
imul
jle
in
xchg
cmp
push
add
xchg
xchg
add
mov
std
push
stos
cld
mov
data16
xchg
cmp
xor
and
and
je,pt
pop
inc
mov
mov
jp
dec
aaa
push
push
cmc
hlt
jecxz
sbb
pop
lods
mov
cmp
xor
cltd
movsl
or
jmp
pushf
jmp
mov
cmpsb
mov
pop
jns
cld
inc
mov
adc
jbe
mov
imull
xor
pop
jle
or
sub
cltd
mov
sub
mov
arpl
adc
jne
test
jae
add
push
test
jmp
add
pop
adc
adc
xchg
jnp
mov
mov
jns
hlt
adc
dec
ljmp
xor
call
cmp
mov
inc
cmp
xchg
and
out
lret
fnstcw
add
sbb
xchg
mov
aas
popa
cli
sarl
xchg
push
jmp
mov
rcll
loopne
test
inc
int
pop
rcrb
mov
jge
mov
in
or
inc
sub
xchg
aad
cld
pop
out
push
sahf
push
push
adcb
inc
cmc
mov
inc
incb
jl
xchg
mov
popa
cwtl
shll
push
fucom
in
lods
xor
push
aas
mov
xchg
js
fwait
lods
sub
stc
cmp
in
dec
push
negb
in
scas
inc
mull
xchg
pop
jae
jno
mov
and
dec
loope
and
aas
pop
clc
mov
mov
rcl
paddd
and
inc
cld
and
pop
push
pop
mov
pusha
pop
inc
cmp
sbb
js
stc
cmp
or
push
popfw
addr16
fiadds
jmp
inc
xchg
push
pop
mov
push
dec
push
js
pop
pusha
js
ds
xchg
popf
push
leave
fiadds
jmp
js
add
dec
mov
std
and
cmp
dec
pusha
js
ficompl
push
leave
pop
or
mov
jp
lods
aad
xchg
js
add
mov
movsl
js
data16
leave
pop
or
aad
leave
loopne
sub
addb
mov
frstor
aas
js
mov
fmul
mov
icebp
aam
paddd
add
sub
add
sub
lock
and
jne
sub
lock
cmp
fdiv
test
and
fnstsw
jo
pop
dec
sub
std
aaa
std
addl
pushf
cmp
push
or
adc
add
fwait
pusha
mov
cld
push
cs
cltd
rcl
sbb
in
enter
sub
mov
and
aam
jp
inc
mov
and
sub
dec
ja
xchg
fcmovnb
sbb
lods
sub
mov
and
jne
test
stos
jnp
loopne
pop
imul
jnp
rol
ds
xor
sbbb
or
or
dec
xchg
call
repz
enter
sub
subl
cmp
jns,pn
aam
mov
push
cwtl
cwtl
lret
add
in
or
lahf
pop
pop
and
rorb
test
mov
shl
inc
shl
pop
lahf
iret
fs
mov
jns
xchg
sub
incb
sub
inc
jl
inc
or
andb
hlt
mov
repnz
mov
mov
inc
mov
lcall
inc
xchg
adc
cli
popa
jge
int3
jb
shl
gs
icebp
jle
mov
into
call
addr16
or
call
and
test
andl
pop
inc
ss
loope
jg
dec
lret
pop
bound
ja
insl
mov
jbe
cli
push
jns
cmp
mov
or
or
sbb
lret
pop
inc
xchg
ret
push
idivb
cmpsl
sbb
and
cld
repz
ljmp
outsb
cwtl
test
mov
mov
push
jecxz
sbb
mov
mov
repz
fists
dec
mov
lods
sbb
mov
inc
dec
orl
add
or
inc
jl
xchg
ljmp
lods
and
scas
lods
and
push
out
sbb
push
aad
xchg
ljmp
add
xchg
ret
or
aad
cwtl
js
nop
mov
out
fldt
je
addr16
fisttpl
sbb
arpl
jbe
xchg
mov
dec
pusha
xor
xchg
mov
or
xor
in
push
dec
cmc
xchg
adc
jg
cmp
and
movsb
mov
cmp
sub
and
cmp
adc
sub
sub
fwait
mov
or
cmp
in
cmp
sbb
dec
push
enter
les
dec
jae
mov
or
repz
xor
stos
pop
or
cmp
cli
test
cmpsl
fucomp
inc
add
stos
les
stc
lods
out
lret
mov
xor
xlat
in
adc
mov
mulb
cmp
stos
fcomps
stos
les
sub
pop
fnstsw
push
in
push
cmp
mov
js
xchg
lds
hlt
adc
test
adc
bnd
dec
mov
test
jne
pop
cltd
aad
sbb
mov
sbb
ffree
pop
add
mov
pop
fucomp
cmp
stos
pop
or
sbb
ss
stos
sub
push
loop
xchg
add
pop
push
mov
sbb
ss
js
xchg
sbb
loop
push
sub
add
push
mov
sbb
mov
sbb
loopne
add
jle
xor
adc
sub
mov
sti
push
pop
mov
pop
push
fldt
std
jl
pop
inc
and
adcb
hlt
les
dec
rclb
push
and
lret
xlat
fldt
push
xor
out
jmp
es
mov
lahf
fwait
roll
cmpsl
dec
loope
in
scas
jo
push
loope
pop
loopne
and
or
scas
and
or
in
pop
imul
adc
inc
mov
mov
adc
loop
cmpsl
mov
dec
out
lods
xchg
in
pop
sbb
cmpsl
test
fsubl
ror
mov
ss
push
mov
divb
lret
bound
jno
gs
std
jle
inc
imul
outsb
loope
mov
jle
or
ret
sub
jns
xor
mov
mov
sti
pop
dec
test
sbb
std
sub
push
dec
cmpsb
shrb
test
jae
sahf
jne
aaa
sub
mov
cmp
xor
gs
dec
aad
jae
mov
jp
inc
sbb
xchg
cld
jne
xor
add
jle
mov
mov
and
pop
cmp
loope
dec
push
in
jp
scas
push
imul
sub
aas
paddusb
cltd
repnz
pop
pop
xor
fs
cli
movsl
dec
adc
jb
xchg
in
jge
rclb
adc
xlat
xchg
icebp
add
aam
xchg
rclb
jae
testb
adc
mov
jae
fmul
jmp
sub
cmp
mov
add
mov
lock
das
push
loope
sti
in
loope
push
lcall
popf
popf
xor
sub
or
mov
into
ja
stos
mov
es
push
or
mov
icebp
in
out
inc
dec
cwtl
xchg
push
clc
cwtl
les
les
sbb
mov
fistpll
into
test
aam
lods
enter
xchg
iret
imul
movsb
jo
call
pop
cwtl
js
cmc
xor
out
in
pop
mov
mov
and
mov
test
rcr
push
sub
pop
or
push
test
add
sbb
xor
inc
and
popa
dec
xchg
pusha
sub
dec
testl
xor
xor
mov
adc
mov
hlt
push
jmp
out
outsb
xchg
js
test
inc
in
pop
test
inc
mov
negl
push
sbb
movsb
mov
sbb
ja
rolb
xorb
out
clc
std
dec
pop
and
ss
bound
imul
jne
gs
inc
jg
jg
std
enter
jle
adc
mov
add
mov
pop
cmp
mov
icebp
cmp
and
popf
jecxz
inc
xlat
aad
cmpsl
shr
xor
mov
ljmp
add
enter
or
cwtl
jmp
or
pop
mov
cmpl
push
push
mov
push
cmc
ja
xlat
out
jae
cbtw
sbbb
leave
test
or
dec
pushf
ss
mov
outsl
cmc
add
or
cli
mov
imul
out
enter
cli
jne
scas
ja
sub
ja
sti
adc
sti
orl
xor
dec
push
fcomi
lods
cmp
and
mov
xor
add
xor
dec
int3
mov
jbe
jo
popf
in
and
dec
ljmp
jbe
and
stos
or
jmp
jbe
add
sbb
mov
stos
inc
call
clc
and
icebp
xorl
lret
cmp
mov
jae
pop
shlb
pushf
sbb
dec
jecxz
jno
dec
repnz
mov
xchg
mov
lods
ficoml
inc
mov
lcall
ret
mov
in
rcll
xor
into
flds
jle
mov
jae
push
push
xchg
cmp
lcall
pop
bound
pop
ja
mov
cmp
xor
outsb
lcall
xchg
or
jg
xchg
push
pop
and
inc
jne
je
fistpll
jl
mov
mov
push
out
pop
insl
sbb
das
push
int3
push
mov
adc
jns
aad
pop
mov
or
pop
pop
lods
out
aad
push
push
inc
cltd
loope
and
les
aad
sub
dec
std
fisttpll
cld
push
push
rorb
jo
outsl
loop
sub
jle
mov
mov
or
gs
mov
lock
inc
std
push
sbb
aad
sbb
push
imul
addr16
mov
cld
imul
aaa
imulb
push
arpl
jae
sbbl
and
addb
in
mov
int3
ds
ret
decl
mov
sub
pop
push
dec
dec
stos
dec
dec
and
rcll
outsb
dec
xor
and
scas
cmp
xchg
ficoml
jle
test
pop
jge
mov
fnop
jmp
rcrl
xchg
insb
dec
insl
data16
sbb
cmp
out
in
stos
or
call
mov
call
push
in
add
lods
cmpsb
push
inc
jle
push
out
mov
adc
mov
aam
sub
or
mov
data16
add
sbb
in
sbb
xchg
inc
mov
fs
rclb
pusha
insb
ror
rcrl
test
int
mov
subl
xor
dec
test
pop
clc
pop
cmp
cltd
inc
push
or
adc
jnp
aam
out
cli
mov
js
lcall
and
jge
dec
and
cwtl
adc
hlt
inc
dec
sahf
dec
test
movsl
fwait
mov
fcompl
aas
mov
mov
shll
in
imul
mov
aam
imul
movsl
sub
lods
std
cld
testb
xchg
or
std
repnz
fs
xchg
cmp
push
je
icebp
mov
inc
jb
mov
pop
dec
out
cmpsb
dec
ljmp
jle
inc
push
jp
mov
addl
cmp
popa
mov
inc
cmp
and
xlat
mov
xchg
or
int3
xchg
and
popa
rolb
aam
out
movsb
sbb
push
mov
orl
dec
inc
jl
cltd
mov
clc
cltd
ds
xor
inc
rorl
pop
insb
add
mov
sub
adc
jb
mov
push
jns
idivb
fdivr
icebp
int
hlt
fwait
mov
jge
pushf
mov
fadds
lods
sub
cmp
xor
mov
and
je
icebp
mov
dec
mov
and
pop
mov
mov
xlat
push
iret
les
ret
cld
sbb
mov
das
and
adc
pop
nop
mov
outsl
loopne
inc
cwtl
or
fildl
pop
stos
mov
fstpt
sarb
push
mov
push
stc
pop
rorl
mov
aad
divb
xchg
nop
movb
xlat
xchg
adc
push
or
mov
mov
sbb
adc
xchg
loop
push
mov
or
fldenv
test
lret
mov
out
push
repnz
jl
push
in
ds
jge
jb
dec
cwtl
lods
aaa
add
addb
pop
sbb
or
xchg
test
push
lods
dec
scas
pop
test
jl
jns
imul
inc
dec
lret
mov
das
jmp
mov
rcrb
dec
outsl
push
cmc
sahf
fnstenv
shrl
fiadds
aas
adc
inc
fwait
pop
nop
pusha
xchg
push
mov
pusha
addr16
or
rolb
mov
add
jae
sbb
aad
push
mov
fadds
fiaddl
mov
pop
jle
dec
jns
xor
cmp
jnp
in
cmove
push
and
in
cmp
cli
push
arpl
stc
push
push
icebp
mov
inc
inc
fldenv
and
lret
sbb
cmp
mov
or
sbb
xor
stos
pushf
inc
xchg
js
into
shl
out
test
dec
test
fidivrs
xor
or
mov
mov
in
or
loope
jns
adc
incl
outsl
std
xlat
std
mov
movl
outsl
clc
clc
cmp
adc
imul
jmp
call
pop
xchg
mov
jo
lds
cld
adc
sub
test
mov
pop
or
push
xchg
add
ss
cmpsb
add
leave
in
inc
in
in
sbb
decl
jne
adc
ret
jl
mov
repz
xchg
es
mov
xor
test
cmc
cmc
int
sub
ss
adc
mov
popa
pop
jg
xchg
mov
mov
pop
mov
out
xchg
fs
adc
loope
js
mov
mov
sbb
xor
shl
sbb
mov
inc
ficomps
xchg
xor
xchg
jecxz
inc
sub
adc
inc
mov
and
sbb
mov
stos
sbb
mov
fistl
popa
loop
push
xor
mov
mov
xor
ret
je
cmp
mov
inc
imul
into
aam
mov
loope
lcall
jno
jae
sub
orl
mov
test
fmuls
pop
push
imul
inc
pop
int
pop
test
dec
push
fstl
scas
xor
pusha
les
inc
cmpsb
outsb
sub
filds
jl
das
add
xor
in
aam
je
dec
pop
jecxz
jp
stos
xchg
nop
icebp
int3
or
adc
inc
mov
lds
or
add
cs
sbb
je
push
add
sbb
or
loope
int
sbb
fdiv
adc
popa
mov
adc
cwtl
data16
sub
pop
lahf
inc
pop
sub
dec
loop
std
inc
pushf
mov
mov
repnz
test
add
testb
sub
dec
orb
add
xorb
sub
adc
divl
inc
jle
xlat
pop
fstps
inc
mov
mov
jg
inc
pop
mov
xor
xchg
dec
push
cld
bnd
add
cld
sub
cmp
cmp
jmp
cmp
es
mov
adc
in
mov
shlb
stc
mov
rep
dec
push
lea
std
pop
sub
out
inc
xor
addb
jl
popl
adc
nop
or
xchg
mov
fwait
sub
xchg
aad
inc
jo
mov
imul
mov
movsl
or
mov
iret
call
lock
pop
dec
sub
push
dec
mov
xchg
out
jne,pn
leave
loope
outsl
xor
xchg
cli
cltd
aas
std
xor
into
dec
pop
jns
and
adc
fs
jae
fldl
cmp
mov
and
fbld
xor
popf
icebp
pusha
pop
pop
sbb
dec
pop
lcall
xor
xchg
pop
pop
int
xchg
sub
mov
adc
pop
lret
aam
add
jge
xor
cli
arpl
aam
cmp
sub
mov
lea
sub
fcompl
push
nop
cmp
out
dec
orl
jl
mov
jne
fistps
jb
jle
pop
les
sbb
xchg
sarb
outsl
arpl
mov
jnp
adc
mov
daa
and
sbb
icebp
push
fnsave
mov
add
add
xor
xor
dec
mov
push
out
cmp
cmc
stos
rclb
xor
xor
lods
xchg
movsb
push
sbb
out
mov
mov
int
add
clc
or
dec
add
adc
mov
sub
pushf
pop
sbbb
scas
cwtl
jge
lods
dec
gs
cwtl
insl
into
mov
adcb
push
pop
shrb
pop
pop
xlat
test
leave
xor
adc
mov
sbb
test
dec
mov
push
test
mov
sub
call
xor
std
mov
sub
loop
test
sub
adc
push
cmp
fcomp
jne
lahf
lcall
mov
sbb
xchg
and
xor
push
decb
fstps
adc
test
sahf
sub
inc
add
aam
mov
mov
sub
enter
pop
add
and
mov
xlat
js
lds
pop
pop
add
cmp
push
fisubrs
cmp
stc
sub
add
adc
addb
cmpl
add
icebp
hlt
xchg
outsl
aaa
nop
call
pop
xlat
mov
sub
aam
lahf
jmp
dec
xor
lahf
ret
outsl
push
jns
popfw
add
dec
and
jno
loope
and
clc
test
fs
test
fldcw
movsl
sbb
lcall
push
addr16
into
push
imul
jmp
add
cwtl
pushf
imul
out
pushf
les
lds
xchg
mov
mov
sbb
xchg
lods
fsts
inc
fsubr
adc
cmp
mov
cld
fiadds
pop
out
mov
scas
dec
sahf
add
sarb
adc
xchg
lods
sarb
and
adc
add
xchg
int
mov
stc
xlat
enter
add
cli
push
sbb
icebp
ds
in
jge
mov
test
in
adc
xor
dec
sub
fcoms
push
fildll
mov
fildll
lret
lods
and
aad
mov
jp
loopne
adc
push
jns
mov
sbb
clc
test
into
movsb
fmuls
int3
cmp
popf
xor
mov
xchg
aam
pop
insl
test
insl
pop
mov
cmp
xor
shl
mov
pop
adc
mov
lds
mov
mov
xchg
int3
add
js
popa
dec
jnp
cmpsb
lods
dec
outsb
xor
or
leave
lods
pop
movsb
flds
adc
lods
shlb
lea
lret
into
rcll
xor
lea
pop
sbb
subb
adc
mov
leave
iret
pmaxsw
sub
lods
mov
fdivl
lock
inc
or
pop
and
or
pushf
and
ds
hlt
arpl
push
dec
xor
add
insb
pushf
les
ret
fsubrs
mov
adc
push
dec
xchg
les
loope
mov
sub
push
in
add
iret
or
mov
add
jnp
insb
jecxz
repz
cmp
jb
repnz
out
je
js
mov
fimuls
insb
adc
dec
scas
mov
jl
repnz
sbb
lret
lods
mov
addr16
fsubr
pop
push
sahf
inc
mov
in
sub
fs
pop
xor
hlt
push
loope
idiv
push
ds
xchg
stos
sub
xor
mov
shl
cli
cmc
aad
test
jnp
cmpsl
dec
mov
mov
xor
xchg
arpl
in
fcoms
mov
and
frstor
sbb
jg
mov
and
dec
imul
aaa
jg
pop
fsub
or
lds
sbb
pop
sar
jo
cs
out
jmp
xor
jge
sarl
loope
push
or
inc
les
push
pop
repz
ffree
xchg
sbb
insb
mov
or
bound
jmp
imul
cwtl
insl
add
sarl
in
adc
std
clc
orl
ds
ss
rcrl
sbb
faddl
mov
push
jecxz
pushf
or
xchg
sbb
into
push
inc
lahf
add
sti
jb
or
or
pusha
les
lcall
or
insb
xor
and
pushf
pop
shrl
mov
pusha
mov
xor
mov
cltd
push
fsubrl
xchg
stos
fistps
or
push
fs
jnp
aaa
out
rorl
or
in
xchg
mov
pusha
inc
xlat
jns
xchg
scas
imul
push
push
fcoml
add
stc
jmp
and
data16
dec
or
add
rcrl
fucomp
in
mov
dec
pop
dec
pushf
adc
xchg
jmp
xor
cmpsb
test
and
inc
outsb
ret
int3
stos
add
repnz
faddl
mov
or
les
add
popa
or
in
or
mulb
add
or
add
add
adc
add
add
add
bound
add
add
add
bound
add
add
add
bound
add
add
add
or
add
add
or
add
pop
bound
add
add
add
or
add
add
mov
add
or
add
add
or
sbb
or
pop
popa
or
and
or
gs
or
sub
or
jb
or
xor
or
jl
or
cmp
or
mov
add
add
pusha
or
lahf
popa
or
push
pusha
or
test
pusha
or
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
outsb
imul
insb
add
popa
jo
cs
insb
add
jns
je
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
inc
outsb
jne
push
jb
arpl
jae
outsl
fs
gs
rolb
inc
jb
jo
push
outsb
jo
outsl
je
arpl
je
add
add
daa
repz
or
in
add
push
fildll
push
enter
add
test
dec
test
rorb
loope
mov
or
xor
push
cmp
mov
or
or
imul
mov
push
or
mov
insb
loope
pop
into
add
xor
jne
mov
sub
sbb
pop
xchg
std
xchg
add
mov
lret
sbb
or
in
ret
add
and
add
push
cmp
rclb
out
cmpsl
fimuls
leave
push
fsubrs
ds
data16
and
push
or
pop
adc
into
xor
ljmp
fdivl
rorb
push
mov
popl
or
cmp
pusha
sbb
sub
add
sub
cltd
test
push
xor
pop
inc
xor
or
or
mov
cmp
int3
or
push
inc
add
or
mov
pop
inc
inc
sti
test
lods
outsl
xorb
mov
cmc
add
lds
and
mov
push
adc
adc
sbbb
add
rcr
and
add
push
jbe
push
xor
adc
add
out
mov
add
push
jge
and
jbe
adc
test
add
sbb
pushf
insl
dec
push
cld
add
lds
ss
sub
mov
bt
movsl
pop
popf
ljmp
cmp
cmp
pop
sub
push
mov
inc
test
data16
mov
add
push
pusha
negl
xlat
sbb
cmpsb
sbb
xor
out
push
xlat
xlat
cmp
push
cltd
or
mov
adc
xchg
sbb
lock
mov
insl
das
nop
into
or
jo
shlb
dec
call
mov
push
pop
dec
or
and
inc
and
add
jne
pop
jp
mov
adc
imul
add
mov
jmp
rcrl
push
or
cmp
inc
sbb
xor
mov
rolb
pop
mov
insb
jbe
daa
adc
lods
mov
ret
mov
cmc
push
inc
pusha
or
mov
xlat
fs
shll
popf
cmp
in
inc
push
aas
and
add
int
mov
pop
mov
ja
ss
ds
jns
cmp
movl
lods
aaa
aad
imul
mov
nopl
jb
sar
cs
cmp
sub
and
mov
sub
jp
or
mov
pop
aam
movsb
es
jno
sbb
adc
loop
pop
sub
inc
xor
push
cs
jns
add
mov
or
mov
cld
popa
in
outsl
cmp
mov
cmc
or
sub
mov
stc
sub
sbb
in
adc
aam
lock
dec
fwait
cmp
or
enter
inc
jns
shlb
cltd
inc
inc
or
adc
out
pop
cmp
xor
push
imul
mov
mov
ja
xor
inc
cmp
sub
add
mov
sbb
test
lret
int
or
addr16
add
ljmp
cmp
xor
xor
sbb
xchg
sbb
sbb
pop
dec
mov
outsb
adc
clc
pop
add
mov
pushf
or
and
test
mov
and
and
jge
and
test
push
int3
xchg
xchg
mov
sub
arpl
sahf
mov
aam
rorb
add
test
cmpsl
mov
addr16
or
and
cmc
dec
push
xor
or
dec
in
xor
push
test
adc
pop
xchg
or
xlat
shll
stos
add
loopne
in
xchg
je
repz
repz
inc
pushl
pop
and
adc
xchg
sbb
mov
mov
shrl
fs
sub
cmp
sarb
mov
dec
sbb
movsb
sub
push
out
add
adc
add
mov
lods
xchg
pop
add
inc
sbb
jb
loopne
inc
insl
cwtl
inc
and
or
in
mov
mov
ret
add
dec
add
fisubrl
inc
push
or
icebp
lret
ret
pushf
mov
push
mov
or
add
cmc
lret
sbb
clc
pusha
xor
dec
add
inc
add
cmp
xor
movsl
aad
add
out
sahf
push
and
cmp
aas
sub
xor
pop
adc
popa
inc
or
add
mov
call
outsl
add
or
add
imul
adc
dec
jb
xchg
lods
scas
push
frstor
xchg
adc
pop
andl
xchg
shrl
addr16
jbe
mov
shll
push
xchg
inc
leave
mov
or
jo
pop
mov
pop
je
rcrb
adc
imul
inc
mov
imulb
and
lahf
mov
or
loopne
pop
dec
out
pop
mov
lret
and
nop
and
pop
sub
push
adc
cmpsb
jbe
jae,pn
cmp
orb
lock
jns
adc
sub
add
adc
mov
add
rcll
int
xor
mov
into
sbb
push
xlat
js
insb
stos
les
cli
mov
sbb
jae
push
ficoms
nop
mov
adc
jmp
add
cmp
inc
xchg
xchg
or
sbb
add
orb
dec
fst
or
or
gs
dec
mov
ror
inc
add
adc
push
dec
rcr
mov
roll
ret
adc
fdivp
xchg
incb
orb
mov
fsub
mov
movsl
int3
and
icebp
jne
add
xchg
test
adc
sbb
lea
mov
adc
xchg
sarl
iret
pop
enter
int
outsb
leave
add
inc
and
or
mov
lret
std
inc
stc
xor
inc
out
xchg
stos
cmp
inc
pop
movsb
inc
adc
xor
inc
inc
adc
test
mov
sub
rcr
cmc
out
xor
clc
add
cltd
ret
roll
add
mov
add
add
xchg
lock
aaa
or
jb
add
cmp
pop
negb
jmp
mov
push
pop
add
add
enter
stc
inc
mov
loop
stos
int
andl
movsb
pop
mov
adc
test
faddp
ljmp
dec
cltd
xchg
popf
and
sbb
mov
dec
mov
icebp
inc
inc
faddl
jbe
push
push
popa
inc
dec
fs
xor
lahf
add
jnp
ret
mov
aas
roll
les
cmpxchg8b
lret
ror
add
mov
or
xor
jecxz,pt
fadds
xor
or
in
pop
enter
lods
or
lea
sub
pop
enter
es
divl
or
out
push
adc
test
incb
inc
cli
cmp
xchg
and
fimuls
es
adc
int3
cmp
add
scas
shr
sub
or
cld
or
stos
sbb
lods
cs
or
negl
and
add
mov
push
mov
sbb
jae
cmp
inc
mov
ss
dec
pop
cmp
dec
add
jmp
shl
add
aad
loopne
mov
test
sbb
add
mov
roll
sbb
jl
mov
lods
lods
ss
cmp
and
push
aam
repnz
mov
jmp
pushf
adc
mov
test
mov
sbb
mov
sub
aaa
add
sub
and
add
cwtl
and
xchg
and
pushf
inc
push
xchg
je
add
sub
and
or
adc
adc
adc
adc
adc
xchg
adc
xchg
and
xchg
adcb
addb
push
xchg
adc
subb
jmp
add
scas
add
mov
sbb
mov
xor
or
jne
daa
add
inc
jmp
aas
add
jns
cmp
and
sub
or
mov
or
inc
imul
and
xor
mov
fwait
add
adc
loop
div
scas
xchg
stos
and
adc
data16
xlat
lcall
xor
in
fwait
xchg
enter
lods
adcb
aad
mov
pop
jb
fisubs
pop
xchg
add
push
fdivr
and
add
insl
enter
mov
sbb
add
cmp
sbb
or
dec
pop
adc
add
jmp
add
in
lcall
iret
xchg
push
sbb
mov
push
pop
aas
push
in
lock
dec
and
scas
ljmp
lds
push
jp
inc
call
adc
push
in
mov
mov
lock
xchg
add
xor
dec
sbb
push
pop
dec
inc
adc
sbb
shrb
xchg
loope
imul
inc
and
sbb
data16
outsb
ret
sub
inc
cmpsb
test
add
mov
push
aas
add
lea
fmuls
jne
inc
push
clc
sbb
in
pop
mov
push
sti
and
je
mov
ljmp
and
and
cmp
inc
aaa
jns
clc
mov
dec
mov
add
nop
sarb
xchg
jo
inc
je
mov
ret
add
sbb
and
cmp
push
fldt
sub
dec
popf
mov
fldt
inc
xor
pop
jbe
sub
daa
add
imul
dec
push
std
in
test
xchg
dec
add
dec
add
lock
xor
test
push
lds
adc
pop
push
adc
shr
cmp
xchg
or
test
add
or
or
js
add
and
or
and
ja
mov
and
pop
cmp
popf
add
inc
out
int3
lret
stos
stos
fildl
add
and
out
jne
add
and
cltd
pusha
add
repnz
xchg
gs
sbb
es
maxps
xor
in
in
testl
test
or
mov
xor
movsl
stos
loopne
or
xchg
fs
mov
es
add
mov
pop
sub
pop
out
push
icebp
sub
adc
daa
pushf
sbbb
jb
rcll
shr
xchg
pop
inc
or
aad
dec
or
xchg
mov
test
dec
lods
fbld
aam
rcrl
outsl
aam
xchg
cltd
ret
aaa
ja
and
test
pop
lods
fs
adc
aas
orl
xor
push
pop
cli
test
add
jecxz
rorb
push
mov
jae
sbb
cmp
into
mov
mov
inc
inc
push
pusha
les
jge
fistpll
sbb
js
mov
and
pop
cld
incb
roll
je
and
movsb
adc
or
mov
ljmp
ja
inc
and
dec
aas
nop
addl
fwait
loop
sti
daa
xor
cmp
iret
xor
or
sbb
or
mov
aad
and
xchg
mov
xor
pop
inc
jl
add
inc
add
xchg
mov
rolb
pop
inc
xchg
jg
xor
push
addl
nop
pusha
js
adc
sahf
enter
bound
pop
dec
jl
ss
test
or
rcl
es
rolb
and
sub
or
movsb
mov
ljmp
outsl
adcl
out
sti
sub
das
cmp
or
aas
lahf
xchg
push
test
daa
fs
or
or
add
xor
pop
mov
lods
adc
sub
cmc
in
or
jb
mov
scas
or
push
loope
sti
shll
xchg
loopne
cmp
arpl
adc
jge
test
stos
mov
outsl
pop
xchg
nop
add
push
xchg
fildll
push
psubusw
pop
inc
xchg
and
mov
xchg
push
adc
fldt
and
cltd
or
sbb
jbe
add
cli
jle
enter
rcrl
icebp
push
les
test
add
stos
cmpsb
adc
hlt
sbb
jo
pop
in
inc
test
mov
or
or
sub
mov
push
pop
fistpll
popa
sbb
stos
lret
dec
xorl
lds
pusha
shlb
addr16
adc
fisttpll
xor
sub
mov
jl
sub
js
sbb
push
cmp
sbb
adc
adc
xor
cmpl
jb
mov
and
and
mov
mov
popf
lahf
pop
push
sub
and
cmp
xchg
fnstcw
mov
in
inc
icebp
sbb
fmul
cmp
andl
pop
pop
cmp
int3
sarb
add
lcall
hlt
add
in
add
sbb
cmp
sahf
xor
dec
cmp
aam
or
inc
add
adc
pmuludq
push
fldl
ret
je
pop
jbe
les
sub
inc
adc
mov
sub
mov
adc
addb
xchg
pop
fs
insb
mov
push
cmp
cs
popa
adc
xchg
jo
daa
rolb
sub
mov
call
or
loopne
cs
pushf
add
add
mov
popa
call
es
ret
das
loopne
dec
push
add
sbb
roll
divl
adc
add
and
jmp
negl
add
pop
test
fldl
test
out
leave
mov
or
dec
xor
dec
int3
pop
or
xchg
add
mov
lea
add
jo
rolb
adc
mov
add
pop
pop
dec
jmp
inc
cmpsb
push
jno
add
call
gs
in
cld
sub
into
sbb
cmp
andl
lret
jmp
add
les
out
cltd
out
or
add
mov
stc
loopne
incb
mov
shl
loop
add
pop
push
ds
xor
xchg
add
or
rol
rcll
jne
in
sub
and
add
mov
sahf
test
inc
mov
int3
inc
lahf
push
inc
test
test
btc
neg
push
pop
mov
pop
aaa
or
flds
mov
negb
xlat
call
add
inc
mov
out
das
es
lcall
dec
inc
nop
fcmovnb
mov
jnp
pusha
ljmp
shll
repz
add
push
nop
add
add
aam
jmp
xor
mov
dec
pop
imul
mov
add
cmpsl
mov
and
repnz
mov
xchg
hlt
xor
in
stc
add
add
scas
push
pop
pop
subl
cltd
mov
xor
movaps
daa
xlat
and
mov
std
nop
xlat
lahf
inc
loope
xchg
or
mov
and
je
push
xor
jl
xorl
neg
add
sub
test
test
jl
adc
jo
adc
inc
mov
dec
fwait
inc
ja
and
andb
xor
sub
test
iret
adc
inc
xchg
rcr
ljmp
xchg
adc
ljmp
push
cld
adc
ret
add
pop
xor
fldl
cmp
pop
das
add
push
pop
pop
neg
test
cmp
call
lds
add
xchg
mov
pop
dec
test
mov
push
and
mov
leave
push
sub
lock
dec
sbbl
adc
loopne
jne
out
xor
dec
sbb
inc
xchg
ret
pop
and
out
sbb
test
add
push
add
mov
ljmp
aad
and
inc
outsl
or
shr
sbb
pop
or
cwtl
xchg
out
or
xor
lcall
pop
mov
test
add
gs
rcrb
or
cmp
xchg
jae
enter
div
nop
fcmovnb
loope
push
xor
and
and
add
push
push
mov
testb
inc
jecxz
dec
shl
mov
rcrl
fs
aas
lds
push
mov
dec
ds
into
xor
repnz
xchg
add
push
pop
pop
not
shll
xor
sub
push
adcb
push
sbb
xor
mov
cli
or
cmpsb
addb
call
ficomps
addl
adc
int
jecxz
and
sub
stos
test
test
inc
repnz
sub
addr16
gs
mov
and
add
or
adc
test
fdivrl
enter
cmp
mov
test
xor
leave
cmp
push
daa
push
bound
rorb
addr16
xchg
cmp
fsubrl
jno
push
shrb
rolb
jo
sbb
outsb
adc
pusha
inc
sbb
ss
jb
out
add
pop
sub
rcll
cltd
pop
scas
shrb
push
add
jmp
mov
mov
out
pop
hlt
push
sub
pop
inc
add
adc
sub
mov
sub
dec
xor
dec
and
dec
push
jbe
and
fcoml
xchg
scas
inc
or
lods
cmp
movaps
push
xchg
idivb
addb
dec
cmp
lock
scas
inc
add
push
xchg
jno
add
movsb
cwtl
mov
fisubrs
dec
and
in
push
pop
sub
adc
movsb
inc
aas
inc
or
aad
std
sbbl
sbb
clc
adc
cmp
inc
neg
bts
ret
and
loopne
pop
add
jge
cmc
push
pop
mov
das
iret
ljmp
xchg
ja
inc
add
push
dec
sbb
add
or
mov
rcll
mov
add
jmp
dec
inc
xor
push
int
sub
mov
sub
ficoml
dec
pop
adc
shr
pop
mov
push
sub
not
scas
push
dec
jl
addr16
jle
ljmp
test
pop
or
iret
mov
getsec
ror
add
add
shll
fbld
xor
lea
enter
fsubl
in
aad
mov
jno
ja
push
inc
movsl
pop
cmp
pop
mov
cmp
add
std
pop
sub
imul
jecxz
and
mov
sahf
mov
inc
test
pushf
adc
pusha
mov
jae
int
or
sub
mov
push
adc
in
jecxz
negl
cmc
stos
or
aad
xchg
not
dec
and
add
rorl
pop
jmp
mov
negb
sbb
jecxz
mov
xchg
das
add
repnz
f2xm1
adc
hlt
test
fs
add
jnp
push
adc
rcll
ficompl
inc
leave
lea
add
adc
cs
loope
dec
test
test
inc
push
cmp
lret
cmc
add
cmp
lods
dec
call
push
outsl
sub
sbb
mov
jecxz
add
shl
ficoms
xchg
adc
les
shl
mov
xchg
adc
mov
jns
pop
and
xchg
ja
push
iret
mov
pop
in
push
stc
pop
rclb
push
jecxz
add
pop
adc
or
dec
lea
call
xor
inc
inc
test
xchg
sbb
cltd
mov
xchg
adc
in
sub
dec
je
and
popa
arpl
xlat
out
jno
neg
dec
xchg
cmp
adc
adc
loope
add
cmp
dec
hlt
mov
stc
cltd
adc
stc
mov
lret
clc
and
popf
push
movsl
movsb
push
jmp
mov
in
subb
inc
filds
sarb
call
data16
lea
xor
push
or
pop
cmpsb
test
int3
add
or
add
xor
jo
xorb
add
sub
andps
and
pop
sbb
lcall
inc
cmp
orb
xor
gs
loopne
pop
pusha
flds
xor
test
lock
shll
jp
hlt
mov
mov
push
jno
fldenv
push
ret
in
xor
gs
dec
cmpsb
mov
dec
adc
inc
ljmp
push
mov
sub
jmp
dec
lahf
loopne
sti
and
mov
andb
ss
cli
shlb
je
inc
sbb
or
jmp
pop
cmp
xchg
or
mov
or
repz
sub
sbb
cmp
pusha
cmp
jle
fwait
mov
out
add
inc
push
sarl
adc
jb
sbb
mov
dec
loop
add
xor
push
insb
and
fs
imul
and
scas
sbb
sub
mov
jecxz
sub
bound
ss
cmpsb
inc
xchg
mov
fbld
sub
add
lahf
jmp
fdivrs
loopne
pop
cwtl
lds
pop
xor
sbb
int3
xchg
push
or
movzwl
sbb
imul
lock
xor
adc
arpl
pop
adc
pop
loope
sbb
cmpb
add
cld
jo
cmpsl
sub
mov
inc
pop
add
push
fldln2
ja
mov
sub
js
hlt
mov
vpcmpeqw
imul
test
lods
mov
mov
jmp
add
xor
push
inc
inc
bt
test
cwtl
or
xchg
lret
add
clc
lods
pop
push
xor
mov
pop
push
divl
es
sub
xchg
mov
xor
out
dec
cmp
scas
cmp
not
outsb
xchg
and
jae
mov
cli
or
jnp
js
rol
call
cmp
sub
int
push
mov
mov
sub
cmp
add
out
sub
btr
cmp
movsb
outsb
fwait
pusha
sahf
and
mov
neg
fcmovnb
das
loope
dec
std
fstpt
dec
sub
sysret
adc
pop
test
xchg
ret
int3
aas
insb
add
push
pop
pop
inc
mov
mov
arpl
ja
dec
subb
out
nop
cmp
adcb
cmp
stos
imul
lods
inc
inc
and
pop
adc
cli
xor
mov
and
mov
cwtl
lods
xchg
pop
sub
or
mov
xlat
push
xchg
das
add
pop
inc
xor
leave
inc
in
divb
xor
or
pusha
jg
pusha
mov
test
xchg
cmp
iret
mov
scas
mov
adc
cwtl
call
mov
test
xor
cwtl
jns
add
mov
push
pop
or
mov
pop
loope
sub
rcrl
dec
push
jmp
filds
sub
mov
cltd
mov
mov
xor
mov
dec
test
and
inc
shrb
mov
mov
cmpsl
lods
test
or
inc
mov
bound
sbb
jl
pop
and
jp
mov
bswap
adc
imul
xchg
fwait
pusha
inc
or
jno
lret
xor
frstor
ja
jle
sbb
push
pop
push
inc
dec
sbb
dec
jl
mov
cwtl
clc
rorb
pop
in
inc
arpl
test
rol
aam
sub
test
and
fs
mov
bound
sub
push
pop
pop
bswap
idivl
shll
out
cli
dec
out
ud1
mov
stos
into
outsl
mov
cmpb
insb
pop
or
sbb
push
adc
and
or
ret
sub
fidivs
xlat
or
scas
dec
push
dec
lret
dec
cwtl
ds
mov
jmp
add
cmpsb
stc
imul
mov
dec
outsl
mov
ds
add
int
data16
jmp
addl
test
sub
add
fs
cmc
inc
es
xor
mov
insb
xchg
push
in
sub
rolb
mov
xchg
roll
fiaddl
scas
pop
jmp
sub
sbb
negb
in
inc
dec
and
mov
push
loopne
mov
mov
pusha
mov
xor
dec
mov
sbb
pop
movsb
ret
add
icebp
imul
or
xor
adc
stc
xchg
outsl
mov
loope
and
mov
pop
popa
add
mov
fstpt
scas
sub
push
add
and
and
add
push
pop
loope
cwtl
dec
movswl
add
icebp
inc
adc
idivb
mov
or
mov
push
add
xchg
movsl
sbb
movsb
or
aaa
pusha
adc
pop
popa
cmpsb
movb
jle
xlat
sub
add
add
cltd
push
mov
and
pop
dec
adc
push
adc
pop
lea
mov
push
mov
and
add
push
inc
out
push
clc
cmp
movsb
pop
dec
in
jmp
call
or
or
push
pop
pop
mov
mov
aam
dec
adc
mov
adc
and
xchg
lahf
and
xchg
insl
jbe
add
xor
sbb
and
call
rolb
pop
mov
sbb
std
pop
je
clc
dec
xor
adc
test
pop
loopne
aad
add
pop
jno
leave
lds
add
hlt
sub
data16
add
cmp
fsubr
pusha
inc
andb
sub
cwtl
mov
inc
xor
xlat
cltd
filds
adc
sub
adc
xchg
vphaddbq
push
push
push
lret
inc
xchg
adc
cwtl
push
je
rorb
adc
fisttpll
popa
ljmp
sbb
push
popa
or
xor
and
stc
push
outsb
loop
test
lcall
xchg
ret
add
add
cmp
adc
ror
sub
enter
mov
test
mov
cmp
ljmp
shrl
push
andb
movl
repz
push
mov
pop
or
ljmp
xor
cmp
fbld
test
outsl
push
add
xchg
mov
insb
shl
nop
fwait
rcll
sub
in
mov
aam
jl
ficomps
in
mov
sub
arpl
push
and
gs
or
xchg
lahf
add
push
and
cmpsb
add
sarl
movb
leave
add
adc
loopne
addl
dec
cmp
or
mov
or
jmp
sbb
fidivs
daa
mov
sbb
inc
lods
sub
mov
mov
jo
pusha
ret
add
mov
mov
data16
jle
inc
subb
out
pop
data16
xchg
pop
mov
adc
in
fwait
add
movsb
lea
sbb
add
aas
or
movsl
adc
rcll
imul
jbe
dec
adc
or
into
pusha
orb
or
push
mov
mov
fs
adc
mov
movsl
or
movb
les
xchg
and
sub
and
push
or
fildll
loopne
fnstsw
inc
jne
cmpsb
pushf
dec
shlb
outsl
scas
mov
inc
dec
inc
push
rcll
lcall
pop
dec
inc
or
andb
in
neg
mov
mov
xchg
pop
cmp
ret
adc
icebp
leave
mov
pop
dec
cmpb
test
cli
cmpsb
ljmp
mov
orl
mov
in
fcomps
out
xor
mov
add
jmp
push
pop
pop
sub
xchg
dec
mov
push
add
add
pop
push
idivl
adc
and
pop
nop
sti
dec
or
sarb
btr
mov
add
mov
fbld
xor
dec
fldt
roll
mov
or
cmp
push
std
nop
pop
hlt
inc
insl
addr16
fwait
scas
mov
das
daa
mov
andb
cli
push
dec
ffreep
push
add
jl
aas
or
mov
jb
mov
ret
cmp
xor
test
pop
loope
cld
jp
add
pop
add
and
fwait
pop
and
and
idiv
jno
in
xchg
jmp
push
add
neg
out
add
mov
shr
int3
jmp
xchg
add
dec
mov
or
xor
dec
xchg
pop
adc
ja
adc
pop
cmpsb
movsb
adc
push
mov
in
mov
push
fisubl
pop
and
dec
dec
inc
sub
or
ljmp
pop
rclb
mov
add
adc
or
rorb
dec
sarl
pop
pop
adc
repnz
sbb
xlat
testl
sbb
out
iret
sarl
inc
mov
mov
negl
push
pop
mov
js
mov
cmp
mov
rcrb
std
adc
not
xor
stc
mov
mov
inc
pop
adcl
xchg
call
and
inc
aas
add
sbb
cmpsl
out
insb
dec
xor
dec
mov
stos
mov
sub
adc
rcll
and
or
pop
pop
jl
jge
sbb
mov
enter
pop
add
leave
sub
mov
insb
pop
xchg
push
inc
push
mov
push
pop
push
test
mov
mov
mov
adc
hlt
scas
xchg
inc
sbb
push
aas
je
cmpsb
sub
mov
pop
mov
enter
sbb
inc
xchg
adc
pop
adc
cwtl
pop
aas
mov
or
int3
add
lock
add
mov
aas
cmpsl
int
sub
and
icebp
dec
in
mov
roll
inc
mov
add
pushf
fsubrs
pop
or
negl
sbb
cmpb
push
leave
mov
loopne
out
pop
test
jge
ds
dec
add
xorb
mov
test
out
out
adc
loop
push
push
xchg
xchg
cmp
lcall
inc
or
or
inc
neg
xor
add
test
ret
lock
push
pop
or
fisttpll
cltd
cmp
repnz
bound
insb
xchg
jle
mov
stc
xchg
push
pop
pop
mov
aaa
sbb
adc
push
and
pop
pusha
imul
vcmpps
cmp
jl
mov
in
nop
imull
push
popa
adc
cmp
dec
mov
test
add
add
pop
adc
mov
xchg
aaa
cwtl
js
test
cmpsb
lds
and
outsl
dec
sbb
sub
mov
adc
enter
imul
and
rcrb
jno
jne
out
or
mov
xchg
add
sub
aam
mov
add
loopne
jge
mov
mov
cwtl
inc
and
push
lock
mov
sahf
mov
stos
cmp
or
mov
mov
or
xor
rcrl
mov
fadds
int3
xchg
sbb
out
clc
xchg
jecxz
rcrl
bswap
xor
mov
daa
lods
outsl
sbb
mov
lcall
or
ljmp
cmpsb
cmp
pop
loop
jnp
or
jle
xchg
jae
pop
dec
mov
sbb
xor
mov
adc
imulb
shr
fisubs
loope
lahf
dec
movsb
dec
or
push
and
nop
or
out
test
aam
inc
int3
sbb
xchg
push
test
push
push
mov
cs
inc
adc
leave
cmc
icebp
mov
lcall
mov
mov
daa
adc
lea
in
or
in
mov
jns
pop
jb
xchg
testl
jg
mov
ret
mov
sub
sti
ret
sbbl
test
add
aaa
leave
and
xor
not
sete
decl
dec
mov
or
pushf
out
sub
dec
test
inc
call
push
stos
sti
inc
shrl
and
test
shll
dec
dec
sbb
inc
jle
adc
test
ficoms
push
cmp
xor
loop
push
sub
nop
dec
nop
sbb
mov
popa
sub
xor
mov
fildl
and
sub
aas
dec
sbb
jmp
or
xlat
bswap
nop
inc
mov
shlb
or
addb
sbb
sti
loopne
les
adc
dec
pusha
rcll
mov
sbb
imul
pop
and
xor
mov
pop
rcl
repnz
pop
adc
xchg
shrl
loopne
push
and
nop
ret
adc
mov
sar
dec
inc
dec
mov
mov
ror
and
popa
test
test
stos
frndint
xchg
lret
lock
mov
xchg
sbb
sahf
mov
cmpl
adc
test
lea
push
sub
gs
divl
rol
pop
cmp
in
cmpsb
mov
ljmp
mov
sar
or
fldcw
test
cmp
popf
mov
clc
jae
jmp
sbb
popa
popa
mov
popf
pushf
lcall
lock
mov
mov
pop
and
inc
lcall
push
test
dec
int3
ret
hlt
sbb
sbb
push
lds
inc
dec
sub
push
insb
mov
push
test
movl
mov
mov
ret
jbe
xchg
adc
dec
adc
shlb
and
mov
lea
pop
and
insl
xchg
fcmovu
leave
int3
das
jae
add
rcll
fistpll
inc
inc
aaa
push
push
sbbb
mov
test
or
loopne
cmpsb
ret
xchg
andl
int
push
cmpsl
add
loop
mov
nop
nop
dec
cmpsb
and
sub
mulb
loope
xor
fdivl
xchg
in
xchg
popl
ljmp
arpl
rorl
cmp
jp
add
cmp
pop
jmp
add
int
enter
aas
nopl
iret
neg
int3
sbb
addr16
push
add
imul
push
xor
mov
fdivs
mov
or
add
adc
outsb
fs
dec
add
lahf
adc
lea
xor
cmpsb
xchg
and
push
and
cmp
bound
add
cmp
sbb
pop
outsl
cltd
fiaddl
les
faddp
inc
adcl
call
fdivr
imul
in
and
dec
cmp
dec
fwait
inc
jmp
sub
cld
inc
ret
scas
nop
dec
lds
ret
leave
dec
in
lods
sub
mov
inc
or
nop
sub
inc
fmull
add
jle
shlb
cs
bound
jns
and
test
int3
icebp
orb
push
enter
mov
je
dec
xor
push
lahf
push
lds
das
dec
jmp
aas
cltd
dec
movsl
scas
dec
inc
pop
lds
das
fidivl
push
mov
test
sbb
lret
dec
xor
addb
sbb
pop
sbb
and
inc
push
aam
pop
lahf
in
or
inc
sub
bound
dec
dec
ss
sti
add
ja
stc
int3
rorl
or
inc
fisubs
mov
lods
repnz
xor
icebp
repnz
xchg
dec
mov
dec
ljmp
punpcklwd
jo
jmp
push
cli
mov
dec
add
int3
jl
adc
data16
jp,pn
inc
sub
sub
adc
push
std
pop
mov
inc
sub
popa
sbb
inc
xor
adc
dec
cmp
ljmp
jns
in
aam
mov
daa
cmp
ror
xor
test
rcr
loop
sub
sbb
imul
dec
syscall
xchg
call
cmpsl
sub
lock
fnstcw
add
int
cwtl
fsubl
int
xchg
mov
or
fwait
cmp
ret
jmp
sbb
jo
pop
adc
daa
pop
push
loopne
sub
lock
adc
jmp
pusha
jmp
xor
cli
and
sub
xchg
jle
in
sub
in
stos
scas
test
insl
fisubrs
sahf
arpl
sbb
in
cmp
cmpsb
add
leave
scas
cmpsl
mov
push
int3
cmpsl
lret
sbb
pop
gs
xchg
std
mov
or
push
jbe
jne
enter
xchg
push
dec
lods
cld
jge
and
pop
ljmp
lods
push
je
outsb
mov
mov
iret
scas
lods
cltd
mov
mov
lcall
lock
push
lods
xor
out
adc
shl
pop
es
inc
jmp
add
cmp
movsl
into
sub
jbe
je
sbb
push
cmp
jle
cwtl
and
in
pop
outsb
push
sub
push
es
sub
int
mov
cmp
sub
data16
clc
sbb
fistps
push
sbb
cld
test
pop
in
es
es
cmpsb
aaa
ficompl
mov
push
in
call
fwait
inc
mov
jmp
and
rcll
push
adc
mov
push
jge
adc
mov
repz
mov
hlt
adc
fldt
repnz
pop
pop
ficomps
rcl
js
dec
mov
notb
inc
enter
push
fst
pop
sbb
pusha
adc
sub
fdivrs
adc
pop
ss
sub
rcr
popf
jne
iret
dec
push
sbb
inc
dec
xor
jbe
pop
fldl
ret
jne
insb
int3
jo
movsl
jmp
and
inc
cmpb
lds
sub
jb
adc
insb
mov
test
lret
jge
and
insl
mov
xor
mov
or
das
and
lret
sub
fadds
lcall
pop
jmp
jmp
call
push
or
in
adc
push
loop
lds
or
hlt
xor
adc
xchg
enter
push
push
mov
sbb
mov
lret
or
iret
or
test
es
cs
iret
fldl
popf
aas
lret
mov
jl
movsb
aad
cmp
jnp
sub
mov
outsb
jnp
pop
loopne
pop
fwait
scas
mov
sbb
out
cmp
pop
pop
mov
sub
leave
jbe
cmp
in
jne
dec
push
adc
out
and
fisubrl
push
adc
or
sub
ret
fidivl
stos
mov
arpl
push
imul
addb
xlat
xor
mov
popf
shlb
and
hlt
pop
push
or
mov
cwtl
test
pop
xor
xchg
icebp
outsl
pop
fldenv
dec
or
mov
xchg
pushf
sub
jne
test
dec
mov
das
orl
mov
jge
push
sahf
xchg
pop
sbb
stc
inc
xor
mov
cmp
imul
jns
or
cmpsb
mov
pushf
inc
inc
adc
add
push
rcrb
leave
xchg
adc
xchg
mov
add
mov
fmull
fiadds
lods
adc
mov
fidivl
cli
push
je
das
xor
mov
dec
jl
ja
push
int3
sarb
push
push
popa
mov
xchg
jne
cmp
push
cmp
jmp
js
sbb
pop
mov
lret
push
cmpsb
lea
gs
xor
int
fidivl
cmpsl
das
movsl
xor
or
icebp
xorb
nop
sub
pop
imul
mov
cmp
popf
adc
daa
cli
inc
cmp
mov
ljmp
lods
cwtl
daa
sub
xchg
jno
rcrl
pop
jns
mov
in
imul
or
mov
xor
cmp
aad
gs
lods
mov
je
sub
pop
loopne
pusha
in
jbe
pop
push
jae
lcall
ret
daa
sub
cwtl
xchg
inc
nop
insb
cmp
sbb
sbb
in
push
fwait
dec
rclb
ficoms
push
mov
jae
jnp
and
mov
pop
fcoml
rclb
dec
or
loop
mov
push
rorb
js
movsb
icebp
jbe
mov
lock
mov
aas
pop
iret
or
int3
icebp
into
int
mov
rorl
mov
sbb
shll
adc
movsb
jmp
push
mov
sub
out
inc
aad
das
xchg
cld
jp
xchg
jle
cvtdq2ps
sbb
dec
mov
xorb
push
loope
shl
loope
pop
ljmp
fbld
dec
test
xor
cmp
xor
fsubp
xor
mov
cmpsl
roll
sahf
aad
inc
mov
in
push
pop
arpl
aaa
fstpl
mov
dec
in
lfs
repnz
xor
enter
popa
push
fisttps
loop
sar
and
jmp
int
cmp
test
lcall
bound
mov
frstor
cmc
fisttps
and
xor
aad
mov
lock
outsb
dec
out
pop
shlb
shl
dec
aam
push
loopne
out
inc
pusha
mov
dec
xchg
outsl
orl
dec
mov
mov
xchg
push
xor
inc
add
xchg
lahf
fimull
adc
push
aaa
jle
and
fcompl
jo,pn
add
cld
test
test
aaa
test
imul
test
lea
lea
inc
pop
js
stos
fsubrs
mov
repnz
lcall
or
ret
jl
sub
int
call
mov
mov
xchg
add
jg
pop
and
xor
jae
in
in
sub
leave
xor
lahf
and
jmp
mov
mov
add
sti
stos
mov
popf
fwait
idiv
jecxz
das
shll
mov
or
push
cltd
jnp
mov
popa
lahf
movsb
xchg
xchg
adc
adc
lods
das
mov
es
cmp
sahf
push
inc
imul
mov
sahf
lcall
test
dec
xor
inc
jae
daa
ret
jnp
pop
xor
jae
popl
fistpll
and
mov
je
outsl
mov
xor
xchg
sub
add
jle
mov
xchg
sbb
sti
push
and
mov
in
popf
mov
cmp
pop
dec
scas
inc
fwait
es
sub
inc
mov
and
mov
mov
sub
sub
push
jbe
sub
cwtl
cltd
add
scas
das
mov
aaa
mov
pop
inc
stc
es
xchg
int3
push
js
aam
jl
jbe
fistl
out
cmp
int
out
sub
mov
adc
inc
jbe
jecxz
xchg
pop
sahf
mov
cmp
push
rorb
xchg
mov
xlat
movsb
ja
dec
or
xchg
jg
inc
mov
jmp
out
shrl
adc
add
xchg
and
pop
pop
cltd
and
push
out
lret
lret
push
xor
xor
loop
lcall
clc
sub
push
out
sbb
jg
lods
push
push
in
push
lock
out
insl
pop
adc
dec
cmp
or
std
mov
adc
xchg
push
aad
mov
inc
scas
add
pop
fs
loopne
mov
or
push
pop
xstore-rng
cmpsl
subb
js
and
icebp
mov
mov
push
jle
out
mov
xor
ss
loop
rcrb
xchg
jno
jno
arpl
into
add
insb
sub
adc
cltd
call
push
addr16
mov
or
jae
jmp
mov
xchg
mov
adc
ret
repz
push
xchg
test
pushf
ja
mov
dec
in
or
mov
adc
inc
sarb
mov
fiadds
push
sbb
iret
bnd
rolb
sub
or
dec
cmpsb
popf
out
jmp
jmp
adc
sub
sahf
lods
and
push
jp
push
mov
adc
das
mov
push
test
push
fcompl
sbb
xor
fmul
fistpll
cmp
push
xor
mov
push
inc
call
mov
in
cmp
sub
adcb
clc
add
fidivl
dec
jo
and
mov
cmp
mov
inc
xlat
ss
xchg
ss
mov
sub
je
cmp
fistps
jg
mov
clc
sub
in
test
out
dec
stc
sbb
shufps
xchg
pop
daa
sub
push
jno
insl
aad
popa
sub
call
push
cwtl
ss
fwait
orl
mov
or
rcrb
push
in
insl
ja
movsl
lock
or
xor
pop
xchg
frstor
mov
dec
push
push
iret
ss
xor
inc
in
sbb
loopne
in
cmp
dec
cmp
mov
jae
push
inc
clc
mov
xchg
test
stos
jne
pop
into
and
dec
xor
xchg
push
je
scas
ret
xor
inc
dec
dec
lods
in
dec
add
popa
sub
ret
xor
ljmp
mov
js
mov
mov
xor
fsubrp
addr16
cs
out
int3
or
dec
mov
mov
test
jmp
and
stc
aaa
pop
stc
add
pop
je
mov
test
dec
jg
ja
cmp
bound
and
push
inc
test
aaa
ds
jmp
cmpb
sbb
push
push
xchg
add
stc
inc
sbb
xor
or
xor
dec
mov
add
or
add
cmpsb
lods
sub
insl
mov
mov
jecxz
divb
xchg
xchg
pop
pop
outsb
loopne
sbb
inc
mov
jb
into
jo
aaa
add
inc
cmp
mov
into
ret
fwait
pop
pop
adc
adc
or
mov
jb
stos
sbb
cmpsl
xor
das
sub
and
mov
cmp
aam
mov
ljmp
dec
sbb
sub
adc
mov
cmp
or
jecxz
pop
js
mov
in
outsl
cwtl
mov
push
scas
cmp
jbe
push
jecxz
mov
out
int
jbe
inc
xchg
mov
and
cmp
inc
addr16
arpl
in
jne
mov
lock
mov
lds
mov
xchg
xchg
mov
pop
clc
xchg
test
jne
in
sub
jns
and
mov
stos
or
and
or
sti
xor
outsb
inc
jns
int3
rorl
fs
loop
loopne,pt
cmpsl
cmpsb
pop
xchg
xchg
nop
and
icebp
cmp
mov
sbb
adc
sub
jb
cmp
lahf
inc
push
gs
mov
cmpsb
mov
mov
add
xor
je
pop
sbb
jg
adc
push
imull
je
jl
lret
fs
or
cmp
fdivrl
imul
js
pop
xchg
jmp
dec
and
mov
stc
pushf
nop
cmpsb
mov
or
push
push
bound
and
cmp
jno
aas
repnz
lods
and
mov
jno
pop
fwait
and
or
dec
xchg
xchg
mov
jb
sub
dec
inc
inc
jl
mov
adc
push
ss
scas
xlat
add
mov
das
sbb
daa
movl
xchg
fnsave
loope
stos
jl
add
jge
test
jge
daa
loope
pusha
mov
sub
insb
and
mov
insb
xchg
arpl
jnp
in
lea
xchg
out
loopne
and
push
lcall
sub
inc
je
adc
sub
sbb
jmp
or
lods
ror
rcr
es
rorl
jae
xchg
xchg
inc
pop
mov
jns
inc
xor
push
mov
dec
sbb
push
jo
mov
sbb
jne
fstpl
xchg
popf
or
popa
lcall
lods
xchg
insl
pop
lds
in
lea
sub
xor
popl
loopne
adc
or
mov
out
mov
sbb
cwtl
sub
adc
sub
mov
nop
bound
cmp
ljmp
add
ja
shll
jge
jne
dec
scas
sahf
jbe
push
add
fucom
cmp
mov
or
pop
mov
add
fs
and
inc
inc
jo
loopne
ret
mov
sbb
push
and
sbb
jle
mov
pop
data16
and
jne
push
inc
adc
mov
enter
sub
xor
mov
pop
das
in
xor
pop
int3
enter
pushf
movsb
cmp
cmp
pop
movsb
mov
movb
insb
dec
ja
inc
cmc
mov
push
insb
push
cmpsb
and
movsl
sbb
loope
lods
sahf
jecxz
cmp
orb
xor
jecxz
mov
sub
insb
mov
or
std
sahf
inc
fldl
jo
jbe
pushf
xlat
xor
es
movsl
popa
ret
imul
das
icebp
int3
cmp
mov
inc
fcomip
or
dec
push
and
push
pop
sub
xchg
fsts
sbb
push
and
xchg
stos
mov
fldcw
push
xor
mov
loopne
mov
jbe
add
je
cmc
lret
inc
repz
sbb
push
xlat
fstpl
pusha
mov
test
arpl
fsub
push
mov
shrb
pop
fists
gs
dec
and
sub
dec
push
mov
mov
lods
ds
lcall
loopne
xor
inc
mov
test
mov
push
lods
pop
fisubrs
popa
leave
das
arpl
mov
pusha
aas
enter
ds
mov
test
in
cmc
cmp
xor
pushf
sbb
mov
add
xchg
scas
movb
sbb
rclb
and
rolb
fs
xchg
add
idivb
mov
aad
push
hlt
int
mov
cli
scas
popa
insb
inc
sbb
xchg
pop
ret
mov
pop
mov
pop
mov
fstps
dec
xchg
push
pop
rorl
jnp
cmpsl
test
adc
mov
sbb
popa
mov
ljmp
cmpsl
pusha
jne
divb
inc
pushf
mov
nop
pop
insb
or
in
cmp
daa
xchg
mov
popa
mov
xor
cwtl
popf
mov
loope
mov
mov
out
insb
inc
sbb
outsl
es
push
sarl
adc
inc
sbb
pop
fsub
pop
icebp
nop
xor
xchg
call
mov
adc
adc
shlb
jne
scas
ret
sbbl
pushf
xor
test
sub
mov
cmp
cmp
pushf
mov
mov
inc
cwtl
inc
jmp
arpl
dec
and
jno
mov
inc
in
and
jl
and
loop
popa
sbb
aam
xor
fistps
inc
sub
dec
push
mov
xchg
xchg
add
gs
test
pushf
bnd
out
aas
rorb
xchg
adc
stos
adc
jo
or
inc
gs
scas
cmpsb
aad
pop
pusha
test
psubb
into
sub
in
adc
inc
or
in
jbe
sbb
std
ret
out
xchg
lahf
mov
data16
cmp
mov
pop
loope
fsubrl
push
push
es
xor
jns
paddsb
xor
lock
pop
and
push
sub
idiv
push
xor
imul
dec
or
lcall
pusha
ret
sub
mov
scas
push
and
mov
lea
in
cmp
jns
cmp
je
sub
jl
scas
dec
outsl
fnstsw
insl
push
cmpsb
pushf
dec
fisubrs
mov
outsb
push
in
cmpsb
in
stc
or
or
dec
je
stos
pop
adc
adc
inc
sbb
pop
xchg
jne
inc
cltd
xchg
or
fimull
jmp
sahf
outsb
test
je
mov
sbb
xchg
mov
cmc
mov
orb
subb
mov
mov
cmp
mov
lcall
push
cltd
add
addr16
mov
push
jnp
adcl
std
negb
lods
test
mov
jecxz
dec
or
aad
ret
hlt
rcrb
mov
bound
add
gs
or
xchg
clc
mov
xchg
dec
es
cmp
push
sbb
sbb
and
mov
in
xchg
or
pop
fs
push
sub
fisttpl
in
add
dec
mov
xlat
jg
or
lods
ds
les
test
out
or
arpl
test
jno
pop
dec
mov
jp
push
inc
popa
imull
jb
adc
insb
test
cmc
mov
mov
rcrl
ljmp
inc
sarb
and
cmp
inc
xlat
imul
dec
sub
and
in
sbb
jbe
daa
mov
testb
push
cmpsb
xor
sub
in
lcall
push
add
jne
add
dec
pop
pop
jp
clc
mov
outsb
jns
mov
and
jne
mov
cli
inc
pusha
adc
int3
test
das
mov
xchg
sub
pop
pop
mov
popa
jmp
or
jp
leave
dec
mov
rol
cld
jne
xor
loopne
xor
xchg
xorb
pop
shr
xchg
imul
in
in
loope
sti
lahf
and
xor
inc
lock
jo
pop
push
sub
fimull
adc
and
mov
ljmp
cmpb
jae
inc
sti
imul
inc
push
into
jns
pop
divl
out
sbb
mov
mov
movsl
xor
cmpsb
adc
pop
popa
stos
outsb
stos
sub
xchg
insl
cmc
bound
jb
xor
cli
cmp
call
jg
insb
addr16
dec
js
cmpsl
push
dec
inc
inc
arpl
sbb
xlat
paddd
sbb
jp
fsts
mov
ret
mov
push
lods
jnp
lods
int3
and
add
fcomps
repnz
jg
outsl
adc
or
clc
fisubl
je
push
or
popl
push
std
xlat
jns
jle
out
les
xor
fsubl
jbe
lods
xor
sub
mov
fisubl
cld
out
enter
pop
mov
and
fdivr
test
xchg
push
jne
dec
ja
test
inc
xchg
xor
aad
in
sar
xlat
mov
les
jp
push
or
push
sahf
dec
cmp
jl
fimuls
adc
jmp
push
mov
in
int3
ficoml
sbb
cs
inc
dec
ljmp
call
mov
sbb
sub
push
fcompl
push
pop
push
scas
push
push
xor
cmovge
mov
sbb
and
movsb
fbld
jg
mov
xchg
daa
mov
xchg
das
ret
xor
pop
addb
dec
bound
push
bound
inc
bound
inc
bound
inc
bound
push
fnstenv
sub
ja
test
cmp
mov
pop
out
hlt
fstp
shll
iret
push
jne
dec
insb
xchg
sub
mov
lods
push
pop
cmpsl
int
insb
and
loopne
fsubs
ss
std
fdivs
pop
push
insl
lcall
insl
fcompl
dec
negl
dec
mov
outsb
adc
pusha
aad
lcall
jbe
shl
jne
xor
cmp
add
sahf
jl
push
xor
mov
addr16
cmpsb
movsl
lahf
ljmp
inc
pop
repnz
add
dec
dec
fildll
jp
add
adc
jge
in
cmp
jb
aad
and
and
inc
loope
gs
pop
into
dec
ret
dec
inc
mov
cs
lock
das
std
pop
adc
pop
test
jnp
push
stos
fs
loopne
inc
mov
sbb
pop
xor
inc
repnz
iret
lahf
loop
mov
mov
adc
fwait
jne
insb
fisubrl
inc
mov
push
jge
mov
in
out
dec
and
sub
scas
in
fistps
adc
popf
fcoml
gs
test
xchg
cmp
xlat
pop
fldt
adc
sub
insb
jne
xor
addr16
sbb
iret
in
mov
sub
dec
test
cmpsb
pop
pop
jecxz
or
mov
stos
mov
scas
push
cli
gs
enter
lock
or
or
sahf
jecxz
pop
xchg
sbb
xor
xchg
lahf
sub
mov
cld
pop
pop
sub
add
jge
push
dec
sub
mov
mov
push
loop
push
ljmp
pop
push
lock
mov
sahf
push
jle
popf
jns
xor
and
outsb
adc
jl
and
dec
dec
pop
sbb
mov
ja
mov
mov
sbb
inc
and
fwait
test
xchg
inc
pop
inc
sub
xchg
cmp
enter
lret
inc
mov
pop
sbb
test
pop
roll
call
dec
pop
mov
popf
mov
cwtl
push
insb
insl
cs
in
cmp
mov
lret
add
iret
insb
ret
push
outsb
jg
movsb
pop
or
adc
jns
inc
mov
cmp
hlt
xchg
lret
push
inc
lret
sahf
int
and
gs
loopne
pop
je
mov
xor
cmc
and
jae
mov
jle
cltd
inc
jmp
pop
lcall
dec
xor
push
sbb
adc
daa
sub
mov
xchg
mov
push
gs
jb
and
cmp
rol
pushf
addr16
lcall
mov
scas
push
pop
dec
mov
lcall
xor
xchg
aad
xchg
aas
push
jns
dec
pushl
fistps
cld
sub
mov
dec
xchg
sahf
or
scas
xchg
int
jg
jmp
mov
xlat
jo
mov
pop
popa
sub
loop
lods
lahf
into
sub
xor
pop
add
inc
mov
or
addr16
test
inc
push
add
call
mov
out
add
addr16
or
insl
rol
jg
mov
das
and
cmc
and
sub
mov
pop
pop
inc
inc
into
cmpsb
cmp
push
outsl
push
outsl
clc
loop
bound
mov
mov
out
cwtl
mov
mov
scas
mov
les
fwait
mov
aam
rorl
std
push
dec
pop
push
arpl
dec
enter
push
lock
test
in
inc
pop
negb
jne
movsb
cwtl
bound
pop
stos
pop
xchg
out
fwait
sub
into
add
lock
dec
arpl
pushf
mov
int3
jg
shlb
jge
jbe
jo
lods
sbb
mov
lret
cmpsl
push
out
mov
push
add
scas
xor
lea
push
mov
and
mov
test
int3
lods
jne
daa
int3
jbe
push
std
add
and
push
mov
xor
sub
daa
cld
imul
adc
sbb
lea
and
hlt
push
adc
insl
cld
push
mov
cmp
inc
jl
add
dec
insl
pushl
push
push
sbbl
mov
pusha
pop
sbb
push
and
outsl
int3
mov
push
dec
jnp
xor
mov
sbb
mov
insl
pop
cmpsb
scas
fldcw
insb
fcmovnbe
cli
outsb
push
pop
jmp
fnstcw
xchg
mov
cli
jmp
ret
lcall
pop
les
add
lret
xlat
rorl
ja
rcr
cmpsl
xor
rcll
inc
push
and
push
addr16
jns
push
and
int3
mov
adc
aad
dec
insl
xchg
lods
lcall
cmpsl
or
dec
mov
cmp
sbb
popf
jbe
outsl
jp
jg
pushf
ret
das
data16
inc
out
lods
xchg
mov
or
sub
inc
hlt
push
popa
gs
hlt
mov
cmpsb
adc
sbb
push
add
cwtl
dec
sub
dec
fs
push
arpl
pop
aas
fdivl
int
and
and
test
mov
push
repnz
sarb
inc
notb
shrb
jmp
imul
pop
cmp
push
repnz
push
and
ficoml
addb
jl
cmpsl
insl
mov
stos
mov
push
xor
inc
dec
xlat
mov
cmc
sub
out
inc
pop
iret
mov
stc
push
loopne
sbb
adc
aas
enter
inc
inc
sub
xchg
cmpsl
push
movsb
cld
xorb
jbe
push
sub
imul
dec
pop
arpl
outsb
xchg
lahf
sarb
pop
adc
push
cmp
cwtd
xor
add
xor
xchg
outsb
ror
jge
jl
hlt
dec
out
cwtl
fsub
test
or
outsl
push
cmpsl
pop
adc
fs
out
xor
fcoms
jae
or
cmp
popa
sbb
pop
xor
jmp
insl
or
scas
sub
mov
pusha
mov
jmp
jb
or
jle
mov
rclb
fcoms
pop
push
dec
sub
jae
xchg
dec
cmp
dec
xchg
dec
xchg
int
push
rorl
xchg
sahf
fsts
sbb
psrlw
add
loopne
jne
mov
addr16
cltd
lahf
xlat
shll
outsb
mov
dec
pop
xor
std
push
int
adc
cld
cmpsl
and
adc
lret
cmpsb
and
adc
mov
pop
sub
mov
aas
sub
into
idivl
pop
std
adc
or
outsb
sub
mov
lods
sbb
outsb
rol
jmp
push
in
push
jne
xor
pop
shl
adc
insb
iret
in
mov
sub
xchg
in
pop
lods
ljmp
inc
rcl
das
test
pop
ljmp
pushf
xor
adc
dec
test
sub
cwtl
mov
std
xchg
mov
or
ret
jb
ret
xchg
inc
shr
dec
adc
sub
dec
mov
dec
push
sbb
jge
cmp
cmpb
jge
cmp
lods
cmp
shll
push
fsubr
imul
inc
pop
xor
cwtl
jne
je,pn
outsb
xchg
xchg
cmp
inc
mov
or
or
movsb
push
arpl
cld
pop
add
neg
in
mov
fcompl
mov
jns
sbb
repz
xor
push
xchg
aad
hlt
sbb
mov
rolb
jg
andb
xor
push
orb
jle
fidivl
call
cmp
jo
xor
mov
jmp
push
ljmp
outsl
scas
add
sbb
popf
mov
out
imul
aad
jne
lods
repz
xchg
dec
jp
imul
jb
push
push
pop
bound
cmp
jle
and
test
pushf
or
es
imul
pop
mov
pop
xchg
test
pusha
scas
les
loop
pop
xor
fnstenv
xchg
and
loopne
in
pop
and
testb
xchg
sbb
pushf
scas
push
loopne
fs
cmp
jge
mov
mov
adc
stos
push
push
idivl
and
xor
add
outsl
into
scas
dec
sub
xchg
in
adc
or
test
out
lods
add
jb
loope
in
push
pushf
sub
js
insb
lods
imul
jge
mov
je
mov
cmp
and
test
gs
jae
cli
imul
and
dec
pushf
push
inc
cmp
iret
push
jae
cmp
xchg
jo
xor
pushf
ss
dec
ljmp
fsubs
incl
lock
pcmpeqd
sub
int3
repnz
aam
sbb
xor
scas
cmp
cmpsl
daa
dec
jge
mov
lahf
jmp
push
inc
add
ret
hlt
fmull
bound
mov
pop
mov
xchg
push
pop
jnp
aad
clc
andb
xor
std
das
jne
fcmovne
js
cmp
int3
dec
cs
stos
fcoml
addr16
shlb
pop
in
inc
adc
insb
lahf
xor
cmp
out
pop
mov
adc
lret
loope
lock
arpl
jbe
loope
inc
cli
lahf
dec
popf
xor
sbb
mov
data16
mov
push
sbb
adc
pop
push
mov
mov
movsl
mov
xlat
arpl
arpl
pop
fidivrl
into
ss
xor
mov
cmp
inc
jne
and
pop
sbb
stc
rolb
jg
popa
sub
cmpsb
nop
inc
xchg
mov
nop
movsl
es
adc
daa
pop
lods
test
xchg
rclb
push
add
add
dec
push
je
fwait
stos
and
or
jp
cmpl
cs
int
int
stos
mov
sarl
lods
ret
dec
or
push
out
lock
xchg
fnstsw
xchg
nop
sub
lods
test
or
sbb
dec
inc
std
jmp
mov
inc
jbe
push
or
fisttpll
pop
rclb
cmpsl
popf
and
in
adc
dec
lret
aad
xor
popa
outsb
adc
pop
mov
data16
push
mov
dec
push
shll
jl
pop
ljmp
cmc
sahf
xor
out
and
push
mov
ds
aaa
mov
inc
pop
out
cmc
jle
leave
or
ficoml
out
adc
push
jnp
pop
insl
les
lret
aaa
pop
sub
xlat
mov
pop
bnd
cmp
mov
mov
iret
cmp
sub
shrb
les
jo
sub
loope
iret
cmpsb
subl
ja
fwait
int3
push
in
jne
inc
fistl
loope
sbb
xor
aam
push
fistps
test
mov
xchg
call
movsb
sbb
sub
add
push
sub
fcoml
pop
inc
inc
jb
mov
jno
xor
jo
jg
fs
filds
adc
or
test
imul
loope
xor
inc
enter
mov
jle
dec
push
enter
lds
cmp
cmp
repz
imul
jae
inc
mov
movsb
mov
mov
popa
push
out
insl
xor
popa
popa
daa
mov
cmpsb
fs
mov
imul
test
lahf
cmpsb
adc
cld
sti
ja
subl
movsb
xor
loop
pusha
lcall
lcall
sbb
into
jae
inc
lods
or
push
adcb
sub
cmpsb
xchg
inc
ljmp
subb
inc
dec
mov
pop
pop
gs
loopne
pop
or
ret
outsl
mov
lahf
sub
enter
sbb
push
gs
xchg
push
cmc
fnstenv
add
sti
adc
lahf
or
push
xor
inc
and
push
stos
sbb
ljmp
add
dec
adc
jno
je
popf
cwtl
andb
aam
test
shl
sahf
push
movsb
ds
cmp
mov
gs
sbb
cmp
jp
xor
xor
sti
xchg
inc
je
lds
cmp
int
jbe
lahf
sarl
scas
mov
or
pop
stc
nop
add
cmp
ds
out
test
jle
sub
imul
das
hlt
imulb
insl
mov
das
push
jno
dec
outsl
xchg
push
cwtl
sbb
jo
fimuls
pop
scas
insb
jmp
push
mov
lret
mov
ja
sub
and
popa
aad
addr16
pushl
jo
std
sub
outsb
das
cmp
outsl
pop
and
push
mov
xchg
out
out
mov
in
daa
or
push
es
sbb
sbb
outsb
outsb
xchg
rorb
fs
adc
icebp
daa
cmp
inc
cs
int3
inc
subl
dec
scas
cwtl
mov
xor
inc
clc
mov
test
popf
std
adc
in
gs
add
sub
scas
add
lcall
fstpt
sbb
adc
adc
jae
outsl
js
imul
push
insb
cli
int
fldenv
and
stos
pop
sub
push
push
test
addl
imul
dec
cmc
out
cwtl
and
iret
stos
pop
movsl
xchg
ret
bound
or
jb
jge
and
xchg
stos
pop
test
iret
negl
pushf
mov
push
lds
mov
pop
push
pop
cmc
adc
out
ret
dec
mov
adc
hlt
jae
out
jae
sub
in
xor
xorb
bound
or
les
inc
int
lds
aam
pop
or
dec
pop
sub
cli
clc
mov
daa
and
mov
pop
mov
mov
xor
sub
xor
adc
mov
push
fwait
xchg
xor
mov
xchg
add
xor
roll
jnp
cmpb
add
int3
jecxz
fs
popa
xchg
les
insb
or
bound
mov
xor
je
insl
aam
test
mov
mov
xchg
jg
movsb
cmpb
orb
inc
pusha
and
lea
dec
mov
mov
ret
mov
and
mov
out
mov
jno
fiaddl
cwtl
cmpsb
movsb
fs
sbbl
add
bound
out
mov
xchg
xor
hlt
int
jle
cmp
mov
out
fmulp
fwait
pop
add
lods
pop
lahf
pop
xchg
call
cmpsb
popa
sub
xor
clc
mov
xchg
dec
inc
push
rcll
jne
ret
mov
mov
lret
mov
jbe
mov
ss
jp
mov
inc
jns
decl
rclb
sbb
jl
push
repz
dec
mov
icebp
dec
xor
cmp
sbb
jge
imul
addl
dec
insl
ret
jae
xchg
inc
dec
mov
inc
pop
loop
jnp
or
mov
xchg
clc
xor
push
pop
shlb
out
vpsrlw
paddsb
push
and
cmp
adc
xchg
mov
fcmovnb
lock
inc
movaps
sbb
mov
fbstp
cltd
pop
daa
xchg
pop
daa
aad
mov
in
sbb
lcall
add
mov
test
and
cwtl
cmp
sub
mov
hlt
sub
and
sub
int
inc
dec
push
int
push
sarl
and
xor
in
or
mov
test
outsl
or
adc
inc
mov
xchg
lcall
hlt
xor
jg
bsr
push
test
pop
sahf
mov
call
adc
lock
cmp
mov
push
fcomp
add
and
xchg
insb
int3
xchg
mov
mov
pushf
loopne
lock
insb
xchg
xor
js
add
sub
popa
xchg
push
lahf
xchg
shll
inc
mov
movsb
dec
jne
adc
sub
sub
sub
xchg
in
xlat
gs
adc
daa
imul
icebp
imul
cmpsb
pop
cmp
sahf
and
les
cmpsl
rolb
bound
add
insl
mov
cmp
mov
jae
mov
jno
mov
dec
sbb
jl
stos
sbb
repnz
mov
inc
push
xor
pop
push
popf
pop
pop
cmp
movsl
pavgw
cmpsl
out
inc
stos
adc
inc
push
mov
test
shr
das
sbb
jl
stos
sbb
mov
xchg
int
push
pushf
mov
faddl
push
jecxz
ds
sbb
sub
and
push
loop
sbb
mov
xor
sub
mov
pop
outsb
daa
cwtl
xorb
cmp
xchg
pusha
and
std
inc
sub
testl
mov
jl
mov
mov
jno
pop
pushf
and
xor
lock
fadds
std
pushf
insb
fldt
adc
and
sub
out
adc
mov
mov
lods
int
sbb
lock
loope
in
push
in
and
or
add
test
ljmp
mov
pop
sbb
roll
mull
bound
xchg
mov
xor
in
fdivl
and
in
and
das
sbb
das
sub
out
out
icebp
mov
sbb
add
xor
ror
pusha
pop
ja
push
stc
inc
fiaddl
jb
aaa
fidivrs
mov
or
xchg
das
adc
xor
cmp
push
xor
test
sarl
xchg
fs
push
dec
lock
mov
adc
out
sub
sub
xchg
push
int3
pop
jge
inc
cmpsb
jge
cmp
mov
mov
mov
lret
xchg
jmp
sbb
test
sub
mov
test
mov
jo
add
jl
lock
jl
xchg
sahf
aam
test
repnz
or
scas
add
mov
pop
insb
and
sub
ret
adc
mov
out
cwtl
mov
out
mov
push
and
cs
test
jg
fsubrp
mov
jo
fs
adc
push
mov
or
stos
push
fmull
xchg
cmp
sub
nop
jae
push
sbb
repnz
faddl
addr16
cmp
sub
fs
cmp
jne
dec
add
add
ficoml
or
cltd
fisttpl
jge
and
jle
push
jb
inc
inc
insl
jnp
cld
inc
cmpb
fidivrs
pop
push
add
mov
dec
cmp
push
jb
add
dec
and
sbb
test
push
push
lock
std
push
ret
enter
or
loope
cmp
bound
icebp
cmpsb
push
incl
xchg
adc
fnsave
or
lcall
push
lret
arpl
cmp
sbb
mov
roll
nop
test
mov
and
mov
js
xlat
pop
and
dec
lea
jl
xchg
cli
shll
mov
fcomps
fsubrl
add
decl
aam
push
fisttpll
sub
pusha
out
scas
jmp
aad
dec
push
cli
push
lahf
sbb
sahf
sub
sbb
inc
push
or
or
mov
sbb
aam
popl
push
pop
insb
mov
aam
enter
jg
xchg
mov
cmp
mov
outsl
sub
fistpl
stos
and
sbb
jmp
sbb
adc
push
stos
fsubrl
shlb
mul
or
cmp
int
movsb
push
mov
mov
pop
mov
clc
repz
adc
or
add
sub
mov
adc
pop
imul
sti
adcb
inc
inc
scas
sbb
fcomps
test
add
xchg
xor
add
lahf
pop
pop
sbb
jne
jl
hlt
pop
je
and
push
or
movsb
or
pop
add
arpl
push
jbe
add
lea
dec
clc
mov
xor
subb
xor
daa
push
mov
jp
dec
xlat
jbe
std
dec
scas
xor
inc
push
ret
into
xchg
ja
pop
dec
movsb
popa
test
sbb
dec
add
mov
jne
dec
jns
test
fdivl
pop
mov
add
rcrb
test
pop
arpl
getsec
movsl
pop
nop
outsb
ret
ror
lods
push
pop
pushf
mov
das
outsb
pop
and
push
stc
pusha
xor
outsb
mov
or
test
mov
inc
fdivrs
mov
pop
loopne
cmp
mov
pop
fisttpl
push
sub
adc
lret
stc
xor
sub
mov
dec
push
sub
leave
dec
and
or
xchg
arpl
or
pop
xchg
sarl
push
and
les
pop
sbb
movsl
daa
popa
movsb
push
dec
je
pushf
jns
mov
jnp
inc
xor
cmp
dec
sbb
xchg
gs
push
popa
fwait
or
jne
icebp
or
add
add
mov
dec
pop
push
lods
cmpsb
fwait
push
jne
jl
lds
jl
adc
mov
andb
out
or
dec
popf
or
ljmp
cld
nop
leave
test
ss
pushf
jns
stos
adc
mov
mov
ja,pt
or
shll
push
movsb
sub
mov
shlb
outsl
outsb
shlb
cmp
pop
loopne
sub
mov
test
movsl
repnz
dec
icebp
shrl
fcoms
outsb
imul
adc
fdivp
leave
in
fwait
push
push
xor
xchg
js
in
popa
int3
pop
pop
cs
cmp
test
mov
fxch
pop
int3
xor
loop
dec
in
or
mov
push
xchg
pop
xor
or
cmp
es
shll
pop
and
scas
popf
mov
sub
mov
mov
or
jae
add
cltd
movsl
dec
dec
dec
gs
data16
adc
andl
addl
in
lods
insl
stos
shlb
or
xchg
fs
mov
mov
test
pop
push
lds
cmp
inc
lcall
or
ja
cmp
leave
stos
imul
rcrl
cmp
insl
jmp
push
cwtl
sti
subb
mov
inc
or
sbb
sub
dec
sbb
leave
mov
sbb
push
sbb
and
data16
xlat
xorl
out
scas
inc
cwtl
fcmovnu
inc
push
sbb
lock
push
fnsave
repnz
sub
cmp
cmp
fs
test
jbe
inc
ret
data16
dec
pop
jnp
push
mov
movsb
and
bswap
pop
xchg
inc
push
or
fimull
sti
inc
and
loopne
ds
xor
loope
roll
stos
orl
push
mov
pop
sub
adc
sbb
inc
out
jbe
jb
push
scas
imul
scas
ja
pop
data16
scas
sbb
adc
movsb
std
jns
jno
jmp
jno
xor
lea
xor
popf
ficoml
lock
jne
dec
cmpb
pop
repnz
cmpl
inc
je
xchg
xchg
xor
or
movsl
and
push
cmpsl
pop
popa
dec
insl
sub
sbb
insb
adcl
and
sub
mov
jmp
mov
pop
mov
stos
outsb
scas
push
popa
out
push
jnp
ja
fisttpll
ljmp
gs
test
int3
aaa
dec
iret
add
pop
push
andl
popa
cld
dec
sahf
xchg
push
inc
mov
lret
push
or
push
sti
fldl
popf
fsubr
push
or
movsl
ret
ret
insb
adc
orb
js
fildl
cmp
fsubrs
cmp
sub
icebp
sub
lret
inc
pop
inc
lcall
outsl
inc
jl
jb
and
lods
arpl
mov
popf
inc
movl
dec
loop
sub
adc
sbb
or
push
movsl
mov
mulb
pop
inc
loop
cmpsl
mov
xchg
xor
sub
in
sub
rorb
jno
mov
scas
jae
xchg
add
out
sbb
lahf
aaa
lahf
les
sbb
mov
cmc
pop
jecxz
fwait
aad
je
adc
inc
push
fs
mov
popa
fsubp
je
lods
inc
and
adc
rcll
or
lds
lahf
or
jl
and
jg
out
pop
pop
cs
dec
sub
cmp
scas
lcall
pushf
jge
shll
jl
into
outsl
xchg
test
enter
xchg
ja
sub
nop
xchg
pop
mov
xchg
daa
ljmp
pop
cmpsb
gs
es
mov
pop
imul
loope
pop
fmuls
sahf
push
mov
sbb
jnp
jmp
push
jb
pop
sbb
jno
jecxz
std
in
jno
sub
into
sub
xlat
js
push
sbbb
ret
mov
lods
xabort
cli
push
pop
cmp
out
mov
test
ret
fldt
in
dec
testb
or
sub
xchg
movl
xor
mov
jecxz
jbe
or
popa
add
sbb
negl
je
in
and
mov
sahf
pop
mov
in
aad
ss
dec
icebp
ljmp
sahf
pop
stc
ds
out
cltd
mov
mov
mov
movsb
or
push
mov
out
jg
ljmp
sub
mov
pop
mov
mov
push
xor
ret
add
mov
mov
inc
mov
dec
jne
shl
cmp
fnstcw
imul
dec
xchg
xor
mov
dec
xchg
dec
pop
sbb
inc
rolb
push
into
lods
mov
xchg
enter
push
ss
cmp
sub
lea
in
and
xor
mov
lahf
das
in
dec
sub
shrb
call
ss
sub
insl
aad
enter
lock
push
scas
cmp
sarb
push
sbb
push
pop
and
les
jnp
jecxz
dec
in
es
lahf
ret
mov
jecxz
push
add
cmp
in
aas
pushf
addr16
add
pop
sbb
sub
pushf
cmp
cmpb
cmp
fwait
or
jo
dec
pop
adc
cs
pop
xchg
ret
jecxz
lcall
ljmp
mov
pusha
jnp
mov
dec
fdivrs
push
mov
push
add
popa
xchg
sub
aaa
lock
scas
loopne
insb
jecxz
popf
adc
xor
lret
pop
ds
shl
push
push
pop
outsb
push
pop
pushf
cmp
cltd
arpl
sub
movsl
bound
mov
mov
test
fsubrl
or
xchg
ss
call
pop
dec
fcmovu
je
popf
add
pop
bound
cmp
inc
jmp
sub
call
mov
cs
cmp
xchg
icebp
push
mov
cmovbe
scas
mov
adc
bswap
fwait
into
jbe
jo
add
ljmp
xchg
insl
xor
sbb
fsubrl
ljmp
lcall
push
jbe
insb
adc
xchg
and
adcl
sbb
pop
add
shrl
push
xchg
and
push
mov
pop
in
add
inc
fstps
shrl
jle
je
dec
mov
das
shrl
int
dec
out
stos
loopne
jnp
imul
pop
sbbb
or
fwait
push
rcrb
inc
mov
pop
repz
xor
dec
lret
adc
bound
inc
or
sub
and
movsb
or
cmpsb
xchg
dec
inc
lea
outsl
dec
pop
or
adc
dec
loope
inc
gs
fsts
mov
jb
xchg
cmp
push
inc
mov
mov
mov
test
mov
and
popf
pop
int3
jbe
movsb
and
xchg
cmpsb
fldl
mov
mov
sbb
sub
push
and
shll
hlt
xor
push
scas
lea
jmp
popa
jnp
inc
out
mov
jmp
mov
mov
shlb
arpl
pushf
sbb
mov
add
out
adc
push
mov
pop
jae
pop
pop
outsl
ror
test
insb
rcll
push
adc
adc
adc
and
pusha
xor
jae
push
mov
mov
cmp
push
jbe
dec
xchg
push
ljmp
in
in
mov
int
lahf
sub
lret
xor
dec
adc
pop
imul
mov
push
xor
inc
cmpsb
mov
xchg
sub
sub
adc
and
xor
and
pop
out
pushf
lds
insb
insb
pop
les
imul
xchg
dec
mov
scas
push
cmp
or
add
stc
pop
sti
std
cli
popf
jnp
pop
push
sub
repz
mov
mov
adc
add
and
or
pop
jge
scas
popa
add
lea
jne
pop
jne
mov
jne
test
loopne
inc
cmp
call
dec
push
cwtl
dec
sub
cmpb
insl
into
jecxz
xlat
cmp
xor
cmp
int
jno
lcall
cwtl
das
push
les
lret
les
adc
push
daa
popf
jecxz
movsb
addr16
add
mov
fbld
outsl
mov
rcr
sub
fcompp
push
and
outsl
outsl
and
lret
inc
imul
xor
pop
pusha
jecxz
popf
or
test
cmp
pop
lcall
mov
inc
pop
sbb
sbb
nopl
pop
inc
jmp
and
sbb
fisubrs
repnz
jns
push
jne,pt
fs
push
nop
push
lock
clc
add
pusha
fs
jne
jo
pushf
insb
xlat
mov
inc
dec
lods
or
jo
imul
ja
fidivrs
and
lret
scas
imul
add
inc
cmp
push
lcall
scas
lret
sbb
sbb
sub
jg
mov
loopne
clc
pop
inc
lds
mov
fs
jbe
in
rcl
bound
popa
push
dec
xchg
mov
shrl
into
outsb
inc
inc
fnstcw
cmpsb
loope
movsl
cwtl
shrb
pop
jo
int3
sub
push
orl
and
fstpl
loop
fisttpll
scas
pop
mov
lea
scas
add
aad
bound
shl
jbe
cmc
divb
push
lds
movsb
or
or
std
jbe
mov
jmp
ret
les
lds
subb
aad
jo
into
js
ljmp
mov
sbb
cmp
adc
iret
xchg
hlt
add
pop
mov
imul
ss
xchg
movsb
loope
xchg
stos
inc
mov
mov
push
xchg
sbb
mov
adc
mov
fisttpl
push
aas
loopne
jl
mov
mov
loope
fsub
inc
sub
sub
dec
das
pop
outsl
pop
xor
inc
xchg
xlat
mov
imul
jns
repz
mov
xorb
or
mov
inc
loopne
insb
xchg
xlat
or
adcb
gs
mov
xor
aad
xor
xchg
adc
jo
test
push
aad
mov
int3
jno
out
push
insl
push
push
adcb
add
jg
es
pop
test
inc
int3
sbb
popa
sub
shll
mov
pushf
fwait
clc
dec
dec
imul
jmp
sub
ret
mov
fstpl
jge
insl
mov
sti
popa
add
cmpsb
cmp
cmc
inc
outsb
daa
shlb
mov
mov
jg
sbb
movsl
sub
mov
add
aad
das
add
adc
inc
addr16
out
clc
cwtl
and
test
loopne
add
leave
out
in
dec
rolb
scas
imul
push
rcrb
ret
sbb
push
cmc
cmp
jb
jmp
pusha
movsb
xchg
sarb
cmp
jne
and
cmp
leave
xor
mov
push
sub
sar
insb
movsb
pop
pop
mov
xlat
push
stc
pop
rorb
fsubs
fcmovbe
and
xchg
adc
xor
ret
jbe
jmp
add
dec
pushf
sub
sub
mov
outsb
push
push
xchg
inc
inc
or
dec
sub
push
xchg
ss
push
xor
ud0
int3
pop
in
fmul
sub
lcall
sub
lahf
lds
es
clc
lock
leave
and
enter
jmp
arpl
jge
in
push
push
daa
add
jae
lods
imul
jmp
adc
dec
fdivl
rep
daa
add
sbb
aas
pop
sbb
sbb
gs
adcb
xchg
or
or
xchg
mov
and
mov
jp
add
ss
in
loope
mov
and
pop
pop
inc
pop
mov
sub
fs
into
push
push
outsl
cmp
push
jb
cli
mov
out
jmp
aaa
dec
xchg
ret
cld
decl
mov
nop
leave
jns
insb
int3
sti
loope
jno
cmpsl
adc
xlat
xchg
repz
outsl
leave
aam
rcl
lahf
mov
mov
cltd
dec
push
mov
xor
push
andb
popl
sub
cmp
adc
cmp
adc
in
sub
insb
mov
clc
sub
lahf
pop
shll
inc
xor
out
mov
and
es
dec
mov
jno
cmp
je
adc
and
jo
lret
mov
fwait
movsb
push
mov
jl
mov
adc
arpl
mov
adc
jo
adc
je
jns
jbe
sbb
mov
jg
pop
test
xor
ds
popa
ss
fnsave
push
loopne
inc
mov
out
sub
insl
fstpt
and
pop
enter
cmp
dec
fistps
rorl
cwtl
sub
inc
pop
inc
scas
jmp
mov
jg
mov
lcall
pop
mov
adc
enter
cmp
mov
shl
push
cmp
push
add
aad
push
inc
lcall
in
jp
cli
xchg
pop
data16
jl
sbb
gs
aad
push
xchg
out
jmp
or
adc
fisubrl
aaa
stos
cs
mov
sub
popa
testl
or
inc
in
inc
int
repnz
paddw
jne
aam
pop
add
scas
popa
loop
test
adc
pusha
sbb
mov
mov
and
pusha
mov
imul
sahf
push
out
test
mov
test
mov
push
add
cmp
jno
divb
xlat
sub
xor
xchg
mov
out
aad
js
sub
test
adc
jae
aaa
push
gs
pop
std
jae
push
in
movsb
in
xorb
push
lret
and
in
push
inc
out
fmuls
sub
sub
lods
les
xchg
mov
leave
cmpsl
in
paddusb
lods
dec
ja
fdivl
loop
push
subb
jo
sbb
out
icebp
test
and
in
int3
xchg
xchg
movl
out
jbe
xor
outsb
xchg
jno
and
sub
add
insb
pop
mov
mov
pop
pop
outsl
outsb
into
pop
and
pop
pop
xchg
push
dec
push
inc
rcr
out
jmp
sbb
mov
mov
fistpll
dec
push
mov
out
aam
arpl
xlat
insl
xchg
or
jmp
les
push
jb
push
enter
into
dec
mov
mov
jo
and
mov
inc
cmpsl
lock
push
mov
enter
aam
adc
movsl
mov
es
jne
push
and
sub
lock
int3
jbe
aam
shrb
jbe
cwtl
jnp
xor
jnp
push
sub
mov
xor
cmp
xchg
loopne
in
jecxz
adc
aad
pushf
jecxz
test
xlat
mov
add
mov
jno
jle
cmpsl
or
lcall
repz
imul
add
lods
loop
clc
push
mov
enter
mov
int
mov
pop
mull
or
xchg
popa
mov
pusha
jl
jno
lods
or
mov
imul
push
jbe
or
jge
add
arpl
out
fs
and
and
sub
loope
daa
push
fs
sub
push
pop
clc
jmp
push
sub
mov
leave
call
clc
xor
push
sub
push
xor
imul
gs
je
pop
adc
or
jge
cmp
js
xchg
int3
add
in
insb
dec
jl
jmp
xchg
mov
lret
in
fildl
mov
cmp
ja
mov
mov
jmp
mov
dec
stos
pushf
cs
fsubrl
sub
cmc
outsb
dec
or
and
pushf
pop
push
stc
mov
jbe
mov
sbb
int3
icebp
or
cli
pop
lcall
cmp
adc
add
or
add
add
cld
movsb
cmp
hlt
push
or
pop
loope
sub
int3
ss
mov
push
loopne
inc
ljmp
pop
hlt
std
mov
nop
mov
xlat
xchg
cwtl
dec
loope
mov
jecxz
fdivrs
insb
ljmp
inc
and
cld
movsl
jo
call
add
leave
dec
jl
mov
aas
in
ret
inc
inc
jge
lret
dec
or
mov
cmp
sbb
xchg
outsb
pop
icebp
dec
in
adc
or
mov
xor
call
push
inc
jb
call
add
mov
pop
popf
push
and
stos
sub
adcl
out
hlt
loopne
repz
js
pop
jns
fisubrl
sub
fwait
popf
test
mov
xchg
cmp
add
xlat
xchg
aas
std
push
lahf
mov
mov
mov
dec
sbb
adc
push
xor
arpl
adc
sbb
inc
lcall
test
loope
dec
mov
hlt
dec
adc
push
mov
cmp
in
std
ret
sub
and
cmp
je
and
add
xor
ret
dec
push
je
xchg
xor
push
pop
pushf
fisttpl
push
shl
sub
jmp
dec
push
jmp
fwait
push
push
sbb
mov
mov
shrb
daa
sbb
xor
in
pop
dec
ljmp
sbb
push
mov
xchg
scas
mov
and
sbb
and
mov
call
in
pop
imul
movsl
popa
sub
push
dec
mov
test
cmc
iret
sub
cltd
addr16
xor
ds
cmp
push
int
ret
in
push
lahf
sub
insb
orl
lret
loope
roll
mov
addr16
jecxz
loop
push
inc
icebp
mov
jg
outsb
lds
fiadds
ljmp
jae
push
js
movsb
add
inc
lds
dec
adc
and
cmpsl
std
push
cmpb
leave
mov
in
push
cld
sbb
jge
fdivl
jns
xchg
ret
test
xorb
aam
sbb
sbb
out
mov
dec
pop
lret
adc
mov
cmp
pop
pop
xchg
jne
and
and
popa
inc
push
inc
and
pusha
mov
fwait
sub
mul
imul
xchg
pushf
or
das
inc
dec
in
sub
push
lea
cwtl
adcl
loopnew
pushf
sbb
add
imul
fdivl
mov
pop
pop
shrl
mov
mov
or
cmp
cmp
outsl
sub
dec
mov
test
jns
pop
fcomp
and
flds
ljmp
xchg
or
pop
pop
or
cmpsb
std
mov
cmp
adc
ja
and
xchg
push
call
lahf
sbb
add
push
cmc
pop
lods
inc
jmp
out
mov
es
fldln2
or
sbb
mov
test
ret
or
out
adc
scas
xchg
jge
xor
sahf
adc
cmp
jecxz
test
hlt
pop
or
mov
clc
leave
mov
mov
ss
negb
orb
or
cs
pusha
and
adc
xor
test
insb
sub
jbe
dec
std
mov
inc
fdivs
cmp
and
sub
inc
fdivl
pop
out
mov
subb
mov
mov
outsl
jnp,pt
push
inc
and
and
lret
psubd
insl
dec
or
sub
jns
xchg
xor
xchg
fsts
ljmp
pop
dec
and
pusha
jecxz
outsl
mov
jo
xchg
inc
das
or
jge
adc
in
stc
dec
in
cmp
jp
dec
mov
aam
dec
and
inc
mov
std
sub
das
pop
jne
orb
lods
cmc
pop
int3
mov
cmc
in
cld
je
addr16
jne
lret
xor
cwtl
inc
xchg
xchg
out
xchg
cwtl
jp
xor
adc
imul
cli
cmp
push
push
lea
push
pop
and
shl
es
stos
movsb
mov
mov
pushf
testb
push
in
push
mov
bnd
sub
into
cltd
xchg
cmp
sub
popf
cmpsb
hlt
mov
or
fs
movsl
std
push
fxch
xchg
dec
jae
int
sub
dec
lahf
arpl
mov
xor
xchg
bound
rorb
inc
and
fwait
add
in
mov
and
movsb
jmp
in
cmp
adc
lds
arpl
aad
jbe
iret
iret
stos
push
lock
out
mul
jge
jbe
push
pop
inc
cmp
jge
jbe
jg
add
sbbb
cmp
dec
sub
stc
push
fidivrl
and
push
aaa
es
loop
xor
inc
aas
mov
push
cmp
jmp
test
lods
dec
lea
and
int
ficomps
mov
mov
divl
pop
cli
popf
dec
js
xchg
lds
dec
sbb
les
add
stc
ss
jb
add
sub
mov
push
fisubl
stc
push
add
jb
add
pop
xor
jmp
lods
inc
dec
and
jne
push
mov
dec
cmp
fcompl
fxch
push
add
cmp
push
pop
pop
cmp
lahf
leave
aam
pop
xchg
xchg
cmp
das
or
mov
cwtl
sarb
push
mov
inc
adc
stc
push
xchg
jmp
xchg
inc
sub
inc
mov
mov
and
adcb
jns
lods
sub
inc
stos
push
in
dec
or
int3
or
sarb
rolb
jbe
insb
mov
lods
sbb
lock
test
aam
imul
insb
push
lods
in
sub
pop
aad
shrb
and
imul
out
lods
shrb
aad
rolb
xor
imul
lods
lock
jns
adc
cmp
pusha
inc
adcb
mov
fnstcw
jb
mov
les
int
sbb
lret
fwait
out
das
dec
mov
xor
nop
mov
cmp
emms
in
int3
xor
adc
push
cmp
in
in
aam
stos
dec
push
cmp
mov
icebp
rorb
pop
inc
add
sub
xchg
sbb
sub
xor
push
clc
push
mov
in
xchg
add
add
or
lods
adc
mov
add
pop
push
jno
in
cmpsb
jno
lahf
push
sbb
adc
mov
or
jmp
push
sbb
andl
lahf
xor
repnz
aad
and
mov
sbb
out
in
fidivrs
enter
xlat
sub
out
sbb
inc
inc
in
imul
jp
sbb
dec
aam
jb
push
dec
fdivrs
cld
pop
ljmp
adc
adc
into
cwtl
pop
sbb
mov
enter
cmpsl
std
pop
mov
inc
dec
mov
or
jns
pop
sbb
mov
cwtl
xlat
test
subl
pushf
jb
cs
lea
pop
mov
movb
jae
mov
add
and
shrl
in
pop
cltd
mov
test
insl
int3
repnz
call
lret
sahf
fistps
add
faddl
xor
mov
mov
jmp
addr16
or
mov
xchg
scas
loop
leave
add
addl
lcall
sub
add
mov
loop
push
lock
cmp
gs
dec
pop
xchg
xor
push
mov
push
lea
xchg
int
cltd
in
mov
aad
lds
out
and
add
xor
push
fimull
or
clc
je
and
or
adc
clc
mov
lods
mov
cmp
mov
adc
dec
push
clc
scas
push
pop
push
pop
inc
xchg
adcl
dec
mov
adc
mov
mov
sub
pop
pop
mov
xlat
nop
xor
push
pop
push
inc
inc
iret
stos
insl
pop
mov
js
push
test
and
dec
sub
pop
push
incl
popa
dec
jnp
inc
das
insb
or
xor
mov
xchg
test
setle
rcll
adc
inc
dec
aaa
popf
adcb
push
hlt
pop
adc
mov
int
movsb
adc
jle
shlb
jecxz
sub
loop,pn
inc
fs
cmp
ds
sub
mov
outsb
in
xor
cmpsl
cmp
xchg
test
push
inc
push
push
cmp
inc
in
pop
inc
and
jl
mov
sbb
sub
lock
cs
js
pop
mov
sub
dec
bound
mov
je
sub
dec
jbe
ss
call
xor
sbb
imul
dec
test
jl
xchg
test
cmp
ja
mov
subb
and
rcrl
in
orl
in
jno
jle
scas
pop
sbb
jb
jno
cmp
shll
pop
mov
jno
std
bnd
int
adc
xchg
xor
dec
stc
add
dec
ret
in
fisttpll
into
sub
push
enter
rclb
mov
loop
pusha
and
push
movsl
insl
push
leave
sub
push
mov
dec
idiv
adc
sbb
jnp
js
outsl
adc
stos
jb
sub
pushf
mov
xchg
and
stos
adc
in
add
or
jmp
loope
jae
dec
jl
imul
pop
mov
sahf
iret
xchg
inc
sbb
leave
sahf
adc
mov
dec
mov
idiv
push
xchg
xchg
adc
rol
mov
lahf
into
pop
lea
dec
xor
push
jno
add
int
and
repnz
and
xchg
pop
popa
fldenv
push
imul
cmp
mov
das
pop
push
andl
mov
adc
mov
in
adc
leavew
cmp
xor
xor
cmpsb
add
cltd
cmc
push
mov
mov
das
xor
jg
mov
shrb
sub
mov
jae
sbb
scas
pop
jl
add
mov
lods
sahf
add
or
pop
mov
cwtl
xor
scas
and
fimuls
jle
jne
dec
mov
int
lret
not
jle
and
test
inc
fsubrs
fsubrl
xlat
mov
lock
push
out
add
mov
mov
repz
sti
pop
mov
test
lret
aad
movsb
hlt
aad
jo
aad
neg
aad
or
mov
cld
out
stos
mov
xor
mov
jbe
lods
sbb
mov
lret
in
xor
xor
in
aaa
adc
lock
or
jns
mov
xor
and
inc
lock
push
adc
cltd
jo
push
push
int3
xor
dec
sub
leave
inc
les
push
inc
sub
mov
mov
push
test
and
out
push
push
add
pushf
aaa
adc
xor
adc
lret
mov
xor
push
in
dec
add
push
adc
fsubrp
test
cmp
xor
lods
out
fxch
jg
paddw
jp
xacquire
hlt
pop
and
pop
clc
jbe
loop
jae
test
push
fnsave
cwtl
jl
cwtl
pop
xchg
dec
mov
adc
aam
mov
dec
mov
xor
push
fs
scas
in
je
mov
lea
mov
inc
xchg
add
mov
fwait
imul
jae
dec
add
jns
add
insl
cmp
fmull
dec
cmp
xor
popa
and
or
pop
and
jae
aas
lahf
xchg
adc
stc
outsl
icebp
stos
push
dec
cmp
adc
test
fcomip
push
fld
sbb
jnp
jno
insl
icebp
out
ljmp
shll
mov
movl
jb
aam
push
or
and
shlb
xor
xchg
jp
call
mov
xchg
mov
insl
in
pop
push
push
rcrl
cmp
testl
push
ret
lods
pop
lds
imul
xor
pop
add
in
dec
mov
jne
jns
ss
dec
cmp
sahf
jb
mov
jg
add
dec
fdivs
cltd
push
in
mov
aaa
lods
sbb
pop
sbb
cltd
shlb
in
bound
and
outsl
sbb
jns
pop
cwtl
and
sarl
lret
sti
movsb
jo
stos
scas
in
push
ds
sub
adc
inc
into
adc
out
push
pop
adc
cmpsb
daa
gs
pop
bound
pop
push
jmp
xchg
mov
gs
xchg
mov
cmp
imul
sbb
push
adc
push
mov
mov
add
pop
push
insb
pop
sbb
mov
shll
sub
mov
jae
out
pop
adc
das
int
rsqrtps
and
mov
mov
sub
or
test
stos
cmp
clc
jb
mov
das
mov
push
mov
push
jge,pn
pop
xchg
fs
mov
push
cmp
int
sbb
stos
or
pushf
cmp
pop
jle
in
xchg
add
mov
fwait
cwtl
sub
add
int3
mov
or
inc
jmp
xchg
adcb
movsl
data16
aam
fnstcw
mov
fwait
mov
das
xchg
jne
push
leave
in
imul
mov
ljmp
rcrl
jbe
pop
das
push
mov
sub
pop
dec
enter
push
pop
or
mov
jne
pushw
dec
mov
loope
loop
sub
jmp
sbb
nop
and
nop
fs
pop
fistps
mov
pop
jne
xchg
push
dec
gs
lds
sbb
lahf
push
and
pop
pop
js
mov
repnz
add
stos
test
fs
mov
xor
shll
sbb
sub
fstps
icebp
sbb
lret
dec
add
sbb
insl
xor
in
test
fs
scas
mov
cltd
mov
cmp
movsl
fldl
lret
or
movsl
mov
rclb
arpl
jp
shll
loope
test
adc
icebp
dec
adc
pop
dec
xchg
xchg
les
jne
adc
jne
jg
movsb
scas
sahf
scas
test
mov
dec
lahf
lcall
ja
cltd
repnz
lret
das
push
bound
outsb
mov
or
ss
and
add
mov
arpl
lock
mov
pop
in
push
sbbb
jge
mov
push
inc
mov
xor
xchg
jmp
inc
xor
cld
xor
lods
or
lock
imul
adc
sub
fucom
iret
repnz
rorl
jg
aas
ficomps
mov
jo
mov
xchg
push
out
push
jno
cli
ds
loope
hlt
jp
in
push
out
scas
imul
shl
inc
loopne
add
into
dec
cld
jl
jne
add
cmc
inc
or
pusha
outsb
pop
sbb
mov
push
ret
push
data16
jne
lods
dec
jp
leave
mov
xorl
cmp
arpl
ret
outsl
xlat
imul
xchg
pushf
adc
dec
and
movsl
ja
inc
dec
inc
ja
sti
push
push
and
sbb
jge
jl
jne
gs
and
mov
jl
hlt
dec
js
dec
cmp
stos
xchg
pop
push
and
mov
daa
xor
pop
popf
and
and
dec
push
or
gs
mov
add
pop
adc
sbb
jl
loopne
cmpsl
mov
out
and
dec
pop
sbb
dec
mov
or
imul
jg
lods
xchg
jg
and
movsl
and
sbb
push
in
pop
adc
xchg
add
cltd
aaa
push
shrl
test
dec
gs
push
fstpl
dec
cmp
or
xor
and
imul
gs
lahf
push
ret
pop
jl
sbb
adc
inc
fwait
and
arpl
loopne
test
dec
nop
subb
shll
lahf
pop
adc
push
fwait
fwait
mov
test
push
fwait
pop
dec
inc
push
dec
and
fwait
sub
lods
out
test
pusha
mov
icebp
mov
push
aam
cmp
pop
lods
lahf
inc
jno
ds
adc
aad
mov
fld
sbb
push
mov
mov
push
pop
jecxz
cmpsl
jns
or
ficoml
out
cmpsb
pop
push
notb
mov
dec
dec
mov
fcomps
fimuls
je
daa
repz
jecxz
xchg
dec
fsubrs
ret
cmc
mov
xchg
cmpl
rcr
addl
xor
rclb
lea
insl
mov
loop
mov
xor
decl
add
jo
lds
adc
outsb
fdiv
ljmp
clc
dec
ja
loop
clc
int3
and
adc
test
lcall
add
dec
out
mov
shlb
jnp
xchg
ja
pop
jge
and
sub
scas
inc
outsb
xor
add
je
xchg
inc
pop
fldt
and
fsubrl
sub
and
test
mov
je
fs
sahf
lcall
dec
add
adc
in
and
call
in
mov
cld
and
mov
mov
push
fisttpll
cmp
and
enter
loopne,pn
mov
cs
or
cwtl
cltd
fsubrs
fidivrs
xchg
nop
xchg
xchg
pop
push
cli
fstpl
movsl
lock
int3
mov
cmpb
lahf
push
sbb
fldenv
lea
repz
xchg
dec
in
xchg
int
int3
pop
add
push
out
xor
sbbl
negb
dec
js
in
mov
and
icebp
jle
mov
dec
mov
in
aas
cmp
jae
in
in
rorl
pushf
sbbl
imul
fsubr
add
sbb
and
mov
dec
sbb
fadds
cmpsb
mov
cmp
xchg
mov
sbb
insb
loope
xchg
dec
add
ret
pusha
pop
dec
popa
xchg
sbb
nop
xor
jo
call
sbb
and
or
pop
test
lcall
in
cmp
mov
int3
les
sub
outsl
in
mov
call
and
pop
mov
add
xor
ret
push
dec
mov
or
fcomp
lret
lret
in
lea
dec
popf
xor
mov
mov
push
adc
je
mov
jmp
add
jecxz
imul
fistps
sbb
cs
fcmovnb
movb
cmp
and
ja
repz
fbld
out
or
movl
pusha
cmp
inc
inc
fucompp
sbb
mov
sbb
sub
insb
lret
inc
jo
cltd
roll
mov
lahf
mov
cmpsb
xchg
cwtl
faddp
push
lock
cmp
jg
sub
fldenv
and
ficoms
pop
cmp
hlt
adc
daa
and
cmpsb
test
lods
xchg
mov
mov
cmp
cmc
inc
mov
nop
loop
sbbb
cld
xor
jmp
inc
cmp
dec
fisttps
lods
inc
movsl
ret
and
cwtl
loope
loope
push
mov
push
pop
jo
push
pop
insl
xchg
fidivl
xchg
std
stos
xchg
popf
and
test
int3
inc
push
fidivrs
repnz
inc
and
adc
lods
lods
daa
into
fcmovb
jo
push
stc
adc
popa
xchg
dec
in
dec
fs
out
js
cltd
push
fisttpll
scas
data16
aam
add
push
pop
fbld
and
pusha
sbb
outsl
pop
pusha
shrb
xor
ja
xor
jo
cmp
add
addb
insb
jmp
pop
sarl
mov
fwait
subb
jmp
arpl
sub
aad
lcall
addr16
std
dec
outsl
adc
int
mov
fwait
push
sub
bound
xor
cmc
jnp
in
cltd
push
test
pop
jge
sbb
ja
mov
int
mov
clc
mov
adc
xor
lret
dec
mov
mov
adc
mov
push
data16
pop
add
ja
pop
pop
cs
adc
or
repnz
and
inc
sbb
ljmp
fimull
cltd
mov
lock
dec
sub
pop
pusha
popa
push
mov
fdivs
into
cmp
insb
mov
js
ljmp
loop
sub
mov
out
adc
push
testb
inc
sti
dec
pop
leave
push
popf
xor
mov
pop
shlb
mov
mull
pusha
jb
and
jae
jno
int
mov
adc
in
xlat
cmp
mov
lock
xor
inc
andl
popf
aam
cmp
sbb
dec
popa
stc
lea
test
pop
fsubs
cmpsl
add
jb
hlt
mov
xlat
mov
jmp
cmp
adc
push
xchg
sub
movsb
sub
pop
and
pop
sub
xchg
enter
in
mov
push
imul
jmp
adc
hlt
and
cmp
into
mov
out
dec
shl
dec
mov
push
cmp
adc
and
in
test
push
mov
rcll
mov
mov
fstps
jmp
add
aad
adc
jo
rorl
test
jmp
mov
jecxz
rcrl
lock
or
mov
nop
insl
insl
ja
stos
es
imul
jne
and
sbb
xor
sarl
cmp
and
mov
imul
enter
divb
and
push
pop
insb
push
and
fwait
xorl
cmp
ja
push
cmp
lret
int3
add
in
mov
rcll
lahf
sub
jnp
es
sub
xchg
jle
jp
cwtl
push
hlt
dec
fcmovb
jo
rclb
aam
add
sbbb
sbb
inc
pop
adcl
idivl
lret
mov
mov
arpl
sti
pushf
mov
fistl
push
sbb
fxsave
adc
inc
and
movsb
jle
mov
mov
loope
fmul
insl
push
push
jl
cmpsb
inc
push
xchg
enter
xchg
sub
or
les
cli
sub
mov
ja
cmp
mov
ret
ja
xchg
or
cmp
mov
in
jae
stos
popf
lds
mov
bound
imul
xlat
fsts
pop
pusha
movsb
popa
lea
adc
inc
gs
outsl
xor
cs
fidivrl
push
push
sbb
sub
push
jl
xchg
push
sti
inc
xor
jb
add
sub
movsb
add
cs
mov
push
mov
jno
push
mov
imull
pop
leave
push
pop
jp
push
and
popw
sarb
push
mov
sbbl
lds
and
lock
pop
into
or
mov
mov
test
test
pop
cmp
lret
push
ret
xchg
ljmp
outsl
add
cwtl
adc
les
xor
jle
push
dec
jmp
pushf
ss
add
mov
scas
add
xchg
je
inc
and
movsb
inc
inc
or
lea
adc
insb
push
sbb
mov
pushf
xor
or
pop
or
sti
or
cmp
add
xchg
cmp
sarl
mov
mov
inc
push
and
lods
adc
dec
jg
pop
mov
jo
nop
mov
aad
imul
or
dec
sahf
lcall
testb
dec
sub
rclb
mov
movsl
mov
ja
js
stos
cs
popf
pop
test
mov
jbe
jmp
insl
loopne
sbb
stos
ficomps
push
jg
scas
fcmovu
es
scas
cmpsl
imul
std
mov
cmp
push
outsl
mov
mov
cs
mov
mov
ret
xchg
imul
mov
sbbb
inc
pop
jbe
iret
push
sbb
cmp
jo
arpl
hlt
test
and
ss
jns
add
cmp
rolb
loope
dec
andb
sahf
mov
enter
xor
cmc
das
cmp
sub
ss
inc
enter
lea
ja
jno
mov
xor
cmp
call
scas
lret
lea
and
lods
ret
xchg
cmp
jl
add
xchg
mov
fs
lret
call
mov
push
add
or
pop
lea
inc
mov
mov
push
mov
cli
and
sub
imul
adc
ja
pop
std
xor
adc
pushf
dec
jmp
hlt
mov
lret
push
xlat
mov
xlat
lock
das
push
imul
add
loope
mov
xlat
mov
aaa
xchg
movsb
cmp
mov
cmpsb
adc
mov
fdivrl
mov
lock
test
imulb
insb
in
cmpsb
add
fisttpll
test
push
jae
lcall
xor
fisubl
es
shlb
and
mov
sub
aam
iret
sub
rolb
faddl
jae
or
mov
out
fldenv
ja
jo
mov
xchg
xchg
call
stc
daa
loope
fs
pushf
sub
dec
nop
xchg
sub
lret
adc
lods
push
jae
sbb
lret
jae
mov
lret
fs
lret
in
mov
dec
mov
shll
out
mov
jo
decl
clc
dec
cmp
inc
jne
dec
fdivrs
je
inc
clc
in
je
mov
and
es
loope
icebp
mov
inc
ja
inc
or
push
fs
or
das
stos
dec
std
cmp
push
mov
dec
xchg
js
inc
sar
insl
cmp
out
pminsw
js
fdivs
cmp
lock
sbb
or
out
xchg
mov
add
mov
sbb
scas
lock
lods
ja
icebp
sti
add
pop
jno
sahf
xchg
jl
dec
mov
cmp
insb
out
in
outsb
cli
push
das
dec
jbe
in
addr16
lea
in
dec
add
dec
outsl
mov
test
add
sbb
xor
fnstenv
or
shlb
inc
lods
cmpsb
xor
test
adc
fmull
pop
imul
and
ss
add
xchg
fcmovu
sbbb
push
gs
rolb
mov
mov
adc
jl
add
lock
pop
pop
leave
adc
pop
mov
inc
mov
jbe
adc
push
pop
lret
shrl
aad
sbb
out
dec
movsl
push
lods
push
scas
nop
xor
test
popf
jl
add
mov
push
je
xchg
and
xchg
fsubr
inc
lods
out
mov
and
pop
or
xor
cs
mov
push
les
fstpl
dec
push
jle
push
gs
mov
lea
out
repnz
arpl
into
mov
outsb
sub
mov
adcb
mov
sbb
js
cmp
arpl
sub
ss
gs
push
jbe
xor
lea
movsb
js
rcrl
mov
adc
mov
dec
jb
ret
jbe
frstor
pop
dec
add
leave
fsts
cs
into
push
call
jmp
repnz
or
push
andb
and
xor
jae
bound
push
cmc
ret
pop
dec
adc
xchg
dec
add
or
mov
xor
pop
leave
mov
dec
xchg
add
lods
imul
push
cwtl
insb
stos
dec
lret
push
xor
pop
ds
adc
or
jbe
mov
adc
out
pushf
leave
decb
pop
mov
inc
or
dec
mov
xor
shrl
jecxz
mov
or
dec
jle
adc
lea
add
adc
adc
dec
pop
fnstenv
xchg
inc
popf
jecxz
das
outsb
in
push
es
jae
cmc
adc
shll
fmull
xchg
daa
test
xchg
sbb
das
outsl
scas
cmp
hlt
mov
and
rclb
aam
fsubl
stos
adc
dec
daa
jp
xlat
xor
ja
sbb
push
adc
mov
or
shlb
addb
push
imul
loope
jne
jecxz
xor
mov
jbe
jbe
ds
jmp
loop
inc
clc
insl
mov
xchg
in
inc
sbb
pop
in
push
andb
into
mov
xor
rorl
int3
scas
test
adcl
fdivs
inc
adc
dec
dec
xchg
push
add
out
sbb
push
inc
aaa
nop
loope
cmp
addr16
outsl
push
test
and
and
sub
xor
or
sub
cmpsl
and
aaa
cmpsb
xor
push
je
add
insb
xchg
jmp
jo
into
xchg
clts
xor
jo
je
rsqrtps
xchg
std
xor
outsb
xchg
sbb
leave
in
xor
ss
imul
xor
push
dec
jg
xor
sub
mov
xor
into
push
jne
insl
jb
sbb
or
mov
and
movsb
or
andnps
cmp
mov
insb
repz
adc
xor
xor
jnp
ljmp
je
popf
add
mov
push
cmpsl
fwait
mov
sarl
xor
insb
les
jbe
add
out
adcb
popw
add
fiadds
push
cmpsb
or
lahf
sbb
je
xchg
dec
add
cwtl
lock
push
push
mov
or
cmpsl
pop
or
or
clc
fwait
xor
jne
mov
dec
adc
call
mov
cmpsl
add
push
idivb
sbb
and
dec
lcall
inc
jbe
sub
xor
outsb
jg
js
ret
enter
sbb
fs
je
xchg
push
inc
shl
xor
lds
das
into
in
mov
dec
ret
inc
mov
push
lds
jo
sti
xchg
sub
cmp
ret
or
mov
movl
add
jle
lods
lahf
cmp
xor
mov
adc
lcall
pop
xchg
idivb
mov
test
jecxz
push
adc
aaa
add
addr16
mov
push
mov
pop
mov
insl
xchg
push
sbbl
mov
jp
stos
call
mov
rcrl
add
std
sahf
data16
sub
lods
push
gs
sbb
push
in
das
add
sbb
ror
and
sbb
addr16
pop
jge
enter
popf
mov
fdivp
fdivrl
clc
paddw
jp
ret
add
jo
push
dec
xchg
mov
and
cmc
mov
adc
dec
cs
cmp
ficoms
pop
and
adc
push
push
xlat
sub
push
mov
sub
clc
sub
cmp
bound
dec
into
int3
jae
fwait
aaa
inc
test
jmp
adc
xor
cmp
jp
jbe
lret
adc
mov
in
cs
jb
jge
loop
fsubs
mov
cltd
sbb
pop
inc
xor
rcl
add
fcomip
jge
push
cli
dec
outsl
jbe
jp
loop
xchg
push
into
lcall
pop
cmpsb
inc
lcall
push
pop
dec
push
pusha
jae
jmp
jmp
sub
faddl
cwtl
dec
jmp
sub
gs
in
jmp
or
inc
mov
sti
in
clc
bound
or
pushf
inc
cmpsb
aad
inc
or
cwtl
int
aam
addr16
inc
inc
hlt
stc
jg
push
loope
or
mov
mov
add
or
lock
fdiv
pop
mov
out
jnp
mov
push
mov
sbb
nop
mov
test
push
dec
dec
jp
xchg
xor
and
ljmp
jp
push
jle
xchg
xchg
xor
xor
push
sbb
out
js
dec
push
testl
mov
lcall
push
jp
test
or
filds
sahf
xor
jns
ret
push
aaa
imul
outsl
pop
sbb
cwtl
add
shl
mov
popf
jno
push
mov
xchg
pusha
push
dec
sbb
shl
xor
movsl
pop
xchg
sbb
lods
adc
jns
pop
add
js
mov
mov
jnp
mov
jb
xlat
dec
cmpsb
lods
lock
lahf
outsb
movsl
jecxz
add
and
in
inc
paddsb
jp
popf
mov
sub
in
jb
xchg
adc
jmp
sbb
lods
jno
es
int
cmp
ljmp
fisubrs
mov
pop
or
jp
mov
pushf
lret
imul
inc
push
mov
mov
pop
push
lret
insb
or
mov
mov
cwtl
mov
out
lods
jbe
mov
std
das
jge
adc
jbe
pop
popa
push
dec
mov
lahf
pop
jbe
push
shll
imul
ret
daa
cmp
popf
sub
xchg
pop
add
or
pop
popa
outsl
lahf
push
fs
mov
add
shlb
ficoms
cltd
dec
push
shl
mov
shll
or
sub
sbb
mov
ror
adc
cwtl
dec
and
push
dec
nop
mov
jns
mov
mov
mov
push
frstor
xor
lock
mov
inc
test
jle
xor
cmp
xchg
loope
inc
jnp
push
test
idiv
push
test
sarb
addr16
cli
andb
xchg
stc
push
imul
dec
insl
mov
lods
mov
dec
mov
repnz
icebp
jge
std
lods
jb,pn
test
pop
and
pop
pop
in
lods
mov
add
dec
mov
mov
pushf
iret
fstl
pop
ljmp
xor
call
xchg
sbb
scas
movsl
outsb
mov
xor
mov
fisttps
cmp
int
mov
mov
or
add
call
adc
jle
fidivl
mov
xchg
mov
fidivrl
push
and
sbb
add
loopne
xchg
or
mov
add
in
fmul
div
pop
arpl
mov
jl
cwtl
ret
aam
adc
pop
aaa
pop
scas
scas
inc
or
mov
xchg
inc
lea
in
sub
pop
add
movsb
adc
aam
inc
lahf
push
inc
je
mov
inc
dec
mov
lcall
shll
idivl
pop
fldl
jge
lret
repz
xchg
or
ficomps
pop
dec
lods
pushf
adc
loop
or
fsubrs
loope
jbe
stos
inc
lods
fcompl
mov
repnz
xlat
ret
mov
stos
inc
fs
aas
jo
lods
pop
and
pop
dec
xor
mov
popf
xchg
pop
jp
pop
es
mov
pop
rcll
pop
mov
adc
lahf
scas
icebp
js
popf
sub
scas
sub
add
aad
loope
adc
or
xlat
insb
jae
mov
shlb
iret
fcomps
inc
lcall
movsl
and
jo
sub
sub
pop
scas
call
push
push
lods
aad
cmp
cmovne
popf
addr16
repnz
les
imul
sahf
movsb
scas
ljmp
jle
xchg
es
adc
or
mov
cmp
mov
loopne
scas
inc
es
insl
or
das
push
adc
enter
stos
arpl
ss
xchg
mov
add
or
stos
adc
push
je
int3
lret
xor
call
fdivrs
repnz
pop
sbb
push
lret
lcall
mov
push
call
mov
pop
fsubr
mov
imul
sbb
jbe
sub
mov
dec
adc
sub
out
scas
push
xchg
or
push
movsl
adc
arpl
xchg
loope
sarl
dec
xor
loope
jno
lahf
dec
out
inc
push
inc
xlat
xor
cmc
cmp
dec
mov
sub
push
js
mov
jo
dec
into
out
mov
dec
icebp
js
cmp
push
adc
fldl
insb
lret
out
mov
insb
adc
sub
xlat
fdivrp
cmp
pop
aam
mov
adc
cmp
pushf
idiv
and
cmp
xor
inc
shlb
imul
outsb
notb
in
nop
jle
push
pop
iret
aad
jae
inc
in
adc
ss
fwait
sti
mov
pop
cmp
and
push
push
xorb
mov
mov
adc
mov
push
dec
enter
fwait
pop
gs
daa
mov
lahf
in
or
icebp
mov
mov
cwtl
mov
rorb
pusha
shrb
and
push
cmp
dec
fstps
daa
mov
adc
into
pop
and
scas
lcall
cmpsl
xor
mov
jae
test
dec
inc
fcoml
in
mov
push
pop
lods
push
lea
divl
pop
movsb
cltd
dec
fwait
sub
loopne
xchg
mov
cwtl
jb
adc
jns
or
inc
mov
jns
ficomps
ss
hlt
push
push
pop
ss
sub
mov
jo
sub
in
sbb
mov
ror
mov
mov
std
iret
mov
fcoml
push
or
mov
fidivl
jl
mov
fistpl
icebp
je
inc
adc
sbb
mov
out
or
stos
xchg
xlat
dec
xor
xchg
int
in
or
clc
or
jae
mov
cmpsb
push
cmpl
fisttps
dec
cli
adc
aaa
stc
leave
mov
xchg
scas
pop
pop
pushf
sub
and
mov
sub
outsb
xorl
decl
out
pop
cmpsb
sbb
ret
mov
mov
or
sti
inc
cmp
cli
fwait
nop
ja
jno
and
repz
pop
push
or
es
xchg
add
xchg
scas
mov
pop
xchg
push
or
sbb
mov
mov
lcall
xchg
sub
fbstp
call
dec
stc
das
test
mov
or
sahf
pop
sub
inc
push
and
test
mov
ljmp
jmp
cmpsl
fwait
sarl
outsb
test
fadds
scas
je
dec
stos
aaa
xlat
data16
xchg
popf
iret
pop
jecxz
xor
cmc
sti
ja
into
cwtl
pop
fnstenv
push
pop
in
sub
inc
sub
mov
xchg
and
sub
jecxz
xor
jle
and
call
movsb
hlt
pop
test
out
xchg
push
add
leave
jecxz
jb
lret
cwtl
pop
xor
ljmp
adc
cwtl
sbb
cmp
addb
test
xor
mov
mov
movsl
mov
add
jp
pop
ficoms
dec
sbb
fdivp
fstl
imul
jmp
xorb
in
adc
das
xchg
adc
sub
jge
jl
lcall
jle
aaa
lret
push
popa
push
push
jp
sbb
adc
stos
or
mov
cmp
rcrl
mov
in
push
stc
jl
or
xchg
bound
mov
fwait
imul
addr16
add
mov
dec
inc
jne
add
pop
mov
sub
js
pop
or
and
or
pop
das
int
orl
ret
cmc
sbb
mov
nop
mov
dec
jl
push
dec
cmp
cltd
pop
imul
in
mov
lods
add
je
cmp
add
inc
mov
clc
cwtl
jmp
pop
sub
jae
inc
and
add
mov
mov
es
fists
fcmovne
xchg
jb
pop
sub
and
cmp
insl
dec
ret
movsb
jnp
mov
cmp
pop
mov
nop
mov
dec
jl
push
adc
push
dec
xor
mov
int3
adc
mov
daa
and
in
and
movsb
pop
cwtl
ficompl
pop
and
push
dec
and
push
sbb
inc
das
outsl
jp
or
imul
mov
mov
and
outsl
jmp
sarb
call
dec
testl
ds
jl
dec
inc
int
push
mov
xchg
scas
mov
push
mov
jnp
std
xchg
shrb
and
in
jo
ret
xchg
inc
cmp
roll
mov
jl
jge
dec
jne
mov
cmp
jge
cmp
pop
mov
xorb
sub
arpl
lock
lock
ljmp
bnd
jge
test
stc
dec
push
addr16
adc
jne
in
jp
lods
shrb
andb
outsb
loopne
fdivrl
idivl
ds
sti
clc
sbb
sub
arpl
push
std
js
adc
push
pop
cmp
testl
stos
cld
xchg
int
mov
je
and
aas
sbb
cs
imul
cs
mov
inc
mov
ret
xchg
mov
daa
push
in
inc
jmp
push
and
popf
outsb
call
cwtl
mov
mov
pop
inc
xchg
jecxz
fisubl
lea
jg
fisttpl
mov
sbb
cli
xchg
ljmp
mov
inc
scas
push
dec
pop
jne
push
cmpsb
cwtl
out
and
out
pop
jne
pop
add
fsubl
or
arpl
shr
xlat
jb
clc
je
ds
sbb
scas
or
xchg
and
out
icebp
fsubrl
je
addb
aam
pop
cmpsl
fistpl
ja
mov
movsl
and
lods
push
dec
adc
push
push
loope
and
adc
shr
in
jne
repnz
adc
and
jbe
sub
mov
cmc
scas
movsb
xchg
xor
enter
mov
xor
data16
and
aaa
cltd
and
sbb
push
rolb
mov
lods
and
cmp
fcomp
cwtl
and
mov
test
or
daa
icebp
andl
loopne
and
pushf
push
push
repnz
jl
jmp
lahf
cmp
aam
test
sub
enter
mov
jbe
cld
out
sub
movsb
hlt
cmp
adc
aad
jl
add
aam
jno
mov
add
insl
push
bound
jmp
decl
pop
pushf
into
push
mov
orb
call
movsl
aaa
sbbb
repz
adc
sbb
data16
push
push
push
icebp
movsb
int3
jnp
scas
xor
lods
lret
sbb
and
fadd
fisttpll
mov
pop
jg
mov
lret
outsl
sub
sub
add
mov
jge
push
push
push
les
inc
sbb
push
dec
cwtl
pusha
ljmp
shll
in
je
into
jbe
mov
and
add
xor
and
add
arpl
push
shlb
subb
in
mov
dec
outsl
mov
mov
dec
cs
jmp
jno
lods
mov
pop
pop
shl
mov
aaa
cwtl
divb
jne
pop
push
ret
movsl
jbe
push
push
mov
addr16
test
mov
pop
sub
insl
fstpl
cmp
add
pop
pop
je
mov
loope
xor
adc
xchg
xor
inc
pop
inc
out
xor
push
js
sbb
mov
mov
push
mov
imul
loop
inc
xchg
stc
push
push
lcall
loope
push
sub
fcmovnbe
rcrb
lock
push
fs
lock
mov
ret
shll
jg
mov
das
xchg
aaa
in
xor
mov
cltd
imul
mov
cs
mov
cmp
sub
xchg
xchg
dec
sbb
mov
cmp
lods
incb
jne
orb
movsb
dec
xor
jo
je
sub
and
inc
das
xor
lea
inc
jle
inc
nop
xchg
divb
bound
out
out
popa
mov
and
push
pop
sti
bound
adc
xchg
pop
inc
fbld
inc
inc
int3
aaa
dec
dec
cwtl
adc
insb
in
or
push
mov
push
adc
lcall
ret
push
sbb
push
add
mov
ret
arpl
mov
bound
packsswb
push
dec
xlat
jmp
test
pusha
or
das
enter
lret
imul
cmp
dec
call
int
lods
pop
inc
add
fwait
pop
inc
fistl
add
mov
sbb
dec
insl
mov
adc
xchg
mov
mov
jle
lods
insl
jne
cmp
in
push
xor
jns
or
push
daa
mov
outsl
loop
stos
jle
add
cli
rclb
pushf
pop
inc
mov
lods
mov
adc
dec
gs
dec
imul
xchg
jno
sub
jmp
in
fldl
lods
adc
movsbl
ficoml
xchg
jmp
jl
mov
andl
pop
xchg
and
mov
or
ficompl
sbb
aad
push
inc
insl
cmp
stc
pop
xor
pop
aad
mov
int
mov
lods
out
adc
fsts
jmp
jno
sub
inc
stos
adc
lea
push
push
xchg
jle
nop
popa
dec
test
movsl
stos
lods
lods
adc
add
sub
mov
inc
push
popa
enter
dec
fdivrs
mov
mov
mov
sub
and
xlat
push
imul
jle
fiaddl
imul
or
push
mov
adc
pop
int
mov
lods
ret
popf
stc
lods
mov
lahf
dec
mov
psllq
fcmovb
mov
add
fdivr
push
pop
imul
aaa
jg
mov
addr16
faddl
adc
or
out
fmull
jmp
je
or
rolb
ficoml
jb
mov
xor
lock
inc
ror
out
mov
and
lods
fucomip
pop
push
jp
sbb
mov
pusha
mov
cli
adc
stc
sarb
rclb
inc
mov
enterw
mov
pop
xor
js
jl
dec
jne
push
mov
mov
cmpsb
in
leave
mov
daa
xor
and
rcrl
pop
mov
jl
adc
dec
or
jbe
shrb
fadd
jg
aam
pop
and
cwtl
out
imul
xor
sbb
fldcw
cltd
stc
add
jb
cmp
jp
add
inc
aaa
jmp
jecxz
dec
adc
push
mov
ret
sub
sbb
or
and
in
dec
fldenv
sbb
lods
popa
jb
pop
add
mov
xor
fisubrl
push
jmp
adc
adc
lods
scas
pushf
push
jbe
shrb
cmp
lcall
cs
dec
lahf
frstor
mov
mov
xchg
xchg
push
imul
scas
mov
push
out
repnz
sub
ds
cli
mov
or
mov
jo
lods
in
adc
stc
push
pop
push
test
or
inc
adc
mov
cmpsb
jae
int
or
popa
sbb
adc
aaa
scas
xchg
adc
dec
sbb
or
mov
push
add
add
pop
popa
cmc
in
fisubrl
stos
inc
pop
dec
rcrl
push
pop
cmp
xchg
add
fs
popf
imul
mov
gs
sbb
scas
sbb
and
mov
sbb
add
xor
cltd
jne
mov
push
jbe
mov
mov
test
in
fldcw
fnsave
ret
push
shl
xor
mov
mov
or
pop
sysexit
xchg
sub
xor
imul
add
xor
es
push
out
scas
cmp
xor
adc
pop
jle
adc
lea
adc
cltd
mov
xchg
pop
xchg
add
dec
out
pop
adc
add
pop
or
lds
xor
mov
xlat
inc
xchg
stos
test
pop
in
sbb
and
stos
arpl
shl
sbb
bound
movsl
fs
imul
push
syscall
push
jg
sub
stos
pop
insb
dec
push
jmp
leave
or
sub
adc
fdivl
inc
cmpb
sti
fnstenv
sbb
testl
push
jbe
flds
cwtl
in
sbb
insb
sbb
arpl
sahf
enter
pop
lds
mov
inc
aas
or
pop
ret
pop
aaa
push
mov
push
loop
pop
mov
xor
rolb
mov
pop
inc
add
pop
dec
sbb
dec
push
pop
popl
and
sbb
rcrb
movsl
fdivrl
aad
xor
xchg
xor
ljmp
jle
xchg
sub
sbb
adc
dec
bound
enter
add
mov
insb
xor
xchg
mov
mov
cmpsb
bound
cld
sbb
cmp
frstor
ljmp
lret
inc
cmpsl
xchg
cmp
and
xor
xchg
push
jecxz
es
sub
loope
lods
dec
insb
dec
sahf
xor
imul
sub
int3
mov
mov
or
sbb
mov
insb
idivl
test
sbb
mov
inc
fdivr
loopew
loopne
xor
xor
xlat
mov
popa
mov
mov
push
adc
mov
pop
sbbb
lret
sbb
sahf
and
jmp
mov
rcr
inc
sbb
bound
inc
push
add
push
and
dec
ljmp
movsb
xchg
add
imul
aam
sti
or
aad
icebp
int
out
out
fsubrs
sub
not
shrb
push
shl
int3
ret
xlat
cs
and
lret
outsl
out
popf
lahf
pop
loope
aam
jne
sbb
ret
loopne
int3
jns
and
imul
mov
inc
push
jle
gs
ror
or
lahf
orb
xchg
popa
xchg
popa
sbb
mov
jg
rcll
add
inc
xor
xor
xlat
test
imul
xchg
loop
aaa
fisubl
cmp
or
sub
mov
cmpb
cmpsb
sub
and
loop
jecxz
or
cmp
pushf
cmp
outsb
mov
jle
addr16
int
mov
stc
outsb
lods
xor
pop
cmp
inc
lock
mov
int3
add
mov
inc
mov
dec
push
nop
test
je
into
jne
cmp
add
inc
dec
nop
xchg
shlb
cmp
sbb
mov
cmp
pop
sbb
js
pop
in
in
push
pop
int3
adcl
pop
pop
sbb
inc
mov
mov
movsb
adc
minps
sub
cmp
pushf
jmp
push
clc
or
mov
inc
push
jle
mov
popf
ret
movsb
push
aaa
xchg
cld
jne
push
push
and
imul
mov
mov
clc
dec
bound
in
or
test
adc
push
jge
adc
dec
call
lea
push
and
lret
je
aad
push
into
or
loopne
sahf
pop
notb
scas
pop
sub
out
mov
das
lock
pushf
es
mov
jmp
push
pop
gs
push
push
sub
push
cmp
sub
lahf
adc
xor
in
or
jmp
dec
add
into
ljmp
call
mov
xchg
enter
and
lahf
cmpl
sub
pushw
push
or
and
lea
jmp
imul
popf
mov
or
xor
dec
adc
jge,pn
mov
adc
stos
test
inc
ficomps
daa
mov
pusha
or
sti
fsubrs
adcb
stos
pop
bound
mov
fcos
inc
dec
pop
xchg
mov
clc
fadds
das
aad
popa
rcr
pop
movsb
add
ficomps
adc
out
outsb
out
clc
ja
push
push
pop
imul
jbe
bound
or
outsl
in
mov
dec
cli
fdivrp
jae
out
insb
jb
push
enter
popf
mov
mov
cmp
or
stc
mov
std
push
aas
mulb
xchg
dec
fstl
stos
mov
fidivs
pop
and
lods
dec
mov
lods
pop
fwait
xorl
sahf
je
xchg
push
hlt
cmp
andb
in
or
cmp
jbe
stos
cmp
push
fnstenv
mov
push
inc
mov
adc
leave
adcb
pop
in
mov
ror
and
lods
jmp
jno
cmpb
mov
mov
js
out
insb
or
inc
jl
movsb
cld
nop
pusha
inc
das
lods
push
jp
mov
sbb
aad
lret
daa
insb
imul
pop
insb
js
mov
pushf
fdivs
pop
cmp
xchg
or
pop
into
jne
popa
es
mov
mov
sbb
pop
mov
sub
sub
insb
imul
es
das
je
xor
cltd
movsb
mov
jp
adc
fidivrs
inc
mov
xchg
lret
in
sbb
and
pushf
insw
push
iret
xor
lds
adc
loopne
cmp
pop
xor
aas
jge
jne
ss
jb
xchg
jo
out
adc
test
ret
xlat
pop
addr16
sub
imul
insl
cmc
lods
pop
pop
enter
sbb
sub
xchg
addr16
in
dec
cmp
test
out
mov
ret
jno
xlat
mov
xor
aas
mov
int3
adc
sbb
fiaddl
test
not
test
or
popa
sub
mov
cmp
pop
enter
pushf
cmp
jle
notl
out
test
stos
push
insb
adc
bswap
cmpsl
xchg
cmp
cmp
adc
insb
leave
dec
or
bound
xor
dec
dec
pop
pop
jl
pushf
add
mov
jle
xchg
leave
int3
mov
shlb
xor
mov
cmp
xchg
mov
mov
and
popa
int3
sbb
cwtl
aam
push
xor
or
lds
mov
dec
rcl
lcall
add
inc
dec
imul
stos
lret
ror
adc
mov
mov
fcmove
gs
std
adc
test
pop
push
push
push
daa
cmc
mov
int3
add
scas
in
fbld
xchg
cmp
push
jge
mov
sub
xor
pop
push
call
in
cmc
scas
dec
add
or
inc
sub
lods
pop
jle
icebp
test
push
sub
aaa
mov
das
jnp
fisubrs
lods
insl
cwtl
cmpsl
sub
jbe
out
pushf
sub
and
fiaddl
xor
dec
out
or
bound
push
or
out
jo
bound
scas
pop
push
xor
adc
and
mov
mov
incl
aam
xchg
mov
push
sub
stos
add
fimull
outsb
roll
insb
jns
rolb
push
cmp
sub
sti
hlt
lods
mov
ja
shr
push
popa
test
sbb
push
fs
dec
aas
xchg
ror
mov
xchg
sub
jns
leave
jge
loope
bound
cs
pop
jbe
push
lahf
mov
lds
dec
scas
loopne
xor
call
push
dec
push
or
sub
mov
push
loope
sub
sti
rcll
lea
loop
xor
add
fcomps
rorb
rclb
fmull
jle
pop
cwtl
push
icebp
fisttpl
fdivrl
adc
scas
jae
xchg
repnz
ret
iret
inc
ret
xor
push
sbb
jno
jmp
adc
in
jecxz
testb
arpl
cltd
inc
popa
sub
imul
fldenvs
or
add
push
pop
inc
shll
idivl
push
inc
shr
stc
jae
jle
dec
jl
dec
rcrb
insl
dec
daa
jp
sub
jmp
aad
pushf
lcall
and
inc
jo
add
lret
mov
jg
add
in
sub
adc
movsl
dec
outsb
sbb
push
or
sub
rcrl
outsb
fists
push
cmpsl
push
inc
sbb
or
shrb
inc
push
mov
insl
xchg
mov
loope
xor
aaa
insl
ja
push
in
dec
cmp
inc
or
and
push
cltd
cltd
dec
cmp
nop
int
and
int3
mov
or
lock
cmpb
push
xchg
sub
aad
fwait
stos
sbb
add
ljmp
dec
int
xchg
or
or
movsb
das
shlb
jo
cltd
xor
sbb
test
popa
jl
and
outsl
out
or
sti
frstor
in
enter
lds
jne
aaa
push
jnp
rcll
shl
xor
xor
int
lods
gs
movsl
mov
loopne
adc
jle
mov
mov
inc
sub
cmp
dec
shl
mov
out
arpl
or
lret
pop
inc
int
xor
js
and
cmc
and
insb
sub
imul
insb
sbb
lret
jno
das
shl
inc
add
sub
in
inc
sub
sub
push
sbb
fcmovbe
sbb
dec
cmp
cmc
test
inc
and
ss
pop
pop
ret
add
and
mov
leave
insb
xchg
and
add
xor
lds
jmp
push
cmpb
pop
test
es
dec
shll
fwait
cmpsl
fwait
push
lods
pop
and
jno
sbb
aad
inc
xchg
inc
por
pop
mov
jnp
js
ljmp
cmp
pop
inc
ljmp
shr
lds
dec
repz
and
test
test
jmp
incl
jne
or
and
cmp
xor
mov
jg
sub
jbe
mov
outsb
hlt
fwait
popa
sub
outsb
cmc
int3
jecxz
sub
jecxz
jbe
shrl
add
rol
js
cwtl
sub
push
fs
mov
jge
subl
or
sub
dec
or
pop
stos
popf
repz
jne
inc
cwtl
push
lahf
mov
in
mov
add
xchg
inc
inc
mov
cwtl
and
push
das
fisubrs
ds
jb
inc
sub
fcoms
cmp
sbb
jle
loop
pop
lods
mov
enter
dec
out
mov
in
add
inc
cmp
jns
fstpt
incl
push
out
mov
insb
mov
popa
add
insl
xchg
push
mov
inc
outsb
sub
push
adc
hlt
dec
jl
sbb
fstps
fdivl
cwtl
loope
cmovge
xchg
xchg
xchg
mov
test
sbb
push
pop
jle
lods
mov
jo
xchg
dec
push
movsb
test
jnp
insl
push
nop
xor
sti
push
push
imul
or
mov
lods
adc
mov
daa
sub
mov
xchg
mov
inc
jl
dec
icebp
outsb
std
out
or
insb
fcom
cs
xchg
testl
vmovhpd
lock
sub
inc
jl
sti
mov
or
fbld
pop
into
mov
sbb
jbe
cmp
mov
pop
rorb
ja
mov
push
ja
sbb
pop
dec
pop
shrb
jbe
adc
lahf
in
and
test
adc
inc
aam
nop
sub
or
xchg
inc
xor
or
mov
cmc
jmp
sub
pop
lahf
mov
mov
xor
fs
out
or
or
mov
sarb
add
or
mov
mov
xchg
movsl
push
ret
hlt
adc
icebp
nop
fcmovnbe
mov
push
mov
outsl
leave
add
dec
jp
cli
push
int3
pop
jmp
push
call
cltd
hlt
mov
fld
test
cmp
xchg
jg
jb
lods
shrl
inc
mov
fnstcw
push
mov
clc
imul
inc
fstps
sub
insb
pop
fstpl
push
mov
mov
lods
and
outsb
add
out
jae
xor
or
pop
push
shl
shrb
xlat
push
pmaddwd
setp
cs
bound
fsubrs
pusha
sbb
das
outsb
cs
test
test
cmc
aad
or
sub
push
mov
dec
add
das
mov
pop
and
or
sbb
xor
or
in
xor
inc
nop
push
lcall
xor
mov
adc
aaa
cwtl
jge
outsb
out
fisubl
rorb
testl
enter
jp
mov
dec
and
adc
mov
in
movhps
mov
addl
daa
jle
add
lock
mov
mov
push
dec
jno
cmp
and
xor
cltd
in
push
js
mov
or
mov
out
mov
cmpsb
inc
stc
push
push
ss
dec
sbb
es
test
bound
test
das
out
lds
xchg
lock
jne
pop
out
jno
dec
adc
mov
sbb
push
cmp
push
pop
popa
sbb
ror
xchg
push
push
push
and
xchg
mov
add
xchg
es
lods
sub
fidivrl
shr
mov
mov
inc
dec
fcoml
jne
mov
sbb
add
mov
cs
mov
popa
imul
imul
mov
adc
xor
ljmp
sbb
mov
xor
fwait
test
lcall
test
xor
repz
xchg
fimuls
pop
cs
inc
and
inc
jnp
fisttpl
out
lock
fidivrs
hlt
and
out
add
push
cli
push
cmp
lods
or
mov
cs
je
jae
imul
push
xor
dec
sbb
rclb
add
inc
cmp
adc
cmp
addr16
adc
jbe
fildl
lock
xor
or
mov
dec
xor
in
iret
xchg
dec
add
stc
into
das
cmp
push
outsl
cmp
es
aaa
and
pop
lahf
mov
mov
inc
aam
rol
test
data16
add
cmp
mov
cmp
gs
dec
in
push
leave
je
aaa
jp
cmc
xchg
mov
btr
test
iret
adc
mov
add
xchg
jnp
sub
pop
repz
sbb
popa
loopne
mov
mov
fisttpll
fnstcw
and
fwait
fs
inc
push
pop
mov
ss
gs
fdivrp
adc
cwtl
jne
aaa
lahf
add
and
jno
adc
sub
sub
fcomps
sub
scas
movsb
sub
xchg
dec
aam
dec
ja
inc
cwtl
jae
jecxz
push
and
inc
mov
add
aam
mov
mov
dec
inc
push
xchg
shll
push
sarb
data16
lea
mov
fs
insb
test
gs
sbb
dec
fincstp
jp
pop
push
or
aam
pop
lret
cltd
adc
sbb
pop
sti
fisubrl
or
xchg
sahf
scas
fnop
loope
lahf
cs
jbe
lods
jle
call
jp,pn
inc
add
icebp
mov
inc
dec
in
loope
and
in
xchg
dec
cli
or
jg
adc
add
and
add
push
mov
addr16
call
inc
pop
xchg
fisubl
push
lods
movsb
add
pop
sbb
sub
sub
imul
inc
outsb
mov
test
loope
push
dec
cmp
mov
int
jne
mov
mov
subb
mov
mov
ljmp
inc
or
add
adc
push
ds
inc
mov
test
loope
push
dec
cmp
mov
push
icebp
cmp
push
push
shlb
in
test
dec
sub
out
mov
lods
push
cld
mov
cld
adc
inc
inc
loope
push
ds
js
mov
cmp
lods
mov
pop
sbb
push
lret
leave
stc
push
add
or
push
cmp
iret
push
adc
mov
mov
push
lcall
pushf
push
test
call
jge
cmp
lret
mulb
or
sub
andl
leave
sbb
xor
psraw
lock
xor
lahf
xchg
push
stos
jmp
pop
loopne
shr
lret
jne
or
lock
es
sub
addr16
int3
mov
scas
fidivs
dec
test
push
in
outsl
mov
xchg
mov
mov
cmpsb
in
cwtl
les
jne
fnsave
pop
aam
in
sbb
mov
stc
jno
int
aad
pop
add
sub
jg
insl
xor
es
cwtl
push
adc
movsb
les
or
fnstenv
mov
aam
jl
pop
stc
mov
arpl
xor
loope
movsb
sbb
bound
push
sbb
xlat
mov
jl
dec
and
lock
pop
pop
mov
loope
lock
push
pop
xor
or
std
xchg
mov
jmp
jmp
fcmovne
sahf
add
dec
dec
insb
mov
push
shrb
and
adc
fimull
hlt
sbb
roll
test
jno
inc
inc
push
jb
cmp
ret
mov
sbb
jl
cld
xor
sbb
pop
jl
mov
cmp
sub
or
sbb
jmp
cltd
or
mov
xor
inc
sbbb
jecxz
mov
sub
mov
sbbb
dec
mov
mov
add
push
sub
mov
rolb
in
inc
mov
lods
fmul
rcll
int
pop
adc
add
sarb
sbb
dec
cld
and
addr16
mov
data16
pushf
rcrb
cmpb
jae
test
imul
adc
popa
pusha
add
inc
cltd
pop
in
fcoms
jge
adc
push
dec
cld
or
call
imul
jl
jp
stc
sub
jo
sbb
fdivrs
jge
cmp
jo
adc
push
movsb
loope
and
inc
cmc
and
sbb
sub
sub
pop
sub
xchg
mov
pop
mov
cmp
mov
int3
inc
das
je
xor
jno
lods
or
push
loop
les
les
sbb
lds
pop
lds
sub
addr16
xchg
fisubrs
js
sub
aaa
repnz
dec
jmp
data16
push
mov
cwtl
fimull
xlat
out
fwait
xor
mov
test
dec
add
pop
dec
jl
xchg
repnz
fisttpll
and
jns
ret
xlat
or
iret
outsl
mov
or
fwait
xchg
mov
xchg
das
dec
cltd
mov
dec
and
mov
leave
cmp
sbbb
or
out
inc
fcomps
in
dec
and
ss
popa
or
in
push
sub
dec
adc
cli
inc
sbbl
outsb
xor
sbbl
inc
lcall
inc
fidivs
pop
sti
cmp
or
or
sbb
pop
or
repz
add
pop
inc
icebp
push
push
ja
pop
aam
aad
push
sbb
xor
out
and
or
or
xor
das
aad
mov
inc
roll
mulb
jecxz
and
push
push
daa
cmpsb
data16
sbb
decb
jno
and
shlb
paddb
insl
xchg
xlat
ss
add
mov
cmp
xlat
popa
adc
inc
enter
cmp
mov
pop
and
aas
fdivrs
xor
and
mov
lret
lahf
sub
insl
push
test
cmc
and
test
xor
stos
cmp
ljmp
int
ja
or
xchg
or
dec
sbb
and
int
lahf
pop
jns
cmpsb
pop
jl
jmp
pop
sub
xor
ds
sar
fwait
push
xor
mov
xor
dec
cmp
jmp
addb
test
cmp
jne
daa
addb
pop
jge
mov
loopne
xor
hlt
pop
repz
ss
shr
adc
faddl
pop
out
dec
push
jno
adc
adc
shll
or
sbb
or
mull
out
inc
mov
dec
push
jmp
cmp
adc
add
dec
push
or
inc
lahf
xchg
addr16
xorl
lret
push
fwait
push
adc
out
add
cltd
sub
in
or
je
int3
loop
mov
icebp
dec
pop
jno
cmp
jns
or
add
sbb
push
xor
or
push
inc
scas
or
mov
stos
adc
leave
jne
cld
sbb
shrb
jbe
fiadds
fistpll
adc
out
push
subb
jmp
dec
lahf
enter
mov
push
pop
test
cmc
sti
sbb
add
les
jmp
insl
sub
cs
outsb
ss
mov
xor
js
xchg
sub
jmp
dec
test
mov
fsubs
jnp
addl
test
mov
in
mov
adc
inc
sub
dec
push
sbb
nop/reserved
and
sub
push
mov
inc
and
jae
mov
inc
xchg
scas
inc
insl
popl
mov
and
push
movsl
in
push
pop
jp
sti
js
cmp
push
mov
fmulp
inc
movntq
cltd
sub
sbb
mov
sbb
push
xor
je
xor
xor
daa
dec
mov
push
xor
test
or
in
ds
push
cltd
rclb
cmp
and
test
cmpsl
jmp
lods
mov
ret
push
into
pop
addl
add
dec
jle
mov
or
cmp
rcll
icebp
in
fisttps
dec
xor
insl
arpl
mov
sub
mov
xchg
inc
rcr
pop
xchg
repz
xchg
ss
call
into
lock
cs
bound
fisubrs
pop
ljmp
call
jno
clc
jns
jnp
adc
inc
bound
and
jbe
mov
dec
dec
movsl
adc
daa
and
jne
xchg
sbbb
dec
jle
or
sbb
xchg
mov
or
mov
pusha
cmp
push
hlt
loop
frstor
imul
dec
out
je
rclb
out
pusha
js
xlat
jne
fnstcw
loope
push
int3
add
add
or
jecxz
sub
ljmp
test
insb
fldcw
cmc
jae
push
repnz
pop
ljmp
aad
lahf
sub
imul
dec
imul
xor
jp
push
sahf
sbb
fwait
add
jo
lods
push
cmp
lds
jbe
jmp
ret
lods
sub
mov
cmpb
pop
pusha
dec
lret
sub
dec
sbb
pop
adc
outsl
jne
sbb
ja
add
rorb
jge
push
lods
incl
push
dec
fdivrs
cmp
and
mov
bound
sub
mov
in
les
fistpll
pop
sub
pop
pop
loop
sbb
pop
pop
pop
stos
mov
movsb
stc
mov
jb
ja
ljmp
dec
jae
cmp
pop
enter
in
xor
imul
push
inc
and
push
scas
lods
loop
push
mov
popf
aad
rcll
dec
jne
and
mov
fimuls
xchg
outsl
shrl
mov
mov
sbb
or
jecxz
mov
xor
jmp
push
mov
out
cmp
mov
xchg
push
mov
shll
shrl
stc
jbe
ds
fidivs
or
and
mov
jbe
xchg
icebp
xor
sbb
xchg
add
mov
push
pop
or
mov
inc
push
fiadds
add
dec
and
inc
cli
in
lcall
inc
das
mov
xchg
push
mov
and
frstpm(287
sub
dec
aad
add
es
imul
xchg
and
jae
inc
pop
sarl
and
cmp
test
js
call
nop
jmp
jne
addr16
push
pop
ds
lret
xchg
sub
out
in
ljmp
gs
mov
pusha
les
loope
jle
pusha
and
push
fimull
into
inc
jae
nop
adc
fidivl
imul
popf
fdivrl
mulb
xchg
aad
fs
mov
mov
aad
adc
push
and
adc
pop
fcompl
lret
sub
aas
sbb
push
or
inc
icebp
scas
xor
stc
add
insb
daa
adc
sub
push
mov
push
fsub
mov
pop
rcrb
popa
inc
gs
jle
push
in
dec
not
in
push
in
inc
mov
adc
ret
mov
aas
jge
leave
jae
leave
in
mov
sbb
add
cmp
mov
push
mov
jl
out
xchg
jae
cmp
shrb
inc
test
popa
adc
rolb
cs
or
add
xchg
push
bound
mov
mov
lock
outsl
enter
clc
test
mov
shrb
data16
inc
rorl
jae
aad
stos
repnz
outsl
leave
push
push
xor
fldcw
or
das
and
sub
push
lahf
fcompl
inc
xchg
adc
adc
inc
adc
sbb
cmc
xchg
mov
pop
ljmp
cmp
jmp
enter
icebp
add
xor
cmp
jmp
outsl
je
adc
sbb
pop
imul
jae
fmuls
data16
pop
pusha
and
es
test
mov
or
lret
and
lcall
dec
mov
inc
push
dec
fsubl
xchg
or
mov
lods
das
in
mov
mov
cmpps
add
enter
fidivrl
setg
push
ror
xchg
jns,pn
sbb
das
pop
lahf
testb
push
clc
shlb
jmp
cmp
gs
mov
ja
gs
push
dec
dec
mov
and
data16
das
cltd
jb
cmp
jae
wbinvd
imul
jbe
movl
add
xchg
fsubl
shlb
fsubrs
dec
push
sub
jbe
jbe
mov
jge
pop
push
aas
int
sbb
xchg
bound
sbb
and
pushf
xchg
sub
roll
hlt
and
stc
and
gs
dec
lea
and
std
mov
push
xchg
pusha
repnz
xor
add
dec
mov
out
lods
cmp
adc
add
push
or
push
push
stc
sub
or
jns
inc
insl
insl
or
addr16
dec
in
xor
mov
daa
jb
jbe
and
loope
lahf
push
jge
std
fsubl
cmp
outsb
dec
fdivrs
sbb
fisubrs
jp
lcall
mov
adc
and
cld
cmpsb
js
push
xor
adc
add
hlt
adc
xor
adc
jno
sahf
pop
stos
mov
cmp
adc
mov
pusha
popa
jmp
mov
dec
imul
imul
arpl
in
xorb
test
and
cmpsl
push
in
and
fs
jne
hlt
sub
xchg
ds
jl
les
in
popf
cmp
lods
out
js
push
in
rcrl
pop
cmp
pop
push
es
jecxz
cli
repnz
mov
clc
mov
mov
pop
pop
jg
mov
adc
mov
jge
jge
or
cmp
out
sbb
add
mov
xchg
stc
ret
je
add
lods
cmp
bound
sub
loope
ljmp
push
adc
popf
mov
jne
out
mov
movsb
mov
cmc
sbb
inc
and
and
jecxz
mov
mov
pop
imul
and
sub
ja
gs
cmp
test
imul
xor
test
sbb
lods
xchg
icebp
xor
aas
or
mov
outsb
mov
push
js
rcll
scas
xor
mov
arpl
and
jl
popf
popf
push
lret
mov
js
xchg
dec
loope
jp
test
sub
iret
jge
cmpsb
mov
leave
mov
lahf
pop
jl
mov
scas
push
mov
cmc
es
jns
lahf
lret
sbb
loope
jl
push
aam
push
outsb
xor
or
xchg
loopne
sub
inc
cmpsb
and
fldcw
ja
dec
jmp
lcall
xor
sbb
or
stos
or
jecxz
pushf
push
les
add
shlb
inc
sub
test
jge
sarl
push
xor
adc
sti
sbb
cs
ds
imul
fnstsw
test
or
push
mov
jbe
popa
stos
in
pop
ret
mov
jnp
mov
insl
lock
ret
mov
sub
mov
xor
pop
jbe
jne
outsb
lds
cli
jno
arpl
inc
sbb
daa
and
pusha
jne
cmovo
jne
sbb
mov
push
mov
jp
pop
pop
aaa
ret
addr16
cmp
mov
pop
push
inc
enter
sbb
stc
mov
out
or
in
jb
mov
inc
lcall
mov
mov
outsl
cli
push
push
or
pop
lcall
les
add
jbe
xorb
lock
aaa
push
int
jge
jnp
jo
addr16
loope
and
sub
lea
aaa
or
and
mov
xchg
data16
outsl
xchg
sub
out
mov
les
insb
push
add
mov
cwtl
loop
repnz
mov
cld
movsb
gs
aaa
bound
mov
lock
inc
roll
fcoml
int
pop
cmp
mov
jge
push
mov
clc
sub
rorl
repnz
je
aas
inc
lahf
mov
jae
jle
lahf
in
jne
mov
movsl
clc
pop
or
jl,pn
xor
and
mov
rclb
ror
sub
push
xchg
imul
aad
aaa
hlt
jbe
cmpsl
push
icebp
int
cmp
in
sbb
popa
mov
ljmp
push
xchg
jbe
test
fcmovnb
fisubrs
int
pop
add
mov
into
daa
int
push
int
into
mov
push
dec
clc
cmpl
mov
push
mov
mov
or
mov
sub
ss
cltd
push
push
mov
and
jge
cmova
sbb
or
xchg
mov
pop
enter
bound
dec
dec
pop
shll
mov
push
cmpsl
aad
aas
cmp
rcr
xor
xchg
dec
or
movsl
mov
dec
inc
mov
loopne
inc
je
scas
inc
rolb
push
mov
je
cwtl
mov
ficoml
ljmp
jbe
pop
jmp
lds
repz
and
cli
int
in
jae
and
sbb
test
jo
test
hlt
push
sub
jge
pop
xchg
cltd
adc
xor
ljmp
jb
mov
nop
jl
jo
mov
jb
sub
fisttpl
std
dec
stc
out
inc
popa
mov
push
clc
lahf
movsb
insl
pusha
mov
mov
add
test
sbb
imul
lds
jb
sbb
arpl
pop
sub
push
fs
pusha
dec
lods
cli
push
push
push
mov
xor
or
mov
iret
jns
cmp
orb
cltd
pop
imul
aaa
aas
je
movsb
into
lcall
mov
mov
clc
or
das
mov
mov
sub
lock
adc
inc
jp
xor
pop
or
ret
push
les
ja
push
into
sbb
sahf
nop
add
dec
fcoml
add
inc
fldenv
cmp
xor
rolb
xchg
je
int3
sbb
fsubrl
lock
clc
ljmp
or
inc
psubq
aad
pop
bound
push
js
std
insl
das
sbb
or
cmc
push
popf
les
in
rol
lcall
out
push
idiv
jmp
sbb
xor
rcr
in
iret
xchg
sub
out
outsl
sbb
or
movsb
insl
jne
data16
into
or
jge
push
cltd
xor
shll
lock
mov
dec
lods
flds
add
fisubrl
jge
fcomi
jle
iret
add
and
iret
mov
sub
cmp
cmp
xor
loop
mov
mov
cmpsl
out
xor
jg,pt
cmp
ja
mov
add
push
cmp
int3
ljmp
aaa
in
push
iret
seto
pop
fisubs
mov
sbb
aam
daa
test
bound
lret
sbb
and
scas
gs
daa
xchg
sbb
mov
adc
mov
in
bound
push
bound
dec
je
xlat
xchg
inc
inc
es
push
mov
jo
ja
inc
ds
ret
int3
clc
cmpsl
mov
roll
mov
mov
jg
mov
and
jl
mov
adc
ja
xor
stos
push
add
mov
call
push
sahf
push
cwtl
and
insb
lods
jg
cmp
sbb
nop
es
xchg
pop
or
sub
or
cld
or
inc
out
inc
push
xlat
stos
enter
loopne
rcll
test
cmp
repnz
pop
daa
aam
sbb
xchg
xor
sub
fbld
ficompl
sub
test
sub
aaa
mov
push
fcompl
test
pop
aad
mov
movsb
lods
adc
out
lods
out
leave
sub
cmpsl
or
ljmp
imul
add
popa
pop
push
jb
adc
adc
mov
push
testl
mov
jg
adc
dec
adc
loope
dec
fbld
or
cmpsl
test
addb
imul
call
mov
lods
ljmp
pop
sub
lods
into
cmp
or
mov
push
ds
jno
or
pop
popf
mov
inc
loopne
dec
nop
mov
and
mov
pop
inc
shll
stos
add
fmuls
dec
jae
pop
inc
xorl
popa
and
mov
out
cli
bound
cmc
mov
and
or
imul
sbb
sub
imul
add
mov
sub
or
pop
and
dec
and
mov
aaa
jmp
dec
addr16
jbe
test
in
xor
pop
push
xor
xchg
jecxz
xor
xchg
sub
sub
push
aas
jns
sar
sub
mov
xor
or
mov
lds
addr16
enter
pushf
and
ss
jbe
xchg
push
sbb
add
xor
cmp
sbb
inc
add
insb
or
jnp
push
rol
ret
ret
ret
sti
cli
mov
aam
ret
inc
sbb
iret
mov
pop
js
adc
pop
jl
outsl
or
sub
sbb
sbb
ret
cmpl
and
jne
add
imul
cwtl
mov
push
sub
xchg
into
enter
jle
inc
xorb
jecxz,pt
mov
jp
or
sub
xchg
sbb
dec
mov
lret
xchg
push
fisubl
cld
in
movsb
dec
or
pop
xchg
pop
sbb
bound
jo
je
je
ja
xor
inc
mov
fst
jge
fstpt
sahf
insb
insl
lret
cmp
rcl
fildll
lods
imul
mov
leave
rorb
push
and
int3
xor
inc
insl
jnp
ja
js
mov
jns
mov
aaa
sahf
out
xchg
loopne
mov
int
xor
arpl
pop
loope
cmpsb
test
xor
rolb
pop
cltd
popa
add
fdivl
add
loop
jl
enter
punpckhdq
and
jnp
pop
or
addr16
push
lret
and
loope
xor
pop
ds
imul
or
dec
lea
data16
jno
fsubl
push
xchg
ds
mov
xchg
push
push
mov
inc
push
push
xor
out
scas
daa
shl
ds
sbb
outsl
adc
inc
scas
roll
mov
pop
or
stos
or
ds
dec
sbb
lea
aaa
int3
xchg
les
jge
faddl
cmp
cmp
add
daa
call
ss
aaa
ds
aaa
movsb
mov
pop
pop
and
inc
inc
ds
dec
or
adc
adc
mov
inc
add
int
clc
lahf
lret
lds
sub
stc
and
clc
jge
mov
xor
aaa
sub
data16
jb
sahf
fldl
outsb
std
popa
out
aaa
mov
inc
stc
imul
jl
call
or
sub
mov
inc
aam
sti
jge
cld
inc
cmp
test
mov
cld
jbe
xchg
stc
inc
out
lret
cmc
jo
dec
jo
bnd
mov
mov
mov
lods
test
dec
in
rorb
inc
cmp
sbb
cld
lods
sbb
loop
add
fsubrl
push
adc
jl
lods
sti
push
lods
lods
mov
jmp
mov
clc
sub
in
jae
add
cmp
call
push
in
inc
pusha
andl
in
dec
push
popf
mov
pop
add
lret
pop
push
fsubs
pop
inc
inc
pop
push
inc
mov
lds
xchg
xor
jno
jle
aad
sub
mov
jp
xor
in
inc
mov
add
xlat
cmp
cmpb
mov
pop
test
data16
inc
cld
inc
sti
add
mov
call
rolb
jns
push
ret
ret
jo
sbb
scas
push
rorb
clc
pushf
stos
sti
ljmp
fidivl
fldl
mov
pop
fmul
sahf
cmp
ljmp
data16
or
sub
xor
add
sbb
inc
int3
sbb
push
add
scas
cld
test
add
out
pop
movsb
pop
dec
mov
ret
mov
cmp
jecxz,pt
scas
sbb
scas
sbb
arpl
jnp
add
test
or
mov
ja
xor
shlb
loope
or
xor
pop
out
addr16
cmp
push
mov
pusha
adc
mov
insl
aas
inc
add
pop
xor
cmpsl
popa
xor
fnstsw
repnz
rcl
testb
sub
pop
jl
inc
aad
sub
aad
or
lods
bound
imul
dec
dec
mov
mov
inc
data16
dec
sbb
decl
sbb
out
inc
cmp
arpl
rol
flds
xchg
xor
loop
pop
icebp
xor
mov
pop
push
push
adc
into
leave
mov
push
fisttpl
add
adc
pop
add
add
int
mov
cmp
mov
dec
inc
inc
mov
cmp
sti
push
sbb
in
push
mov
cmp
cmp
jb
into
push
pop
std
xor
cli
std
adc
vpmaxsw
aas
into
jg
xchg
int
add
into
sahf
or
xor
std
inc
xor
test
adc
or
push
loope
sub
xchg
nop
xor
pop
push
mov
outsb
and
sbb
out
inc
xchg
add
jno
jne
fisttpl
loop
sbb
nop
push
pop
jne
lock
jecxz
push
sbb
mov
cmc
pop
fsub
mov
jmp
dec
or
jne
sbb
adc
inc
add
out
ret
ret
ret
ds
cli
dec
push
push
push
aam
in
sbb
sub
js
mov
inc
lds
inc
fsubs
mov
loopne
mov
push
iret
dec
mov
aaa
sarb
jge
mov
mov
cltd
leave
out
jle
adc
int
push
sub
aam
out
jge
push
adc
mov
insb
stc
jmp
jo
push
xchg
adc
fldenv
ljmp
sbb
push
hlt
mov
and
in
adc
dec
or
fdivrl
sub
movsb
pop
inc
bound
cmp
test
push
sarl
or
push
push
adc
sbb
jo
mov
test
sub
jb
pop
inc
adc
movd
adc
mov
xor
add
mov
cmp
ljmp
xor
fildl
inc
xor
pop
addb
jo
add
sbb
or
loopne
adc
mov
push
jo
int3
imul
adc
in
push
jne
push
arpl
cmp
xchg
imul
mov
lret
add
hlt
mov
push
adc
add
adc
jge
ret
pop
pop
mov
scas
dec
sti
jo
xor
dec
sub
mov
dec
jmp
es
les
pop
pop
pop
or
movsb
cmp
sub
sub
inc
leave
add
jae
fidivs
test
mov
ret
push
sahf
xchg
cmc
cmp
jmp
xor
xor
fildl
inc
xor
push
addb
imul
or
jge
or
loopne
adc
lods
and
imul
bound
in
xor
push
pusha
sub
arpl
cmp
xchg
imul
mov
rolb
repz
imul
sub
je
mov
test
pop
fld
imul
pop
mov
mov
sbb
in
sub
push
gs
push
imul
adc
andl
cwtl
pushf
dec
fld1
mov
xor
pop
clc
jb
xor
dec
pop
es
shrb
add
pop
inc
adc
add
vmovaps
pop
xorl
cli
cmc
lods
or
mov
inc
dec
addb
arpl
push
outsb
icebp
pushf
push
add
pop
gs
js
and
imul
pop
pop
push
sbb
sub
or
mov
jg
sbb
dec
daa
sbb
sarl
out
xor
cmp
push
add
or
inc
test
outsb
ljmp
pop
sub
pop
jns
cmc
ret
pop
push
sub
out
into
out
enter
pop
dec
inc
dec
push
ds
jecxz,pt
jge
bound
jg
mov
insl
enter
stc
push
in
ficompl
mov
aam
jge
jp
outsb
add
dec
in
insl
hlt
pop
shr
hlt
pop
mov
scas
out
jns
mov
jbe
mov
fisubs
std
ljmp
add
xor
xchg
jecxz
jb
add
adc
ljmp
imul
push
dec
push
loope
push
and
jnp
mov
jge
jno
mov
mov
dec
push
mov
out
pop
push
push
adc
dec
lods
scas
icebp
aad
das
daa
cmp
imul
sets
in
dec
ja
lds
inc
lock
add
and
loope
adc
inc
pop
push
jmp
imul
xor
pavgb
gs
pop
sbb
xchg
jo
cmp
jns
hlt
cmc
pop
push
andb
cld
inc
or
add
out
jno
pop
and
ljmp
sub
loop
movl
test
xchg
pop
jg
das
mov
push
in
cmpsl
fs
push
xchg
cmp
aaa
subb
mov
andb
cs
test
lret
dec
push
sbb
jo
test
and
outsl
push
sub
loopne
jno
push
push
movsb
sub
in
cmpsb
push
mov
jns
arpl
pusha
sti
mov
mov
and
add
mov
sti
call
sub
call
xor
divb
inc
out
cwtl
fsubrs
inc
in
dec
jne
xor
xchg
pop
mov
dec
cmp
jno
pop
je
add
into
push
sub
xor
or
das
xchg
push
jno
jle
js
loope
pop
pop
mov
lahf
jne,pn
fwait
mov
fs
mov
adc
xor
mov
inc
std
gs
scas
sbb
sbb
in
inc
stc
jne
cmp
call
sti
jne
stos
xchg
and
mov
aam
in
cld
jno
les
popf
hlt
jne
push
dec
mov
pop
push
std
sti
iret
push
ret
jbe
mov
cmp
jb
add
out
mov
xchg
pop
dec
outsl
sbb
dec
popa
imul
mov
imul
mov
add
mov
push
sbb
sub
pop
jae
scas
sbb
lods
arpl
mov
sbb
lahf
in
mulb
pop
xor
rcrl
iret
jl
pushf
js
fisubl
mov
lock
mov
pop
iret
popf
imul
fidivl
daa
jnp
sbb
gs
int
xor
out
inc
push
xor
push
sbb
sbb
cld
in
mov
and
pop
repnz
les
fiaddl
in
pop
jecxz
mov
pop
leave
das
mov
lods
mov
test
add
and
lods
inc
inc
adc
shl
or
call
mov
jae
add
sbb
mov
adc
ja
pop
fcmovnbe
adc
hlt
inc
fldcw
cmc
lods
add
xchg
inc
and
in
addb
pop
ss
rolb
cltd
cmc
outsl
fidivrl
rcr
xor
pop
jne
test
mov
hlt
push
les
dec
push
aas
fs
sub
xchg
aad
aam
gs
and
lods
divl
mov
dec
jmp
cmp
dec
jno
sbb
enter
ret
jnp
pop
js
out
xchg
mov
adc
inc
dec
add
add
test
incl
js
pusha
shrl
scas
jb
sub
rcrl
hlt
adc
inc
cmpsb
add
test
mov
cltd
dec
cmp
out
in
shlb
rep
in
push
je
sub
shll
add
lods
xchg
clc
xchg
in
jno
jbe
adc
pop
nop
or
pushf
es
jne
add
sub
and
int
and
rorb
pop
cmp
pop
sub
scas
daa
ljmp
test
xor
sub
or
push
daa
inc
inc
jbe
fdivr
imulb
insb
and
cmp
xor
popf
sbb
mov
fs
lea
pop
mov
imul
sub
dec
mov
dec
push
and
fisubrl
and
call
imul
sbb
mov
popa
mov
sbb
mov
ss
int3
push
in
fidivs
fidivrs
add
pop
dec
jmp
xchg
pop
in
xor
test
cmp
mov
in
data16
and
xchg
inc
cli
mov
test
shlb
push
dec
lods
cmpsl
gs
xor
jecxz
inc
sub
scas
push
sub
rclb
insb
sbb
enter
xor
popa
dec
loopne
xchg
pop
jae
cmp
imul
and
clc
ret
push
push
sbb
out
aam
xchg
popf
or
fucomip
rclb
xchg
cmp
jbe
adcl
xchg
int3
sbb
adc
cmovne
ficoml
jmp
push
insl
icebp
ds
hlt
and
popf
aad
mov
js
std
int
popf
int
movsb
lahf
aad
jno
sub
xor
cmp
insb
jb
or
cmp
inc
dec
or
mov
shlb
cli
push
cmp
hlt
out
fidivrs
jl
arpl
inc
jle
cmp
sub
jb
fstpt
add
adcl
dec
insb
push
in
call
lret
adc
push
cmp
cmp
divb
mov
rolb
xor
imul
test
jle
mov
pop
sub
jno
or
mov
xchg
jl
mov
insb
inc
cmpsb
rorb
jne
cmp
inc
jle
ficoml
jmp
push
jns
and
aad
mov
int
xchg
int
cmpsb
outsb
jb
mov
lahf
sbb
cmp
mov
or
adc
addl
fcmovu
divl
ljmp
repz
or
dec
imul
lods
mov
stos
xchg
ficompl
es
pop
cwtd
inc
push
xchg
sub
jp
dec
jge
ss
loopne
xor
xchg
pop
jnp
cmp
push
clc
mov
pusha
xchg
fstpl
nop
mov
es
push
jo
ljmp
mov
iret
sub
jns
loope
loopne
shll
adc
roll
add
aam
cltd
sub
fadds
jecxz
test
mov
rclb
pop
push
cltd
or
xchg
cmp
outsb
push
inc
dec
xlat
pop
xlat
jl
hlt
insl
pop
adc
andb
mov
inc
mov
xor
out
pop
xchg
pop
mov
xor
in
or
pop
movsl
add
scas
adc
and
repnz
jo
sub
in
push
add
dec
or
rcrl
stc
xchg
mov
and
mov
sub
inc
lds
push
repnz
xchg
fildl
movsl
fdivl
cmpsb
mov
inc
pusha
xchg
insl
dec
and
test
movsb
sub
test
inc
mov
nop
test
mov
jae
cmc
and
push
lds
sbb
sahf
daa
je
push
and
rcrb
int3
insb
pop
pop
and
adc
mov
in
dec
clc
xchg
int3
pusha
sub
pop
fcompl
xor
sahf
cmp
cwtl
cmpb
es
xor
cmp
ss
mov
pop
mov
xor
and
add
js
fs
lock
sti
mov
mov
jecxz
pop
sbb
and
mov
leave
loope
xchg
pop
cld
in
add
add
in
adc
flds
sub
not
add
movb
add
pop
fdivrl
fs
inc
outsl
mov
inc
loope
movsb
dec
andl
popf
inc
dec
push
int
popf
cmp
in
and
inc
arpl
xchg
sbb
clc
pusha
jle
and
fbld
jnp
push
loop,pn
sahf
add
xor
sub
sub
push
daa
mov
push
cltd
inc
jnp
test
push
cmc
in
aam
repnz
ja
sbb
cmp
sub
dec
movsl
jns
pusha
sub
lahf
enter
mov
mov
f2xm1
mov
jmp
add
adc
addr16
sbb
repz
cmp
pop
lods
scas
nop
rol
popa
sub
inc
xor
popa
sbb
dec
xchg
and
sahf
idivw
aaa
cld
rclb
outsl
test
inc
xchg
xor
test
pop
sahf
jle
xchg
jmp
sbb
fcoml
and
mov
cs
mov
lds
push
or
out
pop
int3
xlat
subl
inc
out
push
jb
pusha
cmp
pop
aad
outsb
push
sahf
insl
xchg
std
adc
sub
xchg
aam
pushf
add
and
mov
pop
stos
xor
fwait
xor
add
filds
sahf
cltd
cld
mov
add
mulb
nop
arpl
cs
xor
mov
pop
arpl
ficompl
movsb
pop
cmp
push
pop
or
repnz
push
push
cmc
jmp
dec
orl
pusha
add
mov
push
repz
cmc
xchg
shll
test
mov
stc
and
jae
jb
gs
jecxz
mov
pusha
jl
ja
in
inc
sahf
sub
out
dec
mov
fimuls
mov
inc
inc
arpl
mov
cmp
xchg
andl
call
pop
inc
daa
sarl
fsts
and
hlt
sub
push
pop
push
ret
sbb
dec
repnz
scas
or
inc
cltd
pusha
repnz
xchg
test
xor
and
mov
incl
cmp
imul
pop
pop
lock
or
andb
test
xchg
cli
sbb
xchg
push
test
in
leave
pop
mov
xchg
rcr
int3
scas
and
add
insb
pusha
or
xchg
js
mov
and
xor
and
es
sub
loope
jnp
js
pusha
mov
jbe
and
call
mov
adc
pop
cmp
adc
add
push
out
shll
fstps
inc
push
or
loopne
add
js
xchg
adc
call
into
push
pusha
jns
pop
push
mov
fnstsw
jle
dec
and
cmp
idivl
rolb
call
mov
mov
sbb
dec
fsubs
ret
cld
cmp
mov
add
adc
jg
pop
push
push
sbb
out
push
loopne
test
call
pop
cld
in
or
enter
imul
fisttpl
fs
push
cmpl
mov
xchg
adc
cmp
movsb
mov
and
xchg
mov
adc
and
and
addr16
push
adc
bound
and
in
notl
pop
repz
icebp
xchg
pop
data16
xor
in
cmp
lods
out
lods
push
clc
push
jns
cs
int3
mov
pop
push
nop
jbe
es
movsb
imul
fdivs
js
mov
movsb
lods
aad
sub
adc
jge
clc
test
mov
fs
out
in
lods
pusha
pop
dec
dec
push
es
jns
push
xor
imul
xchg
xor
mov
insl
je
lds
test
add
jne
lods
mov
and
add
rorl
paddsb
clc
test
sub
xor
cmp
inc
mov
push
into
push
jge
out
imul
mov
xchg
out
cmc
enter
lock
mov
lds
xor
scas
cmc
jnp
mov
pop
mov
add
mov
xchg
movsb
test
push
inc
mov
outsl
test
inc
and
mov
and
mov
mov
mov
add
xor
fadds
sub
rcrb
adc
xchg
shrl
and
shrb
popa
cmpsb
jbe
sarb
aaa
sbb
shrb
icebp
out
fisubl
xchg
aad
mov
js
lret
in
js
dec
inc
pop
sbb
mov
movsl
jle
fidivrl
xchg
inc
jle
pop
push
bound
sub
cmp
imul
dec
and
mov
insb
ficompl
push
mov
cmpb
mov
mov
pusha
jp
bound
cmp
and
out
or
xchg
shll
bound
pop
scas
pop
fcoms
mov
lods
push
enter
les
es
clc
mov
xor
mov
xchg
pop
jp
and
pop
pop
mov
sbb
sbb
lods
lret
add
sub
mov
mov
cmp
aaa
sbb
lret
icebp
ljmp
in
jecxz
push
test
mov
xchg
popa
jl
pop
popa
dec
cmp
lods
jle
fiaddl
mov
add
dec
insb
rcrb
imul
xor
imul
mov
inc
jle
lods
data16
inc
ljmp
push
inc
popa
ss
sub
icebp
add
lock
jmp
orb
sub
popa
push
or
movsl
dec
hlt
mov
jmp
push
or
aam
inc
adc
pop
and
push
sbb
adc
push
rorb
jle
mov
xchg
pushf
xor
sbb
sbb
lods
les
add
sub
mov
je
int3
pusha
xor
push
insb
push
int
adc
dec
es
ss
in
cmp
nop
cmp
ret
sbb
jno
test
das
cmp
dec
jp
test
imul
aas
out
and
insb
daa
xchg
outsl
mov
leave
icebp
xorl
xor
fs
loopne
inc
in
sub
sub
inc
hlt
fnstcw
mov
xor
stos
sbb
sub
xor
inc
enter
jb
mov
fs
out
shlb
sub
jbe
push
xor
adc
dec
adc
ljmp
add
adc
nop
int
push
add
pop
push
iret
inc
sub
cs
xor
sbb
stos
stc
xor
addb
dec
jmp
fildll
sub
adc
rorl
sub
fs
je
xchg
stc
mov
shll
sbb
dec
mov
adc
jns
mov
push
jo
into
sub
push
mov
add
pop
adcl
in
enter
popa
orl
adc
pop
jmp
test
cmp
enter
adcb
in
mov
sbb
and
fcmove
or
insb
dec
cmp
add
jmp
icebp
push
adc
adc
adc
inc
push
inc
pop
push
enter
stc
lahf
sbb
mov
push
and
push
push
pop
mov
aad
adc
jmp
push
sub
fisubrs
sbb
aaa
jnp
out
dec
sub
jno
jae
imul
and
repz
push
jle
fsts
sub
xchg
sub
xchg
or
jmp
or
out
jg
outsb
outsb
and
pop
bound
push
jno
mov
je
sub
mov
ud0
adc
push
bound
inc
mov
les
cmp
mov
mov
and
dec
sti
push
adc
pop
pop
or
and
in
imul
adc
mov
push
sub
stos
cld
cmp
lds
sub
sub
vmovntpd
lds
mov
cld
fs
and
loopne
int3
insb
jmp
sbb
lds
and
jecxz
fists
and
out
dec
mov
or
cmpsb
into
mov
jno
or
ja
enter
inc
and
mov
sbb
scas
sub
bswap
mov
cli
les
je
inc
dec
fldln2
cltd
jmp
sub
push
cli
xlat
jp
ficoms
fisttpll
push
scas
cs
dec
jge
stos
xor
enter
jbe
adc
imul
imul
aad
sbb
or
sahf
mov
dec
shr
insl
xor
movsl
das
or
push
orl
repnz
mov
xchg
idiv
mov
insb
pop
iret
xor
and
jno
cli
lret
test
ja
mov
push
insb
xor
mov
in
mov
jae
aad
jbe
aam
and
adc
xor
dec
sti
inc
jno
shlb
mov
repz
fdivs
std
dec
call
loopne
ja
cltd
inc
add
xchg
out
nop
popa
sub
das
notb
sbb
jno
das
or
inc
jb
ja
adc
push
divb
ja
dec
std
sti
aaa
dec
and
mov
add
call
xchg
add
push
mov
mov
dec
mov
dec
cmp
add
jne
and
cmpsl
jno
cmp
fldcw
jp
sbbb
or
xchg
hlt
mov
bound
sub
sub
shll
adc
rol
cmc
push
xchg
sbb
mov
push
outsl
inc
es
popf
lret
jb
xor
mov
adc
int3
test
push
mov
or
ljmp
mov
push
fs
jmp
cmpsb
cmp
repnz
in
insb
pop
jb
xchg
dec
stos
pushf
lds
or
sub
negb
ljmp
push
or
cs
out
test
sti
jno
add
rclb
xlat
dec
cmp
mov
inc
call
out
fs
test
jae
imul
add
shll
testb
iret
jb
mov
pop
mov
repz
or
icebp
push
xor
in
inc
sub
int
sbb
in
lcall
pop
jbe
outsb
pop
inc
pusha
add
inc
aad
cmp
sbb
mov
lock
xor
popa
popa
ret
pushf
iret
test
lods
mov
int
jnp
and
jno
daa
loop
aaa
push
cmp
ftst
xchg
pop
sbb
mov
mov
or
lret
cld
ret
cld
cli
mov
es
sbb
cld
or
cld
cmp
idiv
sub
out
pop
mov
xchg
jl
mov
insb
mov
push
inc
mov
inc
inc
mov
add
faddl
push
inc
int3
add
inc
cld
add
inc
in
add
inc
cmp
repnz
sub
loop
pop
add
dec
sbb
inc
out
add
inc
and
push
in
mov
inc
xor
mov
xchg
mov
lock
test
rcl
or
std
test
rorl
movsb
fstpl
je
add
push
or
jo
add
pop
iret
repz
mov
fmuls
or
sub
jp
mov
ljmp
pop
dec
js
or
mov
shll
mov
repz
mov
test
shll
sarl
and
cwtl
test
sbb
pop
cmpsl
dec
adc
shll
nop
arpl
rolb
shlb
adc
ffreep
pushf
jb
push
pusha
adc
push
or
ret
insb
aas
dec
cmpsl
push
sbb
popf
cs
jecxz
nop
in
roll
scas
add
into
sub
xor
jns
icebp
xchg
mov
scas
ljmp
adc
push
cmp
repnz
lea
inc
push
mov
jl
push
or
ret
jl
mov
cld
push
mov
adc
out
add
inc
add
add
push
xchg
in
jae
shr
sub
and
xchg
test
and
cs
in
repz
cmp
push
pop
mov
shll
push
fldenv
push
push
pop
addl
inc
iret
add
inc
loopne
iret
inc
push
sub
pop
pop
nop
imul
sbb
pop
loopne
pop
cmp
pop
pop
sbb
sub
mov
pop
jl
mov
gs
xchg
gs
push
insl
pop
rclb
fldt
outsl
inc
jp
mov
ret
stos
test
adc
push
push
cs
dec
cs
push
cs
movsb
cs
cs
in
mov
fsubr
jecxz
xchg
rcr
xor
adc
mov
shrb
and
mov
sbb
mov
movsb
jnp
mov
in
inc
test
inc
xchg
std
cmpsb
and
inc
or
ret
sub
fcoml
movsb
or
das
pushf
fistpl
test
jnp
mov
sbb
mov
sub
cmpsl
inc
or
mov
xlat
rcrb
mov
jp
mov
nop
in
dec
test
mov
in
sbb
sti
in
xor
and
lcall
in
mov
test
sbb
sub
inc
cs
stos
sbb
pop
pop
sbb
pop
dec
sbb
pop
bound
push
pop
xchg
cs
imul
lret
cs
imul
or
ret
cs
imul
je
scas
cs
pop
xchg
mov
repz
outsb
repnz
inc
push
repz
push
repz
cmp
push
cmpsl
xchg
ljmp
jnp
mov
out
stos
mov
js
or
sbb
mov
inc
test
data16
mov
adc
push
push
adc
push
ss
push
adc
sub
gs
js
pop
mov
mov
inc
mov
scas
repnz
insb
xor
sbb
push
xchg
gs
pop
jp
out
gs
cmpsl
ja
xlat
cmpsl
out
mov
mov
movsb
fdivrs
mov
cs
and
jge
add
pop
gs
lods
lock
mov
shlb
in
cs
std
sbbb
shlb
mov
push
fs
push
adc
into
push
add
jl
mov
lods
lock
mov
shlb
in
gs
std
sbbb
jmp
lods
sub
iret
inc
or
sbb
into
xor
inc
cs
push
add
enter
test
cmc
jnp
mov
lds
mov
push
lods
or
ror
rcrb
adc
sub
xlat
jne
in
movb
inc
adc
enter
rolb
enter
rorb
in
ret
test
orb
and
push
add
shrb
repnz
cmpb
add
add
mov
add
jnp
mov
xchg
jnp
mov
in
mov
test
jnp
mov
xor
mov
pop
jnp
mov
inc
jnp
mov
push
jnp
mov
lea
mov
cltd
jnp
mov
jmp
jb
test
xor
jnp
mov
or
jnp
mov
push
jnp
mov
movsl
jnp
mov
cltd
jnp
mov
jmp
jnp
mov
sbb
inc
test
shll
mov
test
sarl
repnz
shll
rcr
sbb
aam
adc
rolb
nop
test
mov
sarl
addb
inc
mov
add
sbb
sub
out
and
push
in
shrb
push
in
lock
inc
in
orb
mov
pop
outsb
xchg
test
xchg
pop
je
xlat
shrl
shll
dec
sbb
shll
ror
or
les
shl
xor
in
test
mov
shlb
adc
sub
sbb
add
cs
cs
cs
imul
or
cmp
xchg
enter
rclb
xchg
fdivr
mov
movsb
cld
bound
push
cld
xchg
mov
inc
cld
scas
mov
add
mov
xor
out
mov
sub
test
out
fsubrl
movsb
in
in
lods
in
cmc
cs
fstpl
mov
cmp
std
xchg
popa
mov
addl
repz
mov
repz
repz
mov
repz
into
push
and
sub
sub
jno
out
push
pop
mov
lock
sbb
rorl
mov
cmp
shrl
out
and
gs
jp
andb
mov
idivb
pop
or
push
test
mov
movsb
mov
mov
arpl
in
into
cs
orl
mov
lret
push
out
adc
push
mov
cld
mov
paddb
lcall
xchg
push
jbe
mov
mov
pop
xchg
add
and
loop
into
rorb
adc
shlb
scas
sbb
or
cs
stc
test
jno
jns,pn
push
scas
shrb
je,pn
inc
in
dec
mov
dec
rclb
stos
into
cmc
int3
mov
mov
pop
lret
mov
repz
xchg
mov
shr
mov
push
adc
cmpsb
adc
adc
cmp
aas
jp
mov
sbb
mov
icebp
jp
mov
leave
jp
mov
mov
cmpsl
lret
mov
sbb
cwtl
scas
shlb
int
mov
add
andb
lds
mov
and
cs
test
aad
cmp
add
push
fcomps
and
jecxz
ficoms
adc
outsb
loopne
adc
fnsave
push
add
sahf
test
mov
jge,pn
sbb
cs
in
cmpsl
cs
or
fucomp
out
mov
cmp
dec
add
pop
push
int3
repnz
adc
scas
jb
adc
stos
add
and
je
jb
out
and
push
adc
rolb
adc
rclb
jns
pop
scas
or
jbe
lcall
xchg
or
push
mov
jle
sub
jo
mov
sbb
fidivl
xor
jge
cmp
jecxz
add
xor
loop
cltd
push
xor
fs
xchg
pop
scas
sbb
pushf
test
aam
sbb
inc
outsb
aad
pushf
push
icebp
addr16
xor
jns
or
jo
push
stos
lcall
inc
into
pop
out
sbb
pop
loop
fdivr
push
test
lret
cltd
into
movsb
out
cmp
mov
icebp
add
cmp
adc
mov
push
push
mov
jbe
or
pop
lds
xchg
lret
cmp
std
andl
pop
jp
mov
gs
cmpsl
xchg
fisubs
clc
xchg
mov
inc
inc
mov
arpl
push
cmpb
sarb
shrb
push
outsb
incb
xchg
iret
cli
push
mov
rep
mov
mov
push
dec
and
or
xor
mov
clc
add
ror
mov
rorb
xchg
jle
push
and
mov
adc
cld
push
mov
out
cld
and
sahf
cld
push
mov
mov
cld
mov
pop
mov
mov
xchg
pop
xlat
out
push
or
sbb
pop
cld
sbb
dec
in
mov
jnp
mov
jnp
mov
out
jnp
mov
add
pop
xchg
rorl
sarl
xchg
ss
mov
push
repz
out
or
cmpsl
iret
ljmp
cs
cs
out
stos
in
testl
outsb
pushf
pop
push
cs
add
mov
push
xchg
icebp
push
mov
xchg
ljmpw
mov
and
mov
into
push
into
or
dec
fiaddl
jo
test
jnp
cs
jnp
mov
or
lcall
xor
add
or
mov
repnz
add
enter
push
movsl
sbb
pop
roll
addr16
js
jl
jnp
lcall
sbb
sbb
dec
push
sbb
jl
cli
into
mov
bound
ja
mov
lods
nop
mov
adc
gs
mov
leave
in
pop
or
cmp
lea
mov
mov
in
xchg
push
mov
xor
mov
jl
mov
loop
inc
jnp
mov
ror
or
cli
cld
pop
mov
mov
fwait
out
scas
add
dec
imul
pop
rcrb
pop
js
stos
inc
xchg
and
adc
sub
mov
push
int3
jns
stos
sbb
mov
sub
xchg
rcl
add
repnz
mov
jg
movsl
or
and
ljmp
in
xchg
push
sub
jp
lea
push
inc
jge
lods
and
jg
outsb
pop
iret
pop
je
insl
into
xor
push
ret
pop
lcall
xchg
adc
mov
sub
std
xor
cmc
pushf
lea
pop
negb
pop
outsl
or
pop
pop
repnz
int3
in
push
sti
xchg
jl
push
jle
pop
push
aam
or
rclb
push
in
adc
push
outsb
pop
iret
adc
out
inc
sub
cmp
div
sub
out
push
ret
mov
jnp
outsb
jp
adc
adc
imul
aaa
mov
adc
popf
sub
cmp
scas
mov
call
sub
cmpsl
in
les
lea
cmp
add
mov
repz
mov
test
sub
cs
pop
ret
stos
push
pop
idivb
icebp
push
sbb
insb
mov
pop
outsb
xchg
push
xor
ds
push
call
jp
jns
clc
mov
js
outsl
leave
fisttpl
es
iret
mov
cmp
bnd
fwait
pop
xchg
cld
xchg
pushf
ret
pop
cld
inc
js
ret
jns
lret
push
repnz
out
cmp
push
xchg
pusha
xor
outsb
fcoml
loop
inc
in
hlt
int
leave
in
xchg
icebp
push
xor
stos
mov
nop
add
daa
cmc
sti
cmc
loop
xor
repnz
mov
out
sub
in
lods
cs
shll
into
cmpsl
pop
add
cli
in
icebp
cs
cld
es
aaa
sbb
sub
inc
loop
mov
push
sbb
pop
and
mov
cwtl
notl
lods
pusha
lods
cmpsl
mov
hlt
cltd
adc
inc
ds
mov
mov
shl
stc
sub
andb
bound
cmpw
sub
xchg
enter
cmpsb
push
pusha
adc
push
outsb
pusha
imul
test
cli
in
xor
sbb
sub
ljmp
sub
fs
lock
in
jnp
or
imul
cmp
cmpsl
add
decl
jg
push
mov
lock
loope
test
imul
or
push
xlat
addr16
pop
negl
imul
xchg
jae
cmp
pop
mov
mov
movsb
sub
testl
xlat
test
nop
roll
xchg
mov
sub
pop
cmp
jp
lret
pushf
int
mov
cs
into
mov
outsb
mov
and
jp
hlt
int3
adc
lods
cld
int3
mov
andb
jns
fimull
inc
pop
mov
ret
cltd
cs
imul
xchg
sbb
mov
jno
jb
test
jp
mov
pop
and
cmpsb
scas
in
or
dec
rclb
mov
mov
pop
in
push
addb
pop
add
lar
out
add
shlb
sub
mov
out
mov
jo
mov
xchg
shrl
repnz
imul
iret
mov
repnz
jl
mov
mov
or
push
mov
sub
int3
pop
cmpsl
sbb
pop
jmp
add
pop
push
push
add
fscale
test
or
mov
data16
push
xor
jg
sbb
shlb
xchg
push
sub
cmpsl
push
jp
push
mov
shll
jbe
or
jp
mov
cmc
mov
popf
or
mov
lods
or
cmp
push
mov
repnz
cmpsl
dec
cmp
cmp
or
in
and
mov
pop
mov
adc
mov
add
jp
lret
icebp
shl
xchg
test
mov
sub
movsl
add
mov
jp
mov
lods
mov
popa
gs
or
sbb
imul
std
insb
xor
mov
or
sub
adcb
sub
jo
add
inc
lret
adc
jo
or
jecxz
pop
into
lret
inc
mov
cmpsb
imul
mov
adc
shlb
aas
or
cld
sub
icebp
test
roll
gs
xchg
xor
gs
jp
scas
cmp
sbb
push
imul
mov
bound
push
inc
adc
js
js
pop
jb
xchg
mov
sub
out
and
sbb
inc
pop
pop
cltd
inc
xchg
inc
or
mov
dec
and
imul
ret
cmp
jns
shll
mov
or
cmpsl
test
divl
fnstsw
xor
inc
ds
rcl
popf
rcr
jmp
in
or
loop
insb
pushf
jae
out
pop
jnp
mov
sub
xlat
movb
cs
add
outsb
xchg
in
push
xorb
xor
rcrl
cs
lods
cs
jmp
push
or
adc
cwtl
jbe
gs
mov
mov
sarl
xchg
pop
jg
mov
pusha
mov
hlt
fisttpll
fnstcw
jns
cli
fcoml
sub
cs
sarl
cltd
inc
push
add
mov
punpcklwd
xor
xor
sub
roll
push
insb
or
popf
add
cmp
pop
pop
add
insb
test
sbb
fcoms
adc
push
std
adc
push
in
and
xchg
sbb
outsl
mov
scas
nop
xchg
daa
push
inc
xchg
sbb
lahf
inc
push
pop
test
dec
mov
aad
mov
push
pop
mov
add
dec
ja
sub
popa
mov
pop
repz
mov
sub
insl
xor
push
fisubrl
add
iret
pop
pop
mov
mov
ljmp
ret
jns
sbb
mov
loop
out
jb
sbb
inc
in
gs
pop
testb
add
sbb
jb
xchg
fs
and
dec
aaa
mov
mov
test
xchg
les
or
or
or
sub
pop
and
push
adc
out
out
cmpsl
mull
cmpsl
rcll
lods
or
inc
pop
les
inc
stos
ret
push
ja
scas
adc
insb
leave
nop
stos
insb
in
cmpsl
sti
jb
movsb
sub
dec
mov
cltd
cmp
add
jmp
pop
les
adcb
mov
rorb
sbb
rclb
dec
lods
cmpsl
movlps
jb
xor
and
pop
fstpl
dec
shll
repz
cmp
movsl
add
enter
addr16
popf
js
or
push
sbb
push
js
fildll
jle
xlat
stos
push
or
fstps
aad
push
repnz
outsb
dec
les
push
data16
sti
cs
push
adc
pop
jmp
repz
mov
mov
out
loope
adc
cs
into
and
inc
pop
xor
pop
or
or
adc
insb
cmp
lahf
adc
xchg
scas
push
notb
sub
pop
sar
rcrb
ret
jnp
add
xchg
aaa
incl
fisubl
hlt
daa
dec
dec
stos
sbb
in
jp
adc
stos
fmul
pop
shll
or
mov
frstor
jp
mov
and
lods
pop
std
xchg
adc
inc
pop
pop
adc
outsb
pop
fstps
stos
or
rolb
dec
iret
pop
xlat
insl
and
mov
lret
cld
inc
stos
mov
fwait
sbb
int3
or
xor
lret
sub
test
add
inc
out
lds
cli
sub
adc
sahf
sarl
adc
into
jne
andl
fbstp
fldenv
imul
jae
movsl
mov
ficompl
mov
cmp
stos
cmp
scas
mov
sub
loope
pop
not
loop
push
addr16
push
push
in
add
push
sbb
stc
jl,pt
mov
push
push
addb
inc
ret
pop
das
or
push
sub
jp
mov
insb
fcmovnbe
out
mov
scas
sti
pop
les
sub
xor
fcmovbe
add
sahf
clc
mov
adc
push
lea
dec
cmpsb
lret
les
test
pop
jnp
mov
push
repnz
rclb
push
add
sub
sub
mov
dec
cs
aam
fimuls
int
insb
xor
or
into
shlb
and
jbe
cmp
insb
movsl
push
fs
fs
lods
mov
push
jno
push
loopne
dec
xor
add
adc
outsl
out
fcompl
popa
out
shrb
bound
mov
mov
cmp
cld
cmp
sbb
xor
mov
fistpll
mov
popa
movlps
adc
jne
mov
xchg
sbb
inc
arpl
jnp
mov
ror
or
movb
sbb
test
inc
outsb
test
push
mov
adc
push
adc
imul
in
iret
xchg
or
sbb
stos
cmp
mov
push
adc
and
push
outsb
fsubs
stos
jnp
imul
mov
push
fwait
pop
js
mov
cmpsl
mov
mov
icebp
test
xchg
mov
clc
repnz
pop
js
je
ljmp
pop
jnp
mov
addl
adc
mov
in
shrb
xchg
pop
inc
sub
xchg
push
out
jae
lahf
daa
inc
pop
mov
and
loop
mov
push
testb
ja
xchg
mov
sub
mov
mov
rcll
sahf
nop
outsb
bound
nop
push
push
jbe
movsl
push
mov
pop
mov
mov
sbb
inc
lds
lahf
inc
fnsave
in
bound
sub
movsl
inc
mov
stos
cmp
das
mov
lock
outsb
jae
add
test
adcl
repnz
sti
andb
xor
loop
gs
mov
mov
fadds
data16
pop
lock
mov
sbb
dec
mov
jno
jl
mov
sarb
inc
sbb
cli
push
imul
cmpsb
and
or
or
out
cld
fs
xchg
sbb
xor
test
jp
call
xchg
add
fstpt
sbb
and
ror
sbb
cltd
inc
inc
add
sbb
push
fdivl
cmpb
jb
ds
into
push
icebp
mov
xchg
pop
add
cltd
js
sub
push
push
ds
inc
and
mov
inc
out
ret
out
or
pop
cmp
jp
dec
aam
mov
nop
mov
test
shlb
sub
cmp
in
rcrl
fcmovbe
aas
stc
cmp
and
daa
cs
adc
in
dec
mov
ljmp
in
and
enter
xor
andl
sub
push
jbe
aad
movsb
or
mov
mov
mov
jge
dec
stos
stos
shlb
shlb
out
mov
add
inc
or
rolb
lock
sub
lret
fstl
insb
inc
das
dec
je
sub
sbb
js
mov
jo
mov
xor
sbb
lds
js
sti
inc
jae
aad
cmp
cmp
outsb
add
sub
sbb
and
cmp
lods
dec
or
cld
idivb
aad
int3
or
sub
mov
mov
mov
imul
rcr
push
outsb
lea
adc
sub
test
mov
push
cli
stos
pushf
sbb
sbb
or
xchg
jb
in
cmp
ljmp
jp
mov
adc
outsb
add
jns
ljmp
pop
stos
jbe
add
in
mov
in
or
test
ret
loop
in
mov
in
cld
cld
dec
xchg
cmp
inc
push
adcb
push
mov
push
outsb
dec
js
xor
adc
outsb
and
mov
sbb
gs
mov
es
jecxz
inc
push
mov
cmpsl
pop
jns
sbb
mov
push
cld
push
mov
sbb
mov
and
roll
pop
xchg
les
bnd
pop
fmuls
mov
fidivrl
or
add
lds
bound
xor
testl
sbb
js
data16
cmp
adc
fildl
xchg
dec
mov
hlt
mov
punpckhwd
mov
add
lock
out
mov
fldt
sbb
sarb
rcrb
push
adc
ss
cmpsl
add
mov
and
push
insl
into
xor
jl
sbb
adc
das
cmp
mov
adc
xchg
jne
mov
xchg
dec
pop
add
mov
add
out
dec
add
xor
push
jge
lea
insl
cli
xor
sbb
push
and
pop
xor
push
cmp
adc
dec
dec
rclb
aaa
pop
cld
xorb
es
jne
ds
nop
adc
xor
mov
fs
sub
call
xchg
mov
stos
fwait
jmp
xor
or
lock
and
sbb
inc
push
dec
repnz
cmc
push
lods
sub
fcomp
dec
test
dec
enter
add
inc
cwtl
dec
inc
lea
mov
fidivrs
dec
xor
jmp
insb
push
mov
lods
inc
push
inc
sub
jne
add
dec
xor
fwait
pusha
ss
clc
outsb
std
out
popl
mov
mov
or
dec
push
pop
in
inc
dec
les
pop
jg
repz
cmp
test
mov
lret
inc
cmp
adc
stc
mov
dec
cld
out
fs
out
or
jp
sub
add
sub
rolb
add
jmp
jmp
jmp
pop
popf
lret
gs
push
sbb
or
ja
pop
repnz
cli
divb
xor
cli
test
je
sti
or
aam
cmp
repz
nop
mov
add
cltd
sbb
xchg
popa
add
pop
das
vrcpss
call
add
pop
adc
enter
or
out
jnp
sub
mov
out
arpl
fildll
mov
push
xor
xchg
out
cmp
inc
adc
push
mov
decb
dec
mov
adc
xchg
jbe
insl
aas
dec
dec
notl
fisubrl
jb
adc
sbb
leave
xor
cmovns
push
adc
dec
and
or
sbb
leave
jo
movb
inc
inc
mov
sub
mulb
scas
pop
lock
sub
fdiv
push
pusha
dec
mov
adc
push
jbe
sub
repz
adc
xchg
inc
stos
mulb
lds
leave
xchg
dec
adc
lods
pop
mov
repnz
xor
rolb
int3
jb
lock
test
testb
inc
test
repnz
xchg
test
enter
sub
or
pop
imul
adc
cmp
dec
icebp
bound
or
mov
add
fs
sub
iret
or
cmp
icebp
mov
jnp
repz
mov
xchg
and
xchg
mov
adc
mov
cwtl
xchg
pushf
jae
ficoms
fxrstor
push
in
sbb
xor
cwtl
push
sub
into
ljmp
loopne
cld
ss
adc
out
jno
mov
movsl
sub
dec
cmp
add
outsl
xor
inc
mov
jge
mov
sub
imul
ret
enter
cmpsb
fisubrl
orb
adc
or
sbb
and
in
roll
lret
scas
sbb
test
stc
mov
xchg
orb
cwtl
jo
mov
out
sahf
pop
add
sbb
rcll
add
in
ja
fdivrp
leave
shlb
sbb
pop
pop
cmpsl
imul
js
popf
xor
pop
sbb
cmp
push
lret
mov
pushf
jl
nop
cwtl
mov
fs
lods
loop
in
iret
mov
loope
shlb
sub
mov
ds
rolb
mov
outsl
push
and
jnp
out
xchg
ds
inc
xor
xor
imul
js
daa
and
mov
ja
xchg
dec
jbe
mov
push
sbb
inc
aas
dec
mov
mov
ja
outsb
movsl
push
xor
adc
or
int
insl
inc
jge
sbb
mov
adc
and
push
cmp
outsl
shll
inc
mov
dec
adc
imul
stc
mov
gs
ja
and
cmp
std
popa
pop
xor
out
gs
pop
arpl
jl
cmp
cmovbe
mov
add
test
mov
jge
dec
dec
sbb
mov
xchg
or
and
test
pushw
push
mov
jne
not
mov
pop
jle
outsl
test
sbb
iret
repnz
mov
and
sbb
adc
shl
ffree
lahf
cmpl
add
sbb
dec
lock
xlat
push
add
addr16
xchg
jnp
or
pushl
sbb
pop
dec
test
add
add
add
pop
sub
sub
add
shr
test
and
neg
bsf
sub
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
bt
mov
xor
movzwl
xor
cmp
bts
btr
test
jmp
lcall
ret
or
bsf
adc
xor
adc
cmp
and
xor
jmp
lcall
xor
add
add
pop
xor
xchg
push
shl
test
sub
adc
sub
bt
not
movzbl
not
call
lcall
incl
ret
neg
sub
shl
shr
bt
dec
bts
and
or
btc
jmp
lcall
cmp
or
and
mov
bsf
sub
xor
not
mov
mov
xchg
push
push
xchg
dec
add
add
call
bt
or
sub
shr
test
xor
add
add
mov
bts
bt
inc
neg
sub
cmp
xor
test
bsf
mov
shl
sub
xchg
mov
bsf
bts
inc
dec
or
btr
mov
or
jmp
lcall
ret
or
bts
add
dec
test
adc
xor
xor
shl
call
lcall
add
xorl
pop
xor
xchg
push
mov
neg
xor
bt
bts
and
bsf
jmp
lcall
stc
add
xchg
ret
neg
sub
shr
mov
shr
cmp
and
bts
shl
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
cmp
bt
shr
xor
bts
xor
dec
jmp
lcall
or
call
test
test
test
bts
mov
adc
or
mov
test
add
mov
test
mov
sub
bts
or
neg
btr
test
cmp
call
lcall
add
xor
adc
bts
bts
cmp
xor
shr
shl
call
lcall
or
test
not
adc
add
sub
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
test
xor
sub
shl
not
bts
sub
call
lcall
pusha
sahf
shr
mov
bsf
not
or
xor
shr
and
xor
jmp
lcall
sub
decb
mov
stc
mov
inc
adc
btr
mov
btc
xor
and
adc
and
cmp
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
btr
shl
sub
adc
add
shl
mov
bswap
sub
push
or
and
btc
sub
xor
cmp
adc
add
mov
mov
test
add
not
btr
or
xor
add
mov
dec
mov
or
sub
movzwl
btr
test
sub
neg
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
and
movzwl
test
neg
movzwl
and
bts
adc
call
lcall
add
xor
or
cmp
sub
movzwl
and
bts
mov
add
movzbl
inc
inc
add
test
test
adc
adc
sub
mov
neg
or
and
dec
or
not
shr
sub
call
lcall
mov
cmp
bts
btc
movswl
mov
add
xor
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
shr
or
bts
bsf
and
btr
movsbl
shr
sub
cmp
movsbl
btc
not
or
add
jmp
lcall
add
bswap
or
inc
adc
sub
btc
mov
add
neg
or
cmp
neg
shr
shl
inc
bts
cmp
call
lcall
add
xor
btc
shr
mov
or
adc
or
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
adc
bsf
sub
add
mov
mov
sub
mov
mov
test
add
mov
and
shr
or
btc
movswl
cmp
sub
mov
neg
adc
or
test
movzwl
mov
add
bts
sub
and
sub
add
bt
xor
movzbl
lea
inc
cmp
jne
sub
add
add
test
sub
sub
xor
add
or
shl
test
cmp
xor
adc
shl
adc
call
lcall
je
and
mov
xor
mov
sub
shr
shr
sub
mov
btr
not
movswl
and
adc
sub
sub
and
call
lcall
mov
or
bts
bsf
test
shl
add
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
adc
or
not
test
sub
neg
call
lcall
btc
sub
add
test
cmp
add
and
add
xor
neg
and
cmp
mov
neg
movswl
bts
jmp
lcall
btc
not
test
not
bsf
bsf
bswap
btc
btr
mov
add
bt
movsbl
cmp
add
cmp
test
and
test
call
lcall
add
adc
and
sub
shr
shr
or
dec
push
pop
inc
add
loop
xor
and
or
cmp
inc
bt
add
sub
test
push
decl
mov
add
or
bsf
neg
adc
mov
sub
neg
call
lcall
jmp
enter
add
shlb
neg
test
sub
and
shr
push
shll
bsf
sub
adc
or
bsf
bsf
cmp
movzwl
push
mov
bts
bt
or
bt
mov
shl
btc
sub
mov
btr
adc
mov
add
add
movsbl
xor
push
push
pop
add
add
call
not
xor
adc
not
test
not
and
movswl
xchg
and
adc
xor
bsf
inc
bsf
cmp
test
mov
adc
adc
bt
xor
xor
cmp
call
lcall
mov
or
sbb
std
sub
bsf
movzwl
dec
bsf
add
mov
bsf
add
test
test
xor
call
lcall
mov
loop
btr
btc
test
sub
bsf
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
adc
sub
xor
neg
shl
bts
shl
bts
xor
or
bsf
and
sub
shr
and
btc
call
lcall
loope
lret
or
btr
btr
dec
shr
shl
adc
mov
neg
adc
inc
cmp
add
add
cmp
bts
cmp
je
bts
btc
cmp
bsf
test
shr
add
bts
add
or
xor
bt
bt
adc
xor
cmp
and
call
lcall
xor
and
add
sub
bts
movsbl
shr
sub
shl
add
bts
shl
add
shr
sub
inc
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
xor
movsbl
or
adc
adc
shr
or
inc
push
decl
mov
add
sub
or
xor
bts
bsf
bsf
movzbl
push
decl
mov
add
not
adc
and
sub
or
add
bt
add
test
mov
shl
bsf
or
btc
add
inc
jmp
shl
or
xor
add
bts
test
shr
mov
movzbl
adc
btr
test
adc
btr
cmp
xor
mov
and
xor
shl
not
dec
shr
adc
btr
add
adc
inc
shl
not
cmp
shr
inc
test
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
shl
test
test
test
mov
add
movsbl
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
test
and
or
bt
mov
cmp
test
not
push
push
not
btc
movzwl
xor
mov
and
adc
bsf
shr
push
sub
mov
sub
cmp
not
or
sub
or
and
xor
mov
or
adc
or
shr
and
shl
and
call
lcall
js
bsf
bsf
adc
xor
cmp
bts
and
lea
adc
sub
movsbl
movsbl
cmp
or
mov
sub
mov
bts
xor
mov
and
cmp
add
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
iret
add
add
btc
movswl
sub
mov
sub
mov
bsf
mov
shl
movzbl
xor
sub
add
cmp
push
btc
add
or
and
dec
shr
shl
and
not
push
test
neg
xor
adc
or
and
add
push
or
not
shl
sub
shr
adc
mov
btr
call
lcall
mov
test
xor
adc
mov
btc
add
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
neg
mov
add
neg
shr
adc
shr
add
call
lcall
sub
inc
add
shr
shr
mov
and
test
btr
bt
add
or
shl
movzwl
test
test
not
movswl
test
call
lcall
mov
neg
cmp
sub
xor
cmp
add
mov
mov
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
sub
testl
test
sarl
add
rcll
mov
nop
adc
or
and
jge
jbe
jns
add
pop
dec
add
mov
pop
or
int3
or
pop
add
jae
jns
lock
add
fwait
out
movsl
and
mov
shl
dec
pop
movsb
pop
jbe
add
cmpsl
imul
loopne
push
xor
ret
nop
push
adc
xor
cmp
add
and
inc
add
lock
xchg
sub
fwait
add
inc
or
add
out
adcb
aas
stos
ficoms
add
mov
loope
or
cmp
pusha
jo
rcrb
or
test
or
sbb
or
inc
mov
mov
sbb
fsubl
add
push
mov
sub
push
sbb
inc
in
xor
add
adc
sbb
or
push
mov
add
lahf
jmp
and
aad
jp
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
aam
add
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
push
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
pop
jb
shrb
cwtl
cmp
ja
gs
popf
sbb
sub
or
outsb
repnz
ljmp
jb
out
and
push
outsl
fs
dec
int
push
xor
inc
xchg
jmp
insl
cltd
sbb
dec
call
jne
fstl
jb
cs
pop
push
adc
jmp
add
in
add
nop
cmc
xchg
clc
adc
xchg
std
mov
inc
loop
sarb
sbb
aas
add
adc
gs
int3
cmp
shll
popa
addr16
add
and
jns
je
pop
loope
insb
repz
imul
imul
inc
and
cmp
bound
sub
jo
insb
pop
fs
dec
push
pop
inc
mov
push
jns
dec
add
rcl
lods
jecxz
inc
shlb
add
movsb
call
push
dec
inc
push
push
or
inc
pop
mov
xchg
cli
lret
lods
or
dec
inc
add
pop
