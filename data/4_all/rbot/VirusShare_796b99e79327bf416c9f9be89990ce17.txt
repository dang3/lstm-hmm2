shlb
add
mov
mov
aam
mov
shrb
fs
test
adc
adc
cmp
cmpsb
negb
push
jmp
mov
mov
push
sub
xor
and
mov
fdivrs
out
into
sbb
cld
hlt
sub
push
insl
inc
popa
mov
mov
mov
xor
in
scas
sbbl
push
stos
insl
cmp
mov
jl
cmc
fldenv
inc
ret
in
sbb
scas
jo
std
lret
out
cmp
jne
cmp
outsl
loopne
fdecstp
popf
vsqrtss
push
push
or
popf
insl
cmp
jo
and
jge
insl
xor
out
push
xor
and
cmpsb
dec
aad
ret
aas
sbb
pop
and
test
lahf
outsb
mov
sti
fdivrl
int3
push
sbb
lea
dec
test
jmp
cs
iret
lods
js
push
jnp
scas
push
push
es
sbb
cmp
sbb
fistps
in
mov
inc
cld
xor
mov
stos
jmp
pop
in
mov
loopne
dec
push
or
daa
push
std
sub
pop
mov
push
icebp
sub
push
pop
mov
jle
push
xchg
inc
rolb
out
push
dec
push
sub
stc
push
lret
sub
cltd
out
lock
stos
xorb
subb
movsl
sarl
shll
aad
mov
insb
and
xchg
sub
mov
mov
bswap
clc
jmp
xchg
mov
pushf
popa
mov
stos
ret
fcmovnu
sbb
jno
xlat
mov
lds
xchg
mov
sub
sub
loopne
mov
filds
cltd
and
mov
sti
ss
shr
cs
xor
adc
hlt
insl
add
xchg
cltd
mov
mov
dec
push
test
lret
sub
sbb
jmp
xor
xlat
cmpsb
jno
pop
insb
clc
sub
jl
dec
adc
lods
sub
push
mov
sub
sub
add
jg
xlat
mov
popa
and
inc
aaa
adc
xor
fldenv
add
mov
lea
push
std
adc
into
add
in
fdivrl
mov
stos
sbb
mov
sub
inc
push
mov
and
mov
jge
fwait
test
fwait
cmp
ds
arpl
jge
iret
cmp
mov
mov
mov
cmpsl
push
sub
insl
sub
jmp
out
sub
mov
gs
jnp
pop
and
int3
mov
stc
push
dec
ret
mov
fisttpll
stos
sti
xor
or
cltd
adc
scas
popa
sbb
xor
aad
fcomp
and
push
xor
pusha
xchg
loopne
daa
lret
push
rorl
call
push
shrl
dec
aas
sbb
jecxz
loopne
shll
out
fdivs
push
out
jmp
scas
aaa
arpl
cmp
inc
inc
mov
sub
mov
outsl
dec
idivb
push
inc
push
pop
pop
sbb
adcb
mov
pop
or
in
jle
flds
out
stc
cmpsb
jg
loopne
jnp
adc
push
and
or
roll
pop
adc
jg
aad
xchg
mov
pushf
sbb
imul
fnstenv
int
jnp
cltd
jne
lahf
scas
sub
cmp
jno
shrl
pop
std
movsb
pop
sub
loopne
stc
push
inc
sahf
jne
fdivs
fmul
std
divl
xor
out
mov
ret
int
pop
adc
adc
dec
call
pop
imul
dec
daa
std
out
dec
shl
lds
fcompl
sbb
sbb
ret
xchg
lea
push
mov
sbb
lea
add
stc
mov
push
mov
sub
pop
push
sbb
or
das
sbb
mov
dec
lret
mov
test
jnp
push
sub
add
sbb
jge
fcmovnbe
jmp
jecxz
in
adc
dec
add
lods
or
xchg
mov
xchg
cmp
std
loope
shl
loopne
dec
in
mov
pop
aaa
mov
aas
xchg
pop
mov
mov
jp
sbb
fbstp
add
sti
mov
rclb
stos
dec
mov
dec
cmp
call
mov
mull
enter
pop
pop
xor
push
data16
ficoms
pop
bound
inc
ficompl
les
insb
andl
jecxz
push
pop
add
outsb
mov
out
jl
mov
lahf
ljmp
xlat
pop
push
and
sub
cmc
mov
xor
cmpsl
inc
or
fists
xor
cmpsl
ljmp
mov
mov
loope
or
jno
dec
and
mov
fistpll
in
out
test
cmp
lock
enter
xor
xor
pop
test
push
jno
sti
xchg
lret
xchg
and
dec
inc
cwtl
fldpi
and
mov
divw
add
rclb
mov
hlt
lret
rcll
push
pusha
ret
mov
xorl
push
in
pop
mov
pop
cwtl
leave
xchg
out
mov
leave
or
jns
loope
sbb
adc
mov
ficoml
neg
adc
push
mov
loopne
enter
sub
and
stos
mov
adc
pushf
sbb
mov
es
xchg
ffreep
aas
mov
int3
test
mov
bound
subb
cmp
fsqrt
sbbb
inc
daa
inc
mov
dec
jne
mov
addl
enter
pop
mov
setne
je
mov
fdivrl
pusha
pop
les
push
or
out
jecxz
add
sbb
hlt
jle
sbb
pop
push
adc
cmp
mov
lret
jmp
mov
sub
push
xchg
mov
daa
pusha
pop
jmp
arpl
pop
sbb
sbb
and
mov
and
xor
popf
ds
jne
in
bound
sti
mov
jae
lret
jge
and
mov
dec
adc
aad
test
dec
dec
dec
xchg
shrl
mov
xchg
repnz
fchs
jecxz
jae
add
aaa
mov
test
mov
mov
adcl
mov
inc
push
sub
push
insb
xchg
xchg
pop
mov
jo
into
sbb
mov
jge
lret
and
shr
cmp
pop
dec
enter
popf
adc
mov
xchg
cmp
cmc
and
addr16
xchg
test
xchg
stc
pop
mov
stos
dec
sub
sub
xchg
shlb
sub
in
jg
adc
mov
lds
xlat
xorl
and
push
pushf
sub
mov
adc
jo
int
sbb
cmp
ret
pop
aad
rorl
inc
test
addl
add
inc
dec
pop
sar
mov
aad
pop
or
andl
or
fcoms
aad
fisubs
adc
mov
stc
sbbb
sbb
sbb
mov
lds
mov
cltd
and
mov
rcll
imul
dec
mov
popf
xchg
push
dec
out
jmp
and
or
mov
leave
sbb
push
mov
xor
in
stc
xlat
arpl
push
test
xor
xor
out
lds
subl
xor
incb
and
orb
and
lock
and
or
in
add
push
enter
add
sub
dec
mov
cmc
inc
cltd
mov
mov
dec
dec
adc
insl
dec
jg
push
mov
ret
mov
or
or
and
xchg
mov
jbe
in
sub
mov
add
and
push
dec
and
pop
cltd
cmpsb
popf
push
scas
scas
sub
bound
daa
lods
sub
leave
lahf
lea
mov
pop
test
and
stc
jmp
out
add
setp
pop
das
mov
jle
ljmp
push
adc
mov
out
sahf
cwtl
mov
jae
push
aad
popf
into
rorl
repz
mov
sub
pop
sbb
dec
ljmp
shll
pushf
xchg
test
pushf
mov
xchg
stos
iret
std
in
dec
vmwrite
subl
mov
mov
push
outsb
xor
adc
mov
dec
inc
jnp
cmp
pop
out
adc
xchg
ljmp
xor
test
fdivs
pop
test
int
jp
int3
xlat
jl
scas
add
sbb
or
call
pop
out
cmp
fisubrs
lds
mov
lcall
sbb
mov
and
and
mov
jne
popa
test
repnz
dec
and
mov
pusha
out
mov
rcrb
bound
jl
std
inc
xchg
lods
in
xchg
adc
inc
mov
shl
fisubs
dec
cmp
test
jb
mov
shrb
add
mov
rorb
mov
lcall
iret
rcll
add
leave
pop
and
or
lods
in
loope
int
jle
cmp
sbb
xchg
jle
xor
sub
jae
jl
cld
xorl
mov
adc
pop
cld
push
call
aam
jns
pop
scas
aad
xchg
fidivrs
andl
sub
or
movsl
insb
add
xchg
and
call
mov
adc
add
ffreep
out
shll
testb
in
arpl
xor
jp
test
inc
pop
imul
arpl
inc
fisubrs
jp
imul
test
lcall
jns
stos
mov
pop
int3
ret
mov
loope
loop
andl
inc
lock
pop
inc
or
mov
sbb
mov
loop
xor
fstps
add
les
lods
dec
push
add
jl
and
insb
mov
ljmp
mov
push
jns
mov
add
mov
movsl
lds
push
roll
stos
into
mov
vpsrld
mov
fisttps
sub
fsubp
cs
les
incb
shrl
pop
mov
mov
das
mov
pop
fstp
cmp
push
pop
dec
push
test
std
mov
mov
dec
repz
lahf
in
adc
inc
sbb
xchg
dec
push
push
je
cld
sbbl
dec
lret
inc
sbb
call
adc
xchg
push
add
cmp
rorl
jns
cli
push
jg
mov
test
mov
xchg
mov
shll
imul
nop
mov
fucomi
icebp
stc
push
dec
int
fdivl
mov
fadds
les
lds
rcrb
fyl2xp1
or
scas
pop
out
outsl
cmp
lret
mov
sub
stc
jp
pop
call
mov
sbb
dec
int
jle
add
test
rclb
popf
arpl
pop
or
scas
push
sbb
adc
xchg
mov
addb
jmp
jae
jno
push
subb
cmp
ljmp
pop
shl
push
fcmovbe
jmp
xor
sti
sti
mov
fwait
das
mov
xchg
es
pop
cmp
scas
aas
lcall
mov
inc
inc
add
and
xor
filds
std
insb
add
push
scas
cli
mov
nop
fldl
mov
aaa
inc
cmp
jno
sbb
xor
addr16
fdivrl
ret
sub
mov
scas
sbb
repz
pop
lods
mov
jns
add
dec
popf
lds
jmp
sub
jne
clc
adc
fs
jmp
lods
test
or
push
cmpsb
sbb
bound
xchg
cmc
sti
xor
jg
add
aam
xchg
mov
xchg
pop
fisubl
or
push
push
sub
pop
xor
mov
jno
mov
push
inc
sbb
imul
xchg
lods
mov
pusha
loop
mov
sarl
in
outsb
and
dec
mov
loop
cmp
aam
xchg
push
in
fs
push
mov
or
test
iret
pop
andb
scas
inc
adc
cli
mov
pop
or
rcrl
xchg
mov
mov
xor
xchg
mov
fwait
sub
mov
mov
inc
scas
stos
and
pop
sbb
mov
mov
stos
xchg
pushl
mov
mov
jge
sub
imul
sub
pushf
mov
push
mov
or
xchg
jo
mov
test
arpl
adcb
popa
loop
mov
lods
dec
ja
xor
mov
lds
dec
leave
testb
in
clc
push
adc
dec
fisubs
push
movsb
int
loopne
xchg
jbe
jmp
in
fdivrl
lret
cli
and
iret
mov
cmp
shr
int3
pop
fcmove
inc
xorl
test
imul
rolb
add
xchg
std
dec
subb
addl
mov
mov
xor
roll
push
xchg
and
add
or
mov
or
lds
icebp
leave
es
add
les
inc
xchg
shrb
dec
sbb
data16
mov
ret
sbb
imul
jp
cli
cld
lret
lret
cld
jne
xchg
insl
bound
jae
xchg
xchg
jnp
push
xor
lahf
or
and
xor
lods
xchg
cltd
shll
leave
scas
cltd
or
mov
fstps
lahf
push
fadds
mov
ja
mov
insb
test
rcll
mov
je
lock
mov
loope
clc
sarl
hlt
imul
out
lahf
cld
subl
mov
cmp
negw
inc
mov
fldcw
lods
adc
sti
loopne
mov
xchg
je
dec
ss
je
mov
pop
mov
aam
popf
aad
mov
arpl
movsl
jg
pop
sub
jb
cmp
jle
mov
push
mov
adc
cs
test
fildl
cmpb
test
into
in
sbb
push
xchg
pop
and
imul
outsl
repz
rcrl
fdivrs
jmp
lret
js
mov
xchg
sub
adc
in
sbb
test
or
aam
mov
loopne
jb
fmuls
popf
pop
mov
push
cli
xor
roll
or
mov
xlat
scas
sub
xorl
jge
scas
std
mov
jnp
adc
fnstcw
and
into
adcl
fsts
test
xor
add
fisubl
stos
pop
gs
subl
push
and
jmp
inc
testb
stos
add
jecxz
shrl
mov
dec
test
jns
andl
leave
mov
pop
jno
mov
lret
mov
daa
int
cmp
dec
jns
out
mov
mulb
adc
out
cmp
lods
dec
lock
fcomps
inc
pop
mov
outsl
xlat
sbbl
fdivl
xor
fstpl
daa
nop
pop
and
pop
loope
adc
roll
int
in
outsl
xlat
xor
repz
pcmpgtb
add
sbb
lods
movsb
pop
fadd
sbb
je
lock
fcmovnu
in
es
sbb
xor
jns
sbb
mov
test
leave
enter
xor
or
xor
pop
iret
xchg
leave
pop
js
movsl
xor
insb
add
push
sbb
adc
sbb
icebp
shl
or
or
std
shll
enter
mov
cmp
gs
mov
divl
add
clc
test
aam
scas
cmp
rorl
mov
jecxz
add
sbb
cli
lea
mov
xlat
stc
add
in
mov
xor
ret
add
add
push
cmp
mov
mov
dec
xor
int
cmp
xlat
and
push
xor
imull
pop
add
lods
lods
add
sbb
insl
pop
js
movsl
xchg
mov
xor
push
ffree
mov
insl
xchg
inc
lds
pop
dec
dec
jno
in
jmp
shr
xor
push
adc
xchg
lods
jb
mov
leave
lods
push
fcmovnu
pop
inc
in
sub
jmp
in
sub
lahf
adc
out
mov
push
in
pop
sbb
and
std
mov
fs
jp
add
ficomps
mov
dec
std
sbb
andb
addb
and
test
cmp
test
fidivrs
in
adc
and
jmp
fmulp
loope
lahf
lea
sbb
xchg
cmp
mov
popf
sub
add
imul
pop
addr16
dec
lea
dec
or
popf
cmpsb
loop
les
jo
and
stc
mov
insl
stc
stc
or
scas
adcl
loop
cli
xchg
cltd
sti
pusha
cwtl
xlat
loope
nop
cltd
in
in
lea
mov
std
push
pop
mov
hlt
xor
jmp
pop
jns
cmp
and
sub
insl
loope
test
or
push
sbb
inc
icebp
mov
movsb
jle
loop
jnp
inc
fildll
xchg
ljmp
pop
fsubr
xchg
xor
lret
mov
push
je
push
imul
mov
mov
imul
mov
adc
sub
pop
in
mov
mov
pop
sti
cmp
filds
or
insb
loopne
sbb
pop
arpl
sub
dec
and
or
arpl
aam
fs
stos
stos
lahf
pop
mov
push
js
push
mov
dec
outsl
scas
mov
jo
mov
pop
mov
pop
xor
sub
mov
mov
xchg
dec
adc
loopne
sub
push
sub
iret
xchg
jnp
inc
lcall
shll
push
rcrl
lret
sbb
enter
dec
ja
sti
out
mull
push
pusha
adc
cltd
jp
scas
out
sub
out
frstor
fldcw
call
popf
pop
mov
mov
pushf
inc
loopne
loop
cmpsb
loop
fisttpl
or
out
pop
outsb
test
inc
stc
push
loop
mov
xor
fsubs
push
lahf
jnp
mov
jnp
sub
push
cmp
jl
push
inc
insl
push
adc
outsl
sbb
aad
ss
cmpsb
pop
pop
cmp
clc
std
repnz
loope
aas
shl
adc
lret
adc
fcmovnb
push
add
iret
xchg
ret
fwait
mov
or
ror
fimuls
cltd
or
shrl
lds
mov
adc
cmp
js
xor
xlat
add
out
loope
push
rcr
dec
push
pop
sbb
xchg
divl
ret
adc
cli
jmp
jmp
xlat
insl
push
hlt
sbb
lcall
outsb
jge
rol
iret
ljmp
or
xor
jo
sub
out
out
out
loopne
sbb
mov
or
mov
lods
or
xor
mov
aas
fsub
push
dec
fucom
pop
dec
fnclex
inc
shll
mov
cld
inc
sti
pop
add
fcomps
xchg
ror
pushf
or
mov
xchg
test
or
or
mov
cmp
cs
je
rol
jg
fiaddl
cmp
add
je
mov
xchg
stos
add
push
inc
mov
fwait
dec
ja
pop
loope
push
push
lret
inc
cmp
xchg
pop
mov
mov
into
push
dec
subl
loopew
and
xor
and
sbbb
and
pop
in
cmpsb
shl
outsb
dec
mov
addr16
sbb
fcmovnbe
mov
das
lahf
or
in
add
test
fld
psrld
ror
es
pop
xchg
int3
dec
clc
cltd
int3
dec
clc
sahf
lret
mull
scas
movsl
enter
xchg
and
sbb
add
or
sbbl
std
iret
or
out
das
pop
jp
adc
or
cmpsb
rorl
divl
dec
ret
xorl
je
shlb
or
subb
ret
ret
es
mov
das
lcall
and
jbe
cltd
push
xchg
into
cmp
shll
pop
sbb
push
es
cmc
pop
bound
in
je
mov
mov
cli
mov
lcall
adc
mov
jno
loopne
push
clc
mov
addr16
ret
fucomi
mov
ljmp
cmc
stos
fstl
add
mov
xchg
xchg
shlb
leave
sub
repz
cmp
enter
adc
xlat
mov
in
push
pop
rorb
mov
add
xchg
mov
outsl
movsb
and
pop
cld
xchg
subb
ret
dec
outsb
pop
lods
xchg
mov
cmp
pop
neg
jg
cmp
pop
mov
dec
outsl
imull
sbb
mov
jl
ljmp
out
sti
ja
fcmovu
jmp
in
mov
xor
mov
aas
cwtl
lcall
leave
scas
mov
scas
mov
loope
addr16
sbb
lea
hlt
test
adc
bound
sub
xor
dec
movsb
add
jmp
mov
inc
pop
ror
push
nop
orl
xor
mov
sub
sbb
jp
aas
icebp
bnd
sbb
es
jmp
dec
idiv
adc
aad
jle
sti
stos
leave
iret
mov
lods
sbb
sub
leave
push
xor
mov
mov
insl
fisubrs
add
cmp
outsl
popa
je
loop
das
dec
cltd
cltd
fs
leave
cltd
dec
xor
sbb
insl
xlat
arpl
test
hlt
daa
xor
mov
test
leave
add
jg
mov
jne
scas
adcl
hlt
lret
add
push
shrb
mov
sub
sbb
aas
fstpt
negb
cmpl
nopl
xchg
jmp
mov
jne
cmp
adcl
adc
imul
roll
or
lcall
mov
xor
insl
icebp
sbbb
mov
mov
cmp
jl
out
xor
stos
outsl
imul
sahf
loopne
lods
in
pop
orb
std
sbb
arpl
and
push
mov
addr16
addl
sbb
cmp
stc
lret
cmpsl
outsb
pop
fildl
lret
adc
lahf
int
pop
popa
in
rcr
mov
int
pop
insl
fisttpll
mov
cmp
mov
std
idiv
insl
les
pop
movsl
das
push
shrb
xchg
adc
pop
and
push
jns
or
lods
push
repz
sbb
mov
jno
sbb
xchg
aam
pop
xchg
jmp
mov
mov
add
mov
xor
add
data16
mov
jecxz
insb
and
cmpsb
scas
fistpll
push
aam
aad
into
pop
clc
insl
mov
sbb
cs
adc
ljmp
push
out
neg
xorl
pusha
in
leave
or
fldl
mov
jge
in
aad
pop
stc
imul
mov
outsl
pop
xor
cmpsl
dec
ret
push
stos
jo
dec
or
jne
iret
iret
xchg
xchg
pop
mov
lods
mov
mov
out
jl
daa
es
pop
int
mov
jecxz
daa
fdivl
inc
iret
xorb
loopne
jmp
mov
add
mov
push
fcos
cmp
int3
lds
mov
mov
jnp
pop
in
pop
mov
lcall
fbld
repz
int3
mov
cltd
ljmp
jno
call
jmp
xchg
mov
pop
enter
add
mov
mov
test
sbb
out
loopne
jo
sbb
leave
and
inc
les
push
popa
mov
mov
in
gs
jbe
cwtl
push
pushf
cmpb
imulb
dec
insl
insl
push
fsub
xchg
sbb
lcall
add
fs
add
and
mov
cmpsb
test
stc
add
repz
or
push
sbb
mov
cmc
iret
test
cmp
adc
loopne
int3
cld
add
sub
adc
lret
fsub
test
sbb
sbb
nop
dec
adcb
mov
adc
je
cmc
or
fs
in
xor
gs
lods
sarl
rcrb
std
outsl
dec
sahf
jns
sti
pop
sbb
fisubrl
fdivr
and
and
into
push
cwtl
and
movsb
pusha
push
add
inc
or
lcall
les
xchg
shlb
and
cmc
rcrl
jl
nop
xchg
push
stos
inc
jge
cmp
mov
rclb
push
fldenv
scas
and
dec
mov
aad
mull
inc
popf
in
std
inc
cmp
lret
std
push
jne
movsb
std
or
xor
jle
call
mov
mov
daa
loope
pop
rcll
or
jge
cltd
and
sarl
leave
cmp
aam
mov
in
push
mov
dec
mov
lret
faddl
or
adc
pop
daa
mov
aaa
mov
mov
jmp
adc
lea
out
testb
adc
pop
loope
imul
inc
xlat
add
mov
cltd
and
fidivrs
pop
mov
lds
cmp
push
push
adc
sbb
scas
stos
sbb
add
mov
leave
add
aas
test
mov
stos
push
or
ljmp
mov
pop
add
sti
mov
sub
push
xchg
repz
jmp
pop
push
sti
or
lock
pop
sbb
call
push
stc
lea
paddw
xor
sub
push
adc
dec
lods
mov
fimull
mov
out
sti
enter
cmp
pop
sub
bound
iret
fcoml
addr16
mov
cli
stos
sub
imul
popf
mov
stc
gs
sub
ret
sub
sub
loopne
jae
push
nop
ja
lods
mov
cmpsb
mov
frstor
imul
adc
stos
sbb
dec
pushf
icebp
mov
cmp
mov
xor
jno
ljmp
inc
das
lods
adcl
movsb
mov
or
lock
fcoms
gs
pop
adc
xchg
add
cltd
xor
fsubrp
jl
mov
push
int3
lcall
mov
sti
dec
mov
loopne
mov
loopne
inc
sbb
push
jns
jne
imul
add
inc
jmp
fildll
mov
test
add
pop
pop
test
loop
popa
test
pushl
mov
cs
insb
jg
lcall
insl
push
int
imul
ret
mov
ljmp
int
and
stc
mov
lret
mov
xchg
or
std
sub
dec
sub
fstpt
fstps
shll
mov
imul
sbb
enter
hlt
iret
imul
push
shl
jl
push
pop
mull
popf
push
mov
leave
iret
fwait
jg
loopne
dec
movsl
mov
push
bound
fildll
in
jl
loop
ljmp
hlt
daa
js
push
lock
fldt
lods
mov
push
cltd
scas
adc
push
int
and
arpl
out
adc
shlb
jl
lock
mov
mov
nop
sbb
add
ds
test
sti
push
adc
loope
in
in
and
dec
push
repnz
xchg
and
and
xchg
idivl
mov
push
out
repz
jns
push
enter
in
aad
aas
mov
inc
xchg
dec
in
aaa
stc
jmp
inc
addr16
dec
fldt
push
mov
inc
jg
ret
dec
inc
lods
adc
lea
jl
jne
xor
in
sbb
test
add
jle
mov
std
adc
push
mov
rcrl
fyl2x
iret
cld
ss
xor
popf
test
dec
push
hlt
pop
in
jge
loopne
or
adc
aad
mov
jbe
stos
mov
imul
mov
shlb
adc
cmpsl
pop
es
lods
pop
mov
mov
sbb
mov
push
lock
aas
fwait
aad
xor
repz
ret
pop
sbb
imul
aad
adc
shll
ret
sub
subl
mov
and
insb
das
fnstsw
in
mov
and
cmp
jl
in
fistps
stos
stos
lods
mov
inc
mov
rcrl
pop
cmp
outsl
mov
shrl
jmp
hlt
mov
jne
fidivrl
int
dec
in
inc
arpl
insl
int
testb
addr16
aad
call
add
hlt
xchg
out
cmp
sti
inc
aas
cmp
sub
test
fsubs
inc
sti
shll
and
push
and
push
mov
xor
lea
cld
cmpsl
scas
stos
int
dec
mov
leave
xchg
xchg
pop
pop
ja
mulb
add
mov
cltd
pop
fcomi
test
and
stos
pop
cmovs
jno
lds
mov
fadd
sbb
scas
aad
or
test
sub
sbb
in
test
push
xor
iret
lods
mov
jge
jge
lea
inc
int
mov
sbb
movsb
sbb
loopne
or
arpl
testb
pop
xor
cmp
into
std
push
or
inc
out
cmc
outsl
jmp
cli
jg
into
push
cmpsb
or
je
pop
sbb
rcll
test
adc
idiv
mov
cmp
or
or
std
pop
and
outsl
mov
jnp
jns
add
sar
mov
cmp
jl
sbb
scas
xlat
cmc
andl
test
cmpsb
cmp
lods
mov
mov
mov
mov
and
mov
fdivrl
mov
test
adc
mov
daa
mov
rol
outsl
add
mov
pop
dec
bound
test
stc
cltd
imul
lret
xor
enter
outsb
xchg
dec
pushf
idivb
popf
push
xchg
sub
mov
lret
sar
cltd
stc
pop
inc
dec
mov
cs
add
stos
push
icebp
imul
or
push
std
and
gs
cld
insl
mov
push
or
mov
in
loop
jb
mov
out
rcr
ja
xchg
add
sub
inc
cmp
add
repnz
jnp
jg
es
sbb
mov
rcll
dec
mov
shlb
cld
loope
mov
dec
sti
jecxz
jae
add
cli
cli
add
loope
pop
inc
inc
cmc
or
ja
sbb
jmp
popf
pop
add
lret
push
imul
fnstsw
pop
or
lcall
loope
int
test
push
pop
mov
sahf
push
fs
sub
xchg
mov
cmp
sub
decb
pop
xor
xchg
ror
imul
mov
push
and
cmp
jg
cmc
lar
cmp
arpl
in
cmp
and
pop
test
jp
das
dec
rcll
adc
jne
sbb
jae
or
fldln2
sub
cli
je
int
std
xchg
mov
sub
std
into
adc
aad
xor
aas
test
aam
les
lods
dec
shrb
sti
push
mov
stos
xor
clc
cltd
mov
mov
pop
dec
push
mov
pop
jmp
cs
cltd
push
popf
sti
inc
sbb
arpl
scas
ds
popf
movsb
push
int
cmpsl
and
cs
into
stc
sub
in
mov
mov
xchg
stos
cmp
or
call
jnp
ljmp
or
aad
call
or
aam
daa
or
mov
cmp
inc
sbb
icebp
jg
test
xchg
enter
mov
iret
out
test
jge
popf
std
flds
fwait
imul
ss
add
xor
bound
mov
mov
xlat
insl
in
mov
sbb
outsl
add
gs
cli
lods
sahf
dec
jecxz
enter
test
movsl
cmc
sbb
jle
repz
std
int
roll
stc
sahf
push
sub
inc
dec
xchg
icebp
mov
pop
stc
pushl
jnp
incl
das
scas
aam
lea
insb
fxch
in
jmp
cmp
out
addr16
xor
movsl
xchg
jg
leave
lods
ficompl
jge
inc
cwtl
arpl
cltd
sub
shll
imul
test
sbb
mov
jb
add
xchg
pushf
jae
or
mov
dec
xchg
sti
js
js
les
xor
pop
daa
aad
adc
shl
cmpsb
or
jge
arpl
inc
push
popa
lods
or
fldl
mov
add
in
fdivrl
pop
mov
shr
xor
pop
pop
xchg
adc
clc
xlat
and
mov
rol
outsl
add
ficomps
dec
push
inc
aad
lret
and
ret
push
add
push
push
dec
iret
pop
dec
xchg
imul
mov
jl
ficoml
loopne
fucomp
add
subb
rcll
mov
push
adc
sbb
rcl
sub
fsubp
xor
jno
mov
int3
sti
sub
mov
xor
adc
enter
cli
ret
lods
jmp
shl
pop
and
sarb
dec
into
in
and
popf
scas
xchg
adc
popf
adc
test
fidivrl
xlat
imul
loopne
cmp
and
loopne
xchg
add
jbe
stos
lods
fldenv
and
pop
daa
sahf
in
jge
pop
mov
movsb
add
cmp
or
push
adc
scas
imul
adc
shrl
xor
xor
rdpmc
cwtl
fidivrs
jp
mov
xchg
pop
push
movsb
cmp
out
in
aas
aas
jle
in
mov
das
imull
stc
scas
pop
shl
cli
xchg
lock
add
adc
arpl
push
pop
pmulhuw
fnstsw
inc
sub
ds
xorl
loop
cwtl
scas
push
dec
adc
cmc
pop
pop
pop
add
cwtl
inc
or
or
sub
inc
addr16
inc
pop
int3
mov
fsts
leave
mov
push
sti
mov
and
es
cs
js
pop
inc
jne
in
addr16
ss
and
aam
sarl
jnp
ss
rcrl
inc
loop
pop
jne
jecxz
popf
xchg
rcll
test
inc
fisttpl
loop
out
cmp
cmp
pop
fldt
ljmp
adc
jo
push
sarb
or
mov
dec
and
cmp
loopne
fdivrs
jmp
outsb
xor
int3
mov
loop
in
sub
xor
popf
imul
lahf
test
inc
scas
fiadds
pop
shrl
leave
sub
jl
push
outsb
mov
loopne
pop
repnz
adc
add
ret
push
xor
push
lea
dec
push
in
inc
sub
cmp
xor
jae
mov
jns
pop
lds
std
jecxz
add
into
sbbb
popa
dec
jecxz
fstpl
fildl
xchg
mov
dec
cmpsb
add
jmp
pop
movsl
jg
ds
push
jl
xor
stos
jmp
nop
insl
push
sbb
imul
repnz
inc
fsubr
sub
in
cld
jns
daa
pop
jcxz
xchg
or
mov
mov
std
and
ljmp
mov
pop
insb
xor
xorl
jecxz
movsb
not
popa
pop
mov
xorb
std
fstpl
test
movsl
js
xchg
add
pop
scas
xchg
mov
or
adc
cwtl
cli
dec
xor
push
es
pop
or
inc
and
mov
roll
mov
mov
popa
adc
orb
hlt
in
sbb
bound
mov
fdivl
int3
orl
fnstcw
stos
mov
fxch
xchg
xor
pop
jae
adcb
flds
or
jne
jmp
jne
xchg
inc
or
push
lds
pop
cmp
insl
push
and
adc
xor
jo
gs
arpl
cltd
adc
push
lods
mov
xor
ljmp
inc
xorb
pop
stos
cmp
outsb
cmc
ja,pn
out
out
out
mov
popa
cwtl
sub
fwait
xchg
mov
out
popf
push
fwait
movsl
fnstsw
iret
mov
jecxz
sbb
jo
jecxz
push
les
mov
imul
and
int
jnp
ljmp
fisubl
xchg
mov
pop
xor
stos
nop
or
popf
sub
insb
pushf
jbe
ret
pusha
cmp
loope
je
mov
pop
mov
sub
test
fldl
push
test
lret
xchg
or
mov
and
cld
mov
in
cmp
push
subl
adcl
int
dec
add
call
jl
dec
push
xchg
gs
outsl
imul
adc
scas
jne
push
int
daa
int
sarl
lea
adc
out
outsl
fsub
adc
push
mov
xor
or
mov
stos
xor
sbb
aaa
fcoms
cmp
stos
repnz
sbb
push
cmpsl
mov
stos
ljmp
and
or
lea
movsl
xchg
test
jle
lret
sub
ret
hlt
pop
lahf
cmp
sti
inc
ret
cmpsb
jmp
rcrb
mov
xchg
es
adc
pop
enter
pop
mov
add
mov
cs
mov
jno
ds
popw
sti
or
push
scas
pop
nop
popf
pop
mov
mov
les
dec
dec
jnp
aas
test
ds
xchg
js
dec
mov
mov
cmpb
imul
add
xchg
stos
imul
adc
inc
in
sbb
or
in
inc
enter
add
or
das
xchg
inc
and
cmp
in
faddl
fadd
ss
sbb
ror
xchg
pop
jns
lcall
cwtl
lds
pop
push
xchg
mov
xchg
jmp
into
das
push
sarb
sbb
pop
popa
adc
and
xlat
push
ds
faddp
push
xor
out
fidivl
test
sub
xchg
push
test
lods
sub
xor
push
aaa
scas
scas
insl
sarl
out
jecxz
push
outsl
jge
xchg
les
pop
ds
lods
sbb
cmp
jge
jmp
adc
mov
mov
leave
div
mov
into
sbb
cwtl
cmpsl
mov
in
int
into
loopne
movsl
daa
je
xchg
mov
jp
ret
call
sub
cmp
mov
jp
aaa
push
sarl
popf
mov
test
sti
popa
test
int3
iret
test
xchg
push
cmp
std
cmpsb
push
jnp
mov
cwtl
cmp
lods
movsb
cmp
add
pop
repnz
test
push
cmc
pop
shr
pushf
iret
lea
lea
mov
mov
cli
and
pop
shrb
mov
inc
fucom
xor
cli
loopne
cld
popa
cmp
daa
lds
icebp
jecxz
xchg
and
mov
and
adc
mov
xor
loope
jnp
leave
add
dec
enter
xor
mov
pusha
shl
fdivrp
scas
push
movsb
std
fdivr
rcl
in
dec
bound
jo
dec
cmp
je
movsl
xor
imulb
or
jle
mov
sub
rorb
ljmp
xchg
sbbl
push
xchg
imulb
push
ficomps
int
test
xor
hlt
test
ds
mov
and
mov
mov
popl
sbb
ret
jne
fwait
cmc
shlb
pop
fcoms
out
dec
jo
scas
cld
xor
push
mov
shll
sti
dec
sub
mov
push
adc
fdivr
pushf
imul
dec
dec
popa
mov
pop
iret
dec
jmp
test
inc
xchg
lret
add
jbe
test
sub
imul
or
xchg
mov
sub
cmp
hlt
xchg
pushf
jle
dec
cmc
scas
cmp
push
sub
cmp
push
fwait
sbb
and
aas
mov
loope
in
jne
rclb
ret
cli
add
mov
push
cs
mov
jae
aas
loop
daa
pushf
lock
xor
js
or
call
xchg
push
adc
or
sbb
test
jecxz
mov
inc
mov
or
pop
mov
pop
data16
rcrb
and
push
sub
movsl
pop
stos
in
insl
imul
lods
imul
mov
shrl
xchg
stos
daa
andl
popa
push
jns
daa
or
int3
xor
test
jl
mov
std
dec
or
pop
aaa
cmp
add
rol
cmpl
daa
sbb
test
mov
lds
std
std
scas
iret
test
std
enter
lea
cmp
sub
push
add
pop
je
pop
xlat
inc
sub
pop
pop
push
mov
xor
push
xor
aaa
pop
lcall
enter
leave
lcall
sub
add
jecxz
sbb
lds
jp
mov
push
imul
mov
jp
cltd
out
popa
insl
daa
adc
sahf
incl
ljmp
lahf
pop
bswap
sbb
das
ret
out
out
int3
mov
sub
jno
fsubrp
cmp
pop
stc
fisttpl
mov
mov
dec
std
es
pusha
ss
cmp
push
sub
test
cmp
sti
jo
cmp
or
jmp
xlat
and
stc
xchg
cltd
fstps
mov
xchg
xchg
jge
imul
jbe
xor
mov
cmp
xchg
jo
jecxz
stc
into
mov
hlt
sub
gs
lds
and
into
add
fsubrs
lea
into
push
stc
sub
mov
adc
cmp
xchg
xlat
lock
push
pushf
mov
xor
pop
adc
cli
movsb
mov
loope
cmp
loope
cmpsl
mov
push
pop
push
mov
or
push
idivb
shl
cld
shl
mov
pop
int
cmp
fimull
fdivrl
cmp
pop
lods
cmpl
pop
adc
jl
or
daa
cld
leave
adc
inc
fwait
enter
sahf
repz
xchg
loop
xor
lcall
xchg
mov
out
pop
dec
out
je
jb
mov
int3
leave
pop
jae
add
sbb
ss
adc
jge
rcrl
push
frstor
add
cmp
imul
mov
mov
mov
sub
mov
ja
loope
and
sub
das
cltd
std
into
sub
jns
pop
jmp
sub
loope
cmp
push
adc
shrl
xchg
call
lods
das
sub
pop
mov
dec
mov
roll
jmp
es
pop
popa
jbe
test
incb
mov
add
sub
in
std
rorl
negb
scas
in
scas
lods
pop
jo
test
cmp
push
out
xchg
cld
sbb
pusha
ja
arpl
mov
pop
adcb
jo
cli
into
or
arpl
mov
mov
xchg
dec
cmpsb
push
mov
sub
mov
mov
cmpsb
jle
mov
loopne
xchg
je
fldenv
cmp
jno
mov
dec
push
mov
cmp
xor
leave
fstpt
movsb
mov
mov
and
adcl
xlat
xor
dec
test
inc
cwtl
sub
cs
inc
sbb
sbb
and
mov
xor
fwait
ret
fwait
insb
mov
inc
ret
xcrypt-cfb
cmpsl
loope
push
testl
aam
test
pop
popf
das
repz
mov
fcmovbe
insl
and
mov
sub
sbb
adc
push
mov
insl
int3
stc
mov
test
repz
imul
inc
or
push
ds
faddl
xchg
inc
popf
cmpsl
pop
call
push
fidivrl
mov
dec
mov
jl
mov
jo
push
jns
jge
nop
cltd
jno
nop
movsl
pusha
jns
push
fcomps
pop
jbe
mov
add
pop
pop
gs
push
xor
sahf
push
xor
das
xor
push
jge
cmp
test
cld
dec
lret
into
xor
sbb
orl
and
decl
repz
sub
ja
mov
xor
loope
sbb
pop
cmpsl
ficoms
sub
pop
outsb
xor
xchg
in
and
cmc
push
shlb
imul
into
bound
fs
ret
or
fwait
cmp
insl
sbb
das
and
fistps
loope
aas
pop
adc
cmp
adc
not
and
mov
in
inc
jnp
jns
or
les
mov
mov
in
fstl
hlt
sub
out
sub
ljmp
pushf
jmp
leave
loope
sbb
enter
xchg
daa
lods
lret
sub
mull
jns
imul
nop
jecxz
cltd
pop
inc
inc
mov
imul
leave
sub
aas
cli
and
ja
repnz
xchg
std
std
jno
add
or
mov
shrl
fwait
test
add
ror
cmp
adcl
jge
fs
repz
mov
cmp
std
aad
aam
insb
sbb
std
leave
clc
jecxz
aad
mov
loope
adcl
rclb
or
and
add
jl
hlt
xor
clc
pop
loopne
icebp
mov
ficoml
out
out
test
insb
in
test
iret
aaa
and
push
inc
or
repz
mov
dec
or
jns
aaa
mov
aas
lods
jns
xchg
mov
and
mov
decb
ljmp
xor
testb
imul
mov
mov
xchg
repnz
pop
or
cmpsl
mov
call
lea
lret
add
pop
std
rcll
movsb
cwtl
sbb
in
or
ja
add
push
and
cmpsl
scas
int
wrmsr
out
mov
pop
mov
test
mov
daa
sub
and
jno
xchg
sbb
movl
pop
or
cmp
sar
andl
pop
andl
dec
in
cmp
xchg
ss
repz
xor
in
imul
divl
mov
cmp
lea
pusha
mov
into
sbbb
or
jge
jl
jmp
pop
pop
sarl
leave
pop
test
aam
adc
and
push
decl
lods
cmpb
and
dec
subl
pop
mov
pop
in
negl
mov
xor
mov
dec
jmp
cld
sbb
cmp
jns
push
mov
fwait
test
loopne
in
mov
scas
repnz
and
mov
std
push
test
or
pop
push
mov
outsb
push
cmp
ret
pop
jo
cli
mov
mov
sbb
les
outsb
in
mov
addr16
inc
jp
mov
pop
popf
mov
shll
popl
cmpsb
mov
sbb
mov
inc
or
std
mov
mov
inc
sbbl
es
dec
xor
push
arpl
lds
push
lret
adc
sbb
lret
notl
jnp
dec
inc
test
pop
xlat
out
data16
mov
adc
repnz
xchg
mov
rcrb
push
nop
and
pop
test
clc
mov
lods
inc
jl
jbe
or
jbe
add
sub
mov
pop
add
lods
inc
mov
aam
shl
xor
jne
aaa
roll
shlb
jne
jp
inc
aas
in
dec
dec
cmp
mov
sar
cmp
lock
loop
fsubrl
push
mov
push
and
jbe
pop
inc
xor
stos
cmp
mov
sbb
xchg
out
jecxz
cmpsl
test
xor
sti
pop
clc
pop
iret
mov
aad
mov
sahf
xorb
ljmp
cli
adc
jns
inc
mov
push
lret
clc
rclb
inc
dec
addr16
xchg
adc
or
clc
push
dec
lar
xchg
xchg
ja
lcall
xchg
nop
mov
decb
cmc
pop
fistpll
xor
pop
fcmovnbe
dec
lahf
push
and
mov
mov
lock
data16
int
test
scas
pop
inc
sbb
sub
xchg
push
iret
clc
rorb
popf
stc
scas
movsl
call
lods
mov
sub
mov
stc
lahf
pop
mov
inc
lods
inc
push
jb
cmp
cmp
mov
fyl2xp1
lods
aaa
dec
cmpsb
or
test
jge
pminsw
int
push
push
js
stc
lods
mov
icebp
je
dec
lret
mov
fidivs
adc
gs
inc
mov
fdivrs
repz
lea
stos
loopne
dec
xchg
pusha
and
test
stos
fiaddl
mull
jg
lds
push
iret
cld
xchg
pop
iret
push
popf
stos
lds
pop
scas
aas
jb
cmp
ja
jmp
add
mov
enter
mov
push
mov
pop
mov
test
fwait
clc
and
add
xor
gs
adc
call
mov
xor
and
xor
mov
in
popf
push
dec
dec
jo
popa
movsl
ljmp
pop
in
sub
and
movsl
dec
add
dec
cli
mov
xchg
fnstcw
es
mov
push
das
xchg
aad
sahf
jae
mov
fiadds
rorl
jmp
int3
push
mov
daa
cmp
arpl
ret
sub
jge
fwait
pop
jns
jp
clc
in
out
and
out
mov
jl
adcl
xchg
out
xchg
xchg
pop
pop
lods
jo
insb
ss
mov
test
std
sbb
push
add
jne
jns
aam
jns
inc
xchg
mov
and
jae
ret
adc
roll
dec
ret
add
mov
addr16
rclb
addr16
rcrl
push
and
repnz
jecxz
mov
loope
outsb
ds
adc
sub
movsl
test
test
sbb
inc
pop
pop
push
inc
xchg
out
in
adc
lret
push
ljmp
jne
and
icebp
cs
adc
stos
or
pushf
and
popf
xchg
inc
dec
pop
jp
dec
ficoms
mov
insb
loopne
mov
mov
adc
mov
std
jg
test
mov
je
pop
pop
fidivrs
std
pop
int3
sub
cmp
loop
xchg
sbb
add
icebp
and
shl
pop
popf
nop
mov
shl
pop
in
inc
aad
loopne
adc
loope
push
push
mov
mov
cmc
popw
insl
mov
xor
push
adc
inc
popf
or
out
cmpsl
xor
jecxz
enter
decl
sbb
push
ret
dec
pop
jno
lods
sar
cmpb
sub
xlat
std
shrl
idivl
stc
push
movsl
jbe
mov
xlat
xchg
ja
pop
xor
sbb
movl
repnz
inc
cmp
flds
mov
xchg
mov
frstor
pop
xlat
pop
sub
sar
incl
std
incb
fistpl
xor
jp
xchg
jmp
inc
sbb
mov
or
mov
mov
adc
popa
mov
xor
ss
sti
push
out
fnstsw
dec
inc
sti
xlat
cmp
xchg
rorl
adc
rorl
lret
inc
mov
jmp
push
inc
insl
and
mov
adc
push
roll
xor
pop
ffreep
std
enter
sub
mov
dec
inc
daa
test
stos
xor
es
jns
movsl
rep
sbb
popf
cltd
pop
inc
push
lea
add
mov
lods
hlt
out
loop
add
jns
lahf
iret
and
mov
jl
add
outsb
mov
mov
push
das
mov
enter
pop
jge
inc
icebp
jle
cld
push
icebp
popf
repz
sbb
popf
jge
mov
pop
jmp
inc
push
lret
pop
fldenv
xchg
fildl
push
repz
add
ret
fs
int3
aam
imul
fs
cmp
push
inc
sub
pop
test
pop
push
outsl
mov
stc
popf
pop
mov
pop
mov
icebp
std
mov
mov
nop
roll
daa
push
adc
mov
pushf
add
adc
out
xchg
jmp
in
xchg
test
popf
mov
fiaddl
leave
push
mov
in
sbb
mov
jmp
mov
repz
sub
aaa
out
lret
or
jae
xchg
and
xlat
and
aaa
jno
mov
insl
test
dec
mov
aaa
add
bound
mov
jle
add
jns
inc
scas
push
sbb
mov
std
mov
push
push
mov
and
pop
xor
mov
lret
insl
mov
std
push
adc
xchg
fisubrs
int3
mov
mov
insl
sub
pop
and
jmp
stos
lock
aaa
mov
sarl
xchg
xchg
cmpsb
in
int3
out
rolb
mov
cmp
lahf
mov
sbb
dec
sbb
out
roll
sbb
out
divb
push
hlt
mov
and
gs
and
and
xchg
shll
jmp
jne
shlb
fdiv
mov
daa
ror
fcomp
rcrl
xchg
popa
loope
popf
subl
loop
and
xchg
jnp
xchg
std
lret
mov
lret
flds
adc
mov
leave
arpl
hlt
loope
or
addl
dec
or
push
add
pop
mov
or
stc
enter
scas
mov
jae
xchg
scas
aad
int3
popf
imul
or
jecxz
jbe
pop
das
out
cli
xor
jnp
mov
mov
aas
aaa
rol
and
psllq
jns
pushf
in
jae
mov
imul
js
inc
push
sbb
dec
movb
xor
sbb
cmp
fldt
stos
outsl
rorl
test
cltd
std
ret
pop
rolb
push
fimull
xlat
pop
shl
fstps
repnz
lods
mov
sub
adc
adc
xchg
sarb
pop
mov
pusha
jmp
jle
mov
or
icebp
cmp
jae
ret
cmpsl
xor
int
ds
addb
mov
lret
pop
imul
stc
int
xchg
jg
jp
jl
push
lea
ds
lret
inc
aam
adc
sti
int
aad
xor
xchg
addr16
mov
pop
xchg
mov
push
sub
enter
popf
movsl
and
leave
ljmp
arpl
outsb
mov
jge
mov
inc
and
and
insl
icebp
add
jno
mov
and
mov
mov
mov
inc
sub
pop
xchg
sahf
xor
cli
sub
daa
mov
xor
mov
fwait
pop
or
fcomps
pop
mov
fidivrs
mov
sub
mov
mov
insl
push
adc
xchg
popf
mov
mov
jae
inc
mov
int
mov
repz
push
pcmpgtw
jecxz
out
test
pop
dec
push
add
mov
fs
std
cltd
mov
mov
loopne
std
or
inc
xchg
pop
lds
mov
xchg
mov
xchg
inc
dec
ljmp
sbb
pop
and
pop
dec
test
out
jg
in
mov
js
test
dec
sbb
cmpsl
movb
sbb
imul
pop
jp
mov
adc
mov
sbbb
fnsave
jg
or
negl
lea
jmp
rcrb
mov
mov
aad
mov
jle
lods
call
pop
lcall
xor
loope
push
stos
lock
lea
and
add
pop
cs
not
repnz
in
or
add
and
add
pop
and
test
mov
lret
aad
push
mov
sub
js
dec
cmc
addl
andl
dec
mov
notl
and
pop
popf
sub
ret
mov
fnstcw
add
fiaddl
loopne
aas
xchg
call
inc
test
xor
add
jbe
mov
jbe
cmpsl
stos
xor
pop
lret
cmc
mov
aas
xchg
jecxz
pop
lods
ret
xchg
jp
decl
or
add
or
lea
pop
insb
cmc
popf
fiadds
jnp
jp
les
pop
fidivrs
les
jne
fidivl
sarl
sub
notl
pop
add
fisttpll
xchg
xchg
and
or
lock
inc
lret
sbbl
sbb
lret
push
and
jecxz
lds
ret
icebp
xchg
movsb
mov
cmp
sbb
add
xor
repz
std
int
pop
das
inc
push
imul
cvtps2pd
xchg
push
cmp
rcrl
xchg
adc
scas
imul
out
or
cmpsl
push
arpl
daa
xor
je
adc
out
pop
xor
push
stc
or
sub
jle
ret
insl
rorb
into
lods
cmpsb
mov
mov
jns
lret
aaa
xor
mov
mov
lret
sub
mov
in
test
fs
call
popf
fisttpl
mov
pop
lock
inc
repnz
xor
inc
mov
lahf
jl
in
pop
js
adc
sbbb
sbb
ds
popa
pop
adc
pushf
push
mov
lock
in
sbb
sub
aad
mov
fwait
arpl
push
push
dec
int
mov
pop
cs
enter
lea
ds
insb
adc
arpl
mov
outsl
pop
in
jmp
or
sub
nop
lods
sbb
rcl
jmp
dec
cltd
int
int3
push
out
mov
inc
leave
sub
arpl
pop
sub
push
icebp
and
nop
push
mov
aam
cli
sub
outsb
nop
leave
push
aam
xchg
data16
mov
adc
cmp
push
lock
sub
mov
sub
add
jne
icebp
mov
popf
leave
or
ja
sbb
pop
cmp
xchg
nop
sub
cmp
lock
jecxz
sbb
cwtl
rol
push
add
jle
xchg
or
jne
bound
pop
or
mov
sbb
sbb
inc
jmp
in
stos
in
cmp
push
jb
les
mov
add
or
jno
add
ja
aam
xchg
push
std
scas
jg
jecxz
add
scas
mov
fmulp
adc
icebp
xchg
shll
ja
or
aas
je
cld
in
test
add
lret
in
rclb
arpl
imul
mov
xchg
push
add
aad
popf
dec
mov
int3
mov
lds
sbb
jae
call
add
jne
lds
adc
movsl
and
push
sbb
cmp
and
insl
lea
xor
nop
bound
mov
sbb
sub
jnp
push
inc
cmpsl
dec
push
adc
ss
pop
mov
rcrb
or
push
xor
inc
test
adc
mov
add
mov
inc
cmpsl
inc
xchg
pushf
scas
and
pop
xchg
loop
and
and
jbe
enter
push
xchg
or
scas
cmp
adc
inc
push
mov
test
divps
subl
ss
fwait
and
or
mov
mov
push
cmp
outsl
hlt
sub
xchg
test
int
mov
in
xlat
bound
sub
shll
lret
lds
cmp
adc
dec
pop
pop
test
mov
cmp
jl
mov
sti
les
stos
inc
xor
loope
push
insb
xlat
sub
loopne
cmp
les
push
jo
insl
mov
int3
clc
inc
faddl
sub
adc
out
int
jo
dec
xlat
or
nop
and
addr16
cmp
mov
sbb
mov
iret
cmc
pop
xchg
sbb
movsb
dec
pmulhuw
pop
mov
pop
jg
addl
and
test
adc
arpl
lahf
dec
mov
pop
adc
lods
test
inc
lock
scas
push
sbbb
ret
stc
ss
std
les
idivl
daa
sbb
sar
out
cli
or
sbb
ss
bswap
jle
scas
mov
fiadds
std
jge
sbb
cld
cmp
jo
movsl
cwtl
mov
cmp
sbb
lds
jae
mov
rol
inc
add
lds
dec
out
lret
mov
popa
lret
std
stos
roll
xlat
push
inc
ljmp
inc
xor
out
cmp
cltd
iret
or
cmp
adc
cmc
or
icebp
shlb
loop
and
pop
mov
pop
test
arpl
out
add
xchg
in
dec
fwait
insl
cmpsl
stc
out
popf
cltd
in
adc
xchg
insb
in
sarl
xchg
jae
movsb
cmp
test
aaa
stc
sbb
shl
test
insb
test
sbb
out
lds
xchg
js
jns
sub
in
jl
mov
int
lock
pcmpgtw
cmp
pushf
ret
xlat
sbb
mov
jns
stc
stc
fstpl
sbb
jno
repz
jmp
in
sub
adc
int
bswap
add
loop
mov
push
mov
fwait
popf
cmpsl
or
pop
jp
mov
mov
cmp
leave
xchg
fwait
mov
outsb
lret
jns
bound
cmp
in
dec
iret
cmp
sbb
xor
push
lds
rcrl
inc
dec
mov
icebp
adc
jno
dec
jmp
clc
movsl
pop
mov
cwtl
imul
jnp
push
mov
dec
test
pop
or
std
cltd
cltd
jnp
mov
cmc
std
dec
inc
push
or
gs
push
cltd
out
add
stc
pop
stos
or
mov
flds
out
and
arpl
in
iret
std
lea
mov
cmp
popf
pushl
aaa
xchg
mov
sbb
std
out
pop
mov
cltd
cmp
push
psubusb
inc
xor
ret
fistl
cmpsb
fisttpll
dec
sarl
xchg
insl
jbe
inc
clc
mov
movsl
mov
popf
add
cmp
call
test
lds
outsl
mov
idiv
xor
test
pop
cmpsl
jns
dec
cltd
and
shll
add
push
jne
add
xchg
xchg
xor
ds
daa
rorl
push
inc
popa
xor
sbb
lea
cmp
std
std
pop
testb
loopne
sti
icebp
adc
movsl
sbb
pop
gs
cmc
inc
in
mov
pop
lds
arpl
xchg
rcrb
and
aas
insb
sub
imul
pop
inc
packuswb
mov
repz
and
push
mov
ret
lret
aam
stc
frstor
jae
jns
pop
stos
xor
adc
or
mov
xorl
xchg
jne
cwtl
imul
in
mov
fstpt
mov
icebp
outsl
jne
mov
vmwrite
out
repz
in
sbb
inc
std
shl
adc
enter
cmp
xlat
clc
jns
mov
xchg
in
cmp
xor
sub
pop
stos
jne
inc
jns
in
lea
das
cmp
outsl
outsl
rcll
enter
in
mov
mov
mov
pop
sbb
test
popf
and
mov
popf
in
jge
popa
mov
popf
int
insl
popf
insl
mov
std
in
inc
insl
out
icebp
sar
imull
std
push
leave
xchg
dec
push
sti
lea
sub
test
or
mov
sarl
dec
fildl
mov
cmp
idiv
popa
or
sbb
or
push
xlat
push
sti
cld
cmp
in
mov
lds
pop
xchg
in
stos
ds
xor
xchg
popf
cmp
f2xm1
mov
mov
cltd
leave
imul
sbb
es
fstpl
stc
popf
cld
pop
rcrb
xchg
xor
rcll
cmp
movsb
dec
mov
std
sar
dec
cld
xchg
fstpl
ret
movsl
stos
cmpl
mov
mov
in
loope
or
dec
sbb
sub
push
icebp
and
popf
gs
aad
pop
pop
adc
in
xchg
lods
inc
jg
mov
cmp
adc
mov
movsl
out
sub
cmpsl
outsl
mov
enter
xchg
sbb
adc
fstl
jg
repz
dec
dec
loopne
xchg
in
jmp
clc
sbb
hlt
rcrl
xchg
mov
les
repz
push
cs
inc
std
sar
into
dec
pop
movsl
dec
or
std
out
push
inc
test
insl
cmpsl
lods
in
hlt
lret
jmp
outsl
jnp
rcll
ficoml
out
fistpll
jg
add
sbb
mov
xor
cmp
mov
ljmp
fs
sbb
test
aaa
loop
pop
fcomi
push
test
jg
fucomip
jns
add
xchg
mov
inc
js
out
mov
mov
sbb
and
es
xlat
pop
lea
pop
scas
xlat
dec
mov
sub
cwtl
imul
or
or
lea
jne
and
movsl
iret
pop
jo
pop
shlb
cs
sbb
jno
xchg
stc
cmp
and
xchg
sub
in
fsubr
sbb
jmp
jno
bswap
test
xor
into
iret
add
adc
cmp
fnsave
pop
mov
popf
sbb
push
arpl
imul
shlb
pop
insl
icebp
int
insb
stos
gs
push
dec
out
add
repnz
stos
fldl
lahf
xor
and
pop
add
outsb
add
aad
push
leave
inc
push
sub
sub
xor
lea
test
xor
enter
into
std
inc
or
lea
dec
sub
mov
std
jmp
xchg
inc
movsl
xorb
add
cld
insl
push
push
lea
sbb
sti
jle
and
lock
fsubs
clc
jecxz
mov
jo
repz
js
bound
mov
out
rol
mov
cmpsb
sbb
mov
xchg
mulb
sub
lods
imul
call
jne
icebp
pop
pop
pop
lock
mov
int3
adcl
js
mov
xor
scas
inc
out
sub
mov
dec
mov
add
iret
push
jne
dec
sbb
jmp
mov
push
pop
movsb
inc
cmpsb
sub
in
sub
pop
rcrl
shrb
push
addr16
xchg
and
mov
cmp
push
aaa
pop
test
mov
out
icebp
sbb
xor
scas
enter
mov
arpl
int
ret
xor
mov
push
fsubl
sub
xchg
idivb
cmp
test
rcrb
xlat
ror
pop
lds
scas
cmpsl
cwtl
int
das
jns
xor
sub
test
jne
out
mov
pop
jbe
inc
movsb
pop
sbb
stc
adc
add
out
lods
and
fbstp
arpl
mov
mov
jge
sahf
daa
mov
rep
sbb
fs
or
sub
jnp
sub
pop
popf
xchg
cmp
pop
test
inc
clc
or
js
rcrl
and
xlat
xchg
pop
cmp
je
fildl
js
adc
sar
ret
movsl
and
xchg
div
popa
out
cmc
stc
xchg
ljmp
adc
scas
std
fidivrs
add
mov
shr
subl
outsl
sub
mov
or
sub
xchg
into
cltd
xchg
lcall
add
popa
out
test
in
aas
lea
inc
repz
mov
dec
in
push
cli
lea
imul
mov
xchg
cmpsl
cltd
mov
shll
mov
ror
stos
cmp
and
in
mov
popf
sub
sbb
jbe
pop
leave
xor
add
push
jl
sub
iret
xor
pop
cli
sarb
int
aad
mov
sbb
clc
xchg
or
add
push
sbb
jnp
jp
add
or
push
loope
xchg
shrb
dec
lods
sbb
mov
cmp
jecxz
push
das
jp
xlat
pop
popf
aas
cmp
fdivp
inc
jns
shl
dec
mov
cmpsb
adc
fcomp
in
mov
das
ret
pop
loopne
test
popa
mov
dec
repnz
out
mov
out
dec
add
xchg
mov
ljmp
cmp
loope
stos
sti
lahf
ljmp
hlt
add
sub
fsubl
mov
movsb
decl
pop
pop
pop
jp
cmp
inc
pop
ds
rcr
inc
scas
cmp
and
fldt
jecxz
xchg
cltd
or
pop
push
xchg
int3
mov
mov
dec
lea
push
or
xchg
add
push
pop
push
mov
lock
scas
and
add
cmpl
jmp
aad
jmp
es
inc
add
sbb
cmp
mov
clc
in
addl
cmp
mov
pop
sub
mov
dec
cmpsl
jge
mov
repnz
mov
ficoms
sbb
push
lret
mov
inc
mov
lcall
jo
push
mov
mov
fwait
mov
mov
lds
push
lretw
arpl
mov
divb
insb
into
mov
jl
not
ljmp
or
cmp
xor
fsubrp
arpl
je
xor
arpl
addr16
or
mov
push
jmp
mov
call
mov
das
dec
aam
pusha
test
in
fiaddl
or
dec
push
leave
pop
aas
and
nop
add
xorb
jecxz
xlat
aad
pusha
fidivrs
in
faddp
fldl
in
and
outsb
cld
adc
xchg
lock
inc
jge
pop
and
mov
aad
dec
add
pop
out
ljmp
dec
add
outsl
lea
mov
and
add
cmp
or
std
shll
lret
je
addr16
es
movsb
orb
test
lcall
leave
push
lcall
scas
ljmp
jmp
fnstsw
int3
pop
sub
push
subb
push
sub
stos
mov
fsubrp
out
int
in
gs
mov
movsb
xchg
shl
std
gs
xchg
cmp
cmc
fstpt
push
aaa
aas
xchg
fidivrl
cmpsb
jmp
sub
js
lods
pop
inc
dec
in
bound
mov
xchg
and
cmp
roll
jnp
push
xchg
xor
pop
ret
jnp
insl
mov
les
dec
xor
jo
mov
add
sub
or
subb
sbb
shrb
mov
inc
mov
push
mov
scas
pop
sbb
movsb
test
cmp
nop
jge
test
mov
mov
pop
std
imul
mov
cmp
stc
and
sbb
ficompl
inc
sbb
pop
mov
sarb
cld
mov
cmp
rcrb
sbb
inc
daa
cmp
mov
ficoml
icebp
push
popa
subb
insl
fwait
cmpl
cld
jl
daa
rolb
or
add
jecxz
or
lret
rcll
mov
insl
push
pusha
lds
shlb
fstpl
lret
movsb
cmc
adc
push
mov
mov
fisttpl
gs
push
fiadds
sahf
call
hlt
sbb
je
push
sbb
push
adc
test
jno,pt
pusha
loope
sub
mov
mov
jge
mov
in
jge
aad
push
lock
rcrb
cmp
pop
add
fldenv
test
arpl
push
cmpsl
stos
into
push
aaa
pop
sbb
or
cwtl
inc
add
test
inc
shr
sbb
leave
inc
and
mov
or
lahf
outsl
and
pop
dec
loopne
lcall
loopne
scas
sub
popf
insb
push
sbbb
mov
pusha
pop
hlt
push
pop
xchg
sub
inc
insb
fcmovne
mov
les
mov
push
test
fcmovu
out
movsb
mov
aad
call
sub
outsl
dec
mov
popa
daa
int
test
mov
push
mov
test
or
xchg
adc
pushf
adc
pop
adc
mov
adc
popf
or
cmp
adc
add
jno
xor
jmp
jb
sub
push
and
mov
scas
stc
xchg
insb
fsubl
andl
jnp
pop
incl
pop
push
jnp
mov
icebp
mov
push
sub
sbb
pop
add
pusha
sbbb
mov
mov
push
mov
fistpll
clc
cmpsb
inc
dec
sbb
push
pop
scas
jne
mov
mov
cs
lret
adc
hlt
cmp
mov
out
jns
inc
stc
mov
push
iret
add
cmc
jae
minps
repz
push
dec
ret
sub
idivl
push
clc
xor
imul
cmpsl
fisttpll
sub
ficomps
sub
lahf
in
or
push
fwait
int
xchg
sbb
xchg
lret
les
mov
or
dec
cmp
je
gs
ss
adc
cmp
and
leave
mov
in
popf
pop
shll
ret
sti
stos
fsubrs
andl
cli
in
mov
fbstp
ret
imul
xlat
jae
fcomi
cmpsb
add
dec
in
shl
les
pop
xchg
mov
lock
dec
push
std
add
mov
push
sti
jge
dec
pushf
mov
shlb
xchg
fdivrl
and
sub
mov
cmp
popa
fmul
aas
rcrb
dec
rcll
sarb
dec
loopne
rorl
fnstcw
orb
fcoms
add
enter
sbb
repz
pop
pop
sub
xchg
addl
arpl
mov
ljmp
xchg
mov
mov
hlt
insl
mov
aad
jb
jge
dec
ds
out
push
mov
out
dec
cmp
sbb
sub
out
dec
xor
and
rcrl
fs
mov
pusha
int
ljmp
into
pshufw
xlat
scas
sub
add
jle
jl
cmp
cmp
push
lods
lcall
fdivrp
xchg
pop
jp
xor
call
stos
popf
out
repz
push
jbe
sbb
inc
jmp
popf
mov
fisubs
movsb
into
push
jge
sub
les
push
jmp
out
mov
popa
lret
pushf
dec
sbb
push
fincstp
jae
sbbl
imul
jno
push
xchg
pop
test
add
xchg
sbb
push
and
test
jg
mov
mov
jmp
leave
outsl
add
lds
repnz
fsts
mov
rcll
jmp
jle
div
mov
pop
in
test
icebp
icebp
sub
pop
fldenv
cs
popa
shr
icebp
add
int3
lock
cmpsb
dec
aam
pop
repnz
and
sub
lret
xchg
lea
rcr
out
add
xchg
cmp
sbb
mov
dec
mov
idiv
and
fdivr
sub
fadd
rcr
pop
jl
inc
mov
cltd
inc
out
pop
jb
mov
inc
aas
aam
arpl
add
sbb
sub
repz
inc
test
fists
cmpsl
imul
in
mov
or
sbb
divl
loopne
jb
ret
xor
pusha
push
mov
push
xorl
call
lods
sbbl
mov
push
sbbb
dec
rcll
add
int3
xchg
adc
ljmp
lds
xorl
out
xchg
sbb
add
cmp
cmpsl
shlb
and
ljmp
scas
out
fildll
clc
mov
fstpt
inc
cmp
out
xchg
pop
shl
ljmp
loopne
pop
mov
adc
adc
push
push
mov
add
imul
jecxz
xor
nop
push
jg
orl
mov
sub
sti
and
ja
cmpsb
clc
mov
adc
test
je
adc
std
mov
sub
insl
shlb
jno
pop
repz
jg
mov
jno
test
pop
insb
fadd
jno
hlt
push
mov
xor
lods
jg
mov
or
mov
lahf
mov
rclb
and
xor
leave
xor
insb
add
xchg
sbb
jge
lea
cld
outsl
fistl
insl
test
cmpsl
add
lds
cmp
pushf
fisttpl
cmp
mov
sbbl
push
cmp
mov
adc
cmpsb
xchg
xchg
mov
aaa
mov
pop
xor
fnstenv
scas
mov
arpl
pop
or
pop
sarl
loopne
lock
pop
aam
mov
mov
mov
xor
push
fst
rcrb
and
sbb
daa
push
lea
popf
jns
cwtl
jmp
xchg
sub
cmp
cmc
mov
rcll
and
mov
and
repz
pop
push
xor
mov
sub
adc
jecxz
dec
in
mov
test
aad
dec
dec
push
pop
popl
leave
add
int
sbb
outsl
jno
aas
pushf
test
ljmp
es
aad
pop
je
insb
jnp
repz
je
cmp
jbe
aas
fwait
dec
jg
xor
or
cs
dec
jecxz
mov
and
aad
jae
icebp
sbb
pusha
adc
mov
test
in
jmp
aad
aaa
in
aaa
rorb
fisubl
in
cli
sub
divb
and
jns
mov
jns
pop
xchg
push
sub
and
mov
js
xor
popa
sub
jno
inc
sub
rol
shlb
mov
ror
subl
mov
ret
dec
push
jns
popa
divl
push
jmp
sahf
xor
insl
flds
movsb
out
mov
jae
addb
negl
popf
pushw
push
and
aaa
xor
mov
mov
cmp
sbb
xor
jmp
popa
xor
xchg
jmp
fstps
test
mov
loope
xchg
lahf
in
inc
adc
add
rcll
insl
mov
jno
mov
mov
xchg
stos
cmp
sub
jle
fistpll
push
push
add
lret
aam
mov
lahf
roll
sbb
dec
movsl
movsl
pushf
dec
and
lret
lds
test
jecxz
lret
dec
push
add
jecxz
imul
and
lahf
pushf
stos
icebp
lcall
out
pushf
pop
mov
lea
sub
xchg
les
fwait
push
andl
dec
sti
xor
jp
test
test
lret
loopne
mov
fsubr
sub
loope
arpl
add
push
cli
cmc
enter
outsl
lods
cltd
adc
inc
ss
pop
insl
incl
sti
dec
fmull
and
xor
loopne
shrb
mov
aas
cmc
shlb
leave
hlt
cmpsl
inc
shll
stos
and
repz
pop
dec
jne
das
lcall
ss
xchg
fmull
lods
sub
sbb
imul
cld
lds
int3
jbe
lods
pop
fmuls
movsl
sbb
cwtl
daa
cld
cmp
out
in
cld
in
aad
mov
cmp
and
mov
and
cltd
inc
mov
cmp
lret
xor
shlb
mov
sbb
sti
movsl
add
cli
cli
outsl
mov
mov
shlb
decb
add
mov
ror
push
cs
adc
in
int3
adc
scas
rorb
iret
dec
mov
mov
dec
mov
fisttpl
pop
std
dec
sbb
aad
sbb
mov
aaa
add
stc
fnstenv
daa
fwait
xor
pop
je
pushf
mov
fimuls
pop
push
loopne
jg
ror
push
mov
fdivrs
popa
xchg
imull
test
out
add
pop
sbb
rorb
mov
nop
imul
xchg
lds
shlb
dec
aas
and
pusha
lret
addr16
xchg
xor
pushf
das
in
push
pop
cmpl
pop
lock
pop
repz
icebp
addr16
cmpsl
cmp
pop
add
xchg
sub
fld
inc
jns
mov
int
std
imul
rclb
repz
lods
in
ficompl
imul
hlt
icebp
jle
cltd
sbb
xor
jbe
jp
call
insl
inc
scas
in
mov
fcoms
and
sub
mov
std
mov
fs
loope
xchg
outsl
mov
out
flds
das
pop
aas
sub
mov
push
fisttpll
inc
inc
scas
sarl
lods
jno
push
js
mov
xchg
jo
lret
imul
lock
aad
mov
jmp
or
mov
xchg
das
lock
rorl
test
cmp
jl
add
decl
mov
mov
mov
lret
adc
cltd
mov
adc
scas
out
inc
xchg
push
push
xchg
popf
mov
mov
je
movsl
out
popa
sbb
pop
shl
out
sub
movl
mov
enter
cmp
cmc
push
push
std
push
pushl
jmp
sub
inc
incl
mov
dec
das
adc
mov
rclb
cmpsb
mov
adc
pop
arpl
jl
lods
cmp
sti
daa
inc
bound
lea
nop
jns
sub
lcall
push
lahf
mov
fisttps
push
jecxz
das
xor
xor
xchg
movsl
jecxz
outsl
sbb
inc
and
add
xchg
aaa
cmp
dec
pop
xchg
xor
sbbl
sbb
pop
sbb
lret
push
popa
popf
mov
jo
jge
or
xchg
shlb
mov
pop
mov
xchg
lcall
dec
pop
imul
push
dec
push
mov
out
mov
mov
popf
loop
cmp
xor
int3
stc
out
movsl
lock
sbb
rcrl
sbb
xchg
or
inc
outsl
jmp
cli
rcll
jp
add
iret
dec
mov
and
mov
fstpt
sub
lea
mov
sbb
or
push
adc
push
jno
in
sbb
cmp
xchg
push
aaa
arpl
xchg
pop
add
mov
push
popa
rcll
mov
xor
pop
cmp
stos
lods
es
mov
pop
aam
sbb
imul
push
andl
adc
push
in
inc
cwtl
fwait
pop
lcall
mov
data16
inc
xchg
push
test
in
xchg
pop
jnp
lock
mov
mov
adc
movsb
icebp
adc
shrl
sbb
loope
dec
test
mov
and
jge
into
or
insb
jno
dec
fld
xlat
aam
out
insb
fcmovnbe
fwait
aas
jmp
popf
pop
inc
push
mov
mov
rclb
jg
mov
xchg
jbe
pop
jno
lock
subb
popf
xor
inc
xchg
inc
mov
pop
int3
icebp
mov
popf
jmp
aaa
push
das
insb
ret
mov
icebp
and
mov
inc
push
scas
push
jmp
mov
popa
in
insl
into
cs
push
das
mov
rolb
and
jne
sub
les
fs
or
js
sbb
mov
xchg
mov
jle
dec
push
mov
scas
rclb
mov
or
mov
xchg
imul
cmpsl
rol
xchg
lret
pop
addr16
in
mov
lea
sbb
rcr
insb
ret
in
shll
jbe
and
jb
mov
fidivrs
je
ljmp
jnp
bound
jg
in
out
jo
scas
daa
adc
xor
cmp
fwait
cmp
mov
loope
addr16
cmpsl
mov
pusha
cmp
cmp
call
movsb
and
punpckhdq
pushf
std
add
fsubl
jl
in
jb
mov
pop
mov
jne
imul
stos
int3
pushf
jnp
mov
shll
lds
sbb
roll
and
mov
leave
push
inc
mov
mov
pop
stos
adc
ret
mov
mov
jp
je
test
sbb
push
test
inc
jge
cmc
push
mov
or
pusha
into
add
or
cltd
addr16
es
pop
shlb
xchg
das
ret
push
or
sub
call
and
fwait
adcl
inc
int
pop
addb
fcom
jg
dec
loop
fiadds
decl
sbb
adc
dec
fwait
int
push
push
lret
and
mov
push
mov
or
int
in
mov
inc
nop
push
mov
push
mov
ja
and
cld
jne
jle
cmc
pop
pop
mov
mov
cmc
leave
ja
in
or
js
mov
fiadds
cmp
sbb
js
add
leave
div
ss
into
loope
std
stos
cmc
fists
sbb
nop
mov
or
arpl
xor
xchg
push
jne
roll
add
mov
mov
shrb
lods
movsl
mov
pop
adc
adc
stos
in
sub
lods
insb
ljmp
mov
pop
rcrl
jge
loope
fstp
int
xchg
and
pushf
mov
mov
or
sub
int
aaa
sar
andl
shll
cmc
xor
inc
movl
cmp
pusha
add
in
es
ret
stc
pop
test
sub
mov
popa
es
cmp
xor
inc
loopne
fsub
iret
sbb
cmp
and
and
stos
xchg
cltd
jnp
arpl
stc
popf
sub
orl
xchg
rcrb
pop
scas
inc
fprem
push
add
mov
pop
add
add
lea
sarb
roll
xchg
movsl
pop
xor
xchg
mov
mov
loope
dec
add
xor
std
cwtl
push
mov
pop
les
clc
movsb
sahf
hlt
mov
inc
orb
mov
arpl
or
nop
add
dec
inc
leave
int3
cmp
je
cmp
push
pushf
push
scas
dec
rorl
pop
mov
dec
mov
sub
cmp
inc
xor
mov
xchg
sub
mov
mov
add
jl
lods
nop
pop
aaa
loope
sub
sbbb
inc
divb
cwtl
and
and
ret
test
jecxz
int3
adc
call
gs
adc
add
shrl
loopne
lods
pop
mov
cmpsl
in
push
sahf
es
jo
xchg
subb
xor
jns
mov
or
xchg
aaa
cmp
mov
adc
xor
hlt
jno
lock
dec
adc
jne
rolb
leave
test
rol
push
inc
imul
pop
popa
insl
mov
and
mov
xor
mov
mov
fisubl
stos
lods
pop
jno
push
lea
pop
inc
cwtl
insl
mov
lret
xor
loop
std
pop
jae
push
sarl
add
rorb
mov
std
aaa
popa
popa
mov
pushf
cmp
push
out
mov
dec
mov
xchg
jae
push
or
fidivrl
mov
cmpsl
fs
cmc
lods
ss
sbb
aas
push
imul
jne
cwtl
sub
stos
scas
cld
lods
pop
movsb
inc
insb
push
aam
cwtl
js,pt
mov
lcall
out
loop
scas
lea
movsl
xchg
push
loop
clc
pop
rolb
leave
mov
fdiv
jbe
push
mov
sbb
ss
iret
ret
insb
sub
imull
psllw
pop
fdiv
icebp
les
arpl
mov
pop
aas
lods
mov
out
pop
cmpsb
loope
pop
adc
xor
ja
inc
ret
mov
arpl
inc
je
pop
stos
jne
dec
add
rcrl
push
aad
sbb
and
int
in
stos
insl
cwtl
push
stos
jmp
movsl
test
jecxz
add
stos
xor
pop
pop
push
mov
subb
mov
mov
ret
cld
ds
mov
in
pop
add
les
mov
push
loop
jbe
outsb
repnz
lcall
lods
add
fidivl
mov
sarl
lock
daa
loopne
imul
or
sub
dec
fildll
push
int3
das
push
or
fisubs
sub
sbb
std
add
push
push
mov
cmp
mov
and
aaa
sahf
add
dec
andl
xchg
xchg
inc
cmp
shlb
jmp
jl
in
jns
cmp
cmp
sbbb
push
inc
test
mov
mov
push
cmp
fmul
sarb
fcoml
mov
insb
mov
push
orb
rolb
pop
or
xor
ss
inc
lods
aaa
arpl
mov
xor
push
and
ljmp
adc
daa
jle
mov
rcll
nop
cmpsb
ret
sbb
pop
icebp
sub
add
lcall
fidivrl
imul
cmc
xchg
mov
jl
cmc
dec
inc
jmp
pop
insl
jmp
jmp
add
pop
out
mov
arpl
sti
sbb
mov
sbb
inc
pushf
fwait
xor
sbb
mov
sahf
js
mov
cmp
or
dec
push
iret
mov
add
test
mov
adc
int
or
adc
jmp
les
shrl
push
popf
cwtl
or
das
jns
rcll
cmp
xchg
inc
jno
fists
inc
mov
sbb
popl
outsb
jp
test
incl
aam
ficompl
std
sub
outsb
jge
lret
jmp
xchg
mov
imul
cmp
lds
lock
jbe
sti
or
mov
sub
mov
cmp
xor
mov
jg
shrb
lods
in
inc
outsb
movsb
mov
into
rcrl
leave
push
movsb
dec
sbb
mov
inc
out
mov
add
mov
xchg
notl
push
aam
les
leave
mov
sub
pop
mov
mov
sahf
scas
push
sub
cld
add
ja
outsb
lods
pop
or
mov
adc
test
lds
xlat
add
test
mov
idivb
fisttpll
les
cmpsl
test
dec
adc
mov
mov
cs
daa
out
imul
mov
iret
and
gs
cmp
mov
fmull
daa
iret
fnstenv
imul
push
pop
addr16
sbb
pop
lret
lcall
mov
mov
aad
sub
or
xchg
sub
sti
int3
rcll
imul
fs
pop
je
jl
or
push
aam
iret
dec
pop
addr16
lret
je
fsubrs
fisubs
dec
subl
andb
pop
lret
mov
cmp
insb
enter
sub
mov
loope
sbb
and
popf
ret
mov
and
mov
enter
rcr
mov
pop
pop
pop
movsl
dec
xchg
in
scas
adc
inc
rcrl
shll
cmp
stos
std
aad
ret
add
lods
xlat
push
cli
xor
shl
ret
jp
into
imul
add
mov
fwait
mov
aad
lcall
sbb
shl
xchg
adc
in
mov
jnp
out
pusha
cmp
je
cmpsl
icebp
popf
fidivrl
inc
mov
stos
iret
mov
add
stos
jns
andl
dec
pop
add
imul
sbb
sbb
sbb
aam
cmc
push
adc
xor
test
aam
int
loop
adc
imul
sbb
mov
or
enter
or
and
ficoml
sub
mov
shr
mov
cs
sbb
add
mov
jmp
xchg
loope
jno
imul
int3
fldt
fcoml
xchg
js
mov
sub
cwtl
pop
mov
repnz
not
xchg
fcoml
and
scas
lahf
stos
dec
stos
lahf
mov
add
in
jecxz
pop
into
ljmp
or
lods
cmpb
sub
inc
mov
or
cli
and
add
push
add
mov
lret
jl
push
cmp
subl
cmp
sbb
push
jg
cltd
pop
add
mov
sub
or
jns
iret
mov
cmp
xchg
xchg
leave
adc
dec
xchg
and
fmul
cmc
addr16
test
jmp
out
fidivrl
dec
cmp
or
in
ljmp
ljmp
hlt
leave
mov
ja
push
add
les
dec
xchg
sub
insb
lret
add
inc
pop
mov
loope
or
xor
vsqrtss
sahf
cmc
sbb
fwait
inc
adc
pop
push
dec
adc
mov
push
clc
outsl
int3
rcrl
push
repnz
es
dec
ja
mov
fstps
jecxz
jns
sti
in
mov
ret
pop
mov
test
aas
mov
clc
cmp
pop
icebp
ret
inc
push
push
jle
dec
ret
into
lds
cmp
dec
fcompl
repnz
pop
shrb
outsb
aam
cmp
pusha
mov
lods
arpl
jl
popf
add
leave
mov
iret
mov
jge
test
xor
loopne
adc
in
outsl
mov
lds
add
fsqrt
lret
adc
test
dec
in
aad
adc
stc
loope
or
cmc
mov
dec
push
lds
xchg
test
pop
sbb
sub
jl
adcb
lcall
fcomi
lahf
xchg
and
addr16
aam
sub
cmp
movsb
mov
in
aad
inc
xchg
lds
ss
push
sarb
jecxz
mov
int
cmp
mov
jae
lret
and
daa
mov
jge
mov
sarl
leave
jne
jae,pn
mov
hlt
mov
jmp
jmp
daa
mov
sub
jns
mov
mov
std
sbb
ret
fstps
mov
mov
adc
out
lds
ja
out
mov
mov
push
dec
daa
pop
lret
enter
out
outsl
add
mov
push
pushf
xor
push
cmovne
add
rcrl
repz
add
push
das
sbb
ss
xchg
pop
mov
out
and
imul
jae
insb
mov
mov
jo
shrd
lea
idivl
ficoml
in
stc
icebp
stos
outsb
add
jb
negl
pop
push
insb
mov
in
fsqrt
leave
ret
fs
add
sbb
scas
sub
pop
fldt
mov
fisubrs
inc
mov
inc
push
add
lret
js
jle
adc
mov
mov
imul
jns
jmp
mov
lret
pop
lcall
aaa
cmp
fcmovb
adc
je
mov
mov
cltd
or
jbe
jecxz
rcll
jnp
jae
jmp
pop
sarb
adc
xchg
imull
xor
stos
loopne
fistl
std
mov
shrl
fiadds
sub
daa
add
nop
inc
stc
xchg
cmpsl
shrb
and
xchg
jae
lahf
xor
insb
int
cmp
push
xchg
bound
idiv
sub
lahf
push
lahf
fsubr
ret
lock
stos
xor
jbe
repz
mov
inc
mov
stos
cs
negl
mov
stos
mov
cltd
test
popf
push
outsb
mov
mov
fldcw
test
pop
pop
jno
lods
xchg
lods
dec
ret
mov
pop
je
mov
push
dec
loopne
mov
push
fs
popa
xlat
sbb
mov
rcrl
cmpsl
mov
cmp
ja
sbb
mov
popf
cmp
into
or
cmp
daa
pushf
popa
xchg
mov
leave
xlat
cwtl
jns
and
adc
stos
popf
cmp
out
mov
mov
inc
sbb
xlat
std
xor
popf
jle
push
adc
pop
mov
movsb
jae
imul
ss
int3
lods
and
stc
in
leave
fwait
jl
jp
stos
push
sti
insl
nop
jnp
scas
cmp
and
aas
stos
les
ss
push
mov
bound
fstps
push
sub
or
test
push
mov
xlat
mov
popa
lret
out
int
push
aas
mov
jb
insb
mov
std
sub
scas
cmp
lods
pop
das
pop
pusha
test
lret
jns
out
cmp
xchg
jnp
mov
jl
lret
lea
aaa
push
add
jge
test
decl
daa
shrb
sbb
push
ds
dec
pop
xlat
pushl
hlt
cwtl
xchg
ja
enter
push
mov
aaa
mov
add
scas
jmp
jge
hlt
stos
add
push
or
add
fstl
fiadds
mov
mov
addb
into
loopne
out
mov
sbb
loopne
or
sbb
add
pop
shl
pop
arpl
mov
into
lret
into
ret
mov
jnp
testl
aaa
mov
fldt
mov
roll
cmp
push
sub
inc
push
mov
inc
and
or
sti
gs
sub
fwait
sbb
jge
scas
in
cmpsb
xchg
mov
jbe
fsubs
scas
in
movsb
push
xchg
insl
adc
sub
inc
lods
arpl
mov
push
mov
pop
or
cli
xchg
shrl
jl
fs
mov
mov
add
xchg
scas
sub
lods
jl
rcr
push
mov
xor
repz
add
pop
mulb
mov
sbb
jo
in
imul
add
jo
pop
repz
sub
dec
andl
andl
mov
dec
adc
add
jnp
xchg
mov
out
lcall
das
int
mov
popa
xchg
xchg
jb
in
sti
xchg
mov
lods
mov
xchg
in
ds
push
popf
pop
mul
sbb
out
or
popf
mov
pop
inc
jl
fs
stos
or
jp
rol
xchg
cltd
xor
mov
test
les
push
and
jne
out
test
ljmp
xchg
fwait
out
inc
cli
mov
sti
loopne
nop
pop
jg
inc
cwtl
adc
cs
test
ficompl
out
mov
push
inc
sbb
mov
push
push
loope
jnp
jno
and
addr16
pop
push
shll
xor
mov
sub
pushf
out
pop
imul
sbb
xor
inc
cmp
cltd
cmp
lds
imul
loop
mov
sar
jno
inc
xor
add
fs
movsl
aad
jl
int
rcrl
out
das
adc
mov
push
jge
testl
fnstenv
or
mov
push
mov
cli
mov
xchg
add
or
adc
add
and
jmp
pavgb
and
and
and
pop
push
pop
loopne
mov
jmp
in
adc
dec
lret
aas
adc
fwait
loopne
jae
popl
cmp
cmp
vlddqu
push
and
std
js
fmul
inc
cmp
sbb
mov
mov
repnz
fst
lcall
mov
sub
sub
sahf
and
and
rcrl
andl
fdivrp
mov
hlt
cmp
shll
adc
jge
lods
loopne
or
shlb
mov
out
ss
and
adcb
test
imulb
lock
mov
bound
ror
lock
xchg
cltd
cmp
sarb
xchg
outsb
pop
mov
fxch
aas
pop
dec
sbb
pop
cltd
sub
test
mov
clc
xlat
rcrl
ss
andb
outsb
std
sub
jb
pop
leave
cmp
icebp
jno
movsl
lcall
dec
sbb
pop
add
ss
add
mov
int
loopne
or
aas
mov
lods
mov
and
and
mov
test
enter
repnz
xlat
aad
andb
fdivrs
scas
pop
mov
adc
les
lret
push
mov
addb
push
popf
adc
cmpsl
pop
cmp
mov
ljmp
push
jae
mov
mov
lret
lret
cmp
daa
jbe
int3
sub
xchg
rcrl
aas
in
xchg
dec
stos
call
fistps
add
xor
jecxz
or
cltd
sbbb
lods
and
popf
lret
xchg
cmp
push
test
imul
out
frstor
pop
stos
imul
popf
dec
jmp
aad
sub
push
ret
shll
dec
outsb
pop
dec
adc
mov
fiadds
popa
mov
pushf
dec
inc
push
insb
fisubs
sub
push
adc
out
cmp
dec
and
insb
fs
pop
jnp
xor
mov
dec
xchg
jle
adc
popf
and
dec
insb
ljmp
das
rcll
inc
mov
mov
xlat
jg
add
test
dec
fincstp
mov
leave
movsb
inc
ds
and
aad
outsl
loope
jb
sbb
mov
stos
stos
fs
dec
ja
push
mov
fisubrs
fnstsw
sbb
movsb
inc
in
stos
int3
pop
pand
mov
lret
subb
aas
push
insl
jnp
push
sbb
int
je
bound
push
or
es
mov
xor
rcr
pop
push
jbe
fcomps
cli
sbb
dec
inc
add
mov
mov
ret
pop
jno
stos
sbbb
sahf
pusha
xchg
push
pop
test
cltd
push
xor
push
pusha
lahf
rcrl
gs
add
es
stos
push
cmp
jg
push
mov
lea
dec
sub
test
test
and
push
in
fimuls
xchg
ret
mov
add
sti
sub
aad
jle
pop
mov
addr16
mov
push
mov
fbstp
ljmp
pop
aas
or
loopne
imul
rclb
lret
inc
pop
mov
mov
push
aas
dec
inc
repnz
mov
in
mov
sarl
xchg
out
shr
cmp
jnp
sbb
cmp
jle
fstpl
xor
xor
imul
jp
in
cmp
out
xlat
jmp
sbbl
into
setae
int3
mov
cmp
es
repz
inc
out
sbb
mov
or
pushf
push
cmpsl
push
arpl
sub
leave
mov
sub
lret
mov
mov
decl
les
nop
sub
and
das
mov
xchg
lods
pop
iret
inc
jecxz
inc
in
sti
lcall
or
dec
mov
push
sbb
sbb
push
pop
iret
bound
ljmp
sbb
imul
pop
int3
ljmp
dec
cltd
xlat
sbb
add
jno
jo
dec
pop
push
pop
arpl
and
ljmp
ret
and
fabs
daa
aad
loopne
or
xchg
test
out
out
mov
loop
insl
es
sub
stos
mov
push
clc
scas
loope
orb
mov
aam
or
pop
fs
push
or
insb
jbe
mov
push
imul
push
and
mov
mov
mov
mov
das
in
shlb
pusha
and
popf
xor
leave
mov
cmc
addr16
lcall
sti
adc
or
lock
adc
jg
jmp
loop
movq
xchg
andb
xchg
jae
push
sub
arpl
fldcw
stos
pop
sbb
aas
dec
inc
pop
mov
jecxz
or
lds
mov
mov
imul
arpl
mov
jae
andb
lods
nop
scas
mov
jnp
mov
mov
in
pop
mov
or
jl
push
or
in
xor
push
sub
scas
hlt
add
pop
add
lret
aaa
push
enter
jb
std
inc
mov
loop
or
cld
cli
mov
xor
push
jmp
stc
mov
sub
xchg
mov
sahf
imul
jle
sbb
sub
mov
int3
pop
nop
mov
fstps
sbb
add
mov
push
and
arpl
jecxz
std
fldcw
xchg
out
test
and
xchg
pop
or
dec
dec
mov
xchg
xchg
daa
and
and
iret
push
sbbb
sahf
jne
mov
stc
movsb
xchg
jae
out
mov
adc
mov
out
xor
fs
jge
push
icebp
leave
sub
outsl
dec
out
test
dec
add
sti
lods
aam
cmpsb
xlat
insb
in
push
sub
push
arpl
fsubp
in
ret
or
pop
mov
xchg
sub
popa
xchg
imul
out
push
mov
add
ljmp
sbb
mov
gs
repz
cmpsl
sub
in
mov
lcall
xor
imul
mov
clc
fwait
pslld
push
scas
sbb
popf
adc
loopne
cs
dec
andb
insb
cmp
adc
loope
and
jle
push
sub
jnp
cmpl
jae
mov
push
lods
sub
outsl
cmp
cld
pop
aad
jl
sbb
cmpsb
das
mov
test
test
sub
ret
or
jp
sub
gs
cmpsb
loopne
sub
adc
out
shrb
loope
fs
inc
aas
xchg
inc
std
stc
or
inc
push
mov
mov
mov
stos
add
loop
arpl
fwait
addl
dec
xor
stos
flds
jle
lcall
imul
enter
push
pop
out
inc
test
pop
dec
repnz
sub
dec
fwait
push
sub
mov
loope
dec
push
jg
mov
adc
jge
clc
outsl
or
dec
mov
mov
sti
loope
lret
pop
mov
cld
or
rcll
scas
inc
popf
iret
pusha
or
fimull
sahf
cwtl
leave
or
shlb
stc
iret
fnstenv
bound
pop
mov
dec
and
add
rorl
cmp
ret
mov
pop
int
mov
jle
ficoms
shll
push
mov
cmc
insb
je
cld
or
sbb
xchg
fdivl
jb
rclb
icebp
insb
enter
daa
jg
bnd
daa
xchg
pushf
xor
sbb
cwtl
lcall
or
jns
push
mov
jbe
hlt
lea
arpl
imul
shlb
mov
cli
mov
cltd
sti
add
or
inc
cmpl
gs
mov
in
mov
lea
dec
adc
dec
out
aas
xor
aas
or
sbbl
lret
ljmp
mov
loop
inc
cli
loope
cli
dec
sti
aad
stos
mov
add
subl
sbb
pop
push
xchg
mov
pushf
or
jle
rclb
and
mov
jae
lret
aad
daa
xchg
mov
mov
jo
cwtl
into
or
nop
int
jmp
testb
lods
loop
jns
add
test
adc
push
add
std
mov
int
sbb
mov
les
sbb
mov
push
add
jg
pop
notb
jmp
jle
jl
inc
xor
mov
std
mov
dec
and
mov
jns
mov
mov
cmp
ret
and
adc
cmpl
ljmp
popf
ds
in
xchg
inc
cltd
and
and
pop
gs
loope
add
cmc
subb
jne
gs
pusha
mov
push
mov
fwait
inc
adc
jle
cltd
fsubrs
dec
cmp
add
int3
insl
or
mov
fnstenv
icebp
in
and
cmp
outsl
cld
adc
int3
fs
roll
pushf
jge
sub
test
dec
add
mov
imul
ss
or
pop
or
in
bound
lcall
imul
out
dec
cmp
sub
push
jge
lods
in
push
dec
in
push
lcall
mov
and
movsl
pop
call
into
jmp
dec
iret
clc
inc
sahf
inc
lea
sahf
mov
pop
hlt
push
add
aam
dec
pop
sub
adc
repz
xor
fldl2e
inc
pop
rcl
les
sub
sub
jae
dec
loopne
loopne
add
mov
sbb
mov
test
pop
jnp
loope
sub
jno
test
insl
leave
cmp
ds
push
fwait
and
out
cmpl
lahf
jno
adc
clc
pop
mov
cwtl
cmp
imul
pop
cltd
pop
dec
push
xchg
lods
fnsave
test
addl
cltd
xor
mov
scas
loop
mov
xchg
mov
decb
ljmp
in
mov
xchg
movsb
jg
xchg
icebp
xchg
sub
loopne
fdivrl
sub
pop
jl
xor
cld
add
ret
pop
mov
out
pusha
test
cmpsl
adcb
or
in
rorl
int
mov
ret
mov
mov
in
aad
mov
clc
fisttpl
cmp
insl
mov
xchg
lods
out
in
addl
xor
in
insl
lcall
sbb
mov
dec
dec
loopne
cmpb
cmpsb
cmp
jle
sbb
add
nop
mov
in
sarl
push
out
das
out
ds
mov
pop
insb
mov
sub
lret
arpl
aam
test
jne
jle
shll
dec
fdivs
leave
mov
std
ds
sarl
sbb
push
mov
or
sub
ficoml
out
dec
aaa
test
dec
mov
nop
xchg
lahf
gs
adc
cmpsb
ret
call
imul
movb
fnstcw
push
or
cmp
push
mov
push
sahf
mov
aam
sbb
sbb
jl
cmp
cmpl
or
mov
clc
or
gs
push
dec
xor
hlt
fstpl
or
dec
addr16
andb
out
fcmovb
rclb
lret
add
mov
cmp
out
fidivs
xchg
dec
stc
sti
aam
test
cli
jp
or
dec
in
sub
push
or
mov
adcb
push
cs
mov
movsl
js
push
mov
adcl
movsb
cmc
pop
jmp
stc
fwait
pop
xchg
stos
xchg
std
int
push
push
sbb
popf
or
dec
push
add
pop
dec
popf
pop
loope
push
jno
pop
mov
loopne
fsubrs
test
sbbb
clc
ja
sti
sub
push
push
cmc
jae
clc
shl
aaa
call
leave
sahf
push
aam
sub
cmp
pop
xchg
and
pusha
loope
lcall
sub
pop
jecxz
dec
push
jge
mov
hlt
push
out
sarb
das
and
loop
test
mov
push
mov
imul
test
mov
movsl
xchg
test
xor
push
dec
popf
jmp
mov
mov
xor
stos
mov
mov
inc
mov
popf
cmp
aad
imul
subb
imul
and
cmc
loop
mov
push
lock
mov
loop
into
cmpl
test
dec
aaa
lods
scas
add
xor
cmp
dec
aaa
inc
lret
pop
aam
ds
lods
mov
xchg
push
imul
lahf
movsl
mov
arpl
lea
test
loopne
notb
cld
xor
jmp
push
lea
add
xor
lahf
std
movsl
lret
sbb
sub
leave
cmpsb
xchg
pop
and
sti
jmp
in
hlt
cmc
inc
test
xchg
test
push
push
inc
adc
ss
ljmp
sub
int3
loop
in
out
inc
pop
popf
cli
sub
push
testb
pop
sbb
mov
add
mov
sbb
arpl
outsb
mov
test
rcrb
mov
scas
and
enter
ret
popf
aas
and
in
call
out
stos
cmp
pop
aaa
gs
jp
jae
mov
iret
std
out
cltd
jno
jae
icebp
clc
adc
xchg
xchg
movb
add
sbb
fcoms
xor
gs
test
xchg
jg
fucomp
xor
pushf
xchg
fbstp
mov
mov
and
fisubrs
leave
fsubrs
roll
stos
xchg
cli
jg
lret
sub
and
xor
leave
and
addr16
bound
push
pop
mov
jne
sub
mov
ljmp
adc
or
inc
sbb
pop
fildll
and
rclb
cmp
call
fneni(8087
xor
push
std
jnp
jecxz
es
add
fidivrs
sub
dec
imul
pop
jle
xor
shl
imul
and
mov
fs
ret
into
movsb
icebp
add
testb
pushf
scas
and
enter
xor
imul
imul
push
mov
fidivrs
sbb
mov
add
test
jb
jg
xchg
sarb
cmp
cmp
test
xchg
orl
xchg
mov
jnp
push
lret
scas
addr16
gs
imul
stos
cmp
in
push
data16
cmp
fldt
push
mov
mov
pop
inc
jne
out
jae
std
adc
in
add
dec
daa
pop
mov
pushf
int3
cmp
adc
int3
out
fidivrl
inc
push
add
sub
nop
sbb
and
ss
xlat
or
int3
add
and
mov
stos
mov
movb
repz
ficoml
loop
shrl
outsl
pop
fistpll
std
aas
mov
sub
andb
data16
mov
and
mov
pop
add
dec
fbld
cmpsb
sti
and
sub
cwtl
rclb
ret
fmuls
stc
jge
cwtl
mov
cmp
lods
or
sub
mov
setne
pop
sub
in
xchg
lret
das
adc
rcll
fsubrl
jae
xchg
mov
push
ficompl
xchg
xchg
jl
stos
bound
aaa
dec
loop
pop
dec
out
mov
xchg
pop
dec
push
xchg
pop
fs
push
dec
jns
dec
ffreep
pop
pop
lods
inc
and
stos
xor
adcl
les
mov
mov
in
sbb
adc
and
push
nop
xchg
addr16
push
push
add
pushf
in
mov
sbbb
aas
pop
xchg
andb
dec
test
nop
xchg
pop
dec
mov
sti
pop
sbb
push
push
pop
jmp
push
cmpsl
lahf
subb
fmull
out
push
mov
jg
cmp
lea
lds
gs
mov
fs
pushl
outsb
mov
in
stos
pusha
mov
fwait
push
insl
cmp
mov
pop
mov
or
and
es
or
push
subb
fcompl
das
adc
cwtl
orb
mov
adc
fcoms
out
daa
imul
scas
dec
xor
mov
cmc
hlt
std
out
shrb
das
sbb
int3
push
cmpsb
lahf
loope
das
test
test
gs
pop
test
xchg
mov
in
jo
clc
xor
xor
stos
push
inc
xchg
iret
add
int3
cmovs
rclb
sbb
and
shll
adc
cwtl
addr16
lret
orb
lret
xchg
sub
leave
mov
cwtl
and
ret
outsb
xor
test
std
mov
addr16
mov
arpl
jnp
pop
cmp
test
pop
pop
scas
push
lock
sbb
xor
and
xor
packssdw
imul
mov
cmpsl
in
xchg
insb
jg
and
lret
push
leave
rcr
in
gs
stos
imul
adc
aad
add
add
imulb
aaa
pop
subl
mov
rorb
sub
call
js
xchg
and
jns
push
jg
in
insb
out
sbb
mov
dec
sub
fsincos
inc
lahf
aad
pop
cmp
jae
dec
xchg
ret
sub
inc
repz
daa
cmp
in
pop
mov
ljmp
or
imul
mov
ljmp
sbb
inc
push
jno
ds
pop
pop
test
push
cmc
push
sub
insb
mov
out
nop
sbb
and
add
loopne
xor
or
xor
mov
inc
fcomip
lret
add
mov
cmp
sbb
mov
lret
movsl
and
xor
scas
adc
mov
cmp
loope
jp
jnp
push
loop
icebp
add
mov
cmp
sbb
bound
mov
pusha
xlat
xchg
std
mov
inc
test
fistpll
imul
lret
xchg
lea
dec
mov
scas
mov
cmp
out
bound
and
shrl
aas
dec
inc
mov
insb
dec
popf
mov
mov
xchg
sti
pop
int3
cmp
mov
ficoms
lahf
mov
cmp
jl
xchg
add
push
push
fcmovnb
adc
mov
xchg
movb
jmp
fucomp
popa
jo
mov
jl
scas
data16
mov
xchg
fwait
mov
popa
mov
js
scas
xor
pop
clc
xorb
mov
and
out
outsl
dec
mov
lock
cmp
stos
data16
popa
ds
jecxz
pop
hlt
cmc
or
mov
lds
in
add
inc
jge
prefetch
ret
jl
sub
mov
pop
or
cmpsl
add
adc
jge
sbb
les
insb
sub
adc
and
addb
mov
push
mov
fwait
inc
cld
inc
cmc
mov
jno
shl
sub
inc
fnstenv
outsl
popf
jg
inc
movsb
shlb
mov
fisttps
jge
movl
arpl
iret
jo
mov
movb
or
imul
pop
jne
jns
stc
jp
movsl
je
les
push
xchg
fistpl
insl
popf
int3
in
xchg
repnz
aas
jge
jecxz
mov
inc
mov
rcrb
je
or
insb
jg
push
movl
mov
out
std
out
ja
add
mov
fisttps
sbb
push
popf
clc
add
mov
push
jno
mov
mov
dec
jb
sar
shlb
lds
mov
outsl
in
push
dec
xchg
pop
ja
jmp
xchg
push
mov
mov
aaa
sbb
out
out
cmc
mov
or
jecxz
jns
fiaddl
xchg
mov
push
pop
mov
fcompl
jg
mov
adc
mov
push
decb
push
adcl
pusha
mov
mov
pop
pop
adc
push
mov
test
jno
faddl
fsubrl
insl
popa
bound
pop
mov
mov
inc
mov
call
xor
add
es
insb
and
fwait
and
xchg
fiadds
pop
cli
push
fcmovb
mov
jg
fwait
repnz
xor
and
mov
push
aas
pop
out
ror
jl
push
and
loope
push
jbe
or
jecxz
aaa
mov
fimull
add
nop
out
add
xchg
gs
idivl
shr
sub
mov
rolb
sub
push
add
lods
ret
inc
ss
xchg
dec
pusha
mov
xor
es
or
and
inc
out
insb
pop
mov
test
ret
cltd
insl
out
jno
popa
mov
lds
inc
xor
psubd
popf
std
stos
test
popa
cmc
fisttpl
lahf
and
les
loopne
push
cwtl
lcall
mov
adcl
jnp
iret
pushf
test
add
xchg
xchg
push
pop
cmpsl
and
lods
xorb
add
pushf
mov
add
or
test
pop
jnp
leave
add
pop
mov
bound
lahf
add
fwait
outsl
push
sarl
or
loop
jo
cltd
jl
vcvtpd2psx
fidivrl
roll
push
gs
push
push
dec
xor
iret
leave
cs
jl
idivl
outsb
mov
cmp
lcall
into
out
push
mov
bound
test
sub
jg
xchg
or
mov
push
mov
pop
inc
mov
pop
and
lret
pop
out
jbe
sar
push
enter
xor
push
bound
leave
mov
dec
xchg
mov
mov
dec
sbb
pop
xchg
mov
je
cld
scas
pop
ret
sbb
jmp
and
jne
int3
pop
or
push
in
mov
leave
rcll
inc
mov
jle
fistl
cmp
cmpsw
lret
movsl
pusha
fbld
xchg
jae
jmp
xchg
notb
sbb
mov
pushf
out
cld
aas
ljmp
pop
mov
stc
add
xchg
push
fdivs
xchg
int
pop
sbb
xchg
cmpsl
or
aad
inc
fdivrl
inc
out
sub
aam
push
jae
cmp
inc
movsl
lret
dec
jge
mov
jb
fcoml
sub
add
es
out
sub
push
inc
push
stos
test
test
dec
sub
rol
adc
in
or
xchg
xor
and
js
sbb
mov
jne
xor
xchg
clc
gs
push
push
mov
sbb
insb
cmp
lret
jae
stos
rcll
dec
xor
xor
mov
movl
sub
lcall
sbb
or
in
inc
sti
lret
xchg
xchg
pop
gs
mov
mov
aaa
out
dec
adc
or
mov
sbbb
add
mov
inc
dec
popf
mov
incb
jl
daa
sbb
push
dec
gs
aad
shrl
enter
testl
push
sbb
ficomps
mov
lea
data16
repnz
out
mov
mov
add
outsl
mov
dec
or
xchg
jg
xchg
dec
xchg
jecxz
fistl
mov
push
into
cmp
adc
cs
les
dec
nop
or
xor
stos
inc
ret
mov
adc
push
cli
push
adc
inc
cli
lret
out
jle
iret
lret
and
adc
mov
pop
outsl
jnp
pop
adc
mov
cmp
stos
push
sahf
stos
push
push
fwait
leave
jae
inc
cmp
rolb
ss
incl
out
testl
ret
nop
dec
sub
or
addl
mov
fidivrl
sub
jbe
cmp
nop
lahf
mov
enter
mov
mov
mov
icebp
rolb
fidivl
nop
xchg
add
ja
xchg
sarl
mov
orb
cwtl
insl
lret
jno
jecxz
jg
inc
push
push
arpl
add
dec
inc
es
nop
sub
ja
mov
push
notb
mov
jbe
push
xlat
xor
testl
popa
iret
add
add
mov
bound
push
xorb
mov
outsl
dec
jg
sub
xor
sti
sub
sub
push
mov
xchg
mov
test
outsb
rolb
lret
adc
jecxz
cmp
inc
dec
push
into
cli
ss
repz
les
mov
sbb
mov
iret
lret
mov
mov
jo
sarl
icebp
sub
lea
inc
outsl
movsl
mov
jns
mov
add
mov
lea
and
adc
pop
push
cwtl
fsubrl
inc
mov
push
xor
sbb
test
add
push
gs
or
loopne
mov
xor
in
adc
orb
cmp
loop
nop
imul
dec
sub
fdivrp
sub
dec
or
imul
lock
xor
cmp
mov
mov
loopne
in
jle
aaa
xor
daa
pop
gs
sub
scas
mov
cmpsl
test
jno
xlat
mov
ss
mov
sbb
mov
pushf
mov
inc
mov
loopne
cmpsb
mov
aas
fisttps
xor
xchg
sub
mov
or
sbb
popa
aas
fs
shr
adc
mov
ja
inc
fistpll
ret
jecxz
test
aas
pop
adc
rcll
push
adcl
jg
jb
orb
mov
sar
or
fimull
add
pop
add
loopne
jne
cmp
add
dec
int3
outsl
fnsave
clc
icebp
ret
movsb
ljmp
fidivrl
xchg
jecxz
addr16
cwtl
mul
mov
dec
cmp
xchg
mov
xchg
push
push
insl
out
imul
add
inc
stos
mov
xchg
adcl
push
mov
inc
insb
adc
cli
xchg
fstl
aam
mov
das
cs
daa
sbb
ret
int
arpl
sub
repz
adc
mov
inc
ds
rcl
sti
rorb
sbb
mov
sbb
test
jbe
adc
scas
frstpm(287
and
mov
mov
xchg
dec
dec
sub
into
stos
adc
xchg
push
inc
cmp
cmp
and
or
into
lods
mov
sbb
arpl
mov
mov
pop
shlb
push
mov
rol
les
inc
js,pn
add
out
cmp
mov
push
lahf
ret
aaa
and
iret
add
sbb
sub
adc
inc
psubb
ret
lods
loopne
push
adc
repnz
aaa
movsb
xor
les
clc
xchg
cmpl
and
lods
out
incl
jb,pn
sub
xchg
in
pop
ret
sahf
push
dec
pop
aas
mov
mov
sub
hlt
ds
mov
jae
out
xor
xlat
jnp
std
sbb
xor
jb
mov
pop
testb
or
cmp
lods
xchg
mov
repnz
cli
ja
sub
cmp
outsb
mov
loop
aaa
mov
dec
cld
sti
fcoml
inc
pop
inc
mov
lock
adc
xor
pop
sti
xor
dec
pushf
xor
push
cmpb
inc
ja
stos
sti
xor
aas
push
adcl
out
adc
shl
les
cwtl
pop
jge
jecxz
repz
inc
jmp
mov
adc
sub
bnd
rol
dec
fwait
std
sbb
mov
xchg
fimuls
mov
xchg
xchg
pop
mov
jnp
dec
dec
mov
fsubl
dec
mov
sbb
push
faddl
jo
push
cli
montmul
cmpsb
inc
lods
aas
sub
cltd
jbe
sti
mov
xor
test
ret
xchg
outsl
inc
std
repnz
inc
dec
mov
rcll
push
mov
bnd
pop
test
mov
orb
add
ret
shrd
rolb
mov
pop
out
leave
test
out
ds
lret
adc
xchg
je
xor
lods
adc
sub
cs
fisubrs
imul
dec
xchg
in
push
stc
dec
sub
mov
ret
adc
int
or
cmp
pop
daa
xchg
out
call
cmc
mov
out
jns
fdivrs
shlb
xor
pop
mov
aaa
mov
xchg
enter
in
and
xorl
lds
and
outsl
push
mov
ficoml
lock
ss
in
mov
stos
je
cmp
in
mov
test
ret
pop
dec
dec
or
inc
test
sahf
lcall
divb
mov
and
pop
pop
insl
adc
mulb
negb
gs
test
in
and
mov
ja
test
bound
stc
add
repnz
cmpb
ret
mov
pop
cld
xchg
xor
lahf
and
xchg
outsb
dec
sbbb
inc
mov
jne
mov
adc
ljmp
in
ret
sub
xchg
pop
sub
mov
icebp
or
add
mov
stc
add
pushf
push
cwtl
into
int3
xor
mov
add
mov
dec
test
add
pop
cmp
xor
dec
ljmp
movsl
sahf
mov
sbb
inc
outsl
xchg
faddl
and
xor
and
dec
pop
mov
push
mov
mov
cmp
sub
fstl
dec
push
jg
or
mov
ret
adc
mov
xchg
mov
loopne
je
pop
mov
dec
mov
jmp
pop
mov
mov
xchg
fisttpl
les
xchg
test
adc
pop
pop
adcb
mov
daa
mov
loope
ljmp
cmp
and
shr
int3
push
pop
push
and
dec
sub
xor
xchg
sub
jmp
jle
mov
fisttpl
lret
mov
lods
mov
push
add
push
xor
mov
jle
mov
sbb
inc
push
leave
shl
pop
sti
out
add
lret
ret
xchg
adc
inc
das
dec
mov
punpcklwd
push
mov
jmp
sti
sub
add
mov
inc
pop
nop
je
or
sbb
xchg
add
push
sahf
jle
mov
pop
mov
sbb
xor
clc
pop
sti
inc
inc
inc
cmp
push
push
andl
mov
jno
ret
xlat
mov
push
fnstsw
iret
cmp
cltd
fwait
add
pop
inc
leave
mov
addr16
dec
and
xor
imul
adc
iret
jne
sti
das
imul
inc
test
mov
arpl
inc
inc
shll
roll
push
mull
sub
pop
loopne
inc
dec
mov
sti
and
and
fimull
outsl
cmp
mov
add
inc
and
and
imul
rep
jnp
jne
das
inc
arpl
inc
insl
mov
pop
test
mov
jae
cli
mov
cmp
sbb
xchg
mov
xor
lods
jbe
sbb
orb
add
jne
mov
xchg
dec
out
testb
das
in
arpl
popf
mov
xlat
test
mov
repz
mov
gs
out
inc
loopne
inc
jne
out
popa
rcrb
ja
cli
and
leave
mov
mov
ds
lret
mov
mov
bound
out
pop
loopne
inc
dec
mov
out
popa
lret
xor
jnp
out
outsl
xor
mov
aad
inc
subl
jecxz
mov
mov
gs
or
mov
mov
lret
and
and
xor
cmp
shr
jg
jnp
jbe
jmp
xchg
add
mov
loopne
inc
mov
shrb
and
and
xor
cmp
add
out
push
or
cmpsl
cmp
push
mov
rcl
das
in
arpl
popf
mov
lret
test
mov
divl
add
inc
loopne
inc
jno
jecxz
sbb
and
loop
outsl
jge
mov
test
mov
push
aaa
out
mov
and
mov
ret
and
and
xor
cmp
shr
jae
jns
and
in
mov
sti
out
mov
popf
sbb
mov
inc
mov
and
test
mov
xor
into
lahf
out
or
mov
xor
mov
mov
cltd
sbb
mov
inc
mov
das
sbb
xchg
jecxz
mov
mov
gs
or
mov
mov
lds
arpl
outsb
sarl
and
bound
pop
add
sti
jne
xchg
das
adc
mov
test
pop
or
mov
add
inc
mov
gs
out
movsl
loopne
inc
push
mov
jmp
insl
mov
pop
xor
dec
imul
dec
jbe
loopne
mov
and
out
mov
aaa
inc
mov
rcl
and
and
xor
cmp
add
out
push
or
mov
xor
ja
jecxz
xchg
sbb
icebp
loopne
inc
cltd
mov
aaa
and
mov
cmp
stos
out
sub
xchg
jne
xchg
add
mov
movsl
push
or
rcl
dec
and
and
imul
rep
jnp
jne
fldt
dec
arpl
inc
jne
jecxz
test
mov
jae
fucomi
fscale
sub
imul
out
fists
aas
das
lods
arpl
inc
pop
mov
push
scas
mov
pop
mov
mov
mov
xor
mov
xchg
imul
out
mov
mov
or
mov
mov
or
stos
jecxz
mov
mov
movb
sub
out
mov
jnp
jne
imul
arpl
inc
mov
mov
cmpxchg
jmp
sbb
fwait
inc
or
mov
xchg
leave
jnp
jne
jnp
in
pop
inc
xchg
mov
ret
test
mov
out
xchg
out
jne
out
imul
and
lret
cmp
mov
and
and
mov
imul
jmp
jnp
jne
iret
das
jge
sti
inc
insl
mov
pop
test
mov
jae
cli
fucomi
fprem
jb
sub
mov
mov
mov
mov
or
mov
shll
dec
xchg
and
xor
cmp
out
dec
add
jne
scas
and
sti
inc
mov
mov
addr16
in
pop
inc
xchg
mov
ret
test
mov
sbb
scas
out
insl
loopne
inc
sbb
rorb
arpl
push
mov
das
leave
arpl
icebp
mov
mov
add
push
mull
xlat
out
push
loopne
inc
inc
mov
jecxz
popa
and
out
ja
adc
fprem1
sbb
imul
out
fistl
aas
das
test
mov
add
mov
mov
sarb
dec
xor
push
popa
add
out
xchg
jnp
jne
pop
das
lea
inc
mov
jb
adc
cmpsb
mov
gs
out
adc
popl
mov
push
bound
add
mov
jnp
jne
arpl
loope
adc
mov
ljmp
mov
pop
mov
mov
cmpsb
out
gs
inc
adc
rorb
arpl
push
pop
outsl
aad
inc
inc
lds
mov
shll
and
mov
mov
out
gs
xor
popl
out
outsl
xor
test
shll
mov
mov
gs
aaa
out
mov
daa
inc
mov
rol
and
and
xor
cmp
out
out
ja
jns
and
lock
mov
sti
out
mov
jnp
jne
adc
lea
inc
mov
xchg
aas
mov
mov
gs
out
adc
addl
mov
xor
mov
gs
inc
das
shll
icebp
mov
fldt
push
jecxz
mov
mov
gs
inc
loopne
inc
jno
jecxz
sbb
and
decb
inc
aad
inc
xchg
ss
mov
mov
gs
aaa
out
mov
das
inc
pop
mov
iret
and
and
xor
cmp
shr
jae
jns
and
sar
out
std
loopne
inc
jmp
rolb
and
mov
pop
add
xchg
jne
xchg
add
mov
outsl
test
sti
inc
jne
jae
icebp
arpl
loope
adc
test
mov
jmp
jb
pop
gs
iret
out
jge
incl
mov
andl
out
outsl
ss
and
int
dec
mov
add
pop
mov
gs
out
movsl
loopne
inc
push
mov
jmp
imul
dec
imul
dec
jbe
push
test
mov
xor
out
xchg
loopne
inc
cmpl
and
xor
cmp
add
xchg
mov
xor
pop
test
loopne
inc
std
mov
pop
and
push
jmp
jb
pop
add
sti
jne
xchg
das
or
mov
imul
jb
leave
dec
das
stc
arpl
loope
adc
test
mov
out
mov
mov
gs
inc
loopne
inc
insl
mov
xchg
add
and
cli
mov
test
cmp
xchg
jnp
jne
aas
das
lods
arpl
inc
pop
mov
push
scas
mov
daa
mov
mov
shlb
inc
and
sbb
mov
and
inc
out
iret
mov
xlat
das
push
arpl
inc
jge
ljmp
test
mov
push
mov
mov
out
out
and
add
mov
loope
pop
jne
pop
das
andl
pop
test
mov
aaa
mov
mov
movb
sub
jb
fwait
mov
dec
mov
and
inc
out
iret
cmpl
das
mov
mov
xor
jecxz
mov
mov
out
out
fldl
sub
imul
out
fists
aas
das
lods
arpl
inc
pop
mov
add
mov
mov
sarb
inc
fldl
scas
xchg
imul
out
scas
loope
adc
add
andl
out
mov
aas
mov
mov
gs
add
mov
pop
gs
dec
das
cmc
arpl
in
pop
xlat
test
mov
out
mov
mov
gs
jge
incl
mov
xchg
add
decb
xchg
in
frstor
outsb
loope
pop
jne
comiss
mov
pop
test
mov
sub
ret
cmp
mov
xchg
lock
in
mov
pop
and
jb
adc
cmp
add
xchg
jne
das
cmp
inc
sub
mov
test
dec
and
cmp
cmpsl
xor
lret
imul
out
pop
jnp
jne
imull
jno
out
inc
sbb
sarb
inc
add
inc
and
push
and
imul
out
mov
shrl
push
arpl
inc
jge
sti
and
jnp
out
outsl
shl
mov
sub
stos
mov
mov
gs
pop
out
and
das
negb
and
and
xor
cmp
loop
outsl
jecxz
push
mov
mov
mov
ss
fists
cmp
test
mov
cmp
mov
pop
mov
mov
mov
sub
push
mov
mov
cltd
pop
das
andl
sbb
scas
jecxz
mov
mov
gs
lahf
out
or
mov
xor
imulb
sbb
out
loope
pop
inc
mov
cmp
movsl
mov
pop
xor
cmp
add
out
push
or
mov
lahf
dec
sbb
inc
sti
dec
das
stc
arpl
loope
adc
test
mov
out
mov
mov
gs
gs
and
loop
arpl
or
lock
dec
sub
and
imul
imull
fldt
inc
arpl
inc
jno
jecxz
test
mov
jnp
out
imul
pop
and
popl
add
out
cmpsl
cltd
jnp
jne
aaa
das
mov
daa
inc
movsl
mov
adc
mov
mov
ret
cmp
cmpsl
inc
and
add
mov
in
imul
arpl
inc
mov
mov
pop
mov
mov
gs
lahf
inc
or
sarb
xchg
movl
and
xor
imul
pop
dec
jnp
jne
out
popa
arpl
jae
cli
mov
inc
leave
mov
jnp
in
and
xor
imul
pop
push
jnp
jne
ljmp
insl
arpl
inc
sbb
out
mov
lahf
lds
inc
jo
inc
mov
cmpsl
mov
mov
gs
aaa
out
mov
daa
inc
movsl
mov
iret
and
and
xor
cmp
shr
jae
jnp
jbe
adc
mov
gs
pop
out
and
sub
pop
rol
and
and
xor
cmp
inc
cmp
jo
jp
test
push
mov
in
loopne
inc
cltd
mov
aaa
and
orb
add
xorl
mov
xchg
arpl
mov
jnp
jne
comiss
mov
pop
test
mov
sub
ret
add
mov
sub
adc
jne
arpl
loope
adc
mov
ljmp
xchg
cmpxchg
jmp
sbb
xchg
mov
mov
xchg
lds
jne
outsl
das
popf
arpl
inc
mov
mov
pop
mov
mov
cmpsb
out
gs
inc
adc
sarb
mov
rcl
das
icebp
arpl
popf
mov
iret
test
mov
divl
mov
out
dec
loopne
inc
jns
sti
imulb
xchg
and
ljmp
cld
jecxz
inc
leave
mov
mov
ds
lret
mov
mov
gs
pop
loopne
inc
dec
mov
jecxz
sbb
rorb
and
pushf
ja
mov
mov
scas
add
out
fists
aas
das
test
mov
pop
test
mov
push
mov
mov
loop
out
and
sub
mov
gs
pop
out
loopne
inc
mov
rcl
and
and
xor
cmp
ret
cmp
jne
rclb
and
mov
xchg
loopne
inc
cmpl
and
xor
cmp
out
dec
add
jne
fdivrl
ret
jl
inc
jno
mov
mov
add
mov
gs
out
pop
loopne
inc
inc
mov
out
popa
lret
xor
jnp
loop
imul
mov
stos
outsb
jecxz
mov
mov
mov
or
mov
xlat
and
and
xor
cmp
add
xchg
mov
ja
and
dec
out
std
loopne
inc
in
mov
adc
xchg
push
and
xor
out
imul
add
sti
jne
xchg
das
adc
mov
jae
mov
arpl
mov
jae
icebp
and
imul
out
jnp
jne
ljmp
insl
arpl
inc
sbb
mov
lahf
hlt
cli
inc
test
jae
in
xor
fbstp
pop
pop
imul
sbb
ret
jne
repz
jno
out
inc
sbb
mov
inc
add
jg
rcrl
and
imul
out
sti
mov
daa
jne
shrl
dec
arpl
inc
jns
sti
das
test
mov
inc
mov
mov
notb
repnz
and
imul
out
iret
mov
das
das
pop
arpl
inc
dec
mov
aas
test
mov
push
mov
mov
ljmp
fldenv
jb
packsswb
outsb
icebp
mov
adc
xchg
pop
and
xor
imull
cmp
add
pushl
jecxz
popa
arpl
jg
out
outsl
add
jp
sarl
ja
icebp
cmp
inc
iret
imul
jecxz
jnp
jne
lret
das
jns
sti
inc
imul
jecxz
mov
fucomi
aad
jb
sub
mov
cmpsl
gs
pop
out
and
sub
pop
rcr
and
and
xor
cmp
out
out
jae
jns
and
cmp
cmp
cltd
jnp
jne
or
mov
mov
or
cmpsb
jecxz
mov
mov
ret
cmp
mov
mov
xchg
jnp
jne
sbb
mov
inc
mov
cmp
test
mov
aas
mov
mov
gs
lahf
out
or
mov
mov
stos
call
loopne
inc
loope
adc
rorb
and
mov
cmp
mov
lahf
jne
mov
cmp
pop
test
loopne
inc
sarl
and
dec
and
xor
imul
pop
push
jnp
jne
sti
das
arpl
jae
cli
mov
jbe
rorb
std
and
scas
xor
xlat
imul
jecxz
jnp
jne
ljmp
insl
arpl
inc
sbb
mov
xchg
jmp
mov
mov
stos
test
mov
iret
mov
mov
bound
out
pop
loopne
inc
inc
mov
out
and
fimull
imul
mov
test
mov
mov
gs
aaa
out
mov
daa
inc
movsl
mov
iret
and
and
xor
cmp
out
out
jae
jnp
jo
jp
scas
xor
mov
mov
rolb
and
jb
pop
imul
xchg
jne
subl
arpl
lahf
out
pop
inc
leave
mov
jnp
jmp
pop
pop
imul
sbb
jne
imull
jne
sti
inc
imul
jecxz
mov
fucomi
fnstenv
xchg
sub
mov
mov
ss
gs
pmaxsw
mov
and
and
xor
cmp
inc
cmp
jne
fdivrl
inc
sub
out
xchg
jnp
jne
adc
xchg
arpl
inc
mov
mov
add
mov
fwait
inc
or
mov
mov
stc
loopne
dec
push
rclb
and
push
imull
cmp
add
sti
jne
xchg
das
adc
inc
cmp
push
inc
lds
arpl
popf
inc
and
xor
sti
imul
pop
dec
jnp
jne
out
arpl
inc
test
mov
lahf
jecxz
cmp
cmpsl
gs
pop
out
mov
or
mov
das
and
and
xor
cmp
add
jne
mov
cmpsb
xor
mov
jmp
mov
aaa
and
orb
add
xchg
mov
xor
pop
test
loopne
inc
stc
mov
outsl
and
outsb
imull
cmp
add
repz
jecxz
sbb
mov
ja
cli
mov
jbe
rorb
stc
and
mov
imul
pushl
shrl
push
arpl
inc
jge
sti
das
test
mov
jnp
out
outsl
shl
fldenv
sbb
scas
add
fists
xor
lods
arpl
inc
pop
mov
push
scas
mov
pop
mov
mov
mov
xor
scas
inc
fisttpll
mov
mov
mov
loope
adc
mov
and
mov
xchg
xor
cmp
add
out
push
or
jne
mov
sti
out
xchg
jnp
jne
inc
xchg
mov
ret
test
mov
jecxz
mov
out
jne
out
popa
mov
mov
cmp
and
or
outsl
shll
inc
shll
fildl
outsb
mov
gs
out
push
loopne
inc
inc
mov
jecxz
popa
into
and
fimull
outsl
xor
adc
mov
subl
jecxz
mov
mov
outsb
aas
out
test
mov
jmp
insl
mov
pop
xor
dec
imul
dec
jbe
dec
test
mov
xor
out
loopne
inc
mov
daa
mulb
sahf
and
xor
cmp
out
dec
add
mov
fbstp
push
mov
icebp
loopne
inc
popf
mov
or
mov
and
xor
cmp
add
xchg
mov
shlb
add
out
jmp
mov
xor
lods
jbe
sbb
xchg
xor
mov
xorl
mov
shr
and
sub
xlat
add
mov
gs
out
push
loopne
inc
inc
mov
out
and
out
ja
mulb
lahf
xchg
jecxz
inc
lds
mov
iret
mov
mov
gs
out
pop
loopne
inc
inc
mov
jecxz
popa
and
jnp
out
imul
dec
jbe
inc
test
mov
xor
mov
cmp
movsl
mov
or
xchg
aas
imul
mov
xor
scas
and
inc
mov
mov
cltd
loopne
inc
mov
rcl
and
and
xor
cmp
fsubrp
jnp
jnp
jo
jp
aad
sbb
out
popf
loopne
inc
mov
das
and
and
xor
cmp
add
out
dec
add
jne
mov
gs
dec
out
stc
loopne
inc
jmp
rolb
and
jbe
pop
imul
jmp
adc
arpl
xchg
sbb
cmc
loopne
inc
cltd
mov
aaa
and
xchg
xor
mov
jne
mov
lahf
popa
pop
pop
out
vzeroupper
inc
cmc
mov
pop
and
push
jmp
jb
adc
sahf
out
add
out
popa
lahf
das
or
mov
arpl
loopne
inc
std
mov
pop
and
jle
jecxz
mov
adc
sahf
out
add
sti
jne
xchg
das
adc
inc
cmp
push
adc
jns
outsb
shll
xlat
add
mov
gs
out
dec
loopne
inc
jne
out
popa
rclb
jnp
out
arpl
pop
outsl
int
dec
inc
cmc
mov
mov
add
jle
jecxz
mov
out
inc
loopne
inc
jno
jecxz
popa
rclb
jnp
out
outsl
gs
add
arpl
lds
mov
iret
mov
mov
gs
out
push
loopne
inc
jns
sti
imulb
jmp
sbb
and
rorb
arpl
push
add
mov
xchg
xor
shll
and
mov
mov
repz
and
fimuls
ja
cli
dec
jbe
pop
sbb
imul
out
iret
cmpl
das
pop
arpl
inc
inc
mov
sub
fsubp
inc
mov
mov
cli
imul
adc
mov
ds
cmpsl
xchg
jnp
jne
xor
mov
and
mov
add
mov
pop
mov
mov
shlb
out
fsts
xchg
add
out
mov
xchg
add
mov
mov
pop
test
mov
sub
fidivl
inc
fstl
imul
out
mov
adc
sub
mov
pop
test
mov
pop
mov
mov
ljmp
and
mov
ds
cmpsl
cltd
jnp
jne
aas
das
lods
arpl
inc
pop
mov
add
mov
mov
sarb
out
aad
mov
mov
jnp
jne
or
mov
daa
inc
movsl
mov
pop
test
mov
and
fimull
inc
and
push
cmp
popf
jnp
jne
aaa
das
mov
and
mov
push
xchg
mov
and
shlb
inc
fstl
xchg
imul
out
mov
jnp
jne
sbb
andl
pop
test
mov
aaa
mov
mov
ret
cmp
scas
mov
push
jp
adc
icebp
loopne
inc
cltd
mov
aas
and
lcall
add
jne
mov
jl
push
bound
push
out
mov
cltd
sbb
test
inc
mov
and
test
mov
cmp
lret
add
mov
arpl
outsb
stc
mov
pop
and
bound
or
xchg
out
xor
xchg
jne
subl
arpl
movsl
add
xor
outsb
std
mov
stos
test
mov
iret
mov
mov
gs
out
push
loopne
inc
jns
out
rclb
inc
xor
ja
mulb
fwait
mov
rorb
cmc
cmp
inc
iret
imul
out
jnp
jne
sti
das
arpl
inc
test
mov
add
sti
inc
das
shll
in
mov
fldt
push
jecxz
mov
mov
gs
out
push
loopne
inc
jge
sti
mulb
xchg
and
decb
in
add
dec
and
and
scas
xor
shrl
cmp
add
rep
jnp
jne
fildll
dec
arpl
inc
jns
sti
daa
test
mov
jae
fucomi
aad
sub
imul
out
lret
test
jne
sub
pop
arpl
inc
inc
mov
das
test
mov
inc
mov
mov
cli
imul
adc
mov
popf
jnp
jne
aaa
das
mov
and
mov
push
scas
mov
pop
mov
mov
shlb
inc
xchg
imul
out
mov
jnp
jne
sbb
test
inc
mov
das
sbb
xchg
jecxz
mov
mov
gs
out
or
mov
jmp
sarl
jne
addr16
in
adc
mov
ljmp
mov
or
mov
addl
mov
lahf
mov
push
leave
loopne
inc
icebp
mov
add
mov
xchg
xor
mov
fwait
jne
mov
repnz
arpl
mov
jnp
jne
pop
das
andl
sbb
scas
jecxz
mov
mov
ret
add
mov
sub
out
pop
jnp
jne
imul
arpl
inc
test
mov
add
mov
xchg
mov
mov
gs
dec
das
cmc
arpl
popf
mov
lret
test
mov
out
mov
mov
gs
lret
out
jns
sti
inc
imul
and
testb
pop
lock
pop
push
rcr
psrad
jns
xchg
repz
stc
sbb
leave
rcll
jecxz
xlat
xor
and
cmpsl
pop
jb
in
pusha
lret
out
and
sub
fisttps
cli
xorl
dec
xchg
jbe
xchg
shrb
icebp
mov
sub
insl
rolb
cmp
inc
pop
cltd
push
jmp
cmpsl
or
jle
push
dec
shl
pop
inc
adcb
pop
push
and
xor
dec
test
dec
xchg
lret
repz
cmp
sub
and
and
add
jno
pop
or
push
and
xchg
rcrb
mov
add
pop
fstl
rcrb
dec
pop
cmpsl
xchg
inc
cmp
pop
jns
cld
push
pop
mov
xor
push
adc
or
xor
leave
or
movsb
jmp
aam
mov
jns
xchg
decb
lods
std
pop
sahf
jmp
push
sbb
push
xchg
ret
ja
xor
push
mov
xor
rorl
stc
ret
or
or
mov
imul
xchg
ret
and
push
insb
incb
cli
pop
mov
or
mov
dec
into
mov
inc
inc
cltd
or
movb
jno
ljmp
sbbb
cmp
lods
insl
imul
xchg
sub
xchg
push
cwtl
or
mov
popf
push
cmc
xor
ljmp
add
mov
or
or
sub
loope
ss
aad
enter
push
xor
push
fdivl
xchg
jbe
sub
cmp
lcall
lea
int
xor
sub
mov
dec
adcb
fisubs
je
push
in
mov
dec
mov
jae
loop
and
xchg
jg
mov
push
inc
test
push
mov
add
idiv
push
cmp
mov
imul
push
out
fdivr
stc
xchg
cmp
dec
das
xchg
xchg
popf
into
xchg
mov
xchg
inc
sub
add
mov
scas
adc
jmp
push
jb
cmpsl
dec
inc
push
dec
aas
cmp
sub
xchg
cmp
add
inc
mov
pop
jnp
pusha
js
rcl
icebp
xchg
add
int3
cmp
jo
loop
mov
mov
inc
insl
loopne
enter
outsl
mov
pop
repnz
cmp
fstpt
inc
cmpsl
lret
mov
cltd
jmp
mov
mov
mov
test
sti
or
loop
scas
dec
testl
or
in
cs
outsl
bswap
mov
or
fsubrs
mov
lods
stc
jmp
dec
add
ja
test
js
fmuls
jae
xor
or
xchg
push
cmpsb
insl
and
xchg
mov
push
adc
mov
mov
insl
cmp
out
xchg
in
mov
mov
shrl
mov
ret
and
lret
fstpt
and
cmpsl
inc
mov
adc
mov
xlat
push
pop
sahf
call
cmp
shr
jb
rorb
fmuls
and
jg
pop
pop
jmp
mov
andb
add
push
movb
sti
xchg
ljmp
jle
jg
xlat
les
dec
dec
jecxz
pop
and
mov
into
xor
xchg
in
pop
adc
jmp
std
jb
fs
mov
jle
push
mov
mov
out
mov
lods
scas
add
fsubrs
int
addr16
insb
dec
cmp
cmpsb
add
jmp
rcpps
xor
pop
pop
je
lret
push
or
add
sbb
mov
mov
cmp
das
scas
mov
xor
xchg
dec
mov
fildll
dec
jmp
ss
mov
or
mov
ja
loopne
cmp
arpl
mov
fistl
mov
mov
mov
xchg
into
les
stos
shl
push
inc
adcb
pop
cmpsl
or
jns
xor
ret
mov
inc
dec
arpl
ja
sub
orb
shr
cltd
mov
or
ficompl
mov
bound
ja
out
jge
rorl
xlat
push
scas
dec
sub
adc
popf
pop
adc
pushf
push
sub
jns
mov
xchg
ss
pop
andl
lds
arpl
cltd
clc
out
cmp
xchg
mov
push
adc
es
mov
fiaddl
cmc
jle
mov
jnp
mov
push
aaa
insb
mov
adc
mov
cmp
pusha
pop
mov
fbld
sub
mov
pop
xchg
enter
fldenv
test
pop
jg
jae
cmp
jmp
jns
arpl
sub
mov
outsb
jecxz
and
add
pushf
cmpsl
sub
xchg
shlb
sub
out
ds
pop
cmp
out
add
sti
jmp
xor
lods
cld
loop
mov
or
adc
adc
outsb
testb
shll
mov
pop
shrb
jp
jecxz
pop
cmp
adc
in
cmp
mov
incl
int
cli
fisubl
fwait
mov
je
inc
mov
adc
int3
rcll
xor
or
cmpl
dec
scas
mov
adc
iret
push
fisttps
mov
sub
jne
xor
sub
xchg
add
lcall
ljmp
cmp
dec
dec
push
cmp
xchg
push
ljmp
jbe
adc
ss
dec
lahf
sub
add
mov
push
pop
adc
adc
and
push
stos
cmp
outsl
adc
js
xor
xchg
adc
je
mov
pop
pop
leave
inc
lds
mov
out
xor
push
xor
cs
sub
bound
scas
into
out
xor
in
cmp
aas
jnp
popf
dec
lods
adc
mov
jg
push
out
movsl
sbb
hlt
out
or
fwait
push
mov
fstps
jp
sub
lods
xor
jnp
lahf
pop
or
adc
popf
sbb
cmc
push
push
in
sub
and
jae
loopne
push
imul
aas
mov
fmuls
mov
mov
pop
test
jge
sub
push
cmp
dec
int
cs
mov
jp
shll
cmp
lods
dec
mov
aaa
rclb
int3
push
adc
sub
sub
ret
push
pop
cmp
hlt
add
addl
icebp
ret
sahf
push
cmp
mov
sub
xchg
cmp
pop
icebp
pop
mov
inc
jae
mov
add
mov
jbe
rcrl
addl
lret
or
daa
pop
imul
adcl
push
fisttps
insb
adc
and
int3
les
xor
cmp
imul
or
mov
pop
mov
roll
mov
dec
lret
push
es
or
ja
call
and
sahf
jl
dec
fstpl
mov
rorl
ljmp
mov
sti
or
stos
fcmovnbe
outsl
test
int
dec
mov
mov
inc
fmuls
add
lds
jg
dec
add
cmp
jbe
rorl
inc
sub
dec
jle
jecxz
insl
scas
add
lock
dec
es
les
lret
inc
loop
xorl
push
mov
dec
in
push
jnp
push
xchg
mov
test
mov
inc
adc
cmp
ret
out
aad
ja
je
mov
das
outsl
xor
in
sbbb
and
cmpsl
cmp
sti
xchg
shlb
mov
or
or
int
mov
cwtl
ret
jns
sub
push
cmp
ret
lods
jbe
jbe
loopne
in
xchg
fcmovu
mov
insb
adc
fadd
add
or
js
lret
pop
xchg
movsl
pop
loop
fcmove
icebp
push
call
push
xor
pop
popf
xchg
jbe
out
lret
pop
ud2
inc
xor
xor
adc
insl
mov
jge
cmc
testb
ljmp
out
adc
lret
sbb
rcrb
rol
enter
sar
inc
cltd
mov
inc
imul
xorl
cmp
sbb
lcall
jno
push
lods
loopne
and
lcall
jne
stc
aaa
loop
lcall
add
dec
das
mov
sahf
pop
subb
sbb
cmp
sub
lahf
loope
stc
sub
xchg
sub
push
gs
sub
mov
jmp
push
adc
flds
nop
push
iret
xor
add
jg
add
flds
js
or
or
pop
das
cli
add
nop
mov
dec
jle
ja
push
mov
xor
cmp
sbb
push
sub
mov
push
mov
into
jle
cli
hlt
push
scas
nop
addl
mov
dec
icebp
int3
adc
stc
loope
dec
jge
cmp
packssdw
mov
xor
fcomps
movl
mov
int
pop
sti
mov
rolb
clc
xchg
push
cltd
int3
xor
ss
xchg
lods
xchg
pop
into
mov
mov
sub
dec
mov
push
mov
dec
cmp
ja
mov
enter
mov
cs
or
ss
dec
jmp
mov
fadds
bound
stos
leave
adc
cmc
incl
je
sbb
push
push
cmc
and
jbe
xor
push
xchg
mov
cmp
push
sbb
into
sti
adc
xchg
push
fsubrl
inc
outsl
push
cs
push
outsl
in
jg
mov
test
xchg
std
and
loope
jmp
sbb
ret
push
push
xor
stc
or
mov
lcall
cmpsl
mov
sti
mov
idivl
cmc
jnp
stos
mov
bound
mov
cmp
outsl
loop
jo
push
lret
push
inc
sub
inc
jnp
mov
outsb
aam
pop
push
mov
pop
jo
mov
mov
adc
addl
loopne
push
imul
in
dec
xchg
inc
adc
adc
pop
mov
icebp
jnp
pop
or
xchg
inc
mov
je
cmpsl
dec
jl
or
js
hlt
sub
jmp
jg
daa
and
dec
lcall
rol
sub
jb
dec
sarl
inc
insl
into
mov
jns
pop
inc
lds
jbe
loopne
fwait
xor
jge
mov
pop
add
insb
lret
aas
adc
cld
std
sti
out
es
xchg
fwait
pop
sub
inc
cmp
mov
add
pop
xchg
mov
xor
jae
outsl
mov
movsl
out
dec
lock
sub
out
jl
mov
fbstp
push
lds
iret
sbb
test
mov
outsl
sub
minps
or
cmp
cld
push
jae
loop
add
mov
mov
mov
mov
push
xor
and
push
or
push
adc
mov
cmp
jae
jns
pop
test
test
xor
mov
jb
sbb
stc
imul
dec
cmpsl
iret
fstpt
dec
pop
sbb
add
arpl
sub
mov
mov
aaa
ds
in
push
push
mov
xor
pop
and
in
ret
std
bound
outsb
adc
imul
xchg
int
std
xchg
mov
push
dec
ret
inc
add
fistl
clc
sbb
push
outsl
lods
add
mov
enter
stc
adc
mov
push
or
nop
xor
lahf
sbb
ret
aas
and
out
adc
push
cmp
fnstenv
pusha
cmc
push
dec
mov
push
adc
lea
add
call
imul
insl
mov
shrl
stos
mov
das
stos
adc
cmp
or
ss
movsb
popf
rclb
add
sub
mov
cmp
das
xchg
xchg
add
and
xchg
jmp
xchg
mov
add
int3
push
sbb
xor
lahf
lahf
dec
dec
mov
sub
mov
test
xchg
insl
pop
jns
pop
movsb
inc
xor
lret
jbe
mov
dec
js
xorl
icebp
cmp
xchg
out
pop
addl
pop
in
std
adc
dec
ljmp
cmp
movsb
imul
enter
fmulp
mov
loope
outsl
and
inc
dec
push
push
mov
imul
mov
imul
es
stc
jae
mov
mov
cmpsb
fnstcw
add
or
negb
xor
ret
pop
adc
out
jns
hlt
sub
repz
jnp
fwait
mov
out
shlb
sbbl
arpl
mov
push
mov
push
push
lret
pop
cli
add
fidivrs
xor
xchg
or
ret
sbb
push
mov
push
add
dec
ret
mov
sub
fcomip
cld
mov
hlt
inc
adc
mov
adc
insb
aas
sub
pop
scas
imul
or
popf
scas
pop
pusha
mov
adc
mov
rcll
sbb
pop
add
cli
fisubs
rcrl
stc
or
push
push
mov
movsl
mov
lret
pushf
jno
loope
cmpl
in
out
dec
or
lret
out
mov
nop
jecxz
imull
out
gs
int
mov
push
das
adcl
cmp
insl
inc
je
adcl
jnp
inc
cld
pushf
lds
mov
cwtl
xchg
scas
push
adc
mov
mov
out
mov
ss
out
fstpt
xor
ljmp
xchg
or
or
in
jb
fwait
mov
arpl
in
adc
int3
jp
mov
hlt
ss
or
std
xor
sub
jle
insl
push
xchg
popa
adc
add
stc
push
sub
jecxz
jecxz
stos
stc
es
lcall
add
cs
sbb
sub
hlt
mov
or
rorl
dec
cmc
add
jmp
dec
sti
enter
imul
les
pusha
iret
testb
mov
push
adc
das
je
xchg
lds
cmp
test
pop
push
xor
pop
inc
and
xor
rcrb
or
mov
push
rcrb
cwtl
lcall
pop
and
outsl
and
sar
aam
jb
popf
cmp
mov
mov
and
imul
push
jle
sahf
fsubs
dec
cmc
popf
jmp
pop
dec
adc
and
pop
jl
cmp
ret
push
inc
xor
cltd
sti
add
daa
cmc
mov
loope
call
pusha
xor
cmc
pop
jge
add
lcall
jg
mov
sub
xchg
inc
in
stos
fstpl
dec
pop
fsubr
popa
clc
ja
mov
cmpsl
dec
dec
fistpll
adc
sub
insl
cmp
inc
adc
push
loopne
pusha
scas
mov
and
xchg
into
add
subb
inc
and
push
adcl
ss
pop
cmp
insb
push
rcpps
push
popf
outsb
jbe
xchg
in
mov
les
test
cwtl
or
dec
icebp
stos
sbb
imul
or
idivb
push
lds
shrl
jg
pusha
scas
ret
push
cmc
and
mov
or
and
push
repz
rcrb
cmp
fwait
ss
xchg
sarb
adc
sbb
fs
jns
push
mov
adc
pop
push
xchg
fmull
xor
flds
xor
xor
test
push
and
add
mov
and
dec
fdiv
mov
imul
jl
aas
or
cmc
xor
inc
in
fs
cltd
stos
adc
inc
jns
lret
mov
ret
mov
pushf
adc
pusha
pop
xor
and
inc
ret
pop
ret
cli
cmp
or
ljmp
test
jne
cmp
xor
jo,pt
xor
es
add
xlat
xchg
arpl
cmp
sub
fstl
outsb
jge
and
sub
cmp
repz
lock
mov
idivb
cmpsb
ret
dec
lds
mov
inc
push
dec
mov
jnp
into
or
daa
xchg
ret
sbb
inc
inc
mov
dec
inc
lahf
bound
loopne
into
push
xchg
mov
lret
lcall
and
mov
test
xchg
fwait
pop
lock
idivl
flds
rcrb
xor
idivl
out
pop
gs
in
loop
dec
mov
pop
sbb
insl
cwtl
ljmp
push
dec
mov
inc
in
movsb
push
cs
xlat
sti
mov
scas
out
testl
hlt
test
test
fsub
incb
adc
lcall
add
jge
sub
mov
adc
and
sub
popf
mov
cmp
mov
lea
pop
aad
cmpsl
into
sbb
test
inc
fldenv
push
imul
push
ljmp
mov
adc
mov
mov
dec
mov
pop
daa
pop
arpl
and
pop
xchg
and
mov
jecxz
popa
or
test
mov
sub
stc
sub
loop
icebp
push
jecxz
jecxz
mov
jo
cwtl
sub
test
cmp
or
pop
cmp
into
in
cli
adc
cmp
or
pop
cmp
mov
xchg
enter
sti
adc
shr
pop
outsb
mov
scas
push
jns
movsl
pop
stos
jnp
fs
mov
pop
sub
pop
mov
jae
std
cmpsl
xchg
cwtl
hlt
mov
sub
inc
orl
outsb
sti
pop
dec
in
sub
cmc
mov
pop
int3
sub
mov
inc
sti
push
lods
inc
xor
fwait
lds
mov
in
lret
fimuls
xchg
or
or
out
add
mov
sahf
repz
aaa
movsl
cmp
sti
xchg
movsl
sahf
adc
pushf
leave
pop
loop
mov
fiaddl
or
adc
dec
mov
sbb
lcall
inc
mov
xor
sub
aad
das
jns
jbe
or
push
jecxz
adc
jg
or
int3
push
pop
es
jg
inc
pop
into
sub
sar
jns
jns
sub
faddl
sbb
loop
loope
sub
cmpsb
movsl
outsl
test
cltd
jns
les
cmc
mov
daa
rorl
bound
push
pop
aaa
leave
cmpb
push
xor
mov
xchg
pop
xchg
mov
out
or
movsl
sub
in
or
call
push
pop
push
sbb
sbb
out
imul
xchg
cwtl
leave
lcall
jecxz
or
mov
dec
xchg
jle
or
out
push
in
lods
sub
inc
lcall
insl
lahf
add
mov
pop
ficompl
xor
push
fildl
inc
and
icebp
in
mov
xor
repnz
or
xchg
jecxz
jle
add
adc
lahf
inc
lods
sbb
jmp
cmp
xchg
movb
call
mov
loopne
push
xorl
cltd
test
outsl
and
mov
inc
sbb
int
dec
ljmp
jne
sbb
test
and
mov
mov
mov
jno
and
fldcw
arpl
or
loopne
cltd
leave
lcall
mov
js
or
dec
add
mov
into
dec
insl
fiaddl
push
loope
mov
mov
std
mov
lock
dec
or
and
inc
call
dec
loop
dec
cmp
out
or
loop
sti
enter
or
pushf
loop
push
dec
and
xchg
pop
out
jmp
dec
sbb
shl
hlt
ret
push
push
sti
dec
xor
mov
enter
mov
push
add
xor
push
push
push
in
shrb
mov
sahf
push
mov
cs
lods
inc
les
jnp
lods
xor
push
mov
fildl
movl
mov
sub
and
sbb
pop
sbb
jg
pop
scas
push
adc
and
pop
xor
xor
push
hlt
addr16
das
mov
addr16
push
add
std
xor
inc
mov
mov
xor
lods
nop
push
add
loopne
stc
jae
in
xor
mov
sub
out
subl
or
cmp
mov
cmp
fs
mov
mov
loop
fsubs
pcmpeqw
xchg
sbb
xor
push
leave
pusha
sti
jnp
pop
jg
dec
mov
shlb
inc
in
es
ss
shlb
mov
loop
sub
test
mov
shlb
or
mov
mov
jl
jbe
pop
pop
adc
push
add
icebp
fldt
push
mov
mov
sub
out
imul
mov
int
mov
in
sahf
rcll
ret
leave
cli
push
mov
shr
jl
add
insl
jo
fldt
xor
mov
rcrl
mov
cltd
aam
mov
push
rclb
dec
xchg
sbb
ret
adc
pop
jecxz
scas
xchg
mov
loope
in
mov
rcrb
cmpsb
mov
dec
xlat
clc
xor
mov
cmp
adc
adc
gs
aad
ficompl
mov
pusha
cmp
cmp
push
push
mov
push
sar
out
adc
invd
fsubrl
xchg
fisttpll
gs
push
jo
lea
outsl
and
int
arpl
adc
out
iret
jae
sbb
push
pop
xor
clc
dec
pop
subb
jne
pop
and
jnp
cwtl
add
xchg
mov
sbb
popl
mov
roll
mov
cs
push
mov
fimuls
inc
mov
imul
int3
es
popf
movsl
mov
mov
sbb
mov
or
push
or
test
in
ljmp
cli
cmp
inc
jp
xor
imulb
xchg
roll
out
or
xchg
fwait
jmp
dec
popa
fs
push
push
push
shrb
or
cltd
repz
stos
pop
test
xchg
push
pop
cmpsl
call
inc
cmpsl
lahf
pop
pop
and
jno
mov
hlt
and
test
inc
movsl
mov
and
adcb
pop
data16
icebp
aaa
mov
add
lret
out
xor
shl
cmp
pop
mov
ret
out
jae
mov
repz
xchg
jg
dec
mov
xor
xchg
rcrl
outsl
gs
adc
xchg
xor
rcrb
jo
or
inc
shll
push
add
outsb
mov
nop
xor
iret
in
lods
rorb
imul
dec
mov
or
jno
mov
cmpsb
push
cmc
hlt
lcall
or
dec
lret
test
and
cmpsl
jecxz
sahf
xchg
adc
das
pusha
mov
fdivs
ss
stos
dec
ret
mov
cli
out
dec
pop
xor
dec
lods
or
out
insb
xor
pop
inc
pusha
cmp
iret
mov
xchg
ret
sbbl
sar
sub
movsl
sub
mov
mov
jne
mov
inc
mov
call
sti
mov
ret
ljmp
push
xor
pop
mov
push
push
sub
xor
pop
out
cltd
jbe
mov
nop
ja
bound
out
or
ss
in
insb
xchg
rcll
into
mov
dec
mov
outsl
xor
mov
shlb
pusha
xchg
fdivs
xchg
repnz
fmul
imul
stos
sub
mov
faddp
dec
imul
xor
testb
or
pop
jns
mov
xchg
jnp
dec
mov
lds
or
sbb
jbe
fld1
sub
das
das
fsubl
roll
adcl
popa
mov
fisubl
or
jb
add
jge
lret
or
ret
jno
or
and
ljmp
mov
je
dec
mov
pushf
popa
push
cmp
jl
mov
mov
mov
inc
dec
insb
sbb
mov
mov
shr
pop
mov
cwtl
loopne
xchg
pusha
ds
dec
loope
adc
jnp
sahf
nop
xchg
and
inc
pop
push
or
pop
dec
mov
fistpll
ret
lods
inc
xchg
push
sub
imul
cmp
inc
imul
inc
add
jle
cmpsl
adc
add
orb
fcoms
outsl
or
cmc
or
jecxz
mov
enter
decb
inc
xor
ret
lret
mov
stc
sub
sahf
int
pop
inc
dec
push
cmp
int
inc
adc
sbb
cli
xor
fwait
sti
sti
add
xor
xchg
outsl
sar
fs
cmpsl
cmc
cli
xor
sub
inc
cmpsl
or
sub
lods
ljmp
xchg
mov
out
bound
jne
or
inc
in
pop
dec
stos
jg
scas
aas
dec
or
mov
imul
out
jl
test
aas
lret
push
inc
nop
adc
addr16
addr16
or
sub
jnp
push
sub
lahf
aas
mov
push
or
dec
pop
mov
jmp
pusha
es
mov
imul
sbb
xchg
sbb
jae
pusha
not
sub
popf
imul
ret
cld
sub
mov
push
int
sub
clc
sub
cmc
xor
jp
dec
sahf
mov
fbstp
inc
xor
out
rclb
inc
roll
ljmp
lods
mov
xor
int3
ss
push
mov
sbb
imul
mov
in
ret
xlat
or
cmpsb
jecxz
les
aad
pop
mov
pop
addl
aam
and
cs
sarl
sub
pop
arpl
jge
bound
mov
jne
mov
mov
mov
inc
and
push
dec
lea
cmpsl
mov
ret
lds
jne
loopne
mov
adc
xchg
test
mov
addr16
xchg
fmulp
cmp
jecxz
push
aad
jmp
jns
inc
dec
and
filds
insl
mov
pop
data16
inc
mov
in
xor
push
stos
jmp
pusha
push
jmp
inc
jno
or
dec
jns
xlat
dec
call
pop
cmpsl
dec
dec
mov
mov
dec
ret
mov
or
fs
push
adc
clc
test
dec
aam
pop
mov
sbb
iret
idivl
xor
add
es
mov
pop
sbb
jns
ficomps
or
xchg
out
bound
jmp
cmc
gs
adc
push
fxch
adcl
ss
dec
mov
jo
sbb
dec
cmp
push
mov
add
push
inc
sbb
les
jae
out
pusha
nop
hlt
jbe
stos
pop
movsl
lea
arpl
loop
push
mov
loopne
cmp
test
sti
mov
out
xor
push
cmp
fnsave
push
adcb
and
jle
sbb
aad
addr16
mov
or
ss
aaa
cld
sub
cmpsl
loope
pop
out
or
iret
sub
addr16
add
inc
pop
lea
jnp
add
pop
mov
les
dec
stc
rorb
jl
sbb
mov
add
sbb
mov
test
xchg
sti
adc
iret
popa
pop
push
and
adc
adc
cmc
lds
jbe
repnz
cmp
adc
mov
aam
lea
add
loope
or
inc
xchg
mov
pusha
call
shl
mov
leave
fsubs
std
mov
shrb
jo
and
mov
ret
ret
scas
push
call
mov
std
enter
jle
xor
sbb
outsb
das
or
sbb
adc
mov
push
mov
call
pop
insl
sbb
cmpsl
sub
mov
jmp
loop
mov
sti
xchg
add
cs
adc
and
push
mov
lret
mov
cmovae
cmc
nop
adc
dec
cli
mov
dec
out
add
aas
clc
push
sub
or
mov
dec
fistps
pop
ja
inc
iret
ja
pop
lahf
cmpsl
lret
mov
in
imull
shlb
popa
stos
into
mov
test
mov
sbb
cld
sarb
out
test
sub
xchg
mov
mov
dec
lea
push
adc
dec
jmp
fs
cmc
pop
fstp
clc
and
cmp
fcmove
outsb
subb
or
mov
ds
les
dec
sub
outsb
dec
nop
int3
adc
or
add
ret
xchg
push
outsl
fcoml
add
jae
jno
push
and
pop
js
nop
cmpsb
inc
cld
pop
js
ds
inc
sbb
mov
test
cmp
adc
pop
jo
push
dec
add
fxch
cltd
cmp
repz
push
aas
loope
ret
xchg
cs
cltd
fnclex
or
mov
into
jle
xor
shrb
mov
aaa
or
mov
icebp
outsl
lcall
xor
repz
subb
adc
bound
lods
dec
mov
dec
in
adc
xchg
mov
stos
cli
push
dec
mov
mov
test
loop
add
inc
dec
aas
jecxz
lahf
daa
xchg
clc
movsl
push
popf
fidivl
mov
insl
cmp
dec
ds
test
aas
xor
mov
sahf
jbe
xor
inc
ret
pop
push
pop
in
outsl
dec
cmpsl
fisubrs
dec
sti
mov
push
dec
gs
cmp
mov
in
mov
out
int
sahf
push
adc
mov
fucomi
push
out
ret
cltd
mov
add
mov
push
pop
xor
xorl
divps
push
lcall
push
rorl
imul
pop
and
mov
and
push
hlt
call
sub
push
mov
adc
jbe
aad
lahf
mov
pop
pop
mov
loopne
enter
and
jle
fsubrs
cmpsb
fistpl
mov
jbe
leave
movsb
aad
xchg
lods
jge
push
gs
cmp
pop
sub
sub
sbb
dec
jl
arpl
mov
das
popa
jb
adc
xchg
push
out
or
aas
xchg
mov
mov
lods
loopne
sahf
cmc
push
xchg
lcall
fisubs
imul
jle
clc
sub
shll
cmp
movsl
sbb
mov
in
pop
dec
lret
rcr
xor
sahf
add
lds
jle
cwtl
or
xchg
dec
das
fisttpll
xor
adc
jbe
xchg
ret
push
ret
or
leave
fistl
sahf
inc
xor
add
add
xchg
sbb
dec
lcall
add
aam
mov
lds
lret
ss
enter
cwtl
test
jne
stc
pop
mov
outsl
cs
mov
sbb
fwait
or
roll
pop
mov
mov
cmp
mov
cmp
pop
fbld
jb
dec
xchg
jge
jno
ret
xchg
cmp
ret
call
add
outsl
fstl
out
push
lock
adc
add
out
lock
xchg
lock
ret
test
cltd
jp
inc
test
jbe
dec
enter
jmp
hlt
fistpl
gs
pop
sub
cwtl
or
pop
and
sub
push
roll
lods
jecxz
icebp
xchg
sti
loop
xor
push
adc
subl
or
lds
push
add
out
inc
cs
cwtl
fs
dec
cmp
lret
cmp
xlat
pop
cltd
xchg
gs
adc
hlt
jbe
mov
lds
outsb
cltd
add
mov
dec
and
mov
rolb
lret
mov
bound
movsb
repz
dec
lahf
cmp
push
mov
jbe
stos
pusha
movsl
xchg
cmpsb
mov
dec
sbb
scas
inc
adc
sti
mov
outsl
push
lret
sti
xchg
dec
stos
flds
cltd
insb
push
jl
adc
and
mov
arpl
add
and
and
pop
mov
dec
or
fbstp
sub
shll
inc
ret
xor
or
stc
ss
cmc
mov
int3
loop
mov
pop
jbe
or
pop
mov
hlt
gs
or
push
push
insl
push
sbb
jnp
cwtl
out
or
or
dec
inc
mov
mov
dec
nop
or
mulps
inc
add
ljmp
inc
pop
sti
fwait
gs
mov
gs
xor
or
inc
test
clc
add
add
insb
bound
icebp
daa
xor
cmp
lds
aam
inc
pop
xchg
add
mov
jp
and
cmp
pop
sbb
ss
or
out
or
div
cltd
pop
sbb
jne
icebp
loopne
or
cmp
dec
mov
int3
push
mov
and
mov
sbb
ljmp
mov
pop
jb
lret
adc
cs
jne
pop
fidivrs
cmp
lods
scas
xchg
dec
mov
mov
mov
jnp
mov
sub
dec
lret
cmp
cmpsb
mov
mov
jecxz
sti
adc
movsl
and
ret
aam
fincstp
ja
insl
jmp
iret
cmp
mov
hlt
and
aam
popf
repnz
mov
xlat
mov
adc
daa
sbb
fnsave
xchg
cltd
imul
test
dec
mov
sbb
cmc
js
mov
in
cmp
dec
in
mov
sbb
mov
loopne
or
push
lea
xchg
inc
mov
xor
faddp
mov
inc
jge
jae
fcomi
outsl
xor
psllq
bound
pop
addl
out
mull
repz
push
cwtl
pusha
out
std
adc
jae
call
out
add
mov
or
cmp
cltd
mov
jb
rorb
icebp
push
xlat
mov
pop
xchg
enter
inc
cmp
adc
iret
cld
adc
push
test
decl
in
jnp
adc
push
gs
xchg
mov
or
in
mov
add
adc
cld
in
jb
fucomi
jno
xlat
xlat
push
and
adc
jl
pop
scas
int3
add
sti
fwait
jnp
push
sub
mov
dec
test
notl
xchg
dec
or
loope
add
or
xor
mov
lea
cmpl
sub
push
xchg
js
fstl
gs
or
pusha
or
sub
fbld
pusha
and
lds
test
into
outsb
push
mov
pop
or
sub
jle
sub
add
mov
jo
add
cmp
mov
adc
dec
incl
jecxz
or
xchg
mov
xchg
clc
movl
mov
xchg
push
std
jnp
and
adc
or
test
adc
inc
cld
push
test
mov
adc
insl
dec
repz
fcmove
and
cwtl
popf
sub
pop
xchg
xchg
dec
sbb
or
das
int
adc
repz
mov
dec
mov
mov
dec
adc
dec
bound
and
pop
hlt
xchg
xchg
bswap
stos
jnp
inc
lcall
in
cs
cmp
add
inc
fldcw
adc
mov
call
mov
adc
outsb
inc
inc
dec
inc
fistpl
xor
aam
jecxz
popf
push
push
stos
mov
shrl
jbe
or
xchg
inc
adc
cmp
push
sbbl
lods
jmp
adc
loopne
hlt
adc
or
scas
dec
or
es
add
xor
ja
mov
add
int3
mov
test
mov
jmp
mov
jge
ss
pop
dec
pusha
sbb
xchg
bound
es
adc
pushf
push
jmp
mov
mov
in
sub
mov
cwtl
fisubrl
xor
clc
lds
ljmp
pop
mov
mov
sahf
and
repz
das
sub
or
fldl
hlt
ljmp
inc
dec
fcmovbe
mov
xchg
sbb
inc
aaa
xor
loopne
adc
loope
jge
jmp
imul
or
and
je
mov
pusha
sti
mov
cltd
test
or
in
out
outsl
jmp
mov
mov
fcmovnbe
push
ja
inc
mov
stos
popw
dec
and
rep
mov
jecxz
pushf
popf
mov
xchg
repz
sbb
imul
nop
cmp
aas
push
and
test
jae
lock
sub
push
pop
insb
push
adc
cwtl
loop
jbe
andb
cmpsb
das
mov
inc
mov
dec
adc
fistl
mov
insb
dec
cwtl
xor
decb
xor
inc
sahf
enter
fndisi(8087
adc
cmp
xchg
enter
xor
loopne
mov
imul
dec
les
hlt
aam
pop
adc
cmc
inc
mov
push
popa
cs
subl
push
rcll
jl
lcall
ljmp
cmpsb
ljmp
cmp
fmulp
mov
scas
push
xor
xchg
aad
test
aaa
imul
sbb
sbb
mov
lock
mov
pop
hlt
xchg
push
adc
cmp
mov
xchg
in
mov
add
mov
push
std
loopne
xchg
and
clc
sbb
push
or
mov
enter
repz
insb
sahf
cmp
mov
movsl
or
jns
mov
clc
or
out
sbb
mov
ljmp
cmp
xor
and
jle
stos
adc
mov
popa
mov
pop
or
inc
pushf
or
jne
and
movsl
sti
add
loopne
pop
lods
add
lds
push
or
jge
or
jp
je
mov
xchg
fisubrs
ret
out
inc
stc
imul
fcmovb
pop
sub
sbb
mov
outsl
ret
in
cmp
cmpsl
fstpl
ret
dec
shl
cmp
sub
aaa
cmp
jne
rorl
mov
hlt
inc
mov
lds
mov
cmp
mov
fbld
adc
stc
cli
and
js
push
jns
or
sub
mov
push
jp
xor
mov
iret
xlat
loopne
dec
xor
adc
push
ret
gs
out
xor
cmp
sarb
jo
iret
or
mov
dec
inc
mov
outsb
xchg
and
mov
xchg
xorl
jb
fists
jae
loopne
ss
xlat
push
mov
repnz
mov
dec
push
xchg
xchg
or
xchg
out
mov
aaa
dec
inc
inc
std
lea
movsl
push
cmp
pop
inc
sbb
mov
ds
sahf
mov
inc
bound
cmpsl
inc
mov
imul
ficompl
movsl
xchg
lcall
pop
in
jg
add
xor
jg
jle
loop
adc
xor
shll
arpl
xchg
mov
adc
sbb
pop
mov
xor
iret
scas
jnp
out
imul
jecxz
push
lods
jg
filds
pop
cmp
dec
xchg
in
out
iret
ss
pop
inc
loope
push
push
push
je
pop
std
pop
cltd
div
je
add
sub
add
outsl
loopne
rcll
mov
fwait
clc
xor
addl
xchg
les
ss
push
mov
or
xchg
xor
mov
jb
decb
or
jecxz
push
es
dec
dec
repnz
xlat
pushf
pop
add
ret
pop
arpl
in
je
fimuls
dec
ja
inc
sub
mov
out
jne
enter
inc
sub
push
out
jnp
xor
pusha
jo
adc
pop
adc
popf
sti
bound
arpl
mov
repz
cmp
adc
cltd
and
pop
adc
clc
mov
inc
mov
cmp
sahf
push
push
mov
inc
inc
in
leave
cld
dec
imul
xchg
scas
adc
push
jle
cmp
mov
outsb
xchg
sub
loope
repz
inc
adc
cmp
xchg
inc
mov
push
in
inc
inc
in
in
lds
sbb
or
and
clc
dec
cli
icebp
pop
test
fwait
mov
pop
mov
push
cmp
imul
lcall
xchg
xchg
mov
adc
dec
inc
pop
cmp
outsl
outsl
sub
cs
and
xor
loop
add
aas
add
sarl
test
out
cs
rol
xchg
cmpsb
in
dec
lahf
repnz
hlt
mov
in
mov
sub
jne
adc
sub
lcall
jle
lahf
and
sbb
push
xor
in
aas
gs
outsl
add
push
mov
sbb
repnz
icebp
dec
xor
addr16
or
cltd
test
dec
gs
rcl
fyl2x
push
cmp
gs
pop
icebp
mov
ldmxcsr
insl
or
push
mov
fs
push
mov
in
sub
cli
shrl
xchg
pop
add
jno
adc
ja
mov
lea
scas
push
adc
xor
cmp
or
lahf
dec
orb
stc
mov
jno
mov
inc
mov
add
pop
ret
in
aas
sbb
pop
movsb
inc
outsl
scas
inc
mov
outsb
ficoml
adc
iret
or
push
add
out
mov
push
flds
mov
jbe
cmc
stc
mov
jbe
mov
inc
sbb
push
pop
push
and
daa
dec
popa
cld
inc
shrl
lahf
jb
mov
imul
shlb
push
sbb
jp
mov
pop
ds
decl
fldcw
imul
adc
sarb
jle
sub
dec
sahf
out
ret
addr16
jmp
push
push
ret
call
stos
cmp
mov
adc
lahf
dec
inc
jae
dec
adc
push
cmp
xchg
or
mov
pushf
mov
notl
mov
fstpl
fmull
sbb
mov
lcall
inc
sbb
adc
jnp
pop
int3
adc
imul
mull
lahf
lret
adc
sub
xor
ds
out
push
xchg
fidivrs
jns
imul
insl
jg
popa
xchg
xchg
and
sarb
mov
or
push
xchg
sub
and
dec
cmc
jb
xor
cmp
cmc
bound
scas
jnp
mov
imul
rclb
stc
lret
mov
fwait
mov
arpl
dec
imul
les
xor
jge
int
cmp
lea
scas
loopne
sar
xchg
mov
adc
frstor
loop
out
xchg
push
sub
insl
insl
pop
mov
lret
inc
jb
ret
in
rol
add
sbb
ficompl
inc
leave
mov
and
bound
out
inc
adc
mov
mov
cmp
negb
xchg
adc
lock
pop
scas
mov
dec
jecxz
daa
mov
out
mov
dec
push
lcall
loope
fadds
cmc
push
mov
push
sub
in
fwait
inc
jmp
rcr
call
sti
scas
jne
sbb
pusha
and
dec
sub
xchg
cwtl
mov
jbe
mov
imul
pusha
adc
or
lret
stc
imulb
lcall
cmpsl
jbe
addb
xlat
adcb
inc
mov
pop
adc
adc
inc
adc
mov
xor
dec
push
or
jecxz
mul
mov
movsl
jg
fisubs
pop
ds
push
push
inc
cld
cmp
mov
inc
jl
push
or
es
pop
push
orl
jne
shlb
mov
xor
stc
push
jns
js
or
mov
add
lea
xchg
mov
ret
pusha
nop
lret
push
mov
jno
loop
insb
pop
jo
jl
in
jge
out
cmp
cwtl
imul
add
ljmp
pop
xor
jne
imul
rcrb
pusha
dec
rol
and
pop
pop
pop
add
cmp
shrb
mov
dec
js
jp
mov
pop
negb
shrl
adc
xor
rol
repnz
push
and
mov
dec
cmc
fistpll
test
fcompl
xchg
add
xchg
fidivrs
dec
clc
roll
jbe
cltd
adc
popf
fildll
mov
sti
hlt
aas
add
dec
inc
fbstp
mov
stos
fsubrl
pop
adc
and
and
stos
dec
or
imul
mov
xchg
push
cmp
push
xchg
adc
pop
push
test
pop
popa
mov
adc
repnz
bound
xchg
lretw
aad
bound
push
ret
loopne
popf
xlat
xor
xor
jne
and
xlat
cltd
popa
hlt
insl
addb
and
pop
pop
xchg
mov
lods
push
popf
int
out
arpl
xlat
rclb
inc
dec
jno
and
imul
inc
mov
lahf
sub
push
add
or
inc
ret
call
scas
pop
sub
loopne
mov
cmp
mov
sbb
or
jae,pn
je
push
xor
and
int3
cmp
push
stc
ret
dec
lds
sub
sbb
mov
stos
lret
aas
jle
jmp
das
jp
mov
and
popa
pop
push
scas
add
jns
repz
sti
add
inc
jecxz
sbb
mov
test
fwait
push
subl
inc
xorl
sub
int3
and
test
repnz
aaa
cli
out
bound
push
or
nop
xchg
cmp
pop
cltd
setbe
adc
cmpsl
xchg
fsubrl
hlt
outsl
es
fildl
xchg
test
outsb
aam
ffreep
inc
xchg
ror
or
loop
shr
lret
push
jg
clc
mov
imul
loopne
arpl
or
jo
adc
cltd
cltd
lahf
mov
and
stc
das
add
push
push
add
out
xor
pushf
sub
inc
stc
mov
sub
shlb
push
xor
jge
sub
xchg
das
pop
xchg
pop
fsubrs
daa
loopne
in
cmpsl
xlat
shl
imul
add
xor
loopne
add
pusha
pop
movsl
push
subl
sub
xchg
push
xchg
mov
mov
hlt
jne
divl
jmp
cmpsl
mov
mov
out
jne
ss
mov
mov
ret
pop
cmp
mov
adc
add
jl,pt
loop
outsl
cmc
jecxz
sub
loop
outsl
sbb
xchg
xlat
das
xor
arpl
adc
mov
shlb
and
in
inc
push
or
ret
test
mov
jo
cli
cmp
push
mov
outsl
mov
mov
lds
mov
negl
ss
lods
xchg
adc
sbb
mov
add
cmp
jb
xor
ljmp
sub
jno
lea
xor
mov
movsl
push
jl
inc
push
mov
fidivs
jg
jne
cwtl
pop
js
cmpsl
adc
fwait
xchg
shrl
leave
mov
jle
ret
bound
arpl
movsb
lret
xchg
cwtl
push
out
imul
scas
stos
lock
jecxz
outsb
std
aas
pop
cmp
pop
and
lods
push
adc
inc
xor
dec
push
mov
xchg
dec
cmc
mov
adc
inc
mov
jb
fsts
push
dec
push
aaa
or
mov
and
sub
mov
nop
push
popf
outsl
dec
pop
std
dec
sbb
sbb
mov
or
sub
outsb
xchg
rol
leave
loopne
add
into
xor
test
ljmp
sub
test
repz
pop
cltd
adc
sbb
and
imul
fimull
jnp
mov
push
jg
shll
adcl
add
xor
cs
les
jns
jmp
scas
jbe
test
push
push
nop
cld
fldenv
mov
push
sbb
push
mov
xchg
sbb
mov
jnp
mov
xorb
movsl
repz
mov
push
fistps
jl
pop
lret
xor
sahf
cmp
lods
jle
cmp
adc
push
xchg
mov
sbb
cmpsl
cmpsl
or
cwtl
data16
or
pusha
pop
out
movsl
fildll
pop
mov
mov
jb
sub
mov
push
insb
fwait
popa
mov
pop
int
cmp
fcompp
sub
into
es
add
out
mov
push
popf
fildl
popa
addb
cmpsl
fnstcw
call
int3
inc
add
mov
test
or
ja
inc
xchg
mov
out
jae
dec
les
xchg
mov
push
adc
cwtl
pop
pop
xor
and
scas
cs
out
shrb
jb
cld
mov
ret
outsl
pop
nop
inc
push
xorl
mov
cs
cli
flds
insl
gs
jo
fwait
adc
repz
dec
fstps
cli
pop
pop
stos
sbb
push
mov
lret
and
or
jo
out
pop
sub
sub
push
sub
jmp
add
rcr
pop
pop
outsl
mov
jecxz
lcall
loop
cltd
adc
scas
outsl
dec
mov
lret
movsl
inc
sarl
fwait
bound
fstpt
and
mov
sbb
cmp
xor
dec
test
mov
sub
push
mov
lds
push
xchg
dec
push
out
or
jae
push
inc
push
mov
xor
stos
ret
addb
xchg
sub
mov
xor
faddl
hlt
rcr
scas
sub
mov
dec
test
push
dec
pop
mov
adc
mov
das
dec
adc
cmp
scas
adcb
cmp
mov
mov
lock
fsts
pop
faddp
ja
pushf
mov
push
fucomip
pop
adc
pusha
sub
push
jae
out
jecxz
push
or
jne
cmpsl
cmp
test
in
imul
jmp
jns
xchg
aas
fwait
ret
enter
fsubrp
popa
loop
aas
mov
xor
int
data16
mov
push
adc
lods
sbb
jbe
imul
sbb
xor
or
dec
sub
xchg
dec
push
mov
outsb
loop
ds
in
ja
xor
imul
movsl
mov
das
repnz
in
fidivrl
data16
xchg
sar
adcl
jne
push
mov
pop
jle
mov
rclb
dec
pusha
push
scas
leave
mov
add
fldcw
int
outsl
adc
mov
mov
int
xchg
xchg
aad
in
popf
fmul
mov
pop
jg
shll
mov
cmp
adc
cli
push
sub
adc
mov
rcrb
sbb
add
and
xchg
mov
mov
imul
xor
in
pop
push
mov
jb
or
lcall
mov
cli
xchg
mov
or
js
mov
and
ja
dec
ret
xor
push
mov
mov
outsl
in
lds
jns
jl
ss
mov
jmp
pop
mov
fwait
inc
xchg
jmp
fwait
dec
fists
fldt
dec
jae
sbb
mov
and
je
dec
pusha
fistpl
je
and
int
jne
mov
xchg
push
pop
dec
cmc
leave
jle
mov
lds
pop
sub
push
and
ret
vmovlpd
push
dec
and
pop
xor
and
cmpsl
gs
push
ds
or
in
sub
lret
lds
sbb
ljmp
arpl
cmp
mov
mov
dec
cmpsl
push
lahf
cmpsb
push
rcrb
xchg
mov
jle
cmpsb
mov
add
movl
int
iret
stos
sbb
jb
push
fxch
xor
cli
mov
push
and
mov
cmp
lret
fnsave
push
cmp
test
mov
pop
and
repz
cmp
fimuls
push
into
lds
cmp
push
jmp
in
mov
jo
adc
cmp
out
scas
rcrl
or
adc
and
insb
in
in
pop
inc
push
lods
popf
inc
xchg
pop
std
or
jae
imul
dec
fisttpl
mov
shl
xchg
xor
xchg
add
and
cmp
jnp,pn
out
jl
outsl
push
popa
lret
js
fcomp
outsl
cltd
fnsave
cmp
lods
lret
sahf
loop
sbb
pop
jle
sbb
lock
mov
mov
decb
dec
mov
data16
add
cmc
mov
or
mov
jmp
push
or
outsl
daa
xchg
enter
clc
and
mov
jp
ret
in
ficoms
inc
xchg
jns
cmp
mov
loope
out
sub
jo
push
adc
xchg
notb
out
outsl
mov
inc
jae
out
xlat
push
inc
sbb
mov
je
adc
ss
pop
xchg
mov
jg
negb
push
dec
mov
repz
out
imul
adc
dec
push
ret
mov
mov
push
dec
lods
jle
int3
push
add
rcrb
out
xor
jge
aad
inc
mov
enter
lret
fsubrl
add
dec
clc
rolb
mov
into
sbb
ja
mov
xchg
loop
jns
inc
arpl
lea
iret
icebp
test
and
and
fists
adc
clc
sub
cld
ja
roll
imul
add
imul
jo
mov
jne
push
mov
adc
adc
xor
insl
ja
fsubs
cwtl
adc
pushf
cmp
loopne
mov
dec
jb
cld
mov
sbb
cli
aaa
jae
xorl
int
sub
mov
pop
mov
in
icebp
lahf
jbe
andb
inc
mov
lcall
aaa
mov
ja
dec
int
push
cmpsl
cmp
or
sub
aad
rorl
ret
aaa
sarl
xchg
add
push
add
cli
ja
mov
pop
mov
jbe
pop
shr
pop
lea
mov
int3
dec
xlat
fldcw
mov
push
cmp
test
leave
movsl
jecxz
cmp
mov
dec
inc
sbbb
xchg
dec
xchg
pop
xor
add
mov
xchg
outsl
iret
sarl
push
scas
jge
dec
add
xor
mov
adc
nop
adcb
xlat
in
xchg
roll
call
sbb
popa
call
add
adc
rorl
orl
adc
sets
scas
adc
lods
sub
gs
lret
cmpsl
xchg
cmp
xor
mov
bnd
es
jo
lahf
movsb
imul
ljmp
pop
addr16
ljmp
outsl
mov
mov
and
jb
sub
lds
fwait
int3
sub
dec
sub
sarl
mov
dec
lea
and
jb
fadd
mov
xchg
mov
or
cmp
mov
orb
xchg
pop
dec
inc
mov
out
jne
or
sbbb
pop
call
sub
shl
daa
lahf
repnz
iret
xchg
lret
mov
push
pop
sub
xor
cmpsb
ret
mov
push
xor
adc
mov
mov
inc
int3
jmp
data16
mov
xchg
xchg
rcrb
jmp
mov
pop
inc
push
jno
aaa
insl
ret
adc
mov
push
jno
cmc
repnz
push
nop
xlat
mov
in
add
cmp
cwtl
sbb
fmulp
aad
loopne
mov
inc
dec
mov
push
fnsave
pmulhw
pop
xor
into
sbb
adc
push
loope
push
fcomps
aas
dec
lods
pushf
fbstp
clc
outsl
jecxz
ret
cwtl
xor
xchg
sbb
stc
arpl
stos
xchg
push
rcrb
dec
jecxz
xchg
sub
jnp
es
sbb
mov
sahf
pop
int3
mov
ja
rep
dec
and
inc
arpl
outsb
or
mov
xor
dec
mov
dec
xlat
shlb
and
loop
or
sub
hlt
stos
push
push
sti
sarl
jno
loope
gs
enter
pop
and
jno
jecxz
push
jne
push
inc
lcall
fildll
push
fs
test
movl
xlat
int
das
mov
push
jge
sbb
enter
push
repnz
mov
inc
test
sbb
jecxz
imul
xchg
mov
or
into
cmp
jecxz
add
cmpb
or
xchg
int
cmp
ret
in
adc
out
bound
mov
push
pop
aas
aad
test
xor
cmp
push
mov
and
push
sti
ljmp
mov
cmp
jecxz
jbe
fildl
lea
imull
lods
cmc
or
in
dec
iret
int3
ds
mov
xchg
push
rcrb
popf
fistpl
xchg
dec
sub
dec
addr16
stc
pop
jecxz
mov
stc
int
inc
nop
push
icebp
out
cmc
adc
xchg
ja
sbb
lret
xor
mov
pop
int
push
pushf
jle
push
or
push
pop
adc
sub
roll
stos
fsub
jb
pop
sbb
jae
add
xchg
add
mov
or
lea
cmpsb
call
add
push
jae
pop
lret
jb
add
cltd
stc
popa
mov
ret
or
adc
dec
lret
ja
mov
pop
das
jl
ljmp
arpl
cmp
ret
jge
in
addl
sti
add
je
cmp
mov
and
xchg
dec
cmp
popa
bound
cltd
mov
add
fmuls
ja
int3
imul
aam
inc
inc
push
cmp
jecxz
outsb
lahf
imul
int
jle
mov
inc
dec
sbb
xor
popa
cmp
loope
mov
sbb
jl
int
repz
adc
outsl
movsb
mov
xchg
jmp
mov
ret
mov
repnz
aam
shlb
jge
les
dec
ljmp
mov
scas
push
xchg
rcl
loopne
jne
add
xchg
cwtl
aaa
jnp
push
stc
add
aam
data16
test
test
add
jl
xor
fistpl
cmp
xchg
add
xchg
je
jnp
mov
fdivs
aas
ret
adc
sbb
mov
rcrl
nop
pusha
lds
mov
fisubl
cmp
iret
mov
mov
loope
into
shl
xor
inc
push
roll
jb
subl
gs
mov
lods
lret
sbb
cli
ret
xor
pop
int3
cmc
mov
xor
push
hlt
dec
aaa
push
dec
add
sub
ljmp
push
bound
inc
ja
push
lahf
popf
icebp
ret
cmpsl
call
adc
fdivr
and
out
arpl
pop
jnp
mov
test
dec
cmp
xorl
fistps
mov
inc
sub
mov
xchg
xor
loope
mov
mov
notb
sub
mov
int3
sub
ss
or
sub
hlt
jl
cld
xchg
push
inc
xchg
pop
mov
add
xlat
push
iret
cmp
jb
mov
inc
pop
mov
push
mov
push
dec
jne
scas
dec
pop
mov
inc
mov
aad
cmp
push
stos
push
insl
ret
int
aaa
add
bound
mov
or
jecxz
loop
in
mov
inc
stos
pop
sbb
xchg
cmpsb
sub
mov
cli
push
push
mov
insb
and
and
mov
adc
dec
popf
mov
iret
sub
pop
adc
test
repz
or
inc
cmp
cmpsl
xorl
jl
mov
mov
jb
rcl
iret
loope
xor
jae
das
cmpsb
pushl
sbb
daa
xor
jae
pop
jo
and
adc
pop
push
repz
xlat
xchg
sahf
lret
mov
mov
cmp
mov
adc
push
mov
pop
daa
call
xchg
clc
rorb
ljmp
in
or
xchg
inc
xchg
inc
push
xor
mov
sbb
sub
push
orl
mov
xchg
hlt
push
cmc
sahf
int
jge
add
add
dec
cli
out
rol
out
dec
cmp
push
xor
shrb
jmp
add
add
and
adc
mov
inc
sub
stos
sub
mov
or
out
mov
fsts
xor
clc
and
add
xchg
cmp
fs
insl
push
mov
sbb
enter
mov
sti
adc
and
xchg
icebp
iret
mov
shll
mov
sub
ret
cltd
mov
push
xor
and
or
mov
mov
pusha
push
aaa
icebp
inc
cltd
enter
aaa
ds
rclb
sub
and
push
jno
inc
outsl
test
fdivs
daa
cmpl
mov
cmpsl
xchg
jle
out
push
or
dec
data16
adc
fisttpl
xchg
cwtl
sub
sub
js
mov
mov
jle
mov
xchg
lea
dec
pop
mov
jb
jg
fwait
cmc
sbb
jno
cmpsl
sub
mov
inc
outsl
ret
sarb
sub
dec
lret
push
mov
subl
inc
push
mov
test
xchg
mov
outsl
repz
cmp
cmp
sub
in
clc
fisubs
mov
lds
push
shlb
adcb
sbb
add
sbbb
add
sbb
or
ret
adc
mov
push
xor
adc
bound
lods
xchg
lock
in
xor
lds
dec
mov
cmp
mov
sub
dec
faddl
mov
sbbb
xchg
jbe
lret
int
sti
push
jmp
sbb
add
idiv
mov
test
xchg
inc
sub
mov
sbb
pop
mov
je
xor
cmpsl
jae
sbb
add
std
adc
jge
pusha
insb
mov
mov
adc
xor
push
into
sbb
xor
pusha
mov
test
xchg
lea
jl
popf
mov
pop
ror
cmp
mov
scas
sub
rcll
mov
dec
push
sbb
jp
insb
mov
push
jno
fcomps
push
loopne
imul
jnp
mov
int
sub
mov
mov
push
sub
mov
dec
pop
imul
pop
adc
cmpsl
lahf
fwait
mov
push
imul
mov
fs
fcoml
in
or
sbb
cmp
imul
jae
in
mov
roll
pushf
fildl
out
sbbl
pop
push
fwait
pop
pop
ret
inc
aas
fsubrs
inc
icebp
push
clc
jecxz
adc
jle
adcl
bound
test
call
stos
lods
cltd
mov
sub
hlt
into
dec
das
cltd
test
sbb
mov
rcll
shll
aaa
icebp
dec
pop
adc
inc
int
imul
mov
movsl
push
inc
loop
cltd
jns
cltd
dec
push
adc
dec
xor
shlb
ss
movsb
push
mov
xor
jnp
shlb
hlt
wrmsr
pop
xor
mov
dec
jbe
pop
push
loopne
cmc
sahf
mov
push
fs
lds
dec
mov
jecxz
outsb
push
pop
jno
lahf
jge
or
sbbb
aam
lret
cwtl
pop
adc
icebp
mov
mov
cltd
inc
pusha
mov
dec
xchg
add
hlt
add
push
rcrb
bound
xor
xchg
dec
push
scas
jmp
pop
dec
dec
xchg
pop
dec
xchg
shrl
xor
mov
inc
gs
jg
xor
xor
leave
sbbb
decb
pop
cmp
arpl
dec
pop
jmp
sub
stos
dec
jb
or
imul
movsb
ja
xchg
xchg
fmulp
stc
idiv
push
mov
dec
addr16
imul
outsl
out
cmp
xor
mov
push
je
cmpsl
das
in
fstp
aas
movsl
or
imul
sbb
lods
push
cs
add
clc
aad
lret
stos
pop
xor
adc
ljmp
add
jg
mov
out
or
cmc
mov
es
push
jp
loopne
sub
jle
ja
std
push
int
xchg
add
mov
repz
mov
es
fisttps
push
cmp
mov
cmp
inc
adc
jmp
push
fcmovnu
and
sub
shlb
add
ret
mov
mov
add
mov
ret
mov
cmpsl
jae
sub
in
cmp
shrb
xchg
mov
dec
ds
ljmpw
push
aad
es
xor
lret
jecxz
adc
sbb
xchg
sbb
jmp
cmp
icebp
and
lret
xor
or
nop
mov
cmp
mov
cmpsb
pop
xchg
je
ljmp
ret
xchg
mov
loopne
jmp
cli
in
pop
and
or
xor
mov
psllq
pop
mov
xor
push
cmp
rcrl
sbb
jae
inc
push
sbb
test
dec
dec
lret
pop
mov
in
mov
cmova
aad
inc
gs
stc
xchg
sti
call
xor
or
mov
cmpsb
es
sbb
mov
xor
mov
mov
xlat
lock
mov
cmc
sub
dec
sub
xchg
push
mov
xchg
les
pop
mov
inc
dec
fucomp
jnp
sti
pop
or
ljmp
dec
mov
sbb
jl
fcmovbe
or
add
enter
fsub
mov
sub
pushf
jge
arpl
push
fisubl
sarl
scas
and
test
or
stc
outsl
inc
fisttps
leave
dec
aas
outsb
pop
clc
mov
xor
loope
movsb
aas
out
ja
rol
in
mov
jae
xchg
push
movsl
push
hlt
int
stos
dec
sbb
inc
mov
sti
sub
mov
lea
jns
outsb
xor
push
cmc
sub
loop
xchg
mov
sub
fbstp
dec
loop
cmp
imul
xlat
shlb
popf
and
push
stc
and
xchg
out
cmp
mov
int
mov
push
jnp
inc
cmp
push
loopne
dec
sbb
jle
popa
lcallw
das
pop
mov
out
repz
push
mov
xlat
jne
out
mov
mov
adc
dec
outsb
jnp
cli
push
cmp
jmp
mov
mov
leave
jns
pop
mov
push
pop
push
daa
add
lret
xchg
movsb
jae
cmpsb
xor
cmp
call
pop
adc
minps
mov
pop
into
movsl
je
push
push
xorb
int
xchg
xchg
call
dec
mov
mov
xchg
xchg
mov
js
and
aad
sub
pop
popa
lret
aad
addr16
cmp
pop
inc
xlat
std
ss
stos
mov
lds
cwtl
mov
ficomps
inc
lds
shll
mov
clc
xor
shl
ret
out
sarb
add
jmp
mov
sub
sbb
loopne
adcl
imul
outsb
jle
enter
ljmp
xchg
cli
imul
roll
mov
jp
cld
or
and
imul
rorl
or
rcr
xor
es
mov
arpl
pop
imul
mov
mov
repnz
mov
mov
ljmp
sub
insb
mov
jg
enter
push
mov
iret
pop
aad
and
and
jge
int
pushf
xorb
roll
jle
mov
pop
xchg
and
cmp
cwtl
dec
sub
xchg
lods
popa
xchg
cmp
js
cld
dec
test
jg
lahf
sub
nop
jecxz
pop
imul
int
mov
jecxz
push
test
cmpsl
fnstenv
jecxz
mov
mov
sub
bound
jl
in
fdivs
les
pop
shr
cmp
rcl
enter
cmovae
mov
jo
jno
outsl
mov
out
lcall
shl
dec
mov
inc
jne
ret
inc
push
aam
dec
call
adc
mov
loopne
inc
push
mov
push
push
cmp
cs
outsl
loopne
xchg
loope
aaa
adcb
pop
mov
outsl
inc
lods
push
mov
mov
in
and
clc
cmpsl
ret
and
jo
xchg
cmp
dec
pop
data16
mov
sbb
mov
add
fcmovbe
aas
out
out
pop
xor
or
and
xor
xor
ljmp
or
fwait
mull
rolb
xchg
add
pop
adc
mov
jbe
or
adc
mov
jl
xchg
xor
or
mov
out
cmp
imul
cltd
mov
mov
jbe
enter
js
xor
adc
cmp
jecxz
pop
scas
out
or
in
cmp
mov
int
mov
mov
insb
scas
js
insl
mov
ja
adc
adc
add
fstl
ret
rorl
add
ffree
add
outsb
cmp
dec
sarb
ficoms
lods
jo
cmp
movsl
sbbb
push
in
mul
inc
add
add
mov
rolb
jl
push
addr16
clc
adc
ret
add
mov
leave
decb
mov
adc
insl
cmpsb
xchg
fbstp
or
cmp
cltd
pusha
pop
imul
push
xchg
xchg
lret
dec
fisttps
pop
in
or
inc
xchg
sbb
cwtl
aaa
sub
inc
add
fistl
and
adc
pop
push
ss
cli
test
test
fisttpl
movsl
jmp
mov
dec
test
outsl
scas
fdiv
jne
sbb
mov
mov
xchg
nop
xchg
cmp
pop
push
std
pop
loop
inc
inc
sarb
jne
ret
cmc
cmc
or
mov
cmp
pop
and
notl
push
adc
inc
dec
adc
xchg
ret
or
cmp
sbbb
outsl
jo
add
jae
inc
xchg
addr16
mov
imul
mov
movsl
aaa
inc
fsubp
adc
sbb
xor
lea
leave
jp
ss
movsl
mov
int3
push
jo
mov
cmp
dec
adc
add
repnz
mov
jmp
push
shll
in
sub
testl
jmp
push
sahf
jge
jo
jl
adc
adc
push
adc
sbb
mov
sahf
push
mov
jmp
adc
mov
xor
or
or
cmp
out
mov
rol
xchg
xor
in
jecxz
loopne
xchg
lahf
iret
cmp
out
loope
cltd
outsl
lcall
sub
ret
push
push
or
ljmp
int
notl
shr
xchg
ret
lret
mov
outsl
dec
insb
sub
dec
xor
xchg
and
cmp
insl
jmp
inc
sbb
ljmp
int3
jp
cmp
pop
decl
jecxz
dec
jle
add
enter
das
sbb
icebp
cmpsb
jmp
orl
loop
ja
mov
pop
pusha
xlat
cmp
mov
mov
shr
push
outsb
or
imul
xbegin
es
cmpsl
adc
sub
and
orl
push
xor
pop
cmp
fmull
popf
adc
daa
sbb
pop
sbbl
cli
and
arpl
inc
adc
test
mov
lods
fldenv
or
xor
das
lock
xor
mov
subl
out
mov
mov
daa
ret
dec
insl
mov
hlt
nop
pop
adc
lahf
bound
mov
iret
int
xchg
test
sbb
jo
adc
xchg
ja
lcall
and
bound
in
mov
push
dec
pushf
xor
mov
repz
stc
jbe
push
jg
mov
fwait
push
insl
test
dec
xchg
int3
es
popf
mov
aad
fimull
jg
dec
sbb
fimull
mov
das
popa
adc
lahf
or
jo
lret
jnp
inc
pushf
sbb
xlat
or
add
xlat
sahf
mov
xorl
insb
push
or
in
push
jecxz
ds
aaa
fimuls
cmovnp
inc
pop
push
inc
arpl
ljmp
push
sbb
xchg
shll
fnsave
mov
xor
cmpsb
push
cmpsl
pushf
ja
repnz
push
xor
adc
mov
adc
jo
fdiv
lds
ds
cmpl
mov
mov
mov
pop
push
cmp
dec
pop
mov
cwtl
ss
pop
mov
call
push
in
je
call
stos
jg
sbb
push
jmp
xorl
int3
shrb
push
xchg
dec
fcomps
insl
repnz
insl
cmp
std
pop
xor
movsl
into
ret
pop
inc
cmp
jno
xor
dec
cmc
sub
mov
sbb
add
int
and
mov
lahf
add
inc
mov
dec
test
mov
pop
push
xchg
icebp
rcrb
or
test
push
xor
les
lret
inc
xor
inc
je
bound
loope
mov
push
insb
rcll
jo
aad
ljmp
rclb
jno
das
test
or
mov
daa
call
icebp
xor
dec
loop
mov
imul
lods
inc
mov
into
add
rcr
adc
xchg
pop
mov
imul
rcrb
adc
pop
xchg
out
rol
data16
jg
and
or
or
pop
mov
mov
xchg
cmpsb
xchg
cltd
pop
mov
dec
mov
xchg
rcrb
in
outsl
out
cmpsl
fwait
ja
and
fwait
and
sub
xor
inc
pop
in
dec
dec
cli
cmp
das
cmp
adc
data16
int
cmp
test
or
ljmp
out
addr16
mov
sbbl
sbb
call
aam
cmp
sbb
or
xchg
incb
popf
ja
cmp
jg
xchg
jns,pn
cltd
push
jne
sbb
inc
cltd
pop
jg
jmp
imul
xor
dec
inc
adc
rclb
inc
loop
push
mov
aad
dec
loop
cmpsb
push
fildll
faddp
aad
out
push
adc
xchg
sub
dec
lret
pushf
sub
into
push
push
ror
int
mov
add
inc
popf
mov
nop
or
jo
add
popa
mov
jnp
mov
sbb
ljmp
aam
cmpsl
jnp
push
sbbb
andb
mov
inc
test
mov
int
adc
jns
andb
sbbl
add
shlb
jl
cs
sti
lret
mov
frstor
jle
loope
movsl
sbb
cmc
fcmovb
insl
add
ljmp
ret
sub
mov
or
pop
add
incb
inc
mov
xchg
fistpll
mov
jne
or
pop
xor
lods
loope
jp
push
mulb
mov
stos
lock
sub
mov
adc
dec
xor
movb
or
ljmp
and
rcr
add
lods
xchg
imul
push
push
cmpsl
pushf
jecxz
lcall
and
je
sbb
mov
arpl
xor
test
add
out
movsb
jge
sbb
sbb
cmp
fdivp
push
mov
cli
sahf
push
pop
out
outsl
mov
pop
jp
and
mov
imul
mov
xor
push
pop
cwtl
divl
sbb
shll
loope
mov
jge
cli
pop
sub
scas
mov
lcall
rcrb
in
jne
xchg
jge
fsubl
movsb
xorb
mov
stc
xchg
mov
xlat
cmp
fisttpl
sbb
addr16
fists
xor
es
fcmovnbe
loopne
push
pop
jmp
ds
lahf
data16
movsb
aad
xor
fimuls
ret
push
rorb
and
sbb
push
mov
sub
cltd
pop
mov
in
mov
mov
push
dec
inc
cli
sbb
int
inc
or
imul
sti
jle
lcall
ss
pop
sub
dec
mov
mov
inc
adcb
mov
punpcklwd
imul
adc
xchg
mov
sub
inc
ds
pusha
icebp
dec
push
pushf
aaa
mov
loop
add
sbb
dec
push
aaa
mov
stc
lret
jecxz,pt
pop
movlps
mov
cmp
mov
fistps
xchg
ljmp
or
inc
and
dec
and
push
idivl
mov
popf
insb
lods
lcall
popf
sbb
fwait
mov
test
cwtl
pop
jnp
jb
adc
sarl
push
stos
xor
repnz
xchg
test
jno
add
out
xchg
add
mov
and
sbb
fst
jg
dec
pop
lret
xchg
pop
sbb
out
or
test
dec
mov
lret
push
or
xchg
shlb
sub
cmp
sub
sahf
inc
adc
aas
xchg
adc
adc
adc
cli
push
sub
sub
sbb
cs
jl
fcoml
jp
jge
or
mov
popa
mov
inc
push
ret
ret
add
xchg
lret
arpl
jo
rcll
loop
scas
and
push
imul
pop
adc
mov
or
add
dec
push
add
inc
mov
dec
xchg
or
mov
or
fisttpl
aad
bound
mov
xor
in
icebp
jno
int
testl
aas
jmp
sub
mov
adc
sub
adc
mov
nop
push
dec
mov
clc
popf
mov
hlt
addb
mov
mov
sahf
out
xchg
mul
cwtl
bound
lahf
icebp
jne
dec
stos
clc
ds
cli
std
and
rep
icebp
lds
lock
or
inc
inc
int
insl
cmp
testl
test
xchg
push
jecxz
dec
xchg
aaa
mov
fwait
jl
inc
pop
in
adc
out
mov
xorl
pop
cmc
xor
xchg
js
adc
and
aad
in
mov
adc
scas
iret
and
or
adcb
adc
add
sub
push
xchg
dec
imul
xchg
sbb
add
cli
xchg
std
aam
repz
or
dec
inc
pop
cmp
cmc
loope
fs
shll
int
mov
pop
cmpsl
cmp
pop
inc
jle
push
sbb
imul
sbb
jbe
sbb
enter
test
insb
sbb
xor
popf
cmc
jae
pop
lret
pushf
shll
mov
pop
xlat
scas
fisttpl
mov
imul
push
je
fistl
enter
ss
or
repz
movsb
push
mov
jecxz
aaa
push
mov
idivb
and
mov
push
or
cmp
cltd
xorl
xor
xchg
push
imulb
or
or
ja
sbb
push
inc
popa
push
int
pop
loop
push
xchg
inc
and
cli
xchg
mov
cs
mov
in
jae
shlb
inc
ss
inc
stos
rclb
in
adc
ss
mov
das
push
mov
fcomi
shlb
lahf
fcomi
ret
and
mov
call
inc
pop
sbb
push
mov
sbb
lods
mov
jo
jge
sar
push
popf
sarb
or
div
adc
sub
dec
push
pop
cmpsl
sub
shrl
loopne
push
fstpt
push
popl
hlt
mov
jg
jo
or
xor
add
mov
std
testl
dec
push
mov
mov
pop
jg
dec
cs
pop
ret
popf
jne
xchg
shlb
idiv
and
sbb
cmp
in
sub
mov
mov
dec
test
and
std
rol
sbb
mov
in
dec
push
mov
jle
test
out
ja
mov
xchg
out
je
or
mov
cmp
aam
add
es
push
adc
nop
jns
cld
ret
or
filds
add
push
insb
ljmp
fs
adc
test
loop
arpl
xor
scas
mov
mov
add
push
xchg
rcrl
arpl
aam
dec
sti
ljmp
sti
loope
aam
sti
ja
and
xor
cmp
fidivs
sbb
enter
mov
xor
insl
mov
into
jnp
add
pop
insb
cmp
decl
lods
pusha
sbb
xor
adc
add
cmp
loop
cmp
sarl
cli
dec
insb
jecxz
movsl
xor
sub
loope
jne
inc
jmp
push
js
inc
mov
lock
xor
or
inc
mov
mov
push
jecxz
push
sub
aaa
and
xrelease
mov
out
imul
push
hlt
xor
das
dec
andl
add
lods
mov
rcrb
fsts
xchg
int3
sub
xchg
or
push
lods
popf
and
and
fstl
dec
sbb
mov
ret
pop
sbb
mov
push
fwait
sbb
jp
test
mov
aaa
popl
sub
lds
mov
andl
xor
push
lret
add
out
aas
mov
clc
inc
cmp
aas
lcall
jecxz
ljmp
mov
or
imul
out
cmp
fnstsw
mov
nop
lock
fisttps
out
mov
sti
mov
repz
pop
and
sub
xlat
mov
out
imul
jnp
shlb
mov
jns
lcall
or
push
cwtl
imul
jmp
mov
andb
icebp
outsb
push
cld
xorb
aaa
stos
daa
jbe
inc
outsb
pop
outsl
push
dec
es
and
pop
jb
or
mov
mov
ret
add
mov
jne
in
xchg
shrl
ds
mov
out
jno
lahf
mov
daa
inc
mov
or
push
repnz
mov
mov
repz
push
pop
into
mov
insb
fucom
fcomi
lret
aaa
cmp
loopne
mov
dec
mov
call
sub
js
ja
mov
mov
xor
mov
xor
add
pusha
testl
adc
mov
and
jo
mov
pop
mov
push
mov
adc
pop
dec
frstor
dec
out
in
imul
cld
xor
push
ljmp
mov
push
adc
in
xor
mov
popf
mov
call
mov
lods
in
je
in
loop
mov
pop
mov
fcmovnb
add
cmpsl
dec
push
dec
adc
and
pusha
outsb
jge
lcall
fildll
out
push
arpl
dec
ret
mov
or
cmc
aaa
xchg
adc
int3
hlt
xor
rcrb
pop
xchg
lds
lods
adc
adc
jmp
cltd
in
inc
push
add
jno
flds
incb
xor
xor
out
es
and
hlt
add
cltd
aas
jb
sub
or
jle
das
cmp
call
fists
inc
das
cs
ja
inc
xchg
mov
lds
mov
aad
rol
sahf
nop
lret
mov
movsb
mov
mov
test
ret
or
int
mov
out
xor
sbb
dec
or
es
push
mov
in
mov
inc
mov
mov
pop
jno
cmpl
and
xchg
or
xor
insl
lret
mov
xor
push
cmp
test
push
or
sub
mov
and
ror
adc
pop
repz
inc
adc
mov
popf
cltd
jo
push
ret
sub
enter
adc
or
xor
out
lahf
push
add
sub
fmull
ret
inc
lret
stos
cmpsl
pop
in
jb
pop
push
sti
mov
sub
push
scas
lret
xchg
dec
jl
ja
pop
hlt
cmp
and
dec
sub
fwait
arpl
call
pop
jae
loopne
insl
nop
scas
mov
push
cmpl
pop
adc
dec
ja
cmp
add
xchg
pop
scas
cli
sarl
cmp
cmpsl
inc
std
mov
xor
test
push
jle
fsubl
mul
add
xor
sbb
xchg
jae
cmp
sarb
fiadds
mov
mov
rcr
dec
roll
push
fldl
inc
mov
aas
inc
xchg
dec
jmp
mov
sub
xchg
shrl
add
in
ja
sahf
adc
xchg
test
push
aad
lods
addr16
inc
outsl
iret
addb
xor
ret
xor
das
push
cmp
ss
cwtl
lahf
ficoml
and
pop
xchg
dec
js
jo
jo
adc
xchg
lahf
sahf
imul
pop
pop
inc
lret
mov
sbb
push
pop
xchg
arpl
ljmp
mov
push
ljmp
ja
sub
push
mov
push
repnz
rorb
lret
jnp
or
fsubr
jae
jmp
xor
xchg
mov
xor
push
mov
cli
push
mov
call
add
fadds
push
cmpsb
les
inc
or
cmp
clc
in
arpl
ja
adc
bound
push
in
push
mov
mov
mov
and
push
and
mov
std
adc
fmuls
je
mov
add
cmp
mov
push
mov
and
idivb
js
mov
xchg
dec
mov
push
fidivrl
loope
push
mov
pop
push
ljmp
pop
mov
push
xor
iret
add
cmp
or
add
int3
add
or
jle
inc
popa
pushl
fcmovne
rolb
xlat
or
push
sti
pop
adc
inc
mov
mov
cmp
in
jnp
cwtl
mov
imul
insb
or
jle
or
cmp
xorl
dec
insb
pop
out
push
mov
add
pop
mov
dec
jecxz
aaa
push
mov
dec
sub
push
stos
cli
dec
push
xchg
arpl
das
pop
lret
push
push
inc
xchg
loope
jae
jns
rcrl
aas
cld
cmpl
mov
sahf
out
push
push
adc
jmp
or
pmaxub
mov
sarb
shrb
test
mov
pusha
xchg
pop
sbb
cltd
sub
decl
adc
js
mov
push
dec
dec
xor
popa
xor
call
jecxz
jge
loope
in
rcl
mov
ljmp
loop
jne
pushf
sub
sahf
cmp
sub
fs
sbb
popa
sub
dec
outsl
and
xchg
and
mov
out
outsl
mov
clc
inc
xchg
mov
sub
jne
or
mov
xor
out
jle
mov
lods
imul
push
xor
mov
dec
mov
inc
ja
dec
cmc
and
pop
inc
fldenv
flds
leave
mov
xorl
lods
bound
xchg
and
add
dec
rcl
rolb
ss
mov
jb
dec
adc
adc
jne
lds
pushf
and
lret
dec
dec
push
mov
stos
ret
mov
push
inc
mov
sbb
sub
test
addb
lret
in
enter
aad
sbb
mov
inc
movsl
aaa
mov
mov
sbbl
cmpsl
pop
mov
jl
minps
aam
popf
je
push
movsl
adc
loope
test
mov
pop
jp
mov
inc
cmp
add
adc
xor
test
ds
and
dec
xchg
dec
hlt
js
dec
ja
mov
inc
mov
mov
ljmp
ja
repz
je
add
fldl
xchg
cwtl
gs
aam
movsl
push
ret
jbe
orb
cmp
imul
jo
cmp
add
mov
mov
mov
jg
dec
sub
push
aas
dec
lea
sbb
push
or
push
bound
imul
push
rclb
repz
addb
outsb
outsl
add
pop
fstpt
push
std
push
test
adc
mov
movsl
fisubrl
add
cmp
mov
sub
dec
outsb
hlt
push
das
or
mov
aaa
xchg
adc
decl
imul
mov
imul
push
dec
pop
mov
ret
mov
je
sbbl
dec
jge
outsl
sub
ljmp
add
xchg
hlt
adc
jne
pop
outsb
lcall
pop
mov
fsubl
cmp
addr16
inc
push
push
mov
mov
xchg
push
out
lods
leave
sub
out
loop
sahf
push
xchg
and
into
repz
add
ficoms
fldl
outsl
xor
test
mov
lcall
inc
jo
pop
sbbb
cltd
repnz
into
push
jne
xchg
push
hlt
mov
push
and
jns
adc
sbb
xor
jno
sub
pop
pushf
mov
sti
mov
push
lret
add
xchg
cmp
push
clc
xor
jecxz
out
jle,pt
out
icebp
loop
test
push
dec
pop
cmpsl
fldl
xor
cs
push
imul
and
sarb
xchg
sbb
ja
dec
insl
mov
xchg
and
test
sub
or
out
xchg
lods
xor
and
fsubrl
mov
loop
ja
leave
ljmp
xor
cmp
loop
outsl
mov
jb
push
mov
add
mov
in
or
mov
iret
xor
aam
sbb
movsb
mov
inc
mov
cmp
jge
stos
fisttpl
mov
popf
sbb
sub
stos
out
mov
pop
sub
pop
setae
das
pop
mov
inc
out
shlb
incl
je
or
push
sub
out
dec
scas
xchg
mov
push
adc
sahf
mov
mov
sbb
comiss
das
outsb
mov
cmp
adc
faddl
push
add
push
adc
jl
sub
push
cmp
sahf
aas
ja
aam
das
sub
lds
and
adc
imul
scas
mov
ja
das
mov
daa
jb
outsb
outsb
mov
xor
adc
test
dec
pop
or
xor
inc
add
jns
xchg
movsb
int3
mov
scas
hlt
repz
jge
add
push
jp
jne
shl
xor
scas
sbb
movsb
insl
push
mov
imul
ljmp
sbb
test
adc
out
jmp
adc
jmp
push
iret
pop
mov
push
cmpsl
xor
pop
xor
fisttps
pop
in
and
cmpsb
in
dec
dec
mov
xchg
lods
lea
xor
mov
pushf
cli
jo
cmp
mov
push
lahf
adc
mov
orl
cmpl
mov
test
sub
in
xor
iret
test
fnstsw
fcompl
push
repz
sbb
lea
mov
cmp
pop
push
dec
jb
pushf
dec
adc
and
mov
test
cmp
mov
ret
das
and
addl
push
pop
mov
outsl
out
daa
and
add
test
inc
lods
mov
add
out
lahf
jne
in
aas
pop
lds
rolb
xor
ds
adc
stc
adc
jno
out
mov
repz
and
pop
push
cmp
sbb
ret
xor
ja
lea
mov
sar
sbb
outsb
js
das
pop
movsl
pop
sar
xor
loop
adc
sub
es
lahf
jne
dec
mov
rcl
sti
pop
sbb
movsl
dec
and
xlat
xor
pop
mov
sub
lods
xor
push
add
dec
loopne
adc
pop
adc
stos
push
push
or
mov
add
and
es
pop
movsb
push
push
adc
or
adc
dec
xchg
pop
rcr
and
pusha
mov
lds
inc
and
imulb
sbb
sbbl
dec
mov
mov
adc
je
mov
mov
mov
inc
or
push
mov
das
mov
add
and
fisubs
push
loop
hlt
shll
xchg
popf
hlt
js
add
cmp
sbb
inc
bound
xor
fcomps
add
data16
mov
mov
pop
mov
or
mov
push
jb
insb
mov
jae
mov
cmc
insl
dec
xlat
jnp
sbb
movsl
gs
push
in
ret
push
push
stos
sti
xor
rclb
cmp
je
xor
mov
test
xchg
pop
fwait
cmpsl
gs
sub
xchg
sti
decb
lods
xor
jg
mov
outsl
sub
mov
xchg
cmp
out
mov
or
mov
sbb
add
lcall
imul
fwait
testb
mov
cmp
and
cli
and
leave
loopne
inc
stc
mov
imul
inc
and
imul
out
dec
jnp
jne
push
pop
aad
mov
and
lret
lock
mov
xchg
cmp
push
or
das
jmp
mov
imull
sahf
jecxz
mov
mov
gs
add
mov
shrl
cmp
cltd
jnp
jne
and
push
arpl
inc
jns
jecxz
test
mov
inc
add
push
and
and
imul
add
sti
jne
lahf
das
or
inc
sub
lock
inc
cmc
mov
pop
and
xchg
xor
mov
pop
or
jne
scas
and
push
mov
stos
gs
pop
out
sub
xlat
out
push
loopne
inc
jns
jecxz
sbb
xchg
cmp
jae
jnp
jnp
jne
pop
das
mov
inc
lods
mov
or
mov
mov
ljmp
xor
mov
ss
add
sti
mov
das
jne
adc
popa
arpl
outsl
test
sti
jae
jmp
dec
outsl
repz
mov
aas
mov
mov
fimuls
clc
and
popl
add
out
xlat
test
jne
sub
push
arpl
inc
jge
ljmp
test
mov
jae
idivb
and
and
imul
out
pop
jl
pop
inc
jnp
jne
xchg
das
adc
inc
xor
outsl
pop
out
inc
in
adc
mov
aaa
and
lcall
add
out
inc
cmp
jbe
outsb
test
mov
ss
gs
or
mov
and
mov
repz
and
jg
cli
es
mov
xchg
inc
sub
iret
mov
pop
popf
inc
xchg
sub
invd
sub
lret
sub
cld
aad
cs
into
imul
add
movsb
lret
push
mov
pop
mov
inc
push
sbbl
fildll
or
pop
lret
out
aas
push
cs
push
xor
ja
push
or
cmpl
nop
cmpsb
lds
cs
stc
adc
sbb
cmp
imul
mov
inc
nop
in
dec
cmpsl
jmp
inc
xchg
and
sti
pop
adc
std
std
insb
inc
jmp
or
ljmp
orl
xchg
xor
jae
movsl
add
or
movsb
inc
xchg
push
cmp
pop
or
add
sti
hlt
add
cli
cmpsb
jl
in
mov
sbb
dec
pop
fisubrs
pusha
movsb
sti
cs
jg
sbb
cwtl
and
fcomip
sbb
mov
jg
or
xor
or
pusha
clc
out
sub
cmpsb
fstps
outsb
xor
inc
jmp
insl
sbb
orl
mov
adc
jp
ret
sbb
mov
jg
add
int
loop
mov
and
std
add
js
pop
xor
push
js
cmp
sub
pop
and
cmp
jecxz
stos
jp
inc
into
sahf
push
dec
jae
jo
xchg
inc
out
aam
out
push
adc
and
scas
data16
out
pop
hlt
loop
or
subb
mov
push
jle
sub
or
pusha
mov
clc
jp
mov
mov
mov
call
es
jmp
inc
ss
cmpsl
sub
aaa
inc
adc
push
mov
jle
outsl
dec
shlb
push
mov
cmpsl
cmp
lcall
push
cs
bound
js
out
adc
ljmp
push
ja
jae
dec
xor
xchg
loope
dec
pusha
mov
pop
adc
mov
fwait
add
mov
outsl
xor
stc
test
mov
and
mov
in
sub
into
aam
or
pop
push
push
in
dec
shlb
push
push
es
shll
push
xor
scas
sub
xor
push
lret
sbb
aad
or
aas
jae
pop
test
cmpsl
mov
xchg
cmp
cmpsl
in
add
out
outsl
movsl
xchg
adc
orl
xchg
test
mov
out
push
pop
xchg
xor
xchg
inc
cld
add
scas
pushf
data16
or
cmp
jecxz
jnp
dec
adc
and
xor
mov
lcall
scas
mov
jne
imul
cld
cmp
xorl
push
mov
insl
mov
ret
mov
jo
jle
sub
xor
inc
mov
cwtl
movsl
xor
int
pop
popf
push
pop
mov
out
ret
das
inc
mov
ficomps
scas
or
sti
or
lds
mov
jg
ret
stc
sub
cmpsb
cmpsl
in
cli
popf
mov
outsb
jl
lea
or
mov
lcall
repnz
mov
sub
add
xor
xchg
lods
mov
repz
xor
ljmp
mov
mov
fdivs
subb
out
ja
cs
cmpl
incb
inc
adc
gs
les
rorb
inc
jmp
pop
push
dec
subl
pushl
inc
fcomi
pop
imul
bound
sbb
xchg
mov
test
jae
jg
cmpsb
dec
dec
out
dec
nop
mov
add
pusha
ss
pop
cmp
dec
mov
jno
dec
and
cmpsb
dec
xor
jns
dec
xchg
out
mov
mov
mov
lods
and
lods
cmp
aas
call
sub
jb,pn
test
or
shl
and
scas
mov
das
jo
jnp
dec
std
dec
outsl
ljmp
dec
into
mov
leave
aam
sbb
xor
int
adc
ja
insl
call
test
ret
hlt
mov
push
mov
add
mov
mov
sbb
jle
cli
cmp
repnz
cmpsb
cmpsl
push
ret
xlat
mov
add
loope
adc
jno
gs
in
repz
fimuls
rclb
popa
ja
out
dec
es
js
sbb
stc
subb
out
lahf
fidivrs
jb
jg
push
outsb
sub
inc
mov
pop
out
inc
mov
imul
ss
adc
mov
push
cmpsl
or
inc
sub
shll
sbb
dec
xor
mull
mov
adc
inc
xchg
test
subl
dec
sar
mov
es
stc
xorb
xor
cmp
mov
mov
sub
into
add
fs
in
pop
flds
shlb
rorl
scas
dec
sub
sahf
js
sbb
and
xchg
lcall
xor
xor
incb
mov
xor
dec
clc
imul
test
loope
cmpsb
dec
pop
sub
sub
pop
mov
repnz
xchg
push
adc
lock
cmpsb
adc
push
xchg
fisttpl
push
fwait
or
rcr
stos
or
cmpsb
or
cld
xchg
insl
jge
cmp
jmp
ja
jl
aas
pop
jl
xor
in
xor
in
xor
in
xor
in
xor
jl
xor
pop
jl
aaa
pop
jl
sub
in
sub
in
sub
in
sub
in
sub
jl
sub
pop
jl
das
pop
jl
and
in
and
in
and
in
and
in
and
jl
es
mov
xor
in
pop
pop
push
mov
add
mov
notb
rcl
lods
push
into
inc
dec
and
fidivs
add
rclb
shrl
out
sbb
repnz
xchg
add
push
pop
testl
xor
testb
add
rcr
ljmp
notl
xor
aam
gs
pushf
fsubrs
lret
leave
adc
ja
in
push
mov
mov
arpl
jb
mov
gs
add
cld
ret
pop
out
sbb
iret
sub
pop
jb
js
ljmp
lahf
ja
popf
xchg
mov
test
push
sub
ret
addb
call
leave
jle
pop
addr16
adc
shufps
fdivrs
sbb
arpl
lcall
push
pop
dec
jl
repz
je
aam
mov
aas
or
sub
add
cmp
adc
pop
jbe
xchg
sbb
inc
and
test
out
outsl
mov
push
out
pop
sub
in
popf
pop
inc
push
pop
popa
jmp
lahf
and
int
mov
lods
std
fwait
jnp
xor
pop
mov
iret
stos
inc
sub
jbe
int
rcrl
lds
fadd
dec
xchg
loop
dec
sub
fistps
test
lahf
nop
sti
and
int3
lock
cmp
cmp
in
mov
xor
jnp
sti
stos
add
or
jns
mov
in
push
jg
jns
sbb
int
inc
mov
loop
push
scas
insb
sub
ja
leave
mov
pop
loope
push
iret
jno
add
sub
sub
into
orl
cmpsl
cs
int
add
cmp
dec
mov
dec
or
inc
xor
mov
pop
ss
mov
or
das
dec
movsb
jg
mov
fwait
xor
add
inc
ret
movsl
add
mov
adc
mov
dec
test
jbe
dec
add
xchg
jg
or
lret
sub
mov
adc
pop
dec
xor
pop
xchg
cli
sub
ja
leave
mov
out
push
popf
repnz
push
pop
cmp
outsb
add
adc
and
out
inc
lret
shl
push
jnp
int3
sub
popa
jg
scas
push
scas
inc
sbbl
mov
or
je
pop
dec
sub
cmpsl
aas
add
xor
sub
adc
add
mov
lock
xchg
dec
mov
xchg
pop
pop
inc
inc
repz
pop
adc
push
xchg
push
lods
pop
and
mov
clc
jbe
fdiv
add
fildl
add
or
cli
pop
xchg
cmc
fildll
push
sub
or
and
xor
in
mov
outsb
popa
insl
std
out
cmp
sbb
fdivr
xchg
aaa
mov
loopne
sub
lock
dec
xchg
cmp
pop
mov
rorl
adc
pop
test
lcall
into
negl
cmp
cmp
fwait
test
xchg
pop
dec
jbe
lret
cmp
scas
or
sbb
je
jne
mov
scas
xchg
mov
jle
out
es
xchg
xchg
xor
enter
sbb
dec
adc
cs
sbb
addr16
or
jbe
or
test
add
push
or
mov
or
add
add
lds
add
add
add
push
or
add
add
loope
or
add
add
icebp
push
or
add
add
call
add
add
add
push
or
add
add
push
or
or
add
push
or
adc
push
or
and
add
or
sub
push
or
cmp
add
or
inc
push
or
cmp
or
push
push
or
inc
push
or
pop
push
or
dec
push
or
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
fs
insb
add
jbe
jb
cs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
popa
jae
imul
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
push
inc
inc
dec
inc
pop
add
add
outsb
imul
add
popa
pop
xchg
aad
add
sbb
add
sbb
mull
shr
xor
add
shll
cltd
add
add
mov
mov
add
jp
dec
pop
in
loop
push
and
imul
leave
xor
icebp
push
into
aaa
mov
and
mov
add
xchg
imul
push
outsb
and
add
adc
add
mov
jbe
inc
call
je
push
jmp
fstpt
cmp
xor
sub
dec
dec
pop
mov
out
roll
xchg
add
xchg
stc
inc
rcr
dec
add
sbb
int3
mov
cmpl
jne
mov
inc
mov
add
xchg
mov
ljmp
or
push
jnp
icebp
out
adc
scas
adcb
mov
fadds
lock
call
lret
hlt
push
lea
xchg
int3
xlat
xchg
xor
pop
vunpckhps
into
push
hlt
aas
add
cmpsb
dec
pop
add
sbb
mov
xchg
and
jmp
sbb
sahf
add
shr
cmp
pop
loop
mov
and
lds
dec
test
mov
lock
scas
imul
add
or
aad
les
adc
imulb
dec
cld
lahf
je
hlt
cmp
push
ja
jecxz
push
mov
mov
or
mov
and
dec
dec
adc
dec
mov
mov
inc
xor
iret
daa
or
testl
mov
stos
add
cmpb
repnz
je
sbb
add
lret
fs
dec
jbe
sar
pop
testb
in
fcmovnbe
add
mov
cmpsl
pop
dec
add
lret
je
jne
or
inc
scas
mov
les
mov
addl
mov
ja
add
movsb
xchg
add
mov
lock
jbe
pusha
lahf
repnz
jae
loopne
roll
inc
cmp
in
push
push
pusha
fldl
mov
sbb
add
mov
int
out
or
xor
sub
xchg
or
adc
enter
or
and
stos
fwait
xchg
popa
xchg
jmp
add
pop
xor
xor
sub
fnstenv
push
add
jo
sahf
mov
adc
or
and
in
cmp
arpl
and
jbe
adc
int
add
and
addl
js
push
add
push
divl
mov
or
jne
lds
icebp
cmp
cmp
pop
add
dec
bound
mov
add
mov
movsb
jle
mov
xchg
mov
pushf
adc
xchg
leave
and
xor
es
and
push
push
cmp
adc
jne
int
jl
dec
cmpl
adc
xor
mov
add
leave
cli
xchg
pop
pop
add
ljmp
cld
int3
add
and
jo
fs
mov
popf
add
mov
fdivs
scas
outsb
shlb
orb
cmp
mov
idiv
or
aaa
push
mov
xor
adc
ret
ror
cmp
roll
push
adc
cmpsb
je
in
repnz
out
cmp
mov
xchg
push
adc
int3
adc
int
rcl
pop
fs
cmp
or
scas
xor
add
or
dec
add
push
mov
and
orb
test
cmp
cmp
pop
ret
out
xor
pop
inc
or
mov
adc
subb
ret
cmp
push
pop
cltd
or
mov
xor
dec
pop
and
pop
or
rorb
or
mov
out
mov
into
cld
add
add
xchg
mov
add
sbb
fisttpll
add
or
in
outsl
ds
xor
add
xchg
ss
out
outsb
in
add
imul
or
pop
cmc
jmp
jp
push
enter
and
or
xor
int3
adc
loop
ja
adc
les
add
xchg
js
lret
adc
push
sti
mov
pop
aam
ficompl
add
mov
add
adc
subl
cmp
jns
push
lods
out
ret
sub
inc
adc
ljmp
jae
arpl
add
loopne
loope
add
or
hlt
adc
cmp
gs
sbb
add
or
idiv
add
mov
xchg
add
fnstcw
mov
push
jp
cmova
mov
out
or
pusha
add
sub
cmp
lret
inc
add
les
mov
and
jge
add
sbb
add
push
dec
into
and
adc
cmp
push
nop
lahf
xchg
cltd
icebp
repnz
shll
insb
addr16
or
or
outsl
push
cmpb
mov
lods
mov
add
dec
cwtl
sbb
sbb
mov
add
cmp
push
jge
jae
bound
lea
sub
mov
lds
lret
xor
add
sub
push
push
leave
clc
add
or
shll
add
lods
add
xchg
add
xchg
add
xchg
or
or
pusha
clc
jge
mov
sbb
adcl
cltd
xor
mov
sub
imulb
inc
jbe
add
test
mov
cltd
mov
jnp
addb
inc
add
rcrb
dec
add
push
add
pop
add
xchg
push
xor
sub
movl
adc
sbb
or
cmp
mov
add
and
arpl
add
data16
push
sub
sbb
les
pop
cli
mov
cmp
frstor
or
and
xchg
adc
mov
or
push
inc
inc
xor
xchg
repnz
mov
adc
pop
adc
test
data16
aam
cmp
add
pop
adc
pop
das
dec
ret
fnstenv
cmp
and
inc
xor
push
add
mov
jns
add
test
adc
pop
test
add
loop
add
add
lock
dec
dec
and
je
add
jb
dec
popf
lods
shll
mov
lcall
and
and
cli
jne
push
push
mov
push
aaa
and
test
pop
inc
int3
push
stos
push
push
adc
popa
mov
rcrb
push
notl
fnstsw
mov
xchg
xchg
sub
sbb
mov
add
xchg
and
or
xor
mov
xchg
xor
adc
push
dec
mov
push
xor
or
pop
add
and
arpl
jae
mov
mov
fs
emms
jo
push
inc
test
sub
jecxz
cmp
inc
sbb
int3
or
cmc
int3
or
test
push
adc
icebp
adc
mov
addl
or
adc
adc
and
or
mov
cmp
stos
add
or
fidivs
add
add
add
add
add
sti
pop
adc
mov
xor
jecxz
add
add
pop
cltd
add
es
imul
add
or
mull
adc
jg
xor
pop
xor
jmp
add
dec
add
push
ret
loop
and
clc
or
add
mov
add
xchg
push
push
adcb
test
push
icebp
xchg
mov
xor
std
aam
xor
in
xor
push
or
xchg
dec
jns
jno
add
xor
xor
insb
mov
aaa
fwait
and
or
mov
sbbl
add
jno
sub
inc
mov
fcmovnb
adc
ljmp
fiaddl
pusha
ds
cmp
or
inc
mov
add
xor
jae
add
dec
xchg
inc
dec
push
jne
and
and
push
and
push
and
and
sub
push
push
xchg
fbld
pop
jp
jmp
fs
or
sub
or
or
or
std
fwait
adc
mov
lcall
icebp
mov
addb
inc
mov
repz
dec
enter
fisttpll
push
loope
sbb
or
call
jmp
ljmp
fsts
repz
lods
out
shll
sub
mov
push
scas
iret
push
inc
test
inc
lock
mov
cmpb
aas
dec
stos
inc
push
push
add
add
cwtl
jl
sarb
or
xchg
fnstenv
mov
pushf
mov
cmp
in
ljmp
aam
push
add
jl
daa
test
shrl
push
push
and
inc
xor
popf
dec
addb
icebp
dec
adcb
pop
andb
or
adc
arpl
pop
inc
fs
mov
sub
xchg
inc
outsl
movsb
fs
jg
or
mov
push
and
push
xlat
and
addr16
sub
subb
jmp
or
jl
push
xor
xor
stos
mov
push
push
add
mov
xchg
into
and
inc
imul
adc
and
dec
es
xor
cmpl
aaa
jecxz
pop
repz
adcb
cmc
mov
aad
ja
ljmp
sbb
mov
rorb
adc
loope
ljmp
or
jg
jb
shrl
lock
test
sbb
or
and
mov
arpl
cli
mov
icebp
mov
jnp
mov
dec
or
mov
in
push
out
adc
or
add
add
inc
xchg
jle
cmp
add
add
dec
add
adc
and
push
push
mov
xor
sbb
push
add
add
popa
pop
and
and
and
and
xor
mov
sub
rcrl
jle
cltd
popf
adc
adc
mov
cmpsb
add
test
jbe
subl
or
call
dec
lods
and
and
lods
inc
cmp
test
mov
jl
dec
fs
mov
jmp
inc
in
xlat
inc
repnz
repz
cmc
sar
gs
push
push
and
xchg
scas
mov
lock
add
inc
ds
lods
cmp
sub
pop
mov
push
mov
push
dec
jae
cmp
add
push
pop
sub
pop
cmp
inc
mov
fs
int3
or
xor
addr16
cmp
push
inc
add
mull
adc
mov
lods
into
mov
adc
mov
mov
add
mov
push
add
jb
adc
jmp
outsl
sbb
or
add
aas
mov
pop
cmp
fmuls
insl
jno
adc
pop
aaa
push
push
insb
adc
push
mov
mov
sarb
mov
in
and
jb
mov
mov
outsl
add
mov
and
push
pop
icebp
sbb
out
movsb
shl
add
push
rolb
xchg
fmuls
sbb
sbb
push
lldt
or
push
and
or
data16
outsl
adc
mov
pop
mov
push
and
sub
mov
push
cmpsb
addr16
popf
mov
inc
int
sti
lret
mov
pop
xchg
add
inc
mov
dec
lock
sbbb
sub
sbb
mov
ja
or
sbb
mov
dec
cmp
add
int3
jae
mov
sbb
icebp
sub
lock
xchg
push
daa
lret
ds
xchg
sub
xor
movsb
icebp
xor
and
add
sbb
rcll
mov
xchg
pop
cld
xor
scas
dec
sub
jmp
jo
test
adc
push
or
mov
xchg
lock
dec
stc
mov
add
or
call
inc
in
or
test
in
push
add
out
movsl
jne
pop
push
push
mov
lds
sub
and
mov
push
cmp
leave
loop
js
in
in
in
add
jnp
fcompl
sbbb
dec
in
aam
mov
sbb
pushf
lds
xor
add
add
imul
stos
inc
rorb
sbb
in
jmp
mov
inc
js
lret
adcl
push
pop
or
call
and
and
cli
out
fxch
int3
mov
add
popf
jg
xor
movb
cld
enter
push
inc
mov
es
leave
out
lock
push
push
add
mov
jbe
enter
push
arpl
lahf
shl
sbb
mov
andb
rolb
mov
or
cmc
dec
imul
dec
jno
bound
jg
xorl
or
js
and
pop
add
aas
push
inc
movsb
xchg
imul
mov
dec
lcall
fistps
mov
int3
dec
es
lret
dec
std
add
mov
sub
jecxz
pop
pushf
and
loope
jecxz
pop
cltd
mov
push
pop
dec
sub
stc
sub
jae
imul
inc
and
lahf
dec
add
push
and
nop
add
push
push
xlat
or
and
cmp
out
mov
mov
cmpsl
sarl
and
cwtl
negb
ftst
outsl
lahf
rol
rorl
pop
pop
sub
push
adc
jo
adc
lock
mov
cwtl
jp
int3
add
jecxz
daa
pushf
cmpsl
pusha
addl
clc
adc
ret
add
dec
fnsave
mov
pop
inc
out
sahf
and
mov
or
clc
incl
mov
stc
push
jo
jbe
add
fsubl
ret
add
and
sarl
pop
enter
fmul
push
cmp
sahf
rcrl
jnp
mov
mov
inc
inc
adc
pop
add
jno
out
into
xchg
add
imulb
mov
repz
sbbl
negb
mov
sub
inc
or
jmp
adc
or
outsb
inc
push
inc
iret
cmp
inc
add
in
mov
and
mov
mov
or
or
aas
div
scas
add
xor
sbb
icebp
and
cmp
jns
jae
or
jecxz
mov
add
outsl
loop
pop
xor
test
mov
dec
inc
fidivrl
inc
lcall
xchg
nop
cmc
enter
dec
ret
sub
arpl
cmp
repz
jmp
test
adc
push
in
sub
add
jmp
pop
aaa
add
mov
mov
add
add
cmc
jno
in
scas
ret
int3
add
lods
subb
dec
testl
xor
add
pop
adc
add
fwait
insb
dec
xor
les
fisttpll
test
add
stc
call
add
mov
lret
cmp
or
pop
shll
pop
movsb
loop
data16
or
xchg
pop
xchg
dec
dec
fstpl
lret
dec
cltd
sbb
push
insb
insb
inc
sub
pop
mov
mov
pusha
push
and
sub
sub
andb
mov
daa
in
sbb
popf
inc
add
testb
dec
sbb
jmp
subb
xchg
inc
mov
repnz
jecxz
jbe
mov
xlat
js
in
and
inc
decb
xchg
scas
add
dec
cmc
xchg
adc
sub
add
push
cmpsb
or
aam
and
bound
loopne
hlt
inc
mov
inc
nop
ss
add
lcall
bound
repnz
push
incl
rolb
add
shr
jmp
loopne
or
jmp
not
mov
mov
or
xchg
test
mov
cwtl
jmp
scas
not
sbb
mov
pop
int3
dec
push
call
sub
js
cli
add
sbb
pop
je
jmp
push
xor
mov
inc
push
arpl
xor
add
stc
mov
cld
add
mov
shl
push
adc
mov
pop
pop
shl
sub
imul
pcmpgtd
out
out
out
pop
scas
decb
cmp
mov
sbb
inc
daa
pop
pop
imul
cltd
cs
inc
push
pop
orb
repz
mov
jbe
jnp
loope
dec
jns
or
call
insl
sub
jg
pop
pushf
push
pop
pop
sbb
setb
popa
and
mov
fdivp
enter
and
push
xor
push
jmp
scas
shr
jp
or
iret
jmp
addl
bswap
inc
cmp
add
sub
loop
cmp
cmp
ljmp
nop
not
cwtl
mov
fs
mov
inc
xor
xchg
push
adcl
adc
and
punpckhdq
and
cmp
iret
xorb
push
xchg
sub
push
pop
pop
neg
jmp
cmp
xchg
adc
into
jecxz
xchg
out
aaa
test
movsb
and
decl
imul
dec
dec
sub
repnz
fnstenv
neg
inc
push
andb
ja
rcll
fwait
dec
inc
loope
sahf
rolb
incb
inc
jne
cmp
sbb
mov
filds
push
dec
xor
movzwl
cmpsb
cld
add
mov
les
adc
mov
xor
mov
lret
pop
or
bnd
push
out
fldenv
and
mov
and
mov
add
sbb
push
imulb
sbbb
push
lods
rcr
mov
dec
mov
xor
add
sub
xchg
inc
inc
pop
adc
mov
inc
gs
xlat
lret
push
leave
add
adc
adcb
pop
inc
sbb
imul
fwait
jnp
and
stos
mov
js
ss
mov
inc
jp
inc
dec
je
adc
or
test
outsb
mov
int
xchg
nop
jp
pop
lret
js
add
clc
dec
leave
push
pop
pop
adc
movsl
testb
sbb
je
and
int3
pop
sbb
aaa
add
cld
mov
cltd
shll
add
scas
inc
fimuls
dec
push
gs
test
push
xor
pushf
cmp
mov
fnstenv
cwtl
hlt
inc
adc
xchg
push
mov
and
cld
xchg
les
push
mov
icebp
fs
test
test
rolb
bound
xlat
ja
dec
popf
jl
pusha
mov
arpl
leave
push
push
lret
pop
cwtl
test
popa
cmp
lds
cmp
xor
pusha
shlb
mov
adc
or
adc
les
mov
add
push
xchg
stos
loope
push
adc
xor
lahf
push
int
mov
cwtl
stos
mov
sbb
and
fidivrl
dec
xlat
mov
gs
aad
leave
jmp
xor
loope
pop
xor
push
imul
or
mov
not
subb
mov
sbb
cmpb
mov
cs
inc
addr16
ljmp
les
cmp
cmpb
shll
cld
aaa
cltd
adc
int3
add
jg
push
imul
add
insl
in
xchg
xorl
or
xchg
and
inc
lret
push
out
jbe
mulps
mov
dec
push
add
popf
ror
jae
mov
or
lret
sbb
or
adc
xor
sti
addl
insl
pop
fwait
mov
lods
jmp
out
xor
inc
inc
sbb
jge
push
pop
pop
xchg
gs
sub
rcrb
pop
test
mov
jmp
adc
dec
adc
lds
xor
sbb
pop
clc
rcll
aad
inc
and
pop
imul
mov
xchg
sahf
xchg
add
adc
pop
or
adc
push
fldl
pop
dec
jecxz
push
mov
push
inc
xchg
lret
xorb
xor
sbb
cwtl
into
mov
movsb
lods
adc
es
rclb
negl
mov
xchg
or
xor
not
push
out
in
iret
add
sti
fildl
mov
lret
orb
xchg
push
pop
xor
adc
movhps
or
mov
dec
jp
aam
rolb
mov
add
dec
xor
xor
or
repz
aad
jge
orl
outsb
out
mov
inc
cmpsl
cmp
inc
loop
add
hlt
cmpsb
lds
xchg
adc
xor
mov
adc
stos
cld
adc
roll
rorb
mov
testb
rcrl
insl
push
clc
ljmp
int3
fwait
shl
int3
add
mov
not
xor
jns
and
ds
cli
ds
push
test
or
and
adc
adc
test
push
or
xor
inc
je
int3
push
dec
les
push
fistpl
clc
cmp
sti
push
dec
sub
push
ret
pop
mov
cli
dec
and
loop
push
insb
or
popl
add
sub
icebp
fsubrs
hlt
push
enter
rolb
push
mov
xchg
xchg
and
xlat
imul
bound
lret
add
cmp
decb
dec
push
push
pop
movsl
and
cwtl
sub
cmpsb
jl
xchg
fidivs
cli
jge
stc
or
sbbb
inc
xchg
test
movsl
orl
sub
je
imull
add
adc
das
icebp
addr16
gs
dec
insl
fisubl
push
enter
test
in
cmp
out
push
pop
cmp
inc
cmp
or
rcrb
fidivs
inc
adc
or
lock
das
inc
bound
popf
not
loop
leave
cs
and
loopne
mov
push
loopne
xchg
xchg
push
xor
cltd
test
loope
xor
or
dec
gs
xor
cmp
inc
sub
add
sarl
pop
test
dec
mov
jb
dec
pop
loopne
dec
aaa
adc
sahf
pop
push
jnp
or
enter
xchg
dec
mov
inc
add
push
pop
pop
or
xchg
test
push
divb
pop
aad
rol
hlt
dec
dec
xchg
push
test
mov
fs
cmpb
std
sbb
push
add
inc
cmp
and
fcoms
out
mov
outsl
setno
jge
in
iret
or
pop
mov
push
movsl
lods
leave
pop
and
rol
add
sub
mov
inc
out
adc
idiv
cmp
sarb
mov
adc
into
hlt
mov
xor
es
out
and
nop
mov
into
dec
call
adc
inc
xchg
push
inc
mov
arpl
mov
test
pop
push
loop
movsb
adc
mov
ds
rol
inc
xchg
std
dec
and
out
jo
rclb
clc
pop
lds
rcrb
adc
and
das
add
test
in
cltd
xchg
test
loope
popa
push
test
dec
cmc
xchg
cwtl
pop
testb
ret
ucomiss
das
pop
cwtl
adcb
imul
push
add
adc
mov
popa
push
xchg
lds
icebp
xor
stos
orb
scas
dec
ljmp
xor
insb
inc
lds
mov
ss
push
pop
pop
add
andb
or
lcall
add
inc
xor
je
dec
push
add
and
sbb
mov
adc
test
cmc
shll
shll
cmc
addb
sub
inc
addb
and
mov
adc
test
sub
jnp
fs
xor
cwtl
outsl
pop
mov
es
mov
sub
sub
cmpsb
add
inc
lret
test
or
pop
cltd
cmpsl
pop
jp
push
in
push
mov
daa
adc
mov
mov
jmp
mov
push
lock
adc
mov
xchg
shl
cmp
mov
mov
test
aaa
into
lock
inc
mov
testl
ljmp
jp
hlt
ss
pop
popa
bndldx
and
out
inc
fildl
sbbl
outsb
mov
pop
and
mov
int
repnz
sbb
pop
dec
mov
andb
sbb
aas
mov
mov
cwtl
stos
std
testl
mov
xor
push
add
lret
xor
les
rcrb
ljmp
stos
xchg
mov
test
mov
mov
jecxz
and
out
cltd
or
add
aam
mov
inc
inc
shl
xchg
or
add
add
arpl
mov
sbb
xchg
or
cmpsb
cmc
add
lock
mov
test
mov
stos
fbstp
out
or
outsb
sub
inc
adc
mov
movsl
xor
ret
jecxz
aas
sbb
test
jno
bound
push
test
and
jbe
int
or
addl
sub
jmp
adc
dec
notl
add
add
add
nop
cmp
dec
push
mov
xchg
pop
xchg
jo
fs
xchg
and
mov
push
or
mov
int3
test
xor
push
and
stos
or
aad
rcrb
fucom
jb
dec
lret
ret
subb
and
outsb
mov
stc
idivb
sub
loope
or
pop
mov
daa
cwtl
push
mov
push
fmuls
jl
push
push
sub
roll
stc
insl
frstor
scas
lret
push
add
pop
addr16
dec
mov
lds
and
pop
outsl
xchg
dec
aaa
stos
nop
bound
loopne
sbb
and
push
scas
pusha
les
ret
or
xor
inc
xchg
cltd
pop
stos
test
push
add
imul
cli
out
pusha
repz
mov
xchg
lret
imull
or
add
sub
push
pusha
adc
lret
mov
push
or
adc
popf
je
fldenv
xor
mov
and
mov
add
adc
mov
icebp
xor
loop
mov
dec
movsl
mov
push
fnstcw
notl
push
jmp
push
pop
pop
xor
inc
dec
jl
push
fsub
inc
add
loope
xchg
jp
dec
pop
mov
addr16
mov
push
shrl
cltd
fs
jo
lret
ficoml
lods
or
xchg
lea
ja
cmp
andl
pop
inc
aas
push
lock
enter
or
lahf
imul
or
dec
add
pushaw
adc
adc
xorb
xchg
mov
in
ja
jo
fs
bound
outsl
punpcklwd
rcrl
into
jb
push
mov
mov
leave
jae
jecxz
sbb
fwait
ljmp
repz
push
std
jmp
pop
jnp
mov
push
pop
push
bound
add
sbb
push
add
mov
rorl
shrb
movsb
addr16
clc
or
sbb
add
jae
mov
ljmp
jecxz
jnp
lds
ja
sbb
mov
push
jno
mov
mov
mov
pop
leave
in
push
and
sub
cld
sub
das
pop
repnz
dec
push
je
addr16
add
sbb
add
and
pop
je
or
test
out
mov
sub
es
mov
test
sbb
pop
mov
mull
and
inc
mov
inc
dec
and
mov
xchg
xchg
dec
push
das
pushf
stos
in
lret
mov
pop
aam
test
jp
fwait
sbb
dec
mov
mov
mov
in
fistps
stos
and
push
adcb
xchg
pusha
mov
sti
insl
sub
jp
push
inc
lcall
push
lret
in
pop
imul
faddl
repz
shlb
inc
xor
ffree
add
pop
dec
loopne
jo
popa
ss
pop
add
andb
movsl
aad
cltd
pusha
and
add
push
push
xchg
xlat
arpl
push
data16
lret
std
int3
sub
add
add
jl
push
push
push
nop
popf
sbb
test
flds
jno
mov
push
pop
pop
add
stos
ffree
ljmp
adc
in
mov
or
jl
punpckldq
ljmp
adc
pop
out
andb
cmpsl
mov
add
mov
add
stos
adc
lock
pop
daa
addb
adc
outsl
loopne
mov
push
add
cmpb
cmp
dec
fcoms
lcall
cltd
or
and
pop
ret
popa
sbb
lds
insb
std
shll
dec
push
jb
das
dec
add
mov
daa
inc
call
push
vcvtdq2ps
pusha
sbb
sahf
rclb
mov
adc
insb
out
or
mov
call
pop
not
inc
adcb
rorl
add
inc
icebp
or
das
push
pop
stc
xor
cmp
inc
push
rorb
jecxz
cmpsb
rcll
dec
inc
das
arpl
sbb
push
or
popf
inc
leave
push
sbb
in
and
popa
add
shr
dec
lods
sub
ss
mov
out
add
cli
push
faddl
rclb
mov
push
push
or
mov
outsb
add
in
addl
mov
insl
js
inc
adcb
int
jnp
daa
outsl
insb
push
xor
add
xor
pcmpgtd
xchg
dec
ror
cmpsl
mov
cwtl
in
mov
sub
dec
aam
jb
dec
cmp
adc
in
sbb
and
lcall
lret
inc
mov
inc
int3
mov
nop
pop
jmp
aad
add
pushf
loope
dec
enterw
jno
cld
outsb
mov
lahf
dec
push
sti
or
bound
mov
xor
rol
clc
vcvtss2sd
mov
lgs
addr16
mov
or
neg
sub
adcb
arpl
enter
push
aad
push
dec
add
adc
adc
inc
sbb
dec
push
ljmp
cltd
ret
test
ret
mov
add
mov
dec
loope
into
out
sbb
inc
repz
or
dec
ret
mov
sar
jmp
lock
cli
dec
out
stc
roll
inc
fwait
mov
repz
push
adc
stos
shlb
jo
push
not
xor
mov
inc
inc
ja
mov
lret
xlat
inc
and
pop
mov
ja
jno
cmpsb
fadds
jae
fsubrl
sahf
push
lahf
cwtl
jo
add
pop
cmp
xor
in
insl
add
xor
test
push
addr16
sbb
dec
mov
sub
rcll
frstor
lahf
cwtl
test
jecxz
jnp
sbb
push
je
jbe
cmp
xchg
fcompl
sub
mulb
push
and
mov
test
out
mov
cs
mov
xor
cwtl
dec
sub
ret
jle
xchg
jmp
mov
mulb
pop
shl
add
repnz
xor
xchg
shlb
out
xchg
addb
sub
push
sbb
cmp
dec
je
scas
pop
jmp
add
xor
sbb
nopl
dec
mov
inc
add
sub
inc
cmp
cmpsb
neg
mov
cmp
shl
test
pop
fs
lret
out
push
pop
mov
hlt
test
sbb
mov
jl
add
or
rclb
dec
jbe
pop
out
insb
shl
xchg
aas
xor
in
test
and
leave
cwtl
lods
push
jbe
jne
jl
lock
mov
loope
lret
cmpb
cmpsb
test
add
add
and
jnp
data16
xorb
stc
fwait
and
repz
mov
cmpsb
xchg
sub
inc
jnp
pusha
xchg
test
add
loopne
sub
mov
add
pop
add
pop
mov
ja
out
test
xor
inc
aas
loope
pop
cmp
outsb
adc
and
sub
test
push
leave
shlb
mov
pop
dec
add
fmuls
pop
mov
add
int
inc
jecxz
cmc
aaa
repz
imulb
add
adc
push
mov
cmpsb
mov
xor
add
dec
imul
add
sti
xor
adcb
notb
out
add
cld
jmp
fisttpll
lds
aaa
inc
rorb
aaa
fwait
pushf
dec
adc
mov
cmpsl
adc
cmp
fs
in
neg
mov
std
adc
mov
filds
dec
into
jp
mov
sbb
notb
leave
adc
cwtl
in
cli
inc
sub
out
cmp
test
pusha
inc
mov
adc
jecxz
xor
pushl
sarl
or
out
in
add
pop
cmpb
add
filds
pop
add
pusha
xor
pop
mov
jecxz
jae
imul
hlt
inc
push
cmp
lock
movsb
mov
jle
xor
outsb
popf
cwtl
push
aad
dec
mov
imul
adc
mov
push
sbb
dec
xchg
loop
push
in
lock
pop
and
int
push
push
add
push
repnz
jp
xchg
cltd
mov
bound
dec
pop
push
jge
adc
xchg
push
aaa
add
fistps
ja
push
inc
pusha
sub
xchg
add
test
and
cmp
adc
out
adc
incl
aas
pusha
arpl
jl
imul
mov
iret
add
pop
pop
pushf
sub
orb
js
in
out
inc
and
addb
fst
mov
dec
adc
xor
fsqrt
pop
or
inc
sub
js
adc
dec
adc
inc
add
or
test
jo
mov
xchg
and
rol
cwtl
add
mov
fld
adc
push
outsl
mov
pop
or
push
sbb
dec
std
pop
mov
xchg
test
inc
sub
insb
push
add
aad
in
add
jg
jecxz
popa
mov
adc
adc
push
or
pop
mov
shl
inc
sbb
lock
int3
xor
pop
dec
iret
add
jg
xor
in
movsl
dec
push
pusha
cwtl
or
inc
inc
add
loopne
inc
jmp
sbb
mov
jp
es
dec
pusha
mov
jmp
push
rcrb
cmp
sbb
and
push
mov
fbld
xorb
push
pushf
push
divl
add
pop
mov
and
testl
mov
pop
xor
stos
mov
inc
cmp
outsl
ljmp
adc
xchg
pop
sbb
inc
sbb
add
test
ss
or
or
xchg
ljmp
adc
add
push
repnz
nop
mov
inc
mov
cmp
imull
outsb
push
pop
sbb
or
inc
add
inc
mov
or
cmp
nop
ficoms
lds
add
fst
imul
jbe
lret
test
or
enter
movb
xchg
inc
test
pop
sub
lret
mov
sbb
orb
push
int3
insl
cwtl
repz
pop
fadds
cmp
mov
lahf
add
dec
jbe
dec
or
sarl
int
xor
icebp
fbld
jecxz
push
xor
xchg
int3
xor
adc
neg
test
sub
cwtl
mov
push
int3
inc
sahf
cmpsb
mov
ret
push
push
adc
dec
mov
or
push
push
pop
mov
pop
das
xor
mov
or
jl
lcall
push
lcall
jle
xchg
movsb
cltd
cmp
mov
jns
stos
cmp
int3
es
mov
fimuls
and
into
mov
xor
cmp
dec
aam
inc
leave
inc
out
add
jns
pop
std
lock
mov
dec
push
cmc
pop
rolb
ljmp
and
xor
mov
pop
xchg
xchg
push
cwtl
arpl
pop
jb,pt
negb
mov
push
outsb
lds
xor
aaa
sbb
rolb
mov
shll
pop
mov
xchg
mov
jp
mov
mov
xchg
out
jnp
inc
add
jge
ret
notb
mov
adc
pop
xchg
or
xor
dec
lock
in
ret
cmp
mov
xor
jge
mov
push
dec
mov
imul
lahf
push
cli
jp
pop
scas
and
jno
cmp
mov
mov
xor
mov
bound
idivb
dec
push
fmull
setg
fistpl
pop
out
fimuls
push
movsl
repnz
loopne
mov
imul
mov
mov
xchg
jge
inc
repnz
hlt
mov
loop
dec
xor
pcmpeqb
cmp
hlt
sub
iret
sub
lods
call
adc
cmp
inc
daa
insl
dec
mov
cmp
js
adc
into
je
sub
aas
xor
mov
lcall
rol
xor
dec
lret
ljmp
cmpsl
icebp
xchg
push
rep
ljmp
imul
les
cmc
mov
std
pop
movsl
sbb
es
insl
mov
popa
mov
sbb
or
addr16
inc
mov
adc
add
notb
dec
push
jb
or
jnp
rcrl
in
xchg
fnstsw
cmpsb
iret
lock
dec
es
mov
ret
shl
pop
mov
daa
das
pop
adc
jecxz
dec
lret
push
add
jne
les
test
stc
jmp
mov
mov
jns
fbstp
sub
dec
lds
aas
mov
mov
xchg
inc
mov
lock
fs
and
lcall
nop
cmp
xchg
sbb
das
lods
add
data16
cmc
pop
jp
adc
and
jb
jle
adc
ret
jge
pushf
call
cmp
pop
jg
rcll
sbb
js
shl
mov
jecxz
mov
rcr
dec
pop
in
inc
mov
enter
lds
add
data16
pop
lods
push
fcom
mov
ffree
pop
mov
mov
add
cmp
mov
fwait
inc
scas
sub
push
inc
jno
or
das
inc
xor
mov
xchg
int3
loope
rcl
addb
shr
xchg
lods
lock
mov
jmp
addr16
sub
sahf
xchg
push
test
xchg
into
pushf
or
xchg
popf
pop
mov
xchg
mov
js
push
lea
push
jmp
dec
movsb
stos
mov
mov
mov
mov
adc
xor
es
dec
ds
pop
sahf
subl
dec
lahf
mov
cs
cmpsl
pop
pop
aad
std
mov
lods
inc
inc
jnp
repz
pusha
push
push
jp
fs
add
lahf
xor
rcrl
lret
xchg
int3
jg
pop
jns
test
bound
sbb
jno
mov
mov
mov
std
xorl
pusha
stos
cmpsl
dec
cli
pop
inc
out
call
sbb
jmp
xchg
imul
push
mov
cmpsb
mov
stc
outsb
pop
pushf
fcoml
movsb
aas
inc
adc
mov
mov
gs
jne
pop
push
dec
cld
xor
mov
pop
aam
adc
cmp
test
iret
jns
std
jg
cmp
fidivs
or
mov
pop
outsb
and
inc
mov
clc
in
mov
imul
insl
rorb
jns
shlb
jae
mov
adc
add
rorl
jo
ljmp
psubq
repnz
add
rclb
sub
sub
jmp
jne
out
orb
push
test
ss
jg
mov
clc
in
sub
mov
adc
pop
test
pop
rolb
adc
outsl
mov
xlat
les
test
mov
jae
dec
into
sbb
pusha
mov
adc
cmpsb
movsb
adc
popa
add
out
push
mov
mov
sub
imul
aas
adcl
and
popf
sahf
fnstsw
mov
push
sub
aaa
mov
shll
aaa
adc
pop
cmp
add
dec
dec
mov
push
mov
cmp
push
xchg
dec
fnstcw
xchg
fistps
sbb
cmp
movsb
out
adc
jbe
sbb
loopne
lods
iret
stos
ds
loope
dec
adc
test
pushf
inc
orb
push
add
mov
mov
or
or
cmp
scas
fldenv
nop
pop
jl
mov
mov
out
or
fisttps
pop
ds
push
xchg
push
shlb
bound
xchg
daa
add
mov
xchg
ds
sete
jno
test
mov
jmp
mov
loopne
jns
ss
es
xor
mov
xchg
xor
cmc
outsl
sahf
push
and
lock
cmp
js
mov
int3
adcb
cmc
std
mov
rcll
or
mov
xchg
xor
in
mov
lds
sbb
ja
daa
xor
push
daa
sub
dec
sahf
jl
push
sub
and
fistps
xlat
dec
adc
ljmp
mov
and
mov
stos
add
outsl
mov
lock
mov
in
out
sub
insl
push
in
add
push
cmp
jmp
and
jl
cltd
stos
jae
mov
xchg
inc
jbe
pop
fucomip
pop
sbb
add
push
cli
jge
sub
stc
inc
scas
dec
fidivrl
popl
cwtl
sahf
imul
mov
lods
sbb
insl
pop
and
lock
in
push
xchg
cmp
push
fiadds
xor
clc
shlb
adc
loop
fistpl
pop
xor
shll
stos
arpl
pop
ret
jl
xchg
cmc
das
and
mov
pop
repz
lahf
push
out
dec
sbb
lret
lahf
cld
rcrb
pop
pop
mov
adc
mov
mov
test
pop
es
ljmp
or
test
out
lods
mov
scas
xlat
popa
cs
popf
out
pop
clc
pop
sub
add
xchg
test
mov
or
call
push
jns
jne
insl
and
in
xchg
jge
push
cwtl
gs
push
push
fs
xchg
jg
lea
mov
inc
mov
mov
test
sub
inc
or
test
ja
jmp
mov
pop
mov
je
fstpt
mov
and
insl
popa
dec
aaa
xorl
or
scas
pop
mov
pop
fistps
mov
stos
jp
cmpsb
cmpsb
pop
sahf
fwait
mov
repnz
ss
mov
and
cld
mov
cmp
insl
jg
mov
ficoml
jge
mov
cltd
insl
mov
mov
movsb
test
mov
call
jne
xchg
mov
mov
stos
sbb
fistpl
mov
pop
outsl
lret
fldz
test
xchg
sub
push
mov
mov
dec
mov
dec
inc
mov
or
mov
xlat
sbb
or
sub
sbbb
xchg
movsl
mov
and
and
ret
dec
icebp
cld
mov
cmp
shll
in
nop
imul
mov
cmpb
pop
push
add
adc
fists
push
jmp
xchg
cmp
jo
ret
cmpsl
stc
int3
add
out
sbb
adcl
mov
or
jo
push
and
push
in
dec
push
xchg
ret
pop
pop
push
dec
or
sub
test
pop
hlt
dec
pop
arpl
jge
loopne
lock
xchg
adc
loop
cmp
loop
xchg
jle
ret
jno
and
xchg
add
mov
sbb
lds
xorl
pop
cmp
loope
sbb
orl
int3
inc
fiadds
bnd
add
pusha
jp
filds
push
imul
les
leave
cmp
or
xor
xor
mov
ds
cmpsb
jge
gs
cmc
mov
loopne
pop
xor
adc
ds
cmp
sahf
push
adc
enter
jmp
pusha
xchg
fsubrp
fmuls
dec
adc
mov
xchg
pop
daa
cwtl
mov
adcl
pop
insb
cmp
lahf
mov
negb
mov
sub
insb
jns
xor
xchg
xlat
in
cmpb
xchg
jmp
sub
sti
stc
dec
js
test
mov
pop
pop
fwait
sar
adc
cmp
pop
sbb
mov
enter
mov
pusha
push
sti
fiadds
sbb
decb
imul
insl
shrb
imul
sub
push
xchg
repnz
mov
push
mov
cmc
adc
aam
add
inc
xchg
xchg
inc
mov
adcl
repnz
sub
push
fists
mov
js
or
lods
addr16
xor
and
mov
mov
pop
sub
lret
pusha
sub
mov
pop
aaa
aam
das
sub
adc
and
or
inc
add
pop
mov
xchg
cmp
sbb
sbb
mov
mov
xchg
add
jecxz
pop
ljmp
popf
int
pop
mov
mov
xchg
pop
jmp
mov
xchg
insl
mov
mov
cmp
cmp
aam
je
shll
pop
adc
ret
mov
repnz
stos
in
stc
push
mov
cwtl
adc
mov
xchg
or
lods
push
repnz
push
pop
ss
pusha
jge
adc
sub
and
cmpsb
xchg
nop
roll
xchg
pop
dec
icebp
stos
push
stos
repz
pushf
xor
push
mov
outsb
push
jecxz
inc
xor
or
aas
mov
pop
mul
and
pop
push
cmp
sub
add
jb
add
repnz
mov
lods
jecxz
mov
jmp
sub
in
test
push
pop
ret
je
pop
mov
add
shl
fistpl
faddl
clc
mov
ret
sub
cmp
jae
fninit
mov
adc
mov
mov
arpl
loopne
mov
fistps
cwtl
movsb
lea
adc
push
add
cwtl
cli
dec
xchg
imulb
pop
psadbw
sub
push
xor
push
lock
ljmp
fisttps
push
mov
cmp
fildl
mov
adc
sub
cmp
or
mov
aaa
aam
pop
int3
dec
jmp
inc
add
fstpl
dec
lds
pop
jmp
dec
dec
outsb
mov
mov
rcll
hlt
xorb
xor
mov
outsb
jg
insb
in
aaa
jo
pop
test
paddq
outsl
xchg
test
mov
xlat
in
stos
mov
mov
pop
sub
std
mov
lock
pop
push
bnd
fdivs
imul
mov
idivb
testl
cli
dec
inc
mov
mov
bnd
sub
je
pop
add
mov
adc
scas
add
imul
push
push
sbb
sahf
out
mov
popa
cltd
xchg
push
lahf
aas
sbb
je
lcall
lea
fidivrl
jno
push
push
loop
mov
into
mov
mov
in
ret
pop
pop
cmp
movl
icebp
adc
insl
sbbl
je
mov
push
pop
adc
stc
sbb
dec
nop
cmpsl
xor
xor
xchg
test
xor
adc
in
pop
mov
xlat
xchg
daa
imul
imul
inc
hlt
pop
push
pushf
enter
sub
lret
lcall
jns
outsl
js
lret
jae
pop
insl
fistpl
outsb
mov
mov
mov
or
test
pop
sarb
movsb
jne
cmp
jo
mov
ret
pop
jbe
es
push
pop
outsl
sbb
aam
jb
dec
inc
cltd
out
jp
mov
fcomps
sti
sbb
jg
push
imul
jne
or
fwait
aad
xchg
and
arpl
dec
lods
xchg
jge,pn
sub
or
xor
test
outsl
jnp
xchg
repnz
and
xor
es
mov
jne
test
lcall
out
ret
xor
fs
fists
js
mov
dec
insl
inc
lret
inc
lahf
push
inc
sbb
jno
shlb
xlat
inc
xchg
pop
and
lcall
imul
add
scas
mov
dec
jno
rsqrtps
mov
fistps
loop
lds
xchg
pop
sub
fwait
sahf
movsb
dec
rcll
fxch
add
lahf
sbb
cmp
pushf
mov
jmp
jge
ja
sbb
iret
test
mov
insb
icebp
call
pop
fwait
enter
xchg
jns
shl
push
xor
stos
outsl
jns
lods
xchg
and
mulb
pop
lods
pop
mov
stos
es
rcrb
lret
cltd
inc
popf
out
stos
or
rclb
jae
sub
lea
mov
pusha
hlt
lcall
fnstcw
push
nop
fwait
in
adc
sbb
cmp
aam
jbe
mov
addr16
test
dec
xchg
sub
insl
insl
adc
iret
mov
pop
rcl
bnd
mov
and
sbb
xchg
xor
fisubl
mov
test
xlat
inc
mov
in
add
jno
sbb
popf
ror
dec
xchg
cmc
jmp
or
push
mov
js
aas
rcrb
mov
pushf
jno
lret
mov
popw
negb
pop
dec
or
xchg
bound
lds
pop
test
inc
jnp
and
add
pop
lahf
movsl
sbb
pop
out
or
cmovle
xlat
or
pop
and
adc
jo
dec
cmpsl
jne
sub
push
push
pop
sub
mov
sbb
sub
mov
inc
test
push
fstl
fnstenv
or
xchg
mov
cld
ja
ss
fcom
loope
popa
pop
or
xchg
aad
clc
jae
sbb
or
lahf
and
xchg
iret
insl
xchg
push
ret
inc
addr16
mov
ljmp
popf
imul
xchg
dec
lret
cmp
int
xorb
inc
repz
dec
cmpsb
sbb
test
aam
adc
stos
pop
out
cltd
rcrb
push
mov
pop
gs
scas
sti
or
insl
adc
mov
cli
mov
call
int3
push
hlt
int3
shl
xchg
arpl
std
call
ljmp
push
into
mov
cmc
jmp
les
sbb
push
sub
mov
mov
lahf
mov
jno
scas
aam
xlat
xchg
cltd
pop
add
add
mov
xchg
int3
sbb
rcll
jp
push
mov
cmc
std
jnp
mov
jl
inc
je
push
incl
add
adc
in
adc
or
inc
sahf
jl
jl
sarl
leave
cld
xor
movsb
mov
test
aaa
daa
xor
popa
jl
std
jmp
jg
xchg
jg
xor
shr
xor
hlt
pop
sub
loope
push
push
ror
nop
mov
mov
adc
mov
test
jae
cmp
mov
lods
sbb
pop
je
out
rcl
mulb
fiaddl
or
or
dec
pop
pusha
mov
outsb
lret
jbe
cmp
xor
dec
jnp
and
rcl
cltd
adc
mov
inc
arpl
call
inc
repnz
int3
insl
jp
clc
sub
xchg
repnz
cwtl
push
cwtl
dec
stos
enter
js
or
scas
xchg
scas
inc
nop
jo
int3
out
pop
test
push
xor
dec
bound
inc
xlat
fwait
mov
lahf
cli
sbb
mov
mov
or
xchg
sti
and
leave
jl
in
int3
popa
jae
icebp
xlat
sub
lret
cli
mov
xor
xor
addl
push
jnp
les
xchg
jbe
adc
sub
jns
cmp
pop
in
mov
inc
pop
aam
movsb
bnd
loopne
dec
pop
ljmp
gs
fwait
test
push
lea
xor
cmc
cmpsb
divl
lock
pop
daa
fisttpll
push
add
push
sahf
jns
jle
jae
ds
fdivr
stc
inc
sub
push
call
and
or
pop
mov
fistpll
pop
push
sbb
add
dec
ret
stc
sbb
repnz
xor
adc
and
insl
mov
lret
jle
pop
fsub
jmp
mov
imul
or
rcll
jno
adc
sub
add
adc
push
ficompl
cmp
adc
and
loope
mov
rorl
sbb
aaa
loopne
std
jge
push
xchg
xchg
aaa
mov
jnp
push
lea
mov
pop
sbb
neg
cmpb
adc
bound
loope
xor
xlat
mov
jbe
fbstp
rcll
xor
dec
fisttps
pop
divb
je
xchg
movsl
outsl
cmc
shll
sbb
xchg
push
xchg
out
loope
cltd
mov
sub
stc
xlat
enter
outsb
dec
push
or
fmull
sbb
fwait
sbbb
lret
jne
pop
push
pusha
jp
scas
popa
inc
dec
lahf
lcall
and
dec
aas
dec
xchg
jl
fsubrs
fnstenv
dec
xchg
ds
out
pop
in
xchg
push
jge
xchg
aad
jg
sub
in
stos
cmpsb
adc
mov
sub
lcall
fxch
stos
sarb
pop
push
out
xchg
fwait
mov
div
je
enter
inc
pop
jne
nop
pushf
lahf
mov
sub
xchg
pop
es
data16
les
xor
ss
aam
aam
sbb
cmc
rolb
jo
shll
mov
push
out
adc
pop
inc
and
mov
out
xchg
push
js
or
dec
jle
mov
cmpl
scas
jp
push
jno
xchg
std
cwtl
pop
sub
ja
dec
mov
mov
mov
cmp
out
iret
add
or
iret
rcrl
cmp
addl
shr
pushf
leave
jp
xchg
imulb
sbb
mov
stc
jns
or
ds
imul
lea
mov
inc
jne
adc
xchg
test
lret
xchg
or
jp
or
xchg
mov
subl
test
outsl
push
push
push
pop
push
popf
push
or
mov
mov
in
loopne
mov
aaa
pop
xor
mov
in
sub
jl
insl
les
insl
and
mov
icebp
mov
popl
sbbb
sbb
jecxz
dec
ret
mov
subb
jbe
sahf
fadds
shlb
in
sbb
aaa
inc
pop
cmpsb
pop
jne
dec
adcl
mov
addb
dec
sub
sbb
add
mov
inc
add
dec
mov
cmp
mov
sahf
adc
jns
in
loopne
mov
test
cmc
inc
sbb
shlb
add
arpl
fdivrp
push
dec
cmp
fistl
pop
cmp
jg
fwait
icebp
into
jne
xor
enter
mov
daa
jno
aam
incb
sbb
ss
nop
mov
jae
fwait
ret
push
sub
shll
dec
mull
or
jns
loop
inc
imulb
pop
popf
push
jno
test
hlt
lret
or
ljmp
fstpt
and
aam
movb
or
cmc
fisubl
cmp
mov
jl
jns
clc
fistpll
mov
pop
pushf
dec
push
out
dec
aas
push
cmp
fdiv
mov
or
popa
cmpsl
sub
sti
or
mov
jae
xor
sbb
push
mov
xchg
mov
mov
dec
xchg
popa
and
imul
push
in
loop
cwtl
pusha
mov
int3
mov
xor
jg
lds
xchg
adc
xchg
sub
pop
orl
sub
sub
jbe
mov
mov
pop
xchg
nop
stos
cmpsb
dec
std
sahf
jae
fs
nop
cld
mov
sbb
int3
dec
jnp
in
jns
jge
cmp
sbb
cmp
sbb
cmp
sbb
xor
push
mov
mov
sbb
cmp
shrb
aaa
cmpsl
fcomps
test
addr16
ret
cmp
cltd
dec
ret
sub
mov
dec
shrb
mov
mov
jo
jbe
in
jmp
or
pop
repz
insl
and
jo
gs
xchg
adc
mov
fdivp
xor
fs
sub
adc
std
enter
cwtl
fisttps
in
jp
test
add
fnsave
mov
dec
cltd
add
sbb
xor
xchg
lret
xchg
inc
add
decb
enter
test
dec
pop
bound
or
pop
out
mov
adc
movsb
adc
pop
mov
xchg
negb
orb
jne
icebp
push
pop
inc
sbb
lock
add
mov
jl
jg
xor
mov
loopne
dec
sahf
add
cmp
dec
shl
dec
adc
push
stc
cmp
or
ja
adc
pop
mov
enter
xchg
mov
mov
mov
mov
sbb
in
in
dec
sbbl
cmp
mov
inc
aam
cs
sbb
and
xchg
xchg
dec
ret
gs
xchg
mov
push
pop
and
cmpsb
int
add
mov
lods
jo
mov
movsl
fsubs
adc
xor
cli
or
sti
xchg
lcall
push
lock
xchg
dec
ret
push
insb
xchg
inc
popa
push
sbb
push
stc
push
xchg
in
and
lds
fldcw
pop
and
push
adc
jmp
lds
sbb
dec
jno
ja
sbb
push
sub
dec
pop
mov
xor
push
inc
and
jbe
into
xor
push
mov
jns
les
jnp
loope
cmp
cld
xchg
cld
loop
dec
es
shrl
and
insb
fldcw
sub
addr16
jl
dec
or
and
pop
ds
sub
repnz
sbb
out
sbb
mov
inc
lcall
jbe
popw
and
enter
shll
das
and
outsl
xchg
and
jae
and
cmp
jne
push
je
cmp
stc
add
sarb
inc
pusha
fadds
aad
pushf
mov
pop
out
enter
lds
sti
mov
fisttps
jb
mov
cmp
fnstenv
jae
in
mov
xchg
int3
out
dec
jns
push
cmp
mov
cmp
cmc
pop
fwait
je
cmc
aaa
popf
outsb
push
nop
sub
jle
or
popa
jns
mov
shl
notl
std
add
mov
fdivl
jmp
pop
jo
push
outsl
xor
mov
inc
mov
insb
adc
into
dec
xor
push
jbe
mov
mov
fs
jae
mov
pop
push
cmp
addr16
sbb
sbb
dec
xor
dec
inc
test
push
movntps
and
jo
subb
push
push
mov
lahf
cmp
xor
add
leave
popa
jmp
dec
popf
push
add
out
pop
mov
fsubl
add
adc
fldl
pop
aas
fwait
push
enter
pop
scas
push
and
push
lahf
mov
in
je
fwait
bnd
iret
test
cltd
cltd
aas
sub
dec
or
xchg
jle
int3
push
jnp
mov
addr16
push
cmp
fldt
push
sbb
push
mov
or
jmp
shl
imul
jle
in
xchg
hlt
out
fnsave
loopne
xor
insl
sub
inc
imul
jno
adc
aaa
push
insb
mov
stc
sub
sub
xchg
dec
jns
lcall
jg
mov
pop
jnp
call
mov
addr16
xchg
outsl
arpl
sahf
lret
jns
enter
dec
mov
sub
ljmp
push
mov
dec
hlt
xor
pop
push
jo
pop
push
adc
mov
jns
fnstcw
sbb
pop
and
mov
ds
jno
pop
mov
out
pushf
pop
xorb
push
jno
clc
mov
stos
dec
shr
or
cmp
push
mov
add
xchg
mov
sbb
stos
leave
gs
cmp
scas
push
icebp
adc
mov
arpl
mov
sub
push
dec
scas
mov
or
sbb
mov
test
cmp
jl
mov
sbb
sbbb
cmp
fsubrs
xor
cmp
lea
add
sbb
xlat
jg
xor
pop
push
sbb
adc
mov
pop
dec
js
subb
add
shl
xor
repz
add
xor
test
jl
xor
jne
jne
aaa
lea
push
dec
outsb
sbb
out
test
mov
adc
movsb
xor
mov
js
inc
mov
jle
cmp
or
mov
pusha
outsb
test
mov
jmp
aad
sub
scas
stos
in
fwait
sbb
xor
mov
or
and
ja
ja
jmp
add
pop
add
sbb
add
rcrl
mov
icebp
dec
aaa
cmp
sti
mov
sahf
in
push
mov
fs
mov
push
leave
push
inc
outsb
xor
lods
xor
pop
jnp
pop
fstl
cltd
jp
es
xchg
das
ret
insb
popf
pop
xor
jns
pop
mov
jne
dec
aaa
cwtl
sub
mov
mov
mov
jp
xlat
shlb
jge
dec
in
sbb
dec
jmp
push
mov
add
test
out
inc
sahf
out
rcrl
daa
out
xchg
ret
pusha
addr16
or
jo
popf
fistps
js
fdivrs
and
sarl
negb
push
dec
in
repnz
ret
cmpsb
daa
bound
mov
jno
and
les
push
lret
xchg
imul
and
sbb
inc
push
push
repnz
rcr
and
movsl
and
jge
fwait
mov
dec
into
jbe
mov
jbe
imul
jle
mov
push
mov
nop
scas
cmp
xor
mov
dec
xchg
adc
xor
enter
and
mov
into
mov
jns
movsb
enter
xchg
jno
aad
divl
movb
je
loopne
testb
imul
pop
sub
mov
dec
mov
sub
mov
sti
imul
rcrb
and
jge
push
aam
adc
cmp
and
mov
icebp
dec
and
loop
jle
sub
mov
ss
lret
ret
loope
pop
mov
mov
jmp
icebp
inc
insl
fwait
aaa
mov
dec
jge
mov
push
add
data16
mov
data16
mov
data16
in
cmpsl
gs
mov
dec
and
add
lahf
sub
jp
les
pop
jle
cltd
inc
mov
nop
mov
xlat
loop
fstsw
sbb
mov
testl
popa
xchg
popa
push
sbb
fmuls
lods
adc
jb
sbb
test
fcmovu
adc
adc
pop
dec
outsb
rclb
lret
dec
mov
or
sbb
xor
cld
fwait
add
inc
aad
ljmp
inc
push
imul
pop
push
mov
xchg
leave
jno
xchg
cmp
pusha
xlat
out
ja
inc
mov
jns
ja
out
xorl
inc
fcoms
pop
lahf
aaa
mov
add
xor
hlt
dec
mov
test
ja
jns
mov
inc
mov
pop
cmpsl
fsubs
in
push
std
pop
adc
fdivrs
inc
test
mov
mov
mov
in
push
mov
mov
sub
int3
packuswb
inc
in
dec
cmp
in
mov
dec
xor
push
negl
sarl
sub
in
mov
add
sbbb
pop
jp
je
xlat
mov
lea
dec
outsl
jp
cmpsl
insl
sahf
pop
rcl
cmpsl
hlt
mov
cwtl
and
jl
les
push
xor
fstl
jne
movsl
add
nop
stos
jl
dec
xchg
or
adc
mov
std
mov
mov
sbb
xchg
adc
and
mov
push
aad
js
fmull
xchg
push
mov
cmp
jge
jmp
sub
push
in
addr16
sti
push
jg
sbb
movsb
dec
cmpsb
adc
lods
pop
add
jge
push
loope
rcrb
test
movsb
xchg
enter
pop
cli
test
push
pop
dec
inc
scas
out
push
sbb
stos
in
mov
fincstp
sti
mov
dec
mov
insl
aam
xchg
aad
imul
and
mov
insl
lret
jl
stos
mov
popf
push
pop
pop
cmp
ja
dec
inc
mov
sbb
dec
stos
cmc
dec
dec
push
cltd
lret
lds
nop
jmp
sbb
insl
adc
mov
xchg
add
jge
mov
xchg
in
mov
push
xlat
sub
xlat
mov
mov
cmp
mov
push
dec
xchg
sub
cmp
push
sbb
mov
push
mov
mov
jns
xor
imul
outsb
stos
pop
jno
cld
mov
pop
jne
cmp
jo
mov
enter
cltd
iret
mov
stos
pop
mov
movsb
aad
fwait
sub
inc
mov
xlat
pop
mov
rcr
mov
jp
adc
pop
or
cmp
jno
jecxz
jne
imul
pop
and
sbb
lods
cmp
aam
push
add
mov
rolb
or
jg
es
lods
mov
mov
push
adc
movsb
pop
repnz
pop
nop
dec
icebp
lods
insl
pop
sub
cmpl
jne
inc
jne
xchg
pop
xor
push
aad
inc
lcall
sub
mov
xchg
push
imul
jae
mov
popl
mov
fsubs
jle
movsb
es
add
pop
mov
lahf
mov
pop
fisubrs
push
imul
push
pop
or
xor
gs
mov
cmp
outsl
add
xor
xchg
push
push
adc
sub
adc
sub
push
aad
mov
lcall
fcompl
inc
call
and
push
out
sub
dec
fs
add
imul
dec
lcall
popf
adc
stos
rcrb
add
nop
cmpsb
mov
xor
xor
or
jne
push
stos
dec
lcall
jp
jno
push
idivb
lret
mov
mov
or
lods
imul
dec
cmp
jno
mov
adc
push
in
add
outsl
in
movsb
test
fmuls
cbtw
xor
cmp
xchg
leave
std
gs
sub
or
inc
jae
aaa
in
rcll
adc
test
push
stos
lds
notb
fs
mov
push
into
jp
lahf
in
jbe
push
mov
or
sbb
les
adc
mov
cmp
dec
push
push
or
repz
nop
add
adc
cmp
test
imul
xchg
mov
xorl
xlat
notb
or
dec
ljmp
jl
js
in
pop
pop
and
lods
push
xchg
mov
push
sbb
sti
fbld
jecxz
adc
or
je
outsb
jne
push
mov
negb
pop
sbb
cmp
mov
sub
in
adc
sbb
adc
fdivs
mov
shl
frstpm(287
adc
adc
or
clc
fs
or
outsl
ftst
jb
outsl
js
iret
or
ss
stos
inc
jo
jg
lods
mov
inc
pop
cmpsl
call
mov
test
inc
xchg
jns
jle
out
cmp
adc
fcompl
stos
outsl
jns
mov
xor
daa
jmp
sub
hlt
mov
xlat
pop
xlat
add
bound
imul
aam
mov
add
inc
inc
jae
mov
mov
outsl
lds
xchg
lods
and
sub
xor
test
vpmovsxbw
fwait
aas
inc
sbb
repnz
inc
or
lds
and
in
mov
shrb
push
mov
jp
fmull
imul
sub
or
cmc
cmp
sbb
leave
in
pop
pop
jecxz
pop
pop
jmp
test
shlb
fs
lods
dec
test
test
sti
mov
pop
rorb
out
les
insl
and
ret
aas
imul
jg
push
std
xchg
xchg
pop
xchg
jge
xor
xlat
jmp
mov
xchg
xchg
ret
and
xlat
push
cmpsb
shlb
push
push
daa
xchg
pushf
add
je
dec
subl
cmc
xchg
imul
adc
es
xor
ja
cmc
xor
sub
nop
mov
and
fdiv
insl
sbb
les
pop
cmc
xchg
xchg
push
fdivl
jge
int
xchg
jns
jae
pop
pop
jno
mov
mov
out
mov
shll
popf
rorb
sete
ficomps
dec
outsb
insl
push
jns
pop
daa
pop
or
lahf
jp
inc
shll
lea
and
jo
cmp
push
xor
jno
adc
pop
filds
mov
lods
clc
dec
cmpsl
in
fcmovnu
mov
xchg
roll
ret
xor
aaa
addl
and
lock
mov
cmp
cwtl
sub
mov
inc
in
adc
adcb
arpl
push
in
xchg
call
push
xor
in
jmp
leave
fwait
dec
push
enter
jbe
rclb
imul
cmc
jp
mov
mov
add
lea
xchg
cmp
shrb
adc
enter
dec
cltd
rorb
xorb
outsb
dec
push
fstl
add
jne
cmpsl
xchg
sti
int
fsubrs
pop
mov
pop
sub
sub
sbb
out
int3
and
cli
mov
jp
adcl
sub
dec
pop
sub
ret
dec
xor
ss
shll
ret
cltd
loope
mov
out
out
xcrypt-ctr
cmpsl
fisttps
test
adcl
cmp
enter
nop
popa
or
fdivrs
les
fs
popa
pop
xor
popa
iret
icebp
das
pop
jbe
adc
add
add
mov
ficompl
mov
add
fwait
jo
sbb
xchg
cmpsb
jbe
ljmp
mov
jle
cli
cmp
leave
adc
pop
fisubl
jle
cmp
inc
fisttpll
ja
pushf
cmp
jbe
clc
or
and
sti
adc
lret
ror
scas
pop
add
ja
dec
pop
jl
int3
lock
mov
fidivl
fucom
xor
fsubl
int
xchg
and
adc
sbb
out
cli
outsb
inc
icebp
sub
out
or
push
xchg
cmpsl
icebp
iret
push
out
leave
push
jle
jne
les
test
stos
jae
mov
scas
push
gs
daa
xchg
pop
mov
mov
cwtl
and
and
and
pusha
jo
pop
pop
sbb
mov
jbe
out
cmp
push
xchg
fildl
les
jne
cmp
cld
loope
xchg
leave
out
repz
mov
subl
cmp
jg
ret
sarb
aas
sub
xlat
cltd
idivb
jno
push
lcall
fiaddl
adc
cwtl
dec
aas
outsl
addl
jl
pop
mov
ret
or
inc
sbbb
dec
icebp
out
fisubrl
sahf
pop
enter
inc
or
nopl
lds
ret
aad
cmp
fdivrs
mov
jg
ljmp
dec
inc
push
dec
cmc
mov
xchg
fwait
add
les
pop
sbb
jns
lock
xchg
cltd
sbb
jl
pop
mov
mov
fs
shl
scas
mov
daa
lods
pop
mov
jecxz
mov
dec
jg
ljmp
ja
push
inc
jne
cwtl
xchg
mov
jne
les
pop
sbb
pop
int
mov
mov
add
and
icebp
iret
mov
bsf
in
shl
pop
loope
cmp
jg
ljmp
mov
sbb
sub
lds
into
imul
push
mov
jl
das
aad
xchg
add
dec
std
jne
loope
imul
cmp
psubb
fsubs
fisttpl
dec
xchg
jl
xchg
imul
lret
es
fnstcw
xlat
or
pop
popf
jmp
add
mov
jbe
aam
ret
or
pop
shlb
hlt
xor
or
pusha
outsb
test
ljmp
aad
pop
icebp
push
repz
orl
pop
sub
es
cmp
mov
cmp
imul
add
cmp
pusha
xchg
cmp
stos
cmp
sbb
popf
shl
adc
rorl
xor
lret
xchg
lret
ss
out
push
repz
clc
push
sarb
push
or
add
jge
das
shrb
xlat
adc
mov
add
scas
sbb
ljmp
rclb
sub
nopl
ljmp
hlt
jg
popf
adc
ret
jmp
add
fwait
pop
and
cld
jg
cmp
adc
xor
es
leave
add
pop
test
adc
xor
into
in
mov
leave
int3
shll
dec
xlat
into
adc
inc
mull
add
scas
test
out
xchg
cltd
adc
jae
or
pop
xor
add
ds
xor
sahf
je
sub
xor
adc
sbb
cmc
sar
sub
mov
ror
pop
bound
in
sub
add
test
scas
cmc
xchg
shlb
or
and
outsb
push
push
dec
fst
nop
dec
sub
add
imul
aad
sbb
push
sub
lock
movl
out
lahf
adc
push
std
cmp
lahf
add
aam
push
mov
hlt
leave
push
repz
sub
sbb
xchg
aaa
outsb
add
xchg
stc
repz
js
or
sub
pop
mov
ds
jnp
lret
mov
jbe
dec
push
pop
lea
inc
sub
add
inc
add
jmp
mov
lock
or
sbb
and
cli
rep
outsl
or
das
sbb
mov
test
xchg
loop
int
andb
dec
andb
or
ljmp
rorl
fstpl
push
jb
dec
xchg
xor
jae
and
fisubl
xchg
rol
mov
mov
pop
fs
js
lahf
ret
cmp
mov
cmpl
mov
push
addb
addr16
lcall
and
pop
dec
xor
sub
mov
inc
adc
push
adc
pop
pop
movsb
loopne
jae
inc
jnp
push
inc
fsub
pop
aas
or
nop
sbb
mov
xchg
push
jbe
lahf
stos
outsb
xchg
mov
in
and
xor
sub
xchg
in
subl
sub
mov
inc
addr16
mov
aam
dec
mov
ret
cmp
inc
cmp
pusha
dec
or
xchg
jno
stos
pop
adc
push
mov
shll
mov
sbb
fistps
loopne
jge
mov
aaa
daa
ss
neg
mov
push
add
or
mov
call
adc
decl
xchg
shl
std
js
push
outsb
mov
scas
mov
inc
mov
adc
dec
push
pusha
xor
xchg
add
jb
test
imul
test
jne
push
gs
push
add
jge
pop
popa
jge
sbb
mov
dec
adc
es
ret
in
xor
repz
or
mov
andb
mov
mov
adcl
bound
in
pop
cld
mov
jne
movsl
int3
jns
pop
push
mov
mov
popf
cmp
aaa
dec
jp
pushf
negb
js
test
or
push
jbe
outsl
xchg
cmp
mov
mov
stos
mov
mov
in
stos
jle
jne
mov
mov
lret
mov
popa
and
mov
fwait
jmp
sub
pop
das
fsubr
lret
icebp
cld
cmp
pusha
jns
in
icebp
push
mov
in
inc
test
mov
xor
aaa
add
scas
idivl
les
pop
push
inc
sub
or
nopl
jle
push
jb
inc
fwait
mov
fildll
mov
mov
int
stos
sub
mov
jne
jp
adc
sbb
daa
in
lock
sbb
dec
outsb
loop
outsl
jp
sbb
xchg
fucomip
data16
enter
addr16
mov
jae
das
xor
lods
pop
pop
mov
call
in
xor
push
push
mov
shll
movsb
push
push
lods
xchg
repz
shlb
mov
movsb
jns
push
cmp
popa
push
daa
jae
jle
xor
pop
adc
push
cmp
imul
sbb
insl
stos
mov
popl
push
mov
xor
popa
adc
sbb
stos
xor
xchg
jno
addr16
xor
icebp
out
xchg
mov
push
push
mov
fstpl
push
sbb
sub
ret
ja
add
xlat
adc
inc
lds
xchg
jecxz
mov
mov
inc
cmp
in
mov
sub
push
lret
dec
inc
outsb
into
or
xchg
xor
les
or
dec
mov
or
sbb
loopne
push
inc
xor
or
cli
enter
scas
and
loop
xchg
lret
out
sahf
sbb
bound
mov
adc
pop
jo,pt
add
xchg
add
insb
sbb
scas
roll
pop
jge
pop
fsubl
or
pop
lcall
push
mov
xchg
mov
ret
cmp
sub
sbb
pop
rcll
adc
and
adc
fbld
sbb
mov
mov
outsb
out
test
aam
test
jmp
cld
mov
mov
and
mov
and
pop
jo
lea
movsb
pop
int
in
iret
test
push
push
add
jae
or
dec
cmp
push
fimuls
and
aas
mov
jg
mov
mov
dec
pop
in
or
das
or
outsl
lret
fdivrp
and
sbbb
in
movsb
mov
dec
adc
setl
imul
mov
nopl
sub
push
ja
mov
or
jge
push
inc
push
mov
dec
out
cmpsb
fwait
dec
in
fwait
cmpsl
cmp
nop
ja
fwait
les
dec
jp
mov
inc
std
jb
pop
sub
xchg
mov
adc
dec
or
add
aas
adc
adc
fmul
pushf
pop
lret
pop
fidivs
fists
or
mov
xchg
out
cmp
dec
test
lret
mov
mov
sbb
fucomi
lock
pop
arpl
cmp
mov
cs
test
xchg
adc
aaa
push
imul
test
mov
push
sarb
adc
leave
imul
scas
mov
les
loop
pop
xorb
dec
aam
ret
loop
out
stos
mov
ret
ja
push
sub
aam
es
mov
bound
mov
es
pop
sbb
jo
mov
int
inc
push
test
testl
rcll
in
fmull
lahf
stos
jae
mov
push
es
jno
cmpsb
xchg
or
pop
fcompl
stc
fdivr
sarl
mov
sub
adcl
nop
and
adc
xchg
imul
pushf
push
fcoms
push
mov
das
inc
nop
dec
jne
sahf
negb
data16
xor
jle
jmp
lods
pop
outsl
fldt
pop
sbb
mov
pop
mov
mov
pop
imul
adc
pop
fsubrl
xchg
mov
test
mov
jo
add
push
push
lea
dec
add
mov
lea
jo
xor
xchg
push
jb
xchg
in
fisttps
pusha
add
lahf
dec
push
sbb
or
std
lahf
jmp
nop
xchg
rolb
arpl
lahf
sub
or
sbb
cmp
adc
imul
out
mov
orl
or
and
pusha
rclb
in
imul
or
push
push
movsl
sub
pop
in
sbb
hlt
int
sbb
mov
ja
and
lahf
lock
and
and
aam
push
outsl
inc
in
add
sahf
enter
rorb
fcomps
xchg
jle
or
jl
cmpl
out
adc
xor
negl
jb
mov
inc
pop
in
in
mov
out
loop
mov
mov
jp
je
lea
xchg
adc
adc
pop
and
mov
loopne
mov
adc
int
mov
push
and
nop
mov
popa
and
mov
icebp
fildll
into
push
push
jp
cmp
xor
cmpsb
add
xchg
xor
jmp
lea
push
dec
push
fwait
xor
mov
outsb
jae
in
adc
mov
push
cmc
mov
scas
jbe
sbb
and
push
fistl
xchg
mov
push
stc
imul
push
daa
or
repz
cmpsl
inc
stc
cmp
aam
ret
or
imul
rcrl
ret
daa
or
mov
xchg
push
jne
call
xor
inc
xchg
xor
dec
mov
jmp
add
out
in
mov
fwait
test
pusha
cmp
loop
jbe
jns
jmp
sbb
xor
in
inc
sub
nop
nop
mov
jae
imul
mov
push
push
mov
cwtl
mov
add
rcll
int3
cmp
dec
test
cmp
xlat
inc
pop
negl
cmp
mov
xor
dec
sbb
push
mov
mov
mov
push
dec
fwait
rol
and
int
mov
dec
push
pop
mov
subb
mov
fmull
bound
scas
outsb
nop
mov
push
jecxz
rol
insb
insl
mov
xchg
push
pop
rcl
rclb
push
aad
sahf
in
xchg
js
inc
insl
push
test
in
add
cmp
xor
and
and
and
cmp
xor
cld
xchg
ljmp
inc
imul
xchg
out
push
xor
addb
out
jns
push
aas
mov
pushf
sub
cwtl
rorb
ss
push
std
push
shrl
xchg
push
adcb
or
pop
popf
pop
sbb
cwtl
daa
cld
mov
jae
inc
or
inc
or
inc
cmpsl
jae
inc
inc
repz
pop
mov
repz
mov
or
xor
ret
cmp
lods
test
gs
or
and
push
cmp
mov
push
loopne
or
lret
cltd
adc
loopne
cmp
sub
and
fdivr
push
addr16
sub
repnz
jno
sbb
xor
pop
adcl
ljmp
testb
jne
push
movsb
out
pop
inc
cwtl
push
pop
push
arpl
mov
mov
jae
mov
sub
dec
scas
jno
cmp
adc
pop
mov
cld
mov
mov
rorb
es
cwtl
out
mov
or
mov
sbb
push
mov
pushf
cmpsb
ss
push
ja
pop
sbb
jno
test
mov
cmp
lret
mov
lock
cmpsb
jb
adc
in
push
and
lcall
pop
imul
sub
add
repnz
jbe
jnp
mov
fwait
jne
sarb
insb
cs
add
mov
icebp
imul
mov
fbstp
lcall
dec
mov
test
sbb
jbe
dec
ss
test
mov
addr16
in
setae
jge
dec
in
dec
insb
push
jmp
pop
popf
pop
cmpsl
sbb
subl
xor
mov
mov
aam
pop
aaa
mov
cld
mov
inc
push
xor
mov
mov
movsb
fwait
adc
jl
push
dec
xor
insb
sahf
lock
pop
lret
dec
pushf
cmp
add
or
mov
lahf
mov
jne,pn
fcomi
popf
cmpsb
push
push
mov
inc
insb
iret
push
jp
pop
int3
js
stc
dec
xorb
sub
xor
mov
push
mov
mov
pop
pop
pop
jae
lods
jl
adc
jle
dec
mov
pop
cmp
sbbb
push
or
xchg
adc
lahf
data16
dec
inc
pop
xor
push
ret
xchg
inc
jg
push
daa
inc
call
cmpsb
jae
jmp
clc
jge
imul
lret
mov
push
jecxz
xchg
movsb
dec
pop
sub
leave
mov
sbb
fists
push
ja
jno
dec
jl
jge
mov
rcrb
test
outsb
jge
ret
in
pusha
pop
ret
adc
xlat
popa
ljmp
outsl
lcall
xchg
outsb
sbb
xchg
sbb
dec
push
andb
out
cmp
stc
pop
daa
add
dec
cmc
pop
out
mov
outsb
pop
les
pushf
and
arpl
mov
lock
aam
fstps
sbb
pop
ljmp
xchg
lcall
cld
das
orb
push
push
arpl
jnp
movl
mov
lahf
mov
jb
movsb
insl
scas
addr16
jle
inc
sub
jae
les
mov
imul
sbb
movsb
adc
add
pop
lret
jo
mov
pslld
test
mov
outsb
sub
cmp
mov
pop
daa
adc
test
mov
dec
sbb
inc
std
pop
push
mov
ret
rcrl
data16
push
ret
adc
aaa
andb
mov
in
mov
xchg
mov
push
jp
dec
lret
xchg
pop
sahf
inc
sbb
lods
sarb
lock
jns
pop
in
mov
addr16
test
jbe
int3
stos
jb
adc
test
int
mov
mov
mov
icebp
sub
mov
ljmp
or
push
popa
add
adc
loopne
jmp
sbb
and
subl
lahf
sti
shll
mov
cli
nop
ljmp
push
add
pusha
pop
in
repnz
pop
mov
push
mov
das
in
clc
jbe
cs
or
or
rcrl
das
inc
push
mov
fstl
mov
dec
adc
sub
mov
and
cs
pop
testb
hlt
pop
out
dec
xchg
test
push
or
int3
sarb
out
sub
addr16
dec
cmp
xchg
in
stc
nop
cmc
pop
fisubs
jg
inc
push
pop
lods
fsts
loope
xchg
sti
jns
out
nop
cld
jbe
jle
jg
mov
lahf
lods
ljmp
pop
adc
jp
fistpl
or
adc
xchg
loop
push
inc
adc
lcall
ret
inc
test
aad
pop
hlt
sbb
pop
test
mov
popa
pop
cmp
fs
fstpt
lods
in
adc
imul
call
pop
push
pop
pop
jae
xchg
adc
fbstp
cmpsb
fisttpl
lods
inc
jb
mov
mov
cltd
sub
inc
mov
gs
dec
cli
mov
add
fnstsw
mov
stos
dec
addr16
adc
pop
enter
je
lods
sar
cmp
mov
jno
push
lea
or
fdivrl
fsubrs
adc
jo
aas
cmc
mov
xor
sahf
sub
lea
mov
xchg
or
pop
shrl
xchg
rcrb
popa
sub
mov
out
inc
push
in
or
lcall
add
push
jne
inc
loop
es
xchg
dec
shll
mov
test
out
cmp
xor
jmp
mov
jecxz
pop
cld
jno
test
js
cwtl
push
push
xchg
sub
jnp
testl
aam
cld
scas
sub
decb
movsl
fucomp
pusha
pop
ljmp
dec
dec
sahf
mov
ds
xor
aam
test
jmp
call
xchg
icebp
aad
dec
push
jmp
ret
jl
insl
dec
and
das
popf
xchg
cli
fdiv
js
jle
mov
inc
dec
and
sbb
mov
xor
mov
fsts
das
cwtl
or
leave
lcall
mov
in
movb
ja
mov
cli
sub
inc
mov
cld
push
pop
je
lods
mov
shlb
loopne
or
orb
fistpll
xchg
mov
shlb
pop
mov
lahf
int3
orl
push
lret
push
cmp
jmp
movsl
push
add
lret
sti
lahf
lea
fstpt
jmp
pop
push
inc
hlt
pushf
mov
push
mov
js
or
inc
out
sbb
pop
imul
jbe
cwtl
push
subb
fsubl
fldenv
mov
sub
xor
loope
scas
mov
push
loope
jg
clc
lock
xchg
jb
repnz
push
std
or
mov
sbb
imul
outsl
cwtl
ja
dec
lret
cltd
add
out
ljmp
push
ds
bound
cmpsb
or
inc
or
les
fisttpll
dec
xchg
andl
sbb
adc
scas
inc
dec
add
fildll
dec
jecxz
fdivp
cwtl
sub
movsl
ficoml
pop
daa
and
jne
nop
inc
jne
out
gs
xchg
pop
jl
push
pop
push
aas
ja
cmp
cmp
xchg
nop
lret
cmc
call
xchg
ret
pop
sbb
jle
shl
pushf
cwtl
aas
jge
loope
std
rcll
out
sbb
rol
adc
out
add
je
pushf
jp
jb
jg
loopne
rorl
pop
fnstenv
imul
ss
in
call
sub
sbb
or
into
aad
sbb
lcall
test
add
xor
ror
sub
sbb
xor
bound
lgdtl
out
sub
mov
add
les
das
clc
push
jle
mov
jl
mov
cmp
pushf
and
aas
xchg
hlt
pop
call
or
ss
ss
ret
push
insl
fwait
jne
mov
leave
enter
in
arpl
mov
js
or
mov
xchg
sbb
sub
gs
jmp
fmull
les
add
arpl
jns
fisttps
cmp
or
aas
fcoml
push
repnz
pusha
cmp
push
xor
es
popa
mov
cmp
mov
cwtl
movsb
dec
dec
test
cmc
in
divb
xlat
mov
in
cltd
xchg
loop
xor
mov
add
ds
insb
pop
cmp
fs
add
loope
out
xor
jl
xlat
adc
mov
cli
sub
mov
mov
ss
xchg
movsb
nop
mov
sub
push
aaa
ds
sbb
mov
test
adc
int3
mov
jp
cld
cmp
push
xchg
push
mov
neg
and
ja
lret
pushf
notl
dec
cmp
ljmp
dec
mov
sahf
imul
pop
lcall
or
mov
xchg
sbb
push
push
loopne
test
popf
mov
jmp
lahf
mov
push
jecxz
add
into
or
outsl
cmp
in
push
adc
loope
jecxz
pop
pop
adc
cld
sub
ficomps
stos
push
mov
pushf
notl
mov
xchg
int
mov
outsl
add
jecxz
lods
inc
sub
mov
je
not
je
insl
jp
jb
xchg
ret
popa
jge
js
lahf
sarb
pop
mov
jae
push
mov
jg
push
mov
lock
sub
jbe
into
aam
lret
repz
xor
push
add
inc
push
jb
inc
xchg
loop
add
fisubrs
add
insl
outsl
or
je
aam
sub
clc
xchg
xchg
xor
out
sbb
popf
cmpsb
ja
add
sahf
enter
decl
out
fnsave
push
mov
xor
rolb
stc
enter
enter
in
shl
test
jne
out
popa
ss
das
jbe
inc
aad
mov
mov
push
jp
mov
mov
sub
es
sbb
sbb
fldl
leave
sbb
cmpsb
pop
pop
push
in
push
test
int3
and
or
outsb
push
dec
add
push
inc
cmp
enter
jne
icebp
std
lret
daa
repnz
mov
repnz
adc
aaa
xor
fsubr
jb
out
fs
ljmp
push
xchg
test
les
inc
cld
imul
push
xchg
stos
or
pop
xor
xor
cmpsb
jno
mov
xor
add
xor
xchg
mov
inc
mov
adc
test
xchg
negb
arpl
stos
ljmp
leave
dec
je
lds
or
cmp
jno
enter
and
inc
xor
clc
mov
icebp
call
mov
sbb
push
movb
sbb
lahf
mov
mov
gs
mov
lahf
lods
jge
int3
fwait
inc
pop
jae
lcall
addl
add
lock
pop
lods
mov
dec
sti
sbb
or
clc
xor
mov
push
fstp
cmpsl
lahf
inc
jns
cli
cmp
dec
jg
push
icebp
out
inc
imul
xchg
pop
fmuls
pusha
pop
mov
inc
mov
cmp
jns
pop
aas
sbb
nop
cwtl
dec
sbb
sbb
mov
ret
or
push
pop
nop
andl
pusha
sub
and
cmp
shlb
mov
push
xchg
add
ds
and
push
xchg
jo
bnd
cs
cmc
mov
lcall
pop
mov
adc
out
jg
pop
pop
push
fistl
lret
lcall
adc
je
enter
std
enter
cmp
pop
inc
jae
dec
push
and
mov
mov
fsub
ja
aaa
iret
adc
cmpsb
sarb
outsl
dec
cli
mov
les
stc
sub
cmpsb
scas
xchg
punpcklwd
sar
mov
test
mov
pop
sub
inc
xor
mov
nop
mov
cmp
jge
mov
mov
jle
ljmp
adc
hlt
push
repz
add
pop
xlat
cltd
mov
add
fcoms
jmp
sbb
or
add
sub
push
es
jp
cmp
cmpsb
pop
addr16
inc
pop
pushf
jp
lods
cmp
sbb
sbbl
and
in
repnz
sub
in
fdivp
push
stos
push
jmp
ret
and
push
test
mov
mov
pusha
andb
aad
add
jp
imul
fwait
mov
ficoms
or
sbb
popa
je
fdivs
inc
push
lahf
sub
mov
ficomps
xchg
popf
pop
add
sbb
shrl
das
ret
cmp
jns
je
jb
or
movsl
mov
pop
push
cmp
into
aad
scas
mov
inc
mov
jl
imul
stos
repnz
dec
ja
xacquire
sub
testb
repz
pop
idivb
lods
repnz
shll
fadds
int3
add
adc
insb
jns
add
sub
out
dec
roll
clc
stos
cld
cs
push
je
jbe
leave
push
mov
fnstenv
fdivrl
cmc
cltd
andl
xor
adc
pop
leave
into
mov
xchg
sysexit
dec
fnsave
push
dec
roll
pop
cs
cmp
test
adc
icebp
and
test
jecxz
popa
in
jno
inc
xchg
pop
pop
ds
loopne
inc
and
jbe
xchg
mov
adc
adc
in
xor
xchg
mov
in
mov
icebp
mov
cmp
adc
push
sub
clc
cmp
push
aaa
incl
imul
pop
and
data16
es
pop
andb
std
imul
inc
and
and
push
ret
mov
and
rorl
mov
mov
test
les
jl
sbb
ret
or
orl
cltd
xchg
jle
jne
fidivs
xlat
mov
push
inc
cmc
inc
push
add
jg
mov
fnstsw
cmp
test
cmp
jge
push
mov
pop
popl
gs
out
shrl
mov
ds
call
fwait
xor
lods
ja
sti
ret
pop
loop
mov
adc
xor
pop
mov
cltd
pop
ret
sub
xor
mov
lcall
cmp
sub
xor
pop
das
sub
stos
cmp
or
sub
sub
adc
es
orl
sub
js
dec
aas
push
movsb
cs
rcrb
push
dec
inc
cmc
mov
push
xchg
sub
xchg
fmuls
call
and
sbb
xor
adc
clc
das
fnstsw
loope
aad
aam
into
sub
cwtl
xor
lahf
sbb
inc
push
sbbb
cmp
mov
lds
mov
mov
call
in
cmc
in
arpl
in
das
pop
shl
movsl
add
or
loop
dec
ds
int
dec
aad
pop
leave
adc
loop
jge
imul
out
add
xchg
mov
sub
aas
test
or
pop
mov
in
imul
daa
jae
hlt
xchg
sbb
daa
add
dec
push
and
mov
mov
bound
ja
movsb
jecxz
xor
call
push
xor
inc
outsb
repnz
adc
pop
inc
xlat
adc
nop
xchg
xchg
jb,pn
test
xor
sub
in
sub
cs
push
add
push
mov
jae
sahf
pop
xor
cmp
ja
les
add
aad
aaa
icebp
sarb
pop
fldl
leave
adc
lcall
push
push
aaa
mov
aas
outsl
fstl
repnz
decb
sbb
loope
sub
popf
xor
mov
xor
mov
pop
icebp
aad
aaa
lds
aas
paddusw
jne
mov
imul
imul
in
jb
mov
pop
mov
mov
push
mov
and
sub
mov
xchg
ret
add
ret
dec
sahf
insl
shrl
jns
inc
cmpsb
sub
xor
shlb
loop
adcl
inc
dec
jl
outsb
sbb
pop
inc
ljmp
xor
jecxz
enter
jge
pop
in
jo
cmp
aam
cmp
dec
adc
push
in
mov
adc
cmp
cltd
fistps
ds
arpl
jne
repnz
dec
std
adc
lcall
fidivs
std
imul
das
cmpsl
jo
sub
aas
in
iret
in
loop
in
not
inc
and
loopne
cmp
jnp
xchg
negl
dec
popf
jb
sbb
push
roll
push
into
cmp
xor
sub
mov
mov
stc
dec
mov
jle
shl
add
imul
rorl
test
xchg
or
cmpsl
mov
pop
mov
test
mov
xor
in
rcr
xor
imul
pop
push
enter
loopne
push
push
and
shlb
js
subl
popf
pop
or
fcmovb
xor
bound
cld
sarl
pcmpeqb
adc
ds
jo
incb
mov
mov
mov
out
mov
xor
mov
cltd
and
ljmp
and
sarb
and
jmp
stc
dec
outsl
sbb
push
call
push
inc
and
inc
ja
sbb
adc
rolb
dec
jae
lods
loopne
testl
int3
dec
mov
lcall
sub
xchg
fiadds
mov
xor
mov
ror
add
inc
mov
xor
pop
out
sbb
mov
adc
mov
pushf
cli
std
pop
inc
int
push
lahf
xor
daa
push
push
pop
and
loope
sbb
mov
fcom
cmp
inc
pop
cmp
xchg
xor
ret
dec
mov
jg
inc
push
std
inc
addr16
jbe
xchg
pop
leave
test
xlat
pop
and
lock
sbbb
jmp
out
in
pop
mov
inc
sub
sbb
pop
inc
dec
ja
cltd
in
je
mov
out
push
insb
loop
xlat
fisttps
cltd
sub
mov
fstpl
mov
xor
jle
shlb
inc
push
adc
xor
stos
arpl
inc
test
mov
popa
test
mov
mov
sub
cmc
pop
sbb
pop
jecxz
stos
cmp
mov
repnz
sbb
push
jle
mov
push
xor
into
cmp
shrb
pusha
push
rorb
jne
jnp
mov
jns
fcoml
xlat
inc
sbb
dec
repz
fdivs
movsl
popa
jns
in
push
mov
push
std
sahf
mov
data16
mov
outsl
mov
pop
cmp
inc
out
insl
push
push
mov
call
or
gs
cmc
pop
sub
cwtl
push
inc
adc
sub
nop
inc
mov
mov
push
idivl
sub
xchg
push
idivb
push
int
xchg
not
jbe
xor
cs
pop
clc
cmp
xchg
cmp
jmp
cmp
sbbl
xchg
xchg
ret
test
int
outsb
push
adc
xorb
push
cli
dec
fsubs
jge
rcrb
cmp
fdivs
jmp
jne
jmp
call
mov
in
repnz
dec
mov
inc
jb
rcr
mov
test
sahf
aas
imulb
rcl
pop
lcall
lcall
push
fidivrs
mov
sbb
fldt
pop
or
pop
mov
lahf
cmp
mov
jp
pop
mov
popl
outsl
xchg
inc
insb
pop
les
test
push
mov
mov
stos
gs
mov
lahf
imul
fstl
and
dec
xchg
dec
sbb
loopne
dec
mov
dec
test
test
ret
sbb
xor
or
add
mov
inc
jge
xchg
test
sub
adc
add
or
xchg
mov
cmp
lds
pop
xor
xor
jge
cld
sar
lods
xchg
jmp
jge
lahf
out
aas
xor
add
lret
rcr
fs
or
sub
pop
enter
cmp
ljmp
mov
jg
lret
mov
imul
pop
in
shrb
in
jae
jg
loopne
push
xchg
pop
or
sbb
add
push
arpl
dec
orb
icebp
dec
mov
or
mov
fistpll
adc
add
xchg
cltd
pop
mov
aas
fstpt
rcll
sub
sub
xor
add
cmp
ret
pop
sub
and
cmp
cmp
sub
push
dec
cli
in
cmp
cmp
fwait
icebp
aam
test
dec
ss
and
or
xor
sbb
jg
ljmp
sahf
inc
mov
scas
cmc
dec
std
xchg
mov
mov
fwait
add
inc
jne
sbb
sub
pop
or
jl
inc
rcrb
push
data16
xorl
or
mov
movsl
mov
icebp
add
lret
outsl
pop
insl
jae
and
mulps
sbb
add
sub
jg
ljmp
cmp
fdivp
ret
mov
dec
in
ljmp
stos
jno
cmp
ljmp
cmpsl
xchg
and
outsb
sbb
push
insl
xor
sub
imul
ret
cmp
or
and
pop
loope
sahf
and
or
inc
div
test
movsb
sub
out
insb
adcl
mov
ret
xchg
je
fwait
pop
enter
dec
xchg
and
mov
fimuls
mov
pop
dec
stos
jge
fimull
jae
cmp
cmp
dec
mov
popf
add
pop
wbinvd
arpl
hlt
gs
adc
jl
sub
rcl
mov
jo
cltd
mov
flds
inc
sbb
push
add
or
jl
sub
xor
cmp
add
sub
pushl
cwtl
push
mov
shll
xchg
sub
lcall
lret
repz
pusha
dec
push
fcmovnb
mov
or
push
nop
loopne
cmp
pop
jns
pop
stc
or
and
addr16
sub
sub
in
in
hlt
fstpl
and
or
mov
sti
loope
mov
aad
int
popf
and
repnz
arpl
jle
outsl
insb
mov
pop
arpl
inc
push
sub
jb
add
jle
jp
ret
int3
ret
dec
pop
push
hlt
xchg
aas
shrb
add
dec
sahf
and
ja
gs
mov
fmull
idivl
mov
repz
daa
clc
add
and
in
push
int
or
dec
xor
icebp
jo
in
push
xchg
movsb
inc
into
dec
testl
pop
xchg
xor
and
lock
popf
sbb
mov
or
shl
notl
xor
sbb
push
sub
and
adcb
sbb
jmp
je
cmpl
fdivrl
inc
fs
adcl
mov
sbb
in
push
repz
push
in
fwait
xchg
pop
fldt
movzwl
cs
cmp
outsb
mov
in
repz
and
xacquire
mov
stc
out
adc
sbb
scas
push
movsl
das
lods
mov
pop
mov
sbb
xor
or
hlt
adc
adc
jns
pusha
lods
es
ja
cmp
and
xchg
aad
mov
pop
movsl
sarb
stos
test
xor
test
dec
repz
push
ljmp
mov
aas
xchg
push
inc
rcl
mull
xor
stc
inc
ret
lcall
dec
gs
popa
cmc
cmpb
aaa
sbb
jnp
pop
popa
fcompl
cs
js
mov
lds
mov
je
leave
mov
jns
and
mov
or
push
rcl
insb
xor
sub
test
mov
test
pop
mov
sbb
push
mov
jne
hlt
mov
fcomi
loopne
cmp
cmp
js
enter
xor
mov
xchg
in
cltd
adc
mov
fildl
js
insl
mov
adc
lods
or
sub
aad
push
decl
and
sti
clc
lock
inc
movsb
or
std
sahf
mov
leave
or
push
test
mov
fcoml
ja
jle
adc
adc
sub
repnz
pop
push
popa
movsl
xchg
mov
jne
ss
xchg
dec
stos
sbb
fwait
ss
or
and
repz
not
pop
sbb
jno
decb
mov
adc
mov
jge
inc
mov
popa
xor
adc
pushl
inc
xlat
xchg
sbb
js
mov
sbb
or
dec
or
jo
insb
test
mov
add
push
popa
xchg
mov
fcoms
cltd
sbb
cmp
bound
std
xchg
sbb
xor
jae
xor
xor
outsb
test
in
jnp
ja
jg
pop
fincstp
push
in
leave
sub
inc
sti
jne
jae
pop
sub
lods
cmpsb
jl
and
dec
into
arpl
cltd
test
lahf
and
add
leave
pop
cwtl
add
js
mov
mov
rclb
jmp
leave
xchg
sar
insb
mov
fsubr
dec
and
notl
jno
popf
pop
insl
inc
loope
cmpsb
roll
add
shlb
pop
cmpsb
jle
xchg
mov
and
loopne
adc
push
lret
lods
scas
jle
cmpsb
xor
out
fsts
push
lock
cmp
pop
xchg
pop
and
xchg
test
sti
clc
rcll
lahf
stc
inc
mov
fadds
into
push
xchg
in
in
test
ss
xchg
loop
daa
sbb
push
dec
xchg
jle
pop
add
into
inc
xchg
push
and
cmc
mov
mov
fdivs
iret
fadds
sbb
pop
jle
aam
cld
fdiv
ficoml
xor
adc
out
mov
stos
addl
dec
push
lcall
iret
jp
rcrl
mov
daa
mov
push
aas
fsubr
cmp
cmpsb
push
mov
aaa
in
jge
sbb
stos
lcall
dec
xor
aaa
loop
jle
inc
mov
xchg
xchg
mov
xor
cli
push
pusha
jl
test
mov
jbe
test
mov
test
repz
adc
or
mov
sarb
jnp
movsb
adc
push
clc
je
dec
mov
gs
cli
push
sbb
xor
in
ss
shll
jecxz
push
mov
xor
fldl
test
or
adc
test
xchg
cmpl
sbb
or
mov
push
mov
insb
fbld
sbb
lds
pop
pop
mov
pop
fiadds
or
sahf
sbbl
push
mov
loop
add
mov
cmp
xorl
int3
dec
jno
insb
pop
scas
in
and
cmp
lahf
repz
and
gs
inc
test
adc
xchg
aad
dec
imul
mov
lock
and
jo
jnp
mov
jne
int
loopne
mov
lahf
or
roll
cmc
rcrl
hlt
mov
xchg
sti
xchg
out
cmp
mov
mov
andb
fwait
ljmp
enter
adc
nop
mov
mov
gs
and
add
dec
fsubs
dec
adc
sar
pop
xor
mov
inc
rorl
nop
or
fiaddl
test
cwtl
adc
in
data16
lock
mov
xchg
sub
int3
sbb
int
push
pop
mov
lcall
pop
rcl
cmp
arpl
xchg
sub
dec
neg
arpl
ljmp
pop
cmpsb
jp
jg
sbb
dec
aas
imul
pop
jns
mov
stos
or
mov
std
mov
cltd
push
or
fbld
ret
sbb
jo
jns
fcmovu
out
push
dec
xchg
pop
lret
pop
rorb
dec
cs
cli
and
inc
addr16
je
jo
pop
xor
lds
shl
sbb
inc
push
xchg
movsb
sbb
sub
pop
mov
jecxz
or
data16
lcall
adc
les
xor
leave
stc
in
xor
cmpsb
daa
mov
adc
pop
les
xchg
jecxz
enter
lods
adc
xor
stos
pop
aad
repnz
mov
push
dec
neg
cmpsb
int3
ja
cmp
pop
sbb
arpl
jnp
test
fistpll
sarl
xlat
and
sbb
ret
or
pop
in
std
xchg
test
xchg
in
sub
pop
or
mov
scas
sbb
add
lods
scas
jmp
inc
icebp
repz
cmc
repnz
ds
dec
inc
adc
shll
pop
stos
mov
or
out
pop
cld
xchg
pop
les
inc
jg
mov
test
fwait
test
xchg
pop
ret
sahf
adc
jne
mov
mov
sbb
jb
inc
aam
cmp
mov
adc
sub
mov
mov
test
jae
shlb
jge
rcll
iret
aad
ds
mov
imul
aad
lock
push
std
jnp
adc
sub
push
in
rorl
and
aas
fwait
pop
sub
sub
xchg
int
cmp
push
xor
lahf
mov
lea
lock
add
imul
and
mov
rcr
cli
shll
or
orb
cli
add
jae
and
sbb
inc
popf
xchg
orl
js
push
adc
sbb
pop
pop
fmul
add
ret
mov
nop
xchg
cmpb
enter
ret
push
stos
or
mov
pop
push
leave
popa
inc
setge
jb
push
xor
call
mov
pop
add
add
loope
gs
mov
sbb
aam
and
jnp
sub
iret
mov
and
adc
xchg
arpl
les
adc
in
xchg
mulb
fists
lods
mov
xchg
or
cs
imull
flds
cmp
mov
sbb
mov
or
cmpsb
in
insl
mov
imul
or
lret
pop
lahf
jae
push
popf
push
jle
inc
cmp
pop
pop
sbb
stc
test
aaa
cmp
xor
mov
ja
mov
add
jp
hlt
mov
test
call
out
sbbl
dec
in
shlb
push
jecxz
jle
dec
popf
push
jle
out
push
sarb
mov
mov
mov
add
fucomi
push
sbb
repnz
adc
jae
shrl
or
sub
sar
shl
sbb
ss
inc
repnz
dec
xchg
dec
add
xchg
movsb
inc
cwtl
nop
pop
lds
jecxz
enter
mov
das
mov
andl
push
dec
xor
scas
pusha
cli
shrb
mov
pop
repnz
xchg
pcmpeqw
subb
adc
imul
out
shrb
mov
sahf
jae
es
adc
pop
cmp
push
push
rolb
ja
pop
jb
mov
sub
flds
pop
repnz
fcmovnbe
and
pop
das
mov
fs
sarl
jmp
stc
dec
lret
pop
mov
cmc
ja
pop
fiaddl
lea
popa
jnp
or
xor
and
push
out
cmpsl
pushf
lret
scas
pop
mov
jno
nop
push
push
pusha
jecxz
mov
gs
xor
ror
aad
pop
das
xor
xchg
jns
insl
in
cwtd
sbb
add
lods
inc
mov
rorb
or
and
or
stos
movsb
sbb
adc
sbb
icebp
sub
xlat
test
pop
sub
gs
lds
loopne
shlb
bound
mov
dec
mov
shll
dec
pushf
push
push
jbe
outsb
push
ret
loopne
pop
arpl
xor
cmc
xor
adc
mov
dec
xor
jo
std
inc
inc
mov
stos
pushf
mov
shll
cs
mov
rcl
adc
mov
push
sbb
cmpb
dec
sbb
je
lahf
les
mov
sbbb
push
cmpsb
ljmp
mov
and
imul
fucomp
mov
sbbb
int3
lret
push
outsl
dec
jne
mov
rcrb
nop
repnz
pop
jle
adc
jge,pn
push
pop
test
clc
mov
test
movsl
nop
cs
dec
push
pop
sarl
jp
inc
inc
shll
xchg
cwtl
sahf
sbb
pop
and
xchg
sub
fcompl
aam
sbb
adc
clc
cmp
mov
leave
fbstp
dec
shll
mov
cwtl
xchg
dec
test
pop
dec
fisubrl
jp
inc
push
xchg
push
mulb
sub
test
push
aad
test
insb
dec
xchg
nop
push
lds
cwtl
insb
int3
adcb
dec
adc
fs
dec
xchg
cmp
cmp
adc
inc
cmc
sbb
inc
jg
inc
sub
pop
xor
mov
lea
adc
fwait
or
jg
push
or
imul
push
aaa
movsl
jge
into
rclb
or
mov
xchg
andl
out
jbe
xor
test
jno
sbb
cmpsl
xchg
call
push
rorl
jbe
mov
jns
add
out
pop
lock
fst
xor
jnp
xchg
or
dec
xlat
dec
jo
fistps
test
xlat
addr16
xchg
ror
add
adcb
push
cwtl
push
pop
imul
out
mov
pop
xor
jnp
mov
pop
mov
add
inc
enter
arpl
mov
xor
mov
aas
test
in
jne
push
bound
cmc
cmp
enter
or
cmp
cwtl
jle
faddp
loope
shl
test
mov
sub
inc
add
faddp
in
rcrb
adc
je
xchg
xor
cmp
lret
daa
inc
lcall
and
hlt
ljmp
aam
mov
notb
testl
hlt
cmp
je
push
jno
pusha
sub
cmp
sub
rclb
xchg
cmp
repz
cmc
mov
cmc
pop
mov
es
jb
repnz
adc
leave
xor
sbb
jbe
out
in
fs
imul
jne
xor
dec
sti
ror
stos
and
fcmovnb
fdivrp
cmc
cmp
xor
adc
cltd
xlat
jb
or
xorl
mov
inc
out
jmp
and
les
addps
lea
sub
mov
adc
xchg
shl
in
mov
sbb
adcb
movb
shr
push
cwtl
mov
outsl
leave
shlb
cmp
cmp
jl
out
popf
cmp
cmp
dec
xchg
pop
pop
repz
shlb
mov
and
ds
rclb
push
cmp
movsl
stos
jg
fwait
out
mov
das
pop
imul
cmp
lret
cwtl
xchg
mov
sbb
jg
in
sub
jns
sbb
mov
inc
lds
mov
sbb
mov
xor
pop
lret
mov
cli
jb
test
scas
rcr
hlt
cmpl
mov
xchg
dec
or
push
xlat
jb
sub
sahf
jb
xchg
pushl
pop
pop
cmpsb
rcr
cmp
cmc
mov
dec
push
xor
jg
mov
cmpsb
out
inc
mov
cmp
xchg
jb
mov
lret
xchg
xchg
adc
xor
inc
cmpsb
inc
fisttps
sub
pop
cltd
rcrl
push
out
jecxz
notb
cmp
mov
loopne
dec
mov
jmp
jle
mov
pop
cli
aaa
add
ja
xchg
test
pop
push
mov
das
jl
fcomi
inc
jl
or
cmpsb
je
testl
mull
pop
das
loope
dec
mov
adc
cmp
dec
aam
sub
shlb
add
fs
gs
jb
sub
stos
push
idivl
dec
add
aas
in
xor
lea
or
in
out
xchg
mov
sub
push
xchg
dec
or
dec
testl
sbb
sbbl
pop
mov
push
mov
inc
sbb
cmp
cmpsl
repz
or
xchg
cmp
mov
dec
adc
cmp
or
in
lods
ja
movsl
js
jge
adc
xor
mov
and
push
inc
ficompl
les
outsl
je
std
adc
fistps
movsb
mov
inc
sub
fcmovb
mov
sbbb
std
loop
js
sbb
xchg
adc
mov
xlat
pop
ret
mov
adc
push
leave
adc
ss
js
cmc
cmp
sbb
adc
popf
adc
orb
mov
cmc
das
movsb
lods
push
mov
inc
push
cmc
aas
mov
mov
jns
inc
jns
rcl
outsl
les
mov
repz
xor
xchg
mov
mov
lea
out
cs
sub
cltd
insl
dec
ja
test
adc
into
pop
cli
mov
mov
inc
fiaddl
inc
jl
pop
jbe
out
scas
sti
mov
inc
fsub
xchg
mov
mov
shr
push
mov
jne
inc
pop
or
loopne
mov
pop
mov
sbb
or
xchg
mov
xchg
mov
sbb
push
ss
add
mov
enter
mov
adc
int
add
ret
aam
xchg
mov
inc
add
dec
pop
xchg
call
pop
sbb
pop
fwait
loope
decb
and
imul
lcall
sub
push
fcompl
xchg
fwait
cs
ja
bnd
adc
lds
ds
lods
in
dec
or
cmp
sub
mov
outsl
in
mov
mov
cmp
sbb
sbb
add
pop
adc
scas
imul
jae
mov
cli
pop
or
clc
push
dec
add
jge
pop
mov
xor
add
mov
stc
out
adc
xor
sti
jmp
pop
adc
pop
sti
lret
ffree
int3
imul
mov
inc
jb
cs
sub
sbb
jmp
loopne
nop
sbb
imul
out
mov
mov
pop
cmp
push
mov
adc
push
clc
mov
cmp
cli
sub
lock
or
popf
jbe
sub
or
outsl
sbb
imul
add
cwtl
popa
xor
ja
sub
mov
adc
mov
and
push
sub
aam
ja
mov
rclb
mov
xchg
das
adc
jg
jne
fmulp
pop
pop
or
movsb
mov
cltd
mov
and
incl
insl
sub
das
push
dec
jne
kmovb
rcll
jae
movsl
in
insb
sub
int
aas
dec
mov
or
push
ret
lcall
xor
lret
jle
ret
mov
xor
inc
cmpsl
test
pop
bound
test
fsts
jmp
dec
mov
fcmovbe
push
out
xor
mov
or
dec
and
int3
lods
push
sbb
mov
hlt
nop
loopne
imul
sbb
sub
mov
fstp
push
xchg
in
push
sub
cs
jns
xabort
push
test
push
fnstcw
and
pop
fdiv
dec
xor
cld
pop
ficomps
insb
xchg
push
and
cmpsl
idivl
fsubrp
xchg
push
int
daa
pop
xchg
jae
mov
mov
aaa
sub
shll
sub
or
jo
dec
pushf
es
jne
call
push
jno
sbb
jo
sti
test
ja
push
sub
push
cmp
inc
insl
push
clc
and
jl
fcmove
nop
lock
daa
cmp
in
test
jmp
push
add
add
dec
mov
daa
xchg
mov
ret
out
cmpsl
or
out
clc
push
push
call
fsubrl
xchg
imul
inc
push
xchg
mov
jns
arpl
lcall
push
dec
pop
ret
popl
inc
jb
and
push
jge
cmpsl
in
push
and
mov
and
jbe
or
inc
jge
imul
movsb
lods
addr16
mov
mov
test
mov
adc
xchg
repnz
test
adc
lds
sahf
mov
int
add
jae
push
jmp
inc
adc
jecxz
std
nop
sbb
icebp
daa
stc
sbb
cmc
pop
sub
mov
xchg
dec
scas
mov
nop
int3
mov
cltd
out
flds
addl
xchg
pushf
ret
les
hlt
and
cli
mull
mov
imul
mov
lods
xchg
shl
repnz
cmp
sbb
lods
out
push
lahf
mov
stc
add
dec
cmc
pop
movsb
je
test
int
mov
dec
mov
outsb
dec
pop
xchg
and
jno
outsb
movsb
jae
xchg
mov
bnd
mov
fwait
push
xchg
or
cmpsl
lock
jle
iret
cmovge
dec
out
and
inc
pop
xchg
lret
mov
adc
negl
mov
lea
in
mov
add
add
scas
push
adcb
push
mov
push
cli
or
ret
pop
lods
sbb
mov
xchg
jne
xchg
pushf
mov
sub
sbb
dec
imul
imul
ror
jae
mov
outsl
inc
xor
xchg
and
cmpb
xchg
subb
push
pushl
mov
cs
ss
push
hlt
pop
add
sbb
mov
fdivrs
jne
adc
andl
ret
or
jecxz
push
or
jne
fistl
add
fcomps
sbbl
daa
mov
pusha
and
xor
jo
repnz
or
jg
call
adc
ljmp
mov
sbb
mov
sub
js
arpl
dec
xchg
movsl
mov
xor
jl
sbb
adc
pop
dec
clc
mov
cmp
jecxz
mov
mov
jbe
repz
lret
xor
movsb
sub
xchg
cwtl
cmp
cmp
adc
mov
stc
sub
not
lret
inc
inc
test
mov
dec
lahf
inc
xor
shl
mov
mov
divb
or
and
mov
mov
sub
pop
test
and
test
cmc
jae
iret
and
mov
movaps
imul
nop
pushfw
mov
mov
cs
int3
pop
dec
xchg
push
mov
sbb
hlt
xorl
push
dec
pop
mov
push
sbb
stos
mov
lock
js
fisttps
inc
lds
pop
cld
jns
loopne
dec
into
lahf
fwait
lods
xchg
test
pop
or
sbb
add
mov
push
pop
add
mov
or
loope
cmp
movsb
mov
js
mov
icebp
jg
mov
ds
xor
sub
inc
test
push
cmp
in
jp
inc
jg
pop
cmp
xchg
inc
cwtl
mov
lahf
jns
cmp
push
js
lea
inc
mov
xor
and
cmp
test
xor
xor
adc
fmuls
les
shll
inc
push
xchg
inc
nop
sub
ret
inc
mov
xlat
xchg
ds
movsb
mov
sub
mov
aad
inc
add
lret
adc
add
xor
sub
arpl
shlb
inc
daa
adc
arpl
sbb
out
sti
xchg
aam
fistl
imul
mov
loopne
mov
pop
sbb
mov
add
add
add
push
out
out
add
jge
not
mov
in
sbb
insb
mov
cmc
movsb
and
jl
push
jb
jne
ds
mov
sub
xlat
inc
pop
pop
jge
mov
cltd
cmpsl
mov
jae
notb
mov
dec
out
pop
jnp
push
je
mov
pop
inc
fdiv
mov
dec
jo
subb
shrl
push
adc
mov
pop
bound
xchg
in
sbb
call
pop
jmp
push
and
xchg
and
jno
data16
inc
inc
aam
or
fwait
or
add
xor
out
jae
insl
movsl
cmp
mov
jmp
subl
and
pop
aam
aas
pop
jle
push
dec
pop
inc
int
cmc
test
in
inc
jne
fisubrl
xchg
mov
jns
outsb
mov
sbb
mov
xchg
or
call
out
mov
test
push
movsl
sbb
lods
in
jle
mov
push
loop
fcoms
xchg
push
mov
jae
fstp
sbbb
loop
inc
icebp
ss
pop
bound
sub
imul
cli
dec
dec
ret
or
add
mov
aas
shlb
cld
in
xchg
jbe
xchg
mov
push
and
push
inc
jmp
pop
mov
or
stos
xlat
das
jge
xor
add
jl
mov
aas
popa
cmp
fs
imul
mov
adc
push
neg
mov
movsl
sbb
mov
popaw
xchg
int
cmp
dec
jnp
xlat
lds
jecxz
cmp
add
jno
ret
xor
xor
pop
mov
inc
xchg
pop
inc
pop
jp
and
dec
sub
pop
rcrb
test
test
jns
orl
popf
cs
stos
jns
push
cmpsb
jp
mov
in
fdivr
jns
sbb
iret
xchg
inc
pushf
rcrl
das
ja
shll
push
out
cld
mov
mov
seta
sbb
adc
test
rcll
or
call
sub
push
lods
movsb
outsl
xor
loope
ja
loop
cmc
mov
push
sbbl
cmp
add
add
sbb
xor
cmpsb
xchg
adc
stos
into
pop
int3
jmp
cmp
adc
pop
popa
jnp
cld
fldt
add
jl
test
es
add
jo
sbbb
inc
daa
cmp
sub
mov
cmp
stc
icebp
xchg
dec
inc
mov
jno
loop
jle
pop
pop
jbe
popf
push
adc
mov
lods
fsubrl
sbb
dec
fildl
mov
mov
and
jp
inc
xor
or
ret
outsl
sbb
jb
or
mov
cmp
xlat
jo
imul
filds
pop
idivb
pop
jl
outsb
aas
inc
xor
push
mov
pop
outsb
inc
adc
jmp
sbb
push
xchg
push
ss
mov
or
inc
insl
xor
call
aaa
test
mov
rcl
jecxz
mov
loope
cmp
sbb
pop
aas
xchg
or
add
xchg
idivb
mov
sbb
rcr
sahf
mov
xchg
dec
aad
push
adc
lods
mov
loop
sub
sbb
outsl
push
cmp
add
xor
popf
xchg
rorl
add
mov
xor
cmp
inc
adc
add
scas
xor
cmpsl
fistpll
inc
cld
mov
loop
repnz
dec
ret
je
pop
push
jg
push
pop
mov
iret
mov
mov
adc
sbb
bound
push
fistpll
xchg
arpl
bound
stos
cmpsb
addl
pop
data16
mov
loopne
jbe
xlat
mov
push
aam
shlb
jnp
test
xchg
mov
pop
mov
movsl
jecxz
push
add
mov
lods
cmp
lods
fistpll
dec
cltd
push
rol
jbe
imul
mov
inc
ret
das
lods
movsl
fidivs
test
pop
lods
add
push
int
icebp
adc
add
mov
mov
lds
outsl
outsl
int3
push
xor
mov
dec
cmp
xchg
xchg
out
hlt
push
stos
aad
and
test
add
ss
mov
push
mov
lods
add
clc
push
ljmp
or
leave
mov
rcrl
movntq
inc
sub
push
inc
mov
hlt
fwait
cs
jno
jge
loope
das
stos
xchg
lds
je
push
push
imul
inc
mov
sbb
mov
iret
cs
push
loope
stos
int
sbb
add
inc
shrl
cld
push
adc
xor
shr
mov
cwtl
xor
dec
sub
test
add
or
push
jle
loopne
nop
pop
add
rorl
jnp
pusha
cmp
hlt
popa
add
push
jg
jo
idivb
loop
sbb
mov
lcall
loop
or
push
stos
fucom
adcl
xchg
out
jne
mov
lods
outsb
or
mov
repz
outsb
out
jg
iret
cmp
jo
fcompl
mov
xor
xlat
das
sub
adc
mov
pop
push
jae
subb
and
mov
inc
jne
fs
js
test
fwait
jnp
pop
subl
out
idivl
xchg
or
pop
sub
mov
xchg
test
test
int3
mov
cmpsb
cli
rol
cwtl
mov
push
iret
test
adc
xchg
push
cmp
inc
mov
or
outsb
scas
outsb
push
movsl
mov
ficoml
addb
adc
jmp
test
aad
or
lods
in
sub
ret
aas
out
std
adc
roll
mov
add
pop
stos
xor
add
pop
repnz
mov
outsb
jle
sub
pop
mov
frstor
int3
dec
popa
xor
mov
stos
in
mov
pop
ret
out
jnp
sbb
fwait
lcall
pusha
add
xor
dec
xlat
sub
int3
call
insl
add
outsl
fldl
dec
xchg
cmpsb
inc
or
scas
sbb
dec
fcmovbe
push
arpl
inc
arpl
lods
adc
xchg
sti
lcall
pushw
js
mov
xlat
push
sti
test
cmp
add
scas
sub
jne
mov
xor
push
nop
shlb
stc
mov
fwait
pop
or
add
sahf
in
push
push
pop
dec
cli
mov
hlt
xor
jmp
cwtl
sbb
adc
mov
in
or
rclb
clc
jl
pushf
cs
ficompl
lret
out
mov
lods
imul
xor
nop
scas
les
shrl
mov
mov
mov
mov
lcall
ja
inc
mov
dec
push
outsl
ret
xchg
mov
xchg
inc
push
std
pop
cltd
lcall
xor
and
adc
aas
jns
cmpsl
aaa
pushf
dec
jmp
icebp
cmpsb
jo
js
push
mov
ja
inc
jp
mov
cmp
sahf
repnz
jp
mov
inc
push
ss
jne
js
dec
lock
jns
sub
inc
push
cmp
xchg
xor
pushf
xchg
enter
test
sahf
mov
rcl
mov
outsl
inc
stc
lods
scas
shrl
xchg
popa
imul
cmpb
pop
jno
jae
fisttps
inc
lock
dec
pushf
and
mov
cwtl
fcmovnu
iret
test
je
insl
test
scas
mov
add
sub
mov
adc
mov
mov
dec
xor
imul
lret
cmp
cmp
in
lods
nop
push
dec
iret
jg
stos
lret
adc
adc
leave
xchg
lcall
fsubrs
ljmp
mov
cs
std
in
sub
aaa
loop
push
adc
ds
mov
into
sbb
call
dec
xlat
pop
push
rorl
loop
xchg
jns
inc
push
imul
xchg
adc
lock
xchg
pop
movl
sub
xchg
je
cmpb
repz
rcr
stos
dec
push
imul
add
sahf
pop
inc
sti
pop
sarb
mov
xlat
je
inc
sub
inc
rclb
pop
test
outsl
pop
add
mov
xor
jb
inc
jo
push
push
jb
adc
pusha
push
adc
loope
mov
popf
fcoml
mov
lods
pop
lock
pop
loopne
cmpsl
subl
add
pop
push
outsl
xchg
mov
pop
mov
xor
fistps
dec
or
lcall
jge
js
adc
mov
xchg
fidivrs
mov
push
ret
push
and
add
cltd
inc
dec
push
aam
add
test
xchg
cmpsb
das
mov
in
cmp
mov
mov
adc
pushf
push
mov
mov
into
adc
inc
add
sbb
paddsw
sub
xchg
in
cli
rorl
sbb
jge
fnstsw
mov
call
outsl
xchg
ds
cmpsl
pop
xchg
push
lahf
repz
jg
sbb
jo
sub
mov
stos
pop
les
int
and
jg
mov
out
sbb
ss
jle
lret
xchg
imul
inc
xor
dec
push
mov
xchg
adc
sub
push
pushl
adc
jge
movsb
push
daa
ficoms
mov
das
lock
out
rclb
aam
pop
sbb
cltd
add
dec
in
dec
pop
imul
es
pop
sbb
and
xchg
jb
mov
dec
pop
jg
lahf
push
in
cmp
sahf
mov
cmp
cs
insl
push
mov
pop
rcrb
pop
ret
dec
cmpsl
push
xchg
insl
movsb
ja
jno
add
sahf
fldenv
popa
adc
pop
push
mov
sbb
push
adcl
jns
inc
in
cmc
ja
int3
in
outsl
outsl
shrl
adc
push
and
mov
xchg
test
inc
inc
je
ret
repz
fwait
ret
inc
dec
jp
orb
xor
js
pop
xchg
rorl
push
cmp
inc
adc
ljmp
aam
mov
jge
push
repnz
inc
mov
xchg
mov
adc
sub
xchg
fistpl
jb
sbb
leave
sbb
std
pop
mov
repnz
aad
imul
cmpsl
jle
outsb
cmpsl
jb
js
xor
jp
fistl
repnz
fcomps
push
aaa
pop
cmc
aam
hlt
add
xchg
out
or
push
inc
jnp
inc
dec
insl
pop
jae
pop
int3
mov
repnz
dec
inc
cwtl
pop
jbe
sbb
popa
mov
push
add
dec
aad
repnz
pop
enter
idivb
aas
in
aas
clc
adc
ljmp
repnz
and
lods
add
sbb
push
push
pop
movsl
insl
repnz
cmpb
lahf
sbb
mov
aad
jb
js
xor
int
pop
sbb
and
sbb
movsb
ret
mov
test
inc
lds
pop
mov
pop
pop
addr16
dec
aas
xchg
scas
mov
aad
xchg
repnz
adc
ljmp
aas
sbb
fldenv
daa
stc
mov
bnd
aad
outsb
stc
in
mov
lock
mov
add
pop
lock
sub
mov
pop
mov
jle
aas
les
iret
fsubrp
into
ss
leave
nop
xor
stc
sahf
and
sub
adc
and
flds
cmpsb
sub
mov
dec
mov
push
xor
pop
mov
mov
add
cmp
inc
shrb
sbb
xchg
cmp
jle
cmp
stos
js
out
xchg
pop
mov
cwtl
test
pop
and
push
pop
dec
adc
and
lds
arpl
add
mov
mov
pop
pusha
test
pop
fdivrs
imul
jno
fnsave
jecxz
xor
xor
mov
jmp
push
xor
jo
loopne,pt
pop
xor
psubsb
mov
push
rcrl
jbe
loopne
pop
cwtl
or
and
add
decb
jl
and
int
into
xor
idivb
mov
pop
sbbl
hlt
sarb
jle
stos
int
pop
mov
jp
pop
mov
popa
add
imul
dec
sahf
jle
popf
in
xchg
test
fadds
xchg
sub
fs
inc
sub
push
nop
movsb
mov
cmpl
vpshlq
adcl
sbb
daa
mov
push
mov
xor
aam
pminub
inc
adc
cmp
std
xchg
in
dec
push
scas
mov
sbb
cmp
or
fnsave
shlb
testl
jle
push
incl
jns
and
pop
cmc
jp
pushf
add
push
rcrl
inc
test
in
loop
mov
inc
outsb
jmp
push
mov
push
int
test
scas
cmc
je
adc
out
jle
dec
push
jne
bound
push
js
mov
sbb
cmp
lea
out
jb
push
mov
stos
push
xor
loopne
cmp
sub
mov
repnz
push
xchg
rorb
ja
sub
xorl
add
dec
jle
dec
dec
mov
pusha
sub
push
std
dec
movsl
mov
rcll
inc
shrl
dec
mov
imul
imul
addr16
jo
xchg
xchg
mov
js
push
loope
stc
test
mov
cld
inc
jo
mov
sub
mov
xchg
sbb
xchg
xor
pushf
mov
scas
fdivrp
pop
pop
lret
sbb
lret
clc
arpl
mov
cmpsl
or
xlat
loope
xchg
jl
jae
dec
lods
jge
jl
fs
cmpsb
arpl
shl
ja
ja
pop
jne
xor
imul
pop
hlt
sub
jnp
loopne
lret
fists
icebp
in
clc
jno
loopne
lret
in
fisubl
fwait
cmp
xchg
lock
adc
or
push
mov
mov
mov
cmpsb
add
adc
mov
jmp
in
imul
mov
cmp
dec
insl
roll
dec
call
dec
js
inc
inc
pusha
ljmp
and
mov
test
arpl
arpl
mov
rorl
popa
xchg
and
in
mov
xor
repz
sbb
dec
sub
mov
add
fidivs
pop
inc
dec
mov
and
fnstenv
dec
jnp
mov
popf
arpl
pop
cmp
jg
leave
dec
ret
mov
sarb
movsb
iret
and
or
icebp
cmpsl
ss
mov
dec
mov
negb
xor
lock
mov
xor
sub
adc
ja
out
sub
pop
mov
mov
mov
xor
jne
xchg
xor
ja
mov
lret
aaa
add
mov
arpl
addr16
inc
add
mov
push
fsubrl
aam
push
dec
sbb
lea
xchg
test
arpl
sbb
pop
in
inc
mov
pop
push
jmp
mov
push
sti
mov
mov
adcl
cmp
int3
cmp
dec
pop
sbb
movsb
scas
add
sbb
adc
call
packsswb
out
push
in
and
push
ljmp
xchg
xor
fildll
aas
sbb
mov
cld
mov
push
mov
clc
scas
cmp
cmp
jmp
stos
scas
les
imul
xchg
out
cli
mov
adc
ja
sti
xchg
mov
inc
sub
push
xchg
sbb
insb
jae
mov
sub
dec
lcall
pop
pop
ret
movsl
lock
enter
test
dec
dec
roll
pop
inc
xchg
jmp
fwait
xchg
sub
cs
pop
mov
mov
addl
fidivrs
outsb
mov
loop
adc
xchg
or
jne
fists
cld
in
mov
mov
inc
fcompl
and
adc
js
loop
jne
xchg
into
mov
cmpsl
or
or
mov
push
adc
mov
inc
call
mov
sbb
xlat
pop
leave
cld
repnz
pop
mov
negl
es
lcall
inc
pop
scas
scas
mov
mov
scas
cmpsb
ret
dec
adc
cmp
movsw
je
inc
mov
jae
adc
xor
jne
stos
sub
mov
xchg
fnsave
mov
repz
jae
pop
pop
dec
pop
pop
inc
jne
xor
jb
mov
push
push
add
cmpsl
jo
adc
mov
ljmp
or
cs
ficompl
js
repz
cmp
mov
stos
jnp
aas
lds
out
mov
out
in
cwtl
stos
or
xlat
mov
sbbb
sub
lahf
bound
pop
cmc
nop
mov
adc
in
push
sbb
pop
push
mov
and
xor
enter
xchg
adc
cmp
cmpsl
push
ljmp
rol
xchg
in
or
mov
xchg
loop
xchg
cmpsb
sahf
jmp
jbe
mov
add
sbb
or
fstps
hlt
sbb
inc
imul
mov
fdiv
push
adc
scas
pop
push
fildll
jb
push
sbb
popf
mov
jg
mov
lds
pop
push
jp
xor
add
adc
mov
stc
mov
jns
andl
icebp
iret
ss
movsl
add
fldenv
fistps
mov
sbb
jae
test
sbb
js
mov
shll
or
jns
dec
cmp
pop
test
lcall
jo
xorl
dec
xor
jmp
enter
cmpsl
push
push
jge
cld
shrl
clc
add
or
or
and
jno
jns
pop
lock
xchg
pop
dec
xor
pop
lcall
popa
ret
ror
pop
out
popa
fnsave
jmp
dec
mov
shrl
decl
fcmovbe
push
dec
fwait
scas
rcl
rorl
add
stc
jns
inc
es
scas
xchg
lcall
pop
cwtd
push
inc
stos
mov
mov
mov
adc
mov
xchg
out
and
arpl
aas
inc
mov
sti
push
int
push
jno
mov
test
push
arpl
pop
jae
dec
out
sbb
lods
ja
jno
popa
xchg
cltd
fimull
cmp
adc
jno
adc
stos
mov
sahf
jb
in
push
jbe
out
test
cmpsb
inc
rorl
sub
stc
mov
mov
frstor
rcrl
inc
test
mov
inc
lock
push
inc
rcr
shll
cmp
out
cli
outsl
sub
sub
stos
lret
das
push
test
es
mov
push
popf
andb
imul
fiadds
pop
je
movsb
insb
mov
cli
or
lock
sub
inc
xchg
mov
or
sub
jg
add
fcomp
lea
aas
loopne
mov
cmpps
mov
dec
mov
dec
mov
mov
push
xor
cmp
push
sub
mov
orb
xor
mov
ret
insb
sub
push
in
lods
jge
stos
xor
jnp
dec
push
mov
sahf
mov
lret
xchg
divb
je
test
pop
jne
push
std
roll
mov
jno
dec
xchg
fsubrl
mov
pop
xchg
sarb
adc
fisubrs
or
and
push
mov
xor
lds
fwait
das
daa
aaa
mov
xchg
push
shrl
ret
cmp
adc
aam
and
mov
jge
sub
xchg
lahf
or
cmc
andb
push
jge
inc
mov
mov
jp
imull
shlb
fmuls
add
pop
inc
jle
jae
adc
cmp
xchg
jne
mov
xchg
add
cmpsb
jb
lret
mov
inc
out
push
mov
and
pop
stos
and
enter
cltd
ja
out
setp
lds
out
push
outsb
xchg
push
push
addr16
jno
pop
pop
lods
xorb
les
ljmp
inc
lcall
push
adcb
cltd
leave
lock
sahf
and
lock
mov
mov
sub
mov
pop
push
lahf
sub
das
lret
repnz
xchg
mov
xchg
faddp
or
or
cmp
mov
mov
or
or
add
lahf
add
sbb
xor
mov
jns
xlat
cmc
jno
dec
imul
dec
cmove
jg
fsubrs
jp
repnz
in
inc
ds
enter
push
loopne
or
xor
popa
mov
mov
cmp
jns
and
dec
jl
push
adc
mov
test
jno
sbb
adc
mov
jg
mov
and
stos
and
lcall
data16
lods
jns
and
push
push
adc
dec
cmpb
cltd
cs
push
mov
xchg
and
mov
mov
xor
push
mov
dec
adc
jae
xchg
jae
cmp
or
or
mov
fcomip
dec
sub
movsl
in
xchg
daa
jb
mov
test
xchg
push
popf
jmp
int3
dec
xor
push
lds
jle
out
mov
outsb
pushf
aad
fisttpl
mov
xchg
cmp
sbb
adc
test
sbb
pop
ficomps
popa
jno
lods
movlps
pop
loope
jae
mov
cmp
mov
inc
out
imulb
icebp
jne
sub
jecxz
pop
dec
ljmp
sub
adc
jne
jp
int3
mov
fistpl
inc
incl
nop
push
add
gs
mov
and
enter
rolb
sti
jne
out
dec
scas
or
xor
lea
jno
cmp
mov
jmp
push
in
mov
pop
popf
inc
fnsave
insl
hlt
lcall
cmp
jns
pop
mov
push
addb
lahf
mov
cmp
es
ret
jmp
jbe
fwait
mov
adc
xchg
mov
xchg
push
ret
andb
ret
and
jmp
sbb
inc
adc
out
push
sub
sbb
sti
adc
sbb
je
inc
out
hlt
dec
aaa
js
xchg
and
pop
add
sub
fstl
loopne
sub
or
sub
daa
jnp
sbb
mov
cmp
cmp
jge
stos
pop
push
mov
lods
imul
ret
dec
jns
shlb
inc
mov
insl
cmp
lahf
or
adc
lock
stos
mov
ret
cmp
pushf
xchg
ret
cmp
adc
lcall
and
mov
adc
cmp
and
sub
or
and
sbb
cld
scas
sub
das
in
cld
jno
insb
adc
fwait
mov
int3
jp
cmp
les
ja
pop
cmpsb
pusha
mov
outsl
test
mov
stos
dec
lea
xchg
xchg
push
cld
fwait
pop
sub
int
std
jno
xchg
sub
push
pop
mov
das
lods
aas
stos
dec
jmp
adc
jnp
xchg
mov
add
arpl
sub
fnstenv
fldt
pop
in
into
cmc
sti
inc
adc
loope
cmpsl
repnz
mov
mov
xchg
inc
cmp
jp
loopne
mov
pop
or
jno
push
fnstsw
push
adc
leave
ret
jne
loop
xor
pop
pop
xlat
in
or
insl
in
mov
xchg
into
shrl
aad
fistps
outsl
mov
and
cli
jl
jg
jle
and
mov
xor
pop
ret
ljmp
add
in
out
jp
test
bound
inc
sbb
call
imul
xchg
pop
test
add
cmpsl
inc
or
mov
and
dec
push
iret
mov
cmpxchg
inc
mov
xchg
adcl
sti
rorl
bnd
hlt
stos
daa
push
add
shlb
call
mov
mov
jbe
sub
pop
aam
cmpsb
ss
fdivp
mov
addr16
fs
and
adcb
jb
cltd
jbe
call
mov
popf
cwtl
add
mov
xchg
push
lcall
push
fisubl
adc
mov
adc
and
lahf
adc
fstpt
in
clc
inc
cmpps
mov
push
iret
mov
outsb
popf
mov
fwait
leave
pop
pop
jae
mov
inc
add
xchg
fsts
sub
mov
enter
faddp
outsb
testb
xchg
lock
test
std
rcrb
rcr
gs
in
aad
dec
test
push
cmpsb
adc
or
jne
insb
lods
fcoms
lods
insb
hlt
insb
aaa
bound
inc
daa
cmp
jns
sti
cmp
mov
inc
add
dec
lahf
push
loop
mov
jecxz
lcall
mov
in
jmp
out
xor
mov
adc
imul
sbb
and
jl
dec
fnstcw
or
out
pop
dec
dec
mov
lcall
or
mov
fdiv
and
fsubr
jb
insl
test
or
popa
jns
mov
out
adc
clc
fistl
mov
dec
daa
repnz
aas
add
mov
ficoms
xor
mov
or
test
jo
mov
ret
pop
inc
es
push
out
pusha
pop
out
ja
movsb
mov
pop
lret
lahf
jne
jbe
aad
andl
sub
or
sub
jecxz
and
xchg
mov
mov
pop
outsl
imul
mov
xchg
sahf
xor
sbb
jp
push
test
or
inc
xchg
push
lret
push
mov
hlt
ss
ja
pop
cmpsb
ret
xchg
jb
add
inc
sub
je
cs
jne
dec
aas
pop
pop
pop
lahf
ja
cmp
xchg
loope
sub
sub
or
dec
jb
test
sbb
aaa
pop
clc
aas
push
ss
pushf
shrl
mov
xchg
stc
mov
pop
popa
in
cmp
inc
xchg
cmpsb
testl
cli
stos
push
pop
xchg
mov
das
scas
jmp
jl
js
fstpl
cli
mov
sub
add
dec
fisubrl
xchg
xchg
mov
add
ret
mov
stos
push
lods
lahf
jb
mov
xchg
cmp
dec
add
add
test
add
int3
dec
cmpsb
dec
out
fsubp
pop
mov
cltd
cld
les
jg
inc
stos
ljmp
sub
iret
push
sbb
jecxz
into
mov
aam
fiadds
stos
pusha
add
xchg
ljmp
out
adc
push
mov
mov
pop
cmpb
add
fnclex
or
and
outsl
mov
pop
inc
lahf
pop
test
xchg
cmc
fcomi
das
stos
jge
stos
int
movsl
xchg
pop
sbb
push
fs
and
add
bound
ret
mov
sbb
mov
nop
rorl
orb
xchg
mov
dec
fdivl
lcall
pop
sub
notb
jo
scas
add
and
pop
shl
or
cli
shl
lods
andb
loope
inc
movsb
pop
mov
pop
sub
and
scas
jb
push
decl
jbe
push
outsb
mov
or
or
mov
mov
dec
rcl
push
shll
sbb
arpl
adc
pop
or
sbb
or
cwtl
loop
push
xlat
test
insb
mov
pusha
inc
or
inc
std
test
mov
pop
fbld
jl
and
xchg
movsb
push
jecxz
and
dec
nop
xor
pop
in
sub
lret
inc
shrb
sub
sbb
popa
jge
lock
mov
mov
add
and
ret
shlb
push
push
mov
and
stos
loop
mov
ja
mov
cmp
add
cmp
xor
pop
push
or
sbb
or
sub
jl
out
sub
ja
dec
mov
stos
imul
jne
inc
outsb
push
cld
mov
push
inc
push
insb
in
js
inc
lods
mov
cmpl
pop
pop
pop
pop
mov
mov
iret
xor
mov
adc
sub
xor
dec
ffree
sbb
lock
subl
cmp
aaa
jnp
clc
mov
icebp
movsb
xor
clc
add
clc
adc
iret
fisubs
rcl
jno
ja
outsb
adc
movsb
cwtl
repnz
pop
jno
lea
cmp
xchg
loop
inc
jb
and
aad
jae
lcall
dec
jge
ljmp
stos
push
loop
xor
mov
xchg
push
cmc
jo
movsl
jo
cmp
arpl
xchg
xchg
push
jae
pop
mov
push
dec
pop
pop
xchg
xchg
cmp
movsb
xor
pop
aam
pop
shrl
dec
gs
jns
subl
mov
mov
cwtl
pop
dec
inc
inc
cmc
xchg
mov
daa
daa
adc
test
mov
fcompl
mov
shl
jne
es
mov
cmp
jno
cld
cmpl
pop
dec
int3
into
mov
cwtl
outsb
dec
inc
inc
cmc
mov
sbb
xor
sbb
imul
or
es
xlat
enter
test
les
pop
dec
cwtl
jle
xor
arpl
cmc
mov
mov
fs
push
and
pop
jp
fisubrs
int
add
xchg
bound
jno
insl
dec
movsb
add
fdivrl
repnz
mov
cmp
je
leave
adc
in
inc
aas
roll
sbb
adc
push
xchg
daa
mov
dec
shrb
and
or
fistpl
inc
in
add
jae
jnp
pop
test
pop
cmc
sti
mov
mov
arpl
imul
jg
pop
push
pop
lret
dec
or
nopw
xlat
mov
push
cmpsb
mov
sub
insl
daa
cmp
xchg
mov
test
or
mov
and
fucomip
mov
in
jle
daa
push
rcll
fs
adc
insb
js
pushf
cmp
sbb
std
dec
fildll
jne
ret
mov
out
ss
ds
jae
mov
mov
mov
sub
cwtl
jne
xor
data16
jns
push
stos
aaa
adc
pop
adc
cmp
push
jae
mov
jo
and
mov
out
cmp
cld
sbb
pop
dec
les
loope
repnz
pusha
fnsetpm(287
push
add
mov
pop
mov
ja
mov
cmp
pop
push
push
cmc
and
in
jae
xchg
adc
addb
cmp
roll
jp
stos
dec
jge
rcr
int
mov
sub
in
jae
stos
cmp
test
daa
mov
xchg
and
and
add
jg
addr16
lock
loop
pop
lret
sbb
push
xchg
cmp
ret
aam
pop
or
iret
stc
mov
ss
or
jnp
mov
adcl
das
imul
pushf
cli
pop
mov
mov
mov
sub
jmp
test
mov
push
stos
lds
and
in
inc
andl
cs
and
out
jge
aas
sbb
mov
test
cmp
imul
xchg
dec
enter
sbb
push
jb
repz
ljmp
or
sbb
popa
pop
add
lcall
call
inc
xchg
arpl
inc
lods
mov
push
push
lcall
adc
loope
cmp
aas
std
mov
imul
push
push
push
lea
mov
push
imul
dec
sahf
jbe
or
out
hlt
mov
jl
ljmp
inc
push
mov
mov
add
push
pop
jae
test
pushf
iret
cmpsl
ret
arpl
xlat
mov
out
push
xchg
fadds
push
roll
or
xchg
dec
cmp
iret
mov
pop
push
jle
addr16
sbb
jbe
push
mov
jne
aam
into
pop
adc
pop
ret
icebp
pushf
push
movsl
xorb
enter
and
sub
mov
push
je
pop
cmc
jb
pop
xlat
arpl
inc
inc
pop
inc
sub
jecxz
ret
jns
xor
adc
cmp
pop
pop
fadd
mov
mov
pop
xchg
inc
into
int3
xor
fcompl
or
sbb
inc
in
jmp
xchg
add
jle
adc
pop
ret
sub
pop
sub
insb
ret
ds
fisubl
adc
pop
aad
divl
sub
lret
fdivrl
shr
cmc
or
sub
sbb
adc
and
mov
xchg
inc
pop
imull
fcomps
mov
orl
inc
mov
fnclex
pop
dec
ficoml
dec
xchg
sbb
xchg
pop
clc
ret
leave
sub
adc
sbb
in
and
cmp
cmp
faddp
pop
daa
jecxz
cmc
cmp
inc
xor
dec
in
test
mov
in
adc
outsl
and
adc
pop
jmp
xchg
frstor
rcl
test
sub
cmovg
in
mov
mov
sbb
repnz
stc
movsw
or
daa
jge
xchg
push
test
lea
aaa
mov
movb
mov
jno
cmp
dec
push
scas
mov
sub
xor
cmp
sub
repnz
push
stc
out
pop
pusha
and
or
cmp
cmp
adc
sbb
or
cmp
insl
cmc
call
leave
test
mov
inc
jmp
or
or
insb
pop
or
jne
add
je
push
in
sbb
ss
adc
or
js
push
pop
jb
pop
nop
xchg
leave
test
icebp
insb
and
das
xor
mov
ret
sub
je
mov
or
test
or
xchg
ja
sub
jg,pn
je
je
sub
sbb
test
push
mov
adc
sar
jmp
adc
sarl
mov
xor
jno
dec
or
sti
xor
cmpsl
test
mov
ret
sub
mov
mov
add
jnp
dec
movzbl
xchg
adc
pop
adc
jne
xor
lock
or
or
adc
ds
mov
ret
stos
or
push
in
movsb
cwtl
dec
mov
sub
or
icebp
xchg
pop
dec
push
jmp
adc
sbb
cmp
ret
or
lcall
add
pop
adcb
jp
or
lock
mov
adc
cmp
mov
or
jmp
push
dec
pop
adcl
jp
push
push
shrl
cltd
pop
sti
inc
cli
pop
mov
mov
mov
pop
loopne
push
cmp
cmp
mov
mov
out
lea
sbb
mov
ficompl
sbb
xor
inc
mov
sbb
ficompl
adc
nop
xchg
add
or
bound
imul
sbb
fcmovbe
push
std
cld
mov
add
sbb
call
push
insl
jno
xor
inc
fimuls
pop
cld
repz
add
clc
mov
bound
cmp
scas
pop
fwait
cmp
arpl
mov
inc
lock
stos
adc
push
xchg
mov
popa
popf
pop
push
gs
je
jae
or
imul
stc
call
and
mov
mov
flds
hlt
dec
cli
push
jmp
sub
sbb
ret
cli
out
cwtl
push
dec
ret
jp
sbb
jecxz
and
mov
or
xchg
jle
mov
adc
lods
js
lcall
addr16
in
mov
add
fcmove
stos
xor
mov
mov
or
jns
mov
popa
fsubrs
je
gs
and
jge
imul
dec
inc
lret
jg
pop
add
loope
inc
lcall
out
pop
popl
hlt
sahf
push
sbb
jo
aaa
divb
push
divb
js
jmp
inc
sub
inc
xchg
ja
addr16
in
sub
call
lea
mov
insl
adc
push
mov
dec
cs
pop
insb
add
call
mov
in
dec
imulb
fldenv
mov
movsl
int
jg
sbbb
das
popf
xchg
in
lret
mov
mov
push
jl
rcrl
xchg
mov
lds
idivb
test
push
mov
stos
aas
lahf
sub
in
inc
mov
push
shl
push
into
insb
mov
test
inc
leave
stos
test
nop
pop
add
sub
inc
lea
dec
hlt
mov
fstps
imul
xchg
xor
cld
mov
test
inc
cmp
and
enter
mov
test
mov
subps
jle
jecxz
int3
pop
fst
adcb
jg
insl
mov
xchg
in
cli
sbb
nop
fwait
jns
fistpll
shlb
xor
xchg
sbb
xor
xor
xor
pop
cmc
xchg
jo
mov
aas
lds
popf
das
push
push
stos
cltd
push
sub
add
pushf
rcll
ficoms
push
inc
lods
and
fcompl
jb
or
aas
lods
pushl
lcall
xchg
inc
frstor
and
cs
outsl
imul
add
jp
lea
sub
push
cltd
mov
push
popf
push
mov
icebp
fisubl
fldl
decb
xchg
mov
inc
cmpl
mov
inc
sarl
xchg
ret
cs
movsb
cmp
add
cwtl
lods
or
int3
lret
cltd
fmul
inc
cs
lods
ja
cld
sub
negb
popa
and
push
push
repnz
or
mov
sub
or
inc
cs
push
in
idivb
jle
adc
jae
sbb
mov
xor
xor
out
add
sbb
cmc
xor
sub
or
pop
sbb
mov
cmp
dec
sub
stc
dec
mov
sarl
inc
out
fstl
mov
sbb
loopne
pop
test
sub
sbb
pop
popf
xchg
and
mov
sti
test
and
into
push
sub
dec
push
and
mov
mov
or
mov
imul
mov
lock
inc
jmp
andb
sub
mov
enter
pop
int3
jl
hlt
test
in
xchg
fwait
push
into
pop
mov
jmp
ljmp
push
sub
repz
mov
push
adc
ret
xchg
insb
rorl
dec
jecxz
ret
pop
xor
sbb
sti
or
lret
sbb
shll
cli
xchg
sub
or
or
into
sub
inc
jns
cmc
jecxz
scas
mov
xchg
addl
and
xchg
cmp
push
rcrl
test
and
cmc
push
xor
pushf
xor
jp
andl
sub
inc
in
popf
cmp
cmp
lcall
inc
nop
mov
das
sbb
leave
aas
nop
dec
js
ja
mov
cli
icebp
mov
pop
sbb
cmpsb
mov
sub
push
jae
xchg
inc
popa
push
pop
add
fmull
jbe
xchg
ret
jnp
mov
ftst
mov
adc
call
and
or
jb
mov
xor
jb
pusha
jb
xor
ds
xor
xchg
out
rcll
cmp
mov
sti
pop
mov
lret
dec
scas
sbb
push
sbbb
aas
test
jnp
cmp
pop
in
and
adc
mov
outsb
push
or
mov
aas
pop
outsl
adc
int3
adc
add
mov
pop
bound
jne
push
mov
ds
cvtps2pd
xor
and
out
sbb
divl
mov
lcall
jecxz
sbb
lcall
xchg
lods
hlt
and
mov
int
repz
jge
out
push
add
sub
sar
subl
shrl
xchg
je
movsl
shlb
sbb
mov
data16
push
sahf
mov
push
pusha
dec
shll
subl
cwtl
add
sub
repz
mov
mov
out
dec
rcr
js
pop
into
jg
or
out
and
mov
push
mov
inc
xchg
jl
aad
nop
ja
mov
cmp
lret
mov
sbb
mov
loope
popa
mov
jo
scas
push
rcrb
pop
mov
jo
popa
add
inc
sti
jb
xchg
mov
fiadds
orl
sbb
cmp
cwtl
out
test
adc
aas
push
call
mov
sarb
xor
mov
mov
push
mov
test
inc
clc
pop
pop
sbb
xchg
scas
ja
popf
fisttps
in
xchg
cmc
mov
mov
mull
push
stos
cmp
pop
test
in
or
push
push
adc
xchg
sub
das
icebp
adc
mov
fnsave
aad
das
jp
push
inc
mov
in
fdiv
cmpsl
cmp
ja
out
sbb
rolb
push
popa
fldcw
xchg
push
mov
mov
bound
insb
jne
cmp
xchg
cs
in
insb
adc
xchg
fisttpll
test
cli
sarb
xor
xchg
gs
mov
sub
jno
call
int
into
inc
dec
mov
fs
jle
mov
push
sub
lock
fdivs
or
and
es
stos
mov
inc
fbstp
mov
popf
mov
js
movsl
lock
xchg
inc
shll
add
repnz
adc
fwait
sub
mov
fldt
shrb
int3
stos
aad
fimull
xor
mov
loopne
outsb
inc
push
xchg
push
sbb
adc
pop
insl
dec
jecxz
sub
jle
fadds
mov
das
jmp
mov
or
inc
cmpsb
cmpsl
xlat
hlt
ljmp
dec
or
iret
insl
sub
jne
adc
sbb
pop
adc
xchg
mov
jbe
jmp
mov
cmpsl
cli
movsb
adc
rcrl
jne
adc
or
jl
add
xlat
mov
lds
es
dec
mov
loop
sub
add
imul
std
movb
nop
out
sbb
test
jp
dec
pusha
cmp
add
stos
dec
addr16
sub
cwtl
test
stc
pop
jae
pop
sti
push
call
test
add
cli
push
pop
sub
sti
hlt
xchg
sub
into
sub
jge
mov
mov
lcall
std
mov
js
aas
lds
xchg
cli
mov
mov
movsb
notb
cmp
repz
jns
divl
jmp
xchg
stos
enter
pop
xchg
pop
vmwrite
stos
fcomip
xchg
je
in
mov
xor
popa
mov
xchg
out
xor
test
pusha
jns
sbb
out
data16
jmp
jns
les
dec
out
aas
xchg
xor
pop
lea
jle
popf
adc
jno
mov
out
jns
dec
dec
mov
daa
lret
xor
es
jns
mov
pushf
aam
pushf
dec
mov
xor
xorl
aad
mulb
jmp
mov
aad
std
and
sarb
mov
daa
in
mov
pusha
add
pop
daa
mov
push
das
xchg
jmp
loopne
adc
fwait
pop
test
or
or
ds
mov
jne
mov
outsb
and
inc
aaa
mov
scas
push
dec
mov
fidivrs
ret
fdivp
fsubl
popf
dec
fwait
xor
imul
mov
push
mov
stos
mov
out
arpl
leave
emms
aam
jl
cmp
fwait
mov
pop
push
jns
pushf
jp
xchg
dec
fisubs
mov
pushf
pop
push
jae
icebp
mov
or
test
loopne
imul
icebp
or
xchg
push
push
push
cwtl
sub
jmp
pop
lcall
mov
push
negb
xor
xorl
mov
shll
test
push
adc
mov
lock
lock
aad
cmc
filds
pop
sbb
adc
jg
fs
fwait
push
pop
sahf
pop
or
mov
sti
outsl
push
lahf
push
aas
xchg
mul
add
jle
fcompp
gs
sbb
jmp
das
mov
push
out
fcompl
push
shlb
xor
sbb
lods
pop
jne
fdivrp
push
jne
fnstcw
outsl
dec
cs
push
xor
addl
shrl
stos
sbb
stos
pop
push
push
and
dec
xchg
adc
jge
jnp
es
fbld
jmp
adc
jmp
inc
adc
fisttpll
xor
fbstp
pop
aad
in
mov
xor
insl
stc
test
push
inc
mov
xor
push
test
dec
jg
cmp
sub
lods
popa
notl
fcmove
push
mov
push
adc
lods
adc
inc
sub
jb
shlb
shr
sub
jbe
inc
ja
cmc
mov
rcrl
push
aad
jl
pop
fisubs
sbb
loopne
pop
fcompl
inc
jmp
fnstcw
add
stos
mov
insb
mov
shl
outsb
rolb
aam
xchg
and
jge
ds
div
aaa
adc
xchg
fiadds
push
push
mov
shlb
sub
aam
xlat
inc
push
aaa
mov
lds
xchg
dec
jmp
rol
imul
xchg
mov
or
jle
aas
sbb
ds
jo
lock
mov
mov
les
icebp
ljmp
push
mov
arpl
mov
push
inc
push
into
mov
stos
cmp
pushf
mov
jnp
cmp
cmp
xor
pop
flds
fadd
orl
fdivrl
in
mov
jmp
iret
xor
fcomps
mov
in
or
outsb
ds
sarb
repz
push
outsl
sbb
in
sub
cmp
adc
lret
repz
jb
movsb
fdiv
in
in
adc
loopne
shll
repz
pop
jmp
or
out
shll
rorb
or
mov
outsl
inc
pusha
inc
mov
cmp
mov
xchg
jg
xor
xor
std
jge
sahf
dec
or
jnp
cmpsl
sub
mov
xchg
sbb
shl
cld
cli
inc
fcmovu
push
xor
jne
mov
jmp
push
push
lret
lock
inc
pop
pop
push
rclb
and
leave
aam
pop
jmp
out
test
pop
jno
mov
push
pusha
mov
pop
sbb
mov
jo
cli
xorl
cmpsl
les
loop
inc
fisubrs
jae
out
outsb
cltd
stc
out
xchg
lds
adc
mov
add
movsb
mov
dec
aam
leave
fs
push
inc
cmpsl
push
mov
jno
mov
fsts
push
mov
out
push
in
and
lss
aaa
mov
shll
xchg
mov
push
fmul
int
mov
fmul
push
fcoml
ss
push
xchg
pop
and
xor
jl
mov
mov
cld
int
inc
jnp
fstps
xchg
leave
xchg
adc
push
out
mov
xchg
pop
xchg
pop
arpl
jle
ja
fs
sbb
mov
shrl
push
mov
add
ss
mov
cmp
jae
inc
cs
sti
int3
movsb
test
dec
mov
jmp
lock
add
addr16
pushf
dec
mov
mov
clc
fmuls
xor
cmp
dec
iret
push
mov
popa
push
adc
lret
icebp
push
mov
mov
jb
fists
int3
mov
cmp
jle
shrl
ljmp
cmove
lds
shll
fs
dec
or
inc
push
adc
mov
jecxz
mov
mov
sbb
adc
and
in
fs
sub
test
mov
out
and
aam
sub
sub
adc
daa
inc
cmp
or
sbb
subl
lods
inc
pop
add
pop
mov
mov
lea
or
enter
shl
nop
incb
clc
repnz
xor
fsubrs
lcall
push
or
out
sahf
sub
cmp
inc
jno
mov
in
pop
and
in
imul
outsl
push
jmp
and
pop
or
scas
xchg
pop
aam
je
bound
les
inc
jo
lods
es
sub
add
sbb
in
ret
dec
cmc
pop
bound
ds
into
add
cmp
push
jb
adc
loop
out
ljmp
scas
sub
inc
mov
test
stos
call
rcl
rdmsr
lcall
sbb
mov
cmp
mov
loop
adc
push
xlat
push
add
cmp
cwtl
jmp
and
jo
hlt
incb
pushf
pushf
mov
cmpsb
xchg
cmp
or
sub
and
mov
push
mov
pop
dec
mov
cmp
cwtl
inc
and
sbb
scas
mov
cmp
xchg
jo
jecxz
adc
movsb
fwait
shll
es
pusha
xchg
mov
lock
insb
dec
pop
and
jge
cmp
sub
sub
orb
mov
mov
outsb
std
ds
clc
sub
cltd
xor
loopne
sbb
test
xchg
push
ss
fnstcw
xor
and
shl
nop
mov
push
push
push
loop
popf
mov
xchg
mov
les
fsubrs
and
imul
incl
jb,pt
repnz
mov
dec
pop
sbb
xchg
shll
notb
out
outsl
mov
shll
ds
leave
adcb
cmpsl
jge
sbb
stos
xor
jns
jge
dec
xchg
and
jg
cmpsl
imul
jl
in
int3
mov
push
xor
mov
xor
leave
inc
insb
stos
and
pop
je
repz
and
jge
and
rorl
dec
sbb
or
add
inc
mov
scas
add
out
mov
notl
push
jle
push
inc
std
mull
mov
mov
negb
in
incl
mov
fwait
push
inc
addr16
pop
std
stos
lahf
push
js
test
loope
rolb
repnz
pop
imul
pop
push
push
mov
cmp
into
hlt
push
imul
movb
sub
popf
pop
pop
adcl
and
cltd
sti
shll
mov
shr
sub
adc
pop
push
pop
repz
sbb
sub
sbbl
mov
inc
dec
int
mov
mov
xorl
adc
int3
and
ret
xor
xchg
add
mov
daa
hlt
xchg
inc
pop
addl
sub
push
push
andb
cld
fdivrp
push
in
aam
lds
icebp
icebp
imul
ljmp
shr
outsb
repz
test
bound
jns
in
xor
shll
aam
stc
inc
or
enter
mov
int3
fimuls
loopne
imul
add
cmp
mov
adc
lret
inc
adc
lods
pop
out
or
dec
xchg
sub
cwtl
sub
out
call
call
cli
repz
mov
test
add
xor
jmp
xlat
test
rolb
push
xchg
std
push
cmpsl
ror
scas
add
mov
jg
in
push
fidivs
jbe
into
daa
push
xchg
imul
in
adc
mov
dec
es
fldenv
icebp
mov
mov
xor
xor
cmpsl
imul
sahf
adc
call
push
mov
fdivrl
sub
inc
push
mov
adc
lods
mov
jl
jb
dec
sbb
mov
sub
outsl
jp
xor
or
sub
pop
adc
aad
out
repnz
dec
pop
repz
cmpsl
aam
mov
aad
push
xor
lock
loopne
arpl
decb
mov
aaa
imul
dec
aam
repnz
xor
jge
fdivl
xchg
mov
fsts
in
clc
cmc
je
lret
mov
ds
jo
mov
xor
adc
adc
std
xlat
jle,pt
push
cmc
fwait
push
jp
xor
leave
jmp
sbb
lcall
jae
ds
and
stc
test
xor
icebp
sbb
push
test
hlt
scas
ds
mov
aam
cmc
xor
adc
jecxz
repnz
sbb
cmpsb
xchg
xor
das
mov
push
pop
push
dec
mov
mov
out
sub
test
incl
xchg
movzwl
out
div
shll
loopne
adc
movsb
scas
xchg
jmp
mov
sbb
loopne
push
sbb
jmp
clc
ja
xchg
inc
imul
js
popa
mov
cmc
or
jo
pop
dec
sti
enter
xchg
sti
pop
repz
not
shlb
es
andb
mov
dec
inc
nop
scas
push
arpl
pop
test
push
add
mov
mov
jg
fs
rclb
call
push
ljmp
jae
inc
add
mov
xchg
inc
sbb
push
mov
adc
sub
sar
xchg
pop
in
lret
jl
sub
mov
loope
lea
pop
jg
out
adc
int
sbb
and
lret
dec
jg
es
lock
jg
decl
leave
mov
negb
or
adc
fwait
adc
push
ljmp
mov
pop
sti
add
push
hlt
bswap
jge
syscall
add
fptan
inc
cmc
inc
mov
sarb
repz
mov
punpckhwd
cmc
mov
fmull
sub
pusha
pop
push
int3
orl
jle
adc
fst
or
sbb
pop
jl
add
js
repnz
cli
lds
cltd
frstor
int3
sub
inc
xchg
sbb
mov
fisubrl
fisubl
loope
lea
pop
fs
pop
adc
pop
sbb
cmp
lret
dec
fs
jb
std
fcmove
fs
or
xchg
sbb
rcll
adc
loope
out
mov
loope
or
sub
sahf
orl
adc
dec
pop
outsl
dec
mov
xor
fs
jmp
scas
jg
or
cmc
fildl
popf
scas
xor
adcb
xor
dec
clc
int3
cld
cltd
lods
fildl
test
ds
mov
adc
dec
inc
andnps
push
andb
fists
out
test
ret
es
sysenter
jp
std
lret
push
imul
mov
sahf
fsubs
dec
xor
imul
js
adc
jne
in
sbb
daa
cmc
ja
iret
sub
out
jb
dec
rcrb
and
ss
movsl
shrl
xchg
jo
faddl
lea
int
out
stos
xchg
pop
loope
leave
and
sub
incb
stos
mov
pop
add
push
sub
or
in
out
int3
and
aad
mov
cltd
fisubl
mov
sub
inc
or
enter
insl
rclb
add
jbe
jge
or
outsl
push
or
daa
xor
fldt
push
jne
test
cmpsl
sbb
pop
sbb
daa
cmp
sti
daa
push
int
inc
mov
mov
jns
pusha
pop
dec
cmpsl
dec
cmp
xchg
cmp
in
out
or
fstps
sahf
lcall
sbb
add
xchg
sub
nop
aad
clc
xchg
mov
dec
out
jle
aas
faddl
ds
xor
push
ret
out
and
enter
push
add
push
mov
push
outsl
hlt
or
xor
add
sub
jb
dec
jb
loop
jb
loop
popf
ror
xlat
adc
mov
jecxz
or
cwtl
push
or
aas
cmc
add
clc
adc
adc
fcmovb
push
push
mov
repnz
cltd
or
daa
mov
enter
adc
pop
clc
pop
repz
sbb
add
sub
cmp
in
sub
cs
out
fmull
add
fnstenv
std
mov
mov
mov
fimuls
mov
inc
arpl
jl
imulb
dec
int3
sub
adc
sahf
in
cmpsb
dec
adc
lcall
dec
leave
stc
pusha
das
shlb
xor
xor
mov
incl
fwait
js
sbb
mov
mov
inc
jae
test
sbb
repz
shr
jno
xchg
repz
lcall
fdivr
or
ret
cmpsl
ja
xchg
sub
push
push
jp
fcmovbe
mov
ret
push
push
sbb
ljmp
clc
ljmp
ljmp
or
das
mov
inc
rol
mov
lcall
and
mov
xchg
int3
mov
iret
insb
aad
or
sbb
mov
adc
jle
xlat
imulb
and
xor
outsb
addl
xchg
xor
test
jbe
mov
push
mov
lahf
xchg
insl
sbb
push
ja
loopne
das
sub
jge
imul
decl
sbb
sub
mov
je
jae
jp
lcall
aad
icebp
lods
mov
sub
aas
sub
idiv
pop
js
xor
repnz
call
sbb
cmpsb
scas
sahf
jb
adc
out
cmp
fdivs
lods
dec
push
es
enter
addr16
xchg
popf
aad
sbb
mov
ja
and
mov
mov
xchg
adc
adc
and
pusha
cmp
jl
fisttps
fcmovne
add
xchg
push
sbb
push
ljmp
dec
jge
incb
inc
cmc
jmp
repz
or
scas
and
cmc
mov
lret
and
xor
aam
repz
aam
pop
jle
lods
mov
add
add
pop
sub
rcl
stos
pop
push
and
dec
out
out
cld
push
pop
ret
xchg
push
cltd
mov
cmp
aas
outsl
push
add
push
mov
mov
pop
aad
inc
in
mov
shl
cltd
cmp
mov
ljmp
sub
sahf
fidivl
pusha
mov
fidivl
push
or
sahf
or
gs
lcall
andb
mov
in
aas
jno
pop
xchg
jle
mov
add
lds
jp
mov
cmp
aad
imul
xor
jl
lea
mov
dec
xor
dec
or
outsb
mov
lock
cmp
cmp
cmp
jno
mov
inc
out
sbb
stos
cmp
aaa
inc
inc
mov
fstl
pusha
adc
jmp
dec
sbb
leave
push
xchg
jmp
sbb
sbb
aad
jecxz
les
push
lfs
mov
cmp
xlat
mov
pop
pop
jbe
mov
sarb
int
scas
cmp
mov
cmp
mov
cmpl
mov
xlat
mov
dec
mov
xchg
mov
aam
rolb
jmp
push
pushw
push
test
pop
jns
cs
testl
push
lea
and
fiadds
sbb
push
outsb
jg
hlt
cmpsb
imul
jb
test
repz
push
aaa
push
or
sbb
movsb
mov
insb
sbbb
aad
scas
cmp
pop
add
aas
xor
push
aam
cwtl
or
jg
sbb
cltd
in
push
jp
je
and
pusha
push
sub
xchg
clc
dec
cltd
movsb
ret
adc
lds
stc
sbb
outsb
movsl
repnz
das
mov
scas
lahf
mov
rcrb
mov
jge
pop
xchg
mov
test
pop
push
dec
adcl
mov
inc
aam
jle
sub
nop
or
insb
clc
nop
cmp
ret
insl
sbb
outsl
add
adc
das
cwtl
sbb
push
popl
jno
inc
scas
add
pop
mov
pop
into
xchg
imul
mov
in
mov
insl
pop
clc
cli
jl
jp
ret
shlb
cwtl
or
and
cmp
adc
sub
repnz
pop
add
ljmp
aas
mov
flds
mov
imul
imul
xchg
jb
pop
fstps
out
sbb
adc
mov
cmp
jg
ljmp
bound
sbb
pop
jno
mov
push
int3
xchg
and
mov
outsb
pop
and
pop
cmpsl
ja
pushf
leave
repz
je
les
sbb
popf
test
mov
loope
test
lret
xchg
cmp
stos
lret
or
jb
dec
jle
inc
adc
ljmp
ret
jo
mov
mov
xor
mov
and
cmp
adc
sub
repnz
pop
add
push
aas
xor
aas
lret
and
mov
pushf
mov
mov
mov
pop
insb
repz
xor
adc
ds
jb
nop
jmp
js
inc
aam
cwtl
ljmp
callw
scas
fwait
xorl
push
push
add
mov
mov
mov
xchg
pop
mov
xchg
scas
scas
jae
push
mov
je
dec
cmpsl
orw
test
arpl
inc
test
pop
andl
out
nop
and
jnp
jmp
and
sub
rol
das
bound
test
or
test
movd
mov
dec
and
cmp
inc
pop
and
ljmp
xchg
jno
pushf
add
jne
cmp
lret
sti
adc
or
scas
push
jnp
xchg
call
fldenv
mov
push
adc
es
sbb
stc
daa
nop
pop
mov
imul
negb
fadds
pop
cmpsb
adc
mov
mov
pop
xchg
pusha
icebp
scas
xchg
pop
std
xchg
adc
stos
fisubrs
testb
add
inc
pop
jg
dec
sbb
cmp
outsb
ret
daa
dec
sbb
inc
pop
push
lods
lea
pop
stos
push
push
mov
cmp
inc
iret
mov
jb
xchg
or
out
sub
push
in
pop
sahf
jae
pop
jmp
mov
sbb
mov
divl
push
imul
es
add
loopne
mov
xchg
jl
jecxz
dec
arpl
inc
add
xchg
stc
push
les
mov
sub
inc
mov
arpl
push
push
rclb
pop
ficompl
add
sbb
mov
cli
xchg
mov
hlt
fprem
mov
in
pop
mov
xor
lods
mov
cwtl
mov
push
xchg
or
das
or
push
lds
pop
lret
mov
mov
mov
cmp
fstpl
or
add
pop
jl
inc
loope
mov
xor
adc
push
popa
out
dec
cwtl
mov
inc
clc
dec
popl
fdivrl
push
js
dec
xor
inc
in
mov
aad
stos
js
add
pop
pushf
orl
imul
or
xchg
jl
mov
jmp
xor
push
bound
xchg
xchg
mov
mov
data16
pop
adc
insb
xchg
popa
add
push
stos
add
jnp
icebp
fcmovb
push
jl
ret
nop
mov
enter
cltd
dec
pop
bound
mov
mov
insl
jg
dec
push
sbbl
fmuls
adc
push
push
and
es
mov
mov
and
lret
mov
aad
mov
cld
stc
pop
inc
jp
mov
mov
rep
jge
hlt
fadd
je
xor
or
jno
gs
es
jnp
nop
cld
cmpsb
divb
imul
das
shl
sbb
dec
arpl
and
jnp
outsb
add
out
mov
ret
scas
imul
or
jnp
xorl
push
pushf
test
pusha
fwait
push
sbb
jmp
idivl
les
rcll
fmuls
loop
jnp
rolb
sbb
jns
cltd
stc
pop
in
out
jp
push
mov
sub
pop
mov
loop
rcll
and
mov
and
add
jnp
mov
mov
lock
ret
mov
push
jnp
jp
sbb
adc
call
cwtl
stos
mov
push
pop
negb
push
adc
or
test
push
jnp
repnz
lret
lods
int
push
sub
lds
int3
jle
lret
xchg
std
sarl
imul
xor
lds
stos
push
or
das
fnstcw
jmp
popf
lret
pushf
enter
mov
pop
addr16
int
mov
sbbb
xor
inc
adc
cmp
into
cltd
fwait
cld
pop
jnp
push
popa
das
adc
mov
lock
fsubl
mov
adc
xchg
adc
push
lret
mov
lcall
dec
ret
rclb
jnp
and
mov
cmp
jl
mov
add
in
xor
xchg
jle
push
adcb
push
mov
and
mov
lock
mov
stc
add
jnp
xor
mov
mov
and
mov
mov
int
shll
sbbl
ja
fisubrl
xor
dec
sub
jae
cltd
mov
mov
insl
hlt
repz
lods
jl
shrl
add
mov
addr16
dec
inc
pop
push
daa
add
xor
dec
adc
inc
mov
enter
xor
shlb
xor
int
pop
out
inc
push
icebp
cmp
incb
cmp
xchg
mov
out
hlt
add
adc
rolb
out
adcl
jb
pop
out
dec
sbb
push
and
xchg
cwtl
mov
jmp
xor
clc
mov
xchg
jp
xor
mov
mov
sub
xor
inc
iret
andl
cmp
lea
insb
push
xchg
jno
mov
stos
cmp
xchg
das
mov
inc
clc
out
out
mov
xorl
mov
dec
cmpsb
neg
inc
es
aam
jecxz
add
rclb
ss
and
mov
inc
pushf
xchg
xor
inc
ret
mov
test
arpl
leave
adc
mov
insb
jae
mov
xchg
pop
idiv
pop
mov
xchg
inc
jnp
xor
or
leave
adc
pop
test
cmp
adc
dec
pop
xor
scas
bound
mov
repnz
jl
adc
int
cmp
jp
loop
je
lret
stc
adc
testl
sub
push
and
aas
push
mov
jl
dec
shrl
call
push
pop
inc
popf
xchg
pop
rorl
scas
jmp
cwtl
mov
sbb
dec
adc
mov
icebp
mov
test
push
jp
push
sub
cwtl
dec
dec
jbe
outsb
fs
stos
xchg
mov
push
inc
push
dec
pop
pop
jno
les
xchg
sbb
push
pusha
loopne
out
mov
mov
pop
leave
sbb
das
mov
ss
cmp
push
aam
cltd
mov
cs
pop
test
mov
sbb
mov
negb
adc
ljmp
aas
lds
mov
pop
ja
movsb
pop
sbb
xor
add
xchg
not
adc
push
dec
js
jno
mov
insl
dec
mov
jb
or
aas
pop
dec
out
jb
cli
cmpsb
aas
adc
in
repnz
int
movsl
mov
in
lea
xchg
pop
xchg
jmp
mov
sbb
adc
jb
out
hlt
addr16
jo
sub
inc
mov
inc
inc
xlat
sub
xchg
xorl
push
call
cmp
fdivrs
jae
roll
out
jnp
jne
enter
mov
cltd
dec
xchg
push
fldenv
mov
repnz
aad
imul
int
pop
addr16
nop
aad
sahf
repnz
adc
ljmp
cmp
nop
lcall
cmpsl
pop
pop
mov
sbb
add
xchg
in
aad
add
pop
dec
pusha
pop
jns
sub
frstor
test
mov
jne
aas
mov
js
xor
int
pop
jno
inc
jge
mov
icebp
pop
pop
xchg
bound
pop
pop
push
cmp
movd
aas
sub
xchg
jg
pop
mov
pop
fstps
in
pop
sbb
movsb
out
mov
inc
add
mov
pop
sbb
mov
orb
ja
sub
add
add
xchg
mov
arpl
mov
fs
xor
aad
imul
int
jne
or
movsb
adc
sbb
and
ss
repnz
pop
cmp
fbstp
push
sub
orl
cmc
adc
inc
jle
lock
in
inc
add
mov
adc
push
out
in
and
pop
lahf
arpl
adc
stos
sar
cli
fnsave
cmp
push
sti
aas
sysexit
and
shlb
lods
out
movb
std
cmpsb
sub
inc
add
push
loope
fbld
sbb
int
mov
mov
test
das
stc
push
xlat
inc
cmc
adc
fbstp
xor
push
shll
cmp
and
xor
fisubrs
mov
push
mov
aam
push
or
clc
les
call
rclb
das
fdivrp
push
movb
les
popa
xor
clc
xchg
loop
das
dec
fdivl
rdtsc
mov
imul
out
jmp
sub
fmull
jle
les
pop
sub
push
xchg
fbstp
outsl
lcall
push
in
scas
cmpl
mov
adc
aam
gs
in
subl
in
insb
push
inc
out
xor
shll
es
and
lea
mov
jecxz
jns
test
and
repz
mov
cmc
mov
pop
and
or
pop
repnz
cmp
jg
xor
sar
lds
scas
inc
fldcw
and
clc
adc
test
int3
mov
push
notl
adc
mov
push
pop
jo
aaa
lock
xor
push
in
loop
xchg
jmp
iret
or
sbb
sbb
cmp
xchg
jne
push
in
dec
jl
and
js
and
dec
int3
jno
push
shlb
lret
jmp
pop
or
sub
and
outsb
dec
decl
lret
inc
int3
dec
outsb
sbb
inc
aam
mov
or
jge
push
test
std
sbb
sub
push
hlt
sub
sbb
sub
adc
push
xchg
es
cmpsb
fisubrs
adc
and
mov
out
ficoms
faddp
push
in
add
pop
test
sbb
or
adc
das
xor
mov
fucompp
sbb
lret
jp
jmp
divb
daa
test
or
push
iret
cwtl
cli
xchg
js
and
jg
cmp
les
fnstsw
fdivl
imul
mul
lret
jg
ret
add
or
xor
cs
jne
xor
shl
jge
mov
cld
mov
push
and
es
adc
dec
call
insl
les
out
adc
jo
sbb
pop
into
pop
pusha
ficoml
shl
push
xchg
mov
xchg
jecxz
lds
aas
ja
nop
or
lods
mov
in
repnz
sti
ja
mov
or
jns
aas
sti
or
sahf
popf
jns
xlat
xor
xlat
test
xchg
adc
ret
fstps
ficoml
pushf
and
lahf
adc
pop
hlt
lds
sub
xor
call
mov
add
das
xor
xor
ret
std
sbb
orb
xor
jmp
add
push
sbb
push
or
imul
adc
dec
sub
imul
push
repnz
sub
push
xor
cli
out
aaa
push
sub
out
std
add
mov
mov
pop
xlat
inc
inc
sbb
aas
xchg
fwait
lcall
rcll
jne
push
xor
push
xchg
scas
xchg
jmp
ja
xor
loope
ja
and
fnstsw
sbb
xchg
adcb
aas
int3
iret
pop
in
pop
lods
or
fidivs
mov
xor
sub
sbb
dec
mov
imul
jge
scas
lock
cwtl
outsb
in
sub
dec
test
push
or
shll
sbb
adc
xchg
hlt
icebp
arpl
jl
inc
xchg
subb
jno
lods
mov
xor
push
out
ss
xor
cs
imul
rcr
test
sti
test
or
lahf
insl
loopne
mov
nop
jl
xorl
xor
push
cmp
in
popa
sti
sub
fimuls
pushf
in
add
and
inc
andl
loop
ficoml
loop
dec
ret
sbb
jecxz
dec
daa
jg
or
jne
mov
imul
loope
mov
cmp
jg
mov
add
pop
sahf
mov
jo
dec
sbb
push
pop
or
jg
sub
jmp
push
mov
mov
stos
dec
mov
xchg
out
shl
out
rcl
cmc
rcr
std
ror
adc
cmp
add
sub
xor
sbb
and
or
push
sarb
insb
out
rcrb
dec
cld
xchg
insl
mov
pop
mov
pushf
pop
mov
jnp
pop
ret
jnp
pop
repz
pop
jecxz
sub
sbb
or
js
inc
jnp
push
push
cmp
pop
outsl
orb
les
movsb
les
mov
mov
jno
xchg
mov
cmp
cmp
arpl
stos
movsb
jne
test
and
dec
add
and
or
and
and
ret
add
and
addl
mov
addr16
sub
push
icebp
jne
push
test
ja
loope
in
sub
cmp
iret
dec
jmp
popa
cmpsb
lahf
mov
mov
sub
mov
xor
lahf
test
popl
fistpll
clc
loopne
xchg
clc
or
outsb
sub
mov
jecxz,pn
int3
adc
popl
test
xchg
ljmp
les
mov
push
mov
bound
push
test
mov
rorb
std
or
push
or
dec
addr16
outsl
jecxz
int
or
ror
adc
shlb
xor
decb
jnp
pop
or
pop
insb
jge
dec
lcall
mov
xchg
pop
mov
xchg
jns
dec
xchg
dec
mov
push
mov
mov
movsl
mov
iret
push
call
mov
sbbb
xor
mov
pop
sarb
out
jnp
pop
pop
push
popl
push
mov
lahf
adc
inc
out
gs
aaa
gs
push
gs
aaa
popf
lds
movsl
rorb
test
lods
lahf
jg
sbb
das
cmc
shlb
test
add
sbb
pop
fnstcw
push
les
jecxz
les
jecxz
les
jecxz
icebp
jecxz
in
clc
shl
repnz
jecxz
les
movsb
xor
or
cwtl
sub
push
pop
xorb
pop
mov
xchg
sub
fstl
mov
xchg
pop
cmpsb
jae
cs
jle,pt
test
bound
xor
fucom
out
in
add
xchg
xchg
data16
arpl
test
les
mov
ds
adc
idiv
int3
pushl
jne
pop
inc
lahf
xchg
movsb
mov
xchg
stos
mov
xchg
lahf
mov
xchg
icebp
mov
xchg
out
mov
xchg
fnstenv
sub
jbe
mov
xchg
push
mov
xchg
inc
mov
pusha
les
jecxz
les
jecxz
push
movsl
gs
inc
push
gs
inc
gs
inc
insl
push
mov
xor
lds
shll
add
sub
pop
adc
adc
adc
pop
mov
fwait
iret
movsb
call
mov
aas
cld
call
lret
iret
aam
sti
xor
jg
pop
fldt
mov
xchg
shll
sahf
xchg
mov
mov
xchg
add
dec
jmp
arpl
mov
pushf
lahf
mov
into
sbb
ret
cs
or
fmull
jecxz
int3
or
cs
add
fldcw
shlb
fs
rclb
inc
jmp
cwtl
rolb
jno
in
popa
test
nop
push
call
push
int3
test
lcall
rorl
insl
sbb
iret
scas
xor
test
cmp
add
sbb
and
sti
test
jmp
les
lret
mov
xchg
les
xchg
mov
fldenv
mov
sahf
loope
mov
shrl
decb
shrl
or
add
sti
test
jmp
les
lret
test
mov
test
fwait
xchg
mov
fldenv
push
and
pop
add
add
repnz
and
idivl
les
jecxz
out
clc
fwait
cmp
mov
xchg
mov
mov
cmpsl
mov
xchg
lahf
mov
inc
in
sub
outsl
sub
rcr
fs
inc
fistps
aas
push
cwtl
aaa
fmuls
test
jnp
pop
or
pop
xor
and
mov
pushf
mov
cmpsl
test
xchg
or
pop
sub
push
sub
jl
cmp
or
cmc
lea
daa
or
lock
fmull
cld
xchg
fbstp
in
xchg
iret
mov
xchg
mov
xchg
mov
cmpsl
pop
xchg
jae
push
xchg
imul
xchg
pop
push
and
daa
mov
xchg
pop
mov
xchg
pop
mov
xchg
movzbl
repz
xchg
lret
mov
xchg
ret
mov
xchg
mov
mov
xchg
stos
mov
cwtl
jl
push
xchg
ja
dec
xchg
outsl
mov
xchg
addr16
xchg
pop
mov
xchg
inc
mov
xchg
pop
mov
xchg
pop
mov
xchg
movzbl
pop
mov
xchg
pushl
loopne
mov
mov
xchg
stos
mov
xchg
mov
popf
mov
lahf
mov
xchg
lahf
mov
int3
mov
aad
rcrb
in
into
lahf
in
mov
ds
sbb
mov
jp
inc
mov
push
jno
push
lahf
gs
ss
lea
pop
mov
sahf
pop
mov
fs
js
mov
xchg
lret
xchg
xor
add
sbb
dec
xchg
push
lret
gs
js
xor
inc
popa
out
inc
jmp
data16
jecxz
mov
mov
fnstcw
ficomps
add
mov
push
lahf
cmp
mov
adc
lods
lods
js
fbld
jg
push
xchg
rep
jnp
pop
fnstcw
xor
int
xor
add
clc
jg
pop
lock
pop
call
cmpsw
jns
dec
out
in
inc
xchg
sarb
test
scas
out
shl
leave
shr
icebp
rcl
stc
rcr
loope
ret
shl
fwait
and
call
les
add
outsl
mov
xchg
addr16
pop
outsb
into
lcall
iret
jmp
std
iret
iret
call
jno
and
icebp
pop
je
push
xchg
push
nop
dec
jle
add
push
iret
fs
imul
lahf
sarb
lahf
lock
fistpl
call
mov
mov
cmpsb
stc
mov
jne
mov
cmp
cld
lcall
fstpl
mov
popa
les
mov
mov
or
xchg
xchg
aam
jp
insb
and
mov
cs
addr16
outsb
mov
out
jecxz
or
pop
addr16
out
rcrb
sarb
cmp
xor
jbe
fbstp
cmp
or
adc
mulb
push
push
lods
jecxz
les
fisttps
imul
adc
xor
add
sub
or
shlb
ret
ret
dec
adc
fs
addl
into
adc
in
outsb
pop
lahf
push
fwait
mov
dec
call
push
dec
inc
syscall
inc
push
xor
jne
push
pop
jne
push
add
push
std
jne
push
ljmp
push
shlb
push
iret
sub
les
test
mov
pusha
mov
xchg
sub
daa
push
mov
xor
std
js
fwait
stos
fcoms
jne
push
fidivs
push
test
cmp
les
jecxz
ljmp
out
xchg
dec
lahf
andb
xchg
jg
out
or
cs
or
cs
push
pop
adc
loop
mov
rorb
dec
add
and
pop
mov
mov
xchg
dec
mov
imul
xor
add
sbb
faddp
out
sub
jecxz
les
or
sbb
es
jb
inc
imul
or
clc
cmp
adc
sub
pop
clc
sbb
cld
clc
hlt
clc
xlat
fucomip
clc
iret
xchg
xor
jns
adc
or
dec
fwait
test
mov
ficoms
imul
sbb
scas
imul
aad
jmp
pop
add
daa
lods
lcall
in
sub
cmp
sarb
add
pop
out
xlat
pop
sbb
popa
lods
push
xchg
mov
xchg
outsl
mov
xchg
pop
add
lcall
add
daa
enter
loope
ret
jo
loope
shlb
or
ret
add
and
loope
les
xor
fildll
cs
pop
add
add
rcl
push
rcl
repnz
nop
icebp
mov
out
pop
test
pushf
test
nop
mov
jnp
pop
mov
xchg
sbb
or
ffreep
int3
xor
or
adc
pminsw
call
adc
jne
sub
enter
shrb
or
lock
pop
call
inc
cmp
sub
imul
sbb
sub
rolb
shlb
fs
rclb
inc
out
mov
pop
mov
xchg
cld
pop
gs
inc
repz
fucomi
stc
mov
xchg
jmp
mov
xchg
leave
mov
xchg
mov
mov
xchg
cltd
add
call
fwait
mov
xchg
lahf
mov
shl
fcmovnb
in
lret
lahf
loopne
add
and
icebp
add
outsb
or
inc
shl
out
les
iret
gs
inc
arpl
jne
mov
adc
fdivl
adc
pop
add
pop
sarl
mov
test
mov
into
lret
hlt
cmc
xchg
scas
cmpsl
and
loope
out
shll
aad
mov
dec
mov
jl
cmp
cmc
mov
push
adc
xchg
cmp
das
mov
daa
xor
jmp
stos
mov
shl
outsl
cmc
inc
into
jnp
jl
xchg
jmp
cs
xchg
sub
out
sub
orb
leave
jne
push
push
pop
popa
bound
lahf
fisubs
andl
cmpb
push
dec
mov
mov
cltd
push
or
sbb
jmp
iret
mov
push
push
je
mov
jecxz
les
out
cld
mov
cmp
dec
int
jo
addr16
cmp
mov
push
xchg
sbb
scas
addr16
adc
push
sarb
fisttps
add
out
je
imul
sub
sub
gs
inc
ja
inc
pop
cltd
pop
xchg
pop
pop
mov
sub
ret
add
mov
xchg
cmp
pop
repz
mov
mov
jmp
enter
cmp
mov
cli
pop
fstpt
in
xchg
inc
stos
jae
dec
das
sar
int
add
add
push
ds
jg
and
inc
add
hlt
cs
mov
cmp
sub
push
mov
outsl
scas
adc
sub
in
flds
arpl
stos
imull
jns
dec
dec
pop
or
pop
sub
pop
xchg
gs
pop
mov
aam
dec
xchg
iret
std
jmp
pop
cmpb
cs
or
cs
sub
aaa
cs
or
adc
push
mov
mov
pop
sbbb
stos
ss
or
jmp
pop
mov
orl
add
xchg
fcomps
sub
imul
test
push
lahf
cwtl
push
or
in
or
stos
inc
mov
adc
and
les
add
sbb
iret
add
pop
into
push
mov
push
mov
push
outsb
sub
stc
add
jecxz
out
stos
shlb
test
xor
subb
notl
jne
xchg
dec
neg
push
in
mov
xchg
jo
mov
xchg
mov
pop
sub
and
repnz
jle
popf
in
in
mov
pop
ja
sub
add
rcrl
das
xlat
std
das
sbb
in
sar
pop
out
mov
push
pushf
test
pop
mov
pusha
jns
mov
shr
cmp
pop
dec
lds
mov
mov
out
in
rcr
std
iret
mov
loope
jmp
aam
neg
int3
mov
mov
imul
lcall
cmp
leave
gs
xchg
pop
in
je
push
add
decl
cmp
ffree
je
lds
cmp
int3
xchg
out
xchg
push
pop
xor
test
lock
call
adc
xchg
popf
testb
imul
les
push
sub
test
adc
jne
adc
sub
out
mov
xchg
mov
xchg
ficoms
gs
push
in
and
fists
sbb
push
ret
je
out
mov
mov
xchg
test
pop
test
xchg
push
lock
mov
jbe
lea
pusha
jmp
les
jne
push
subl
clc
push
fbstp
dec
fcomps
push
aad
and
inc
clc
gs
inc
push
cmp
jle
test
sarb
iret
pop
cmp
jp
mov
xchg
cmp
mov
js
add
into
jbe
cmpsl
push
cli
push
fsubs
xlat
pop
add
fdivl
and
in
mov
js
movsb
aad
push
clc
inc
cmp
popa
push
inc
pop
mov
xlat
sbb
out
leave
in
cltd
test
clc
test
xchg
mov
jecxz
stos
inc
scas
pop
and
fistpll
push
xor
cwtl
arpl
jmp
repz
jne
push
inc
fmull
jge
pop
xchg
mov
inc
testl
xor
lsl
push
lods
dec
lret
lods
js
pop
dec
lea
inc
or
and
cmc
or
icebp
sub
sub
ljmp
lret
addb
dec
push
fs
or
ficoms
mov
xor
ror
jmp
dec
lret
dec
mov
add
cmp
sub
and
es
test
testl
jnp
cmp
adc
lods
outsb
xchg
pushl
pop
mov
xchg
pop
pop
add
push
jge
mov
push
pushl
mov
in
mov
xchg
test
nop
in
into
sbb
jns
pushf
leave
pop
pop
nop
cmp
pop
ss
jo
insl
mov
movsb
pop
xchg
aam
xchg
popf
roll
sbb
inc
cs
addr16
bound
and
inc
stos
or
faddl
int
mov
mov
dec
test
cmp
js
divb
and
fistps
cwtl
mov
daa
sbb
cmpsb
jp
jl
jo
dec
push
dec
jne
push
fdivl
push
lret
cwtl
mov
xchg
addr16
xlat
add
ja
add
adc
xor
call
int
jmp
and
mov
lea
xor
cmp
push
adc
das
jg
out
jecxz
lods
clc
adc
and
iret
push
stos
mov
test
fnsetpm(287
clc
cmp
add
push
xor
mov
scas
inc
test
out
fsubrp
push
je
js
mov
sub
dec
stc
xchg
push
lods
sbb
mov
or
out
test
cwtl
clc
fwait
repnz
and
or
cs
jge
imull
mov
xchg
cmp
jne
xchg
andb
aad
lret
lahf
adc
push
imul
decl
daa
xchg
adc
int3
cld
test
jne
push
jle
push
mov
xchg
loopne
clc
dec
aaa
daa
pop
dec
and
data16
or
nop
sub
stos
fwait
mov
xchg
or
cld
cmc
and
add
push
lods
repnz
subb
lods
sbb
pop
jg
pop
sti
lcall
data16
leave
jecxz
les
jecxz
enter
sahf
lea
pop
add
jmp
js
cmpl
ds
popl
mov
mov
lret
and
dec
ljmp
out
int
scas
mov
aaa
mov
pushfw
mov
je
pop
adc
ret
dec
loope
xorl
push
mov
pop
pop
jns
test
mov
sub
lea
ljmp
cmp
jnp
mov
jl
add
sub
inc
aaa
gs
push
jnp
sbb
mov
ja
testb
fmuls
ljmp
xor
ficoms
int
fs
xchg
mov
mov
cmp
cltd
rcll
and
push
lods
pop
mov
imul
push
leave
push
std
xor
sbb
push
mov
xor
clc
jg
ret
cli
xchg
int
xor
or
shll
mov
mov
dec
and
push
add
mov
xchg
cmpsl
mov
xchg
xchg
adc
inc
xchg
movsl
push
or
adc
stc
add
les
cmp
stc
jno
jg
aam
mov
jge
js
mov
mov
and
xor
dec
pop
jmp
insl
mov
ds
lods
cld
add
and
leave
add
push
pop
jne
push
inc
sub
or
sahf
fdivp
test
lahf
test
mov
stos
add
pop
push
mov
jle
movsl
mov
push
mov
bound
mov
sbbb
mov
rcrl
loopne
inc
or
pop
push
mov
lret
cmpb
fbstp
clc
push
clc
fcomp
jmp
mov
mov
mov
jbe
test
pop
adc
jge
ficoml
das
jge
inc
shlb
enter
mov
pop
mov
arpl
jns
sarl
in
mov
stos
mov
xor
fcom
hlt
pop
icebp
mov
mov
fbstp
mov
jmp
add
jecxz
clc
repz
xchg
sbb
push
into
bound
mov
xchg
cli
dec
insb
shl
loopne
mov
rcrl
push
dec
pop
jns
xor
inc
imul
pop
clc
adc
jne
push
mov
jg
pop
xchg
stos
push
mov
fldenv
sub
or
inc
orb
xchg
cmp
sub
lcall
xchg
sti
pop
mov
sub
xor
push
test
jo
jp
adc
rclb
dec
aaa
mov
jne
push
mov
adc
cmp
aad
out
push
cmp
mov
pop
push
data16
imul
jb
test
xor
lcall
nop
mov
gs
rcrl
xchg
pusha
movsb
fcmovnb
jne
sub
and
fcoms
sahf
popf
pop
mov
les
pop
loopne
je
jne
xchg
loope
mov
rolb
adc
or
lcall
xchg
imul
push
jo
push
push
push
jne
and
xchg
stos
mov
inc
popf
dec
mov
rol
out
adc
dec
push
js
dec
adc
cs
inc
rclb
fstpt
int
fiadds
jno
cmp
pop
jg
pop
push
jg
pop
dec
jg
pop
fstpt
mov
sahf
ljmp
jns
sarl
ret
add
and
lods
cs
adc
fbld
cmpsb
add
mov
cmpsb
push
orb
and
xor
sub
fildll
out
or
cs
xor
push
adc
jmp
push
xor
ret
das
lret
aad
into
jmp
ja
iret
dec
and
add
xchg
fstps
jg
mov
adc
sti
out
xor
inc
sub
fwait
sbb
or
push
or
cmc
iret
aam
gs
imul
lods
addl
xor
adc
test
fwait
cmp
xor
cmp
jne
push
pushf
je
jp
imul
sti
js
jle
pop
sbb
push
xor
insb
loopne
sbb
and
pop
mov
sub
xchg
test
testl
jbe
push
dec
pop
inc
or
int3
mov
xchg
test
fildll
aam
adc
and
jmp
and
xor
sub
inc
jmp
pop
xor
movsb
add
int3
cld
push
inc
pop
js
dec
xchg
int
dec
xchg
and
or
push
loop
jmpw
mov
lcall
jmp
fisubl
add
scas
jns
cld
pcmpgtd
and
push
mov
fcomps
ja
out
cmp
popf
data16
mov
ss
jmp
pop
scas
inc
mov
push
pop
jecxz
push
stc
mov
push
pop
mov
cmovg
fwait
in
push
mov
jl
nop
push
stos
clc
test
sub
jmp
call
mov
pushl
and
mov
aam
cltd
arpl
pop
lret
pop
ror
out
call
insl
pop
inc
xor
add
xor
xabort
adc
sbb
sub
pop
add
mov
pop
ss
es
mov
jmp
movsb
outsl
fmuls
in
mov
lock
rclb
xlat
cld
add
es
jg
sbb
enter
xchg
sbb
push
jno
inc
or
leave
mov
mov
cmpl
xorl
lahf
loop
xchg
repnz
shrb
cld
pushf
or
add
or
gs
cmp
mov
jae
dec
jnp
pop
nop
hlt
pushf
pop
adc
jns
cltd
mov
xor
lea
test
xor
push
mov
rcll
jmp
cltd
daa
sbb
jg
pop
cmp
fnstcw
inc
sub
cmp
in
lahf
cwtl
cmp
and
add
push
fldt
and
fstl
daa
mov
sbb
lret
xor
xor
int
cmp
jmp
jns
push
xor
orb
pop
jp
jmp
pop
and
xchg
clc
into
or
and
lods
mov
mov
fisubs
lahf
pop
push
xchg
dec
popa
add
push
movsl
shrb
aas
or
add
adc
jnp
pop
xor
loopne
pop
push
mov
jg
jle
ja
push
mov
int3
adc
xchg
movl
pusha
into
insl
lret
arpl
subb
inc
mov
lahf
loope
ret
dec
lret
fsubr
adc
lret
or
lods
adc
pop
ror
in
lds
jb
rorl
aad
or
test
sbb
in
sbbb
ficoml
and
jb
sub
mov
fs
jae
jns
test
adc
imul
xor
lahf
subb
sub
ljmp
aam
jmp
jecxz
mov
aad
lcall
add
jnp
push
push
stc
or
out
out
or
push
jno
push
jl
bound
dec
popa
aaa
arpl
or
pop
into
push
mov
orb
sbb
sub
or
sub
test
xchg
sti
adc
gs
add
jp
pop
lock
mov
fdivrl
fwait
sbb
inc
push
sbb
mov
movsb
lret
mov
mov
mov
out
or
cmpb
mov
cmc
dec
mov
sbb
pop
loope
push
pop
mov
mov
inc
or
xor
push
lea
add
push
addr16
xchg
mov
jl
mov
sbb
fadds
jae
gs
lret
jo
cmp
dec
mov
out
jl
aas
jno
push
cmp
push
cmp
mov
fisubl
inc
aam
call
ljmp
jno
push
sub
jno
jg
call
sub
sbb
xor
pop
cltd
shrl
aad
cmpsl
sbb
xchg
fadds
adc
push
orb
jbe
dec
ficoml
mov
lock
xor
adc
rorb
adc
jl
sbb
or
xor
or
dec
mov
repz
pop
mov
cld
push
sub
add
jp
fmuls
mov
pop
outsb
imul
push
pushf
cs
negb
xchg
sahf
leave
movsb
mov
nop
pushf
jno
add
bound
cltd
sbb
pop
adc
ret
push
std
loopne
add
js
xor
fnstenv
add
sub
adc
cmp
pop
xchg
xor
sbb
add
xor
fnstenv
in
in
xchg
or
ret
or
pop
out
leave
loop
sub
loope
call
pop
add
and
lahf
ja
cmp
in
jecxz
movsb
fbld
outsb
xchg
popa
cld
fbld
in
inc
lds
sahf
pop
aaa
xchg
lcall
movsl
mov
loop
jns
out
sbb
lcall
into
shrb
les
xor
cmp
sbb
xchg
fdiv
in
mov
cmc
mov
les
dec
lea
out
std
aas
adc
cmp
sub
das
cmc
rclb
jae
jo
pop
cld
sbb
mov
mov
loopne
ds
pop
sti
mov
sbb
es
sub
add
in
testl
or
and
sbb
jne
mull
push
cwtl
sub
ret
ret
js
cmpsb
inc
dec
arpl
mov
mov
xor
xor
xor
cmp
adc
in
or
mov
cld
and
pop
push
jle
adc
push
inc
mov
shll
imul
dec
aam
lahf
fsubp
push
andb
jg
push
mov
das
test
xor
add
mov
sub
cmp
cmpsl
dec
cmp
cmp
aam
adc
sbb
aaa
mov
pop
dec
outsl
ss
mov
dec
mov
call
mov
aad
movsl
mov
cltd
xor
xor
hlt
sbb
cmp
sub
ret
or
jmp
sub
stc
jae
pop
mov
out
mov
rol
loopne
jmp
jle
inc
ret
xchg
or
leave
mov
jle
sarl
push
cmpsb
ljmp
out
mov
mov
fstpt
rclb
loope
jae
out
ljmp
ret
lock
cmp
pop
stc
int
enter
int3
jp
popf
in
scas
shrl
mov
jg
jne
sbb
or
and
and
inc
xchg
rclb
push
or
repz
push
mov
add
or
xchg
fwait
add
adc
push
xorl
or
pushf
pop
mov
xor
mov
lods
add
xchg
ret
cmpsl
fiaddl
jb
sbb
push
add
dec
xor
inc
sub
xlat
jo
fwait
aad
into
pop
loop
out
sbb
cwtl
int3
shlb
push
outsb
call
jo
js
add
jb
and
cmp
test
cmp
test
fisubrs
jae
out
xchg
popf
insb
roll
loop
mov
stc
inc
push
fiadds
cmp
loopne
outsl
sbb
cltd
cld
sarb
jb
mov
fdecstp
ror
cli
lret
dec
or
or
int3
icebp
and
addl
and
sbb
les
fists
mov
sub
adc
adc
jmp
arpl
sub
mov
adc
testl
mov
int3
test
or
testl
xchg
mov
cli
bound
insb
test
pop
inc
xlat
outsl
jno
mov
out
pop
mov
pop
push
xor
mov
pop
orb
bt
push
in
test
sub
imul
sahf
cmpl
in
insb
test
sub
jno
pop
cld
into
movsb
sbb
cld
mov
mov
aaa
imulb
sbb
and
in
out
sub
pop
hlt
dec
mov
stos
pop
leave
or
and
fadds
sub
iret
push
and
xor
popa
adc
out
mov
cmp
mov
leave
sub
ss
repnz
stc
push
aam
mov
sbb
push
pusha
loop
stos
xchg
xchg
pop
mov
mov
out
pop
mov
mov
add
add
add
pop
sub
sub
shl
neg
not
and
neg
test
movzbl
and
shl
neg
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
bsf
not
dec
add
add
btr
neg
mov
jmp
lcall
ret
or
neg
cmp
adc
inc
not
not
cmp
sub
shr
jmp
lcall
xor
add
add
pop
xor
xchg
push
sub
cmp
and
xor
add
add
shr
cmp
call
lcall
incl
ret
neg
sub
bsf
not
adc
btc
cmp
xor
and
neg
dec
btc
jmp
lcall
btr
add
test
adc
sub
adc
shl
mov
mov
xchg
push
push
xchg
dec
add
add
call
adc
shr
test
bsf
xor
bt
movswl
and
add
mov
shr
bsf
xor
xor
shr
bsf
sub
mov
shl
sub
xchg
mov
bsf
and
adc
bsf
add
bsf
add
mov
jmp
lcall
ret
or
and
bt
sub
bswap
shl
neg
or
btr
and
call
lcall
add
xorl
pop
xor
xchg
push
cmp
and
adc
mov
mov
or
movsbl
shr
jmp
lcall
stc
add
xchg
ret
neg
sub
add
shl
add
bt
bt
add
or
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
add
bt
test
not
test
xor
movswl
jmp
lcall
or
call
test
and
cmp
movzwl
bt
mov
cmp
sub
test
inc
add
mov
movswl
bts
xor
shr
sub
mov
test
call
lcall
add
sub
test
adc
not
adc
add
adc
inc
call
lcall
or
and
bts
shr
xor
bts
neg
bts
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
shr
cmp
cmp
xor
xor
mov
sub
call
lcall
jnp
cmp
xor
mov
sub
or
cmp
jmp
lcall
adc
fiadds
roll
lea
mov
call
cmp
and
bts
add
sub
mov
cmp
shr
bt
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
xor
sub
shr
test
xor
or
inc
push
add
test
and
bt
sub
test
sub
add
adc
bts
adc
cmp
movsbl
movzwl
xor
sub
add
mov
test
add
bts
movswl
add
add
or
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
xor
not
btc
test
add
or
mov
mov
call
lcall
add
shr
inc
cmp
dec
bsf
mov
shl
bts
cmp
inc
mov
add
sub
adc
inc
or
test
sub
inc
sub
mov
adc
cmp
bts
cmp
shr
bsf
cmp
call
lcall
mov
or
or
xor
add
shr
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
bts
bt
cmp
test
sub
not
and
shr
neg
xor
not
bt
xor
adc
adc
mov
shl
jmp
lcall
leave
cmp
btr
or
cmp
test
mov
add
movswl
mov
mov
btr
bswap
sub
bt
and
inc
call
lcall
add
btr
shl
add
and
and
btr
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
add
cmp
shl
adc
neg
bt
bt
sub
mov
add
adc
neg
btc
test
shr
or
dec
movswl
cmp
sub
mov
shl
btc
btc
test
adc
mov
add
and
bsf
bswap
not
sub
cmp
not
add
and
lea
inc
cmp
jne
btc
adc
sub
or
cmp
and
bt
add
not
neg
bts
adc
adc
cmp
not
or
neg
call
lcall
je
and
and
test
adc
add
btc
not
test
sub
mov
or
and
bt
neg
test
cmp
bt
call
lcall
mov
and
and
btr
cmp
cmp
xor
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
dec
btr
test
mov
shl
neg
mov
inc
mov
call
lcall
add
mov
sub
cmp
test
and
mov
add
shr
add
shl
bswap
mov
bts
and
test
jmp
lcall
mov
mov
add
cmp
xor
bt
mov
add
test
mov
btr
dec
mov
bts
add
add
cmp
call
lcall
add
and
xor
bsf
bts
btr
shr
bts
shl
push
pop
inc
add
loop
adc
xor
shl
shr
bts
add
xor
btc
push
decl
mov
add
cmp
test
bsf
bts
movzbl
not
adc
test
test
call
lcall
pushl
mov
pop
orb
lds
mov
icebp
gs
inc
bts
push
shll
and
test
bt
cmp
not
bsf
bts
push
inc
bswap
btc
and
cmp
shl
btr
or
movsbl
sub
mov
movzbl
dec
inc
adc
sub
shr
cmp
btc
push
push
pop
add
add
call
shr
neg
mov
cmp
adc
movsbl
add
bsf
or
shr
xchg
add
movswl
shr
dec
cmp
btc
shr
mov
bts
mov
bsf
add
movzbl
btr
inc
or
bts
test
inc
call
lcall
mov
sub
ret
loopne
ds
test
adc
neg
test
add
and
xor
cmp
adc
test
xor
test
inc
call
lcall
fadds
popa
mov
cmp
or
mov
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
bt
mov
xor
btr
bt
or
or
bsf
or
bsf
add
neg
bt
bsf
cmp
call
lcall
enter
jecxz
not
sub
mov
mov
sub
mov
mov
add
cmp
mov
sub
test
neg
adc
bsf
cmp
je
add
cmp
sub
cmp
mov
bsf
sub
add
sub
mov
bt
neg
shr
btr
not
inc
and
call
lcall
neg
and
or
mov
cmp
movzbl
bts
movswl
and
sub
dec
test
mov
bswap
adc
cmp
cmp
inc
cmp
inc
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
add
sub
or
xor
cmp
test
dec
push
decl
mov
add
sub
xor
neg
dec
sub
shl
adc
bsf
btr
mov
push
decl
mov
add
btc
shr
bt
btr
or
sub
mov
add
cmp
and
btc
not
mov
sub
cmp
jmp
sub
test
inc
and
mov
or
shl
or
mov
mov
cmp
sub
and
neg
add
bsf
sub
mov
shl
bsf
dec
or
test
test
or
mov
add
xor
neg
shr
bts
bts
btr
shl
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
add
test
inc
xor
xor
bt
mov
and
adc
inc
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
or
bsf
adc
or
or
shr
mov
push
push
not
shr
xor
xor
mov
shl
bt
push
sub
mov
and
not
and
and
test
or
cmp
mov
mov
add
and
btr
cmp
btc
movsbl
movswl
bt
call
lcall
js
bnd
mov
adc
and
shr
movswl
or
test
lea
or
adc
bt
cmp
add
adc
mov
bts
adc
mov
shr
add
bts
btr
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
rcll
sub
lret
mov
lret
int
mov
shl
xor
shr
sub
mov
and
test
cmp
test
xor
mov
push
shr
bswap
test
neg
test
test
add
mov
adc
push
sub
add
test
and
mov
shl
bsf
shr
btc
push
shl
adc
sub
sub
cmp
bts
btc
cmp
call
lcall
mov
bts
mov
bt
or
add
bts
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
shr
or
mov
cmp
sub
and
bt
sub
call
lcall
sub
dec
sub
btc
bt
add
add
dec
add
and
movsbl
xor
cmp
mov
and
test
inc
call
lcall
mov
and
test
inc
bswap
btr
movsbl
bsf
cmp
xor
dec
test
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
and
push
adc
xchg
sub
inc
mov
and
sti
pop
test
add
testb
mov
push
insb
or
cmpsl
add
xchg
or
pop
rolb
pushw
or
jb
out
cmp
clc
imul
xor
cmp
or
enter
in
xlat
add
lds
rcr
mov
xchg
pusha
xor
stos
addr16
add
add
fildl
mov
out
xchg
mov
paddsb
add
mov
adcb
add
or
out
adc
test
jns
add
sub
movsl
xchg
add
loope
or
aaa
inc
jb
mov
lods
or
int
and
je
movsl
sbb
or
push
mov
xchg
sub
fsubl
pop
or
pop
stc
dec
mov
iret
or
adc
adc
add
pop
sbb
and
nop
inc
mov
subl
out
add
adc
js
add
push
adc
xor
inc
push
dec
push
fdivl
inc
add
aaa
cmp
pop
fmuls
jmp
xor
xor
rcll
dec
pop
addr16
push
popl
aaa
out
dec
clc
push
push
inc
dec
pop
adcl
fnstcw
inc
lds
xor
adc
aaa
addr16
push
xor
idivb
dec
cmc
add
ss
push
push
push
inc
inc
jmp
xor
jo
movsl
add
andb
dec
xor
inc
inc
pop
pop
push
mov
int3
push
aaa
sysenter
inc
dec
inc
and
dec
push
cmp
jp
js
push
aaa
push
pop
jae
dec
int3
xchg
pop
inc
push
dec
dec
test
inc
add
cmp
pop
mov
jno
push
pop
and
fisttpl
enter
push
inc
mov
nop
push
cmp
outsl
add
dec
ss
outsb
push
rcrb
sub
jge
add
inc
insb
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
cs
std
cmp
push
ja
insb
cmp
sbb
scas
sbb
or
push
push
inc
cli
mov
outsl
adc
jo
add
push
push
push
imul
shlb
stc
push
gs
mov
inc
jo
mov
outsl
outsb
jae
es
mov
cs
jle
js
adc
pop
cmp
adc
pop
ss
dec
out
cs
sbb
divl
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
stc
test
push
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
pushf
add
aam
add
sbbb
dec
add
push
inc
push
inc
pop
xor
fs
jne
pop
push
lret
or
dec
inc
sahf
add
pusha
