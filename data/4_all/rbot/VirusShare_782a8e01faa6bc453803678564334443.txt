mov
aas
mov
je
mov
sti
ss
call
adc
pop
jo
scas
adc
fdivs
mov
mov
aad
ds
mov
std
rorb
mov
xor
mov
push
out
pop
divb
push
mov
jae
jp
lods
add
lret
loop
lea
push
and
mov
jns
jns
mov
and
jg
xchg
mov
hlt
mov
mov
mov
pop
test
dec
fidivrs
pop
fsubl
dec
cmp
cmp
rcrb
int3
stos
mov
push
xchg
xchg
enter
mov
mov
jl
xchg
rclb
pop
js
insl
lds
add
ss
mov
xor
xor
lock
js
pop
stos
inc
scas
shld
movsb
mov
xor
or
repnz
pop
and
hlt
xchg
push
cmc
aaa
pushf
lds
cld
jge
xor
push
int3
adc
enter
pop
mov
inc
xchg
pop
test
mulb
mov
jge
xchg
mov
mov
stc
movsl
jg
dec
gs
jo
mov
imul
pop
dec
stos
push
mov
fs
lret
scas
mov
rcll
adc
ret
mov
out
hlt
lret
mov
jns
test
sahf
xchg
sahf
push
inc
or
pop
shl
jl
dec
int3
pushl
std
mov
xchg
and
enter
xchg
outsl
lods
mov
les
push
sbb
jg
cmp
loope
inc
adc
fidivl
mov
imulb
sub
cmp
or
loope
jns
cs
imul
cs
in
shrl
jno
imul
mov
ja
adc
ss
bnd
adc
mov
inc
mov
pop
sbb
test
nop
or
std
mov
dec
mov
xchg
idiv
add
ss
ljmp
cmpsl
mov
jo
jnp
inc
nop
fmuls
pop
pop
loope
clc
or
push
pop
test
imulb
push
idiv
mov
and
jp
cmp
cmp
cwtl
cmp
mov
jns
fisttps
sahf
into
jo
adc
push
pop
outsl
movsl
xchg
loopne
shl
cli
cli
mov
jae
loop
out
repz
jl
mov
out
mov
lret
subl
mov
xchg
call
inc
adc
out
sub
adc
xchg
xlat
jl
cmp
in
repnz
add
adc
and
popf
xchg
mov
iret
arpl
mov
sub
cmp
and
stos
mov
adc
mov
ss
fldcw
cwtl
aas
add
invd
out
mov
mov
lds
loope
cmp
jg
jbe
inc
mov
test
fidivrl
aam
mov
mov
add
movsb
or
data16
cli
push
pop
decl
lods
ds
jge
mov
pop
nop
jb
js
ds
or
push
push
mov
into
std
dec
jnp
sub
mov
rclb
pop
mov
loope
sub
pop
std
mov
shl
leave
mov
addl
in
cltd
ss
cmc
mov
ja
adc
repz
clc
xchg
adc
mov
popa
dec
scas
mov
dec
es
fcompl
sub
out
and
push
inc
ja
hlt
xor
negl
int
inc
xor
sarb
xchg
cs
sar
or
iret
cmp
mov
shlb
cmpl
adc
push
out
fwait
pop
rcrb
jge
sarl
lods
mov
xor
aam
je
jmp
cmp
adc
jns
sahf
add
cli
addr16
fiaddl
pop
fsubr
sbb
mov
jo
lret
rclb
nop
jl
jecxz
repz
cltd
js
ss
mov
jnp
dec
movsb
icebp
jecxz
jno
xor
fcmovnb
jno
fnsave
jg
adc
pop
mov
adc
jns
invd
aaa
jnp
scas
mov
shlb
test
adc
movsb
ss
jle
sahf
js
add
scas
xor
xlat
sub
pop
and
in
cltd
not
shlb
leave
mov
cmp
lret
adc
insb
xor
mov
xchg
add
and
jo
not
jg
lcall
aad
cwtl
in
cmpsl
or
insb
mov
out
mov
mov
fstpt
popa
cmp
jbe
pop
push
cmp
sub
outsb
mov
jo
mov
repnz
push
call
fadds
adcb
test
jmp
xchg
fiaddl
scas
jg
mov
lods
sbb
int3
icebp
nop
push
inc
mov
jmp
int3
push
add
ljmp
hlt
stos
in
lods
jecxz
xchg
lods
rorb
mov
movlps
push
andl
cld
push
and
push
call
ficoml
mov
jns
mov
inc
adc
pop
cmpl
dec
clc
shlb
je
lods
push
or
push
addr16
adc
popa
addr16
jge
popf
call
xchg
repnz
sbb
lods
jmp
inc
mov
sahf
ss
mov
xchg
iret
mov
ret
fs
mov
xchg
cmc
inc
push
inc
jae
pop
shrb
dec
adc
xchg
push
xor
stc
addr16
jbe
adc
jg
neg
cmp
jecxz
mov
lret
insl
xor
hlt
outsb
cmpsl
push
cmpsb
and
xchg
stc
rcrl
je
mov
arpl
xor
push
aad
pop
inc
xor
fdivrl
repnz
cmp
movsb
lahf
fistpl
neg
xor
jle
and
clc
movsb
mov
frstor
arpl
pop
lock
adc
fdivr
aaa
inc
dec
fisttpl
sbb
adc
rcr
repnz
mov
fdivs
or
xchg
loopne
testb
or
adc
decl
scas
enter
add
rcll
pushf
lcall
pusha
ja
add
mov
mov
pop
mov
rorb
mov
and
cmp
push
sti
nop
nop
xchg
inc
in
data16
popf
pop
stos
hlt
mov
dec
cwtl
shl
sub
lods
pop
out
jmp
push
add
adc
or
clc
movsb
xor
push
stos
pop
fldt
fstpt
movups
cmp
push
sbb
jge
movsl
lahf
sahf
enter
sub
icebp
jp
leave
mov
divb
pusha
inc
xchg
iret
mov
cmp
mov
xor
mov
nop
push
ret
xchg
sbb
sbb
stc
jns
mov
inc
add
into
idivl
or
adc
xor
pop
jnp
add
insl
in
and
xor
mov
sub
and
pop
xchg
pop
lcall
pop
push
jg
scas
dec
xchg
out
data16
jl
xchg
mov
cwtl
negl
jge
xchg
unpckhps
xchg
addb
xor
insl
stc
int3
inc
cmp
add
or
cmc
mulb
ljmp
pop
idivb
clc
mov
int3
xor
ret
mov
dec
repnz
dec
mov
jmp
cmp
mov
mov
jmpw
aam
leave
push
xchg
idivl
imul
fimuls
mov
into
xchg
jno
fidivs
mov
stc
and
addb
xchg
inc
inc
lods
xlat
jb
xorb
call
jl
clc
hlt
fnstsw
mov
ljmp
jge
xor
sbb
or
push
icebp
or
or
je
arpl
xchg
jbe
cli
mov
xchg
int
mov
addl
mov
aaa
jl,pn
and
jo
xor
scas
cmpb
sub
push
add
jbe
stc
pop
dec
lock
pop
dec
dec
cltd
mov
fwait
push
jl
xor
mov
and
inc
cmp
add
dec
mov
imul
mov
jp
push
mov
mov
push
push
int
add
mov
adc
data16
sbb
jmp
xor
icebp
clc
cmpsb
sbb
cwtl
lods
push
mov
sbb
stos
xlat
out
inc
enter
arpl
mov
cmp
inc
push
out
inc
or
dec
hlt
or
xchg
mov
jge
inc
mov
ret
adc
or
outsl
jle
sub
popf
mov
into
mov
loopne
xchg
cli
cmp
fdivrs
filds
enter
lret
stc
jb
mov
xchg
push
jbe
sub
cltd
xor
add
cwtl
cmp
jne
mov
inc
lods
mov
mov
hlt
adcb
mov
lods
pop
push
fucomp
or
mov
pop
push
mov
pop
movsl
ror
shl
leave
aam
outsb
rorb
dec
sbb
lcall
pop
mov
shl
or
insl
mov
or
jle
and
pop
mov
sbb
fsubs
in
and
mov
cltd
or
push
ret
adc
sub
mov
mov
dec
lcall
lret
jnp
mov
cmp
jle
fs
imul
movsl
js
pop
lahf
fsubp
mov
rcl
inc
adc
mov
pop
cmp
mov
faddl
dec
inc
jmp
mov
das
sbb
pop
cmp
push
pop
pop
xor
adcb
scas
rorl
mov
adc
es
scas
aaa
xchg
cwtl
inc
in
sbb
dec
test
pop
aam
inc
and
loopne
in
xor
addr16
adc
ja
call
loopne
xchg
jle
int
and
push
int
cmp
dec
mov
jns
jno
dec
out
mov
loopne
outsb
les
and
pop
leave
dec
jl
jno
in
aaa
or
xchg
data16
push
mov
mov
lret
testb
add
cs
ds
imul
aaa
cmp
jp
add
mov
pop
mov
scas
insl
insl
mov
jl
pushf
aaa
xor
hlt
inc
dec
cmp
cmp
nop
aas
jle
cwtl
movsl
add
and
mov
mov
dec
xchg
addr16
jecxz
xchg
xchg
jmp
mov
in
mov
imul
int3
inc
jmp
sub
cmpsl
bswap
dec
xor
xchg
sub
cmp
neg
push
mov
fists
movsb
mov
push
int
cmp
push
insb
dec
andl
sbb
jge
or
mov
test
or
test
xchg
cltd
insl
shll
inc
lahf
out
mov
mov
pop
mov
rcrb
fidivs
js
lds
jns
lods
pop
cmp
fs
repz
in
test
loopne
inc
xor
mov
rclb
pop
cltd
aaa
xchg
rcll
push
push
mov
mov
je
negl
sbb
mov
xor
xchg
outsl
lcall
jmp
stos
mov
pop
subb
jp
vmwrite
sbb
test
mov
xchg
out
xchg
clc
dec
test
outsl
push
mov
inc
lods
mov
add
push
in
pop
fidivl
aaa
xchg
jno
add
fs
fsubs
stos
jno
ljmp
mov
ja
inc
dec
xlat
xor
icebp
dec
mov
push
push
pop
insb
in
mov
lahf
or
mov
clc
hlt
mov
xor
adc
imul
ja
cli
orl
push
and
aad
dec
movsb
les
shll
pop
lods
or
test
aad
aaa
push
call
ljmp
sbb
fwait
fdivs
mov
xchg
adc
icebp
cmp
jg
lret
fisttpll
fxch
stos
sbb
cltd
out
mov
insl
or
dec
mov
cltd
ret
lods
nop
outsb
mov
sub
pop
cmp
clc
cmp
mov
cltd
jp
sub
and
inc
mov
cmp
cmc
inc
push
mov
stc
cmp
in
adc
lahf
pusha
mov
inc
cltd
daa
cmp
imul
pusha
adc
mov
scas
or
xor
nop
in
push
pop
adc
mov
jecxz
add
sub
jo
scas
mov
negl
jno
cmc
inc
xlat
sbb
mov
inc
adc
xor
adc
pop
mov
xchg
dec
daa
xor
xor
sbb
movsl
cmp
test
lret
pop
mov
mull
fwait
push
mov
movsl
nop
enter
jg
cmpsl
daa
pop
mov
idivl
into
sbb
push
in
pop
lret
gs
scas
add
jl
cltd
js
popa
jae
dec
popf
decb
jge
push
stos
les
test
lahf
push
ret
and
xchg
dec
pop
gs
lock
inc
sbb
jns
mov
adc
or
bound
aaa
lahf
rclb
sub
pop
mov
or
ficoml
and
cmp
cmp
int
and
pop
pop
js
inc
xchg
mov
ret
cmp
lds
xor
xorb
mov
lea
js
xor
sub
pop
clc
or
or
bound
and
dec
xchg
cs
cmp
or
sahf
addb
add
imul
cwtl
adc
xchg
loope
loopne
inc
sub
dec
or
inc
lahf
jbe
sub
dec
cmpsb
or
ja
cmpsb
jge
lock
mov
pop
orb
ja
lea
fcmovnb
push
je
movsb
mov
data16
sbb
mov
pusha
pop
test
push
push
insb
mov
mov
adc
push
xchg
fdivrl
add
pusha
inc
lret
lcall
or
xor
cmp
loope
dec
bound
push
xor
push
stc
mov
add
pushf
push
xlat
hlt
test
add
push
add
push
cmp
ror
cmp
loopne
push
mov
mov
insl
popf
clc
fstpl
xlat
test
push
sub
ljmp
iret
inc
xchg
xor
lods
ljmp
push
xchg
popf
dec
mov
xor
insb
clc
cmc
int
adc
jns
xor
movsl
mov
jmp
pop
scas
xchg
dec
mov
frstor
das
inc
xlat
push
mov
pop
andb
and
mov
popf
mov
cmp
lcall
lret
mov
push
hlt
cld
iret
leave
clc
int
mov
fxch
push
cld
mov
leave
imul
js
lea
int
divb
fsub
test
sbb
dec
mov
lahf
call
mov
dec
sub
scas
loopne
sbb
in
push
sahf
fidivrl
rcrb
js
and
xor
jno
or
jl
repnz
test
cld
add
mov
jnp
js
mov
sub
inc
push
lret
pop
pusha
ds
mov
jbe
push
mov
jp
jo
std
stc
jno
shlb
or
jb
mov
jmp
inc
mov
cmc
add
mov
mov
imul
xchg
sub
sahf
xor
jp
cwtl
sub
pop
cltd
fisubrs
pop
inc
pop
cmc
or
mov
jg
sub
dec
and
fstps
add
ljmp
fcmovnu
and
lcall
xor
inc
xchg
jno
cld
push
or
fnstsw
cmp
popf
mov
mov
aas
dec
mov
scas
and
xchg
cmp
and
xorb
cmp
push
jne
push
cs
in
stos
mov
lock
cmp
dec
and
ret
xor
ret
cmc
ds
cmp
xor
pop
clc
bextr
ficomps
inc
fdiv
sbb
and
shrb
cmp
movsb
xchg
movsl
clc
lods
pop
mov
add
fisttpl
loope
adc
inc
xchg
sub
ja
pop
push
int
or
dec
sar
jnp
cmpb
xchg
lods
enter
jle
clc
jne
cmp
out
in
mov
dec
jo
jg
leave
test
xchg
jg
jae
cmp
add
inc
jp
lret
cmpsb
push
mov
push
fcompl
push
mov
and
out
fnsave
es
mov
cmp
jbe
adc
jbe
or
addr16
xchg
sar
enter
loope
in
mov
jmp
dec
inc
sub
rcr
or
sub
and
xor
sarb
jnp
jnp
lods
cmp
shll
adc
or
lods
cmp
or
push
rorb
pop
push
add
mov
mov
rclb
push
js
test
test
mov
inc
adc
fidivrs
fadds
stos
and
adc
lahf
scas
xchg
addr16
cmc
mov
lahf
test
frstor
sbb
aam
sahf
call
or
je
mov
add
in
cmc
dec
iret
xchg
hlt
daa
cmp
andb
xor
movsb
sahf
loop
jbe
aad
shlb
into
cmp
jns
push
popa
ja
dec
adc
aad
in
and
or
dec
in
out
pop
ds
jb
mov
loopne
fs
cmp
int3
xchg
cmpsl
jmp
in
xchg
mov
inc
adc
push
cmpsb
in
pushf
int3
pop
cmp
dec
cmp
adc
addl
out
aaa
lret
in
mov
jmp
jne
cmc
mov
frstpm(287
cmc
aas
xor
lods
dec
shlb
lea
add
xor
or
inc
test
cmp
cmc
mov
mov
xor
xchg
push
jno
imul
fadds
ds
std
xchg
insb
cmp
jecxz
int
int3
popa
xchg
xchg
jo
cmp
test
dec
cmp
dec
cmp
and
sbb
jnp
pop
mov
xor
or
rorl
repz
push
loope
xor
fsubs
sub
lret
in
aas
cli
aaa
mov
cmp
sub
pusha
arpl
cmpsl
sbb
jl
pushf
jp
or
sbbb
ss
jp
cltd
or
and
jle
fcmovbe
js
xchg
xchg
stos
jnp
aaa
cmp
xchg
mov
mov
adc
dec
fs
xor
fwait
xchg
push
pop
jp
outsl
ret
lret
ficoms
jp
notb
lds
and
mov
or
xchg
sub
mov
rolb
inc
mov
enter
sub
mov
sbb
xchg
sahf
in
jno
push
jno
std
fcomps
aad
cmpsb
cmp
mov
add
jns
fadd
out
cmp
fwait
or
mov
mov
xchg
outsl
dec
xor
sub
pushf
mov
dec
inc
cmp
outsb
push
sti
mov
xchg
nop
mov
ljmp
pop
sti
sub
jl
pop
jae,pt
mov
push
sbb
ljmp
and
fcomps
rorb
xchg
test
inc
divb
out
in
stos
es
pop
sbb
fcomps
jns
cli
scas
jle
dec
cwtl
jp
jae
cli
nop
loopne
in
push
sub
lock
clc
cmp
test
jae
xchg
adc
xchg
test
ss
cwtl
sub
shrl
xchg
out
mov
pop
in
ret
add
pop
movsb
jnp
negl
push
mov
jno
cs
nop
lcall
into
mov
cmc
mov
jae
cmp
js
mov
out
xchg
call
push
mulb
push
jmp
jns
dec
test
addr16
xchg
xchg
ds
jge
mov
stos
jmp
cmp
cmc
scas
cmpsb
mov
fmuls
divl
test
jo
test
orb
mov
push
push
push
dec
mov
mov
xor
mov
fidivrs
ret
jmp
inc
enter
lret
mov
and
negl
pushf
test
xor
lds
shll
leave
mov
pop
popa
mov
fdivrs
mov
lret
popf
jo
insl
and
xor
xorl
inc
dec
clc
adc
ljmp
fcoml
fsts
inc
negb
sbb
xor
adc
mov
lods
addr16
sbb
js
push
mov
shlb
stc
sub
xchg
add
imul
mov
bound
jle
sahf
inc
lds
mov
cmp
mov
cs
jmp
jbe
stos
sbb
add
sub
loope
xchg
mov
add
adc
inc
jmp
sarb
lret
test
mov
mov
repnz
mov
imulb
addr16
xchg
mov
mov
sub
mov
cs
add
test
aaa
jb
pop
scas
leave
jp
ss
cmp
mov
add
or
das
mov
adc
push
cmp
test
lds
and
stc
stos
inc
mov
push
xchg
sub
imul
jmp
xchg
test
sub
push
sub
aas
loope
xorl
nop
mov
and
lods
push
cmpsb
mov
mov
pop
fisubrl
jmp
jbe
push
test
scas
and
inc
dec
ds
cmc
aam
inc
dec
mov
pop
pop
or
xchg
dec
in
pop
rol
jle
mov
test
cmpsb
and
in
adc
adc
jl
xchg
cmc
test
cmc
idivl
push
jnp
ret
ret
jmp
mov
iret
dec
xor
jne
add
dec
int
cmp
cmp
jno
scas
nop
fstpl
sbb
mov
movb
test
xchg
and
inc
or
fcmovnu
sbb
jge
ja
mov
cmp
xchg
lret
inc
fidivrs
aad
mov
jl
rcrb
inc
movsb
mov
lods
push
lods
jbe
push
insb
mov
or
icebp
mov
sub
cmpsb
xchg
mov
and
push
mov
lods
sbb
icebp
enter
push
dec
jbe
lcall
pop
or
jb
gs
mov
cmpb
divb
lahf
pop
movsb
mov
xor
paddsw
fbstp
pop
mov
mov
daa
cmp
or
mov
js
dec
inc
jbe
mov
insl
mov
sahf
jb
in
aaa
lods
mov
jnp
xchg
lea
mov
add
nop
test
fsubs
jge
mov
daa
cmp
dec
divb
sub
jg
roll
das
jo
imul
mov
and
push
fisttps
js
and
out
push
xchg
imull
arpl
jle
ret
les
pop
mov
adc
xchg
add
jmp
insb
jno
scas
sahf
jg
jbe
insl
sbb
clc
aaa
je
push
sbb
mov
adc
bound
push
dec
push
push
clc
icebp
mov
mov
inc
es
push
lods
lea
cmp
dec
nop
lods
stc
cmp
fstl
ljmp
out
leave
xor
mov
cmp
push
dec
fdivrs
shr
int3
mov
xchg
cltd
sub
std
or
nop
or
adc
clc
push
pushf
loop
std
insl
push
popa
cs
or
sbb
js
call
or
mov
out
jns
cmp
in
sahf
ret
cmpsb
jnp
pop
mov
sub
xchg
dec
jle
insl
jmp
enter
fstps
leave
popa
push
push
mov
hlt
subb
mov
xor
popf
addb
orb
mov
jnp
lods
dec
or
xchg
mov
imul
fildl
and
cmp
fsubrl
cmp
fwait
inc
in
or
orb
cli
mov
hlt
cmp
cmp
popa
std
xchg
cmp
je
xchg
test
cmp
lods
loop
adc
out
aam
inc
xor
push
mov
movsb
sub
fdivs
xchg
mov
dec
fwait
je
fildl
jns
xchg
ret
data16
shr
cmp
jp
push
xor
mov
sbb
cmp
dec
push
movsb
add
fildl
or
mov
scas
jle
int3
sti
push
clc
mov
int3
dec
fwait
insb
mov
xor
and
imul
in
mov
push
add
adc
inc
lahf
sbb
jle
mov
cmp
xchg
cld
jle
cmp
mull
cmp
adc
cmp
jo
adc
jecxz
fidivrs
push
xchg
test
rcll
lahf
adc
and
jo
negl
scas
or
and
push
dec
mov
clc
xchg
fistpl
imul
mov
push
lea
or
dec
pop
fsts
call
rorl
dec
std
pushf
add
add
mov
adc
in
jg
inc
mov
add
movsb
fdivrp
add
sbb
inc
mov
dec
js
adc
jp
repz
int
dec
push
add
cmpsl
jno
or
frstor
xchg
mov
mov
sahf
sbb
lods
addr16
leave
sub
xor
jne
mov
adc
xchg
test
cmpsb
leave
jle
cmp
cmp
cmp
jp
xor
mov
push
and
out
mov
inc
fisttps
je
mov
ds
orl
clc
dec
imul
push
scas
leave
xor
cmpb
or
sar
fwait
cmpb
cmpsl
addr16
xchg
xchg
cmpsl
aam
dec
ja
add
jp
loopne
push
ret
xlat
xchg
mov
dec
lcall
xchg
hlt
into
xlat
es
mov
lcall
cmp
mov
inc
data16
mov
adc
mov
fisubrs
jle
ljmp
lods
ret
sahf
push
mov
adc
js
lods
dec
push
test
inc
stc
pushf
jb
cmp
hlt
xchg
jo
js
int
xor
popa
jo
jecxz
mov
in
push
jne
push
jg
push
movsl
jae
push
insb
mov
sbb
cmp
pop
shrb
lea
je
adc
jle
fstl
jmp
out
xor
dec
dec
mov
lock
clc
push
in
pushl
jo
fimuls
cs
pop
jle
add
hlt
int
cmpsb
dec
lahf
xor
mov
pop
adc
call
add
cmp
loopne
aad
jno
cmp
nop
xor
jle
rcl
sub
adc
out
inc
cld
lahf
push
rorl
or
shlb
test
sarb
jl
lods
cmp
jb
cs
fdivrl
scas
aad
push
push
clc
test
or
pop
in
pop
jle
lea
scas
lea
xchg
in
or
lret
xchg
inc
je
and
mov
pop
pop
ss
sub
add
and
ret
xor
xchg
inc
outsb
jecxz
into
mov
jge
inc
jns
mov
sub
ror
adc
test
xor
mov
adc
pushf
dec
pushf
insl
add
ja
sub
xchg
test
mov
xor
rcl
jb
lds
cmpsl
xchg
inc
aam
push
lds
sarl
imul
dec
xchg
pop
cmc
shlb
insl
les
inc
xchg
mov
mov
fnstenv
add
adc
sbb
xor
sub
add
push
push
cli
adc
movsl
popf
cmpsl
imul
cmp
inc
jns
test
dec
ret
loop
or
imul
ja
js
addr16
lods
enter
or
insl
jmp
xor
xlat
sbb
popf
sbb
dec
mov
movsl
pop
test
data16
inc
inc
repz
imul
aam
sbb
jmp
popf
mov
push
pop
out
xchg
aam
fistpl
mov
lahf
int3
adc
insb
mov
fs
cmp
popf
lds
add
sbb
mov
daa
setbe
pop
push
ljmp
add
pop
es
test
out
ljmp
push
jp
lock
or
faddp
cmp
cmp
adc
imul
addr16
and
sub
call
out
lock
xor
cwtl
jecxz
in
cli
lret
cmp
dec
outsb
insl
in
cltd
push
sti
xchg
cmp
or
inc
clc
jg
push
fsubp
pusha
enter
pop
sub
jns
notb
mov
inc
notb
icebp
dec
filds
mov
push
and
xor
inc
enter
bound
adc
icebp
daa
icebp
sub
xchg
mov
imul
or
xor
stc
dec
mov
arpl
mov
in
jp
mov
xchg
cmp
jle
push
inc
les
cmp
leave
push
mov
dec
inc
out
pop
fistps
xchg
lcall
sbb
mov
pop
enter
pop
cmp
jbe
cmp
nop
push
lods
bound
out
and
mov
xor
push
xchg
mov
pop
sbbb
cltd
xor
fwait
xor
jg
adcb
loopne
xchg
push
push
sbb
sub
jge
data16
jno
dec
push
jle
sub
mov
jle
push
std
sub
adc
or
shlb
movsb
xchg
lret
icebp
pop
mov
test
repnz
add
adc
aaa
jne
cmpsl
sbb
imul
bswap
enter
pop
repnz
pop
mov
aas
adc
xor
dec
popa
icebp
jle
ds
dec
cmp
mov
add
push
pushf
popa
fimull
scas
addr16
or
lock
cmp
push
push
pop
lret
adc
sbb
rorl
jecxz
or
test
mov
xchg
js
lods
cmp
and
les
negb
jl
cmp
jle
jb
inc
mov
dec
inc
sbb
mov
add
out
jo
sub
sbb
xlat
cmp
inc
jbe
or
test
mov
jb
lcall
jnp
pop
lods
test
jne
lods
mov
cmpsl
dec
inc
rcll
mov
ret
fwait
cmp
fnstenv
jb
imul
lock
jle
movsb
mov
pop
mov
out
mov
jle
push
pop
push
add
push
pop
rcrl
mov
pop
pop
dec
pusha
clc
mov
push
test
loop
sbb
xlat
fisubrl
cwtl
mov
push
stos
gs
cwtl
shrl
dec
leave
into
pusha
fcom
add
mov
cmp
call
add
or
jp
sbb
jmp
ds
inc
push
lods
imul
popf
icebp
imul
mov
cmp
xor
or
ss
pop
sbb
imull
inc
sbb
push
or
push
mov
jle
into
push
int3
sti
jecxz
xchg
jp
popl
pop
push
bound
jo
inc
sarl
push
lret
xchg
inc
mov
fbstp
add
xchg
sub
pop
pop
add
sub
pop
jg
push
out
push
push
sub
clc
rcl
adc
icebp
mov
mov
sarb
pop
pop
pushf
pop
arpl
jmp
jns
sbb
dec
test
cwtl
cs
aad
xor
arpl
enter
cmp
gs
push
cwtl
pop
jo
arpl
shll
test
in
inc
psubusb
fsubrs
arpl
lea
push
jbe
test
pop
xchg
cmp
fs
rclb
call
jl
sbb
loop
add
leave
imul
in
adc
or
mov
cmc
ret
test
mov
bound
push
jg
sar
add
cmpl
sub
and
xchg
aam
icebp
xchg
shlb
or
dec
popa
stos
mov
cmpsl
xor
inc
jb
int
imul
mov
fiaddl
ss
xchg
mov
adc
imul
js
push
cltd
movsl
repnz
mov
jnp
in
rolb
dec
cmp
push
sbb
mov
jle
enter
push
xor
jns
imul
sbb
xchg
sub
sub
popf
rcr
imul
or
nop
xchg
xchg
cmp
jns
popa
push
push
adc
or
out
add
sahf
imul
out
lock
lahf
pop
js
sahf
lea
pop
test
jg
add
mov
push
ret
pusha
push
add
xor
cmpsb
mov
mov
jne
test
ficoms
dec
or
int3
das
mov
push
aaa
pop
push
clc
inc
push
inc
push
lea
and
orb
mov
and
outsl
fs
popl
mov
cmp
fwait
push
call
into
jnp
enterw
loope
xchg
gs
dec
jo
jns
fistl
shrl
mov
test
rcll
push
js
or
adc
arpl
pop
and
int
ficoml
adc
jmp
jo
loope
mov
pop
mov
sbb
clc
icebp
and
je
jp
xchg
lcall
shrb
xchg
pop
xor
xor
inc
adc
cmp
popa
mov
fdiv
pop
out
jp
stc
mov
cwtl
mov
into
push
add
lds
shl
jge
aad
mov
orb
push
jp
js
sub
mov
outsb
mov
sub
mov
sub
ljmp
mov
mov
sbb
lock
repnz
pop
loop
add
ficoms
xor
cmp
scas
xchg
mov
jo
in
cltd
push
mov
lock
mov
jb
ljmp
sub
and
inc
testl
fstps
fidivl
inc
movsl
jmp
mov
fst
xchg
popa
or
das
movsb
or
stos
call
icebp
adc
adc
scas
cs
fdivrl
xor
xor
lret
pop
orl
enter
push
lds
stc
cmp
lret
and
xchg
jb
sub
or
sbb
insl
push
and
stos
test
fcomip
rcll
or
lret
fnstenv
pop
popf
pop
add
sbb
pop
fldcw
int3
inc
pop
adc
adc
mov
pop
sub
not
sti
inc
and
dec
lahf
xchg
push
jns
lret
xchg
inc
iret
inc
ret
pop
ljmp
cmp
movsb
scas
sbbl
dec
mov
cmp
xchg
sbb
jmp
mov
jns
leave
ja
push
sub
push
or
das
out
add
push
pop
mov
jns
mov
inc
fiadds
sbb
inc
jp
adc
mov
xorl
push
out
cld
push
or
xlat
xchg
ret
push
inc
das
je
and
pop
addr16
xchg
jg
dec
mov
rcrb
xchg
push
mov
dec
lock
inc
std
pushf
sub
test
test
fildl
dec
push
mov
movsb
sbb
cmc
inc
in
ficompl
rorb
or
jno
xchg
push
inc
shll
pushf
scas
popf
pop
pushf
xor
push
filds
in
rclb
sub
inc
push
push
xor
cmp
add
sbb
test
fildll
shlb
adc
mov
mov
cmp
sub
fs
xchg
mov
es
dec
incl
mov
adc
cwtl
mov
cwtl
pop
jne
enter
inc
lret
mov
jmp
in
cmp
ret
hlt
fnstenv
mov
add
iret
xchg
mov
pop
call
mov
and
out
or
cmp
bound
lock
jnp
inc
cwtl
mov
or
stos
adc
pop
xchg
sbb
and
cmp
mov
fstl
inc
xorb
mov
data16
leave
add
add
adc
mov
inc
pop
push
pop
jns
mov
pop
push
add
ja
popf
movl
xchg
add
lds
int3
push
xchg
enter
mov
adc
iret
mov
pop
popl
pop
in
cmp
mov
ret
or
xlat
jmp
sub
xorb
xchg
and
aaa
in
sbb
stos
mov
or
repnz
nop
push
pop
push
mov
add
or
mov
insb
in
stc
pop
pop
sbb
scas
jns
sbb
aad
xchg
mov
pop
push
iret
enter
mov
call
cld
jbe
ja
adc
jl
add
js
and
ja
sub
pop
test
fsubrl
sbb
push
dec
inc
ret
jge
movsb
js
jge
push
sbb
icebp
test
jno
push
pop
sahf
stos
and
sahf
pop
stos
lock
fcmovnb
sbb
dec
push
ss
cmp
ror
push
fiadds
jae
into
aad
xchg
dec
fcomps
daa
out
mov
sti
add
sub
int3
daa
test
xchg
mov
sbbl
pop
jae
int3
dec
xchg
cltd
jl
xchg
xchg
xchg
xchg
movsb
adc
xchg
mov
imul
adc
sub
js
js
xor
push
stos
mov
jno
pop
sbb
repnz
hlt
dec
test
cmp
xor
dec
or
ror
ja
dec
lret
cmp
and
mov
lret
push
jp
js
fcmovu
jl
ret
lods
sbb
imulb
mulb
or
cmp
bound
ja
push
add
or
adcb
sub
test
inc
test
lret
jno
es
les
pop
test
jbe
addb
push
xchg
mov
and
mull
fmul
mov
cmp
out
inc
pop
test
daa
add
jmp
iret
mov
jnp
sbb
ljmp
cmpsb
into
loopne
pop
lahf
notl
loope
movsb
fsubrl
aas
sti
outsl
pop
int
mov
push
movsl
lcall
das
sti
sub
or
dec
dec
fs
ret
mov
stc
fcomps
sbb
jecxz
jns
jge
enter
xchg
lods
stc
pop
scas
add
cltd
jo
dec
pop
fisttpl
lds
mov
or
add
in
add
cmp
pop
iret
and
in
fwait
xor
xchg
daa
std
adc
inc
pop
js
dec
inc
inc
pushf
dec
nop
cmp
lahf
dec
cmovs
out
int3
and
xchg
push
push
sub
fcmovne
mov
cmp
pushf
fcomps
xchg
test
pop
lcall
int3
sub
cmp
and
jmp
jb
es
xor
clc
daa
pop
mov
mov
and
cmp
push
mov
out
test
cmp
dec
lea
test
fstpt
dec
push
mov
in
ja
sub
cmp
pop
test
dec
dec
adc
pop
and
mov
fcmovb
xor
test
ficomps
out
jl
lcall
push
pop
stos
lret
repnz
mov
sbb
adc
stc
in
xchg
hlt
mov
jge
stos
test
stos
rcll
lahf
or
int
cmp
sub
sbb
mov
cmp
cmp
popf
pop
jle
jb
scas
lock
and
mov
popf
xchg
lahf
clc
subb
dec
shlb
cli
lods
outsb
jge
inc
cld
mov
dec
popl
pop
out
faddl
jge
cmp
jge
pop
or
dec
push
lods
adc
test
cmpl
sub
roll
stos
mov
push
stos
mov
fimuls
xchg
call
js
sub
mov
add
push
sub
push
xchg
stos
es
inc
jle
mov
mov
xchg
cli
mov
add
xlat
aaa
xchg
aas
pop
mov
sbb
cmpsl
pusha
add
pop
pop
push
lret
mov
and
sahf
sbb
out
pushf
cld
and
push
dec
add
push
fisubrl
jge
sti
daa
repz
jmp
stc
fcom
dec
out
imul
je
imul
jg
jge
clts
aas
int3
cmp
jl
push
adc
loop
pop
sahf
sub
imul
lds
insb
jnp
adc
cmp
ja
mov
xchg
fmuls
inc
xchg
pop
dec
cmp
cld
and
mov
pop
cmpsl
pop
push
shlb
sub
in
dec
lahf
push
xchg
lods
add
pop
fcompl
sbb
divb
xor
inc
push
dec
xor
andb
test
cmpsl
int3
adc
pop
nop
in
out
stos
pusha
fs
imul
mov
jecxz
or
push
cltd
or
and
sub
mov
icebp
inc
xchg
out
bound
test
inc
and
jmp
dec
pop
lret
fistpll
pop
js
push
or
xlat
jp
out
lcall
int3
adc
pop
or
fxch
call
testl
dec
or
mov
jbe
jns
sub
addb
int3
cmp
cwtl
push
lcall
js
pop
fsubs
xlat
adc
xchg
inc
push
jle
imulb
sub
jge
jecxz
lods
cli
in
cld
pop
sbb
lods
jns
adc
xchg
or
pop
ds
fcmove
xorl
xor
jle
lods
aas
lret
sahf
push
std
sbbb
je
vaddsubpd
push
cmpsb
xchg
mov
mov
lock
push
xor
pop
mov
cmc
lcall
add
test
pop
adc
aas
xchg
dec
in
or
lods
xor
pop
das
fs
fldl
movsl
mov
mov
or
sub
daa
fmuls
aas
pop
adc
mov
into
mov
push
sub
subl
les
leave
int3
fdivs
sub
inc
inc
movsb
test
adc
pop
pop
inc
fcoms
jb
xchg
lret
pop
out
push
cmp
mov
int
mov
cmp
fldenv
mov
dec
inc
add
cmp
mov
les
inc
lock
mov
lds
sti
xlat
stc
jl
sub
int
jle
fbld
push
mov
outsl
mov
insb
test
jle
mov
mov
sar
inc
pop
fildl
adc
outsl
mov
jb
cli
rorb
adc
js
imul
push
jb
inc
sbb
xchg
div
dec
pop
push
inc
inc
loopne
add
cwtl
cld
and
dec
enter
jne
dec
scas
sbb
mov
or
cmc
popl
pop
hlt
insl
jns
xor
mov
inc
dec
dec
jns
mov
cmp
push
addb
adc
les
popf
push
fcmovne
call
stos
or
sbb
adc
pusha
mov
fucomi
ret
test
dec
mov
xor
lahf
xor
daa
not
xchg
or
repz
imul
cmp
xchg
sbb
mov
pop
xor
and
or
cmpl
je
push
dec
sub
mov
lds
mov
fdivl
sub
push
cmp
mov
jecxz
and
add
lret
jo
inc
sub
outsb
inc
sub
push
in
push
cli
xor
fstpt
ds
jl
xchg
stos
inc
dec
leave
add
xor
ret
fcompl
dec
push
pop
lea
fwait
fs
jbe,pn
subb
sbb
in
movsl
call
mulb
push
jg
ss
mov
adc
push
lret
xchg
xor
testl
loopne
mov
fsts
out
cmc
fcoms
cmp
push
or
mov
in
fldt
loop
xchg
pop
push
add
mov
push
xchg
pop
xor
jmp
fldt
adc
xor
xlat
and
jns
jle
hlt
xchg
xchg
lahf
push
in
test
jne
lock
pop
adc
faddl
rclb
adc
cmp
cmp
pop
pop
sbb
pop
dec
and
jb
mov
push
rcl
xor
push
iret
jno
mov
fildll
pop
mov
andl
or
push
jl
pop
mov
pop
push
sbb
jns
hlt
leave
lret
ja
test
lahf
xchg
mov
insb
inc
jb
and
cmp
push
sub
mov
add
inc
mov
cmp
push
les
or
ficoms
mov
push
mov
xor
cmp
dec
insb
pop
jge
jb
aad
cmp
jno
fnstsw
cmp
scas
fdivp
js
dec
rorb
cmp
mov
push
adc
loope
mov
adc
out
dec
mov
xchg
outsb
cmc
inc
cmp
mov
cmp
jge
add
sbb
dec
stos
mov
sub
mov
adc
aad
mov
xor
or
bnd
xor
cmp
das
ret
or
and
push
jp
mov
lcall
hlt
sahf
divb
sbb
lret
mov
push
jmp
adc
dec
aad
adc
jle
inc
push
repz
cmpl
cltd
cmpl
loopne
jle
mov
cmp
mov
sbb
fidivs
add
sub
lds
movsb
call
mov
adcl
or
iret
or
lahf
sbb
inc
jle
repz
xchg
pop
cmp
xor
rcrb
mov
out
mov
add
in
and
dec
jge
mov
cmp
adc
mov
add
jnp
dec
push
or
test
xor
add
add
dec
into
ja
cmp
mov
dec
ret
in
jp
sub
or
xchg
jp
js
add
mov
dec
add
add
cmc
dec
decl
xchg
xor
inc
or
jp
js
sub
xor
push
sbb
push
pop
lods
test
pop
insl
and
sahf
inc
aam
movsb
lock
fmuls
int
lret
adc
int
mov
sti
mov
dec
or
xchg
cltd
fimuls
xchg
xlat
dec
das
sbb
push
sbb
xchg
rcrb
adc
and
mov
adc
pop
fsts
cmc
xchg
loope
roll
push
add
stos
jmp
mov
je
int
cmp
sahf
dec
pop
jl
outsb
lods
addr16
shll
scas
test
dec
sbb
xor
jmp
cmp
repnz
cmc
jg
cmp
or
add
inc
fldenv
push
cmpl
jnp
aas
lds
jecxz
test
pop
cli
pusha
dec
adc
push
insl
mov
sbb
shl
dec
or
cs
inc
add
outsb
cmp
fdivrl
mov
into
orb
push
xchg
adc
sub
cmp
pop
mov
cwtl
mov
xor
push
lds
add
stc
dec
xor
daa
inc
fs
push
dec
mov
ja
push
jmp
or
or
sbbl
movsb
mov
lahf
addr16
movsb
jne
pop
fsubr
pop
cmp
jg
add
mov
add
sbb
nop
adc
cmp
pop
mov
imul
sahf
cmc
mov
imul
jbe
or
sub
notb
xchg
xchg
jb
lret
ret
ror
mov
pop
jle
adc
dec
or
movsb
adc
fwait
sbb
xchg
cmpb
inc
and
mov
cmp
jns
ret
adc
jnp
js
ret
subb
icebp
dec
add
push
sbb
xor
fmul
testb
xchg
nop
out
in
insl
xchg
xchg
in
out
js
pop
flds
or
xlat
leave
or
int3
add
jl
xlat
lret
out
push
and
or
push
ss
cmp
sub
enter
imul
data16
icebp
push
mov
int3
inc
cs
out
mov
iret
out
ficoml
mov
les
jle
push
sbb
mov
nop
enter
mov
ja
mov
leave
cmp
add
jge
xchg
negl
mov
lret
cmpsl
ret
and
or
jne
pop
sub
icebp
mov
mov
push
in
addr16
fs
sbb
mov
lret
ds
inc
xchg
xchg
jno
sbb
cmp
cmp
inc
inc
xor
xlat
cs
pminub
xor
frstor
bound
out
xchg
inc
xor
pop
add
loope
jp
fwait
cmp
push
cmpsb
xchg
stos
icebp
mov
jb
in
jge
sub
addr16
mov
pop
ret
cwtl
xchg
add
cmpl
ja
dec
push
popf
hlt
add
js
xor
movsb
sarl
movsbl
sub
push
push
adc
icebp
pop
pushf
mov
jle
mov
or
mov
div
sbb
pusha
and
adc
and
sbb
cmpl
int3
and
push
mov
pop
sahf
or
outsb
fsts
incb
mov
je
aaa
wbinvd
cmp
cmpsl
test
icebp
icebp
lea
mov
test
jno
sbb
subl
pushf
imul
outsb
fldcw
jecxz
cmp
cmc
dec
sub
scas
js
mov
adc
inc
add
pushl
xor
cmp
cmp
outsl
dec
or
push
lret
dec
jg
lds
mov
inc
sub
cmp
mov
jmp
jmp
in
mov
dec
mov
cmpsb
inc
mov
cld
loope
cld
push
mov
mov
mov
adc
stos
fwait
cmp
and
fs
mov
mov
lods
or
sub
mov
sbb
xor
push
cmp
fiadds
push
jge
insb
xor
adc
and
lahf
cli
cmp
test
scas
fcompl
inc
push
pop
cmp
push
jge
hlt
cmp
comiss
mov
mov
mov
sbb
lcall
stc
ljmp
xchg
or
fcoml
and
xchg
popf
popa
and
push
pop
inc
int
test
imul
or
daa
pushf
xor
pushf
in
scas
in
add
push
adc
dec
cmp
movsl
mov
dec
jg
jno
add
scas
out
adc
stos
adc
cwtl
add
popa
in
out
orb
clc
jp
andb
pop
lcall
or
xlat
add
sti
xor
or
mov
or
push
mov
xchg
adc
lret
movb
aam
sub
xor
cld
xchg
aas
out
lds
jbe
cld
cmp
out
stc
cwtl
and
cwtl
adc
pop
jo
je
cwtl
addr16
jns
es
addl
jl
ja
ja
mov
ja
sti
lahf
dec
xor
movsb
dec
mov
jle
add
pusha
dec
or
imul
mov
dec
push
clc
inc
adc
arpl
sub
cmp
and
mov
call
loopne
or
fucom
xchg
negl
mov
lods
pushf
cmp
or
mov
mov
add
dec
jp
repnz
lea
loopne
jbe
jge
mov
xchg
jg
xchg
cmp
sti
jne
outsb
xorl
and
sub
lahf
xor
lret
cmp
jg
xor
fcomps
and
pop
movsb
jne
cmc
jns
push
test
mov
push
repnz
popl
daa
mov
inc
jle
or
aas
mov
ret
fadds
outsl
adc
inc
leave
dec
mov
sbb
insl
pushf
mov
xchg
push
pop
aam
mov
fldt
lods
insl
out
jecxz
xchg
mov
subl
shlb
arpl
cmp
test
cmp
sbb
out
mov
mov
stos
adc
xor
or
xor
shr
repz
enter
push
aam
movsb
push
xchg
sti
sahf
xor
loop
mov
arpl
mov
ja
int
out
sub
push
or
xor
packsswb
mov
cmpl
mov
push
cmpsl
shl
dec
lret
stc
int3
dec
xchg
mov
sbb
pop
test
rolb
out
notl
jnp
inc
in
bnd
or
or
outsb
xor
xor
sbb
sbb
xor
test
lods
mov
sarb
xchg
repnz
push
faddl
loop
cmpsl
sbb
cli
inc
inc
lds
sbb
add
or
xlat
out
push
les
aam
jg
jns
mov
sbb
sarl
inc
cmp
push
shlb
fsubrl
sub
rolb
into
adc
outsb
push
xlat
adc
insb
mov
inc
mov
fcmovnbe
adcb
adc
or
loop
push
and
les
lock
pop
lock
shrl
add
lahf
pop
js
sahf
xchg
pop
mov
ss
pop
mov
xchg
mov
mov
fnstsw
adc
dec
imulb
pop
sbb
data16
test
pop
div
cmova
cmp
xchg
arpl
sub
test
dec
push
ds
push
xchg
int3
fstps
sub
fnstcw
mov
movsb
dec
inc
jne
int3
testb
mulb
fs
xor
lock
adc
pop
push
and
pop
mov
ret
xor
xchg
nop
jl
xchg
iret
aaa
and
adc
mov
add
test
idivl
bound
dec
push
adc
mul
lahf
sbb
jg
xchg
movsl
dec
test
pop
jge
cmpsl
test
push
cli
add
lcall
cmpsl
movsb
mov
push
cmp
sub
fldt
enter
sbb
xchg
adc
xor
pop
xlat
loope
insl
testl
sbb
cmpb
rorb
or
scas
adc
and
jb
fnsave
test
or
mov
xor
fs
cmp
fidivrl
and
gs
or
fldenv
add
mov
or
or
leave
push
cmp
nop
sbb
pop
movsl
mov
xor
inc
enter
xchg
mov
cltd
outsb
jo
dec
jp
sub
rorl
xlat
xor
das
dec
push
sbb
jge
sub
mov
jno
in
cli
jge
inc
pop
push
aam
ficompl
jecxz
dec
xchg
leave
fbstp
aaa
lret
jle
dec
cwtl
into
jl
push
or
aaa
sub
mov
fmull
add
jp
rcrl
mov
cmp
andb
bound
int
adc
idivl
ret
mov
jbe
decb
jl
pop
xchg
std
or
cmpb
in
pop
std
dec
into
inc
pusha
jle
sub
in
call
jg
sbb
lock
push
movsl
cmp
cltd
cmp
pop
xchg
mov
push
test
stos
mov
jb
sbbl
push
xor
cwtl
adc
imul
pop
pop
outsl
mov
sahf
fmulp
imul
pushf
pop
jg
rclb
sub
dec
mov
or
fists
in
adc
ds
jb
rcll
pop
movsb
call
add
repnz
fidivl
mov
push
cmpsl
movsl
out
pop
fs
bound
sbb
add
cmp
aas
stc
xor
outsl
stc
and
push
adc
cld
push
aaa
cmpsl
add
cmp
and
cmp
in
loope
clc
arpl
gs
lea
sub
or
mov
mov
dec
in
out
adc
dec
add
fstps
jns
hlt
inc
xchg
cwtl
addr16
fs
cmp
push
rcrl
dec
enter
stos
pop
dec
and
imul
add
sbb
xchg
and
cmp
mov
popa
mov
imul
or
cmpsl
xchg
and
not
mov
loop
sub
adc
scas
mov
cmpsb
xchg
jg
popa
lea
jle
test
lcall
inc
insl
add
out
lret
inc
jbe
cli
stos
xor
mov
out
into
jp
in
adc
pushf
pushf
pop
xchg
cmc
hlt
jg
cmp
cmpsb
push
loope
xchg
movsl
xcrypt-ctr
cmpsl
fistpll
jl
mov
push
mov
adc
jo
shrb
dec
push
mov
push
xchg
les
pop
adc
or
mov
or
insb
dec
sbb
push
fsubrs
pop
insb
fistpl
sarb
pushf
xchg
ficomps
ja
enter
xchg
or
jle
shrb
idiv
mov
mov
rcrb
xchg
push
xor
mov
inc
inc
mov
inc
inc
cmpsl
ss
repz
sbb
mov
stos
sub
xchg
addr16
add
push
and
add
divl
cmc
adc
pmulhw
mov
inc
sbb
and
lret
js
jb
jne
fcmovu
pop
std
mov
adc
lcall
into
mov
movb
push
hlt
gs
rol
mov
pushf
xchg
jae
popf
add
and
jmp
pop
rclb
jmp
jnp
ret
sbb
popa
lcall
mov
inc
add
loopne
pop
jnp
inc
adcb
pusha
mov
inc
mov
insb
cltd
pop
pop
lret
data16
in
clc
mov
jle
pop
ja
es
mov
and
xchg
jle
mov
inc
lds
inc
xor
divl
out
mov
cmpsb
ds
sbb
ja
inc
pushf
cwtl
xchg
repz
scas
mov
bound
fiaddl
ret
or
and
mov
mov
imul
xchg
pushf
cltd
pop
inc
mov
test
ljmp
repnz
add
inc
mov
fdivrp
dec
pop
iret
ljmp
mov
fisubrs
test
shrb
jl
jns
sbb
add
push
xor
out
subb
jp
xchg
not
rcl
pop
push
lds
cmp
pop
sbbl
loope
loopne
clc
xchg
into
mov
cmp
inc
fsubr
movsb
and
dec
mov
aad
lahf
push
loop
mov
push
jge
negb
xor
pop
mov
xor
jl
js
sbb
add
cld
or
pop
int3
mov
mov
shlb
lret
psrlw
mov
fnsave
mov
add
mov
mov
cmc
mov
je
jb
mov
std
mov
mov
push
jns
sahf
movsl
js
dec
movsb
stos
test
pop
js
xchg
sarl
movsb
scas
fwait
or
rclb
popa
cmp
loop
cltd
sar
inc
inc
mov
in
mov
ret
sti
dec
dec
mov
aad
mov
in
xor
mov
pop
inc
hlt
repnz
enter
rcll
push
xchg
bound
fdivrl
push
push
js
push
out
xchg
pop
push
mov
or
pop
mov
lods
jl
ja
mov
jbe
cmp
xchg
xchg
sub
test
and
bound
fmulp
mov
jmp
sbb
sbb
mov
jge,pt
jle
notb
sub
repz
inc
adc
loop
rol
jno
and
mov
add
test
cs
xor
fwait
xor
xchg
or
inc
mov
je
mov
ret
push
cmp
xor
mov
into
jbe
enter
jle
or
lcall
mov
push
add
std
cmc
xchg
nop
mov
imul
cmp
push
outsb
or
clc
repz
mov
das
test
loope
mov
push
icebp
jecxz
mov
inc
xchg
call
xchg
into
outsb
cmp
cmp
inc
mov
dec
dec
pop
stc
gs
lods
sti
imul
adc
mov
xchg
into
dec
aaa
popl
or
insb
ret
mov
js
outsl
out
sbb
hlt
fstpl
dec
movsb
jmp
pop
faddl
cwtl
adc
jg
fmuls
fwait
cmc
es
mov
jnp
mov
dec
pusha
movsl
outsb
dec
mov
xchg
add
in
enter
test
push
shrb
xor
cmp
imul
mov
fistpl
into
stos
imul
mov
arpl
jbe
dec
pop
enter
adc
enter
stos
adc
mov
lds
nop
cmpb
push
movsl
push
mov
fsub
jns
lock
push
xchg
xchg
lret
or
adc
cmpsb
mov
or
push
in
mov
pop
inc
out
inc
decb
outsb
cmp
mov
sbb
or
icebp
xor
mov
mov
rclb
in
push
test
lcall
lds
pusha
sbb
cmp
out
or
add
dec
inc
lods
cs
jge
and
jl
add
mov
mov
shrl
adc
or
cmc
jne
enter
mov
lret
enter
lea
lods
js
jbe
sbb
fsubrl
sub
pop
adc
mov
les
sbb
mov
xor
daa
push
mov
out
or
dec
xchg
mov
mov
adc
pop
in
aaa
push
sbb
out
popf
sbb
scas
sub
in
mov
mov
and
repz
mov
rclb
mov
enter
in
cli
mov
or
xchg
mov
add
pop
bound
pop
stos
je
ljmp
mov
push
inc
xor
loopne
movsl
jns
fidivs
jns
xlat
insl
push
pop
outsl
in
mov
rclb
mov
repnz
fmul
sub
inc
push
and
add
outsb
sbb
fbld
cmp
mov
mul
aad
and
cmp
ds
mov
mov
test
push
fadds
push
add
push
into
in
idivl
aaa
inc
push
hlt
or
mov
add
cmpsb
dec
addr16
loopne
jbe
bound
xor
dec
cmp
je
clc
mov
scas
fbstp
adc
out
out
xchg
cmp
mov
mov
les
xor
mov
ret
adc
insl
nopl
mov
imul
imul
and
insl
sub
jnp
into
pusha
popf
test
aam
xor
sti
andl
sahf
or
adc
ret
ja
jno
xchg
cmpsb
cmpsb
adc
imul
dec
insl
fiaddl
adc
add
in
movsb
sub
fmull
iret
cltd
scas
test
jle
stos
mov
sbb
dec
push
adc
dec
jnp
xchg
or
or
in
dec
adc
inc
lea
pop
into
adc
mov
and
mov
xor
cmp
dec
scas
idiv
popa
mov
jne
pop
inc
dec
sbbl
repz
sub
adc
jnp
lcall
adc
mov
fistpl
notrack
divl
cmp
cmpsl
push
cmpsl
scas
std
lret
dec
sub
adc
cmp
rcrl
push
scas
shlb
push
pushf
mov
dec
sbb
cs
fadds
jbe
push
push
dec
rolb
xor
insl
mov
mov
add
push
push
sarl
push
leave
adc
imul
in
test
jbe
scas
bound
or
push
mov
pop
xor
jl
sbb
adc
addl
cmp
add
ja
mov
cmp
pop
cmc
xchg
push
jge
imul
out
nop
imul
js
and
fildll
mov
jbe
aas
sar
or
mov
jns
cld
rclb
mov
jno
sarb
fisttpll
dec
dec
sbb
jl
cmp
mov
lret
xor
or
and
fldt
dec
mov
push
xchg
insb
jae
cmp
test
fimull
xchg
or
mov
mov
out
lds
mov
repz
scas
push
test
clc
mov
nop
test
jg
fldenv
xor
into
ja
pusha
jno
std
lahf
mov
jno
xor
ficomps
test
mov
in
sahf
shrb
inc
rcrb
hlt
push
push
clc
cld
xchg
loope
or
das
test
rclb
pop
pop
pop
es
mov
in
adc
cld
mov
je
test
cmp
out
scas
cmp
out
sub
ljmp
into
xchg
xor
jmp
pusha
lods
sub
fs
inc
pop
scas
cltd
ljmp
cmpsl
pop
lret
mov
fcoml
pop
jg
cmp
and
push
push
in
insb
mov
movsb
cmp
fisttpll
popf
cmp
sub
mov
mov
or
dec
hlt
cmp
fdiv
xchg
fldt
lods
ficoms
or
jge
mov
pop
jae
test
add
xor
jno
cmp
fistpll
mov
call
lods
mov
and
out
pop
xchg
ljmp
andb
cld
in
fnsave
addr16
addl
pop
out
mov
jge
sbbl
push
aad
sub
test
aaa
cmp
ljmp
popf
sub
sbb
jno
imul
test
arpl
js
mov
loope
movsl
int3
jl
adc
jae
ljmp
add
test
test
lret
ds
fdivr
ret
sahf
imul
iret
ficoml
mov
int3
add
test
ss
insl
fbld
sub
lock
jb
into
clc
hlt
movsb
mov
mov
xor
xorb
sub
sub
adc
xchg
insb
idivl
shrb
out
ja
xchg
mov
mov
cli
mov
cmpsl
dec
test
xchg
xor
mov
mov
xchg
and
notb
loope
sub
insb
movq
mov
cmp
aad
dec
in
add
mov
cmp
loopne
movsl
rcrb
repz
in
fwait
in
sbb
int
xor
stos
imul
mov
clc
sub
sbb
sub
pop
and
enter
popf
xchg
rcrb
mull
inc
sbb
mov
popa
mov
dec
jecxz
and
add
addl
fidivrs
xor
lock
int3
aad
jb
clc
lcall
push
rclb
mov
icebp
pop
dec
or
cmp
mov
jae,pn
jbe
out
xchg
fwait
push
std
lcall
jmp
cmpl
xchg
fimuls
cmc
insl
iret
xchg
movsb
arpl
or
shlb
xchg
push
push
xlat
mov
ds
rorb
jns
out
imul
enter
mov
out
outsl
xchg
cmp
or
sub
xchg
js
das
cli
aad
mov
fs
je
pop
dec
mov
in
cmc
dec
stos
outsb
int3
scas
sbb
sbb
and
or
inc
mov
je
les
out
ds
inc
test
pop
fldt
int3
data16
repnz
lea
add
cmp
fcomps
stos
pop
mov
mov
hlt
xchg
mov
outsl
push
ret
into
out
rcr
lock
jbe
push
out
out
xor
lods
or
mov
lahf
jl
pop
ss
test
scas
push
push
js
xchg
inc
xchg
fidivs
pop
nop
stc
xor
push
es
gs
xchg
inc
push
xchg
adc
or
xorl
fdivl
fwait
inc
and
test
add
mov
fwait
in
sub
jbe
push
shlb
repnz
sarl
aam
add
addr16
stos
test
repz
mov
dec
mov
mov
out
push
scas
dec
lret
js
hlt
xlat
cmpsl
dec
jne
pop
adc
aaa
dec
jp
adcb
sub
in
pusha
dec
push
pushf
call
and
add
frstor
in
and
hlt
loope
int3
fptan
stos
fwait
test
or
gs
sbb
push
ja
loop
dec
fisttpl
ljmp
in
pop
jmp
test
fmuls
lds
and
mov
xchg
dec
test
sub
and
sbb
sbb
dec
icebp
adc
sbb
loop
dec
lcall
loop
sub
pop
mov
test
and
cmp
push
xor
jnp
push
mov
mov
or
xchg
sbb
xchg
push
popf
ror
popa
add
jns
jns
std
xchg
js
ja
or
cld
jl
jmp
jmp
out
pop
xor
xlat
je
mov
xchg
std
and
rol
movsl
pop
xchg
xchg
or
cmp
xchg
jns
mov
mov
dec
and
pop
lods
cs
or
cmp
out
ret
mov
lods
les
shld
repz
out
and
ret
ret
or
mov
addl
fwait
mov
xorl
xor
xchg
bound
pop
sbb
dec
les
cmpsb
jmp
mov
xlat
popa
lea
push
mov
stos
cmp
sub
or
xchg
and
xor
xchg
orb
leave
movsb
lret
xchg
inc
dec
scas
inc
out
arpl
xchg
aas
cmp
inc
popa
nop
out
cmp
xor
test
pop
pmuludq
mov
add
cmc
mov
into
mov
jecxz
mov
cmpsb
mov
into
repz
into
add
faddl
inc
jno
or
jle
lods
scas
lret
xchg
popa
je
pop
jle
shlb
cli
pop
lret
inc
mov
ror
movsb
cmp
movsl
shll
lcall
outsb
mov
and
cltd
jmp
clc
out
jg
inc
in
test
je
mov
push
cmpsb
test
pop
ss
out
cmp
mov
idivl
pusha
pop
dec
inc
inc
inc
mov
popf
pusha
ja
jne
cpuid
push
push
iret
inc
mov
adc
repnz
js
and
roll
fcoml
in
call
mov
rcl
xchg
js
jp
insb
fs
xchg
or
mov
and
jnp
addr16
shrb
and
leave
int3
adc
jge
jp
inc
sbb
loopne
xchg
sub
dec
mov
inc
or
inc
or
fstl
add
lea
std
mov
rorb
or
sbb
cmp
out
jecxz
and
pop
clc
enter
adc
mov
xchg
test
repnz
jp
adc
mov
dec
xor
fnstcw
jae
mov
dec
test
xchg
fwait
xor
jo
inc
push
gs
xchg
lret
or
cltd
dec
outsl
idivb
repnz
mov
push
mov
fmuls
push
lret
add
mov
xor
ljmp
pop
adc
add
std
cmp
mov
mov
out
adc
icebp
scas
cs
xor
loopne
icebp
outsb
xor
sti
mov
jl
out
cs
out
je
test
push
dec
mov
les
mov
pop
stc
test
xchg
sbb
sub
clc
adc
insb
sarb
scas
mov
push
jge
adc
aas
clc
or
sub
mov
pop
xchg
inc
dec
pop
or
fiaddl
adc
clc
setno
shl
cmp
cmpsb
inc
push
cmp
mov
stos
cmp
or
push
inc
hlt
test
out
outsb
fldl
outsl
push
sarl
test
mov
aaa
xchg
mov
mov
sbb
inc
add
cmpsb
xor
orl
faddp
fdivrl
sbb
mov
or
fisubrl
jg
jmp
aas
icebp
jnp
ljmp
mov
mov
pop
sub
insb
inc
mov
or
fnstenv
movsl
dec
movsl
ret
andb
aaa
sti
std
cmp
push
cmp
jno
add
jl
mov
mov
jmp
pop
out
call
scas
divl
loopne
cmp
ret
jbe
cwtl
add
mov
xchg
ja
cmp
mov
xor
rclb
or
cmp
xchg
mov
push
ss
xchg
cmp
dec
shrl
fdivs
mov
xchg
jno
xchg
mov
push
shll
es
cwtl
shlb
mov
ss
lret
imul
lock
cmpsb
sbb
xchg
jns
cli
sbbl
push
stos
inc
or
mov
incb
mov
loopne
inc
push
sub
cmp
push
or
or
int3
test
mov
mov
cmpsl
sub
mov
mov
movsb
push
pop
sub
andl
xchg
cmpsb
cmp
neg
outsb
mov
sub
cmpl
mov
pcmpeqd
cltd
js
sub
lahf
int
mov
xlat
ret
or
ljmp
cmc
inc
jp
fwait
iret
data16
leave
jae
les
adc
imul
stos
push
mov
dec
nop
adc
imul
jno
cwtl
xor
or
pop
js
pusha
lahf
xchg
xchg
roll
cmp
xor
addr16
movsb
jmp
mov
xchg
inc
mov
les
inc
pop
cmp
and
stos
icebp
add
mov
adc
dec
cmp
test
mov
pcmpgtw
and
clc
dec
in
or
mov
pushf
sbb
push
aaa
jnp
stc
stos
lcall
iret
mulb
sar
jae
inc
aas
cmp
mov
loopne
pusha
into
sbb
fcomi
cmp
loop
lods
add
data16
scas
in
jbe
in
adc
mov
ja
sub
fcomps
rcr
sahf
xchg
nop
mov
cmp
js
cmp
std
pop
mov
sbb
in
js
add
cmpsl
sub
push
nop
push
nop
mov
adc
cmpsb
mov
inc
cmp
testb
aaa
popf
or
push
or
sub
loope
push
lahf
or
jns
aas
mov
mov
cmp
dec
aas
push
and
scas
or
inc
fdivl
mov
sub
in
dec
int
mov
cmc
jno
push
sub
cmp
dec
add
pushf
test
aas
rorl
add
fcoms
lods
mov
pop
sahf
adc
sub
int3
lock
outsl
adc
movsb
jb
sbb
and
aaa
icebp
or
pushf
adc
cmp
dec
adcl
popf
gs
jns
sub
lahf
cwtl
loopne
inc
cmp
adc
inc
stc
mov
inc
cmp
sbb
cmp
adc
rol
fisubl
xor
inc
cld
lahf
popf
ret
jnp
mov
inc
add
mov
mov
movl
mov
fprem1
push
sub
fimuls
cld
jae
xchg
mov
out
outsl
ja
test
gs
leave
or
loopne
insb
cmp
pop
scas
inc
cli
int
cmp
push
arpl
mov
das
cmp
test
scas
pop
add
and
dec
adc
leave
push
cld
pop
movsb
mov
insb
add
sub
cmp
inc
clc
shll
mov
and
inc
daa
sub
addr16
aad
xchg
fcomps
lea
mov
mov
mov
lds
call
subb
rcrb
filds
push
les
pop
ret
pusha
fs
pop
push
pop
jne
pop
rorl
adc
jnp,pt
scas
movsl
push
cld
ficoml
cmp
sbb
std
enter
dec
dec
addr16
lock
mov
sti
cmp
imul
xor
cld
ss
mov
fiadds
push
das
rcrl
jbe
push
imul
in
mov
rcrb
ret
adc
jmp
cmpsl
fimuls
movzwl
mov
add
cmpsl
or
stos
es
cmpb
sti
sbb
sub
or
and
ds
mov
fisubrs
fbld
std
shrl
mov
jle
lret
push
ret
clc
cltd
sti
fcompl
lods
cmp
es
sbb
inc
out
sti
add
jle
mov
mov
sub
lea
arpl
pop
adc
les
xchg
pop
mov
push
mov
jecxz
dec
cld
jo
ljmp
mov
xor
flds
xor
loopne
mov
sahf
scas
mov
aas
and
and
repz
sub
aas
mov
push
cmpsl
push
loope
cld
sub
xchg
fimull
xor
ret
mov
scas
mov
jns
ret
and
inc
pop
sbb
loopne
cmp
sbb
inc
jns
fiaddl
fcmovnb
clc
jo
bound
scas
sub
jo
loope
and
and
inc
ror
push
push
fidivrl
xchg
pusha
pusha
xor
or
xchg
jl
mov
and
dec
mov
jb
xchg
pop
add
into
lods
imul
es
or
fisubl
adc
fmuls
adc
testl
jge
fnstcw
arpl
pusha
inc
cmpsb
jbe
movsl
out
jo
mov
jns
mov
mov
scas
sahf
test
mov
popf
clc
xchg
xlat
jns
add
cmp
pop
imul
dec
jg
mov
ja
or
mov
data16
mov
xor
push
test
dec
pop
mov
jge
leave
adc
js
fildll
xchg
popa
inc
ljmp
aaa
aas
lea
cmpb
shrb
mov
nop
sbb
div
jge
xchg
loopne
icebp
sub
clc
xchg
xor
nop
pop
pop
mov
push
sbb
fsub
lock
repz
pop
pushf
data16
loop
adc
imul
test
dec
sbb
shl
push
in
fwait
mov
jmp
adc
xchg
sub
lret
lods
fistpl
inc
scas
int
pop
add
out
add
xor
scas
shlb
jns
or
inc
addr16
lods
loope
and
inc
or
in
rolb
pop
sbb
mov
cmp
sbb
lods
sub
jnp
sub
xchg
rol
imul
mov
call
pop
inc
sbb
mov
mov
mov
jbe
pop
cltd
bound
orb
add
adc
or
addl
push
leave
cltd
ret
cmp
adc
sub
js
jbe
ja
aam
xchg
jb
or
mov
jae
ds
sub
bound
pusha
leave
ljmp
mov
xor
sar
test
xorl
scas
repnz
loopne
jge
cmpsl
dec
mov
push
bound
invd
inc
xchg
mov
outsb
lcall
dec
adc
fucom
loope
dec
mov
and
push
mov
aam
mov
lret
push
bnd
ret
stc
pop
rcrb
sub
mov
mov
loop
push
js
sar
in
sbb
insl
out
xor
mov
xor
rorb
inc
push
imul
out
sahf
mov
cmp
lock
lret
push
xor
and
xlat
pop
fdivrl
inc
sub
icebp
push
xchg
mov
scas
dec
pop
sbbb
xlat
adc
lret
into
cmp
mov
fdiv
in
mov
dec
stc
dec
dec
dec
dec
scas
scas
enter
inc
inc
jl
mov
adc
push
gs
push
mov
xchg
aam
mov
jle
aas
pop
test
pop
mov
jl
jmp
scas
into
ss
jle
imul
jne
adc
ds
jl
and
stos
fiadds
into
sbb
lahf
push
add
xchg
inc
and
jge
xchg
cmp
sub
repnz
jno
adc
mov
or
inc
insl
int
mov
xlat
mov
pop
loop
fcoms
std
pop
inc
add
xchg
out
jg
fidivrs
jns
jno
rcll
mov
sbb
es
movsb
cmp
mov
xchg
jne
mov
sarb
pop
push
sbb
cltd
push
jge
rorb
cmp
xchg
cmpb
and
or
pop
xchg
cwtl
dec
insl
hlt
nop
push
mov
cmpsb
inc
call
popa
add
adc
and
movsl
sub
mov
fildll
or
fs
fdivrs
idivb
xchg
je
addr16
xchg
adc
jb
xor
adc
or
adcb
mov
mov
clc
scas
adc
xor
and
adc
sahf
dec
daa
xor
pop
dec
sbb
inc
ds
mov
or
mov
mov
iret
cmp
movsl
pop
xchg
jae
xchg
mov
adc
notb
cs
testb
mov
ds
push
mov
or
cmp
xchg
imul
push
xlat
mov
popf
add
sub
in
cwtl
mov
mov
pushf
aas
xchg
pushf
push
push
or
xchg
mov
add
js
les
sbb
add
mov
xor
clc
insl
sub
sbb
cwtl
out
fldt
cmp
pop
jns
cmpsl
aam
outsb
sbb
pop
pop
fdivl
fwait
mov
sbb
call
pop
jb
imull
std
lahf
jp
mov
sbb
cmp
add
lods
or
adc
mov
mov
lea
sub
fwait
rcrb
decb
addr16
sub
das
mov
push
fldcw
jbe
bound
fadds
cmp
pop
jne
movsl
jns
setb
fsubrp
add
mov
add
in
outsl
fidivs
or
sbb
pop
rcr
pop
mov
movsl
xchg
out
dec
ret
dec
movsb
movb
inc
push
addb
cmc
popf
lods
ds
rcr
sbb
icebp
cmpl
mov
js
out
cld
ss
mov
or
cmp
pop
or
mov
sub
hlt
loop
jbe
test
jbe
sbb
jns
jp
sub
add
insl
cwtl
repnz
aas
arpl
daa
fs
pop
mov
shlb
add
fs
cmp
dec
rorl
xchg
mov
mov
repz
iret
cmp
cld
xchg
sbb
mov
sbb
mov
mov
imulb
nop
xlat
dec
pushf
fisubrs
dec
jp
mov
mov
push
sub
rol
xor
cli
xlat
xchg
mov
cmpsl
pop
mov
daa
pop
pop
xor
add
nop
jle
jge
mov
push
mov
aad
scas
sbb
mov
in
scas
iret
lea
arpl
push
shlb
xchg
loop
dec
adc
mov
or
ss
cmp
pop
mov
icebp
dec
and
push
adcb
push
fcoms
cli
xchg
ds
aas
aaa
mov
xor
neg
test
test
mov
pop
mov
jp
aad
test
mov
stos
pop
cmp
jge
and
iret
mov
ret
mov
adc
pop
jle
pop
cmpsb
call
fstpl
jnp
cld
test
and
js
jne
insb
aam
mov
cs
adc
out
push
sub
push
icebp
faddl
pop
mov
jae,pt
and
mov
mov
mov
mov
das
cmp
insb
pop
cmpsb
in
fsubrl
cld
push
jae
mov
jg
mov
cmp
int3
lods
jae
fwait
adc
inc
mov
jbe
cmpb
cli
pop
or
cmc
mulb
mov
out
add
outsb
sbb
adc
xlat
pop
adc
fidivrl
roll
push
mov
rcll
and
cmp
mov
int
enter
pushf
hlt
addr16
or
ss
outsb
add
fisttps
cwtl
or
pop
arpl
jp
jp
aad
mov
cmp
add
pop
cmp
add
lret
or
lcall
lock
stc
dec
mov
shlb
fistps
aaa
add
mov
repz
xchg
sub
int3
cwtl
sti
test
jl
xor
lea
or
mov
movsl
call
mov
loope
mov
insb
and
pop
jg
fmuls
sbb
sahf
aam
cmp
dec
fst
in
sbb
mov
fisubl
inc
imul
mov
mov
xchg
loope
repnz
pop
fdivrs
pop
outsb
jl
mov
dec
push
and
sbb
int3
fsubr
negb
push
fbstp
int3
mov
sbb
jb
dec
jl
mov
xor
push
push
movb
push
push
and
mov
push
jmp
into
add
lret
adc
aaa
inc
ds
xchg
insb
or
sbb
aam
mov
imul
mov
stos
and
and
fwait
enter
iret
lret
sti
fs
jns
pop
inc
stos
ljmp
xor
add
mov
mov
int
fsubr
mov
test
lds
ja
adc
push
push
jl
mov
shll
jo
and
sti
insl
xor
and
mov
les
jb
movsb
or
dec
insl
adc
cmp
dec
xchg
sub
repz
repz
imul
sbb
push
test
pop
mov
hlt
stos
outsl
cwtl
xor
adc
push
stos
ficoms
sbb
or
or
mov
sbb
loope
pushf
fmuls
and
pop
or
imul
pushf
sbbb
rorb
out
cmp
pop
lods
mov
cs
jo
mov
orb
xchg
push
adc
push
mov
loopne
dec
movsl
push
and
mov
mov
scas
aas
jb
inc
jns
test
test
scas
jl
loop
jo
push
push
lods
and
aad
cltd
stc
loop
cmpsl
or
sub
pop
mov
sbb
jnp
mov
in
fwait
inc
push
icebp
cmpsl
int3
in
dec
inc
push
xor
add
addb
xchg
lahf
lret
sti
jle
popa
jnp
jno
fiadds
mov
test
xchg
shrl
mov
addr16
in
add
or
mov
cwtl
add
xlat
enter
xchg
dec
fbstp
shlb
xchg
mov
push
sub
cld
or
pop
mov
loope
push
ror
jae
mov
xchg
cmp
xor
mov
ja
scas
arpl
orb
stc
enter
push
add
sbb
push
icebp
cmp
pop
jne
test
rcl
lea
mov
cmp
fnstsw
and
stc
movsb
push
jle
shll
pop
pop
lahf
in
and
ja
add
test
adc
leave
pop
in
xor
dec
cld
or
mov
sarl
outsb
jge
xchg
jp
dec
das
xlat
push
fisttps
iret
add
cmp
xchg
sub
cmp
inc
lcall
push
cmc
xor
out
stos
jecxz
mov
in
xlat
daa
push
scas
and
dec
nop
push
cltd
mov
loope
push
movsb
mov
lahf
aam
in
sub
mov
and
mov
cmpsb
fwait
pop
scas
xor
nop
into
rolb
jge
jbe
sub
xchg
mov
enter
xchg
pop
xchg
mov
imul
dec
orl
mov
data16
in
mov
and
jle
out
push
imul
ljmpw
push
add
cmp
xor
dec
fdivrl
xor
imul
loopne
pop
dec
adcl
aam
pushf
pop
call
daa
adc
mov
xor
xor
jp
lahf
and
insl
aad
xor
xchg
push
xor
xchg
xchg
dec
mov
icebp
jns
fcompl
xchg
sbb
pop
xchg
mov
mov
nop
push
lds
jb
fs
clc
jbe
decl
std
outsl
shl
repz
xchg
sar
jmp
icebp
das
mov
subb
cmc
or
stc
jae
xlat
into
jno
cmpsb
adcl
lods
imul
mov
xor
test
ds
loop
or
sbb
pushf
mov
mov
imul
movzbl
or
jle
mov
insl
je
mov
jmp
cmpsl
dec
stos
ljmp
jmp
jp
pushf
xchg
test
into
aad
int3
cmp
stos
inc
adc
pop
ficomps
test
xor
test
xor
stos
mov
dec
inc
mov
xor
jecxz
adc
push
aas
xor
in
jno
lods
hlt
mov
rol
mov
dec
jge
xchg
mov
outsb
sarl
adc
fcmovnu
fwait
adc
cwtl
pop
mov
xchg
aad
adc
dec
mov
enter
add
cmp
int
dec
xchg
adc
insl
mov
lret
sbbb
mov
ret
outsl
pop
negl
add
pop
xor
test
jns
sbb
xchg
cmp
pop
jge
negl
out
mov
adc
lods
jo
or
lcall
push
push
push
xchg
sbb
ja
pop
jo
scas
and
jge
or
loop
inc
inc
adc
out
cs
xor
jns
mov
push
push
call
cmp
scas
xlat
lods
jae
and
xchg
lock
mov
data16
adc
insl
pop
mov
mov
sub
add
cmpsb
mov
es
jecxz
jecxz
int3
movsb
inc
sbb
mov
jle
shll
insl
mov
mov
int
lods
adc
sahf
ficoml
sub
pop
pop
adc
les
rcl
push
mov
lods
mov
mul
push
imul
aaa
mov
subl
dec
call
add
imul
push
ds
adc
xchg
roll
out
cmp
sub
leave
cmc
cmp
je
or
clc
adc
pop
sub
in
mov
hlt
lahf
ljmp
xchg
mov
mov
int3
mov
lods
push
loop
cmp
sbb
imul
repnz
xor
repnz
mov
mov
jmp
adc
or
dec
inc
addb
mov
sub
iret
dec
adc
lock
pop
xchg
adc
dec
sbb
push
pop
sbb
clc
push
mov
sahf
jbe
or
push
fnstenv
cmpsl
xchg
outsb
inc
pop
cltd
adc
lahf
in
sbb
pop
mov
or
xor
inc
addr16
inc
movsl
dec
xchg
sbb
cli
mov
insl
mov
xor
loopne
mov
nop
add
mov
sub
sbb
mov
cmp
jnp
jg
xor
and
jno
or
roll
int3
adc
jge
lahf
ror
sub
jnp
lcall
sub
ret
js
lret
xchg
imul
cs
lret
pop
insl
lock
in
ficoms
jle
out
sub
adcb
arpl
imul
inc
jno
sub
adc
pop
repz
notl
jno
dec
in
cmp
push
dec
mov
cmp
jo
add
xlat
inc
stos
jecxz
shlb
rorl
xchg
popa
and
push
jl
outsl
and
andb
cmc
insb
movsl
mov
jmp
scas
loopne
xchg
popf
mov
sarl
pop
nop
out
cmp
dec
cmp
pop
push
pop
jbe
mov
inc
in
sbb
out
mov
jge
lret
mov
mov
aad
aaa
fwait
add
and
or
mov
mov
jle
jp
dec
adc
xor
inc
sub
cmp
mov
xor
push
das
int3
mov
adc
pushf
lds
mov
jo
add
lea
fstpl
imul
xor
mov
stos
dec
sbb
xorb
pop
sahf
scas
test
inc
or
movsl
int3
je
mov
cmp
clc
stc
mov
xor
outsl
sbb
inc
jg
mov
lret
lahf
and
xor
sbb
jp
xchg
jne
fnstsw
push
mov
jo
pop
sbb
xlat
dec
out
cli
sub
mov
js
pop
sti
jnp
add
data16
test
imul
xchg
jo
stos
jae
sbb
jno
jle
mov
jecxz
push
inc
pop
jns
and
adc
sub
jnp
sbb
pop
lret
jg
mov
jne
cltd
inc
sub
outsb
das
pop
rol
mov
xor
scas
in
aaa
bnd
popf
and
call
loop
sbb
cld
cld
sbb
mov
outsl
or
subb
adc
adc
shrl
add
xlat
inc
fldenv
fidivl
imul
mov
arpl
pop
mov
fistl
jbe
jge
jg
ret
mov
mov
scas
cltd
xchg
bound
cmp
daa
dec
iret
mov
mov
cld
imul
xchg
xor
adc
or
movb
or
xlat
add
pop
cmp
in
hlt
dec
and
ja
xlat
addr16
jb
xor
shlb
mov
lret
push
push
clc
jno
or
or
jp
and
nop
clc
push
in
in
jl
rorl
push
in
xor
adc
jb
inc
scas
cs
sub
mov
xchg
ds
dec
xchg
imul
cmpsb
scas
std
pop
fmul
aaa
mov
fdivrl
shll
in
popf
xchg
sub
mov
jnp
aam
ja
mov
mov
outsb
fdivr
jg
mov
inc
or
lret
mov
sub
les
add
int
pop
bnd
aas
cltd
push
ret
je
cltd
pop
push
int3
subb
mov
ficomps
mov
sub
inc
jmp
pop
aas
xor
xchg
das
add
ss
add
mov
int
lea
fcomps
inc
lahf
fimull
mov
cmp
int3
xchg
sub
xchg
movsl
shlb
adc
xchg
adc
pop
fnstcw
jp
xor
iret
bound
jge
inc
mov
mov
ljmp
scas
push
mov
rclb
cmpsl
jns
movsb
xor
scas
movsb
jg
pmuludq
mov
out
and
mov
jle
nop
or
movsl
or
ljmp
adc
inc
mov
add
xor
sarl
popa
inc
data16
loop
dec
jne
imul
pop
pop
aam
jo
fimull
jl
xchg
push
xchg
or
and
and
add
xchg
push
popf
inc
decb
outsl
or
pushf
pop
test
mov
xchg
lods
je
sarb
rdpmc
xlat
popa
dec
mov
jo
cmpsl
into
into
cwtl
cmp
outsl
icebp
mov
les
int3
push
xchg
xchg
sub
jl
pop
mov
mov
add
cmp
jge
and
pop
sti
mov
sahf
popf
mov
cmp
sub
into
loop
out
or
pop
out
fsubs
xchg
jns
or
jmp
ss
aad
xlat
cld
outsb
mov
cwtl
jecxz
fdivs
cmpsb
inc
mov
jne
mov
dec
cwtl
pop
xchg
xor
sahf
mov
repnz
adcl
dec
shrl
jns
in
mov
dec
mov
sbb
cmp
lcall
jns
xchg
xor
or
jo
jg
mov
xchg
fsubr
jne
iret
pushf
hlt
push
xchg
xchg
dec
imul
pop
in
pop
mov
xor
mov
mov
je
mov
fistpl
in
dec
mov
pushf
pusha
loopne
add
mov
sub
push
out
sbb
add
fwait
gs
cld
mov
cld
sub
sbb
aaa
or
lds
loopne
stos
and
push
cmpsl
lods
lock
push
cmpsl
enter
popf
mov
ds
lods
rorb
nop
ja
adc
test
push
scas
add
jl
push
repz
or
push
lahf
mov
pushf
rorb
jp
push
xchg
lcall
fcomip
loop
cmpsl
and
gs
call
push
loopne
ss
cmp
jmp
add
frstor
std
or
xor
xchg
pop
shrb
jno
popf
fs
pop
insb
in
pop
push
mov
and
cltd
xchg
cli
lahf
cmp
or
mov
push
sbb
inc
js
js
mov
jecxz
inc
jp
in
xor
sub
dec
push
out
enter
std
arpl
sbb
cwtl
leave
xchg
addl
test
jns
outsb
xchg
jns
cmc
cltd
xchg
push
push
jnp
pop
dec
adc
xor
adc
loop
adc
cmpsb
dec
int3
jb
lret
adc
adc
or
mov
cmp
call
adc
je
hlt
jecxz
les
cli
popf
sahf
xchg
cmpsl
test
inc
xor
xchg
shll
xchg
sbb
push
jg
jns
addb
mov
test
insl
cmc
pusha
adc
jl
cmpsb
scas
sahf
inc
hlt
lods
or
ret
int
aad
aam
in
or
mov
mov
cmp
out
hlt
dec
sub
jb
es
hlt
jle
pop
imul
hlt
push
mov
jecxz
adc
repnz
jle
lret
int3
loope
mov
pop
mov
cmp
icebp
insb
dec
fiadds
jge
jg
jl
cld
and
mov
cmc
jecxz
jle
xchg
loope
data16
sub
cltd
lds
scas
sti
dec
mov
adc
lahf
bound
ds
inc
cmc
test
shll
icebp
ret
icebp
jae
psadbw
enter
jle
cmp
jmp
xchg
mov
mov
movsb
fisttpll
in
roll
negl
ds
mov
jnp
pop
ljmp
jp
push
pop
hlt
or
aam
jmp
cmc
lods
adc
mov
test
leave
movsb
stos
negb
ss
int3
add
push
cld
xchg
cld
out
cmp
cltd
sbb
cli
adc
fidivrs
lcall
out
shrl
cmc
xchg
push
mov
fnstsw
jnp
ret
mov
xor
jmp
clc
clc
jne
aam
test
mov
adc
lret
in
nop
cmp
or
push
inc
mov
clc
js
xchg
imul
sbb
or
ret
mov
add
lods
pop
mov
cmc
add
loop
xor
mov
movsb
jmp
xchg
fs
in
fisttpll
jnp
insl
xchg
mov
scas
cld
pop
icebp
jo
cmp
pop
mov
jecxz
or
addr16
stos
push
xchg
cmp
sub
cmp
ss
mov
fistps
sti
mov
loopne
push
mov
pop
cmp
pop
addb
stos
dec
dec
pusha
xor
mov
dec
sbbb
aas
jo
sbb
in
scas
lret
lds
pop
xchg
xchg
xor
cmp
rolb
cwtl
cmpsb
add
fcomps
jp
js
fnsave
je
inc
repnz
push
cli
fsubrs
lods
into
scas
mov
mov
mov
imul
cmp
push
pop
xchg
js
hlt
xchg
mov
xor
jbe
jl
insb
xor
jg
in
xchg
dec
into
dec
sbb
cmp
push
pop
mov
adc
jo
mov
cmc
sti
mov
sub
scas
shll
xchg
adc
repnz
jle
sub
loope
lods
aaa
inc
add
ss
cld
leave
push
push
insb
ret
aaa
jle
jo
jecxz
cld
not
cmpsb
jns
push
cwtl
sbb
push
and
mov
lret
fnclex
mov
movsb
sarb
sbb
rorl
inc
pop
push
inc
push
jle
fs
cmp
scas
or
push
bswap
add
mov
or
dec
mov
je
mov
sbb
hlt
pushf
movsl
and
or
sarb
sahf
push
cli
movsb
imul
into
mov
cltd
cli
sub
cmp
lods
fs
addl
sbb
and
xor
xchg
out
fucom
ret
scas
cmpsl
ljmp
enter
cmp
shrd
jmp
and
js
icebp
push
ja
jmp
js
stos
fsubs
sbb
add
jns
or
cwtl
or
push
xchg
pop
cmp
js
sahf
shlb
cmp
xorl
inc
cmp
pushf
test
xchg
lds
push
ja
insl
je
divl
in
push
push
sbb
dec
inc
lcall
cmp
cs
pushf
pop
push
push
jae
push
gs
lods
add
mov
cmp
daa
and
cwtl
lods
xchg
shrl
in
jge
js
fnsave
cld
ror
iret
add
lods
lods
in
mov
push
push
cmp
push
je
imul
or
repz
stos
jg
xor
adc
pop
xor
dec
mov
movsl
fimuls
rorl
test
popf
xchg
loop
scas
out
xchg
sub
inc
xchg
add
cmp
fstl
pop
adc
pop
mov
ds
push
test
mull
push
jl
mov
fcomps
test
push
cmpsl
iret
lahf
xchg
push
mov
lods
inc
int
mov
fcos
sub
xlat
out
pop
jle
lds
jo
dec
jp
add
sub
add
dec
add
add
out
in
jns
insl
dec
test
outsb
insl
inc
mov
sbb
int3
int
or
adc
jl
jl
loopne
cmp
pop
rol
xor
dec
sbbb
test
mov
xchg
mov
mov
movsb
insb
das
pop
ja
in
xchg
mov
cmp
into
cmp
movsl
cmp
jle
push
test
dec
sbb
insl
push
repnz
fldcw
jp
movsb
xchg
clc
mov
inc
daa
roll
insb
lods
cmp
push
push
or
jp
and
push
xchg
rcrb
popa
cld
lea
or
and
fadd
das
mov
push
mov
sbb
test
dec
mov
sti
lret
movsb
mov
push
test
or
cmp
fcompl
popa
lock
inc
and
jae
dec
push
lods
dec
mov
div
cmp
xchg
sbb
in
push
in
ja
test
push
test
mov
push
popf
cmpsb
mov
cmp
cmpsl
push
movsb
ja
in
movsb
insb
jns
push
shr
adcl
fcomps
fistpl
cltd
fiadds
pop
int3
movsb
dec
jnp
cld
cmp
mov
pop
test
xor
cmp
adc
hlt
int3
cwtl
xchg
jo
pop
dec
xor
cwtl
rsm
insl
sbb
bound
mov
xchg
mov
or
cmp
fbstp
mov
inc
scas
dec
pop
and
mov
cwtl
test
xchg
imul
sbb
adc
or
push
rclb
mov
cmp
xor
sub
out
repnz
es
xor
and
jne
or
cmpsl
popf
or
fcomps
popf
cli
pusha
cld
sbb
js
mov
popf
outsb
sub
fcomp
pop
sahf
push
pop
dec
fs
add
mov
int
xor
pop
adc
mov
rorl
lahf
dec
clc
inc
ss
cmp
pop
inc
pushf
cld
jge
cmp
cmpsl
fwait
rorb
add
out
jmp
cmp
icebp
dec
shrl
sbb
dec
pop
call
jl
cmpsl
mov
movsl
mov
fcmovne
add
or
jae
jl
sahf
imul
push
pop
push
div
bound
fisttpl
ja
movsl
pop
push
movsb
ret
or
mov
xor
popa
push
bound
or
int3
dec
loopne
clc
popf
ror
jo
xor
cmp
cmp
fdivl
push
and
or
lock
and
or
mov
lock
in
andb
xor
inc
or
push
push
pushf
ret
cmp
pop
int
sahf
cld
mov
xchg
jbe
sbb
fwait
mov
lods
push
mov
cmp
inc
dec
mov
sbb
mov
sarl
test
and
mov
xor
stos
shr
or
test
fcomi
xchg
out
sti
pop
pop
ss
xor
ficoms
jmp
mov
icebp
push
push
cwtl
rcrb
loope
jmp
imul
lods
pop
pop
test
mulb
pop
fs
fisttpl
dec
adc
or
outsb
jl
or
into
adc
add
ror
mulb
dec
in
mov
push
jbe
jle
cmp
jb
add
jne
js
fsubl
aam
jle
xchg
test
repz
fdivl
jle
xchg
iret
lret
pusha
icebp
ja
movsb
sbb
xor
cmp
int3
jl
lds
dec
dec
and
jns
xchg
or
inc
add
dec
cmp
lahf
jbe
add
pop
jg
dec
jg
cmp
in
repz
xchg
int
mov
xchg
popfw
aam
clc
or
rcll
mov
xchg
in
mov
sbb
outsl
sbb
sub
push
mov
lcall
push
cmp
mov
xor
xchg
sub
sbb
call
aad
lods
adc
pop
jmp
xchg
jbe
movl
jbe
ret
ret
mov
dec
in
sub
mov
jb
mov
call
movsb
mov
inc
pop
mov
pop
fcomps
loopne
out
aas
sbb
mov
repz
jno
call
mov
stos
add
insb
pop
cmp
or
mov
mov
inc
sbb
sub
cmp
fiaddl
pop
fwait
ss
or
nop
mov
in
clc
jnp
ds
mov
jbe
movsb
or
and
jnp
dec
cmp
jne
out
sahf
xor
jnp
fadd
adcl
sahf
dec
cmc
mov
insl
fsubl
add
xor
gs
lods
aas
outsb
fdivl
movsbl
in
or
cs
xchg
and
into
test
insl
push
push
adcb
aas
insb
adc
roll
jl
ret
loope
dec
arpl
fucompp
jo
nopl
test
fldcw
sub
js
mov
dec
add
gs
pop
add
outsb
mov
daa
fs
jle
icebp
pop
xchg
daa
mov
lods
or
sub
xor
xchg
pop
outsl
lds
pop
outsb
aad
gs
sbb
and
dec
sbb
jge
cmp
rcrb
lahf
insl
daa
repz
fiadds
mov
dec
sahf
mov
pop
xor
movsb
add
popa
push
xor
rorl
es
fucomip
cltd
mov
cmp
xor
jle
or
stos
xor
popa
dec
mov
aam
jmp
daa
out
lret
adc
mov
cmp
jnp
test
inc
push
and
pusha
adc
fcompl
jg
js
mov
daa
mov
xchg
std
xchg
jb
cmp
mov
insl
adc
jne
push
cmp
xchg
imul
loop
mov
cmp
sbb
adc
jae
jge
xchg
popf
mov
dec
lahf
out
scas
pop
pop
loop
clc
jbe
add
pop
test
jo
cmpsl
sti
jg
push
int
ret
xchg
xchg
or
mov
cmp
ficoms
push
aaa
pusha
xchg
ds
hlt
mov
dec
rcrb
inc
adc
dec
fs
scas
add
push
das
hlt
inc
out
fildl
dec
or
call
mov
xchg
lahf
ds
xor
and
xchg
inc
inc
dec
es
jno
inc
pop
aaa
push
jb
addr16
inc
out
add
pop
jbe
stc
or
dec
mov
xor
pushf
sbb
jl
fldcw
or
cmp
les
xor
mov
les
inc
push
mov
xchg
loope
enter
mov
mov
aam
cmp
lahf
sub
push
xchg
sub
xchg
add
mov
lods
inc
fcomps
xor
xchg
or
ja
outsl
and
ss
test
das
dec
mov
fstpt
mov
xor
fnstsw
push
or
mov
add
jle
push
mov
sbb
call
sbb
mul
mov
adc
push
ja
fimuls
sub
jp
stos
vmovhps
xchg
rcr
jg
mov
das
jo
enter
stc
fldt
xchg
div
xchg
push
scas
dec
inc
shll
fisubl
jnp
pop
sahf
push
xchg
movsb
shr
dec
fs
loop
inc
fcoms
mov
mov
and
jp
sbb
and
adc
pop
movl
sub
sbb
outsl
pop
lods
lds
mul
rclb
std
xchg
mov
xchg
inc
cmp
cli
pop
pop
pop
daa
movsb
mov
jns
jl
mov
xchg
mov
and
push
adc
mov
inc
and
inc
out
sbb
sahf
mov
pop
ret
add
mov
aas
mov
cmp
ja
repnz
jo
aaa
hlt
pop
outsl
lsl
xchg
stos
inc
adc
lock
sbb
nop
push
xchg
pushf
cmp
sbb
call
push
fdivrl
dec
inc
or
or
js
sbb
mov
inc
inc
lods
mov
inc
cli
fidivrl
ljmp
ss
stos
push
iret
mov
lods
fcmovnu
cltd
jo
or
imul
fildl
push
sahf
cltd
and
imul
mov
push
into
push
int
fidivrs
mov
add
mov
mov
dec
jl
les
outsl
push
sub
lret
jp
pop
mov
inc
cmp
or
es
inc
cmp
sbb
ficoml
xor
push
dec
dec
push
cmpb
fnsave
inc
fsts
enter
jnp
push
adc
popa
sbb
sti
jae
lahf
cmp
in
push
movsb
out
dec
aad
dec
loopne
cmp
or
pop
push
sub
incb
adc
push
les
add
ror
inc
cmpsb
pop
cmp
ret
cltd
sbb
notl
mov
es
mov
pop
pop
pop
int
adc
push
xor
cld
mov
push
cmpsl
ss
pushf
notl
fsubrl
pop
out
imul
scas
or
mov
jae
popf
adc
aaa
jns
cmp
mov
add
xchg
xchg
loope
insl
arpl
jb
pop
or
sbb
adc
jns
jns
fimuls
fdivrs
push
out
aam
sbb
cmp
pop
aas
addr16
add
test
xchg
loope
movl
mov
lea
push
mov
ret
pop
cmp
push
addr16
jo
add
mov
xor
subl
imul
ljmp
outsl
ud0
in
fadds
and
cmp
mov
or
and
ffreep
xor
xchg
jg
rcll
sub
fcoms
push
outsl
dec
scas
testb
or
dec
and
leave
xchg
leave
jg
mov
loop
lea
jmp
addb
push
xor
popl
lahf
add
test
lds
out
xchg
fldenv
jmp
inc
add
outsl
in
or
out
xchg
jl
into
mov
or
loop
sub
xchg
stc
xchg
pop
xchg
pop
jnp
sarb
and
dec
xchg
ret
or
cmpsb
inc
lock
shl
out
ljmp
mov
mov
or
cmpsl
frstor
jns
mov
les
dec
in
pusha
fisubrl
pop
mov
sti
lret
in
outsl
pop
out
adc
jle
xchg
mov
jno
push
inc
mov
cmp
cmpsb
dec
jo
jmp
cwtl
mov
sbb
dec
cmp
or
jg
mov
xor
cld
xchg
mov
cmp
enter
pop
stos
and
mov
sbb
xchg
aam
mov
fs
dec
leave
push
dec
iret
mov
ret
dec
mov
fcomp
mov
pop
lods
fucom
mov
ret
push
jns
sahf
add
fwait
out
inc
xchg
dec
push
test
jae
push
jecxz
mov
mov
icebp
sahf
or
pop
cmp
lcall
data16
movsl
lret
inc
lcall
rolb
adc
push
add
fsubrs
xor
pop
mov
sbb
cmp
push
jmp
cli
sub
inc
mov
adc
int3
sbb
stos
adc
jecxz
dec
out
test
jecxz
sub
dec
jg
lcall
xor
pusha
push
cld
jg
fmuls
lahf
fcoml
xchg
jb
jge
cmp
imul
pushf
mov
dec
test
les
aaa
int
test
mov
and
mov
sbb
cld
add
push
nop
fmul
jae
xor
push
dec
push
add
in
sub
sbb
call
mov
xchg
aas
sbb
jg
cwtl
adc
inc
xor
test
mov
sbb
jle
fstl
insb
cltd
call
dec
movsl
jbe
pop
jbe
push
xor
dec
push
nop
push
lock
in
cmpsb
cwtl
ja
cmpsb
out
aas
das
scas
lods
bound
pushf
std
mov
pop
sbb
call
jne
mov
inc
xor
cmp
sahf
cld
lret
addb
sbb
add
ds
add
clc
push
dec
test
mov
add
shlb
loop
push
add
popf
pushf
imul
sub
mov
dec
iret
test
pop
mov
lods
pop
dec
mov
dec
jle
mov
jbe
movsb
ds
or
outsb
and
cltd
fwait
sahf
jl
sahf
mov
ret
clc
lds
sahf
push
jbe
lahf
sbb
inc
pushf
cmp
adc
cmpb
test
in
xor
push
imul
mov
xchg
cmp
cmp
popf
call
pushf
jmp
jl
mov
stos
arpl
xor
lods
mov
mov
roll
int3
loopne
cmp
loope
adc
mov
lahf
divl
gs
pop
lods
mov
xchg
pop
xchg
sahf
cmp
pop
pop
dec
xchg
jmp
pop
dec
dec
int
subb
jle
inc
je
inc
dec
jae
sbb
pushf
outsb
pop
dec
add
and
jbe
pop
pop
mov
jne
or
mov
push
cmp
jge
fisubs
xchg
js
pop
outsl
scas
mov
imul
lods
cmp
xor
jecxz
and
jnp
xchg
xchg
push
push
add
push
sub
jle
xchg
movsb
pop
imul
out
sub
out
and
mov
pop
ss
cmp
mov
outsb
and
popf
dec
xchg
rcrl
push
andb
sub
es
notb
mov
les
sbb
stos
sub
ror
fs
xlat
xlat
fwait
inc
test
mov
sub
sub
sub
mov
aas
inc
shrb
popa
pop
ret
mov
lods
adc
cmp
fwait
scas
dec
lcall
aas
push
pop
add
xchg
xor
pop
sbbl
sub
xchg
lods
in
sahf
mov
test
jne
jge
int
aaa
xchg
dec
xchg
add
out
popf
sbb
pushf
iret
int3
push
ficoml
add
xchg
bound
push
ja
mov
testl
mov
mov
enter
pop
xchg
add
jmp
pop
and
push
ds
pop
ficoms
lods
jnp
cmc
pop
pop
inc
xchg
shrb
fisubs
dec
adc
cld
lods
xchg
pop
or
dec
ret
repnz
push
insb
adc
lock
ja
inc
in
movsb
add
push
xchg
jbe
imul
int3
insb
cmp
pusha
and
inc
sarb
mov
sbb
sti
or
cmp
rol
imul
mov
cmp
mov
jmp
pop
pop
mov
push
xchg
pop
inc
divb
pop
cmc
in
fstpl
in
in
pop
in
adc
lock
jo
adc
popf
or
mov
xchg
mov
inc
add
andl
mov
addb
xchg
call
shrb
or
add
mov
lea
aaa
inc
outsl
jl
xchg
mov
mov
mov
lds
dec
sbb
jnp
in
push
push
mov
ud1
popf
imul
jno
and
pop
repz
mov
jl
and
cld
scas
add
sbb
mov
mul
in
into
fsubr
jno
jmp
xchg
jae
pop
mov
jno
fs
lret
and
dec
mov
cwtl
adc
cmc
pop
xor
xlat
pushf
add
cltd
adc
cmp
sbb
lret
mov
in
cmp
dec
rcr
mov
mov
adc
jle
sub
pop
js
sahf
mov
js
push
mov
pushl
int3
mov
sti
jp
xor
stos
push
push
pop
push
dec
repz
jle
jbe
lahf
test
cld
inc
add
cmp
push
and
cmp
or
insl
std
dec
adc
or
clc
leave
in
pop
enter
cmp
je
pop
lcall
mov
pushf
aam
jmp
int3
mov
loop
lcall
push
mov
sub
aaa
ss
mov
xor
lea
std
mov
in
jmp
xor
push
testl
popa
imul
mov
mov
mov
jecxz
pop
daa
xchg
jns
out
aaa
sub
cmp
cld
shll
aam
adc
in
mov
fsubrl
jne
decb
mov
or
pop
and
jne
mov
xor
movsb
dec
out
xchg
movsb
push
sub
jmp
push
xor
fwait
and
cld
pop
dec
cld
xchg
sub
xchg
mov
mov
stc
xchg
lods
es
mov
enter
out
lret
popa
cli
nop
pop
adc
stc
add
imul
aad
lret
add
lret
mov
loope
ljmp
nop
or
sbb
cs
jecxz
scas
xor
mov
leave
in
xchg
add
push
xchg
xor
jns
imul
stos
scas
xchg
imul
xor
dec
lea
pop
rcrb
add
aad
cmpl
mov
push
cli
push
pop
cmc
pop
mull
adc
cmp
dec
test
gs
mov
jl
xchg
fldt
aam
mov
lock
stos
dec
rol
into
mov
clc
mov
dec
add
push
jecxz
mov
pop
inc
pusha
out
test
mov
and
fwait
push
mov
jp
int3
or
jno
ja
inc
sub
lahf
das
push
arpl
insl
gs
mov
mov
lds
movsl
and
dec
xor
out
dec
insb
sbb
mov
add
push
aad
pushf
xchg
mov
dec
adc
popf
xor
or
cmp
or
jae
xchg
push
aad
or
sarl
pop
push
jmp
and
xchg
imul
sbb
pop
testl
mov
dec
inc
mov
popf
scas
jne
lods
sbb
push
mov
mov
push
pop
fiaddl
js
and
les
or
pop
aaa
push
lret
and
stc
insb
dec
inc
test
jnp
jp
jecxz
loopne
and
jle
mov
or
int3
cld
cmc
adcb
sub
mov
push
mov
roll
add
sbb
subl
mov
lahf
es
cld
mov
sar
test
cmp
ljmp
push
push
push
js
shl
adcb
inc
xchg
xchg
call
sbb
leave
mov
xor
scas
push
mov
or
in
pop
mov
js
inc
jb
mov
jbe
insl
sbb
mov
imul
cmp
pushf
pop
xor
jmp
push
pop
adc
arpl
sti
int
xchg
add
out
ss
cmc
mov
and
out
cwtl
idivb
push
lods
imul
jl
lods
push
lret
outsb
dec
xor
or
lea
pop
loop
cwtl
dec
xlat
gs
dec
out
push
sbb
dec
cmp
pop
xor
cs
imul
xor
pop
popa
pop
aad
mov
push
aas
cwtl
mov
aad
and
xchg
xchg
rolb
push
jge
movsb
push
fists
jne
jo
out
int
pop
xchg
xor
lods
mov
adc
and
xor
call
mov
dec
adc
mov
mov
mov
imul
js
movsb
push
pop
ds
jb
jp
sub
adc
daa
pop
mov
sti
lods
in
xor
dec
lret
ret
test
popf
mov
stos
xor
and
clc
icebp
lret
je
cmp
test
xchg
mov
in
in
jmp
sahf
adc
pushf
or
xchg
stc
lcall
cwtl
jmp
nop
lods
fnstenv
test
mov
adc
mov
and
push
adc
popa
pop
dec
ret
addr16
inc
xor
mov
mov
sbb
int
mov
and
clc
clc
jno
stos
in
cwtl
lock
pop
jnp
cmp
sbb
bound
sbb
lods
loop
xor
pop
inc
lods
lods
shlb
lods
mov
jo
out
sbb
dec
jns
mov
inc
push
lea
movsl
sbb
fldl
test
pop
stos
retw
int3
jne
and
xor
pop
cmp
xchg
push
sub
movsl
data16
aas
arpl
add
push
or
leave
push
out
inc
adc
sbb
les
loopne
jge
cmp
pop
push
enter
sbb
movsb
test
lea
cmp
push
xlat
adc
rorl
xchg
xor
lods
dec
mov
jle
xor
jge
in
test
jno
cmp
loope
icebp
sub
movsb
mov
inc
push
fstpt
push
loopne
pushl
mov
cltd
mov
jle
dec
mov
cmp
les
xchg
inc
dec
mov
call
mov
jb
push
sbb
jmp
xchg
mov
idiv
xchg
pusha
jbe
dec
sahf
out
mov
clc
movsl
data16
ror
dec
mov
mov
dec
shlb
xchg
ficomps
inc
adc
leave
js
mov
int3
cs
and
imul
repz
hlt
das
pop
mov
mov
inc
xchg
push
out
and
mov
jno
inc
pop
mov
movsl
or
jb
inc
cld
add
or
push
jl
cld
call
sub
ret
in
sarl
mov
pushf
xor
sub
int3
icebp
xchg
cmp
sarl
cmp
rclb
or
jl
andl
jle
lods
add
ds
lea
andl
dec
iret
shll
lods
and
das
adc
clc
jb
jp
mov
or
or
mov
mov
es
sarl
sti
mov
mov
inc
addr16
pop
lcall
mov
out
pop
dec
cmpsl
mov
or
clc
cmpsb
movsb
jnp
dec
cmp
mov
fsubrs
imul
popf
movsb
shlb
jg
jbe
notb
inc
test
or
adc
imul
popf
lock
xchg
movb
aaa
push
fisubl
sub
and
and
inc
sub
gs
mov
jl
or
dec
cmc
mov
pop
push
xor
cmp
fimuls
add
outsl
mov
aam
pop
push
lods
push
jo
mov
cmp
xchg
push
dec
push
cwtl
push
inc
jle
out
rorb
cld
loope
aaa
sbb
movsb
add
inc
pop
stos
test
rcl
cmpsl
dec
repnz
lahf
jb
push
es
adc
inc
adc
add
daa
xchg
sbb
mov
repz
xchg
lods
or
cmpb
pandn
adcl
cld
popl
sub
test
or
daa
xchg
jnp
popf
add
sbb
xchg
into
pop
sbb
inc
sub
pop
mov
imul
push
jg
mov
out
outsb
or
jmp
adc
movb
leave
mov
or
push
insl
int3
out
sbb
cmp
movsb
lods
inc
roll
jle
ja
mov
paddb
mov
loopne
cltd
pop
mov
and
jle
sub
mov
imul
xchg
mov
scas
push
mov
mov
xchg
mov
pop
mov
or
push
lods
push
push
jbe
sub
or
inc
dec
mov
fstpl
cli
xor
cmc
xchg
jl
out
int3
mov
repnz
fidivl
outsl
jle
rclb
adc
hlt
ljmp
fcomp
arpl
pop
in
mov
jns
cmpsl
js
sbb
mov
dec
jmp
imul
mov
aas
js
ja
mov
sarb
clc
sarb
outsl
aam
dec
add
fwait
ja
or
dec
inc
cld
dec
xchg
mov
or
jge
add
les
fs
mov
int
fcomps
fwait
leave
mov
idiv
cmp
mov
int
xor
mov
sub
inc
jno
dec
dec
adc
mov
shrl
xchg
mov
pop
push
sub
cmp
lret
sbb
xchg
inc
daa
sub
imul
outsl
push
sub
stc
jg
ljmp
jbe
sti
cmp
cmc
jnp
jge
or
push
xchg
push
dec
dec
pop
dec
dec
push
jb
std
cmp
or
inc
jle
xor
add
pop
cwtl
aam
scas
in
dec
add
xchg
pop
mov
movsb
imul
and
sub
mov
call
cmpsl
xchg
rcrl
or
inc
push
jne
imulb
fwait
cld
jns
push
dec
je
inc
sbb
fdivl
stos
jno
popa
dec
js
mov
sbb
and
cs
push
and
imul
aas
mov
sbb
mov
mov
xchg
xchg
sub
std
aaa
xchg
fs
push
aam
and
nop
in
nop
inc
pushf
jg
push
int
lds
out
xchg
mov
jecxz
gs
aas
cmp
adc
inc
mov
add
xchg
je
mov
xchg
fxch
mov
addps
scas
push
js
movsl
inc
in
ss
fadd
mov
mov
lret
rorl
popa
or
lcall
pusha
dec
lcall
xor
jbe
or
dec
int3
dec
push
lock
sbb
hlt
aad
add
sub
test
pop
jl
fdivrl
mov
cmp
push
fcoml
subl
pop
fdivl
hlt
dec
mov
fwait
or
mov
push
jg
test
orl
notl
aaa
mov
cld
lahf
xlat
fsubl
clc
or
cmpsb
push
popa
fsubs
addl
xchg
pop
popa
mov
cmp
cmp
xchg
jle
sub
mov
fidivrs
add
pop
pop
scas
es
ljmp
jo
or
cli
push
and
inc
cmp
int
add
sub
dec
dec
and
cmp
mov
adc
push
iret
add
clc
pushf
sbb
mov
adc
outsl
gs
and
inc
sahf
mov
cmp
stc
lds
mov
das
lods
mov
cmpsb
fisubrs
lahf
out
xchg
insb
fisubrl
mov
scas
ljmp
xor
pushf
ss
pop
jle
cmp
movsb
je
repnz
cmpsb
or
lods
adc
and
jmp
fsts
sbb
xor
dec
xchg
cltd
pop
ret
mov
xchg
push
lahf
imul
xchg
insb
lahf
lret
fwait
into
ret
fs
sarb
push
enter
mov
jae
pop
sub
dec
pop
jno
ret
movsb
inc
repz
fsts
xchg
mov
and
flds
lret
movsl
fisubs
in
cmpb
shl
aam
insb
stc
jae
xchg
push
inc
xchg
outsb
scas
pop
xor
inc
push
decl
popf
and
and
sub
andb
jp
dec
xchg
les
jnp
cltd
and
dec
adc
xor
dec
movsl
jns
shll
cmp
lea
push
imul
inc
dec
mov
aam
enter
sub
sbb
jne
lods
outsb
loopne
sub
xchg
pop
jns
xor
shlb
icebp
lret
aam
jmp
pop
popf
add
mov
jl
es
xor
es
movsl
call
sub
cwtl
aas
xlat
lds
scas
pop
dec
and
pop
adc
imul
leave
in
mov
or
aaa
imul
stos
insl
out
xor
popf
aas
dec
push
ficompl
adc
xchg
in
cmpsl
movsl
jbe
lds
fildll
xchg
fisubl
imul
mov
jb
add
cmp
push
xlat
mov
insb
fnsave
mov
notl
add
xchg
cld
rolb
repnz
lcall
pop
in
dec
inc
mov
pop
fstl
inc
mov
push
iret
sub
mov
xchg
push
iret
pop
jp
jno
xchg
push
cltd
or
mov
call
push
scas
fisubrs
or
inc
test
xchg
jb
outsl
mov
test
data16
jle
repz
iret
imul
popf
mov
aad
stos
jnp
adc
mov
pop
sti
xor
pusha
bound
xchg
pop
or
rolb
or
push
pushf
jl
adc
cmp
mov
rol
nop
lods
adc
xor
mov
cmc
jl
cld
dec
lods
fcmovnu
imul
xchg
sub
xorb
insl
push
mov
lds
lods
push
add
inc
leave
sti
fwait
adc
int3
push
icebp
in
xchg
cs
jbe
outsb
test
mov
xchg
adc
test
dec
sub
in
lods
dec
nop
jle
xchg
popf
fwait
dec
cmp
lock
rcrl
push
fdivr
jle
mov
dec
pushf
pusha
subb
aaa
lock
add
mov
mov
cld
pop
mov
cmp
or
mov
xor
mov
dec
cmp
fsubs
mov
stc
jg
loop
movsb
fsubl
and
adc
sub
imul
ud0
mov
cmp
stos
stc
call
xchg
lahf
wbinvd
xlat
adc
jecxz
push
adc
sub
mov
clc
jns
and
mov
or
pop
mov
fmull
rcll
xor
mov
jno
jo
imul
movsb
hlt
loop
shr
and
rcr
maskmovq
imull
xchg
adc
cwtl
hlt
xlat
int3
and
pop
cmp
pop
mov
and
lahf
hlt
xor
sbb
aaa
clc
adc
mov
enter
push
jo
mov
test
cmc
imul
ffreep
aad
inc
pop
mov
stos
dec
lock
movsb
das
das
mov
jbe
mov
mov
fcomip
fildl
hlt
push
mov
mov
cs
add
gs
inc
pop
call
jo
loop
inc
xor
inc
jo
out
insl
clc
mov
mov
mov
dec
movsb
adc
arpl
adc
movsb
pop
cltd
xor
sub
cmp
test
or
sub
mov
and
jmp
push
mov
push
cmp
cmc
lock
mov
cmp
xor
popf
cmp
sub
repnz
adc
inc
sbb
clc
cmp
dec
aam
rcr
pop
xor
and
mov
shll
sbb
cmpsb
sub
ror
xchg
or
adc
shlb
inc
adc
mov
dec
pop
jge
arpl
lahf
xor
dec
dec
pop
les
repnz
in
gs
ret
sbb
sub
fnstenv
mov
scas
or
aad
rorl
push
unpcklps
jmp
add
and
or
movl
mov
inc
sbb
mov
in
cmp
or
xor
mov
mov
lock
push
test
xor
arpl
cmp
jnp
js
fldcw
in
icebp
adc
xchg
das
mov
lahf
pusha
ss
xor
and
je
insb
adc
test
jle
inc
jl
clc
inc
sbb
jns
negb
test
test
jle
out
mov
mov
dec
push
ds
jg
dec
movsb
int
jnp
js
cwtl
ret
jl
fs
je
clc
ljmp
sahf
pusha
or
mov
sub
fwait
mov
fcmovnbe
inc
dec
outsb
xchg
shl
mov
shll
add
fcmovnb
inc
movsl
aad
test
sbb
push
dec
js
call
lods
jbe
xchg
rcr
xor
pop
sub
jno
jbe
js
in
sbb
fnstcw
adc
push
popa
aaa
xor
adc
sbb
cmp
mov
inc
int3
mov
push
sbb
lcall
and
and
sub
lahf
mov
lea
mov
les
inc
mov
push
out
out
inc
pop
enter
repz
sub
fsubr
inc
cli
cmp
dec
notl
cltd
adc
xor
sbb
loope
pop
xchg
and
xchg
lret
jno
sub
inc
mov
xor
xor
xchg
jo
add
call
iret
stos
push
pop
pop
mov
adc
daa
test
fidivrs
inc
setno
aas
ja
dec
rcr
ja
and
pop
bound
test
adc
int
mov
mov
lods
mov
adc
inc
std
mov
mov
je
fidivrl
loopne
roll
test
mov
mov
pop
addr16
jl
lahf
push
pop
faddp
sbb
loopne
sbb
mov
aad
inc
sbbb
sbb
xchg
out
pop
aas
popa
jo
js
mov
adc
inc
mov
add
imul
pop
or
leave
adc
mov
in
adc
test
out
cwtl
push
dec
addr16
jb
aad
cmp
pop
or
xchg
cmp
imul
cmp
lea
mov
and
and
cmc
popa
jnp
call
xchg
mov
mov
mov
lds
ficompl
mov
cmpsb
jbe
cmp
sbb
mul
sbb
std
adc
sbb
in
or
xor
pop
cld
les
repz
xorl
jg
jnp
sbb
lds
add
ret
mov
mov
cli
xlat
sub
imul
xchg
mov
mov
mov
fwait
push
and
mov
jb
inc
stos
mov
mov
addr16
ja
hlt
mov
push
into
popa
icebp
xor
xchg
je
pop
push
mov
jno
loope
cld
hlt
lcall
movb
and
lods
dec
add
push
inc
jns
jge
jne
ror
xchg
and
jno
popf
push
mov
push
jmp
fistpl
jl
sbb
cmp
jg
push
mov
adc
push
in
pop
aas
pop
inc
sub
or
sbb
es
je
mov
pop
cld
push
add
lods
cmp
paddusb
inc
push
out
dec
xor
cmp
jo
sbb
add
shll
cli
pop
dec
sub
jnp
push
mov
clc
test
js
daa
scas
into
lcall
out
stos
movsl
data16
fisubrl
cs
push
movsb
push
jmp
push
jo
cmp
sub
jl
fidivs
in
sti
xlat
rolb
pop
or
add
add
fnsave
repz
xchg
lock
aad
std
push
sub
addl
xchg
ret
jns
mov
fstpl
sub
in
jg
lods
loopne
sti
dec
mov
ss
push
lock
bnd
sbb
test
mov
in
mov
inc
fstpt
in
in
test
jg
ljmp
mov
inc
roll
or
adc
sbb
dec
stos
jno
ja
nop
movsb
lcall
mov
mov
daa
faddp
add
hlt
pushl
inc
ds
push
mov
xlat
dec
jl
jne
xlat
lods
pop
stc
jo
loop
jp
jbe
xor
lea
mov
repz
loopne
ss
hlt
movsl
dec
nop
push
ds
pop
fmull
pop
test
lea
add
add
arpl
sub
cmp
dec
mov
repnz
mov
adc
dec
into
test
adc
js
call
mov
fimull
nop
dec
xchg
or
test
movsb
jg
addr16
cmc
rcr
cmp
gs
rolb
xor
jle
lea
ficoms
push
add
and
fs
or
mov
movsl
jno
jecxz
dec
pop
jb
xchg
insb
push
add
or
pop
dec
mov
mov
test
and
dec
and
push
movsl
add
shlb
out
sub
adc
js
mov
test
push
scas
ja
arpl
cld
frstor
movsb
push
mov
pop
shlb
pop
or
pop
xchg
movsb
ja
inc
push
nop
aad
sbb
xchg
aam
push
sub
xlat
push
outsl
push
or
lds
xorb
dec
cmp
sub
gs
ljmp
lds
cld
push
mov
jecxz
es
rorl
jns
cmpsb
cmp
jo
mov
sub
sub
fwait
adc
xchg
push
fsubl
jecxz
dec
push
xchg
sub
mov
mov
push
gs
push
push
call
imul
ds
imul
cmp
and
fcom
sub
mov
loope
jp
or
add
les
fldt
push
pop
xor
pop
ss
loope
pop
and
stos
add
push
sub
or
sbb
add
movsl
and
sbb
push
add
dec
movsb
shl
mov
call
pusha
mov
push
cmp
mov
fwait
adc
mov
xchg
cmp
pop
idivb
jge
add
stc
fnsave
fcmovb
dec
movsb
pop
mov
push
jno
xchg
jle
and
cmp
das
lock
mov
aaa
iret
stc
cmpsl
mov
scas
imul
add
pop
ss
dec
xchg
cmp
inc
mov
mov
stos
inc
daa
enter
xlat
mov
data16
adc
movsb
pop
shrl
out
mov
jecxz
sub
mov
aas
shll
xor
iret
jns
sbb
xor
mov
jge
inc
sbb
cli
pop
adc
ds
push
sbb
inc
lock
icebp
push
xor
mov
mov
or
sub
inc
insb
jnp
adc
and
mov
dec
mulb
inc
pop
sbb
rcll
push
adcb
cmpsb
add
dec
jp
in
jo
mov
out
dec
xchg
cld
cmpsb
jge
lcall
cmp
add
nop
push
ret
pop
push
and
mov
mov
jbe
sbb
imul
mov
jae
cmp
lods
mov
out
push
lcall
jns
and
jo
pop
cmpsb
jle
sbb
push
push
xchg
mov
cltd
cmpb
lahf
divl
mov
call
lea
int3
adc
leave
pop
fdivrs
mov
leave
jae
inc
cmp
gs
pop
lock
insl
jmp
mov
jno
add
jbe
cmp
std
int3
cmp
inc
cmp
loopne
cltd
jp
xchg
dec
ret
aad
cmovb
adc
int
and
xchg
mov
dec
mov
dec
push
cld
jae
and
js
out
xchg
pushf
sti
mov
cmp
ret
out
rorb
add
add
xchg
pop
cmp
dec
xlat
mov
sub
sbb
xorb
jno
and
repnz
mov
js
es
push
lret
nop
pop
mov
mov
enter
daa
outsl
enter
or
cmp
xchg
and
xchg
cli
dec
cmp
scas
mov
gs
adc
mov
cmpsl
pop
inc
ficompl
inc
mov
dec
fisttps
movsb
jge
mov
pop
stos
divb
fnstcw
ror
sbb
fistl
les
testl
pop
ficompl
sbb
xchg
dec
stos
xchg
push
rclb
cmp
xchg
sbb
pop
push
adc
lahf
mov
jge
add
cmp
cmpb
mov
xchg
loopne
or
and
cmp
cld
lret
push
loope
fwait
cmp
pushf
stc
pop
scas
push
xchg
iret
push
fdivr
cltd
mull
inc
mov
mov
mov
dec
cmp
rclb
mov
or
cmpsl
scas
jecxz
xor
push
daa
mov
jl
dec
mov
mov
rorb
iret
and
leave
arpl
xchg
pop
arpl
mov
cmp
cwtl
inc
das
inc
dec
rolb
fs
cld
mov
pop
jne
in
fwait
push
pop
push
xchg
mov
fdiv
shlb
stos
vpsrld
cmp
pop
mov
fiadds
in
mov
pop
pop
ja
imul
test
movsb
inc
nop
popa
addb
test
pushf
ss
or
jle
in
adcb
fcoms
nop
movsl
jo
sub
inc
adc
imul
into
cmp
mov
sub
fstl
and
pop
icebp
xchg
push
dec
add
cmp
push
adc
cmp
mov
pop
pop
aaa
repz
mov
repnz
xor
imul
cmpsl
push
mov
fdivr
or
loopne,pn
xor
xor
pop
or
push
int
je
xchg
mov
in
adc
cmp
push
icebp
shlb
out
lret
add
xor
clc
cld
repnz
outsb
es
test
push
rorl
out
aaa
add
push
scas
lock
dec
jno
roll
cmc
imul
clc
xchg
js
cs
sub
inc
pop
sub
or
and
iret
rclb
inc
adc
mov
gs
mov
repz
mov
outsb
test
daa
std
out
fwait
adc
lods
xchg
shlb
mov
xorb
enter
jle
test
sub
cmc
mov
mov
cmpsl
popf
inc
push
in
jnp
mov
addr16
mov
fsubrs
cmp
pop
repz
jae
repz
testb
adc
and
dec
ficoml
fwait
inc
and
push
xor
aas
pop
jl
fadds
mov
fdivrl
mov
mov
xchg
inc
xor
into
xchg
push
cmp
and
cmp
ja
sbb
inc
pop
mov
subl
jnp
data16
or
adc
fsubp
cmp
pop
test
das
sub
lods
cmp
cwtl
jae
pop
loop
sub
add
ret
pop
or
inc
pusha
test
cmp
lret
lret
aas
add
add
lret
xchg
fimull
adc
iret
stos
ficomps
sbb
push
mov
xchg
mov
cmc
movsb
imul
cld
mov
cwtl
add
xor
icebp
push
jno
shll
jb
sub
fsubl
shlb
aas
out
into
js
cmp
dec
mov
lods
and
fs
inc
dec
in
rclb
daa
in
cwtl
push
fcoml
push
pop
inc
push
dec
xlat
into
adc
lret
shlb
mov
cmc
xor
mov
movsl
aas
popa
xorl
leave
les
cmp
mov
bound
outsb
mov
sbb
gs
out
test
ror
incb
mov
mov
jne
sub
sbb
je
pop
aam
push
jp
dec
jg
lods
call
jo
xchg
pop
cmp
adc
jge
push
jo
jl
pop
jl
xchg
xchg
xor
jle
push
sbb
push
jne
out
hlt
add
mov
test
mov
mov
or
popf
insl
iret
call
movsl
int3
call
add
loop
mov
xchg
xor
sub
in
sbb
jo
mov
sti
mov
xor
shll
cmp
into
cmp
mov
fcoml
js
pop
mov
xor
aad
dec
jle
loopne
outsb
loopne
subb
fs
sub
sti
adc
cltd
inc
xchg
adc
fmull
cld
sbb
or
mov
fsubrs
aad
inc
mov
inc
or
mov
andl
lods
dec
mov
imul
divb
xchg
fldcw
loope
xor
or
pusha
loopne
pop
mov
cmp
xchg
pop
test
mov
daa
push
mov
icebp
mov
add
ljmp
mov
outsb
stos
mov
jno
dec
and
dec
mov
test
inc
loopne
sbb
js
sbb
hlt
arpl
push
insb
inc
repnz
add
and
jecxz
or
push
movsl
lods
jnp
sub
ss
jae
pop
inc
out
dec
or
add
sbb
dec
cmp
cmpsl
outsl
cmp
shl
cwtl
push
jecxz
mov
jno
lret
push
fisttpll
test
xor
sbb
push
pop
or
sub
fwait
mov
dec
nop
imul
dec
sbb
out
into
dec
cmp
leave
movzwl
and
cmp
js
loop
fmull
filds
sahf
jmp
push
pop
push
or
mov
sub
jae
cmp
pop
test
fwait
lock
sahf
adc
pop
mov
shl
mov
icebp
xlat
inc
and
sahf
jns
jnp
mov
and
mov
adc
jge
test
push
xchg
cmp
call
and
sbb
ja
jp
stos
dec
and
bound
and
andb
adc
call
imul
sbb
mov
cli
jl
xlat
jno
pop
push
or
cmp
pushf
jbe
insl
xchg
cmc
push
mov
jle
mov
repz
and
je
js
movsb
cmp
popa
sub
test
jl
les
xor
stc
clc
mov
mov
idivb
pop
sbb
jge
push
jl
push
xor
mov
lahf
jb
sysenter
pop
pop
cli
jnp
add
stc
cld
movsl
jle
jb
ljmp
sbb
jmp
sub
inc
out
mul
gs
imul
push
cmp
add
or
mov
pop
push
adc
mov
adc
push
cmpsb
in
in
cmp
xor
sbb
pop
cmc
push
sub
add
cmpsl
jp
adc
sbb
ds
idivb
mov
fsts
pushw
cmpsb
icebp
xor
cmp
xchg
loop
mov
dec
mov
cltd
dec
sbb
and
xchg
cwtl
fdivrs
pop
and
xchg
rorl
mov
addr16
popf
call
and
out
mov
outsl
adc
testb
dec
sti
adc
jle
push
sub
outsl
test
sbb
cli
imul
xor
shrb
comiss
jbe
mov
sub
adc
std
push
inc
clc
mov
pop
dec
push
movsl
in
cli
inc
dec
jb
cmp
repnz
test
in
jecxz
and
arpl
add
xor
add
sub
xchg
push
into
adc
lock
pop
inc
lock
or
jnp
adc
jno
cltd
pop
pop
pop
roll
cmp
sub
xor
out
pop
pop
adcb
sbb
mov
pop
add
imulb
dec
and
pop
daa
ja
in
repz
scas
xchg
mov
clc
test
cwtl
push
cmp
mov
daa
in
xor
in
out
mov
repnz
and
aaa
in
out
inc
xchg
popa
adc
ja
adc
pop
nop
and
push
sti
hlt
mov
mov
rcll
outsb
inc
stos
movsl
shrb
pop
cmpsb
mov
xchg
mov
enter
sbbl
out
pop
nop
mov
sub
es
pop
push
arpl
xchg
add
fildl
push
repz
and
pop
push
cmp
idivb
int
pop
sarb
mov
sbb
inc
movsl
and
dec
mov
and
ss
dec
adc
in
push
jp
cltd
jle
pop
rclb
sbb
mov
push
lret
andb
push
sbb
jp
cmp
dec
daa
sbb
test
sarb
xor
push
xchg
imul
cmp
and
xor
push
mov
cmpsl
cmp
std
icebp
jp
mov
sbb
loop
sahf
jl
sub
add
repnz
mov
adc
mov
fdivs
inc
cltd
mov
aas
adc
es
mov
sbb
adc
in
xor
dec
push
sub
inc
push
popa
movsb
ds
std
pop
jle
xchg
add
cmpsl
out
inc
jle
flds
scas
or
cmp
icebp
popa
cs
lahf
fprem
insl
add
lret
out
imul
cmp
movsb
movsb
xchg
xchg
pop
pop
mov
pop
sahf
mov
xchg
leave
adc
rorb
daa
insb
movsl
movsl
test
ds
push
mov
dec
inc
decb
movsbl
and
cmp
popa
rcl
mov
fldenv
add
jecxz
xchg
mov
pop
rolb
ss
mov
stc
fs
aaa
cmp
ljmp
movl
sbb
jns
ret
push
imul
and
aad
and
movsl
cs
adc
test
pushf
mov
xor
dec
fdivl
dec
out
sbb
fcmovbe
int
and
fstpl
mov
pop
dec
cmp
jb
cmp
iret
psubd
pop
fsubs
out
dec
jmp
dec
stos
jl
inc
ds
gs
std
jnp
sbb
dec
dec
cmp
and
repz
aaa
pusha
addb
nop
sti
xchg
ret
clc
dec
aad
gs
and
lock
xor
mov
mov
imul
sub
hlt
cmp
adc
jne
and
mov
popf
cmp
jge
enter
inc
sbb
flds
pop
bound
mov
pop
incb
lods
inc
pop
test
jbe
inc
cmp
xchg
movsb
cvtpi2ps
les
mov
mov
xchg
int3
jno
in
test
mov
cmp
jl
pop
mov
inc
scas
mov
push
or
xchg
sbbl
cmp
push
sbb
test
ja
add
jb
sbb
daa
push
sub
into
pop
rcl
out
sbb
mov
sbb
cmp
sbb
stc
push
mov
jp
dec
xchg
icebp
inc
or
mov
test
addr16
test
jp
or
fs
out
and
sahf
mov
adc
fcomps
mov
xor
test
lahf
mov
js
in
sbb
jg
popa
adc
or
xchg
ret
imul
cmp
sbb
dec
enter
push
jge
fidivl
adc
call
sar
jbe
jle
xchg
push
movsl
cmpsb
inc
call
cld
xchg
lahf
jl
mov
add
out
orl
inc
fidivl
mov
adc
xor
fisubrs
test
fbstp
inc
fsubs
fcmovnb
fimull
xchg
leave
push
inc
mov
outsl
fwait
xchg
xchg
xchg
cld
es
pop
cmp
test
mov
in
movsl
jae
adc
xchg
int
lea
inc
cmp
imul
xchg
negb
cltd
mov
iret
sbb
mov
xor
lahf
jnp
sbb
rol
sub
out
rolb
dec
lea
mov
mov
or
stc
rcrl
sbb
xor
xchg
dec
fmuls
cmp
js
popa
leave
pop
fwait
in
out
in
mov
addr16
xchg
cmpsl
cmpb
pop
sub
jbe
fisubrl
out
cmp
sub
in
orb
jnp
pushf
cli
mov
inc
xchg
mov
add
test
xor
inc
mov
scas
add
cmpsl
lock
data16
push
repz
gs
jo
sbb
iret
xchg
mov
jge
cmpsb
xor
test
insl
push
pop
mov
ss
xacquire
outsl
outsl
xchg
std
xorb
jmp
adc
jb
lds
or
in
test
xchg
out
fs
leave
jp
inc
aas
jnp
or
adc
pop
out
repz
xchg
paddq
push
das
lods
scas
ds
out
aad
cltd
xchg
sbb
repz
int
fistl
cmp
xchg
jne
decb
jbe
lahf
xor
sub
pop
mov
sbb
pop
les
jl
addr16
sbb
pop
adc
popf
icebp
push
xlat
jns
das
jp
cld
loop
push
mulb
or
lds
pop
mov
sahf
sub
lret
xlat
pop
aas
ret
adc
movsb
jbe
out
push
xor
adc
add
mov
pop
test
adc
push
dec
sub
mov
in
xchg
mov
mov
dec
out
es
dec
ror
jb
insb
cmp
fsubrs
cwtl
out
leave
mov
scas
in
in
test
cmpsb
xchg
push
xchg
mov
mov
cwtl
insl
and
imulb
pop
xlat
push
inc
mov
iret
and
in
xor
loopne
loopne
fchs
pop
repz
popf
clc
and
cmp
push
cmpsb
js
mov
push
push
adc
mov
daa
inc
jnp
xchg
push
arpl
mov
sbb
or
xchg
jo
sbb
mov
out
add
pushf
fs
addr16
and
scas
cltd
adc
into
in
push
jg
inc
lock
addr16
movsb
jge
mov
ret
xor
mov
cwtl
inc
pop
cmc
cmp
ljmp
jns
rcll
jg
aaa
mov
mov
movsb
les
xor
pop
pusha
pop
inc
stos
ss
sub
cmp
stc
xchg
loop
mov
mov
hlt
mov
adcb
cwtl
aas
fwait
ja
pop
subl
fucom
out
mov
out
mov
outsb
jb
mulb
imul
mov
sbb
out
stc
mov
xor
leave
push
push
inc
xchg
lret
adc
leave
xchg
inc
nop
lret
sub
mov
pusha
js
cltd
add
popa
xchg
cli
int
pop
xor
pop
jno
add
pop
imul
mov
push
outsl
xchg
jno
cmp
out
add
xlat
xor
aaa
sub
paddusb
cltd
jmp
popf
sub
test
fs
shl
jge,pn
add
jmp
push
sbb
loop
mov
loopne
sahf
js
push
sbb
jle
inc
cltd
inc
out
repz
jo
pop
cmp
outsl
lahf
pushf
je
cmpsb
in
inc
fstl
jno
push
out
cmove
push
call
adc
pop
jl
pop
mov
mov
les
add
xchg
icebp
ja
xchg
loop
dec
adc
jge
orl
enter
outsl
fwait
clc
pop
cli
jno
outsb
jo
icebp
or
xchg
mov
aaa
and
jl
push
fsubrs
xor
sahf
ja
jp
sahf
out
cmp
push
lods
sbb
cmp
stc
sbb
lds
es
cmp
mov
ret
push
xor
mov
pushf
mov
cmp
fisubl
dec
scas
imul
mov
lret
dec
test
ds
lret
mov
mov
lret
or
xor
xor
add
pop
loopne
pop
sar
xchg
aas
xlat
and
adc
cmp
or
das
mov
pop
lret
xlat
push
xor
mov
xor
jl
pop
fcmovnb
repz
mov
test
mov
pop
out
xchg
cmp
jge
mov
nop
push
fsts
cmp
sbb
add
pop
add
fwait
adc
test
push
push
pop
push
cmp
xchg
pop
jl
fsubrs
cwtl
mov
inc
dec
cwtl
stos
or
or
test
test
sub
inc
sbb
fcmovbe
mov
mov
xor
mov
pusha
push
xchg
or
push
push
xor
pop
push
push
cmc
mov
fdivrl
adc
pop
push
push
outsl
out
fcomp
dec
into
ljmp
xchg
jo
pop
jbe
jb
out
or
jecxz
xchg
jae
jle
adc
fistpl
pop
xchg
mov
bound
fstps
mov
push
sub
repz
insb
hlt
rorb
jecxz
cmp
inc
pop
cmp
pop
push
inc
add
xchg
imul
mov
int3
mov
push
iret
dec
cli
mov
cmpsl
dec
mov
mov
stos
inc
mov
push
mov
les
mov
mov
pop
out
jmp
dec
aad
aad
jae
jns
mov
sbb
sub
scas
loop
cmp
add
and
mov
je
inc
sub
or
gs
mov
dec
or
loop
repnz
mov
cli
push
movl
inc
jmp
aad
das
jge
cmc
jl
push
mov
xchg
adc
or
xor
cmp
dec
xor
mov
sbb
cmp
test
mov
loope
insl
sbb
inc
mov
cmpsb
xchg
push
or
in
test
mov
sbb
addr16
mov
dec
pushf
data16
ss
mov
fxch
mov
pop
xlat
pusha
inc
imul
mov
int
jmp
pop
shrl
dec
push
jp
test
insb
xlat
mov
icebp
pop
xchg
fbld
mov
dec
rolb
push
flds
push
sbb
adc
stos
loopne
outsb
js
dec
xlat
cmp
lods
js
scas
mov
and
loop
and
fwait
jno
and
xchg
xor
cmp
dec
out
dec
lea
out
jns
xor
jae
sti
mov
cmp
xchg
lods
cs
bound
ret
xchg
mov
and
mov
clc
repz
xor
cmp
in
jo
pop
mov
xchg
cmpsb
add
xchg
in
sub
bsr
loop
pop
pop
loopne
faddl
push
xchg
or
pop
enter
in
data16
into
enter
int3
outsl
xchg
mov
or
adc
loopne
pusha
sbb
adc
out
outsb
and
rcrl
adc
mov
jbe
mov
nop
mov
icebp
jb
pop
xchg
pushf
dec
xor
sti
scas
test
adc
shll
dec
mov
rcrb
push
repnz
mov
and
ret
hlt
lock
aad
cmp
add
jl
fwait
mov
rolb
xchg
xchg
hlt
jg
push
arpl
int
clc
push
cwtl
in
sti
lds
insb
mov
mov
inc
jno
jg
push
cld
in
lahf
dec
dec
sbb
dec
pop
movsb
in
xchg
imul
ss
ret
jecxz
inc
dec
mov
mov
mov
sbb
xchg
pushl
cltd
aad
dec
outsl
sbb
dec
push
inc
pop
aaa
testb
mov
xor
inc
push
or
shl
xchg
cltd
mov
outsb
lods
push
xlat
mov
jae
push
je
repnz
dec
inc
push
pop
xor
loopne
xor
push
sbb
adc
loopne
jmp
in
xor
fld1
add
cmp
push
jae
je
cmp
inc
lock
addl
adc
push
push
jg
popa
inc
xchg
cmp
test
sub
jo
xor
aaa
or
cs
loope
dec
jns
jb
aas
mov
push
push
aam
dec
mov
sahf
test
mov
icebp
mov
int
push
idivb
pop
test
cmp
popa
mov
shl
cmpsb
sahf
pop
clc
xor
inc
push
jo
aaa
movl
xchg
adcb
fsubrl
jmp
jbe
mov
xchg
pop
stc
lea
pop
cmp
mov
sbb
adc
out
mov
or
lds
jp
mov
jmp
and
rcll
push
fwait
xchg
jbe
pop
lock
dec
punpckldq
js
cltd
and
lock
xchg
pop
ljmp
mov
int3
out
sahf
mov
jmp
lods
iret
negl
fcomi
mov
jge
pop
jno
adc
lret
xor
out
fistpll
ja
lods
fs
addl
ja
mov
movsl
xchg
mov
sbb
shlb
mov
fstp
or
jmp
outsl
in
mov
mov
ja
xor
mov
mov
push
mov
jl
shrb
or
push
cs
iret
adc
mov
in
sbb
cmp
mov
ja
push
test
mov
or
test
std
push
jns
ret
lds
pop
cmpsb
dec
mov
scas
or
stos
and
mov
push
aas
and
jg
pop
cmc
cmp
mov
push
dec
mov
pop
push
jp
shrb
xchg
in
push
mov
adc
push
mov
out
xchg
stos
sahf
lods
mov
fadd
repz
int3
mov
push
pop
mov
push
out
outsl
mov
shll
lahf
jl
jle
lea
mov
push
mov
mov
cmp
movsb
in
sub
mov
mov
lods
mov
xor
cmp
jg
dec
mov
or
pop
in
pop
outsb
pop
mov
cmp
in
pusha
pop
add
stos
roll
aas
push
gs
push
add
pop
notl
xor
sub
sbb
test
enter
imul
negb
cmp
imul
loopne
push
cmp
or
aas
fidivrs
popa
mov
mov
fdivrl
pusha
ss
jns
into
push
push
sbb
cmpb
mov
pop
rcr
int3
les
xchg
out
lret
or
scas
sahf
push
pop
and
mov
ljmp
jo
dec
or
inc
xlat
mov
repnz
inc
out
jge
loopne
mov
mov
mov
sub
or
std
jns
cmp
mov
and
mov
lds
xchg
mov
dec
rol
fwait
je
xchg
adc
jmp
mov
pop
sbb
into
sarb
push
mov
in
in
mov
ret
adc
jb
shlb
xor
in
les
push
lods
jo
es
outsl
data16
lock
cmp
out
inc
mov
leave
dec
les
pop
addr16
popa
popf
inc
call
jge
jbe
jb
dec
aam
jge
sbb
aas
rclb
out
cmpsl
data16
dec
frstor
xchg
pop
jne
xor
shll
mov
ret
popf
sbbb
sar
lahf
in
in
or
cmp
add
lahf
xchg
inc
push
scas
xchg
cli
les
dec
mov
test
es
mov
dec
mov
aam
sub
sahf
xlat
dec
in
cmc
out
bound
add
sbb
and
cli
jno
xchg
aas
mov
rcll
test
mov
mov
fisttpl
adc
imul
push
popf
jmp
in
lock
js
inc
mov
pop
gs
mov
cmpsl
sbb
mov
movsl
mov
out
dec
inc
push
sbb
cmc
int
push
fildl
jg
xchg
mov
mov
lock
pop
leave
dec
pop
fwait
test
fcomps
enter
and
mov
test
adc
cmp
imul
xchg
and
movsb
icebp
pop
fwait
xchg
ret
std
dec
jl
in
imul
jbe
lods
xchg
and
rcll
push
xor
pop
xor
pop
mov
leave
into
push
in
jecxz
jmp
fldt
push
jb
ret
add
scas
and
ret
inc
scas
jle
inc
xchg
fisttpl
dec
fcomp
sbb
call
and
fidivs
lock
mov
mov
nop
pop
shl
inc
and
add
dec
xchg
ret
pop
or
add
cltd
dec
and
sbb
xor
dec
xor
pop
or
ljmp
in
adc
add
test
inc
stos
fwait
xchg
and
mov
inc
mov
mov
repnz
adc
sbb
adcl
inc
iret
inc
into
cmp
push
jle
inc
fists
mov
mov
idivb
js
fneni(8087
mov
stc
push
fbstp
mov
ds
xchg
in
dec
xchg
js
aaa
push
xor
test
push
xlat
sbb
mov
in
xor
adc
push
sbb
dec
pop
jp
scas
cwtl
int3
pop
fsubp
rcrb
pop
mov
add
out
xchg
push
push
adc
in
mov
loope
xchg
test
popf
fstps
jnp
scas
pop
mov
xchg
in
mov
fwait
push
call
jmp
sti
rclb
add
clc
and
xchg
xchg
push
out
scas
mov
cmp
and
mov
adc
xchg
pop
xchg
jo
hlt
mov
jmp
push
jmp
mov
or
popf
xor
fstps
ss
orl
mov
out
testl
pop
xchg
mov
pop
insb
sbb
xchg
cmpsb
dec
add
inc
sbb
xchg
sahf
lret
rcll
xchg
lret
add
lea
popf
xchg
xor
xor
jnp
out
lea
mov
pop
loop
lea
bound
cld
push
adc
pusha
mov
push
fnsave
or
cmp
lods
rcl
scas
adc
call
lcall
in
in
or
push
cs
jno
lea
cmc
popa
sub
fwait
aaa
stc
cmp
fs
iret
mov
jbe
mov
imul
pop
mov
scas
aam
das
push
fimuls
lahf
aas
push
mov
cmp
out
stos
pop
cmpsb
mov
ds
adc
cmp
cs
js
xchg
das
mov
and
push
aaa
addl
push
push
or
xchg
pop
pop
cmp
out
pop
inc
jge
jge
stos
sti
mov
xchg
inc
xchg
mov
and
mov
cmp
adc
movsb
mov
clc
mov
jo
xchg
push
mov
fmuls
jle
inc
loop
scas
jb
daa
mov
and
dec
mov
lret
rcrl
pop
xor
dec
cmc
push
lds
cmp
ret
test
mov
arpl
sub
xchg
and
lods
xor
mov
mov
les
mov
rcrb
ss
shlb
sahf
int3
push
mov
pop
or
mov
sbb
out
stc
adc
loop
xchg
lahf
mov
fisttps
mov
stos
jmp
test
add
movsb
sahf
test
jp
pop
daa
js
add
rclb
clc
enter
test
dec
fwait
lods
out
cmc
mov
loop
lcall
lahf
lret
pop
sbb
insl
mov
push
jecxz
xchg
cmp
call
ljmp
jbe
aad
fisubrs
adc
adc
cmp
mov
pushf
or
stc
notl
std
xchg
lds
stos
xor
xchg
lret
mov
orb
aas
mov
inc
insb
ljmp
mov
movswl
das
cmp
movsl
mov
jnp
aaa
mov
or
push
mov
xchg
movsb
daa
fstpt
data16
inc
mov
push
jl
push
jo
push
insb
lods
inc
cmp
in
sbb
sub
xchg
sub
pop
lcall
add
in
adc
cmp
xchg
fidivl
dec
scas
aad
ror
mov
mov
sbb
lahf
dec
ljmp
pop
cmpsb
adc
sub
lods
cmpsb
test
cmpsl
cmpsb
movsb
call
cmp
fdivrs
dec
and
pop
mov
mov
lods
xchg
rolb
je
rorb
shlb
hlt
ds
ret
loope
mov
sub
int3
shr
cmp
dec
adc
sub
test
aam
and
xor
cmc
js
sbb
sahf
pop
xchg
hlt
dec
mov
int
lcall
dec
jo
stos
adc
xchg
cmpsb
add
xchg
ljmp
lahf
adc
sub
jae
and
adc
cmc
rcrb
pop
ljmp
xor
add
lods
inc
in
stos
stos
std
insb
sbb
das
test
ja
rcrb
sub
fisubl
add
mov
subl
mov
sbb
sub
inc
js
push
push
dec
bound
mov
push
lahf
and
test
mov
jbe
imul
cmpsb
push
add
or
xchg
cmp
stos
dec
mov
pop
jl
rolb
mov
ret
mov
lea
mov
loope
pop
sahf
dec
adc
clc
sahf
js
inc
daa
xchg
cmpb
jnp
pop
pop
mov
jle
mov
imul
fmuls
call
loope
mov
cmpsl
inc
sub
int3
sub
divb
sub
dec
mov
cmp
test
fdivrl
test
mov
movsb
pop
mov
mov
jno
fwait
cmpsb
mov
mov
xchg
jne
int
dec
push
add
mov
cmpsb
cwtl
cwtl
sbb
mov
dec
int3
inc
adc
pop
sbb
inc
adc
lret
mov
int
fwait
outsl
iret
push
mov
lock
ja
dec
shll
clc
in
into
xchg
dec
shll
dec
enter
mov
mov
jge
inc
inc
xchg
xor
les
mov
or
sbbl
xchg
inc
mov
lahf
cmp
loop
xchg
and
outsb
ds
mov
fldenv
cmp
pop
cmp
add
xchg
aaa
dec
stc
cli
push
mov
js
sbb
xor
ss
movsb
mov
nop
cli
aas
dec
pop
mov
aad
ret
jns
push
or
cmp
fwait
and
scas
add
jl
daa
nop
adcb
jno
mov
rorb
push
repz
in
outsb
pop
push
pushf
fldt
mov
xchg
mov
shll
inc
shl
push
lods
movsb
loopne
aam
popa
enter
jne
insb
mov
add
push
in
nop
cmpsb
cld
pushf
cmp
push
outsl
cmp
stos
cmp
stos
push
fistps
cmpsb
cmp
mov
ret
and
test
mov
insb
mov
fildl
jge
adc
popa
and
sbb
mov
push
loope
aaa
mov
fimuls
jle
mov
rcr
shlb
pop
cmpb
fcmovne
rcr
shlb
xchg
dec
jmp
das
in
repnz
jecxz
jmp
clc
punpckhdq
xchg
insb
mov
mov
ror
push
out
std
mov
pop
jle
mov
inc
loop
sub
stc
repnz
sbb
adcl
cli
mov
dec
jae
adc
cmc
test
pop
jae
arpl
js
dec
cmp
cmpsb
outsb
test
adc
lcall
aad
push
mov
pop
popl
xchg
pushf
fdivs
jno
fwait
lret
nop
lods
cmpsb
nop
mov
test
lea
adc
data16
call
add
jo
mov
insl
sbb
sbb
or
mov
ss
fisttps
dec
fimull
xrelease
movsl
in
sub
adcb
into
insb
ffree
je
mov
inc
xlat
mov
push
cld
lods
movsb
movsl
imul
pop
push
sbb
dec
rorl
cld
pushf
add
and
jmp
shlb
dec
aad
pop
sbb
push
in
push
popa
ret
push
mov
mov
or
pop
adc
lock
les
sub
dec
cmpsl
test
xchg
int3
mov
jp
lods
push
cmp
xor
mov
mov
xchg
ljmp
xchg
ljmp
das
aas
imul
sbb
push
inc
cmp
xchg
fcmovu
and
out
aaa
inc
mov
xor
pop
pop
push
or
sbb
cmpsl
fdivrs
sarb
xchg
mov
adc
outsl
pop
ret
rolb
rorb
cltd
inc
add
ja
lds
aaa
cmc
push
fcomps
out
mov
dec
lods
cs
mov
scas
int
jmp
jo
push
jmp
repnz
outsb
in
mov
insl
fistl
stos
cmp
inc
std
pushf
shrb
mov
imul
fstps
in
jo
jmp
jno
lods
and
lret
xchg
lods
push
dec
popf
cmc
repnz
pop
mov
lods
mov
movsl
loopne
fwait
rol
movsb
lahf
mov
mov
mov
cwtl
orb
inc
xchg
rolb
jp
int3
out
adc
out
jne
cmp
push
cmc
or
jecxz
mov
lods
in
das
clc
movsl
test
or
mov
into
notl
jae
mov
jne
nop
dec
aaa
xchg
push
jecxz
push
pop
lods
xor
cmp
push
add
pop
stos
jp
cwtl
test
test
inc
cmpxchg
mov
cmp
mov
leave
add
mov
dec
cltd
xor
movsl
cmp
jnp
dec
mov
jl
sbb
movsb
cmp
incl
insb
xor
mov
add
mov
imul
push
clc
das
outsb
dec
xchg
pop
jbe
cmpsb
cmp
int
sbb
mov
mov
repnz
icebp
sub
aam
sub
cmp
nop
adc
lahf
in
or
repz
pop
cmp
fwait
das
int
push
repz
pop
outsl
sbb
faddl
imul
jecxz
fidivrs
xorl
mov
adc
push
pop
cmpsb
lret
lcall
popa
ret
dec
int
pushf
mov
je
push
mov
jnp
sub
cmp
mov
adc
add
outsb
stc
cmpsl
dec
and
mov
xchg
ret
shlb
test
mov
pop
hlt
and
in
sbb
in
adc
push
xor
mov
xchg
sbb
les
dec
shlb
xlat
stos
lret
aaa
xor
pop
lcall
aad
les
cmpl
inc
test
jp
cmp
rolb
dec
into
and
loope
aaa
add
jmp
mov
lahf
ficompl
push
and
mov
jecxz
xlat
inc
in
xchg
xor
nopl
hlt
jle
mov
add
or
das
mov
fsubrs
xor
adc
scas
inc
ficomps
imul
stos
cmp
out
xchg
scas
jl
in
setnp
and
sbb
aaa
jmp
ret
arpl
insb
hlt
pop
fnsave
pop
mov
cmp
adc
xor
ret
je
adc
sti
and
fcom
mov
or
push
jb
add
pop
xor
cmp
ret
sarb
mov
mov
ds
jl
dec
jg
sbb
js
test
cmp
mov
mov
ss
or
xchg
ror
insl
fdivs
lods
push
xchg
sub
repz
push
mov
movsl
out
inc
xchg
push
jle
push
xchg
jb
insl
ss
lcall
repnz
fwait
jmp
mov
ret
fmull
sbb
mov
imul
or
pusha
cmp
inc
and
mov
idivl
sahf
dec
gs
cmp
int3
add
imull
mov
cwtl
pop
ret
pop
shll
cmpl
mov
cld
pop
sti
enter
mov
mov
repz
movsb
imul
mov
mov
inc
movsl
aas
test
cmp
fistpll
out
sub
test
push
xchg
fisttpll
and
or
cmp
or
icebp
cmp
adc
fwait
cmpsb
inc
loope
push
and
sbb
js
jg
imul
arpl
mov
das
scas
sbb
popf
je
push
enter
jnp
jb
popf
loopne
jb
dec
mov
adc
pop
aam
add
stc
movsl
push
and
das
ss
pop
mov
repnz
inc
sbb
inc
push
push
emms
jnp
imul
test
adc
je
ret
add
or
mov
lret
iret
xor
push
push
pop
ljmp
mov
les
inc
cltd
imul
xchg
fldenv
sahf
in
pop
inc
inc
xlat
mov
mov
xor
es
shll
ja
dec
sbb
movsb
gs
call
push
sti
insb
repnz
aaa
imulb
clc
mov
cmpsb
jp
push
adc
push
xchg
test
hlt
mov
test
jnp
push
xchg
dec
outsb
clc
in
mov
imul
or
insb
mov
ret
fsubl
inc
es
or
push
sub
push
pop
orl
ss
shrl
les
sbbb
sahf
shrb
divb
sub
cmc
lret
jl
std
cmpsl
icebp
pop
pop
leave
xchg
push
arpl
es
int
dec
pop
aas
aam
xchg
jp
cmp
fdivrs
jbe
ret
sbbb
xor
mov
mov
andl
imulb
sub
xchg
out
fstl
addr16
cmp
pushf
aaa
mov
lcall
es
out
mov
xor
jge
add
inc
xchg
cmp
loope
scas
shl
xor
xchg
cmp
xchg
cltd
addl
dec
sub
push
jecxz
clc
fwait
mov
pop
shl
ret
cmp
in
out
cmp
mov
mov
fcmovu
call
outsl
cmpsl
push
xchg
cld
repz
fwait
jl
cmp
mov
and
sti
outsl
scas
sahf
inc
mov
sub
and
sub
mov
and
jge
push
lahf
xor
mov
mov
inc
mov
sbb
push
repnz
fs
mov
xor
sbb
push
mov
popa
test
pop
movl
test
hlt
jl
iret
xchg
cmp
js
adc
push
repnz
mul
insb
sub
cld
xor
js
sbb
dec
loop
add
adc
icebp
cli
popa
inc
pop
out
jl
and
loopne
jns
xchg
mov
out
mov
mov
out
push
jg
cmpsb
ret
mov
push
jo
cli
cli
ficompl
out
in
xchg
jmp
xorl
xchg
push
fisubs
jne
roll
movsb
xchg
fimuls
mov
in
add
dec
push
push
orb
into
push
lds
loopne
rolb
fsubrs
or
dec
pop
ret
test
test
xchg
push
push
xchg
std
fildl
and
roll
fistpl
sbb
scas
and
loopne
jl
mov
int3
or
ljmp
into
test
mov
cmp
lret
dec
add
movb
clc
rcr
dec
stos
mov
cmpsl
cmp
push
daa
inc
gs
jne
mov
adc
or
mov
rclb
jl
cmp
sub
sub
sbb
cmpsb
dec
stos
insl
mov
mov
dec
cmpsb
scas
jbe
sub
lea
jl
out
xchg
mov
jge
ret
out
jb
adc
cmp
ds
jne
insb
sbb
adcl
ds
sbb
ret
mov
lock
lods
jnp
out
jns
push
sbb
aad
jmp
sbb
out
les
mov
fsubrp
dec
cmp
pop
jecxz
or
ret
in
dec
ljmp
outsb
repz
in
clc
test
adc
dec
in
cli
ret
lods
cmpsl
popf
aam
xor
rcll
cmpsl
lcall
xchg
adc
sbb
outsl
cmpsl
arpl
into
popf
mov
cmp
mov
cmp
cmpsb
in
outsl
push
loope
and
or
lock
xor
cli
stos
sub
mov
sti
dec
push
cwtl
clc
rclb
cmp
imul
adc
jns
add
jmp
jbe
loope
sbb
ss
add
dec
dec
pop
or
and
mov
or
fsubr
mov
jno
ds
push
mov
clc
cwtl
scas
jb
cmp
jne
pop
imul
xor
adc
inc
idivl
pop
xchg
mov
iret
mov
test
push
cmpl
xlat
sbb
add
out
out
jnp
stc
fdivrl
jnp
adcb
hlt
aaa
pusha
mov
or
xorl
stc
nop
faddl
add
xchg
jg
push
mov
xor
mov
mov
push
fimuls
fdivrs
and
in
jecxz
movsb
cwtl
sbb
inc
jnp
xor
lds
pop
xor
xor
fstps
divl
stos
push
shlb
mov
mov
call
out
pop
movsl
leave
ja
ds
call
jb
xchg
inc
adc
jns
pop
jmp
mov
xchg
add
rorl
xor
mov
mov
push
mov
aad
std
lret
inc
sbb
push
div
inc
push
push
ss
add
lods
pop
clc
cmp
mov
call
adc
cmp
push
sbb
cwtl
cs
sub
jmp
sbb
pop
cmp
sub
repz
fsubrs
xchg
or
pop
mov
in
call
pop
mov
test
mov
mov
jnp
into
xor
dec
pop
mov
movsl
imul
addr16
fs
mov
fisttpl
jle
popa
jl
fs
lcall
mov
cmp
mov
sti
jns
jo
add
jle
rcll
mov
les
mov
mov
and
lods
shll
loop
and
or
mov
shl
mov
dec
cmpsl
mov
inc
sbb
inc
xlat
pop
push
cmp
mov
ja
fdivl
ja
cmp
ja
lahf
imul
add
lock
mov
aaa
data16
cmp
test
or
mov
scas
punpckhbw
jbe
xchg
idivb
push
movsl
push
add
repz
inc
mov
icebp
mov
popa
iret
sub
jo
dec
jmp
mov
xchg
imul
aad
lahf
lahf
push
jnp
mov
jnp
cmp
rolb
xchg
jecxz
inc
lea
add
dec
push
pop
lret
xlat
dec
nop
dec
rcrb
mov
add
pop
ljmp
imul
xchg
les
in
inc
inc
sarb
sub
pop
and
jns
cmpsb
push
out
cmpsl
je
lds
sub
and
sahf
inc
inc
lods
outsb
xor
imul
xchg
xlat
jb
jns
rolb
fsubrl
loop
lods
into
cmp
push
sub
jne
hlt
dec
mov
mov
jbe
or
mov
mov
or
insl
mov
stos
cmp
lret
push
mov
out
dec
mov
pop
pop
or
and
dec
mov
imulb
jae
fs
or
sahf
sub
xor
push
dec
pop
lcall
mov
loopne
xchg
sbb
dec
mov
push
xor
movsl
jae
imul
cmpsb
sbb
inc
fldl2t
sahf
add
popf
imul
add
aad
sbb
pop
mov
jge
xlat
or
adc
xlat
cmpsb
pop
movsl
xchg
cmc
inc
lahf
das
cmpsb
lret
jmp
scas
mov
inc
imul
mov
and
imul
int3
jne
dec
fcoml
mov
ja
mov
arpl
jp
or
sbb
push
push
push
mov
jge
daa
sar
popf
cmpsb
push
mov
push
mov
lahf
mov
push
icebp
pop
out
xchg
mov
ret
mov
mov
out
aaa
mov
clc
clc
dec
pop
lea
idiv
xchg
nop
mov
xor
sub
push
scas
rol
jle
fwait
pushf
sub
xchg
add
xchg
xor
ficoms
jnp
pop
jg
mov
inc
in
sbb
fnstsw
sub
mov
xchg
mov
add
mov
mov
lds
in
jmp
jge
mov
sub
push
aad
arpl
aas
push
loope
std
cmp
cmpsl
cmpsl
cmpb
aad
leave
clc
pop
and
ret
cmp
push
or
cmp
cmpsb
cmp
jnp
sub
jmp
das
aaa
outsb
sbb
sarl
cs
mov
dec
in
outsb
aad
ljmp
addr16
ljmp
mov
inc
xor
jle
mov
sti
add
lods
leave
movsl
mov
sub
enter
jl
fnstsw
jg
popf
or
xor
cmc
stos
jae
xchg
xor
mov
aaa
pusha
or
loopne
or
je
out
pop
xchg
pushf
aam
jns
sahf
clc
sbbb
movsb
dec
inc
inc
cltd
jp
jmp
popf
mov
aas
and
movsb
mov
cmpsl
out
sub
cltd
push
jg
aad
xor
pushf
or
mov
push
mov
dec
jp
out
sub
adc
xchg
cmp
xchg
dec
xlat
je
push
sub
and
imul
inc
test
jbe
push
cld
push
sbb
pushl
pop
iret
jecxz
adc
and
std
xchg
adc
xchg
or
mov
push
jno
pop
icebp
mov
xor
repz
jp
cmp
push
sbb
cmp
repnz
lock
or
cli
pop
nop
dec
mov
adc
rolb
jl
mov
inc
pop
mov
pop
icebp
icebp
sahf
mov
or
cmp
xchg
fistps
xor
incl
dec
cwtl
xchg
mov
rolb
jno
out
xor
mov
mov
jbe
bndldx
fstp
and
push
imul
out
xor
and
mov
xor
xchg
dec
in
jl
mov
mov
inc
cmpsb
inc
inc
or
out
in
xchg
pop
orb
mov
jp
sub
loopne
push
shll
cmp
and
push
pop
sti
ret
or
fstpl
xor
fcoml
fsts
fadd
inc
and
inc
pop
pop
xchg
jmp
in
call
jno
into
xchg
fs
sahf
pop
lret
mov
addr16
pop
xor
mov
lcall
xlat
in
iret
aas
pop
neg
imul
mov
mov
cli
or
xchg
movsb
enter
push
lret
adc
pop
subl
adc
mov
loope
std
mov
enter
loop
outsl
mov
ret
loopne
mov
cmp
lods
popf
popa
xor
add
aam
vandps
daa
dec
sbb
lods
fwait
stc
clc
stos
aaa
insb
inc
push
mov
jecxz
jns
stos
rorl
les
mov
cmp
pop
jnp
pop
jns
adc
cs
call
shll
lret
shlb
sbb
push
xchg
lock
add
mov
rorb
jae
mov
xchg
xor
jae
cli
or
stc
push
cmp
sub
aad
test
mov
in
mov
enter
out
inc
xor
mov
mov
int3
jae
adc
fs
and
inc
push
lahf
stos
sbb
repnz
negl
ja
or
psubd
stos
pop
or
push
push
mull
mov
outsb
and
mov
or
ds
mov
mov
pop
call
int3
push
stos
dec
orl
pop
pop
and
mov
rcrl
jle
shlb
mov
sarb
mov
jg
cmc
stc
dec
add
hlt
shll
ja
push
sub
sub
fisubs
xor
mov
stos
cmp
dec
lcall
pop
mov
jmp
cmp
jnp
loop
iret
mov
lret
xchg
aas
fwait
into
mov
popa
fs
jns
mov
xlat
mov
imul
repnz
outsl
xlat
add
lahf
icebp
dec
cli
fidivrl
xchg
fwait
mov
mov
xchg
adc
hlt
fwait
pop
xor
mov
ret
push
or
jae
mov
sub
cmp
js
das
mov
push
xor
push
fwait
xor
pop
jae
mov
lahf
sbb
cld
dec
mov
hlt
ja
dec
and
add
xchg
sbb
push
xchg
andb
clc
aad
cmp
ret
scas
enter
cmc
or
xchg
sbb
jmp
pop
fs
pusha
das
jmp
pop
movsl
mov
push
jg
test
stc
jns
loop
dec
mov
push
pop
push
or
les
in
pop
push
insl
dec
rclb
fiadds
aaa
mov
sub
xchg
gs
movsb
test
pop
loop
clc
iret
and
mov
pand
cmp
mov
clc
and
outsb
jp
stc
inc
not
sti
jbe
jno
or
pop
jp
icebp
pushf
clc
pushf
add
dec
jns
scas
adc
cmp
xorl
andb
pop
jo
mov
add
mov
ja
shll
in
xchg
cmpsb
mov
fdivs
mov
inc
mov
xor
stos
cld
cltd
xorb
ja
inc
fdivr
push
test
into
dec
sbb
cmp
lret
pushf
jp
insl
test
jecxz
fsubl
xchg
or
insb
stos
push
outsl
mov
xchg
xchg
add
xchg
shl
dec
xchg
mov
fisttpl
fdivs
jmp
mov
pop
jp
mov
jne
inc
push
xor
cwtl
dec
div
js
cld
movhlps
sbb
hlt
iret
xchg
cmp
inc
ja
fisubrs
push
sbb
or
iret
aas
lods
mov
push
icebp
data16
insw
mov
xchg
dec
mov
fisubrs
xchg
das
fisubl
mov
mov
adc
repnz
pop
jb
jns
jle
jge
insb
or
jo
pop
xor
repz
int3
leave
jae
jl
jmp
mov
pop
xchg
mov
into
mov
dec
rorb
shll
dec
jbe
cmp
rcr
mov
add
pop
cmp
out
cmp
enter
insl
jmp
xor
cmp
xchg
mov
out
dec
movsl
mov
add
clc
inc
arpl
xchg
dec
aad
jmp
push
mov
test
sbb
scas
sbb
jb
fucomi
jle
dec
cmp
and
cmp
fisttps
mov
and
pop
ljmp
addr16
jnp
cmpsb
cli
or
pop
rcrl
pop
sets
cmp
or
movsl
xchg
lret
sub
ds
dec
adc
les
js
mov
push
and
push
lret
mov
xor
inc
inc
add
jne
cltd
cmp
xor
int3
jnp
mov
mov
xchg
mov
xor
fwait
and
mov
mov
dec
std
icebp
cmpsl
lcall
sti
out
push
adc
mov
sub
in
nop
mov
sub
js
wbinvd
aas
lret
xlat
jbe
xchg
nop
jmp
out
xchg
jns
push
sbb
push
xor
test
lods
adcl
mov
aas
clc
sub
gs
cli
cltd
add
clc
cmc
cmp
jns
sbb
xlat
pop
out
mov
mov
shll
sub
jbe
sub
push
scas
adc
dec
adc
cmp
inc
rcll
jp
je
fsubrs
sbb
inc
mov
addr16
cmpsl
and
push
outsl
repnz
daa
ss
int
pop
mov
xor
mov
icebp
inc
outsl
and
rol
or
popa
idivl
out
imul
pushf
in
sahf
pop
stos
in
stos
test
fwait
popf
icebp
xchg
xchg
cmp
faddl
fists
or
xchg
inc
ja
push
mov
mov
or
and
rcr
xor
and
ficompl
daa
xor
jb
push
orl
fsubs
mov
mov
fstpl
or
hlt
push
iret
rorl
into
and
dec
cmp
sub
xor
cmpsl
repnz
xor
and
or
clc
fldenv
int
aaa
xchg
pop
es
pop
or
xchg
adc
leave
inc
cmp
cmpl
nop
pop
mov
jmp
dec
jmp
pop
rolb
enter
std
mov
sub
stos
cmp
fs
xchg
imul
inc
ds
scas
sub
jle
and
js
les
mov
pushf
dec
cmp
lcall
mov
js
aam
imul
cmp
jg
xor
test
mov
pop
mov
mov
les
cmc
mov
sti
imul
cli
sbb
lahf
lret
mov
mov
mov
lock
push
bound
mov
cwtl
fdiv
data16
nop
sbb
pop
add
mov
jl
mov
sbb
mov
adc
cwtl
jno
mov
push
push
les
sahf
push
stos
int
xchg
and
or
outsb
fcoml
enter
cmc
insl
pop
jl
jnp
jp
push
das
dec
push
lret
jle
push
push
loop
sahf
mov
or
xorb
shlb
cmpsb
mov
ret
fidivs
jmp
mov
mov
push
jbe
pop
cmpsl
sbb
xchg
clc
aaa
je
or
movups
xor
scas
push
out
or
sbb
aad
sub
pop
jno
mull
notb
sar
sti
adc
xchg
pop
stos
adc
jg
dec
fnstenv
in
cs
stos
incb
test
and
pushf
sbbl
jns
jns
out
mov
in
push
cmp
lds
repnz
jmp
add
stc
jl
sbb
sub
mov
or
sub
jecxz
push
mov
sub
pop
mov
mov
xchg
xlat
mov
mov
and
sub
stc
push
and
xchg
sti
xor
jae
mov
cld
fdivl
leave
or
jp
ss
pop
push
lods
lea
cmp
sbb
pop
cmp
in
add
loopne
add
mov
mov
mov
outsl
xor
repz
lea
cmp
xchg
push
int3
shll
out
in
sub
and
jmp
pop
pop
fdivp
xchg
xor
add
adcb
jle
pop
icebp
dec
cmp
testb
lods
pop
icebp
fwait
xor
or
adc
push
mov
pop
lods
cmp
dec
xchg
nop
xchg
stc
pop
ja
pop
mov
xchg
mov
push
std
pop
ljmp
fmull
lret
push
and
mov
lea
xabort
rcll
cmp
cs
ret
aam
rclb
loope
pop
fs
sbb
test
fcom
movsl
mov
pop
sbb
mov
mov
in
xchg
adc
mov
out
loopne
in
shll
and
cltd
idiv
dec
or
andb
push
add
rcl
jb
orl
mov
sbb
sti
pushf
xchg
in
mov
add
mov
xlat
ror
or
dec
push
push
sbb
fstl
dec
jmp
jnp
test
mov
sbb
repz
jge
shlb
push
jge
add
sbb
mov
sbb
aad
xchg
aaa
pop
add
mov
jae
js
repnz
loop
cmp
pop
fstp
cmp
mov
mov
pop
aaa
cmpsb
jb
push
aad
cmp
nop
pusha
loope
xchg
and
mov
loop
push
lods
xchg
or
inc
enter
pop
lldt
int3
stc
adc
cmp
jg
ds
jge
mov
mov
leave
xchg
jg
ret
hlt
lods
pop
mov
notl
mov
xchg
mov
jp
dec
dec
jg
dec
mov
mov
mov
xor
insb
aas
test
lds
imulb
cmpsb
clc
fisttpll
lret
sbb
in
and
xchg
push
mov
ficoml
cmpsb
push
rcr
mov
insb
mov
xchg
cmp
xorl
mov
sti
or
dec
jae
xchg
add
les
or
scas
cmc
and
enter
test
or
sbb
jb
xchg
xor
inc
push
popl
sub
mov
ffreep
in
addr16
and
iret
out
and
mov
inc
or
fsub
fisttpl
add
ljmp
mov
xor
les
mov
jl
ret
push
les
lcall
sub
dec
insl
mov
dec
add
outsb
mov
xchg
cmp
mov
adc
lock
popf
cwtl
insl
inc
sti
xchg
dec
pop
inc
xchg
int3
or
push
stos
idivb
push
cmp
cmp
aad
lret
jle
enter
bound
sbb
mov
pop
leave
adc
mov
nop
push
rcrb
rolb
pop
decl
push
jae
out
xor
dec
addl
push
cmp
sbb
mov
scas
jne
jp
adc
es
xor
mov
out
xchg
xchg
dec
call
inc
repz
and
mov
and
mov
sbb
dec
push
xor
fdivr
loopne
int
pop
sub
int3
fidivrs
test
xor
push
xchg
pop
pop
mov
rcll
sbb
and
call
or
cwtl
mov
adc
fdivr
sti
cmp
int
or
push
cltd
stc
ret
inc
inc
mov
fwait
repz
push
xchg
dec
cwtl
rcrl
jmp
int3
cmp
push
mov
jno
add
les
ret
jge
loope
pop
lret
sub
outsb
cwtl
pop
rcl
push
xchg
push
mov
lods
and
ficomps
icebp
stos
insl
in
xchg
mov
xchg
popf
push
pop
loop
and
shrl
test
dec
je
negb
xor
xor
sbb
popf
sbb
and
ffree
fildl
add
inc
add
adc
loop
imul
or
mov
inc
pop
outsb
movsb
pop
sbb
mov
adc
scas
mov
sahf
pop
cwtl
mov
xchg
jle
push
push
cmpsb
fucompp
mov
ret
jl
dec
mov
aaa
or
pop
dec
in
popf
jle
shr
and
mov
jb
sub
into
xchg
sub
iret
dec
mov
filds
mov
inc
add
js
leave
and
dec
imul
rcrb
mov
ret
xchg
add
jle
pop
pop
xor
fs
cmpsb
pusha
dec
mov
dec
sti
xchg
aad
imul
jg
aad
dec
repnz
cmp
mov
shlb
mov
xchg
sbb
xchg
stc
fldt
outsl
lods
push
loop
mov
mov
pop
push
dec
pop
pop
ja
icebp
cmp
and
xor
arpl
cmp
loop
setno
sbb
inc
cmp
pop
mov
mov
add
sbb
cmc
push
into
inc
aaa
xchg
ds
sub
idiv
add
lock
cs
cmp
fsubrp
leave
cld
add
xor
mov
out
mov
fisttpl
lret
cmc
loop
mov
inc
mov
shrb
inc
mov
lods
xchg
mov
lret
push
mov
call
dec
or
xchg
sub
inc
xchg
mov
pop
or
es
in
pop
ss
enter
daa
xchg
mov
cmp
jns
das
stos
xchg
ja
push
mov
mov
movsb
add
mov
dec
cmpb
daa
call
insl
cmc
in
lea
push
mov
pop
pop
xor
jge
stos
scas
xor
addr16
adc
or
push
data16
cmp
cwtl
aaa
nop
paddsb
fwait
outsb
cbtw
cmc
cli
cmp
shlb
push
jl
sub
xchg
popf
shrb
push
push
stos
jo
pop
cmp
mov
dec
and
outsl
or
jnp
test
mov
inc
add
dec
jp
jl
notb
in
mov
jg
icebp
movsb
mov
ret
cltd
test
rcr
int
out
inc
jnp
lods
insb
pusha
and
push
js
sbb
sub
dec
pop
and
sub
push
insb
repnz
pop
adc
mov
loop
jae
pop
neg
inc
out
cwtl
loope
adc
push
xor
mov
das
int3
aaa
cmc
lods
repnz
lods
inc
sbb
push
pop
int
xchg
out
xorl
andl
push
addb
mov
add
push
aaa
aam
xlat
adc
sub
lods
mov
std
push
insb
test
jg
or
xchg
dec
and
cld
mov
inc
subl
jb
popa
js
and
stc
dec
and
lahf
repnz
mov
mov
fisttpl
mov
jecxz
cmp
dec
pop
sub
push
push
push
push
dec
mov
pop
pusha
fwait
hlt
cmpsb
mov
mov
ror
mov
sti
adc
loopne
call
test
in
imul
adc
in
mov
cs
sub
add
out
scas
jb
movsl
bound
push
shrl
pop
xchg
xchg
and
int3
insb
repnz
mov
mov
pop
mov
fnstenv
adc
xchg
sub
jp
insb
popl
cmc
xor
add
hlt
shrb
xchg
mov
ja
xlat
movsl
xlat
or
push
push
fimuls
add
push
lock
mov
jge
les
inc
rclb
insl
mov
in
hlt
popa
insl
test
repz
outsl
fs
lcall
cmpl
je
xchg
or
mov
cld
pop
insl
dec
negb
inc
dec
shlb
imul
jo
push
add
push
movsl
das
push
mov
cmp
lods
inc
xchg
ds
imul
cwtl
xchg
push
xchg
pusha
mov
mov
mov
lods
fisttpl
js
mov
or
jl
lods
incb
fs
int3
mov
dec
idivl
negl
jo
sbb
push
and
mov
ds
lds
lcall
in
test
xor
jbe
frstor
mov
ljmp
cs
fsubrs
sub
lea
adc
pop
sahf
cmp
loope
or
shr
inc
mov
dec
cmp
frstor
out
sbb
push
fldt
jl
pop
rorb
jg
push
out
mov
mov
fstpl
pop
mov
xchg
push
call
clc
out
loope
addl
lock
mov
fsubrs
pop
orb
aaa
lods
push
dec
nop
aad
test
ds
jle
mov
jbe
xor
sbb
inc
repz
pop
xchg
out
in
adc
sub
or
xchg
das
xlat
adc
and
sub
mov
sub
xchg
and
push
pop
mov
aad
mul
pop
cmp
sbb
add
jae
xchg
jo
lret
cmp
ss
stos
ljmp
fdiv
and
sub
iret
push
lods
push
or
lods
push
dec
jno
inc
sbb
popa
xchg
pop
dec
cmp
lods
xchg
mov
enter
sbb
xchg
cmp
lret
dec
fwait
in
cmp
daa
lret
sbb
popa
out
xorb
adc
jge
mov
stc
mov
cmp
dec
push
in
pop
pop
je
dec
sub
dec
aad
jp
pop
jbe
inc
mov
nop
xchg
xchg
add
cwtl
mov
movsl
inc
and
loope
incl
push
out
fcoms
sbb
dec
hlt
in
jnp
mov
jge
lret
jl
lods
push
sahf
lods
les
dec
xchg
leave
xchg
sub
outsl
push
jle
xchg
inc
dec
pop
pop
bound
mov
shlb
jmp
jge
shl
in
mov
cmpsl
fnsave
lea
cmp
fwait
dec
xor
js
shl
loope
jae
scas
rolb
ss
out
lods
xorb
pop
push
jno
mull
xchg
push
xchg
and
mov
gs
push
rcrb
mov
push
loop
xor
mov
repnz
aam
adc
push
mov
dec
pop
fwait
inc
and
and
sub
push
divl
xor
xor
scas
cld
gs
cmc
enter
and
into
cmpsl
fwait
mov
jl
cmp
sbb
scas
and
jmp
xchg
fdivrs
jg
sarb
test
ljmp
fwait
movsb
lea
fistps
or
sbb
ds
hlt
je
cmp
cmp
das
dec
mov
std
pop
xchg
div
in
aaa
shlb
push
in
push
loopne
sub
and
aad
ds
push
lds
sbb
jle
or
stos
mov
faddl
div
imul
push
ror
idiv
push
inc
cld
mov
xchg
loope
out
push
jg
xchg
and
outsb
xchg
sub
jns
lret
flds
loop
fisttpll
addr16
push
test
cmp
dec
mov
scas
leave
push
mov
popf
inc
dec
fdivrl
cmpsb
hlt
ljmp
addr16
out
enter
sbb
mov
ret
out
add
rorb
ret
repnz
negl
sbb
addr16
in
or
mov
adc
dec
jae
rclb
mov
cmpsb
jmp
cmp
pop
rclb
or
adc
inc
mov
pop
xchg
out
in
pop
inc
dec
xorl
cld
inc
pop
mov
shl
dec
cmp
jp
outsb
lahf
into
leave
out
push
call
jbe
inc
cmp
or
and
dec
cli
int3
js
es
adc
loop
dec
imul
mov
popf
push
movd
xchg
adc
rorb
fiadds
add
dec
cmpb
xor
mov
popa
add
fstpl
jmp
js
fdivrl
scas
icebp
js
sub
adc
fcomps
pop
mov
nop
fisubl
clc
shll
cmp
mov
sub
push
mov
data16
push
adc
jmp
imul
bound
sub
stos
xchg
pop
sbb
scas
int3
into
out
and
inc
in
lods
jo
dec
fcoms
fwait
inc
das
lods
xchg
or
cmpsb
lret
addr16
gs
push
add
pop
or
pop
mov
lret
adc
push
frstor
xor
mov
mov
or
mov
jle
mov
fcomps
push
adc
mov
pushf
mov
lahf
cmp
out
lds
mov
popa
repnz
mov
push
mov
sbbl
xchg
mov
mov
rolb
cmp
dec
movsl
mov
mov
cltd
cmp
mov
insl
inc
push
lahf
jp
add
nop
jb
repz
int3
xchg
mov
lret
lds
push
or
js
sbb
and
mov
mov
inc
arpl
sub
cmp
add
cltd
lcall
stos
mov
mov
mov
enter
call
cmpsl
insl
lds
sub
test
loopne
xchg
stos
mov
jle
pop
or
scas
popf
aam
cmpsb
int
sbb
mov
and
sub
mov
cwtl
add
jne
js
ds
outsb
into
adc
addb
jp
dec
pop
jmp
mov
in
xor
inc
or
mull
xchg
xchg
ja
test
pusha
cmpsb
jo
sub
mov
sbb
loop
adc
aas
and
movsb
add
cmp
or
xlat
sarl
es
inc
xchg
jle
out
sbb
fildll
fmuls
lea
lret
cli
arpl
enter
mov
mov
push
or
mov
icebp
imul
ljmp
popf
mov
jmp
push
or
movsb
or
iret
mov
lret
jle
mov
jge
push
cltd
dec
mov
test
mov
in
or
nop
cld
je
dec
popa
or
mov
cmp
fwait
sahf
mov
pop
cmp
cld
mov
into
pop
sti
test
scas
loop
les
dec
addr16
inc
ret
add
lock
push
loope
test
xlat
cmpl
mov
popf
jp
aad
jmp
mov
jae
jns
pusha
hlt
mov
mov
mov
jno
repz
adc
popa
jl
push
mov
push
rcr
xchg
push
ds
ja
mov
aas
cmp
cli
and
imul
push
mov
fstps
inc
in
call
pop
ret
mov
int
lret
xchg
out
mov
hlt
xchg
stos
aam
mov
fstps
subl
xor
xorl
cmp
xor
push
insl
add
test
adc
add
push
xchg
push
sbb
jno
adc
sti
cltd
shlb
mov
dec
lahf
sbb
icebp
mov
cmp
scas
test
movsl
sahf
outsb
pop
das
repnz
xor
mov
fistl
xchg
lahf
loope
sbb
lods
clc
addr16
jbe
xchg
xor
push
inc
mov
push
mov
clc
push
enter
movsb
std
cmc
sub
sbb
add
imul
xchg
push
xor
faddp
mov
loopne
fistps
mov
shrl
mov
mov
fsts
mov
pop
ret
rcr
mov
dec
pop
lock
fsub
inc
sbb
push
sbb
push
lock
mov
adcb
fldenv
cmp
repnz
cmp
sahf
loopne,pn
pushf
or
int
cmpsb
push
mov
cwtl
pop
add
mov
out
leave
push
dec
push
pop
int3
add
push
mov
sbb
fsubr
iret
xchg
mov
in
imul
or
inc
xchg
lret
mov
mov
ljmp
lcall
imul
ss
leave
subl
test
popa
out
add
push
sahf
ja
cmpsb
inc
fistl
scas
jno
jl
push
mov
xchg
jl
hlt
or
imul
cltd
int3
cmp
sbb
push
lods
aad
xchg
inc
add
push
jle
mov
jbe
clc
imul
xchg
cld
or
pop
fsubs
xchg
in
loopne
mov
pop
push
xchg
dec
and
fnsave
cmc
jge
shlb
pop
cmp
jg
mov
or
xor
pushf
mov
adc
fidivrl
pop
jle
dec
pop
imul
inc
daa
leave
ljmp
mov
add
sub
inc
lods
add
and
aam
mov
jmp
data16
mov
cld
filds
aad
cmp
rolb
mov
xchg
cltd
repnz
fst
mov
lods
jae
pop
stc
js
or
mov
dec
js
clc
or
xchg
test
cmc
dec
jae
jne
iret
popa
pushf
xchg
fwait
scas
dec
ret
jp
dec
cmp
subb
push
push
movsb
enter
inc
sbb
cmp
leave
push
ret
cmp
es
loope
cmpsl
pushf
sub
jmp
in
pop
jns
sbb
mov
cs
push
sahf
pop
mov
outsb
xor
test
lods
lods
cmpsl
sbb
iret
push
sti
jmp
shlb
aaa
sbb
xchg
fisubl
inc
mull
roll
iret
adc
adc
sbb
js
mov
pop
add
push
ljmp
js
or
inc
sbb
jl
lea
rcll
xor
mov
nop
or
xchg
xlat
dec
mov
sti
lods
mov
sub
notb
xchg
cmp
xor
int
inc
xchg
sub
ret
cmp
scas
pop
jmp
cli
repz
pop
rclb
inc
aaa
xchg
dec
iret
outsb
xlat
js
fstl
fistl
shrb
ja
popf
sub
add
pop
dec
enter
sub
mov
hlt
std
dec
paddd
cmp
pop
mov
fsts
jnp
cmp
es
shl
push
stc
xorl
cmpb
out
repnz
cmp
inc
and
decb
jno
lods
sti
into
pop
mov
mov
mov
loope
or
xor
movsl
cmp
arpl
ss
adc
pop
ss
mov
adc
xchg
dec
dec
gs
in
xor
fsubl
xchg
xchg
test
ret
int
mov
stos
in
ret
and
dec
xor
out
xchg
add
fidivrl
iret
cwtl
or
mov
notb
pop
insl
movsb
mov
popf
je
testb
lret
inc
iret
jbe
cwtl
push
popf
insb
sbb
push
or
fsubr
call
sbb
test
outsl
cmpsl
cmp
and
stc
fldt
xorb
cmp
jl
ds
data16
sub
jnp
ficoml
jno
call
adc
cmp
stos
test
adcl
jge
pop
mov
pushf
in
faddl
ficompl
inc
lds
popf
xchg
shr
mov
mov
mov
jge
testl
jecxz
and
pusha
add
hlt
push
sarb
in
bound
movsb
jl
lret
pop
push
add
icebp
jl
in
lods
mov
xor
dec
in
mov
pop
out
nop
movsb
std
aam
push
add
inc
jno
mov
dec
push
jo
adc
movsb
nop
jecxz
imul
jecxz
shl
cmp
rcr
push
int3
mov
jnp
popa
nop
sbb
fisubs
loop
cmp
shrl
lods
movsl
and
or
add
es
lods
xchg
push
mov
enter
cltd
dec
js
int3
inc
movsb
test
pop
scas
cmp
aas
gs
aad
insl
loope
sar
cltd
mov
sub
cmpsl
adc
mov
imul
addb
mov
mov
push
jns
mov
lock
shll
xchg
rcrl
fldt
sbb
jnp
sub
popa
idivb
mov
aad
shll
add
incb
push
aaa
ret
das
int
adc
mov
btc
jno
mov
lods
xor
jb
lock
or
clc
mov
inc
jecxz
bound
insl
cltd
sbb
inc
leave
or
ljmp
test
loopne
cmp
inc
jl
stos
insl
jno
jmp
lods
mov
push
sbb
orb
pop
pop
lret
push
aad
fisubs
fwait
adc
adc
cmc
fs
popf
in
int
add
test
in
mov
jecxz
jle
cltd
push
repz
cmp
cmp
jns
bound
jp
stos
pop
fistpl
mov
cmpsl
adc
icebp
cmp
lret
ja
cmpsb
pop
insl
pop
dec
inc
idiv
rcrl
out
mov
or
jl
lret
dec
dec
loopne
mov
mov
add
rcrl
negb
mov
fstpl
std
fucomi
add
movsb
sbb
adc
jb
ret
pop
xlat
ret
clc
mov
push
inc
jo
cld
jo
dec
mov
jge
fnstenv
pusha
test
fbstp
xlat
fidivrs
pop
push
out
adcb
fstpl
movsl
push
mov
or
loope
int3
sti
mov
sbb
cmpsl
inc
sahf
les
sbb
daa
sub
cmp
jb
xchg
insl
mov
aas
inc
inc
sub
aam
aas
mov
scas
out
je
in
sahf
add
xchg
mov
push
dec
cwtl
push
jl
repz
sti
cltd
mov
or
addl
out
cli
mov
xchg
xchg
fisubl
fmull
repnz
dec
xlat
inc
adc
inc
jns
es
xchg
lods
jns
out
mov
push
dec
mov
cmp
xorl
loop
push
pop
inc
jge
outsb
cs
cmp
sbb
stc
ja
cwtl
mov
ds
fsubl
jnp
out
in
adc
jns
test
cmp
adc
loop
mov
call
mov
pop
add
lcall
xchg
dec
dec
sbb
sbb
xchg
in
xor
sti
jnp
xor
loop
aad
mov
fmuls
loope
xchg
sahf
in
pop
sbb
pop
push
repz
pop
pop
leave
mov
pop
cwtl
ss
ja
popa
dec
dec
or
dec
insb
xor
pop
arpl
lock
jmp
lods
shlb
out
sar
pop
fisubs
fcmovne
lods
push
jno
jg
dec
and
or
in
fiaddl
lock
cmpsl
stos
xchg
xchg
xchg
ficoml
pop
sbb
jns
ljmp
or
dec
ds
aad
mov
xor
sub
in
cmpsl
pop
sbb
push
xor
lods
insb
jnp
sub
cmp
mov
sti
sub
inc
mov
and
mov
cwtl
xchg
test
xchg
mov
lods
xchg
sti
sub
or
imul
shlb
out
sub
sbb
into
loop
xor
dec
ja
jb
xchg
dec
mov
xchg
addr16
pusha
mov
std
xchg
cli
out
inc
ja
mov
sub
and
add
dec
sub
sbb
sbb
mov
mov
orb
aam
aad
pop
inc
cmp
pop
and
fsubrs
push
popf
inc
xchg
movsb
or
sub
js
and
cmpsl
les
mov
cmp
addr16
test
mov
fcoms
jge
mov
fcomip
xor
in
fisttpll
push
dec
dec
mov
mov
out
sbbl
cmp
pushf
mov
aas
cmp
movsl
cmpsb
jb
mov
push
xor
stc
rolb
cmp
inc
add
daa
pop
cmp
xchg
je
jp
jmp
sbb
jmp
sti
loopne
ret
repnz
fs
pop
ficoml
clc
lahf
push
orb
fidivrs
icebp
test
leave
push
or
mov
adc
fwait
pop
xlat
ficomps
xchg
xlat
xor
stc
test
addr16
push
or
ja
sti
hlt
pop
mov
mov
mov
fsubrs
mov
cli
xchg
ds
in
dec
cmpsb
adc
sarl
out
popa
push
jno
aas
dec
fnstsw
sbb
and
inc
popa
lret
jp
popl
cmpsl
out
ljmp
stos
lock
aaa
shlb
push
and
cltd
or
aam
mov
enter
mov
fistps
jnp
mov
lock
stos
mov
pop
test
stos
pop
mov
mov
pop
xchg
add
clc
inc
std
sbb
sbb
in
push
push
les
lahf
sbb
inc
sbb
push
adc
int
xchg
int3
es
xor
jp
push
push
out
cmp
test
xchg
push
dec
addr16
mov
push
lods
push
jbe
mov
arpl
or
adc
popa
push
mov
dec
repz
fs
shll
sbb
call
fidivrl
jbe
pop
pop
adc
sub
fst
add
int3
mov
mov
hlt
andb
and
xchg
popa
cmc
popf
out
xchg
loope
push
div
sti
jge
stc
fdivrp
push
jmp
mov
cld
sub
popl
mov
in
call
lods
mov
stos
iret
xchg
dec
leave
cs
mov
aas
pop
movsl
xchg
sub
lahf
cmp
cld
test
fucom
fldl
out
add
cld
daa
jnp
adc
sub
jbe
jp
leave
fdivp
mov
jge
cmp
push
rorb
leave
idivl
sbb
hlt
mov
mov
les
dec
cmpsl
js
cmpsb
cmp
pop
fidivs
and
mov
add
test
icebp
sub
xchg
enter
ljmp
fcomps
push
mov
jl
mov
push
popf
mov
adc
cmp
add
mov
dec
out
adc
xchg
notl
adc
inc
add
and
xor
jmp
mov
inc
fidivl
stos
adc
mov
push
addb
push
jl
std
fsubl
inc
adc
inc
or
or
popa
repnz
push
and
test
aas
adc
mov
inc
sub
jl
je
pop
push
or
inc
inc
cmpsb
push
and
call
lcall
icebp
idivl
pop
sub
cwtl
mov
stos
repz
cltd
pop
std
fdivp
in
cmpl
in
sub
xor
stos
dec
shlb
mov
rolb
adc
pop
ss
stos
jns
mov
push
mov
or
bound
neg
xor
inc
lret
push
aaa
enter
rol
sbb
call
lahf
je
int
add
lock
and
mov
adc
sub
pop
and
pop
mov
aaa
roll
lahf
cmp
cmpsl
test
cmp
cmp
or
out
shl
cmp
pop
add
in
pop
ret
popl
ja
push
pop
dec
imul
xchg
outsb
je
repnz
nop
cld
dec
cltd
stos
push
pop
insb
xchg
jne
out
lods
insb
lea
mov
loopne
rcrb
inc
aam
push
mov
sbb
push
sub
ret
push
push
dec
shlb
jae
pop
icebp
adc
sub
cwtl
dec
pop
addl
mull
imul
push
xchg
xor
loope
xchg
hlt
lea
xchg
mov
int3
mov
xor
cmp
xchg
fistpll
pop
rcll
leave
scas
popa
int3
dec
outsb
aad
and
lret
aad
js
inc
sub
jmp
inc
add
jns
imul
and
or
jbe
jb
ss
add
loopne
test
cwtl
aas
aaa
lock
add
lret
aas
fs
nop
push
mov
pop
jle
mov
lock
xor
push
insl
add
xchg
scas
push
jno
sbb
or
adc
nop
les
jae
jne
mov
mov
test
je
push
or
mov
push
lods
inc
repnz
in
fstpl
inc
sbb
decl
aas
ja
jmp
pop
notl
cmpsb
bound
ficoms
mov
icebp
call
and
xor
xor
sbb
cmc
mov
and
add
xchg
data16
mov
push
or
out
xchg
sarl
jp
jno
repnz
addr16
jecxz
scas
and
cmc
std
xchg
loop
je,pn
lret
mov
mov
xor
mov
dec
repnz
je
arpl
xchg
xchg
ss
and
imul
mov
dec
push
cltd
jg
test
iret
shl
out
scas
js
insb
inc
stc
cmp
movsl
dec
ret
xchg
cwtl
lods
mov
in
mov
lods
push
mov
aam
xor
movsl
fwait
popfw
xchg
movsb
mov
mov
in
enter
mov
ret
lods
inc
test
jns
jmp
repnz
fucomp
jb
jns
fisubl
mov
inc
jae
cmp
cli
lods
inc
cld
ss
cmp
xchg
nop
addr16
mov
rcll
add
leave
jno
add
ljmp
aas
mov
rorb
insl
insb
jecxz
es
lods
popf
pop
sbb
jb
jno
cltd
enter
mov
inc
mov
sbb
mov
adc
inc
imul
outsl
xabort
cld
mov
pop
call
pusha
jae
fstps
mov
int
xor
int3
push
mov
sarb
jb
or
cmp
pop
cmpsl
or
pop
jno
js
cmp
test
test
pop
scas
cmp
jecxz
or
jo
ffreep
push
add
sarb
stos
sub
sbb
mov
cltd
aaa
inc
es
cmpsl
test
jecxz
inc
xchg
and
test
mov
lds
cmp
insb
adc
sbb
push
shll
movsl
inc
push
cld
rorl
and
dec
mov
lea
jb
add
aas
pop
iret
ds
push
cwtl
cmp
dec
xchg
mov
scas
xchg
cwtl
nop
pop
jecxz
push
sub
out
adc
jle
pop
xchg
data16
repz
cmp
jp
pop
jae
nop
sub
cmp
cmpsl
scas
testl
insb
jae
xor
je
cli
cmpsb
int3
jg
cmp
repz
out
mov
or
mov
ja
mov
mov
xlat
jne
sti
adc
ss
mov
fnstcw
aas
rolb
inc
das
add
test
cwtl
push
sub
rcrb
out
scas
lods
sbb
pop
pop
mov
mov
js
and
popl
mov
mov
xor
mov
fwait
and
clc
mov
dec
inc
data16
mov
cwtl
adc
mov
add
clc
pop
lea
add
pop
aad
and
test
inc
pop
rolb
stc
jp
mov
out
sbb
incb
mov
jbe
dec
push
dec
imul
mov
or
inc
pop
sub
or
mov
jbe
xchg
xchg
movsb
dec
dec
lock
repz
ja
mov
sub
addr16
inc
aad
add
aam
std
xchg
mov
lcall
loop
inc
mov
mov
imul
pop
lahf
scas
mov
adc
inc
fwait
aam
mov
inc
push
scas
cmp
or
imul
daa
xor
cld
inc
dec
cmp
in
adc
jns
imul
cmp
pusha
mov
add
out
lods
scas
movsb
mov
mov
dec
pushf
mov
in
imul
pop
scas
out
mov
sbb
jb
pop
out
loop
and
jle
pop
xchg
or
xchg
xchg
pushf
shll
fcmovu
nop
lods
notb
fldcw
repnz
mov
add
popf
dec
mull
inc
mov
lods
sbb
mov
cmp
icebp
aaa
xlat
aam
mov
mov
int3
mov
aaa
xor
movsl
pop
push
xor
into
jnp
cmp
jno
aaa
pop
dec
cmpsb
jnp
enter
adc
cmpsl
gs
in
cmp
xchg
fs
aam
or
push
adc
cmp
mov
call
hlt
add
addb
addb
out
ja
addr16
in
dec
pop
rcll
add
shrl
cs
in
add
bound
insl
jmp
in
mov
or
sahf
cmp
push
inc
jb
sub
ret
dec
leave
jae
push
repz
arpl
enter
mov
scas
dec
mov
imul
dec
or
das
mov
out
fistps
mov
dec
adc
sub
fmuls
jl
dec
faddl
push
mov
repnz
daa
adc
or
push
icebp
or
es
das
or
and
repz
nop
popa
jl
sbb
js
cmp
fimuls
sbb
inc
js
js
sbb
les
test
repz
xlat
repz
sbb
jg
scas
lcall
sbb
xchg
xchg
fcomps
xchg
into
fcompl
sbb
test
iret
mov
cs
fildll
inc
shrl
cmpb
mov
pusha
push
or
out
mov
xlat
rclb
stc
add
test
mov
loopne
xchg
sub
mov
jecxz
mov
xchg
sub
jno
mov
sti
mov
mov
sbb
test
adc
mov
mov
mov
pop
lods
sub
mov
lea
xchg
pop
add
bound
cmp
mov
std
push
int
lods
xchg
cmp
lret
sbb
xchg
mov
mov
jmp
push
xchg
mov
mulb
push
mov
enter
xchg
and
add
repz
test
cmpsb
add
push
outsb
int
pushf
push
outsl
inc
arpl
rcl
jnp
mov
hlt
js
cli
inc
es
aaa
push
test
cmp
sti
inc
push
faddl
jno
mov
sub
push
pop
mov
daa
jnp
pop
aam
push
cmp
loop
jecxz
push
lret
xchg
mov
fmuls
cmpsb
fldl
lock
call
inc
xor
out
push
imul
xor
mov
es
inc
testl
cmp
mov
push
jl
mov
mov
stos
cmp
push
sbb
push
inc
imul
movsb
and
push
sarb
cmp
cmp
int3
mov
das
jb
bound
lds
insb
stos
mov
push
dec
cmp
scas
xchg
imul
dec
or
ljmp
loopne
cmpsb
pop
mov
test
mov
jp
call
arpl
xchg
push
andl
jmp
jo
lock
mov
imul
sar
push
testb
cli
jge
enter
jg
mov
ljmp
xor
scas
cmp
xchg
fsub
ret
push
fidivrs
lock
test
pop
push
jg
sub
dec
push
loopne
xor
lret
fsubrl
sbb
cs
shll
scas
int3
movsb
jno
cmp
scas
mov
cmp
subl
inc
adc
pusha
xchg
jbe
movsb
lcall
jl
es
test
nop
pop
xlat
mov
push
push
adc
fldcw
jmp
outsb
or
jne
mov
int
pop
mov
add
dec
stos
pop
cmp
sbb
jecxz
pop
xchg
or
pushf
pop
and
xor
inc
xchg
push
xor
mov
insb
pop
fdivrl
repz
pop
jb
fistpll
xor
xor
cmp
jg
jnp
dec
lret
pop
push
inc
mulb
lods
loopne
movsl
sbb
inc
inc
test
jle
xor
jge
add
loop
adc
or
sub
lods
in
xchg
and
loope
test
jno
aam
inc
mov
sbb
dec
ds
jg
out
dec
adc
xchg
imul
and
push
xchg
movb
adc
xchg
stos
jecxz
popf
fidivrl
test
ss
stos
cmp
mov
int
dec
pushf
mov
icebp
enter
jns
mov
in
add
fstpt
xchg
jp
push
cmp
std
jmp
mov
dec
movsl
and
testb
jns
xchg
mov
shlb
mov
lret
out
pusha
add
fadds
mov
movsb
dec
in
jg
pop
mov
fiadds
aad
mov
std
scas
add
cmpsl
mov
das
cltd
std
mov
iret
int
inc
add
test
sbb
dec
xchg
mov
stc
inc
jge
pushf
pop
test
xchg
ljmp
pop
pop
mov
jge
push
and
push
adc
jle
cwtl
cmpsb
fnstcw
cmpsb
sub
dec
and
jg
cmp
cmp
aad
sbb
xchg
or
out
clc
inc
rclb
leave
scas
stos
push
ds
xor
roll
les
adc
and
add
and
adc
jb
int
sbb
add
loop
jle
cld
pop
mov
push
popf
shl
addl
xchg
movsb
stos
cmc
jnp
xor
fidivl
in
xchg
mulb
loope
mov
cs
and
pusha
push
jg
mov
scas
bound
cmp
or
cmp
mov
mov
inc
mov
aad
cwtl
add
sti
sbb
stos
mov
cwtl
mull
lcall
mov
sbb
or
movsb
inc
mov
push
movsb
mov
bound
cli
cmp
enter
mov
jge
in
cmp
ret
pushf
fwait
pop
pop
sti
sahf
inc
stos
jp
nop
xchg
mov
fsubrl
jmp
fstpt
mov
dec
sti
adc
pop
pop
daa
mulb
in
aas
sub
pop
repz
sbbl
xchg
cmp
xchg
adc
jne
push
icebp
fwait
mov
cwtl
push
dec
cltd
cmpsb
xchg
jns
cmc
cltd
mov
clc
cwtl
popf
or
jo
test
loop
test
insl
mov
pop
cmp
and
ret
lds
aad
or
xchg
jno
mov
lcall
cmp
cmp
or
testl
lcall
cmp
sti
cmc
lahf
jne
ja
pop
xchg
lretw
jnp
out
out
adc
hlt
jp
jb
sub
or
movsb
shrl
xlat
push
rolb
inc
fbstp
add
push
rorl
mov
int3
cld
lcall
adc
jg
pop
out
sbb
outsb
or
ror
push
jg
push
jl
jmp
lcall
cmp
jns
jbe
or
leave
mov
or
mov
cmpsb
stos
inc
testb
addl
orl
xchg
xchg
stos
pop
clc
cli
mov
pushf
movsb
push
adc
lea
int
call
cwtl
nop
adc
or
dec
cmpsl
cmp
out
adc
cmp
sub
cmovnp
adc
xchg
fsubrl
pop
xor
xor
push
nop
lret
xlat
add
push
cmp
fwait
dec
popa
rclb
xchg
nop
addr16
lods
mov
jb
in
jb
sti
jl
xor
clc
aad
mov
lret
mov
inc
xchg
add
inc
repnz
mov
mov
clc
lea
mov
jae
mov
out
insb
jle
fnsave
mov
imul
mov
or
jb
fsub
mov
lea
in
xor
lret
fcomp
sub
and
mov
sbb
mov
int
cld
adc
pop
mov
in
pusha
ja
or
cmp
aam
enter
nop
aaa
insb
mov
ret
mov
fistl
mov
cmp
dec
xchg
nop
add
neg
or
arpl
loop
mov
or
cmpsb
enter
xor
push
lea
adc
adc
xchg
sub
xor
js
or
pushf
rcl
sub
jbe
add
sbb
xchg
xor
or
sbb
aad
adc
jno
cld
mov
xchg
in
inc
mov
enter
aaa
leave
mov
push
sbb
rcll
or
push
in
fstp
inc
pop
dec
xchg
jecxz
aam
inc
jns
push
shll
daa
addr16
jmp
push
sub
cwtl
mov
stc
icebp
cmc
dec
sar
mov
xrelease
pop
sbb
mov
mov
push
jne
lcall
or
pop
push
sbb
jbe
mov
xchg
lcall
data16
cmp
nop
fdivrl
mov
daa
push
jl
push
insl
inc
push
adc
les
or
push
push
stos
jp
cmc
in
les
push
pop
pop
mov
pushf
out
push
cltd
mov
rolb
and
leave
arpl
jmp
in
sub
xor
aaa
cmpsb
jns
pop
xchg
es
jo
icebp
adc
icebp
jg
pop
aaa
loope
jb
in
cmpsl
jmp
jne
ss
jo
mov
adc
ja
sbb
push
les
dec
xchg
ljmp
js
rolb
imul
bnd
mov
cmp
adc
and
pushl
adc
pop
pushf
adc
sbb
lret
xchg
xchg
pop
mov
inc
clc
test
xor
fldenv
test
jns
cmc
xchg
and
jg
sbb
jo
cmp
jge
pusha
push
fsubl
xchg
mov
dec
cmp
mov
jns
pop
sub
sbb
out
cmpsl
sbb
aas
xlat
adc
sbb
dec
pop
movsl
divb
jp
int3
shl
push
push
jb
jnp
sti
sti
and
jg
jno
sti
mov
mov
mov
dec
xchg
mov
dec
or
mov
enter
and
imul
aad
jnp
loope
lods
lcall
fcmove
mov
cmpsl
jp
iret
js
popf
or
xchg
fistl
pop
push
lock
ds
push
dec
pop
lock
shll
movsb
cmpsb
xchg
out
mov
inc
outsb
mov
arpl
fisubs
sub
fsubrs
cli
leave
or
mov
sub
xchg
mov
add
ds
leave
insb
sub
cli
testb
and
add
push
call
adc
cli
or
icebp
test
sbb
adcl
clc
imul
shlb
jge
int3
push
call
push
inc
or
and
jp
push
fmuls
adc
mov
mov
mov
mov
sti
call
fsubl
dec
inc
xchg
sbb
sbb
incb
fimuls
mov
dec
xor
pop
cs
jmp
lcall
mov
sub
lock
pop
int3
lods
mov
or
cwtl
fldenv
adc
sti
cmpsl
jne
js
in
xchg
push
cltd
mov
mov
ss
out
hlt
adc
adc
rcl
dec
into
cmpsl
aaa
shrl
sbb
std
and
fdivl
inc
jbe
jno
adc
xchg
dec
sub
je
sbb
jmp
lret
pop
mov
push
rorb
mov
adc
insb
cld
mov
jo
cwtl
cwtl
out
cs
imul
lods
lock
inc
cmp
or
cltd
add
imul
into
shlb
js
test
frstor
pusha
xchg
push
add
push
sti
xor
mov
xor
test
xlat
js
leave
or
movsl
or
jns
aad
jl
arpl
xchg
imul
mov
enter
sarl
mov
lss
cld
xor
cmp
inc
std
int3
dec
or
mov
jne
mov
icebp
mov
lea
js
std
popa
popw
dec
lods
jecxz
test
icebp
mov
leave
inc
leave
adcl
cmp
roll
mov
inc
xchg
outsb
xchg
popa
add
mov
xchg
xlat
adc
fisubrs
sbb
repz
mull
fimuls
and
adc
add
push
push
sub
mov
int
mov
scas
xor
dec
dec
or
adc
push
inc
out
xchg
mov
sarb
lea
inc
pop
test
stos
xor
cmp
incb
push
jle,pt
or
arpl
xchg
cwtl
cmp
mov
int
mov
xor
popf
sbb
rep
dec
std
mov
mov
pop
cmp
mov
repnz
adc
dec
mov
int3
stos
test
inc
and
aaa
ljmp
testl
jg
mov
and
mov
enter
xchg
sbb
inc
ds
xor
pop
sub
adc
push
mov
mov
mov
xchg
jb
shl
and
add
es
lcall
and
mov
pop
cwtl
in
xchg
aad
adc
es
adc
or
aam
sbb
sbb
sub
cltd
xlat
frstor
pop
repz
dec
xchg
mov
fimull
sbb
idivl
inc
xlat
out
xchg
lds
cwtl
sbb
out
sub
jmp
inc
fsubr
sbb
loop
pusha
out
or
shrl
sub
jne
aam
xchg
ret
sbb
ret
mov
pop
clc
cmc
xlat
xchg
pop
loope
jns
cli
js
scas
das
mov
lds
leave
jg
insl
jae
mov
jge
js
cld
mov
xor
lahf
clc
shrb
xorb
gs
xchg
hlt
dec
cmp
scas
mov
or
push
sub
dec
insl
sbb
mov
insl
sub
fimuls
mov
pushf
mov
pop
mov
push
push
xchg
or
das
jnp
add
sbb
imul
mov
mov
xor
mov
std
ja
nop
dec
and
scas
dec
ds
scas
mov
add
iret
cmp
mov
movsb
repnz
mov
jmp
cmpsl
add
cmp
and
sub
sub
js
in
dec
cs
jns
push
cwtl
pusha
push
dec
int
iret
push
fwait
lods
cmp
pop
xchg
push
mov
loope
test
cmp
mov
push
pushw
xor
pop
cmp
mov
rorb
imul
jns
dec
enter
xchg
out
cmpsb
sbb
movsl
addr16
push
pop
adc
ja
out
fdivrs
sbb
cltd
mov
ds
movsl
sub
ret
or
mov
repz
movsb
dec
jmp
sub
dec
xchg
and
fists
insb
test
sbb
dec
je
lret
cwtl
adc
sbb
and
loopne
xchg
je
inc
xchg
imul
mov
ret
and
dec
lds
fsts
sahf
mov
ret
mov
test
fmulp
mov
cmp
push
inc
popl
div
cmp
jle
les
daa
pop
jecxz
xor
es
jns
pusha
sub
gs
pusha
mov
std
test
gs
mov
push
nop
adc
das
or
sbb
mov
lret
mov
push
push
jg
cmp
pop
pop
lds
pmulhw
ret
insl
addr16
sbb
movsl
mov
xor
dec
fistpll
xchg
les
lret
sahf
cmp
mov
stos
js
sub
ds
push
sub
outsb
lods
add
cmp
pop
sub
pop
xor
inc
test
mov
jbe
aas
cmc
mov
in
aad
pop
sub
xor
inc
or
into
sbb
loopne
loope
imul
mov
jnp
xchg
pop
ficoms
sub
cmp
clc
jno
pop
xor
jg
lods
sbb
dec
mov
fwait
sti
jno
cmp
xchg
or
mov
movsl
add
and
aaa
sbb
test
fstpl
movsb
mov
mov
or
sub
mov
jns
sbb
divl
movsb
push
cld
xchg
pop
jge
lea
repz
cmc
mov
je
scas
xchg
xchg
shl
loope
jg
xchg
movsb
popa
push
jno
push
icebp
test
sbb
scas
or
mov
xor
inc
iret
cmp
lahf
jmp
and
or
push
push
lods
jecxz
pop
sub
repnz
pusha
xor
xor
sbb
scas
mov
xchg
push
aaa
popa
lcall
pop
std
push
orl
mov
loop
or
jle
mov
lret
add
mov
or
pop
outsl
sti
mov
xchg
ljmp
std
aas
lret
add
ss
aaa
inc
lea
add
rol
sub
or
sarb
lea
push
out
lret
jbe
jmp
leave
jae
lahf
cli
outsl
dec
imul
jno
insb
ss
mov
jbe
in
pop
mov
mov
hlt
push
into
rorb
mov
cltd
cmp
sti
jb
fs
scas
xchg
cmpb
shrw
jge
xchg
mov
mov
cmc
enter
in
int
jmp
cmp
cld
or
push
inc
scas
push
add
lahf
mov
lcall
fstpt
jno
xchg
dec
cmp
mov
push
sub
stos
inc
mov
cmp
or
pop
adc
out
jnp
aaa
inc
sub
ja
stos
dec
pop
fcomip
fisttps
jge
or
push
ds
mov
daa
lea
sbb
dec
xchg
pushl
jae
movsl
leave
stos
xor
xchg
mov
xor
pop
pop
fmulp
xchg
es
inc
stos
pushf
imul
cs
sbb
cmc
push
mov
mov
fst
loop
jns
cmp
std
jle
add
outsl
dec
cld
pop
pop
push
clc
dec
inc
scas
imul
cmp
jg
enter
cwtl
pop
add
sub
insb
fucomp
dec
int
pop
xchg
loop
push
cmp
popf
cmp
repz
jmp
imul
xorl
pop
adc
jmp
int
iret
aaa
mov
adc
mov
aam
outsl
jge
mull
call
mov
jo
aas
mulb
notb
xchg
xchg
ffree
inc
stos
punpcklbw
pop
push
imul
sbb
bound
rcr
mov
pop
ja
arpl
add
dec
and
cld
or
sahf
into
shll
paddw
jb
jp
in
outsl
pop
dec
test
sahf
movsb
dec
mov
loop
mov
fldt
fwait
pop
call
shrl
sar
mov
lea
data16
arpl
jbe
xchg
jmp
push
mov
pop
ja
inc
xchg
and
pop
out
lcall
pop
fidivl
aaa
xchg
into
out
and
cmp
frstor
scas
fnstsw
shll
add
push
and
inc
mov
mov
movl
mov
ljmp
fwait
ds
sub
test
pop
neg
addb
adc
mov
movsl
ja
bnd
or
int
cmp
jge
xchg
pop
xor
xor
sbb
xchg
adc
ficoml
test
xchg
adc
sbb
xor
pop
fs
fisubl
sarl
sbb
add
cmc
pop
pop
jle
inc
inc
ficoms
pusha
ljmp
and
out
in
pop
enter
mov
mov
aaa
ret
gs
test
adc
pop
cli
lret
mov
cltd
mov
pop
mov
ja
sbb
mov
out
or
lods
jb
sbb
dec
push
ljmp
test
mov
adc
pop
outsb
xchg
js
jnp
mov
push
mov
pop
xchg
jmp
xchg
punpcklwd
cld
jno
repz
cwtl
jp
mov
das
mov
out
nop
lret
out
lea
sub
cs
es
movsl
inc
out
xchg
lods
hlt
lods
cmp
cmp
sbb
cmp
movsb
xor
cmpsb
and
bnd
pop
ja
sbb
or
sarl
cmp
scas
add
inc
dec
jg
xchg
jmp
out
pop
sub
jmp
push
push
adc
sub
cmp
jb
jecxz
into
jg
in
inc
mov
pop
or
pop
push
mov
fisttpl
mov
dec
inc
shl
jnp
cmpsb
cmp
lea
mov
nop
repnz
inc
fsubs
outsb
xchg
cwtl
sub
dec
cs
cmp
xchg
movsb
inc
loopne
inc
jnp
movsl
sbb
mov
dec
xor
rcr
lea
jmp
inc
test
out
outsb
popa
in
jp
and
or
push
mov
xchg
xchg
jo
lea
lods
sbb
sub
push
ss
mov
sub
dec
and
shl
in
mov
imul
adc
fiadds
xchg
cmp
mov
push
cmc
dec
cmpsl
lods
stos
cmp
jns
and
movsb
ja
sti
or
mov
lods
int3
cmpsb
nop
lea
lds
sub
xchg
lahf
mov
mov
ss
push
ljmp
pop
popf
push
pop
xor
push
lcall
bound
int
sahf
insb
cwtl
je
sbb
out
mov
sti
mov
adc
xchg
popf
test
push
hlt
popf
sbb
test
jb
or
dec
add
jle
sub
imul
dec
push
sti
pusha
xchg
xchg
fsubs
js
test
mov
mov
pop
mov
ds
clc
rolb
lret
jne
jbe
or
push
outsb
add
rclb
int3
js
mov
adc
ficoms
adc
mov
push
and
rorb
stos
dec
movsb
test
aaa
pop
lods
dec
enter
xchg
fs
mov
popl
repz
nop
les
je
leave
cmp
fwait
add
mov
in
mov
out
movsb
and
jb
imulb
lods
hlt
jno
in
dec
ficomps
and
out
ja
pop
xchg
mov
mov
aam
scas
xchg
ret
push
inc
push
xchg
mov
sub
cmp
insl
and
jns
jae
imul
stos
aad
sarl
js
outsl
into
out
sub
push
fisubs
xor
cmp
sub
nop
mov
pop
dec
sub
repz
into
lods
scas
push
sahf
mov
mov
jle
mov
xor
fwait
orb
xorw
adc
imul
jno
sbb
aas
adc
ret
sbb
lds
push
rolb
aam
imul
mov
lcall
and
inc
inc
or
xchg
mov
je
cmp
movsb
xlat
inc
std
xchg
pop
insl
ljmp
out
cltd
inc
mov
pop
sbb
cmp
and
push
mov
dec
mov
mov
lods
loopne
jae
push
add
lcall
hlt
mov
ja
jbe
std
mov
adc
sbb
jle
pop
xchg
jo
je
or
lret
sbb
xor
arpl
add
push
sub
jg
test
dec
arpl
jbe
mov
push
lds
repz
mov
clc
rcrb
sub
lods
mov
cmp
adc
ja
fbstp
movl
fcomip
xor
dec
shrl
jo
loop
dec
int
dec
adc
repz
mov
outsb
repz
inc
insl
je
mov
gs
inc
add
sub
dec
mov
dec
mov
and
dec
pop
es
sahf
aam
icebp
clc
lea
or
out
cltd
les
sbb
pop
out
outsl
cwtl
pop
cli
jmp
push
rcrb
jbe
popf
loopne
jns
push
xchg
xchg
jg
faddl
testb
inc
stos
dec
add
xor
jns
push
sub
sbb
nop/reserved
aam
jle
cmp
push
movsb
or
or
mov
es
outsl
in
jmp
jne
dec
dec
add
pop
jl
inc
xor
aaa
lahf
repz
sbb
cmovbe
adc
fxch
xchg
push
fs
push
scas
xchg
adc
dec
rclb
sub
inc
mov
loop
xor
mov
mov
lret
scas
into
xor
mov
sub
inc
scas
fdivs
mov
imul
jmp
scas
mov
push
imul
mov
or
and
imul
mov
xlat
jnp
jbe
ja
insb
cltd
jecxz
cmp
xchg
jo
add
aas
js
jb
sub
pop
cltd
mov
jb
decb
hlt
sub
sbb
sbb
lahf
les
rol
xor
inc
cmpsb
mov
hlt
mov
xor
push
sbb
add
loopne
aaa
jae
push
cld
test
jbe
aas
in
jge
lock
sbb
xchg
loopne
cltd
dec
pop
mov
adc
mov
das
push
popf
mov
leave
dec
push
popf
push
sbb
repnz
cmp
xchg
xchg
inc
loopne
sbb
mov
icebp
ss
jae
mov
mov
js
addr16
data16
push
dec
test
ret
mov
or
mov
sbb
add
leave
push
inc
pop
add
xor
or
pusha
jmp
jno
into
sbb
lret
xchg
cmp
scas
cmp
mov
mov
add
jl
lods
adc
sub
adc
test
popa
inc
pop
and
push
mov
sahf
jg
mov
mov
leave
pusha
pop
xchg
xor
ret
jno
push
xchg
mov
rclb
call
xchg
xchg
fsubp
fstps
mov
mov
rorb
xchg
pop
andl
scas
jmp
ds
in
adc
ljmp
inc
mov
cwtl
xor
lret
cmc
adc
adc
mov
in
push
arpl
sbb
inc
mov
cmp
inc
pcmpeqb
xchg
out
dec
movsb
daa
and
and
sbb
dec
jl
xlat
repnz
dec
out
pop
lret
dec
shll
lea
cmp
add
mov
shll
xor
je
mov
push
xchg
in
pop
jmp
sbb
aaa
xor
mov
push
fcompl
adc
popf
dec
loopne
movsl
mov
jecxz
mov
sti
push
inc
push
jl
gs
popf
stos
mov
add
test
mov
inc
dec
hlt
in
in
dec
cmp
scas
in
loopne
mov
les
mov
aaa
iret
jbe
cwtl
xchg
pushf
testb
jno
xchg
pop
aaa
idivb
mov
mov
shlb
jp
sbb
clc
leave
pop
enter
mov
jp
ljmp
sub
mov
fstl
jno
stos
and
aad
sbb
add
or
pop
mov
pop
mov
jg
mov
pop
scas
pop
push
inc
xor
sub
data16
pop
pop
aad
xchg
jb
fld
jle
jns
ljmp
mov
test
pop
fsubrs
xor
xchg
push
leave
sub
rclb
push
test
xchg
jnp
movsb
adc
sbb
or
cli
rolb
mov
js
cmp
cli
aam
test
std
xchg
mov
adc
test
mov
mov
dec
adc
ds
cmp
sbb
data16
push
mov
decl
out
out
inc
in
nop
xchg
pop
mov
push
out
xlat
leave
repz
loope
imul
cmp
adc
lret
mov
inc
or
xchg
cmp
add
outsl
xor
rorl
xchg
rolb
sbb
mov
cmpsb
insb
data16
jle
jle
xchg
pop
xchg
or
or
jmp
mov
insb
xchg
push
xchg
xchg
popf
repnz
and
push
shlb
or
xchg
ljmp
pop
add
lret
call
fwait
jp
jl
pusha
movsb
jl
cmp
mov
mov
shl
fists
and
jl
lahf
dec
xchg
jo
push
imul
cmp
or
lods
jmp
sbb
jge
mov
pusha
in
in
mov
out
test
adc
or
mov
cmpsl
movsl
cld
push
mov
inc
cmp
dec
jne
mov
inc
mov
push
clc
nop
call
scas
neg
sbb
cmpl
divl
rorl
lods
mov
fs
and
icebp
nop
or
push
mov
inc
insb
dec
sti
movsl
fldl2t
outsl
or
popf
xor
js
scas
pop
jge
insb
fisttpl
push
icebp
scas
hlt
sahf
or
icebp
jb
pushf
push
xor
cltd
add
add
mov
ja
rorb
mov
and
adc
mov
arpl
pusha
popl
push
fwait
and
kmovb
out
pop
or
mov
add
mov
jns
pop
leave
xchg
enter
xlat
or
cli
xchg
jmp
rcl
aaa
mov
fnstenv
jns
dec
jg
or
aaa
arpl
xchg
repz
decb
or
lea
adc
sub
jge
cmp
mov
cmpsl
pushf
leave
cmpsb
movsb
adc
fsts
loop
ds
pop
add
hlt
xchg
mov
test
imul
pop
adc
jge
into
xor
mov
cmp
sub
stos
sbb
mov
cmp
push
int3
arpl
or
push
inc
xchg
xchg
xor
cld
inc
js
pusha
sti
pop
and
sbb
daa
cmpl
mov
inc
jbe
mov
addr16
sub
je
inc
out
mov
in
push
dec
push
nop
lcall
push
movsl
stos
insl
sub
imul
in
and
out
sub
stos
loop
jne
push
outsl
push
inc
xchg
shld
inc
or
mov
cmp
sahf
sbb
bound
shrl
aaa
cmp
pop
dec
mov
sub
in
fmul
jg
ficoms
bound
sar
cmpsl
and
and
repnz
dec
adc
or
mov
push
test
push
pop
ljmp
enter
mov
xor
mov
imul
arpl
xlat
mov
push
mov
fimuls
mov
mov
mov
sub
cs
arpl
ja
dec
imul
pop
mov
mov
inc
fmull
mov
sub
mov
gs
int3
push
cmpsb
adc
xchg
mov
fiadds
xchg
pop
pop
les
cld
xchg
std
xor
xlat
mov
dec
sub
andb
cld
inc
lret
into
mov
scas
mov
push
mov
xadd
cmp
xlat
daa
xchg
mov
xchg
sarb
push
test
scas
maxps
pop
fsubl
push
inc
rolb
shrb
out
push
cmc
ret
mov
gs
jnp
sbb
aas
mov
xor
push
dec
adc
adc
fstpl
cmp
or
test
andl
stc
adc
and
xor
gs
leave
in
push
fdivrl
adc
fwait
dec
fs
or
xor
pushf
cld
fnstenv
fs
push
sarb
daa
mov
cli
int3
pop
mov
dec
es
push
sahf
data16
inc
fldenv
lock
mov
inc
rclb
dec
mov
sahf
fisubs
adc
pop
ss
mov
inc
fs
fs
jno
pushf
jl
hlt
loope
cmc
jnp
mov
jle
or
in
movsl
mov
stc
sbb
and
jge
lret
mov
sbb
arpl
cs
mov
lcall
or
movsb
mov
sbb
imul
inc
iret
in
mov
das
push
mulb
push
int3
inc
subl
aam
shl
repz
fmul
xchg
xchg
int3
jne
iret
or
push
xchg
adc
push
nop
mov
icebp
inc
neg
sub
adc
jge
xchg
cs
jno
jb
in
or
xchg
mov
inc
shll
adc
sbb
cmp
lods
call
cli
jmp
jo
and
aas
push
imul
adc
xchg
shrb
out
mov
out
pop
lods
push
mov
dec
loope
stos
sub
outsb
inc
jb
int3
cltd
orb
mov
xchg
mov
xchg
mov
popf
adc
scas
mov
xchg
lds
mov
popa
fildl
push
jo
int3
sbb
nop
sbb
xor
sub
inc
fwait
into
sbb
aas
inc
or
es
sub
pusha
hlt
or
jnp
mov
add
dec
popa
lock
into
out
adc
xchg
xchg
dec
insb
jbe
jle
cmp
into
lret
int
pusha
pop
arpl
adc
es
dec
xor
sti
das
pop
jle
mov
cld
mov
add
mov
repz
push
jle
mov
mov
push
mov
mov
and
jns
pop
add
or
pop
jnp
xchg
jnp
leave
xor
pop
cmc
ret
mov
jg
or
or
stos
xchg
and
mov
fsubr
lods
mov
add
into
clc
into
sub
vpmaxsw
adc
xor
into
pop
jo
iret
jl
mov
lcall
push
insl
stc
in
and
nop
into
test
aaa
repz
mov
pop
cli
jg
sti
mov
leave
xchg
std
sub
jne
mov
push
sarl
cmp
and
ja
jbe
stos
in
mull
jecxz
shrl
scas
push
mov
sub
lahf
xchg
pop
mov
jo
addr16
add
or
cmp
out
or
xchg
aad
or
fists
daa
adc
pop
adc
cmp
pop
rcrb
jge
lods
or
push
mov
lahf
mov
outsb
push
fs
push
mov
vpmacswd
mov
cmp
sbb
lods
loope
or
cmp
clc
cmpsl
test
and
movsb
mov
pop
pushf
cmp
push
mov
jno
mov
jo
hlt
clc
daa
movsb
mov
mov
mov
mov
lock
push
push
sbb
cmp
xchg
fnstenv
movsl
mov
sbbl
fcoms
cmpsl
lods
jo
xchg
lcall
inc
xor
xchg
cmp
jns
fldl
std
cmc
dec
fdivrl
jp
mov
movl
adc
push
xchg
fbld
loope
or
leave
mov
mov
xchg
out
pop
clc
pushf
sahf
push
sub
dec
mov
inc
in
roll
jle
out
aaa
subb
inc
repz
in
sbb
mov
loop
xchg
or
mov
mov
cmp
mov
testb
push
adc
outsb
adc
push
into
push
sbb
iret
sahf
scas
push
inc
in
cli
ret
lahf
stos
test
imul
sbb
and
lods
into
loope
imul
out
cmp
cmpb
cmovle
jmp
orps
dec
dec
arpl
mov
scas
or
xchg
movsl
clc
enter
movsb
std
sbb
mov
push
lret
stos
cmp
add
sbb
mov
mov
dec
mov
in
pushf
repz
je
cmp
enter
leave
sub
pusha
cmp
loope
std
mov
popf
adc
sub
aam
push
jg
aad
xorb
sub
jmp
xchg
rcll
push
das
pushf
sahf
ds
push
js
xchg
mov
aaa
hlt
cs
push
lcall
mov
lods
lahf
sub
mov
cmc
movsb
adc
rcrb
mov
nop
push
in
push
int3
add
mov
jp
dec
icebp
push
inc
xlat
data16
and
shl
inc
mov
sub
out
push
arpl
or
mov
stc
cmp
sarl
or
dec
jno
jl
add
inc
clc
push
popa
test
add
dec
movsb
push
xor
jne
cmpsl
fwait
nop
mov
jns
inc
jno
jmp
or
mov
and
movsl
lahf
outsl
lds
or
fs
or
push
popa
mull
call
sbb
das
shl
adc
mov
mov
jns
sbbb
xchg
outsl
testb
push
daa
inc
pop
jecxz
jp
jmp
in
js
dec
sub
lock
jecxz
xchg
cwtl
adc
or
lahf
notb
mov
xchg
jp
sbb
loop
pop
imul
jno
or
jnp
xchg
rclb
mov
out
fwait
mov
mov
fstpt
push
xchg
jge
add
fneni(8087
and
aas
inc
and
clc
lock
xchg
or
fdivs
xchg
loop
inc
js
mov
push
mov
enter
lret
gs
ss
scas
jae
stos
cmp
hlt
jne
mov
pusha
jbe
outsl
js
mov
mov
cwtl
ret
imul
js
xchg
xor
and
or
pop
mov
jbe
ds
leave
sub
jne
jle
cmp
push
inc
mov
jb
sahf
mov
add
icebp
mov
arpl
lods
dec
jge
call
xor
movsb
cmp
fisttpll
cltd
jns
outsl
clc
jbe
jo
imul
aad
jno
int3
or
inc
fcmovnbe
mov
jp
leave
pop
xchg
test
dec
arpl
jns
adc
orb
cld
nop
pop
cmp
jns
or
outsb
rolb
loopne
ret
aad
add
jne
cmp
xchg
scas
clc
cli
push
push
jecxz
sub
inc
shl
and
aam
test
dec
or
xor
push
push
xchg
shl
lahf
test
and
inc
subl
sub
popf
and
stos
aaa
push
pusha
repz
and
cwtl
lret
add
movsb
adc
stc
dec
aam
in
lcall
shll
cld
jnp
loopne
jg
add
fidivl
adc
inc
out
jle
adc
cmp
push
cmp
jns
into
out
sub
into
mov
cmp
scas
adc
push
push
cmpsb
xchg
adc
mov
aaa
lret
divl
push
jns
or
push
out
jae
fwait
fwait
sarb
push
movsb
mov
call
daa
loop
ljmp
mov
sarl
push
sbb
rcrb
hlt
lods
sub
adc
hlt
or
arpl
lea
repnz
rcrb
popa
mov
xor
aad
sbb
jmp
jecxz
push
insl
or
or
fwait
scas
or
add
inc
imul
lea
pop
lods
cmpsb
cmc
fstpt
outsl
stos
iret
rorl
into
hlt
stos
lea
rorb
clc
cmp
mov
lods
into
adcb
arpl
mov
scas
adcb
mov
lcall
mov
jne
hlt
int
decb
loope
lock
pushf
jecxz
jle
inc
mov
mov
shll
xor
jl
pop
adc
jb
xchg
mov
sbb
lods
mov
xor
adc
movsb
push
pop
pop
cmp
xor
cltd
mov
add
pop
ror
or
aas
cld
js
repz
rolb
insb
mov
leave
lcall
pop
dec
fistps
xor
fucomp
hlt
inc
xchg
pop
loop
jl
mov
pop
mov
int3
stos
adc
sbb
insl
xor
pushf
and
inc
add
popa
cmc
xchg
mov
loope
adc
or
push
xor
push
mov
fistps
xchg
negb
cmpsb
xchg
xor
pop
push
icebp
in
ss
cmpl
adc
xchg
mov
in
fmull
lret
push
jp
bound
fldt
push
addr16
dec
pop
dec
xchg
cmpsb
push
mov
ret
mov
sbb
mov
loope
mov
mov
cmpsb
aaa
fisttpl
js
lret
inc
fadd
test
dec
sarb
aad
movsl
test
lock
mov
dec
sbb
push
enter
jae
sarl
push
test
scas
test
hlt
in
je
jnp
bound
mov
insl
pushf
movsb
sub
mov
scas
mov
pop
stos
fdiv
mov
inc
loopne
cmp
xor
inc
imul
xchg
mov
notl
xor
jle
adcb
adc
idivb
sbb
cmc
fisubs
sub
pop
enter
inc
fsubrp
int
adc
fimuls
enter
dec
lcall
pop
iret
add
mov
stc
leave
stc
je
shrb
add
sub
mov
bnd
popa
mov
push
leave
xchg
xor
loopne
sbb
pop
xchg
adc
lods
repz
cltd
mov
mov
push
pusha
and
mov
xor
aaa
and
xchg
test
insl
sub
dec
jecxz
xchg
push
out
lahf
cmpsl
cwtl
inc
adc
lods
pop
lea
push
xor
push
and
push
or
mov
std
jle
and
sub
lock
cmp
mov
inc
push
push
cmp
jge
push
pop
push
cltd
inc
mov
mov
rcll
cwtl
lcall
scas
jbe
mov
inc
std
jb
lcall
push
inc
icebp
iret
xor
jg
scas
rcll
and
cmp
push
je
test
daa
lods
cmp
jb
mov
xor
pop
jge
xchg
scas
sbbl
insb
add
aad
jns
movsl
pop
xchg
ja
pop
cltd
repz
dec
push
ljmp
xchg
add
mov
and
sub
jnp
inc
dec
mov
sbb
or
fnstsw
scas
lods
and
stos
popf
sub
dec
mov
inc
popa
scas
adc
mov
mov
out
popa
jl
out
movsb
adc
roll
sbb
cltd
ja
jbe
push
inc
sub
sub
imull
mov
or
inc
lods
push
cmp
cmpsl
jle
mov
mov
or
out
cmpsl
xchg
int3
lahf
adc
mov
xor
incl
sub
sub
repnz
orb
cli
pop
ljmp
das
movsl
push
popa
imul
xorl
fmull
xchg
loop
push
test
movsb
push
mov
clc
fnsave
ds
fcom
mov
and
jno
cmp
repz
pusha
jl
ret
lea
into
pop
pop
and
mov
lahf
es
repnz
mov
fnstcw
push
jne
jne
aad
fcmove
pop
rorl
ss
jne
xchg
mov
fisttpll
cmp
sbb
push
and
jae
cs
outsb
ds
jg
repnz
fadds
inc
call
mov
loop
pop
or
gs
pop
outsl
and
out
or
add
pop
out
and
mov
mov
add
repz
imul
dec
inc
lret
adc
xchg
arpl
and
mov
test
mul
adc
xor
cmp
scas
cmpb
fistps
pop
lahf
fs
pop
jnp
stos
insb
sub
out
ret
test
mov
adc
push
sub
push
pop
movsb
mov
fsts
push
pop
js
push
loopne
jge
xchg
neg
pop
cmp
inc
out
hlt
mov
cmp
or
mov
sub
pop
popf
jl
add
mov
jle
cmp
loop
lret
dec
popa
inc
and
subb
mov
mov
loop
push
jno
jecxz
adc
movsl
popa
mov
mov
mov
push
fimuls
mov
mov
test
leave
or
fwait
mov
sbb
pop
pop
in
fstps
cmpsb
xchg
jne
ljmp
push
pop
movsb
lods
sub
jne
sub
es
or
sub
cmpsb
xchg
jmp
imul
or
scas
mov
iret
push
arpl
xor
xchg
push
ret
xchg
les
std
aam
jle
and
lret
mov
iret
pop
and
cmp
adc
ret
movsb
mov
sbb
test
sti
jb
dec
shrb
jae
popa
addb
arpl
orl
jne
pop
repz
mov
sbb
fimull
testb
sbb
cmpsb
gs
pop
lock
std
js
jnp
xchg
pop
out
scas
sub
inc
out
jns
mov
cmp
jle
mov
out
imull
inc
loope,pn
mov
fadds
dec
iret
ret
fucomi
ja
hlt
or
mov
mov
aaa
lahf
xor
dec
push
lds
mov
scas
cld
xchg
movsl
imul
jb
fwait
in
lock
dec
subb
mov
xor
loope
dec
cmpsb
movsb
dec
in
adc
fadds
cli
dec
cs
pop
jmp
aam
jmp
insl
xor
jp
roll
dec
push
mov
inc
in
ds
push
dec
ss
inc
ret
sarb
sbb
das
test
mov
pop
adc
push
pop
je
imul
mov
dec
push
cli
pop
mov
cmp
adc
and
dec
jle
ss
movsb
xchg
and
and
loopne
dec
push
imul
das
inc
cmp
cmpsb
movsl
push
jb
mov
or
ss
or
sub
aad
test
mov
lret
stc
xor
out
loop
dec
and
das
inc
lods
sub
jmp
push
fidivs
and
fdivrp
mov
test
push
jmp
add
jmp
mov
xchg
adc
adc
xchg
int3
xor
push
cmp
cmp
imul
pop
xor
pop
movsb
orl
dec
clc
cld
dec
lahf
xor
fimull
enter
xchg
imul
cmp
mov
rcll
pop
ds
mov
in
inc
cmp
lahf
jl
les
enter
dec
mov
xchg
fcom
mov
adc
clc
xchg
jp
sahf
xchg
sahf
lods
xchg
cmpsl
rorb
jp
pop
movsb
js
xchg
mov
inc
jmp
bound
mov
stos
aas
in
iret
je
jge
dec
leave
and
shrl
aaa
inc
notb
sub
mov
sbb
imul
pop
nop
dec
or
push
cmp
cmp
cwtl
push
ficoms
leave
cmp
xor
mov
dec
lods
incl
int
dec
push
pop
push
pushf
push
push
aad
sub
popw
rclb
dec
mov
iret
out
mov
or
das
xchg
scas
lcall
data16
fwait
dec
jnp
mov
test
xchg
das
dec
jns
sub
js
leave
subps
lds
movsl
or
and
cwtl
pop
xor
cmp
push
xor
cld
mov
add
or
stc
jmp
cld
inc
xchg
push
inc
in
mov
and
js
sbb
mov
aad
scas
test
sbb
push
lods
pop
add
fcmovnbe
ror
addr16
push
hlt
jbe
lods
jbe
add
mov
push
adc
pushf
ret
xchg
jmp
mov
mov
out
mov
mov
rol
xchg
arpl
cmpsl
and
das
aas
test
jge
xchg
pop
ret
cmc
or
pop
es
xchg
push
jbe,pt
lcall
jg
fdivrl
hlt
addr16
ds
in
ds
ss
ret
push
xchg
pop
push
into
xchg
pop
cld
sbb
dec
dec
mov
pop
fcoml
mov
int3
das
xchg
and
popf
test
iret
stos
pushf
pop
repnz
fsubp
in
mov
adc
jl
stc
lock
dec
xor
jno
imul
cmp
into
in
std
call
fmuls
ds
call
add
lock
xchg
and
mov
mov
xchg
sub
xchg
mov
or
in
sub
mov
inc
add
negl
mov
int
cmp
push
lret
outsl
dec
or
mov
popa
pushf
and
xor
nop
stos
or
jb
mov
cwtl
dec
push
mov
xchg
mov
lret
mov
in
mov
mov
pop
test
mov
adc
out
dec
cmp
lea
fwait
add
outsl
dec
xchg
outsl
scas
sbb
icebp
mov
mov
out
ret
outsl
jmp
std
shrb
nop
mov
int
aas
outsl
mov
adc
lcallw
outsb
cmpb
stc
adc
sbb
mov
dec
cmp
xlat
cmpsl
push
pop
stos
jo
decb
test
mov
xor
dec
jae
and
loope
sarb
push
push
out
mov
out
les
mov
test
pop
push
js
xchg
ficompl
imulb
mov
mov
loopne
xchg
sbb
xchg
or
cmp
xchg
push
lret
stc
mov
icebp
call
js
xchg
fmul
xchg
insb
cli
cmp
mov
sarl
shlb
mov
inc
stc
pop
mov
int3
fsub
jbe
movsl
inc
pusha
std
lods
push
movsb
xor
and
rcl
dec
cltd
call
pop
push
sub
jge
pop
rorb
cmp
ficompl
imul
dec
pop
sbb
xchg
and
sbb
push
dec
int
out
mov
lea
imul
mov
mov
movsb
xchg
adc
xchg
ja
sti
cmp
dec
call
je
sub
lock
push
push
andb
mov
lahf
push
xor
jbe
rcl
mov
sbb
and
popf
or
ljmp
mov
cli
mov
cmpsb
xchg
and
dec
stos
push
aaa
sti
fcoml
dec
test
loope
pop
cmp
fiaddl
adc
push
cmp
inc
inc
imul
push
insl
xchg
in
jge
push
mov
lret
cltd
outsb
leave
fcmovne
popa
out
outsl
sbb
add
popf
sbb
ss
int3
in
pusha
mov
mov
cmp
sbb
cli
sub
push
jno
mov
pop
jecxz
ja
jns
adc
das
bnd
hlt
xchg
imul
jns
jo
xchg
inc
mov
std
inc
or
rcl
pop
flds
mov
fnstsw
test
jns
pop
adcb
jmp
ja
cmp
jns
cmpsb
inc
mov
shll
mov
inc
mov
mov
movsl
mov
mov
movsl
ja
ficomps
std
sub
or
xor
add
jb
imul
mov
push
cld
loop
sbb
pop
std
test
int3
sub
out
cmpl
lahf
je
adc
aas
pop
adc
pop
push
orl
call
jnp
mov
outsl
call
je
popa
loopne
out
dec
stos
xchg
and
push
cmpsb
xchg
outsl
fwait
shll
jb
test
movsl
in
negb
test
sub
cmp
mov
xor
daa
enter
dec
sbb
xchg
imul
adc
inc
jp
sub
je
gs
arpl
mov
xchg
mov
cmp
icebp
mov
adc
sarb
dec
negb
icebp
xlat
jno
out
pop
dec
lcall
pop
dec
dec
test
mov
pop
movsb
dec
rorl
cmovnp
add
sbb
shl
nop
push
seto
adc
jae
movsl
and
dec
iret
leave
nop
inc
cmp
data16
in
xchg
stos
pushf
xchg
cmp
sub
mov
arpl
pop
insb
sub
add
sbb
xchg
mov
imul
loop
and
js
dec
fisubrs
in
xchg
inc
clc
mov
repnz
call
es
aam
xchg
mov
lods
sub
add
jb
cmp
add
dec
sbb
xchg
push
add
mov
in
mov
pop
lods
add
jns
ficomps
addb
gs
das
out
jl
and
jb
jmp
fwait
cltd
stc
insb
mov
and
hlt
jns
sti
mov
fiaddl
push
jp
shlb
xchg
in
xchg
mov
das
pop
stos
jae
mov
cwtl
ret
xchg
lcall
fcompl
cmp
ret
cli
lods
xor
movl
cld
sub
jmp
daa
in
and
inc
movsb
cltd
xchg
xchg
pop
cs
movsl
int3
insb
xor
fisttps
fimuls
push
push
or
clc
adc
pop
fstps
jmp
xchg
and
inc
mov
cmp
cmp
es
pop
mov
or
or
xor
add
scas
call
xor
pop
jae
je
insb
icebp
or
aad
imul
lock
shrb
dec
push
je
imul
std
fwait
movsb
xchg
jb
fcoml
mov
xchg
or
cld
out
cmp
fnsave
inc
leave
jae
fsts
mull
fmul
rorb
push
pop
into
adc
mov
ret
je
jmp
sahf
call
jg
dec
inc
cmpsb
xchg
jne
and
and
jne
movsl
subb
cltd
sbb
and
lods
jmp
jmp
mov
pop
fstl
or
repnz
scas
es
inc
cli
dec
xor
dec
adc
inc
xor
ljmp
push
add
mov
jmp
sub
out
push
pushf
cwtl
test
into
movsb
push
push
in
jnp
cwtl
test
vmptrst
xor
out
xor
xor
sub
imul
adc
xlat
jl
inc
leave
xchg
stos
lds
ljmp
pusha
or
push
xchg
mov
enter
sub
bound
dec
lods
jmp
jae
pop
ficomps
gs
or
inc
lret
mov
loope
movsb
outsl
into
les
xor
sbb
pop
mov
fsubs
xor
sbb
mov
jnp
mov
pop
jl
into
into
insl
jns
xchg
jno
out
cmovs
shr
xorb
jo
inc
loope
cmp
mov
mov
hlt
or
xlat
xchg
xor
dec
xchg
mov
rorl
xor
pop
xchg
pop
leave
call
popf
cmp
repnz
fbstp
push
imul
add
lahf
ljmp
out
mov
push
and
mov
jae
sti
fisubl
rcll
sbb
repnz
scas
mov
dec
mov
pop
or
cs
adc
int3
arpl
adc
xor
fwait
push
mov
and
mov
outsb
aaa
out
fidivrs
xlat
or
daa
ror
movsl
stos
pop
cmp
leave
adc
mov
sbb
jbe
mov
jae
inc
add
xlat
insl
inc
outsb
test
push
shll
sti
inc
pushf
mov
cmp
arpl
sbb
filds
dec
fmull
mov
adc
xchg
jae
icebp
jl
pop
loopne
xchg
cmpsb
rolb
out
loopne
jns
add
cld
jl
xchg
xchg
cmp
cmpsb
fidivs
push
pop
mov
aam
push
xchg
or
dec
inc
jle
xchg
mov
push
ret
call
dec
pop
jg
dec
imul
cmpsl
daa
mov
sub
xor
pop
pop
jg
leave
jp
push
sub
daa
mov
shrl
leave
call
push
cld
outsl
aam
mov
push
stos
cmpsl
sarb
arpl
aam
adc
cmpsl
sbb
mov
stc
lock
pop
xchg
mov
test
mov
mov
mov
roll
test
cwtl
mov
les
in
jbe
pop
sbbb
and
ja
sbb
jle
int3
and
dec
loop
fisubl
cmp
adc
push
insb
or
mov
pop
mov
shrl
pushf
pop
ret
pop
jb
in
dec
dec
ficoml
lods
test
dec
pop
mov
pushf
cmpsb
pop
push
mov
mov
lahf
inc
pop
aas
leave
push
daa
xor
lods
das
shlb
add
jbe
and
sti
mov
and
pop
inc
scas
cltd
fcmovnbe
xchg
push
lds
cmp
in
cmp
cmpsl
or
aaa
jl
enter
add
dec
es
scas
cmp
lock
cwtl
aam
enter
jge
scas
lcall
jmp
fwait
jl
loope
scas
mov
push
dec
lods
push
inc
loop
rolb
fcomip
add
dec
inc
mov
pop
pop
fisubl
add
cmp
outsl
jl
lods
add
mov
xchg
call
or
dec
push
sub
ja
mov
cmpsb
mov
pop
call
push
out
repz
popf
adc
fbstp
ljmp
test
nop
sbb
inc
cld
jmp
lahf
mov
mov
addb
push
fs
dec
lods
pop
aad
lods
nop
mov
lock
shl
pop
mov
or
lods
inc
push
cmp
mov
xchg
or
popf
mov
enter
std
pop
inc
popf
cmp
push
inc
jl
add
adc
in
mov
jg
jle
xchg
jbe
pop
out
mov
lds
cmp
pop
or
dec
adc
mov
mov
push
inc
push
int
jo
push
ja
nop
ds
das
mov
aam
rorl
jo
dec
jge
repz
fidivrs
test
fsubrl
cmp
pop
imul
mov
lret
in
push
pop
or
xchg
cmpb
shlb
out
xchg
out
int3
das
sbb
rclb
jg
xchg
add
movsl
pop
mov
fmulp
loope
andl
xchg
dec
nop
mov
popa
cmp
nop
fisubrs
sbb
ljmp
jbe
push
repnz
xor
mov
movsb
sbb
dec
xor
ud0
ja
jecxz
xchg
les
jle
sbb
jmp
ja
js
mov
call
sub
xchg
dec
fisttpll
and
xor
fnsave
fs
enter
pop
loope
or
dec
xchg
ret
cmp
lret
bnd
xor
sbb
xlat
pop
mov
fwait
xor
sbb
in
lods
jl
jl
fcomip
aaa
sti
iret
lods
jno
jnp
jmp
lock
pop
xlat
sbb
out
add
ret
jo,pt
sahf
inc
xchg
sbb
inc
out
cs
aaa
out
out
mov
adc
mov
fadds
lret
jg
fisttps
fcom
xchg
inc
stc
cmp
xor
popf
dec
adc
xchg
mov
push
sbb
clc
jnp
cmp
push
adc
jge
lock
push
sar
and
cmpsb
cmp
stc
jae
adc
cmp
rcr
push
mov
ja
enter
xchg
fisubs
int
dec
lods
inc
pop
mov
shrl
in
or
and
scas
aam
push
outsl
into
mov
aas
mov
jmp
fdivs
adc
push
daa
mov
addr16
mov
movsl
dec
rcr
add
ss
loope
mov
lds
imul
fmuls
in
add
xorl
icebp
fnstenv
pop
fcmovnb
popf
sti
enter
scas
adc
stc
push
testl
jns
cmp
jnp
mov
fdivrs
daa
in
repz
cmpsb
xchg
push
insb
popf
lret
inc
push
add
push
sbb
mov
xchg
leave
add
dec
sarb
mov
lods
hlt
std
test
sbb
and
add
shll
pop
adc
mov
scas
sub
xchg
sub
clc
sar
push
sarl
outsb
mov
fsubl
xorl
dec
push
std
add
aad
pop
sub
cmp
mov
gs
daa
jae
cld
in
shlb
inc
addr16
adc
mov
jge
jb
mov
cs
mov
add
gs
xchg
addr16
sub
mov
stc
pop
jecxz
sarb
push
jno
or
mov
mov
rcrl
negb
sti
jns
insl
adc
sti
inc
mov
adc
pop
xor
push
xchg
jno
jnp
cmp
jnp
jecxz
mov
push
outsl
push
mov
adc
adc
add
call
push
testl
adc
mov
pop
aad
pusha
int
ds
in
mov
rclb
testl
adc
pop
rcl
cmpsl
adc
mov
sbb
dec
mov
mulb
ss
iret
mov
mov
xor
movsb
fnstsw
negb
xlat
int3
pop
aaa
pop
roll
loop
dec
fiaddl
test
add
into
jo
inc
cmp
fwait
add
inc
sub
sbb
fsubr
sbb
pushf
push
push
out
jg
sub
sahf
dec
fisubrs
pop
pop
dec
subl
mov
mov
pop
mov
or
cmp
sti
mov
mov
cmpsl
cmp
cmp
das
cltd
arpl
lods
cmp
les
dec
sub
mov
jo
rcll
inc
insb
add
fimull
bound
fmuls
cmp
cwtl
inc
test
lahf
sbb
sbb
jl
cmpsb
xchg
jo
jnp
cltd
mov
mov
out
jge
xchg
push
pop
test
jge
jl
popf
loope
outsl
fnstcw
jno
movsb
das
andb
cwtl
jle
push
mov
adc
cmp
push
insl
xor
scas
lahf
dec
push
xor
xchg
jae
fsubr
daa
loopne
dec
xor
pushf
movsb
incb
inc
and
push
mov
in
xlat
mov
cmc
sbb
fbstp
fwait
sti
add
push
enter
dec
xor
fcoml
sub
and
sub
dec
repnz
jbe
cmp
in
push
jb
mov
mov
cmp
outsb
xchg
or
jl
push
lock
dec
test
enter
cmp
aad
fbld
mov
repz
jno
push
out
ret
int3
aaa
fimull
sbb
je
sti
sub
lods
cs
xchg
mov
xlat
xchg
sub
lea
sahf
lret
or
lea
add
cwtl
sbb
or
adc
mov
lds
mov
mov
unpckhps
roll
push
fdivrl
mov
in
or
jmp
shrb
lods
xchg
fistps
xor
mov
xchg
xchg
add
add
ret
xlat
jns
pop
xor
push
dec
xor
and
fisttpl
enter
ds
lret
scas
dec
cmpsb
push
loop
iret
cwtl
push
loop
aam
enter
leave
xor
xchg
push
jb
inc
add
add
cmp
ret
outsl
movsl
cmp
les
je
pop
push
les
je
in
adc
mov
pop
and
cmpsb
xchg
pop
mov
out
push
dec
mov
jle
fisttpl
movb
lods
dec
cmp
xor
and
lahf
cwtl
les
xchg
stos
push
or
pop
adc
push
outsb
adc
push
xchg
sbb
dec
lret
nop
mov
mov
rcl
adc
dec
scas
ficoms
sub
test
sarl
sbb
cmp
cwtl
data16
lock
push
aaa
xchg
mov
cmp
xchg
pop
outsl
inc
faddl
fsubp
or
mov
out
pop
pop
push
enter
lock
push
cmp
push
cli
in
add
movsl
or
and
sbb
inc
subb
insl
dec
xlat
sub
push
dec
pop
popa
aas
mov
xchg
sbb
xchg
pusha
mov
xchg
clc
nop
mov
fbstp
jp
mov
mov
sub
stos
xchg
ja
in
dec
xor
aam
add
movsl
andb
cmc
pushf
xchg
arpl
out
stos
mov
test
ror
stos
pop
add
mov
inc
or
pusha
cmp
repnz
ficompl
inc
cmp
scas
idiv
notl
jne
arpl
xchg
jecxz
xchg
xor
push
cltd
icebp
cmp
movsl
mov
jbe
inc
fisttpl
push
xlat
cmp
jecxz
cld
shrl
mov
nop
mov
popf
scas
adc
inc
or
add
jno
sub
push
mov
xor
xchg
movsl
jb
inc
jecxz
pop
sbb
mov
or
dec
out
push
dec
pop
stos
adc
movsl
scas
jge
stc
adc
xchg
mov
cmp
test
mov
popa
divb
push
repnz
dec
inc
xchg
xchg
mov
or
xor
add
push
or
cmp
inc
mov
inc
sbb
cltd
jns
or
adc
mov
sub
popf
xchg
sub
lret
pop
test
test
pushf
shlb
pop
mov
stos
cs
fdivr
and
cmp
psllq
insb
pop
mov
xor
mov
xor
pop
sbb
int
stc
test
fsub
pop
adc
sub
je
sbb
add
stos
leave
or
push
movsl
sarl
push
jae
and
cmpl
pushf
add
sarb
mov
pop
mov
xchg
dec
mov
sub
mov
hlt
scas
testb
xor
sub
or
inc
mov
ret
cmp
add
pop
mov
mov
data16
loop
jmp
or
loop
mov
mov
mov
outsl
push
and
insl
aad
sub
mov
test
xchg
xor
sub
pop
js
mov
jb
fptan
jl
cmp
lcall
xor
mov
pause
fidivrl
scas
or
fcmovne
lods
sbbl
xor
iret
and
cwtl
jge
or
repz
lret
dec
sbb
jo
mov
jmp
test
push
xchg
insl
int3
adc
sarb
das
push
jae
mov
in
repz
push
cmc
sbb
cmp
sarb
jmp
fldl
std
and
btr
cmp
or
mov
fs
xchg
sbb
push
mov
movsl
loop
jno
ss
mov
testl
inc
pop
jmp
push
jnp
daa
sbb
add
out
fcmovnbe
adc
xor
xchg
cmpsb
loopne
mov
and
xor
and
dec
pop
dec
out
std
jmp
push
dec
pop
dec
xchg
fcoml
in
cmp
nop
add
dec
fwait
sahf
mov
mov
sub
or
add
fisubs
jno
add
in
jae
mov
xchg
sub
dec
ljmp
push
mov
clc
sbb
icebp
pop
std
sti
cwtl
jg
nop
in
int
out
sub
sti
mov
repz
jae
push
add
mov
xchg
arpl
movsl
push
mov
fucomp
jl
add
leave
ret
divl
loopne
and
sbb
data16
mov
sahf
fwait
out
mov
xchg
add
repnz
add
lret
xor
sbb
lds
lret
push
cwtl
adc
test
fldl
mov
lods
dec
jle
and
mov
jg
gs
fcmovnb
jmp
bound
pop
sub
cmpsb
sahf
lock
push
popf
push
jl
adc
jnp
xchg
add
popa
cmpsl
aad
sub
jp
arpl
xor
pop
cmpsb
pop
fnstsw
cs
jb
add
inc
outsb
bound
push
dec
repz
inc
incl
aam
loopne
mov
rcll
or
add
nop
popa
mov
jp
mov
mov
or
pop
jecxz
pushf
negb
jae
inc
cmc
sub
popl
clc
test
imul
adc
ficoml
jg
cmp
lret
rcll
xchg
lahf
fists
add
sub
cmp
and
ficoml
in
push
or
mov
xchg
mov
cmpsl
push
mov
dec
jg
adc
testb
adcl
idiv
or
int
nop
and
das
idiv
sahf
popa
push
ficoml
mov
enter
sti
daa
sub
enter
jg
xchg
rorl
push
and
inc
xor
and
cmp
mov
das
ret
inc
js
aad
sbb
stc
in
std
bound
cmc
popa
sbb
jne
or
adc
pushf
xor
pop
notl
xor
mov
pop
push
push
adc
clc
cmp
xchg
cmc
xor
in
fnstenv
fcmove
push
insb
mov
call
jl
lea
cli
mov
jge
imul
repz
inc
mov
jbe
scas
std
jbe
loope
test
aas
jbe
and
or
mov
test
stos
aas
pushl
xor
mov
in
pop
ret
daa
jo
dec
pusha
repz
inc
sub
inc
adc
add
inc
test
and
movsl
jg
xchg
xor
dec
test
js
js
xchg
fsubrl
lret
push
out
jp
imul
push
insb
outsl
imul
int3
ja
mov
mov
and
mov
rorb
call
test
push
data16
movsl
enter
js
mov
into
sub
aas
popa
leave
js
inc
add
shrb
imul
inc
pushf
hlt
add
push
lock
mov
mov
jae
out
dec
mov
rcll
cmp
push
xchg
psubq
or
nop
or
fdiv
hlt
mov
inc
dec
add
adc
aaa
jp
mov
cld
fwait
and
jns
xchg
cmovb
lods
popl
hlt
cmp
clc
out
faddl
lds
mov
repz
stc
fcomps
lea
adc
xchg
xor
movsb
dec
mov
pop
outsb
or
imul
cmp
shl
jnp
and
sub
cmp
in
adc
dec
pusha
cs
sub
mov
or
sub
ficoms
mov
jae
inc
or
nop
push
xor
mov
cmc
mov
aad
sub
inc
add
xchg
clc
inc
fs
out
insb
pop
cmp
addr16
jmp
jbe
xor
subb
cwtl
insb
xchg
adc
int
pushf
xlat
sahf
push
mov
movsb
enter
shll
mov
scas
mov
insl
jo
hlt
mov
pop
xchg
pop
int
inc
test
pop
mov
adc
xor
int
mov
data16
lahf
cli
jns
xor
repnz
sub
sub
jecxz
icebp
or
testb
mov
or
mov
dec
inc
jns
inc
mov
push
sarb
jne
rorl
mov
sbb
shl
imul
cmc
or
out
lods
dec
dec
adc
cmpsl
mov
xor
clc
xchg
jge
mov
into
xchg
push
pop
loopne
mov
les
fwait
popa
sub
cmp
outsb
sub
out
pusha
aad
lock
mov
push
stc
int
lock
add
in
cmp
pop
or
pop
jg
xchg
push
icebp
pusha
andl
movsl
into
fadd
ja
bound
cmpsl
aam
popa
fcoml
pop
push
test
dec
nop
jb
ficomps
add
dec
sbb
sub
stc
lahf
push
mov
add
xchg
adc
xchg
jb
adc
adc
rolb
mov
or
mov
mov
pop
inc
pusha
sub
pusha
add
out
movsl
test
and
xlat
and
push
das
out
int
cmc
sbb
jl
push
stos
xchg
inc
dec
jno
pop
mov
loope
or
and
jbe
in
aad
jae
lods
lea
repz
rclb
icebp
lods
repz
mov
dec
mov
negl
xor
xor
ret
xchg
enter
icebp
jge,pt
inc
mov
inc
add
mov
int
addl
rcrb
adc
call
aam
mov
scas
lret
sub
or
mov
inc
and
aad
stos
lahf
xchg
mov
xchg
mov
dec
xchg
stos
clc
push
fnstcw
xchg
fwait
sub
mov
fwait
bound
testb
in
outsb
inc
int3
cli
mull
cmp
stos
push
and
mov
inc
add
mov
dec
xor
outsb
mov
cwtl
push
adcl
push
push
pop
push
xchg
dec
std
fisubl
adc
push
push
xchg
mov
leave
or
mov
in
mov
dec
shlb
push
inc
lock
lods
xchg
xor
or
rol
lret
sub
push
outsl
ds
mov
xchg
enter
cs
xchg
dec
pop
lock
mov
out
fbld
cld
stc
adc
int3
repz
sbb
push
mov
xchg
pop
mov
lock
cmp
jbe
adc
ret
mov
mov
repnz
pop
or
jge
rol
popf
out
out
cmpsb
xchg
aaa
jg
pop
mov
dec
ljmp
stc
and
or
adc
in
jnp
dec
divl
sub
and
fbstp
push
pop
cmp
xchg
xor
or
inc
or
mov
mov
xchg
iret
ss
leave
adc
pop
ret
mov
pop
sbb
dec
lock
jge
clc
pop
popa
pop
and
js
repnz
push
sarb
in
sbb
mov
or
mov
lret
push
lock
xor
mov
adc
cmpsb
shlb
add
loop
sub
ja
xchg
push
test
push
pop
cmc
in
push
cmc
cmp
pop
mov
pop
loop
lods
jl
push
rcrb
cli
sarl
add
incb
fisubrl
pop
push
and
inc
mov
adc
cli
jns
push
adc
dec
mov
cmpsl
fstpl
xchg
in
lcall
aam
ljmp
mov
sub
pop
data16
add
jl
cmpsb
sbb
div
in
xchg
repz
mov
mov
pop
push
rclb
rol
das
ret
add
out
add
lods
mov
mov
scas
dec
inc
in
in
jl
out
xchg
jne
xlat
outsl
dec
fnstenv
pusha
popf
xor
mov
push
dec
in
jl
jge
inc
sbb
inc
mov
pop
cs
xlat
mov
mov
outsb
outsb
jnp
mov
std
push
sbb
add
push
mov
xchg
jbe
or
jp
jno
mov
cmp
and
cmp
movb
dec
push
mov
lds
clc
rcrl
shlb
mov
add
fmuls
addr16
jge
not
mov
mov
int
lods
ret
dec
andb
adc
movsb
in
ss
xchg
or
push
sbbb
insb
jbe
mov
mov
mov
ds
dec
in
fnsave
cmp
mov
mov
mov
lahf
cmpsb
xor
arpl
mov
xor
adc
mov
jge
cs
cli
rclb
xor
xor
add
mov
dec
sbb
mov
inc
shll
xchg
fsubrl
imul
in
pop
pop
dec
mov
pushl
ds
fdivrl
xor
fcomi
adc
adc
sbb
cs
xchg
loope
cmpsb
inc
outsl
mov
jp
cmp
mov
fbld
out
push
aad
cmpsl
shrb
sbb
sub
insl
sarb
loope
call
out
push
fwait
xchg
enter
fwait
dec
dec
jno
loopne
sub
lods
pop
or
fildll
mov
dec
mov
pop
mov
insl
adc
push
ret
fcmove
fbld
sar
or
out
dec
andb
cli
scas
loope
fisubs
mov
not
mov
je
lock
lret
stc
lret
lods
push
repz
sbb
or
cltd
popl
adc
jns
fwait
pand
and
jmp
cmp
jbe
pop
fs
pop
aaa
adc
and
ret
adc
stos
xor
outsl
repnz
scas
mov
repz
bound
add
das
push
mov
dec
mov
xchg
xchg
pop
xchg
ds
sbb
mov
test
cmp
pop
mov
cmp
xchg
mov
push
jmp
pop
jns
cmp
mov
pop
jb
sub
mov
cmp
jg
rorb
out
mov
leave
loope
adc
cmp
or
cmpsb
fs
and
jnp
shll
push
scas
stos
aaa
inc
mov
arpl
cmc
mov
subl
stc
mov
xchg
inc
adcl
dec
lods
sub
xchg
sbb
jne
loopne
aas
mov
shl
xor
cmc
add
ret
addr16
fbld
bnd
and
lcall
imul
mov
cmp
sbb
ret
cltd
sub
or
sbb
mov
aaa
aam
mov
xchg
movsl
movsb
and
mov
iret
das
rorb
mov
out
repz
mov
jle
sbb
pop
xchg
lea
mov
push
xchg
movb
nop
pop
mov
inc
mov
mov
inc
xchg
add
leave
xor
mov
xor
fsubrs
pop
clc
in
nop
jle
test
push
xchg
xchg
movsb
rcrb
imul
xor
ret
test
cmp
imul
lds
fistpll
cmp
sahf
pop
jnp
leave
jb
xlat
add
cmpl
and
inc
mov
mov
xchg
out
out
pop
dec
ficoml
lcall
add
incb
lods
loopne
sbb
movsb
idivl
cwtl
out
xchg
jp
movsl
xchg
outsl
push
enter
icebp
imul
outsb
push
add
cmp
inc
xchg
jg
sbbb
rolb
inc
push
add
jmp
jge
mov
xor
mov
add
mov
jo
mov
push
inc
pop
cmp
mov
movsb
mov
pop
dec
xchg
insb
jl
test
mov
pmaddwd
cmp
mov
inc
or
push
mov
mov
mov
jo
dec
test
adc
dec
cltd
lahf
pop
mull
shrb
lock
sbb
pop
addr16
clc
in
jb
ja
ficomps
shlb
fimuls
idivb
push
or
sbb
mov
jno
mov
or
and
mov
pop
inc
and
xor
mov
fsubrs
and
sub
out
xchg
adc
mov
mov
movsl
popa
mov
stc
aam
or
aaa
stc
cmp
data16
mov
in
fistps
ljmp
es
cmp
adc
xchg
test
ljmp
mov
dec
test
push
fidivrl
jbe
in
jnp
cmpsl
fnstsw
xchg
aad
stos
inc
and
add
mov
inc
in
or
sbb
outsl
jmp
cmpsb
jmp
pop
leave
sub
enter
mov
sbb
call
mov
repz
mov
sahf
andb
lret
sub
push
xchg
sub
cltd
cmpsb
mov
in
in
pop
cs
lds
cmp
fnstsw
push
sub
pop
and
cmp
mov
jp
and
hlt
call
sbb
addr16
add
lret
or
jae
inc
and
inc
cmp
sub
jl
sub
divl
aad
pushf
dec
cmp
dec
fildll
xchg
mov
jbe
cmp
xchg
arpl
mov
lods
mov
stos
and
inc
stc
test
mov
adc
sub
sbb
cmp
cmp
pushf
in
insb
dec
fisubrl
pop
pushf
fdivrs
pop
addr16
sbb
fisubs
pushl
mov
jp
fisttps
mov
gs
add
push
jmp
jo
and
add
lret
cmp
test
aad
ss
or
xchg
adc
cmp
cmp
cmp
xchg
mov
jge
cmp
mov
mov
push
int3
lock
adc
or
dec
popf
xchg
ret
jl
stc
enter
cmp
push
iret
mov
sbb
rorl
add
and
or
jecxz
push
cmp
mov
pop
sbb
je
lea
lret
pop
out
fst
imulb
sbb
jg
xchg
int3
cs
enter
adc
mov
sti
idivb
pop
push
in
aam
xor
jp
pop
sbb
cmpsb
xor
pop
cwtl
mov
mov
aas
lahf
pop
addl
stc
inc
pop
mov
pop
mov
adc
lahf
mov
sti
push
mov
lods
gs
inc
fsts
and
push
cmpsb
push
jnp
test
jb
xchg
push
xor
or
mul
insb
push
add
or
push
sbb
jg
push
sub
cmp
je
add
mov
jge
mov
sysexit
mov
pop
jne
clc
sarb
jns
cmp
movsb
loope
data16
or
mov
int3
xchg
scas
push
mov
or
jmp
fwait
adcl
rcrl
mov
dec
mov
cmp
daa
jne
imul
sbb
mulb
ljmp
ljmp
push
cli
and
mov
mov
es
testb
mov
add
add
xchg
iret
cs
xchg
mov
cmp
dec
sahf
lcall
cmp
push
pop
stc
hlt
aaa
cmpsl
mov
outsb
inc
addr16
mov
lds
test
xor
or
pop
mov
rorl
aad
in
test
mov
mov
dec
bswap
lods
gs
lock
ss
jecxz
xor
pop
dec
or
and
je
call
push
cmpsb
dec
gs
pop
mov
xor
mov
jne
and
xor
out
repz
outsb
jle
mov
xchg
stos
gs
jecxz
fistps
pop
sbb
stc
xchg
sub
mov
mov
scas
cmpsl
popf
loop
popf
jae
push
cmp
pushf
pusha
xorl
aas
in
test
add
aam
pop
daa
subb
jno
ret
adcl
jns
ret
push
loopne
cltd
int
dec
repz
pop
jmp
push
xchg
mov
mov
bt
andb
pop
pushf
popf
daa
cmp
imul
vmovaps
mov
jnp
pusha
lea
and
stos
inc
mov
push
add
xchg
scas
dec
and
add
sbb
shlb
pusha
std
jno
dec
imul
push
jns
jbe
ret
jno
inc
cwtl
inc
and
jo
loopne
into
ret
lea
ss
out
mov
imul
jmp
or
mov
repz
lods
jb
movsb
xor
mov
mov
mov
push
insl
leave
mov
push
inc
in
dec
xchg
mov
mov
cltd
adc
je
xor
pop
movsb
je
mov
fistl
push
lahf
pusha
inc
hlt
or
incl
in
rcrb
lahf
pop
jo
pop
fsts
rcl
rcrb
lcall
out
pop
jle
jge
ficomps
lcall
push
jo
push
insb
cmpsl
lods
jle
loopne
push
insb
push
mov
out
arpl
test
cwtl
adc
int
push
or
mov
movsl
cli
xor
jne
adc
cld
pop
adc
jbe
cmpsb
xor
iret
ficomps
cmpsl
testl
fiaddl
sub
pop
ficompl
daa
cli
xor
mov
enter
movsb
or
int3
cmp
int
mov
addr16
int
xchg
cmp
out
dec
pusha
mov
jns
fidivs
sbb
pop
pop
push
pushl
xchg
pop
fisttpll
out
add
xchg
test
fisttpl
orl
add
outsb
xlat
idiv
pusha
int
mov
addr16
jnp
jle
jnp
jno
xorb
cmp
rolb
mov
sub
or
jmp
sub
jge
mov
mov
lahf
jne
mov
mov
cmp
in
sbb
das
push
pop
cmp
mov
dec
mov
lock
addr16
push
or
sub
pop
mov
lcall
xchg
mov
fstpl
xor
repnz
inc
lahf
enter
jge
shl
dec
flds
mov
mov
in
mov
mov
dec
mov
dec
fsts
mov
dec
repz
mov
loope
add
int
sub
jne
inc
pop
cmp
add
int
js
rcl
cmp
push
fistl
push
adc
bound
popf
outsb
lods
mov
minps
inc
stc
mov
mov
or
cltd
repnz
add
mov
leave
popa
cs
es
div
js
in
adc
sub
lahf
mov
sbb
inc
fucomip
fmulp
cmpsl
jne
shrl
fdecstp
jmp
jne
mov
jg
arpl
xchg
adc
nop
popf
and
cmpsb
adc
mov
jnp
iret
js
add
push
sub
movsb
neg
xchg
cwtl
mov
dec
pop
push
xchg
call
mov
mov
sbb
xchg
mov
out
pop
jno
sub
repz
jne
iret
pusha
xchg
jno
xchg
int3
pushf
mov
movsl
lret
mov
ret
and
inc
jo
enter
movsb
push
aas
ljmp
movsl
and
addr16
in
repnz
jnp
jmp
xor
hlt
cmpsl
push
push
mov
fs
mov
mov
in
fsubrs
pusha
cwtl
cltd
xor
inc
push
cmc
inc
mov
xchg
xlat
into
pop
loop
outsb
cmp
andb
push
jo
bound
jbe
in
cmc
idivl
cli
fadd
sar
mov
std
orl
ljmp
xor
mov
aam
lods
lds
jb
cmp
xlat
icebp
rorb
push
sbb
inc
push
mov
xor
nop
lcall
xchg
or
cmp
push
mov
dec
adc
leave
mov
push
xchg
gs
push
inc
addr16
xchg
jbe
push
roll
js
jl
jo
xor
mov
sti
xor
push
sbb
imul
loop
in
aaa
mov
sahf
xchg
test
mov
mov
daa
mov
outsb
xlat
jns
push
sbb
add
in
mov
mov
and
pop
dec
add
mov
outsl
adc
aaa
movsb
sub
push
mov
or
je
or
in
mov
sbb
inc
sbb
lcall
lods
jge
and
daa
or
sub
notb
es
sub
xchg
movsb
jo
scas
test
addr16
push
xchg
fmuls
out
in
hlt
mov
xchg
outsb
pop
push
rorb
imul
sub
pop
nop
pop
nop
push
xchg
jmp
push
ret
paddq
aaa
sbb
hlt
outsl
sbbl
or
sub
clc
ja
jns
mov
pushf
aam
pop
fcmovu
dec
adc
mov
test
iret
jge
movsb
push
pop
jae
xchg
push
dec
push
adc
clc
mov
dec
lock
cmp
movb
lahf
fldenv
or
idivl
icebp
push
add
hlt
and
pop
nop
push
lret
shll
test
shrl
loop
cld
lahf
dec
xchg
pop
sbb
adc
push
and
fisubl
stos
mov
or
enter
ret
or
fisubs
and
js
push
fwait
cli
jne
mov
lds
push
fdivp
adc
mov
cs
int
cmc
cmp
loopne
int3
dec
out
leave
scas
push
iret
dec
dec
mulb
aaa
dec
dec
fnsave
addr16
or
push
addr16
mov
mov
inc
push
cmp
or
xchg
fistpl
fsubl
jmp
aaa
or
inc
pop
movsb
mov
in
push
sbb
mov
roll
push
cmpsl
test
out
shl
adc
cmp
insb
rcr
dec
int
rsqrtps
cmpsl
jg
lds
xor
mov
mov
dec
push
int
dec
cmc
add
dec
adc
roll
shll
and
cltd
loop
nop
push
loope
enter
xor
les
je
cld
xlat
mov
xchg
and
add
dec
mov
sub
into
cmc
push
push
dec
movsb
jmp
sub
rorb
sbb
in
push
dec
mov
test
push
push
cltd
inc
imul
gs
fdivrl
or
popa
xchg
mov
movsb
mov
sbb
mov
lahf
pop
xchg
jbe
jp
icebp
je
jne
popl
stos
xor
cld
inc
aaa
add
lcall
xor
cwtl
insl
movsl
daa
and
bswap
mov
dec
xchg
lahf
loopne
mov
fdivrl
push
mov
xchg
dec
push
ret
cmp
pop
faddp
pop
cli
and
add
clc
adc
loope
inc
mov
repz
out
push
jbe
ret
cltd
dec
test
rclb
dec
cwtl
or
iret
loop
aas
inc
jne
sub
inc
insl
add
xchg
adc
ds
repz
scas
cmp
mov
pop
xchg
pop
aad
mov
dec
mov
das
push
push
stos
test
push
lret
or
jo
fnsave
scas
lret
jle
push
popa
lods
cmp
xchg
mov
test
fidivrs
adc
stc
pop
lock
or
jecxz
xchg
call
pusha
or
lea
jbe
dec
movsl
out
add
cs
dec
mov
ss
push
dec
scas
or
sub
xor
les
xchg
adc
or
add
test
lds
dec
loope
imul
push
test
je
stos
add
xchg
jne
int
pop
aas
aam
loopne
sahf
mov
mov
and
pusha
mov
mov
jns
les
cmp
popa
ret
icebp
jnp
iret
cmp
xchg
push
flds
mov
push
pop
and
xchg
xor
push
clc
sbb
dec
test
jns
mov
inc
sbbb
adc
inc
xor
cmp
cmpb
pop
xor
sbb
push
ss
and
and
xor
xor
push
das
mov
test
andb
xchg
pushf
decb
cmpsl
mov
notb
push
or
pop
or
mov
inc
jge
xchg
jno
out
jmp
cmp
scas
xchg
sbb
xchg
test
xor
xchg
insl
dec
leave
dec
lahf
cs
addr16
sbb
adc
pop
sbb
stos
sub
and
aaa
loopne
cmpsl
xchg
jmp
andl
mov
add
cmp
fcmovbe
dec
divb
nop
shrl
fcmovb
notb
mov
pop
jp
jl
iret
push
push
test
scas
push
orb
jl
out
cli
std
divb
jnp
jg
dec
cli
imul
inc
ret
shl
lret
shlb
jo
jl
mov
fildll
mov
addr16
push
enter
int3
xchg
repz
ja
stc
lods
push
mov
call
ss
inc
and
jnp
mov
push
scas
sarb
cmp
clc
lret
ja,pn
in
clc
subl
jo
add
adc
push
icebp
ss
cmp
imul
movsb
cs
popf
and
mov
arpl
cmp
ret
xlat
loopne
lock
fsubl
xlat
inc
in
xchg
pop
mov
ficompl
aas
cwtl
nop
fldln2
sbb
inc
adc
adc
int3
mov
shlb
jp
jns
loop
leave
stc
xor
test
xchg
push
inc
out
mov
stc
xchg
aas
loop
xchg
insb
dec
mov
xor
into
cmp
xchg
xchg
sbb
movsb
dec
fisubs
sbb
or
pop
lds
pop
cmp
in
mov
stos
push
mov
mov
addb
call
xchg
stos
adc
aas
push
int3
mov
test
cmp
mov
mov
clc
push
popf
pop
adc
daa
aaa
sti
add
sti
pop
mov
dec
ds
fucomp
fistl
es
sub
adc
push
maxps
fstpt
test
dec
loope
pop
cmpsb
ljmp
pop
nop
push
cltd
sub
out
xor
mull
mov
push
and
imulb
rolb
mov
xchg
adc
loopne
fdivs
mov
lods
out
mov
push
lahf
push
jb
adc
jo
xor
je
prefetch
or
addr16
shll
testb
cwtl
xchg
push
cmp
adc
dec
push
mov
xor
jns
testl
call
scas
xlat
cmpsl
loopne
mov
mov
cli
hlt
xchg
sbb
adc
loope
inc
xchg
xor
xchg
sahf
cli
pop
and
push
mov
fdivrl
jnp
repz
push
cmp
pop
mov
cmpsb
in
jge
mov
test
fimuls
mulb
js
outsl
lods
cmc
dec
shll
lret
inc
addb
adc
inc
test
and
jge
sbb
push
dec
or
rcrl
ljmp
aaa
mov
push
mov
and
popf
dec
cmp
addb
add
fs
clc
aad
cmp
addr16
xchg
dec
inc
inc
dec
test
xchg
mov
inc
adc
adc
add
dec
mov
dec
les
cmpsl
fisttpll
les
xchg
pop
dec
mov
scas
popf
adc
mov
pop
pop
movsb
jmp
xchg
push
movsb
mov
mov
mov
cmc
test
inc
fwait
lock
mov
sbb
int3
xchg
and
les
cwtl
jbe
rclb
xor
xchg
jmp
mov
fiadds
and
mov
sti
jns
and
sbb
lock
cmc
dec
into
loope
mov
aad
mov
cmpb
add
ret
sbb
sub
out
fistpll
ds
out
jno
inc
or
lds
xor
mov
or
push
pop
into
movsl
rcr
and
fcmove
add
dec
jp
out
jb
mov
jnp
dec
push
cltd
into
mov
movsl
rorl
sbb
pop
enter
push
xchg
dec
rcll
fmuls
sti
push
sub
lahf
push
mov
daa
jae
das
xchg
dec
ja
xchg
out
fs
lret
ret
push
cmc
loopne
aam
pop
fnstcw
scas
andb
cmp
lock
sarl
popf
xchg
jo
arpl
pop
adc
cmpsb
insb
push
call
scas
pop
pop
pushf
cmp
sbb
push
lahf
xor
fs
mov
push
fdiv
push
adc
mov
or
iret
nop
sub
and
out
dec
roll
xchg
divl
mov
ja
jl
mov
dec
adc
aam
jle
scas
xchg
push
add
xlat
gs
je
xlat
xlat
or
jl
mov
jl
ss
fimuls
or
out
lock
fcmovb
sbb
dec
loope
ret
loop
dec
cmpb
or
mov
int
int
fldt
call
clc
sub
decb
outsb
repz
push
xchg
out
xchg
inc
bound
pusha
and
adc
cli
mov
or
adc
or
hlt
dec
xchg
cmp
sti
or
xorl
cmc
xchg
adc
test
push
push
cmp
mov
stc
xchg
sbb
mov
jge
dec
cmp
pop
daa
mov
push
gs
data16
in
sbb
popf
or
xchg
add
sahf
pop
divl
bound
mov
mov
loopne
pushf
punpcklbw
push
lret
pop
or
fmull
adc
les
push
or
rolb
mov
ficoms
inc
sbb
pop
stos
mov
ja
dec
dec
pop
faddl
jnp
aad
int3
cmp
ja
cmovo
repz
cmc
xchg
inc
pushf
or
ss
or
test
repnz
mov
and
fs
popf
enter
jge
js
dec
and
fdivr
lods
xchg
add
in
aad
cmp
mov
fldl2t
lahf
orl
enter
mov
in
inc
push
pusha
out
cs
adc
mov
mov
js
movsb
xchg
iret
test
rolb
mov
dec
xchg
cltd
les
mov
dec
pusha
test
movsb
insb
push
test
push
popf
push
push
sub
mov
jmp
sbb
mov
dec
push
bound
mov
jns
movsb
cltd
fbld
jno
insl
call
incb
sahf
xchg
scas
adc
adc
xchg
adc
mov
dec
xor
scas
dec
pop
inc
jbe
into
std
jns
mov
cmc
and
pop
aas
sub
stos
push
jge
fisubrs
jge
cltd
xchg
or
pop
ja
xlat
ds
movsl
lock
pushf
pop
xor
ror
in
push
sbbl
jae
push
loop
rcrb
in
pop
cmp
pop
loopne
and
scas
xlat
mov
adc
je
mov
xor
push
and
cmp
push
inc
push
mov
nop
mov
cmp
sbb
stc
in
jge
pushf
out
mov
jecxz,pn
fisubl
jb
jb
pop
in
dec
clc
in
jns
cli
aam
mov
xchg
push
mov
test
push
xchg
jmp
jmp
jle
pop
fs
xchg
iret
pop
pop
mov
mov
jae
xchg
xchg
rcrl
mov
data16
lea
nop
nop
data16
scas
sbb
pop
jns
mov
pop
inc
add
cwtl
inc
pop
push
jle
adc
sti
ret
scas
scas
fdivl
aas
sub
pop
jbe
push
movsl
into
lret
dec
clc
mov
ret
mov
loop
popa
pop
stos
push
pop
dec
mov
repz
inc
lea
jo
add
sbb
fistpl
idivb
add
je
mov
pop
adc
xchg
push
lea
sbb
in
and
mov
sub
sub
cwtl
leave
inc
das
and
push
mov
imul
cs
and
mov
outsb
shlb
jae
gs
dec
push
hlt
inc
fildl
aad
xlat
insb
jge
outsb
cld
icebp
addb
out
cltd
out
push
add
pop
cmp
aad
or
or
fucomip
stc
ljmp
and
jl
xor
cmp
je
pop
mov
and
ss
xlat
cld
aas
ds
mov
mov
inc
loope
xchg
lock
or
mov
icebp
sub
xlat
cmpb
adc
loope
mov
subb
and
ficoml
adc
sub
out
push
jnp
mulb
lea
sub
mov
or
mov
cmpsb
xchg
in
lea
adc
mov
sbb
sbb
sarl
hlt
sbb
ficoml
decb
sbb
mull
pop
push
cmp
sbb
jno
movsb
lret
dec
inc
mov
in
and
mov
fstpt
jo
sti
push
xor
popf
adc
push
sahf
in
pop
fsts
repz
and
addb
adc
mov
mov
fildll
mov
scas
add
push
dec
jmp
into
jo
and
repz
jb
mov
xchg
dec
sbb
cmp
lea
insb
aam
addr16
rcrb
mov
mov
stos
push
shlb
popf
xor
lret
cmp
push
mov
cmp
xchg
xor
inc
out
xor
push
int3
orb
push
nop
popf
sti
cmpsb
xchg
mov
in
inc
dec
mov
ret
js,pt
rcll
jecxz
add
adc
in
lock
sub
rorb
dec
mov
cmp
mov
in
mov
inc
lods
add
jae
nop
pop
es
in
addl
push
jmp
sbb
sahf
enter
inc
movsl
sarb
jecxz
mov
adc
xor
or
loop
cmp
add
pushf
lea
jbe
dec
sub
int3
sti
popf
xchg
in
jbe
xchg
pop
mov
cmpsb
dec
js
mov
inc
mov
dec
add
hlt
sbb
push
adc
ds
pop
mov
jmp
mov
pop
fsubs
cltd
sbb
lahf
dec
jge
push
adc
dec
mov
sbb
jbe
psubsw
ja
jp
leave
sbb
ja
ljmp
std
std
sarl
sub
mov
cmc
and
or
dec
out
push
mov
imul
xor
out
or
push
outsb
enter
sub
push
popa
mov
bound
inc
lea
and
test
loope
adc
fs
pop
pop
je
lret
pop
sbb
inc
sub
dec
push
mov
iret
mov
testl
sti
or
xchg
popf
sahf
xchg
push
cmp
xchg
aad
dec
mov
jae
jb
clc
lea
lea
repnz
cmpl
xor
jecxz
cmp
addr16
sub
leave
pop
rcrl
das
mov
das
fstps
mov
mov
ds
xchg
fistpl
cmp
sti
insl
cmp
adc
aas
xchg
push
xor
fs
sarl
lcall
fidivs
hlt
lods
mov
lahf
jg
sti
popa
cwtl
mov
xor
ds
sub
sub
idivb
fmull
or
xchg
xor
adc
daa
or
and
add
cmp
movsl
add
and
mov
add
or
jbe
cltd
idiv
mov
sahf
adc
fcomp
hlt
mov
inc
mov
ja,pn
clc
sbb
arpl
dec
movsb
sti
xor
test
andl
sarb
insb
cmpsb
mov
call
xor
or
shl
and
sub
mov
fdiv
loopne
ret
loop
add
outsl
sarl
dec
pop
fsubrl
or
in
outsl
sbb
ss
fcmove
ss
xor
sbb
rcrl
shll
loope
inc
mov
inc
cmpsb
je
jns
inc
mov
sbb
lods
push
lret
fcomps
adc
rolb
push
scas
in
mov
in
push
mov
pop
out
jae
leave
test
loopne
and
lock
test
inc
in
xor
mov
loop
pop
fwait
xchg
or
scas
pop
push
pushf
cs
icebp
xor
pop
or
lock
jo
in
imul
jae
xchg
inc
ljmp
ret
test
jno
sub
popa
mov
lods
sahf
push
adc
icebp
loop,pn
xchg
test
push
sti
or
push
inc
pushf
push
xchg
in
pop
shl
fsubrs
push
cs
xchg
mov
hlt
inc
sub
add
push
sbb
stc
sbb
push
push
mov
and
stos
adc
dec
decb
mov
jl
ss
mov
sbb
scas
imul
fucomip
mov
mov
ds
push
and
mov
jl
repnz
fistpll
std
leave
sbb
xor
and
mov
out
adc
push
mov
test
pop
cltd
xchg
xchg
cs
outsb
clc
or
shl
or
mov
xchg
pop
or
rorl
gs
add
scas
jmp
jecxz
mov
push
push
inc
xchg
mov
icebp
sbbb
adc
inc
call
xor
imul
jle
mov
aam
dec
ds
mov
or
fwait
pop
push
xor
outsb
sub
sbb
cmp
add
cmp
test
shll
ror
push
pusha
xor
fs
jmp
cmp
int
sbb
pop
sub
inc
push
adc
and
pop
lahf
imul
jge,pt
mov
mov
fnsave
mov
imull
xor
mov
inc
mov
cmp
aam
sub
sarl
add
jnp
dec
bound
cld
idivl
ror
insb
div
mov
mov
movsb
scas
xorl
cmp
sub
data16
xchg
cs
mov
inc
push
dec
frstor
inc
mov
iret
xchg
rcl
add
sbb
movsb
jl
stos
sbb
adc
xor
mov
aas
mov
mov
mov
mov
jae
int
push
pop
mov
mov
sbb
push
mov
push
dec
test
sahf
mov
loop
rcrl
mov
mov
or
xchg
dec
sbb
cmp
cmp
rclb
jecxz
xchg
mov
shrb
xchg
pop
xor
in
outsb
adc
movsbl
mov
xor
cmp
jo
or
test
js
push
loop
inc
stc
rol
pop
jae
mov
xlat
scas
mov
pop
add
pop
cmp
pusha
sbb
push
mov
in
xchg
adc
sbb
add
xchg
imul
jns
fnstenv
xchg
jg
sbb
leave
imul
sbb
lahf
mov
mul
pop
mov
jp
inc
int3
ja
dec
or
cld
jle
int
jecxz
xor
inc
fistl
sbb
fcoms
inc
dec
adc
mov
cmp
xchg
xchg
shll
xor
stos
xchg
xchg
les
loope
push
pop
xchg
add
sub
adc
ja
xchg
neg
in
sub
mov
add
outsl
outsb
pop
pop
adc
icebp
push
sub
adc
or
popf
pop
jp
test
xchg
mov
fcmovbe
or
xchg
cli
dec
ds
lret
inc
test
xlat
pop
aam
sbb
add
repnz
push
std
adcb
andb
mov
daa
sbb
insl
mov
shrl
loopne
inc
and
sbb
sarb
lds
sahf
mov
mov
mov
sub
out
sahf
push
mov
repnz
dec
mov
mov
call
mov
lret
xor
call
push
add
cmovp
dec
mov
or
in
dec
push
shr
fs
adc
push
and
adcb
nop
mov
mov
xchg
aad
mov
push
repnz
xor
jle
add
lds
lods
outsb
int3
int
aas
cmc
fdivrs
jae
mov
adc
xlat
jns
push
test
mov
ficomps
xchg
scas
xchg
ret
int3
dec
xchg
xor
adc
mov
fimull
xlat
sbb
xor
pop
loop
jb
lret
fwait
ret
adc
sub
push
push
stc
int
jmp
mov
pop
in
scas
sbb
nop
or
push
adcb
in
lret
fmuls
mov
scas
or
mov
enter
in
hlt
xchg
xorl
nop
inc
cmp
rcrl
push
mov
jb
in
mov
push
data16
fcomps
ret
loop
insb
sub
push
lods
aaa
ss
xchg
mov
sub
xor
das
popf
gs
push
fcompl
mov
popa
cmp
xor
fists
jb
and
mov
outsb
stc
sarb
into
jmp
inc
inc
dec
mov
and
mov
lcall
cmpsl
lcall
mov
mov
rcll
lret
in
mov
sub
add
dec
jns
push
pop
lds
hlt
add
sbb
fidivrs
push
lret
xchg
inc
xor
hlt
jge
sub
mov
outsl
clc
push
addl
shl
sahf
mov
iret
dec
sti
das
mov
or
in
pop
clc
repnz
jns
adc
mov
test
mov
dec
sbb
xchg
xor
das
inc
jno
dec
outsb
clc
xchg
test
popa
test
sti
in
insb
filds
iret
roll
faddp
sarl
xchg
iret
pop
cs
into
cmp
addr16
jae
ja
fiadds
addr16
or
sbb
loop
stc
inc
cmpsl
test
arpl
mov
jp
adc
sub
lds
and
push
nop
fnstsw
push
sub
push
jp
cmp
scas
mov
or
pop
leave
push
cmpsb
bound
les
test
in
bound
hlt
sti
inc
in
cmp
test
and
push
aad
dec
push
dec
fsubrp
sbb
arpl
dec
testb
xor
sbb
lods
and
test
hlt
inc
ret
lock
mov
sub
mov
mov
movsl
pusha
jmp
imul
sbb
call
mov
mov
aaa
scas
jmp
jne
mov
sub
cwtl
fcoml
xlat
jns
pop
ja
lcall
cmp
push
lret
xlat
scas
dec
aas
inc
fcomip
jnp
pushf
sarl
and
popf
xchg
movsl
in
push
js
inc
shlb
test
out
mov
add
cmp
lods
xor
push
fld
mov
mov
sarb
pop
mov
outsl
fadd
mov
or
push
push
fucomp
sub
fs
xor
and
inc
and
mov
fcmovb
repz
xchg
pushf
adc
cld
pop
repnz
mov
lods
in
jmp
adc
loop
movsl
and
xor
int3
mov
push
test
xchg
adc
xchg
xor
data16
or
push
mov
pusha
pop
adc
dec
repnz
xchg
add
jle
push
mov
jo
enter
shll
add
push
mov
imul
in
push
mov
push
jecxz
cmpsl
jae
push
call
and
and
mov
pop
aam
xchg
outsb
sbb
xchg
into
dec
pop
sub
ds
xor
enter
test
int
leave
insb
and
popf
daa
hlt
fwait
mov
iret
lcall
pop
cmc
data16
cmp
cmpsl
mov
mov
ret
hlt
popa
insl
xor
or
mov
loope
adc
mov
cmp
adc
shlb
roll
cmp
jbe
cwtl
outsl
add
ds
in
push
xchg
xor
test
adc
pushf
rclb
xor
jne
sti
cmp
push
or
xor
cmpsl
cmp
mov
jge
dec
clc
sub
lods
testb
xchg
je
add
push
sahf
loop
stc
xor
xchg
fsubl
jecxz
shl
sbb
xchg
cmp
xor
imul
adc
sbb
push
adc
cltd
pop
orl
adc
pop
mov
pop
add
imul
clc
in
mov
lret
ljmp
lods
sbb
jmp
pop
push
sub
imul
dec
push
pop
lods
nop
mov
test
push
or
ja
cmp
lock
push
jns
xor
scas
out
dec
sub
cmp
das
jb
and
jp
in
adc
xor
pusha
arpl
mov
repnz
mov
ds
jp
test
jmp
je
jo
fadds
pushf
push
je
push
lods
iret
addr16
insl
sbbb
and
pop
cld
shll
call
sti
test
push
js
adc
and
cmp
repz
inc
dec
loop
mov
jbe
out
push
sub
outsl
jge
mov
or
popa
fcoms
dec
adc
in
pop
jo
inc
push
int3
jne
aad
push
xchg
lods
dec
inc
xor
push
call
and
iret
push
mov
xor
sub
stos
dec
call
xor
in
cmc
mov
xor
ret
add
and
outsb
and
cmp
cmp
xchg
mov
scas
push
push
aaa
das
in
mov
cld
mov
stos
fs
pop
fsubrl
xchg
scas
mov
mov
add
ds
xor
repz
imul
inc
sbb
fstps
sub
adc
in
inc
sbb
and
sbb
sbb
jge
andb
mov
dec
xor
push
dec
les
in
xor
sbb
btr
imul
pop
lret
loop,pt
jmp
fnstcw
addl
fwait
repz
xor
push
inc
jbe
jmp
jno
or
incb
inc
sbb
sub
lock
jge
pop
pop
scas
xor
bound
add
fmulp
insl
int
das
pop
jbe
test
rcrb
fadd
mov
pop
inc
push
lea
mov
leave
push
cmp
or
and
sbb
and
jb
sbb
dec
ret
or
sub
sbb
jns
push
mov
xchg
mov
insl
fdiv
sbb
adc
fcmovne
testl
rclb
adc
ja
aad
adc
or
jbe
sbb
pop
mov
and
cmp
imul
mov
and
mov
xchg
cmp
and
test
xlat
adcl
xor
scas
insl
fmulp
call
cmp
sub
jmp
mull
lds
and
and
mov
ljmp
in
xchg
aad
rcl
inc
jnp
test
dec
xor
sbb
xchg
or
int
jmp
decb
nop
sub
call
lock
sahf
bound
xor
stos
inc
outsb
clc
jp
inc
xlat
or
push
mov
pushf
dec
int
in
icebp
mov
push
enter
pop
sarb
bswap
movsb
int
mov
scas
mov
clc
sbb
fdiv
xchg
mov
in
sub
pushf
xor
fcmovnu
stos
mov
mov
test
jmp
or
pop
push
clc
sti
add
frstor
and
loope
lods
arpl
sbb
not
lods
in
clc
mov
dec
iret
push
out
and
mov
dec
stc
test
or
adc
clc
jb
loopne
sbb
add
push
fsubrl
mov
mov
adc
outsl
jl
mov
jne
sub
call
push
insb
int
jge
int3
stc
int
shlb
push
cmp
pusha
inc
ss
ret
loop
mov
negl
cmp
push
test
lret
cwtl
mov
scas
data16
mov
lret
xor
cmp
and
push
xchg
lds
mov
shl
iret
jge
dec
into
mov
jb
dec
xor
pop
jp
mov
mov
fsubl
jl
repnz
jmp
test
imul
clc
pusha
mov
inc
mov
mov
std
lea
mov
and
negl
js
or
jl
icebp
xor
xor
test
pop
add
int3
gs
jmp
push
add
gs
arpl
mov
dec
lock
pop
mov
lret
insl
jo
dec
insb
mov
shlb
icebp
mov
jl
or
jecxz
or
scas
call
fwait
insl
pop
adc
cmp
int3
sti
lods
xor
fmuls
stc
or
dec
pop
iret
lahf
xorb
je
and
pop
jecxz
cmpsb
mov
sbb
gs
inc
mov
imul
dec
rorb
cmp
mov
or
pushf
dec
or
sub
call
or
mov
xor
or
ljmp
mov
adc
repnz
cld
mov
jmp
xor
ficomps
xchg
insb
mov
in
mov
jne
lods
movsb
fcmovbe
loop
push
cwtl
imul
sbb
fdivr
idiv
and
fimuls
add
inc
cld
inc
sbb
icebp
cmc
rolb
mov
mov
mov
jmp
mov
pusha
lea
cmp
dec
pop
xchg
push
andl
movsb
js
call
or
xchg
ljmp
cs
addr16
mov
jmp
add
mov
push
popf
xchg
mov
insb
popf
and
in
cltd
data16
js
pop
cmp
dec
fwait
add
leave
push
leave
cld
out
dec
xor
mull
sub
add
int3
insb
mov
out
pop
jp
fbld
loope
push
call
jecxz
xor
rorb
clc
push
dec
push
mov
push
jae
cmp
mov
stos
fidivs
ret
fsubl
sub
dec
insl
rcrb
pop
mov
inc
adc
jmp
rolb
lds
pop
test
jns
xor
push
push
cmp
subb
xchg
pop
pop
inc
sub
mov
xor
outsb
and
or
int3
or
mov
sub
adc
push
ljmp
enter
lahf
mov
in
hlt
mov
adc
stos
mov
popf
leave
mov
dec
dec
push
jg
cmpsl
mov
push
adc
pushf
fs
inc
ss
mov
xchg
int3
mov
and
sub
push
repnz
lods
xchg
in
aas
inc
cs
mov
pop
fsubrl
dec
mov
sub
push
aam
icebp
sbbl
jae
js
jmp
movsb
addl
sti
push
mov
call
xchg
sbb
mov
mov
push
test
pop
fsub
dec
imul
mov
cwtl
mov
jge
mov
push
fisubrs
repnz
inc
test
inc
out
popf
jno
vpsrad
mov
je
lret
or
insl
mov
or
out
lods
xor
mov
aas
shr
xor
cs
mov
jnp
mov
je
ret
xchg
out
cmp
mov
fdivs
cli
sbb
add
sbb
cmp
sbb
jl
jo
cmp
ljmp
imul
dec
or
xchg
scas
mov
cmp
mov
adc
in
out
pop
scas
sti
in
or
test
frstor
push
sbb
pop
repz
inc
mov
cmp
fistps
lods
adc
cli
testl
xchg
cmc
inc
add
ja
xorb
add
pop
jb
cmc
mov
pushf
inc
xchg
mov
fadds
nop
popl
mov
pop
xor
jge
push
out
aam
push
lret
adc
sub
push
lds
cmp
daa
out
lock
in
jns
jns
jg
js
jge
rorb
movsl
sbb
and
fdivl
adc
rolb
sbb
pop
sahf
xor
pop
fs
sub
daa
in
sti
shll
cmp
cs
lret
or
lret
cmpsl
cli
and
xor
push
inc
int
adc
shll
and
adc
mov
nop
push
movsb
xor
xor
lea
sbb
or
jecxz
stc
rolb
andb
sub
fidivs
mov
sbb
push
mov
les
mov
sub
dec
lret
lahf
lahf
sti
jl
bswap
aaa
jg
out
pushf
mov
jbe
setp
notb
outsl
xchg
mov
mov
roll
out
sbb
sbb
sarb
inc
cwtl
loope
add
iret
inc
pop
xchg
push
mov
fwait
dec
test
fs
xchg
cmp
cmc
leave
mov
cmc
mov
add
mov
cmp
lret
cwtl
sbb
jge
sub
es
adc
jb
stc
lahf
add
dec
mov
in
push
scas
shll
or
aaa
fsubrs
js
or
ror
mov
mov
outsb
addb
imul
mov
mov
pop
bound
addb
jns
cld
or
icebp
and
cmc
es
jp
fdivrl
out
fidivl
pop
jno
fdivrl
in
jbe
dec
call
hlt
outsl
sbb
aad
push
call
cmp
xor
stos
jmp
das
loop
popf
xchg
add
mov
add
xchg
int
les
roll
cltd
mov
jg
cmp
mov
addr16
leave
into
lock
inc
adc
push
in
add
pop
mov
or
outsb
clc
push
and
shrl
xor
mov
movsl
movsb
movsb
bound
dec
imul
ret
mov
aas
mov
add
jmp
push
and
dec
in
xorb
daa
movsb
sbb
jp
push
mov
mov
mov
ljmp
fcomip
pop
jecxz
nop
mov
push
xchg
into
je
popa
jno
mov
sbb
xchg
clc
or
ljmp
jmp
pop
notb
push
ret
inc
push
jnp
mov
loope
leave
ret
push
loopne
inc
sub
xchg
mov
xor
mov
mov
pusha
dec
fwait
lcall
pusha
lret
jecxz
mov
mov
aam
outsb
xchg
mov
std
cmp
xchg
stc
dec
loopne
fs
gs
imul
sbb
push
movsl
insb
in
sbb
sbb
sbb
sbb
mov
fsubr
mov
mov
les
cmpsb
in
or
and
enter
cwtl
movb
mov
loop
out
sbb
outsl
lods
xchg
xor
mov
addr16
insl
test
repz
ret
imul
dec
call
jle
mov
aam
into
aaa
mov
mov
xchg
xor
movsl
bound
call
enter
cld
test
mov
pop
in
ret
in
mov
jmp
pop
dec
cmpsl
push
pop
movsb
fdiv
movsb
sub
leave
int3
mov
rorb
jg
rcll
out
in
mov
sbb
mov
test
mov
mov
add
ljmp
fimuls
jg
xor
add
scas
jne
xor
leave
aad
and
jae
jl
mov
fisubrs
sub
faddl
inc
data16
and
popf
scas
nop
jns
roll
call
jns
into
je
fiadds
xchg
xchg
int3
and
test
pop
in
mov
xor
xor
stos
jle
test
pop
sub
jp
inc
shl
imul
lods
lods
ficoms
decl
fwait
xor
xchg
jae
outsl
xor
pop
js
shl
arpl
scas
or
loopne
shlb
fwait
dec
lret
xor
jbe
push
movl
pop
movsl
mov
mov
or
add
jg
mov
push
mov
sbbb
test
xor
fimuls
push
lds
icebp
call
sbb
push
mov
mov
inc
fdivrp
movsl
jno
ret
in
out
and
imul
dec
cmp
dec
mov
leave
mov
jb
cltd
cmp
dec
mov
mov
jo
mov
negb
rclb
je
icebp
mov
mov
in
xor
divl
dec
pop
popf
js
fistps
and
roll
push
add
pop
in
cmp
enter
push
adc
ret
outsl
jg
jmp
mov
in
jl
pop
popa
lahf
testb
xchg
ljmp
movb
mov
mov
pminub
dec
roll
mov
test
jl
pop
mov
mov
jnp
popf
shlb
mov
cld
lret
cwtl
pop
cmpsb
and
mov
mov
stc
mov
mov
insb
or
in
add
mov
xchg
xor
arpl
mov
negl
shr
mov
negb
xor
sbb
jae
jbe
push
sub
sbb
jns
push
cmp
pop
dec
insl
out
aad
fldt
push
lcall
sahf
jbe
adc
div
movsb
call
aad
cmp
mov
movsb
inc
mov
xor
xor
adc
scas
inc
or
xlat
push
push
movsb
out
cmp
dec
adc
inc
inc
pop
lea
inc
xchg
and
cli
push
stc
out
stos
xchg
mov
jmp
call
gs
and
jb
or
cld
shrb
or
enter
call
or
ss
xchg
arpl
das
leave
dec
cmc
in
xchg
add
cmpsl
and
mov
jo
and
test
repnz
pushf
out
adc
lret
and
push
jae
loopne,pt
dec
lret
ss
cmc
fwait
iret
xor
xchg
in
dec
lds
jle
jmp
jge
and
sahf
mov
push
lcall
dec
dec
outsl
dec
xchg
xchg
push
pop
lcall
nop
pop
mov
fucomi
aas
data16
fistl
scas
cmpsb
xchg
xchg
jp
jl
loop
aas
push
mov
dec
mov
iret
aaa
pop
imul
scas
inc
lods
mov
jnp
je
push
ret
test
loopne
cmp
pop
jg
lret
adc
incb
in
ret
mov
mov
xchg
fnstenv
outsb
pop
out
stos
mov
inc
push
enter
repnz
and
xchg
fstpt
lret
mov
xchg
clc
push
sub
jle
jl
xchg
ret
push
fidivs
in
mov
lahf
inc
call
loope
jne
ljmp
mov
sub
dec
pop
testb
insl
lahf
fstps
fucomi
fdivr
call
das
pusha
loop
shll
fldenv
into
ljmp
iret
sub
aas
mov
enter
mov
fcomps
inc
out
sti
stos
test
out
xchg
roll
rcl
jbe
ficoml
inc
stos
ss
iret
mov
push
lcall
cmpsb
les
test
into
push
iret
jl
pusha
mov
sub
add
jge
or
mov
cltd
xchg
in
and
mov
movsl
test
mov
cmpsb
dec
sub
into
inc
lds
mov
cmp
in
xchg
xchg
in
dec
pop
dec
add
aaa
pop
add
dec
scas
dec
lcall
inc
cmp
aad
mov
inc
dec
mov
xchg
popf
out
enter
push
mov
xchg
add
sbb
mov
ret
enter
stos
test
mov
mov
cltd
jge
xchg
xor
rorb
fs
xchg
scas
adc
mov
mov
xor
and
push
andb
xor
xchg
loope
dec
xor
test
inc
loopne
call
pushf
fwait
cmp
xor
mov
mov
ds
mov
or
mov
int
mov
sub
push
lret
aas
leave
xor
lock
jmp
xor
rolb
popf
jno
loop
out
push
push
xchg
movsb
push
outsl
aas
mov
dec
cwtl
xlat
mov
je
js
insl
scas
push
fsubrl
out
cli
inc
repz
andl
mov
push
call
outsb
sbb
push
or
ljmp
fidivrs
sub
dec
dec
out
cs
fst
lods
xor
mov
cmc
fcomip
add
jns
idivb
lahf
ret
push
push
push
fbstp
scas
mov
pop
inc
dec
int3
and
mov
movsl
lcall
mov
jno
movsb
xor
fucomp
andb
imul
dec
or
push
test
shlb
dec
mov
adc
stos
adc
xchg
addr16
cli
dec
das
out
sub
aas
leave
mov
cmc
pop
push
cwtl
orb
add
xchg
dec
ss
int
or
mov
add
repnz
callw
sbb
mov
sbb
xchg
jle
or
adcl
jo
mov
and
sbb
inc
js
jno
cmp
dec
popf
xchg
add
test
ljmp
lods
push
test
lock
iret
jns
imul
cmp
test
lea
jl
mov
addb
ds
push
push
out
bt
aaa
out
push
scas
mov
mov
cwtl
adc
xor
ror
sbb
pop
sahf
enter
arpl
lahf
xchg
mov
push
lcall
xorl
in
jne
sti
popf
icebp
xchg
rcrl
adc
jp
or
aas
loop
inc
push
jnp
inc
push
loope
dec
mov
push
lahf
movsb
mov
loope
xor
out
jbe
inc
daa
pop
push
pop
mov
xchg
rorb
fs
movsb
cmp
lds
pusha
mov
xchg
movsl
sar
int3
das
inc
mov
adc
pop
stc
mov
push
adc
fdivs
lods
push
les
fdivp
mov
mov
add
inc
repz
sbb
scas
into
mov
push
mov
push
push
mov
cmp
jbe
in
rcr
mov
push
push
rorb
clc
xchg
push
dec
insb
mov
xor
fs
xlat
cmp
push
push
jb
les
test
mov
aad
mov
incl
rclb
mov
mov
je
mov
jne
push
sti
mov
mov
dec
xor
out
arpl
adc
pop
jle
testl
mov
xchg
loope
mov
add
jne
cld
sbb
lods
test
mov
jmp
dec
sar
pop
movsl
mov
es
mov
movsl
mov
ds
clc
cmpsl
jl
pop
add
aaa
imul
mov
jge
pop
jno
cmpsb
in
outsb
xchg
adc
add
push
xchg
xchg
ds
xchg
mov
dec
lcall
cmp
insb
push
dec
dec
ret
bound
and
stos
test
or
mov
dec
push
mov
xchg
ds
push
mov
dec
mov
sbb
ss
stos
psraw
out
daa
jge
jle
cmpsb
ljmp
sub
rorl
std
add
and
pop
xchg
cltd
jg
roll
xor
pop
inc
jae
ds
insb
mov
fiaddl
push
repnz
add
cwtl
pop
jge
pop
mov
pop
dec
mov
inc
out
jnp
fwait
xchg
dec
push
subl
adc
jmp
adc
outsb
inc
pushf
xchg
iret
addr16
into
sbb
xorb
jno
pop
xor
aas
clc
sub
or
jb
sbb
sbb
pop
je
mov
nop
adc
movsb
es
sbbb
mov
mov
jge
jne
push
cmpsl
dec
jnp
inc
pop
sub
mov
push
fnstcw
cmc
dec
insl
mov
push
pop
pop
pop
xchg
mov
insl
jne
hlt
push
xor
test
pop
cli
jb
cmp
outsb
inc
xchg
adc
adc
mov
cmp
pop
out
pushw
or
cwtl
mov
push
push
jmp
dec
fs
sbbb
shll
scas
ss
hlt
fldl
dec
inc
outsb
imul
mov
gs
out
in
sub
mov
adc
scas
repnz
mov
push
loopne
fimuls
mov
aad
dec
cli
cmpsl
sub
xchg
cmp
insl
inc
lods
repz
aad
jp
mov
mov
or
xchg
mov
sti
push
mov
mov
xchg
or
sbb
pushf
sub
test
data16
mov
dec
scas
fistpl
pop
insb
add
mov
cmp
test
rclb
pop
cmpsl
dec
mov
fnstcw
ss
sub
xor
cwtl
pop
xlat
stc
mov
adc
popl
icebp
loop
lock
iret
inc
or
push
fs
pop
cli
sub
pusha
jne
push
mov
sub
pop
sub
jae
in
stc
xor
cmp
inc
movl
lret
inc
xlat
pop
mov
ds
clc
clc
and
lods
pop
cmc
fcmovnu
mov
dec
sbb
leave
or
sub
cmpsb
cli
cs
hlt
add
push
add
pop
inc
cli
leave
roll
mov
das
cmpsb
gs
lods
repnz
stos
mov
inc
xchg
xchg
fidivrs
xlat
lea
js
jmp
loopne
xchg
and
mov
shlb
fistpll
fmull
mov
sbb
dec
nop
std
cmp
scas
pop
push
in
push
mov
inc
sahf
outsl
in
inc
enter
out
mov
cwtl
pusha
jp
pop
dec
jae
xor
loop
cmc
outsb
inc
xchg
inc
xor
in
sbb
je
push
aaa
push
es
mov
lcall
sbb
xor
xchg
push
leave
dec
mov
call
push
dec
scas
xchg
pop
repz
out
or
fisubrs
popf
in
xchg
arpl
sub
fisubs
arpl
mov
cmp
xchg
scas
dec
fisttpl
in
xchg
mov
sub
adc
ljmp
in
jl
ss
mov
xchg
lea
fstpl
out
nop
cld
mov
sahf
jno
mov
and
push
pop
hlt
xor
push
inc
and
cmp
in
ds
jmp
jp
push
and
lar
lods
mov
popf
out
adc
imulb
and
jecxz
lahf
xor
es
push
in
jmp
pushf
test
insl
push
inc
fistl
fdivl
mov
cmc
jmp
shl
std
ds
sub
int3
aam
dec
inc
xchg
dec
outsb
in
inc
repz
pushf
hlt
bound
inc
xchg
dec
ficompl
pop
fstl
test
sbb
sbb
or
jmp
jle
cmpsl
iret
or
jmp
pop
in
mov
into
sbb
pop
iret
xor
sbb
xor
adc
cmp
mov
mov
sahf
inc
pop
loope
cmpsb
out
imul
and
inc
mov
xchg
arpl
bound
lret
push
ljmp
into
sbb
mov
dec
rcll
lds
jb
lock
xchg
jecxz
jle
adc
push
cmp
push
push
fildl
mov
scas
pop
or
pop
daa
cpuid
ljmp
or
jns
inc
mov
dec
pop
push
cmp
arpl
ja,pt
pop
add
ja
xchg
add
jle
jo
mov
cltd
ja
sbb
xchg
popf
fnstcw
sbb
pop
dec
scas
ret
loop
adc
jo
das
ror
add
push
fisttps
test
or
mov
xchg
rcrb
xchg
inc
add
push
cli
inc
popf
push
sub
out
push
xor
rol
sbb
jo
ret
test
rcl
fidivl
cli
mov
xchg
mov
xchg
mov
cli
or
add
adc
xchg
pop
push
dec
or
or
or
out
push
mov
mov
push
jno
mov
mov
loopne
pop
ficoml
mov
loope
js
adc
lods
jg
imul
fs
mov
xchg
push
adc
sbb
dec
icebp
inc
out
filds
cmp
mov
and
imul
icebp
imulb
rolb
adc
sub
or
mov
sub
gs
in
insl
xchg
addr16
push
push
aam
pop
adc
outsb
test
subl
mov
imul
rclb
out
ret
cli
aam
mov
cmp
mov
sbbb
bound
subl
mov
mov
mov
and
cli
sbb
rcrb
gs
cli
mov
mov
fildll
sbb
ljmp
out
xchg
sub
lds
jmp
mov
jp
pop
push
cmp
insb
cmpsb
scas
shlb
fs
movsl
add
mov
pop
xor
mov
or
in
sub
fiadds
rcll
popw
cmpsl
mov
mov
jg
jae
or
gs
in
mov
or
cmpsb
insl
mov
stc
adc
fs
sbb
xchg
imull
xorl
mov
add
les
cltd
sub
mov
cltd
fnstsw
adc
or
shlb
cmpb
fsub
mov
or
xor
pop
test
notb
mov
imul
pop
mov
jecxz
mov
inc
xchg
jnp
mov
mov
push
or
mov
inc
pop
pop
loop
mov
faddl
and
mov
stos
callw
cmp
out
cli
mov
stc
mov
fwait
cmc
sbb
sub
popf
push
xor
leave
jg
movsb
push
jo
jae
data16
lds
adc
or
mov
mov
pop
cli
ja
or
in
add
int
mov
mov
in
add
sarb
incb
mov
jmp
adc
mov
and
cli
adc
sbb
jns
in
enter
in
push
xor
stc
mov
mov
or
jae
call
and
cli
adc
dec
inc
or
adc
ljmp
pop
mov
rol
fadds
das
imul
pusha
mov
sbb
ret
xchg
add
mov
mov
pushl
jl
bound
xchg
imul
test
or
shl
mov
fs
xchg
ret
add
jl
cmpsb
aam
mov
sub
shlb
test
or
mov
lret
fcoms
sti
fcmovne
pushf
out
add
ret
cs
jle
mov
sti
movsb
push
adc
mov
inc
mov
mov
and
mov
aam
rcrb
push
jns
fcoml
sub
mov
adc
out
mov
add
inc
pusha
or
out
and
mov
inc
popa
jb
icebp
addr16
mov
movsb
or
test
int
mov
daa
fmuls
add
xor
or
mov
pop
ret
xchg
jb
sbb
mov
xor
int3
mov
mov
nop
sub
adc
mov
push
les
clc
mov
mov
xor
insl
out
push
mov
aam
insl
sub
xor
fidivl
sbb
cli
les
scas
pusha
xchg
sub
daa
jge
addr16
or
push
pop
insb
xor
mov
in
adcl
mov
mov
testb
loopne
xor
add
add
xor
pop
mov
and
mov
sbb
sarl
int
adc
jne
xchg
movsb
popw
jp
fwait
das
ljmp
mov
adc
jne
sbb
popf
imul
push
xor
loopne
and
pop
jge
fists
xor
dec
fsubs
add
aad
enter
cmpsl
sub
mov
pop
test
adc
lahf
mov
imul
xor
stc
and
mov
fldenv
roll
sub
sub
fcmove
fs
xchg
xchg
scas
push
jb
lret
in
lods
xor
addb
je
xchg
jo
add
mov
jge
imul
sar
cltd
mov
std
dec
jb
add
jnp
pop
jmp
int
popf
test
xchg
sbb
xlat
mov
xor
push
dec
shl
xor
jne
mov
mov
lods
jle
cmc
dec
jo
dec
sahf
or
daa
push
mov
and
xchg
sub
mov
js
data16
fisubrs
daa
xor
dec
dec
idivl
dec
jmp
insl
pop
data16
fwait
jmp
test
push
dec
sbb
jns
xchg
jbe
sbb
cmp
enter
fprem1
rcll
test
outsb
jnp
aad
ficomps
jne
jne
pop
mov
cmp
jge
rolb
into
pop
mov
dec
mov
aas
xor
xchg
out
push
push
mov
in
movsl
push
jp
jp
repnz
push
adc
arpl
das
sub
clts
das
icebp
aaa
fldcw
out
cltd
xor
out
inc
mov
sbb
sub
jp
fldl
pop
push
xor
nop
xchg
xchg
or
adc
mov
fs
loop
and
pop
add
movsb
ret
sbb
jg
test
xor
dec
cmpsl
dec
neg
jl
call
pop
cmpsl
xor
negb
push
popa
aam
cmp
cmp
pusha
test
push
or
in
jge
xchg
aad
adc
sahf
push
cwtl
das
mov
add
dec
imul
xor
icebp
push
fs
lods
hlt
divl
pop
loopne
dec
jle
bound
lods
jl
daa
push
push
jbe
pop
das
loope
inc
mov
dec
sub
cld
jb
sbb
xchg
shlb
inc
mulb
jp,pn
pop
sbb
lahf
daa
inc
into
xchg
inc
add
into
insl
sbb
or
out
mov
jae
addr16
loopne
push
out
jle
jge,pt
jg
jecxz
push
and
push
inc
add
lret
dec
nop
insl
test
loop
jae
scas
or
jo
dec
sub
inc
sub
sbb
pop
lods
sbb
lahf
and
sub
ss
mov
xlat
cmpsl
pop
loop
pop
int
xor
mov
clc
ret
loop,pt
sbb
cld
fmull
xchg
sub
adc
outsb
scas
loope
shrb
push
enter
pop
fdivrs
cwtl
fucomp
pop
repnz
pop
adc
mov
test
aas
cmp
or
in
lahf
lcall
fwait
sub
mov
out
push
sbb
lret
sub
xchg
push
add
lret
jg
jns
push
push
mov
mov
push
cwtl
fsubr
daa
jne
or
sbb
stos
push
jno
in
pop
push
push
addr16
mov
repz
sbb
dec
xchg
leave
in
leave
outsl
imul
js
mov
test
add
lea
mov
cmp
orl
loop
inc
mov
cwtl
jmp
xchg
mov
pop
mov
and
and
xor
loop
das
shll
jmp
mov
insb
sub
hlt
repz
pop
push
in
iret
cmp
cli
push
xor
or
lock
fistps
xor
cmpsl
pusha
ficomps
lods
imul
cld
dec
pusha
in
pop
jo
popfw
ret
scas
in
dec
mov
add
sub
aas
xchg
fisubrs
decl
jle
sbb
xor
lret
ficoml
clc
push
scas
aam
xor
cmp
sbb
sbb
lods
movsl
negl
xchg
push
push
pop
jge
sub
xchg
push
and
xchg
mov
push
push
adc
loopne
fnstsw
aam
shlb
into
cmpsb
movsb
dec
clc
cmp
push
gs
xchg
out
xor
fnstsw
divl
dec
mov
sbb
dec
cmpl
push
nop
shrb
and
std
mov
pushf
ljmp
jle
fmuls
addr16
pop
mov
das
es
and
ds
mov
add
leave
and
out
sub
dec
imul
add
dec
xchg
fistpll
daa
rorb
sbb
push
push
jl
push
sub
leave
mov
pop
push
cmp
dec
inc
loope
mov
loope
mov
idivb
int3
push
rolb
xchg
into
les
or
mov
push
push
sahf
popf
lds
cmp
cltd
testl
idivl
je
pop
jae
ljmp
mov
inc
pusha
sbb
insl
sub
mov
sbb
mov
stos
xchg
push
insl
adc
daa
fwait
aad
loopne
xor
dec
cld
pushf
push
push
aas
out
out
aaa
push
inc
push
and
outsl
push
ljmp
xchg
cmp
push
repnz
cmpsb
mov
dec
mov
add
repnz
aam
dec
imul
rorb
inc
rcrb
and
push
sbb
mulb
gs
outsb
insb
push
mov
add
repnz
insl
mov
pop
out
incb
dec
add
sub
xor
outsb
pop
stos
jge
jle
repnz
xchg
mov
adc
push
outsb
inc
into
movsl
lahf
loope
dec
xor
mov
dec
ret
out
movsl
clc
mov
dec
push
lahf
xor
mov
xchg
push
jg
lcall
push
mov
into
sbb
imul
dec
pop
push
and
mov
sub
sbb
or
mov
pop
enter
stos
pop
push
push
test
mov
mov
repnz
aas
fimull
adc
outsb
aaa
rolb
cmp
and
fists
in
in
sbb
mov
xor
add
push
and
lahf
ja
mov
mov
sbb
lock
mov
insl
popf
in
pop
ss
push
cmc
into
loope
aad
sub
shrl
lcall
insl
dec
pop
inc
das
jecxz
add
inc
mov
out
nop
scas
daa
gs
das
enter
icebp
push
xchg
loop
imull
jno
insl
rcl
dec
pop
or
xor
loope
adc
add
jle
pop
lods
ja
andl
inc
sbb
aas
jno
sub
loopne
push
cmp
dec
cmp
in
sbb
jmp
cmp
pop
gs
int3
dec
cld
test
mov
outsb
mov
mov
sub
out
push
cmpsl
inc
stos
cmp
ljmp
mov
xor
pop
xlat
nop
dec
fcoms
dec
daa
sub
xor
cwtl
push
popf
imul
adc
jl
test
mov
mov
push
mov
daa
les
popl
adcl
rclb
xchg
dec
push
aas
negb
mov
leave
push
push
cmpsl
jg
out
pop
imul
xchg
xor
inc
in
xor
jge
fidivrs
fistpll
out
ljmp
je
int3
sub
mov
adc
pop
adc
push
pop
cmp
sub
pop
cmp
sub
dec
les
addr16
rcl
loopne
nop
int3
push
idivb
aam
imul
push
sub
inc
ljmp
cmp
xchg
sbb
xchg
or
pop
jae
in
sbb
mov
mov
movsl
shrl
jo
repnz
enter
xchg
pushf
outsb
movsl
aas
je
les
scas
cmp
ss
test
cmc
pushf
das
cmp
cld
dec
shlb
adc
cmp
xor
fwait
inc
lcall
push
mov
dec
inc
jb
xchg
push
or
cli
les
push
pusha
int3
fsubs
push
ret
jbe
xor
hlt
add
pop
sub
push
lods
add
push
test
adc
pop
mov
dec
fistl
sbb
push
mov
push
push
scas
fsubr
pop
cmp
adc
xchg
imull
mov
dec
imul
jl
adc
mov
lret
movsb
mov
lcall
dec
dec
add
push
fiadds
jns
ljmp
pop
jne
add
inc
js
icebp
push
cli
jl
mov
leave
pop
js
test
mov
mov
pop
sub
mov
movl
add
sub
movsb
or
scas
sbb
xor
add
xor
data16
push
inc
push
jno
adc
jg
add
subl
fcomip
add
into
cmp
xchg
aas
arpl
xchg
mov
aam
xchg
sbbl
xor
sbbb
cs
mov
adc
sbb
mov
mov
popf
fwait
or
push
push
and
arpl
adc
push
scas
push
fldcw
js
subb
sbb
pop
nop
outsb
sub
jmp
mov
and
nop
mov
das
loop
inc
les
fsts
or
add
imul
pop
inc
in
dec
iret
cwtl
inc
pushl
aad
inc
cmc
inc
fdivrs
inc
roll
test
mov
inc
pop
mov
std
sbb
add
movsl
into
popa
int3
fidivrl
dec
nop
div
xchg
adc
popa
jge
in
popl
jb
sahf
nop
ret
dec
popf
or
into
lea
cmp
pop
mov
je
fadds
aad
mov
je
mov
xchg
addr16
jl
jg
clc
test
pop
cmpsl
mov
inc
rclb
enter
add
in
inc
test
pop
mov
decb
shl
mov
jg
jecxz
mov
jne
dec
mov
imull
imul
pslld
inc
mov
xor
push
outsl
and
lods
inc
cld
dec
cwtl
push
add
scas
dec
fsubrl
subl
mov
call
int
aas
movsl
aaa
imul
adc
out
pusha
mov
fwait
push
pushf
lock
sbb
lock
and
or
mov
push
ret
pop
lds
sub
repnz
insl
jns
or
push
mov
outsb
out
outsl
pop
jno
stos
adc
xor
pushf
inc
movsb
xchg
dec
out
xor
pop
mov
xor
sbbl
adc
hlt
repz
sub
lods
orb
cwtl
jp
mov
push
test
fucomi
mov
inc
mov
sbb
mov
clc
dec
out
pop
ret
mov
pmaxub
cs
nop
into
notb
dec
mov
and
les
sbb
neg
dec
xor
jmp
orl
jnp
add
xchg
jle
dec
mov
pop
gs
les
xor
add
dec
test
movsl
sub
sub
stc
pop
pop
lods
out
xchg
jge
adc
inc
fdivrs
repz
jne
lret
out
lret
jmp
test
mov
mov
call
mov
ss
push
pop
xor
adc
outsb
or
movsb
adc
outsb
out
pop
pop
sub
cld
in
sub
sbb
mov
mov
sbb
dec
int3
inc
sbb
fsubl
jno
cmp
mov
jle
jmp
push
push
lods
push
jg
in
jno
ja
mov
out
test
lods
pop
lret
cmp
mov
sbb
xlat
push
xchg
nop
mov
push
and
xor
lret
das
fisttpll
pop
mov
adc
sbb
xor
and
gs
les
testb
fdiv
sub
cld
icebp
xchg
add
jne
divl
mov
mov
cmp
cmp
movsb
fildl
push
fdivrl
aam
mov
mov
scas
stos
stos
nop
push
mov
xor
xlat
nop
mov
cld
lea
cmc
outsl
movsb
fildl
dec
movsb
mov
pop
mov
loopne
pop
ficoms
lret
sub
daa
mov
mov
jo
fmul
push
mov
inc
movsl
mov
jp
mov
pop
add
dec
mov
sub
pushf
cmpsb
mov
stc
ret
jg
pop
out
inc
adc
pop
fwait
mov
mov
insb
mov
rcll
lods
das
mov
in
cli
or
scas
mov
or
les
sub
push
dec
push
fdivrl
pushf
cmp
ret
movsb
pop
xchg
loop
movb
ja
aaa
leave
outsl
lahf
mov
add
shl
sbb
cwtl
inc
mov
lret
dec
pushf
das
jne
adc
add
xor
cwtl
pop
mov
sbb
xchg
rcrb
sbb
jle
mov
sarb
pop
imul
ret
pop
cld
sbb
dec
dec
cmpb
scas
shl
scas
mov
pop
es
sbb
cmp
pop
push
subl
pushf
sub
jp
insl
jne
je
gs
shrl
sub
jno
shll
imul
sbb
call
pop
insb
movsl
add
rcrb
shlb
push
rorb
push
rorb
into
jmp
test
gs
jno
insl
in
dec
mov
scas
jecxz
fs
pop
cwtl
out
xor
clc
testb
mov
mov
outsl
movsb
push
ss
sbb
scas
cltd
and
fdivs
sub
sbb
ret
pop
lahf
sbb
jb
out
pusha
imul
shll
dec
cmp
testb
and
jmp
test
jl
scas
sub
sbb
xor
adc
ljmp
sub
pop
push
inc
cli
dec
dec
test
idiv
mov
jecxz
in
imul
push
cld
cmp
test
movsb
fwait
xor
stos
sub
dec
cmp
add
or
cmc
jbe
aam
pusha
jle
popa
loopne
dec
mov
aas
lcall
mov
adc
cmp
pushf
jno
pop
xorl
out
cmp
xor
or
or
shlb
pop
or
jmp
sbb
and
push
adc
insl
jo
rorl
pop
ljmp
addr16
ret
hlt
adc
and
push
enter
xor
inc
jge
out
mov
push
lods
push
sub
fstpt
pop
jns
push
xchg
dec
cmc
xor
orl
mov
shr
mov
xchg
xor
add
push
rorb
mov
out
lods
mov
mov
jg
mov
xor
dec
mov
mov
cld
pop
rorb
and
push
jg
xchg
lret
push
out
outsb
icebp
or
addr16
push
leave
es
or
jae
out
jo
fistl
xchg
enter
bound
lea
dec
stos
ret
hlt
fistl
jb
mov
out
js
sbb
push
jbe
pusha
or
pop
arpl
jae
adc
adc
xor
jns
sbb
xchg
sub
fisttps
lret
mov
xor
fwait
add
int3
adc
ja
push
add
std
decb
dec
incl
pop
mov
cmp
xor
mov
pop
aam
movsl
push
jns
pushf
inc
es
pop
dec
adc
sub
cmp
adc
xor
or
xchg
sti
xor
aas
out
push
fbstp
add
test
mov
mov
xchg
sbb
stc
xor
test
rorl
cwtl
les
aad
je
mov
out
ds
sub
das
mov
dec
cmp
fs
jg
jbe
imul
repz
jnp
loopne
sbb
imull
cmp
test
je
lds
testb
sahf
xchg
movsb
add
cmp
and
mov
into
stos
xchg
test
fwait
push
out
xor
inc
enter
adc
inc
cli
lock
enter
pop
cwtl
mov
mov
data16
cmp
roll
mov
mov
jl
mov
push
and
mov
mov
sbb
push
js
and
xchg
fdivr
adc
adc
loopne
xchg
stos
xor
lods
push
insb
test
insl
lock
jge
xchg
repz
sub
in
rcl
aam
push
pop
push
call
inc
sub
test
mov
mov
int3
xor
mov
inc
sahf
idiv
cld
clc
push
and
mov
jnp
roll
and
jns
jl
dec
cmpsb
movsl
mov
pushf
push
lahf
cmp
push
pop
jae
subl
ja
in
mov
clc
repnz
nop
cmp
dec
jae
ja
subl
push
add
iret
inc
jl
pop
mov
addr16
mov
lea
cmpsl
inc
aam
mov
mov
loopne
popa
mov
aam
mov
arpl
jne
inc
icebp
cmp
in
sahf
notl
push
sar
inc
jnp
jo
rcr
and
dec
fdivrl
cmp
xchg
dec
js
aam
jb
push
adc
xor
push
das
rol
or
jne
add
test
in
cld
mov
mov
out
mov
mov
jnp
imul
jmp
jbe
cmp
shll
scas
adc
sbb
dec
shrb
ds
mov
pusha
push
dec
loop
push
pop
ljmp
pop
aaa
jecxz
mov
push
adc
sub
pop
sub
mov
and
xor
imul
dec
sub
rep
out
adc
int
mov
lock
inc
jmp
push
push
push
loopne
ds
cltd
add
addr16
dec
cmp
sbb
outsl
ds
outsl
sbb
dec
fnstenv
push
mov
nop
cmp
mov
xchg
stos
add
dec
loop
jo
hlt
cmp
scas
into
mov
sbb
cmp
fnstsw
ds
orl
outsb
sbb
lods
insl
ret
mov
push
fdiv
cmp
in
cmp
cmc
in
cmc
daa
lcall
pop
mov
xor
xchg
test
aas
pop
pop
jmp
fnstcw
jnp
mov
out
dec
sbb
out
rclb
mov
flds
test
lock
ss
add
jns
add
lea
add
das
mov
scas
jecxz
push
dec
xor
pushf
test
repz
js
leave
testb
in
shl
mov
imul
mov
jno
out
mov
pop
mov
inc
popf
test
mov
mov
and
fcom
and
imull
outsl
nop
mov
add
add
jg
cmp
cmc
mov
dec
fcomps
jle
popa
sub
pop
in
rolb
cwtl
fidivrs
mov
cmpsl
push
mov
in
xchg
aam
pop
xchg
aas
pushf
sbb
jbe
or
loop
mov
jb
loope
push
sub
lods
add
pop
rorl
push
dec
bound
nop
pop
jbe
pop
mov
push
jo
add
cmp
enter
adc
pop
js
xlat
push
shl
xor
ret
test
jge
fldl
and
into
repnz
cmp
fiadds
inc
sbb
imul
les
add
call
pop
jnp
or
inc
mov
and
rol
test
sbb
add
fwait
or
xor
arpl
insb
xchg
int
sub
loopne
push
pop
adc
sub
test
add
lcall
cli
xor
pushf
pop
xchg
xor
fs
inc
movsb
aaa
jp
sub
push
mov
sub
subb
cltd
jb
out
popa
mov
xchg
subb
shr
pop
outsb
pop
mov
shlb
mov
and
cmp
outsl
nop
pop
pop
add
rorb
jnp
out
js
daa
push
jl
in
pop
mov
xor
fcmovb
push
push
lret
or
cmp
pop
inc
pushf
in
mov
inc
aas
movl
cwtl
push
enter
fs
imul
out
scas
cmp
sub
jg
mov
jb
in
in
jl
mov
pushf
out
pop
push
xchg
shlb
pop
dec
push
imul
test
shrl
push
test
and
jge
push
jmp
fdivrl
sbb
push
pop
hlt
adc
push
roll
jnp
dec
mov
aas
fidivs
dec
outsb
and
push
pop
sub
jnp
ds
dec
pusha
pop
dec
mov
push
sub
add
js
in
lods
push
lods
lods
sub
in
daa
mov
ljmp
imul
sbb
rcll
pop
xchg
cs
xlat
dec
xor
sub
les
jmp
dec
inc
and
aad
push
xor
lods
aad
mov
and
jae
iret
cs
mov
sub
lods
xor
push
inc
mov
mov
mov
pop
sbb
xchg
push
test
js
mov
test
xor
cmp
dec
add
pop
loop
imul
and
jmp
gs
into
fdivrs
cwtl
fucomi
jno
lock
int
push
out
mov
dec
dec
jl
movsw
and
fisubs
adc
lahf
push
test
popf
fwait
or
out
outsb
inc
dec
outsb
fldl
inc
mov
xchg
mov
mov
dec
push
cld
arpl
jge
push
and
push
mov
dec
bound
mov
sbb
lcall
addr16
bound
inc
xchg
icebp
std
hlt
insb
fwait
push
fidivrs
repnz
jg
test
aam
orl
movsb
mov
cmc
and
stos
pushf
test
xlat
jmp
mov
jg
lods
pop
fucom
es
aam
cmp
int3
fs
insb
out
jno
lods
sahf
addr16
mov
mov
adc
mov
mov
mov
cmp
in
push
mov
mov
sub
sbb
jae
aam
lret
movsl
jo
fcompl
xchg
push
sub
repnz
jp
hlt
das
jb
loop
push
push
push
js
mov
out
push
jge
dec
mov
cld
dec
and
mov
mov
pop
movsb
dec
jl
mov
add
int
insl
dec
test
pushf
outsl
pop
sahf
roll
fdivr
mov
lcall
push
ret
xchg
jne
mov
xchg
inc
insb
test
das
pop
xchg
and
mov
mov
js
loope
mulb
inc
mov
cmp
aas
dec
cmc
push
lea
cmp
loope
xchg
inc
ss
add
iret
insb
ljmp
push
insb
ds
adc
jl
xlat
leave
lea
xchg
fsubs
push
in
push
js
enter
call
mov
leave
sub
xchg
cmp
pop
nop
add
imul
insl
jle
lods
ficomps
mov
cli
pop
fisubrl
mov
lcall
sbb
or
jg
div
xchg
idivl
jecxz
stc
test
sub
dec
dec
add
dec
push
cld
push
fs
out
lret
mov
cmpsl
and
push
mov
cmc
add
outsl
fidivs
addb
jle
fdivrp
mov
lods
and
dec
xchg
ja
out
fists
ret
sbb
mov
xchg
dec
dec
ja
mov
or
lahf
xor
add
leave
sbb
xlat
jmp
lods
std
cwtl
call
bound
mov
adc
sbb
dec
ret
mov
addr16
stos
mov
push
push
xor
dec
jl
or
jge
std
ljmp
std
iret
stos
adc
sbb
fistpl
or
ret
test
repnz
scas
jl
fnstsw
and
pop
xchg
push
test
insb
adc
sbb
les
jmp
mov
push
or
or
pop
fld
mov
sarb
std
inc
cwtl
imul
pop
pushf
loop
jnp
jp
roll
mov
jbe
push
fldenv
test
rcrl
in
push
and
cs
xor
inc
fsts
mov
mov
push
mov
int
cmp
insl
insb
insb
into
test
std
mov
push
push
inc
ss
lock
or
cmp
add
gs
sub
jae
jbe
fwait
or
ljmp
jp
dec
shll
and
leave
mov
fstpt
adc
fsubr
mov
cmp
xor
sub
and
fdivl
pop
aad
inc
cwtl
sub
pop
cmp
loope
subl
je
mov
lds
inc
iret
or
xor
adc
movsb
aas
or
and
push
iret
outsb
inc
test
inc
push
jnp
xchg
sub
or
xchg
xor
cmp
inc
mov
imul
pop
inc
stos
fs
jae
jp
jmp
push
mov
enter
and
outsl
sbb
ds
call
nop
inc
adc
out
mov
sbb
mov
adc
movsb
imul
outsl
lahf
adc
add
mov
je
sahf
push
outsl
mov
or
loop
fsubr
xchg
mov
xchg
jo
jnp
or
cmp
or
mov
mov
fisttpll
sbb
mov
rcrb
clc
sti
imul
in
arpl
pop
ljmp
fcoml
les
lea
fisubrs
stos
int3
test
out
push
lods
fcomps
das
rolb
xor
repnz
dec
lds
jbe
loopne
mov
mov
js
jae
test
mull
aaa
mov
sti
adc
popf
sbb
mov
xor
cmp
sub
dec
mov
outsl
dec
repz
mov
lret
jl
dec
fbld
fstpl
inc
cld
sub
pop
int3
inc
mov
int
adc
sbb
jae
sub
std
icebp
push
idiv
mov
jno
sbb
fs
movsl
sbb
iret
add
sbb
mov
es
notb
adc
inc
dec
jno
dec
movsb
push
lahf
movsl
mov
mov
out
push
and
pop
sahf
lahf
in
fstl
fnstcw
mov
xchg
jnp
test
das
cltd
push
scas
mov
add
mov
ret
and
jns
repnz
gs
mov
shrl
out
push
pop
ss
enter
out
dec
jbe
dec
dec
cmp
xchg
out
inc
sub
cltd
ljmp
std
mov
xor
mov
std
fcomp
xchg
cmpsb
js
jle
outsb
movsl
and
shll
repz
xor
dec
call
lahf
cmpsl
adc
cmpsl
cmp
push
mov
lods
add
stc
daa
repnz
sub
lret
sub
add
push
es
imul
xor
jae
push
js
xor
dec
or
and
stos
cmp
lods
jb
dec
out
je
or
dec
mov
or
arpl
push
pusha
jecxz
aaa
test
xchg
rolb
mov
push
bound
pop
repnz
dec
pop
ficoml
add
ljmp
ficoms
pop
mov
mov
pop
push
mov
push
mov
es
or
call
jo
sarl
dec
out
loope
push
popa
lret
xchg
mov
push
xor
inc
cwtl
inc
add
mov
mulb
jle
and
fcmovnbe
out
sub
adc
mov
jae
rolb
jns
add
push
xor
ret
dec
cmp
mov
cmpsl
dec
jb
orl
pop
lea
test
aam
xor
cli
lock
jle
imul
cmp
add
ljmp
mov
push
cld
addr16
jle
pop
movsl
xorb
outsb
outsl
add
out
in
add
testb
mov
push
loope
jge
loopne
and
fbld
dec
int3
dec
sub
jge
xchg
in
loope
lock
gs
out
sbb
adc
neg
outsl
rcrl
mov
js
xchg
jae
pushf
adc
bound
xchg
lods
pop
and
add
int
gs
roll
sub
jge
xor
ss
dec
xor
shll
scas
ss
push
cmpsl
mov
mov
push
jecxz
fldl
enter
xlat
mov
nop
in
mov
mov
cld
std
hlt
cmp
lcall
push
jle
push
enter
mov
jle
push
sub
call
rcrb
popf
mov
dec
sahf
fnstsw
jl
jmp
psubb
aaa
xchg
adc
xlat
cmpsb
mov
pushf
enter
sbb
jnp
fnsave
in
lods
mov
pop
repnz
int3
subl
inc
xor
xchg
negb
push
jp
pop
sub
leave
mov
adc
loope
js
lds
frstor
push
outsb
jle
mov
mov
jbe
pop
cltd
push
scas
js
mov
and
push
ljmp
aad
out
add
insb
mov
int3
test
stos
cmp
xchg
aam
push
push
shlb
ja
cld
xor
shr
cmpsl
repz
jae
into
hlt
add
mov
sbb
addr16
in
xchg
roll
adc
sbb
xor
or
ficoms
sbb
cmp
imul
or
lea
mov
cmp
out
cwtl
dec
hlt
mov
sub
sti
inc
in
fcom
clc
fwait
and
in
pop
mov
mov
sub
jno
loopne
pop
or
lock
test
pushf
je
aas
pop
or
inc
icebp
mov
jge
leave
fldt
fiaddl
xlat
pop
adc
out
cli
pop
or
nop
sub
aaa
int
push
clc
fwait
arpl
int
dec
out
out
in
lret
outsb
stos
pop
mov
and
cld
inc
inc
or
sub
out
mov
push
fistpll
sbb
ja
mov
xchg
or
stos
jbe
test
test
xchg
push
movsl
test
pop
mov
cmpsl
loope
add
out
mov
adc
xor
sbb
jmp
cmpsb
push
out
in
imulb
addr16
xor
push
jl
mov
sub
cs
movsl
xchg
and
add
mull
mov
jb
outsl
add
aam
addr16
test
lods
imul
sti
push
mov
aad
pop
xchg
mov
ret
out
pop
loope
push
jne
lret
jnp
adc
jge
inc
pushf
cmp
mov
in
mov
sbb
sbb
popa
xorb
mov
dec
int
inc
sbbb
cmpsb
cld
je
inc
push
pop
push
fcmove
cmp
inc
out
int3
push
test
fcomp
xor
subb
fnstsw
cmp
cmp
push
sbb
or
push
push
add
inc
mov
xor
lahf
cmp
jl
divl
icebp
or
fucomi
outsl
lock
jmp
test
add
lea
repnz
push
dec
sbb
mov
pop
stos
xchg
sub
sahf
cmpsb
sbb
inc
mov
cld
push
outsl
das
mov
mov
fistpll
shrl
push
dec
cmpsl
fs
adc
push
inc
xor
pop
hlt
js
mov
ljmp
push
pop
lods
xlat
mov
sub
or
mov
cli
dec
mull
popf
es
insb
lea
push
xchg
dec
push
outsb
mov
jl
out
outsb
jns
scas
test
and
pusha
mov
jo
inc
divb
mov
pushl
movsb
cmp
je
in
cwtl
inc
xchg
add
add
xor
movsb
loopne
stc
imul
and
lods
movsl
cmpsl
pop
lods
in
cltd
adc
push
lcall
sbb
add
cwtl
mov
jecxz
aas
inc
icebp
jbe
push
insl
adc
push
subb
xchg
addr16
ficoms
inc
push
mov
lret
cwtl
test
ds
mov
or
xor
jb
aam
mull
lock
and
decb
movsb
mov
mov
pop
dec
js
dec
cwtl
pop
push
js
orl
shl
fistps
push
xchg
data16
mov
sub
pop
push
jle
nop
dec
out
sub
mov
cs
push
aad
mov
frstor
lret
addr16
ret
insb
xor
jo
add
inc
addr16
pop
stos
mov
mov
ret
push
or
call
add
push
mov
dec
stc
xor
dec
orb
lock
sbbl
xor
jp
std
inc
inc
lods
js
ret
cwtl
push
leave
icebp
aaa
adc
fcomi
or
lea
xlat
std
dec
ss
jns
xchg
je
mov
add
popa
xchg
xor
aaa
setb
cltd
sub
gs
ljmp
dec
test
jnp
cmp
mov
sahf
add
sub
es
hlt
out
inc
mov
mov
push
movsl
ljmp
fisubs
in
mov
mov
jae
and
dec
clc
icebp
and
jle
cmp
pop
xchg
lcall
or
stos
movsb
push
adc
lods
data16
pop
fs
aad
or
sahf
js
loop
aad
inc
jae
or
mov
mov
mov
lds
xchg
repz
movsl
sar
lcall
fs
jmp
xor
ljmp
adc
movsb
mov
jbe
cwtl
inc
inc
mov
push
dec
mov
jecxz
push
jb
xor
jns
lock
add
mov
pop
stc
enter
repz
sub
subb
imul
arpl
cmc
stos
lods
push
outsb
cmp
fidivrl
sbb
mov
fiaddl
repz
call
incb
dec
sub
imul
pop
punpckhdq
lret
stos
jp
in
inc
lret
inc
les
loop
mov
mov
subb
mov
xchg
arpl
mov
aad
jb
and
pop
inc
jno
pop
fists
hlt
pop
sub
pop
scas
aad
arpl
loopne
jno
ss
pop
and
loopne
shr
outsb
shl
jb
xchg
mov
loop
and
fistpl
pop
cli
push
mov
adc
sbb
push
or
aam
data16
into
mov
cmpsl
into
xchg
fcmovbe
in
adc
lret
aad
lret
ljmp
sbb
pop
pop
mov
xor
inc
xchg
push
cmp
int3
or
xchg
lret
xor
loopne
enter
add
cmpsl
cmpsb
and
mov
jne
mov
jl
ja
mov
sahf
aaa
iret
mov
out
sub
divb
fsubl
scas
jge
int
pushf
xchg
orl
mov
js
inc
adc
scas
fucom
jl
ret
cwtl
ffreep
push
sbb
int
add
fsub
ds
pop
fimuls
pop
cwtl
dec
shrb
cmp
mov
or
pop
adc
jmp
sub
aad
add
mov
cmp
test
or
popa
fdiv
mov
shlb
aam
repnz
jo
lahf
xchg
lahf
shr
jl
das
pop
mov
call
stc
sub
xor
add
dec
lock
add
cwtl
hlt
repnz
stos
xor
ljmp
pushf
mov
dec
dec
mov
mov
stc
mov
sub
aas
add
mov
out
mov
jp
xchg
dec
pushf
xorb
incb
pop
sarb
xor
int3
cwtl
mov
sub
xor
push
adc
mov
mov
fmull
xchg
xchg
mov
and
and
js
ja
cmpsl
shlb
ret
jno
or
mov
sti
push
daa
pusha
xor
mov
bound
clc
pop
xlat
ror
add
mov
out
pop
pinsrw
rorb
push
push
or
lahf
call
cld
or
lods
mov
jle
rorl
loope
push
test
xor
or
stos
mov
adc
fdivs
in
or
shl
sete
idivb
mov
shrb
scas
jp
push
js
fcoml
or
nop
mov
in
out
lea
faddp
pop
pushf
in
xchg
stos
lret
lods
xchg
pop
dec
mov
push
aad
xchg
jg
xchg
pushf
adc
add
mov
fsubs
cmp
mov
xchg
cmpsb
rorl
push
xor
inc
or
jp
and
xor
fsubs
mov
inc
pop
inc
int3
dec
xchg
insb
aam
dec
push
add
test
pop
mov
cmp
push
push
adc
mov
mov
cmp
pop
loopne
test
jmp
ret
stc
in
mov
xor
sbb
je
mov
mov
ljmp
and
sarb
mov
mov
add
sbb
inc
idiv
inc
in
xchg
mov
out
cmp
and
test
stc
repnz
scas
pop
jnp
mov
mov
lahf
lret
aaa
dec
pop
xchg
jo
and
pusha
int3
fwait
mov
aaa
jnp
test
jae
pop
or
fildl
xchg
push
decb
fbstp
jp
jb
sbb
inc
push
sbb
mov
or
bound
push
adc
in
pop
adc
mov
mov
dec
iret
pop
movsb
sbb
inc
lret
loop
jno
dec
pop
loope
addr16
lds
cmp
shrl
cmpsb
mov
xchg
push
in
ret
lods
nop
nop
adc
out
mov
dec
pop
out
or
loope
je
mov
sub
dec
stos
pop
out
loopne
cmp
add
sbb
out
std
fistpl
sti
cmp
dec
mov
cmp
pop
mov
jl
or
int
hlt
pushf
add
inc
xor
xor
dec
outsl
fdivl
idivb
addr16
xchg
ja
pop
fsubl
ror
ss
inc
bound
cmpsb
push
jle
movb
jnp
insb
loopne
ret
hlt
xchg
xor
movsb
and
test
in
scas
ret
jmp
aaa
insb
push
lods
mov
jnp
int3
pushf
test
mov
lock
inc
jl
add
sub
inc
jb
pop
mov
loope
adc
mov
int3
cwtl
dec
push
mov
insb
mov
jae
mov
dec
loopne
out
repnz
lret
mov
pop
cltd
sbb
lret
mov
out
mov
xchg
inc
les
xchg
fsts
fisubs
loope
sbb
aas
je
daa
test
adc
rorl
shl
inc
mov
mov
xlat
cmp
std
scas
roll
out
sbb
mov
and
cmp
mov
stc
jnp
out
mov
xchg
daa
jge
and
cmp
push
cli
or
sarb
add
mov
movsl
lock
shlb
cli
cltd
fisttpll
cmp
pop
xchg
jno
push
je
stos
sbb
adc
inc
fildl
fisubrs
push
test
outsb
shlb
in
xchg
cmc
sub
cwtl
jmp
push
mov
enter
cli
dec
mov
or
addr16
movsb
adc
xor
das
add
jle
sub
shrb
lret
dec
push
int3
push
pop
jb
adc
sbb
adc
outsl
dec
mov
xor
mov
lret
test
adc
lds
jnp
clc
psrad
dec
ss
push
push
add
mov
loope
das
sub
push
xchg
xchg
pop
cmpsl
pop
jl
je
lret
push
or
sbb
out
inc
jo
or
rcrl
in
jae
and
pop
rcrb
in
jne
dec
pop
addr16
or
add
out
gs
cmp
xchg
in
jb
jbe
xor
lods
dec
into
lods
dec
pop
arpl
in
add
pop
mov
mov
cmpsb
adc
lock
lock
loop
mov
xchg
xchg
or
ret
dec
popf
inc
shr
jne
les
sub
ss
xor
nop
mov
pop
ficoml
nop
loopne
ss
into
or
int3
mov
mov
movsl
jmp
adc
movd
into
jbe
mov
inc
fwait
cmp
push
pop
inc
movsb
sub
lret
xchg
dec
sarb
negb
xor
dec
add
lahf
ljmp
jge
push
jno
cld
pop
mov
ret
sub
jb
sbb
push
fldl
dec
fidivrl
dec
je
sti
push
dec
or
sahf
cmc
xchg
adc
rol
ss
pop
xor
nop
cmp
push
ss
ss
dec
push
push
push
cmp
std
insl
jg
cmp
jl
popa
mov
inc
dec
mov
cs
jp
mov
jae
jo
cld
pop
aad
mov
sub
mov
xchg
push
imul
sarl
jle
jb
fcompl
addr16
jg
fs
bound
pop
aad
mov
push
adc
inc
pop
xlat
xchg
aaa
add
aam
push
mov
aam
pop
push
sbb
dec
or
mov
das
jb
and
push
mov
jne
stc
fsubl
push
out
cs
jge
mov
sub
lds
xchg
pop
lds
ja
xor
jb
pop
sbb
fistps
add
lock
fistpll
adc
pop
faddp
aas
sub
mov
ja
shrl
arpl
out
jl
ja
cmp
fstl
jo
push
out
dec
outsb
push
imul
gs
aad
jl
sbb
inc
sbb
nop
pop
std
int
out
hlt
pop
pop
xchg
add
addb
lret
jae
popf
pushf
mov
cmpsl
xor
cmp
xchg
xor
into
sub
pop
hlt
mov
sbb
out
mov
pop
sti
mov
bound
xor
cmp
ret
jle
cmp
add
es
inc
lahf
cltd
mov
push
movsb
fnsave
xchg
xor
les
mov
sahf
pop
cs
ret
add
inc
cmp
es
jp
pop
out
mov
xchg
scas
outsb
mov
xor
jmp
out
mov
dec
dec
mov
testl
pop
sub
sbb
in
mov
xchg
test
mov
jg
lods
sub
jmp
int
int3
cmpsl
lods
cmpsb
and
sub
pusha
mov
incb
mov
imul
mov
loop
push
mov
mov
cmpsl
in
add
dec
in
mov
mov
aaa
mov
jno
incb
mov
decb
in
xlat
push
xchg
sbbl
aad
mov
out
mov
inc
jl
fdiv
fisttpl
lods
icebp
cld
mov
in
mov
out
mov
aaa
call
mov
push
pushf
ficoml
js
sub
mov
decb
mov
mov
lds
idivl
lds
loop
inc
repnz
aad
repz
in
sarb
mov
jl
xlat
in
mov
js
lret
add
mov
sub
dec
adc
xchg
push
pop
mov
xchg
push
sarl
jno
icebp
sti
mov
xchg
in
enter
jl
fwait
adc
fdivrs
aas
cmpsb
or
add
mov
icebp
in
mov
icebp
movsl
mov
in
or
xchg
push
mov
stc
mov
mov
xchg
xchg
icebp
cmp
push
xchg
mov
mov
data16
lock
fs
idivl
ss
mov
cmp
repnz
xchg
mov
ss
cmc
adc
dec
and
push
sub
es
fsubl
out
lods
cld
push
mov
inc
cmc
add
jmp
push
aam
clc
dec
jl
leave
mov
dec
push
xor
or
movsb
imul
inc
mov
jne
lea
aaa
jns
in
mov
sahf
outsb
mov
stos
enter
add
std
mov
es
test
cmc
or
adc
inc
dec
shrl
daa
xchg
sub
stos
push
daa
les
inc
out
push
arpl
push
sbb
mov
fcmovnu
shl
push
faddl
test
aad
pop
aad
cmpsl
push
sub
stc
xchg
push
fnstsw
int3
ljmp
jge
pop
clc
sub
repz
push
mov
inc
jb
scas
dec
lods
popf
mov
fcmovu
inc
js
jecxz
jno
dec
hlt
cmpsb
inc
xlat
add
xlat
stc
test
mov
add
nop
dec
shll
aam
dec
mov
loopne
sahf
scas
or
lahf
js
xchg
int3
out
dec
in
aas
popf
add
out
stos
loope
sbb
cmc
fadd
jnp
cmc
adc
and
or
pop
into
cwtl
sub
jne
loop
xchg
std
fwait
xchg
shll
dec
xchg
loop
push
and
ror
mov
pop
aas
mov
sub
out
pop
add
or
ret
stc
cmc
gs
xchg
pop
inc
lret
enter
mov
insl
adc
out
popf
or
scas
test
pop
or
dec
ds
dec
sahf
div
xchg
test
call
sub
lods
cmp
cmp
adc
dec
test
mov
lods
jae
dec
es
jg
mov
fsubrs
lock
mov
in
subb
sbb
movsb
dec
icebp
mov
xor
cmp
fistl
int3
inc
fidivl
setl
cmp
lahf
adc
call
push
or
stos
mov
pop
adc
cmp
fldl
ja
nop
lea
add
pop
leave
push
jg
movsb
sbb
xor
loop
pop
jp
leave
adc
pop
adc
int3
fstpt
divb
add
ficoml
sbb
in
ret
add
aam
outsb
pop
or
in
or
sbb
xor
shlb
les
test
mov
mov
mov
int
shl
out
into
jo
mov
mov
outsl
ficoml
jp
xchg
jae
pop
jl
pop
rolb
enter
add
pop
dec
es
je
imul
cwtl
add
xchg
repnz
mov
gs
xor
scas
cwtl
shl
xchg
cmpsl
xor
clc
xchg
aaa
sbb
xor
ljmp
cmp
inc
subb
stc
push
push
sub
pop
push
sbb
call
out
nop
add
daa
out
cmp
xchg
sub
push
xchg
adc
into
cmp
mov
clc
fucom
mov
lea
ja
pop
cmp
dec
aaa
outsb
jb
mov
in
ja
loop
inc
fcmovu
stc
mov
jl
dec
out
push
loopne
sbb
scas
ja
cmp
imul
orl
inc
mov
xchg
jmp
arpl
ficompl
cmp
mov
cmp
xor
cld
aam
ljmp
stos
cld
inc
pusha
xchg
pop
or
jmp
push
fwait
sub
pop
mov
movsb
lcall
and
inc
inc
add
fdiv
jne
lds
or
sbb
icebp
jno
adc
push
pusha
sbb
jb
mov
push
adc
aaa
sti
outsb
xchg
test
mov
push
in
xor
fcoms
xor
mov
lcall
dec
sti
sbb
pop
inc
les
mov
dec
sub
cmp
pop
add
xchg
shrb
pusha
mov
imul
dec
and
test
pushf
push
jae
into
ret
icebp
mov
pop
mov
test
jmp
push
sbb
mov
push
xor
mov
jae
repz
mov
push
pop
outsb
mov
test
xor
push
jge
xor
icebp
jl
leave
sub
into
aad
icebp
inc
shrl
dec
add
jl
in
repz
sbb
dec
xor
cmpsb
ss
test
mov
push
outsb
fwait
cmpb
clc
mov
je
les
push
int3
add
hlt
pop
mov
xor
xchg
stos
cmpl
mov
jmp
xchg
sahf
or
pop
xchg
and
aad
push
out
std
jl
add
push
xchg
cmp
data16
test
jp
cmc
sub
testb
jnp
mov
je
xor
inc
ficoml
and
lahf
in
xchg
ss
jle
add
lret
lock
test
insb
shl
add
popa
cmp
xchg
out
inc
outsb
push
push
mov
xchg
dec
push
test
push
loopne
xchg
les
mov
scas
imul
inc
dec
pop
shlb
lret
adc
pop
add
test
insb
rclb
push
and
popa
out
scas
cmpsb
jg
sti
jb
out
fimull
add
dec
mov
or
sub
sub
mov
jle
or
mov
push
test
nop
pop
xchg
aaa
les
fabs
xchg
push
aam
mov
inc
mov
fwait
es
cmp
cmpsb
push
inc
arpl
das
clc
mov
mov
arpl
outsb
mov
lock
scas
lcall
push
test
xor
aad
mov
mov
aam
fnstcw
push
mov
lds
popa
jne
incb
mov
cmp
mov
aas
xchg
movsb
aas
jne
dec
leave
fwait
jae
xchg
mov
cmpsl
mov
mov
insl
inc
dec
cmpsb
jbe
out
or
mov
sbb
adc
pop
orl
enter
xor
sbbl
pop
sbb
cltd
pop
pushf
pushf
add
lcall
xchg
jnp
test
out
mov
loope
scas
sbb
and
fadds
mov
add
mov
mov
int3
mov
aad
mov
xchg
pop
cmpb
sub
adcb
inc
jg
std
data16
jbe
pop
je
das
fwait
cs
cmc
lods
pop
sbb
stc
fucomip
nop
lret
aad
or
dec
fnsave
cli
mov
movsl
jge
insb
pop
pop
pop
cmp
arpl
dec
loope
sub
inc
jnp
push
stc
mov
mov
leave
int
push
aad
sahf
adc
sub
and
inc
xchg
gs
lods
and
push
add
shrl
xchg
push
mov
arpl
out
test
dec
in
mov
mov
xor
mov
sub
call
and
iret
stc
in
nop
inc
jle
shl
repz
loope
or
cmp
outsb
sbb
or
mov
jg
es
sarl
ds
add
nop
adc
push
inc
imul
movsl
out
jle
xlat
or
loope
adc
aas
clc
jecxz
mov
add
aaa
jne
inc
mov
xchg
jecxz
push
lods
divb
ds
outsl
into
pop
sbb
dec
leave
js
mov
sbb
sub
xchg
mov
mov
push
lret
in
sbb
notl
lahf
std
int3
js
loop
sbb
mov
out
aam
or
in
sub
cmp
lcall
loop
mov
adc
leave
std
jmp
inc
bound
out
or
out
jns
xor
cmp
mov
jg
add
stc
push
mov
mov
jns
incb
lcall
aas
add
push
shrb
pop
fwait
lock
js
dec
push
inc
pop
inc
xchg
test
out
add
inc
shlb
pop
push
ja
mov
ficoml
shr
mov
test
mov
mov
negb
mov
pushf
enter
push
inc
xchg
lret
add
xlat
notl
adcb
jno
or
push
rcrb
pop
rcrb
jle
pop
mov
push
in
out
je
lcall
dec
adc
dec
loop
in
pop
loope
mov
jo
jecxz
fsts
push
movsl
lcall
sti
jae
pop
aam
test
inc
sbb
pusha
cmp
sbb
dec
nop
add
cmp
mov
cmp
shrb
daa
mov
xchg
ds
dec
nop
and
xor
add
repnz
adc
push
dec
and
sub
mov
cmp
das
movsl
push
xchg
mov
cwtl
ljmp
clc
pop
or
fwait
bound
cmp
cwtl
xchg
mov
call
ret
jp
cmpb
out
mov
mov
xor
xor
loopne
xor
xchg
sbb
jmp
pushf
mov
inc
push
rorb
sbb
xchg
sub
std
js
imul
cltd
cld
fs
cmp
pop
jo
jnp
aas
out
jge
clc
lock
and
test
aaa
cmp
push
test
adc
cltd
idivl
or
popf
bound
adc
daa
daa
shrl
jle
inc
out
xchg
nop
sub
push
aas
add
xor
fwait
nop
pop
pop
cmp
inc
add
mov
sub
xor
or
scas
dec
repnz
dec
fildll
adc
imul
fisubrs
dec
jp
cmp
xor
ds
je
pop
and
out
sahf
lret
into
fisubl
lods
sbb
xchg
push
loope
iret
ds
repnz
inc
push
add
pop
rcrl
pop
xchg
jl
push
les
pshufw
push
mov
pusha
arpl
mov
fadds
pop
adc
pushf
fst
and
clc
cmp
fwait
out
pop
push
cmp
and
pop
or
or
movsb
xor
dec
pusha
sub
add
js
jl
jl
in
cmpb
lcall
loopne
xor
push
rorb
xchg
je
stc
cmpsl
loopne
cmp
rol
sub
push
fdivrs
cmc
and
mov
fldcw
fnstcw
cmpsb
mov
stos
test
add
ret
negl
negl
jnp
xchg
xor
cwtl
dec
aas
adc
push
pop
les
jge
sub
cmp
int3
adc
mov
shl
xor
adc
imul
push
fiadds
lods
add
pushf
sti
mov
cmp
les
push
add
xor
outsb
jnp
vandps
int
dec
mov
mov
xor
sub
out
or
mov
push
mov
cmp
jb
push
pop
sbb
daa
jl
mov
push
inc
or
icebp
add
aad
hlt
popa
xor
jbe
sbb
enter
icebp
out
sbb
sub
pop
movq
mov
mov
call
outsb
cmp
in
sbb
xchg
push
mov
adc
fisubl
popf
fmull
jl
lea
pop
ds
push
jo
jg
mov
ljmp
push
dec
out
lret
dec
mov
or
sbb
sbb
cmp
ljmp
inc
sub
inc
test
ret
ja
lahf
sub
xchg
mov
push
dec
adc
loope
fsubrp
scas
das
jmp
ret
mov
sbb
repnz
dec
xchg
lods
or
and
sbb
inc
rep
or
out
outsb
dec
push
hlt
lods
ret
cmp
jns
call
ficoml
dec
das
xchg
cmp
lret
dec
call
sbb
fst
rcrl
clc
dec
lret
pop
and
movsl
pop
pop
xor
push
jge
xor
and
inc
subb
dec
push
frstor
gs
and
lock
xlat
and
ucomiss
mov
jae
dec
mov
dec
in
jl
xchg
dec
sti
sub
scas
jb
leave
xor
divl
sbbl
nop
pop
ds
addr16
mov
andl
mov
add
cld
faddp
fiadds
cld
inc
and
xchg
sub
insb
aam
pop
lret
cli
jne
xor
or
stos
adc
fidivs
pop
mov
pop
or
aam
lahf
adc
sbb
ret
fwait
xlat
cmpsb
pop
lods
dec
popa
js
cld
mov
imul
cltd
or
push
shr
mov
ds
in
push
dec
into
or
jecxz
xchg
loopne
pushf
fcompl
std
xor
jae
out
jp
sbb
jb
sbb
sbb
pushw
stc
ret
call
call
mov
sbb
push
jge
push
sub
call
sub
push
jne
pop
dec
scas
or
aas
out
rol
add
pop
stos
clc
popa
cmp
xchg
mov
in
jnp
gs
movsl
xchg
bound
test
mov
dec
shl
fnstcw
insb
subps
je
jno
xor
mov
xor
and
add
popf
leave
in
insl
pop
add
jg
ret
pop
pusha
sbb
inc
dec
mov
push
or
inc
clc
pop
jae
inc
inc
std
inc
push
adc
inc
mov
dec
out
xor
mov
loopne
push
fisttps
jecxz
adc
fwait
inc
mov
pop
gs
or
fmull
sbbl
into
sub
push
stos
rcrb
jmp
xor
xchg
dec
jge
jb
pop
jl
inc
cld
push
inc
xor
pop
popf
rorl
cs
sahf
xchg
das
or
mov
ja
clc
int3
dec
sub
cs
out
cmp
push
hlt
inc
inc
rorb
dec
pop
call
cmp
ss
cmpsl
and
xchg
cmp
inc
mov
dec
sub
xchg
pop
aad
and
xor
jp
in
call
js
jge
frstor
xor
les
or
mov
jae
outsb
cmpsb
mov
int3
out
jo
shlb
popf
mov
les
or
dec
xchg
inc
pushf
sti
out
repz
xor
push
dec
aaa
pusha
jmp
jnp
lret
xor
loop
mov
and
cmp
loope
dec
push
sahf
jne
loope
addl
nop
jb
int3
push
push
fadd
je
sub
xchg
das
mov
cmp
test
xchg
or
jb
pop
sbb
cwtl
inc
leave
push
pop
dec
cmpsb
jae
pop
or
sub
es
push
stos
xor
iret
loopne
dec
adc
push
push
insl
ficoms
mov
mov
add
cld
insl
xchg
repz
inc
sub
pop
push
lret
inc
into
test
inc
xor
dec
shr
push
push
rolb
es
jo
sahf
ret
movl
dec
divb
cmp
and
dec
call
or
adc
jle
push
push
int
bound
and
mov
dec
mov
fsubl
pop
push
inc
aad
lcall
jnp
mov
test
xor
and
adc
imull
mov
loope
rcpps
rcrl
mov
pop
fistpl
jg
push
mov
mov
fwait
cmpsl
jo
pop
test
cmpsl
mov
or
sbbl
sub
push
mov
or
pop
cmp
xor
popa
outsl
fisubrs
popf
pop
mov
cltd
inc
push
scas
xor
mull
cwtl
lds
adc
mov
movb
xor
sbb
inc
cwtl
jno
mov
inc
push
shl
xchg
insb
xchg
xor
dec
pop
cs
call
sahf
mov
aam
dec
jl
sarb
out
adc
xor
stc
cmp
sub
bound
lods
js
and
addr16
ds
pop
aaa
out
push
pushf
dec
cld
sub
cs
or
mov
sbb
add
add
cmp
fcoms
lock
sbb
repnz
jbe
fiadds
sub
and
in
dec
push
enter
adc
pop
dec
addr16
shlb
test
jbe
fidivrs
push
push
mov
sbb
aaa
ret
pushf
scas
clc
mov
repnz
dec
mov
cmp
xor
es
in
xor
ja
frstor
fmull
xchg
js
fiaddl
cli
nop
fcom
dec
push
es
lock
and
test
jb
js
xchg
sub
je
jae
jbe
push
insb
mov
push
ds
aaa
push
in
mov
les
xchg
movsb
mov
sarb
into
dec
cwtl
inc
js
and
clc
and
ja
fidivs
or
pop
addr16
lods
adc
xor
cli
mov
xlat
dec
insb
jle
add
pop
cwtl
fdivrs
and
lods
lock
jp
cltd
mov
pushf
ljmp
jl
loopne
push
xor
cli
sbb
or
lds
mov
std
cmpsl
push
mov
cmpsl
cmpsb
cmp
xchg
or
mov
xor
adc
xor
aam
dec
pop
mov
fiadds
insl
mov
fdivr
jo
iret
dec
cmp
cwtl
loopne
mov
clc
mov
jno
stos
aas
push
cmpsb
jo
loop
cmp
xchg
adc
adc
or
xor
call
push
clc
insb
lods
jae
jbe
push
push
mov
data16
and
aaa
push
cmpsb
loopne
mov
mov
jae,pt
xor
out
mov
jo
xor
xor
sub
mov
and
jl
aaa
lcall
mov
stos
dec
mov
cmp
into
dec
cwtl
sub
and
cld
sbb
add
and
jg
add
pop
addr16
fnstenv
adc
fcomp
dec
push
push
cwtl
loopne
mov
clc
mov
jo
mov
jae
addr16
mull
call
push
cmp
add
aaa
mov
mov
aam
xchg
stc
test
sti
dec
mov
cmp
clc
js
and
int3
or
jo
call
xchg
xchg
cmpb
orb
insb
test
fdivr
insb
fdivs
dec
dec
pop
cmp
aam
sahf
and
nop
sarb
movsl
dec
pushf
dec
cld
sub
cs
or
mov
adc
js
or
push
cli
aam
dec
pop
mov
ficompl
insb
mov
fdivr
insb
fdivs
dec
xor
cmp
mov
sahf
mov
movsb
push
pushf
sbb
xor
es
adc
adc
or
clc
xor
loopne
pop
dec
call
jae
jbe
fimuls
sub
push
cmpsb
and
jb
cld
dec
pop
xchg
fdivrs
adc
pusha
insl
in
mov
xchg
jl
adc
call
stc
insb
fdivs
dec
xor
cmp
loopne
mov
stc
mov
test
test
xchg
cmp
adc
int3
insb
cmp
and
inc
fcomps
dec
xor
ror
into
cwtl
lods
js
and
addr16
ds
pop
aaa
loop
mov
dec
xchg
sub
adc
sub
xor
and
push
dec
lock
cmp
jmp
and
insb
movsb
xor
stc
mov
rorl
cmp
clc
js
and
enter
ja
fldl
mov
ficoml
adc
sar
cmp
daa
dec
and
loope
mov
and
mov
pop
mov
popa
into
dec
cwtl
sub
cs
add
add
cld
frstor
add
pusha
addr16
mov
adc
xor
stc
pop
fmul
dec
cmp
cmp
in
lret
sahf
stos
clc
movsb
mov
fisubs
push
dec
inc
xchg
xor
and
adc
insl
sub
js
or
push
dec
in
std
repz
shlb
jbe
fiadds
data16
fsubs
jbe
add
xchg
sarb
jg
mov
jge
mov
popf
jne
hlt
or
fincstp
push
mov
fnsave
mov
rorl
xor
or
cmp
test
inc
mov
xchg
in
ja
aad
jno
sarb
hlt
add
lea
xchg
mov
fistl
jmp
cmp
fndisi(8087
push
cmp
leave
sbb
push
in
bound
data16
xor
call
daa
enter
mov
pop
cltd
stos
jne
pop
dec
jecxz
jecxz
in
sbb
dec
cld
fs
dec
cmp
popf
jbe
test
out
cmp
and
test
movsb
jmp
mov
fidivl
and
clc
loopne
ret
roll
push
mov
add
pushf
shll
xor
cwtl
sub
jne
jecxz
mov
jb
adc
lock
xor
mov
pop
xor
imul
add
dec
movsb
or
xchg
enter
cmpl
out
fsub
cld
cmpl
xchg
fimuls
or
lock
aad
jns
js
mov
test
aaa
clc
loop
pop
call
xchg
cmp
test
test
mov
jl
cmpsb
sbb
jo
mov
lcall
sbb
sbbl
movsb
inc
pushf
test
bt
sarb
testl
dec
sbb
adc
pop
fdivr
cmpsl
testb
jmp
jo
or
sbb
jle
cmp
lret
cld
movntq
mov
push
jb
out
hlt
out
sbb
jne
stc
in
ja
push
cli
mov
test
dec
add
inc
ljmp
popa
adc
mov
pop
jmp
movsb
xchg
fnstcw
lds
dec
pop
inc
insl
xchg
jl
xor
fsubr
cld
ds
scas
fildll
test
loope
jle
shrb
xchg
dec
inc
inc
xchg
lock
dec
mov
inc
xchg
mov
sbb
fimull
cmpl
add
aam
es
inc
outsb
es
int3
ljmp
sub
pop
pop
add
adc
in
mov
rcll
into
add
std
dec
xor
call
insb
push
sbb
sbb
mov
pop
add
call
outsl
xchg
push
push
xor
fucomi
sbb
mov
cmpsb
das
lahf
mov
push
mov
call
out
mov
loope
out
lock
jo
mov
cmp
movsl
dec
ljmp
insb
test
in
scas
mov
jmp
inc
ds
xor
inc
mov
mov
mov
xchg
adcl
lock
adc
or
into
push
outsl
cmp
dec
jne
jle
jp
xorb
add
mov
jns
les
dec
jg
stos
or
inc
pop
leave
hlt
js
sbb
stos
push
pusha
ss
cmp
sahf
xchg
push
adc
inc
enter
jae
push
jno
nop
fs
imul
pop
xchg
lret
add
inc
lret
test
loop
sbb
out
pop
jno
dec
in
or
mov
pop
cltd
cmp
rclb
test
add
test
add
push
add
cmpsl
mov
cld
pop
call
xor
push
inc
lahf
testb
sbb
inc
jno
add
adc
fistpll
fcoml
push
scas
notl
push
ss
jmp
mov
inc
push
push
pop
dec
sbb
xchg
fcomi
add
sbb
cmp
mov
fldpi
xlat
out
pop
pop
cmp
jecxz
clc
xchg
dec
sbb
dec
jne
hlt
aaa
jae
sub
inc
and
sti
dec
cmpsl
into
inc
inc
mov
push
cmp
push
xchg
jecxz
jge
out
jns
fcom
fisubrs
jo
mov
add
or
mov
and
ret
cs
inc
xchg
mov
mov
mov
and
out
fdivr
mov
movsl
jmp
push
sbb
adc
bound
jbe
mov
cld
dec
filds
std
addr16
lods
into
int3
cmp
cmc
aam
adc
in
jb
lods
push
mov
repz
mov
xchg
js
xor
sbb
xor
lret
inc
cmp
in
inc
jle
rcrb
loopne
xor
or
push
jp
cmp
enter
ret
sub
mov
sbb
jno
xor
into
cmp
xchg
inc
aaa
out
push
push
arpl
xchg
pusha
adc
pushf
mov
in
mov
lahf
sti
pop
xchg
lret
pusha
mov
lods
and
aaa
jnp
ja
loope
xchg
fiaddl
sahf
sub
push
pop
xor
sarb
es
ljmp
daa
dec
adc
push
arpl
in
out
ja
cmpsl
icebp
js
addl
sbb
inc
rol
inc
pop
cmc
pop
testb
lret
fsubrl
mov
dec
pop
aam
ss
jne
xor
jecxz
int
dec
cmp
inc
mov
pusha
ss
cltd
jb
inc
push
adc
add
jg
ja
fcmovnu
jno
push
rcl
sbb
loop
adc
mov
pop
sbb
jbe
stc
mov
test
daa
xor
cli
jl
popf
xor
pop
cmpsl
scas
scas
xchg
bound
movsb
in
popa
inc
pop
xchg
bound
lods
insl
jle
daa
push
pop
xor
jmp
push
push
add
jecxz
enter
sti
les
idiv
or
sahf
mov
es
pushf
xchg
or
call
lret
sub
mov
fcmove
adcb
jmp
clc
stc
xchg
cmp
dec
pop
dec
add
or
arpl
inc
popf
add
pop
pop
pushf
push
mov
dec
mov
nop
fldcw
cld
loop
adc
push
or
cmp
xchg
mov
out
xchg
test
mov
repnz
jbe
std
sbb
pop
add
lret
cltd
xorb
pusha
xlat
mov
dec
mov
movsl
cmpsl
mov
pushf
movsb
pop
inc
int3
les
ror
cmp
rorb
pop
testb
nop
lds
jo
rorb
lea
cmpsl
push
addr16
cmp
test
xchg
xchg
mov
jo
dec
js
das
jnp
fsubrs
ljmp
push
xlat
in
enter
mov
dec
inc
jae
sbb
jb
xchg
push
or
lods
call
hlt
insb
cwtl
pop
mov
push
jp
out
fld
loop
je
cs
and
aas
fdiv
xchg
insl
xchg
rcrl
dec
mov
orl
aam
out
dec
xchg
jae
add
mov
sub
movsb
dec
leave
push
inc
xor
hlt
cmp
xor
push
aaa
mov
adc
mov
mov
shlb
lods
cmp
inc
jecxz
push
sbb
es
addl
mov
cmpsl
fucomi
sbbb
in
or
ds
inc
cmp
fldl
dec
out
cli
lret
xchg
adc
sti
jmp
fnstsw
inc
daa
enter
xchg
sti
stos
sub
mov
push
or
pop
stos
loop
or
es
lods
in
clc
xchg
sub
push
jns
loopne
jns
cmc
jl
sbb
rcr
mov
rorb
xchg
mov
fs
adc
mov
dec
notl
cmp
push
fidivrl
aaa
add
inc
cmp
mov
adc
out
jo
pop
mov
dec
dec
mov
pushf
ret
mov
std
ja
scas
jl
subb
insl
and
fldt
test
repz
into
add
xchg
mov
mov
pop
pop
in
pop
cmpsb
jecxz
jne
or
pop
scas
out
xchg
pushf
lds
js
mov
pop
sub
mull
ds
cld
je
stc
loop
mov
fwait
cli
adc
and
ljmp
push
jecxz
xchg
dec
loope
mov
adc
jmp
cmp
fdivrl
hlt
pushf
js
dec
lcall
inc
insb
out
ficoml
mov
jae
adc
nop
ss
cmp
lods
mov
dec
add
lods
sbb
pop
xchg
cmp
incl
push
roll
mov
in
jg
cmp
testl
pop
lock
jp
ja
mov
mov
enter
cs
push
cmp
clc
repz
insb
dec
push
out
es
dec
push
adc
in
movsl
xchg
imul
adc
lahf
and
dec
test
lea
cli
xchg
fadds
jg
lahf
idivb
shr
pusha
dec
dec
clc
clc
pop
xor
leave
add
stc
mov
fnstcw
sbb
roll
enter
mov
add
jb
mov
int3
fiaddl
push
aam
je
insl
sub
mov
sub
fisttpl
js
add
jbe
out
movsl
xchg
lret
outsl
xchg
cwtl
inc
cmp
cmp
aas
mov
jl
dec
inc
xchg
mov
js
hlt
arpl
mov
dec
notb
jae
mov
sbb
add
mov
ss
cmp
xor
inc
and
divb
ss
mov
push
rclb
mov
dec
add
pushf
rol
mov
xor
xor
cld
call
pop
mov
mov
mov
add
out
push
adc
xor
mov
mov
rcr
push
push
shl
sub
adc
jno
lret
mov
push
mov
push
push
jae
push
mov
rolb
test
add
adc
sub
bnd
cmp
je
mov
push
add
jb
adc
in
push
shlb
lret
movsb
xchg
push
jecxz
jge
jno
xor
push
jnp
aad
mov
lods
jmp
add
mov
xchg
mov
cmp
andl
add
mov
cmp
xor
add
push
adc
sub
sub
add
push
inc
mov
push
test
cltd
pop
imul
push
insl
cmp
adc
lods
adc
subl
xchg
bnd
sub
pop
enter
or
push
or
mov
push
enter
xchg
adc
aam
call
lods
addb
push
aam
or
sbb
cmc
dec
jg
lock
mov
mov
notb
push
sarb
subb
push
xor
enter
je
or
xor
xor
in
ds
cmp
mov
pushf
stos
negb
imul
lcall
add
ja
cmp
hlt
cmp
cmp
in
dec
push
xor
jmp
push
dec
xor
lfs
mov
hlt
add
push
ja
mov
push
or
adc
push
xor
push
rcl
mov
inc
loope
popa
xorl
xlat
sub
jge
xchg
pop
hlt
in
mov
xor
add
add
jg
sub
aad
fisubl
add
xchg
jp
leave
lods
iret
dec
adc
nop
test
pop
sbb
stc
xchg
rclb
cltd
sub
jecxz
imul
je
rcrl
push
dec
leave
lods
pop
scas
pusha
mov
addr16
sti
cs
int3
cmp
jo
and
int3
cmp
push
inc
pop
addl
dec
popf
ja
mov
xchg
mov
push
mov
jp
enter
push
out
nop
mov
pop
mov
push
test
stc
mov
sbb
xchg
lret
sbb
add
pusha
inc
in
jp
jae
clc
mov
dec
data16
fst
or
sahf
mov
dec
jge,pn
lcall
push
sub
dec
mov
ds
dec
sub
add
imul
andb
stos
rcrb
and
push
sbb
cmp
ss
fstps
push
test
test
fcomp
inc
add
leave
dec
jae
mov
pop
xchg
adc
ds
fwait
inc
lds
mov
test
vpand
mov
mov
mov
popa
cmpsb
mov
sub
cmpsb
mov
lret
rcrl
pop
xchg
push
subl
pop
cltd
hlt
xor
das
fldt
out
rcrb
xchg
ja
cmp
fstl
mov
jnp
popf
or
cmp
dec
push
or
nop
adc
mov
out
imul
mov
pop
bnd
ljmp
mov
mov
fsubrl
sub
xor
das
fwait
adc
repz
std
cs
sub
push
and
and
outsl
push
cmp
pop
cmp
add
push
adc
dec
loop
lahf
jae
and
or
es
or
jne
pop
in
mull
mov
dec
push
loope
test
ja
les
jb
cmp
mov
dec
xchg
xchg
cmp
mov
jge
dec
inc
addr16
lahf
clc
jae
leave
sbb
pop
stc
pop
jmp
in
loope
add
adc
push
sti
cmc
int
xchg
inc
cmp
and
test
cli
xor
xchg
add
xorb
leave
mov
cmp
sub
sahf
fcmovu
cmc
mov
rcrl
xor
rcrb
fnsave
or
ficoms
mov
enter
jge
inc
push
pop
inc
mov
jge
push
insl
rorl
jae
addr16
push
cmp
mov
cwtl
and
adc
lods
out
add
cmp
jns
lret
clc
enter
xchg
imul
cs
push
push
scas
cmpb
push
pushf
jge
insl
mov
pop
lods
sub
xchg
add
sbb
mov
inc
pusha
test
sbbl
out
lock
je
fidivl
or
ficoms
xchg
clc
iret
roll
test
adcl
inc
cmp
dec
insb
mov
aam
jge
inc
imul
hlt
mov
push
fcomi
mov
bound
repnz
lcall
lods
xchg
in
jae
inc
ret
shlb
fdivl
or
fsts
je
ficomps
pushf
cmpsb
cltd
or
sbb
mov
sbbb
outsb
mov
hlt
and
inc
jae
cmc
cmp
cmp
imul
cmpsb
cltd
or
fstps
subl
ljmp
enter
xchg
dec
lods
push
mov
mov
cld
pop
lahf
xorb
dec
and
add
call
aad
dec
mov
sub
sub
movsl
push
adc
jbe
mov
mov
aaa
lock
mov
int
popa
xchg
add
icebp
stc
aaa
lods
cmpsb
imul
cmpsb
add
and
dec
stos
fimuls
cltd
inc
cmp
aad
mov
xchg
mov
dec
rol
test
je
lods
jno
sub
mov
jle
or
mov
mov
loopnew
mov
adc
mov
jno
add
enter
rorl
pop
enter
js
loopne
push
les
nop
ja
rcrb
inc
testl
lret
push
ret
add
sub
mov
and
adc
dec
xchg
mov
mov
pop
pop
ljmp
mov
xchg
mov
and
lcall
mov
xor
push
out
xchg
adc
fs
rclb
mulb
push
test
jle
push
sbb
jge
sbb
push
and
or
std
repz
jbe
sbb
and
adc
orl
pop
adc
sbb
xor
popa
or
and
je
and
lea
rcll
rcrb
push
cltd
mov
ret
and
adc
pop
cmp
or
or
cmp
dec
and
movsl
adc
and
xorl
cmpl
bound
inc
sahf
push
xlat
mov
leave
inc
es
push
pop
cmp
std
lea
imul
and
mov
test
sub
xor
dec
jle
fs
out
mov
jo
scas
test
clc
xor
andl
jmp
mov
cwtl
and
out
bound
adc
jmp
lcall
or
adc
sbb
pusha
sub
xchg
dec
jno
pop
fimuls
jmp
insl
shlb
faddp
in
out
push
adc
push
popa
incb
in
mov
pop
shrb
dec
pop
inc
enter
mov
mov
jl
ret
movsb
dec
push
rorl
repnz
or
pop
sub
cwtl
adc
repz
adc
lods
cli
mov
loop
sub
xor
pop
sti
fidivl
push
adc
xor
sbb
sbb
das
lret
and
and
lock
mov
or
xchg
xor
mov
test
add
call
xchg
push
or
mov
pop
inc
fs
movsb
pop
dec
lds
jecxz
rep
sub
jl
loop
fxch
leave
cmc
mulb
lea
rcrb
xchg
mov
jbe
xchg
pop
insl
repnz
jmp
loop
push
or
clc
sbb
inc
push
cmp
jo
in
sahf
ret
filds
lods
jb
mov
mov
sub
push
scas
dec
out
mov
or
imul
pushf
int3
imul
enter
call
out
lods
cmc
mov
cmpsb
insl
in
test
xchg
xchg
testb
popf
pop
xor
xchg
inc
das
in
pop
addr16
add
pushf
jae
cmpb
jl
fmuls
je
push
aaa
push
xchg
push
out
insb
sbb
mov
pop
fldenv
outsb
xor
jno
cmp
scas
ds
add
dec
sahf
ss
cmp
jae
jbe
fmulp
push
cmp
inc
addr16
ds
aaa
outsb
cmpsb
loopne
mov
xchg
lods
jnp
jne
mov
add
pop
movsb
jae
jbe
fsubrp
push
pusha
mov
data16
int3
and
jle
adc
mov
cld
dec
xchg
mov
pop
outsb
xchg
int3
mov
push
mov
mov
fidivrs
into
loop
fs
and
push
nop
jae
jbe
push
push
mov
inc
ds
add
pop
cmpsb
hlt
pushf
outsb
cld
in
mov
jo
faddl
pusha
insl
in
xor
mov
add
push
test
repz
js
add
lock
cmpsb
and
jb
clc
dec
mov
adc
or
xor
fsubrs
loopne
cmp
cwtl
js
and
data16
test
aaa
fisubs
pop
dec
out
dec
jl
in
mov
lock
pop
xor
stc
insb
fmul
dec
inc
jb
stc
into
xchg
in
mov
insb
ja
ficoms
aam
dec
inc
lahf
dec
sar
push
xchg
insb
jl
mov
js
in
pop
xor
stc
push
fadd
dec
push
xchg
fstps
jb
ja
fisubrs
loopne
pop
addr16
lret
mov
shlb
mov
pushf
fcomps
push
into
dec
cwtl
inc
js
and
or
jae
ja
ficoms
push
sbb
or
cmp
cmpsb
cwtl
pushf
mov
fcoms
pushf
fadds
push
into
dec
cwtl
inc
js
and
sbb
jbe
fidivrs
int
pop
enter
popf
dec
testb
mov
jmp
xchg
jae
inc
hlt
dec
pop
mov
dec
mov
out
lods
lods
in
add
mov
fcoms
js
divb
scas
pop
mov
adc
sbb
pusha
sbb
movsl
dec
imul
sub
push
mov
pop
xchg
fimull
inc
lea
sbb
into
jb
xchg
pop
push
pop
xchg
int
pop
outsl
test
hlt
in
cmp
dec
cmp
xor
add
xchg
dec
je
jge
out
sub
cmp
mov
sarb
fwait
clc
mov
les
das
mov
sbb
push
mov
mov
shlb
or
hlt
imul
outsl
cwtl
push
test
movsb
bound
xchg
or
mov
cmp
xchg
clc
mov
and
mov
pusha
rorl
mov
jecxz
inc
mov
enter
clc
xor
lret
jb
dec
jmp
cmpsb
push
movsb
pop
loop
notb
fninit
push
adc
push
push
mov
inc
sbb
mov
fcom
ss
mov
imul
rorb
into
cli
in
pop
aam
roll
mov
out
jno
inc
stc
mov
push
in
call
dec
push
insb
clc
mov
xor
icebp
mov
sub
or
jb
push
stos
xchg
sti
mov
into
scas
adc
lods
insb
add
je
call
imul
das
and
push
sub
xor
pop
ficomps
outsl
mov
push
loopne
ljmp
sahf
lcall
imul
insl
pop
imul
mov
pop
pop
push
fnstsw
lret
in
dec
movsb
dec
into
out
es
jae
and
mov
dec
repz
add
adc
add
mov
or
mov
fwait
cmp
fmul
das
fcomps
pop
and
sbb
mov
xchg
rorb
cltd
adc
cmpsl
es
in
mov
adc
je
pop
xor
das
outsl
lods
rcl
inc
xchg
repnz
jo
or
jg
or
sbb
ret
scas
gs
cs
sbb
insb
push
movsb
stc
stos
sbb
daa
pop
mov
lods
into
adc
addb
sbb
dec
lods
sub
fstpl
in
fs
out
fs
fcom
das
push
jb
lret
inc
inc
push
addl
sub
lods
mov
divb
or
arpl
dec
out
lock
fldt
xor
es
enter
and
insb
push
fcoml
cmp
enter
and
bsr
test
ds
fdivrp
rcr
into
push
dec
scas
sbb
sbbl
mov
push
out
outsl
lds
mov
repnz
add
test
pop
inc
pop
mov
gs
movsb
leave
repz
in
les
jno
xchg
outsb
int3
jb
mov
fbld
fcompl
into
movsl
outsb
sub
mov
mov
cmp
mov
fisubl
adc
test
loopne
xor
mov
mov
je
iret
sbb
or
repz
fsubl
push
repz
aaa
movsl
xchg
or
stos
jecxz
adc
and
push
pop
fnsave
pop
xchg
popf
fs
icebp
in
inc
or
jg
inc
sbb
mov
repz
mov
xchg
in
int3
sar
inc
cmp
int3
in
push
mov
add
out
fcompl
movl
sbb
add
lcall
cmc
pushf
outsl
fdivs
push
fxch
lods
sbb
jnp
fimull
int
mov
ret
data16
mov
cmp
shl
jecxz
xchg
popa
in
mov
xchg
sub
inc
add
sub
fucomp
outsl
jmp
subl
ss
add
loopne
out
sarb
push
test
jmp
out
lret
enter
mov
mov
jmp
insb
cmp
push
pop
add
enter
mov
sub
push
ja
in
sbb
movups
dec
and
cmp
jnp
insb
outsl
call
dec
aam
iret
jno
sub
je
ja
inc
into
dec
mov
in
sbb
cmp
xor
pop
mov
and
rorl
hlt
dec
dec
xchg
cwtl
dec
sbb
sbb
addl
mov
xchg
mov
out
inc
ret
mov
negb
or
xchg
in
test
dec
push
insb
mov
xor
dec
mov
or
sbb
mov
lea
aad
ljmp
mov
mov
pop
in
mov
inc
and
daa
repz
mov
sti
addr16
sub
cmp
adc
std
inc
out
inc
mov
aaa
mov
test
dec
or
inc
mov
push
out
mov
int3
push
rclb
add
call
mov
dec
cmp
std
repz
out
push
fsubrs
push
jle
in
pop
pop
adc
and
mov
xor
add
pop
xor
xor
jo
add
xchg
lods
push
sub
push
pushf
jno
xchg
outsl
xchg
cwtl
lds
add
inc
sub
enter
xchg
jne
fwait
push
scas
lcall
sub
sbb
and
out
scas
cwtl
cmpsb
cmc
cmp
loope
ljmp
jp
adc
xor
in
pop
in
push
adc
clc
pop
dec
jae
or
or
inc
popf
test
dec
inc
out
adcb
fimuls
addb
movsb
pushf
mov
testb
lods
addb
scas
fldl
add
sbb
idivl
mov
jp
test
adc
cmpsb
sbb
in
enter
xor
push
and
push
out
lock
ljmp
xor
cs
adc
push
fistpl
cli
pop
mov
xchg
int
andl
adc
fwait
movsb
mov
data16
data16
or
pop
sub
sbbb
sbb
addl
push
adc
jl
popf
xchg
arpl
xchg
jle
mov
push
dec
mov
outsb
dec
cmc
test
bound
inc
dec
cs
mov
or
cs
jecxz
mov
xchg
mov
fdivl
xor
dec
mov
sub
pop
fwait
jne
push
xchg
and
scas
mov
push
std
cmp
dec
lods
sub
and
push
cmp
push
sbb
xor
pop
pop
aad
inc
push
jg
jno
cltd
popf
inc
push
or
clc
mov
push
lods
pop
ss
and
rolb
icebp
out
in
mul
mov
dec
adc
mov
xor
popf
loopne
loop
lahf
test
mov
arpl
jl
arpl
stc
sahf
ficoms
xorl
mov
mov
out
jne
ret
jnp
call
mov
lcall
or
sbb
adc
inc
dec
sub
xchg
ds
iret
lds
and
aaa
jnp
mov
cwtl
aam
push
addr16
and
sbb
in
ret
test
xchg
insb
jge
push
push
loope
pop
ds
addr16
mov
sbb
out
sbb
and
push
adc
xchg
cld
shll
or
or
mov
xor
pop
xchg
jl
rorl
aam
sub
lcall
or
mov
push
lods
mov
pop
loopne
push
inc
scas
gs
jmp
out
inc
dec
sub
xor
fldt
rcrl
or
xchg
jbe
xchg
addl
adc
sub
pop
or
xor
test
inc
outsb
jb
dec
in
mov
test
pop
add
int
cmpsb
mov
pop
sbb
sub
or
add
pop
idivl
mov
je
leave
stos
jp
push
dec
mov
push
xchg
lock
mov
cs
dec
in
mov
dec
and
add
jecxz
repz
cmpsb
adc
mov
outsl
sarb
pop
pop
fadd
inc
dec
mov
cmpsb
jo
cli
inc
mov
cmp
aad
mov
clc
push
clc
pop
and
mov
ret
push
jo
lock
cmp
shrb
push
pop
xor
inc
das
cmpsb
mov
sbb
and
data16
or
imulb
or
push
inc
out
dec
or
addr16
mov
push
fsub
out
data16
iret
mov
mov
or
mov
aas
dec
jp
xor
mov
pushf
mov
imul
insl
sbb
movb
lods
and
mov
push
mov
fidivl
or
rcr
imul
imul
sbb
push
mov
mov
bound
aam
mov
cmc
int
arpl
xlat
xlat
or
push
imul
jmp
mov
dec
nop
mov
adc
loopne
mov
ljmp
fmul
dec
push
test
and
or
add
fcmovnb
mov
xor
sbb
pop
and
les
subps
ret
dec
add
iret
adc
loope
and
es
jo
sub
mov
lcall
add
adc
bound
or
push
addr16
mov
shlb
inc
push
cmp
ficomps
mov
mov
mov
inc
fldt
outsl
mov
mov
repnz
lahf
jp
xchg
adc
inc
inc
sarl
dec
inc
lcall
mov
adc
push
cmp
mov
rcrb
push
test
mov
sub
enter
cltd
cmpsb
push
mov
nop
jge
loopne
jl
xchg
adc
insb
xor
xor
cmp
push
cmpl
push
lahf
out
ljmp
dec
jle
xor
pop
lods
fsub
or
cmp
xchg
clc
mov
out
nop
add
call
jb
push
mov
mov
stc
scas
sub
and
push
mov
adc
enter
loopne
ss
bound
lock
jne
push
rorl
into
sub
fisttpll
xlat
dec
outsb
insb
xchg
rcrl
sahf
jge
lcall
scas
mov
scas
dec
mov
pusha
add
cs
call
jb
out
test
cmpsb
xorb
jnp
loopne
rorb
xor
xchg
jl
mov
sbb
and
or
scas
cwtl
repnz
jge
push
push
out
jbe
mov
pop
sti
mov
sub
mov
cld
shl
sbb
cmp
movzbl
and
xlat
or
jp
out
mov
mov
xchg
aaa
std
movsl
xchg
pushf
repnz
mov
sub
lret
mov
sub
mov
cld
into
arpl
shlb
in
lods
dec
add
mov
popf
inc
fs
cmp
and
test
and
mov
mov
sub
sub
add
cmpsb
jno
test
in
je
sbb
mov
jb
fldenv
cld
add
push
jge
int
loopne
jle
adc
idiv
mov
xchg
jl
int
fbstp
sub
sahf
jle
push
shrb
push
jns
in
out
sbb
out
ret
add
push
popf
repnz
out
je
inc
push
mov
and
xchg
neg
clc
das
xchg
push
clc
cli
ja
scas
cmp
sub
xchg
dec
movsb
sbb
jp
repz
mov
loop
and
cmc
push
and
or
clc
dec
add
adc
or
add
add
jno
push
mov
data16
fsubs
mov
nop
cmpsl
pop
outsb
lret
or
jnp
inc
enter
dec
and
xchg
pop
mov
and
lea
push
repnz
cmp
call
js
jb
cmc
loop
mov
sbb
inc
jne
idivb
sub
ss
xchg
push
mov
or
adc
jle
aaa
je
nop
pop
mov
cmpsb
fmuls
repnz
mov
hlt
nop
mov
je
xlat
rorb
mov
dec
in
adc
notl
lock
push
mov
inc
inc
push
and
out
aaa
imull
fwait
mov
pop
iret
ret
pushf
aas
mov
adc
add
addr16
lea
clc
jno
push
shlb
cmp
fistl
jb
and
sbb
scas
add
scas
jbe
lret
inc
lods
js
ljmp
iret
ret
sbb
je
inc
out
lea
jle
inc
js
mov
clc
cmp
lret
nop
mov
ljmp
inc
mov
sbb
inc
lret
jb
adcb
popf
cmp
mov
or
dec
movsb
jg,pt
sub
xchg
jmp
sti
inc
test
mov
push
dec
jle
push
mov
jp
mov
and
ss
cmp
push
xchg
fcomps
js
xor
sbb
or
je
mov
push
xor
cmp
mov
lahf
data16
xchg
scas
dec
sbb
and
pop
push
pusha
es
cli
ja
ss
and
jp
cmpl
and
jae
test
and
les
xchg
xchg
add
iret
cmp
movsl
lea
fs
out
stos
sub
popf
xor
pop
mov
fisubl
dec
cld
out
mov
dec
fdivs
mov
arpl
add
or
cwtl
ja
jp
xor
jmp
fdivl
cmp
jo
int3
imul
aam
ficomps
adc
shlb
icebp
sbb
mov
stos
jns
sub
clc
hlt
outsl
mov
push
and
mov
fimuls
hlt
in
inc
lock
cld
fs
dec
aam
xor
sahf
and
jnp
sbb
mov
inc
mov
jecxz
nop
pop
xor
ja
std
nop
xor
std
push
dec
mov
nop
cwtl
cmp
mov
inc
out
mov
and
loopne
add
jne
mov
cmp
aam
jmp
sub
repnz
fisubrs
pop
and
fisubs
nop
pop
cmpsb
popf
ja
push
dec
nop
dec
and
sbbl
xor
adc
inc
imul
lret
push
jno
in
cwtl
loopne
mov
mov
lds
mov
into
adc
nop
les
sbb
loope
cmpl
inc
cwtl
andb
lret
or
insb
mov
aam
sti
inc
test
orb
insl
cld
xor
fmuls
dec
xor
jmp
js
and
xor
jae
jbe
fsubrp
push
mov
add
scas
cld
fs
ljmp
enter
cmp
mov
rorb
ja
fiadds
aas
mov
jp
enter
dec
popa
pushf
and
mov
sbb
mov
movsl
cmp
mov
dec
jecxz
or
sub
add
test
mov
mov
fisttpl
sarb
ja
xor
inc
ja
clc
xor
dec
or
nop
mov
adc
pop
mov
shll
mov
or
inc
adc
inc
push
outsb
inc
push
in
or
sub
mov
mov
popf
repz
jp
in
ds
test
or
arpl
leave
movsb
iret
sbb
loope
mov
cli
cltd
inc
mov
jns
dec
mov
shlb
mov
mov
cmp
xor
dec
push
shlb
jmp
hlt
cmpsl
popf
jae
jnp
push
shlb
scas
fldl
int
cli
pop
in
or
dec
mov
dec
mov
sub
mov
and
cltd
pop
dec
arpl
mov
or
cli
jmp
fcompl
movsl
out
test
pop
cmp
test
mov
push
loope
sbb
sbb
pop
pop
lret
push
adc
cli
cmp
add
test
imul
jl
add
push
idiv
cs
mov
mov
rcl
std
mov
sbb
cmp
pop
rol
push
dec
adc
pop
jmp
ja
or
inc
stos
cmc
xchg
or
add
jecxz
mov
cmp
fistl
and
aad
xchg
cmp
xchg
into
sub
or
subb
jle
sbb
push
pop
test
fbstp
js
dec
pop
shr
xchg
loope
dec
repz
jb
es
daa
bound
mov
icebp
les
mov
pop
pop
jno
stos
orb
stc
add
or
inc
loopne
bound
mov
lahf
jl
cld
or
xchg
lea
nop
rcrl
fildll
pop
in
es
mov
pop
and
sbb
orb
cli
int
fwait
cmp
imul
lea
jecxz
push
add
in
nop
lds
mov
jnp
mov
mov
mov
mov
outsl
push
pushw
popa
push
push
cli
in
popa
sbb
leave
mov
nop
in
ds
adc
iret
cli
sbb
inc
ds
fcmovnbe
mov
ja
mov
adcb
xor
in
add
mov
arpl
pop
mov
inc
jmp
movsb
gs
mov
pop
movsl
loopne
and
test
mov
repnz
jl
add
mov
cmp
dec
loope
ds
xchg
sub
fdivrs
mov
pop
pushf
pop
cld
fisttps
sub
pop
dec
or
dec
mov
xor
loope
xchg
mov
movsl
push
dec
mov
adc
jge
mov
mov
lock
or
mov
add
pop
sub
testb
lods
lret
lods
cmp
lods
lods
cmp
insl
les
cmp
scas
lods
cmp
iret
xchg
not
lcall
mov
lods
cmp
scas
lods
cmp
lods
lods
add
dec
aad
jne
aad
and
cmpl
cmp
mov
xor
mov
lods
lods
addr16
mov
xor
fs
dec
scas
fs
out
lods
call
mov
xchg
cmp
xchg
lods
cmp
scas
sub
in
dec
push
cmp
lods
jbe
push
or
in
lods
cmp
dec
sbb
pop
pop
fisubrl
stc
sub
jb
xchg
jnp
cmp
sbb
out
dec
sbb
imul
push
sub
leave
scas
std
rcr
and
mov
add
cwtl
je
dec
dec
movsb
add
jns
sub
leave
scas
std
rcr
and
mov
icebp
sbb
out
dec
sbb
cwtl
nop
ss
xor
mov
cmp
bnd
lods
lods
cmp
test
sub
and
mov
repnz
js
jle
aaa
aas
test
sub
mov
lods
cmp
and
push
insb
scas
push
mov
es
jg
cmc
mov
mov
jle
js
jle
aaa
aas
test
sub
subb
ds
mov
cmc
data16
lods
cmp
mov
es
jg
cmc
mov
mov
jle
push
popa
jo
cmp
lods
cmp
mov
es
jg
cld
mov
mov
jle
push
dec
cmp
cld
stos
cmp
ss
add
cmp
and
push
ja
push
mov
es
jg
fsubrp
lods
mov
jo
mov
mov
mov
or
fistpll
mov
mov
ss
popa
pop
sahf
xchg
push
push
cmpsl
ds
ss
je
fsubrl
scas
lods
fadd
ss
popa
pop
sahf
xchg
push
push
xchg
arpl
xchg
aad
xor
lods
push
mov
out
pop
dec
scas
stos
dec
mov
lds
sbb
cld
loopne
mov
mov
push
cmp
icebp
jo
test
or
mov
hlt
ret
adc
aam
mov
filds
les
and
xchg
sbb
mov
ffreep
aam
and
mov
sarl
lods
push
sti
xchg
fstpt
mov
gs
test
jmp
lea
adc
ja
fdivs
lods
fbstp
pop
push
pop
stos
mov
mov
inc
das
call
xor
jnp
mov
stos
addr16
enter
xchg
ror
sub
repnz
xchg
lahf
aam
mov
aad
scas
pop
jle
mov
lret
mov
mov
ss
cmp
loopne
leave
mov
fdivp
jecxz
ds
jb
int3
nop
mov
sub
sbb
mov
sub
stos
xor
pusha
loopne
mov
out
dec
pop
dec
jecxz
push
and
and
jno
idivb
mov
repz
cmp
js
ss
je
sub
jl
cmp
in
mov
mov
or
sub
call
in
sub
inc
je
lea
and
sub
sbb
jne
cmc
imull
jle,pt
mov
jg
dec
xor
xor
dec
mov
das
jmp
jne
data16
jecxz
mov
jb
loope
xchg
mov
dec
sub
adc
mov
inc
cmpb
test
aaa
sbb
das
cmpsb
add
insb
and
jmp
mov
test
adc
andb
push
sub
mov
add
mov
nop
cmp
mov
lret
js
sub
test
aaa
cmp
cmp
xchg
das
shl
pop
leave
push
out
cmpb
sahf
fsubrl
cmp
test
pop
cmp
scas
pop
sub
sub
in
mov
stos
xchg
imul
fs
call
adc
rcrl
or
scas
lods
iret
lret
or
and
jbe
decl
cmp
enter
mov
test
imul
mov
iret
mov
xlat
pushf
cmp
jmp
add
insl
lods
mov
nop
popa
insb
scas
jne
mov
stc
fwait
subl
cltd
das
add
sbb
aas
gs
sub
mov
and
mov
cmp
das
sti
jne
mov
movsl
push
xor
out
mov
mov
into
jno
add
shlb
test
push
mov
pop
push
stos
iret
or
cmp
and
jns
push
xor
mov
and
cmp
lock
int3
icebp
dec
jae
and
cmp
filds
pop
aaa
xchg
add
testb
je
cmp
je
in
repz
mov
cmp
mov
jb
mov
aaa
pop
imul
cmp
in
pop
xchg
das
subb
decl
sarb
xchg
ljmp
cmp
pop
ficomps
jp
rcll
ss
push
stc
adc
aaa
add
rorl
iret
pusha
and
mov
mov
inc
enter
adc
or
repnz
repz
lret
push
mov
int3
push
or
loop
xchg
lahf
inc
mov
mov
or
popf
jbe
hlt
loop
js
cmpsb
push
mov
aas
aaa
mov
xchg
mov
mov
lea
push
sbb
hlt
xchg
loop
divl
sub
sbb
aaa
xor
sub
pop
iret
adc
inc
test
inc
inc
cmp
dec
cmpsl
jmp
jle
xchg
cld
movsb
ljmp
push
mov
adc
js
adc
mov
mov
xchg
rorb
sub
mov
mov
cmp
out
inc
xor
jnp
or
push
incl
push
cld
mov
nop
lods
hlt
push
inc
fists
ret
fsub
push
jb
push
mov
mov
pop
cwtl
subl
pop
out
cs
ja
insl
rolb
jb
mov
adc
adc
jmp
xor
dec
push
sub
push
fincstp
mov
stos
add
mov
pop
dec
jg
es
lods
jb
xchg
jecxz
xchg
pop
dec
cs
sbb
xchg
mov
or
mov
scas
sbb
sbb
mov
clc
inc
push
dec
js
and
fcompl
push
in
pop
jle
pop
rcl
lods
fisttpll
dec
adc
jmp
dec
mov
inc
jl
sbb
add
or
xchg
sub
inc
inc
pop
out
aas
addr16
adc
push
adc
lds
mov
ret
mov
fistps
mov
sbb
das
xchg
push
xor
gs
std
sbb
mov
cmp
dec
pop
mov
andl
push
or
or
jbe
insb
mov
sahf
or
ss
push
adc
pop
dec
sarl
test
imul
cmpsl
or
mov
loop
scas
xor
nop
xchg
push
test
cmp
push
lcall
lahf
xor
lock
pop
pop
dec
in
mov
in
cmp
adc
lahf
xor
sahf
adc
in
fsub
inc
data16
cs
fists
sbb
outsl
out
inc
lret
rcll
frstor
jl
xor
lock
mov
push
xchg
stc
pop
dec
fwait
popf
sahf
lcall
xchg
js
cmp
loope
outsl
popa
jle
mov
jns
cwtl
or
fsubrs
inc
in
xchg
popf
add
pop
mov
cmp
sub
push
mov
scas
mov
insl
lods
daa
xor
test
or
pop
cs
loop
sub
out
int3
lods
loope
out
in
test
cld
mov
scas
mov
sbb
dec
cmc
jp
ljmp
pop
js
mov
jl
popa
mov
xor
iret
mov
push
test
xor
adc
subb
xor
xchg
mov
xor
jl
pushf
push
in
sbbb
xchg
imull
sub
pop
ret
ret
jge
rcrl
aaa
out
cltd
mov
shlb
ret
ss
in
test
js
pop
lea
imull
loopne
das
mov
xchg
into
bound
lret
lahf
aad
xchg
fldcw
pop
add
and
pushf
fidivrs
imull
int
int
mov
fs
inc
es
movsb
sbb
insl
and
cmp
mov
inc
sbb
xchg
pop
movsl
sub
cmp
mov
add
ficoms
ljmp
in
lret
rorb
fsub
dec
fisttpl
shl
lods
or
pop
in
sub
mov
jne
adc
dec
icebp
f2xm1
lods
push
mov
cmp
cwtl
fsubs
sbb
mov
and
test
cmp
lahf
xchg
sub
xchg
hlt
pusha
or
push
or
out
mov
fsubs
jl
xchg
xchg
aad
xor
cmp
mov
mov
and
pop
inc
push
xor
int3
insl
rcll
les
sahf
imul
mov
cmp
xor
xor
and
or
out
shrl
mov
or
popl
xchg
xchg
pop
add
jno
mov
push
push
scas
jmp
xchg
pop
or
mov
cmc
or
sub
mov
push
lock
lods
pop
cli
push
push
lret
loopne
mov
stos
sti
sti
into
cli
je
iret
mov
jecxz
pop
lock
aas
dec
sbb
int
push
and
aaa
into
in
scas
fs
stc
inc
pop
je
fwait
inc
xor
xor
push
or
mov
test
sbb
xor
gs
dec
xor
push
and
dec
add
dec
mov
cs
out
and
ss
fisttps
cmp
push
rcrl
mov
mov
jbe
int3
fsubr
aas
ret
cli
xor
pop
arpl
in
dec
add
insb
aas
xor
xchg
enter
cwtl
inc
jp
scas
jmp
adc
out
rol
fwait
dec
sub
xchg
mov
cmp
cmpsb
in
test
sahf
adcl
jge
adc
mov
lods
cmp
test
movsl
nop
add
jo
dec
int
rol
adc
push
lret
push
mov
mov
jbe
xlat
mov
cwtl
add
add
pop
sarl
mov
sub
mov
loope
inc
fs
in
push
scas
jge
nop
pop
test
lods
jmp
jecxz
xor
jae
rolb
test
mov
pusha
mov
popl
cmp
sbb
add
mov
stc
add
lods
arpl
push
popf
jmp
mov
pusha
mov
ss
loope
sub
cli
pop
jecxz
fsubr
daa
in
and
push
fidivs
mov
in
pop
sbb
addr16
gs
jl
mov
mov
imul
jnp
int
subb
lds
lcall
repz
mov
in
je
leave
fldenv
stc
xor
sub
mov
sarl
mov
ljmp
adc
mov
push
scas
repz
mov
mov
jnp
jle
lea
jbe
daa
popf
xor
sub
jecxz
in
mov
ja
mov
subb
mov
mov
or
xor
loope
ljmp
shll
pop
mulb
pop
cwtl
into
je
pop
xorl
push
sbb
sbb
jl
xchg
out
daa
loopne
clc
adc
xchg
into
jo
mov
pop
mov
fbstp
mov
inc
mov
push
jne
and
mov
jo
pop
jp
daa
sub
hlt
and
or
fists
inc
in
mov
and
push
adc
jnp
fs
out
aas
cmp
cmp
icebp
push
mov
cmp
test
adc
push
or
fsubrl
enter
test
cltd
xor
and
xchg
jns
in
lods
cwtl
jmp
jg
mov
daa
addl
xchg
sub
fdivrs
lahf
lods
enter
std
xchg
xchg
mov
cmp
addr16
jle
dec
bound
lcall
orps
sbb
push
popl
pop
in
add
add
outsl
sbb
imul
adc
xor
fmuls
out
cld
lds
pop
mov
outsb
sbb
popa
jmp
testl
and
sbb
ret
dec
inc
and
imul
cmpl
mov
xchg
mov
ja
inc
sbb
out
pushl
sub
xor
insl
sub
js
rclb
lea
notb
outsl
and
lods
pminsw
cmpsl
mov
setg
cwtl
adcb
inc
insb
cs
inc
sti
aam
jle
cmpsb
pop
mov
into
call
imul
cltd
pop
xor
mov
and
psubsw
cmc
scas
jbe
mov
shrl
and
pop
dec
cmp
mov
call
jg
test
scas
test
pop
data16
inc
cmp
xchg
mov
cmp
es
pop
sarl
movsl
in
frstor
addr16
xchg
inc
out
xor
jns
idiv
mov
mov
adc
nop
in
test
pop
sarb
push
add
ficomps
stos
xor
mov
loopne
insl
clc
sarb
in
sub
xchg
fdivs
cld
or
pop
out
mov
mov
lods
mov
outsl
mov
sub
mov
sub
out
cmp
fistpll
lods
hlt
lods
es
push
mov
cmp
jae
andl
xchg
jne
lcall
or
sahf
addb
dec
jl
movsb
lret
mov
push
and
xor
add
scas
mov
lods
pop
rorb
out
push
imul
push
fcmovbe
data16
mov
lock
sbb
cmp
cmpsl
mov
inc
lock
dec
dec
jle
pop
fimuls
add
xchg
fwait
daa
pop
ljmp
outsb
mov
ret
add
or
jmp
mov
jo
aad
add
sbb
inc
pop
mov
lock
lods
add
movsb
and
sbb
and
orl
adc
arpl
xlat
add
push
mov
dec
dec
add
loopnew
add
pop
xor
add
adc
adc
push
mov
int3
sbb
cmpsl
sbbb
mov
movsb
leave
mov
mov
xor
jg
adc
pop
push
adc
testb
mov
test
lods
inc
fs
push
mov
mov
inc
cli
mov
mov
out
pop
insb
xor
add
ret
xlat
test
jns
mov
mov
jne
loope
aaa
sub
aas
cmpsl
stos
push
out
call
mov
cmp
adc
dec
adc
cmp
cld
pop
mov
mov
pop
push
mov
shlb
in
xor
bound
shl
bswap
iret
push
push
cmp
aad
scas
jae
jl
mov
adc
xlat
pop
sbb
push
xor
sahf
add
mov
andb
xchg
int3
or
add
hlt
mov
test
cli
outsb
clc
pusha
dec
inc
xor
jnp
xchg
and
lods
pop
jp
and
shr
push
jecxz
jmp
and
jecxz
inc
cmp
xor
xchg
and
dec
subb
popa
shrb
mov
jle
clc
mov
and
mov
inc
cs
pushf
or
sbb
mov
xor
pop
stos
or
pop
and
add
pop
lret
mov
cmp
and
fwait
inc
subl
in
rcl
or
ficomps
test
cmp
jo
add
nop
iret
pop
jo
out
and
roll
inc
xor
mov
test
dec
sub
cmpsl
sti
add
in
inc
xor
test
or
mov
push
adcb
push
enter
jmp
ret
out
xchg
ficomps
mov
add
or
loopne
jno
andb
rorb
andl
rcrl
xor
and
hlt
add
mov
fnstenv
sti
add
test
fildl
mov
cmp
xor
xor
test
jl
add
enter
sbb
mov
xchg
rolb
insl
mov
push
bound
cmp
test
mov
add
int
mov
mov
add
and
add
mov
shll
mov
add
mov
sbb
mov
gs
popa
dec
out
add
pop
ret
lock
pushf
and
out
or
or
jg
cli
decb
mov
dec
mov
sti
shl
fwait
and
push
ficomps
aas
or
stc
lea
fadds
or
add
pop
leave
scas
push
adc
or
cwtl
and
lret
out
sahf
mov
inc
adc
and
or
or
push
mov
shl
xor
out
in
sbb
and
stc
sbbb
mov
arpl
and
int
mov
in
sub
daa
xchg
call
loop
xchg
mov
fwait
test
jnp
sarb
mov
sub
adc
sbb
cs
xchg
imul
pop
rclb
push
aaa
cwtl
mov
add
mov
mov
add
shrb
dec
inc
jae
or
push
pop
and
shrl
outsb
pushf
or
jecxz
cmp
roll
pushf
rcrl
pop
and
mov
mov
xchg
pop
xor
push
iret
push
std
ret
nop
mov
cwtl
sbb
popa
and
and
push
clc
mov
fidivs
inc
mov
xor
pop
xchg
xor
sub
pop
xor
cmp
mov
mov
es
pop
and
in
andl
icebp
mov
adc
out
inc
dec
pop
fs
mov
mov
and
push
test
inc
add
ss
add
adc
aaa
xor
adc
in
xchg
and
xchg
add
fisubrs
push
inc
pushf
dec
pop
jnp
adc
sub
and
outsl
and
fisttpll
shrl
rolb
and
cwtl
lret
outsb
xchg
insl
xor
adc
push
lock
pop
hlt
or
mov
add
dec
scas
mov
cmpsl
mov
movsb
enter
add
pop
in
movsl
bound
out
cmpsb
pop
sarl
into
push
jb
adc
inc
xor
popf
add
cwtl
repz
mov
clc
add
mov
jno
arpl
inc
fdivrl
test
scas
leave
movsb
in
lahf
das
add
xlat
lret
repnz
rolb
and
xchg
cmp
add
cmpsb
pop
std
lods
fadds
or
shrb
into
outsb
jno
adc
sbb
or
jbe
inc
add
jg
cmp
mov
or
lock
sub
xchg
mov
lcall
xor
push
push
lock
jl
call
or
dec
les
ficoml
xchg
add
ss
sbb
fadd
hlt
mov
cwtl
mov
pop
add
push
mov
jmp
or
shld
imul
and
nop
dec
mov
xor
or
xchg
or
icebp
mov
add
lods
out
imul
mov
repnz
lcall
mov
adc
les
and
xchg
inc
mov
push
std
pop
sub
test
stos
es
add
scas
test
lcall
push
leave
rclb
sbb
in
adc
pusha
adc
and
imul
dec
adc
cltd
rol
sub
xchg
cmp
inc
mov
inc
dec
push
add
pop
mov
imul
and
cmp
or
nop
push
sbb
fstl
jno
cmp
xor
pop
leave
iret
dec
loop
daa
cmovp
jb
dec
lret
insl
mov
aam
and
adc
mov
insl
addr16
jp
push
adc
sub
xor
xor
outsb
adc
rcr
mov
cltd
int3
outsb
jl
movsb
shrb
pop
push
or
or
pop
jae
stos
mov
push
add
or
pushf
fidivrl
std
push
sti
std
lahf
or
fnsave
call
sbb
xor
in
pop
nop
cld
inc
add
xor
rclb
mov
callw
and
sbb
lods
in
jnp
es
pusha
loop
iret
dec
out
sub
xchg
inc
dec
xor
mov
arpl
clc
leave
dec
pop
mov
pop
test
fisubl
andl
pop
stos
or
inc
add
adc
add
push
push
adc
scas
sub
inc
lock
sub
cltd
xorl
push
add
es
push
rorl
lock
pop
insb
jecxz
push
mov
dec
sbb
iret
repz
xchg
in
pop
jns
es
faddl
mov
add
mov
or
push
insb
aas
xchg
iret
sbb
mov
out
rcll
and
stos
aad
sahf
mov
es
nop
andl
int
cmp
mov
fs
shlb
pop
mov
adc
sbb
lret
popa
sub
rcll
test
push
dec
and
add
insl
mov
rcr
insl
xor
psubb
imul
test
inc
sbb
sub
out
sarl
test
mov
dec
mov
out
inc
jns
jno
pop
loope
sbb
addr16
stos
rcrb
lock
or
xchg
lcall
sete
dec
sbb
les
int3
add
shlb
pop
pop
add
test
into
popf
adc
mov
inc
add
add
es
or
add
inc
sub
mov
icebp
xor
mov
sub
cmpsl
inc
dec
pop
dec
dec
pop
repnz
sarl
push
mov
nop
call
mov
pop
cmpsl
lds
bound
pop
and
lret
sbb
filds
movsb
adc
les
insb
add
fldt
pop
sub
pop
inc
mov
pop
movb
js
mov
adc
xor
fistpll
rcl
cmp
cld
sub
adc
mov
mov
sub
push
or
cli
pop
xor
fwait
cmp
ror
sub
sahf
pusha
jp
sbb
or
sub
and
std
mov
ret
or
mov
inc
xor
enter
out
nop
lret
or
jmp
mov
mov
inc
xor
mov
add
sahf
andl
hlt
dec
cmp
fnstenv
mov
mov
rclb
aaa
mov
call
and
jb
repnz
jnp
pop
xor
or
or
mov
cld
add
ficoml
ret
pop
push
lock
lds
push
dec
shll
sub
xor
fdivr
sarl
xchg
ljmp
or
or
add
fdivr
lods
inc
icebp
pop
adc
in
lahf
and
fcmovu
insl
addl
pop
mov
pop
fisttpl
out
lods
lcall
popa
test
mov
nop
movsl
sbb
pop
jmp
xchg
std
and
cmpsb
stos
xor
icebp
loop
add
pop
adc
subb
inc
pop
adcb
in
insb
xor
sbb
jb
sbb
test
lods
lods
loopne
inc
fs
or
shlb
sub
jb
pop
repnz
int3
pusha
mov
mov
jp
andb
inc
aad
cwtl
repnz
xor
test
pop
push
adc
fs
outsb
jno
jno
sbb
xor
fdivrl
rcr
inc
cmpsl
es
and
add
outsb
add
mov
add
xor
jnp
adc
decl
clc
test
cmpsl
jns
pop
es
subb
inc
daa
leave
cmp
pop
xor
mov
daa
sub
add
xor
aam
mov
sbb
in
dec
xor
fldl
cld
pop
add
jle
int3
mov
pop
out
shr
dec
scas
or
jl
fiaddl
insl
in
cli
pop
xchg
cmp
xor
and
js
pop
dec
inc
mov
dec
or
sub
popa
lods
and
dec
and
rol
add
jbe
push
daa
cs
ja
ror
movsb
enter
loop
je
scas
scas
cmp
or
cmpl
loope
movsb
xlat
int3
or
adc
sub
jge
pop
in
ss
mov
sbb
dec
cs
dec
in
fcoms
popa
inc
shlb
rorb
mov
dec
out
pop
push
fs
push
clc
xchg
mov
jle
mov
add
inc
pop
xchg
sbb
push
add
pop
jno
gs
add
adc
sbbb
rcl
insb
and
test
scas
xor
and
push
adc
or
testb
mov
inc
sub
jl
rcrb
cs
or
inc
dec
xchg
adc
and
and
add
sub
ljmp
or
sub
repnz
lret
lods
push
adc
sbb
aaa
cwtl
mov
push
pop
jbe
inc
add
pusha
and
cmp
dec
cmp
push
daa
icebp
and
xor
mul
mov
scas
mov
xor
and
rcll
inc
and
dec
and
hlt
xor
sbb
pop
sbb
mov
xor
pop
sar
je
sahf
test
movsb
les
mov
add
lods
insl
jl
popa
int3
or
call
inc
mov
cld
pop
adc
flds
mov
xor
cmp
dec
xchg
nop
sbb
out
push
scas
hlt
imul
hlt
add
jb
add
and
push
sub
mov
pop
into
xchg
or
fwait
pop
loope
test
dec
mov
and
add
inc
mov
hlt
mov
jno
add
adc
leave
ficoms
and
subb
fldcw
mov
mov
dec
mov
pop
outsl
mov
push
mov
adc
sub
int
sbb
shlb
mov
les
scas
and
rcr
add
cwtl
push
xor
movsb
or
cmp
add
rorl
das
and
nop
xchg
mov
pop
xchg
mov
sub
xchg
sbb
add
mov
mov
xchg
sub
faddl
aas
int
faddp
sub
pop
addb
repnz
loopne
xchg
imul
inc
mov
in
pusha
mov
mov
mov
push
cwtl
or
jmp
mov
testb
push
cmp
js
mov
andb
bound
test
movsb
xchg
pop
add
mov
mull
jns
cmp
adc
sahf
pushf
jl
sub
fmuls
jno
fidivs
cwtl
aaa
insb
push
mov
pop
dec
popl
and
test
add
push
adc
push
push
push
loopne
clc
in
inc
repz
cmpsl
push
sub
cs
mov
cmpb
cmp
lret
dec
pop
add
xchg
xchg
cltd
loop
repnz
push
shlb
cld
cmp
fmull
add
xchg
mov
add
push
adc
ret
cld
push
xchg
xor
scas
xor
jp
mov
cwtl
pmuludq
or
mov
rcrb
popa
arpl
mov
js
add
sahf
in
mov
mov
adc
mov
mov
mov
pushf
mov
inc
test
inc
jb
adc
xchg
sbb
enter
mov
movsl
push
mov
add
clc
dec
sub
sub
sbb
aam
les
fcomps
ret
xor
add
rcl
mov
into
pusha
mov
mov
mov
je
pop
push
xchg
adc
inc
inc
iret
bound
clc
mov
enter
or
cmp
push
jb
das
and
sar
test
mov
sub
mov
mov
shrb
enter
pop
xchg
andb
xor
inc
xchg
dec
inc
pop
test
mov
sbb
sub
cvttps2pi
adcb
jl
adc
cwtl
mov
dec
les
dec
outsl
jae
pop
int3
sti
add
div
dec
leave
scas
lock
or
push
cmp
iret
mov
mov
loopne
adc
mov
pop
cmpb
lods
popa
pop
xchg
je
push
xchg
push
add
and
jmp
ror
enter
xchg
test
test
stos
push
ds
or
out
dec
adc
and
and
jno
nop
enter
stos
pusha
pop
push
push
pop
or
stc
xor
adc
mov
push
adc
and
and
inc
fbld
pop
cmp
iret
and
test
sbb
sub
or
inc
leave
push
popa
cwtl
shrl
push
or
lods
sub
lcall
inc
dec
enter
fdivs
ret
out
push
add
test
add
mov
and
or
jno
sub
es
fst
addr16
adc
repnz
je
inc
rorl
cld
mov
jb
dec
repnz
insb
inc
add
mov
int3
dec
out
arpl
sti
inc
sub
jo
xchg
xchg
fmul
push
in
popa
out
push
push
and
xchg
sbb
mov
push
in
pop
mov
jno
push
sbb
sub
mov
sub
mov
jle
mov
mov
test
push
mov
add
lods
add
and
sub
cmp
and
inc
gs
arpl
shrb
push
mov
out
pushf
jge
fwait
cmpsb
int
in
loopne
adc
push
adc
nop
mov
mov
sahf
aam
fistl
inc
mov
pop
fldl
movsb
notb
mov
add
mov
mov
rolb
test
and
dec
pop
aas
mov
jl
in
test
test
sbb
aam
dec
push
and
flds
mov
and
dec
scas
sbb
and
sahf
std
rcr
pop
pusha
inc
mov
sti
movsl
mov
xchg
add
mov
or
pop
arpl
int
xor
mov
inc
mov
int3
pusha
jns
xchg
or
or
aaa
stc
mov
add
or
jns
mov
inc
mov
jae
pop
repnz
lock
mov
dec
outsl
popf
push
nop
inc
cmp
ret
dec
mov
or
lret
iret
mov
and
pop
sbb
inc
popa
cmpsl
add
clc
imul
lret
movsb
divl
add
xor
inc
cmp
sarb
jns
pop
xor
push
adc
icebp
nop
push
stc
cmp
ret
jnp
add
andb
test
mov
fstpl
mov
mov
lods
and
sbb
pop
hlt
mov
insb
call
dec
enter
mov
mov
push
jp
aad
aam
and
sahf
pop
cltd
mov
repz
data16
adc
add
test
sub
out
mov
icebp
lds
jnp
aaa
pusha
or
shlb
fwait
inc
addb
cmp
or
inc
scas
cmp
add
shl
mov
pop
add
ret
out
les
pop
mov
add
lock
cltd
mov
and
jns
int
adc
rcrb
gs
mov
sub
scas
xchg
add
jno
jne
or
cmpsb
stos
inc
dec
test
shl
call
add
jp
fildll
jnp
cltd
loopne
popf
adc
call
pop
sub
ficoml
rorl
mov
inc
sbbl
push
ljmp
xor
dec
jae
mov
faddl
cmp
or
inc
inc
nop
adcb
sbb
mov
and
fwait
push
into
sub
or
mov
pop
les
in
add
add
gs
cmp
sub
xlat
int3
in
add
in
xchg
fcoms
pop
in
push
out
inc
stc
js
idivb
andb
xchg
out
dec
adc
rolb
aam
or
sub
subb
shl
cs
rcrl
xchg
mov
push
inc
sbb
mov
sub
add
mov
inc
cmpsb
pop
ret
cltd
mov
cld
adc
shlb
mov
mov
out
fs
pusha
add
arpl
xlat
sub
cld
dec
mov
pop
mov
outsl
shl
das
mov
and
and
pop
sub
into
sarl
sar
das
mov
into
mov
pop
cmp
push
jp
and
sahf
lock
add
in
sbb
adc
adc
cmp
add
dec
fcompl
xor
add
xor
push
fwait
sub
xor
mov
aam
repz
sub
stos
sbb
dec
mull
repnz
mov
mov
sub
mov
jno
mov
test
clc
insb
add
mov
je
sub
scas
add
mov
sbb
stos
insl
and
push
sub
jecxz
shll
push
in
das
mov
pushf
and
jle
add
imul
lock
mov
adc
push
into
iret
mov
sub
into
out
xor
lods
add
pop
loopne
sub
ja
nop
dec
and
inc
dec
dec
test
pop
mov
mov
imul
enter
add
jp
je
mov
mov
pop
loope
sub
shll
in
cwtl
pop
js
cmp
lret
inc
nop
fmuls
push
pop
cld
ds
mov
add
cmp
clc
scas
in
add
movsb
xor
js
sub
shrl
mov
sub
leave
repnz
mov
xor
clc
negb
adc
shrb
adc
push
inc
and
mov
sbb
pusha
cmp
ficoms
andb
jno
sbb
mov
rorl
jne
jno
jl
fsubl
sbb
lock
daa
ret
dec
rcl
xor
push
cld
mov
fisubs
repnz
pop
ret
lea
mov
sub
sub
fs
mov
imul
mov
call
sbb
and
add
movsl
popf
or
lods
cmp
data16
xchg
xor
sbb
add
das
nop
dec
lods
cli
mov
inc
ljmp
or
aas
add
push
sub
inc
dec
punpckhdq
xor
pop
xlat
sub
sbb
cmp
cmp
fidivrs
aam
jle
daa
flds
lret
movsl
push
mov
mov
push
lock
shrb
or
popa
faddl
adc
cld
rcr
sahf
and
loope
insl
add
jl
add
insb
in
stos
rorb
aad
inc
hlt
sub
pop
daa
lock
cmc
inc
dec
rorb
pop
test
add
xor
out
cmpsl
pop
add
ja
andl
stc
add
mov
in
ljmp
push
xor
inc
nop
xor
inc
sub
movsb
jno
jns
sbb
popa
cmpl
ja
sbb
mov
adc
xor
sub
jo
insb
dec
jbe
and
cmpsb
les
imul
dec
sbb
subl
test
push
sbb
mov
xor
in
std
pop
sub
inc
fcompl
push
ret
js
loopne
ljmp
sub
test
push
pushf
sub
mov
les
mov
push
mov
or
sub
lock
inc
push
shrb
push
or
add
cmp
in
movl
rolb
fs
jg
fmul
movhps
lahf
pusha
jns
in
push
popa
add
rol
add
lea
pop
add
sbb
cmp
jl
mov
cld
adc
dec
in
dec
test
and
adcl
cmp
sub
imul
sub
xor
popa
cmp
xchg
push
nop
add
test
cmp
sti
xchg
mov
mov
add
add
mov
inc
lea
out
mov
push
lods
cmp
xor
pusha
jns
shld
ficoms
inc
pop
sbb
push
das
add
mov
clc
adc
clc
or
jp
cmc
cmp
xchg
mov
mov
cwtl
jo
add
hlt
or
pop
push
je
mov
dec
inc
sbb
aad
pop
movsb
inc
and
jl
in
repz
jne
add
in
into
mov
dec
mov
sub
push
outsb
dec
pusha
lahf
inc
dec
int3
test
push
xor
push
repz
das
pushf
es
sub
cmp
hlt
je
sub
and
sarl
dec
add
ljmp
jp,pn
shl
loopne
jbe
jle
or
js
icebp
nop
adc
testb
xchg
arpl
mov
push
cli
lcall
inc
in
mov
addb
and
loopne
sub
sbb
sahf
push
or
mov
fcompl
enter
mov
sarb
inc
xorl
sbb
sti
cmpsb
dec
scas
inc
add
aaa
into
inc
add
inc
pusha
movsl
test
add
xor
and
jmp
adc
mov
ret
inc
and
pop
andb
push
shl
mov
mov
pop
ret
test
js
xchg
add
mov
push
pop
pop
aam
loopne
push
clc
xor
mov
insb
push
inc
lret
fsts
push
mov
movsb
fs
aaa
and
mov
mov
fcoms
jl
mov
inc
daa
sub
adc
cmc
add
and
decl
inc
dec
in
fwait
push
jns
xor
push
mov
daa
lds
fs
pusha
xor
push
ja
push
lea
fidivrl
call
mov
inc
rclb
rclb
add
pushf
cs
in
pushf
add
or
shll
and
add
imul
sbb
mov
or
dec
mov
jae
aad
and
mov
pop
and
and
push
mov
push
jns
inc
setle
push
pusha
shlb
mov
inc
loope
xor
popf
dec
and
mov
cwtl
add
into
xor
push
mov
pop
or
mov
inc
mov
mov
inc
and
lcall
fcomps
pushf
sub
xchg
arpl
dec
add
pop
adc
or
out
adc
cmp
adc
rcl
adc
mov
add
movsl
adc
push
add
jmp
pop
pop
pop
xor
push
xchg
scas
mov
test
and
ret
stos
pop
mov
inc
or
aad
rorb
std
fwait
into
movsb
mov
ljmp
inc
nop
mov
cmpsl
mov
push
aam
gs
fbld
xchg
test
clc
add
js
popf
push
mov
inc
jns
pusha
add
inc
clc
shlb
dec
fwait
adc
sbb
lock
cld
mov
outsl
mov
mov
inc
jo
xchg
inc
or
and
dec
aam
les
call
push
subb
push
lret
mov
fwait
je
push
iret
in
enter
and
mov
jl
xchg
sbb
stos
rclb
loopne
add
push
stos
and
enter
pop
adc
sub
cmpsl
mov
les
les
xorb
jnp
pop
sub
sbb
and
fmul
pop
movsb
and
movsb
push
je
mov
lock
sub
out
add
lret
or
gs
add
lret
mov
add
in
mov
add
mov
pusha
sbb
bnd
xor
add
or
adc
push
adc
std
stos
ret
rorl
rolb
movsb
fidivrl
push
fcmovnu
movsl
in
pusha
xor
orl
cmp
adc
add
mov
testb
fstps
test
mov
and
xor
mov
sbb
lock
mov
hlt
lods
dec
lret
and
cltd
mov
dec
pop
or
call
ljmp
loope
push
mov
inc
iret
mov
add
pop
hlt
cwtl
cmc
jns
pcmpeqw
push
push
xor
js
in
xor
mov
inc
ret
arpl
cmpxchg
jb
inc
sbb
int3
pushf
lock
inc
mov
test
aaa
push
xor
mov
fwait
subl
cmp
out
adc
pusha
inc
sub
pop
xor
cmovle
and
fadds
lods
xor
inc
nop
repnz
dec
sub
add
mov
push
pop
iret
mov
fidivs
aaa
loopne
pop
fs
or
adc
loop
mov
or
leave
xor
jo
mov
xor
lds
push
test
rcll
dec
mov
mov
clc
mov
negl
mov
add
and
nop
daa
xor
cmp
pusha
inc
ljmp
xchg
dec
lret
outsl
or
fidivrl
mov
cld
les
and
mov
les
mov
pop
mov
enter
enter
js
pushf
call
fstl
and
pop
imul
push
lcall
pop
adc
das
mov
push
int3
mov
cltd
jnp
jle
xor
aam
inc
add
ja
add
sbb
popf
push
fld
pop
repz
insl
lret
pop
inc
jl
mov
popf
adc
mov
fistl
jb
and
jns
or
addb
lret
fistl
rcrb
or
scas
pop
or
push
and
add
fsubrs
and
pushf
adc
mov
into
cld
pusha
fsubrs
jl
shl
hlt
adc
inc
fwait
pusha
les
cmp
cwtl
and
sbb
in
xor
jl
sub
push
je
outsl
movsl
xchg
push
adc
or
call
dec
mov
jl
loopne
pop
add
stos
xchg
bnd
les
pop
mov
add
test
das
ljmp
adc
test
fs
or
das
pop
xor
fwait
mov
mov
jmp
adc
outsb
ret
jo
sbb
loope
xchg
adc
bound
inc
add
shlb
cli
cwtl
mov
inc
sub
xor
xchg
add
imul
push
jl
cmp
icebp
es
mov
sbbb
add
ljmp
rolb
je
outsl
push
pushf
inc
sti
add
mov
ret
dec
add
insb
pop
scas
popa
jns
pop
add
cmp
iret
popf
add
xchg
pop
pop
adc
repz
mov
ficomps
dec
or
sub
add
fadd
mov
sub
sub
fs
sub
sbb
cmp
dec
push
jno
sar
scas
and
iret
call
inc
mov
enter
inc
mov
xlat
mov
and
push
loope
ss
inc
and
cmp
dec
sub
popa
movsb
daa
push
outsb
fs
enter
test
test
test
fnstenv
pop
mov
push
cmp
inc
add
sbb
mov
fidivs
mov
fildl
mov
or
cmp
xlat
movsl
popa
fisttpll
push
cmp
inc
mov
stos
xchg
in
fcomps
iret
cs
popa
jo
add
push
loopne
inc
bound
sbb
inc
jo
addl
bound
movsl
nop
mov
js
mov
pop
mov
repnz
jo
lcall
mov
xor
sub
mov
pop
int3
sbb
sub
pop
and
xlat
hlt
add
mov
and
loope
arpl
and
adc
daa
sbb
gs
sbb
jb
or
repnz
loopne
insb
out
sub
or
int
push
loop
push
iret
lret
js
leave
es
aam
les
leave
xchg
bsr
sub
les
inc
mov
xorb
mov
leave
stc
or
mov
stos
data16
cmp
mov
push
adc
sbb
les
aaa
pushf
push
ja
adc
push
arpl
sbb
or
inc
fdivp
les
sub
push
repnz
adc
dec
jae
adc
fisttps
mov
and
adc
iret
pop
and
pop
cmc
jne
dec
dec
test
bound
out
add
je
inc
fsubr
inc
sbb
gs
sbb
dec
mov
inc
dec
inc
shlb
js
les
test
fiaddl
stos
push
mov
or
add
fiadds
stc
ds
adc
mov
fwait
loop
and
or
add
pop
les
imul
pop
cld
push
mov
and
fbstp
mov
or
and
or
sbb
sbb
sbb
inc
inc
dec
arpl
adc
adc
xor
jle
xchg
bound
cmp
arpl
dec
inc
cmp
push
pop
mov
test
or
mov
adc
movsb
js
push
pop
and
sbb
adc
adc
sub
sbb
loope
lahf
mov
and
xchg
sbb
in
nop
adc
push
sarb
lods
dec
mov
dec
cld
push
and
les
les
jl
push
bound
daa
push
sub
or
cld
outsl
insb
mov
xchg
or
dec
adc
adc
add
mov
jnp
jo
jno
inc
mov
or
rcr
aaa
push
fs
add
inc
and
pop
ds
pop
add
push
push
add
xor
cmp
scas
pop
or
arpl
in
repnz
lahf
repz
xor
jl
lods
leave
push
dec
xchg
rolb
adc
stos
and
cmp
and
add
inc
xchg
and
jae
lock
push
sub
sub
add
mov
or
inc
stos
imul
xchg
mul
add
ficoml
lods
xor
cwtl
push
repz
cmp
rolb
cmp
insb
sbb
add
or
lods
imul
pop
pop
push
mov
push
test
push
std
or
mov
imul
or
fadds
add
rorl
push
add
dec
lods
orb
cmp
push
cmpsb
or
subb
mov
jb
mov
xor
inc
and
add
sbb
cs
test
add
out
lret
fistl
addr16
sub
mov
fwait
sbb
push
mov
sbb
inc
data16
pushf
fs
andb
inc
aad
inc
lods
mov
ja
mov
repnz
insl
cwtl
and
fwait
inc
pop
movsl
jo
jo
dec
in
pop
sbb
or
cld
outsl
push
push
bound
rcrb
sbb
push
shll
xor
add
xchg
or
loopne
add
or
sbb
popf
mov
cli
mov
scas
push
mov
cli
inc
test
nop
xchg
or
inc
inc
nop
adc
pop
pushf
push
or
push
jo
std
push
xor
or
pop
cli
imul
jo
or
add
xor
xor
prefetch
cmp
int3
int3
and
aad
lret
iret
push
cmpsl
push
fldenv
sbb
test
push
repnz
mov
pop
xor
adc
mov
jl
ret
dec
adc
or
mov
or
pop
sbb
clc
or
repnz
test
dec
inc
sbb
push
addl
add
cwtl
xchg
push
fs
rorb
cmp
pop
loop
mov
iret
jle
add
add
rcll
inc
popa
pop
add
fsubl
in
sbb
es
add
sub
ret
mov
pusha
movsl
xchg
sbb
jb
jae
mov
and
fisubl
aad
dec
sbb
xor
cmc
pusha
adc
insl
push
sbb
mov
ret
nop
mov
iret
xlat
add
stos
dec
sub
push
stos
inc
rcr
and
mov
sub
ret
mov
repnz
inc
xor
addb
or
xchg
repnz
or
fsubr
add
jg
popw
mov
insb
sahf
cwtl
pop
andb
pop
popf
repz
sub
repnz
ficomps
lret
fnstsw
push
add
sbb
in
scas
dec
add
sbb
aas
adc
sbb
mov
and
shrl
outsb
add
int
mov
nop
hlt
inc
sub
stos
mov
jp
adc
mov
pop
jno
lock
and
inc
add
inc
push
sbb
rclb
js
sub
jns
push
sbb
or
sarl
in
xor
sub
cmp
ret
sbb
mov
adc
nop
std
test
push
js
lods
in
roll
out
call
jecxz
jb
stos
push
imul
push
xlat
pop
dec
fadds
xchg
pop
dec
add
roll
movsl
add
mov
cwtl
sar
subb
cmpsb
inc
in
push
mov
sub
pop
push
ss
fnstenv
dec
and
popf
sbb
xchg
mov
inc
andb
jle
pop
daa
loop
nop
mov
pop
push
in
out
cli
push
stc
fs
int3
loopne
repz
adc
jg
xchg
shll
pop
into
inc
jo
lods
pop
test
adc
sti
xchg
or
add
mov
sbb
les
mov
cld
bound
add
testl
jecxz
bound
or
jl
add
inc
cmp
insb
push
push
out
mov
mov
test
dec
mov
push
jge
xor
hlt
pop
fildll
shlb
add
scas
inc
xchg
jbe
push
sbb
cs
and
insb
and
and
cmc
adcb
iret
mov
xchg
lods
adc
or
mov
mov
xor
js
les
popa
clc
insb
adc
pop
mov
cmp
and
inc
bound
rolb
pop
pop
inc
sub
adc
sub
jns
fs
sahf
inc
inc
jge
mov
call
mov
sub
mov
imul
adc
or
and
repnz
pop
mov
or
ficompl
and
push
or
xchg
add
cld
xchg
xor
mov
mov
push
jmp
aad
jne
fisubs
inc
xor
jo
dec
femms
or
mov
mov
xor
movsl
adc
arpl
inc
adc
or
cwtl
sub
inc
pop
daa
or
mov
add
cs
lret
or
push
dec
push
mov
ret
mov
or
push
rorb
or
adc
rcrb
mov
mov
inc
sbb
inc
cmp
shrl
jno
mov
add
decl
inc
mov
pop
inc
dec
ficompl
pushf
daa
lea
add
out
pop
or
inc
sub
adc
mov
mov
inc
mov
xlat
cmp
cmpsb
or
pushf
sbb
push
movsb
add
cmp
imul
insb
and
fs
rcrb
push
lods
add
movsb
shl
push
add
inc
fsubl
pop
add
pop
mov
and
pop
fsubs
adc
das
daa
cmp
fistpl
add
push
stos
add
inc
movsb
pop
xor
out
add
nop
mov
gs
mov
mov
arpl
push
add
or
cld
jg
mov
lods
imul
and
mov
or
push
mov
inc
adc
or
push
dec
push
pushf
lods
ret
pop
aas
add
cmpsl
xchg
fprem
call
arpl
pop
xchg
imul
fldt
and
inc
out
clc
shrb
push
fsubr
add
dec
inc
inc
les
and
inc
push
jno
mov
pusha
pop
test
in
repnz
test
push
mov
mov
cmp
sbbb
into
sub
repnz
pop
mov
add
in
loopne
mov
flds
in
push
popf
xor
push
sbb
inc
mov
mov
push
bnd
call
mov
pop
push
das
inc
in
loope
pop
push
add
repnz
dec
pop
add
fidivl
cmp
movsl
adc
pop
add
subb
or
mov
mov
inc
xor
mov
in
or
or
dec
fs
sbb
scas
or
ficompl
dec
outsl
rorb
push
add
push
pop
shrl
xor
movl
push
sbb
jnp
xor
sbb
push
or
sub
mov
push
sbb
add
and
pop
or
pop
test
movsl
fildl
sbb
sarb
ficoms
test
movsb
sbb
pop
pop
aas
adc
subl
add
sbb
ds
icebp
orl
fcom
lret
fwait
insb
add
int
inc
repnz
imul
dec
jo
dec
loopne
in
enter
pusha
push
inc
les
call
cld
mov
inc
xchg
mov
adc
rcrl
push
insb
xchg
fsubs
adc
mov
roll
pop
push
test
mov
xor
stos
xor
clc
push
mov
je
ja
pop
ss
bound
rclb
push
stos
xor
mov
mov
add
mov
jo
shrl
mov
shrb
repz
es
jnp
inc
and
std
lret
push
stc
pop
ljmp
out
mov
cmp
sub
lcall
sbb
dec
mov
sub
ret
dec
pop
mov
leave
pushf
xchg
stos
fsubl
pop
mov
push
pop
fwait
loopne
xor
pop
inc
stos
cld
inc
dec
pusha
ror
jno
daa
xchg
in
add
and
mov
daa
repnz
bound
inc
rcr
xchg
mov
push
jg
les
cmp
out
add
cmp
lods
sub
cli
leave
cmc
jle
push
or
nop
pusha
fdivs
add
adc
ficoml
pop
jno
push
lods
push
mov
xor
lock
jmp
jl
add
outsl
out
popf
or
jecxz
cmp
inc
mov
add
in
inc
xchg
pop
les
out
and
rorb
insl
repnz
xchg
inc
adc
dec
in
or
jl
mov
jo
adc
sti
fisubs
sbb
jl
jbe
and
xor
or
cmp
shlb
movsb
repz
add
arpl
pop
sahf
insb
dec
insb
imul
test
repnz
mov
pop
lds
mov
mov
pop
xchg
sbb
stos
cmc
out
or
lret
pop
imul
inc
insb
cmp
repnz
mov
pop
sub
cmc
nop
mov
mov
mov
adc
nop
fstl
push
cmp
push
pop
push
push
in
add
mov
repnz
jno
into
mov
fwait
ljmp
or
fsubr
pop
sub
stos
cmp
push
or
sub
and
sub
nop
pusha
mov
pop
mov
pop
push
add
int3
push
dec
cwtl
mov
out
push
mov
lods
pop
lock
sub
add
insb
dec
push
sbb
cmp
pop
sti
lods
pop
push
adc
sub
xchg
or
add
insb
and
das
push
test
add
mov
sub
fcoms
enter
test
addr16
inc
fnstsw
fadds
mov
enter
adc
stos
xchg
dec
sbb
add
icebp
cmp
and
jl
and
sbb
cmpb
add
push
add
pop
mov
in
leave
fdivrs
fcoms
mov
cltd
movsb
adc
cmp
in
mov
jecxz
jo
sbb
dec
aam
xor
and
pusha
in
ret
mov
push
pusha
add
repnz
arpl
decl
clc
jmp
jnp
add
sbb
jo
cltd
push
xor
in
std
sbb
or
fldl
inc
fidivs
daa
std
inc
sti
cmpsb
pop
inc
cmp
and
xrelease
jecxz
pop
or
add
fimull
mov
add
addb
arpl
or
pop
iret
push
cmpsl
insb
js
mov
and
repnz
push
cmp
rcl
xorb
psrlq
leave
scas
in
sbb
fstps
sbb
sbb
xchg
fsubrs
jg
push
push
jmp
rolb
xorl
mov
das
lahf
test
int3
mov
push
add
sbb
xor
pop
inc
pop
movsb
cmp
mov
icebp
cmp
repnz
js
sbb
ret
sbb
mov
or
pop
mov
arpl
and
cwtl
push
add
pop
inc
and
adc
outsl
hlt
mov
mov
inc
mov
fdivs
fstp
in
lcall
mov
lods
push
out
js
add
ss
pop
cmp
mov
pusha
mov
es
cmp
das
shlb
nop
add
sbb
jo
jo
mov
lods
adc
lret
pop
test
add
inc
sbb
jecxz
rorb
fdiv
cli
mov
dec
mov
cmp
mov
stos
add
mov
mov
bound
movsb
jp
adc
int3
pop
pop
mov
aam
pop
mov
sub
in
push
sahf
test
mov
push
pop
daa
stc
mov
repnz
mov
outsb
sbbl
pop
push
jne
shrb
mov
inc
cld
add
jne
out
test
and
fadds
lods
push
das
hlt
cmp
pop
lock
mov
rcrb
mov
rorb
fcomp
and
aad
icebp
test
push
pop
pop
dec
in
fdiv
insl
dec
sub
movsl
stc
pop
lret
test
xchg
mov
rolb
lods
imul
test
push
outsl
movsl
inc
nop
pop
jl
add
mov
or
sub
inc
ret
sti
mov
lcall
mov
dec
das
orb
pop
nop
pusha
or
pop
stc
mov
mov
mov
push
repnz
adc
test
xor
inc
sbb
sub
pop
das
fisubrs
addb
test
xor
out
add
or
cmpsl
shll
fldenv
lock
mov
lea
call
sbb
insl
push
sti
cmp
in
cld
icebp
cmp
jle
pop
inc
fldt
xor
push
test
sub
pop
je
push
imul
lods
push
push
inc
gs
test
ja
enter
sub
pop
aaa
add
aam
and
add
sbb
mov
xchg
cmp
pop
or
mov
imul
sarl
pop
dec
cmp
js
add
leave
pop
test
not
adc
stos
push
dec
inc
ja
cwtl
or
and
inc
inc
jb
js
push
xchg
add
inc
inc
bound
mov
enter
daa
cltd
mov
mov
mov
adc
cmpsb
popf
ficoms
loop
xchg
or
sub
int3
aad
mov
push
in
subb
call
cmp
sbb
pop
xchg
add
or
push
das
add
dec
fprem
incb
mov
dec
push
adc
inc
xor
in
cli
mov
pusha
pusha
test
add
scas
outsl
push
mov
adc
je
dec
pop
cmp
pushf
sub
or
aam
adc
icebp
pop
rcrb
push
pop
cwtl
inc
int
lret
popa
dec
inc
mov
dec
push
adc
fcomps
inc
sub
xor
std
cwtl
fcomps
push
add
movsl
xor
pop
shll
add
adc
scas
adc
sub
inc
dec
addb
mov
jecxz
cmp
sub
lahf
cmp
mov
push
dec
cs
pop
pop
sbb
adc
dec
test
jl
sbb
inc
pop
stos
inc
mov
jle
ds
shl
repnz
mov
jge
and
inc
addl
xor
adc
fsubl
mov
or
mov
cmp
ss
mov
cmp
push
in
or
jae
xchg
nop
push
enter
cs
mov
es
add
jae
jecxz
adc
push
cld
xchg
cmp
xor
xchg
cmc
bts
les
or
in
jmp
add
pop
sbb
cmp
and
fisubl
lock
dec
imul
and
sbb
or
lock
mov
pop
jecxz
pop
aaa
adc
or
pusha
and
sub
push
ret
mov
bound
push
add
add
lcall
jo
inc
push
mov
cmp
push
loopne
fstl
mov
stos
fwait
mov
dec
sarb
pop
out
xchg
imul
pop
call
cmpsb
xchg
push
cmp
lahf
or
icebp
sarl
les
push
ja
cmp
dec
pop
add
sub
mov
xor
popa
dec
push
mov
and
movsl
xor
add
xchg
popl
fldt
lods
add
jno
popf
add
in
mov
inc
add
pop
mov
adc
adc
pop
rcr
cltd
xchg
push
inc
dec
int
outsb
rcrb
fdivrs
inc
and
add
cmpxchg
icebp
or
mulb
xor
popl
aas
mov
movsb
dec
jmp
mov
inc
iret
outsb
nop
sahf
rorb
pusha
xchg
call
icebp
outsl
orl
jmp
mov
int3
push
sub
dec
add
repz
xlat
cwtl
test
dec
adc
sbb
sbb
mov
cs
in
dec
add
mov
adc
add
outsl
sub
mov
jp
fisubrs
jg
loopne
mov
cmp
int3
mov
dec
daa
adc
jecxz
aam
mov
in
das
pop
pop
js
lock
cmp
sbb
fwait
mov
add
add
ret
push
sub
sbb
pop
push
adc
pop
xchg
cmp
mov
cwtl
xor
push
cmpsb
add
inc
aam
add
insl
add
outsb
lock
dec
xchg
push
dec
cwtl
xor
dec
dec
nop
add
fwait
sub
xchg
jo
lods
mov
psadbw
ljmp
cmp
lret
inc
jb
push
aas
out
add
xlat
roll
mov
imul
add
xchg
push
mov
add
addr16
mov
xchg
jmp
inc
adc
test
pop
addr16
push
pusha
jb
dec
gs
add
loopne
movb
pop
and
test
or
mov
adc
pop
ds
dec
sub
jo
fcmovne
inc
xchg
sub
inc
movsb
and
lods
add
jecxz
mov
add
xor
sub
or
add
fdivl
repnz
lahf
pop
sub
mov
aad
cltd
and
aaa
push
lods
shrl
pusha
inc
cwtl
push
add
sbb
inc
repz
repnz
and
mov
in
jl
mov
shll
cmp
insb
adc
cwtl
add
add
decb
xchg
cmp
pusha
and
movsb
rorb
pop
lods
dec
sub
add
sub
add
aas
dec
cwtl
xchg
aaa
inc
pop
mov
stos
ljmp
mov
dec
fidivrl
dec
push
outsl
mov
xchg
push
pop
sbb
dec
fwait
mov
and
pop
imul
and
xchg
add
mov
outsb
mov
movsb
mov
and
mov
shll
pop
arpl
xchg
lds
add
sti
jo
cwtl
jle
mov
mov
lods
sub
push
jmp
add
adc
out
insb
pop
clc
mov
iret
and
repnz
add
cwtl
pushl
nop
rcrb
mov
cmp
lret
popa
jo
or
lcall
js
test
or
xchg
push
and
sbb
roll
sbb
ja
jl
test
pop
nop
lock
fdivrl
setnp
inc
or
cmp
sub
pop
test
int3
les
test
cmpsl
xchg
adc
mov
adc
scas
mov
addr16
icebp
jae
insb
sahf
add
fildl
test
push
and
inc
add
inc
xor
mov
icebp
sub
jo
mov
out
and
cmp
inc
pop
push
add
sbb
pop
jbe
push
or
mov
sub
movsl
es
push
ret
push
nop
prefetchnta
or
pusha
xchg
mov
adc
fucomp
icebp
dec
loop
hlt
and
repnz
or
mov
addr16
imul
adc
xchg
leave
arpl
roll
sbb
addr16
inc
rcll
mov
jo
adc
lods
test
add
xchg
sub
push
mov
es
popa
and
adc
dec
pop
addl
lret
cwtl
in
xor
add
mov
cmp
pushf
cwtl
inc
rorl
nop
adc
out
test
xchg
xorb
or
and
adc
inc
mov
dec
inc
and
shrl
test
ds
cmp
std
in
fs
lcall
int3
cmc
mov
popf
js
adc
or
xor
sbb
push
cwtl
mov
sbb
xlat
sbb
mov
cwtl
push
xchg
push
jmp
adc
rolw
push
push
cwtl
movsb
dec
sbbb
push
xorl
test
mov
xchg
or
ret
loopne
xchg
add
movsb
insb
loopne
gs
add
xor
lock
pinsrw
aad
xorb
mov
and
jmp
mov
and
rcr
inc
xor
push
pusha
sbb
cmp
jno
jne
clc
cmpb
js
aaa
aad
sbb
int3
sub
pop
movsb
pop
cwtl
fistpl
mov
data16
mov
inc
xchg
cmp
adc
dec
in
mov
mov
mov
adc
adc
inc
mov
int
jne
sub
pop
sbb
movsb
and
cs
fmul
lretw
mov
jp
adc
movsl
pop
test
loope
lds
cmp
hlt
ficomps
push
xor
loopne
aam
xchg
mov
sbb
test
addb
sbbb
std
jnp
add
ljmp
psubw
popf
or
add
aaa
inc
jecxz
add
mov
adc
shll
add
clc
xor
ljmp
cmp
or
popf
sbb
push
mov
inc
add
pop
sub
jmp
nop
add
loope
dec
sub
sub
lret
bound
data16
adc
js
sub
sub
mov
push
mov
rorl
mov
inc
sbb
andb
mov
dec
loope
ljmp
xor
adcb
or
mov
push
pop
or
mov
cmp
sub
jnp
pusha
mov
adc
punpckhwd
push
mov
push
adcb
add
dec
stos
arpl
fucomi
imul
divl
je
repnz
push
mov
ret
ret
push
mov
leave
pop
outsb
imul
push
outsl
adc
sub
mov
push
in
or
hlt
sbb
inc
push
push
fcoml
into
or
imul
int3
das
dec
pop
test
subl
jmp
push
mov
lds
mov
mov
push
or
push
xchg
test
mov
or
mov
xchg
cltd
cld
adcl
jge
dec
adc
mov
repnz
insl
ret
les
add
in
loopne
sub
in
add
adc
sub
add
test
push
movsl
outsl
stc
shlb
push
adc
sub
or
sbb
push
lock
cli
test
mov
loope
or
leave
mov
adc
rorb
cmp
inc
int
sbb
arpl
ficomps
subb
push
cmp
mov
aad
icebp
lds
sbb
add
mov
or
ljmp
sub
inc
cmp
in
ja
or
cwtl
adc
cmp
push
push
xorb
imul
rcrb
cld
pusha
xchg
imul
clc
add
dec
push
dec
jne
and
push
and
sbb
in
mov
js
push
gs
xor
or
es
push
aam
sub
push
cmp
jge
push
pusha
jbe
imul
fmuls
mov
std
lods
add
and
xor
adc
push
sbb
xchg
cmpsl
adc
add
xchg
inc
fiaddl
mov
pop
ljmp
sahf
test
pusha
cltd
inc
imul
ljmp
into
ljmp
sbb
add
push
in
mov
pop
push
imul
imulb
fs
inc
mov
inc
xor
pop
add
pop
adc
sub
aas
push
int
fldlg2
leave
xchg
or
adc
push
std
push
notl
sbb
pop
add
div
pop
cmpl
lea
arpl
cmc
lock
lods
inc
pop
inc
negb
inc
cmc
cs
push
nop
push
mov
adc
out
test
xorb
pop
and
xor
xor
mov
push
pop
dec
jp
adc
andb
mov
imul
or
sub
pop
outsl
dec
fisubrs
push
outsb
mov
and
pop
clc
pop
pop
pop
push
outsl
mov
shll
push
mov
loop
pop
sub
push
xlat
bound
mov
xchg
addr16
nop
in
pop
and
add
adc
mov
xor
dec
iret
mov
cwtl
xor
cmp
sbb
leave
ret
xor
cwtl
mov
adc
pusha
mov
outsl
push
add
ljmp
pop
clc
inc
dec
dec
int3
nop
dec
rol
das
pop
cwtl
js
cmpb
ljmp
mov
ljmp
clc
xor
jne
out
mov
ljmp
aas
cmp
push
hlt
jb
lods
jns,pn
outsl
xor
pop
jno
jns
cs
pop
jl
test
daa
lods
jne
jmp
fwait
jecxz
into
iret
mov
push
hlt
cld
push
pop
add
pop
xor
xor
sbb
sub
mov
jl
mov
inc
push
dec
add
cld
ljmp
xchg
xor
imul
cmp
cltd
push
pusha
pop
xlat
sub
flds
inc
inc
add
out
adc
in
or
pop
dec
aad
out
sahf
mov
sub
add
push
pop
and
cli
sar
inc
xchg
andl
out
sub
movsl
movb
dec
fisubrl
ljmp
imul
pop
push
mov
adc
push
bound
cmp
pusha
mov
insb
xchg
add
clc
nop
daa
xor
or
aam
lret
pop
ret
sbbl
scas
leave
xor
sub
pop
inc
dec
clc
ficoml
push
aas
pop
sbb
push
pop
nop
inc
dec
or
adc
mov
jne
cmpsl
out
and
ljmp
cmp
test
mov
jne
imul
xor
push
mov
pop
or
subl
mov
ljmp
jmp
nop
test
dec
lret
sbb
out
cmpb
imul
push
mov
push
xor
in
mov
rcl
adc
movl
jl
dec
and
push
xor
add
sub
orb
movsl
and
push
push
aam
push
add
ror
fwait
sbb
adc
test
sub
ja
xor
sub
cmp
fnstcw
int3
sbb
xchg
int
pop
bound
lcall
sbb
cs
fidivrs
or
int
subl
pop
mov
jbe
xlat
add
pop
sar
push
add
shrb
cs
sbb
push
and
inc
fistl
sbb
add
mov
das
push
mov
cmp
loop
push
je
jno
mov
sub
add
jne
std
insb
xor
push
arpl
mov
clc
imul
adcb
imul
arpl
push
sub
xchg
sub
xchg
xor
xor
jne
mov
cmp
rorb
test
fprem1
pop
and
loop
inc
in
sub
sub
paddsw
andb
xor
xchg
or
jnp
adc
sti
pusha
test
aas
adc
hlt
imul
sbbl
aam
mov
push
mov
arpl
add
cmp
inc
nop
cli
pusha
dec
cwtl
icebp
or
jb
cmp
loopne
mov
out
adc
or
sbb
cli
in
adc
fld
aam
sbb
pop
pop
or
insl
xchg
jmp
bound
outsl
add
sbb
sbb
je
add
pop
test
adcl
xchg
mov
push
jp
inc
not
jecxz
and
dec
scas
inc
sbb
ret
int3
out
push
movl
pop
and
aam
xor
xor
add
pop
jbe
pusha
jo
loopne
push
fisttpl
lret
cmp
outsl
test
sbb
adc
not
cmp
pop
mov
xchg
lods
add
in
lea
gs
hlt
fisttpll
push
add
das
gs
push
lret
xor
sbb
pop
add
dec
ret
adc
dec
add
cmp
xor
ljmp
in
pop
xor
test
imul
add
and
adc
mov
push
sbb
jg
mov
loope
add
push
push
jae
jle
push
lods
sub
insb
out
adc
sar
dec
flds
rorl
ljmp
sahf
or
orb
pop
pusha
enterw
pop
push
out
cs
movsb
das
dec
fs
testb
adc
push
jbe
adc
cltd
aas
inc
lods
das
jle
cld
ljmp
sbb
pop
dec
push
sbb
addr16
adc
rcr
xor
lock
pop
mov
test
add
stos
mov
mov
jae
fisubs
xor
insl
ljmp
xor
cmp
mull
es
popf
test
xchg
popf
sub
fs
xor
push
pop
fnstsw
xchg
or
mov
sbb
pop
and
adc
dec
rorl
shlb
das
testl
sarb
add
int
movl
or
out
add
repnz
mov
push
cmp
mov
and
and
push
clc
adc
imul
popl
dec
push
cwtl
push
movnti
pop
dec
pop
and
rcrb
leave
or
cmp
clc
mov
push
ljmp
scas
mov
xchg
gs
popf
jae
or
mov
adcl
ret
sub
clc
mov
rorb
pusha
push
push
add
gs
sbb
dec
daa
es
andl
test
in
mov
add
and
pop
fcompl
shrb
ljmp
xor
clc
mov
dec
pop
xchg
punpcklbw
dec
fnsave
lahf
mov
fists
ja
lret
push
add
xchg
xor
ret
add
mov
sets
outsb
jae
jecxz
mov
inc
lods
add
test
mov
mov
jge,pn
sub
push
xchg
push
mov
mov
imul
mov
into
mov
or
popa
jmp
and
mov
or
ret
pop
xor
sbb
and
in
jbe
xor
add
pushf
out
pop
mov
inc
add
xor
jmp
mov
or
and
neg
jbe
xor
add
inc
sbb
out
sub
add
sub
pop
xor
outsl
jl
add
add
pop
push
mov
jmp
cmp
or
lods
adc
pop
sbb
pop
mov
mov
push
jmp
sub
mov
sbb
jnp
mov
and
push
inc
add
subb
push
adc
mov
pop
xor
rcll
and
xchg
xor
testl
inc
jmp
add
mov
pop
mov
loope
in
in
andl
xor
or
sbb
and
mov
xor
pop
andl
mov
icebp
ret
xlat
sbb
jmp
test
push
mov
add
dec
cwtl
or
and
rcrb
jmp
xor
ja
push
adc
xchg
mov
addl
cmpsb
mov
and
jns
sbb
jl
push
add
xchg
push
adc
out
fistps
or
add
stos
shr
xor
cld
in
jb
in
or
loope
and
or
orl
call
mov
add
mov
cwtl
adc
push
pushl
mov
les
stc
dec
cltd
ud2
mov
jmp
adc
or
push
sub
xor
adc
xor
vsqrtsd
scas
jecxz
or
and
push
push
adc
xor
leave
call
inc
sub
pop
int3
mov
sub
pushf
xor
mov
mov
and
push
add
pop
dec
or
jl
add
xor
xchg
sbb
mov
shl
dec
sub
sbb
add
push
or
push
inc
or
inc
add
pop
fists
mov
xor
cli
sub
pop
roll
dec
pop
jmp
divb
das
adc
cli
pop
add
in
aad
xchg
pop
push
iret
lods
pop
inc
icebp
xor
xor
pusha
push
inc
scas
roll
out
sub
or
add
out
lret
sub
adc
add
pop
push
or
adc
jbe
jg
xor
inc
cwtl
or
pop
cli
pop
shll
adc
xor
pushf
jmp
sub
add
jmp
sbbb
add
neg
push
push
mov
or
in
ret
fs
cmc
test
jns
dec
mov
pusha
sub
or
jmp
jl
push
cwtl
subb
add
dec
rcrl
xor
int
rcrb
jmp
ret
push
leave
icebp
xor
xchg
add
push
mov
add
add
ret
faddl
push
jmp
leave
mov
ja
jno
add
lret
ljmp
loop
xor
rorb
jle
testl
and
in
subb
or
pop
gs
out
pop
add
add
enter
xchg
xchg
inc
push
aad
in
adc
jo
repz
push
ret
sbbb
mov
push
push
mov
jmp
jnp
rolb
in
cmpsb
dec
ljmp
loop
add
call
data16
and
push
or
mov
negl
or
jg
sub
call
cmp
cmpsb
xor
test
add
fldenv
xor
dec
sbb
or
or
mov
pop
sub
jmp
jle,pt
ss
lret
mulb
pop
cmp
stos
adc
xor
add
pop
pop
loopne
nop
das
pop
push
push
xor
push
mov
sub
fcmovbe
addr16
ud2
pop
add
add
xor
popa
inc
ja
xor
push
andl
icebp
rcr
es
into
mov
mov
mov
mov
out
pop
pop
mov
rcrl
mov
iret
pop
es
adc
mov
cmp
jmp
push
mov
and
xchg
mov
mov
ljmp
test
inc
sub
sbbl
fisttpll
idivl
ja
dec
arpl
xlat
inc
add
jo
std
in
xor
mov
aaa
sub
adc
cld
lods
and
mov
roll
mov
lds
add
mov
mov
test
pop
add
cmp
or
push
mov
xor
lods
out
or
and
imul
scas
pop
lret
or
add
add
xor
mov
add
push
add
xor
and
fdiv
arpl
xchg
or
mov
rorb
pop
test
call
inc
test
adc
jbe
push
jmp
or
adc
fldl
cmp
and
inc
pop
ja
push
mov
call
sti
adc
jns
inc
and
push
push
pop
cmpb
jne
sub
inc
dec
in
cmp
pop
jmp
pop
adc
push
mov
sbb
in
pop
sub
aad
xchg
add
int
inc
xchg
mov
enter
inc
aad
push
add
lods
mov
cmovge
jl
adc
mov
inc
add
rolb
xor
inc
mov
sub
cmpsb
mov
pop
xor
xlat
outsb
add
movsb
sbb
mov
pop
xor
push
mov
inc
and
mov
mov
mov
lcall
xchg
mov
xchg
dec
mov
rorl
push
mov
ret
sub
pop
push
dec
add
xchg
pusha
inc
mov
cmp
mov
sub
jmp
add
xor
cmp
test
mov
pop
sub
dec
pop
sbb
cld
icebp
dec
and
push
sti
xor
pop
dec
movsl
or
or
mov
icebp
cmpb
push
push
add
inc
xor
xchg
or
jmp
add
adc
enter
leave
add
std
rclb
cmp
je
scas
pop
arpl
sub
vcvttps2dq
cmp
clc
outsb
pop
imul
mov
pusha
std
pop
mov
imul
push
adc
pop
or
imul
add
xor
pop
push
add
add
xor
add
push
push
ret
jmp
insl
add
jno
dec
xor
je
fwait
arpl
sub
adc
pusha
testb
into
add
cld
inc
mov
repz
cmp
xchg
mov
in
adc
jge
and
sub
or
jle
dec
sti
inc
cmpsb
sbb
ja
inc
out
in
adc
inc
adc
add
or
rcl
add
inc
dec
xor
incl
push
sarb
lock
dec
push
and
add
idivl
ljmp
test
inc
rcll
mov
adc
cmpsb
mov
xor
loopne
aad
rolb
pop
test
hlt
test
ljmp
mov
jnp
and
pop
add
neg
shr
adcb
sarl
or
sub
imul
add
add
push
inc
fistps
idivl
je
stc
enter
pop
insb
clc
lret
push
dec
jae
add
je
mov
push
cvtdq2ps
add
aaa
pop
shl
enter
mov
mov
mov
sbb
xor
mov
fs
lds
adc
test
dec
xor
sub
cmp
add
fdecstp
fdiv
notl
aas
outsb
xchg
pop
push
add
or
loopne
pop
icebp
mov
rorl
adc
mov
mov
mov
and
call
movsb
shll
push
xor
adc
pop
pop
and
push
fnstsw
sbb
push
insb
add
jmp
ficomps
or
imul
cmp
pop
daa
jl
adcb
add
jno
imul
rcrb
sarl
adc
jbe
jl
rdtsc
jle
inc
cmp
ss
xor
dec
or
jbe
outsl
and
jmp
in
fstl
nop
bound
cmc
or
add
inc
mov
push
jmp
pusha
ret
or
pop
add
push
out
mov
dec
push
stos
pop
jmp
test
xchg
ret
mov
add
push
jle
sub
pop
and
fwait
aas
xchg
xchg
inc
adc
sti
cmp
je
inc
fdivrp
fsts
lods
dec
cmp
fs
sahf
jmp
push
je
pusha
imul
in
mov
and
dec
test
loop
nop
sub
dec
fs
and
add
add
mov
mov
push
cmc
cwtl
jmp
mov
popf
vmwrite
les
xchg
stos
add
and
adc
pop
jmp
push
pop
sub
xchg
adc
inc
les
and
push
adc
js
pop
sbbb
or
sub
adc
mov
lea
adc
ljmp
pop
or
cmpsl
lock
stos
push
pop
int
sbb
dec
inc
fs
fiadds
inc
add
test
int
sub
cmc
lret
loope
repnz
dec
dec
push
adc
imulb
shr
and
sub
mov
pop
cwtl
inc
pop
jmp
leave
mov
or
sbb
jmp
push
rol
add
push
fsubrp
in
outsl
adc
inc
jmp
ljmp
insb
in
add
or
mov
cs
lcall
push
jmp
adc
mov
nop
subb
movb
cmp
push
pop
push
xchg
xlat
pop
popf
je
push
test
mov
and
sub
xor
lods
jb
xor
pop
test
pop
and
or
sub
sub
mov
and
repnz
jle
add
dec
in
shl
jno
inc
lods
add
xor
gs
jmp
int3
ret
ret
push
out
push
sub
pop
xor
adc
test
xchg
sub
push
dec
inc
xor
xor
add
push
mov
xor
flds
loopne
inc
test
ret
out
or
loop
pop
dec
lock
rcrl
sub
push
aas
mov
jg
pop
and
adc
sbb
aam
fstpl
dec
xchg
push
popa
jmp
sbb
flds
ret
xchg
add
add
shlb
mov
in
and
sub
inc
pop
out
movsb
gs
sub
mov
xchg
out
adc
sbb
mov
and
es
pop
sub
sti
push
mov
std
js
add
fdivr
xor
xorl
aaa
pop
stos
cmp
mov
lods
pop
mov
mov
or
and
test
jmp
cmpsb
mov
das
adc
mov
xor
in
mov
sub
test
gs
pop
xlat
adc
push
and
add
push
and
dec
xor
inc
fsubrp
cmpsb
shlb
push
ljmp
test
das
icebp
xor
push
addl
cmpsb
cld
push
lds
and
xchg
mov
stos
adc
inc
test
lods
mov
cwtl
dec
enter
outsb
dec
rcl
or
mov
push
les
jno
jmp
mov
and
cltd
out
sub
cmp
cmpsl
daa
sub
jbe
adc
push
push
add
flds
mov
push
into
cmpsl
inc
cmp
dec
xchg
aaa
mov
add
pop
add
and
arpl
mov
push
insl
neg
or
adc
nop
push
cs
aam
add
les
ss
push
xor
das
xchg
jnp
lret
shlb
cmp
cs
shrb
sbb
call
mull
imul
addb
mov
cmpsl
jmp
gs
adcl
pop
dec
sbb
mov
and
roll
sti
jmp
mov
repz
out
push
and
or
nop
inc
add
hlt
mov
jmp
pop
lea
or
bnd
push
jns
sbb
mov
xchg
add
mov
pop
shl
add
pop
jns
pop
fcmovu
add
or
sti
mov
push
pop
xchg
or
das
mov
add
mov
fwait
xor
mov
pop
mov
mov
or
sbb
or
mov
sub
sub
mov
jnp
sub
pop
push
xor
adc
cmpsl
jns
inc
jmp
sub
lds
dec
and
add
sbb
fwait
and
xlat
pop
mov
xor
jmp
or
ss
orl
hlt
jecxz
leave
xchg
mov
adc
sbb
loope
xor
aam
adc
cwtl
pop
fisttpll
in
sub
add
in
inc
xor
inc
xchg
add
push
testl
addb
dec
popa
inc
cmp
cmp
clc
test
push
sub
and
inc
test
or
jmp
out
xchg
pop
insl
inc
and
faddl
mov
mov
jne
adc
jmp
or
pop
mov
pushf
jmp
cmp
pop
push
in
adc
mov
and
mov
adc
ss
mov
add
xchg
cmp
shrb
lock
pop
jp
pop
mov
jmp
sbb
scas
sbb
rolb
add
pop
adc
mov
add
test
mov
pop
sub
in
cld
xchg
adc
dec
mov
xchg
adc
adc
push
push
cmp
mov
js
enter
sub
sub
roll
incl
dec
pop
inc
insl
xor
xor
pop
add
divl
imul
xchg
jmp
push
pop
les
test
nop
rorb
sahf
push
rclb
cmpsb
cs
or
cmp
mov
dec
add
leave
and
lds
push
into
jle
sbb
cmp
sbb
out
add
fdivl
jmp
lret
mov
add
lods
pop
adc
fwait
imul
or
sub
add
popa
lods
push
shll
inc
pusha
sbb
fnstsw
add
jnp
movb
js
mov
mov
jmp
adc
push
mov
xor
fldenv
inc
movsb
push
cmp
mov
lods
push
negl
fisttpl
xchg
adc
jbe
pop
leave
push
adc
enter
and
pop
jg
test
pop
clc
loop
mov
push
adc
loope
jp
pop
add
scas
not
dec
mov
cli
jp
adc
btr
jo
les
es
mov
add
push
movsb
sub
or
jmp
push
dec
scas
loope
adc
fdivrs
inc
rcll
xor
testb
dec
xor
pop
push
insb
das
sbbb
add
jmp
dec
add
lcall
jecxz
push
in
iret
add
pop
xor
push
mov
xor
mov
push
add
insb
aaa
and
mov
xchg
test
je
test
xor
add
lds
cmp
pop
mov
add
add
aaa
nop
add
les
dec
add
addr16
inc
ror
add
pop
push
call
notl
jle
dec
sahf
push
cwtl
pop
and
mov
das
jmp
sbb
mov
jmp
arpl
jns
jne
mov
jmp
nop
cmp
test
xor
mov
dec
add
addr16
pop
sub
jmp
jbe
iret
les
stc
sbb
xor
lds
cmpsb
mov
adc
and
ljmp
addr16
adc
and
jmp
inc
dec
es
in
mov
xchg
add
fwait
add
ja
fs
mull
shll
pop
mov
adc
sbb
add
out
cmp
jecxz
cs
mov
addr16
inc
shl
jmp
in
popf
addr16
jmp
mov
imulb
pusha
dec
jl
push
lds
mov
rolb
or
xchg
ja
sbb
cmpl
xlat
mov
and
rcrb
out
xor
fwait
add
in
jg
pop
sub
shl
add
add
sbb
in
test
push
aad
or
dec
pminub
jmp
jp
loop
pop
and
xchg
jg
pop
push
mov
push
test
cmpb
out
stc
frstor
clc
sub
add
ljmp
add
lock
adc
push
jl
add
dec
sub
rcrb
lock
mov
dec
jg
mov
pop
pop
and
cmc
xor
test
push
or
filds
mov
and
lods
mov
pop
es
inc
add
jle
je
adc
jb
dec
je
roll
pop
neg
shl
scas
out
lahf
add
jne
sbb
je
in
data16
jno
dec
and
or
jno
clc
xor
iret
mov
push
push
ret
pop
nop
sbb
adc
out
lock
dec
insl
or
push
mov
fisubrl
inc
add
pop
bound
jmp
add
cmp
out
inc
mov
cmpsl
and
push
shl
and
outsl
ja
mov
mov
icebp
lea
push
fcompl
push
mov
not
mov
push
and
outsl
test
dec
das
add
outsb
daa
jmp
xor
push
mov
in
dec
pop
subb
mov
mov
into
imul
fwait
loopne
push
jmp
das
cmp
add
sbb
cwtl
arpl
inc
xor
cmp
fldcw
push
lcall
sub
push
mov
aas
sub
jge
idivl
push
add
mov
mov
pop
add
xor
filds
xchg
dec
pop
or
pop
not
or
roll
pop
mov
test
shl
adc
dec
add
cmp
jl
insb
adc
enter
and
leave
or
jbe
insl
aaa
pop
cmpb
mov
ret
or
pop
sbb
mov
inc
in
xchg
inc
jge
inc
loopne
hlt
insb
mov
jl
les
pop
sub
clc
and
push
mov
mov
pop
insb
mov
outsl
insb
lods
push
into
push
leave
push
shll
sbb
ret
jp
shlb
or
daa
or
aam
mov
das
loope
mov
mov
bound
popf
pusha
dec
lret
fdivs
arpl
outsl
nop
movsl
add
push
adc
push
in
xor
movsl
mov
rcrb
pop
push
xchg
and
or
jnp
jmp
aad
add
mov
xor
data16
iret
jbe
pop
mull
adc
shr
sub
xor
jl
or
push
push
add
mov
inc
notb
jmp
cld
fildl
rcrb
xchg
push
mov
std
lds
je
jecxz
mov
or
dec
imul
ret
or
and
pop
xor
inc
std
popa
loopne
movzbl
adc
mov
mov
xchg
push
adc
sbb
mov
into
add
xor
push
push
dec
add
je
push
mov
inc
xor
clc
jmp
outsb
push
xor
or
in
add
idivl
and
popa
or
inc
daa
dec
jo
bound
js
inc
jmp
lods
pop
inc
cmp
add
fs
sbb
cli
xor
fbld
loopne
sub
sub
dec
pop
into
nop
or
adc
lret
idivl
and
add
bound
fnstcw
ret
xor
jmp
cli
loop
pop
lods
push
lea
xchg
aas
shl
repnz
xchg
add
jae
sbb
mov
mov
gs
sub
jb
xchg
repz
das
aam
loopne
push
cld
adc
fsubrs
push
inc
dec
mov
jmp
ficomps
ja
mov
int
movsb
les
push
xchg
add
inc
xchg
test
lret
std
add
pop
push
add
lret
xor
imul
enter
jmp
mov
sahf
pop
sbb
pmaxsw
div
pop
frstor
mov
popf
sbbb
fldenv
stos
cs
mov
xchg
fbld
mov
or
pop
daa
push
dec
inc
push
sbb
ljmp
es
jmp
inc
es
cmc
add
cltd
aaa
jmp
jmp
test
outsl
pop
stos
push
outsl
das
sub
and
fcmovu
or
and
nop
pop
push
cli
rolb
jne
push
mov
and
je
sub
jne
cmp
movsl
js
mov
sub
sub
cwtl
inc
pop
mov
subl
xor
and
sti
aam
ret
cli
pop
fsubl
push
pushf
inc
bnd
dec
out
xor
jmp
call
daa
sub
xchg
inc
inc
shr
jg
and
dec
pop
dec
inc
cmpb
pop
or
sub
sub
or
pop
rorl
sarb
testl
dec
push
mov
mov
or
cmp
test
push
inc
stc
jmp
and
and
xor
add
sbb
int3
sub
std
add
add
sbb
or
inc
mov
pop
es
and
lret
mov
add
lds
push
adc
inc
or
sub
sub
fisttpl
ficoml
dec
jbe
cmp
ret
lret
nop
mov
inc
cmpsl
and
sbb
int3
lea
push
sbb
es
adc
pop
lret
in
fs
call
xlat
push
sbb
out
sti
pop
and
pop
jmp
mov
pusha
jl
inc
sbb
sub
push
mov
lds
cltd
test
or
pop
cmp
movsb
mov
add
insl
push
lods
cmpsl
adc
cmp
add
dec
jl
popa
jne
add
inc
sbb
cmp
bound
or
mov
shl
push
or
jne
imul
outsb
adc
dec
inc
lds
xlat
xor
shll
push
add
cmc
repz
pop
or
lret
cmp
push
pop
cmpsl
and
aad
sub
sbb
movsl
movsb
cwtl
add
pop
mov
cmp
and
mov
adc
xor
jle
mov
ds
lea
xor
sbb
cmpsb
dec
pop
pushf
inc
leave
inc
pop
enter
dec
dec
sbb
add
jmp
xchg
lea
ret
icebp
jnp
fiadds
inc
or
test
push
shl
adc
xchg
dec
adc
aas
mulb
push
dec
or
jle
fwait
popf
cmp
and
push
xchg
int3
inc
ret
mov
je
mov
adc
fisubl
imul
sbb
push
fcompl
aas
movsl
push
jbe
push
add
and
loopne
pop
push
negb
pop
xor
fwait
xor
stos
sub
and
mov
jne
and
int3
punpckhbw
adc
sbb
lock
pushf
pop
jmp
mov
not
fs
jle
or
jmp
inc
add
adc
inc
sub
ljmp
push
pop
jle
xor
push
jmp
orb
jb
cmp
rclb
hlt
push
pusha
not
lock
jmp
ds
pop
push
mov
das
push
and
adc
and
jmp
jl
out
rclb
pop
xchg
dec
mov
cmp
or
and
inc
push
insb
dec
out
into
cmp
xor
in
sub
sub
pop
sub
test
add
adc
clc
pop
add
mov
bnd
sbb
shll
jmp
adc
loope
test
sti
or
fnsave
out
loop
add
out
inc
loop
cmp
mov
push
mov
jecxz
sarb
push
jnp
daa
xor
outsl
lds
add
sbb
mov
cwtl
fiadds
push
mov
clc
adcl
cli
scas
sub
xor
gs
and
jo
add
pop
inc
or
cs
nop
sbbb
addb
lds
xchg
int3
adc
cmp
dec
bound
or
push
insb
add
fistl
mov
mov
jge
pop
rclb
adc
mov
adc
ret
fwait
subb
inc
dec
push
int
mov
pop
add
imul
pushf
xor
or
test
popa
and
push
push
daa
push
lahf
push
movsb
rol
lahf
pushf
std
xor
ss
jmp
filds
movl
adc
stc
movsb
leave
jecxz
fs
xor
mov
or
mov
movsb
mov
xchg
ret
sub
and
mov
cmc
push
pop
xlat
loop
aam
popa
jmp
push
jb
cmp
sarl
mov
push
pushf
cmp
popa
subl
add
push
mov
add
ficoms
inc
or
movsb
or
insl
roll
ret
jge,pn
inc
pop
loop
lret
jmp
shl
and
sti
popf
xor
rorb
bound
imul
pop
add
xor
aas
movsl
sub
cmp
mov
fdiv
jo
cs
jns
aam
push
pop
mov
adc
jmp
iret
out
outsb
mov
xor
incl
adc
jmp
sub
or
cmp
mov
mov
mov
popa
push
daa
fdiv
jle
inc
ffreep
lret
test
pop
fisttps
jno
and
jo
ja
inc
and
lret
test
test
cwtl
in
add
lds
loope
int3
jmp
adc
rol
mov
mov
aas
into
insb
jno
push
js
adc
mov
or
rclb
lcall
mov
clc
push
pop
mov
mov
cmpsb
mov
pop
push
cwtl
movsl
sub
jnp
jmp
lock
cmpb
add
lea
dec
push
dec
mov
out
mov
into
xchg
pop
push
or
fiadds
push
mov
lret
lcall
adcl
xchg
pusha
inc
imul
xor
ret
pop
add
xchg
mov
jmp
xchg
arpl
in
xor
dec
imull
sbbl
or
jmp
jb
mov
mov
cwtl
add
aaa
dec
xor
add
sahf
jl
lret
push
sub
pop
push
ret
push
or
neg
or
pop
fidivl
movsb
adc
cmpsb
cmp
fcomps
and
push
sbb
xor
in
xor
xor
loope
adc
or
les
add
pop
mov
adc
add
stos
bound
jno
leave
mov
std
jns
or
sbb
rcrb
je
sub
mov
adc
sti
push
mov
pushf
sbb
add
int
pop
pop
js
xchg
lds
inc
inc
and
dec
jb
imul
cmp
jmp
add
add
pop
arpl
jbe
repnz
lock
mov
popa
mov
inc
xchg
mov
popf
fiaddl
lods
push
loopne
insb
jmp
test
pop
fnstcw
push
push
cmp
cwtl
ret
mov
inc
sub
fiadds
rcrl
je
and
jg
outsb
mov
push
mov
or
inc
mov
pop
les
movsb
jbe
lret
jmp
in
lret
jne
sub
popa
out
mov
jmp
lret
outsb
sbb
inc
ret
ret
push
stos
dec
jmp
mov
aam
loop
xchg
enter
sub
dec
nop
inc
xor
movsl
add
pop
inc
xchg
faddl
cmpsl
jae
test
xor
mov
push
add
sarl
loopne
negl
sub
pop
data16
in
stos
outsb
xor
loopne
popa
push
and
add
fs
andl
test
xor
cmpb
dec
cmp
or
or
jb
push
js
push
insb
inc
or
and
push
xchg
icebp
xchg
into
push
or
xchg
add
adc
testb
pop
dec
orb
add
jmp
add
pop
xor
negb
push
jns
add
pop
adc
dec
pop
push
bound
sbb
mov
ret
addr16
mov
aad
xor
pop
dec
pop
jl
test
sbb
add
cwtl
sbb
jmp
into
pop
call
dec
cmpsl
out
push
adc
sbb
or
fwait
adc
cmp
not
sub
ret
in
or
or
in
xor
aaa
sahf
xchg
ror
outsb
adc
insb
xchg
pop
sub
push
xchg
arpl
les
sbb
outsl
mov
add
xor
icebp
cli
cs
xchg
cmp
loop
pushf
sbb
les
xchg
jno
jl
insl
inc
xlat
add
mov
mov
xchg
shll
repnz
or
jo
jle
into
dec
push
pop
ds
iret
pop
mov
ret
orl
mov
sub
pop
push
ss
dec
out
push
mov
adc
imull
mov
mov
addr16
or
aam
or
cmp
mov
sbb
add
add
pop
mov
and
in
std
push
repnz
aam
dec
xchg
add
pop
push
push
jb
lock
add
adc
aad
cs
arpl
ret
push
push
mov
loop
aaa
inc
or
repnz
cs
adc
out
enter
fsubl
push
and
jmp
and
sub
pop
mov
cwtl
xchg
pop
lods
dec
pop
add
and
push
push
mov
inc
std
sbb
je
out
adc
sbb
adc
pop
sub
pop
and
daa
jmp
cli
loope
push
push
xchg
ljmp
shlb
or
rorb
add
mul
jno
repnz
decl
add
jl
sbb
xchg
movsl
or
call
jmp
test
cmovp
mov
xlat
cltd
dec
pop
shl
xchg
not
iret
or
adc
add
out
call
shr
movsb
jb
push
mov
mov
cmp
nop
push
shlb
lahf
xchg
xor
sub
js
icebp
rol
xor
fdivl
add
out
sub
add
xor
mov
repz
or
les
lahf
sbb
ja
xchg
sub
xchg
sarb
out
or
sub
pop
xor
adcb
pop
inc
sub
inc
mov
addb
add
add
stc
loope
adc
push
and
fcoml
push
cmp
mov
repnz
sbb
pop
adcl
pop
outsb
jmp
sbbb
sub
xchg
jno
cltd
fwait
pop
push
dec
stos
pop
adc
inc
insb
int3
ret
add
jmp
inc
lahf
push
mov
outsl
dec
dec
and
add
sub
shl
push
es
stos
icebp
les
cli
xchg
push
push
jno
dec
mov
lcall
out
leave
in
insb
sbbl
cli
lods
rorb
cmp
adc
hlt
cs
add
cmp
dec
add
xchg
push
push
repz
aas
mov
adc
sub
inc
xchg
inc
add
sbb
js
fiadds
lret
lods
dec
jmp
sub
xchg
xchg
adc
cltd
inc
and
ret
add
push
idiv
jmp
xor
cmpsl
or
jl
mov
sub
fldenv
lret
pop
shl
lcall
rcrb
jp
push
pop
jnp
stos
ss
xor
adc
mov
cwtl
sub
adc
lea
lock
or
or
sbb
inc
stos
inc
js
cmp
fimull
fstps
ds
pop
mov
repz
stos
xchg
popf
repnz
dec
inc
push
pop
mov
mov
or
sti
roll
add
pop
sub
push
add
bnd
or
mov
adc
cwtl
ljmp
enter
test
sahf
into
addr16
mov
jg
pop
les
fadd
hlt
nop
notl
inc
dec
add
mov
imul
test
sbb
test
push
push
aaa
and
out
imul
pop
sbb
mov
sub
pop
mov
jmp
jp
or
jge
add
mov
lods
test
call
sub
ficoms
or
js
push
call
add
mov
cli
mov
add
jae
cmpsl
jmp
subb
addr16
push
stc
shl
push
sbb
dec
add
cmc
add
mov
pop
or
pop
jmp
in
push
sar
imul
mov
dec
nopw
icebp
loop
jbe
adc
out
jo
pushf
mov
pop
push
mov
inc
dec
add
or
sbbb
enter
pop
push
out
cmp
mov
adc
pop
insb
inc
xchg
ret
push
int3
fstl
pop
pop
in
xorb
decl
mov
push
cmp
je
ret
je
dec
add
push
test
leave
shlb
push
adcl
popa
in
arpl
sub
call
push
dec
mov
xor
ljmp
pop
cwtl
in
ret
stos
xchg
mov
in
mov
sub
adc
and
mov
sbb
xchg
add
daa
cmpsl
xchg
pop
cwtl
adc
loop
jecxz
xor
in
insl
cmpsl
imul
inc
xchg
rorb
push
sub
dec
into
popf
inc
or
or
jmp
xchg
push
or
pop
das
cmp
mov
icebp
inc
cmpsl
sub
dec
lods
push
sahf
push
and
mov
aaa
sub
xchg
jmp
mov
push
add
in
pop
adc
jae
pop
adc
mov
dec
adc
adc
pop
imul
sbb
and
or
add
ret
mov
jmp
xor
or
dec
out
je
outsb
and
or
fbstp
pop
pop
and
jb
pop
add
stos
nop
mov
outsb
roll
or
push
cmpsl
les
jbe
imul
insl
les
enter
movsb
adc
xchg
inc
mov
cmpsl
push
outsb
xchg
inc
push
mov
rolb
push
not
push
jmp
jmp
ret
jp
sub
mov
push
cli
mov
mov
dec
les
xchg
mov
and
sahf
outsl
imul
addb
sub
jo
test
mov
data16
dec
sub
push
imulb
rcl
hlt
daa
int3
push
es
push
push
or
jno
lock
or
inc
loop
sbb
mov
in
and
lods
cs
repz
mov
insb
aas
mov
pop
sahf
fstps
mov
jbe
cmp
or
movsl
inc
push
pop
shl
push
lret
pop
push
mov
push
jbe
xchg
push
add
iret
repnz
push
imul
cwtl
out
sbb
mov
fs
out
fcoms
push
clc
js
pop
aad
rcll
mov
mov
mov
add
push
sub
mov
sti
inc
pop
sar
leave
xor
xor
push
lds
add
insb
out
or
sbb
cwtl
dec
xchg
addr16
roll
out
mov
inc
ret
inc
pop
fisubrs
mov
xchg
inc
out
fstpl
hlt
xchg
mov
pop
cld
cmpb
aaa
or
mov
in
xchg
push
pusha
je
add
sub
inc
and
dec
lds
out
sbb
out
punpckhdq
les
stos
decl
inc
add
jp
fcomps
pop
push
or
leave
jno
rorl
or
into
add
and
icebp
xor
cmpb
and
xchg
push
cld
dec
mov
jno
push
pop
mov
xlat
inc
dec
and
mov
dec
scas
outsb
jge
or
mov
pop
dec
mov
adc
jg
ljmp
data16
fidivl
mov
repz
aas
add
sbbb
pop
rcl
aam
ds
jb
and
jl
popf
loopne
jl
or
mov
jbe
ret
mov
pop
add
cmp
or
dec
jmp
mov
push
ret
pop
or
jmp
add
pop
hlt
dec
inc
mov
add
cli
push
xacquire
push
dec
testl
lods
movsb
call
add
mov
dec
xchg
push
mov
jb
and
adc
lock
dec
lahf
mov
pop
sub
jmp
nop
aam
fwait
pop
mov
add
dec
sbb
imul
mov
lds
jae
jmp
shl
outsl
rclb
add
shll
xchg
push
mov
jnp
adc
shl
enter
push
ror
sahf
push
cltd
jb
inc
add
test
jl
js
pop
mov
add
xor
pop
lahf
loopne
shl
push
nop
popl
rcll
aad
xchg
icebp
insl
leave
stos
xchg
mov
js
andl
lret
xor
or
pop
push
incl
jb
dec
notl
xchg
ret
cli
js
pop
cmp
fs
movsl
pop
add
testl
gs
sti
ficoml
adc
out
mov
or
pop
loop
mov
inc
adc
pop
jmp
pop
add
push
sbb
dec
lods
popa
ja
pop
sub
andb
cmpsl
or
mov
loope
popf
push
subl
test
and
mov
out
pop
push
add
add
mov
push
outsl
scas
dec
loop
mulb
adc
dec
pushf
pop
fs
daa
cwtl
daa
nop
out
sbb
sbb
push
sbb
imul
xchg
ret
jmp
mov
sub
adc
daa
pop
fnstenv
or
jmp
pop
out
pop
popf
lds
xor
cmp
icebp
and
pop
jno
test
and
and
push
add
dec
jo
loope
sub
loopne
addr16
mov
call
sub
xor
push
inc
jge
insb
jmp
pop
add
xor
pop
push
push
fs
xor
sub
cmc
mov
clc
ljmp
xor
mov
loope
mov
xchg
adc
jp
sub
jo
outsb
add
rcr
imul
adc
scas
cmp
adc
mov
dec
xchg
xor
pop
neg
les
lds
inc
adc
imul
cmp
push
add
push
jmp
fiadds
xor
ja
dec
and
mov
hlt
push
lahf
pop
pusha
sub
add
loop
ret
add
lret
in
cs
je
lds
push
mov
pop
imul
push
sub
add
pop
pop
icebp
jns
sarl
jnp
sub
int
popl
movsl
mov
jp
lret
inc
jp
jecxz
or
xorb
dec
inc
jecxz
inc
xor
cmp
inc
cli
cmpb
aad
fwait
mov
mov
lods
xorb
loopne
lods
out
inc
in
mov
push
iret
jl
cmpsb
dec
xor
xor
leave
add
test
jb
inc
mov
arpl
rorl
and
add
push
mov
mov
xchg
mov
mov
jmp
pop
rcl
movsl
mov
xchg
push
cwtl
fs
adcl
mov
dec
cmp
mov
addl
cmc
adc
ffreep
into
lds
cmpsl
jecxz
enter
and
jo
sub
jmp
push
add
xorl
xor
lret
imul
fiadds
and
mov
out
sbb
mov
ret
in
movsb
add
xchg
sub
xchg
leave
mov
add
mov
insl
in
popa
xorb
pop
dec
pop
pop
push
push
adc
in
out
adc
and
sbb
and
add
mov
inc
lahf
pop
in
push
push
mov
dec
stos
jg
sub
test
sbb
dec
cld
xor
and
test
adc
hlt
add
rep
aaa
out
pusha
jmp
or
pusha
or
cmp
xor
or
push
xchg
push
sub
fldl2t
push
test
scas
mov
xor
adc
dec
and
jmp
lret
sub
cmp
int3
mov
mov
add
dec
inc
not
sbbb
or
or
add
jp
jbe
inc
aas
adc
sarl
rclb
xor
lea
fucomip
cmpsl
dec
xor
cmp
dec
inc
mov
xor
into
dec
xor
inc
pushf
push
inc
imul
add
xor
lock
bound
cs
sub
movsl
xchg
pop
add
add
inc
adc
add
mov
daa
mov
jb
mov
or
hlt
add
loope
cmp
add
mov
lret
or
stos
pop
sub
out
add
fmuls
fs
scas
cmp
sub
push
or
pop
repz
and
lock
stos
stos
jecxz
orl
cmp
mov
jns
imul
cmpsl
add
mov
pop
add
test
std
nop
pop
or
ja
sub
out
inc
pop
sub
dec
icebp
cmp
adc
jle
pop
out
and
shl
or
add
pusha
mov
and
push
sbb
pop
add
int
test
and
mov
pusha
aaa
ficoms
call
push
add
fdivrs
mov
cmp
pop
jp
jmp
pop
push
ljmp
push
popf
dec
cmp
push
mov
mov
mov
mov
ds
lock
and
das
add
xor
cmp
rolb
pusha
es
cmpsl
insb
cmp
js
jmp
out
sar
lods
adc
lcall
dec
fmulp
out
add
pop
mov
add
xlat
mov
pop
cmp
add
sub
pop
cs
mov
adc
mov
adc
shrl
xchg
fst
andl
mov
mov
arpl
pop
cmp
roll
imul
cmc
mov
jnp
addr16
cmp
shlb
sub
jge
das
fwait
stos
sbb
sbb
adc
inc
gs
jne
mov
sub
sbb
cmpsb
daa
or
add
xor
xor
add
imull
lcall
dec
add
out
ja
incb
push
jnp
mov
jnp
inc
add
bound
jmp
test
xchg
loopne
mov
test
pop
xor
lahf
test
add
fadds
cmp
xchg
ret
adc
sbb
dec
fidivl
push
sub
push
rcrl
outsl
mov
xor
sub
subl
push
pop
loopne
sbbl
dec
rcll
sub
jmp
pop
xchg
test
insl
in
mov
or
xchg
dec
inc
sbb
jae
or
insl
fbstp
jle
push
in
or
mov
mov
cmp
mov
or
pop
ljmp
mov
xor
dec
bound
orb
js
roll
enter
mov
jbe
call
iret
sub
aas
or
in
daa
pusha
push
jle
es
cmp
mov
xchg
pop
pop
xor
inc
pop
push
dec
mov
outsb
imul
test
cs
adc
cs
nop
cmp
xchg
sub
mov
rorl
and
imul
bound
outsb
add
pop
push
pop
mov
inc
mov
add
mov
add
push
xchg
or
orb
pop
push
ret
or
dec
bound
jns
mov
jle
push
cli
add
mov
jmp
mov
cmpb
sub
repz
dec
pop
sbb
mov
and
dec
ret
xor
adc
test
push
arpl
js
push
mov
adc
add
inc
ljmp
scas
pusha
sub
sarl
jmp
adc
inc
add
cmp
jnp,pn
fsts
int3
xorl
pop
jns
add
fstpt
addl
ds
psubsw
sub
pop
jge
repnz
aas
inc
lea
aad
sbbl
push
add
pop
pop
fnsave
xor
outsb
dec
or
dec
inc
mov
dec
leave
push
fldt
inc
inc
push
clc
add
cld
sbb
scas
sub
dec
mov
cmp
fdivs
add
add
std
les
enter
leave
incb
ficoms
mov
sub
lcall
movl
popf
or
cmp
add
pusha
rcll
xor
or
not
sub
xor
orb
shrl
icebp
sub
adc
mov
or
xor
xorb
insl
xor
arpl
pop
add
cli
aaa
pop
sub
xlat
popa
cltd
or
cs
andl
scas
fdivrs
lock
daa
ror
mov
cmp
pop
cmp
enter
jg
mov
testb
repz
push
test
stos
pmaddwd
ret
add
dec
cmp
repnz
mov
clc
mov
dec
mov
dec
or
lret
cli
stos
popf
sub
xor
lahf
or
adc
test
or
sub
xor
adc
inc
and
jmp
sub
inc
das
jg
icebp
aaa
sub
mov
jbe
dec
div
sbbl
and
mov
sbb
dec
es
add
insb
dec
nop
or
jne
cwtl
out
sub
sbb
pop
mov
add
pop
icebp
push
jp
cmc
das
adc
xchg
divl
repnz
pusha
movsl
popa
icebp
cmp
ljmp
inc
push
shr
pusha
inc
and
cmc
cmpsb
js
sub
pop
out
mov
lea
or
add
addb
insb
add
les
loope
or
int
push
or
add
lret
jns
push
or
or
push
xor
xor
fisubl
cs
sub
sub
test
jp
cmp
xor
adc
shrb
xor
sbb
orl
stc
pop
push
sub
fstps
ja
or
add
push
cmp
cmp
sbbl
add
mov
lcall
push
cmpsb
movsb
hlt
add
push
lods
xor
and
pop
mov
je
loopne
push
jo
add
popa
push
test
sub
jmp
inc
arpl
orl
and
cwtl
inc
jmp
ljmp
loopne
imul
add
dec
push
movsb
stos
pushf
neg
pop
push
mov
repz
psrlq
mov
and
inc
scas
sub
lahf
arpl
add
sub
int3
mov
idivb
dec
inc
je
jl
jle
add
dec
add
insb
dec
imul
push
add
into
dec
jmp
push
push
js
loope
loopne
popf
mov
dec
test
jnp
xchg
add
push
mov
hlt
in
add
fnstsw
and
xor
xchg
cld
and
cli
push
inc
and
cwtl
dec
loope
punpcklbw
inc
mov
jmp
push
xchg
ds
mov
imul
addr16
pop
hlt
push
mov
jae
xchg
shl
test
outsl
popa
xor
sub
sub
scas
push
bound
loop
adc
and
inc
nop
sbb
dec
and
mov
icebp
push
in
push
movsb
mov
mov
cli
xor
pop
push
dec
loop
fnstsw
mov
xor
shr
dec
inc
sub
js
shll
sub
scas
pusha
clc
mov
es
mov
and
es
fdiv
movsl
xor
cmp
shrl
push
cmpsb
sub
dec
sub
addb
sub
hlt
dec
mov
sti
jbe
lds
scas
rcll
out
add
or
sti
push
popa
or
add
cmp
xchg
inc
imul
testl
je
cmp
push
imull
cli
and
or
gs
js
idivb
fistpl
sbb
pop
sbb
cmp
out
not
rorb
mov
sub
jle
push
pop
mov
xor
and
jno
cs
sub
xchg
adc
push
mov
ljmp
les
push
adc
out
nop
inc
jb
shll
movb
pop
clc
outsl
lahf
push
push
jg
jge
jmp
and
push
jecxz
mov
cmp
adc
add
fildl
xor
mov
mov
cmp
jp
js
xor
dec
lcall
fsts
mov
push
sub
dec
lret
mov
hlt
les
mov
mov
daa
pop
ret
ret
add
dec
sub
xlat
rcrb
nop
pop
mov
xchg
outsb
faddl
outsl
jne
inc
adc
mov
or
add
test
push
lcall
pop
pop
aas
sbb
incl
shll
int
add
daa
xchg
shll
pop
scas
cmp
cli
adc
jns
xor
out
adc
xchg
cmpsb
mov
js
aam
cltd
push
push
sub
stos
xchg
in
jno
xchg
fwait
add
lcall
xchg
add
lret
push
repnz
imul
in
mov
addl
cmp
loop
pop
mov
add
xchg
inc
dec
add
mov
aas
add
or
inc
fnstsw
xchg
test
and
scas
dec
mov
and
xchg
jo
mov
xchg
jmp
add
pop
inc
sub
lock
xor
flds
mov
add
ret
and
and
jmp
dec
push
or
nop
dec
adc
cltd
jmp
iret
sub
push
and
jmp
pop
sub
data16
mov
xchg
mov
lcall
subb
test
imul
xchg
bound
stos
mov
dec
mov
stos
mov
outsb
arpl
out
icebp
jmp
inc
loope
fisubl
aas
push
pop
pop
movsb
and
add
dec
add
cmp
jg
xchg
cli
pop
jb
cli
inc
dec
test
xchg
movsl
mov
push
jb
scas
fisttps
push
jmp
rcrl
xor
xchg
lret
add
jbe
loope
push
or
js,pt
add
fstpl
add
dec
or
dec
xor
outsb
lret
aam
push
fbld
scas
push
dec
mov
test
test
inc
aad
sub
popa
fdivl
rcrb
and
loope
in
leave
clc
xchg
push
mov
aas
addr16
pop
sub
hlt
pop
cmp
xor
or
mov
jmp
icebp
sarb
sbb
rclb
jle
adc
aaa
pop
neg
addb
jbe
xchg
add
push
loopne
jecxz
sub
pop
xchg
sbb
mov
std
sub
add
adc
or
inc
andl
popf
inc
mov
add
sub
xchg
sbb
pop
sub
mov
cmovbe
and
lods
in
addr16
mov
add
mov
xor
aas
mov
ret
pop
rcr
sub
mov
jo
push
ret
pop
gs
imul
scas
out
or
jl
nop
and
and
add
inc
jmp
and
jle
jnp
pusha
jno
mov
push
mov
push
dec
xchg
push
inc
or
in
push
mov
add
adc
inc
mov
lds
jmp
ret
loop
cwtl
iret
add
out
mov
outsb
sub
pop
push
dec
inc
cli
and
dec
pop
mov
adc
aaa
pop
clc
lock
push
mov
adc
dec
repz
sub
sub
test
mov
mov
dec
and
pusha
fidivs
cmp
or
push
fiaddl
fdivr
xor
mov
lods
fsubrl
inc
loop
adc
inc
mov
inc
adc
dec
jnp
add
or
aam
loop
and
jmp
push
sub
orl
pop
call
rolb
lahf
dec
popa
shll
sarl
add
mov
test
sbb
jge
inc
and
mov
out
pop
cmpl
and
xchg
add
adc
mov
in
adc
jmp
andb
cli
dec
add
add
shl
call
dec
mov
add
int
mov
xchg
or
sub
std
or
adc
mov
adc
add
jp
jle
cli
mov
jle
and
push
mov
shl
pop
mov
pusha
popa
jae
sub
pop
rcrb
aaa
cmpb
test
pop
aam
cmpb
jg
and
fstpt
mov
jle
lret
jmp
in
and
cmp
xor
xchg
adc
mov
mov
adc
dec
and
fistl
jle
cmpb
mov
xchg
xor
arpl
dec
std
movl
js
xchg
xor
leave
fsubl
pop
sub
pop
aam
aad
add
enter
pop
loopne
neg
xchg
xor
mov
rolb
rorb
cmp
sub
pop
hlt
or
std
inc
mov
cltd
mov
cmpsl
stc
or
push
adc
mov
adc
sub
test
xor
std
orb
loop
negb
enter
xchg
jmp
push
pop
clc
nop
dec
out
jbe
pusha
subb
mov
push
adc
addl
sahf
and
push
shll
in
pop
push
scas
into
xchg
loop
dec
mov
jb
addb
and
lcall
rcr
mov
mov
mov
ret
lret
push
inc
and
shl
insb
and
pusha
sbb
repz
ss
and
lahf
or
pusha
add
push
popa
ficoml
push
fiadds
or
mov
loopne
pusha
hlt
sarl
sub
add
xor
js
pop
push
mov
mov
add
jmp
inc
adcb
stc
and
adc
mov
or
pop
pop
mov
mov
js
mov
inc
xor
add
push
mov
cld
lds
and
ret
add
shll
jne
add
mov
push
and
add
cmp
mov
and
jmp
sti
cmp
int
sub
sbb
test
push
movsl
push
pop
xchg
not
or
push
mov
shl
js
in
jae
pop
or
add
jecxz
jmp
xchg
jecxz
clc
lret
das
vmwrite
pop
and
or
repnz
loop
mov
not
or
arpl
out
add
insb
push
or
sub
jns
inc
negb
dec
add
or
push
mov
xor
push
inc
sahf
repnz
cmp
sbb
jmp
data16
testb
mov
jge
xchg
cmp
dec
xchg
insb
or
pop
inc
leave
adc
repnz
add
push
mov
mull
add
jg
incl
adc
xor
xchg
jns
fildll
lock
dec
jp
xchg
inc
sub
or
or
xor
mov
and
daa
jb
dec
sahf
loope
sub
ret
mov
cmp
shll
popf
out
in
jmp
scas
sub
jge
enter
mov
and
or
daa
loop
ret
in
popf
inc
push
rdpmc
pop
mov
xor
push
mov
jo
pop
aas
dec
add
sub
stc
ret
das
iret
addb
and
data16
sub
mov
out
dec
insb
cmp
test
ljmp
dec
push
or
and
outsb
insl
orb
scas
pop
js
addb
sub
in
imul
scas
pop
jmp
and
repz
sub
cmpl
jg
add
dec
jmp
pop
call
fsubrl
mov
adc
xor
mov
adc
xchg
mov
cmp
dec
mov
or
cmc
and
leave
xor
jo
daa
push
dec
mov
sub
mov
cmp
testb
ret
out
daa
mov
jge
or
push
addb
scas
xor
test
aas
push
adc
adc
xchg
lret
je,pt
es
scas
fstps
popa
jmp
jle
call
sbb
mov
mov
add
jg
add
lods
add
mov
stc
movsl
push
ret
pop
movsl
je
out
adc
push
fs
or
and
rclb
ret
movsb
pop
addl
dec
mov
sub
mov
or
std
add
inc
adcl
push
sbb
or
jecxz
clc
sub
xchg
mov
mov
sub
push
push
mov
negl
mov
orl
fidivrs
xchg
inc
and
dec
adc
pop
inc
sahf
jmp
pop
push
pop
scas
jp
pop
ret
mov
jp
adcl
and
push
and
or
cld
dec
enter
mov
xchg
inc
shr
lea
in
icebp
add
jge
insl
add
adcl
les
aas
xchg
ret
test
jmp
mov
push
push
xchg
inc
cmp
add
mov
xchg
dec
shr
ds
sub
lea
or
sbb
mov
add
add
xor
add
stos
jmp
add
sub
jle
test
jmp
cmpb
mov
dec
mov
xchg
add
xor
xor
in
add
sbb
pop
add
sub
jp
pop
sub
xor
push
mov
mov
dec
inc
xchg
xchg
jmp
inc
mov
push
mov
sub
jl
pop
push
fnstsw
sahf
outsb
xlat
stos
inc
mov
imul
mov
cwtl
fdivp
es
jbe
or
das
jns
xchg
fsubr
dec
mov
sar
sub
dec
and
sub
pop
loop
nop
pusha
call
or
push
or
or
test
xorl
not
xor
insb
ret
xchg
and
cli
xor
jbe
test
add
mov
iret
mov
fidivrl
je
andl
fneni(8087
push
jmp
jl
call
xchg
sub
int
or
out
pop
or
pop
popa
cld
dec
mov
mov
inc
orb
mov
or
jg
jg
add
push
cmp
push
mov
ret
dec
cmp
mov
and
loop
pop
neg
push
xchg
mov
pop
clc
push
mov
lea
lock
andb
fisttpl
shrl
pop
jmp
jg
in
mov
fs
mov
gs
int
pop
inc
sbb
fdivrs
xchg
jle
mov
pop
inc
mov
jmp
mov
pop
or
add
scas
enter
int3
jg
sahf
idivb
mov
sub
push
mov
mov
xchg
inc
pop
cwtl
xlat
push
stc
scas
push
xor
std
or
and
push
in
xor
inc
inc
mov
hlt
ficomps
idivl
ficoml
sub
sbb
mov
mov
filds
test
jno
jo
lods
stc
das
or
jnp
and
addr16
mov
enter
push
push
jge
pop
mov
mov
dec
loop
add
sub
leave
dec
fisubrl
pop
cli
sbbb
std
dec
out
pop
jmp
shlb
sub
mov
add
arpl
jnp
jmp
add
jae
push
xor
mov
push
and
insl
or
test
cmp
punpckldq
lcall
add
push
mov
jnp
mov
xchg
test
cs
sub
shll
gs
sub
into
jbe
dec
rol
cwtl
and
cmp
popa
xchg
or
mov
mov
xchg
or
xchg
mov
fstps
sbb
insl
push
cmp
outsb
jmp
stos
or
jns
outsl
imul
cmp
mov
hlt
xor
xchg
fld
inc
add
cmpsl
and
xor
pop
mov
sbb
xor
jmp
mov
dec
popl
btc
jp
cwtl
cs
dec
xor
or
sbb
push
add
sbb
mov
repz
pop
mov
je
mov
inc
mov
push
movsl
and
cmpb
adc
pop
pop
out
push
mov
sub
repz
dec
add
jbe
jl
cs
inc
or
out
es
lret
int3
pop
dec
leave
mov
jno
xchg
in
pushf
out
ret
or
add
lahf
cmp
pop
inc
inc
shrl
xor
adc
inc
jle
xor
mov
mov
jp
push
jae
inc
int3
jl
pop
incb
ret
shl
sub
iret
lock
sub
lock
jns
cwtl
lret
out
dec
jo
daa
push
scas
xor
inc
push
mov
or
mov
xor
ret
in
sbb
pop
dec
lds
and
adc
iret
aas
mov
repnz
and
addl
mov
sbbb
dec
loop
popf
movsb
adc
xor
pop
loop
and
pop
sarb
and
insl
test
ds
mov
ret
test
test
push
pop
clc
clc
loopne
arpl
pop
insb
insb
cmp
jg
push
add
dec
bound
loop
pop
nop
enter
push
xor
inc
aaa
xor
testl
add
pop
or
or
aam
and
push
mov
pop
rcrl
inc
add
js
add
testl
in
dec
jmp
or
push
shrb
out
pop
fs
data16
add
test
dec
adc
les
stos
add
nop
or
sbb
add
mov
arpl
or
ss
cmp
xlat
ret
rol
dec
mov
jecxz
mov
gs
mov
or
cwtl
push
xor
call
push
jge
lods
repnz
out
xchg
pop
adc
jo
add
mov
hlt
mov
dec
mov
inc
scas
adc
nop
jp
shll
add
pop
and
push
sub
jp
imul
push
mov
bound
ds
xor
mov
adc
dec
push
enter
cwtl
lcall
pop
pop
in
add
push
lret
push
cmp
jb
nop
jmp
movsb
inc
pop
nop
pop
adc
lahf
and
jae
push
in
test
push
icebp
or
add
mov
lret
pop
jo
inc
loopne
cmp
xor
mov
das
mov
sahf
pusha
js
sub
xchg
daa
mov
movb
add
cmp
push
in
xchg
test
push
xlat
fcomps
leave
pop
shrb
push
and
and
mov
ret
daa
xchg
push
cld
insl
xchg
mov
mov
popa
lods
scas
cmp
and
orl
pop
pop
dec
popf
gs
xor
push
aad
xlat
pop
sub
mov
js
mov
dec
mov
in
std
dec
andl
jno
and
adc
rorb
idivb
stc
and
add
sub
in
cmp
das
cli
test
sub
push
pop
test
movsl
mov
push
jmp
or
pop
push
fisubrl
daa
dec
jmp
adc
les
mov
iret
sbb
icebp
dec
or
mov
adc
add
int
push
out
xchg
adc
call
jle
icebp
popa
jo
mov
shlb
add
das
mov
sbbl
inc
or
dec
adc
aad
cmp
cs
repnz
aad
sbb
hlt
nop
out
popf
in
mov
stc
sbb
imul
push
pop
mov
mov
fiaddl
xor
pop
push
mov
xor
ret
dec
test
cmp
sbb
ja
pop
arpl
testb
fists
add
pop
push
mov
das
subb
insb
pop
sbb
push
pop
cmp
shlb
push
push
mov
adc
pop
dec
cs
add
int3
push
mov
sub
imul
into
add
adc
jno
nop
mov
inc
lods
icebp
lret
pop
push
mov
xchg
mov
jnp
xor
xor
pop
push
imull
dec
loop
aaa
cmpsb
jmp
icebp
add
dec
pop
data16
sub
out
push
and
push
test
stos
xor
mov
cmp
cmp
xchg
subb
and
mov
lods
xchg
dec
mov
push
mov
ds
pop
das
cmp
test
aad
and
ljmp
and
adc
data16
xchg
stc
jmp
js
lahf
pop
mov
hlt
icebp
call
mov
sub
ds
mov
loop
ret
push
jl
js
adc
out
add
aas
add
pop
xor
sbb
mov
xchg
sub
insb
icebp
addr16
xor
add
lds
mov
ja
fisttpll
iret
lret
jle
cli
add
xor
jno
xor
add
xchg
ja
xor
inc
sub
adc
mov
out
xchg
adc
mov
adc
push
mov
mov
mov
sbb
and
adc
flds
test
jno
or
adc
je
mov
mov
pop
mov
out
and
es
push
pop
add
and
bound
mov
xor
push
or
sbbl
dec
sbb
or
jmp
or
jge
ja
adc
jnp
test
add
inc
push
jnp
test
das
jb
icebp
out
inc
and
gs
inc
das
test
out
lcall
pop
add
mov
push
outsl
add
aam
push
dec
roll
dec
jg
mov
cwtl
dec
cld
inc
aas
pop
adc
and
fistl
xchg
adc
shrb
add
mov
add
shr
cmp
enter
or
outsl
daa
arpl
cwtl
ret
mov
iret
sub
aas
ja
cwtl
ds
inc
xchg
or
adc
inc
add
es
inc
jmp
ja
and
dec
mov
or
pop
dec
cmpb
shrb
add
mov
push
sub
pop
addr16
cltd
jbe
mov
loope
in
jp
pop
xchg
jle
mov
fs
in
loop
dec
push
adc
adc
paddq
dec
mov
ja
xor
sbb
adcb
sub
mov
xor
mov
cvtps2pi
push
pop
lahf
add
xorps
dec
and
fxch
repnz
ljmp
rclb
adc
sbbb
jne
jmp
or
add
fldl
sarl
out
cmc
mov
mov
rcrl
shll
mov
lret
mov
scas
jne
pop
push
mov
push
jmp
jno
add
clc
repnz
pop
add
push
jno
xor
push
mov
inc
inc
add
push
mov
popf
fmull
test
mov
daa
pop
add
dec
jg
sbb
test
sti
xchg
in
xchg
sahf
pop
push
jo
aaa
movsl
and
imul
push
mov
mov
rolb
lds
cmc
and
in
popa
jl
add
rolb
push
or
sub
sub
jg
add
clc
hlt
or
add
call
mov
adc
mov
inc
in
iret
inc
xchg
rcrl
adc
cmpb
adc
pop
mov
vcvttps2dq
js
lcall
and
mov
ret
add
out
sub
sbbb
push
addr16
sarl
and
xor
xlat
add
and
loope
testl
sub
cmp
pop
aaa
pusha
loop
jo
dec
ja
ljmp
xchg
push
and
mov
xchg
xchg
dec
jmp
cmp
push
es
enter
jae
push
arpl
push
sarb
loopne
movsl
mov
test
fcoml
push
xchg
and
ss
aas
imulb
shrl
adc
cmpsl
adc
push
pop
aas
enter
xor
roll
jnp
jbe
sub
cmpsl
add
pop
je
lret
push
push
cwtl
mov
push
cmp
or
add
lahf
pop
inc
out
mov
test
add
test
pop
and
sbb
fsubrl
into
add
mov
adc
fisubs
push
bnd
pop
pop
sub
dec
rorl
cwtl
push
dec
xor
mov
lock
jmp
jmp
dec
and
mov
add
imul
mov
pop
jae
out
clc
xchg
in
fildll
xchg
int3
mov
push
das
and
xchg
mov
inc
pop
fs
sub
mov
push
lock
sub
dec
mov
xchg
adc
add
int
pushf
dec
in
dec
in
fs
push
cwtl
popa
add
jg
insb
adc
jne
add
and
xor
inc
add
adc
push
push
sbb
cmp
sbb
inc
xchg
jbe
in
inc
shll
jge
sub
jmp
jle
mov
pop
fbld
push
add
into
loopne
lods
push
mov
pop
neg
cmpb
mov
push
pop
inc
xor
sbbb
out
inc
mov
data16
pop
sbb
jns
inc
push
imul
jge
and
or
add
sub
adc
mov
lock
inc
popf
mov
push
mov
add
xlat
stos
xchg
cmp
pop
sub
mov
mov
movsb
lds
push
out
mov
pop
aam
in
xor
or
lods
hlt
jge
xchg
push
in
xor
mov
pop
xor
inc
jl
inc
cld
sub
mov
dec
ja
dec
mov
out
into
cltd
xorl
push
or
jmp
loopne
xor
scas
sbb
aad
daa
dec
pop
xchg
pop
inc
add
fwait
xchg
inc
jbe
jnp
mov
sub
add
repz
cltd
lock
test
outsb
les
movsb
lods
loop
jne
add
rcrb
sbb
push
push
lret
mov
iret
cwtl
jge
aam
dec
xchg
push
cld
cmc
and
outsl
xorb
mov
pop
sub
or
or
push
ds
lock
add
insl
add
std
roll
frstor
into
push
adc
cmp
pusha
sbb
ja
out
rcll
xor
and
cmp
out
movsb
sub
adc
xchg
popf
out
xor
sbb
add
mov
xchg
enter
lahf
cltd
in
cmp
cmpsb
int3
lret
sbb
adc
cs
jle
imul
xchg
loopne
into
xchg
aad
push
mov
xor
mov
rol
pop
ljmp
jmp
xchg
sbb
sbb
sub
and
push
mov
ds
sub
add
lahf
add
mov
sbb
not
cs
aaa
adc
movsb
sub
or
adc
push
or
push
fdivl
inc
aaa
pop
mov
mov
add
push
jns
imul
jno
cmp
jmp
dec
les
push
jg
xor
xor
repz
xlat
push
sbb
stc
jmp
stos
out
cli
mov
fcoml
scas
mov
or
push
lahf
aam
je
or
dec
sub
jmp
decl
sbb
lods
sub
cltd
xchg
mov
int3
push
adc
leave
dec
ljmp
mov
add
and
popa
add
mov
js
shll
ja
and
inc
mov
fsubl
xor
push
jmp
or
xchg
popa
add
lock
adc
add
repz
mov
mov
jge
xchg
rcl
movb
inc
pop
push
jg
arpl
xchg
push
xchg
test
adc
add
adc
mov
mov
pop
out
or
loope
lock
in
add
fwait
and
testb
and
and
imul
jle
mov
pop
jne
call
fistpl
dec
xchg
sub
xchg
shr
push
mov
sbb
inc
add
cmp
mov
clts
in
sub
sarl
or
fimull
xchg
push
cmc
or
or
adc
jbe
sub
pop
aam
or
int
das
in
in
dec
outsb
aam
ds
jns
add
push
push
push
jge
sub
xor
out
mov
ja
adc
test
mov
mov
cmp
repz
icebp
ds
mov
lcall
sub
sub
sar
pop
repnz
push
jno
std
add
loop
mov
aam
leave
mov
ja
fs
test
or
int3
push
popl
cmp
cs
sub
fdivp
ret
xchg
adc
push
sbb
and
push
or
add
jl
cmp
xor
and
mov
shll
pop
mov
add
or
ljmp
jb
inc
sbb
gs
fs
shl
gs
jge
inc
jmp
push
pusha
daa
or
push
ficoms
das
enter
lock
sahf
add
add
daa
jmp
and
scas
push
repnz
stos
push
cld
cmpsb
pop
cmp
ret
dec
nop
aam
insl
jbe
loop
mov
add
sub
shr
push
and
fcmovne
lea
mov
or
adc
clc
mov
jb
daa
jmp
xchg
leave
push
add
outsl
dec
sub
mov
lds
ja
xor
sub
jo
lods
and
ljmp
ret
push
les
pusha
lods
les
outsb
add
mov
dec
push
cmpsb
cmp
cmp
mov
roll
ja
xchg
mov
lock
sub
icebp
std
js,pt
dec
mov
sbb
push
cmp
jge
fwait
rorb
and
pop
addr16
pop
mov
fstpl
xchg
not
cltd
jmp
cmp
inc
jl
addr16
dec
xchg
xor
pop
into
pop
sub
arpl
shl
xrelease
fimuls
adc
adc
arpl
or
jmp
pop
sub
mov
loop
jns
sbb
jne
stos
shrl
push
stos
jmp
out
fidivl
mov
insb
inc
mov
movsb
pop
pop
enter
dec
sub
push
mov
pop
inc
push
and
dec
insl
add
push
or
push
lods
mov
fsts
gs
xchg
jae
push
lods
aas
sub
mov
pushw
dec
push
push
mov
ljmp
pop
cmp
mov
scas
sub
sub
push
das
mov
pop
cmp
jge
test
mov
jge
fcoml
add
movsb
sub
jp
mov
popa
aad
insb
adc
rcll
add
loope
nop
dec
mov
xchg
sub
mov
add
and
lods
pop
pop
lea
inc
mov
and
jo
sbbb
lds
in
lcall
andl
sti
outsb
xor
xchg
pop
in
mov
in
push
aaa
fcoms
stos
aam
bound
lret
xor
add
ja
push
dec
addr16
test
or
adc
add
popa
mov
andb
pushf
je
xchg
xchg
and
cld
push
adc
pop
movl
in
rcrl
xor
jo
lahf
and
mov
gs
push
push
subb
nop
cmp
add
sbb
or
push
xchg
mov
push
loope
daa
imul
push
dec
xor
movsb
inc
sub
leave
lea
repz
lcall
xchg
shr
jne
add
pop
test
sub
xchg
inc
or
sub
push
fmuls
mov
or
adc
es
adc
jne
scas
clc
les
ror
mov
xchg
mov
faddl
in
or
cmc
movsl
xchg
cmp
sti
int3
xor
ds
mov
and
or
leave
mov
jl
dec
loop
rorl
lret
xchg
push
mul
mov
add
hlt
dec
pop
sbb
add
ret
fdivrl
dec
ret
out
sbb
je
add
out
rorl
add
ljmp
cli
xor
ret
fwait
test
inc
outsl
popf
mov
out
adc
and
ds
addl
cld
xor
nop
sub
mov
addb
pop
add
lahf
test
mov
stos
sub
jmp
pushf
adc
adc
test
lods
cmpsb
in
ja
nop
ffreep
bound
or
or
repnz
pusha
push
arpl
sbb
xchg
pop
sbb
testb
and
fbld
adc
jmp
push
xor
mov
inc
loope
lret
inc
inc
fmul
pop
daa
jo
lods
add
mov
negb
dec
mov
mov
or
inc
push
or
rorl
mov
ljmp
andl
mov
inc
push
int3
mov
nop
daa
push
jo
imul
mov
mov
shr
mov
xchg
daa
adc
fldt
and
inc
inc
cmpl
inc
movsl
pop
jecxz
in
and
jp
imul
jns
fstpt
dec
pop
push
pop
lds
mov
adc
aam
xchg
mov
pop
jmp
mov
lret
mov
pop
push
cmp
stc
ljmp
push
repz
xor
int3
pop
lret
jg
test
ja
ret
xlat
dec
push
test
sub
jmp
mov
push
fs
mov
mov
add
and
xchg
int3
call
daa
or
push
mov
adc
mov
dec
rcrl
pop
in
mov
ret
jne
adcl
and
shrl
repnz
pop
sti
shr
mov
or
arpl
sub
cmpsl
adc
shl
in
push
pusha
push
rclb
fiadds
sbb
add
sbb
sub
cs
jge
int3
sti
outsl
mov
dec
test
mov
adc
push
fstps
pop
adc
ljmp
bnd
or
jb
incl
inc
mov
out
mov
sub
pusha
ficoms
repz
and
rcll
pop
or
jmp
push
mov
aas
jbe
dec
jmp
fistpll
jmp
je
mov
jmp
mov
pop
push
cmp
jmp
movsb
adc
push
mov
jecxz
into
adc
xchg
push
roll
dec
cmp
mov
add
das
mov
lock
xor
sarb
dec
mov
or
sbbl
daa
mov
xor
testl
push
das
mov
shlb
gs
or
pop
nop
stos
repz
loopne
inc
xor
sub
test
xchg
mov
pushf
push
sbb
jno
std
sub
add
dec
popf
sbb
lods
xor
cmp
dec
mov
push
jl
mov
orb
adc
cld
or
and
pop
cmp
cmpsb
sub
jae
adc
cmp
add
push
mov
lcall
sbb
cmp
icebp
idivl
rcll
icebp
cld
add
cld
add
adc
xchg
add
adc
insb
push
jns
sub
in
adc
or
sub
call
pop
in
in
jle
ss
cltd
cmpsl
das
jbe
bound
jbe
and
in
jp
stos
pop
sbb
ret
pop
mov
scas
sub
inc
fsubrp
mov
movsl
es
or
mov
adc
xor
push
pusha
aam
pop
in
fsts
pop
loop
xchg
movsl
out
xor
lds
adc
inc
fimuls
push
test
addb
pusha
jmp
test
inc
inc
inc
adc
leave
push
sub
jmp
and
mov
jecxz
loop
insl
sub
pop
imul
loopne
xlat
jl
jl
repz
sub
jne
ret
sbb
xor
sub
movsb
popa
add
add
mov
int3
and
sub
rorb
jmp
jle
xor
test
xor
pop
adc
shll
arpl
sub
test
pop
sub
pop
push
in
dec
lods
push
push
jmp
sbb
push
popa
icebp
or
push
xchg
push
stos
je
out
add
out
cs
xor
push
xor
lock
pop
cltd
xor
jp
inc
mov
mov
pop
add
or
push
cltd
or
xor
cmp
idiv
and
add
das
lds
pop
out
ror
pop
pop
ret
fldl
into
lahf
mov
add
push
pop
xor
pop
fdivrs
push
inc
inc
loopne
fwait
or
pop
dec
jle
mov
xchg
add
mov
fs
fstpt
enter
fmull
mov
jmp
test
pop
add
rolb
mov
pop
mov
add
add
sub
lock
pop
add
call
dec
stc
dec
into
bswap
mov
cmpb
in
mov
ret
pop
mov
xchg
jmp
mov
inc
data16
xchg
adc
adc
mov
or
sti
lea
pop
negb
xor
inc
sbb
or
lods
int3
pusha
or
aaa
cltd
xor
iret
add
mov
pop
xchg
mov
aaa
jmp
popf
jns
rclb
adc
inc
mov
sub
sub
ja
sbb
pop
rolb
add
mov
hlt
je
enter
cli
cmp
fadds
add
ds
jb
jae
rol
cmp
pop
add
pop
std
mov
xor
divb
jmp
outsb
push
sbb
sbb
lds
sub
pusha
pop
sub
push
test
mov
xor
fwait
push
mov
into
in
jle
daa
push
or
enter
sub
sub
xor
ja
jmp
dec
lea
xchg
cmpsb
sub
rcrb
dec
loope
and
cmp
adcb
adc
sbb
sub
push
or
sub
jb
adc
loopne
dec
pop
push
inc
or
cmpsl
sub
cwtl
aas
out
pop
loop
pop
stc
dec
add
ret
inc
mov
or
inc
xchg
pop
sahf
push
inc
pop
pop
push
add
enter
dec
mov
movsw
cmpsl
insb
pop
xchg
jg
lahf
pop
das
and
sbb
xchg
sbb
sub
adc
insl
dec
sub
pusha
repz
inc
pop
popf
xor
pop
add
jmp
xchg
add
jmp
add
not
jne
pop
pop
lret
sub
push
shlb
add
lret
mov
iret
or
stc
cld
xchg
mov
sub
mov
scas
push
mov
jge
ret
aas
adc
insb
mov
push
push
push
pop
pop
sahf
lret
xchg
dec
inc
adc
mov
pop
pop
and
lds
add
push
xchg
leave
jl
jbe
in
dec
rdtsc
adc
pop
pop
aam
lea
shr
jmp
inc
push
adcb
pop
or
popa
xor
or
loop
mov
mov
cmp
and
or
data16
and
pop
or
insl
jo
out
loopne
inc
jae
sbb
pop
or
hlt
or
mov
inc
pop
aam
mov
lahf
push
sbb
daa
dec
xor
push
mov
dec
jle
inc
jmp
sar
push
dec
or
fsubrs
sub
inc
sbb
and
add
cs
jle
fdecstp
mov
hlt
mov
mov
jb
or
incb
push
int
xor
aaa
xor
sbb
lret
loope
cmp
mov
xor
inc
jle
push
pusha
bnd
das
pusha
cmp
sub
push
into
and
test
add
ljmp
aam
add
or
loop
push
xchg
mov
ds
hlt
dec
ret
pop
test
or
and
rclb
inc
pop
cmpb
push
pop
sub
shl
xor
jne
add
ljmp
stos
imul
push
xor
gs
xor
cli
pop
or
push
sub
mov
mov
hlt
out
mov
adc
mov
lahf
jne
sti
sub
mov
stos
dec
push
lods
lret
test
hlt
dec
lcall
fsts
adcl
or
xchg
inc
add
pop
mov
or
repz
sti
xor
popa
push
push
pop
sub
pop
add
mov
mov
push
jbe
daa
loop
ja
in
out
add
icebp
pop
shlb
jmp
jo
out
pusha
mov
incl
not
xchg
hlt
mov
push
mov
pop
jmp
or
cwtl
icebp
out
xor
pusha
gs
and
rclb
dec
xchg
add
mov
inc
pop
pop
addr16
push
mov
pop
sub
sbb
inc
or
add
les
js
pop
std
pop
xor
jo
cmp
and
lock
sub
cld
xlat
push
lret
lahf
out
in
lcall
pusha
jmp
lock
inc
popa
ja
sahf
add
js
push
inc
rcr
push
xchg
lock
stos
pop
add
and
jmp
pop
pop
insb
xchg
fisttps
fldenv
adc
jge
dec
ja
subb
cmpsb
dec
test
push
std
jmp
loop
testb
xchg
into
add
xchg
mov
mov
push
inc
lea
push
push
mov
xor
lret
pop
test
or
cmp
push
mov
js
xchg
xchg
in
jae
fsubrs
inc
pop
mov
int
imul
dec
ds
mov
cmp
mov
incb
inc
out
sbb
shr
push
inc
addr16
cmp
push
addb
sahf
push
sub
loopne
fidivrs
testl
dec
loope
sub
inc
push
pop
addl
mov
stc
cld
ljmp
ljmp
xor
stos
notl
jne
add
dec
sub
popa
imulb
pop
leave
sub
jb
outsl
popf
nop
mov
jmp
mov
add
jmp
pop
mov
mov
mov
in
mov
pandn
push
lds
pop
test
ret
addl
cli
sub
shrl
imul
repz
arpl
je
jp
in
addps
enter
cmc
mov
xchg
mov
cmp
or
test
imul
jl
lret
xchg
cld
shrb
push
dec
jne
fcompl
xor
sbb
pop
jns
inc
ljmp
and
or
sub
out
fwait
daa
add
xor
pusha
inc
xchg
xorb
pop
mov
lret
out
mov
and
aam
leave
add
or
mov
jmp
mov
sbb
xor
popa
in
xchg
pop
push
hlt
jle
pusha
push
add
cmovle
cwtl
mov
pop
fiadds
and
fcmovne
add
adc
call
fisttpll
fistpl
loope
std
add
clc
mov
mov
sub
daa
cmovp
roll
pop
pop
jmp
mov
adc
pop
das
sub
cmp
adc
nop
fcmovnb
push
pusha
outsb
mov
mov
push
or
fistpl
pop
and
enter
fsts
hlt
fcomp
inc
push
pop
mov
bound
mov
push
cs
cmpb
or
add
aas
ret
cmp
pop
push
imul
leave
hlt
cmovo
sbb
jmp
mov
push
mov
sub
aam
sub
sub
mov
sub
in
or
fnstcw
dec
sub
add
mov
inc
or
dec
pop
mov
xchg
and
cli
push
mov
xor
mov
bound
aad
and
mov
subl
xchg
add
xor
pop
or
mov
push
adc
adc
mov
add
inc
and
sub
and
mov
repz
and
clc
lock
dec
lock
pop
xchg
icebp
das
xchg
sbb
add
mov
jmp
repnz
dec
or
pop
ret
add
shr
loop
jo
js
mov
cmpsb
add
testl
ja
mov
add
popw
xor
or
and
iret
push
adc
mov
mov
loopne
xor
add
sub
dec
mov
sub
push
aaa
mov
jns
dec
in
cwtl
mov
rol
mov
mov
shrl
xor
adc
push
inc
inc
int3
mov
das
shr
neg
rolb
mov
not
adc
fdivrl
rolb
and
ret
out
nop
gs
jmp
das
cmpsb
fwait
dec
testl
out
xlat
sub
push
inc
addb
dec
mov
mov
repz
das
clc
les
push
cmp
jmp
or
fsubr
notb
sub
outsb
push
cli
or
jl
pop
enter
xchg
push
push
or
daa
dec
xor
inc
pop
repnz
pop
fldenv
lcall
ja
bound
jl
mov
stc
push
pop
jmp
dec
and
fdiv
adc
add
jmp
test
cltd
xchg
sarl
xor
jae
push
sub
pop
and
ja
and
inc
push
jl
add
cmp
push
lods
pop
dec
out
scas
sub
mov
sbb
xchg
inc
pop
mov
loope
cs
lock
push
pop
pop
and
and
out
dec
mov
jg,pn
or
shlw
sub
add
sub
add
js
jg
fwait
adc
dec
out
int
mov
dec
mov
lods
push
push
not
xchg
inc
cmpsl
sub
lret
or
or
push
mov
dec
mov
mov
imul
sbb
out
dec
push
stos
fcompl
mov
fsubs
mov
push
jl
imul
shlb
scas
insb
cmp
and
fdiv
or
les
push
mov
push
dec
call
popf
lret
jb
out
xlat
js
push
mov
dec
outsb
cmp
lock
pop
adcb
mov
pop
mov
adc
sub
push
and
dec
mov
add
out
pop
inc
iretw
repnz
jl
loopne
add
scas
stos
out
push
jns
gs
cs
call
push
cld
in
dec
imul
je
mov
test
or
xchg
nop
add
jnp
cs
adc
in
mov
push
adc
loopne
sbb
icebp
out
jp
and
push
lock
sbb
mov
sub
js
adc
adc
xchg
sbb
js
or
inc
int
adc
cmc
leave
mov
jle
sub
insl
mov
cmp
ds
mov
inc
or
xor
lmsw
pop
popf
shl
bound
test
pop
add
shrl
add
sarb
ja
aad
add
add
adc
push
in
and
fcoms
add
xlat
push
cmp
mov
nop
ds
loope
push
and
pusha
or
dec
aas
adc
ret
push
push
nop
sub
sbb
inc
aam
mov
adc
insb
mov
push
push
fcomip
loope
pop
iret
add
and
or
pop
jp
pavgb
aad
xchg
std
lea
add
sub
mov
mov
jle
push
pop
push
clc
loopne,pt
idiv
out
das
imul
shl
rorl
and
sub
push
pop
push
mov
or
sbb
insb
add
psraw
sbb
ret
xor
pop
lea
cmp
nop
das
mov
icebp
out
sub
sub
xor
in
jmp
mov
icebp
ret
aam
or
pusha
xor
cwtl
pop
mov
mov
rcrb
mov
repnz
dec
mov
dec
inc
xchg
lret
cli
dec
mov
aaa
inc
loop
xor
xor
in
ret
sub
shr
and
addr16
or
aas
dec
mov
repz
push
or
sub
aas
sub
fadds
pop
movsb
enter
pop
and
push
pop
xor
and
push
inc
add
and
add
icebp
xchg
je
push
mov
cmp
les
int3
and
movl
ljmp
adc
inc
xchg
lahf
clc
mov
push
sbb
push
or
sbb
xchg
mov
push
jb
and
sarb
dec
mov
cli
jne
lcall
jg
fmuls
push
cmp
pop
cmp
add
aas
fwait
pop
mov
loope
bound
sbb
lahf
add
das
jmp
inc
xchg
jns
imul
mov
mov
xchg
sub
or
mov
lret
fists
incl
jp
jmp
add
pop
and
sub
mov
rcrl
dec
loop
pop
sbb
mov
push
push
lock
sbb
lods
pop
pop
or
lret
jbe
adc
xchg
jno
dec
pop
and
cmpsb
std
pop
jmp
mov
jp
push
test
std
pop
jno
xchg
mov
imul
ret
adc
fcom
test
repnz
sub
cs
dec
or
jp
cmp
test
fmulp
xchg
movsl
jbe
add
push
dec
std
cmc
cs
add
add
clc
and
sbb
push
and
adc
xlat
pop
sbb
ror
lods
add
fwait
jmp
xchg
add
subl
xchg
data16
mov
add
and
popf
fisttps
icebp
dec
mov
xlat
or
sub
inc
xchg
add
adc
and
imul
inc
outsl
push
jmp
sbb
xor
adc
jmp
xor
adc
push
and
pusha
insl
push
stos
das
loopne
orl
inc
xor
xchg
push
lcall
stc
outsl
push
push
push
pop
push
popa
lret
loop
xchg
push
or
dec
jns
push
inc
or
xlat
das
jmp
mov
mov
mov
out
add
xor
jmp
adc
out
add
add
clc
push
cli
mov
out
pop
xor
loope
lcall
push
xor
pop
shrb
sub
add
mov
std
or
cmp
adc
lret
arpl
and
pop
add
sub
jmp
imul
xchg
mov
test
arpl
cld
push
mov
add
jbe
sub
add
dec
test
popf
mov
mov
add
push
ljmp
ljmp
leave
xor
maskmovdqu
inc
pusha
and
sub
cmpsb
add
jnp
jns
andb
dec
mov
add
mov
and
jle
jge
or
jb
lret
xor
jg
mov
mov
test
pop
popa
adc
test
xchg
cmpsl
jge
fistpll
xor
aad
addl
out
pop
int3
push
test
shlb
cmp
lahf
jne
pushf
push
scas
ret
aad
mov
jmp
xchg
mov
repz
mov
test
sub
or
and
cmpsb
jle
jmp
repnz
xchg
dec
fnsave
cmp
aas
xchg
sub
jl
and
aas
subb
je
push
or
imul
add
mov
dec
cmp
pop
rcrl
rep
jg
enter
aas
or
inc
test
mov
add
mov
shlb
ja
in
aam
jl
pop
jg
dec
xorl
cld
imul
mov
jle
ret
add
push
push
jl
lret
outsb
mov
aam
adc
add
adc
mov
dec
jbe
xor
je
add
xchg
pop
ljmp
gs
sbb
int
aas
cmc
dec
inc
stc
add
sub
iret
push
daa
fbstp
addl
and
das
ds
sbbb
fnsave
jb
mov
cmp
push
in
xchg
push
cmp
js
and
fildl
shll
pop
pop
inc
push
lret
es
push
cmp
xlat
cwtl
mov
push
pop
orl
in
jg
mov
and
inc
ds
and
aas
sub
test
or
pop
mov
xor
pushf
jmp
sub
loopne
pop
jnp
push
leave
ret
push
push
dec
scas
jmp
jmp
sbb
mov
sub
and
mov
jecxz
xor
out
dec
pop
shl
pop
ret
xchg
xchg
add
pop
add
inc
adc
lods
pushf
adc
out
and
add
loopne
ret
lds
mov
in
fdivrl
pop
pop
std
ficoms
cld
add
pop
pop
pop
xchg
pop
xor
xchg
push
sbb
sbb
les
in
andb
insl
mov
mov
cmp
push
mov
push
in
in
inc
cld
and
mov
mov
call
jne
dec
shll
add
jg
nop
push
jmp
sarb
mov
mov
in
mov
mov
orb
jmp
dec
or
and
shrb
inc
push
mov
pop
outsl
adc
add
pop
repz
int
add
mov
jns
cwtl
and
xorb
add
es
pop
daa
push
jo
cmp
pop
aas
pop
shll
addb
flds
hlt
fwait
jnp
push
mov
push
rcrb
xchg
push
call
neg
xchg
sbb
add
sub
push
popa
stos
insb
fidivrs
cmp
and
out
add
mov
or
mov
xor
sub
cwtl
sub
insb
adc
push
mov
pop
lea
cmc
add
and
fidivrs
shr
les
nop
testl
or
jno
and
imul
loopne
push
dec
call
dec
and
sbb
aad
cs
inc
out
lahf
insl
pop
lods
add
adc
pop
das
movsb
mov
or
not
sahf
or
mov
push
clc
dec
add
dec
jl
sub
jp
push
inc
call
jb
imul
add
add
cmp
pop
xchg
dec
xor
dec
jmp
pop
mov
das
stos
pop
daa
and
in
add
ds
dec
mov
lret
cwtl
notl
data16
leave
jle
jbe
sbb
popa
adcl
pop
sbb
xchg
fcoms
adc
jmp
jp
imul
repz
push
mov
scas
popf
mov
sub
cmpsb
lods
jp
adc
sbb
out
sbb
cmp
jno
dec
xchg
cmpsb
cmp
lret
mov
dec
int3
xchg
xor
jbe
adc
cmp
sbb
pop
push
nop
ret
mov
adc
sub
arpl
push
mov
call
add
mul
cmc
inc
cmp
enter
mov
or
pop
cmp
jnp
fisubs
inc
icebp
das
fidivrs
mov
xor
ljmp
nop
jnp
mov
or
fwait
lods
stc
sbb
and
out
inc
fs
cld
xlat
outsl
push
mov
add
xchg
sub
sbb
inc
lock
out
inc
fists
add
enter
mov
mov
and
loope
xchg
inc
and
jb
xlat
pop
sub
cmpsl
pop
out
lods
es
push
cwtl
add
mov
add
stos
pop
jbe
add
mov
mov
push
jns
add
push
push
pop
and
into
nop
aad
jle
aad
xchg
aas
add
xor
stos
mov
pushf
pop
inc
arpl
adc
cmp
push
lods
xchg
mov
add
dec
xlat
cmp
cli
add
mov
outsb
je
cmp
divb
sub
pop
mov
pushf
xchg
pop
adc
mov
and
iret
cs
xchg
loopne
inc
rorl
les
mov
jbe
out
mov
ss
cmp
pop
outsb
adc
cli
cmp
mov
adc
xchg
lea
lcall
mov
dec
mov
xor
adc
add
clc
es
testb
loopne
xor
bound
xor
out
push
cltd
mov
aaa
sub
push
push
pop
sub
mov
adc
add
xchg
outsb
jno
xor
leave
or
dec
mov
sub
sbb
in
lcall
std
cwtl
test
jb
mov
adc
das
jmp
inc
dec
cmp
xchg
scas
mov
mov
jmp
cwtl
mov
sub
pushf
add
pop
add
dec
movsb
inc
pop
xchg
aaa
pop
jle
insl
scas
je
pop
or
pop
sbb
ja
in
insb
dec
cwtl
cli
push
pop
fsubrl
mov
pushf
pop
adc
ret
push
jp
xor
add
xor
add
push
das
add
ret
adc
mov
out
adcl
fisubrs
or
xchg
xor
or
add
outsl
sbb
sub
in
outsb
mov
out
or
cmpsl
add
movsb
cld
pop
or
inc
lcall
int3
test
push
nop
jecxz
je
popf
cwtl
push
loope
xlat
mov
das
mov
sarl
ja
sub
and
in
xchg
push
rcrb
mov
jmp
pop
sbb
xchg
dec
sub
out
sub
sub
lret
inc
mov
imul
jb
inc
fistps
arpl
subl
add
testl
ds
out
push
and
pop
lret
xorps
ret
sbb
ljmp
jne
cs
push
fiadds
xor
addb
sub
jmp
mov
add
int3
iret
push
cli
cwtl
dec
cmp
dec
sahf
fs
pop
fcomp
int
mov
mov
mov
lahf
jp
sbb
or
mov
test
inc
add
movsb
orl
cmpsb
mov
inc
mulb
jno
cmp
xor
pop
add
pop
loopne
stc
jmp
pop
js
push
seto
ljmp
into
pop
inc
insl
pop
xchg
push
jae
or
divl
ret
mov
sub
rcrl
mov
inc
cmpsl
push
pop
cli
daa
lcall
xchg
mov
cltd
push
sti
lods
and
jge
xor
jmp
pop
dec
pop
add
xchg
adc
add
push
push
push
scas
fimull
push
push
fsubs
ret
sbb
popf
push
data16
stos
pushf
inc
lods
roll
shr
add
mov
or
push
mov
adc
mov
daa
sti
or
push
mov
push
in
pusha
jmp
xchg
jns
jb
pop
xor
inc
push
loop
imul
push
or
aas
jmp
in
pop
out
gs
out
adc
repz
ret
push
repnz
cmp
and
pop
pop
jl
ret
add
testl
test
sub
sahf
pop
xchg
mov
orl
pop
sbb
adc
lea
add
popa
add
sub
test
divl
jmp
jp
adc
pushf
adc
popf
pop
push
in
pop
cmp
aad
inc
insb
and
push
mov
pop
ret
mov
xchg
shlb
and
add
movsl
push
push
mov
jmp
daa
sub
mov
lock
mov
push
add
lcall
gs
add
add
imul
jg
popf
inc
xchg
cld
sbb
lcall
pop
pop
data16
leave
inc
push
cmpsb
loope
notb
jbe
pop
sbbl
in
sub
ss
dec
jl
shll
cmp
jmp
pop
push
xchg
gs
outsl
mov
push
aam
add
stc
push
or
pop
cs
imul
icebp
jmp
inc
xchg
pop
push
mov
pop
add
adc
dec
cmp
inc
mov
sbb
mov
adc
cli
cmp
or
imul
push
mov
push
pop
mov
out
mov
mov
jge
dec
aaa
loop
pop
sbb
pop
mov
dec
aad
fisttps
aad
insb
mov
or
loope
and
pop
sub
and
sub
cli
lea
mov
fdivl
jns
sbb
fs
aad
les
pop
das
mov
loope
cmp
inc
in
test
pop
je
add
clc
orb
push
insb
jbe
mov
mov
hlt
pop
push
orb
inc
add
push
mov
push
pusha
jle
out
push
add
testl
insb
scas
outsl
imul
and
loop
pop
pop
sbb
std
inc
pop
mov
add
push
or
push
mov
fcmove
inc
push
scas
pushf
mov
stc
or
int3
stc
xchg
and
lock
and
nop
shll
loop
inc
xor
jmp
mov
xor
subb
data16
mul
and
mov
cmp
dec
xchg
outsb
push
and
adcl
mov
int3
loope
xor
jae
insb
adc
and
idivb
dec
call
pop
push
add
pop
add
inc
xchg
mov
aad
xorl
jb
sub
rcrl
aam
or
shl
rclb
inc
addr16
mov
stos
cmp
sub
data16
fisubrl
ljmp
cmp
or
xor
sub
adc
pop
xor
imul
pop
push
push
or
xor
sub
push
pop
loopne
adc
add
mov
imul
pop
cmp
jmp
or
jae
push
xchg
rcr
mov
pop
push
cmpsb
xor
jl
mov
mov
and
std
repnz
loop
aad
shl
mov
lods
das
bound
jmp
or
mov
leave
sbb
pop
sub
push
xor
push
jmp
ljmp
inc
add
pop
sbb
call
enter
mov
push
xorb
not
cli
and
xchg
insb
into
xor
push
jge
add
fcmovbe
sbb
movsl
xchg
xor
in
outsl
or
loop
jne
and
shll
movsl
jmp
mov
xchg
mov
fnstcw
and
jne
push
std
push
in
lcall
popf
jae
mov
test
mov
ftst
mov
jnp
xor
aad
inc
ret
pop
lods
push
loopne
out
lods
shl
or
or
mov
es
adc
rdtsc
jecxz
neg
pusha
stos
jne
ret
pop
les
adc
adc
je
es
ds
add
push
inc
cli
push
shll
push
add
push
testb
or
jmp
push
xchg
pop
mov
adc
mov
ljmp
psraw
add
in
or
push
add
out
mov
idivl
and
mov
sub
pop
fmull
out
enter
outsb
popf
xor
ret
push
mov
mov
mov
mov
pusha
mov
lahf
sub
insl
fs
cmp
ljmp
jno
xor
fdiv
sub
daa
into
dec
loopne
and
stos
andb
push
mov
mov
mov
or
push
das
dec
lea
add
popf
test
or
sbb
push
pusha
imul
and
adc
fs
dec
std
xchg
rcrl
push
cmp
sbb
subl
shl
dec
cmp
push
std
jae
sarb
pop
mov
jecxz
lahf
mov
mov
xchg
jns
mov
adc
mov
mov
shr
popa
cmc
push
outsl
mov
mov
or
mov
mov
push
mov
je
les
dec
bound
repz
clc
js
jp
sub
fmuls
mov
outsb
mov
inc
mov
add
or
test
jne
xorb
sarl
stc
nop
sbb
js
jbe
push
daa
aaa
push
mov
test
push
stos
sub
mov
aas
jmp
inc
cli
pop
inc
loope
repnz
popf
shll
aad
and
in
jnp
sahf
ljmp
inc
jp
dec
mov
leave
inc
add
pop
mov
lock
cs
or
sbb
push
push
mov
lret
adc
mov
std
dec
lcall
adc
ds
push
xchg
into
mov
add
out
push
dec
sbb
cmp
int
xchg
pop
popf
or
add
sub
mov
push
pushf
jmp
roll
lods
in
divl
movlps
xchg
sbb
xchg
lods
hlt
dec
xor
xorb
scas
jo
rcrb
or
push
push
xlat
adc
pop
shr
daa
xor
jo
mov
adc
popa
lret
add
aam
or
mov
pusha
and
orl
inc
sub
pop
das
shll
out
adc
xchg
pushf
mov
not
xor
or
mov
add
fsubs
mov
cwtl
mov
imul
mov
test
add
dec
cmp
push
icebp
mov
xlat
cmp
dec
cmp
pop
es
dec
sbb
stos
jg
dec
fisubl
and
aas
pop
push
push
jnp
push
test
inc
jmp
mov
imul
cmp
call
shrb
gs
fsts
push
inc
movsl
test
lcall
add
push
push
xor
xchg
popf
pop
or
stc
lcall
call
pop
xchg
inc
daa
shrb
mov
inc
or
call
test
ret
das
pop
test
sahf
xchg
or
and
pop
mov
pusha
fs
lret
add
xor
add
mov
into
sub
add
je
inc
mov
sbb
or
push
call
ret
push
mov
push
fiaddl
add
jp
repz
or
clc
add
add
xchg
fcomps
xchg
add
push
shl
dec
pop
shlb
fstpl
add
fs
pop
or
sbb
pop
inc
add
mov
pop
in
stc
pushf
mov
nop
rorl
and
or
and
and
xor
cwtl
pop
js
push
jmp
scas
add
cs
dec
dec
shr
mov
add
mov
add
and
mov
cmp
mov
addr16
dec
fidivrs
xchg
lods
adc
sub
les
test
adc
jg
aam
push
mov
pop
mov
jmp
leave
fnsave
jnp
cmp
xor
dec
pop
adc
test
repnz
lea
mov
mov
insl
ja
cs
cmp
shl
mov
movsb
or
adc
add
xor
xlat
jns
push
adc
fnsave
inc
sub
cmp
add
mulb
mov
sub
test
mov
inc
ja
add
out
loop
jmp
adc
jmp
fcoml
or
enter
or
lea
nop
adcb
push
sbb
inc
inc
cld
sub
nop
fs
outsb
xor
dec
sbb
lods
hlt
sbb
fmull
xchg
and
sub
mov
dec
ret
add
inc
lahf
pop
data16
push
pop
push
sub
shl
xchg
add
add
xor
bound
inc
adc
mov
adc
push
lds
add
aas
inc
fwait
out
test
pop
add
jbe
lods
hlt
sti
pop
jmp
pop
add
or
inc
and
dec
jg
sub
lahf
sarl
mov
push
mov
push
xor
ds
addb
inc
mov
mov
xchg
sub
subb
xor
add
mov
jmp
dec
js
test
notb
inc
add
ja
jl
xor
inc
cmpsl
negl
imul
adc
add
xor
mov
pop
arpl
cmp
lods
jg
lcall
xorl
mov
pop
sub
push
pop
js
jno
mov
mul
pop
jp
jmp
clc
movsb
loop
sarl
ljmp
loop
inc
sbb
ret
push
aad
mov
sub
fistps
popf
loop
jg
sub
fnstenv
inc
dec
push
xchg
es
pop
mov
xchg
imul
and
les
mov
sbb
pop
push
push
push
sub
lea
xor
lods
adc
inc
xchg
fidivrl
in
repz
cmc
shrb
bound
and
orl
jge
icebp
gs
lods
insb
aad
xchg
adc
cmc
or
fidivrl
rcll
pop
sub
adc
in
leave
cmp
je
sub
stc
pop
aaa
sub
xor
popa
out
inc
orb
jmp
cmc
jle
loop
cwtl
mov
pop
mov
pop
inc
ds
lahf
and
sar
shrb
das
popf
jns
xchg
shl
sbb
inc
sub
gs
adc
inc
fnstenv
jmp
nop
or
jbe
testb
data16
ret
test
in
lea
fsubrp
push
inc
xor
jl
and
aaa
mov
or
xor
jo
dec
jmp
push
jmp
cmpsb
addb
pop
push
push
xchg
pop
mov
add
pusha
push
pop
push
and
adc
in
jb
in
fnstsw
add
or
jmp
adc
mov
sub
fdivl
or
sar
mov
mov
repz
ds
cmp
insl
stos
add
sbb
sarb
xchg
pop
pop
mov
xor
pop
loop
imul
add
out
push
shll
cmpl
cvtps2pi
jno
insb
adc
and
or
subb
push
pusha
jne
jecxz
push
jmp
adc
sub
or
lahf
insb
mov
push
jl
push
repz
pop
pop
divb
adc
sub
jmp
arpl
addl
movsl
nop
cmp
add
sbb
dec
sti
pop
in
mov
dec
inc
mov
cs
mov
ret
jmp
mov
push
addl
xor
add
sbb
addr16
jp
jmp
xor
mov
xor
lds
arpl
sbb
jbe
bound
sbb
stc
outsl
jmp
rcr
push
sub
add
psubb
stos
cltd
add
pop
cli
and
cmpb
push
es
insl
repnz
add
cmp
call
mov
mov
sbbb
mov
xchg
je
call
xor
mov
lods
jmp
or
adc
dec
pop
test
pop
or
imull
push
mov
cli
jge
sub
je
subb
pop
enter
shlb
add
jno
or
inc
pop
pop
jmp
jno
inc
mov
push
dec
add
out
dec
push
sbb
pop
mov
ret
cmc
adc
add
adc
imul
iret
mov
fdivp
xchg
lods
fimuls
and
and
mov
xchg
adc
xchg
lock
cmp
xlat
daa
sub
cmp
pop
or
xor
pop
and
push
jp
shrb
mov
and
jle
xadd
add
mov
push
pop
cld
test
int3
pop
add
push
stc
adc
jae
pop
in
or
mov
xchg
mov
insb
push
push
push
mov
mov
push
mov
push
cmp
add
cwtl
dec
jne
mov
cmp
call
mov
dec
mov
and
xor
arpl
dec
dec
cwtl
push
ljmp
push
testb
push
rcll
jg
push
cmp
or
jge
or
das
dec
insb
repz
push
pop
inc
mov
jmp
sbb
test
loop
out
repnz
mov
add
push
jo
out
or
and
pop
and
iret
mov
repz
lds
or
mov
add
gs
cmpb
xchg
xchg
push
inc
mov
dec
lcall
scas
lret
pop
vminpd
push
cli
cs
out
or
push
push
mov
mov
sub
pop
inc
repz
jge
push
mov
add
cmovs
int3
mov
popf
shl
adc
pop
mov
inc
mov
push
ret
add
scas
jo
push
and
cmp
mov
sbbl
cld
mov
jmp
mov
mull
ffree
mov
jae
ret
pop
mov
jmp
jbe
pop
andb
std
add
sub
inc
and
and
add
or
cmpsb
and
adc
add
stos
jb
pusha
leave
jmp
pop
dec
pop
mov
mov
adcb
sub
mov
imul
mov
push
inc
rcll
in
xchg
dec
sbb
pop
sub
ret
jp
sub
mov
stos
les
push
pusha
mov
pop
add
add
jmp
stos
sbbl
les
lods
dec
mov
push
jge
mov
add
push
cs
shll
pop
pop
pop
inc
push
and
sub
jl
and
rolb
add
xchg
push
jmp
xor
sti
inc
cs
stc
adc
scas
sbb
push
das
not
jge
pop
sbb
out
sub
jae
push
das
cltd
lds
ret
mov
cmp
std
in
xchg
and
lahf
or
outsb
xor
xchg
in
icebp
mov
jmp
iret
in
mov
mov
lods
lods
rcrb
pop
fiadds
fbld
insb
mov
sbb
clc
movsb
ficoms
dec
das
pop
repnz
adc
sbb
ja
orl
clc
jecxz
fsubs
mov
inc
iret
rcl
xchg
mov
inc
stos
xor
pushf
fnsave
or
xor
dec
je
cmc
push
inc
pop
mov
out
test
adc
xor
sbbl
xchg
jle
inc
stos
adc
lahf
nop
faddl
or
dec
cld
lds
ret
mov
push
jmp
xchg
or
loopne
adc
adc
cmpsb
push
sti
cwtl
in
sub
adc
scas
scas
push
insb
scas
mov
pop
add
push
and
mov
sub
cwtl
cmc
in
cmc
and
jns
popa
mov
jnp
cld
repz
ja
jne
mov
popf
push
sub
push
in
jnp
add
or
out
push
sti
loopne
ss
pop
sarb
or
and
mov
jl
dec
int
sub
mov
ret
sbb
jg
xorb
enter
push
push
inc
mov
test
mov
leave
or
subb
stc
xchg
jg
dec
mov
mov
pop
cmc
inc
push
sbb
fucomp
aas
jmp
paddb
sbb
add
mov
sub
cli
mov
push
jmp
cltd
das
jns
test
out
add
jp
cmp
add
ret
push
js
dec
cld
ds
cli
outsb
push
pop
push
xor
test
sbb
or
ljmp
movsl
mov
cltd
inc
jns
cmc
inc
daa
sub
xor
data16
lds
jl
push
pop
and
mov
push
sub
xchg
jns
push
jmp
pop
push
jo
push
andl
xor
shrl
test
into
dec
mov
pop
mov
fildl
jle
add
push
and
in
out
sbb
pop
cmp
xchg
sarl
out
aas
imul
or
movhps
stos
sub
ret
mov
lahf
pop
out
jae
shl
push
jmp
inc
xor
adc
orb
iret
inc
xchg
xchg
call
inc
aad
cmp
cmpsl
or
incb
mov
pusha
sbb
push
cmp
mov
fldcw
cmp
scas
mov
scas
test
cmpsb
test
inc
andl
or
inc
cmp
xor
stos
push
idivb
je
add
add
outsb
mov
xchg
mov
xor
inc
incb
out
add
mov
dec
xor
outsb
adc
add
icebp
jae
inc
push
sub
repnz
or
loopne
push
or
repz
mov
ret
in
push
jo
sbb
xchg
cld
inc
and
pusha
xor
scas
sbb
daa
ja
xchg
jle
and
rorb
inc
rclb
jmp
bnd
pop
icebp
cli
jp
jmp
xchg
into
cmpsb
mov
sbb
fxch
mov
cld
cwtl
mov
in
jae
cmc
inc
inc
loopne
jle
and
add
out
popa
lea
adc
pop
jge
test
xor
test
in
pusha
cmp
out
daa
push
add
aam
jb
jp
lahf
push
orb
push
mov
or
stc
mov
lods
xchg
lods
sahf
xchg
jne
inc
pop
mov
cli
test
rorb
mov
dec
push
mov
add
adc
and
push
xor
add
addr16
mov
mov
xchg
dec
and
ret
push
pop
adc
mov
movsb
inc
nop
mov
cmp
rcl
shrb
and
lret
push
sarb
jnp
mov
fwait
sbb
mov
iret
pop
inc
cmpsb
inc
jp
out
push
adc
pop
sub
test
jl
neg
scas
aam
rolb
or
mov
lret
xchg
pop
fmull
shl
and
fwait
mov
cld
cmc
aad
mov
push
ret
inc
pop
dec
mov
clc
jecxz
clc
xlat
or
xchg
inc
insw
dec
push
cmpsb
xchg
push
inc
repz
push
fdivp
es
add
xchg
jge
call
xchg
into
aam
and
pusha
daa
ds
pop
aam
les
outsb
mov
xlat
cli
jno
out
jecxz
dec
sub
jmp
sbb
icebp
repz
jo
adc
jl
out
adc
inc
mov
stos
pop
jbe
push
sub
mov
mov
lret
and
not
arpl
push
add
cmc
and
filds
repz
add
inc
not
shl
loop
push
mov
push
xchg
outsb
xchg
dec
jecxz
fsubl
sub
jl
les
dec
and
stos
sbb
cld
and
xor
mov
into
pop
cmpsl
andb
pop
xchg
scas
rol
lods
cld
call
mov
rcrl
movsbw
inc
and
jmp
xor
in
sbb
push
adc
sub
cld
lods
je
jmp
jnp
or
stc
imul
iret
push
inc
jmp
lock
arpl
pop
and
push
or
cmp
push
inc
movups
add
ja
mov
mov
pop
enter
sub
lss
shlb
dec
add
or
xchg
xchg
not
rorb
jecxz
imul
adc
lods
push
rcll
lret
mov
int3
mov
mov
jbe
jl
andl
data16
and
pop
hlt
cld
pop
jmp
push
stos
and
int
adc
xor
xlat
sbb
mov
aas
jno
push
scas
nop
pop
jo
push
pop
arpl
mov
dec
add
mov
pop
and
mov
popl
adc
call
daa
xchg
je
xlat
aas
icebp
scas
mov
jecxz
mov
add
push
test
jmp
call
adc
addb
add
dec
mov
jb
movsb
in
loop
mov
sbb
jg,pn
out
pop
call
pop
out
cwtl
out
push
jo
xchg
and
jbe
out
in
mov
neg
inc
add
and
mov
pop
pop
sbb
xor
xlat
bound
push
je
jnp
and
clc
xchg
push
add
jle
mov
xor
lcall
jmp
pusha
cmpsl
subb
test
in
sub
or
inc
mov
mov
adc
bound
pop
xor
dec
jmp
jbe
mov
rcrl
nop
dec
add
lock
add
push
xchg
cwtl
pop
add
and
imul
sbb
push
add
and
jae
out
push
push
push
adcb
adc
adc
pusha
aas
loope
out
repz
pop
sub
nop
js
xor
dec
or
and
pop
and
sub
add
sbb
call
ds
aaa
or
hlt
inc
mov
adc
cmp
les
add
sbbb
mov
pop
cmc
gs
inc
pop
cli
test
sahf
pop
lds
lret
or
dec
jge
inc
dec
dec
push
add
lret
xor
jnp
test
aaa
add
roll
aas
inc
jnp
mov
jge
mov
xchg
andb
add
inc
cmpb
shl
add
xor
xor
pop
fadd
in
lret
dec
or
or
push
imul
out
adc
gs
shl
push
daa
test
lcall
adc
hlt
dec
hlt
shlb
add
jnp
insl
in
mov
adc
pop
push
mov
add
xchg
jmp
rcrl
push
loop
aad
shl
inc
push
and
push
jno
jp
xor
cmpsl
std
ret
popf
dec
daa
push
mov
pop
push
leave
adc
lods
pushf
fisubrl
icebp
outsl
repz
in
or
lahf
nop
adc
mov
adc
add
push
sub
jmp
js
loop
push
ds
imul
jbe
push
or
xchg
lret
jmp
mov
and
jb
addr16
xchg
test
xor
cs
das
iret
sti
pop
jae
push
arpl
add
sub
push
inc
hlt
in
divl
add
pop
mov
inc
mov
lods
pop
fdivs
daa
push
jno
jmp
pop
push
add
add
adc
add
adc
adc
rorl
pop
sbb
jmp
or
insb
add
imul
add
mov
and
out
push
inc
push
xor
pop
lock
loope
jno
jl
in
mov
add
jne
xor
enter
pop
sbb
sahf
or
cmp
sub
push
and
scas
hlt
sbbl
pop
jae
dec
pop
shlb
pusha
in
push
mov
orb
mov
pop
movd
sbb
add
jp
aas
nop
push
or
es
test
cmpsb
stc
push
sbb
outsl
lret
mov
push
arpl
in
mov
pop
dec
cmc
in
sahf
or
cld
aad
inc
xchg
jmp
and
daa
and
in
pushf
push
jmp
pop
dec
dec
or
lds
fldl
icebp
mov
mov
dec
fistpl
add
sub
xchg
sbbl
or
adc
ret
inc
mov
cmp
ret
mov
or
mov
addr16
cld
lods
in
push
pop
jge
push
push
int
add
out
add
dec
add
jmp
push
push
xor
add
xor
and
dec
jmp
into
outsb
jo
shl
into
push
add
data16
movb
cmc
inc
dec
jge
mov
mov
mov
cmp
jo
jnp
cmp
in
and
add
lods
push
mov
jge
add
add
and
arpl
loope
fidivs
jnp
in
cmp
nop
dec
add
xor
jmp
add
sub
push
mov
adc
rorl
xor
pop
jmp
sbb
push
cmp
adc
pop
sub
xchg
gs
movsl
stc
js
movsl
adc
and
mov
insb
loopne
mov
add
sbbb
std
pop
xor
pop
push
or
popf
aas
or
sbb
fiadds
mov
mov
outsl
inc
mov
fcmovne
push
inc
mov
aam
or
sub
adc
jno
les
push
push
in
ljmp
lea
cmp
mov
cli
adc
add
sub
add
dec
add
insl
bnd
pop
pop
and
mov
xor
or
xor
or
ss
sbb
mov
rcll
ret
filds
scas
add
adcl
mov
mov
jb
pop
jnp
or
pop
push
pop
cmp
adc
cmp
mov
sub
and
jmp
pop
xor
int3
popa
inc
mov
xchg
xor
push
scas
out
add
scas
add
pop
push
push
lock
ds
or
push
adc
mov
push
mov
jmp
jae
mov
xor
add
das
sbb
xchg
pop
cld
loop
pop
ror
and
sub
or
adc
loopne
dec
add
fiaddl
pop
loop
mov
inc
jo
push
clc
pusha
mov
and
push
push
push
jb
add
dec
adc
and
lods
in
pop
inc
sti
sbbl
nop
je
nop
sub
fdivrl
sub
cmp
out
inc
mov
add
pushf
rclb
xor
imul
mov
jmp
push
mov
dec
ja
not
inc
popa
repz
js
xchg
loopne
sub
mov
cmp
icebp
jl
or
inc
sub
fdivl
push
dec
jl
xor
xchg
aas
test
addl
sbb
mov
scas
test
mov
ja,pn
ret
push
push
and
fisttpl
repz
nop
adc
fcoms
rcrl
push
ss
pusha
adc
push
and
not
sub
loopne
cmp
rclb
jp
ja
hlt
xchg
stos
test
and
inc
aas
xchg
and
push
cmp
pop
jl
xor
xorb
adc
loop
inc
push
or
mov
mov
inc
add
cmp
lcall
add
cmp
mov
mov
movl
xchg
inc
nop
inc
or
sbb
pop
sub
jmp
imul
fisubs
or
and
dec
das
add
jbe
js
mov
xor
sarl
out
push
push
mov
adc
mov
mov
ja
and
cmpsl
inc
sub
scas
jne
or
mov
into
mov
push
mov
popf
rcrb
add
xor
sbb
pop
cld
jne
std
sub
push
int
pop
add
pop
cld
stc
imul
mov
pop
sti
lock
sub
aaa
shr
jno
cmp
cld
cs
fisubl
out
pop
lahf
dec
mov
push
dec
subb
in
les
or
add
jmp
or
ret
pop
ljmp
nop
sbb
sbb
mov
cltd
lods
or
insb
daa
call
cli
xor
push
loop
mov
notl
das
inc
rorl
inc
cltd
popf
dec
mov
sarb
sub
mov
xchg
xchg
fadds
leave
push
push
mov
loope
mov
jb
xorl
push
jno
pop
lds
mov
push
inc
jmp
inc
ljmp
in
push
aas
mov
subl
cmp
rolb
jg
leave
mov
js
sbb
sbb
push
pop
subl
push
xchg
das
mov
lret
add
mov
lock
sbb
adc
int3
push
imul
faddp
cmp
pop
pop
push
das
push
push
pop
push
lock
cwtl
imul
pushf
xor
adc
mov
mov
sub
mov
aas
fiadds
pop
iret
mov
leave
and
rol
push
aad
popa
push
pop
les
and
pop
addl
add
push
fidivrl
sbb
add
sbb
xchg
std
lds
xchg
push
ja
or
jmp
or
insl
scas
jbe
repnz
repnz
xchg
add
sub
add
enter
mov
lret
push
xor
sub
andb
adc
sub
push
sbb
test
out
sbb
jmp
pop
fwait
sar
mov
cmc
add
push
lcall
add
push
push
mov
scas
jmp
or
pop
sub
jg
cld
mov
and
pop
negb
int3
add
sbbb
imul
push
sub
jg
inc
adc
add
sub
sub
call
add
rorl
imul
push
push
daa
cli
push
or
or
gs
sbb
mov
loope
movsb
and
jmp
jo
adc
pop
cmp
inc
loope
and
push
pushf
xchg
stc
or
mov
pop
or
xchg
insb
add
xchg
aam
popa
mov
adc
lret
xchg
jge
arpl
imul
and
xchg
jle
bnd
adcl
push
push
aas
repnz
out
adc
and
cmp
pop
push
sub
jge
pop
xchg
push
popf
hlt
inc
std
mov
or
push
dec
imul
addr16
push
nop
divb
notl
push
jno
sub
xor
scas
and
jmp
cmpb
sbb
mov
int
pop
in
push
cld
inc
imul
push
shl
and
xor
add
add
adc
iret
add
movsl
or
jmp
sub
mov
scas
insb
push
lahf
iret
push
es
push
sbb
mov
dec
xchg
mov
hlt
push
mov
cmp
daa
pop
out
lds
jne
inc
add
setb
cmp
jle
popa
neg
je
mov
push
mov
pop
dec
xor
and
xor
mov
call
dec
data16
shlb
fimuls
sub
popf
push
sub
adc
or
xor
hlt
sub
inc
out
lahf
and
or
fwait
lret
icebp
flds
into
and
mov
mov
jmp
clc
xchg
push
clc
cmpsl
mov
jnp
in
nop
cmp
push
pop
mov
test
xchg
clc
imul
mov
pop
insb
jecxz
shrb
cld
lods
adc
sti
sbb
inc
hlt
jbe
pop
and
mov
jmp
lods
or
adc
mov
push
and
mov
ja
push
fisubs
sbb
dec
xchg
out
sub
mov
pop
enter
rclb
mov
dec
jmp
mov
rcr
dec
add
pop
pop
not
inc
push
leave
das
push
inc
inc
add
and
add
mov
sbb
xor
cmp
lret
cs
push
mov
cmp
sbb
pop
or
aad
mov
add
cmp
add
or
mov
bound
pop
cmpsb
pop
or
pop
xor
pusha
rclb
xchg
adcl
mov
ficomps
bound
aad
out
cmpsl
fsubl
inc
rorb
inc
lret
add
sub
jmp
pop
jbe
bound
cs
or
pusha
or
repz
in
xchg
or
sahf
idivb
addl
ja
iret
mov
mov
inc
pop
out
push
aad
push
pop
fs
mov
sub
test
or
add
shl
in
lcall
mov
bound
add
mov
shl
or
and
daa
sbb
xchg
jg
data16
add
loop
lods
inc
push
fcomps
ret
or
mov
out
into
aas
call
xchg
mov
dec
inc
dec
cmp
push
push
test
dec
inc
enter
mov
mov
jns
mov
sahf
int3
inc
aam
mov
sub
mov
call
jne
sub
dec
ljmp
dec
dec
or
imul
sbb
xchg
call
adc
testb
xor
das
or
das
shr
loopne
and
sub
insb
pop
subb
movsb
adc
daa
int3
rcll
lahf
push
xorl
jle
jp
daa
push
js
sbb
sub
adc
or
pop
push
fidivrl
test
and
and
cmp
popf
add
xchg
jmp
mov
or
into
cltd
scas
inc
pop
push
push
push
sbb
inc
pop
neg
dec
mov
mov
xlat
jecxz
adc
dec
fisttps
mov
pushf
repz
rcll
imul
pop
cwtl
in
xchg
test
sbb
repz
in
sbb
jle
xchg
pop
test
cmp
aas
das
jecxz
sar
mov
roll
or
push
dec
cli
inc
daa
dec
xor
sub
mov
sub
loope
hlt
jge
ja
xor
and
loopne
jl
add
jmp
popa
sti
imul
je
mov
push
aam
cwtl
and
out
add
stc
addr16
mov
hlt
test
loopne
inc
and
imul
sub
jns
push
aad
popf
and
jmp
shl
and
xchg
sub
fldl2t
shl
jp
stc
sub
sub
jb
fisttps
std
push
dec
pop
in
adc
mov
neg
shl
xor
or
stos
cltd
aad
cmpl
adc
dec
mov
cmp
push
sbb
jl
dec
push
xchg
in
call
daa
and
inc
xor
push
mov
mov
xor
iret
inc
jmp
cmc
rol
jne
mov
pop
ret
lds
arpl
pop
stc
mov
or
sbb
mov
popa
push
cmc
jns
add
pop
pop
stc
pushf
xchg
push
xchg
pop
pop
mov
pusha
rcrb
add
arpl
prefetcht1
xchg
jle
mov
sub
pusha
add
cmp
pop
mov
and
add
add
inc
div
pop
adc
sahf
subb
fbstp
adc
xor
ljmp
addr16
rcrl
inc
fistpll
push
pop
les
mov
clc
mov
or
pop
mov
and
out
incb
ds
mov
fcoms
push
mov
push
sub
push
insb
in
dec
jmp
xlat
dec
repnz
jmp
ja
pop
cmp
pop
pop
rcl
aaa
icebp
and
fsubrs
icebp
loopne
or
in
inc
dec
dec
cmp
mov
or
rcrl
add
pop
mov
jae
dec
and
xor
or
scas
cmp
push
inc
xchg
movsl
xchg
das
lea
adc
lods
enter
and
loopne
sbb
aaa
pop
adc
cmp
fsub
and
xlat
push
imul
xor
dec
dec
add
pop
add
and
dec
xor
ds
gs
sub
push
mov
outsl
jmp
cltd
imul
xchg
insb
push
sub
ret
jmp
movsb
dec
out
push
sarl
cmc
roll
xor
fucomip
lret
mov
mov
xchg
pushf
nop
stos
sbb
js
fdivs
or
into
add
or
adc
inc
sub
dec
in
cld
psadbw
pop
inc
sub
insb
push
add
sub
int3
sar
inc
loope
sub
cmpsl
push
js
sub
jmp
pushf
stos
jl
mov
push
mov
sub
mov
test
adc
andb
dec
add
int3
not
lret
shlb
cmp
sarb
fisubrs
xor
popf
ljmp
jg
adc
or
inc
lods
jo
inc
sub
jmp
cmc
mov
xor
jne
sbb
imul
jl
add
insb
xlat
lods
mov
pusha
adc
inc
cmp
sbb
or
cvtps2pi
jg
scas
sub
cmp
rorl
sub
add
sub
push
cmpsb
mov
stc
cld
cmpsb
lret
or
jmp
jmp
shr
movsb
dec
dec
dec
sub
sbb
dec
stos
mov
rcrl
xchg
jae
aas
push
rcrl
or
ror
inc
or
loopne
push
add
adc
cltd
mov
je
rorb
or
fs
mov
mov
jmp
mov
movsb
xchg
add
mov
dec
cmp
add
xchg
push
test
jo
add
loopne
and
mov
sbb
or
and
jge
push
push
aaa
dec
divl
jb
outsl
pop
xor
jns
test
ss
cli
mov
mov
out
or
mov
push
add
ja
sub
pop
hlt
cmp
pop
push
add
mov
out
fadd
mov
jmp
pusha
sub
mov
push
js
test
inc
dec
pop
ret
push
cmp
inc
sub
pop
pop
fists
into
inc
push
jbe
xor
add
ret
or
mov
mov
hlt
inc
mov
push
test
jle
jae
int3
ret
pop
lcall
add
xor
rorb
add
ljmp
fnstcw
and
add
xor
out
pop
sub
sub
add
cltd
jmp
mov
mov
pop
cld
adc
inc
popf
cwtl
mov
sbb
ret
pop
and
scas
mov
ljmp
push
push
mov
lods
sbbb
enter
jbe
popf
gs
imul
jne
lds
lret
xorb
shlb
pop
jmp
pop
and
add
mov
xlat
push
adc
ret
mov
and
xchg
adc
ret
movsb
sub
es
inc
or
and
cmpb
or
push
push
les
push
add
inc
cmp
std
pop
push
bound
mov
cwtl
int3
fnstenv
std
in
xchg
loop
adcb
add
out
mov
add
insl
into
sub
xchg
fcmovnu
inc
pop
int3
sahf
leave
xchg
sbb
jle
lret
pop
imul
xor
daa
loop
mov
hlt
aam
adcl
pop
push
jne
ljmp
in
or
pop
scas
mov
sbbl
call
mov
mov
dec
and
imul
fs
mov
inc
sbb
shlb
and
fcoms
xor
out
pusha
cld
scas
cmp
rorl
aas
jb
andb
mov
mov
test
push
pop
pop
in
mov
ja
push
cmpb
ret
testb
outsl
jmp
int3
jp
dec
sub
leave
vpcmpeqw
clc
xchg
imul
dec
fstpl
push
scas
and
add
divb
lods
in
sub
daa
fildl
inc
pop
out
and
dec
sbb
dec
mov
test
cmpsl
xor
js
data16
and
jg
stc
jmp
ljmp
out
add
xor
pop
dec
push
dec
test
cmp
pop
loopne
out
rolb
xorb
push
pop
icebp
test
push
xchg
push
mov
jl
test
adc
jb
cmp
fstpl
push
dec
push
lcall
mov
pop
xor
stos
dec
subb
adc
push
mov
mov
sbb
jp
xor
add
dec
pop
jo
xor
pop
ret
push
imul
inc
xor
incb
jg
and
cmp
outsb
sub
jne
aam
out
jmp
clts
mov
or
jmp
inc
mov
mov
or
aam
jbe
ret
cwtl
lods
rcl
xor
outsb
cmp
arpl
aam
adc
adc
popa
push
push
and
sub
inc
imul
sahf
dec
nop
and
or
adc
daa
adc
into
test
sbb
shr
nop
in
xchg
ret
rclb
inc
std
or
rcrl
mov
nop
sub
adc
push
fisubl
test
pop
add
pop
mov
jmp
ret
mov
mov
mov
dec
add
and
cmp
pop
adc
cld
sub
dec
fstl
and
adc
sbbb
popf
adc
mov
jne
push
jl
push
push
das
leave
mov
adc
mov
mov
add
testb
in
sub
and
dec
pop
idiv
mov
clc
aad
cmp
mov
sub
out
je
stc
xchg
loope
jmp
fldcw
lret
sarl
outsb
sbb
cmp
adc
lods
inc
js
mov
push
mov
add
lret
xor
jmp
out
iret
sti
std
push
jmp
repz
sub
xlat
fsub
jl
xchg
adc
cmp
and
arpl
dec
pusha
fdivrp
cmp
cld
dec
sub
test
xlat
out
adc
push
mov
add
cmp
inc
xor
xor
ljmp
pop
and
icebp
push
add
push
pusha
mov
jne
jmp
or
sahf
or
dec
out
clc
push
push
mov
dec
xlat
mov
pop
push
lds
shlb
aaa
loope
add
pop
sbb
rcr
or
clc
jecxz
lock
cmp
add
push
mov
jno
pop
push
jmp
pop
sbb
popf
daa
adc
pushf
in
jmp
in
daa
cmp
sahf
push
push
jmp
ljmp
pop
loope
push
push
nop
sti
jae
xor
in
leave
push
cmp
add
push
sbb
jge
ds
stos
mulb
xor
int
jp
mov
mov
add
pusha
mov
incb
fdivr
inc
cmpsl
jo
pusha
push
out
or
pop
movsb
ljmp
data16
jmp
in
stos
push
mov
push
les
fimuls
jp
nop
bound
sub
icebp
and
js
pop
dec
addr16
rolb
jbe
cmp
in
sahf
xor
in
pop
push
imul
cmp
mov
mov
mov
add
cmpl
push
adc
sbb
pop
push
mov
cld
mov
push
inc
stc
mov
adc
int
cmpsb
sbb
ds
loope
cmp
mov
lock
cmp
push
cmpsl
inc
nop
cmp
inc
xor
sti
ret
sub
and
out
dec
sub
nop
dec
test
pop
pop
nop
mov
and
pop
loope
pop
sub
pop
push
mov
not
xor
jmp
push
mov
lds
push
and
adc
inc
mov
jmp
adc
lret
lret
dec
adc
add
scas
arpl
decl
dec
dec
mov
popf
mov
shrb
xor
inc
add
dec
push
out
sbbl
add
adcb
cmc
sbb
dec
fwait
das
mov
aas
lahf
inc
icebp
loope
mov
ffree
pusha
inc
stos
adc
or
cmp
ss
ror
outsb
cmpsb
push
in
sub
dec
xchg
lcall
and
push
and
pop
mov
insb
mov
inc
int3
aas
popa
cli
pop
add
rolb
stc
repnz
repnz
cmc
and
js
dec
jns
imul
repz
sbb
popf
mov
fucom
add
pop
leave
push
out
add
imull
add
sub
lods
xchg
add
mov
xor
pop
mov
add
push
or
mov
out
push
mov
push
jmp
rolb
jl
gs
test
sar
cld
xor
sub
stc
adc
jmp
cwtl
jg
repz
incb
add
sub
adc
subb
addr16
jmp
cmpsl
loopne
pop
push
addl
cmp
xor
mov
xor
out
add
negb
je
dec
inc
clc
mov
add
mov
std
jmp
add
push
xchg
out
dec
sub
je
arpl
fadds
ja
iret
hlt
popa
jne
aas
adc
lods
push
mov
cmp
dec
xlat
dec
push
fildll
lahf
push
fiaddl
pushf
add
lds
jl
dec
add
sti
stc
or
or
sbb
pop
sub
jbe
lds
leave
test
pushf
push
cld
jb
into
push
lods
cmp
mov
cmp
repnz
scas
and
add
fsubp
push
jecxz
aas
jle
cmpsb
xor
xchg
sub
cmc
adc
cmp
dec
adc
and
mov
pop
clc
int3
sbb
lock
and
in
pand
cld
shll
jp
pop
insl
pusha
dec
or
push
scas
imul
out
push
mov
pusha
adc
gs
mov
add
sub
cld
jne
stos
xor
fstps
xor
sbb
pop
jb
or
mov
scas
pushf
aad
in
add
pusha
les
jbe
xchg
or
clc
pop
loopne
pop
call
adc
fprem
loop
lcall
pop
sbb
cli
repnz
mov
mov
ds
adc
shrl
push
shll
loopne
mov
inc
repnz
daa
inc
xlat
pop
add
cmp
addr16
push
and
mov
mov
fs
jg
xchg
jbe
das
je
shrl
cmp
pop
rorb
notl
mov
inc
lds
push
dec
xlat
xchg
add
mov
and
ret
push
adc
mov
sub
add
xor
sub
pusha
aas
or
jne
mov
add
cmp
push
out
inc
sbb
popa
cs
xor
or
xor
in
or
lock
leave
jmp
jle
inc
cld
sub
lea
cmp
inc
mov
ret
mov
cmc
fnstcw
adc
pop
dec
shr
xchg
and
in
sub
jp
call
and
mov
mov
sbbl
xchg
rolb
push
jle
sub
imull
xor
shr
adcl
rcrl
and
pop
shr
add
in
jp
inc
mov
pop
pushf
xchg
or
in
imul
xchg
pop
movsl
inc
add
inc
addl
scas
aad
int3
sbb
dec
inc
pop
and
sahf
outsb
pop
add
sbb
repz
cmp
popa
insl
sbb
pusha
mov
push
pop
jne
hlt
adc
shl
add
and
cmpsl
insl
shr
push
outsl
mov
es
jns
add
cli
pop
xchg
mov
lods
mov
dec
not
pop
add
push
mov
dec
ja
ljmp
or
mov
jle
call
lcall
pop
and
ja
icebp
mov
std
xor
pop
push
loop
pusha
sti
scas
pusha
enter
add
jo
addb
ret
rcrl
mov
or
lea
or
push
out
inc
sub
aam
inc
and
push
add
xchg
or
jmp
es
mov
cmpsl
push
ja
xor
and
xchg
repz
fstl
popf
ror
outsl
in
pop
push
mov
add
pop
fdivrs
mov
jb
hlt
and
mov
lcall
daa
push
je
lret
jne
or
inc
push
push
xor
jl
nop
pop
sub
gs
pop
das
push
loopne
cwtl
dec
dec
push
add
movsl
ficompl
mov
push
cmp
dec
cmp
flds
test
pop
add
jo
add
sbb
jae
inc
sarl
cmc
inc
sbb
pop
xor
dec
adc
jne
dec
sub
lods
mov
sub
pop
xchg
add
add
and
push
aas
jp
inc
adc
jmp
movsl
cmp
loope
lahf
xchg
sbb
lcall
repnz
or
push
imul
inc
dec
add
xor
and
jne
pop
jge
sub
xchg
pop
xor
jmp
add
fwait
add
unpcklps
outsb
das
das
fisubs
push
enter
xor
adc
sub
pop
pop
push
push
in
or
jmp
mov
in
push
or
jle
or
xor
mov
inc
jp
in
or
loope
push
dec
jecxz
xchg
or
sub
punpcklbw
int
push
add
lahf
jae
mov
push
imul
out
scas
aam
push
jmp
push
cmp
inc
rolb
push
push
mov
jnp
loope
jbe
and
icebp
jb
dec
fists
jne
jbe
arpl
cli
lds
inc
fwait
add
xor
push
dec
rorb
xchg
negb
push
out
jns
pop
scas
xlat
imul
adc
fimull
cmp
out
mov
movsb
sbb
loopne
aaa
sub
stos
or
xor
or
js
nop
lahf
push
push
repnz
inc
adc
lret
rorl
jns
jbe
gs
out
dec
movsb
stos
adc
mov
paddw
lret
neg
cmp
addb
push
mov
cmpsb
faddl
hlt
xor
sub
jmp
lret
xor
imul
and
add
sub
add
mov
loop
pusha
lret
mov
push
shll
ja
adc
or
inc
and
or
inc
sbb
pop
dec
or
cmp
ret
or
xchg
pop
add
fdivs
scas
sub
push
xchg
push
or
pop
pop
adc
addb
fcompp
push
lea
cmc
inc
je
jo
lods
and
fidivrs
jg
pop
in
pop
mov
sub
pop
loope
in
repz
stos
push
fdiv
sbb
add
cmp
lods
or
mov
fwait
clc
jmp
sub
in
xchg
sbb
add
push
sti
insb
inc
out
dec
stos
dec
pop
ss
in
lods
hlt
or
fstl
scas
push
ss
and
lret
test
mov
or
add
push
mov
pop
jmp
jp
mov
mov
lea
pop
or
sub
popa
xor
mov
mov
cld
test
xchg
jne
in
xchg
add
push
sub
mov
pushf
aam
test
sahf
adc
subl
aas
push
pop
push
jb
in
pop
daa
inc
jo
shrb
or
iret
add
pop
push
jmp
xor
push
mov
adc
shrb
repnz
aaa
inc
sbb
scas
movsb
pop
daa
add
repz
mov
xor
lock
inc
mov
in
mov
pop
xor
loop
pop
or
loope
in
negl
or
aam
fs
xorb
adc
sti
inc
pop
fcomps
pop
push
iret
jl
add
ljmp
fldenv
add
test
adc
add
add
xor
test
cmpl
push
nop
mov
xchg
clc
cmp
add
and
negl
mov
es
outsl
mov
push
das
dec
out
clc
stos
lcall
aaa
or
inc
xchg
pop
sti
inc
push
xor
gs
shl
mov
push
and
jmp
rclb
mov
ret
sub
lea
cmc
push
cmc
mov
jmp
iret
fistl
mov
and
stc
out
adc
mov
jle
cld
adc
bound
or
movsl
add
add
jmp
movl
xchg
pop
dec
pop
xor
lods
cmpb
js
loopne
cmp
imul
cld
adc
push
or
mov
stos
mov
pusha
mov
andb
mov
addr16
pusha
pop
in
sbb
cs
inc
das
movsl
gs
mov
and
push
in
frstor
and
inc
mov
stos
fimuls
inc
repz
mov
call
add
mov
daa
push
ret
pop
adc
jle
push
push
inc
insb
push
adc
mov
adc
pop
cli
pop
out
sub
adcl
or
or
sub
xchg
push
stos
adc
dec
stos
js
js
ret
push
leave
dec
add
dec
ret
jno
das
jo
adc
cmc
aam
add
dec
sub
or
dec
fnstcw
cli
mov
mov
fcmovne
jmp
pop
cmp
mov
push
rolb
cmp
or
add
rclb
or
gs
aam
dec
pop
mov
shl
cmp
pop
and
loopne
es
or
les
jle
loopne
xchg
and
xor
cmp
mov
lods
and
xchg
fcoml
in
sbb
and
ja
push
adcb
out
add
mov
and
imul
sub
icebp
das
int3
pop
in
adcb
ret
cmp
adc
sub
add
imul
push
push
or
ja
or
clc
lret
jb
push
sti
inc
lret
add
jne
mov
inc
adc
es
and
shl
cmp
out
or
in
push
xor
fsubl
sbb
mov
cmc
xchg
push
rcr
incb
insl
loope
pop
cmp
sbb
cmp
aad
xchg
pop
ja
out
pop
aas
mov
sub
lock
push
add
xchg
jmp
lea
rclb
sub
icebp
cmp
iret
ljmp
outsl
xor
push
pop
testl
jne
fdivl
daa
or
inc
ret
add
mov
xor
lahf
aaa
push
inc
sub
enter
dec
pop
ret
dec
pop
mov
mov
ret
jmp
pop
push
rorl
shlb
push
leave
jns
pop
repnz
dec
xor
repz
inc
rcl
mov
fucomp
and
loop
dec
jne
push
fldcw
add
xor
or
adc
add
add
xchg
cmp
les
sub
adc
sub
js
jge
out
pop
or
xor
mov
sbb
rcll
pop
fists
sti
and
stc
mov
mov
icebp
cmp
loopne
mov
and
push
pop
jmp
pushf
insb
adc
or
add
sbb
xchg
fdivs
inc
push
sub
and
jmp
mov
dec
jno
popf
inc
cmc
jmp
cmp
mov
mov
sbb
pop
enter
sahf
test
shll
inc
ljmp
sub
mov
xchg
jecxz
imul
inc
pop
push
cmp
daa
jnp,pn
or
movsb
rolb
and
les
popf
icebp
pop
cmp
pop
cmc
pop
jnp
outsb
mov
test
or
or
add
popa
mov
call
data16
xchg
mov
sub
outsl
xor
subb
and
imul
add
outsb
dec
xor
sub
mov
outsb
inc
xchg
add
pop
stos
mov
jno
mov
in
pop
adc
inc
out
cmpb
lock
and
pop
add
mov
xor
and
lahf
cmpsl
jge
xchg
stos
mov
pop
mov
mov
or
sub
mov
jge
cmp
push
inc
lock
lds
bound
mov
xchg
fldl
out
pusha
cmp
arpl
orb
addr16
xor
lret
dec
sbb
negl
test
jmp
sub
pop
fdivrs
pop
push
xchg
es
sub
cmp
sub
call
imul
ret
in
lcall
js
xchg
sbb
xor
leave
pop
inc
flds
cmp
mov
pusha
in
jbe
inc
dec
mov
out
fs
sub
pop
pop
cli
sub
sub
sub
sbb
inc
fwait
test
or
adcb
push
xor
insb
mov
or
in
or
bound
fstl
orb
ss
inc
sti
aas
mov
pop
add
jl
imul
jp
sti
arpl
cmp
adc
cltd
or
icebp
xchg
cmpsl
sbb
xor
repnz
cmp
add
lahf
lock
jp
inc
push
mov
cmp
cltd
jmp
ljmp
ficoml
push
dec
inc
mov
jnp
and
jg
mov
jno
test
je
and
mov
cmpb
or
xchg
repnz
mov
adc
shrl
into
rorl
das
repz
xchg
or
loop
loopne
pop
push
xchg
sbb
inc
push
iret
dec
push
sarl
lret
mov
lods
push
ret
mov
mov
jmp
lret
rcrb
outsb
enter
fcoms
hlt
jmp
pop
xor
into
xor
add
and
push
leave
dec
stos
push
addl
pop
cmp
clc
sbb
mov
and
mov
xor
mov
push
mov
push
push
xchg
aas
iret
xchg
ss
and
inc
pop
mov
rol
and
pop
push
inc
orl
add
add
mov
or
or
dec
or
cli
cmp
and
es
push
enter
fcomps
sub
out
xchg
jp
cli
mov
sub
inc
push
and
cwtl
je
or
popa
scas
xor
sbb
dec
mov
adc
dec
pop
xor
std
inc
inc
adc
push
lret
xchg
inc
inc
add
lret
fcmovu
pop
xchg
mov
inc
divb
fisubs
sbbl
sbb
out
xor
fdivr
leave
pop
push
mov
in
imull
jne
icebp
insl
loopne
mov
add
push
scas
jg
stos
xchg
push
mov
fbld
mov
fstpt
dec
push
cmp
sub
and
mov
jb
jmp
xchg
xchg
mov
jb
adc
inc
outsl
inc
sub
mov
mov
clc
ds
inc
sub
jmp
cmpsb
adc
imul
xor
dec
stc
mov
xor
rorl
sbb
js
sub
iret
clc
sbbb
test
mov
lock
testl
jmp
mov
inc
cmpl
cmp
stos
and
mov
jp
lret
and
adc
test
subl
add
inc
jno
cmp
in
or
push
aam
insb
xchg
pop
shrb
jmp
mov
out
mov
jb
rorl
movsb
jb
std
dec
jg
jnp
inc
ds
jle
lods
xor
cld
jmp
push
jmp
sub
mov
icebp
nop
cmp
or
shrb
ret
push
or
xchg
cmpsl
in
sub
hlt
xchg
daa
mov
in
dec
inc
sbb
adc
aas
pop
jge
inc
and
subb
daa
adc
dec
adc
mov
jmp
mov
fldl2t
movsb
jmp
adcl
pop
inc
pop
insb
call
out
xor
push
rcll
fucom
inc
cs
or
and
and
int3
addl
lea
jnp
or
push
not
inc
inc
cmc
jns
add
push
jns
cld
repz
and
pop
jge
enter
call
sbb
add
cli
sbb
enter
sub
jmp
pop
push
fstpt
pop
dec
jne
sti
cmp
inc
or
dec
test
out
cmp
sub
xchg
popf
xchg
inc
push
add
hlt
cmp
push
mov
dec
or
and
sub
das
mov
pop
xchg
xor
jle
je
out
orps
inc
stos
insb
xor
cld
xchg
pop
xchg
mov
mov
push
ja
pop
pop
add
and
xchg
cmp
sbb
mov
ret
add
test
xor
sub
ds
je
adc
or
push
push
insl
lds
ret
push
bound
pop
inc
push
dec
mov
packssdw
and
mov
and
pop
fldenv
lret
js
insl
mov
shrb
xchg
rcll
inc
and
push
mov
repnz
pusha
sub
adc
xchg
dec
insl
and
mov
push
enter
sbb
loope
add
pusha
lcall
or
push
pop
pop
pop
call
insb
pop
pop
jl
jge
sahf
negl
or
or
lret
cmc
hlt
out
and
loopne
xchg
xor
lods
or
push
sbb
out
cmpsl
add
insb
sbb
loopne
pop
xor
mov
xchg
and
clc
jl
jb
into
ret
or
push
lds
lahf
popf
xchg
test
or
push
bound
push
call
mov
mov
movsl
and
ret
push
pop
sbbl
or
add
jmp
or
push
add
pop
inc
out
js
adc
cmc
addl
sbb
pop
pushf
xchg
inc
xchg
push
popf
fsubl
mov
jo
fcoml
js,pn
or
test
mov
outsb
dec
fcomip
adc
out
outsl
aam
shll
cld
outsb
jb
push
xchg
icebp
fmuls
popa
xor
loop
not
mov
lock
shl
sbb
push
mov
flds
call
add
mov
fisubl
je
aaa
fcmovnu
add
push
fistpll
and
mov
rorl
loopne
jno
js
xchg
movsb
sbb
leave
inc
pusha
add
and
xor
sbb
dec
pop
cmc
and
sbb
pop
jo
or
sub
mov
xchg
push
in
sub
jmp
add
sub
mov
loope
push
mov
mov
xor
sbb
xchg
cli
xchg
pop
xchg
pop
scas
lret
movsb
pop
es
lcall
pop
push
test
add
sub
vmovq
pop
mov
push
or
sub
or
dec
add
xor
sbb
shl
and
cmp
sub
mov
jno
gs
mov
les
ret
mov
adc
js
and
es
and
sub
loope
mov
lds
sub
pop
sub
xor
or
ljmp
rcrl
jg
inc
test
lds
mov
add
inc
jmp
xchg
lds
fcoml
nop
push
pop
lea
lret
or
add
push
jmp
adc
push
sbb
into
not
shl
jmp
mov
dec
adc
mov
daa
nop
ds
loop
jle
pop
js
dec
and
and
adc
push
add
pop
rorl
xor
enter
or
mov
lahf
push
inc
inc
cmc
pop
mov
mov
out
add
inc
push
add
pop
clc
and
mov
icebp
push
add
dec
jae
xchg
into
or
cmp
test
and
cltd
sub
cmc
adc
cld
cmpsb
xchg
repnz
sti
lds
push
sub
sti
push
push
adc
test
orl
push
cwtl
sbb
in
xor
mov
jmp
mov
inc
mov
jbe
mov
mov
daa
insl
out
xor
adc
mov
scas
xchg
js
xchg
push
jo
clc
jp
jmp
adc
jns
fcom
dec
jb
or
and
adc
or
lock
dec
dec
stc
sbb
cli
gs
pop
mov
cmp
mov
scas
jecxz
push
aam
or
repnz
fnstenv
jge
ljmp
cmp
ret
fldcw
call
mov
pop
pop
jmp
cmc
pop
dec
or
lahf
sahf
push
in
pusha
fdivl
ljmp
mov
es
mov
cmp
sbb
push
mov
mov
xchg
xchg
xor
xchg
xor
sub
std
or
flds
hlt
push
adc
mov
push
and
mov
cmc
out
out
adc
shlb
jle
xorb
xchg
inc
xchg
daa
mov
pop
or
sbb
das
adc
sbb
add
add
sbbl
adc
dec
jbe
int3
pop
inc
mov
dec
sarl
cmpb
sub
lahf
dec
adc
push
orb
rcll
cmpsl
lret
fnstenv
cwtl
sub
insl
out
mov
xchg
rorb
and
mov
jg
mov
cmp
lcall
dec
push
sar
xchg
adc
jnp
mov
subb
inc
jne
inc
inc
mov
mov
pop
push
jmp
pop
repz
mov
mov
jg
push
pop
adc
das
pop
sbbb
jecxz
sub
lret
push
sbb
mov
pusha
mov
adc
and
cmpb
sub
push
adc
das
stos
insl
cld
sbb
push
jbe
sbb
cmp
push
aad
orb
addb
fidivrl
int3
movsl
adc
aam
mov
push
call
sub
cli
cmpb
out
mov
dec
adc
xchg
add
test
xchg
adcb
add
pusha
inc
sarl
xor
outsl
push
adc
mov
sub
test
out
dec
jb
test
sbb
out
sub
push
mov
adc
xchg
or
add
and
jbe
in
pop
popf
cld
cwtl
dec
xor
aad
jb
xor
and
adc
inc
subb
out
sub
pop
jle
xor
mov
push
mov
daa
lea
dec
add
sub
xchg
mov
pop
inc
loope
sbb
dec
les
mov
adc
lds
sbbb
xchg
jg
push
and
sub
xchg
fldl
push
mov
dec
rorb
pop
adc
lret
scas
sub
dec
test
pop
divl
fistl
sub
js
xchg
loope
push
sub
lret
and
cmp
add
ret
add
popa
or
cli
jae
sub
pop
jmp
push
idivl
outsb
add
fstpl
in
insb
testl
mov
xchg
movsb
rcr
lods
mov
mov
pop
sbb
add
in
loope
or
or
mov
iret
cmp
cmp
cmpsl
xor
push
xchg
repnz
inc
int3
sub
push
popf
rcrb
or
push
add
stos
push
fsubr
pop
dec
inc
lcall
push
pop
xchg
imul
das
push
lret
into
les
jecxz
nop
fwait
and
loope
shrl
movb
ja
dec
ret
pop
lcall
or
and
subb
popf
dec
arpl
lock
ret
dec
addr16
jmp
or
jmp
inc
mov
and
imul
out
sbb
or
or
sbb
pop
lret
scas
insb
push
mov
sub
mov
xchg
and
jo
push
add
das
aam
add
xchg
jle
inc
pop
sbb
daa
hlt
js
add
add
pusha
add
loopne
popl
cmc
test
in
xchg
adc
xchg
rclb
jle
int3
inc
push
add
pusha
add
ret
aam
cli
ret
out
fucomip
int
push
rol
ss
add
repnz
gs
dec
jne
nop
das
push
ret
mov
std
daa
jnp
ret
call
mov
mov
pandn
sub
movsl
push
call
push
sub
sub
push
xchg
dec
xchg
add
jmp
lods
or
lcall
sub
add
repnz
cmp
sub
and
ljmp
jbe
push
pop
rol
inc
je
add
push
mov
inc
fucompp
mov
push
and
loope
cld
dec
in
sbb
lds
jmp
ret
push
push
imul
das
xchg
lahf
sub
push
push
mov
cli
aaa
pop
fcompl
pusha
addr16
inc
mov
and
out
push
add
sub
jmp
popf
ret
mov
adc
iret
sbb
int
pop
fadd
nop
adc
stos
adc
mov
popa
or
scas
push
fs
adc
adcb
push
sub
cld
inc
inc
adc
ljmp
in
rcrb
ret
out
sub
and
push
jge
out
or
mov
push
mov
push
aam
and
push
cmp
cli
sbb
mov
iret
aam
movsl
xchg
adc
sbb
mov
mov
dec
out
sub
jmp
std
in
sub
cmp
lods
add
add
addl
cmp
cmp
sbb
or
nop
adc
dec
test
mov
and
xlat
cmpsb
sub
enter
int3
sahf
pushf
dec
repnz
in
sbb
jo
pop
xchg
ja
mov
and
push
inc
push
sbb
or
cmc
ljmp
icebp
jg
pop
xchg
jno
adc
cmp
xor
cwtl
int
sub
adc
sub
decb
sbb
ficomps
jmp
jne
jae
insb
hlt
enter
cmp
pop
pusha
jmp
shll
push
or
lock
icebp
decl
push
sti
xor
imul
int
out
mov
aam
imul
inc
mov
xlat
loop
in
repz
imul
pop
push
fs
mov
pop
dec
push
test
pop
xor
hlt
rcl
jmp
es
scas
lret
rorl
popf
or
adc
inc
cli
sti
pop
aam
repz
push
repz
push
xor
lret
xchg
into
testl
xor
pop
sub
push
sbb
lock
lret
pop
dec
and
lock
enter
push
or
outsl
gs
push
mov
lods
cs
cmp
jo
or
inc
stos
adc
add
sub
add
lret
test
mov
jmp
mov
test
add
notb
mov
out
stos
cld
dec
sub
movsb
sbb
dec
cld
out
and
sbb
das
pop
dec
bound
push
aas
hlt
out
mov
cs
adcl
jae
sub
xlat
in
mov
mov
add
daa
imul
lock
test
dec
orb
jp
pop
xchg
mov
imul
scas
rol
pusha
pop
sbb
xchg
sbb
in
xor
loopne
pop
dec
xchg
ds
inc
sub
sbb
dec
pop
push
push
das
cld
jg
lea
inc
cmp
lods
sbb
add
repz
movsb
out
loop
dec
rolb
xor
aam
iret
adc
jg
aaa
adc
mov
cmp
mov
or
and
xchg
add
or
cmp
stc
sbb
adc
test
and
or
xchg
addb
push
mov
add
int
or
mov
push
into
or
pop
pusha
mov
adc
or
int
mov
add
adc
inc
aam
mov
xor
push
or
jns
and
xorl
pop
cld
push
addb
sti
push
sbb
lret
pop
mov
jns
push
out
add
and
xchg
dec
or
sub
cmp
loopne
enter
arpl
pusha
or
sarl
pop
inc
sbb
or
fildl
pop
push
add
push
subl
int
and
xor
scas
icebp
mov
pop
repz
js
xchg
les
push
sbb
test
or
sti
xor
les
cmp
add
adc
sub
push
or
ds
and
roll
nop
and
lcall
mov
mov
popf
adc
and
stc
sub
adc
adc
popf
adc
cmpsl
adc
les
mov
or
adc
jnp
and
into
or
out
loopne
addb
lds
add
cmpsb
mov
jecxz
jo
in
adc
adc
dec
dec
fadd
icebp
shrl
or
adc
arpl
mov
or
xchg
or
or
cmp
or
andl
aad
add
xchg
mov
xchg
adc
std
push
nop
mov
mov
xor
push
nop
outsb
inc
sbb
test
xor
adcb
cmp
add
movsb
lods
das
add
orb
icebp
push
and
mov
adc
xor
mov
add
icebp
mov
jp
and
and
bound
bound
cmp
add
pop
add
add
cld
call
mov
mov
cmp
inc
sub
add
adc
cmp
inc
popl
or
jne
sub
je
cmp
add
mov
rolb
mov
xor
sub
jl
and
add
jno
sub
push
push
aaa
add
or
pop
mov
icebp
ss
dec
inc
add
adc
hlt
stc
int
inc
jle
cmp
shl
test
inc
cmpsb
cmp
mov
imul
pop
adc
popa
xchg
sbb
clc
aas
mov
add
fndisi(8087
js
imul
mov
cli
and
dec
aam
pop
push
lret
and
sbb
or
push
pusha
lea
push
adc
mov
jbe
mov
imul
inc
inc
add
dec
mov
mov
pushf
stc
push
scas
std
sbb
sbb
xor
stc
sub
int
ds
xchg
add
ljmp
mov
mov
jo
sub
fisttps
jmp
pop
cli
lods
mov
xchg
test
imul
dec
out
sub
push
sub
sub
idiv
add
mov
sahf
popa
jae
aas
jne
lret
loope
xbegin
pusha
in
mov
xchg
hlt
push
mov
sub
jmp
dec
out
jnp
push
jmp
sub
sub
sbb
adc
mov
and
lret
jo
add
push
push
mov
mov
push
and
ljmp
rcrl
jmp
push
mov
fs
scas
popa
mov
pop
mov
push
add
lock
rcll
pop
ror
push
xor
outsl
lock
cmp
loop
jl
out
or
jnp
or
pusha
jg
add
sub
insb
jmp
jl
inc
dec
add
mov
or
pop
mov
pop
lds
jp
scas
or
push
pop
nop
jg
test
inc
sbb
inc
mov
jb
repz
icebp
imul
sti
enter
or
jg
xadd
add
xchg
mov
xchg
add
into
add
aaa
cwtl
outsl
int3
imul
sar
add
out
fucomip
ret
push
jp
testb
adc
and
clc
push
push
mov
scas
jmp
xchg
sbb
je
xchg
icebp
call
inc
mov
lret
xchg
xor
add
sub
lahf
rcll
push
xor
js
test
jmp
aad
ljmp
add
lcall
lret
shl
aas
or
mov
push
adc
ja
loop
xchg
jle
dec
jge
and
push
repnz
sbb
push
xchg
test
jge
sahf
test
dec
add
and
insl
lahf
out
pop
mov
dec
out
imul
inc
aam
adc
iret
sub
cmp
jge
lcall
cwtl
inc
inc
aaa
dec
push
xor
add
fisttps
dec
sbb
movsb
xor
lods
adc
fnstenv
inc
pop
out
daa
push
jae
pop
cmpsb
icebp
jge
add
push
leave
push
pop
repz
ret
pop
xchg
repz
adc
out
add
adc
sub
adc
pop
cwtl
in
jae,pt
inc
sbb
not
lock
sub
add
jmp
mov
push
push
push
popa
and
roll
movsl
jb
mov
and
movsb
or
std
les
or
pop
pop
push
movsl
pop
insl
dec
mov
leave
outsb
incl
rcrb
push
pop
cmc
inc
add
mov
or
push
adc
and
out
push
mov
fdivrl
mov
push
test
sub
jns
xchg
pop
cmpsl
in
stc
mov
pop
push
cltd
cmpl
roll
inc
sahf
lret
mov
repnz
sub
imul
inc
jmp
ret
js
cmp
push
pop
mov
push
mov
mov
int
aam
mov
add
mov
pop
call
jp
mov
push
nop
and
jo
sti
sbb
sbb
and
and
fucomi
adc
cmp
pusha
lods
xchg
shlb
mov
movsb
add
xor
push
jmp
test
xchg
or
test
and
jmp
std
ds
mov
adc
dec
mov
push
xchg
nop
dec
jge
adc
sahf
in
ljmp
jl
push
push
adc
push
add
imulb
push
and
and
push
xor
dec
fstps
test
xchg
add
sub
arpl
dec
jns
cmpsl
pop
jnp
and
xchg
lahf
bound
fwait
arpl
mov
loop
fisttpl
and
aam
mov
mov
sub
jno
add
fucomip
stos
push
cmp
daa
pop
push
mov
mov
les
leave
andb
outsl
in
jmp
ja
mov
jno
popf
arpl
mov
pusha
jp
sbb
enter
mov
out
xor
addr16
adc
mov
inc
mov
pop
push
clc
sar
decb
mov
out
pop
rsm
fwait
insl
and
mov
iret
dec
pop
int
out
lds
add
xor
enter
mov
inc
std
xor
sbb
lret
daa
or
fiadds
fcomps
out
pop
pop
pop
push
mov
inc
movsl
pusha
or
gs
push
or
pop
out
push
mov
pusha
in
add
mov
outsb
dec
jl
mov
pop
test
stos
pop
mov
sbb
pop
sbb
int3
out
adc
aas
cld
dec
and
lahf
add
xchg
inc
imul
pop
add
inc
push
pop
jnp
stos
bnd
ds
sub
sti
shlb
lods
xor
add
arpl
aas
mov
adc
lahf
add
inc
sbb
add
push
shr
popa
xchg
test
push
pop
lock
aad
jb
mov
push
pop
or
clc
xor
pop
rorl
jmp
test
push
mov
mov
icebp
in
sub
jno
mov
lods
ret
push
pop
in
cmpsb
and
jo
hlt
sbb
push
pop
pop
mov
inc
inc
lret
sub
imul
push
adc
jge
push
dec
cli
dec
insb
jbe
outsb
mov
and
pop
cmp
sub
mov
shrb
repnz
mov
jb
add
push
add
inc
cmp
ss
xor
pop
loop
pop
popa
int
dec
nop
pop
popf
outsb
jecxz
imul
or
mov
scas
dec
push
fstpl
jmp
xchg
stos
xchg
pop
fwait
mov
mov
movsb
add
jmp
cld
sbbb
movsl
imul
out
inc
fstl
push
xchg
subl
dec
ret
int
or
dec
cmp
cs
mov
aaa
cmpsb
jbe
hlt
pop
dec
out
xchg
pusha
push
sub
cli
mov
xor
clc
and
xor
subb
cmp
lcall
orb
jg
mov
out
sub
mov
add
xor
sti
adc
push
push
pop
pop
mov
addb
add
arpl
add
jns
adcb
jge
pop
dec
and
adc
sbb
sti
and
push
push
lds
cs
jmp
push
xor
js
ljmp
xchg
int
das
adc
sub
adc
lcall
rcrb
insl
js
ljmp
outsl
insb
jle
addr16
dec
rorl
insb
jg
pop
jmp
inc
dec
push
cmp
dec
stos
jge
sub
sarl
in
add
sub
jmp
add
add
js
cmpsl
push
inc
and
or
pop
sub
mov
xor
or
stos
cmpps
cmpb
adc
sbb
mov
sub
rorb
xor
xor
popa
pop
pop
jle
repnz
xchg
and
or
test
sarb
mov
inc
add
jle
rcrl
and
jecxz
addl
ret
sub
pop
cmp
pop
mov
int
test
mov
cmp
inc
xor
jg
lcall
and
sbb
push
cmp
xor
jmp
je
movsl
mov
adc
loopne
out
lret
add
mov
add
clc
pop
sub
push
sub
ret
pop
pop
xchg
add
xchg
inc
ret
push
push
mov
pop
inc
add
and
jmp
inc
jg
xor
adc
idivl
add
jmp
lcall
inc
pop
fwait
sub
xor
add
popa
cmp
inc
hlt
mov
or
and
das
mov
lock
fisubs
out
lcall
add
sub
fcom
orb
dec
daa
cmp
fisttpll
faddl
pop
pop
mov
add
add
push
xlat
pop
xlat
shll
add
lock
test
add
or
fsubrs
rcrb
mov
testb
scas
mov
xchg
mov
in
or
lods
std
ficomps
push
push
rclb
jne
in
test
repnz
rolb
push
xor
jmp
pop
in
mov
push
mov
lock
xor
lds
decl
bound
fnstcw
leave
adc
mov
jae
inc
jne
push
sub
mov
icebp
xchg
in
cli
mov
cli
sahf
int3
sahf
add
ljmp
pop
rorl
int
pop
mov
fstl
in
adc
pop
pop
sub
loope
xor
loope
sbb
rol
push
xor
jb
pop
fists
adc
or
pop
pop
adc
mov
fsubl
push
call
movsb
cmp
aad
and
push
cltd
test
fs
sbb
mov
pop
push
pop
leave
outsb
jge
sub
pop
pop
rcr
and
vmcall
push
push
and
mov
add
data16
mov
lods
and
push
mov
add
pop
mov
inc
push
fucomip
ds
xor
jno
mov
idivl
das
dec
jecxz
cltd
mov
add
subb
sbb
mov
mov
aas
mov
not
test
adc
test
adc
in
xchg
sub
imul
adc
push
and
sub
pop
imul
icebp
adc
scas
pop
xor
xchg
adc
test
sub
je
jmp
add
adc
or
cmc
shl
add
mov
sbbl
ljmp
add
repnz
and
add
enter
or
dec
cmp
sub
pop
imul
fists
or
pop
fisubs
sbb
pop
sub
or
jp
push
sbb
push
sub
sub
call
adc
icebp
iret
sub
cli
jecxz
pusha
push
adc
jns
outsl
sub
push
jmp
scas
test
in
mov
mov
iret
push
adcl
cmpsb
sub
jge
add
movsl
das
push
pop
mov
popf
test
pop
push
dec
jns
lods
je
dec
cld
add
adc
push
mov
push
movsl
dec
pop
dec
lahf
dec
sub
rorb
or
sub
ret
jbe
fistps
imul
stos
cwtl
stc
jo
mov
jbe
push
cmp
lock
push
sbb
or
popf
jg
add
fistl
mov
lods
dec
insl
pop
push
leave
cmp
dec
repz
or
dec
pop
inc
sbb
mov
jb
bound
add
pop
sub
dec
adc
pop
dec
inc
fs
addps
mov
cs
mov
lock
mov
and
stos
fistpll
enter
and
or
cmpsl
push
xchg
push
pop
ja
push
loope
pop
out
cmp
sbb
and
lock
mov
dec
enter
xlat
inc
xor
scas
sub
jmp
push
sbb
es
add
adc
or
pusha
fs
or
fidivl
xor
jg
sarl
in
ret
imul
stos
loope
test
push
fstl
mov
add
adc
cmp
sub
inc
add
jnp
push
pop
out
and
xchg
and
and
out
jmp
pop
add
fcmovu
clc
xchg
push
push
mov
push
gs
dec
fisubs
ljmp
inc
or
rcrb
pop
fldlg2
push
mov
mov
stos
and
out
les
jmp
mov
sub
and
push
scas
popf
idivb
hlt
or
lods
nop
fldl
cwtl
dec
or
push
std
stc
add
icebp
cmc
add
xchg
cmp
adc
xchg
push
jg
inc
nop
lcall
into
add
or
cmpsb
roll
aad
bound
or
push
mov
sub
pop
pop
movsl
out
or
push
cltd
sub
fisubrl
add
loop
repnz
dec
sbb
fsubl
jo
scas
aas
into
roll
jbe
test
out
pop
test
push
adc
js
jecxz
ss
in
pop
xchg
test
jp
cltd
xchg
inc
jl
pop
mov
ss
fsubl
sub
test
mov
push
rcll
rclb
pop
mov
loope
and
mov
sub
lods
addl
cmp
add
or
call
push
push
pop
cmovs
push
pop
les
pop
lods
fistpl
inc
jmp
lds
testl
inc
nop
cwtl
sub
inc
cmpsl
xor
mov
pop
cmp
stos
lods
repz
mov
push
mov
in
outsb
dec
imul
imul
lock
lds
xor
popf
or
mov
negl
and
xor
cmp
adc
stos
sbb
rolb
arpl
int3
mov
popa
cmp
sub
shlb
jmp
push
movsl
push
cwtl
enter
das
adc
xor
rclb
add
and
insb
addb
fnstcw
sbb
mov
jo
pop
gs
push
out
mov
nop
daa
push
xor
call
push
pop
pop
decl
lds
jbe
xchg
lock
xlat
add
xor
jge
cli
daa
add
sub
insl
mov
into
mov
jmp
lea
in
push
inc
cli
test
add
pop
and
test
popa
aaa
fwait
into
jns
adc
jae
dec
mov
push
sub
xchg
mov
cmp
ja
fstl
scas
ds
jo
xor
inc
popf
xchg
sub
mov
mov
pop
repnz
fbstp
imul
mov
mov
stc
add
push
std
cmc
out
mov
lcall
sub
insl
or
or
pop
xor
sub
xchg
jecxz
pop
movsl
std
popa
xchg
add
les
push
and
rclb
ja
push
stos
addr16
fcompl
add
adc
jg
fcomp
and
loope
sbb
repz
inc
mov
in
xchg
jo
push
mov
sbb
mov
pop
subb
pop
xor
mov
shll
xchg
out
fwait
inc
pop
sub
push
mov
pop
xchg
xchg
sbbl
aad
push
and
add
das
xchg
or
aaa
loope
enter
insb
sub
int
sub
sbb
push
add
push
sbb
sub
push
mov
lods
and
push
daa
stc
jae
aas
sbb
lret
repz
mov
mov
add
addl
sti
jb
fildll
sub
stc
mov
pop
sub
shrb
scas
mov
gs
mov
out
mov
xchg
iret
dec
out
nop
ret
or
push
jnp
repnz
sbb
mov
pop
fwait
sbb
pop
adc
les
aaa
pop
sbb
jge
cs
add
mov
push
fs
cs
int
out
cmp
lods
cmp
into
jmp
and
mov
or
pop
push
and
repnz
mov
cmp
divl
lods
mov
ret
push
pop
sub
add
mov
sub
or
adc
outsb
and
rorb
pop
fimull
jmp
nop
cmp
testl
pop
in
pusha
push
orb
inc
loope
jmp
xor
cld
inc
add
cli
jmp
outsb
pop
xchg
pop
mov
or
bound
pop
addr16
and
add
jbe
jnp,pn
pop
not
mov
repnz
cmp
aas
scas
mov
clc
ljmp
adc
mov
mov
pop
subb
cwtl
ljmp
xor
pop
lods
push
mov
clc
sub
add
cmp
mov
or
push
out
mov
fistpl
pusha
pop
inc
push
add
or
icebp
in
xor
jnp
pop
inc
pop
inc
in
sarb
leave
push
push
imul
pop
jbe
inc
js
outsb
jnp
outsl
cwtl
mov
push
and
roll
and
pop
xchg
loop
loopne
pop
mov
aad
movsl
cld
hlt
test
loop
cmpsl
das
sub
mov
push
loope
adc
nop
push
daa
pusha
mov
xor
push
dec
aad
and
add
in
and
clc
push
add
fisubrl
mov
add
dec
dec
ret
cmpsl
rolb
xor
nop
sbb
cmpsb
cltd
or
mov
fiaddl
pop
cwtl
aaa
push
mov
jp
es
lea
push
mov
push
pop
mov
nop
ljmp
xor
sub
cmp
push
loop
cmpsb
in
neg
pusha
int3
sub
cmp
shl
decb
add
pop
xchg
inc
push
add
or
call
cwtl
lret
jb
shll
lret
push
mov
shr
jno
leave
dec
nop
test
mov
jne
xor
xor
and
inc
xchg
jmp
pop
bound
sti
xorb
and
jle
cld
dec
adc
pop
and
shlb
in
mov
inc
add
adc
pop
pushf
dec
xchg
aam
or
add
and
ljmp
cwtl
add
sub
addr16
loope
add
pop
pop
or
push
mov
lcall
cmova
sbb
cmp
fcoml
push
pop
push
pusha
mov
xlat
adc
pop
popa
mov
ljmp
faddl
mov
lds
cmp
push
dec
test
xor
lods
jbe
jle
pop
cmc
jmp
mov
syscall
cmp
add
orl
int
mov
pop
clc
imul
pop
push
lds
leave
das
sub
pusha
pusha
or
loop
mov
or
das
adc
out
push
xor
and
adc
xor
fwait
test
push
stos
cmp
jmp
repnz
xor
fsub
pop
mov
adc
sub
stos
andb
aaa
mov
mov
imul
inc
not
scas
mov
out
or
or
popf
lock
or
push
data16
mov
not
inc
sarl
in
xchg
int3
les
ret
loope
cli
push
mov
call
cli
sbb
dec
add
subl
test
mov
mov
repnz
jmp
int
in
cmp
dec
pop
inc
fs
das
push
js
add
inc
jge
xor
jbe
adc
out
mov
sbb
cmp
jmp
adcl
push
jle
imull
cmpsb
push
icebp
mov
xor
inc
and
push
and
and
shll
sbb
gs
aas
pop
loopne
pop
mov
cmpl
xchg
je
adc
loope
sbb
ja
xchg
push
xchg
jl
addb
dec
xchg
pop
or
imul
sub
mov
add
jmp
int
sub
mov
or
pop
sbb
aaa
pop
in
lahf
add
add
fs
lods
lret
std
or
enter
in
js
inc
sar
mov
lret
repz
adc
adc
ret
add
dec
xchg
lea
mov
jnp
or
xchg
xor
ret
notb
add
and
xchg
jno
pop
loop
adc
mov
xchg
cld
or
push
sbb
pop
adc
and
xor
into
cmp
dec
stos
mov
mov
mov
es
fistpll
cli
repz
out
sub
add
insl
into
jle
test
or
push
bound
and
stos
mov
sub
jmp
shrb
in
xor
sub
add
add
jle
jmp
fsub
and
jg
sti
fsubp
sbb
js
in
mov
in
fld
add
adcb
sbb
or
shlb
shll
pusha
push
inc
inc
xor
dec
inc
jecxz
addl
pop
loopne
fistl
add
dec
in
loop
aad
mov
lea
pop
jmp
cmp
jbe
mov
aam
jae
mov
lcall
adc
imul
inc
in
xor
adc
mov
sub
xor
mov
or
add
and
pop
aaa
fisubl
xchg
dec
pop
shll
ret
lcall
addb
xor
in
mov
sub
mov
pop
jo
lcall
fwait
das
sub
js
inc
sbb
fnstsw
add
xor
cmp
add
jmp
bound
or
or
adc
cmpl
adc
sub
sbb
adc
sarl
sti
fcomp
gs
push
push
je
mov
jmp
push
push
mov
xor
ret
push
mov
and
leave
or
jnp
das
inc
cmpsl
jg
and
jle
pop
add
inc
xor
mov
push
adc
or
nop
call
shl
dec
jl
add
cmpsl
add
scas
popa
repz
icebp
add
call
out
in
and
push
xchg
mov
xor
lods
mov
xor
lret
gs
push
add
inc
iret
mov
add
out
jmp
push
jmp
lret
shlb
cmovle
pop
fs
std
sub
vmovntpd
pop
fs
shl
inc
repz
dec
sbb
shll
xor
xorl
and
dec
das
mov
gs
pop
sbb
inc
inc
daa
ja
loopne
icebp
push
add
movsl
or
jno
ds
push
mov
cmp
cmp
aad
fstpt
xor
push
aas
fnstcw
fmull
jg
jge
repnz
dec
or
inc
fidivrl
sbb
or
add
jo
mov
dec
dec
add
aas
int3
scas
mov
pop
dec
pop
test
push
in
sub
inc
into
jmp
cmp
or
mov
and
mov
and
or
inc
xchg
pusha
sub
push
cmc
cli
push
imul
jb
out
addb
fcoml
out
jo
mov
pop
sarb
pushf
into
xchg
sub
adc
cmpsl
or
mov
daa
and
pop
jge
push
enter
in
cmp
mov
sub
jp
sbb
fucomi
lret
dec
daa
ljmp
push
cmp
dec
jo
xchg
imul
jnp
jns
and
outsb
push
aas
and
pop
xor
add
jnp
sub
dec
push
je
movsb
push
push
rcr
push
xor
cmp
add
or
ficompl
jmp
mov
add
sbb
or
data16
loope
mov
dec
jae
jne
mov
shrb
and
loope
lret
pop
sub
jns
rcl
inc
stc
jge
js
sbb
insb
rcrb
cmp
or
data16
ljmp
xchg
pop
pop
jae
pop
mov
dec
push
push
or
adc
movb
ret
aad
add
repz
aaa
je
and
dec
dec
sbb
lock
scas
scas
push
jmp
dec
je
pusha
ds
data16
and
jg
xor
sub
jle
inc
pop
je
iret
movsb
mov
scas
fcomps
mov
xlat
lods
inc
push
add
add
sarl
and
cltd
add
call
in
lock
mov
inc
popa
push
push
inc
in
jle
rcll
jp
into
mov
xchg
in
push
out
loope
sbb
int
or
dec
cs
cmp
jle
enter
pop
push
push
push
xor
xor
pop
add
jnp
or
or
add
loope
mov
fcmovnb
jecxz
push
sub
cmp
into
xchg
push
dec
sub
sub
mov
loopne
mov
push
dec
std
sub
pop
pop
test
test
push
mov
inc
aas
js
mov
pop
rclb
xchg
and
and
add
fbstp
mov
jl
mov
into
out
mov
nop
mov
subl
lret
mov
or
enter
ja
popl
lret
or
fldenv
fisttps
stos
aam
pop
mov
cmp
xchg
fs
mov
ds
jmp
aad
push
dec
insb
mov
and
add
add
push
inc
add
ss
idiv
out
push
and
pusha
push
and
xchg
cmp
sbb
data16
jp
sbb
jns
nop
fdivrl
cmpsb
lret
ja
dec
sub
dec
xor
pop
call
outsl
mov
lret
jle
jne
and
pop
jmp
or
mov
ja
adc
pusha
jnp
inc
sbb
jge
xchg
and
push
pop
aas
loop
jbe
pop
loop
dec
pop
xlat
xchg
push
inc
dec
jecxz
rclb
xchg
pop
sbb
cli
outsb
or
jmp
aad
or
call
mov
stos
jmp
push
mov
daa
push
cmpsl
adc
or
cmc
fstpt
push
push
add
push
mov
adc
mov
inc
arpl
pop
adc
jecxz
adc
movsl
xchg
insb
nop
xchg
filds
xlat
or
pop
outsl
or
and
add
test
dec
mov
push
lea
sbb
mov
not
or
push
nop
sti
test
mov
das
int
loope
pop
and
lret
push
inc
add
mov
js
pop
pop
adcl
push
xchg
mov
push
jnp
and
pop
dec
pop
pop
pusha
mov
pop
push
iret
inc
movsb
in
mov
std
or
add
nop
xor
cmp
cwtl
push
xor
sub
mov
push
aad
dec
pop
cli
mov
jno
mov
cwtl
or
adc
or
fidivrs
pop
push
cmc
or
sbb
popa
xor
push
fwait
pop
dec
stos
sbb
cmc
push
sub
imul
add
inc
mov
add
rcrl
cld
push
pop
xor
shll
pop
add
imul
mov
leave
jge
inc
adc
sbb
pop
xchg
sbb
jl
and
pop
pop
pop
add
push
jne
stos
aas
push
mov
imul
mov
clc
pop
test
mov
fiadds
into
mov
jnp
cmpsb
push
add
bound
sub
loope
mov
dec
lret
sbb
pushf
dec
xchg
das
mov
fldcw
or
push
cmp
dec
pop
xchg
movsl
adc
or
push
test
add
int3
jb
cmp
jecxz
add
mov
xchg
mov
jmp
dec
dec
or
int
popa
and
negb
orb
jle
adc
stos
jecxz
xchg
add
pop
jge
push
cmp
adc
test
sbb
aad
ljmp
jmp
fcomps
inc
push
testl
sub
push
imul
add
and
cld
sarl
add
int
pop
jmp
push
inc
pop
mov
inc
test
das
cmp
and
loop
sub
push
or
inc
jmp
int
popa
push
lahf
mov
mov
idivl
push
sbb
popa
mov
test
sbb
xlat
fildll
pop
cld
enter
lds
sub
cli
push
push
and
adc
clc
call
add
adc
sbb
mov
sarl
mov
xchg
das
push
lret
cmp
aam
fsubrl
dec
inc
mov
or
data16
push
aaa
loope
pop
lret
cwtl
jp
das
fs
test
jae
jge
mov
push
lods
adc
or
in
lcall
mov
add
sub
lods
push
aas
mov
test
outsb
fs
xchg
fdivs
xchg
cld
xchg
pop
sti
inc
dec
in
movb
inc
aam
jmp
cmp
fnsave
cmpsl
fistps
xor
ret
movsb
cmp
lcall
sub
dec
jecxz
or
sub
pop
jmp
rol
dec
daa
test
rorl
repz
mov
fldenv
lods
jne
fwait
aad
std
call
mov
add
shrb
ljmp
arpl
mov
js
dec
pop
sub
fiadds
or
es
jle
ret
add
mov
sub
inc
pop
mov
lods
push
fldl
add
scas
add
jb
mov
or
pop
rol
push
mov
adc
mov
cld
pop
cltd
fnstenv
ljmp
and
out
add
mov
or
pop
xor
dec
ror
inc
sub
and
dec
or
jp
mull
std
add
mov
cs
pop
test
testb
or
jmp
stos
ljmp
leave
addr16
inc
cli
into
cmp
das
aas
fs
fwait
outsl
xchg
inc
out
fnstcw
fisttps
add
jno
ret
imul
or
push
out
or
stc
in
and
inc
push
out
cmp
push
enter
or
aam
js
sbb
xor
insb
jbe
sub
xor
popa
pop
leave
add
jns
int3
cmp
and
and
fimull
adc
arpl
sbb
push
mov
adc
xor
stos
mov
add
gs
notb
clc
pop
xchg
fdivrl
or
sub
ficoml
es
xchg
dec
clc
test
fiadds
mov
arpl
das
adc
jmp
add
cmp
loop
cs
or
adc
mov
lahf
das
repnz
mov
testl
sub
and
push
dec
or
pop
mov
sub
xchg
xor
les
cmp
sbb
outsb
push
js
bound
fildll
jnp
dec
add
dec
push
jmp
and
pop
stc
aam
mov
ret
push
cmp
sub
jle
popf
mov
push
add
sub
jmp
inc
push
mov
xor
or
fstpl
jl
sub
xchg
ss
add
in
mov
jmp
jo
add
or
dec
or
and
sub
or
mov
movsb
sbb
xor
mov
xchg
xor
add
shlb
add
jg
mov
sbbb
clc
mov
out
push
clc
scas
loop
xchg
stos
mov
or
fs
mov
addb
sbb
or
push
pop
pop
gs
les
bound
arpl
add
xor
loope
sub
std
jno
ret
roll
sub
pop
pop
pop
fs
mov
cmp
push
in
mov
rcrb
stos
or
jmp
iret
push
test
sbb
rorb
pop
call
add
pop
mov
mov
out
inc
int
add
push
push
xor
xchg
mov
or
or
dec
aas
xor
repz
sub
inc
in
adc
lahf
in
fstl
je
and
cmpsb
xlat
out
dec
in
adc
or
mov
dec
push
xlat
les
and
push
mov
and
adc
pop
xchg
mov
push
shl
jmp
mov
in
or
pop
repz
loope
dec
push
jbe
add
xor
cs
xchg
popf
xor
pop
fidivrs
loope
jg
adc
mov
jmp
fstpt
mov
lods
jns
xchg
cmpsb
aas
movsb
sbb
mov
and
outsb
jle
adc
mov
sub
adc
sbbl
push
sub
sbb
in
jmp
mov
mov
ja
mov
shl
shl
or
rolb
inc
cmc
dec
or
jmp
and
jp
push
mov
sbbl
mov
push
or
cmp
pop
sub
js
pop
jns
dec
enter
pop
je
loopne
push
dec
jmp
mov
cmp
nop
popf
and
adc
mov
xor
add
add
mov
jmp
jnp
jne
icebp
and
cmp
mov
xchg
pop
sti
test
pusha
mov
punpckhwd
pop
or
mov
orb
scas
push
adc
pushf
cmpsl
popa
pushf
orb
test
ljmp
addl
lods
pop
pop
mov
push
jl
push
dec
aad
xor
std
add
lds
cmc
neg
xchg
or
or
out
pop
imul
xchg
adc
adcl
inc
out
mov
das
std
dec
adc
dec
add
scas
fs
out
push
in
or
std
inc
push
xchg
arpl
stos
adc
push
dec
cmc
jle
das
das
mov
cli
aas
push
inc
push
jmp
sar
and
push
mov
push
xchg
jg
loopne
lods
dec
mov
add
push
mov
sub
gs
out
sub
xchg
jg
or
jecxz
jl
xorps
ja
fistpll
push
sbb
xor
sbb
xchg
data16
xor
mov
ret
jo
or
push
lds
aam
bound
sbb
lahf
and
or
mov
or
mov
push
or
sub
sbb
or
or
pop
lods
add
imul
outsb
jl
add
pop
adc
mov
xchg
add
adc
cmp
mov
repnz
xlat
fisttpll
pop
pop
inc
leave
fnstsw
dec
cmpb
adc
shlb
mov
add
xor
mov
dec
add
sub
inc
pop
inc
cwtl
mov
inc
push
in
imulb
sbb
cld
not
push
push
gs
pop
xchg
dec
dec
stc
add
jp
push
mov
xor
shlb
out
mov
sub
or
cmpb
in
in
fisttps
into
push
leave
jmp
es
test
add
push
out
inc
jp
push
push
mov
pop
mov
cli
insb
int3
or
fs
in
das
into
pop
jge
pop
jmp
dec
add
movsl
in
lds
pusha
out
mov
sar
pushf
push
add
mov
scas
lret
or
dec
inc
in
in
shlb
sub
mov
subb
xorb
jo
dec
sub
les
orl
sbb
jmp
icebp
xadd
shlb
pop
or
insb
cmp
sti
sub
fabs
cmp
add
std
lahf
mov
lods
mov
lahf
push
incl
sbb
imul
out
mov
out
shll
push
pusha
sub
sub
mulb
or
add
pop
and
or
mov
add
mov
dec
mov
or
sub
imul
out
push
mov
lods
loopne
adc
addr16
xor
and
jno
mov
mov
pop
pusha
add
rclb
fcmovnb
loop
sub
outsb
lock
dec
push
mov
les
lcall
les
sbb
push
ljmp
mov
mov
loope
sub
and
sbb
cmc
cmp
dec
jle
xchg
loopne
lmsw
adc
lock
add
xchg
shl
test
js
pop
push
inc
xchg
pop
jp
pop
jg
push
dec
xchg
loope
popa
dec
sbb
pop
push
push
lock
add
pusha
mov
mov
sti
add
in
lds
rorl
and
or
sub
inc
or
xchg
and
insb
sar
add
xlat
mov
xor
pop
repz
loope
add
fstl
mov
adc
xor
out
daa
mov
pop
mov
mov
or
cmp
push
icebp
mov
icebp
push
scas
xor
jae
and
lret
fildl
sar
dec
cld
hlt
dec
jl
outsl
cmpb
sbb
lret
jle
mov
pop
add
adc
pop
pop
dec
add
adc
sub
sub
mov
xor
push
subl
pop
aad
jg
and
fcompl
push
stc
push
jmp
mov
cmp
xlat
insb
add
push
cltd
rorb
dec
jae
cld
xchg
push
adc
fsubr
xchg
fnsave
orl
imul
shl
sub
subb
xor
inc
mov
push
shlb
xchg
cmc
rsqrtps
dec
dec
cmc
mov
dec
lods
sub
cmpsl
imul
stos
sbb
dec
jae
and
lods
scas
mov
mov
inc
dec
imulb
scas
adc
mov
mov
pop
std
stc
add
inc
add
xchg
repnz
add
cmp
or
dec
mov
mov
push
mov
xchg
pop
push
mov
mov
bnd
sbb
push
dec
push
pusha
imul
jmp
push
pop
bound
lds
mov
mov
enter
shl
cmp
inc
add
imul
mov
fdivl
jmp
mov
adc
inc
sbb
lods
test
ds
pop
or
divl
add
ret
xor
or
repnz
sub
sub
loopne
adc
pop
pop
or
sub
jae
pop
add
mov
ds
mov
xor
sahf
rol
xchg
enter
pop
mov
loopne
jmp
fwait
mov
pop
pop
jno
pop
jmp
mov
mov
pop
aad
cwtl
out
adc
xchg
lods
nop
or
push
dec
inc
dec
popa
mov
push
pop
mov
shrl
test
outsl
push
xor
or
cvtdq2ps
in
xchg
adc
pop
xor
popa
jmp
push
scas
add
jge
xor
adc
les
scas
call
pop
stc
jmp
xor
daa
xlat
test
ret
inc
enter
lcall
or
mov
lock
dec
push
mov
ret
fs
push
mov
jne
mov
xor
push
sarl
stos
dec
scas
cmp
les
cld
int
ret
ret
stos
roll
lods
rcll
mov
jno
jno
imul
cltd
mov
in
push
or
push
sub
ds
adc
mov
loopne
fdivl
or
imul
sbb
xchg
dec
pop
or
cmc
in
mov
into
xchg
add
gs
mov
push
shl
sbbb
pushaw
rclb
mov
jne
cmpsl
dec
pop
or
loope
or
pop
add
dec
jg
aas
dec
pusha
jmp
pop
and
cld
pushf
sub
lds
or
adc
aaa
cmp
mov
dec
notl
mov
sub
sti
pop
in
in
add
test
lds
jle
mul
push
shrb
sarl
jno
outsl
or
dec
test
pop
push
mov
sbb
rorl
xor
push
adc
mov
lahf
pop
movsb
loop
dec
arpl
scas
add
addr16
push
xchg
sahf
stos
adc
inc
iret
xchg
xchg
popf
hlt
nop
or
cmp
int3
std
push
inc
and
insl
cmp
xorb
pop
push
cmpb
mov
loop
nop
repnz
lahf
dec
lret
in
inc
pop
add
lds
daa
pusha
retw
sbb
icebp
or
int3
movsb
push
gs
or
iret
pop
lcall
dec
jmp
xlat
cmp
cmpsl
addb
cmp
cli
pop
gs
daa
rolb
add
inc
sbb
lock
mov
add
sub
add
sub
or
addr16
cmc
add
in
movl
jmp
xchg
push
add
addr16
xor
cmp
cld
adc
pusha
mov
inc
mov
jle
jo
subl
aas
test
sbb
sbb
pop
pop
push
ret
jno
sub
or
sub
jne
xchg
and
pop
mov
adc
fucomip
ljmp
rcrl
fst
in
push
lahf
sbb
xlat
pop
cwtl
ret
in
cli
cmp
orb
adc
push
in
movsb
cmp
add
push
or
jecxz
add
add
mov
adc
subb
imul
pop
adc
add
cwtl
push
mov
push
jecxz
add
pop
push
or
ret
or
sbb
push
mov
loopne
add
add
int3
fadd
push
aam
pop
pop
jns
or
xor
fsubrs
push
sti
mov
add
in
inc
sub
mov
pop
sub
push
or
dec
or
sub
add
inc
orb
lea
push
bound
adc
or
mov
jp
stos
pop
and
xor
xor
mov
xor
pop
mov
rorl
or
sti
jno
fdivr
jge
sqrtps
push
push
cmpsl
mov
roll
or
testl
arpl
and
mov
ret
fs
sub
cld
or
out
sbb
add
push
jmp
fstpt
inc
mov
inc
mov
orb
pop
jbe
pop
mov
adc
push
or
jl
inc
sbb
sub
mov
dec
xorl
lea
and
add
rorl
mov
or
xchg
mov
pop
jg
in
ficoms
jae
xchg
call
pop
int
adc
daa
rclb
stc
stos
xorl
add
lcall
cli
imul
ljmp
scas
out
pop
push
je
test
adc
sub
adc
in
scas
jae
jecxz
ret
mov
fstpl
ljmp
cmpsl
jmp
jnp
and
sti
pop
or
pusha
pop
pop
add
shr
rorb
jmp
loope
jae
daa
add
test
mov
or
lcall
enter
adc
mov
iret
xchg
cmp
jns,pn
jmp
push
mov
enter
ffreep
ljmp
xchg
decl
lret
xchg
add
pop
incb
and
or
sub
push
enter
add
add
and
push
push
mov
addr16
cld
add
push
in
inc
push
out
movsl
sbb
outsb
push
or
push
jmp
shr
xchg
dec
gs
nop
ss
dec
and
dec
xor
dec
push
push
loop
clc
enter
add
sbb
add
or
pop
jne
cs
out
or
jle
inc
adc
xchg
pop
or
sbb
pop
leave
mov
iret
mov
sub
xlat
shrb
xchg
jb
addl
int
xchg
jle
pop
mov
jmp
mov
inc
das
loopne
cmp
adc
add
or
lret
pop
mov
add
outsb
pop
mov
jmp
in
push
inc
push
add
std
xchg
jmp
push
pop
mov
mov
push
mov
xor
loopne
pop
pop
mov
stos
sbb
xor
cld
and
mov
pop
dec
out
sub
pop
adc
imul
adc
cmp
xor
push
mov
nop
popl
addl
test
inc
daa
cs
and
add
loopne
xchg
addl
pop
or
and
in
testb
out
xchg
xlat
sub
cmp
jnp
push
cmp
mov
scas
stc
lret
in
xor
push
jb
jmp
xor
testl
pop
ja
dec
notb
aad
decb
adc
inc
or
xor
adc
and
lea
inc
pop
dec
dec
jno
in
mov
and
test
ljmp
loop
sar
mov
sub
inc
add
loopne
xchg
addl
fimull
shll
mov
push
in
jp
push
xor
xor
or
es
sbb
test
sub
fwait
idivl
sahf
add
adc
mov
ds
pop
stos
add
add
add
hlt
pushf
repz
push
ljmp
dec
xor
filds
fwait
push
fistl
faddl
mov
inc
ja
adc
sti
lea
aam
cmp
outsl
and
test
ret
fs
les
adcb
push
adc
shrl
icebp
jle
inc
push
mov
adc
shrb
mov
push
jbe
jne
sub
jecxz
pop
sub
add
adc
cmc
scas
cmp
push
lods
pop
pop
leave
pop
push
xor
addr16
pop
xchg
jmp
fcomps
jmp
daa
sub
out
fsubrl
pop
sti
add
das
scas
clc
aas
mov
call
test
daa
pop
xor
ja
cli
add
cmp
jne
cmpb
add
or
dec
add
adc
mov
loope
mov
shlb
jp
and
or
addr16
out
or
dec
jne
in
cmp
or
rclb
popa
in
sub
pop
or
clc
xor
xor
jae
ljmp
add
aad
stc
and
lods
stc
dec
into
add
push
mov
stos
test
pusha
push
add
mov
orb
hlt
enter
popf
jo
xor
push
or
or
outsl
inc
mov
push
dec
stos
mov
sbb
jmp
addl
cli
mov
push
pop
pop
push
lods
in
adc
jmp
jne
pop
add
and
xor
out
mov
or
fimull
hlt
sahf
mov
shlb
jne
pop
out
push
mov
iret
xor
pop
orb
push
mov
add
mov
addr16
push
orl
adc
data16
aaa
add
int
sub
xchg
sbb
push
xchg
inc
xor
pop
or
shr
in
xchg
ret
test
ret
into
std
and
testb
sbbb
or
in
repnz
lcall
jge
pop
subb
das
pop
pop
or
xchg
mov
xchg
cld
fs
ret
push
inc
sbb
sub
stos
sub
idivb
dec
andb
push
cmp
add
push
ret
adc
sti
push
mov
movsb
addb
jg
fstpt
or
lds
outsb
inc
mov
test
add
and
jmp
dec
int3
gs
sub
or
call
ret
push
mov
push
dec
aaa
test
pop
xchg
inc
clc
shrl
daa
mov
add
xor
outsl
pusha
push
mov
cmp
stos
sbbb
jne
add
inc
jg
and
pop
rolb
mov
add
push
sbb
jns
subl
or
jmp
mov
lock
insl
mov
mov
das
fadds
mov
icebp
dec
inc
sub
add
repnz
in
add
and
dec
and
sub
push
push
aad
mov
sti
ljmp
cmp
icebp
push
cwtl
jg
inc
in
pop
adc
and
push
sbb
sub
pop
pop
roll
jecxz
add
and
jp
sub
adc
cmpsb
add
jecxz
outsb
mov
mov
shr
cwtl
lret
rcrl
sub
jns
movsl
bound
aas
sti
xor
pop
jmp
clc
test
or
adc
daa
jmp
popf
pop
pop
mov
popa
cmc
jmp
pop
adc
lret
xor
ret
lods
out
stos
mov
fidivrl
lods
call
outsl
dec
movsb
dec
or
scas
inc
push
pop
add
jp
imul
mov
nop
pop
and
movsl
jp
mov
mov
push
arpl
mov
int
in
xor
pop
loopne
out
mov
das
push
inc
jmp
push
jbe
lahf
jecxz
push
xor
jb
mov
bound
or
xor
fisubl
inc
mov
add
mov
sub
cs
test
add
jp
mov
addr16
ja
mov
cmp
push
xor
xchg
cmp
add
jae
cmp
inc
movsl
repnz
sbb
loop
pop
pop
sbbb
fwait
in
enter
jl
jbe
inc
cmp
outsl
bound
imul
cmp
cmp
mov
cmp
sbb
inc
mov
or
cmpsl
and
pop
push
push
dec
sub
inc
jns
fs
or
cmp
jmp
jnp
or
iret
outsl
or
enter
mov
pop
push
and
lcall
or
sub
mov
xchg
xor
or
nop
push
dec
ljmp
lea
subl
mov
sti
leave
jbe,pn
push
mov
nop
push
or
out
sub
pop
shll
cltd
and
mov
in
daa
cmp
fildl
xor
or
add
add
adc
sti
inc
dec
pop
or
lock
fcoms
ljmp
mov
push
mov
add
pop
pushw
add
mov
mov
cltd
in
iret
push
loope
or
pop
nop
mov
jp
pop
repz
and
xor
jl
push
rolb
in
dec
inc
arpl
cmpsw
popf
gs
adc
inc
pusha
out
imul
pusha
inc
push
into
pusha
push
pop
jnp
pop
mov
push
pop
lods
stos
repnz
js
push
mov
fidivs
std
mov
lcall
fs
mov
arpl
ljmp
sub
adc
cli
into
push
cmp
test
das
inc
mov
out
dec
jne
xchg
mov
mov
add
pop
sub
mov
inc
inc
mov
rorl
or
aas
ret
mov
popa
movsb
adc
cmc
sarb
adc
enter
pushf
cwtl
sub
mov
lret
inc
push
pop
pop
daa
jmp
add
mov
mov
pop
xchg
push
inc
cmp
enter
dec
dec
aas
push
scas
jnp
in
ret
add
movsb
xor
or
or
adc
loopne
lods
pop
push
inc
fs
jg
sub
jne
and
das
cwtl
lret
or
cmp
xor
xor
cmc
into
mov
in
push
addr16
sub
sbb
out
or
ss
push
adc
cmp
ja
push
dec
dec
dec
outsb
cmpsl
loopne
push
sub
pop
inc
pop
in
or
mov
inc
push
sahf
mov
daa
jge
mov
jge
loope
jnp
xlat
lods
fs
or
push
loopne
cmp
cmp
icebp
push
fcomp
push
call
or
push
push
loop
add
xchg
jno
into
lret
bound
rep
ficoms
push
es
or
mov
shrl
neg
add
and
subb
adc
inc
xchg
nop
dec
or
cmp
jo
pop
mov
jmp
mov
jo
adc
inc
pop
dec
mov
dec
pusha
imul
and
push
xchg
add
loopne
add
stc
dec
icebp
xor
imul
int3
repnz
insb
dec
mov
mov
data16
push
push
push
mov
pop
mov
adc
push
mov
mov
sbb
addl
ret
push
xor
jmp
mov
mov
sarl
cli
push
xor
shld
enter
iret
mov
xchg
in
ret
jnp
sbb
lds
test
push
pop
xor
sarl
repnz
sub
xor
pop
add
mov
pop
inc
ds
lret
adc
ret
pop
test
add
adc
dec
jmp
push
in
sub
jmp
or
in
add
lret
addr16
xchg
sbb
jl
mov
jo
call
jecxz
jl
fisttpll
or
js
pop
dec
inc
cs
mov
pop
js
mov
imul
roll
mov
cmp
fwait
inc
cli
imul
mov
push
mov
mov
mov
or
ds
pop
or
cs
fnstsw
mov
das
and
arpl
aaa
xor
xchg
xor
dec
inc
in
or
push
out
or
mov
mov
inc
lock
push
adc
in
fs
sub
pusha
imul
dec
cs
das
rorl
imul
rorl
mov
sbb
das
sbb
fsts
mov
add
cmp
loop
in
push
push
lret
and
dec
xor
jg
mov
jmp
mov
repnz
or
add
and
adc
inc
dec
stc
shlb
into
add
jne
lcall
jnp
xchg
out
adc
lcall
mov
inc
xchg
cld
imul
gs
insb
jns
push
cld
stos
xor
jmp
out
sub
or
pop
inc
out
sub
es
arpl
add
xlat
fldcw
sub
dec
ss
rcrb
in
push
les
sbb
int
fs
and
in
cli
in
or
mov
scas
pop
push
mov
les
fisubrl
or
pop
and
inc
in
xlat
dec
out
cmp
cmp
mov
push
xlat
sub
add
out
roll
inc
jno
arpl
cmp
mov
shrl
push
push
push
pop
and
jno
push
pop
inc
sbb
cmc
push
or
out
das
lds
loopne
cmc
dec
int3
out
xchg
xchg
jb
push
and
jle
and
rcrl
inc
mov
inc
xchg
or
cmp
lret
loope
xchg
cmp
jg
cmp
sbb
and
add
dec
and
xor
loop
pop
add
lret
pop
mov
mov
mov
jmp
ljmp
add
xor
sub
add
in
push
sub
add
sub
pop
sub
mov
jne
aad
xchg
in
xlat
lcall
lcall
pop
gs
popa
jmp
mov
and
popf
pusha
mov
addb
dec
inc
and
mov
inc
push
lock
dec
shll
das
sti
imul
xchg
int3
or
add
loopne
clc
daa
and
add
lret
jle
clc
inc
inc
pusha
cmp
mov
out
in
adc
mov
add
sub
clc
xchg
ja
std
push
popf
jo
push
push
pop
pop
js
push
push
cmp
sbb
pop
inc
inc
sub
mov
orb
mov
adc
std
stos
push
js
push
daa
sub
mov
insb
lock
nop
adc
fisubl
cld
gs
pushf
les
mov
out
push
xchg
pop
add
inc
ja
cmpsb
pop
mov
imul
push
inc
popa
jb
mov
and
and
jno
outsl
sub
ret
popf
dec
sbb
and
cmp
imulb
mov
jge
ja
pop
scas
add
sarb
das
loopne
int3
mov
push
mov
data16
mov
int
add
cli
cld
das
cmc
sbbb
push
push
jbe
cmp
mov
jecxz
in
popa
sbb
icebp
sti
fbld
test
dec
cmp
ljmp
int3
mov
or
sub
mov
aam
or
in
mov
nop
lods
das
mov
push
imul
movsb
adc
mov
scas
xchg
push
call
sub
sub
or
mov
pop
pushf
enter
sahf
lods
pusha
dec
inc
jmp
xor
dec
or
pop
add
inc
sub
push
xchg
inc
mov
jmp
push
and
pop
mov
shll
adc
repnz
icebp
data16
das
in
mov
xor
jecxz
and
jo
jmp
pop
pop
pusha
sti
je
push
push
add
push
jmp
orb
add
pop
sub
jae
dec
data16
cwtl
pop
dec
mov
pop
andps
test
dec
daa
ja
out
dec
daa
adc
pop
adc
xlat
test
movsl
push
iret
dec
mulb
push
addb
or
xor
push
lock
dec
mov
cmp
dec
dec
scas
dec
stc
stc
push
aam
mov
fsubrs
ds
push
and
mov
movsb
shl
imul
out
add
push
std
mov
pop
daa
ret
movsl
dec
data16
pop
or
xor
loopne
pop
adc
jmp
or
aad
gs
sub
jb
sbb
mov
xor
mov
mov
sub
ror
fadd
mov
mov
cmp
stos
mov
int
or
add
push
js
dec
xchg
loop
or
test
push
jnp
je
rclb
rcll
das
bound
ja
pop
lds
xchg
jle
mov
dec
adc
add
mov
xor
ret
pop
roll
out
pop
lret
into
sub
das
mov
mov
and
mov
add
mov
add
rcrl
mov
sbb
cmp
push
lahf
pop
mov
pop
test
lcall
inc
mov
inc
jp,pn
add
mov
jg
idiv
xor
add
lahf
and
and
sbb
mov
pop
jno
int
out
add
gs
push
jns
and
movsl
xchg
mov
movsb
add
hlt
add
adc
aaa
dec
js
jmp
add
mov
pop
mov
mov
sbb
stos
add
jmp
mov
and
out
mov
rclb
daa
push
xor
pop
jge
mov
mov
xor
orb
lahf
or
cmc
insb
outsb
pop
cwtl
test
repz
lods
pop
mov
aad
aam
adc
test
stc
daa
loopne
add
dec
xor
jns
sub
cmpsb
jg
addr16
xor
dec
daa
sub
push
jb
clc
pop
test
adcl
push
jmp
inc
scas
mov
sub
mov
mov
test
and
subl
inc
dec
push
pushf
sbb
pop
adc
shll
cld
adc
loop
sarl
pop
mov
xchg
xlat
insb
jb
jo
test
mov
cs
xor
inc
in
iret
push
add
adc
xchg
mov
mov
xor
inc
ret
mov
xchg
xor
mov
xor
in
push
std
aad
test
and
in
std
cld
lods
subb
test
sbb
insb
test
mov
lahf
es
pop
push
adc
icebp
push
in
lahf
rcrl
and
lock
mov
add
dec
push
clc
cmp
xchg
orb
push
or
dec
stc
sbb
inc
mov
scas
in
lods
pop
js
aad
out
mov
cmp
das
scas
mov
dec
pop
jl
mov
cmc
sbb
add
inc
ja
xor
push
in
push
ja
jp
js
or
insl
lds
push
push
pop
and
xchg
cmpb
jge
notl
push
cli
pop
psrad
pop
mov
dec
mov
sub
bound
je
inc
sub
dec
divb
cs
cltd
fcom
cmp
pop
push
sub
cmp
aad
sti
add
test
daa
pop
push
arpl
cmp
or
mov
mov
pop
mov
adc
mov
sub
pop
loopne
lcall
repz
mov
ficomps
mov
inc
sub
movsb
shll
sub
or
in
subl
out
divl
iret
jmp
std
pop
je
pop
cmp
out
insl
mov
mov
imul
push
ljmp
push
icebp
icebp
or
test
adc
and
lds
dec
shl
jle
scas
mov
std
mov
push
xchg
push
jns
aaa
inc
xor
repnz
push
ja
daa
mov
dec
push
jmp
adc
dec
cmp
xor
insb
jno
push
or
xor
and
fstps
popf
stos
ret
std
rcrb
jp
sub
shr
sahf
cmpsl
add
xchg
push
jne
or
mov
pop
adc
add
or
jmp
xchg
jmp
pop
or
add
add
clc
xorl
push
les
pop
dec
add
push
mov
adc
cmpsb
cmp
adc
jns
cmc
sub
jge
outsb
lret
mov
pop
pop
lds
cmc
adc
sub
sub
mov
sub
stc
push
notb
cmp
orl
scas
push
mov
enter
test
push
loopne
pop
aad
movsl
flds
push
push
out
pop
pop
icebp
cmp
add
mov
out
and
rcrl
outsb
adc
push
pop
mov
outsb
data16
mov
rclb
jl
xchg
aad
js
jmp
adc
sbb
js
mov
lods
fcoms
mov
push
ds
pop
nop
pop
mov
add
pop
out
dec
fstps
mov
sbb
out
xchg
push
out
lahf
mov
sub
jo
pushf
roll
sbb
sarb
insl
push
mov
shrl
xor
outsl
movsl
mov
pop
dec
xor
int
mov
cli
fbld
xlat
adc
popf
jbe
arpl
pop
test
jae
push
xchg
inc
sub
outsb
push
add
das
or
xchg
pop
loope
cmp
pop
jo
popa
add
fldt
mov
jmp
movsb
cmp
inc
jmp
aam
pop
cwtl
out
jnp
mov
mov
idivb
mov
add
in
loopne
sub
mov
dec
inc
cmp
jmp
mov
testl
pop
lds
adc
arpl
jo
cmp
add
pop
std
mov
and
icebp
or
sti
sbb
adc
popa
popf
lods
or
pushf
jle
xchg
cld
shrl
dec
jl
lret
pop
clc
test
push
mov
test
add
fisttpl
ss
shrb
push
cmp
push
or
add
mov
mov
pause
sub
adc
pusha
dec
sub
cmpsl
push
dec
and
pop
push
shlb
aaa
inc
pop
popf
xlat
sub
add
inc
hlt
xorb
dec
pop
in
add
loopne
roll
pop
pop
in
in
inc
mov
jle
push
pusha
mov
inc
inc
clc
addr16
in
fdivs
das
push
pop
sbbb
or
daa
jmp
sahf
pop
dec
hlt
shl
sahf
dec
fldcw
pop
jg
in
add
mov
push
add
sub
inc
jmp
mov
mov
gs
ret
jmp
pop
jo
andb
or
fnstsw
xchg
scas
in
jg
xchg
test
int3
and
mov
insb
jmp
cmp
jb
sarb
push
push
push
push
push
push
pop
sub
data16
mov
je
jne
loope
jp
mov
or
xor
push
insb
loop
and
dec
stc
sub
cmp
xor
jge
loope
faddl
add
mov
sub
es
lock
out
push
gs
clc
in
mov
mov
mov
test
imulb
jge
js
cmc
jl
inc
aas
pop
and
xchg
lds
and
push
pop
or
sub
mov
loopne
in
sub
dec
mov
or
ljmp
ret
fmull
std
adc
or
xchg
or
inc
imul
add
and
dec
inc
std
inc
aam
push
pop
jnp
jae
shrb
cwtl
mov
clc
mov
mov
cmp
stc
sbb
mov
jb
rorb
sub
or
mov
pop
sub
inc
and
pop
mov
jbe
rep
stc
outsl
imul
ss
push
ds
cmp
out
clc
xchg
mov
mov
scas
mov
adc
add
mov
push
ds
ficompl
mov
arpl
movaps
dec
pop
out
xor
lds
je
fs
mov
mov
lds
adc
ret
fld
cmpsb
cmp
pop
push
sub
sub
sub
popf
out
inc
xor
add
shr
pusha
lods
dec
aaa
test
sub
sbb
sar
scas
mov
inc
xor
add
cltd
xor
out
and
arpl
jg
test
add
add
push
jle
subl
fcoml
jp
push
pop
cmp
lds
bound
push
mov
jne
insb
and
test
sub
jge
jb
decb
dec
add
hlt
jbe
mov
fs
ret
mov
pop
pushf
sub
push
or
lock
fistpl
les
out
mov
jmp
outsb
lods
cmp
sub
xor
jmp
add
push
dec
jne
inc
and
dec
dec
shll
arpl
mov
dec
test
fistl
add
sub
test
push
fadds
xchg
jbe
pop
mov
xor
bswap
rclb
mov
subb
fcomps
nop
test
pop
sub
push
inc
add
push
mov
xor
fmul
fistps
jle
or
fnstcw
dec
js
sbbl
rcll
mov
dec
jmp
lods
js
or
lfs
mov
es
jmp
ret
or
cmp
imulb
pop
cmpsb
pushl
loop
xchg
out
mov
push
sti
xchg
shl
cli
jne
scas
pop
mov
movsl
xchg
jmp
mov
and
rcrl
pop
adc
test
mov
sub
add
out
in
adc
dec
ret
pop
add
xor
sub
and
out
pop
add
or
pop
jns
cmp
mov
aad
int
or
add
mov
or
push
jnp
das
xor
pop
or
or
shr
and
mov
dec
inc
leave
sbbb
mov
sbb
in
cmpb
cltd
nop
adc
xchg
cmpb
jl
pop
out
dec
or
pop
xor
add
mov
lret
xor
mov
jae
test
adc
xor
push
xor
lret
iret
js
mov
sub
dec
mulb
mov
dec
cvtpi2ps
sahf
lcall
add
sbb
sbbb
push
pop
pop
jmp
rorb
dec
loop
cmpl
xor
shrl
aas
cmp
adc
mov
imul
mov
add
jb,pt
or
lahf
inc
aam
cltd
cmovns
dec
xor
pop
mov
ror
cmp
xchg
inc
or
sbb
or
jecxz
mov
push
mov
mov
xor
bound
and
out
xchg
mov
in
pop
add
mov
or
or
popa
adc
jle
pop
repz
jp
shrb
fldenv
test
clc
stos
gs
inc
sahf
cmp
jl
fcomip
sbb
add
mov
dec
shl
adc
dec
fstl
shlb
mov
jmp
add
std
lret
cmp
xor
mov
xorl
inc
mov
jg
mov
and
adc
inc
enter
daa
jmp
push
xor
scas
enter
push
in
add
cmp
loope
xchg
pop
int
add
stos
xchg
mov
pop
pop
rol
das
es
xchg
push
pop
hlt
data16
jmp
push
push
sub
mov
xchg
out
and
pop
add
sbb
cld
out
inc
fcmovnb
xor
inc
lods
neg
inc
xchg
in
cmc
and
imull
mov
aad
mov
cltd
sub
sbb
add
lds
mov
je
mov
mov
test
outsb
clc
inc
pop
adc
or
je
fdivrs
les
enter
dec
pusha
xor
adc
xor
cmp
test
add
hlt
int3
lods
into
daa
inc
jge
shl
or
repnz
xor
lds
dec
mov
lret
aas
dec
cmpsl
dec
push
push
xor
mov
jae
insb
jmp
adc
mov
sub
push
mov
in
stos
cltd
cmp
jmp
and
jne
repz
or
rolb
push
or
or
inc
jp
push
ja
mov
sahf
add
adc
xchg
pop
mov
cmp
sub
add
lret
cmc
push
xchg
xchg
or
pop
repz
mov
scas
or
ljmp
add
pop
mov
push
mov
and
lret
out
push
pop
pop
push
orb
xchg
cli
jmp
sub
xor
dec
flds
int
inc
pop
loopne
aaa
push
cmp
push
mov
or
pop
xchg
stc
mov
ret
inc
decl
adc
push
inc
nop
rcl
insb
sbb
push
jl
iret
lahf
dec
mov
jmp
xor
jns
pop
inc
rcll
cmp
aam
add
shl
push
jmp
mov
orb
ja
xor
inc
xorl
add
ret
pop
pop
arpl
sub
daa
mov
xchg
testl
call
push
mov
mov
mov
fsubr
jmp
ret
dec
cwtl
fucomip
test
mov
mov
das
in
popa
arpl
out
mov
cld
inc
mov
mov
outsb
xchg
shl
xchg
sbbb
push
push
cmpl
pop
add
push
jbe
mov
int
add
xor
inc
stos
adc
stos
adc
test
or
mov
aaa
int
ret
not
subb
jmp
cmp
pop
inc
ret
push
dec
push
cs
nop
mov
xor
xor
dec
dec
fbld
mov
shrl
sbb
mov
jg
lea
jl
jnp
shr
fldt
test
outsl
dec
lahf
mov
or
adc
jmp
xchg
pop
int3
ja
lahf
adc
xlat
adc
push
xchg
scas
mov
add
cwtl
add
pop
dec
cmpb
mov
xor
xchg
or
not
ja
xchg
jno
dec
mov
sub
jo
je
addl
and
lahf
pop
mull
popf
in
testb
and
add
adc
add
aam
out
add
mov
add
sub
mov
pop
jae
cmpsl
int3
push
pop
int
pop
push
xchg
adc
dec
push
mov
pusha
sub
push
mov
xchg
push
psrlw
adc
addr16
mull
push
cmpsl
mov
or
roll
sub
in
cmp
in
fsubs
add
iret
xor
into
shr
add
jg
lcall
push
jge
lahf
jb
add
cmp
shl
or
bound
xor
leave
scas
and
pop
shr
stos
cli
das
and
mov
and
cmp
dec
sarb
jle
lahf
push
sbb
add
nop
mov
adc
adc
adc
push
xchg
push
mov
inc
cmc
pop
movsb
push
testb
jns
mov
pop
and
ret
lahf
ljmp
iret
jne
pop
inc
mov
push
inc
lock
rcll
pop
aas
sub
pop
mov
shl
dec
scas
inc
test
mov
mov
hlt
mov
call
pop
icebp
cmp
int3
in
pop
enter
ljmp
hlt
sub
fildl
cs
pop
stos
sub
fsubr
jbe
pop
add
jmp
or
rolb
popf
call
xor
lea
push
fcoml
add
add
icebp
adc
dec
pop
mov
adc
imul
frstor
pop
jb
or
icebp
lods
or
sub
or
pop
cmp
pusha
mov
sub
dec
pop
xchg
test
jmp
test
mov
lods
xor
jg
addr16
lods
jne
xor
mov
lahf
add
shl
sub
or
cmpsl
sub
negl
sub
adc
lods
push
pop
mov
add
hlt
inc
xchg
lods
and
in
xor
jmp
dec
test
test
sbb
in
pop
adc
pop
add
test
imul
push
sub
dec
jg
loope
jecxz
stos
mov
pop
nop
cmp
inc
mov
dec
adc
adc
and
and
pop
aas
mov
cmpsl
cld
push
lods
add
imul
subb
cmp
push
add
mov
jge
fs
das
out
jmp
in
stos
mov
dec
push
add
push
movmskps
lds
add
push
push
mov
xchg
mov
lahf
pop
mov
and
or
push
dec
jmp
scas
imul
outsb
jo
punpckldq
add
call
add
es
add
ljmp
xlat
aam
xchg
or
arpl
xor
call
pop
notl
aam
mov
mov
es
ja
mov
in
js
jnp
cmp
cmp
clc
and
or
lods
addb
test
mov
and
test
adc
stos
jmp
mov
pop
mov
in
mov
test
bnd
inc
dec
or
stc
jle
or
sub
sarb
sbb
push
pop
mov
inc
pusha
movsb
xchg
dec
jbe
jbe
jae
jp
push
or
mov
mov
xchg
mov
pop
inc
test
mov
and
mov
add
icebp
push
xchg
xor
pop
pop
mov
jae
rolb
test
int3
repz
cli
jmp
enter
xchg
or
out
pop
jmp
sub
filds
loopne
and
imul
sbb
or
jle
mov
mov
push
in
lods
add
jg
mov
les
das
mov
mov
fildl
test
or
mov
movsl
leave
jle
lods
jp
imul
add
push
cmp
cmp
daa
xchg
pop
fsubrl
push
push
sub
push
pop
mov
mov
pop
fsubr
lea
xchg
fbld
jbe
sbb
repz
cmp
mov
je
sbb
xor
add
xchg
je
or
popf
mov
cmp
test
jne
mov
cmpsl
sub
push
das
jg
subb
adc
mov
or
sbb
pop
push
mov
xchg
lret
xor
movzwl
aad
pop
and
push
dec
neg
data16
in
xor
cltd
mov
dec
addb
pop
outsl
push
adc
push
repz
jmp
mov
fsubs
fdivs
mov
pop
pop
pop
sub
addl
pop
pop
push
mov
pop
mov
xchg
pop
adc
repz
push
pusha
ja
mov
insl
pop
jecxz
add
icebp
outsb
xor
push
sbb
and
xor
add
leave
push
pop
sti
add
add
ja
int3
bound
movsb
xchg
cmp
xor
mov
adc
mov
sub
jbe
bound
add
movsl
fadds
mov
mov
insb
test
add
xchg
les
outsb
loopne
lahf
clc
nop
dec
pop
lret
jp
in
add
xchg
adc
sub
push
std
popa
addr16
mov
sahf
add
hlt
sub
stos
mov
pop
iret
or
xchg
inc
add
cmp
mov
testb
push
jle
out
add
mov
and
xor
adc
dec
sub
push
xor
int
or
jmp
in
imul
addb
cmp
pop
pop
stos
fidivl
iret
push
and
lods
popa
dec
pop
or
push
call
and
cld
outsl
or
and
gs
arpl
push
fsubrl
out
pusha
mov
in
jo
enter
or
or
ja
jg
dec
repz
push
add
icebp
sbb
vmwrite
out
push
push
jmp
and
movsb
mov
es
sahf
xchg
xchg
add
mov
ds
popa
gs
push
mov
add
stc
pop
or
aaa
inc
addb
popa
pop
xchg
pop
das
outsl
incb
addr16
sub
mov
scas
mov
mov
lahf
inc
in
popf
aam
push
mov
mov
imul
lds
push
mov
adcl
lret
xchg
lcall
loope
mov
cmp
jbe
lea
cs
jo
popf
call
shrb
in
sbb
add
sub
out
shlb
sub
test
addr16
xchg
popf
sti
das
sti
xor
das
or
xor
lock
jmp
jmp
push
push
add
sub
cmp
mov
pop
cmp
les
popa
jb
lock
in
jge
jns
int
mov
jle
das
neg
mov
push
mov
add
neg
sub
popa
jmp
hlt
adc
je
enter
in
mov
mov
fldl
xlat
ret
aam
and
fisubl
xlat
pop
out
adcb
out
sub
and
insb
pop
in
in
inc
inc
pop
inc
cs
lock
push
stc
lret
out
in
jg
mov
pop
pop
jmp
pop
fcoms
les
test
xor
dec
outsl
in
sub
or
add
mov
ret
lret
adc
sbbl
subb
or
orl
lret
sub
jmp
pop
pop
mov
xlat
pushf
xor
fldln2
in
or
call
int
dec
les
jmp
pop
push
mov
inc
add
jo
mov
xchg
jmp
cmp
lods
xor
mov
je
bound
or
add
push
xchg
shlb
sub
loope
mov
mov
icebp
and
dec
sbbl
jmp
mov
bound
sub
or
mov
or
aam
cmp
pop
xor
push
fcmovu
es
popa
jmp
jo
sbb
cltd
cmp
add
je
or
aaa
sahf
insb
shlb
or
pop
mov
push
aam
dec
lods
shl
scas
push
push
cld
popf
jns
loop
out
xchg
jecxz
inc
into
xchg
popa
push
outsl
pop
adc
push
int
stos
or
fs
jecxz
push
and
push
add
or
dec
negl
mov
jbe
xchg
popf
or
pmaddwd
nop
pop
sub
add
xchg
mov
aad
fisubs
fcomps
rol
and
pop
sbb
dec
das
push
jmp
outsb
mov
add
je
jae
jo
xor
loopne
push
mov
mov
mov
insl
pop
add
xor
outsl
or
adc
jns
mov
xor
push
dec
push
es
mov
fisubrl
arpl
xor
push
hlt
fdivrp
cmpsb
adc
cmc
movsl
dec
push
sub
dec
add
je
ljmp
scas
into
addb
jle
inc
shl
sub
data16
add
lret
popf
inc
insl
push
push
aaa
mov
inc
stos
mov
add
xchg
insl
push
push
sbb
add
mov
mov
push
clc
testb
sbb
inc
sbb
sbb
inc
sbb
cmp
cmc
lock
es
dec
scas
sub
adc
pusha
les
addl
cli
xchg
mov
mov
jne
inc
sbb
ljmp
jb
pop
dec
pop
out
daa
out
inc
sub
lahf
ja
nop
and
scas
nop
cmpsb
ljmp
dec
jmp
fbstp
loop
xchg
repnz
pop
xor
xchg
lahf
fiaddl
insb
xchg
add
vpaddd
adc
mov
leave
jmp
or
leave
add
sub
jmp
dec
jae
lret
mov
jo
fdiv
ret
addr16
adc
out
jmp
int3
pop
cli
push
dec
popf
and
sub
into
icebp
xchg
imull
sub
fbld
rorl
rorl
loope
add
sub
or
dec
push
subb
jb
sub
in
jg
pop
adc
daa
add
sti
add
jge
cld
push
xchg
insl
mov
mov
scas
adc
shll
jmp
mov
push
push
mov
gs
and
dec
loope
jg
push
push
dec
cmp
or
adc
adc
stos
inc
push
push
push
pop
in
cltd
outsb
pop
and
adc
ljmp
jbe
and
cmc
add
in
gs
xor
movsb
and
sub
jns
push
dec
and
mov
not
mov
and
sbb
jle
imul
pop
arpl
fsubrp
add
addr16
mov
jl
in
cli
add
mov
sbb
mov
and
and
jns
or
std
clc
xchg
adc
out
test
jecxz
jo
pop
mov
pop
jmp
add
push
lds
jnp
push
add
rorl
int
insl
dec
clc
add
mov
pop
jmp
xor
js
push
push
sub
add
jmp
sbb
or
adc
push
pop
popf
lods
inc
xlat
and
mov
fwait
into
jle
cmp
dec
add
sbb
mov
mov
xchg
cmp
and
sub
fisubrl
or
mov
lds
stos
fnstenv
inc
adc
dec
pop
add
stc
repz
mov
jle
push
loop
popf
adc
lret
push
push
loopne
jp
outsl
aad
push
add
jmp
ret
mov
aam
pop
pop
mov
sub
pop
dec
psllq
je
jnp
jmp
roll
clc
and
dec
dec
adc
mov
pop
ljmp
mov
aas
mov
xchg
sbbl
arpl
dec
out
rol
jge
cs
imul
add
insb
popa
or
dec
mov
ret
cld
mov
and
mov
imul
scas
jmp
or
xchg
lods
cmp
pop
lret
or
add
outsl
repz
neg
std
push
xchg
nop
std
enter
pavgw
push
jo
push
and
fimull
mov
sub
xor
and
or
and
icebp
push
jbe
sbb
add
iret
out
fdivs
cmp
mov
sbb
xchg
decl
sub
xchg
int
lock
mov
xlat
cmp
outsb
add
mov
stc
repz
add
in
push
or
das
mov
outsl
add
pop
pusha
js
mov
mov
xchg
call
sub
push
lcall
sahf
dec
mov
popf
es
nop
jge
pusha
xchg
jb
and
notl
or
nop
stos
add
sbb
xchg
nop
dec
movsl
inc
inc
imul
aas
sub
push
pop
dec
cmpsl
cmpsl
dec
ljmp
inc
inc
sbb
sbb
cmpl
incl
add
push
stos
push
xchg
push
bnd
push
pop
pushl
sbb
leave
sbb
push
dec
sub
loopne
test
cmpsl
or
int
dec
and
jle
and
bound
cmpsb
sahf
inc
out
std
subb
mov
ret
pop
loope
inc
hlt
inc
orl
sub
pop
fadds
mov
jno
jecxz
or
add
sub
mov
out
add
push
test
or
jg
popf
mov
cmc
jo
pop
pop
sub
sar
int
inc
cmp
cmp
in
pop
add
mov
insb
xor
push
push
mov
jnp
in
xlat
jp
push
sub
adc
mov
xchg
adc
xlat
push
or
jo
mov
outsb
push
outsb
shlb
add
aaa
xor
xor
xorl
popa
lds
cmp
or
fisttpl
test
pop
push
cmp
pop
sub
flds
xchg
cwtl
sub
push
jmp
inc
dec
xchg
or
add
push
xchg
jne
xchg
mov
pop
cwtl
pop
dec
pop
popf
rorl
push
push
jmp
jmp
std
push
pop
mov
mov
ret
xor
jle
mov
add
cmp
inc
outsb
fdivr
mov
adc
xchg
jb
cmp
and
jbe
sbb
in
notl
movsl
fmuls
mov
ja,pt
xor
mov
nop
jno
mov
add
jnp
in
add
dec
sbb
jae
test
push
pop
jmp
dec
outsb
dec
das
mov
loope
adc
lock
inc
jae
dec
dec
push
cmp
push
mov
mov
lock
pop
pop
cli
jg
ficomps
adc
xor
xchg
sub
jno
xchg
pop
les
fsubrl
pop
mov
mov
pop
mov
mull
or
add
jne
xchg
pop
adc
add
enter
push
inc
xchg
sarb
out
mov
sub
jb
daa
aam
xchg
int3
lds
push
add
mov
nop
mov
sbb
or
sub
jg
push
pushf
jae
xchg
test
test
pop
repz
inc
jmp
out
push
push
cmpb
cli
mov
clc
jmp
push
adc
in
dec
adc
sbb
out
adc
mov
or
movhps
jle
icebp
stc
cmpsl
add
dec
addl
outsl
or
sbb
jmp
jmp
out
in
dec
stos
push
shl
rcrl
xchg
pop
cmp
lcall
es
adcb
push
pushf
pop
and
idivl
cmp
cwtl
rorl
cmp
add
addb
push
pop
inc
push
jo
fstps
mov
pop
xchg
arpl
in
dec
dec
stos
inc
insl
xor
and
out
sub
and
test
test
inc
lahf
orb
shlb
shrb
cwtl
enter
or
adcl
into
lret
jmp
jecxz
ror
rcrl
cmpsb
mov
jo
pushf
lcall
imull
fdivs
inc
cmp
and
or
repz
sub
out
xor
xor
jmp
mov
dec
sub
sahf
and
ds
scas
lock
or
dec
rcrl
jns
jmp
fs
mov
pop
neg
add
leavew
and
stos
dec
push
mov
pop
or
lock
push
sub
xchg
shrb
aas
pusha
js
inc
push
mov
mov
fs
or
not
or
push
xor
add
adc
enter
push
ficoml
inc
add
pushf
pop
gs
fadds
sbb
push
cmpsb
or
jge
jno
dec
xchg
jbe
push
pop
lcall
rcl
cmpsl
push
dec
add
xor
sub
dec
clc
loopne
jmp
adc
sub
sub
aad
sub
or
or
imul
cmpsl
xchg
ljmp
in
push
sbbl
mov
and
stc
adc
cmp
and
icebp
sbb
jmp
incb
out
mov
inc
and
adc
push
dec
sub
and
pop
pop
add
ljmp
inc
repz
mov
imul
jle
push
push
push
push
arpl
aam
stos
xor
push
push
dec
add
jle
outsb
pop
sti
sub
push
jo
mov
xchg
cli
inc
gs
rolb
rcrl
xor
push
pop
insl
into
lods
rcr
dec
and
test
pop
in
loopne
push
out
jg
sub
cld
jns
and
loope
lock
sub
loopne
cmp
movsl
js
jbe
sub
cwtl
cld
stos
dec
lahf
call
xchg
cmpsb
ret
and
repz
push
mov
fwait
ret
or
and
rcrb
mov
aad
sahf
mov
enter
faddl
mov
xor
add
sub
clc
pushl
add
rclb
das
add
inc
inc
sbb
pop
dec
xchg
stc
mov
stc
inc
aaa
sub
or
test
xor
or
push
jmp
in
mov
lret
ja
jno
js
cmp
popa
push
xor
jb
pop
scas
pop
dec
and
pop
ja
inc
lods
cltd
and
idivb
jnp
fwait
dec
popa
adc
or
push
and
pop
add
out
mov
sub
lock
pop
jae
push
dec
jb
add
adc
ret
lahf
add
jmp
push
test
rorl
fst
xlat
cld
rclb
add
cld
scas
fcom
sub
test
mov
dec
scas
fidivrl
and
jb
int
jnp
sub
or
outsb
les
push
js
rcrl
test
add
imull
mov
ret
setnp
jb
out
mov
xchg
adc
inc
lcall
push
ret
insl
sub
add
ficoml
jnp
mov
xlat
jo
pop
in
inc
push
test
push
lods
push
aam
xchg
adc
pop
into
add
pop
jmp
clc
xor
je
adc
sahf
iret
out
jmp
and
aad
add
ret
lcall
in
inc
pop
jae
pop
xchg
mov
sub
lods
pop
inc
jg
loop
xor
arpl
sub
mov
jmp
sub
mov
ja
in
mov
rcrb
mov
sbb
out
ja
mov
ficomps
sti
pop
add
nop
xor
xchg
jne
mov
incl
enter
pop
pop
imul
clc
sbb
loop
add
push
mov
mov
mov
mov
adc
repz
push
je
sahf
xor
loope
insl
cmp
pop
mov
jp
pop
sub
pusha
mov
insl
or
jmp
insb
xchg
lods
dec
add
sbb
push
jle
cltd
xchg
add
push
sub
idivb
mov
sbbl
jge
lds
ljmp
shll
les
adc
fdiv
lds
push
pcmpeqw
pop
test
or
aaa
xchg
insl
lea
add
call
test
jno
sbb
mov
in
add
jmp
xchg
jbe
or
lods
push
sub
decl
adc
jo
xor
or
push
mov
popa
push
or
outsl
dec
xor
push
jp
or
adc
loopne
mov
aas
jmp
lock
adc
fs
inc
xor
cmp
xchg
in
test
push
and
loop
push
les
push
lahf
out
sub
inc
imul
movsb
jg
inc
mov
adc
pop
in
test
cmp
imull
or
arpl
jnp
fs
mov
rorl
mov
cmc
mov
pop
shlb
mov
lret
out
xchg
dec
in
push
jnp
lea
dec
pop
fists
notl
pop
fistps
repnz
jmp
pop
push
int3
xchg
out
aad
pop
pop
and
icebp
subb
pop
lret
xor
decb
push
add
dec
or
pusha
loope
dec
jo
sti
bound
mov
mov
ja
xor
push
pop
push
push
mov
orb
ds
stc
adc
pop
push
mov
dec
test
shl
and
xchg
sub
rcrb
jp
mov
adc
leave
jae
pop
cmpsl
ds
mov
dec
jmp
sub
outsb
mov
sbb
inc
popa
mov
in
inc
or
inc
cs
lods
or
jecxz
out
pushf
fcmovbe
push
lret
cwtl
cmp
inc
pop
push
pop
push
int
or
fsts
cmc
loop
pop
in
dec
push
and
sub
mov
stos
arpl
pop
mov
xchg
or
cmp
mov
aas
fidivrl
and
inc
bound
syscall
adc
jmp
pusha
lret
push
jb
sub
or
outsb
jecxz
jae
imulb
lods
xchg
add
add
add
hlt
ss
mov
or
scas
push
and
dec
imul
bnd
mov
xchg
stos
mov
add
adc
mov
add
or
enter
push
mov
in
push
lock
mov
inc
push
inc
or
pop
add
jmp
inc
xor
xor
pusha
or
pextrw
adc
mov
lock
add
or
push
cmp
out
jle
jl
test
icebp
mov
call
test
and
add
add
xchg
test
rorl
fnstcw
inc
pop
jb
dec
test
mov
out
nop
xchg
push
mov
leave
mov
mov
loope
cmc
pop
dec
imull
loope
das
rorl
sbb
jmp
mov
sub
mov
pop
js
mov
push
mov
test
div
dec
push
icebp
aad
lgs
pop
mov
xchg
je
xchg
xor
inc
jne
push
ret
xor
or
dec
pop
dec
fildll
or
add
add
dec
cmp
mov
push
push
sub
das
lcall
xor
sbbl
aaa
add
fwait
popa
pop
cmp
jmp
xor
sbb
call
ds
pop
jnp
in
xchg
cli
mov
pop
or
rcll
int3
daa
jo
or
mov
jns
sub
pop
pop
push
fs
cli
push
mov
jg
mov
inc
rolb
push
scas
adc
arpl
popf
es
testb
mov
push
mov
sbb
xchg
pop
shr
xchg
push
xor
cmp
lret
cli
push
ficoml
inc
jmp
mov
andl
pop
jmp
and
popa
xor
lea
incl
add
rclb
cli
inc
stc
sub
mov
shrl
pusha
shr
and
daa
xchg
push
mov
cs
sbb
dec
add
sbb
xor
xor
sub
and
jne
cmp
mov
int3
dec
mov
enter
in
mov
pop
pop
popa
push
lret
sbbb
jo
hlt
and
dec
add
mov
lea
imul
xor
and
in
fsubrs
out
cmp
push
bound
or
test
stc
pop
lods
sub
mov
mov
testb
loop
pop
xchg
push
sbb
into
fidivrs
and
xchg
adc
dec
dec
jbe
xorl
jno
hlt
pop
aas
sbb
dec
mov
test
sbb
sub
mov
neg
lock
cwtl
cli
dec
fldl
leave
push
pop
mov
mov
popf
mov
addl
pop
cld
pop
dec
lods
mov
xchg
mov
xchg
add
xorl
mov
sbb
gs
xor
divl
mov
mov
mov
inc
cld
rorl
mov
mov
arpl
aaa
adc
pop
pop
add
inc
cmp
sbb
pop
pop
xor
jmp
mov
push
sub
scas
fsubr
daa
std
push
inc
mov
inc
pop
sbb
ds
outsl
repnz
cmp
stc
lea
aam
fmuls
inc
push
loope
mov
cltd
imul
sub
xchg
inc
popa
push
daa
call
adc
idivb
lret
push
pop
in
jg
push
jmp
push
sbb
inc
or
mov
out
movsb
sbb
or
imul
add
cmp
das
jmp
add
adc
shrl
mov
dec
mov
push
imul
push
inc
lods
mov
and
jnp
jbe
mov
shll
xlat
repz
dec
lahf
pusha
sub
adcb
inc
addl
fs
fidivs
add
or
mov
popf
jno
push
adc
mov
jle
or
mov
pop
scas
dec
jne
bound
push
xor
popf
rorl
push
mov
jnp
jl
xor
sub
inc
xlat
push
add
in
lds
jp
push
add
popf
or
mov
mov
aad
or
push
mov
add
andl
int3
or
inc
fs
dec
sti
mov
add
cmp
pop
xlat
cmp
cmp
push
fcmovu
ror
sub
aas
into
inc
mov
popf
xchg
mov
stos
aas
jno
mov
test
inc
and
das
out
jne
repnz
dec
or
mov
add
or
sbb
call
lret
dec
in
mov
shll
lods
outsb
pop
pop
adc
mov
or
xchg
icebp
into
inc
mov
adc
cmp
icebp
add
pop
push
add
adc
iret
adc
mov
lock
sub
scas
gs
dec
pop
scas
stos
fs
dec
rcrb
pop
dec
in
or
xchg
dec
das
gs
pop
out
jge
pop
xor
sbbb
addl
cmp
push
sub
rcrl
xor
in
push
add
xchg
sub
mov
lock
adc
push
and
xchg
lret
adc
push
mov
sub
pushw
jmp
inc
outsb
push
mov
or
dec
jp
shll
mov
shlb
rcrl
nop
cmpsb
popa
jp
add
or
std
add
int
les
insb
cmp
dec
mov
jmp
inc
in
jmp
ja
push
pop
lods
inc
push
mov
pop
jmp
xchg
pop
mov
and
push
cmp
sar
cmp
mov
xor
push
pop
mov
xor
in
mov
fstps
js
adc
rorb
mov
loop
dec
xor
rorb
popa
aas
shrl
xor
cmc
rcl
loope
cli
mov
mov
xlat
sub
in
sahf
dec
jmp
mov
push
mov
xchg
sbb
in
pop
mov
int3
mov
sub
cmp
push
pusha
sarl
imul
xor
addl
aam
adc
mov
mov
dec
xor
cmpsb
lahf
hlt
inc
inc
mov
test
inc
rclb
jmp
lcall
outsl
inc
jmp
sub
cwtl
fs
cmp
xchg
insb
popf
inc
loop
sub
sub
sub
push
pop
push
xor
cmp
negl
inc
or
inc
add
and
pop
ds
jp
pop
xchg
jmp
gs
adc
push
sahf
or
dec
test
xor
push
cmc
xchg
in
add
ss
sbb
movsl
pop
or
sbb
pop
push
imul
notl
bound
ss
adc
mov
mov
fcmovne
ljmp
pop
push
or
and
mov
lahf
push
or
insl
imul
cli
out
popl
fs
imul
dec
icebp
add
in
add
insl
adc
jge
push
mov
jmp
fstps
push
mov
pusha
fcmovnb
pop
das
fcoms
or
adc
arpl
pop
cmp
add
fiadds
and
mov
xchg
and
mov
sbb
fisttpll
clc
dec
ljmp
mov
xchg
shll
add
cli
xor
dec
roll
xchg
cmpb
cwtl
sbbb
jge
lret
sbb
mov
xchg
lock
pop
dec
fildl
adc
or
mov
pop
lahf
call
addr16
add
mov
repnz
pop
shr
fstps
push
mov
sbb
mov
mov
addb
dec
cmp
xchg
push
jns
xchg
cwtl
inc
push
jmp
mov
cmpb
not
xchg
repz
sub
adc
add
and
call
lods
push
mov
pusha
mov
cmpsl
jp
cli
jp
jo
sbb
inc
cmp
and
add
inc
shl
addr16
jmp
shr
jp
mov
vcvttps2dq
stos
mov
ljmp
xchg
mov
fstpl
xor
add
in
cli
lods
popa
pop
movsb
sbb
inc
jmp
xor
or
leave
das
or
ss
cwtl
in
mov
jmp
das
push
mov
push
inc
iret
pop
in
jmp
mov
clc
loope
add
mov
repz
push
jb
pop
hlt
xchg
cmpsb
xchg
cwtl
mov
in
decb
xorb
jl
mov
daa
dec
lods
push
mov
pop
xlat
imul
push
addl
xchg
mov
orb
push
repnz
test
xchg
loope
les
js
mov
lds
mov
inc
jbe
lock
add
sub
push
add
mov
mov
mov
add
jmp
push
les
orb
fbstp
pop
adc
push
hlt
in
inc
push
jmp
adc
mov
pop
pop
dec
sub
add
or
loopne
sti
stos
push
popf
fidivl
scas
mulb
jecxz
add
in
ret
and
mov
sbb
fnsave
add
insl
and
ret
or
add
and
dec
dec
lods
mov
jmp
mov
add
lret
test
ss
ret
and
das
sbb
int3
aaa
cs
or
add
add
pusha
dec
sub
out
pop
sti
sbbb
push
es
lds
enter
jno
fs
loop
icebp
lahf
and
dec
jecxz
mov
pop
imul
jg
addl
xor
bnd
dec
add
or
loope
sbbb
mov
xchg
sub
cmpsb
adc
aas
mov
dec
dec
and
pop
pop
mov
stos
gs
adc
pop
xchg
adc
mov
addb
mov
cmpsb
bound
and
push
imul
and
fadds
or
es
xchg
out
add
mov
repnz
repz
pop
push
nop
jl
pop
addb
call
fcomi
fldenv
scas
sub
out
fldenv
out
ljmp
nop
xchg
mov
adcb
push
push
adc
adc
cmc
mov
pop
pop
cli
fcmovbe
nop
mov
clc
movsl
jmp
loope
divb
dec
sbbl
add
push
out
mov
sarb
lahf
adc
pop
jg
cmp
shlb
negl
push
cmp
mov
andb
xchg
push
scas
test
xchg
cmp
sbb
adc
mov
inc
cs
and
cmp
repnz
shlb
xor
pop
sbb
xor
ret
insl
cmp
xor
stc
jge
cli
orl
mov
pop
add
push
dec
mov
jmp
lods
mov
test
mov
jg
nop
or
push
imul
stos
cmp
cmpl
sbbl
gs
and
daa
add
adc
mov
push
adc
adc
push
imul
loopne
inc
jmp
ja
inc
cmp
dec
mov
stc
pusha
fmuls
outsb
cmp
push
loopne
push
pop
and
cld
movl
shlb
adc
xchg
sbb
iret
jne
push
jmp
add
mov
jnp
push
inc
pushf
add
xchg
lcall
jg
pop
jnp
popa
push
and
sub
xchg
xor
xchg
or
dec
shlb
xchg
js
add
shlb
mov
sub
dec
cmpsb
or
xchg
cld
xchg
jge
mov
in
jmp
stos
sahf
jmp
in
pop
pop
push
test
cltd
pushl
mov
lods
cmp
mov
popa
mov
jmp
push
pop
or
in
aad
inc
inc
mov
xchg
outsl
ss
daa
rcrl
out
add
ret
adc
push
or
andb
inc
adc
push
sbb
sarb
testl
jl
jbe
xchg
inc
dec
mov
pop
jecxz
push
push
add
mov
or
cmp
jmp
jl
push
add
fistpl
mov
mov
repnz
mov
or
mov
sub
pop
pop
ja
cltd
je
shlb
sub
pop
sbb
rcl
push
push
jbe
add
mov
sbb
not
push
mov
into
addb
pop
mov
jbe
cmp
pop
lahf
mov
mov
xor
and
cmp
adc
push
or
insl
cmpsb
cmc
inc
mov
inc
xchg
pop
xchg
push
mov
jne
mov
mov
dec
mov
xchg
leave
and
sub
gs
cli
pushf
or
xchg
xchg
mov
push
pop
sub
fucomi
sub
cli
push
jae
adc
jbe
mov
jecxz
rclb
jmp
xchg
inc
xchg
inc
and
cmp
push
pop
adc
pop
dec
ja
or
les
mov
sub
jno
clc
call
aaa
jmp
add
add
shr
pop
or
jno
incl
lea
mov
push
pop
push
lds
lea
mov
push
mov
enter
pop
xor
ljmp
sub
cmp
push
mov
imul
dec
cmp
xor
cmp
add
push
mov
cld
pusha
mov
aaa
or
push
sub
or
or
pop
pushl
sub
pop
stos
dec
mov
xor
ljmp
xchg
adc
mov
xchg
lcall
pop
xchg
mov
into
hlt
mov
pop
jmp
aad
mov
mov
lahf
and
loopne
adc
loop
pop
outsl
shll
outsl
int3
std
clc
mov
nop
push
cltd
mov
jmp
nop
mov
in
sub
mov
sbb
sub
add
push
scas
movsl
mov
js
push
out
and
fcomp
add
lret
int
repz
sub
xchg
cmp
fs
mov
jb
jmp
mov
ljmp
stos
movsl
psadbw
inc
pop
push
add
and
outsb
nop
mov
add
cmp
dec
test
in
pusha
adc
loop
cmp
add
or
lods
mov
clc
sti
test
jno
leave
push
ss
ljmp
sarb
add
popa
ljmp
xlat
cmp
lods
cmp
fists
pop
ret
fiadds
je
popa
push
enter
std
insb
int3
fldcw
adc
adc
icebp
rorb
in
or
loopne
or
cmp
cwtl
mov
xor
fisttps
mov
stos
aad
stos
mov
xor
dec
jecxz
cmp
mov
lss
mov
mov
adc
cli
xchg
test
fdivr
mov
pop
mov
xor
xor
add
negb
or
pop
lahf
shlb
stc
idivb
xlat
xor
iret
or
and
add
xchg
push
into
adc
or
dec
add
inc
cltd
cmp
mov
cmp
stc
push
enter
push
in
add
xlat
inc
lds
movsl
inc
mov
dec
in
das
jne
xor
add
and
in
faddl
cmp
or
ret
xchg
fcmovb
aaa
jecxz
sub
mov
test
lea
mov
pop
xchg
push
fs
fstps
jo
sbb
cmp
sub
cmp
xor
adc
bound
pusha
dec
or
add
add
or
inc
lds
xchg
je
stos
fsubrs
xchg
xlat
adc
lock
repnz
insb
mov
xchg
and
pop
push
or
dec
cmc
addl
sti
and
movsl
cmp
icebp
or
adc
imul
add
fwait
sub
loope
inc
lcall
jbe
cmp
out
pop
in
insl
lret
xchg
movsl
aad
add
dec
jle
out
fs
sti
imull
gs
add
dec
xor
outsb
xlat
pusha
cmp
cmpsb
push
fnstsw
repz
icebp
and
mov
adc
and
addb
arpl
push
jo
push
push
dec
pop
add
sarb
lods
fsubr
sub
jge
daa
push
mov
push
dec
add
jmp
sub
stos
add
sahf
adc
and
xor
adcb
dec
or
or
sub
add
popf
pushl
pop
in
cwtl
ficoms
and
mov
mov
sbb
inc
dec
inc
jmp
int
or
cmp
data16
pop
fiadds
in
xchg
test
cmpsl
ret
jne
jb
test
bnd
jmp
push
lock
arpl
dec
out
or
cmp
mov
filds
fcmovu
push
ja
mov
pushf
aam
mov
adcb
pop
pop
aam
push
mov
adc
into
jmp
push
push
xor
jmp
sbb
jb
mov
mov
sub
xor
or
jbe
inc
mov
ret
bound
pop
clc
cmc
dec
and
dec
xor
icebp
cmpsb
sahf
push
les
cmc
jne
sbb
lret
clc
xchg
std
sbb
lods
xchg
popa
test
xor
jp
cld
stos
aad
sub
and
mov
jo
cmp
jne
int3
rcll
jne
int
sub
repz
xlat
dec
decb
and
jmp
jg
fsts
jo
loopne
sub
mov
std
insl
mov
mov
dec
inc
add
mov
mov
aad
nop
sub
cmpb
into
cwtl
inc
adc
dec
add
jo
ror
adcb
pusha
call
push
xor
mov
jo
in
mov
xor
cmpsl
push
mov
rcr
pusha
pushf
leave
inc
pop
loop
pop
mov
scas
jge
cmp
popl
enter
and
popf
jmp
jmp
ljmp
sub
int
xchg
adc
xor
cmp
mov
out
dec
add
loopne
xchg
in
arpl
iret
xchg
nop
lock
fs
je
repnz
cmp
dec
mov
jne
dec
jnp
subl
lret
jecxz
pop
negl
fisttpl
nop
xor
mov
leave
fsubrp
aad
push
or
faddl
jmp
inc
dec
stos
add
add
addl
shl
add
outsl
add
in
clc
and
loop
push
jmp
je
push
push
push
inc
pop
jmp
mov
dec
fs
sbb
pop
cmp
push
addr16
cmp
daa
mov
notl
imul
pop
cmp
xor
and
push
inc
pop
sub
sbb
iret
push
add
sbb
xorb
filds
adc
pop
mov
sbb
sub
or
mov
mov
sub
mov
mov
adc
dec
and
jmp
mov
pop
rol
or
push
add
gs
push
adc
sub
mov
arpl
push
dec
inc
bound
lock
mov
negl
loop
cmp
push
add
adc
sub
aam
jmp
flds
push
scas
lret
movsl
push
stos
popa
imull
into
jg
mov
pop
out
mov
inc
sub
mov
test
cmpsb
pop
sub
icebp
out
xlat
rclb
xor
add
cmp
pop
jmp
cmp
jmp
repz
xchg
jno
cs
dec
js
stc
mov
mov
imul
xor
stos
add
sub
mov
insb
shll
add
push
cmp
adc
mov
mov
sub
pushf
add
out
adcl
add
loopne
std
cli
rol
add
pop
movsl
test
lods
ds
inc
adc
cmpsb
and
mov
rcll
sub
add
call
cwtl
sti
xor
fstps
lea
pop
cs
xchg
mov
stc
dec
cmp
push
mov
es
outsl
mov
addb
push
ror
inc
insl
pop
inc
inc
dec
ret
inc
outsl
or
jl
xor
cmc
arpl
add
loopne
nop
jne
lds
or
push
scas
cld
add
ljmp
inc
jns
mov
push
notl
test
sbb
xor
js
push
movsb
into
das
jp
pop
xchg
or
aad
testl
cmpsb
fisttps
add
pop
jl
jmp
fisubl
xchg
xchg
mov
jmp
add
shll
int
dec
inc
jecxz
add
shlb
jo
inc
sub
imul
addr16
in
or
ss
add
cmp
pop
add
push
pusha
insb
mov
push
out
sbb
sbb
call
cmpsl
cmp
les
mov
shrb
push
push
lcall
vucomisd
dec
adc
push
dec
mov
add
in
mov
int3
dec
js
les
mov
add
sub
xchg
or
jnp
mov
arpl
dec
jmp
mov
push
add
fildl
mov
cmp
sub
jmp
mov
xchg
and
sbb
pop
ja
div
fmulp
inc
pop
mov
pop
scas
imul
movsb
add
pop
push
mov
inc
inc
hlt
incl
pop
sub
mov
mov
mov
jmp
out
ret
push
loopne
xlat
shr
mov
sub
sbb
adc
pop
and
xor
shlb
dec
jecxz
lods
push
stos
adc
pop
lods
cmc
pcmpeqb
sbb
mov
mov
xor
mov
dec
imul
push
xor
xchg
insb
stos
outsl
in
rorl
inc
cmc
add
ja
dec
and
jmp
sub
stc
pop
pop
add
add
stc
and
divl
lods
std
cmp
inc
jbe
outsl
xor
je
lret
cmp
mov
xchg
and
loop
inc
adc
shll
mov
xor
xchg
push
testl
lods
adc
mov
fs
add
or
fsub
aaa
adc
mov
sub
inc
pop
add
mov
mov
pop
rorl
mov
cwtl
clc
repz
add
lods
inc
fidivrl
add
inc
mov
pop
mov
loopne
outsl
or
subl
sbb
adc
jle,pt
jne
dec
std
dec
hlt
jg
mov
or
pop
ds
add
stos
popf
dec
push
ljmp
dec
and
loope
add
fiaddl
xor
mov
dec
bound
fcoms
add
push
cmpb
addb
mov
jno
push
adc
ja
pop
adc
in
lret
xor
faddl
push
jmp
test
add
out
push
sub
jne
add
sahf
nop
inc
jbe
and
mov
jae
je
mov
clc
pop
pop
fstpt
mov
fstps
scas
or
ljmp
mov
sub
adc
mov
js
repnz
outsl
int
inc
ret
test
popf
addb
mov
hlt
push
push
mov
test
dec
lods
inc
test
pop
out
pop
sub
add
xchg
adc
js
lods
or
stos
gs
stos
sbb
fimuls
inc
and
das
dec
cmp
push
stos
sub
sub
cmp
adc
sti
sbbb
jmp
insb
jl
pusha
jnp
add
dec
lret
mov
ljmp
xchg
pop
lods
ret
and
adcl
sbb
imul
jmp
mov
ja
in
jb
test
scas
sub
lock
sub
dec
outsl
push
sub
and
lret
lods
jg
and
ljmp
push
xor
cmpb
notb
sub
or
iret
prefetch
imul
cmp
xchg
add
jbe
pushf
cmp
push
jo
cmpsl
xorl
repnz
daa
inc
jnp
push
add
jmp
jne
cmp
hlt
and
dec
loop
jns
or
inc
in
push
jle
or
or
shrl
in
jg
adc
push
pop
or
jnp
movsl
jmp
inc
pop
or
daa
iret
push
pop
jne
mov
stc
cmp
inc
xor
xor
xchg
xchg
cmc
cld
pop
xor
dec
pop
faddl
push
add
cld
pop
mov
xor
mov
pop
jne
in
pop
jmp
ficomps
jb
jl
mov
fistps
adc
sub
add
pop
xchg
and
ret
mov
jmp
sub
je
inc
das
test
pop
push
adc
inc
dec
or
call
incl
outsb
add
ja
test
jmp
aas
lods
sbb
pop
iret
sbbb
add
xchg
sub
xor
jns
xchg
outsl
pop
addl
cmp
aas
out
hlt
std
adc
jno
orb
daa
mov
add
push
sbb
arpl
lods
pop
mov
dec
daa
and
pop
xchg
mov
adc
sbb
inc
mov
gs
int
jne
ja
rcrb
int
andb
push
sub
mov
mov
push
and
mov
rcll
adcl
shl
jecxz
push
sub
andb
dec
add
pop
lock
dec
add
pop
dec
popa
pop
imul
pop
add
sub
sub
jle
xlat
push
mov
lret
pop
aad
arpl
cmp
add
std
shlb
in
out
add
push
push
mov
mov
jmp
mov
ds
push
jae
xor
mov
sbb
mov
xchg
jp
pusha
mov
nop
sub
add
or
orb
push
jo
movsbl
pop
xchg
aad
cmp
mov
push
or
pop
jl
pop
push
xorb
es
dec
icebp
add
negl
pusha
inc
xchg
mov
xor
pop
dec
push
sarl
hlt
and
imul
js
out
ret
lock
and
aad
arpl
int3
out
roll
outsl
je
mov
stos
icebp
add
mov
shufps
and
lock
fimuls
push
lock
add
mov
mov
outsl
nop
icebp
push
imul
test
dec
pop
test
dec
inc
pop
into
jle
inc
sub
sub
mov
or
mov
pop
cwtl
xor
cmp
or
enter
add
imul
scas
inc
push
jmp
dec
sub
mov
test
sbb
loop
mov
pop
push
aam
imul
movsl
xor
pop
dec
fdivl
mov
add
addl
das
jmp
mov
pop
enter
adcb
cwtl
daa
mov
outsl
push
cmp
adc
js
pop
pop
imul
rolb
and
mov
loopne
popf
inc
popa
add
sub
jne
das
jmp
bound
bound
push
mov
mov
repz
leave
cltd
scas
test
jnp
ss
jno
and
pop
lods
adc
dec
jmp
sti
mov
xor
cwtl
jg
pop
mov
dec
loop
push
shll
les
inc
aas
lea
aad
ds
xor
xor
pop
sub
mov
cltd
imul
push
das
mov
cmpsb
xor
pop
aas
mov
mov
cmpsb
cmc
adc
rcll
loop
push
jb
insl
sub
pop
inc
out
testl
add
push
mov
pop
sub
xchg
inc
lods
xorb
cwtl
push
jo
or
stc
ljmp
sbb
ljmp
scas
sbb
sub
mov
daa
dec
xchg
popf
add
dec
das
pop
push
jo
cli
mov
call
push
jo
jg
xor
xchg
not
push
push
pop
dec
pop
mov
call
add
jae
xchg
mov
mov
add
mov
lret
jmp
mov
xchg
rolb
mov
sub
rcrb
pop
push
js
fiadds
adc
jnp
jae
push
enter
dec
rorl
lret
loop
and
pop
xor
cltd
in
scas
scas
imul
test
xchg
push
inc
aad
mov
xchg
jnp
or
inc
dec
jle
and
scas
leave
lds
and
in
aaa
lds
sub
sub
orb
and
jle
or
cld
je
cwtl
out
pusha
cmc
sub
out
add
add
or
call
cli
push
jl
sbb
xchg
scas
jge
call
sahf
dec
lea
jns
jo
xchg
or
add
cmp
or
adc
loop
inc
jge
pop
cs
jbe
hlt
dec
sbb
sub
or
sbb
loopne
int
add
xor
cmp
ds
adc
addr16
pop
add
add
pop
jmp
mov
sbbb
inc
or
ret
call
or
jl
dec
xchg
orb
fstpt
fcmove
sub
jmp
lret
xchg
xor
or
pop
push
mov
test
jg
and
mov
scas
adc
sbb
out
shlb
mov
sub
add
incb
sbb
mov
sbbb
out
out
adc
xchg
fnsave
add
push
mov
mov
in
add
adc
mov
jne
jbe
or
pop
inc
adc
add
xor
mov
jbe
xor
push
xor
sbb
rcl
mov
and
insl
push
dec
mov
mov
test
stc
sub
adc
mov
jne
and
and
add
pop
jg
xor
shll
stos
frstor
mov
out
and
push
sub
cmp
fs
jmp
mov
ror
movl
pop
push
shr
subb
les
jecxz
sub
data16
jo
sbb
test
push
imul
sub
ror
push
mov
xor
push
jo
nop
mov
pop
loopne
jmp
xor
cmp
rorb
mov
clc
mov
mov
cmp
pop
xchg
add
jnp
es
daa
popa
and
xor
mov
loop
sbb
shlb
test
jge
in
loopne
cmp
rcll
lea
sub
add
in
mov
outsb
dec
pop
add
addb
jp
pop
dec
dec
inc
add
pusha
arpl
iret
inc
and
add
sub
imul
cmpsb
cmp
jne
pop
mov
add
daa
test
jecxz
mov
outsl
fsubr
cvtpi2ps
scas
data16
pop
push
test
mov
and
pop
jne
in
and
inc
pop
sbb
sti
add
inc
lea
rorb
dec
imul
add
push
add
add
pop
push
neg
sub
repnz
daa
lret
push
hlt
dec
pop
aaa
and
push
push
je
jbe
adc
loop
cmpsl
mov
je
aad
jnp
andl
rorl
iret
jns
scas
movaps
test
adc
sub
mov
xlat
push
cmp
jecxz
adc
cmpsb
in
pop
inc
dec
mov
adc
mov
out
mov
dec
pop
mov
mov
ljmp
or
orb
hlt
xor
dec
or
pop
push
pop
test
sub
mull
push
iret
jle
or
dec
mov
out
cmp
dec
test
stos
lods
ror
shll
xchg
pop
xor
mov
inc
cwtl
push
add
inc
scas
loopne
popf
inc
lods
out
add
aam
push
sub
pop
jg
sub
or
imul
shrb
lret
fildll
add
and
push
or
sahf
xor
mov
sub
sarl
and
xchg
xor
stc
mov
jg
mov
jnp
inc
pusha
mov
sub
sbb
rcrb
push
pop
pop
jmp
sti
mov
inc
mov
mov
xor
jge
adc
jno
dec
xchg
lret
or
and
in
testl
inc
scas
mov
and
cli
aam
gs
call
sub
shrl
mov
mov
mov
sbb
xchg
test
test
arpl
cli
dec
dec
dec
pop
mov
inc
rcl
insb
jno
pop
push
sarb
out
outsb
xchg
std
xchg
lds
outsb
addr16
mov
call
mov
mov
fstpl
sub
or
push
cwtl
lahf
adc
inc
xorb
xchg
add
push
adc
pop
pushf
push
js
jno
daa
xor
scas
or
mov
mov
push
pop
clc
or
or
add
adcb
lock
popf
test
xor
xor
dec
adc
mov
addb
and
inc
insb
and
fistpl
or
or
push
std
adc
sbb
mov
pop
mov
xchg
push
add
dec
xor
adc
inc
and
fiaddl
test
push
std
orl
test
test
sbb
lea
rcll
mov
fldenv
mov
daa
xchg
dec
sub
add
shl
push
jg
cmp
insl
or
fcoml
cmc
or
cmc
nop
mov
cmp
cmp
inc
xchg
jnp
mov
lods
mulb
sbb
daa
cmp
aad
mov
adc
mov
lds
jno
or
mov
enter
lcall
xor
cmp
adc
inc
cmp
xchg
pop
push
cwtl
jmp
leave
add
sub
lods
in
push
push
fstl
push
jmp
pop
lods
dec
les
mov
mov
mov
sub
cmp
push
jne
jmp
lds
sbb
fucomi
sbb
scas
mov
pop
mov
jo
jmp
push
push
mov
add
nop
mov
mov
vpaddw
nop
jmp
jnp
and
and
pop
aaa
adc
and
cs
add
adc
or
aas
dec
and
aaa
stc
jb
inc
add
xchg
cmpsl
push
mov
jae
dec
iret
cmpl
xchg
pusha
cmpsb
mov
lret
or
out
dec
mov
adc
lods
jg
add
jno
mov
scas
movsl
xlat
mov
add
loopne
sub
and
add
jo
jmp
mov
roll
fisttps
xor
add
jmp
fistpll
sub
push
into
mov
push
push
mov
pop
in
es
fdivs
cwtl
sbb
dec
lods
hlt
and
push
mov
lds
mov
mov
test
enter
sahf
jmp
loope
call
call
pop
decl
cmpl
out
pop
cwtl
repz
lods
add
dec
sbb
stos
dec
xchg
outsb
adc
pop
daa
jns
aam
xorb
test
or
data16
or
jmp
cmp
add
add
es
mov
nop
aaa
leave
xchg
adc
test
add
pop
and
pop
pop
sbb
mov
les
pop
jge
mov
sbb
call
lods
cmp
decb
ljmp
jle
mov
mov
adc
mov
sub
xchg
sub
mov
rorb
loop
sahf
pop
xor
pop
dec
jecxz
xor
sbb
nop
imul
adc
xchg
pop
inc
add
fcompp
dec
scas
lock
lds
mov
xchg
jmp
mov
subb
jmp
out
gs
dec
mov
add
scas
inc
push
push
pop
nop
push
or
insl
repz
and
add
mov
outsl
lods
stos
push
sub
cmc
xor
and
xorl
shl
cwtl
int3
add
flds
lret
cld
xor
adc
popa
int3
lcall
sub
stos
add
je
jmp
add
insb
push
stos
mov
push
sbb
dec
sub
xchg
cmpsb
mov
cmpb
sub
inc
cltd
sub
push
movsl
outsl
xchg
scas
push
or
les
jmp
push
add
jmp
je
add
xor
cmp
sub
sub
out
aad
icebp
cmp
jmp
pop
adc
aam
pop
sub
or
test
into
ret
lock
neg
jo
loop
add
ret
jno
aam
inc
push
mov
es
jge
and
aaa
out
xor
aad
aaa
add
stos
and
sarl
fucom
hlt
call
cmp
sub
test
push
loop
pop
call
jecxz
aad
jmp
loopne
push
xchg
dec
xor
cmp
in
sti
bound
stos
fs
push
inc
cld
fnstenv
outsl
add
and
das
push
in
mov
not
je
add
in
push
mov
hlt
ljmp
mov
inc
test
add
sub
xchg
enter
adc
addr16
sub
cwtl
mov
pop
cmp
arpl
jb
daa
imul
add
jmp
or
xor
mov
pop
pop
insl
or
test
adc
jecxz
push
leave
xchg
jp
out
lcall
add
cmp
mov
pop
stc
jle
jo
mov
sub
inc
stc
outsb
or
pushf
loopne
sub
std
and
jae
lds
inc
insl
cmp
jnp
pop
lea
pusha
xor
pop
data16
jmp
aaa
xor
jge
and
inc
je
adc
add
adc
int3
cs
mov
add
sub
nop
or
dec
pop
push
pop
cs
cmp
ret
movsb
sbb
sbb
inc
pop
jne
cmpb
xchg
fwait
add
das
movsb
outsl
mov
mov
add
movsb
xor
sub
xchg
xchg
push
cltd
das
fstpl
or
push
mov
jmp
test
ret
out
pop
inc
pop
xchg
nop
jbe
cmpsl
pop
push
pop
mov
ss
sbbl
xor
push
inc
mov
xlat
pop
lret
or
pop
mov
mov
sub
orl
repnz
neg
scas
icebp
add
pop
clc
loope
push
js
popf
jl
repz
repnz
mov
sbb
xlat
popa
inc
scas
addb
iret
fadds
sub
dec
adc
add
mov
stos
pop
mov
jg
add
mov
scas
mov
inc
mov
sbb
inc
mov
rcrl
pusha
insl
lret
stos
in
xor
ret
add
lds
ret
dec
popa
cmp
es
inc
test
pop
mov
jb
or
sbbl
loop
sbb
pop
mov
pop
xor
add
sub
sti
cmp
push
imul
test
pop
mov
dec
aam
mov
lock
mov
mov
add
xchg
in
dec
int3
std
lret
lods
dec
insb
lea
leave
jl
push
movsl
pop
jo
lret
scas
stc
and
mov
xor
pop
decb
movl
shlb
pop
sub
int3
mov
ret
jecxz
add
xchg
add
add
int3
fmul
add
cmc
testb
push
push
push
xor
insl
stos
sbb
xchg
cs
mov
pop
pop
push
in
jecxz
les
push
inc
roll
add
fnstsw
pop
push
xor
mov
jns
lods
lds
int3
stos
dec
xchg
cmp
inc
outsl
add
jns
or
mov
std
mov
in
cmc
cwtl
insl
bswap
pop
push
into
mov
sub
sub
inc
jge
sbb
sbb
adc
push
xlat
sti
xor
data16
rcrb
sbb
push
mov
sbb
add
rorl
outsb
aas
std
dec
jnp
add
and
xchg
fld
mov
in
inc
and
add
push
sbb
add
imul
bound
daa
push
add
dec
outsb
or
mov
jmp
repz
adc
bound
std
xchg
cmp
arpl
and
and
mov
or
sub
imull
orb
xor
mov
addr16
cmp
xchg
not
xlat
rcr
ret
mov
fcompl
fsubrs
add
aas
clc
repz
sarl
push
test
ds
or
lods
es
push
ret
mov
xchg
add
jmp
fs
jge
mov
push
and
pop
xchg
xchg
loope
and
and
out
fmull
push
jno
and
sti
xorb
pop
push
dec
frstor
pop
push
sub
or
js
pop
fsubl
mov
adc
clc
and
or
mov
hlt
mov
inc
mov
dec
std
or
rolb
stc
jg
sbb
test
fmuls
dec
inc
inc
or
and
ds
iret
nop
and
adc
and
jle
push
test
ret
dec
xlat
stc
bound
inc
push
mov
dec
cmpsl
aas
ljmp
inc
aad
or
push
add
jbe
jg
rorb
jg
mov
ret
push
push
divb
push
aad
sub
fldl2t
dec
sub
nop
mov
xchg
rcll
cltd
mov
push
and
pop
cld
inc
add
mov
or
les
rcrl
cmp
inc
and
mov
inc
scas
jg
cli
frndint
cmp
cmp
pop
jbe
cli
imul
jmp
or
inc
mov
add
pop
test
insb
jne
popf
push
or
mov
aaa
jns
inc
sahf
pop
test
mov
and
jmp
sub
clc
out
repnz
pop
sub
push
mov
sub
shrl
rcll
pop
push
incl
inc
jle
sar
jge
push
add
fbstp
ljmp
add
push
sahf
push
fiaddl
jns
lods
mov
inc
daa
loopne
loopne
into
xchg
bound
popf
inc
xor
enter
faddl
pop
sub
adc
add
dec
inc
mov
pop
inc
or
shrl
adc
xchg
xlat
out
fdivl
testb
jnp,pt
inc
pop
lea
sub
idivb
iret
mov
std
int3
fcoml
dec
iret
xchg
xchg
pop
mov
dec
dec
lahf
jmp
inc
imul
mov
or
rorl
or
sbb
and
adc
pop
inc
xchg
jg
sbb
shrb
and
mov
pop
xor
popa
das
mulb
sub
jo
mov
addb
mov
cmp
sbb
jmp
sar
push
mov
pop
mov
sub
daa
fdivl
cmp
jmp
xor
daa
pop
pop
out
mull
repz
mov
icebp
pop
enter
je
push
or
pushf
push
mov
push
js
sbb
xor
pop
push
xchg
adc
je
insl
and
fadds
push
and
mov
jmp
fsubs
or
lret
adc
dec
stos
mov
sbbb
xor
sub
sub
sub
ret
xor
mov
gs
and
je
xchg
sub
shll
inc
loopne,pn
sub
lds
or
movsb
sbb
out
fidivl
btc
mov
or
pop
adc
shrl
xor
xor
std
cmp
sub
cmp
pop
js
dec
inc
push
jmp
push
xor
outsl
push
shl
sbb
or
push
cwtl
into
mov
push
xchg
lods
xchg
nop
push
or
jmp
ret
cmpsl
mov
cld
orl
mov
push
subb
xchg
cltd
sbb
dec
movsl
or
adc
pop
cwtl
cmp
ds
insl
cs
and
pop
mov
sar
inc
xchg
or
mov
add
xor
push
loopne
sbb
xor
out
mov
adc
aad
cmpsb
movsb
mov
xor
pop
push
mov
add
mov
lds
stc
cmp
addl
out
lock
push
xor
xor
enter
dec
mov
mov
adc
das
pop
mov
and
movsb
cs
adc
pop
out
es
popf
popf
cmc
sbb
lds
mov
ja
iretw
and
cmp
mov
push
fldt
shrl
push
js
pop
pop
mov
add
sub
int3
dec
push
inc
mov
pop
or
mov
push
sub
movsl
adc
mov
pop
mov
add
fwait
aaa
inc
push
push
lahf
in
or
push
shr
shrb
ljmp
mov
and
dec
cmp
pop
sub
jle
mov
xchg
clc
aam
dec
enter
mov
adc
add
lods
inc
or
cld
pop
xchg
mov
out
ret
cmp
push
mov
outsb
imulb
call
cmpsb
sbb
insl
or
fisttpll
or
icebp
cmp
jge
lcall
mov
js
push
loop
lds
insl
stos
xor
lea
mov
sarl
fbld
cltd
and
sub
cli
mov
sbb
jmp
mov
mov
lret
sub
sub
xor
mov
fidivl
xchg
push
das
pop
rclb
pusha
push
xor
jne
cs
push
cmp
bound
inc
push
dec
push
and
idivl
out
lret
test
stc
out
or
dec
pushf
jbe
jo
or
sbb
cmp
and
push
cmove
push
xlat
inc
pushf
sti
dec
testl
jge
and
pop
std
and
and
ljmp
fiaddl
sub
lock
sub
and
pop
cwtl
es
iret
sub
and
pop
sub
pop
jo
ja
subb
pop
sub
add
bound
jl
mov
xor
push
push
mov
lcall
and
mov
sti
xor
cmc
add
cmp
cmp
les
loope
mov
mov
mov
pop
push
push
push
mov
and
push
push
enter
pop
add
stc
mov
push
mov
or
test
sbbl
cmp
enter
mov
xchg
add
push
add
fwait
dec
inc
cmp
inc
fnstcw
addr16
jecxz
adc
cmp
jmp
arpl
shlb
rorl
imul
mov
push
popa
in
cmp
push
and
popf
fsubl
sbb
sbb
xorl
add
imul
jns
cmp
cmp
daa
pop
outsb
cmpsb
negb
inc
js
test
sub
dec
pop
popa
pop
mov
jecxz
inc
add
lock
adc
xor
sti
sbbl
loope
adc
fsts
mov
jecxz
shr
xor
jmp
or
add
rorl
loope
push
ja
push
stc
repz
das
xchg
mov
or
add
sbb
add
push
lock
sub
adc
add
dec
in
inc
add
dec
mov
cmp
sbb
push
pop
aad
rdpmc
mov
push
jb
cmp
arpl
sub
test
mov
imul
mov
inc
or
jns
fisttpl
arpl
add
movsl
gs
xchg
cli
mov
push
out
add
stos
cmpl
push
mov
pusha
mov
sub
mov
test
push
movzbl
mov
jo
xor
adc
pop
fists
enter
lods
fbld
dec
jl
and
push
std
mov
and
call
dec
pop
add
pop
push
jb
jmp
std
sub
dec
pop
adc
fwait
sti
adc
data16
shll
dec
add
cmc
nop
nop
pop
push
xchg
xchg
fisttps
xor
call
add
into
jo
inc
xchg
jns
add
test
add
push
data16
xlat
out
das
fwait
imul
or
fwait
aaa
rol
dec
sbb
repnz
adcl
loopne
sbb
mov
es
dec
jmp
sbb
jmp
or
push
cmc
jns
pop
xchg
add
or
sbb
dec
hlt
mov
or
stos
inc
scas
sub
mov
gs
shl
dec
mov
inc
sub
jmp
fisttps
lods
rcrb
hlt
cmp
aas
xor
scas
imul
cmp
sbb
jle
hlt
les
dec
outsl
and
fcmovnb
xchg
dec
cmp
and
pop
fs
push
testb
stos
js
decl
mov
add
movsb
push
inc
or
test
jp
and
mov
xor
pop
loopne
lds
bound
clc
dec
pop
mov
jae
xor
jmp
sub
sub
sub
cmc
jo
xchg
xchg
mov
loope
popa
outsl
sub
cmp
insl
or
mov
leave
fimull
into
mov
outsl
stc
sub
dec
clc
inc
lret
add
pop
jae
jmp
rcll
inc
mov
sbb
push
inc
cld
jno
loope
mov
int
or
or
sub
adc
dec
or
pop
ret
or
stos
shrb
jmp
sbb
jg
push
mov
or
and
add
inc
fs
jl
cmp
dec
lods
xor
dec
mov
push
push
insb
aaa
sbb
aas
xchg
adc
imull
sbbl
xchg
push
xchg
inc
leave
mov
and
xchg
add
xor
jmp
jmp
loopne
cli
lds
push
pop
sbb
movsb
inc
cmpsl
push
call
xchg
pop
jle
push
lahf
push
sbb
push
cmp
cmp
mov
mov
nop
pop
sub
mov
push
lock
xchg
ja
fisttpll
add
rcll
enter
mov
inc
sbb
mov
xchg
and
and
or
pop
inc
stc
repnz
xor
lds
mov
jnp
mov
enter
je
scas
lods
cmpsb
push
push
repnz
xchg
xchg
pop
call
jp
pop
mov
sbb
inc
jmp
push
aaa
and
pusha
mov
in
mov
pop
hlt
inc
sbb
push
hlt
aas
pusha
mov
dec
jb
hlt
jp
or
push
mov
rcrb
mov
add
int3
add
pop
mov
add
ds
push
gs
cmp
xor
sti
addr16
add
jecxz
jmp
push
adc
xor
mov
push
repnz
xchg
fucom
shlb
sub
adc
push
cs
test
adc
imul
orb
inc
outsl
jl
testl
xor
out
int3
adc
js
cmp
shlb
sub
or
ds
das
or
push
cltd
add
push
xor
mov
pop
clc
add
in
bound
mov
sbb
adc
scas
or
xchg
fs
shr
mov
inc
inc
loopne
pop
xchg
add
cmc
or
cmp
shrb
or
xor
add
cli
pop
into
cmp
mov
inc
mov
fs
xchg
push
pop
jp
popa
mov
dec
mov
cmp
pop
loope
jae
and
mov
jno
lret
inc
or
loop
imul
sub
mov
pop
jnp
faddl
mov
jmp
repnz
rcr
pop
adc
test
dec
pop
lret
sbbl
out
sti
adc
popf
test
mov
cmp
sub
dec
nop
dec
xor
cli
push
adc
jne
testb
pop
ret
add
std
lret
cmp
inc
xor
mov
mov
shrl
js
test
icebp
mov
sbb
jno
lahf
call
xor
les
lods
add
pop
adc
add
cmp
and
jge
xor
adc
cmpxchg
out
sub
and
jnp
mov
or
nop
sahf
inc
lock
les
call
test
hlt
scas
mov
and
jae
add
sub
add
add
enter
je
jmp
and
ljmp
and
mov
outsl
aas
xchg
fbld
pop
fs
inc
popf
jp
orb
push
and
xor
sbb
ljmp
mov
pop
xchg
outsl
outsl
mov
xchg
dec
lock
jo
xchg
xor
cwtl
idivb
wbinvd
push
inc
es
jg
add
add
xchg
icebp
hlt
shl
pop
ds
adc
and
mov
xchg
pop
add
ja
xor
aam
popf
dec
xor
repz
popa
push
ljmp
lods
aas
lods
xchg
loope
sbb
mov
ds
sub
lret
les
ljmp
pop
add
mov
aas
push
testb
add
mov
sar
inc
and
cmp
sahf
mov
ljmp
dec
fidivs
xchg
pop
ja
xor
jnp
jl
pop
das
and
mov
push
movsl
into
lret
test
fadds
pop
ss
xor
mov
inc
xor
dec
pop
sub
push
ret
inc
xchg
mov
xor
push
adc
jns
push
aam
pop
xchg
stc
and
push
stos
addb
rol
addb
add
lock
jmp
sbb
addl
add
and
fidivrl
xor
sbb
bound
orl
jg
inc
inc
stc
cmp
mov
mov
rcll
inc
pop
rcr
repz
pop
mov
and
pop
cld
xchg
add
decb
jl
ret
sub
jae
pop
adc
popa
push
push
mov
and
cwtl
adc
and
sub
data16
mov
cmc
out
das
xor
cmp
popa
and
and
xor
out
repnz
mov
ja
mov
cmp
mov
xor
lds
add
das
adc
sub
inc
sub
sbb
sub
imull
sub
ljmp
test
jp
test
subb
cmc
sub
xor
or
popf
push
cltd
subl
loopne
pop
xor
int
pusha
inc
xchg
inc
xor
jno
roll
pop
test
leave
imul
or
sub
xor
sub
andl
jno
in
push
xor
xchg
mov
sub
xchg
jle
aam
fbld
inc
xchg
adc
pop
adcb
imul
sti
inc
jno
mov
or
or
imul
inc
stos
testl
std
sub
lret
or
or
jbe
ret
ret
add
out
fs
xchg
cli
testl
pop
outsl
mov
inc
outsl
sbb
push
iret
cs
mov
jb
in
pop
jl
mov
clc
or
movsb
pop
sbbb
iret
fs
daa
sub
idivl
sbbl
iret
pop
lahf
fisubl
pop
jne
mov
add
shrl
aaa
jns
sub
adcl
xlat
pop
cmp
into
out
lret
lods
movsb
aad
jb
gs
out
add
mov
ljmp
xchg
or
cmp
fldcw
jnp
xchg
cld
loopne
inc
push
sub
popa
ret
pop
inc
sub
out
scas
mov
and
jmp
mov
and
ret
cmpsl
dec
shl
subb
jne
adc
das
cmpsl
js
test
or
adc
pusha
and
fstpt
movsl
adc
pop
repz
and
leave
je
stos
ret
mov
inc
xchg
add
int
jmp
fisubrs
cmpb
and
repnz
inc
cwtl
jbe
imul
ljmp
loop
pop
and
jg
call
repz
lcall
inc
popf
sarl
inc
mov
aam
cs
arpl
inc
mov
xor
pop
jno
lea
fstl
xor
lcall
jmp
fnstsw
sub
repnz
xchg
lcall
jmp
hlt
movsb
pop
je
daa
roll
loopne
lret
adcb
shlb
inc
add
shll
pop
push
mov
mov
mov
mov
pop
pop
push
imul
hlt
in
inc
mov
ja
pop
add
cmpsl
add
dec
jmp
mov
sub
cmp
clc
xchg
or
out
jecxz
mov
and
jp
sub
fs
and
push
push
dec
jmp
add
adc
repnz
adc
jnp
cld
sub
mov
lret
push
xchg
ja
ljmp
jns
mov
sbb
adc
sahf
or
testl
sbb
cs
pushf
inc
sbb
dec
push
push
nop
xchg
adc
call
sarl
inc
nop
cltd
out
dec
mov
sub
jo
pop
popf
push
sahf
or
sub
mov
push
adcl
mov
inc
mov
jmp
or
lods
std
mov
mov
inc
pusha
outsb
mov
inc
sbb
push
dec
pop
divb
aad
add
jg
add
out
fstps
pop
xchg
cs
add
in
xlat
and
pop
and
pop
imul
lods
cmp
cs
mov
xor
enter
push
jae
pop
test
jmp
push
ret
mov
xor
push
push
movsl
je
add
fbstp
push
ja
pop
mov
pop
addr16
insl
and
or
mov
fmull
jmp
inc
sti
ret
pop
dec
inc
cmp
or
das
sub
pop
lock
jns
xor
push
stos
jne
sbb
sub
adc
cli
inc
or
movsl
pop
jno
add
ror
sub
inc
outsl
divl
scas
aam
in
sahf
ds
cmp
rorb
out
sbb
decl
jle
cltd
orb
pop
xchg
pop
mov
push
and
push
push
or
loopne
mov
loopne
adc
mov
jle
loope
and
insb
enter
es
mov
cmp
sub
push
jo
jle
push
ffree
stc
adc
pop
xchg
jp
mov
mov
in
sub
adcb
pop
lods
xchg
stc
les
xor
add
pop
sub
insb
leave
add
loope
lret
dec
out
add
popf
outsb
xor
add
pop
sahf
add
jo
shl
or
clc
shlb
ret
mov
jp
push
push
mov
cmp
dec
hlt
jg
or
cs
sub
lahf
rclb
and
jmp
mov
ret
dec
cmp
loope
aas
lods
hlt
in
lahf
add
ret
pusha
cmpb
sbb
pop
cmp
dec
xchg
inc
nop
cmp
mov
dec
push
pop
test
pop
sub
or
leave
adc
mov
sti
push
icebp
test
cmp
scas
pop
mov
fstpl
sarb
mov
jmp
mov
cmpl
push
pop
sbb
jno
push
fsubrl
shlb
and
stc
push
jmp
cli
mov
rclb
push
mov
mov
and
mov
lahf
out
daa
jmp
ss
or
jg
xchg
add
and
mov
inc
dec
jmp
pop
movsl
and
outsl
sbb
loop
les
mov
insb
mov
push
or
out
sub
inc
push
push
jbe
jmp
and
mov
daa
adc
cmp
out
das
xor
lcall
cmpsb
pop
test
and
push
mov
in
fs
cmp
fxch
loope
arpl
in
push
dec
xchg
jae
mov
inc
sub
repz
cmpsb
push
rcrl
inc
mov
mov
pcmpgtd
push
mov
daa
jmp
adc
enter
stos
inc
pop
sbb
mov
pop
cmc
icebp
pusha
arpl
stos
xchg
push
outsb
push
push
push
add
jmp
shrl
into
aas
icebp
dec
adc
scas
hlt
repz
sub
movsb
pop
lcall
add
push
pop
jmp
lret
mov
fisubs
cmpsb
leave
es
out
es
jp
or
dec
and
cmp
sub
or
adc
scas
in
push
inc
mov
or
sub
into
jbe
js
mov
call
mov
mov
mov
jbe
push
das
mov
xor
sub
in
sahf
adc
addl
setge
and
xor
cmp
pushf
pop
sub
add
out
push
sarl
lods
daa
ret
or
mov
push
mov
pop
dec
cld
jmp
icebp
movsl
or
cmpsl
jp
xor
or
scas
pushf
insl
ljmp
fs
xchg
and
push
orl
scas
inc
and
imul
jmp
mov
push
add
dec
mov
or
sub
ja
jnp
add
sbb
mov
mov
pop
mov
jecxz
inc
test
push
pusha
push
outsb
cli
js
mov
stos
mov
dec
push
add
sbb
add
push
push
ret
roll
or
xor
popa
adc
out
pop
in
out
xlat
out
pusha
mov
xchg
addr16
mov
test
pop
shrl
add
lret
stc
mov
jl
test
aam
and
mov
cld
jp
push
ret
push
sbb
jmp
cmc
insb
add
ja
lods
push
jmp
jecxz
and
lret
pop
aas
xor
loop
hlt
imul
mov
inc
push
push
sub
inc
pop
cli
sub
jne
out
push
cmp
jmp
dec
fidivs
dec
out
or
and
or
jmp
or
pop
out
frndint
lcall
push
loop
jbe
or
adc
cld
cmp
test
fisubl
sbb
outsb
dec
cmp
shrl
xorb
xchg
add
jmp
add
mov
popf
mov
adc
add
fsubrs
andb
dec
mov
popf
fnstcw
mov
shll
jnp
nop
sti
mov
sbb
sub
mov
das
jp
aam
or
dec
lock
aaa
jge
pop
adc
adc
sub
jmp
cld
jp
push
test
mov
or
loopne
gs
or
xor
fs
push
pop
cmpsb
and
dec
add
cmp
inc
sbb
cmp
and
lcall
add
mov
dec
xchg
push
mov
push
add
jmp
pop
mov
or
mov
ds
dec
subb
add
mov
loope
fcmove
add
lahf
pusha
jmpw
mov
jbe
add
jle
add
scas
sbb
adc
dec
adc
adc
lods
cmc
and
push
pushf
fs
iret
aam
lods
adc
test
movsb
out
sub
dec
pop
xchg
bnd
cmp
cmc
inc
push
test
aam
fcmovu
lods
inc
scas
pop
out
sub
repnz
pop
sti
imul
adc
cwtl
dec
mov
ret
leave
std
push
inc
out
inc
cmpb
xor
sbb
or
nop
lock
sti
sbbb
dec
or
mov
dec
lea
loop
cli
add
sti
mov
cmc
add
lret
lods
rorb
mov
add
mov
adc
ret
inc
adc
add
fidivrl
sbb
or
and
and
push
pop
push
lock
mov
jmp
pop
pop
add
pushf
add
out
push
loopne
hlt
add
out
icebp
add
inc
jmp
je
int
xchg
stos
ja
aam
mov
mov
inc
mov
jle
or
jmp
test
push
or
les
fs
xchg
cmp
cltd
xor
and
testb
sub
and
in
out
or
jge
mov
pop
sub
ret
inc
pop
outsb
mov
inc
repz
jbe
add
bound
add
add
push
jmp
rcrl
test
and
push
jge
mov
xchg
push
dec
mov
push
mov
das
add
sbbl
outsl
in
pop
or
clc
sbb
lock
cmp
les
add
fwait
popa
sbb
add
push
sbbb
push
sbb
icebp
je
shll
dec
adc
cli
leave
mov
out
jl
push
pop
push
push
pop
ret
les
xor
cmpb
aaa
jo
or
add
stos
mov
jb
pop
inc
xor
fdivrp
rorl
inc
push
cwtl
in
cmpsl
mov
push
loopne
movsb
sub
mov
mov
sub
mov
cs
cmp
push
stos
sbb
and
and
lods
adc
cs
pop
xchg
push
out
fdivrs
add
xchg
add
cmc
add
adc
dec
push
imul
mov
jmp
xor
add
pop
sbb
rorl
aad
jb
dec
xor
pop
insb
jle
xchg
aas
inc
test
arpl
or
pusha
or
inc
push
popa
cmp
shrb
pop
or
dec
das
test
jns
aad
and
sbbb
cmc
jno
loope
aad
and
add
cmc
mov
or
sahf
sub
lea
push
adc
rcrb
lahf
sub
filds
repnz
imul
ja
cwtl
test
jge
sbbl
adc
add
adc
or
or
push
xchg
daa
inc
or
pop
push
and
roll
pop
jbe
pop
xchg
mov
sub
imul
mov
les
add
jbe
push
sub
jo
sub
xchg
enter
pushf
pop
pop
mov
pop
and
or
js
sub
jb
xchg
push
push
movsb
adc
repz
cmc
mov
jmp
test
pop
add
xor
pop
pop
lods
sub
orl
pushf
in
dec
mov
jno
mov
cmp
js
ret
pop
rorl
mov
cmp
cmp
pop
mov
jecxz
adc
stos
hlt
hlt
cmp
mov
pop
pop
pop
gs
into
pop
jo
lahf
jle
push
mov
cltd
lds
jg
out
std
or
and
jl
loope
pop
pop
shl
xorl
push
push
xchg
sarb
mov
jle
adc
ja
and
sbb
divl
enter
outsb
pop
daa
dec
xor
mov
dec
push
dec
mov
sbbl
andl
ret
push
stc
xor
mov
and
out
jno
mov
inc
lcall
or
jle
cmc
sbb
sbb
inc
pop
dec
mov
loopne
dec
pop
mov
loop
mov
inc
cs
jnp
in
dec
adc
xchg
push
sti
add
repz
mov
push
mov
jne
jns
lods
into
adc
pop
cmc
adc
push
fisubrs
xchg
jae
push
adc
mov
dec
rcr
sti
inc
xchg
lret
nop
aam
add
inc
mov
xchg
and
pop
jnp
popf
je
xchg
add
outsb
test
adc
inc
inc
sbb
mov
sbb
mov
mov
or
cli
or
fiadds
shll
push
push
xchg
or
in
pop
or
loope
test
sarl
jmp
inc
pop
js
testb
scas
sub
mov
mov
add
and
insb
or
and
jmp
pop
mov
lock
add
data16
bnd
and
sub
push
clc
fists
xchg
mov
ret
fiaddl
xlat
test
hlt
jnp
dec
fcomi
or
cwtl
test
add
test
mov
fwait
sbb
xor
mov
xorb
jb
out
and
sbb
and
movsb
cwtl
outsl
xor
in
adc
add
jo
mov
or
dec
fildll
sbb
jnp
in
or
and
inc
dec
sbbb
sbb
inc
mov
push
pushf
dec
xchg
inc
or
and
mull
mov
pop
ss
rclb
jge
cwtl
mov
inc
movsb
jmp
orl
jo
pop
mov
aad
scas
mov
pop
xchg
imul
dec
addl
test
stos
es
dec
and
adc
xsha1
cmpsb
jl
inc
mov
cmp
and
mov
cmp
es
dec
shl
pop
jmp
push
fidivrs
mov
add
lods
mov
aas
xor
sub
cli
xchg
lods
jge
movsl
pusha
movsb
mov
loope,pn
repnz
fldcw
or
inc
popf
jae
or
inc
pop
push
lret
push
aad
ds
adc
hlt
sub
pop
sbb
push
shlb
jecxz
jbe
ret
jb
jl
adc
pop
push
jmp
testl
pop
pusha
hlt
or
sub
pop
mov
inc
sub
out
dec
divl
js
jp
in
sub
lahf
jbe
inc
mov
adc
inc
fstps
cmp
xor
add
inc
mov
ret
inc
lds
push
mov
mov
stc
jne
jmp
add
mov
push
push
push
add
loopne
mov
loope
mov
xor
nop
in
pusha
clc
mov
xchg
adc
push
sti
lock
sbb
adc
xchg
or
addr16
in
add
xor
jmp
dec
cmp
dec
jl
add
mov
sub
cmc
lds
pop
add
adc
xchg
push
add
fbstp
repnz
and
inc
or
and
addr16
test
push
mov
push
push
push
add
pushf
insl
and
cmp
mov
test
jecxz
adc
inc
scas
sbb
bound
call
mov
xchg
add
enter
idivb
dec
pusha
ljmp
scas
xchg
ret
sbb
jbe
inc
jno
iret
pop
aaa
pop
sub
pop
out
jg
mov
push
push
mov
push
out
add
inc
dec
mov
push
movsl
jmp
shl
mov
test
es
gs
adc
mov
dec
adc
out
popa
pop
sub
dec
incl
repnz
push
sbbb
inc
sbb
sbb
pop
pop
mov
pushf
outsb
jg
mov
ds
aaa
xor
add
nop
add
das
xchg
inc
and
xchg
ficoml
mov
push
mov
daa
sub
out
fdivs
xchg
add
orl
dec
sub
inc
and
dec
pop
adc
mov
data16
test
adc
fsubl
mov
cs
in
jnp
sub
jl
subl
or
inc
stos
fs
into
jne
add
add
aaa
xor
aam
jmp
cs
adc
mov
cmpsl
pop
push
inc
push
sarb
cld
sbb
hlt
adc
orl
or
sbb
add
repnz
pop
imul
xorl
dec
sahf
sub
int
ss
pop
mov
loopne
jb
and
aad
xor
mov
or
cmp
xor
mov
add
push
jns
xor
decb
iret
push
mov
test
jp
dec
sub
dec
adc
adc
jecxz
push
mov
outsb
pop
push
jns
adc
xor
pop
push
in
shll
addb
mov
jnp
cli
mov
jl
movsb
mov
leave
jnp
add
jg
and
inc
sub
dec
mov
imul
sbb
mov
loop
push
xor
or
sbb
cmp
aaa
xlat
js
repnz
sbb
push
pop
cltd
pusha
fsub
lods
jo
sbb
cli
pop
cmp
inc
adc
xchg
cmp
sbbb
sub
mov
rolb
stos
mov
mov
fbstp
daa
aaa
sbb
movsl
addb
rcrb
sub
pop
push
push
and
cltd
adc
stos
add
imul
xchg
mov
mov
lret
sbb
dec
add
sub
mov
push
mov
sti
sbb
cltd
das
sbb
add
push
xor
cmpb
fildl
jge
mov
loopne
or
jne
pusha
mov
mov
or
xor
lcall
mov
test
jmp
lret
push
movlps
enter
mov
cmpsl
cmp
push
mov
les
xlat
pop
pop
cmp
loope
sub
loop
test
inc
out
pop
sub
mov
xchg
lock
push
mov
sahf
in
ret
cld
push
ja
mov
jmp
xchg
xor
dec
cmp
outsb
rorb
pop
xchg
pop
add
xchg
xchg
add
leave
rol
add
cmp
push
push
mov
or
cmpsl
jnp
xor
out
add
inc
inc
mov
mov
xor
bound
jae
das
pop
adc
out
pop
cli
push
mov
shlb
ret
dec
sbb
xchg
add
mov
psubsw
adc
jo
pop
xchg
or
icebp
subb
mov
cwtl
test
inc
sub
pop
loop
mov
push
jmp
jge
add
push
mov
mov
jecxz
rcll
punpcklbw
push
adc
or
jns
push
loop
mov
adc
and
xor
or
fnsetpm(287
jae
fisubs
sub
nop
jg
and
std
or
or
js
jb
movb
je
jno
mov
cltd
jno
mov
jl
jae
repnz
dec
mov
dec
push
cli
dec
add
leave
test
sbb
push
scas
icebp
push
push
inc
push
push
push
cmc
push
pop
sub
les
stc
iret
testl
aas
xchg
cwtl
sahf
mov
push
sub
pop
inc
data16
insl
ja
nop
cmpsb
inc
push
xor
or
sub
cmp
ljmp
dec
inc
cli
push
push
sbb
or
jb
sti
add
cli
jbe
jmp
mov
inc
or
enter
or
sub
int
decb
jmp
das
inc
enter
xchg
push
pop
icebp
sub
add
arpl
lds
mov
sbb
push
dec
daa
pop
and
cmp
mov
push
sbb
push
mov
mov
scas
dec
cmp
dec
xchg
hlt
call
fldl
mov
jge
jmp
mov
push
call
add
shr
aas
mov
push
dec
mov
jg
mov
add
jbe
xor
add
popf
sub
or
int
aam
mov
pop
pop
jecxz
shrb
lcall
jg
loop
xchg
push
jmp
cs
mov
dec
push
push
arpl
shl
icebp
fwait
jb
push
jns
orb
pop
shr
mov
inc
or
add
sub
jne
push
mov
push
in
pop
and
jno
mov
insb
jno
andb
in
pusha
adc
and
fmull
or
sbb
fsubr
cmp
xor
fs
add
incb
add
pop
mov
inc
inc
repnz
fldl
fucomp
loopne
dec
inc
mov
xorb
mov
lea
xchg
pop
ds
mov
and
xor
popa
cmp
inc
lods
aas
es
sbb
sbb
lret
in
out
sub
addr16
jo
aad
pop
or
in
dec
sub
mov
sbb
pop
pop
add
push
cs
mov
xchg
dec
dec
outsb
mov
pop
ret
jg
jl
pop
inc
push
aam
xchg
sbb
iret
iret
jmp
jno
stc
scas
mov
fdivrs
adc
je
popa
sbb
mov
aaa
rcll
add
loop
cmp
cmpsl
push
jmp
out
and
imul
or
data16
aam
enter
pop
and
popf
add
loope
loop
push
push
out
add
jne
pusha
imul
cmp
xor
xor
jl
imul
insl
xchg
mov
leave
sub
sbb
add
mov
cltd
add
or
and
popf
sbb
dec
and
adc
adc
sub
movsl
add
jge
cmp
js
inc
cs
fisubl
jmp
xchg
sbb
aaa
cmovg
fcomps
ja
leave
push
mov
cmp
call
in
test
movsb
fucom
push
or
add
imul
push
and
mulb
imul
pop
adc
aaa
xchg
xchg
out
btc
push
lods
mov
inc
xor
lock
cmovp
xor
filds
adc
jnp
xchg
dec
nop
jmp
fdivrs
xor
jmp
je
mov
inc
jmp
push
pop
push
movsb
or
std
cmp
iret
clc
orl
xlat
xor
aad
pop
ja
adc
les
xchg
cltd
pop
pop
test
push
lds
add
xlat
dec
ljmp
add
jmp
sub
leave
push
and
pop
mov
mov
mov
test
ja
loop
cmpsb
xchg
insb
shrb
movsl
in
jbe
xchg
in
add
movsl
add
push
add
xor
pop
add
inc
push
cmp
clc
jecxz
in
out
ror
pop
aaa
jle
cmpsl
cltd
es
add
imul
fs
stos
mov
add
xchg
and
cmpsb
and
sbb
das
mov
pop
imul
mov
push
mov
shr
jg
in
inc
jmp
push
out
pop
test
mov
inc
mov
sub
jae
or
push
mov
or
and
push
loopne
push
mov
xor
cmp
leave
cmpw
or
jno
xor
sbb
je
shll
mov
mov
jb
jno
popf
jnp
inc
call
mov
pop
mov
xor
pop
jo
add
loope
loope
aam
lahf
addb
pusha
dec
jg
popa
jne
sub
ljmp
cmp
pop
push
hlt
arpl
pop
xor
daa
repz
push
clc
mov
push
and
ds
popa
xchg
jne
in
mov
cmp
jno
stc
xchg
push
adc
nop
mov
xlat
movsb
sbb
das
ficoml
and
push
and
and
add
pop
pop
jmp
in
jb
xchg
mov
call
insl
cmpsl
testl
in
das
and
mov
das
rcrl
mov
xor
rol
int
mov
sbb
mov
imul
lds
or
dec
ja
pop
neg
xor
cmp
adc
cmp
adc
sbb
pop
push
sbb
or
fisubs
icebp
push
mov
xchg
push
ret
daa
xor
and
inc
sbb
icebp
es
inc
stos
sbb
pop
lds
out
jp
push
call
sub
enter
add
or
popa
daa
mov
add
cmp
xor
or
sarl
imul
fcmovb
shl
sbb
and
les
adc
cmp
fisubrs
push
or
jg
adc
jmp
mov
pop
add
jo
mov
xchg
mov
mov
inc
cltd
shr
mov
movsb
pop
add
inc
leave
pop
adc
cmc
mov
mov
jno
out
aas
arpl
in
pop
lcall
xlat
mov
icebp
jmp
push
frstor
test
lds
cmc
pop
sbb
not
in
mov
in
cwtl
jmp
xor
xchg
pop
or
sbb
dec
lds
pop
or
flds
and
add
pop
es
mov
das
cmpsb
mov
ret
mov
sbb
arpl
aam
movsb
sub
or
hlt
jnp
and
and
xor
xor
mov
fdiv
aaa
mov
jecxz
push
mov
test
mov
cli
push
mov
add
jo
push
xchg
mov
fwait
cwtl
jo
js
push
cld
mov
inc
push
add
xorb
push
xchg
sbb
fimuls
add
es
cmc
loope
test
mov
sub
sub
push
mov
jmp
ret
push
daa
cwtl
and
adc
push
arpl
inc
jne
and
and
xor
imulb
rcr
pop
inc
loope
add
mov
mov
pop
xor
shr
sbb
and
xor
add
icebp
mov
lock
ja
adc
lock
les
stos
loop
loop
jne
ds
jmp
push
mov
je
pop
jg
ljmp
inc
mov
mov
mov
orb
jg
rclw
sbb
loope
push
sahf
and
scas
clc
inc
jnp
jo
mov
inc
lock
push
add
jno
inc
icebp
sub
in
mov
cmp
jmp
cmp
sub
add
shrl
popl
aam
mov
int
dec
cmc
xchg
adc
adc
in
jge
subb
bound
cmpsb
imul
fs
or
or
sub
push
inc
pusha
daa
mov
pusha
push
xor
or
adc
mov
lcall
je
pop
xchg
stc
xor
xchg
jnp
cmp
pop
sarb
fcoml
test
adc
addr16
jo
inc
jmp
push
pop
fistpll
sub
adc
cmp
push
mov
push
xchg
stos
icebp
lock
lods
jge
cs
pushf
imul
jnp
lret
outsl
xchg
fwait
incb
arpl
cmp
rcll
test
dec
xlat
or
imul
jns
cs
les
jmp
stc
push
in
mov
lods
push
stc
lcall
xchg
and
icebp
lds
imul
mov
stos
pushf
mov
sarl
sub
and
nop
inc
rcrl
out
mov
xchg
sarl
icebp
divb
sub
mov
push
mov
xlat
enter
insb
pop
jp
xor
add
jl
addr16
add
pop
aam
mov
in
lea
and
sub
push
ret
incl
mov
adc
stos
mov
inc
dec
shrb
loope
xor
test
push
sbb
adc
ret
dec
mov
dec
dec
add
roll
inc
or
fwait
inc
fs
ljmp
dec
fldt
mov
fdivrp
xlat
cli
scas
sbb
mov
dec
outsl
es
ret
jle
pop
js
std
jmp
pop
sub
push
aaa
adc
mov
unpcklps
push
dec
pop
adc
lock
push
testl
ja
filds
test
xchg
lds
inc
xor
adc
xlat
divl
sbb
jmp
fsubrs
sub
mov
jl
mov
add
jns
adc
cmp
mov
stc
aam
ss
roll
lret
test
in
and
push
testb
pop
xchg
xchg
mov
push
int3
jae
dec
test
or
xchg
loop
push
ret
pop
dec
xchg
in
popf
lods
stc
movsb
fs
add
push
or
call
sti
push
sbb
jmp
cmp
jne
int3
out
jmp
sbb
inc
imul
decb
push
mov
add
jmp
add
ret
addb
loopne
mov
and
jno
lods
lret
arpl
rorb
jb
out
sub
cmpsl
push
shlb
push
or
cmc
jmp
sub
and
lret
ss
cmp
jnp
out
pop
sarb
fwait
adc
cs
pop
jle
sub
or
sbb
sub
ss
mov
pop
xor
fimull
negb
movsb
mov
cmpl
dec
mov
pop
xor
das
push
add
outsb
jp
lods
dec
inc
mov
lock
pop
or
lock
rorb
pop
test
or
sbb
dec
outsb
pushf
mov
mov
jle
add
cmc
cmp
not
cmp
push
and
cmp
movb
jmp
add
sbbl
mov
lret
and
add
and
inc
pop
xchg
add
gs
mov
sbb
xchg
nop
in
lea
sarl
not
add
in
push
mov
ljmp
xchg
xor
push
fs
scas
jmp
mov
enter
cwtl
dec
push
mull
stos
jecxz
neg
dec
dec
shll
subl
fdivrl
or
inc
sbb
out
ljmp
icebp
xchg
jg
xchg
mov
into
popa
ud1
add
stos
lea
ds
insl
dec
pop
xor
sub
fbstp
jne
adc
lods
dec
cmc
cmp
jne
jb
dec
ja
and
lock
push
repz
add
jle
add
jmp
adcl
xor
data16
xor
pop
push
cmp
inc
in
pop
pop
cwtl
add
out
pusha
mov
push
mov
in
xchg
test
scas
jmp
and
mov
jae
shr
mov
lods
sub
packuswb
xchg
dec
std
flds
cmpsl
mov
push
ficoms
dec
adc
jecxz
les
in
add
mov
xchg
mov
out
sbb
cs
xor
sub
jne
pop
add
out
pop
xlat
push
mov
fcompl
jl
dec
mov
cmp
jnp
fs
push
das
fnstcw
pop
insb
sbb
rorb
push
or
jb
xchg
dec
push
sub
out
test
xor
jl
add
xchg
repz
int
out
nop
loopne
add
fisubl
jno
rorl
jge
test
ds
in
or
push
add
cmpb
pop
push
push
push
aam
jae
or
cld
ret
mov
addl
sti
nop
jmp
xchg
bound
xorl
negb
std
ja
mov
pop
add
push
jp
mov
jmp
push
add
cmp
not
fcoms
js
lea
or
adc
or
xor
sbb
cmp
inc
pusha
cmp
add
mov
jmp
inc
add
inc
outsl
movsb
cmp
rcrl
pop
je
cwtl
out
shlb
fsts
adc
add
adc
repz
fs
jmp
xor
cmp
xor
sbbb
xchg
add
mov
xchg
jle
or
mov
sbb
inc
inc
push
cmc
xor
sbb
aad
jmp
mov
pop
mov
fdivs
or
hlt
sub
dec
outsb
clc
mov
push
inc
lock
mov
or
jmp
xchg
push
push
push
outsb
dec
dec
test
mov
out
xor
pop
stos
push
test
fildll
xchg
js
pop
push
movl
imulb
dec
add
inc
add
sub
pop
ficoms
ja
dec
cltd
cmpsb
fadds
inc
imul
jp
pop
jl
call
fsubrl
push
test
daa
push
sarl
stos
into
in
jle
xchg
ret
dec
es
pop
pop
leave
rcrl
in
js
orb
sbb
pusha
scas
arpl
cmp
and
arpl
icebp
andnps
pop
mov
dec
adc
jp
stos
mov
outsb
mov
add
inc
xcrypt-cbc
cmpsl
aad
test
cmp
sub
sar
adc
enter
fstps
orb
mov
jb
or
clc
cmpsl
dec
add
inc
fs
addl
adc
adc
add
out
sbbb
sub
xchg
and
push
or
push
aam
push
pop
jp
insl
cmp
fiadds
or
or
adc
dec
and
ret
mov
dec
mov
loop
lahf
pop
js
std
and
pop
mov
or
ret
dec
xchg
and
cmpsb
dec
add
push
lock
popf
jg
xchg
pop
lock
subl
jbe
lds
mov
jmp
xchg
push
adc
scas
adc
or
cld
enter
mov
cmpsl
and
or
negb
aad
outsb
incb
mov
or
stc
loope
inc
or
lock
adc
ffree
push
mov
and
or
sub
adc
xor
or
or
pop
sbbb
cmp
cmp
xchg
adc
cld
aaa
pusha
iret
xor
aas
dec
pop
loope
sub
aad
stos
mov
rcr
xor
and
xchg
in
cmp
xchg
std
mov
push
and
sub
pop
xchg
mov
mov
sub
or
add
flds
mov
cs
cmc
jle
aas
in
sub
jmp
or
into
stos
mov
push
pop
add
lock
sbb
push
push
das
sub
movsb
ja
loope
sub
mov
xor
add
adc
cltd
test
cmp
and
rolb
adc
xchg
js
mov
adcb
jg
jo
mov
hlt
je
jo
sbb
or
out
jecxz
mov
pop
add
jbe
xchg
cmp
or
sbb
icebp
aaa
imul
xor
dec
or
rorl
lret
ljmp
dec
adc
pop
js
in
add
rclb
xor
repz
repz
push
aam
add
push
pop
int
std
jb
clc
arpl
fisubrs
inc
bound
sub
frstor
inc
fcmovb
notl
addl
mov
push
imul
dec
ret
sbb
lods
test
das
or
insl
or
jo
jns
cmp
fsubs
and
inc
mov
sti
adc
push
jle
lods
jecxz
addr16
cs
jmp
aaa
imul
dec
dec
push
cmp
out
fadds
pop
push
scas
shll
and
std
add
dec
pop
hlt
sub
neg
loop
inc
dec
jle
ds
lods
pop
nop
push
shrb
dec
xor
jg
enter
cmpsl
push
adcl
movsl
lcall
push
add
xchg
js
sub
mov
dec
mov
add
and
lods
push
repnz
push
leave
popa
sarb
nop
xor
mov
incb
neg
cmp
rcrb
sub
testl
add
adc
clc
sub
xchg
jns
jbe
or
xor
out
cld
xor
aad
adc
int
pusha
xor
xchg
adc
sub
rcll
push
dec
inc
dec
mov
sub
fmuls
call
xchg
rorb
mov
adc
push
cmpsb
test
scas
jno
mulb
push
les
jg
jns
fdivrs
popl
jge
jns
rorb
test
lcall
sbb
push
jae
jb
sbb
shrb
test
pop
push
adc
dec
cli
bound
das
test
lds
test
or
push
mov
jns
repnz
cwtl
rol
adc
pusha
add
jmp
mov
push
dec
pop
mov
clc
lret
cmp
inc
push
push
inc
lret
mov
popa
push
fwait
rorl
mov
out
rorb
mov
sub
in
loopne
addb
cmp
lret
rcrl
lods
loope
test
xlat
nop
mov
arpl
push
mov
jmp
sbb
pop
jns
pop
shr
repnz
enter
sub
jl
ficoml
fcoms
mov
or
pop
mov
pop
outsb
pusha
sub
sub
imul
pop
scas
push
lahf
and
ret
aas
adc
add
pop
add
cli
xchg
and
pop
jecxz
cmpsb
and
add
jns
stos
icebp
out
lock
add
push
mov
loopne
cli
mov
packuswb
cwtl
mov
or
or
shlb
sti
xchg
testb
or
test
gs
mov
fmuls
xor
cmp
and
or
xchg
pop
and
and
pop
repz
or
sub
mov
mov
je
lahf
imul
mov
sub
adcl
add
inc
sub
cmc
jle
push
subb
aam
push
stc
mov
adc
adc
push
sbb
mov
pop
test
mov
lcall
popa
dec
inc
dec
jge
sbb
mov
xchg
sub
in
sub
repnz
dec
and
sbb
scas
wrmsr
or
fldl
add
pop
mov
jmp
add
mov
mov
pop
test
push
cmp
and
rcrb
push
cmp
in
or
in
pusha
mov
xchg
inc
dec
sub
adc
push
enter
lds
push
idivb
pop
inc
loopne
pop
test
sbb
cmp
dec
cmp
jmp
sub
push
lcall
sub
shl
inc
inc
fdivrs
pop
cld
jbe
popf
lahf
sar
cmp
sub
or
xor
leave
cli
push
lret
add
dec
xor
fsubr
out
adc
gs
sub
add
call
pop
fwait
sahf
dec
stos
into
js
mov
std
mov
or
cwtl
js
xchg
dec
dec
and
cli
mov
lock
mov
mov
add
xlat
pop
jmp
scas
xor
mov
inc
aas
jmp
add
jmp
les
mov
cwtl
popf
push
ffreep
imul
in
shr
call
mov
jle
in
and
addl
ret
loopne
add
into
mov
sub
test
adc
ljmp
and
lret
and
rcrl
pop
in
sbb
push
cli
xlat
adc
rorb
dec
jmp
lret
mov
sub
fdivl
cmp
add
jo
jmp
and
dec
test
add
in
aaa
inc
pop
pop
addr16
ss
or
jle
das
stc
sbb
xchg
inc
pop
out
enter
or
adc
adc
pop
je
fwait
inc
or
fcmovbe
aam
xor
sbb
notl
psraw
sti
push
popf
cmpsb
mov
or
or
jo
push
mov
xchg
jo
sbbl
insl
es
scas
add
in
jmp
mov
xchg
jno
shlb
clc
jo
cwtl
mov
les
int
insb
sbb
mov
sub
movsl
call
mov
jmp
jo
mov
mov
adc
imul
cmp
jnp
ja
stos
call
cmpl
adc
sub
sub
rclb
pop
pop
add
fisubrs
mov
shrl
test
or
dec
add
jo
sbb
aaa
icebp
stos
pop
dec
and
mov
ss
inc
mov
add
or
repz
andl
mov
mov
push
add
xchg
add
sub
push
and
lock
cmp
cmpsl
push
in
jg
push
pusha
sbb
push
es
sbb
sbb
fldl
mov
mov
xchg
sub
sbb
pop
xor
cmp
push
testb
jb
pusha
dec
adc
mov
push
xchg
push
ret
push
pop
push
andb
inc
lret
fwait
mov
pop
neg
sub
lock
pop
sub
int3
arpl
jmp
adc
mov
ret
push
adc
dec
mov
loop
pusha
cmpsl
push
aas
adc
push
dec
mov
xchg
xchg
jp
fs
add
ret
addr16
out
xor
push
in
add
mov
add
cltd
int
stc
cli
push
mov
sbb
pop
jo
sbb
push
ja
jg
jg
ret
and
cltd
mov
and
mov
pop
stc
lcall
dec
xor
and
jne
add
outsb
pop
push
and
or
shrl
inc
push
addr16
sub
dec
mov
inc
xchg
and
sub
rorl
push
clc
mov
and
icebp
pop
popa
clc
pushf
sub
in
inc
push
adc
sub
mov
inc
xor
mov
push
int3
clc
add
mov
jno
mov
xor
pop
inc
cmp
jbe
stos
hlt
add
lds
cli
push
fmuls
fmuls
pop
cmp
std
notl
push
fildll
xor
sub
add
jp
andb
push
int
pop
inc
in
add
mov
jle
cmp
inc
and
inc
ret
pop
repz
scas
fs
sub
xchg
jne
or
jg
mov
lods
add
arpl
add
lret
fisttpll
movsb
rcr
repz
adc
outsl
sub
icebp
xor
aad
pop
mov
mov
cmp
xchg
and
popf
or
dec
cmp
mull
adc
push
dec
xor
push
adc
push
jno
ljmp
push
repnz
mov
fiadds
sub
jae
inc
nop
outsb
dec
hlt
hlt
sub
mov
cltd
test
dec
xchg
pop
loope
loopne
adc
pop
adc
in
add
add
es
adc
or
pop
cmp
sbb
xorb
cli
lret
xchg
mov
lds
dec
movsl
sbb
cmpb
push
mov
pusha
adc
sbb
cmp
pop
enter
dec
adc
xor
jg
aad
mov
pop
pop
dec
inc
xor
mov
in
add
repnz
stos
mov
add
adc
cmp
xor
ret
into
and
clc
mov
mov
and
jnp
and
dec
pop
icebp
xchg
sub
push
xchg
cmp
jnp
imul
adc
cs
dec
sbb
popa
sahf
pop
insl
rcrl
sahf
jp
addb
pop
dec
add
jle
sub
inc
fisubrs
pop
mov
jnp
cwtl
sub
pushf
movsb
cld
stc
dec
pop
cli
and
and
loopne
mov
add
les
imulb
mov
pop
data16
movsb
dec
push
inc
sarl
mov
int
mov
push
adc
jp
inc
mov
ljmp
cli
xchg
test
lock
pop
lahf
gs
pop
mov
in
mov
pop
mov
int3
or
lea
cmp
js
xchg
cmp
inc
lds
jno
mov
das
mov
inc
cld
jmp
ret
in
sbb
mov
sbb
enter
pop
xor
sub
cmpsb
inc
clc
add
pop
fs
xlat
add
rclb
pop
xor
push
jg
jbe
jle
rclb
cmpsb
popf
push
decb
call
mov
sub
and
clc
out
lcall
and
rolb
leave
or
cld
das
sarl
mov
push
add
les
test
into
icebp
imul
inc
adc
add
xor
jbe
fs
pop
div
jge
out
and
sub
jmp
sub
mov
adc
fldcw
adc
je
add
push
stc
lds
xlat
push
fsin
add
xchg
or
into
or
jbe
lcall
aam
lahf
ret
or
lahf
inc
jne
inc
daa
push
into
push
add
inc
push
pop
mov
inc
scas
jne
out
ret
mov
rorl
sbb
sub
sti
inc
sub
gs
jge
dec
mov
adc
fsts
test
inc
in
sbb
cld
jo
int3
leave
xor
or
fisttpll
in
sahf
adc
lods
mov
push
or
clc
xchg
in
pop
cmp
adc
outsb
jmp
and
dec
push
mov
ds
cwtl
xor
adc
mov
adc
sti
stos
push
out
fcmove
sub
dec
sbbl
push
popa
arpl
jle
pusha
jmp
xor
notb
adc
push
push
sti
mov
push
test
mov
mov
inc
hlt
sbb
sub
sbb
lcall
add
cmp
mov
inc
test
inc
pop
hlt
xor
mov
pop
mov
inc
aaa
pop
sub
add
outsl
hlt
repz
pop
sub
xor
imul
add
cs
dec
add
lds
movsl
mov
sub
loope
loopne
push
xchg
cmp
outsl
xchg
inc
pop
add
push
rolb
cli
pop
dec
outsl
adc
cmp
test
mov
add
stc
clc
add
mov
aad
mov
sbb
or
jmp
scas
jmp
cmc
shll
shlb
jmp
mov
popf
pop
lret
pop
add
sbb
inc
sti
xchg
and
mov
mov
pop
add
cmp
dec
sbb
jnp
xor
inc
mov
xchg
or
call
add
lret
add
shrb
rcr
mov
fisubrl
fisubrl
sub
outsl
jg
out
cmpsl
inc
pop
bound
adc
sbb
jne
cld
cli
xchg
sarb
cs
lods
insb
sub
pop
call
xchg
or
test
sub
test
nop
add
sbb
in
mov
or
adc
mov
jg
aaa
push
push
lds
imul
insb
sbb
add
jl
mov
shll
push
enter
and
inc
loop
mov
mov
mov
pusha
and
push
and
jbe
add
cmp
sbb
lret
cwtl
arpl
xor
xorb
push
jp
data16
ret
or
dec
loopne
aaa
push
mov
test
clc
jne
xor
push
mov
scas
or
cwtl
fucomp
adc
sbbl
pop
insb
add
repnz
paddsb
ja
mov
enter
sbb
push
or
jbe
in
jmp
out
inc
mov
shll
add
xor
mov
data16
and
push
lret
push
cwtl
movsb
pop
test
dec
int3
ja
daa
shll
push
mov
jmp
jp
jo
aaa
sub
inc
repz
xchg
and
push
ret
loopne
icebp
repz
push
mov
pop
loop
jnp
xor
push
lods
mov
push
int3
incb
repz
jbe
in
cmp
inc
add
movaps
inc
bound
jmp
mov
mov
pop
push
leave
xchg
mov
das
sbb
add
aaa
inc
sarl
inc
adcl
inc
dec
add
loope
pop
gs
adc
popa
cli
jo
mov
adc
data16
dec
rolb
push
and
sbb
dec
inc
push
jmp
test
fadds
sub
mov
lcall
add
add
imul
leave
push
pop
inc
fnstenv
insl
mov
dec
mov
mov
aas
cmp
loopne
ljmp
push
inc
mov
pop
inc
bswap
repnz
shr
adc
cwtl
dec
aad
scas
mov
in
in
jnp
mov
push
pop
mov
neg
pushaw
decb
popf
push
pop
cmp
loopne
mov
lods
fimull
bound
push
jne
mov
mov
adcl
jae
mov
jl
push
push
mov
jne
pop
xchg
cmp
sysret
mov
xchg
testl
sub
out
adc
xchg
stc
mov
inc
mov
fwait
nop
rclb
dec
xor
xchg
push
mov
in
cwtl
ja
pop
adc
mov
add
loope
or
inc
push
mov
and
leave
lret
pop
arpl
mov
flds
mov
cmp
sbb
xlat
enter
mov
inc
sub
mov
leave
cld
and
pusha
and
add
add
cwtl
fdivr
movl
jmp
sub
add
sub
insb
adc
mov
mov
mov
daa
jno
lret
notl
loopne
lret
dec
fidivs
lods
mov
mov
cld
mov
mov
jnp
sub
jmp
mov
adc
add
jmp
incl
test
mov
lock
ficompl
fsts
inc
pop
xor
into
pop
push
xchg
daa
ja
mov
aad
sbb
mov
cmp
arpl
dec
insl
or
fstpl
loope
dec
inc
mov
add
in
xchg
lods
push
pop
pop
jmp
rep
push
stos
cmpsb
in
inc
sub
inc
iret
dec
mull
push
sbb
out
or
mov
push
jo
xchg
xchg
adc
fs
in
add
dec
push
int
or
dec
pop
jg
outsl
jmp
cld
adc
pop
aaa
flds
xchg
mov
loopne
call
jno
dec
dec
orb
loope
and
pop
pop
mov
cltd
faddp
jp
xchg
mov
jb
and
rcr
dec
xor
dec
leave
pop
jle
mov
and
jmp
and
movsl
xchg
pop
add
mov
xor
or
jmp
cmc
int
decl
inc
lods
xlat
cmp
push
jge
add
ss
mov
push
mov
xchg
xlat
jns
imul
add
je
leave
xlat
js
mov
ljmp
daa
cwtl
or
pop
mov
push
scas
mov
out
stos
stos
aas
movsb
add
pop
add
test
sbb
sub
bound
mov
or
das
out
cmp
popf
lea
push
or
adc
and
lahf
hlt
cmp
jmp
js
xor
sub
aaa
movsb
pop
cmp
scas
dec
fldt
in
movsl
pop
imul
in
sti
add
int3
mov
out
ja
or
out
filds
jno
cmp
push
mov
daa
sub
push
sub
adc
paddd
pop
cmp
ljmp
lcall
inc
push
dec
add
in
xchg
push
and
test
dec
xchg
push
push
lret
pushf
and
push
mov
faddl
jo
cmp
fistps
mov
lock
icebp
pop
pop
dec
pop
ljmp
jmp
cwtl
pop
dec
jbe
fimull
jmp
or
inc
mov
subl
popf
jns
imul
or
int
mov
punpckhbw
xchg
popa
jmp
mov
inc
push
and
clc
aam
mov
mov
or
lret
adc
cmp
loopne
daa
out
call
lock
mov
push
sbb
cmp
cmp
test
outsb
or
rcrb
inc
pop
daa
mov
inc
inc
pop
cmpsb
adc
or
das
popf
rorl
pop
adc
fisubrl
loop
adc
insl
loope
xchg
scas
pop
inc
mov
pop
adc
push
sbb
xor
cltd
aaa
and
pop
testl
mov
push
pop
insb
lods
add
ds
push
pop
imul
add
jl
ss
aam
and
mov
xchg
cmp
mov
lds
push
mov
xor
jmp
add
inc
xor
mov
jp
sbb
add
iret
cmpsl
rcrb
dec
cmpsb
fistl
mov
xor
scas
dec
das
sbb
adc
dec
repz
jnp
add
fcomps
dec
jne
xor
movb
adcb
sbb
jae
or
push
aas
push
push
cs
sbb
pop
sub
pop
leave
loop
push
jns
or
arpl
cwtl
rcll
push
xor
cmp
pop
add
xor
jns
xlat
js
hlt
iret
data16
push
jo
dec
clc
fiaddl
dec
popf
fidivrl
in
adc
cld
movsl
subb
dec
mov
jle
inc
shll
dec
imul
outsb
add
lret
mov
iret
add
ja
mov
imul
cmp
jb
pop
je
fldcw
pop
sbb
lock
cmpsb
jno
cwtl
fcomip
jmp
repnz
push
mov
or
rolb
test
ljmp
js
maxps
mov
adc
xchg
lcall
testb
adc
push
dec
pop
out
ljmp
adc
std
pop
push
xor
push
outsl
sti
or
std
mov
andb
inc
jp
out
js
mov
push
ds
shlb
in
add
movsb
out
loop
xor
aad
sbb
and
es
lods
xchg
roll
or
iret
dec
scas
xlat
test
push
je
pop
mov
rolb
mov
jmp
or
and
ljmp
dec
fs
push
add
dec
push
inc
ret
mov
in
outsl
roll
add
xor
dec
adc
ljmp
data16
lahf
pop
jp
addb
mov
sahf
jmp
push
test
push
inc
mov
clc
decl
push
mov
or
push
fstps
and
lods
push
adc
mov
popa
or
pop
shr
jmp
jae
inc
jecxz
hlt
into
pop
mov
jle
lds
jb
mov
lcall
xor
lret
mov
in
adc
stos
xchg
call
or
mov
je
lods
data16
inc
or
xor
sub
sbb
add
call
jnp
jmp
mov
or
mov
adc
arpl
nop
mov
jno
sbbl
push
inc
pop
mov
movsl
fucompp
mov
push
inc
stos
popf
mov
dec
mov
inc
jb
and
jmp
jo
pop
loope
mov
jp
mov
fs
mov
inc
test
pop
scas
clc
push
sar
aad
leave
mull
jl
bound
or
idiv
ja
stos
add
arpl
push
dec
jmp
insl
jo
jno
mov
test
cmc
enter
pop
jmp
fimuls
out
out
fists
add
sbb
add
xchg
sub
mov
push
sahf
mov
dec
lret
ja
pop
inc
sub
push
mov
les
das
add
sub
loopne
mov
loop
pop
out
stc
xor
jmp
sti
mov
in
push
dec
and
cmc
clc
dec
cmp
aad
push
add
fs
sub
push
and
push
lret
push
jmp
je
sub
and
popa
movsl
or
mov
cs
or
mov
stc
xor
mov
add
les
adc
pop
dec
mov
pop
sahf
mov
dec
mov
fnstcw
mov
add
fisttps
aad
inc
mov
sub
jae
jge
mov
clc
dec
nop
jg
and
ja
jmp
sub
add
add
pop
push
das
jmp
push
or
gs
jo
or
mov
xor
dec
lds
mov
sbb
movsb
jg
dec
das
push
icebp
push
and
daa
sub
dec
data16
pop
mov
test
jbe
ret
push
mov
adc
loope
adc
dec
add
inc
cltd
xchg
repnz
dec
pop
adc
push
ret
adc
rolb
bound
and
push
shlb
mov
inc
mov
push
out
cld
add
pop
not
push
jno
sbb
mov
sbb
push
push
jbe
roll
daa
jge
push
or
dec
les
fsubr
imul
or
jno
scas
inc
mov
add
call
cmp
out
leave
ljmp
add
pop
cmp
push
popa
fwait
ret
and
jmp
mov
dec
push
xchg
bound
out
or
or
push
push
fisubs
inc
outsl
and
js
in
inc
fwait
mov
mov
or
in
fbld
xchg
out
rorl
mov
mov
sbb
jae
or
icebp
or
xchg
adc
inc
mov
add
or
fscale
cmp
push
dec
nop
push
push
or
sbb
or
out
push
mov
or
aas
pop
daa
shll
xorb
and
xor
mov
push
out
ret
icebp
outsl
mov
jne
push
mov
inc
aas
sbbb
pop
push
call
test
push
push
cwtl
arpl
into
std
lea
stc
addl
mov
leave
push
cli
xor
inc
pushf
loopne
add
adc
adc
test
aam
rcrl
ret
inc
mov
cmp
mov
fwait
jg
sub
orb
mov
lcall
cmpsb
call
lcall
cmp
sarb
jge
adc
push
rclb
adc
lds
dec
stos
subl
lods
jle
js
pop
sti
jnp
mul
imul
or
push
push
adc
mov
mov
push
stc
push
inc
or
mov
std
mov
data16
pushf
and
mov
or
push
adc
sbb
test
pop
xchg
jle
lea
cmp
xor
mov
sub
scas
outsb
mov
adc
push
push
mov
jecxz
pushw
mov
in
popf
jo
push
or
jl
add
inc
in
fdivrs
push
inc
fldcw
stos
add
jmp
mov
sub
push
bound
lods
add
push
pop
cmc
fidivrl
out
xor
fidivrl
les
or
ja
ret
inc
push
xor
xchg
jne
pop
add
add
shr
xor
mov
roll
ljmp
jae
scas
adc
icebp
fcmovne
test
decl
or
daa
mov
or
in
enter
iret
repz
movsb
stc
jns
pop
ret
dec
je
adc
mov
add
fisubrl
push
das
push
pop
ror
jecxz
mov
cmpsl
inc
int3
adc
push
cld
inc
mov
cld
fs
rcrb
shrl
sbb
icebp
jo
and
out
hlt
daa
sbb
add
jmp
in
and
je
dec
xor
dec
sbb
adc
cmpl
int
cmp
outsl
int
and
or
jl
mov
popf
stc
ret
in
ds
pushl
or
dec
cld
push
xchg
sbb
inc
pop
xchg
xor
repz
mov
mov
adcb
mov
inc
adc
in
test
inc
xchg
sub
push
mov
sub
test
push
push
lock
fstl
orb
add
mov
inc
inc
mov
les
cmpb
int
or
adc
push
imul
daa
xor
mov
fcomps
imul
leave
and
and
pop
addb
sub
jp
in
dec
std
data16
mov
in
jmp
mov
adc
jmp
mov
mov
or
mov
xchg
mov
je
dec
cld
sub
fstl
clc
inc
movsb
or
jmp
xchg
mov
mov
xorl
or
jl
mov
adc
movsb
aaa
out
out
sbb
popl
test
cs
dec
pop
ret
test
sbb
sbb
out
push
ds
add
test
push
js
mov
sub
or
jge
jp
add
mov
mov
pop
push
jmp
push
and
adc
out
inc
mov
jne
dec
cmp
je
or
pop
xchg
inc
je
lods
inc
fwait
and
add
add
mov
push
push
mov
in
cli
jb
pop
dec
pop
outsb
pushf
arpl
popf
gs
push
jo
mov
mov
mov
cs
pop
adc
mov
idivl
mov
dec
jnp
pop
sbb
hlt
pop
pop
clc
add
push
mov
shl
or
cmp
jne
jle
pop
test
adc
mov
or
dec
stos
sbb
sub
sbb
test
pop
inc
mov
out
test
jae
insb
push
jmp
or
jnp
xlat
add
and
sti
inc
mov
or
cmp
aas
icebp
jb
cmp
je
aad
shl
xchg
sub
jle
jle
adc
sub
daa
loop
mull
mov
ss
push
mov
add
mov
shl
push
lahf
in
or
std
inc
mov
pop
ret
paddsb
xchg
rclb
lods
cmp
sbb
jns
movsl
push
and
int
push
xchg
pop
push
adc
xchg
lea
out
push
mov
ret
loope
xchg
dec
push
lds
jp
push
jmp
add
xchg
inc
mov
sub
cmp
mov
or
or
adcb
pop
cld
mov
jp
jne
ret
cmp
and
fcomip
mulb
fistl
loopne
push
sbb
pop
mov
adc
mov
int3
test
and
mov
stos
mov
movsb
jmp
or
jge
leave
aad
mov
pop
jecxz
jmp
shrb
into
or
dec
add
ljmp
push
push
add
mov
pop
lahf
rcl
jmp
xlat
mov
pop
mov
sub
mov
sbb
lods
cmc
subb
dec
sbb
mov
xchg
pop
lahf
adc
inc
aad
add
pop
push
xor
cs
dec
jno
ljmp
jae
addl
lds
xchg
pusha
dec
sub
scas
icebp
cmp
adc
add
mov
cmp
or
ss
sub
mov
sbb
pop
clc
or
imul
sub
mov
inc
leave
push
dec
addr16
and
or
ss
mov
mov
jmp
pop
pop
sub
dec
psubsb
leave
je
adcb
add
sbb
loop
pop
or
dec
sub
add
add
int
dec
lahf
xor
xlat
add
clc
aas
adc
sbb
data16
loope
pop
cmp
and
sub
jp
mov
filds
mov
xor
clc
push
bound
pop
insl
cmpsl
loop
cli
dec
jg
xor
aam
pop
in
mov
jge
pop
lret
xchg
fiaddl
inc
sub
ret
add
sbb
jmp
jnp
decb
test
push
jno
mov
pusha
pop
orb
xchg
gs
jmp
inc
nop
lret
clts
inc
jbe
lds
xor
push
pop
inc
dec
lahf
jp
rcrl
lea
mov
mov
jne
stos
mov
aam
dec
mov
cwtl
jmp
cli
lock
xlat
inc
int3
pop
add
add
and
sub
pop
mov
push
imul
mov
mov
ret
test
das
std
mov
mov
lret
in
movzwl
filds
clc
jmp
lods
sbbb
xlat
outsb
pushf
or
fs
cli
push
in
jb
sbb
call
sub
and
neg
les
ljmp
sub
push
mov
adc
push
push
add
xchg
sub
sar
xor
sub
mov
pop
das
fsubl
jp
arpl
or
xchg
push
xchg
xchg
pusha
sub
pop
jl
cmp
leave
enter
mov
pop
jecxz
mov
mov
test
push
xchg
hlt
rcll
jl
out
cmp
cmp
mov
sub
cmp
out
cmp
and
or
push
jb
orb
push
pop
add
mov
push
cwtl
bound
test
xlat
stos
add
clc
push
jmp
pop
add
add
imul
or
push
shl
pop
jae
iret
sbbb
testl
imulb
xchg
cli
jbe
and
push
push
pop
sbb
roll
bound
push
inc
jg
fildl
mov
mov
sarb
nop
xor
cmc
add
sbb
shlb
inc
sbbl
pop
lcall
aas
and
add
xchg
sbb
or
repz
jg
push
ret
aad
or
inc
mov
sub
mov
imul
inc
pusha
add
and
test
pop
pop
adc
imul
pop
pop
in
icebp
popa
xor
outsl
int
shlb
cmp
mov
jmp
fnstsw
imul
jae
outsl
xchg
fldt
mov
das
sub
add
out
jmp
das
mov
mov
ret
shll
ljmp
scas
nop
test
sub
cmpsb
inc
pop
loopne
gs
fwait
lds
shrb
testb
push
push
popf
shr
xlat
jp
insb
add
pop
pusha
and
cmp
cmp
into
xchg
adc
enter
jmp
lret
dec
mov
add
mov
mov
pushl
shl
out
out
or
or
xor
mov
andb
add
cltd
xor
push
xor
clc
pop
mov
mov
or
mov
push
cmpsl
ret
repnz
jo
lds
data16
xor
adc
push
xchg
loop
shll
idivl
in
sub
dec
and
pop
lods
sub
popa
inc
and
and
push
int3
xchg
mov
sub
jns
mov
xchg
cmp
fiaddl
popa
repnz
xchg
popa
ljmp
xchg
sbbb
pop
sbb
jge
test
lcall
mov
popa
insl
ficompl
sbbb
push
mov
not
shr
hlt
jmp
add
in
call
xor
in
hlt
mov
nop
push
dec
fbld
es
call
loop
js
push
loop
arpl
dec
adc
sbb
or
fnsave
pfrcpit2
imul
push
das
sub
pop
and
mov
repz
test
neg
adcb
frstor
add
or
addb
ljmp
push
dec
or
xchg
xor
inc
cmp
jmp
mov
and
xchg
dec
cmp
stos
add
lods
stc
or
inc
mov
mov
or
or
or
or
jle
lea
into
lds
insb
jno
pushl
mov
or
imul
inc
xlat
mov
add
cmp
popa
add
rolb
mov
ret
test
call
and
pop
xor
fwait
ja
iret
mov
or
cmp
test
das
into
subb
add
cmp
xchg
sub
jo
pop
mov
scas
rolb
cs
cmp
test
dec
sbb
imul
lcall
mov
push
pop
add
insb
add
aad
sub
lods
les
dec
or
lock
stc
pop
orl
xchg
push
insl
adc
xor
inc
in
nop
sbb
stc
test
addr16
andl
xchg
mov
sub
test
pop
dec
xorb
ficomps
mov
pushf
push
mov
mov
leave
push
ljmp
or
sbb
adcb
mov
or
jp
stos
mov
push
leave
mov
popa
or
mov
xchg
icebp
addl
jne
add
jle
mov
add
dec
in
xchg
xchg
loope
adc
and
cmp
fwait
lcall
and
and
and
and
and
inc
scas
mov
pop
and
cs
inc
mov
adc
call
adc
xor
leave
push
inc
add
mov
sbb
adc
sbb
add
sub
mov
daa
jbe
dec
ror
notl
and
and
repnz
je
push
pop
push
mov
jmp
sti
adc
push
icebp
xor
test
mov
mov
dec
decl
jmp
push
data16
scas
cmp
and
cmp
dec
mov
les
jmp
dec
push
mov
jb
movsw
or
and
mov
add
rolb
jle
xor
or
rorb
pushf
sbb
or
in
into
bound
xorb
idivl
stos
lock
jmp
fcoms
jno
jle
or
push
in
cld
insb
fidivs
push
mov
in
cmp
xor
stos
jmp
dec
pusha
inc
adc
and
xchg
dec
inc
mov
mov
mov
adc
push
and
pop
and
mov
cmp
sbb
xor
enter
or
sbb
daa
pop
vpsubsw
jmp
push
or
xor
inc
jb
add
add
sbb
je
out
orl
sub
and
inc
jbe
pop
jnp
mov
loop
inc
pop
das
repz
push
out
and
push
lods
js
pop
push
cwtl
and
or
das
jnp
add
repz
into
jmp
idivb
fistps
jg
in
cmp
add
or
ljmp
sub
pop
gs
add
das
add
jmp
add
push
cld
lret
add
mov
mov
jp
nop
cld
daa
repnz
jge
jmp
or
lods
rcll
sub
pop
pushf
push
adc
jmp
faddl
cmp
push
inc
mov
or
pop
and
xor
loopne
push
mov
lret
enter
or
nop
popf
add
repnz
test
repz
push
push
push
add
xor
pop
clc
add
sbb
mov
lods
xlat
inc
iret
loop
or
push
mov
faddp
adc
hlt
jge
subl
test
mov
fisubs
in
popf
pop
jmp
nop
pop
pop
add
mov
jmp
pop
xor
and
or
mov
imul
out
call
xchg
test
mov
inc
push
shrb
call
xorl
daa
pop
imulb
mov
leave
lock
fnstcw
in
and
loop
pop
adc
push
pop
adc
push
mov
or
imul
int3
and
aaa
shrb
xor
test
call
nop
mov
push
and
jmp
bound
out
mov
orl
inc
xchg
xchg
subb
icebp
rolb
rorb
pop
das
ss
stos
xchg
jg
inc
sbb
mov
dec
mov
cmp
or
aaa
inc
bound
shll
inc
or
aad
imul
test
cmp
popf
mov
or
rorl
adc
inc
inc
sbb
ja
or
xchg
jmp
popfw
mov
pop
sbb
jg
ret
push
xchg
in
dec
rcr
jne
push
in
nop
push
jmp
push
or
in
xchg
cmp
xor
inc
fcmovnb
push
mov
sub
and
sub
pop
sub
mov
bound
popf
push
cmp
es
push
cmpsl
es
and
mov
rolb
or
in
stos
and
cmp
imul
mov
das
add
pop
xchg
mov
pop
jmp
push
pop
nop
cmpsl
add
adc
test
in
push
shll
aas
leave
mov
push
flds
push
sbb
mov
sub
insb
lcall
mov
por
lods
pop
or
dec
xor
rorl
lds
dec
add
or
inc
xor
xor
dec
aam
dec
neg
mov
cmp
mov
xorl
pop
mov
or
or
add
add
ljmp
and
bound
inc
or
mov
stos
or
out
push
bound
mov
mov
sbb
out
lds
mull
pop
jmp
ret
dec
js
or
mov
mov
xlat
dec
sub
and
or
mov
jae
push
shlb
das
pop
and
nop
in
push
leave
xchg
and
pop
xchg
subl
shll
jns
adc
imul
mov
aaa
sbb
sub
push
pop
test
subb
dec
mov
mov
fs
loope
cs
jnp
pop
fdiv
jno
jge
inc
jmp
mov
pop
lods
push
inc
aas
mov
sub
adc
stc
mov
jo
aad
jno
xor
push
ss
lret
cmp
push
dec
icebp
add
mov
push
sub
add
cmc
sub
cld
icebp
cli
add
mov
sub
push
or
cmp
dec
mov
adc
es
cmp
adc
ds
hlt
popa
push
dec
sub
xchg
call
ljmp
jmp
mov
stos
mov
pop
and
adc
gs
pushf
inc
mov
xor
maxps
adc
xor
je
enter
and
outsl
cmp
mov
mov
pusha
lea
add
sub
imul
lock
mov
aas
and
shlb
mov
orb
cmpsb
jae
sbb
fs
or
in
orl
adc
cmp
or
rorl
add
das
fstp
lods
popf
mov
mov
arpl
mov
sub
cmpsb
inc
jmp
add
jecxz
or
and
daa
or
lds
xchg
orb
fidivrl
lahf
add
std
and
inc
xor
cmpsl
into
add
pop
icebp
pop
dec
dec
inc
shrl
lret
xor
inc
shlb
fwait
lcall
sub
push
mov
popf
push
jnp
add
sbb
mov
jae
mov
ja
ret
test
jns
push
ljmp
mov
mov
adc
push
push
lea
lds
lea
mov
imul
jge
lock
dec
inc
test
or
test
pop
loopne
std
mov
scas
dec
fwait
rcll
push
xchg
negb
incb
or
inc
test
notl
pop
mov
pop
cmc
jecxz
lahf
mov
xor
fs
out
adc
jno
xor
jb
xchg
xor
hlt
test
add
or
cmp
out
add
pop
test
ret
mov
je
sbb
popf
jmp
jge
xchg
mov
aam
mov
rorl
stc
js
cld
mov
adc
xor
mov
and
mov
cs
stc
pop
mov
lock
jns
pop
push
jne
lret
inc
mov
rolb
addr16
sbb
dec
sub
stos
cmp
push
mov
ss
or
adc
or
push
adcb
jg
in
shll
sub
mov
pslld
adc
pop
js
add
or
bound
jp
ss
dec
leave
fs
lahf
adc
xor
js
sub
sub
jb
xlat
xor
scas
mov
dec
push
push
mov
add
aas
in
or
jno
mov
xchg
scas
popa
and
mov
pop
iret
xor
pop
orb
push
dec
dec
jecxz
ret
gs
stos
adc
mov
jp
push
sbb
pop
add
push
cli
push
fldcw
inc
push
add
cltd
rsqrtps
adc
mov
cmp
cs
mov
out
mov
push
xor
lret
or
mov
mov
add
test
or
pxor
fstl
test
adc
cld
aas
mov
das
push
push
pop
nop
push
dec
jge
popf
adc
jmp
in
cmp
pusha
or
xchg
xor
xchg
mov
mov
fistpl
push
add
jge
outsb
popa
mov
int
xor
orl
in
out
and
mov
push
jmp
xchg
les
sbb
mov
mov
ret
mov
mov
loope
test
jb
lods
aad
mov
push
sub
aas
dec
adc
scas
adc
mov
pop
adc
xor
add
ret
ror
insl
add
mov
cmpsl
cmpsl
sub
outsl
fcomps
and
rorl
mov
ds
add
xor
and
ret
lret
aas
inc
fsub
push
sub
inc
adc
sbb
push
and
pop
adc
dec
icebp
dec
nop
mov
ljmp
lret
hlt
sbb
fdivp
mov
shl
in
aam
fs
xchg
test
les
movsl
mov
and
cmp
adcb
xchg
dec
outsl
sbb
mov
mov
mov
inc
pop
inc
inc
cmp
pop
mov
into
dec
pop
sbbl
mov
fdivr
popf
rcl
imul
ret
xchg
add
xor
imul
push
scas
ret
orb
sub
inc
jg
jne
cs
xor
add
pop
in
mov
mov
sub
test
add
mov
roll
mov
push
test
mov
dec
add
add
push
or
addr16
sar
push
rorb
inc
mov
adc
lret
pusha
out
jmp
shll
sub
and
add
adc
inc
das
pop
cmp
push
mov
fdivs
vunpckhps
addr16
les
jmp
ja
dec
mov
je
inc
neg
jp
push
add
cmp
add
and
fildl
mov
jmp
mov
mov
inc
pop
pop
inc
add
lds
pushf
push
cmpsb
stos
and
pop
lock
push
pop
push
test
xchg
pop
in
mov
pop
push
mov
push
aaa
pop
in
jne
imul
pop
cs
adc
jo
inc
add
adc
jmp
xchg
mov
movsl
shlb
xor
and
xchg
bound
jno
mov
cltd
lea
shl
imul
imul
or
dec
movsb
and
sub
daa
std
sbbb
cs
sub
push
bound
xor
movsl
sbb
dec
cmp
aaa
dec
out
fimull
jmp
jbe
insb
test
repz
ret
jno
adc
push
add
mov
adc
sahf
add
sub
nop
push
xchg
js
pusha
daa
leave
enter
sbb
push
push
pushf
sub
test
pop
adc
adc
add
mov
icebp
sbb
dec
jne
std
push
add
xchg
inc
xchg
push
stos
lock
mov
cmp
sub
cwtl
pushf
addl
inc
jnp
push
bound
xchg
fwait
add
xor
lret
sti
xchg
xchg
add
cld
cmp
test
adcb
mov
in
xor
or
adc
jnp
hlt
mov
and
fs
repz
and
xor
in
loop
add
aaa
jmp
push
pop
int
push
add
or
mov
jb
add
inc
mov
sahf
push
pop
xchg
jnp
jmp
xbegin
shll
and
rcrb
out
mov
push
addb
dec
add
inc
jle
jo
dec
pop
pop
in
rclb
dec
adcb
stos
adc
in
push
sti
mov
xchg
add
sub
xor
aaa
sub
pop
mov
mov
sahf
call
fldenv
mov
rorb
jmp
mov
sbb
or
js
mov
push
call
push
mov
push
cwtl
jl
add
add
sub
ret
mov
xor
enter
dec
pop
xlat
filds
push
mov
repnz
jmp
decl
cmpsl
pop
mov
outsl
mov
mov
fcomps
fistl
dec
push
cs
pop
sub
mov
xchg
adc
out
pushf
inc
xor
xor
mov
inc
pop
movl
and
cmc
xchg
ret
or
inc
out
mov
pop
rcl
mov
test
xchg
repnz
jnp
mov
mov
repnz
cwtl
test
xchg
and
mov
push
adc
movsb
fcompl
sub
nop
aas
mov
test
out
mov
fisubl
shr
sbb
daa
xlat
loope
scas
js
pop
loop
push
fwait
jmp
cltd
jns
mov
add
push
scas
sbb
push
call
popa
jb
mov
add
add
pop
or
lock
sbb
je
mov
jg
mov
inc
adc
lret
scas
pop
mov
popa
cmp
sub
jmp
add
sub
mov
jmp
aam
stc
adc
jmp
js
daa
lods
dec
mov
dec
notb
outsb
adc
or
inc
aam
loop
sub
sbb
aas
dec
ficoms
enter
push
loop
mov
popf
das
nop
mov
add
jbe
int
gs
dec
cmpsb
cmp
mov
xchg
je
push
push
lret
add
hlt
lcall
push
bound
sbb
jnp
inc
jmp
sub
add
lcall
jp
pop
pop
cs
outsl
cmp
dec
or
loopne
sbb
push
les
cmp
push
fst
or
xlat
sbb
jmp
pop
test
jbe
push
shrb
das
fstpl
aad
push
cmp
cmpsb
stos
call
repnz
mov
iret
loop
pop
sti
inc
outsb
les
cs
negb
mov
nop
adc
lods
mov
adc
mov
sub
mov
or
in
jg
pop
cmpsl
popa
inc
sbb
jnp
in
xor
add
sub
sti
cmp
mov
inc
or
stc
data16
test
add
mov
shrl
sbb
sti
inc
pop
mov
repz
aam
mov
add
mov
and
dec
loope
dec
mov
loope
jl
dec
xor
clc
mov
test
xor
je
lock
xor
cmc
add
loopne
cmp
adc
outsl
add
fst
inc
cld
adc
xlat
pop
xchg
inc
addl
sub
or
shrl
sti
ljmp
jne
xor
push
xchg
scas
iret
adcl
fs
jnp
pop
pusha
mov
repnz
mov
ret
pop
cld
inc
shr
add
daa
outsb
xor
and
mov
into
dec
stos
cmc
popa
push
hlt
cwtl
rcr
push
pusha
mov
adc
add
dec
cmp
or
mov
stos
pop
int3
test
stos
mov
sub
xlat
or
xchg
jge
push
lret
mov
ret
push
pop
decl
sbb
push
sub
lcall
hlt
stos
aas
stc
test
or
aas
shl
sub
and
jge
mov
leave
push
push
inc
leave
mov
ret
add
pop
stc
pop
inc
or
ja
cmp
dec
stos
mov
lds
mov
outsb
and
xchg
sbb
pop
push
mov
loope
cmp
sarl
adc
adc
pop
xchg
fcompl
mov
unpckhps
add
imul
push
jge
popf
popf
cmp
loopne
jmp
adc
jnp
sub
pop
or
jmp
sub
scas
dec
data16
outsb
repz
mov
sahf
aaa
pop
lret
lcall
ret
xlat
sbb
dec
lods
hlt
xchg
repnz
movsb
scas
mov
arpl
cmp
jge
mov
ret
stc
sub
loop
testl
or
adc
lret
push
jae
out
int3
sahf
sub
ret
pop
out
xor
dec
cmc
dec
xchg
sbb
cltd
imul
push
cmp
call
sub
aam
add
add
push
shlb
mov
sti
rorb
imul
pushw
xchg
xor
pop
mov
mov
pop
test
in
dec
lock
dec
dec
or
fs
js
jmp
jnp
jbe
hlt
lea
sub
je
jecxz
dec
inc
mov
movsb
xor
or
mov
add
pop
xchg
cmp
cmc
sbb
xchg
push
and
mov
and
jbe
js
es
pusha
cmp
jecxz
dec
stos
or
pop
sti
lcall
clc
pusha
xor
or
arpl
pop
push
call
push
ljmp
mov
addl
lsl
aaa
les
push
mov
and
and
arpl
mov
outsl
andl
rcr
out
add
fs
inc
loope
repnz
sti
xor
pop
push
inc
jmp
mov
clc
xlat
inc
push
push
inc
insl
jle
mov
sub
orb
adc
pusha
aaa
jmp
and
cmp
rclb
movsl
shr
cld
loop
repnz
lahf
sub
rcr
push
jb
adc
adc
pop
pop
add
pop
in
std
fcoms
add
push
sbb
aaa
jle
mov
lea
xchg
add
jmp
or
xchg
dec
jne
in
fwait
daa
jo
roll
push
pop
adc
popf
outsb
loopne
adc
push
sbbb
or
or
or
mov
sarl
and
pop
adc
cli
shrb
call
mov
enter
xor
mov
call
pop
lods
ds
dec
or
leave
in
xchg
add
mov
int3
negb
pop
pop
mov
xchg
enter
xchg
call
andl
test
add
xor
mov
mov
mov
jno
push
les
cmp
neg
call
push
ljmp
ja
and
faddl
pushf
shrl
push
jae
add
adc
inc
daa
flds
cmp
scas
pop
push
mov
pop
add
push
xchg
pop
es
pop
test
or
inc
jl
push
scas
sub
cld
es
xchg
arpl
dec
xchg
inc
add
out
add
je
or
repz
punpcklbw
mov
fsts
xor
mov
push
je
adcb
mov
sbbl
adc
pop
xor
xchg
out
pop
pop
dec
xchg
out
out
add
or
aam
adc
stos
popf
cmp
xchg
jmp
nop
mov
shr
data16
in
repnz
shr
mov
sub
jmp
mov
xchg
rcll
add
scas
iret
cmpsl
or
inc
mov
adc
pop
xor
in
ret
or
pop
mov
mov
sbbl
aad
jnp
mov
mov
out
add
jae
and
in
mov
sbbb
pop
sbb
or
mov
and
adc
add
mov
stc
mov
loopne
shl
test
mov
lret
jg
out
inc
iret
jmp
push
cltd
pop
popf
in
dec
lea
sarb
and
std
cmp
ds
movsl
aad
and
xor
or
sbb
inc
jmp
loope
dec
cmp
cmp
inc
mov
js
leave
rolb
adc
or
imulb
addb
xchg
pop
jg
jmp
push
mov
test
add
loopne
icebp
je
movsb
dec
sub
mov
xchg
fsts
loope
adc
repz
sub
ss
daa
clc
and
inc
or
in
hlt
cmp
imul
call
mov
cmpl
pop
fildll
xchg
add
movsb
stos
mov
sbb
les
cmp
jle
insl
xorb
xchg
lock
or
push
mov
jl
inc
ret
adc
push
jmp
insb
imul
out
mov
mov
sbb
popa
xor
xchg
xchg
enter
mov
stc
aad
js
loope
icebp
ds
int3
js
adc
dec
pop
pop
test
mov
ds
xor
ror
hlt
jl
lods
adc
dec
das
mov
push
out
adc
sahf
shl
out
fld
in
rclb
mov
shr
pop
push
mov
dec
mov
mov
iret
aas
es
or
stos
sbbb
ret
mov
call
sub
xlat
cmp
pop
dec
subb
mov
push
pop
cmp
jnp
dec
xchg
push
dec
push
mov
inc
loope
push
hlt
xor
push
je
int3
or
test
mov
mov
jno
out
mov
in
sbb
mov
jl
jmp
mov
dec
cmpsl
dec
or
ficoms
mov
adc
mov
add
pop
rcrb
or
pop
adc
mov
iret
sbbb
imul
adc
aaa
jg
cmp
hlt
inc
or
and
cmp
sbb
shrl
push
jle
dec
out
xor
cwtl
popa
xchg
adc
pop
or
les
push
mov
sub
push
dec
dec
in
adc
push
sub
adc
jno
inc
add
add
push
add
mov
cmp
xor
insb
push
add
inc
jmp
lds
dec
arpl
add
imul
add
mov
repnz
cmp
add
sbb
aaa
jns
xor
stos
subl
mov
out
addr16
pop
rorb
pop
sub
and
push
and
jne
dec
xor
add
pop
mov
daa
xchg
loopne
lcall
jae
push
lahf
pop
sbb
add
push
pop
popf
js
sub
adc
push
sbb
loopne
out
sub
out
cmc
orl
push
dec
incl
out
or
jle
inc
push
jmp
mov
in
dec
and
fildll
rcrl
aaa
iret
mov
jae
pop
jmp
xchg
test
enter
int
cmp
inc
jo
jge
mov
jo
jmp
cmp
jbe
lahf
dec
sar
pop
push
cltd
arpl
push
shll
xor
push
jb
sti
aaa
mov
jne
mov
outsb
or
adc
pop
mov
pop
xchg
out
xor
mov
mov
sbb
mov
jl
xchg
icebp
adc
imul
sub
pop
inc
lods
xor
cmp
dec
in
add
xchg
pop
sub
xchg
and
cmpsb
jmp
jbe
push
inc
mov
sub
lods
xor
dec
dec
pop
test
pop
daa
jb
aad
sub
or
imul
ja
mov
stos
inc
ljmp
mov
and
xor
movsb
lds
mov
mov
ret
popf
push
pop
dec
stos
mov
pop
dec
ficomps
pop
movsl
test
cmp
mov
xchg
clc
scas
cli
adc
pop
int3
sbb
les
sub
jb
pop
je
push
jl
mov
cwtl
lahf
push
push
nop
int
dec
mov
pop
jmp
jne
lds
sbb
lcall
push
subb
push
inc
repz
mov
les
cmp
testl
dec
divb
scas
mov
ficoms
ja
lret
add
add
daa
lcall
pop
cltd
xor
cmp
pop
xor
adc
aad
mov
cmp
sbb
inc
fucomp
push
scas
push
push
pop
mov
in
ret
rclb
and
data16
out
jne
iret
loop
dec
dec
or
pop
mov
pop
xchg
push
les
mov
rorb
aas
repnz
pop
aam
in
in
cmpsl
sub
jecxz
add
shl
and
pop
sub
add
inc
and
xchg
push
cltd
xchg
lods
push
or
not
aaa
test
test
xchg
scas
and
aad
mov
push
pop
frstor
in
hlt
add
mov
adcl
push
push
push
popf
addb
xor
or
dec
and
cmp
dec
dec
sub
sub
sub
pushf
jno
pusha
push
push
lret
adc
mov
cmp
stos
dec
fcomps
mov
mov
sub
addr16
out
add
subb
pop
and
andb
pop
mov
mov
in
adc
icebp
or
stc
stos
push
test
dec
jmp
ret
push
inc
fdivs
pusha
xchg
or
fldcw
push
pop
pop
test
pop
js
inc
daa
loopne
push
mov
mov
into
or
jbe
adc
push
lcall
in
inc
lcall
add
sbb
push
xchg
loopne
rcr
inc
movsl
outsb
test
loopne
jmp
dec
inc
stos
inc
cwtl
por
sub
add
push
adc
inc
adc
stos
loopne
ret
mov
dec
xchg
call
push
mov
push
loopne
jne
dec
fs
push
cs
inc
or
lret
mov
pushf
outsb
stos
pop
dec
lods
add
in
pusha
pop
xor
push
aad
pop
mov
stos
push
movb
mov
push
push
jnp
stc
adc
adc
dec
das
push
pop
add
mov
adc
popf
lea
adc
add
test
xor
add
adc
dec
pushf
mov
popa
ljmp
iret
add
aam
push
aas
mov
push
or
mov
ljmp
and
lods
filds
ljmp
cmp
pusha
je
lods
pop
icebp
jmp
mov
sbb
sbb
add
aaa
out
nop
jmp
pop
push
int3
xchg
rcrl
push
repnz
hlt
push
cmp
out
sbb
mov
in
dec
mov
sbb
sub
add
lock
adcl
aad
scas
movsb
fmull
add
push
add
add
bound
and
sub
daa
test
inc
pop
pop
cmp
clc
add
xlat
dec
pop
pop
and
inc
add
rcrl
shrb
pop
cs
mov
or
mov
pop
mov
cs
iret
add
pop
mov
cltd
imul
xchg
dec
mov
aad
mov
fs
sub
pushf
inc
sub
push
das
mov
iret
popf
pop
add
fs
jne
push
test
sbb
push
add
movsb
test
jl
cmpsb
pop
pop
dec
jo
movsb
xor
sbbb
adc
in
push
sub
inc
xchg
or
pop
mov
push
sarl
leave
pop
jae
inc
pop
push
lea
sahf
jno
inc
lds
inc
aam
imul
push
cs
mov
ret
ficomps
pop
ljmp
or
inc
or
sahf
dec
and
sub
pop
and
xlat
xchg
popf
mov
adc
push
sub
xor
rolb
loop
add
push
addb
adc
jle
loope
pop
idiv
push
add
pop
repz
cmovl
add
test
mov
mov
pop
pop
fcom
addb
jb
add
in
lods
nop
dec
pop
xchg
ja
mov
mov
push
repz
mov
call
push
jecxz
push
test
cmp
adc
or
or
inc
and
popa
cmp
push
pop
push
push
mov
jle
lods
out
add
aad
jmp
ficomps
cmp
pop
push
push
add
adc
xchg
cmc
mov
push
push
push
cwtl
sub
enter
fwait
inc
icebp
and
inc
movsb
mov
mov
popf
es
icebp
mov
neg
xor
scas
imul
mov
out
mov
sub
outsl
or
std
push
inc
out
sub
jo
sub
fstpl
xchg
xor
mov
cs
mov
xchg
daa
outsl
fs
mov
dec
int
cli
xlat
int3
hlt
xchg
jecxz
je
sub
lds
adc
es
inc
mov
mov
pop
push
mov
shrl
dec
push
sbb
dec
pop
out
adc
or
sbb
ret
rorb
not
sbb
xchg
dec
test
mov
icebp
ja
popf
rcrl
stos
jns
and
hlt
xchg
fsubl
fists
inc
dec
push
mov
push
shr
mov
rorb
xchg
cmp
adc
fs
aas
add
adc
inc
xchg
leave
mov
jge
mov
pop
sbb
sub
aam
or
jg
pop
subl
mov
pop
jg
sbb
test
pusha
and
rdpmc
daa
pop
inc
into
sbb
pop
mov
sub
fs
test
jp
in
sub
into
scas
jns
adc
ret
dec
inc
jmp
rcll
rorl
mov
add
and
jge
ret
test
pop
scas
mov
sbb
in
arpl
outsb
xor
ret
or
rcll
repz
jnp
pusha
dec
jge
inc
mov
nop
xchg
sub
jmp
cmp
aaa
pop
sub
shl
pop
andb
adc
adc
in
pop
pop
xor
inc
sti
dec
push
pushl
fidivrs
pop
aas
fsubrl
push
pusha
push
push
mov
adc
mov
add
not
mov
jmpw
lret
data16
sub
imul
lock
jmp
add
dec
mov
pop
loop
pop
mov
mov
push
pop
scas
cltd
movsb
lock
sti
mov
cmc
mov
lahf
pop
lret
mov
dec
fidivrl
or
pop
inc
cmp
rorb
pop
xor
push
dec
and
jle
gs
inc
ljmp
cmp
dec
scas
into
xor
pop
add
repz
neg
cld
sbb
mov
or
pop
cwtl
mov
dec
jge
mov
cli
adc
sub
aad
hlt
pop
mov
dec
pop
inc
sub
imul
push
shlb
pop
pop
shr
sbbb
add
popl
mov
into
sub
enter
sub
dec
dec
sub
jo
daa
jge
aaa
daa
sbb
jmp
std
imul
or
loop
and
jbe
dec
jle
xchg
ret
jp
xchg
add
xlat
pop
sub
or
add
and
xor
xor
imul
add
js
aaa
cmp
loopne
add
xor
push
dec
cmpsb
lret
pop
rep
or
leave
add
pop
add
push
stos
in
test
roll
pusha
push
cld
into
xorb
pusha
pop
add
sbb
xor
sti
shr
stos
mov
or
jg
adc
xchg
dec
sub
pop
mov
cmp
movb
inc
loope
inc
xorl
popf
add
mov
in
lahf
lahf
out
or
and
mov
cmp
add
xchg
and
dec
adc
fmuls
inc
inc
outsl
punpcklwd
jb
push
sbb
arpl
mov
bound
test
inc
push
in
xchg
adc
in
pop
adc
stc
in
xor
ret
or
dec
pop
ficompl
jecxz
inc
js
and
cmp
or
adc
dec
mov
or
or
insl
pusha
add
stos
test
enter
inc
mov
fmull
mov
std
das
dec
cmp
jg
sub
cmp
add
jecxz
xor
loop
ds
test
jbe
dec
cmp
sbb
std
insl
add
dec
xchg
and
push
xchg
pop
out
push
push
ror
dec
mov
daa
push
testb
jno
and
add
loope
adc
les
int3
xchg
out
outsl
dec
aas
pop
pop
sub
jno
sbb
pop
jle
sub
loopne
mov
sti
daa
sub
mov
ror
subb
cmpb
ss
rorb
in
lock
add
shll
xchg
push
xchg
inc
out
mov
dec
mov
aas
movsl
fbld
ds
or
sbb
cli
daa
push
pusha
leave
repz
pusha
dec
sbb
mov
push
jo
cltd
xor
mov
sub
mov
ljmp
or
push
out
jbe
xchg
and
sub
push
pop
mov
lret
mov
mov
push
out
mov
shrb
adc
pop
and
out
push
jge
jg
call
ja
push
add
jmp
aas
repnz
adc
jne
push
mov
push
outsl
fcmovb
ja
push
aas
sub
scas
sbb
ret
pop
pop
mov
aaa
mulb
ja
mov
hlt
or
daa
jno
or
int
mov
ret
push
test
mov
cwtl
leave
xchg
aas
mov
sbb
loop
cli
es
das
jmp
mov
pop
sub
sahf
or
fwait
jno
and
mov
lahf
clc
pop
pop
dec
and
mov
jl
inc
dec
lods
not
cli
add
lods
sbb
data16
xchg
push
inc
leave
pop
popf
push
sbb
inc
arpl
jne
pop
sbb
mov
adc
push
mov
xor
jmp
arpl
dec
inc
lea
and
adc
add
or
dec
jmp
sub
mov
sar
mov
int
inc
movsb
nop
sub
add
ljmp
pop
sub
and
addl
lds
test
mov
shlb
mov
push
pop
ret
push
pop
call
or
and
rorl
sbb
rcl
push
add
rorb
pusha
rcrl
push
fnstenv
in
mov
dec
int
xor
ret
mov
inc
mov
add
lret
push
orl
push
dec
inc
dec
xor
push
imul
sub
dec
je
leave
test
and
pop
sar
mov
ficomps
adc
inc
mov
adc
test
cmp
dec
cmpsb
add
pushw
sub
mov
mov
cld
mov
fidivrl
xor
loop
jo
xchg
jle
pop
and
in
ljmp
fstp
add
shr
popa
scas
daa
dec
pop
dec
movsb
cwtl
lea
dec
jb
and
lahf
mov
lahf
xlat
pop
popa
sbb
sbb
add
mov
shrl
mov
std
jae
dec
push
xor
insl
loop
cmp
mov
cmp
or
sbb
xchg
push
inc
sub
or
adc
cs
or
loopne
cmc
push
or
push
cwtl
dec
inc
subl
call
add
out
inc
aad
imul
in
cmp
or
dec
pop
xor
jno
adc
jge
push
cmp
shll
mov
push
push
mov
xor
cli
lock
adc
mov
sub
push
mov
dec
and
mov
push
bound
sbbl
jb
push
push
mov
push
repnz
or
lock
and
mov
addr16
pop
pop
mov
cmovno
call
mov
jmpw
ret
decl
cmpsl
xlat
imul
fiadds
adc
push
dec
add
out
outsl
dec
rorb
push
sub
incl
mov
pusha
mov
xor
jmp
cli
lret
cmp
cltd
inc
dec
dec
pop
add
jnp
sub
lcall
cld
aad
popf
mov
and
pop
mov
sub
add
dec
test
insb
jmp
mov
mov
or
jmp
outsl
cmpb
test
getsec
xor
enter
jmp
scas
shll
cmc
ljmp
push
in
add
mov
mov
ja
xor
call
cli
pop
pop
pop
fucomp
test
test
inc
ret
sbb
jmp
or
shlb
adc
add
jns
mov
mov
in
aad
call
imul
mov
rorb
enter
or
pushf
push
dec
sub
cmp
pop
jmp
addr16
dec
fdivrs
jnp
enter
rcrb
mov
loop
daa
and
mov
mov
push
pop
jmp
push
mov
jno
js
cwtl
push
and
insb
pop
outsl
vprotd
jo
or
push
xchg
dec
cld
push
fistpll
adc
sbb
adc
mov
jmp
or
jmp
add
xchg
push
push
sbb
cld
pop
es
jae
adc
pop
or
add
loop
es
cltd
xor
cmpsb
loope
cwtl
inc
add
mov
push
pop
es
mov
push
sub
insl
xchg
sub
sbb
lods
call
push
mov
incb
cli
gs
push
dec
pusha
adc
adc
adc
notb
dec
cmp
int3
sbb
inc
pop
lods
mov
mov
push
mov
ffree
je
inc
les
ret
enter
jg
and
jb
adc
aaa
mov
in
push
cmpsl
jmp
popf
movsb
insl
push
loope
and
lcall
or
pop
roll
xchg
mov
pop
imul
cld
lret
pop
dec
mov
inc
clc
cli
in
iret
dec
out
loop
mov
std
push
adc
pop
test
clc
call
xchg
push
inc
in
or
inc
push
mov
gs
xchg
jno
leave
xor
arpl
push
jno
push
in
sub
pop
cmp
mov
or
push
pop
fs
xchg
fwait
push
pop
xor
fbld
push
pop
or
test
cltd
inc
add
rclb
call
incl
pop
inc
cmp
adc
push
xor
mov
jg
mov
or
mov
ss
pop
pop
scas
mov
xor
out
add
adc
xchg
orl
lods
and
adc
sbb
pop
jmp
push
inc
push
xor
xlat
pusha
das
dec
shll
xor
dec
mov
dec
add
pusha
test
jmp
aas
rcrl
ds
xchg
sub
dec
pop
rcll
dec
js
or
mov
imul
js
inc
sub
inc
repnz
pop
shrl
add
sub
adc
data16
lcall
adc
jmp
movsb
mov
shl
mov
push
push
jae
cmp
fs
stos
mov
jae
xor
or
mov
in
pop
lods
call
out
xor
push
mov
leave
cmp
fmuls
jns
push
adc
and
sbb
ret
push
xchg
js
dec
repz
jns
push
lahf
icebp
scas
cmp
mov
cmpb
aad
or
and
pop
or
mov
push
mov
pop
jp
xchg
push
rolb
jmp
rorl
loopne
ja
pusha
ljmp
ret
sub
adc
mov
xor
jp
repz
fsubl
jne
xchg
shll
inc
mov
inc
imul
cmp
pop
gs
jge
sbb
inc
push
push
add
jmp
rclb
or
lods
mov
jp
lods
ljmp
aad
add
insb
inc
push
nop
leave
xor
test
test
in
add
mov
fs
gs
jbe
xor
or
hlt
inc
aad
xor
pop
std
xchg
inc
or
push
cwtl
mov
fcompl
mov
jno
push
push
int3
mov
sub
push
mov
aas
not
das
ret
push
jmp
pop
xor
jmp
push
add
dec
jge
fcmovne
icebp
sbb
loope
xor
inc
pushl
dec
jp
loopne
fistl
ds
add
jmp
lods
das
daa
stos
mov
cmc
jne
dec
jl
scas
push
dec
fdivs
inc
orb
cld
pop
and
call
inc
xor
mov
mov
pop
xchg
jmp
cld
inc
xor
es
or
xor
rorl
pop
xchg
adc
pop
add
jg
sbb
and
cmp
jle
mov
push
int
aam
aas
inc
mov
push
mov
sub
mov
xor
pop
out
addb
hlt
and
iret
adc
mov
pop
cmp
jae
mov
popf
xlat
cmpb
and
cmp
lods
popa
xchg
jb
test
in
mov
or
fadd
and
loop
push
and
mov
outsl
push
inc
insl
clc
repz
xor
pop
fbld
hlt
pop
jge
sbb
dec
pop
enter
mov
sub
sbb
mov
xor
iret
push
or
mov
mov
rcrb
adc
fstpt
test
adc
or
es
sbb
cli
pop
pop
jno
or
add
stc
cmp
pop
pop
push
enter
push
push
xor
jmp
movsl
jp
dec
fwait
pop
cmp
push
pop
loope
push
jp
and
mov
test
cmp
repnz
adc
dec
cmpb
cli
or
dec
xchg
pop
push
pop
pop
sbb
jae
not
popf
dec
lret
addr16
add
sub
xor
and
or
pop
jmp
mov
inc
idivb
popf
enter
das
leave
or
xor
enter
int
sbbl
adc
add
ss
insl
out
mov
sbb
subb
dec
add
mov
jl
mov
testb
mov
mov
xor
jecxz
xchg
pusha
jns
iret
add
mov
jmp
xor
push
lcall
outsb
sub
rolb
cmp
jle
test
and
repnz
daa
push
add
xchg
xor
dec
cmp
dec
inc
or
cli
jle
mov
push
sub
add
and
das
jmp
fisttpl
and
pusha
xor
xlat
rclb
test
mov
inc
add
imul
inc
stc
lahf
pop
leave
out
test
cmp
and
lock
daa
ja
mov
bound
add
fidivrs
mov
sub
pop
cwtl
out
push
ds
repnz
add
jmp
push
cmp
flds
dec
std
push
pop
in
add
or
jo
lock
les
pop
jl
fadd
mov
jp
dec
xchg
bound
jp
add
testl
imul
sub
cmp
std
xor
dec
outsb
cmp
pop
pop
push
pusha
das
and
adc
pop
adc
out
jmp
pop
xor
pop
cwtl
pop
and
cmp
xor
lods
push
icebp
mov
daa
jg
gs
scas
and
cs
cmp
jae
dec
sub
cmp
and
arpl
daa
jmp
fsubs
jle
xor
ret
incb
push
aam
adc
aas
cli
mov
add
and
adc
cwtl
jecxz
rclb
mov
and
popa
ja
dec
mov
nop
addr16
pop
xor
sarl
pop
ljmp
repnz
popf
int
mov
or
addl
fcoms
testb
enter
lret
lock
subb
scas
pop
fs
cmc
mov
xchg
and
jl
pusha
in
movsb
xchg
loopne
ss
pop
pop
rorl
aas
cmpsw
push
dec
test
mov
inc
push
outsl
dec
and
sbb
or
mov
cmp
loop
iret
jg
mov
xchg
mov
lds
cmpsb
aam
jno
adc
push
orb
mov
cld
movsl
xchg
test
orb
pushf
hlt
lretw
dec
sbb
xor
or
repz
add
rcll
stc
or
pop
add
xor
push
or
fistpll
pushf
out
aam
xchg
xor
push
and
ljmp
cli
inc
cmp
pop
push
sar
inc
cli
or
sub
and
add
mov
cmp
mov
xchg
dec
shl
dec
cld
or
bound
inc
add
xlat
cs
mov
sub
std
mov
mov
call
pushw
push
xlat
scas
rolb
subb
push
sub
and
pop
insb
pop
lds
sub
jp
jp
push
rorl
loopne
mov
add
jno
in
popf
inc
insl
dec
push
pop
add
mov
adc
mov
decb
movzwl
push
push
shlb
push
pop
jnp
sub
adc
imul
mov
cmc
pop
sahf
sbb
ret
add
mov
sub
pop
mov
xor
repnz
mov
scas
jns
jnp
sub
sbb
fmuls
push
inc
lret
xlat
xchg
jo
in
push
cmpb
dec
jl
std
dec
jmp
mov
or
sub
pop
push
add
cmc
dec
sub
shll
jmp
movsb
or
mov
sub
cs
pop
xchg
mov
test
push
sub
push
jo
js
in
shlb
jns
xchg
xor
mov
dec
adc
test
fstps
in
insl
add
cmp
pop
xchg
scas
mov
dec
mov
out
jae
xchg
sub
test
pop
cmc
out
out
daa
push
inc
mov
cli
mov
pusha
push
add
push
jle
in
add
adc
dec
xor
pop
cmp
xchg
adc
xor
mov
mov
mov
sub
lret
popf
mov
ret
mov
rcrl
push
mov
imul
inc
mov
add
movsb
or
into
cmpb
and
pop
mov
pop
mov
cs
lods
push
fsubr
and
das
push
push
in
or
mov
lds
lcall
rclb
mov
and
add
mov
cmp
pop
pop
test
stos
int3
xor
dec
lret
mov
push
ja
sub
push
add
mov
push
out
insl
adc
sub
pop
pop
ffree
cwtl
pop
rcrl
sub
push
addl
xor
jmp
push
aam
push
les
and
gs
stos
ret
lret
test
mov
mov
out
rcrl
fisubl
xchg
mov
xor
out
popa
pop
cmp
fiadds
icebp
adc
dec
xchg
jmp
or
lret
or
and
rcll
jmp
adc
idivb
push
inc
sub
lods
stos
inc
dec
inc
mov
ljmp
pop
fbld
mov
rcll
or
int3
cmc
in
xchg
jge
mov
dec
push
or
xchg
mov
sbb
aaa
mov
mov
cs
pop
lock
mov
fs
inc
or
ljmp
inc
add
xor
and
jnp
push
ret
push
in
cmpsb
xchg
pop
xchg
jne
call
mov
sbb
and
movsb
sahf
ret
call
inc
mov
jl
sbb
jb
sbb
arpl
pop
inc
mov
mov
bound
jmp
les
pop
in
or
sti
cmp
out
lcall
dec
push
lods
mov
sub
mov
pop
mov
or
push
cld
jge
inc
xchg
fldt
ret
mov
and
adc
icebp
mov
jmp
ret
or
adc
xor
jae
jnp
xlat
std
push
shl
cmc
adc
sarb
push
movsb
in
cmp
xor
jmp
ret
fwait
xchg
or
add
xchg
ds
repnz
cmp
mov
dec
jle
loope
rcrl
sbb
dec
mov
inc
push
sub
sub
out
adc
ljmp
or
stos
les
dec
rolb
mov
cmp
or
adc
adc
clc
and
mov
pop
sub
add
or
test
inc
inc
cwtl
movsl
or
dec
aaa
sbb
mov
pop
sub
xchg
js
addl
ret
aaa
enter
loope
cld
push
mov
add
mov
xor
arpl
scas
loop
cmp
push
sbb
jmp
les
lret
enter
push
and
fisttps
xor
mov
fstl
jl
and
and
sbb
pop
adc
idivl
pop
push
cmp
jge
shlb
adc
nop
mov
arpl
xchg
xor
xorl
jmp
adc
movsb
jo
adc
jo
jmp
aam
mov
xchg
inc
sub
sub
push
xchg
inc
jmp
sbb
push
or
ror
sub
fidivrs
fisttpl
jb
test
sbb
pop
and
add
and
jae
sub
popa
scas
xchg
leave
neg
not
push
jecxz
popa
or
push
mov
mov
sub
dec
dec
xor
insb
jl
insl
je
std
mov
pop
icebp
pop
insl
adc
dec
inc
cld
push
adc
add
andl
sarl
and
add
jmp
cwtl
hlt
and
push
pop
pop
dec
jl
add
loope
add
flds
repnz
jb
lret
and
sbbb
jmp
orl
addl
inc
xchg
loop
shr
lret
clc
imul
sub
mov
pop
push
inc
fstpl
addr16
add
rcl
add
dec
sbb
js
push
or
mov
push
or
out
or
mov
popa
sub
inc
stc
push
add
movsb
xchg
dec
and
adc
or
sti
lea
push
inc
push
xchg
add
xor
xor
cltd
xor
add
pop
add
pop
dec
and
push
pop
cmp
mov
pop
cmp
pop
mov
call
fsubrl
dec
push
je
scas
mov
jmp
mov
push
cli
sbb
xor
out
push
mov
scas
idiv
sub
and
mov
jl
movsb
out
rcrb
stc
loope
pop
dec
out
sti
out
push
mov
add
push
add
inc
mov
jne
call
push
std
jmp
test
or
sbb
xchg
aas
mov
push
or
cmp
pushf
pop
and
mov
mov
xchg
movsl
xlat
ljmp
test
pop
and
cli
es
ret
jno
in
aad
jecxz
daa
mov
dec
adc
dec
dec
test
inc
arpl
daa
loopne
es
paddsb
adc
jg
or
dec
sub
cmc
negb
mov
push
and
psubsw
fs
push
notl
cld
outsb
mov
sub
pop
jmp
push
dec
push
xchg
push
out
pop
jmp
fimull
sbb
or
xor
outsb
sub
xor
xchg
sub
jae
testl
nop
add
xchg
fists
sub
mov
dec
adc
add
adc
js
hlt
jae
inc
les
stos
enter
orb
cli
roll
fldl
push
insl
or
add
mov
jbe
push
jecxz
leave
pop
mov
cltd
mov
lds
cld
fisttpll
daa
fcomi
mov
fstl
add
add
inc
push
incl
mov
in
push
pop
mov
lock
out
ret
jmp
out
subb
and
add
mov
das
mov
push
xchg
push
cmp
jbe
in
add
push
push
mov
mov
push
xchg
pop
push
and
inc
xorb
mov
adc
shlb
jmp
inc
loop
cmpsl
iret
sub
mov
cmp
xchg
lods
jo
cmp
fstl
andb
movsb
mov
movsl
push
daa
popf
shlb
out
stos
test
cwtl
ffree
push
pop
push
push
ja
das
rorb
and
daa
shll
sub
pushf
push
pop
pop
bound
push
pop
sbbb
add
mov
jns
fdivrs
fcompl
popa
popa
or
inc
lcall
or
jae
daa
std
xchg
es
mov
mov
sub
jmp
add
xlat
pop
cmovg
test
push
nop
push
jmp
leave
pop
jae
mov
idiv
test
daa
in
xor
bound
xchg
daa
in
lds
stos
add
lret
adc
push
lock
mov
pop
aaa
addb
nop
inc
push
pop
loopne
sub
or
and
ds
push
adc
in
lahf
dec
sub
add
ret
lds
and
adc
test
sbb
mov
sub
movsb
xchg
or
sbb
inc
xor
jmp
test
fldt
mov
imul
xchg
cmpsb
bound
pop
adc
ss
cli
push
divl
adc
into
fstpl
jl
mov
sbb
rorl
mov
and
xchg
push
popa
and
sbb
cmp
jbe
adc
mov
mov
out
pusha
or
add
xor
call
add
aad
mov
xchg
fucom
movsl
ficomps
cwtl
pop
push
jp
or
add
add
push
add
repnz
add
push
push
sbb
clc
fwait
icebp
push
decb
sub
jg
lret
adc
loop
push
in
sbb
lret
add
in
lods
rorl
add
enter
addb
push
adc
sbb
nop
push
mov
sub
and
xchg
lock
cs
or
dec
cmp
cmp
mull
push
dec
lock
popf
fdivrl
shlb
push
movswl
fadds
push
mov
dec
push
mov
popf
inc
dec
xchg
dec
pusha
fildl
pop
pushf
or
mov
sub
dec
add
inc
push
fstpl
inc
and
pop
imull
inc
add
stos
int3
test
lods
inc
in
orb
push
and
imul
pop
adc
push
mov
add
sti
mov
jo
fwait
bound
scas
dec
ss
aad
fstl
jmp
ja
push
test
lcall
loopne
fbstp
ret
out
je
jl
inc
mov
dec
jmp
sti
cli
cs
push
rcrb
outsl
mov
test
inc
popa
add
sub
mov
test
idiv
and
add
cmp
dec
xchg
mov
and
ret
ret
jg
ljmp
add
jmp
xchg
jns
sub
ffree
xor
movsb
mov
es
in
sahf
iret
jns
jp
pop
sub
push
inc
inc
cmp
jp
push
adc
lds
inc
hlt
fidivrl
xlat
push
or
ljmp
jae
into
outsb
dec
incl
xor
sub
sub
add
hlt
push
sub
ret
push
mov
add
dec
xor
pusha
clc
or
xlat
push
mov
jno
sub
jl
push
mov
xor
out
sub
leave
jmp
sbb
pop
in
mov
out
xchg
pop
or
or
icebp
pop
not
movsl
arpl
mov
adc
sbb
sub
or
pop
push
dec
cmpsl
pop
push
insl
push
pop
fisubrs
imul
fadd
sbb
sub
rol
fstpt
add
out
cmpsl
pop
dec
jno
jnp
and
push
add
imul
insl
mov
ljmp
push
xchg
cmp
out
cmpsb
xor
out
ret
imul
movsl
push
repz
sbb
adc
in
dec
fstpl
jno
mov
sub
dec
hlt
pop
sbb
bound
jl
and
xchg
out
mov
loopne
or
mov
and
loope
scas
fs
ret
ret
hlt
pop
lahf
mov
fimull
push
jbe
ljmp
xchg
test
and
sbb
test
mov
xor
mov
aad
pushf
xchg
adc
pop
cmpsl
pop
in
add
jmp
cltd
cmpsb
hlt
and
dec
adcb
xor
jecxz
mov
and
add
sub
jb
and
mul
xchg
xchg
orb
cli
lods
imul
sbb
cmc
insb
push
mov
xchg
jl
sub
and
imul
xor
mov
adc
and
xchg
xlat
xchg
popa
jmp
inc
arpl
pop
push
push
jno
push
imul
mov
lds
push
cwtl
bound
fs
cmp
clc
push
out
in
adc
es
fadd
mov
jg
sahf
or
pop
inc
bnd
push
stos
or
movsl
adc
mov
xchg
pop
xchg
cmp
fsubr
or
sbb
movsb
push
adc
push
outsl
sti
push
or
push
pusha
or
pop
add
outsl
add
sbb
arpl
test
ja
cld
sub
fdivrs
dec
pop
imul
mov
addr16
into
add
mov
dec
sbb
arpl
mov
push
pop
sti
imul
sub
xchg
pusha
cmp
adc
addb
add
insb
xchg
dec
inc
mov
mov
mov
idivb
daa
negl
pop
mov
or
dec
jmp
mov
enter
std
jp
scas
mov
push
jmp
add
je
inc
push
outsb
and
mov
sub
int
pop
fs
pop
in
lods
push
ds
add
push
push
xchg
sbb
lret
add
dec
xor
cmpb
ficomps
xor
sub
imul
insl
xchg
imul
xchg
mov
add
dec
pushf
sbb
push
les
adc
cld
jae
into
xchg
lret
add
xor
dec
mov
clc
add
pop
into
adc
pop
jl
lods
stos
inc
cmc
dec
push
dec
push
pushf
push
or
jmp
xchg
mov
or
and
in
add
int
mov
cmpsl
dec
inc
cld
loop
inc
jae
adcb
cmp
movsl
fstl
pop
push
shl
cmp
xor
adc
roll
and
jmp
xchg
mov
filds
in
push
mov
sub
daa
and
into
ja
sbb
mov
dec
xor
push
or
push
jns
fcoml
inc
and
jne
in
aas
push
mov
sub
rclb
call
lcall
or
xchg
xor
leave
sahf
xchg
faddl
lock
dec
popa
push
add
pop
mov
dec
loop
and
jmp
pop
add
ret
xchg
pop
xor
xorb
push
repz
fimuls
xchg
das
jmp
aaa
stc
dec
push
pop
cmp
mov
lock
adc
or
xchg
dec
sub
stc
mov
lods
push
push
pop
xor
das
rolb
in
cmpsl
nop
xor
fs
outsl
push
stos
push
mov
sarl
fmuls
add
in
pop
cmc
push
scas
xor
pop
and
aaa
es
mov
imul
sub
into
pop
dec
pushf
das
clc
lods
or
add
add
cld
scas
fcomps
enter
and
dec
mov
popa
adc
nop
scas
jnp
xchg
cs
popa
pusha
scas
add
sub
rolb
xchg
mov
fldl
call
call
add
inc
test
pop
incb
cmp
decb
hlt
std
sbb
dec
mov
loope
cmp
repz
mov
and
or
jb
or
sbb
or
outsb
and
and
sbb
mov
enter
jle
xor
xchg
dec
mov
pop
and
testl
lods
xchg
loopne
or
inc
popf
or
push
and
dec
shrl
mov
push
in
mov
adc
jbe
mov
cli
not
cwtl
mov
or
jle
lahf
loop
andb
imul
repz
xchg
rolb
pop
push
add
pop
push
add
jl
mov
add
dec
dec
push
pop
loop
psadbw
jnp
outsl
push
out
pop
ret
or
ljmp
sbb
daa
pop
sbb
pop
inc
cmp
imul
jmp
xchg
push
mov
xchg
cmp
pop
ss
fwait
dec
fmuls
adc
stc
call
dec
mov
xchg
movsb
inc
aam
xchg
icebp
add
jb
inc
pusha
push
ficoml
pushf
pop
sbbb
pop
ret
xchg
jmp
push
push
les
daa
push
gs
jmp
push
or
jmp
movsb
inc
push
pushl
push
cmp
imul
xor
push
int
cmpl
int
xor
mov
sub
mov
jno
out
jo
jnp
mov
outsl
and
push
pop
notl
and
movswl
jge
scas
pushl
add
inc
push
cmp
shl
mov
push
mov
pop
aaa
pusha
in
xor
and
inc
in
cmp
inc
sub
and
sub
hlt
add
push
or
xchg
out
or
fabs
mov
adc
clc
loope
push
push
or
clc
adc
pop
xor
mov
pop
mov
sub
cmp
imul
add
shl
sbb
mov
dec
pop
test
mov
add
pop
inc
ds
or
add
shr
shlb
dec
cli
out
mov
pusha
dec
lock
out
and
add
or
ljmp
daa
pop
add
cld
and
mov
push
test
pop
rclb
cmpsl
incl
cmp
and
aaa
mov
mov
xor
loop
cmc
das
push
lods
repnz
fisubrs
mov
aaa
sti
xor
test
mov
jmp
mov
mov
arpl
sub
add
xor
daa
or
xor
rcrl
push
or
xor
add
xor
pop
adcl
daa
jmp
sbb
movsl
xor
mov
jmp
movzbl
cmc
sbb
xor
clc
psubq
nop
es
add
mov
outsb
popf
jl
pop
shlb
pop
push
mov
dec
mov
adc
rolb
out
leave
icebp
jecxz
repz
cmp
add
sub
outsb
ret
jne
xor
filds
test
sub
test
mov
xchg
je
rcrl
jnp
cmp
call
inc
and
xchg
sub
cs
push
sbb
ja
xor
pop
cmp
dec
sub
int
add
mov
jnp
roll
pop
mov
imul
leave
sub
mov
add
add
pop
insl
xchg
jnp
cmp
movsl
lods
inc
cmp
in
mov
ret
lock
pushf
ret
or
rorb
cli
cmp
mov
nop
sub
call
sahf
lcall
cmp
xor
fdivrs
adc
sub
pusha
lcall
test
add
dec
and
add
in
sbb
inc
xor
push
leave
xor
mov
fbld
or
test
cld
aas
sahf
or
imul
add
pop
xor
inc
sahf
push
mov
nop
xor
scas
nop
mov
faddl
cmp
mov
pusha
adc
scas
mov
jbe
lret
mov
popa
insl
and
mov
mov
sub
or
or
xchg
and
js
lcall
pop
lahf
lds
xchg
popf
add
fsubl
and
in
lock
cmc
cmp
push
nop
dec
push
stos
mov
xlat
mov
out
push
jecxz
mov
and
push
stos
add
in
jo,pn
xor
xchg
out
xchg
jg
dec
mov
sub
cmp
jno
sub
add
bound
sbb
test
mov
mov
jns
mov
sub
nop
add
and
sub
jp
fimull
push
roll
filds
inc
inc
dec
pop
cmp
add
add
sti
dec
in
jmp
xchg
icebp
imulb
test
imul
sub
dec
mov
dec
sti
repnz
push
sub
xorl
aas
adc
cli
cmp
je
call
aaa
shll
or
xchg
sub
xor
xchg
jnp
push
jg
sbb
in
lret
or
loope
das
adc
aad
sbb
leave
dec
sub
add
xor
cli
fcoms
roll
and
jmp
push
or
push
jmp
scas
xchg
movsl
xchg
mov
int3
mov
or
out
jmp
xlat
sub
add
inc
sahf
mov
ja
xchg
lock
xchg
jl
test
jae
das
repnz
inc
adc
sbbb
outsb
js
loop
add
jle
jno
pop
pop
pop
hlt
push
rolb
sub
cs
les
adcb
adc
fwait
cs
ret
fadd
or
sub
jae
jg
lock
movsb
push
rcrb
loop
test
iret
out
cmpsb
sub
call
in
adc
xchg
push
mov
in
insb
pop
pusha
ds
jnp
pop
mov
dec
test
test
mov
add
or
add
addb
out
icebp
bound
loop
jo
aas
mov
xor
addr16
clc
mov
daa
imul
ret
push
into
add
arpl
jmp
mov
jnp
scas
sub
lods
in
mov
xchg
movsl
ja
jno
or
push
mov
sahf
add
add
sub
sbb
movd
iret
mov
dec
and
ret
mov
and
popf
shll
mov
lcall
stc
jns
xchg
iret
mov
push
and
pop
bound
pop
int
icebp
xchg
call
push
push
es
and
xlat
jmp
fiaddl
ret
pop
jg
dec
cmp
add
jne
xor
jge
jo
in
dec
movsl
call
inc
popl
lahf
cwtl
scas
jmp
xchg
dec
sti
aas
and
xor
cmc
pop
das
mov
push
jg
mov
or
aad
fcmovne
out
mov
subl
ret
nop
cmpsb
fcomip
cmpsl
aam
repz
pop
push
push
push
sarb
sbb
pop
ret
ja
xlat
addr16
pop
push
mov
and
sarb
in
sub
jmp
push
outsl
lods
xchg
xchg
inc
dec
or
push
jge
jg
js
jg
or
or
nop
mov
mov
sbb
jl
mov
or
sti
movsl
into
stc
push
mov
xchg
xor
cli
pop
scas
add
sub
gs
rcrl
add
popf
sbb
in
mov
testb
xor
dec
or
mov
lods
push
sbb
pushf
inc
or
jmp
fisubl
dec
push
jne
adc
data16
jp
inc
sub
pop
push
in
dec
lds
scas
out
pop
cmp
mov
adc
sub
mov
xchg
scas
notb
inc
xchg
pop
cmp
add
cmc
out
fidivrl
popf
adc
and
add
and
ja
sbb
jmp
push
mov
mov
push
sbb
daa
xor
adc
xor
mov
pop
xorl
jmp
data16
mov
sarb
jbe
cs
test
jg
addr16
sar
and
add
aam
jmp
test
xchg
add
repnz
mov
pop
push
std
adc
mov
insl
mov
lret
pop
enter
cli
bnd
int3
or
sahf
or
ret
dec
pop
mov
fistps
test
mov
push
add
shll
adc
out
adc
mov
out
and
add
push
or
cmp
xchg
jmp
adc
lret
push
adc
push
jg
and
mov
sbb
xchg
fstl
sbb
sbb
jb
das
fiadds
cli
insb
mov
sub
push
ficoms
pushl
js
cmp
popl
int3
iret
sub
imul
sub
jmp
hlt
mov
lahf
dec
call
jmp
mov
aas
int
sbb
fldcw
out
or
roll
aas
leave
xor
mov
xorb
hlt
inc
xchg
cmp
fcmove
push
out
or
sbb
pop
jmp
cld
push
push
push
in
mov
mov
rcrl
add
shlb
jmp
pop
pop
aas
les
inc
lods
lock
test
or
pop
mov
out
or
jno
inc
test
test
mov
xchg
fdiv
pop
mov
xchg
dec
repz
dec
mov
xchg
push
pop
out
push
add
cli
call
adc
jo
inc
loop
pop
clc
add
mov
adc
jae
inc
imul
or
js
jge
loop
es
jge
add
imul
mov
sub
cmp
sbb
or
add
sti
jmp
scas
pop
cmp
shrb
mov
jge
aaa
test
mov
jle
inc
sbb
jp
pop
add
out
ljmp
push
dec
incl
or
pop
clc
cmc
dec
xchg
in
pop
nop
addb
bound
dec
add
mov
clc
and
pop
clc
jmp
and
mov
outsb
std
daa
fdivs
mov
jg
nop
sub
pushf
imulb
push
push
push
push
ja
arpl
movsl
div
repnz
or
popa
mov
mov
push
push
add
test
jmp
jb
stos
sbb
nop
popf
pop
mov
mov
mov
test
in
mov
mov
adc
pop
or
repnz
add
push
add
mov
testl
mov
mov
addr16
lods
pop
or
cs
mov
jo
jmp
dec
cmc
mov
lahf
fldenv
or
xlat
bound
xor
xchg
sub
sub
inc
dec
mov
sti
loopne
xchg
sbbl
cmc
mull
dec
xchg
push
daa
lret
push
fisubs
sbb
fwait
add
inc
mov
mov
inc
shlb
push
in
lret
addb
shll
rolb
bound
cmp
ja
ror
xor
addb
cmpsb
mov
xor
je
in
repnz
add
ljmp
bound
add
fndisi(8087
leave
sub
or
xchg
inc
jecxz
testb
lock
sbbl
sti
into
rorb
jmp
mov
fldenv
mov
popa
mov
pop
and
in
cmp
int
xchg
mov
lret
add
push
jl
popa
pop
xor
pop
mov
jge
sub
cmp
mov
or
jns
jbe
mov
test
scas
add
jbe
test
lcall
adc
pop
sbbl
test
xchg
hlt
std
call
les
pop
mov
xor
lea
in
jbe
lds
mov
pop
mov
dec
mov
in
pop
lahf
adcb
test
xor
ret
hlt
add
popf
stc
popa
pop
inc
sar
add
sub
and
sub
or
jg
mov
jg
cmp
pop
sub
repz
icebp
xlat
sub
mov
fcoml
or
repnz
test
mov
or
or
jnp
dec
mov
in
xchg
lods
dec
lods
jae
add
in
nop
sub
mov
xlat
lret
pushw
inc
sub
and
shrb
call
cltd
and
dec
cmp
inc
xchg
repz
movsl
add
or
add
add
pop
adc
mov
pusha
mov
push
dec
or
notl
rcrl
dec
and
test
imul
std
and
jae
loopne
rcll
rcrb
fsubs
mov
xchg
das
lcall
icebp
push
cmp
nop
xor
gs
jl
cmp
outsl
sub
es
in
inc
test
addr16
scas
mov
or
cmp
ss
inc
xchg
lcall
pop
dec
call
xlat
cmp
jmp
testb
loop
dec
inc
clc
adc
arpl
push
rol
fnstenv
sub
dec
sub
movsl
or
mov
xor
mov
and
clc
push
xchg
ret
test
cmp
ljmp
adc
jmp
or
sub
fisttps
sarl
mov
iret
cwtl
add
xor
pop
out
movsl
ss
cmpsl
repnz
sahf
fldcw
push
mov
and
je
cmp
dec
xchg
push
add
add
sub
inc
xchg
push
push
scas
pushf
xor
mov
das
and
xlat
daa
test
cli
cld
in
adc
test
xlat
decl
xchg
xor
sub
ljmp
adc
cwtl
cmp
dec
push
out
decb
icebp
cwtl
add
icebp
push
and
fsubrs
jecxz
mov
das
add
cmp
add
pop
cmp
sbb
adc
dec
jae
lcall
test
das
sub
loope
bound
jne
ret
adc
in
data16
sub
xchg
pop
mov
dec
mov
push
fdivrs
jp
mov
lcall
add
mov
das
mov
dec
adc
rcrl
sahf
jle
hlt
cwtl
movsl
bound
pusha
daa
loopne
jge
pop
xor
dec
outsl
les
inc
sub
enter
in
sti
shl
mov
xor
cltd
xchg
jne
je
pop
pop
lret
and
leave
xor
dec
pop
shr
stos
shll
stos
jnp
xor
inc
in
movsb
push
sub
jno
fldt
mov
pusha
mov
psubq
adc
testb
inc
mov
or
loopne
adc
xor
cld
sbb
sub
pop
push
mov
cmp
addb
jmp
arpl
bound
ja
hlt
rcrl
rolb
add
add
fimuls
jmp
dec
mov
jb
xchg
outsb
jl
or
mov
pop
cmp
jmp
pop
pop
mov
aas
and
jae
out
adc
sbb
mov
sub
mov
or
sti
jo
mov
leave
repnz
jl
jle
sbb
cmc
push
or
mov
cmovae
cs
pop
pusha
or
lahf
adc
lahf
dec
lcall
and
adc
pop
add
aam
xchg
xor
pop
lods
mov
cmc
push
pop
push
shl
xchg
mov
les
mov
mov
add
lcall
push
sbb
mov
fs
xor
rolb
lret
jns
daa
iret
pop
shrl
mov
cs
push
js
cli
mov
mov
pop
or
or
adc
les
jo
push
in
pushf
xorb
hlt
adcl
repz
rcrl
push
push
mov
jmp
pop
in
ret
fldenv
jne
push
inc
cli
mov
ret
xchg
and
loopne
je
cmpsl
jl
roll
adc
and
xchg
push
mov
es
dec
dec
negb
jnp
inc
das
fstpl
mov
fnsave
cmp
ja
sub
or
jmp
add
xlat
adc
push
inc
mov
in
pop
pop
mov
sbb
cmc
and
cs
lahf
add
adc
pop
test
push
pop
pop
sub
sbb
popa
js
and
or
divl
sarb
pop
cmc
lods
and
data16
mov
ljmp
lods
rorb
ja
std
pop
pop
int
sti
push
sti
subl
fldl
sbb
mov
or
cld
jae
dec
inc
faddl
int
test
add
dec
mov
in
push
jo
mov
jle
inc
sbb
nop
pusha
pop
mov
mov
sub
sbb
out
or
jle
mov
xor
add
add
jle
sarb
push
mov
fbld
adc
pop
push
adc
xor
call
movsb
dec
cmp
mov
mov
shlb
adc
add
push
push
push
jno
and
dec
mov
lods
ja
or
xchg
and
ret
test
sti
repz
cld
popf
dec
cmpsb
push
mov
out
jmp
jecxz
test
sub
or
jl
xor
jo
jnp
jge
mov
pop
mov
imul
mov
and
mov
test
inc
mov
add
ljmp
jns
fs
clc
pop
sub
lret
cs
mov
orb
cld
aas
mov
loopne
scas
mov
cs
sbb
pop
dec
outsl
shl
das
addb
in
sbb
shl
sti
pop
mov
pop
lcall
pusha
in
je
adc
out
sub
pop
cmp
shrb
xchg
pusha
sub
and
mov
push
adc
mov
jle
xchg
daa
scas
or
popa
mov
xor
addb
xor
and
or
test
sub
jno
ret
push
push
imul
push
xchg
sbb
loopne
pusha
mov
adc
fidivrl
mov
das
mov
aad
aaa
mov
inc
roll
sub
jbe
add
xlat
ret
or
pop
or
jecxz
push
mov
shr
fnsave
and
dec
adc
pop
xor
jnp
gs
and
stos
js
pop
jmp
stos
lret
jmp
add
and
dec
sub
fdivrl
lock
icebp
mov
lret
or
add
xchg
sub
scas
mov
inc
pop
sbb
lock
arpl
add
out
or
jmp
lahf
inc
mov
mov
add
cmc
data16
or
das
jmp
lahf
or
mov
jmp
jbe
pop
dec
sbb
xchg
mov
pop
ja
pop
sub
and
sub
pop
pop
nop
adc
insl
sbb
out
test
xchg
shll
push
cmpsb
imul
inc
sub
lret
fcomps
sub
xchg
inc
adc
dec
inc
or
mov
es
fwait
jmp
xchg
pop
sub
sbb
pop
sbb
or
add
push
cmp
add
ret
sub
pop
mov
ret
cs
sub
sbb
add
mov
xchg
sbb
mov
rcr
add
mov
xor
test
mov
dec
in
adc
push
fldcw
inc
cs
or
or
dec
push
fisttpl
pop
cmc
dec
popa
pop
test
dec
push
cmp
call
inc
jno
dec
jnp
pop
sub
lods
mov
ds
inc
pop
add
jl
xrelease
jg
movl
sub
and
pop
mov
insl
clc
dec
mov
add
push
fadds
mov
fs
call
cld
out
sahf
and
push
lahf
push
mov
mov
test
pop
pop
inc
movsl
or
fcoml
insl
dec
cmpsl
jno
adc
cli
inc
push
push
mov
pop
loope
fldenv
sub
nop
in
cmp
adc
adc
xor
ret
mov
addb
add
sub
shr
xor
dec
shrl
ds
xorl
mov
mov
pop
push
dec
sbb
fiadds
xlat
sbb
adc
pop
repz
stos
jb
sbb
test
dec
inc
inc
adc
mov
jns
pushf
ret
lahf
ret
jg
pop
jecxz
dec
gs
sub
pop
mov
and
add
and
mov
shrl
sar
fdivs
jns
push
pop
and
adc
stos
xor
dec
cmp
test
xor
lret
push
and
xchg
sub
lret
xlat
xchg
adc
std
sub
inc
mov
cli
jmp
mov
jp
add
xor
andb
xor
sub
adc
push
shr
ds
scas
jnp
lods
pop
push
and
loop
sub
add
add
and
xor
push
sub
mov
and
mov
pop
les
and
pop
pop
cmp
jmp
dec
add
xor
fsubs
jmp
mov
daa
loop
sub
and
ljmp
mov
test
xchg
cmc
xchg
hlt
popf
sbbl
sti
add
pop
not
xchg
rolb
xor
test
decb
pusha
mov
adc
roll
ljmp
mov
out
jmp
adc
xchg
in
cs
sbb
sar
sub
ffreep
pop
pop
pop
pop
push
lds
call
mov
xchg
pop
push
xlat
int3
adc
je
inc
shlb
and
fiadds
xchg
inc
sub
push
mov
dec
inc
scas
sub
pusha
ljmp
nop
push
jmp
jne
push
push
or
pop
in
push
sub
gs
push
jmp
pusha
pop
push
scas
pusha
sub
icebp
mov
adc
shrl
stc
out
hlt
in
fsubs
add
sbb
clc
mov
jl
push
out
lea
into
arpl
sbb
ror
push
pop
jge
add
inc
jmp
dec
mov
mov
notb
incb
xchg
xor
jmp
add
inc
in
sub
and
jae
loopne
push
sti
add
mov
in
jns
or
aas
popf
add
mov
bound
mov
fisubs
push
add
inc
mov
mov
inc
xorb
hlt
xor
jl
add
aaa
cmp
subb
and
mov
or
and
jmp
add
call
push
dec
push
push
jge
das
or
repnz
loope
jl
adc
fidivl
add
jmp
xchg
scas
mov
sbb
outsb
mov
int3
jno
xchg
test
push
clc
pop
jl,pn
mov
push
push
je
test
pop
add
xor
jmp
in
imul
or
mov
adc
out
fildl
mov
ja
lock
xchg
dec
jmp
or
cmp
cs
lods
sbb
sub
in
mov
fs
push
and
and
sub
lret
xchg
lods
jb
hlt
pushf
jmp
ljmp
push
in
pop
jo
or
pop
sub
gs
in
cmc
rorb
dec
dec
mov
insb
dec
lcall
fimull
mov
lret
lret
push
or
scas
pop
inc
sahf
ds
movsl
clc
sti
xor
jge
out
movsb
ret
pop
push
inc
hlt
push
jle
pop
add
mov
add
add
ja
inc
pop
mov
adcb
adc
xor
mov
xor
add
adc
cmp
xor
decb
mov
push
jmp
loope
test
jo
lds
iret
icebp
and
sub
imul
jg
and
pushf
jne
shr
sub
fwait
add
push
scas
jo
inc
push
push
roll
or
test
jne
inc
fldcw
pop
test
subb
mov
sub
add
movsb
rcll
xchg
or
pop
mov
push
fnsave
fldt
insl
stos
xor
out
add
xor
out
ret
and
roll
or
int
js
adc
fwait
ret
push
inc
test
dec
cs
shr
pop
mov
and
inc
xchg
adc
and
shll
repnz
add
dec
mov
popf
xor
push
fdivs
aad
mov
jle
imul
test
pop
or
shll
push
mov
cli
loop
sbb
js
dec
or
mov
xlat
xchg
and
add
fs
mov
js
xchg
mov
sub
outsb
out
jne
mov
inc
pop
orb
xchg
or
adcb
or
sbb
sub
xor
jno
in
arpl
pop
or
pop
jae
sub
int
dec
xchg
add
loop
xlat
sti
xchg
ljmp
push
nop
dec
sbb
adc
mov
stc
cltd
sub
push
mov
add
xchg
jp
das
mov
jbe
imul
pop
jo
ja
subb
pop
icebp
cmpb
pop
shl
dec
mov
jecxz
mov
or
mov
les
in
pop
rclb
jmp
cmpsb
add
mov
push
ja
sbb
push
lcall
adc
or
cld
cmpsb
push
xchg
nop
push
into
fimull
xlat
push
shl
fiaddl
sbb
sub
ficoms
push
sub
jg
loopne
in
dec
test
mov
out
cmc
add
mov
lods
adc
xor
decb
bound
ss
or
jb
jle
and
jp
or
je
js
js
xchg
ret
inc
mov
fmull
cmp
fimuls
cmp
mov
mov
jge
jno
inc
mov
push
cltd
out
jb
outsb
shr
push
jmp
sub
jbe
inc
or
sub
jae
cmpb
xchg
dec
or
push
js
mov
pop
cmp
and
flds
add
xchg
jp
jg
outsb
fildll
lcall
pop
and
push
push
sub
std
xor
scas
pop
add
pop
cli
aaa
inc
or
jge
and
mov
mov
and
push
mov
nop
and
push
lcall
inc
cmp
dec
daa
inc
or
dec
dec
xlat
jb
xchg
cli
cmp
sbb
add
mov
push
add
sti
pop
icebp
shl
repz
mov
repnz
dec
push
mov
in
leave
mov
adc
or
clc
shl
push
pop
imul
ja
dec
xor
mov
dec
decb
cmp
push
pop
shlb
and
cmpsb
jge
mov
orb
mov
add
fistpll
adc
mov
jo
add
hlt
repz
push
pop
sub
mov
xchg
dec
dec
and
xchg
xor
movl
lea
jg
push
push
xor
pop
cmp
repz
scas
popa
je
je
lods
cmovnp
push
in
pop
cld
push
in
jg
imul
shlb
dec
pop
pop
sub
and
cmp
mov
jb
adcb
daa
push
mov
adcb
adc
add
lock
cwtl
lahf
and
sbb
shrl
cmp
pop
sti
jne
out
enter
dec
jp
in
jnp
sub
cs
clc
loop
pop
pop
inc
loop
test
pop
fimuls
test
mov
xchg
pop
push
cld
popf
call
ja
jl
xlat
mov
jmp
gs
pop
sub
inc
sub
imul
xchg
and
jg
cmpsl
mov
cmc
loope
push
cli
adc
test
je
fwait
add
neg
test
pop
mov
pop
es
out
and
lret
sub
loop
dec
push
xor
mov
daa
push
mov
pusha
aam
xchg
sub
scas
adc
ss
arpl
fisttpll
in
outsl
les
xchg
sub
sbb
push
mov
je
sub
push
mov
inc
xchg
xorb
inc
mov
jl
insl
insb
sbb
call
in
aad
mov
or
test
sub
cmpsb
and
mov
out
arpl
popa
cmp
dec
inc
fidivrs
add
inc
xchg
ss
nop
and
push
pushf
sahf
call
les
loope
sbb
addb
xor
movsb
das
js
pop
push
jns
cmp
xchg
inc
cmpsb
pop
fidivs
or
lea
push
mov
pop
das
pop
and
rcr
std
stos
neg
and
adc
pop
adc
cmp
xor
and
dec
cmp
jo
xor
mov
enter
xlat
ja
inc
divb
imul
push
dec
xchg
push
ret
outsb
repz
mov
negl
push
add
jecxz
ret
shlb
dec
or
mov
inc
mov
jmp
jae
arpl
stos
cmp
sbb
mov
pop
mov
cmpsb
imul
paddb
lods
push
xlat
or
mov
xor
fidivrs
sub
mov
pop
je
xor
mov
cmc
enter
out
inc
jnp
add
test
aad
hlt
dec
push
js
inc
ret
sub
loope
fidivrs
cmp
pop
popf
adc
insl
mov
push
leave
inc
xchg
movsl
rcl
and
sub
aam
fdivrl
gs
inc
cs
ret
out
sub
add
icebp
bnd
push
sub
mov
loop
jl
cmp
cmp
into
pop
stos
and
or
push
sbb
les
enter
test
insb
and
add
or
sti
dec
rclb
outsl
pop
gs
sbb
fwait
push
aad
jl
rcll
shll
sbb
cmp
mov
fisttps
push
jo
fsubp
push
and
das
cmp
pop
popa
mov
dec
cld
inc
sbb
sub
jl
sbb
iret
repnz
add
push
mov
shl
stc
icebp
sub
pop
cmp
scas
mov
mov
dec
out
adc
mov
sub
int
lret
pop
adc
movsl
add
push
stos
and
mov
pop
xchg
in
addr16
pop
jecxz
jl
xchg
pop
inc
mov
shr
add
cmp
push
sub
mov
lret
mov
jmp
leave
dec
lret
xchg
mov
sahf
or
adcl
or
mov
cmc
jb
mov
fwait
jae
popa
gs
cmp
ljmp
lods
adc
xor
fildl
sub
jmp
dec
push
sub
sub
jbe
and
das
rorl
mov
loopne
lods
inc
inc
lahf
cltd
add
cmp
dec
push
mov
add
sub
dec
aad
push
push
mov
adc
and
ljmp
ret
inc
jno
add
cmc
imul
or
cs
jno
cmp
fdivs
movsb
stos
popa
inc
push
and
and
cs
stos
add
mov
in
stos
adc
jle
fiadds
inc
or
aaa
pop
xor
scas
dec
fwait
mov
pop
push
enter
fcmovne
movsl
sub
and
dec
std
icebp
add
mov
lods
mov
mov
addr16
dec
mulb
dec
jno
cmp
sub
icebp
and
stc
pop
and
lock
popa
int
mov
enter
sub
jae
adc
nop
scas
jnp
mov
push
addr16
and
imul
cmp
in
push
pop
jns
pop
addl
and
pop
lahf
inc
push
ja
sub
jmp
lret
mov
shl
jns
cwtl
test
int3
jmp
movsb
xor
mov
std
push
xor
fwait
aas
inc
adc
outsb
stos
adc
flds
mov
and
mov
or
jnp
sub
iret
out
gs
jl
sbb
orb
mov
fists
add
jmp
xchg
xchg
jle
stc
ss
popf
aam
or
mov
inc
pop
xor
lods
pop
je
push
mov
lahf
testl
push
jo
add
sub
pop
iret
lods
mov
xchg
fsts
jmp
rcll
dec
mov
adc
test
outsb
fimuls
dec
push
xor
clc
lret
cmp
add
in
sub
push
push
xchg
jo
pop
ja
add
pop
mov
pop
neg
add
loope
and
xchg
mov
mov
test
rclb
stc
sahf
movsb
inc
mov
pop
cmp
lods
inc
mov
pop
lcall
add
adc
or
dec
cli
add
push
shlb
out
lock
je
mov
aad
pop
jmp
dec
xor
dec
adc
mov
inc
pop
jmp
or
jp
push
movsb
cmc
jb
rcll
popl
pusha
jnp
xchg
idivb
cltd
push
icebp
ljmp
mov
pop
test
xchg
adcb
jg
or
lock
push
and
sarb
daa
sub
or
std
and
addr16
test
add
sub
sbb
imul
pushf
mov
push
push
add
mov
xor
dec
int
cmp
clc
push
rcrl
data16
jl
add
lods
xor
stos
dec
mov
cli
add
iret
xchg
xchg
arpl
sub
push
xor
add
lds
dec
adc
mov
daa
push
es
push
jmp
ja
stos
sahf
jb
repnz
scas
nop
aam
ja
and
pop
std
sub
push
adc
call
cmp
aaa
sub
xchg
mov
or
and
mov
push
add
and
or
gs
test
idivb
clc
pop
les
rcr
lret
data16
pop
sub
icebp
test
fxtract
mov
mov
mov
addl
mov
add
inc
into
call
icebp
add
dec
and
xor
mov
xchg
xchg
hlt
mov
and
es
add
arpl
cmp
mov
mov
add
daa
xchg
test
mov
cmp
pop
nop
xor
sbb
xchg
push
enter
mov
mov
ja
stc
push
inc
decb
fstpl
mov
std
rorl
push
mov
repz
cmpsb
fisubrl
mov
xchg
xlat
sbb
jmp
mov
nop
add
or
jmp
cli
divb
mov
sub
mov
pushf
shl
jnp
or
inc
push
fsubs
nop
mov
jb
icebp
clc
dec
in
jnp
mov
add
sbb
das
cmpsb
test
shr
test
jno
ret
jle
add
sub
or
out
dec
mov
push
lret
cwtl
jb
adc
xchg
leave
add
mov
jl
bound
aam
ret
jo
jbe
and
aas
push
das
push
push
sbbb
shr
not
cli
add
insb
cmpsb
pop
and
jmp
scas
pop
jl
jnp
or
push
dec
stos
pushf
dec
imulb
inc
pop
stos
mov
test
or
dec
push
out
outsl
cmpl
xchg
pop
add
lret
imul
xchg
push
iret
out
pop
jp
imul
aad
add
adc
jne
pushf
add
or
and
add
rcr
adc
aam
cld
dec
testw
cmp
cmpl
or
daa
cmp
sub
loop
or
mov
movd
jl
jmp
out
jl
ja
jmp
loope
pop
divl
adc
jnp
int
sar
and
mov
push
imul
mov
pop
jmp
orb
mov
in
clc
pop
add
dec
repnz
test
jmp
mov
lcall
movsb
xchg
push
sub
xchg
icebp
or
pop
inc
sub
xor
pusha
jne
bound
push
pop
dec
mov
dec
mov
sub
jecxz
jmp
push
add
adc
hlt
insb
jp
andb
mov
and
cli
aaa
and
push
jmp
div
pop
push
test
les
mov
hlt
sahf
mov
pop
ret
mov
mov
shl
jmp
jmp
or
push
sub
decb
mov
push
repnz
pop
insb
jecxz
rorl
outsb
xorl
inc
mov
mov
sarb
xchg
cmp
pop
cmp
inc
das
call
xlat
jb
mov
push
sbb
jp
xchg
and
shlb
cmp
mov
lea
pop
movsbl
lods
fwait
jmp
dec
leave
dec
and
mov
int3
adc
jmp
aas
and
and
jle
cmp
fs
nop
jo
repnz
ss
andl
mov
lahf
or
push
mov
ljmp
ret
lock
pop
arpl
mov
je
and
sub
mov
add
or
data16
sbb
aaa
rcrb
pop
fisttpl
sbb
outsb
and
fstl
cmp
ret
jg
push
sub
xchg
enter
pop
push
lods
push
int3
leave
mov
sub
shl
out
jecxz
pop
loopne
out
and
cli
sbb
stc
jmp
push
std
sub
je
ret
out
lock
sbb
rolb
mov
sbb
popf
sbbl
cmp
mov
cwtl
mov
dec
add
xor
es
movb
out
dec
sub
jmp
inc
enter
push
push
mov
sub
xchg
push
repnz
dec
xor
dec
stos
ret
add
cli
jae
in
imull
dec
jle
repnz
mov
xor
data16
pop
shlb
fstl
mov
aad
testl
sub
jb
pop
cs
loope
sub
xchg
rolb
pop
or
fldt
sbbb
mov
pop
sub
jmp
cmc
xor
call
cli
dec
ja
jno
cmpsl
ljmp
scas
xchg
fldcw
mov
popa
outsl
and
mov
mov
and
in
aaa
sbb
add
dec
pop
mov
aas
out
xchg
pop
notl
pop
fcmovbe
fcomps
add
sbb
cmp
testl
scas
fcomp
and
imul
in
sub
jmp
pop
push
pop
cld
add
dec
roll
cmc
lock
jmp
pop
mov
incl
jb
jne
cmpsl
aaa
mov
dec
push
sarl
scas
in
sub
aas
cmc
sarb
push
mul
jmp
sub
les
cmpb
lods
xchg
and
pop
out
inc
outsl
sbb
inc
addr16
dec
mov
js
xor
sbb
or
sub
mov
mov
lahf
add
add
or
xchg
or
fsubr
dec
cs
stc
aas
insb
call
pop
and
loopne
clc
mov
lret
and
or
fcomps
and
and
jae
repz
jmp
stc
pop
push
daa
ret
push
jge
stc
out
cli
pop
bound
dec
shr
aam
lea
inc
sbb
pop
dec
mov
sub
jno
imul
pop
inc
aad
push
xchg
dec
cmp
push
mov
push
mov
or
push
dec
scas
mov
or
lret
int3
cld
mulb
push
vmread
jecxz
stos
loopne,pt
inc
in
or
loope
flds
hlt
ror
pop
add
dec
mov
ror
pushf
pop
cmp
lret
push
mov
mov
nop
cmpsb
pop
insl
jmp
push
icebp
sub
lcall
call
lods
dec
ljmp
insl
icebp
bound
fnstenv
notb
loope
mov
popa
lds
pop
inc
idivb
cmp
sti
bound
add
dec
mov
xor
ja
mov
add
lock
outsl
inc
sbb
add
andl
pop
xor
pop
sub
pop
incb
mov
lahf
sbb
dec
sti
add
in
mov
or
mov
sbb
sbb
inc
or
dec
lods
lods
leave
ret
jo
sub
ret
dec
push
iret
popa
sbb
pop
mov
and
xchg
xchg
cmp
sub
mov
icebp
in
cmpb
mov
pop
repnz
adc
add
mov
mov
push
adcb
stos
sub
pop
mov
ss
ljmp
cltd
hlt
pop
push
mov
mov
adcb
roll
ds
cmp
outsb
stc
cmpsl
idivl
xchg
pusha
dec
pushf
fildl
int
xchg
lcall
add
mov
lock
sub
xchg
cmc
adc
repz
lods
jge
xchg
fisttps
cli
gs
dec
push
mov
subb
movsb
pop
inc
lods
out
or
lods
cmpsl
adc
in
cmp
std
cmpsl
or
ljmp
and
or
push
std
addr16
loope
loopne
fmul
jecxz
icebp
idivl
dec
dec
adc
mov
mov
xor
jb
dec
sahf
dec
inc
pop
cmc
test
or
sbb
mov
jp
pop
jbe
cmp
shl
or
lcall
mov
movsl
mov
adc
js
sub
pop
sti
jge
sub
test
out
lock
xchg
sub
sub
scas
cmp
mov
lcall
icebp
clc
ja
xchg
xchg
pop
test
scas
popf
sub
repnz
xor
push
aam
lods
mov
mov
push
xchg
daa
push
jo
mov
stc
int3
adc
pop
pusha
shr
cmpsl
fdiv
dec
mov
ds
bound
enter
pop
and
lock
sbb
cmp
jb
push
notl
or
add
mov
add
clc
jmp
cmp
pop
cld
int3
sti
push
add
jno
xchg
or
adc
call
loop
sar
pop
imul
jp
cld
pop
cmp
push
jmp
roll
dec
lods
pop
movsb
in
inc
lods
sub
xchg
ret
jge,pt
mov
and
test
jbe
lret
rcr
dec
pop
sti
pop
push
lret
or
dec
popf
xchg
loope
jmp
pop
pop
negl
cwtl
jo
inc
movsl
push
pop
sub
pop
cmp
shr
outsl
in
xchg
loop
pop
in
bound
pop
push
push
int
sub
and
test
popf
adc
sub
inc
cmp
mov
ja
add
pop
or
scas
adc
cmp
push
iret
push
push
movsb
aas
jb
in
les
add
sbb
and
in
mov
mull
test
push
es
xor
add
jle
jbe
add
test
adc
incl
add
push
maskmovq
testl
inc
and
dec
out
cmp
pusha
int3
jb
orl
jecxz
es
cmp
pop
out
and
or
pop
pop
andb
mov
xor
xor
xor
into
roll
jmp
mov
mov
push
and
dec
push
sbb
adc
xchg
pop
add
mov
jo
jmp
lods
inc
imul
lds
rolb
and
or
xchg
scas
call
and
popf
mov
sahf
arpl
test
pop
pop
pop
mov
pop
push
jo
jae
mov
sbb
shrl
mov
adc
orb
dec
and
ficompl
add
lds
pop
adc
cwtl
aam
pop
sbb
push
imul
lret
or
push
add
push
add
scas
inc
nop
cld
arpl
or
jo
add
push
xchg
mov
jge
adc
out
xor
xor
push
and
es
jmp
push
mov
adc
add
fadds
mov
sub
fadds
push
mov
lahf
push
movsb
cmp
pusha
push
jo
pop
pop
popf
cltd
pop
cmp
inc
jmp
test
iret
mov
mov
xchg
mov
push
mov
cs
stos
sub
mov
or
pusha
cmp
mov
pop
and
stc
jno
sub
pop
lahf
inc
push
push
cs
incb
shrb
call
add
out
or
jmp
out
loop
in
test
shrb
xchg
inc
add
std
adc
adc
sub
add
jne
mov
xor
dec
fcoms
icebp
adc
mov
lret
addl
mov
sbb
mov
mov
sub
fdivl
inc
lret
call
push
add
cmp
pop
sub
sbb
pop
pusha
push
es
pop
mov
add
pop
or
add
test
dec
movsl
xor
pusha
xchg
shll
aas
cmc
jno
repnz
je
sub
adc
mov
fwait
lcall
lret
mov
push
push
pop
cltd
mov
aas
js
dec
xchg
adc
mov
gs
xor
wrmsr
xchg
imul
adc
add
call
mov
jnp
mov
call
pop
into
gs
cmpsb
pop
daa
xor
pop
das
cmp
jmp
mov
hlt
push
sub
inc
xchg
sub
fstps
rorb
xchg
lock
out
js
add
shufps
sbb
call
mov
enter
mov
adc
or
mov
xor
test
cltd
adc
xor
lock
push
pop
arpl
mov
es
pop
out
jo
or
cwtl
out
mov
cmp
cmp
popf
mov
mov
shll
sbb
bnd
cmp
out
cmpl
repnz
pushf
jnp
or
adc
jp
add
xchg
pusha
or
pop
ss
xchg
inc
insb
sub
jae
and
and
js
sub
adc
jo
xor
mov
add
adcl
adc
mov
or
sub
push
ret
mov
pop
sub
aaa
cmc
inc
das
lea
sub
jmp
aaa
inc
xchg
xor
pop
mov
or
sbb
dec
jge
pop
jg
dec
xchg
sub
add
dec
test
rcl
jmp
insl
into
jno
lea
popa
xchg
pop
shrl
lret
mov
mov
or
xor
add
cmp
stos
adc
call
adc
js
jp
mov
int
outsb
lret
popf
xor
out
aaa
je
add
shlb
pop
push
daa
dec
pop
and
add
arpl
jmp
ljmp
xorb
jge
xorl
jp
iret
je
xlat
pop
mov
into
pop
pusha
fldl2t
pop
stos
sub
jecxz
subb
pop
int3
or
push
sbb
xlat
pop
test
sbb
cmp
mov
jbe
loop
mov
inc
int
xchg
les
mov
loope
rcrl
icebp
push
push
cwtl
xchg
hlt
pop
push
xchg
push
push
and
arpl
in
pop
xchg
out
mov
sub
sarl
cmc
fsubs
mov
lar
dec
dec
xor
adc
stos
shlb
push
adc
push
dec
jmp
scas
xchg
mov
inc
test
dec
cmp
and
test
pop
out
cld
sub
push
jmp
incb
push
dec
shrb
push
sti
push
jmp
es
jg
xchg
icebp
mov
lret
mov
repz
cmp
cmp
mov
adc
add
mov
call
das
fisubl
das
xlat
sbb
out
test
push
xchg
sbb
adc
mov
xchg
inc
cmp
inc
cmc
and
mov
cs
push
int
pop
sub
popf
gs
jns
inc
addb
int
mov
dec
cwtl
adc
adc
pop
add
loop
adc
jmp
ret
in
cmc
pop
loope
or
iret
test
dec
xchg
cmp
test
dec
jmp
aam
adc
sbb
mov
or
aaa
add
fwait
divl
add
inc
and
fdiv
push
lods
cltd
mov
inc
pop
cmpsb
aas
mov
ret
or
scas
sub
sub
pop
test
scas
mov
xor
loop
out
push
cmp
or
int
jbe
cmp
in
push
pop
out
outsb
inc
ret
or
iret
add
sub
sub
fcmovnbe
xchg
fldl
mov
cli
adcl
add
xor
add
lret
movsl
lods
frstor
dec
xor
jmp
hlt
adc
xchg
add
pop
push
jno
add
stos
dec
add
test
mov
dec
inc
or
sbbb
add
loope
in
sbb
filds
mov
shlb
scas
push
mov
jp
lret
add
ds
xchg
loop
sahf
repnz
and
ficompl
sarb
aam
dec
push
ljmp
les
mov
pop
push
mov
out
mov
or
sub
mov
insb
ljmp
or
or
test
sub
mov
push
push
xor
mov
mov
iret
add
pop
ljmp
fidivs
add
in
adc
push
add
lock
mov
dec
sti
pop
adc
sarl
xor
cmp
testb
fwait
ret
lahf
pop
inc
daa
ja
stos
mov
or
mov
sub
stos
inc
cld
jecxz
inc
pop
dec
push
inc
rcr
cmp
xor
rorb
push
pop
push
push
or
insb
imul
aad
in
in
push
aas
jb
xor
push
sub
pop
push
inc
mov
jl
pop
and
push
sub
rclb
andl
push
pop
jns
dec
cmp
cs
sbb
testl
jae
das
push
adc
stos
fisttpl
jmp
cmp
cmpsb
fnstsw
aam
flds
pop
sub
call
fwait
cltd
aam
mov
or
jno
sbb
stos
add
lods
mov
push
pop
pop
int3
scas
mov
sub
and
cli
push
loopne
jmp
rol
add
cmp
sbb
jne
xor
cwtl
bound
into
shrb
pop
push
dec
shrb
lahf
icebp
mov
push
sbb
jo
or
adcb
inc
or
sub
xlat
inc
or
imul
cmc
sbb
fnstsw
dec
sub
mov
push
and
roll
mov
xorb
sub
insb
outsl
xchg
repz
lock
inc
jle
xor
sub
mov
scas
or
shl
sub
mov
mov
mov
jl
popf
mov
das
mov
xor
add
idivl
insb
cmp
and
or
xchg
push
mov
cld
push
aad
jno
adc
jae
popa
mov
lret
mov
jnp
call
sub
xorb
cld
dec
mov
sub
xor
jo
das
add
fsubs
add
movsl
scas
adc
sti
push
mov
or
testl
popf
notl
scas
jle
or
cmpsb
xlat
xor
mov
dec
and
or
jns
subb
outsl
cld
sbb
enter
aad
mov
imul
aad
sub
push
enter
jne
loopne
imulb
pop
push
scas
and
adc
arpl
pop
das
adc
or
dec
fidivrs
mov
mov
dec
hlt
xchg
imul
fs
jae
jle
push
fcoms
je
sbb
pusha
pop
add
pop
xchg
jno
xchg
bound
jb
in
scas
arpl
xchg
sub
ds
sub
dec
lods
aaa
dec
mov
push
adc
mov
cltd
cltd
lahf
push
insl
push
xchg
iret
icebp
sbb
jmp
das
inc
subl
fsubr
jg
dec
mov
dec
mov
or
mov
test
pushf
push
add
fiaddl
lods
pop
adc
mov
data16
ja
pushf
cmp
jg
pop
mov
pop
add
jp
lea
aas
mov
or
sahf
notl
cltd
cmp
pop
add
jl
les
pop
jmp
mov
orl
xlat
jmp
mov
pop
dec
icebp
call
push
adc
push
jmp
dec
cmc
mov
adc
popf
jp
adc
dec
mov
rorb
inc
sbb
inc
jne
mov
xor
loope
mov
stos
movsb
clc
push
cmp
adc
ljmp
ljmp
inc
sbb
enter
mov
orb
fdivrp
ret
mov
push
add
shr
neg
push
incl
mov
jle
pop
inc
sti
loope
xor
into
pusha
sub
daa
scas
mov
cs
xchg
outsb
mov
jae
movd
pop
mov
repnz
xchg
out
add
or
add
pop
mov
xchg
out
adc
loop
icebp
jo
rol
outsb
movsb
push
sub
add
int3
push
push
sti
addb
sub
mov
push
sbb
stos
mov
sbbb
jnp
mov
xlat
push
pop
add
add
pop
jbe
and
dec
pop
sarb
adc
ljmp
xor
xor
xor
inc
test
jnp
or
movb
rorl
das
cli
sub
testl
jge
pusha
add
cmp
pop
mov
and
xchg
out
xor
jge
daa
fs
jo
xchg
js
push
mov
addr16
mov
add
jl
enter
xor
add
test
jno
jmp
in
adc
insl
pop
push
aam
fdivl
pop
leave
jg
call
cs
push
xor
adc
sahf
shl
loope
test
sub
rcll
jo
cmp
push
sbb
pusha
aad
adc
or
push
xchg
add
adc
inc
shl
add
and
loope
mov
sub
vgf2p8mulb
push
and
scas
push
mov
mov
pop
pushf
jle
idivl
push
lds
cmpsl
and
or
mov
pop
pusha
sbb
das
lahf
mov
dec
pop
xor
pop
or
sub
mov
jmp
popf
push
inc
out
push
xchg
adc
es
loop
xchg
add
divl
adc
jmp
mov
jb
pop
mov
lock
pop
xorb
jmp
rolb
insb
sbb
sub
and
mov
push
inc
jno
xor
adc
leave
sub
movsb
iret
in
push
mov
pop
stos
lret
pop
xchg
jo
push
sub
add
cld
rclb
push
pop
dec
outsl
test
je
cmp
add
push
js
gs
xor
scas
and
or
xchg
lods
popf
jge
xchg
fnstenv
cmpsl
inc
push
shl
jmp
dec
xor
sbb
or
xchg
add
insl
sbb
sub
div
inc
push
pop
jns
fsubr
test
out
sub
shlb
jl
or
or
sarl
insl
fsubr
les
mov
adc
jecxz
or
jmp
mov
neg
adc
lret
pop
std
movsb
mov
in
xchg
add
adc
dec
shl
pop
xchg
cltd
cmpb
sub
lds
ficoml
push
cmpsb
adc
rclb
shl
es
mov
bound
pop
fs
ret
aam
mov
addl
mov
int
dec
lods
cmp
fstpl
mov
xlat
jb
sbb
xor
dec
pop
nop
mov
addb
add
push
rolb
mov
aas
mov
jmp
imul
pushf
lods
add
add
jg
jns
jmp
les
jge
or
addl
ds
sub
cmp
imul
add
adc
push
jmp
xor
push
xor
sub
xchg
inc
out
sbb
jmp
add
xor
incb
mov
add
pop
mov
jl
subb
adc
adc
xor
sub
mov
ljmp
fcompl
out
fprem1
and
fsubr
xor
dec
jbe
add
jae
pop
repz
mov
cmp
xor
out
dec
mov
lods
mov
shlb
mov
mov
jge
fstl
and
xchg
xlat
xchg
incb
ja
mov
int3
enter
subl
push
mov
out
adc
push
mov
xor
popa
sbb
imul
out
and
xor
xor
adc
jae
std
add
mov
jg
pop
lcall
mov
or
push
punpckhwd
rorl
lahf
adc
loopne
lods
stos
addb
jmp
les
ja
mov
sub
call
ficoml
fstl
adc
xor
adc
or
add
jne
xchg
subb
int3
adcb
mov
adc
pop
sub
rcr
push
xchg
je
xor
sub
pop
mov
mov
lods
xchg
mov
and
sub
mov
in
fs
popf
xchg
sub
insl
push
iret
out
sarb
loope,pt
roll
lret
pop
popf
stc
xlat
or
ret
sub
daa
not
pop
xchg
or
adc
mov
push
aad
cwtl
xchg
cmp
xchg
jne
add
cwtl
add
jb
mov
outsl
enter
pop
pop
pop
pop
sub
push
cmp
out
les
adc
sbb
les
lcall
fiadds
sbb
arpl
enter
leave
stos
mov
enter
add
cmp
rcrl
scas
push
sbb
mov
and
scas
notb
pop
movsb
out
inc
shll
cmc
ret
push
ljmp
fadds
cli
xchg
adc
pop
mov
cmp
and
shlb
jns
not
mov
ret
adc
push
pusha
adc
pop
xor
mov
pop
sub
sar
js
dec
dec
mov
cmp
mov
pusha
push
orb
or
pop
fisubrl
outsb
add
push
pop
xor
addb
addb
test
sub
popa
ds
or
or
xor
mov
mov
jns
inc
fs
adc
cmpsb
push
inc
mov
cs
push
cmc
or
pop
jmp
add
negb
or
mov
sbb
mov
push
xorb
add
pop
pusha
jns
lret
cmp
dec
xchg
rcr
add
es
sub
add
jge
pop
and
push
cmpsl
decl
xor
jb
jge
mov
and
rorl
jle
mov
mov
cmc
pop
pop
push
pop
mov
fsubrl
mov
call
push
incb
lahf
xchg
adc
pop
lods
xor
fidivrl
je
loopne
add
xchg
inc
xor
mov
and
sub
and
nop
pushl
pop
popa
dec
inc
inc
add
and
into
insb
pop
add
add
or
push
shlb
and
jo
jbe
mov
xchg
pop
adc
xchg
adc
rcrb
or
in
enter
test
or
jmp
mov
fisttpl
jg
xchg
inc
pop
jae
jmp
xchg
or
loop
jl
je
addb
mov
icebp
cmp
outsl
xchg
repnz
std
inc
xor
out
or
add
and
push
jmp
sarb
and
mov
sbb
push
mov
add
jnp
pop
dec
xchg
pop
jbe
sahf
inc
das
and
sub
sbbb
or
mov
add
jmp
ret
pop
mov
test
jmp
or
popa
rcrb
cli
mov
dec
lahf
outsb
into
aas
ja
and
roll
cmp
test
dec
or
and
xchg
lahf
shlb
jl
pop
or
add
hlt
mov
dec
pop
fsubs
mov
sub
jmp
filds
lock
in
inc
xchg
aam
aas
xchg
stos
inc
pop
push
inc
iret
add
xlat
cwtl
subl
sub
or
fistps
notl
pop
add
and
fiaddl
aad
idivb
push
ret
mov
add
addl
lea
cmp
mov
maxps
sub
or
sbb
in
pop
sbb
pop
sub
stos
icebp
push
push
sub
inc
mov
pop
lahf
sub
lock
pop
mov
xchg
in
jp
add
enter
fs
cmp
das
icebp
cmpsl
mov
stc
ds
mov
lods
out
push
das
mov
iret
jo
push
cld
push
push
sub
push
cs
pop
jne
int
pop
pop
add
push
das
pop
std
cwtl
mov
pop
fmull
or
inc
xchg
add
loope
xor
xor
test
adc
xlat
and
addl
inc
sarl
ljmp
jmp
sbb
scas
jae
or
cmpsl
jb
mov
in
mov
fbld
sub
jmp
cmpsb
push
in
pop
ret
xor
push
push
popf
sbb
add
push
inc
sbb
sub
and
jle
test
int
sub
enter
dec
mov
or
dec
in
add
sub
leave
lahf
cwtl
xchg
sbb
in
ror
cmp
adcl
add
insb
cwtl
add
std
loopne
cmc
mull
enter
sub
pop
xorb
test
orb
lods
les
test
inc
movsl
mov
push
int3
mov
jns
cli
mov
dec
push
xor
lods
pop
pop
stc
int3
or
sub
add
nop
out
mov
popf
push
lcall
sub
sub
testb
mov
aas
je
push
sub
or
enter
jg
gs
push
insb
ja
add
arpl
popf
push
or
mov
and
pop
jl
mov
shr
adc
lea
out
lds
push
push
add
xor
cs
movl
pop
dec
push
pushf
dec
push
test
loop
stos
jle
add
fyl2xp1
loopne
inc
test
cld
call
cmp
test
in
fiadds
adc
test
nop
adc
negl
add
jp
mov
loope
clc
and
cmpsb
and
testl
add
divl
add
icebp
cwtl
add
jo
adc
pop
and
mov
dec
lock
mov
sti
inc
adc
fmul
inc
add
mov
cmp
std
push
mov
fiadds
add
and
enter
sbb
cmp
lods
push
adc
ja
mov
jae
rolb
popf
cli
lock
adc
rcll
clc
add
jne
xchg
mov
insl
in
mov
and
or
sub
inc
movsl
xchg
xchg
adc
mov
jge
adcb
jg
mov
dec
les
mov
jp
push
ret
cmp
jb
mov
aaa
add
jnp
nop
fdivrs
ret
push
add
cmpsb
roll
mov
orb
xchg
cmovo
mov
sbb
add
add
outsb
push
test
stos
inc
add
inc
in
test
addb
out
xchg
sbb
icebp
jo
xchg
clc
scas
push
flds
jno
add
mov
add
out
xchg
je
sahf
loop
add
mov
ror
test
cmp
outsl
xchg
xlat
xor
push
pop
rcrb
xchg
popf
int3
xchg
mov
sbb
adc
dec
nop
push
add
out
cmp
mov
imul
enter
stos
add
test
mov
add
roll
add
sub
idivb
cmp
data16
sbbl
fbstp
fstpt
sbb
lods
mov
add
in
xor
jle
mov
lahf
push
adc
popf
icebp
sub
movsb
sub
jl
add
pop
loop
jg
xchg
cmp
pop
xlat
jle
and
roll
test
sub
mov
inc
pop
xlat
xor
inc
aam
xchg
sti
and
pushf
fidivrl
add
or
out
sub
xchg
xor
fdivrs
add
jle
and
jne
add
pushf
sbb
and
sahf
loop
xor
cwtl
add
mov
push
push
cwtl
pop
add
xchg
push
inc
cmc
dec
mov
jns
add
mov
jbe
pop
sbb
in
arpl
rcrb
jmp
mov
adc
ficomps
popa
jno
cmc
push
cwtl
test
imul
in
add
push
jnp
and
fldt
pop
fdivr
pop
mov
push
dec
and
bound
add
int3
dec
push
jmp
mov
in
mov
sbb
into
pop
fnstcw
xchg
ds
orb
and
xchg
xor
jp
ss
mov
add
push
xor
mov
jb
icebp
xchg
sbb
inc
insb
lret
enter
push
inc
dec
les
jns
push
add
jle
and
scas
xor
xchg
add
sub
ret
stc
test
add
int
lea
stos
push
xor
or
xchg
mov
nop
jnp
pop
loope
rolb
push
cld
test
add
in
aaa
add
ret
popa
inc
cld
jae
dec
add
test
mov
fsubrl
mov
mov
jo
int
out
or
pop
popa
xchg
rcrb
jnp
cmpsl
inc
dec
rolb
sbb
add
ret
add
pushf
dec
mov
pop
dec
fldl
pop
mov
insl
ficoms
adc
fimull
pop
mov
cmpsb
inc
subb
test
xorb
stc
push
mov
pop
jnp
daa
sahf
cmp
outsl
sub
and
ja
add
xchg
xlat
mov
cmp
jge
hlt
mov
or
movsb
mov
aam
mov
test
and
and
dec
pusha
ret
sahf
scas
hlt
inc
addr16
xor
aad
xchg
add
insl
adc
shrb
outsb
adc
or
fcoms
add
xchg
and
rcrb
sahf
adcl
filds
cmp
mov
and
inc
push
lds
gs
adc
add
test
iret
or
ljmp
adc
lcall
and
pop
xchg
adc
xchg
inc
add
push
mov
ss
jmp
or
pusha
stos
sub
jo
cmp
mov
jecxz
bound
sub
nop
xchg
add
jne
cwtl
fdivrs
adc
lcall
mov
test
add
addb
pop
fiaddl
mov
ss
adc
add
out
pop
rcll
adc
push
fimuls
shl
cmp
sub
addl
dec
xchg
popf
ret
cmp
add
fs
pop
mov
add
adc
ss
iret
jb
jecxz
jne
pop
loope,pn
cli
mov
cld
aad
sbb
mov
out
pop
and
or
mov
pop
add
sub
add
push
mov
stos
and
xor
lods
outsl
lcall
mov
es
mov
int3
inc
negb
jp
pushf
and
adc
outsl
push
lods
cltd
popa
mov
pusha
or
jno
mov
scas
cs
dec
cwtl
pop
add
leave
test
or
lods
add
xchg
out
or
ficoml
add
sub
btr
rolb
test
adc
xor
shll
dec
cmp
ljmp
lcall
shll
sbb
push
add
cmpb
mov
push
stc
fsubl
push
enter
and
pop
scas
mov
orb
jmp
sub
or
pop
add
mov
rcrb
popl
out
mov
or
into
cwtl
fdivrl
mov
in
and
add
mov
add
xchg
mov
jo
jmp
push
inc
adc
mov
mov
lods
lahf
int3
mov
fnstsw
and
imul
lcall
push
cmc
mov
fsqrt
push
pop
xchg
pop
sahf
inc
push
sub
lock
pop
sbb
sub
ss
inc
fcoml
dec
or
insl
jge
and
shr
cs
das
add
iret
push
add
add
mov
test
fwait
cmp
pop
fsubl
add
repnz
jo
xchg
mov
pop
fdivrl
es
mov
call
add
aam
jbe
repnz
and
jg
test
dec
sarb
aas
fidivrs
scas
push
fcmovne
ljmp
push
sti
xchg
push
cmpsb
subl
add
xor
orb
popf
addl
cld
xchg
sub
mov
mov
pop
xchg
fdivr
addb
adcl
push
xor
ds
or
mov
and
pop
fs
sub
out
loopne
stos
add
cld
jp
adc
sahf
mov
sbb
nop
jns
pop
mov
mov
insl
fcmovbe
cs
add
add
cmpsb
out
add
pop
jl
sub
add
xorl
mov
inc
mov
xchg
aad
popf
cmp
and
inc
lret
lods
adc
shlb
push
add
cmpsl
sti
daa
imul
jnp
repnz
dec
jecxz
xchg
jb
add
xchg
and
dec
sbb
xor
mov
fistps
dec
pop
dec
adc
mov
sub
xchg
add
hlt
cmp
sbb
xor
int3
or
sub
and
dec
cmpsb
inc
int
push
lret
das
cmp
pop
or
xchg
xor
ret
adc
ret
test
and
rclb
jmp
pop
cmpsl
xor
mov
mov
pop
iret
in
popf
add
add
adc
jo
add
mov
sub
insb
andb
xor
rclb
add
scas
jo
dec
subb
pusha
inc
movsb
add
inc
les
or
out
fxch
into
ds
mov
fstl
mov
jl
cmpl
inc
inc
add
or
adc
mov
imul
addr16
arpl
mov
add
cmp
shl
pusha
mov
add
pop
lahf
push
std
jl
shlb
adc
stos
call
fldenv
or
jb
sbb
jle
movsb
jl
mov
lock
adc
cmp
mov
adc
jbe
add
pop
hlt
inc
mov
add
mov
lds
leave
popa
pop
loopne
pop
lret
push
mov
rcrb
dec
cltd
stc
add
xchg
lods
sub
jo
cmp
idivl
cmp
shll
inc
push
xor
test
cmp
push
mov
fbld
out
cmp
jg
mov
and
push
loope
fisttpll
sbb
data16
pop
lods
ljmp
inc
ud1
gs
add
test
data16
ds
stos
icebp
push
sub
je
ja
int3
push
mov
shll
xchg
sub
clc
nop
movzbl
fwait
add
stc
cwtl
and
mov
mov
aad
sub
pushf
push
sbb
xor
popa
xchg
and
pop
repz
mov
sbb
add
pop
mov
les
mov
add
aas
popf
sbb
inc
mov
push
sbb
jp
shrb
in
out
test
lods
rorl
inc
repnz
xorb
mov
xlat
xchg
cltd
sub
clc
cmp
lcall
or
test
jmp
jb
adc
xlat
adcb
jge
adc
jns
rcll
aas
add
pop
les
scas
push
xchg
lds
add
imul
dec
fidivs
add
mov
push
leave
xor
fs
push
or
inc
mov
incb
fsts
xchg
lret
ret
daa
aaa
add
jg
add
cmp
sbb
adc
in
test
psubb
lea
negb
sti
es
cmp
add
test
or
mov
sub
pop
test
pop
cltd
aas
pop
mov
test
and
testb
jo
shl
das
inc
add
jno
outsb
adc
mov
xchg
lahf
ss
dec
mov
mov
jns
sbb
adc
jle
testl
js
scas
sub
fistpl
rcrl
pop
addb
inc
enter
xchg
leave
jb
dec
repnz
out
cld
pusha
scas
sub
fiadds
and
daa
mov
jecxz
mov
jmp
lea
test
cmp
xchg
adc
mov
adc
bound
sbb
test
add
cmp
pop
jmp
out
punpcklbw
dec
push
add
gs
and
sbb
mov
andb
inc
rcrb
out
mov
enter
inc
iret
add
adc
mov
es
mov
js
push
lods
call
out
dec
xor
add
push
lea
js
mov
dec
xor
dec
push
loope
mov
inc
test
push
mov
mov
fcomps
fsub
repz
shll
add
sahf
div
jo
mov
roll
ficomps
test
leave
cmp
cmp
mov
push
into
push
rclb
filds
xchg
mov
repz
add
jl
js
add
ljmp
repnz
pop
hlt
jg
ret
std
xchg
add
popa
xorb
lods
cmp
ficoml
add
cmp
mov
mov
add
scas
loop
add
rcrb
fsubrs
add
dec
xchg
cmovge
fistl
cmp
adc
and
jo
sub
fsts
push
in
add
push
cmpb
add
sub
cmp
xchg
push
das
inc
addl
xchg
mov
push
xlat
adc
pop
pop
ret
repz
nop
aaa
shl
push
cmp
das
sub
or
call
or
adc
cmp
ds
bound
inc
mov
xor
lds
or
ss
shll
xchg
xor
lock
dec
lea
movsb
icebp
into
xlat
cmp
push
int3
mov
inc
or
pop
xchg
repnz
incl
fwait
mov
push
cld
xchg
jae
ret
enter
add
int
and
sub
pop
out
jle
test
cmp
cmp
jl
cmp
inc
jo
mov
mov
xor
add
stos
aaa
jne
js
mov
xchg
inc
or
nop
and
addb
sbb
aad
insb
pop
fistl
ss
addr16
negl
or
pop
cld
mov
int3
leave
gs
stos
cmp
sub
mov
add
lods
push
in
push
xchg
popa
aaa
arpl
pushf
fidivrl
xchg
sbb
jp
add
movsl
loopne
lret
mov
push
fistps
inc
add
mov
stos
lret
push
out
jmp
repnz
aaa
cmp
inc
mov
mov
adc
sub
push
dec
pop
out
add
out
dec
call
pop
lock
dec
or
orb
add
and
or
jnp
rcll
jl
add
shrb
fdivrs
add
bound
ljmp
test
xor
mov
pop
call
int
push
mov
sbb
scas
je
ja
mov
xor
and
or
pop
lock
inc
jl
xor
adc
mov
mov
jnp
mov
sbb
call
pop
pusha
mov
pusha
popf
cmp
in
test
mov
sbb
cmp
pop
popa
pop
push
stc
or
add
repz
push
pop
pop
insl
ja
clc
call
sub
add
inc
push
cmc
pop
leave
mov
xchg
movlps
add
sbb
cmp
adc
ljmp
mov
popf
mov
mov
jmp
mov
out
push
inc
imul
dec
adc
adc
rclb
lock
aam
push
sub
jl
add
xchg
cmpsb
dec
das
sub
lock
jl
ret
aam
loopne
fstpl
push
xor
add
cwtl
and
cmpsb
push
or
sbb
and
andb
xor
rorl
cmp
adc
test
inc
sbbb
push
jae
adc
adc
or
loop
cmpsb
loope
adc
sbb
mov
or
nop
dec
repnz
xor
mov
and
fadd
insb
inc
add
mov
cmpsb
add
addl
mov
mov
mov
xor
add
pop
scas
ret
adc
jmp
mov
cmpb
mov
das
add
cmp
xor
shlb
jns
push
xchg
hlt
add
sub
cmpsb
fildll
popa
mov
add
push
hlt
es
inc
push
outsb
adc
inc
mov
mov
test
mov
xlat
loopne
inc
adc
daa
outsb
add
sub
add
xlat
sub
inc
lock
rdmsr
movsl
int
popa
pmaxub
lgs
dec
dec
stos
roll
inc
mov
lret
push
add
stc
inc
fs
and
add
aaa
push
icebp
or
std
and
popa
fdivrs
icebp
and
std
sub
pop
mov
rorl
sub
cmpsl
xchg
dec
test
ficompl
add
sub
inc
pop
inc
lahf
scas
inc
ljmp
inc
mov
sbb
cli
xchg
or
adc
or
mov
or
pop
inc
aam
push
add
or
mov
push
xor
mov
mov
xchg
loopne
cmpsb
inc
stc
daa
adc
pop
rcll
xchg
sub
addps
mov
and
enter
je
sti
adc
mov
lods
nop
inc
fwait
sub
stos
outsl
orb
sbb
sub
mov
rol
xchg
out
fs
mov
sbb
inc
nop
push
push
std
adc
adc
lods
dec
rcll
jbe
pop
xchg
insb
pop
sub
adc
mov
sub
daa
mov
adc
push
rorb
mov
lds
xor
ret
pop
imul
adc
popa
inc
shll
mov
jae
scas
xor
cli
and
xchg
mov
loop
test
push
mov
mov
loopne
push
fs
test
aam
xchg
xor
or
inc
or
arpl
mov
push
lret
sub
bound
rcpps
test
mov
inc
inc
ror
mov
adc
sbb
and
cmp
and
pop
nop
xor
cmp
adcb
cltd
or
cmp
add
sub
and
jge
out
push
pop
adc
nop
lea
outsl
insb
mov
xchg
mov
push
or
sbb
dec
adc
dec
fdivs
xor
test
push
test
add
int3
test
xor
xchg
fsubrs
mov
in
push
in
mov
xchg
ficoms
push
addb
cmpsl
sbb
in
scas
enter
or
and
adc
inc
inc
lret
dec
push
test
enter
xchg
xchg
pop
adc
sti
daa
or
dec
ljmp
xchg
jno
and
mov
adc
rcrb
push
add
idivb
call
and
leave
sub
mov
adc
inc
rorb
aas
mov
jp
or
and
mov
or
jns
add
xor
mov
jmp
inc
aam
xchg
adc
outsb
cmp
hlt
cltd
popl
int3
imul
adc
rolb
loope
pop
mov
jb
add
imul
pop
or
and
or
mov
add
icebp
ror
dec
push
sub
xchg
sbb
outsb
sbb
add
lock
fcoms
mov
jl
push
sub
sub
or
mov
pop
jo
xchg
and
add
repnz
pop
test
push
and
dec
or
pusha
dec
cmpsl
inc
mov
cmp
cltd
add
xchg
stc
in
lahf
je
rclb
rcrb
pop
iret
aam
mov
icebp
dec
xchg
cmp
and
repz
insb
mov
push
aas
aam
xor
sar
cli
inc
ljmp
jecxz
inc
pop
xchg
fsubr
cmp
cmp
loopne
call
cmc
add
inc
add
xchg
aam
jns
add
je
das
movsb
mov
dec
sti
mov
test
mov
repz
sub
stc
cli
jbe
push
dec
mov
mull
add
cmp
outsl
push
lar
inc
cwtl
xor
out
outsb
push
ror
xchg
std
enter
and
mov
add
test
arpl
cwtl
sub
push
sub
out
sbb
pop
mov
les
sbb
movl
add
xchg
inc
push
loope
es
and
ret
andb
dec
push
pop
push
rolb
xor
inc
call
and
mov
ja
xor
test
dec
notl
mov
cli
add
jnp
int
add
jle
filds
push
mov
in
popa
push
test
test
dec
dec
mov
dec
mov
inc
js
jns
out
dec
cmp
pop
imul
or
sub
mov
cltd
fstpl
out
add
sub
jp
cmp
pushf
pop
mov
mov
icebp
or
sbb
cwtl
mov
and
add
ret
fldcw
sub
and
push
inc
cwtl
sbb
dec
fcompl
or
cld
js
mov
cmp
xchg
dec
pusha
add
pop
sbb
ds
jp
add
scas
add
inc
shl
out
or
adc
cwtl
mov
sarl
out
push
sarb
pop
mov
sbb
sub
icebp
or
arpl
pop
cld
not
pop
inc
push
pusha
shll
arpl
rcr
inc
add
mov
sarb
loop
push
mov
addr16
or
and
add
lds
sub
insl
push
dec
nop
sub
mov
dec
fnstcw
nop
daa
shlb
test
mov
lock
add
dec
nop
mov
inc
sub
jmp
jmp
lret
stos
gs
push
clc
movsb
or
sbb
and
inc
xorb
xor
ret
cwtl
and
notl
cltd
jbe
add
jle
arpl
xchg
icebp
and
cmpsl
out
jmp
push
js
mov
add
mov
jno
add
stc
das
into
or
andl
clc
sub
je
in
push
xor
cmp
testl
nop
add
sbb
arpl
dec
push
lahf
out
add
mov
loope
pusha
and
fsub
mov
cld
imul
xchg
rcll
clc
cmpsl
imul
shl
xor
mov
xchg
adc
adc
add
addl
je
inc
adc
stos
loopne
push
adc
and
pusha
aaa
jmp
add
test
push
dec
nop
dec
xchg
sbb
jmp
scas
rcl
dec
pop
pusha
mov
push
pusha
or
sti
xchg
arpl
mov
add
loopne
in
and
add
inc
mov
adc
les
adc
jno
scas
imul
out
outsl
nop
sub
inc
sbb
adc
std
inc
imul
sbb
fisttpll
xchg
pop
jne
icebp
nop
lock
add
adc
xor
push
clc
dec
dec
push
push
daa
mov
mov
and
xor
ret
cwtl
std
mov
into
incb
xor
or
or
rcr
push
add
push
jno
add
rcrl
or
outsl
add
loop
not
mov
pop
int3
loopne
or
add
pop
stos
fdivrp
jno
xor
inc
push
mov
inc
adc
aas
enter
inc
out
mov
clc
xorb
lock
rorb
jl
es
mov
dec
shlb
jo
sub
sbb
roll
je
stc
pop
jnp
in
lods
inc
ret
imul
add
cmp
stos
jne
ret
ret
mov
aam
mov
xlat
inc
add
lret
bound
add
mov
mov
in
push
xor
mov
stc
dec
push
inc
stos
andl
cwtl
call
pop
inc
aam
sbbb
sbb
sahf
fadds
mov
loope
insb
movsb
aam
add
pushf
enter
dec
fsubs
fimuls
sahf
dec
test
inc
xchg
dec
dec
clc
sbb
sahf
push
fnstenv
cmp
xor
pop
sub
inc
dec
cltd
adc
cmpl
add
push
push
cwtl
jl
test
adc
lds
dec
shrb
mov
rolb
add
adc
push
sbb
and
push
add
ret
cli
adc
xor
std
and
inc
mov
pushf
cs
int
jo
add
ret
xchg
and
fsubrl
mov
dec
sbb
adc
nop
ja
pop
test
and
push
xchg
rclb
cmpsl
in
and
add
fwait
sbb
pusha
adc
cmp
jnp
aas
daa
push
pop
ror
mov
orb
mov
dec
sbb
mov
push
cmp
cmpsl
xchg
xchg
stos
sbb
sub
gs
dec
movsb
outsb
imul
mov
sub
js
add
bound
cmp
and
dec
push
call
loope
movsb
lock
rcrl
mov
pushf
pop
scas
cmp
inc
or
jb
cmp
shrb
pop
jp
js
test
and
repnz
rcrb
in
push
and
push
in
sub
shl
push
fimull
test
test
js
movsl
mov
and
sbb
dec
xchg
jns
fsub
shlb
and
push
inc
cwtl
dec
xchg
rolb
ja
xchg
inc
push
mov
lret
or
jle
and
fstps
mov
mov
mov
dec
add
add
mov
or
adc
lcall
adc
out
lods
push
mov
cld
pop
or
lcall
mov
jo
add
pop
pusha
mov
pop
xchg
jo
inc
repnz
add
xchg
pop
add
rcll
add
sbb
xorl
inc
xchg
cmp
dec
shrb
filds
sti
adc
out
xor
xchg
hlt
push
std
icebp
sbb
sub
lods
popa
test
addb
inc
repz
jmp
dec
mov
sti
loopne
js
aam
add
movl
push
xchg
cmp
add
pusha
into
push
add
bound
xor
push
lock
bound
push
pop
xor
lds
push
and
mov
mov
xchg
fwait
lods
xchg
dec
push
push
push
cmp
adc
inc
movsb
or
loopne
sbb
daa
sbb
lcall
add
xor
mov
sub
faddl
cli
insl
daa
aad
adc
mov
sub
incb
les
rol
xor
mov
push
or
sbb
dec
inc
add
jne
add
dec
sbb
pusha
inc
nop
js
mov
dec
stc
xchg
cmpb
push
cltd
fimuls
adc
in
cmpl
xor
xor
mov
nop
dec
mov
jmp
wbinvd
inc
fldcw
js
shrd
out
enter
adc
out
adcl
sbb
mov
jl
xor
xchg
dec
sbb
inc
cmp
mov
xorb
mov
add
xchg
xchg
es
nop
popa
adc
scas
dec
hlt
js
das
movsl
movsb
cmp
mov
ds
pop
adc
and
jns
add
lahf
jl
xchg
rolw
scas
adc
push
clc
mov
dec
addb
sub
mov
into
push
mov
xchg
sbb
aas
mov
push
add
js
fiadds
adc
int3
and
add
adc
inc
and
add
fiadds
pop
add
rcrl
inc
add
ja
mov
and
mov
and
lds
and
mov
add
jae
mov
add
push
repnz
cmpsb
sbb
lea
pop
subb
add
fimuls
and
mov
cmp
pop
add
push
shll
iret
add
xor
sub
jb
test
sbbb
jl
cmp
add
mov
roll
pop
dec
scas
push
pop
mov
push
pop
cmpsl
jae
in
das
xor
mov
sbb
daa
push
cmpsb
rolb
sti
movsb
scas
sbb
cwtl
add
jno
outsl
push
and
adc
rcrl
fsubrs
inc
cld
sbb
add
loop
in
rclb
xchg
adc
mov
push
sub
push
mov
sub
pop
fiadds
xchg
xchg
pop
inc
jno
popa
xchg
add
xor
jo
pop
sbb
pop
xchg
loop
aaa
stc
or
addl
pop
cmpsb
fcoms
call
lock
mov
pop
pop
add
inc
xchg
add
dec
xor
inc
jbe
fsubrs
scas
gs
pusha
inc
pop
cmc
sub
xlat
lea
mov
aad
cmp
cld
pushf
into
push
mov
clc
shll
pusha
push
inc
test
mov
imul
pop
push
popf
sbb
cmp
add
xor
test
negb
mov
push
aaa
ljmp
iret
repz
fwait
subb
ret
cltd
or
or
lods
nop
xchg
stos
cmpsb
xor
sbb
outsl
add
mov
jg
je
add
hlt
sub
bound
adc
imul
rorb
hlt
fstps
loop
sahf
mov
cld
add
cli
adc
and
add
ja
adc
add
adc
les
aam
inc
call
or
js
rorb
test
add
aad
add
pushf
and
or
push
lock
xchg
insl
xorb
lcall
sub
push
faddl
xor
ret
sarb
dec
test
sub
add
add
mov
cmpsb
add
jmp
mov
inc
xchg
jo
das
add
pop
jge
fisubl
add
fwait
and
fsubl
movsb
pop
mov
xor
addr16
repnz
test
fsubs
add
int
pushf
jae,pt
xchg
add
pop
loop
add
jnp
push
aas
popa
testl
test
pusha
lret
jle
aas
mov
add
dec
push
add
cvtps2pi
jns
fisubs
push
push
enter
cwtl
add
lods
pop
lcall
xlat
push
mov
add
mov
add
xchg
add
aam
psubw
shr
push
mov
test
pop
ret
add
xchg
pop
mov
idiv
arpl
xchg
sbb
push
mov
insb
add
loopne
xor
into
aam
icebp
cld
dec
cld
dec
push
js
jg
daa
mov
mov
out
das
pop
dec
add
sbb
ret
fidivl
gs
js
xchg
push
cmpsb
add
sti
loope
xor
stos
add
loop
mov
sbb
add
out
jl
sbb
push
mov
popa
pusha
popf
dec
push
mov
dec
adc
dec
mov
or
cmp
inc
or
lahf
mov
push
popaw
push
subl
add
iret
add
and
xor
mov
cld
and
or
jg
pop
and
add
outsl
mov
add
or
inc
xchg
push
mov
insl
aas
mov
aas
cltd
push
add
sub
cmpsl
inc
fwait
add
and
add
lods
push
rcrl
movsl
dec
xchg
sbb
pop
add
xchg
xor
or
or
lcall
jnp
push
pop
inc
sbb
rcrb
daa
cwtl
add
ljmp
xor
mov
jbe
test
inc
cmp
mov
push
push
lret
daa
adc
dec
or
and
fidivrl
xor
pop
andb
pop
inc
jge
es
repnz
addb
add
aas
sbb
add
cwtl
das
dec
test
add
xchg
std
and
lret
add
scas
lds
test
out
inc
xor
test
dec
aas
xchg
and
popa
mov
out
push
cmp
sbb
mov
pop
mov
dec
jp
or
sbb
adc
add
push
aam
push
dec
rcll
mov
enter
mov
ret
mov
inc
xchg
push
sub
sbb
rolb
notb
push
add
dec
lock
add
adc
xor
or
adc
adc
sbbb
fs
sbb
add
cmpb
andb
stos
or
pop
mov
pop
or
dec
cmp
pop
addb
movsl
push
jle,pn
add
jo
adc
adc
cmp
xchg
adcb
scas
cld
andl
movsl
dec
mov
fmuls
or
ja
sub
add
mov
inc
adc
call
loop
jecxz
mov
aas
test
dec
js
add
jle
fidivs
fldcw
and
mov
dec
test
out
adc
enter
cmp
orb
cli
dec
mov
jns
dec
sbb
dec
add
jl
mov
push
mov
into
out
adc
xchg
xchg
andb
jbe
sub
and
or
xor
das
mov
jno
xchg
sbb
ds
pop
sub
sub
inc
or
sub
xor
pop
ss
lea
sub
push
inc
sbb
cli
add
sub
xor
outsl
xchg
sub
xchg
pop
cmp
sbbb
xorl
loopne
mov
push
insl
add
sbb
push
cmp
sub
mov
mov
test
nop
xor
or
loope
scas
xor
add
enter
xchg
add
mov
dec
add
stc
cli
mov
jbe
jne
mov
lret
add
fs
jp
xchg
xchg
mov
push
push
mov
push
jb
dec
xor
add
push
jnp
fnstcw
push
imul
int3
popa
jle
add
or
popa
sbb
push
jl
xor
cmpsl
insl
cmp
xorb
adcl
add
subb
hlt
testb
sbb
cltd
mov
scas
js
test
mov
nop
inc
pushf
addb
lret
aam
mov
imul
jecxz
test
imul
mov
sub
lea
adc
pop
and
dec
fs
test
pusha
jl
adc
sub
push
xchg
out
in
push
mov
fisubrs
or
add
adc
pop
iret
mov
js
es
jns
push
ds
pop
pop
inc
or
dec
lds
pop
shl
test
push
call
xchg
stc
in
lods
pop
add
jge
clc
jecxz
or
or
adc
or
sub
xor
loop
xor
sbb
fmuls
mov
adc
or
mov
or
xchg
mov
decl
add
adc
push
repnz
jl
push
jo
mov
or
mov
shrl
fdivs
sbb
ficoms
int
add
cmp
or
test
xchg
mov
xchg
and
adcl
and
dec
adcb
xchg
mov
push
jb
dec
pop
jl
mov
int
mov
cmp
lret
xchg
in
adc
call
mov
ds
inc
add
mov
loopne
mov
jmp
decl
push
cmp
add
and
cmp
incl
ljmp
mov
pop
dec
pop
push
dec
cmp
je
std
sub
ss
or
adc
cmp
stos
jmp
dec
xchg
push
and
and
mov
cmp
cli
mov
add
fnstcw
sbb
scas
sub
gs
cmp
stc
jp
jmp
and
iret
cmc
cmp
push
sti
xor
inc
mov
mov
xor
es
daa
sbb
add
sub
rolb
addl
das
sub
mov
add
and
sub
xor
cmp
sbb
or
sbb
and
xor
or
sub
xor
xor
sub
ror
loope
adc
cmp
rcrl
aaa
add
sub
push
cmp
sub
mov
sub
cmpsl
addr16
aaa
jmp
cmp
cwtl
test
xor
cmp
pop
sub
adc
xchg
or
ror
dec
subb
xor
sbb
jge
cmc
pop
pop
xchg
nop
push
iret
jp
and
lcall
xor
mov
sbb
sbb
mov
sbb
inc
enter
pop
fiaddl
cmp
mov
cmp
xor
add
mov
push
xchg
or
cld
add
fsub
add
dec
xchg
mov
mov
inc
and
cli
mov
add
mov
sub
jle
inc
outsl
pop
or
jmp
mov
sti
mov
cmp
sub
cmpsl
enter
push
out
mov
test
cmp
lahf
dec
icebp
mov
scas
and
call
xchg
xor
mov
pop
sub
test
mov
pusha
cld
inc
lret
jae
roll
mov
repnz
mov
mov
jns
or
dec
or
xor
jmp
adc
and
in
sub
sub
pusha
mov
mov
xchg
pop
dec
dec
test
xchg
nop
mov
nop
and
dec
fbstp
scas
lock
and
jmp
sub
movsb
movsb
and
sub
inc
andb
fcoms
inc
dec
adc
in
stos
push
imul
or
and
out
dec
lock
adc
rclb
pushf
lret
cld
sbb
jecxz
mov
and
add
mov
sub
sbb
mov
mov
adc
sbb
or
dec
movsb
xchg
mov
sbb
and
popa
inc
lret
xor
and
or
xchg
nop
xchg
jmp
js
inc
lret
sub
cwtl
int3
js
adc
test
popa
dec
icebp
dec
push
es
fadds
jno
shll
adc
lods
adc
adc
mov
xor
ss
sbb
mov
into
xchg
movsb
out
adc
dec
jae
nop
in
push
aad
test
xor
dec
add
aas
push
imul
lock
insl
cmp
xor
pop
inc
xor
sub
incb
sub
pop
sub
and
dec
cmp
adc
push
xchg
xor
push
loopne
pop
cmp
inc
add
push
sub
and
sub
or
jo
and
or
and
cwtl
adc
rcrb
dec
adc
cmp
rcll
xchg
pusha
in
push
push
or
jbe
cmc
or
sbb
and
jg
add
sub
sub
and
subb
cmp
loopne
into
pop
push
cmp
or
dec
inc
loopne
sbbb
add
and
push
clc
xor
inc
and
fmull
xchg
cmp
pop
iret
sbb
inc
dec
xchg
jge
in
mov
mov
or
fisubs
adc
out
cmpb
insl
mov
addr16
cmpsb
push
iret
sub
in
imul
movsb
imul
cmp
push
xor
fisubrs
in
sbb
pusha
add
and
clc
xor
jmp
cmc
fldt
add
xor
fisubrs
add
push
mov
lret
jge
mov
arpl
add
cli
sub
mov
xor
popa
sub
mov
add
aas
xor
add
imulb
popa
mov
and
adc
pusha
and
lods
xor
xor
lret
or
lock
ret
cmp
and
pop
xor
in
mov
sub
enter
mov
aad
clc
push
icebp
sub
js
add
mulb
push
iret
cmpsb
add
fisubl
mov
sub
je
pushf
sbb
cmp
add
xor
mov
lods
aaa
out
stc
test
lock
xchg
daa
rcr
xor
repnz
lea
ss
push
pop
fmull
mov
cmp
mov
fwait
or
hlt
add
fmul
rolb
cmpsb
sub
in
faddp
xchg
push
sbb
fimull
cld
popa
mov
movsl
in
gs
in
rcrb
push
push
xor
lahf
sbb
imul
shrl
jb
adc
es
xchg
and
das
outsl
daa
or
ja
sub
lods
ss
out
or
pushf
push
and
imul
cmp
add
jl
rcl
inc
rol
add
sub
sub
in
fistps
push
jge
sbb
roll
das
dec
sub
and
les
ficomps
cli
das
push
mov
lret
and
and
sub
push
pop
ror
adc
insl
loopne
xor
icebp
popa
adc
fs
xlat
lret
je
repnz
xor
jns
daa
dec
hlt
xor
pop
fsubr
or
lock
mov
dec
cmp
sub
xor
fidivrs
xor
mov
pusha
movsb
push
cli
pop
sub
nop
pop
fs
std
and
fidivrs
pop
jecxz
insl
mov
and
imul
or
aam
test
testb
daa
xor
xchg
push
xchg
scas
mov
pusha
out
mov
push
jge
cmp
sub
add
imul
sbb
inc
call
and
cmc
stc
and
and
subl
inc
enter
sub
mov
pop
adc
adc
mov
movsl
call
and
andb
adc
call
dec
cmp
clc
mov
pushf
call
and
lcall
sub
je
ds
xor
xorl
shll
cmp
mov
and
sub
mov
pop
inc
fdivrl
xor
add
and
lock
neg
rorl
out
loop
cmp
addb
andl
push
inc
adc
addb
xor
inc
std
sar
andl
cs
cmp
sbb
daa
fst
sbb
xchg
and
jmp
pop
push
pop
inc
sbb
or
jae
xor
clc
out
cmp
sahf
aaa
es
out
jmp
js
xor
test
add
lock
or
call
add
inc
or
mov
fwait
add
xor
mov
enter
inc
mov
sub
push
lcall
cld
add
and
sbb
adc
lahf
xor
hlt
das
dec
leave
loopne
sbb
rcr
dec
andb
in
das
push
leave
xchg
add
addb
loopne
sbb
shl
outsl
rclb
push
sub
push
and
in
dec
or
and
cmp
dec
pop
push
add
nop
out
jb
sub
add
gs
iret
fs
push
adc
out
sbb
dec
push
movsb
jmp
data16
add
scas
dec
xchg
aas
dec
sbb
and
movsb
sub
cmp
stc
jp
add
jge,pn
lahf
addr16
cwtl
cmpsb
andb
jo
rorb
out
push
lahf
andb
sbb
testl
stos
icebp
mov
and
add
add
mov
shl
xchg
and
and
cltd
sbb
add
in
scas
add
aad
cmc
and
add
xchg
pop
jge
pop
das
into
clc
jecxz
jns
std
call
sub
pop
pop
mov
jle
cmp
std
cmp
adc
loopne
mov
add
sbb
imul
and
mov
cld
and
cld
lret
loopne
lcall
add
cmp
xchg
cmp
and
add
scas
add
js
inc
mov
data16
xchg
cmc
mov
out
sbb
or
jle
les
inc
inc
adc
popf
or
push
adc
and
cmp
movsb
mov
or
shll
add
out
mov
mov
mov
mov
or
repnz
imul
inc
mov
les
inc
test
test
mov
add
push
adc
pusha
jo
sbb
sbb
hlt
cwtl
push
add
adc
insb
or
rorb
inc
push
and
scas
push
sbbl
sub
push
or
mov
and
or
and
jo
cmp
lds
jl
pushf
cmp
rorb
add
ret
or
mov
testb
pop
and
shlb
mov
and
xchg
sbb
or
andb
inc
mov
add
cwtl
mov
xor
and
push
xor
jb
sub
push
repnz
xor
and
jmp
adc
or
or
sub
out
cmp
lcall
xchg
and
std
in
xchg
movsb
ss
inc
pusha
add
leave
mov
add
gs
xor
sub
lods
mov
fadds
inc
adc
nop
mov
and
decl
mov
xchg
fldenv
inc
inc
in
stc
nop
push
out
mov
pop
outsb
pop
pusha
or
xchg
adc
add
mov
mov
jg
daa
mov
rorl
mov
shl
push
ljmp
push
lods
in
movsb
add
addl
mov
repz
daa
push
cmpsl
call
adc
sub
sahf
mov
lret
in
divb
imulb
loopne
insb
add
aad
pop
pop
sbb
mov
add
xchg
cmc
movsl
stc
push
filds
jo
mov
adc
movsb
lcall
and
pop
lds
xchg
test
je
jo
nop
xchg
ds
jbe
aaa
nop
test
cmp
add
mov
push
pop
add
or
mov
xor
jno
xchg
inc
sub
lahf
push
rcr
xchg
add
pop
or
stos
adc
inc
lcall
and
cmp
adc
nop
movsb
inc
cmp
sub
popf
jg
and
inc
outsb
rorb
dec
add
fldt
mov
pusha
sbb
and
rolb
add
push
mov
into
sub
or
insb
sar
add
push
pusha
mov
sbb
mov
add
cs
cmpsl
pop
jbe
add
lods
dec
mov
imul
inc
and
dec
xchg
or
fcoms
int3
adc
push
mov
lock
clc
jno
sbb
hlt
fldt
in
rcll
outsb
std
mov
add
cwtl
arpl
sti
sub
sub
sarl
inc
and
arpl
or
pop
xor
lahf
add
rcrb
int3
jo
lods
and
popa
adc
xchg
add
mov
mov
pop
orb
hlt
and
pushl
imul
sub
add
ss
add
insl
xchg
lods
xor
fmull
cli
out
mov
imul
xchg
add
fdivs
mov
mov
rorb
and
and
addb
cwtl
cmp
push
fmul
fisttps
bound
add
jecxz
sti
cmc
and
push
inc
xlat
sub
xchg
add
pop
sub
and
pop
adc
push
add
add
mov
test
pop
cli
add
or
test
xchg
or
cld
in
int
loopne
lods
out
xchg
mov
add
fcom
xchg
rcrl
adc
add
test
call
out
subb
sarb
shl
sub
inc
cmpsb
bound
test
lret
lahf
cmp
in
inc
loopne
xchg
clc
jecxz
in
testl
sub
hlt
and
dec
cli
in
andb
rcrb
xor
fdivs
inc
and
popa
or
scas
and
test
imulb
dec
and
lock
add
mov
cmp
and
fimull
fld
shlb
or
add
pop
and
cwtl
adc
fxam
jl
sbbb
leave
lahf
popa
pop
cwtl
std
cltd
rcl
aaa
sbb
packuswb
movsl
mov
add
cmp
xor
push
xchg
dec
add
push
mov
sbb
inc
and
fiaddl
add
nop
sub
dec
mov
nop
inc
and
sbb
inc
lods
push
andl
add
pop
loop
pop
add
fs
inc
mov
add
leave
pop
sbb
dec
pusha
mov
sub
dec
fsub
xlat
or
lahf
in
dec
mov
pop
inc
sub
and
ljmp
pop
xor
jb
mov
inc
mov
xchg
lret
out
ret
mov
cmpl
sbb
rolb
add
lret
mov
call
and
divl
js
add
fcoms
fsts
div
out
inc
rcrb
out
jb
fbstp
or
ljmp
jmp
data16
out
add
or
xor
dec
divb
es
push
add
push
cmc
and
dec
adc
lfs
inc
sub
mov
adc
and
test
or
shl
addl
xor
imul
xchg
pop
push
nop
int3
add
jnp
dec
add
mov
dec
mov
inc
push
inc
mov
jmp
int3
dec
fsubl
rorl
add
lcall
or
or
ja
mov
xor
sbb
sarb
jne
fdivs
sub
idiv
test
sbb
outsb
or
cmc
mov
roll
cmp
rorb
movsb
mov
ficoml
lcall
or
inc
xchg
insb
call
add
lds
ror
pop
popa
enter
add
arpl
subl
jl
pushl
faddl
sahf
sbb
sub
mov
inc
pop
and
ds
inc
in
ret
inc
add
js
push
mov
add
cwtl
aam
inc
add
mov
movsl
loope
arpl
add
insl
xchg
fs
add
adc
or
inc
test
adc
pop
adc
add
pop
mov
ja
insl
jle
out
dec
jmp
or
xchg
dec
mov
dec
decl
add
in
nop
dec
sbb
ficompl
mov
push
inc
shll
jo
xor
call
pop
jmp
stos
mov
inc
call
mov
and
dec
add
daa
xchg
pop
out
jb
push
faddl
in
jmp
loopne
dec
or
rorl
pop
mov
xor
jge
or
rorb
in
addb
and
addb
daa
rcrl
pushl
mov
add
repnz
inc
inc
cltd
jns
call
push
mov
sbb
imul
adc
dec
xor
dec
push
add
pushf
jle
sarb
shrl
jns
cmp
jg
mov
or
xchg
je
fdivr
enter
mov
pop
fldl
insb
push
xchg
mov
inc
mov
dec
gs
or
mov
dec
sub
rclb
mov
cmp
hlt
push
add
xor
shl
movsl
jb
xchg
rorb
in
fiadds
data16
rolb
adc
imul
je
and
push
push
adc
xchg
stos
mov
mov
pop
pusha
into
stos
lea
in
mov
les
sbb
jbe
aas
pop
mov
mov
stc
and
pusha
pusha
sbb
roll
gs
nop
sahf
sub
movsl
jns
xchg
mov
cmp
xchg
inc
lock
push
mov
arpl
movsb
loope
dec
sub
sahf
hlt
add
jp
sti
add
adc
lcall
stc
repnz
add
inc
arpl
add
gs
jae
sbb
repz
push
leave
or
out
dec
or
push
dec
enter
imul
sbb
add
cmp
and
out
push
out
sbb
pop
ret
sub
push
mov
test
dec
stos
lods
clc
adc
mov
mov
jmp
icebp
pop
jno
lods
add
sbb
sbb
sbb
sbb
inc
mov
sahf
inc
stc
stc
bound
xor
jecxz
mov
ret
pop
push
push
ds
add
arpl
fidivrs
cmp
mov
sub
xchg
cmp
jno
fstps
cmc
or
mov
pop
mov
add
jo
lds
inc
test
dec
or
xchg
add
stc
fidivrs
pop
add
aad
leave
xchg
icebp
bound
adc
mov
fisttpl
orb
je
cmp
lahf
aas
cmp
mov
in
and
and
push
sub
ja
pop
addr16
pusha
pop
mov
dec
adc
insb
or
push
xchg
xchg
add
jl
in
cmp
iret
pusha
pushf
shlb
and
xor
adc
shll
lret
stc
push
add
push
dec
lods
push
add
mov
jbe
outsl
pop
aaa
cli
iret
inc
pushf
adc
dec
insl
enter
ljmp
or
and
xor
add
push
dec
movsb
add
dec
sub
movsl
imul
adc
fdivrl
out
sub
sub
jno
jne
inc
lods
jge
add
jl
lret
xor
add
mov
sbb
jmp
inc
fiaddl
or
dec
sarb
int
xor
jbe
fldenv
lock
lret
pop
test
push
sbb
inc
cwtl
insb
loopne
orl
mov
jle
push
add
adc
pusha
sbb
inc
push
adcb
imul
into
ficoms
mov
scas
dec
xlat
pop
cmp
pusha
sbb
adc
test
sar
ret
jle
inc
jne
mov
cmp
and
enter
movsb
add
repnz
pop
js
lods
pop
sbb
addl
add
mov
lock
sbb
hlt
je
scas
add
popf
sbb
cmpsb
stc
pop
push
add
cld
pop
dec
push
sahf
aam
jns
dec
mov
aad
or
push
sub
jnp
add
sub
fwait
ret
leave
js
mov
sbb
mov
and
add
pop
mov
mov
int3
xchg
aam
push
jns
and
enter
sbb
adc
cmp
add
lcall
jo
push
insl
scas
mov
dec
mov
and
add
loope
add
daa
test
fldenv
push
hlt
andl
std
cmp
mov
push
xor
xchg
dec
test
call
imul
imul
sti
mov
add
mov
pop
jmp
xchg
ljmp
popf
push
clc
add
pop
mov
add
inc
add
enter
std
arpl
fwait
sbb
lret
jge
xchg
mov
js
add
add
and
pop
or
xchg
cld
push
fld
fsub
xor
js
sbb
pop
ret
add
cmp
pusha
jne
xchg
push
sarl
and
xor
pop
add
sub
sub
sub
sub
imul
jp
mov
jg
cmp
sbb
inc
xor
cmp
popl
lret
add
xchg
add
scas
push
loope
adc
faddl
xlat
add
push
fsub
sbb
int3
aam
add
enter
mov
es
cmpsb
ss
xor
mov
les
mov
jle
rorl
dec
mov
xchg
lock
pusha
xchg
loope
push
or
test
les
fstp
push
push
dec
addb
and
dec
inc
in
mov
add
mov
js
mov
mov
inc
mov
sbb
adc
into
xchg
dec
xor
dec
mov
imulb
ds
xchg
stos
inc
rorl
ret
push
push
adc
cmp
lahf
jmp
sub
xchg
loop
movd
adc
clc
fs
and
aas
test
pop
mov
sbb
sub
add
popa
or
clc
lret
lahf
std
jecxz
insb
les
inc
and
std
inc
test
in
add
xchg
xchg
jb
inc
adc
int
lock
lods
push
and
adcb
stc
ret
loopne
hlt
addr16
and
xchg
jno
subl
jg
testb
add
push
mov
pop
xor
gs
cmp
adc
movsb
xchg
jne
mov
stos
mov
mov
lods
mov
push
xchg
add
ja
pusha
pop
jne
dec
add
sub
sub
adc
and
mov
inc
insb
mov
mov
mov
jo
inc
andl
subb
loope
mov
and
sbb
out
mov
pushf
adc
insb
mov
stos
push
push
pop
enter
jo
add
xchg
arpl
mov
fs
xchg
inc
mov
mov
dec
stc
inc
add
or
cwtl
scas
add
cld
cltd
push
in
pcmpgtw
jne
or
mov
das
push
leave
fdivrs
add
in
das
mov
movsl
cld
mov
mov
lcall
loop
test
fwait
jbe
pop
push
adc
xor
xchg
cmp
pushf
add
xor
push
mov
sbb
aas
adc
cmp
mov
xorb
and
es
add
cld
cltd
sub
and
or
inc
mov
jno
adc
dec
dec
jo
dec
inc
pusha
dec
lret
add
ja
adc
mov
sbbl
cld
push
dec
sti
xchg
jg
pop
jge
out
sbb
mov
xchg
push
xchg
lock
shll
test
pop
add
xor
cld
inc
mov
sbb
loopne
inc
andb
inc
enter
shlb
add
sti
das
in
in
insb
aam
jno
add
or
inc
pop
lods
call
xchg
xor
in
sub
adc
lods
fs
gs
sbb
xchg
sub
enter
mov
push
icebp
dec
ret
fsubl
xor
sbb
iret
cmp
cld
lods
out
cwtl
dec
stc
jp
push
movsb
ret
or
sub
pop
inc
jno
rcrb
daa
jae
cwtl
xor
jl
test
xor
add
cmpsl
fidivl
fldcw
bound
adc
adc
add
dec
and
or
scas
cmp
mov
jl
jmp
inc
xchg
xor
dec
adc
clc
sub
pop
movsl
dec
sbb
leave
dec
inc
sahf
add
stos
mov
das
mov
sbb
sbb
xor
sbb
cltd
fisttpll
mov
sbb
rolb
insb
adc
je
xor
push
adc
loop,pt
and
mov
lods
loopne
roll
ret
dec
mov
test
in
add
movsl
xchg
xchg
sbb
adcl
mov
mov
adc
xor
sub
sbb
mov
mov
inc
mov
rol
popf
and
fmuls
in
iret
and
setne
add
out
lock
lret
mov
test
int
shl
add
fisttps
pusha
or
pop
sbb
out
inc
jae
stc
sbb
mov
and
add
imul
mov
pop
loopne
dec
adc
jecxz
outsb
adc
sub
xor
rorl
lahf
pusha
adc
xor
sbb
jp
xor
addl
rcr
in
imul
add
jo
test
and
test
loop
mov
test
inc
pop
add
mov
mov
mov
xchg
add
pusha
dec
push
mov
pop
ficomps
xchg
repz
or
add
iret
dec
sub
cwtl
addb
inc
jl
sti
and
cmp
jbe
cmp
mov
pop
mov
sbb
cmp
lret
jb
mull
mov
fiadds
inc
addb
insb
aam
aam
aam
cmpb
push
repnz
cmp
pusha
orb
or
cmpsb
cs
jno
jno
sbb
push
xorb
ss
xchg
rorb
pushf
add
sbb
xor
clc
lea
pop
jb
pop
mov
add
sbb
fdivrs
inc
sub
and
cli
inc
scas
lea
adc
xchg
push
cwtl
inc
mov
sub
int3
or
iret
cltd
lods
inc
rcr
dec
out
iret
les
adcb
dec
mov
inc
and
inc
xor
or
pinsrw
test
add
pop
jle
dec
add
mov
in
pop
jno
and
inc
push
adc
or
gs
xchg
daa
sbb
adc
sarb
cmp
or
xchg
in
ss
imul
loope
mov
mov
dec
movl
ud2
pop
mov
addr16
clc
adc
lds
lea
or
xor
insl
inc
and
pop
cmpl
xor
divl
push
push
call
pop
ret
and
sbb
and
pop
ret
mov
jmp
icebp
ljmp
and
pusha
popf
xchg
sbb
ret
mov
inc
push
ret
mov
test
dec
out
xchg
mov
test
jmp
sub
xchg
aaa
or
sbb
mov
and
sbb
adc
sbb
mov
or
pop
popa
scas
test
adc
call
filds
xor
cmp
mov
or
sbb
xor
or
repz
stc
mov
rcrl
pop
and
pop
xchg
mov
jmp
jmp
mov
dec
sbb
adc
pop
lock
mov
add
adc
imul
mov
sub
mov
out
repz
test
mov
inc
lret
sub
jmp
adc
fistl
inc
mov
loop
sahf
add
sub
sbb
ret
enter
inc
sbb
or
sbb
add
push
inc
in
dec
rcrb
mov
mov
hlt
push
mov
jo
mov
sbb
sub
add
inc
lds
lds
or
xor
add
dec
ds
jb
and
insb
fbstp
push
add
or
je
push
mov
push
nop
adc
xor
and
mov
jo
adc
or
add
xor
je
add
sbb
push
add
xchg
rcrl
shl
cld
fadds
out
push
subb
and
call
add
mov
mov
fwait
test
les
sub
sub
and
adc
mov
or
ret
mov
push
or
and
xchg
inc
or
adc
add
movsb
addl
jmp
add
sbb
mov
push
les
mov
pushl
mov
inc
sbb
mov
xor
mov
lds
add
add
mov
xor
and
mov
adc
lret
push
push
scas
push
outsl
or
pop
xchg
xor
lock
popa
cld
sbb
ljmp
add
inc
dec
pop
arpl
lds
pusha
push
addl
push
fwait
aas
jnp
sub
xchg
insb
cmp
mov
ret
mov
add
loopne
jmp
and
pop
inc
and
sbb
je
jmp
mov
pop
ss
xchg
pop
add
mov
dec
movsb
inc
hlt
cltd
or
jmp
dec
test
and
es
pusha
push
test
or
flds
dec
pop
xchg
push
xchg
and
push
ret
subl
or
pop
adc
je
or
push
dec
mov
and
fs
pop
inc
adc
and
cmp
test
or
cmpb
popf
icebp
and
adc
mov
dec
sub
jl
aam
xchg
js
jmp
mov
xor
pop
popa
mov
icebp
and
sbb
mov
jno
es
and
xor
or
dec
or
fcmovbe
repnz
dec
pop
cmp
jns
lret
rclb
fwait
sbb
ret
mov
inc
push
ret
dec
sub
addb
ret
xor
pop
sbb
pusha
inc
movsl
add
mov
call
popa
jg
xchg
movsb
push
out
mov
test
push
adc
jmp
subb
sub
fisttpl
movswl
pusha
add
popa
mov
mov
lret
sbb
ljmp
fcompl
call
sbb
push
sbb
mov
push
add
xchg
xchg
or
mov
push
in
pop
cmp
roll
sub
inc
mov
sbb
jle
jecxz
dec
lock
cltd
adc
cli
push
pusha
cmp
sbbl
ds
lcall
es
add
cmp
cmpsb
fisttpll
addb
adc
add
sarb
sub
inc
adc
push
aad
cmp
sarb
in
adc
insb
pop
push
icebp
fcomps
enter
xlat
dec
and
leave
loop
test
rcrl
sbb
lret
pop
jb
push
shlb
inc
xor
pusha
xchg
add
rcll
mov
add
cmc
jp
inc
inc
dec
sti
sub
fbstp
cs
pusha
and
adc
push
push
mov
push
mov
sub
mov
push
and
sub
aaa
mov
or
or
fimuls
lret
test
popa
mov
jmp
xor
pop
ja
stc
add
add
imul
sub
int3
cmc
vsubpd
push
clc
push
push
or
sbb
pop
add
incb
fisubrs
clc
pushf
push
lods
loope
call
and
fstps
mov
and
push
jno
add
int
movl
sbb
imul
push
add
inc
and
inc
adc
jge
sub
imul
or
roll
mov
clc
mov
and
add
ror
adc
pushf
push
pop
cmp
xor
lahf
mov
and
and
mov
adc
mov
jo
aad
push
adc
shl
lea
inc
add
mov
add
inc
dec
and
pop
aas
orb
xor
add
sub
imul
xor
mov
cwtl
loop
xor
std
lods
jo
inc
xor
fistpl
sub
jbe
push
shrb
jl
dec
pop
sbb
cltd
or
dec
add
cmp
lds
lahf
inc
xor
mov
rcll
pop
les
sbb
test
aas
jmp
lea
cmp
xor
call
xchg
rolb
outsb
sub
fs
daa
aam
sbbl
push
sub
sbbl
sbb
sbb
lret
inc
xchg
mov
loopne
push
mov
push
adc
lds
popa
mov
movsl
push
inc
mov
fisttpl
ljmp
ret
adc
sbb
sub
stos
sbb
cli
popa
mov
lret
fldenv
out
sub
sub
add
sbb
add
jmp
mov
sbb
leave
loopne
dec
push
jp
add
dec
add
pop
cmc
and
in
mov
jne
push
es
shlb
mov
aaa
shl
adc
xor
fcoms
mov
xor
daa
xchg
inc
push
pop
push
test
cmp
xor
push
mov
push
testb
cs
adc
incl
out
test
add
pusha
sbb
xorb
or
xchg
push
ret
push
ja
ja
mov
les
and
or
pop
adc
mov
xchg
addb
push
add
addr16
xchg
mov
inc
adc
andl
pop
imul
xchg
scas
cmc
or
test
or
mov
les
jle
dec
sbb
shlb
cli
add
ljmp
ss
add
incb
sbb
aad
ret
les
add
jmp
fwait
mov
mov
imul
ds
sub
movb
sbb
dec
mov
notl
outsl
sub
inc
inc
sbb
add
movsl
sbb
push
inc
sbb
xor
insl
adc
scas
pop
stc
jno
adc
imul
scas
movsl
adcb
or
icebp
sbbl
cwtl
insb
xchg
gs
pop
add
int
jle
movb
pop
or
and
cmpb
xchg
cmpsb
push
add
push
popf
insl
daa
fcomps
adc
popl
cmp
dec
xor
pop
rcrb
or
insb
pop
push
mov
mov
test
or
add
sub
and
aad
or
mov
sub
xor
test
mov
dec
jecxz
add
jle
mov
add
loope
xorb
sbb
les
mov
sbb
mov
popa
enter
or
xor
gs
sub
daa
add
mov
int
rclb
inc
xor
mov
fldl
jle
je
or
add
sti
pusha
mov
sub
out
mov
add
outsl
cltd
orb
lahf
into
popf
movsl
inc
adc
cmp
pusha
arpl
add
mov
lahf
push
stc
jg
popf
sub
shl
sbb
push
cld
ja
inc
adc
jnp
divb
lcall
pop
daa
inc
or
jnp
xchg
jp
movsb
jne
jge
mov
pop
ss
add
leave
test
cld
jl
pop
add
or
dec
adcl
in
adc
dec
push
and
sub
xchg
out
jl
fmull
and
jo
in
sub
push
nop
push
xor
test
add
lods
adc
jg
sbb
or
and
sbb
mov
sbb
cmp
es
adc
push
push
lds
add
shrl
outsl
pop
push
or
xor
sub
lods
sbb
cwtl
add
lock
push
pop
dec
push
cmp
movsl
jge
push
push
push
sbb
addb
fs
lods
sub
rol
push
push
dec
push
and
mov
add
lods
adc
adc
enter
add
pushf
clc
adc
mov
mov
xor
insl
push
inc
push
xchg
or
add
jne,pn
dec
mov
and
push
call
xor
and
mov
mov
ret
cmp
and
pop
jge
adc
add
or
cmp
out
jl
sbb
push
add
or
push
add
and
aam
jmp
push
add
pushl
clc
rorl
bound
shlb
jno
and
xchg
daa
fs
adc
mov
test
adc
and
stc
jmp
call
lahf
fbld
mov
int
das
add
xchg
fiaddl
test
cmp
mov
mov
roll
inc
pop
or
subl
ja
cmc
sub
icebp
sbb
and
es
and
pop
inc
sbb
adc
mov
nop
fildl
testl
or
stc
or
movl
adc
mov
mov
in
daa
or
imul
sbb
push
test
mov
rorl
lret
adc
inc
push
push
daa
pushf
in
popf
dec
push
roll
add
test
mov
pop
pop
cmp
push
or
mov
add
add
test
xchg
mov
or
cmp
pop
dec
push
jne
cmpsl
shrb
or
cmc
inc
mov
mov
stos
inc
test
mov
cwtl
jb
push
mov
scas
cmp
ficoml
dec
push
popa
rorl
int
cmp
rorb
mov
loope
push
orl
jnp
push
add
dec
pop
mov
push
adc
ja
push
shrl
jmp
and
mov
xor
add
imul
mov
fisubrl
mov
and
shrl
popa
mov
cmc
mov
fisttps
lods
and
mov
dec
add
je
cld
ds
icebp
sbb
add
sar
add
xchg
bound
and
add
hlt
and
inc
mov
lds
sahf
adc
and
or
sbb
or
test
jecxz
repz
dec
andb
out
inc
cld
sbb
push
pop
leave
adc
and
js
xorb
ljmp
cmp
lock
pop
inc
xor
fmuls
dec
cld
fiadds
xor
xor
adc
pushf
je
sbbb
int3
cwtl
sub
inc
xchg
in
aam
in
js
mov
mov
andb
xchg
jp
test
jae
dec
mov
clc
push
inc
or
mov
inc
popa
daa
add
pop
bnd
fcoms
in
bound
add
and
filds
or
pusha
mov
inc
pop
js
cmp
test
lea
add
out
aam
pusha
xor
push
outsb
incb
jae
jne
sub
mov
scas
mov
push
jp
cli
daa
in
sub
xor
pop
mov
and
inc
adcl
pusha
sbb
sbb
js
push
mov
mov
ds
leave
aad
lods
into
sbbb
add
sub
add
aad
mov
jmp
lahf
xor
cmp
xor
add
mov
popa
incb
addb
mov
jge
sbb
inc
js
gs
imul
test
popa
sbb
pop
push
insb
gs
jae
sub
arpl
je
pop
jle
mov
outsl
pushaw
lods
jb
fs
jbe
insb
cli
jo
in
jae
ja
shll
sbb
addr16
popa
cmc
imul
cmc
jne
or
mov
jo
jae
outsb
inc
push
push
dec
sub
jmp
js
push
inc
pop
fs
sbb
jnp
jns
or
cld
fisubl
add
inc
fbld
and
arpl
and
push
push
jo
jb
incl
bt
mov
xorl
mov
push
sbb
push
push
dec
sets
je
lods
movaps
add
sub
sub
mov
shll
mov
ja
cltd
push
cmp
daa
and
xchg
sbb
lret
and
out
xor
dec
and
negb
mov
stos
inc
ret
inc
lret
ljmp
and
outsl
and
mov
or
pop
add
jmp
dec
xor
leave
xchg
lds
mov
add
mov
lcall
aam
mov
sub
mov
inc
push
mov
dec
pop
scas
cmpsb
mov
in
and
push
inc
pop
and
in
and
or
inc
int
flds
fimull
xchg
and
nop
lret
fs
or
xchg
inc
sub
or
imulb
and
gs
push
and
loop
popf
lret
das
fcmovb
jl
inc
dec
xchg
insl
int
pop
mov
cmp
into
pop
inc
lds
add
enter
add
add
and
call
xchg
out
add
lds
cmpsl
pop
xor
sub
adc
add
punpckldq
outsl
daa
sbb
inc
lds
jp
pop
add
mov
rcll
and
insb
sahf
mov
inc
jmp
cmpsl
xchg
push
inc
push
gs
cld
lret
aas
jno
or
xchg
push
ficomps
sbb
movsb
cld
data16
add
jo
jge
or
enter
sub
mov
or
jne
and
dec
add
pop
sub
add
jl
je
inc
or
fisubs
ror
outsl
and
sbb
js
fisubrs
dec
js
cmpl
jp
fisttps
pusha
adc
movsb
sub
lods
add
jle
pop
sbb
sbb
cmpl
popf
out
test
sbb
add
sub
xchg
hlt
xor
dec
add
cmpl
add
and
push
pop
lods
popf
sahf
inc
pop
sar
xor
repz
mov
int
pop
and
fcompl
jno
ljmp
and
jle
xor
sbb
add
jno
fdivrl
sbb
adc
or
rolb
pop
sub
test
cmp
inc
loopne
aam
insb
lds
jecxz
push
push
pop
cmp
add
cmpsl
xor
jg
mov
cmp
and
inc
lods
pop
cltd
and
mov
sub
sbb
mov
sub
js
sbb
and
cli
sub
dec
mov
and
dec
je
pop
jp
sbb
add
jno
pushf
je
enter
fdivrl
push
jbe
and
mov
in
pop
jmp
push
inc
sub
enter
imul
cmpsb
std
nop
mov
adc
mov
add
in
int3
cmpsl
fwait
enter
popa
sbb
ret
shlb
cli
jg
cmpb
je
add
dec
loope
push
push
xor
out
hlt
cltd
cmp
add
lods
cmpsb
jmp
sub
sub
or
fcmovnbe
pop
inc
aad
ret
scas
xchg
rcrl
pop
mov
lahf
add
repnz
sub
daa
stc
fs
mov
cmp
fildl
test
sarb
inc
dec
aam
xchg
test
sub
movsl
and
pop
sub
xor
sbb
pop
jg
rorb
add
lods
pop
lods
in
cmp
add
sbb
mov
mov
sub
mov
mov
cmpsl
cmc
js
clc
mov
lret
cltd
add
sub
push
push
inc
in
addr16
insb
sub
or
jp
cwtl
push
and
subb
push
repz
or
add
mov
xor
push
subb
fstpt
gs
push
rclb
jb
and
add
inc
mov
add
stc
popf
cmpb
daa
divps
inc
cltd
in
int
pushf
fsubp
push
sbb
mov
sub
jne
shrb
out
push
cli
mov
pusha
popa
sub
not
pusha
adcl
jecxz,pn
xor
xor
in
lcall
loope
testb
push
mov
sub
lahf
sbb
aad
fcomps
jmp
or
fldenv
jns
mov
add
or
cwtl
call
fwait
xor
das
xor
xchg
ljmp
popa
pusha
xorb
or
cmp
filds
jle
loope
and
sub
fistps
cld
cmp
imul
aas
push
or
in
decl
adc
fsub
addb
in
mov
in
mov
inc
mov
lds
iret
adc
cmp
mov
popa
push
mov
mov
pop
sbb
dec
xchg
sbb
and
into
movsl
insl
ret
jns
xor
aaa
and
fildl
jmp
xchg
hlt
outsb
test
jae
add
filds
mov
add
cmp
sub
pop
enter
xchg
cmp
add
sbb
mov
les
pop
add
xor
arpl
add
or
in
sbb
ss
xchg
push
pop
jbe
adc
mov
bound
or
mov
and
inc
add
movsl
pop
sub
pop
loopne
inc
or
ja
jae
js
inc
mov
cmp
test
sub
adc
mov
int3
fbld
sbb
cmpsl
pop
lahf
inc
push
testl
subb
sarb
mov
cld
hlt
test
mov
inc
pop
sub
rorl
sahf
mov
jmp
insb
jae
mov
mov
loopne
cwtl
add
fnstcw
scas
clc
cld
shlb
jns
cmpsb
jl
and
jno
les
into
push
sti
aad
add
sahf
cltd
aam
or
add
or
inc
nop
lret
cmp
stos
test
aaa
add
cmp
fsubp
or
xorb
add
mov
mov
xchg
xchg
into
pop
fstps
push
inc
sbb
in
fcomps
push
sbb
xor
jle
xor
sub
popl
rorl
dec
add
subb
add
pusha
jnp
ja
cwtl
adc
mov
out
hlt
iret
jp
std
or
adc
pusha
jae
jbe
jb
inc
jo
mov
mov
in
jl
pusha
xor
lock
sbb
xor
loop
xor
outsl
mov
fistpll
bound
sub
or
ret
out
add
paddw
and
cltd
xchg
lret
sbb
cmp
mov
outsb
add
jg
xchg
das
lret
or
sarl
sbb
aas
add
loopne
and
inc
sbb
sbb
ljmp
sahf
jmp
int3
and
cli
imul
add
jmp
adcb
fs
fistpl
adc
sub
fxch
and
loop
add
imul
or
dec
fs
add
hlt
js
add
stos
nop
clc
jle
pop
xchg
xlat
je
push
faddl
xor
pop
sysexit
lahf
leave
js
jp
mov
mov
aam
add
out
lahf
add
testb
out
inc
into
xchg
xorb
add
push
cmpsb
ss
outsl
mov
sub
mov
into
mov
push
pop
loope
lahf
rcrl
adc
add
push
fdivrs
popf
add
lods
jbe
ljmp
mov
mov
cmpsl
out
jns
adc
ss
pop
add
ficomps
jb
mov
cwtl
outsb
mov
fistpll
leave
bound
and
fcomip
add
inc
testb
and
and
stos
add
xor
sbb
fmuls
stc
fnstcw
out
andb
outsb
nop
adc
aam
int3
pusha
ja
jl
stos
xchg
shrb
cmc
out
es
jecxz
in
pop
pop
inc
sub
and
xchg
or
cmp
icebp
les
aad
mov
add
fiadds
cli
insl
push
cmp
cmpsb
cvttps2pi
sub
mov
jg
lods
add
cmpsb
scas
mov
inc
sub
cmp
aad
add
or
sub
and
ffree
mov
sbb
mov
in
jbe
popf
or
jo
sarb
out
add
xchg
jo
xor
or
sub
jbe
mov
xchg
cmpsb
inc
cmp
sbb
inc
ficoms
cli
adc
add
lock
mov
xchg
sbb
out
loopne
jg
movsb
mov
lods
inc
popa
cwtl
add
lret
cmpsl
xchg
pop
cmp
pop
xchg
push
push
cmpsl
inc
inc
add
or
push
sbb
push
test
push
ljmp
inc
mov
sub
clc
lahf
cmp
inc
ds
add
mov
cmp
movsb
test
js
xor
or
lds
fldt
pop
push
and
add
jbe
cli
inc
cwtl
or
sbb
mov
fcomps
rclb
loope
lock
sbb
or
inc
mov
test
xchg
xor
je
nop
sub
repnz
mov
repz
and
ss
jae
ds
jecxz
add
pop
jno
add
gs
in
inc
push
xor
xlat
stos
test
add
ret
ja
sbb
rcr
stc
add
xchg
add
jle
dec
cmp
jbe
add
fsubrs
push
aas
stc
rclb
mov
push
adc
ds
mov
ss
icebp
pop
int
ja
xor
fdivl
fiadds
jbe
insl
adc
clc
push
xchg
sbb
pop
movsl
jns
ret
mov
sub
xlat
incb
sahf
imul
lahf
mov
add
cmpsb
orb
mov
mov
mov
sarb
mov
cld
and
add
lret
jo
add
push
mov
mov
popl
shrl
add
push
jp
dec
add
lock
scas
add
das
jmp
pop
leave
adc
js
push
into
cli
jmp
mov
fmuls
jnp
mov
mov
lret
xchg
xor
or
xchg
dec
cli
add
popa
push
jge
sbb
loope
xchg
add
ud0
insl
je
add
push
or
jb
inc
les
sub
xchg
call
rcr
mov
add
int3
into
daa
or
jge
imul
mov
add
and
inc
sbb
cmpsl
lods
clc
pop
shrb
push
nop
mov
add
fbld
add
mov
scas
add
stc
lcall
xor
aas
imul
pusha
jecxz
push
les
add
pusha
inc
std
loop
add
mov
sub
cld
dec
into
shlb
out
cmpsl
cmpsb
lock
mov
clc
jnp
test
dec
xchg
jl
jno
bound
insl
add
jmp
xchg
and
aas
cmp
arpl
inc
out
sbb
movsb
nop
fwait
and
into
aad
test
dec
pop
inc
mov
lods
sbbl
push
push
cmp
pop
add
add
inc
add
push
add
push
and
cmp
xchg
mov
addb
pop
sbb
xor
sbb
push
stos
iret
jbe
xchg
add
sbb
xchg
xorb
notl
mov
adc
cmpsb
xor
pop
sub
add
or
insb
mov
jl
pop
js
jns
xlat
pushw
add
xchg
mov
fcompl
xorl
xor
sbb
fwait
and
pop
dec
cmp
and
add
dec
add
test
pop
ret
cmc
dec
add
scas
ja
nop
outsb
hlt
in
mov
mov
divl
cmc
xchg
jnp
xor
mov
ret
outsb
fsub
mov
movsb
or
les
add
xchg
ss
test
inc
aas
push
sbb
nop
cwtl
popf
sub
pusha
pop
mov
lahf
mov
pop
add
jge
addr16
push
push
cmp
sub
adc
jge
jns
mov
xor
push
pop
mov
addb
sub
add
clc
pop
popa
add
repz
fdivrs
add
xor
add
inc
clc
jle
sub
cltd
in
add
ss
andl
cmp
or
sahf
add
roll
in
sbb
xor
jbe
and
pop
pop
aaa
nop
iret
lock
lret
push
sbb
dec
call
clc
push
or
mov
mov
loop
or
ret
ds
xchg
xor
fistl
mov
xor
lods
mov
mov
add
ljmp
add
xor
xchg
jae
inc
mov
lods
xchg
jbe
jo
js
add
scas
loopne
push
lldt
cmp
rclb
repz
cmp
fiaddl
pusha
cmpsl
cmp
repnz
mov
sbb
add
sbb
jnp
enter
add
mov
aas
cmpsl
add
pop
add
imul
outsl
sub
jmp
ror
mov
out
int
cmp
xchg
sbb
and
lock
pop
mov
fildll
cwtl
and
jnp
add
pop
imul
stos
cli
mov
js
xorb
test
xchg
or
xor
inc
or
fstl
push
or
mov
pop
cli
enter
mov
dec
fninit
sbbb
jno
lahf
cli
mov
mov
mov
add
push
adc
lahf
pop
daa
or
adc
pop
js
in
xor
or
dec
fsubrl
dec
std
add
fcoml
push
add
push
lahf
add
es
inc
test
push
loopne
test
pop
ja
loope
mov
test
xor
xor
and
std
cld
add
mov
sbb
push
lock
mov
mov
pusha
and
cmp
jecxz
dec
inc
icebp
add
mov
movsl
subl
mov
add
jnp
cmp
enter
js
jp
add
ret
pop
insb
stos
jbe
pushf
ja
loop
mov
incl
lret
jne
and
jns
addr16
negb
pop
and
mov
mov
loop
add
dec
push
dec
enter
cmovle
out
test
insl
ret
mov
scas
add
int3
ljmp
add
add
jnp
pop
mov
fs
out
scas
leave
push
sarb
std
repnz
cmp
pop
loope
outsb
pop
xchg
cmp
popa
add
cmp
subb
pop
lods
dec
push
sbb
xor
pushaw
add
nop
push
sbb
faddl
orb
xchg
and
adc
mov
arpl
stc
jbe
add
lods
mov
mov
scas
lret
xchg
out
push
cltd
int
sub
pop
xor
incb
xchg
xchg
lret
loop
mov
dec
mov
test
mov
jb
jg
add
mov
xchg
dec
or
lret
lahf
cmpsb
sub
addl
dec
mov
sbb
and
pop
fildll
jb
les
jmp
and
add
dec
add
add
pop
loope
or
dec
ljmp
mov
into
enter
inc
test
mov
adc
inc
test
call
ss
add
out
jb
lock
shrl
test
sbb
loopne
fiadds
stos
sbb
cmpsb
add
mov
lcall
add
stos
add
add
pop
mov
inc
inc
loope
rcll
adc
popa
and
add
int3
add
arpl
ret
inc
cmp
pop
xor
shll
mov
pop
rorb
lods
incb
pushf
sbb
push
xchg
add
push
sbb
sub
pop
rolb
mov
cltd
jmp
mov
sub
add
idivl
add
sbb
daa
stos
mov
sbb
mov
pop
popa
mov
ret
cli
sub
add
and
loopne
dec
cmp
add
mov
adc
das
jns
pop
xor
cmc
or
iret
jnp
inc
enter
fbld
xadd
cmpl
add
fildl
movl
push
or
negb
and
add
push
lcall
rcr
int
push
mov
sbb
push
dec
mov
adc
imul
add
jge
cmpsb
dec
add
or
pushf
fwait
push
push
cmc
dec
in
xor
popf
mov
xorb
stos
add
and
push
sub
push
mov
cmpsl
inc
add
test
add
shll
pusha
mov
loopne
xor
inc
inc
je
xchg
pause
push
fwait
jbe
lods
roll
dec
fcomps
mov
dec
loopne
dec
in
mov
xor
enter
jge
cld
insl
rcrb
or
scas
add
sub
pop
out
cmpb
in
add
test
loopne
dec
or
icebp
lods
daa
in
add
enter
shll
lret
mov
into
shrb
loope
inc
jle
pop
sbb
out
jno
nop
mov
lock
test
mov
fcom
push
add
jns
in
inc
fucomp
add
test
movsb
add
bound
pushw
inc
pop
test
lds
sbb
pop
jns
xchg
lods
dec
shlb
cmp
mov
fadd
test
add
stos
add
sub
aam
push
cmp
add
sahf
addl
ret
test
imul
mov
clc
pop
and
cmp
push
sahf
loop
aam
pop
out
cmp
movsl
or
aaa
pop
push
sbb
fstps
or
sub
rcrb
cltd
nop
mov
add
sub
out
stc
add
jbe
stos
add
int
push
cmp
popf
in
dec
pop
clc
inc
jp
fwait
cmp
and
std
add
out
inc
or
adc
xchg
andb
lock
test
mov
adc
rcll
test
test
and
cmp
and
xchg
xor
add
shrb
add
stos
sahf
les
fbstp
repnz
in
jmp
sbb
clc
outsb
pop
lcall
sbbl
repnz
push
add
pop
test
lods
jg
shrb
scas
lods
inc
mov
xor
lcall
sub
add
jbe
idivb
add
in
add
jns
pushf
ss
fprem
jo
adc
outsb
out
dec
es
sti
xchg
xchg
mov
push
jp
fiaddl
push
dec
jg
mov
mov
mov
and
clc
adc
aaa
bsf
add
inc
cmpb
push
sub
addl
pop
cmpsl
jmp
clc
xchg
je
ret
out
add
fistps
aad
sti
fisubrl
add
imul
movsb
pop
dec
add
cmc
cmp
mov
pusha
gs
xchg
cld
push
sbb
or
adc
cmpsb
push
pop
popa
in
addr16
scas
mov
insl
pop
push
add
add
scas
or
adc
cmp
stos
push
test
gs
dec
and
push
pop
fsubl
into
add
mov
movlps
mov
jae
mov
or
out
cwtl
push
push
sub
jmp
pop
jp
imul
shlb
lock
add
xchg
pop
incb
inc
js
add
add
cmpsb
jae
mov
xchg
adc
push
addb
jl
add
hlt
sbb
and
push
cli
movsb
fsts
add
adc
xchg
pop
mov
jge
lcall
in
pop
sahf
jecxz
push
xchg
sti
orb
test
dec
add
outsl
push
aaa
lahf
fcmovbe
add
lods
call
mov
pop
pop
shll
cwtl
and
fildll
jnp
lock
iret
call
loope
inc
pusha
pop
rcrb
mov
aam
jbe
iret
repz
repnz
adc
fadd
add
pop
sbb
sbb
inc
in
and
add
push
sub
jae
xlat
add
sbb
add
mov
lock
push
add
push
cmp
sub
mov
and
imul
xchg
stc
sub
adc
pop
push
ret
pop
js
xor
dec
xchg
das
rcr
mov
call
jns
dec
addl
and
adc
add
aad
inc
xorps
aas
xor
sbbb
test
xchg
imul
push
jno
add
sub
neg
mov
mov
pop
nop
sbb
sbbb
les
sub
fwait
xor
pop
ficomps
fcompl
mov
cmc
fistpl
xor
dec
mov
adc
fnstenv
add
push
jmp
pop
xchg
push
je
fidivrl
jp
sbb
mov
test
dec
mov
xor
sub
cmp
push
dec
int3
jno
mov
in
xchg
pushf
and
and
sub
adc
sub
and
mov
add
xchg
daa
sub
adc
dec
inc
push
mov
cmp
fcmovbe
add
xor
fwait
loope
push
inc
sti
leave
inc
sbb
std
cmp
mov
loopne
add
xor
fcomps
clc
or
outsl
in
aad
sbb
out
mov
add
movsb
lahf
loop
ss
div
inc
inc
jl
add
push
ja
mov
lods
fwait
xlat
and
mov
add
adc
mov
out
adc
bound
inc
xchg
sub
das
jecxz
cmp
stc
out
add
jns
cmp
lods
adc
or
or
pusha
cmp
es
add
sbb
sbbb
jmp
add
and
cmp
mov
pop
cmpsb
call
inc
enter
scas
add
loop
sarb
lret
sub
das
mov
add
xlat
mov
jno
mov
jo
cld
sub
add
iret
insb
mov
loopne
or
test
inc
xchg
xchg
fstpl
loope
and
xchg
mov
push
aas
xor
add
add
jg
xchg
lock
mov
in
repnz
push
shlb
and
loope
push
push
aad
xlat
movsb
inc
jbe
pop
add
in
mulb
pop
sub
cmpxchg
pop
shl
pusha
fsubr
pop
jecxz
jle
adc
inc
sub
add
add
cmpl
in
xlat
mov
fsubp
pop
bound
inc
dec
add
adc
hlt
aaa
insb
or
call
jecxz
scas
pop
or
xchg
push
adc
pop
into
les
or
pop
add
or
lock
loop
movsb
mov
mov
xor
add
xchg
and
lock
add
cmp
out
flds
inc
adc
sbbb
cmp
scas
in
add
jo
xor
sbb
jno
cltd
popf
jno
add
pop
test
and
add
rcl
push
shlb
test
in
jno
add
cmovno
pop
in
jae
andb
add
out
cmp
repnz
pop
sbb
data16
push
jecxz
cmpsl
add
idivb
xchg
jge
cli
repnz
push
cmp
xor
lea
mov
add
cwtl
icebp
mov
mov
add
fs
hlt
fcmovb
mov
mov
lods
out
fcomp
popf
add
pushl
int
add
sbb
cmpsb
shlb
rcrl
add
lds
or
dec
ljmp
imul
xchg
bound
or
inc
adc
je
jl
pop
or
clc
mov
push
insl
sub
pop
jg
add
push
data16
add
sti
mov
fistpl
jge
add
pop
aad
out
inc
sbb
addb
sub
cmp
mov
es
mov
popa
lret
pop
rolb
push
cmp
add
dec
divb
sbb
mov
adcb
fildl
xchg
dec
mov
add
pusha
nop
int
outsl
or
xchg
xchg
nop
insb
aaa
mov
les
lods
jmp
lcall
add
push
push
sbb
push
jb
rorb
fstpl
push
inc
mov
cmpsb
stos
testl
std
fstpt
rolb
mov
jle
push
in
mov
int
mov
inc
mov
sub
add
data16
cltd
movsb
pop
add
push
sbb
mov
or
mov
xchg
push
nop
xor
jne
push
mov
dec
cmp
cmc
imul
shll
cmp
stc
lret
pop
mov
inc
mov
inc
dec
sbb
or
mov
ficompl
jle
popf
movhps
jbe
cwtl
sbb
xorb
sbb
jno
fstl
scas
sbb
icebp
in
add
inc
add
cmp
mov
push
add
adc
cld
pop
xchg
cs
in
push
dec
sub
cmp
inc
inc
cmp
cmp
dec
fcmovnu
mov
stc
and
adcb
pop
in
setne
pop
test
nop
clc
xchg
lret
add
push
rorl
addl
pusha
leave
jb
ret
lods
push
daa
mov
cmp
ljmp
cld
add
lock
int3
loopne
adc
pop
jmp
mov
pand
rol
cmpsb
xor
fwait
cmpsl
and
gs
sub
stos
movsl
in
loope
es
add
les
add
nop
and
push
cmp
clc
xor
mov
push
sub
sbb
sti
sub
push
jp
scas
int3
insl
mov
xor
es
stc
rsm
in
and
adc
ds
repnz
or
push
imul
movsl
sbb
add
adc
add
mov
sahf
call
arpl
add
aam
or
dec
hlt
sbb
push
sub
mov
jno
fidivrs
jp
jne
mov
movsb
fdivrl
adc
clc
stos
paddusw
mov
pusha
je
inc
ja
xor
and
jge
roll
out
jo
mov
shll
fldt
or
push
imul
cld
dec
add
leave
sahf
lret
pop
add
fcom
and
dec
addb
inc
cmp
cmp
in
movb
jae
arpl
jl
add
jno
fs
xor
push
push
shlb
adc
dec
aas
jmp
dec
mov
lcall
add
jle
jne
xchg
cld
lcall
add
ret
xor
add
nop
sub
and
cli
or
fdivrl
addb
or
add
and
sti
aas
jl
add
push
xlat
jne
jmp
ja
mov
je
and
stos
ret
pop
cmp
adc
dec
mov
in
sbb
or
mov
les
icebp
dec
inc
lcall
and
and
aam
xlat
adc
mov
or
inc
xlat
ret
test
pusha
aam
mov
or
nop
mov
fwait
inc
lock
lea
push
in
adc
jns
aam
sti
jae
loopne
mov
add
lcall
and
sti
inc
push
cmp
inc
dec
test
lret
cmp
aaa
add
or
sub
dec
adc
mov
mov
enter
or
and
add
cmp
pop
push
jns
pushf
add
lea
add
jmp
insl
jo
xor
pop
rclb
mov
rolb
stc
or
jmp
add
pusha
and
js
xchg
loop
out
std
loopne
movsl
cmp
je
loopne
mov
adc
pop
subl
pop
xor
pop
pop
push
in
insl
mov
inc
add
int3
pcmpgtb
cmp
movups
int3
dec
sub
mov
fadd
inc
add
dec
subl
add
xchg
sub
cmc
mov
mov
lea
add
push
mov
add
xchg
add
outsl
xchg
aam
test
clc
jle
into
insb
lock
scas
add
mov
verw
and
add
outsl
jno
movsb
out
loop
sub
popa
movsl
push
mov
in
sub
into
shl
jo
jbe
loopne
scas
inc
add
inc
movsb
cwtl
mov
dec
mov
inc
push
or
pop
add
dec
lea
pusha
mov
xchg
ja
dec
addr16
add
int3
jo
lods
pop
adc
subb
push
pop
pop
jecxz
push
into
and
loopne
add
mov
das
fcomp
loopne
jne
or
mov
subb
sbb
cmp
pop
add
es
pop
fiadds
pop
test
in
mov
add
push
sub
cmpsb
test
test
cld
sbb
xor
addb
outsb
mov
lods
add
aaa
in
test
jg
jb
dec
andb
pop
ss
xchg
add
rcrl
add
xchg
adc
and
jge
add
mov
cld
jle
push
lea
aam
out
add
repnz
push
pop
bswap
loopne
mov
das
lahf
fs
add
call
jmp
xor
in
lock
pop
and
push
push
shr
inc
orb
add
repz
add
xor
je
cmove
outsl
dec
ret
mov
adc
xchg
mov
nop
add
jp
xlat
add
ret
inc
adc
in
nop
mov
sub
and
jnp
cs
lahf
sbb
add
push
xchg
cmp
push
sbb
inc
cmp
pop
cmp
push
cwtl
idiv
pop
icebp
and
pop
adc
cmp
jns
mov
mov
pop
push
mov
add
shll
jb
inc
lock
push
jb
add
dec
inc
add
mov
lcall
adc
cmp
outsl
jae
test
mov
push
push
sbb
sub
add
adc
push
dec
mov
cmpsb
aas
out
pop
add
pop
ds
pop
fidivrl
pop
adc
inc
mov
subb
insb
adc
push
stc
rorb
inc
xchg
add
push
jge
out
add
pand
insl
imul
insb
cmp
push
xchg
les
clc
push
mov
out
fildl
xchg
ficompl
sub
and
outsb
jb
lahf
sbb
js
add
jp
es
cltd
repnz
add
or
add
mov
add
insl
mov
adc
faddp
and
lret
dec
jae
nop
and
inc
xor
cmp
mov
cmpsl
sbb
std
xchg
and
add
and
add
faddl
into
push
dec
movsb
js
sbb
jle
out
sahf
mov
ja
pop
or
cli
fiadds
cmp
lds
pop
lea
roll
aaa
mov
test
sub
js
cwtl
cmp
xchg
rcl
sbb
push
or
mov
sti
or
add
hlt
xchg
jge
add
push
pushf
xchg
inc
fwait
mov
filds
pop
pop
add
rcrl
popf
and
mov
and
cmp
dec
jnp
sbb
ficoms
int
les
add
js
and
hlt
sti
add
shrl
add
xlat
inc
pop
add
pusha
testl
cli
xor
or
stos
add
leave
and
pusha
orb
addl
dec
sub
mov
ds
jg
add
mov
lcall
jge
jp
mov
jmp
dec
pop
adc
arpl
cwtl
stc
sub
push
dec
add
adc
add
mov
aaa
js
je
sub
lahf
push
setbe
loopne
inc
faddp
inc
mov
lock
adc
stc
xchg
jne
ret
lock
add
pop
test
pop
fisttpll
dec
bound
xchg
and
add
hlt
sub
idiv
add
add
and
int3
ja
xchg
jns
sub
inc
mov
add
sahf
jg
popf
lock
arpl
nop
adcb
in
mov
mov
mov
inc
mov
xor
nop
repnz
cs
mov
inc
insb
adc
inc
add
or
sti
addb
cmp
inc
mov
sbb
pop
pop
nop
es
jne
scas
mov
sbb
in
add
test
pusha
ljmp
pop
mov
cmovge
sub
jb
hlt
xor
mov
testl
and
mov
jae
and
dec
add
mov
rcrb
pop
add
pop
xchg
jb
dec
fsub
outsl
adc
push
ds
jbe
xchg
call
movsb
sub
cmc
add
cmpsb
pop
cmp
add
lahf
int
xchg
xchg
push
ret
mov
xchg
mov
clc
add
push
jp
rolb
and
test
mov
stos
cwtl
jo
fisttps
imul
testb
add
lods
cmp
inc
push
call
lds
movsl
pop
xchg
aam
xchg
cmp
add
dec
xchg
jmp
add
mov
pop
and
je
movsb
dec
fdivrl
push
aaa
pushf
pop
or
and
lret
mov
lock
or
clc
inc
dec
cli
mov
in
add
loopne
and
add
push
or
fucomi
add
ss
jne
dec
ds
lret
repz
rorl
rolb
xor
lahf
mov
in
cs
movsb
mov
sub
bound
cli
adc
cmp
lcall
leave
xchg
cld
neg
dec
pop
shl
daa
jne
or
mov
sbb
js
xchg
push
das
mov
xchg
pusha
test
nop
sub
sahf
scas
mov
mov
enter
gs
xlat
pusha
addr16
add
pushf
and
add
add
jecxz
mov
add
cmp
loope
fistpll
icebp
jmp
pop
jno
lods
dec
push
xchg
pusha
mov
add
add
ds
mov
adc
pop
rclb
add
call
je
out
cmp
btc
sbb
imul
adc
xor
cmpsl
pop
dec
mov
insb
add
or
adc
fbstp
jne
shlb
mov
add
fsts
outsl
jg
xchg
cs
and
pop
ss
popa
nop
sbb
pushl
imul
xchg
push
xor
imulb
popf
sbb
mov
pop
sub
sub
or
mov
sbbb
jo
add
insl
test
push
hlt
aas
add
cmp
roll
jne
in
cltd
add
nop
shlb
or
jbe
mov
faddl
sub
xor
shll
push
add
hlt
fimuls
mov
sbb
movsb
idivb
add
and
xchg
cli
mov
addb
fs
pop
jns
mov
add
mov
cmp
jae
dec
dec
jo
inc
in
add
out
je
cmp
test
dec
sbbb
xchg
add
push
arpl
imul
lret
pop
setbe
aam
or
mov
in
adc
add
mov
loopne
pop
mov
out
adc
cmp
push
loopne
fistl
push
lret
cmp
addr16
push
pop
push
jbe
dec
xchg
pusha
dec
xchg
or
movsb
jno
add
and
sbb
shll
jl
inc
add
sbb
xchg
in
out
pop
mov
dec
shll
xor
xor
jp
add
adc
push
fiaddl
testl
jmp
jmp
mov
ds
push
xor
inc
cmpsb
loope
pop
xorl
mov
adc
add
movsl
add
test
lods
add
loopne
in
das
dec
mov
leave
push
add
dec
dec
jp
mov
cli
and
lock
leave
add
in
pushf
shld
loope
or
lock
bound
mov
or
add
adc
and
xlat
jb
inc
pusha
dec
push
jne
adc
xchg
mov
adc
and
loopne
add
pop
cmpsb
lcall
xchg
add
loope
insl
mov
sub
shlb
nop
sbb
fistpll
add
test
dec
mov
int
push
sub
int3
mov
rclb
jns
repz
inc
xchg
push
mov
cmpsb
sarl
add
xchg
shr
in
adc
or
add
push
cmp
sbb
jp
jne
jl
pop
in
mov
add
stos
das
lret
push
xchg
pusha
bound
and
mov
mov
insb
push
adc
es
add
cmp
in
mov
dec
xor
xor
adc
movsb
or
add
push
or
nop
imul
ret
nop
add
inc
cmp
sarb
inc
adc
dec
add
jg
aam
faddl
add
dec
xchg
and
fwait
es
push
mov
xchg
or
ficoml
daa
add
inc
cmp
les
pop
repnz
add
cmp
push
add
sbb
add
enter
mov
daa
repnz
ds
add
call
push
cwtl
cmp
mov
xchg
outsl
inc
sbb
sub
addr16
cli
mov
jae
dec
push
add
fdivs
nop
imul
pop
pop
jmp
add
es
adc
sub
cmpb
inc
push
jo
inc
add
shlb
pusha
insl
xchg
add
mov
add
add
add
pop
add
hlt
jp
cmpsb
sub
mov
sub
arpl
or
mov
cmp
pop
add
add
lahf
and
jb
sub
test
jb
fnstsw
movntps
pop
popa
pusha
imul
push
js
and
pop
mov
dec
mov
popf
add
ret
stos
js
cld
dec
push
or
push
inc
ja
gs
sahf
pop
jle
cmp
inc
add
and
jmp
popa
rolb
jnp
pop
cli
setl
mov
out
or
inc
xchg
jns
cld
xor
test
xchg
popa
sub
cwtl
jge
dec
cmp
andl
or
std
pop
add
adc
jno
sbb
and
pop
mov
scas
jecxz
not
xchg
loopne
xor
incb
lock
dec
es
cmp
pop
test
mov
stos
inc
pop
test
out
lock
pop
add
jo
test
dec
fdivr
pushf
mov
andb
jg
ljmp
lcall
inc
sbb
daa
cwtl
popa
mov
add
xacquire
cmp
lods
out
dec
jmp
jae
add
loopne
dec
cmp
das
adc
arpl
lret
add
jg
and
stos
enter
stos
push
test
mov
in
mov
sbb
jne
add
and
add
push
jo
add
ljmp
dec
aam
mov
aas
cld
pop
andb
imul
xchg
clc
adc
rcrb
addr16
pop
sub
pop
stos
aas
pop
xor
cld
add
iret
dec
add
pushf
rorb
pop
xor
loop
mov
js
adc
test
and
inc
push
popf
add
xorl
or
inc
mov
mov
add
fisubs
pop
sbb
and
xchg
jbe
inc
sar
pop
movsb
dec
add
push
lods
pusha
xor
add
mov
pop
jns
rcr
push
and
pushf
lret
jne
add
or
push
test
rcrl
incb
jbe
loopne
aas
cmp
jno
lea
lret
inc
cli
and
or
insb
mov
daa
out
add
outsb
adc
add
pop
add
ja
movsl
or
add
fistl
rolb
negl
sub
pop
mov
loopne
or
jo
cwtl
out
push
add
dec
imul
pop
cltd
popa
shl
clc
dec
mov
add
idivl
sbb
cwtl
loop
jmp
add
data16
jbe
addl
fdivrl
sti
loopne
popa
das
add
ret
test
inc
mov
js
inc
or
add
sub
and
outsl
cmp
in
add
jbe
cmp
dec
in
adc
hlt
movsl
add
es
out
xor
adc
adc
ja
push
add
sbb
gs
add
or
add
push
cmp
repnz
xor
incb
lret
inc
fnsave
enter
add
sub
repnz
push
int
sub
jnp
enter
fadds
push
das
or
or
push
js
fdivp
add
adc
hlt
cld
daa
xchg
movsl
jb
or
mov
sbb
mov
imul
sbb
mov
lods
or
mov
inc
add
arpl
clc
cltd
add
sbb
pusha
xor
inc
ror
or
mov
out
fistpl
lds
xchg
hlt
pop
push
add
xlat
shll
or
mov
or
push
cwtl
enter
push
lahf
hlt
rcrb
cmpsl
xor
rolb
xor
lock
dec
clc
jle
and
jge
pop
and
aas
std
push
arpl
add
stos
jle
movsl
call
out
fildl
ret
rcr
mov
sbb
mov
xor
dec
and
ficomps
in
mov
mov
inc
inc
jl
mov
xchg
xchg
cld
dec
inc
add
lods
je
rcrb
insb
cmpsb
add
or
rclb
aas
add
icebp
jae
push
dec
daa
jb
sti
xor
jp
bound
inc
mov
sbb
push
add
js
cwtl
sub
push
test
xchg
sbb
and
stos
sub
inc
mov
sahf
adc
inc
shlb
subl
mov
mov
scas
daa
cmp
xchg
lock
cmpsb
dec
enter
test
lret
cmp
add
lret
adc
es
sbbl
out
pushf
add
mov
xchg
inc
adc
pusha
mov
add
add
enter
add
mov
dec
pop
in
iret
push
xchg
sub
loope
gs
mov
stos
mov
lret
dec
and
sub
movsl
xor
add
jecxz
dec
pushf
and
add
add
bound
nop
mov
dec
clc
mov
mov
xchg
pop
dec
mov
add
add
cmp
lods
add
hlt
mov
cmpsl
push
incl
insl
sub
out
jo
repnz
dec
shrl
dec
and
movsb
mov
pop
clc
fistpl
dec
jae
add
js
outsb
lea
pop
inc
andl
jae
mov
aad
and
aaa
sub
add
mov
adc
ja
add
xor
lret
mov
mov
cli
cld
add
rcrb
pop
mov
xorl
je
stc
mov
fwait
pusha
jo
bound
add
shr
jmp
mov
lcall
jbe,pt
shlb
in
gs
sub
movsb
pop
iret
inc
mov
inc
aaa
pop
dec
sbbl
cwtl
mov
add
jecxz
mov
fnstenv
mov
fiaddl
jge
mov
add
xchg
aad
dec
in
pusha
jne
cmp
inc
xchg
leave
inc
inc
loopne
lods
scas
ret
hlt
aaa
ljmp
push
xchg
xor
nop
dec
add
out
push
and
iret
insb
loop
xchg
pop
dec
call
jp
push
insb
sub
add
mov
rclb
add
jne
add
insl
or
int3
mov
add
dec
rcrl
add
mov
add
movsl
out
add
inc
sub
and
mov
arpl
popf
cmpsl
add
pop
pop
leave
cmp
xchg
fcoms
call
or
test
inc
pusha
pop
dec
or
repz
lock
nop
cmp
jne
jno
sub
add
jg
xor
push
jmp
shll
subl
popf
mov
mov
fneni(8087
add
sub
hlt
and
or
cld
xchg
add
lret
jne
sbb
adcl
mov
jle
jle
movsl
add
jge
push
xchg
add
push
add
pop
mov
scas
ss
call
sub
add
cmpsl
xor
fs
sbb
push
xchg
popa
add
adc
filds
testl
or
rcr
mov
dec
sbbb
sub
in
xor
cmp
bound
xor
js
and
inc
xchg
add
test
and
sbb
int3
add
dec
add
sub
and
pop
push
add
sbb
addb
jb
xchg
shr
jbe
or
sbb
out
and
add
mov
fistl
sub
loope
test
push
repnz
xor
mov
add
jns
scas
es
out
or
and
int
adcl
hlt
pop
dec
add
add
xor
add
xchg
push
xrelease
mov
sub
bound
ret
inc
add
js
xor
pop
fidivl
and
popf
lcall
mov
shlb
outsb
inc
pop
adc
jb
cld
cmc
add
jmp
cmp
lahf
lods
sub
inc
imul
dec
es
add
pop
lret
adc
into
cld
js
add
fnstcw
subl
add
sbb
scas
and
ljmp
nop
xchg
xchg
mov
push
ret
add
fmuls
lret
mov
cwtl
add
mov
jp
inc
loop
xchg
sbb
cmp
xor
mov
js
xor
mov
into
mov
fs
fildl
fimuls
inc
pushl
ja
and
test
test
loopne
and
jle
cmc
outsb
sbb
cmpb
add
sub
shl
push
lret
add
lock
pop
mov
mov
jo
sbb
mov
fisttps
push
mov
cltd
mov
push
pop
in
je
mov
daa
inc
mov
imulb
popa
push
pusha
test
in
or
inc
sub
dec
mov
rol
sbb
ficoml
lods
sbb
bound
add
std
xor
lret
cmp
sbb
fildll
out
xor
hlt
das
dec
jb
lods
adc
loopne
daa
loop
push
fmull
cmpsl
cs
add
add
and
and
jne
sbb
sbb
andb
testb
js
in
movsb
hlt
int3
add
push
test
imul
jmp
push
addb
xlat
xchg
ljmp
fistpl
int
add
fsubl
mov
xchg
jl
push
add
mov
and
sbb
sbb
leave
repz
js
loope
pop
push
inc
pushf
dec
inc
sbb
pop
clc
mov
lahf
aam
aad
stc
xchg
jo
test
add
outsl
and
in
outsb
pop
push
mov
pusha
add
sub
ja
cld
fsubrs
add
dec
fdivrp
jo
or
dec
mov
jne,pn
jae
sbb
add
pop
mov
adc
lock
xor
je
add
mov
xor
pop
add
sbb
inc
rorb
lods
imul
xrelease
mov
pop
mov
out
frstor
fsub
lds
pushf
push
idivl
sarb
outsl
or
int3
push
call
repnz
and
xor
rcll
xor
add
and
hlt
pop
jo
pop
push
ret
js
mov
adc
pusha
in
sbb
mov
inc
cld
insl
cmp
sbb
or
fs
adcb
adc
filds
mov
pop
lret
data16
adc
idivb
cmpb
fs
test
test
dec
mov
iret
adc
popa
std
add
aam
rolb
adc
mov
push
sbb
or
icebp
test
xchg
mov
sti
add
mov
add
mov
xor
mov
adc
test
sbb
and
in
lret
or
mov
das
adc
lahf
pop
pusha
pop
cmp
add
int3
dec
mov
stc
iret
push
stc
nop
add
or
andb
dec
repz
outsb
mov
add
or
xchg
cmp
jns
add
andb
clc
fwait
sbb
add
fs
push
sub
or
add
inc
call
cmp
shll
stos
add
in
out
mov
and
xor
mov
pop
fiadds
gs
cmp
hlt
and
pushf
push
xor
fcoms
lcall
mov
rcrl
scas
or
das
fcomps
mov
int
leave
shlb
mov
push
add
jg
movsb
es
sub
out
xchg
fisubs
in
lea
in
pop
in
nop
pop
inc
andb
out
push
push
mov
and
sti
ja
add
cmpsl
shl
call
xchg
or
cmpsb
xor
das
pop
xchg
sahf
outsl
jno
add
es
mov
bound
loopne
pop
or
mov
dec
sub
cmp
xchg
sbb
or
jno
incb
pop
jg
xor
or
jno
int3
adc
inc
mov
rcrb
filds
jns
sub
jp
or
sub
and
popf
jo
xchg
add
push
add
cmp
push
ds
roll
mov
daa
scas
add
cmp
push
loopne
ret
adc
or
call
add
add
adc
call
je
push
sarb
mov
add
push
mov
sbb
rorb
je
jmp
test
adc
cs
faddl
mov
pop
add
lahf
enter
movsb
cwtl
sbb
movsl
ficompl
sbbl
mov
dec
loopne
sub
loope
out
jle
xchg
fadds
xchg
outsl
mov
pop
ficoms
lock
lcall
and
test
addb
jbe
aas
lds
mov
or
in
pop
mov
outsl
stos
jle
out
fnstsw
add
xchg
ret
pusha
hlt
dec
roll
imul
add
addb
adcl
sbb
inc
clc
call
sbb
adc
add
mov
add
div
mov
xor
push
int3
or
dec
sbb
lcall
sbbl
sub
or
out
ja
xor
add
lock
gs
and
shl
ret
add
xchg
pop
mov
nop
cltd
sub
jne
add
leave
ret
sahf
aam
lcall
and
mov
jmp
inc
and
lret
mov
loop
add
jo
inc
test
and
ljmp
jno
addl
popf
insb
mov
mov
add
ljmp
test
ss
daa
nop
call
jl
lcall
jb
pop
dec
inc
jo
dec
add
mov
mov
or
stos
mov
push
aaa
ja
xchg
mov
hlt
js
clc
add
jle
aad
leave
aam
mov
inc
cmp
push
sbb
insl
xchg
xlat
or
mov
and
ret
fwait
inc
jo
cmp
mov
cli
xor
jno
fucom
test
add
dec
xor
jmp
push
dec
nop
lds
cld
loop
fcmovnbe
add
adc
dec
movl
jmp
dec
pop
mov
lds
nop
push
cmp
pop
popf
rcrb
imul
push
mov
sbb
cmp
fildl
sub
pop
cmc
imul
js
daa
in
jp
cwtl
aam
jge
hlt
sbb
je
scas
rolb
insl
aam
dec
cwtl
mov
call
pop
test
xchg
fadds
xor
push
jbe
dec
add
sbb
loope
ret
imul
stos
inc
add
add
push
jb
cwtl
scas
and
rolb
pop
push
dec
mov
loop
nop
push
lock
add
jbe
inc
cmp
adc
int3
adc
into
fadds
clc
jle
addb
hlt
or
hlt
repnz
call
and
clc
jbe
shlb
or
xor
test
jle
je
add
inc
jge
inc
jno
cmpb
pop
add
repz
add
enter
pop
lock
lahf
mov
scas
xor
jb
add
ss
mov
lahf
inc
in
or
mov
pop
push
jp
jb
cmp
loop
loopne
mov
add
add
imul
mov
mov
ret
and
xor
out
inc
xor
cmc
and
mov
js
inc
les
mov
and
popl
xlat
inc
arpl
push
or
sbb
bt
hlt
bound
or
add
mov
mov
ret
fxch
pusha
cmp
add
es
dec
sub
pop
in
loopne
out
add
sti
mov
jge
add
gs
sub
clc
loop
nop
rol
xor
add
lea
cmp
jo
push
mov
enter
mov
insl
pusha
add
decb
call
int
jecxz
lods
push
pop
fwait
push
cmp
int3
subl
mov
xchg
adc
sub
or
aam
add
push
daa
add
lock
cmp
aam
xchg
rclb
jnp
sub
add
out
add
sbb
shl
jo
scas
or
into
push
pusha
push
xchg
adcb
add
out
rcll
pop
popf
jno
push
mov
cld
sarl
loop
sub
shlb
out
js
loopne
cwtl
stos
pop
dec
fs
mov
mov
jbe
cs
inc
faddl
ficomps
lahf
rcrb
adc
xchg
repz
fisttps
and
sbb
mov
jae
fisttps
mov
inc
add
cmp
add
repnz
mov
test
adc
xchg
nop
sub
nop
inc
push
jl
sbb
mov
add
xchg
pusha
xor
xor
mov
das
jb
and
cmp
xlat
xchg
jns
stos
lock
pop
add
movsb
or
out
gs
jle
fs
out
and
cmpsl
fstps
cmp
sub
mov
jg
jnp
push
test
adc
in
daa
das
ret
addl
jo
or
lcall
aas
mov
int3
es
and
or
ja
in
push
ret
jmp
or
in
cld
adc
daa
adc
jmp
inc
mov
add
in
mov
popa
mov
pop
mov
test
lds
int
add
ja
fidivrl
inc
pusha
int3
je
add
push
add
add
dec
xor
pop
xlat
movsb
and
or
fbstp
mov
push
in
add
mov
pushf
into
inc
es
lahf
or
dec
clc
cwtl
daa
mov
mov
test
push
cmp
and
fsubrl
das
dec
push
data16
dec
add
insb
loop
lcall
in
mov
pushf
in
popf
adc
das
sarl
mov
jne
inc
mov
push
xchg
or
pop
and
js
addr16
sbbb
pop
imul
or
outsl
rcll
inc
mov
add
dec
iret
xchg
cmp
movsb
or
push
int3
push
lods
xor
int3
insl
add
mov
lock
loopne
jae
push
cld
movsb
in
loop
jecxz
or
nop
adc
jp
in
lods
test
mov
cmpb
add
pusha
inc
cmpsl
pusha
jl
dec
shr
xchg
pusha
xchg
adc
in
and
out
loop
jmp
mov
mov
pop
sbb
cmp
pop
xchg
lods
add
or
pusha
call
js
mov
fs
scas
lds
mov
sahf
push
push
std
rcrb
movsl
adc
xor
or
decl
mov
cmp
adcb
fildl
push
std
and
inc
mov
add
pop
dec
test
and
cld
jle
scas
int
xchg
push
aam
xor
pop
cmp
dec
or
aas
cmp
lods
dec
sbb
pop
and
pushf
pop
test
pusha
outsb
loopne
dec
data16
int
mov
mov
ret
sub
xor
or
jg
inc
lock
add
mov
daa
fs
icebp
lods
cmp
push
shrb
and
jg
out
xchg
and
sub
lock
adc
xor
add
and
push
inc
mov
cltd
scas
adc
js
cmp
sub
pop
or
jle
push
jge
mov
cmpsb
mov
repz
mov
adc
sbb
push
ret
lds
add
fbstp
addb
adc
inc
movsb
call
xchg
adcb
stc
andl
aas
adc
ret
test
add
xchg
cli
loopne
mov
mov
mov
pushf
pop
push
scas
sub
push
pusha
clc
dec
pop
shrl
jbe
ljmp
push
cmp
cld
xor
lret
call
and
xor
sub
add
xchg
adc
outsb
xchg
and
push
fs
outsl
shrb
add
ss
movsl
jmp
push
mov
sub
fwait
rolb
fs
push
sub
jl
in
add
inc
lds
scas
add
js
mov
adc
insl
mov
nop
mov
add
cmpsb
jnp
add
pop
push
ret
lret
adc
cmp
hlt
sub
xchg
or
sbb
clc
adc
rol
mov
or
xor
cld
cmpsl
movl
mov
cmp
xlat
add
cmp
cmp
cmp
je
pop
xchg
fldenv
nop
jnp
jge
add
ret
cltd
in
jge
add
push
shl
dec
push
xchg
push
push
mov
jl
add
jnp
nop
push
sar
push
andl
pop
inc
in
loopne
pop
pop
les
fimuls
arpl
jb
push
push
cmp
xor
or
mov
dec
cmp
lock
sub
popa
ds
in
dec
or
cmp
push
sbb
shufps
cld
pop
loop
mov
add
aam
imull
dec
add
sub
pop
mov
pop
popf
add
xchg
clc
jle
jl
je
js
add
jb
popf
add
mov
stos
dec
testb
and
test
xor
adc
out
push
xor
pop
sbb
push
mov
pop
loopne
in
jge
add
jg
fistpl
xchg
jbe
mov
or
outsl
push
int3
push
dec
sbb
or
jl
dec
pop
push
add
cmp
sbb
or
inc
add
mov
xor
loopne
add
push
jp
lahf
jb
add
sahf
dec
or
adc
lock
add
daa
xor
jnp
pop
cmc
lret
lds
out
mov
push
mov
hlt
mov
orl
lods
ja
das
push
sbb
clc
pop
hlt
mov
and
hlt
add
out
add
add
xadd
fdiv
fisttpl
les
test
sbb
in
and
add
sbb
add
and
insl
into
adc
int
nop
pusha
add
push
adc
mov
shlb
add
scas
push
pop
add
outsb
xor
fldcw
ret
mov
jle
adc
call
in
dec
or
testl
add
test
xor
out
cltd
fmuls
or
lcall
repz
xchg
pop
mov
fildl
or
in
scas
fldcw
or
loopne
sub
shll
js
add
out
repnz
cmpsb
ret
xchg
incl
jecxz
mov
data16
inc
push
into
pop
out
or
xor
and
lret
xlat
add
push
xchg
sbb
aad
cwtl
popa
out
outsl
in
sahf
dec
hlt
lods
or
jbe
adc
push
test
arpl
hlt
dec
das
xor
push
sub
out
add
lea
pusha
jnp
les
js
leave
shlb
mov
movsl
cmp
dec
push
xlat
xchg
shrb
ret
pop
sub
adc
pop
sti
mov
sub
bts
das
aaa
add
rcrl
jne
add
jp
mov
rorl
cmp
dec
cld
xchg
ds
movsb
stc
pop
pusha
js
adc
add
add
in
fisubl
pop
loope
sbb
add
test
or
add
push
or
dec
add
cmp
mov
jecxz
arpl
jae
les
setb
adc
ja
add
sub
icebp
mov
inc
and
add
cli
mov
out
in
daa
in
popa
mulb
scas
add
cs
push
add
and
in
push
jge
lods
xchg
push
mov
pusha
jnp
push
or
xor
inc
shr
ret
pop
sahf
test
sbb
rorl
nop
out
mov
scas
add
lea
sub
push
cli
pop
xchg
dec
xor
cmp
dec
and
add
cmpsb
sub
mov
add
fstpt
pop
adc
jmp
test
and
pop
lods
dec
dec
fildl
jno
rorb
xchg
movsl
out
pop
cmp
jb
xchg
dec
lret
lret
mov
adc
mov
and
cs
ja
leave
pop
add
out
leave
dec
ret
sub
fcompl
rclb
sub
sarb
fnstsw
addb
arpl
lods
add
or
fxch
dec
stos
ja
xrelease
stc
add
cmp
cmpsb
jp
into
add
pop
lahf
or
and
xchg
cmp
repnz
xlat
jae
movsb
push
inc
cmp
adc
int3
faddl
fldcw
lcall
leave
cwtl
inc
adc
adc
lahf
call
inc
push
negb
lret
mov
inc
push
inc
rorb
or
loope
mov
lds
sbb
shll
jo
push
xor
add
pop
pop
mov
fs
pop
jo
or
daa
hlt
sahf
nop
sub
pop
jno
push
leave
mov
jb
iret
push
dec
test
mov
mov
and
add
mov
shll
mov
mov
add
adc
rolb
cmp
scas
test
xchg
jle
jl
jae
add
mov
stc
dec
sub
inc
in
pop
orb
cmpsb
inc
gs
mov
loopne
fiaddl
xchg
sbb
mov
loopne
int
lock
add
into
mov
xchg
mov
jnp
cmpsl
aad
sbb
add
out
add
xor
in
push
add
add
sbbl
xchg
and
xchg
cwtl
hlt
mov
ficomps
jnp
mov
incl
mov
pusha
cwtl
jecxz
lock
outsb
out
lods
or
popa
add
lds
fcoml
cmp
lcall
int3
in
pop
dec
mov
xor
pusha
call
insb
loopne
xlat
ja
add
data16
and
mov
fwait
and
daa
add
jp
lods
inc
dec
mov
shrl
dec
jo
repnz
xchg
in
fmull
lods
and
jmp
ljmp
das
mov
add
dec
mov
lea
or
jmp
or
xchg
adc
ja
dec
jecxz
andnps
push
mov
cmpsl
loope
pushf
add
imul
adc
inc
push
in
add
mov
dec
jne
adc
fdivrs
mov
cmc
xlat
mov
and
hlt
xchg
add
lock
and
jge
lret
xchg
sbb
mov
push
fisubrl
cmp
mov
in
dec
cmp
inc
adc
push
aas
stc
addb
jp
xchg
leave
add
sub
fstps
add
mov
lock
lods
sbb
fincstp
cmp
sbb
add
rorb
push
lret
push
mov
inc
lods
mov
sbb
mov
add
inc
out
xchg
and
add
mov
xchg
ja
push
push
inc
cmp
jl
hlt
fistl
mov
fsubrp
mov
push
push
xor
add
lds
out
xor
add
lea
push
inc
cmpsb
mov
repz
inc
pop
xchg
add
pop
mov
jns
add
pop
inc
loop
mov
xchg
push
nop
addb
pop
ja
dec
adcw
mov
pop
aam
jmp
adc
mov
mov
in
pop
cwtl
or
jb
clc
test
fcoms
mov
mov
leave
cmp
mov
nop
mov
xor
push
adc
push
cli
out
xchg
mov
popa
xchg
push
sahf
add
scas
std
test
and
cltd
cmp
adc
outsl
clc
pop
inc
add
xchg
sti
ds
rcr
adc
pusha
hlt
test
or
mov
push
test
cmp
push
sub
mov
inc
data16
push
add
adc
cwtl
sbb
sub
aaa
xchg
lret
rcll
loop
dec
add
jo
ficoml
mov
jns
add
sub
enter
gs
lods
sbb
hlt
mov
and
inc
sbb
jb
add
addb
xchg
mov
inc
out
loopne
jno
add
dec
sbb
lock
into
push
jo
or
dec
pop
es
add
dec
hlt
sub
aad
insl
mov
push
sti
roll
scas
and
mov
sub
cltd
mov
arpl
mov
negb
dec
add
outsl
sarl
or
dec
and
cmp
push
and
pop
insl
stos
cmc
cmpsb
lock
add
push
ljmp
mov
pop
mov
nop
pusha
jecxz
mov
add
jge
sbb
shr
shrl
cmpsl
add
mov
sbb
pop
and
test
add
adc
push
imul
xor
ds
out
pop
or
enter
cmp
aam
jnp
dec
sbb
stos
fsubp
aaa
lods
loop
add
out
int
ds
jo
data16
dec
add
sar
in
adc
nop
pop
mov
mov
push
movsb
lret
clc
adc
sbb
int3
mov
cmp
jnp
test
cmp
add
adc
jl
mov
pop
pop
cwtl
xor
mov
in
nop
add
pop
push
add
adc
xchg
dec
add
popf
pause
push
pop
xor
iret
inc
inc
jo
andl
ret
lahf
and
add
fwait
push
inc
lds
dec
jae
lcall
add
insl
sub
lock
and
sbb
or
sbb
shlb
mov
pop
adc
dec
into
or
lock
adc
cmpsl
pop
das
sub
mov
inc
jmp
push
jo
ss
cld
add
sbbl
inc
sbb
sbb
push
loope
insb
pop
add
arpl
cld
jle
lds
sub
add
pop
pop
push
push
xchg
incl
cmp
inc
fcoml
adc
dec
sysret
xchg
push
xchg
or
xor
shll
xchg
je
pushf
sahf
fidivs
testl
mov
pop
adc
xchg
iret
fisttpl
add
adc
pop
cltd
xor
out
cli
xor
lahf
and
popa
insl
and
add
dec
lods
loope
loopne
inc
fildl
icebp
sbb
mov
xor
jle
sbb
adc
loope
add
xchg
sub
imul
xchg
cltd
mov
sub
in
in
add
xchg
arpl
in
iret
inc
mov
sti
pushf
pop
fistpl
cmpsb
add
mov
mov
jb
pop
add
mov
rsm
imull
add
pop
mov
sub
mov
add
mov
jbe
add
nop
sub
rorb
inc
add
cwtl
ret
or
inc
adc
jb
add
adc
jge
add
or
and
mov
add
leave
lcall
inc
or
sub
jne
add
inc
mov
xchg
pusha
xor
cmpl
dec
sbb
mov
sbb
test
inc
fldl
stos
rclb
in
addr16
add
pop
inc
sarl
and
add
scas
cmc
xchg
aad
sub
jb
cld
lret
ds
mov
loopne
jne
sbbb
pushf
je
sbb
mov
add
dec
ljmp
lcall
push
cld
pushf
push
outsb
add
add
pusha
and
inc
pop
loopne
add
popa
fldl
jnp
repz
push
scas
clc
shlb
add
sub
xor
xchg
fdivrs
jo
das
inc
int
dec
pop
aam
enter
or
jmp
out
cmpsl
xchg
jp
and
add
in
jo
add
pusha
cwtl
rolb
cmp
jle
dec
ficoms
dec
add
add
cli
clc
jp
jo
add
movb
pop
mov
pop
push
int3
test
lar
and
push
ret
xor
cmp
pushf
xor
mov
imul
and
mov
dec
mov
aas
mov
call
adc
test
xchg
xor
inc
pushf
test
lock
fcmovu
mov
cld
call
mov
fsub
xor
push
int
jno
or
push
add
cmp
add
test
jae
addr16
rcrb
push
mov
out
sub
insl
stc
sub
jo
push
push
rcrb
adc
insb
out
xchg
loop
or
mov
adc
hlt
inc
pop
jg
pusha
inc
cmp
mov
pop
pop
mov
dec
out
push
fimull
xor
xchg
out
xor
hlt
xchg
sbb
loopne
test
mov
dec
add
sub
pusha
fs
outsb
add
xor
sbb
je
cmpsb
adc
cld
loope
pop
mov
popa
or
hlt
adc
inc
inc
mov
sarb
jne
sbb
mov
lods
mov
aad
sarb
add
adc
cmc
leave
nopl
pop
jecxz
sub
mov
push
or
ss
or
push
xor
lds
mov
xchg
jo
fldcw
fsubr
push
mov
and
add
cmpsl
adc
xor
lods
inc
xchg
and
repnz
jbe
add
mov
push
jp
ja
fadd
clc
add
enter
in
xor
call
out
cld
mov
push
mov
lret
push
imul
in
sbbl
xor
inc
pop
inc
es
cltd
push
adc
in
dec
add
adc
mov
fiadds
push
into
pop
mov
and
pop
push
add
cld
rolb
hlt
pushf
xor
or
add
bound
aas
movsl
sbb
inc
movlps
movsb
subb
inc
fdivrs
jbe
loopne
add
xchg
mov
faddl
inc
jg
xor
dec
movsl
push
adcl
ljmp
aas
mov
add
cwtl
mov
clc
xchg
rcll
mov
std
adc
je
adc
fstps
in
pusha
push
jp
stos
mov
inc
add
pushf
push
jge
std
fmull
rclb
pop
pop
and
adc
fldt
pop
shll
mov
je
push
int3
mov
sbb
mov
popf
pop
add
sbb
incl
sub
cmp
xor
cwtl
mov
dec
or
cmpsl
and
inc
jecxz
pop
mov
mov
inc
cwtl
add
out
cmp
mov
cmpsl
and
or
mov
daa
nop
push
xchg
sub
sbbl
adcb
push
sbb
inc
add
or
adc
dec
add
inc
mov
pop
bound
addb
fistl
dec
outsl
test
test
lret
pop
fdiv
xchg
adc
lret
add
in
pop
and
stos
jg
cmpsb
bnd
mov
movsb
bound
filds
mov
adc
xor
fnsave
push
popf
cmp
nop
loopne
cmp
aad
loopne
cmp
push
cmp
inc
mov
xchg
push
add
ds
sub
sbb
pop
add
bound
jno
lods
push
mov
mov
add
into
fildl
and
add
adc
add
arpl
sub
pop
mov
inc
dec
shrb
shr
and
fcoml
sub
xchg
stc
add
popa
xlat
mov
inc
mov
lret
xchg
test
repz
out
push
mov
hlt
flds
mov
add
mov
loopne
jg
xor
pop
mov
fdivrl
popa
std
or
jle
or
cmc
add
int3
dec
into
xor
ret
add
jg
cmpb
xchg
add
popf
xor
into
ja
cld
sti
hlt
je
dec
sbb
daa
negb
add
mov
pop
jg
push
cmp
and
jl
xchg
and
out
add
inc
aad
push
mov
push
add
cltd
pop
cmp
inc
pop
add
outsb
es
push
lahf
cmpsl
hlt
add
pop
out
test
pop
inc
loopne
or
mov
stos
xchg
lods
jmp
and
dec
lods
incl
push
jl
add
enter
push
adc
fcom
sub
push
test
xor
shll
adc
xchg
add
jle
push
les
les
adc
iret
shll
push
lods
inc
cmp
mov
scas
shlb
popa
push
pop
mov
scas
inc
inc
addr16
movsb
rcrl
in
adc
adc
je
shlb
testb
sbb
xor
pop
pop
push
addr16
dec
pop
shrl
sbb
jnp
jl
adc
jle
mov
and
imul
adc
nop
add
adc
xchg
decl
xchg
cmp
rclb
cmp
rolb
add
adc
adc
mov
loope
and
sbb
add
call
mov
lret
jb
dec
jge
pop
and
rorb
les
addl
cmp
add
imul
dec
xchg
mov
sbb
call
mov
leave
push
int
push
sub
cmp
or
push
jae
insl
or
push
jecxz
out
xchg
sbb
ret
and
fucom
xor
add
push
adc
mov
mov
cld
mov
daa
out
pusha
or
insl
js
add
nop
cs
push
jecxz
mov
call
pusha
mov
cld
jns
xchg
push
scas
inc
xor
ljmp
aaa
add
and
adc
push
dec
in
push
cmp
test
xchg
xor
adc
mov
jb
add
stc
sbb
push
mov
js
aas
inc
jmp
mov
imul
aad
out
sbb
std
inc
cmp
add
fdiv
leave
add
inc
daa
fcmovu
arpl
jecxz
enter
popa
not
mov
stc
insl
test
sbb
mov
push
mov
scas
xchg
or
pop
push
adc
sbb
or
clc
and
push
sar
int
dec
loopne
js
push
scas
add
cmpsl
mov
std
ret
pop
cmp
ss
push
lcall
xor
loopne
out
pop
lock
pop
scas
in
jno
in
out
rorl
out
andl
leave
sub
xor
mov
fldl
inc
ljmp
daa
add
mov
dec
repz
lret
cli
xchg
pop
dec
add
and
add
lods
nop
push
loopne
in
cmp
into
push
jp
mov
lcall
sub
mov
hlt
popl
iret
in
jno
add
add
rorb
adcl
pop
add
aam
push
add
bound
add
mov
das
movsb
add
add
mov
jae
add
lds
cli
add
adc
test
pop
pop
xor
pop
shlb
jle
mov
fcompl
lahf
test
sub
call
les
shrb
jbe
cld
daa
mov
mov
in
movsl
push
movsb
add
xor
add
sbb
adc
pusha
push
es
mov
sbb
loopne
cmc
add
mov
mov
and
es
jnp
adc
push
jo
scas
add
repz
jae
xchg
imulb
loop
add
push
mov
rclb
lahf
loope
test
dec
int
ret
push
add
aad
and
fcompl
movsb
lock
mov
pushf
cmpsl
adcb
scas
cld
add
in
mov
pusha
popa
xchg
and
andl
rolb
cmpsl
repnz
arpl
sub
test
imul
fs
and
push
and
jno
clc
mov
sarb
fldl
imul
xor
nop
add
mov
sbb
lahf
fdivrp
push
xor
mov
pop
pop
mov
add
mov
jp
jg
or
or
pop
dec
mov
push
pusha
jno
popf
mov
jne
cmp
push
cmp
jl
cld
test
mov
sub
repz
push
rcl
xchg
or
shl
ds
xor
pusha
sbbl
xlat
adc
into
repz
fwait
rcrl
mov
fsubs
cltd
mov
pusha
popa
or
xor
inc
loope
dec
ss
pop
mov
mov
sub
sbb
push
add
call
xor
iret
jecxz
jbe
add
pop
xchg
add
aas
mov
sarb
in
movntps
add
in
cmp
mov
and
std
adc
jnp
out
cmp
xor
mov
mov
mov
pop
push
adc
xor
xchg
shlb
add
lock
iret
sbb
xor
jmp
pop
add
lock
ds
repnz
add
xor
repnz
pop
ss
cmp
pop
pcmpeqb
mov
popf
pop
sti
add
jne
addl
addb
std
mov
repnz
in
xchg
pop
mov
cs
dec
adc
cmp
jp
add
ljmp
fldt
repz
rol
lret
dec
loope
pop
fiadds
mov
push
add
popa
inc
mov
data16
lock
add
pop
aam
or
rol
in
sub
add
sti
push
and
jnp
adc
sbb
icebp
xchg
or
enter
mov
rol
add
or
inc
xchg
loope
icebp
mov
jmp
jo
mov
pop
cmc
add
mov
fistpl
xchg
adc
sti
scas
call
lods
push
nop
dec
add
jp
ja
std
sahf
and
inc
add
inc
rorb
or
push
add
leave
mov
pop
add
cltd
fnstsw
mov
mov
scas
aam
add
pusha
mov
rcrl
xor
popa
xchg
mov
push
in
les
mov
mov
push
inc
roll
jg
lahf
and
shll
jae
push
fists
xchg
cwtl
mov
js
and
sti
and
xor
cwtl
leave
clc
cmp
mov
mov
add
scas
dec
aad
xchg
out
cld
imul
push
cmp
jg
xor
add
adc
sub
scas
pop
outsl
roll
jmp
adc
jo
shlb
or
xchg
adc
push
pop
or
mov
stos
xor
lods
aas
dec
movsb
adcb
lfs
or
mov
add
xor
or
les
rolb
add
push
or
sbbl
jnp
add
xchg
and
sbb
out
movsb
push
mov
cmpsl
add
rcrl
mov
mov
add
jns
push
xchg
shrl
mov
sbb
roll
or
and
sbb
iret
or
sahf
xor
add
jl
add
fwait
cmp
fadd
push
std
cmp
rolb
xchg
sbb
bound
out
sahf
push
sub
loope
enter
lock
add
push
fcompl
sarb
rcrb
push
push
imul
xor
push
dec
imul
jmp
dec
in
dec
push
js
or
push
fdivrl
mov
add
outsl
or
xlat
xor
sbb
pop
popf
sbb
inc
pop
and
shrb
orb
fnstenv
mov
lock
cmp
sbb
jne
or
add
sbb
add
inc
fistps
mov
add
into
hlt
xchg
xor
in
add
shll
aad
fsubrs
sbb
int3
push
cmpb
sbb
and
loope
or
sub
stos
or
jno
ret
xor
xchg
pop
nop
pop
inc
jo
ret
xchg
and
hlt
dec
or
je
inc
add
es
add
bound
js
enter
xchg
les
leave
dec
push
out
inc
and
je
out
shlb
add
sub
jle
and
jo
add
jmp
bound
fnstcw
out
add
or
inc
fistpll
pop
and
cmp
mov
sbb
adc
or
or
or
mov
jp
push
sbbb
add
clc
ja
andb
pop
popa
loopne
and
gs
or
and
ja
push
xchg
and
andl
fwait
dec
sbb
mov
orb
cmp
cwtl
mov
jmp
arpl
lret
rcrl
push
mov
int
repz
xchg
adc
cmp
insb
iret
sub
cmp
mov
jae
lock
or
jbe
or
add
popa
out
cmp
or
jmp
add
cli
popf
and
insb
push
je
cltd
divl
dec
inc
ficomps
mov
add
andl
repnz
sti
rolb
mov
stc
repnz
pusha
out
adc
insb
in
xchg
aad
mov
xchg
sub
sub
lea
mov
sub
or
test
rcrb
je
mov
mov
xchg
aaa
loopne
jae
pop
xchg
test
dec
lea
fsubl
fisttpll
cwtl
fwait
push
bound
aas
ret
fistl
daa
jge
sti
jp
mov
add
int3
mov
or
sub
dec
lods
cmp
test
int3
and
fwait
dec
lret
mov
cmp
jbe
clc
test
jo
je
push
dec
push
cmp
push
mov
pop
sub
jne
cmp
dec
xchg
aas
fmul
add
add
sbbl
cs
insl
add
push
xchg
das
insl
stos
adc
loop
mov
inc
movsb
or
shlb
push
negb
push
orb
mov
xchg
shrb
and
cs
shll
inc
sbb
push
jl
jnp
in
ljmp
mov
mov
sub
cltd
mov
mov
xor
movsl
cmp
xor
je
sub
xchg
int3
and
mov
int
aam
out
cmp
mov
inc
lret
adc
movsl
inc
xchg
arpl
mov
test
inc
pop
outsb
fists
add
daa
add
repz
testb
pusha
mov
xchg
or
in
push
sbb
jo
jo
add
lock
xchg
orl
mov
pop
jecxz
or
sub
hlt
imul
dec
fld
fwait
xlat
outsb
and
mov
arpl
popa
pop
imul
daa
push
jmp
mov
insb
jmp
adc
js
stos
stc
xlat
add
stos
addl
testb
leave
cltd
lods
mov
inc
add
xchg
xor
push
dec
sbb
xchg
add
pop
mov
shrb
aam
adc
scas
push
xor
lock
add
push
popf
and
adc
imul
or
stos
xchg
adc
loope
add
mov
push
mov
add
dec
adc
mov
nop
push
jbe
mov
in
dec
icebp
setg
dec
out
jo
add
inc
lea
sarl
mov
nop
xchg
into
aad
add
jg
mov
cmp
push
dec
loop
lahf
xor
mov
xor
pop
mov
mov
ret
jge
inc
push
scas
cmp
ds
mov
into
inc
call
in
jmp
dec
xor
xchg
add
lods
xchg
jo
fsubrl
add
pushf
xor
push
iret
adc
dec
push
lods
fstpt
xchg
add
inc
inc
imul
lock
fstl
add
sbb
sbb
lds
dec
mov
xchg
push
mov
dec
pushf
aad
push
std
and
dec
subl
jns
das
rolb
xchg
rcr
stos
inc
jecxz
fs
cmp
mov
jns
and
in
xadd
stos
add
gs
and
fmuls
mov
push
mov
pop
loop
jnp
adcb
fidivrs
out
std
pop
ljmp
sarl
add
adc
fmul
add
jg
shl
or
push
mov
add
cli
insl
sub
lret
add
push
in
jbe
sbb
test
xchg
dec
ret
jge
or
icebp
cmp
mov
mov
loopne
pop
inc
jle
imul
iret
adc
dec
dec
mov
fidivs
inc
ret
out
rcrb
int
cmpsb
ds
lds
dec
or
mov
pusha
add
outsb
in
xchg
sbb
jp
add
hlt
jg
add
out
movsl
and
sub
aaa
shlb
add
adc
or
hlt
jns
jge
rorb
cmp
add
jno
popa
flds
mov
push
rcl
jo
push
int3
adc
mov
cwtl
push
and
mov
cli
push
out
cmpsl
fs
cmp
cmc
subb
rolb
push
xchg
push
call
sti
inc
dec
mov
cmpsl
inc
leave
inc
push
fwait
insb
mov
ss
xlat
pop
lcall
movsb
xor
push
loope
icebp
das
mov
rorb
mov
add
sbb
pusha
or
lods
fldenv
hlt
sub
push
inc
mov
push
jbe
mov
dec
daa
pop
jmp
scas
inc
dec
scas
pop
push
fiaddl
mov
lock
addb
icebp
add
pusha
inc
sub
ret
fsubrs
or
mov
frstor
or
data16
add
hlt
xchg
imul
dec
add
negl
mov
push
add
jle
popa
loopne
push
sbb
call
add
pop
daa
add
jl
pop
shll
arpl
cld
sbb
jg
add
xchg
xor
xchg
dec
movb
fstp
cmp
aad
dec
rcr
push
adc
mov
add
hlt
fcoml
movsw
lret
sbb
fisttpll
push
mov
sbb
adcl
adc
stc
add
outsb
mov
sub
out
inc
popf
loope
addl
xor
rolb
fisubl
int
lahf
or
lods
cld
dec
mov
das
dec
repnz
add
addb
scas
in
inc
iret
jbe
add
aam
movsb
mov
pop
daa
or
test
hlt
jae
mov
shl
xlat
insb
stos
push
add
hlt
xor
ds
cli
sbbb
rcrb
jp
adc
sbb
rorl
add
dec
cmc
xor
in
in
gs
add
lock
jbe
sbb
sbb
dec
jl
jbe
jne
sbb
and
cmpsl
add
sahf
fcompl
lahf
xchg
out
flds
mov
je
addb
xchg
aad
clc
outsb
xchg
bound
add
jns
mov
repnz
lock
loope
outsl
lahf
mov
add
test
mov
int3
adc
and
outsl
add
mov
rcrl
ret
fistps
mov
push
call
or
aaa
jne
out
out
add
int3
jg,pn
mov
or
mov
adc
cli
lahf
nop
pusha
cs
add
mov
nop
call
dec
cmpsl
aaa
add
out
repz
mov
jb
stos
xchg
push
add
ja
mov
mov
fiaddl
sbb
enter
sub
mov
sbb
push
push
push
fcmovnb
xor
push
jbe
test
jg
lock
cmp
mov
loop
push
mulb
add
in
inc
test
and
pop
jmp
loop
fsubrs
push
or
mov
inc
mov
inc
mov
sub
pop
push
inc
je
insl
pop
dec
ja
cmp
jl
adc
sar
loope
insl
clc
xchg
aam
mov
add
fs
into
xor
mov
push
pop
jle
mov
push
lcall
clc
leave
lret
lds
mov
imul
insb
nop
imul
adc
mov
rolb
insb
divl
roll
adc
xor
xchg
sbb
pop
stc
sahf
and
xor
xlat
jnp
mov
fimull
jbe
in
or
or
jnp
movsl
rclb
dec
lret
dec
repz
rclb
mov
add
add
mov
fidivrl
pop
push
aas
lahf
out
mov
mov
mov
mov
pop
aam
jp
dec
sub
or
mov
addl
or
dec
into
add
aaa
fwait
sbb
addr16
nop
insl
add
fs
cmp
mov
xchg
es
lcall
push
xchg
cmc
movsl
lock
verr
clc
fistl
jno
cwtl
adc
add
and
add
dec
fistpll
iret
push
pusha
loope
xchg
add
call
push
jo
lcall
in
pop
mov
adcb
pop
lret
sbb
xorb
aam
xor
adc
ret
sarb
jmp
xchg
shlb
mov
xchg
notl
adc
sbbb
jmp
pusha
xlat
xchg
shlb
lds
cwtl
movsb
or
cmp
lahf
add
jp
push
pop
xchg
aam
cltd
mov
loope
or
lcall
or
into
inc
in
insl
adc
das
or
xchg
aad
jge
sbb
shlb
adc
mov
loop
mov
xor
adc
dec
test
sbb
add
sbb
pop
xor
les
into
hlt
cmp
and
jge
cvttps2pi
inc
sbb
dec
cmpsl
mov
iret
fwait
sarb
mov
ret
inc
enter
xor
out
cs
xor
jge
daa
mov
inc
divl
dec
fsubl
iret
rcrb
and
pop
call
mov
inc
mov
lret
add
js
pop
lock
xor
popa
stc
inc
sbb
fnsave
xchg
push
mov
inc
out
stc
rcrl
pop
cmpsb
dec
jecxz
in
loop
leave
repnz
xchg
push
inc
hlt
pop
lods
add
pop
arpl
or
jno
std
pusha
outsl
int3
push
lea
loopne
jnp
sbb
add
add
or
add
inc
jg
ret
add
or
out
dec
test
cs
pop
mov
lea
or
add
dec
xchg
pop
xchg
mov
js
xor
andl
das
jb
loope
clc
add
pop
adc
arpl
xorb
mov
mov
and
add
adc
or
add
cmp
pop
out
and
lahf
inc
or
dec
les
aam
loopne
mov
push
in
popa
lea
mov
or
js
jge
dec
dec
pop
or
sbb
xchg
sub
adc
jnp
add
push
add
mov
js
add
xchg
jo
xor
adc
adc
mov
inc
mov
cmpsb
sbb
stos
pop
xchg
cli
jno
fimuls
adc
negb
push
dec
mov
jmp
ljmp
or
dec
jne
into
or
cmp
add
push
add
add
mov
loopne
pop
dec
push
mov
push
or
rorl
mov
jmp
cmpsb
pop
mov
mov
outsb
mov
arpl
fisttpll
loop
push
pop
mov
sbb
or
bound
adc
ja
sarb
pushf
mov
push
xchg
cmp
mov
xchg
add
push
add
cmpsb
xor
xor
iret
xor
or
cvtdq2ps
shlb
roll
push
push
shl
mov
or
inc
lock
adc
mov
mov
jmp
jae,pt
stc
push
add
pop
mov
inc
in
sub
data16
xchg
jne
xchg
lret
add
out
and
xor
fs
adc
dec
cmp
jmp
scas
sarb
jns
add
jge
add
add
pop
add
hlt
cmpsl
enterw
pop
outsl
or
adc
fs
adc
mov
jmp
sub
enter
and
in
dec
sub
mov
loope
lods
add
lcall
lea
loop
jmp
fwait
fs
add
sub
lret
add
push
xor
inc
shrb
mov
ss
dec
add
mov
rorb
mov
es
fisttpll
mov
push
add
rolb
mov
mov
out
add
adc
xlat
mov
sub
add
sbb
out
dec
ret
mov
mov
push
add
sbb
int3
mov
int
pop
fdivrp
adc
fs
stos
pop
in
std
jecxz
adc
mov
add
add
leave
insl
cltd
in
jno
inc
add
ficompl
sbb
ror
push
pop
icebp
orb
ret
or
out
aad
add
push
imul
int
ja
leave
out
add
jb
pop
call
loopne
pop
mov
add
mov
push
leave
aaa
repz
add
scas
pop
push
push
bnd
test
fs
int3
sub
adc
rolb
repnz
adc
push
xor
inc
cmp
dec
and
repnz
into
sub
in
xchg
add
std
ret
rcr
mov
add
test
add
mov
out
inc
add
dec
pusha
ds
sub
out
mov
mov
call
aaa
ss
ror
inc
pop
mov
out
scas
mov
clc
cmp
dec
iret
or
arpl
xor
mov
icebp
and
hlt
or
cmp
mov
idivb
cmpsb
stos
xchg
nop
lock
push
enter
sub
jb
std
lock
in
insl
repnz
lret
in
out
jo
out
out
pavgw
addr16
add
sahf
xor
mov
ret
xor
add
jg
cmp
xor
pop
pop
lret
jge
call
mov
cmpsl
flds
xchg
fistpl
mov
shl
xchg
decl
dec
lods
mov
and
out
dec
jp
add
sub
std
push
addb
sub
mov
add
adc
out
in
int3
loopne
xchg
adc
jge
add
mov
push
in
dec
cli
imul
jno
testb
xchg
aad
dec
mov
sbb
add
sbb
je
sbb
addb
inc
mov
lret
ds
xchg
add
inc
pushf
shl
or
adcb
sbb
loopne
mov
repz
mov
mov
push
dec
or
test
or
bound
sbb
pop
jp
add
mov
add
xor
mov
adc
andb
add
popf
loope
fs
add
enter
popa
mov
cmc
cs
add
xchg
fxam
fiaddl
in
lcall
mov
pop
cmpsb
add
scas
in
cmp
movsl
add
aas
mov
push
fucom
sbb
stos
sub
add
push
cmp
imul
insb
cmpsb
xor
push
fldl
xor
mov
addb
nop
outsb
int
add
inc
cmp
cld
icebp
fstl
in
mov
popf
pusha
add
nop
fsubl
xchg
cli
add
mov
xchg
or
add
lret
or
inc
cld
outsb
pusha
test
adc
addr16
or
in
and
push
cmpsb
jmp
sahf
add
fs
icebp
pushf
fmuls
sub
push
das
mov
add
sub
loopne
sti
shlb
idivl
repnz
sbb
insl
push
or
pushf
mov
jno
push
cld
in
scas
mov
mov
rcrb
pop
dec
mov
add
and
pop
std
ds
out
add
fs
dec
xor
in
loop
or
jnp
in
mov
cmp
pop
jns
push
inc
add
push
mov
out
mov
cwtl
jecxz
sub
jp
mov
mov
mov
nop
add
dec
adc
xchg
or
pushf
cmp
mov
icebp
mov
mov
stc
mov
das
add
pop
mov
rorb
in
or
int3
pop
mov
add
incb
cmc
stos
call
pop
ficoms
mov
pop
aaa
and
sub
call
iret
add
ss
and
push
in
cli
cmp
push
jo
lret
lret
jmp
in
fs
mov
lock
stos
aam
or
inc
and
ds
loopne
sub
add
mov
xchg
add
fmuls
add
xchg
fstps
add
add
lods
out
jge
call
idiv
mov
sarb
mov
lret
and
inc
iret
jb
add
call
mov
or
outsl
mov
addr16
add
lcall
loopne
cmp
sbb
mov
int
mov
rcrb
ret
add
loopne
push
in
dec
add
sbb
dec
fadds
dec
rorl
ficomps
cmp
pop
push
adc
flds
cltd
movl
or
pop
cwtl
jle
mov
rol
call
subb
std
negb
and
or
lahf
add
sti
fsubs
add
jl
or
add
aad
push
pop
iret
add
scas
jecxz
or
es
or
ja
mov
in
mov
daa
add
movsl
mov
sub
and
push
leave
add
lea
add
dec
cld
adcb
lds
mov
pop
add
dec
jb
pop
mov
sub
pop
inc
xchg
test
imul
mov
xchg
jg
jecxz
sbbb
test
in
add
xor
loope
lahf
fcmovbe
add
or
fidivl
mov
adc
pop
cld
adc
push
mull
pop
jl
push
fs
arpl
sbb
cltd
pop
js
out
xchg
sti
jle
push
jle
push
add
add
repz
mov
xchg
add
rolb
or
add
lock
push
mov
add
mov
int3
mov
add
xor
pop
add
repnz
mov
cltd
cmp
sbb
jmp
sahf
mov
push
enter
imul
xor
js
sti
mov
inc
fbld
out
hlt
adc
inc
mov
push
imull
mov
repnz
add
ror
inc
pusha
imul
cmp
pop
daa
add
test
xchg
sti
add
jge
push
sbb
or
inc
addb
cmc
inc
mov
mov
scas
jg
add
add
gs
adc
loopne
std
rolb
dec
pop
xchg
test
rclb
sbb
sbb
adc
shll
cmp
aad
iret
add
lock
test
rcr
mov
insl
loop
push
and
pushf
or
mov
cmpsb
cmp
fisubrl
or
movsl
inc
fimuls
and
or
or
pop
adcb
fs
pusha
ja
add
xchg
add
or
mov
jle
das
mov
adc
andl
orb
sbb
add
andb
push
adc
add
add
and
aad
xor
addr16
fidivrs
cmc
dec
push
popa
push
repz
sbb
sub
mov
andl
add
lods
mov
xchg
mov
add
shll
pop
xchg
cs
dec
loopne
scas
push
pusha
push
js
cmp
mov
jmp
fsub
fisttpll
addr16
cmp
sbb
aam
fiaddl
loopne
inc
fdivl
dec
dec
es
mov
cmpsl
test
adc
mov
add
lcall
cmp
add
cmp
scas
jbe
cmp
aad
add
imul
push
cmpsl
mov
add
sub
and
aam
sbb
and
add
pop
es
xchg
popa
ss
into
pop
mov
xchg
or
add
cmp
cwtl
mov
out
add
cmp
movb
add
mov
ffree
cwtl
rorb
xchg
lcall
jne
add
orl
or
sub
sbbl
add
loop
add
in
into
xchg
dec
ja
popa
shrb
mov
cltd
mov
mov
loop
add
xor
fninit
jge
jbe
sbb
sbb
pusha
xchg
add
andl
dec
add
mov
sbb
xor
xchg
add
pop
xchg
xor
push
inc
les
sub
stc
xor
add
leave
or
add
pop
incl
cmp
add
add
clc
shrb
adc
add
aaa
xchg
loop
push
push
mov
fwait
pop
fnstsw
int
int3
adcb
daa
rolb
xchg
add
fs
push
aam
push
or
dec
lcall
rclb
gs
jp
add
push
and
mov
scas
ss
inc
sahf
insb
andb
push
dec
daa
pop
pusha
dec
xchg
add
cmpsl
sub
pusha
xor
add
adc
sbb
clc
xchg
cltd
adc
inc
push
sbb
lcall
bound
es
push
push
mov
pop
mov
data16
cmp
sbb
movsl
inc
in
cli
pop
leave
xor
and
adc
pop
out
rcrb
add
sbb
js
incl
xchg
repz
popa
lock
jo
add
adc
pop
in
out
outsl
or
xor
fs
pop
iret
mov
iret
xorb
addb
mov
xorb
mov
add
pop
jo
inc
js
xor
stos
mov
out
add
xchg
out
outsl
jmp
insl
jb
test
adc
add
mov
inc
fdivrl
cmp
pop
mov
xchg
int
repnz
push
andb
call
add
ror
int3
psllq
lea
rol
and
lods
in
inc
aas
lea
pushf
add
adc
and
test
xor
ficomps
or
add
outsb
stos
pop
in
inc
enter
add
xchg
sbb
adc
sub
test
mov
mov
add
push
and
adc
adc
pop
add
dec
or
mov
es
cmc
and
outsl
dec
pop
inc
xor
popf
insb
add
mov
rclb
xor
xor
inc
add
jg
xchg
xchg
in
adc
test
push
int
add
stos
jns
loop
and
or
push
rolb
pop
daa
or
icebp
scas
fadds
sub
dec
mov
sub
leave
adc
push
imul
cmp
jns
adc
fwait
js
inc
mov
movsb
mov
add
pop
ror
addb
mov
in
add
xor
sbb
fisubl
jg
mov
jecxz
dec
adc
adc
xor
mov
int
pop
mov
jno
mov
loop
sub
roll
push
pop
mov
mov
and
movsl
xchg
test
mov
inc
mov
and
mov
dec
push
adc
push
lahf
pop
push
add
jnp
xchg
and
fwait
push
mov
sbb
popa
repnz
lahf
adc
pop
inc
rsm
sbb
xchg
rclb
popl
ret
sub
or
sub
and
add
dec
mov
push
data16
out
and
nop
and
cld
iret
sub
push
popa
inc
ljmp
scas
push
mov
ds
and
pop
add
add
cmp
sub
push
cmp
inc
add
es
jecxz
popa
mov
jb
cmp
cmp
pop
adc
out
xchg
and
dec
sub
lahf
or
addb
pop
sahf
add
xchg
mov
cltd
and
stos
mov
add
aaa
cmp
loope
pandn
push
inc
cmp
jne
dec
sub
or
mov
test
shll
xor
lret
or
and
fiadds
mov
pop
movb
push
mov
sub
mov
sbb
rorb
mov
add
subb
pop
mov
andl
es
adc
popf
mov
mov
inc
dec
sbb
jle
jp
jmp
inc
pop
push
mov
sbb
shlb
mov
test
pop
or
or
xchg
ljmp
adc
cmp
rcrb
iret
cs
ss
nop
add
sub
sbb
pop
sbb
add
adc
and
push
mov
cwtl
out
nop
clc
call
mov
fucom
gs
mov
lock
lds
and
inc
sarb
lcall
mov
mov
and
stc
sbbl
stc
sbb
test
and
filds
iret
add
aaa
xchg
push
idivl
popf
cltd
sarl
clc
iret
jo
mov
mov
sbb
and
or
fistpll
imul
xor
jl
and
pushf
cmp
xchg
sub
add
out
mov
push
push
xor
aam
dec
xor
adc
add
mov
insb
mov
inc
scas
shld
dec
pusha
sbb
pop
in
add
sub
mov
roll
scas
jmp
sbb
xor
ret
add
andb
sub
call
adc
bound
mov
xchg
sahf
enter
orb
shrl
pop
add
mov
mov
movsb
push
mov
and
cs
movsl
into
sbb
ja
popa
sub
mov
dec
add
rcr
add
stc
push
rclb
push
cmovo
xchg
hlt
pop
and
je
mov
clc
cmpsl
fisubl
mov
inc
mov
jmp
sahf
fnstenv
sub
push
lods
pop
ja
int3
scas
popa
loopne
in
addb
dec
lret
sbb
add
cmp
andb
and
jne
adc
and
gs
nop
push
cmp
call
test
sbb
or
adcl
add
shlb
sarl
lds
push
adc
add
cmpl
add
pop
addr16
and
add
add
mov
mov
dec
repnz
dec
gs
adc
sbb
add
fcmovu
dec
cwtl
aaa
mov
mov
add
mov
test
incl
xchg
pop
jno
fiadds
or
add
mov
xchg
mov
mov
rclb
mov
rclb
mov
jno
push
inc
inc
add
xor
mov
add
sarl
daa
dec
pop
rorl
inc
xlat
int
clc
mov
unpcklps
aam
fcmovu
pushf
push
cwtl
sub
loopne
mov
dec
cwtl
pop
test
and
daa
inc
and
xchg
add
leave
lods
mov
or
add
fadd
push
push
dec
std
aam
add
xlat
cmp
int3
xchg
jb
dec
inc
mov
pop
lods
es
fimull
pop
popf
mov
mov
push
push
mov
or
inc
mov
inc
mov
jae
clc
jne
in
jo
sub
pop
xlat
aad
add
inc
out
push
std
sub
jno
xor
mov
and
pop
add
and
pop
addl
aad
stos
jmp
fmull
mov
push
fwait
xchg
adc
xor
lret
mov
ret
daa
inc
ss
and
add
inc
imul
jnp
dec
ljmp
mov
mov
leave
mov
adc
sub
and
dec
mov
xchg
or
int3
pop
call
add
out
cwtl
ret
les
mov
or
jo
xor
in
nop
dec
xchg
pushf
and
aad
mov
in
xchg
lds
add
fsubrp
lock
mov
xorl
push
mov
jmp
movsb
adc
add
mov
xchg
into
shr
mov
add
adc
add
adc
add
mov
cmp
add
jae
jl
or
cmpsl
movl
int3
call
rcrl
add
mov
fildll
movsl
mov
mov
cmpsl
movb
push
lock
or
mov
cmp
mov
cmpsb
bound
lret
ja
popa
addr16
sbb
std
bound
mov
add
sbb
jl
inc
push
pop
or
xor
sahf
inc
mov
daa
or
pop
add
in
xchg
das
dec
mov
mov
sub
push
or
mov
test
in
jle
hlt
outsb
or
scas
shlb
sub
shrb
inc
js
pop
mov
nop
aas
lds
adc
push
int
mov
popf
pop
adc
dec
add
cltd
shrl
xorb
or
rcl
dec
adc
lock
js
inc
push
or
ror
and
shl
mov
jae
add
pop
add
fidivs
aad
jnp
ret
jecxz
int
lods
lret
sub
ljmp
outsl
sbb
mov
pop
xor
mov
clc
adcb
icebp
arpl
jno
xchg
dec
pop
fidivs
pop
lds
loopne
xorb
jno
fcompl
mov
insl
add
pop
orb
lahf
or
mov
xor
lods
xchg
cld
leave
inc
int
jp
fwait
movsl
xchg
out
sub
sbb
nop
mov
hlt
cmp
cmp
enter
fiadds
xchg
xchg
lods
sub
cmpsl
in
ljmp
inc
push
fisttpll
dec
add
add
mov
xchg
inc
outsb
pop
pop
outsl
fisttpll
mov
mov
call
add
or
cmp
push
inc
dec
inc
adc
ret
test
mov
mov
mov
mov
icebp
cmp
xchg
nop
aam
mov
das
mov
js
dec
add
lds
into
and
mov
sbb
movsl
mov
mov
adc
add
les
dec
pop
out
add
test
insb
lods
js
push
pusha
jnp
jo
lahf
add
xchg
enter
call
out
pushf
je
std
inc
rcl
sbbb
imul
pop
dec
or
loopne
cs
clc
push
ja
je
and
sbb
add
or
sbb
xlat
test
or
mov
testb
xor
pop
adc
adcl
fcoml
or
push
fiadds
inc
xchg
loop
inc
add
mov
mov
xor
ffreep
pop
hlt
or
fidivrs
lods
repnz
push
adc
and
inc
call
sub
jbe
add
cmc
nop
cli
pop
adc
add
xchg
in
leave
lds
and
out
jo
jmp
mov
add
outsb
ror
fxch
lcall
insl
fdivrl
pop
call
test
popa
xor
in
clc
push
inc
mov
or
push
pushf
mov
inc
xchg
mov
xor
mov
cwtl
loope
cmp
and
push
xorl
mov
inc
fbstp
cmp
out
mov
aam
or
test
sarl
mov
add
inc
repz
mov
mov
inc
sbb
and
xor
pop
loope
xor
fiaddl
add
and
aam
sub
mov
sbb
cld
test
loop
sbb
jmp
pop
sub
or
loope
test
and
enter
dec
addr16
push
or
push
jo
aad
mov
mov
jmp
pop
ljmp
into
add
cli
fs
loop
lds
push
mov
mov
pop
jl
sub
lock
out
add
mov
or
or
pop
xchg
or
cmp
lods
adc
xor
addl
lods
pop
mov
mov
add
adc
aaa
adc
adc
mov
add
lea
xchg
add
mov
mov
fcomps
cs
push
jp
insl
add
lret
xchg
mov
inc
mov
sbb
and
loopne
inc
pop
mov
mov
mov
push
nop
or
aam
repnz
xchg
pusha
adc
sub
jle
int
and
add
sub
mov
loop
fwait
test
outsb
add
enter
mov
adc
adc
dec
jno
jns
sbb
add
inc
push
cmp
inc
cmp
or
mov
lahf
unpcklps
jno
nop
pop
jmp
xor
hlt
iret
adc
and
and
mov
scas
dec
dec
xchg
je
xor
and
popa
mov
test
jno
nop
mov
mov
gs
icebp
add
lock
imul
push
cld
andb
xor
xchg
addr16
dec
mov
adc
pop
pop
add
ds
dec
or
fs
push
inc
mov
xchg
les
xchg
and
sbb
into
adc
sbb
in
sub
xor
and
call
jo
xor
sbb
adc
adc
call
shrl
pop
add
jge
pop
jp
push
and
mov
pop
imul
dec
push
sar
popf
js
outsl
xorl
mov
imul
push
jmp
sbb
icebp
add
jmp
dec
add
pusha
xchg
mov
test
pop
pusha
xchg
xchg
orb
dec
mov
std
outsl
jp
xor
mov
jne
sub
push
cmp
cmp
subb
ret
hlt
orl
call
sub
adc
pop
or
xor
pusha
adcl
sub
insb
pop
xchg
sub
dec
add
lds
xchg
push
push
call
inc
iret
and
pushf
pop
push
or
mov
insb
and
sbb
call
movsb
aas
xor
pop
add
dec
lock
and
pop
cld
add
cmp
lea
and
xchg
in
and
inc
fadds
pushf
inc
or
fdivrs
ljmp
xor
sbb
push
xor
adc
int3
jp
inc
enter
shr
call
mov
and
pop
mov
mov
cmp
inc
pop
daa
sbb
stos
cli
add
push
stos
pop
xor
sbb
cwtl
mov
adcb
xchg
lods
add
jmp
push
subb
add
xor
dec
mov
adc
imul
push
pop
scas
icebp
push
movsb
jno
lock
rol
sub
inc
repz
stos
and
push
in
ljmp
pop
xchg
adc
sbb
pusha
dec
jle
out
fdiv
mov
pushf
add
mov
mov
xchg
inc
jno
mov
lea
lret
lods
notb
insb
xchg
jnp
pop
lcall
movsb
fst
and
std
aad
sub
or
pop
inc
mov
dec
adc
fisttps
cmp
ljmp
cmp
mov
pop
enter
pop
aad
push
mov
dec
pushf
sub
lret
aad
sahf
push
pop
inc
outsb
pop
xor
popa
shlb
addl
xchg
push
fcomp
cmp
cmp
clc
adc
adc
popf
into
in
lret
add
jecxz
lods
or
push
fdivs
xlat
inc
sarb
int
adc
xchg
in
xchg
cmpsb
mov
filds
rolb
mov
inc
xchg
pop
fs
push
push
add
mov
xor
fmuls
je
cld
add
mov
sbb
je
or
leave
arpl
sbb
imul
xor
jns
rolb
xchg
cmp
ss
pop
cltd
cmp
imul
mov
loopne
insb
sti
adc
fiaddl
jmp
push
mov
loope
loopne
mov
in
mov
add
adc
in
push
or
push
fisttps
pusha
add
pop
xor
shlb
iret
sbb
subl
push
push
pop
mov
jnp
or
shrb
dec
push
sub
loopne
sbb
scas
cmc
dec
mov
es
and
int3
mov
rorb
cmp
push
and
mov
cmp
pop
xchg
dec
push
add
jle
add
es
mov
incl
xor
stos
pushf
call
daa
or
xchg
and
nop
sti
or
rcl
shlb
test
add
fadds
pop
add
pushf
rclb
nop
fst
insl
in
sub
xchg
mov
cmp
rorb
xchg
mov
lock
jns
sbb
add
and
xor
adc
add
mov
fnstenv
pop
arpl
in
shrl
call
lret
subl
js
cmp
cmp
imul
repnz
and
sbb
xor
mov
scas
sti
jae
out
push
loopne
xchg
add
push
or
xchg
adc
js
ss
dec
out
test
jg
lods
adc
rcrb
dec
xchg
or
loopne
lahf
cmp
lret
mov
out
test
push
pop
sub
add
stc
mov
and
adc
jecxz
adc
sub
and
fs
popa
fwait
test
pop
add
cmpsl
lret
sub
ljmp
cmp
call
je
add
movsb
stos
mov
lahf
dec
mov
mov
pop
inc
rclb
mov
cmp
rcr
xchg
push
movsl
pop
jp
hlt
mov
enter
push
fdivs
xchg
cmp
pop
int
imul
inc
rcrl
add
shl
mov
mov
add
xchg
fiadds
rorl
mov
adc
enter
xchg
out
adc
aad
outsb
add
or
cltd
mov
push
xor
les
pop
shrb
inc
adc
popa
cmp
sub
ror
mov
xchg
lds
arpl
je
push
sbb
push
mov
mov
push
mov
movsb
std
add
insb
mov
mov
cmp
dec
dec
add
cmpsb
jmp
mov
pop
ss
push
shlb
pop
dec
push
mov
fldl
out
or
pop
mov
add
push
xchg
push
add
jb
cwtl
mov
subl
xorb
aam
or
push
push
stc
sub
into
cmp
add
adc
add
cwtl
xlat
add
or
pusha
imulb
pop
hlt
xchg
jp
outsb
mov
ficomps
call
shr
mov
sahf
jl
out
inc
insb
popa
out
arpl
rolb
push
andb
inc
mov
cmp
rcll
push
sti
cld
enter
sbb
jmp
and
mulb
faddl
fisubs
fnstenv
ror
in
test
jp
dec
mov
icebp
pop
mov
adc
adc
sub
adc
andl
xor
mov
inc
fst
jmp
push
bound
pop
inc
mov
xchg
popf
les
and
popa
jmp
dec
jo
jo
mov
and
pusha
repnz
outsb
or
sbb
cld
pop
sub
incl
lods
sbb
cmp
and
fxch
push
jg
sbb
adc
or
inc
inc
cmp
mov
sbb
nop
inc
dec
sub
xchg
push
out
inc
cwtl
test
mov
aam
fisttpl
pop
frstor
inc
movsb
xchg
mov
mov
es
sub
lds
sub
and
mov
shrb
xor
ja
aas
mov
dec
dec
fcompl
and
cmp
mov
clc
das
mov
mov
test
daa
add
popf
movsb
adc
rorb
jecxz
sbb
int
rolb
pop
sbb
frstor
test
mov
push
dec
out
repz
lret
dec
mov
or
add
dec
push
ds
dec
dec
rorb
flds
mov
mov
pop
lcall
pop
mov
sbb
xor
and
add
or
outsl
stos
or
unpckhps
daa
mov
cmc
fbld
adc
pop
movsb
dec
cltd
nop
pop
sub
pushf
loopne
mov
in
xor
jmp
fyl2xp1
mov
xor
and
dec
fistpl
and
fs
mov
sbb
lods
icebp
mov
add
cmp
xchg
in
adc
mov
xorb
mov
popa
jb
xchg
lcall
test
sub
nop
and
addr16
add
add
nop
shll
or
or
addl
and
es
fwait
daa
aam
add
js
add
sub
mov
inc
call
rolb
test
add
scas
cwtl
pop
push
mov
je
sub
jno
in
fiadds
adc
sub
inc
mov
imul
add
xor
mov
pop
jg
faddl
lret
int3
enter
iret
or
aas
lods
add
test
mov
xor
push
mov
mov
adcb
dec
cwtl
add
and
imul
or
mov
pop
inc
dec
push
mov
ret
mov
xchg
add
or
orb
es
add
xor
mov
jae
mov
ljmp
pushf
hlt
inc
in
sub
lcall
test
adc
or
xchg
repnz
add
decb
ret
jae
push
xchg
aas
fbld
lds
cmp
insb
mov
dec
mov
add
sti
inc
cmp
dec
push
mov
mov
js
and
lods
call
aad
sub
bound
xor
in
incl
inc
adcl
das
and
rolb
add
ret
mov
lock
mov
xor
popf
nop
in
mov
pop
or
sbb
jmp
jmp
test
mov
inc
jmp
cmpb
cmp
add
mov
and
nop
and
or
mov
mov
mov
je
inc
and
or
xchg
pop
inc
dec
mov
xorb
movsl
daa
scas
pop
sbb
and
sub
mov
mov
stos
xor
mov
xchg
leave
push
aas
push
mov
inc
fsubl
inc
sbb
test
mov
fcomps
lahf
add
and
cmp
loopne
mov
jnp
jo
lret
jle
mov
add
cmc
xchg
push
out
mov
xlat
mov
out
xor
pop
in
aam
inc
inc
sbb
push
shlb
daa
imul
aam
jecxz
pusha
or
iret
xor
repz
cmp
nop
les
sbb
fisubrs
addb
sub
fnstsw
sub
sti
inc
or
pop
or
stos
subb
or
dec
imul
jmp
add
nop
dec
mov
add
adc
sbb
sbb
sub
loopne
xchg
adc
das
cwtl
and
add
jmp
pop
sbb
push
loopne
int3
inc
sub
adc
in
add
mov
add
js
jnp
bound
mov
and
inc
clc
movsl
xchg
hlt
cmpsl
lds
add
out
imul
or
push
ficomps
popl
popf
inc
cmp
sahf
or
stos
je
xchg
inc
sub
pop
sub
mov
fcmovne
stos
push
sbb
notb
nop
sbb
mov
js
sahf
lods
push
aaa
mov
pop
jl
fidivs
fdivrl
lock
push
cmp
rorl
xlat
or
jp
adc
ret
loope
pop
test
cmp
mov
lret
add
pop
lock
push
pushf
add
loope
add
fnstcw
push
adc
movsb
lods
pushf
add
add
cld
add
push
roll
mov
mov
orl
test
sbb
pop
js
inc
shrb
jmp
insl
and
test
push
cld
sub
cli
jl
xlat
mov
pop
in
add
xor
or
adcb
mov
and
inc
ffree
ret
rorb
dec
shlb
xchg
xor
mov
mov
mov
cmp
decb
sahf
add
mov
adc
add
pop
aaa
lret
xchg
sbb
push
pop
out
mov
ret
pop
xlat
clc
je
sbb
lcall
add
js
jl
movups
jae
dec
adc
addb
or
out
dec
sti
sub
or
add
rorb
in
arpl
lock
addb
test
fs
mov
out
push
inc
loope
inc
outsl
xchg
je
mov
add
cs
aaa
shlb
cltd
xchg
pop
cmp
push
push
lock
fcmovnb
sbb
insl
and
std
test
fwait
inc
and
js
out
xor
lock
jne
add
arpl
imul
ret
pusha
sub
rolb
insb
sarb
js
rol
and
dec
mov
adc
fwait
or
orb
pop
popa
nop
add
jnp
jp
js
mov
into
loope
es
sbb
call
out
ret
les
enter
pop
imul
int3
inc
jo,pt
push
mov
test
shl
add
xor
mov
jno
imul
aam
add
and
sbb
lcall
sti
enter
inc
push
out
mov
push
add
fs
adc
leave
gs
pusha
je
fstpl
sub
add
sub
sbb
int
mov
ja
pusha
int3
jne
cltd
or
xchg
stos
pusha
jb
xchg
cmp
xchg
imul
mov
or
mov
sbb
add
mov
aas
jae
adc
std
ficoml
sub
xor
gs
mov
icebp
sbbl
pop
fnsave
and
cmpsb
call
and
stos
lea
sbb
sqrtps
leave
mov
xchg
in
fiadds
pop
sbb
sbb
inc
cmp
popa
orl
lds
pmaxub
jle
push
into
add
xor
insb
lret
int
adc
or
or
outsb
inc
mov
pop
mov
ror
xlat
insb
roll
xchg
roll
mov
fstpt
xor
pop
data16
popf
mov
ljmp
roll
jne
and
daa
push
stc
dec
xchg
inc
pop
and
and
notb
sub
sbb
and
lock
adc
adc
iret
xchg
pop
mov
sub
jbe
imull
fdivr
into
xchg
and
fucomp
hlt
pop
adc
fs
ficomps
add
jmp
mov
jge
add
nop
lcall
int
aaa
mov
pop
test
dec
fdivrs
mov
ljmp
push
insl
imul
mov
add
lret
jecxz
mov
mov
lods
jmp
or
pop
in
daa
add
xor
fmuls
add
inc
je
mov
and
mov
xchg
jp
xchg
sub
push
jne
inc
ljmp
cmp
xchg
test
mov
xchg
rcrb
and
mov
in
add
mov
push
mov
lcall
dec
in
cmpsb
add
test
add
fcmovnu
sub
push
fisubrs
insl
iret
add
movsl
sub
shlb
pop
jmp
subb
leave
cwtl
and
addr16
lods
inc
mov
mov
inc
and
add
push
dec
sub
push
xor
dec
xchg
stos
ljmp
addr16
scas
lret
sarb
pop
jg
jnp
pop
sbb
int
mov
loope
xor
popf
lods
out
loopne
fnstenv
xor
bound
je
stos
aam
scas
push
inc
mov
push
dec
xchg
add
and
mov
jb
jmp
lds
rolb
inc
hlt
or
sbb
out
xchg
mov
pop
cmp
xor
adc
and
xor
add
mov
pop
out
and
imul
out
xor
int3
xorb
hlt
mov
mov
add
xor
cmc
cmp
stos
push
out
sti
sub
filds
test
popf
mov
xor
dec
push
jbe
dec
inc
sbbb
add
sbb
sbb
dec
sbb
aad
cmp
in
mov
nop
outsb
add
ss
repnz
pop
jecxz
mov
movsb
or
sbb
add
cmc
gs
out
inc
jge
push
add
out
adc
cmp
sub
int
pop
and
test
outsl
adc
aas
cmpsl
xor
xchg
test
mov
inc
lods
adc
pop
xchg
outsl
js
call
arpl
lock
push
push
add
mov
or
xor
sub
jecxz
add
cmc
ret
and
adc
sub
pop
or
in
pop
insb
add
xor
lods
add
add
cmc
add
push
aam
push
mov
fwait
mov
stos
aaa
add
dec
and
push
jbe
fadds
xchg
test
in
add
hlt
cmp
sub
jns
pop
mov
mov
leave
jecxz
pushf
xchg
add
rcll
pop
addb
movsb
out
add
cmpsl
xchg
xchg
in
sbbl
popl
lods
push
out
sub
add
adc
mov
or
mov
test
push
and
dec
leave
cwtl
add
mov
pop
add
mov
cmpsl
inc
lret
clc
rorl
pop
add
and
push
testl
hlt
add
insl
or
sbb
push
fst
pop
xor
add
nop
pop
in
std
js
add
dec
push
or
dec
in
add
mov
mov
push
and
sti
nop
jo
stc
fcoms
adc
out
and
scas
sbb
push
lock
cmp
test
add
aas
push
push
add
jns
add
sarl
or
ja
pop
shrb
lahf
stos
icebp
jle
mov
and
out
data16
cld
out
add
rorb
loope
push
inc
mov
dec
push
aam
add
aad
jbe,pt
rcrb
psrad
adc
add
in
pmaxsw
mov
pop
mov
sbb
inc
mov
jno
add
add
xor
push
add
dec
add
mov
push
fstpl
call
insl
ds
enter
psrad
in
mov
movsl
pusha
iret
xor
push
in
in
movsb
lret
call
mov
add
out
lcall
shll
je
out
ljmp
push
jno
xor
es
mov
add
jp
pushf
jns
lahf
fmull
cmp
mov
jge
inc
and
mov
loop
jl
outsb
add
adcl
mov
mov
fisttps
jge
or
aad
add
out
mov
inc
incb
adc
maxps
sub
pusha
xchg
mov
add
shlb
cmp
sbb
sbb
mov
xorl
pop
std
sbb
or
mov
dec
sbb
scas
gs
push
sub
sub
inc
lret
push
mov
aas
filds
sarb
or
jnp
in
imul
sub
loopne
frstor
pusha
push
sarb
testl
sub
test
mov
add
mov
test
lret
loope
mov
or
pop
insl
mov
cli
xchg
dec
es
sub
or
mov
mov
add
pushf
out
mov
add
imul
xchg
lret
stos
out
cmp
out
test
cltd
mov
mov
mov
add
data16
add
in
dec
dec
add
es
dec
cld
and
pop
jae
icebp
inc
adc
out
lock
and
push
cmp
mov
push
cmp
aas
dec
sbb
pminsw
addl
stc
rorb
add
sub
ljmp
inc
add
mov
mov
call
mov
in
sti
add
add
jbe
test
mov
add
cmp
mov
popa
dec
push
call
cli
and
nop
es
or
rcrl
mov
or
std
pop
insl
aam
aaa
lods
add
aad
inc
clc
add
jg
ja
cmp
cli
dec
loop
push
add
sub
push
inc
and
add
loop
test
aam
and
xor
fs
fsubl
lock
sub
enter
inc
loop
jle
das
cmc
jo
mov
mov
dec
mov
fsubrs
aaa
dec
dec
add
mov
push
mov
add
call
dec
sbbl
mov
test
dec
jmp
int
ss
orb
ret
add
nop
xchg
inc
rorb
daa
bnd
hlt
add
rcl
inc
mov
clc
cmp
popf
je
add
dec
addr16
add
out
scas
pop
rcll
mov
and
xor
add
and
xchg
stos
jne
mov
ss
in
mov
out
add
lea
cli
cmp
rorb
jle
pop
jno
add
jmp
clc
sbb
lret
add
inc
rcr
push
mov
cmp
sbb
adc
jecxz
insb
xor
data16
add
cmc
xor
ficomps
pop
pop
adc
add
sahf
push
popf
xchg
fdivs
cmp
js
jle
jns
stos
xor
add
mov
jmp
lock
mov
loopne
sbb
outsl
add
stos
xlat
nop
out
sub
sbb
mov
sbb
cmp
inc
pop
int3
push
push
mov
es
add
xor
loope
and
jne
or
push
aam
sti
add
testl
loop
lret
int
enter
sub
push
push
add
sub
or
sub
xlat
fdivrs
mov
mov
dec
sbb
testb
mov
loopne
out
and
and
push
mov
jg
jne
add
xchg
dec
sub
lret
cbtw
aad
pop
push
mov
adc
ljmp
sbbb
jnp
mov
add
fwait
cmp
add
push
jmp
popf
mov
movsl
add
iret
insb
add
mov
lock
xchg
mov
bound
add
add
iret
mov
push
in
add
cmp
push
inc
ss
das
cmp
add
xchg
mov
add
lock
fidivrl
ja
cltd
and
push
fdiv
inc
adc
cmpsb
pushf
xchg
jns
add
xchg
sbb
push
data16
pop
pop
add
out
out
divl
jmp
and
jl
push
out
ret
mov
xchg
xchg
cwtl
sbb
rcll
sub
add
add
movsl
inc
push
add
inc
imul
imul
dec
jnp
pop
add
push
das
inc
cltd
fistl
sarb
loopne,pt
loopne
out
inc
mov
rcll
xor
add
push
testl
adc
add
lcall
or
or
mov
clc
pop
sahf
jnp
or
shrb
mov
jge
sti
add
cmc
or
mov
insb
dec
dec
outsb
int3
sbb
push
adc
adc
scas
or
jl
sti
xchg
mov
loopne
inc
cld
addb
add
fcomip
cmp
cltd
aaa
jmp
and
pop
adc
add
aam
call
xchg
das
mov
push
incl
hlt
jg
stos
in
adc
pop
loopne
pop
add
je
andb
pop
xor
cmp
add
dec
repnz
iret
stos
rol
mov
push
inc
push
add
ret
add
scas
divb
mov
jl
add
sahf
and
loop
psubb
cmp
inc
adc
test
push
push
add
inc
ja
das
mov
push
pop
imul
inc
cmpsl
add
mov
pop
ds
push
fistpl
add
scas
dec
sahf
into
add
dec
jmp
and
jl
bound
je
mov
scas
and
or
push
popa
test
std
jp
dec
mov
jns
jg
test
ret
dec
sbb
inc
add
in
into
xor
addl
out
jg
mov
or
push
fsubrl
sub
add
and
les
add
and
jg
dec
pop
push
mov
mov
leave
jle
sub
pop
les
mov
dec
add
add
out
sarl
push
adcl
mov
mov
add
dec
mov
add
inc
sub
in
xor
pop
lods
movsl
bound
enter
dec
lcall
ljmp
addr16
ds
mov
lahf
push
stos
popa
xchg
cmc
push
cmp
pusha
sub
add
in
mov
lea
movsl
sbb
jle
push
xchg
add
das
lds
pop
lret
push
sub
jecxz
mov
cmpsb
sahf
mov
jae
clc
xchg
pusha
adc
sub
add
adc
push
push
jg
pop
fsts
in
out
mov
adc
pop
inc
xchg
ljmp
fists
adc
incb
mov
push
ljmp
adc
rcr
add
jecxz
repz
inc
popf
add
mov
or
fprem1
add
out
sbb
leave
imul
in
movsb
punpcklbw
and
mov
add
inc
sub
decl
testl
loop
cld
mov
add
xor
stc
add
int3
xchg
scas
fiaddl
mov
mov
jns
lret
add
mov
adc
add
mov
inc
and
std
cmp
cmpsb
lock
add
pop
stos
xlat
lods
push
jp
add
fbstp
les
lcall
jl
insb
add
push
and
pop
xor
cmp
xchg
fidivl
lock
rolb
cmp
inc
or
out
lds
mov
clc
int3
adc
imull
pop
std
jg
testb
cwtl
jns
add
ljmp
imulb
xor
insl
jg
add
or
pop
icebp
sbbb
mov
push
or
jno
sub
in
xchg
outsl
pop
loopne
xlat
scas
add
mov
xor
add
inc
repnz
push
inc
mov
sbb
gs
scas
in
daa
shlb
addl
mov
into
push
les
loopne
inc
add
cli
lea
jbe
fwait
add
dec
jb
or
mov
pop
in
xor
add
flds
add
and
test
pop
dec
sbb
test
lock
ljmp
mov
in
push
or
int3
xchg
les
dec
push
cvtdq2ps
adc
inc
stos
fiadds
inc
enter
sub
inc
xlat
xchg
or
sahf
jle
minps
inc
je
add
loopne
cs
mov
je
add
mov
push
pop
inc
push
cli
pop
sbb
push
add
popf
mov
add
pop
cmp
mov
push
test
sub
and
cmp
fs
pop
add
repz
jg
jg
mov
xchg
dec
repnz
add
mov
adc
jge
mov
sub
add
dec
push
fstpt
cli
cld
addr16
inc
addb
lds
sti
and
inc
add
push
mov
icebp
cmp
sarb
mov
fbstp
movb
flds
fiaddl
and
ljmp
notl
add
mov
hlt
js
or
loopne
mov
and
nop
popa
xor
lret
adc
and
add
mov
push
mov
or
ljmp
movsb
dec
jge
jle
xchg
pushf
push
cmp
mov
add
test
mov
adc
loope
inc
ss
lcall
mov
add
fs
adc
pop
loop
lret
lock
push
aaa
push
movsl
inc
jns
aam
cmp
test
sub
jbe
inc
popw
push
jmp
sahf
push
sub
or
xchg
out
and
psubb
movsb
ja
add
std
adc
sbb
add
scas
and
fimuls
push
sub
lds
pop
mov
push
xlat
lcall
pop
xchg
in
in
call
les
add
mov
add
lret
push
enter
jbe
subl
test
mov
test
in
pusha
jns
mov
jl
add
and
sub
cmp
xchg
jg
add
sbb
adc
adc
sbbb
scas
add
add
xchg
loop
push
imul
jle
add
in
jno
mov
std
and
adc
jb
add
mov
add
lret
lahf
mov
repz
sbb
add
xchg
fidivrs
mov
adc
mov
ja
in
cmp
fcomps
add
pop
cmp
aaa
push
test
scas
lret
clc
loope
mov
pop
cwtl
lds
adc
inc
cmp
mov
push
adc
add
clc
xor
jo
sbb
subl
mov
mov
addb
xchg
scas
add
pop
out
pusha
mov
bound
dec
sub
incb
add
cmpsl
jo
fs
mov
rorl
push
sbb
add
mov
popf
xchg
movb
jg
out
fsts
dec
and
adc
nop
mov
mov
push
lcall
or
cld
sub
nop
rcrb
ds
mov
add
ficoml
add
sbb
adc
xor
cmp
jmp
add
xchg
mov
mov
out
sub
pusha
adc
jns
cmp
push
cwtl
mov
pop
adc
pop
out
test
push
xchg
mov
gs
and
mov
push
sbb
mov
inc
pop
push
and
icebp
scas
jp
jl
add
imul
roll
std
into
orb
or
adc
sbb
add
push
fsin
mov
pop
cmp
sbb
pop
cmpsl
push
add
mov
cltd
jle
add
test
xchg
lock
add
pop
lahf
enter
xchg
fmull
pop
mov
loope
gs
xor
stos
jns
jge
stos
cmp
bound
or
aas
mov
movsb
xor
in
out
xchg
add
lea
mov
pusha
dec
mov
jecxz
and
sub
add
and
jge
cmpsb
arpl
bound
xchg
movsb
add
pop
push
shlb
ds
cmp
out
test
add
or
lahf
and
mov
cmpb
add
mov
test
repz
mul
sar
aad
xor
mov
add
or
in
push
mov
xchg
loope
rcrl
mov
js
mov
out
mov
xchg
pushf
movsl
aas
pop
hlt
push
inc
add
scas
repnz
popa
add
cld
leave
mov
cmp
adc
sarb
push
fiadds
bound
mov
popf
mov
stc
in
fadds
cmp
cmpsl
sbb
outsb
lahf
orl
pop
or
pusha
fucomip
mov
pusha
sbb
imul
clc
pop
inc
aaa
out
nop
ds
jno
cli
cld
xor
lods
in
xchg
xlat
pop
jnp
or
xchg
mov
pop
into
mov
sbb
push
js
gs
cld
xchg
cwtl
stc
xor
mov
adc
or
insb
inc
cmp
inc
in
push
jns
push
push
sahf
and
in
ret
imul
and
push
cmpsl
and
add
lea
dec
aaa
insl
mov
pop
ret
enter
mov
popa
imul
and
inc
sti
out
and
push
ljmp
add
sub
jl
in
xchg
stos
faddl
mov
xlat
scas
pop
je
and
jmp
int3
cmp
fisttps
dec
in
and
icebp
outsb
sbb
js
xchg
sbbb
cmpsl
cmc
xchg
inc
mov
xchg
shlb
test
nop
add
push
and
add
loop
mov
lret
add
jbe
rolb
push
sub
fwait
incl
pop
adc
fisubs
add
stc
mov
add
and
mov
or
or
roll
dec
insl
enter
xchg
lcall
push
jbe
or
add
or
adc
shll
jge
cmp
sbb
out
int3
stos
jg
repnz
arpl
pop
and
repnz
jae
jno
add
loope
inc
inc
hlt
and
mov
cwtl
fimull
popf
mov
add
push
out
aam
pusha
loopne
test
jp
mov
incl
cwtl
mov
out
pop
mov
mov
sahf
dec
sbb
mov
mov
enter
cmp
jb
les
cmp
add
sahf
sbb
jo
mov
adc
clc
scas
add
dec
sub
lock
and
mov
cmp
hlt
addb
pop
cmc
test
push
jae
adcb
mov
mov
shlb
dec
sbbb
add
js
push
lods
pop
mov
xchg
cmp
sub
and
xchg
or
jb
xlat
mov
pop
out
lret
add
fildl
testl
mov
xchg
hlt
int
fldenv
lcall
subb
mov
aam
pop
or
les
push
dec
xor
xor
sub
cmp
nop
mov
ja
dec
repz
mov
add
idivb
cmp
repz
xchg
fiaddl
fimuls
jge
test
inc
jl
sbb
loopne
pop
add
cli
mov
aas
jo
add
jp
sub
popf
dec
jbe
dec
cs
jl
mov
sahf
lods
out
pop
xor
pop
cltd
mov
sbb
add
lock
cwtl
lahf
cmpsb
test
ljmp
xchg
loop
pop
adc
je
sbb
sbb
and
sbb
add
das
mulb
add
std
inc
xchg
mov
lahf
xor
inc
scas
nop
std
add
rcrb
and
sbb
jge
into
sbb
ds
sub
out
xorb
fisttpll
repnz
aad
mov
adc
xor
jo
icebp
fwait
popf
pusha
adc
hlt
jno
inc
pop
add
pop
call
mov
add
mov
mov
adc
pop
testl
mov
adc
sahf
add
outsl
mov
push
add
pop
fs
and
push
push
pop
sbb
jne
cmp
mov
stos
lahf
stos
xor
add
insl
sub
shll
adc
mov
jecxz
cmc
dec
mov
sarb
jmp
mov
pop
push
lahf
sub
inc
mov
xchg
imul
add
int3
leave
into
xchg
sbbb
pusha
adc
inc
pop
add
pop
mov
in
in
pushf
push
add
fidivrs
and
aaa
roll
js
pop
mov
sub
push
addl
sub
jle
jl
leave
je
add
test
cmp
in
test
ljmp
add
xor
sarb
cmpsl
cmp
icebp
inc
loopne
add
add
sbb
push
pop
add
sub
fisubl
adc
cwtl
out
inc
sbb
mov
dec
ret
cmp
add
ss
fsubr
lret
lds
or
leave
mov
inc
pop
pop
insl
xchg
dec
fcmovnbe
ret
pop
imul
shll
sbbb
out
inc
sub
or
pop
or
daa
xor
mov
add
mov
jge
fadds
push
push
cwtl
or
inc
adc
sub
inc
push
or
push
dec
add
sbb
orl
inc
mov
mov
out
jge
lret
jmp
mov
push
jecxz
cmp
xchg
add
je
add
mov
hlt
sbb
add
cmp
cwtl
or
sti
xor
xlat
mov
ret
imul
imul
sbb
and
xchg
test
cltd
fstpl
imul
loop
aad
jl
popa
jns
jo
fs
les
mov
xchg
movl
xchg
xchg
mov
bound
or
rolb
jo
sub
in
cmp
js
sahf
and
fsubs
cmpb
call
pop
js
bound
push
enter
outsb
push
push
aas
sub
dec
das
or
xchg
add
jno
mov
push
or
lock
adc
loope
adc
mov
popa
add
aas
pop
xchg
mov
fisubl
or
ret
add
fnstcw
sub
xlat
jp
out
sub
push
mov
js
sub
out
movsb
xlat
test
adc
and
dec
js
push
cli
in
xchg
fmul
mulb
xchg
adc
xor
or
popf
test
jl
insl
adc
cmp
jl
call
shlb
and
imul
inc
add
pop
pop
dec
adc
push
mov
inc
enter
js
test
or
adc
fisubl
mov
inc
enter
je
mov
daa
aam
cmp
xorb
xor
incl
mov
pop
lret
cld
mov
pop
andl
add
inc
jmp
leave
adc
flds
pop
test
pusha
dec
fists
cli
cmp
dec
incb
dec
scas
loop
orb
hlt
pop
add
push
inc
loopne
xorb
aad
andb
add
stc
sub
mov
add
inc
lret
mov
mov
loope
lahf
fbstp
in
add
add
xchg
test
mov
clflush
add
mov
inc
cld
cmp
xchg
push
mov
jnp
mov
inc
hlt
add
or
fsubrl
and
daa
add
pop
jg
sbb
mov
cmp
shl
jne
cli
in
clc
add
iret
scas
test
test
mov
xchg
or
insl
in
mov
push
mov
sub
add
shlb
pusha
mov
ja
sub
addb
out
js
jno
ret
cmpsb
dec
mov
pop
add
push
push
call
subl
mov
add
mov
xor
pusha
xchg
mov
je
clc
int3
testb
inc
xor
arpl
and
test
ljmp
xor
imul
and
sub
lds
js
mov
mov
adc
flds
pushf
push
outsb
mov
add
adc
test
fsub
cmc
shrb
or
add
sbb
clc
adc
and
and
push
pop
icebp
adc
pop
jo
sti
or
add
lea
gs
add
stc
add
in
or
sti
inc
hlt
aad
pop
mov
adc
pop
dec
adc
addl
movl
test
icebp
lret
int
call
subb
aad
xor
or
mov
addl
sub
std
insb
cs
xor
mov
fs
fbld
scas
ficoml
imul
lahf
mov
and
cmp
lahf
aad
push
sbb
arpl
add
imul
ss
adc
adc
push
adc
sbb
popf
mov
xor
pop
cltd
mov
dec
pushf
enter
cltd
ret
or
mov
adc
iret
add
inc
sbb
addb
xor
sub
adc
push
inc
and
sahf
sbb
popa
sub
add
adc
add
lock
dec
adc
sbb
divb
gs
xchg
cvtpi2ps
addl
xchg
push
popa
pop
adc
mov
ja
adc
adc
xorb
or
icebp
cmpsl
in
fs
xor
cwtl
and
inc
outsb
xor
faddl
xor
inc
add
dec
sub
lock
add
or
inc
loop
movb
push
pop
lea
lcall
mov
in
pusha
fisttps
push
icebp
xchg
test
cld
adc
push
imul
sarb
ret
adc
dec
loopne
mov
test
and
push
loopne
shlb
imul
sbb
data16
sbb
sub
mov
lea
and
sbb
fsubl
bound
and
cwtl
js
pusha
sbb
mov
cmp
xchg
and
add
subl
cmp
xor
adc
pop
imul
pop
jbe
mov
bound
adc
daa
fsubs
rol
jmp
repz
aam
imul
dec
mov
pop
rol
jae
lret
mov
and
leave
test
add
imul
add
loope
lret
pop
enter
pop
sub
jo
or
xchg
cmp
addr16
call
dec
bound
pop
je
daa
mov
add
js
adc
lret
enter
adc
mov
mov
mov
or
inc
imul
cs
hlt
inc
clc
xchg
out
push
push
xlat
jno
push
xchg
mov
adcb
cs
lahf
nop
or
cmp
movsb
in
push
add
jmp
pop
dec
pop
je
sbb
orb
and
jno
cmp
push
filds
jo
cmp
out
sub
xchg
aas
inc
lock
or
rcrb
add
xlat
mov
mov
ljmp
adc
iret
pop
dec
pop
loopne
daa
adc
push
cmp
and
cmp
pop
pmulhw
sahf
dec
mov
pop
fmul
out
adc
cmp
enter
mov
les
jo
cwtl
adc
jne
xor
sub
sbb
sbb
and
mov
add
xor
push
je
sub
inc
dec
add
test
mov
mov
and
add
mov
outsl
rolb
mov
les
shll
jecxz
cld
xchg
adc
add
fbstp
mov
popa
cmp
inc
sbb
pop
sbb
test
cmp
fidivs
adc
jns
adc
xlat
dec
aas
xchg
sub
call
add
in
pop
mov
push
inc
out
cmp
mov
ds
or
lods
jo
imul
ret
popl
sbb
loopne
and
and
sbb
dec
xor
inc
stos
lret
es
loope
mov
cmp
and
add
loope
mov
adc
mov
test
mov
mov
ja
or
xor
sub
or
lcall
adc
pop
mov
subl
xor
ds
pop
loop
add
enter
inc
shrb
sbb
sarl
sbb
mov
pop
fisttps
push
add
pusha
sbb
and
add
dec
mov
imul
iret
mov
in
push
sarb
cmpsb
addr16
add
xor
repz
inc
sub
leave
enterw
nop
cmp
pop
push
pop
sbb
mov
mov
sbb
mov
adc
xlat
fbld
pop
enter
nop
mov
in
cmp
into
jno
cli
inc
cmp
subl
pop
sbb
icebp
shlb
ret
pop
inc
inc
daa
aam
mov
data16
dec
xchg
fcomps
mov
cmpb
pop
jo
int3
adc
and
jp,pt
in
adc
sub
mov
insl
pusha
pop
inc
xor
cs
and
inc
or
cmp
roll
addl
arpl
or
adc
test
int3
shll
pop
data16
gs
mov
sbb
in
call
outsb
cli
push
xor
sti
rorl
loope
or
mov
cmc
fstpt
xor
pusha
sbb
push
mov
xor
xchg
add
inc
test
in
or
jno
loopne
test
add
cmp
jo,pn
mov
pop
and
sbbb
inc
pop
iret
add
leave
gs
mov
jmp
xor
and
in
xchg
or
pop
lds
les
repnz
aad
adc
daa
mov
mov
jno
cmpsl
inc
add
imul
lcall
add
sub
outsl
ljmp
inc
jb
sbb
test
xchg
jno
rorb
jnp
jo
or
lea
loopne
mov
enter
sub
adc
outsb
pusha
mov
dec
xor
das
hlt
pop
sbb
and
aad
inc
fisubs
test
adc
leave
mov
scas
ja
sbb
add
or
mov
aam
movsl
or
orb
add
out
loopne
cld
mov
or
sub
addr16
add
jnp
out
test
sub
pusha
fs
add
dec
sub
test
in
xor
js
push
xchg
jle
in
test
adcb
and
add
xlat
adc
jne
push
xchg
into
sbb
and
test
sbb
nop
cmc
adc
adc
scas
fsubrl
dec
inc
inc
add
mov
outsl
repnz
test
js
loope,pt
mov
jecxz
loopne
push
out
jmp
xor
push
xchg
sub
cmp
in
ja
jl
jmp
adc
clc
subb
dec
xor
jb
xor
aad
test
in
fisttpll
lods
in
and
bound
xchg
fiaddl
xor
add
cmpsl
xchg
xor
push
fidivrs
jnp
push
push
in
rcrl
mov
enter
test
add
sub
mov
lds
int
mov
clc
cmpl
sub
dec
cs
call
xchg
mov
jp
sub
dec
aas
js
sahf
outsb
mov
adc
cli
shrb
es
fistpll
out
adc
pop
xor
adc
icebp
pop
test
das
into
rcrb
jmp
mov
mov
mov
xlat
js
and
and
jno
push
fildll
lret
test
orb
cmp
gs
xorb
into
jg
or
aas
rolb
mov
and
nop
enter
sbb
scas
jmp
mov
xchg
addl
and
es
cmp
adc
roll
fsubr
and
xchg
pop
dec
mov
adc
daa
iret
insb
push
js
lock
add
mov
xchg
add
es
out
mov
jne
leave
insl
sbb
lods
js
mov
ds
mov
jns
nop
ret
data16
dec
pop
jo,pn
inc
add
leave
add
out
rcll
cmp
push
rol
pusha
pushf
xor
fsts
add
xor
or
lahf
mov
cld
sbb
fld
adc
test
insl
and
inc
sub
pop
adc
rcll
fnstcw
insl
fs
add
mov
loop
adc
rolb
push
adcb
cmp
dec
or
mov
xor
sub
bnd
call
mov
or
popa
sub
cmp
mov
mov
rolb
sti
repnz
push
sbb
cmpb
xor
dec
jp
pop
mov
jle
int3
adc
push
fsubrs
add
daa
sub
or
int3
movsl
orb
je
sub
adc
push
mov
add
addr16
jp
loop
cld
push
inc
cwtl
xchg
mov
mov
cmp
sti
or
pop
loope
or
hlt
add
imul
fsts
inc
lds
pop
push
sub
sbb
dec
pop
push
and
xchg
add
inc
push
addr16
data16
mov
push
mov
xor
aad
mov
mulb
jbe
cmp
fmull
sub
es
loopne
insl
mov
sbbb
mov
jp
sbb
insl
add
inc
fs
fldcw
inc
cmp
mov
sbb
mov
or
jns
mov
mov
out
push
push
fwait
add
outsl
ds
inc
loopne
xor
sub
in
cmp
outsl
xor
sub
or
out
dec
lret
xchg
rolb
add
push
pop
sbb
push
add
les
lcall
mov
push
add
mov
jae
jae
pop
into
aas
andl
aam
mov
pop
pusha
roll
pushw
cmp
pop
jbe
lcall
push
sub
leave
in
adc
je
sahf
test
adc
sbb
add
std
int3
xor
or
inc
or
mov
inc
in
and
or
loope
cmp
mov
push
xor
leave
add
sbb
sbb
inc
sbb
jge
dec
pusha
jo
bound
xchg
push
leave
data16
xor
mov
test
push
dec
xlat
pushf
imul
shlb
aam
and
das
xor
push
or
rcll
xlat
test
popf
inc
call
add
arpl
xor
shlb
iret
adc
aas
gs
lds
outsl
rcll
add
ds
sbb
xchg
xchg
push
and
shrb
cli
adc
and
adcb
mov
sub
or
pushf
add
or
xchg
out
lret
xchg
xor
js
repz
xchg
inc
incl
add
jmp
mov
inc
adc
mov
or
mov
adc
cmp
rolb
in
je
add
insb
sahf
dec
loope
cmp
iret
lea
pop
sbbl
pusha
cmp
xlat
out
or
xor
or
inc
jne
shrb
adc
or
dec
rcrl
sbb
adc
push
mov
pop
rolb
jae
in
incb
adc
aam
cmp
adc
sbb
cmp
movsl
addl
aad
push
dec
lret
lahf
test
dec
popf
loop
mov
add
loopne
mov
mov
sub
inc
aam
in
sbb
ja
popa
jmp
xor
inc
push
or
bound
enter
pop
leave
inc
mov
inc
sbb
mov
es
icebp
push
xor
push
sbb
mov
push
sbb
inc
inc
mov
insl
cltd
stos
pop
xchg
or
out
pop
lea
dec
or
mov
sbb
insb
inc
ret
sbb
rorb
push
sbb
mov
enter
inc
cld
cmp
inc
and
sbb
adc
sub
mov
nop
sbb
repnz
xor
inc
inc
or
sub
adc
sbb
mov
jecxz
and
pop
mov
je
iret
mov
mov
adc
xor
enter
andl
daa
loopne
call
xchg
add
iret
add
js
jo
fiadds
fldl
dec
and
mov
fbld
xchg
iret
adc
push
mov
lret
lock
push
mov
rolb
aas
icebp
clc
add
movsl
inc
push
imul
mov
pop
inc
in
mov
imul
push
sarb
notl
jns
sbb
aas
mov
mov
addl
pop
call
clc
fwait
aas
dec
out
add
inc
inc
outsb
ss
dec
xor
subl
sbb
clc
lock
mov
in
pusha
int
and
xchg
mov
sub
xchg
jbe
jo
lcall
lahf
rol
fcomps
call
leave
shrb
mov
rolb
in
test
cltd
pop
outsb
stos
faddl
mov
inc
adc
or
sbb
cmpsl
add
sti
inc
movsl
out
popf
push
mov
or
mov
add
mov
jge
add
rcrl
cmp
dec
into
cmp
fs
aam
mov
cmpl
cmp
cmp
arpl
xor
add
in
xchg
ja
es
addb
insl
fadd
scas
bound
mov
sub
jns
add
test
sbb
out
lock
je
jmp
and
push
jmp
sub
sahf
sub
and
pop
mov
push
sti
mov
dec
adc
loop
add
pop
and
loope
and
or
pop
add
imul
add
push
rolb
les
sarb
rolb
flds
test
out
push
lret
rclb
mov
js
inc
sub
outsb
push
ja
rcrb
xchg
jnp
mov
pop
jg
add
push
sbb
jo
movsl
stc
jae
add
cltd
pop
dec
add
sarl
add
dec
push
sti
mov
cmpb
jp
clc
adc
dec
sub
leave
and
xchg
mov
call
test
xor
add
mov
add
into
jg,pt
or
fucomp
jle
jmp
add
lods
and
mulb
loopne
or
test
adc
dec
in
addb
fsub
nop
gs
lock
dec
testl
ret
adc
test
pop
jns
add
mov
aas
xor
jo
adc
mov
push
sbb
mov
add
push
sub
shll
aad
popa
testb
stos
and
add
pushf
push
mov
mov
sub
lock
mov
or
jmp
leave
push
out
add
jno
cwtl
nop
rcrb
mov
cmp
and
nop
test
add
inc
imul
sbb
jp
rorb
mov
mov
add
sbbb
add
call
lods
add
mov
add
inc
ret
dec
xchg
stos
scas
add
pop
xchg
mov
cmc
mov
push
clc
sbb
or
pop
sub
decb
or
test
sbb
cmc
loopne
or
add
pushf
icebp
mov
call
loop
dec
xor
nop
sbb
mov
or
enter
out
ret
inc
pop
mov
pop
or
lret
cli
ret
cmp
movb
sub
pop
into
lock
and
divb
ss
lods
sub
cmp
jl
dec
mov
shlb
negl
add
scas
cli
fstpt
dec
aaa
andl
je
add
inc
xchg
lock
pop
call
ss
loop
pop
dec
cwtl
mov
hlt
sub
loope
xlat
fs
mov
add
stos
mov
adc
std
fsubrs
data16
add
push
imul
shr
clc
add
inc
jge
in
cmp
dec
sbbl
adcb
mov
push
mov
push
add
xchg
test
inc
ds
std
ss
jbe
test
mov
cmpsl
xor
mov
push
sub
xchg
daa
jl
xlat
add
rorl
in
ljmp
cwtl
inc
dec
roll
mov
leave
imul
mov
add
push
jb
into
roll
rcl
sbb
jns
clc
dec
test
shll
cmp
push
divb
add
jnp
hlt
rclb
fadds
dec
mov
rorl
xchg
lret
cs
add
cwtl
outsb
add
jmp
push
or
add
fwait
pop
loope
cs
pop
push
push
enter
lcall
cmp
and
add
dec
cmpsl
sub
out
add
les
inc
mov
sbb
mov
test
ficompl
fwait
jb
lds
testb
dec
bound
push
cmpxchg
lahf
add
not
roll
adc
mov
or
test
gs
ret
ret
xor
adc
loopne
rcl
sub
lahf
rorb
jge
add
xorl
pop
mov
nop
ds
in
mov
mov
jnp
pop
add
fwait
pop
lret
push
add
faddl
insl
add
cwtl
or
adc
and
fwait
add
mov
aad
add
pop
movsb
lcall
fidivrl
pop
mov
in
cmpsl
pop
ss
add
pop
popa
and
ficoms
add
push
push
inc
jo
mov
sbb
add
js
jg
fmul
add
pusha
adc
inc
mov
aaa
mov
add
cmpsb
lods
nop
mov
inc
dec
mov
in
or
pop
test
sub
mov
jbe
xchg
addr16
aaa
or
sub
mov
imul
stc
adcl
or
sahf
bound
add
insl
shr
int3
into
jae
scas
add
push
xlat
out
bound
push
adc
xchg
pushf
add
push
dec
fmuls
cmp
mov
sbb
mov
int3
clc
dec
add
or
add
fstpl
push
mov
andl
fimuls
pusha
mov
mov
lds
cmp
push
scas
stos
into
in
and
add
gs
pop
rorl
aaa
push
mov
insl
add
lods
in
cmp
mov
out
add
jl
pusha
jmp
mov
mov
test
enter
bnd
inc
cmpsb
sbb
cmp
cmp
add
es
test
or
push
sbb
add
mov
xchg
add
sub
data16
popf
pop
adc
mov
dec
mov
insl
and
jo
int3
jl
jp
jb
dec
pop
aaa
iret
add
pop
add
call
clc
je
push
add
jae
loopne
out
dec
std
sti
jg
pop
mov
mov
inc
xor
add
xchg
out
mov
pop
jg
les
idivl
add
and
movl
mov
add
cmp
clc
popa
inc
push
test
dec
and
sti
add
sar
mov
jnp
popl
sbbl
sti
inc
std
loopne
dec
mov
xchg
jns
fcom
rorb
ds
jl
sub
out
sarl
mov
add
jb
lock
dec
popf
add
lock
cmp
add
push
jne
fcompl
aaa
cli
fs
cmp
dec
andb
addr16
mov
mov
add
xchg
and
push
jns
dec
clc
xor
imul
add
mov
fdivrl
add
push
mov
cld
inc
jno
or
add
push
rcr
fisttpl
cmp
add
outsb
je
in
loope
add
xlat
stos
or
gs
mov
leave
add
fsubrl
dec
xor
and
xor
jb
mov
aas
dec
or
add
pop
and
fs
fucomp
add
je
aas
sub
sbb
jb
cli
jbe
mov
lock
xor
out
sbb
sbb
movsb
pop
fs
and
add
mov
adc
or
sbbb
pop
lret
mov
icebp
jae
push
scas
pop
test
push
ds
or
adcb
pop
mov
push
out
mov
dec
aas
cmp
icebp
sbb
sbb
add
xchg
push
cmovo
fxtract
add
ret
in
sub
pop
repnz
jnp
cmp
addb
test
inc
and
stos
cmp
fstpt
xor
jmp
sbb
loopne
cmp
mov
mov
add
lds
add
cmpsl
outsb
mov
add
dec
mov
js
in
movsb
cmp
cli
xor
fldl
cwtl
or
jecxz
js
enter
xor
aam
lcall
out
inc
aad
clc
jp
add
pop
jno
sahf
fwait
mov
xchg
mov
clc
int3
mov
fildl
lret
test
lret
je
je
add
dec
adc
in
jl
roll
and
lds
inc
mov
adc
into
or
add
movsl
mov
jmp
shlb
inc
cld
push
mov
mov
add
stos
addr16
jl
sbb
dec
fsubrs
add
sub
or
mov
jb
add
inc
out
stc
mov
popa
test
pop
scas
jmp
adc
roll
sub
cmp
cli
push
mov
add
lea
add
jmp
or
bound
pushf
and
mov
mov
dec
sbb
xor
xchg
cmp
sbb
adc
jno
sub
pop
mulb
pushf
push
jns
add
dec
pop
xor
jb
lock
add
or
popa
dec
adc
cmp
sub
adc
inc
iret
xorl
in
sbb
and
dec
ja
add
sub
mov
add
incb
add
insb
imulb
jge
push
push
nop
fmuls
mov
int
frstor
pop
sti
xchg
xor
sbb
mov
decl
dec
imull
push
push
xor
pushf
mov
cmp
jo
lods
shrl
mov
sub
mov
dec
push
pop
sub
mov
shll
hlt
nop
inc
fcmovb
popa
icebp
or
ljmp
rolb
or
mov
stos
mov
mov
inc
sbbl
jae
mov
outsb
adc
jecxz
inc
dec
addr16
iret
out
add
sub
add
mov
mov
xchg
fiadds
rcrb
lods
mov
jne
fstl
lock
add
ljmp
fwait
add
stos
xchg
loope
cmp
cwtl
popf
add
push
mov
in
cmp
out
add
mov
popl
adc
lret
shrb
cmp
xor
sbb
push
loope
xor
or
and
push
add
add
gs
inc
repnz
pop
and
rorl
sbb
xchg
test
dec
push
push
iret
scas
mov
pop
pop
adc
cld
int3
or
in
sub
xor
push
sub
adc
imull
inc
lret
fdivrl
add
sbb
or
out
add
inc
imul
or
or
ds
mov
push
ret
pusha
dec
and
cld
mov
xchg
sbb
mov
xchg
imull
pushf
shl
pusha
fisubrl
xchg
mov
movsl
jns
or
js
xor
lock
adc
clc
mov
lea
in
add
push
xorb
mov
inc
incl
jb
or
or
les
push
pop
pushf
inc
add
movntq
hlt
push
add
int3
or
xor
cmove
dec
les
mov
push
cmp
sbb
pop
inc
inc
jo
jne
sub
jmp
fsub
dec
ss
pop
and
or
inc
adc
out
or
or
push
pushf
lock
sbb
mov
add
in
or
xor
test
cmpsl
mov
shl
xor
pop
pusha
mov
decl
mov
and
cmp
cltd
mov
sbb
inc
mov
or
xchg
or
adc
push
add
lds
push
xchg
sbb
insb
mov
hlt
adc
testb
imul
dec
scas
mov
and
sub
subb
cmpsl
cs
leave
lds
cli
mov
or
cmc
jb
inc
and
add
sub
out
mov
into
aad
pop
clc
adc
hlt
adc
sti
add
rorb
loop
cmpsb
loop,pn
repnz
call
or
xlat
test
cmp
sub
jle
push
inc
pushf
or
mov
push
dec
or
es
xor
mov
and
add
push
dec
or
cltd
add
hlt
jb
cmp
add
sarb
xor
push
outsb
inc
cmp
push
sub
xor
pushf
adc
jb
enter
jo
and
pop
rolb
cmpsb
in
lock
inc
add
std
bound
adc
xor
pop
lret
inc
add
cmp
mov
fwait
dec
push
movsb
mov
xchg
int3
inc
mov
mov
mov
mov
incb
ret
test
mov
lea
aaa
rcrl
aas
lcall
pop
add
out
or
push
dec
inc
adc
push
pop
push
mov
mov
sbb
or
out
pinsrw
popa
cwtl
js
ret
add
mov
pop
roll
and
xor
xor
pop
or
addr16
mov
insl
inc
daa
jmp
inc
popa
into
jno
adcb
xor
adc
pusha
pusha
dec
or
ljmp
repnz
lds
push
dec
in
push
adc
or
out
pop
bound
sub
in
sti
jb
jne
mov
jge
fidivrs
push
adc
pop
sub
mov
lods
mov
adc
test
dec
jmp
ret
loope
mov
outsb
cmp
pop
or
adc
xorb
sub
cltd
mov
adc
adc
jns
insl
sub
pop
repnz
pushf
jae
aas
mov
imul
nop
sub
adc
mov
jle
push
movsb
jns
dec
and
stos
sub
arpl
mov
outsl
test
shl
mov
and
xchg
mov
inc
std
xchg
lret
pop
sarb
and
out
jecxz
gs
xor
sub
add
cmp
xor
push
cwtl
mov
mov
add
enter
lret
or
les
dec
mov
daa
push
adc
dec
inc
pop
add
loop
out
xor
in
cld
jno
test
dec
xor
cld
in
lret
pop
and
xor
call
fdivl
and
subb
pusha
sarl
imul
fmul
xchg
orb
cmpsl
mov
and
ret
addb
jae
enter
es
pop
lods
pop
arpl
pop
test
jmp
call
jb
je
cwtl
add
jg
xchg
test
mov
cmp
in
adc
or
rorl
mov
js
adc
int3
add
pushf
scas
jb
inc
mov
dec
jns
jno
mov
xor
jne
cmp
sbb
pop
mov
inc
nop
scas
push
movsb
lock
hlt
and
add
test
in
mov
loope
iret
or
xchg
and
inc
lret
test
cmpsb
outsl
dec
movsb
popa
xor
int
adc
sbb
adc
pop
andb
add
sbbb
push
jmp
adc
inc
and
adc
jecxz
mov
mov
cmp
shll
sbb
sub
jl
mov
push
pop
pop
xchg
cmp
xor
data16
pop
sti
sub
addb
jbe
cmp
sbbl
stc
fwait
sub
xorl
mov
sbb
jge
add
sti
shrb
cwtl
icebp
les
jno
imul
mov
add
mov
stc
loopne
dec
jle
aas
or
nop
and
loopne
push
repz
test
or
pop
test
bound
push
pop
mov
es
mov
int3
mov
cmp
mov
or
pop
pushf
mov
mov
pop
pushf
sbb
add
dec
adc
sub
mov
sub
rcl
sbb
add
sub
cmc
and
add
faddp
icebp
lsl
push
adc
aad
cwtl
pop
jmp
enter
and
mov
mov
add
rcrl
punpckhbw
xchg
jg
push
xchg
mov
jo
int3
mov
cmp
js
fisubrl
sub
ja
mov
inc
pop
cmp
and
andb
adc
sti
out
or
add
pop
mov
add
and
dec
jo
sti
daa
cmc
and
pop
inc
out
loopne
sbb
or
or
mov
pop
or
fadds
cmp
add
jns
add
je
rcrl
mov
xor
or
mov
pop
sbb
xor
dec
or
test
dec
xor
stc
fnstsw
mov
sarl
xchg
inc
and
jmp
mov
cmpsb
into
inc
jl
mov
insb
sbb
xchg
and
andl
inc
dec
aad
sub
pop
popa
mov
inc
dec
sbb
out
rcl
push
jmp
jg
rol
sbb
cmp
outsb
mov
pop
inc
pop
add
mov
leave
shrl
lret
push
inc
cmp
sub
call
push
or
push
movsb
mov
les
orb
push
cltd
xchg
jns
inc
movl
mov
dec
orb
add
push
mov
cmp
mov
fcom
loopne
mov
push
inc
and
cmp
add
les
sahf
movsb
xchg
push
pop
xor
cmp
and
sbb
es
cld
xor
cs
sti
push
cmpb
vmwrite
add
xchg
loope
mov
jo
mov
pop
jne
adc
xchg
fs
sbb
or
aas
adc
pusha
js
inc
cmpsl
sub
inc
enter
scas
out
pop
push
dec
push
mov
sbb
push
pusha
nop
inc
cmp
xor
or
cmp
add
mov
rol
xorb
lea
or
ss
loopne
push
int3
push
scas
jle
xchg
popf
push
adc
pop
mov
pusha
enter
cmp
movsb
in
add
adc
sub
loopne
add
pop
inc
inc
loop
aaa
call
outsl
aad
rolb
or
or
sbb
cmc
rclb
add
inc
mov
sbb
dec
in
pusha
pop
jmpw
mov
fs
int3
and
add
inc
inc
jno
dec
or
mov
fstpl
gs
in
pusha
lcall
xchg
movsb
xor
add
xor
or
daa
mov
call
add
cmc
fwait
rcr
repnz
adc
xor
jle
and
mov
lock
sete
mov
add
cwtl
adc
pushf
inc
jnp
adc
subb
js
lds
orb
adc
and
sub
jge
out
cmp
jo
inc
js
pop
push
test
sti
and
mov
push
faddl
inc
and
ret
mov
mov
mov
fwait
jae
cld
lods
out
std
xchg
les
js
mov
sbb
imul
enter
inc
movsb
test
punpckhwd
fnstsw
add
push
bound
cmp
or
daa
jo
add
lahf
xorl
popa
decl
lea
sbb
adc
pop
push
enter
add
mov
out
adc
push
add
inc
push
hlt
mov
in
sub
mov
add
rcrb
pop
scas
adc
test
test
test
sbb
loope
stc
into
leave
fsubs
je
mov
enter
pop
shlb
or
dec
add
pop
pop
push
add
inc
sbb
mov
test
shr
inc
pop
add
repz
addr16
push
pusha
xchg
add
dec
add
pop
jae
mov
mov
jo
and
xchg
jmp
test
mov
or
into
mull
cmp
rcll
subb
mov
push
jp
ret
ds
ja
lock
mov
sub
adc
rorb
lods
cmpsb
aas
xor
subb
mov
sar
out
sbb
sub
dec
push
push
dec
xor
jecxz
adc
mov
mov
orl
xchg
jne
push
movsl
nop
xlat
push
sbb
xor
divb
mov
cld
test
and
in
ret
leave
movsb
sbbb
pop
in
aas
jb
adcb
adc
aaa
push
notb
and
rolb
lea
mov
jno
xchg
xchg
mov
fmull
inc
aam
pop
adc
push
sub
xchg
add
dec
sub
fimuls
add
pop
add
cmp
insb
jle
sbb
fidivl
lds
lods
jno
lock
pop
outsl
push
inc
imul
and
mov
xor
add
or
add
cmp
enter
inc
mov
sbb
stos
inc
pusha
add
sub
call
dec
cmp
sbb
pop
add
push
jmp
add
dec
aas
rcll
movsl
js
push
jp
loopne
cmp
jge
rcr
insb
lea
mov
insl
ja
add
cmpsb
mov
inc
pop
and
in
add
pop
inc
cmp
rcrb
push
xchg
shll
je
sub
adc
addb
inc
inc
mov
jbe
ss
movsb
inc
xchg
and
aas
ja
dec
test
add
or
inc
aas
sub
rep
daa
add
adc
ss
cmp
jg
nop
jns
sbb
xor
mov
mov
cmc
mov
xchg
orb
cltd
int
popa
test
pusha
jbe
daa
sbb
xchg
rcr
sub
shr
push
cli
pusha
nop
mulb
sub
rol
sbb
nop
jle
in
subb
and
int
xchg
xchg
cmpsb
jns
xchg
adc
std
add
inc
adc
push
insb
or
add
sub
sbb
inc
add
flds
dec
fs
mulb
inc
ret
loope
xor
repz
lds
pop
sti
mov
mov
cmp
adc
cmp
xor
fisubrs
cmp
enter
push
stos
test
test
iret
xor
or
sub
cld
mov
xor
jg
leave
pop
lcall
popf
shl
or
xchg
mov
sbb
and
and
lods
sbb
inc
int3
sub
xchg
nop
pop
mov
sub
or
or
jbe
stos
andl
pop
test
or
jne
cwtl
xor
aam
mov
loop
xor
movsb
add
cmp
lock
jb
add
push
xor
xchg
sub
insb
dec
jb
clc
add
add
pusha
clc
loope
lods
inc
xchg
pusha
add
sub
int3
xor
cmp
cs
enter
push
pop
lret
in
test
and
mov
add
or
add
fdivs
hlt
iret
rclb
inc
lods
enter
je
jmp
push
mov
xor
adc
sbb
iret
inc
rcll
sub
pop
dec
hlt
or
cmpsb
jne
nop
rolb
outsl
popa
jno
mov
sbb
mov
lods
cmp
addr16
insl
push
jbe
add
adc
int
loopne
js
sbb
jp
and
movsb
hlt
adc
add
popa
jle
push
jbe
adcl
adc
sbb
fsts
mov
cmp
push
sbb
into
push
lock
and
sti
and
outsl
hlt
es
dec
add
adc
test
adc
cmp
xor
scas
add
mov
les
inc
hlt
hlt
cltd
pop
rcll
outsb
lock
test
stc
pushf
jne
or
mov
xchg
mov
and
nop
nop
insb
sub
xchg
movsb
cs
add
jl
cmpsb
push
mov
cmp
push
adc
pop
mov
mov
xor
call
mov
fs
int3
add
push
lahf
adcb
enter
jp
ret
cmp
pop
cmp
cs
repz
pop
sbb
outsl
add
ret
sti
add
lret
dec
popf
das
sub
push
and
adc
gs
and
mov
in
pop
xchg
adc
js
add
dec
scas
pop
cmp
and
add
pop
mov
push
pop
xor
in
jb
dec
add
xor
cwtl
add
mov
jecxz
sbb
push
push
adc
out
bound
lods
jns
mov
or
and
popf
mov
xor
scas
sub
jmp
cld
cltd
pushf
and
dec
testl
pop
fdiv
push
andb
in
xchg
xchg
push
xchg
dec
sbbb
push
mov
and
push
les
in
jo
ds
inc
push
test
scas
loop
add
inc
in
fmuls
hlt
xor
or
mov
mov
cmp
adc
sbb
and
pusha
jne
popa
jl
add
test
pop
sti
add
and
xchg
pop
inc
lcall
mov
pop
xchg
enter
popl
mov
repz
inc
xor
je
stc
std
pop
xchg
fadds
jno
shll
outsb
xlat
jl
rorl
xlat
add
cwtl
push
cmpsb
jbe
test
cwtl
cmpsb
jo
scas
aaa
jl
add
pop
aam
fdivl
xchg
mov
jns
xlat
add
pushf
mov
ret
and
jg
outsl
mov
out
dec
sbb
lret
push
std
push
int3
or
rolb
in
dec
or
loopne
adcb
lds
sbb
pop
sahf
mov
outsb
lods
add
pop
adc
dec
add
xchg
inc
cmp
shl
inc
dec
mov
pop
mov
add
andb
xor
pusha
add
push
add
or
in
add
inc
lock
test
dec
add
inc
outsl
adc
pushf
fwait
mov
fdivrl
sahf
and
pop
jp
or
xor
lahf
jo
cmc
ret
das
das
jo
inc
mov
pop
cmp
lret
daa
or
les
sbb
add
jo
clc
sbb
xor
xchg
loop
and
push
and
xor
in
cmpsl
es
int3
mov
inc
fisubs
mov
mov
dec
into
inc
fisttpl
dec
sbb
jge
cli
jp
and
sub
rcrl
cmp
and
mov
outsb
or
pop
cmpsb
std
dec
pushf
dec
cmp
and
mov
ret
je
add
pushl
repnz
xor
faddl
sbb
cs
je
sbb
jge
subb
adc
int3
mov
ret
test
sub
test
mov
out
js
add
cmc
or
inc
mov
push
ds
clc
sbbb
xor
cmp
dec
scas
inc
test
popl
lahf
mov
movsl
aad
outsl
outsb
movsb
jnp
mov
cmp
test
mov
adc
add
pop
fnstsw
in
adc
sbb
xchg
xchg
or
in
dec
andl
shll
mov
push
add
negl
and
xchg
mov
cmp
adc
inc
sbb
inc
dec
pop
pop
int3
add
fmuls
popa
pop
nop
mov
adc
sbb
popa
dec
dec
adc
jo
mov
mov
data16
adc
or
push
pop
movsb
add
mov
push
lods
or
int3
enter
mov
cmp
jge
and
lcall
inc
shrb
loop
dec
stc
add
outsb
lret
movsl
mov
cld
ds
stos
iret
hlt
mov
dec
xor
orb
push
push
sti
mov
sahf
clc
faddl
mov
stos
addb
pop
andb
cmpsb
test
les
mov
sbb
xor
or
nop
inc
pushf
js
push
lcall
js
lret
shlb
sub
out
jno
dec
jb
inc
leave
xchg
mov
shrb
sarb
or
cmc
mov
rcrb
imul
cmp
lret
add
rorl
sbb
das
loop
in
clc
adc
out
xchg
cltd
decb
and
and
sbb
cmp
shll
jle
xchg
or
gs
roll
sub
std
sbb
or
sub
adc
and
cmpsl
pusha
and
push
add
cmpsb
jo
push
ficoml
bound
call
xlat
sub
mov
lock
aas
cltd
jae
mov
enter
loopne
and
bnd
or
pushf
sbb
pop
mov
mov
push
into
nop
pop
fldenv
das
pop
inc
loopne
sbb
add
xor
scas
mov
andb
add
or
inc
lock
aam
testb
sahf
sub
int
pusha
cwtl
outsb
inc
movsl
sub
nop
sub
cmp
xchg
mov
mov
fcoml
shll
add
arpl
sti
fstl
cmp
push
sbb
stc
or
push
mov
and
add
xor
imulb
ret
scas
jbe
adc
cmc
jmp
xchg
or
or
inc
adc
or
push
call
fucom
cld
dec
lret
hlt
enter
inc
inc
aam
test
lahf
xor
push
add
aas
outsl
and
popf
js
call
je
cmp
and
xchg
jne
and
push
imul
icebp
sub
mov
mov
sahf
xchg
dec
mov
add
imul
pusha
mov
test
mov
ret
pop
dec
xchg
dec
cmp
jo
xor
or
test
mov
push
adc
and
xor
fs
xor
popf
add
fildl
fwait
ja
vpcmpd
pop
pop
shrl
sub
mov
xor
test
mov
fsubrs
icebp
es
mov
and
jnp
mov
jmp
sbb
add
sub
insl
add
mov
ds
dec
in
aam
mov
rolb
inc
jnp
hlt
insl
sbb
je
adc
dec
add
xchg
nop
mov
push
in
std
data16
sub
sub
daa
cs
or
pslld
cmc
cmpsl
cmp
add
sbb
imulb
cli
pop
js
mov
jo
in
cmp
enter
and
pop
in
mov
or
or
or
xchg
dec
inc
int3
adc
jp
and
add
add
sub
mov
loopne
iret
add
lahf
add
jp
sbb
cmp
ja
push
clc
inc
negb
add
push
lods
jno
and
ds
call
loop
xchg
call
mov
push
mov
cmp
std
sub
or
sti
and
std
fdivl
jo
dec
or
mov
scas
adc
push
sti
loopne
out
add
enter
call
push
hlt
int
lods
dec
dec
jl
cmpb
js
jmp
jg
mov
ljmp
push
inc
mov
jb
jne
gs
pop
mov
js
dec
in
scas
adc
cmpsb
sti
shlb
cmp
addb
xchg
je
jno
or
fldl
xchg
sahf
inc
pop
inc
cmp
imul
pop
xchg
test
cs
pop
cmc
push
mov
inc
popf
xchg
pushf
push
jl
ds
ret
mov
insl
movsb
xchg
sub
cli
adc
cli
movsl
addr16
mov
jb
adcl
xchg
jo
imul
cmpsb
lock
ret
push
test
push
addl
ja
bound
ljmp
shlb
loop
inc
inc
sub
in
adc
and
pop
dec
sbb
cltd
testl
dec
int3
cmpl
sahf
push
or
mov
in
sbb
rcrb
mov
int
loopne
mov
sub
mov
in
lock
jmp
js
pushf
fmull
sbb
loop
pop
push
jg
adc
or
popl
popa
push
pop
movsb
add
sbb
add
rorb
sbb
std
jo
mov
shll
and
jmp
lock
pop
add
faddl
popa
push
inc
pop
inc
test
inc
call
notb
rcr
out
rolb
adc
xlat
sbb
add
inc
mov
addr16
icebp
popa
add
xchg
mov
push
int3
mov
std
orb
xor
inc
add
and
loope
xchg
add
sub
mov
or
inc
into
and
mov
xor
jle
aas
negl
sub
and
sbb
and
loop
scas
sub
test
sbb
js
add
mov
sbb
push
pushl
mov
or
pop
pop
jge
aas
add
movsl
push
int3
or
data16
xorb
insl
xor
pop
ljmp
clc
xchg
fs
xchg
sub
xor
aaa
xor
mov
sbb
add
ljmp
jb
out
sub
ret
add
sub
bound
cwtl
or
and
pand
inc
jmp
pop
sub
sbb
sub
add
and
mov
or
and
jbe
mov
imul
inc
nop
sahf
push
or
jmp
mov
pop
lock
adc
and
pusha
cli
pop
add
jp
rclb
mov
xchg
cld
cmp
cs
sbb
popf
jge
pop
adcb
inc
jp
jno
and
and
mov
jo
bound
movsb
inc
or
sub
xchg
or
loopne
insb
sahf
sarb
inc
and
movsl
jo
xor
pop
add
inc
push
loopne
bound
test
adc
ret
in
xor
cmp
cmp
sub
lahf
jo
pop
mov
nop
pop
and
and
movsl
mov
jns
jmp
ljmp
and
jl
mov
add
and
movsl
dec
mov
bound
and
push
push
or
cmc
cli
rolb
pop
sbb
mov
dec
sbb
fsub
js
jl
and
jnp
pop
xchg
jp
jl
lds
adc
sbb
repz
dec
popf
loopne
mov
pusha
mov
add
sbb
int3
mov
adc
sbb
pop
and
arpl
test
add
ret
clc
inc
mov
add
xchg
sahf
fs
pusha
cmpl
mov
add
jl
aas
sub
sbb
sbb
mov
fcomps
and
and
insb
dec
and
pop
int3
mov
push
xchg
xlat
inc
sbb
and
call
sbb
pushf
push
lock
addl
and
loopne
jne
nop
clc
xchg
mov
fdivrs
stos
bound
clc
dec
dec
dec
cmp
dec
mov
out
icebp
shlb
pop
mov
lock
imul
call
data16
mov
loop
adc
add
sbb
js
andl
jmp
pop
and
jg
sbb
sbb
leave
pop
test
scas
sets
test
push
mov
addr16
dec
xor
pop
cli
xor
inc
cld
out
jns
in
xor
cs
andl
cmp
add
cmp
dec
aas
adc
and
sub
inc
and
test
sbb
and
sub
andb
mov
je
pop
mov
xchg
cmp
cld
add
and
mov
lahf
cwtl
inc
in
inc
ss
out
sub
jl
cmp
sbb
hlt
lock
mov
mov
jecxz
jp
int3
and
lods
sbb
fstpt
pop
jl
and
sets
in
insl
jecxz
cwtl
jge
cld
adc
into
push
add
movsb
xor
mov
xor
pop
cmpb
add
lret
xchg
lods
ret
inc
add
sub
mov
int
loopne
adc
add
sbb
popa
test
jl
and
in
sahf
rolb
dec
rorb
in
jo
push
add
jb
addr16
jmp
pop
or
cs
or
pusha
mov
pusha
inc
pop
mov
xlat
pop
sub
mov
inc
adc
push
xor
pushf
mov
rolb
movsl
inc
inc
and
add
and
xor
out
pop
loope
in
nop
mov
add
xor
and
into
dec
enter
clc
add
aas
dec
lods
add
or
mov
add
data16
je
xchg
nop
sbb
enter
cwtl
dec
cmc
mulb
adc
loopne
out
and
cltd
inc
inc
jnp
test
ljmp
sbb
loopne
pop
mov
stc
and
sbb
mov
std
or
xchg
hlt
inc
mov
inc
and
call
inc
insl
dec
and
dec
or
enter
adc
out
add
rolb
push
mov
adc
mov
nop
rcll
cmpl
inc
add
add
out
jp
loope
push
cs
aaa
pop
gs
sbb
dec
nop
decl
pop
lea
and
lret
xchg
add
xor
fiaddl
pusha
mov
jno
sbb
ljmp
arpl
movswl
lea
xchg
pusha
mov
test
push
sbb
decl
stos
lcall
sub
add
in
incl
pusha
mov
jecxz
add
fsub
popa
jmp
scas
mov
mov
roll
or
popa
lcall
add
out
add
and
pop
or
adc
mov
mov
and
pop
jmp
xorl
incb
shll
jmp
enter
and
mov
clc
sbb
cmpsb
add
aad
mov
cmp
jne
lock
iret
push
into
mov
aas
scas
add
mov
imul
mov
psllw
fildl
in
sbb
dec
mov
cmp
jmp
out
stc
movsb
cmpl
in
test
dec
cli
mov
adc
test
mov
cs
cmp
sbb
cmp
adc
add
out
sahf
rcl
jmp
test
add
in
pop
mov
sahf
or
inc
jmp
or
cmp
lods
imul
movsl
popa
ret
movsl
daa
dec
or
jle
push
add
xlat
loopne
icebp
call
add
test
lock
jo
mov
lea
sub
xor
je
and
lcall
or
movsb
pop
jg
dec
add
dec
out
les
scas
std
shrl
and
or
ds
push
cmp
push
jmp
add
fmuls
pop
or
pusha
jmp
inc
ficomps
fs
push
push
hlt
add
jl
mov
insl
push
sbb
mov
jge
dec
add
lcall
or
inc
call
rcrb
lcall
xlat
or
adc
cmp
and
cli
call
out
or
pop
sbb
mov
inc
mov
loop
jle
or
pop
out
mov
test
jno
sub
xchg
dec
or
incb
pop
mov
movzbl
adc
sbb
inc
xor
test
andb
imul
mov
call
dec
es
sbb
popf
testw
stos
test
sub
jmp
call
ret
push
and
imul
in
filds
pushf
mov
movsb
testb
outsl
mov
jg
shrl
or
adc
push
hlt
add
jb
inc
xchg
std
sub
cmp
stos
inc
scas
in
push
xor
cs
cs
fiadds
push
pop
xor
jmp
mov
xchg
adc
insl
pavgb
or
push
or
adc
ficoml
orl
imulb
fsubrs
js
sbb
jne
imul
inc
pop
add
shrb
mov
cmp
or
push
clc
inc
mov
cmp
xor
lret
push
push
lds
mov
add
mov
jmp
mov
filds
dec
fnstenv
dec
sub
jne
and
xchg
xor
jne
bound
flds
ljmp
xor
sub
pop
xchg
inc
jmp
lock
add
mov
insb
add
jmp
jg
xchg
cmp
mov
inc
imul
mov
sbb
aam
loope
pusha
call
jmp
in
mov
cmp
popa
clc
dec
mov
mov
xchg
adc
addps
inc
popa
jo
fsts
mov
and
popf
movsl
imul
je
je
mov
push
cmc
pop
bound
push
sub
pop
sub
xor
jno
adc
dec
sub
in
and
mov
ret
cmp
ss
lock
mov
add
xchg
mov
jmp
jmp
std
add
jae
sti
das
and
clc
jno
mov
int3
repnz
xchg
adc
test
frstor
sbbb
cltd
mov
es
movsl
sub
dec
repz
test
test
cwtl
pusha
data16
xor
adc
mov
push
test
xorb
ficoml
in
push
mov
lret
and
insl
hlt
inc
sbb
out
or
push
pop
movsb
add
nop
aaa
jg
cmc
aas
stc
fisttps
push
andb
cmp
or
mov
and
sbb
mov
cld
sbb
andb
and
add
ud0
or
pop
js
inc
ja
sbb
out
add
cmp
rorl
mov
out
mov
pusha
jp
outsb
dec
add
add
pop
iret
imul
dec
hlt
insl
adc
sbb
aam
and
je
add
mov
jno
in
xchg
cmc
dec
adc
xor
adc
popa
sub
xchg
push
decl
xchg
idiv
sbb
in
addr16
pop
icebp
jno
push
cmp
je
and
mov
das
lcall
mov
add
mov
jmp
inc
jns
sbb
add
jle
and
mov
and
sub
add
pop
pop
lea
call
cmc
or
loope
pop
repz
rcrb
push
add
insb
mov
out
subb
mov
push
and
add
xchg
sbb
sahf
ljmp
add
xchg
mov
repnz
mov
mov
xor
jge
jo
andb
add
jb
scas
jne
leave
repnz
push
mov
push
lds
dec
pop
adc
xchg
and
popa
inc
push
pusha
push
cs
pop
fs
sbb
insb
sub
outsl
mov
adc
nop
cli
mov
mov
in
cmp
rcll
icebp
pop
push
in
sbb
add
sbbl
xchg
and
jecxz
aam
sbb
pop
add
daa
push
hlt
in
sarb
sub
fs
sub
dec
mov
rolb
fstpt
ret
mov
cs
pop
call
outsl
popa
in
enter
dec
mov
or
mov
mov
or
push
push
cmp
jecxz
aas
repnz
pusha
pop
fisttpl
jns
xor
pop
dec
imulb
mov
adc
push
mov
jmp
aad
int
cmp
sub
std
or
js
add
xchg
jnp
add
inc
jne
jns
and
jg
mov
out
cmpsb
mov
push
jg
add
mov
cwtl
fwait
add
push
push
jmp
fsubrs
mov
int3
mov
push
in
and
adc
xchg
imul
popa
insb
data16
aas
jno
xchg
pop
sbb
test
xchg
call
and
sahf
and
mov
mov
in
add
mov
cs
add
xor
movsb
or
and
pop
push
xor
pop
and
nop
xchg
fiadds
dec
or
add
imul
cmc
lock
cmpsb
jg
or
mov
or
inc
mov
push
mov
lds
adc
jno
cmpsb
sub
jmp
xor
pop
add
or
cltd
dec
push
add
mov
mov
pop
or
xchg
sti
adc
js
xchg
cmc
daa
flds
jae
sub
mov
push
rcrb
mov
dec
lods
jle
push
inc
popa
xchg
cmp
into
xorb
shl
pop
mov
les
push
jb
lea
loop
xchg
or
push
in
es
fs
clc
mov
movsbl
fcomps
and
sbb
jg
and
pop
jnp
stos
mov
in
gs
lahf
mov
ret
push
test
adc
pop
mov
insl
xchg
cmp
xorb
lea
sbb
scas
add
sub
popl
ret
sbb
cmove
and
add
mov
mov
cmpl
sbb
xchg
adc
out
inc
sbb
in
xchg
jo
je
fidivrl
mov
adc
inc
and
push
jns
and
pop
hlt
shlb
pop
or
adc
cld
jae
jge
jne
ds
inc
in
mov
pop
push
outsl
loop
adcl
adc
or
sbb
dec
cmp
push
xchg
mov
lods
pop
xor
sbb
mov
mov
xor
mov
push
sti
push
cld
enter
cmp
pop
mov
push
lahf
or
shrb
dec
js
loope
add
pop
sub
pop
mov
add
xor
enter
scas
xor
in
xchg
pop
jno,pn
sbbl
js
loop
mov
or
dec
pop
sub
cld
mov
and
sub
outsl
fs
or
mov
push
sub
lahf
mov
sbb
sbb
cwtl
cmp
and
and
hlt
cmp
rcrb
inc
push
rclb
cmp
dec
xchg
mov
push
int
jbe
loopne
dec
lods
add
fcmovnu
push
push
mov
cs
rcrb
mov
adc
shrl
test
push
mov
shlb
repnz
adc
je
nop
fwait
xchg
pop
cli
testb
enter
mov
mov
or
cwtl
loope
aad
and
sub
pop
in
shr
adc
mov
inc
aaa
or
add
lret
sbb
sbb
in
xchg
movswl
call
sti
loop
les
test
push
fstpt
lds
sub
in
inc
xor
sbb
push
pusha
inc
adc
mov
clc
in
shlb
sub
jae
sub
sub
leave
je
in
push
rol
mov
data16
and
sub
add
jne
aad
mov
aam
mov
pop
jge
popl
fnstenv
mov
push
int
inc
lods
les
fsubl
or
out
sub
insl
xor
add
xor
and
sbb
jb
add
lock
mov
fsubr
push
push
out
add
pop
pop
nop
mov
add
sbb
jbe
jae
and
mov
jge
sub
and
cmc
push
pop
jmp
insl
std
mov
stos
sti
or
repz
jo
mov
in
jbe
lock
push
pusha
push
push
pop
sahf
pop
adc
stc
add
incl
push
jl
pop
jbe
pushf
lock
shlb
nop
add
rcrb
mov
jbe
sbb
push
popf
or
cltd
pushf
sub
into
add
push
js
cmp
mov
add
das
mov
rcll
pop
xor
mov
loopne
aam
xchg
std
add
pop
fldenv
pop
xor
cli
fstps
loop
xor
pushf
and
and
jb
popf
in
pop
mov
sbb
rcrl
loope
loope
leave
and
stos
mov
add
inc
cmpsl
cmpl
inc
sub
sbb
fiadds
jae
jo
xchg
adc
push
test
xchg
cmp
sbb
ljmp
pop
cmp
add
cmc
gs
push
js
lret
mov
pop
lcall
testl
xchg
sbb
lcall
and
test
je
mov
pop
adcl
mov
stc
sbbb
and
mov
dec
jge
push
add
clc
stc
jb
or
or
jo
adc
and
test
or
xor
mov
jnp
dec
mov
jl
pop
fildll
push
jo
adc
adc
mov
daa
das
stos
aaa
stos
repnz
and
into
dec
add
mov
fiadds
jb
ds
mov
icebp
or
push
pusha
xor
lahf
push
gs
xchg
xlat
adc
dec
xlat
push
xor
mov
sbbb
popf
mov
aam
aam
or
rolb
fimuls
adc
sbb
fstpl
xor
adc
cmpsb
loop
add
bswap
xchg
cwtl
dec
mov
in
sbb
faddl
push
imul
and
lock
popa
pop
loopne
mul
sub
push
or
sub
inc
and
popf
test
add
lock
in
shll
out
mov
dec
scas
shll
leave
repz
bound
inc
je
pop
stc
or
pop
clc
adcb
xchg
lock
cmp
in
inc
jo
ljmp
xlat
push
push
sarb
stos
loop
or
mov
rcll
adc
sbb
and
int3
roll
pop
xor
and
arpl
aas
add
jno
add
and
sub
xchg
negl
inc
sbb
pop
call
xlat
pop
call
mov
mov
roll
jl
cmpsl
fiadds
jecxz
mov
imul
push
testb
cmp
push
push
jp
jmp
sar
mov
popf
leave
adc
add
aas
les
inc
cmpsb
daa
mov
movsl
push
sub
pop
xor
rol
add
cmpsl
ret
fs
fildll
inc
xor
xchg
jb
es
fcmovb
xorb
sti
cmp
lods
or
sub
xor
lahf
adc
pop
insb
pop
sbb
repz
cmp
pop
aad
sub
pop
daa
dec
call
jo
cmp
insl
aam
dec
and
je
add
mov
and
sti
cmp
jo
sbb
mov
add
in
add
in
clc
jbe
repnz
fsubl
add
rcl
jns
testl
pop
sub
nop
mov
test
or
fldt
icebp
iret
and
shll
lea
mov
jne
jge
add
into
cvtps2pi
mov
lods
daa
fs
js
and
adc
pop
clc
sub
or
rol
scas
mov
inc
add
test
rcll
cmp
jle
rcrl
or
nop
push
sar
mov
cmp
in
out
adcb
xor
xor
flds
push
xor
rolb
cmp
or
lds
fiadds
movl
xor
mov
xor
pushaw
add
data16
je
sbb
add
sbb
inc
fwait
inc
mov
fimuls
in
addb
dec
add
lds
pop
stos
fiaddl
jnp
xlat
mov
andb
mov
movsb
add
sub
push
jl
sbb
mov
imul
into
enter
jno
test
sbb
pop
xchg
add
push
cmpsl
mov
ret
jp
sub
sub
mov
shlb
int
aas
ja
sub
push
mov
shll
cmpsb
sbb
insl
jmp
push
mov
cmp
sbb
sub
add
ljmp
into
add
pop
leave
cmpb
mov
mov
push
add
pop
rcrb
add
add
or
or
repz
adc
aam
or
dec
cmpsb
rcll
push
push
xor
xchg
jns
jno
or
nop
pop
mov
inc
and
add
push
xchg
inc
mov
or
jb
leave
jns
mov
sbb
mov
xlat
xchg
jbe
out
mov
arpl
out
ret
jecxz
and
inc
jo
lahf
cmp
mov
andb
jp
cs
shrl
sub
jmp
mov
adc
in
sbb
jo
inc
cmovnp
add
xorb
inc
mov
dec
fwait
loop
push
stos
out
mov
call
fcoms
rclb
cwtl
imul
and
mov
add
jmp
push
adc
push
or
int3
arpl
pop
lds
cmp
test
leave
or
int3
gs
popf
push
ds
or
inc
pop
nop
xor
test
sbb
adc
mov
adc
mov
lock
pop
pop
sahf
hlt
add
std
push
lods
in
mov
xchg
movsl
ficomps
fdivrl
add
std
mov
fiaddl
xlat
movsl
iret
shl
sbb
inc
into
adcb
dec
je
push
push
pop
fsts
adc
ret
fwait
pop
xchg
dec
loope
cmp
cmp
dec
adc
test
nop
sub
sub
es
arpl
lcall
sub
xorb
mov
add
pop
jne
popa
ret
bound
out
adc
and
sub
stc
jecxz
dec
dec
add
xor
cmc
dec
stc
cmp
push
cmpb
insb
xor
jmp
scas
add
sub
push
and
das
out
jp
add
jp
mov
push
mov
dec
sti
push
pop
outsb
jns
and
and
negb
aaa
jo
enter
cltd
mov
out
dec
stc
jg
and
mov
mov
and
sarb
ljmp
lock
mov
jns
mov
loope
mov
pop
das
mov
dec
and
fcomps
and
dec
dec
inc
shrb
sahf
or
mov
and
mov
fadds
pop
inc
fstl
scas
lahf
or
int3
imul
xchg
out
mov
push
fiadds
stos
mov
dec
mov
aaa
fdivr
mov
and
fisubs
sub
pop
lret
addb
sbbl
ret
es
lock
pop
adc
test
dec
fcoms
leave
and
nop
and
sbb
xchg
add
or
add
movsb
test
xchg
jb
iret
outsb
xchg
jb
sub
push
sub
mov
repnz
or
pusha
xchg
addb
sbb
popa
push
dec
pop
mov
add
pop
fcomps
repnz
clc
lcall
push
lock
aaa
add
cmp
test
inc
bound
mov
mov
pushf
outsl
daa
cmp
inc
mov
loop
add
or
xchg
push
sbb
fiadds
add
or
add
cltd
push
incl
adc
lea
jno
sub
aas
imul
xor
mov
test
daa
mov
mov
pop
fiaddl
fwait
popf
jl
fdivrl
cmp
adc
out
xor
divb
ljmp
push
scas
cmp
mov
cmp
lret
sarl
sbb
push
std
inc
xor
xchg
mov
push
scas
aaa
cmpsl
push
mov
mov
mov
add
push
and
fneni(8087
jge
xor
dec
cs
inc
inc
rcrb
lods
push
cs
mov
mov
lret
add
movsb
sub
pop
add
or
arpl
push
orb
add
cs
dec
pop
sti
sub
out
iret
push
jb
repz
ljmp
push
or
test
outsb
and
pop
or
xor
jmp
movsl
js
pop
mov
out
and
jne
cmp
idiv
add
mov
pop
ss
jmp
pop
pop
fldt
mov
adc
aad
sub
add
negl
mov
clc
sbb
sbb
dec
dec
cwtl
sahf
inc
xchg
lods
sbb
push
inc
and
add
out
orb
jbe
pusha
fldt
push
outsl
adc
push
subl
ja
lcall
jno
popa
mov
nop
pop
push
pop
or
pop
cs
mov
add
daa
dec
lahf
jg
fs
loope
cli
insb
out
mov
add
sahf
fnsave
stc
jmp
dec
sub
dec
lock
sbb
xor
adc
cmp
adc
popa
push
xchg
add
mov
jecxz
xor
adc
or
jge
jmp
sub
outsl
add
xchg
push
scas
sub
push
xchg
sub
sub
and
mov
sub
data16
cli
sbbl
loop
in
mov
pop
iret
stos
add
pop
mov
bound
push
xchg
and
and
pop
dec
mov
addl
push
jnp
fldt
jg
stos
call
or
xorb
sub
xchg
jae
sahf
push
faddl
ret
push
iret
mov
test
insb
jecxz
or
sbb
mov
outsb
push
xchg
push
add
jle
jnp
mov
xor
jno
insb
fwait
cmp
sbb
dec
push
pop
sub
imul
jbe
lcall
mov
rolb
dec
xchg
mov
insb
rcrb
dec
popf
fsubr
cld
and
add
lods
jne
fadd
xchg
and
jl
sub
push
add
iret
pusha
roll
lock
mov
mov
out
sbb
xchg
mov
pusha
and
iret
or
cmp
sti
andb
and
push
fadds
push
xchg
jno,pt
add
movsl
sti
ja
pop
xchg
test
xor
cmp
push
cmc
mov
divl
dec
mov
test
xchg
lods
add
inc
loopne
rclb
sbb
repnz
rclb
jmp
pop
mov
lret
push
nop
mov
call
es
pop
add
lods
inc
mov
push
neg
stc
cwtl
mov
addl
jp
inc
cmp
jnp
loopne
ss
push
add
jns
jae
mov
pop
fistl
into
mov
outsb
add
push
fldl
mov
clc
fwait
mov
and
xchg
mov
and
test
adc
pop
popa
inc
sbb
sarb
add
sbb
cmp
cmpb
mov
fsubl
dec
or
cmp
add
movsl
addb
pop
add
xor
push
popf
fstpt
addl
push
push
or
or
pop
mov
inc
mov
sbb
push
add
push
xor
sahf
adc
iret
xor
ss
inc
add
push
clc
rclb
sbbl
aas
mov
add
jge
cmp
add
das
insl
shll
adc
jle
mov
in
leave
sub
das
out
dec
lahf
and
add
fs
imul
and
addr16
inc
mov
xchg
add
and
and
test
adc
data16
in
insb
lock
or
inc
add
inc
and
lods
cmp
add
daa
add
mov
int3
inc
and
es
movb
lea
xchg
aad
cmp
sahf
je
rcrl
cld
cmp
push
addl
jmp
mov
xchg
add
pop
push
xor
lock
in
imul
idiv
nop
pop
fistpll
inc
cmpsl
push
jle
ret
dec
mov
test
cmp
aam
pop
adc
push
inc
shrl
nop
lea
dec
iret
je
push
pop
ficompl
xlat
jp
stc
xchg
sub
cmp
add
add
dec
fimuls
mov
push
test
lds
and
rorb
lret
xor
dec
movsb
lock
nop
pop
mov
faddl
or
push
jnp
cmova
stos
or
push
dec
add
jne
pop
pop
cltd
pop
stc
add
out
xor
iret
add
pusha
sahf
sbb
mov
shlb
sbb
add
in
mov
add
enter
jbe
adc
das
ja
add
xorl
pusha
mov
call
add
orl
mov
sbb
or
jno
cltd
xlat
cmp
int3
gs
pop
adc
out
loopne
sub
or
or
daa
lcall
pop
jno
movl
lret
nop
iret
sub
iret
and
push
inc
add
xor
sbb
mov
jne
inc
or
push
negb
or
out
mov
lea
lret
and
add
add
lock
mov
stc
cmp
pop
add
frstor
inc
call
mov
adc
xor
pop
inc
mov
pop
xor
dec
push
push
lea
mov
int3
jnp
nop
pusha
dec
shl
rcrl
cmpsb
mov
xor
pusha
loop
sarb
adcb
cli
xor
inc
pop
fcompl
mov
inc
xchg
add
mov
aaa
insl
in
mov
data16
movhps
test
fadds
inc
push
stc
xor
arpl
xlat
data16
push
sarb
fsts
sbb
out
cltd
dec
outsb
push
adc
mov
jge
lret
pushf
and
pop
std
inc
in
add
pop
dec
push
and
jmp
fs
pop
stc
es
sbb
cmp
outsl
js
add
nop
sub
cwtl
and
call
out
and
and
cld
sbb
and
add
inc
ljmp
lods
add
pushf
or
test
sub
add
dec
mov
ds
jo
inc
jle
pop
sub
idivb
sbb
add
sahf
xchg
inc
lock
adc
sub
mov
jns
and
push
aam
sbb
int
adc
dec
nop
pop
adc
cmc
in
icebp
add
push
icebp
aad
pusha
mov
outsl
mov
cli
cmp
loop
pop
pushf
dec
rorb
ret
lret
or
push
add
rorb
jns
mov
pop
mov
nop
ret
add
sub
jp
push
push
push
mov
jo
addr16
fstps
pop
mov
xchg
push
or
and
push
xchg
add
push
call
inc
movsl
sahf
push
pop
mov
jmp
dec
lcall
loopne
pop
aaa
test
cmp
xchg
push
ret
lds
mov
xchg
loop
cmpsl
xor
ror
pop
test
mov
gs
sub
mov
push
inc
pop
add
inc
movsl
cld
setno
test
mov
cmpsb
sub
cmp
or
adc
iret
cmp
movsl
int3
jbe
push
fsts
jnp
and
loope
std
mov
xor
iret
cmp
jle
sarl
add
std
cmp
sahf
nop
jg
lods
ljmp
in
dec
fcomi
pusha
testl
xor
adc
push
inc
out
in
js
dec
xchg
lcall
dec
pop
dec
stos
add
roll
enter
jbe
loope
fisubs
and
mov
fadd
inc
xchg
mov
leave
inc
cli
cmp
int3
add
cmp
fs
mov
and
pop
sub
xchg
dec
leave
and
outsl
int
and
insl
lret
lahf
mov
xchg
aam
mov
ljmp
rorb
pop
stos
aas
sub
pop
sbb
scas
adc
adc
dec
enter
mov
add
mov
cmp
popa
movsl
sbb
sub
aaa
pop
test
mov
insb
mov
lea
or
inc
push
lret
ja
imul
imul
and
or
or
pop
pop
push
fsubs
call
jge
sbb
or
in
cmp
inc
add
mov
enter
aam
jmp
jo
cmp
shrl
adc
aas
mov
int
push
or
cmc
add
rcrl
dec
add
scas
es
jmp
icebp
repnz
mov
cmp
sbb
stc
add
add
add
jbe
sti
jb
rorl
das
scas
push
push
add
mov
mov
repz
into
mov
push
sbb
add
out
jne
inc
divl
adc
stos
and
mov
inc
movsl
adcb
sbb
cmp
or
out
adc
mov
div
cmp
in
dec
mov
push
add
mov
sbb
pushf
and
enter
cmp
xor
cwtl
pop
add
call
sarb
sbb
fidivrl
add
xchg
inc
add
out
push
add
es
inc
rcr
inc
add
mov
push
ret
cmp
adc
in
xchg
add
xchg
sub
pop
es
and
push
and
sbb
mov
add
xchg
xor
mov
ficoml
jae
iret
sub
arpl
and
add
js
xchg
add
xor
mov
jg
adc
add
dec
fadds
jge
sub
sbb
and
arpl
insb
inc
cli
inc
adc
addl
subb
addb
stos
or
xchg
add
cmp
jns
lea
imul
fistl
mov
push
mov
cmp
or
ret
push
xchg
sbb
push
adc
shll
adc
dec
cli
popf
xchg
fimull
push
adc
or
adc
mov
or
pop
add
mov
mov
jo,pt
pop
repz
mov
push
cmp
cmpl
add
in
mov
push
dec
or
and
outsb
shlb
mov
pop
jmp
cmp
rorb
mov
push
adc
mov
jae
and
inc
add
xchg
sbb
or
mov
adc
stos
and
sbb
leave
add
int
dec
pusha
cmp
xor
adc
push
or
lock
cmp
icebp
clc
cmp
jg
ret
lea
dec
mov
leave
mov
jl
popf
shl
shll
jp
cs
jp
pushf
idivb
pusha
mov
cmp
mov
int3
popa
imul
jp
sbb
mov
shll
add
ljmp
repz
cmpsb
add
sbb
adc
popf
in
jmp
jp
or
cmp
aaa
inc
push
cld
mov
popa
pusha
fcoml
fmull
xchg
jmp
ret
sub
pop
xor
pushf
fdivrp
or
inc
mov
sahf
loop
mov
cmp
popf
mov
and
fldl
in
pop
cmpsl
pop
cmpsl
add
mov
add
mov
mov
push
push
mov
push
out
xchg
pop
movsl
ret
cltd
shrb
pusha
insl
or
call
mov
mov
dec
pop
push
add
cmp
sub
adcl
mov
insl
adc
dec
add
pop
outsl
inc
push
jl
fimuls
inc
movl
push
mov
pushf
mov
lret
loop
add
fst
add
adc
pop
popa
test
xchg
mov
std
mov
popf
jmp
sub
fdivrl
les
mov
push
push
jnp
jl
das
mov
shr
xor
lock
fidivrl
lods
movsb
push
aam
pop
cs
into
xor
cmc
sbb
daa
push
mov
roll
ffree
sub
pop
stc
stc
fucomip
fisttpl
fisubrl
movb
xchg
scas
int
aaa
loopne
sub
pushf
add
push
xor
aad
add
jnp
push
and
and
mov
mov
addr16
out
inc
test
scas
xchg
mov
int
sub
and
sub
xchg
gs
sarl
loopne
pop
inc
add
mov
repnz
or
pop
mov
cmp
or
movsb
sub
add
aas
cmpsb
add
pop
out
imul
dec
das
add
fcoml
je
pop
test
vhaddpd
sub
mov
mov
dec
or
mov
and
jge
mov
sub
dec
out
loopne
cmp
add
sarb
outsb
add
pop
fimull
clc
cmc
inc
pop
xor
inc
adc
cld
outsl
addl
push
mov
and
and
fucom
push
dec
nop
mov
lds
xchg
sbb
push
xlat
or
push
divb
pusha
jmp
adc
xor
inc
rcll
and
lcall
faddl
leave
cmp
lahf
popl
subb
add
outsb
mov
std
arpl
jl
lcall
fisubrs
cld
push
inc
xchg
add
rcll
add
aad
lret
and
mov
pop
arpl
les
loope
out
add
stos
ret
add
flds
fimuls
xchg
test
fcoms
ja
pop
mov
adc
pop
push
and
inc
push
shrl
add
mov
add
mov
xor
push
mov
movsb
inc
cmp
loop
out
insb
add
push
push
sub
add
cmpsb
push
sub
mov
add
and
mov
mov
add
push
hlt
es
fs
jnp
faddl
dec
les
int3
inc
or
lcall
and
out
call
inc
dec
mov
popa
or
stc
mov
mov
pop
mov
add
jle
rclb
iret
andl
and
mov
shlb
adc
xlat
push
fdivl
sub
sbb
mov
std
push
xor
add
std
dec
jno
push
add
adc
sbb
or
xlat
jo
movswl
and
add
lock
call
and
popa
and
cmp
inc
cmp
roll
pushf
in
mov
fisttpll
adc
leave
cmp
jp
or
mov
mov
push
cmp
dec
or
lock
nop
add
lods
test
out
xorl
notl
rolb
mov
pop
xor
imul
jge
jg
mov
fdivs
popa
add
jp
test
lods
movl
jae
push
sbb
xor
dec
clc
pop
orl
sub
bswap
cmp
or
adc
in
fildl
mov
adc
jbe
push
pusha
cmp
test
lock
aas
and
xchg
daa
pop
push
outsl
xor
rorl
mov
inc
pusha
or
add
nop
aam
cmovl
add
dec
shrb
lea
mov
pop
inc
jne
cmpsb
mov
xlat
call
pushf
dec
arpl
sbb
imul
shrl
jmp
icebp
add
push
clc
loopne
out
add
xchg
out
add
rol
and
and
or
or
frstor
sbb
shrb
sub
jecxz
mov
mov
popa
push
push
loop
imul
aad
and
pop
adc
add
lea
dec
stos
outsb
cwtl
add
and
mov
and
inc
lret
jne
cmp
aam
xchg
fnsave
aas
push
popa
add
push
aad
in
sbb
xorb
andb
insb
pop
movsl
xchg
mov
adc
orb
push
int
xchg
xchg
in
outsl
dec
jg
fistpl
cli
inc
arpl
popa
enter
and
faddl
mul
mov
lea
daa
add
or
loope
sub
pop
aam
je
sub
stos
dec
mov
or
out
dec
jns
add
sub
lods
loopne
mov
sub
push
pop
aaa
dec
add
inc
cld
in
subl
add
fistpll
aaa
cwtl
and
sub
add
addr16
jp
sahf
xchg
inc
adc
adc
gs
add
mov
mov
mov
jb
mov
xchg
xor
aaa
mov
xor
fisubrl
add
or
xchg
pusha
jmp
sbb
add
push
dec
xor
ja
imul
fistl
mov
and
adc
cmp
pop
mov
aad
jl
push
aaa
test
arpl
iret
dec
clc
repnz
jae
or
andb
inc
sti
scas
or
lea
pop
or
mov
outsl
sbb
loop
sub
inc
pusha
out
in
arpl
mov
mov
lds
leave
mov
mov
push
adc
pop
mov
cs
inc
and
adc
fmull
mov
push
adc
lcall
fwait
push
test
add
lock
mov
ret
mov
sbbl
test
aad
int3
and
xchg
push
jae
daa
test
adc
pop
jbe
dec
je
adc
push
or
ds
lea
sbb
pop
or
mov
mov
or
imul
lcall
lds
pop
rorb
cwtl
nop
pop
xchg
cmp
lds
inc
pushf
jne
add
adc
sbb
add
pop
push
mov
out
sahf
xor
roll
and
sbb
sbb
popa
popf
insl
push
inc
sbb
xchg
push
mov
pop
fwait
mov
xchg
add
add
mov
xchg
sbb
aas
sar
mov
imul
sbb
hlt
mov
daa
inc
and
js
stc
jo
out
loopne
sub
jbe
filds
pushf
sub
add
mov
fstpt
mov
or
mov
mov
test
loopne
xor
lcall
and
es
jge
lods
movsb
ret
cmp
or
mov
push
cmp
mov
nop
out
mov
jbe
add
pop
cmpb
lds
mov
push
call
sub
and
add
sbb
pop
pusha
jae
jo
test
addr16
jnp
mov
adc
adc
popa
push
jb
mov
sub
mov
mov
pop
nop
or
pushf
inc
int
cli
daa
pop
push
lea
cmp
hlt
pop
loope
les
mov
pop
inc
loop
push
pusha
add
xor
sub
add
sbb
xor
jns
xchg
cwtl
sbb
call
mov
insl
jae
dec
sub
add
or
lahf
xchg
lock
pop
cmc
xor
cmp
add
cwtl
popa
mov
sub
adc
mov
inc
scas
add
mov
negl
and
jecxz
add
mov
inc
adcb
test
xchg
add
mov
xchg
mov
xor
push
icebp
xchg
cmp
nop
cmpsl
cmp
add
xchg
out
jmp
mov
fsubp
or
push
fsubs
dec
fucomi
daa
pop
jg
adc
cwtl
or
sub
mov
mov
cmp
xor
loop
rclb
adc
push
mov
dec
add
xchg
cltd
cmp
dec
scas
jnp
sbb
mov
xor
and
int3
sahf
pop
ficomps
mov
lea
comiss
push
push
hlt
add
inc
fmulp
faddl
lret
popf
cmpsl
cmp
xchg
in
push
xchg
xor
and
add
inc
xchg
addl
pusha
loop
adc
adc
mov
subl
jmp
or
testl
push
dec
and
push
adc
sbb
jge
sub
inc
add
gs
addr16
or
sub
loop
mov
adc
or
add
loop
pop
in
pop
sbb
das
jo
mov
sub
int3
xor
nop
cmp
add
push
pop
mov
cmp
shr
jo
mov
adcb
adc
jb
and
xor
loopne
mov
pop
or
rorl
mov
mov
fwait
or
mov
or
test
in
xchg
daa
pop
mov
add
add
pop
inc
aaa
cmc
adc
insl
add
xlat
push
insl
sub
in
gs
mov
mov
xor
mov
jae
mov
inc
xchg
jle
dec
or
mov
mov
sub
add
xor
or
dec
cmovo
les
or
xor
mov
xor
dec
mov
loope
jnp
sti
test
xorl
adc
pop
jne
std
adc
push
sub
push
adc
push
sbb
popa
inc
sbb
add
push
ljmp
adc
sbb
sub
nop
push
or
js
rclb
mov
in
or
sub
sub
and
add
push
and
inc
test
mov
dec
add
sub
out
lfs
gs
jnp
or
or
xor
into
andb
out
dec
ret
jmp
mov
push
test
inc
sbb
sbb
filds
dec
leave
inc
sub
push
inc
cmp
or
sbb
adc
lds
jecxz
pop
add
notl
jge
inc
add
add
mov
push
adc
mov
das
mov
add
adc
inc
add
out
stc
pop
mov
pop
push
aad
add
sub
rcr
out
mov
add
cmp
pop
std
mov
mov
ds
insb
cmp
flds
and
in
mov
pop
and
cmp
push
pusha
push
jae
add
lret
fsubr
and
addb
lods
aaa
push
stc
fwait
jae
pop
je
push
inc
iret
push
push
loopne
in
insl
xorb
rorl
aam
lods
xor
or
xor
fisttps
in
push
and
and
stc
idivl
sbb
dec
xchg
sti
lcall
repz
pop
lahf
fwait
mov
inc
inc
xlat
push
add
adc
leave
jb
pop
jmp
in
xlat
mov
daa
push
push
adc
in
dec
add
insl
mov
jg
pop
sbb
mov
jo
aad
movsl
push
mov
sub
pop
out
out
int3
fisttps
or
ret
inc
add
sub
inc
add
jecxz
ja
jg
cld
int
leave
mov
and
mov
sub
push
adc
jmp
pushf
data16
inc
in
lahf
pop
xor
push
call
ret
aam
mov
dec
add
test
shlb
cmpl
fidivrl
sub
fsts
in
or
inc
cmp
push
jnp
and
add
or
rol
and
adc
cmp
inc
pop
and
push
mov
adc
mov
xor
rol
into
add
sub
add
cmpsl
lcall
shr
loop
ds
popa
jmp
jmp
loop
lods
add
add
jl
or
xchg
or
cmpsb
add
leave
cltd
mov
sbb
push
jno
addl
jl
add
call
push
sub
sbb
mov
test
cmp
adc
inc
add
cltd
sbb
inc
inc
xor
jno
sbbb
mov
stc
fisubrl
inc
or
ss
repz
jo
add
cmp
inc
xor
or
add
dec
scas
pushf
add
ja
cs
out
sbbl
sub
push
xchg
jmp
pop
fs
push
mov
call
xor
and
sub
pop
mov
pop
ret
push
repnz
jno
cmp
or
pop
add
incl
adc
or
jae
add
ss
sti
mov
add
push
mov
cwtl
jne
lsl
add
mov
sbb
mov
adc
add
cmp
and
or
inc
cmp
in
adc
lcall
cmp
or
sub
xor
int
neg
adc
mov
jmp
adc
cmpl
fs
imul
lea
arpl
or
push
leave
or
mov
test
or
out
push
lods
add
add
pop
jle
xchg
and
and
mov
rcr
rclb
jmp
ret
add
mov
add
or
fimuls
imul
pop
rcrl
push
and
popf
es
cltd
cli
xchg
inc
ret
push
jae
loope
mov
inc
sbb
fwait
movsl
testl
or
testb
dec
mov
or
push
cli
and
adc
enter
sbb
push
sub
and
fisttps
mov
leave
and
jne
add
rorb
insb
sub
push
sub
adc
or
sbb
push
and
mov
push
jne
sahf
data16
adc
mov
mov
xor
pusha
in
jbe
and
cmp
sbb
lahf
pop
sbb
dec
xchg
adc
cmp
and
xchg
xchg
stc
and
test
push
jmp
pop
mov
mov
pop
clc
loopne
xor
add
inc
sbb
add
stc
inc
sub
push
add
xchg
add
jae
pop
lahf
test
aas
cmpsb
inc
xchg
mov
ret
dec
and
enter
pop
pop
clc
ret
leave
ret
sbb
or
or
or
andb
scas
das
data16
adcl
add
inc
inc
sbbb
pop
subb
sub
push
and
push
leave
push
loope
ret
xlat
push
xor
cmpsb
repnz
pop
ss
mov
pextrw
or
jl
shrl
scas
pop
orb
add
or
inc
icebp
mov
add
xor
add
push
fisttpl
jmp
push
and
insl
pop
fistpll
sub
pop
bound
aam
push
pop
mov
or
jmp
xchg
insl
pslld
push
sbb
fdivs
in
push
leave
push
and
mov
sub
ja
and
mov
out
dec
cli
push
add
mov
adc
add
and
rolb
add
hlt
push
mov
jo
ja
or
out
pusha
push
mov
cli
addr16
adc
add
aas
mov
mov
and
dec
and
jmp
into
push
jg
loopne
cwtl
in
fisubs
cmp
sarb
rcrb
or
and
adc
add
add
repnz
cmc
leave
imul
out
arpl
std
shlb
outsl
cmc
lods
adc
push
xchg
pusha
mov
xchg
mov
add
cmp
jo
gs
data16
imul
cmc
sbb
add
call
add
adc
sahf
mov
pusha
add
jbe
mov
or
push
shl
push
push
add
dec
inc
sbb
incb
in
arpl
ljmp
mov
call
mov
push
mov
das
mov
aas
data16
mov
das
cmp
fidivl
in
lock
sbbb
pop
lcall
dec
test
sbb
add
les
push
jge
into
insl
and
ret
fwait
sbb
mov
and
je
adc
mov
in
dec
xor
je
nop
mov
addr16
lock
repnz
fcomip
xor
push
pusha
cwtl
orl
stos
pop
add
loope
and
xchg
pusha
add
sbb
std
dec
data16
loopne
dec
sbb
addr16
sbbb
addb
sbb
or
and
mov
sbb
mov
pop
xor
imul
adc
xor
and
inc
mov
out
es
pusha
xor
inc
cmp
dec
xchg
mov
fisubs
stc
sbb
dec
and
mov
lods
push
dec
add
out
stos
adc
jo
ret
insl
push
mov
sbb
imul
movsb
add
fnstcw
dec
xor
mov
mov
and
das
add
int
pop
ret
and
jns
loopne
iret
push
fsubr
jmp
and
inc
mov
and
les
jne
and
add
xchg
pop
jmp
das
or
test
stos
mov
cld
pop
in
sbb
movsl
pop
dec
push
cmp
dec
call
push
xor
out
test
cmp
mov
add
mov
std
lds
jg
daa
test
add
icebp
xchg
push
adc
add
popa
xchg
cmp
mov
mov
push
inc
enter
lods
scas
std
add
ja
addb
pusha
hlt
std
mov
mov
pop
xchg
add
stc
add
das
pop
and
add
mov
and
sbb
cltd
mulb
sub
mov
and
sbb
mov
push
mov
inc
mov
add
xor
in
scas
mov
and
mov
pop
add
jle
lcall
adc
mov
inc
jg
das
inc
or
xchg
and
push
test
repnz
adc
imul
les
incl
mov
pusha
push
mov
mov
loope
add
inc
fdivrl
ja
repz
or
sahf
sbb
and
gs
add
dec
push
mov
insb
das
xchg
aaa
bound
das
fmull
push
cmp
and
mov
test
int3
inc
sbb
xchg
cmp
cli
xor
pop
dec
inc
stc
and
mov
sbb
shlb
add
outsb
lods
stos
pop
mov
call
jl
mov
adc
xchg
dec
and
jge
stos
and
arpl
push
clc
sub
sbb
mov
fs
pusha
in
mov
out
cmp
mov
insl
repnz
mov
mov
dec
ds
clc
cmp
mov
adc
adc
mov
repnz
mov
lds
mov
sahf
jae
and
or
jecxz
pop
negl
loopne
add
cmpsl
sbb
pop
inc
fucomip
xor
xchg
sbb
add
push
fcomi
and
adc
push
mov
mov
add
lcall
out
gs
pop
pusha
adc
sti
add
mov
movsl
mov
jno
dec
test
lret
data16
insb
cmp
add
movsb
shrl
push
xchg
or
sbbl
enter
adc
push
into
pop
js
sbb
and
je
arpl
les
dec
and
or
cmp
rorb
leave
jge
sahf
nop
xchg
into
movl
mov
ljmp
or
add
incb
ret
or
mov
andb
push
in
sahf
cmp
xchg
and
jmp
or
pusha
nop
pop
xor
ret
add
icebp
dec
cmp
cs
nop
lahf
mov
jmp
rcr
add
lods
push
add
lcall
aam
sarb
cwtl
fbld
pop
adc
stc
xchg
fs
cld
xchg
push
or
sbb
orb
icebp
je
outsb
add
lret
add
mov
xor
bound
rcl
dec
push
loopne
jb
std
push
enter
pushf
in
test
testl
or
loopne
mov
add
and
sub
je
and
out
inc
addr16
add
mov
clc
pop
ret
aas
jno
add
xor
add
mov
mov
std
push
mov
xor
dec
mov
test
push
fs
mov
or
cmp
daa
cmp
stc
nop
or
jne
dec
sahf
pop
push
sub
out
jno
cwtl
inc
mov
pop
cmpsl
add
loop
insl
add
or
aam
lods
and
sbb
call
cmp
add
rorb
xor
sbb
mov
les
das
mov
add
ja
and
pusha
and
jmp
pop
push
and
repnz
xor
add
add
adc
shl
sbb
bound
sbb
jmp
jg
jns
and
cmp
jne
daa
loopne
mov
ror
mov
xor
adc
es
xor
ja
jl
mov
sti
in
mov
mov
pop
sub
gs
adc
and
test
and
or
sbb
inc
mov
or
add
add
sbb
into
jbe
dec
push
imul
pop
jo
enter
sbb
mov
test
rcr
add
jmp
mov
nop
lods
repnz
add
pop
dec
or
test
stos
enter
and
xor
add
andl
insl
dec
and
add
popa
xchg
push
jnp
pop
dec
rolb
mov
fs
sbb
add
mov
and
xor
icebp
dec
cld
mov
std
imul
adc
in
add
add
add
out
and
stc
subl
bound
cmp
adc
lret
mov
mov
cmpb
push
cs
jnp
and
loop
adc
add
xchg
mov
mov
insb
lret
mov
xchg
inc
test
jae
inc
lods
movsl
pusha
and
cmp
add
jmp
push
cwtl
popf
les
test
lret
mov
cmp
pop
movsl
int3
daa
pop
in
and
test
jbe
ret
outsl
add
push
arpl
xor
repz
mov
jnp
sbb
mov
xchg
jmp
xchg
add
pop
xchg
mov
clc
loope
mov
or
test
out
popa
jns
xor
push
sti
faddl
mov
mov
mov
lock
add
lods
cmc
cli
dec
jo
std
sarl
fcmovnbe
cmpsb
orl
adc
mov
and
and
jne
xchg
int
inc
add
enter
sti
adc
dec
std
sub
mov
dec
xor
movsl
mov
dec
test
fisttpll
and
xlat
mov
cwtl
andb
sub
mov
ss
sub
xchg
jns
jno
pushf
sbb
push
xor
je
sbb
add
mov
push
or
mov
mulb
inc
andb
ret
xchg
xor
faddl
or
add
les
xor
subl
mov
andb
adc
int3
and
pop
cmc
sbb
mov
lds
sub
cmp
cmp
cwtl
inc
xor
adc
pop
jge
lock
sbb
rorl
cld
rolb
bound
cmp
addb
add
pop
aas
stos
dec
mov
xor
mov
loopne
mov
mov
je
cltd
fdivrl
sbb
mov
addl
mov
xor
mov
mov
sub
fnstsw
lock
or
sbb
daa
rcr
rcrb
lahf
nop
pushf
or
test
scas
sub
fmulp
sbb
or
fildl
out
adc
pop
mov
je
negl
jns
add
shl
pop
mov
enter
rclb
and
in
js
popa
jecxz
sarl
pop
mov
fldl
and
sbb
outsl
dec
xchg
nop
sub
xchg
add
mov
cmpsb
repnz
add
jmp
insl
cld
xor
sbb
cmp
xchg
jae
mov
mov
rcr
inc
nop
add
adc
add
inc
ja
mov
ljmp
popa
cwtl
pushf
add
mov
jo
pop
sbb
repz
add
mov
fdivrl
jbe
imul
arpl
add
mov
out
test
repz
insb
dec
outsb
pushf
or
sbb
and
data16
add
js
mov
xor
dec
or
fcomip
in
iret
sub
xor
lcall
cmp
jno
inc
clc
xchg
push
sbb
dec
add
jge
inc
add
or
or
imul
push
push
or
sbb
orl
sbb
inc
push
mov
and
adc
add
and
or
mov
pop
test
and
pop
ret
loopne
lret
es
pusha
push
repnz
mov
addb
outsl
mov
add
inc
gs
or
add
stos
out
mov
movsl
sbb
adcb
test
nop
cwtl
je
out
andl
jg
sti
loopne
dec
adc
cmp
mov
add
je
sbb
int
pop
out
and
js
or
pusha
cld
jbe
or
roll
mov
pop
push
push
mov
jmp
jmp
lret
xchg
call
mov
mov
js
cmp
test
inc
and
adc
add
pusha
int3
mov
lock
add
outsl
sbbl
int3
fwait
mov
jnp
aaa
ds
loopne
jns
cwtl
xor
pop
inc
or
push
sub
xor
gs
int3
mov
out
mov
imul
mov
hlt
adc
pop
jns
adc
cmp
mov
adc
bound
cmc
ret
imul
inc
mov
sub
pop
test
int
addr16
dec
mov
std
add
dec
xchg
les
aam
lods
les
sub
mov
sbb
xor
pop
push
sarb
pop
push
mov
and
xor
mov
sub
jo
jecxz
mov
mov
cmp
in
inc
xor
jae
sub
movsl
lock
cmp
shr
jo
adc
cwtl
sub
hlt
data16
jmp
es
add
mov
aaa
xor
into
arpl
int
adc
and
filds
sub
xchg
shlb
pop
cmp
mov
and
mov
lods
xchg
arpl
lea
push
rorb
adcb
push
outsl
movsb
cmp
xchg
pop
in
stos
adcb
test
cwtl
insb
or
fcoms
repnz
add
stos
mov
mov
cmp
aas
and
icebp
fmull
out
lods
pusha
xchg
fsubr
mov
mov
aaa
and
cs
fisubrs
cmp
jge
and
mov
add
pop
add
ja
xor
add
orb
and
test
jge
mov
xor
lret
and
rcll
int3
pop
es
add
add
push
sub
ljmp
add
mov
push
insb
ret
mov
push
cmp
xchg
add
sub
out
ds
pop
or
pop
fprem
shrl
sbb
add
std
popa
adc
fimull
repz
lcall
xor
les
loope
sbb
sub
push
xchg
mov
arpl
xor
decb
lcall
jno
xor
xor
stc
rclb
jns
sub
xchg
enter
repz
and
push
and
add
das
jmp
jae
cmc
icebp
add
mov
push
loopne
gs
jge
mov
cmp
sti
add
fimull
xchg
mov
xchg
int3
push
cmpsb
add
push
shll
pop
arpl
add
mov
add
outsb
hlt
add
aas
cmc
popf
mov
inc
sti
cltd
add
jl
icebp
and
and
or
test
xor
add
ret
daa
repnz
push
scas
repz
dec
push
inc
or
sub
and
or
fimull
je
cmp
pop
in
testb
pop
add
mov
popf
or
adc
sahf
sub
out
fs
fisubrl
jne
mov
in
push
dec
loopne
ret
xor
movsb
rolb
mov
sub
decb
sub
sub
dec
out
ja
jp
push
imul
sbb
add
les
add
inc
das
sbb
fwait
sub
out
xchg
and
je
sub
pusha
mov
xor
dec
push
repz
sarb
pusha
and
jg
add
mov
pop
pop
xor
jbe
mov
inc
call
fcoms
push
xor
add
pop
ret
sbb
sarb
sar
popf
sti
add
aaa
add
mov
mov
pop
test
cs
outsl
push
fadds
xor
mov
sti
sbb
jg
dec
cmp
add
xor
in
lcall
sbb
xchg
jp
jo
into
cmp
into
pop
dec
ds
add
insb
push
or
jp
jmp
pop
lea
mov
repnz
inc
add
adc
mov
loopne
add
inc
lods
cmp
push
outsl
mov
dec
lock
in
fiaddl
and
mov
jle
jno
and
or
ds
xor
test
inc
imul
add
mov
push
mov
pop
sbbb
add
pop
xor
in
std
xor
adc
ret
aam
dec
and
jbe
mov
sbb
pop
adc
xchg
stos
push
aad
sub
cmp
mov
jns
add
pop
test
or
movsbl
test
adc
int3
sti
mov
add
in
testl
test
mov
in
and
add
cmpsb
sub
jl
add
adc
xor
stos
roll
shlb
adc
push
fcomip
or
enter
sarb
push
and
fdivrp
fisttpll
ret
enter
and
mov
mov
sbb
pop
pushf
fisubs
int
shrb
fstps
jmp
mov
data16
adc
cmp
icebp
sahf
shl
mov
and
add
fnstcw
cwtl
mov
add
push
aaa
imul
test
in
jns
sbb
pop
xor
sub
dec
mov
enter
xor
push
fsubr
movsb
pop
and
mov
mov
jmp
lret
pop
enter
lret
inc
cmc
jl
add
loope
js
cmp
dec
fadds
test
add
fldl
shlb
and
xor
sub
cmp
push
fs
xor
stos
sbb
xchg
int3
pop
pop
mov
mov
outsl
xor
add
mov
pop
ret
sbb
divl
sub
push
pop
inc
test
loopne
sbb
pop
add
dec
out
add
shlb
imul
dec
aam
and
rorb
enter
insl
jecxz
inc
shll
adc
les
dec
out
add
dec
lods
inc
stc
cs
mov
addl
jno
mov
xor
lods
inc
jo
mov
movsb
fdivr
loope
cs
ja
push
cwtl
das
jmp
cmpsl
dec
mov
push
xor
daa
fdivrs
cmpsl
add
adc
les
add
out
sbb
or
jo
inc
jecxz
mov
xor
outsb
pop
cwtl
xor
aaa
stos
xor
andb
mov
mov
test
sub
xchg
add
stos
ret
dec
cmovne
hlt
leave
ss
pusha
dec
mov
cmp
cwtl
out
mov
push
mov
lods
fmull
addr16
mov
lret
les
mov
jne
outsl
jb
arpl
dec
xor
sbb
shll
inc
test
adc
fwait
mov
mov
jno
sbb
dec
shl
sbb
push
inc
leave
std
mov
xor
inc
push
add
cmp
dec
cli
mov
loope,pn
and
rep
xchg
pop
mov
xchg
and
outsb
sbb
loope
or
lock
pop
bnd
jo
xor
nop
jecxz
stos
test
mov
inc
push
in
cmpsb
sbb
or
sbb
ljmp
and
fwait
mov
cmpsl
gs
sub
mov
ss
pop
shrl
sbb
jge
add
arpl
mov
imul
hlt
mov
pop
and
push
push
xlat
push
icebp
cmpb
xchg
dec
insl
sub
sahf
xchg
mov
stc
add
xchg
test
xor
add
sbb
std
push
rcl
mov
mov
stc
mov
subb
pop
enter
into
or
jecxz
or
pop
rolb
scas
sarb
mov
or
jns
inc
xchg
adc
fldl
mov
repz
in
shrb
lea
xor
or
ret
shlb
cmp
xlat
sub
mov
add
out
in
insl
cmp
cmp
mov
loopne
mov
jl
icebp
jl
pop
mull
mov
cwtl
stos
mov
xchg
das
fsubs
and
jl
cmp
sbb
stc
ja
sub
mov
mov
imul
inc
xchg
sub
sbb
ja
mov
dec
add
xchg
outsl
jg
mov
sbb
jno
mov
bound
add
das
test
test
jg
mov
cmp
jmp
mov
mov
rolb
stos
adc
orl
imul
add
sub
clc
pop
adc
push
lcall
popf
cmc
idiv
mov
xchg
cmp
mov
jl
loopne
pop
rolb
insl
imul
lret
in
daa
adc
adc
cmpsb
pusha
mov
cmp
xor
xchg
test
pusha
add
arpl
ja
push
and
popa
mov
sbb
fs
ud2
fiadds
incl
dec
mov
pop
nop
insb
xor
add
push
inc
insl
push
adc
push
lock
mov
push
mov
paddb
mov
hlt
sub
pop
fmul
jno
cmp
fistpl
test
or
xor
test
in
adc
sbb
adc
cli
sbb
shlb
pop
test
arpl
test
sbb
xor
cmp
jp
add
pop
fs
out
rorb
mov
outsb
add
adc
cmpsb
mov
pusha
ret
xchg
cmp
incl
ret
pusha
aam
andb
outsl
xchg
inc
cmp
pop
and
nop
movsb
sub
push
aam
lock
ja
and
and
repz
adc
pop
add
cmp
add
insb
jns
scas
xchg
mov
lods
mov
loope
and
sub
add
lret
jge
xchg
cwtl
cmp
push
xorl
jae
loop
xor
add
or
jae
cmp
or
repnz
fsubs
dec
das
pusha
and
add
out
xchg
daa
andl
mov
pusha
add
add
fs
jp
mov
loop
xor
shl
out
idivl
outsb
into
pushf
push
cmpps
pop
add
or
add
gs
adcl
pop
cwtl
mov
push
mov
xchg
pushf
hlt
inc
sbb
push
jns
mov
icebp
or
outsb
and
imul
sub
pop
pop
xchg
mov
cld
sbb
add
ret
cmp
leave
gs
xor
sub
push
sahf
insb
arpl
out
pusha
xchg
popf
cltd
push
ret
int3
in
cli
adcl
cmp
repnz
fcmovbe
mov
stos
add
mov
mov
insb
and
mov
add
mov
mov
pusha
nop
push
pop
push
adc
dec
lret
inc
jecxz
add
or
dec
lret
cwtl
mov
mov
movb
mov
fisubs
je
or
xorb
mov
out
add
repz
sub
add
add
adc
xor
stc
loop
add
ret
sti
hlt
lret
dec
inc
mov
pop
addr16
imul
cmp
in
add
mov
cmp
sub
nop
repz
popf
addb
lret
jne
mov
adcb
cmp
iret
or
fiadds
mov
cmpb
nop
imul
repz
movb
and
mov
test
test
adc
mov
pop
out
xor
ds
pop
jns
popf
mulb
cmc
roll
mov
imul
gs
xchg
dec
xchg
rclb
repz
pop
inc
add
in
pop
out
and
sbb
test
pop
or
mov
xchg
rcr
imul
in
push
outsb
ja
sbb
jmp
aas
add
and
call
enter
inc
xor
add
xor
or
cmp
das
sbb
inc
mov
push
mov
adc
iret
shll
in
cs
cmp
add
insl
and
dec
cmp
rorb
int
add
ret
lea
stc
and
or
mov
repnz
into
mov
inc
add
and
mov
imul
sbb
shll
or
push
divb
jb
add
fldl
adc
rclb
cmp
inc
mov
xor
in
xchg
xchg
clc
inc
rol
ret
fisubl
sbb
lret
dec
xchg
mov
jno
sahf
shll
shl
sbb
pop
popf
into
int3
mov
xchg
ret
clc
jae
dec
fadd
add
jge
inc
jo
cmp
cld
push
and
xchg
or
mov
sbb
and
ror
sub
arpl
cmp
add
add
cld
pop
inc
movsl
add
sbb
test
inc
out
push
icebp
in
add
aaa
repnz
mov
sar
shlb
xchg
ret
cmp
mov
xchg
lock
divb
pop
inc
push
add
mov
gs
add
sbb
sub
push
and
adc
xchg
jmp
loop
jo
cld
pop
jle
popf
or
cmp
sbbb
jns
cmpsl
jae
jo
in
outsb
jl
out
test
jns
add
je
inc
daa
aaa
inc
xor
ja
cmp
xchg
or
rclb
clc
roll
sbb
mov
arpl
cmp
or
movsb
sub
mov
scas
add
mov
pop
dec
faddl
jmp
push
aad
pushf
add
push
sbb
sti
je
test
mov
pushf
daa
enter
inc
lock
in
dec
and
rcll
lcall
shlb
and
aad
push
fs
cli
pop
dec
and
push
cmp
cmp
sbb
pop
mov
inc
movsl
jne
push
sarb
pusha
xchg
mov
xchg
add
gs
iret
inc
repz
out
xchg
std
call
cwtl
xor
cmp
test
mov
iret
enter
sbb
rcll
mov
mov
jbe
mov
data16
ret
pop
adcl
pop
pop
inc
push
push
mov
pop
pushf
dec
rorl
jl
cmp
add
inc
cmpsl
sub
aas
xor
pop
mov
inc
add
inc
imul
adc
xor
aas
pop
inc
or
loop
pop
xor
adc
jl
pop
push
insb
xor
jecxz
mov
xor
outsb
outsb
mov
shrl
stos
mov
sub
aas
lock
mov
add
mov
enter
mov
ret
mov
ret
xchg
sbbb
pushf
push
cwtl
push
pop
mov
out
or
jns
cmpsb
test
cmp
mov
clc
shll
pop
dec
xchg
push
pop
dec
or
pop
test
pop
mov
add
outsb
jecxz
stc
outsb
sub
outsb
mov
dec
jae
jne
pop
mov
es
in
inc
movsl
pusha
adc
incb
fsubrp
mov
mov
add
and
hlt
add
xor
nop
addps
mov
call
mov
inc
andb
loop
sbb
fcoms
push
and
addr16
ds
hlt
push
dec
enter
jp
and
mov
xor
nop
js
aaa
in
add
addr16
push
lock
stos
sbb
push
pushf
into
insb
mov
aaa
lods
or
fstps
push
in
pop
out
popa
clc
jle
arpl
je
imul
lds
push
cmpsl
test
addr16
fstps
ja
cmp
xchg
pop
lock
pop
cs
and
add
mov
mov
add
repz
add
mov
adc
push
mov
inc
sbb
or
fdivr
dec
cmpsb
and
and
call
movsl
test
dec
cmp
out
insb
scas
xchg
imul
mov
pop
nop
dec
inc
mov
or
mov
fmull
mov
jo
and
inc
stc
orl
nop
push
fsubs
lods
and
cmp
adc
push
cld
push
inc
gs
push
or
sbb
or
sbb
add
popa
mov
mov
push
shll
jo
pusha
pop
mov
outsb
push
push
cmpb
pusha
data16
lret
outsl
popa
mov
into
aam
jno
or
push
and
xor
or
out
pop
loopne
cmp
in
mov
sbb
enter
or
ret
lods
adc
repz
into
dec
shll
gs
lea
dec
repz
cwtl
inc
pop
sbb
pop
fiadds
leave
xchg
scas
popa
in
daa
in
jns
or
popa
adc
fdivrs
push
dec
mov
add
mov
aam
or
leave
pop
gs
loope
add
pop
pop
decb
inc
arpl
divl
inc
mov
ljmp
orb
dec
adc
inc
fcoms
add
nop
mov
repz
xchg
jns
dec
call
ficomps
shrb
cwtl
adc
jl
into
jno
std
das
and
or
out
mov
push
or
xchg
popf
xchg
das
or
inc
in
inc
or
inc
idivl
jecxz
xchg
and
test
xchg
movsb
jl
add
andl
mov
daa
xchg
add
into
mov
sbb
lods
pop
xchg
lods
xlat
fs
add
cli
sbb
fldl
nop
add
shlb
xor
aas
sbb
pusha
mov
cmp
icebp
mov
movsb
sbb
xorb
shl
mov
jns
cmpsl
adc
sbb
mov
mov
adc
loop
loop
xor
into
add
xchg
insb
lea
and
add
xchg
sbb
shlb
fs
xlat
loopne
mov
add
movsb
fbld
lock
xor
ds
adc
and
inc
push
and
je
sbb
mov
jmp
add
std
adcb
pushf
and
xor
mov
sbb
ret
adc
jge
add
inc
inc
cmp
scas
das
cmp
sbb
lahf
lcall
or
sub
rorb
cmp
mov
push
hlt
or
decb
loopne
clc
clc
inc
adc
push
mov
clc
ja
mov
stos
popa
repz
xchg
pop
pop
loopne
call
jecxz
or
arpl
xorb
mov
dec
add
and
xlat
or
mov
inc
mov
clc
pop
inc
fiadds
add
add
in
mov
loopne
in
and
frstor
xor
xor
stos
jp
add
mov
cmp
lock
sarl
pop
cmpb
pop
and
jns
sbb
add
and
push
add
mov
loopne
orl
add
les
lods
mov
les
lretw
rorb
add
pop
loopne
sbbl
rol
out
and
xor
ret
data16
les
dec
push
push
mov
xor
dec
cmp
arpl
shrb
adc
xor
sbb
jae
or
fcomps
push
xchg
lods
xor
pop
push
lock
enter
add
or
mov
pop
xchg
in
scas
add
or
shll
enter
in
insb
sub
mov
adc
push
xorl
mov
lcall
cwtl
push
push
addr16
pusha
pop
xchg
pop
les
dec
or
add
fcomps
and
adc
movl
loopne
sub
aaa
xor
or
arpl
nop
imul
aam
xchg
aad
in
adc
and
jge
pop
xor
pop
jno
sbb
and
movsl
push
nop
leave
add
aaa
sarb
fwait
dec
in
push
cmp
xchg
mov
sbb
pop
pop
jge
push
push
add
add
add
pop
sub
pop
mov
xor
mov
in
ret
sub
push
loop
add
xorl
repnz
sbb
repnz
repnz
xor
add
dec
js
jmp
xor
cmp
or
add
shl
add
xor
dec
jne
xchg
aaa
add
cmpsb
add
push
jmp
inc
es
mov
push
pushf
test
adc
test
sub
mov
add
xchg
mov
les
jns
test
insl
les
popf
sub
lret
lahf
xchg
xchg
loopne
js
nop
and
adc
jb
dec
jb
push
loop
xor
dec
aam
mov
lods
ja
insb
je
cld
in
xchg
push
outsb
je
repnz
repnz
xor
faddl
mov
shl
adc
cld
sub
out
jmp
sbb
add
stos
xor
inc
cmp
test
ret
push
and
cmp
xchg
sbb
cmp
in
add
sub
cmp
push
arpl
gs
hlt
popf
int
rol
adc
add
mov
mov
lods
aaa
mov
icebp
sub
aaa
adc
mov
sub
in
sbb
lcall
xor
lahf
andb
int3
ret
mov
rcrl
out
clc
out
fiadds
hlt
inc
mov
out
and
dec
adc
jno
cmp
fs
imul
std
popa
mov
mov
in
es
xchg
jmp
cmp
pushf
pop
mov
clc
leave
and
dec
pushf
addl
add
xor
call
push
lods
and
cwtl
push
imul
xchg
pop
test
mov
fcomip
and
push
pop
jnp
cmpsl
and
mov
insl
add
shrb
xchg
inc
add
mov
inc
loopne
lds
push
ja
sub
mov
xchg
incb
enter
jns
cmp
sbb
jecxz,pt
pop
mov
add
jo
rol
leave
or
cmpb
jecxz
mov
jge
popa
xchg
aas
mov
mov
shl
aaa
orl
fdivrs
test
xor
add
fcoml
pop
aaa
pop
pushf
ret
lahf
pusha
test
mov
mov
repnz
clc
mov
sub
sub
and
call
xor
in
jns
loopne
test
mov
sbb
sbb
or
in
inc
outsb
mov
push
add
les
in
xchg
and
cmp
adc
mov
mov
xchg
cwtl
jl
jns
add
arpl
ds
and
dec
mov
cmp
in
cltd
dec
xor
lods
push
push
mov
decb
std
inc
lock
xor
lds
pop
jp
xchg
scas
ret
or
push
add
ja
rcll
in
aad
outsl
jp
add
mov
adc
jge
mov
cmp
int3
mov
and
mov
add
mov
dec
lcall
out
cmp
inc
add
pop
and
int
and
pusha
in
test
cmpsl
xchg
loopne
into
inc
mov
insl
shr
addb
out
mov
mov
dec
insl
roll
aaa
jg
fdivrl
jae
push
fldenv
jg
mov
dec
mov
rcr
xor
hlt
cwtl
pop
mov
subb
js
rorb
out
stc
ja
je
pop
push
mov
xor
or
shlb
mov
mov
in
loopne
pop
bound
mov
test
in
daa
mov
inc
dec
add
loope
cs
push
aam
out
add
mov
jno
aad
add
lock
testb
lahf
icebp
adc
jmp
pop
cmp
lcall
leave
scas
gs
add
cld
pop
add
ret
xor
jae
jae
sbb
add
dec
hlt
inc
xchg
push
leave
inc
xchg
mov
add
lods
xchg
dec
dec
lds
add
push
add
or
in
lahf
nop
sbb
mov
imul
push
bound
cmp
mov
mov
add
dec
mov
in
mov
lods
mov
xchg
jmp
pop
jp
xor
sbb
into
mov
dec
or
mov
mov
test
adc
sbb
mov
setg
cltd
inc
mov
lcall
aam
cld
mov
lock
mov
push
adc
pop
outsb
xchg
fimuls
push
xchg
clc
sub
daa
fsubrs
adc
jge
mov
pop
hlt
leave
mov
subb
adc
and
ret
rep
add
sbb
jns
mov
gs
inc
or
cld
mov
and
or
roll
shll
dec
sbb
xor
sahf
mov
inc
sbb
mov
das
inc
sbb
aaa
icebp
adc
xchg
xchg
mov
or
xor
push
adc
test
or
fcompl
mov
orb
inc
test
add
cli
mov
aam
aaa
jmp
arpl
das
icebp
sub
mov
dec
mov
and
js
mov
jbe
loopne
mov
cmp
arpl
mov
push
dec
nop
pushf
in
xor
in
ds
sub
es
xor
aaa
orl
cmp
cltd
add
lock
fs
repnz
dec
test
xchg
jmp
xor
stc
jl
mov
inc
in
sti
inc
gs
mov
xchg
adc
outsl
cwtl
xor
jg
and
and
clc
repnz
shll
adc
ja
pop
fsub
addr16
out
outsb
inc
jp
fstl
jo
shrl
jmp
pop
int3
sub
aam
mov
xor
add
icebp
loope
les
push
test
fwait
in
dec
jecxz
out
push
mov
fwait
xchg
cmpb
sbbb
ds
inc
sahf
mov
cmp
xchg
xchg
out
movsb
push
arpl
mov
es
inc
adc
loopne
add
test
adc
je
out
sbb
lea
and
dec
mov
sbb
loope
pusha
lock
inc
jecxz
dec
mov
js
dec
cmp
subb
sbb
sbb
mov
testb
or
pop
pop
popa
fcom
inc
cli
fldcw
mov
pop
test
sub
and
or
cltd
in
je
scas
mov
cld
mov
rclb
and
nop
jns
fsubl
fadd
enter
test
mov
mov
shrl
sbb
hlt
and
pop
add
ffreep
cmp
out
mov
rdpmc
jns
movsb
int3
mov
jns
fldcw
daa
rep
sub
jge
sarl
fimuls
test
out
mov
mov
in
aas
rcrl
or
xchg
mov
fisttps
pusha
jb
mov
and
add
aas
in
pop
cmp
je
mov
add
inc
cmp
and
and
pop
adc
and
std
pusha
jbe
push
add
xchg
jmp
les
jnp
add
loopnew
jns
push
lret
scas
or
cmp
push
dec
lock
loope
cld
mov
add
jnp
push
out
mov
cmc
sbb
outsb
pop
aas
adc
adc
push
stos
and
les
je
rcl
pop
xor
and
push
rorb
xchg
and
and
mov
fwait
push
mov
ds
notb
jmp
in
call
aaa
adc
data16
inc
aam
ret
and
inc
sbb
enter
shll
adcb
sub
pop
cltd
movsb
add
aaa
jl
data16
sbb
cltd
rcrl
aaa
scas
jns
pop
imul
dec
mov
out
add
mov
aaa
mov
mov
or
jno
add
pop
scas
in
inc
xor
mov
cmp
xorl
xor
loop
xor
sbb
enter
add
jno
add
mov
clc
aam
cmp
dec
divl
fldt
sbbl
lret
andb
jecxz
insl
cmp
mov
and
lret
cmp
cmp
das
fsubs
or
pop
jbe
add
dec
push
sbb
sbb
pusha
mov
shll
sbb
and
sbb
enter
push
dec
inc
sbb
stc
add
pushf
add
daa
mov
ret
add
stc
pop
sbb
stos
xchg
jge
push
pop
lcall
jl
adc
shrb
ljmp
mov
shrb
inc
outsb
aas
jne
idivl
inc
or
ja
mov
sti
add
in
inc
sub
cmpl
add
adc
pushf
dec
push
insl
inc
pop
pop
je
cmp
mov
pop
bound
pop
sbb
popa
ret
mov
mov
adc
imul
sub
push
push
sbb
fnstcw
inc
inc
jne
enter
leave
mull
pop
adc
loop
scas
add
hlt
nop
jb
add
push
jno
out
repz
test
mov
or
xor
data16
and
xor
add
sbb
into
js
pop
inc
add
push
jg
inc
insl
jbe
les
add
mov
mov
repnz
jmp
cmp
loopne
cmp
adc
in
pop
push
sbb
repz
and
pusha
aas
rcrl
mov
push
cmp
mov
mov
dec
xchg
cwtl
mov
loopne
and
sub
movsb
in
or
mov
xor
mov
mov
add
jno
xchg
sbb
fnsave
lods
jns
xor
in
adcl
xchg
cmp
jg
inc
lock
mov
pop
data16
sub
call
test
jnp
sub
add
into
mov
inc
insb
lret
mov
fwait
xchg
mov
sub
xchg
movb
xchg
mov
add
add
lods
dec
call
xor
mov
scas
rcrl
arpl
mov
jno
addr16
insl
arpl
mov
sub
cmp
mov
sti
add
test
cmp
pop
popf
roll
lods
cmp
mov
adc
repz
xor
fadd
mov
mov
lret
or
xchg
out
jl
add
sbb
pop
push
enter
and
xchg
lret
arpl
cmp
pusha
jmp
xchg
or
dec
xchg
test
call
mov
pop
adc
mov
fdivr
adc
dec
mov
fwait
add
stc
iret
add
dec
or
add
jo
xchg
lods
lods
add
popa
mov
mov
stos
jmp
push
cmpsb
cmpsl
fdivrl
mov
into
jl
inc
inc
and
adc
iret
and
pop
sub
in
pop
xchg
rorb
xchg
push
adc
pop
sbb
push
popa
daa
inc
inc
mov
xor
shlb
xchg
jb
dec
mov
or
dec
mov
lods
fwait
imul
pop
mov
insl
add
jmp
mov
mov
fcmovu
xchg
adc
stos
and
lret
rclb
fs
add
sbb
jne
push
ds
sub
xchg
insl
or
and
jnp
loop
lahf
andl
aam
dec
mov
add
mov
add
jmp
xchg
pop
mov
sub
mov
jl
fsubl
jb
sahf
mov
or
loope
lret
sbb
addl
enter
mov
fstps
cmp
xor
je
insl
jecxz
test
cmp
xor
add
les
inc
aam
repnz
orb
xchg
inc
mov
pop
xor
inc
xchg
test
inc
hlt
cmpsl
mov
pusha
cli
mov
in
xchg
pop
sub
mov
sub
add
pop
lcall
sbb
sbbb
jno
sub
mov
push
jmp
and
xchg
scas
and
scas
outsb
movsb
cmp
add
mov
adc
pop
add
rclb
xor
nop
sbb
pop
jne
stos
add
xor
mov
repnz
pop
jp
aas
insl
and
shlb
inc
xchg
mov
add
les
imul
in
push
sub
dec
lret
cmp
hlt
call
cmp
stos
sub
ja,pt
cwtl
mov
leave
add
outsl
je
adc
insb
xlat
lcall
popa
add
push
xorl
pushf
inc
push
je
dec
lahf
rcl
rcrl
mov
xchg
ret
es
cmp
in
or
call
lock
lahf
cmpsb
xchg
mov
xor
stos
enter
push
test
mov
mov
cmp
outsl
pop
mov
pop
mov
dec
mov
jle
loopew
lods
shll
push
or
jl
je
in
sbb
xor
ret
xchg
add
mov
mov
mov
mov
fcomip
adc
enter
insl
inc
sub
loope
xlat
xor
ret
int3
les
insb
mov
icebp
std
mov
and
ret
nop
inc
mov
add
mov
add
shll
cmp
push
jo
int3
mov
add
push
js
adc
push
popf
mov
rcll
or
fstpt
test
add
cmpsl
mov
inc
out
and
push
jecxz
lcall
insl
jns
xchg
ret
call
pop
xchg
or
add
add
lods
sahf
pop
and
pop
or
hlt
xor
pop
adc
pop
xlat
and
cltd
test
push
in
and
scas
jo
jns
ljmp
in
jecxz
cmp
call
sub
sub
out
lods
testl
sbb
and
cmp
loopne
comiss
mov
div
cltd
add
xor
jno
faddl
push
mov
lcall
inc
xor
daa
insl
add
cld
in
dec
loopne
pop
fisubs
enter
or
mov
movsb
sub
aas
jmp
xchg
xorb
xor
cwtl
scas
subb
test
das
stos
and
rol
mov
aad
shlb
xchg
xchg
js
adc
addr16
push
insb
outsl
jg
xor
ret
add
daa
testl
sbb
outsb
xchg
repnz
push
and
dec
fadds
cmpl
cmp
mov
sbb
xchg
js
add
mov
fadd
pop
fs
adc
call
cmp
pop
add
jb
xlat
es
push
xor
dec
cmp
insb
les
popa
xlat
ficomps
in
cmp
js
xchg
int3
and
cwtl
stos
dec
jge
dec
std
pushf
mov
ficoml
popl
or
in
scas
and
inc
sub
jge
mov
cmc
mov
sub
mov
mov
pop
mov
and
pop
mov
das
mov
repnz
pusha
and
cmp
sub
pop
das
mov
insb
mov
xchg
enter
mulb
cmp
add
fsts
insl
dec
jo
xchg
les
pusha
cld
cs
dec
pop
enter
adc
aam
push
movsb
jne,pt
inc
shll
mov
jmp
push
mov
cmp
pop
ja
push
mov
paddusw
push
jge
cmp
mov
mov
xchg
sbb
dec
addb
inc
pop
int3
add
mov
popa
dec
test
fmuls
add
mov
dec
ds
rcll
adc
inc
mov
movsb
les
jns
sbb
rcrb
pushf
add
xchg
insb
scas
sbb
aam
int3
and
insl
dec
shr
mov
cmc
and
mov
mov
mov
rcr
inc
xchg
add
imul
fbstp
ror
sub
add
and
int
add
popa
mov
jge
xchg
imul
dec
sbb
pop
pusha
fs
add
push
not
outsb
mov
test
add
push
mov
ret
popa
push
loope
dec
lock
and
fnstenv
pop
dec
andb
les
lock
loope
call
fdivs
inc
jnp
mov
es
pop
ja
xor
mov
pop
jo
aaa
scas
bound
rcrb
mov
mov
cld
int3
push
std
cmp
xor
call
je
lods
jno
cmp
sbb
push
mov
es
dec
jge
pushf
sub
enter
mov
add
jmp
mov
loop
inc
sbb
sbb
cmp
xchg
bound
hlt
adc
les
and
loope
push
xchg
in
pop
xor
add
add
rcrl
mov
adcb
je
add
xor
orb
cmpsb
pusha
add
cmp
imul
add
sbb
nop
les
arpl
xorb
xchg
incl
jno
dec
jge
dec
repnz
jmp
push
push
int3
pop
mov
nop
adc
insl
add
orb
fs
dec
outsl
adc
xchg
dec
adc
adc
sbb
int3
adcb
or
add
sbb
test
test
mov
xchg
push
fs
add
mov
dec
xchg
and
addl
mov
jns
push
cmp
into
jo
insl
lods
test
or
in
jns
dec
add
mov
mov
popa
ja
sahf
ss
jne
xchg
call
jbe
mov
dec
sbb
mov
loopne
ret
insb
mov
mov
repz
mov
pop
ret
or
mov
pop
mov
jnp
add
mul
mov
pop
jle
int3
enter
mov
repnz
jae
out
sub
enter
sub
push
xchg
hlt
in
jo
and
in
lods
repz
push
loop
or
lahf
xchg
mov
nop
lods
xchg
icebp
pop
pop
aas
add
decb
add
mov
fadd
repz
sarb
mov
dec
ss
inc
push
repz
pop
cmp
jo
call
cmpb
sbb
push
js
iret
cmpsl
jnp
sarb
jb
jg
movsl
loopne
imul
les
jno
xor
or
ja
js,pn
jl
frstor
test
jnp
sub
pop
mov
mov
cwtl
data16
add
mov
cmp
lods
inc
js
mov
rorb
in
add
insl
sti
clc
lret
cmpsb
int
mov
and
ljmp
loop
daa
jnp
rolb
or
cmp
ret
jnp
mov
adc
mov
and
enter
sbb
push
jg
int
mov
addr16
pop
mov
inc
mov
femms
pop
mov
add
and
sub
sub
movsb
popf
stos
icebp
dec
sti
mov
dec
or
pop
and
pop
clc
dec
sub
dec
inc
cmpb
and
push
dec
loope
inc
dec
jo
add
test
pop
add
mov
add
add
xchg
and
sahf
mov
decb
repz
dec
fstpt
jp
push
fistps
and
or
mov
sbb
fcoms
sub
pop
outsb
insl
rorb
pop
aam
push
test
inc
and
mov
test
icebp
xchg
test
inc
inc
ja
add
inc
fs
int3
insb
mov
or
stc
lods
scas
orl
in
mov
jb
fwait
jo
dec
gs
lock
les
rclb
cli
outsb
sub
cmp
mov
xor
xchg
pop
insl
mov
mov
outsb
pop
movsb
mov
rorb
mov
mov
and
int3
outsb
rorl
lret
fs
sbb
enter
mov
loopne
cwtl
in
and
jo
stos
or
sarb
enter
clc
mov
mov
popf
mov
cltd
ljmp
fs
pusha
jno
or
in
pop
adcb
push
roll
lret
xchg
mov
negb
jnp
scas
outsl
addb
inc
mov
push
pop
ds
mov
cmp
scas
je
sti
inc
pushf
ret
pop
xchg
movsb
pusha
pusha
outsl
sbb
loopne
divb
xchg
add
mov
movsb
popf
mov
negl
mov
jmp
sub
push
pop
in
int3
repnz
pop
in
push
or
adc
pop
ret
movsb
fadd
inc
and
or
rorb
fs
jno
call
shl
mov
repnz
mov
push
inc
add
mov
dec
cmp
aam
jno
xor
push
xor
outsb
or
int3
outsl
aas
testb
sbb
lods
ret
les
cld
addb
jae
or
pop
fidivrl
xor
mov
add
push
pop
mov
adc
dec
jmp
sub
daa
pop
mov
sub
cli
jo
jmp
adc
jecxz
inc
xchg
cli
push
mov
adc
sub
inc
sbb
add
sbb
mov
ja
in
clc
test
repz
pop
fdivrs
xchg
xor
add
movsb
xor
dec
pushf
or
popa
insl
pop
mov
add
dec
push
fdivl
shll
xchg
add
push
xchg
je
xchg
jo
ror
cld
mov
in
fucomp
cmp
cwtl
xchg
bnd
dec
pop
in
jge
push
int3
or
cmp
je
mov
test
xor
ficomps
repnz
or
lret
scas
inc
insb
mov
mov
pusha
call
push
xchg
outsb
fmulp
cmp
inc
in
loop
dec
cmp
enter
fsubrs
pop
xchg
jmp
dec
aas
test
rol
push
push
addr16
sarl
mov
jmp
push
add
push
icebp
roll
mov
or
repz
stc
mov
sbb
stos
cltd
clc
sarb
ja
lea
add
and
pop
je
xor
mov
inc
and
or
mov
clc
insl
push
and
insb
je
push
dec
mov
rolb
cmc
or
repz
pop
push
cmp
push
sub
incl
or
sub
hlt
xchg
in
lahf
sarb
pusha
in
ja
addr16
pusha
out
xor
mov
inc
xchg
adc
cmp
inc
cmp
shlb
hlt
xchg
call
mov
movzwl
addr16
and
cltd
add
jb
mov
xchg
or
lods
test
add
xor
push
pop
dec
int3
mov
jo
mov
jo
mov
imul
dec
or
push
stc
pop
repnz
jmp
enter
out
push
jne
push
jp
popa
inc
or
lcall
outsl
sbb
dec
pop
mov
enter
fldl
adc
add
incb
fmul
ja
lock
jo
imul
outsb
mov
adc
aaa
or
stos
cwtl
js
out
pop
or
push
add
adc
inc
or
mov
pusha
xor
aas
imull
dec
pop
jp
jmp
mov
scas
xor
int
js
lcall
hlt
mov
jb
out
sahf
push
aam
jno
adcl
pop
cwtl
dec
push
mov
add
sub
push
xchg
cwtl
xchg
lret
jmp
repz
loop
clc
push
pop
dec
sbb
fs
cltd
out
cmpl
or
mov
in
das
xor
mov
xchg
fs
add
hlt
pusha
int3
mov
mov
ds
cwtl
stos
rol
les
mov
mov
int
inc
in
add
loopne
repz
out
das
jno
and
sub
push
outsb
or
sbb
add
jmp
jl
dec
xchg
and
or
hlt
sbb
jle
xor
and
addb
push
xchg
xlat
fs
add
jae
in
int3
loopne
push
aaa
int
mov
fmuls
hlt
loop
add
pop
jge
mov
cmc
mov
add
sub
loop
inc
sub
adc
xchg
cmpsb
pushf
loopne
and
pushf
push
mov
mov
test
int
inc
test
adc
out
push
fimull
or
push
pusha
out
clc
add
pop
imul
rolb
mov
adc
aam
movsb
jbe
cmp
pop
lret
jl
add
pop
add
enter
push
mov
andb
add
add
popa
test
pop
lahf
mov
daa
adc
pop
das
pop
je
and
loop
and
aas
xor
dec
outsb
cltd
pop
pushf
fistpl
sbbb
test
lods
addb
test
pop
pop
test
rcrb
inc
les
jo
adc
imul
stos
in
and
insl
cmp
clc
push
clc
mov
pop
in
mov
pop
add
cmp
adc
shll
sub
subl
mov
mov
iret
mov
mov
mov
lods
icebp
xor
adc
insl
cmp
mov
mov
aaa
repz
fsts
mov
nop
add
push
pop
add
jle
or
push
in
jmp
or
mov
in
pop
ret
jecxz
or
jb
mov
stos
add
shlb
inc
and
sub
fists
int3
mov
in
mov
mov
insl
jno
inc
pusha
jmp
jns
int
sub
es
and
repz
dec
or
sbb
xor
les
mov
jbe
add
jno
mov
fbstp
loopne
sbb
out
lcall
pop
pop
xchg
jae
sub
pop
std
mov
sbb
mov
add
scas
cmp
mov
decl
or
in
add
shll
jl
xchg
outsb
psllw
mov
mov
inc
sub
push
sar
and
sub
push
add
in
and
into
mov
mov
cmp
xor
nop
js
in
adc
test
mov
mov
inc
push
add
insb
cmp
xor
jns
mov
mov
test
cmpsb
test
nop
fwait
out
sub
xchg
out
les
daa
add
jbe
lret
insl
in
das
loopne
jmp
icebp
push
adc
sub
inc
mov
test
movsb
xchg
fs
sbb
push
add
sbb
rorb
sub
outsb
push
loopne
fs
int3
stos
fwait
push
lock
mov
add
sub
or
xor
mov
loop
add
push
arpl
hlt
add
insb
mov
out
add
das
imul
std
xor
stos
xor
add
out
aam
mov
jecxz
mov
add
mov
loopne
call
push
sbb
lock
int3
or
nop
ret
inc
lods
xor
mov
cli
lret
jge
shr
and
cltd
call
idivb
push
xor
imull
add
mov
repz
mov
stos
xor
fidivl
fucomp
cltd
jo
mov
out
add
jle
test
add
dec
sub
in
enter
cmc
mov
mov
pop
pop
adc
cmpsl
xor
movsb
insl
int3
lods
inc
add
dec
xchg
add
div
pop
imul
and
scas
add
int3
les
adc
mov
jle
fdiv
and
add
dec
xchg
pop
in
sub
cmpb
stc
mov
testl
mov
aas
mov
xchg
hlt
inc
js
jo
add
icebp
jno
scas
xchg
or
in
inc
xchg
rclb
int3
daa
add
xor
decb
fcmovne
roll
xchg
jmp
jecxz
nop
fadd
add
adc
fsubrl
test
dec
les
sahf
cs
xor
lret
mov
hlt
scas
add
aad
sbb
je
fs
jl
rcll
xor
push
movsb
mov
add
inc
rclb
and
xor
into
dec
and
scas
xchg
mov
mov
call
call
jae
xchg
call
mov
mov
arpl
in
and
in
or
add
jmp
add
dec
dec
adc
mov
loope
test
nop
daa
insl
add
hlt
mov
push
add
xor
xchg
or
mov
sbb
stos
pop
sub
dec
test
subb
loop
imul
mov
mov
and
addl
pop
add
add
fmuls
add
es
popf
or
mov
dec
insb
sub
push
lods
in
stc
mov
in
outsb
mov
test
pop
les
lahf
pop
xchg
inc
push
cmc
inc
mov
cld
clc
ret
aad
add
mov
mov
lds
test
sti
int3
dec
ret
push
pusha
mov
xchg
je
cmpl
lods
and
inc
xchg
cwtl
aas
lret
pop
dec
jg
sub
add
sbb
sub
loopne
mov
pop
in
mov
cltd
xor
js
ret
ja
cmpsl
xor
loop
jns
sbb
adc
add
mov
out
sub
and
aam
jmp
dec
add
fs
mov
add
xchg
ss
sub
cmp
aas
pusha
jns
test
sub
sbb
fidivl
jle
rorl
jg
sub
mov
jecxz
add
pop
cwtl
fbstp
ljmp
mov
mov
inc
push
in
xchg
in
cmp
lret
mov
xorb
xchg
dec
inc
inc
cmp
subb
aaa
lret
ret
je
pop
add
scas
add
loop
insl
ds
adc
mov
les
fs
or
rorb
xor
xchg
roll
and
xchg
test
test
test
aaa
adc
add
rcll
sbb
or
mov
mov
enter
sarb
insl
mov
sbb
stos
mov
cs
mov
inc
sarb
das
xchg
movsb
xchg
adc
inc
popf
pop
adc
xor
fstl
push
adc
mov
cmp
push
je
mov
out
add
int3
test
lods
mov
inc
and
gs
mov
inc
mov
cwtl
sub
dec
or
inc
inc
sbb
outsb
add
mov
jle
mov
cmp
in
mov
mov
aam
mov
inc
lock
dec
addr16
hlt
sub
pop
mov
mov
cmc
or
cltd
add
push
clc
out
addr16
in
call
push
rol
mov
mov
sub
adc
xlat
inc
hlt
les
and
lods
fldl
push
movsb
cld
mov
xchg
fcoms
add
loop
clc
mov
sbb
insb
dec
mov
loopne
icebp
pop
dec
jl
les
test
or
pop
cmp
imul
lods
add
add
pop
jne
arpl
push
call
add
dec
cmp
mov
mov
rcrb
or
lock
xchg
push
fs
xchg
jne
mov
sub
sub
stos
cmp
fadds
mov
fwait
sbb
movsb
enter
pusha
js
and
ja
repnz
add
push
aas
movsb
and
add
in
lahf
jmp
adc
outsb
inc
push
xlat
fs
cmp
cmp
cmp
push
pop
mov
iret
pop
enter
ljmp
lods
adc
cmp
rcll
cwtl
das
jne
out
lcall
mov
ret
stos
xchg
out
dec
inc
loop
fstl
lret
hlt
ret
test
and
pop
xor
xor
pop
mov
cld
dec
sbb
cmp
outsl
jo
call
andl
or
ss
nop
sahf
xor
pusha
mov
pop
pop
or
pop
or
jge
call
and
jmp
mov
jbe
mov
hlt
mov
push
cmp
sub
push
shlb
xor
add
and
mov
repz
add
mov
popl
xor
clc
jmp
or
mov
pop
push
add
scas
sub
xchg
aad
loope
icebp
lahf
sub
mov
add
pop
leave
jno
imull
ret
je
cltd
lock
movsl
jo
push
jg
cmp
push
xorl
jbe
fimuls
ljmp
pop
or
into
out
add
push
pop
pop
rdtsc
xchg
push
add
repz
and
test
into
inc
cmpsb
iret
movsb
stos
mov
add
movb
test
xchg
push
jmp
outsb
pusha
aas
pop
xorb
pop
adc
scas
inc
jns
icebp
aaa
aas
cs
xchg
jg
mov
mov
call
xchg
sbb
lret
add
or
xor
testb
hlt
sub
xchg
add
xor
dec
adc
sub
hlt
sub
mov
sub
push
add
jmp
lds
sbb
push
sub
lods
stos
daa
or
leave
pop
insl
loopne
testb
shrl
pop
mov
cwtl
stc
rolb
xchg
push
mov
dec
mov
pop
push
push
xchg
push
subb
pop
cmp
adc
dec
lock
pop
xchg
lods
test
aad
cs
add
pusha
dec
mov
dec
or
jle
dec
add
push
fadds
mov
jp
stc
adc
mov
push
inc
add
sbb
push
popf
adc
sub
mov
and
fildl
pop
mov
pop
andl
mov
loopne
je
loopne
sbb
add
cld
dec
and
enter
dec
cmpl
mov
xchg
out
addb
push
jae
pop
cmpsb
adc
cltd
test
or
mov
or
mov
mov
int
or
pop
shrl
sub
pusha
fnsave
push
data16
orb
inc
movl
test
or
fimull
xor
outsb
pop
add
fnstenv
jl
or
adc
inc
sbb
outsl
pop
xor
pop
inc
xor
shr
cmc
movsb
push
scas
pop
dec
addb
sub
jne
out
ss
sub
push
sub
and
add
sbb
xchg
lods
mov
outsl
cli
rorl
outsl
pusha
add
xlat
or
dec
mov
pusha
psubd
data16
enter
out
sub
add
icebp
loopne
mov
or
add
call
jns
pop
add
mov
ljmp
pop
jecxz
and
dec
add
rorb
lds
dec
cmpsl
rcl
or
cmpl
or
dec
adcl
add
in
test
fmull
dec
xor
push
mov
adc
dec
and
dec
addl
pusha
ficompl
adc
leave
sbb
pusha
push
add
mov
popa
movl
inc
rorb
add
sbb
push
push
push
or
icebp
pop
or
add
xchg
cltd
dec
xor
outsl
sub
inc
jne
mov
mov
sbb
movsl
xchg
lret
pop
int
pusha
js
xor
mov
cs
push
inc
or
and
andl
les
int
iret
mov
and
cmpsb
dec
dec
cli
jo
repnz
push
add
test
adc
jle
and
nop
xor
mov
mov
rcr
push
and
subl
negl
pop
out
scas
cmpsb
inc
ja
push
into
out
cmpsl
mov
aaa
test
daa
mov
mov
filds
jmp
mov
repnz
in
out
jb
pop
mov
mov
stos
or
je
jle
xchg
out
or
sub
call
inc
add
xchg
xlat
test
jge
add
xchg
popa
pop
dec
out
mov
add
push
pusha
stos
js
add
mov
dec
add
in
mov
mov
or
add
fsubrs
in
aaa
fisttpl
out
and
adc
pop
add
adc
or
mov
dec
mov
pop
cld
dec
or
sub
inc
inc
mov
lock
add
clc
adc
cs
enter
ret
inc
cmp
cmc
dec
fwait
lea
in
sbb
imul
icebp
mov
leave
xchg
aas
nop
jo
or
leave
shrl
daa
mov
add
pusha
fcoms
test
sub
mov
inc
push
dec
add
das
ret
mov
mov
lds
adc
faddp
ret
daa
orb
ds
push
cmp
dec
stos
imul
enter
mov
mov
popf
sub
or
mov
cmc
notl
inc
pusha
or
mov
xchg
movsl
std
nop
adc
pop
call
mov
and
pop
addr16
les
pusha
xchg
mov
inc
divb
xchg
jmp
pop
xchg
rclb
pusha
ret
shll
add
or
mov
cmpsb
cld
or
sub
insl
daa
or
mov
add
add
addr16
inc
sbb
js
push
xchg
int3
or
ret
dec
push
and
mov
cwtl
test
mov
sbb
cmc
push
orb
adc
das
push
ljmp
out
mov
gs
ljmp
nop
inc
int3
xorl
mov
sub
adc
adcb
add
into
addr16
addl
dec
mov
faddl
jg
aad
pop
mov
cs
cli
pop
sbb
mov
push
lret
lea
cli
aad
add
push
adc
cld
popa
mov
decl
out
imul
mov
add
xor
sbb
jnp
dec
add
pusha
cld
push
push
jb
jbe
push
add
and
add
add
lds
push
rorb
push
adc
xchg
adc
nop
ss
lock
push
notb
mov
mov
aaa
xchg
outsl
add
mov
lahf
fsubr
push
cmp
lods
xor
lahf
cmp
add
movsl
push
testb
divb
add
ficomps
pusha
adc
and
mov
int3
or
icebp
cli
mov
add
sti
ss
jl
mov
adc
push
dec
cmp
nop
and
dec
mov
jg
pop
je
mov
jnp
xor
and
scas
jecxz
dec
outsb
call
mov
dec
sub
xor
mov
stos
mov
pop
stos
aas
pushf
or
imul
fmull
and
dec
add
dec
pop
lods
xchg
add
cmc
or
inc
int
jecxz
xor
ret
add
stc
roll
jo
mov
push
xor
lret
in
ret
jg
xor
lods
dec
fs
shlb
loopne
push
mov
sbb
mov
js
sub
and
or
mov
daa
mul
nop
mov
sti
or
icebp
movsb
pop
test
add
jmp
jge
insl
shr
add
addl
mov
mov
rcl
or
mov
daa
clc
pop
adc
add
lahf
push
in
mov
ja
movsl
and
push
adc
inc
adc
call
leave
sti
out
pop
jae
pop
cmp
push
punpckhdq
sub
add
sahf
xor
aas
rcll
outsb
in
aaa
mov
lcall
xchg
mov
out
and
sbb
mov
cmp
out
cwtl
sti
mov
mov
pop
cld
fnstcw
cld
dec
nop
pop
adc
shrb
jmp
popf
inc
mov
sub
shlb
adc
mov
lods
xor
ror
push
add
test
sti
mov
movsl
add
jno
push
fimuls
shll
out
loopne
lea
test
add
mov
push
mov
addb
ret
add
mov
sbb
test
icebp
rorl
mov
lret
scas
adc
test
pop
lock
cli
lcall
cmp
ficompl
inc
movsb
dec
push
or
sbb
cltd
add
mov
pop
jl
enter
xor
inc
mov
or
loopne
mov
pusha
dec
filds
and
xor
add
pusha
and
loopne
add
adc
cmp
pop
daa
mov
rcll
xchg
push
ljmp
pop
pop
sbb
daa
incb
push
sbb
cmp
cmp
mov
mov
mov
call
add
into
int3
leave
inc
pusha
dec
xchg
sbb
jg
in
js
or
lock
mov
mov
add
dec
cli
adc
sbbb
cli
push
imul
adc
cmc
push
fstl
cmpsb
mov
imul
jp
pop
mov
pop
adc
sub
fcoms
xchg
mov
or
xchg
jp
add
scas
subb
rcrl
dec
pusha
mov
mov
mov
dec
xchg
xchg
out
sub
scas
pop
decl
popa
jmp
or
fnsave
stc
cwtl
je
imul
ret
repnz
rcrb
add
mov
jmp
dec
sbb
out
pop
ss
sbb
fidivs
lret
daa
sbb
mov
pusha
rcll
add
mov
test
fdivrp
out
add
adc
int
popa
sbb
icebp
add
adc
popa
mov
les
pusha
mov
pop
dec
bound
sub
mov
iret
dec
adc
shll
xchg
sarl
push
insb
test
std
mov
xorb
xlat
mov
mov
imul
inc
sbb
cs
faddp
inc
pushf
mov
jae
pop
mov
cmpsl
popa
push
xchg
xor
cmpsb
jl
lcall
daa
in
inc
data16
xlat
nop
adcb
pop
rcrl
push
incb
gs
push
push
clc
push
dec
pop
mov
insl
add
inc
push
adc
lea
aas
xchg
add
repnz
mov
sbb
mov
and
adc
sub
shll
cli
ficompl
rcll
jmp
les
adc
mov
pop
mov
ljmp
inc
ds
pop
iret
cld
add
das
or
jno
sbbb
leave
aad
movb
mov
push
push
popa
popa
test
add
daa
or
xlat
test
outsb
lret
add
ljmp
push
push
or
icebp
xchg
sbb
outsl
lods
sbb
xchg
push
je
imul
and
add
mov
jo
add
cmp
or
out
cmpsl
lock
sub
sbb
push
cs
add
cmp
mov
add
out
popa
fs
add
push
cli
js
cmp
loop
adc
add
jge
add
lea
mov
dec
rcr
inc
sub
xor
pusha
mov
cmovs
test
push
push
icebp
faddl
cmp
les
cwtl
or
xchg
adcl
aam
xchg
push
xor
lret
fimull
and
rol
jae
daa
rcrb
int3
loopne
leave
std
xor
movsb
or
popa
adc
je
add
aam
into
popa
xchg
jb
daa
add
nop
stc
lcall
rolb
loopne
test
fwait
repz
outsl
ret
add
in
out
and
js
xchg
hlt
fiadds
jmp
outsb
jns
and
dec
rclb
les
test
repnz
mov
xor
or
or
ja
add
add
lea
or
pusha
and
pop
push
popa
in
out
mov
enter
movsl
je
imulb
sbb
in
loopne
mov
dec
xchg
jae
outsl
xchg
push
mov
lds
push
pop
loope
sub
or
inc
add
cmpl
imul
jp
adc
and
push
test
xlat
dec
sub
adc
push
or
cmpsb
enter
fnstenv
xor
rcl
fwait
rcll
and
scas
mov
movsl
mov
pop
dec
and
add
mov
cmp
test
in
dec
arpl
lock
insb
enter
shrb
shl
push
inc
loopne
and
cmpsb
and
sub
adc
add
sahf
sub
mov
aad
xlat
js
or
js
jle
pusha
cmc
sbb
mov
ret
mov
sbb
popa
mov
shlb
call
mov
aaa
mov
pop
cmp
sbb
sub
test
mov
push
xchg
pop
scas
and
push
fidivrs
stc
mov
cli
imul
adc
add
call
sbb
add
shll
add
loopne
test
test
nop
mov
pushf
add
pop
xchg
sbb
popa
mov
lods
test
xchg
mov
andl
call
stos
repz
popf
add
sbb
pop
aaa
jg
mov
sahf
pushf
and
mov
mov
mov
rorl
jo
rclb
rorl
sbb
xor
in
sbb
daa
jle
faddl
dec
aaa
mov
sarl
ret
pusha
jne
xor
call
sub
movsb
addb
addr16
cmp
pop
pop
lock
adc
lret
xlat
pusha
clc
push
xchg
adc
in
dec
out
xchg
or
mov
pop
adc
mov
dec
mov
sub
in
mov
lock
loope
push
pop
aas
mov
push
jmp
adc
jg
adc
and
sbb
inc
and
pop
mov
inc
add
ljmp
xorb
adcl
mov
xor
jns
lock
mov
scas
sub
adc
xchg
xchg
add
das
jmp
cmc
cmp
mov
popf
xor
xchg
cmpl
inc
cwtl
xchg
cmp
stc
mov
jnp
sbbb
add
push
adc
das
in
outsb
shl
fwait
dec
adc
add
adc
mov
pop
mov
stos
loope
data16
adc
or
and
sbb
out
mov
and
mov
or
mov
rorl
call
pop
fsubrl
subl
and
adc
roll
jmp
inc
lahf
cld
fldenv
pop
inc
mov
jmp
push
call
jb
mov
xchg
mov
xchg
add
sub
dec
jne
lret
jne
cwtl
mov
dec
xor
add
loope
dec
sbb
dec
lea
sbb
decb
sub
jbe
pop
loopne
popa
adc
push
cltd
inc
imull
push
mov
stos
pop
push
and
movsl
dec
bound
mov
mov
imulb
popf
dec
sahf
and
push
pusha
mov
fadd
and
mov
test
das
ret
pusha
test
cmp
popf
push
insl
mov
sarb
cld
cli
xchg
lods
scas
pop
lret
shll
jo
cmp
dec
jnp
add
lea
sbb
mov
add
ljmp
lret
hlt
or
sub
rcrl
inc
push
cmp
mov
fistpl
sub
mov
add
and
and
test
mov
idivb
std
hlt
cmp
jne
testb
mov
out
mov
add
stc
pushf
nop
in
mov
out
in
adc
flds
outsl
out
sub
lods
mov
ja
fwait
push
hlt
enter
and
ds
sbb
sbb
or
jmp
int
and
adc
mov
mov
mov
sti
add
test
dec
push
mov
mov
sbb
je
faddl
adc
insb
pop
push
dec
pusha
fwait
push
leave
xchg
sub
js
pusha
add
sub
leave
popa
rclb
test
inc
mov
aas
adc
dec
sub
and
addb
lret
mov
je
push
pusha
push
dec
pusha
scas
cmp
imul
movsl
mov
push
lret
sbbl
add
push
and
sbb
sarl
push
or
test
incl
cmp
pop
das
mov
cld
addr16
pop
test
jecxz
sbb
jne
jb
xor
inc
lods
mov
dec
add
leave
add
pop
sti
pusha
dec
mov
lret
jp
std
lahf
add
pop
mov
dec
and
dec
leave
cmp
mov
movsb
int3
mov
add
out
iret
lock
pop
cli
lahf
push
and
aas
sti
js
hlt
add
hlt
push
jmp
mov
pop
ljmp
add
mov
popa
cmp
fldl
add
or
jae
jns
sbb
add
adc
movsl
inc
push
mov
clc
scas
jo
hlt
xchg
sbb
cmp
add
outsb
call
scas
lods
cmp
leave
ret
mov
cmp
jp
add
pushf
adc
mov
je
mov
cmp
inc
leave
ret
mov
fdivr
roll
out
push
or
mov
and
add
fnsave
push
sbb
pop
shlb
sbb
das
mov
enter
add
aam
ja
rolb
sub
cmp
orb
fs
xor
pop
inc
inc
popf
hlt
pusha
add
out
hlt
fs
sti
push
cmp
enter
adc
inc
dec
jmp
cli
add
negl
push
or
in
inc
clc
dec
lods
xchg
pop
pop
sbb
enter
push
stc
or
ljmp
mov
leave
aad
shlb
stc
xchg
les
mov
sub
xchg
clc
jmp
add
pop
dec
nop
dec
cwtl
mov
hlt
int3
fcmovnb
clc
xchg
mov
push
add
scas
and
mov
loop
js
and
jmp
sub
xchg
xchg
push
xchg
inc
xchg
fnstsw
jo
outsb
ds
mov
hlt
jbe
push
adc
lahf
pop
mov
cld
push
or
push
add
jmp
mov
jbe
ss
or
shrb
dec
shrl
sub
cmc
sbb
adc
xor
push
adc
insl
lock
and
pop
mov
call
scas
je
mov
or
cmp
and
ffreep
lods
loopne
cld
cmp
add
lahf
add
icebp
mov
idivl
lret
pusha
mov
lods
das
pop
cmp
xor
rcrb
mov
adc
sbb
in
jns
add
inc
sarb
xchg
add
mov
or
stos
push
inc
dec
mov
mov
ss
in
icebp
inc
fldl
dec
arpl
jg
cltd
add
adc
scas
xchg
jno
lahf
or
in
add
insl
ja
imul
xor
notb
ja
imul
xor
adc
dec
xor
cmpb
xchg
repz
mov
inc
adc
fldt
rcrb
aas
mov
adc
mov
and
out
add
cld
es
jo
add
lahf
pusha
push
mov
sti
ljmp
stos
xchg
push
cmc
fdivs
mov
mov
loop
jb
dec
push
pusha
enter
cmp
add
test
repnz
xor
fwait
loope
mov
js
xlat
adc
lret
outsb
add
push
or
sti
xor
pusha
or
movswl
pop
mov
mov
popf
xor
cltd
mov
cld
shll
cmp
adc
inc
fnstcw
jl
scas
pusha
and
adc
add
test
lods
test
lret
push
push
jno
ds
jb
sub
xchg
add
mov
jns
and
or
lcall
push
ret
jmp
test
hlt
cmp
mov
dec
mov
lock
jo
add
shr
js
mov
ljmp
add
sub
pushf
das
jne
mov
dec
jg
or
and
imul
out
lock
ficoms
or
inc
mov
stc
xchg
cwtl
outsb
or
mov
mov
data16
cwtl
aam
jl
hlt
scas
popa
jne
and
jns
sub
sub
lods
or
or
pop
cmp
ret
icebp
xchg
adc
push
pop
pop
out
jl
inc
cmpb
adc
jmp
xor
je
adc
add
lds
xchg
popf
cmc
mov
das
pop
adc
lahf
xor
inc
sbb
lock
mov
fdivrl
leave
outsl
shll
sub
clc
lret
test
mov
jo
hlt
xchg
nop
cmpsl
adc
push
mov
loopne
fs
push
or
pop
nop
sub
dec
sbb
pop
dec
push
or
pop
int
or
pop
adc
and
and
jmp
push
nop
mov
add
adc
pusha
push
adc
or
xor
mov
lea
lret
dec
jmp
cld
inc
pop
orl
pop
inc
fdivl
popf
sub
ret
push
push
les
iret
outsl
cs
xor
mov
mov
inc
mov
fwait
divl
add
stos
mov
mov
jb
pop
nop
fistl
out
mov
inc
pop
test
add
call
mov
int3
fmuls
xor
sbbl
popf
or
jg
add
idivl
jnp
call
imul
xchg
jnp
lahf
inc
dec
sub
xor
jl
jbe
add
insb
mov
popa
xchg
mov
sbb
lahf
nop
rorb
mov
jo
and
cmp
add
dec
cmp
movsb
in
and
mov
ret
pop
or
jge
lret
xor
mov
push
dec
mov
jge
fsts
jmp
or
lods
int3
add
aas
mov
or
pop
jg
enter
adc
add
adc
das
and
mov
jno
xor
popa
in
insb
jge
in
or
xor
daa
jae
cmp
push
jg
dec
pop
add
push
jmp
pop
outsl
inc
lcall
mov
test
or
jnp
movsl
sbb
sbb
jns
pop
in
push
mov
cwtl
mov
add
out
add
jge
pop
xor
mov
dec
xchg
pop
jbe
inc
pop
jo
insl
insb
sbb
mov
adc
adc
subb
jle
movsb
pop
xchg
pop
lods
loopne
add
mov
xchg
mov
pop
imul
int3
sbb
repnz
xchg
cmp
nop
xorb
testl
xor
sub
rorl
push
push
jo
leave
adc
aam
jge
adc
loope
mov
and
jl
xchg
in
imul
add
mov
pop
mov
add
pop
repz
push
pop
test
ror
insl
xchg
aam
inc
mov
adc
xchg
push
repz
mov
repnz
mov
xor
std
pop
mov
subb
xchg
dec
ja
bswap
fcomp
and
and
pop
and
adc
test
out
adc
mov
dec
dec
popf
int3
sub
sbb
sub
inc
loope
aad
xchg
enter
dec
or
push
adc
sub
sbb
cmp
cltd
or
sti
add
stos
nop
cmc
testb
inc
adc
stos
lods
adc
shlb
aas
outsb
add
sbb
push
and
std
adc
pop
cmp
testl
dec
cs
lcall
inc
dec
jmp
shlb
add
xor
fists
jge
in
jl
pushf
jmp
push
cli
jo
orb
nop
sub
sbb
mov
rorl
xlat
sbb
xlat
or
mov
mov
pop
push
xlat
bound
cmp
adc
addl
pusha
add
jo
enter
sbb
jmp
cmc
cld
dec
movsl
adc
or
cmc
mov
arpl
dec
inc
sbbb
nop
es
stc
aam
lods
dec
push
add
outsb
ja
call
xchg
sbb
mov
in
inc
jns
cmp
push
or
mov
ror
subb
xor
popf
imul
insb
js
xchg
add
scas
xchg
sub
das
adc
jp
orb
pop
jl
push
fucomp
xchg
cmc
rolb
adc
mov
dec
std
mov
adc
and
add
push
or
leave
stc
push
mov
pop
jp
dec
addb
fs
imul
cmc
push
mov
inc
lahf
mov
add
jno
fisubl
pop
pop
and
adc
xchg
imul
les
loope
xor
and
imul
mov
pop
mov
movsl
lods
push
mov
cmc
xor
movsl
popa
ss
subl
je
adc
add
mov
hlt
mov
loopne
aaa
pop
add
mov
pop
bound
imul
or
lea
adc
imul
subb
cmpl
jg
pop
adc
sub
in
dec
test
cmc
or
or
les
outsb
insb
adc
in
cli
inc
jg
jl
imul
movsb
cmc
fdivl
or
add
pop
pop
popa
cli
mov
dec
stos
daa
adc
scas
and
out
xor
inc
sub
inc
in
dec
lahf
adc
pop
add
jne
imul
or
sbb
sub
fisttpll
cwtl
test
add
mov
xor
jo
or
push
pusha
xor
add
cmp
fdivp
or
mov
adc
js
enter
sub
mov
std
mov
adc
inc
mov
sub
cmpsl
repz
les
push
or
lret
mov
cmp
dec
shlb
add
loopne
mov
dec
xchg
les
push
push
pop
add
rcrb
ret
mov
fiaddl
or
dec
dec
xor
pop
dec
lret
sub
add
mov
loop
or
cmc
mov
sbb
mov
pop
push
outsb
test
sti
sub
repz
sbb
ja
mov
mov
lret
ljmp
das
repz
sub
cs
aaa
push
push
aad
jb
repz
add
cmp
enter
sbb
fsubp
xchg
adc
stc
pop
insb
loope
push
sub
inc
fisubrl
dec
call
and
leave
push
lock
popf
int
sarb
push
mov
sub
sub
arpl
fidivrs
add
sahf
sub
cmovns
add
addl
sub
loopne
cmp
add
pushf
lods
mov
adc
fcoms
inc
test
xchg
adc
push
pusha
cli
mov
lea
insl
cs
popa
int3
push
adcb
inc
push
or
sub
jo
loope
mov
les
call
in
sbb
sub
fwait
pop
sbb
ja
cmp
js
out
arpl
movsb
nop
popa
mov
dec
sbb
mov
jmp
cmpsb
push
lock
add
ret
roll
das
push
or
fisttpl
fisttpl
push
test
adc
dec
or
jo
jne
cmp
bound
sub
and
add
jp
loop
pop
sbb
sti
lds
pop
cmp
stos
push
mov
cli
add
add
xchg
fnsave
outsl
push
sbb
pushf
hlt
jo
push
dec
adc
insl
fcoml
clc
add
mov
ficompl
mov
cmpb
call
or
mov
sub
jg
pop
sub
xor
inc
xchg
pop
add
jne
mov
loopne
jbe
or
sub
fbld
xchg
subb
dec
push
mov
push
push
mov
dec
mov
mov
pop
icebp
mov
movsb
mov
add
xchg
icebp
fxch
pop
addr16
repnz
bound
and
add
stos
push
popf
sbb
dec
test
pop
unpckhps
mov
in
sub
pop
ljmp
loop
add
mov
scas
jecxz,pn
fldl
ljmp
dec
pop
int3
pop
add
xchg
cltd
les
mov
or
leave
push
push
into
das
pop
ja
push
inc
cmp
add
adcl
int
roll
jecxz
pop
inc
leave
mov
sub
jae
adc
add
mov
add
aam
xchg
mov
inc
pop
lods
lds
push
mov
or
gs
pop
and
dec
jo
scas
add
rcl
pop
lret
cmp
sbbb
adc
jp
cmc
insl
mov
outsb
pop
sbb
imul
insl
jb
add
push
push
xorl
add
bound
pop
or
sbb
out
jo
adc
jae
or
sti
pop
ret
pop
xchg
mov
loope
in
add
out
push
js
pop
mov
or
adc
mov
lret
adc
jmp
shr
xor
xchg
jb
pop
jbe
jmp
shr
fldt
enter
push
call
inc
adc
mov
andb
aam
push
xchg
inc
test
and
or
mov
loop
pop
mov
or
out
inc
push
orb
jmp
popf
mov
pop
icebp
mov
ficomps
inc
inc
mov
mov
and
nop
hlt
add
sbb
add
push
cld
mov
and
outsb
xchg
shr
in
xchg
or
inc
pop
sub
test
ljmp
lods
leave
xchg
leave
mov
in
fstpt
jne
push
das
insb
mov
push
xchg
movsl
cmpsb
and
mov
mov
mov
jecxz
imul
add
outsl
cmp
stos
mull
in
cld
ja
or
add
xchg
sbb
jl
xchg
add
sub
mov
aas
mov
outsb
dec
add
xor
rcll
insb
xchg
aad
stos
imulb
jne
jno
leave
cmpsl
int
inc
mov
ja
pop
inc
scas
ss
dec
xor
sbb
push
add
push
and
fstl
push
in
sub
mov
inc
call
add
rcll
xchg
jmp
mov
jnp
lods
icebp
xor
lds
call
xchg
and
adc
xchg
or
mov
inc
xchg
repnz
pop
out
iret
clc
mov
add
jns
add
out
loope
add
pop
test
dec
pop
lds
dec
lahf
pop
iret
sti
ror
push
mov
hlt
sub
add
scas
push
or
movaps
loop
dec
stc
les
pop
mov
ror
adcl
fsts
dec
pop
pop
nop
je
sbb
add
add
lds
add
dec
sub
fcmovnb
add
xor
xchg
ja
push
adc
or
xor
fldenv
adc
xor
popa
jle
mov
dec
cmc
out
in
pop
mov
in
adc
mov
testb
sbb
dec
xor
test
mov
xchg
mov
push
into
mov
mov
or
xchg
mov
add
repz
test
mov
popf
mov
xchg
ret
sub
dec
inc
push
push
push
pop
adc
pop
pop
lods
shrb
js
add
in
jo
pop
rolb
dec
mov
ljmp
dec
cltd
aas
fwait
xor
les
xchg
loope
xor
mov
ret
hlt
mov
repnz
imul
out
mov
clc
mov
fwait
add
notb
ja
fiadds
fnstcw
mov
in
dec
lret
iret
out
out
add
xor
mov
mov
xor
push
mov
mov
mov
add
add
pop
xchg
dec
inc
lret
sarb
lock
add
jge
mov
mov
mov
inc
jbe
notl
push
mov
mov
add
or
or
adc
add
adc
fucomp
adc
mov
push
ss
or
outsl
mov
mov
mov
outsl
mov
test
push
test
pop
push
out
adc
push
xchg
lahf
movsb
clc
test
adc
add
adc
cmc
add
es
jnp
mov
or
sub
push
mov
sbb
sarb
into
mov
add
cltd
sbb
sbb
xor
ss
add
orb
lea
add
xchg
adc
add
lret
mov
or
mov
in
xor
mov
dec
pop
lret
enter
mov
or
jb
aaa
mov
divl
jle
lock
mov
inc
and
lods
loop
mov
data16
sub
xchg
pop
adcb
xchg
test
xor
mov
sahf
xchg
lea
cmpb
push
and
scas
xchg
mov
rolb
cmc
xor
xchg
pusha
push
popa
or
mov
sub
hlt
and
shr
cmp
cs
mov
mov
mov
stc
push
adc
enter
and
lret
mov
xor
sub
sbb
and
add
mov
stc
out
lea
and
dec
cmp
xor
clc
clc
cmpsl
dec
push
adc
aam
sbb
es
xchg
loope
jp
mov
xchg
cli
jl
jmp
and
mov
mov
icebp
or
imul
test
add
and
jne
pop
jb
fcoml
pop
mov
inc
xlat
push
add
mov
mov
stos
mov
jecxz
popa
or
imul
fcoml
mov
je
fiadds
sub
jge
fucomip
jo
loope
popw
adc
xchg
push
pusha
sbb
xchg
pusha
dec
std
imulb
add
mov
xor
pop
jp
movsb
mov
mov
xchg
add
xchg
add
movsl
mov
in
adc
push
pusha
inc
inc
sbb
add
mov
std
xchg
dec
xchg
lahf
cmp
add
sub
or
aaa
push
xchg
sub
out
loopne
out
daa
or
inc
cltd
push
sub
je
dec
insb
int
outsl
fidivl
sbb
sbb
inc
movsb
ljmp
push
enter
pop
pop
cmpsl
xchg
pop
out
loope
pop
cs
inc
push
push
cwtl
popf
mov
jl
sbbb
sub
nop
add
roll
mov
adc
ss
sub
ficomps
xchg
adc
or
out
adc
enter
xor
xor
fstpt
mov
dec
mov
loopne
cld
jmp
in
in
pop
ljmp
mov
add
in
jno
or
pop
test
ret
shr
shl
sub
lods
loopne
imul
rcll
dec
jl
inc
mov
adc
gs
add
cmpsb
mov
adc
pop
sub
push
sub
xlat
mov
xchg
into
mov
or
loopne
pop
popf
or
push
aas
jne
xchg
mov
sbb
push
xchg
pop
and
enter
mov
sbb
xchg
out
sub
lahf
mov
sub
adc
in
pop
or
bound
mov
jno
or
or
sub
popa
lods
push
cmp
mov
ficoms
or
hlt
pop
lock
jno
scas
shrb
sub
cld
and
rcrb
lds
sbb
or
pop
inc
andb
jns
mov
mov
je
inc
insb
push
adc
fwait
punpckhdq
pusha
lods
mov
fimuls
inc
mov
dec
add
jno
cmpsl
jo
ds
pop
cmc
popf
mov
stos
repz
sub
test
fistl
filds
push
icebp
push
add
js
popf
push
push
and
mov
stos
mov
popa
shl
in
and
movsl
jnp
cmpsb
jno
addl
call
and
ja
std
mov
jg
xor
inc
std
lea
cmp
fimuls
imulb
dec
push
cmc
loopne
in
xchg
jnp
rol
cmpsl
das
fcoms
das
sarb
xchg
icebp
push
bound
add
scas
negb
cmp
add
clc
sub
jo
in
or
mov
or
mov
jmp
push
sbb
and
add
call
push
les
jne
inc
in
jb
xor
popa
popa
jl
andb
ljmp
cmp
xchg
inc
or
pop
mov
jb
pop
or
mov
xor
mov
push
xor
mov
and
pop
and
add
and
mov
clc
pop
mov
sbb
or
jg
push
mov
rolb
mov
push
ja
inc
and
inc
xor
adc
movsl
loop
add
or
add
movsb
dec
sbb
xor
mov
or
sub
sub
mov
cltd
imul
jno
xchg
add
imul
pop
icebp
mov
and
sub
jmp
gs
mov
add
sub
test
sbb
sub
les
and
mov
insl
addb
insb
iret
sub
fld
sub
dec
loop
push
iret
cmpsl
inc
daa
lock
sub
pop
adc
lahf
xchg
lcall
add
xchg
dec
and
and
mul
jae
aaa
cmp
arpl
loop
dec
mov
imul
dec
mov
adc
in
push
lods
shlb
aaa
ja
jge
push
jmp
mov
add
popf
lea
call
nop
jns
add
repz
jmp
and
pop
and
add
hlt
shll
mov
push
outsl
repnz
test
add
jns
inc
mov
lock
mov
jl
sbb
sbb
scas
scas
push
push
mov
mov
mov
or
popf
xchg
sbb
xchg
jne
out
out
out
lea
inc
sbb
push
mov
lahf
mov
and
push
add
lret
pop
dec
dec
nop
mov
xchg
sbb
out
push
in
arpl
mov
push
push
jl
xchg
jp
mov
xchg
jge
mov
mov
jne
mov
imul
or
add
xchg
mov
push
fs
add
xchg
cmc
push
lods
sbbb
lret
mov
xrelease
adc
or
aad
mov
lea
int3
pop
nop
repz
sahf
xor
popa
pop
fst
inc
sbb
mov
popf
push
gs
out
cmp
lret
jmp
fs
mov
mov
adc
xor
scas
jns
cmpl
push
add
roll
adc
add
stc
or
popf
jnp
jecxz
mov
in
or
pop
adc
divb
add
mov
pop
sbb
mov
cmp
push
test
rorb
sub
hlt
fld
in
push
pop
fistps
xchg
out
loopne
vmptrst
icebp
jnp
mov
das
aaa
cmp
pop
cltd
pop
bound
insb
pop
es
pop
add
or
nop
sbb
xchg
dec
loop
xchg
push
push
sti
pushf
out
jp
cmp
mov
cltd
or
push
jg
adc
pop
push
cmp
mov
dec
nop
mov
sub
adc
aad
subb
or
loop
fwait
or
sbb
mov
and
sbb
adc
pop
dec
xorl
nop
push
push
cltd
arpl
and
das
pushf
test
out
out
push
mul
mov
inc
aaa
pop
xchg
adc
xor
mov
shlb
popa
test
mov
dec
xchg
xchg
adc
orb
adc
popa
test
pop
or
je
cmp
mov
mov
je
xchg
fnstcw
imul
and
push
cmp
cmp
bound
inc
dec
out
les
jle
pushf
sahf
popf
das
stc
clc
or
pop
adcl
sub
and
jno
push
add
fidivrs
cs
or
inc
repz
jns
mov
mov
xor
out
loop
std
in
lcall
cmp
dec
pop
dec
xchg
inc
sarb
cld
out
mov
dec
fisubrl
pop
jbe
loope
pop
cmpb
call
xchg
in
test
dec
xchg
pop
sarb
mov
rolb
lods
negb
fnsave
jne
or
xorb
and
std
fiadds
cmp
add
les
int3
add
sub
pop
dec
push
adc
push
mov
cmp
insb
int
sub
into
daa
int
test
mov
cli
xor
mov
dec
push
cmpl
fwait
movsb
rolb
push
adc
pop
xor
push
xor
dec
sub
les
jmp
cmpsb
xor
shrl
popa
sbb
cmovnp
jle
mov
mov
cld
mov
mov
mov
mov
adc
out
sub
add
fistpl
sub
xchg
mov
cld
sbb
je
popf
repz
mov
popf
fsubl
mov
and
lea
ret
pusha
lret
inc
dec
repz
mov
lcall
cmp
jo
sarb
dec
xchg
xchg
enter
mov
inc
add
fiaddl
inc
inc
pushf
adc
or
mov
lret
popl
popa
int
inc
mov
das
push
adc
jp
adc
and
mov
sub
in
notl
rcrl
add
cs
aas
xchg
sbb
mov
mov
push
out
pop
lock
mov
iret
mov
push
add
stos
outsl
xchg
add
push
push
loopne
and
add
push
aam
xchg
enter
sbb
adc
pop
movsb
push
imull
iret
pop
dec
and
mov
pop
lret
fst
or
dec
jle
or
xchg
pop
add
add
mov
movsb
push
inc
add
addl
out
nop
adc
or
sub
data16
frstor
cld
mov
jbe
jmp
jo
lods
ja
jno
nop
outsl
and
ss
mov
push
push
outsb
arpl
pop
mov
das
in
bound
repnz
fdiv
add
test
movsl
inc
xor
andl
test
mov
sub
dec
shrl
sub
sub
mov
adc
mov
adc
inc
jge
inc
pusha
lods
icebp
pop
add
shll
mov
jae
xorb
xchg
shll
popa
push
pop
add
xor
xchg
popa
rsqrtps
adc
jo
daa
in
and
aas
add
sub
test
adc
and
bnd
mov
inc
push
dec
clc
lret
mov
leave
dec
lea
pop
mov
cmpsl
xchg
nop
popf
icebp
cli
and
sub
movsl
sub
sub
pop
push
xor
add
push
pop
cmp
mov
fbstp
out
stos
testb
sub
mov
pop
mov
push
or
test
cld
mov
push
in
dec
or
xchg
cmp
push
insl
in
inc
jae
xor
ljmp
pop
or
je
hlt
add
cmpsb
xor
push
cs
sbbb
push
mov
test
ret
lret
and
inc
mov
icebp
or
in
cmp
jmp
fmul
xchg
add
or
vmovlpd
push
cmp
popa
int3
mov
sub
mov
clc
enter
insl
std
push
push
shl
dec
add
arpl
icebp
pop
inc
clc
lahf
adc
inc
sub
dec
das
push
inc
adc
lahf
xchg
add
ficomps
mov
das
int3
frstor
push
xchg
enter
mov
cld
shl
add
pop
fcomp
mov
pop
das
adc
fs
sti
xchg
stos
sbb
or
mov
dec
pop
dec
jmp
roll
mov
add
pop
ss
mov
inc
mov
cli
and
add
movsb
add
pop
leave
cmpsl
movsl
pop
nop
xchg
sbb
pop
pop
sbb
sbb
jge
shlb
repz
scas
add
scas
sub
imul
sub
int3
dec
mov
nop
add
addr16
add
jns
mov
xchg
dec
scas
stc
aas
test
push
fsubrl
pop
ret
and
adc
adc
add
dec
bound
sbb
addb
fisttps
mov
jae
insl
adc
mov
int3
push
pop
iret
daa
ret
rcl
xchg
cld
mov
inc
add
lock
cmp
loop
inc
stos
sti
xchg
xchg
lods
pusha
jb
and
jmp
add
int3
push
lock
jmp
pop
cld
js
push
and
or
outsb
lds
and
dec
pop
push
mov
mov
and
add
popf
cmp
sahf
stc
loopne
fwait
xchg
clc
dec
push
aam
mov
fldcw
xchg
imul
adc
scas
jl
or
mov
rorl
call
outsb
xchg
adc
icebp
sub
xor
lods
pop
mov
mov
or
inc
inc
xor
bound
in
or
pushf
fisubs
inc
sub
call
inc
fildl
test
fwait
movsl
pop
add
xchg
mov
inc
testl
mov
xchg
pop
mov
les
iret
sbb
lea
mov
add
in
clc
mov
pusha
int
das
sbb
xchg
mov
fcompl
mov
pop
lcall
iret
sub
pop
addb
daa
pop
mov
mov
cmpsl
mov
sti
in
xor
adc
ret
loopne
arpl
and
inc
aas
nop
pusha
mov
aaa
cmpsl
clc
xor
imul
dec
repz
xchg
mov
mov
fadds
add
add
lock
cmp
lea
dec
test
nop
adc
jbe
sti
mov
test
leave
hlt
movsb
in
test
mov
mov
sub
sub
jo
cmpl
push
xor
cmp
xor
and
nop
arpl
mov
adc
aad
and
ret
mov
and
inc
movb
lret
mul
push
jo
jns
mov
push
mov
in
aam
add
fsub
jge
push
xchg
arpl
add
out
mov
xor
bound
lds
sub
lock
enter
dec
jg
xchg
xchg
js
icebp
pusha
dec
mov
loop
out
addb
mov
inc
or
mov
xor
mov
std
xor
rol
popa
cmp
cld
adc
xor
lcall
repnz
add
push
and
loope
push
or
push
hlt
shld
add
shll
xchg
or
fldenv
inc
clc
and
popf
shll
fcoml
dec
dec
jl
push
pop
add
xchg
inc
push
pop
mov
aam
push
add
sub
mov
add
jle
mov
add
add
mov
mov
out
adc
dec
mov
mov
or
pop
jbe
flds
cltd
imul
jo
mov
add
cmpb
outsb
add
lea
cmc
pop
sub
inc
aaa
lods
cmp
jno
fs
jp
mov
nop
bound
dec
fstpl
adcl
sub
mov
ficompl
xchg
adc
jo
loope
testb
sbb
cs
movsl
jmp
adcl
ljmp
stc
dec
and
dec
out
xorb
pop
call
cld
inc
push
repnz
mov
xchg
addb
movsl
test
pushf
in
dec
add
mov
popa
sub
popf
xor
je
int
out
aad
push
rorl
add
inc
pop
sub
adcb
fnstsw
pop
push
stos
mov
xor
andb
mov
repz
adc
pop
cmc
pop
jg
mov
push
out
pop
add
jno
pop
cs
je
push
inc
adc
maxps
push
jl
sarl
xor
pop
scas
loopne
popf
sub
mov
pop
imul
push
mov
fld
cs
int
mov
sarl
or
mov
xor
aaa
push
sti
pop
lcall
mov
adc
mov
add
mov
fists
cmpsb
add
aam
and
dec
pop
imul
mov
xor
popf
push
je
mov
sbbl
in
xor
xchg
sti
test
and
mov
les
adc
ficoml
cmp
or
xlat
dec
cmpb
add
jns
push
pop
cmpsb
pusha
jnp
mov
mov
faddl
imul
movsl
fucomip
das
dec
cmpsb
in
sub
dec
add
xor
lds
push
adc
roll
dec
das
inc
ds
add
int3
mov
cmp
mov
xchg
mov
jmp
fsubrp
insl
hlt
mov
cmpb
aam
bound
or
mov
dec
popf
xchg
sbb
pop
push
adc
mov
add
push
lret
xor
fidivs
cmpb
pop
xchg
add
fcoms
adc
jmp
mov
jecxz
or
movsb
adc
xlat
push
mov
xor
fcomps
jmp
add
int3
nop
and
xchg
pop
gs
loop
add
cmpsl
xchg
add
icebp
pushf
dec
and
imul
xchg
sub
cmpb
imulb
shll
and
adc
jle
int3
dec
popa
loop
popf
mov
add
mov
insb
lods
and
inc
or
fisubrl
inc
hlt
or
sbb
cmp
jmp
in
mov
push
roll
mov
ljmp
in
nop
lock
idivl
arpl
out
shlb
or
jnp
mov
push
lcall
sar
mov
daa
xchg
mov
push
es
push
add
xor
cmc
pop
xlat
imul
sub
shld
popf
or
mov
out
cld
pop
mov
arpl
mov
add
and
pop
nop
cltd
cmp
in
mov
mov
dec
gs
add
imul
dec
push
add
mov
stos
dec
cmovnp
push
out
inc
cli
sbb
popa
jmp
sti
nop
adcb
add
repz
mov
fildl
mov
lcall
dec
add
in
cli
or
pushf
push
push
pop
cli
test
mov
loopne
pop
mov
and
jle
das
sub
adc
add
xlat
int
imul
nop
cmpsb
and
cld
xchg
push
mov
fildl
icebp
pop
jmp
and
hlt
test
and
or
lea
cmc
pop
add
or
mov
sbb
xchg
dec
add
aad
push
jo
lret
adc
pmulhuw
les
and
scas
nop
inc
mov
sbb
rclb
xor
xchg
mov
ja
jne
in
inc
or
add
loop
jb
test
dec
dec
sbb
rcrb
push
out
in
gs
adc
mov
push
mov
push
xchg
mov
mov
cmp
mov
sub
inc
mov
jnp
add
xor
xchg
bound
bswap
lods
add
or
cmp
jle
and
add
js
push
aaa
incb
mov
sub
stc
mov
loope
fnstcw
nop
add
rorb
mov
pop
cld
pop
mov
xorb
mov
push
mov
mulb
cmpsb
popa
mov
in
and
mov
add
lahf
inc
mov
mov
mov
dec
out
mov
pop
xor
in
jnp
scas
dec
push
dec
loopne
arpl
dec
aas
push
cwtl
cmc
xor
fiadds
add
sbb
push
rorb
out
xchg
inc
and
pusha
mov
mov
mov
inc
xchg
popa
mov
test
popf
lock
fsubrl
testb
movsb
cmp
in
or
pop
in
xchg
lods
aas
pusha
inc
std
mov
pop
icebp
sarl
ret
jmp
lods
les
add
push
or
aad
add
mov
ds
sbb
es
hlt
jnp
add
and
loop
stc
sub
les
add
cmp
adc
and
icebp
sub
or
add
or
or
or
xor
mov
cli
xchg
out
shlb
addb
cmp
ljmp
lds
adc
stos
stc
pop
cs
mov
arpl
dec
hlt
inc
sahf
mov
mov
inc
mov
pusha
or
or
test
lock
in
ficoms
ja
push
push
pusha
adcb
mov
in
dec
xchg
jg
bound
pop
lds
cmc
iret
pop
and
xor
call
jp
dec
add
cmp
out
add
into
aad
hlt
lret
push
popf
jae
imul
dec
daa
push
pop
mov
push
arpl
jmp
push
add
iret
and
in
stos
xor
mov
push
rcll
pop
xchg
xorl
xlat
mov
push
mov
mov
das
push
mov
add
mov
addb
ljmp
in
ljmp
fidivrl
cmp
les
cmpsb
mov
sub
push
fbstp
add
pop
mov
xchg
ret
loope
dec
add
add
scas
popf
ret
push
lret
and
icebp
add
mov
dec
mov
cmp
notl
xor
aam
or
and
xor
pusha
xchg
push
mov
lahf
shrb
mov
xor
mov
or
push
pop
xlat
sbb
mov
push
out
addr16
xchg
iret
shll
jnp
cli
xchg
nop
mov
pop
push
add
movsl
mov
pop
cmc
in
pop
add
in
inc
sbb
test
sbb
inc
and
stos
adc
sub
es
lock
ljmp
fs
jno
addr16
or
push
mov
daa
xor
scas
fs
fstps
outsb
lret
add
cmpsb
movsb
sar
shll
bnd
mov
sahf
xor
pusha
lret
push
or
xor
xor
mov
or
popf
std
sbb
mov
xchg
pop
js
lea
popf
mov
jg
pop
adc
xchg
dec
adc
mov
xchg
pop
mov
popf
sub
mov
lret
mov
mov
sbb
ja
push
es
insb
or
dec
rorl
sub
in
out
jl
push
pop
jnp
cmc
sub
movsl
sti
movsl
push
jge
add
pop
push
and
xchg
push
das
mov
pop
push
cli
cmc
dec
and
aaa
add
push
mov
mov
jbe
add
iret
add
sub
hlt
andb
pop
ss
in
incb
xchg
mov
jle
sub
ret
dec
lock
cs
dec
mov
pop
pop
push
sbb
sub
adc
xchg
mov
loopne
insb
pop
xor
jbe
int
jnp
or
cld
mov
push
aam
pushf
das
sub
and
jo
jle
les
sub
cwtl
xchg
sub
loope
testl
lahf
aas
sub
sti
pop
scas
addr16
decb
push
bnd
cmp
mov
in
sbb
inc
push
imul
and
push
mov
and
or
das
or
xor
arpl
sbb
sub
and
xchg
pop
call
imul
and
jb
je
cmpsl
out
jmp
fdivrl
dec
decb
sbb
xor
mov
sbb
faddl
push
aas
jmp
hlt
jle
and
sbb
push
push
nop
mov
loope
int3
ds
xor
add
add
dec
xor
adc
mov
fbstp
mov
js
lahf
outsl
adc
je
subb
jg
adc
and
inc
sbb
and
das
je
test
les
pop
pop
xchg
mov
loopne
push
popf
fsts
dec
sub
fsubrs
mov
mulb
add
lods
sub
jmp
pop
inc
add
jnp
ret
clc
mov
outsb
mov
inc
mov
mov
sbb
pop
adc
jecxz
dec
pusha
mov
dec
in
rclb
sbb
xor
pop
popa
xchg
iret
add
leave
mov
stos
add
ror
cmpsl
jno
nop
adc
mov
xor
add
sahf
testb
pop
dec
add
out
lahf
xor
pushf
pop
shlb
add
xchg
sti
insb
push
rorl
dec
iret
mov
daa
pop
mov
and
popf
or
aas
jb
out
add
movsl
adc
xchg
mov
cmp
xchg
pusha
insl
sub
aas
jge
ljmp
add
mov
xlat
mov
orl
adc
mov
call
mov
sub
jnp
testb
mov
push
pusha
mov
and
popa
xchg
xchg
pop
outsl
mov
add
cmp
leave
je
and
inc
pop
push
add
pop
push
sub
aaa
adc
jbe
xchg
adc
iret
adc
mulb
jae
scas
add
fsubr
and
dec
adc
adc
loope
mov
ffreep
lods
js
std
lods
adcb
je
add
jne
and
out
movsl
ds
lock
mov
pusha
sub
imul
sbb
mov
int3
xchg
xchg
repz
addr16
rorb
dec
cltd
addr16
adc
test
jmp
das
lahf
pop
pushf
push
daa
flds
mov
dec
testb
pop
add
sub
inc
sbb
mov
jle
iret
in
push
inc
repz
mov
cmp
push
dec
adc
sub
add
repnz
and
mov
fstps
add
shl
dec
sbb
mov
or
repnz
inc
and
add
pop
cld
lcall
add
and
mov
addr16
jmp
add
mov
push
popf
flds
arpl
sub
pusha
jmp
dec
out
add
fbld
cld
cld
dec
add
scas
addl
xchg
aam
adc
jmp
xchg
jnp
cmpsl
pop
jmp
xchg
or
push
push
je
call
pop
je
cmc
idivb
push
loopne
pop
sub
aam
js
pop
in
mov
fsubl
out
push
cwtl
sahf
push
das
lds
add
cmp
dec
dec
add
fstl
sub
scas
add
pop
movsl
nop
mov
cmp
subb
mov
add
out
loop
hlt
lds
jnp
or
cltd
lock
clc
add
outsb
je
and
xor
push
cmc
jbe
icebp
push
jp
mov
sub
xchg
xor
and
add
test
adc
dec
out
push
popf
pop
jmp
dec
iret
and
xchg
lahf
dec
out
add
mov
test
adc
ljmp
or
dec
dec
xchg
cs
xor
cmp
mov
adc
sub
xchg
inc
mov
xor
mov
mov
mov
cmp
scas
cltd
inc
test
hlt
push
es
jecxz
sbb
hlt
subl
pop
adc
shlb
adc
pop
pop
cmp
je
dec
call
push
xchg
jb
mov
enter
jge
mov
arpl
fdivrs
fbld
je
jmp
or
loope
mov
pushl
cld
sbb
or
pop
clc
dec
movsb
mov
sub
negl
call
int
jecxz
cmpsb
call
mov
inc
xor
xchg
xchg
inc
pop
mov
and
popf
outsl
cmp
fadd
mov
pop
mov
push
imul
ret
ja
ret
xchg
inc
pop
lods
xor
fdivr
dec
add
leave
pop
sahf
hlt
test
add
imul
jns
inc
mov
or
add
push
icebp
cmc
cmpsl
ror
xchg
pop
ss
inc
xchg
and
out
dec
stos
xor
test
dec
push
ss
iret
pop
cs
pop
insl
adc
movsl
hlt
iret
sbb
pop
inc
movsb
jno
stc
popf
adc
inc
inc
push
scas
mov
mov
sub
and
imul
add
adc
loop
pop
aaa
shll
jl
imul
dec
jge
dec
add
nop
mov
scas
in
mov
jnp
add
lods
enter
jmp
jb
in
les
in
stc
roll
mov
js
add
das
jp
repz
mov
mov
js
add
jne
jns
xor
adc
stos
jnp
cmp
dec
mov
or
pusha
mov
fisubs
fcoml
in
add
inc
lds
movsb
cltd
pop
xor
mov
and
scas
int3
adc
je
ss
mov
mov
inc
mov
jmp
lret
jge
jae
add
sbb
fildl
mov
repz
popa
jle
cmp
ret
repnz
or
sbb
rcll
inc
inc
in
cmc
push
aam
xchg
pop
in
test
or
cwtl
xchg
stos
cmp
push
pop
add
jbe
pop
add
cli
sti
xchg
aam
das
lret
xor
push
pop
sbb
gs
loop
pop
and
bound
arpl
mov
roll
scas
sahf
fwait
aam
jecxz
pop
dec
push
stos
int3
adc
dec
mov
fsts
mov
mov
aas
xchg
and
add
or
xor
pop
repz
stc
arpl
add
jbe
jno
jnp
mov
pop
pop
in
sbb
pop
jo
mov
lods
fcomip
ret
sub
enter
pop
test
sbb
xlat
and
lahf
xchg
sub
adcb
sub
insl
add
sbb
out
pop
add
pusha
rcrb
loopne
hlt
adc
sbb
repz
mov
cmp
outsb
or
popa
testb
repz
nop
icebp
adc
xor
mov
mov
add
subb
add
sbbl
push
jp
pop
jmp
lock
pop
in
push
mov
test
and
mov
stc
imull
ljmp
mov
pop
xorb
jbe
push
mov
jne
dec
jmp
add
adc
push
dec
jg
push
pop
push
add
out
nop
dec
pop
push
jge
mov
je
xchg
adc
pop
cli
cltd
jo
mov
push
jnp
mov
lahf
fs
push
lahf
shrb
xchg
cmp
subb
dec
xor
add
cmp
outsb
add
mov
andl
mov
andl
enter
or
pop
into
sbb
es
mov
inc
cmpsl
fbstp
inc
or
jbe
loop
sbb
push
push
roll
push
and
add
cmc
jae
popf
sarb
mov
jae
mov
sbb
insl
mov
jb
dec
outsb
test
daa
sub
in
ja
incl
hlt
xchg
dec
fists
nop
mov
xchg
sbb
sub
pop
stc
push
sbb
in
pop
mov
mov
test
jbe
and
test
xor
xchg
cmp
call
clc
push
nop
pop
push
out
adc
mov
faddl
pop
ret
inc
pop
xchg
sub
outsl
lds
add
test
push
fdivrl
fwait
xchg
movsb
addb
fs
xchg
xchg
ret
leave
mov
jbe
daa
jbe
rorl
sbb
jnp
ja
push
mov
mov
push
dec
pusha
and
jnp
clc
add
sbb
popf
dec
xchg
jnp
mov
xchg
inc
mov
xchg
push
test
jo
or
jecxz
xor
add
fcmovne
xlat
mov
adc
test
pop
popa
pop
cmp
mov
lret
add
or
inc
jae
sahf
nop
shlb
ja
dec
mov
addb
mov
xchg
jmp
je
movsb
add
xchg
repz
and
dec
mov
rorb
rorb
iret
sub
in
mov
add
popf
add
loopne
popa
enter
inc
or
pop
adc
sbb
add
and
sub
add
loope
dec
ror
iret
loopne
cmp
clc
popf
mov
mov
mov
and
mov
mov
jbe
adc
notl
add
hlt
int3
pusha
mov
dec
or
xor
pop
shlb
mov
adc
aas
add
mov
pop
sub
or
mov
sbbb
std
pop
and
int
clc
push
aam
imul
lcall
push
mov
pusha
push
cmp
push
insl
jo
in
sub
pop
fwait
jmp
dec
xchg
adc
jp
sbb
js
push
shrb
mov
pushl
mov
sub
loopne
cmp
outsl
in
daa
sti
xchg
popa
scas
les
and
mov
cmc
sub
pop
rcrl
xchg
sub
adc
cmp
jecxz
push
jns
jno
add
push
jno
fstl
cmp
pushf
xchg
or
imul
and
out
or
adc
mov
das
mov
mov
iret
lea
xlat
cmp
mov
popa
nop
jne
js
pop
dec
dec
pop
call
mov
pop
daa
aam
shrb
adc
jb
xchg
nop
jge
lods
or
mov
push
mov
or
fstpt
pop
or
add
rcrl
sub
sbb
mov
out
mov
inc
push
xchg
loopne
aad
mov
or
pop
and
gs
fbld
adc
xchg
inc
mov
and
add
push
rorb
mov
in
jno
cs
lock
lods
jb
ret
jecxz
and
cmp
or
pop
fidivl
or
lret
adc
mov
xor
ficoms
sub
stc
push
popl
scas
lods
jb
cmc
cmp
daa
fbld
rcrb
popf
xchg
xchg
push
cmp
out
subb
scas
dec
scas
mov
in
psraw
mov
pop
pop
sub
aam
mov
stos
lock
add
add
lcall
sbb
mov
stos
mov
dec
pop
and
adc
and
pop
sbb
les
sub
and
adc
scas
mov
add
mov
jp
sub
loop
fistpl
mov
rcrl
dec
adc
dec
insl
mov
fistps
adc
pop
add
ljmp
rcl
xchg
add
bnd
mov
inc
icebp
jl
call
in
add
pop
ret
cmc
lods
cmp
ss
mov
mov
out
loopne
call
fsubrl
fptan
lea
ja
xor
adc
orl
popf
dec
sub
iret
nop
ret
push
pop
movsb
xchg
popa
lahf
nop
adc
subb
sub
adc
scas
mov
mov
and
rcr
xor
xor
std
out
mov
insb
jge
mov
or
jbe
mov
adc
push
mov
jl
xchg
sti
adc
lea
jns
xchg
lds
lods
fs
xor
add
loope
out
loopne
aas
scas
cwtl
and
adc
add
sbb
aas
add
push
add
inc
or
adc
das
adc
sbb
mov
xchg
push
lcall
mov
pop
fwait
mov
mov
mov
lret
xchg
add
out
data16
inc
xchg
push
inc
mov
pop
add
test
adc
cmp
xchg
arpl
imull
sub
out
pop
das
ds
ljmp
ret
jno
add
rolb
insl
cmp
clc
xor
scas
leave
sbb
loope
popa
outsb
or
or
push
and
stc
cmp
int3
or
xchg
int3
cmp
xor
lds
cmp
pop
jg
jmp
int
repz
test
cmpsb
aas
xchg
inc
adc
inc
testb
iret
fwait
sbb
pop
cmp
pop
adc
sti
pushf
icebp
sub
pop
mov
lahf
add
sub
push
mov
xchg
nop
sbb
test
jmp
xlat
loope
xchg
jns
in
dec
adc
test
and
jne
push
in
xor
sub
sub
fsub
lea
jbe
call
jle
add
lret
pop
and
test
shll
mov
adc
sub
aas
test
mov
cwtl
add
stc
je
dec
push
iret
or
jbe
imul
dec
push
popa
ss
lods
cmp
and
and
and
push
stos
mov
test
xchg
push
jle
jge
xor
mov
imul
pusha
scas
daa
mov
adc
fadd
inc
popa
stos
mov
xchg
xchg
xor
repz
jne
scas
enter
repz
cld
insb
outsl
mov
popa
repz
icebp
jge
shr
push
loopne
mov
andb
pop
call
mov
mov
dec
and
mov
int
cmp
daa
xchg
jo
mov
mov
or
adc
jmp
loop
nop
inc
out
les
pop
mov
repnz
iret
mov
push
lcall
or
cmp
add
inc
jmp
sub
mov
xchg
adc
sti
and
stc
or
mulb
mov
add
mov
sub
mov
push
into
lcall
pop
stc
push
lods
add
pusha
sub
es
lcall
xchg
mov
xor
mov
dec
inc
in
mov
add
mov
repnz
rorb
xchg
push
cmc
xor
fildll
decb
lods
push
or
test
push
and
pushf
pusha
gs
bound
add
jne
push
xchg
les
test
dec
in
add
pusha
pusha
or
cld
in
add
lahf
movswl
popa
mov
rol
and
std
mov
sbb
cmp
add
jge
pop
pusha
pop
and
inc
sbb
xchg
cltd
dec
push
xor
xor
pop
mov
mov
mov
cwtl
sub
or
inc
and
xchg
cmp
pop
loopne
add
dec
cmp
add
mov
loopne
dec
aam
mov
inc
adcl
cli
pop
je
add
test
adc
sbb
mov
xchg
adc
or
sbb
lahf
mov
ljmp
xchg
add
mov
push
adc
sbb
add
cld
ret
xor
mov
stos
adc
xor
in
int
adc
movsb
adc
push
fmul
adc
lcall
aaa
cmp
lods
pop
xchg
lahf
rcrb
nop
mov
addb
mov
in
sub
rcr
xor
pusha
stos
mov
jne
test
mov
fsubrs
inc
fimull
xchg
push
sub
pop
xchg
adc
jmp
mov
data16
pop
xor
loopne
pop
inc
add
fsts
ja
rorb
cmpsl
pop
add
xchg
in
mov
dec
or
jo
lahf
shll
shl
push
call
mov
iret
and
adc
cmpsb
mov
es
dec
and
pop
xchg
push
sub
pop
mov
lea
fwait
pusha
xchg
jecxz
or
popa
jmp
cmp
or
shll
sbb
mov
std
loope
xor
insb
mov
cmp
pusha
mov
xchg
mov
aam
cli
jmp
nop
cmp
jno
test
and
std
push
push
dec
mov
cs
and
mov
xchg
add
cmp
test
frstor
rcll
add
pop
pop
js
flds
shr
xor
jecxz
add
inc
ss
sub
pop
pop
into
dec
js
and
loope
adc
cli
xchg
daa
jbe
add
jp
and
js,pt
jmp
jo
pop
cmp
cwtl
lcall
add
mov
int3
sbb
mov
loopne
xor
add
int3
or
popl
and
xchg
sbb
mov
pop
fs
aam
roll
loop
add
movntps
call
or
mov
jecxz
mov
dec
or
xchg
cmp
les
add
iret
ret
mov
cmpsl
dec
dec
dec
aaa
lods
mov
int3
mov
call
roll
and
mov
sub
in
xchg
push
aad
sbb
dec
std
or
andb
in
inc
push
adc
cltd
insb
fildll
add
cmpsl
and
sub
loopne
out
add
adc
pop
popf
test
addb
sub
mov
dec
sbbb
xchg
add
pop
sub
in
jae
jg
rcrl
aas
adc
fcom
test
add
nop
ror
sub
cltd
sbb
mov
lcall
add
xchg
add
shrd
cmp
mov
cwtl
jae
sbb
lock
cmovns
std
rcrb
repz
loopne
lcall
pop
jmp
xor
cmp
pushf
sbb
mov
and
fidivrs
es
jmp
and
ffree
pushf
cwtl
out
cmp
subb
or
loope
shlb
and
add
or
mov
mov
aas
es
scas
mov
pop
mov
fsubp
add
xchg
test
add
stos
pop
add
ljmp
jne
xor
dec
call
lcall
pushf
repnz
pop
insb
sahf
je
add
mov
lea
mov
push
pop
mov
cmp
cs
push
in
xor
or
and
add
jp
cmpsb
jle
mov
jae
adc
loop
outsb
add
add
mov
cmp
ss
mov
mov
add
cmp
or
fucomip
subb
cltd
call
inc
sbb
pop
add
ss
movb
pop
mov
fsubl
sar
cld
loopne
xchg
add
cmc
ficompl
adc
inc
ljmp
jae
mov
ljmp
lret
lock
in
mov
and
lret
jb
test
add
dec
cmp
jnp
or
inc
sahf
jl
std
push
aad
orb
jae
add
fmull
cld
mov
aad
add
mov
sub
add
mov
add
xchg
ljmp
push
add
jb
and
push
rorl
andb
fldenv
push
lcall
imul
nop
loop
xlat
xchg
add
test
push
lea
or
pusha
dec
sub
mov
xchg
pop
mov
fadds
arpl
cmp
mov
in
and
push
jge
cmp
push
sar
mov
xchg
mov
cmp
das
out
lret
fs
inc
push
movsb
testb
data16
aas
das
stos
incb
shrb
roll
or
inc
into
sahf
sub
mov
push
es
sbb
loopne
rcll
adc
sub
mov
push
push
xor
arpl
sbb
adc
addl
int3
mov
adc
jle
aas
out
mov
dec
sub
test
rorl
into
popf
bound
dec
clc
les
ret
adcb
test
inc
mov
js
leave
inc
inc
pop
jp
xchg
dec
push
mov
pushf
inc
and
xor
push
push
add
popa
leave
inc
lock
cwtl
xchg
loopne
xchg
lds
js
xchg
jne
dec
add
in
dec
mov
lods
enter
sarb
mov
sahf
sbb
mov
fisubrs
add
nop
and
cmpsl
pop
insl
mov
lahf
outsb
dec
fsubs
mov
fsubrl
adc
int3
filds
jecxz
dec
cmp
xor
daa
and
adc
fsubl
add
push
cmp
loopne
mov
push
push
jmp
mov
and
add
add
inc
or
cmp
testb
push
call
hlt
push
dec
xor
mov
dec
mov
and
movsb
jne
out
aam
fs
or
pop
mov
mov
adc
and
lods
adc
push
sbb
mov
or
push
cltd
xchg
pop
adc
xor
jle
and
pusha
popa
dec
or
push
xchg
adc
iret
sti
popa
nop
inc
lea
mov
cmc
dec
xchg
les
push
enter
cltd
or
mov
pop
sar
addr16
imul
cwtl
push
jb
add
adc
clc
dec
enter
sbb
test
cmp
cli
sub
adc
out
push
enter
cld
cltd
int3
sbb
xchg
add
mov
push
and
inc
or
and
stc
add
cmp
cmp
and
mov
pusha
cmp
aas
bound
subb
repz
and
adc
ficoml
mov
loopne
push
add
gs
cwtl
xchg
ficompl
hlt
cmc
mov
or
dec
scas
inc
xor
inc
add
icebp
divl
and
cmpsl
stc
in
jne
mov
add
mov
fbstp
es
jae
shlb
nop
imul
xor
pop
cmp
or
lcall
cmpb
add
xor
lret
cmp
test
frstor
pusha
dec
and
adc
jge
rorb
rcrl
mov
inc
dec
adc
pop
push
pusha
inc
mov
xor
clc
inc
scas
and
add
mov
jge
push
insb
pop
psadbw
pop
fld
enter
fwait
imulb
nop
push
inc
dec
push
pusha
push
outsl
jl
inc
inc
sub
stos
rcrb
push
xchg
int3
push
in
nop
psubusw
cwtl
arpl
test
mov
add
mov
jl
mov
hlt
cmp
enter
mov
movsb
fidivs
clc
dec
adc
xchg
loopne
add
sbb
cmp
test
stos
je
sub
clc
cli
les
cmp
sub
lea
inc
adc
cmp
out
movsb
inc
stos
pop
xchg
jo
pop
es
sbb
mov
sbb
adc
divb
add
dec
or
nop
xchg
add
sbb
dec
pop
fwait
pop
mov
nop
inc
sbb
pop
pop
dec
add
and
sub
daa
in
scas
mov
or
sub
add
test
jnp
dec
xchg
ds
dec
inc
and
loopne
jno
cmp
push
adc
or
sbb
add
aam
xlat
pop
xchg
add
push
adc
add
sub
pop
mov
sub
sub
dec
push
push
push
add
lods
and
ficoml
test
in
ljmp
and
add
in
jb
rorb
adc
push
cmp
or
push
fcoms
fisubs
add
mov
enter
push
dec
rclb
inc
jno
aam
jp
add
and
in
add
cmp
inc
inc
cmpsb
pop
adc
mov
mov
ds
inc
add
xor
xchg
movsb
addl
fildl
cs
mov
out
hlt
fld
push
std
cltd
adc
add
rcrl
push
cmp
popf
add
lock
xchg
mov
imull
in
push
outsb
mov
inc
or
cmpsb
mov
add
sub
sbbb
adc
pushf
or
aas
inc
jae
dec
loop
pop
fcmovbe
movsb
inc
dec
out
cli
xchg
loop
lret
push
cmp
enter
or
push
xchg
pop
fmul
mov
push
ljmp
and
stc
or
rol
fadds
adc
int3
push
shll
xchg
fimull
lds
dec
sti
in
push
fisttpl
pusha
inc
call
mov
sbb
andb
dec
insb
faddl
rcll
pusha
add
cmp
ror
stos
aas
bnd
mov
add
loope
xchg
das
ljmp
rorb
cmc
mov
jg
sub
mov
cmpb
test
jns
sarl
push
xchg
and
aam
stos
les
pusha
es
cmc
and
push
data16
incb
push
dec
inc
call
cmp
sub
add
and
push
or
add
nop
lret
push
imul
sbb
inc
addr16
aaa
adcl
pop
subl
test
mov
add
dec
jp
f2xm1
push
popa
push
sbb
xor
pop
mov
outsb
rclb
js
les
pop
test
sahf
lods
mov
and
fs
in
scas
pop
push
xorb
std
mov
inc
fisttpll
shrb
sub
pop
mov
lock
out
mov
and
cld
sub
adc
mov
ja
test
dec
pop
fmuls
sub
lahf
stos
cld
xchg
push
aaa
adc
bound
pop
rol
movsl
xchg
jb
mov
xor
stc
sub
add
pop
frstpm(287
add
scas
push
cmp
jle
and
aas
das
xchg
cltd
jo
adc
scas
mov
imul
push
mov
jb
fsubrl
or
add
rcpps
cmove
push
popf
ret
ds
sbb
aas
sti
in
add
arpl
jmp
mov
cmp
loop
cli
push
push
aaa
imul
mov
stc
and
add
inc
mov
iret
sbb
pop
in
aad
sti
aas
mov
mov
xor
add
add
cwtl
jns
sub
testb
lods
ja
and
adc
cmc
outsl
jns
push
orb
pushf
sub
push
pop
pop
push
push
sbb
in
test
subb
and
jp
sbb
inc
cmpl
mov
enter
lahf
push
icebp
or
inc
fs
nop
or
andb
outsl
cld
jle
out
js
jno
jmp
loop,pn
jg
add
test
fsubrs
xchg
jmp
test
xchg
jnp
add
cmp
jmp
jno
insl
lods
in
xor
adcl
loopne
mov
inc
pusha
sub
push
pop
mov
insb
or
or
adc
sbb
mov
in
jg
and
inc
sbb
sbb
add
cmp
mov
push
and
adc
add
push
inc
or
mov
imul
sbb
aad
in
jns
xor
iret
and
cmpsl
mov
push
mov
xchg
outsb
and
push
shlb
enter
push
push
pop
fsubs
add
pop
adc
cs
mov
mov
pusha
or
pop
sub
jne
push
and
inc
fwait
add
lods
sbb
jo
or
mov
icebp
lods
in
loope
add
add
push
adc
je
int3
add
and
xlat
and
push
insl
test
sahf
flds
xchg
lods
inc
mov
int
and
imul
rcrl
dec
in
xchg
mov
sub
add
stos
insb
xor
andb
daa
xor
stos
insb
cmc
adc
sbb
and
loope
dec
sbb
test
loop
inc
lock
andb
pop
add
das
mov
sub
xor
adc
testb
mov
inc
mov
adc
mov
or
dec
push
push
cmp
xchg
jmp
push
rolb
mov
add
adc
push
lods
xor
sub
xchg
out
mov
add
mov
enter
cmp
fldl
and
jecxz
inc
jp
cmp
add
call
mov
fisttpl
or
jbe
jg
xor
loopne
and
repnz
bound
xor
pop
loop
pop
dec
ficoml
rcrb
popf
cmp
add
xor
sbb
bound
add
jno
adc
scas
mov
pop
add
and
sub
ds
in
jnp
fdivl
sahf
rorb
pop
aam
mov
movsl
add
icebp
rcrb
movsb
mov
ja
push
rcll
push
xchg
scas
lock
xchg
add
iret
in
insl
push
sbb
and
adc
mov
out
lds
jmp
fwait
lahf
lea
cmp
fistl
mov
iret
orb
pop
or
add
ffreep
pop
xchg
fdivl
stc
add
insb
rcrb
rorl
push
pop
cmp
sbbb
jne
pop
cmp
pop
pop
outsl
cmp
mov
add
test
rcrb
add
jae
push
inc
test
flds
mov
aaa
in
mov
jmp
or
mov
popa
adc
add
jae
es
andl
jle
lret
addb
push
aas
push
push
xchg
inc
inc
adc
mov
mov
sbb
arpl
xchg
mov
jmp
mov
or
add
sbb
xchg
sub
mov
pushf
nop
fldl
inc
loopne
mov
ret
subl
jle
mov
repz
push
rcrb
mov
add
filds
xchg
das
jne
popf
xor
adc
ja
rolb
std
leave
sbb
shll
bound
and
subl
add
mov
aaa
xchg
jle
add
cmpsb
clc
roll
sti
jp
inc
ljmp
xchg
enter
add
or
push
cmp
mov
xor
sub
lds
push
dec
sub
daa
add
rorl
xchg
xor
add
mov
mov
and
mov
int3
sub
dec
pop
hlt
jl
xchg
repnz
adc
icebp
xchg
inc
inc
mov
push
xor
pop
sub
loopne
jae
hlt
add
push
mov
out
or
push
push
pop
or
and
cmpb
jmp
es
loopne
cmpsb
pop
addr16
orb
push
add
loope
jge
loopne
mov
add
addl
xchg
mov
popf
adc
jnp
xor
dec
add
jge
cmp
mov
push
mov
push
mov
aas
mov
negb
mov
sbbb
pop
mov
fwait
dec
dec
cmp
add
adc
cmovp
push
loopne
jmp
insb
add
ljmp
add
mov
pop
outsl
add
sti
cmp
ret
imulb
add
loop
in
inc
inc
cld
xor
je
push
push
inc
xchg
sarl
adc
xchg
pop
insb
adc
popf
xchg
add
xchg
int3
sub
pop
add
push
out
xor
inc
mov
pop
add
inc
xor
adc
mov
in
mov
pop
adc
insl
add
sub
sub
cmp
and
push
jp
ja
add
cwtl
test
xchg
pop
imul
push
cmp
iret
sbb
cmpsl
sub
inc
test
add
push
les
lods
dec
sub
pop
dec
mov
add
jmp
aas
dec
pop
sbbb
lods
icebp
lret
push
adc
inc
add
xlat
fisubl
add
push
pop
das
scas
scas
faddp
sahf
hlt
cwtl
sub
mov
jge
mov
add
adc
ds
xchg
addb
mov
pop
push
icebp
shlb
cmp
pop
pop
loop
outsl
call
pop
ficoml
xchg
adc
stc
mov
xorb
adc
int3
xor
cmp
add
mov
jmp
jle
orb
test
xor
sbb
dec
test
pop
jb
mov
imul
fsubs
subb
inc
mov
loope
lea
rorb
sub
add
sub
lods
jecxz
orl
je
dec
cwtl
iret
add
inc
jp
xchg
lea
cli
pushf
xchg
mov
call
out
fwait
out
mov
jae
push
sub
lods
mov
pop
jo
aad
xchg
test
jge
je
add
movsl
cmp
sbb
xor
stc
lods
and
cmp
mov
cwtl
sub
jae
aaa
aas
lahf
sbb
ss
ljmp
add
dec
lahf
push
push
cmpsb
addb
xor
ficompl
inc
push
sbb
push
mov
inc
cmp
pushf
add
xchg
jl
push
sbb
mov
and
cs
jbe
movsb
pop
test
or
xchg
rorb
mov
push
or
add
jbe
add
loope
jne
inc
pop
lds
adc
mov
shrb
std
add
stos
sti
push
lret
jmp
imul
in
rolw
add
push
xor
in
shrb
mov
mov
in
or
sub
add
iret
cmp
sbb
sti
adc
push
mov
lret
pop
jo
ljmp
mov
in
test
jo
rorb
push
sbb
lcall
clc
stos
test
inc
movsb
iret
in
cli
push
xor
jl,pt
dec
add
cld
rolb
stc
bound
or
cmp
add
gs
adc
inc
adc
js
mov
jge
add
inc
xchg
xlat
jne
fdivs
inc
imul
adc
pop
mov
stos
inc
xor
clc
cwtl
loop
arpl
nop
mov
mov
mov
shll
test
in
test
xchg
mov
ljmp
add
rclb
xor
roll
sbb
and
in
add
mov
jg
or
ret
into
add
adc
je
sbbb
sbbb
sbb
sti
repnz
fnsave
xor
xchg
clc
andl
aas
mov
sbb
add
adc
jne
xor
jno
cmp
and
in
xlat
pop
and
ljmp
in
adc
add
dec
inc
lret
lods
sbb
and
rolb
xlat
callw
aam
movaps
mulb
or
cltd
lret
loop
aam
xor
ffree
orb
testl
lods
cmp
push
mov
rclb
in
cmp
add
dec
mov
cmp
mov
cmpsl
int3
repnz
sbb
pop
mov
lret
nop
das
lock
jge
orb
pushf
jg
adc
pop
dec
add
repz
out
mov
mov
push
faddl
out
call
aad
test
mov
jmp
add
jl
sbb
fdivs
add
jb
or
notl
mov
imul
pusha
lret
dec
xor
add
pusha
push
out
loop
cltd
add
ret
repnz
jae
sbb
mov
shl
cmpsl
sbbl
fsub
xor
jne
cli
sbb
dec
out
test
and
lahf
or
mov
rclb
scas
scas
or
lret
mov
lahf
xorb
xor
add
inc
jo
adc
je
cwtl
mov
jg
shlb
sbb
cmp
call
jle
test
jmp
lds
rcr
sub
jl
clc
lea
mov
fdivrs
cwtl
push
loopne
add
and
cmp
jmp
mov
aaa
hlt
popf
test
push
add
fcmovnbe
push
sarl
inc
mov
cmp
cltd
js
or
fcmovbe
aam
xchg
xchg
ss
scas
data16
add
inc
cmpsb
sbb
js
pop
add
movsl
incl
out
add
jb
cmp
pop
push
fdiv
pop
add
xor
adc
dec
aaa
cs
in
inc
out
ficoml
mov
dec
xchg
shll
add
push
mov
xchg
push
scas
and
add
adc
orb
mov
adc
cld
loopne
sti
add
clc
sub
pop
push
sbb
cld
iret
jo
enter
rcl
aas
or
or
test
ret
xor
ds
cld
mov
pop
adc
daa
in
in
lods
outsb
pop
ds
aas
adc
cmpb
xchg
cmc
pusha
adc
fistl
sbb
addl
int
inc
jmp
in
or
push
mov
cmpsl
xlat
out
out
mov
popa
pop
xor
fwait
sbb
xchg
lock
aas
xor
jge
sbb
addb
add
ret
cmp
popl
inc
pop
add
sub
jnp
daa
push
lods
rolb
xchg
int
mov
mov
and
call
push
je
repnz
fwait
lcall
bound
and
std
pop
pop
outsb
add
jmp
and
xchg
jns
mov
lods
mov
and
andl
or
or
sahf
daa
aad
pusha
add
rcll
or
push
xchg
add
fimuls
int3
add
add
dec
hlt
test
add
cmp
xor
pop
insb
sti
stos
mov
push
adc
rolb
pusha
test
in
add
xorl
out
xor
push
sub
xor
mov
and
hlt
push
mov
pop
lea
or
add
add
hlt
sar
and
adc
lock
adc
pusha
push
iret
and
sub
xor
rcrb
mov
lahf
in
and
pop
popa
ss
test
subl
mov
cwtl
pop
dec
dec
sbb
or
js
xlat
outsb
inc
adc
lods
cli
dec
mov
into
push
dec
xchg
xor
jg
add
fdivrl
add
rorb
rcr
pop
xchg
inc
adc
cwtl
cmp
xlat
scas
daa
flds
out
and
ret
pop
jle
cmpsb
push
add
loop
shlb
xlat
push
cmp
orb
adc
adc
rolb
int3
cmpsl
jecxz
push
and
out
hlt
jp
inc
add
sbbl
xchg
pop
sbb
or
push
push
mov
add
shl
mov
pop
lcall
mov
inc
rcrb
add
pop
jl
hlt
insb
or
sarl
cmpsl
fs
lea
sbb
testb
push
fcmovne
push
js
sbb
loopne
jl
and
mov
cli
sub
or
xor
adc
call
cli
jae
loop
sub
xchg
pop
add
into
in
sbb
xor
sahf
add
pop
add
pushl
or
and
cmp
xchg
lea
fdivr
nop/reserved
popl
sub
pop
loop
add
add
decb
ljmp
iret
aas
add
xor
repz
out
fbstp
cltd
mov
xor
imul
add
in
add
or
into
int
sbb
mov
call
leave
inc
sub
js
jnp
enter
dec
sub
adc
in
test
add
or
sub
mov
mov
roll
push
mov
cmpsb
jl
or
and
jno
pop
popa
imul
mov
cmc
sbb
mov
pop
mov
loope
aas
scas
adc
pop
jne
inc
pop
shl
pop
shlb
mov
cmp
or
cmc
mov
mov
pop
adc
add
movsl
or
mov
add
aaa
add
cs
cld
push
sub
in
cmp
imul
add
push
add
out
movsb
mov
xor
cmp
xor
adc
data16
add
sub
add
or
ds
or
mov
pop
addb
in
repnz
data16
mov
les
lock
or
mov
cmp
jecxz
andl
out
xchg
add
adc
add
out
jns
flds
sub
sub
add
pop
lock
sbb
lea
xlat
and
add
mov
pop
jl
jg
rcrb
cli
cmp
ds
or
loop
inc
pop
dec
adc
or
inc
and
and
movsb
jp
and
inc
push
into
mov
mov
hlt
shlb
and
xchg
scas
sbb
mov
mov
cmp
mov
in
ss
loopne
iret
add
jmp
dec
sahf
in
orb
dec
movsl
je
stc
push
cmp
pop
fs
inc
ret
gs
cmp
dec
adc
or
pop
add
repz
and
in
leave
test
xchg
cli
push
dec
addb
xor
jns
xchg
enterw
lret
adc
add
movsb
dec
or
add
jb
and
pop
clc
outsl
dec
insl
add
shrb
lods
shlb
sub
dec
push
add
pop
sub
std
and
add
unpcklps
insb
add
fisubs
mov
mov
sahf
dec
in
xchg
inc
pop
inc
insb
pop
sub
xchg
sub
add
dec
cs
iret
fcoml
fmuls
mov
out
add
stos
mov
in
add
push
dec
fcomps
inc
jg
pop
jge
xchg
push
add
pop
dec
cld
cmpsl
decb
test
stc
daa
cmpb
lcall
ja
jl
jne
shlb
add
and
mov
roll
divb
movsb
jne
push
mov
cld
aas
sahf
pop
add
mov
or
or
or
adc
jecxz
xchg
or
push
sub
cwtl
dec
xorl
mov
cli
pop
mov
mov
push
and
xchg
into
sub
addr16
orl
ds
arpl
add
sbb
addr16
rolb
add
sbbl
in
or
and
mov
ljmp
cltd
xor
jmp
mov
jmp
add
pop
inc
icebp
xor
lock
stos
aaa
add
mov
dec
add
addr16
sarb
sarl
fistps
mov
movl
mov
leave
xchg
pop
mov
pop
push
packsswb
inc
xchg
jge
xor
mov
jmp
cwtl
cmp
test
or
jl
add
pop
lahf
repnz
gs
cmp
mov
mov
ror
dec
test
sbb
or
imul
cwtl
and
mov
lcall
notl
push
add
fwait
in
mov
loope
cmpsl
and
mov
stos
add
and
sbb
scas
add
xchg
scas
mov
add
std
outsl
test
lock
sub
ret
lret
scas
or
push
arpl
jecxz
in
adc
testl
lock
and
jb
cmp
xchg
push
jne
add
fisubrl
cmp
mov
lods
add
fistps
fistl
scas
inc
add
xchg
add
sub
inc
rcrb
testl
inc
arpl
sbb
das
push
dec
xor
stos
aas
shr
or
outsl
and
push
aam
pop
cwtl
cli
dec
add
shlb
enter
jbe
mov
loope
xor
dec
dec
xchg
xor
addl
jge
or
out
add
cmp
sub
int
scas
insw
add
mov
mov
jp
cmp
sub
adc
sbb
jp
jnp
adc
loopne
in
pop
dec
dec
inc
scas
les
jbe
movsb
jnp
jns
test
add
mov
add
out
addb
mov
cmp
push
stos
or
test
add
stos
mov
jb
sahf
xchg
inc
dec
jno
pusha
enter
out
add
fwait
rdseed
adc
test
repz
adcb
lcall
adc
add
ja
and
jge
in
das
fildl
push
loop
flds
lcall
pop
pop
test
xchg
inc
mov
testb
push
jle
ljmp
and
das
mov
mov
xchg
add
mov
sub
jae
cmp
hlt
dec
push
out
sub
or
lods
arpl
pop
sbb
pop
repnz
lret
and
mov
mov
or
mov
stos
add
mov
outsl
cmp
inc
add
lods
cs
aad
add
push
add
rorb
mov
or
es
addr16
xor
sbb
mov
jp
inc
in
pop
sbb
dec
into
popf
mov
pop
pop
jmp
cli
cmp
jp
add
ja
cmp
add
pusha
popa
sub
pushf
push
arpl
add
inc
jbe
cmp
add
das
cmp
add
lds
loop
and
aam
push
push
xor
xor
add
push
add
jbe
outsl
and
add
mov
mov
loop
mov
std
adc
add
xchg
pushf
or
call
or
push
xor
adc
pop
adc
mov
loope
inc
add
jle
in
es
dec
movsb
inc
insb
add
adc
mov
push
adc
push
sub
adcb
test
sub
pop
mov
bound
mov
sub
sbb
add
xchg
inc
add
ljmp
and
inc
add
mov
lods
push
popf
jns
add
adc
xchg
cmp
cmp
scas
rsqrtps
stos
lret
je
cmpl
insb
add
mov
push
add
inc
mov
int
cld
mov
add
popf
mov
lea
add
shl
aad
arpl
add
lcall
xchg
daa
hlt
lahf
mov
in
loope
pushf
dec
pop
dec
mov
mov
sub
shll
fildll
bound
addr16
jae
pop
push
push
stos
dec
adc
dec
push
inc
lock
into
fcomps
sti
mov
outsb
add
cli
unpcklps
jle
xchg
xor
xchg
cmp
in
loope
lcall
stc
fmul
add
xchg
pop
aam
mov
pop
pop
push
rcrb
add
icebp
cmp
fimuls
inc
pop
loopne
out
mov
mov
inc
test
in
xchg
add
mov
dec
test
push
cmp
add
jnp
sub
andb
loopne
setne
cmp
negb
out
cmpsl
fwait
sti
sbbb
repz
lds
dec
lret
cmpsb
mov
xchg
cmc
jne
movsb
aam
xchg
add
sahf
int3
inc
xchg
fstpl
sub
mov
nop
sbb
clc
add
daa
and
movsb
jg
xchg
xor
lock
dec
rorb
add
ds
xor
add
xor
scas
inc
jno
insb
dec
mov
mov
mov
ret
pusha
push
push
mov
pop
pop
insb
and
xchg
xor
mov
cld
cmc
pop
cmp
ljmp
add
mov
sahf
pop
sbb
pushf
aad
mov
pop
out
pop
mov
xor
ss
add
jno
ljmp
loop
adc
in
add
stc
jae
rolb
mov
adc
shll
mov
mov
add
mov
jp
pop
sbb
adcb
adc
sub
dec
fisttps
ljmp
add
sub
dec
mov
jge
cmp
jb
mov
sbb
or
or
or
mov
nop
add
xchg
shll
jg
loope
xor
add
or
cli
adc
jg
add
mov
aad
pusha
xchg
movl
sbb
mov
in
add
aaa
add
pop
sub
xor
sub
inc
sbb
out
orl
lds
and
loopne
adc
aad
sahf
enter
add
lods
aaa
shll
sub
in
mov
jle
jl
stos
js
jp
clc
dec
dec
lock
pusha
sbb
addr16
sub
inc
push
pop
dec
das
inc
inc
ficomps
nop
sbb
pop
push
aam
pop
fdiv
mov
push
imul
mov
lahf
decb
or
or
cmpsl
ss
xchg
xor
add
fdivs
insb
fs
push
adc
push
call
inc
add
xchg
ret
pop
pop
frstor
adc
adc
movsb
sub
shl
add
mov
lret
inc
shlb
iret
addb
xorl
mov
cmp
jbe
sbb
mov
inc
push
cmp
jge
mov
push
aas
repz
push
fistl
popl
xlat
pop
stc
and
fildl
loope
push
roll
add
fisubrl
repz
fiadds
loope
pushf
movsb
mov
or
stos
std
rol
out
cmc
add
adc
int3
mov
add
es
adc
fadds
lret
pop
pop
inc
pop
repnz
inc
in
sbb
cmp
loopne
xor
jns
inc
insb
xchg
adc
popl
adcl
loopne
or
pop
sbb
xchg
test
loopne
add
sbb
mov
imul
sub
add
out
pop
stos
xor
test
scas
loopne
movsl
test
stc
jecxz
lods
mov
mov
mov
repnz
sahf
push
jns
sub
xor
sbb
mov
adc
jle
int3
mov
add
std
adc
js
rclb
mov
fldl
add
xchg
insb
out
fs
aas
scas
pop
insl
add
mov
xlat
lods
js
jo
ljmp
roll
das
lcall
xor
daa
hlt
push
and
mov
inc
mov
sbb
inc
xlat
adc
popf
mov
push
cwtl
add
cs
inc
mov
cmp
cmpsl
cmp
jp
mov
std
xor
mov
cmp
mov
mov
or
ret
mov
sbb
add
mov
scas
outsl
pop
cwtl
mov
cmpsl
inc
rolb
mov
cmp
push
push
leave
ret
add
jge
fidivrl
shr
jne
mov
enter
mov
fidivl
lea
cli
adc
mov
push
int
pusha
xor
fwait
pop
add
mov
and
pop
pusha
add
repnz
cmc
ja
callw
dec
dec
cmp
xchg
dec
aas
and
mov
add
ja
add
stos
mov
rorb
ljmp
push
das
mov
lds
data16
mov
out
mov
testb
ret
mov
pop
inc
adc
dec
jp
mov
xor
add
adc
jne
inc
cmp
sbb
push
inc
sbb
pop
mov
jg
jb
mov
aas
cmpsb
sahf
ret
shlb
jb
add
sbb
mov
or
repnz
ljmp
jmp
roll
mov
sbb
cmp
das
add
cmp
sub
fdivrs
add
add
insl
into
cmp
push
cmp
push
mov
lcall
add
pop
loopne
repnz
xor
ficomps
xchg
mov
xchg
lea
xor
push
cltd
add
lcall
add
out
ret
stc
shrl
pushf
movsl
push
push
add
add
pop
fbld
je
lock
insb
add
adc
xor
jnp
out
jecxz
aas
add
inc
jns
sbb
mov
add
add
fwait
pop
lods
mov
lock
add
stc
fists
sbb
lcall
xchg
hlt
fsub
pop
mov
push
xchg
inc
enter
xor
adc
adc
lret
int3
cmp
mov
ret
sub
add
jae
ja
push
lret
roll
inc
ljmp
ficomps
es
dec
mov
cwtl
cmp
shrb
mov
in
mov
pop
mov
dec
or
mov
mov
mov
adc
dec
add
xchg
mov
inc
jp
jb
scas
adc
jmp
sbb
or
inc
lock
addr16
sub
pusha
add
or
push
inc
jne
push
sbb
lds
ds
mov
and
ret
jnp
cmc
or
fcomps
add
jae
add
bound
lods
inc
fcmovnu
cmp
or
and
add
imul
sti
add
push
mov
or
adc
rolb
push
iret
rorl
outsb
cltd
add
adc
inc
popf
add
hlt
fmul
push
pop
lcall
jb
push
sub
and
shl
in
call
mov
mov
aaa
jg
loopne
jb
jp
add
pop
fwait
mov
add
mov
sub
sbb
add
push
scas
sbb
xor
outsl
inc
push
ret
mov
jo
test
mov
cmpsb
int3
inc
add
jb
cmpsl
rcl
lea
cmp
aad
and
lock
jge
cli
mov
loopne
scas
lret
add
pop
shl
xchg
xchg
cmpsb
jae
cpuid
movl
hlt
cmp
add
pushf
mov
pop
cmc
stos
mov
jns
rcrl
add
clc
xor
les
xor
cwtl
xchg
mov
lds
xor
popf
adc
add
xchg
pop
mov
fdivr
daa
imul
clc
fistps
mov
sub
lahf
popf
push
subb
or
push
out
cmp
pop
and
jl
cmp
int
ss
out
jge
out
mov
add
xor
mov
lcall
fwait
push
mov
jmpw
mov
pop
xchg
xor
leave
nop
xchg
pop
add
cmp
xchg
add
push
out
xor
mov
int3
es
pop
adc
sbb
jo
popa
outsl
and
sub
bound
pop
jb
fmull
cmp
mov
lods
scas
hlt
xor
clc
or
shlb
adc
xchg
inc
pusha
and
or
out
js
jns
stos
mov
pop
mov
lret
jbe
aad
out
jnp
pop
mov
adc
xchg
dec
repz
add
hlt
push
mov
lcall
mov
jnp
lock
mov
push
jbe
pop
into
jl
rol
call
ljmp
pop
xor
pusha
lock
fwait
in
mov
call
sti
test
push
add
cs
outsb
dec
fadd
jg
add
cmp
iret
xor
addl
jb
lock
pusha
or
mov
inc
jle
pop
shr
pop
call
push
shll
jo
in
scas
add
loope
popa
dec
mov
mov
add
cmpsb
test
jns
adc
add
pop
push
leave
fimuls
jne
rcrb
movsb
rol
iret
aas
lods
or
cmp
outsb
insb
insl
mov
das
xor
push
clc
in
call
jg
and
repnz
mov
cmp
cmpl
xchg
pusha
xorb
jb
movsl
sbb
enter
lods
hlt
shl
nop
add
lcall
cld
pop
add
jne
call
xor
jge
adc
add
or
mov
adc
ret
mov
fiadds
jae
or
incb
cmp
mov
jg
push
addb
xchg
cli
push
add
or
add
test
push
ljmp
ja
dec
repz
out
add
in
inc
mov
lret
xor
jbe
test
cmpsl
add
or
nop
popf
or
jecxz
adc
mov
mov
add
lea
sub
subl
or
cld
or
jp
push
jae
add
or
mov
add
pop
xchg
aas
adc
or
lods
cmpl
repz
xlat
add
jp
enter
pop
jno
call
loope
shlb
add
mov
mov
add
repnz
mov
ret
add
sti
adc
add
je
xor
sbb
adc
hlt
jbe
adc
movsb
xchg
and
cwtl
ret
test
int
jp
xor
fiaddl
movzbl
sub
push
in
add
fadds
shlb
or
std
add
mov
or
aad
rcrb
pop
pop
inc
push
mov
pop
popf
add
cld
adc
ds
add
sbb
pop
or
add
in
mov
adc
jmp
and
lret
or
mov
sbb
rclb
inc
lock
ja
cmp
shl
xchg
andl
repnz
adc
mov
mov
push
insb
adc
pop
sbb
imul
fildl
dec
lods
pop
add
lds
add
sub
push
in
loope
push
rdtsc
jo
or
enter
push
pop
test
xchg
mov
jno
pop
and
fcoms
mov
jmp
idivl
mov
aas
sbb
inc
or
xchg
cmpsb
clc
jp
into
dec
pop
add
dec
xchg
cmp
push
andb
in
cmp
cmp
add
cwtl
xor
add
add
mov
push
cmp
jo
inc
mov
add
pushf
pop
or
outsl
sub
stc
aaa
push
push
ja
stos
notb
xchg
and
sbb
loop
add
fstps
xchg
mov
sub
and
popa
add
push
dec
iret
fistpll
aam
xor
lds
mov
push
fcmovb
dec
ret
dec
arpl
pushf
faddp
jbe
mov
jp
int3
andl
adc
ret
loopne
cmp
sbb
xchg
mov
jmp
iret
cmovle
push
jl
inc
add
mov
pop
cwtl
xchg
and
fwait
lock
sub
add
mov
rcll
push
add
loope
fwait
cmpsb
push
mov
out
lea
mov
mov
or
lret
insl
popa
pop
sub
pop
jns
jle
orb
push
ror
pop
pusha
pop
jo
cmp
or
mov
add
aaa
popa
sub
jno
xlat
rclb
add
mov
cmp
lods
jmp
adcl
data16
ds
sbb
stc
orb
cs
das
add
jnp
mov
mov
dec
xchg
mov
cmp
add
int3
std
add
fcmovu
movsb
add
test
lods
popf
mov
popa
cmp
push
data16
clc
out
call
aam
jp
call
cmp
mov
sbb
outsb
bound
aam
jns
addb
sub
roll
ds
push
sbb
fwait
add
ret
movsb
loope
das
add
scas
jmp
xorb
dec
movsl
mov
xchg
cmp
idivb
dec
inc
inc
cmpsl
loopne
adc
add
je
mov
jae
inc
sbb
inc
push
add
inc
pop
dec
scas
add
push
enter
xchg
jge
stos
repz
loope
mov
mov
orb
adc
add
sub
fcoms
add
jecxz
mov
ficomps
lahf
inc
push
add
or
mov
aas
xchg
aaa
pop
xchg
stc
add
cmp
scas
mov
repz
xor
roll
jo
ljmp
icebp
jp,pt
mov
int
and
iret
xchg
lds
sar
aam
ss
rorl
fsubs
cwtl
mov
push
push
hlt
mov
movsl
je
add
pop
cmp
pop
in
pop
es
jo
test
std
xor
in
stc
clc
xchg
repz
das
pop
mov
jecxz
out
andb
jp
xchg
or
in
mov
test
mov
pop
into
popf
adc
pop
xchg
cli
mov
jns
adc
test
aas
or
jle
ret
add
sbb
in
fmull
add
dec
stos
adc
call
pop
add
sub
dec
stos
add
shr
cmc
push
dec
and
or
xor
aas
dec
mov
pop
mov
jb
lds
ret
mov
mov
jmp
scas
jl
add
inc
popa
lods
addr16
mov
or
ljmp
rclb
push
daa
add
adc
leave
cmp
stc
cmpb
imul
inc
mov
add
sub
subb
gs
add
cld
add
add
mov
cmp
sarl
movsb
pop
loopne
inc
dec
ret
imul
sub
out
cmp
xchg
adc
in
loopne
push
popa
enter
pop
jo
int3
xor
test
adc
mov
add
add
bound
and
dec
adc
sub
add
adc
cmp
push
popa
pop
sbb
dec
adc
jo
sub
jge
iret
jns
test
sub
cmpsb
gs
mov
or
pop
cmp
pop
pop
mov
fmulp
or
jle
cmpb
cmp
and
int
lret
in
outsb
add
loop
cmp
inc
xlat
sub
push
push
nop
add
fstl
into
mov
xor
jge
sbb
hlt
mov
ss
imul
loop
and
add
popa
xorb
lods
ljmp
add
imul
jbe
xor
loopne
add
jae
mov
pop
roll
in
cwtl
xchg
nop
fs
add
cmp
bound
pop
cld
add
inc
and
sbb
mov
cmc
jnp
inc
and
jbe
mov
adc
jge
mov
mov
out
adc
rolb
dec
pushf
stos
lds
roll
dec
sbb
cmp
add
inc
stos
sub
fadds
and
rcrb
push
jp
add
roll
test
pop
add
mov
hlt
aas
and
push
out
jbe
movsb
pop
test
jmp
iret
or
cmp
push
inc
fcmove
add
pusha
insl
addr16
jne
adc
or
pop
xchg
jb
add
mov
insl
incb
sub
fsubs
add
mov
add
sub
xor
dec
mov
jae
mov
jmp
adc
add
pusha
insl
or
add
mov
lahf
das
mul
add
jecxz
pop
xchg
add
aas
je
push
dec
mov
rclb
fnstsw
in
js
imul
cmpsl
jns
pop
push
mov
add
sahf
loop
fcomip
add
js
clc
add
add
cmp
in
add
adcb
les
cmp
ljmp
daa
nop
dec
adc
mov
sub
pop
sbb
pop
inc
stc
push
sti
mov
in
es
test
push
mov
cld
rorb
and
cwtl
sub
or
push
jmp
xlat
inc
enter
in
icebp
cmp
dec
in
ss
add
xor
add
test
mov
push
js
jge
movsb
scas
and
aaa
or
mov
push
jbe
and
roll
xchg
mov
pop
js
rolb
jne
mov
pop
pop
add
shrb
in
add
pop
and
ds
notb
clc
loope
addb
xchg
in
dec
and
lods
add
enter
add
xor
jmp
das
inc
add
mov
add
dec
xor
sbb
mov
xor
adc
add
lods
adc
inc
mov
jp
inc
decl
jno
ja
fnstenv
outsb
cmpsl
sub
jns
adc
mov
add
outsb
add
push
pop
mov
or
add
out
push
pop
adc
adc
fidivl
leave
and
loopne
mov
cli
push
jp
add
mov
lret
lahf
sub
sbb
dec
sbb
clc
dec
pop
repz
jge
popf
add
lock
pop
add
pop
add
sbb
lahf
mov
dec
pop
insl
mov
cmp
movl
fnop
dec
jecxz
in
call
adc
ljmp
and
push
test
cmp
inc
push
mov
add
push
hlt
xchg
sub
mov
in
add
sbb
cmc
and
jno
pop
mov
jae
push
stos
cwtl
mov
scas
outsl
arpl
sub
aas
add
add
repnz
xor
daa
lret
fdiv
xchg
and
outsl
cmp
add
pop
lock
pop
push
xlat
jl
pop
mov
test
jns
js
add
aaa
inc
in
pop
cmpsl
add
jns
lock
icebp
lock
insb
cmpsl
out
dec
sub
or
add
lret
push
jle
mov
push
adc
or
call
xchg
lock
cltd
in
cmp
add
cmp
lcall
sbb
fists
ret
int3
push
aad
rorb
mov
mov
shrl
pop
test
aam
inc
push
lret
add
lock
dec
sbb
add
divps
and
decb
je
and
ret
testl
into
mov
xchg
cmp
mov
jo
sti
subb
andb
add
jne
std
mov
add
and
cli
mov
add
les
cmp
sbb
xor
add
daa
mov
sbbl
inc
fdiv
call
lret
push
movsb
idivb
aas
add
les
add
int3
mov
sub
shlb
popa
iret
sbb
pop
mov
mov
sub
ret
pop
lret
add
out
mov
adc
jle
mov
pop
adc
cs
sbb
push
mov
push
pop
adc
push
loopne
movb
mov
aam
pop
inc
dec
mov
or
add
add
shll
jnp
shrl
mov
lret
xor
cmp
jle
jo
xor
stc
data16
xor
call
popa
xchg
jo
and
sbb
test
sbb
out
pop
loope
fs
add
pop
jecxz
fisubrl
fwait
cmp
jno
or
and
add
cmp
das
clc
insl
mov
aam
jne
les
cwtl
cld
dec
test
mov
enter
xchg
mov
adc
lock
clc
clc
sbb
jb
add
mov
cmp
les
enter
push
and
adc
fcomps
stos
dec
and
lods
nop
inc
int3
cmc
add
mov
mov
mov
pop
adc
ret
adc
sbb
enter
and
sub
add
popf
out
and
dec
je
cs
xorl
daa
mov
loopne
xchg
xor
lret
jno
sahf
push
add
rcrb
jmp
mov
stc
stos
mov
dec
fisubrs
jle
mov
and
pop
call
fneni(8087
push
mov
push
mov
ret
or
add
add
jbe
sbb
mov
int
dec
add
inc
aaa
loope
aad
add
fs
sub
mov
add
sbbl
mov
inc
mov
push
lock
cwtl
mov
xor
std
add
mov
daa
add
into
mov
add
das
fwait
xchg
mov
and
add
out
mov
int3
cmp
inc
movb
mov
sbb
push
push
mov
ja
mov
ficompl
add
or
enter
pop
test
mov
add
add
sahf
mov
inc
les
add
push
lret
rcr
js
mov
add
sub
stos
pop
pop
aas
data16
enter
in
push
add
shlb
jnp
test
add
cmpsb
and
add
or
stos
lret
aaa
out
je
call
cmp
push
or
push
mov
subl
lock
pop
add
add
cmp
xor
lahf
imul
repnz
popa
inc
and
inc
push
inc
jl
or
sub
adc
shlb
adc
sub
nop
ss
std
add
mov
pushf
add
jg
adc
mov
xchg
out
mov
mov
cli
aad
iret
sbb
fs
or
xchg
adc
dec
jge
add
pop
mov
add
aas
pop
loop
clc
cmp
fsub
fwait
add
cs
test
mov
and
je
stc
cmp
nop
pop
push
sbb
cmpb
data16
call
andl
int
or
xchg
cwtl
mov
adc
leave
or
and
xor
xorb
lea
xchg
daa
push
dec
iret
inc
or
shrd
shlb
in
or
mov
push
aas
nop
inc
push
mov
rdtsc
pop
lahf
pusha
mov
das
in
jge
add
out
addb
cmp
lods
mov
mov
push
dec
xor
loop
and
clc
movl
es
or
add
xchg
std
jo
xor
addb
mov
adc
cmp
and
mov
das
mov
pop
fldenv
sub
push
popa
jbe
or
add
dec
pop
outsl
jns
mov
roll
rorb
ret
add
inc
shll
mov
dec
addb
add
leave
or
jns
or
out
add
mov
mov
outsl
das
cld
add
stos
jno
subb
cmp
out
fstp
add
lahf
pop
inc
push
add
std
mul
mov
push
adc
sub
add
jle
out
into
rclb
and
jmp
jne
ljmp
arpl
cmc
or
cli
sub
and
xchg
add
shr
mov
inc
outsl
test
xor
test
fiaddl
fnsave
pop
push
mov
push
test
or
loop
sbbb
ds
add
notl
push
lods
xchg
ja
dec
inc
jb
mov
cmc
dec
sbb
dec
and
test
das
push
pusha
pop
rcll
pop
and
xchg
sub
push
dec
lea
fisttpll
in
push
pop
stos
sahf
mov
push
bound
inc
mov
add
push
jae
adc
push
movl
lahf
imul
leave
mul
and
inc
and
in
mov
adcb
or
cmp
aas
inc
enter
dec
add
add
add
das
add
pop
jp
add
cmp
mov
cmp
outsb
sti
inc
or
push
and
pop
sub
xlat
daa
add
sbb
cmp
mov
xchg
push
add
orb
js
pop
mov
sahf
inc
imul
push
push
inc
sbb
adc
add
xor
data16
sbb
push
jbe
out
jne
addr16
cs
adc
xor
test
xor
pop
mov
and
mov
inc
fisttps
mov
pop
and
sbbl
and
add
push
pusha
jbe
aam
xchg
add
nop
lock
pop
loope
inc
sbb
cld
mov
pop
pop
jp
in
sbb
sub
push
xor
jno
cmc
dec
cltd
xor
add
mov
cmpl
cwtl
add
loopne
dec
cld
icebp
sub
popa
jg
js
nop
push
mov
sbb
pop
adc
insl
cmp
out
jb
stc
cmpb
sub
add
into
pop
mov
adc
cmp
decl
popa
pop
and
xchg
or
je
popa
dec
cld
fcmovne
daa
jmp
cltd
fidivs
imul
add
and
jb
adcb
clc
add
insb
js
daa
and
or
rol
mov
fstps
mov
out
iret
jae
loop
jmp
rol
and
mov
xchg
test
pop
cmp
push
stos
mov
add
sbb
mov
mov
cli
adc
mov
mov
add
sbb
inc
sti
ficoml
jp
push
add
clc
cmpsb
or
sub
cmpl
mov
add
pop
mov
xor
pop
adc
mov
dec
dec
sbbl
roll
cmp
pushf
mov
pop
loope
jbe
adc
daa
mov
clc
iret
and
or
lods
sub
pusha
or
adc
add
add
add
data16
ror
mov
mov
mov
addb
mov
jle
sbb
out
subb
scas
sbb
add
jae
shll
movsb
mov
adc
pop
arpl
mov
or
dec
mov
push
add
and
bound
inc
lods
add
les
mov
mov
mov
dec
cwtl
popa
out
add
inc
xor
das
lods
in
xor
add
ljmp
cmp
add
jmp
add
lcall
xlat
shl
ds
lods
dec
add
repz
pusha
lock
inc
loopne
scas
add
test
cli
ljmp
add
add
fmul
js
mov
add
mov
daa
add
cmp
jns
jge
rolb
roll
pushf
jmp
and
inc
verw
loope
repnz
jl
adc
and
mov
add
mov
nop
pop
or
inc
sub
cmpsl
cs
js
dec
mov
xor
jecxz
data16
xchg
dec
pop
arpl
in
sub
cmp
mov
or
fnsave
mov
push
shll
push
add
and
inc
xlat
lea
in
push
lock
push
push
xor
jno
out
add
loope
aas
leave
push
lock
add
jp
daa
jno
add
mov
cld
cmp
jl
inc
andl
sti
test
pop
int3
pop
jg
dec
lret
mov
shlb
fimuls
add
or
jmp
push
xchg
clc
pop
aas
rorb
add
xchg
pushf
pop
scas
inc
fnstenv
cmp
inc
arpl
dec
add
hlt
in
data16
sbb
jl
outsb
mov
repz
add
popf
push
int3
push
std
mov
add
pop
sub
enter
sbb
push
sub
mov
xor
add
pop
adc
dec
testl
lcall
mov
orb
aad
aaa
leave
push
jl
xchg
add
xor
incb
mov
aaa
call
aam
push
xor
sarb
xchg
add
test
iret
add
cmc
out
sub
or
int3
mov
scas
pop
xlat
fidivl
xchg
sub
fmuls
test
jnp
and
cmp
je
jno
mov
sbb
adc
imul
ret
or
or
push
xchg
in
add
or
scas
sbbb
stc
xchg
mov
adc
call
mov
jno
cmpsb
cwtl
jl
add
adc
xor
mov
fsubr
fcoms
mov
cmp
ljmp
iret
inc
rcrb
pop
xchg
daa
jo
sar
mov
xor
push
imul
push
xchg
out
add
clc
adc
cmpsb
inc
xchg
pushf
popf
cmp
mov
push
in
xchg
jns
idivl
and
mov
or
mov
aad
add
lods
mov
sti
pop
jnp
add
mov
sbb
or
cltd
in
add
or
faddl
push
push
cmp
add
mov
test
push
add
mov
xor
xchg
sub
mov
jb
lock
push
mov
mov
add
mov
mov
add
xor
mov
xor
nop
popl
cmc
add
xor
leave
outsl
shrb
dec
push
jo
dec
sbb
adc
leave
fsubs
push
jnp
fmuls
out
and
pop
jl
mov
sbb
mov
sub
push
adc
or
dec
dec
mov
or
sub
rclb
and
dec
pop
cmpsl
add
shlb
jns
push
add
sub
dec
add
pop
and
mov
sbb
mov
add
jno
or
imul
decb
adc
xor
sahf
movsb
and
out
jne
jecxz
jnp
es
cmp
xchg
mov
adc
roll
and
pop
xor
mov
push
ljmp
add
ret
iret
sub
out
loopne
pop
leave
mov
pop
ss
lahf
movsl
ja
adc
push
sub
jns
sbb
add
out
or
gs
arpl
insb
shll
cmp
cmpsl
push
mov
pusha
add
or
call
int
movsl
enter
add
and
movsb
lods
add
cmp
add
repnz
pushf
ret
cmp
leave
fdivl
in
add
mov
je
pop
test
and
in
add
fwait
scas
add
fnclex
xor
pop
cwtl
inc
push
lcall
ret
test
movsb
add
pop
out
cwtl
add
pop
ja
addb
stc
lcall
xchg
pop
pop
mov
orl
xor
das
or
jl
and
clc
adc
sub
mov
add
pop
rcrb
jle
jmp
std
and
or
pop
add
imul
andb
jbe
fldl
or
xchg
pop
push
loopne
out
daa
js
add
dec
add
into
sub
cmpl
dec
mov
jo
pop
into
cmp
nop
mov
movsb
stos
jg
jmp
vshufps
outsb
add
cmc
inc
add
aad
xor
jbe
add
je
sbb
inc
cltd
add
and
dec
jp
stos
sub
pmuludq
mov
dec
lods
add
sahf
ficompl
xor
shll
pushf
pop
iret
cmp
adc
fadds
ret
ljmp
pop
cmp
inc
movsl
idivl
jae
jge
and
push
js
sub
sub
addb
add
sbb
jbe
rcr
or
and
aam
xor
lahf
popa
fisubrs
into
push
cld
add
jle
rorb
ss
or
jbe
cmc
subl
bound
xor
mov
dec
adc
sub
adc
mov
push
cltd
call
inc
pop
or
cmp
xchg
push
cld
push
pop
push
jae
xor
add
jle
and
xchg
stc
adc
js
and
and
roll
sbb
sub
xor
add
sub
cmpl
add
in
add
shl
mov
add
dec
idiv
bound
xor
pop
shlb
rolb
cmp
cmp
imul
add
jmp
adc
push
pop
mov
mov
cmp
sub
add
daa
fs
push
sub
nop
or
add
xchg
in
inc
int3
push
rorb
subb
push
cwtl
aad
mov
cli
lods
adc
enterw
and
in
clc
add
aam
mov
mov
orb
adc
mov
add
daa
add
js
pop
loopne
rolb
cwtl
test
data16
add
fidivl
inc
dec
jbe
movsb
cwtl
shlb
rol
xchg
jae
add
fstpt
test
add
test
mov
stos
lock
ja
mov
xchg
dec
add
jae
or
enter
mov
mov
incl
sub
add
shlb
mov
in
inc
pushf
testl
xchg
out
mov
stos
flds
and
fcmovu
movsb
sub
sbb
inc
and
or
test
sub
mov
es
push
cmp
stos
rolb
movsl
push
sub
jg
imul
xor
fs
int3
pop
test
je
fldcw
mov
pop
stc
lret
leave
jae
sbb
xorl
cmp
inc
sbb
pop
lret
bound
add
punpcklbw
jns
cld
xorb
pmovmskb
adc
pusha
out
shrb
cli
nop
add
adc
lock
hlt
lcall
add
and
jle
or
out
aas
data16
mov
sub
add
test
sbb
sub
aas
cli
clc
sub
popa
sub
dec
jo
xchg
sbb
sub
bt
fimull
fldl
shr
sarb
fimull
xor
dec
cmp
push
sti
mov
loop
cmpsl
xchg
lods
add
and
outsl
lret
pop
add
fbstp
push
fnsave
mov
add
cmp
mov
jb
add
mov
cs
inc
add
outsl
mov
stos
stos
fwait
shll
hlt
dec
fldenv
adc
xchg
hlt
lods
in
das
mov
cmpsb
adc
xor
ljmp
mov
jl
aaa
dec
add
pop
rcrb
add
dec
test
mov
sbb
and
dec
out
js
add
mov
lds
mov
sti
xchg
insb
loope
fsin
jno
enter
push
pop
push
pop
test
mov
icebp
add
sub
addb
ficoml
xchg
cmpl
sub
in
repz
push
and
les
xor
jl
add
mov
ficomps
imul
leave
add
or
xchg
das
hlt
push
mov
xor
bound
lret
cltd
subb
stc
add
int3
push
mov
std
loopne
mov
fisttpll
cltd
push
add
and
divl
lcall
imul
out
js
cmp
dec
dec
pop
add
cmp
repnz
push
ret
adc
fadd
push
das
push
jns
rol
push
mov
lahf
test
clc
jge
or
mov
cmp
shr
xlat
fldt
mov
xchg
aaa
sub
and
sub
add
addr16
sub
mov
cli
add
ljmp
add
adc
add
sub
mov
std
call
scas
mov
jb
jl
push
gs
jecxz
cmc
adc
cmp
push
insb
inc
xchg
call
jns
addb
jle
cwtl
pop
das
add
push
imul
lods
add
pushf
fisttpll
add
fsubrp
loopne
addl
bound
outsl
add
sbb
push
pusha
adc
aad
sbb
mov
lock
and
and
rcrb
js
sub
sbb
add
movups
outsl
inc
sub
dec
das
add
cmp
push
adc
into
aas
fidivs
jo
daa
mov
cmpsl
mov
aam
das
in
add
outsl
cs
shr
in
testb
es
adcl
xor
and
cmpsl
mov
sub
push
mov
add
xchg
cmp
lods
and
sbb
adc
xchg
andl
loope
pop
sbbb
out
or
xor
fildl
push
pop
jmp
scas
movsl
mov
add
push
xchg
add
cmc
mov
nop
lods
popf
xor
test
sbb
loope
lcall
lock
xcrypt-cbc
cmpsl
aam
add
cmp
jne
push
cltd
mov
jnp
add
sub
cmpb
mov
adcb
or
fs
sahf
jae
pop
cmp
and
adc
popa
jmp
aad
int3
daa
mov
iret
cmpb
lock
mov
pop
mov
rolb
lcall
cli
mov
rolb
or
push
sbb
xchg
or
out
jbe
add
and
adc
push
in
or
xchg
ja,pt
pop
or
and
dec
dec
and
cmp
add
push
add
inc
push
xchg
roll
inc
aad
cmp
imul
or
and
sbb
mov
mov
outsl
mov
leave
add
mov
sub
scas
dec
add
pusha
pop
jecxz
sub
stos
xor
and
fildll
aam
in
ljmp
inc
rorb
sub
mul
movl
cli
in
add
push
and
out
add
sbb
push
es
xchg
loopne
push
inc
test
out
out
mov
adc
mov
rolb
push
jl
mov
cmpl
add
sahf
push
mov
push
cmp
roll
pop
dec
or
cs
inc
xchg
mov
cmovs
adc
divps
imul
cmc
cmp
adc
aaa
std
arpl
inc
dec
cmp
fs
and
rolb
int3
insl
push
push
mov
int
add
in
sbb
fsubp
sbb
daa
mov
push
outsb
popa
adc
das
or
dec
and
pop
icebp
negb
push
out
inc
pop
sbb
repz
add
insb
cmp
nop
add
adc
repz
lahf
inc
pop
popa
addr16
jbe
jle
push
cmpsb
hlt
mov
and
jne
add
push
shr
xchg
mov
mov
sbb
pop
cmp
les
xlat
add
cmc
jno
add
movsb
and
jae
lods
mov
mov
shrl
and
add
inc
cmp
add
xor
and
xor
insb
xor
dec
push
pop
scas
sbb
loope
sub
mov
pusha
inc
sub
jb
add
push
fdiv
jl
aas
out
cmp
test
dec
fwait
repnz
jmp
test
aaa
mov
inc
sbb
pushf
mov
or
fnstenv
jae
pop
sbb
inc
insl
cmp
add
lea
xchg
sbb
lahf
ljmp
andb
fmuls
add
repz
mov
add
test
add
adc
adc
mov
and
mov
jns
add
jg
fisttps
mov
xor
rolb
xchg
push
adcl
or
or
out
mov
or
pusha
jge
jns
add
sbb
shll
stc
fdivs
idivb
sub
ss
fbstp
or
lahf
sbb
loop
xchg
pop
push
jmp
add
add
pop
sub
cmpsb
stc
jo
xorb
shll
jmp
outsl
dec
negb
neg
cmp
xor
movsl
xchg
and
add
mov
adcl
add
cs
loopne
scas
inc
push
call
push
cmp
adc
das
mov
shll
add
scas
add
test
loop
in
jno
cmpsb
mov
popf
mov
lcall
insl
scas
cmpsl
and
pop
aad
shlb
add
and
add
enter
nop
dec
xlat
add
push
cmp
mov
cs
js
sub
dec
pushf
add
pop
stos
pop
cmp
push
and
sub
and
rdpmc
call
push
xchg
jno
cmpsl
lret
repnz
inc
pusha
and
push
cwtl
sbb
sarb
xchg
add
cmpsb
movsb
mov
lds
xor
std
add
flds
cmpsl
call
out
roll
fildll
jg
std
lret
cmp
lahf
stos
jl
add
dec
mov
sbb
xchg
scas
int3
out
add
jge
rolb
mov
enter
cmp
ljmp
push
jle
lea
inc
cwtl
inc
hlt
cmp
jns
adc
adc
out
pop
cmc
cmp
and
enter
add
xor
add
push
sarb
fsubrl
adc
lfence
enter
inc
mov
add
push
ret
outsl
jo
roll
in
pop
ficompl
leave
sbb
dec
test
inc
inc
add
pushf
dec
lock
testl
xchg
mov
call
mov
mov
pop
sti
adc
sbb
mov
push
in
out
or
jb
sub
sub
outsb
or
les
inc
cmpb
xchg
adc
pop
adc
aaa
add
push
cmpl
fiaddl
test
loopne
pop
mov
add
push
imulb
mov
push
cmp
setbe
lss
cmp
xor
mov
incb
adc
es
mov
cmp
lock
and
add
inc
ret
xchg
test
add
leave
cmpsl
sub
inc
dec
fiaddl
ja
mov
aam
enter
push
xchg
movsb
add
outsb
je
add
hlt
repnz
je
add
test
out
or
dec
add
or
adc
lock
lret
adc
push
lods
les
shlb
pop
mov
mov
rolb
add
jmp
add
outsl
mov
ss
mov
push
test
or
push
scas
xlat
clc
mov
sub
xorl
xor
icebp
cmc
add
mov
into
and
iret
sahf
sarl
rol
cmpsl
shl
popa
js
inc
add
xchg
mov
ss
add
shr
pop
loopne
call
adc
mov
orb
sub
inc
sbb
push
inc
adc
or
shll
loopne
lock
dec
add
test
imulb
sbb
loope
mov
sbb
dec
movsb
rolb
sbb
cmp
jp
xlat
aaa
in
data16
push
sbb
or
xchg
mov
or
clc
andb
mov
sub
sti
cmp
lds
fisttpl
lret
mov
dec
in
add
xchg
lcall
mov
adc
lods
xlat
adc
add
stos
sub
cwtl
arpl
dec
push
js
push
jle
xor
dec
les
xor
scas
pop
outsb
cli
test
adc
clc
in
xor
and
cmp
sub
xor
add
dec
and
fsubl
pop
sub
pushl
cmp
pop
dec
sbb
stos
xor
fadds
adc
xchg
inc
or
ss
lock
push
dec
nop
inc
ljmp
sahf
jmp
negl
add
es
stos
bound
aam
mov
adc
xchg
add
xor
imul
in
xor
and
mov
xchg
and
enter
dec
sbb
push
inc
xchg
lods
jg
inc
ja
scas
mov
sahf
xor
mov
cwtl
add
push
jle
lahf
sub
pop
aam
adc
sub
lock
add
add
arpl
pushf
push
mov
fs
mov
or
in
lret
push
add
pusha
fmuls
cwtl
adc
mov
and
adc
pop
mov
sarb
lods
or
dec
lods
jp
inc
inc
pop
scas
push
mov
xchg
out
jl
enter
push
rclb
mov
scas
mov
in
xor
inc
push
inc
mov
pushf
add
xchg
loop
inc
pop
or
fucomi
push
sbb
jle
pop
adc
clc
imul
jp
pusha
push
adcb
dec
mov
inc
mov
dec
lret
bound
std
mov
sbb
or
pop
inc
pop
add
xor
sbb
pushf
xor
inc
or
js
movsl
in
dec
add
xor
add
add
push
dec
cmp
xchg
inc
and
inc
ds
movsb
mov
jecxz
add
stos
aam
add
call
aaa
test
repz
into
add
fsub
xor
xchg
test
or
push
add
pushf
in
mov
inc
add
or
add
mov
addr16
clc
fwait
add
addl
popf
test
cmp
nop
cmp
leave
add
pop
lret
shrb
add
add
jo
cmp
add
mov
leave
inc
pusha
xorl
sbb
les
std
jl
pop
xor
adcb
test
mov
scas
sbbl
push
xor
es
stos
ss
out
negb
add
lock
jno
and
mov
cwtl
sbb
aas
das
or
mov
inc
movsl
clc
mov
loope
push
int3
movsl
lahf
notl
cmovge
xor
and
repz
sub
shl
cwtl
bound
pop
inc
mov
imul
data16
lock
roll
fcmovb
ja
icebp
and
into
xchg
pop
aaa
ret
add
outsb
sarl
loop
pop
pop
inc
cmc
lods
sbb
mov
pusha
sub
lahf
aam
test
mov
sti
movsb
int
cltd
xchg
pusha
dec
mov
nop
adc
sub
xor
sbbb
adc
cmpl
int
cld
mov
pop
je
fs
shlb
mov
aas
add
cmp
js
cld
repnz
sti
std
xchg
sbb
add
inc
mov
cwtl
dec
sbb
sbb
enter
pop
mov
adcb
xor
shlb
repnz
shrb
popa
mov
int3
dec
mov
aam
push
jno
lea
push
add
lcall
or
int3
cmp
fcoms
js
add
mov
pop
fwait
sub
pop
push
cmp
mov
sub
cmpl
push
ret
mov
int
mov
fstl
das
sahf
out
or
or
push
scas
lods
push
mov
pusha
sub
fimull
lahf
push
sub
add
sbb
dec
cwtl
jle
in
add
push
call
out
dec
mov
push
bound
xor
rolb
pop
adc
test
add
stos
and
or
inc
pop
aad
inc
je
mov
sbbb
xor
hlt
add
sti
mov
mov
xor
test
push
lahf
add
addr16
mov
out
shr
cmp
mov
fidivl
lods
test
lret
adc
repz
dec
pop
lea
addr16
pop
sub
and
jl
das
lock
sbb
jno
mov
inc
inc
jmp
insl
or
and
into
fadd
sti
lods
cmp
inc
add
test
xor
cs
sub
xor
sbb
mov
leave
pop
ljmp
lods
adc
mov
pusha
or
hlt
adc
or
push
jecxz
add
adc
popa
fucom
add
mov
lahf
bound
out
push
inc
mov
mov
push
add
lock
fdivrl
mov
rorb
lahf
imul
add
add
or
fbstp
lcall
or
pusha
lahf
scas
or
sbb
mov
test
or
movsb
push
mov
mov
xor
sbb
neg
sar
mov
add
xchg
xor
mov
or
mov
js
ffree
xchg
jae
loopne
push
adc
mov
pxor
xor
inc
add
push
movsl
push
out
inc
test
pop
aam
push
or
loope
sub
pushf
aaa
in
mov
loopne
add
inc
inc
mov
sbb
cltd
in
pop
add
out
fidivrs
loope
or
dec
adc
cmp
hlt
andb
adcb
xor
or
lea
jne
and
enter
inc
insb
sub
pavgw
and
test
cmp
push
subl
dec
mov
add
pop
adc
xor
in
bound
aad
insl
es
mov
gs
inc
ret
sub
cmp
pushf
mov
and
xor
in
mov
or
or
cmpsb
cmp
dec
add
or
call
cmpsb
inc
add
push
inc
push
xchg
add
inc
pushf
inc
rolb
out
ljmp
loop
cwtl
std
inc
and
cwtl
dec
or
enter
push
pop
lock
call
int3
add
inc
and
fbstp
ficompl
pop
add
cmc
cwtl
mov
add
repz
sub
ret
shl
out
mov
cmp
les
movsl
scas
cwtl
cmp
les
pushf
or
int
or
sbb
and
add
mulb
data16
popf
mov
ds
xchg
rolb
adc
mov
data16
xor
imul
aad
xchg
pusha
xchg
fsubrs
sub
inc
es
add
shl
jo
std
jns
xor
fwait
xor
lock
push
sarl
cmpsb
xor
mov
sbb
outsb
xor
negl
fists
push
addb
or
inc
sub
data16
mov
pop
or
push
push
sti
nop
add
adc
or
cmp
cmc
enter
test
cmp
jns
xchg
cmp
in
xchg
loopne
xor
dec
jmp
cmp
adc
hlt
cmp
inc
lock
sbb
fidivl
lahf
adc
hlt
jl
push
fldenv
subb
leave
inc
sbb
or
aad
mov
std
fdivrs
pop
push
jno
ret
repnz
mov
xor
adc
inc
imul
ds
int
or
pop
out
pop
adc
fisubl
test
jecxz
push
or
cs
inc
out
and
xor
xor
shll
add
or
popa
fwait
cmc
test
clc
adc
js
nop
fsubl
outsl
or
lcall
or
sbb
dec
mov
fildll
popa
jecxz
lea
cs
imul
clc
add
push
loopne
jmp
inc
dec
inc
cmpsl
addl
mov
or
sub
inc
nop
xchg
mov
cwtl
ret
fdivrl
dec
xor
mov
je
mov
push
inc
nop
data16
xchg
dec
pop
imul
push
dec
subb
push
fisttps
sub
or
test
inc
inc
cmp
push
leave
and
add
pop
push
or
fwait
pop
xor
jae
andb
xchg
mov
loop
jge
cmp
inc
mov
adc
out
or
cwtl
fldcw
cli
fwait
adc
scas
lds
push
inc
js
add
xchg
imul
aaa
add
fucomp
rcl
fidivrs
rorb
pop
cli
xorl
push
insl
add
iret
push
and
ss
xor
and
rolb
loope
add
dec
pusha
pusha
add
outsb
push
push
push
inc
imul
xchg
sbb
pinsrw
addr16
pop
mov
add
js
out
sub
and
pop
sbb
test
sbb
sbb
and
sub
sbbl
inc
into
adc
sbb
test
and
fbstp
lahf
or
mov
sbb
pop
pop
inc
loopne
dec
orl
jae
pusha
dec
inc
imul
xor
out
loop
sti
mov
loopne
pop
mov
aam
xchg
leave
sbb
aad
xchg
cmp
push
ret
dec
imul
jecxz
pusha
adc
xor
or
push
xlat
sub
test
rep
add
in
push
lock
sbb
sub
mov
mov
jecxz
add
add
stc
imul
adc
movsb
rclb
mov
mov
cltd
jp
pop
sub
aad
movsb
int
stc
push
jo
cmp
or
dec
test
lahf
mov
add
aad
call
jp
xor
pop
jmp
repz
icebp
xor
xlat
pop
xor
adc
mov
cmp
inc
jo
leave
into
inc
and
fmuls
imul
std
add
fucomi
xor
sbb
sub
incb
sbb
or
in
add
fmul
inc
insb
pop
push
add
jmp
pop
fwait
in
data16
xor
popf
in
andl
int3
mov
cwtl
mov
push
mov
cmpb
pop
testl
sub
jne
dec
jns
test
out
pop
pusha
adc
rorb
sbb
or
arpl
xor
lods
or
aam
orl
pop
addb
pop
sbb
int
jnp
mov
arpl
out
xchg
xchg
add
out
pop
lahf
clc
mov
xor
shrl
cmpsb
nop
xchg
or
pop
shlb
push
and
sarb
bound
xor
cmp
xlat
or
scas
xchg
mov
in
loopne
cltd
lcall
push
ljmp
or
mov
cli
sub
sbb
jmp
mov
imul
add
int3
dec
add
cmp
push
fwait
sbb
xchg
aam
cmp
nop
inc
jecxz
or
subl
jo
in
xchg
int3
sub
jne
cwtl
add
popa
adc
call
jle
je
sti
mov
jbe
adc
pusha
cmp
xor
lcall
lock
cmp
inc
fisubrl
das
ljmp
dec
not
mov
jge
jno
jl
xchg
sbb
lock
sarl
add
pop
jbe
pop
cmp
loop
jmp
jp
add
push
ljmp
cmp
ret
push
dec
cmpl
dec
bswap
mov
pusha
xor
xchg
and
push
and
les
sbb
leave
xor
in
pop
jge
sbb
pop
rol
or
test
adc
sbb
ljmp
sub
lods
loop
inc
add
shrl
xor
lahf
add
les
mov
out
mov
les
shll
cmp
dec
jg
push
jbe
mull
or
leave
or
add
rcrb
xchg
push
cli
fwait
add
outsl
mov
xor
in
adc
mov
jb
pop
es
js
add
add
test
insl
pop
and
xor
movsb
mov
test
sub
adc
add
lea
cltd
fs
lds
inc
and
es
fs
mov
je
add
cmp
add
test
sbb
sub
sbb
mov
sahf
inc
pinsrw
rcr
aaa
das
mov
or
decb
movsl
xchg
xor
adc
mov
add
sub
and
jg
inc
cli
lock
js
add
pop
movsb
rcrl
mov
mulb
and
aam
int3
roll
inc
push
pop
add
cwtl
cmp
fnsave
mov
xor
test
cmpsl
push
or
arpl
test
add
mov
push
sarb
mov
xor
sbb
inc
push
shlb
sbb
and
or
and
scas
loop
adc
cmp
jecxz
lock
clc
movsl
sbb
pushf
js
and
sbb
cmpsl
leave
cmp
test
aam
andb
lea
shrb
xchg
sbb
stos
adc
xchg
mov
cld
int
add
clc
in
pop
jmp
push
mov
mov
fadd
orl
add
push
in
adc
shrl
das
fwait
andb
xor
and
push
lods
repnz
fdivl
mov
iret
push
repz
call
lcall
sti
and
pop
pop
ret
orb
push
push
mov
add
lock
mov
push
mov
in
call
dec
clc
cmpsb
inc
xchg
xchg
or
sbb
push
jge
mov
add
addr16
xor
pop
sti
pop
add
pop
jno
mov
stc
inc
xchg
shrb
mov
bound
xor
dec
add
jp
movb
out
in
aam
adc
pop
hlt
jge
xor
in
pop
fidivrl
push
in
repnz
cmp
jne
rolb
xchg
repnz
jae
and
mov
push
jbe
orb
arpl
dec
test
cmp
das
adc
push
inc
add
leave
dec
mov
js
xchg
add
ds
fxch
adcb
stos
out
call
in
add
pop
add
movsb
pop
sbb
sub
in
xchg
negb
dec
fidivrs
lock
arpl
mov
jle
add
daa
cmp
xchg
orb
sbb
sldt
lret
mov
add
xor
mov
data16
testb
add
out
lds
push
cmp
mov
add
push
pusha
loopne
ljmp
pop
add
enter
add
jno
mov
xchg
mov
mov
xchg
pusha
dec
cmp
add
in
or
mov
shlb
adc
lods
mov
repz
out
mov
inc
aam
ja
inc
add
add
cmpb
jae
popf
push
add
cli
sahf
mov
adc
mov
lcall
movsl
inc
and
clc
lock
aaa
add
push
arpl
pop
add
icebp
xor
daa
nop
pop
cli
push
arpl
and
and
inc
xchg
out
pop
push
test
pop
add
pop
out
add
xlat
add
pop
out
rorb
movsb
pushl
push
or
sub
jae
push
pop
enter
add
push
jmp
sti
mov
in
cwtl
mov
xchg
xlat
daa
pop
call
or
dec
add
pop
sub
add
mov
pop
lahf
adc
add
addr16
add
shrb
aad
insb
cmp
push
add
ret
jecxz
pop
add
mov
add
fisubl
lret
ja
test
ret
cld
dec
lock
cli
add
pop
pop
sbb
scas
aad
sbb
and
xchg
addr16
cmpsb
in
loope
sbb
sbb
add
cmpsb
ds
dec
add
out
mov
push
adc
add
sbb
push
mov
inc
inc
xchg
ror
adc
scas
movsb
stos
and
in
and
xor
and
lret
mov
add
clc
jecxz
sti
pusha
mov
xchg
fisubs
mov
jo
pop
movsb
int3
pop
inc
in
hlt
xor
pop
rcrb
andb
or
leave
fldlg2
adc
mov
rcrl
inc
pop
xor
add
mov
add
lods
push
xchg
nop
push
adc
add
cwtl
xchg
mov
pusha
adcb
xchg
dec
sub
cld
in
std
out
filds
push
jmp
int
add
pushf
test
sbb
sbb
adcb
bound
inc
pop
rclb
movsl
jmp
les
out
sbb
mov
je
in
add
adc
jg
scas
movsb
clc
add
cwtl
roll
pop
and
and
rorb
xchg
lods
push
stc
and
cltd
cmpsl
imul
jns
pusha
lods
test
push
pusha
xchg
lret
add
enter
mov
jle
mov
push
jp
lds
cmpsl
fwait
mov
sti
cld
orl
sbb
sub
push
pop
popf
xor
lds
iret
int3
stc
call
and
pop
or
push
dec
aas
subb
and
in
lock
lods
sahf
push
add
dec
or
push
jnp
push
lahf
jecxz
mov
loope
outsl
add
pop
sbb
loop
test
mov
stos
push
xor
jg
pop
cmp
hlt
jmp
je
xor
add
or
das
pop
sti
xchg
das
ja
hlt
je
adc
imul
add
leave
movsb
mov
addb
cmp
fstps
adc
add
aaa
mov
adc
incb
pop
loope
push
cwtl
pop
mov
out
jmp
add
jmp
lods
das
cwtl
fidivl
pxor
sbb
add
rcrb
inc
xchg
movsl
mov
data16
jo
pop
dec
jb
arpl
add
sbb
hlt
call
lods
sbb
incb
cmpsb
psubw
in
in
add
push
or
cmp
jmp
bound
inc
pop
inc
and
and
xor
inc
jecxz
jp
cmp
data16
mov
ret
mov
or
cmp
jge
cli
push
xchg
out
stos
aad
sbb
pop
xlat
inc
lea
sbb
imul
sahf
aaa
jle
arpl
add
and
mov
jl
add
pop
push
cmp
fdivrs
adc
adc
sub
test
xchg
das
add
xchg
pop
loopne
mov
pop
in
out
daa
dec
ret
sbb
rolb
popf
rol
lret
mull
adc
orb
mov
jp
scas
dec
enter
pop
push
bound
into
add
xor
fisubs
dec
add
or
inc
mov
fadds
inc
xorb
add
pop
aam
jp
fld
lods
add
icebp
fbstp
add
shrl
pop
repnz
xchg
cld
jo
add
inc
dec
sbb
popf
in
setg
adc
shl
cmp
mov
adcl
push
sbb
dec
andl
mov
loop
shl
add
push
in
mov
ja
mov
mov
cmp
or
push
xor
loopne
dec
fisubl
xor
sbb
jge
mov
push
shll
mov
inc
loopne
out
xchg
add
pop
cmp
icebp
fcmovb
jl
int3
inc
adc
mov
mov
pop
dec
std
mov
add
cmp
xorb
add
pushf
dec
call
cmp
nop
movmskps
and
faddl
dec
jg
jmp
xchg
clc
scas
cmpsl
mov
lcall
movsb
inc
ficomps
out
push
lods
pop
lcall
roll
sub
popf
dec
fisttpl
aad
mov
adc
dec
roll
mul
or
fisubs
int
sub
sbb
icebp
fs
test
add
jbe
cltd
nopl
sub
insl
roll
jns
pusha
or
hlt
push
add
lock
mov
pop
pop
xor
and
imul
and
sti
add
push
lods
and
add
imul
add
adc
pop
repz
aam
ret
icebp
mov
jb
sbb
add
cmp
bound
lods
and
push
cmp
push
push
jmp
inc
enter
cmp
into
mov
out
dec
xchg
mov
add
ret
pop
loope
roll
dec
push
sbb
popa
or
mov
mov
and
rol
movb
add
test
mov
lret
jl
mov
rcll
repnz
mov
andb
mov
pop
xchg
and
sahf
and
add
xchg
jp
iret
int
add
aas
sti
movsb
adc
pop
add
rolb
push
mov
pop
dec
cmp
xchg
jns
rorw
addr16
pop
repnz
add
pop
mov
orl
pusha
les
pop
cli
ss
fldl
inc
adc
push
sti
inc
iret
lahf
repnz
mov
or
pop
pushf
inc
das
loope
pop
and
subb
dec
maxps
rorl
out
rcl
push
jmp
add
and
popa
push
lcall
mov
pop
sti
repnz
jno
add
lret
ds
loopne
add
movsl
out
flds
sub
test
dec
add
data16
das
pop
repnz
aam
pop
repz
mov
add
add
pop
xchg
add
enter
mov
adc
or
icebp
lds
lret
lcall
fwait
mov
flds
or
inc
rcll
hlt
or
shrb
jns
outsb
mov
fsubs
je
les
and
pop
add
add
fidivl
pop
and
jns
mov
int
mov
mov
xchg
ss
jle
addr16
les
cwtl
rolb
pop
outsl
jne
in
and
ret
out
mov
js
push
call
and
adc
andb
aam
and
imul
out
aam
push
jg
xor
roll
fmull
mov
leave
or
lds
ror
inc
jg
out
pusha
arpl
pop
cmp
push
xor
sub
mov
adc
xlat
xchg
push
pop
out
pop
sahf
add
jbe
lea
subb
add
loopne
idivb
shl
or
xchg
sbb
push
cmp
pop
sub
shr
add
adc
mov
jno
int3
push
or
sub
dec
inc
add
lds
dec
lret
add
test
sub
aas
insb
xor
loopne
in
cld
or
sbb
sahf
ja
jg
rcrb
push
shrl
out
in
int3
in
scas
add
push
inc
xor
add
add
and
jns
ret
fimull
shrl
outsb
fs
sbb
insb
popa
lret
jle
inc
mov
stos
cmpsl
push
pusha
add
xor
pop
cmp
pop
add
cld
inc
xchg
add
xor
movsb
ss
add
xchg
mov
mul
cld
in
add
lahf
jns
add
xor
das
add
nop
loop
push
pusha
clc
and
outsl
xchg
inc
add
test
jp
add
adc
add
add
cmp
divl
mov
dec
ficomps
adc
int
inc
addb
inc
push
sub
insb
jns
add
nop
xor
pop
cmp
cmp
xor
and
pop
push
adcl
lea
add
ret
ret
cmp
fiadds
fists
mov
or
aam
cltd
and
xor
les
insb
add
xchg
jno
add
clc
addl
xor
inc
iret
add
hlt
dec
insb
add
pop
mov
inc
xorb
bound
xor
aas
outsl
dec
add
and
cmp
loope
hlt
pop
lds
push
pop
fcomp
xor
subl
repnz
xchg
xorl
sub
and
popa
xor
stc
jae
scas
jg
add
cmp
mov
jge
in
je
imul
nop
mov
clc
mov
fsubs
ret
and
pop
inc
inc
jb
adc
add
cwtl
hlt
jns
pop
daa
not
mov
cmp
imul
mov
push
cmp
rcr
xor
cld
int3
adc
in
loop
xchg
dec
and
jmp
and
sbb
out
mov
fdivs
push
insl
scas
fld
add
aad
loope
add
pop
adc
sbb
lret
sarl
lods
cmp
movsl
orb
mov
jnp
cmc
xor
dec
jge
pop
pop
add
popa
clc
test
jns
dec
xor
mov
jne
pop
lcall
push
xchg
inc
and
inc
ljmp
aaa
js,pt
sbb
pop
fsubrp
jmp
add
mov
mov
add
and
mov
dec
popf
filds
andl
jl
xchg
lods
movsl
dec
push
sub
push
push
adc
add
xchg
in
add
outsb
mov
inc
pop
or
push
or
loope
cmp
movl
shll
cwtl
push
dec
lea
sub
mov
pop
inc
jnp
xchg
or
fdivr
mov
add
xor
ljmp
shlb
mov
bound
mov
cmpsb
pop
pop
cwtl
add
mov
mov
imul
or
xchg
mov
mov
xor
sarl
sub
pusha
lcall
loopne
fcompl
push
aam
gs
or
popl
sbb
add
adc
cmpl
in
daa
orps
push
data16
xor
mov
push
dec
pop
add
mov
in
addr16
pop
mov
jno
lods
stc
and
add
push
mov
add
adc
ret
sahf
cmp
sbb
subb
cmp
fbld
xor
xchg
popl
push
dec
sub
testb
add
idivl
fnstsw
dec
push
or
js
ljmp
setae
aad
sub
lret
dec
jg
mov
push
jle
dec
dec
cs
sbb
push
fwait
inc
mov
rolb
lock
dec
stos
mov
xlat
push
cmp
mov
movl
add
push
cmpl
sti
fnsave
fidivrs
pop
mov
fisttpl
mov
pop
sbb
add
out
cmpsb
es
mov
clc
smsw
lea
mov
sarb
mov
into
test
pop
jae
popf
aad
push
nop
inc
add
int
outsb
fidivrs
or
mov
mov
push
and
add
mov
sub
int3
mov
adc
push
cld
out
mov
dec
fsubs
add
mov
shrb
inc
cmp
nop
in
lret
decl
jbe
xlat
loopne
js
add
test
scas
mov
sub
dec
jae
clc
cmp
jge
int
outsl
cli
les
dec
or
push
add
sbb
add
cmc
mov
lds
jp
xor
fwait
sbb
pusha
lods
sbb
call
cmc
mov
fs
push
es
add
stos
sub
leave
add
das
add
call
pop
add
adc
dec
ret
add
and
add
sti
pop
xor
mov
mov
add
out
push
das
rorl
ss
jae
sub
add
test
inc
mov
jo
xor
ret
cltd
sub
push
imul
nop
lret
add
aaa
lds
sub
dec
inc
push
mov
movsb
and
sbb
aas
pusha
pop
adc
orb
add
imul
addr16
outsl
pusha
lods
sub
into
sarb
pop
clc
dec
sub
loope
cld
test
mov
rol
gs
add
movsl
popf
push
lods
pushf
lret
add
add
rolb
fwait
lea
jb
sbb
adc
cmp
cmc
insb
iret
stos
je
pop
mov
jne
divb
mov
arpl
jge
pop
or
rorl
jg
add
pusha
rcr
push
fcomps
cmp
sbb
clc
add
mov
adc
mov
nop
sbb
mov
lret
dec
xor
cli
sbb
bound
add
add
inc
js
or
js
add
test
add
ret
mov
or
out
add
or
jns
jno
inc
or
test
fdivrs
lcall
mov
pop
aad
aam
outsb
dec
xchg
inc
adc
add
mov
cli
js
stc
sbb
mov
mov
loop
add
sti
pop
jb
mov
push
add
cltd
mov
sub
aas
add
sti
in
icebp
dec
pop
add
enter
sahf
jle
mov
add
xchg
pushf
test
xlat
repnz
xor
adc
popl
mov
sub
and
pop
lock
or
mov
jae
mov
jp
in
clc
add
stos
cld
xchg
push
lock
pop
hlt
mov
adc
fdivl
cmp
mov
jmp
cmp
pusha
cmpsl
pop
stos
das
subb
lods
data16
inc
add
orl
cmp
mov
inc
jl
xlat
xor
xorb
repz
jmp
popl
shlb
add
mov
push
and
ret
or
loope
push
cmp
idivb
adc
mov
push
roll
dec
add
sub
add
and
jle
inc
divb
add
jg
xchg
scas
pop
cmp
clc
xchg
push
mov
dec
mov
je
or
add
cs
movsl
or
scas
enter
loopne
movsb
jl
cmp
std
test
js
lods
mov
cmp
sub
mov
and
movsb
lea
add
cmp
in
roll
pushf
sbb
je
inc
push
xor
add
push
sub
push
into
inc
pop
cmp
adc
bound
je
jns
mov
fwait
xor
jp
dec
ficomps
ret
xchg
xor
mov
xor
add
lea
add
out
das
outsb
or
fildl
mov
lods
cmp
lea
mov
lock
and
add
xor
mov
addb
add
test
sbb
add
lret
add
push
and
fwait
add
out
bound
mov
stc
enter
dec
push
ds
push
push
lret
push
pop
ret
mov
fimuls
and
das
add
in
inc
mov
movups
mov
sbb
xlat
stos
mov
pop
ljmp
adcb
mov
mov
pop
jmp
mov
xchg
adc
fists
sub
scas
loop
add
add
rclb
add
out
dec
push
xchg
xor
les
rcll
inc
stos
cmpsl
add
lret
xlat
mov
jnp
and
lods
add
jns
ror
das
dec
pushf
clc
rolb
neg
cmp
pop
inc
or
ficoms
pop
mov
cmp
in
jl
cmp
and
in
xchg
or
call
fwait
sbb
jo
mov
scas
or
sahf
arpl
out
jnp
cld
push
xor
int
scas
sub
add
out
mov
jb
sbb
shll
xor
xor
cmpxchg
into
test
push
leave
mov
or
pusha
out
dec
xchg
hlt
dec
push
or
push
aaa
in
add
lea
ret
cwtl
add
iret
nop
or
outsb
lret
mov
jo
fbld
out
mov
push
mov
cli
mov
xor
mov
add
push
das
enter
mov
mov
push
adc
add
dec
jnp
pop
pop
cli
testb
inc
xchg
mov
stos
add
inc
std
loope
dec
add
pop
es
imul
jbe
je
in
pop
andb
add
fs
test
in
pop
cmp
leave
mov
add
orl
sub
outsl
pushf
es
mov
stos
xchg
adc
cmp
insl
fistpl
imul
movb
adc
push
mov
std
iret
or
xchg
or
orb
ret
add
outsb
inc
ja
negb
jle
add
fidivs
movsl
in
aad
fucom
rolb
pop
dec
dec
xchg
mov
sbb
add
mov
ficoms
lahf
and
dec
dec
dec
add
or
mov
xchg
in
sahf
add
push
cwtl
xor
std
jg
add
inc
lods
sahf
shlb
add
out
fldcw
addr16
mov
xchg
jp
jo
jl
add
scas
fimuls
pop
pop
sbb
adc
lock
nop
adc
mov
adc
cmp
fidivrs
inc
fadds
mov
push
cmc
and
lcall
outsb
or
faddl
cmpsl
mov
push
aas
xchg
movsl
andb
adc
cmpl
out
push
aas
sahf
movsb
or
lahf
adc
mov
loop
dec
fidivrl
and
jmp
push
out
pop
cmpsb
incb
dec
xchg
ja
rcll
leave
xor
popf
cmc
rolb
xor
repz
leave
add
xor
scas
je
enter
sub
mov
xchg
add
dec
repz
adc
imul
xor
or
sbb
add
dec
push
pop
add
adc
cmpsb
lret
push
add
push
es
leave
jb
adc
mov
xchg
mov
movl
add
jae
out
add
into
es
push
ds
cmp
stos
add
iret
adc
movsb
stc
out
inc
mov
popa
sbbb
add
inc
jnp
mulb
pop
cmpsb
pushf
jns
sub
fisubs
test
mov
cwtl
in
mov
jmp
xchg
lds
shl
pop
add
fwait
rcrb
sarb
jmp
cld
shrl
test
and
and
mov
cmp
lret
and
add
mov
or
mov
js
mov
and
fadd
cmc
cmp
mov
add
in
mov
sbb
ret
xchg
xlat
jo
jbe
cmp
cmp
out
call
or
subl
lret
add
inc
cmp
jl
pop
jb
lods
mov
xor
add
sub
xor
jo
ret
push
jg
pop
push
dec
adc
fldl
add
andl
adc
cli
add
cmp
inc
inc
mov
loopne
sbb
mov
xlat
lahf
outsl
int3
jo
mov
push
cmp
sbb
sarb
adc
pop
add
shr
clc
jecxz
xor
es
insl
fs
sbb
stc
inc
std
cmp
mov
pop
dec
mov
cmp
sub
dec
and
sbb
popa
inc
mov
adc
rcl
xor
add
mov
jp
add
xor
std
pop
movsb
rcl
sbb
inc
lods
ret
add
add
add
icebp
hlt
clc
shrl
jg
add
dec
pop
sti
xor
scas
lods
out
add
add
push
int3
call
push
test
add
repz
add
fimull
in
nop
pop
ret
dec
and
mov
ljmp
add
xchg
sbb
add
pop
fsubl
in
movsb
sub
addl
jbe
shlb
mov
mov
or
cli
add
dec
bound
adc
fsubrl
movsb
or
jmp
adc
add
in
icebp
pushf
shrb
inc
test
pop
xor
mov
inc
stc
imul
push
mov
cld
rcll
pop
orl
jg
push
mov
jns
push
pop
fbstp
inc
sub
lock
mov
add
push
nop
enter
pop
push
outsl
mov
fstl
sbb
add
xchg
and
jg
add
cmc
and
bound
xchg
repnz
sub
pextrw
jo
push
mulb
rclb
in
add
aam
inc
lea
iret
mov
mov
xchg
mov
sub
insb
mov
hlt
pop
add
add
incl
lock
rclb
mov
fucomip
push
jmp
adc
repz
mov
add
xchg
sub
pop
mov
in
shrl
dec
jns
sarl
xor
add
cmp
add
xor
popf
ljmp
dec
loopne
add
sbb
cwtl
adc
dec
mov
jl
ljmp
add
adc
sub
inc
push
jge
aam
jbe
fdivs
xchg
dec
add
jle
mov
shld
aam
add
push
dec
clc
pop
test
add
fldl
in
lcall
dec
ret
inc
jo
xchg
mov
cmp
push
add
xor
add
lock
ja
mov
sti
sub
add
push
adc
es
jmp
add
rorl
mov
imul
sub
or
hlt
pop
das
push
sub
lahf
sub
fwait
icebp
pop
and
lock
pop
orb
add
hlt
mov
dec
pop
imul
push
sbb
jecxz
push
loop
jns
add
jmp
inc
int3
ror
jecxz
andb
and
inc
sahf
cmp
lahf
add
cmp
xor
xchg
out
sbb
inc
sub
push
ljmp
add
mov
add
xor
push
push
jge
popf
rolb
sbb
add
test
lret
pusha
jl
xor
inc
or
cmc
cmpsb
xchg
sbbb
adc
or
aas
pushf
sbb
add
jp
movsb
add
out
cmp
es
cmp
testl
cmp
sahf
dec
add
lods
sbb
add
aam
add
lock
fisubrl
jno
inc
inc
inc
xchg
fstps
leave
int3
and
jnp
cmp
out
ror
stc
in
push
sub
mov
aas
xor
rolb
orl
mov
inc
aam
and
jge
lods
add
jbe
test
stos
pop
jns
pop
xor
pop
xor
cmp
sub
lcall
push
stc
mov
adc
add
leave
fiaddl
mov
nop
adc
mov
or
aas
sbbb
divl
mov
add
add
add
in
push
loopne
jnp
add
add
in
loop
popf
sub
adcb
pop
xor
inc
pop
add
push
and
pop
jo
int
cmp
add
rol
movsl
cmp
das
add
add
sbb
aas
xchg
ficoms
add
mov
add
push
bnd
out
jl
out
stc
add
stos
jno
add
nop
push
test
lods
cmpl
cmp
add
or
sub
cmp
add
adc
pushl
notb
sub
pop
mov
sub
jnp
lret
push
xchg
outsl
loope
mov
cli
add
imul
mov
fadd
loop
jae
cmp
xchg
imul
mov
std
stos
and
cmpsb
sbb
and
push
test
cmp
push
pusha
pushl
adc
xor
mov
or
fs
das
loopne
jno
sbb
aaa
push
aad
out
std
icebp
add
sti
pop
add
mov
loopne
cltd
call
lret
push
xchg
gs
test
mov
sbb
stos
call
arpl
dec
call
add
and
push
scas
dec
dec
mov
enter
add
mov
shll
pop
adc
add
lcall
cmpl
mov
jo
cmp
jne
mov
mov
js
xor
loopne
jns
cmc
push
rorl
mov
lea
mov
les
push
pop
mov
sub
or
push
jle
rolb
lods
int3
jbe
inc
add
hlt
dec
jb
and
xor
inc
xor
orb
add
add
push
fadds
jae
add
sbb
add
cmp
sbb
aad
add
pop
out
push
mov
dec
xor
add
addr16
pusha
xorb
add
stos
mov
add
call
add
inc
add
xchg
pop
shll
fildl
imul
cwtl
or
and
ret
rclb
jp
rclb
loop
fisttpll
scas
pusha
imul
es
cmp
add
inc
jbe
popa
mov
cmp
add
scas
repnz
sbb
and
int
sub
and
adc
in
and
les
leave
jle
cmc
inc
jg
add
cltd
lods
inc
sub
and
data16
or
and
pop
es
pop
sahf
out
fiadds
inc
add
mov
mov
and
push
popl
popf
aam
js
gs
testb
scas
mov
and
sub
aaa
jmp
fsubs
jns
add
mov
in
arpl
cmc
data16
repz
and
cli
popf
ud1
loopne
shlb
test
jg
jo
mull
sbb
and
mov
push
inc
imul
jo
rcll
mov
loopne
pop
pop
pushf
and
test
dec
dec
push
xor
ja
ds
lcall
int3
call
push
push
mov
push
lock
pop
pushf
in
rcll
popa
mov
jns
xchg
inc
out
jbe
sub
push
pop
jg
cmp
xor
add
js
sub
xchg
sub
jmp
pop
mov
add
and
adc
movsb
lock
sub
adc
add
add
sbb
cmp
dec
in
mov
cmpsl
test
jnp
mov
pavgw
ret
loope
scas
subl
or
push
popl
scas
cmc
aad
stos
add
jl
sbb
loop
push
enter
add
sub
xor
mov
dec
and
subb
sbb
adc
js
cmp
stos
add
sbb
add
sub
bound
jnp
inc
dec
dec
add
js
mov
fisttps
xor
mov
or
sub
int
xor
adc
ljmp
push
sub
add
push
leave
jns
inc
movsb
inc
push
jb
mov
repnz
xchg
lret
rolb
rcll
insb
in
mov
cmc
ret
stos
mov
iret
dec
xchg
sub
xor
jg
sub
xchg
adc
mov
inc
movsb
inc
mov
lret
in
add
dec
gs
add
sbb
add
dec
aas
or
clc
push
mov
mov
pusha
movsb
cs
imul
mov
and
xchg
outsb
or
xor
dec
loopne
sbb
add
jb
hlt
in
xor
das
and
adc
inc
add
incl
push
rcll
jo
lret
xor
pop
adc
subb
add
pop
add
xchg
sbb
lcall
loop
sub
sbb
xor
cvtps2pi
adcb
mov
push
push
cltd
test
das
aam
sub
pop
dec
and
and
sbb
cmpsb
inc
add
ds
repz
push
jmp
push
add
mov
push
dec
inc
push
nop
push
and
add
or
in
dec
xorb
and
rolb
push
jne
mov
subl
mov
icebp
xchg
in
dec
jle
xchg
out
out
pop
adc
add
and
popf
and
mov
push
pushf
add
pop
jnp
push
imul
in
mov
pusha
fcompl
sbb
std
jo
das
loopne
mov
add
stos
push
repz
imul
xor
jne
sbb
insb
pop
nop
pushf
or
mov
jmp
rolb
mov
int
notl
jb
sbb
and
xor
lods
loopne
mov
pop
pop
xchg
ror
xorb
xor
fs
cli
int3
push
addr16
mov
inc
neg
out
jge
adc
sarb
push
sub
test
scas
cvttps2pi
sub
cmp
mov
or
add
push
xchg
cmp
mov
adc
out
movsl
nop
jnp
int3
enter
out
addl
fcompl
or
adc
jb
dec
mov
add
or
inc
out
lea
jns
cmpsl
and
add
and
jle
fisttpl
adc
mov
and
pop
and
dec
orb
xchg
and
sti
popa
cmp
das
add
push
aaa
and
ds
in
xor
addb
lock
push
cld
clc
mov
shll
or
add
cltd
sbb
or
jge
fildl
sbbl
pop
jnp
add
dec
dec
sub
add
fwait
mov
jno
push
cld
loope
addr16
add
add
inc
std
sub
adc
in
hlt
and
jg
pop
cltd
adc
jns
xchg
and
into
or
in
push
subb
mov
out
jno
add
mov
out
outsb
and
shlb
pop
push
lahf
bound
cltd
les
outsb
cmp
pop
adc
xor
enter
or
pop
add
lahf
shrb
test
das
arpl
cmpsb
mov
push
xchg
loope
sub
adc
and
push
add
sarl
vcmpsd
shll
and
cmpsl
sub
add
xor
sbb
les
fisubl
jne
adc
and
les
ljmp
pop
jp
jae
fisttpll
xor
add
pusha
mov
xor
add
pop
dec
and
cmp
shlb
and
add
sub
dec
mov
add
testl
cmc
stos
and
add
mov
cld
add
stos
hlt
pop
fmul
cmp
pop
outsb
inc
outsl
cmovae
fs
mov
add
pop
andl
fstpt
pushf
movsl
jnp
push
xlat
fucomp
jp
add
mov
and
movsb
add
sti
aaa
inc
add
pop
cwtl
pop
push
jno
outsb
push
pop
add
adcb
inc
lahf
andb
add
js
clc
in
shll
sarb
neg
jne
pop
adc
cmp
mov
cltd
xor
in
ret
add
data16
adc
pop
insb
cltd
jb
lcall
int3
movsl
inc
xor
adc
cmpsl
mov
mov
insb
cmp
or
pop
dec
add
push
mov
rolb
pop
fisttpll
filds
imul
pop
stc
xchg
add
mov
add
addr16
addr16
add
cmpsb
lcall
test
fldl
js
add
or
sub
lds
bswap
dec
daa
cltd
sbb
pop
pop
pop
and
dec
or
add
mov
dec
inc
shl
roll
cli
ja
sbb
inc
and
cltd
cmp
xchg
adc
fmuls
js
push
loopne
add
push
movsb
pop
aad
test
add
shll
dec
mov
xor
sub
jne
add
jl
pushf
pop
sarl
scas
fildll
addb
push
fadds
mov
repz
jge
add
jl
stc
or
add
test
rcl
add
mov
adc
mov
sti
pop
les
ror
mov
add
sti
stos
xchg
popa
test
pop
loope
xchg
and
dec
cltd
xchg
pop
adc
lock
push
cli
push
iret
lock
push
scas
jp
ret
fs
les
mov
mov
sbb
std
outsb
xor
bound
pusha
push
xchg
outsl
lret
sbb
cmp
xor
xchg
pusha
mov
jo
sub
add
aam
rcrb
sbb
inc
test
orb
push
cltd
aaa
sbb
or
add
add
inc
outsl
stos
adc
push
repz
mov
out
leave
rolb
ds
pop
shll
dec
lds
popa
push
cmc
bound
jg
out
push
cmp
jb
xor
lcall
jl
xor
mov
leave
add
xor
iret
sub
addr16
sub
add
jg
sahf
sub
movups
cmpb
fwait
mulb
ror
add
jg
cmp
mov
push
sub
mov
add
repnz
out
lds
xor
add
and
pop
inc
pop
adc
mov
sbb
add
imul
mov
pop
and
jbe
sbb
and
adc
jmp
sub
pop
sub
and
add
mov
pop
clc
pop
add
iret
adc
adc
adc
xchg
test
lds
int3
add
int
loop
addl
and
loope
xchg
movsb
adcb
inc
adc
aad
int3
pop
xchg
mov
je
fnstcw
or
mov
fstpl
adc
sub
add
fcmovbe
add
and
fstpt
cmc
test
sbbl
xor
or
jb
xor
sbb
jb
pop
xor
mov
out
js
loope
sbb
push
popf
and
shlb
add
repz
pop
push
push
and
push
aam
pop
jmp
adc
cld
fwait
dec
decb
ficomps
sbb
idiv
cmp
pusha
cmp
sbb
subb
add
ds
inc
aaa
jno
pushf
jl
std
cld
push
and
rclb
sti
add
and
fidivrl
xor
test
add
mov
xlat
in
inc
inc
pop
add
mov
nop
jo
cmp
cmp
cmpsb
into
fwait
adc
xchg
pop
pushf
or
inc
int3
ja
add
gs
push
jecxz
into
and
filds
pop
aas
pop
jbe
inc
adc
add
xchg
mov
sbb
test
mov
jb
dec
inc
mov
push
cwtl
dec
xchg
mov
inc
sbb
out
lods
inc
sub
cmp
or
gs
xor
jno
jae
out
add
outsl
icebp
push
in
loop
rorb
inc
hlt
mov
xchg
outsl
add
push
add
inc
into
or
xchg
mov
and
hlt
pop
rcl
test
lret
or
test
push
adc
jb
add
movsb
test
cmc
aas
cmp
sahf
ret
pop
sub
add
icebp
js
ret
xchg
push
fildl
xor
or
sbbb
pusha
lahf
jecxz
and
lret
inc
jle
push
rclb
data16
in
aad
pop
sbb
push
add
scas
xchg
sub
loopne
or
adcb
sahf
les
std
pop
cmp
jo
dec
sti
sbb
sahf
fistpll
cld
jb
int3
add
push
repnz
mov
lret
ficompl
jmp
in
arpl
and
adcb
pusha
xchg
mov
je
xor
scas
cli
bound
loop
push
pop
movsb
ja
and
aam
cmp
cld
inc
adc
pop
cltd
lock
stc
adc
jo
pop
xor
mov
xor
jbe
sbb
add
jb
add
popa
andb
push
push
add
rorl
rclb
inc
mov
in
pushf
out
or
xor
testb
inc
mov
add
add
add
xor
mov
mov
pop
inc
sub
xor
push
out
add
outsb
mov
jecxz
sbb
pop
sbb
addr16
jle
add
pop
cwtl
cmp
xor
lods
add
dec
sbb
inc
sbb
and
aas
add
popa
sub
push
loope
jo
mov
and
dec
lahf
outsl
push
xlat
cmp
loopne
adc
push
sahf
sub
dec
mov
lods
sub
lcall
lea
popa
add
imulb
pusha
dec
out
jg
cmp
adc
arpl
dec
sub
pop
int3
lods
rol
movsb
push
mov
add
or
hlt
mov
pop
out
clc
ret
and
cmc
add
scas
and
sbb
mov
cmc
sti
cmp
mov
jge
nop
sbb
cmp
adc
fwait
or
cmc
xor
adc
repz
rolb
inc
stc
jbe
add
mov
in
add
pop
ret
push
es
imul
push
pop
xlat
hlt
outsl
cmp
push
xor
xor
scas
insl
inc
mov
aas
mov
les
popa
test
lods
xchg
mov
jne
xchg
fildll
adc
sbbb
int3
mov
add
cmp
xor
nop
call
jecxz
jne
or
shlb
mov
rolb
push
dec
leave
mov
jno
and
ud0
push
inc
mov
xchg
xchg
pop
pop
xlat
outsl
cwtl
xchg
shll
sbb
sub
mov
out
sub
aam
fsubrs
mov
adc
push
sub
jae
push
cmp
test
mov
add
fwait
lcall
in
or
cmc
xor
and
dec
add
add
mov
das
out
add
ljmp
insb
pop
add
fs
cmpsb
les
jl
lds
sahf
fstp
mov
mov
insb
in
stos
jb
cmpsb
out
aaa
rorl
popa
adcl
or
or
sahf
or
outsb
sub
movsb
lahf
or
in
or
test
mov
mov
add
jl
add
push
fnstcw
fmuls
lods
xor
popf
divb
add
into
sti
xchg
xor
mov
fs
mov
sub
filds
pop
addl
adc
jb
subl
add
xchg
sbb
add
loope
out
pop
mov
inc
jns
out
sti
cld
inc
pop
in
jmp
add
mov
add
inc
imul
mov
add
xchg
movsl
idivl
aaa
sub
mov
insb
inc
add
jg
roll
cmpsl
pop
imull
dec
inc
pop
xor
sarb
call
inc
sub
sub
mov
les
pusha
cli
lea
xor
js
lret
inc
cmp
nop
mov
add
popf
outsb
ds
pop
inc
mulb
pop
or
mov
add
xchg
jge
fisttps
or
sbb
sub
xchg
mov
add
adc
xchg
adc
test
push
rclb
xor
test
sarb
add
mov
mov
jnp
and
cs
add
cli
cmp
fs
push
ret
imul
out
scas
push
mov
add
xor
leave
outsl
ds
fimuls
lods
daa
addr16
out
pop
mov
jns
push
jb
add
xor
lcall
mov
cld
push
sub
cmp
push
call
sahf
cltd
mov
ficoml
push
jb
cmp
faddl
jmp
out
pop
in
add
imul
mov
mov
cmpsl
popf
jl
push
sbb
jae
add
in
nop
inc
pop
int3
xor
loope
inc
inc
pop
ret
mov
loop
or
out
dec
sbb
movsl
sbb
inc
into
jl,pt
or
jne
fnstsw
add
jp
dec
movsb
push
pop
add
arpl
dec
sub
test
push
xchg
push
std
outsb
push
sti
sarb
mov
aaa
and
sub
lcall
dec
fisubrl
icebp
bt
mov
push
das
nop
pop
shrb
add
decb
add
mov
add
push
dec
sbb
add
adc
mov
add
cmpl
inc
idivb
or
ja
add
jbe,pn
ljmp
sub
jo
in
repnz
test
add
aam
shr
data16
pop
lea
idivb
je
mov
int
add
fstpt
insl
sbb
add
data16
int
imul
add
mov
mov
scas
sbb
lods
std
cld
pop
push
js
add
sti
mov
sub
lret
mov
stos
popf
and
jne
cmpsb
in
nop
out
jnp
stos
add
adc
popa
pop
rcl
ss
shrb
aas
dec
jge,pn
pusha
data16
ret
std
cmp
add
in
xchg
int3
outsl
xor
cld
out
adc
jg
fdivrs
mov
add
jl
sub
fwait
subb
insl
push
rcrb
cmpsb
inc
mov
shrb
fimull
jecxz
es
add
add
ds
cmp
cli
inc
add
cmovne
and
ss
cwtl
add
icebp
pop
pop
aas
rcr
push
xor
pop
inc
mov
subl
jle,pn
popf
add
pop
xor
cmp
mov
jae
cli
xlat
and
push
jo
jecxz
adc
insb
jno
sub
xchg
push
push
std
sti
test
inc
add
cmp
rol
pushf
data16
cwtl
mov
add
js
fsubp
fadd
adc
in
testl
aam
adc
cmpsb
daa
andl
lea
pop
jge
add
or
test
into
mov
dec
xchg
mov
sub
pcmpgtd
pop
push
inc
sbb
repnz
nop
inc
ffree
cmpl
add
jnp
or
inc
jns
add
add
or
push
mov
cmp
cmp
or
leave
add
cmp
rdtsc
shlb
push
add
insb
mov
rcrl
xchg
add
je
outsl
add
les
or
fildll
jle
jecxz
cwtl
mov
cltd
push
fldenv
sbb
and
mov
in
xor
xor
push
cmp
jb
add
cld
add
pop
inc
das
out
lods
cmp
cwtl
xchg
push
add
repnz
adc
pop
out
xor
inc
cwtl
cltd
faddl
rcrl
stos
mov
push
rclb
add
ss
ja
mov
addb
jb
lahf
mov
pop
add
jmp
clc
sbb
mov
and
and
test
jl
or
lahf
sbb
push
pushf
fsubl
add
jle
cltd
push
aad
pop
aas
inc
loopne
add
movsb
insl
mov
sbb
stc
jno
jae
add
int3
pusha
or
push
scas
lods
cmp
sub
jl
lret
mov
cld
cs
sti
in
push
inc
cmp
and
lret
xor
add
xor
ret
popa
or
incb
mov
xchg
fs
add
push
xor
add
test
adc
mov
call
out
adc
cmc
and
out
dec
loopne
add
loop
dec
arpl
pop
xor
dec
repnz
fdivl
add
jmp
sbb
leave
sahf
mov
cmp
sbb
test
jle
jno
sbb
shlb
sbb
dec
pop
cmp
xchg
scas
ret
nop
stc
loope
mov
add
pop
xlat
loop
stos
mov
push
nop
push
stos
add
adc
and
mov
or
scas
out
jge
jns
mov
dec
mov
mov
ds
iret
dec
andl
pop
xchg
test
dec
lock
lods
jb
daa
pop
xor
dec
or
cmp
pop
or
in
incb
and
aaa
dec
nop
cmp
add
mov
add
xor
andl
fists
adc
or
call
mov
mov
sub
nop
add
pop
in
and
and
add
adc
pusha
xlat
mov
fisttps
add
sub
add
jae
jo
inc
adc
out
cmp
jo
add
push
sahf
pop
mov
mov
or
or
jle
mov
inc
test
sbb
mov
gs
mov
mov
add
pop
pop
mov
add
lds
xchg
add
adc
faddl
xchg
in
inc
jl,pn
pop
and
fnsave
shl
jge
push
jnp
push
out
inc
push
jb
fucomp
out
add
pop
jp
cmp
adc
cltd
push
int3
sbbl
stc
fnstcw
scas
popf
add
lock
add
mov
mov
movzwl
nop
xor
nop
cmp
add
cli
setl
arpl
add
dec
pop
jnp
cmp
in
mov
mov
lock
in
pop
loopne
add
sub
inc
and
neg
orl
adc
or
push
cmc
cwtl
inc
rclb
adc
das
add
ds
movsb
add
enter
add
lea
iret
xchg
mov
cmp
add
jo
pop
mov
add
ret
in
fs
xor
adc
mov
es
xchg
cld
cltd
mov
cli
adc
imul
jmp
lock
pop
add
rorb
dec
pop
adc
movsb
jnp
cld
or
lock
add
imul
dec
jg
add
and
sahf
fucomi
sub
jno
jle
add
pushf
sbb
pusha
mov
icebp
fsubs
or
pusha
aaa
jl
lods
adc
out
jb
insb
add
leave
cmpsl
add
or
lahf
jnp
mov
nop
sub
pop
mov
shrb
pop
adc
fbld
rcl
xchg
addl
xor
ficomps
out
and
jmp
addb
lods
cmp
mov
stc
mov
call
dec
ret
inc
aas
rorb
cli
das
hlt
iret
dec
mov
pop
repz
add
je
push
sub
or
bound
sarl
add
nop
sub
add
adc
out
push
ljmp
jnp
cltd
pop
mov
push
loopne
push
push
mov
outsl
cmp
shll
lret
enter
in
push
int3
test
add
push
jnp
push
inc
pushf
fwait
mov
push
add
xchg
sbb
add
push
sbb
add
stos
and
pop
mov
and
std
xchg
js
fmuls
add
mov
orl
mov
and
sbb
mov
arpl
loopne
incb
loop
nop
mov
div
jl
mov
adc
in
dec
sub
mov
cmp
shll
sbb
add
and
add
ds
add
std
ljmp
shrl
add
or
xor
fidivs
mov
sbb
push
hlt
addb
out
movsb
mov
sub
test
in
das
cmp
add
cmc
cwtl
cltd
fwait
adc
inc
aaa
lock
roll
aad
pop
mov
mov
add
pop
inc
adc
or
test
sub
icebp
pusha
loope
and
add
hlt
jb
dec
aam
cld
call
loopne
fadds
mov
mov
fcoml
fsubp
add
adc
push
or
add
inc
and
mov
sub
je
xchg
enter
jb
inc
or
dec
rol
rcrb
pop
xor
push
sbb
imul
jns
xchg
std
adc
ret
shll
popa
mov
pop
mov
pop
xor
inc
add
cmp
cltd
sub
loope
sub
add
add
subb
mov
stos
push
inc
xor
lock
outsl
roll
add
mov
sub
sub
add
jno
jmp
fsts
add
dec
test
in
shrl
subb
xor
fidivrs
out
loope
stos
in
inc
add
cmp
cmp
mov
xor
xor
movsl
sub
xor
xchg
pop
jecxz
cmp
into
loopne
xchg
ljmp
push
aas
sahf
or
testl
push
or
dec
add
ja
loop
pushf
or
or
xor
xor
add
jns
or
out
or
cli
pop
fstpt
xchg
add
movl
mov
sbb
sahf
lods
add
push
in
add
nop
pop
idiv
mov
ret
adc
aam
fmuls
scas
insl
add
cwtl
fdivl
sbb
jb
add
sub
imul
xor
movsb
sub
dec
popa
les
and
cmc
push
aas
ret
fbstp
or
cmp
dec
ds
clc
cli
pop
pop
lret
add
pop
adc
sub
aaa
addb
add
xor
rorl
push
sahf
ja
cmp
adc
data16
shrl
jmp
mov
mov
push
inc
sub
sub
add
icebp
out
add
popf
fsubs
jp
or
push
jne
cmp
push
add
jle
add
xor
bnd
push
adc
out
and
repz
mov
dec
fsubr
mov
dec
vpshufhw
add
mov
dec
add
out
xchg
lods
je
enter
and
je
push
push
dec
sbb
push
sbb
xor
adc
adc
cmpb
arpl
add
cmp
ljmp
int
adc
pusha
add
xor
clc
sub
int
les
cmp
addr16
mov
push
and
jns
daa
lds
sub
add
ret
xorb
sub
jmp
je
mov
pop
or
add
aaa
cld
out
je
stc
push
add
mov
add
inc
lea
add
sarb
mov
add
xchg
inc
clc
push
int3
add
ljmp
lahf
gs
outsl
add
popf
pushf
xor
inc
cmp
or
aaa
xchg
adc
insl
jne
pop
dec
sbbb
mov
mov
insb
dec
cmp
into
cmpb
mov
xchg
cld
mov
repnz
xchg
in
in
add
loope
cs
pop
add
push
ja
negb
adc
cmp
loopne
add
pop
or
jl
fs
dec
scas
add
data16
add
fsubrp
dec
jge
lods
add
push
xlat
jp
mov
sti
hlt
push
inc
add
std
mov
xchg
and
push
fidivl
mov
pusha
push
sub
pop
or
pop
xlat
sub
add
std
lahf
outsl
daa
push
addr16
pop
divb
add
pop
imul
mov
inc
adc
xchg
xor
add
xor
add
aaa
jae
sbb
add
int3
mov
push
cmc
jne
shlb
dec
lret
test
cmp
jns
int3
cmp
out
daa
popa
testb
add
ljmp
xorb
pusha
in
sbb
fisttpl
push
dec
stos
cwtl
inc
mov
push
cltd
jmp
negb
jg
cmp
dec
adc
add
or
push
dec
cmpb
scas
add
pop
add
inc
test
add
and
jecxz
push
out
lea
pop
xchg
xor
xor
test
cs
out
inc
stos
and
pop
xor
in
js
loopne
jmp
mov
push
pop
add
push
je
fidivl
and
pop
mov
jo
cmpb
add
pop
fsubp
pusha
push
lods
in
add
stos
lods
nop
cwtl
add
dec
fnstenv
dec
sahf
mov
mov
add
imul
pusha
add
repnz
js
or
push
ss
add
or
lcall
arpl
rorb
mov
enter
sbb
shlb
xchg
je
roll
mov
test
adc
and
daa
mov
jmp
xor
jbe
sbb
lret
mov
add
cmpsl
add
push
inc
or
roll
mov
fnstcw
addr16
or
mov
inc
cmp
inc
cmp
arpl
add
mov
jmp
add
test
xor
sbb
pop
gs
fistl
in
out
mov
lret
outsb
and
cld
xchg
jns
mov
les
adc
cli
pop
xor
inc
add
pextrw
xor
jnp
lock
mov
addb
jl
xor
add
adc
lods
push
cmp
int
les
inc
or
out
enter
pop
jmp
or
xchg
shll
movsb
aas
dec
add
movsb
into
or
cmpsb
dec
sbb
pop
inc
mov
arpl
adc
or
pop
mov
movsl
shl
addb
mov
sub
leave
pop
add
xor
add
xor
les
jae
jle
sti
ja
or
sbb
stc
pusha
sub
stos
adc
inc
xor
iret
push
test
pop
dec
pop
mov
nop
cmc
mov
outsb
imul
push
cmp
shrl
dec
cld
sub
out
cmpsb
sbb
sahf
fisttps
mov
xchg
repz
idivl
and
or
mov
mov
jnp
push
clc
movsb
sbb
jmp
inc
fistpl
add
pop
sbb
insb
or
add
pop
mov
ss
add
mov
sub
add
aad
stc
xor
dec
fcoms
and
and
jb
lds
mov
xor
push
adc
jo
jnp
jo
or
push
pop
jne
shlb
clc
and
add
jp
leave
pop
and
ret
cs
in
and
add
je
sub
bound
dec
sub
sub
lods
jb
popf
push
jp
add
mov
or
bound
cmpsl
sbb
fidivrl
add
pop
and
mov
add
lods
or
push
dec
inc
mov
add
imul
push
adc
mov
pop
pop
sub
testb
cmp
add
outsl
inc
add
hlt
fwait
jbe
call
push
dec
es
arpl
xchg
in
lock
hlt
add
lods
or
add
fsubrl
pop
xchg
add
lods
or
out
bound
or
jl
cmp
rclb
cmp
and
cwtl
popl
fwait
mov
scas
inc
cld
dec
push
pop
orb
cmp
stc
push
jecxz
scas
loopne
rolb
push
outsb
xchg
or
test
jp
xor
int
enter
fdivrs
mov
cs
cli
push
bound
ret
cmp
lock
roll
mov
mov
aam
jne
aaa
sub
daa
stos
lret
add
sahf
bound
xchg
movsb
add
rolb
hlt
add
lods
adc
sti
push
cs
rolb
mov
or
mov
sub
pop
cmp
cs
push
mov
mov
ljmp
std
mov
mov
movsl
xchg
insb
xchg
cmp
jo
daa
in
cli
sub
pusha
adc
inc
dec
stc
jl
add
mov
or
mov
inc
xor
repnz
or
pop
rcr
out
outsb
or
jp
jo
cs
push
ret
add
xor
in
add
out
insb
pop
lock
pop
cli
xor
xchg
push
sub
push
or
lldt
out
test
add
xlat
fistpll
jno
mov
pusha
jl
add
ds
jp
xchg
mov
test
add
js
push
cmp
lcall
les
add
lret
fstpl
rorl
hlt
test
xchg
js
and
cltd
dec
fdivr
sbb
out
push
fdivp
test
add
in
rorl
sub
sbb
fmul
ljmp
pop
sbb
je
jle
clc
lock
sbbb
add
jo
je
aad
add
cmp
mov
mov
push
adc
cmp
mov
test
popa
in
and
ja
clc
in
mulb
mov
jns
adc
popa
sub
sub
sub
pop
mov
or
mov
sti
push
mov
js
jb
mov
bound
bnd
inc
push
xor
jecxz
in
scas
and
arpl
fildll
mov
add
mov
cs
fadds
cld
mov
repnz
and
mov
pop
movsl
incb
add
jo
mov
pop
mov
mov
xor
jg
pop
and
jbe
lcall
adcb
cld
test
adc
or
sete
mov
inc
xor
pop
cwtl
in
sbb
sbbb
leave
add
sbb
dec
jmp
lock
test
testl
fisubl
movsl
arpl
sahf
out
pop
cmp
cmpsl
in
add
pop
rorl
add
or
roll
add
ds
xlat
pop
bound
sbb
adc
cmp
xor
add
or
fadds
sbb
fucompp
clc
mov
sti
repz
iret
aad
add
push
mov
adc
rolb
and
cmp
in
xchg
arpl
stos
adc
stc
test
mov
dec
pop
jl
dec
and
loopne
jmp
test
xchg
ljmp
jae
pop
cs
adc
xchg
and
mov
xlat
add
aam
mov
into
add
in
lds
add
sti
or
scas
ret
sbb
xor
mov
bound
and
popf
test
jno
add
hlt
ds
mov
test
int3
scas
mov
lds
inc
lods
xchg
push
hlt
ds
mov
adc
lock
addb
pop
and
jmp
scas
cmpsb
in
sbbb
dec
pop
clc
mov
add
jmp
movl
xorb
or
out
mov
xlat
add
fdivr
sub
sbb
imul
fwait
xchg
aaa
pop
push
add
or
cmpsb
fbstp
je
fsts
push
jg
repnz
ja
fsubs
pop
mov
add
lcall
mov
in
mov
add
out
int3
lods
pop
dec
stos
push
sahf
testb
int
jae
sbb
push
lret
jb
gs
sbb
push
add
xor
lods
sahf
mov
nop
push
inc
std
dec
lret
and
loopne
movb
cmp
rcl
lahf
add
pop
ds
or
ljmp
enter
hlt
add
stc
call
inc
incl
jne
lods
xlat
mov
xor
mov
sarb
subl
loopne
je
loopne
add
cld
pop
jp
mov
pop
lret
push
xchg
js
mov
jnp
mov
adc
repnz
cmp
xchg
and
nop
cmpl
xor
ljmp
xchg
aas
inc
lcall
sbb
aad
int3
dec
add
clc
mov
add
inc
and
jns
add
int3
test
incb
nopl
inc
subb
lds
fidivl
mov
andl
mov
cmp
mov
mov
mov
js
addl
loopne
or
bound
add
xchg
add
jle
lock
inc
outsl
outsb
sbb
mov
adc
dec
xchg
inc
addb
test
inc
pop
push
push
scas
cmp
inc
in
add
xor
cs
adc
mov
add
push
push
cmp
pop
rorl
push
femms
xor
mov
and
shrb
ds
cmpsl
orb
testb
dec
jnp
sbbb
sub
adc
xlat
pushf
orb
cmc
pop
out
or
addb
lret
adc
test
aam
fs
js
add
add
shrl
movsb
mov
push
dec
ret
xchg
shll
js
cmpl
icebp
inc
loop
subb
mov
gs
cwtl
cwtl
add
negl
or
fmuls
add
fs
sub
inc
popf
icebp
pop
push
movsb
mov
fisttps
mov
push
shlb
push
mov
mov
jecxz
rorb
or
pop
fucomip
xor
inc
push
mov
outsl
aas
rcl
sub
in
outsl
add
cmp
popa
ja
add
addb
loope,pn
cmp
add
adc
dec
mov
fisttps
push
mov
dec
add
jl
xchg
xchg
xchg
xor
pushf
out
push
jb
cltd
aad
in
push
lret
das
add
lods
or
push
adc
mov
xchg
call
dec
xor
add
inc
and
xchg
incb
loope
repnz
call
loopne
inc
and
lret
punpckldq
cmp
arpl
xchg
outsl
mov
xchg
sti
out
sbb
xchg
add
or
aam
subb
mov
mov
mov
ja
daa
pop
loopne
insl
push
pop
jnp
in
add
inc
jmp
int3
xor
in
cmpsl
mov
mov
inc
push
stc
jb
xchg
sarl
dec
cmpsb
andb
add
inc
pop
aas
daa
pop
jecxz
add
pop
jle
mov
inc
and
sbb
ret
mov
xor
add
lock
jg
or
and
fistl
add
testb
gs
inc
xchg
pusha
ret
add
fs
and
inc
out
mov
nop
sti
std
pop
inc
enter
test
hlt
imul
mov
repz
cmp
inc
push
imul
fwait
out
int
xor
and
dec
addl
fisubrs
loop
add
shlb
jle
add
dec
faddl
stc
push
push
push
jae
fldl
cmp
xchg
cmc
jmp
in
pop
or
pop
jo
add
mov
cmp
popa
add
nop
dec
xchg
and
in
inc
pop
add
cmp
cmpsb
outsb
adc
sbb
insl
in
inc
push
pop
mov
push
mov
int3
push
clc
insb
add
xlat
ret
mov
add
mov
add
adcb
add
stos
hlt
mov
fstpl
mov
dec
add
jb
jne
pop
push
pusha
push
sbb
xor
fwait
push
fists
inc
mov
or
or
inc
adcb
popf
daa
fdivs
ret
add
mov
in
stc
or
in
sub
aam
ljmp
push
add
add
cwtl
pop
testl
mov
inc
or
out
aaa
jae
mov
es
add
pop
rcr
dec
ss
add
adc
mov
jo
adc
shlb
ret
push
add
add
cmc
lret
inc
mov
jae
loopne
filds
push
or
loope
test
or
scas
loopne
mov
mov
test
inc
fidivs
in
loope
cmp
addl
xor
mov
mov
add
divl
mov
insb
cmp
inc
insb
jo
add
pop
jp
lds
movl
adc
cmp
add
shl
cmp
push
insb
mov
mov
ss
std
add
lods
pop
xor
lret
adc
scas
or
mov
mov
pop
add
mov
nop
in
add
adc
add
notl
lret
or
addr16
test
and
pusha
push
mov
add
xchg
jge
ds
adc
ljmp
les
fwait
jae
xchg
add
loopne
in
fld
mov
add
cli
ja
and
pop
negl
in
add
movsl
add
xchg
test
adc
lret
lahf
mov
mov
iret
js
adc
adc
push
lahf
xor
jbe
dec
mov
inc
add
xchg
shll
push
or
sub
and
add
or
dec
cmpsl
popf
sbb
cmpsb
and
inc
inc
dec
jns
repnz
xor
notb
push
mov
sub
test
lret
movsl
ficoml
pop
add
cmp
push
insl
leave
imul
add
pop
movsl
push
fwait
sub
repnz
ret
pop
rcrb
add
faddl
aam
mov
add
xbegin
add
adc
add
roll
aam
sbb
dec
sub
add
cmc
mov
add
mov
jnp
dec
pop
sbb
mov
push
xsave
ja
cmp
add
push
ljmp
movsl
enter
adc
xchg
daa
add
push
xor
or
adc
testb
call
iret
int
jo
xchg
add
int3
std
out
jecxz
pop
and
fcmovnb
in
dec
jns
imul
push
sahf
pusha
fsubrl
lahf
rorb
aaa
xchg
sub
push
popa
and
fimull
mov
int
jae
data16
add
lret
insl
fiadds
les
cltd
or
mov
std
lahf
out
add
jo
mov
mov
mov
push
incl
inc
inc
jnp
sahf
mov
mov
push
add
sub
add
pop
pop
push
ret
cli
sbb
and
out
mulb
sbb
mov
roll
add
xchg
movsb
ljmp
lcall
cmp
cmp
jb,pn
add
sub
pop
push
jecxz
xchg
sbb
jo
scas
pop
push
and
xchg
or
add
movhlps
or
cmp
les
test
scas
and
pop
movsl
loopne
out
jo
cmpsl
cmp
nop
jo
aad
xchg
popa
adc
in
dec
lock
or
sbbb
rolb
lcall
in
mov
mov
mov
add
fadd
stc
push
mov
movsl
push
cmp
mov
and
and
nop
fisubs
mov
inc
stos
mov
int
fdivl
out
fsubr
inc
xor
in
rorl
add
leave
lods
enter
or
add
inc
stc
popa
mov
sti
test
aam
cmp
mov
stos
inc
scas
pop
add
lahf
fsubs
into
mov
div
xchg
or
push
enter
pusha
add
cmc
xchg
mov
mov
mov
aad
jle
mov
push
sbb
test
in
ror
shlb
sbb
pop
das
add
lds
les
jnp
xchg
sub
mov
inc
push
add
pushf
cmp
add
les
rclb
addl
fimull
outsl
icebp
mov
pop
pop
add
aad
insl
push
cld
push
jmp
xor
and
shlb
ljmp
data16
lahf
pushf
add
dec
in
sub
inc
push
lret
jl
test
pushl
cmpsb
dec
or
in
inc
call
mov
add
mov
sbb
jbe
iret
std
adc
mov
mov
xor
outsb
aam
mov
mov
stos
ret
push
shrl
inc
test
xorb
outsb
push
clc
nop
call
dec
adc
movl
insl
add
adc
adcl
lds
ret
aad
add
nop
ds
add
enter
inc
jg
lcall
pop
je
cmp
push
movsl
dec
jne
pop
mov
and
add
incb
jg
xchg
lretw
dec
jo
jae
cmpl
add
adc
jmp
lcall
adc
xchg
mov
out
adc
leave
repz
jno
jbe
aas
pop
push
add
jb
sbb
adc
cmpsb
inc
xchg
dec
or
adc
adc
or
icebp
imul
jns
cltd
sub
imul
ljmp
inc
sub
loopne
or
out
shlb
mov
je
sbbl
sbb
push
and
sub
insb
adc
mov
mov
or
adc
daa
hlt
add
and
inc
and
add
inc
cld
sbb
mov
dec
and
and
mov
add
dec
adc
int3
mov
sbb
inc
ret
xchg
add
std
pop
negl
mov
ja
xchg
out
add
and
xor
xor
push
ffree
mov
bound
fnstsw
mov
mov
icebp
sarb
repz
sub
ror
fwait
daa
out
lahf
or
inc
lods
int3
add
pusha
fcoml
mov
inc
stc
shlb
and
sbb
pop
or
cmp
pop
add
in
pusha
sbb
scas
add
xchg
add
jle
ret
std
dec
idiv
repz
lds
scas
jo
gs
add
add
test
daa
push
iret
loopne
imulb
mov
and
aas
popa
adc
addb
push
pcmpeqb
dec
or
pop
outsb
sub
testl
add
jmp
mov
icebp
push
dec
pop
xchg
clc
bound
repz
inc
inc
loopne
outsb
add
mov
dec
or
jnp
icebp
or
add
clc
push
scas
push
pop
dec
cld
sub
mov
adc
add
imul
adc
sahf
test
push
shr
lock
out
es
mov
add
mov
pusha
lcall
inc
fwait
and
cltd
xorb
xchg
add
lods
add
pushf
fistpl
cmp
fs
pop
incb
add
movsb
sahf
bound
addr16
jnp
sbb
popf
cmpsb
xchg
mov
insb
xor
in
out
clc
jae
fnstsw
into
mov
sub
aas
inc
orb
push
cmpsb
adcb
insb
ja
add
xor
cmpsb
mov
xchg
mov
sbb
add
movsl
pop
inc
jmp
pop
roll
inc
push
test
int3
fcoms
jae
add
repnz
out
xor
loop
inc
js
add
data16
or
cmpsb
mov
into
stc
ret
hlt
jbe
add
lds
xchg
pop
push
scas
jne
int3
jge
or
hlt
pushf
lea
lock
das
pop
mov
loopne
mov
xchg
add
dec
lods
ret
pop
add
add
jne
add
fsubrl
and
insb
lock
xchg
hlt
sub
add
xor
repnz
xor
adc
add
enter
popf
loope
add
jo
add
cmc
pop
pushf
lock
mov
int
push
sti
mov
pop
sysexit
and
mov
xchg
adc
fistpll
dec
jbe
pop
or
ja
lds
xor
add
dec
mov
cmp
mov
sbb
adc
lods
xor
adc
repz
adc
pushf
pop
sbb
or
add
mov
pop
jecxz
add
js
mov
xor
ljmp
lcall
mov
jg
ffree
push
shll
les
adc
ljmp
inc
mov
inc
cmc
dec
add
popa
jo
add
lahf
ret
and
in
jle
pop
add
cli
bound
add
mov
cltd
add
shll
loop
mov
xor
sbb
roll
lahf
fisttpl
rolb
and
push
jbe
and
mov
sbbl
add
cwtl
testb
js
outsb
rol
push
add
add
mov
pop
popa
add
sub
xchg
add
pop
test
jb
fsts
out
lock
insb
add
pushf
pop
pop
jne
adc
cmp
jge
cwtl
add
imul
xor
add
ffree
shrl
enter
jo
add
test
adc
ljmp
ret
in
lea
outsl
and
mov
inc
add
xchg
dec
add
cmc
js
in
enter
add
ja
mov
push
cmpsl
or
push
and
lea
mov
xor
mov
push
adc
cmp
imul
add
xor
pop
dec
rcr
int
adc
test
xchg
pop
fmuls
add
movsl
test
dec
bound
jb
push
dec
lods
aad
sbb
xlat
mov
adc
pushf
arpl
xchg
cmp
cli
jecxz
xchg
sbb
add
int3
int
rorl
std
es
mov
sbb
sbb
cli
std
adc
sub
add
mov
add
lods
rolb
dec
in
inc
out
sti
add
bound
add
lea
and
xchg
add
xor
adc
mov
out
push
aaa
mov
mull
cmc
pop
lcall
cmp
adc
iret
clc
xor
mov
lock
xchg
xor
js
dec
adcl
fnstcw
jno
scas
xchg
scas
dec
pusha
mov
sti
out
mov
push
aaa
es
les
mov
sbb
mov
aas
lretw
jne
int3
loopne
pusha
das
or
mov
add
loope
or
mov
gs
roll
leave
pop
and
dec
push
popa
sub
add
scas
les
insl
lcall
jecxz
mov
dec
add
push
dec
ds
pushf
add
mov
in
cmp
mov
or
stos
sbbl
inc
dec
loope
add
fwait
shlb
sbb
cmp
mov
movsl
add
xchg
mov
inc
rclb
cld
pop
int3
out
add
xor
loope
in
add
jp
dec
loopne
imul
and
fldl
std
fwait
scas
or
sbb
pop
xchg
loopne
es
mov
cmpb
dec
sub
aas
into
mov
pop
inc
lds
loopne
jmp
pop
mov
dec
add
dec
mov
in
cs
add
and
movq
mov
jnp
inc
fld
es
and
loopne
add
and
push
rolb
pusha
mov
sarb
sub
xor
frstor
mov
lret
mov
add
movsb
aaa
popa
add
xchg
int3
cmpsb
popa
aas
shlb
push
outsb
fcoms
pop
add
int
sahf
mov
sbb
popa
inc
push
sar
add
hlt
daa
fdivs
mov
add
mov
in
xabort
repz
jl
add
rcrb
andb
mov
xor
add
push
cmp
pop
pop
pusha
dec
ljmp
out
dec
inc
xor
enter
insl
adc
mov
iret
xlat
sub
ljmp
jnp
push
movsb
and
in
loope
int3
add
cmp
ficoml
push
daa
mov
adc
es
nop
or
cltd
pop
xchg
in
cmp
add
sbb
jecxz
add
ficomps
cmp
ret
mov
push
add
lahf
or
out
dec
leave
mov
stos
sarb
add
les
mov
and
dec
imul
lcall
inc
dec
sarb
sub
lods
mov
pop
aam
lahf
adc
push
sbb
xchg
addb
add
dec
mov
inc
mov
mov
pop
addr16
push
fiaddl
int3
imull
insb
cmp
repz
cwtl
pop
pop
cmp
xor
clc
jb
add
pop
lock
add
cwtl
mov
loopne
dec
or
adc
sbb
and
jns
mov
mov
je
jbe,pn
into
add
repnz
inc
and
outsl
leave
sub
shl
mov
ret
pxor
aam
and
xchg
inc
cmp
je
mov
sbb
enter
pop
xchg
or
and
je
xor
mov
push
loop
jo
jb
out
mov
std
inc
cwtl
loope
mov
mov
dec
push
repnz
jb
adc
popa
hlt
add
loop
aas
mov
adcb
add
or
adc
add
jno
jb
negl
movsb
cmpps
jmp
in
add
push
movsb
lea
jae
add
cltd
pop
cld
add
dec
orb
sbb
outsl
add
sub
cld
cmp
and
inc
cmpb
iret
add
sub
fstpt
fsts
std
cmpsb
mov
push
movsl
jb
fcmovnu
bound
inc
aaa
in
mov
out
sbb
popa
cwtl
sbb
stos
cmc
dec
mov
in
push
and
mov
push
cli
xchg
aas
add
lcall
test
sub
dec
roll
mov
frstor
add
inc
imul
jmp
ljmp
xchg
faddl
jnp
xor
jae
inc
call
int3
fnsave
and
je
lods
pop
movsl
sbb
scas
lahf
pop
orb
leave
push
sub
into
stc
sbb
add
and
xchg
pop
push
pusha
add
push
add
sub
xor
movsb
shlb
inc
pop
xor
dec
jg
mov
call
out
adc
dec
aas
lret
or
add
sbb
out
out
dec
mov
clc
add
mov
jae
loop
in
pop
add
mov
pop
addr16
cmp
add
or
in
push
cwtl
cwtl
cwtl
mov
lea
rcrb
scas
add
repnz
pop
cmp
xor
sarl
xchg
pop
add
aas
jo
jmp
cmp
rcrb
pop
dec
cmp
ljmp
add
stos
push
test
add
or
or
outsl
adc
cmpsb
lock
push
icebp
push
cmp
out
xor
hlt
pop
sbb
jle
pusha
fsubrl
out
pop
aam
inc
jns
scas
add
adc
mov
add
movsl
pop
mov
jg
add
mov
push
stos
out
push
add
leave
fcoml
push
inc
movsb
mov
cli
push
pop
ja
xor
lods
inc
dec
sub
lds
fisttpl
or
in
pop
cs
lret
lods
mov
jge
test
cmp
div
push
add
mov
lahf
stos
imul
dec
dec
scas
fnstcw
lret
mov
std
mov
and
inc
mov
popl
dec
ljmp
shll
add
inc
fwait
aas
sbb
loop
je
add
and
push
xor
out
in
push
mov
imul
push
push
in
inc
lock
sub
add
aaa
cmpl
les
int3
sar
out
jbe
mov
xchg
std
add
mov
and
mov
imul
cmpsb
sbb
push
fwait
out
inc
addb
sub
out
mov
insl
add
xchg
rol
aam
addb
xchg
dec
aas
aad
mov
mov
sarl
xlat
xchg
cmpsb
adc
add
sbb
out
or
movsb
dec
filds
popa
or
loope
sub
jne
lret
mov
and
cmp
mov
sub
fwait
add
out
test
fdivl
cmp
mov
xchg
adc
cmc
loope
sbb
add
shl
test
or
cmp
cltd
aaa
stos
lcall
sbb
pop
inc
dec
add
dec
and
and
pop
push
jns
add
aad
rcll
mov
loope
and
stc
pop
add
dec
pop
shll
sbb
sbb
pop
fcmovb
dec
movsl
decl
clc
mov
pop
jo
add
in
jg
sbb
inc
es
insb
adc
xor
mov
jg
dec
pop
in
js
xor
add
adc
les
add
mov
pushl
ret
loope
ss
lods
addr16
shrb
xchg
cmp
xor
shrl
dec
clc
rolb
cmpsb
idiv
pusha
or
inc
out
dec
add
xor
cmpsl
aad
inc
lcall
or
leave
add
pop
add
subl
and
or
xor
or
mov
lret
dec
leave
mov
aas
xor
mov
cmp
cmpsl
movsb
xor
xor
push
or
mov
add
pop
imul
leave
aad
mov
sub
out
icebp
jmp
or
jp
jmp
sub
mov
aas
mov
imul
inc
xchg
ret
pop
test
push
popf
add
mov
xlat
add
enter
aas
add
out
inc
mov
add
add
fisubs
mov
push
mov
ret
shlb
adc
fs
or
add
sarb
pushf
add
pop
in
mov
xchg
daa
aad
xor
mov
pop
stos
adc
movsb
xor
fmuls
push
push
mov
sbb
adc
xchg
add
push
cld
cmp
add
xchg
pop
ret
dec
imul
jl
push
loopne
inc
das
inc
mov
clc
xor
mov
subl
jmp
pop
pop
outsl
cmp
aad
ret
rorl
mov
out
in
push
ss
inc
add
rolb
mov
les
mov
add
pop
xor
shlb
lock
cmpsl
xor
mov
jns
pop
gs
sti
aaa
and
ljmp
loopne
cmp
dec
or
mov
jne
insb
push
or
dec
cmp
sub
negl
es
mov
sbb
mov
mov
sti
inc
js
mov
popl
pusha
add
ret
clc
nop
push
push
xor
dec
jb
add
lcall
jb
les
popa
adc
mov
mov
add
orl
xor
and
push
add
fnsave
aas
stos
xor
sbb
cwtl
push
push
pop
mov
cs
mov
push
xchg
xchg
add
aas
push
pop
mov
cmc
scas
lahf
sarb
iret
pushl
pop
sbb
add
inc
testl
add
in
ljmp
cmp
testl
iret
add
sbb
mov
push
add
dec
popf
in
mov
jns
rorb
loopne
pop
add
jne
insb
jns
imul
pop
gs
mov
sti
mov
sbb
leave
push
test
add
lds
clc
mov
inc
lret
les
mov
pop
sarl
xor
jae
out
pop
xor
add
rorl
jns
inc
mov
add
push
xchg
jb
loope
out
in
inc
xor
arpl
or
insl
adc
enter
cmpsb
xor
rcrb
sbb
dec
adc
and
nop
mov
mov
pop
sahf
xorb
adc
nop
cmp
mov
and
sbb
sbb
leave
cmc
inc
add
addl
call
arpl
add
pop
xchg
outsb
add
andl
push
aaa
mov
sarl
pushf
cli
jno
push
push
sub
clc
jecxz
jne
test
adc
setge
jno
je
xor
add
inc
cmp
call
stos
pop
cmp
mov
pusha
add
andb
and
insb
xchg
add
xlat
add
inc
ds
jmp
adc
sbb
add
stos
cmpb
mulb
and
lock
add
mov
pop
jg
add
imul
out
mov
stc
ds
cmp
add
sbb
inc
add
sbb
xchg
inc
fcoms
cltd
repnz
push
jo
lock
add
test
out
mov
insl
add
aam
inc
fcmove
ds
jle
add
jmp
shr
scas
add
movsl
cmp
jne
cmp
mov
sbb
jae
ret
es
stc
das
add
dec
xorb
into
stos
pop
test
ret
and
or
or
scas
lock
pop
dec
adc
and
fdiv
add
push
pushf
nop
or
and
mov
sti
inc
xchg
adc
xor
nop
adcb
notl
lock
sahf
icebp
add
and
lods
test
mov
pop
out
mov
cltd
adc
xor
jecxz
lods
je
test
fcom
mul
mov
ds
add
movsb
adc
adc
push
inc
inc
adc
add
mov
sbb
jb
mov
loop
stos
or
fdivl
movsl
clc
sbb
pushf
rcrb
add
adc
jecxz
mov
and
loop
ror
inc
cmpsl
add
jge
dec
push
sbbb
cmp
cmp
popa
xchg
pusha
dec
mov
mov
fadds
das
sub
subb
mov
mov
rorl
xor
outsl
and
cmp
sub
pop
and
loop
jle
xchg
mov
cmc
cmp
push
pushf
sub
cltd
sub
inc
adcb
xor
cmp
sbb
pop
or
shrb
pop
nop
add
xor
pop
xor
fldl2e
pop
fiadds
jbe
xchg
or
aad
add
xchg
sti
out
and
or
fcoms
dec
scas
pusha
jo
pop
rorl
mov
movsl
push
out
dec
add
pop
pushl
sbb
xchg
add
mov
outsb
ljmp
adcb
popa
cmp
movsl
add
aad
imul
inc
add
out
adc
clc
pop
sub
dec
lret
mov
add
adc
jne
in
test
cwtl
out
int3
mov
enter
add
fs
mov
das
jmp
add
pop
mov
mov
in
js
rorl
iret
jecxz
or
lock
xor
cld
jns
dec
push
inc
xor
in
mov
in
add
xchg
sarb
adc
sub
rolb
sub
add
xor
sbb
shlb
mov
sar
add
mov
xor
jns
adc
call
jle
dec
es
mov
xlat
sub
add
stos
and
ret
add
push
xchg
addr16
xchg
aad
dec
leave
xor
stos
mov
fucom
push
mov
jb
inc
test
push
jae
push
jns
add
call
pop
xchg
mov
rcrl
aaa
sbb
lds
cmove
neg
inc
in
adc
in
xchg
add
imul
xor
jns
pusha
daa
inc
ret
push
push
push
add
cmp
mov
add
add
or
xchg
inc
call
cmp
lret
and
hlt
icebp
push
push
push
pop
mov
lods
lods
jae
add
test
aas
add
xchg
cmp
scas
add
bnd
add
cvtpi2ps
cli
jp
inc
imul
or
sbb
cltd
inc
push
ja
lret
cmp
add
es
xchg
clc
add
cmpsb
ja
push
jns
cmc
int3
pop
loop
jno
push
stos
fmuls
push
add
inc
and
ja
divl
add
add
cmp
push
cmp
idiv
pop
add
dec
add
call
fs
jae
add
mov
mov
test
dec
popw
cld
mov
mov
mull
xor
mov
popa
push
jp
add
dec
push
cltd
aaa
fildl
push
xor
add
cmp
sub
inc
loope
test
add
fstl
jno
shr
add
out
add
add
cmpb
ret
in
xor
xor
push
mov
add
lock
lret
adc
adc
lock
jg
fdivp
pop
lret
in
call
pop
aad
je
dec
testb
fnstsw
jmp
mov
dec
adc
imul
mov
outsb
xchg
aaa
test
cmp
sub
mov
add
xchg
out
int
xor
inc
add
outsb
movsl
push
adc
push
popa
jb
adcb
push
add
mov
lods
sbb
inc
add
jmp
std
leave
jg
add
clc
shlb
aad
add
es
jnp
add
sub
xchg
dec
jle
add
test
adc
add
dec
mov
fucomip
insl
adc
inc
push
and
xchg
push
add
int3
lret
jg
cli
dec
add
or
pop
cmp
inc
aad
dec
push
test
jno
rcrb
pop
pop
js
hlt
jo
int3
imul
gs
or
add
dec
icebp
fsubrs
jne
fisubrs
and
clc
dec
mov
in
jmp
std
enter
cmp
add
dec
or
jne
inc
pop
repz
popa
lock
push
mov
in
mov
or
int3
pop
decb
rorl
and
mov
mov
add
push
xchg
push
xchg
cmc
xor
fmul
xchg
bound
xor
shll
mov
add
arpl
imulb
add
add
in
ja
add
xor
and
mov
add
pop
in
addl
shl
sub
daa
pop
add
ja
or
mov
gs
imul
xor
sti
mov
stc
ficoml
push
mov
jae
add
in
or
add
aam
add
in
pop
cs
insl
jae
add
mov
pop
cmc
push
je
add
add
pop
inc
jl
nop
fistpl
ljmp
sbb
mov
iret
or
aaa
aad
shll
fxch
or
lret
add
xchg
push
stos
imul
adc
or
sbb
xchg
out
into
inc
add
jnp
es
shl
xor
adc
out
add
test
inc
ja
sbb
pop
in
into
jecxz,pn
test
adc
loope
jecxz
adc
add
movsl
inc
xor
rcll
mov
sub
rcrb
outsl
shl
xchg
xor
lods
inc
les
dec
call
cmp
enter
add
lret
pop
mov
pop
xor
aam
xor
dec
add
movsb
push
sbb
repnz
or
sbb
nop
dec
call
cli
sbb
xor
add
sub
jl
aam
and
inc
loopne
cld
jmp
repz
insb
lods
out
push
movsl
fildl
xchg
out
xchg
dec
inc
or
mov
out
jecxz
sahf
pop
leave
add
test
stos
and
add
dec
push
psadbw
jae
add
inc
lods
add
inc
mov
test
jb
adc
mov
add
pop
std
aam
cmp
mov
dec
test
mov
popf
imull
push
add
in
mov
inc
imull
push
filds
ret
mov
rorb
mov
test
stc
clc
push
add
adc
ljmp
sbb
mov
sti
add
aas
inc
lcall
add
lock
mov
push
ret
and
pusha
mov
sub
xrelease
ljmp
mov
out
mov
test
ret
xchg
adc
lock
movsl
add
das
push
mov
push
xchg
test
mov
xor
faddl
xchg
mov
mov
aas
popa
push
repz
dec
ret
xchg
and
xchg
add
dec
xor
sub
loopne
pusha
loop
lret
sub
push
dec
cld
mov
movb
mov
pop
push
mov
adc
clc
jmp
mov
orl
jne
sub
je
cltd
icebp
add
sub
lret
pop
cmpsb
pusha
dec
andb
and
rcrb
imul
fidivs
rcr
mov
dec
jge
jp
add
shr
jbe
add
in
les
push
push
repz
lock
repnz
add
adc
pop
add
sub
mov
jae
pop
lea
bound
mov
into
stos
sbb
orl
or
add
adc
and
stc
add
sub
test
add
pop
mov
and
add
ret
leave
mov
cmp
mov
sbb
xor
sbb
add
cmp
and
adc
and
xchg
and
fcompl
cmp
or
in
loope
mov
push
add
push
xor
sub
jbe
sub
lret
sub
mov
mov
add
sub
mov
cmp
adc
in
add
mov
pop
lock
gs
mov
sub
push
cmpb
ret
jo
push
pop
or
popa
test
push
and
in
lods
jae
sub
loop
cmpsb
add
push
jns
pop
cltd
inc
or
into
inc
sbb
inc
cld
pop
loopne
or
pushf
add
das
push
dec
loopne
mov
add
repnz
clc
out
push
pushf
in
int
ds
add
ror
push
test
add
cmp
incl
clc
sub
and
dec
test
andl
cmp
out
aam
xchg
cld
jns
add
xchg
pop
add
xor
in
jne
cli
ds
dec
fucomi
sub
test
sub
jge
or
std
lods
in
popa
add
movl
add
mov
mov
aas
ja
dec
add
addb
les
and
dec
jns
add
stos
cld
jne
add
ljmp
add
fldl
dec
mov
jge
jge
and
sbb
adc
sbbb
add
push
adc
jo
cwtl
lahf
xor
mov
mov
cmpsl
sbb
xchg
cmp
popa
sbbb
or
push
add
lret
xor
test
mov
sbbl
enter
add
add
lds
cwtl
dec
pop
jge
stc
add
in
fsubr
push
ds
inc
subl
aad
push
loope
iret
mov
popa
add
cmp
inc
add
adc
lret
es
enter
sub
cwtl
dec
xchg
insl
stc
xor
mov
dec
add
mov
scas
sbb
jmp
adc
jno
add
popf
je
pop
or
jle
ss
leave
outsb
push
rorb
testl
and
mov
or
mov
int3
or
sahf
fnstsw
xor
loopne
sbb
add
cs
jecxz
imul
jg
push
pop
jle
cmp
repnz
inc
adc
dec
add
fiadds
mov
cmp
lahf
mov
add
cmp
mov
ds
or
ja
inc
add
sbb
xchg
dec
push
pushf
jge
imul
mov
mov
add
pop
leave
mov
xchg
add
out
popf
shlb
loop
adcb
lea
add
cld
xchg
sahf
stos
cli
rcll
xor
add
pop
popa
inc
add
add
adc
cmpsl
cmp
cmp
mov
push
add
or
rolb
mov
xor
filds
insb
xor
push
sub
in
pushf
addl
xchg
rclb
lret
fisttps
in
jbe
mov
mov
out
pop
mov
adc
lods
jo
jl
add
adc
arpl
loopne
out
ret
sbb
mov
mov
dec
adc
dec
in
sub
sarl
mov
sbb
or
push
and
and
push
and
daa
movsb
jg
loope
and
lods
xor
mov
sub
adc
ss
add
cmp
add
add
movsb
call
mov
lock
push
js
add
mov
in
pop
ret
js
adc
adc
addr16
xlat
mov
lods
fistpll
mov
add
imul
push
stos
les
mov
pop
stc
std
fistps
stos
add
jle
sbb
or
xor
mov
dec
add
adc
inc
jo
cmp
add
lcall
jge
mov
pop
add
xor
in
test
push
jnp
hlt
rcrl
clc
imul
hlt
jns
push
mov
mov
prefetchwt1
mov
arpl
push
or
lea
test
mov
test
mov
mov
pop
add
mov
pop
xchg
or
sbb
pop
pusha
hlt
cmpsb
xor
jl
movsl
add
out
sar
pop
imul
rol
and
xor
xor
cli
out
cmpsl
add
sti
lea
sub
ja
aam
mov
inc
pusha
push
sbb
loopne
loope
push
sbb
mov
es
dec
cld
sbb
add
repz
incl
push
mov
in
shl
add
test
pop
icebp
and
int
and
les
xchg
lret
push
divl
add
lods
test
jecxz
mov
add
dec
xlat
add
cmp
in
loopne
pop
inc
mov
and
jo
pop
shll
mov
add
jg
dec
sbb
int
or
cs
mov
sbb
rcll
jo
mov
mov
shrb
sbb
sbb
sub
cmp
orb
movsb
add
div
cmp
mov
int
mov
xchg
mov
fdiv
push
inc
adc
scas
pop
frstor
add
out
mov
jnp
cmp
ja
push
cmpsl
loop
add
inc
push
addl
add
xchg
rclb
xor
pop
add
dec
pop
incb
adc
add
sub
adc
pop
add
das
cmp
push
daa
inc
add
jmp
test
in
or
call
push
fstps
cmpsb
push
enter
cwtl
xor
xchg
mov
ss
lldt
test
add
ficomps
cmc
add
sub
stos
fwait
dec
cmp
fcoml
into
icebp
add
inc
dec
rcll
repnz
orb
add
lock
push
inc
aad
jp
sbb
mov
movsb
xor
es
mov
lods
push
sbb
data16
rcr
cmpsb
fistpl
iret
fiadds
jae
in
ret
movsl
xchg
imul
inc
cltd
pop
stos
cwtl
test
incb
fildll
or
in
testb
mov
cli
add
xor
add
sub
test
test
and
add
cmp
call
mov
ds
pop
xor
jmp
adc
xchg
mov
jl
xor
pop
ss
call
cmc
push
bound
testb
or
jbe
dec
mov
into
mov
insb
sub
add
xchg
pop
addr16
xchg
sub
aas
ret
inc
and
inc
xor
repz
push
js
and
mov
subb
adc
out
movsl
xor
cltd
test
movsb
lahf
add
and
test
les
add
cmp
add
sbb
jb
add
cltd
pop
add
jge
jbe
mov
sti
out
add
test
add
aaa
std
and
stos
insb
out
xorl
ja
fst
jo
add
inc
int3
mov
jne
dec
sub
stos
xor
lods
pop
loop
ds
sarb
nop
insb
insl
clc
add
aam
imul
popa
das
add
testl
and
xor
cmp
mov
loope
pop
add
or
jns
insb
xor
inc
add
sti
frstor
add
dec
shr
flds
mov
mov
mov
or
lods
rorl
out
xchg
cmp
cmp
addl
loope
test
mov
jne
add
xchg
dec
and
add
mov
sub
popf
imul
andl
or
arpl
xchg
sbb
cli
iret
add
jle
dec
push
cmpsl
sbb
fadds
add
mov
jge
add
lret
inc
insl
loope
jl
neg
add
or
shufps
filds
int3
push
iret
ja
mov
sbb
adc
sbb
pop
mov
mov
testl
arpl
add
repnz
popf
imul
dec
inc
mov
arpl
clc
xor
lods
aaa
ds
jl
mov
into
pop
inc
dec
pop
push
sbb
and
and
add
fwait
jne
inc
mov
add
je
mov
push
and
and
xor
loope
test
add
inc
add
repnz
loope
ret
cld
push
outsb
add
js
mov
into
cmpb
xchg
sti
and
and
and
imul
mov
mov
xor
sbb
sarb
jae
and
xchg
pop
sub
adc
cmp
add
and
enter
dec
sbb
cmp
das
nop
hlt
push
sub
xor
add
out
test
adc
or
mov
sub
cmpsl
js
imul
jno
sbb
pop
mov
add
push
mov
jecxz
pop
cmp
dec
das
cltd
scas
jle
hlt
add
inc
jecxz
or
add
xor
push
jno
dec
xor
jne
stos
shl
push
mov
sub
mov
pop
mov
rolb
aam
push
and
xchg
add
daa
push
mov
add
pop
or
sbbb
jl
jae
add
xchg
inc
aad
loopne
pop
fildl
daa
or
mov
add
outsl
sbb
fbstp
xor
pushf
pop
jg
sub
xchg
xor
pmulhuw
mov
push
inc
daa
pop
imul
lods
decb
cmp
lret
jae
loopne
jo
mov
sbb
add
push
imul
add
mov
cld
add
sub
mov
inc
and
das
sahf
ljmp
pop
cmpsb
int3
jns
push
push
je
shlb
fildll
and
mov
cmpsb
js
add
mov
xchg
push
loopne
push
inc
add
jne
mov
add
inc
jns
btc
data16
add
add
inc
clc
sar
ss
cmp
sub
in
pop
dec
divl
fimull
push
and
xor
mov
adc
mov
add
in
mov
mov
fwait
ret
pop
cmp
sbb
negl
dec
push
cmc
je
faddp
mov
and
mov
adc
pop
fwait
sti
inc
mov
add
cmp
dec
xchg
cmp
lods
aam
pop
stos
icebp
js
pop
inc
mov
loope
out
call
xor
mov
sti
push
incb
stc
cld
pop
lret
sbb
loopne
mov
inc
mov
test
shr
pop
or
xlat
inc
pop
adc
shlb
pop
jo
add
pusha
out
xor
xor
mov
popf
mov
xor
xor
add
mov
cmpsb
cmc
movsl
add
aas
dec
pop
cmp
xor
xor
subb
addb
imul
add
rorl
sbb
jl
pop
xchg
lds
icebp
fadd
xlat
push
add
inc
mov
testb
xor
xadd
clc
mov
fwait
rclb
mov
icebp
adc
popf
lea
ds
imul
pop
add
lcall
mov
xchg
add
pusha
lock
jo
testl
cmpsl
or
in
sahf
adc
mov
sub
push
jp
pop
xor
aas
popa
add
popf
mov
in
xor
dec
jecxz
lock
sub
out
pop
xchg
test
mov
cmp
add
les
in
add
data16
aas
mov
dec
cmp
clc
rorb
repz
mov
jnp
and
mov
add
idivl
push
dec
jae
add
cmp
xchg
aad
sbb
aam
in
inc
jne
jl
adcl
jle
xor
mov
mov
or
js,pt
in
ss
pusha
add
push
outsl
cmpsb
push
mov
or
mov
dec
test
sbb
in
inc
jecxz
fsub
icebp
push
add
rolb
and
ja
scas
loopne
cmc
xor
pop
inc
pop
ret
pop
mov
enter
fnstsw
jns
cmp
add
sti
sub
jmp
mov
push
add
outsl
std
jg
scas
pop
inc
test
push
push
addl
mov
xchg
sbb
cmpsb
add
mov
push
dec
push
cmp
fistpl
add
xchg
adc
lret
fs
movsb
pop
mov
jp
jmp
or
mov
pushf
movsb
dec
iret
filds
fstps
js
sbb
xor
lods
pop
cmp
adc
push
xor
fldcw
pop
mov
mov
add
jne
insb
mov
pop
insl
je
dec
add
xchg
outsb
ret
add
mov
pop
fdiv
cmc
push
mov
xor
cmpl
outsl
js
dec
xchg
jmp
add
push
nop
repnz
mov
add
call
std
mov
xor
sbb
jno
or
dec
jne
in
adc
aad
popf
add
test
mov
incb
xchg
sbb
hlt
mov
sbb
cmp
sub
xor
fildll
pop
shlb
mov
pop
aad
or
add
jle
imul
roll
mov
mov
lcall
add
cmp
adc
add
and
pop
lock
add
test
jo
mov
leave
add
jmp
ret
push
xor
repnz
xor
leave
cmovg
mov
aam
sub
outsb
test
cmp
in
xchg
loope
js
jecxz
push
cmp
in
pop
shll
add
xor
add
mov
add
jecxz
or
cwtl
add
add
ljmp
mov
mov
push
loopne
lcall
sub
clc
add
in
sahf
bound
stos
inc
mov
jbe
test
push
imul
add
jne
and
jmp
jecxz
xor
fwait
in
jnp
fistl
sub
dec
jno
or
movl
add
movsb
lods
sub
sbb
into
sti
sub
ds
lock
add
lods
test
add
jmp
mov
wbinvd
and
inc
xor
add
in
mov
loope
sahf
out
std
push
scas
je
sbb
inc
nop
add
mov
jo
mov
add
pushf
add
pop
aas
nop
xorps
xchg
pop
add
int3
or
cmp
and
pop
addr16
or
add
push
or
sub
andb
pop
xlat
pop
xor
in
add
inc
in
or
cmp
dec
add
inc
pop
je
add
sub
add
inc
sub
fbld
lahf
cmp
jg
enter
das
jno
mov
push
sbb
xchg
in
add
mov
and
add
fxtract
loopne
cld
lahf
add
cltd
add
ss
xchg
xlat
pop
xchg
lret
mov
sahf
mov
jge
push
aam
sbb
test
scas
aad
jmp
lret
cld
add
lcall
sbb
filds
data16
xor
inc
add
xor
mov
mov
insl
daa
pmuludq
push
pusha
add
pop
daa
dec
ljmp
push
mov
mov
popf
adc
int3
dec
jle
mov
call
lahf
inc
mov
mov
mov
mov
jno
add
jbe
das
xor
icebp
add
push
xchg
xchg
lock
aaa
andl
jg
xchg
adc
mov
xor
push
fidivs
xlat
add
lret
adcb
mov
aaa
pop
nop
sbb
sbb
lret
lldt
xor
mov
push
arpl
add
test
test
in
push
das
pushf
cmc
addr16
or
push
into
fimuls
xchg
ja
leave
rorb
stos
mov
mov
mov
add
mov
cmp
push
loop
sbb
dec
cmp
mov
inc
or
add
fiadds
jns
test
nop
sbb
rclb
les
in
jecxz
leave
pop
imul
fsubl
push
sub
int3
adc
push
add
fidivl
notb
adc
cmp
adc
aad
clc
jae
inc
cmpsb
addb
fnsaves
add
mov
xorl
mov
push
adc
sti
lret
pop
pop
inc
inc
data16
push
cmc
in
and
lock
jp
add
stos
push
jb
scas
add
les
lods
sbb
aam
cmp
adc
sbb
inc
aaa
inc
inc
xlat
nop
xor
and
movsl
cwtl
cmp
dec
mov
mov
mov
mov
xchg
icebp
sub
inc
int3
and
popf
mov
xor
add
add
add
stc
xor
mov
fmul
in
or
fs
lods
sbb
lock
pop
inc
pusha
mov
les
in
std
int
adc
insb
nop
add
sub
mov
scas
and
inc
jo
cmpsb
in
add
lods
mulb
shrb
lods
add
movsb
pop
aam
jno
in
loopne
cmp
pop
fildll
nop
inc
repz
xchg
dec
iret
add
sbb
or
addl
out
je
cmp
add
pop
lock
sub
ja
mov
dec
rorl
movsl
sahf
flds
pop
lret
mov
lods
sti
hlt
loopne
nop
nop
js
add
scas
rcl
add
push
xchg
loopne
out
ret
add
lret
and
sbb
add
dec
mov
add
sub
punpckhbw
and
mov
fildl
inc
lods
mov
pop
add
and
fisubl
add
xchg
xchg
out
cwtl
sbb
xchg
jg
sub
jae
xorb
hlt
ljmp
xor
adc
nop
inc
icebp
mov
adc
mov
pop
sbb
sub
addb
cmp
push
cmp
sbb
rol
sbb
add
lods
sar
lahf
jno
fisubrs
xor
xor
clc
lods
lret
add
and
cmp
negb
adc
and
nop
xchg
fadds
or
fnstenv
fildl
imul
mov
jge
or
add
push
lret
cld
push
push
divb
adcb
sbb
add
add
mov
loop
add
mov
insb
add
mov
adc
cmp
xchg
dec
jns
or
xchg
add
mov
mov
pop
imul
in
push
pop
clc
int3
lds
xor
mov
call
cmp
and
bound
pusha
sbb
sarl
addb
mov
xchg
adc
mov
stos
push
inc
add
adc
test
outsl
jne,pt
adc
add
fidivs
add
add
xlat
and
pop
lahf
shlb
and
add
sub
mov
dec
and
push
xchg
xor
lea
pop
sbb
out
ret
loope
or
std
lock
add
lahf
pusha
lret
xchg
fsubrs
sbb
mov
xchg
mov
dec
push
lods
aad
or
dec
mov
mov
sbb
push
sbb
arpl
add
jne
add
jb
mov
adcl
add
cmp
sti
pop
cmpb
adc
hlt
cmp
lcall
add
dec
add
push
sub
jle
sbb
mov
mov
movl
stos
jmp
xchg
add
and
mov
imul
add
push
push
pusha
dec
xor
add
inc
push
add
cmp
insl
cs
cmp
xchg
add
int
test
lods
add
lods
outsb
out
in
fldl
jns
call
fidivl
sbb
mov
ds
jge
mov
jne
outsl
or
pop
mov
mov
push
sbb
mov
sahf
ja
adc
xchg
mov
inc
jle
cli
dec
in
aas
adcb
add
out
pop
roll
js
aam
in
mov
pusha
loope
xor
test
into
jmp
add
and
add
mov
add
movsb
mov
mov
add
sbb
nop
jg
sbb
mov
dec
push
inc
or
test
xchg
pop
add
sti
xor
ret
jl
mov
mov
cld
idivb
add
xor
jle
or
push
popa
enter
aam
or
mov
sub
xchg
movsb
xor
mov
jl
xor
sbb
sahf
lods
add
cli
cmp
pop
gs
inc
test
scas
loop
flds
dec
push
mov
lret
aaa
cmp
and
stos
mov
mov
mov
add
fidivl
int3
notl
push
filds
jo
loop
mov
jge
sbb
dec
mov
push
add
das
jmp
out
push
add
mov
sub
xor
loope
or
ret
push
ja
sbb
arpl
or
setno
mov
push
loop
push
jns
sahf
mov
test
cmp
mov
outsb
inc
add
sbb
andb
dec
out
adc
stos
jo
pop
sub
pop
stos
pop
sbb
hlt
mov
rorb
out
mov
stc
push
inc
and
in
jne
fisttps
xor
fwait
add
loop
aas
test
pop
adc
cmp
mov
test
xlat
fcom
ja
add
scas
lock
mov
cmc
fs
xchg
pop
mov
or
xorb
addr16
mov
jbe
add
fucomi
stc
or
hlt
daa
add
jns
inc
add
jmp
pushf
pop
sarl
gs
xor
testl
adcb
movl
add
imul
shrl
mov
cmp
int3
loopne
push
sbb
loope
sub
add
mov
push
rdpmc
ds
outsl
mov
jns
jne
and
inc
aam
or
sbb
gs
sbb
sub
stos
int3
add
in
mov
dec
int3
add
adc
push
mov
sbb
push
mov
aaa
cmp
rdtsc
xor
pop
les
movsb
xor
ficoml
add
hlt
es
mov
fsubl
pop
add
movhps
fimuls
adc
sarl
add
pop
arpl
out
clc
cmc
dec
push
ss
dec
out
shlb
add
add
pop
xchg
lret
es
jbe
pusha
push
fdivs
out
out
mov
in
add
push
jno
cs
filds
dec
push
add
shlb
or
add
leave
fsubl
mov
cmpsl
pusha
shll
dec
dec
xchg
sbb
test
test
in
unpcklps
add
jecxz
out
push
xchg
je
xor
mov
lock
adc
fwait
pop
mov
cmpb
push
add
or
pop
dec
add
sbb
cmp
decb
enter
jmp
push
mov
sbb
inc
sbb
outsl
js
and
clc
mov
mov
test
add
pushf
int
mov
ss
lcall
xchg
out
mov
lahf
add
add
out
mov
jp
stos
ret
outsl
neg
es
mov
add
jnp
rcr
dec
dec
cmc
lcall
sbb
fs
lret
ss
xlat
add
adc
mov
mov
loopne
xchg
xor
loope
test
fsubs
inc
add
inc
jl
cmc
sbb
push
mov
fwait
xor
or
jle
add
cwtl
notl
adc
es
cmp
ret
int
movl
jecxz
orb
insb
sbb
xor
add
int3
xchg
je
inc
movsl
int
cltd
aaa
clc
call
nop
xor
int3
insl
enter
pop
xchg
pop
sbb
ds
xor
rcr
add
shlb
mov
pop
js
jbe
aaa
xor
mov
sub
add
dec
push
call
cmp
incl
cwtl
pop
into
add
add
mov
pusha
movsb
mov
jmp
fs
icebp
leave
add
lcall
and
dec
adc
add
sbb
mov
add
pop
jae
add
daa
xor
pop
bound
scas
hlt
mov
insl
add
xchg
cs
in
add
sub
xor
std
movsl
add
testl
add
mov
sbb
faddl
addb
xorb
and
add
vmovntps
rcl
sbb
out
ds
hlt
sti
xor
xor
mov
cwtl
add
and
xchg
pusha
push
inc
or
cmc
clc
add
int
add
cmp
cmp
mov
mov
sub
lods
dec
ret
xadd
loope
je
lock
call
data16
sahf
shl
jbe
sbb
adc
cltd
sarb
add
aad
dec
outsb
xor
adcb
popf
out
shll
or
xor
mov
lods
inc
push
mov
sub
rcrb
fsubrp
mov
pop
dec
add
add
xchg
adc
add
pop
add
ljmp
jnp
mov
or
aas
arpl
out
stc
cmp
in
adc
es
pusha
add
mov
arpl
adc
out
sarb
fmuls
into
adc
and
adc
ret
add
int
nop
xchg
ret
add
popa
jb
fstpt
push
jg
incb
cmpsb
ds
xor
mov
je
stc
or
push
lock
test
add
push
test
inc
sbb
inc
pop
jae
in
or
popa
push
ret
and
mov
addr16
pop
or
jecxz
addb
add
call
xor
pop
gs
pop
mov
mov
shrl
addl
lret
add
icebp
dec
roll
jge
inc
xchg
loop
add
lret
lea
in
jb
sub
push
out
cld
ret
mov
mov
mov
sarl
add
repz
dec
inc
mov
lahf
xor
and
push
ret
xchg
push
nop
add
pushf
jbe
push
fnsave
aas
repnz
sbbb
fiaddl
xchg
jae
hlt
and
leave
inc
sbb
faddp
aad
out
test
sub
sub
and
shrb
xor
pop
hlt
sub
mov
fiaddl
aas
call
test
lock
in
sbb
adc
rcrb
add
xchg
idivb
jl
mov
adcl
decb
xchg
fists
in
jl
add
push
in
push
ja
add
fs
dec
testb
push
add
stc
xorl
js
pop
mov
testb
cmpb
fwait
out
sbb
add
jg
add
scas
hlt
xor
dec
push
sub
iret
add
cmp
dec
bound
jp
and
add
push
xor
rolb
mov
int3
add
cmp
pop
pushf
daa
in
add
fsubrs
pop
add
rclb
lods
or
aam
in
sbb
dec
out
xor
popa
movlps
cmp
cmp
outsl
out
push
cmpsl
lea
call
scas
aad
or
cmpsb
xor
call
ljmp
push
or
aas
fadds
je
es
mov
push
pop
sti
and
out
hlt
add
push
shlb
cwtl
lods
add
movsb
repz
add
insl
ror
ja,pt
xchg
add
pusha
or
arpl
loop
mov
xor
push
js
nop
int3
add
lods
mov
cmp
movsl
xor
adc
jecxz
push
mov
adc
addl
add
pop
sbb
jo
push
cwtl
pop
inc
pushf
imul
int3
out
add
cld
and
shll
dec
mov
cmp
add
mov
cli
sbbl
push
xchg
test
xor
cltd
xchg
mov
fsubr
cmpsb
xchg
pop
add
stos
sub
inc
pop
popf
arpl
repnz
adc
les
add
push
inc
and
lcall
xchg
lahf
flds
dec
xchg
in
dec
mov
mov
rcrl
cmp
and
leave
negl
jnp
mov
pop
cmp
js
add
ss
mov
pop
adc
sbb
cwtl
push
cs
std
sub
add
xchg
and
fwait
dec
scas
sbb
jno
loopne
pusha
fmuls
pop
fsubl
jno
stos
push
repz
testl
jle
push
addb
pop
enter
mov
add
add
and
in
lcall
xchg
mov
push
rcll
dec
aad
add
xor
push
inc
jae
shr
nop
sbb
movsl
js
xchg
test
jb
or
fs
out
jge
cmp
addr16
int
scas
or
test
in
orb
pushf
add
inc
pop
adc
subl
jo
int
mov
loopne
test
popa
xchg
dec
add
fimull
and
cltd
mov
inc
inc
and
sub
sbb
jo
lcall
out
movsb
enter
in
and
mov
fdivrs
inc
mov
shll
aas
pushf
fildl
daa
sub
roll
in
cmpsb
js
inc
enter
mov
xor
add
dec
fcoms
testb
add
in
pop
stos
sarb
pop
adc
jnp
inc
add
pop
or
inc
in
mov
adc
add
aaa
cmc
sbb
mov
add
pop
ret
sub
jl
pop
inc
test
popa
add
mov
sub
jle,pn
rcll
jecxz
adc
mov
pop
inc
shlb
lcall
cmp
in
orb
or
aaa
loop
and
nop
inc
add
dec
sub
mov
lret
or
xor
add
das
aad
in
jmp
sbb
imul
sub
add
xchg
mov
call
jmp
data16
push
pop
cmpsl
lahf
add
and
data16
je
fcomip
insb
inc
jb
invd
and
pusha
jl
xor
add
jns
sbb
jo
loop
ljmp
push
jg
aas
repnz
sub
int3
mov
daa
push
mov
jns
in
inc
and
rolb
dec
dec
incl
inc
pop
popa
xchg
shlb
scas
xor
or
jae
addr16
idivb
clc
ficomps
inc
call
fisttps
sbb
pop
add
pop
xchg
aam
jge
cmp
mov
and
cmpb
xchg
dec
xor
jl
or
in
mov
roll
mov
outsb
cmp
repnz
mov
pop
cmp
into
insl
add
int3
imul
lock
add
sbb
popf
lods
add
cld
arpl
test
or
xchg
push
nop
js
and
add
sub
stos
fiaddl
pop
in
clc
js
jg
lea
fwait
in
aam
loopne
ss
push
adc
cmpsl
add
stos
mov
push
add
leave
sbb
cmp
add
popa
popf
daa
mov
add
outsb
push
roll
out
lret
lock
movsl
sbb
adc
mov
jecxz
cmp
aas
push
mov
std
sub
dec
or
roll
addl
sbb
loop
or
push
lds
pop
sbb
pop
fisubl
jo
push
nop
jnp
pop
cld
push
push
incb
xor
popf
mov
loopne
ljmp
sub
add
jg
sub
dec
mov
push
sbb
pusha
xorl
jns
ds
dec
movb
push
lret
sti
mov
cmpsl
mov
add
xchg
fsub
test
leave
mov
bound
adc
sti
scas
fmuls
xchg
lock
xor
outsl
jno
push
ret
sbb
out
roll
cmp
std
pop
dec
mov
adc
dec
pop
mov
bound
dec
pushf
mov
ror
mov
mov
hlt
jmp
pop
pop
out
pop
sbbb
jle
inc
rorl
xchg
dec
inc
add
iret
loopne
and
mov
add
movsb
ret
push
inc
es
push
int
aam
inc
cmp
movsl
push
ds
inc
rcl
pop
jae
or
mov
mov
mov
sub
repz
outsl
mov
in
push
or
fcmovb
movsl
mov
sti
push
jmp
mov
scas
clc
sbbl
sbb
inc
addb
sub
push
dec
sub
in
add
xor
jmp
xchg
add
leave
stc
cmp
in
push
add
int
pop
or
lahf
xor
mov
add
pop
pop
xchg
add
push
jo
xorb
cmpsb
pop
xchg
std
mov
rcl
mov
add
cmc
aas
js
sub
pop
inc
rolb
repnz
add
leave
cmp
add
sti
fneni(8087
sbb
and
add
lret
iret
cmp
bound
outsb
cmp
inc
pop
loope
xchg
test
add
mov
xchg
lods
fldt
cmc
push
and
and
adc
add
imul
iret
jle
movlps
jno
add
mov
add
xchg
rolb
mov
aad
loop
aam
sbb
loopne
add
push
push
ja
fs
lock
leave
xor
inc
and
shlb
call
pop
sbb
repz
cmpsl
mov
push
xor
lods
lahf
test
fwait
addr16
and
inc
je
add
ret
jmp
js
jle
mov
mov
cltd
xchg
mov
or
dec
btsl
add
xchg
adc
sub
arpl
inc
movsb
adc
add
shlb
loop
scas
lret
sbb
mov
mov
aaa
mov
or
jns
xor
pusha
sbb
loop
roll
nop
in
mov
mov
in
mov
inc
stos
or
lahf
out
xor
add
pop
sbb
das
cwtl
cwtl
and
in
jmp
outsb
add
scas
decb
shrb
out
shlb
push
add
add
aaa
xchg
movsl
add
push
call
test
pop
cmp
sbb
mov
sti
lds
andb
mov
cli
inc
std
cmp
stos
or
in
add
xchg
push
shrb
roll
inc
cwtl
mov
xchg
and
adc
mov
in
adc
fsts
inc
and
cmp
or
stos
adc
mov
mov
loopne
pop
cmp
mov
or
nop
flds
sahf
jns
or
add
xchg
xor
cs
out
add
insl
mov
cmp
jmp
push
inc
pop
nop
mov
jno
add
dec
pop
mov
or
loopne
clc
shl
or
jg
or
sub
loopne
js
adc
je
add
subl
fs
sti
cmc
enter
sahf
mov
mov
jp
jmp
aaa
imul
jmp
scas
in
lock
or
insb
or
out
add
scas
std
and
jo
dec
mov
lock
adc
int
add
hlt
mov
or
jmp
sbb
dec
jns
pusha
mov
inc
pop
addr16
sbb
rolb
test
repnz
pop
sbb
fcompl
add
popa
sbb
add
jge
xchg
add
je
int3
sbb
jb
sbb
add
rcl
inc
mov
add
enter
jp
add
and
gs
mov
ret
mov
and
popa
jno
lods
mov
fisubl
subb
inc
bound
test
sbb
xor
inc
add
lcall
pop
mov
jmp
jecxz
loope
aad
add
ds
sbbb
out
loopne
cli
xchg
call
jbe
jae
pop
popf
jmp
mov
out
add
jge
add
pop
nop
jne
pop
cbtw
mov
add
push
hlt
and
loopne
mov
nop
pop
add
or
fnstenv
cmpsl
add
fidivl
loop
orb
add
clc
add
jns
xchg
jg
jae
popl
add
data16
pop
jecxz
add
out
adc
jle
test
cmpl
test
jb
pop
jmp
add
fdivrp
xchg
jecxz
mov
xchg
out
mov
pusha
inc
xchg
sub
add
xchg
pop
adc
jmp
or
frstor
dec
pop
push
adc
stos
push
fiadds
ljmp
push
dec
push
lret
pop
in
iret
jmp
inc
data16
sub
and
xchg
insl
gs
xchg
in
add
leave
push
mov
fdiv
add
dec
sarl
add
out
lock
and
movsl
nop
add
in
stos
mulb
into
jl
sub
loope
pop
push
data16
jge
repnz
gs
or
filds
mov
mov
in
add
test
sub
data16
cmp
lcall
orb
repz
sub
adc
movsl
pop
loopne
test
sbb
dec
xchg
in
je
sahf
or
pop
mov
pop
add
loope
mov
mov
dec
pop
mov
lock
cmp
addb
xor
setp
mov
lds
movsb
mov
mov
scas
adcb
add
pop
int3
adc
and
movl
jae
cmp
cmc
rcrb
testl
sbb
lock
adc
and
enter
add
jae
clc
add
in
dec
add
sti
dec
pop
adc
sbb
add
pusha
jl
add
push
pop
dec
push
xchg
adc
imul
cli
pusha
adcl
mov
sbb
adc
test
inc
jae
mov
push
or
fbstp
and
pop
clc
add
mov
mov
mov
xor
add
inc
xor
jmp
and
pop
mov
jns
xor
nop
dec
stc
das
hlt
enter
insl
sbb
dec
sub
stos
pop
xchg
shlb
cmp
orb
jb
mov
mov
inc
push
sub
add
mov
in
rolb
xchg
cmp
dec
sub
imull
movsb
sahf
dec
fbstp
lods
pop
aas
pushl
mov
pop
jge
fistpl
xorb
and
mov
sbb
push
push
cmp
imul
mov
lods
fsubr
movsb
add
dec
lock
jo
arpl
inc
cmp
cmpb
mov
push
mov
mov
and
inc
test
and
ss
jle
pop
shlb
jecxz
push
push
sub
pop
or
mov
xor
repz
sbb
icebp
mov
inc
jbe
mov
sbb
xchg
loope
jnp
push
cwtl
add
adc
in
call
mov
jnp
add
mov
mov
mov
sub
push
jno
cmp
sub
sbb
es
jo
jo
ljmpw
adc
xchg
stos
push
jae
in
shlb
add
mov
cmp
pushf
sarb
add
pushl
fwait
jle
add
cmp
cmp
push
push
or
ja
dec
sarb
add
mulb
or
cmp
cmpsl
xchg
xchg
imul
xor
and
out
pop
jb
hlt
mov
mov
pop
bound
outsb
mov
shrl
fldcw
iret
inc
pusha
pop
jo
pop
cmp
push
mov
dec
iret
pusha
and
add
outsb
pushl
sub
fsubrl
xchg
rcl
out
dec
add
xlat
insb
cs
lret
xlat
and
leave
pop
add
mov
mov
mov
repz
lock
mov
add
sbb
hlt
inc
fcompl
xor
jg
cmp
push
incb
or
adc
dec
jne
stos
add
cmpsb
sub
jecxz
add
ror
cmp
mov
enter
or
stc
adcb
shll
add
icebp
aaa
pop
jp
mov
mov
sub
jl
arpl
xlat
into
adc
jb
push
test
aad
cld
pusha
lods
xchg
dec
add
xor
push
pop
frstor
add
into
js
add
mov
clc
jg
lcall
andb
add
sub
clc
mov
test
in
xchg
ljmp
inc
lock
sbb
inc
push
shrl
loope
popa
mov
mov
add
dec
jbe
add
out
cmp
add
fimuls
sbb
sub
add
jnp
add
dec
jo
push
pushf
ja
sbb
sbb
adc
sbb
xor
jecxz
js
outsb
inc
std
add
xor
aad
adc
data16
daa
dec
add
in
sbb
inc
flds
xchg
push
arpl
imul
inc
enter
lcall
mov
push
cltd
xchg
lahf
je
push
loop
pop
dec
and
mov
pop
lret
test
aad
int
sbb
lods
push
xorb
add
addb
xor
xchg
push
ficoml
and
dec
subb
mov
dec
aaa
lock
sar
and
lret
add
mov
adc
movsl
push
addr16
shlb
data16
cmp
add
lahf
dec
cmp
in
add
in
jnp
enter
loopne
mov
rolb
int
xor
les
mov
dec
add
test
das
dec
test
fldenv
rcll
sahf
lods
push
mov
jae
or
xchg
shlb
ret
je
or
sub
add
insl
mov
repnz
push
inc
leave
mov
mov
jle
decb
pop
imul
ret
loopne
js
ja
inc
lods
ljmp
in
xchg
imul
add
cld
add
mov
insb
outsb
mov
out
add
cld
iret
push
loop
sbb
movsl
xor
pop
sbb
icebp
in
sbb
imul
add
add
frstor
inc
mov
cmpsl
mov
or
lods
push
adc
add
call
xor
adc
pushf
outsb
add
xchg
add
xor
jnp
cs
or
in
aas
add
mov
dec
lcall
mov
mov
iret
ljmp
jns
add
jae
movb
fsubl
loope
movsb
fs
add
pushf
or
test
xor
gs
test
dec
add
dec
xchg
adc
jp
and
lea
out
lods
dec
mov
lcall
jb
rolb
jge
and
cmp
dec
and
shrd
xor
inc
push
filds
in
std
inc
jmp
call
jecxz
add
fstps
pop
cli
orb
int
jge
cmp
imul
dec
dec
add
leave
cltd
dec
hlt
shl
add
and
and
imul
or
xchg
sub
fiaddl
mov
pop
add
push
add
je
fsubl
or
inc
inc
scas
add
test
adcb
dec
mov
aas
outsb
cld
push
add
and
jge
pop
out
adc
add
dec
pop
out
cwtl
add
es
mov
cmp
dec
jmp
mov
jno
ja
xor
outsb
mov
push
sbb
push
pop
add
add
xor
add
add
outsl
aad
test
jecxz
out
cld
stos
rolb
test
push
dec
div
add
daa
into
call
testl
cmpb
bound
inc
push
sub
mov
fmuls
sub
pop
sbb
adc
outsl
add
xor
in
add
test
and
adc
add
sbb
cmc
sahf
rolb
lea
add
repz
mov
add
mov
fisubl
or
xor
xor
cs
imul
sub
cmp
inc
jnp
mov
push
lret
shll
mov
sub
add
movsl
adc
inc
scas
addb
int
fsubp
mov
push
shlb
push
sahf
mov
add
or
movsl
jb
shrl
icebp
pusha
mov
or
cmp
adc
and
ljmp
popl
mov
sbb
es
lock
repnz
cmc
push
adc
pop
jg
add
int3
push
out
add
shrb
xchg
test
dec
cmp
ja
jne
mov
pop
arpl
icebp
jecxz
out
insb
pop
xor
stos
clc
add
jp
mov
sub
idiv
loopne
ja
or
or
sbb
mov
loop
lock
iret
cmp
xchg
cwtl
xor
push
out
and
mov
insb
mov
popa
fsin
xorb
mov
ss
push
mov
pop
pop
jecxz
push
add
test
adc
sarb
lcall
adc
xor
nop
mov
mov
add
adc
enter
xchg
cmp
mov
popf
add
jmp
test
rcrb
popf
pusha
add
int
mov
imul
xor
jl
or
cwtl
lock
insb
jb
add
lret
ljmp
icebp
push
cmp
cli
pop
mov
and
or
or
sarb
add
mov
sub
pushf
pop
popa
imul
or
scas
xor
popf
iret
int3
dec
xor
cmp
dec
cmp
andb
inc
shr
add
add
jp
imull
test
ret
icebp
and
add
add
mov
es
cmpsl
push
add
and
xor
or
adc
mov
xlat
pop
dec
notb
and
jl
lret
cmp
sbbl
jmp
inc
adc
mov
add
icebp
test
mov
jmp
mov
jle
inc
mov
mov
in
pop
loopne
in
xchg
test
out
ret
mov
in
daa
shr
ss
add
jne
cmp
and
add
js
int
push
cmp
aaa
pop
pop
ret
mov
add
or
jne
add
hlt
pop
shrl
mov
in
inc
sbb
jle
call
fistl
sahf
not
inc
or
rclb
and
mov
mov
mov
imul
adc
adc
or
xor
add
push
enter
cmp
dec
add
cmp
jle
mov
mov
mov
mov
fdivrl
sub
add
jnp
add
inc
lds
jno
add
les
es
imul
sbb
push
cmp
jecxz
into
xor
dec
int
cmpsb
cmp
aam
push
enter
dec
mov
or
daa
insl
shlb
xlat
add
inc
mov
add
test
mov
inc
jecxz
mov
pop
cs
push
mov
xor
add
daa
add
inc
dec
inc
fdivrl
xor
push
stos
std
cmpsl
hlt
mov
cmp
add
stos
aaa
insb
aam
mov
pop
add
les
jmp
and
add
adc
xor
pop
xor
mov
mov
insl
add
fucomip
xor
lret
out
or
adc
mov
bndldx
test
scas
inc
jmp
xchg
in
mov
add
add
push
cltd
nop
stos
hlt
mov
clc
dec
add
sahf
mov
popa
adc
sti
movsb
hlt
add
dec
lahf
and
fnstcw
inc
xchg
and
out
lds
sub
sbb
pop
or
pop
data16
or
and
push
jg
cmp
in
out
add
cwtl
lds
aas
cmp
and
aaa
pusha
mov
xchg
inc
arpl
cmp
add
cltd
mov
repz
rol
arpl
inc
mov
cwtl
subb
daa
jnp
dec
andl
repz
arpl
add
sbb
int3
xchg
fninit
test
in
pop
call
pop
mov
sarl
fwait
sarb
cld
lea
lret
mov
add
inc
fcomp
roll
sbb
aaa
jbe
add
js
rcl
daa
fiadds
cwtl
sub
setb
add
fcmovbe
lret
inc
mov
insl
jae
mov
xlat
push
bound
add
int3
cmpsl
cmp
lea
lret
ficoms
insb
add
popf
rolb
mov
loop
cld
dec
out
xchg
add
add
add
pop
test
popf
js
and
les
cmp
roll
pop
mov
push
mov
xor
call
enter
push
insl
int3
cmp
decb
rcrl
xor
fimull
inc
sti
push
cld
add
movsl
aad
push
adc
in
adc
push
or
iret
loope
jg
mov
pop
test
mov
add
mov
sub
shl
add
lahf
sub
adc
filds
add
cmpb
cmp
aad
in
cmp
test
and
xchg
sbb
maskmovq
mull
stos
icebp
bnd
add
or
and
daa
les
xor
xor
cs
out
dec
sub
push
int3
or
jbe
pop
or
add
mov
lds
clc
add
out
mov
adc
idiv
pop
ljmp
jp
test
jmp
mov
pop
jo
cmp
hlt
loop
sbbl
mov
and
push
jmp
add
adc
pop
stc
add
icebp
mov
add
mov
fs
inc
mov
mov
mov
insb
loopne
sub
mov
dec
pop
pop
cmp
dec
adcl
mov
or
jo
shll
add
lods
adc
daa
test
sbb
jl
cli
adc
in
divl
outsl
js
pop
movsb
and
addr16
or
jno
adcb
test
ja
sbb
pusha
dec
in
jl
add
inc
andl
enter
fmuls
gs
sub
hlt
jecxz
xor
add
pop
dec
push
lds
popa
fstpl
daa
xchg
in
shrb
xor
jbe
outsl
add
bound
mov
jp
int3
xchg
mov
xor
adc
in
call
les
mov
orl
shlb
es
inc
xchg
and
or
lock
shrl
aas
aad
lock
movsb
add
push
mov
adc
sbb
inc
add
test
adc
iret
and
xor
call
add
scas
call
push
test
mov
add
xchg
in
pop
sbb
lret
dec
test
scas
add
push
stos
inc
and
xchg
fmull
mov
sbb
pop
testl
mov
loopne
dec
nop
add
mov
mov
mov
add
sbb
fcmovb
add
cmp
add
bound
adc
and
add
scas
add
and
mov
popf
test
cli
mov
enter
das
iret
gs
jl
inc
cltd
xchg
movsb
loope
in
jmp
in
add
iret
push
push
jmp
add
pop
dec
mov
jo
stos
mov
add
lock
call
add
jl
push
xchg
jo
mov
jnp
and
mov
or
out
and
call
inc
inc
or
push
mov
pop
xchg
inc
data16
push
jae
xchg
clc
mov
outsl
loop
cwtl
cld
add
negl
in
mov
jo
faddl
jge
dec
mov
fisubrs
mov
jmp
addr16
xchg
in
jno
or
call
xor
jb
mov
adc
aam
push
add
mov
testl
cmp
mov
hlt
sbb
sbb
xchg
mov
insb
dec
or
pop
mov
sub
jl
add
pop
add
add
xor
into
pop
popf
or
push
inc
inc
addr16
xchg
add
or
test
scas
je
dec
mov
jns
add
inc
leave
jo
xor
add
push
dec
push
sbb
mov
add
and
aam
or
pop
iret
enter
add
mov
cmp
add
call
or
repz
fisubrl
gs
jge
and
ds
sbb
idivb
jg
je
rcrb
testl
loopne
outsb
sbb
jmp
or
mov
jne
add
xchg
int3
pop
jg
icebp
and
add
push
fnstenv
pop
or
mov
movsl
sbb
mov
faddl
sub
adc
sbb
xchg
add
cmp
mov
stc
xor
sbb
in
and
pop
insl
rcr
pusha
ret
mov
pop
pop
mov
loopne
dec
push
pop
nop
jo
push
cs
je
jne
mov
das
in
xorb
pop
cmp
addb
jno
ja
add
push
outsb
leave
adc
mov
push
dec
sub
or
sbb
mov
xchg
or
push
cmp
and
insb
adc
popf
imul
add
xchg
jp
sub
mov
cld
sbb
adc
or
adc
jbe
fdivr
insl
adc
je
sbb
in
add
nop
mov
add
or
sbb
xor
je
lds
jg
xchg
mov
mov
jb
aad
loopne
xchg
add
lods
mov
pop
pop
jno
xchg
sub
push
decl
repz
dec
out
mov
mov
add
outsl
mov
push
mov
pop
jnp
or
push
xchg
test
add
mov
cmp
aad
push
sub
jb
xchg
outsb
sub
cmp
fldl
jge
pop
pop
jno
jnp
mov
sbb
in
fldl
sbb
adc
pop
popf
pusha
icebp
cwtl
xor
jno
ja
push
loop
add
sub
jg
inc
ds
xor
out
and
or
mov
and
dec
imulb
repz
aad
sub
xorl
sbb
ret
add
sahf
jl
inc
stos
or
push
fdivrp
sub
jg
add
pop
insl
cmp
popf
popa
jne
mov
inc
sub
add
or
mov
dec
xor
push
mov
adc
dec
flds
pop
push
push
fisttpll
add
rcrb
bound
and
rorl
push
xchg
add
push
dec
andb
xchg
sub
pop
test
inc
add
pop
jge
inc
test
add
pop
leave
jnp
pop
jge
cmp
mov
and
outsl
pop
loopne
jno
test
push
gs
sti
mov
and
pusha
add
mov
xchg
sbbb
add
pop
add
arpl
xchg
cwtl
xchg
jge
add
cmpsl
pop
js
mov
and
aas
add
sbb
pop
or
pop
push
ljmp
mov
and
jg
lret
negl
subb
fucomi
shlb
adc
dec
rcrl
or
add
stos
pop
pop
push
sub
sub
add
cmpsl
ret
out
add
hlt
sbb
out
js
and
xchg
and
fwait
roll
sub
ficompl
jmp
jo
inc
stos
test
sar
add
fs
call
int3
add
add
pop
mov
je
or
add
jne
aaa
frstor
nop
out
test
pop
je
cli
pop
cmp
sub
clc
dec
add
fmuls
popa
xchg
adc
aam
inc
fcompl
stos
xchg
add
xor
roll
cmp
sub
aad
addr16
mov
or
lret
repnz
mov
shll
sub
ljmp
pusha
and
es
call
and
push
sub
push
add
addb
scas
enter
push
lea
stc
add
js
jbe
pop
fucomip
push
clc
cmp
imul
lahf
sub
dec
sbbl
mov
ror
push
lret
or
pop
in
add
push
mov
bound
and
inc
adc
and
cmp
cmp
inc
imul
and
loopne
mov
hlt
add
cltd
repz
xchg
ret
into
add
btr
add
push
clc
enter
and
daa
mov
sbb
ja
jnp
mov
add
push
mov
in
repz
pop
sbb
rorl
mov
sub
xchg
imul
add
roll
ljmp
imul
push
mov
and
cmp
roll
mov
movsb
out
dec
cmpl
dec
add
cmc
out
pusha
dec
push
in
adc
or
aaa
ljmp
xchg
lcall
cld
and
and
push
int3
imul
js
add
jg
enter
dec
aad
add
xchg
jbe
negl
mov
pushf
shrb
sbb
mov
in
mov
or
mov
adc
nop
in
mov
repz
call
or
xor
ret
mov
xchg
addr16
sbb
in
xor
test
lds
addb
notl
ja
jb
lret
bound
dec
lea
mov
sub
push
test
lret
mov
sbb
or
pop
fs
outsb
pop
sbb
add
mov
xchg
inc
int3
sbb
lods
add
loopne
and
push
inc
pusha
inc
jnp
pop
test
daa
leave
inc
mov
cli
in
pop
fst
mov
add
xor
lock
adc
clc
add
pop
or
jle
outsl
adc
push
add
loopne
lea
or
ja
pop
jo
aas
inc
repnz
rcrb
pop
pop
ror
add
mov
ficomps
movsl
or
pop
adc
jmp
std
add
jle
mov
cli
repz
push
add
jo
xchg
cmp
mov
push
push
xorb
inc
les
test
imul
pop
add
sbb
outsb
faddp
add
pop
xchg
add
xchg
int3
or
jb
in
add
sbb
xor
pop
call
push
cmpsb
movsb
nop
mov
inc
add
hlt
js
xor
add
push
outsb
dec
push
mov
les
mov
cmp
clc
ja
jecxz
cmp
iret
dec
pmuludq
mov
push
loopne
out
inc
add
or
jl
cmp
movb
outsb
sub
adc
xor
loope
sarb
add
pop
hlt
add
pop
stos
mov
sbb
lods
push
inc
test
pop
push
lock
lock
mov
add
jb
and
xor
insb
mov
pop
push
pop
xor
cld
pop
pop
es
ss
pop
cmp
add
add
xor
fimull
hlt
add
mov
pop
lcall
out
cli
nop
sub
add
test
inc
enter
xor
test
loop
add
stos
loop
mov
add
ret
sbb
insb
add
lret
fmull
push
fadds
inc
scas
out
dec
sahf
push
or
xchg
or
or
xlat
xor
sbb
fs
sbb
cld
add
out
mov
or
jns
xor
cmpsl
jnp
or
add
ss
sub
imul
sti
incb
adc
sub
rolb
mov
mov
cltd
add
push
in
jae
scas
xchg
add
pop
inc
mov
cwtl
dec
add
mov
mov
ja
or
push
pop
lds
adc
jp
add
lcall
jno
and
out
ret
enter
or
pop
cmp
sbb
jbe
add
or
sti
push
pop
inc
xchg
ljmp
sub
mov
jns
and
sarb
aaa
mov
add
imull
dec
push
mov
clc
pop
aad
sub
fsubl
push
add
test
outsl
stos
sbb
adc
and
and
or
rolb
add
int3
jb
cmpsl
das
call
or
sub
andb
mov
adc
add
insl
mov
out
or
js
lea
fstpt
add
popa
je
dec
jne
lock
insl
push
push
shl
mov
mov
outsl
bound
jp
or
jg
mov
add
fldt
sub
dec
jne
add
cli
mov
pop
and
scas
leave
sub
jbe
push
lcall
add
xchg
cmp
jb
and
adc
leave
sbb
pusha
rorl
cld
mov
mov
push
hlt
mov
cltd
add
orl
cmp
imul
adc
or
mov
icebp
jg
mov
loop
inc
stos
or
add
in
jns
nop
movsb
or
popf
push
push
sbb
jnp
in
fildl
movsl
push
or
mov
pushf
add
cld
lahf
xorb
adc
rclb
in
hlt
add
add
push
cmpsl
out
leave
push
enter
add
in
dec
das
add
fs
lock
inc
rolb
adc
lea
iret
add
xor
add
dec
mov
pop
clc
lds
mov
xor
push
mov
loopne
mov
lock
leave
sub
mov
dec
pop
mov
xor
jp
add
push
mov
leave
popf
inc
fcomi
subl
dec
flds
enter
fmull
add
lods
shl
dec
mov
cli
dec
add
adc
fstpt
repz
mov
push
mov
xor
mov
mov
mov
and
pop
scas
xor
movsl
mov
sub
push
clc
movsl
add
in
pop
mov
fstpt
push
lcall
and
and
cmpsl
xchg
sbb
imul
mov
les
shlb
ljmp
lods
data16
sub
or
sbb
add
xchg
insb
cmp
cmp
pop
xchg
inc
adc
es
mov
jbe
jl
cld
outsl
add
movsb
ljmp
shll
sahf
adc
ljmp
pop
imul
negl
andl
cmp
fstp
cli
vphaddbd
dec
mov
roll
ljmp
loopne
scas
pop
or
inc
dec
movsb
add
lds
sbb
inc
rol
xor
or
in
xchg
dec
xchg
jg
and
pop
ss
addr16
loopne
cld
nop
xchg
add
fimull
xchg
mov
pop
cli
mov
pop
es
cs
cmp
insb
cmp
cmp
and
out
or
popf
pop
sub
mov
orb
add
sti
daa
cli
fdiv
flds
aad
lds
lret
add
aam
jb
test
imul
orl
shrl
lcall
and
adc
add
cmp
stos
or
rorb
inc
int3
daa
pushf
subb
push
adc
or
and
xorb
pop
push
add
pop
cmpsl
xchg
jl
cmp
pop
icebp
sbb
adc
pop
mov
add
push
bound
out
add
in
xor
mov
inc
xchg
lea
into
pop
fwait
es
vcmpsd
cwtl
cmp
jmp
ljmp
int3
jle
sbb
stos
mov
cmp
sbb
adc
pop
stc
out
add
fcompl
cmpsl
loopne
cs
and
jae
and
call
lea
pop
xchg
pushf
fsubrl
add
add
lret
add
repnz
out
addr16
mov
sbbl
inc
in
fsts
add
and
add
mov
dec
lods
lock
fcoml
jo
js
mov
inc
sbbb
xor
shrb
add
push
int
push
fiaddl
scas
jmp
pop
enter
adc
jb
xchg
inc
iret
js
mov
hlt
mov
xorb
rolb
sub
pusha
pusha
insb
fadd
xor
je
add
xor
aam
scas
mov
mov
mov
add
or
and
and
mov
jp
pop
mov
es
xchg
arpl
les
pushl
fcmovu
pop
dec
mov
mov
and
je
sarb
in
ljmp
push
fs
int
clc
ja
add
mov
or
cld
and
es
inc
xor
int
xchg
imul
test
into
jecxz
inc
mov
pop
inc
push
jo
pop
inc
jle
ret
repz
test
pop
addb
out
lock
sbb
and
xor
dec
add
jno
mov
mov
mov
cmp
cs
jb
jbe
loop
inc
iret
repnz
push
dec
add
pop
add
fidivl
add
mov
js
fwait
hlt
add
cmp
add
adc
pop
loopne
inc
stos
sbb
icebp
stc
scas
lock
push
sub
daa
ret
xchg
fdivl
cmpb
add
cmp
dec
add
cmp
mov
dec
je
cs
inc
incl
call
xor
dec
add
sahf
jns
hlt
xor
stos
scas
add
mov
incl
pop
js
xchg
sarb
popf
lods
fs
mov
icebp
mov
inc
dec
cs
push
adc
aaa
lsl
pop
xchg
pushl
cwtl
imul
xchg
out
stc
jle
les
lret
add
popf
in
scas
sbb
jge
add
bound
push
loope
adc
xlat
xor
sbb
in
loop
cmp
or
out
mov
std
ljmp
add
push
ret
leave
cltd
movsb
add
sbb
aas
loop
adc
mov
add
mov
sbb
cmpb
test
sbb
jns
dec
ltr
mov
cmp
add
mov
push
push
add
xchg
and
jge
and
cs
lds
mov
add
int
xor
xchg
jmp
dec
xchg
jp
jmp
movsl
adc
dec
dec
js
pop
out
add
add
pusha
dec
xor
inc
sub
or
fcomi
xchg
insl
test
xor
lods
pusha
fldl
clc
loope
mov
push
cs
xchg
add
mov
push
test
push
test
fcmovb
mov
jo
cmpsb
mov
idivl
xor
std
aad
in
jae
pop
loop
add
jmp
cld
cwtl
sub
push
add
dec
mov
add
cmp
int
dec
test
stos
sbbb
add
push
dec
add
sub
dec
inc
add
or
arpl
dec
pusha
push
mov
add
ret
mov
inc
nop
sub
fsubs
insb
add
sbb
clc
or
lock
jecxz
loopne
fcoml
aas
popa
cmpsl
jle
mov
test
dec
inc
xchg
push
add
sbb
xchg
push
sub
fsubs
fldenv
fstp
mov
out
pusha
cld
cmc
mov
or
cwtl
mov
imulb
add
jl
lock
fdivs
pop
push
cltd
and
test
pop
xorl
jmp
add
outsl
add
dec
scas
jo
rorl
mov
test
mov
xchg
or
add
stc
ja
test
inc
orb
pop
add
add
cmp
les
inc
pop
fdivrs
daa
fs
shrb
add
out
sbb
cmc
pop
inc
ja
inc
loopne
adc
inc
mov
add
lret
call
add
push
push
mov
fistpll
fsubrs
or
sub
sub
add
and
shl
ljmp
mov
jg
sbb
fstl
hlt
fwait
addb
ljmp
pop
stos
push
inc
inc
xchg
es
cmp
add
inc
insl
add
or
call
loopne
popf
dec
ds
add
xor
pop
rcrb
push
cmp
stos
fs
jo
imul
cmp
or
shrl
scas
push
jmp
sbb
rclb
xor
roll
push
cmp
jnp
out
enter
sub
mov
and
into
cltd
ret
rorl
sbb
int3
cmp
push
ja
ss
rolb
enter
jno
jle
sbb
stos
pop
mov
repnz
and
cli
or
mov
mov
mov
into
jmp
es
lahf
loopne
std
in
push
push
andb
wbinvd
xor
and
cwtl
lret
xchg
addr16
lea
mov
scas
or
mov
lds
pop
je
out
mov
jl
push
add
cli
push
leave
jmp
cld
add
push
ret
mov
mov
xor
add
sub
enter
and
sbb
mov
rcl
and
js
or
call
adc
shlb
xchg
inc
jmp
lock
inc
add
aam
testb
add
loop
ret
xchg
pop
sbb
jg
imull
xlat
ss
cmp
pop
dec
cmp
loopne
jp
add
mov
push
dec
sbb
in
std
sub
cld
cs
enter
enter
mov
pop
adc
pop
lcall
xor
add
nop
stc
mov
xchg
dec
add
add
sub
inc
adc
jecxz
call
xchg
ja
loop
addr16
cmp
lcall
jp
test
fs
or
xchg
dec
cli
and
out
movsb
xor
xor
in
sub
jge
pop
arpl
or
cmp
jno
ret
cmpsb
in
rorb
add
dec
int3
xchg
lods
dec
inc
push
inc
out
mov
or
jecxz
sbb
sbb
inc
cli
xchg
clc
std
add
mov
movlps
fildl
inc
fdivs
out
xor
cmp
add
inc
lods
sbb
jo
cmc
scas
sub
sti
add
and
inc
add
mov
clc
mov
data16
sbb
mov
int3
je
adcb
test
sub
repz
or
push
cs
fiaddl
add
jmp
dec
lea
out
xchg
inc
enter
add
imul
xor
aad
add
pusha
jno
pop
adc
jl
das
in
or
jo
xor
call
or
adc
je
or
movsl
les
cmp
das
subb
push
cmp
jmp
add
push
popa
add
outsl
add
mov
lahf
pop
add
xor
xor
outsb
int
xchg
mov
adc
aam
nop
xchg
dec
dec
arpl
jp
add
test
or
adc
dec
add
mov
cmp
ret
sub
jg
add
cmp
ret
icebp
mov
or
cmc
js
loop
add
jge
aad
fwait
iret
and
movsb
xor
mov
lock
bound
popf
mov
out
ds
xchg
or
add
clc
ja
leave
cmp
pop
and
xor
add
xor
inc
lds
sub
test
add
popa
adc
sahf
lcall
or
sbb
movsb
inc
add
shl
jmp
in
add
dec
xchg
std
das
sub
scas
int
add
push
add
mov
add
push
or
or
pop
jb
test
test
dec
jo
mov
xor
shll
jp
mov
and
jns
addr16
add
movsl
repz
sub
add
push
out
or
pop
inc
jae
xor
cltd
xor
scas
inc
mov
adc
adc
cmp
jo
jae
sbb
xor
dec
pushf
pop
addr16
repnz
leave
xor
jl
xchg
push
loopne
cmp
ss
lret
jge,pt
lods
test
add
add
pop
cmp
add
sub
cli
sbb
mov
or
and
ret
pop
jp
sbb
jno
inc
sub
mov
dec
outsb
mov
push
lcall
or
cmp
int
add
inc
outsb
cmp
aam
ja
push
lret
ljmp
aam
inc
clc
xchg
in
loope
pusha
mov
loopne
xchg
add
cld
fbstp
shrl
sarl
add
pop
lcall
test
push
pop
or
pop
mov
add
add
repnz
loopne
or
sbb
mov
bound
nop
mov
ror
enter
mov
movsb
lods
imul
out
adc
ret
push
div
jg
push
mov
loop
or
mov
fsub
lods
out
call
jne
jae
add
add
pop
sub
and
adc
mov
iret
or
sub
call
add
movsl
cmc
in
or
jge
add
or
jns
je
inc
or
mov
cld
or
mov
pushf
fs
fsub
pop
pop
int
mov
cmp
leave
hlt
ret
addl
mov
jp
push
in
enter
cmp
mov
fbstp
add
ret
fs
in
sub
sbb
mov
cld
dec
mov
cld
cmp
or
mov
sbb
and
xchg
sub
sbb
fwait
add
adc
scas
out
sbb
cld
add
xor
cmp
cmp
lcall
inc
cltd
loopne
pop
insb
shrl
in
mov
inc
adc
repz
pop
inc
push
cmp
gs
and
jae
jg
or
xor
mov
adc
aaa
mov
push
sub
adc
mov
imul
push
push
mov
insl
xchg
dec
inc
mov
popa
inc
mov
xor
xor
frstor
test
movsl
jbe
add
push
push
lret
add
mov
test
addr16
and
pop
out
cmp
add
mov
cmc
addl
ret
add
dec
out
aas
loope
add
jnp
mov
lcall
push
mov
scas
add
mov
rorb
and
stos
mov
and
add
jp
add
push
xchg
outsb
orl
das
add
in
fwait
ds
in
gs
pusha
imul
and
jmp
push
nop
jge,pt
adc
pop
lret
push
push
mov
fwait
inc
cmpsl
inc
pop
mov
xchg
add
dec
dec
add
inc
mov
sub
mov
inc
dec
icebp
shr
roll
xor
cmp
fildll
lock
add
pop
add
adc
inc
daa
mov
insb
fsubs
enter
insl
jle
adc
out
inc
xchg
cld
test
loopne
fadds
lret
mov
pop
out
add
and
adc
sar
or
std
add
inc
jbe
and
les
outsb
inc
sub
cld
int
je
je
push
push
fiadds
mov
sbbb
stos
lcall
rorb
mov
or
imul
enter
xor
pop
pop
mov
jns
pop
add
fldl
mov
mov
in
pop
xchg
add
sbb
push
fcmove
jne
cmp
push
add
pop
jns
sbb
arpl
lods
filds
jge
add
fmul
pop
add
mov
mov
add
stos
scas
fcompl
hlt
xchg
aad
sti
mov
or
loopne
ja
pop
adcb
leave
loop
jl
add
cmpsl
fs
int3
push
aad
add
mov
loop
insb
xchg
daa
mov
dec
cmp
mov
and
add
mov
mov
fs
lea
pop
pop
lock
daa
fcoml
subb
adc
sbb
push
pop
pop
push
out
dec
cwtl
and
mov
xchg
daa
outsl
aaa
roll
sahf
jo
aas
pusha
ljmp
ja
arpl
lcall
jl
test
add
xor
scas
mov
in
pushl
popa
adc
mov
push
mov
daa
pop
adc
push
push
aas
sbb
in
lret
cmc
cs
imul
xacquire
and
jnp
pop
add
pop
add
in
mov
loope
mov
inc
lret
add
mov
clc
sub
pop
add
filds
in
jmp
aam
push
addr16
lods
add
sub
cmp
jo
pop
lret
push
repnz
adc
jb
sub
pop
add
jle
aam
add
lahf
js
or
add
dec
push
lret
lea
cmp
push
lock
sub
ret
sub
cmp
mov
rolb
fs
mov
jmp
lcall
mov
out
pop
xchg
testb
pop
das
push
mov
orb
call
add
aas
jmp
mov
lock
lea
push
cld
movhlps
es
andb
jle
sbb
pop
insl
inc
arpl
mov
pop
or
dec
ret
sbb
faddl
inc
jbe
xchg
and
xor
sub
mov
mov
dec
aaa
add
mov
dec
insl
mov
xor
incb
add
inc
iret
push
mov
lret
pop
mov
pusha
cmp
imul
xchg
pop
out
or
imul
adc
pop
pushl
int3
rcrb
or
xchg
cmc
aaa
js
dec
lock
add
adc
push
sbb
les
ja
das
pusha
sarl
sti
cmp
add
daa
xchg
lock
push
movsl
testl
inc
gs
add
xchg
inc
rcll
add
pusha
scas
push
nop
jg
int3
add
mov
jmp
jmp
xor
inc
add
adcb
cmp
inc
ror
fwait
push
test
in
sti
lahf
add
mov
enter
cmp
sub
sbb
push
jp
add
in
add
rolb
movb
xchg
out
add
test
mov
xchg
xorl
aam
stc
jnp
into
cli
xchg
inc
jbe
jge
ja
add
inc
shrb
mov
leave
pop
xorb
push
add
lea
mov
push
jb
sysenter
aaa
pop
add
cmpsb
adc
lock
adc
inc
addb
iret
divl
xorb
add
cltd
cmp
insb
add
pushl
xlat
test
xchg
movsl
mov
popf
or
insb
call
iret
or
push
rolb
data16
ja
mov
xlat
popa
inc
pop
mov
sahf
incl
adc
push
add
or
pop
lahf
ljmp
lret
popa
cmpsl
sbb
pushf
testb
cmc
jecxz
and
jle
sub
scas
cltd
notl
cmpsb
pop
pop
add
xchg
ret
rsm
out
stc
or
cmp
in
lret
cli
push
addr16
xor
dec
ret
mov
sub
je
or
jl
rolb
lea
test
pusha
dec
adc
sub
lock
add
jmp
xchg
mov
jns
push
xchg
add
cmp
sub
stos
sbb
jecxz
and
das
add
rcll
test
mov
pop
loope
push
jne
stos
push
movsl
cld
std
cmpsl
ret
nop
cmp
jbe
or
and
and
in
test
push
fwait
dec
stc
mov
jne
je
or
push
lret
mov
sbb
mov
mov
xchg
mov
sub
add
pop
in
pop
and
call
js
add
xchg
mov
shrl
fimull
or
add
and
scas
icebp
add
popf
lds
lcall
insl
lods
add
sub
add
call
repz
cmc
mov
mov
add
mov
jo
xor
jns
lock
loope
push
inc
add
add
mov
subb
outsb
nop
xchg
add
inc
add
aaa
stos
rolb
inc
inc
repnz
jp
imul
addr16
sbbb
lahf
repnz
ljmp
add
ljmp
repnz
dec
push
xchg
add
into
push
add
mov
pop
scas
iret
inc
add
pop
or
add
xrelease
pop
dec
in
ja
imul
mov
into
pusha
pop
pop
sub
xchg
pop
lcall
rol
push
mov
inc
jo
stos
pop
fiaddl
cli
sbb
or
add
aad
add
pop
rcr
sub
xchg
or
jle
mov
adc
test
ret
cltd
pop
cmp
cmpb
jns
mov
or
icebp
gs
daa
mov
push
push
jb
mov
jp
loopne
decb
jo
mov
cmpsl
add
fmull
sti
jns
insl
jp
push
aaa
popf
add
decb
dec
push
fwait
push
cmp
sbb
cmp
adc
xchg
andb
dec
ljmp
mov
and
inc
add
mov
dec
test
lods
inc
add
shl
and
add
inc
lods
and
mov
aaa
or
mov
insb
sbb
in
bound
mov
orb
fs
add
lds
scas
add
les
aad
push
add
add
sub
jne
sbb
lret
aaa
popl
mov
mov
movsb
out
xor
cwtl
pop
dec
jbe
pop
shl
fisttpll
add
test
daa
popf
fnstenv
add
and
xor
jmp
popa
pop
mov
pop
xchg
adc
mov
int
aas
mov
add
inc
cmpsb
rolb
add
sbb
add
ffree
sbb
xchg
sub
sbb
addb
mov
add
out
jge
adc
hlt
clc
ficomps
add
push
in
clc
xor
addr16
mov
lahf
add
int
xchg
adc
push
add
xor
loopne
jge
jae
mov
sbb
sub
aas
rcrl
pushf
sub
sarl
sarl
fs
clc
sahf
mov
arpl
mov
sbb
or
mov
xor
xor
push
stc
ja
pop
xchg
aas
or
popa
arpl
addl
inc
aas
stos
addb
sub
loopne
loop
jl
or
pop
rolb
mov
inc
insl
add
dec
adc
dec
pop
test
int
pop
das
mov
int3
add
dec
jmp
or
stos
cmp
jbe
clc
je
andb
in
xchg
xchg
inc
fwait
push
push
pushf
add
shll
push
cmpsb
jo
or
mov
js
xlat
call
mov
test
add
ret
les
sub
mov
adc
pusha
jne
adc
mov
add
push
gs
add
jmp
add
fldt
sbb
js
mov
mov
mov
aas
std
sub
lret
pop
or
inc
fdivrl
jo
imulb
add
inc
mov
sub
je
testl
mov
dec
xchg
add
inc
ret
je
jecxz
and
out
addl
pop
pop
push
nop
fs
mov
mov
nop
out
shl
repnz
add
jae
sbbb
add
add
jo
add
and
bound
outsb
imul
mov
add
cmc
int
sub
insl
dec
test
incb
and
jecxz
sub
test
ficoml
imul
add
jmp
add
push
fmuls
loopne
cmp
pop
or
rcll
inc
cmpl
arpl
lds
ret
shll
imul
loopnew
mov
add
out
and
rcll
ds
addb
xchg
inc
je
add
adc
shlb
rclb
and
and
mov
fstp
sbb
fs
popf
test
push
mov
pusha
push
dec
add
inc
fucomi
sbb
pop
dec
mov
add
and
fldl
in
dec
push
rcrb
cmp
stos
or
or
stos
out
flds
sbb
adc
repnz
or
jl
repnz
aam
dec
pushw
ja
xor
xchg
roll
int3
subl
adc
inc
adc
cltd
in
xchg
and
lcall
or
fsubs
popa
adcl
aas
lea
cli
mov
add
cld
push
insb
sub
call
rcr
rorl
pop
add
mov
cmp
add
and
call
fcmovne
nop
mov
sub
out
cmp
dec
shrb
sub
fsts
adc
rorl
popf
arpl
pop
js
mov
push
addr16
mov
mov
jmp
adc
rcl
call
mov
or
pop
in
push
mov
int3
add
cmp
jge
push
rclb
cli
test
xchg
ret
nop
pop
pop
jns
push
sub
mov
mov
sbb
addr16
ss
fisttpll
xor
pop
andl
jp
fisubrl
aaa
sbb
push
sbb
jb
sub
sbb
sbb
sub
addl
std
pop
push
xchg
mov
cwtl
add
lcall
add
imul
xor
inc
add
sub
cli
cltd
cmp
sub
test
pop
mov
pusha
nop
xchg
flds
sarb
and
xorl
push
and
xor
sbbl
ljmp
push
xor
and
test
data16
cmp
or
push
xorb
stos
inc
mov
pop
pop
rolb
gs
fistl
pop
sbb
test
sbb
lahf
repz
xchg
jge
pop
lock
dec
mov
push
dec
pop
pop
cli
jle
lods
jo
into
imul
in
and
pop
decb
fmull
bound
dec
mov
pusha
ret
pop
mov
movsl
or
shlb
lret
shll
jns
jns
es
scas
rolb
inc
dec
dec
in
flds
cli
push
push
fdiv
sbb
inc
inc
sub
sub
push
shll
mov
rcr
adc
or
add
mov
scas
rcll
shrb
in
js
loopne
add
push
dec
pushf
or
int3
imul
jecxz
jne
rolb
inc
add
ret
in
nop
push
cwtl
dec
adc
add
pop
arpl
sbbl
iret
dec
int
inc
sti
dec
and
sub
pop
mov
rolb
call
sub
hlt
pushf
arpl
add
xchg
leave
out
adc
add
sarb
jp
adc
cwtl
xchg
add
ss
or
pop
and
rcr
mov
adc
sbb
adc
faddl
dec
jmp
bswap
or
out
loope
and
inc
cmp
inc
sbb
jnp
or
mov
popf
sub
dec
pop
mov
jecxz
xchg
int
movsl
push
idiv
cmp
inc
aaa
push
cmovs
mov
bound
xchg
cwtl
andl
cmp
dec
xchg
lods
sbbb
pop
mov
add
sbb
mov
test
jo
sub
adc
jge
mov
xchg
pop
lods
fs
cmp
mov
sub
int
adc
adc
mov
mov
or
fisttpll
mov
cmp
inc
testl
add
rcrl
insb
add
rcrb
loopne
xor
ficomps
and
mov
xor
push
loop
je
jmp
add
pop
inc
movsl
subb
pop
stos
dec
adc
jae
add
cmp
cmp
mov
sti
scas
dec
add
pop
push
push
cmpsb
test
add
ss
mov
ret
int
sub
mov
jge
add
fnstsw
push
xchg
push
or
ss
xlat
ds
and
fs
std
repnz
popa
pminsw
daa
mov
lods
sbbb
pop
in
add
fst
daa
out
fs
into
and
in
mov
es
inc
cmpsb
add
push
add
and
in
fmuls
cli
jg
dec
cmp
loopne
mov
jl
enter
xor
add
jecxz
andb
es
enter
xlat
adcl
shrl
rcrl
jae
cmp
jge
ret
popa
push
xchg
bound
mov
jns
add
or
repz
inc
mov
aas
subb
push
dec
leave
push
fs
inc
shlb
arpl
mov
lret
icebp
ret
push
repnz
adc
pusha
cmpsl
xchg
add
xor
and
ss
add
adc
mov
dec
cmp
push
ja
mov
ljmp
vminsd
jge
mov
push
jnp
xor
or
xchg
add
mov
lods
imul
mov
cmp
jno
xlat
dec
sbb
cwtl
dec
push
jle
pop
add
ja
inc
ret
pop
xchg
es
cmp
loopne
jp
add
fmul
lahf
jae
cmc
add
ss
cld
enter
mov
mov
add
jbe
xchg
inc
push
xchg
xor
dec
pop
xchg
add
add
lock
inc
xor
mov
jne
push
daa
sbb
shlb
push
xchg
mov
jnp
add
pop
cmp
cwtl
jbe
out
je
cmp
mov
sub
push
sarl
aad
mov
leave
mov
add
in
xchg
aam
shl
dec
inc
in
aaa
rolb
and
jns
xchg
add
es
cltd
fstl
nop
add
adc
shlb
add
and
cld
mov
xchg
nop
mov
add
stc
orb
arpl
jbe
aas
inc
insb
cmp
outsl
jnp
add
inc
add
pop
pop
orb
dec
cmp
insl
movsb
les
or
add
add
xor
in
imul
add
push
xchg
add
mov
jno
cmc
rcrl
add
add
cmpsl
push
jnp
loop
mov
push
and
pusha
cmp
sub
mov
mov
jmp
in
fsts
dec
xlat
adc
sbb
mov
addr16
aas
and
fs
ret
test
and
sti
jns
mov
pop
adc
and
adc
mov
addr16
xchg
pusha
movsb
movsl
inc
lock
into
cmp
rorl
mov
adc
shl
xchg
mov
jb
xchg
popf
add
in
push
shrl
mov
push
cmp
jmp
cmp
mov
xchg
loope
add
jne
push
jae
jge
test
push
les
sbb
sbb
mov
loope
jne
sarb
arpl
repnz
add
sbb
out
push
add
push
inc
mov
add
sub
dec
sbb
je
js
ljmp
xchg
fimuls
ja
sub
outsb
xchg
jne
call
sahf
sbb
pop
mov
mov
nop
and
add
xor
ss
fs
jecxz
inc
or
xor
push
push
sub
and
push
lods
add
loop
out
push
push
enter
in
inc
add
xchg
dec
ljmp
pop
aaa
sub
test
push
jge
mov
shlb
mov
dec
rolb
scas
in
and
cmp
xchg
rcll
pop
push
adc
cld
repz
add
outsb
sbb
pop
mov
pop
rorl
add
subb
jecxz
pusha
xchg
push
and
shll
mov
stc
fs
mov
jb
push
mov
xchg
mov
aas
pop
cmp
fcompl
or
sbb
push
mov
and
in
test
stc
scas
jp
mov
ljmp
push
or
adc
adc
js
jb
jge
inc
mov
xchg
add
cmp
adc
add
mov
iret
out
or
mov
mov
sbb
cli
jnp
int
testb
repnz
cmc
and
outsl
push
call
mov
addb
adc
aad
movsl
out
sbb
rcll
or
xor
jmp
adc
fmul
ret
dec
es
xchg
aam
mov
fdivs
xor
pusha
ret
add
push
push
inc
int
les
cmp
les
cmp
repnz
arpl
insl
pusha
add
addr16
pushf
mov
sub
jg
in
sub
sub
das
mov
dec
push
jg
jns
sbb
push
add
icebp
inc
add
or
loope
dec
or
cmp
push
and
clc
stos
push
jmp
add
push
mov
mov
push
cwtl
in
sahf
jnp
add
push
dec
popf
outsl
cld
jbe
and
xchg
add
lods
stos
cmc
push
push
mov
cmpsl
sub
icebp
icebp
push
xor
xchg
add
jnp
es
lock
call
xchg
push
push
pop
add
mov
mov
ds
iret
lods
xor
xlat
ja
mov
mov
or
das
cwtl
xor
adc
mov
pusha
rolb
fidivs
repz
dec
jp
out
xchg
xchg
add
inc
push
leave
cmp
stos
fldl
lock
add
loope
pushf
sbb
push
sub
movl
xor
enter
add
push
adc
push
push
iret
push
pop
push
inc
cmc
adc
mov
dec
jg
ret
nop
imul
into
mov
push
pop
icebp
jo
mov
pop
cmpsb
aad
scas
add
and
cltd
mov
les
cld
cmp
push
lods
jmp
pop
adc
pop
mov
mov
adc
mov
pop
mov
adc
es
or
xchg
xor
dec
pusha
mov
xor
xor
daa
sbb
adc
cmp
add
xor
roll
push
outsb
enter
add
repz
jl
movb
jno
xchg
dec
xor
es
in
add
xchg
stos
sub
add
mov
in
outsb
add
add
in
xchg
jl
sbb
add
sbb
popf
jb
ss
pop
add
inc
nop
test
mov
pusha
cld
jae
aas
negb
insl
and
test
xor
pop
adc
xlat
mov
cmp
mov
adc
ficoms
daa
mov
je
add
xor
mov
jecxz
out
cmpsl
inc
cmpsb
mov
sbb
sub
adc
data16
addr16
icebp
aas
xchg
or
xchg
cli
ljmp
js
adc
or
pop
push
mov
movsl
jp
hlt
xor
add
lea
inc
xor
jle
loopne
ja
mov
scas
sub
jbe
adc
sti
xor
leave
scas
out
pop
jmp
push
add
mov
data16
idivb
add
pop
fld
mov
dec
jbe
sbb
push
shr
test
inc
cld
jne
xor
add
xchg
cmp
sbb
sub
add
or
adc
sub
stc
movb
pop
jge
insb
jo
jecxz
cmp
dec
mov
add
xchg
lcall
cmp
bnd
or
shl
mov
cmp
jmp
arpl
add
int
testb
and
sarb
shlb
add
pop
sub
or
sbb
mov
stos
sub
into
fadds
lds
inc
mov
sub
int3
add
mov
mov
scas
add
and
mov
ret
insl
cmp
jnp
push
add
jl
jbe
cmp
add
mov
sbb
push
add
adc
stos
pop
ljmp
pop
jb
movsb
push
out
mov
test
add
iret
mov
fstl
mov
add
inc
add
icebp
enter
add
push
data16
stos
inc
xor
test
lahf
aad
cmp
add
faddl
jb
sbb
push
cwtl
xchg
ret
push
stos
lds
jns
mov
pusha
xor
inc
fildll
add
sub
leave
pusha
inc
add
push
mov
in
sub
shlb
and
jecxz
jmp
sbb
call
jne
and
lods
sbb
fst
aad
or
add
sub
push
insb
add
and
pop
sbb
lock
ss
int3
sbb
inc
adc
sgdtl
stc
push
je
inc
and
aam
roll
outsb
roll
icebp
adc
pop
shlb
fnstsw
leave
push
pop
add
cli
push
dec
adc
add
pop
movsb
in
mov
flds
fisttpll
mov
jecxz
adc
and
mov
and
lods
add
xor
mov
icebp
add
roll
push
mov
add
cli
jae
add
push
cmpsb
fisubl
decb
rcrl
test
clc
add
xor
xor
jge
mov
inc
add
outsb
or
stos
or
aad
xorb
rorb
sub
icebp
sub
cli
or
cs
sbb
shlb
addr16
mov
push
cmp
ds
mov
daa
push
out
xchg
cmpsl
ss
sub
cwtl
sbb
pop
in
xor
in
test
jns
add
je
dec
add
add
cmpl
aad
cmp
xchg
shlb
cli
xor
fcmovbe
xor
std
and
jne
movl
repnz
mov
subb
pusha
pop
xchg
add
andl
mov
add
pop
add
pop
mov
nop
push
sbb
mov
in
jb
cmp
lods
xor
inc
or
ficoms
add
pop
fcom
lods
in
leave
aad
or
mov
mov
cmpsl
es
sti
adc
lcall
fmul
sub
int
scas
or
cmp
lds
lock
aas
mov
or
push
xchg
outsb
inc
inc
andl
inc
sbb
push
push
add
adc
enter
xor
in
addl
ja
mov
add
add
faddp
cwtl
enter
lods
outsl
rcrb
cmpsl
ficoml
mov
push
mov
inc
aaa
mov
test
xchg
sbb
stos
add
imul
add
dec
pop
ret
not
add
add
mov
pop
into
mov
call
add
or
dec
push
or
pop
aas
ljmp
mov
add
xor
add
lret
mov
add
xchg
ficoml
aad
cmp
xor
mov
out
dec
ficoml
out
jmp
in
pop
movsl
pop
das
outsl
neg
jle
and
movsb
clc
mov
add
or
xchg
cmp
mov
xchg
jmp
js
add
cmpsb
mov
fwait
rorb
outsb
adc
and
pusha
daa
pusha
cmc
setbe
mov
std
add
sarl
stos
mov
dec
add
sbb
mov
xor
loop
mov
add
cs
pop
or
jmp
insl
push
popa
loopne
xor
mov
mov
out
add
sahf
mov
ss
add
jmp
shl
std
xor
xchg
push
pusha
adc
stos
add
testb
lret
push
pop
fimuls
cmp
lret
and
mov
jl
add
push
cltd
jp
add
and
es
push
add
add
jecxz
repnz
sub
xchg
jle
and
add
or
mov
movsl
or
push
out
int3
jge
mov
dec
sub
add
xorb
fwait
aad
push
adc
push
enter
jo
add
or
inc
imul
add
jnp
add
jno
shrb
sub
inc
inc
add
jg
push
push
aas
mov
jle
add
loop
pop
add
mov
and
jo
incb
hlt
hlt
cmp
pushf
jg
mov
push
jns
cmc
idiv
xchg
in
jl
fiadds
shl
add
push
loopne
les
pop
aas
dec
cwtl
shlb
jb
add
out
arpl
test
movsl
dec
inc
mov
loopne
xchg
add
adc
mov
dec
popa
inc
push
push
aaa
lcall
fs
mov
mov
inc
or
rorb
jl
mov
cmc
aad
mov
pop
xorb
or
lods
je
cld
mov
sub
cmp
ficoms
jmp
roll
or
dec
jle
cmp
fildll
add
aas
test
cli
or
cmpsl
testl
mov
nop
mov
mov
les
ss
push
test
add
and
loop
sarb
imul
movb
adc
mov
cli
call
inc
ret
cmp
sbb
jae
or
xor
outsl
add
adc
pop
imulb
das
push
fs
jle
pop
addb
mov
inc
or
mov
icebp
adc
mov
dec
sbb
pop
popf
lret
pop
adc
ja
sub
and
out
push
xchg
mov
add
inc
inc
in
xor
add
add
mov
push
out
or
sub
jno
cmp
jmp
das
add
imulb
inc
rorb
mov
enter
jmp
mov
inc
push
mov
dec
add
jae
or
push
jmp
xchg
push
xor
rolb
jg
subl
adc
pop
enter
xlat
push
sbb
shrb
jbe
push
add
and
gs
jmp
and
xor
mov
out
add
insl
rcl
push
lods
pushl
cmp
or
pop
mov
push
je
jp
sarb
mov
out
imul
pop
mov
loope
mov
add
xor
cmc
mov
ljmp
sbb
inc
cvtpi2ps
sbb
xchg
ret
adcl
adc
xchg
fists
or
sub
loop
mov
add
sbb
je
ss
and
mov
into
jnp
add
out
fimuls
add
add
stos
lock
les
shl
dec
ret
pop
rdmsr
and
mov
xor
mov
add
outsl
mov
add
push
dec
mov
adc
mov
repnz
fistpl
hlt
add
dec
pop
adc
mov
sbb
sub
inc
stos
pushl
ja
andl
cmc
mov
sbb
push
jle
add
xchg
inc
addr16
xchg
loopne
cmp
cmp
inc
cltd
mov
flds
sbb
sti
or
adc
push
add
outsb
sbb
popf
lock
hlt
test
and
lcall
fsubr
ljmp
pop
xor
pusha
push
sub
and
dec
das
rolb
dec
and
arpl
dec
mov
fistpll
xchg
cwtl
cmp
sub
fs
pop
jg
or
xchg
add
adc
cltd
push
push
add
jne
inc
add
loop
dec
adc
clc
ret
add
mov
adc
pop
mov
add
repnz
add
ss
iret
andb
cs
dec
mov
push
dec
dec
into
push
setae
daa
cltd
add
jmp
bound
sarb
dec
movsl
add
mov
push
adc
or
aas
inc
out
popa
sub
pop
push
push
xchg
add
cld
dec
jae
sub
add
push
jno
iret
scas
das
sbb
rcrl
loope
add
imul
lock
stos
aam
push
pushf
mov
pop
pop
es
sub
inc
and
aam
add
cmp
jo
loop
fcoml
and
fnsave
cli
or
sub
mov
out
adc
push
inc
in
cwtl
add
mov
xor
jp
sbb
test
add
movsl
test
andb
fs
mov
push
push
test
xchg
add
pusha
add
dec
jmp
mov
stos
pop
mov
inc
push
adc
mov
cld
mov
into
jbe
das
nop
repnz
add
pop
and
sahf
jmp
add
ss
xlat
in
call
sbb
push
lret
add
adc
adc
add
dec
pusha
notl
and
push
pop
mov
add
fneni(8087
sarl
cli
loopne
cmp
insb
fsubp
push
in
add
jb
pop
xor
xor
push
inc
pop
sub
jae
popa
adc
aas
test
jne
sub
add
pop
mov
into
add
cmp
add
sti
inc
pop
movsb
push
ret
outsb
jle
loope
pop
and
push
or
gs
add
test
add
mov
jge
mov
push
mov
loopne
push
add
adc
mov
push
inc
add
int3
addr16
add
jmp
mov
adc
add
push
stc
and
lret
orb
add
or
cmp
out
sbb
cmp
push
push
add
inc
add
xor
enter
cmp
cs
movsl
adc
xlat
or
xchg
pop
and
jle
add
inc
addl
add
push
mov
xor
cwtl
mov
outsl
pop
insl
sub
lods
call
incb
pop
pop
pushl
cwtl
loope
int3
jno
nop
pop
add
bound
jecxz
sub
add
jne
add
push
aas
pop
mov
and
popf
pop
fcomps
int3
push
jp
add
adc
imul
shll
cmp
loope
inc
adc
pop
ret
add
ja
pop
pop
pop
xor
outsl
push
ds
daa
mov
inc
and
loop
pop
movsl
mov
jne
add
shlb
mov
test
or
inc
cmc
add
popa
pushf
jg
fldl
sbbb
mov
sbb
jno
mov
mov
out
int
nop
sbb
ds
mov
ljmp
cmp
test
sbb
pop
je
pop
outsb
jle
fcomps
les
pop
scas
sahf
add
cmc
fists
cli
jp
add
shl
lods
dec
lock
repnz
sub
jg
mov
mov
stc
mov
or
sub
add
insb
clc
out
in
stc
add
cld
cmp
or
movsl
or
sbb
imul
and
cwtl
neg
clc
or
ss
mov
push
jnp
dec
xchg
jb
add
loopne
data16
sbb
cmp
jecxz
in
xchg
cwtl
and
xor
rcrb
mov
add
push
jl
jno
mov
sub
mov
push
iret
add
sub
add
out
sti
bound
dec
stos
add
movb
push
mov
jae
or
testb
sbb
jb
xchg
repz
sub
cmp
jns
movsl
jno
decl
xor
xchg
mov
loopne
inc
xchg
aaa
gs
std
jmp
sbb
dec
cmp
f2xm1
sar
incb
movsl
jl
ljmp
addb
cmc
out
rcll
and
adc
cmp
push
fs
jno
mov
fidivl
in
sub
adc
cmp
repz
push
mull
cmp
clc
xchg
int3
dec
push
add
loop
mov
push
lcall
sub
jecxz
inc
hlt
inc
lahf
mov
aaa
mov
pop
rcl
add
adc
sbb
dec
ss
sbb
add
fildll
int
add
jle
sahf
hlt
mov
pop
push
sbb
icebp
movsb
rol
xor
add
fisttpl
add
adc
das
pop
add
adc
shl
mov
pop
xchg
mov
cmp
inc
add
sarb
sbb
stos
xchg
or
rolb
popa
cmp
cs
rorb
sub
jbe
add
aad
pop
mov
add
mov
inc
inc
adc
push
int
jl
daa
pusha
xor
stos
jbe
cmp
inc
adc
movsl
mov
push
or
mov
add
xchg
cmpsb
mov
call
lods
xor
mov
out
repnz
sbb
add
sub
mov
and
es
jle
into
push
clc
mov
push
xor
push
push
test
mov
xor
ret
xchg
jne
call
or
dec
arpl
mov
enter
mov
scas
adc
fisttpll
in
inc
scas
notb
and
mov
or
inc
loope
test
add
aam
mov
or
mov
andl
dec
fwait
mov
mov
adc
xchg
adc
adc
mov
shlb
pop
add
sbb
sbb
dec
mov
cmp
add
fistpll
jg
xor
add
je
push
jmp
add
inc
cmc
push
cmp
rorb
pop
xor
mov
pop
sub
jns
adc
in
fiaddl
lock
mov
add
dec
push
ret
add
dec
in
pop
add
cli
les
pop
push
test
mov
add
cmp
add
fsubrl
cmpsl
iret
test
jbe
mov
inc
ja
add
fstps
lods
push
cltd
jmp
push
jbe
pusha
inc
std
pop
inc
cmpsl
ret
test
mov
push
push
cmp
or
push
inc
pop
dec
or
sbb
test
fisubrs
jne
add
xor
gs
stos
test
dec
adcb
pop
ret
or
sbb
loopne
mov
fldenv
sbb
shlb
push
add
test
xlat
push
jg
fnstenv
popf
push
nop
jbe
ja
cmp
call
push
add
push
fldl
in
in
fcoms
push
xchg
loopne
pop
ret
ret
icebp
xor
cltd
bound
cmp
test
fs
sbb
add
incb
mov
dec
xor
add
subb
in
add
pop
and
adc
push
pop
dec
xor
jno
sbb
fimull
mov
mov
push
fwait
xchg
push
cmpsl
rorl
icebp
sbb
jae
mov
sbb
inc
adc
cli
js
test
jno
aaa
in
nop
push
clc
out
fsubp
pop
push
xor
imul
stos
mov
rcrb
icebp
pop
bound
rorl
push
insl
ret
fwait
loop
add
notl
ss
sub
mov
cmp
sub
jle
add
popf
mov
aam
add
into
insb
out
sbb
pushf
arpl
xchg
fadd
bound
inc
aad
push
dec
cld
cmp
mov
pop
add
bound
mov
add
mov
add
ja
lret
xchg
cwtl
jp
rclb
inc
sub
testl
mov
fisttpl
adc
xchg
pop
xchg
add
jle
mov
add
cmp
push
xor
pop
mov
addr16
outsb
hlt
add
dec
dec
es
push
jns
add
sbb
jmp
push
jg
and
cltd
lret
pop
nop
cmp
ja
pop
jo
add
or
pusha
add
popf
sbb
lock
mov
dec
add
dec
pop
sub
inc
pushf
sbb
aas
pop
mov
dec
into
adc
and
pop
rcrb
mov
mov
movsb
cmpsb
mov
mov
pushf
or
flds
loopne
pop
add
in
push
aam
xor
dec
add
mov
int3
fidivrs
cld
push
push
cmp
xor
nop
dec
out
divb
xor
xor
cltd
adc
es
js
shll
pop
sbb
data16
rcr
mov
add
mov
push
mov
cs
clc
jl
adc
cmp
pop
xor
sub
daa
flds
inc
adc
out
bound
test
mov
cmp
in
js
lahf
mov
sub
cmp
or
jecxz
xor
or
cltd
push
push
jae
lret
adc
pop
push
jae
test
ret
lcall
sti
mov
pop
cmp
add
jge
shlb
addr16
test
popl
icebp
sarl
push
add
sub
add
test
sub
jmp
pop
movsl
pop
sarl
xchg
xchg
aam
rcrb
add
jl
insb
roll
into
ret
cmc
jns
cmpsb
repnz
mov
movsl
imul
movlps
lret
nop
fiaddl
mov
xchg
scas
clc
gs
push
adc
jb
add
jo
ret
add
pop
fs
lods
lahf
hlt
jb
jnp
pusha
nop
add
mov
jp
add
xchg
adc
aas
push
test
inc
movl
and
push
push
pop
adc
xor
jg
add
or
cs
mov
add
stos
xchg
ljmp
add
xchg
hlt
pop
and
nop
sbb
loopne
mov
aad
pusha
and
cmpb
add
movsb
inc
les
mov
loop
add
mov
mov
cmpsl
jge
xchg
imul
hlt
mov
jns
outsl
dec
insb
shll
incb
xlat
sti
jle
or
mov
xchg
mov
xchg
cltd
test
nop
fidivs
clc
mov
movsb
addr16
mov
inc
xchg
lock
add
inc
dec
vmwrite
popf
fnstcw
inc
cmp
push
aas
pop
pop
pop
daa
jle
into
cmpb
rcl
out
or
sub
add
andl
add
in
mov
inc
jns
add
xor
mov
or
add
jl
arpl
sub
cmpsl
xchg
and
movsl
sbb
jnp
in
mov
mov
cmpb
fstpl
jg
push
subb
mov
mov
nop
cmpsl
or
mov
pop
lock
movsl
in
or
imul
jo
js
and
pop
cmp
sarb
dec
xchg
mov
loopne
pop
aas
sub
daa
mov
nop
das
push
xchg
add
jmp
stos
jo
sbb
js
mov
jg
scas
fmull
fdivr
cwtl
or
sub
nop
push
dec
pop
pop
sbb
cwtl
jp
mov
lret
mov
testl
outsb
enter
xor
cmp
add
push
pop
in
cmp
add
mov
pushl
repz
xor
lods
data16
add
adc
clc
pop
mov
mov
xchg
int3
pop
ja
or
mov
lock
mov
adc
lahf
andb
sti
imul
insl
add
loopne
xchg
pop
add
popaw
movb
cmp
cs
stc
adc
in
cmpsl
add
sbb
mov
pop
jge
cltd
or
pusha
lret
inc
jbe
add
cli
adc
fiadds
imul
or
sbb
mov
adc
sub
or
inc
clc
add
arpl
mov
push
lret
xchg
push
das
std
aam
ret
in
dec
mov
inc
loopne
popa
push
push
inc
xchg
push
les
cmp
add
xor
add
scas
push
adc
dec
icebp
sbb
sarb
aam
xchg
gs
rcll
cmp
sbb
cld
scas
test
mov
ja
add
pop
dec
jl
add
fsubrl
in
loop
sub
data16
lahf
mov
xor
pop
adc
test
xchg
push
stos
adc
xchg
mov
lds
add
pop
push
jnp
mov
jno
std
pop
xchg
hlt
add
xchg
inc
pop
xor
xchg
pop
fcompl
mov
and
rorb
mov
jns
in
popf
loope
fmull
pop
test
pop
pop
adc
mov
xor
cmp
xor
add
sub
or
add
push
jl
fld
lahf
add
mov
popf
je
jbe
mov
inc
sub
repz
jnp
dec
ret
nop
jbe
lods
add
cld
dec
lret
and
ds
push
add
lahf
loopne
and
fstpt
outsl
imul
jp
mov
jmp
xor
lret
in
mov
out
mov
jno
aad
xchg
mov
lret
xchg
cmpsb
pop
scas
pop
dec
js
xchg
fiaddl
shrl
test
and
and
pop
pop
aaa
and
lret
mov
and
mov
add
cmpsb
lods
adc
inc
hlt
and
add
push
xchg
test
nop
pop
lret
or
subl
andb
clc
add
mov
add
sbb
sbb
cld
and
cwtl
loopne
add
lea
syscall
dec
mov
std
fsubrp
pop
sar
outsl
sub
in
fmul
mov
arpl
push
sbb
jle
xchg
adc
mov
and
xor
push
adc
es
in
cmpsb
dec
or
add
pop
push
cmp
lds
sub
push
pop
lods
add
jo
lret
jmp
adc
pop
xchg
mov
repnz
sub
add
les
nop
sbb
sarb
cwtl
sbbb
out
push
mov
rorl
in
ljmp
rolb
cmp
dec
push
adc
dec
push
mov
sub
push
add
insl
add
ret
or
xchg
shlb
out
ja
add
dec
loopne
add
test
sub
lcall
jmp
in
pop
and
jmp
dec
xchg
clc
add
fstpt
shlb
or
hlt
adcb
or
scas
push
inc
push
mov
les
mov
pop
mov
add
je
jbe
lock
jle
fildl
add
dec
fs
xor
add
js
xlat
add
cmp
add
cltd
enter
adc
loope
xor
and
dec
fildl
arpl
cwtl
clc
in
jnp
add
jmp
popf
push
aaa
int
add
or
jle
arpl
pop
push
pop
adcb
out
or
into
adc
call
mov
aam
add
stos
inc
sarl
xor
insl
test
pushf
andb
pop
pop
fs
xor
xor
fstpt
xchg
outsb
popa
mov
adc
lret
sub
and
cmp
mov
gs
jb
add
jo
ret
pop
rolb
fdivr
fs
add
push
stc
ds
aam
pop
sqrtps
adc
stos
inc
cmpsl
xlat
and
or
jmp
lea
fucomi
aad
add
out
inc
add
mov
lret
cli
lock
in
and
add
dec
fwait
sti
gs
fidivrl
popf
jmp
inc
ret
jnp
sbb
std
push
nop
or
xchg
stos
lret
aad
xchg
xchg
cmp
mov
stos
add
cltd
mov
lds
dec
out
aam
mov
push
mov
test
inc
mov
scas
pop
data16
xchg
aad
xor
jmp
add
cli
iret
daa
jo
mov
add
lahf
xchg
shlb
adc
cld
adc
out
mov
pop
mov
andb
andb
and
sub
push
mov
or
cmpsl
pop
fsubl
fs
dec
cli
rcr
test
or
fisubrl
call
nop
roll
stos
mov
mov
incb
xchg
jnp
mov
notl
cmp
cld
aas
add
data16
repz
divb
add
fs
add
xor
add
push
or
addr16
and
daa
add
mov
push
push
shll
dec
stos
cmp
aas
or
pop
xchg
xchg
add
sahf
xchg
and
dec
mov
adc
daa
adc
add
mov
mov
addb
pop
in
add
lret
fisttpll
inc
std
out
push
int
mov
iret
cmp
add
adc
sub
test
clc
scas
add
daa
sub
out
bound
outsb
loopne
and
dec
out
leave
add
inc
incb
ret
cmpsl
ret
scas
icebp
and
ror
jg
sub
push
popw
mov
adc
and
or
loopne
icebp
rcl
or
xor
fiadds
pushf
cmp
cmp
aaa
add
lock
test
pop
inc
fiaddl
push
cmc
mov
add
and
push
nop
xchg
sbb
pop
xorb
in
and
dec
mov
out
test
enter
roll
xor
mov
cmp
or
call
inc
out
scas
shlb
aad
add
test
jae
and
jmp
scas
push
push
adc
or
fldt
sbb
adc
jecxz
sbb
das
or
push
subb
fcmovu
add
inc
es
add
jne
ficomps
sub
pop
add
sbb
outsl
stos
cld
pusha
pusha
test
pushf
mov
sub
rcrb
add
ret
jge
push
dec
es
add
add
or
scas
add
icebp
xchg
sti
or
push
andl
lock
inc
mov
xchg
addb
add
test
inc
xchg
xchg
cwtl
aaa
add
mov
adc
cmpl
sub
push
sti
adc
les
jnp
and
push
jp
pop
xor
pop
das
sbbb
sbb
repz
negl
rdmsr
loope
flds
mov
add
mov
add
in
pop
mov
mov
and
imul
sub
xlat
shrb
addr16
jns
xchg
sbb
xchg
pop
cmp
add
mov
loope
xchg
test
jns
xchg
dec
nop
nop
or
scas
dec
jb
nop
lea
xorl
xor
push
xlat
and
int
clc
push
add
pushf
pop
sub
push
cmp
fldt
push
xor
and
dec
out
push
mov
and
cmp
add
mov
std
repz
pop
add
iret
sbb
push
scas
rcll
inc
cmp
cltd
or
adc
add
enter
ret
sub
loop
xchg
ja
add
add
jo
loope
adc
test
jno
testb
rcrl
loopne
bound
push
aaa
push
dec
add
mov
aam
mov
fcompl
and
cmp
add
dec
push
jp
fimull
add
and
decl
es
mov
je
sbbb
and
pusha
sub
pop
push
and
jl
insb
lcall
and
xor
jge
jp
jp
repnz
nop
je
push
sub
loope
add
outsl
test
adc
decb
push
jae
repz
imul
dec
push
int
sbb
xchg
cmp
jnp
xchg
add
jmp
addb
jge
inc
xchg
and
fiaddl
xchg
lods
sahf
in
jo
rolb
add
or
lret
sbb
add
or
fistpll
mov
cltd
ja
fdiv
sbb
cmpsl
pop
or
fmulp
push
add
stc
xor
push
sbb
xor
out
or
add
je
das
ja
scas
verr
insb
popf
fsts
hlt
jo
aaa
push
mov
cmp
push
add
test
test
jno
sbb
sbb
cltd
and
shll
add
add
mov
push
pop
inc
pop
add
out
mov
pop
mov
xor
daa
inc
std
jbe
push
jns
mov
les
icebp
add
add
jmp
or
cmp
pop
and
adc
lds
popf
dec
rolb
and
repnz
jb
call
add
push
into
sbb
rclb
xor
js
leave
rcr
cmc
loopne
mov
pop
fldenv
pop
add
push
stos
adc
cmpsl
pop
mov
or
inc
jg
pushl
sub
and
inc
xchg
daa
inc
and
pop
adc
xorl
testb
pop
mov
fwait
cltd
cwtl
add
adc
popf
inc
mov
add
cmpsb
sahf
stos
les
and
fnstcw
jns
add
and
push
sub
popf
add
xchg
dec
mov
mov
mov
adc
dec
add
inc
push
inc
cmp
in
out
add
dec
repnz
cmp
xchg
add
fs
fadd
mov
in
out
ret
push
js
cli
mov
push
pop
out
cmp
add
dec
fmuls
pop
or
outsl
faddl
mov
in
push
fidivrl
daa
data16
sub
fimuls
dec
inc
repz
or
dec
xchg
adc
sahf
pop
test
out
and
mov
mov
pop
jmp
dec
xor
push
add
jmp
shlb
push
push
xchg
imulb
xchg
xchg
loope
mov
sub
mov
mov
roll
stos
lret
adc
out
and
test
add
fs
mov
push
mov
add
mov
nop
inc
mov
pop
mov
out
mov
mov
in
adc
push
jae
lea
sbb
xor
jbe
dec
dec
int3
stos
or
ljmp
imul
add
and
jo
insl
sub
adc
adc
lea
in
daa
sub
js
add
push
cli
mov
stc
int
jmp
adc
sbb
pop
fidivs
ja
cli
pop
shlb
push
lahf
add
or
mov
stos
mov
addl
and
in
dec
dec
pop
shll
xchg
adc
xchg
adc
out
add
lcall
xchg
fdivrs
and
cmp
test
fadds
mov
sbb
pop
dec
inc
add
mov
mov
cmc
inc
arpl
es
push
add
add
jle
xchg
sbb
push
and
cli
push
es
test
add
cmp
aas
popa
cmp
inc
icebp
add
xchg
adc
add
adc
add
sub
cmp
shlb
andb
mov
xchg
xchg
inc
jecxz
cmp
add
xchg
mov
sysenter
push
mov
xlat
add
push
aad
add
sub
test
ja
in
aaa
sbb
mov
push
and
dec
out
cmpsb
xchg
xor
scas
in
cmp
mov
repz
in
lret
cld
cwtl
insb
add
cmpsl
pop
fs
je
inc
aaa
cwtl
inc
add
lret
mov
add
adc
inc
cld
addl
push
mov
int
ljmp
clc
adc
xlat
inc
loopne
xchg
jge
or
push
fisubrl
loopne
into
and
outsb
subb
call
xor
sub
aaa
jns
pop
add
push
mov
dec
dec
xor
leave
data16
jmp
pushf
add
test
je
jbe
daa
or
sbb
test
cld
jmp
add
sbb
pop
cmp
jle
hlt
add
es
adc
add
mov
movsb
je
dec
test
orb
add
xor
inc
out
add
xchg
jl
adc
ficoms
or
fwait
js
or
test
push
test
add
rcrb
mov
decb
dec
je
push
push
ljmp
or
pop
and
insb
les
xchg
in
cmp
jne
out
mul
int3
xchg
hlt
ret
test
or
loopne
aas
mov
mov
adc
sbb
pushf
aam
pop
sub
leave
jmp
sub
push
fldt
push
push
pop
pop
mov
add
jecxz
mov
addb
dec
cwtl
sahf
lcall
cmpsb
add
sbb
mov
punpcklbw
add
repz
pop
inc
mov
mov
push
and
lock
mov
cltd
jne
mov
pushf
mov
lods
es
add
sub
adc
xor
ficomps
or
add
sar
pop
pop
cmp
push
adc
inc
mov
adc
repnz
dec
mov
outsl
add
fmull
pop
mov
jns
ja
xchg
add
inc
and
or
xor
sar
call
test
and
adc
fdivs
and
in
add
xor
int3
mov
pop
sbb
repnz
or
cmp
mov
lds
xchg
std
or
cmp
pusha
loope
and
pop
push
add
mov
inc
add
push
dec
inc
xor
out
insl
fstpt
mov
sbb
ja
lock
inc
add
push
xchg
mov
das
add
cmp
and
cwtl
pusha
ja
push
xchg
stos
xor
loop
xor
jnp
adc
fcompl
push
insb
movsl
jecxz
adc
and
es
test
xor
shrb
jb
jg
add
sbb
mov
aam
cmp
xor
ljmp
mov
sbb
xor
enter
push
daa
shrb
fisubl
pushf
andb
mov
mov
cmp
jmp
repz
outsb
mov
add
out
push
add
shr
lods
cltd
stc
nop
push
ja
add
ret
pop
xchg
mov
adcb
cmp
jnp
shlb
call
cmp
xor
and
sti
adc
movsb
iret
inc
scas
jecxz
mov
and
dec
push
ret
jp
frndint
incl
loop
pop
knotw
lea
add
mov
jo
lods
cmp
es
and
mov
ret
lock
and
xor
or
xchg
out
add
inc
xchg
dec
jo
pop
add
sbb
pushf
add
add
xlat
and
lret
dec
pop
add
popf
cmp
pop
add
jno
sub
lret
movsl
lea
or
je
shr
sbb
sub
sti
jne
push
mov
or
sub
add
sbb
adc
pop
out
pop
dec
aam
mov
je
cmp
mov
insb
add
sbb
cmp
out
mov
in
add
pminub
xchg
mov
jae
outsl
sub
and
je
add
add
in
or
subl
mov
jb
pushf
mov
mov
jge
rcrb
add
shl
dec
pop
jmp
and
add
out
mov
add
pusha
sub
aas
push
call
mov
lret
push
pusha
ja
sub
dec
fs
push
dec
jmp
cmpsl
ret
mov
inc
add
inc
pop
pop
add
cmp
push
imul
mov
lods
rcl
add
or
xor
mov
aam
nop
jg
int3
in
lret
or
push
testl
ljmp
shrb
cmp
je
push
add
outsl
add
insb
stos
xchg
add
add
xor
daa
loope
pop
popa
nop
push
mov
jne
fwait
inc
cld
mov
mov
pop
dec
jmp
imul
mov
lods
repnz
lcall
js
and
xchg
outsl
and
repnz
in
daa
add
divl
fwait
and
adc
or
xchg
leave
jo
stos
or
add
jle
adc
and
or
xor
test
pop
mull
sub
fdivl
add
aaa
push
or
pop
faddl
sbbb
xchg
popf
and
int3
je
inc
lock
mov
add
inc
add
repz
insl
or
lods
xchg
mov
add
filds
test
outsl
pop
andb
push
aas
jle
add
outsb
popf
xchg
fisubl
add
sbb
out
imul
add
sbb
shr
or
lds
mov
and
out
pop
fsub
les
test
add
es
in
add
push
testl
loope
sub
scas
shlb
mov
shl
mov
xchg
in
faddl
pop
leave
repz
inc
cs
enter
lahf
jmp
dec
addr16
inc
int
loopne
psubd
jae
xchg
pop
pop
xchg
scas
mov
mov
dec
jp
pop
sub
push
rcl
ljmp
cwtl
add
sub
shrb
repz
imul
dec
testl
jecxz
add
ret
les
pop
jns
sub
push
jnp
ffreep
cmp
pop
int
and
leave
pop
mov
add
fldt
jbe
jne
add
scas
rclb
lmsw
jp
add
mov
xor
adc
mov
nop
fisubrs
jo
inc
add
mov
call
add
das
cmc
int
jae
ds
xchg
sub
xchg
add
xchg
add
cmp
stos
push
add
add
sbb
repnz
pop
ljmp
xlat
mov
dec
mov
mov
scas
push
jl
pop
pusha
sahf
sub
cmp
sbb
in
and
scas
loopne
mov
in
mov
or
lahf
loopne
repz
out
cmp
jb
fdivrl
xor
and
push
jo
xor
jne
or
xlat
mov
cmc
popf
cmp
adc
add
ss
ret
cwtl
or
pop
xor
testl
pop
sahf
cld
xchg
sub
insl
loopne
cmp
sub
outsl
shrb
fisttpl
pop
jle
sbb
cli
mov
add
inc
push
and
add
push
pop
enter
test
in
pop
filds
mov
add
int
mov
push
add
call
cld
loope
nop
andb
faddl
mov
adc
jns
add
fstpt
cs
clc
push
rorl
arpl
cmpb
add
cltd
pop
jmp
sbb
mov
xchg
or
inc
jmp
adc
dec
or
jns
out
inc
add
stos
shlb
clc
dec
add
jl
mov
sub
loopne
mov
mov
hlt
adc
mov
push
movsb
push
or
xor
arpl
mov
pop
sub
dec
repz
push
subl
data16
popa
add
mov
popf
das
or
add
mov
cli
xchg
lahf
les
enter
add
jl
fadds
stc
jne
xchg
xchg
sbb
je
outsb
cmp
sti
add
mov
mov
addl
pop
cmp
call
leave
fwait
in
push
mov
dec
data16
pop
push
imul
xor
mov
jge
add
mov
inc
push
add
inc
daa
jnp
sarl
jmp
add
jge
ss
insb
imul
loop
dec
sahf
jne
jmp
addl
dec
add
or
sbb
shll
aas
repnz
inc
sbb
cmp
jb
lds
sbb
mov
add
jecxz
adc
add
cwtl
adc
loope
inc
testb
jge
or
ljmp
rol
fisttps
add
or
adc
add
or
jno
add
add
fistps
fisttpll
mov
lea
xchg
testb
cmpsb
xchg
push
cmpb
out
inc
add
cwtl
in
mov
call
shrb
dec
xor
cwtl
pop
ret
leave
mov
or
sub
or
les
and
add
dec
mov
stc
hlt
add
inc
and
or
insl
jge
jl
je
daa
outsl
imul
xchg
mov
jp
lcall
pop
pop
mov
add
dec
nop
add
xor
push
hlt
sub
out
shll
pop
inc
sbb
cmpsb
xchg
or
mov
xchg
add
fiadds
movsb
nop
jl
ljmp
ret
jecxz
xor
mov
fisubrs
ds
or
and
mov
pushf
xor
jbe
mov
and
mov
pop
cmpsb
sahf
mov
xor
pop
adc
ds
ljmp
jb
or
xchg
mov
orb
jp
fs
adc
repz
cmpsb
push
or
sub
test
mov
mulb
adc
sbb
aam
ja
xor
dec
xor
rolb
insl
xor
clc
xchg
mov
punpcklbw
loopne
pop
add
mov
add
js
pop
enter
add
ja
xlat
addr16
add
dec
xchg
in
mov
add
rorb
fldt
in
inc
ja
add
into
dec
test
push
xor
loopne
xchg
inc
jbe
add
adc
mov
xor
push
mov
or
add
xchg
test
js,pn
iret
sub
jmp
push
mov
xor
and
pop
sbb
mov
lods
add
pop
enter
add
imul
pop
mov
lods
ja
or
fcomps
loope
mov
das
jo
add
sub
jecxz
add
jmp
adc
leave
mov
add
push
mov
inc
and
mov
pop
jecxz
iret
mov
mov
and
repnz
mov
cltd
cmc
cmp
sub
addb
sbb
outsb
adc
loopne
fcmovne
in
outsl
add
lock
ret
mul
sbb
add
cmpsl
rclb
add
insl
sub
inc
leave
rol
notb
pop
jbe
pop
xchg
mov
insl
cmp
out
and
add
push
push
pop
add
add
and
lret
sti
nop
mov
pop
pusha
out
add
inc
pop
ss
push
mov
cmp
lods
inc
add
cmp
shlb
mov
sbb
rorb
and
in
into
add
xchg
jnp
adc
hlt
sbb
add
imul
push
daa
xadd
cmp
mov
push
pusha
scas
sbb
les
ljmp
clc
lahf
inc
mov
pop
mov
dec
xor
or
mov
insl
pop
cwtl
loopne
xchg
in
mov
push
ret
add
sub
mov
sbb
dec
mov
cmp
add
mov
add
fldln2
push
xor
dec
mov
cmp
call
repnz
fdivr
inc
dec
or
pusha
es
nop
inc
add
popf
add
push
call
cmp
mov
sbb
or
clc
mov
movsb
aaa
gs
add
adc
std
ret
add
out
scas
loope
jge
and
pop
mov
push
inc
sub
in
cld
sub
add
mov
lcall
jo
mov
rorl
add
xor
or
sbb
scas
jbe
inc
sub
movsb
jle
pop
and
lds
enter
in
mov
xlat
sub
out
mov
shlb
orb
push
mov
and
or
lea
add
int3
pop
faddl
add
adc
rolb
roll
mov
pop
and
pop
sub
je
sbb
pushf
push
in
cli
and
cmp
pop
cmp
lock
sbb
jbe
dec
loop
mov
leave
push
loope
cmpsl
pusha
sahf
ret
add
inc
dec
push
add
ja
pusha
push
loopne
cmpl
mov
and
sbb
cmpsb
adc
shll
add
nop
or
in
stos
arpl
icebp
jmp
dec
lods
jo
les
nop
test
and
movsl
mov
or
push
in
sub
add
cmp
pop
loope
iret
add
sub
adc
out
out
cmp
xor
popa
jbe
and
pop
add
inc
adc
ficompl
push
or
xor
or
shlb
push
jo
dec
add
push
dec
mov
cmp
sbb
mov
mov
xchg
ret
or
mov
imul
dec
aas
out
or
in
pusha
adc
imul
pop
out
dec
push
lock
inc
xor
test
call
or
testb
nop
aam
jnp
add
popa
stc
mov
out
fsub
shld
push
mov
idivl
ror
jae
hlt
mov
xchg
fwait
and
pop
das
popa
es
pop
fisttps
sbb
add
sub
stc
fcompl
mov
inc
xlat
aad
sti
mov
jp
add
sub
add
adcl
pop
aaa
jb
inc
es
mov
mov
push
je
xchg
testb
jns
mov
add
into
movsl
or
mov
fadds
mov
add
and
mov
pop
pop
cmp
int3
clc
inc
gs
or
outsb
es
sbbb
repz
test
fidivrl
pop
xor
add
mov
dec
xchg
lds
pop
add
out
imul
mov
add
das
xor
fdivrs
jle
cmp
inc
sbb
jnp
or
mov
or
dec
mov
loopne
adc
ret
hlt
movsb
add
sbb
adc
add
ror
jnp
mov
add
lret
add
jl
dec
push
inc
add
scas
dec
or
fwait
lea
cs
mov
lcall
sbb
cmc
mov
and
mov
ss
loope
add
push
inc
or
minps
jl
cmp
adc
lods
sti
add
jg
jge
insl
cld
xchg
and
add
mov
mov
pusha
pop
mov
in
mov
pusha
or
xor
std
or
mov
int
clc
icebp
mov
loopne
and
fadds
push
adc
jp
xor
je
inc
xor
inc
test
adc
roll
mov
jo
jl
push
or
out
lods
pop
mov
inc
js
icebp
add
mov
xor
push
adc
movsb
mov
test
jg
mov
cmpsl
add
dec
pop
and
sarb
jnp
mov
daa
rorb
jae
sub
movsb
push
pop
inc
xor
mov
fidivrs
pop
cmp
or
in
aad
and
mov
in
testb
and
movl
xor
xchg
cmp
dec
xchg
bound
pusha
inc
xor
int
lea
popa
jge
mov
and
dec
data16
and
pusha
int3
xchg
sbb
ret
push
ret
std
roll
xchg
hlt
mov
in
xor
add
inc
fwait
stc
lcall
mov
jl
push
xchg
mov
decb
pop
push
test
add
sbb
add
pop
add
stos
scas
adc
testb
mov
rorb
dec
inc
testl
mov
test
sbb
or
adc
sbb
dec
scas
or
sub
mov
xor
mov
sarl
adc
test
mov
paddd
daa
cmp
and
adc
jle
cmp
sbb
pop
fs
daa
enter
out
sbb
fs
shrb
repz
xor
arpl
mov
or
sbb
cmp
mov
cwtl
scas
cmpl
fmuls
insl
imul
sub
cmp
jmp
fstps
sbb
mov
int
mov
scas
je
add
ds
repz
add
sub
dec
popf
add
jo
add
lcall
movsl
fildll
lret
push
mov
adc
fwait
add
adc
das
pusha
addb
ret
pop
push
rorl
arpl
add
and
xchg
call
dec
jmp
into
pushl
and
add
bound
mov
das
and
add
dec
add
pop
sar
roll
cmpsl
push
jnp
or
stos
add
jmp
jbe
jg
add
inc
xchg
xlat
and
and
imul
adc
hlt
xchg
mov
js
rcrl
mov
loop
add
cmp
repnz
add
fnstenv
add
dec
pop
and
jae
repnz
mov
cmpsl
out
or
fwait
addb
shll
dec
jge
out
push
add
sti
or
mov
xor
int3
dec
mov
push
test
jmp
nop
das
xchg
je
mov
aam
sbb
je
xchg
sti
clc
push
pop
and
mov
pop
add
jp
cmp
jmp
sub
pop
in
sbb
mov
iret
add
jb
jns
mov
xor
loope
sub
ret
mov
adc
cmc
divb
mov
xchg
imul
loope
aad
sbb
pop
push
ds
add
rol
cltd
mov
add
aaa
fstpl
cmp
xchg
add
mov
cli
add
jl
icebp
rol
fsubp
mov
pop
jbe
inc
add
xor
lcall
pop
jecxz
test
adc
add
out
ficoml
add
int
sahf
mov
mov
or
cmp
jle
lea
sub
xor
add
fsubs
sldt
sub
pop
add
adc
arpl
xchg
push
sub
fstpl
roll
aaa
push
pop
ljmp
clc
in
xor
mov
adc
lahf
dec
sbb
xchg
loopne
scas
sbbb
aas
adcb
adc
repz
sbb
test
call
push
loop
cmp
push
pusha
push
jns
jno
xchg
ret
aam
jle
xchg
mov
loope
sub
mov
ljmp
and
cli
inc
lock
insl
loope
add
sbb
add
mov
inc
and
fsubrs
lods
add
add
in
pop
add
adc
call
mov
test
push
inc
add
add
sbb
sarl
jmp
rorl
sub
push
scas
outsl
mov
add
repnz
adc
leave
cld
leave
fcomp
rclb
xor
cli
shlb
loopne
mov
add
lods
aas
lret
xchg
jmp
dec
faddl
cld
adc
push
ljmp
jmp
enter
add
xor
loop
sbb
addr16
adc
xchg
jmp
jg
adc
inc
or
in
push
or
cmp
mov
sti
cmpsb
push
inc
sbb
or
push
sbb
xor
push
mov
lds
mov
push
sti
subb
cli
negl
sbb
cs
and
lods
dec
adc
adc
faddl
xchg
adc
pusha
ds
es
aad
mov
ss
and
sbb
imul
add
adc
add
fdivrs
and
mov
push
xlat
pop
xor
push
adc
jge
into
jge
fwait
adc
add
mov
add
sub
lahf
je,pn
add
mov
xchg
fs
add
mov
add
lea
fs
or
pop
mov
mov
stos
sahf
call
adc
or
es
cli
arpl
push
aas
fdivrl
xchg
xor
mov
pusha
sub
push
fistpl
into
ret
fadds
xchg
cmp
dec
mov
mov
pop
sbb
in
dec
add
adc
jb
mov
cmpb
mov
sbb
inc
into
test
inc
lret
push
push
add
scas
jns
sbb
icebp
outsl
add
sub
nop
mov
adc
pop
std
xor
push
dec
mov
pusha
push
and
std
jbe
jmpw
mov
inc
and
add
mov
fldl
cmpl
xor
or
es
or
bnd
test
or
mov
lea
add
mov
adc
loop
dec
add
popf
aam
push
pop
shl
push
das
test
out
jb
cmp
aaa
pop
dec
pop
mov
insl
add
pop
cmp
rolb
sub
add
dec
xor
push
add
pop
in
add
fs
popa
push
add
dec
sbb
xor
mov
insb
add
ljmp
add
popa
lods
movsb
pop
incl
outsb
test
cmpsl
add
lods
adc
mov
jbe
popa
clc
cwtl
mov
mov
ljmp
push
out
or
mov
lods
adc
xchg
mov
subb
call
push
ja
jl
add
jbe
daa
push
clc
mov
pop
dec
xor
sub
xor
jbe
test
sub
dec
and
or
mov
nop
lret
aam
mov
iret
pop
and
xchg
and
and
and
adc
test
jmp
adc
nop
adcb
sub
fidivrl
jecxz
and
out
fsub
add
lahf
jl
fs
pop
iret
out
mulb
and
push
lods
jge
loop
mov
add
xchg
and
and
or
sbb
pop
loopne
stos
nop
xchg
push
mov
enter
jg
lods
out
fadd
sahf
dec
repz
add
xor
cmp
scas
stos
in
mov
insb
jae
cwtl
pop
push
rolb
fdivs
fwait
pop
sbb
mov
leave
or
jmp
jae
jl
pop
std
mov
inc
or
xor
fnsave
inc
sbb
sar
pop
add
clc
lahf
addl
int3
repz
int
sub
sbb
addr16
test
fldl
stos
sub
push
or
dec
push
int
inc
pusha
pop
adc
mov
xchg
push
imull
mov
jp
lods
test
or
add
sub
out
pop
pop
cmpsb
fs
mov
lock
pop
push
dec
dec
mov
roll
inc
xchg
sub
lods
jnp
xchg
sbb
cmp
cmp
fildl
cmp
fdivl
add
lock
mov
jnp
add
lret
div
movsb
add
mov
pusha
lea
jle
adc
xchg
loope
add
mov
sbb
sbb
rolb
iret
adc
test
mov
repz
cmp
or
and
jae
lock
add
pusha
xchg
adc
or
jo
bound
cmp
push
dec
add
pushf
arpl
mov
cli
mov
popf
mov
dec
adc
cmc
sahf
jo
cltd
sbb
hlt
mov
mov
inc
mov
ret
jns
stc
cmp
mov
jp
mov
ret
add
std
enter
or
add
js
jge
dec
das
mov
add
aam
xchg
sbb
call
cmp
cmpl
sbb
lock
add
cmp
jp
mov
inc
add
and
add
cltd
es
roll
orb
inc
or
test
xor
add
mov
dec
daa
add
sub
ss
iret
jne
add
shll
std
lock
cld
add
or
xchg
add
and
in
inc
call
mov
sub
jg
outsb
pop
sbb
arpl
lock
in
push
or
rcrl
jbe
test
mov
xchg
push
loop
dec
cs
adc
sbb
add
cld
imul
cmpsb
repnz
sub
push
push
sub
movsl
and
sbb
push
xchg
add
aas
fdivp
ds
cmp
push
add
and
mov
add
pop
sub
adc
sbb
subb
int
fiadds
es
in
or
das
int3
mov
idivl
jle
pop
inc
aad
inc
test
xchg
add
push
into
mov
add
mov
out
sarl
jecxz
push
xchg
mov
aam
ss
mov
loop
add
in
inc
adc
cmp
imul
lods
aas
mov
push
jp
in
cmp
xor
and
add
jne
shll
mov
test
fldcw
mov
sbb
add
movsl
dec
lock
cwtl
sub
nop
mov
fwait
inc
and
scas
lock
push
or
push
fildl
xchg
out
iret
pop
stos
loopne
push
in
faddl
fwait
aas
or
and
sub
push
and
and
lods
mov
jge
repz
sbb
push
push
popa
rcrl
inc
pop
in
mov
push
bound
push
movsb
repz
pop
das
test
adc
sub
xchg
pop
mov
icebp
add
outsb
notb
or
add
add
lods
loopne
aas
or
pop
push
add
movsb
push
ret
out
mov
pop
jge
add
pop
sbbb
push
push
xor
sarl
inc
mov
rorl
add
add
and
decb
xchg
lret
leave
add
or
add
lods
jnp
pop
pushf
es
lods
jmp
jl
insb
dec
pop
push
fadd
adc
jmp
add
xchg
scas
push
fstpl
roll
cmp
and
sbb
dec
push
mov
jo
xor
loop
push
jae
xchg
or
pop
bound
stos
scas
push
add
sti
xchg
fcmovbe
mov
adc
or
jg
xchg
aad
out
ret
int3
scas
adc
xlat
pop
fcoms
leave
sbb
aaa
add
and
and
aad
sbb
jbe
test
push
dec
in
push
test
cmp
pop
fadd
mov
add
cmp
and
sub
rcrb
push
sbb
stos
cmp
testl
scas
pushf
in
cwtl
cld
push
mov
push
pop
add
loop
cmp
shr
xor
and
lods
pop
sub
pop
mov
rol
mov
sub
stc
js
add
ss
das
pop
and
hlt
cmp
in
repnz
aam
mov
push
and
rolb
aaa
add
push
jne
adc
in
and
jmp
shlb
fdivs
add
dec
pop
test
sbb
mov
popa
add
cmp
jp
sbb
ljmp
fbstp
call
into
orb
or
inc
or
dec
mov
mov
flds
jb
bound
mov
in
jo
out
add
push
and
push
adc
mov
mov
fidivs
adc
std
dec
arpl
add
popf
shlb
sarb
push
movsb
test
dec
add
out
aad
mov
push
pop
nop
les
arpl
lock
add
push
bound
add
daa
jo
sub
mov
clc
add
iret
sbb
out
test
add
and
call
push
cs
adc
mov
cmc
jno
add
clc
xchg
and
daa
pop
lock
aaa
bound
push
mov
ja
into
scas
mov
pop
shll
pop
push
and
test
aad
ljmp
inc
jo
ror
cmp
fs
xor
aam
dec
mov
add
arpl
or
fwait
mov
inc
lahf
out
les
ja
insb
andb
dec
lea
pop
xor
insl
cli
nop
test
lret
dec
sub
inc
sbb
xchg
nop
in
adc
out
jnp
popf
xchg
aad
loope
add
lea
mov
fucomp
add
mov
push
add
pop
dec
aaa
sbb
out
mov
stos
clc
inc
shll
nop
les
adc
sarb
pusha
aad
pop
mov
or
incl
addl
xor
test
les
push
imul
int3
add
lods
or
lds
stos
mov
sub
jge
add
xor
dec
or
mov
data16
mov
ss
or
add
fwait
fildl
lods
inc
xchg
cmpsb
mov
clc
sbb
mov
add
arpl
adc
mov
cld
push
enter
outsb
push
aad
mov
push
adc
mov
pop
sbb
dec
xchg
push
add
mov
sub
jle
in
push
add
leave
push
add
xor
dec
nop
pop
sbb
sbb
imul
dec
and
sarb
mov
cmp
incb
add
into
xor
sub
pop
xchg
aam
xchg
pop
sbb
sub
shlb
adc
in
and
mov
adc
mov
add
push
add
xchg
out
mov
adc
or
fucomip
in
add
push
gs
xchg
push
mov
insb
cmp
sub
pop
and
lods
jmp
lahf
aad
mov
inc
sbb
bound
outsl
clc
sub
cli
dec
pusha
into
push
or
dec
nop
testl
mov
add
add
xor
jle
mov
mov
adc
add
int
xchg
in
and
arpl
mov
add
arpl
dec
adc
pusha
test
ja
nop
loopne
pop
pop
xor
pop
insb
pushl
dec
test
add
aam
inc
pop
or
sbbb
adc
dec
or
dec
mov
add
test
push
cmpsl
flds
nop
mov
movsl
loope
mov
shl
das
adc
sbbb
add
sbb
shr
ret
push
jb
repnz
loopne
xchg
add
in
pop
xor
mull
mov
ret
loope
adcl
adc
cmpsb
rol
and
xor
lock
adc
xchg
push
scas
add
daa
push
mov
lods
mov
add
js
xor
inc
lock
mov
pop
sbb
jo
mov
mov
add
mov
rcrl
jle
addr16
xor
cwtl
mov
sub
xlat
pop
lock
pop
movsb
sub
mov
mov
xchg
sahf
push
jge
loop
add
inc
mov
mov
in
or
mov
cwtl
loopnew
add
xorl
callw
add
cmp
or
mov
les
push
push
aad
xlat
jb
mov
scas
adc
icebp
cmp
mov
std
add
test
xchg
add
push
outsl
movsl
out
dec
add
pop
mov
faddp
arpl
mov
dec
add
sbb
pop
loopne
movl
mov
repnz
adc
pop
movsl
sbb
adc
sbb
enter
fcmovnu
jge
stos
add
jne
cmp
push
ret
pushf
jnp
dec
and
test
xchg
stos
cli
sbb
in
mov
push
outsb
pop
cmp
stc
cwtl
fmull
enter
inc
dec
add
lods
add
mov
mov
jp
loop
js
cwtl
rcl
test
add
sub
xchg
stos
adc
jnp
cmp
ss
loop
ljmp
insl
shr
cmp
or
or
pop
hlt
mov
mov
cmp
sahf
add
pop
mov
arpl
gs
push
clc
loope
mov
test
loop
andb
icebp
add
jecxz
add
pop
fiadds
ret
andl
incl
pop
dec
inc
mov
roll
push
pop
loop
scas
sbb
loope
jo
movl
and
je
pop
pop
jp
add
sbb
push
sahf
add
popf
pop
repnz
dec
popa
lcall
xchg
or
negb
add
xor
mov
push
shll
mov
es
cmp
jne
pop
adc
popa
or
jb
add
sbb
stos
shr
or
test
cmp
add
dec
xlat
in
add
add
cmp
into
addl
jl
popf
add
and
push
fcomps
dec
je
add
dec
jle
mov
mov
jp
arpl
fucomp
jnp
test
in
popf
addb
xorb
dec
adc
cltd
cmp
mov
add
sbb
mov
sub
insb
xchg
mov
sub
dec
shl
adc
ret
xlat
lea
lahf
movsb
sub
add
repnz
out
mov
loopne
andb
enter
or
xor
loopne
xchg
or
aaa
lea
mov
xor
sub
outsb
fsubr
ds
out
sbb
add
dec
mov
mov
cli
jbe
enter
add
repnz
add
jns
add
xor
jg
add
sub
clc
std
fiaddl
mov
jns
andb
dec
stc
dec
lcall
sahf
fcompl
rclb
add
stos
cmpb
sarl
push
mov
dec
adc
sub
dec
faddl
xchg
inc
add
add
ret
jb
aaa
add
or
lcall
stos
leave
sub
cmp
jmp
push
add
xchg
adc
int
aaa
insl
xor
sarb
jnp
push
jo
lock
dec
or
aaa
and
add
mov
mov
je
push
dec
pop
xor
adc
cmp
xor
popa
add
ret
pop
add
movl
sbb
sbb
pop
imul
sub
lods
mov
shlb
dec
pop
iret
ret
add
popa
push
test
cltd
inc
aas
ss
fisttpl
dec
pusha
lcall
add
sub
sub
rcl
add
pop
push
jns
jo
pushw
mov
mov
fiaddl
jns
jmp
cli
inc
das
cmc
enter
dec
xlat
pop
add
add
sbb
add
dec
aad
jg
or
add
addb
les
data16
fstl
add
mov
dec
add
jp
mov
ss
xor
bound
or
packsswb
add
add
dec
cld
and
adc
fdivrl
add
les
ds
sub
mov
cwtl
sbb
cmp
xor
pop
inc
hlt
add
xor
or
add
lret
jno
sbb
cmpb
call
mov
punpckhbw
xchg
int
and
add
fstps
subb
mov
push
dec
cmp
dec
fmull
mov
adc
mov
lret
pop
mov
push
je
leave
fiadds
enter
loopne
cmc
and
js
dec
or
idivb
add
stc
test
int3
cltd
add
loop
cwtl
inc
mov
fistpll
insl
mov
and
pop
or
jns
inc
sahf
or
xor
ljmp
mov
add
adc
cmp
stc
in
hlt
idivb
add
xor
popl
push
push
rorb
cmpl
nop
sbb
scas
jo
jae
insl
add
stc
xor
dec
pop
mov
sarb
test
int3
loopne
xchg
sub
pop
add
add
mov
cmp
sub
and
push
ja
imul
mov
and
fwait
or
mov
adcb
xchg
and
lcall
daa
aad
xor
arpl
mov
in
pop
sub
jge
pop
ja
add
or
pushf
jge
cmp
in
movsl
push
lahf
aad
sbb
loope
add
sbb
js
cmp
movb
mov
jne
sub
add
cmp
fdivrs
inc
jnp
pop
pusha
addr16
add
adc
xchg
aam
mov
in
xor
imulb
arpl
jne
popa
clc
xchg
add
cli
cmp
mov
lock
xchg
inc
lds
out
pop
cmp
lea
hlt
push
mov
add
sub
push
jne
add
inc
pop
cmp
sbb
xor
pop
ficompl
add
daa
outsl
aad
insb
pop
add
mov
std
lds
dec
add
cmp
mov
popa
rcrb
adc
in
mov
loop
add
jbe
sbb
push
mov
pop
ss
inc
sub
aam
mov
jns
daa
and
adc
push
inc
cmpsl
add
and
sti
shlb
xor
lret
sbb
sbb
or
push
inc
xchg
setno
fisubl
jnp
test
jl
pop
inc
cmpsb
mov
pop
add
lods
mov
mov
mov
sub
aas
pop
xlat
mov
mov
add
xchg
xor
pop
dec
cwtl
add
cmp
pop
pop
shr
cmpsb
in
lods
add
jl
add
fsubrs
cmp
and
pop
fs
xor
mov
lea
out
add
imul
addr16
adc
mov
int
sbb
cli
incb
sbb
jge
lret
add
inc
cli
rol
add
nop
dec
js
dec
sub
test
mov
add
movsl
push
aas
pop
mov
in
out
fstps
lock
push
mov
sbb
addb
add
xor
std
pop
cmp
das
arpl
add
sbb
shr
or
xor
pop
add
mov
jb
add
aaa
sbb
adc
stos
add
into
adc
aad
outsb
je
shll
out
pop
fsubr
mov
mov
rolb
add
adc
dec
and
das
and
shl
mov
and
jp
ss
mov
shl
and
xor
pop
fdivrs
xchg
jns
sub
sarl
movaps
mov
cs
outsl
cltd
and
dec
mov
add
and
mov
xor
pop
push
sub
aaa
icebp
xchg
dec
add
orl
es
add
lods
adc
jns
fcompl
lcall
xchg
mov
je
jg
add
xchg
or
aad
mov
sub
add
sub
or
les
or
faddl
inc
jl
add
pushf
push
add
fisubl
xchg
jle
push
popf
and
ret
mov
push
inc
fdivs
xlat
add
lahf
stos
fistps
mov
mov
movsb
rolb
das
xchg
cmpsb
in
push
add
add
fnstsw
lods
add
pop
aas
loopne
mov
mov
subb
adc
hlt
test
cmpsl
inc
call
add
arpl
lret
and
xlat
mov
or
lahf
add
inc
stos
cli
enter
dec
lock
std
xchg
popf
test
or
clc
stc
enter
add
decl
add
cli
dec
jmp
aam
fldl
xor
sub
lock
in
in
adc
shl
pop
movhps
mov
jge
jns
push
mov
subb
dec
popf
add
xchg
sbb
loopne
push
cmp
xor
adc
mov
add
mov
add
pop
pushf
mov
add
add
push
sbb
inc
fsubrs
lret
mov
add
ljmp
out
cmp
add
clc
stc
mov
add
mov
or
enter
pop
test
data16
mov
nop
adc
mov
adc
xchg
or
inc
andl
lods
jae
dec
daa
rorb
addr16
hlt
add
fsub
incl
inc
sahf
sbb
data16
stc
xchg
cwtl
loopne
add
add
sbb
jmp
roll
mov
flds
js
fsubrl
bound
push
stos
aad
mov
mov
cmp
loopne
mov
mov
add
ja
push
mov
into
xor
add
push
faddl
sub
inc
aam
inc
mov
cli
ret
cmp
push
subb
leave
add
push
enter
sbb
incl
adc
dec
xchg
shll
cmp
push
mov
add
lret
lahf
add
cld
fists
iret
adc
sub
add
or
adc
in
inc
jb
sub
enter
out
stos
movsb
das
inc
mov
lock
sub
gs
push
inc
push
fsubs
mov
sbb
dec
push
push
add
in
ss
test
cld
add
xor
add
sub
data16
popf
shr
cmp
inc
jns
jae
sbbl
addb
jle,pt
sahf
std
adc
arpl
dec
jp
iret
aam
leave
xchg
add
adc
loop
and
outsb
push
xchg
roll
js
ds
cmp
jne
or
aas
aaa
add
call
stos
in
gs
icebp
inc
mov
xorb
jno
rorb
cmc
js
testl
jp
lret
orl
push
addr16
add
push
xor
mov
insl
add
sbb
mov
dec
aam
pop
mov
rcl
mov
add
xor
push
ret
sbb
xchg
loopne
jle
push
imul
or
pop
push
add
rorb
jno
fmul
not
pop
mov
inc
mov
xor
fadds
js
add
inc
lret
xchg
pop
bound
imul
mov
xor
pop
push
inc
xor
rcll
stos
cmp
and
jl
mov
inc
call
sub
xor
push
mov
or
cwtl
lods
add
into
mov
dec
jmp
out
mov
pop
pop
adc
xor
popf
cmpb
cmp
add
xor
je
inc
pop
adc
add
ljmp
mov
inc
movsb
add
scas
jecxz
int3
jp
mov
xchg
stos
sub
add
push
sub
push
scas
cmpsl
das
jecxz
es
jno
xchg
push
cmp
jg
dec
push
dec
add
push
lds
pop
movb
movsl
bound
adc
mov
mov
lcall
loopne
inc
mov
aad
in
ljmp
cltd
je
jnp
mov
add
popf
aad
cmp
insb
add
je
add
fstl
add
or
sbb
mov
pop
sub
mov
setge
sub
cli
mov
add
push
pop
mov
mov
mov
repz
xchg
add
push
inc
cwtl
mov
cmp
dec
subb
adc
call
push
and
pop
aam
lret
jo
hlt
dec
scas
cmp
inc
push
jecxz
aad
mov
and
call
fbstp
add
sbb
push
adc
push
push
leave
andb
pop
add
xchg
adc
dec
jmp
test
mov
fstl
dec
ret
mov
jnp
in
pop
cld
push
movl
pop
fadds
clc
inc
nop
test
movsl
jo
add
fidivrl
jb
add
pop
fucomi
filds
dec
pop
mov
loopne
jle
test
and
cltd
inc
or
aam
sub
lods
rcl
in
adc
cltd
inc
xchg
jle
adc
icebp
lea
add
call
leave
cmpsb
dec
add
and
sbb
clc
fsts
dec
pop
mov
out
cmp
cmc
out
mov
inc
add
icebp
jno
xchg
stos
in
sbb
pushf
lcall
adc
xor
lcall
je
inc
rorb
mov
fidivrs
insl
fadds
adc
test
lods
add
jbe
aaa
adc
add
pop
inc
mov
push
fdivrs
and
or
pusha
js
mov
fadds
or
das
add
imul
pop
andb
test
push
int
add
inc
xchg
add
mov
adc
dec
outsb
sub
add
inc
sbb
scas
jns
arpl
idivw
leave
push
add
lods
fadd
jo
add
shll
sbb
or
test
mov
sub
sub
adc
ret
xchg
sbb
test
cs
leave
rolb
hlt
dec
fs
outsb
mov
mov
test
repnz
imul
outsl
insl
and
scas
and
ja
cmp
sahf
les
pop
addr16
shlb
add
xchg
sub
push
add
sbb
pop
pop
and
mov
dec
test
fs
and
xor
aas
mov
fcmovu
imul
jbe
xor
push
cmp
decb
push
mov
xchg
subl
jne
mov
mov
mov
or
fisttps
sbb
imul
add
sub
xadd
mov
mov
int
sub
and
jne
add
push
dec
xor
adc
push
loopne
mov
in
push
loope
rol
add
lds
in
mov
mov
add
int
imul
addr16
imul
daa
push
push
dec
push
movsb
sbb
inc
jno
rcrb
imul
mov
add
mov
enter
mov
push
dec
stos
jo
add
loopne
xor
fisubrl
jo
mov
cmpl
xchg
adc
nop
int
fdivrl
imul
add
xor
or
lahf
cmp
addl
or
xchg
add
dec
stc
jnp
lahf
xchg
popf
andb
lea
or
adc
xchg
pop
pop
orl
nop
xchg
mov
jbe
mov
cld
push
int3
push
mov
nop
add
inc
rcrb
mov
mov
rol
pop
scas
or
add
mov
jle
mov
or
cmp
leave
or
inc
inc
pop
pusha
enter
in
rcll
rolb
fldcw
add
jno
mov
fwait
dec
mov
sub
lahf
add
daa
in
jbe
mov
inc
add
or
sbb
add
push
loop
or
call
mov
adc
ljmp
pop
cmp
sbb
jl
sbb
rcrl
mov
and
adc
xor
mov
jno
inc
xor
pop
adc
cmp
mov
jno
xor
mov
push
pop
jnp
adc
xor
lret
or
mov
movsl
or
or
fisubs
fildl
ljmp
mov
jmp
push
push
push
xor
and
lea
sbb
adc
mov
incl
pop
and
push
and
inc
hlt
stc
iret
add
xchg
sub
shll
sbb
push
sbb
pop
mov
hlt
jo
shlb
inc
add
xchg
lods
lret
adc
add
sbb
xor
stos
aam
rorl
jnp
test
adc
divb
inc
push
jbe
mov
push
popl
cmpl
sbb
add
sbbl
rcrl
mov
add
push
jge
add
cmp
add
hlt
jecxz
pop
sbb
mov
mov
shlb
ss
add
adc
jg
push
add
icebp
lret
xchg
lods
xor
pop
movsb
mov
dec
mov
mov
ror
insl
sub
or
add
add
faddl
add
negb
mov
sbb
xchg
inc
enter
and
or
nop
xchg
test
cwtl
inc
test
inc
outsb
dec
inc
mov
and
bound
dec
or
xchg
and
and
jl
mov
or
and
inc
xchg
sbb
xor
xor
adcl
pop
loope
inc
ds
add
ror
xor
loop
xor
out
mov
fmull
iret
cli
out
jbe
add
xchg
cs
sbb
popa
cmc
inc
lret
fwait
inc
adc
scas
int
sub
push
pop
in
ljmp
fiaddl
sbbl
cli
aam
mov
mov
pop
mov
mov
add
push
jg
dec
lcall
push
push
ss
xchg
rclb
lods
sub
fdivrl
adc
inc
stos
push
lahf
or
push
pop
push
mov
dec
clc
repz
stos
add
cmp
add
mov
add
aas
orb
fcoms
sbb
sbbl
add
test
cmp
movaps
push
cmpsb
into
xor
jae
inc
sbb
jg
inc
xchg
cmp
mov
push
cli
pop
add
aas
sar
cmc
lret
pop
mov
loopne
and
cmp
xor
clc
jb
push
add
out
shll
in
inc
int3
scas
stc
das
push
shrb
or
jnp
jnp
pop
inc
arpl
cld
repnz
pop
and
sbb
inc
shlb
sub
mov
stos
or
rcrl
cmpps
pop
and
daa
fdivrs
xor
sbb
add
inc
xchg
nop
mov
mov
fiadds
mov
cmp
filds
xchg
lods
jae
and
cmp
ds
outsb
cmp
les
xchg
out
pop
ds
cmpsl
popa
mov
addb
cmpsl
inc
test
sbb
jae
push
dec
ret
sub
lock
enter
pop
into
and
sbb
add
add
int
loop
and
bound
sub
insb
insl
push
pusha
popf
add
push
jne
loop
mov
xchg
push
mov
fs
add
not
add
leave
jge
inc
cld
sub
sti
xorl
add
outsl
push
jnp
jge
add
jo
dec
inc
jb
pop
fxch
scas
mov
cmovs
mov
mov
in
add
jne
push
aas
loopne
bound
call
pop
mov
outsl
xor
adcb
scas
add
addr16
popa
mov
push
add
into
shrl
and
pop
mov
pop
sub
add
pop
lock
cmp
fsubl
and
cmove
mov
outsb
jo
pop
arpl
add
and
testl
popf
adc
fs
inc
js
mov
aam
aaa
adc
mov
ficomps
out
mov
add
addb
pushf
add
out
mov
adc
iret
clc
xchg
fildll
add
mov
lsl
xorl
add
dec
xchg
xchg
mov
dec
xor
add
jbe
push
cmc
mov
mov
add
xor
jnp
sarl
nop
sub
pop
cmp
fs
cld
pop
jne
add
sar
loope
out
mov
pop
fldl
xor
mov
add
nop
jno
and
add
mov
adc
aad
in
popa
gs
mov
lock
xor
sbb
mov
call
inc
mov
push
scas
les
dec
lahf
aam
cltd
add
in
mov
sbb
push
cwtl
pop
popa
jge
adc
lock
add
nop
and
xlat
or
stos
add
cmc
xchg
sub
xchg
jmp
pop
fcom
mov
xor
add
cmp
jb
pop
mov
rorl
and
dec
xor
add
shr
mov
imul
dec
sbb
pop
pop
sbb
ret
sub
nop
or
cwtl
jg
pop
imul
add
shl
add
shll
aam
mov
int3
ja
cmp
ret
adcb
fisttpll
cwtl
clc
ljmp
fistl
cmp
fwait
in
inc
add
mov
mov
leave
add
mov
paddsb
arpl
cli
xchg
rcl
mov
loopne,pt
mov
sbb
add
mulw
dec
cmpsl
add
es
icebp
dec
xlat
les
outsb
mov
popf
clc
add
insl
xor
inc
add
mov
jmp
in
nop
mov
pusha
cwtl
pop
add
lret
xchg
clc
add
pop
or
pusha
xchg
sbb
lret
dec
mov
outsb
roll
sbb
addr16
fwait
jecxz
imul
sub
inc
adc
mov
pop
mul
jle
add
inc
mov
hlt
add
push
mov
sbb
popf
imul
out
jg
pop
push
add
movsl
add
adc
mov
in
sub
add
push
and
pop
add
mov
xchg
adc
fwait
jbe
and
int
adc
xrelease
stc
cmp
lahf
or
mov
fcoms
pop
ret
adc
xchg
mov
jo
out
inc
outsl
add
or
jecxz
call
das
sbb
add
out
inc
or
mov
add
mov
adc
or
jno
xchg
sub
cli
add
cmp
xlat
add
mov
dec
pop
add
ficompl
cmp
lock
add
mov
jnp
xchg
nop
ja
mov
push
fs
ret
addb
daa
add
jne
in
rcrb
push
imul
sbb
add
jo
push
cmpsb
add
xor
testb
add
mov
scas
xor
push
add
push
insb
int3
adc
mov
mov
push
mov
test
sahf
imul
adc
push
xchg
xorl
mov
jo
dec
out
add
addr16
inc
inc
xchg
jo
insl
aas
stos
mov
dec
shrb
cmp
jbe
ret
popf
sbb
sbb
mov
pop
or
and
fsub
adc
inc
xor
sbb
jb
mov
add
repnz
bound
adc
hlt
in
or
aas
mov
jle
sub
rcrl
and
mov
push
adc
jecxz
add
mov
and
push
leave
loop
pop
xchg
and
pop
dec
mov
adc
call
add
sarb
je
push
test
pop
pop
in
in
jnp
xor
insl
pop
out
nop
xlat
es
xor
js
mov
add
movsl
xchg
cli
sub
mov
add
stos
xchg
scas
pushf
dec
nop
clc
or
orb
sbb
add
lea
pop
notb
jo
push
mov
mov
add
jno
push
aam
mov
mov
hlt
lret
leave
popa
fdivrs
pop
and
aaa
sub
adc
repz
enter
imul
icebp
jl
jnp
cmpb
imul
push
mov
xor
jmp
roll
dec
pushf
addr16
nop
mov
cmpb
pusha
or
mov
out
rol
scas
add
lods
fsincos
dec
ret
inc
sub
mov
add
lock
loopne
and
shlb
add
jle
push
mov
dec
inc
push
sbb
inc
adc
pusha
sbb
test
add
push
pop
fst
push
inc
mov
mov
fs
jmp
mov
xor
loope
dec
jg
jp
addb
adc
xchg
jns
cmp
out
pusha
push
add
jae,pn
xor
mov
loop
cmp
mov
sahf
push
ss
cmc
pop
push
add
clc
push
jge
add
mov
pusha
inc
xor
mov
adc
push
negb
add
mov
fwait
add
or
sti
shrb
add
fisubrs
mov
fistl
into
jnp
mov
pop
jge
mov
add
outsl
pop
gs
or
dec
inc
fiaddl
or
push
pusha
aad
mov
add
cmpsl
pop
mov
loop
in
push
iret
dec
inc
add
testl
pushf
sbb
add
ss
lods
imul
decl
mov
fs
sbb
add
mov
mov
aad
add
jne
sub
pushw
add
fnstsw
les
out
mov
inc
push
mov
and
and
inc
cli
pop
mov
mov
enter
outsb
cmpsl
ret
mov
fldl
and
jbe
mov
rclb
lahf
pop
outsb
aas
add
jae
mov
es
sbbl
jmp
and
lods
pop
popf
into
cmp
and
add
sbb
jp,pt
lods
mov
xchg
pop
es
adc
cmpl
arpl
aas
or
dec
sub
xor
sbb
and
in
fadds
daa
leave
pop
int3
sbb
aaa
callw
test
mov
mov
inc
pop
mov
add
rolb
jo
add
cld
popf
add
out
les
sub
leave
addr16
pusha
adc
scas
test
jbe
jmp
xor
and
das
lcall
arpl
xor
fcmovne
out
ja
out
jo
or
add
scas
jecxz
fcoms
cmp
jp
push
or
hlt
add
shrb
mov
int
pop
dec
add
xor
inc
aad
pop
out
cmp
js
fwait
push
and
add
xor
hlt
mov
shl
and
sbb
pushw
xlat
into
jg
nop
clc
repnz
inc
cmpb
jbe
dec
mov
scas
inc
fwait
cmp
movsb
out
js
lret
adc
loopne
inc
aam
add
cmp
cmp
sbb
sbb
cmp
lea
out
leave
cld
shrb
fldenv
rorb
add
jo
fadd
cmp
mov
idivb
pop
xchg
sbb
pusha
xchg
incb
outsb
xchg
and
call
insb
mov
fs
sahf
mov
out
xchg
dec
int3
int
mov
rcl
decb
mov
inc
add
dec
xchg
das
add
sub
pop
xorl
pop
dec
push
les
inc
push
int
inc
data16
cmp
test
js
add
mov
popl
xchg
mov
sbb
arpl
jge
in
xlat
iret
or
inc
or
and
pop
inc
jl
and
adc
dec
shll
jmp
test
fsubrs
out
out
add
enter
mov
add
pop
sub
mov
sub
pop
and
call
push
jmp
punpckhwd
negb
lock
leave
lret
mov
jbe
out
add
xlat
cld
rolb
fsubrl
pushf
pop
aas
xchg
mov
mov
mov
sub
dec
sbb
pop
vprotb
bound
aam
test
sub
xor
jae
add
jp
pop
jb
push
mov
jnp
add
popf
adc
in
out
add
lea
lahf
xor
sub
sbb
popl
int3
cmp
cmp
jbe
lds
fdivr
jle
add
das
jecxz
sbb
fistpll
push
mov
sub
jle
lcall
test
out
pop
sahf
or
sub
sub
mov
ss
jns
in
jnp
xor
jmp
mov
sbb
add
insb
adc
icebp
mov
insl
pop
jo
add
push
in
lds
mov
adc
or
ljmp
jge
dec
pop
dec
xlat
xor
pusha
add
push
popa
cmpsb
pop
jb
mov
add
or
add
sub
adc
sbb
int
pop
inc
inc
loop
rcrb
add
cmpsl
jecxz
cmp
add
cltd
pop
sti
aaa
imul
stos
and
or
shlb
add
in
and
pop
cmp
int
jle
sbb
mov
push
xor
enter
les
int3
inc
mov
add
or
jae
jp
add
rcl
or
sub
sub
jne
add
or
or
push
ror
mov
imul
mov
data16
pop
cmp
das
push
inc
push
outsl
mov
push
sahf
and
ret
mov
into
add
push
out
dec
insl
mov
inc
fadds
xor
in
add
or
cli
pop
repz
pop
inc
jge
mov
lods
inc
add
lods
call
sti
push
jmp
mov
shrb
push
iret
push
jo
jbe
in
nop
mov
fucomip
xorb
inc
lock
aad
jmp
xor
sbb
inc
or
and
stos
lods
push
out
rolb
add
das
dec
add
cmp
add
push
test
lock
add
data16
cmp
cs
and
mov
xchg
scas
xchg
inc
aas
add
leave
js
xor
les
adc
add
aaa
lea
dec
bound
loopne
cmp
mov
pop
adc
movb
mov
mov
jo
clc
sarb
xchg
add
test
adc
stos
sub
cs
dec
leave
mov
decl
int3
add
push
movsl
inc
pop
ret
out
fists
or
inc
stos
fnstcw
pop
push
sub
mov
shrl
stos
dec
ret
cli
mov
jl
stc
repz
sub
jns
xor
aam
inc
in
lock
test
call
push
ret
jns
dec
sbb
sti
repnz
mov
mov
xor
inc
aam
imul
add
cmp
scas
xchg
xor
add
mov
lock
pusha
jmp
adc
cmc
mov
imul
or
sbb
mov
hlt
cld
stos
paddw
mov
andb
outsb
xchg
xchg
cmc
xor
sub
xchg
sbb
push
popa
push
cld
fdivs
in
into
out
or
loope
repnz
mov
mov
mov
fwait
ret
jle
mov
xor
push
cmp
jp
fsubrl
cmp
out
mov
add
lret
xorb
outsl
jecxz
and
jne
out
adc
call
xchg
leave
add
inc
pop
aaa
sbb
movl
ror
add
popf
adc
icebp
into
inc
xlat
andb
test
lret
mov
lea
fldt
stc
push
mov
ret
add
inc
loope
cmp
popl
pop
ret
jl
pop
int
or
mov
repnz
add
aad
add
lret
and
mov
clc
cltd
roll
dec
hlt
loope
mov
call
fimuls
ret
push
cs
push
mov
mov
add
int
test
inc
mulb
std
add
inc
aad
dec
jecxz
add
cwtl
add
ror
inc
scas
mov
stos
xchg
add
icebp
lods
andl
mov
jmp
scas
sbbb
rorb
jg
and
enter
mov
mov
cmp
stos
mov
das
push
icebp
jno
fwait
lock
loope
leave
aam
and
add
lock
cmp
sbb
es
add
and
out
aam
aas
cmp
add
mov
sbb
mull
xchg
inc
js
add
out
push
inc
lret
add
shlb
or
add
jp
add
xor
push
fnsetpm(287
scas
push
test
fsubrp
addl
jae
cmp
and
sbb
sub
xor
mov
add
jno
sbb
aam
xor
or
push
sarb
leave
nop
sbb
out
pop
arpl
cmp
pop
mov
pusha
cwtl
out
jmp
icebp
cmp
push
addr16
jo
sub
int3
call
pop
add
mov
xor
je
xchg
mov
es
add
loopne
mov
cmp
inc
aad
cmp
jo
mov
push
lock
add
inc
mov
pop
push
lods
add
dec
adc
leave
js
neg
nop
in
add
jecxz
mov
mov
add
adc
scas
pop
pop
je
jnp
sahf
pop
outsb
dec
mov
ja
add
pop
xor
add
dec
loop
adc
imul
cmp
adc
or
add
inc
ficomps
lods
push
mov
mov
cwtl
xchg
xor
pop
push
sbbb
cmp
scas
ja
out
push
mov
cmpb
cmpl
or
jbe
pop
std
jg
aad
inc
inc
scas
mov
cmpsb
scas
pusha
popf
cltd
shll
xchg
mov
out
sbb
cmp
out
sub
mov
add
daa
xor
pop
and
add
push
in
fsubr
add
in
fs
add
pop
jp
add
call
mov
mov
inc
push
mov
xchg
in
inc
push
mov
mov
pop
fwait
add
sub
cmp
lock
rcrb
pop
add
pop
jns
scas
and
gs
add
aaa
aad
add
stos
mov
ja
cmp
mov
and
rclb
inc
pop
scas
clc
sub
cmp
addl
xor
add
mov
arpl
insl
xchg
add
test
les
jo
into
pop
and
inc
fldenv
xor
xchg
push
aam
pop
les
sub
cmp
jp
xchg
inc
lret
pop
push
mov
mov
pop
add
stos
cli
and
sub
xchg
test
and
push
pop
mov
in
mov
add
popa
pop
jbe
cmp
dec
inc
iret
ljmp
in
add
lea
adc
add
add
in
jo
lahf
mov
or
mov
cmpl
dec
add
sub
pop
add
loop
and
lods
lea
enter
ret
lahf
push
adc
jns
or
insl
nop
movsb
pop
inc
mov
add
int3
add
push
fistps
add
in
jae
add
xchg
add
ds
pop
mov
cltd
pop
outsl
faddl
in
xchg
jno
repz
in
mov
add
xchg
add
xchg
push
lret
in
sbb
loopne
ljmp
fiadds
inc
dec
pop
in
xchg
or
lahf
cmp
jge
or
mul
and
dec
pop
add
xor
inc
shlb
sub
js
pushl
adc
adc
cmp
add
jmp
inc
loope
sub
je
pop
and
or
mov
int3
sbb
add
rcrl
addl
sbb
push
lds
hlt
cltd
call
jmp
aam
dec
add
xlat
dec
rcr
xchg
lret
ds
cmp
lock
lods
add
gs
pop
clc
push
or
or
js
add
mov
dec
jge
jle
push
jo
bound
inc
out
fimull
or
inc
dec
leave
inc
inc
sarl
ja
or
dec
out
xchg
mov
jo
add
cmpsb
icebp
sub
mov
adcb
mov
out
sub
pop
iret
ficoml
sbb
fistpl
cmp
or
push
into
sbb
loope
dec
add
rcrl
popf
aad
and
jbe
les
sbb
subb
add
repz
pop
addb
ljmp
or
lods
ret
popa
sub
popa
mov
jle
cmp
lret
jo
pop
loope
or
loopne
add
mov
mov
movsb
add
in
xchg
mov
jge
mov
add
in
stos
addb
jno
add
cmp
dec
aad
bound
loop
push
pop
fmull
cmp
call
daa
or
mov
rcrb
sub
and
adc
cld
call
inc
or
pop
punpckhbw
mov
fwait
inc
dec
mov
cli
push
in
xor
sbb
add
push
dec
add
pop
testb
iret
clc
push
jnp
pop
jle
add
cmpsl
inc
movsb
fistps
daa
imul
jne
mull
fwait
mov
lret
shll
jl
or
hlt
imul
cmp
add
fwait
mov
pop
xor
add
fs
mov
dec
shrl
pusha
mov
add
mov
fists
ret
push
xchg
jmp
add
addb
add
push
lcall
and
rolb
sbb
xor
xor
iret
pop
lret
xchg
clc
sub
cmpsb
repnz
inc
shlb
out
lea
call
adc
out
xor
xchg
into
dec
add
cmc
and
add
jo
decb
in
xchg
enter
and
cld
push
adc
rclb
add
mov
pop
push
sbb
dec
int
add
in
adc
outsb
add
inc
add
xchg
test
lock
cmp
stos
gs
jno
testl
ret
xorl
les
cmp
sub
std
inc
out
add
xor
mov
dec
imul
icebp
aad
lock
adc
jno
xchg
dec
cwtl
cltd
sbb
add
push
mov
imulb
sbbb
jl
cmp
xlat
pop
mov
xor
xor
aam
adcl
push
pop
aam
add
mov
sarl
movsb
sahf
xor
dec
adc
xor
call
jmp
add
mov
stc
cmp
jo
test
int
add
dec
ss
test
mov
jl
add
jne
mov
xor
add
int
out
lods
pop
mov
cwtl
push
lock
lods
dec
test
mov
pusha
and
loope
cld
rolb
xor
repz
mov
pop
adcl
push
xchg
cltd
inc
popa
xor
xchg
rcr
test
xchg
pop
cmp
lods
leave
roll
jne
add
mov
sub
push
push
add
add
adc
js
dec
add
or
jl
mov
jecxz
mov
shll
and
sub
std
sbb
push
push
inc
loope
enter
dec
mov
jo
sbb
dec
jge
repnz
testl
fs
in
inc
fistps
stos
xchg
icebp
inc
jl
add
mov
jnp
cmp
cmpsb
mov
mov
push
adc
sbb
mov
clc
add
fs
mov
and
cld
mov
push
pop
mov
adc
mov
fs
andl
add
mov
jecxz
mov
ror
jp
cmp
sbb
subb
mov
mov
js
cmp
and
pusha
xchg
or
in
pop
push
pop
add
mov
mov
pushf
xor
xchg
cmp
cmp
push
mulb
loope
jns
add
hlt
cmp
enter
ret
shl
cltd
add
add
pop
push
call
scas
sub
xor
mov
sbbb
dec
out
push
add
xchg
adc
pusha
add
mov
pop
sub
out
xor
lret
lcall
xor
pusha
inc
push
scas
aad
and
scas
hlt
add
xchg
iret
mov
xor
sbbb
pop
mov
ljmp
mov
fbstp
sbbl
cmpsl
fs
jle
pop
mov
xchg
faddl
jecxz
inc
daa
cli
rolb
cld
in
jmp
sahf
sti
mov
cmp
add
les
mov
imul
sbb
push
shlb
xor
jae
movsl
ret
jne
mov
add
stos
dec
add
fldcw
aaa
subb
sub
add
sbb
inc
mov
jno
jnp
push
push
aam
push
jge
xchg
popf
and
dec
sbb
addb
adc
roll
lahf
cltd
push
jne
lock
add
mov
pop
cmp
movsb
sbb
mov
cmp
fs
leave
stos
adc
fidivrs
addl
and
jl
fidivs
stos
lahf
jle
movsl
test
mull
movsb
into
and
sub
fmul
xor
push
enter
mov
jle
adc
sbb
dec
imul
addb
inc
xchg
test
mov
aam
mov
fistpll
std
loope
pushf
or
pop
lds
sahf
add
repnz
aas
fdivrl
add
adc
ret
jp
add
hlt
popa
add
cmp
lcall
pop
movsb
mov
adc
mov
leave
or
xor
lldt
cmp
in
stos
cmp
add
ljmp
outsl
add
jge
dec
outsb
or
enter
cmp
add
push
sbbb
test
jns
xor
mov
jo
pop
push
add
cs
dec
jo
add
ret
imul
add
idivl
loope
or
push
pushf
sbb
adc
mov
lahf
jno
add
lret
sbb
push
sub
addr16
pop
pop
in
inc
shll
jp
fidivl
out
std
ljmp
cmp
add
jge
xor
sub
loop
rorl
les
pop
cmc
ret
mov
mov
add
mov
xchg
jecxz
push
std
mov
orb
out
loop
push
pop
xorb
ss
push
push
test
adc
xchg
dec
pop
popa
or
mov
sub
out
add
pop
nop
cltd
lock
mov
andb
xor
enter
jae
push
jp
sub
adc
andl
push
jmp
out
push
mov
push
out
xlat
andl
fwait
enter
mov
or
ret
push
std
fidivl
add
dec
sbb
xor
test
mov
dec
mov
pop
andb
pop
pop
shl
cmp
incl
mov
sub
test
xchg
sbbl
mov
xor
ret
enter
mov
cmp
pusha
xchg
sub
int
xchg
lods
jl
or
mov
jb
pop
xor
or
pushf
adc
cmp
xor
dec
stos
cmp
dec
pop
pushaw
outsb
mov
rclb
mov
add
fildll
add
xor
jo
push
mov
in
in
cld
push
sbb
sub
repnz
ds
or
push
out
mov
sub
add
out
idivl
clc
roll
pusha
xchg
je
cmp
xchg
pop
in
xor
loope
pusha
aaa
pop
testl
add
or
fiadds
wbinvd
add
jns
lea
mov
push
and
rorb
movsb
mov
fstps
stos
xorb
inc
loope
mov
xchg
add
mov
daa
mov
fwait
les
js
add
dec
in
pop
lods
sbb
enter
sub
aas
mov
mov
cld
repz
add
mov
fcmovb
cmp
xor
add
sbb
or
mov
movsb
push
adc
mov
cmpb
adc
dec
clc
ffreep
inc
mov
or
dec
daa
sbb
lods
stc
call
ret
push
pushl
hlt
neg
jl
add
mov
push
sbb
andl
clc
pusha
dec
popa
sub
rolb
or
dec
cmp
sbb
pushf
xor
sldt
dec
push
sbb
and
sahf
jo
add
cmp
popa
das
lock
add
push
leave
notl
fdivrs
add
pop
jmp
sub
lcall
cmc
sbbb
sbb
out
inc
add
dec
mov
lcall
xchg
cmp
cmp
pop
les
ljmp
and
pushf
fnstcw
dec
add
push
push
pop
ss
mov
sarb
add
mov
leave
jmp
xor
flds
cltd
in
xchg
mov
cli
iret
jle
add
push
xchg
lret
lret
add
and
mov
mov
xor
push
add
lahf
popl
sbb
pop
add
ja
das
add
cmp
ret
mov
loope
je
popf
jg
xor
pop
cmp
stos
mov
int3
cmp
nop
or
mov
jns
stc
sub
mov
add
cmp
leave
mov
cmp
pop
push
stc
add
cmp
xor
pusha
dec
sub
insb
and
movsl
jnp
mov
mov
mull
loope
pusha
and
int
xor
data16
push
add
xorb
test
clc
jo
pop
add
lcall
lock
dec
ljmp
std
repz
test
das
add
in
out
pop
xor
subb
xchg
ljmp
push
outsb
mov
inc
mov
lcall
add
push
loopne
mov
aad
mov
stos
mov
rcrl
jmp
add
or
xor
add
add
cmp
jecxz
in
rclb
xor
punpcklbw
jnp
test
add
inc
dec
in
fiadds
push
or
inc
and
daa
repz
mov
int3
or
loop
in
pop
xchg
xor
push
cmp
std
fildll
ret
dec
lsl
lahf
mov
add
jae
popw
test
out
iret
data16
mov
lods
jg
adc
jb
dec
inc
mov
inc
movsl
leave
jp
add
test
push
enter
add
popf
and
pop
adc
mov
lock
imul
add
jge
std
lods
and
sub
cmpsl
ja
or
mov
mov
imul
sbb
rorb
lock
jp
or
add
xchg
pop
mov
jp
add
sar
nop
add
inc
xlat
cld
inc
pop
shrb
pop
mov
inc
out
inc
mov
test
push
dec
cld
sub
jl
add
mov
out
add
ror
mov
fsubrl
ret
or
or
pop
mov
jmp
movsb
lea
stos
cmp
int
nop
xor
in
enter
push
test
js
icebp
rcrb
mov
int
xor
add
inc
add
add
xor
cmp
add
ds
cmp
jle
mov
and
hlt
les
mov
mov
out
mov
or
add
add
mov
sub
mov
sti
mov
inc
imul
adc
dec
cmp
enter
add
mov
sub
nop
or
mov
mov
pop
pop
pop
daa
testl
push
fiaddl
jmp
cmpb
xchg
add
cmp
dec
rorb
add
inc
int
daa
cmpl
push
cmp
adc
fwait
aaa
fdivr
adc
sbb
stos
add
xchg
push
sbb
add
loopne
sub
mov
inc
cmpsl
mov
sub
mov
mov
add
push
mov
rorb
mov
push
sub
mov
pop
cmc
dec
add
out
mov
xchg
add
add
inc
sbb
fisttpl
rcrb
gs
sbb
pop
push
call
add
sub
test
xor
add
mov
inc
xchg
push
xlat
add
in
scas
adc
mov
imull
push
inc
insb
pusha
jno
push
in
sbb
add
jne
imul
mov
bound
popf
add
lods
adc
cltd
ret
add
cmp
loopne
add
cwtl
outsl
lret
cmp
xorl
pop
out
add
nop
stos
adc
jl
cltd
push
jecxz
sbb
js
jl
cwtl
add
adc
je
test
pusha
sbb
or
into
mov
pusha
pop
add
pop
shlb
xchg
add
je
sub
lcall
mov
adc
leave
add
imul
jnp
das
nop
mov
pusha
test
call
xor
sub
jp
sub
cs
add
lock
push
push
test
xor
fdivrl
push
pop
rolb
mov
cmp
insb
arpl
enter
sub
shlb
or
inc
fdivrs
add
push
mov
aam
addb
mov
sar
popa
inc
repz
jp
mov
jbe
mov
sbb
test
xchg
lret
and
scas
dec
popa
pop
push
cmp
into
adc
dec
int
aad
out
mov
nop
gs
push
cwtl
jo
cmp
addb
scas
addl
js
loop
add
jp
fstp
addb
fstps
rolb
push
mov
pop
jecxz
push
sub
or
jb
xor
cwtl
ret
add
sbb
sbb
loope
repnz
adc
add
add
shl
lea
into
cmp
lods
pop
mov
fadds
aam
outsb
push
enter
shlb
fcomi
sub
cmc
add
pusha
cmp
push
push
xor
pop
inc
outsl
add
sub
es
add
sbb
lods
dec
lods
je
add
in
std
add
sahf
push
add
push
inc
and
xor
lea
adc
mov
jns
addr16
into
dec
mov
push
popf
cmpsb
add
insb
shrb
addb
xor
push
sub
cmpsb
cld
or
sub
add
push
or
lret
pop
jo
imul
add
xchg
lods
leave
add
loop
lret
sub
rolb
test
leave
push
les
dec
dec
ja
and
add
xor
nop
sbb
xchg
popa
insb
loopne
jns
loop
add
repz
jmp
jl
fs
add
cmp
outsl
aam
shrb
mov
loope
mov
das
jno
in
mov
push
movsb
push
es
cmpsl
xchg
pop
xchg
pop
enter
inc
pop
jp
lea
jecxz
xchg
sbbb
add
sub
adc
inc
shrl
mov
mov
fldt
or
jle
add
mov
inc
push
insb
xchg
imul
mov
lret
xor
mov
leave
popa
into
add
ffree
outsl
loope
sbb
dec
mov
cwtl
mov
push
in
sahf
in
fldt
push
insl
roll
jg
push
mov
xor
fdivr
pop
ss
push
scas
adcl
sbb
mov
repnz
jmp
jecxz
xor
and
sub
fbstp
dec
enter
push
pop
std
in
add
mov
add
push
sbb
dec
out
pop
clc
push
pusha
lahf
mov
inc
cli
mov
or
sbb
rcrb
dec
pop
push
mov
or
cld
and
lret
push
push
sbb
push
pop
pop
lret
mov
movsb
ja
cwtl
mov
movl
mov
pushf
sbb
add
jae
dec
js
je
add
adc
sub
addb
jecxz
aaa
cmpsb
das
add
jo
sahf
push
or
movsl
add
cmc
and
iret
jg
add
jmp
push
jb
add
mov
jo
lods
add
push
dec
jle
or
sub
mov
pop
lods
sti
and
jp
add
das
cli
inc
insl
inc
mov
push
roll
adc
or
mov
daa
or
sub
add
cmpl
add
mov
push
insl
add
lods
mov
aaa
lret
popa
push
fmull
push
jge
sub
add
imul
call
push
mov
clc
cmp
xor
mov
mov
or
xor
adc
add
addr16
jl
mov
jmp
jb
xor
dec
test
jge
loope
adc
icebp
nop
repnz
push
cli
loop
mov
cmp
icebp
push
repz
fildl
iret
pop
dec
xorl
mov
cmp
xlat
dec
icebp
shl
int
and
or
xor
nop
xchg
leave
outsb
cmp
cs
aas
orb
stc
adc
push
add
js
xchg
add
icebp
xor
pop
pop
push
add
jl
mov
out
cmp
push
das
xchg
sub
add
push
ret
sbb
xor
test
pushf
call
ja
lods
cmp
test
mov
xor
push
push
pop
mov
push
dec
and
fcmovb
push
or
xor
dec
add
jo
out
cmpsb
inc
jl
push
xchg
mov
ja
addr16
or
jbe
mov
jns
dec
inc
pop
push
jne
mov
mov
push
inc
dec
pavgw
or
loopne
call
pop
inc
push
divl
and
iret
test
out
ljmp
xor
sbb
inc
repnz
cmpl
rclb
or
movsb
in
sub
jns
push
mov
movsl
loope
add
test
insb
faddl
add
cmc
addr16
outsb
inc
jp
dec
ja
sbb
mov
or
add
adc
dec
xchg
enter
pop
xor
notl
popa
pop
xchg
and
sbb
jecxz
cmp
and
pop
push
add
mov
mov
inc
mov
push
push
sub
fldcw
sldt
and
scas
daa
pushf
inc
add
and
ret
out
in
loopne
rcrb
sahf
mov
jle
loop
mov
xlat
add
aam
push
outsl
adc
arpl
inc
test
mov
sub
push
pop
sahf
xor
pop
cmp
adc
in
and
jbe
rcll
or
push
call
jge
mov
pop
cltd
lods
or
mov
xchg
scas
mov
xlat
add
test
dec
popf
iret
sti
ds
add
fwait
out
xor
das
mulb
mov
or
in
dec
out
or
sbb
int
into
shl
add
mov
mov
push
lods
pusha
ljmp
add
add
mov
les
iret
jb
sub
push
jg
sti
mov
shrb
dec
jmp
rorb
mulb
inc
mov
call
and
mov
lods
add
mov
ud0
rolb
aad
enter
lods
pslld
inc
roll
cli
mov
mov
sub
js
xchg
testb
push
les
fs
stos
jge
jae
or
divl
or
sub
popa
adc
int
adc
adc
outsb
sbb
and
fiadds
adc
sub
and
and
jb
test
and
push
icebp
adc
bound
sub
mov
adc
inc
mov
push
in
mov
mov
nop
mov
push
in
lret
inc
aaa
popa
mov
jb
gs
xor
leave
loope
lds
pop
fs
and
lock
filds
pusha
notl
cmp
movsl
push
jne
mov
xor
pop
insl
xchg
std
rcrb
lahf
mov
pop
dec
pop
sarb
rol
stos
fiadds
xchg
mov
pop
sub
popa
insl
add
xor
jg
stos
xor
mov
out
flds
push
sbb
test
test
outsl
pop
cmpb
push
mov
dec
cmp
test
mov
push
dec
enter
mov
cli
push
push
dec
js
inc
fisttpll
popa
xchg
sub
cmp
cmpb
bound
pop
dec
cmpl
fstpl
sub
loopne
add
push
adc
mov
and
fs
sbbb
or
mov
popf
cltd
inc
add
mov
clc
mov
dec
mov
push
or
add
arpl
inc
add
pusha
xor
adc
sub
into
xchg
dec
daa
or
cli
ss
inc
add
pushf
xchg
movsl
xchg
adc
inc
xorb
cmp
rolb
add
cltd
lock
ds
adc
and
inc
sbb
xchg
ds
push
sbb
aam
cmp
cmovp
sub
sarb
or
outsb
xchg
or
mov
and
add
sbb
or
jne
jb
je
loope
ds
sbb
mov
pop
jp
dec
dec
jmp
fwait
inc
leave
sbb
dec
and
cmp
lock
add
dec
ljmp
in
subb
movups
daa
loopne
mov
pop
mov
in
mov
sub
into
mov
int3
mov
add
mov
mov
add
dec
and
in
xor
fiadds
sbbb
stc
cwtl
cld
jl
pop
sti
addb
xor
scas
push
idivb
pop
inc
lea
xor
shl
xchg
stc
adcb
inc
ret
or
xorb
ja
or
lret
shlb
jae
mov
fistps
or
sbb
in
add
jo
cmpsb
jl
roll
xor
and
mov
cmp
repz
add
jle
jl
add
data16
and
or
mov
out
add
fadd
pop
push
enter
add
jp
and
and
cmp
fwait
push
xchg
cmc
pop
subl
call
js
xchg
cmpsb
or
negl
pop
les
fsubl
mov
cmp
sbbb
nop
push
xchg
mov
imul
out
sbb
push
adc
cmp
lds
aaa
or
mov
mov
gs
xchg
add
loop
mov
add
mov
mov
or
in
nop
push
or
add
outsl
push
std
and
test
add
dec
in
test
scas
xchg
xor
out
pop
inc
push
mov
add
mov
repz
dec
std
ret
dec
add
stc
jge
icebp
cmp
add
cmpsl
insb
adc
push
and
pop
add
add
adc
leave
mov
scas
push
push
sub
outsb
shrb
ds
add
out
xor
loop
sub
jns
mov
add
daa
inc
sub
add
xchg
inc
mov
push
add
sti
es
in
adc
sbb
add
arpl
xor
pusha
lcall
push
inc
mov
fwait
rol
sub
adcl
mov
cmp
xchg
ja
dec
loop
mov
ficoms
and
lret
jp
es
add
jnp
jmp
inc
mov
sarl
add
mov
imul
hlt
sub
adc
movsl
and
inc
in
push
rolb
add
inc
push
fsubrl
enter
cmp
mov
fadd
xor
addr16
add
sub
mov
popf
push
sbb
scas
addl
mov
xchg
fimuls
cmp
pop
add
js
lea
dec
xor
xlat
inc
mov
and
mov
pop
xor
faddp
add
out
add
mov
out
mov
stos
roll
xor
push
cmpl
lahf
add
mov
mov
jne
movups
shlb
add
js
rclb
repz
adc
push
pop
add
mulb
and
ss
dec
dec
xchg
mov
stos
mov
dec
xchg
push
sub
mov
nop
push
or
sbb
nop
fstpl
ds
pop
cld
shl
mov
cltd
adcb
add
enter
cmp
dec
call
cwtl
int
add
mov
push
add
add
aad
xor
arpl
xor
mov
loopne
in
sbb
mov
pop
lods
jns
loopne
mov
push
ds
push
mov
sbb
sbb
mov
orb
add
lahf
pop
lahf
add
fldt
lret
int
sub
cltd
push
inc
pushf
jecxz
lods
add
imul
jo
xchg
add
dec
mov
inc
xor
add
xchg
mov
rcrl
inc
xchg
in
scas
push
lock
inc
push
add
mov
mov
inc
or
insb
xor
xor
cmp
roll
xlat
out
add
je
insb
add
sbbb
inc
sarb
std
aam
sbb
sbb
pushw
pop
xor
arpl
sub
and
sub
push
xor
faddp
notb
or
and
push
sub
mov
ljmp
xchg
lods
mov
fmulp
test
jp
dec
cmp
jmp
add
push
dec
add
clc
sub
sub
xor
inc
and
scas
mov
aam
shlb
loopne
or
xchg
scas
add
lahf
or
adc
add
mov
pusha
pop
jbe
add
jmp
dec
jae
ss
or
cli
cmp
pop
les
ficoms
mov
jae
repz
add
inc
jo
add
xchg
pop
lock
imul
insb
adc
sti
subb
jle
add
jb
lds
push
adc
in
stc
ljmp
xchg
scas
mov
lds
add
roll
jle
push
jge
jge
add
les
jbe
push
cmp
and
lcall
aaa
in
cmpsb
xor
shlb
insb
clc
mov
add
push
jmp
add
xor
jl
daa
xchg
push
add
dec
mov
sbb
ja
cmp
out
adc
pop
lock
fsts
xor
lock
adc
mov
cmp
add
pop
sbb
jl
mov
fs
daa
inc
jbe
sub
adc
fdivrs
xor
cmp
cmpsb
add
gs
nop
mov
fcompl
or
out
mov
push
shrd
cld
add
or
mov
jp
cld
pop
push
pusha
or
add
cli
rep
pop
and
test
imul
pop
icebp
pop
lahf
arpl
xor
aam
jo
add
sub
add
stc
popa
jmp
in
add
xchg
xor
je
aas
mov
xchg
dec
je
add
loop
add
sub
in
sub
mov
mov
or
inc
mov
jb
jno
xlat
add
call
xor
mov
xchg
jno
cli
sti
dec
push
xchg
dec
add
xchg
cltd
int3
fadds
aam
stc
adc
add
xchg
mov
ficoml
pop
lret
mov
out
in
leave
adc
pop
dec
push
les
and
lods
mov
add
and
adc
addl
test
fldl
ficoml
pusha
cmp
push
mov
push
jmp
rcrl
jb
nop
cmp
inc
sub
add
data16
in
clc
test
and
daa
call
lock
mov
test
js
pop
cmp
insl
test
mov
repnz
pop
les
lret
jg
leave
sub
or
fadds
outsb
pop
xchg
inc
pop
adc
xchg
test
dec
lahf
pop
xor
add
add
mov
add
sub
clc
out
xor
mov
jno
into
xorl
sti
or
pop
mov
pop
lds
mov
add
xor
daa
loopne
mov
mov
adc
or
nop
aad
dec
push
or
xor
addr16
orb
sbb
cmp
sbb
jb
mov
push
cmpsl
inc
popa
xor
pop
add
dec
pop
lret
mov
mov
sti
sbb
subb
popa
and
add
icebp
hlt
test
pushf
cwtl
add
sbb
adc
sub
push
lcall
je
xchg
sti
jge
or
add
and
jo
add
scas
add
add
rol
and
push
push
in
dec
mov
adc
cmpsb
outsl
add
sarb
ficoml
jnp
roll
rclb
jns
add
iret
inc
insb
push
cmp
xor
jo
or
fisubrl
dec
cmpsb
jecxz
push
pop
out
inc
out
mov
mov
adc
daa
sbb
add
adc
adc
dec
add
shl
sbb
sbb
mov
cmp
icebp
fwait
add
jno
js
imul
adc
mov
rcrb
add
or
xchg
push
sbb
repnz
rorl
add
add
mov
pusha
repnz
add
rclb
add
mov
inc
int3
push
mov
into
push
test
orb
add
subb
jp
mov
jge
xchg
nop
add
or
bnd
add
mov
dec
add
xor
add
rclb
scas
pop
call
sbb
sbb
add
rcr
sahf
ret
loopne
inc
mov
popf
mov
add
mov
pushf
sub
push
dec
xchg
xchg
out
loopne
int
icebp
adc
in
sub
jl
lods
dec
jbe
pop
mov
fldl
or
ds
xor
lods
mov
adc
xor
and
xchg
aas
clc
inc
sub
xchg
es
inc
flds
stos
aas
sahf
pop
add
repnz
pop
hlt
loopne
fwait
jns
mov
add
push
adc
xchg
icebp
inc
in
aas
adc
pushf
mov
add
call
stc
jo
andb
mov
outsb
add
jbe
fs
cmc
js
je
add
push
fnstenv
into
sbb
sub
add
push
lret
iret
mov
out
rolb
jnp
add
mov
add
pop
stos
fmull
mov
dec
pop
adc
mov
adc
and
adc
add
push
mov
roll
int
add
mov
sub
jne
jnp
mov
popf
cmc
lret
imul
dec
pop
dec
sbb
pop
int3
and
add
cli
inc
frstor
dec
mov
aaa
inc
and
add
push
iret
pusha
test
mov
in
jno
xor
loopne
sub
push
pop
mov
loopne
rolb
mov
jl
js
sub
arpl
and
pop
neg
mov
jns
push
cmovs
jae
mov
add
pop
testl
jle
imul
adc
jmp
lods
mov
add
or
jae
and
xorb
mov
dec
jle
testl
mov
dec
lods
inc
scas
xor
jnp
xor
fsubl
andb
xor
add
jb
mov
and
add
pop
inc
mov
jl
js
add
dec
xchg
repnz
mov
cmp
push
lret
outsb
pop
cld
xchg
sbb
jo
mov
jns
sub
aam
inc
sbb
rorb
mov
add
or
push
ret
clts
fmuls
inc
mov
jbe
inc
mov
repnz
and
xor
push
pop
jp
push
mov
in
sbb
add
adc
mov
inc
in
cltd
lock
icebp
clc
add
ja
popa
sbb
adc
dec
jmp
add
cmp
mov
add
pop
insb
test
mov
add
shlb
add
leave
mov
lret
xchg
mov
add
dec
xlat
call
mov
dec
inc
pop
jo
add
outsb
mov
fildl
mov
sub
mov
out
add
jb
inc
mov
push
mov
shrb
fadd
and
pusha
sarb
and
bound
and
test
mov
arpl
lods
fdiv
add
add
dec
mov
stos
add
mov
inc
push
int3
lea
or
dec
add
iret
fucomp
add
mov
push
sub
int
xchg
int3
nop
push
in
add
stc
mov
xor
add
xor
cmp
pop
inc
xor
jb
sub
sarb
push
push
lds
cmpsl
sbb
mov
lret
mov
in
loopne
gs
pop
xor
push
adc
xchg
jno
stos
adc
mov
add
in
push
pop
andb
scas
jl
ljmp
loope
push
add
or
sahf
xlat
push
or
add
testl
adc
xchg
jecxz
or
popa
lds
add
dec
outsl
test
arpl
mov
pop
int3
add
cmp
pusha
xchg
aas
loopne
mov
jo
dec
and
or
pop
push
shld
js
int3
cltd
inc
dec
push
mov
add
int
cmp
xor
sbb
inc
mov
xor
add
je
dec
add
out
pop
outsb
push
and
jno
outsl
fsubs
push
ret
sbb
inc
mov
jp
sbb
or
pop
loope
data16
push
nop
aam
add
jle
xchg
out
add
jbe
stc
nop
cmpb
add
or
aas
add
pop
clc
push
add
pop
mov
xlat
dec
imul
cmpsb
aad
adcb
lods
push
out
pop
imul
je
jne
xor
in
or
in
adc
pop
cwtl
enter
repz
push
and
pop
jge
xchg
jmp
mov
or
mov
sbb
into
jne
push
lds
or
sbb
xor
paddw
aaa
and
mov
scas
xchg
rcrb
out
cmp
into
push
push
or
add
inc
ret
add
lock
adc
test
leave
push
xor
ficoms
inc
add
xchg
jl
xor
add
daa
mov
cmc
xorl
add
sbb
mov
lret
mov
in
push
xchg
add
pusha
dec
imul
pop
aas
pop
inc
mov
add
xchg
pop
pusha
xor
loop
incl
fcomip
add
out
clts
jne
mov
test
xchg
xchg
xlat
aas
xor
adc
add
hlt
xor
jg
mov
cmp
clc
jl
jg
add
add
in
and
shl
movsb
push
add
xchg
pusha
movsl
or
out
add
lds
and
adc
aad
push
aaa
xchg
fwait
jnp
cmpsl
cmp
xchg
and
roll
sub
notl
sub
jo
test
bound
mov
test
addr16
fstl
push
inc
sbb
add
mov
push
nop
or
hlt
cs
addr16
inc
ss
mov
add
inc
cmp
push
adc
add
filds
fs
and
jmp
jns
sub
stc
notb
add
xor
add
push
add
shlb
xchg
push
test
adc
icebp
addl
ret
pop
mov
in
sub
aas
cmp
add
mov
into
rcll
push
pop
mov
stos
add
loop
out
add
mov
outsb
and
pop
sahf
cmp
jecxz
add
int3
cld
fimull
push
aaa
fnstsw
add
adc
das
sbb
add
adc
mov
test
or
mov
cmp
loope
in
shrb
inc
leave
ror
mov
inc
lock
bnd
pop
push
adc
lret
add
pop
cmp
sub
lea
xor
xchg
pop
ret
pop
add
cs
jle
add
subl
mov
gs
cmp
popa
xor
jl
mov
push
inc
dec
mov
cmp
sti
mov
mov
mov
insl
add
add
push
inc
lds
sti
xchg
sbb
pop
or
and
and
enter
add
pop
popa
movsb
in
mov
adc
shl
std
add
mov
sub
cmp
jp
push
call
rorb
loop
sbbl
mov
dec
addr16
xchg
iret
cltd
sub
push
stos
xchg
das
and
jmp
out
pop
jge
pop
xor
test
push
xchg
bound
xchg
sub
sub
stos
leave
add
mov
add
push
jge
outsl
jg
scas
aas
movsb
pop
add
outsb
adc
mov
push
xor
out
xchg
stc
push
cmp
cmp
ljmp
and
loopne
mov
and
sbb
imul
imul
std
loopne
jnp
add
das
and
div
xchg
test
bound
fwait
popa
arpl
mulb
sti
add
ret
cmpb
out
fdivs
sbb
les
pop
popa
loopne
js
out
add
dec
arpl
shrb
aaa
stos
sub
or
jnp
out
cwtl
push
add
clc
sub
add
push
pop
add
mov
add
shlb
shlb
subl
fcomip
int3
js
dec
ret
cld
jo
cmp
add
jbe
add
mov
and
imul
or
dec
inc
push
xchg
push
inc
out
push
shl
mov
jo
outsl
xlat
xor
sahf
cmp
mov
xchg
insl
lock
ret
sub
pushf
jecxz
push
arpl
faddp
pop
jmp
insl
inc
pop
push
xchg
or
add
rol
mov
rcl
xor
fisubrs
in
in
mov
add
xchg
inc
out
sbb
enter
mov
outsl
out
mov
mov
push
andb
out
roll
cmpsb
mulw
and
addb
je,pt
xchg
mov
xchg
inc
icebp
mov
out
jle
and
pop
adc
jmp
pusha
xor
dec
rcl
and
jge
mov
sub
inc
lcall
enter
xor
dec
jecxz
adc
and
mov
bsf
aas
fiadds
into
xchg
popa
and
lods
add
cmp
push
pusha
icebp
lret
push
add
movsl
neg
outsb
pop
xlat
cli
stc
shlb
pop
or
call
mov
mov
push
fwait
sub
filds
inc
add
and
jp
mov
adc
push
push
add
ja
ljmp
jne
push
jno
adc
dec
test
loope
pop
insl
and
xor
movsl
ret
adc
push
clc
dec
mov
jle
call
xor
dec
jne
loop
xor
mov
add
adc
ss
mov
pop
or
add
clc
shrb
cmp
jns
pop
jle
add
push
push
or
js
fdivl
cmp
add
pop
arpl
mov
cli
add
adc
inc
pushf
add
inc
pop
enter
adc
dec
xchg
pop
cmpsl
add
shrl
mov
xchg
push
femms
pop
lret
iret
loop
pop
sti
add
fwait
insb
insl
daa
enter
sub
loopne
add
cli
mov
mov
pop
dec
popf
dec
pop
pushf
mov
test
in
add
in
dec
repz
lods
roll
mov
and
add
push
push
rclb
dec
jle
mov
mov
add
imull
inc
sub
les
push
inc
shll
dec
add
jbe
pop
mov
sub
shl
xchg
into
scas
in
xor
adc
out
xlat
nop
jle
add
sub
xor
and
pop
cmp
xor
imul
mov
inc
adc
aaa
mov
shlb
popf
jne
cmp
push
mov
pop
add
idiv
inc
push
jg
pop
loop
add
jnp
cmc
in
mov
add
jns
sub
sbbl
mov
cwtl
and
pop
repz
das
sub
int3
shlb
lock
add
adc
dec
leave
mov
cmpsl
pop
add
dec
rcl
adc
fldt
decl
jno
mov
xchg
nop
pop
lret
pop
add
sti
ffreep
push
test
loope
xor
int3
add
cmp
cwtl
xchg
pop
sbbb
pop
jbe
test
jle
aad
cmp
lock
xor
lahf
sbb
add
xchg
xchg
pushf
dec
xor
rcl
xchg
add
clc
mov
add
xchg
cmp
jb
stos
pop
or
xlat
in
push
jnp
mov
pop
sbb
nop
lea
pop
outsl
mov
inc
add
push
insb
test
cs
hlt
stos
mov
xor
iret
mov
or
popa
ret
mov
cld
or
mov
cmpsl
loope
loop
add
ljmp
add
je
jbe
pop
hlt
pop
add
mov
push
pop
pop
xchg
dec
mov
xor
pusha
sbb
or
jae
jo
and
push
or
decb
push
outsl
popa
sbb
je
cmpl
add
rorb
push
push
enter
mov
xchg
into
cli
inc
xor
pop
add
push
popa
jmp
add
in
jb
insl
pop
mov
add
cld
add
sbb
testb
jae
sub
or
in
add
mov
and
jl
orb
cmpsb
cmp
mov
aaa
pop
shlb
pop
stos
push
add
mov
add
sbb
add
fistpll
in
add
lea
fsubrs
push
xor
js
and
jge
and
mov
add
bound
xchg
pop
inc
scas
dec
cmp
and
sub
mov
jecxz
imul
loopne
les
das
adc
add
in
sti
cmp
loopne
mov
or
call
data16
jge
xchg
sub
lods
daa
cmp
addb
repnz
pop
hlt
divl
ret
lock
sub
jae
fcmovb
les
dec
sarb
add
lods
add
mov
clc
pop
in
xchg
add
pop
shlb
or
lret
inc
arpl
sub
fbld
mov
lock
xchg
inc
out
push
add
imul
mov
bound
imul
xor
or
insl
roll
icebp
js
and
mov
mov
add
sub
shl
push
mov
add
sbb
push
pop
rclb
bound
or
sar
add
pop
aas
int
jmp
repz
inc
rcl
xchg
or
add
arpl
mov
clc
jns
scas
or
adcb
test
inc
lock
pop
add
imulb
add
inc
call
add
add
leave
push
xor
add
jb
add
mov
jns
sub
stos
mov
xchg
or
adc
lods
or
inc
pop
lds
frstor
aas
cmc
pop
pop
sbb
pop
scas
mov
sub
dec
mov
fstps
faddl
pop
nop
pop
out
lret
loope
insb
vmovaps
cmp
rclb
addr16
clc
jmp
adc
std
out
xor
cmp
and
pop
stos
pushw
in
mov
adc
push
push
xor
add
xchg
push
xchg
jg
sahf
push
mov
xor
and
imul
icebp
into
jle
fs
nop
popf
or
test
lods
faddp
les
xor
in
mov
inc
adc
jo
ret
xchg
cmpsl
and
jo
adc
mov
imul
and
cmc
cmpb
mov
cwtl
sti
paddq
movl
add
add
inc
gs
es
and
mov
into
ja
es
or
cld
push
sub
cmpsl
test
aam
notb
or
cmp
jg
imul
jmp
aas
sbb
and
xor
rcll
ss
fists
fsubrl
rdtsc
imul
push
cmp
cmp
mov
add
jne
std
push
add
dec
mov
scas
push
inc
add
test
add
sti
adc
or
test
xchg
lcall
movsb
ret
movsb
add
ja
insb
pop
and
sbb
push
xchg
scas
outsb
popf
xchg
inc
mov
mov
ret
repnz
cmp
inc
or
xor
cmp
cmpsl
mov
pop
push
icebp
fisttpll
jno,pt
mov
mov
mov
jle
add
imul
and
jp
push
mov
fidivs
adc
mov
add
jge
add
imul
insl
cld
xor
adc
adc
stc
cmpsl
scas
add
outsb
xlat
and
jmp
and
xor
sbb
or
loope
sbb
dec
bound
arpl
scas
mov
dec
fildl
cmpsl
or
pop
or
enter
jmp
mov
nop
add
mov
jae
cmp
daa
je
pop
out
or
rorb
cli
cmpb
scas
inc
sbb
fucom
add
mov
jecxz
popa
adc
int3
rorb
xor
sub
cmp
loope
rcl
add
jl
push
jecxz
insb
imul
jo
sbb
pushf
inc
add
jmp
mov
add
outsl
push
sbb
aam
testb
dec
xor
clc
fldl
sub
out
roll
cld
dec
xchg
push
adc
adcl
sub
lret
mov
xlat
and
jns
out
insb
sub
sub
mov
pop
xchg
inc
cmpsb
push
popl
bound
mov
loope
sbb
mov
pop
xor
into
mov
xlat
dec
or
add
fidivl
in
add
mov
repnz
imul
xchg
sub
adc
outsl
cmpsb
jecxz
push
adc
xor
and
mov
insl
add
push
out
jne
hlt
in
xchg
gs
cli
test
xor
mov
add
mov
sti
movl
push
fwait
jae
movq
inc
dec
and
in
lea
jns
test
cwtl
call
adc
xchg
pop
outsb
push
notl
out
jle
push
sub
ja
cmp
cmp
mov
xor
les
test
stos
xorb
or
mov
push
mov
jne
out
pop
or
test
popa
in
into
inc
xchg
loopne
repnz
pop
push
push
cwtl
sbb
push
add
add
or
add
push
adc
xor
and
outsl
cmp
fs
push
fistps
add
inc
jmp
in
rorb
add
outsb
add
dec
std
fsubl
icebp
jo
popf
add
add
pop
inc
sub
js
add
mov
xchg
or
add
aam
fcmovbe
cld
mov
add
and
loop
icebp
sbb
sbb
in
push
add
or
decl
rcrb
fadds
cwtl
mov
cmp
ja
mov
push
lods
pop
dec
pop
ljmp
cmc
add
jge
lret
addb
test
lds
dec
sbb
or
and
mov
mov
sbb
jno
inc
add
stc
roll
pop
sbb
dec
push
add
int
insb
and
mov
jle
incl
cld
sub
pop
rcrb
fsubl
pop
mov
rol
push
mov
aaa
sti
or
jae
popa
int
mov
add
out
jne
push
aam
sbbb
xchg
mov
pushf
xchg
add
sbbb
xor
cwtl
mov
add
fbstp
xor
shlb
lds
test
out
xorb
add
xor
jecxz
jg
outsl
out
in
iret
daa
add
ret
lcall
in
or
aad
loopne
in
cwtl
pop
cmp
loop
shrb
mov
add
call
loopne
fcmovnbe
out
int3
pop
mov
dec
pop
fsubl
sub
mov
inc
jne
pop
daa
movsl
mov
or
pop
xchg
adc
lods
ret
mov
mov
cmp
lret
pop
add
ja
lock
ja
call
into
or
arpl
pop
addr16
negl
inc
cmpsb
push
repz
and
scas
inc
icebp
add
pop
mov
xor
fcoml
outsb
push
int3
push
cwtl
add
push
add
subl
nop
push
and
sbb
xchg
fs
add
jb
push
bound
cmp
add
repnz
add
inc
adcb
insb
mov
pop
add
mov
and
jp
sbb
push
add
adc
les
daa
mov
push
push
xor
adc
rcll
and
dec
add
dec
dec
movsb
add
iret
loopne
mov
scas
push
inc
pop
push
mov
add
mov
out
sbb
xor
loope
jl
cmp
add
popa
and
mov
insb
mov
into
or
xor
add
pop
inc
scas
push
pop
push
pop
jb
xchg
shll
loopne
out
pop
sbb
mov
cmp
sarb
push
mov
in
push
imul
jo
dec
subb
add
jg
xor
sub
push
cmp
lahf
push
cmp
adc
adc
cmp
imul
mov
imul
cltd
xchg
test
push
shlb
fs
es
add
adc
add
dec
fsub
pop
test
and
jmp
adc
jg
sbb
out
insl
addb
je
imul
mov
jns
and
cmpsl
cmp
jle
jge
mov
fcmove
sbb
in
add
stos
add
dec
push
lret
add
cld
sub
dec
outsl
dec
or
inc
cmp
sub
stos
subl
in
pop
add
cli
or
mov
test
adc
or
jl
lds
test
inc
mov
or
leave
xchg
jg
out
add
jecxz
lea
cmpsb
cwtl
and
mov
pop
cmp
cmp
add
and
push
jecxz
pop
jg
add
movsl
inc
cmp
fidivrl
mov
cs
add
mov
pop
movsl
cmp
push
xchg
mov
and
mov
push
pop
and
imul
sub
in
pushf
lcall
dec
adcl
into
rcl
and
test
add
sub
pop
sub
add
mov
add
add
dec
adc
data16
push
adc
add
lock
std
inc
pop
enter
orb
add
sbb
add
ljmp
jnp
nop
lods
in
sub
or
mov
lcall
test
jb
dec
push
cmp
cli
subb
fisubrs
jmp
push
cmpb
xor
and
xor
and
xchg
aas
add
stos
loopne
push
add
pop
mov
hlt
jne
int3
dec
inc
jns
outsl
add
add
clc
sub
or
ja
or
jae
les
or
xlat
add
aas
sahf
imul
ror
pop
je
adc
add
xchg
sbb
paddq
out
pop
fwait
mov
pop
pop
arpl
in
rclb
add
cmp
pop
push
xchg
mov
jne
adc
iret
loopne
jg
adc
mov
out
xor
add
loop
lock
dec
cmpsl
add
push
lock
mov
bound
stos
sbb
in
sbb
fcmovne
in
ficompl
push
inc
add
and
xor
adc
add
push
inc
in
in
cli
cwtl
sbb
rcr
pop
sti
js
pavgw
mov
nop
push
andb
xor
fucomi
loope
mov
leave
inc
cmp
and
outsb
mov
dec
mov
aaa
cmp
rcl
push
dec
add
rorb
add
cmpsl
dec
fisubs
aas
hlt
inc
popf
add
sbb
rcrb
les
icebp
ljmp
sub
mov
data16
cmp
mov
movups
and
test
dec
push
pop
jns
xlat
bound
icebp
adc
mov
mov
out
add
fisubrl
jle
add
dec
pop
addr16
fs
mov
leave
cli
xor
dec
cmp
rcll
pop
dec
js
aad
nop
nop
push
xchg
fdivr
lret
add
mov
popf
scas
clc
rcr
fcoml
push
inc
sub
jmp
pop
adc
xchg
out
sarb
cmp
xchg
fbstp
pop
pop
shll
mov
pushf
movsb
add
cmpsl
lar
mov
mov
jmp
shlb
sbb
dec
inc
pop
movlps
adc
pop
popa
xchg
add
ret
movb
enter
fisttps
in
cmp
adc
push
rcl
pop
add
nop
and
sbb
repnz
ret
adcb
pop
or
pusha
std
xor
add
out
arpl
push
pushf
cmp
add
push
sbb
and
inc
mov
adc
jo
mov
stos
add
shlb
or
jae
cmp
gs
fnstenv
pop
mov
lock
dec
fst
adc
imul
and
mov
xchg
add
or
push
loopne
mov
mov
icebp
por
add
sbb
push
add
mov
shlb
or
xchg
and
sti
xchg
sub
jl
call
mov
add
pop
xchg
cmc
xor
cmpsl
sub
decl
loopne
out
lret
insb
int3
add
repnz
sbb
cmp
movsb
add
shrb
add
bound
cmp
outsb
out
mov
test
add
cmp
add
seta
in
loopne,pt
or
pop
nop
pop
sub
and
push
cmp
in
add
cwtl
push
adc
xchg
xchg
push
mov
xor
and
xlat
dec
sbbl
imul
push
mov
xchg
dec
fbstp
push
lea
add
jns
sbb
sub
pop
ret
loopne
imul
stos
les
pusha
sbb
jge
pop
dec
add
xor
fdivrl
roll
xor
sbb
js
add
test
pop
add
mov
add
inc
xorb
in
xchg
loopne
dec
push
loop
add
pop
test
lret
inc
fwait
add
es
sti
imul
cltd
dec
add
bound
faddl
sub
push
mov
outsb
or
loope
inc
inc
arpl
insl
add
fnsave
xchg
adc
pop
call
fs
dec
nop
cwtl
pop
pop
mov
stos
repnz
add
dec
test
gs
call
pop
insl
add
push
adc
js
mov
repnz
test
inc
push
les
out
sub
fdivrs
rolb
sbb
lahf
repz
fnstcw
add
in
mov
rorl
xor
add
dec
pusha
add
jl
lods
mov
or
jg
add
je
mov
lcall
pop
xor
push
add
jnp
cwtl
int3
push
push
sahf
inc
ja
sbb
dec
out
hlt
add
xchg
sarl
add
xor
mov
lock
in
cli
push
jmp
pusha
jb
les
sub
inc
xor
cmc
xchg
xchg
arpl
mov
insb
xchg
push
scas
and
pop
mov
mov
xchg
push
lds
mov
ds
push
jl
fwait
add
and
mov
pusha
ja
xchg
les
add
popa
faddl
mov
jle
inc
adcl
push
lcall
adc
repz
mov
fisubs
add
and
stos
jo
outsl
int3
push
xor
mov
cmp
add
push
les
out
jae
cmp
pop
fsts
mov
test
cli
adc
push
outsl
js
cmp
sub
fldenv
jbe
clc
jnp
push
mov
je
icebp
xor
aad
cmp
mov
mov
loopne
pop
add
xor
or
pusha
jp
jl
rcr
loop
fistpll
call
cmpsl
sbb
add
inc
flds
popf
pop
imul
sbb
pop
int
jmp
inc
test
push
imul
sub
insl
sbb
jp
mov
mov
sub
ds
push
dec
out
addb
jbe
sbb
xlat
je
and
lods
or
push
xor
ret
add
cmp
inc
dec
repnz
push
xchg
mov
dec
jo
or
or
jbe
push
sbb
dec
xchg
add
adc
and
and
enter
mov
push
sub
ds
add
fnstenv
dec
pop
int3
dec
leave
gs
add
incb
xor
or
lods
mov
subb
inc
leave
add
mov
pusha
pop
cwtl
sbb
into
and
pop
clc
dec
sub
jmp
jnp
ror
cmp
sahf
lret
xlat
fbld
push
sbb
mov
push
mov
dec
pop
xchg
jnp
xchg
jg
jae
add
sbb
mov
mov
testb
aad
data16
fbld
push
or
out
bound
sub
jo
cld
cmpsb
mov
fdivs
jbe
popa
cli
lock
pusha
ss
mov
incb
add
xchg
jl
rcrl
dec
mov
mov
push
pusha
cmp
ja
add
sarb
and
gs
sbb
jecxz
flds
xor
xor
jne
andl
mov
add
sbb
shll
push
cwtl
mov
mov
sub
daa
in
sbb
pop
insl
call
lcall
mov
and
sti
or
push
add
mov
push
in
add
sarb
add
sbb
xchg
lret
push
push
aaa
fwait
add
ficoms
pause
fstpt
sbb
fcomip
gs
cmp
and
rcr
fidivs
jne
ret
pop
in
xchg
pop
adc
jb
add
dec
lahf
xchg
dec
mov
jae
adc
movsb
add
lcall
and
stc
push
cmp
shlb
add
lock
ficoml
ds
and
in
pop
add
repz
add
push
sub
mov
cmp
xchg
pop
in
cs
ret
ja
dec
arpl
or
sub
mov
cmp
jg
inc
and
sub
pop
test
int
mov
fwait
decb
cmp
bound
mov
add
subl
xchg
sub
gs
addr16
sbb
mov
xchg
add
aas
roll
sbb
jnp
or
pop
add
fwait
jmp
push
and
pop
mov
scas
test
mov
add
jmp
mov
mov
clc
daa
add
stos
and
push
mov
add
fiadds
and
or
notb
pop
repz
xor
push
pop
sub
nop
andb
or
and
xchg
out
jno
nop
mov
ljmp
add
inc
mov
and
add
xchg
ss
test
clc
loope
or
pop
push
pop
fadd
push
mov
in
pop
lods
add
sub
loope
adc
mov
sbb
jmp
cwtl
add
nop
rolb
hlt
jo
pop
lahf
xchg
repnz
xchg
aas
push
jg
scas
mov
out
add
mov
push
xchg
xchg
sub
cwtl
push
fisubrs
insb
or
andl
lret
add
outsb
xor
mov
ret
mov
gs
shlb
xchg
xor
mov
or
addb
pop
cld
add
imul
push
add
push
in
orb
sbb
inc
ljmp
cmp
cmc
test
out
aam
jns
test
cmp
cwtl
adc
lods
pop
and
dec
inc
cmp
xor
push
inc
inc
sub
jb
or
fcmovb
pop
and
add
cmpsb
lds
sbb
pop
add
fsub
fcompl
fidivrs
push
and
cmp
stos
faddl
into
add
das
cmp
add
fiadds
test
push
pop
add
mov
js
xchg
jp
xor
punpckldq
or
test
or
in
push
cmp
mov
pop
shlb
dec
mov
repz
cmp
push
repnz
fs
push
pop
es
inc
add
out
insb
stos
add
cli
or
arpl
dec
cwtl
mov
sbb
in
js
add
cs
rolb
adc
rolb
lock
add
inc
lods
shll
add
cwtl
push
in
dec
lcall
or
inc
pinsrw
call
adc
pop
add
sbb
outsb
xor
sub
dec
loopne
insb
sbb
mov
addb
pop
jne
or
out
adc
add
das
call
add
lret
jmp
test
popf
jb
push
pusha
xor
movsl
add
jns
roll
add
js
subl
lahf
lret
push
rsm
fsubl
jp
in
adc
outsb
ret
stos
push
sub
and
xchg
add
stos
xchg
adc
pop
sbb
push
dec
fwait
dec
out
mov
pop
sub
push
addl
mov
sbb
in
and
mov
pop
inc
js
xchg
fcoms
aas
add
jns
mov
rolb
icebp
push
add
incl
imul
xchg
xchg
test
adc
mov
repnz
popf
add
xchg
fcmovnu
pop
negb
mov
movsl
scas
sbb
js
jo
mov
push
inc
imul
mov
rcrb
push
and
jnp
adc
enter
add
aaa
outsb
jmp
mov
test
jnp
ret
sub
cmp
adc
jp
dec
push
mov
fwait
mov
popa
xchg
sub
movsb
fs
xor
in
xor
or
add
loop
mov
jbe
rclb
add
or
cld
sub
mov
sbb
xchg
in
cmc
cmpsb
hlt
cmp
pusha
dec
xchg
add
jl
cmp
jg
loop
xchg
mov
je
pop
pop
add
ja
fidivs
add
push
mov
add
push
pushf
mov
mov
lahf
negl
xor
fsubrs
add
push
cmp
bound
mov
lret
inc
or
loope
imul
mov
outsb
out
ret
push
dec
int3
fstps
sbbl
bound
jo
pop
add
or
jg
cmp
add
pop
popf
ret
jge
xor
and
rorb
jmp
mov
aad
add
test
lods
inc
mov
orb
pop
mov
add
fwait
inc
cmp
pop
daa
dec
pop
scas
adc
je
popa
shll
std
inc
xor
nop
jno
and
mov
arpl
push
or
lds
add
lcall
add
popa
adc
loopne
insl
add
pop
mov
mov
lret
mov
inc
cmpsl
adc
mov
inc
adc
pop
aad
js
pop
sbb
in
add
sahf
rcr
jb
bound
test
adc
decb
add
cmc
shlb
jb
test
outsb
adc
mov
cmpsl
aad
nop
nop
pop
js
gs
fists
and
mov
jecxz
jg
in
call
push
xchg
cmp
loop
mov
xchg
mov
add
push
out
jbe
adc
mov
shl
sub
push
mull
int3
icebp
in
xchg
and
xor
test
sbb
repnz
inc
out
pop
inc
cmp
push
les
aad
out
add
sar
icebp
xchg
add
test
add
ljmp
add
pushw
cmpsl
jnp
add
jne
fwait
stos
or
and
jmp
add
insb
inc
pop
add
test
and
and
mov
jnp
aaa
test
mov
addb
inc
es
jecxz
add
mov
mov
or
jno
adc
add
pop
incl
xlat
ret
sbb
mov
add
lock
dec
push
shl
nop
and
add
mov
sarb
jns
addl
iret
push
cmp
fildl
xor
jg
aam
add
pop
out
fld
add
insl
pop
sbb
dec
das
insb
adc
mov
mov
enter
fs
scas
jecxz
aaa
adc
and
jae
cli
adc
je
jns
fdiv
incb
cmp
jno
mov
in
inc
xor
pop
pop
je
mov
mov
and
push
lods
out
add
and
pop
push
int3
add
add
push
add
pop
ror
jl
add
das
div
jg
in
mov
jl
es
cmp
cmpb
cwtl
insb
and
dec
jns
pop
push
inc
out
add
add
mov
mov
es
push
cld
push
lock
fucomp
mov
xchg
push
outsb
aam
jmp
push
and
pusha
inc
xor
cmp
add
sub
sbb
movb
out
mull
add
test
jmp
sti
add
adc
aam
aas
push
arpl
outsb
mov
notl
aam
add
jp
mov
add
and
and
add
in
push
or
in
out
add
in
push
icebp
fcoms
xchg
mov
fistpll
pop
adc
out
adc
jmp
inc
fildl
or
mov
sub
inc
adc
dec
mov
jne
add
ja
pop
or
int3
add
jg
outsl
xlat
imul
lods
add
adc
aas
insl
sbb
add
in
adc
loopne
lock
add
faddl
jne
add
xor
pop
inc
ret
jmp
mov
or
dec
xor
mov
sub
and
das
xorb
sub
add
pushf
push
pop
clc
jmp
in
mov
adc
es
sub
sbb
push
cltd
xlat
jmp
andb
mov
subl
jp
filds
push
pop
arpl
scas
jno
sub
ret
mov
fdivl
bnd
dec
shrd
mov
rcrb
clc
and
pop
jp
cmp
ret
and
imul
push
pop
inc
cmp
cmpsl
scas
hlt
inc
in
les
rclb
lock
lcall
mov
add
repz
in
ds
test
xchg
add
sti
iret
test
cmp
xor
xor
mov
pop
inc
loopne
mov
inc
or
sub
add
addr16
adc
mov
fs
mov
jb
cli
in
negb
cwtl
mov
rorb
xor
ljmp
and
cltd
mov
ret
int
imul
addb
pop
loop
jle
add
mov
loopne
add
add
ficoml
dec
repz
add
imul
add
add
jp
add
fadd
xor
in
aad
add
pop
cld
pushf
les
test
sub
adc
add
xor
add
rclb
cmp
lcall
mov
dec
or
popf
mov
mov
add
pop
lock
sbb
add
outsl
pop
pop
jno
add
adc
mov
call
add
testb
sub
inc
add
jg
pop
pop
cmp
mov
and
mov
hlt
lods
xchg
mov
das
mov
nop
push
sub
mov
sbb
sbb
ss
imul
sub
fstps
sub
in
and
sub
lahf
push
rolb
cltd
push
imul
lock
ss
xchg
pop
movsl
pop
xchg
cmp
sub
and
lea
adc
mov
mov
stos
xchg
sub
cmp
imull
loope
jp
nop
mov
mov
fdivrs
xchg
lcall
fidivl
sbb
call
cltd
or
leave
shlb
repz
adc
lret
add
jmp
xor
out
clc
sub
mov
fildl
pop
mov
jge
push
sbb
jecxz
add
adc
insb
imul
push
pop
adc
push
jns
mov
mov
ss
stos
les
cli
xor
rol
mov
sbb
xor
xchg
outsl
sbb
or
mov
jne
dec
faddl
add
add
incl
mov
ficoms
adcb
sbb
repnz
shlb
loope
ret
cwtl
push
stos
and
fstpl
jns
aas
test
mov
scas
loopne
fidivrl
xor
sub
popa
jno,pt
sub
add
mov
dec
icebp
cmp
jp
add
in
in
roll
inc
add
sti
mov
pop
pusha
cltd
enter
mov
ficoml
cmp
jo
jne
jb
jmp
aam
add
xor
push
loope
mov
fsubp
add
inc
push
or
pop
add
pop
push
pop
cmp
popf
jo
dec
xor
xor
mov
test
arpl
fs
or
sbb
jecxz
add
popa
test
loope
sbb
ficoms
shrb
sti
adcl
clc
or
jp
popa
push
insb
js
cmp
xchg
jg
adc
mull
add
xor
push
and
sub
scas
lods
pusha
test
pop
jae
and
fchs
jmp
add
data16
xlat
add
in
jns
loop
xor
dec
and
mov
xor
mov
in
cmp
cmp
loop
lock
adc
mov
pop
or
cwtl
and
adc
and
pop
mov
pop
pushf
mov
into
adc
push
lds
jns
xor
enter
add
add
push
repz
xorb
mov
pop
add
clc
add
out
push
into
push
mov
jle
fidivl
ret
imul
pop
inc
pusha
xchg
jmp
add
pop
in
add
out
jg
mov
pusha
add
cwtl
pop
jbe
sub
adc
pop
pop
add
shll
xor
xor
dec
add
stc
psubsw
add
inc
rolb
push
shlb
imul
and
push
and
mov
das
inc
mov
iret
inc
cmp
and
inc
jno
lds
add
pop
jl
cmp
lret
adcl
clc
enter
leave
roll
inc
call
out
cwtl
add
mov
or
mov
dec
int3
pop
ja
add
mov
push
fiadds
and
sub
testb
clc
sub
jge
out
add
xor
jmp
xor
pop
inc
fisttpll
xor
mov
daa
cmp
inc
cmp
mov
sbb
test
call
pusha
enter
cmp
adcb
mov
mov
aaa
fwait
add
or
aas
xchg
call
aaa
jbe
jg
add
dec
inc
nop
lds
je
cmc
mov
adc
mov
fwait
xchg
flds
je
insb
cmp
rcl
cs
add
cmpb
sarl
stos
mov
jbe
cltd
faddl
std
dec
xchg
pmaddwd
xchg
and
cmpsl
mov
mov
ja
push
stos
dec
add
inc
xchg
add
outsl
xchg
pop
mov
jl
push
inc
add
aaa
xor
popa
add
imul
jnp
roll
mov
cld
les
dec
dec
dec
bound
lahf
inc
lret
inc
xchg
nop
test
push
xchg
and
add
shrb
xor
cmp
push
fbld
add
ret
push
or
andl
mov
filds
or
mov
arpl
js
jae
daa
add
add
xchg
add
add
xchg
imul
lret
ret
arpl
push
test
out
iret
or
dec
jnp
add
dec
mov
fadd
movb
ja
lock
aam
mov
in
add
add
inc
hlt
mov
gs
loopne
and
aad
fidivl
pop
sahf
mov
gs
or
add
nop
push
shrl
add
leave
cmpsl
cli
cmp
out
add
iret
add
mov
mov
cmp
stos
popl
xchg
lahf
icebp
mov
jecxz
rcl
cmp
jl
jae
cmp
mov
dec
mov
mov
or
es
fidivl
andl
xchg
add
add
add
movsb
add
add
cmovno
add
jmp
pop
add
repnz
stos
int
int3
add
sbb
add
or
popf
outsb
xorl
addb
test
dec
test
movsl
ss
andb
push
xchg
pop
mov
xor
push
jge
push
push
repz
mov
fadds
addb
sarl
pop
add
add
inc
fldcw
jmp
mov
fcoml
arpl
xchg
aam
iret
add
cmp
adc
xchg
pop
add
add
fwait
sti
and
xor
nop
roll
dec
push
jmp
and
aad
cmpsb
cmp
push
sub
das
adc
fcmovne
push
add
js
xchg
aaa
or
xor
fidivs
adcb
call
icebp
pusha
mov
pop
cmpsl
or
in
mov
dec
sarb
add
push
mov
inc
add
lret
sub
add
call
popl
inc
sub
je
jns
sarl
mov
jmp
imul
cmp
scas
cmpb
sahf
add
aaa
mov
repz
test
lods
pop
push
add
xchg
add
cmp
pop
mov
lcall
xchg
add
add
stos
sarb
pusha
nop
das
fs
pop
add
inc
fisubrl
leave
add
lret
adc
cmpsl
and
xor
and
jp
cli
mov
jno
pop
ljmp
addb
cmp
mov
add
je
dec
arpl
inc
and
scas
movsb
cmpsl
lods
out
xor
add
sbb
int
in
mov
mov
popa
icebp
xlat
sub
ljmp
xchg
sbb
stos
call
fwait
scas
rorb
addr16
pop
insb
pop
adcb
sbb
loope
cmpl
push
mov
dec
sub
push
add
aam
test
lods
je
add
in
dec
fistpll
mov
andb
shrl
call
popa
cmpsl
sub
jg
les
adc
lds
js
cmpsb
lock
test
sub
add
mov
jne
loopne
mov
mov
sub
mov
mov
lcall
inc
test
jb
repnz
cmp
mov
pop
mov
int3
fidivl
add
cwtl
pop
lock
adc
mov
jae
cmp
xchg
into
shlb
loopne
inc
xchg
pop
pextrw
setp
mov
push
dec
jl
and
mov
add
xor
scas
add
lea
icebp
adc
es
in
imul
xchg
sub
out
js
add
movsl
add
adc
or
cmp
arpl
pop
push
addr16
ficoml
popa
mov
int3
pop
push
add
repz
xor
pop
ljmp
and
jno
popf
and
or
add
pusha
mov
adc
add
mov
out
mov
xchg
add
add
dec
ret
stos
orl
mov
mov
iret
ret
dec
add
sbb
repz
push
add
push
push
fs
sub
sbb
mov
add
test
dec
push
inc
lea
cmp
fidivrs
mov
aaa
in
sysret
mov
out
xor
hlt
iret
add
cmp
add
or
je
movl
push
add
fs
arpl
jae
jmp
dec
push
mov
jb
sbb
aam
aad
xchg
sub
lods
or
mov
add
rol
repz
add
pop
dec
xor
ret
sub
jbe
leave
push
and
addb
aas
xor
cmp
orb
cli
pmullw
andb
into
cmp
mov
dec
cmpb
add
sti
clc
push
lock
cwtl
push
addr16
dec
lcall
rcl
fsubrl
and
es
add
xchg
outsb
imul
inc
clc
mov
adc
jns
push
scas
add
out
sub
ds
xchg
mov
jnp
ljmp
push
orl
add
cmp
mov
popl
incb
xor
jge
jp
xorb
call
add
test
cmp
jecxz
dec
rcll
xchg
push
push
xor
test
pop
or
sub
jmp
mov
add
inc
outsb
mov
xlat
sbb
dec
xor
and
into
push
push
pop
inc
add
push
jbe
lock
clc
mov
test
shr
add
xorl
adc
mov
test
mov
pop
pop
mov
cld
sub
push
mov
cmpsl
add
les
add
sar
ljmp
push
into
imul
jecxz
fidivs
idivb
cmp
lea
xor
mov
xor
cmc
cmp
sahf
xorb
cmp
in
popa
push
sub
mov
cltd
xchg
jno
ja
add
jp
fiaddl
pushf
xor
loop
ret
inc
pop
add
adc
and
cmc
out
inc
add
in
add
push
jp
mov
pop
cwtl
popf
adc
scas
inc
enter
gs
pop
ljmp
add
xchg
loopne
or
dec
and
inc
lahf
push
in
sahf
add
pop
push
xor
insb
fwait
decl
rolb
push
aam
push
testb
adcl
adc
mov
pop
add
int
pop
movsl
pop
outsb
scas
cld
stos
add
and
loope
add
dec
fldcw
clc
sahf
invd
pop
cmc
xchg
pusha
add
add
rcll
das
nop
data16
mov
add
mov
out
add
addl
sub
xchg
cld
jne
adc
subb
lretw
sbb
push
inc
add
sbb
adc
push
mov
xchg
xlat
add
nop
scas
add
in
xchg
test
ss
movsb
mov
jg
pop
and
lock
sub
loopne
add
mov
or
add
dec
out
xchg
push
mov
outsb
mov
fdiv
scas
jp
add
adc
das
aam
pop
cwtl
fs
add
movd
pusha
add
cmp
sbbb
into
mov
add
jne
sub
gs
pop
test
and
cmp
and
add
xchg
andl
add
xor
ja
nop
movb
adc
frndint
ret
inc
or
xor
mov
adc
dec
xor
sbb
mov
push
dec
xor
push
pop
ret
xor
dec
rclb
push
cmp
bound
xchg
addb
out
jo
jae
pusha
ljmp
xchg
ja
jp
add
xchg
jnp
push
cmc
rcr
xor
hlt
add
sub
adc
iret
sbb
loop
repz
push
ss
lock
hlt
popf
dec
addb
jge
sbb
scas
loopew
fwait
notl
pop
or
jmp
andb
cld
sbb
sub
dec
lret
mov
aad
jecxz
repnz
dec
add
mov
stos
add
cmp
xor
bound
mov
fwait
ljmp
popa
out
flds
arpl
pusha
movsb
sahf
mov
inc
or
mov
movl
pop
mov
mov
shll
mov
sbb
jb
add
sahf
add
imul
mov
jecxz
cmp
dec
pushf
iret
inc
daa
hlt
sub
ljmp
mov
cmp
dec
sbb
test
cmp
nop
cmp
add
lcall
jg
mov
and
dec
cwtl
leave
xor
or
or
xor
jmp
add
mov
popf
add
mov
pop
mov
and
mov
insl
xor
shrb
idivb
mov
add
daa
pop
add
stos
call
test
imul
jae
inc
sbb
sbb
sub
dec
add
iret
add
push
and
add
mov
mov
mov
aad
or
in
xchg
rcll
sub
add
jbe
mov
pop
or
cmp
push
add
and
pop
sbb
add
adc
movntq
add
hlt
or
add
cmp
mov
es
push
movsb
pop
loop
or
cmp
push
ja
pop
add
pushf
xchg
sti
mov
push
jo
and
into
push
sub
or
cmp
jne
pop
xchg
xor
mov
mov
cltd
adc
add
push
mov
pop
jg
add
insl
jle
ds
inc
in
xchg
mov
jmp
push
mov
jb
sub
sub
fadds
mov
xchg
mov
or
mov
sbb
int3
hlt
xor
xchg
jae
sbb
push
into
out
popf
repnz
aam
ja
js
pop
leave
lcall
cs
pop
xlat
jne
add
jnp
and
pop
outsl
mov
push
xlat
fcmovb
js
mov
add
sarb
sub
not
xor
jge
xlat
enter
xor
loopne
mov
xchg
xor
and
filds
sbb
jg
int
inc
in
xchg
ds
add
adc
xlat
adc
cmp
adc
add
push
sbb
or
adc
mov
xchg
in
inc
lret
outsb
jge
xor
subl
shlb
out
sti
shlb
push
pop
inc
scas
add
insb
inc
and
cmc
gs
sbb
jne
mov
addr16
ja
or
push
int
leave
mov
pop
mov
lods
sbb
mov
dec
repnz
pusha
xor
lahf
xor
inc
add
fisubrl
roll
pop
pop
push
cmp
cmp
test
mov
adc
pushf
in
fldl
fsubl
cmp
mov
adc
lea
outsb
add
mov
addl
sti
rorb
repnz
sub
movsb
data16
test
inc
popa
dec
add
mov
fs
sarb
daa
add
jg
out
aad
fdivr
enter
ficoml
cmpsl
rclb
cld
inc
jb
add
ficompl
test
mov
ja
jecxz
cmpb
lods
adc
ret
in
jp
add
aaa
add
sti
loop
leave
mov
push
xchg
xchg
loop
cmp
push
test
jb
and
add
pop
adc
adc
sub
xor
adc
ficomps
dec
fs
xor
pop
sbb
loop
sbb
notl
jo
ljmp
mov
jnp
pop
loopne
popf
pop
out
or
add
insl
xlat
jl
mov
pop
aas
mov
inc
std
cmp
shlb
clc
cltd
sbb
and
std
sub
mov
mov
scas
cs
sub
mov
loopne
add
xchg
enter
dec
inc
jnp
add
iret
xchg
ds
sbb
pop
pop
dec
mov
jnp
add
test
mov
enter
add
lcall
cltd
add
cmpsl
hlt
outsl
rorl
mov
mov
test
jbe
adc
sti
bound
add
pusha
int
add
fucomip
or
outsb
roll
jg
cmp
adc
lahf
mov
rcl
test
dec
in
sar
pop
pop
fcomps
pop
inc
xlat
sub
xchg
rorb
ret
aaa
enter
inc
mov
pop
jnp
push
mov
xor
mov
loop
out
inc
add
jbe
lahf
add
popf
cmp
xchg
lea
jecxz
subl
xchg
mov
cmp
movsb
xorb
mov
and
sbbb
bound
ret
cmpsl
or
out
fdiv
push
ljmp
jge
cmp
pop
add
push
enter
rorb
cmp
jb
cltd
push
fadds
push
dec
mov
add
ss
addps
mov
add
add
mov
pop
inc
jno
pop
cmpsl
lods
add
and
out
rclb
cmpsb
adc
inc
test
jl
sub
add
in
push
mov
or
add
fiadds
cmpsl
nop
push
jmp
add
push
pop
sbb
or
in
add
xor
ljmp
rcrl
sub
adc
enter
sub
daa
add
ror
lock
add
sbb
push
shll
push
rorb
dec
xorb
lret
data16
xchg
aaa
sbb
std
add
add
adc
pushf
test
pusha
cmp
dec
mov
sub
adc
int3
test
nop
jmp
jl
add
mov
data16
jmp
stos
lods
in
rol
and
inc
inc
mov
js
call
repnz
cli
outsl
pop
popf
int3
xchg
fwait
mov
xchg
int3
cmp
push
out
dec
ss
push
es
dec
arpl
cmp
xchg
fdivrl
into
add
mov
outsl
push
out
pop
sbb
dec
int3
or
push
loope
jmp
mov
adc
dec
ljmp
xor
mov
cmpl
jno
pushl
sub
add
call
mov
inc
cltd
cli
aam
addr16
cld
cmp
ljmp
jle
scas
outsb
stos
jl
sbb
add
fcmovnb
ja
dec
hlt
mov
pop
add
das
or
test
orb
jb
inc
cmpsb
add
lcall
int3
sbb
mov
in
scas
add
xor
or
repnz
arpl
std
pusha
test
or
popa
insb
lret
dec
xchg
pusha
or
jle
btr
test
push
adc
sub
loop
add
jae
vmwrite
xchg
sub
test
cmp
jne
mov
add
jbe
jg
push
cmpsl
cmp
mov
aad
repnz
add
and
add
stos
add
dec
loop
and
mov
pop
data16
adc
or
fldenv
add
add
xor
int
mov
subl
jmp
rolb
inc
xchg
and
xchg
sbb
push
andl
subb
push
add
cmp
and
xchg
sahf
into
outsb
ss
add
in
shlb
pop
cmp
sbb
mov
dec
ret
icebp
mov
mov
jb
jne
push
addr16
inc
aam
stos
pop
inc
sti
enter
js
mov
ljmp
lock
and
mov
jecxz
icebp
push
jg
xchg
add
mov
adc
mov
xor
jno
sub
pusha
adc
pusha
mov
jmp
sbb
jmp
inc
inc
sub
insb
stc
lldt
dec
or
bound
cmp
jle
rolb
add
xor
scas
imul
shlb
add
addb
mov
sbb
xchg
mov
hlt
ja
pop
sub
imul
enter
push
inc
cmp
push
add
scas
aaa
sbb
push
outsb
subb
fldenv
push
cmp
idiv
shrl
or
xor
sub
imull
cmpsb
pusha
add
jecxz
lods
xchg
cs
adcb
push
outsl
test
jecxz
sub
movsb
cwtl
test
adc
add
cmp
cmpsb
sbb
lea
scas
cs
push
add
in
insl
mov
fcompl
in
gs
sbb
mov
lods
aas
jmp
xor
je
add
adc
add
aam
cmpb
outsl
add
je
ret
lahf
push
mov
push
lea
mov
mov
lret
push
sbb
rcll
test
add
adc
leave
cmc
lods
std
aas
add
ljmp
pop
mov
hlt
stos
sbb
add
cs
mov
fiadds
mov
cmpsb
lcall
negl
dec
or
push
push
mov
add
pop
rorl
nop
cmp
push
jno
jbe
negb
push
mov
jne
imul
adc
pop
push
jl
inc
lock
pop
into
push
xchg
cwtl
clc
add
daa
lcall
adc
inc
inc
pusha
and
add
xchg
xor
push
leave
push
imul
test
sahf
sbb
fiaddl
xchg
push
add
and
movb
int3
pop
mov
xchg
or
js
loopne
fstps
sub
jbe
icebp
ljmp
repnz
pop
xchg
adc
loopne
adc
adc
and
inc
mov
enter
cs
sbb
imul
outsb
cmp
movsl
mov
push
add
pop
subb
ja
mul
jns
mov
add
and
mov
inc
add
ret
sbb
inc
ds
cmpsb
add
xchg
mov
add
es
testl
out
and
sahf
or
add
adc
es
clc
jp
hlt
mov
orl
ljmp
std
add
pop
call
add
jmp
adc
add
jne
cmp
jmp
xor
sbb
ss
loopne
aam
add
iret
inc
ret
add
fldt
and
or
jp
js
nopl
subb
jecxz
sbbl
in
mov
or
jmp
arpl
pop
push
push
stos
cltd
popa
js
add
mov
cmp
iret
sbbb
mov
stos
lds
add
add
movsl
add
jne
push
push
push
xchg
push
mov
push
and
imul
or
adcb
lcall
dec
out
inc
or
mov
mov
adcl
add
xor
arpl
shlb
roll
pop
xor
mov
inc
shr
xchg
mov
pop
fxch
jecxz
add
and
jb
shld
out
aam
cmp
data16
lods
icebp
repnz
je
das
push
hlt
add
mov
add
xchg
lods
loope
dec
aaa
xabort
dec
insb
pop
add
shrb
adc
test
push
push
mov
test
cwtl
jae
aas
icebp
addr16
fsubrs
push
push
inc
push
xlat
add
xor
nop
mov
clc
add
fcompl
mov
add
adc
xor
sbb
pop
nop
pop
mov
inc
nop
dec
sbb
add
popf
jo
cmp
add
mov
in
mov
cmp
xchg
popf
xor
mov
rorb
fcomip
mov
xor
xor
mov
test
sub
pop
fldl
popa
outsb
repz
and
outsl
subb
fdiv
test
lahf
ljmp
or
xchg
xchg
and
rclb
xor
mov
add
jp
nop
adc
add
jg
jb
push
cmp
add
fcoml
enter
fisubs
out
hlt
pop
pop
popa
sbb
add
out
and
std
repz
mov
add
stos
or
cmp
lods
mov
jecxz
inc
add
dec
cmp
xor
xor
insb
mov
push
push
xchg
lock
fiaddl
add
or
fs
and
sub
andl
nop
jmp
jno
jg
repnz
xchg
stc
movsb
pusha
add
sub
inc
push
xor
xor
lods
add
pop
aaa
sub
jae
pop
das
outsb
notb
repz
pop
cmp
push
mov
sbb
stc
dec
shrl
xor
fstl
jmp
dec
pushf
inc
and
jb
pop
jge
pop
and
idivb
and
fstl
or
outsb
pop
jnp
test
jns
js
scas
cwtl
add
add
sub
pop
leave
ds
fs
mov
adc
sbb
testb
test
xor
jbe
mov
test
jns
adc
shlb
add
push
jecxz
int
add
or
add
aad
repz
push
xchg
mov
inc
icebp
leave
mov
or
dec
adc
xor
fisubrl
mov
nop
push
arpl
shll
cmp
fsub
data16
jg
fstps
or
mov
fbstp
sub
add
lds
out
dec
pop
icebp
pusha
xchg
inc
out
mov
pop
jno
hlt
or
add
nop
add
xlat
push
cs
add
dec
mov
lea
push
outsl
js
add
jmp
inc
aam
arpl
sbb
loop
stc
pop
adc
imul
in
and
outsb
add
jp
int
sbb
dec
and
inc
sbb
inc
adc
mull
jno
jecxz
and
adc
cwtl
xchg
sub
repz
or
sbb
jl
xor
ja
fdivl
fs
movsl
or
out
ljmp
daa
pop
add
lds
xchg
fsubrs
aam
jle
popf
cld
sub
into
enter
outsl
add
jns
dec
incl
adc
mov
loop
bound
mov
in
push
les
dec
sub
std
iret
inc
push
lock
push
pop
sbb
outsb
pusha
inc
xchg
jmp
add
icebp
push
inc
call
jmp
je
outsb
bound
or
sub
mov
icebp
mov
ljmp
or
inc
xchg
fucomp
mov
or
out
push
sub
rcll
in
insb
mov
lahf
add
and
or
addr16
and
sub
cmp
push
fs
cwtl
add
add
push
add
jnp
xchg
repnz
and
sbb
ljmp
pop
imul
iret
mov
rcrb
loope
lea
fldenv
jg
add
adc
and
inc
push
cwtl
cmp
cli
add
pusha
jp
nop
hlt
add
push
test
and
loopne
cmp
sub
aaa
adc
add
divb
fmuls
data16
jnp
out
xor
leave
stc
dec
pop
inc
dec
lret
push
pop
mov
pop
shrb
ljmp
in
imul
xchg
xchg
or
pop
js
fs
and
push
ret
mov
mov
pop
sbb
aaa
pop
push
fwait
jle
xor
rolb
add
into
inc
iret
push
pushf
add
das
data16
sub
in
ljmp
push
sbb
sub
orb
push
fcompl
cmp
sbb
add
les
enter
jge
addr16
xchg
mov
rorb
sub
loopne
shlb
int3
jns
repz
add
xor
and
or
mov
pop
add
xor
out
movsl
jnp
cmp
jge
sbb
popa
push
push
pop
add
cmc
nop
movb
xchg
les
std
lret
call
aam
addb
mov
pop
movsb
nop
lods
push
in
xchg
adc
add
lods
popa
push
sbb
fldt
pop
hlt
shlb
inc
xor
mov
cmp
mov
xchg
in
add
int3
xchg
or
jns
stos
mov
loopne
fdivrs
clc
ds
sbb
mov
xor
std
dec
add
mov
pop
add
fistl
add
or
dec
add
repz
fdivl
push
loop
pinsrw
ror
add
ret
cmp
push
je
dec
sbb
push
jge
cmpsb
dec
adc
jns
cli
lods
add
cs
fiaddl
mov
or
sub
xor
mov
dec
hlt
jb
jne
incb
sbb
sbb
jg
jecxz
mov
js
add
mov
pop
dec
cltd
cmpsb
ret
enter
xor
stc
popa
mov
mov
mov
lods
in
mov
call
gs
and
lahf
pop
mov
jae
jns
mov
dec
jnp
push
xor
add
dec
inc
sahf
decb
ror
shrb
pop
ljmp
cmp
cmpsl
repz
adcb
sub
mov
fimuls
adc
enter
jns
lock
cli
or
and
jge
push
and
leave
lahf
fwait
mov
cmp
repnz
jae
loop
push
jno
lahf
dec
addr16
jp
push
out
cli
mov
pusha
and
fldcw
fwait
lahf
stos
jge
je
aad
iret
mov
add
push
js
repnz
sub
mov
adc
je
adc
lock
cwtl
cmc
in
lock
adc
xor
adc
sbb
add
cwtl
fcoms
xor
dec
aaa
mov
aad
rol
push
dec
pushf
js
hlt
lret
sarb
xor
les
add
sbb
sub
fldt
cltd
sub
inc
pop
imul
cmp
adc
and
pop
call
push
sahf
push
cmpsl
out
fldl
mov
sub
inc
lods
inc
je
repnz
add
test
pop
pop
dec
mov
xor
mov
lods
enter
addb
insb
push
repnz
push
push
icebp
out
pop
lcall
arpl
sbb
pushf
call
pop
mov
push
js
dec
sbb
aad
into
sbb
xor
jns
out
push
dec
idivl
adc
ret
iret
mov
js
and
mov
jns
add
jmp
or
decl
or
mov
inc
loopne
nop
adc
lret
cmp
icebp
add
repz
push
push
daa
sub
dec
xchg
js
jo
add
out
cmpsb
sub
push
cmp
mov
rolb
nop
cwtl
test
lret
sbbb
call
xor
pop
mov
loopne
cwtl
mov
jl
sbb
popa
loop
test
sub
ja
or
mov
stos
jb
mov
xor
add
adc
jnp
rcrl
negl
or
sbb
out
or
testb
cmc
and
rol
hlt
push
add
mov
mov
hlt
dec
cmc
xor
dec
pop
fnstcw
mov
ds
lea
unpcklps
sbb
lods
add
jo
adc
mov
adc
icebp
es
jno
inc
rcll
jmp
jo
loop
outsb
pop
xchg
fs
dec
pop
or
bound
shr
pop
mov
fwait
or
xor
and
testb
dec
popa
mov
sarb
insb
gs
fcomps
std
add
push
xchg
mov
outsl
dec
or
mov
xchg
dec
xor
dec
xor
ret
adc
xchg
sub
inc
push
sbb
cs
sub
lret
test
test
out
xchg
or
inc
and
push
andl
pop
cwtl
adc
inc
out
add
dec
hlt
imul
mov
push
das
ds
sbbb
push
mov
add
sbb
pop
adc
lret
lahf
adc
jl
movsb
adcb
and
lds
sbb
jle
xchg
jns
add
lcall
scas
pusha
dec
dec
sub
xor
lret
mov
sbb
addb
fbld
dec
dec
dec
outsl
push
mov
mov
jbe
inc
pop
or
mov
repnz
pusha
dec
push
mov
xor
rsqrtps
dec
andb
lds
fwait
add
inc
lea
mov
fadds
sbb
aam
cli
adc
sub
sbb
imul
and
inc
push
xor
jmp
inc
addr16
pop
add
xchg
filds
jo
add
test
adc
sets
lcall
scas
pop
and
leave
sub
jge
mov
cld
mov
xchg
inc
stos
or
jo
lcall
fsubl
in
sub
call
jbe
aam
bound
sbb
int3
xchg
nop
aas
adc
dec
adc
dec
xor
sub
pop
inc
shlb
fucom
xchg
xor
and
pop
hlt
arpl
jmp
cmp
shrl
xor
int3
enter
ja
sbb
cmp
inc
and
lds
pop
test
inc
jp
adc
or
addr16
fnstenv
pop
sbb
jo
cmp
add
adc
adc
ss
cmpsl
lock
xchg
add
pop
mov
mov
add
outsb
fwait
and
mov
push
mov
mov
push
adc
scas
adc
int3
mov
rcl
pop
cld
fsubs
mov
cmp
cmpl
mov
dec
jle
add
jnp
movl
sbb
es
adc
ret
pop
jne
dec
std
iret
clc
mov
and
das
jle
pop
mov
add
sub
sub
adc
andb
add
lret
in
mov
pusha
sti
dec
inc
mov
mov
push
icebp
mov
sbb
xor
pop
cmp
sub
mov
xchg
ror
cltd
xchg
and
add
dec
or
loope
mov
cwtl
lods
push
scas
add
js
cmp
shll
aas
bswap
pop
int3
andb
stos
loope
bound
cwtl
aad
adc
sub
je
or
insl
mov
or
inc
jg
lock
dec
add
in
push
pop
aad
test
xchg
test
loope
mov
pop
and
adc
iret
mov
mov
addr16
shll
push
iret
cmc
shll
mov
and
shl
aas
adc
test
add
into
enter
dec
out
add
add
and
in
rcrl
sarb
dec
push
adc
sub
mov
dec
dec
pop
mov
inc
ss
push
lret
das
nop
enter
test
dec
mov
or
clc
sub
js
hlt
stos
xchg
sbb
adc
pop
jecxz
lret
in
mov
sub
add
push
fsts
shrb
out
cmc
mov
mov
scas
inc
pop
dec
mov
lock
dec
xor
stos
hlt
stos
and
cmp
rcrb
aad
inc
imul
sbb
das
xor
mov
pusha
push
and
mov
mov
ret
imull
cmpsl
addr16
pop
cld
shlb
adc
in
adc
cmp
lea
out
add
fidivl
test
into
pop
sar
and
jns
dec
add
jno
dec
imul
mov
nop
dec
xor
xchg
loopne
sbb
xor
and
imul
dec
std
push
mov
in
movl
bound
cmpl
lret
leave
std
mov
add
mov
int
cs
cmc
js
sbb
inc
je
sub
jl
xor
aad
aaa
dec
je
dec
enter
fnstcw
dec
pop
fldt
int
roll
dec
dec
mov
lods
or
mov
adc
fimull
xchg
push
imul
lods
add
insl
add
add
mov
xorl
xchg
inc
cmpsb
stos
inc
mov
xchg
xor
and
in
adc
lds
sub
mov
sub
add
xchg
loope
inc
pop
mov
add
sbb
fistpl
stos
xor
stc
push
sbb
js
push
jle
add
adc
jb
or
fldenv
pushf
psubsb
lret
pusha
sub
add
test
dec
cmpsb
pusha
je
adc
jmp
sbb
cmp
nop
fildll
mov
add
jnp
movsb
cmpsb
call
mov
cld
cmp
add
adc
sub
inc
test
test
daa
push
mov
scas
mov
cmpl
mov
and
cltd
loope
add
mov
out
push
adc
adc
dec
ds
pop
mov
push
xor
xorb
xor
lds
push
push
sbb
add
enter
dec
mov
stc
in
pop
and
cmp
adc
hlt
iret
add
cmp
xchg
dec
dec
test
cltd
icebp
adc
or
mov
mov
pop
mov
xchg
mov
mov
movsb
out
movsb
shlb
jp
aas
mov
mov
testb
or
test
and
lret
mov
sub
add
and
mov
adc
mov
enter
inc
out
and
add
push
pop
ja
js
inc
jno
aaa
je
outsl
leave
dec
fildll
enter
sbb
ds
cltd
and
sub
test
cwtl
dec
loopne
sbb
push
and
dec
or
mov
loopne
inc
mov
cmp
arpl
adc
adc
outsb
dec
add
iret
and
sbb
inc
dec
push
ds
ret
mov
cmpsb
mov
dec
nop
mov
inc
js
dec
jp
int3
test
add
cmp
sbb
movl
pop
and
pop
jge
push
repnz
adc
add
inc
sahf
push
enter
idivb
sub
imul
mov
sbb
mov
inc
pop
lods
push
sahf
jg
stos
xchg
fstps
sub
add
cli
mov
not
mov
sub
std
xchg
inc
shlb
inc
add
in
aam
add
daa
and
jnp
push
sub
add
sarb
scas
nop
test
pusha
add
inc
dec
push
jge
inc
rcr
sub
xchg
inc
dec
aam
loopne
int3
les
inc
mov
dec
mov
sbb
jns
cmpsl
adc
mov
out
stos
pusha
pop
fadd
nop
mov
or
add
push
push
mov
fcompl
scas
mov
roll
jno
inc
jge
lret
add
mov
sub
adc
sub
lcall
sub
sub
fldenv
and
test
sbb
das
nop
pushf
jle
sub
pop
inc
sub
pop
pop
lahf
les
movsb
xchg
push
xchg
xchg
into
out
insb
xchg
addb
sbb
pushfw
mov
pop
jg
nop
or
sbb
ret
jecxz
xor
orl
xor
cmpsb
test
sbb
sbb
and
leave
popa
dec
in
sub
dec
push
dec
das
add
add
cli
sub
int
add
or
aas
jg
repnz
adc
push
clc
dec
sub
dec
loopne
mov
call
add
mov
sub
ret
enter
and
inc
sbb
adc
testb
mov
pop
cmp
inc
mov
fadd
lock
mov
xlat
cltd
push
sub
or
int3
imul
inc
inc
dec
push
push
push
daa
sbb
mov
sub
add
mov
aaa
imul
cld
mov
add
adc
das
rcrb
sbb
cltd
ljmp
jbe
jae
or
pop
out
pop
arpl
and
outsl
shr
dec
iret
xor
subb
push
jno
scas
push
jns
sbbl
loope
dec
mov
mov
lods
cmp
int
jns
cmp
add
outsl
push
jmp
fs
xlat
js
leave
lret
sbb
and
xor
fs
add
pushf
repz
adc
cmpl
int
imul
mov
sbb
push
mov
xor
dec
or
enter
mov
sahf
inc
jae
insb
cmp
int
xchg
scas
rolb
shr
cld
mov
add
test
adc
sub
icebp
inc
insb
mov
mov
cmp
push
in
pop
jmp
ret
inc
addb
test
ret
je
jb
cmp
adc
sbb
xchg
mov
cmpsb
in
or
in
cmp
mov
inc
dec
pop
daa
insb
lds
fs
enter
orl
and
cmp
ljmp
mov
nop
fnstenv
xor
das
mov
adc
mov
imulb
fsubp
fadds
ret
inc
push
adc
xor
cmp
inc
pop
lret
jl
lret
and
add
mov
sti
rcrb
xlat
push
xor
lock
pushf
mov
clc
and
ds
add
pop
hlt
pop
xchg
repnz
adc
rolb
cmp
add
test
inc
dec
or
dec
xor
mov
out
bound
movsb
mov
arpl
js
jl
add
jge
test
or
andb
pop
movsb
js
and
pop
loope
mov
ss
stos
cwtl
lods
dec
dec
cmpl
mov
push
stos
or
repz
std
adc
ss
subps
and
popl
adc
ds
sub
mov
aam
shr
sub
je
and
mov
popf
pop
sbb
or
adc
out
sti
sbb
or
rorb
jnp
mov
push
aam
xor
and
add
sbb
add
gs
enter
ret
mov
adc
data16
pop
arpl
aas
arpl
sub
push
mov
cltd
out
mov
cltd
insl
psraw
lea
cmp
sarb
xor
sub
inc
out
xor
hlt
push
fnsave
mov
push
addr16
mov
mov
mov
sbbb
dec
sub
roll
repnz
sbb
insb
stc
or
pushf
ficompl
ja
mov
push
dec
and
push
and
idivb
lahf
xor
mov
xchg
xorb
pusha
pop
fcom
inc
ja
rclb
add
fdecstp
lret
push
pusha
loope
nop
mov
or
mov
popf
test
push
push
add
lahf
xchg
jl
mov
push
ja
inc
mov
mov
sub
ja
cmc
pop
add
fidivrl
pop
pusha
data16
mov
adc
insb
xor
xor
jns
lods
testl
in
dec
pusha
shrb
push
psubb
popf
mov
add
test
and
mov
jae
adc
jns
sbb
xchg
imul
pop
rolb
xchg
xor
push
cmpb
sbb
popa
addr16
and
or
or
mov
add
mov
or
jnp
cmp
cltd
mov
test
add
fisubl
sub
xchg
add
inc
imul
jle
sbb
mov
xchg
in
rol
add
in
dec
mov
ret
dec
movsb
adc
popa
out
mov
adc
insl
pop
inc
jmp
sbb
pop
jnp
add
data16
inc
repz
mov
add
sbbb
dec
or
rcll
ficoms
out
add
mov
aaa
js
sub
pop
push
lds
into
mov
adc
push
xchg
lock
mov
out
adc
hlt
stos
aam
push
add
loope
scas
data16
ret
je
cmp
jmp
pop
adc
cltd
jno
mov
ror
jne
add
ds
and
testb
subb
xor
add
mov
outsb
mov
add
cmpsb
lods
shl
mov
popf
xor
shr
lods
inc
pop
dec
mov
insl
pop
jmp
mov
and
rcl
push
dec
sbb
sub
jp
add
shll
sahf
or
push
sbb
inc
cltd
pop
xchg
sub
arpl
add
adc
xorb
pop
test
sbb
add
xchg
inc
jae
out
mov
aam
out
xlat
xor
in
or
adc
push
cmpb
jno
out
jmp
and
add
jb
push
addr16
pushf
leave
add
sbb
shll
mov
int3
in
add
dec
into
les
pop
in
cld
xchg
lock
inc
rolb
sahf
adc
jp
xchg
in
movsb
inc
or
and
les
push
add
pusha
pop
popa
cmp
sbbl
jl
mov
push
mov
add
loope
cli
dec
ret
xor
inc
pusha
cmp
and
inc
jb
pop
pop
dec
subb
mov
outsb
lds
movsb
nop
mov
mov
mov
nop
sbb
adc
sbb
lret
ret
and
and
stos
subl
jo
adc
dec
push
rol
push
lods
push
mov
mov
and
orb
out
enter
add
repnz
pusha
loope
cmp
jmp
add
sahf
pop
lds
pusha
mov
popa
xor
aaa
add
sbb
and
pushf
sub
and
cltd
jae
movsb
sbb
fdivrs
jmp
inc
sbb
add
shlb
mov
cwtl
shlb
add
cltd
pop
enter
xchg
add
out
or
jmp
ret
and
jg
xorb
mov
push
sbb
push
jo
gs
sbb
xor
and
adc
mov
adc
pop
aas
idivb
add
pop
fdivs
push
pop
add
shll
cmp
sbb
mov
fstpt
jbe
and
and
in
inc
les
cmp
xchg
popf
mov
sub
loopne
add
movsl
push
clc
or
cmpsl
sbb
rclb
pop
cmpsl
mov
sub
push
cli
xchg
sbbb
dec
lods
add
icebp
xor
sarb
nop
mov
incb
mov
and
ret
sub
jbe
int3
subl
mov
adc
xor
addl
xchg
mov
pushf
popf
fcomps
mov
test
stos
pop
lods
cmp
add
jns
sbb
cmp
pop
popf
or
adc
cmpsl
adc
xor
jl
out
push
lods
adc
sub
hlt
add
pop
pop
stos
cmc
inc
jb
pop
sub
jbe
imul
dec
inc
add
lcall
cltd
xchg
add
fmulp
jne
test
in
and
dec
or
xchg
adc
push
test
add
fistl
mov
imul
push
mov
aas
xchg
xor
add
sbbl
mov
out
pop
push
mov
mov
cld
sbb
xchg
jns
cltd
pop
insb
push
out
inc
adc
ja
sbb
sbb
sub
add
test
cli
das
and
rcrl
popf
rolb
imul
adc
add
imul
xchg
out
adc
pop
ret
add
mov
cmp
jnp
test
cmpsl
pusha
aas
cmpsb
mov
jns
les
fs
add
jae
mov
inc
mov
push
adc
fbld
sarb
test
mov
shlb
add
xchg
add
sahf
fstpl
push
out
xlat
jl
pop
ret
loopne
lcall
cwtd
mov
pusha
jge
fsts
je
adc
mov
mov
add
cmp
jp
lods
pushf
xchg
inc
sbb
lret
movsl
sub
sub
pusha
fsubr
out
add
push
pop
hlt
and
push
jl
lret
ja
sub
or
fisttps
loope
mov
xlat
add
loop
inc
push
repnz
pop
pop
push
out
mov
xchg
inc
add
mov
add
jge
dec
dec
shll
jns
lret
push
dec
insl
or
and
xor
mov
out
mov
out
mov
cmp
in
clc
mov
scas
mov
inc
adc
bswap
repz
pop
sub
test
and
cmc
inc
inc
and
in
pop
cmpl
in
mov
loopne
cmpsl
xchg
sub
sbb
push
jbe
or
mov
js
push
orl
lock
in
push
cmp
sub
test
push
lea
lahf
testl
add
or
and
test
add
jp
jns
sub
push
add
je
push
sbb
shlb
sarl
imul
in
daa
pop
xor
test
jb
mov
mov
push
push
ja
mov
pop
add
or
adc
xor
add
cmpsl
div
loop
mov
mov
cwtl
sub
pushf
out
dec
in
add
mov
in
add
pop
lock
mov
mov
dec
mov
in
addr16
add
fmul
or
mov
xchg
inc
adcb
mov
daa
dec
or
add
cmpsb
inc
cld
push
stos
pushf
inc
inc
fsubp
mov
out
mov
inc
bound
dec
or
sbb
cwtl
or
sub
lods
outsb
loopne
in
jmp
pushaw
pushf
nop
je
mov
cmc
lret
sbb
add
sbb
addb
or
lret
cmp
mov
aam
xor
lods
testl
fs
cmp
or
roll
psubb
cmp
push
and
clc
adc
in
ficoml
push
and
bound
aam
mov
ljmp
xor
clc
jp
add
xchg
in
mov
hlt
notl
int
rorl
cmp
scas
cmpsl
repnz
xor
xor
adc
sahf
mov
aaa
lock
out
jbe
or
call
in
add
jge
shrl
cmpsl
jo
add
aaa
sbb
sti
jo
or
or
mov
loopne
lcall
faddl
xor
imul
mov
add
xor
sbb
sbbl
fwait
push
imul
jne
cld
loop
add
inc
add
rolb
or
sbb
ss
and
mov
pusha
adcb
and
and
mov
adc
adc
pop
aaa
mov
push
lds
or
test
test
cmpl
add
pop
pop
xchg
cmp
shlb
xchg
scas
negl
xchg
jno
sti
sar
push
mov
repnz
mov
xlat
les
push
mov
add
add
inc
in
shrb
in
sub
push
movsb
or
push
and
add
mov
popa
push
jg
push
xchg
shll
in
orb
paddsb
xor
out
pop
xchg
lock
imul
and
sbb
ljmp
leave
pop
mov
popf
fcoms
int3
inc
push
insb
xor
popf
dec
xchg
int3
or
push
and
mov
inc
jb
push
outsb
mov
xchg
les
adc
in
lock
jo
cmp
pushf
cmp
and
and
jl
ret
nop
add
in
mov
push
mov
cld
push
sahf
ljmp
out
mov
jecxz
add
into
pop
jl
imul
in
sbb
xor
or
sub
test
adc
aas
or
cli
push
add
or
adc
leave
sbb
cmpsb
dec
add
xor
sahf
pop
pop
lahf
inc
xor
imul
xlat
int
sbb
je
add
jae
jmp
mov
fs
push
dec
add
push
call
in
xor
push
inc
dec
cmp
lahf
mov
out
mov
cwtl
fisttps
add
test
sub
mov
xor
sbb
jmp
add
dec
out
aam
mov
test
std
inc
add
sbb
ror
cmp
test
sub
orb
rorl
ret
xchg
and
in
fisubrs
les
loopne
add
add
sub
and
dec
test
data16
enter
bound
arpl
in
adc
or
test
sbb
adc
clc
add
mov
mov
add
add
add
mov
pop
add
cmpsb
dec
adc
fwait
test
cmpsl
dec
add
dec
pop
mov
aam
loope
mov
jmp
jg
jo
lods
add
or
mov
xchg
sbb
mov
inc
add
sub
call
add
cmpsl
xor
adc
cltd
lock
jecxz
add
pop
cmpsb
sbb
sbb
adc
add
stc
dec
pusha
cmp
adc
sbb
rclb
lcall
pusha
aas
pushf
dec
int
pop
mov
lock
cltd
pop
mov
jne
adc
bound
mov
dec
scas
mov
sbb
popl
mov
pop
push
lods
repz
add
mov
xor
and
add
dec
das
mov
pushf
add
xor
pusha
push
cwtl
sbb
inc
adc
insb
mov
sub
and
adc
je
nop
mov
xchg
xor
jecxz
cld
pop
lcall
adc
sbb
sarb
mov
add
rdtsc
pushf
out
cwtl
popa
or
rol
testl
enter
push
cwtl
data16
xor
out
push
cmp
test
cltd
add
inc
jno
add
stos
cmp
les
push
sbb
out
add
sahf
add
sbb
cmpsb
and
js
xor
ds
adc
loopne
jmp
mov
mov
jl
push
pop
std
pavgb
sbbl
fiadds
xor
inc
pushf
outsb
and
adc
cmp
mov
test
jmp
lods
xor
add
in
test
mov
int3
insb
add
movsl
jp
cmp
nop
jle
movq
out
outsb
cld
addb
add
mov
and
cli
lock
jne
cwtl
xchg
addb
mov
add
je
leave
sti
inc
xchg
test
or
jl
add
jbe
stos
xor
xchg
sub
mov
or
lock
dec
into
add
cltd
les
mov
andl
add
insb
adc
add
sete
fdivl
insl
jb
nop
adc
xor
push
adc
pop
add
fisttps
add
movsb
cli
jno
mov
jg
mov
xorb
pop
jbe
faddl
ret
xchg
and
adc
incl
push
adc
addb
push
mov
xlat
fstps
fidivl
push
inc
jg
or
rclb
mov
pushf
popa
pusha
xchg
jae
add
in
add
and
push
clc
js
mov
test
sbb
mov
out
xchg
sbb
aam
test
int
nop
mov
outsb
lret
xor
push
shlb
or
mov
jp
nop
lock
xchg
mov
pop
push
mov
sbb
inc
loope
add
fadds
repnz
mov
dec
mov
adc
ss
or
cmp
add
cs
pushf
cmp
sahf
mov
sub
aaa
mov
call
mov
sub
or
or
faddp
push
jmp
sub
xor
add
ja
adc
fsubs
ret
enter
out
xor
mov
xchg
sub
in
movsb
pop
push
sub
sub
jle
fldenv
add
mov
movb
and
mov
hlt
leave
dec
bswap
push
pushw
pusha
fs
mov
xchg
sbb
pop
inc
push
mov
and
je
add
adc
add
pop
repz
mov
mov
adc
enter
outsb
push
pop
popf
popa
jp
add
dec
fcmove
daa
stos
add
loopne
out
mov
push
inc
cwtl
repnz
and
cmpsb
xor
je
push
call
mov
lcall
xchg
sub
fsts
in
cld
cmp
test
sbb
mov
cmp
inc
dec
add
adc
add
dec
daa
cmovs
mov
inc
xchg
adcb
stos
jecxz
add
push
dec
xchg
adc
add
jmp
pop
insb
sbb
pop
sahf
test
push
sti
and
lock
jmp
add
or
mov
nop
pop
pop
xchg
lcall
aad
add
xor
mov
add
hlt
imul
adc
mov
aam
popf
enter
sahf
or
and
and
testl
in
cmc
mov
fstl
inc
les
add
ds
frstor
add
or
mov
imul
repnz
in
mov
outsl
hlt
cld
std
push
in
data16
mov
or
mov
mov
dec
cmp
call
aaa
jno
lock
add
xchg
adc
cltd
mov
inc
mov
push
add
xchg
sub
add
icebp
insl
repnz
adc
and
add
cmp
inc
add
js
add
pop
sbb
cmp
mov
xchg
inc
push
mov
das
in
mov
add
adc
or
nop
mov
mov
dec
stos
mov
pop
testb
mov
call
mov
addl
dec
mov
in
push
int3
or
ja
add
mov
mov
jl,pn
xchg
cmp
testl
clc
lods
inc
sub
je
roll
loope
push
scas
jp
testb
ficoml
and
cmpsl
sbb
pop
daa
les
shll
pop
das
dec
jne
gs
mov
adc
lss
es
adc
or
pop
scas
fdivl
or
mov
cmp
push
shll
mov
mov
xor
inc
jne
push
cmc
lcall
call
popf
push
or
loopne
test
inc
mov
cmp
jnp
cmp
pop
mov
subb
mov
xchg
add
adc
filds
cs
int3
adc
or
out
loopne
das
inc
xor
xchg
pusha
push
or
bnd
pushf
scas
push
add
add
inc
sub
jl
lea
inc
pop
push
inc
push
add
insl
leave
xchg
test
push
add
lea
pushf
loop
add
sahf
pop
ja,pn
test
cltd
xchg
cmp
mov
xchg
in
sub
sub
int3
scas
jg
mov
jnp
call
jl
push
imul
sarl
enter
inc
inc
fs
sbb
mov
jg
test
push
es
cmp
shrl
pop
mov
sbb
and
imul
sbb
rorl
add
in
push
adcb
popa
add
or
fcomip
imulb
je
stos
cld
mov
add
and
dec
aas
jae
and
outsb
popf
pop
pop
loopne
lock
shl
xor
lahf
adc
inc
mov
repz
and
orb
movsl
adc
pop
pop
add
inc
movsb
dec
divb
nop
movsb
inc
cltd
filds
xor
ret
sbb
adc
lock
inc
pop
enter
in
mov
mov
int3
add
jo
aaa
iret
ljmp
sbb
sahf
punpckhbw
cmp
xor
jo
push
xor
add
push
lret
add
out
add
mov
hlt
sub
enter
xor
clc
add
fsubrs
popa
out
and
mov
out
cmp
loop
cmpsl
dec
clc
pusha
adc
lcall
push
cmp
jnp
add
negl
fdivrs
popf
adc
sbb
push
sbb
mov
push
sub
dec
adc
and
hlt
add
fmull
insb
int3
push
inc
or
mov
jmp
xor
aas
xor
es
adc
jbe
in
add
lahf
or
sub
sbb
movl
pop
adc
jl
mov
mov
xchg
dec
mov
inc
test
leave
lea
mov
dec
adc
imul
jo
sbb
clc
mov
je
adc
and
push
xchg
dec
mov
jnp
or
cmp
and
add
and
adc
inc
push
add
inc
push
incb
imul
aam
out
pop
xchg
xchg
and
add
popf
jnp
push
inc
outsb
ss
pop
lods
and
sub
scas
and
cmp
push
inc
stos
popf
push
fs
push
mov
jl
in
inc
add
sub
movsb
or
xchg
incl
sti
popa
pop
pop
out
jns
cmp
sub
fsub
enter
mov
adc
mov
or
fs
test
or
pusha
xchg
int3
jge
sbb
cwtl
outsb
addr16
pop
andb
xchg
xchg
add
sub
dec
test
inc
cmp
mov
daa
cmpsb
push
into
mov
add
jle
add
aaa
pop
push
xchg
add
cmpsb
push
rcl
add
enter
in
add
aaa
fwait
sub
mov
addr16
add
orb
mov
pop
out
add
cmpsb
adc
fwait
lret
outsb
or
lcall
dec
xchg
jbe
push
adc
pop
add
int
jb
cmpb
ljmp
imul
pop
xrelease
fildl
adc
sbb
mov
vunpcklpd
outsl
and
aam
or
lahf
loopne
sub
add
sub
mov
test
push
into
lock
add
call
adc
rorb
or
shlb
mov
cmp
idivl
adc
stos
imul
add
mov
pop
jbe
imul
ret
dec
jae
ja
lock
sub
dec
push
ljmp
cmp
xchg
jne
mov
jecxz
je
lret
fs
inc
stc
push
sahf
cmpsb
and
vpshuflw
add
lcall
lahf
jmp
pop
sub
pop
xchg
push
inc
mov
xchg
nop
loopne
das
add
lea
xor
inc
or
pop
mov
cmp
das
mov
cwtl
sub
nop
push
mov
mov
popa
insb
testb
sub
popf
push
sub
cmp
punpcklbw
pop
into
push
inc
repz
insl
insb
pop
and
mov
ret
lods
mov
and
mov
or
and
xchg
mov
subb
push
std
cmp
mov
pop
inc
lods
cmpsb
adc
jl
push
out
mov
out
js
push
push
repnz
and
fs
lds
mov
adc
xchg
sbb
mov
add
mov
clc
mov
gs
ds
roll
loop
incb
pushl
add
cli
shlb
mov
lea
xor
pop
sahf
and
add
xchg
aam
or
mov
icebp
xor
in
pusha
orb
add
pop
add
int3
adc
std
add
lret
adc
xchg
stos
nop
sbb
jge
scas
sub
pop
xchg
sbb
xor
lock
int
dec
std
and
sbb
in
ds
mov
es
push
bound
mov
mov
xor
cmp
cmp
out
data16
mov
push
mov
aaa
inc
mov
sbb
xor
ljmp
rcrl
xchg
enter
fisubs
push
dec
and
add
arpl
fwait
push
and
popa
add
push
jg
sbb
dec
pusha
mul
les
jo
adc
hlt
cmp
xchg
inc
call
pop
fadd
adc
adc
xchg
loopne
or
cmp
js
inc
pusha
xchg
andb
mov
mov
mov
or
loop
loopne
unpcklps
decl
or
cmp
cs
aad
cs
addr16
shlb
out
nop
jl
mov
cmpsb
inc
cmp
xchg
out
xchg
jbe
enter
imul
mov
ffreep
arpl
lods
adc
xchg
xchg
fisttps
mov
xor
test
les
push
adcb
lock
loop
mov
jp
add
and
xchg
or
scas
xchg
mov
clc
test
xor
jg
pop
das
inc
mov
add
xchg
dec
shlb
inc
mov
sub
sub
dec
pop
xor
in
fwait
rolb
stc
lods
mov
mov
vlddqu
cmc
lds
xor
popl
adc
add
rclb
bound
cmp
dec
and
xor
xchg
je
add
shll
sbb
push
out
test
adc
sub
shl
fucomi
daa
add
adc
adc
out
scas
push
out
or
pop
mov
mov
jns
dec
add
adc
xor
inc
push
xor
pop
or
lods
iret
add
mov
adc
xor
push
or
bound
insb
sbb
movsl
js
fwait
loope
add
lods
pop
dec
add
roll
mov
adc
add
insl
out
push
addr16
inc
xchg
or
jae
or
fbld
lock
mov
movsb
in
pop
cmc
sbb
in
mov
stc
add
movb
mov
add
sbb
mov
push
jno
mov
cwtl
nop
and
hlt
pop
add
push
sti
call
xlat
inc
sbb
push
insb
test
icebp
mov
and
jb
adc
cltd
push
mov
pop
pushf
dec
fs
add
mov
mov
push
test
or
pop
shll
jmp
add
inc
mov
push
mov
outsl
icebp
mov
fnop
cld
fbld
lods
adc
stos
add
or
mov
sub
sbb
push
mov
mov
pusha
repnz
add
shrl
shr
fwait
adc
nop
loop
push
pop
inc
dec
xchg
pushf
loop
subb
aaa
icebp
mov
jns
mov
out
call
mov
cmp
js
mov
fbld
or
aam
int3
pop
cld
sub
lock
pop
or
add
ud1
lock
js
rsm
and
mov
sbb
es
lahf
ja
lea
ljmp
sub
add
push
push
enter
icebp
add
mov
xchg
and
sub
mov
mov
pop
cmp
push
scas
aas
adc
cwtl
pusha
pop
shrl
cmp
pop
push
in
push
dec
fcoms
lock
das
lret
xchg
add
push
pop
inc
arpl
aad
lds
mov
dec
mov
aaa
inc
enter
popf
stc
scas
push
int
das
nop
into
mov
ret
mov
xor
add
push
lock
adc
xor
xchg
mov
orb
mov
lret
add
pop
rclb
pusha
and
xchg
adc
popf
ret
js
jne
insb
repz
or
dec
mov
ret
cmovnp
adc
pop
sub
mov
jp
sbb
cmpsb
cmp
push
lcall
mov
pop
push
or
push
dec
scas
mov
pop
sbb
and
add
std
jo
adc
or
js
inc
jbe
mov
or
jle,pt
loopne
dec
adc
je
and
pop
enter
mov
fimuls
lock
jmp
xchg
out
enter
add
insl
testl
adc
mov
xchg
jg
sub
pop
int3
fs
inc
mov
mov
sahf
stc
fadds
xchg
add
mov
xor
or
or
add
jg
or
and
add
enter
push
cltd
sub
and
fildl
mov
lock
inc
push
aam
stc
bound
sbb
pop
mov
xchg
pusha
addr16
stos
mov
mov
jnp
mov
rol
jg
shrb
pushf
pusha
add
pop
push
insb
addr16
xchg
mov
inc
jne
ret
and
lcall
sbb
sub
or
add
outsb
push
sbb
hlt
cmp
out
xor
xchg
sahf
dec
lock
adc
add
js
hlt
aaa
dec
push
ret
pushl
repnz
mov
xchg
and
ret
adc
push
xor
jo
test
mov
dec
or
lea
add
lcall
iret
notl
data16
xor
dec
fcoms
dec
add
mov
dec
add
in
adc
repnz
mov
nop
mov
icebp
mov
mov
enter
mov
pushf
repz
xchg
add
rcrb
lds
cmpsl
imul
and
cmp
sub
out
xchg
push
lods
and
fnstenv
test
rolb
cmp
xchg
divb
sbb
adc
in
mov
and
pop
sub
adc
nop
adc
fsubl
scas
cmpsb
sbb
pop
inc
faddl
mov
xlat
jg
into
add
xchg
mov
push
mov
dec
sub
pop
imul
clc
sub
xor
test
addr16
inc
xor
ljmp
push
xchg
sub
aam
js
test
cwtl
adc
insb
and
repnz
mov
inc
jo
add
jle
add
test
and
sti
and
cs
xchg
mov
add
pop
dec
pop
dec
jnp
dec
adc
popf
pop
repnz
and
sub
cltd
imul
mov
pusha
xlat
add
movsb
jmp
mov
cmp
xchg
rorb
loope
cmp
dec
into
lods
js
in
scas
or
xor
push
inc
xor
pop
incb
fstp
leave
popa
xor
arpl
cmpsb
pop
jns
into
andb
in
mov
xor
pop
xchg
addb
insb
popa
jl
and
ja
adc
in
dec
jge
add
out
jnp
adc
popa
dec
and
imul
or
out
loopne
push
mov
xchg
mov
adc
sbb
pop
inc
jecxz
pop
mul
mov
aas
jmp
jno
xchg
sbb
add
cmp
dec
jge
int3
popa
or
addr16
push
movsb
lods
xchg
inc
inc
xchg
or
cmpl
mov
mov
sub
or
mov
lret
add
rol
sbb
sbb
mov
lea
pushf
cwtl
scas
jecxz
cwtl
dec
jg
add
add
or
enter
inc
add
pusha
pop
pusha
mov
aad
cmp
sbb
out
mov
arpl
and
mov
and
andb
aaa
xchg
mov
out
cmp
es
cmp
and
push
xor
dec
and
xchg
lock
or
out
adc
mov
dec
fisttps
mov
add
leave
scas
pop
adc
jge
add
mov
inc
push
add
jl
out
lcall
test
inc
imul
cld
push
sbb
or
sub
lahf
pusha
ret
ret
cli
aaa
add
inc
sbb
push
cli
jbe
pusha
xor
sbb
sbb
ret
xchg
shlb
jbe
add
push
ret
lock
pushf
add
jno
aaa
add
hlt
test
jle
jns
and
dec
push
pop
dec
faddl
cmpsb
fidivs
push
add
out
sti
sub
push
into
xchg
lods
add
out
dec
mov
in
cmp
icebp
mov
es
or
enter
aam
push
loopne
in
stos
xbegin
test
adc
call
addr16
aam
push
sub
jae
push
fmuls
mov
dec
mov
add
sub
jecxz
dec
pop
or
pop
jmp
push
pop
addr16
and
or
xchg
cmp
lret
sub
pusha
mov
jmp
jnp
inc
daa
repz
cmpsb
mov
mov
mov
mov
and
sbb
add
inc
push
inc
jno
pushf
mov
lcall
ret
mov
and
ret
in
in
xchg
mov
push
inc
xor
mov
aaa
sahf
mov
inc
sbb
and
pop
xchg
add
sbb
add
in
stos
jne
cld
cli
rol
call
add
xchg
cld
cld
into
push
imul
test
ds
mov
adc
mul
jo
mov
sbb
flds
aam
iret
xor
adc
cmpsb
shrl
and
fcoms
cmp
movsb
dec
pop
pop
mov
fists
dec
mov
adc
push
xchg
jg
lcall
cld
cmpsb
mov
rol
in
dec
mov
xchg
lock
scas
sub
inc
dec
loopne
in
cmp
or
repz
sbb
icebp
inc
push
push
sub
into
subb
lock
and
sbb
push
mov
xor
add
insb
and
cmp
cmp
push
pop
ljmp
or
cltd
xchg
nop
insb
lods
xlat
add
sbb
mov
sub
cmpsb
cmp
inc
xlat
pop
leave
mov
insl
and
sbb
xchg
push
jge
pop
xchg
mov
sbb
das
loopne
mov
iret
sub
cmp
call
pop
mov
dec
int
lds
ror
aad
flds
repnz
out
or
mov
sub
into
out
and
mov
cmp
cli
mov
adc
or
or
loope
pop
insl
hlt
fsub
add
and
add
jle
mov
or
fwait
dec
je
mov
cmpsb
adc
cmp
mov
add
cmc
push
nop
mov
jne
jns
lods
pusha
and
add
pop
bound
stos
ds
add
popf
or
popa
sarb
xchg
pop
out
push
jmp
sbb
int
fsubr
xor
ret
mov
dec
nop
lret
push
or
mov
sbb
imul
push
mov
add
fidivl
xchg
mov
push
seto
and
add
xchg
gs
lea
pop
iret
inc
shlb
shlb
in
scas
add
in
ss
cltd
push
aam
pop
or
dec
addr16
dec
add
out
jb
movsb
and
or
xchg
mov
dec
add
shr
rolb
sbb
fiadds
dec
pusha
mov
pusha
cli
inc
clc
adc
jp
push
mov
orl
adc
and
mov
add
filds
hlt
pop
out
mov
lea
dec
lcall
mov
ss
int3
repz
in
cmp
jbe
pop
add
imul
pop
jnp
out
mov
and
test
ja
ret
dec
adc
xchg
clc
add
sbb
clc
loopne
xor
inc
add
xchg
pusha
mov
out
and
adc
xchg
adc
and
aas
or
lcall
imul
sbb
push
push
inc
dec
adc
mov
mov
mov
bswap
xor
mov
rorb
mov
inc
cmpsl
sbb
adc
xchg
sbb
mov
push
movsb
inc
cmp
push
add
or
mov
loop
sahf
sub
ret
inc
es
push
into
add
imul
jno
and
out
adc
cltd
push
and
aam
lea
pushf
xchg
cwtl
test
testb
orl
or
enter
sbb
push
hlt
sbbb
into
test
arpl
lcall
add
xor
ds
je
sbb
inc
xor
int
test
cmp
xor
sahf
or
sbb
adc
xchg
inc
push
pop
in
push
xchg
les
push
jmp
adc
add
in
jns
lcall
mov
sti
push
test
lock
stos
insl
aas
dec
lods
pop
loop
xor
add
ret
hlt
xchg
je
jnp
cmpl
push
xchg
xor
mov
sub
arpl
dec
or
mov
popa
mov
sub
sub
lahf
sub
or
aad
in
jge
movsl
fcompl
add
popa
cmp
repnz
cltd
sbb
out
hlt
adc
fsubl
test
inc
mov
sbb
lods
or
aaa
sub
adc
fbld
inc
xchg
push
pop
cmc
in
and
scas
aaa
nop
outsl
pop
repz
mov
pop
rclb
pop
data16
movsb
xor
xor
lret
jo
dec
repnz
rcrb
cmpsb
adc
add
push
cmc
mov
in
bound
mov
int
andb
mov
arpl
inc
cwtl
xchg
clc
add
and
add
popf
push
mov
iret
aaa
divl
sti
in
xor
pusha
adc
inc
push
inc
movsl
gs
xchg
adc
mov
cwtl
imulb
fdiv
bswap
xchg
mov
daa
sbb
mov
xlat
fiadds
fistps
fwait
ds
loope
dec
adc
andb
fbld
dec
sbbb
scas
fadd
and
sub
push
add
test
push
pop
add
pop
cmp
dec
sbb
jl
stc
pop
add
popa
push
jne
jle
inc
add
adc
bound
pop
mov
and
cmpsb
adc
insl
and
stc
popf
data16
add
in
lret
sti
out
repz
add
repz
cmpb
repz
lret
push
sub
inc
adc
loopne
fcompl
jmp
adc
jo
push
xchg
pop
test
addb
inc
mov
cs
sbb
fisubl
jbe
add
jbe
call
insl
and
mov
pop
dec
jecxz
add
add
push
mov
pop
stos
add
loop
add
cmp
dec
mov
and
or
pop
add
std
lods
mov
dec
adc
add
xor
js
xchg
je
sub
adc
mov
cwtl
inc
rol
enter
lock
adc
xor
rcll
cmp
cmp
in
cmp
popf
add
std
sub
pop
ljmp
ss
adc
lea
test
jmp
cmp
pop
add
cmp
lahf
fs
jo
add
inc
or
mov
push
mov
enter
or
mov
dec
push
aas
jle
lock
iret
test
sbbl
jge
pop
push
cltd
cmp
sub
test
sbb
lcall
and
loopne
rcrl
mov
jns
and
cmpsb
add
mov
test
inc
rolb
stos
shrb
lea
adc
add
int3
mov
cmp
jo
bnd
aas
jae
mov
int
mov
ror
lods
xchg
xchg
hlt
ss
dec
add
aam
mov
sbb
movsl
fcomps
mov
fnstenv
out
add
pop
test
rorb
fstpl
dec
mov
mov
adc
add
aad
imul
jmp
out
insl
sub
popf
inc
sbb
pop
inc
mov
or
sub
add
orb
mov
test
fadds
push
or
xor
mov
out
inc
xor
test
push
out
mov
movsl
mov
stos
xor
inc
xchg
mov
movsl
mov
enter
mov
dec
sub
push
scas
add
fimull
out
int
jl
shlb
lret
sub
fsts
xor
sbb
pop
inc
insl
adc
test
add
dec
fstps
adc
mov
xor
and
mov
jp
or
in
test
inc
mov
add
inc
jle
scas
adc
push
adc
mov
fildll
xchg
or
add
add
ror
jecxz
fldt
hlt
pop
sub
jns
adc
repz
dec
pop
mov
xlat
xchg
sbb
jns
jne
faddl
data16
add
lret
cwtl
pop
cmp
add
sbb
push
mov
jge
add
arpl
lahf
mov
mov
imul
roll
xchg
lahf
adc
adc
mov
inc
or
dec
mov
lcall
lock
leave
mov
inc
adc
loopne
je
xchg
jns
enter
out
shll
push
push
popa
nop
cltd
js
inc
add
xor
dec
popl
dec
decb
jp
popf
sahf
xorb
in
cmc
lret
das
stos
test
cmp
sub
loop
xor
cwtl
dec
or
cmp
mov
test
insl
jae
mov
sub
mov
and
in
or
loop
mov
and
test
fldcw
xchg
mov
ja
or
adc
fimuls
cltd
inc
rorl
and
in
addl
cmp
mov
mov
adc
mov
in
int3
sbbb
or
testb
push
les
shrb
xchg
sub
inc
or
insb
gs
and
hlt
sahf
aaa
pop
and
nop
fs
fldenv
sbb
nop
lret
or
out
and
adc
add
sti
clc
xor
add
je
inc
lahf
push
sahf
mov
mov
imulb
test
add
cmp
aas
push
or
add
mov
add
std
add
or
mov
or
pop
out
dec
aas
sti
mov
xor
jl
jecxz
jo
adc
js
xchg
cli
lock
and
or
adc
xor
ficompl
bound
add
xchg
out
sahf
or
add
les
and
fwait
xor
cmpsl
xchg
dec
adc
lcall
and
cltd
push
dec
cmp
addr16
mov
test
sub
pop
aad
decb
push
clc
shrb
mov
imul
mov
cmc
lea
sub
int3
mov
fistps
lahf
adc
out
sti
mov
or
cmp
mov
dec
out
enter
cmpsb
jns
popa
pop
mov
nop
add
cmp
adc
js
mov
rcrl
sub
and
jo
adc
mov
fstpt
cwtl
and
pop
lods
adc
adc
or
sbb
sub
push
hlt
inc
push
outsl
into
add
sub
jae
aaa
inc
dec
adc
out
enter
inc
imul
mov
mov
adc
into
cli
lahf
push
xor
dec
fs
sbb
inc
insb
shlb
sbbb
sub
add
ljmp
xchg
push
fistpll
and
and
xor
fs
mov
cmpb
add
sbb
add
out
adc
pusha
divb
into
enter
les
je
or
mov
lock
les
fidivl
add
cmp
cmp
ret
mov
jl
inc
mov
push
out
add
call
test
add
dec
insb
loopne
lock
dec
loopne
or
out
pop
push
test
inc
jbe
xchg
out
jmp
aad
inc
push
inc
out
les
xchg
fs
int3
pop
arpl
mov
adc
sub
outsb
mov
dec
add
or
add
and
dec
fs
xor
data16
leave
pushf
aam
movb
sbb
lock
shr
or
fwait
add
mov
cmovbe
push
add
push
mov
clc
insb
lock
js
sbb
fnsave
or
cli
xchg
mov
in
lea
mov
mov
sti
adc
mov
lcall
and
filds
lahf
pop
ja
inc
add
lcall
mov
dec
pop
mov
jmp
lret
add
aas
rorl
fwait
jmp
rcrb
sti
xchg
or
pusha
mov
movsl
les
xor
sbb
daa
xchg
hlt
pop
sbb
je
pusha
pop
mov
add
repz
jecxz
call
stc
mov
inc
ret
fwait
hlt
adc
sbb
mov
push
jmp
pop
lods
sbb
je
shll
sbb
addb
leave
mov
inc
ljmp
scas
inc
pop
aaa
pop
xchg
xchg
add
push
jne
shlb
pop
mov
mov
mov
aam
cmpb
mov
inc
adc
add
loop
mov
ljmp
mov
jge
dec
cmp
sysret
daa
mov
sub
add
pop
cli
pop
and
int
sarb
mov
cmp
add
push
pop
addr16
inc
in
mov
or
jno
std
imul
add
xor
or
mov
xor
inc
sbb
dec
pop
adc
cmp
pop
add
in
aaa
mov
addb
addr16
cmp
xor
movsb
and
ss
jbe
rorl
push
mov
in
repnz
pop
and
add
outsl
lahf
cwtl
scas
jno
pop
mov
sbb
out
and
ret
rcl
sti
push
aaa
xlat
sbb
ljmp
jns
add
xchg
cmp
subb
cmp
sub
xor
sbb
roll
fstpl
mov
dec
les
faddl
push
jnp
mov
ror
cmp
jle
sarl
xchg
xor
ljmp
call
insl
jnp
aam
sbb
daa
add
xchg
mov
cmp
ret
pusha
inc
sub
rolb
xchg
adc
popa
hlt
jmp
pop
mov
ja
in
dec
repnz
adc
call
test
xor
sahf
mov
pop
in
mov
add
scas
es
adc
jb
aas
ss
mov
push
add
xchg
lcall
jg
xor
and
push
shll
aam
adc
xor
sub
mov
dec
jle
nop
sbb
sahf
adcb
pusha
xor
je
add
cld
push
cmpsl
push
int
inc
fcoml
and
rcl
stos
mov
add
jge
xchg
in
and
jno
sbb
pop
jl
dec
and
in
add
outsb
lods
dec
je
add
icebp
sti
sbb
std
sbb
repz
mov
add
jg
lret
mov
inc
add
in
rclb
pop
or
jbe
test
rcrb
or
pop
out
inc
mov
cmp
sbb
jo
xchg
push
loopne
or
xor
pop
sbb
clc
inc
inc
cs
js
add
inc
and
cmp
jb
mov
subb
mov
pop
cwtl
adc
insb
cmp
add
mov
fwait
xchg
dec
scas
int3
enter
add
sbb
xchg
leave
cltd
mov
icebp
push
rolb
pop
shrl
pop
out
or
ss
xor
jbe
mov
nop
xor
leave
and
and
pusha
mov
sub
adc
add
push
aam
loopne
fs
fadds
push
cli
push
ret
cmp
push
clc
adc
popf
cwtl
xchg
insl
neg
push
xchg
fwait
or
imul
icebp
pop
adc
rcl
rcll
mov
jo
lods
push
gs
push
pushf
mov
cmp
mov
mov
insl
mov
xchg
call
jb
push
and
test
je
stos
xchg
repnz
add
sahf
jbe
sbb
jle
and
daa
push
scas
call
ss
lods
sbb
into
inc
cmc
pop
and
lock
bound
fidivl
cmp
or
add
dec
inc
and
xchg
mov
cmp
cmp
jecxz
sub
lret
jp
or
cwtl
push
pop
fnstcw
std
scas
cmp
xchg
cmpsb
out
addb
daa
cmp
mov
mov
sbb
mov
sbbb
nop
add
dec
clc
out
sbb
roll
push
cmp
cs
ss
movntq
mov
inc
insl
adcl
pop
test
inc
mov
xchg
inc
test
pop
imul
test
outsl
dec
add
push
scas
cmp
fsubl
test
popf
pushf
dec
pop
leave
int3
mov
jmp
lods
xchg
ds
jl
or
sbb
inc
add
mov
std
mov
cmp
and
lret
sbb
mov
or
add
scas
shrb
sub
roll
test
cmp
add
vunpckhps
scas
outsl
pop
lret
cmp
xchg
xchg
fcmovnb
push
jg,pt
xchg
or
and
fldt
in
mov
enter
dec
loope
mov
rclb
int
adc
sbbb
icebp
xor
pop
in
aad
xor
or
mov
and
andl
sbb
jns
mov
adc
aad
add
mov
and
mov
or
cmp
shrb
stos
add
stos
add
and
mov
mov
pushf
cmp
and
add
sub
jle
mov
jns
sub
mov
lret
cmpsb
adcl
shll
das
jg
cmp
pop
loopne
jle
xchg
in
sbb
sub
pop
lea
in
xchg
sarb
or
and
jae
add
sub
or
in
mov
inc
sub
cwtl
insb
flds
out
pop
mov
mov
testl
imul
loopne
dec
loop
mov
mov
je
test
or
inc
push
scas
mov
movsb
jge
add
cmp
jns
mov
test
int
out
imul
and
into
push
inc
movsb
dec
sti
cmp
out
cwtl
add
icebp
xor
mov
mov
movsb
fiaddl
jp
test
or
test
push
adc
push
mov
and
out
dec
jge
lock
sbb
adc
sub
bound
add
mov
in
ss
clc
out
mov
in
mov
jo
aam
jno
pop
test
sub
jg
xchg
dec
inc
mov
aad
inc
pusha
lds
sub
adc
push
jmp
mov
or
mov
jmp
lea
in
xchg
add
fcom
inc
cmp
mov
cmp
cmp
push
mov
dec
cmp
int3
fldt
cmp
es
test
sbb
xor
inc
enter
xor
adc
push
enter
shlb
push
jae
cmp
xchg
ss
cli
push
notb
mov
jnp
sti
adc
add
sbb
outsb
enter
push
or
xchg
cmc
push
adcb
sbb
ljmp
add
jge
test
int3
sub
add
ja
mov
popa
sahf
fisttps
add
pop
cmp
jb
add
dec
sbb
add
pop
xchg
cmpsb
jne
xor
xchg
and
loop
sbb
sub
xor
cld
add
jmp
pop
rcrb
lahf
inc
rol
inc
test
push
push
lcall
adc
adc
sub
mov
out
jge
or
inc
mov
or
pmuludq
lea
add
in
sbb
and
aam
mov
pop
addl
cmp
add
out
movsb
cli
js
and
icebp
add
sti
lock
fistps
push
sar
inc
ja
leave
xor
cmp
pop
jbe
pop
push
and
jo
xchg
push
push
add
mov
or
mov
xchg
pop
fdivs
cmpsb
mov
icebp
push
mov
add
test
mov
stos
pop
add
ss
jae
dec
enter
xlat
adc
jge
test
add
pop
push
lods
lds
xor
jle
pop
fsubrp
add
pop
cli
fwait
aas
imul
test
loop
add
cmp
add
cmp
fildll
stos
jnp
nop
int3
faddl
pop
roll
sti
mov
dec
or
cmp
sbb
xchg
int
mov
out
popl
fldl
pushf
test
ss
xchg
mov
cs
loop
je
fst
mov
add
bound
insb
cmp
mov
rcll
daa
push
xchg
add
xchg
mov
cld
js
cmpsb
mov
shrb
xchg
lock
push
inc
scas
add
jg
mov
scas
xchg
add
and
loopne
pop
popa
pop
sbb
enter
pop
or
sahf
mov
and
outsl
push
scas
push
ljmp
int3
loopne
inc
add
dec
popa
sbb
lock
sub
sub
fcomps
sbb
push
scas
push
mov
add
xorl
addl
push
dec
fdivrs
pusha
pop
jb
invd
pop
push
sub
jmp
add
add
in
mov
jp
xchg
pop
std
add
fiadds
add
es
adc
mov
in
xor
ficoml
es
aaa
aam
xchg
pop
cli
cltd
jbe
cmp
pop
inc
aam
cwtl
push
xor
fwait
add
dec
push
aaa
add
mov
pop
inc
mov
fs
jns
mov
leave
add
and
fildl
cs
xchg
push
daa
cmpsb
sbbb
add
sub
jno
add
dec
ret
dec
pop
hlt
add
jle
push
sarl
mov
cli
or
mov
sbb
adc
lret
mov
call
jle
outsb
out
lahf
or
test
roll
push
mov
add
stc
sub
sbb
cmpb
add
xor
sbb
aas
mov
mov
add
lret
add
mov
and
mov
setae
jmp
in
inc
add
or
add
jge
add
push
jmp
push
add
add
xlat
sar
pop
lock
jae
sub
daa
mov
inc
lods
adcb
and
lret
dec
add
stos
mov
fdivs
mov
cmp
ds
mov
and
pop
inc
repnz
jns
sahf
mov
jb
sub
xchg
mov
push
mov
jge
lods
mov
popf
add
dec
mov
or
jns
stos
addr16
pop
add
les
ss
adcb
jne
or
imul
jp
mov
xchg
inc
out
data16
testl
rorb
test
mov
jo
lsl
adc
lcall
ret
call
lock
ds
fdivl
fadd
xchg
sahf
xchg
cmp
jbe
xchg
push
push
les
adc
pusha
pop
ret
and
sub
negb
add
insb
in
dec
fsubs
and
and
fisubrl
sbb
roll
xor
xchg
cmp
leave
loop
push
inc
ret
pop
in
pop
enter
push
lret
je
test
add
aas
cmp
decb
or
stos
test
pop
push
add
data16
mov
pushf
movsb
es
xchg
add
gs
inc
popa
lock
out
int
push
sbb
in
add
movsl
cmpsb
arpl
dec
aas
push
test
xor
cwtl
add
pop
out
mov
imul
ja
ror
sbb
gs
call
mov
push
dec
fistpl
and
adc
std
and
jae
sub
or
out
xchg
movsb
jp
jnp
add
jmp
dec
rolb
push
adc
and
shlb
and
faddl
arpl
xchg
popf
pop
hlt
cmp
dec
aam
call
movsb
mov
test
out
icebp
out
rorl
es
orb
jg
insl
jae
fldenv
fldl
stos
rcl
xor
les
leave
out
cwtl
cmpsb
mov
add
clc
add
mov
imul
stc
push
add
fiaddl
clc
je
or
push
cwtl
negb
jae
push
movsl
push
jns
inc
cmp
adc
shr
or
roll
insb
xchg
jle
mov
loop
mov
push
and
shlb
mov
add
sahf
adc
sti
sbbb
mov
add
add
xor
inc
add
or
xchg
push
dec
mov
loop
je
idivb
add
out
or
xchg
xchg
or
fs
imul
and
mov
add
outsl
push
test
inc
xor
add
mov
push
fisttpll
adc
jge
sub
ficompl
ljmp
add
repnz
fwait
push
mov
scas
jno
dec
ds
add
add
lock
mov
add
sbb
pop
cmp
add
xor
je
xchg
incl
cld
xchg
cltd
pop
push
inc
add
sbb
push
dec
es
pushf
bound
fmul
inc
pop
hlt
shlb
adc
test
pshufw
xchg
subb
add
mov
push
jp
or
push
ror
or
int
movsb
push
push
in
adc
notrack
popf
jno
idiv
push
aas
cmpb
xlat
jg
sbb
test
popl
addl
mov
sarb
shll
leave
push
and
mov
arpl
loope
mov
cmp
jg
fistpl
mov
jbe
jge
inc
enter
jecxz
xchg
lods
add
push
loopne
xor
or
mov
mov
xor
in
loop
inc
ret
sti
add
mov
call
sbb
loopne
lods
sahf
jg
xor
xor
lret
sub
clc
adc
xchg
cmpsb
andb
mov
jl
add
pop
xor
pushf
push
jne
push
lahf
xchg
sbbb
ja
push
mov
add
xchg
les
mov
xor
add
std
mov
popa
popa
out
jb
ja
pop
xchg
cmp
andl
hlt
mov
xor
scas
xchg
and
cltd
testb
add
mov
rclb
jg
xchg
cmp
cmp
mov
in
mov
cmp
mov
add
or
xor
pop
outsl
lock
es
popf
add
adc
mov
in
jmp
jb
jo
add
jmp
xor
ss
push
ljmp
inc
mov
add
in
sub
loopne
or
pop
inc
aas
adc
call
mov
mov
inc
or
xchg
jns
fwait
xor
or
push
jmp
loopne
stc
push
pop
stos
xor
sub
xchg
mov
imul
lock
pop
mov
out
mov
in
lret
int
cs
add
faddl
sbb
mul
cld
add
mov
xor
add
sub
mov
and
add
push
cmpsb
jo
repz
xor
arpl
roll
fcomps
push
mov
fildl
xorb
dec
sub
inc
add
mov
test
lock
xor
xchg
mov
xchg
or
fstpt
mov
aaa
dec
sbb
push
adc
mov
sti
addb
insb
inc
jmp
add
jno
mov
mov
incb
or
test
sbb
xor
std
cmp
in
inc
mov
dec
iret
loope
outsb
push
cmp
dec
call
call
fisubrs
sub
loopne
add
ds
mov
jo
mov
push
rcr
add
inc
jl
and
test
pop
dec
add
pop
mov
inc
or
mov
mov
xor
ret
add
fdivp
popa
dec
mov
andl
push
inc
leave
add
loop
ljmp
or
add
pop
cmp
out
imul
push
movsl
push
nop
pusha
add
bswap
jle
cmp
adc
mov
mov
cmc
nop
mov
daa
addr16
ret
add
push
sub
cmp
rorl
fwait
notl
add
cmpsl
in
sub
aas
movsb
fwait
add
mov
testb
jno
call
dec
mov
movsl
cmp
xor
add
adc
xor
jecxz
add
gs
add
pop
mov
push
jo
daa
lcall
pop
add
jno
and
mov
jnp
in
repnz
cmp
clc
jge
inc
cmpsl
movsb
ss
add
sub
dec
dec
pop
xor
stos
sub
popa
repnz
and
faddl
lret
dec
cmpsl
inc
jp
add
leave
je
movsb
inc
ljmp
cmp
lcall
scas
add
setae
add
jns
loopne
xchg
inc
add
adc
mov
addr16
mov
dec
insl
imul
and
jg
jno
outsl
test
jne
cwtl
push
add
ret
div
dec
xor
fiadds
sbb
and
mov
cmp
ljmp
cli
cmpsl
clc
adc
lods
add
jecxz
xchg
jno
or
or
xor
adc
add
cmp
lock
leave
call
orl
insl
andb
std
loopne
add
sti
divl
xchg
lahf
adc
xchg
or
or
adc
imul
fdivs
jle
in
jbe
nop
cmp
cmpsb
sarb
sub
mov
jo
jns
xchg
popf
test
jle
inc
cwtl
and
xchg
pop
cmp
jmp
jbe
dec
add
out
adc
inc
push
push
dec
mov
shlb
sub
mov
js
inc
andb
scas
push
xchg
mov
add
mulb
add
xchg
dec
adc
outsb
test
mov
jb
xor
add
popa
lock
fwait
adc
add
sub
mov
jl
cmp
add
mov
int
xor
clc
addl
shrl
jmp
loop
loop
add
cltd
push
cmp
int3
in
js
add
bound
ja
add
inc
mov
push
mov
test
add
das
loopne
mov
or
gs
fsubl
add
sbb
rcrb
xchg
push
jle
push
cmp
js
add
sub
rclb
or
mov
movl
fs
loop
add
aaa
lds
xchg
push
aam
push
pop
add
clc
scas
loope
sbb
loop
das
std
in
sbb
sub
sbb
mov
jo
push
xor
pminub
subb
push
push
add
jne
lcall
test
fdivl
pushf
push
clc
pop
sbb
repnz
mov
dec
sbb
insl
and
pop
lock
mov
add
or
fwait
add
sarb
mov
push
sbb
jecxz
dec
or
add
adc
out
fs
mov
ret
dec
jmp
insb
push
or
pop
inc
adc
xor
or
or
fwait
cmp
fldenv
stos
add
ja
ficoml
sbb
jbe
xchg
dec
addb
xchg
or
sbb
jne
test
mov
cmp
mov
mov
add
bound
mov
add
push
outsl
xor
incl
jmp
adc
push
inc
jne
mov
push
fs
je
and
in
call
leave
mov
mov
std
add
dec
fcoml
dec
fcomps
fucom
cmpsb
push
shr
or
pushf
sub
and
sub
jne
aaa
add
fwait
xchg
add
adc
nop
cwtl
inc
int
add
ffree
add
sub
sahf
cmp
packuswb
pop
xor
add
mov
mov
jecxz
mov
lcall
and
addb
nop
sbb
mov
add
xor
mov
popf
les
clc
mov
pop
add
andb
ret
sub
add
fildl
imul
scas
pop
mov
enter
push
adc
mov
mov
mov
imul
dec
loopne
cmp
add
fstpt
add
out
jge
jno
push
add
xchg
dec
or
or
aas
cmovo
jle
cld
insl
xchg
sbb
call
mov
inc
cmc
movsl
xor
add
fildl
ret
push
add
cmp
ja
add
lods
out
mov
fs
fsubrl
lret
ror
jno
xor
popa
dec
cwtl
and
faddl
inc
in
push
fldt
ljmp
jb
into
pop
add
mov
repnz
fdiv
in
in
mulb
xor
inc
arpl
mov
hlt
out
orb
dec
xor
push
pop
push
xor
cltd
add
dec
jge
out
repz
mov
add
test
and
xchg
xor
adc
in
das
add
sub
adc
mov
add
or
outsb
add
push
mov
inc
stc
in
add
sbb
push
es
test
rorl
cld
mov
pop
and
xorb
dec
out
xlat
add
mov
mov
add
dec
inc
mov
inc
dec
pop
add
jbe
aaa
das
dec
pop
sbb
rolb
xor
icebp
xchg
mov
pop
lret
in
fidivl
pop
mov
test
nop
test
mov
pop
fstpt
popf
ds
pop
aam
adc
testb
mov
jo
movsb
rcr
leave
mov
add
cwtl
mov
jbe
add
pop
adc
jb
clc
pop
mov
add
js
mov
rcll
xor
cmp
cmpsb
imul
push
rclb
rcrl
add
mov
mov
xchg
cld
lahf
and
mov
adc
ret
test
xrstor
jmp
jno
imul
cmp
dec
mov
out
lods
lcall
add
pop
fst
test
out
inc
sub
add
lods
das
or
fisubs
stc
fstpt
add
fnsave
rcrb
std
mov
fidivrs
ret
pop
int
jmp
mov
xor
sbb
add
mov
pop
mov
xchg
push
movsb
ud0
mov
fists
cmp
or
add
add
or
dec
cmp
pop
mov
pop
xorl
iret
pop
xchg
imul
add
lahf
cli
in
add
adc
jb
ljmp
add
xchg
dec
push
add
jae
dec
mov
jge
jp
sbb
lock
je
sbb
aas
mov
mov
and
mov
push
lcall
divb
add
setg
cmpsl
jge
add
test
mov
add
mov
mov
andb
push
pop
les
add
add
jno
sbb
inc
mov
fiadds
push
xlat
inc
bound
add
out
enter
rorb
imul
in
mov
or
clc
aas
dec
adcb
jbe
rclb
mov
pop
mov
add
pop
push
xchg
cmp
add
jne
push
xchg
or
loopne
xchg
sbb
xchg
xchg
add
fs
cmp
ret
mov
sbb
adc
movsb
cmp
mov
call
jecxz
xchg
or
shl
pop
add
jg
cmp
outsl
fcomps
cld
adc
inc
test
and
xchg
sub
stc
push
add
dec
add
loop
cmpsb
pop
add
inc
or
repz
cwtl
push
subl
insb
out
dec
rol
or
rcll
add
xor
bound
pop
add
pushf
movsl
pop
orb
adc
arpl
push
dec
stos
scas
loopne
xor
imul
les
add
push
mov
test
sarl
dec
pop
jno
mov
repz
enter
outsb
test
push
jecxz
add
orb
jns
aas
pop
lock
cmp
add
mov
icebp
jge
stc
add
in
ret
dec
add
int
jmp
call
adcb
jbe
sub
adc
dec
add
scas
dec
xor
add
cltd
test
add
cmp
jmp
rolb
inc
std
outsb
pop
push
out
sbb
add
inc
gs
out
dec
add
mov
pop
xchg
pop
aam
fists
xorl
enter
add
mov
in
into
inc
add
sub
sbb
mov
pop
andb
out
es
add
andl
jmp
or
pop
add
mov
int
and
mov
add
fldenv
ljmp
mov
add
stc
or
xchg
gs
stos
lcall
add
test
mulb
hlt
fiaddl
mov
loopne
outsb
xor
punpcklwd
out
inc
and
cltd
sbb
mov
popf
shll
stos
pop
add
outsb
out
hlt
push
mov
into
mov
xor
inc
adc
mov
sbb
lcall
sub
push
push
sub
add
mov
adc
xlat
dec
add
std
pop
fadds
scas
jo
test
loopne
in
add
pop
mov
shrb
push
lret
das
stos
cwtl
add
insb
and
push
xor
add
and
adc
and
inc
clc
rolb
inc
adc
bound
add
mov
xchg
jnp
rorb
loopne
dec
pop
lods
ja
out
lds
lret
sbb
xor
mov
push
or
add
jbe
fisttpll
mov
pop
mov
add
inc
xchg
rclb
nop
in
mov
cmp
mov
int3
jmp
adc
popf
xor
cmp
fs
test
pop
cli
cmp
ffreep
jmp
inc
dec
out
jp
inc
mov
push
call
add
mov
in
push
addr16
push
in
jne
lcall
jge
je
pop
out
std
test
jg
call
cmp
lods
cwtl
inc
sbb
mov
pusha
outsb
int
clc
pop
inc
add
xchg
lret
jns
rcrb
ficoms
jmp
idivb
and
xor
jge
cmp
sbb
and
sahf
cmpsl
cmc
sub
add
cli
out
push
clc
adc
push
jae
mov
nop
test
aaa
inc
dec
pushf
xor
add
xchg
lods
add
fmuls
andl
cmp
inc
and
dec
add
pop
mov
jae
add
mov
sub
adc
pop
repnz
inc
icebp
cmp
pop
popf
adc
xor
in
aas
jg
add
ds
iret
pop
dec
lds
mov
sahf
subb
daa
push
out
mov
add
and
and
pop
jg
add
jp
iret
lea
dec
add
popf
mov
pop
sti
hlt
out
fidivl
xchg
adc
ljmp
push
mov
bnd
mov
cmp
cmpsb
add
cmp
movsl
fisubrl
mov
inc
pop
shlb
in
pusha
scas
test
adc
jge
xor
mov
lods
inc
jae
adcb
add
lods
shll
insb
jmp
int
test
cmp
icebp
notl
in
and
sub
and
popa
sti
inc
add
push
xor
add
pusha
repnz
mov
loopne
add
imul
gs
mov
sbb
add
pusha
push
mov
aad
pop
fsubp
loopne
xchg
mov
jge
je
mov
adc
dec
andl
fcmovbe
mov
cmp
push
xor
pop
lds
outsb
mov
ud2
sub
aad
or
cltd
cmpsl
inc
lcall
fsubrl
dec
notb
outsb
out
out
adc
test
and
push
mov
and
jle
dec
bound
xchg
mov
nop
imul
pushl
roll
and
shlb
push
lret
add
mov
stos
pop
mov
jge
mov
fcmovnb
cmp
pushf
aaa
jo
pop
int
adc
add
and
pop
cmp
sti
dec
pop
dec
xor
add
xchg
mov
add
push
leave
sbbb
out
fistps
in
sarl
mov
imul
xor
dec
mov
repz
xor
sbb
aam
jle
sbb
add
add
xor
sbb
push
adc
clc
loope
add
jg
lods
and
fwait
adc
popa
push
lret
push
add
mov
fidivs
hlt
pop
add
das
mov
add
mov
cmpsl
ss
add
mov
fstl
enter
cmp
or
jo
pusha
mov
jp
xchg
fdivl
jg
mov
add
repnz
inc
ljmp
xor
repnz
sub
movsb
sub
sti
push
addb
mov
cmp
sbb
or
lret
sub
mov
scas
dec
dec
incl
cmp
call
inc
push
lods
enter
cmp
lock
mov
sbb
out
std
lods
xchg
push
xor
adc
add
or
sbb
push
out
add
and
jp
iret
mov
adc
push
mov
enter
insb
jae
ret
ds
loop
out
sbbb
stc
iret
pop
add
add
flds
adc
jb
out
test
sub
andb
fsubrs
cmp
fldl
test
lahf
daa
subl
mov
idiv
xor
daa
out
add
adc
push
dec
out
add
ljmp
pop
adc
shll
repz
clc
adc
xchg
das
dec
push
or
cmp
pop
fadds
mov
test
in
pop
add
out
loopne
cmpb
pop
dec
outsl
in
push
addr16
stc
es
bound
stc
push
sbb
enter
ljmp
and
mov
mov
xchg
fnstcw
and
add
inc
mov
add
push
mov
xor
sbb
adcb
roll
ffree
cmp
sti
pop
xchg
adc
aas
outsb
xchg
jg
pop
jmp
jne
cmp
pusha
push
sbb
sbb
cmpsl
lahf
aaa
add
or
sti
daa
jbe
sbb
outsb
nop
clc
in
sub
xchg
push
fnstenv
cmpb
loopne
push
and
dec
and
or
jle
mov
insb
orl
in
sbb
xchg
inc
lods
ja
push
cmp
add
rclb
add
repz
xlat
scas
shrb
leave
pushf
xor
test
push
xchg
or
in
test
rolb
push
mov
mov
and
push
xor
out
mov
add
adc
add
lahf
pusha
cli
scas
fisttps
cmpb
mov
dec
add
jmp
mov
jo
xchg
mov
sub
loop
dec
inc
cmp
jno
std
insb
je
in
subl
mov
jp
cmp
mov
in
fwait
xor
mov
inc
jmp
out
pop
push
add
mov
ficoml
jp
cmp
mov
add
insb
jb
lahf
add
xchg
jge
jns
mov
mov
push
outsl
add
dec
adc
cmp
and
cmpsl
xchg
popf
nopl
daa
mov
pop
push
sub
cmp
mov
inc
dec
mov
insb
push
or
inc
mov
scas
jo
add
lock
adc
add
sub
inc
jl
add
fs
outsb
push
mov
jnp
add
dec
stos
xchg
mov
dec
xorb
sub
sbb
out
mov
adc
add
mov
inc
add
movsl
lods
inc
clc
cmp
add
pusha
test
adc
sbb
mov
inc
sbb
testl
cmp
clc
push
add
inc
into
push
jb
mov
ds
lahf
inc
or
fldl
shl
xchg
inc
popa
repnz
pusha
xor
xchg
scas
cmp
sub
gs
sbb
addr16
mov
in
jecxz
jb
add
das
hlt
push
xor
jmp
adc
es
sbbl
shr
jl
lss
movsl
fwait
jle
repnz
or
mov
repz
adc
scas
into
jnp
add
mov
iret
sub
mov
push
jle
inc
add
int3
cmp
mov
nop
mul
aam
jl
pop
mov
ret
mov
pop
pop
sahf
lods
rclb
clc
test
add
inc
pop
les
add
inc
and
stc
add
fldt
or
pop
jo
daa
rorl
push
sub
mov
xchg
test
arpl
add
in
insb
fcoml
cmp
scas
mov
and
loop
jg
sub
and
mov
push
dec
out
cli
and
inc
cs
adc
xchg
jg
pushl
jl
mov
xor
adc
cmp
adc
pop
mov
and
icebp
push
add
adc
cmp
cli
ljmp
lock
rcrb
int3
flds
cmp
mov
lods
and
push
es
xchg
push
pop
les
mov
in
aaa
push
pusha
xor
mov
cmpsb
sub
push
add
dec
push
dec
mov
xchg
faddl
bound
inc
sbb
pop
jg
push
add
lcall
je
add
xchg
adc
fsub
hlt
mov
fsts
in
aas
popa
jecxz
push
sbb
inc
mov
hlt
xor
out
mov
jno
or
mov
add
rorl
leave
les
in
jmp
add
loopne
cld
fnsave
faddl
mov
scas
sbb
cli
push
add
imul
pop
movsb
gs
cs
xlat
mov
pop
push
cmp
test
in
pusha
cwtl
mov
or
dec
xor
test
add
clc
jnp
add
inc
mov
test
xchg
push
in
push
cmp
lret
xor
xchg
xorb
jecxz
mov
arpl
mov
pop
add
aad
add
sub
movsb
add
rolb
outsb
insb
cwtl
sbb
rcrb
jg
add
sub
mov
pop
mov
test
add
xchg
xor
test
pop
cmp
loopne
dec
push
fadds
les
push
wrmsr
cmc
xchg
and
cmp
in
std
adc
cwtl
mov
add
cmpsl
lret
sub
xchg
lahf
fbld
cmc
cli
mov
inc
and
orb
sarl
adc
sub
or
add
inc
and
and
loope
add
sbb
dec
mov
add
jge
fsubs
dec
jp
xchg
in
lock
pop
imul
lds
adc
clc
daa
adc
jns
xchg
add
mov
insl
mov
jle
add
mov
sub
add
mov
cmp
js
mov
imul
ds
xor
jnp
adcl
xchg
xchg
xor
test
adc
cmp
push
add
pop
jbe
sbb
leave
or
cld
fbstp
test
fadds
xor
jl
arpl
and
mov
lock
sbb
jmp
pushf
pop
adc
add
push
and
mov
shlb
sbb
pop
pop
adc
add
sbb
in
and
adc
pop
mov
and
add
cli
icebp
mov
add
or
sbb
mov
push
sbb
add
lret
add
and
orl
sbb
jo
imul
xor
int3
inc
cmp
or
jne
pop
lahf
inc
sbb
adc
mov
fsubl
roll
cmp
mov
ret
add
popf
test
dec
leave
or
insl
loop
movsb
cwtl
cmp
ret
mov
xchg
sbbl
mov
xor
sbb
push
cmp
add
fdivr
mov
or
icebp
xchg
jl
inc
loope
enter
xor
hlt
mov
les
pop
cli
nop
cltd
add
cmp
add
cmpb
lock
sub
or
xor
stc
xor
mov
push
mov
cwtl
xchg
sbb
nop
divl
cmpsb
pop
movsb
cwtl
add
cmp
lock
push
add
jp
lcall
xchg
jns
mov
loopne
pusha
jbe
jb
loop
mov
jmp
into
out
test
cli
repnz
roll
hlt
popf
leave
sub
fnsave
add
sbb
shlb
shlb
mov
push
jmp
mov
add
enter
push
mov
sahf
pop
jnp
shlb
jae
outsb
push
add
stos
sbb
add
aas
cmp
fldl
adc
dec
push
xor
aam
dec
mov
call
xchg
cld
inc
pop
add
stc
ret
in
jge
xor
arpl
outsl
enter
adc
cmpsl
xor
jae
sbb
mov
adc
lock
imul
movb
in
push
or
pop
push
inc
mov
and
xorb
mov
lods
les
dec
mov
jmp
mov
pop
inc
mov
mov
adcb
dec
mov
jae
sub
inc
mov
dec
adc
ljmp
cltd
inc
sti
imul
mov
cmpsl
iret
nop
push
insl
push
add
fmul
outsl
lock
push
test
push
add
push
jae
fildl
add
iret
jecxz
bnd
add
push
es
test
add
in
hlt
enter
jo
push
jae
pop
mov
jns
daa
fmul
add
int3
sub
cmp
xlat
loopne
push
inc
push
ja
dec
clc
int
mov
imul
sbb
mov
push
shlb
mov
adc
aaa
sahf
ljmp
rorb
call
add
repz
jmp
jge
jbe
loopne
push
shr
in
flds
shrb
outsl
fs
xchg
sbb
mov
mov
rorb
cmp
mov
es
lret
inc
ficoml
xchg
or
adc
outsl
inc
or
icebp
mov
xorb
ret
dec
cltd
jbe
lods
data16
int3
roll
addl
adc
mov
scas
push
nop
in
add
or
es
test
jne
push
mov
lcall
jne
insb
mov
mov
pop
popa
ror
cmpsb
cmovb
jo
inc
pop
push
ret
mov
andb
sub
cmp
mov
data16
ds
pop
out
loopne
clc
mov
cmp
js
pop
movsl
sbb
sbb
shlb
pop
enter
rclb
sbb
mov
add
dec
std
push
imul
pop
push
and
shlb
je
addb
push
jno
inc
in
roll
lret
jg
add
dec
add
rcll
mov
outsl
lods
xchg
cltd
adc
add
xchg
les
xchg
ret
xor
adc
mov
sub
les
lods
mov
inc
sbb
and
and
adc
adc
mov
pop
mov
loope
dec
xchg
or
bound
popf
sbbl
push
push
adc
inc
mov
cmp
cld
int3
sub
jns
add
pop
pop
iret
mov
pop
add
add
neg
mov
pop
cmpsl
cmp
fwait
mov
push
outsl
fidivrl
syscall
adc
and
dec
cmp
jo
aaa
loopne
or
pusha
jae
add
stc
aas
fs
movl
jbe,pn
add
xchg
pop
mov
cmp
cmpb
add
lods
mov
wbinvd
and
shlb
insb
push
add
add
scas
in
cld
loopne
inc
movsl
mov
cmp
mov
add
sub
test
shlb
aas
jns
add
cltd
ror
sti
das
lcall
aam
orb
lock
mov
shll
mov
jnp
add
or
push
jmp
add
dec
cmp
test
mov
mov
or
add
push
loop
mov
ljmp
jne
sub
xchg
dec
in
test
rolb
pop
movl
jo
stc
mov
sub
ja
add
push
push
fildl
loop
add
jbe
js
add
mov
add
add
add
sub
sbb
mov
push
add
hlt
dec
sbb
cmp
add
inc
mov
out
sub
test
lahf
mov
mov
cmp
sbb
js
fadds
add
enter
lods
dec
pop
repz
pushf
add
lcall
scas
and
mov
xor
fistpl
jmp
pop
aas
sti
jae
xchg
lods
orb
pop
push
mov
mov
pop
clc
fisttps
add
mov
test
pushf
push
into
stos
xlat
inc
jecxz
in
cwtl
ds
cwtl
jae
add
xor
xchg
jo
add
pop
inc
nop
rorb
jns
add
inc
roll
sbb
call
aad
pop
jbe
add
roll
clc
mov
cmc
adc
dec
add
pop
arpl
jae
fdivrs
lock
mov
popa
test
or
pusha
cld
popl
sarb
mov
and
push
push
pop
xorb
nop
cmp
mov
cld
movsb
dec
mov
sbb
in
mov
add
sub
aaa
test
lods
sbb
ljmp
sbb
rcl
xor
int3
fstl
stc
push
and
mov
pop
stos
mov
or
insb
icebp
imul
lods
out
jge
imulb
enter
int
dec
je
mov
cli
adc
jae
or
mov
cmc
push
xor
inc
pop
inc
add
add
in
addb
sub
decb
mov
mov
cmp
rclb
sub
ds
loopne
xchg
xchg
pushf
or
out
aas
testb
mov
push
jp
push
xchg
repz
ficompl
and
mov
addb
lods
or
add
sub
sub
xor
enter
push
in
data16
and
adc
add
fdivl
mov
das
lods
add
sbb
pop
sbb
add
je
ss
aad
add
jnp
sub
test
cmp
add
loopne
inc
aas
insl
xchg
mov
add
aam
mov
cmc
sub
int3
jo
cmp
pop
xor
cmp
mov
adc
fsubrl
push
je
mov
jno
add
mov
mov
or
xchg
adc
cmp
mov
rcrb
and
es
insl
add
mov
xchg
test
sahf
jle
pop
sub
mov
outsb
cltd
mov
xor
ds
or
add
jnp
sar
add
pop
xorb
inc
iret
cmp
cmp
add
xchg
inc
push
and
xlat
push
sbb
dec
inc
sbb
lods
add
mov
aad
cli
andb
arpl
flds
insb
les
mov
add
cli
sbb
and
jnp
add
mov
shlb
leave
fucom
in
lods
shll
int
lret
lcall
jp
add
hlt
mov
push
add
pusha
adc
orb
clc
sub
or
xor
aaa
je
fisubs
shll
testb
frstor
leave
in
hlt
xor
ret
or
lcall
jo
movsb
movsl
inc
add
lret
sbb
push
xchg
call
xchg
push
insb
testl
ja
and
shll
inc
sub
imulb
sbb
jle
scas
mov
add
sbb
jp
dec
in
add
sbb
mov
cld
xor
add
repz
add
push
xchg
inc
ds
mov
xor
verw
scas
push
pop
pop
xchg
mov
add
sahf
ss
nop
mov
test
add
imul
loop
aad
into
jle
mov
or
push
pop
push
mov
in
sbbb
add
dec
add
push
fadds
icebp
dec
lret
imull
out
loopne
cmpsl
aad
pop
add
adc
ret
mov
add
cmp
ja
inc
pop
incl
rorl
sbbl
xor
push
out
cltd
roll
dec
je
test
sbb
hlt
inc
xor
roll
push
outsb
dec
sar
lcall
xlat
add
cmpsl
pop
add
das
movsb
xor
add
push
and
scas
jecxz
add
adc
jp
test
mov
add
leave
and
repnz
cwtl
pop
inc
mov
sahf
jg
cmp
sbb
push
mov
cmp
rorb
enter
icebp
pushf
sub
bound
ja
dec
pop
inc
mov
and
rolb
js
and
mov
jno
test
mov
stos
in
jo
hlt
add
adc
insl
gs
or
aad
lods
out
add
aaa
ficoml
add
pushf
imul
push
pop
cmpl
mov
add
or
and
sbb
inc
jge
push
fcomi
jb
xchg
testb
sarb
sbb
outsl
out
outsb
loopne
pushf
push
mov
mov
pop
pop
movsl
fnstsw
adc
dec
out
addl
loope
sub
jl
ja
pop
out
pop
popf
test
xchg
push
std
inc
movsb
outsl
dec
inc
addr16
out
pop
push
hlt
sub
test
les
xchg
sub
cli
dec
mov
add
pop
insb
lds
lods
cmpb
and
dec
icebp
add
dec
inc
sbb
xorb
or
adc
sbb
add
out
add
std
add
inc
push
cmp
add
subl
cwtl
dec
pushf
std
add
xor
xchg
xor
nop
cmpsl
pop
jnp
add
xchg
out
xchg
jg
add
std
push
jmp
adc
adcb
adc
es
inc
mov
add
loopne
lods
pop
js
aam
mov
jmp
cmc
scas
or
cmp
xor
daa
sbb
mov
insl
sbb
repnz
pop
sahf
pop
inc
rcl
dec
mov
sti
dec
cmpsb
add
je
cwtl
cmp
testl
sub
mov
mov
mov
cmpl
out
pop
lret
mov
inc
mov
sarb
xchg
dec
repnz
jb
xor
js
shlb
orl
pop
lock
outsl
cmp
stos
shll
mov
push
xchg
pop
int3
enter
loop
fwait
pop
lahf
xor
mov
add
xchg
call
inc
push
pop
lods
ret
inc
mov
jecxz
add
fsubrs
sub
inc
popa
cmc
mov
jle
jb
add
and
inc
notb
les
imul
ljmp
pop
in
xchg
add
jo
cmp
sarb
adc
push
bound
sarb
mov
int3
adc
in
and
aaa
cmp
xor
add
cmp
mov
jns
jae
jp
ljmp
push
push
xchg
jno
fdivr
cmc
add
sbb
sahf
in
and
repz
adc
add
cwtl
pusha
xorl
add
loope
sub
inc
cwtl
add
mov
rolb
add
mov
adc
cmp
loopne
call
jnp
sub
and
lahf
sbb
dec
cmpsb
cwtl
mov
imul
adc
jne
mov
gs
xor
rclb
jle
push
adc
sub
add
jmp
mov
pushf
cmp
lcall
dec
cmp
cs
add
xor
imul
pop
int3
mov
xchg
repnz
xchg
push
jnp
iret
push
shl
xor
cmp
inc
in
xchg
and
add
mov
xor
dec
mov
add
sbb
pop
fistpl
sub
push
outsl
sub
fwait
aam
push
pop
notl
mov
loope
testb
dec
fsubrl
mov
add
shrl
push
hlt
andb
subb
jg
cli
or
xor
cvtpi2ps
mov
sbb
jp
ret
push
repz
pop
pop
cmpsl
aas
in
sub
js
test
cmp
roll
enter
or
nop
jl
or
ljmp
push
lods
sub
pushf
sbb
add
jecxz
nop
shlb
in
pop
add
mov
aam
in
sbb
push
repnz
jbe
adc
into
dec
leave
int3
out
sbb
test
fnstcw
loope
inc
stos
lods
push
in
sldt
es
lret
sbb
into
push
out
inc
outsl
pop
or
adc
aaa
mov
popf
xor
add
or
inc
add
cwtl
or
sub
pop
xchg
push
pop
shl
xor
loopne
cmpb
scas
mov
call
cld
fldt
mov
testl
ret
cmp
sbb
out
push
fcompl
fwait
inc
subl
cmp
cmp
psadbw
jl
nop
clc
nop
mov
pusha
push
cmp
sub
cmp
popf
jl
mov
cmp
mov
movsb
xor
cmc
dec
pshufw
gs
add
mov
sti
loope
and
and
sbb
int3
pusha
lock
mov
test
xor
add
pop
cmp
pop
pop
movsl
ss
lods
mov
add
lock
cmp
or
add
and
pusha
mov
repz
and
jo
mov
pop
pushf
sbb
stos
in
add
or
ljmp
push
fdivr
sub
out
repz
cmp
pop
sti
xchg
rolb
adc
or
popa
jnp
ret
sbb
negb
sbb
jge
or
pop
test
inc
sub
leave
loop
add
mov
xchg
cli
mov
mov
scas
add
pop
imul
add
pop
cmp
jecxz
int3
add
mov
push
mov
inc
shl
pop
imul
orb
sub
push
mov
dec
push
movsb
add
cmp
aam
outsb
dec
jle
shl
and
mov
inc
mov
test
cltd
je
or
leave
pop
mov
pop
lods
sub
lret
mov
sub
mov
pop
dec
mov
repz
movl
dec
xchg
andb
enter
into
push
in
sbb
sbb
pop
mov
dec
cmpsb
pop
loopne
mov
and
inc
xchg
jae
lea
inc
test
cmp
mov
or
and
mov
cmp
cmovbe
orl
ficoml
ljmp
cmp
ds
test
push
mov
cld
out
or
cmp
fstpt
jecxz
mov
in
aad
add
inc
xchg
das
and
sbb
add
xor
xor
test
insb
push
sub
jae
sbb
enter
xchg
add
dec
mov
cmpsb
lahf
xor
adc
xchg
jae
push
movsl
movsb
jne
add
pop
lea
push
adc
dec
clc
addr16
jbe
fbld
push
in
adc
dec
imul
xchg
mov
add
pop
or
adc
sub
adc
cmp
and
inc
pusha
sub
pop
or
stos
stos
shl
cmc
dec
add
cmpl
cli
loopne
andb
js
add
aad
ret
dec
add
addr16
inc
mov
lea
add
pop
jmp
aas
fwait
sti
ss
mov
adc
into
sub
incb
xor
push
test
xchg
scas
cld
add
andb
adc
add
adc
or
xchg
pop
add
mov
lods
or
fwait
add
cmp
adc
rorl
push
orb
sbb
dec
rolb
aaa
loope
and
loopne
push
icebp
add
subps
addb
sbb
pop
xchg
into
fildl
sub
xchg
xor
lahf
icebp
and
adc
popl
mov
int
out
cmp
add
adc
mov
ljmp
bound
xor
leave
jp
jle
add
add
sub
aaa
adcl
xchg
in
cs
ret
push
sub
scas
jmp
test
inc
daa
lret
insb
sysret
pop
adc
addr16
adc
repnz
lahf
inc
mov
loop
out
mov
loopne
push
add
xchg
pop
stc
add
pop
shl
cs
call
lock
pop
xchg
jp
push
sub
loope
xorb
scas
dec
addl
lods
das
push
xchg
rolb
test
fildl
add
jns
xchg
cltd
adc
inc
pop
in
or
push
cwtl
mov
sub
xchg
cmp
vaddss
dec
ret
add
adc
mov
and
icebp
xor
ss
push
inc
xchg
test
xchg
movsb
dec
ja
ds
add
pop
sbb
push
adc
dec
ret
push
es
mov
push
in
aaa
add
arpl
and
rep
lcall
or
xchg
sub
xor
or
inc
pop
loope
subb
dec
xchg
add
test
add
adc
sub
sbb
add
int
mov
cmpsb
pop
add
xchg
mov
xor
mov
repz
sub
mov
pop
mov
add
lea
aam
pop
dec
add
add
sbb
add
inc
push
lods
and
mov
test
lock
loopne,pt
orb
hlt
into
dec
xchg
and
inc
fsubl
pop
pop
mov
popa
pop
enter
clc
pop
xor
add
cmpsb
mov
add
and
sub
add
call
add
outsl
jnp
and
cltd
pushf
adc
lods
push
add
or
out
adc
sbb
push
mulb
add
mov
xchg
push
add
adc
sbb
aaa
arpl
lret
jae
jne,pt
mov
aas
sub
std
lea
outsb
xchg
test
xchg
roll
out
inc
sub
cmp
pop
add
jmp
push
xor
cmp
or
add
add
xor
popa
add
test
mov
repz
sbb
jne
and
int3
imul
bound
loop
mov
sub
push
xor
call
daa
lret
lock
xor
sbb
stos
mov
inc
cmp
rclb
xor
inc
add
adc
addr16
add
sarb
cmpsb
lret
movsb
xchg
inc
test
jb
pop
add
clc
or
aam
pushf
add
in
mov
sub
ret
idivb
pusha
mov
loopne
out
xor
call
dec
sbb
add
movb
mov
xlat
pop
test
adcb
addr16
sub
daa
mov
shrl
lcall
in
xchg
out
int3
inc
fadds
jecxz
imul
push
push
push
jae
adc
and
add
pop
imul
add
or
jg
push
push
ss
ror
daa
sbb
push
xor
jmp
cmp
mov
stos
bound
test
add
adc
push
adc
add
rep
cmc
dec
insl
pop
sbb
cmp
in
cmpsl
add
push
or
jnp
ficoml
inc
roll
je
push
jo
arpl
test
mov
mov
mov
push
aad
cwtl
lods
stos
jae
pop
shrl
scas
cld
push
incl
xor
jge
xchg
pop
mov
or
mov
mov
add
dec
fiadds
xor
lea
fsubrs
mov
sbb
pop
aas
dec
jecxz
test
or
out
or
cmp
add
call
or
sti
push
adc
iret
add
ficompl
stos
adc
add
sbb
add
push
adc
jecxz
add
orl
int3
add
and
repnz
pop
outsl
imul
add
pop
xchg
pop
jno
add
pop
jbe
shlb
dec
adc
iret
add
test
and
mov
or
rcll
xlat
add
mov
jp
pop
pop
sub
mov
adc
mov
xor
lahf
inc
add
gs
add
pop
and
push
test
insl
mov
mov
fmul
mov
mov
pop
push
loopne
mov
aad
add
sbbl
shrb
xchg
sahf
cmpsl
dec
lods
fwait
push
in
jge
shl
aad
add
mov
fsub
and
adc
adc
pop
inc
rolb
mov
xchg
enter
add
ret
movsb
test
rolb
pop
in
lea
pop
or
inc
pop
sarl
test
clc
decl
shr
or
push
mov
mov
inc
cmp
dec
cmpsl
mov
lret
pop
mov
aam
cwtl
sbb
push
lahf
lds
pop
movsl
push
xchg
imul
jae
or
pop
adc
pop
jg
mov
or
add
xchg
loope
mov
jg
rolb
lock
xlat
and
and
cmpb
sub
stos
add
cmpl
pop
mov
mov
loope
and
push
call
jge
jg
push
cwtl
pop
mov
xchg
mov
or
out
pop
add
aad
dec
jne
add
pop
dec
rclb
pop
pop
cmp
jns
lock
sbb
subl
test
out
xchg
aad
xchg
popa
jmp
xchg
xchg
add
ljmp
aas
inc
pop
dec
xor
aad
int3
sub
fadds
jb
lahf
mov
sbb
out
and
sbb
jno
adc
outsl
cmp
add
jmp
lret
int
mov
loopne
or
jbe
icebp
mov
or
mov
addb
xchg
pop
pusha
mov
rclb
pop
pop
repnz
mov
add
scas
hlt
andl
add
jne
add
icebp
movsb
outsl
add
insl
outsb
and
jno
stc
mov
or
bound
je
mov
xor
inc
add
push
in
negl
test
pop
stos
popl
stc
pop
les
push
roll
lds
movsb
cmp
cmp
ftst
jns
cli
xchg
pop
mov
cmp
jae
push
inc
inc
cmp
dec
push
out
out
mov
ret
push
xor
xchg
bound
addl
xor
cld
loopne
icebp
mov
add
dec
in
and
aas
pop
loope
in
cmpsb
dec
bnd
sbbb
pop
push
and
jp
lock
xor
add
inc
insl
aaa
jg
sbb
xlat
jmp
outsl
add
adc
mov
mov
movsl
cwtl
mov
inc
mov
fnstenv
fmuls
outsl
rcrb
ss
jmp
shll
cmp
int3
cmpsl
dec
in
fidivs
mov
push
jle
xlat
add
hlt
cmp
add
testb
inc
dec
lcall
add
pop
jae
inc
xor
push
cmc
pop
dec
add
dec
mov
cli
cmp
add
pop
add
add
fmuls
and
and
add
daa
push
sbb
add
dec
lds
ret
mov
test
xchg
aaa
jmp
daa
hlt
movsb
loopne
adc
outsb
mov
fbld
cmc
fs
popa
lock
lock
mov
sti
and
fdivrp
sub
jo
inc
ja
pop
cli
mov
negl
or
jp
sub
inc
test
add
jmp
pop
xorb
cmc
sbb
xchg
xchg
or
lock
mov
orl
xchg
xor
push
add
aas
mov
testb
add
fidivrs
jbe
add
pop
shrb
lds
push
cs
roll
mov
and
sahf
add
and
push
loopne
movsl
add
nop
push
out
inc
xchg
iret
addl
mov
imul
inc
mov
cltd
add
lea
xchg
dec
mov
mov
cmc
pop
mov
dec
std
pop
pop
mov
and
inc
clc
leave
xor
test
stc
add
xchg
lds
jo
inc
bound
fsubrl
mov
jae
xchg
stos
sub
xchg
adc
aam
xor
out
xchg
xlat
stc
popa
popa
mov
or
or
cli
pop
mov
ud2
das
lret
adc
or
repnz
mov
pop
push
pop
add
cltd
xor
jb
jns
or
cwtl
sub
hlt
mov
add
fisttps
push
inc
add
fldpi
sub
scas
out
in
cmp
popl
int3
jge
pop
xor
add
sbb
add
test
add
imulb
out
mov
add
loopne
roll
and
xchg
jae
cmp
mov
push
pop
inc
add
add
aaa
inc
dec
jbe
sbb
aam
mov
pushf
push
out
add
sahf
call
int
out
jge
push
inc
add
insl
scas
sub
sub
dec
cmpb
icebp
lcall
sti
add
dec
sbb
jb
outsb
fmull
dec
inc
mov
inc
fchs
in
fildl
and
dec
rcll
add
sub
jo
xorb
cmp
adc
or
inc
mov
jge
add
sti
xorl
lock
add
nop
iret
dec
xchg
cmp
lcall
fisttpll
ret
mov
mov
add
outsl
jnp
jno
add
pop
dec
adc
int
imul
movsb
and
adc
cmp
in
rcr
jno
cli
jbe
adc
and
cmp
aam
ret
jp
cltd
lahf
out
rcrb
popf
jo
add
push
subb
mov
stc
xchg
out
orb
sub
into
stos
outsb
push
mov
sbb
aas
adc
test
lock
pop
dec
pop
hlt
add
bound
rol
cmp
jecxz
imul
add
cmc
roll
xchg
pop
repz
xchg
test
psubq
and
mov
jmp
and
xchg
mov
or
inc
xchg
out
inc
loopne
daa
movzwl
xor
add
jns
shlb
cmp
in
out
jbe
add
mov
xchg
sahf
std
add
aaa
xchg
cmc
in
pop
cld
clc
add
in
test
js
rorb
ret
add
cmp
or
cmp
and
movb
jb
jmp
and
cwtl
pop
xor
dec
int3
imull
and
mov
cmp
jo
addb
mov
push
pop
dec
push
cmpb
cmpsl
cs
xor
lods
adc
or
and
xchg
add
movsl
ja
scas
aam
jo
pop
add
pop
sbb
dec
and
sub
js
xor
pop
and
sarl
pusha
cmp
add
add
mov
icebp
xchg
mov
loop
sbb
popa
add
ret
test
or
dec
cmp
loopne
xchg
flds
mov
inc
xchg
jg
mov
stos
lock
test
pop
stos
aam
xchg
sbb
jno
rol
inc
aam
repnz
or
and
or
das
jbe
push
loopne
enter
cmp
mov
add
inc
adc
faddl
push
cltd
cmp
cwtl
inc
sbb
idivb
clc
jp
push
add
mov
call
je
add
push
lret
jno
pusha
mov
movsb
add
jmp
divl
cmpsb
ljmp
add
jmp
int3
orl
add
iret
lds
dec
pop
add
add
cmpsb
xor
sbb
jns
inc
ret
loopne
js
es
je
push
pusha
rcrb
dec
int3
fwait
dec
add
and
imul
jno
push
pop
sub
pop
loope
push
mov
movsb
mov
sahf
mov
mov
cmpsb
or
fnstsw
xchg
orl
mov
and
xchg
adc
add
js
sub
sub
repnz
icebp
mov
lret
jmp
stos
xor
lods
add
loope
jo
add
addr16
je
push
fisttpl
sub
sub
pop
mov
push
inc
mov
mov
shr
pusha
stos
in
cmp
mov
jne
filds
arpl
push
outsb
sub
add
aas
dec
repnz
mov
cmpsb
mov
push
inc
mov
mov
xor
gs
add
xor
retw
cmpb
or
das
jne
pop
xchg
adc
sub
icebp
sub
rclb
xor
lahf
test
dec
ficomps
sbb
dec
int3
ds
add
dec
movsb
jg
cs
xor
push
addr16
pop
mov
aas
push
dec
push
sbb
in
mov
inc
xor
mov
add
xlat
sbb
jp
add
mov
cwtl
int3
cmp
or
or
cmc
pop
inc
jl
pusha
pusha
sbb
out
add
or
add
mov
mov
cmp
pop
pop
pop
jle
mov
xchg
mov
add
mov
in
cmpsl
jecxz
add
xorb
dec
divl
xchg
movl
test
popf
push
fidivrl
mov
aam
sub
imul
add
cmp
bound
test
xchg
add
aaa
pop
xor
fnsave
dec
pop
and
dec
pop
adc
mov
jmp
ds
mov
sub
adcb
pop
out
or
mov
xchg
sbb
mov
orl
pop
push
dec
mov
xor
mov
push
lods
test
in
arpl
rorb
mov
adc
bnd
nop
addl
mov
mov
ret
xor
jbe
add
enter
mov
add
inc
idivb
add
jb
xchg
mov
in
mulb
sbb
xor
cwtl
out
or
add
lock
add
imul
jle
mov
or
add
pop
sbb
xchg
jno
leave
push
pop
lcall
mov
test
cwtl
sarb
xor
add
loopne
jno
add
mov
jg
xchg
add
mov
and
or
jl
jl
adc
push
xor
inc
gs
sbb
jmp
nop
js
add
add
into
cli
ret
cmpsb
pop
jne
add
push
and
icebp
dec
test
cmp
xor
xor
fsubl
jp
sub
icebp
pusha
pusha
enter
std
add
ret
lahf
xor
add
cmp
push
sub
add
pushf
xchg
insb
mov
xor
xchg
ret
push
roll
pushf
je
mov
cmp
sti
add
push
pusha
mov
jne
imul
subl
fldl
add
mov
pop
enter
and
imul
xchg
add
ret
lcall
mov
dec
sub
inc
test
add
clc
negb
imull
jnp
lds
lea
xchg
push
xor
pop
push
push
add
icebp
mull
add
mov
cmp
or
ret
and
add
lods
mov
out
cmp
add
lcall
std
add
jmp
add
fstpl
out
sbb
pop
sti
add
or
mov
xchg
xorl
pop
test
inc
dec
dec
ja
pop
inc
flds
xchg
pop
outsl
popf
lret
add
and
fsubs
xchg
pop
mov
sub
jg
pop
mov
out
xchg
add
sbb
adc
jb
rclb
or
add
push
mov
and
lret
add
add
sti
pop
or
cmp
push
mov
repz
jge
mov
lods
adc
and
data16
shr
sbb
loop
cld
push
jb
cltd
dec
sbb
add
add
iret
jmp
add
out
inc
jg
fisubs
sbb
cmp
mov
imul
inc
leave
dec
push
fadds
jle
jmp
mov
sbb
mov
push
xchg
bound
in
pop
pop
test
jp
push
sub
nop
jnp
insb
pop
shlb
ljmp
mov
jmp
clc
add
sbb
inc
in
pop
push
add
jbe
pop
mov
and
enter
push
rclb
ficompl
lods
dec
fdivrs
lahf
int3
ja
addr16
imul
lea
and
hlt
add
insb
adcl
add
xchg
scas
dec
js
mov
lea
and
jo
cmp
sbb
mov
mov
mov
push
sti
pop
inc
shrb
push
cmpsb
adc
or
sbb
xchg
aaa
andl
sbb
aam
inc
adc
dec
or
cmp
sti
sub
adc
aaa
add
add
cmp
repnz
push
xor
sbb
or
insl
pop
dec
adc
push
mov
ret
fistpll
in
mov
jp
sub
cmp
popf
sarb
xor
insb
dec
add
inc
mov
into
lret
xlat
sbb
shl
ja
ljmp
jge
adc
and
jne
dec
mov
enter
mov
push
add
pop
arpl
stos
jae
cmp
pusha
orb
cmpsl
jae
out
das
push
in
enter
sub
arpl
sub
xor
test
imul
pop
out
add
jnp
adc
sbb
cwtl
cmp
adc
xorb
push
in
add
lods
jge
cmp
push
jl
xor
inc
scas
aad
fs
sub
xor
sbb
sbb
sbb
xor
xor
xor
and
lret
mov
mov
add
or
dec
sti
xchg
sbb
addl
lahf
cmpsl
cmp
mov
and
gs
lods
jp
mov
popa
icebp
ret
add
rcr
xacquire
add
sbb
test
loope
sub
jb
lock
inc
dec
jnp
clc
aaa
pop
ret
mov
pusha
sbb
mov
fbstp
jo
ljmp
cwtl
add
pop
clc
mov
add
sub
filds
dec
jg
cmc
int3
sbb
push
pop
lds
shlb
insl
jbe
pop
xchg
mov
daa
cmp
out
into
stos
loopne
inc
add
es
xchg
mov
mov
sub
pop
push
stos
cli
std
lret
adc
inc
test
js
ffreep
cmpb
xchg
xorl
push
into
faddl
push
addb
cmc
adc
test
shlb
mov
mov
call
nop
add
mov
cmpsb
stc
cli
jmp
test
mov
lock
add
shrb
xchg
das
ds
ficoml
imul
mov
mov
shrl
jl
xor
add
push
das
push
mov
dec
xlat
mov
adc
mov
pushl
nop
add
xor
fimuls
cld
dec
jno
and
rcll
add
fadds
xchg
ret
sub
enter
add
mov
in
aad
cmp
hlt
pushf
add
outsb
imul
cmp
fstl
outsl
add
std
dec
aam
sbbb
pop
sbb
jb
add
cmovne
push
inc
ret
insl
rcrb
pop
pop
hlt
faddl
cmp
lods
or
orb
add
and
cs
dec
mov
out
adc
jno
inc
pusha
add
lahf
leave
pop
xchg
rorb
test
jae
scas
icebp
mov
or
sub
in
push
ss
sub
xor
fwait
popa
mov
sbb
mov
ljmp
pushf
es
and
adc
movsl
aaa
insb
loop
loopne,pn
mov
adc
inc
push
ret
repz
mov
add
repnz
pop
push
fildl
push
adc
bound
outsb
add
xor
dec
push
outsl
adc
andl
dec
cmp
fstl
and
bnd
add
adc
pushf
add
cmpsl
mov
jle
cmc
add
push
addr16
inc
or
dec
add
inc
or
xor
xchg
pop
std
sbb
jge
pusha
cwtl
pop
imul
dec
sti
cmp
add
test
cwtl
push
ret
loopne
xorb
into
aaa
dec
add
adc
lods
sub
clc
loope
xor
add
cmp
shlb
sub
pop
xchg
add
mov
adcl
add
push
push
scas
pop
ja
call
mov
mov
fstps
outsl
enter
popf
fdivl
xchg
xor
mov
add
cmp
cld
sub
sti
jbe
ljmp
fsqrt
daa
sbb
les
push
mov
push
jecxz
and
pop
adc
adc
jo
call
sub
mov
repnz
nop
mov
test
or
push
inc
or
mov
sbb
pop
cmp
adc
cmp
loopne
loopne
pop
ljmp
push
cmpb
out
mov
ret
mov
popf
mov
adc
repz
clc
lret
push
daa
cmp
and
aas
out
out
fstpl
push
mov
aad
imulb
int3
mov
shr
cltd
jns
mov
int
sub
orb
xlat
or
push
jle
aas
ret
adc
imul
loop
lea
dec
adcb
test
lret
mov
hlt
les
push
popa
out
xchg
cmp
xor
in
push
add
sub
pop
ljmp
mov
cltd
and
daa
xor
stos
dec
xor
mov
add
mov
shl
pop
mov
pop
jle
icebp
pop
sub
dec
jno
rep
enter
das
push
mov
sub
andl
xor
jmp
pop
dec
daa
or
pop
mov
movsl
push
mov
mov
push
pop
xor
cmpsb
das
add
pop
les
dec
rclb
inc
pop
mov
outsb
add
rcll
add
sub
or
mov
pop
pusha
or
add
mov
mov
add
icebp
inc
lea
mov
xor
dec
add
and
cmp
add
pop
lea
mov
aam
mov
stc
jne
icebp
mov
icebp
sub
add
insw
flds
mov
add
inc
dec
test
jno
push
and
add
xor
mov
pop
movb
and
gs
jbe
xchg
sbb
inc
jecxz
imul
add
sbb
sub
inc
testl
and
pushf
cmp
mov
add
mov
cmpsb
add
add
ret
aam
jns
fldenv
mov
divb
add
jbe
ret
inc
orl
push
cmp
pusha
lahf
les
add
or
cmp
out
daa
push
andb
cld
dec
je
add
pop
mov
add
mov
shll
lock
xlat
xor
jnp
adc
jb
add
xchg
sbb
sbb
xchg
add
popf
jo
clc
lea
stos
fcomps
dec
loop
lahf
rorl
gs
je
in
mov
xlat
cld
inc
out
aam
icebp
xchg
xor
clc
movsb
push
clc
addb
add
data16
ds
les
mov
loopne
mov
dec
call
inc
js
or
pop
int3
dec
push
add
xor
pushf
mov
cmc
mov
lea
pop
lods
lahf
bound
cwtl
shl
cld
iret
lock
inc
or
add
fbld
mov
add
dec
jmp
dec
dec
cmp
test
nop
push
cli
aaa
sbb
xchg
push
std
dec
sar
add
daa
add
data16
cmc
sahf
mov
rolb
add
pop
adc
into
inc
add
mulb
add
dec
dec
aam
out
jno
add
xlat
je
fcom
push
pop
movsb
popf
sbb
sbb
hlt
push
jbe
dec
std
xor
pop
ss
inc
incl
lods
sub
cmc
push
push
pop
aaa
mov
gs
mov
out
push
mov
cli
pop
mov
clc
pop
push
sbb
adc
adc
cld
scas
and
das
not
dec
jo
push
mov
push
andl
cli
xor
mov
movsl
in
mov
jecxz
xchg
adc
mov
out
cmp
jno
scas
dec
xchg
inc
xlat
cmp
lret
inc
mov
loopne
andb
add
lods
andl
mov
jg
push
mov
and
bound
pusha
sub
lahf
push
cwtl
jecxz
inc
add
mov
insb
int
cmp
sbb
mov
fisttps
cwtl
pop
jge
add
lock
adc
adc
sahf
pop
add
sub
int3
mov
add
pop
sub
hlt
xlat
add
dec
into
stos
out
shrb
add
mov
sbb
pop
add
sarb
mov
add
addr16
xchg
add
scas
xchg
mov
pusha
adc
imul
adc
add
mov
add
push
daa
pusha
xchg
dec
pop
leave
addr16
das
in
out
aaa
inc
mov
xor
add
cmpsl
call
mov
sbb
or
push
loopne
nop
negb
sbb
cmpl
pop
call
sub
lds
call
mov
inc
dec
adc
outsb
jae
sub
unpckhps
or
add
add
xchg
jge
jmp
or
int
cmp
xor
pop
jo
and
jae
nop
int3
xchg
fstl
popf
cli
stos
pop
jns
mov
sub
test
pop
or
popa
push
dec
outsb
movsb
pop
out
daa
loopne
lock
lods
fmul
mov
xchg
mov
jecxz
pop
add
in
rcll
cmp
xchg
xor
icebp
mov
jle
push
mov
add
sbb
int3
dec
jns
aas
add
sarl
pop
data16
movsb
sbbb
out
out
fiaddl
mov
mov
inc
sbb
inc
sub
les
pop
push
lods
ret
xchg
popa
in
or
dec
inc
insl
mov
or
negb
or
subl
xchg
xor
push
sub
dec
scas
lahf
lret
dec
inc
add
fisubrs
push
stos
iret
call
repnz
add
add
outsb
fnstsw
jns
shlb
push
popa
add
scas
mov
pushl
shrb
dec
shll
outsb
add
iret
sbb
xor
gs
rolb
ret
or
cmp
int3
lret
ficompl
rcrl
test
mov
push
aam
mov
jmp
inc
sbb
and
add
stc
jmp
sub
add
clc
xchg
mov
lock
es
test
sub
mov
fs
mov
add
cld
pop
gs
mov
lds
imul
es
leave
add
gs
push
jmp
xchg
out
add
adc
and
mull
xchg
cli
jne
adc
dec
aad
ja
xor
sbb
mov
push
ret
xchg
jge
mov
and
scas
add
cmp
jno
jbe
repnz
inc
push
sti
out
add
sarb
and
aam
mov
push
mov
lock
pop
lods
enter
xor
sarl
mov
add
cltd
xchg
lret
stos
inc
adc
jmp
testl
sbb
je
dec
mov
in
js
mov
inc
mov
nop
dec
cmp
add
into
xor
adc
leave
repnz
mov
sub
repz
in
adc
je
pushf
xchg
xor
int3
js
jecxz
sub
xor
pop
add
sbb
pop
jo
roll
pop
loopne,pn
in
cmp
pop
jle
je
daa
push
aad
or
or
xlat
and
xor
stc
cltd
jne
xchg
inc
pop
std
cmp
testb
lea
adc
or
jno
jle
mov
xchg
insb
mov
mov
adcl
hlt
adc
sarl
sub
jo
sbbb
das
push
xchg
or
mov
sub
cmc
negb
lcall
cmpl
cmp
add
stos
std
inc
xchg
data16
fs
ret
jmp
jp
adc
add
push
scas
xor
or
arpl
ret
je
dec
les
mov
insb
and
loope
out
push
sbb
pop
or
adc
add
xchg
jne
mov
add
sub
pop
add
mov
sub
jb
pop
mov
ja
pusha
push
add
or
sbb
lret
dec
cmp
sti
sub
jae
loopne
push
sbb
push
gs
xlat
cli
xor
popl
pop
adc
shrl
test
rcrl
mov
dec
ljmp
insb
in
minps
add
hlt
push
and
xor
jns
add
fcoml
pop
imul
add
push
fcomps
clc
outsb
add
repnz
mov
aad
aam
data16
aas
cli
xor
jmp
jnp
xchg
lcall
testb
mov
shll
rorl
mov
bts
test
sub
fidivs
jae
adc
inc
sbb
mov
lret
clc
or
pushf
ljmp
stc
insb
add
jl
pop
mov
sti
std
cmc
and
fsubrs
lds
enter
cmpsb
jle
sti
movsl
aad
cmp
insb
add
sub
add
roll
xor
es
lret
ja
mov
adc
push
xor
in
sbb
stc
jmp
enter
test
sbb
aaa
pop
gs
jmp
ljmp
popl
leave
or
fiadds
sbb
fisubrl
add
rolb
addl
pusha
add
lret
jmp
fcompl
fsubrs
es
nop
adcb
jmp
fwait
ja
test
inc
fnstcw
xchg
dec
xor
add
and
andb
loopne
or
shl
mov
call
sbb
in
test
idivb
inc
sbb
imul
test
mov
xchg
mov
lods
lahf
add
push
xor
xor
inc
add
xchg
xor
imulb
mov
sbb
mov
stc
inc
add
xor
add
jle
push
test
test
jnp
sar
in
jo
adc
xchg
cmp
push
push
cmp
sti
jo
sahf
push
xchg
sbb
mov
pop
inc
addb
loope
xchg
fs
je
jge
adcl
enter
add
div
mov
popf
adc
test
or
jno
nop
xor
add
cmc
pop
jle
cwtl
jns
gs
movsl
lock
dec
fcomps
jne
faddl
add
cmpl
sti
aas
mov
push
nop
mov
inc
enter
sbb
je
dec
fldt
inc
cmp
lock
into
loopne
hlt
jge
and
fwait
inc
pop
push
ficoml
mov
dec
inc
popl
movsb
push
pop
fmul
jo
icebp
es
adc
fwait
shlb
pop
mov
sbb
xorl
push
add
in
cmpsl
mov
int3
add
jle
mov
cmp
arpl
gs
add
inc
mov
add
jp
mov
xchg
inc
add
ja
pop
add
inc
jns
push
cmp
cmpsb
jno
cmp
call
mov
mov
add
mov
rclb
rcrb
arpl
ficompl
in
sbb
fildl
nop
insb
jge
sbb
sahf
add
outsb
add
fistl
cltd
aad
nop
aam
inc
and
insb
push
rorl
aaa
clc
add
sarl
test
cmc
cli
stos
add
xchg
mov
add
jne
cmpsl
add
add
and
cmp
mov
rorl
xchg
add
aaa
push
xchg
or
std
add
sbb
xchg
sub
shlb
push
or
push
pusha
sti
js
xlat
stos
jg
add
scas
jne
scas
sub
cltd
fstps
adc
inc
push
mov
lret
fnstsw
dec
xor
int3
ret
jne
push
add
mov
xchg
popa
lahf
movsb
jmp
cwtl
stc
cmpb
sahf
sub
jg
xor
add
insl
xchg
lcall
iret
jb
mov
lcall
mov
xchg
pop
cmpl
xor
mov
enter
xchg
xchg
add
and
roll
daa
jnp
mov
jl
add
push
or
add
mov
in
call
mov
dec
dec
add
sbb
pop
shlb
pop
sahf
mov
and
xchg
jl
xor
jp
or
mov
ret
push
dec
jae
push
popa
jge
mov
pusha
fnstsw
lea
jnp
add
orl
dec
sub
add
push
mov
jg
pop
jo
faddp
xchg
sarl
add
adc
jmp
ljmp
or
and
push
fcoms
add
cmp
or
fadds
mov
or
es
jle
add
in
cmp
add
xor
jo
repnz
in
std
jl
push
add
and
orb
push
push
and
outsb
inc
xchg
mov
add
imul
adc
add
jno
out
push
and
sarb
xlat
add
outsb
in
lret
mov
cmp
push
in
mov
cmp
pop
mov
lods
jne
nop
cmp
and
add
mov
push
movsl
or
fwait
push
and
ss
add
rol
scas
shlb
xchg
add
push
dec
insl
out
mov
clc
and
pop
int
mov
sbb
fsubs
das
lahf
jbe
cmovae
repz
xchg
test
add
hlt
data16
mov
in
test
rolb
jns
movsb
xchg
rolb
scas
xor
pop
push
or
sbbb
cmp
das
add
cmp
inc
pop
dec
test
xor
mov
pop
ror
ret
xor
testl
add
fwait
fs
js
and
cmp
add
mov
in
je
sbb
cmp
add
ret
mov
mov
incb
cs
aam
jle
mov
sub
roll
adc
mov
pop
sbb
push
or
and
ds
fs
add
dec
xchg
in
aas
mov
sub
rorb
xor
sbb
js
jl
add
push
fucomp
test
out
ret
sbb
dec
std
mov
pop
fsubrp
dec
adc
sarb
add
sub
loop
or
add
add
loopne
mov
pop
sti
mov
out
shr
xlat
test
and
pop
push
stc
mov
stos
or
inc
or
test
shr
lock
xchg
inc
push
sbb
jp
mov
repnz
and
sub
scas
jne
aaa
mov
and
sbb
adc
add
xor
push
or
stc
mov
repnz
mov
fs
lcall
fidivl
add
enter
xorb
jnp
inc
sub
lods
add
daa
xor
rol
mov
and
dec
inc
lods
test
adc
jl
mov
fwait
lcall
in
dec
rorl
fbstp
pop
pusha
mov
xchg
cmp
inc
xorb
xchg
fstpt
add
popf
mov
cmp
ficomps
add
xor
sahf
mov
out
cmp
pop
mull
imul
add
mov
shlb
xor
add
adc
mov
movsb
in
push
add
add
cs
loope
enter
jbe
jns
xchg
mov
add
mov
jge
imul
xlat
out
and
rolb
xor
adc
faddl
mull
add
iret
sub
xor
scas
cmpsb
popa
out
in
mov
arpl
pushf
stos
add
mov
add
sbb
out
sar
popf
sti
add
lds
lahf
idivb
add
test
sbb
aaa
jbe
enter
movb
imul
sbb
ficoml
pop
mov
and
pop
xchg
je
push
jmp
add
test
pop
popf
decb
loope
mov
pop
mov
clc
mov
movsb
push
push
movb
incl
in
std
xchg
pop
add
jmp
daa
add
jb
sub
int
call
cmp
in
pop
adc
lds
and
roll
jae
add
pop
add
push
adc
mov
pop
fimuls
orb
jmp
xchg
scas
imul
dec
inc
jbe
mov
xor
test
push
subb
inc
xchg
pop
pop
test
add
or
js
lret
test
arpl
push
fcmovb
mov
xchg
repz
or
fcomip
shll
ja
pop
lret
out
out
addl
sbb
inc
ds
mov
mov
pop
stos
sub
xchg
hlt
mov
les
jl
inc
xchg
add
outsb
add
sub
in
add
lret
mov
push
pusha
or
loope
sbb
dec
notl
push
outsl
iret
aad
pushf
lcall
push
outsb
leave
sbbb
lock
roll
dec
ss
adc
cmpsb
jne
sahf
push
loopne
xchg
push
mov
out
jb
adc
imul
jns
cmp
jmp
inc
push
bound
inc
add
fstl
fwait
jnp
pop
add
test
pop
ret
je
inc
add
and
mov
cmp
cli
cmp
add
push
faddp
aas
push
add
lcall
xchg
sti
push
jns
push
cld
xor
fwait
out
sbb
sub
popa
jp
adc
mov
add
inc
lods
jne
xlat
cvttps2pi
testl
pop
add
mov
and
cmp
xchg
in
cmc
xor
dec
icebp
adc
nop
pop
mov
add
aaa
sahf
cld
inc
cmp
jb
fildl
lcall
out
inc
lock
stc
sbb
cli
fcmovnbe
cmp
cmp
jae
scas
jnp
call
add
jbe
add
fsubs
adc
jb
jl
jmp
adc
add
dec
test
std
inc
dec
mov
adc
add
jl
cmpsb
roll
stc
cmp
jle
into
mov
aam
add
pushf
bound
sahf
lock
imul
jo
andl
add
or
in
bound
mov
add
xor
in
pop
adc
fsub
mov
ljmp
idivb
nop
adc
jno
clc
pushf
mov
add
inc
sar
xorb
sahf
add
jge
adc
dec
movsl
icebp
xchg
subb
and
nop
lret
mov
in
rep
aad
jb
dec
or
pop
in
insb
and
sbb
sub
ds
add
xchg
sub
push
cmp
rcl
xor
ret
sahf
push
in
nop
clc
add
push
jb
aam
jl
inc
ljmp
in
mov
test
dec
popf
mov
jmp
jbe
jo
pop
or
sti
mov
adcb
pop
ds
addb
sbb
dec
sbb
lods
cmpsb
orl
add
xor
fimuls
pop
sub
scas
ret
pusha
jo
movb
push
das
sar
ret
jne
add
pop
pop
push
shrl
fldcw
xor
std
popf
pop
or
aam
ja
orb
and
and
sets
in
pusha
jge
imul
jecxz
subb
sbb
clc
add
pop
pusha
cmp
add
jp
fs
jo
dec
int3
mov
push
add
add
mov
clc
push
inc
roll
mov
xchg
leave
nop
es
movsb
add
cmp
iret
clc
cs
repnz
sbb
clc
xorl
nop
add
loop
add
or
lods
ja
inc
cwtl
dec
push
fistpl
add
and
mov
adc
add
ret
mov
xor
movsb
or
adc
icebp
mov
pop
jle
xchg
lds
cmp
inc
add
push
in
or
push
xor
test
nop
xorl
mov
andb
pop
stos
xchg
stos
call
add
lahf
cmp
adc
mov
roll
cltd
cmpsb
or
movb
inc
sbb
bound
push
fs
div
pusha
in
lret
sbb
mov
stos
jnp
add
jp
mulb
cld
pop
les
addr16
rcrb
mov
and
lds
xchg
cwtl
call
ret
sub
inc
enter
and
mov
cmpsb
xchg
fldt
dec
hlt
addr16
out
mov
and
add
lcall
sub
add
lds
out
dec
sub
stos
mov
pop
jl
dec
sbb
shl
add
xchg
negl
xchg
mov
sub
sti
mov
jbe
add
lahf
xchg
pop
xchg
push
push
jnp
das
inc
cmp
jb
pusha
sbb
into
and
cmc
std
push
jae
ds
pop
jo
movsb
cmpb
rorb
loop
sub
lcall
or
inc
add
push
leave
pop
mov
mov
jle
sub
sti
mov
add
sub
add
jp
and
mov
xor
stc
fmull
add
adc
roll
pop
xadd
add
jl
inc
xor
mov
add
or
inc
pop
cmp
sarb
add
jbe
add
jp
add
movsl
stos
add
push
mov
roll
add
mov
shl
add
je
sbb
jns
out
lock
mov
pusha
rorl
sti
mov
and
lret
jge
cmpsb
xor
push
cmpb
out
fimull
add
add
mov
sarb
data16
stos
sub
sbb
xchg
mov
add
lret
test
out
mov
lcall
add
mov
rolb
sti
lahf
or
dec
mov
add
and
mov
fsubrl
jb
add
mov
ljmp
rolb
and
dec
pop
rcrb
lcall
jge
adc
mov
xchg
mov
sbb
mov
xor
inc
faddl
xchg
test
xor
arpl
aad
call
pop
jecxz
jb
mov
es
sub
xor
js
mov
rorl
shl
test
enter
push
lcall
jmp
pop
cmp
add
mov
loopne
fstps
mov
cld
dec
mov
cmpsl
nop
cli
test
jp
loope
or
rclb
add
scas
adc
call
popf
outsl
out
cmp
push
push
loopne
sub
xor
add
pop
stc
xor
dec
add
pop
xor
add
int3
xchg
test
add
lock
cmp
push
jo
adc
sbb
push
rcll
jmp
inc
mov
jp
incl
add
xor
test
outsb
sbb
add
call
push
add
in
test
add
aad
sub
hlt
dec
sbb
aam
fildl
incb
inc
dec
scas
push
or
loop
add
inc
jge
mov
int
jmp
push
jne
add
mov
cmp
add
inc
aad
or
arpl
je
outsl
push
inc
add
lcall
pop
sbb
rorb
popf
pop
cmp
and
mov
out
xchg
incb
int3
out
cmpb
xchg
lahf
add
je
inc
dec
fcmovne
xor
cmp
outsb
aas
jmp
mov
test
mov
mov
add
nop
push
mov
push
test
mov
add
jle
add
xchg
inc
add
add
and
mov
xchg
aam
mov
adc
and
mov
out
add
cmpl
out
mov
add
add
xchg
xor
mov
or
push
and
scas
negb
loope
fdivl
add
adc
sub
xchg
mov
cmc
loope
add
or
movsl
ljmp
or
sbbl
outsb
add
inc
inc
inc
jge
pop
cmpsl
pop
jae
cltd
stos
movsl
sub
test
stc
cmp
ds
jo
int
cmp
add
cmp
mov
mov
pop
ds
or
lock
xchg
roll
sahf
lods
js
out
inc
loopne
fdivrl
pop
ss
sahf
mov
repnz
add
xchg
aas
popf
pop
add
dec
ret
sbb
xlat
cmp
add
adc
testl
insb
shrb
lret
push
sbb
fcmovnbe
stos
ljmp
mov
sahf
cmp
call
cwtl
cmp
test
stos
mov
arpl
and
mov
add
xor
sub
stc
add
fldcw
push
rorb
mov
add
leave
inc
fwait
cmovnp
sbb
pop
sub
in
popa
adc
add
jg
sbb
sub
shlb
iret
xchg
mov
sbbl
inc
lret
nop
add
repz
add
sbb
xchg
sahf
dec
mov
loopne
aas
lret
pop
das
pop
jns
daa
aad
sub
push
movsb
ficompl
mov
mov
or
addb
data16
mov
mov
push
leave
shll
roll
in
pop
and
mov
in
sbb
test
jmp
inc
push
enter
and
fmuls
add
push
adc
inc
xor
sub
nop
cmpsb
mov
adc
push
sbb
sub
rol
or
dec
inc
in
sbb
cmc
iret
loopne
dec
test
js
lret
and
mov
lret
aad
add
inc
dec
xchg
outsb
cmp
pusha
add
xchg
int
xor
fs
xor
loop
aas
hlt
mov
cltd
jo
cmpxchg
mov
add
in
icebp
or
cli
and
cmpsl
test
and
iret
idiv
out
loopne
xchg
daa
cmp
adc
lahf
pop
repz
inc
xchg
jo
test
inc
add
add
jle
ds
xor
hlt
leave
add
stos
andb
xor
js
sbbl
aaa
inc
repnz
add
addr16
xor
subb
add
push
push
jbe
sbb
std
fcoms
in
add
adc
icebp
jl
mov
hlt
jb
inc
int
add
mov
je
mov
xchg
and
add
jb
sbb
int3
or
sar
mov
mov
out
push
add
es
lods
sub
je
repz
pop
sbb
cmp
adc
xor
cmp
inc
mov
add
or
into
mov
loopne
jns
add
add
mov
add
add
adc
dec
push
jno
lock
add
out
je
or
sub
into
test
sub
loope
outsb
jl
stos
mov
lahf
bound
out
jb
dec
int
push
xchg
xor
testl
es
cmpsl
add
out
add
mov
cmpb
push
lods
jo
add
push
pop
inc
fidivl
outsb
pop
mov
sahf
xchg
ret
mov
pop
sbb
add
imul
mov
or
xorb
add
popf
movsl
xor
adc
xor
cmpsl
mov
movsb
mov
jns
sbb
pop
rolb
sub
inc
lcall
add
lea
addb
aam
cmp
lock
jecxz
push
or
fiadds
mov
xlat
cld
sbb
sub
add
insb
cmp
pop
xchg
add
sbb
mov
in
adc
scas
in
dec
xchg
fs
out
adc
js
aaa
add
lahf
in
aad
test
jg
pop
push
jg
mov
stc
mull
shlb
inc
pop
leave
pop
in
add
mov
jo
ljmp
mov
mov
push
inc
or
add
sbb
fs
js
add
xorl
xorb
lahf
xchg
adc
nop
add
mov
add
mov
popa
add
sti
xchg
or
xchg
test
sub
js
adcl
dec
mov
push
arpl
ja
add
test
xchg
adc
dec
je
dec
nop
pop
xor
xor
sub
int
das
push
adc
cld
jbe
addb
jmp
sbb
inc
sub
xor
or
mov
in
mov
add
jp
cmpl
in
hlt
or
bound
hlt
aad
aas
mov
test
jmp
subb
push
bound
addb
stc
jl
pop
inc
ljmp
cmpsb
je
pop
add
lock
shlb
hlt
sti
and
sbb
and
or
pop
lds
mov
rolb
pop
lds
and
push
push
in
mov
jo
pop
dec
cmpsl
cs
jecxz
repnz
pop
aaa
jne
pop
incb
inc
lods
sbb
fadds
test
push
xchg
sbb
rcl
adc
bnd
or
pop
mov
mov
pop
or
adc
pop
ret
je
adc
jmp
sbb
and
dec
jmp
loop
hlt
arpl
imul
std
rorb
add
cmp
add
add
imul
mov
mov
add
mov
loope
adc
lret
jne
call
lcall
add
add
cs
xor
inc
sub
das
stc
add
ret
sidtl
xchg
sbb
fs
push
sub
adcb
xor
int
add
repz
add
lahf
orb
mov
mov
xchg
scas
cmp
add
cmpsb
sbb
push
cmp
fwait
sub
jnp
je
fdivrs
fldl
test
xor
insb
shrb
adc
icebp
int
jo
out
add
jnp
add
out
push
mov
pop
adc
cmpsb
rolb
cmpsl
gs
xor
mov
movsb
jge
pop
fldt
cltd
adc
pop
bound
add
pop
and
push
fcmovnbe
push
fs
cli
cmp
sbb
imul
inc
loop
nop
inc
add
jp
stc
add
mov
int3
add
aaa
add
cmp
cld
adcl
or
or
mov
and
mov
test
cs
add
in
test
mov
sbb
sbb
mov
mov
add
pop
cmp
add
mov
in
mov
ja
jl
add
sbb
add
jmp
mov
pop
fsubrp
or
pop
out
jo
add
mov
test
sbb
add
mov
push
aas
adc
rol
into
or
lea
mov
iret
sub
mov
adc
jnp
xchg
or
and
ficoms
adc
xor
mov
icebp
and
sub
cli
xchg
out
add
mov
ljmp
mov
and
push
inc
add
push
in
jno
xchg
in
cmp
out
subb
dec
int
and
mov
arpl
xchg
add
call
xchg
pop
in
mov
mov
dec
loopne
mov
add
adc
jl
out
mov
filds
sub
fcomps
add
jae
out
aaa
mov
pop
leave
mov
sub
cmp
dec
scas
cmp
sbb
dec
bound
inc
testb
repz
fistpl
xchg
cli
push
add
add
lods
add
shrl
pop
popa
add
mov
outsb
fwait
sbb
in
loope
pop
xchg
sti
inc
stos
mov
das
loop
incb
dec
add
sub
pop
jne
add
dec
sub
sbb
adc
xchg
xor
xchg
enter
cli
cltd
push
mov
push
mov
aaa
movsb
loopne
lret
adc
cmp
lods
insb
mov
xchg
inc
dec
rorb
jge
sub
subb
push
mov
inc
int
std
jns
pop
pusha
xchg
popf
in
out
sbb
dec
sbb
andb
in
addr16
flds
adc
xor
ljmp
push
aad
les
mov
aas
ficomps
add
mov
fs
hlt
add
add
out
imul
add
cmp
lea
rolb
insl
xchg
test
pushf
add
or
xor
subl
sbb
les
aad
ss
cwtl
add
out
add
dec
push
mov
dec
daa
sbbl
xor
adc
loopne
lods
and
roll
and
add
pop
dec
movsl
enter
add
mov
pop
xor
xchg
and
push
jl
jo
add
jns
jb
je
pusha
and
js
inc
mov
aas
jne
leave
dec
or
xchg
stos
ucomiss
test
shll
xor
jnp
add
cltd
jnp
pusha
mov
sub
jp
or
xchg
repnz
mov
mov
lahf
mov
out
push
xchg
sbb
and
add
loop
mov
insl
out
add
mov
push
std
movsb
sti
inc
xor
shlb
jp
xor
or
xchg
jnp
push
push
xor
int
movb
add
bound
jp
mov
in
add
xchg
dec
ja
sub
add
stc
inc
dec
add
and
and
movsb
mov
inc
xor
or
scas
mov
testb
mov
mov
mov
das
add
jns
pop
dec
inc
int
mov
xor
arpl
out
push
add
pop
xchg
insb
loopne
iret
mov
aad
enter
loop
xchg
mov
pop
mov
pop
cmp
add
mov
out
sub
clc
pop
xchg
cmpsl
and
insl
inc
jp
mov
or
pop
mov
xchg
ds
subb
sbb
mov
cmp
add
mov
sub
add
adc
shrl
addl
push
fidivrl
hlt
jl
xor
mov
add
sbb
out
test
sub
jo
in
cmp
out
push
lods
add
add
leave
cmp
insl
add
mov
add
mov
add
hlt
adc
repnz
and
nop
or
mov
or
inc
and
lcall
lock
fs
xor
and
push
pop
cmp
cmp
fdivr
pop
mov
jb
dec
mov
dec
jmp
and
mull
add
pop
insb
xor
aad
pop
add
jecxz
roll
loopne
std
lcall
pop
movb
add
push
mov
add
cmpl
enter
xor
rol
icebp
and
mov
dec
je
add
imul
data16
sub
in
xchg
pusha
xlat
cli
ljmp
sub
add
dec
xchg
ja
fmuls
in
adc
dec
inc
jns
jl
sbb
jae
call
push
add
test
shlb
adc
add
lock
sub
push
in
adcb
mov
rcrb
inc
add
lret
clc
scas
stos
adc
inc
pop
lock
push
cmc
mov
mov
xchg
insb
and
sarb
scas
push
fiadds
mov
rcrl
mov
lret
mov
push
loopne
or
add
push
lods
fistpll
movups
dec
andb
cli
icebp
adc
sbb
hlt
shlb
add
lret
fcomi
movl
xchg
test
sub
push
fs
mov
add
jae
enter
lock
int3
loopne
push
ss
mov
scas
or
test
inc
paddw
cmpb
ds
inc
add
sarl
insl
inc
fsubrl
inc
push
into
cmc
or
and
scas
cwtl
addb
push
jb
adc
lods
add
pop
xchg
dec
mov
aad
add
cmp
mov
jne
jae
rcr
adc
shr
pop
add
data16
mov
push
mov
movb
sbb
fdivrs
push
dec
cmp
mov
inc
inc
mov
lret
sub
mov
out
jge
add
iret
add
xor
push
leave
pop
sbb
cmp
jo
addr16
sbb
fisubrl
xor
shlb
dec
lods
cld
add
in
push
stos
add
nop
push
cmp
mov
shll
dec
inc
leave
pop
loopne
shlb
scas
jb
ret
mov
mov
sub
pusha
mov
push
push
inc
fwait
mov
mov
aaa
popa
fld
enter
pop
insl
add
pop
push
faddl
cmp
xor
jge
pop
in
sbb
pop
and
cmp
fwait
insb
scas
sbb
sub
cmp
add
ficompl
jp
add
xor
xchg
push
sbb
cmp
clts
and
cmp
add
fisttpll
les
pop
xlat
stos
add
mov
mov
adc
ret
nop
test
lods
filds
stos
rorb
das
add
mov
int
add
faddl
pop
push
cmp
les
fldt
lock
push
lcall
test
mov
add
lods
add
lahf
sub
push
sahf
outsl
and
add
and
pop
dec
addb
pop
adc
pop
mov
xchg
lock
sub
in
xor
mov
ds
dec
inc
jmp
pop
or
inc
push
cmpsl
inc
ss
inc
pop
pop
push
adc
mov
loop
inc
fidivrl
cltd
loopne
hlt
sbb
cmp
push
gs
rclb
adc
insb
mov
test
subb
stos
mov
dec
lcall
adc
stos
and
jge
push
aam
push
shlb
and
sbb
bound
jg
and
out
fsubl
aam
daa
pop
or
push
mov
call
dec
cltd
pop
adcl
pop
dec
add
repnz
mov
in
mov
jbe
add
cmp
cmp
xlat
cli
push
inc
push
xor
mov
ds
mov
mov
jae
inc
add
sub
lahf
cwtl
mov
shlb
mov
add
push
fwait
push
jge
fisubrs
pop
mov
xchg
loope
add
mov
mov
int3
or
and
sbb
add
push
push
lahf
addl
xchg
lock
xchg
push
stc
and
imul
dec
xor
xchg
call
mov
cld
and
jg
xrelease
adc
mov
js
jge
fld
mov
outsb
add
test
imul
sub
push
divb
add
add
addr16
push
ljmp
dec
js
iret
mov
pop
push
cmp
add
out
std
sub
push
and
loopne
sub
sub
add
pop
sub
out
test
stos
xchg
jecxz
in
bound
xchg
add
les
cmp
es
test
add
ss
sti
cmp
shl
loopne
or
fnsave
jmp
xor
rolb
sbb
or
and
mov
cld
mov
jle
loopne
inc
add
cmpsb
jge
outsb
mov
and
xchg
adc
push
xlat
into
push
pusha
xor
add
ds
in
add
sub
add
add
sub
xchg
shlb
pop
mov
lock
arpl
and
ret
push
gs
add
xorb
mov
les
dec
cmp
out
cmp
aas
cmp
insl
cmpsl
aad
bound
jne
orb
inc
out
add
out
inc
pusha
imulb
add
leave
mov
cmp
hlt
sbb
jmp
pop
lret
fs
ret
pushl
cmp
jnp
inc
roll
push
sub
xchg
cmp
and
push
add
sbb
in
inc
loope
imul
inc
cwtl
lds
jne
fs
scas
lods
movd
in
pop
addr16
mov
pop
sbb
push
add
aam
ljmp
ret
jo
add
mov
icebp
cmp
sbb
out
xchg
push
fwait
sub
jne
mov
cmp
fcoms
mov
jp
xchg
imulb
jnp
and
adc
dec
push
rcrl
xlat
repnz
adcl
call
add
add
xchg
cmp
sbb
clc
test
out
push
push
dec
enter
iret
sti
out
add
shl
out
rorb
push
cmp
cmpsl
inc
repnz
aad
and
fcoml
xchg
xor
inc
xchg
cmp
sub
and
push
cltd
jns
jle
popf
out
sbb
imul
aad
adc
pusha
mov
sub
inc
out
mov
sub
adc
insl
pop
cli
js
cmp
sub
pusha
fwait
push
rorb
push
add
aas
sbbb
pusha
fbld
or
xchg
pop
push
ljmp
xchg
movsl
movsb
add
and
cmp
push
add
divb
jl
add
movb
sbb
cli
or
mov
lret
pop
std
adc
pop
shll
push
mov
add
jo
cmpsl
xor
cs
sbb
movsl
mov
mov
ds
xchg
adc
ds
add
cwtl
mov
in
add
fcmovnu
xchg
sub
lcall
cld
mov
add
mov
add
push
add
add
mov
add
int
xchg
ret
xchg
icebp
or
and
xorb
mov
test
ss
lock
pop
in
daa
sbb
xor
cmp
sbb
cmp
test
in
js
ja
jnp
cmp
out
cld
bound
add
daa
popa
dec
jge
lock
push
add
sti
push
mov
fstl
mov
add
popa
jge
mov
ljmp
ss
sti
cmp
dec
mov
add
or
adc
popf
push
in
mov
negl
or
or
inc
pushf
decb
enterw
cmpsb
mov
subb
shrb
add
pop
cmpsl
loope
shr
sbb
pop
fs
rcrl
jp
xchg
add
dec
cli
xchg
xchg
cltd
mov
adc
data16
add
sbb
jno
add
xor
push
and
adc
orl
mov
cmp
mov
insb
add
mov
sahf
add
outsb
mov
add
dec
cmpsl
or
pop
pop
mov
cmp
and
inc
xor
lods
add
jg
loope
inc
add
cmovl
push
popf
cwtl
push
iret
pop
jecxz
add
mov
push
mov
add
and
sar
dec
add
lret
ret
push
movl
sbb
cmp
lcall
int3
pop
test
add
xor
add
enter
out
rolb
loop
aad
imul
add
and
xchg
add
lcall
pop
mov
ja
xor
cmp
fiaddl
hlt
xchg
lcall
and
shll
mov
sti
inc
lock
mov
cmpl
inc
sub
mov
add
ljmp
pop
into
les
cmp
pop
fdivl
xor
popl
lret
fstl
andl
sub
pop
cmp
xchg
imul
xchg
or
add
ret
cmp
xchg
sbb
scas
lods
push
push
xor
push
shll
jns
lock
xchg
jp
or
xlat
loop
rorb
popa
cmpb
js
push
out
add
lret
sbb
mov
cmp
cmpsb
mov
popa
cld
add
out
in
adc
insb
mov
scas
add
fisttpl
pop
push
mov
mov
cmpsl
int
add
sbb
mov
mov
jmp
int3
add
jecxz
adc
data16
mov
xor
xchg
out
icebp
sbb
push
add
jg
stc
add
pop
cmpb
ja
std
bnd
cmp
add
push
dec
test
mov
stos
in
or
dec
movsl
fsubrs
xor
xor
leave
sti
inc
insl
aad
or
add
movsbl
mov
mov
push
lahf
add
xchg
sub
cmpsb
jle
into
adc
push
data16
add
ss
sbb
push
lock
loope
iret
mov
mov
add
stos
jnp
sbb
loope
testl
jmp
les
push
js
xchg
lods
and
aaa
imul
jns
pushf
push
pop
call
rcl
push
push
cmp
pop
add
movsb
insl
push
fiaddl
add
mov
add
imul
mov
mov
lret
add
add
jb
and
adc
imul
mov
dec
sbb
in
inc
sti
aas
push
xchg
call
out
out
push
sbb
mov
cld
fiadds
or
sarl
int3
or
ret
add
lock
add
leave
push
mov
or
push
mov
stos
or
lds
mov
insl
into
dec
add
dec
inc
xchg
push
pop
roll
xor
mov
mov
xchg
adc
jnp
or
push
pusha
popf
add
inc
mov
mov
dec
movsb
rcll
jmp
mov
pop
inc
gs
jmp
jae
jg
or
repz
and
xchg
and
fwait
int
je
leave
add
pop
mov
mov
cmp
mov
pop
inc
sbb
fs
ss
push
ret
pushf
into
addb
add
das
inc
add
sbb
lcall
lret
dec
sbb
mov
jmp
add
test
aas
loop
sti
hlt
mov
das
sub
subl
inc
add
dec
cmpsl
imul
cli
push
movl
test
cmp
add
xor
mov
add
mov
add
xchg
dec
leave
cmp
data16
add
xor
dec
into
sbb
adcl
sub
adc
adc
xchg
nop
dec
mov
cwtl
dec
into
add
pop
fs
stos
lds
stc
test
fiadds
outsb
mov
jecxz
ror
in
add
jmp
decl
add
mov
gs
inc
sbb
push
movlps
and
icebp
rol
add
sbb
arpl
lcall
mov
pop
or
idivl
mov
xchg
mov
cli
adc
cmp
loopne
jg
in
test
pop
and
pop
sbb
rclb
loopne
pop
stos
jg
and
out
inc
pop
adc
xlat
inc
add
push
loope
aam
dec
add
sub
mov
add
es
add
inc
roll
mov
sbbb
push
inc
call
push
bound
hlt
mov
cmpsl
outsl
ficoms
shrb
inc
jns
add
xor
mov
add
lahf
jnp
mov
test
xchg
xchg
in
cmc
add
mov
lret
add
pop
std
adc
add
push
test
cmp
iret
fldl
add
push
icebp
cmp
call
sub
sub
adc
add
aas
lds
cs
insl
xor
xor
push
lods
pop
mov
cmpsl
incb
pusha
loop
sbb
mov
dec
dec
sbb
cmpsl
jbe
jo
pop
fs
push
imul
inc
jo
and
pop
jbe
push
loopne
push
lods
sub
mov
loop
xor
fsubl
add
push
adc
and
push
add
scas
ficoml
ret
or
adc
jg
add
fidivrs
in
leave
inc
cmp
movl
icebp
pop
xchg
xor
test
cmp
cli
loope
pop
test
add
dec
movsb
xor
push
add
sbb
dec
cli
rorl
test
data16
fiadds
sbb
sbbb
adc
add
cmp
pusha
xchg
loop
andb
inc
or
dec
and
add
inc
adc
outsb
add
ret
add
push
out
out
add
mov
lret
push
add
pusha
shlb
imul
cmp
gs
xchg
fwait
testb
adc
add
pop
sahf
fildl
xchg
xor
add
cs
and
push
divb
cmp
and
add
std
and
or
mov
add
push
jo
sbbb
push
or
cwtl
and
dec
mov
jle
inc
scas
cld
pop
pop
ljmp
and
test
cmpl
sbb
mov
mov
mov
adc
cmp
push
add
xchg
push
xor
testb
stos
clc
incb
imul
test
push
push
stos
push
adc
incb
mov
mov
mov
ljmp
add
jmp
mov
xor
cmc
and
add
aaa
ret
xor
jne
std
lahf
fisttps
add
mov
mov
add
pop
mov
lcall
and
stc
or
rcrl
cmpl
mov
sarl
add
sub
jge
push
xchg
inc
pop
add
nop
rol
idivl
pop
punpckldq
ds
test
jnp
push
shlb
mov
mov
pop
cwtl
mov
addr16
pushf
and
sub
add
jge
push
repnz
scas
jnp
add
add
addr16
jns
stos
xorl
popa
mov
jmp
mov
nop
xchg
mov
inc
adc
cmpsl
fsubrl
out
pop
idiv
or
jecxz
push
mov
mov
cmp
or
in
scas
sbb
fcmovne
add
into
mov
fcompl
push
shll
pushf
mov
ss
dec
ffree
push
pop
add
hlt
loopne
jae
rcr
cmc
cmp
and
and
sbb
or
add
xlat
mov
inc
push
addl
inc
enter
cli
imul
inc
mov
sbb
xchg
ds
dec
mov
cmp
xor
pop
hlt
jns
add
std
or
mov
xchg
inc
arpl
pop
dec
data16
cmp
mov
mov
xor
add
mov
and
and
pop
add
sub
js
dec
xor
mov
jle
pop
cmp
xchg
mov
cmp
mov
shll
or
fiadds
das
fstpt
lods
lock
xchg
loopne
pop
or
add
sbb
sbb
mov
rclb
jl
mov
pusha
or
sahf
aam
mov
sbb
add
std
adc
inc
lret
subb
and
andb
test
insb
test
xor
pop
imul
inc
popa
ljmp
out
andl
lret
inc
cltd
fbstp
add
jne
add
adcl
add
test
sub
ja
rolb
loop
pushl
mov
push
sti
adcl
fisttps
popa
inc
mov
iret
mov
cwtl
xchg
test
inc
cmpsb
push
xchg
sub
push
mov
dec
cwtl
cwtl
xor
pop
inc
int3
lds
scas
cmpsl
pushf
lret
imul
mov
repz
loopne
mov
lahf
pop
ror
jge
sub
cwtl
add
insb
fadds
push
sbb
jns
sbb
and
ds
cltd
add
mov
xor
sbb
or
jmp
mov
lods
sub
sbb
push
fucomp
pop
jmp
loopne
or
add
add
xchg
cmp
loope
jl
adc
push
or
lahf
scas
cwtl
jl
dec
mov
test
fistl
push
adc
test
inc
inc
sarb
fnsave
inc
out
dec
mov
and
stc
std
fcoms
test
push
add
cld
loopne
xchg
push
pop
mov
pop
into
add
cmpsb
or
in
sbb
in
and
xchg
flds
dec
lea
adc
imul
add
shlb
jnp
push
frstor
int3
hlt
sub
add
jge
push
js
push
xchg
push
push
inc
out
mov
fcomip
int3
or
mov
loope
pushf
sub
jecxz
je
add
mov
mov
dec
jmp
popf
xchg
pop
sbb
sbbb
mov
mov
dec
insl
jle
nop
add
inc
mov
bnd
pop
inc
xchg
sti
aad
or
push
test
sub
and
add
xor
pop
cmpsl
sahf
push
add
ljmp
add
aas
adc
add
jg
sbb
jl
mov
mov
cmp
out
mov
out
addr16
shr
or
push
add
inc
dec
or
adcb
xlat
and
adc
push
and
push
ret
add
idivl
cmp
and
sub
daa
jo
add
test
add
pop
ds
pop
mov
mov
out
xchg
add
cmp
int3
andb
aad
jae
dec
and
imul
jo
bound
fcoml
addb
add
pusha
sub
cmp
les
out
fiadds
pop
imul
mov
scas
add
clc
add
xchg
add
push
xchg
enter
test
shrb
lcall
push
cmp
and
xor
cltd
sub
in
and
jae
and
nop
pop
jne
add
dec
xchg
repnz
testl
add
ret
stos
inc
mov
ljmp
sbbb
sbb
rorb
pushf
loopne
add
fidivl
dec
jle
int
sub
sbb
test
data16
sahf
or
ret
sti
jno
pop
lds
outsb
lret
mov
push
pop
jg
lock
loope
push
movsl
adc
sbb
mov
fnstcw
or
lahf
push
mov
scas
lock
pop
nop
cld
cmp
lds
pusha
adc
add
pop
xor
rolb
in
shl
inc
add
call
add
test
add
aad
inc
dec
dec
add
cmc
fnstenv
mov
ja
push
add
push
leave
incb
jle
in
jns
jp
add
xor
test
cmp
ror
adc
cltd
or
add
xchg
xor
mov
mov
ds
rorb
ja
cmp
bnd
fmull
mov
inc
cmp
add
arpl
jg
add
fstpl
or
add
test
add
das
adc
mov
shll
lock
mov
mov
ficoml
shrl
xlat
add
pop
fdiv
and
pop
loopne
leave
gs
cmpsl
jno
rolb
rol
mov
mov
jle
out
inc
bound
rorl
add
add
mov
out
mov
cltd
pop
pop
loop
push
test
nop
out
push
add
hlt
insb
dec
cltd
ss
cmpsl
mov
add
cmc
addl
nop
push
mov
lret
adc
xor
sbb
addr16
mov
push
shlb
aad
xor
inc
or
push
fistpll
loopne
push
repnz
inc
insb
ficompl
add
dec
push
test
add
rcrb
add
and
pcmpeqb
push
daa
or
cmp
stos
push
jle
add
fistl
fldcw
aaa
leave
push
mov
ljmp
cli
jge
into
es
clc
add
shll
lahf
sarb
sub
add
mov
add
jl
cli
add
sti
mov
or
aas
roll
sbb
add
and
jnp
dec
add
mov
lcall
outsb
cmp
add
jle
cwtl
cli
add
imul
and
rolb
mov
and
shl
push
and
fbld
dec
add
or
test
push
mov
cmp
dec
andb
add
xchg
rcrb
cmpsl
and
push
sub
loopne
pop
mov
sahf
add
cmp
xchg
pop
rclb
iret
add
pop
jbe
stc
mov
test
cwtl
adcl
fists
add
fadd
and
dec
and
mov
jae
shlb
sahf
sbbb
push
xchg
shr
test
popa
or
push
mov
xor
cmpb
mov
lds
iret
mov
inc
push
es
dec
stos
dec
fcoms
and
jno
fld
mov
pop
pop
mov
mov
out
dec
clc
push
popl
xchg
ds
xor
lds
sbb
fisubrs
add
mov
js
inc
xchg
es
aas
stos
push
sbb
push
ret
add
rorb
in
mov
daa
cmp
sbb
es
mov
and
insb
inc
or
mov
andb
cmp
or
jp
fwait
shlb
lahf
cmp
sete
out
pop
scas
je
jp
add
lret
adc
mov
push
neg
rorb
imul
sbb
adc
int
add
mov
cwtl
or
lret
push
out
adc
lock
popf
add
adc
arpl
aas
insl
pop
ret
sti
sbb
test
adc
test
fistps
add
pop
test
stos
add
pop
jnp
nop
ja
xchg
sarb
jb
loop
mov
push
add
dec
mov
call
mov
pusha
loopne
add
inc
pop
ss
add
mov
adcl
mov
jmp
sbb
and
ret
cli
push
pop
mov
cmp
addb
movl
jno
fwait
call
cli
into
pop
push
sub
adc
inc
rorb
cmp
mov
enter
movb
scas
jl
xchg
pop
clc
outsb
mov
arpl
mov
and
push
movswl
cli
out
loopne
jne
rcl
test
test
pop
add
jno
cmp
inc
ljmp
orb
sarb
loop
and
xor
cmp
popa
jnp
push
add
add
or
add
cwtl
mov
xchg
xchg
arpl
xchg
movsb
in
roll
testb
mov
aas
pop
adc
sub
out
add
pusha
ljmp
adc
mov
pop
daa
sarl
iret
icebp
mov
cltd
jbe
add
jmp
jmp
dec
inc
fucomip
and
or
cmp
ret
mov
addr16
mov
cwtl
and
loop
add
or
jbe
rcr
sub
xor
cld
pushf
add
jb
outsl
sub
add
fcom
or
sarl
push
add
scas
push
add
or
insl
push
inc
add
mov
pop
inc
int
jns
in
gs
js
int3
dec
adc
mov
inc
fiadds
or
in
inc
pop
pop
and
cmp
std
mov
and
out
push
mov
xchg
inc
shlb
sbb
adc
add
pop
pusha
dec
mov
add
xor
pusha
in
jo
stos
add
dec
loop
stos
push
dec
mov
pop
cmp
lock
push
or
inc
dec
lods
repnz
mov
lret
mov
ljmp
mov
mov
test
push
add
and
movb
or
jnp
add
add
cltd
pop
jmp
xchg
movsl
add
sbb
addr16
dec
add
cwtl
and
movsl
dec
ja
add
lods
push
gs
and
and
dec
outsb
lds
xor
jg
jle
and
xor
mov
mov
adc
jl
add
add
dec
push
movsb
imul
std
bnd
negb
add
fsubrl
pop
add
jbe
es
pop
out
mov
mov
add
mov
mov
cmc
aaa
pop
adcb
cmp
and
add
ret
gs
cld
sbbb
shlb
pop
mov
inc
and
lret
js
cmp
inc
shlb
out
cld
or
sub
add
cmp
inc
loope
pop
mov
xchg
sahf
add
pop
shlb
mov
mov
or
loop
cli
mov
inc
aam
cmp
imul
push
lods
pop
dec
lret
test
adc
jno
pop
test
lock
inc
push
mov
push
sti
rcl
push
jp
loop
test
xor
xorb
iret
mov
roll
icebp
sub
add
xor
push
pop
add
loope
add
pop
ficompl
fiadds
add
pop
push
pusha
leave
sbbb
arpl
jne
repnz
add
jae
aaa
sti
fcmove
popa
inc
add
cltd
fidivrs
pop
inc
mov
inc
fcompl
jle
adc
and
out
add
jo
sub
mov
dec
cmpsl
insb
or
sub
cmp
dec
pop
add
cmp
pop
jb
adc
pop
inc
xchg
js
mov
cld
or
das
dec
mov
imul
idivb
pushf
add
lret
ds
pop
mov
call
cmp
add
aad
adc
jp
mov
and
sbb
incl
in
enter
push
dec
add
adc
mov
shlb
in
push
inc
mov
add
aaa
arpl
sbb
adc
dec
decl
in
sub
inc
fstps
lods
filds
or
ds
mov
ss
sub
xor
insb
xchg
aam
push
mov
test
enter
pushf
add
fldenv
fisubs
sbb
insb
add
and
add
push
popf
push
add
jns
add
andb
mov
in
shlb
add
stc
pusha
out
or
fs
pop
fmuls
addr16
shlb
cmp
mov
sub
pop
push
addb
jns
test
xor
imul
inc
xchg
test
push
lret
in
test
adc
inc
adc
in
out
adc
xchg
add
inc
mov
stc
sbb
xchg
ljmp
pop
or
loopne
jmp
adc
push
nop
add
movsl
ja
xor
mov
push
xchg
xchg
inc
in
sbb
lea
loope
cs
mov
out
pop
cmp
popf
add
or
xorb
jecxz,pt
sbb
subb
inc
sahf
push
dec
clc
test
or
sub
add
in
jnp
testl
movsl
andl
cmpsb
loopne
xor
outsl
pop
lock
fwait
std
filds
jns,pt
subl
mov
xchg
cmp
ret
or
ljmp
je
inc
add
test
mov
mov
cwtl
inc
cwtl
roll
test
xchg
rol
sub
out
xchg
dec
in
lock
int3
dec
mov
cli
pop
and
push
loope
rcll
bound
mov
add
test
push
dec
lea
mov
push
lcall
adc
iret
adc
add
outsl
mov
inc
xor
pop
repnz
jle
add
jno
mov
add
nop
repz
cmp
iret
add
jb
out
add
mov
mov
iret
jg
xor
mov
inc
cwtl
lret
adc
lds
fildll
add
xor
arpl
mov
inc
inc
js
push
pop
pusha
cmp
repnz
add
cmp
fidivs
or
mov
and
jle
sbbb
lods
mov
out
add
and
add
xor
mov
and
push
rolb
in
js
xchg
stos
pusha
clc
add
jmp
or
or
add
call
sti
das
jne
mov
add
sbb
add
ss
add
fistpll
or
cmp
sub
xchg
ja
mov
imul
std
cmp
mov
arpl
sbb
cltd
jp
dec
mov
sbb
fimuls
roll
adc
xor
or
lock
outsb
push
in
lods
push
xchg
add
rolb
lock
jp
cmpsb
jns
pop
inc
into
adc
add
js
pop
loope
sub
and
fldenv
sbb
lea
and
cmp
add
shrb
loopne
add
std
mov
clc
fistps
dec
ja
shr
inc
jb
testb
lret
into
or
lea
out
inc
push
inc
call
into
mov
inc
pop
add
add
in
xlat
jno
mov
add
jg
fsubrp
sarb
das
mov
adc
pop
cmp
cwtl
hlt
jl
pop
insl
in
cmp
rorb
test
inc
jmpw
mov
pop
and
inc
jp
add
iret
xor
jb
addr16
call
loope
mov
mov
stos
rcrb
cmp
dec
aaa
jg
dec
mov
sar
lret
out
nop
xchg
pop
inc
pop
cmpsb
rclb
adc
jno
add
mov
sub
inc
mov
adc
scas
gs
xor
inc
out
aam
hlt
mov
xchg
push
shlb
jg
add
push
add
sbb
add
mov
loopne
lret
push
add
shrb
or
cmp
repnz
xor
insb
lahf
add
cmp
mov
ficoms
mov
pop
enter
sbb
mov
jmp
in
pop
ficoms
push
pusha
xor
cmpb
lea
lods
add
loope
aam
call
cld
int
stc
cmpsb
jl
rorb
mov
push
add
add
or
ja
pusha
rsm
pop
icebp
sub
add
enter
aas
dec
pusha
insb
mov
inc
push
daa
filds
aad
rcl
push
and
push
push
pop
pop
dec
mov
je
push
xor
fisubs
bound
cmpsl
andb
add
or
fs
add
jle
sbb
xor
or
dec
sti
stc
and
jbe
add
push
jecxz
jae
mov
xchg
sbb
add
mov
add
sbb
jno
repz
mov
cwtl
rcrb
ljmp
jo
add
push
and
jbe
cmp
aas
add
adc
jg
insb
stos
or
cmp
dec
pop
push
in
repnz
add
cmp
cmc
out
and
add
push
cltd
inc
je
and
enter
sub
int3
jo
repz
add
lods
add
inc
jbe
orb
mov
repz
out
pop
sbb
in
sbb
pop
pop
xchg
rorb
jbe
sub
inc
add
shlb
mov
push
or
mov
pushf
pusha
pop
push
int
add
mov
add
into
enter
add
cli
int3
lea
push
inc
negb
cmpsl
sbb
in
and
jo
hlt
in
bound
out
inc
pop
push
push
dec
xchg
sub
or
stos
add
pop
sahf
test
cld
lahf
faddl
mov
dec
add
cs
add
out
aas
arpl
add
mov
imul
fimull
test
insb
lret
dec
add
es
js
rorl
orb
inc
xor
outsl
fcoms
aas
lds
add
adc
dec
cli
mov
add
outsl
xor
push
dec
int
sbb
pop
pop
inc
stos
pop
dec
adc
pop
cmp
ljmp
add
fisubl
or
ret
pop
mov
andb
insb
add
pop
push
cmp
jb
push
je
pop
cmpsb
sti
adc
or
clc
dec
lods
push
adc
call
pop
scas
pop
cmpb
shr
jl
xor
xchg
stc
fcomps
mov
sbb
jp
jnp
push
out
pusha
imul
nop
xchg
in
dec
movsb
or
push
xchg
add
fcmove
xchg
add
or
cmp
arpl
rolb
ret
loop
test
cmp
add
add
cmpxchg
shl
jo
jnp
sbb
adc
in
in
lods
add
add
and
cmp
hlt
inc
mov
add
test
call
xor
jmp
inc
fists
data16
fldenv
nop
mov
jmp
inc
fisttps
mov
pop
int
add
loope
jp
cmpl
cli
and
add
jnp
cmp
addl
push
negl
les
loopne
popa
pushf
xor
lods
push
andb
out
cmp
jecxz
add
sbb
iret
cmc
xorl
push
adcb
sbb
push
jno
cmp
lea
inc
out
mov
fidivrl
lret
xor
mov
jno
insb
xchg
int3
sbb
test
pop
inc
mov
add
xor
adc
enter
cwtl
nop
pop
add
shlb
jne
and
pop
add
mov
jae
mov
add
cmp
cmp
fnstcw
inc
mov
lds
pop
sbb
and
cmp
bound
push
loope
ffree
int
and
jmp
das
andb
mov
out
rolb
adc
in
add
ss
daa
and
sbb
inc
test
ror
mov
shll
jl
test
loop
xlat
imul
cmp
sahf
mov
jg
xchg
add
out
and
jns
les
loopne
dec
push
add
mov
roll
inc
mov
add
xor
popa
mov
stos
or
xchg
jecxz
mov
pop
stc
mov
jb
push
dec
cmp
cltd
xor
sub
and
int3
outsl
sarl
gs
je
adc
jbe
in
cwtl
lret
inc
mov
mov
add
sbb
aaa
add
xchg
into
imul
pop
sub
arpl
or
imul
fdivrl
in
sarb
in
dec
mov
add
xor
xchg
add
test
out
lcall
push
cmpsb
jae
add
add
call
and
scas
xchg
pop
mov
or
std
inc
or
imul
add
jle
nop
jmp
cmp
sbb
sub
popf
sti
inc
aas
lret
shr
jle
sbb
mov
add
hlt
mov
popf
xor
jmp
sbb
or
loopne
cmp
or
dec
mov
sbb
pusha
loop
mov
outsb
mov
xor
lahf
in
movsb
push
pop
adc
ss
dec
jbe
shlb
add
shrb
add
inc
out
mov
rcll
cld
sti
mov
enter
scas
mov
push
add
jns
pop
dec
push
add
fnstsw
xchg
pop
incb
movsb
ret
inc
cli
xor
inc
int3
mov
jae
ss
inc
add
cld
insl
pop
mov
xchg
xchg
jo
outsb
cmp
add
mov
jle
inc
cmp
mov
negb
adc
add
shrb
ror
popa
push
cli
enter
fmuls
repnz
mov
jno
push
add
cltd
out
add
shll
adc
xchg
add
xchg
les
bound
adc
push
jae
ss
test
aaa
or
jl
xor
adc
push
add
sub
cmp
test
xchg
xor
push
inc
mov
mov
sahf
lret
lcall
lock
dec
xchg
jnp
sub
mov
adc
imul
sti
or
int
push
add
stos
gs
mov
xor
mov
repnz
and
pop
sarl
jp
adcb
mov
sbb
push
xor
int3
aaa
shll
in
scas
jnp
lret
out
shll
pushw
mov
mov
lds
push
dec
add
and
xchg
jecxz
filds
or
push
cs
push
pop
shrb
jno
cwtl
repnz
inc
shrb
fists
mov
jge
sbb
lods
daa
imul
pop
ret
lea
pop
xchg
mov
repz
fs
mov
sub
add
sbb
xor
int
pushf
jmp
cmc
gs
into
out
mov
and
or
clc
and
xchg
fmull
sbb
sbb
xor
popf
add
inc
add
outsb
cmp
stos
add
inc
test
push
sti
test
adc
pop
movsl
mov
lahf
scas
xor
mov
mov
nop
in
add
inc
sti
std
or
xor
pop
iret
rolb
cli
cmp
adc
int3
fidivrs
add
bnd
mov
test
add
rcl
xchg
xor
sbb
pop
pop
aad
ret
inc
cmp
mov
xchg
addb
rcll
aas
inc
sti
add
add
add
outsl
cli
jg
idivl
and
inc
ret
add
mov
jae
pop
jge
jg
add
adc
addl
sbb
xor
imul
or
movsl
pop
fs
jae
mov
cmpsl
test
add
rcll
add
int
idivl
push
addb
jnp
and
sti
mov
or
sbb
mov
sbb
nop
roll
or
and
mov
sbb
add
outsb
jmp
add
bound
add
mov
out
mov
jecxz
add
lock
cmp
addl
dec
jp
mov
ss
pushf
orl
push
stos
jnp
adc
jle
shlb
out
and
xor
xor
add
pop
dec
roll
movsl
cld
and
sub
push
jno
adc
dec
and
add
xlat
fadd
rclb
sub
mov
cmpb
mov
add
inc
out
out
aad
les
dec
and
inc
aam
jae
jp
xor
add
fnsave
mov
pusha
rcr
pusha
loopne
jle
push
add
mov
jecxz
test
xchg
insl
xchg
add
lret
dec
xchg
sbb
ds
dec
test
add
xor
call
sub
scas
jae
cmp
mov
jl
mov
inc
cld
xchg
add
sub
pop
mov
daa
loope
cmp
and
pop
imul
sub
into
int
mov
and
dec
mov
pop
iret
outsl
ffree
mov
sbb
mov
andl
or
insl
dec
mov
or
jl
push
xchg
les
out
pop
push
ds
sti
ror
xor
dec
rolb
jl
push
sbbl
ljmp
out
fiadds
add
movsl
loop
adc
cmp
jb
pop
jmp
jb
jl
nop
sub
xor
add
sbb
daa
lcall
mov
rcll
add
cmpsb
pop
lea
cs
sub
push
leave
iret
pop
and
adc
sub
jmp
cmp
adc
push
test
mov
in
ss
lcall
or
mov
dec
ljmp
xchg
fisubrl
outsl
dec
mov
mov
call
sbb
push
jno
jl
cmp
xor
xchg
xchg
xor
lock
add
popa
out
ljmp
int
sti
and
pusha
and
subb
in
leave
mov
mov
mov
clc
xor
mov
pop
sbb
mov
push
pop
cwtl
pcmpgtw
or
or
lret
push
add
stos
mov
out
jmp
popa
push
pop
add
mov
repz
add
jmp
jge
mov
mov
cmp
add
mov
or
xchg
lahf
mov
jmp
sti
sub
add
in
jmp
sub
and
pop
rorb
add
jae
es
roll
jo
mov
push
stc
cwtl
fcoms
jecxz
xor
ret
fidivrs
sbb
mov
mov
inc
add
dec
mov
and
sbb
sti
sub
sub
jne
lret
incl
cmp
sarl
fs
inc
fwait
rclb
icebp
ror
lods
ljmp
in
in
push
fsubl
in
mov
test
jmp
cli
push
add
push
pusha
cwtl
add
add
sahf
lret
xlat
mov
test
adc
mov
adc
scas
push
in
jb
aad
adc
xchg
cmpsl
adc
popa
rolb
sbb
add
mov
cmp
add
jnp
cli
in
pop
add
mov
mov
add
cmp
mov
push
sub
add
in
dec
pop
and
add
sahf
cmc
hlt
xchg
push
jo
pop
add
pop
push
jle
add
inc
lock
fdivr
pushf
add
lods
lds
lret
add
mov
rdmsr
rolb
popf
imul
daa
add
insl
inc
sub
dec
add
test
mov
push
lret
cmp
nop
enter
fwait
pxor
add
sti
int3
aaa
hlt
jmp
add
popf
sbb
cmp
or
movl
aas
pop
mov
sete
out
stc
lea
push
stos
mov
push
add
in
push
inc
jb
xor
add
addr16
add
cmp
sub
scas
add
test
and
loope
jp
jecxz
loopne
mov
addr16
loop
mov
jb
insb
fwait
in
call
test
jmp
dec
add
sbb
ret
insb
outsl
nop
mov
mov
push
and
jno
jl
cli
adc
mov
fwait
ljmp
fildll
mov
xchg
clc
repnz
sub
fistl
mov
data16
ljmpw
inc
push
sub
rorb
dec
lahf
iret
jbe
add
mov
jl
push
icebp
popf
add
push
ja
mov
lock
bound
jne
das
xor
jnp,pn
add
mov
in
popf
or
dec
mov
sbb
or
cmp
add
ljmp
add
jbe
les
sub
jae
xor
jmp
mov
repnz
lea
cmp
cmp
mov
adcb
add
mov
xchg
cs
push
cwtl
push
cld
sub
push
add
push
aaa
roll
adc
jns
add
outsl
movsl
rorl
mov
add
imulb
insb
test
cltd
sbb
push
outsl
mov
mov
popa
xor
test
repz
inc
jno
ror
add
adc
mov
add
lahf
test
mov
incl
and
repnz
clc
cmp
lds
loopne
push
sbb
pop
in
dec
push
push
mov
aad
mov
add
dec
pop
fidivrs
mov
or
jnp
repz
das
dec
mov
add
rcl
ret
cmp
add
std
outsl
add
stc
and
in
repnz
das
loopne
dec
call
incl
mov
insb
sarb
add
ljmp
in
and
mov
mov
das
cmpsb
movsb
add
pop
cmp
insl
mov
sub
ds
add
cmp
pusha
xor
or
insl
bound
adc
xchg
shrl
clc
pop
add
aas
xchg
into
add
cmc
dec
xor
push
fldl
dec
pop
and
in
clc
push
mov
sahf
aaa
or
insl
push
hlt
inc
jg
add
notb
push
push
in
add
movsb
cmp
mov
push
scas
cwtl
jg
sub
lea
sbb
jnp
adc
cwtl
xor
out
stos
test
outsl
vgf2p8affineinvqb
shrb
testb
xchg
sub
inc
add
insb
sbb
repnz
jle
dec
jmp
and
fldl
dec
cmpxchg
pusha
and
mov
xor
lea
outsb
xchg
jmp
pop
mov
xor
or
test
jg
xor
movsl
js
arpl
jnp
pop
or
pop
adc
push
fs
xchg
add
js
cs
ret
dec
test
sbb
aam
insb
push
adc
ljmp
push
cmp
cmp
mov
mov
mov
push
push
push
and
rcrb
pop
insb
jo
pop
and
jp
push
mulb
mov
add
mov
sahf
pop
cli
mov
insb
bound
pop
mov
inc
add
push
cmc
cmpsl
adc
clc
testb
inc
jno
dec
pushf
loope
add
inc
pop
out
xchg
pop
jno
or
pop
imul
xchg
sub
jmp
lock
fisubs
add
jne
sub
jb
add
dec
cmp
popf
dec
push
shlb
xor
jns
bound
std
mov
popa
push
add
adc
mov
and
cmc
pop
xlat
mov
mov
sbb
fdiv
add
or
pushf
popf
dec
and
sub
jae
push
xchg
push
cld
in
shlb
jne
ret
ret
loope
add
in
shll
rol
popa
pop
xchg
jbe
cmp
cmp
les
imul
push
xchg
pop
cmpl
jae
hlt
add
jmp
repz
loop
jno
ret
or
and
adc
arpl
cmp
lret
mov
adc
pop
sub
xchg
inc
lcall
inc
bound
add
adc
out
ret
in
fiaddl
adc
sub
add
scas
mov
add
mov
cmp
mov
add
pusha
outsb
mov
add
push
outsl
add
add
fadds
push
or
and
stos
jnp
add
xchg
jg
jb
pop
push
cmp
cwtl
mov
shlb
jp
enter
add
repnz
shr
adc
pop
add
leave
add
ret
mov
popa
cmp
add
and
fnstenv
cmp
sbb
sti
mov
push
or
add
bound
sub
xchg
movl
out
sti
push
movswl
shrb
lahf
out
popf
dec
add
addr16
les
lret
push
arpl
cmp
lds
mov
leave
and
gs
ss
and
add
jmp
xchg
rclb
jg
cmp
jmp
lahf
jo
aas
mov
aas
add
or
mov
loopne
cli
sbb
mov
sahf
insl
divl
inc
lock
ret
adc
shll
sub
add
daa
fwait
push
int3
jg
add
cmp
and
add
and
mov
mov
sub
es
cld
add
test
add
test
jae
push
xchg
or
roll
mov
jbe
add
jnp
add
ja
jge
cmp
cmp
aas
in
xor
lock
add
imul
test
ffree
add
test
int
rcl
cld
or
push
mov
pop
sub
or
add
pusha
inc
imul
add
jbe
push
movsl
sti
pop
add
pop
mov
or
sub
cmp
cmp
arpl
mov
push
sub
aam
pop
iret
in
sarb
neg
pop
stc
in
sub
bound
pop
mov
mov
imul
pop
daa
mov
jmp
jno
mov
mov
jb
dec
sbb
les
add
push
aas
data16
inc
fldenv
into
add
pushf
dec
test
cmpsl
pop
jo
adc
pop
sti
jecxz
and
add
je
jmp
jmp
mov
test
rcr
mov
add
or
jbe
dec
addl
jo
xchg
inc
inc
add
pop
push
roll
shlb
or
cmc
jnp
icebp
in
clc
incl
cmp
xchg
popf
pop
aam
sub
cltd
clc
gs
jae
mov
jnp
inc
xchg
test
out
add
xchg
stc
lods
pop
dec
add
movb
out
xor
dec
mov
dec
add
mov
cmp
sbb
pavgb
in
adcb
test
dec
mov
pop
imul
dec
xchg
aad
fs
xchg
arpl
add
mov
mov
xchg
movsl
xor
cmc
aad
sbb
sbb
lods
int3
hlt
push
add
imul
jge
mov
push
cmp
mov
nop
cmp
addr16
ret
cmp
pop
sbb
int3
stos
ret
mov
jl
xchg
push
outsl
add
and
int
and
xor
mov
or
ret
das
push
lods
xchg
in
pusha
inc
iret
dec
fwait
mov
sti
test
jno
add
lret
inc
test
or
test
cli
add
dec
sub
les
cltd
inc
movsb
jg
add
sbb
mov
dec
add
inc
ret
inc
out
mov
ficoms
xchg
lods
subb
loope
push
add
popa
pop
adc
negl
jle
mov
sahf
mov
lahf
stos
add
hlt
ja
pop
or
and
xor
mov
xlat
test
popa
sbb
jno
sbb
aad
loopne
inc
sbb
dec
popf
inc
data16
pusha
push
push
out
add
sub
sub
and
sub
ret
aas
xchg
sbb
hlt
out
cmp
pop
add
out
mov
adc
mov
mov
int3
add
mov
xor
mov
repz
jg
dec
andl
shrl
ror
test
loopne
add
xor
inc
test
xchg
mov
in
divl
xor
jae
cmp
ljmp
cmp
arpl
inc
push
popf
or
repz
lock
in
sbb
add
inc
push
add
iret
rorb
fwait
inc
add
ds
movd
add
or
aas
jmp
push
cs
xor
loop
punpcklbw
mov
jae
push
lret
hlt
icebp
dec
add
dec
jns
sub
mov
add
pop
aad
std
cmpsb
cmp
adc
scas
xor
sub
ljmp
imul
sbb
add
push
sahf
adc
add
out
and
jmp
jge
and
mov
pop
add
xchg
pusha
push
scas
inc
inc
mov
xchg
pop
add
loopne
cmp
fiadds
xor
push
adc
xchg
pop
mov
data16
out
cmp
sub
add
inc
scas
jl
sbb
pop
cld
jne
xchg
jno
jecxz
dec
or
push
inc
xchg
cli
add
jo
jb
aas
sub
cmp
pop
adcb
enter
push
sbb
and
or
testl
shr
cltd
add
mov
push
sbb
xchg
jl
mov
cmc
add
jmp
mov
inc
sarb
jnp
add
rorl
add
roll
cmp
mov
xchg
add
or
inc
dec
mov
and
push
lret
mov
and
add
jae
pop
inc
movl
push
addl
mov
cmp
leave
xor
add
dec
push
rolb
add
jp
inc
in
xor
je
adcb
adc
bound
sub
add
push
xor
lcall
mov
sarl
xor
add
int
push
push
xchg
in
cmp
adc
mov
xor
xchg
or
sar
ss
movsb
shlb
xchg
sub
loopne
sub
loop
adc
cmpsl
pop
xor
cwtl
add
vmptrld
cmp
and
inc
or
jnp
cmpb
mov
add
mov
ss
add
xchg
nop
jbe
and
xor
idivl
out
pop
xor
nop
inc
roll
pop
repz
mov
adc
sub
imul
cmpb
mov
sub
out
repz
adcb
push
add
add
cmp
xor
js
pop
push
pop
inc
xor
sub
popa
jno
add
in
jl
sysret
std
mov
ss
out
jle
rorb
test
cltd
and
add
es
push
aad
adc
nop
add
iret
shll
loope
inc
and
lock
add
andb
pusha
add
jle
fdivl
sub
fs
xchg
jecxz
mov
int3
lret
push
sarl
pop
ret
xchg
adc
fucom
cmp
jge
xor
lret
pop
xor
sub
icebp
cmp
idivl
add
or
fdivrs
push
xchg
clc
jnp
cmp
jne
sar
loop
pop
maskmovq
negl
ljmp
xlat
cmp
adc
sbbb
or
push
and
or
movsb
mov
cmp
push
xor
add
fistl
je
pusha
test
and
sbb
adc
pop
adc
push
repnz
lea
or
dec
ret
cmpsb
push
inc
je
ljmp
add
add
out
and
outsb
and
add
xchg
outsl
test
bnd
ljmp
or
lahf
repz
pop
in
mov
roll
or
daa
xchg
clc
and
ljmp
mov
lahf
je
bound
out
mov
xor
jnp
inc
insb
cld
add
fadds
or
gs
xor
xchg
lret
xchg
call
add
mov
aas
jae
fldl
and
test
js
xchg
push
mov
pop
xchg
cmp
adc
push
int3
scas
nop
add
adc
into
mov
sbb
adc
popf
jno
inc
pop
pop
add
adc
xor
cmpb
mov
jmp
jl
cmp
mov
iret
mov
lahf
sbb
dec
test
das
rolb
and
test
xchg
push
or
repnz
cmp
push
adc
jae
inc
test
int3
int
or
js
mov
add
jge
or
rolb
add
cmp
add
push
xor
inc
cmp
dec
add
out
pop
pop
jmp
add
xor
mov
adc
stos
rcl
in
mov
xchg
push
test
xor
call
stc
pop
dec
ds
pop
ss
shlb
add
jge
inc
aam
rol
aas
aad
loopne
daa
sbb
xchg
jl
pop
shrl
inc
outsl
inc
mov
out
mov
and
cmp
pusha
aam
sbb
pop
dec
mov
lea
mov
movsb
jge
add
mov
add
xchg
jne
push
test
fmuls
inc
cmp
adc
cmpsb
jg
imul
xchg
dec
repz
adc
xor
cmp
xor
movsl
cmp
dec
push
and
ret
add
mov
sub
sub
jb
jae
add
int
add
pop
mov
lahf
dec
mov
aad
xchg
enter
jo
add
xchg
sbb
mov
rcr
xchg
mov
mov
movsl
push
dec
nop
sub
lea
xchg
xchg
setnp
ja
mov
jl
repz
ss
rorb
subl
decb
add
stc
and
mov
add
int
mov
push
mov
jp
in
sub
pop
jle
sub
adc
or
inc
xor
add
mov
lahf
push
fdivr
jecxz
jnp
and
test
sarb
add
inc
mov
push
adc
shrl
lret
loop
jle
cltd
test
sub
mov
addl
jl
jmp
mov
dec
ds
adc
leave
add
clc
xlat
adc
add
push
sahf
mov
and
adc
or
mov
push
push
mov
or
mov
jbe
mov
or
enter
mov
inc
call
push
lret
dec
dec
mov
stc
push
push
mov
xor
jp
add
push
or
popf
clc
jne
mov
jno
sub
int3
xchg
mov
and
xlat
push
jmp
mov
add
ret
dec
add
add
imul
add
lret
icebp
mov
outsb
movsl
push
jno
and
xchg
dec
pop
fwait
insl
add
daa
and
add
push
stos
aam
add
fsubl
add
pop
jne
push
sbb
arpl
cmp
cmp
xor
mov
out
cs
jo
ja
add
faddp
lret
add
add
aaa
imul
inc
in
out
sub
add
into
pushf
mov
add
stos
dec
cmp
testb
stc
or
add
add
dec
jp
out
js
mov
adc
mov
insl
add
dec
pop
jge
mov
outsb
test
or
xor
sub
mov
in
adcb
cmp
call
xor
cmpsl
or
cmpsb
jl
inc
subl
outsl
jae
jg
lcall
stos
or
call
jecxz
sbb
and
sahf
xor
testl
aaa
pop
inc
sub
pop
xchg
ss
push
movsl
clc
lock
scas
scas
xor
out
hlt
sbb
insb
push
lods
jb
xchg
push
add
xchg
sub
push
fisubl
mov
rcrb
les
cli
mov
ss
inc
in
add
xchg
add
adc
cwtl
or
cmc
aas
push
sbbl
addb
push
pop
inc
lods
ret
add
or
in
stos
pusha
ficomps
lods
dec
lods
sbb
mov
mov
add
jp
sbb
aam
add
mov
or
cmp
popf
xor
push
in
in
and
cmp
loop
pop
adc
sarl
fadd
add
je
popf
inc
mov
pop
mov
rolb
rcrb
dec
pop
jle
shlb
outsl
cmp
test
testb
aaa
hlt
xchg
int
and
cld
xchg
sbb
aas
jbe
in
push
ds
sbb
and
add
jno
mov
lock
dec
inc
pop
push
sbb
pushf
out
ret
sbb
pop
add
mov
add
adc
sbb
dec
lods
dec
add
mov
shll
push
out
cmp
psubw
pop
adc
push
sahf
in
xor
mov
imul
push
ja
add
push
xchg
push
insl
test
hlt
test
lock
pop
add
add
push
dec
fcoms
sub
fwait
mov
cmp
popfw
sub
mov
inc
and
push
mov
xor
or
push
lea
loop
test
xchg
add
popf
adc
out
add
lock
xor
adc
inc
and
and
mov
pop
test
sub
aaa
lods
jge
push
mov
stc
pop
fcoms
add
adc
addr16
pop
sub
add
and
adc
enter
out
xchg
sbb
add
push
cmp
pop
stos
sbb
adc
faddp
mov
push
mov
popa
mov
add
and
sbb
sbbb
dec
in
mov
dec
mov
aam
in
mov
add
stos
repnz
roll
adc
jl
fwait
ret
adc
in
pop
adc
sbb
mov
enter
cmp
sbb
cmpb
jnp
mov
stos
dec
add
jle
outsl
adc
cli
add
sub
sbb
inc
jg
cmp
push
out
fcom
test
xchg
ss
rolb
jp
pop
add
sbbl
test
mov
sbb
out
sbb
icebp
js
cmpsb
mov
mov
mov
scas
cli
add
mov
pop
add
cmp
enter
push
inc
fs
mov
add
mov
pop
lods
xor
xchg
mov
and
cmp
loope
or
shll
add
xchg
lods
xor
add
stc
hlt
div
add
andb
cli
cmp
jo
out
ss
xchg
add
sbb
cs
mov
lret
xor
movsb
push
xchg
jl
add
pop
inc
dec
add
jnp
insb
sbb
mov
dec
ret
aam
xchg
adc
or
loop
out
push
movsb
sbb
call
shl
and
sub
insb
gs
leave
push
mov
rol
out
pop
mov
cwtl
xor
mov
xor
lods
xchg
clc
mov
mov
loopne
xor
ret
pop
add
aad
sub
dec
dec
add
fdivl
loop
push
xchg
out
pop
mov
sbb
jbe
inc
shlb
cmpl
mov
jmp
std
jg
sahf
mov
push
add
add
pop
inc
push
xchg
mov
cltd
jne
add
movsb
mov
fsub
add
outsl
fidivrs
filds
mov
jns
xor
in
push
testl
xchg
stc
aaa
mov
add
pop
movq
aam
mov
call
cmp
orb
mov
cli
cld
sub
push
mov
test
ds
les
pop
lret
addr16
add
popa
repnz
jmp
mov
xchg
cmp
and
nop
dec
add
rcrb
popf
add
inc
aad
pop
dec
sub
pusha
cld
mov
and
sbb
push
loopne
push
add
xor
fwait
push
repnz
je
cmp
sub
jmp
insb
mov
repz
mov
ret
add
mov
and
dec
pop
cmpsl
orb
int3
rcl
cmovp
add
inc
lahf
lods
adc
jne
add
sbb
dec
icebp
cmp
sub
pop
push
cmpb
push
jle
cmp
mov
pop
dec
mov
sbbb
dec
aas
xchg
add
sub
repnz
in
pop
outsl
pop
push
mov
mov
xchg
add
scas
lret
repz
jmp
add
push
sbb
pusha
sub
jmp
cwtl
adc
lret
dec
push
loopne
call
mov
pop
add
movsb
and
add
push
inc
dec
rcll
mov
xor
xchg
nop
les
popa
lea
xchg
and
mov
sub
fdivrs
sub
in
popf
add
fcomip
bound
int3
mov
call
xor
cmpsl
push
inc
nop
and
pop
add
inc
sbb
in
cmp
pop
movsl
negl
cmc
add
cltd
mov
and
arpl
scas
xchg
or
je
idivl
cwtl
pop
andb
aas
cmp
add
cmp
add
test
lods
es
mov
jl
mov
rcll
roll
enter
ljmp
push
int3
xchg
push
fiaddl
out
mov
cmc
lea
dec
out
push
pop
inc
jnp
shll
in
xchg
mov
add
lret
xchg
int3
in
push
test
imul
ret
pop
nop
ja
adc
dec
and
dec
outsb
pop
insb
pop
imul
add
push
shlb
add
sub
or
push
cmpsl
push
stos
lds
test
xchg
jg
mov
add
mov
fcompl
dec
xor
test
sub
rcr
scas
loop
mov
or
aaa
mov
xorb
out
add
jb
dec
in
dec
add
jecxz
inc
ja
and
add
push
in
jmp
add
pop
arpl
xchg
push
sub
add
mov
les
add
sbb
pop
dec
jle
das
mov
dec
jno
repz
popf
jnp
mov
adc
stos
jne
mov
cmp
lret
jle
add
popa
mov
push
punpcklbw
sarl
in
or
jns
add
xor
adc
jg
add
cld
pop
cmp
xor
mov
nop
cmpsl
fwait
call
and
sub
sbb
adc
add
je
cmpsl
add
mov
xchg
jle
aaa
add
adc
mov
rcrl
and
repnz
cmpsb
clc
jnp
sbb
fnstenv
xchg
loopne
xorb
inc
xor
adc
sbb
add
out
add
ret
jb
repnz
xchg
sub
call
jnp
add
ret
pop
insb
xor
add
cwtl
push
xor
sbb
mov
and
sbbb
xlat
pop
in
shll
out
mov
outsl
jno
arpl
call
in
loopne
jne
and
add
repnz
inc
mov
cmp
cmp
inc
sub
add
sub
gs
pop
add
push
mov
dec
jne
loop
loop
add
push
push
loop
test
or
sbb
imul
jg
or
inc
mov
xor
stos
jo
icebp
arpl
bound
ljmp
in
cs
push
push
dec
add
or
mov
mov
fmuls
mov
ss
stc
add
sbb
nop
jbe
xchg
sbb
add
addb
add
cld
jb
add
or
sbb
ds
repz
jg
sbb
add
nop
push
aaa
add
jl,pn
gs
aam
inc
cwtl
push
mov
xor
sub
mov
and
popl
fsubrp
psllq
sbb
xor
sbb
lret
test
add
pop
sbb
add
push
int
insb
jo
sub
xor
mov
sti
and
and
leave
mov
add
dec
mov
or
cmp
jnp
aas
or
or
adc
daa
pop
add
mov
fwait
add
fmuls
push
subb
cltd
or
pop
cmp
adcl
jmp
sar
insb
jl
add
cmovs
test
pop
iret
sbb
mov
popa
add
je
lret
push
in
add
jmp
pusha
cli
imul
xor
iret
cmpsb
mov
movsl
hlt
imul
jo
xor
pop
add
mov
stos
add
push
cld
add
aas
xlat
sub
pop
or
inc
adc
push
loopne
and
mov
mov
mov
popf
sub
xor
les
dec
add
ja
negb
dec
enter
js
xchg
fwait
ja
add
add
jle
inc
adc
lock
dec
scas
pop
add
mov
cwtl
mov
push
fidivl
outsb
hlt
cld
fs
test
adc
test
in
add
jno
add
add
pushf
xchg
ret
nop
mov
divb
aaa
nop
add
scas
jge
sbb
mov
mov
nop
mov
in
popa
xlat
hlt
or
cwtl
int3
jae
sub
add
dec
pushf
cmpsb
jns
movsl
xor
or
nop
ljmp
mov
les
lods
mov
and
cmp
add
arpl
xor
xchg
jne
aas
fmull
add
test
cli
xor
or
aas
popa
outsl
sbbb
out
push
mov
lret
dec
lea
pop
in
in
mov
xchg
xchg
rcrb
pop
pop
inc
js
out
add
in
fstpl
ret
lods
lea
add
test
addr16
imul
cld
les
pusha
in
add
xchg
adc
scas
add
sbb
call
pop
aad
fidivrl
sbb
aas
xor
inc
xchg
xor
mov
pusha
inc
cmp
mov
add
insb
sub
inc
mov
fdivrs
add
and
clc
mov
ret
stc
mov
add
xchg
jl
enter
add
mov
lret
scas
dec
rolb
mov
rorl
pop
mov
pop
push
into
stos
dec
mov
idivb
popa
pusha
mov
enter
fnsave
orb
out
int
xchg
dec
cmp
stc
cwtl
jno
lock
inc
testl
scas
add
cmc
inc
add
xorl
and
cld
xlat
mov
add
jbe
cltd
and
ja
insb
mov
adc
push
sete
add
pop
ss
inc
arpl
stc
lret
movl
mov
push
pop
outsl
push
sbb
add
int
stos
je
pop
filds
jnp
mov
or
xor
insl
mov
mov
insb
je
into
sub
add
stc
mov
notb
pop
push
fidivrs
add
imul
clts
pop
out
loopne
push
xlat
testl
in
sarb
and
fwait
lods
pop
push
cmpl
cmpl
add
shrb
stc
add
mov
outsl
jo
add
pop
in
nop
xchg
add
pop
aad
cwtl
add
int3
xchg
jl
add
sbb
inc
fs
int
sbb
popa
cltd
popf
mov
arpl
jg
mov
jl
add
sub
shrl
sbb
add
mov
jg
add
movsl
push
aas
add
in
ret
cmp
call
hlt
dec
sub
out
psraw
lods
or
call
cmp
mov
add
imul
cmp
loopne
jp
jns
push
aad
fcoml
sub
xchg
frstor
sbb
mov
mov
add
stos
xchg
and
cmp
icebp
call
dec
push
pop
loopne
repz
lods
rcl
fwait
add
cmp
int3
data16
add
jmp
pusha
iret
cmp
cld
push
adc
imul
mov
or
mov
hlt
jl
cmpsb
inc
mov
mov
mov
outsl
scas
sbb
push
adc
jae
add
sbb
jmp
sub
inc
push
jae
addr16
repz
or
enter
stc
imul
push
xor
les
and
loope
imul
ds
push
push
rclb
adc
cmpsl
icebp
push
add
adc
add
idivl
mov
jne
sbb
jecxz
push
jg
add
pop
dec
dec
call
add
pop
sbb
xor
rclb
cmc
add
jge
mov
xor
pusha
xor
push
bound
jp
jg
cli
loopne
mov
pop
jg
jge
adc
inc
dec
jle
mov
jns
and
mov
push
inc
mov
shl
sbb
mov
add
push
fbstp
data16
lods
adc
add
int
xchg
xor
mov
add
dec
sbb
cltd
mov
add
add
popa
adc
insb
xchg
add
stc
shll
testl
icebp
jmp
add
test
inc
jno
dec
and
subb
push
incb
mov
popw
xor
xor
js
les
aaa
push
cmp
test
ficomps
xchg
xchg
jge
and
out
nop
lret
push
pop
add
inc
cs
adc
and
add
stc
and
add
daa
xlat
xchg
sub
aas
or
mov
leave
lahf
test
and
cmp
das
cli
sub
adcb
add
fpatan
mov
fstpt
leave
sbbb
jp
ljmp
icebp
out
fs
adc
cmp
lea
jp
add
adc
dec
loope
into
inc
mov
fnsave
call
and
dec
push
fcompl
mov
loopne
add
mov
movsl
add
iret
cmp
dec
dec
cmpsl
aam
cmpsb
sbb
mov
fwait
pop
in
adc
lcall
or
sub
daa
add
je
xlat
pop
or
shlb
mov
jb
lock
cmp
sbb
and
cld
test
es
filds
xor
into
and
mov
lret
push
shll
stos
xor
push
add
testl
clc
jne
add
mov
leave
nop
addb
aad
inc
dec
insl
jp
jge
jns
aas
ljmp
jo
or
sbb
xor
sbb
dec
xor
aad
jmp
inc
add
cld
fstl
adcl
test
add
mov
orb
mov
sub
add
push
negl
add
mov
cmpb
mov
pushf
sub
and
sbbb
add
sahf
and
mov
inc
lcall
and
cli
or
sub
enter
out
or
push
mov
in
pop
les
rcrl
mov
add
cld
mov
dec
or
xor
addb
jge
jb
es
xor
in
and
and
addb
mov
mov
and
add
jp
stos
or
add
negb
jnp
add
inc
cltd
cmpsb
je
inc
pop
aam
fxtract
movsb
push
sarb
mov
cmp
xchg
add
ja
add
xchg
mov
stos
push
fsubs
shlb
out
hlt
adc
mov
cmp
iret
add
fcmovu
jo
add
adc
adc
in
sbb
rorb
xchg
add
cli
gs
mov
add
mulb
dec
mov
xlat
test
arpl
pop
xor
lods
sub
out
fucomi
cmp
add
push
stos
lods
pop
and
mov
add
cmpsl
in
xor
data16
jp
mov
inc
jecxz
sub
stos
rclb
push
inc
mov
out
into
push
mov
hlt
in
dec
push
jb
aaa
add
cli
mov
add
push
lock
mov
add
in
int
mov
pop
addl
pushf
mov
inc
int3
shrl
add
outsb
add
add
call
jmp
sub
mov
adc
lcall
pop
inc
xorb
pop
sahf
jnp
fwait
dec
aad
pop
test
incb
dec
loope
arpl
jae
and
jne
pop
adc
add
jbe
jmp
lahf
inc
add
test
les
out
sbb
das
ss
jb,pn
test
sub
jbe
pop
xor
xchg
cmpsl
push
or
xor
add
xor
pop
popa
rcll
push
mov
pop
std
test
lahf
outsl
arpl
mov
add
imul
pop
mov
jl
mov
mov
jo
movsb
push
add
aam
lock
out
test
cltd
clc
lods
add
pop
add
mov
out
xchg
lahf
adc
scas
pushf
addr16
jbe
pop
sbbl
add
or
or
lods
mov
not
dec
ljmp
dec
das
adc
add
data16
add
mov
cmp
pop
lods
loop
dec
inc
xchg
dec
xchg
shl
xor
lock
or
cwtl
movsb
loop
push
mov
mov
cs
jl
xor
mov
pop
xchg
jp
add
xchg
dec
ss
popa
inc
add
inc
and
pushf
push
push
add
mov
xchg
add
mov
xchg
xchg
mov
pop
stos
xor
xchg
cmp
ss
jno
push
add
push
pop
cmpsl
jle
add
xchg
mov
adc
lds
mov
lock
dec
test
push
inc
testb
add
jbe
ficomps
pop
push
cmc
add
jg
sti
or
mov
pop
or
mov
jle
inc
int
xlat
mov
flds
loope
jbe
data16
cmp
repnz
mov
ljmp
idiv
cmp
int
mov
xchg
or
fs
fwait
adcb
inc
jge
repz
cmp
add
jp
mov
pusha
es
add
sbb
sub
mov
mov
inc
incl
outsl
add
cli
aam
adc
jg
push
cwtl
pop
fs
test
inc
inc
cmp
cld
pop
dec
jbe
mov
lock
xchg
mov
nop
mov
cmp
aam
addr16
adc
cltd
pop
lea
jl
dec
cld
andl
jnp
add
add
inc
xchg
fdivl
sbb
lock
pop
push
xor
sti
add
add
aas
dec
repnz
add
pop
enter
testl
lods
dec
sub
iret
aas
and
rorl
outsl
sti
ljmp
test
call
mov
dec
stos
jae
add
fisubrl
inc
xor
ss
cs
fwait
stc
adc
jb
add
pushf
flds
fs
add
jno
xor
add
jae
call
add
pop
pop
fimuls
out
call
xchg
jl
loopne,pt
mov
cltd
or
xchg
mov
ret
sti
dec
lods
subl
lret
incl
dec
pop
pop
sahf
add
and
movsb
out
fstpl
jp,pt
pop
xchg
movb
iret
pop
jo
jl
std
add
sub
add
fisubrl
dec
xchg
add
popf
jle
mov
add
dec
js
mov
cmp
shlb
stc
dec
outsl
xchg
andl
cmp
adc
cmp
cmp
sbb
xor
mov
sbb
add
sub
lods
shl
or
or
jp
adc
pop
inc
mov
add
push
repz
push
jp
and
je
faddp
xchg
leave
pusha
and
fcmovnbe
bound
xchg
adc
ss
adc
or
xchg
adc
xchg
jns
add
mov
jb
pop
sub
enter
fcmovnbe
imul
inc
mov
lcall
ret
and
xor
mov
call
jno
fs
pop
fldl
inc
ret
xor
js
mov
or
subb
std
psrlw
xchg
cltd
in
cwtl
inc
mov
dec
add
push
inc
lods
pusha
jne
and
add
jmp
mov
xchg
push
add
push
jno
sub
icebp
mov
mov
add
pop
cmp
jo
sbb
rorl
xor
insl
mov
lahf
jnp
sbb
sbb
add
dec
jl
jo
push
sub
sbb
das
adc
inc
or
test
add
inc
iret
and
xor
or
hlt
or
daa
into
repnz
dec
sbb
mov
cmp
dec
dec
mov
ja
add
dec
dec
mov
pop
aam
jae
or
push
call
sub
pop
mov
xchg
cli
pop
sbb
pop
push
pop
mov
daa
jl
enter
in
dec
mov
mov
adc
cmp
pop
add
sub
and
or
and
dec
sahf
in
pop
cmp
and
adc
pusha
data16
outsb
dec
add
mov
shrb
xor
lds
rcrb
sahf
or
jae
lods
push
pop
push
in
add
hlt
aaa
cwtl
or
sbb
sbb
push
fwait
push
add
pop
mov
push
add
cs
js
cmp
ror
andb
sbb
pop
mov
adc
add
ss
cmp
loop
add
cmpsl
test
mov
pop
sbb
add
jbe
sub
repnz
push
mov
fildl
es
into
sbb
add
imul
or
int
adc
inc
mov
and
mov
fs
mov
inc
adc
dec
lock
add
sahf
lds
fstps
mov
mov
inc
pushf
sbbb
adc
or
repnz
cmp
mov
lret
hlt
mov
cmp
pop
les
pop
xchg
je
xchg
je
pop
in
inc
xor
mov
push
dec
mov
cs
insb
imul
jbe
ficoms
sbb
test
adcb
push
or
cmpsb
mov
sarl
sub
dec
sti
xacquire
xchg
mov
mov
fdivrs
pop
inc
lds
pop
inc
test
xor
sub
mov
adc
sar
mov
jae
xchg
call
sbbb
in
mov
sbb
aad
dec
test
pop
movq
mov
push
pop
insb
scas
int
imul
jo
add
push
adcl
add
idivb
and
adcb
imul
add
dec
pusha
int3
lcall
out
pop
adc
aaa
into
cld
add
popf
dec
insl
and
dec
jno
sbb
xor
xor
jb
stos
jns
test
push
fimuls
or
test
cmp
mov
cld
pop
or
test
sub
sbb
push
jge
add
cmpb
mov
sbb
push
adc
sub
jl
rorl
ja
jo
rolb
sub
mov
push
sbb
subb
lods
cmp
sub
je
xchg
add
out
ss
xchg
inc
xchg
or
mov
mov
aad
sub
push
daa
cli
or
clc
inc
add
es
sbb
nop
outsb
and
add
fwait
lods
mov
ret
mov
ljmp
xor
out
inc
in
adc
imul
nop
mov
dec
or
andb
nop
mov
jne
cmp
mov
inc
adc
cmp
pop
cltd
gs
mov
or
aaa
xor
popf
or
xchg
dec
cmpb
mov
inc
push
scas
add
sbb
roll
aad
inc
fcoms
adc
dec
and
fwait
movsb
or
push
or
add
imul
adc
mov
inc
test
rorl
sub
xchg
addb
lods
add
fistpl
faddl
outsb
pop
call
sub
cmpsl
or
xchg
incb
movsbl
jecxz
adcb
add
scas
in
dec
pop
adc
add
sahf
ss
ljmp
jnp
dec
inc
add
mov
lods
add
ds
cwtl
loopne
cmp
mov
test
mov
adcb
xorl
movsb
add
popa
jge
add
int3
cmp
push
add
mov
lock
adc
mov
inc
nop
stc
es
lds
jns
dec
dec
and
dec
pop
add
or
ss
add
cmpsb
and
xchg
mov
fs
dec
imul
lcall
xchg
int3
dec
scas
push
and
pop
mov
add
mov
and
jns
rcll
add
sbb
lahf
inc
add
push
sub
cmp
sbb
mov
add
fwait
outsl
adc
cmp
push
lock
xchg
pusha
mov
add
loope
pop
mov
lcall
in
mov
inc
cmc
sub
mov
inc
rcrl
push
jp
add
sub
or
mov
clc
inc
cld
sarb
add
push
xchg
daa
repnz
xchg
jecxz
dec
rorb
sbb
xchg
add
pop
mov
mov
loopne
push
je
inc
mov
fisubrs
dec
fsubr
ret
sarl
cmp
inc
xchg
adc
pop
psubsw
jge
aam
sub
xor
mov
xchg
push
fdivrl
fldcw
add
pushf
stos
or
sbb
fistpl
and
imull
rolb
inc
pop
mov
jg
push
push
inc
and
rolb
fmull
bound
xor
std
pop
hlt
into
jae
push
adc
ret
xor
cwtl
mov
loop
sbb
call
fnstcw
adc
cmp
mov
aas
lret
pop
dec
pop
jo
adc
add
sub
pop
xchg
andl
sti
enter
add
mov
pusha
xchg
loop
scas
add
sbb
xchg
shll
pop
imul
fwait
add
dec
adc
outsl
add
xchg
jge
jle
mov
add
jne
adc
add
iret
jnp
xlat
adc
jb
push
scas
jns
dec
and
ljmp
shr
insb
mov
mov
addb
adc
add
push
fsub
sbb
mov
fildll
cmpl
sti
enter
push
test
mov
adc
adc
jno
xchg
add
pop
scas
pop
pop
lret
mov
xor
push
pushf
sbb
and
and
push
add
add
push
add
xchg
shrl
imul
add
push
cmp
inc
imul
mov
add
sahf
push
ss
add
lret
mov
outsb
aam
fsubrs
dec
testb
jnp
mov
jp
pop
mov
jle
ljmp
sbb
xchg
mov
jmp
jbe
inc
popa
pop
mov
add
sti
lcall
leave
cmp
mov
les
fldl
add
loopne
or
jp
test
sahf
jae
clc
mov
lds
pusha
or
sub
sbb
cwtl
cld
mov
fwait
sbb
leave
push
scas
add
xchg
cmp
xchg
xchg
cmc
fcmovne
sub
dec
jb
gs
aas
ficoml
popl
mov
out
add
push
repz
sbb
mov
adc
push
test
add
xlat
ret
adc
pop
xorb
mov
xchg
bound
rorb
cmpsb
add
aas
xchg
and
ja
dec
push
insl
xor
xchg
js
js
pop
add
mov
add
mov
aad
stc
add
mov
jae
push
mov
mov
adc
jo
iret
add
stc
add
or
sahf
test
push
sbb
cli
add
das
cmc
push
pop
subb
cmp
mov
out
ja
jns
notb
outsb
scas
push
pop
jns
sub
or
xor
mov
add
mov
push
push
xlat
clc
jbe
into
add
jb
xchg
ljmp
ficomps
cmp
dec
push
pop
insb
pusha
cmp
sahf
add
xchg
cmc
sub
jmp
inc
pop
clc
jmp
add
int3
addr16
stc
add
leave
xchg
cmp
jnp
pusha
std
xlat
sbb
pop
adc
pop
adc
sbb
out
cltd
addr16
nop
rorl
push
xchg
add
inc
jb
aad
mov
lahf
sbb
add
dec
xor
int3
adc
xlat
loop
pop
jp
push
cld
push
add
sahf
stos
aam
push
call
inc
nop
mov
pop
dec
adc
xchg
mov
fs
add
jmp
sbb
movsb
add
dec
test
push
add
ja
in
int3
mov
push
lret
inc
enter
sub
jecxz
sub
cmp
add
int
pop
in
mov
imul
mov
lock
mov
nop
add
sub
jne
and
inc
lret
out
xor
add
dec
dec
into
mov
mov
rclb
mov
dec
xlat
xchg
andb
add
and
pop
fstpl
adcl
out
sbb
imul
add
cmp
mov
ret
or
and
and
enter
cmp
dec
xor
push
fwait
inc
in
pop
pop
fs
imul
mov
aam
inc
add
push
mov
sub
cwtl
popa
jbe
nop
rolb
out
cmp
adc
pop
insb
mov
outsl
fsubs
and
cmp
adc
add
cmc
inc
mov
add
push
or
movsl
xor
cmp
push
add
xchg
pop
ret
xchg
ret
jb
stc
xor
cmp
movl
inc
add
loop
outsb
push
dec
nop
adc
adc
and
mov
test
push
sbb
cmc
xchg
add
ljmp
add
fstl
enter
lar
lcall
ljmp
in
sub
in
test
sbb
insb
or
test
sub
stos
cmp
xchg
aas
add
popl
add
pop
jge
xchg
jbe
aaa
leave
push
shll
shlb
rorb
not
int3
clc
je
add
stos
dec
in
xor
lcall
insb
jne
clc
mov
js
fdiv
jb
jbe
cmp
push
out
jg
add
xchg
mov
dec
test
ret
cmp
push
sub
push
push
add
movsl
es
mov
add
mov
and
test
dec
pop
xchg
pop
pop
lcall
in
mov
call
sbbl
mov
xchg
mov
jne
sbb
ds
fs
xchg
rcll
add
outsb
idivb
fnstenv
outsl
lods
mov
clc
sbb
pop
insl
subps
dec
push
in
mov
pop
add
ret
and
out
lcall
hlt
push
jmp
mov
in
add
xchg
push
jo
mov
push
xor
adc
movsl
mov
mov
add
daa
movsb
xchg
xchg
lods
inc
enter
dec
leave
add
out
push
mov
inc
mov
push
mov
sub
mov
add
sub
push
add
xchg
pop
cmpl
hlt
clc
adc
rclb
inc
adc
pop
xchg
std
xor
mov
fcomps
push
pop
add
or
pushf
sbb
movsb
fsubs
adc
cmp
jae
mov
aas
pop
sub
out
xor
loope
add
pcmpeqd
xor
or
xchg
sbb
cmp
std
test
lea
add
push
sub
aas
cmp
xorb
hlt
adc
ljmp
cmp
sbbb
push
js
xchg
shl
movsl
je
add
lds
adc
lret
push
call
xchg
icebp
mov
xchg
jl
jbe
mov
arpl
push
inc
div
loopne
xorb
dec
movsb
xor
xchg
mov
mov
sti
imul
scas
or
pusha
sbb
addr16
shrb
cmp
in
jne
popa
shlb
push
mov
cmp
enter
sub
mov
sub
xchg
sub
sub
dec
add
and
xchg
xchg
bnd
xchg
mov
ss
adc
cmp
movsl
and
inc
pop
ljmp
xchg
and
xor
rorb
cmp
mov
inc
adc
mov
pop
pop
cmp
out
icebp
shlb
jns
inc
mov
loop
in
cmp
xchg
inc
repnz
daa
pop
xchg
fists
stc
dec
arpl
or
fisubs
fildll
sub
mov
pushf
shll
pop
inc
jp
add
push
andb
sbb
xor
lock
scas
add
push
es
pop
sub
adc
push
pop
mov
jbe
cwtl
cmc
testb
sub
add
push
dec
fmull
sbb
imul
or
sbb
lock
add
xchg
cmp
fildll
dec
xor
cmpb
cltd
sbb
add
scas
jge
nop
or
add
movl
inc
pushf
sarb
test
jmp
in
or
adc
pushf
ljmp
dec
inc
mov
loop
pop
push
lret
subb
int3
loopne
mov
aas
xchg
aas
sbb
xchg
int3
add
idivb
sub
daa
jne
add
dec
push
inc
out
jb
add
shrb
add
fwait
xchg
lds
and
icebp
mov
add
inc
testb
adc
add
cld
pop
add
cwtl
push
imul
dec
sub
addl
pop
dec
mov
icebp
scas
cmp
xchg
and
or
and
xchg
repnz
mov
fistps
shlb
add
add
xor
add
xchg
mov
out
pop
jp
adc
insb
addr16
or
add
out
push
insl
daa
push
adc
ficomps
xor
add
loope
and
xchg
aas
mov
fadds
adc
jle
push
add
inc
add
lcall
out
mov
mov
add
cmpsl
ret
cltd
add
mov
jne
roll
mov
jle
iret
pop
pop
rorl
dec
mov
aas
loop
add
dec
scas
cmc
ret
jl
jp
cmp
mov
icebp
mov
or
sbb
iret
call
sbb
gs
int
js
jo
cmpsl
pop
xorb
sbb
xor
jecxz
mov
int3
aam
loope
add
add
dec
cmc
into
call
mov
add
xlat
pusha
mov
insl
js
add
lcall
mov
dec
das
iret
clc
jl
add
out
sbb
mov
hlt
les
cltd
dec
call
jp
cmc
in
das
jns
test
jno
pop
popa
dec
add
popf
ja
add
idivl
lret
scas
adc
xchg
daa
xchg
pop
jo
filds
pop
mov
push
cltd
hlt
pop
add
shll
add
xor
icebp
loop
pop
out
cmp
jl
add
dec
and
fidivrs
je
out
add
jecxz
mov
sbb
dec
ljmp
rcr
and
ja
jle
sbb
jg
jo
add
dec
xchg
pop
or
add
mov
adc
movsb
xchg
loopne
mov
sub
sub
ud0
inc
pop
pusha
test
sbb
mov
data16
sbb
in
mov
mov
inc
pushf
dec
arpl
add
aad
mov
into
or
xchg
rol
les
add
sub
jge
stos
pop
outsb
jb
dec
cld
push
adc
in
lods
add
cmp
jge
jmp
nop
cltd
in
add
and
lahf
push
fwait
mul
sub
fiadds
arpl
xchg
add
dec
jbe
add
pop
aam
add
push
loop
jne
mov
xor
xchg
data16
dec
adc
push
and
hlt
pop
pop
lcall
stc
sahf
cpuid
pop
mov
mov
fwait
add
mov
movsl
popa
sbb
cld
mov
les
push
pop
loop
mov
nop
xor
mov
push
mov
or
xor
inc
jl
mov
adcb
call
shlb
add
rcl
mov
dec
adc
ffreep
pusha
and
jmp
test
loope
and
mov
sbb
inc
pop
jne
jns
pusha
nop
insb
jbe
sub
daa
int3
add
pop
push
in
add
jmp
movsb
loop
jb
jg
test
add
lea
jo
push
dec
ja
cmp
mov
jl
in
dec
dec
das
dec
add
test
orl
pop
iret
mov
in
add
xor
hlt
pop
push
pop
sbb
adc
mov
ss
lods
in
sbb
jns
jb
xor
xor
int
popa
push
rolb
out
cmp
clc
gs
ss
xchg
jae
mov
mov
mov
imul
ljmp
push
out
jo
sub
pusha
pop
sti
pop
xor
xor
xor
jo
add
outsb
mov
mov
cmp
in
pop
and
cmpsl
add
outsl
inc
fimuls
dec
jno
shlb
push
xlat
jnp
scas
mov
cmp
lock
sub
popl
insl
sub
pusha
jne
mov
mov
push
stos
inc
inc
cmpsb
add
cmp
pop
fnstsw
inc
add
inc
mov
inc
mov
pop
cmp
jno
sub
sti
pop
aas
sub
push
push
push
cmp
pop
sub
sub
bswap
mov
pusha
jnp
cli
cmp
cmp
orb
pop
popa
js
jne
ljmp
sub
add
sub
push
add
mov
mov
iret
add
push
lock
pop
stos
add
push
cmp
pop
xchg
mov
cmpsb
mov
jecxz
js
add
cmc
jp
add
push
es
mov
nop
mov
mov
sti
arpl
out
add
jb
add
mov
int
mov
in
repnz
pushf
mov
sub
scas
add
cmp
popf
adc
add
push
or
std
jbe
stc
push
andb
int3
aad
xchg
cld
je
loope
pop
cmp
push
mov
test
mov
add
dec
scas
add
cmpsb
cmpl
movaps
inc
add
xchg
xchg
push
add
mov
in
iret
xor
push
add
inc
lahf
sarl
mov
out
test
call
lock
sti
add
inc
lea
xor
xor
lods
leave
sub
icebp
lods
dec
add
push
inc
test
stos
sub
call
xlat
and
insb
out
inc
jnp
jmp
mov
inc
movsb
sarb
inc
add
lods
cltd
outsl
pop
add
pop
mov
ret
adc
xchg
add
fildl
enter
sbb
fwait
adc
testl
push
incl
out
daa
add
dec
cs
push
xchg
out
iret
add
xor
sbb
add
mov
add
adc
cmp
popl
and
push
dec
cwtl
cmpl
and
cli
int
xorb
jnp
pop
add
push
xchg
mov
ficompl
dec
jp
add
pushf
in
jecxz
inc
pop
jne
js
cwtl
cmpl
pop
movsb
test
or
add
mov
pop
add
mov
mov
adc
add
add
push
xor
add
jmp
iret
pusha
insl
dec
and
mov
dec
negl
adc
insb
bound
test
add
scas
xor
pop
jp
add
rolb
call
jg
xor
and
add
xor
in
cmp
ret
mov
push
jns
add
fstpt
pop
flds
lds
test
hlt
add
cmp
loope
daa
dec
cld
sbb
push
pop
sbb
jg
add
push
xchg
mov
jb
call
cmp
add
jg
push
pop
add
push
ret
jmp
mov
xchg
neg
and
sub
push
idivl
insb
and
pop
lds
add
push
jb
xchg
fwait
inc
out
or
cmp
push
mov
jmp
xor
pop
in
mov
shrl
push
xchg
add
and
cwtl
pop
add
pop
aas
mov
inc
outsb
mov
sahf
cli
xchg
mov
xor
mov
dec
add
xor
xchg
inc
dec
cli
xchg
add
lcall
mov
add
repnz
jns
mov
xor
add
xor
movsl
testl
add
imul
stos
sbb
mov
sbb
add
insl
add
movsb
addb
call
adc
stc
std
add
xchg
jmp
sbb
push
out
sbb
ja
jmp
cmp
xorb
or
jl
mov
mov
cli
add
popf
sub
xchg
ficompl
add
mov
fadd
scas
sbb
or
aam
add
cmp
int
add
cmpsb
mov
pop
or
mov
mov
lcall
push
inc
fmuls
ljmp
popa
inc
nop
and
gs
or
movntps
xchg
ljmp
fwait
lret
cmpsb
testb
xchg
mov
pusha
fsubl
inc
push
inc
pop
inc
inc
shll
pop
add
add
lds
pop
mov
into
mov
xchg
sbb
inc
jle
dec
jb
lock
test
jp
add
add
das
pop
jmp
std
push
hlt
jnp
cmp
cmp
mov
dec
fcoml
or
cli
mov
orb
or
in
cmp
addb
push
xor
adc
xchg
lret
jo
aas
add
push
add
inc
ss
aam
lock
add
xor
mov
inc
add
test
add
outsb
jecxz
jl
mov
data16
call
pop
inc
les
mov
roll
sub
or
mov
out
jne
pop
pop
stos
mov
push
and
xchg
adc
sbb
in
hlt
pop
pop
pop
out
push
fsubp
pop
inc
mov
arpl
add
jecxz
jge
sub
fldcw
out
xchg
jg
andl
add
cmp
std
popa
lea
movsb
iret
stc
xor
cmp
rcr
add
int3
inc
lea
add
lret
mull
cmp
movsb
mov
mov
adc
out
mov
sahf
add
push
add
cwtl
outsl
xchg
cmp
mov
enter
pop
dec
in
inc
and
lds
xor
filds
int3
pop
xlat
out
addr16
pop
mov
mov
pusha
test
test
push
pop
sbb
add
test
and
add
pop
pop
jnp
xor
addr16
and
es
ret
add
lret
jns
cmp
leave
mov
push
shl
xor
jp
popf
cmp
testl
out
mov
add
sub
fistpll
mov
sbb
xchg
inc
movsl
call
adc
mov
andl
xchg
loopne
sar
add
pop
dec
and
inc
orb
stos
push
sub
imul
ljmp
sbb
bound
in
fs
push
rcl
je
mov
adc
xor
fnstcw
inc
add
out
adc
jp
cmpsb
jno
or
or
jl
mov
cmp
std
sbb
or
lret
push
dec
jge
or
dec
sbb
mov
out
cmpsl
insb
pop
add
dec
outsl
xchg
clc
mov
inc
sub
ret
cmp
mov
sbb
sbb
mov
or
shld
je
js
int
outsl
lock
push
roll
push
sbb
in
xchg
nop
adc
add
pop
jle
jbe
sbb
aaa
inc
fsubrl
ficomps
shr
loopne
jbe
mov
mov
jle
pop
subb
xchg
xor
sbb
push
shl
cmp
mov
idivl
inc
loopne
xchg
enter
jbe
fiaddl
add
xchg
or
and
push
cmp
and
dec
jae
cmp
jbe
add
push
push
ror
pusha
pop
and
add
or
sbb
add
js
jl
fsubr
inc
pop
sub
clc
add
rcl
lods
mov
notl
xchg
lods
mov
cmp
out
arpl
inc
jmp
test
pop
mov
les
outsb
fwait
or
femms
aas
xchg
subb
les
pop
mov
addl
rolb
add
and
mov
xchg
push
fwait
sub
je
jb
adc
cmc
scas
mov
inc
imull
cld
sbb
pop
jge
mov
adc
call
mov
dec
ret
outsl
push
push
shr
add
fldz
push
add
mov
data16
shll
mov
add
sti
dec
test
popf
fisttpl
ret
inc
jge
shll
into
add
nop
mov
cld
aaa
add
enter
sub
jp
push
lahf
and
cmpb
jmp
add
mov
push
sbb
pop
jno
test
xor
and
aam
push
xor
js
les
push
addr16
pop
test
ds
hlt
add
imul
rolb
sub
mov
pusha
pop
imulb
stc
or
in
adc
xor
aaa
and
sbbl
dec
push
or
in
pop
xchg
mov
push
adc
es
and
and
stos
cld
sub
mov
add
mov
cmc
hlt
add
bnd
ja
dec
add
mov
movsb
push
dec
fsubrl
test
push
mov
fdivs
test
push
add
fildl
xchg
gs
out
add
adc
daa
push
popa
ljmp
cltd
add
mov
pop
repz
inc
push
test
in
movsl
test
push
andb
aas
xor
dec
imull
in
cwtl
add
and
lret
cmp
jno
add
iret
mov
add
pop
rcll
mov
inc
pop
dec
mov
scas
push
call
das
jae
cli
jmp
dec
ret
adc
mov
xorl
add
adc
les
pusha
int3
mov
popa
ret
stc
mov
mov
call
xchg
push
pop
imul
sahf
cltd
mov
xor
adc
and
pop
pop
data16
mov
dec
inc
int
xchg
xor
cmpsb
mov
in
jno
dec
icebp
add
push
add
push
mov
xor
and
mov
int
pusha
cwtl
mov
inc
mov
adc
xchg
std
push
push
cmp
or
leave
xorb
and
xchg
xchg
push
jl
dec
jnp
fstps
shll
fwait
pusha
mov
push
fldl
adc
in
jle
cmp
xchg
loopne
push
iret
loopne
and
int3
in
push
cltd
imul
cmp
fiadds
stos
je
fildl
in
jae
in
add
sahf
and
hlt
out
ds
add
add
sub
jno
sahf
and
pop
je
faddl
dec
out
ret
pop
xor
add
adc
jb
xchg
stos
push
hlt
call
pop
adc
add
test
cmpsl
ret
scas
inc
ja
jg
xor
add
adc
pop
cmp
xor
pop
mov
xlat
into
das
es
add
leave
aam
roll
stos
mov
lods
cwtl
pusha
pop
add
cmpsb
sbb
ss
inc
int3
inc
pop
cmp
addb
adc
sti
sub
push
jns
test
imul
stc
mov
arpl
pop
mov
out
outsb
scas
cmp
pushf
pop
add
add
rorb
out
and
jge
sub
mov
or
mov
fiadds
jmp
cs
sbb
add
call
movsl
jns
fadd
mov
jp
std
add
idivb
push
add
dec
lahf
int3
add
rol
aaa
subb
ss
sbb
cmpb
add
mov
sub
add
cmp
xchg
or
aad
jb
ret
scas
inc
mov
andb
cmp
add
sub
out
lds
add
sub
ret
add
call
out
add
fistpl
fdivrs
xor
in
das
adc
and
or
call
sbb
orl
andb
jae
jo
xchg
add
sbb
fisubrl
add
sub
xor
add
mov
xchg
pop
lret
arpl
push
aaa
dec
add
sbb
xor
cmc
outsl
pushf
add
shl
or
pop
aas
adc
mov
mov
add
loopne
pop
ficompl
add
mov
inc
jle
es
or
adc
and
xchg
pop
add
pop
jmp
fwait
test
jle
int3
ljmp
jg
cld
jmp
int3
add
rcrl
clc
xchg
sbb
add
mov
xor
push
mov
andl
test
sbb
add
cs
jge
inc
add
cmp
out
jbe
push
andl
pop
inc
call
sbb
add
dec
iret
mov
push
mov
xchg
xchg
adc
fs
enter
cmp
test
pop
push
and
pop
add
mov
dec
xchg
scas
call
insb
mov
lods
repnz
xor
add
and
cmp
cmpsl
insl
dec
push
in
cmp
xor
pop
lods
adc
add
mov
cmpsb
cld
or
push
test
test
pop
sbb
push
sbb
shl
add
jecxz
push
mov
cmp
adc
adc
jae
inc
lea
int3
pop
call
and
out
inc
int3
shlb
pop
mov
rcll
sub
lea
add
dec
push
jle
aam
pop
test
shrl
inc
and
psadbw
jbe
mov
and
orb
pop
dec
mov
int
xchg
mov
popa
inc
loopne
dec
pusha
mov
add
repnz
mov
cmp
out
mov
in
ds
add
andb
or
pushf
call
push
pop
aad
subb
hlt
lret
mov
dec
sahf
xor
enter
xchg
and
roll
inc
push
sbbb
push
mov
rolb
ja
or
jg
lcall
nop
push
xchg
sbb
xchg
mov
orb
insb
xor
leave
xchg
adc
arpl
test
cmpb
mov
or
mov
mov
inc
imul
mov
cmp
clc
jns
push
enter
dec
push
movsb
shrb
jle
inc
mov
cwtl
leave
rorb
mov
fwait
push
and
nopl
xor
cmc
lock
fmull
adc
aam
addb
pop
add
std
vpsubb
mov
mov
pushf
test
and
orl
cvttps2pi
jl
dec
mov
lock
pushl
out
mov
jl
adc
push
jo
and
sbb
dec
sti
lret
cltd
mov
mov
adc
fdivrl
or
dec
test
outsb
push
filds
outsl
ficoml
aam
jae
add
stos
cmpsl
test
add
cmp
aaa
add
dec
adc
loop
cmp
ljmp
and
mov
mov
outsl
inc
mov
xlat
xchg
nop
add
mov
lret
add
bnd
cltd
push
mov
sarb
push
add
lret
sbb
stos
lods
mov
push
add
negl
clc
into
stos
mov
movsl
adc
mov
lret
test
or
push
add
push
lds
cwtl
cmp
jno
push
scas
pop
sbb
sbb
sub
in
lahf
cld
pop
fwait
and
push
lea
add
mov
or
fmull
test
test
icebp
pop
add
mov
hlt
cmp
inc
fsubrs
pop
mov
mov
jno
push
es
mov
movsl
xchg
cmp
or
add
mov
je
insl
cmpsl
ja
in
inc
hlt
jnp
fdivrs
out
inc
sub
leave
sub
add
mov
jnp
hlt
and
outsb
cmp
test
push
daa
call
push
add
cltd
mov
pop
aaa
push
and
addr16
xchg
jle
add
rcrl
ret
sbb
cmp
add
nop
push
inc
mov
mov
dec
ficoml
and
das
mov
rorb
push
cli
lock
ss
push
popf
add
daa
cpuid
or
or
or
je
add
int
cmp
leave
jle
push
std
aad
inc
pop
in
and
pusha
insb
loopne
into
mov
cmc
lods
cwtl
lods
call
push
dec
jl
inc
sbb
mov
inc
outsl
es
and
push
andl
and
add
or
es
out
sar
pop
or
mov
xchg
pop
mov
cli
lods
mov
pop
in
addr16
jo
xor
jle
and
movl
dec
aad
rolb
sbb
lds
mov
aas
imul
cmp
add
adc
ja
repz
test
out
ds
and
add
adc
test
pop
shlb
push
add
mov
mov
jle
jbe
aaa
add
rorl
inc
jb
in
es
lret
or
les
addr16
int3
mov
or
aad
cmp
mov
add
xchg
and
cmpb
sbb
movsb
adc
in
sub
lahf
pop
fildl
push
mov
jbe
fabs
push
jmp
xchg
clc
dec
fiadds
sbb
jo
adc
cs
mov
dec
int3
sbb
add
sbb
xor
cmp
sub
and
inc
insb
pop
cmp
mov
icebp
add
in
fstpl
push
adc
sub
stos
fmul
add
sbb
push
xchg
scas
jge
mov
ret
xchg
rclb
fnclex
add
mov
jne
inc
insl
xor
dec
xchg
call
pop
adc
out
les
mov
sti
loope
aad
jno
add
fs
add
push
jp
vextracti32x8
bsr
mov
mov
in
insb
and
fs
dec
rol
faddl
mov
sbb
sbb
les
jo
faddl
mov
sub
add
shrb
mov
xor
add
stc
add
cmpb
pop
sub
jne
repz
mov
dec
sbbb
inc
ja
sti
mov
xchg
inc
adc
jl
push
jl
sub
incb
enter
push
mov
aas
add
dec
or
add
jl
mov
sbb
aam
insb
and
xchg
add
push
jne
adc
push
add
jecxz
or
div
mov
mov
shll
jns
dec
adcb
mov
inc
test
es
xor
adc
fmull
cmp
or
rcrb
aas
movsl
sarb
xchg
neg
push
sbb
and
sub
add
sub
add
fdivrl
cmp
push
pop
jns
inc
inc
imul
fiaddl
rcrb
sbb
add
jne
in
sub
xchg
xchg
and
cli
or
mov
rclb
repnz
popf
aaa
sub
xchg
out
or
push
lock
cltd
pop
xor
add
jmp
je
nop
outsl
pop
pusha
pop
xchg
dec
ljmp
scas
xchg
repnz
mov
xchg
add
shr
pop
push
jne
sbb
stc
mov
dec
repz
cmpsl
test
pop
jl
mov
adcb
jae
jns
inc
clc
cld
cmp
or
aas
add
lea
sarb
push
jnp
icebp
push
pop
loop
ljmp
jb
lret
jecxz
rclb
push
movsb
mov
add
xor
js
mov
push
out
cmc
repz
push
dec
xor
test
push
add
shlb
mov
or
pop
addr16
xchg
or
jno
sbb
inc
in
push
fstpl
push
ds
fs
add
lret
ret
sub
pop
insb
adcb
pop
ret
inc
push
aam
sbb
xchg
enter
fsubs
clc
cmp
sbb
mov
dec
dec
es
cmpb
jp
push
fiaddl
jns
mov
pusha
and
or
daa
sub
inc
lock
push
add
adc
outsb
mov
add
jns
fcompl
sub
sbb
inc
inc
fcoms
add
lret
pop
sbb
pop
push
sbb
incb
pusha
jns
push
pop
shll
clc
xor
js
xchg
scas
jne
out
jns
imul
inc
cld
lods
xchg
lcall
cmp
nop
cwtl
add
adc
add
mov
sbb
add
cld
subb
xchg
psrad
hlt
stos
xchg
mov
push
jl
and
jae
cld
inc
popa
jo
mov
adc
popa
adc
out
daa
push
xor
scas
std
sub
icebp
fdivrs
pop
subl
sbb
mov
stc
out
sub
adc
xchg
adc
fsubs
dec
lock
in
jb
in
test
jge
inc
subl
mov
add
repnz
inc
jne
and
dec
jbe
mov
stc
inc
xchg
xchg
push
push
and
orb
mov
jge
jmp
and
dec
int
je
pop
andb
sub
mov
and
push
mov
cltd
and
or
or
loopnew
cmp
push
dec
add
mov
fcom
xchg
push
xor
dec
paddw
dec
in
lods
fcoms
mov
push
fcoml
lock
adc
movsb
ror
jnp
andl
hlt
sub
addl
dec
in
mov
dec
sub
loope
mov
fdivrs
add
enter
inc
xorl
out
stos
loop
adc
test
cmp
mov
cmp
add
inc
mov
nop
pop
orb
in
lds
cmp
sub
dec
add
enter
pop
into
test
sub
test
sbb
std
pop
int3
jmp
testb
pop
and
mov
add
in
cmp
xor
idiv
shr
jl
into
add
inc
pop
mov
add
jg
data16
add
xlat
cli
cs
pop
bound
and
jg
shlb
pop
sbb
pop
add
in
xchg
and
push
or
je
add
sub
cltd
imul
sub
add
mov
mov
enter
jne
movsl
adc
cmp
or
mov
sub
sub
push
les
sub
adc
jne
mov
or
mov
dec
add
mov
js
rorb
mov
add
je
mov
sbb
pop
mov
repz
mov
int
test
and
lcall
test
add
clc
inc
push
add
add
cmp
inc
cwtl
add
dec
imul
int3
repnz
sbb
ja
jns
and
or
jl
addr16
mov
xchg
je
mov
roll
cmpsl
fs
pusha
leave
mov
divl
jo
and
and
call
cwtl
inc
jb
pop
mov
mov
inc
add
je
xchg
add
cmp
add
jo
sbb
xchg
sbb
int
shlb
sub
pop
rclb
dec
and
ja
outsb
adc
push
push
pop
jge
popl
stos
push
jl
fists
ja
sbb
call
add
lea
or
fistps
adc
cmp
jns
pop
dec
pop
fstp
fiadds
cmpsb
push
pop
dec
lds
mov
mov
sbb
mov
push
repnz
push
loope
js
jge
mov
out
mov
rcr
shrl
sub
mov
rorl
repz
add
subb
add
cltd
mov
cwtl
aas
sub
xor
pop
in
out
loope
dec
and
scas
inc
mov
xor
mov
mov
popf
sub
movsb
mov
mov
orl
in
sbb
sahf
xchg
cmp
cmpb
xchg
and
pop
stos
add
fnstsw
adc
xchg
cmp
inc
xor
or
add
jae
fwait
add
inc
push
les
dec
mov
cmp
add
push
popa
sbb
dec
dec
add
pop
sub
lds
lock
push
jno
fmuls
inc
cmp
add
add
xchg
cmp
sbb
jnp
jmp
add
dec
push
cmpsl
cmp
loopne
adc
testb
cmpsb
jae
or
js
add
movsl
sub
sub
dec
xor
jle
test
cltd
sub
cmc
jns
sub
mov
rorb
dec
add
xchg
xchg
mov
push
pop
cwtl
loopne
mov
push
add
jle
movsl
jmp
ret
repz
and
mov
sbb
nop
and
call
repnz
loopne
xor
add
icebp
test
add
fsubrs
orl
insl
sbb
popa
xchg
into
out
add
mov
add
xchg
ljmp
loopne
leave
mov
rolb
mov
mov
loop
jmp
fbld
jb
fstps
mov
lods
add
add
mov
pop
pop
mov
fcomps
sbb
in
cmp
repnz
fsubl
sub
dec
add
and
push
push
addr16
xchg
call
xchg
pop
pop
dec
add
mov
add
out
add
xchg
enter
xorl
lock
dec
rcrl
push
add
pop
mov
fbstp
add
sti
pop
push
out
popf
das
sub
adc
mov
cmp
mov
aad
sbb
xor
pop
fnstenv
mov
push
and
enter
out
pop
out
imul
pop
push
add
roll
sub
shlb
jp
stc
cmp
icebp
cltd
push
sahf
mov
adc
xchg
int3
cli
cmp
mov
mov
add
in
mov
sbb
dec
add
xor
cmp
adc
add
test
mov
lea
jl
lea
ljmp
add
jne
mov
stc
xor
inc
sub
frstor
push
bswap
ds
pop
adc
imul
mov
pop
add
shl
pop
push
lcall
sub
add
cwtl
and
in
cmp
mov
icebp
ljmp
push
in
dec
inc
add
mov
xchg
push
mov
stos
mov
adc
jo
lea
movsl
cwtl
ud0
adc
popf
or
or
jl
add
clc
adc
pop
out
loopne
adc
pop
mov
add
enter
test
lahf
adc
lods
cld
les
push
or
rcrl
xchg
push
add
cs
pop
jb
jp
push
and
inc
scas
repz
or
adc
flds
add
out
mov
jbe
or
insb
xchg
inc
clc
popl
add
jo
add
jmp
arpl
push
andl
std
mov
add
xor
shll
daa
add
repnz
mov
mov
cmp
jmp
xchg
scas
cmpb
popa
sub
mov
sbb
jb
stc
sbbl
aam
cmp
and
cmp
jmp
add
mov
sarl
sbb
adc
mov
fildl
xchg
aas
push
push
xor
push
push
mov
dec
and
dec
jo
inc
and
insl
adc
ss
cmp
inc
xchg
or
leave
xchg
sahf
es
idivb
xor
xor
pop
xchg
add
xor
js
mov
dec
lock
lret
pop
aam
dec
mov
sub
cmp
jbe
mov
aam
mov
inc
pop
das
sti
inc
movsl
fildl
jge
jns
jae
add
xchg
or
inc
dec
jns
or
inc
adc
lods
incl
fsubl
pop
cmp
xor
xlat
rclb
inc
in
out
addr16
pop
and
shr
out
xchg
ljmp
mov
divl
xchg
mov
cs
xor
cmp
jno
fiadds
xchg
jo
adc
xor
in
cli
cld
ds
xchg
add
in
add
dec
jge
sbb
into
das
and
inc
rcl
adc
in
dec
or
push
xor
inc
dec
lahf
xchg
jae
out
bound
fsts
hlt
add
cmp
inc
cmp
push
clc
fnsave
mov
push
enter
aas
insb
mov
shl
cmp
adc
out
pop
outsl
push
pop
xor
nop
jmp
test
inc
push
add
pushf
sub
sbb
mov
or
pop
test
xchg
jb
test
adc
repz
mov
cmpsl
loopne
pop
push
adc
loope
mov
cmp
adc
push
dec
leave
xchg
test
cmpsl
add
xchg
mov
jge
inc
push
xor
add
pop
sub
adc
fstp
sti
gs
sub
add
sub
pushf
add
mov
xchg
movsb
hlt
pop
xor
nop
adc
in
pop
and
jo
add
sahf
adc
fstp
daa
aas
out
sub
in
test
add
dec
push
outsl
fisubl
xor
push
push
ds
aas
sub
mov
sbb
subb
lds
xor
jns
or
cmc
add
icebp
jno
lock
inc
or
adc
aam
in
les
push
and
push
shlb
pop
add
mov
xchg
add
jae
lret
mov
xor
es
xor
sbb
cmp
leave
jle
lock
test
jge
sub
outsb
shr
lahf
add
ret
or
int
imul
and
cmc
xor
mov
lcall
jno
xchg
leave
xchg
enter
pop
test
negl
int
cmc
outsl
sub
and
add
sbb
test
arpl
cmp
sub
movsl
mov
sbb
jl
jecxz
int
rolb
mov
or
mov
psllq
sub
push
rcrb
and
out
add
ss
add
outsl
cmovo
xchg
cmp
sysenter
jl
popf
rolb
imul
testb
ret
jae
loopne
xor
repnz
loopne
cmpsb
push
lods
arpl
xor
and
push
in
add
jbe
sahf
rol
pusha
push
int3
test
and
cmp
or
sub
rcrb
cmp
add
sub
sahf
add
stc
gs
pusha
imul
int
add
or
xchg
cmc
rcrb
push
lcall
push
sub
pusha
bnd
xchg
nop
xchg
dec
roll
push
dec
test
frstor
jne
or
sbb
cmp
in
dec
add
pop
decb
out
jns
scas
lock
imul
xchg
xor
out
push
cmp
ret
dec
mov
and
push
mov
mov
cld
add
pop
and
pusha
jo
and
adc
jmp
das
popf
lds
jno
jge
insb
cmp
mov
jmp
xor
cld
push
loop
enter
dec
push
cmp
dec
pop
cmp
adc
daa
addl
cmp
sub
cmp
or
jl
inc
fdivrp
jno
arpl
add
cmp
add
push
mov
mov
ret
lods
rol
in
call
dec
jno
cwtl
xchg
insb
rcll
test
push
out
pushf
dec
mov
push
testb
ss
jl
arpl
mov
and
mov
jecxz
mov
mov
add
repnz
rcrb
imul
and
loopne
add
addl
add
add
inc
mov
popa
add
mov
sub
loopne
sbb
sti
mov
xchg
or
nop
loope
mov
add
je
add
stc
insb
or
and
inc
shl
push
out
mov
add
hlt
inc
insl
frstor
cltd
add
nop
mov
inc
rcrl
scas
adc
movsl
sub
xor
movsb
push
mov
dec
adc
or
popf
jge
mov
daa
mov
dec
push
repnz
in
cmp
cmp
scas
sbb
adc
mov
sbb
and
add
jp
lds
pop
xchg
mov
cmpsl
lcall
stc
leave
mov
aas
fs
inc
addr16
lahf
add
mov
mov
add
cmp
test
shl
sub
call
add
testb
add
roll
jl
cmp
add
sub
mov
adc
insb
roll
adc
addb
jp
fsubr
mov
add
push
mov
and
mov
js
ljmp
cmp
push
xchg
sbb
shl
ret
lds
cmpsl
sti
and
es
sub
ret
js
push
ljmp
xchg
roll
push
aam
lret
add
or
cmovae
mov
loope
mov
cmpsl
popf
xchg
sub
mov
or
movb
and
add
push
mov
sub
add
clc
popa
je
or
add
aas
adc
pop
add
push
les
js
add
aam
fcomps
inc
leave
rolb
jle
xchg
lret
enter
push
sbb
add
iret
pop
dec
pop
add
mov
lcall
jne
lds
repnz
pushf
push
push
adc
lock
or
mov
rclb
movsl
xor
add
add
es
add
pop
ljmp
lds
pop
in
in
sbbb
add
xchg
sbbl
subb
call
repz
int3
and
dec
add
mov
mov
xor
push
cwtl
add
jg
data16
sti
mov
inc
test
shlb
add
cli
sahf
jne
adcb
incl
movsl
out
out
xchg
xor
add
inc
int
mov
sub
outsl
jno
outsb
add
lahf
xchg
sbb
icebp
jecxz
loop
lret
push
jecxz
add
nop
lret
shrl
jecxz
inc
mov
push
insl
inc
dec
stos
insb
out
mov
push
sbb
aas
dec
jg
add
xor
das
cmp
mov
insl
cmp
sbb
jnp
and
rorb
and
mov
adc
jl
inc
loope
iret
pusha
cwtl
push
add
movsb
mov
rcl
mov
sbb
mov
add
stos
imul
jle
push
mov
push
sti
add
inc
mov
call
mov
inc
ror
inc
cmp
add
cmpb
test
xor
cmp
andl
shl
add
daa
shl
imul
arpl
adc
fs
jg
add
decl
outsb
push
mov
idivb
inc
sub
pop
add
push
cmp
add
fildll
cmp
xchg
arpl
and
nop
sbb
sti
mov
push
jge
jne
sbb
cmp
pusha
pusha
ds
mov
jmp
inc
adc
and
js
add
mov
lret
jg
jb
stos
je
pop
pop
fldcw
add
mov
shrb
cwtl
add
out
addl
lret
loopne
addr16
call
mov
fsub
clc
jno
or
mov
loopne
scas
outsl
dec
subb
mov
cmp
aam
xchg
cmpl
mov
push
xchg
dec
daa
js
jo
or
hlt
xor
rorb
scas
cmp
scas
aaa
sbb
jge
mov
lods
das
ret
cld
pusha
xor
add
inc
dec
rcrl
xchg
add
cmpsb
ret
pop
mov
je
xlat
in
outsb
roll
cmp
jg
cmpsb
sbb
sbb
mov
jo
push
imul
mov
lea
add
xchg
jo
xchg
out
outsl
sbb
hlt
in
inc
pop
mov
out
sbb
add
mov
pusha
push
outsb
imul
mov
std
mov
pop
add
sub
push
push
add
push
inc
pusha
loopne
es
cmp
hlt
pop
sbb
push
and
data16
push
sbb
xor
push
movsb
add
sbbl
jo
xor
pusha
inc
andb
push
sub
pusha
push
xchg
jmp
mov
fildl
mov
lcall
sbb
mov
mov
inc
jns
add
mov
push
sti
add
fstpt
int3
adc
jae
push
jno
repz
popf
shll
mov
fstl
into
nop
rcrb
sub
pop
mov
pusha
xchg
les
inc
or
lcall
leave
aad
sbb
and
add
and
add
dec
mov
js
sar
inc
test
mov
shr
int3
push
add
inc
ss
jl
push
cmp
inc
xor
pusha
sbb
imul
les
cld
es
xor
mov
je
stos
js
add
imul
sar
fcmovne
mov
mov
push
jo
lret
addr16
mov
lock
lret
inc
jge
pop
rcr
sbb
inc
adc
jo
fnstsw
pusha
and
int
cmp
inc
sarl
mov
outsl
into
in
push
xchg
sub
dec
fstpl
mov
push
add
inc
mov
lret
add
out
fmull
addb
dec
push
aam
mov
add
popf
out
jno
clc
sbb
loopne
xor
cmp
or
cmp
xor
mov
inc
jle
and
test
adcl
stos
jae
cwtl
js
inc
pusha
test
cmp
hlt
out
mov
jne
push
jecxz
xor
dec
sbb
xor
push
aaa
inc
jg
arpl
sahf
mulb
cs
xchg
inc
add
out
js
add
mov
lods
scas
lods
clc
aam
mov
jae
push
add
push
dec
xchg
ja
pop
inc
jno
mov
scas
add
adc
or
add
sbbb
shl
jnp
jae
sbb
and
test
jp
adc
add
data16
add
add
xchg
add
pop
clc
sub
fnstsw
shrl
lock
js
adc
inc
mov
xchg
jne
cmp
test
inc
sub
fstps
add
sbb
push
int
out
or
leave
cmc
push
pop
out
or
push
in
fs
jl
imul
cli
daa
xchg
add
pop
pop
xor
pop
and
fsub
add
xlat
imul
jp
push
jbe
or
sahf
test
and
jge
dec
sub
jecxz
roll
mov
sub
incb
js
aaa
test
pusha
mov
cvtdq2ps
and
mov
addr16
and
test
inc
scas
add
js
push
mov
xchg
lcall
outsl
push
add
test
mov
ja
mov
mov
stc
stos
addb
and
xor
jg
cmpsl
jmp
ss
mov
add
add
mov
pop
cltd
sarl
lahf
insl
lods
sub
lret
push
xor
xchg
sub
cs
inc
or
mov
out
jl
and
stos
test
mov
xchg
nop
xor
bswap
lcall
pop
inc
xlat
sub
hlt
addb
test
in
sub
ja
add
mov
shl
leave
psubsb
dec
xor
lock
lea
pop
inc
sub
or
jns
insl
and
jecxz
add
adc
add
adc
movsl
adcl
jne
das
sub
fmuls
add
ret
inc
mov
mov
call
dec
adc
mov
in
lea
movsb
mov
xor
inc
cs
xchg
test
mov
sbb
mov
inc
sub
cmp
jg
shrb
dec
sti
out
and
xchg
push
mov
xchg
and
jmp
fisubrs
movsb
mov
sub
test
aam
cmp
subb
add
daa
xor
lock
push
clc
xchg
jnp
pop
jo
jg
ljmp
clc
push
jb
enter
pusha
fisubrl
nop
inc
pop
jle
or
dec
pop
adc
stos
push
add
and
xor
rclb
cmp
in
xchg
in
mov
jg
pinsrw
movsl
je
inc
push
add
and
aaa
or
js
adc
adcb
or
xchg
dec
subl
stc
add
in
add
or
push
scas
outsl
rorb
add
leave
inc
adc
les
mov
pop
mov
pop
pop
dec
push
push
fsubs
aam
xchg
stos
imul
xchg
or
lock
dec
push
pop
inc
cmpb
sub
in
shlb
pop
push
push
jnp
into
scas
push
add
dec
insb
add
sub
mov
dec
adc
mov
xchg
xorb
xchg
xlat
adc
add
or
add
pop
into
cmp
xchg
repnz
icebp
rcrb
lods
jge
pop
loopne
jae
add
das
call
movsl
out
popf
mov
add
lock
xor
jb
test
push
inc
movsl
aaa
push
jns
stc
xchg
xor
mov
pop
ret
push
mov
stc
aam
ja
fistpl
fmull
dec
pop
lret
add
fcomps
sahf
repz
jno
mov
pop
add
arpl
xor
add
out
cli
add
push
int
mov
cltd
std
pop
lea
inc
push
sub
cmp
int
add
xchg
sarb
rorl
cld
lcall
popaw
pop
std
sbbl
out
mov
inc
dec
mov
lcall
gs
mov
xor
xchg
push
jp
sti
add
in
jmp
outsl
adc
jl
push
cmpb
add
or
das
cs
cmp
loop
lret
enter
sub
fwait
add
mov
enter
jle
add
mov
add
mov
adc
hlt
xchg
cmp
outsb
ja
stos
insl
arpl
mov
cli
jle
loopne
sbb
and
jmp
adc
rorb
insb
sbb
and
mov
das
add
or
xchg
shll
lods
add
cmpsl
leave
sub
cli
push
dec
fnsave
add
mov
dec
push
lret
insl
xor
dec
jl
adc
add
lock
stos
sbb
mov
push
ja
repz
rolb
inc
mov
sub
add
insb
arpl
push
loope
repnz
add
in
and
add
imul
dec
pusha
and
dec
add
fdivr
dec
add
sub
icebp
xchg
xlat
adc
sar
clc
mov
aam
bound
xor
push
fldt
add
push
out
sbb
jp
mov
adc
fbld
sarb
add
in
or
les
nop
js
shrl
fisubrs
out
mov
inc
add
fcoms
cli
loope
sbbl
divb
add
shlb
cmpsb
cmp
out
add
shll
adc
cli
arpl
pushf
sub
push
and
lds
lods
push
gs
int
add
pop
movsb
inc
insl
sbb
add
mov
int3
negl
add
arpl
add
mov
stos
js
add
mov
rcl
repnz
mov
jmp
shll
lea
ret
pop
xchg
nop
sbb
fstpt
xchg
je
or
in
iret
or
push
cmpsb
xchg
xchg
and
and
incb
pop
out
add
mov
mov
mov
test
push
sbb
mov
xchg
cmc
ret
and
mov
call
mov
scas
jne
test
cld
add
fldt
fwait
sbb
pusha
add
push
add
pusha
xrelease
dec
rorb
jbe
xchg
sub
out
dec
xchg
imul
pop
pop
mov
add
test
lea
sbb
add
int
cltd
xor
loopne
in
pop
push
xor
or
pusha
add
jl
mov
sbb
sarl
in
nop
test
lock
scas
add
xor
stos
test
pop
dec
arpl
orb
rcrl
mov
sarb
ljmp
ja
outsl
and
lret
add
push
sub
lret
pop
mov
add
test
cmp
mov
or
mov
xchg
mov
movsb
ja
add
aas
mov
sbb
testl
pop
lea
and
add
in
xchg
imul
adc
add
sbb
test
cmp
and
sbb
in
pop
leave
inc
imul
inc
dec
xchg
sbb
xchg
push
pusha
js
in
mov
xchg
adc
cmp
mov
pop
iret
icebp
cwtl
or
pop
fwait
dec
jp
leave
adc
cmpsl
out
mov
cmc
out
inc
aam
bound
lock
out
add
das
jle
scas
jbe
js
push
in
in
sub
in
push
in
sbb
xchg
xchg
xor
sub
lea
outsb
add
xchg
sbb
jne
fdivrl
mov
rcll
pop
lret
int3
fiadds
mov
inc
sub
add
or
pop
xor
inc
sbbb
add
pop
pop
into
dec
pop
in
or
out
in
jb
dec
inc
les
out
cmp
adcb
aaa
add
int
loopne
subb
mov
add
mov
push
rcrl
adc
lock
aam
rclb
push
add
add
pop
lahf
mov
inc
sub
dec
fs
add
call
insb
sbb
push
mov
mov
jnp
adc
nop
call
fimuls
pushf
out
andb
xchg
ret
xchg
and
les
inc
or
cmp
cmp
push
in
inc
stos
add
mov
frstor
sbb
js
adc
push
adc
int3
scas
mov
test
sub
lahf
and
sub
jl
subb
test
mov
out
adc
jp
pop
mov
mov
call
pushf
mov
test
lea
mov
pushf
add
xchg
cmp
add
repz
or
add
mov
jg
sub
imul
lea
and
pop
sub
jnp
pusha
insb
cld
cli
push
xchg
sbb
subl
sbb
addb
and
mov
in
stos
cli
ljmp
jb
sbb
push
aad
adcb
jg
cs
cli
enter
loop
sbb
in
inc
call
xchg
add
popa
loopne
adc
xor
add
mov
sar
xor
jmp
or
sbb
pop
inc
iret
shlb
fiaddl
clc
faddl
cmp
add
jg
sti
loopne
add
js
xchg
add
or
shl
cmp
add
insl
fstl
sub
cmp
loopne
nop
icebp
enter
mov
pop
push
outsl
add
and
js
and
jo
fcompl
mov
hlt
jo
sbb
adc
in
lahf
pop
mov
clc
mov
bound
adc
lock
push
add
lahf
popa
sbb
xchg
out
outsl
rclb
insb
push
movsb
rorl
popf
mov
ja
adc
inc
lret
scas
push
or
xorb
popa
cmp
gs
jne
lcall
stos
outsl
inc
jne
add
fisttpl
ja
daa
adc
int
bound
sub
push
int3
out
out
mov
jns
icebp
imul
jmp
repz
stos
xor
mov
jb
aas
xor
ds
add
inc
mov
push
lds
cmpsb
test
adc
shlb
movsl
xlat
mov
add
dec
pop
mov
mov
out
pop
add
lds
imul
jno
add
fcoms
inc
mov
xchg
xor
sbb
xchg
rclb
push
cmp
or
pop
add
cld
cwtl
xor
mov
cli
filds
es
adc
loop
subb
add
sub
cmp
arpl
bound
jl
dec
test
out
push
jbe
add
jno
fcoms
mov
and
sti
mov
pop
inc
shlb
inc
xchg
scas
sbb
add
sbb
flds
jns
adc
and
xchg
test
punpcklbw
mov
xchg
cli
int
pop
mov
sbb
aas
bound
rolb
stos
test
sbb
inc
xchg
jo
nop
push
lcall
add
clc
imul
inc
movsb
std
jecxz
insb
pop
sub
dec
dec
add
jae,pn
push
lcall
test
test
xchg
movsbl
sub
lods
add
ficompl
sar
add
imul
in
leave
fsubrl
adcb
sub
sbb
jo
lea
or
shll
lock
dec
enter
xor
xchg
cmp
and
push
out
sub
add
mov
dec
jae
xor
push
adc
scas
roll
sub
mov
out
sar
pop
in
add
cmp
dec
mov
pop
sarb
sbb
mov
cld
dec
pop
fidivl
clc
sub
and
adc
cmp
aad
pop
or
dec
pushf
inc
mov
or
jmp
push
ret
cmpsb
ret
mov
icebp
or
and
sub
scas
fldl
mov
push
xchg
dec
push
andb
sub
and
shl
loop
out
in
enter
mov
test
mov
mov
dec
xchg
jno
loope
or
push
push
lea
and
rcll
lods
roll
mov
mov
xchg
frstor
push
xchg
xor
lcall
mov
add
mov
in
je
pusha
mov
insl
add
bound
popf
dec
mov
cwtl
rcll
adc
int3
add
sub
mov
adc
lods
mov
les
jecxz
imul
xchg
sub
push
cmp
mov
imul
mov
lea
xor
mov
mov
mov
mov
outsl
push
push
adc
cmp
pop
fadd
push
std
push
and
xchg
loop
sbb
sbb
hlt
jae
dec
xor
int3
and
push
push
xchg
insl
mov
cmp
loope
fcmovnb
in
mov
lock
sub
sbb
imul
push
and
add
pop
rorl
and
sbb
pusha
cmc
sbb
imul
outsl
lret
xor
mov
outsb
in
call
pop
inc
add
popa
cmpsl
outsl
add
scas
mov
insl
out
lods
inc
cld
dec
aad
sbb
jae
pop
sub
add
or
sbb
pusha
sub
xchg
int3
sub
aas
add
gs
stc
lods
mov
dec
inc
fnstenv
sbb
mov
push
in
test
mov
stos
dec
push
jo
dec
lret
dec
sub
mov
aaa
xor
out
movsl
and
das
fsubs
xchg
add
leave
adcb
incl
mov
mov
outsb
and
pop
int3
test
pop
adc
inc
outsb
jbe
addb
test
andl
pop
add
in
and
dec
xor
and
icebp
int3
push
sub
mov
lock
aad
fidivs
test
outsl
add
fildll
clc
xchg
push
mov
sub
adc
pop
add
push
cmp
lahf
jecxz
sbb
pop
sub
outsl
lds
fistpll
aaa
cld
in
push
orb
nop
jnp
lret
mov
rcll
out
pop
and
dec
sahf
fadds
fldl
dec
sub
shlb
jb
add
scas
inc
pop
xor
jo
testl
dec
shlb
ss
cmp
mov
stc
cmpl
pusha
mov
adc
push
jmp
jl
incl
and
xchg
add
lret
roll
mov
mov
fwait
add
inc
aas
fistps
arpl
jmp
mov
jge
faddl
lahf
mov
cmpsb
mov
je
rolb
cmp
aam
cwtl
xchg
cmpl
es
sub
and
std
and
addr16
add
pop
dec
clc
push
mov
popa
add
push
sub
mov
dec
sub
stc
add
daa
sbb
mov
bound
call
mov
inc
pop
push
xor
xor
mov
sbb
enter
lret
jne
loope
add
stos
int
rcr
bound
out
push
jne
sar
jp
sbbb
add
not
fdivs
mov
xchg
shlb
push
adc
mov
cli
lcall
idivb
mov
sub
aad
mov
push
in
add
xor
and
call
popf
enter
stos
adc
cltd
xchg
in
sub
or
cs
dec
push
insb
sbb
xor
nop
and
scas
mov
mov
jns
add
lahf
push
push
sub
int3
aam
mov
and
sbb
js
cs
adc
or
aam
mov
movsl
mov
mov
mov
xlat
pop
pop
aad
inc
mov
cld
push
loopne
rolb
pop
sub
cmp
pop
inc
shll
add
cmpsb
xor
dec
les
je
sub
mov
add
outsb
xor
sbb
add
adc
aad
mov
lret
mov
or
sub
loop
insl
inc
int
in
popf
xchg
cmp
testb
out
add
jmp
cmp
cmp
xchg
shlb
add
roll
je
add
imul
mov
std
cwtl
xor
sub
ret
adc
add
xor
mov
mov
dec
sbb
cmp
and
insl
cli
int3
loopne
xchg
in
inc
push
add
adc
fdivrs
cmp
and
enter
cmpsb
xchg
push
add
push
pusha
and
pusha
and
out
sub
add
insl
sbb
cmpsb
pushf
sub
add
or
xor
push
pop
in
out
daa
pop
xor
mov
rolb
mov
or
add
out
inc
sbb
xor
xor
nop
or
pushf
pop
pusha
pop
arpl
add
mov
add
jecxz
es
mov
gs
cmpsb
mov
mov
push
imul
outsb
out
dec
mov
mov
sub
fwait
mov
push
push
loope
adc
rcr
xchg
lods
or
sbb
aad
push
and
imul
mov
sub
in
loopne
jns
mov
sub
add
pop
enter
cwtl
sahf
pop
fiadds
xchg
mov
int3
pusha
mov
mov
inc
movb
aas
dec
fistps
ja
and
cmp
pop
arpl
xor
mov
adc
xor
cmp
push
push
sbb
lea
loop
test
popa
xchg
jo
and
add
pop
sbb
aad
mov
cmp
rolb
push
ljmp
outsl
loop
mov
nop
js
add
outsb
add
xchg
push
lock
mov
fidivs
push
hlt
cmpsl
dec
lret
sub
and
pusha
mov
pop
jecxz
push
jle
pop
xor
cmp
add
mov
inc
mov
pop
push
mov
dec
pop
fidivrs
sbb
insb
xchg
cwtl
and
cmp
sbb
jle
scas
movsl
daa
lret
push
add
nop
hlt
and
fnsave
xor
in
pop
or
pusha
mov
push
sub
cmp
into
jbe
pop
rep
jnp
repnz
xor
and
jnp
mov
aam
and
jp
aad
sahf
inc
sub
rcrl
add
xor
sti
out
add
mov
aaa
and
mov
arpl
iret
sub
dec
insb
jo
test
mov
bound
jge
outsb
movsb
add
fcoms
pop
ds
int
push
xor
jne
pop
pusha
xor
leave
rclb
mov
pop
or
shlb
dec
nop
jmp
add
xchg
repz
test
lret
addr16
add
ja
add
or
jnp
dec
cmpsl
and
cld
fldl
or
mov
or
mov
mov
les
jae
cld
into
add
add
sub
push
rcrb
add
dec
es
add
fadd
rcll
xor
add
aaa
or
cld
fbstp
cwtl
add
xor
fadds
mov
je
cmp
rcrl
and
icebp
mov
mov
add
sbb
cmp
cmp
mov
add
fndisi(8087
xchg
movsb
mov
or
cld
sbb
xlat
or
pop
xchg
jle
and
fsubl
or
or
or
push
or
mov
sub
arpl
push
stos
and
jecxz
or
jge
or
fmulp
xor
stc
adc
push
cld
sbb
push
jp
pop
add
sub
repz
jno
dec
pop
andb
sbbb
sub
mov
mov
and
jecxz
add
js
xor
and
popl
clc
or
lret
fildl
jmp
nop
ret
lods
enter
add
popa
add
in
push
mov
jge
or
or
fwait
cmp
xor
jb
or
or
mov
or
jl
arpl
fsubrs
or
clc
xor
add
mov
inc
add
adc
xor
mov
mov
adc
iret
in
loope
loopne
jns
clc
ret
and
mov
lret
or
ret
or
aam
adc
or
adc
cwtl
nop
sbb
mov
cmp
push
ds
insl
sti
test
rdtsc
add
add
incl
andb
fwait
mov
adc
subl
pusha
adc
pop
mov
and
push
or
mov
je
inc
cld
pop
dec
jae
xor
imul
xor
push
adcb
jae
or
cmp
add
lret
repz
jnp
xchg
sbb
fidivs
fs
and
sbb
jecxz
or
add
jb
test
nop
inc
mov
inc
mov
bound
pusha
mov
shrd
data16
inc
sub
inc
xor
lret
mov
or
adc
ret
shr
adc
popf
add
push
or
add
xor
sub
jecxz
arpl
or
cmp
enter
xor
andb
push
bswap
mov
ret
or
xor
movb
jae
add
or
pop
imul
or
adc
xor
sbb
stos
mov
sbb
sbb
xchg
add
cmp
loopne
jge
clc
pop
inc
test
lea
add
mov
adcl
xor
adc
mov
test
xor
mov
adc
clc
cmp
inc
dec
orb
sub
jecxz
and
xor
xor
jp
and
jge
dec
sbb
mov
dec
add
int3
or
call
sarl
xorl
cmp
repz
add
adc
dec
enter
mov
fucomi
or
pop
int3
xor
inc
inc
pop
dec
inc
mov
addr16
mov
jbe
arpl
push
shr
or
jecxz
and
sbb
inc
or
test
xor
sarl
ret
ja
test
mov
or
xchg
add
scas
add
pop
sbbl
cmp
sub
sbb
or
subb
mov
or
das
pop
fisubl
pop
aad
mov
push
cmp
adcl
push
sbb
in
dec
or
and
mov
sti
call
lods
xor
xor
mov
inc
stc
negb
xchg
jo
push
jle
xor
push
jbe
sub
ret
inc
sub
jo
and
jne
mov
mov
or
fistpl
and
inc
lcall
xchg
mov
dec
adc
bound
repnz
shl
or
cmc
or
stos
pop
or
xchg
nop
xor
mov
or
add
mov
mov
cld
or
insl
sbb
push
pop
or
fdivrs
in
stc
sub
pop
loopne
gs
or
cmpb
call
xor
arpl
and
or
mov
js
add
cmpsl
les
mov
pop
ret
or
sbb
sbb
outsb
adc
or
addb
sub
bound
icebp
xor
sub
inc
mov
mov
in
arpl
mov
jnp
or
jp
dec
arpl
adc
adc
adc
adc
add
jb
or
or
cltd
les
sub
fmuls
or
push
sbb
jge
aam
roll
sub
or
cmp
inc
dec
into
sub
xchg
and
out
inc
call
lret
lods
mov
sarl
sub
jnp
and
jl
push
loope
xchg
ret
add
push
mov
out
cmc
push
pusha
cld
mov
jo
xor
nop
pushf
clc
cltd
xchg
js
lods
mov
jmp
jo
inc
cmp
and
bound
or
leave
faddl
lock
mov
jmp
or
add
mov
sbb
bound
or
add
mov
mov
sbb
or
subb
and
push
xchg
fimull
into
out
add
xchg
cmp
xchg
fadds
lock
cli
cwtl
call
orb
jecxz
cwtl
mov
adc
jl
sub
pop
rcrb
and
mov
add
data16
addb
mov
out
ja
es
sub
push
nop
adc
or
sub
push
add
hlt
loopne
pop
mov
adc
add
xor
repz
sbb
in
cmpsb
cmp
mov
stos
fs
nop
sbb
lret
cmp
shll
add
sbb
cmc
stc
cwtl
xor
or
fidivrs
lcall
sbb
mov
or
adc
out
cwtl
icebp
xor
mov
and
push
push
adc
sti
jmp
imul
stos
add
push
jmp
adc
lahf
movsb
movsb
popf
add
mov
inc
or
jno
or
insb
sbb
jmp
xrelease
xchg
std
adc
adc
xor
or
adc
cli
iret
inc
pushf
mov
nop
sub
pop
mov
adc
scas
jge
xor
or
adc
loopne
adc
mov
mov
repz
test
add
lea
xchg
repz
adc
mov
js
bound
pushf
arpl
push
sub
mov
repz
or
mov
xorb
jo
or
xchg
mov
repz
and
jae
add
pushf
push
addl
xor
jl
nop
imul
je
or
add
js
mov
mov
or
mov
aaa
xor
addl
or
push
inc
rcrl
add
push
lret
movsw
shlb
mov
pushf
jmp
mov
and
add
xor
lock
adcb
hlt
stc
scas
loopne
lock
pop
je
pop
pop
pushf
or
xor
add
jns
pushf
sub
ja
or
jmp
leave
in
adc
dec
movb
push
inc
cmp
hlt
mov
scas
sahf
nop
roll
imul
aam
subl
and
mov
add
mov
vpaddsw
mov
mov
js
add
mov
xchg
push
pop
icebp
scas
add
stos
add
add
loopne
repz
add
int3
pop
add
mov
or
test
inc
mov
sub
and
call
cmp
filds
faddl
fwait
out
arpl
lock
push
or
push
push
fildl
push
adc
repz
dec
pop
sub
and
nop
test
orb
lret
mov
jb
fdivs
sarb
loope
rolb
sbb
or
mov
pop
xchg
jb
les
ret
in
mov
sarb
aad
iret
mov
inc
mov
clc
add
dec
sahf
dec
into
pop
mov
fwait
aam
mov
add
addr16
jno
and
rorb
mov
repz
roll
imul
adc
mov
or
jo
cwtl
sti
cmp
add
mov
or
int3
sbb
or
add
dec
xchg
adc
cwtl
jnp
xchg
mov
sbb
inc
addb
add
ret
mov
cmp
xchg
lret
cltd
xor
adc
mov
arpl
or
or
mov
mov
mov
lods
and
dec
scas
xchg
mov
scas
xor
enter
cmp
ja
jne
push
sbb
and
jmp
xor
and
inc
ret
xchg
fs
imul
or
xor
js
sbb
pop
mov
enter
movsb
and
mov
sti
or
push
insl
lea
xlat
shlb
fmuls
arpl
add
aad
jae
mov
xor
add
aam
pop
shlb
mov
mov
sti
adc
inc
adc
fwait
xchg
mov
jecxz
stos
std
int3
sbb
xor
inc
cld
addl
lds
xor
movsb
fadds
or
pop
in
mov
or
adc
mov
add
ds
push
inc
xor
xchg
push
ljmp
pop
bound
cwtl
xor
loope
nop
and
jl
adc
mov
adc
sbb
or
adc
add
mov
inc
cmp
adc
xor
and
dec
adc
insb
jnp
imulb
mov
lret
roll
in
sub
jno
pop
test
and
and
mov
addl
xchg
fisubl
fs
add
icebp
xor
leave
lret
xor
lock
pop
fs
enter
inc
and
stc
in
or
add
fisubs
add
aas
or
mov
add
lcall
mov
pop
xchg
mov
add
imul
adc
jl
or
push
enter
out
jo
jecxz
sub
fdivrl
add
inc
add
add
cli
andl
or
icebp
popa
nop
mov
jmp
mov
imul
cmp
adc
cli
add
or
adc
pop
jmp
or
pop
shlb
es
inc
sbb
movsb
push
sub
pop
mov
mov
cmp
clc
xor
mov
push
scas
out
shll
and
add
rcr
cs
dec
call
and
xchg
test
jo
adc
roll
out
adc
clc
lret
loopne
movsl
shlb
insl
aam
mov
mov
stc
jns
inc
aad
call
add
les
add
adc
mov
cmp
xchg
aad
dec
push
adc
push
fcmovbe
es
inc
ja
cmp
xchg
dec
lock
adc
aam
enter
sti
fs
jg
mov
sub
lds
and
dec
lea
mov
dec
dec
add
test
push
cmp
je
adc
pusha
movsb
lock
add
push
cmp
cmp
mov
stc
in
jmp
mov
rclb
ret
call
sti
sub
mov
sub
rorl
les
cmp
push
sbb
inc
cld
dec
add
scas
std
and
clc
push
add
xchg
test
lods
leave
lahf
hlt
add
out
pop
out
stc
rolb
add
lret
daa
hlt
shll
sbb
and
add
and
hlt
clc
ret
enter
add
rcrb
cwtl
leave
jl
inc
or
inc
ficompl
enter
mov
adcb
rorb
and
mov
adc
cmpl
or
loope
loopne
and
mov
enter
jno
sbb
or
pop
bound
insb
lock
push
adc
nop
int3
or
mov
sbb
mov
or
or
lock
into
cmc
add
mov
xor
sub
adc
fwait
cmp
mov
lret
stos
enter
pop
mov
push
cwtl
icebp
iret
mov
xor
or
lds
pop
lahf
into
es
xor
or
sti
sub
dec
add
jg
xchg
into
pop
xor
mov
enter
pusha
jle
inc
and
mov
and
inc
inc
arpl
and
enter
cmp
les
jle
dec
and
push
mov
cmp
add
lock
stos
jmp
or
les
ret
dec
mov
dec
les
inc
and
adc
and
jl
je
cwtl
pop
inc
imul
jl
fsub
push
inc
into
stos
xchg
subb
add
movsb
mov
rorl
popa
pop
enter
xchg
bound
into
fidivrl
xor
rorb
imul
or
leave
clc
popa
xchg
jl
stos
test
out
inc
pop
add
enter
and
add
test
or
xchg
sub
add
push
cli
rcrl
or
mov
sub
cs
cmp
aam
and
pop
or
push
subb
fwait
and
std
mov
jecxz
push
sbb
jl
xlat
or
add
xchg
mov
or
add
fadd
mov
call
divl
data16
xlat
push
jg
xchg
mov
stc
sbb
sub
mov
mov
repz
or
cli
or
or
push
js
shrl
or
jl
xor
or
mov
add
xor
jmp
mov
fs
aam
popf
or
adcb
cmpsb
je
insb
sub
mov
test
adc
or
sbb
rcll
arpl
test
adc
jae
cwtl
call
js
bound
sbb
leave
out
push
mov
notl
adc
pusha
xchg
sarb
push
out
jecxz
repz
cld
ret
outsl
je
pop
out
shl
mov
push
stos
inc
jecxz
sub
shll
inc
mov
cmp
inc
call
aam
fistpll
data16
add
sub
lea
jl
pushf
push
pop
inc
out
cmp
dec
adc
mov
outsl
jo
js
sti
out
adc
testb
and
dec
sarl
sub
aas
imulb
call
les
pop
lods
inc
out
leave
xchg
mov
je
scas
mov
test
les
je
or
stc
inc
out
jmp
inc
mov
insb
repz
fadds
mov
mov
mov
insb
xchg
sub
shll
rorb
sti
or
incl
orl
lods
and
add
enter
sahf
into
inc
lods
fcomp
pop
repnz
adc
add
cwtl
adc
jecxz
arpl
int
xor
loop
sbb
jl
inc
fildl
jno
mov
xchg
aam
pop
arpl
pop
xor
inc
ficoml
push
jae
sub
xchg
arpl
adc
mov
clc
mov
inc
movsl
sahf
cmp
mov
es
dec
add
cld
or
lcall
int3
lds
mov
lods
fbstp
jb
mov
adc
xchg
pop
or
int
or
mov
inc
rclb
mov
cwtl
shrl
adc
xchg
into
sbb
or
fdivrs
mov
dec
pop
rcrb
out
jecxz
dec
stos
fwait
cmp
fbstp
ds
jge
bound
imul
ret
shlb
push
insb
mov
jo
xchg
scas
add
jecxz
add
add
pop
mov
push
adc
daa
push
arpl
and
aaa
pop
shrb
insb
pop
into
mov
test
sbb
mov
pop
out
jno
call
sarb
cmp
inc
mov
push
loopne
pop
mov
in
sub
dec
or
out
or
or
cltd
pop
push
cmp
xor
xor
fisttpl
inc
lock
bound
cmp
add
or
repz
les
arpl
sub
jmp
xchg
loopne
push
adc
push
push
pop
in
les
cld
mov
aaa
addr16
xchg
adc
aaa
jo
push
cmp
or
cmp
dec
dec
nop
stc
inc
aaa
sub
les
subl
add
aaa
xor
faddl
cs
inc
xor
dec
ljmp
sbb
mov
push
mov
cmp
pop
or
adc
xchg
jno
xor
cmp
inc
xor
jb
sub
jmp
mov
or
loope
adc
jl
das
or
repnz
dec
xor
sub
hlt
push
les
jmp
fistps
push
cmpsb
clc
push
xor
inc
sbb
jo
sub
push
cltd
adc
add
inc
enter
or
adc
jecxz
fwait
sbbl
popf
fwait
cmp
adc
xchg
xchg
pop
or
inc
or
xchg
rcl
inc
adc
add
or
inc
dec
bound
lcall
enter
popf
addr16
xchg
xchg
xchg
rcll
sahf
repnz
loopne
pop
and
outsl
aas
mov
pop
sbb
jnp
icebp
pushf
nop
sbb
les
or
or
iret
sbb
mov
cmovb
lret
xchg
sub
fwait
test
xchg
sub
adc
pusha
test
jg
pushf
push
sub
xchg
jecxz
adc
insb
inc
mov
in
mov
rcrb
sub
or
fdiv
adc
and
mov
cmpb
jno
loope
jmp
out
add
mov
movsl
movb
cmpsb
or
pop
clc
sbb
ja
sub
push
mov
dec
adc
out
add
pop
testb
adc
push
adc
inc
xchg
sub
subb
lds
add
fdivl
out
mov
imul
push
add
into
mov
pop
dec
cmpsl
sarl
and
fldenv
leave
pop
jp
push
stos
movsb
add
jb
je
push
adc
popa
adc
aas
pop
mov
popf
adc
sbb
mov
push
adc
aaa
shl
or
lahf
orb
outsb
add
add
fwait
popa
fmuls
divl
bound
enter
sbb
add
cmpsb
pop
cmpl
addb
ljmp
cmp
push
add
xchg
ljmp
pop
adcl
lds
dec
sahf
dec
out
sbb
xchg
xchg
call
cmp
adc
mov
jo
insl
cli
or
push
imul
push
sbb
loop
add
push
mov
call
sbb
push
clc
mulb
or
pop
sti
scas
out
sub
sahf
xor
push
movsb
mov
js,pt
insl
mov
stc
dec
ds
lcall
sbb
sbb
es
xchg
rcrb
out
xchg
shlb
mov
or
cmp
ss
cmp
mov
fsubs
test
testb
sbb
mov
or
pop
push
mov
sub
mov
adc
ss
sub
xchg
js
enter
xchg
add
mov
orb
cli
mov
pusha
cmp
aad
pop
add
shll
data16
into
adc
scas
rclb
bound
data16
outsb
adc
add
xor
inc
cmp
inc
mov
in
inc
dec
and
loopne
xor
stc
mov
rcrl
test
cmp
xchg
add
insl
ds
mov
lret
jno
lods
sahf
roll
push
sbb
push
jmp
test
cmp
mov
repnz
add
push
add
adc
pop
sbbb
mov
lea
insl
addl
add
incl
stc
mov
xor
dec
xchg
inc
sbb
dec
iret
mov
jl
dec
loope
and
pusha
js
mov
push
dec
scas
add
insl
testl
mov
iret
das
and
orl
incl
lea
jno
or
test
outsl
adc
inc
stos
aad
xchg
xchg
test
lea
xor
test
jmp
sbb
adc
popf
out
inc
mov
aam
ja
inc
test
or
rorb
push
daa
test
flds
jl
sbb
inc
and
mov
rolb
sub
js
mov
inc
xchg
stc
dec
adc
push
sbb
push
pop
cwtl
das
dec
mov
xchg
popa
js
lcall
and
add
adc
or
mov
mov
mov
mov
add
xchg
sub
lock
or
add
insl
pusha
xor
out
mov
adc
pop
and
inc
repz
add
cmc
jmp
push
inc
jl
xchg
lahf
ljmp
movsb
cmp
stc
dec
mov
and
int3
add
add
dec
inc
rcr
mulb
stc
xor
ret
mov
dec
rcr
adc
pop
xchg
push
inc
sub
pop
inc
cmp
lahf
push
fdivrs
aaa
add
adc
insl
fwait
jle
lock
adc
out
pop
xor
dec
scas
fldl
adc
xchg
decl
jp
mov
push
clc
cwtl
mov
cmp
sub
cmp
stc
or
adc
jbe
insl
cwtl
aas
jmp
fdivl
or
add
lret
insl
js
out
mov
pop
pop
sub
push
lahf
pop
shlb
or
mov
sbb
mov
mov
rcrl
test
xchg
outsb
cmp
add
ret
cli
stc
call
inc
xlat
insl
cmp
dec
inc
aaa
js
movsl
in
xchg
add
fdivl
pop
sub
inc
jne
stc
jecxz
shll
add
pushf
push
dec
adc
int
mov
inc
push
inc
lret
add
add
mov
add
inc
aas
pushf
and
cmpb
dec
repz
mov
or
out
imul
mov
scas
sarb
movsl
mov
pop
pop
jl
pop
xorb
ds
subb
adcl
or
cld
pop
fdivrp
fstpt
mov
push
pop
iret
loope
aad
clc
in
add
int
or
add
test
jbe
fcmovnu
jp
cmc
pusha
cmp
dec
pop
inc
std
add
insl
pop
leave
sbbb
out
add
out
lret
mov
dec
ss
pop
pop
movsl
iret
add
sbbl
in
push
les
mov
xchg
js
mov
add
ds
push
mov
and
xor
push
mov
jmp
jecxz
add
pusha
repnz
mov
testl
outsb
add
imul
add
gs
dec
call
xchg
xor
ds
pop
enter
sbb
push
std
sbb
pop
xchg
arpl
xchg
push
rol
out
in
outsb
int3
daa
mov
jb
inc
push
adc
pop
xlat
addb
push
into
iret
cli
inc
jo
cmpsl
xchg
xor
lods
add
je,pn
jae
in
dec
mov
mov
jno
sbb
adc
push
xor
dec
jo
orb
mov
mov
sti
pop
adc
xchg
dec
push
mov
jecxz
repz
ror
sbb
inc
push
shll
lock
xor
test
stc
jle
add
push
jg
adc
pop
push
int
sbb
sub
mov
cli
mov
roll
in
pop
ss
and
and
js
mov
fstl
lret
cmpb
jb
clc
or
daa
add
add
roll
popf
mov
fdivrl
pop
cmp
movsb
iret
rclb
lea
jne
or
das
cmpsb
adc
popf
js
add
mov
repz
sbb
add
sbb
sub
add
arpl
movsl
jp
test
pop
sub
dec
addr16
pop
add
iret
mov
and
cld
mov
jle
lahf
mov
popa
inc
jno
add
sub
xor
xchg
sbb
pop
movsl
mov
pop
scas
inc
pop
jb
jae
jg
and
in
cmp
rorl
add
mov
fistl
bound
inc
shll
ja
add
rclw
rclb
mov
scas
push
xchg
pusha
add
je
lods
jbe
add
adc
mov
xor
jb
cwtl
dec
mov
pop
test
iret
lret
adc
int
int3
or
cs
cli
sbbb
pop
push
adc
pop
or
aas
push
xchg
jecxz
mov
xchg
push
inc
add
mov
xor
enter
testl
mov
lret
add
pop
add
add
xchg
outsb
jo
sub
add
or
dec
mov
inc
add
xor
out
hlt
loopne
jbe
add
lret
daa
mov
pop
xchg
stos
loopne
cltd
iret
pop
fwait
insl
dec
inc
scas
cs
pop
repz
dec
mov
jno
add
dec
add
fstps
push
or
pop
add
shrl
mov
add
xor
sub
jecxz
mov
insb
dec
push
les
add
fisubs
mov
xlat
cli
pop
or
or
ret
mov
icebp
dec
add
sub
stos
jl
cs
add
cmp
es
and
mov
stc
fidivs
xchg
ret
lods
and
mov
test
stos
repnz
add
das
or
xchg
push
and
xor
cmpsl
hlt
daa
push
sbb
adc
inc
inc
add
xor
sahf
outsl
xchg
pop
test
or
sub
jb
add
sub
mov
insb
mov
sbb
xchg
out
add
push
mov
jge
test
push
sub
mov
mov
pushf
fisubl
mov
imul
ret
inc
pop
pop
dec
int3
and
aad
into
cmp
pop
add
inc
aam
add
stos
dec
inc
rorb
das
and
push
mov
cmp
cld
or
push
mov
icebp
add
xchg
addr16
mov
fcomps
push
imul
xorb
loope
adcb
loopne
push
pop
cltd
mov
shlb
mov
push
pop
roll
stos
call
jno
xor
xlat
dec
movsl
clc
pop
cmpsl
jmp
xchg
cmp
mov
mov
ds
push
push
jp
xor
mov
xor
jbe
pop
mov
sti
jle
add
adc
sbb
imul
popf
fisubl
repz
subb
add
rclb
mov
rcrb
add
rcr
xor
out
mov
xor
xchg
cmpsl
fdivs
jb
xchg
insl
xor
add
sbbl
popf
jnp
out
mov
scas
sub
stc
ljmp
jnp
leave
pusha
mov
or
mov
rolb
fwait
dec
dec
sub
add
daa
add
mov
fldl
pop
mov
outsb
jb
insl
fiaddl
icebp
sahf
iret
and
bound
pop
dec
sbb
out
ss
adc
sar
leave
push
and
adc
add
pop
lods
call
movsb
push
and
lcall
dec
add
mov
cmp
inc
mov
les
testb
push
mov
jo
test
sahf
fsubrl
andl
dec
daa
es
mov
jbe
jo
or
adc
or
xchg
jp
sti
je
aad
enter
and
add
aas
inc
test
or
popa
xor
push
add
mov
push
out
enter
mov
add
mov
xchg
shlb
dec
and
scas
fwait
movsb
jp
shrl
add
adc
les
push
stc
push
test
aad
cmp
pop
lock
lods
xor
add
out
vmovapd
loopne
cmp
jbe
lret
or
add
pop
cmp
andb
aaa
insl
aam
add
jbe
test
add
mov
loop
dec
outsb
and
adc
jle
out
jmp
add
or
std
inc
push
sub
scas
jg
push
psubd
in
test
shl
inc
stos
leave
adc
cmpsb
mov
xchg
xchg
mov
movl
sti
aaa
je
roll
insb
or
dec
ret
and
ds
mov
cld
add
add
adc
add
repnz
cmpl
adc
call
icebp
lods
push
xlat
pop
xchg
arpl
mov
mov
loopne
mov
pop
or
add
and
add
pop
inc
insb
sbb
push
pop
iret
mov
cld
inc
mov
add
add
add
jle
fidivrs
ret
sbb
push
and
pop
and
xorl
addb
sahf
pavgw
inc
cmpsl
add
or
roll
insb
jnp
popf
push
dec
mov
xlat
pop
push
mov
jb
add
sbb
or
cld
add
cmp
pop
lret
dec
aas
xorl
add
in
adc
ror
sub
xor
mov
add
adc
sub
push
cmp
push
push
rorb
sti
xor
insl
je
mov
bound
ret
call
jbe
pop
fwait
pop
dec
cmp
movsb
jl
sbb
push
in
sub
mov
dec
mov
push
or
pop
xchg
loopne
sbb
cmp
push
hlt
xor
out
dec
cwtl
nop
add
push
popf
mov
or
fimull
fnsave
mov
mov
inc
repnz
sbb
inc
inc
xchg
jmp
leave
pop
ja
div
mov
je
shlb
and
xlat
inc
jnp
stc
cmp
sbb
cwtl
popf
cmp
pushf
xchg
inc
jmp
icebp
mov
inc
inc
pop
aam
push
jne
cmp
sub
rorl
rolb
scas
loopne
dec
adc
pop
pop
not
cmp
scas
shr
jae
addb
xchg
pop
mov
fsubrl
xor
add
mov
shlb
bound
xor
pusha
pop
pop
mov
addb
xor
leave
gs
imul
inc
inc
add
jbe
cmp
fwait
push
loopne
and
add
pop
jge
push
cld
jle
mov
fimull
pop
popa
lds
fiaddl
daa
ffree
xchg
fmuls
dec
test
mov
xchg
sbb
mov
sub
xchg
inc
sbb
mov
jae
jmp
add
adc
xor
xor
in
daa
jnp
mov
mov
mov
lock
pop
stc
sahf
push
mov
jmp
test
adc
and
lea
mov
add
testl
mov
mov
sbb
sbb
xchg
push
pusha
or
cs
fnstenv
cmpb
pop
rorl
call
or
and
stc
lret
add
inc
push
or
scas
add
lcall
xchg
clc
or
ds
add
adc
shll
add
jmp
adc
ret
fcoml
cmp
pusha
into
sub
lods
cmp
inc
ss
jns
mov
fildl
insb
xchg
sub
push
call
mov
shrd
jae
outsl
add
mov
pop
mov
scas
bound
movsb
cmp
mov
ffree
push
insl
pusha
dec
jno
fdivl
jne
add
inc
mov
lret
jge
pop
addr16
cli
inc
ud1
inc
pop
xchg
inc
add
xlat
cld
dec
icebp
shll
subb
xor
adc
in
popa
mov
imul
pop
and
movntq
out
push
in
aas
jmp
bound
mov
pop
and
and
jb
xor
sbb
stos
add
jne
mov
shlb
pushf
cwtl
or
lcall
jbe
jnp
add
loopne
push
push
push
int3
repz
push
je
add
lcall
add
xor
xchg
scas
sbb
rol
pop
push
or
xor
shl
into
dec
fimuls
shll
mov
xchg
xor
mov
dec
rcrl
jecxz
stc
add
jae
das
cltd
cld
dec
jno
add
mov
mov
add
cmp
dec
cmpsb
std
mov
mov
and
push
sub
clc
xchg
dec
mov
sub
jns
inc
add
jbe
jmp
push
call
pop
mov
jbe
sti
xor
adc
out
pop
add
or
pop
andb
push
inc
inc
jnp
mov
rcr
cli
xor
or
int
add
jbe
jmp
inc
and
in
cli
ljmp
xchg
in
fiaddl
test
inc
pop
adc
ja
adc
mov
sub
addl
mov
aad
fldl
dec
bound
cwtl
adc
add
inc
les
cmpxchg
lds
push
add
xchg
dec
pop
or
sti
fsub
call
push
cmp
add
outsb
lcall
arpl
int3
je
or
test
iret
out
add
pop
aaa
xor
incl
dec
pop
sbb
lret
dec
mov
addb
das
int
dec
insl
je
add
aam
jae
pmuludq
cwtl
xchg
subb
inc
adcl
adc
pop
scas
enter
xchg
mov
add
jecxz
push
add
adc
cmp
add
fcomip
ja
lock
push
sub
bound
jecxz
mov
and
xchg
subps
add
in
cmp
mov
pop
ljmp
add
cld
adc
lds
push
subb
cmp
add
in
loopne
xor
mov
cmp
add
dec
imul
aas
jg
mov
addr16
jns
pop
adc
addl
push
es
add
push
sub
outsb
call
testb
mov
jae
les
adc
inc
std
cmp
popa
xchg
add
nop
call
dec
cmpsb
icebp
pop
in
mov
pushf
leave
jmp
lea
mov
int
iret
cmp
subb
mov
stos
inc
adc
pop
cmc
fdivl
sbb
out
sub
adc
addl
mov
test
push
add
mov
sbb
notl
add
adc
and
cmp
mov
adcb
jne
adc
inc
pusha
push
dec
push
xchg
dec
rol
mov
scas
mov
popa
sahf
nop
or
aas
add
jl
sbb
stos
add
pop
xchg
popw
out
stos
or
mov
cmpsb
sbb
pop
lea
sub
shll
cltd
add
cmp
mov
add
jmp
js
movq
addr16
loopne
clc
or
add
mov
sbb
dec
push
jp
rolb
ja
aad
addr16
mov
mov
mov
orl
loopne
or
mov
pop
ret
shl
jno
ret
ss
mov
add
repnz
pop
pop
std
test
jge
jns
movsl
inc
sbb
fs
xchg
add
cmpl
sub
arpl
xlat
mov
cltd
hlt
xor
pop
xchg
push
sbb
pop
maskmovq
testl
loop
pusha
pusha
adc
add
outsb
adc
mov
add
std
sbb
push
jmp
add
jecxz
out
mov
add
xchg
vmwrite
or
bound
ja
sahf
add
xor
ds
inc
sbb
movb
jns
call
add
rorl
cwtl
std
pop
mov
mov
cmp
pusha
adc
das
jo
ljmp
popa
dec
fdivl
add
cmc
push
loopne
push
sbb
push
add
inc
add
arpl
push
inc
jo
push
int3
clc
in
pop
mov
and
nop
mov
repnz
add
push
in
fildl
add
fidivrl
subb
add
fwait
cltd
jbe
cmp
push
or
mov
add
aad
bswap
imul
add
cwtl
sbb
push
xor
adc
sti
push
pop
adc
aam
sbb
mull
ret
mov
add
jns
xchg
push
mov
jo
push
int3
add
pop
adc
mov
add
add
pushf
cmp
jbe
fists
sub
xor
jne
pop
out
xchg
inc
lret
std
cmpsb
nop
xchg
adc
add
cld
add
add
adc
mov
push
or
sbb
add
js
push
iret
pop
out
or
imul
add
out
push
ja
push
shrd
mov
test
mov
add
jg
ja
adc
mov
aas
add
clc
sbbb
sbb
mov
mov
push
lock
jmp
add
mov
lret
push
cmpsl
mov
flds
pop
orb
sbb
push
setno
stos
mov
dec
push
cmp
shlb
add
xchg
movsl
out
add
mov
pop
and
in
mov
shrl
shll
add
lods
fidivs
pusha
daa
jmp
sahf
fwait
push
gs
lahf
in
and
add
inc
idivb
inc
push
insl
cmp
pop
fs
mov
mov
add
cwtl
call
xchg
dec
lret
xor
adc
into
and
js
jns
add
scas
mov
push
add
insb
and
imul
push
mov
ss
rcl
sub
data16
loopne
cmpsl
mov
jnp
sbb
adc
push
push
shl
sar
ds
or
in
mov
bound
shlb
fildll
aaa
xchg
orb
xchg
inc
add
inc
es
add
dec
clc
fildll
iret
add
popa
imul
aam
aad
adc
rclb
add
cmp
cwtl
icebp
lcall
adc
stc
add
jb
je
xor
rclb
mov
flds
int
mov
shll
clc
or
add
sbb
mov
mov
mov
roll
and
sbb
in
cli
sbb
add
in
fstps
and
sub
in
aad
xorb
mov
ds
and
cmpsl
pop
inc
xor
or
dec
add
inc
jns
add
or
push
and
xor
mov
test
jge
mov
leave
add
push
fimuls
add
cmc
rep
lret
push
xlat
std
mov
repnz
sbb
lahf
in
lret
and
push
sbb
mov
pop
es
push
ret
cmp
sub
pop
mov
adc
pop
leave
lret
in
imul
mov
lret
or
adc
mov
scas
add
stos
pusha
setne
or
cmpsl
add
adc
add
int
mov
cmp
icebp
add
add
add
sbb
jo
xchg
aas
lock
inc
add
cltd
mov
pop
or
repnz
add
out
inc
pi2fd
inc
mov
dec
add
push
mov
pop
add
cmp
pop
inc
fsubrs
stos
testl
jae
lea
add
movsl
adc
mov
ret
shlb
mov
push
mov
add
push
sbb
xor
push
lret
add
js
lock
stos
pop
xchg
xor
pop
testl
xor
xor
test
cwtl
mov
xchg
stos
lret
lahf
aaa
cmp
pop
fcomps
add
scas
stos
pop
xor
mov
adc
mov
cwtl
fsubrs
bound
inc
xchg
sbbl
jmp
jns
add
fadd
sub
js
mov
jl
cmp
pop
hlt
mov
add
mov
xchg
fwait
notl
mov
push
daa
or
fcmove
jno
cltd
jae
pop
icebp
data16
daa
jmp
push
std
sbb
dec
inc
push
push
add
and
pushf
mov
ret
mov
insb
cld
xchg
pop
xchg
inc
shll
loope
or
push
cmpsl
add
mov
shll
add
cmpb
xchg
imull
cmp
stos
lods
callw
mov
xchg
pop
js
cmp
or
cmp
nop
add
mov
mov
rcll
scas
pop
xor
sub
inc
push
cmpl
shlb
cltd
ds
pop
dec
add
lahf
out
cmp
adc
imul
fists
cld
dec
orb
outsl
scas
movsl
add
lret
jnp
or
cmp
adc
daa
mov
pop
jb
add
and
add
pushf
xchg
adcl
cwtl
in
fisubrs
mov
pop
shlb
daa
sub
nop
orb
push
sub
fs
mov
loope
lcall
pusha
cmpb
and
mov
add
dec
cmp
popa
shrb
cwtl
sbb
sbb
adc
add
dec
leave
sbb
lock
xor
add
notb
ds
mov
jg
mov
mov
gs
xchg
ja
push
out
out
sarl
xchg
pusha
jl
add
aam
inc
push
mov
fptan
push
add
mov
int3
shlb
dec
jne
out
into
ljmp
mov
or
push
xor
and
inc
pop
lahf
js
scas
add
inc
hlt
mov
push
mov
inc
mov
dec
push
inc
dec
inc
xor
xchg
les
pop
add
xor
pusha
pop
ljmp
or
movsl
pop
test
sbb
cmp
outsb
lods
outsl
push
das
xor
scas
or
push
pop
adc
push
mov
shr
jne
mov
cmp
je
loopne
mov
or
pop
xlat
das
negl
sbb
lock
mov
and
jne
sbb
or
dec
adc
cmp
mov
jne
add
frstor
outsb
pop
stos
add
std
hlt
mov
cmp
mov
je
push
pop
hlt
inc
add
xor
cwtl
loopne
loopne
add
xor
cs
sub
add
filds
loopne
test
ds
adc
shl
fildll
mov
push
outsb
iret
add
pop
adc
pushf
pop
add
icebp
add
aam
std
test
dec
mov
pop
inc
or
dec
cmpsl
jb
add
mov
mov
xchg
add
fdivr
test
pop
jmp
dec
insl
mov
jl
das
mov
sub
sbb
xchg
and
push
je
push
insb
aaa
push
xchg
add
aam
or
cmp
dec
rcrb
pop
adcb
add
mov
sub
jne
mov
stos
add
mov
stc
and
push
cmc
out
jge
xchg
pop
stos
mov
sbb
enter
add
daa
pop
add
xchg
jl
add
fdivs
mov
sbb
std
xor
call
imulb
call
iret
rol
enter
aas
sub
push
jp
int
stos
mov
sub
icebp
cmp
adc
leave
inc
in
loopne
lret
push
push
add
xchg
push
aad
enter
sub
ja
ljmp
mov
insb
or
scas
rcrb
or
jno
addr16
out
into
add
sbb
add
sub
xchg
push
or
pop
mov
cmp
sbb
add
and
lods
int
rcrb
in
mov
push
rcrb
sbb
lock
frstor
inc
mov
mov
inc
mov
cmc
jl
xor
js
mov
pop
fcomps
push
cmp
inc
nop
lods
add
mov
pop
push
pop
push
popf
lock
push
add
inc
add
pop
push
cmp
fsubrs
push
addl
ficoml
push
push
pushf
enter
sub
out
xlat
loop
ja
pop
xor
ljmp
dec
jnp
dec
jne
loopne
xchg
repz
pop
jbe
add
daa
cmpl
mov
sti
enter
lea
shr
jne
xchg
xlat
jns,pt
jecxz
enter
add
in
mov
add
out
add
inc
or
add
stos
int3
xchg
enter
mov
cwtl
pop
mov
in
out
pop
inc
mov
sahf
xchg
add
jo
into
ja
in
xor
addr16
xor
adcb
in
add
pop
cmp
incl
and
inc
push
sub
outsb
js
xor
jbe
mov
out
push
adc
shlb
jb
stos
dec
add
out
bound
hlt
jae
pop
addl
and
or
xchg
push
mov
aaa
leave
add
adcb
or
add
sbb
movsl
shrb
ja
dec
lcall
mov
add
xor
subb
or
movb
and
xchg
add
jb
xchg
and
iret
sbb
mov
mov
and
add
fdivrs
lds
movsl
rolb
push
or
add
enter
nop
addb
popa
jne
fst
iret
cmp
adc
mov
outsb
bnd
cmp
repz
inc
jns
movsl
nop
lahf
mov
ret
lds
cmp
insb
dec
push
add
mov
fstl
add
fdivrl
mov
jmp
fst
test
outsb
jo
push
repnz
shl
icebp
test
mov
insb
cld
inc
jb
dec
sbb
ljmp
in
mov
jno
add
addr16
add
xchg
sub
pop
inc
mov
push
nop
jb
cmc
mov
add
dec
sbbl
mov
dec
lret
lcall
dec
mov
mov
hlt
mov
in
fwait
addr16
pop
sahf
data16
push
and
cmp
imul
sub
pop
sbb
cld
sar
push
outsl
add
push
cmc
pop
pop
mov
shlb
pop
addl
inc
sbb
ljmp
repnz
jl
pop
data16
and
dec
stos
xor
add
test
mov
sbb
add
fists
ret
test
add
xchg
xorb
mov
cmp
or
aaa
shrl
and
lahf
in
jns
hlt
adc
inc
push
movb
aad
stos
mov
stos
in
sub
pop
movsb
add
bound
add
push
arpl
dec
mov
add
mov
add
jo
push
inc
pop
and
jmp
jecxz
jb
push
movb
cmpsl
xor
add
rolb
into
sbbl
dec
and
pop
jge
xchg
add
lea
mov
mov
rclb
filds
incb
xor
cli
stos
cld
add
popf
out
std
dec
insb
and
add
mov
dec
add
lds
push
nop
cwtl
sahf
add
sbb
push
sub
cmp
arpl
popa
add
push
fsubs
inc
imul
mov
out
ljmp
adc
cld
out
push
add
add
add
jbe
add
inc
clc
int
insb
pop
xor
loope
cmp
hlt
mov
adc
aam
cmp
outsl
shrb
xor
push
insb
in
ss
and
stos
push
mov
shl
rclb
xor
xor
add
int3
repnz
arpl
pop
das
push
test
jmp
push
cmp
jmp
fnstcw
je
loop
ret
aad
push
popf
mov
mov
add
loope
test
ds
outsb
add
imul
aam
mov
imul
and
or
xchg
mov
aam
lock
push
lahf
call
fnstcw
test
xchg
hlt
loop
add
sti
inc
pushf
inc
popf
add
xor
sbb
add
movsl
sbbb
dec
push
loopne
push
add
add
add
xchg
aas
sbb
and
leave
test
add
inc
and
adc
popa
add
imul
sbb
or
xchg
mov
add
cmp
jl
mov
fmull
push
xor
sbb
std
add
dec
sbb
pop
sti
aam
xlat
adc
lock
dec
push
or
lea
shl
mov
iret
in
imul
rcll
and
div
rorl
das
test
adc
mov
and
mov
dec
push
pop
add
push
add
enter
xchg
out
test
ljmp
adc
js
mull
or
cmp
xor
add
push
jae
add
push
or
sub
insb
enter
mov
or
inc
addr16
pop
sub
or
loope
push
repnz
add
sub
add
into
jo
stc
lcall
mov
repnz
inc
rcrb
add
cmp
ja
sbb
bswap
mov
pop
fldcw
clc
ja
lock
add
lret
int
or
add
stos
push
push
push
add
test
addb
adc
push
adc
insb
add
jmp
fs
shrl
movsl
xlat
fdivl
orb
cmpsb
mov
add
pushf
push
mov
add
fimuls
bswap
dec
call
dec
add
or
int3
add
fstp
push
jb
test
mov
ds
stos
or
mov
repz
xor
dec
pmuludq
pop
sub
mov
dec
cmp
lock
and
mulb
aam
pop
cmpsl
xchg
mov
mov
pop
push
jmp
fldl
stos
xchg
xor
cwtl
pop
xor
pop
loopne
sahf
and
add
mov
adc
mov
std
push
and
mov
or
sbb
jge
sub
rorl
add
add
loop
int3
rorl
inc
cltd
add
leave
fwait
jo
mov
sub
pop
push
mov
add
repnz
les
shl
add
bound
pop
add
xor
jno
test
and
sub
add
mov
imul
pop
xchg
cmp
xchg
movsl
mov
sbb
cmc
mov
jmp
in
ror
rorb
dec
dec
rcl
inc
mov
mov
hlt
xor
dec
mov
das
dec
cmp
in
out
pusha
mov
int3
xchg
nop
lea
cmp
sub
xchg
aam
mov
or
test
and
inc
mov
jbe
add
int
add
jle
mov
xchg
cmp
or
roll
lcall
fisubs
mov
stc
push
sub
daa
jge
cmp
add
in
inc
push
fstpl
mov
add
adc
add
jmp
in
test
and
rcll
jmp
mov
push
or
cmp
leave
push
cmp
add
inc
int3
test
add
inc
arpl
add
shlb
cmc
cmpsl
repnz
mov
xchg
add
fs
insl
sbb
add
xor
sbb
ds
in
mov
popf
add
sbb
adc
xchg
dec
add
fdivrs
push
mov
int3
arpl
es
cltd
mov
or
lcall
add
lea
icebp
repnz
sub
inc
add
rolb
dec
xchg
shl
std
repnz
cwtl
cmpsb
cltd
imul
cmp
pop
test
nop
enter
inc
adc
mov
adc
lret
push
nop
mov
add
aaa
leave
js
pop
stos
pop
int
xchg
jne
divl
in
outsl
loopne
in
aas
mov
out
leave
pop
ficoms
rcrb
mov
and
aam
add
mov
add
sbb
test
aas
mov
xor
shlb
mov
add
popa
cli
pop
je
lock
lods
aad
sbb
mov
lock
add
sahf
sub
push
and
mov
cwtl
pushf
mov
fcomps
adc
in
mov
addr16
cmpsb
mov
jb
mov
add
mov
ret
insb
pop
push
call
mov
test
inc
add
and
jmp
add
xchg
mov
pop
sub
or
sbb
cltd
je
cmc
int3
xchg
js
push
dec
mov
pusha
push
add
repz
addr16
mov
add
inc
neg
push
int3
aas
jb
mov
or
icebp
xorb
or
ja
loop
mov
push
fidivs
cmpb
loopne
push
or
cld
pop
mov
hlt
add
loopne
test
mov
scas
outsl
shl
loopne
pop
inc
stos
into
add
xor
mov
ffreep
ficoms
add
test
xlat
sbb
scas
cld
shr
pop
fstl
add
ret
add
outsb
lret
sbb
pop
je
sub
repz
jg
scas
lcall
icebp
sbb
xor
in
clc
iret
cld
xchg
add
shl
add
push
mov
out
mov
adc
lcall
sub
push
mov
add
test
and
or
dec
xor
les
mov
dec
sbb
dec
loopne
dec
and
mov
mov
nop
arpl
jmp
push
jo
mov
and
arpl
or
pop
lret
in
or
jo
add
adc
jmp
mov
verr
push
xor
ret
cmp
int3
fiaddl
insl
popa
cld
lds
xor
xchg
push
repnz
add
pop
std
js
mov
ret
jo
add
nop
stos
out
fwait
scas
sub
xor
and
xchg
cld
sbb
pop
clc
add
add
cld
push
loop
mov
imul
fidivrl
add
ds
cwtl
shlb
xor
imul
inc
add
lahf
shrl
add
dec
push
inc
cmp
inc
push
dec
add
mov
popf
sbb
add
xor
pop
pop
mov
mov
add
adc
push
pop
adc
push
add
sarb
cs
jp
add
aas
mov
in
fisttpl
add
mov
dec
sub
lds
jl
push
inc
and
sti
movsb
sbb
repz
and
cli
inc
mov
cmc
popf
adc
cmpsl
pop
roll
xchg
stos
inc
pop
adc
and
mov
mul
jae
jne
add
rcr
jle
jmp
and
rdmsr
jbe
lea
pushf
faddl
std
in
cmpsl
xchg
shll
ss
das
xchg
add
hlt
fnsave
pop
cmp
nop
sbb
add
stc
out
test
push
pop
sbb
pusha
call
mov
mov
push
cmp
rolb
add
cmp
jp
stos
mov
nop
lret
sbb
add
fildll
pop
xor
insl
adc
emms
pop
or
ret
sti
movl
addb
adc
enter
dec
jbe
test
mov
push
add
pop
stos
sub
push
adc
fdivrs
or
cmp
cwtl
mov
mov
shrb
add
rclb
mov
daa
adc
scas
xor
in
add
jns
xchg
sahf
pavgb
xchg
add
push
movsb
ja
cmpsb
lahf
lds
enter
nop
outsb
loopne
pop
mov
pop
pop
cmpsl
and
sub
xor
push
ja
add
mov
nop
or
call
mull
test
inc
fsubr
int3
jns
clc
add
sub
pop
push
mov
test
and
mov
dec
in
mov
add
aas
push
mov
jb
mov
add
sbb
add
push
push
outsl
or
clc
add
call
push
icebp
sti
dec
sub
jmp
test
jge
int3
cmp
add
push
dec
stos
push
and
xlat
add
add
xchg
pop
pusha
sti
xor
test
mov
xchg
sbb
and
dec
adc
lcall
inc
push
imul
pop
cld
add
out
pushf
add
insl
mov
jp
stos
fldt
outsl
fiadds
mov
xor
in
cltd
add
jnp
das
sarl
inc
push
cmp
xor
adc
int
outsl
ret
jmp
lcall
lds
je
adc
out
add
les
add
roll
push
mov
aaa
iret
add
outsb
push
push
push
and
xchg
addb
sbb
pop
popa
rorb
sub
fidivs
add
sbb
test
aaa
mov
cmc
ficoml
ret
pushf
jae
lods
sub
cwtl
add
sub
fincstp
dec
mov
popf
mov
and
iret
pop
in
or
fdivrs
out
add
cltd
outsl
dec
mov
cmc
icebp
push
add
add
loopne
testl
stc
jl
js
xor
sbb
push
in
jns
lock
and
aas
xchg
jge
ja
js
sub
cmp
pop
outsb
adc
jl
add
bound
ret
repnz
sbb
pop
and
lods
mov
sahf
push
push
loope
pusha
vpaddsb
popa
js
bnd
pop
pop
jne
pop
into
push
xor
shlb
fdivs
and
adc
xchg
call
lods
out
faddl
add
xchg
test
push
sbb
pop
jb
iret
jg
add
and
dec
mov
nop
mov
push
or
push
xchg
inc
or
out
push
adc
add
jg
fs
pop
xchg
add
insb
or
xchg
push
and
out
pop
stos
add
int3
mov
sbb
cmp
jno
add
mov
add
les
add
cli
roll
jne
sar
fwait
add
pop
xor
nop
ds
push
fs
add
push
icebp
jo
xor
rolb
test
cld
and
jmp
add
into
sbb
pop
data16
cli
jno
mov
inc
fsubs
mov
or
push
mov
push
mov
pop
inc
push
jle
js
or
xor
sbbb
xorl
ljmp
jns
jae
mov
loope
fwait
andl
lds
addr16
int
pusha
and
or
add
adcl
bound
push
jne
les
ds
loopne
and
and
xor
lcall
icebp
enter
mov
lahf
cmpl
stos
repnz
mov
xchg
xchg
mov
repnz
or
cltd
jmp
stc
outsl
lea
jns
pop
in
adc
mov
orb
add
outsb
cmc
pop
ds
or
lods
fsubl
or
mov
fildl
cli
jnp
rorb
inc
add
ljmp
enter
add
xchg
push
sub
mov
insb
adc
movsl
push
movl
cmpsb
inc
add
xchg
inc
mov
pop
lcall
pushf
sbb
cmp
add
aam
adc
and
inc
sbb
inc
jmp
test
scas
int
clc
sub
jns
dec
pop
inc
adc
and
cld
sub
pop
std
push
rolb
loopne
aas
or
or
add
test
add
xchg
faddl
xchg
cwtl
sbb
jle
jnp
shrl
data16
pusha
dec
mov
shll
jl
adc
lds
arpl
into
xchg
aaa
sub
add
ss
and
add
mov
xchg
test
mov
push
out
shlb
add
pop
mov
leave
rorl
mov
mov
cld
xlat
and
fildl
in
push
pop
add
sub
add
xor
lahf
add
sbb
cmc
divl
roll
and
pushf
fsubr
xchg
mov
pop
in
arpl
xor
pop
sub
cmpsl
sbb
pop
pushf
mov
and
sbb
pop
xor
les
repz
mov
imulb
loop
push
cmp
les
es
add
xor
inc
hlt
lret
add
test
adc
loopne
in
fs
jae
add
sbb
popf
xchg
lods
push
mov
inc
out
xchg
push
or
mov
sub
push
mov
into
in
insb
add
movsb
mov
call
pusha
mov
sbb
pop
jmp
pop
out
push
aas
add
cmp
clc
pop
add
or
mov
mov
cmpsb
adc
inc
ja
cmp
sub
imul
js
add
cmc
sub
out
or
into
ret
push
out
sti
inc
stos
fs
mov
push
xor
inc
pop
test
push
jmp
dec
push
daa
dec
or
lret
mov
lods
bound
popf
add
std
jp
add
rorl
hlt
mov
leave
dec
xor
loopne
je
lcall
cmp
dec
mov
outsb
add
rorl
push
outsl
mov
je
xor
pminub
push
outsb
sbb
rclb
imul
adc
xchg
sarl
inc
add
sub
pop
enter
iret
rorb
movsb
and
fbld
dec
inc
sti
ja
mov
aaa
add
jae
mov
pop
sub
dec
adc
xor
pop
int
inc
loope
pop
cwtl
mov
xor
dec
imul
shll
insb
negl
mov
inc
sub
test
mov
fistpll
jmp
push
pop
lea
shl
mov
cmp
in
mov
sahf
xchg
add
cltd
mov
jp
xbegin
clc
int3
popl
filds
xor
mov
cwtl
fisubrs
pop
inc
xchg
xchg
add
test
pop
stos
xchg
repnz
test
cwtl
mov
jmp
xor
cltd
sub
and
cmp
lea
push
sub
mov
add
bound
hlt
add
daa
lock
push
lahf
xor
add
ljmp
or
out
movsl
push
dec
lock
add
nop
mov
negb
pushf
inc
in
push
mov
sub
mov
and
jno
dec
out
mov
popa
or
lods
jmp
adc
add
adc
aam
pop
add
push
mov
adc
out
pushf
xchg
xchg
fsubs
dec
or
andb
add
loopne
inc
jge
mov
push
hlt
push
xor
aas
mov
jle
fiaddl
add
cltd
sbb
hlt
mov
lahf
inc
ret
call
jns
xor
sub
sbb
sbb
subl
sbb
push
mov
add
push
aas
les
mov
jl
loop
dec
cmc
subb
lea
pop
cli
aaa
add
shrb
xor
mov
push
xchg
add
shlb
aam
cltd
sti
popl
inc
adc
fmull
sub
sub
ror
mov
imul
daa
ficoms
and
sahf
call
add
out
cmp
xor
dec
push
push
ret
or
pushf
sbb
bound
xor
aam
dec
je
add
xchg
int3
cmp
mov
pop
std
dec
cmpb
push
lods
and
xchg
or
loopne
push
mov
add
add
xchg
dec
jno
adc
imul
mov
sbb
call
mov
add
clc
xchg
cmp
jno
scas
cmp
push
andl
aas
fcomps
mov
add
push
movsl
mov
adc
cmp
mov
loopne
lods
daa
cli
mov
dec
sub
test
rorb
jns
mov
push
imull
add
xchg
lret
and
mov
mov
mov
shlb
or
decl
insl
cmp
sub
call
mov
add
lahf
loopne
aaa
pop
test
xor
or
and
push
call
xor
push
or
aad
es
add
subb
or
nop
int3
xchg
pop
out
mov
cmp
jo
movsl
cmp
cli
or
das
sub
mov
cwtl
fsts
hlt
pop
lock
inc
out
std
js
sub
in
test
and
adc
cmp
push
cs
gs
rolb
push
cmc
in
xchg
scas
leave
js
or
add
sub
adc
rcl
clc
sbb
mov
pop
jecxz
sbb
pop
mov
lret
push
lods
std
in
pop
cld
sub
cmp
popa
add
paddusw
outsb
dec
adc
rolb
cmp
mov
subl
shrl
mov
test
decb
add
daa
cmp
pop
dec
add
adc
push
loopne
movsl
pusha
pop
cmp
lods
pusha
push
or
rcr
mov
cwtl
lock
arpl
add
fisttpll
nop
cmc
or
mov
cmp
aas
sahf
inc
rolb
add
addl
mov
mov
push
xchg
jb
iret
xchg
mov
mov
sub
add
ret
gs
xchg
pop
sbb
mov
mov
gs
add
addr16
fadds
or
lods
jnp
ret
imul
hlt
enter
lret
or
and
xor
js
mov
test
xchg
popa
push
add
js
add
pop
mov
xor
jecxz
add
pop
sub
fildll
jge
lods
fsts
movsb
or
dec
mov
adc
and
in
add
je
cwtl
add
mov
jne
xorb
push
mov
mov
roll
pop
inc
repnz
jp
rcrb
popa
addl
ja
mov
push
repnz
add
sub
popa
xor
je
add
outsl
or
out
movsb
add
lods
and
inc
and
push
add
mov
mov
add
push
dec
sbb
and
add
cmp
add
je
jae
lods
iret
add
pop
icebp
and
add
mov
sbb
add
push
pop
dec
add
outsb
fsubrs
xchg
push
repnz
rcl
mov
inc
fldcw
out
pop
push
jo
or
mov
ret
pusha
aam
mov
add
addl
sti
and
cld
in
add
push
cmpb
push
jne
fisttps
pop
and
push
xor
add
idiv
rcr
jecxz
fnstsw
loop
xorb
nop
add
adc
pop
into
imul
xchg
fwait
scas
dec
cmpsb
arpl
pusha
sahf
inc
into
shll
add
lods
pop
sbb
add
mov
jl
int
mov
dec
add
popf
out
push
and
jnp
jae
adc
cmpsl
mov
pop
mov
xor
pop
rolb
lcall
daa
push
mov
dec
inc
push
in
inc
xchg
xor
or
inc
add
movsl
mov
jae
bound
xchg
stc
je
or
add
and
je
ds
sbbb
fs
sbb
mov
ja
pop
sub
xor
je
or
movsl
lea
inc
lahf
movsb
scas
fsubrs
add
loope
add
and
cmp
adc
fucomi
add
int3
cs
enter
pop
pop
or
dec
adc
and
and
and
clc
sub
cmpl
clc
mov
out
fmul
jge
add
dec
inc
mov
jecxz,pt
daa
icebp
inc
int3
fsubrs
cmc
push
add
mov
int3
aaa
les
mov
dec
pop
mov
push
add
mov
cmp
mov
add
cmpsb
aad
jge
add
mov
ficoml
bound
inc
mov
mov
cmpl
pop
add
mov
inc
adc
xchg
stos
mov
add
iret
pop
add
pop
call
add
push
cli
xor
pusha
sbb
mov
jle
cld
sub
mov
mov
push
pop
add
xor
and
pushf
add
lock
out
add
fbld
je
sub
xchg
pop
sbb
cmp
sbb
mov
mov
pop
dec
popa
aad
fcmovnb
add
insb
push
mov
jl
clc
or
jb
add
ret
adcl
xchg
cmp
add
inc
dec
mov
lds
cli
rclb
sub
xchg
push
cwtl
mov
decb
lahf
fidivrs
jbe
or
xchg
leave
add
xchg
aaa
sub
js
jne
sbb
aas
push
adc
jp
add
push
or
and
push
inc
add
add
push
cmp
out
mov
pop
imul
and
push
popa
dec
pop
mov
xchg
or
add
in
xchg
leave
fwait
insb
lea
mov
addl
inc
mov
inc
bound
jno
mov
add
inc
nop
shll
js
add
addl
nop
xor
mov
or
jp
aaa
add
add
daa
sahf
and
movsb
jo
pop
xchg
cmp
add
icebp
out
addb
int
insl
sbb
mov
jle
and
insb
rorl
mov
xor
push
sti
ss
lds
je
add
xchg
clc
out
and
sarb
mov
dec
push
dec
push
inc
pop
xchg
sub
into
add
bound
test
add
push
es
loopne
add
dec
bound
jae
ud1
jmp
daa
inc
xchg
fs
shrb
cmp
mov
jo
mov
mov
add
inc
or
dec
pop
ds
scas
cmpsb
out
movsl
pop
xor
js
mov
je
ljmp
jo
gs
add
mov
and
sahf
add
inc
cmp
lahf
push
fwait
outsl
pop
sub
pop
add
pop
ja
inc
xchg
jo
cmp
xor
loop
movzbl
sub
push
jnp
mov
lock
mov
mov
ljmp
sbb
xor
xor
fdivl
aaa
dec
and
jmp
fldenv
add
ja
sar
jb
push
add
push
pop
xor
or
push
dec
jnp
pop
adcl
jno
call
je
xchg
add
cltd
aaa
inc
pop
add
dec
cld
mov
jl
ss
mov
outsb
add
pop
movsb
or
or
test
cli
mov
xchg
add
jnp
adc
xor
adc
add
ret
js
add
std
and
test
xchg
add
mov
and
mov
clc
pop
xchg
mov
incl
nop
int3
cmp
adc
sub
inc
stos
cmp
lods
andb
pusha
aad
ficomps
pop
push
xchg
xchg
cld
add
push
mov
or
cmp
lds
pop
dec
addl
movsl
mov
sub
add
cmpb
in
loopne
insb
testb
mov
xor
loop
lahf
cmpsb
and
add
inc
add
int
hlt
push
pusha
xchg
insl
ret
sbbb
xor
ss
adc
inc
push
mov
dec
sbb
inc
jp
subb
test
test
lret
push
mov
inc
lret
jb
add
xor
out
lret
sbb
and
xchg
add
push
repz
cmpsb
inc
xor
loope,pn
enter
in
xchg
mov
dec
mov
fldcw
iret
pop
scas
mov
outsl
clc
xor
test
inc
aas
loopne
shll
orb
fsubs
andl
test
sub
movsb
shl
imul
mov
inc
mov
and
and
lods
cmp
push
repnz
imul
idivb
scas
pop
ljmp
subb
sub
in
add
add
mov
push
test
inc
xor
mov
and
jo
jbe
xorb
xor
cmpsb
adc
js
fidivrs
cmpsl
push
xchg
jns
in
mov
fs
dec
cwtl
rolb
ja
push
enter
mov
sbb
mov
xorl
inc
pop
jo
and
fcmovnu
rclb
add
xchg
mov
into
aam
add
xchg
adc
mov
lock
add
add
std
jne
lds
adcl
sbbl
cld
shl
loop
mov
and
inc
insb
pushl
outsb
outsl
sub
mov
std
shufps
jo
and
add
mov
fdivl
adc
adc
mov
leave
push
fistpll
pop
sbb
or
add
inc
xchg
jnp
incb
push
cmp
adc
out
hlt
dec
sbb
jge
icebp
loope
nop
or
sub
cwtl
jo
out
clc
add
dec
incl
stos
hlt
mov
xchg
jae
or
adc
and
xor
inc
stc
lods
push
add
inc
daa
add
testl
popa
sbb
stc
test
inc
lcall
inc
add
fidivrl
inc
jecxz
wrmsr
out
add
add
andb
dec
pop
mov
add
sub
adc
xchg
xor
mov
addl
repnz
adc
sets
push
imul
sub
pusha
les
adc
in
es
or
out
jb
incb
mov
movsl
shll
sbb
push
add
mull
xchg
and
test
pop
sub
pop
sbb
pop
ja
in
add
pop
add
outsl
out
outsb
roll
cmp
push
cmp
add
test
cld
add
adc
hlt
mov
ret
sbb
shrb
clc
gs
ret
pop
add
inc
inc
iret
add
into
loope
xor
aam
add
ljmp
add
sbb
inc
in
or
pusha
add
sbb
ret
pop
repnz
test
lret
pop
popa
loope
cmp
push
sbb
stc
mov
shlb
shrb
repz
inc
and
add
xor
testl
cmp
les
cmp
dec
add
xor
je
push
jb
add
loope
jnp
icebp
add
and
cmp
fmuls
loop
shll
cmc
popa
mov
sbb
sub
pop
push
add
into
lds
stos
std
add
cmp
flds
adc
nop
mov
shll
js
pop
inc
xor
and
mov
icebp
add
xchg
mov
adc
das
jo
fisubrl
cs
xchg
enter
insb
hlt
dec
cmpsl
ret
pop
pop
bound
cld
cmp
xor
pop
inc
push
fnstenv
fildl
nop
jnp
push
xor
out
xchg
pushf
add
sbb
sub
mov
stos
or
ss
add
push
mov
add
popf
mov
lock
enter
dec
xor
pop
pop
test
adc
movsb
xor
mov
fidivrs
push
inc
pop
shlb
pop
ljmp
aam
scas
inc
or
dec
mov
add
stos
mov
rolb
add
xor
xorl
cwtl
or
cs
and
add
push
xchg
jp
test
mov
xor
in
cmpsb
cmpsl
add
xor
loopne
and
sub
xor
cmp
dec
mulb
push
sbb
test
mov
and
out
jmp
les
add
sub
add
stos
mov
add
stc
ss
mov
in
xchg
dec
and
inc
pop
jp
push
mov
faddl
add
inc
fstpl
add
clc
jg
or
xchg
mov
shlb
inc
jb
pop
aam
xchg
pop
lods
clc
pop
ret
popf
pop
mov
jne
xchg
jno
loopne
xor
popf
push
int
and
sub
cwtl
pop
xor
mov
not
scas
adc
and
mov
sub
out
cli
and
sbb
xchg
test
cmp
mov
mov
sbb
and
insl
mov
clc
xor
js
icebp
roll
mov
pusha
adc
add
std
or
rolb
ret
add
xchg
je
inc
repnz
dec
es
ret
scas
add
pop
rcrl
mov
aam
daa
add
push
sbb
dec
lock
cli
sub
enter
xor
ret
cs
push
lods
push
xlat
in
scas
add
mov
add
cs
sbb
pop
jecxz,pt
dec
sub
pop
dec
pop
pusha
sub
shrb
lock
add
or
out
add
push
arpl
xchg
add
jle
testl
arpl
notb
pusha
sbb
push
loop
add
fimuls
and
stos
test
shlb
out
lods
es
test
add
loop
lahf
dec
insb
sahf
add
push
adc
out
mov
pop
div
add
or
pop
repnz
xchg
sub
add
lret
nop
jno
mov
add
addr16
and
jne
jo
jl
dec
sbb
sbb
cwtl
mov
lret
repz
sub
xor
pusha
cmp
sahf
xlat
cwtl
pop
decb
push
sub
into
movl
mov
pop
data16
push
push
mov
idivl
jb
add
inc
icebp
sub
push
jge
pop
jne
adc
and
xor
pop
cmpb
adc
not
xchg
push
add
fdivrs
mov
mov
cmpb
sahf
push
or
data16
dec
scas
sbb
gs
xor
add
cwtl
inc
pop
loopne
sub
dec
mov
adc
sarl
sbb
mov
sub
jmp
scas
imul
xchg
sti
and
cld
addl
std
jo
dec
int3
add
or
xchg
inc
and
sti
cli
dec
pop
enter
imul
or
rcll
inc
out
arpl
sub
add
and
lcall
test
cmp
mov
xor
fidivrs
and
push
cli
add
fwait
cmpb
icebp
scas
sbb
repnz
cmpsb
les
fadds
pop
outsl
lret
out
pop
xchg
movsl
fiaddl
pop
out
lds
jae
stc
add
pusha
fnsave
xorb
cltd
sti
in
jge
ljmp
push
mov
arpl
pop
jmp
mov
push
dec
out
outsl
jno
insb
push
pusha
jo
mov
in
add
in
bound
pop
xor
je
adc
jo
add
mov
and
loopne
pop
pop
inc
jg
shrb
xor
repnz
xchg
pop
add
mov
and
mov
fmul
popa
jg
dec
and
das
incb
addr16
shlb
mov
sub
sub
dec
cwtl
cli
pop
shr
lea
dec
inc
aas
call
mov
sub
out
push
mov
in
outsb
arpl
mov
jecxz
add
pushf
fidivrl
push
mov
sub
test
add
dec
call
dec
add
pusha
fadds
xor
mov
out
mov
mov
loopne
mov
jle
add
push
dec
mov
pusha
push
add
and
lods
and
add
nop
daa
out
push
call
pushf
jno
aam
cs
iret
and
sbb
push
out
and
adc
lret
xchg
add
mull
pop
out
mov
or
push
stc
add
in
add
and
in
leave
sbb
js
int3
mov
push
stos
arpl
mov
les
outsl
xchg
push
daa
movsl
fwait
imul
adc
mov
add
insb
push
mov
stc
add
mov
fistl
mov
jo
sbb
xor
adc
pushl
popf
or
add
es
mov
aam
mov
fcomps
cwtl
fdivr
add
ds
loopne,pn
or
mov
xchg
sbb
adc
xor
adc
jle
add
mov
clc
add
sti
pop
push
xchg
shll
push
adc
adc
sub
mov
push
pop
jbe
ja
add
inc
and
mov
xchg
pusha
das
cmp
out
adc
jns
fistl
and
stos
movsl
jl
shlb
lcall
add
mov
inc
fcmovu
psrlq
xstore-rng
cmpsl
inc
hlt
jb
sbb
mov
add
add
setp
iret
fmull
mov
mov
lret
dec
add
popf
aaa
incb
stos
aam
jb
sbb
and
cmp
outsb
insl
daa
or
fmull
rorl
ds
gs
jmp
hlt
lea
mov
loope
pop
cs
es
mov
mov
or
pop
mov
sbb
je
add
into
shrb
mov
xchg
adcl
pusha
or
mov
adc
add
pop
add
sub
adc
add
popa
call
les
nop
add
dec
add
dec
lret
adc
inc
fists
ret
sahf
inc
add
cs
mov
lret
loop
popf
clc
mov
xchg
adc
cmp
in
push
xlat
pushf
test
movsl
jno
mov
cmpsb
addb
pop
in
mov
mov
inc
mov
sbb
mov
xchg
sub
dec
xchg
dec
outsb
or
popa
xor
add
out
xor
pop
pop
mov
or
jne
add
xchg
sub
mov
push
xchg
fs
fiadds
lea
imul
push
mov
and
pop
xchg
pushf
add
loopne
sub
dec
and
in
or
iret
and
add
push
pop
testl
subb
add
es
or
into
adc
jno
iret
add
mov
add
pushw
test
pop
dec
lret
cld
inc
fimuls
add
xchg
addr16
xor
cmp
cld
sbb
nop
fs
loop,pn
icebp
and
jl
sub
add
sarl
sub
add
test
mov
add
lcall
xor
sbb
fnstcw
ljmp
sbb
popf
dec
test
lods
lret
fwait
mov
mov
cmp
arpl
aam
add
bound
pop
idivb
test
ds
jb
xor
add
inc
push
dec
adc
mov
and
cld
xlat
stc
or
add
jo
sar
fcomp
ret
mov
xor
sbb
sub
pop
add
test
in
subb
jnp
in
sbbl
in
jbe
enter
jmp
cli
fiaddl
mov
lret
out
hlt
jno
iret
mul
adcb
in
fstl
cmpsl
jmp
cwtl
out
aam
add
jmp
jecxz
cmp
adc
jl
shlb
cmp
rolb
xchg
or
arpl
flds
sbb
mov
shlb
add
cmc
repnz
test
dec
inc
push
and
cmp
add
jns
sub
rcll
add
ret
jae
xor
cmpsl
xchg
add
popa
dec
rcr
lcall
aas
adc
imul
and
pop
in
dec
and
sbb
mov
xchg
faddl
push
sub
mov
pusha
mov
add
rcrb
clc
out
cmp
or
or
je
add
add
sub
ret
mov
mov
je
inc
xchg
subb
add
test
or
push
pusha
in
mov
or
jl
xchg
mov
or
push
clc
push
inc
shlb
cwtl
mov
jns
dec
ja
add
cld
js
sbb
fnstenv
and
int3
inc
pop
dec
mov
add
popf
rorl
into
lahf
sbb
lods
outsb
nop
cmp
cli
add
add
imul
imul
je
and
xor
xchg
sbb
sbb
int3
push
cmp
popa
pop
scas
or
or
and
pop
pop
bound
test
xchg
inc
cwtl
bound
add
out
add
sub
nop
call
adc
sub
pop
mov
movsb
popl
push
xor
adc
adcb
and
pop
cltd
and
or
lods
nop
enter
fwait
pop
push
cwtl
addl
mov
lock
jmp
fadds
cld
and
xchg
pop
pavgb
lods
mov
ret
ficoml
mov
jge
sti
lods
test
hlt
lods
mov
into
pop
sub
dec
add
das
shll
and
addr16
adc
lahf
xor
jg
mov
add
pop
ljmp
adc
mov
or
push
mov
adc
mov
dec
and
cli
imul
mov
mov
inc
stos
into
ror
int3
add
dec
add
xor
adc
jl
rclb
lds
shlb
jb
pop
push
mov
pop
repnz
nop
jge
test
xor
loop
fcoml
dec
es
push
cwtl
inc
sbb
push
mov
jl
fstpl
sub
stos
push
push
test
cmovp
inc
mov
clc
or
mulb
pop
loope
jp
stos
xchg
scas
jle
in
mov
out
and
scas
jg
int
sbb
xor
inc
lcall
add
incl
mov
das
test
mov
dec
outsb
pop
imul
add
aam
clc
xchg
push
fildl
add
xchg
mov
mov
orb
xor
adc
fiaddl
mov
fmul
add
fcompl
stos
repz
jl
cli
cmpl
add
orl
jnp
add
or
mov
mov
xlat
addb
stos
push
fwait
nop
fiaddl
pop
loopne
and
add
push
rcrb
sub
hlt
push
sbb
pop
ficoml
lcall
mov
rclb
mov
dec
loopne
lock
ds
scas
pop
lcall
adc
mull
in
sub
insl
xor
in
sbb
mov
fists
das
add
jle
fistl
push
adc
xchg
fs
inc
dec
fidivl
pop
push
faddl
ret
push
add
add
pop
aad
add
mov
jo
lock
icebp
imul
sbbb
mov
add
or
pop
add
mov
emms
push
add
rcll
out
jne
mov
ret
push
xchg
xor
mov
rclb
add
dec
ror
jne
adc
cmp
cld
stc
jl
add
xchg
jb
arpl
cld
imul
jmp
inc
xchg
push
es
and
sti
leave
cld
ds
jg
jne
sbb
add
rcrb
ret
sbb
push
and
add
mov
push
lods
jno
pop
add
leave
sub
xchg
add
fucomp
jae
jne
and
mov
mov
dec
pop
dec
push
and
sbb
in
mov
pop
clc
xchg
ss
sbb
add
repnz
inc
loopne
sahf
mov
xchg
add
daa
stc
mov
jno
add
dec
adc
popa
shlb
roll
mov
and
mov
add
push
adc
movl
adc
push
mov
lods
push
pop
in
add
fs
movsb
out
loopne
and
and
rolb
fisubrl
sbb
test
jp
in
jne
add
enter
cld
cmp
cltd
xor
add
jo
lds
in
xchg
jns
das
js
and
pop
enter
xchg
cmp
jns
dec
aas
cmp
push
test
addr16
adc
jecxz
stc
mov
daa
jb
nop
mov
cmp
cli
mov
mov
pop
push
sbb
pusha
push
movsl
xor
and
or
jl
sahf
pop
cmc
jge
arpl
sbb
jnp
inc
leave
xchg
push
aad
jge
in
lods
cwtl
mov
cmp
ret
inc
jb
sub
js
pop
movsl
leave
add
xor
out
add
xor
aaa
adc
adc
add
pop
pushf
add
jmp
out
cmp
movsb
push
ret
popa
inc
sub
mov
sub
add
sahf
fnstcw
jbe
mov
add
addb
jne
mov
out
cmp
jecxz
js
add
xchg
ret
inc
mov
cmp
jb
cs
add
and
adcl
cmp
push
sub
and
mov
adc
iret
sub
pusha
mov
pop
sarb
bound
jp
push
je
and
inc
mov
cltd
bound
mov
sub
gs
xorb
lahf
jge
xchg
xor
sbb
jl
jae
add
add
push
mov
jl
mov
pop
cmp
inc
push
xor
fimuls
inc
push
in
aad
xchg
xor
nop
outsl
adc
rclb
add
xchg
lods
cltd
sbb
shr
popl
stos
cmp
pop
dec
dec
inc
test
test
sub
mov
sti
mov
inc
jg
add
fsubs
roll
xor
mov
fstl
out
add
fcomps
jl
mov
sahf
inc
pop
mov
cmpsl
and
fninit
jb
sbb
dec
orl
pop
mov
xor
lret
add
mov
testb
add
push
inc
cmp
sbb
add
popa
mov
pushf
jl
ja
cmp
ljmp
aad
loopne
std
ja
xor
add
repnz
out
xor
cld
mov
pop
push
cmp
push
sub
mov
pop
push
in
add
mov
das
pop
cltd
xor
add
stos
pop
sub
add
lods
cmp
mov
stc
add
mov
pop
adc
jmp
add
mov
ret
fmuls
movswl
leave
mov
lahf
pusha
add
jns
jmp
adc
sbb
inc
add
jbe
inc
jmp
js
sbb
mov
lahf
rolb
mov
add
fmul
shrl
add
movsl
dec
xchg
in
stos
add
mov
sub
xorl
pop
cmp
push
rorb
and
hlt
adc
xor
lock
aas
in
or
adc
xor
sub
and
cmp
aaa
cmc
loopne
cwtl
dec
mov
or
cmp
mov
mov
pop
inc
scas
dec
ljmp
decb
cld
shll
jb
add
cmp
xorb
jnp
lds
cli
icebp
add
inc
and
or
into
pop
push
cmp
pusha
ja
test
or
xchg
test
test
pop
dec
push
jae
push
and
add
imul
sbb
pop
aaa
cmc
and
jbe
xor
push
popf
jecxz
add
cmp
push
rorb
push
sti
push
mov
adc
add
jbe
mov
and
imul
lret
add
rcl
push
mov
add
adc
and
sbb
in
add
fcoml
sbb
mov
add
push
insb
cli
sub
add
inc
repz
push
icebp
stos
add
push
dec
add
xlat
rcll
test
sbb
xchg
orb
or
mov
jmp
int
inc
rol
outsb
inc
into
data16
cmp
out
ds
insl
ljmp
inc
push
bound
sub
mov
test
push
test
loope
aad
pop
push
dec
push
aas
arpl
mov
out
adc
mov
add
dec
addr16
and
in
and
nop
icebp
out
push
add
inc
out
aad
out
lahf
cmp
xor
push
xchg
push
cmpsb
test
mov
pop
daa
pop
sbb
add
and
mov
mov
dec
js
pop
bound
add
ja
pusha
push
cmp
and
xchg
add
push
and
cli
faddl
dec
and
xor
add
mov
mov
jb
clc
outsb
pop
loope
ret
jg
xchg
test
pop
jl
add
dec
sbb
ds
pop
inc
mov
mov
mov
add
jne
std
gs
lahf
sbb
jo
call
insb
mov
icebp
cld
leave
mov
popa
or
pop
inc
pop
loopne
sub
loope
adc
popa
jo
call
incl
into
dec
mov
shl
pinsrw
cld
shl
pop
add
sub
lret
xchg
inc
loopne
pop
mov
stc
jnp
loop
dec
dec
push
je
cld
inc
loopne
xor
outsb
sub
add
jae
jl
dec
mov
add
rol
adcl
cltd
fs
lock
mov
add
xchg
sahf
insb
inc
sarl
aaa
push
xchg
das
push
mov
movsl
dec
and
loop
and
pop
lock
sub
push
mov
jmp
test
cwtl
jg
jmp
xchg
and
or
sbb
xchg
mov
xor
in
clc
sbb
test
sti
call
pushf
daa
push
sahf
mov
movsb
pop
fbld
ret
or
dec
adc
add
fs
imul
movsb
cmp
jle
repnz
stos
add
add
mov
stc
aad
pusha
movsl
mov
repnz
out
or
push
add
test
pop
pop
xor
jno
jge
pop
dec
dec
add
add
int3
mov
cmp
xchg
pusha
cmp
sahf
add
mov
mov
stos
add
or
outsl
push
int
out
pop
add
pop
cs
ljmp
in
mov
inc
adc
les
xchg
lea
fs
sbbl
fmul
xchg
stos
jns
inc
push
fwait
or
pusha
shrl
pop
add
mov
mov
hlt
in
add
mov
andl
outsb
lock
sbb
cmp
clc
enter
push
add
pop
insl
and
imul
pop
pop
xchg
mov
rolb
lea
pop
add
and
outsb
add
xor
iret
add
mov
add
xor
dec
cmp
js
sbbb
adc
scas
xor
dec
push
add
pop
mov
add
pusha
or
mov
sub
or
adc
mov
idivb
lock
loop
lret
pop
sbb
and
sbb
inc
lds
addl
pop
dec
xor
push
add
or
pop
ljmp
cld
loopne
push
repnz
pop
pusha
test
sti
add
push
add
mov
inc
stos
rcl
rcll
pop
sub
rolb
repnz
cltd
add
and
cmp
add
adc
add
mov
adcl
pop
jg
jecxz
inc
inc
hlt
movsl
add
dec
dec
mov
js
imul
push
das
lcall
fwait
push
les
dec
mov
mov
xor
push
std
add
test
mov
xchg
mov
adc
push
add
lods
jno
xchg
shl
fcoms
add
jae
mov
add
push
pop
inc
daa
pop
sub
test
call
xchg
sarl
dec
add
imul
add
fdivl
scas
sub
dec
popf
outsl
in
sub
push
add
add
jae
cmp
cld
out
add
jmp
je
pop
dec
mov
add
pop
gs
push
into
push
dec
adc
repz
mov
pusha
push
inc
push
fmull
fstps
pop
mov
addl
movsb
jo
sti
cmpsl
xchg
add
lock
jl
shll
adc
adc
ficompl
rcr
dec
xchg
cmp
jae
in
push
mov
push
pop
sbb
push
and
pop
je
mov
ret
jp
push
shll
sbbb
mov
fcmovne
aam
out
hlt
push
pop
add
and
lds
pop
add
add
hlt
ds
add
sbbl
lods
fs
push
adc
or
ja
ds
popa
add
cwtl
sbb
push
aaa
mov
xor
add
xchg
hlt
mov
and
popf
xor
add
cmc
mov
add
pop
inc
and
ja
add
mov
xchg
call
icebp
lods
sahf
jae
sbb
push
and
push
adc
bnd
and
xchg
mov
movsl
sti
mov
push
loop
popf
nop
mov
mov
loope
outsl
inc
dec
hlt
and
or
test
push
push
xchg
add
sbb
mov
into
cmp
es
or
data16
cmp
add
xor
les
add
addr16
dec
xchg
pusha
pop
add
in
fnsetpm(287
mov
fs
cwtl
js
loopne
inc
and
inc
add
jp
out
scas
ja
cmp
add
test
in
pop
inc
dec
inc
insl
jbe
rclb
push
add
and
ja
mov
fwait
add
ret
pop
xchg
jmp
adc
nop
mov
sbb
fdivs
push
add
sbb
cmpsl
mov
adc
add
movl
pop
lea
adc
or
pusha
out
mov
cmp
movsb
lret
insl
add
mov
sub
nop
dec
ret
add
mov
leave
sbb
ds
add
sbb
cwtl
xor
sbb
popa
jbe
cmpsb
push
or
mov
mov
sti
in
nop
das
aad
jg
in
sbb
jo
add
mov
cmp
das
out
and
cli
int3
cmp
test
dec
mov
jle
iret
into
add
push
inc
stc
gs
or
fiadds
test
subb
scas
xor
add
test
lods
xlat
mov
outsl
sbb
mov
add
out
mov
mov
lret
push
in
fldl
stos
sub
in
mov
ja
stos
nop
lahf
clc
add
clc
fdivr
mov
inc
pop
mov
jnp
int3
mov
or
cs
inc
cmp
sbb
imulb
mov
adc
adc
stc
cld
pop
sti
jno
cs
rolb
pushf
xor
notl
lret
test
xor
sbb
sahf
adc
aaa
mov
xor
xor
cmpsl
push
cmc
add
add
inc
pop
add
ficoms
dec
add
es
inc
in
push
adc
add
jecxz,pt
fldl
mov
je
fidivl
mov
mov
or
jb
cltd
rorb
and
add
mov
repnz
sub
dec
test
shlb
sub
add
mov
jnp
fnstsw
scas
loopne
dec
jmp
mov
std
loopne
and
lea
das
rolb
push
jne
jg
add
test
scas
in
je
add
pop
push
gs
push
xchg
jb
or
jge
dec
jle
xor
mov
sub
pop
inc
cli
cmp
sbb
nop
xor
and
lea
pop
or
adc
rcrl
and
loope
jmp
sub
mov
clc
add
xchg
xchg
shll
or
pop
hlt
mov
add
in
cmp
jp
add
or
imul
rclb
mov
xor
test
clc
cmp
mov
test
dec
sbb
test
add
and
xchg
adc
add
add
fs
xor
addl
mov
bound
push
xor
mov
mov
push
ja
pop
bswap
and
mov
subb
add
push
add
mov
dec
cmp
sub
add
imul
add
cmp
xchg
or
adc
inc
pop
jge
sbb
faddp
aam
pop
lods
xchg
jle
add
dec
add
lahf
jecxz
push
stc
add
dec
rolb
sbb
popa
or
sbb
insl
jle
jne
push
sbb
add
sbb
adc
in
arpl
pop
imul
dec
and
xorb
test
push
in
je
push
jbe
xchg
rorb
push
mov
mov
sbb
mov
add
ficoms
and
xchg
call
cmp
ja
negl
or
jl
jle
push
or
cwtl
inc
int3
stc
mov
xchg
adc
js
add
and
pusha
in
dec
mov
enter
add
sub
xor
or
sub
cmp
loop
inc
xor
jns
push
sahf
fptan
fsubrl
adc
xor
aas
loop
in
jb
push
and
jge
adcb
push
dec
or
test
sub
push
mov
mov
sbb
add
lds
mov
inc
cmpl
add
adc
loope
lods
repnz
push
jmp
push
loop
and
sti
jo
adc
pusha
rolb
mov
jo
stos
mov
repnz
and
aam
xor
jbe
mov
or
lds
and
pop
xchg
mov
or
aad
ds
les
call
mov
sub
inc
rcrl
aam
cwtl
ret
cmp
loopne
stos
push
inc
cld
rolb
sbb
mov
mov
fisttpll
lea
lret
rcrb
testb
and
cmp
loopne
push
ja
mov
cmc
add
int
push
mov
ljmp
push
cmp
lods
sub
or
enter
jge
mov
lahf
xor
pop
js
aam
push
pop
cwtl
les
andb
leave
iret
sub
inc
or
xor
pushf
mov
push
and
in
fxch
es
inc
fistps
sub
mov
push
loop
jbe
testb
popf
lea
sbb
cwtl
testl
int3
cmp
lret
sub
push
add
fnstenv
push
inc
mov
ds
add
mov
arpl
mov
mov
adc
mov
out
xor
lods
mov
xchg
out
add
mov
cmc
mov
scas
sub
dec
outsl
dec
adc
xchg
sub
jl
mov
adc
pop
frstor
or
mov
pop
push
sti
data16
aas
and
adc
scas
iret
jle
inc
shlb
aad
push
icebp
loopne
aas
push
pop
lret
scas
les
je
imul
inc
adc
dec
add
je
xlat
dec
mov
mov
inc
sub
shlb
add
inc
rcll
int3
cmp
and
add
sbb
aad
sahf
enter
out
loopne
dec
scas
cmp
mov
pusha
shrb
push
shlb
nop
dec
mov
cmc
movsb
call
sti
mov
frstor
inc
in
or
dec
jns
inc
sub
mov
shlb
adc
imul
jne
mov
add
mov
lods
mov
push
pushf
jecxz
ljmp
or
es
add
ja
lock
add
sub
imul
andb
mov
rcrb
fiaddl
push
in
in
cwtl
lret
add
call
fs
jge
push
xlat
xchg
movsb
mov
orb
mov
popa
fistps
cmp
cmp
loopne
negb
scas
or
loopne
adc
scas
arpl
or
cmp
jg
and
test
loop
push
dec
sub
adc
cli
ret
inc
cld
xchg
sbb
lahf
mov
add
out
les
mov
add
lcall
sbbl
in
add
pop
push
jmp
pop
xchg
lea
movsb
rorb
push
sub
popf
mov
sub
add
scas
repz
shrb
mov
mov
jmp
jnp
push
jge
fwait
xchg
or
and
lock
cmp
inc
sub
rol
mov
push
mov
test
js
mov
xor
sti
push
shlb
out
popf
loop
fisttpl
inc
push
aad
enter
je
shll
jp
jmp
mov
add
cltd
in
cmpsl
gs
or
mov
mov
ljmp
mov
sbb
aam
shlb
mov
xchg
add
stc
fwait
sbb
popf
sub
dec
lcall
cld
clc
int3
rorl
js
cltd
inc
xchg
ja,pn
loopne
dec
jle
mov
and
xor
test
jno
int3
push
jl
pop
push
mov
cltd
fidivl
sbbb
scas
mov
test
adc
adc
and
cwtl
int3
pop
stc
and
push
add
xchg
sbb
mov
sub
push
mov
push
add
das
mov
jb
sarb
sarl
nop
add
in
sbb
insl
test
pop
cmc
sbb
pop
xor
mov
ss
cli
inc
into
jns
pop
repnz
pop
mov
push
sbb
jge
addb
gs
cmc
cwtl
mov
adc
sbb
cmp
add
jb
or
or
add
pop
lock
sub
dec
scas
cmp
stc
mov
loop
andb
mov
pop
sbb
inc
movb
mov
xchg
dec
scas
arpl
mov
and
shl
in
or
add
sub
pop
xor
mov
imul
add
roll
or
inc
jnp
cmp
mov
call
loopne
mov
cmp
adc
cmp
push
fstps
add
and
dec
push
mov
xchg
add
sub
loopne
les
movsb
call
sahf
jo
subb
shlb
and
cmp
out
ds
mov
sbb
lods
lock
jle
rolb
lods
or
jne
mov
ss
add
sub
jmp
shrl
sub
pop
fs
and
into
add
int
push
loope
sub
dec
andb
dec
aam
sbb
cwtl
outsl
and
push
sbb
out
cli
shrl
adc
dec
rolb
popf
jns
mov
add
arpl
dec
adcb
gs
mov
fidivl
push
adc
cmc
les
jecxz
inc
mov
cwtl
inc
sahf
sbb
adc
push
daa
loopne
js
sbb
push
add
stos
stos
or
sub
mov
fwait
rcll
test
adc
xor
lods
cmc
cmp
mov
fdivrs
mov
fists
inc
outsb
les
add
push
mov
sahf
lods
testb
sub
lods
adc
and
fdivrl
mov
mov
dec
add
and
nop
imul
add
int3
pop
lret
dec
add
mov
sbb
or
pop
jmp
sub
push
bound
popa
sbb
cmpsb
js
mov
dec
aaa
jp
push
add
mov
dec
jno
jbe
pop
lods
or
sub
fisttpl
jns
pushf
and
add
and
sub
cli
pop
lods
mov
inc
xchg
pushf
andb
push
lods
xor
or
mov
mov
mov
add
pop
fisttpl
jge
add
je
das
mov
xchg
add
jmp
add
mov
sbb
stc
cmpsl
popf
mov
bound
xchg
cmp
mov
loop
scas
sbb
sbb
mov
jae
mov
mov
outsl
pop
dec
or
aas
push
jmp
loop
push
in
adc
xor
inc
or
aam
jg
fcompl
mov
and
cmpsl
sbbb
mov
adc
sti
mov
loope
jg
shlb
add
lcall
sub
push
mov
add
ja
js
out
add
mov
cli
push
push
cmpsl
cmpsb
pop
add
lods
adc
pop
add
fdivl
fiadds
or
pop
jnp
nop
testb
mov
test
incb
inc
cmp
inc
loop
push
das
mov
pusha
cmpsb
rcrb
ljmp
or
test
add
ljmp
jbe
mov
movsb
inc
pop
lahf
add
lock
repz
pop
gs
cli
and
inc
lahf
jmp
rclb
xchg
sbb
or
int
ljmp
icebp
outsb
and
scas
ss
add
dec
call
insl
fisubrs
cwtl
xchg
mov
adc
or
mov
sbb
or
lea
inc
add
jno
push
add
ds
lock
addr16
mov
add
pop
adc
or
lea
rclb
inc
shlb
stc
pop
add
or
lods
adcb
mov
adc
cmp
sub
push
int3
fstpl
jo
inc
fists
repnz
fcomps
in
sbb
and
in
or
jb
mov
jecxz
les
jge
testl
mov
push
repnz
add
jge
leave
push
and
inc
cmp
adc
or
add
ds
sub
ss
outsl
xor
popf
mov
add
sbb
push
jg
insb
test
lea
loop
xchg
pop
es
inc
lods
fldl
xchg
dec
and
ja
pusha
lahf
mov
mov
movsl
jb
mov
add
test
push
xchg
and
mov
jno
popa
add
xor
rol
and
lock
nop
jmp
cli
imul
inc
icebp
movsl
jl
insb
pmaxub
add
mov
mov
cmpsl
ja
cltd
rcrb
divl
repz
lock
aam
jne
in
mov
mov
ss
pop
jae
adc
out
adc
mov
test
push
es
add
and
rolb
dec
xchg
adc
mov
addr16
dec
push
xchg
ja
addr16
mov
dec
aam
enter
shr
push
fdivs
pushf
xchg
sbb
jmp
in
adc
cmpl
mov
push
addr16
or
ja
xchg
add
jg
jo
and
xor
mov
clc
or
ljmp
andb
push
pop
or
cld
jns
fnsave
jnp
cmpsb
fstps
pop
shl
xor
and
pop
mov
sub
mov
loopne
xchg
adc
es
nop
push
push
inc
add
movsl
sub
mov
xchg
add
xchg
mov
and
les
mov
call
andb
and
std
mov
add
icebp
xchg
mov
shlb
inc
mov
and
mov
add
mov
adc
push
pop
cmp
loop
movsb
je
andb
add
jbe
dec
jg
sub
fcoms
inc
or
stc
jg
outsl
nop
mov
dec
mov
jp
add
mov
mov
jl
or
cwtl
cwtl
pushf
jecxz
stos
jp
cwtl
adc
aad
ljmp
mov
jge
mov
fmull
das
fidivrl
pop
or
aam
pop
movsl
adc
lcall
add
add
hlt
mov
movsb
dec
cld
inc
dec
lret
insl
xor
lds
and
mov
fldl
xor
sub
cwtl
sub
mov
xlat
jne
push
aaa
xchg
int
add
js
add
mov
xor
fwait
mov
sbb
xchg
outsb
push
mov
add
fmuls
xchg
jnp
scas
and
jne
add
mov
fstps
faddl
gs
out
sub
lock
adc
mov
jo
pop
lahf
add
xor
test
pop
in
stc
add
nop
pop
add
push
andb
xor
adc
cmp
subl
adc
or
or
fwait
int
xchg
and
rol
lret
out
cs
hlt
pop
add
adc
mov
adc
and
mov
add
idivl
cmc
xor
inc
mov
xchg
push
add
bt
pop
add
jge
mov
lock
xor
adc
dec
clc
jo
jns
aaa
adc
int
les
or
adc
test
xchg
push
or
xor
mov
jbe
lret
sub
int
mov
mov
gs
or
mov
lahf
xchg
out
mov
and
bnd
cli
xlat
dec
sbb
add
pop
ljmp
daa
cld
add
mov
loop
pop
or
push
or
fmul
or
push
sbb
jg
loopne
ret
sti
mov
icebp
adc
mov
mov
rcrb
jbe
mov
mov
mov
add
push
push
outsl
lret
add
cli
enter
cld
mov
xchg
or
and
adc
inc
insb
or
sub
nop
and
loopne
shr
xchg
push
cmpsb
add
xlat
leave
xor
shlb
fucomp
mov
xor
sbb
loope
arpl
or
pop
andps
rolb
and
divl
in
xor
addr16
inc
mov
adc
mov
inc
xor
adc
inc
movsb
leave
mov
mov
enter
sub
out
push
mov
mov
or
push
cmp
je
mov
cmp
pop
add
pop
js
mov
push
xchg
add
aad
dec
mov
imul
lcall
pop
out
dec
add
rolb
mov
icebp
mov
add
popl
pop
lret
mov
lods
mov
std
ret
hlt
incb
jp
in
js,pn
iret
xchg
fs
ds
and
pop
push
andb
bound
or
lods
mov
dec
add
adc
data16
cwtl
into
xor
adc
xor
hlt
cmp
dec
adc
test
loopne
ret
jae
add
xchg
jle
nop
mov
mov
add
adc
and
mov
jbe
pop
pop
pop
mov
cmpsb
cmp
add
loop
xlat
pusha
add
lret
inc
and
pusha
pushf
sbb
loopne
dec
mov
shr
lds
loope
call
dec
out
add
outsl
mov
or
xor
out
aaa
add
loopne
lret
push
jns
mov
pushf
je
jo
andb
imul
mov
addr16
mov
add
insl
sarb
jno
mov
popa
add
loopne
xor
popa
pop
adc
dec
es
ret
cmp
push
adc
jb
nop
or
push
movl
cld
cltd
scas
cs
lahf
pop
pusha
lcall
insb
repnz
xorb
push
stc
and
hlt
js
jb
mov
push
jne
insl
rolb
ja
sub
rorl
inc
leave
jo
test
inc
sub
jno
xor
sub
ljmp
outsl
push
dec
cs
sub
mov
sub
pop
jle
xlat
xchg
pop
pusha
pusha
xor
repnz
add
cmc
scas
loopne
jae
stc
and
push
inc
jl
jle
pop
jecxz
fists
pop
mov
out
xchg
inc
je
jbe
jl
add
stos
xor
pop
sbb
mov
jecxz
lods
inc
mov
adc
mov
mov
nop
xor
shll
cmp
jo
mov
sbb
out
add
sbb
sbb
inc
in
and
cli
pop
nop
lds
out
pop
test
fs
add
mov
mov
arpl
call
loopne
nop
xor
addr16
pushf
imul
pop
daa
add
sub
inc
mov
adc
push
add
stos
mov
sarb
addr16
pop
addl
jg
and
lock
or
leave
jp
inc
push
inc
sti
test
and
ja
lds
push
sbb
add
xchg
jb
int
cmp
push
pop
inc
notl
mov
testl
mov
in
cltd
xor
or
loope
jmp
pop
add
sub
jge
push
xor
push
faddp
ficompl
mov
add
push
fsubp
loope
sub
fs
xor
add
cwtl
add
push
push
push
stos
push
add
push
imul
in
add
mov
in
or
call
dec
dec
call
jo
hlt
sarb
inc
ret
push
ljmp
mov
xchg
jmp
sarb
jo
shll
lock
movsl
pop
lock
add
lods
cli
std
sbb
add
dec
sub
jo
or
add
imul
scas
push
int3
out
pop
push
or
ss
imul
xchg
or
bound
cs
xor
push
sub
add
lret
jmp
jo
test
es
lea
repz
aaa
fistpl
xchg
std
in
fs
je
mov
leave
push
loope
pop
cmp
cmp
shrb
push
add
fcoms
push
inc
lods
jo
sbb
shr
xchg
mov
dec
lea
rorb
inc
divl
out
sarl
jb
pop
ss
cmp
cwtl
inc
mov
cwtl
rolb
mov
jmp
add
dec
add
dec
mov
dec
mov
call
ret
add
sub
adc
adc
es
stos
sbb
cmp
cmp
out
mov
movsb
gs
dec
dec
shrb
add
push
push
pop
mov
adc
into
in
and
push
sbb
xchg
bswap
adc
in
call
bound
rcll
imul
xor
add
ljmp
mov
sbb
mov
jbe
add
or
rcll
mov
or
das
pop
insb
and
aas
pop
mov
inc
rcrl
mov
orb
das
or
mov
adc
popa
ret
sub
cmp
jge
jg
add
xor
sub
punpcklbw
cmp
cwtl
dec
int
push
int3
inc
add
movsb
lods
push
in
pop
inc
xor
dec
and
and
aaa
movsb
push
psubsw
testb
into
stc
popf
pop
sbb
not
sbb
push
mov
dec
cmp
mov
pusha
jge
out
or
xor
cwtl
fcomp
mov
push
push
les
rorl
mov
jb
push
sub
mov
push
add
or
mov
scas
in
fdivrs
xchg
pop
pminsw
lret
add
test
pusha
sub
add
add
cmp
faddl
push
les
mov
insb
jb
rcl
xor
rolb
mov
cmp
leave
and
jns
mov
shrl
outsb
mov
out
in
dec
mov
jl
data16
inc
xchg
dec
iret
jp
mov
imul
push
sbbb
lock
dec
out
push
call
xchg
inc
cltd
pop
and
pop
arpl
in
fs
jl
mov
dec
js
sub
pop
fwait
xchg
ret
cmp
jb
or
xchg
sbb
sbb
add
push
insl
in
mov
xlat
add
xchg
adc
out
stc
sti
cwtl
mov
inc
imul
adc
scas
xor
out
sarb
and
in
sbb
icebp
inc
inc
jge
jne
add
dec
push
and
sbb
jg
in
pop
xor
insb
jle
add
jb
call
dec
or
jp
pop
inc
add
and
int
enter
enter
in
in
test
cmpsl
xor
sbb
nop
fs
test
inc
jge
jb
das
fucomp
xchg
mov
xor
push
pop
xor
mov
roll
jecxz
add
push
add
and
jno
stos
pop
pop
fistps
or
sarb
mov
mov
mov
jb
aas
in
and
pop
dec
xor
xchg
nop
int3
clc
rolb
xchg
mov
sub
cld
xor
add
sbb
cmp
xor
leave
and
insl
xchg
roll
stc
clc
enter
mov
nop
cmc
ja
arpl
orb
xchg
push
mov
or
lods
jns
movsb
ds
pop
or
add
cmp
testb
xchg
or
mov
sub
add
in
mov
mov
enter
mov
cwtl
lods
ficomps
shlb
or
mov
or
out
pushf
push
movd
inc
cmp
xchg
cmp
cmp
pushf
cs
adc
ja
and
jnp
xchg
inc
push
sbb
adc
sti
mov
iret
pop
out
mov
add
aam
pusha
pop
inc
lret
inc
faddl
mov
xor
inc
ds
lods
jae
lret
push
push
cld
or
adc
xor
adc
loop
inc
leave
bound
or
lcall
lahf
popw
aad
and
stos
out
loopne
or
mov
xchg
mov
fwait
adc
es
mov
and
mov
sbb
push
lock
inc
pusha
scas
les
add
mov
xorb
and
jge
pusha
jge
pop
cmp
stos
ss
ds
insb
daa
sub
jecxz
pushf
mov
test
and
add
push
sub
and
ret
sti
sub
insw
imul
addr16
icebp
sub
or
leave
call
xchg
inc
mov
pop
loop
mov
test
jge
add
hlt
and
iret
test
pop
inc
add
mov
xchg
or
add
or
fnstsw
sub
incl
insb
xchg
push
pop
inc
movsb
push
js
mov
mov
adc
sbb
push
xor
test
inc
movsb
shll
pusha
mov
mov
cmc
push
hlt
or
sbb
cld
movsl
fisttps
xor
jno
mov
sub
sub
rol
cmp
fmull
jne
pop
adc
sbb
fsts
jp
xor
or
movsb
inc
lock
shlb
nop
xorb
sbbl
dec
or
jmp
cmp
and
imul
movsb
cmp
add
sub
daa
dec
add
sub
inc
cmp
and
or
xor
dec
adc
and
popl
je
outsl
rolb
pop
xchg
mov
in
add
ja
mov
inc
lock
fadds
fwait
adc
add
les
aas
mov
jns
andb
shlb
in
pop
cmpsl
in
or
scas
mov
lea
push
dec
mov
insl
mov
mov
in
in
jecxz
stc
xor
jne
push
cwtl
mov
call
in
ja
lahf
sbb
dec
dec
xchg
int3
jle
lahf
jo
mov
leave
add
loopne,pt
cmp
add
mov
clc
pop
xor
xchg
cwtl
mov
add
mov
push
lahf
jle
hlt
sahf
mov
cwtl
cmp
sbb
in
ja
and
sbb
pusha
aas
or
sub
mov
sbb
lods
mov
cmp
lea
sahf
xor
xor
push
inc
jecxz
add
add
pop
sbb
mov
ja
add
cmpsl
out
xchg
adc
out
out
aas
mov
mov
shll
sbb
filds
in
jne
loopne
lock
cmpsb
adc
push
inc
jno
fisubrl
mov
stos
lret
scas
add
push
push
int3
cwtl
pop
pop
mov
mov
cmp
mov
in
lock
lock
ds
inc
adc
cmc
adc
cwtl
or
lret
push
cmp
jnp
loopne
add
sub
lret
cmp
cmp
cmp
jp
adc
inc
fs
bound
insb
pusha
pop
mov
loop
cld
scas
mov
in
daa
cmp
addr16
xor
int
push
fdivl
push
out
sahf
sti
cmp
stos
repz
fcoms
push
out
sbb
adc
or
inc
cmp
add
mov
and
scas
add
mov
and
into
fisubrl
enter
sub
adc
les
loopne
inc
push
not
pop
and
cmp
adc
push
lock
fcomps
notb
adc
test
call
xchg
add
stc
ja
loopne
xchg
jle
cmp
movsb
in
mov
frstor
inc
push
call
mov
or
lret
push
dec
mov
out
jb
sbb
mov
in
xor
mov
jg
push
ljmp
push
sub
jo
popa
push
rclb
fucomip
int3
enter
add
mov
add
enter
pop
sbb
std
cmp
push
xchg
mov
xchg
insb
sti
add
adc
sbb
dec
in
pop
repnz
and
inc
cltd
xor
fucom
inc
je
dec
add
mov
cli
add
mov
sub
cwtl
sbb
clc
push
push
inc
mov
or
in
mov
mov
movsl
enter
xor
push
jnp
imul
cwtl
xchg
mov
pushf
inc
test
push
lahf
push
adc
sbb
int
cmp
mov
psllq
mov
mov
add
pop
fptan
lods
sub
xor
mov
loope
lahf
and
mov
andb
jo
addl
jge
into
add
jne
in
mov
and
inc
cmpsb
imul
jmp
and
clc
incb
cwtl
mov
pop
xor
and
xchg
popa
xorb
adc
movsb
aam
or
adc
je
add
shrb
in
fucom
xchg
adc
pop
mov
or
mov
xorb
out
orb
mov
mov
xchg
and
and
loopne
aas
ss
pcmpeqw
rolb
aad
out
inc
xchg
mov
loopne
enter
inc
in
mov
cltd
clc
add
xchg
sar
cli
repnz
mov
test
scas
aaa
add
inc
stos
pop
push
ja
cwtl
cmp
loop
leave
loopne
notb
insb
lret
nop
xchg
and
iret
inc
call
in
xchg
mov
push
aaa
les
movsb
mov
mov
xorb
push
scas
add
pop
add
out
ret
fnsave
in
push
pushf
out
cltd
add
cmp
mov
adc
push
inc
jmp
hlt
dec
xor
cmpsl
push
stos
jg
cmp
and
sahf
clc
dec
inc
xchg
pop
add
fidivrl
call
je
repnz
and
xlat
fs
inc
sbb
je
cmp
shr
or
rclb
lea
ja
dec
sbb
leave
sbb
add
adc
jbe
call
lock
pop
mov
outsl
loopne
movsl
mov
add
push
loopne
jns
call
out
cmp
cld
pop
mov
sub
mov
lock
mov
in
bnd
jbe
lock
ds
fs
mov
add
movsb
shll
shl
pusha
sub
je
add
repnz
adcb
subb
adc
mov
push
ja
add
xor
fisttpl
cwtl
push
cli
inc
mov
add
add
int
in
or
adc
dec
pop
mov
xor
dec
fsubrl
dec
lods
and
out
in
pop
add
jnp
push
add
xor
pop
mov
fcompl
call
addr16
shld
xchg
adc
pusha
add
in
mov
sbb
sbbb
inc
shr
cld
testl
ds
add
mov
imul
add
mov
cmp
cmpsl
arpl
inc
jmp
xor
pushf
mov
in
xchg
cmpxchg
nop
lods
mov
mov
sbb
stos
mov
aaa
sub
sbb
mov
cmp
push
sbb
lods
and
in
jge
or
aad
add
in
enter
ljmp
insl
inc
dec
mov
ror
inc
data16
pusha
xchg
dec
aas
sbb
fs
inc
daa
cltd
adc
ret
add
sbb
pop
pop
mov
add
mov
and
or
inc
dec
outsb
push
push
mov
pop
into
cmp
add
add
dec
xchg
or
sbb
ret
jns
mov
cmpl
and
mov
mov
jg
add
insl
push
add
lahf
inc
loopne
xor
add
pop
xor
pop
call
inc
mov
inc
test
pop
out
pop
mov
add
pop
xor
push
mov
lea
adc
adc
loop
test
bound
and
dec
jge
les
adc
and
add
sbbl
or
les
jp
movsl
push
lret
fcomps
loopne
xchg
mov
lea
lods
pop
sbb
test
adc
pushf
dec
inc
inc
test
lahf
add
out
sbb
sbb
push
lret
in
inc
in
mov
icebp
lock
xor
dec
pusha
movsl
int
stos
add
loope
jae
in
pop
add
add
iret
nop
sub
in
add
push
inc
push
int3
pop
inc
cmp
add
sahf
dec
jle
ret
rcrb
loopne
push
add
in
add
cmpsl
add
jnp
and
sub
mov
push
add
cmp
sbb
adcl
sahf
jne
dec
jns
pop
cmp
cmp
inc
out
add
sub
adc
xor
xor
arpl
ror
enter
pop
add
fstl
sbb
addb
inc
add
jle
mov
scas
in
fdivrl
adc
cltd
push
or
add
cmp
pop
add
dec
aaa
movsb
push
push
test
sbb
scas
xchg
dec
xchg
or
sbb
sub
int3
lods
push
int3
data16
int
scas
mov
test
pop
std
or
mov
pop
imul
jge
cwtl
andb
adc
inc
add
movsb
nop
push
int3
sbb
cmp
adc
hlt
pop
mov
fsubrl
inc
sub
cmpsb
dec
aad
cmp
xor
stos
xchg
add
popf
mov
cmp
cmp
leave
inc
mov
xchg
popf
ret
push
push
push
mov
dec
add
stos
xor
fiaddl
outsb
inc
xor
movsl
loopne
je
cmp
jl
ss
sbb
pop
int
test
adc
add
mov
enter
add
out
pop
and
push
test
adc
lock
punpckhdq
pusha
test
add
push
pop
mov
jg
mov
xchg
fsts
sbb
mov
push
loope
subl
std
cmp
push
hlt
bound
adc
leave
and
sbb
inc
in
dec
mov
enter
jmp
rclb
pop
push
ja
lds
inc
sbb
lods
sbb
les
adc
mov
inc
xchg
je
pop
scas
adc
push
xor
gs
mov
mov
mov
pop
dec
subb
neg
sbb
arpl
fdivrs
daa
jb
rol
and
and
movsb
jne
jl
add
mov
mov
push
mov
icebp
xlat
fwait
adcb
das
push
shll
out
xchg
scas
sub
pop
jmp
insl
fsubs
pop
add
sub
frstor
add
xchg
sbb
mov
jo
add
pop
push
ja
js
adc
popa
movl
cmp
ficomps
push
sub
popf
mov
xlat
jo
loop
pusha
mov
call
dec
pusha
pop
sub
xchg
btc
iret
xchg
xorb
inc
mov
cmp
roll
push
push
cli
jl
enter
stos
cwtl
movsl
dec
aas
int
orb
shrb
fistl
int
les
leave
add
mov
add
rcll
lret
fiadds
ss
mov
sbb
das
mov
add
test
cmp
loopne
dec
std
and
push
lea
sbb
sar
push
add
jl
xor
or
incl
in
add
inc
cmp
inc
nop
add
jecxz
test
inc
fildl
mov
inc
and
or
outsb
adc
push
pop
mov
ja
adc
insl
xchg
xlat
adc
add
sbb
mov
loope
mov
test
xchg
and
aaa
adc
push
mov
and
arpl
dec
push
or
inc
xor
dec
sub
and
and
bound
adc
les
js
add
adc
inc
inc
jmp
xchg
add
dec
xor
fdivp
dec
lret
lds
psubsb
adc
dec
lret
xor
js
mov
add
push
fsubl
mov
or
loopne
lds
aam
arpl
add
dec
fwait
sbb
and
arpl
adc
push
inc
cmc
sub
in
or
dec
test
fadds
jbe
rcr
cmp
adc
rolb
int3
dec
add
aas
or
mov
mov
pop
or
and
xchg
fmuls
pop
fcomps
movsb
mov
xor
inc
inc
push
dec
xor
cmp
out
sbb
adc
je
adc
popa
jno
jne
sub
mov
xchg
je
mov
jl
sbb
popa
sbb
xor
mov
dec
adc
push
or
pushf
imul
xchg
dec
aam
xorb
push
adc
mov
nop
adc
cltd
jmp
jno
add
inc
xor
pop
shlb
pop
call
inc
dec
mov
adc
inc
insb
add
push
scas
and
jne
out
lds
les
test
cmp
xchg
movsl
pop
pop
add
jecxz
nop
sub
xor
sub
ret
push
sub
and
add
loope
xor
xor
dec
sbb
in
add
dec
mov
add
lods
or
cmc
inc
or
aam
nop
add
or
pop
xchg
add
mov
dec
lcall
push
ja
hlt
dec
mov
and
cld
int3
loopne
add
mov
popa
and
mov
in
and
pushf
adc
mov
cmp
loop
dec
push
add
repz
dec
stos
stos
in
les
rorb
loop
push
cmpb
jg
push
sub
add
enter
add
pop
inc
int3
xor
or
movsl
push
movsb
adc
aas
add
lock
sbb
push
mov
add
std
jg
pusha
sbb
bound
push
cld
cmp
add
imul
hlt
leave
push
data16
sbb
jo
movsb
popf
add
sub
cmp
adc
mov
loop
adc
and
jae
dec
xor
add
sar
dec
inc
es
inc
fimull
adc
icebp
pop
imul
jmp
add
adcl
inc
clc
and
dec
push
add
sbb
cmp
stos
addb
or
jge
ret
subl
daa
mov
std
or
test
je
ja
in
mov
arpl
dec
loope
aam
cltd
add
shll
add
std
pop
in
sbb
push
dec
mov
mov
xchg
pop
cld
sbb
sahf
inc
mov
jmp
adc
jl
push
jle
mov
add
mov
scas
cmc
loope
inc
or
jmp
cmpsb
movsb
push
out
movsb
dec
cmp
arpl
test
pop
cmp
and
stos
ds
and
pop
push
adc
imul
sahf
out
int3
call
data16
and
sbb
dec
push
sbb
mov
jno
push
test
add
out
xchg
jle
fiaddl
mov
out
ret
rorb
inc
inc
pop
out
clc
nop
dec
bndstx
scas
es
pop
jp
cmpsl
popa
add
fadds
cld
fisubrl
add
sbb
rolb
repz
out
mov
call
xchg
and
and
and
scas
jecxz
xor
add
cwtl
outsb
rcrl
adc
bound
clc
xchg
add
mov
clc
imul
addl
push
xor
loopne
pop
jns
arpl
push
ds
pop
add
mov
cmp
xor
add
orl
xor
xchg
cwtl
add
fwait
mov
adcb
sub
and
shlb
popf
js
clc
push
mov
jne
clc
mov
xor
cwtl
hlt
daa
test
cmp
push
repnz
jo
shll
in
cmp
pop
dec
ret
mov
sti
mov
cs
xor
pop
and
leave
inc
dec
int3
sbb
mov
mov
mov
or
cmp
push
pop
cmpsb
insl
xor
push
popf
dec
add
xchg
cwtl
inc
sub
fwait
push
and
sbb
jge
inc
cli
inc
add
or
cmpb
inc
dec
or
adc
arpl
outsl
loope
push
rorb
dec
clc
or
roll
add
mov
stc
adc
mov
nop
lods
push
fldl
dec
and
xorb
inc
cmp
pop
push
movsb
shlb
cmc
mov
movsl
add
adc
daa
insl
inc
clc
testl
subb
dec
pop
push
adc
imul
rorb
sti
in
cld
scas
dec
push
mov
mov
mov
das
add
sbb
xchg
add
mov
xchg
cmc
add
outsb
dec
adc
fdivr
loop
pop
movsl
inc
adc
das
pushf
enter
add
pop
movsl
sahf
add
hlt
mov
pop
push
add
lds
xchg
and
orb
shrb
dec
inc
pop
push
pop
sub
xorb
inc
and
xchg
or
enter
mov
test
insl
jp
lds
ret
jnp
lods
add
jbe
daa
psllq
mov
sbb
push
movsb
mov
rcll
icebp
aam
xor
in
xor
adc
movsb
jmp
sbb
into
and
je
sbb
nop
popa
adc
daa
outsb
dec
mov
test
ds
repnz
mov
cmc
add
xor
and
sub
ja
or
adc
inc
and
pop
mov
repnz
lret
sub
jns
push
add
mov
xchg
mov
lock
sbb
or
adc
lock
sub
or
inc
xchg
sub
sbb
insb
sar
addb
nop
mov
pop
pop
mov
cli
inc
add
je
jmp
or
jmp
lock
sub
add
inc
push
mov
popf
adc
mov
loopne
adcl
pushf
pusha
sub
mov
movsl
cmp
popf
add
mov
or
in
sub
dec
add
shlb
push
xorb
push
push
cld
les
fisttpll
arpl
dec
stos
fsubs
movsb
adc
shlb
js
or
sub
aam
sub
add
sbb
adc
pop
mov
arpl
push
nop
xorb
xchg
movsb
loopne
addr16
cmp
cli
sbb
add
mov
dec
iret
dec
adc
adc
and
add
jnp
out
xor
dec
lahf
xchg
sbb
in
mov
cwtl
adc
xchg
nop
nop
push
cwtl
add
or
push
pop
aam
fldcw
mov
jnp
insb
pusha
push
leave
dec
call
adc
mov
jnp
sub
pop
jle
mov
mov
add
and
inc
popa
or
decl
rcll
inc
adc
push
adc
cmp
jecxz
add
dec
stos
xorl
inc
setp
inc
fdivrs
mov
add
sbb
mov
dec
ret
inc
sub
mov
js
aas
gs
cmp
xorl
and
pop
sti
imul
test
xchg
or
pushf
nop
pop
xchg
pushf
xchg
adc
dec
inc
xor
pusha
arpl
jmp
inc
je
mov
arpl
pop
cmp
xchg
cmc
movsb
inc
inc
inc
fwait
cmp
dec
cmc
fs
xchg
pop
inc
pop
orb
ljmp
pop
push
arpl
loop
fmull
dec
sub
lret
mov
xor
das
mov
pop
repz
sub
add
dec
mov
push
jo
sbb
outsl
mov
inc
push
jae
mov
punpckhwd
adc
pusha
add
pop
and
or
sub
sbb
and
sub
add
push
int
out
es
add
inc
pop
jb
xor
into
pop
xor
push
leave
adc
addps
shr
and
mov
out
jge
sbb
pusha
dec
cld
movsb
adcb
push
push
std
add
inc
nop
in
flds
fs
xor
sub
cmpb
dec
test
ljmp
sar
dec
or
dec
cmp
bound
mov
es
aam
sub
xor
push
negb
ja
or
dec
inc
les
and
add
lcall
inc
push
pop
mov
lds
rcll
xor
popf
push
push
add
push
pop
mov
mov
nop
mov
mov
add
mov
cltd
dec
lods
mov
dec
adcb
or
xchg
mov
pop
add
daa
xor
sub
mov
jbe
mov
add
out
popl
testl
icebp
and
add
or
jne
sub
lock
adcl
add
imul
in
aad
xchg
sbb
sar
jo
or
sbb
inc
mov
insb
add
stc
cmpsl
bound
das
lea
nop
jl
test
int
inc
inc
orb
roll
nop
push
in
sbb
enter
sub
add
dec
inc
sti
outsb
pop
xchg
add
jbe
push
jl
adc
xor
sarb
dec
sub
dec
clc
mov
sub
sub
cmpsb
adc
cmp
add
ja
in
setb
call
das
cmp
add
mov
mov
adc
es
mov
sub
movsb
pusha
movsl
xchg
sbb
add
sub
fidivs
push
sub
dec
ret
js
sub
sub
loop
add
cmpl
dec
sub
popa
xchg
nop
aam
lahf
mov
fsubl
xor
add
add
inc
roll
dec
repnz
hlt
into
enter
loop
adc
stc
cmpsl
fwait
inc
and
mov
jl
loope
cltd
inc
xchg
xchg
add
test
xchg
mov
sub
adc
or
adc
fmull
mov
xor
andl
sbb
add
or
or
jnp
ja
dec
sub
out
cli
jg
mov
dec
cwtl
adc
sbb
xchg
test
test
sbbb
add
mov
mov
test
xchg
sub
and
cmp
int3
jns
mov
adc
inc
mov
das
test
pop
push
sub
mov
or
cmp
fildll
jb
pop
hlt
inc
xor
cs
mov
jmp
jmp
rep
add
les
ss
or
pop
dec
repnz
inc
xchg
add
repnz
or
jge
pop
das
inc
test
mov
pop
ljmp
push
cs
sbb
or
adc
add
shr
dec
aam
cmp
push
in
inc
push
jg
int3
lea
push
add
sub
call
popf
lret
add
mov
stos
enter
cmp
std
add
push
shlb
mov
add
adc
out
sbb
xchg
inc
mov
add
out
jecxz
fidivs
adc
clc
or
mov
fsubs
adc
adc
mov
shl
dec
scas
fs
popa
add
leave
pop
movsl
daa
int3
and
xor
out
pop
stos
add
inc
xor
dec
inc
fsts
inc
xchg
dec
in
rcl
mov
gs
xor
lds
in
adc
adc
cmp
mov
mov
push
lock
lahf
adc
inc
jae
push
push
mov
orb
je
xor
notb
lret
sub
rorl
cmpsl
es
pop
adc
or
cld
pop
xlat
arpl
loop
add
in
add
call
mov
pop
sub
push
cmpsb
pusha
push
in
repnz
add
aas
fstpl
addr16
jecxz
in
mov
adc
or
mov
mov
addl
add
xchg
xchg
cmp
daa
movsl
xchg
and
cs
or
les
mov
or
dec
add
push
andb
js
or
rolb
jle
imul
add
dec
rclb
inc
push
inc
int3
jl
test
dec
daa
outsb
cmpb
jne
xchg
and
or
sbb
lea
and
cld
inc
adc
out
rcrb
mov
pop
jno
and
dec
jge
dec
test
loopne
dec
pusha
dec
mov
or
add
cli
addr16
mov
mov
sbb
xchg
add
adc
in
iret
dec
push
nop
cmpsl
int
add
inc
inc
push
mov
cwtl
xor
xchg
xor
arpl
add
int3
mov
or
inc
loope
jmp
inc
and
mov
mov
mov
movsl
inc
pushf
call
pop
aas
rolb
bound
inc
xchg
mov
imul
scas
icebp
lret
mov
adc
adc
mov
int3
cld
lock
cmpsb
scas
and
mov
call
cwtl
add
cwtl
sub
push
mov
dec
mov
inc
or
mov
rorb
add
sti
call
xchg
mov
sbb
pop
icebp
call
add
out
data16
pusha
add
ja
dec
faddl
and
mov
adc
adc
call
add
sbb
pop
xor
daa
jmp
add
sahf
jbe
es
orb
test
push
sub
frstor
add
adc
and
in
mov
dec
and
inc
pusha
pop
mov
movsb
fmuls
pop
lret
cmc
or
pushf
out
enter
bound
out
pop
cltd
dec
fcmovb
cmp
call
add
shlb
in
mov
mov
les
adc
mov
lds
add
ror
jno
test
adc
icebp
xchg
jb
sub
inc
dec
adc
clc
sub
dec
push
pop
je
inc
or
pusha
mov
jne
sbb
pop
xchg
add
cwtl
pop
repnz
dec
cmpb
push
cltd
cmp
hlt
insl
daa
add
adc
jmp
xor
adc
ret
mov
imul
mov
dec
icebp
bound
icebp
faddl
mov
push
enter
test
xor
sub
xor
scas
xchg
lcall
lahf
insl
mov
imul
gs
inc
leave
jmp
test
aam
je
bound
inc
push
mov
pop
mov
inc
mov
sub
lock
out
or
add
sub
add
faddl
add
stos
jae
xor
loope
mov
push
inc
aaa
das
loop
dec
sbb
loope
ret
pop
mov
sbb
bound
ljmp
sbb
jg
sub
mov
movsb
add
test
stos
dec
xchg
add
into
inc
inc
test
pop
sbb
insb
int
adc
or
ret
out
inc
pop
loop
fcoms
mov
sub
add
add
dec
push
test
dec
test
mov
sbb
adc
sub
add
mov
hlt
inc
add
out
jl
sub
xor
sub
and
in
dec
call
insl
test
adc
xlat
into
fs
frstor
pop
mov
mov
jae
hlt
inc
mov
mov
and
cmp
pop
movsb
dec
lret
xchg
loope
bswap
rcl
arpl
das
clc
nop
aas
les
movl
jmp
ds
aad
insl
sub
dec
push
fcoms
adc
xchg
popf
loop
orl
lock
mov
sbb
sbb
xor
mov
and
addl
xchg
add
xlat
stc
sub
mov
and
or
push
das
sbb
adc
dec
jl
push
add
lds
arpl
lds
stos
pop
pusha
cmp
push
mov
xchg
in
xor
ret
push
mov
xor
rclb
sahf
add
repz
sbb
lock
cli
push
add
jmp
xor
mov
lock
or
enter
insb
inc
aas
jns
mov
imul
jle
dec
fcoml
mov
cltd
leave
cwtl
sub
repz
mov
icebp
dec
test
js
popf
add
jo
loope
mov
add
and
cwtl
add
jg
popa
scas
mov
add
repz
fadd
xchg
cmp
pop
xor
int3
add
add
or
lret
mov
dec
push
sbbb
dec
mov
adc
xchg
lods
mov
push
push
adc
out
arpl
lea
in
ret
sub
or
mov
pop
enter
clc
rorl
lock
xchg
loopne
mov
es
pop
mov
adc
add
mov
lds
loope
mov
push
orb
xor
sbb
int3
or
pop
add
in
fiaddl
add
xchg
movsl
cs
mov
aam
in
push
ds
test
mov
push
push
push
dec
mov
add
aam
pop
arpl
sbb
mov
sahf
push
add
adc
mov
inc
stos
and
sbb
sbb
or
in
inc
call
shlb
pushf
or
out
add
adc
cs
jl
inc
mov
dec
lods
cmc
xlat
push
inc
jns
add
repz
test
adc
lret
dec
mov
and
and
add
adc
in
es
je
inc
shr
inc
xor
testl
stc
jae
xchg
in
inc
je
test
imul
int
mov
sbb
pop
cmp
lcall
sbb
jl
and
imul
add
hlt
cmp
pop
and
hlt
mov
popf
add
je
in
push
xchg
add
and
xchg
and
xchg
inc
lea
push
ss
adc
pop
mov
mov
mov
add
xchg
cld
pushf
mov
and
inc
in
xor
cmp
fdivrs
out
pusha
xchg
pushf
adc
and
in
pop
xchg
xor
add
ja
int3
adc
aaa
mov
dec
imul
pop
mov
mov
std
lds
pop
lock
add
jl
js
rorb
push
inc
sbb
add
mov
and
pop
orb
jge
pop
inc
inc
mov
add
ljmp
add
inc
fld
fstl
test
or
push
mov
adc
daa
gs
add
imul
out
dec
push
pushf
adc
or
in
jnp
roll
lock
pop
sahf
push
mov
data16
dec
faddp
push
leave
outsb
push
or
nop
add
mov
lock
add
mov
rcrb
out
loopne
sbb
insl
add
push
and
xchg
jo
pop
and
loop
dec
icebp
das
call
add
int3
jge
mov
adc
add
xchg
push
inc
inc
add
out
cmpb
dec
pop
inc
inc
xchg
xor
mov
pop
mov
push
mov
sbb
repnz
dec
dec
cmpsb
rcll
out
bound
pop
xor
and
stc
sub
repnz
cmpsl
clc
adc
subb
loopne
or
add
xor
mov
add
stc
inc
mov
cli
cmp
jle
push
test
inc
jmp
or
leave
add
sub
inc
xchg
ljmp
and
push
movsl
add
or
push
adc
lock
lock
push
xor
xlat
add
cmc
push
scas
aas
dec
add
std
push
fwait
out
fsts
popl
sbb
sbb
cmp
fmull
rcl
mov
and
pop
add
std
push
pop
into
rorl
mov
mov
aad
push
add
ja
inc
movsb
ss
arpl
inc
xor
stos
fcompl
add
mov
cmp
mov
xor
lds
xorb
add
sarb
mov
je
in
pop
pop
and
in
aaa
cmp
xlat
add
bound
dec
enter
je
arpl
dec
dec
int
add
push
jne
push
mov
adc
jnp
lcall
sub
mov
adc
lret
or
pop
push
cld
icebp
enter
add
lahf
adc
in
repnz
fld1
add
mov
sub
push
insb
dec
loop
add
cmp
add
mov
rcrb
adcb
ja
xor
loope
int3
xchg
and
rcrl
and
arpl
loope
xchg
push
aam
shl
and
or
xor
lcall
mov
es
pop
push
enter
push
and
pop
js
inc
push
mov
bound
imul
mov
cltd
push
cmp
push
or
dec
mov
sub
popa
sbb
das
arpl
sub
and
in
and
mov
adc
int3
cmp
dec
xchg
aad
ret
pop
les
lcall
xor
mov
stos
enter
int3
ret
aaa
js
in
add
pop
lahf
js
roll
xchg
or
test
push
in
inc
ret
push
lea
cmp
aad
addb
add
inc
adc
add
cltd
or
sbb
sub
mov
int3
inc
test
mov
sbb
mov
add
mov
pop
sub
fnstsw
add
or
test
push
mov
leave
push
in
push
cwtl
cld
out
pop
movsb
mov
cmp
add
xor
jge
sub
sub
add
mov
cmp
cs
jmp
or
dec
jbe
sub
clc
test
adc
sub
mov
pop
mov
rcrb
inc
dec
pusha
adc
outsl
or
sbb
cwtl
push
xorl
cli
add
adc
rorl
mov
aam
dec
les
add
clc
cmpb
adc
mov
inc
pusha
jl
loope
out
xchg
hlt
hlt
inc
jmp
mov
jns
inc
movsb
test
mov
mov
test
mov
call
stos
pushf
les
sbb
nop
or
mov
sbbb
int3
nop
inc
enter
pop
sbb
inc
test
adc
lods
inc
daa
inc
add
movsl
insl
dec
nop
nop
mov
fs
xchg
or
in
or
xor
and
cmpb
sbb
movsb
xor
mov
mov
push
outsl
sbb
dec
mov
or
push
in
mov
cld
and
cli
jb
out
and
lahf
adc
mov
enter
fstl
push
clc
xor
outsb
push
out
push
adc
adc
daa
hlt
and
add
inc
and
jb
lahf
adc
jo
aas
xchg
dec
dec
push
mov
out
gs
cld
xchg
adc
fnstcw
mov
xlat
inc
lods
or
rolb
add
nop
cmp
jg
mov
repz
pop
xchg
es
in
movsb
fidivrs
shrl
cmp
clc
adc
subb
xchg
sbbb
sub
int3
pop
jmp
and
pusha
pop
mov
lods
loopne
aad
add
xchg
movsb
subb
repnz
sub
jo
mov
test
inc
cmpsb
push
pusha
add
std
mov
pop
mov
xchg
aam
fadd
cmp
adc
rcll
sub
or
mov
push
add
bound
leave
repnz
sub
cmp
push
in
rolb
add
xchg
and
pop
jnp
push
sbb
mov
das
mov
and
cmp
cmp
shlb
cli
imul
push
inc
rolb
scas
mov
sub
adc
out
loope
add
or
mov
cmp
and
dec
mov
loopne
xchg
sti
test
push
insb
fcoml
jge
sbb
xlat
lret
or
mov
push
cmc
cmpb
in
bound
push
in
mov
dec
cmpsb
mov
test
dec
stc
es
loop
push
sbb
adc
adc
xor
xor
mov
sbbb
add
push
xchg
imul
mov
jl
mov
push
xor
mov
mov
jl
add
adc
lock
jg
scas
nop
mov
mov
push
inc
loopne
sub
stc
hlt
or
lock
inc
dec
or
or
sbb
add
xchg
pop
dec
loop
daa
int3
cmp
in
sbb
sarl
rorb
fstps
test
mov
call
add
add
sub
sbb
je
jnp
or
nop
mov
xchg
add
pop
or
es
dec
jle
sahf
outsl
dec
sbb
hlt
arpl
mov
mov
xchg
mov
push
xor
or
jb
sahf
loope
dec
adc
mov
xchg
xchg
push
mov
jne
les
sbb
jl
mov
push
mov
xor
jns
popf
and
mov
add
dec
testl
and
inc
add
mov
js
adc
sbb
lret
movsl
xchg
les
fwait
lea
add
orb
mov
nop
ja
stc
sbb
ficoml
mov
lea
add
mov
insb
addb
repz
pop
insb
mov
loopne
add
in
ja
lock
pop
cmp
lcall
add
sub
cwtl
adc
out
adc
pop
in
test
dec
lock
and
shlb
sar
add
xor
adc
dec
pop
pushf
sbbl
push
jl
add
fdiv
or
repnz
sbb
sbb
sbb
cwtl
insb
roll
xchg
mov
fists
lock
pop
ret
mov
pop
cmpsl
arpl
fdivrs
mov
insl
dec
rorb
aam
or
dec
adc
test
in
xchg
dec
dec
insl
hlt
mov
rcrl
pop
cmp
inc
ja
stos
add
cmp
mov
cmp
loop
add
sub
inc
aas
adc
xchg
leave
or
jp
push
mov
aaa
lret
xor
push
add
push
vmwrite
testb
pusha
dec
mov
andl
pop
push
mov
loopne
mov
loopne
or
enter
xor
movsb
fs
and
mov
outsb
xorb
pop
mov
lds
mov
daa
add
bound
movsl
pop
and
pop
xor
or
js
fldl
push
mov
inc
push
ljmp
mov
and
fcomi
adc
ror
flds
push
cmp
or
xor
xor
dec
add
fiaddl
lock
sub
scas
cltd
mov
hlt
mov
dec
xor
call
je
jmp
add
pop
repnz
push
pop
lock
or
cmc
adc
inc
int
ja
pop
mov
xchg
xor
fs
aaa
inc
shll
add
inc
clc
xor
jl
ja
inc
shlb
push
arpl
popf
out
add
cltd
insl
cld
es
pushf
jge
mov
push
popa
subl
fwait
loope
jno,pn
dec
dec
push
or
mov
cwtl
add
in
or
add
add
addr16
cmpb
and
xor
dec
and
mov
aam
rcrb
sub
add
dec
inc
scas
mov
mov
add
cwtl
outsl
mov
adc
add
int
inc
roll
dec
lret
daa
mov
mov
pop
sub
xor
mov
and
sub
add
pop
in
add
inc
inc
push
subb
out
lods
orl
mov
cmpsb
xchg
add
jecxz
fisttps
dec
lret
incl
lret
adc
mov
orb
inc
sbb
rcrb
pusha
adc
mov
cmp
add
cmc
bound
jecxz
fmuls
fcomps
test
movsb
rcl
inc
and
xchg
mov
ret
ljmp
cmpsb
js
test
or
icebp
movsb
xor
and
hlt
and
adc
adcb
popf
rorb
sarb
es
icebp
mov
and
insb
scas
mov
add
xchg
ss
push
inc
arpl
je
mov
outsl
add
pop
push
jbe
dec
xor
ss
pop
fs
jne
inc
inc
scas
add
data16
add
jmp
and
testb
gs
and
or
xchg
and
in
sbb
ret
mov
adc
lahf
cmpsl
popl
loopne
cmp
mov
cltd
adc
jg
call
leave
aam
int3
fs
pusha
cwtl
mov
add
insb
or
push
xor
push
xor
pop
popf
jb
pusha
call
inc
mov
jb
int
mov
sbb
fnstenv
enter
mov
insb
les
dec
mov
test
xor
pop
popa
dec
movsb
je
call
cmp
dec
cld
into
mov
aas
and
adc
add
xor
jle
cmpb
pop
mov
fadds
pop
out
jecxz
inc
test
js
mov
xchg
pushf
add
scas
rcll
lcall
sbb
mov
xchg
jne
add
pop
cmpsl
std
imul
adc
inc
aam
fwait
aam
daa
pusha
fnstenv
divb
and
test
inc
mov
movsl
adc
and
mov
in
mov
or
jmp
mov
ja
mov
out
loopne
add
ja
mov
push
je
shlb
bound
andb
inc
adc
or
dec
daa
push
pop
into
mov
ss
inc
test
jnp
mov
leave
pop
push
fsubl
xchg
rorb
test
or
movsl
test
dec
push
fcom
jne
bound
push
test
pushf
and
clc
add
out
sbb
in
adc
mov
test
sub
adc
call
sub
push
cs
into
mov
mov
or
add
xlat
cli
add
xor
dec
bound
shlb
sub
pop
adc
roll
jns
outsb
cld
add
sbb
pop
movsb
mov
sti
cmc
add
cmp
rorb
push
lret
mov
outsl
jae
pop
sbb
es
jp
inc
movsl
add
sbb
push
int3
daa
cmpsl
dec
push
cmp
jns,pt
xchg
adc
arpl
adc
pusha
push
add
and
dec
cmp
push
cmp
add
into
inc
je
and
cmp
xchg
mov
jge
outsb
add
dec
clc
mov
and
lea
jg
sbb
std
dec
mov
or
push
add
sar
push
add
or
mov
addr16
movsb
mov
dec
inc
mov
stos
lea
mov
add
iret
jge
cmp
pop
movsb
fidivrs
add
push
dec
testb
hlt
stc
xor
addr16
add
arpl
and
pop
inc
loop
mov
adc
sub
pusha
loop
jo
lret
pop
out
mov
ffree
or
xlat
dec
jne
push
bound
fs
enter
scas
shlb
xor
push
mov
sub
out
mov
mov
mov
cmp
dec
xchg
dec
add
mov
and
mov
adc
or
add
es
cmpsl
ljmp
mov
adc
pop
jg
pop
addr16
jbe
jnp
add
push
inc
test
gs
or
fbstp
clc
xchg
xchg
in
add
ss
fwait
ljmp
xor
inc
sbb
pop
and
iret
loopne
add
pop
push
jae
sahf
jmp
ja
mov
movsl
and
jge
rolb
push
sbb
dec
mov
add
mov
push
add
out
pop
cmp
fstpl
ret
add
mov
inc
add
out
sub
add
sbb
or
mov
sub
xor
adc
fmull
add
bnd
pop
mov
out
push
xor
xor
insl
add
or
or
jb
push
das
cli
inc
lds
int
lock
jecxz
or
cmp
orb
stos
ljmp
jmp
dec
bound
add
test
fistl
hlt
dec
inc
xchg
push
clc
outsb
lds
cltd
jo
dec
mov
insb
add
scas
adc
add
cmp
xor
push
dec
lods
rcll
subb
lock
loop
aad
add
pop
and
pusha
sub
popf
in
add
sub
jge
jae
ss
jb
jbe
pop
mov
ljmp
mov
sub
les
adc
pop
jbe
imul
mov
xor
int
scas
gs
scas
aaa
test
adc
ret
jmp
xor
daa
loopne
pusha
inc
dec
mov
insl
pop
int3
sarl
pop
loopne
xor
gs
out
rcrb
pop
add
xor
sti
pusha
fwait
out
in
sbb
mov
pop
adc
pop
sbb
add
push
push
push
andl
mov
adc
dec
pushf
test
or
or
dec
popa
mov
sub
stos
repnz
cmp
pop
inc
jecxz
popf
jmp
inc
xchg
sahf
or
arpl
test
and
negl
xchg
add
mov
mov
sub
in
mov
cld
shrb
jo
les
popa
sub
jp
add
adc
aas
cmp
lock
mov
cmp
and
nop
push
push
gs
mov
and
faddl
add
xor
add
insl
inc
es
fdivs
xchg
and
add
jae
sbb
je
push
lds
mov
dec
test
int
inc
jl
jmp
sbb
add
mov
mov
add
rcr
adc
push
movsb
cmp
xchg
imul
leave
and
xchg
push
jo
or
pop
dec
push
cwtl
andb
jmp
mov
sub
scas
xor
add
data16
sub
sub
fs
adc
xor
or
sbb
sub
adc
ret
nop
lods
mov
mov
in
mov
pop
sbb
adcl
icebp
hlt
or
call
push
shll
adc
cmc
pop
shl
ret
pop
sbb
enter
arpl
inc
cltd
cli
mov
mov
dec
push
and
pop
nop
and
fildl
sbb
adc
jle
clc
test
mov
adc
cmpsb
clc
and
shlb
mov
xor
xorl
call
add
push
js
push
mov
sub
cwtl
nop
pop
cmovne
pop
pusha
shr
int3
pusha
negb
out
xor
fs
test
incb
mov
jo
lret
daa
pushf
movsb
mov
dec
repnz
leave
aad
mov
push
sarl
test
mov
cld
movsb
and
std
add
repz
cli
add
lods
xchg
dec
daa
cmpl
pusha
outsl
add
and
xchg
jecxz
inc
jb
pop
syscall
dec
loopne
arpl
add
add
shl
bound
cli
adc
pop
mov
adcl
jo
add
fbld
ds
sbb
cltd
jl
dec
sarl
stc
push
shll
mov
loopne
bound
jmp
in
je
or
andl
xorb
subl
rcl
movsl
insl
add
lcall
jo
adc
push
pop
test
add
mov
loopne
divl
pop
sarl
rcrb
and
loopne
aas
jmp
repnz
sub
imul
popf
rcll
xor
add
mov
clc
push
xlat
jae
testb
mov
xchg
cmp
cmp
movsl
dec
push
cld
flds
cld
sbb
rolb
ret
bound
das
pushf
mov
xchg
push
int
inc
and
xchg
loopne
push
movsl
pusha
inc
or
or
sahf
test
stc
and
or
cmpb
cld
and
hlt
jo
lret
or
sbbb
cmp
adc
add
sarl
rorb
xor
imul
mov
dec
fisubs
jge
add
aam
jl
loop
add
jb
push
in
adc
jl
insl
mov
outsb
inc
lods
push
rcrl
inc
pushf
arpl
es
xor
int
cld
mov
int3
pop
add
dec
std
icebp
mov
in
test
aas
movsl
cmp
dec
push
nop
std
lock
mov
add
cwtl
and
or
lock
jbe
adc
mov
or
and
add
gs
cld
pop
repz
out
inc
xor
adcl
xor
cltd
scas
ja
clc
mov
inc
adcb
arpl
add
sbbb
ret
lret
ja
inc
pop
cmpb
subl
push
and
es
or
aad
idiv
sbb
adc
pop
xor
sbb
nop
add
adc
insl
test
aad
bound
loope
push
xchg
enter
sbb
roll
mov
lds
add
scas
and
subb
sub
inc
cld
add
sbb
cld
inc
xor
add
xchg
das
pop
pop
or
gs
out
jl
cmp
adc
inc
fcmovne
add
jo
jno
adc
add
aad
xchg
cvtpi2ps
adc
mov
add
jb
in
imul
jg
pushf
cmp
sbb
add
fcomps
push
add
lret
xlat
mov
pushl
lods
daa
adc
arpl
mov
xor
and
insb
xchg
sub
or
mov
lock
mov
push
add
sub
xchg
add
adc
scas
jnp
mov
adc
pushf
adc
outsl
inc
add
cmpsb
mov
jo
jns
loope
adc
fildl
pop
insb
sbb
dec
pop
mov
fadds
mov
shlb
out
xchg
jp
pop
es
int
popa
les
aam
test
scas
int
sbb
shl
fs
mov
cltd
je
mov
add
js
fcompl
insb
into
push
mov
in
cs
pop
scas
aad
popf
aam
dec
rcrl
pop
out
mov
dec
in
test
inc
pop
sub
mov
or
pop
lds
or
ljmp
pop
in
or
loope
sbb
mov
and
adc
movb
imul
cltd
add
dec
cmc
add
inc
pop
imul
ds
pop
fmull
orl
or
sbb
add
add
sbb
xchg
pop
cmp
sahf
push
in
lea
hlt
sub
or
xchg
inc
in
pop
or
mov
daa
stc
js
pop
inc
mov
pusha
je
add
je
inc
mov
mov
mov
addb
inc
jno
daa
push
push
and
call
mov
add
hlt
inc
xchg
add
and
dec
add
shll
sbb
popa
sbb
jmp
add
mov
or
adc
mov
jns
xor
mov
jp
sbb
test
inc
aam
or
xor
add
inc
cmp
mov
and
mov
xlat
add
xor
cmp
dec
mov
in
push
cwtl
les
adc
test
cmp
popf
sbb
xlat
jo
mov
pushf
add
jge
adc
cs
add
ret
pop
dec
rolb
aad
push
fmuls
push
jge
xor
cld
inc
and
add
inc
jmp
xchg
add
shrb
lock
jns
test
cmc
jl
enter
xlat
cltd
dec
inc
mov
xor
je
adc
pop
adc
aam
cld
mov
push
mov
sbb
dec
inc
bound
jo
lcall
pop
nop
mov
sub
test
incb
data16
popa
loop
clc
xor
rorb
jp
pop
pop
push
popa
mov
mov
cmp
inc
adc
je
or
xchg
dec
cltd
mov
push
xor
das
fcomp
push
add
imul
xchg
stos
sub
mov
in
sub
leave
mov
sbb
and
xor
sbb
or
and
ret
pop
adc
jmp
and
sti
add
sub
loope
stc
lock
cmpsl
add
shl
loopne
in
inc
insl
pop
int3
fcomps
pushf
add
sub
stc
inc
clc
outsb
add
inc
out
nopl
fnstenv
clc
ret
pushf
xor
adc
test
mov
incl
fdivrp
fs
add
imul
mov
aaa
imul
in
insl
xor
sub
faddl
faddl
cmp
loop
in
xchg
pop
or
push
daa
sbb
lods
push
out
push
add
add
imul
inc
dec
xchg
sbb
dec
or
dec
push
add
mov
add
ja
dec
push
nop
mov
cmp
fcmovnu
add
push
subb
inc
imul
inc
add
sub
xchg
das
loopne
xlat
daa
mov
loopne
scas
jp
add
mov
outsb
pop
out
xchg
add
popa
into
adc
cs
adc
cmp
icebp
cmp
in
push
push
leave
cmpl
je
adc
dec
sarb
sub
cmpsl
pop
or
cmp
cwtl
inc
fs
es
gs
lcall
mov
and
clc
cmp
mov
test
fwait
mov
jge
add
jg
arpl
loopne
movb
dec
cmp
fs
daa
leave
mov
inc
js
jmp
in
mov
push
fstps
inc
cwtl
push
sub
cmpsl
fsts
movsl
or
push
push
aam
sub
int3
xor
imul
out
adc
adc
xchg
jp
xlat
xchg
imul
add
adc
aam
mov
pop
or
call
movsl
sar
fs
sub
addl
mull
repz
out
lods
fistps
jno
sub
popl
push
add
add
inc
rcrb
js
mov
call
nop
or
pop
hlt
enter
pusha
mov
lahf
in
jae
or
sub
adc
lcall
loope
sub
sahf
xor
push
rcrl
rorl
add
sbb
sar
mov
jo
out
add
cs
and
sub
outsl
les
jle
loopne
and
xchg
incb
lcall
mov
xor
nop
dec
push
add
jl
xchg
arpl
cmpsl
subl
das
sub
mov
sti
dec
int
inc
dec
pop
dec
mov
adc
dec
lock
mov
or
call
mov
or
inc
xlat
mov
sub
daa
subl
xor
fbstp
pusha
imul
mov
movsb
scas
and
cmpb
jge
xchg
inc
push
adc
mov
je
add
sbb
xor
xchg
and
sbb
ror
mov
insb
pop
and
add
push
or
in
orl
loop
loopne
mov
or
mov
sbb
lock
or
addr16
addb
and
sbb
adc
pushf
and
sbb
sub
cmc
adc
xchg
out
adc
pop
cmp
or
andl
mov
outsb
lods
aam
outsl
mov
sbb
dec
or
and
lahf
aam
ret
or
add
mov
or
or
add
out
sub
and
add
mov
push
fdiv
cmpsb
jl
push
or
adc
mov
sar
cmp
adc
jmp
repnz
testb
jne
insl
mov
and
dec
bound
and
add
sub
nop
add
add
test
call
add
enter
pop
pop
nop
mov
mov
adc
jp
and
mov
xchg
inc
dec
xor
js
adc
sub
pop
jp
adc
mov
add
dec
dec
adc
test
add
orl
repz
out
sbbl
loopne
push
test
push
out
fisubrl
pop
xchg
call
repnz
xor
jno
push
int
and
dec
mov
or
mov
or
arpl
fwait
sub
nop
jge
call
cld
ds
xchg
jne
sarl
lods
lret
nop
pusha
or
icebp
sbb
out
dec
arpl
mov
sbb
cs
int
sub
in
or
cld
lret
add
sbb
daa
mov
xchg
test
nop
or
fadds
out
sub
ret
pusha
add
test
inc
gs
iret
push
ffree
adc
pop
add
jle
add
pop
adc
addr16
xor
and
dec
in
mov
aaa
jae
repnz
and
dec
xchg
pusha
pusha
stos
jnp
add
jno
xchg
cmpsb
mov
mov
mov
repnz
add
sbb
inc
xchg
jns
add
dec
test
sbb
xor
pop
mov
fcomps
insb
cbtw
jo
or
sbbb
push
and
add
sub
adc
lahf
mov
adc
xor
movb
lcall
loope
cmp
pushf
inc
dec
inc
dec
adc
add
add
mov
stos
outsb
add
jae
out
addb
push
add
ss
mov
lock
push
jbe
xchg
clc
add
jg
sub
or
hlt
jg
add
aaa
cwtl
mov
leave
mulb
or
pushf
pop
scas
jae
adc
lods
add
push
push
mov
sbb
pop
xchg
addb
inc
dec
push
lock
or
mov
cwtl
sub
sub
insb
mov
imul
ret
int
cmc
mov
rolb
int3
push
mov
fs
shrb
xchg
mov
sbb
je
add
xchg
sub
nop
clc
rclb
add
out
rcrl
dec
push
rorb
hlt
inc
inc
pop
setbe
add
enter
inc
cwtl
add
adc
pop
mov
lock
push
mov
adc
rcrl
icebp
inc
out
push
stos
int3
mov
xor
rcrl
or
jge
add
add
data16
fsubs
add
sbb
cmc
cmp
mov
enter
inc
jg
adc
sub
leave
shrb
push
cmp
sub
inc
sbb
pop
or
pop
fdivrs
pop
mov
sub
fisubrl
and
xchg
xchg
dec
enter
bound
push
fdivrs
pop
imul
inc
lret
add
cwtl
mov
or
dec
or
xor
inc
mov
push
lcall
in
pop
xchg
std
in
jbe
push
leave
cld
add
out
cmp
xor
mov
push
arpl
cs
mov
movsb
loopne
dec
sub
ljmp
in
add
je
sub
pop
push
add
clc
mov
sbb
xchg
mov
int
arpl
jecxz
loopne
test
icebp
sbb
fnstenv
inc
and
in
jbe
les
imul
bound
das
sti
xchg
add
xor
out
xor
mov
mov
nop
mov
mov
sub
emms
push
cmc
sbb
clc
enter
out
jp
xchg
sbb
jg
cmp
addl
inc
cmpsb
adc
inc
pop
add
notl
push
sbb
cli
pusha
inc
imul
and
xchg
cmp
popa
mov
mov
shr
fucomp
add
cmpsb
out
jecxz
mov
sbb
adc
outsb
sbb
cmp
push
cmc
adc
nop
pop
inc
pop
add
sbb
push
fwait
out
and
inc
popf
mov
test
and
add
mov
fldl
inc
out
jg
xor
jl
cltd
add
andl
sarb
and
cs
add
xchg
add
clc
js
sub
add
push
sub
lret
cmp
xor
and
sbb
in
add
push
mov
sbb
int
outsb
ret
stos
jge
add
push
mov
jle
shlb
lret
fmuls
push
xchg
sahf
sbb
jle
xor
lret
xorl
add
inc
aam
sbb
and
pop
pushf
les
mov
and
jle
jns
repnz
jl
or
and
inc
inc
lahf
sub
pop
add
outsl
adcl
dec
add
push
mov
xchg
inc
dec
sbb
add
std
test
jo
in
add
xor
xor
insl
jle
in
add
mov
add
xchg
inc
ds
adc
sub
mov
push
stc
add
test
and
adc
push
push
aam
dec
into
insl
push
push
add
popf
mov
in
xor
pop
sbb
pop
adc
adc
dec
sbbb
add
mov
add
pop
mov
orl
or
push
fwait
subb
add
push
adc
iret
xchg
repz
sbb
and
pop
jg
sbb
mov
mov
pushf
add
jge
loope
mov
out
leave
cmc
ja
adc
pminsw
in
sub
insl
mov
jmp
and
clc
nop
pop
add
in
rcrb
test
add
insl
test
shrl
sbb
fdivrs
or
inc
repnz
xchg
or
and
pop
lock
mov
stc
call
adc
adc
adc
sbb
push
cli
inc
push
cmp
mov
popa
cmp
int3
ds
cltd
and
rclb
fdivl
cwtl
pop
add
nop
sbb
or
cmp
adc
adc
pushf
push
inc
lcall
outsb
pop
adc
hlt
mov
mov
adc
cmp
roll
mov
bound
clc
imul
rorl
push
sbb
mov
lock
mov
push
xchg
ret
add
mov
jg
sti
inc
mov
jne
mov
lock
ljmp
out
cmp
lods
shlb
aaa
inc
enter
cmpsl
js
push
sub
lea
sbb
fmull
add
roll
add
incb
mov
rclb
xor
dec
rorl
in
xchg
ljmp
sti
push
lods
sbbb
add
pop
into
add
inc
cmp
mov
push
leave
lcall
in
and
mov
add
and
jnp
aam
addr16
sub
into
pop
in
out
ljmp
push
bound
test
add
push
sub
jl
sbb
out
pop
or
add
mov
jge
xorl
fadds
xor
sub
movsb
inc
adc
inc
push
xlat
jl
movsb
enter
add
and
pop
jle
mov
sbb
add
sub
dec
pop
inc
add
mov
pusha
je
xchg
ds
incl
mov
pop
and
mov
addb
mov
pop
jns
xchg
push
ret
andb
mov
fs
xorb
mov
xorb
repnz
pop
std
fwait
sbb
cmp
es
add
test
pop
jl
sub
addps
mov
js
or
into
jmp
loopne
mov
notl
pusha
sbb
das
popl
add
mov
int3
inc
or
into
adc
arpl
add
aas
sti
cwtl
sub
sbb
and
mov
loope
sbb
cli
push
add
movsb
js
or
movsl
pop
or
dec
popa
add
xchg
test
dec
sub
dec
out
shll
pop
std
cli
daa
movsb
rolb
cld
add
loope
jne
in
xor
sub
sub
sbb
jb
sub
jo
mov
in
and
mov
shll
call
inc
add
sarb
and
jge
ljmp
xchg
out
xchg
and
or
ret
or
or
mov
push
ss
out
push
test
mov
add
lcall
push
push
sub
adc
mov
pop
dec
test
leave
cmp
popf
and
xchg
idivb
mov
xchg
mov
adc
or
js
mov
and
enter
addl
das
cmpl
nop
mov
aas
inc
outsb
jle
adc
cmp
xor
pop
inc
int3
cmp
push
cltd
sub
shll
jno
cmp
sbb
daa
repnz
roll
out
sub
iret
or
gs
xchg
sub
adc
outsb
out
fwait
bound
shll
pusha
int
mov
mov
add
dec
jae
mov
jle
xor
aas
inc
push
add
insl
pop
mov
addb
negl
adc
rcr
mov
adc
pop
insb
fistl
xchg
push
dec
jl
sbb
dec
and
aaa
add
jl
mov
dec
adcb
sbb
add
add
shlb
or
mov
push
fwait
jp
pushf
rorb
lcall
les
imul
mov
mov
jae
add
movsl
mov
xor
insb
add
add
ljmp
test
mov
push
in
inc
jmp
mov
in
sbb
jecxz
pop
inc
nop
aas
cmp
in
jno
sub
xchg
xor
pushf
adc
xchg
test
ds
cmc
xor
cwtl
mov
sbbb
sbb
mov
fstpt
push
adc
shll
pushf
jl
mov
push
or
or
inc
out
jl
cmpb
xchg
xchg
daa
insl
add
inc
xchg
in
xor
in
inc
mov
aam
jg
and
lock
mov
fldl
add
inc
mov
loopne
push
add
pop
and
adc
cwtl
add
cmp
out
mov
adc
nop
lock
adc
mov
rcl
ret
addr16
dec
add
inc
hlt
xorl
jg
test
repz
push
jnp
call
fstl
jae
and
xor
jb
dec
and
and
jns
cmp
sti
xchg
movsb
xchg
adc
add
out
sub
xchg
call
xor
push
and
mov
sbb
mov
movsb
jnp
dec
arpl
scas
psubsw
inc
mov
jp
mov
ret
xchg
dec
in
inc
inc
cltd
fcompl
cmp
cmpsb
loope
sbb
aad
fadds
add
adc
xlat
cmp
xchg
and
in
add
mov
xor
dec
adc
nop
jl
push
flds
push
addr16
push
ds
shll
test
add
cltd
push
jb
mov
repnz
in
jle
sub
cli
cmp
rol
add
in
xor
sbbl
xor
xor
cli
jb
js
add
lahf
loop
push
jmp
mov
or
dec
int
in
sbb
les
or
adc
xor
nop
mov
add
cmp
pop
mov
leave
inc
mov
and
sbb
cmpsl
jmp
push
or
add
push
shlb
cld
adc
int
bound
loop
inc
movsl
aam
lock
das
scas
iret
sbb
pop
push
ss
les
add
cmp
add
pusha
xor
pop
cs
and
and
filds
mov
mov
fldenv
arpl
pop
jmp
rcrb
add
push
adc
aam
in
pusha
pop
je
add
jmp
mov
jae
cltd
rolb
jbe,pn
mov
push
aaa
stc
add
sahf
aad
dec
pop
sti
push
xchg
add
xor
scas
in
test
sub
lcall
cmp
xor
icebp
aad
or
fwait
add
and
setle
push
sahf
push
dec
dec
cmc
inc
js
lds
xchg
incb
or
mov
int
xor
and
sub
mov
mov
pop
fsubrs
cmp
pushf
loopne
xchg
loop
in
bound
clc
lea
push
sarb
sahf
dec
addl
pop
xchg
xor
push
cmpsb
mov
lret
adc
rolb
xor
sub
add
sbb
sbb
daa
outsb
add
push
insl
and
rorl
and
inc
addl
jns
jae
in
sub
aam
mov
imul
lahf
push
mov
cmp
int3
jb
mov
pop
xchg
sub
xor
add
call
mov
aam
cmpsb
fs
mov
or
mov
adc
sbb
cmp
pusha
pop
xchg
in
and
fcmovb
add
nopl
pusha
or
clc
or
jle
xor
xchg
add
jns
iret
xor
adc
push
add
lods
pusha
xchg
call
jl
ret
inc
pop
addr16
push
lahf
inc
add
scas
push
dec
xchg
push
sbb
roll
mov
adc
out
jno
movsb
hlt
fs
and
adc
or
in
push
mov
mov
addr16
cwtl
loopne
sbb
test
dec
and
lahf
sub
or
and
pusha
pusha
in
add
pop
dec
mov
sarb
addb
je
sbb
imull
mov
inc
clc
popa
repz
xchg
and
imulb
and
shrb
repnz
mov
js
xchg
add
cmp
push
xor
xor
sub
call
add
lock
movsb
and
pop
mov
sbb
xchg
dec
shlb
mov
cmpsb
in
push
sub
pop
push
lock
rclb
cmc
test
clc
testb
ret
sar
gs
cmp
call
adc
mov
enter
inc
pop
dec
sub
or
daa
push
xor
add
push
add
dec
in
adc
jb
mov
push
cmp
cs
or
mov
popa
cwtl
int3
pop
insl
dec
adc
xor
xchg
in
adc
mov
add
nop
icebp
sbb
sbb
dec
mov
movl
add
push
and
mov
or
or
mov
arpl
fmuls
xchg
lcall
push
sub
add
ds
jno
jg
add
mov
mov
mov
or
inc
mov
nop
pop
ret
xchg
inc
enter
jp
movsl
sbb
adc
add
xor
adc
and
nop
push
push
pop
or
imul
les
jo
jb
push
aas
iret
xchg
mov
cmpsl
in
inc
adc
test
mov
pusha
nop
add
xor
test
and
mov
add
pop
xor
xor
scas
or
insl
cmp
mov
mov
xor
xor
pop
in
add
out
add
in
mov
mov
lods
lods
and
or
ds
dec
xor
or
mov
inc
dec
icebp
pushf
cmp
mov
xor
or
cmpsb
enter
xor
mov
outsl
lcall
add
aas
loop
icebp
adc
sub
in
push
addb
cmc
adc
sbbl
inc
jno
and
loope
xor
add
pop
in
push
ret
adc
or
add
mov
cmp
cltd
hlt
xchg
mov
adc
add
sbb
fs
leave
rolb
adc
imul
das
daa
add
mov
aas
pop
xor
sub
sarb
imul
rolb
in
inc
push
jne
mov
mov
mov
movl
mov
jl
aam
add
rcr
inc
cmp
inc
add
popa
imull
xchg
mov
dec
sbb
jae
adc
add
or
lock
jg
xchg
dec
in
aas
add
inc
enter
adc
bound
cmc
pop
and
xchg
cmp
sarl
jb
test
push
push
mov
add
mov
mov
in
adc
pusha
adc
in
sbb
sub
dec
sarb
inc
and
in
out
ja
or
add
cmpb
xchg
adc
sbb
xchg
test
nop
inc
mov
cld
add
roll
pop
je
movsb
dec
loopne
add
cmpsl
dec
jg
xchg
aaa
stos
cmp
push
mov
inc
int
loope
add
or
sti
inc
sub
aas
or
add
or
inc
inc
cmp
mov
std
pop
in
ds
sub
xchg
loopne
cltd
push
adc
sbb
mov
or
and
cld
fsubl
mov
lcall
and
inc
and
add
jp
dec
fwait
out
cmpsb
dec
clc
and
popl
or
sbb
xchg
push
fldt
or
popa
dec
insb
int3
lds
lods
add
push
pushf
xchg
xor
inc
inc
mov
add
add
js
and
jbe
roll
fs
adc
dec
add
test
bound
mov
pop
mov
dec
jecxz
jno
les
push
sti
stc
adc
aam
jae
dec
enter
lret
xor
fs
add
or
or
je
scas
out
jp
sbb
jb
test
in
add
push
shrb
mov
enter
lea
add
clc
xor
add
into
mov
arpl
psrlq
cwtl
push
sbb
or
cld
xor
mov
xchg
or
push
sahf
movsb
clc
add
outsl
insb
rorl
cld
and
push
push
push
adc
loop
add
cmp
fldenv
hlt
cmp
lods
sti
inc
cmp
subl
fists
out
mov
add
in
and
xchg
rorb
orl
xchg
gs
xlat
mov
mov
aas
dec
enter
or
mov
xor
iret
sbb
popf
sub
in
cwtl
add
fucomp
psraw
rclb
add
scas
fs
into
pop
ret
mov
or
movsb
mov
mov
out
add
fldl
sub
jg
inc
jne
push
push
add
insl
xor
pop
pop
jae
ror
out
push
jge
pop
sbb
xchg
clc
enter
mov
sahf
xchg
movsl
lds
insb
mov
add
scas
sbb
and
in
fs
and
pop
add
inc
and
shll
push
mov
hlt
pusha
add
fadd
dec
add
pop
jl
js
lea
aam
dec
dec
icebp
insb
les
adcl
or
popa
loopne
outsb
cmpsb
adc
cmp
dec
add
loopne
movsl
rcr
cmp
jmp
test
repz
jb
fstpl
es
xor
xchg
xchg
pop
xchg
or
lds
push
nop
sbb
add
adc
jnp
dec
add
in
xchg
sub
jmp
sbb
push
enter
inc
mov
je
adc
fidivs
or
inc
test
outsb
jg
mov
stc
pop
jmp
add
sub
cltd
push
adc
xchg
and
add
orb
jg
xchg
jl
and
lock
scas
pushf
xchg
adc
inc
xchg
pop
push
outsb
testl
sub
int
jb
lods
mov
sub
jl
and
push
imul
add
xor
mov
shl
mov
lock
or
pop
rol
mov
in
mov
add
add
xchg
loopne
inc
push
shlb
bnd
mov
inc
cmp
hlt
mov
jmp
std
popa
pusha
fmull
bound
pusha
fdivrs
inc
mov
insl
jno
push
mov
aam
dec
xchg
pop
xchg
mov
cmp
and
jl
sbb
xchg
jae
sub
xchg
pushf
fsts
andl
xchg
push
mov
adc
jecxz
push
pop
add
test
push
shrl
dec
xor
lcall
into
pop
lods
jb
les
push
add
sbb
jno
stc
sub
jg
add
cmp
fstl
inc
xchg
push
mov
imul
add
jb
movb
bound
out
test
add
aas
std
xchg
cmc
jbe
call
sahf
sbb
push
jp
add
push
add
outsl
jle
inc
and
aas
lds
lcall
mov
pop
xor
sub
dec
cmpsb
add
loopne
sahf
hlt
fwait
xchg
das
pop
sti
and
pop
mov
cmc
mov
adc
popl
jnp
cmp
das
jae
loopne
adc
popf
cmp
fldcw
negl
dec
pop
mov
cmp
mov
pop
adc
ljmp
leave
cmp
xorb
xor
inc
aas
lahf
sbb
pop
test
test
inc
in
icebp
add
add
fimull
xchg
add
in
adc
cli
mov
xchg
clc
or
insb
add
jae
js
push
push
adcl
dec
add
ss
xor
pop
ret
testl
jp
repz
in
pop
out
or
ds
loopne
rolb
mov
add
enter
sub
push
add
xchg
mov
pop
dec
add
stos
or
or
pop
outsb
dec
add
jb
out
sub
dec
stos
jecxz
add
jnp
loopne
cwtl
mov
gs
lods
add
lods
out
je
out
jo
and
pop
cmp
int3
imul
mul
sbb
push
cmp
ljmp
das
ror
out
loop
add
daa
es
popf
shr
in
xor
popf
inc
inc
cmp
and
xchg
push
mov
pop
icebp
push
jle
jl
cmpsl
jb
subl
leave
jno
add
xchg
idiv
add
sarl
mov
sti
inc
dec
fiaddl
insl
xchg
pop
push
cmpsl
adc
lods
aas
mov
int3
in
pop
and
cmp
adc
cmpsl
jecxz
test
sbb
pushf
inc
test
in
pop
pop
cmp
and
push
roll
stos
mov
out
loope
mov
into
clc
jbe
xchg
and
cmp
dec
out
rolb
in
push
push
xor
mov
stc
ret
or
enter
mov
xchg
nop
mov
aad
sbb
or
lret
and
faddl
xchg
lcall
cmc
inc
jmp
add
fwait
test
adc
mov
movsb
inc
aam
addb
into
or
jbe
sbb
mov
adc
js
nopl
pusha
orb
faddl
mov
fsubr
cld
fs
js
add
xor
rcrl
sub
fiaddl
in
pop
stos
dec
mov
cmp
and
xchg
test
push
cmp
inc
adc
outsb
jmp
push
and
shrl
sub
mov
adc
out
jg
add
stos
popf
fcmovb
adcl
add
add
xor
pop
mov
std
sbb
add
cld
jb
fidivl
lahf
xor
and
lods
xchg
push
jl
outsb
lock
sub
mov
adc
mov
add
les
testl
add
xor
sub
adc
in
pusha
add
mov
add
jmp
xor
orb
bound
shrb
inc
mov
leave
jae
lret
pop
or
enter
or
mov
mov
mov
push
xchg
lock
sbb
enter
xor
dec
cmp
int
cld
pop
sub
imul
jo
add
and
cmpsl
loop
out
testl
fisttpll
hlt
popa
ret
mov
cmp
aad
dec
xchg
pusha
sub
movups
xor
lea
push
jno
in
sbb
dec
sar
or
mov
imul
adc
cmpsb
ljmp
or
xchg
cli
jp
shlb
or
pop
mov
push
push
stc
nop
imul
xlat
sbb
lock
mov
cs
movsb
aad
adc
or
sbb
add
push
into
push
hlt
add
add
and
test
ja
add
sahf
add
pop
xchg
sub
insl
add
xchg
jno
rclb
sbb
fidivs
mov
rcl
shlb
pop
enter
add
iret
or
out
pop
nop
dec
add
push
mov
inc
sub
add
inc
lds
add
mov
adc
out
int3
aam
pop
pop
jl
and
push
xor
in
js
icebp
popa
repnz
rcrl
inc
cmp
push
lahf
jbe
cli
dec
adc
jmp
add
out
loopne
or
mov
popa
jle
imul
loopne
test
pop
inc
cwtl
sbb
xor
inc
cmpsb
mov
cmp
push
subb
in
or
xchg
hlt
stc
or
adc
call
pop
mov
xchg
add
sub
ret
pop
dec
sbb
les
mov
mov
rolb
push
lcall
sbbb
push
test
repz
lahf
jnp
cld
cmp
add
das
mov
add
sub
fldenv
mov
retw
cmpsb
add
js
lcall
pusha
adc
lock
sbb
xchg
xorl
leave
add
add
jno
and
dec
adc
add
push
pop
in
fadd
or
movsb
jo
ret
ret
pop
cmp
lds
movsl
pop
add
icebp
mov
enter
pop
dec
add
pop
xor
add
cld
fildl
cmp
daa
ret
and
insl
xor
jl
jae
push
cli
xchg
sarb
push
xchg
cmc
jbe
nop
and
xorl
popf
adcb
jl
int3
rcr
testb
cld
repz
aam
nop
xchg
repz
add
inc
fcomps
xor
nop
fsubs
adc
and
pop
loope
or
cli
in
out
std
sbb
cwtl
xchg
xor
sub
dec
aaa
add
ja
repnz
into
xchg
jo
add
adc
mov
ret
cwtl
mov
add
dec
jb
scas
je
add
inc
cmpl
jp
call
popf
call
add
adcb
xchg
mov
mov
push
xor
rolb
xchg
adc
js
mov
cmp
inc
jge
cmpsb
sbb
adc
sbbl
shll
add
pop
icebp
stc
lcall
adc
js
mov
dec
test
mov
push
js
sbb
push
lcall
cs
ljmp
inc
ja
pusha
mov
inc
xorl
add
js
add
sbb
sarl
push
les
sbb
jg
xchg
adc
and
lods
push
jmp
int
cmp
insb
cs
in
jl
sub
xor
flds
aas
pusha
xor
ljmp
push
or
sbb
xor
push
cmp
andb
sub
mov
fmull
push
push
sbbb
mov
add
push
mov
cmp
jmp
cmp
lods
xchg
cli
xor
jmp
sbb
xchg
movsl
and
iret
adc
jns
movsb
cmp
or
aad
xchg
lock
mov
mov
lahf
pop
nop
and
out
xor
push
fildll
xchg
mov
add
cwtl
shlb
daa
test
in
test
adcb
aas
and
pushf
idivb
nop
mov
push
jno
jp
dec
add
dec
push
pop
cltd
jb
pop
push
cmp
mov
xchg
icebp
mov
mov
inc
pop
push
xor
gs
add
les
xor
pushf
ljmp
aaa
mov
sahf
loop
push
add
inc
outsb
fstps
add
jl
jo
and
psubsb
mov
in
mov
insb
lret
pop
sub
addl
push
push
mov
add
push
add
js
dec
dec
and
cmp
add
push
in
jnp
mov
frstor
or
pop
push
fnstenv
push
mov
xorl
sub
xor
sahf
add
ljmp
add
pop
xor
outsb
dec
sbb
xor
jb
rcrb
fildll
orl
cli
push
push
cmc
sub
int
xchg
xor
jp
pop
dec
imul
inc
pop
sub
fiaddl
mov
imul
and
mov
ficoms
mov
addb
test
push
xor
aam
aas
xor
mov
xchg
cmp
pop
aas
push
test
xor
add
out
imul
sbb
rclb
nop
pop
lret
jb
and
jae
pusha
or
aaa
mov
add
out
jb
add
adcl
mov
jo
mov
mov
sub
cmpsl
in
mov
es
adc
cmp
adc
int
add
out
cmp
mov
add
jns
and
inc
test
cs
push
pop
add
cmp
out
adc
cmp
insl
cmpsb
add
out
adc
repz
shlb
sti
and
add
inc
fistpll
popa
fs
mov
push
sub
dec
mov
lcall
loopne
icebp
dec
lock
test
jo
sub
fwait
add
jmp
push
test
inc
inc
enter
int
xchg
add
in
sub
aam
add
ror
mov
jbe
add
sbb
xchg
add
stc
leave
mov
sbbl
xchg
add
movl
rcll
std
push
jae
mov
lret
mov
in
mov
int3
sbb
mov
cwtl
jns
popa
adc
push
outsl
dec
pushf
lods
xchg
cs
and
push
sbb
bound
lahf
loope
in
popa
push
push
arpl
and
stc
aas
addr16
inc
ljmp
lock
pop
push
fidivs
adc
jns
add
movaps
iret
pop
push
pop
call
mov
sub
mov
mov
xchg
stos
add
lock
pop
lds
adc
out
add
adc
neg
mov
test
sbb
cld
jno
sbb
push
and
loopne
xor
lock
incl
stc
add
js
clc
movsl
sub
cmp
or
test
mov
add
and
add
aam
jno
push
sub
enter
cltd
call
adc
hlt
out
add
or
mov
jae
inc
or
push
mov
mov
aas
shlb
int3
mov
inc
mov
ret
sub
pop
adc
add
and
xor
or
mov
cmpsl
stc
je
add
xchg
add
movsb
aas
jmp
jg
loope
pop
movsb
inc
push
mov
xchg
addl
jle
jg
pop
enter
xor
mov
inc
mov
int3
movsl
in
mov
push
aam
dec
nop
push
mov
add
adc
mov
cmp
jb
xchg
movsb
add
jnp
sbb
dec
frstor
fldenv
shlb
add
ret
scas
xchg
fwait
push
push
cltd
imul
in
out
std
dec
xor
inc
sub
les
adc
sbb
dec
mov
jbe
ja
adc
in
fwait
dec
add
into
lock
fisubrs
mov
and
out
jb
adc
ljmp
lds
rorb
inc
pop
sbb
loop
pop
fwait
shrl
push
sbb
out
add
leave
stos
add
out
sub
pop
push
pusha
pop
mov
inc
pop
xchg
cmpsl
andb
into
cltd
mov
adc
int
add
loope
inc
push
mov
jle
mov
jl
inc
xchg
lea
aas
into
sub
jno
pop
lret
mov
mov
les
add
mov
push
sub
inc
adc
or
lcall
xlat
cltd
mov
cmpsl
or
inc
and
add
or
add
xor
push
popf
inc
xchg
orl
cmp
repnz
jb
sbb
aas
pop
out
ror
call
push
daa
rorb
orb
jmp
cld
adcb
lea
lret
add
cmp
in
mov
sbb
sub
xchg
push
add
loope
mov
inc
cmp
add
push
lahf
push
fnstenv
dec
mov
fsubr
mov
mov
xchg
xchg
mov
das
sub
iret
cld
pop
and
add
xor
pusha
lahf
fld
push
lock
xchg
sub
mov
adc
in
dec
or
pop
pop
push
orb
inc
pop
insb
xor
inc
xor
and
sub
movsl
int3
test
pop
jl
pop
pop
push
push
inc
cld
lcall
and
mov
and
xor
aas
sbb
push
test
cmp
js
mov
sbb
int3
adcb
clc
or
or
fadds
cwtl
in
and
icebp
and
and
jno
fxam
add
and
mov
sahf
mov
push
sbb
cltd
insb
push
or
mov
clc
jno
cwtl
insl
push
imul
push
lcall
mov
dec
incb
cmc
loopne
pop
push
pop
fldcw
ds
lock
sub
or
push
pop
jae
outsb
jae
push
clc
adc
fdivs
add
jge
gs
cwtl
mov
ret
adc
add
cmc
xor
lock
lahf
xchg
shl
pusha
jbe
rol
mov
add
clc
xchg
test
or
xorb
xlat
sbb
mov
pop
jnp
repz
mov
cli
inc
or
or
push
sub
or
fwait
insl
sbb
enter
es
sbb
cltd
mov
out
push
icebp
add
mov
sub
pop
add
or
add
mov
inc
pop
insb
inc
cmp
rorl
mov
pop
dec
or
push
xrelease
sbbb
mov
mov
out
data16
test
jl
subb
ret
mov
lahf
cmp
xor
repnz
shlb
or
push
or
push
loop
mov
cmp
mov
jo
and
cs
hlt
or
in
daa
imul
cmp
imul
mov
inc
test
sbb
out
in
pop
push
and
je
pmulhuw
and
aaa
and
sbb
xchg
inc
bnd
push
pop
push
rclb
stc
sahf
leave
mov
adc
mov
stos
rcrl
in
adc
mov
dec
jp
outsb
notb
mov
add
and
in
mov
adc
jnp
pop
push
jae
data16
inc
cmpl
inc
or
aam
adc
sub
fnstcw
jmp
xchg
dec
mov
cs
dec
andl
inc
hlt
or
mov
mov
adc
sbb
leave
rol
add
lahf
rcrb
push
pop
cli
inc
or
je
push
test
lahf
or
and
lods
fcoms
jbe
clc
call
inc
or
inc
shll
enter
push
inc
sbb
push
mov
test
scas
inc
test
cmp
mov
xchg
data16
sbb
lret
pop
mov
inc
aad
push
je
xchg
mov
addl
xchg
and
add
jns
jno
scas
cmp
mov
jge
rolb
inc
push
ljmp
add
push
loopne
fwait
bound
mov
and
hlt
mov
ja
add
dec
daa
aad
or
std
sub
orl
xchg
cmp
jl
stc
addr16
sbb
test
out
test
or
pusha
adc
das
push
add
loop
push
lcall
fwait
push
push
sahf
mov
pop
popf
fxch
andl
es
and
ljmp
pop
adc
mov
pop
and
jecxz
xlat
mov
out
sbb
jle
add
into
pop
add
int3
ret
mov
pushf
orl
filds
iret
inc
push
popf
andl
xor
jle
mov
xor
sub
pop
add
iret
add
ret
xchg
pop
push
xor
mov
jmp
add
jle
lcall
mov
pusha
ret
dec
push
outsw
mov
cmp
pop
dec
inc
test
or
ljmp
add
clc
xchg
pop
fmull
setle
add
jbe
xchg
les
add
stc
je
xchg
std
sbbl
fiaddl
shlb
sbb
mov
add
fildl
cmp
dec
jae
mov
pop
subl
sbb
xchg
dec
inc
js
sub
stc
add
pusha
out
mov
outsl
out
daa
in
add
stos
adc
ret
stc
push
push
jecxz
sarb
repnz
add
cmp
inc
pushf
mov
push
xor
adc
fs
clc
cli
adc
add
lea
clc
add
shlb
gs
stos
negb
xor
xchg
pusha
adc
lret
jl
or
inc
out
and
sub
xor
sub
cwtl
add
lock
inc
call
repz
dec
push
cli
jb
in
and
or
pusha
add
fistpll
adc
sbb
ret
xor
orb
lods
adc
mov
jnp
add
mov
or
movsb
lock
or
pop
inc
rcll
mov
add
test
cmp
add
mov
jns
cli
rclb
push
add
push
lds
cmp
cld
add
mov
sub
ljmp
add
les
cmp
in
insb
sbb
xlat
andl
mov
xchg
ss
add
dec
xor
xchg
xor
add
push
cmp
push
scas
or
nop
or
sub
test
int
ljmp
lea
pop
inc
sbb
add
in
adc
test
sbb
jp
cvtps2pi
call
rclb
add
test
xchg
call
jo
add
jge
lock
leave
sbb
xlat
decl
xchg
jae
add
push
repz
dec
scas
mov
or
js
enter
add
iret
bound
adc
cltd
lret
pop
push
mov
xor
cmp
add
dec
or
lock
movsb
adc
fisttps
fildl
iret
sbb
xchg
jg
add
xchg
cmpsl
bound
lods
sub
adc
add
pop
add
inc
mov
in
xchg
imul
push
xchg
mov
ja
cwtl
add
sub
mov
pop
inc
daa
add
push
sarb
lea
mov
fneni(8087
roll
outsb
add
inc
mov
mov
fs
xchg
add
aad
mov
insb
rcll
mov
nop
stos
jg
mov
movsl
push
fs
mov
outsb
stos
adc
sbb
add
testl
dec
leave
pop
push
or
or
add
les
dec
add
adc
jo
cmp
jmp
aas
fnstsw
mov
into
lds
les
pop
cmpsl
mov
push
scas
mov
and
loop
push
add
inc
pop
pop
add
push
add
rclb
repz
cmp
insb
jle
addr16
add
stos
data16
push
mov
pop
rcrl
sub
jmp
cmp
shlb
das
cli
or
repz
mov
pop
hlt
test
xor
or
and
push
lret
lods
mov
pop
xchg
push
pop
mov
jns
nop
insb
add
push
in
aad
add
jns
test
add
scas
pop
hlt
movsl
mov
inc
dec
mov
insb
xorb
test
push
test
mov
add
inc
testl
add
stc
sahf
jecxz
jl
and
add
stos
mov
leave
add
inc
pop
xchg
insb
and
dec
adc
adc
xchg
pop
mov
call
pop
cli
add
shll
xorps
sbbl
mov
add
mov
mov
nop
push
xor
aaa
add
shlb
fbstp
pop
fdivl
lds
mov
lcall
fisubrs
mov
pusha
cltd
xor
cmc
add
mov
and
jl
sub
bound
ljmp
mov
mov
imull
dec
jmp
dec
pop
jbe
sti
xor
mov
pop
sbb
xchg
add
push
xor
pop
scas
push
test
loope
inc
aas
aaa
repnz
shll
inc
enter
jbe
nop
pop
jle
add
loope
adc
xchg
pop
sbb
jp
fstl
divb
mov
mov
in
pusha
movsl
js
sub
dec
lock
jo
loopne
push
notb
clc
dec
add
and
pop
clc
dec
hlt
imul
pop
pop
jge
sbb
sbb
push
mov
xor
mov
cmp
mov
add
gs
insl
pop
add
inc
andl
loopne
popa
ds
in
aad
mov
xchg
jg
test
inc
stc
sbb
mov
aam
ljmp
stc
xor
loop
inc
fcom
inc
push
jne
imull
in
arpl
test
in
es
pop
mov
xorl
sub
das
lret
sarb
dec
jne
add
add
sub
push
aad
verw
mov
dec
mov
add
jns
xchg
mov
lds
pop
lret
call
cmp
in
movsb
add
jp
sub
dec
scas
or
mov
pusha
sahf
mov
js
cmp
fsubs
or
push
sub
add
mov
ret
arpl
adc
stos
sarb
sahf
jae
xchg
test
hlt
stc
sbb
ss
or
call
scas
mov
cmp
jg
cmpsb
and
push
cmp
out
add
xor
mov
add
sub
call
mov
jne
push
scas
sbb
dec
in
popa
subl
jecxz
add
ja
adc
stos
xor
xor
add
push
adc
pop
sub
and
jns
jg
add
stc
pop
call
push
jge
push
mov
dec
adcb
mov
add
dec
jg
les
sub
lret
jno
add
out
in
divb
add
jmp
adc
mov
add
leave
lcall
and
pop
mov
xlat
mov
movsl
mov
subl
cs
adc
imulb
mov
xor
dec
lea
pop
pop
lret
jno
sahf
lock
push
jns
pop
into
lods
cmp
pop
mov
cli
mov
and
addr16
jne
inc
ljmp
ja
sahf
inc
sbb
sbb
icebp
and
and
gs
adc
movb
imul
sbb
push
cld
xchg
mov
insl
mov
pop
lods
loop
mov
push
sub
mov
add
push
cld
inc
mov
lsl
jo
mov
add
imul
les
addl
dec
dec
or
add
popa
mov
xchg
pop
add
dec
adc
sbb
lahf
sub
lods
sub
add
jne
or
push
leave
or
enter
jo
hlt
pop
xor
adc
mov
xchg
outsl
xor
jnp
and
or
test
jno
mov
add
stos
mov
add
dec
cli
out
cmp
add
fwait
std
pusha
push
sub
inc
and
cs
out
push
ds
mov
push
mov
push
in
mov
outsl
add
add
mov
shll
or
pusha
in
xor
xorb
sahf
cmp
xchg
cli
add
dec
jo
sbb
mov
cmp
les
stc
add
sub
and
popf
cld
push
test
scas
sbb
dec
cs
les
sbb
adc
loope
aas
add
mov
mov
push
jne
fcom
es
shrb
and
cmp
xchg
sbb
into
and
add
cwtl
cld
bound
dec
mov
das
and
or
in
jle
lahf
add
adc
adc
add
test
cmp
cmp
pop
movsl
ficompl
rolb
ds
mov
into
cmpsb
out
hlt
or
cwtl
mov
push
mov
imul
call
inc
into
inc
xchg
push
push
cld
bound
pop
aam
rol
repz
mov
dec
scas
stos
jo
mov
inc
xor
mov
cmp
pushf
ljmp
aam
and
loop
add
push
jg
pop
out
insb
sbb
fs
xchg
je
jbe
shlb
push
add
jl
adc
xchg
mov
aas
lret
negb
lock
jg
xchg
jge
cmc
and
mov
mov
push
sbb
repz
jnp
adc
loope
mov
xchg
jb
inc
xchg
pop
mov
lahf
adcb
mov
push
jb
cmpsl
add
adc
add
dec
pop
jmp
cltd
or
mov
pop
push
stc
loopne,pt
dec
mov
adc
xor
mov
mov
inc
add
jns
cmp
dec
dec
dec
dec
mov
out
cmc
lret
in
lods
add
inc
bound
adc
ss
adc
mulb
sub
mov
fisttpll
ss
add
enter
jb
in
xchg
add
jg
loopne
push
cs
or
shll
stos
add
sub
sbb
jns
pop
xchg
das
fdivs
fs
dec
xchg
mov
inc
imul
add
aam
hlt
push
xor
add
lock
pop
cmpsl
in
add
call
jg
hlt
insb
ljmp
push
cmp
sbb
push
xchg
fwait
add
jge
push
add
shr
cmpsb
xchg
mov
loopne
ja
out
pop
lock
cmp
popa
cltd
out
sub
cmc
inc
shrb
leave
aad
add
call
cmp
in
or
fdiv
add
xchg
sbb
inc
cmp
dec
icebp
mov
pop
and
inc
jl
testl
mov
mov
lret
emms
mov
in
add
icebp
adc
mov
jge
mov
mov
inc
mov
cmpsb
adc
push
mov
cmpsl
jecxz
or
insl
loopne
sbb
add
popa
sub
shll
pop
test
and
push
mov
mov
cmp
xor
scas
or
xchg
pop
sbb
jns
pand
rcrb
pushf
and
loop
dec
sbb
lret
cmp
jle
cmp
out
xchg
les
dec
pop
cmp
pop
xchg
xor
and
roll
lcall
ret
outsl
pop
iret
add
fs
int3
pop
add
and
dec
and
add
mov
xchg
bound
outsl
jb
fwait
add
loop
add
out
cmpsb
adc
adc
add
leave
insl
jmp
jb
mov
out
push
add
repnz
sbb
mov
add
mov
fsubr
fiadds
inc
dec
xor
fildll
out
rclb
ds
arpl
push
out
cmpsb
iret
mov
daa
fstpt
sbb
push
and
clc
or
mov
stc
add
in
ret
cmp
jle
mov
das
popf
jmp
fwait
clc
outsl
cmp
mov
sub
cmc
xchg
sbb
add
cmp
test
subb
push
push
inc
out
into
lock
jge
ret
mov
sbbb
pop
xor
shl
sub
and
cli
cmp
ret
xor
ret
pusha
repnz
pop
arpl
jns
test
dec
dec
inc
orb
add
lret
enter
adc
xlat
js
icebp
jns
push
add
cli
xchg
fldl
push
aas
scas
pusha
arpl
xor
icebp
add
outsl
insb
test
push
and
add
int
push
call
sbb
xlat
insb
mov
mov
mov
add
fdivs
cmp
inc
mov
and
rcrb
jmp
in
gs
pop
cmc
inc
dec
movsb
add
adc
push
sub
in
jb
add
ret
pop
xor
icebp
pop
cs
jo
sbb
and
aam
add
ja
dec
roll
outsb
es
lods
repnz
addr16
mov
rcrb
lock
add
jno
mov
aam
add
xchg
add
loop
lods
xchg
inc
inc
xor
jmp
sub
js
sbb
pop
bound
xchg
jecxz
fdivl
add
mov
lcall
js
test
sbb
dec
repnz
push
sub
push
and
sbb
dec
cmp
into
aaa
not
add
hlt
jl
add
inc
test
jmp
mov
out
in
mov
mov
push
xchg
xchg
lea
sub
push
and
or
hlt
sbb
pop
add
movsb
and
add
scas
das
or
loopne
jle
in
pop
cmpb
pop
sub
ja
pop
and
rclb
in
pop
xchg
test
jnp
aas
inc
or
dec
cmp
inc
push
stos
jmp
imull
pop
pusha
ret
mov
incl
push
mov
xchg
dec
mov
push
pop
or
xlat
cmp
lret
xchg
add
and
add
sbb
xchg
push
mov
cmc
mov
xchg
mov
ja
adc
les
lods
cmp
nop
add
pop
es
xchg
icebp
inc
scas
inc
lods
push
enter
sbb
aad
pop
xchg
or
lret
int3
arpl
int3
push
sbb
mov
xor
shll
push
clc
in
cmp
fadds
pop
sub
hlt
lea
stos
pop
add
movsb
loope
fistl
test
imull
cmp
mov
call
lret
int
pop
add
icebp
cmp
add
into
ret
pop
mov
xchg
repnz
inc
and
push
add
pop
pop
mov
jecxz
push
push
add
push
les
mov
xchg
pop
sbbl
cmp
add
sbb
ret
inc
test
or
push
pop
pushf
adc
arpl
lds
pop
jl
add
sub
cmpsl
pop
outsl
add
add
sub
int
loopne
bnd
add
push
pushf
push
and
inc
test
mov
ss
sbb
outsb
mov
sbb
add
mov
iret
pop
add
pop
mov
popf
in
fnstenv
clc
push
pop
jb
and
push
push
rclb
mov
jge
mov
ja
cmp
add
aad
pop
pushf
in
enter
inc
dec
jne
cwtl
cld
sysenter
rcll
cmp
adcb
addr16
add
repnz
ret
xlat
add
int3
movsl
cli
sbb
adc
fldenv
jno
test
aas
add
xor
inc
add
aas
pop
mov
sub
hlt
std
xchg
add
mov
pop
sbb
hlt
pop
jbe
push
mov
xchg
enter
add
movsl
rclb
mov
in
std
add
cmpsb
jnp
push
jo
call
daa
mov
jbe
out
and
cmpsb
js
inc
outsl
and
inc
loopne
add
call
fwait
sbb
and
mov
xchg
inc
add
add
dec
aaa
jns
sbb
push
mov
out
pop
adc
adcb
jle
add
cmp
cld
add
cli
lret
fstps
nop
add
lcall
aam
add
iret
sbb
push
push
xchg
and
dec
mov
xchg
add
out
mov
add
rcr
cld
sbb
sbb
xor
in
add
icebp
sub
pop
jl
add
test
mov
pop
lret
inc
xchg
xor
mov
ret
pop
stos
ret
cmp
and
nop
pop
cmp
lods
add
sbb
push
pop
push
insb
popf
xchg
inc
addb
lock
pop
add
iret
jmp
cmp
nop
test
lds
add
adc
and
mov
inc
add
sub
aad
enter
in
and
push
cmp
xor
shll
cmpsb
add
cmp
mov
xchg
add
aaa
pop
mul
addr16
add
inc
xchg
fmuls
mov
sbb
insb
cmc
cmp
add
gs
imul
jp
stos
popf
inc
jle
mov
gs
cmp
ret
lret
test
repnz
xor
mov
repnz
pop
xchg
lock
inc
add
inc
sub
pop
sub
sbb
imul
xor
add
movsb
cmpsb
mov
xor
negb
shlb
or
aam
xchg
and
adc
lahf
inc
and
or
lcall
mov
sub
add
sti
xchg
push
repz
add
ret
pop
mov
dec
arpl
rcl
negb
icebp
cmp
sub
add
pusha
ja
add
imul
add
imul
pusha
sbb
mov
add
lods
hlt
jle
aaa
sub
and
fmuls
arpl
pusha
push
cmp
fdivrl
popa
out
dec
xchg
add
repnz
rolb
lcall
adc
frstor
fsubs
adc
sub
cltd
lock
cmp
mov
rdmsr
pop
iret
pusha
pop
add
add
xchg
dec
and
cld
push
add
lods
jl
ret
mov
int3
push
sbb
stc
adc
pop
add
stos
mov
ja
sbb
repz
sarb
inc
lods
cmp
adc
insl
movsb
in
push
add
bound
outsb
push
sbb
and
pop
add
lahf
push
lcall
jo
movsl
cmc
and
jmp
mov
add
test
xchg
dec
in
pop
out
cmp
add
insl
jbe
inc
add
es
push
push
mov
xor
insb
sbb
inc
and
clc
and
jmp
xchg
fldenv
loopne
mov
add
sahf
int3
out
aas
or
je
andb
lock
cmp
ljmp
imul
push
ss
xchg
lods
fnstsw
sub
bswap
mov
pusha
scas
lcall
push
loopne
add
dec
mov
daa
jle
stos
add
jp
add
inc
push
sahf
mov
sub
inc
shlb
add
mov
lret
out
pop
cmpsl
add
dec
arpl
outsb
pusha
and
pushf
fwait
jb
scas
loop
xchg
mov
add
xor
push
lea
and
jl
jg
add
inc
add
sbb
lcall
jne
fcomi
mov
scas
jmp
lods
loope
push
xor
mov
mov
aad
mov
pop
dec
adc
add
in
or
lret
arpl
cmp
add
shl
ret
dec
test
xor
or
jno
add
int3
in
enter
jns
jae
ficompl
inc
bound
mov
das
add
dec
mov
jb
and
scas
mov
iret
mov
int
inc
stc
into
mov
sbb
xor
scas
subl
call
xchg
sbb
push
xchg
push
hlt
jno
mov
clc
out
sub
and
lea
dec
stc
outsb
test
jmp
add
xchg
aas
xor
jp
jl
arpl
subl
inc
mov
push
bound
hlt
loopne
cltd
mov
add
jge
push
sbb
roll
out
xor
or
add
lods
adc
mov
sbb
mov
xchg
xor
xchg
sub
test
adc
rcrb
or
mov
adc
stos
sbb
add
and
mov
cmpsl
leave
std
jp
add
repnz
dec
mov
dec
mov
mov
mov
inc
ja
or
out
adc
xor
sahf
aam
aaa
cmp
xor
loopne
iret
sub
mov
or
cmp
in
xchg
mov
add
movsl
rcrl
xor
jb
push
arpl
dec
iret
and
jl
pop
nop
pop
movsl
loope
data16
subl
rcr
js
add
aas
pop
push
add
repz
mov
sti
int
mov
lds
into
fidivrl
mov
cltd
pushf
mov
mov
cmc
arpl
sbb
adc
mov
cmp
xor
hlt
xor
jnp
adc
jo
push
add
in
push
sbb
jmp
repz
loopne
add
and
fnsave
add
bound
aaa
cmc
add
fbstp
nop
add
std
out
push
and
add
pop
incb
push
pop
adc
jns
lods
enter
stos
or
ret
add
test
add
push
xchg
add
insb
mov
out
adc
sbb
push
test
push
lret
das
pop
mov
movl
xorb
popf
add
mov
and
add
push
movsl
xor
mov
push
pop
jl
stos
add
mov
add
mov
dec
add
jb
mov
mov
sub
push
pop
testb
movl
add
repz
push
lret
loope
pop
int
aad
jo
out
mov
sbb
rorl
jl
out
inc
shrb
push
jne
push
or
ja
aas
mov
movsl
es
lods
popa
xor
xlat
addr16
inc
pop
outsl
inc
or
imul
sub
inc
mov
repz
cltd
dec
push
addr16
in
or
add
mov
jnp
lods
mov
cmp
movl
insl
clc
test
cwtl
push
add
add
out
sub
imul
addl
jge
inc
mov
mov
stos
push
sbb
xor
xchg
and
inc
shrl
bswap
out
jle
inc
popf
inc
unpcklps
test
add
push
dec
in
ror
daa
or
jmp
cmp
ffreep
adc
roll
pop
or
call
adc
out
jp
dec
cmc
test
adc
sarb
or
mov
aam
add
aas
cmc
xor
or
mov
les
or
addr16
dec
and
xor
loope
cmpl
lcall
adc
inc
repz
adc
pop
mov
das
add
adc
popa
add
push
mov
subb
stos
int3
js
outsb
ja
and
sub
rolb
je
rcll
in
pusha
je
jnp
add
mov
orb
sbb
cmp
ret
pusha
mov
sbb
jp
jp
ss
dec
xor
pop
jmp
cs
iret
cmp
inc
jno
mov
and
lea
orl
sbb
cwtl
movsl
rol
testb
in
pop
jecxz
out
jbe
rolb
cmp
dec
add
push
addr16
xchg
inc
cwtl
enter
xor
pop
das
add
rolb
push
data16
jne
divl
mov
and
fsts
movsl
sbb
pop
push
jmp
das
add
mov
push
int3
mov
add
push
xor
pop
pusha
sbb
scas
repz
inc
mov
out
push
rcrl
and
add
std
loop
nop
shl
aam
add
ljmp
jns
cmp
loop
lock
pop
dec
jg
arpl
pop
xchg
mov
mov
xor
jo
jno
ret
add
ss
xchg
xchg
nop
push
or
sbb
hlt
add
cs
in
cmp
add
cld
lods
add
jns
sub
jnp
into
push
xchg
push
pop
push
add
dec
pop
push
test
add
mov
and
out
movsb
push
xor
arpl
loopne
inc
add
pop
lea
int3
sub
daa
test
push
sbb
pop
dec
mov
xchg
adc
push
mov
and
leave
gs
fsubrs
call
pusha
xchg
inc
mov
and
push
movsb
sbbb
sub
xor
or
js
push
jns
add
jb
fisubrs
xchg
pop
pushf
hlt
dec
pop
es
cmp
icebp
mov
jne
fs
mov
ja
mov
mov
add
or
push
les
ja
enter
sbb
popf
mov
das
dec
sub
fsubs
jb
jp
sbb
mov
mull
test
add
push
loope
push
add
jae
sti
or
fsubrs
cmpb
pop
mov
mov
xchg
shlb
sti
mov
xchg
mov
test
add
imul
icebp
jnp
add
je
add
lret
mov
add
cmp
movsb
xchg
clc
fldt
push
inc
xlat
or
pop
in
aas
inc
sub
jmp
cmp
jo
cli
insl
aas
mov
sub
sub
roll
fbld
dec
hlt
add
cwtl
xchg
xchg
mov
jne
inc
jl
push
std
xor
mov
mov
adcl
pop
stc
lock
add
loop
sub
sub
add
jbe
or
add
xchg
xchg
loop
enter
dec
insb
popf
add
and
sti
pop
mov
pop
es
nop
lock
and
sbb
loopne
pop
testb
fidivs
adc
jae
fistpll
jo
icebp
sahf
and
aaa
fsubr
inc
pop
call
inc
adc
cli
cmp
push
cmpb
dec
add
test
imul
mov
jo
std
stc
rclb
sahf
add
fs
mov
enter
gs
lret
arpl
inc
pop
in
sub
adc
lods
add
push
cltd
leave
sub
jnp
mov
jp
nop
cmp
sbb
inc
test
dec
sbb
push
push
add
repz
pop
mov
xlat
aam
lods
sbb
ret
sar
xor
ds
ljmp
popf
pusha
sub
push
cmc
stos
lock
xor
xchg
pop
cmc
ret
mov
mov
repnz
or
adc
test
lods
inc
in
add
mov
shll
cmp
push
icebp
mov
mov
ret
mov
pop
fistpll
add
jmp
pushf
pop
sbbb
jno
pop
pop
adc
add
js
fwait
out
pop
push
mov
add
fldcw
adc
cmp
fadds
pop
push
lret
xchg
sub
mov
jl
mov
outsl
lea
or
xchg
imul
jle
push
nop
lret
loopne
add
push
in
cmp
add
loope
pop
insb
cmc
push
jp
dec
cs
inc
mov
pop
add
inc
push
jo
stos
sub
mov
in
push
std
in
push
mov
push
lcall
push
jmp
sbb
pop
lods
test
scas
sub
pop
es
ja
add
not
and
cmp
xor
add
or
and
sbb
or
in
add
out
sti
adc
pop
arpl
jl
out
ljmp
cld
jg
rol
js
pusha
add
mov
pop
and
or
dec
and
jmp
or
dec
add
addl
into
out
mov
pop
hlt
sbb
push
jns
mov
subb
mov
add
out
cmp
xlat
add
push
sub
mov
cmpsl
movsl
dec
das
stos
add
lods
cmp
aas
jp
movsb
aas
xchg
sbb
sti
add
adc
add
or
add
outsb
sbb
add
or
in
popl
xchg
jp
or
rclb
add
fsubs
aaa
dec
add
lods
and
push
nop
js
sbb
fs
push
mov
ds
outsb
cwtl
jb
xor
inc
leave
scas
sub
pop
add
daa
aam
orb
add
aaa
stos
outsl
mulb
sbb
fnstenv
gs
jecxz
xchg
dec
jmp
add
fwait
je
cmpl
sub
add
xchg
into
int
clc
push
xor
inc
sbb
mov
cmpsb
add
adc
fiadds
mov
mov
sbb
movsl
sbb
stos
add
sub
and
add
xchg
mov
scas
cs
add
loope
sbbl
fucomip
ret
add
mov
aas
jmp
cmc
int3
fwait
add
lret
add
mov
repnz
mov
andb
fsts
or
add
or
push
add
cltd
xor
add
cmp
add
test
push
in
add
cmp
fisttpll
inc
enter
add
mov
xor
and
lret
add
addr16
sub
int3
arpl
add
sbb
bound
mov
cmp
fwait
push
test
movsl
pop
or
jle
jecxz
pop
mov
imul
mov
cwtl
push
outsl
sbb
add
and
pop
dec
popl
mov
iret
pop
and
jno
and
sub
imul
jb
daa
fidivl
inc
push
mov
fs
insl
mov
les
mov
in
icebp
push
inc
inc
xor
push
adc
repnz
imul
add
mov
jle
in
cmpb
bound
or
pusha
sti
nop
and
xchg
cs
add
lods
lahf
fs
mov
insl
push
dec
scas
shlb
aas
jmp
lods
jns
inc
hlt
sti
testl
pop
inc
pusha
and
fnstcw
add
inc
adc
add
sub
push
mov
imul
dec
push
stc
add
cmpsb
push
fcmovne
push
in
add
out
xor
fstps
clc
dec
sbb
int
mov
or
out
enter
and
ss
test
fiadds
add
push
pop
push
inc
ret
mov
cmp
repz
adc
nop
or
cs
pop
lss
mov
dec
stos
pop
sar
sbb
mov
mov
test
mov
inc
repnz
sbb
cmp
lahf
xorl
jmp
sbb
insl
add
mov
sbb
add
or
fcompl
fsub
scas
inc
adc
inc
add
xchg
call
push
lds
fiaddl
jg
mov
or
dec
mov
fnstenv
pop
and
out
add
leave
adc
push
cld
jp
mov
inc
rclb
ret
ret
aam
xchg
or
shlb
mov
inc
sub
loopne
nop
test
xchg
xor
leave
push
in
ret
or
repz
cmpb
xchg
pop
jl
pop
add
mov
add
push
xor
sub
pop
xchg
test
jno
xchg
scas
cld
inc
push
jns
inc
add
out
pop
add
jp
mov
cs
pusha
lock
inc
adc
add
jns
sub
and
cmpsb
cs
push
repnz
pop
mov
addb
push
and
stc
add
mov
call
lret
or
jecxz
fdivrs
or
js
fiadds
addr16
addl
fsubr
lods
xchg
adc
lock
xchg
and
xor
xor
mov
add
iret
repz
mov
pusha
cli
test
mov
jmp
ljmp
mov
push
mov
cld
mov
fwait
push
dec
add
inc
or
add
cmp
and
xor
push
add
sub
jbe
dec
add
mov
push
or
loope
hlt
cmp
add
lds
xchg
insl
out
dec
jno
dec
cmp
fldl
cwtl
test
add
cmp
dec
add
pusha
les
loop
ds
push
rcll
fwait
lret
mov
lcall
or
add
jnp
ret
ds
mov
xchg
fimuls
add
jne
cld
add
pop
jns
sbb
mov
adc
dec
xor
outsb
sub
pop
mov
and
shr
push
fisubs
dec
shlb
dec
sub
mov
test
jo
lahf
add
and
push
add
imul
outsb
xorl
sub
in
inc
inc
push
paddsb
xchg
sub
cmc
add
cmpsl
js
or
add
popf
rcr
pop
sahf
sbb
pusha
add
pop
pop
dec
add
pop
shrl
adc
and
mov
lret
enter
mov
xchg
add
aam
mov
xchg
fmuls
dec
inc
nop
add
mov
lock
push
mov
sbb
int3
test
mov
popf
pop
or
add
leave
add
push
push
bound
icebp
into
xchg
test
cs
enter
push
or
test
daa
xchg
add
ja
inc
les
and
fisttpll
stos
dec
sahf
mov
mov
push
rolb
jne
sbb
cmp
rcrl
add
mov
or
test
cmc
sbb
xchg
jbe
outsl
lea
or
mov
pusha
mov
inc
mov
test
xchg
pop
inc
jnp
xorb
dec
pop
add
mov
and
fwait
aad
jnp
psllw
dec
sbb
ficoml
mov
jb
out
mov
mov
push
push
add
repz
pop
sbb
mov
mov
add
xchg
ljmp
popf
dec
ret
push
outsl
adc
push
in
rcrb
inc
popa
add
jnp
adc
ret
cmp
inc
sbb
aaa
sbb
imul
pop
push
test
mov
add
cmp
mov
movsb
ficoml
jb
pop
cs
xchg
cmp
movl
mov
jbe
add
add
pop
mov
sti
dec
test
inc
ja
xchg
ljmp
mov
xor
push
sbb
sbb
add
rorl
in
sbb
fdivs
nopl
rolb
fmul
jo
cltd
sbb
sub
fidivl
add
loope
test
incl
push
stos
push
dec
stos
andl
div
int3
pop
dec
cmp
cwtl
sti
add
out
loop
roll
lods
jle
cmc
ds
pop
or
stos
sahf
push
fimull
add
std
mov
in
adc
xchg
fiadds
out
push
mov
cmp
add
and
bound
and
mov
add
idivb
add
mov
or
mov
mov
push
outsb
cli
imul
outsb
push
es
sti
pop
sbb
xor
out
jns
add
jnp
add
add
jne
sub
mov
or
je
mov
jnp
add
fsubs
xor
and
test
push
or
sarb
cwtl
push
or
dec
loopne
aas
mov
pusha
gs
or
mov
add
movsl
pop
je
sbb
xor
mov
inc
mov
add
mov
mov
add
testl
insb
add
dec
in
add
pop
std
sub
daa
and
pop
inc
or
mov
add
mov
es
lcall
fldl
fidivs
mov
add
pop
push
dec
push
addr16
add
fbld
sbb
lods
test
shrb
or
xchg
subb
jge
sbb
in
xchg
stc
test
sbb
jl
je
add
push
aas
pop
imul
lds
aam
es
lret
xchg
lret
push
loopne
incl
enter
and
sbb
fmuls
lods
mov
sub
push
enter
push
dec
add
enter
mov
mov
sub
mov
shll
out
sbb
push
mov
inc
jns
sbb
mov
cmpsl
lea
fsubr
and
call
pop
cmp
sahf
add
dec
inc
inc
leave
call
or
mov
and
aam
or
scas
cmp
in
in
add
mov
int
or
jbe
sub
pop
jne
xor
stos
jo
dec
pop
roll
lret
int
push
cld
add
test
std
xchg
aaa
jo
js
sahf
std
mov
enter
ljmp
jl
orb
insl
aad
movsl
xchg
sub
and
insb
cltd
loope
add
das
leave
movl
push
adc
cmpsb
scas
lret
add
icebp
aaa
rcrb
arpl
push
insl
cmp
adc
jb
adc
ds
xor
add
adc
mov
ret
test
add
cmp
sar
inc
cmc
jl
mov
mov
call
stos
and
xor
jae
bound
and
inc
add
sub
add
jo
and
cmp
mov
mov
mov
mov
add
mov
pushf
andb
add
mov
or
sub
aam
sbb
cwtl
ret
or
add
xor
lret
xor
sub
xchg
test
movsb
imul
inc
sbb
popf
adc
test
add
push
rcl
jnp
sub
lcall
test
test
mov
inc
mov
icebp
add
cmp
dec
dec
jno
iret
adc
mov
add
ret
outsb
test
jns
paddb
sbbb
xor
nop
push
push
mov
fsubs
test
jge
push
push
pushf
aaa
or
push
imul
popf
rclb
mov
cld
lods
add
scas
pop
inc
mov
test
clc
cmp
cmp
je
adc
add
test
aaa
lods
dec
repnz
push
add
mov
in
loope
jb
add
sub
and
shr
or
lahf
or
aas
cs
jmp
dec
or
dec
cmpsl
pop
xor
pop
push
dec
sbb
inc
mov
dec
inc
add
push
inc
jg
js
mov
cmp
jle
pop
pop
jl
inc
jmp
ss
ds
add
add
sbb
add
push
and
add
mov
xlat
imul
or
in
or
fsubs
jae
jbe
or
sahf
lea
cmp
sbb
lret
push
or
cmp
lods
jmp
gs
jp
add
imul
ja
add
mov
rolb
add
jge
scas
js
add
lods
xchg
mov
roll
cwtl
iret
cmp
pop
mov
je
lahf
inc
or
int3
call
cmovo
sub
dec
add
add
test
test
bound
cmp
das
add
cli
push
add
orl
filds
cmc
ja
js
loop
test
in
jns
gs
adc
cmpb
mov
in
add
inc
sahf
sbb
data16
push
into
das
cwtl
jle
mov
out
add
pop
jge
jp
jecxz
int3
in
pushf
cmp
dec
adc
pop
jmp
lock
lea
mulb
daa
push
test
jnp
xor
andb
ret
mov
popa
pusha
cmp
sub
xor
xchg
add
inc
sub
jne
out
outsb
add
sub
roll
and
sbb
nop
mov
mov
mov
fdivr
add
xor
pop
jecxz
add
xchg
lea
jo
cmpsl
cltd
pusha
popf
dec
push
pcmpeqw
loop
lret
pop
inc
mov
icebp
addb
ljmp
cwtl
or
and
rol
xor
mov
imul
lea
mov
sbb
cli
push
jo
dec
js
sub
sub
adc
add
cli
shlb
xchg
pusha
and
push
adc
ss
cwtl
sbb
rorb
mov
cwtl
or
inc
mov
inc
popf
test
movl
addr16
jmp
iret
icebp
hlt
mov
mov
pusha
cmp
mov
mov
outsb
shll
mov
nop
push
xor
fwait
aas
in
stc
xor
mov
call
dec
xchg
add
push
in
mov
fiaddl
insb
dec
fstpl
sub
stos
scas
dec
xor
lret
roll
loop
sub
jg
sbb
in
idivl
jmp
and
jno
bnd
adc
sub
in
imul
mov
in
cmp
std
add
shrb
js
rclb
mov
idivl
sbb
or
pop
mov
mov
clc
scas
test
leave
adc
xor
add
push
or
sub
pop
adc
fimull
or
fdivr
test
lcall
inc
lock
or
enter
lea
sahf
shrb
cmpsl
and
stc
jl
jle
add
rclb
mov
mov
mov
mov
push
push
in
add
mov
mov
and
jb
jp
xchg
cmp
add
pop
push
push
add
jne
ljmp
stc
jp
pusha
sti
jo
add
fwait
cmc
xchg
bnd
in
setb
jecxz
mov
andps
mov
add
sbb
add
jg
mov
add
in
clc
add
mov
fwait
jb
cmp
arpl
or
add
mov
add
mov
inc
mov
int
adc
jae
shrb
cmpb
rcll
scas
jo
or
inc
xor
push
mov
jbe
test
add
mov
js
pavgb
lods
clc
popa
push
gs
cmpsb
pusha
dec
and
add
xchg
fdivl
mov
dec
add
add
add
and
mov
sub
and
bound
arpl
xchg
ja
cmpl
pop
jecxz
pop
sbb
ja
add
loopne
rdmsr
clc
mov
xor
push
jmp
dec
hlt
cmp
xchg
andb
pop
arpl
and
out
aam
cmc
shrl
mov
orl
mov
push
cmpsb
jmp
in
testb
inc
pop
pop
mov
jg
pop
jno
stos
inc
std
nop
mov
push
jmp
mov
fs
push
xchg
cmp
add
in
ja
cld
aas
jge
cmp
inc
mov
repnz
cmpsl
mov
outsb
add
push
lods
mov
pushf
push
outsl
arpl
pusha
mov
repz
je
add
and
xor
dec
into
push
inc
jle
invd
cli
shl
fidivrl
xlat
add
popf
loop
pop
mov
lcall
lret
fcomps
mov
sub
test
xchg
jl
add
rcll
push
or
add
clc
lret
push
jmp
cld
ss
lock
lret
sbb
test
jecxz
cwtl
xor
jo
xchg
nop
ljmp
sti
pop
and
push
incl
xor
nop
adc
scas
aas
rcrb
leave
pop
and
cmpsb
inc
mov
dec
or
loopne
ss
js
xor
jnp
push
or
fldcw
mov
mov
scas
and
inc
and
or
sbb
jne
add
repz
rorb
cmp
sti
adcb
mov
jg
in
add
daa
mov
adc
outsl
xchg
sub
imulb
loopne
lea
xchg
push
sar
adc
add
pop
roll
jo
jo
add
jmp
and
ljmp
add
push
mov
jb
add
insb
stos
lods
out
push
pop
add
call
pop
mov
test
int
fs
cmp
mov
adc
adc
ret
in
push
pop
outsb
adc
push
aad
mov
out
mov
inc
pop
inc
jecxz
xchg
mov
je
xlat
adc
cwtl
mov
inc
pop
push
outsl
das
pusha
loopne
or
or
jmp
icebp
inc
insb
or
fbstp
inc
enter
push
or
or
test
adc
lahf
out
cmp
lret
sub
sti
lock
sarb
scas
js
xadd
lret
xor
push
add
pop
dec
loop
pop
xor
lea
sub
add
fldenv
xchg
dec
adc
xor
enter
popa
pop
out
cmp
sbb
addl
jg
jo
adc
sub
mov
dec
fwait
xlat
lock
or
gs
jno
add
xchg
dec
test
call
bound
jmp
dec
jb
js
int
pop
fmuls
xor
push
pop
fwait
dec
outsl
jnp
mov
imul
add
je
adcb
test
xchg
fists
mov
mov
xchg
shll
jecxz
mov
sbb
add
je
push
icebp
dec
rolb
stos
mov
or
mov
sbb
jg
add
fcmove
add
inc
pop
xlat
sbb
mov
loop
pop
or
add
pop
cmp
jne
or
dec
mov
aam
cltd
mov
shl
scas
hlt
add
and
inc
push
sbbb
outsb
xchg
scas
sbb
pop
cmp
or
jle
cli
cmp
aad
in
imul
lcall
jno
fstp
insw
jge
lock
and
fs
pop
add
out
xchg
sub
mov
cmp
jg
mov
repnz
add
testl
mov
jns
xchg
or
add
test
insl
cmp
pushl
push
or
or
mov
xor
add
gs
mov
mov
data16
inc
adc
add
mov
lret
add
mov
fstpl
aam
popa
pop
nop
push
daa
shll
mov
and
add
mov
pop
jb
icebp
cmpb
add
jns
cmp
pushaw
and
add
pop
ret
enter
sbb
or
rolb
enter
jnp
ljmp
sbb
movsl
loopne
mov
add
pop
ljmp
cwtl
jb
loop
adc
push
andb
adc
je
in
mov
mov
add
push
sbb
rorl
ret
in
ss
add
push
lret
pop
or
add
pop
fwait
mov
adc
add
jnp
rep
fs
hlt
and
jl
push
popa
jno
inc
shrb
mov
hlt
xor
cli
fadds
fcompl
sarl
leave
insb
test
arpl
out
lock
push
imul
out
and
xchg
mov
outsb
push
add
insl
pop
cmp
sub
cwtl
pop
add
mov
dec
fcoms
pop
aam
in
call
or
dec
xchg
int3
ficompl
inc
rcrb
mov
mov
cmc
subb
sub
out
xchg
sub
push
enter
push
stc
jecxz
std
fwait
add
sti
outsl
rcll
mov
sti
pop
jae
imul
popa
jbe
cld
add
int3
xor
in
jo
dec
je
out
add
jo
xchg
add
mov
ja
pop
sbb
lcall
pop
repz
mov
dec
mov
cli
pop
icebp
inc
cmpsb
add
fiadds
add
scas
adc
mov
push
mov
xor
hlt
int3
fldenv
add
mov
lds
push
xchg
xchg
add
ds
ss
je
mov
call
push
jbe
enter
out
pop
xor
mov
add
jecxz
sahf
jl
add
xchg
addb
add
pushf
icebp
sbb
out
into
push
push
xor
insl
leave
mov
xor
xor
test
mov
aaa
and
add
xchg
add
adc
push
cmp
add
loope
cli
cs
xor
xchg
fidivrs
mov
add
fists
arpl
add
push
mov
das
test
add
add
push
lock
xorb
mov
mov
sub
scas
inc
rorl
sub
dec
aaa
int
pop
loopne
call
mov
inc
rorb
sbb
rclb
jno
flds
test
fildll
pop
nop
clc
adc
dec
out
adc
or
mov
aam
rcrl
lods
sti
push
in
mov
int
shlb
stc
sub
fidivrs
xchg
cmpsb
ss
ret
mov
add
sbb
out
leave
add
fsubl
fwait
add
scas
add
dec
sub
add
rorl
push
pop
rclb
sbb
sbb
iret
fistpl
pop
push
test
adc
mov
mov
ja
sbb
sbb
xor
mov
rolb
addl
mov
pop
addr16
loope
or
add
pushf
iret
idivl
loopne
push
add
aas
pop
in
mov
aad
add
dec
cmpb
incl
jp
ficoml
sbb
add
repnz
inc
movsb
test
test
sbb
outsb
cmc
stos
mov
add
dec
popf
enter
push
jp
cwtl
mov
movsb
mov
gs
or
lret
std
xchg
call
jns
xor
in
and
push
adcb
int
sti
xor
outsb
add
push
sub
adc
lcall
mov
sub
ljmp
jl
add
hlt
dec
incl
rcll
sub
imul
add
hlt
inc
and
clc
add
lock
js
lahf
add
push
pop
push
fnstenv
jge
push
inc
mov
jne
ljmp
sbb
adc
pusha
cmp
jno
and
imul
pop
lcall
pushf
add
out
pop
sbb
add
adc
ds
pop
rorl
test
lcall
mov
loopne
jle
leave
mov
loope
stc
inc
ja
jmp
lods
pop
cmp
fld
dec
add
ret
mov
aad
arpl
cmp
shll
clc
push
add
pop
lock
fstl
push
in
inc
mov
and
xor
jmp
loop
popa
and
mov
pop
sbb
aas
add
add
mov
insb
int
pop
ds
mov
subl
add
add
rorl
or
test
setbe
std
xchg
clc
pop
adc
pop
rolb
je
xchg
call
scas
clc
cmc
iret
insl
shll
and
add
sbb
xor
mov
push
inc
loope
sbb
push
pop
movl
add
push
stc
je
and
mov
add
dec
idivl
jo
add
xchg
test
out
test
cmpsb
adc
adc
ret
ja
add
outsl
pop
jne
push
pop
push
fisttpl
subb
pusha
jecxz
push
sahf
sub
pop
repnz
add
mov
sub
adc
ret
add
ja
jge
jl
je
add
or
jo
addl
dec
mov
scas
or
xchg
lock
add
leave
inc
stc
adc
xor
mov
cmpsb
cmp
jmp
mov
mov
es
jnp
cli
cmp
pop
and
in
out
mov
pop
pusha
inc
adc
or
movsl
sbb
into
sbb
xor
pop
js
dec
sbb
enter
je
add
inc
jb
pop
sub
dec
jnp
movsl
shlb
jne
pop
cs
adc
fdivrs
dec
sti
mov
int
and
inc
sub
add
pop
cmp
jl
decl
outsb
inc
push
mov
js
sbb
push
add
or
aaa
addb
loope
popf
add
lods
lock
cmp
or
mov
lods
or
call
sub
mov
mov
jl
fs
lcall
add
sub
push
mov
movsl
inc
aad
pop
jnp
push
add
add
fcmovnb
mov
pop
mov
incl
cli
leave
push
push
adc
and
add
add
das
push
lahf
cli
lret
cmp
add
sarl
adc
xchg
push
pop
daa
jae
cwtl
cmpsl
push
sbb
mov
add
gs
mov
push
cmp
and
and
dec
pop
add
jno
sbb
enter
lret
xor
add
and
add
xor
jb
add
jne
mov
es
add
call
dec
rorl
sbb
enter
aas
lret
popf
das
ret
lods
stos
cmp
jecxz
mov
test
stc
ret
cltd
mov
js
iret
xchg
adc
push
jl
mov
xor
jb
dec
add
add
pusha
fidivs
js
out
add
movsl
mov
pop
add
mov
and
mov
call
adc
je
testb
or
and
add
enter
movsl
je
add
push
enter
jg
arpl
jbe
in
sbb
daa
into
and
and
and
addb
scas
add
or
mov
add
or
fs
add
fldenv
cmp
outsb
arpl
and
leave
cmpsb
add
mov
cmp
cmp
add
inc
lock
fidivs
or
adc
aaa
pop
pop
sbb
out
add
xchg
add
mov
daa
cmp
jb
imul
cmpb
sti
andb
add
les
add
push
cmpl
dec
add
les
hlt
mov
cwtl
add
out
stos
mov
andb
add
stos
rcrb
mov
fldt
mov
fadds
sub
and
cmp
sbb
xchg
outsl
add
in
add
or
sub
adc
movsb
es
pusha
jbe
movsl
push
daa
mov
adc
inc
mov
add
push
hlt
mov
dec
sar
add
lock
add
rorb
movb
arpl
negl
push
test
push
lcall
pop
push
add
imul
aam
das
add
jg
and
ja
pusha
add
mov
in
add
mov
xor
pop
pushf
mov
add
xor
ljmp
sarb
adc
shlb
mov
lock
pop
mov
jns
incb
into
cmp
lahf
jne
jo
inc
idivl
cmp
mov
or
inc
inc
mov
add
and
cmp
xchg
xlat
mov
testl
add
cli
mov
mov
inc
shrb
jb
cmp
adc
aaa
mov
shll
lds
jo
or
push
faddl
pop
cwtl
notl
outsl
xchg
add
inc
inc
fidivrs
dec
mov
in
xchg
add
inc
or
cmp
dec
or
pop
or
dec
fisubs
add
lods
repz
add
pop
cmp
pop
mov
stos
pushf
fimuls
xchg
add
aam
adc
push
mov
adc
add
movsb
add
mov
outsb
jns
pop
int3
mov
repnz
lret
mov
lock
mov
in
insl
bsr
push
pop
out
push
cltd
fildl
sub
mov
movsb
or
daa
push
ja
add
mov
push
push
jae
in
xor
xchg
data16
outsl
xchg
cli
sti
scas
sbbb
sbbl
mov
add
cld
enter
push
ljmp
push
sbb
mov
iret
add
jmp
cld
add
xchg
orl
mov
sarb
cmpsb
pop
mov
add
inc
jb
pop
rclb
pop
aaa
lds
aas
sarb
ds
in
adc
dec
mov
into
or
xchg
stos
pop
dec
xor
pusha
std
dec
jae
add
scas
add
lods
enter
pop
push
jo
jne
pop
jmp
cli
jno
rorb
cmp
jb
add
call
jecxz
xchg
popf
in
push
mov
fstps
lds
cwtl
fs
pop
add
cmc
fcomip
add
lgs
mov
mov
call
pop
rolb
in
push
icebp
shrl
outsb
mov
addr16
jl
pop
cmp
lock
sbb
sbb
fdivrl
mov
xor
push
mov
adc
jae
pop
cmc
insb
cltd
adcb
in
pop
mov
test
mov
sarb
daa
add
adc
gs
adc
enter
fstps
cli
in
faddp
je
inc
mov
jp
mov
out
mov
shl
add
sub
inc
adcb
xor
cmpl
jo
pop
int
or
sarl
incb
add
call
push
inc
push
sub
add
mov
dec
mov
cmp
cmp
xchg
jmp
stos
mov
flds
ret
or
jge
add
clc
add
sub
rolb
push
add
xchg
in
pop
filds
and
pushl
push
push
inc
sub
in
cwtl
loope
cmp
push
add
ror
lcall
ja
or
arpl
and
ret
xchg
jne
into
push
and
mov
xor
xchg
or
je
jbe
sub
add
sub
dec
inc
mov
out
sete
icebp
xchg
push
ja
pop
scas
ret
adc
adc
inc
orb
fiaddl
imul
cli
jle
mov
xor
xchg
outsb
jo
push
and
xchg
add
repz
sbb
mov
sbb
leave
mov
inc
sub
cmc
rolb
dec
adc
cmpsb
xor
sbbb
sbb
dec
dec
ljmp
jb
or
xchg
inc
inc
cmp
add
js
stos
mov
jae
add
lcall
add
xchg
subb
inc
adc
cmpsl
mov
xchg
push
into
push
das
mov
cmp
test
mov
ds
add
mov
xchg
lods
std
shr
push
xlat
bound
movaps
cmp
imul
xor
mov
imul
loopne
mov
add
ja
scas
add
mov
sbb
adc
add
fstp
fidivl
scas
or
rolb
mov
stc
cld
xor
aad
mov
test
jmp
loopne
mov
hlt
inc
pop
cmp
arpl
adc
sbb
movsb
add
xchg
xor
jae
pushw
leave
cmpsb
push
cmp
ror
mov
dec
jo
in
fisttps
sbb
jo
pop
stos
dec
push
and
push
xor
fdivl
cmp
cmp
lods
fisubrl
lock
js
add
sti
jb
mov
in
aaa
cmp
mov
loopne
out
push
ds
in
lahf
repnz
adcb
pop
mov
pop
fsubs
sbb
pop
cltd
inc
arpl
pusha
in
adc
mov
scas
add
sub
loopne
inc
add
mov
pusha
call
xchg
imul
aas
arpl
stos
push
mov
shll
mov
add
mov
pop
sbb
stc
fiaddl
sahf
int3
add
mov
rolb
sbb
mov
pop
lahf
mov
adcl
adc
sub
sbb
add
fsubs
and
add
fiaddl
hlt
push
xchg
dec
dec
push
sub
pop
and
add
mov
fs
add
adc
rclb
mov
inc
adc
lcall
lea
out
jb
test
add
es
shll
cmp
mov
push
movsl
add
jecxz
nop
dec
ret
aas
add
fsubl
js
leave
xor
add
mov
pusha
jmp
daa
lea
adcb
idivb
adc
lds
jo
pop
roll
cmp
mov
add
push
sarb
pop
dec
pop
add
es
clc
outsl
add
pop
or
adc
add
xchg
sub
jl
stc
mov
orl
pop
in
pusha
jle
in
mov
add
dec
push
sbb
jno
cmp
scas
shlb
sbb
and
hlt
jp
es
sahf
add
sbbb
in
into
stc
fisubs
fcmovne
push
pusha
add
add
mov
je
push
push
lods
pop
xchg
mov
adc
adc
fcmovnb
or
push
addr16
lcall
add
mov
clc
int3
or
stos
imul
popa
pop
lds
cmp
cld
cmp
pop
adc
pop
out
add
fbld
sbb
pop
cmpsb
cmc
add
cli
add
add
push
dec
cwtl
js
add
stc
std
lock
shrb
add
cmp
leave
lfs
mov
inc
ljmp
add
lds
lock
mov
pop
cli
call
jae
in
mov
inc
je
lods
add
fs
xor
pop
dec
cmpsb
add
sbb
add
in
insb
bound
and
mov
jnp
push
jl
lock
jo
nop
and
je
pop
add
roll
ds
subb
dec
and
cld
mov
cmp
sub
loop
clc
pusha
lret
add
call
mov
add
mov
movsb
add
xchg
lock
adc
sub
inc
sub
add
mov
cmp
mov
orb
pop
movb
add
jl
add
push
enter
pop
xor
js
mov
cld
movsl
imul
roll
imul
ljmp
inc
cmp
popf
lods
xchg
add
insb
filds
fsts
sahf
add
push
mov
cs
inc
xchg
test
fs
imul
test
sub
pushf
ja
iret
lret
adc
sbb
add
les
lahf
mov
xor
mov
bound
cmp
or
push
add
mov
andb
jle
in
sub
push
cmp
xchg
enter
aas
dec
and
out
test
sbbl
xchg
loop
loope
mov
mov
or
outsb
cmp
cmp
dec
sub
int3
add
sbb
loope
add
lods
xchg
les
pop
xchg
add
xlat
add
gs
icebp
xchg
dec
imul
sahf
adcb
leave
test
rorb
lret
fnsave
into
add
lock
imul
dec
sbb
mov
push
push
or
xchg
ret
data16
fdivrs
adc
push
adc
mov
loopne
push
add
sti
pop
adc
pop
dec
icebp
stos
add
or
into
ficomps
test
dec
ds
icebp
push
push
mov
jge
inc
xor
add
add
add
aam
push
sbb
insl
sbb
sbb
mov
xchg
popa
fisttpl
mov
mov
cmp
add
sbb
push
mov
inc
cwtl
xor
lods
aaa
dec
mov
mov
add
ret
mov
push
stc
sbb
jmp
lahf
popf
xor
lret
xorb
gs
mov
fcomps
cs
sarb
add
mov
pusha
fmull
das
sbb
repz
xchg
push
fwait
shll
jecxz
push
loopne
cs
std
movsb
mov
add
cld
testl
fldenv
push
pop
add
or
add
std
dec
inc
add
mov
inc
out
xor
mov
fmuls
add
nop
xchg
int3
add
fdivrl
add
repz
push
lods
movsb
or
cmp
push
sbb
in
push
lods
sub
pusha
xchg
mov
arpl
js
mov
and
jnp
out
dec
push
into
lea
stos
add
and
and
pop
push
cwtl
pop
add
adc
push
add
fdivrl
sub
xchg
push
add
int
adc
in
add
fstpl
jo
push
add
shrb
fmull
cmp
in
imul
mov
test
es
lods
xchg
les
scas
in
cld
or
insb
push
inc
add
loope,pn
mov
add
in
cld
add
adc
sub
lock
add
mov
mov
je
push
mov
rorb
pop
out
repnz
inc
mov
mov
xchg
push
in
pop
insl
inc
pop
das
add
or
nop
pop
mov
pusha
jno
in
xor
in
mov
dec
jnp
insb
fnstcw
jbe
mov
clc
cmp
add
fsts
sbb
push
popa
out
adc
jbe
sbb
out
mov
or
mov
lock
add
xchg
pop
add
add
mov
cmp
lock
aam
js
pop
pop
sbb
ja
add
xor
mov
mov
push
push
sti
cmp
popa
iret
cmp
cmp
lock
push
hlt
or
cmp
inc
xor
js
add
fistps
adc
xor
add
js
iret
stos
test
in
shlb
mov
or
add
jl
test
inc
mov
dec
add
mov
jno
add
je
mov
sti
xchg
push
and
in
int
into
adc
ljmp
fwait
daa
pusha
mov
cmp
sub
imul
in
push
fcomps
sbb
and
dec
roll
xor
add
add
test
xor
add
pushf
call
lock
ja
pop
cmp
clc
sbb
fstpt
add
push
stos
cmp
pop
xlat
dec
sbb
inc
pop
test
add
test
xchg
xor
or
mov
jbe
cwtl
sbb
pop
stos
ret
add
pop
inc
inc
xor
mov
imul
fdivl
in
pop
push
bound
fwait
or
push
add
int3
mov
push
mov
sbb
mov
in
fisubrl
pop
lcall
outsl
add
xchg
jmp
push
inc
push
fwait
pop
and
addr16
add
mov
pop
popf
aad
add
bound
scas
add
popl
cmp
sbb
mov
xchg
mov
and
add
cs
cmp
add
loopne
fwait
aas
mov
add
pop
loop
popa
addb
sbb
xchg
cld
loopne
dec
add
repz
arpl
cmp
add
pop
icebp
addl
inc
mov
in
and
inc
test
scas
ja
push
out
pop
cli
mov
jecxz
add
inc
fs
pop
hlt
iret
add
add
shlb
fnstenv
and
and
fistpl
add
dec
addps
test
and
xor
cs
out
cmp
loope
imul
leave
lods
inc
pop
pushf
std
das
mov
dec
mov
sbb
adc
test
and
jae
mov
sub
daa
dec
pushf
pusha
mov
cmp
sbb
insl
add
mov
inc
sub
add
ret
inc
and
pop
sbb
mov
lods
leave
test
insl
lar
test
xor
in
pop
rclb
mov
fiaddl
or
push
adcb
inc
shlb
pop
nop
cld
dec
cltd
cmpsl
add
arpl
add
push
in
jb
ja
xchg
rolb
das
mov
mov
cmp
hlt
sub
add
outsb
in
mov
dec
xchg
lcall
dec
leave
sub
cmpsl
add
lock
dec
cmp
mov
adc
dec
mov
out
cmp
mov
lea
push
add
add
dec
fnsave
jmp
test
jno
or
pop
test
jo
and
mov
insb
popl
sub
pusha
mov
adc
jle
dec
add
adc
xlat
mov
insl
mov
mov
xchg
fs
push
sub
mov
mov
rol
push
pop
dec
popa
rcr
inc
ss
mov
jp
adc
push
xlat
pop
icebp
mov
xchg
cmp
mov
xor
mov
ds
sub
insb
add
mov
popf
scas
pusha
js
leave
or
sub
andb
mov
xchg
add
sbb
sub
cmp
mov
mov
stos
divl
pop
mov
push
insl
xchg
jnp
add
mov
xor
xchg
repnz
pop
js
cltd
add
fstps
add
cmp
add
jnp
add
sbb
jno
enter
addb
mov
stc
push
or
sbb
jo
insb
cmpb
movsl
pusha
push
insl
adc
ds
test
pop
add
push
sub
sub
inc
and
hlt
cmpsl
mulb
mov
add
and
add
repnz
xor
xchg
out
cwtl
loopne
aam
inc
add
mov
std
xor
outsb
push
pop
out
mov
ret
lret
imul
sub
add
pop
mov
std
andb
inc
lods
mov
jb
pop
pop
lock
insb
dec
outsl
inc
dec
pop
mov
dec
inc
add
adc
outsb
ret
jae
faddl
out
test
xchg
mov
cld
sbb
icebp
fdiv
or
int3
pop
ret
je
add
into
clc
enter
jns
pop
add
nop
fldt
push
xor
inc
jle
add
jno
lds
mov
xor
or
bound
pop
lods
mov
add
sbb
jmp
pop
xor
jg
sub
pop
add
mov
cltd
jp
cmp
lea
stc
fcompl
xor
jl
sahf
xor
sub
jle
add
cmp
pusha
cmp
sti
add
adc
add
pop
andb
sub
jbe
aam
inc
cmp
dec
das
in
xor
dec
jp
mov
rorl
pop
aam
inc
cmp
rcl
imul
ucomiss
orb
dec
cli
mov
adcl
push
imul
add
popa
fstpt
fbstp
sbb
xchg
sbb
push
add
loopne
mov
add
sbb
mov
add
test
or
and
in
pop
and
add
aad
mov
pusha
hlt
sbb
add
sub
pusha
jns
decl
adc
pop
push
rclb
js
int3
fs
cs
mov
add
cltd
cmp
lock
add
mov
in
div
add
xlat
fiaddl
jge
cmp
push
or
or
mov
push
imul
inc
jo
insl
rorb
push
or
xchg
iret
mov
adc
adc
dec
shlb
adc
icebp
or
hlt
push
leave
pusha
aaa
adc
xor
xor
scas
mov
sbb
idiv
add
insl
add
add
fwait
jle,pt
icebp
pop
fdivrs
add
mov
xchg
shlb
mov
mov
mov
jo
adc
dec
shr
add
xchg
dec
leave
ds
add
or
xchg
sub
add
mov
sub
lcall
into
es
and
and
pop
push
test
xor
xchg
push
out
outsb
push
pop
and
add
inc
mov
scas
popf
mov
mov
imul
fisubrl
sbb
outsb
push
lods
xchg
aad
negl
jno
add
xchg
add
int3
out
scas
add
push
arpl
fisubl
lcall
mov
mov
xor
mov
add
int
repz
scas
loop
sbb
pop
pop
dec
xchg
dec
sti
sub
inc
fmuls
jo
and
ljmp
leave
cmp
push
aad
xor
pop
xlat
divl
sbb
lds
jo
xor
pop
cmp
xor
sub
or
xchg
pop
stos
or
shlb
cld
test
aas
cwtl
mov
adc
int3
fiadds
xchg
ja
lret
xchg
push
inc
push
mov
adc
test
dec
das
mov
mov
mov
jne
ja
push
pop
xchg
cmp
das
sub
fstps
pop
lret
mov
leave
int3
add
stos
mov
add
add
stc
sub
iret
hlt
pop
add
inc
in
sbb
rorb
lea
mov
arpl
hlt
out
mov
dec
cmc
inc
andb
add
or
mov
add
and
shl
add
jmp
test
sub
inc
test
or
sub
and
bnd
sbb
in
pop
popf
mov
adc
adc
js
lods
test
inc
add
scas
pop
sbb
push
xor
mov
faddl
mov
cld
into
lcall
push
adc
sahf
shll
add
jo
pusha
ds
add
xor
fmul
jns
mov
roll
push
cmp
jno
mov
add
mov
pop
cmp
les
testl
frstor
fs
mov
fnstcw
and
mov
add
movsl
jo
adc
inc
out
jbe
out
add
mov
sarb
add
xor
sbb
mov
inc
lds
pop
scas
out
pop
imul
pop
add
outsl
sbb
ljmp
repnz
xchg
adc
add
lods
mov
xor
andb
movsl
cmp
aaa
pop
icebp
popf
movsb
push
xor
dec
loopne
add
pop
ja
rcl
mov
out
fiadds
dec
mov
test
fiaddl
push
ret
dec
xor
push
xchg
xchg
icebp
jl
add
mov
pushf
and
sarb
push
fwait
xor
scas
outsl
ljmp
lods
lock
pop
shrb
sub
nop
js
sbb
pop
adc
int
push
mov
jl
aaa
or
das
xchg
in
add
xor
outsb
sub
insl
add
push
mov
outsb
cmpb
push
add
subb
xor
sub
ret
fsubrs
and
lahf
clc
mov
iret
mov
pop
cli
dec
pop
incl
mov
add
push
imul
jns
xor
sub
js
add
mov
mov
fsubr
cmc
sub
fbstp
js
jmp
push
push
push
shl
jne
or
and
adc
add
xchg
stc
dec
or
push
push
cmp
jno
cltd
mov
push
dec
cmpsl
push
add
leave
and
testl
inc
punpckhbw
movsl
lret
popa
add
jl
hlt
mov
mov
push
jecxz
subb
in
cmpsl
add
xor
in
adc
and
insl
int3
mov
in
mov
sub
jbe
cs
iret
pusha
add
pop
xchg
std
popf
test
and
jecxz
cmp
pop
lcall
add
xchg
test
sti
lahf
and
dec
sbb
cltd
aaa
pop
cmpb
push
arpl
in
add
cmc
mul
add
sbb
cmpsl
and
ljmp
adc
sub
pop
sbbb
sti
in
xor
sub
dec
ficoml
sar
jne
cmc
add
repz
ret
shl
dec
jne
mov
loope
sarb
push
dec
mov
add
imul
jecxz
dec
js
int3
sarb
scas
jp
push
and
jb
gs
sbb
mov
sbb
sbb
test
sub
loopne
xchg
xchg
mov
cli
aam
xchg
add
inc
push
inc
xor
ret
mov
jne
ror
sbb
add
mov
mov
adc
cli
mov
push
lret
add
sbb
mov
loop
mov
add
loopne
outsb
push
adc
cmp
push
dec
mov
xchg
lods
add
xchg
sub
jge
xacquire
insb
jb
repnz
rol
mov
rorl
dec
and
pop
repnz
mov
xor
sub
sub
cmp
add
incb
jl
sub
call
pushf
sbb
lcall
sbb
jo
movsb
adc
sti
rolb
imul
ljmp
jl
insb
outsb
f2xm1
cmp
cmpsl
mov
xor
dec
out
xchg
mov
movsl
loopne
xor
adc
push
cwtl
jns
xchg
in
inc
ljmp
add
sbb
sar
xor
int
fistps
jno
or
fsubs
ss
cwtl
in
add
imul
test
and
pop
popf
and
xor
adcb
mov
jo
inc
lock
mov
sub
cmp
add
call
push
insl
dec
jns
cld
xchg
push
fmuls
inc
inc
adc
push
mov
xorb
add
lret
ror
cmc
dec
dec
push
sub
sub
test
add
fdiv
jg
fs
mov
inc
mov
add
sarl
sbb
xchg
in
fwait
xchg
pop
cltd
jo
lret
adc
dec
add
xlat
rorb
hlt
lock
adc
repz
pop
fwait
es
adcl
and
dec
and
lea
rorb
or
or
xchg
repz
jp
inc
das
sarb
jno
xlat
pop
lea
add
aam
int3
xchg
sbb
xchg
out
jns
add
mov
repnz
add
stos
leave
mov
ret
movb
mov
adc
mov
jl
sbb
not
hlt
popf
inc
sbb
add
fldenv
add
mov
or
test
rclb
add
loopne
icebp
sub
or
je
pop
cld
scas
push
in
add
push
cmpsl
pop
xor
popa
test
inc
add
orb
js
dec
add
xor
fimuls
sbb
mov
jns
sbb
mov
add
mov
pop
jge
test
mov
and
jl
mov
cmpb
and
adc
inc
pop
dec
cs
add
fwait
pop
jae
and
shrb
push
lods
test
push
sahf
and
add
sub
pop
sbb
push
push
push
call
mov
mov
adc
in
jb
sbb
pop
inc
mov
pop
stos
hlt
and
divl
mov
cmp
inc
sub
add
out
shll
incl
nop
popa
mov
sub
pusha
cltd
lret
and
xchg
int3
fwait
push
stos
pop
pop
call
pop
adc
test
imul
cwtl
push
push
mov
js
add
xchg
fwait
not
pop
mov
adc
pop
enter
mov
lods
inc
and
in
pop
out
setb
loopne
call
jecxz
jb
lock
mov
push
push
rorl
mov
push
cwtl
push
push
or
popa
mov
xadd
fwait
pop
js
push
inc
xchg
subb
mov
inc
sbb
fs
pop
sbb
insb
ljmp
add
fwait
dec
sub
jb
add
xor
pop
movl
sahf
and
aas
fadd
int3
pop
add
adc
mov
cmp
inc
imul
mov
sti
lret
adc
lods
xor
or
xchg
stos
cmp
lock
xchg
sbb
insb
xchg
add
push
jecxz
mov
lcall
push
in
nop
mov
smsw
pop
push
add
loopne
movsb
mov
xchg
test
iret
nop
push
add
cmp
lea
mov
or
addr16
rolb
xchg
push
in
and
movb
add
pop
inc
in
inc
add
ret
enter
andl
ret
jge
adc
mov
sub
loope
rolb
push
sti
daa
sub
cmpb
sub
imul
sbbb
add
mov
fwait
lret
neg
xchg
and
push
iret
xchg
pop
cmc
gs
xor
and
mov
cmp
push
mov
ret
cwtl
shl
addb
mov
mov
pop
inc
dec
orb
movsb
adc
pop
aaa
hlt
push
pop
loopne
xor
sub
mov
scas
mov
popf
mov
insb
cli
or
test
sub
loopne
cwtl
fs
cmp
sub
scas
and
lds
mov
fistl
inc
ljmp
cmp
and
scas
add
pop
popa
in
imul
pabsw
and
outsl
and
cmp
and
xorl
sub
fsubrl
xchg
add
jmp
pop
xchg
stc
xchg
adc
cli
add
jb
add
pop
pop
cld
sub
adc
jecxz
str
in
in
mov
in
cmp
dec
jne
xor
add
add
xorb
dec
inc
sub
hlt
in
add
test
call
pop
mov
mov
pop
cmp
mov
cli
in
dec
sbb
lea
jmp
ret
aad
ljmp
adc
clc
or
mov
mov
test
scas
stos
xor
mov
imul
nop
mov
out
fwait
mov
scas
rorb
imul
xchg
loop
insb
pop
call
pop
dec
jmp
dec
add
xchg
clc
cmpsl
repnz
sbb
pop
fiaddl
sub
sub
lret
and
pop
xor
lock
out
mov
inc
out
add
add
dec
loop
scas
push
rcrb
je
jns
pop
in
and
stos
mov
add
popa
cmpsl
jbe
push
nop
dec
mov
bound
jg
arpl
cmpsb
mov
add
add
arpl
sbb
xor
cmp
inc
add
sete
pop
shlb
xchg
rolb
lcall
es
mov
insl
pop
sbb
repz
jg
cmp
nop
imul
cmc
push
sub
and
mov
aaa
mov
imul
lock
cli
xchg
sub
mov
pusha
cmp
cmpsb
inc
cmp
mov
nop
in
pop
sahf
lods
jo,pn
rorl
ja
add
sub
imul
aam
sar
add
lods
sub
sub
mov
jp
and
nop
ret
dec
pop
test
bound
sarl
sbb
adc
and
sub
into
inc
into
xchg
and
ror
cwtl
add
and
sub
sbb
adcb
adc
ds
inc
add
push
push
jecxz
flds
pop
shll
push
push
push
and
sbb
push
xchg
dec
mov
sub
xchg
inc
adc
es
pop
cmc
in
or
nop
cltd
and
mov
push
jbe
sub
sbb
add
nop
add
adc
daa
inc
mov
dec
adc
popa
inc
inc
cli
push
lock
xchg
add
inc
sbb
pop
loopne
sbb
add
cmc
jp
hlt
clc
les
jmp
sbb
jne
repz
xchg
mov
cmp
jle
adc
xor
mov
into
das
lahf
mov
dec
jmp
xchg
push
mov
rcrb
aad
cmp
cmpb
sbb
mov
mov
sti
add
movsb
mov
sbb
sub
fwait
push
icebp
mov
enter
sub
in
repnz
clc
sub
daa
test
sbb
add
ja
fnstenv
pop
scas
fwait
push
and
add
adc
add
nop
int
enter
insl
mov
mov
jno
and
add
jae
mov
cli
xchg
hlt
rclb
pop
mov
pop
add
or
add
xor
xchg
mov
push
aad
add
fwait
dec
leave
nop
repnz
jmp
jbe
fisubrl
movsl
mov
xchg
add
pop
icebp
sub
lcall
mov
inc
mov
dec
test
mov
adc
hlt
dec
mov
dec
int
mov
sti
jnp
and
jbe
add
inc
mov
ja
jl
idivb
jns
iret
lock
lea
sub
insl
hlt
mov
mov
mov
xlat
jb
add
movsl
stos
pop
dec
popa
aam
ret
fucomp
mov
fs
cmp
pushf
add
mov
mov
and
mov
lock
add
lea
jbe
cld
mov
inc
pop
jg
add
out
add
jns
je
sbb
jle
ret
lods
movsl
add
out
fimuls
mov
rorl
push
icebp
shl
cwtl
add
sbbl
mov
push
mov
pop
mov
arpl
sbb
xor
mov
xchg
stos
jg
xchg
and
pop
push
add
or
testl
cmpsl
adc
add
lea
or
mov
add
adc
sarb
sub
stos
adc
sbb
ret
sbb
jnp
aad
lcall
and
repz
cmpsb
mov
jae
add
sbb
test
add
mov
popa
add
out
xchg
xor
fiaddl
sub
mov
or
jmp
arpl
lcall
dec
sub
add
sbb
inc
enter
and
in
ret
lods
mov
sub
mov
aaa
scas
pop
ja
add
test
sahf
or
cwtl
inc
add
inc
stc
fsubs
jno
loope
push
push
cmpsl
and
lcall
inc
iret
in
inc
jle
add
cld
jo
lsl
cmp
addr16
sarb
xchg
test
xor
addl
pop
jl
jnp
adc
data16
cmp
gs
mov
push
roll
push
into
icebp
call
add
hlt
add
cmpsl
jb
cmp
andb
cltd
movsl
movnti
push
mov
jp
dec
dec
xchg
add
adc
dec
sbb
sarb
sub
dec
in
sub
add
popa
xchg
xor
fwait
ret
push
add
loopne
xlat
jl
out
add
inc
data16
shr
xchg
mov
lods
mov
dec
jae
setg
dec
push
pusha
test
ret
adc
sub
pop
call
pushf
rcl
es
jno
add
dec
and
adc
cmp
pop
and
mov
mov
jb
pop
inc
lods
dec
mov
jmp
xorb
lahf
add
or
in
scas
stos
add
cld
stc
or
adc
outsb
out
in
add
lods
add
dec
emms
add
inc
bound
xchg
adc
pop
leave
ss
loop
or
in
mov
popa
xlat
push
pushf
mov
js
loopne
mov
push
pop
es
pop
std
push
xchg
push
pop
add
les
je
add
pusha
icebp
push
pop
push
push
iret
and
mov
add
pushf
in
scas
xlat
mov
cmp
aas
movsb
rorb
addb
inc
jo
es
sbb
call
dec
pop
and
andl
cwtl
or
pop
sbbb
mov
add
shrb
imul
test
pop
add
add
push
add
inc
imul
mov
outsb
add
or
xor
add
iret
xchg
jnp
shl
aaa
mov
lcall
dec
pop
adc
push
cmp
stos
sbb
add
pop
add
fildl
add
es
int
andl
leave
mov
sbb
add
sbb
out
pop
orl
stos
add
fisubs
push
or
hlt
push
jo
push
not
xchg
jle
add
sub
push
or
leave
subb
push
jp
call
push
aad
add
push
outsl
daa
push
xchg
icebp
sbb
adcb
add
sub
add
push
push
jg
les
xlat
lcall
shl
aaa
call
notb
jmp
jo
xor
cwtl
pop
add
std
add
pop
and
cmc
es
sub
shll
jo
sarb
dec
xchg
lods
mov
jp
inc
or
in
out
orb
push
sub
adc
fnstsw
and
mov
jmp
les
fdivrl
mov
sti
enter
add
xor
js
push
push
iret
pushl
push
add
cmpsb
outsb
push
lar
and
les
sbb
inc
aaa
xor
ja
sub
jmp
test
add
adc
sub
push
loope
aam
test
jmp
jbe
mov
lcall
inc
cmpsb
jmp
xor
mov
pop
iret
call
add
add
mov
adc
add
cmp
insl
dec
rolb
aas
dec
sbb
movsb
in
rcr
adc
add
sti
les
jno
ja
adc
scas
iret
mov
add
leave
clc
jb
lahf
ret
add
shlb
mov
push
or
add
add
sahf
bound
add
or
add
arpl
dec
jnp
pop
lea
xor
andb
daa
cmp
je
add
and
adc
movsl
rolb
push
enter
bound
and
fstps
mov
fsubr
adcl
inc
xchg
add
shlb
in
loop
in
mov
cltd
shll
mov
pop
jge
add
jnp
lock
outsb
xor
add
call
mov
push
add
ja
push
cmpsb
cmpsl
jg
wrmsr
add
mov
cpuid
and
sub
inc
and
cmp
sub
hlt
dec
out
jg
inc
inc
jle
nop
out
add
leave
dec
imul
pop
jg
fwait
pop
pop
in
cmp
enter
scas
cmp
add
fsubr
adc
jmp
out
add
mov
stos
jp
push
xor
out
xor
mov
sub
xorb
push
sbb
or
sbb
mov
dec
fstps
pop
jmp
pop
add
clc
push
push
cmpsb
sbb
rorb
mov
ljmp
repnz
je
and
adc
outsl
dec
mov
add
cmp
fwait
nop
adc
std
add
mov
and
pop
xor
mov
sbb
mov
inc
xor
pop
push
enter
xlat
ss
sub
lock
cmp
addb
jo
imul
loopne
lahf
outsb
pop
pop
xchg
bound
push
mov
push
push
imul
jle
sti
add
adcb
jmp
arpl
sub
or
and
icebp
les
push
add
pusha
mov
add
add
loope
addl
add
mov
inc
out
xor
jae
adc
addb
adc
or
sbb
xchg
add
nop
fucomp
dec
loopne
inc
in
add
popf
sub
mov
popa
mov
adc
and
add
pop
insb
cwtl
add
out
dec
es
push
inc
and
xchg
sbb
out
xchg
or
into
dec
pusha
mov
sub
adc
xor
adc
add
leave
inc
pop
xchg
flds
push
mov
lea
or
int
pop
data16
sbb
hlt
add
cwtl
add
xor
in
aaa
xor
mov
mov
les
push
js
rorb
flds
das
sti
stc
xchg
sbb
jo
mov
dec
dec
stos
shlb
mov
sbb
pushf
lahf
rcrl
inc
dec
mov
rcl
add
xchg
add
sbbl
add
cmp
push
sub
mov
cmp
mov
lods
ss
push
movsl
mov
jae
loope
sahf
lcall
sub
add
addl
push
pop
mov
pusha
clc
jmp
aaa
cmp
popa
and
orl
idivl
mov
cld
inc
mov
out
push
mov
dec
sub
cmp
push
sub
mov
ret
leave
pop
adc
int3
stos
jns
xorl
sub
imul
cwtl
add
setge
das
dec
jo
popa
mov
mov
cwtl
sub
push
add
in
xor
out
enter
fldenv
movsb
add
mov
push
sbb
xchg
cmpsw
push
mov
mov
in
xchg
add
bound
ds
mov
add
mov
pop
idivl
add
mov
sbb
inc
push
adc
test
movb
fldt
lea
call
jne
xor
int3
cmp
lds
rorb
jae
std
push
pushf
ds
stos
gs
push
je
mov
xchg
xor
cld
movsl
or
sbb
and
pop
cmp
setb
pop
inc
shll
aaa
loope
test
iret
lcall
adc
outsb
sti
enter
in
test
and
xchg
jb
add
ja
sbb
pop
imul
xor
mov
cld
xchg
out
add
adc
loopne
out
pop
pop
xchg
icebp
dec
imul
dec
add
loopne
test
pop
cmpsb
sub
add
xor
scas
icebp
clc
mov
jl
pop
xor
mov
andb
sub
add
sbb
mov
cld
add
in
pop
sub
add
fistpll
js
add
orb
out
aas
mov
cmpsl
push
push
jg
incl
scas
add
pop
xchg
inc
pop
add
mov
repnz
lret
in
xchg
add
lea
arpl
cmp
xor
sub
xor
add
ja
rcll
jge
dec
imul
call
cmpsb
and
loope
or
push
rcll
fcomip
mov
ret
adc
add
lret
iret
cmpsb
add
or
in
pop
add
pop
std
xchg
jmp
jno
pop
loope
dec
jns
mov
enter
out
sbb
push
fwait
in
and
cmp
and
in
sahf
aas
fucomip
orb
jge
jns
add
int3
jnp
push
out
or
bound
insb
leave
lods
add
fsubl
dec
call
add
add
mov
cmpb
cmp
pop
push
iret
add
xor
mov
shl
cwtl
add
jno
orb
jb
stos
aaa
jo
add
xor
inc
sub
and
add
ja
sub
or
or
popa
pop
push
dec
hlt
repnz
adc
lods
nop
addb
stos
cmp
les
in
bswap
pop
lcall
or
in
cld
and
ret
cld
jae
icebp
pop
sub
add
mov
sbb
adc
adc
dec
movb
mov
fadds
add
push
lds
test
mov
lods
and
pop
xchg
jle
jbe
jns
xchg
clc
ja
push
mov
cmpsl
cmp
or
jnp
mov
shlb
pusha
hlt
inc
add
divl
mov
lods
mov
push
xor
or
add
lret
sub
pop
je
add
and
cmpsb
inc
cmc
add
push
or
jbe
test
cmp
inc
lcall
js
adc
arpl
mov
pop
add
push
popf
add
ljmp
dec
mov
in
jne
sbb
cmp
fsubrl
mov
ror
nop
xchg
mov
scas
mov
test
add
xor
cltd
lds
mov
cli
jg
jo
push
add
add
cmp
lret
cmp
rorb
xchg
mov
push
or
add
cmp
and
xchg
mov
pop
push
xchg
push
adc
outsl
scas
daa
pop
cs
dec
out
into
loope
adc
or
stc
inc
xchg
outsb
push
mov
mov
add
aam
testl
inc
lcall
xchg
cmc
adc
sbb
cwtl
ljmp
add
mov
jns
mov
in
cmp
aas
shl
sbbl
aam
bound
aas
jmp
add
push
outsl
call
mov
sahf
push
fcomp
mov
or
jo
xor
sub
mov
js
int
add
adc
xor
add
push
mov
repnz
addb
je
push
sub
or
xchg
or
call
rolb
jnp
int
lods
add
inc
pop
and
subb
fsubs
movsl
push
popa
add
test
pop
shlb
frstor
jle
fistpl
xchg
adc
push
dec
cmp
mov
pop
add
dec
xchg
xor
ss
out
push
pusha
add
ffreep
popa
aam
jp
add
stc
bound
xor
dec
sub
and
sub
pop
loop
mov
enter
add
jl
das
bound
mov
jno
adc
or
cltd
push
pusha
dec
dec
rolb
or
stc
jbe
sbb
jo
mov
ljmp
add
jecxz
jl
inc
loope
add
fidivrl
fwait
sbb
clc
add
pop
jne
shlb
add
fcompl
mov
mov
repnz
push
loop
andl
push
add
shlb
or
add
inc
dec
pop
and
xchg
pushf
sbb
jae
add
test
xor
mov
ja,pn
sti
shll
lods
mov
movsl
fadd
inc
and
leave
adc
mov
pop
ljmp
mov
or
loopne
add
int
and
jae
xchg
add
out
mov
dec
gs
je
sub
mov
adc
mov
add
and
sbb
shlb
sbb
add
push
mov
lcall
inc
lods
mov
pop
inc
mov
push
add
fisttps
pop
mov
add
cltd
jns
adc
mov
xor
icebp
pop
add
or
ljmp
les
add
mov
adc
cli
fsubl
in
push
inc
imul
cmp
in
or
pop
fwait
loopne
inc
push
aaa
lcall
gs
cmpsl
add
push
int
push
mov
mov
pop
add
jecxz
push
dec
daa
pop
inc
add
inc
or
mull
addl
and
push
jo
ss
add
std
out
push
pop
add
ljmp
sub
mov
das
inc
mov
and
dec
call
add
mov
pop
xchg
or
xchg
je
faddl
adc
insb
test
arpl
mov
sub
sahf
cmp
mov
add
incb
jge
adc
add
pop
repz
add
fwait
subb
pop
pop
jbe
mov
cld
push
pop
movhps
pop
gs
jg
push
xor
jo
out
jmp
add
and
repnz
add
scas
xchg
sub
fstps
add
xchg
push
mov
adc
cmp
cmp
repnz
cmp
mov
cmpsb
icebp
nop
push
lea
aam
pop
pop
in
arpl
pop
cmpsb
push
and
orb
call
daa
pop
insb
pop
lods
sub
div
xor
add
fwait
lahf
nop
dec
aas
jo
cli
sbb
push
adc
add
push
mov
cwtl
out
fdiv
cmp
lock
mov
dec
les
data16
cmp
ljmp
xchg
mov
jne
and
ret
lahf
jmp
jne
add
sar
mov
mov
pop
ljmp
mov
cld
jbe
shlb
dec
lret
mov
scas
and
lahf
into
insl
lcall
jp
adcb
push
mov
stc
pop
frstor
push
out
fs
sbb
sbb
test
xchg
or
jl
pop
fdivp
das
clc
pop
inc
and
lods
les
pop
xchg
lahf
sub
inc
ljmp
and
add
fcmovu
push
andb
test
sub
mov
push
pop
and
out
les
inc
sub
aam
lret
dec
sub
or
fildl
jmp
mov
loopne
cwtl
repz
jge
out
pop
add
sbb
pop
fmuls
data16
sbb
xchg
mov
add
push
cs
lods
movsb
adc
push
add
xchg
mov
fstl
hlt
and
xor
lcall
aaa
add
sub
add
xchg
pop
adc
int
or
outsl
loopne
add
testl
xchg
sbb
add
jg
enter
xchg
cwtl
testl
in
shlb
add
test
mov
mov
loopne
inc
or
dec
adc
mov
inc
cld
js
mov
add
xor
or
addb
out
add
mov
xor
fwait
cwtl
mov
int
aam
add
repnz
add
pop
sub
inc
xchg
add
shll
pop
xlat
mov
pop
gs
ret
pop
das
out
lds
sti
xchg
xlat
rol
fiadds
inc
mov
testl
dec
cld
jbe
pop
mov
cwtl
cmpsl
pop
xchg
js
add
in
shlb
push
call
xchg
jae
xor
popf
shll
cmp
bound
imul
pop
sub
leave
rcrl
xor
sbb
cmp
or
xchg
in
sbb
pop
mov
dec
pop
push
test
xchg
xchg
mov
dec
inc
loope
pusha
nop
xchg
or
out
mov
les
mov
add
mov
cmp
nop
add
or
cmp
push
dec
pop
pop
mov
push
pop
popa
sub
movsl
pop
push
mov
jns
popa
call
daa
mov
add
mov
mov
mov
rorl
mov
push
jno
loope
ds
mov
add
in
sbb
hlt
adcb
xor
iret
loope
or
jns
sti
cs
or
loopne
je
das
mov
add
imul
scas
vpackuswb
mov
clc
fistpll
cmp
mov
dec
xchg
add
ljmpw
leave
inc
ret
inc
test
inc
or
cs
sbb
dec
mov
mov
sarb
xchg
mov
jge
cmpsl
int3
and
mov
xchg
pop
sbb
adc
daa
mov
add
cs
outsl
adc
subl
test
cwtl
ret
add
or
clc
pop
in
add
xchg
sbb
icebp
sub
arpl
daa
add
mov
or
xchg
mov
mov
adc
jl
sub
add
and
cmpsb
outsl
in
cmp
adcb
and
mov
sub
fcoms
sub
faddl
jmp
mov
mulb
add
dec
loope
adc
nop
loopne
pop
add
mov
inc
dec
xor
jmp
mov
push
nop
dec
or
or
or
and
push
push
sbb
setp
mov
and
sbb
pop
jecxz
sbb
fadds
bound
push
jo
add
xor
nop
pushf
mov
out
cmp
cld
add
mov
in
pop
pop
std
mov
test
push
inc
in
add
cmpsb
ret
cmp
insb
adc
fdivs
xchg
orb
add
inc
das
outsl
add
dec
popf
mov
adc
push
add
outsb
xor
movsb
pop
rcrl
sti
hlt
mov
pushf
add
out
push
filds
xchg
add
sub
jb
add
sbb
xor
dec
xor
add
ret
es
pop
add
xor
mov
or
add
daa
xor
or
addb
xchg
or
jge
xor
cmovl
lds
loopne
pusha
mov
jg
adc
flds
xchg
cli
push
ss
cmp
mov
dec
testl
xchg
add
pop
ret
sbb
sbb
add
inc
iret
je
icebp
mov
ljmp
push
rolb
pop
shll
mov
movsl
and
add
sub
pop
sbbb
jbe
loopne
dec
xor
sti
icebp
inc
mov
or
sub
pop
nop
smsw
mov
xchg
int
dec
inc
les
scas
daa
adc
test
imul
cs
ret
mov
mov
add
dec
jnp
mov
stc
repz
add
pop
gs
dec
repnz
xor
adc
mov
outsb
pop
jp
in
lods
mov
adc
cwtl
mov
push
shr
mov
cmpsl
lret
mov
xchg
pop
xchg
mov
add
push
lock
pop
xchg
popa
cmp
stc
and
cmp
rorb
xchg
xchg
sub
sub
pop
xor
add
shll
cltd
mov
add
mov
ss
sarb
sbb
and
std
stos
and
xorl
add
into
fnstsw
pop
add
and
cli
add
outsl
add
arpl
nop
mov
fmuls
cli
loopne
adc
clc
jo
add
sbb
bound
jae
cmp
cmc
mov
int
sbb
add
jge
push
adc
fldl
add
inc
lahf
mov
dec
loopne
iret
pop
clc
incl
mov
push
push
push
push
xor
inc
js
fcomps
addl
mov
shr
pop
jecxz
jp
test
dec
lods
orb
add
or
imul
push
ret
add
sbb
jmp
xchg
inc
insb
les
xchg
lock
les
popf
test
mov
mov
mov
xchg
mov
fsub
push
pushf
or
sub
outsb
in
fistl
or
pusha
jbe
xor
cmp
dec
push
test
add
xor
add
inc
js
add
push
xlat
dec
call
add
cmp
lds
cmp
pop
orb
mov
aaa
in
dec
jb
cmpsl
jp
es
cmp
les
sbb
push
add
mov
pop
add
mov
add
cs
add
hlt
lret
inc
and
sbb
inc
mov
xchg
or
xchg
clc
jne
adc
rclb
xor
mov
add
lea
jl
jmp
pop
stc
ss
add
lock
out
mov
xchg
dec
mov
xchg
add
sbb
test
adc
pop
add
imul
jns
add
aas
jmp
or
repnz
adc
int3
addb
das
or
enter
lds
add
push
mov
test
out
lods
cs
push
push
push
mov
dec
cld
add
add
and
les
mov
fdivs
pusha
xor
sub
inc
rcrb
pop
ficoms
jne
lock
pushf
pop
add
inc
xchg
fcompl
add
test
pop
sahf
fs
addr16
ja
pusha
xchg
mov
and
insl
mov
xor
push
xchg
aaa
jmp
pop
lock
roll
add
std
jmp
ja
mov
insl
imul
loopne
xchg
and
mov
scas
mov
shll
xchg
je
inc
xchg
test
or
cmpsl
ret
dec
mov
test
gs
out
incl
sti
cmp
xor
test
insb
push
nop
jmp
fneni(8087
xchg
and
popa
add
sub
push
vmread
mov
scas
push
jno
sub
cmpsb
adc
jbe
fildl
jo
aaa
cmp
mov
mov
sub
xchg
nop
add
adc
insl
rcrb
jb
test
cmpb
sub
sub
jmp
pop
divl
push
add
pop
test
sub
or
inc
and
scas
xor
add
add
push
jae
jbe
mov
push
fcmove
push
cmp
jp
pop
mov
mov
daa
push
lods
inc
mov
and
mov
add
lock
ret
add
js
sets
and
int3
outsl
cmp
pop
popf
push
mov
mov
pop
fidivrs
xchg
push
or
sti
mov
cmp
xchg
call
cld
mov
call
add
mov
and
and
or
adc
push
stc
gs
pop
out
inc
or
inc
jae
dec
xchg
sarl
and
stc
fldl
cmp
lock
push
movsl
push
stc
sbb
xchg
xor
jo
cmp
mov
push
add
pop
add
sub
cmp
inc
movsb
or
mov
cmp
cmp
addr16
and
sub
mov
mov
or
insb
jmp
movl
mov
cmpsl
and
test
cmp
add
cmp
add
mov
and
outsb
fidivs
dec
sub
jno
lods
inc
shrd
or
sarl
push
ljmp
mov
lahf
stos
pop
cmp
jecxz
out
rol
pop
repz
out
cmpl
jp
add
or
pop
jnp
pushf
push
jmp
add
fwait
inc
mov
cwtl
sbb
outsl
shll
nop
int3
jno
add
dec
cs
sti
in
pop
ljmp
pop
ret
inc
cli
adc
neg
add
lahf
pop
rclb
add
adc
mov
ss
add
cmp
out
cld
mov
nop
je
mov
mov
adc
cld
and
mov
and
pop
mov
inc
mov
mov
andb
es
les
add
push
pop
xchg
add
stc
dec
repz
inc
or
mov
roll
pop
pushf
inc
dec
and
push
scas
pop
loope
mov
inc
mov
in
jg
add
shrl
or
sub
shrb
sbb
mov
inc
push
pop
mov
js
and
insl
sub
and
outsb
or
add
dec
xchg
outsl
push
imul
push
lds
adc
loop
in
add
add
xorb
inc
inc
pop
pop
ljmp
mov
and
stos
cmc
mov
arpl
imul
push
add
pop
sbb
dec
or
pushf
jecxz
push
ljmp
arpl
ror
aaa
daa
loop
add
adc
add
push
sarb
mov
or
xchg
cmp
add
xor
pop
xor
dec
ss
mov
vcmpeq_usps
enterw
add
jbe
push
int3
mov
add
push
inc
sbb
das
clc
add
fcoms
add
cwtl
aad
pop
mov
fdivrl
fisubs
dec
xor
mov
mov
loope
jbe
cs
add
xor
mov
add
mov
rolb
add
jne
aas
or
push
pop
sbb
in
daa
and
addr16
jge
and
or
mov
cmp
ret
inc
jno
add
scas
call
or
mov
ja
mov
int
mov
pop
jp
add
push
dec
jmp
xchg
xchg
xchg
jns
xor
inc
adc
sub
test
ss
sub
or
sbb
dec
arpl
int
nop
ret
xor
lock
pop
sbb
cld
jg
cmp
cmp
mov
add
std
rcrb
roll
pop
push
add
jne
dec
adc
jp
sahf
mov
lods
and
xchg
mov
jle
jno
add
pop
add
incb
mov
loope
inc
mov
mov
add
inc
shlb
mov
xor
xor
popa
shlb
iret
mov
pop
cmpsl
mov
insb
loopne
jo
cmp
sbb
inc
test
jp
test
sbb
cmp
add
sub
push
cmpb
outsl
jne
gs
fistps
je
jmp
adc
decl
add
push
inc
gs
lea
fimull
sub
je
rorl
testb
in
inc
es
stc
divb
inc
loope
mov
add
add
stc
adc
in
lds
ja
sbb
sahf
xor
loop
stc
and
cltd
add
jle
sub
jne
imul
loopne
leave
lahf
incl
dec
pushf
stos
in
pop
into
jecxz
cmp
dec
cmp
add
mov
jg
add
sbbb
add
fwait
out
adc
add
test
fists
jmp
xor
into
stos
sub
add
dec
repnz
in
pop
jle
pop
dec
and
ljmp
xchg
imul
loopne
cmp
cmpb
dec
out
and
pop
test
dec
shlb
je
fcompl
add
push
mov
and
imul
xor
inc
pop
adc
mov
push
mov
je
ja
cld
mov
xchg
divl
jl
pop
mov
add
adc
mov
sti
mov
add
mov
loop
sbb
testb
fstpt
aad
mov
jmp
or
cmpsb
add
pushw
jae
pop
adc
movsb
adc
mov
push
push
add
mov
js
dec
and
push
xchg
nop
push
push
add
xlat
add
daa
lds
xorl
push
ljmp
mov
popf
xorl
ja
cmp
xlat
cltd
add
rcrl
sbb
jp
pop
xor
loop
in
testb
sub
or
and
dec
pop
jl
and
nop
in
gs
xchg
sbb
inc
fdiv
jl
add
lods
ds
aas
mov
add
shlb
mov
negl
shlb
sti
mov
and
dec
pop
repz
frstor
adcb
lock
adc
pop
mov
mov
imul
imul
pop
filds
ljmp
pusha
faddp
in
push
adc
sti
mov
imul
lahf
mov
adc
push
mov
iret
cmp
mov
push
add
clc
mov
movl
inc
or
cmpsl
jp
es
mov
sarl
sub
sbb
jl
adc
xchg
insl
add
or
mov
std
xor
ficomps
add
popf
test
push
pop
pop
pop
add
and
xchg
in
imul
xor
shr
jb
mov
addr16
push
lods
repnz
mov
in
add
inc
outsb
mov
xor
add
xchg
loopne
sbb
les
pop
mov
adc
cmpsl
push
das
xor
insb
add
flds
test
pushf
and
mov
push
jmp
movsl
dec
jb
add
inc
and
mov
add
inc
add
int
enter
add
lods
jae
pop
mov
int
and
add
add
adc
jmp
add
iret
mov
repz
add
adc
push
scas
jb
push
xchg
mov
in
hlt
enter
mov
das
cmp
jl
xor
ljmp
or
dec
push
xlat
add
int
xchg
pop
sub
es
mov
mov
xlat
cld
fcompl
jl
and
or
add
lahf
jnp
cwtl
addb
pop
repz
cmpsl
xchg
aam
inc
add
xchg
mov
add
xchg
xchg
add
mov
sbb
sub
aam
rolb
pop
add
pop
adc
test
pop
lret
jmp
out
or
push
data16
addb
push
sar
sub
ret
or
mov
movl
xchg
out
lock
fstpl
or
mov
push
jg
cmp
aam
popl
add
mov
mov
pop
sub
mov
add
lods
cmc
sarb
ds
into
mov
fwait
mov
jbe
sbbb
xor
add
enter
add
pop
sub
adc
inc
cmpl
push
xchg
addb
xchg
lahf
push
dec
mov
mov
inc
cmp
lods
cmpsb
out
push
andb
and
add
pop
mov
dec
sub
lods
daa
xor
stos
outsb
adc
dec
loop
repz
jg
fcoml
xchg
add
inc
roll
push
ret
mov
outsb
aaa
xchg
sub
add
mov
dec
add
shlb
add
mov
jecxz
mov
stc
mov
inc
cmp
cmp
mov
push
dec
mov
add
sub
add
mov
pop
push
mov
outsl
cvttps2pi
aas
pop
xchg
gs
xlat
add
mov
xor
mov
sbb
inc
mov
shlb
add
fsubr
daa
fbstp
out
jl
add
sub
lea
xchg
testb
out
add
sub
imul
out
add
popf
adc
add
in
sub
adc
iret
imul
gs
rorb
add
int
mov
mov
mov
lret
js
loope
inc
subl
bound
hlt
and
cmpl
jnp
add
cmp
add
test
orb
and
stos
inc
add
lock
sbb
mov
push
add
rclb
push
imul
iret
loope
es
inc
mov
add
cmp
lock
mov
cmovbe
pop
lock
daa
or
int3
dec
add
and
inc
out
aam
movsb
add
mov
pushf
dec
in
add
cmpsb
repz
xor
arpl
loop
adc
inc
lods
enter
add
mov
pop
add
es
cld
jne,pn
add
xchg
sahf
data16
jae
pop
or
stos
imul
mov
mov
in
add
scas
ss
push
lea
jl
stos
out
ja
movsl
dec
ud2
push
aas
mov
pusha
xor
insl
pop
add
imul
lds
repnz
daa
rcrb
pop
add
pop
dec
sub
clc
pop
out
cmp
popa
adcl
gs
push
jle
add
mov
mov
xchg
adc
inc
test
and
std
mov
pop
mov
rolb
repnz
mov
lcall
inc
stos
rolb
cmc
jb
pop
lods
add
push
loop
call
adcb
xor
add
insb
shlb
fldl
sub
push
insl
mov
mov
jb
add
or
test
jne
fsts
xor
add
rcll
scas
ja
movsb
adc
adc
mov
int3
add
pop
push
ret
mov
push
jo
add
sbb
mov
jle
daa
inc
insb
das
lds
jge
mov
call
lock
idiv
xchg
rcl
pop
jp
stc
sahf
xor
add
inc
add
sbb
int
cs
imul
mov
jmp
in
movsb
fcomps
add
adc
mov
add
movsb
and
push
pop
je
test
add
xorb
jns
mov
jae
aad
movsl
xchg
add
or
loopne
add
push
into
mov
fwait
sbb
addb
dec
jns
sbb
inc
push
or
jne
xchg
ret
xorl
add
add
test
ret
cmp
ret
rcrb
xlat
popa
loope
adc
repz
imul
pop
xchg
into
outsb
rcll
xor
pusha
mov
dec
test
cmp
bnd
mov
test
sbb
notl
add
bound
mov
add
cltd
mov
popf
mov
cmp
xchg
lock
dec
mov
and
nop
es
xchg
inc
push
pop
add
xor
push
ds
sahf
pop
aam
sbb
mov
loop
sub
xorb
lods
aad
push
lahf
scas
jmp
add
bound
cli
call
fstpl
mov
bnd
or
jne
lret
rcrb
cwtl
and
xchg
or
addb
dec
dec
pop
repz
xchg
or
out
pop
jle
adc
jbe
outsb
add
xchg
xchg
inc
cmp
stc
pop
push
sbb
xor
pop
arpl
shrb
sahf
out
mov
jns
clc
or
cld
insb
rorl
adc
add
push
imul
fildl
lcall
loop
js
push
pop
sarb
push
cmp
pop
jmp
xor
incl
in
rorl
lods
shlb
and
negl
mov
clc
mov
int3
jp
repz
sbb
popf
add
js
pusha
jle
stos
jb
and
jno
dec
enter
mov
test
pop
outsl
lcall
inc
ficompl
test
mov
test
aaa
push
mov
push
shrl
fwait
jo
jae
jecxz
dec
shrb
pop
fiadds
inc
es
inc
pop
repz
add
push
inc
mov
xor
sub
stos
mov
mov
push
std
scas
mov
pop
pop
aad
cwtl
add
push
das
sar
addl
sbb
mov
loopne
jge
lods
cmp
mov
add
xchg
add
sarl
push
fmulp
add
sub
pop
cmp
nop
int
imul
push
mov
das
cmc
push
add
outsl
mov
mov
add
jl
pop
dec
push
inc
andl
cmp
insl
popa
mov
ja
mov
out
add
adc
hlt
add
out
sbb
add
or
add
idivb
rorb
jl
jecxz
fisubl
jbe
cmp
sbb
dec
or
sbb
and
mov
mov
hlt
nop
add
imul
pop
mov
xchg
jbe
outsl
ljmp
add
sub
out
jle
and
stos
push
lds
add
jnp
lcall
add
loop
fstpt
or
and
mov
bsf
iret
add
lods
aaa
dec
xlat
js
jl
sub
fsub
icebp
add
repnz
andl
and
pushf
and
push
lock
mov
xchg
xor
dec
mov
cmp
decl
adc
push
and
mov
push
jno
popa
sbb
jb
and
push
stc
lret
cmp
jae
add
lahf
out
jb
lods
adcb
int3
adc
push
push
push
cli
cld
xor
jae
frstor
add
dec
mov
mov
jns
pop
popf
fwait
sub
mov
sahf
sti
fldenv
ret
lock
mov
inc
add
dec
das
xor
ss
push
outsb
sbb
mov
add
enter
fisttpll
inc
xchg
hlt
shl
push
push
fildll
es
cld
sbb
mov
push
cmp
push
out
add
enter
mov
sbb
push
mov
test
adc
mov
xchg
dec
je
dec
movl
cmc
sub
xchg
repnz
cmpsl
andl
sbb
mov
push
movsl
and
inc
cld
jno
cmp
xor
mov
xor
jl
or
bound
hlt
add
cmpl
add
icebp
cs
xlat
jge
cmp
mov
lahf
shrb
add
out
and
jno
add
das
mulb
je
jg
adc
mov
mov
sub
cwtl
fidivs
pop
sbb
adc
or
fs
pop
sti
mov
lahf
cmp
pop
insl
std
shr
add
faddl
into
mov
pusha
cmpsl
lahf
push
daa
movsl
or
sub
mov
nop
xor
pop
push
sahf
pop
jge
push
pop
loopne
pop
add
scas
dec
shlb
pop
mov
aam
and
aas
fldcw
sub
cmc
mov
jg
cmp
cltd
add
rclb
xchg
cmp
dec
push
cmpsb
call
ret
cmp
push
repz
sbb
or
push
test
or
mov
xor
out
sub
add
xchg
pop
icebp
dec
rol
jge
inc
jp
xor
add
mov
xchg
pop
inc
xor
jmp
mov
fdivs
out
adc
jl
and
cmpsl
outsl
add
cwtl
sub
add
push
inc
jge
fwait
shll
lds
inc
and
repz
in
push
push
xchg
cwtl
scas
push
cmp
movsb
inc
add
jno
sub
fsubp
shlb
test
pop
inc
cmpsl
popf
jae
xlat
push
sbb
cli
add
mov
test
cmp
gs
lret
xor
cmp
dec
fucomp
add
inc
ret
mov
inc
add
xor
dec
cmc
mov
daa
rolb
add
mov
mov
les
inc
sub
add
js
sub
aam
dec
dec
or
add
jecxz
daa
rorb
shlb
mov
xor
imul
cmpsb
mov
mov
push
pop
cld
add
xchg
and
xor
icebp
or
fsubrp
xchg
popa
add
xchg
dec
out
and
cmp
les
popa
jb
sahf
jecxz
clc
push
aad
rcrl
adc
icebp
and
and
cmc
push
ficompl
out
sbb
icebp
aas
pop
imul
psllw
movsl
add
add
loope
mov
pop
push
inc
fildl
lods
imul
jb
pop
xor
lret
ss
lods
jmp
mov
lret
and
fs
into
dec
cmpsb
adc
or
fcmovne
push
add
cmc
in
add
inc
aad
jl
mov
mov
iret
and
mov
cld
lcall
repz
jle
adc
cmp
inc
add
add
inc
into
sub
imul
jbe
andb
push
sahf
lcall
push
xor
add
push
out
dec
jg
cmpl
xchg
call
xchg
divl
stc
add
iret
sub
leave
ds
lock
pop
xchg
jg
fs
orb
and
or
aam
rorb
pushf
sti
add
ljmp
inc
add
mov
and
test
mov
stc
fwait
rolb
inc
insl
je
ret
cs
lods
push
jge
push
inc
xor
pop
stc
jp
pop
cli
scas
xchg
or
das
enter
sub
add
sbb
roll
inc
dec
xor
cmc
inc
sbb
jmp
filds
mov
sub
gs
js
mov
stos
sbb
push
into
test
test
lret
jl
idiv
cmp
inc
fs
insl
add
or
lret
push
pop
pop
add
fidivrs
repz
cli
add
in
into
pop
cltd
jl
adc
sub
cld
xchg
mov
mov
test
std
push
repz
push
loope
jge
in
and
xor
orl
push
pop
inc
push
add
sbb
or
sbb
push
mov
mov
test
stos
sub
sbb
mov
jbe
mov
cmpb
cmc
mov
fs
dec
xor
loop
push
sarb
addl
xchg
ret
mov
outsl
add
add
lcall
jns
in
fdivs
repnz
xchg
hlt
faddp
cmp
test
jge
je
mov
xor
sub
mov
cmc
test
dec
rorb
scas
inc
mov
and
test
scas
dec
stos
andps
cmp
push
aas
sbbb
mov
adc
negl
sbb
scas
push
pop
scas
cld
loopne
fnstcw
ss
xchg
int3
fcmovb
icebp
pop
lret
add
sub
mov
adc
cwtl
lods
mov
mov
adc
sub
add
out
mov
or
les
pop
inc
mov
and
les
mov
arpl
add
dec
push
in
jo
or
stos
fwait
add
sbb
mov
daa
inc
shlb
int3
push
fnstcw
sbb
pop
addr16
outsl
pop
mov
or
pop
cmp
jge
pop
lret
add
push
jge
sub
mov
outsb
inc
add
cmpsb
cmp
xor
in
push
add
ficoms
inc
sbb
iret
and
mov
add
cltd
sbbb
pop
bound
iret
test
mov
add
imul
jge
or
lret
push
inc
add
xchg
cmc
stos
pop
xor
fstpl
mov
or
xchg
cmp
shll
cmc
inc
clc
fcomip
adc
add
ja
sub
push
push
rclb
pop
push
pxor
ret
std
popf
cmpsl
icebp
cs
mov
pop
les
inc
test
cwtl
xor
cmp
xchg
add
fwait
pop
lds
leave
lcall
inc
sub
sub
add
out
xchg
cwtl
fadd
add
stos
lods
les
cld
loopne
loopne
xchg
hlt
xchg
and
loopne
and
nop
fdiv
pop
and
cmp
sub
sub
pusha
cmc
xor
or
stos
bswap
iret
clc
and
jne
adc
in
and
add
and
jo
out
fistps
jb
cltd
add
push
and
xor
and
call
repnz
inc
int3
mov
xchg
repz
add
adc
mov
dec
rcll
aam
push
mov
int3
stc
mov
sbb
dec
je
or
pop
add
in
aad
fadds
mov
lret
push
call
dec
jp
jmp
dec
sub
sbbb
in
push
sti
jle
xchg
jbe
cmp
movsb
nop
mov
out
pop
mov
add
movsb
movsb
add
pop
stos
mov
xchg
xor
sub
mov
popa
int
adc
cli
xchg
inc
cwtl
add
push
pushf
cmpsb
sbb
movsb
in
mov
shl
faddl
and
adc
add
sub
outsl
pop
sub
aas
jo
add
xor
sub
add
jle
sub
sub
sbb
sbb
fstps
lcall
nop
leave
xor
and
mov
mul
mov
pop
arpl
mov
and
shll
jmp
call
push
add
daa
xlat
dec
ret
and
mov
rcll
jo
add
inc
dec
cltd
dec
test
xlat
xor
call
dec
lods
pop
mov
in
cmpsl
bound
pop
inc
mov
add
add
int
notl
mov
add
out
jl
nop
inc
test
adc
push
rclb
mov
jp
and
lea
imulb
pop
pop
mov
ficompl
xor
jns
add
int
repz
ljmp
and
out
loop
popa
cmc
mov
sub
add
repz
ret
repnz
in
add
mov
repnz
mov
mov
arpl
add
cmp
and
lds
add
mov
pop
loopne
sub
dec
mov
push
mov
xor
dec
test
dec
xor
add
std
mov
cmp
dec
sub
fiaddl
adc
mov
dec
loopne
mov
addr16
rolb
dec
vpacksswb
pop
pop
inc
stos
jo
push
nop
in
outsl
xchg
lods
sbb
add
js
fisubrl
aas
in
mov
push
shlb
mov
lods
jp
push
adc
mov
ficompl
sub
sahf
dec
xor
sbb
adc
push
xchg
add
sbb
iret
mov
loope
outsb
in
add
pop
adc
add
jmp
mov
and
das
outsl
xchg
pop
pusha
or
inc
mov
insb
cld
and
sarl
sti
scas
add
sub
push
sub
hlt
mov
lock
test
mov
push
int3
mov
add
and
and
aad
sub
movsl
adc
pop
aas
pop
adc
aaa
cmp
cmp
sbb
mov
aad
js
mov
cmpsb
in
pop
scas
cmp
mov
fmul
cmc
dec
into
jne
in
pop
or
adcl
popf
loope
mov
add
in
mov
ret
or
push
dec
push
outsl
mov
pusha
dec
in
jmp
add
jb
cld
ljmp
rolb
xchg
dec
mul
or
cmp
popf
add
cmpsl
push
fwait
mov
cmp
mov
jg
ljmp
jmp
in
or
adc
add
enter
lods
mov
cmp
add
jle
inc
add
xchg
repnz
add
mov
jge
addr16
xor
pop
sti
pop
and
add
cmpsl
xchg
add
mov
cmc
jg
int3
imul
jno
inc
incb
mov
pop
popa
add
ret
add
ja
icebp
cmc
add
mov
lret
mov
imul
adc
cs
mov
pop
repnz
enter
fwait
cmp
mov
add
xrelease
mov
es
sub
orb
adc
jns
mov
dec
dec
sub
push
popf
addr16
mov
sbbb
adc
lock
add
loopne
les
add
je
add
mov
loop
subb
jle
mov
jl
iret
stc
lds
inc
add
lcall
xchg
mov
ljmp
dec
dec
popf
inc
mov
pop
mov
les
mov
dec
mov
aad
data16
movb
test
aam
jns
add
es
sub
inc
push
hlt
mov
hlt
inc
stc
out
scas
lock
js
movsb
add
jg
add
push
hlt
cmpsl
mov
add
lods
sbbb
sbbl
add
xorb
and
xchg
xchg
push
adc
shlb
fadd
add
adc
ret
fisttps
popf
bound
gs
xor
imul
lods
cli
rcrb
mov
nop
lock
inc
sbb
push
orb
sbb
mov
cs
out
out
or
pop
dec
lods
insb
test
fistps
push
mov
insb
push
push
push
imul
sbb
add
mov
xchg
adc
mov
cmp
int
xchg
daa
inc
ja
jns
js
xchg
jl
in
sbb
jge
and
rclb
jl
stos
test
je
cmpsl
inc
testl
sbbb
xchg
cmp
add
mov
jl
or
inc
insl
outsl
sbb
pop
in
xor
inc
push
mov
push
mov
add
cmp
loop
sbb
add
xor
push
push
nop
add
in
mov
xor
int3
mov
sub
and
adcb
add
sbb
repz
or
fisubl
rolb
pushf
push
dec
les
ror
dec
leave
jge
mov
add
mov
pop
inc
stos
jb
inc
push
test
add
lea
lahf
xchg
loopne
pop
je
add
cwtl
nop
cmp
cs
iret
lcall
arpl
mov
icebp
xchg
repz
hlt
loope
mov
dec
addl
sbb
pop
add
xor
pusha
push
push
js
add
cmp
rclb
add
lds
mov
mov
sub
and
add
mov
xor
enter
sub
sbb
in
stos
js
inc
and
dec
cmp
add
or
inc
xchg
popa
in
mov
xor
loopne
xor
into
lods
push
xor
scas
and
or
js
adc
add
movsl
mov
mov
xchg
test
dec
mov
xor
sbb
std
add
pop
incl
insl
add
fistl
aad
and
mov
pop
or
add
xor
sbb
roll
gs
jne
inc
mov
sub
inc
test
mov
mov
xor
enter
jle
add
xor
fnstcw
ljmp
cmp
sti
add
stos
cwtl
mov
sbb
es
and
hlt
pop
mull
mov
inc
add
out
mov
cld
and
addps
inc
adc
fcoms
sbb
cltd
xor
cld
sub
mov
sub
xchg
inc
sub
jle
nop
push
add
mov
add
pop
stos
rdpmc
and
sub
push
inc
cltd
std
or
movsl
adc
push
add
fwait
pop
leave
and
or
xchg
cmp
mov
shl
jnp
add
fistpll
sbb
ret
add
lods
add
mov
pop
stos
cwtl
or
in
mov
mov
fstps
icebp
loop
add
fwait
and
and
push
add
popa
pop
popa
pop
loopne
iret
pusha
sub
pop
add
bnd
add
imul
stos
stc
mov
adc
aaa
and
xor
sub
mov
ds
sbb
adc
jmp
cmc
stos
cld
les
xor
push
push
fmulp
xchg
loopne
xchg
jecxz
jmp
pop
add
nop
mov
inc
xor
xchg
mov
fs
daa
mov
mov
mov
push
dec
adc
sub
xchg
nop
mov
push
pop
jo
popa
fstpl
sbb
outsb
xor
dec
lret
xchg
mov
mov
dec
adc
test
hlt
sarb
call
adc
shl
mov
or
dec
sub
push
pop
xlat
mov
cmp
in
adc
push
and
mov
pop
push
cmp
xchg
shlb
pushf
push
sbb
cltd
lock
lahf
add
insb
inc
imul
addb
mov
icebp
add
lds
xchg
enter
fstp
push
inc
sub
test
and
push
jae
or
addl
xchg
repnz
rclb
movsb
adc
loop
sbb
inc
add
hlt
fildll
push
adc
mov
add
iret
arpl
mov
repnz
mov
test
jg
mov
pusha
mov
in
stc
jns
lea
repz
rcrb
mov
pop
and
inc
test
popa
xchg
add
fidivl
or
or
data16
push
mov
adc
push
inc
fisttpl
or
adc
fcoms
mov
mov
inc
cltd
add
xor
sbb
pop
and
push
imulb
mov
mov
mov
jae
xor
xor
stos
xor
xor
mov
movsb
cmp
adc
scas
jmp
int
add
and
inc
adc
bound
loop
pop
or
nop
adc
xor
seto
and
cmpsl
pop
xor
jbe
cwtl
test
std
sbb
int
adc
popa
pusha
les
loope
pop
adc
add
into
push
add
stos
pop
or
cltd
jns
cmp
aaa
inc
and
stos
sub
mov
rolb
ret
icebp
mov
insl
xchg
mov
cwtl
add
scas
add
jle
inc
push
inc
scas
or
sbb
sbb
cmp
mov
xchg
jge
arpl
incb
cmp
xor
or
sarb
push
mov
adc
into
push
adc
add
pop
adcb
lods
orb
xchg
int
push
xlat
push
enter
push
mov
ficoms
add
scas
add
lcall
jg
or
and
push
xor
dec
adc
pop
out
or
les
aas
mov
mulb
test
scas
fcompl
add
lcall
test
mov
add
lea
inc
xor
add
pop
ja
pop
cld
sbb
push
xor
popa
push
adc
sub
into
in
pusha
sub
mov
xor
xchg
mov
movsb
add
stos
aad
lock
mov
loop
jl
mov
loopne
add
stos
and
mov
jo
jl
push
inc
add
mov
cmp
cmp
lret
adc
stc
mov
lods
pusha
or
pushl
sbb
add
pop
fists
mov
and
xchg
mov
sbb
push
xor
nop
add
lock
bound
cwtl
add
in
inc
mov
imulb
or
ficomps
sub
addb
loopne
adc
cmp
xchg
insb
test
jo
inc
jb
add
in
add
push
add
lret
push
lods
nop
add
outsl
daa
pop
mov
popl
add
push
int
aad
add
sbb
jge
sub
cmpsl
xchg
sub
and
push
mov
cwtl
leave
xchg
inc
cmp
repnz
xchg
pushf
sar
sbb
div
rol
pop
jb
iret
push
push
inc
je
mov
and
clc
jp
and
cli
mov
or
xor
fsubrs
les
cwtl
push
xchg
add
mov
test
mov
cmp
andb
or
adc
mov
in
add
test
jl
sub
dec
movsb
pop
or
pop
lret
adc
inc
jmp
pop
inc
in
into
sbb
cmp
ror
rorb
fwait
pop
imulb
pop
in
arpl
daa
pop
insb
or
hlt
or
or
inc
cmpsl
gs
ret
repnz
and
aam
jecxz
pushf
imul
pop
repz
inc
add
pop
out
mov
je
adcl
dec
mov
scas
shll
dec
add
ret
adc
test
jp
add
clc
fdivrs
out
ffreep
int3
aas
lcall
pop
pop
rcll
sub
loope
pop
leave
jo
adc
add
filds
xor
in
xchg
icebp
pusha
push
dec
bound
push
or
test
and
sub
aam
rcrb
mov
jl
and
or
mov
jmp
jns
add
sbbb
xchg
aam
fnstsw
cmc
sub
lods
rcl
xchg
leave
push
add
lcall
icebp
jbe
add
jmp
mov
adc
mov
popa
fs
mov
push
loope
test
add
xor
inc
cwtl
test
pop
and
shrb
cmc
push
mov
add
push
into
cwtl
xchg
clc
mov
dec
cli
ficoml
xor
stos
and
mov
pop
cmovl
push
add
out
cmc
xor
mov
in
push
add
fs
sbb
sbb
les
and
cmpb
jecxz
sub
add
in
jge
mov
mov
loope
dec
sub
jne
push
test
mov
push
out
addr16
and
sub
xchg
call
clc
pop
mov
and
xor
stos
ret
cli
pop
pusha
cmp
mov
lretw
mov
mov
adc
and
xchg
add
jp
mov
push
mov
adc
add
ja
dec
or
lds
mov
or
adc
cld
ret
push
adc
mov
xor
jae
add
bound
xchg
push
cs
ds
adc
mov
mov
add
and
loopne
or
jmp
sub
and
lahf
test
aad
lods
mov
cmpsb
les
pop
repz
push
dec
leave
mov
push
mov
inc
out
popf
pusha
je
jl
mov
inc
daa
std
aam
xchg
cmpb
jno
add
add
and
mov
out
sbb
out
add
lahf
mov
push
pushf
and
add
lods
dec
and
mov
push
test
lea
jo
clc
insb
imul
add
lcall
ret
out
or
dec
adc
adc
movb
jns
mov
fwait
jge
daa
imul
ss
add
add
shrl
and
dec
ret
test
lcall
orl
sub
test
or
xchg
fadds
mov
adc
idivl
add
add
mov
stos
cld
sub
jecxz
addb
add
fwait
and
lret
repz
lods
mov
inc
add
xchg
je
add
lret
dec
hlt
sahf
pushf
adc
cmp
outsb
pop
out
mov
movsl
mov
jae
loop
add
push
mov
jmp
add
jp
dec
je
add
incl
pushf
dec
subb
add
mov
adc
add
addr16
xor
cmp
call
mov
add
out
add
bound
sbb
fsubl
cmc
push
sub
int
hlt
popf
jbe
add
cmpsl
pop
mov
or
add
jbe
lcall
and
out
jg
push
pop
cmp
inc
jns
stos
mov
jmp
push
cmp
call
inc
and
lock
pop
movsb
es
les
add
jge
add
int3
ret
mov
push
call
les
test
lret
adc
shlb
lret
jl
mov
inc
daa
aas
or
ss
cwtl
inc
push
add
lock
leave
movl
or
cmp
ss
pop
addr16
inc
dec
hlt
add
mov
pop
inc
push
and
add
or
mov
sub
pop
adc
mov
xor
loop
add
jmp
push
in
mov
pusha
cmpb
out
arpl
sbb
roll
rorb
cli
and
mov
inc
cmpsl
andl
es
mov
add
pop
xor
push
ret
aad
loopne
outsb
or
mov
adc
pop
mov
je
push
lock
add
inc
cmc
stos
decb
add
or
movsl
ss
aas
aad
cmp
dec
push
sub
lods
and
not
add
xor
xchg
and
push
pop
mov
add
and
xor
push
ficoms
sbb
orb
push
in
adc
gs
int
hlt
mov
sub
push
mov
jge
in
and
in
dec
and
or
mov
xchg
and
push
lret
int3
repz
sahf
out
mov
add
gs
rclb
repnz
sub
andb
cmp
roll
mov
ds
cwtl
add
or
movd
mov
mov
scas
or
inc
pop
mov
test
pop
add
cmpsl
pushf
mov
inc
or
xchg
and
sti
dec
pushf
add
mov
sbb
test
dec
add
adc
jo
cmp
cld
add
in
pop
icebp
add
dec
adc
loopne
add
jg
push
xchg
faddl
jo
add
sub
hlt
jo
sbb
sbb
inc
pusha
and
insb
or
mov
cmp
hlt
outsl
shlb
das
sbb
add
scas
out
ss
or
int
fnstcw
sbb
out
adc
push
mov
pusha
or
aas
mov
mov
cwtl
jo
mov
mov
pop
lods
test
gs
push
add
in
pop
imull
inc
outsl
mov
or
add
push
jp
adc
push
sbb
add
sub
jnp
roll
lods
dec
vpcmpgtw
dec
add
fwait
mov
lds
inc
add
pop
jge
jb
mov
inc
movsl
test
xchg
add
sbb
xchg
mov
setnp
xor
pop
mov
enter
imul
pop
sub
jne
rclb
cmp
and
scas
adc
enter
outsb
jmp
jo
in
nop
or
and
pop
stos
cmc
add
jnp
cld
pop
outsl
ret
int
in
sub
cli
mov
sub
mov
add
fwait
movsl
addr16
clc
stos
add
adc
jl
xchg
faddl
xchg
insb
fs
movsl
ljmp
and
jl
shlb
shlb
push
and
push
stos
mov
add
cld
fdiv
push
mov
decl
ret
nop
add
stos
stc
sbb
ds
jmp
mov
imul
jae
mov
movsl
add
pop
loop
add
jg
pushf
xor
nop
pop
add
aas
pop
fldt
pop
stos
inc
push
pop
loopne
popf
call
pop
jno
fistpll
adc
nop
arpl
sbb
and
push
adc
outsb
pop
inc
mov
xor
xor
add
or
push
mov
sub
in
cmpsb
add
pop
adc
test
push
mov
xorb
stc
xor
mov
inc
mov
cmp
outsb
lock
stos
and
fcomps
dec
in
jge
fiaddl
xor
and
pop
sbb
in
stc
adc
and
add
inc
add
and
lret
sbb
and
inc
scas
pop
imul
push
aaa
rorb
bound
ljmp
cld
cwtl
sbbb
add
popa
or
fildll
popf
nop
sbb
sbb
sbb
clc
in
mov
ds
add
mov
cld
hlt
sub
mov
pop
adc
mov
dec
aad
imull
fadds
aas
stos
dec
pusha
and
mov
cmpsb
aas
mov
adc
adc
sbb
rorb
inc
pop
repnz
push
adc
xchg
jge
lret
push
sbb
lods
lds
fs
loope
inc
das
cmpsb
iret
mov
xchg
xor
add
pop
mov
sbb
inc
inc
dec
cs
cmp
pop
push
mov
cmc
mov
lret
sbb
inc
and
add
repnz
pop
sbb
clc
ret
addb
add
pop
add
cmp
mov
pusha
add
sbb
or
inc
jns
cli
enter
cld
xorb
add
cmp
hlt
or
mov
into
add
aam
cmp
fdivs
iret
popa
in
pop
lods
data16
xchg
add
ljmp
jecxz
add
into
cwtl
sbb
add
xlat
imul
mov
add
add
cwtl
xor
adc
xor
push
push
icebp
aas
clc
mov
shrl
in
popa
cwtl
loopne
pop
or
xor
mov
jl
inc
mov
test
add
call
sbb
aam
les
cmpsb
mov
mov
mov
cmc
xchg
mov
jmp
or
xchg
cmp
lock
lret
lods
pop
pop
mov
inc
pop
dec
jb
cmpb
cmpsl
push
dec
lret
sub
mov
add
jl
sub
daa
cmpsb
insl
das
inc
mov
or
or
mov
lods
shlb
mov
mov
add
imul
aas
or
cltd
sub
mov
adc
sub
cs
and
mov
or
out
xchg
mov
adc
iret
add
xchg
or
cmpb
lods
or
cmp
sbb
mov
fwait
cmc
push
lods
les
mov
dec
ret
es
rcrb
cs
add
adc
pop
jecxz
ror
int
or
mov
fstpl
mov
add
or
es
sbb
scas
int3
jl
add
or
xchg
ficompl
xor
in
jbe
mov
add
sub
daa
jecxz
mov
mov
xor
push
lock
mov
sub
loopne
nop
inc
out
jge
add
adc
add
adc
push
pop
inc
inc
add
int3
test
int3
dec
jecxz
imull
ret
gs
enter
frstor
pop
es
cmp
cmpl
inc
and
add
inc
test
repz
inc
xchg
jmp
movsl
cmp
add
subb
movsb
rorb
jecxz
les
cmp
mov
mov
add
in
stc
leave
and
inc
add
aad
add
call
dec
push
in
add
stc
int
fwait
rorb
scas
gs
cld
or
pop
add
shrl
jmp
stc
jge
jg
push
stc
rcrl
pusha
jp
mov
xchg
pop
xor
push
popf
cmpsl
arpl
je
and
and
pop
inc
lds
sti
cwtl
sbb
sub
cmc
dec
rclb
add
test
and
xchg
jmp
jl
popf
mov
add
and
aad
std
mov
push
movsb
cmp
jno
mov
bound
mov
or
lret
pop
daa
add
xor
jl
push
cmpsl
jl
jno
or
orl
pushf
pop
add
pop
cli
inc
or
lock
adc
addb
xchg
iret
wbinvd
cld
sub
movsl
nop
mov
dec
mov
aad
add
ds
jbe
js
ret
push
ret
fnstcw
daa
das
ret
xchg
add
sahf
fldt
inc
cmp
or
addb
dec
add
ret
out
inc
call
adc
gs
dec
out
mov
xor
lock
add
adc
adc
add
and
mov
cli
rol
sbb
sub
add
scas
stc
int3
push
in
add
arpl
call
mov
inc
sbb
fcoml
add
adc
sarb
test
inc
psrad
test
and
push
adc
add
mov
xor
arpl
jg
enter
jno
and
mov
dec
sub
or
xchg
jmp
cmp
repz
cmp
add
adc
sub
insb
filds
sbb
or
add
movsl
pusha
lret
dec
les
add
push
in
or
pop
xchg
into
hlt
cmp
mov
and
xor
push
and
dec
mov
fwait
mov
js
dec
inc
test
repnz
lahf
rorb
pop
movsl
daa
mov
pop
ret
pop
nop
subb
dec
jmp
cmc
mov
fdivrs
pusha
push
movsb
cmpsb
sbb
adc
jl
pop
into
leave
inc
add
mov
pusha
dec
add
arpl
loope
mov
jp
add
xor
xor
dec
ficomps
add
and
cmp
frstor
sbb
cli
repnz
rcll
fldl
lcall
loope
mov
addr16
add
fwait
popf
sarl
mov
or
rolb
push
hlt
add
test
hlt
add
adc
in
pop
inc
push
xor
aas
gs
add
roll
repnz
lds
mov
sub
xchg
enter
add
xchg
test
pop
mov
fistpl
jmp
movsb
test
rorb
fs
stos
cld
adc
add
mov
sub
or
addr16
fistl
and
dec
fnstcw
jg
add
lea
adc
add
cmc
test
rorb
push
les
lods
mov
xor
loopne
xor
sbb
adc
ss
jne
cmp
push
and
pushf
adc
dec
adcl
sbb
cltd
addb
aad
and
xor
aam
jo
sub
jb
or
add
cld
movsb
inc
in
add
loopne
pusha
push
push
lcall
push
push
nop
fs
xchg
cld
mov
xor
lahf
inc
outsb
cmpb
mov
push
cmp
mov
xchg
loopne
or
jl
cld
pop
pusha
mov
icebp
sub
mov
sbb
mov
fsubs
flds
inc
dec
lret
sarb
dec
inc
shlb
and
pslld
mov
les
hlt
mov
fdivl
test
xorl
pop
rcll
push
pop
rolb
in
cwtl
add
cmp
push
mov
ljmp
or
lea
stc
call
movsl
pusha
pushf
es
jb
push
inc
add
xor
mov
cld
add
mov
cmp
pop
mov
jmp
xor
dec
hlt
or
ret
fadds
scas
cmp
jle
aam
clc
imul
enter
add
or
mov
dec
add
dec
add
pushl
add
cmp
cmc
push
push
xchg
sub
sbb
ss
ds
xchg
mov
add
or
mov
sub
and
cmp
iret
sub
aad
lods
jb
in
mov
lar
mov
je
or
rcll
jle
adcb
les
add
jns
shrb
dec
cmp
xchg
out
and
and
inc
cs
mov
ret
in
pop
add
jmp
jo
jbe
lods
sub
in
loopne
add
dec
fldl
add
es
pop
or
jo
fisttpl
enter
mov
lods
and
add
cltd
repnz
add
pop
push
lock
push
lea
sbbb
cmp
into
mov
add
shlb
ret
fs
push
insb
popa
jb
mov
dec
add
mov
xorb
test
lods
adc
cmp
das
mov
sub
lcall
jb
add
fs
push
inc
mov
or
cmp
lret
xor
cli
addb
mov
lcall
adc
add
dec
or
mov
pop
testb
inc
repz
hlt
or
fstps
inc
adc
pop
adc
testb
dec
mov
movsb
add
lock
mov
sbb
sbb
add
ds
and
add
fiadds
aaa
xchg
mov
push
adc
mov
std
cmc
es
xchg
push
cwtl
clc
jg
push
xchg
xor
mov
or
test
pusha
call
cli
mov
shlb
orl
jmp
jl
cmpsl
mov
ja
add
adc
jp
xchg
push
push
mov
shrb
mov
and
add
cmp
ds
mov
or
shr
or
sbb
in
inc
add
mov
in
push
nop
xor
mov
aaa
sti
les
fdivl
jno
add
mov
push
fisubrs
cmp
sub
int
xlat
test
int3
mov
xchg
js
aad
nop
adc
rolb
inc
mov
dec
test
andb
xchg
mov
test
dec
mov
inc
sarb
daa
push
lret
inc
inc
cli
jo
xchg
mov
mov
jne
or
pusha
aas
add
mov
lock
pop
push
sub
repz
lock
les
and
dec
jne
pusha
aad
fistpl
jge
popf
lcall
push
push
dec
lret
nop
or
cmp
add
notb
shl
call
in
lret
in
pop
pop
add
push
int
push
shl
add
sbb
in
arpl
push
pop
xor
pop
jge
cmp
sub
test
fmuls
jge
pop
add
fisttpl
adc
pusha
stos
xchg
stos
lret
jnp
add
insb
sub
sub
insb
add
lds
sbb
and
add
into
xchg
daa
jl
and
ja
std
adcb
mov
cltd
ret
pop
or
gs
lods
daa
lods
pslld
out
stos
xchg
mov
lret
inc
fistpll
mov
pop
lods
jns
add
dec
add
xchg
cmpsl
retw
stos
or
rorb
adcb
pop
add
xchg
cs
out
test
xor
cli
mov
inc
shl
mov
mov
stos
push
jp
loopne
pop
pop
outsl
enter
jmp
mov
mov
psubd
js
jns
fcoml
out
cltd
pop
xchg
cmp
sbb
mov
in
sbb
and
ja
xor
pop
clc
fidivl
xor
int3
in
in
pop
adc
insl
nop
fsubrs
jmp
out
nop
rolb
xor
stos
movzbl
imul
lods
cmpsl
es
pusha
iret
add
add
mov
add
repnz
xor
mov
repnz
out
in
scas
push
pop
xor
xorb
movsb
jnp
add
rcrl
mov
icebp
xor
jg
fs
sub
lds
mov
inc
testb
xor
pop
push
loope
inc
ds
dec
mov
jg
add
icebp
push
xor
shl
stc
sti
outsl
shll
inc
orb
sar
pop
out
in
stos
sbb
sti
inc
lods
xchg
xchg
pop
test
xor
sub
or
push
push
adc
cmc
or
add
mov
mov
adc
mov
mov
pop
add
jl
imul
sbb
inc
rorb
shrb
jae
dec
divl
lret
push
loop
dec
adc
mov
mov
sbb
add
or
add
imul
lret
les
jo
inc
pop
pop
call
imul
add
jnp
add
xchg
cmc
int3
add
sub
mov
in
jl
clc
nop
daa
xor
aam
dec
lods
rorb
imul
scas
leave
dec
lret
mov
push
and
adc
pcmpeqb
mov
cmp
clc
push
mov
jne
xor
cmp
xor
inc
dec
add
pop
jg
mov
jle
pop
cmp
shlb
pusha
stos
push
add
inc
lcall
mov
push
sbb
aaa
add
add
cmpsb
push
jo
add
pop
inc
loopne
in
lods
sub
push
icebp
jmp
repnz
add
cmp
arpl
loopne
pop
mov
test
xchg
xor
and
clc
popf
xchg
loop
fistps
mov
add
jno
dec
adc
xchg
jb
mov
jp
add
jg
cs
out
mov
pop
loopne
push
push
rcrb
jns
hlt
xchg
or
jp
mov
pop
dec
mov
je
jbe
shrb
jp
add
ror
adc
add
sub
dec
aad
jne
or
inc
push
lock
add
scas
inc
out
jns
popa
jl
adc
add
fldenv
push
push
movsl
lock
loopne
in
adc
and
xchg
inc
adc
jb
dec
jge
jo
push
js
or
popa
cmp
addr16
in
jno
pop
and
adc
mov
es
jle
push
scas
ret
mov
in
je
or
cltd
pop
inc
add
insl
dec
add
gs
mov
lret
es
inc
push
dec
adc
sub
mov
mov
inc
aad
xchg
mov
inc
in
xchg
sbb
pop
xor
pushf
test
jbe
and
and
add
xor
dec
call
popa
into
adc
in
sub
jecxz
add
fmuls
movmskps
inc
dec
and
cli
jecxz
sbb
loop
sbb
int3
cmpsl
lock
and
adc
cli
sahf
das
lcall
jg
inc
test
pop
fmul
add
xor
pushf
add
pusha
mov
mov
mov
mov
cmp
ret
inc
mov
shl
in
cmc
lds
enter
push
std
adc
lcall
sbb
push
testb
xchg
imul
mov
clc
and
push
repz
outsb
pop
dec
xchg
jmp
packsswb
add
push
repz
test
addb
aaa
xor
pop
arpl
dec
aam
fsubs
push
add
outsb
push
cwtl
movsb
mov
sar
add
into
addl
hlt
stos
xor
xor
adc
xor
fcmovbe
rolb
sbb
rorb
add
jb
decl
xor
pop
orb
outsl
add
xlat
jg
fwait
leave
jg
test
add
fldcw
ror
rcll
push
xchg
aam
xchg
push
inc
mov
lret
mov
pusha
add
loope
adc
or
jns
add
push
jmp
andb
aad
mov
pop
push
dec
and
pop
loop
add
mov
out
mov
dec
icebp
sbb
dec
andb
sbb
pop
icebp
enter
mov
mov
dec
aaa
lret
rclb
pop
push
xchg
enter
jmp
cmp
les
ds
lret
daa
fcomp
adc
mov
xchg
or
jl
dec
mov
and
lahf
lods
add
jmp
push
xchg
int3
js
stos
pop
lcall
inc
lahf
lea
out
mov
or
adc
test
mov
sub
incb
and
notb
cvttps2pi
sti
add
push
add
sbb
rolb
das
fs
call
lret
pusha
add
daa
push
loop
in
loopne
and
add
mov
push
pusha
stos
repz
pop
xor
orl
add
inc
fcoms
mov
pushfw
pop
add
pop
jge
and
sub
adc
mov
or
fadds
testb
mov
mov
fs
dec
pop
mov
or
das
jge
and
popa
adc
xor
sub
loopne
mov
mov
or
xchg
mov
inc
pop
aad
push
jno
loop
add
sbb
stos
add
pop
mov
cmp
xchg
gs
shlb
dec
add
inc
push
pop
add
cmc
pop
test
mov
enter
in
add
ljmp
add
mov
xor
sub
sbb
out
lea
fstpl
shrl
sbb
or
add
outsl
inc
jne
jmp
xor
shlb
mov
rorb
inc
das
mov
xchg
aad
nop
in
aaa
cmp
and
jnp
push
movsb
rolb
into
pop
in
addb
ljmp
ds
pushf
aad
loop
cmp
mov
sbb
cltd
cli
push
add
mov
lods
mov
cmp
mov
jnp
sbb
call
pop
stos
imul
xchg
loopne
hlt
in
jo
sti
jnp
cmp
clc
dec
sub
popa
add
and
adc
pusha
outsl
out
cmp
mov
les
rclb
cmpsb
sldt
push
test
lcall
enter
fildl
cltd
mov
xor
sub
imul
dec
push
add
divl
or
xor
popf
imul
mov
mov
pushf
mov
mov
loop
mov
sti
add
pop
loopne
in
cmc
adcl
test
cli
cs
jae
add
fadds
push
or
push
stos
cmp
inc
into
loopne
mov
jp
sbb
xchg
and
insb
stos
fucom
xchg
xor
lods
arpl
in
add
xor
mov
rclb
fcmovbe
inc
aaa
test
push
xchg
sbb
push
fwait
or
mov
mov
frstor
imul
cmp
push
cmpsb
lahf
popa
shlb
add
jb
sbb
jne
pop
mov
imull
sbb
pop
dec
ja
dec
push
mov
and
add
lcall
add
sbb
cmp
jecxz
add
pop
xchg
jp
add
mov
push
mov
mov
sbbb
cmpsl
add
adc
mov
lcall
xor
jecxz
xor
enter
movsl
insl
adc
push
popf
leave
out
in
add
int3
ret
dec
and
sarl
cmp
fmul
rclb
mov
loop
roll
popa
or
pop
pop
add
jb
ljmp
sbb
mov
les
xchg
pusha
add
mov
mov
subb
in
cltd
and
pop
nop
mov
dec
roll
cmc
inc
sub
subl
add
lds
fnstcw
jno
out
clc
mov
mov
or
jmp
cmp
xor
sbb
cld
in
mov
mov
adc
jae
dec
pop
in
fiaddl
pusha
push
jne
test
jp
and
fildl
data16
out
divl
adc
insl
je
and
filds
stc
xor
push
stos
fs
jle
aaa
movb
js
pop
push
jnp
gs
xlat
inc
sbb
cmp
mov
ret
decl
cmp
call
add
push
sti
std
movsl
mov
push
add
jo
push
or
sbb
push
cltd
rorb
lods
fstp
adc
add
filds
adc
jno
cld
aas
test
mov
xor
loop
and
arpl
popa
mov
cmp
leave
lock
sub
int
and
faddl
mov
add
xchg
arpl
loop
cli
aam
test
push
and
push
add
cmp
leave
cmpsb
mov
push
sub
push
mov
jg
fidivs
popf
and
sbb
xor
outsb
push
cmp
push
leave
pop
lds
jnp
pop
mov
call
in
in
out
lcall
into
and
adc
lods
push
gs
add
inc
pop
push
notb
lret
adc
sbb
pusha
inc
cltd
rcrb
cmpsb
mov
xchg
in
or
mov
add
dec
pop
or
jl
dec
sbb
adc
sub
pop
adc
ds
add
lods
and
pop
arpl
push
fs
in
adc
inc
repz
cmp
sub
call
nop
push
pop
test
addr16
xlat
fmul
jae
mov
xchg
adc
fdivl
sub
ficomps
mov
lods
jno
add
es
movsl
test
add
shl
add
pop
jno
mov
test
daa
fstpl
jns
dec
push
inc
and
lock
add
jnp
jo
mov
inc
fiadds
and
add
and
popf
sbb
jg
add
inc
dec
and
movsl
and
cmc
add
test
push
mov
daa
adc
or
and
std
cmpsl
mov
xchg
sub
add
fs
sbb
pop
ret
push
nop
cmpb
adcb
dec
into
incb
aad
xchg
xchg
js
mov
lahf
aam
push
lds
adc
push
movsl
imul
or
push
in
in
adc
push
gs
adcl
out
xor
pop
inc
in
cmp
call
jmp
mov
mov
cmp
loop
add
sbb
shll
js
and
mov
jl
insl
or
js
sbb
sbbb
lret
jnp
arpl
inc
xchg
sbb
jo
mov
mov
cwtl
cwtl
inc
loopne
ja
add
push
in
loopne
xor
mov
rcrb
xchg
dec
frstor
cmp
loope
rolb
mov
dec
sub
xchg
xchg
mov
out
xor
mov
nop
inc
call
dec
pop
cmp
push
sub
fstps
and
adc
repz
mov
je,pt
fwait
add
cmpb
outsl
push
cmp
roll
addl
pop
mov
xchg
or
in
int3
sbbb
out
mov
imul
pop
mov
shll
pop
out
in
jns
push
test
jecxz
jle
xchg
or
jns
and
dec
aas
push
outsl
cli
sub
repnz
aas
mov
add
xchg
leave
xor
out
call
cmp
sahf
mov
xor
imul
sbb
sbb
rorl
add
fnsave
into
dec
icebp
add
aas
cli
nop
cmp
xchg
sahf
call
das
scas
lret
pop
cs
out
jns
sti
fsubl
xor
and
lret
adc
add
bound
ja,pt
stos
cmp
sbb
sub
outsb
jns
jb
add
dec
ret
mov
test
lods
arpl
pop
lods
lds
repz
movsb
inc
add
or
cmpsl
dec
pushf
pop
mov
dec
cmp
or
enter
addb
mov
test
push
movsl
add
stos
push
xor
ljmp
std
mov
or
test
dec
loope
push
jb
sti
dec
daa
sub
lods
jg
mov
test
cmp
mov
sub
cmpsl
xchg
imul
movsb
or
or
and
pavgb
add
add
js
pop
push
int3
dec
add
in
addb
push
push
mov
addl
pop
add
push
mov
sub
pop
xchg
pop
push
push
pop
add
push
mov
inc
neg
shl
shr
sub
sub
pop
xchg
pop
mov
push
mov
call
int3
pushl
pop
push
mov
add
add
xchg
mov
sub
mov
mov
mov
pushl
pop
add
push
mov
xor
push
mov
add
and
pop
push
mov
or
pop
sub
xor
add
pop
sub
mov
mov
sub
sub
shr
dec
inc
push
mov
mov
sub
pop
sub
pop
sub
add
cmpb
jne
push
mov
push
mov
mov
pushl
pop
add
pop
push
mov
push
push
mov
mov
sub
pop
add
mov
pop
add
mov
add
push
push
push
mov
push
mov
call
push
mov
add
sub
xchg
pop
mov
mov
add
mov
add
mov
pushl
pop
push
mov
add
add
xor
xor
xor
pop
pushl
mov
add
push
mov
add
add
xchg
pop
ret
push
push
pop
add
sub
push
pushl
pop
popl
pop
mov
push
mov
push
mov
add
add
xchg
mov
pusha
pushl
push
mov
xor
pop
pop
sub
mov
mov
xor
pop
pushl
mov
sub
mov
mov
add
add
xchg
pop
shr
push
mov
push
mov
xor
sub
pop
add
add
mov
mov
add
pushl
pushl
pop
push
mov
add
add
xchg
pop
jmp
push
mov
push
mov
mov
mov
pop
add
xor
pop
sub
mov
push
mov
mov
xor
pop
add
add
sub
add
pop
push
mov
push
mov
mov
pop
add
add
sub
pop
push
mov
push
mov
neg
push
mov
xor
not
and
or
sub
xor
pop
or
xor
xor
pop
sub
pop
or
jne
popa
leave
ret
