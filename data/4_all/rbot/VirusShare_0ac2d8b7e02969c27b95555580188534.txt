mov
add
add
add
call
mov
ret
sub
imulb
push
push
push
push
push
fldt
push
call
mov
daa
sbb
xor
sbb
int
cmpsb
sub
pop
and
or
xor
mov
jg
std
div
mov
add
hlt
cmp
call
mov
fistpll
clc
cmp
jne
push
pop
mov
push
mov
sti
call
push
in
sub
nop
aas
xlat
outsb
jg
inc
cmp
adc
adc
xlat
mov
ret
jne
movl
mov
add
push
mov
movl
out
dec
mov
adc
in
outsb
arpl
dec
push
rclb
push
int
dec
pop
add
clc
jne
push
mov
pop
push
cmp
jne
mov
mov
adc
lods
pop
pop
mov
and
std
in
xor
sete
mov
sub
cmpsb
lea
and
push
push
push
push
lods
sbb
pop
sbb
cmp
push
or
inc
adc
mov
loop
loope
jmp
jne
push
movsb
adc
fnstsw
idivb
push
pushf
mov
inc
and
jne
outsb
mov
mov
xor
mov
mov
cmp
cmp
push
lea
mov
inc
loopne
adc
les
lods
add
in
sub
jle
dec
imul
int
cmp
pop
lods
sti
pop
xlat
dec
cmp
xchg
push
xlat
popf
in
sub
adc
inc
les
pushf
outsl
mov
push
sbb
mov
sub
jne
fwait
adc
mov
jmp
push
jb
pop
push
push
push
fidivrl
mov
mov
or
and
push
es
push
aad
imul
outsb
mov
je
fdivs
push
push
aas
add
or
lods
pusha
ds
add
push
mov
loopne
or
or
push
or
lods
mov
add
sbb
lods
xor
mov
pop
lret
xor
jae
xchg
push
add
push
repnz
cmp
or
xor
and
stc
sub
inc
sbb
clc
adc
pop
sti
dec
or
cmp
xor
loope
mov
mov
add
fisttpll
aas
push
mov
repz
or
mov
in
sbb
add
jne
les
pop
mov
mov
push
pusha
or
aas
int3
in
cmp
das
mov
push
jnp
dec
mov
cmpl
mov
out
int3
mov
add
nop
push
adc
cmp
ret
add
sbb
rolb
cmp
inc
dec
push
add
enter
in
add
stos
sbb
push
movl
mov
mov
add
cmp
jge
jl
push
pop
pop
pop
push
pop
add
in
ret
mov
add
mov
push
shr
std
pushl
fimull
mov
add
inc
inc
dec
jne
pop
jmp
mov
or
movzbl
add
mov
and
adc
enter
testb
not
ret
or
xchg
incl
idiv
pushl
push
cwtl
add
or
ret
mov
mov
add
outsl
add
push
mov
mov
add
push
scas
pop
orl
neg
add
stos
lea
inc
xchg
shlb
xor
mov
add
mov
das
mov
sub
dec
mov
out
jne
fwait
popa
fwait
insb
push
les
mull
xchg
adc
shlb
test
movw
mov
jae
mov
sahf
mov
movb
adc
pcmpeqd
in
or
push
call
mov
jmp
lock
lods
into
adc
sbb
push
add
xchg
adc
inc
lods
push
fiadds
adc
jle
clc
push
cmp
inc
adc
push
lods
imul
in
cmpsl
push
icebp
jo
add
adc
xor
mov
sbb
in
pop
div
push
cmp
push
les
push
xlat
mov
lret
incl
inc
mov
js
es
mov
ret
push
mov
push
sub
sbb
mov
cmp
or
mov
test
popa
add
push
out
add
popa
inc
cmp
int3
push
fucomp
fcoms
or
xchg
sub
je
mov
inc
insb
adc
dec
sbb
ljmp
adc
push
push
lock
or
inc
adc
xchg
lods
std
ffreep
cld
cmp
jg
jl
clc
popf
fnstenv
imul
nop
pop
and
sbb
aaa
push
sbb
or
movsb
sbb
adc
leave
xchg
outsl
loopne
xchg
cmp
fldl
or
dec
and
sti
inc
cmp
fisubs
shll
xor
shr
add
shlb
loope
mov
jne
pop
pop
mov
pop
lock
or
fmull
lock
or
or
jb
add
push
add
add
mov
push
xor
pushf
sbb
movl
push
aad
cltd
mul
lock
mov
dec
ret
fidivl
aam
sarl
mov
push
sbb
push
push
cld
jbe
fnstenv
mov
inc
push
adc
cmp
in
mov
mov
outsl
insl
icebp
cmpl
cmpb
or
out
idivl
fdivrl
jns
inc
dec
add
mov
mov
mov
addl
mov
jae
pop
push
inc
loope
dec
jo
mov
testl
jecxz
pop
out
push
imul
cmp
fwait
cmp
sbb
mov
jo
or
or
pop
adc
mov
jae
xor
xchg
lods
jo
rolb
xchg
data16
jmp
and
pop
xchg
loopne
mov
bound
mov
pop
mov
and
sbb
andb
adc
xchg
clc
roll
cmp
mov
cmc
sub
xor
fwait
jnp
jl
push
xchg
repnz
jb
mov
nop
mov
cmp
add
loope
outsb
arpl
insb
sbb
or
jbe
mov
add
fiadds
jbe
push
out
or
push
pop
movb
add
xor
pop
jbe
adc
xor
mov
xor
xor
jg
pushf
lea
xor
xor
add
sub
outsl
cmc
fcoms
fcoml
aam
enter
adc
rcr
cmpsb
popa
mov
pop
cmc
data16
cmp
int
data16
je
pushf
mov
push
sbb
rorb
inc
fistpl
or
shlb
test
test
scas
mov
or
cmp
movsl
sbb
xchg
cwtl
xor
ja
xchg
in
in
or
add
shlb
outsb
pusha
ljmp
mov
hlt
fstpt
jge
mov
add
pusha
fs
and
add
cmp
lcall
ljmp
push
push
pop
xchg
imul
cltd
pop
mov
rcrb
stc
loop
cmp
cwtl
mov
fsubrp
mov
cld
je
clc
loope
or
add
sub
sub
call
aaa
movsb
push
cmp
sbb
jno
sbb
lea
adcl
push
adc
sub
push
mov
push
mov
hlt
pop
test
les
sub
popa
pushf
into
jo
in
nop
pavgb
push
outsl
push
inc
xchg
je
int
fstps
xchg
pushf
pop
and
push
jp
jne
pop
sbb
hlt
in
jle
lea
call
mov
pop
dec
and
mov
dec
inc
jg
outsl
outsl
outsb
and
data16
je
add
je
add
pop
and
jmp
sub
loop
or
jne
sbb
in
pop
mov
dec
add
sub
popf
inc
push
fcomps
bound
cld
sbb
hlt
jg
mov
mov
cmp
pop
mov
in
jg
add
roll
repz
cli
add
shr
mov
jmp
syscall
clc
ss
or
push
mov
in
and
fsubr
daa
mov
ja
lods
or
push
arpl
arpl
push
lock
mov
jg
pop
pop
adcl
in
mov
repz
cwtl
sub
push
or
xor
or
xchg
hlt
push
or
or
pop
push
mov
mov
es
jne
cmp
jne
movsbl
fnsave
pop
mov
mov
add
dec
subl
jmp
int3
cmp
add
clc
or
pop
or
xor
cmc
push
ret
sbb
decl
adc
out
cmp
push
orl
add
mov
cltd
in
sbb
push
ljmp
pop
push
scas
add
push
adc
cmp
or
aaa
ss
pop
adc
iret
sarb
fists
sub
push
mov
sbb
shll
cmpsb
and
nop
in
popa
push
jmp
cmp
in
addl
mov
fsubrs
adc
insl
inc
mov
sub
into
dec
pop
es
lock
loope
aaa
inc
pop
jecxz
inc
sub
dec
jne
lret
pop
pop
out
inc
sub
or
int3
popf
jnp
sbb
subl
dec
cwtl
std
shlb
nop
jp
jecxz
flds
pop
push
and
cmp
ret
mov
jb
cmp
jmp
xor
xchg
or
or
mov
xchg
mov
push
and
enter
test
or
fadds
cmp
out
cmp
mov
jne
cmp
test
daa
sub
add
add
pop
cmp
mov
push
cmp
sub
add
fsts
jne
fldenv
pop
orl
push
and
sbb
nop
sub
mov
cmp
adc
aas
mov
cmp
inc
push
xor
inc
in
jo
sub
out
push
test
cmpsb
dec
insb
adc
lret
push
or
sbb
and
test
loope
arpl
fsubrl
and
xor
mov
push
push
imul
mov
mov
or
mov
in
in
lret
negb
in
cli
into
or
cmp
xor
push
insl
outsb
inc
test
out
adc
hlt
and
aad
sbb
mov
pop
mov
add
mov
add
mov
fistps
call
add
add
sub
ds
xor
insl
push
jbe
pop
ja
inc
add
jno
fnsave
faddl
sub
in
sbb
jl
xchg
mov
fs
jmp
pop
loopne
push
ja
outsb
inc
es
inc
or
es
enter
pop
mov
xchg
ftst
xchg
xor
nop
dec
mov
dec
out
and
ss
loop
int3
int3
testb
xchg
cmp
cld
scas
add
cs
sub
inc
cmp
imul
sbb
push
arpl
pop
pop
jae
fdivs
or
in
fildl
outsb
jo
inc
lds
add
adc
mov
jmp
cld
in
int3
xor
sbbl
and
dec
push
xor
adc
in
xor
pop
leave
pop
enter
mov
cmp
idivl
fs
mov
lea
fmuls
fnstenv
push
jmp
add
push
lahf
cmpsb
pop
sbb
ret
adc
xchg
push
sbb
sub
mov
cmp
or
add
jne
sbb
out
cmpsb
sbbl
jge
loope
cmp
rcrb
push
push
mov
mov
lds
dec
clc
or
adc
popa
sahf
lcall
mov
popa
and
xor
mov
mov
dec
mov
mov
or
jae
mov
mov
add
cmpsb
cmp
testl
sbb
mov
std
jge
loope
or
mov
push
or
adc
js
lea
add
rcrb
icebp
jl
shrl
js
xchg
out
jmp
fimull
mov
lea
mov
dec
pushl
lret
pop
adc
cmp
test
mov
and
out
jmp
or
or
out
add
fists
lock
imul
stc
pop
sahf
push
or
sbb
mov
dec
adc
ja
jnp
dec
cmp
jg
mov
shll
test
mov
mov
cmp
hlt
mov
adc
mov
pushw
push
inc
xor
adc
sub
add
jae
and
clc
xor
sbb
or
xchg
cmc
into
mov
xchg
ret
daa
mov
popf
inc
add
shrb
in
test
cmpb
jl
int
jl
add
add
loopne
daa
fstpt
jle
or
orb
jmp
sub
add
mov
adc
fcoml
pop
xor
movsb
pop
push
dec
mov
sub
and
filds
mov
pop
test
fs
xor
pop
inc
sub
nop
mov
or
and
pop
sbb
or
jmp
pop
stos
mov
push
xchg
sbb
sahf
pop
aad
lahf
ror
push
inc
sub
das
fs
ljmp
int3
enter
pushf
push
sub
sub
enter
pop
adc
dec
or
enter
mov
mov
imul
pop
push
pushf
jne
test
sub
jle
inc
shll
adc
push
dec
test
int3
push
push
mov
sbb
mov
pop
pop
inc
out
js
ret
mov
add
fs
mov
or
jb
iret
or
sub
and
xor
sahf
pop
xor
inc
icebp
daa
cmp
insb
in
iret
cmp
enter
adc
aas
sub
test
or
mov
sbb
cmp
mov
or
and
add
add
clc
xor
sbb
pop
nop
xchg
les
add
xor
insb
test
les
les
pushf
mov
mov
adc
push
mov
pop
shl
mov
or
xchg
fsub
mov
popa
andl
and
and
mov
pop
enter
cmpl
dec
test
jbe
xor
mov
mov
jb
insl
pop
lock
sub
mov
aam
dec
icebp
mov
sbb
div
pop
or
in
insl
cs
add
push
icebp
pop
and
notl
pop
and
sub
daa
mov
lods
sbb
addr16
ret
sbb
mov
not
xchg
sti
push
cmp
jb
and
inc
dec
jns
and
adc
inc
inc
cs
loope
dec
das
fs
xor
sbb
jnp
arpl
jge
sub
sbb
inc
cs
lods
sbb
das
fs
sbb
pop
or
enter
add
fs
mov
xor
repz
inc
cs
lock
push
test
mov
mov
enter
fadds
push
comiss
lods
mov
push
icebp
loop
dec
fwait
cmp
test
or
xor
jne
leave
mov
enter
mov
push
jne
outsl
sti
xchg
sbb
movl
or
adc
mov
fcompl
push
push
or
or
aaa
mov
cmpsl
cmp
push
jbe
push
pop
mov
fs
sub
js
movsl
jo
enter
ja
add
pop
cmpsl
or
mov
enter
push
enter
add
push
mov
and
xchg
cmp
and
add
or
inc
or
int
mov
pop
pop
cmp
cmp
out
sub
mov
icebp
jl
cmc
ja
pop
inc
mov
or
fcomps
shl
mov
add
test
push
pop
mov
adc
push
das
popa
sarl
jne
adc
jmp
mov
je
inc
pop
push
push
add
test
mov
or
adc
or
adc
mov
jnp
mov
pusha
out
adc
and
repnz
fsts
xor
push
pop
dec
pop
xor
and
jns
and
adc
repz
push
xor
mov
or
enter
and
jns
iret
and
and
adc
out
cmp
out
adc
adc
repnz
or
adc
sbb
push
and
or
imul
test
push
adc
xor
nop
lock
or
cmc
inc
inc
cs
fdivrs
or
lret
and
in
das
in
jns
ds
or
adc
or
test
add
inc
clc
lods
push
loope
jne
xchg
les
jp
push
add
pslld
cld
decb
mov
and
mov
jno
sbb
xor
mov
bound
adc
dec
lcall
popf
fiadds
imul
jmp
sbb
jl
jb
iret
mov
in
sahf
pop
push
insb
push
and
fs
jl
pop
in
xor
jns
add
and
in
pop
add
xchg
inc
cmp
mov
out
adc
cmp
in
popa
setne
xor
add
ljmp
mov
sbb
pop
push
test
sbb
cmp
or
mov
dec
negl
sub
repz
inc
xlat
loop
sbb
xlat
jo
cmp
and
and
sar
add
adc
push
je
push
sbbl
icebp
fsubl
jo
cltd
data16
cli
adc
mov
rorl
lahf
rolb
sub
repz
call
sbb
xor
push
imul
inc
push
sub
mov
sbb
push
fcoms
dec
push
mov
xor
sub
add
push
lods
add
enter
sub
inc
or
jae
cmp
mov
lods
sti
fiaddl
ret
insb
or
sbb
sub
icebp
pushf
sti
outsb
adc
gs
ficoms
sti
lea
jns
subb
push
cwtl
cmp
subb
int3
js
cmpsb
mov
cli
add
dec
push
fistpll
mov
add
xor
in
add
push
pop
xchg
adc
adc
lret
sub
sub
cwtl
insl
or
xlat
lods
sub
adc
push
daa
cmc
sbb
pushf
je
jo
and
mov
fs
inc
js
jmp
mov
nop
mov
or
insl
adc
mov
xchg
push
pop
outsl
push
data16
xchg
ljmp
popf
jmp
aaa
adc
dec
sbb
rolb
or
inc
fcoml
or
add
add
fcomps
cmp
movsl
insl
and
imul
pop
mov
push
roll
in
cmp
jge
test
pop
jge
xor
sbb
mov
cmpsl
pop
cmpb
mov
ss
rcl
out
add
push
repnz
inc
mov
sbb
inc
and
sub
or
test
or
ret
xor
mov
xchg
lds
and
add
imul
xor
sbb
icebp
test
cmpsl
push
xchg
sti
adc
int
mov
aas
add
push
stos
mov
das
dec
insb
cmpsb
or
push
adc
imul
aas
mov
and
nop
pop
jb
gs
and
mov
sbb
sub
push
in
adc
icebp
or
scas
mov
push
and
ficompl
pop
bound
or
sbb
dec
mov
in
inc
inc
cmp
push
xchg
popf
mov
mov
push
sbb
lret
cmpsl
push
pop
mov
xor
aam
jle
repnz
sti
sub
mov
sub
xchg
sub
dec
xor
push
adc
cmp
mov
loopne
scas
cmp
popf
xor
movzbl
mov
loopne
cmp
ret
dec
cltd
lahf
in
or
addl
dec
mov
add
je
push
sub
nop
and
test
adc
mov
testb
lea
jne
push
mov
sub
sbbl
cmp
push
push
fld1
xchg
push
push
scas
rcl
and
or
or
sbb
js
adc
or
pushf
and
fwait
add
inc
cmp
sarb
in
fldenv
in
or
push
dec
sbb
push
inc
jle
xchg
call
fs
or
and
mov
and
push
dec
adc
inc
pop
add
jbe
add
repnz
ficoms
lea
push
gs
int
lock
enter
out
ljmp
lods
fsub
aam
dec
in
pop
fs
loopne,pn
sbb
lods
shlb
push
pop
int3
add
insl
shrb
add
sbb
push
mov
hlt
std
or
enter
pop
rdmsr
add
xchg
mov
add
lcall
lods
fisubrs
aad
xchg
test
dec
ja
cmp
or
cmp
adc
leave
ret
iret
cwtl
shl
sbb
or
in
data16
jle
or
rcrb
mov
popf
mov
adc
or
xchg
cmpl
xor
sbb
dec
cld
or
cmp
sbb
fwait
popf
mov
fs
pop
sbb
repz
jo
xorb
dec
push
jecxz
je
shrl
int
pop
inc
insl
xor
cmp
mov
or
cmp
mov
jb
mov
inc
mov
inc
loope
push
movsb
or
adc
lock
push
xor
xchg
adc
std
mov
lcall
das
hlt
psadbw
push
clc
mov
rclb
push
or
and
orb
xor
adc
sub
in
push
push
sbb
mov
xor
es
aas
es
jle
add
adc
or
xor
in
pop
jno
or
add
insb
mov
inc
sub
and
push
mov
sbb
mov
dec
push
push
testl
adc
mov
bound
cmc
pop
mov
dec
in
adc
lock
xchg
dec
adc
xor
fcoms
mov
and
or
das
in
adc
syscall
or
scas
jo
enter
xor
enter
and
pop
push
dec
sarl
pop
aam
gs
jns
hlt
push
xor
iret
bound
xchg
adc
jne
dec
mov
loop
out
pop
aam
pop
xlat
mov
jae
jns
call
ljmp
pushf
aam
push
jne
jmp
incb
dec
mov
push
sbb
mov
mov
das
cmp
je
sbb
in
cwtl
out
imul
aaa
pop
shll
jl
jle
in
jge
push
shrb
pushf
fsubrl
inc
lods
push
orl
pop
out
push
adc
and
or
inc
inc
mov
jb
daa
pop
or
xor
inc
sub
jecxz
sub
dec
sbb
or
jp
mov
push
adc
sbb
mov
icebp
add
call
sbb
sbb
mov
fsts
adc
add
jae
add
leave
pop
jae
mov
add
sub
inc
pop
xchg
out
sub
cmp
xchg
jae
pop
sub
push
xor
and
pop
nop
mov
fs
and
xchg
xchg
cmp
jp
divb
repz
xchg
jmp
out
and
call
and
and
push
sbbb
mov
mov
sbb
mov
mov
enter
mov
rclb
adc
jnp
adc
dec
jne
adc
in
push
xor
dec
rcrl
pop
or
inc
cmp
pop
clc
sub
loop
jmp
sbb
pop
fs
xorl
test
sub
iret
sbbb
les
stc
cwtl
sub
inc
push
jb
adc
test
mov
arpl
shrl
push
ret
sub
jae
aas
inc
pop
xchg
cmp
or
fsubrs
pop
and
sub
pop
cmp
scas
and
xchg
push
sbb
sub
lock
mov
mov
jae
or
push
clc
daa
enter
pop
xchg
nop
je
mov
test
lods
in
sub
push
test
push
inc
mov
adc
mov
adc
adc
jle
push
and
dec
pop
mov
ficoms
pop
mov
adc
sub
add
push
seto
jbe
fsts
loope
lcall
lea
jo
cmc
dec
and
jge
ja
jno
cmp
and
cs
add
andb
xor
mov
mov
xchg
and
insb
out
or
xchg
mov
inc
xchg
add
popf
arpl
andb
sbb
negb
push
xchg
cli
leave
fdivl
push
sub
fucomi
jmp
dec
je
push
add
jo
push
sbb
mov
add
pop
xor
dec
mov
add
aad
ret
arpl
rclb
adc
push
les
ficompl
adc
push
jne
inc
ljmp
sti
or
jnp
sub
mov
icebp
or
mov
rorb
jae
repz
nop
adc
add
fadds
push
pop
xchg
sti
add
jbe
addr16
add
push
add
outsl
test
dec
xlat
dec
inc
lods
js
dec
ficoms
adc
data16
and
mov
pusha
and
sbb
sbb
sbb
dec
sbb
add
fldt
mov
testl
lock
pushf
mov
nop
push
and
popa
dec
mov
bound
pop
fisttps
push
sub
push
or
and
push
or
jmp
rol
add
jne
sub
cmp
or
push
adc
push
in
mov
adc
and
adc
lret
xchg
data16
push
sub
add
add
insb
or
mov
cmp
lret
adc
cld
ss
daa
xor
and
or
leave
ret
push
mov
adc
adc
test
sub
fdivl
cmc
sbbb
mov
fcoms
imul
stos
lret
mov
mov
push
jo
cld
push
jo
leave
cli
dec
sub
sbb
and
xor
mov
ficoms
insl
jbe
andb
fs
sub
push
mov
push
lods
flds
testl
daa
sub
and
cmpsl
mov
test
adc
pop
cmc
je
lea
bound
push
das
adc
xchg
jecxz
dec
pop
adc
shll
data16
dec
ds
xor
enter
sbb
pop
fcoms
cmp
adc
jb
int3
or
inc
xchg
cmp
rcrl
adc
add
cmp
add
jg
lcall
mov
js
arpl
andb
add
mov
jb
loop
mov
xor
in
and
mov
mov
in
jae
insb
int3
daa
and
xchg
daa
jbe
call
adc
or
fs
lahf
inc
mov
push
mov
jo
push
push
cld
push
xchg
mov
cmp
je
pop
or
fs
dec
call
scas
or
add
lods
insb
or
iret
das
mov
fstp
in
xor
in
mov
jg
jae
mov
sub
cmp
push
mov
outsb
and
mov
add
loope
je
cmp
ja
popa
enter
je
jb
or
mov
call
jae
adc
inc
les
add
or
dec
xchg
add
lock
cmp
insl
je
push
sub
sti
sub
add
call
push
test
push
sbb
sub
test
test
rcll
enter
in
fisttpl
inc
mov
push
cli
fcmovb
pop
js
sbb
aam
inc
cmpsb
sub
sub
add
push
hlt
or
sarb
ja
mov
out
mov
push
xor
sub
mov
lock
rol
outsl
dec
aad
jo
mov
xor
cmp
sti
clc
push
push
mov
fmull
outsb
ss
and
push
sbb
sbb
xchg
sbb
jne
insl
mov
nop
sti
adc
jo
sbbl
push
push
jns
in
add
pop
fs
and
pusha
lret
das
adc
pop
call
cmp
push
sub
dec
pop
push
mov
pop
pop
sbb
push
mov
or
cli
out
fistpll
out
xchg
xor
nop
jmp
push
sbb
xchg
cltd
and
sbb
mov
adc
inc
dec
int
add
mov
push
lcall
or
adc
in
xorps
push
and
push
in
sub
mov
or
push
je
push
or
xchg
cmp
lods
dec
jmp
mov
and
add
push
inc
pop
aam
addl
mov
push
cmp
shrl
mov
out
pop
out
pop
mov
sahf
in
jo
push
pop
imul
push
filds
mov
popf
push
add
add
ficoms
inc
cmpl
sub
std
popf
jne
adc
xor
scas
pop
cmp
imul
mov
test
adc
jo
sub
or
adc
jne
push
jl
jnp,pt
pop
add
leave
xor
sub
adc
pop
repnz
je
cmp
das
cmp
insb
dec
aad
js
daa
aam
dec
or
inc
xor
mov
shl
adc
inc
xor
mov
lods
pop
aaa
cltd
idiv
fcompp
sub
testb
sti
pop
or
or
fcmovnb
add
or
push
or
fildll
jl
fistl
mov
xor
mov
adc
jle
movsl
push
or
and
jle
sbb
inc
xchg
punpckhdq
mov
mov
mov
test
ja
jb
cmp
ja
sbb
outsl
mov
in
mov
or
clc
test
pop
mov
pop
jb
adcl
add
adc
punpckhwd
cmp
xor
and
push
pop
cmp
or
jae
xor
sub
pop
sbb
adc
roll
ret
adc
lret
xor
add
outsl
push
or
mov
sahf
push
push
push
push
dec
adc
adc
mov
sbb
call
add
cmp
or
and
sub
popf
cmp
ljmp
xor
adc
fists
sbb
jbe
and
sbb
bound
hlt
inc
movsb
aam
pop
popf
add
jge
mov
push
repz
sbbb
aam
movsb
std
addr16
out
movsb
cld
cmp
insl
xchg
add
sbb
mov
imul
push
and
xchg
push
xor
add
push
add
imul
mov
mov
fisttpll
sarl
pop
fadds
leave
cwtl
mov
and
mov
cmp
fiaddl
lock
andb
cmp
jl
mov
sbb
lea
cmpb
fucomi
pop
les
cmpb
dec
add
or
mov
mov
mov
cmp
jl
mov
je
ud2
push
jge
push
sbb
mov
adc
pusha
xchg
push
into
movsl
sahf
add
sti
cld
jne
adc
add
push
mov
and
push
push
mov
or
shrb
dec
and
jle
xorb
cltd
or
adc
sahf
mov
pop
sub
xchg
dec
call
movsb
jno
into
sub
xchg
adc
xchg
pop
test
or
xor
stc
gs
mov
lods
push
xchg
or
pop
add
pop
imul
repz
push
ja
xor
dec
push
rcll
aam
and
test
rclb
rorb
sbb
jo
addl
pop
push
push
add
inc
jb
mov
das
inc
call
jmp
loopne
in
jge
pushl
sbb
dec
mov
add
push
or
inc
ja
jecxz
or
or
xor
fldcw
xchg
sub
push
mov
outsl
addr16
inc
lock
mov
sar
jle
push
fs
or
cmp
sbb
dec
shlb
mov
inc
les
outsl
xor
lcall
adc
xchg
and
ret
sbb
and
push
fldenv
or
fdivr
or
loop
push
dec
mov
jle
paddsw
jmp
in
fdivrl
or
jge
test
mov
jle
pop
mov
rolb
not
push
and
jne
xchg
or
jle
dec
test
add
push
inc
cmp
dec
ja
icebp
mov
xor
dec
rcrb
jecxz
or
push
sbb
shrl
aam
ret
sub
mov
fsubrs
js
lret
pop
ja
nop
jmp
and
nop
insl
add
std
add
mov
insb
adc
xchg
jo
scas
les
pop
mov
ret
test
xchg
sub
fnstenv
adc
push
addb
xor
faddl
xor
jb
pushf
les
pop
adc
jae
pop
sub
or
xor
shrb
xchg
in
cmpb
and
int3
xlat
or
cmp
jge
jle
adc
inc
pop
int3
xor
jne
push
push
pop
inc
test
ds
ss
inc
in
les
inc
das
fmull
cmpsl
fs
mov
inc
call
mov
add
add
xor
push
jle
cmp
addl
hlt
mov
sbb
dec
les
mov
jae
push
cmp
mov
ss
cld
out
loope
in
sbb
pop
jge
xor
dec
pop
mov
fidivrl
cmp
mov
add
or
inc
pop
and
inc
mov
jae
and
fadds
out
ja
sbb
orb
mov
mov
aas
push
lods
subb
and
push
inc
mov
cmp
rcll
xlat
xor
push
sbb
push
popf
jae
and
call
dec
pop
xchg
inc
mov
adc
xlat
xchg
sub
in
push
aad
fwait
xor
adc
adc
push
adc
pop
xchg
je
pop
sbb
out
lods
push
lock
push
dec
cwtl
js
bound
subb
leave
xchg
dec
leave
imul
popf
sbb
out
repz
les
sbb
inc
mov
pop
add
mov
inc
sub
ss
inc
cmp
fs
js
jnp
xchg
sub
rcr
fs
push
out
xchg
lock
loope
add
push
lahf
add
xchg
mov
dec
pop
lret
push
fwait
jmp
hlt
mov
je
cmp
push
out
sti
sub
lods
and
add
and
arpl
js
xor
cld
push
cld
cmp
mov
mov
inc
cli
ss
cmp
aam
inc
cmp
fiaddl
and
jae
cli
aam
sbb
imul
mov
or
adc
push
xor
loope
xbegin
cwtl
mov
jbe
ljmp
loope
lret
in
outsb
roll
push
jb
mov
imul
pusha
ljmp
or
jmp
insb
inc
jo
or
enter
cvtps2pd
ret
jo
push
xor
cld
arpl
fdivs
mov
sbb
clc
cld
mov
sub
xchg
insb
push
sbb
fisttpll
clc
in
mov
sub
cld
mov
pop
jne
mov
in
push
pusha
or
adc
inc
push
out
sub
or
mov
cmp
mov
cmp
jo
out
push
xchg
lods
imul
ja
push
data16
data16
out
add
sbb
js
adc
and
add
in
mov
popf
bswap
xchg
xor
hlt
ljmp
add
cmp
setg
or
push
inc
mov
andl
pop
push
pop
jae
dec
pop
add
outsl
push
rolb
movsl
and
pop
cmp
inc
cwtl
xchg
inc
mov
popa
cmc
andl
and
je
mov
in
out
add
or
dec
pop
je
pop
pop
add
cmp
or
jmp
inc
mov
add
call
fistpl
enter
push
insl
mov
mov
add
push
jecxz
or
les
mov
je
push
bound
jmp
push
inc
cmp
loop
fidivl
cld
jge
inc
nop
iret
lret
fisubrs
pop
adc
cld
cmp
cli
call
enter
std
les
jns
mov
mov
sbb
fistl
fs
aam
bswap
ja
jo
int
mov
add
call
hlt
or
pop
mov
jne
inc
testb
adc
mov
inc
call
fisubrs
out
sbb
ret
test
inc
movb
sti
or
inc
add
je
xchg
rclb
adc
clc
scas
mov
sub
mov
fimuls
jecxz
push
push
and
imul
mov
push
mov
adc
test
or
sub
dec
mov
jbe
dec
lea
dec
add
pushl
push
cli
incl
arpl
pop
xor
dec
into
lock
mov
mov
gs
xor
in
cmp
sbb
sub
jle
cs
lds
and
pop
jmp
fmulp
fistl
imul
mov
arpl
push
mov
cld
pop
inc
mov
jg
add
pop
mov
shrb
push
or
shll
xchg
lock
je
mov
mov
inc
or
rcl
std
sub
outsl
enter
adc
je
xor
mov
dec
pop
push
and
or
lock
or
lret
jb
dec
or
adc
push
lcall
jbe
lods
pop
sbb
je
sbb
icebp
mov
xor
or
push
rorb
inc
dec
out
push
sbb
dec
pop
mov
or
xor
and
push
rol
mov
or
push
cmp
ffreep
pop
xchg
arpl
add
mov
push
out
cli
rolb
mov
clc
lds
push
jbe
push
inc
test
sub
add
or
xchg
cmpb
adc
xor
pop
test
sbb
mov
ljmp
jae
call
in
hlt
call
ja
popf
pop
jne
dec
xchg
lds
test
fwait
dec
adc
mov
push
jo
pusha
inc
bound
pop
in
jo
push
mov
out
pop
fisubs
mov
lock
adc
mov
mov
aaa
push
jl
mov
or
rolb
pop
mov
add
call
test
add
pop
mov
cli
and
int3
sbbb
into
lcall
push
dec
paddw
sar
pop
clc
cli
imul
or
inc
jne
pushf
or
inc
or
pop
outsb
and
or
pop
sub
mov
push
xchg
clc
or
mov
jne
call
ljmp
mov
int3
xor
das
push
mov
mov
mov
add
movb
add
cs
push
mov
jl
xor
leave
pop
lock
jnp
inc
js
dec
dec
sbb
dec
dec
mov
leave
fisttps
mov
adc
sub
xchg
mov
add
je
pop
add
lret
push
stos
or
jmp
out
or
add
mov
push
addr16
inc
enter
jmp
mov
sti
out
dec
inc
and
mov
or
or
push
test
adc
icebp
jne
sbb
mov
add
pop
decl
pop
mov
or
add
pop
cmpb
pop
hlt
stos
and
push
inc
in
out
adc
cmp
jne
cmp
clc
jg
aaa
or
inc
xchg
jno
mov
cmp
jge
cmp
pop
add
xchg
bnd
bound
jne
cmp
jl
cmp
jg
or
roll
je
dec
cmp
mov
insb
lahf
add
push
clc
mov
jg
stos
push
mov
andl
mov
pop
and
shrl
push
sub
mov
push
xor
push
pop
inc
sbb
or
ss
pop
insl
imul
inc
mov
pop
jmp
mov
jmp
sar
lret
jmp
mov
cmp
jne
mov
cmp
je
jmp
or
or
cmp
add
aas
outsb
in
out
xlat
data16
pop
xor
adc
push
test
pop
jle
mov
fadds
je
pop
jmp
mov
fidivrs
fcomps
xor
add
cmc
push
test
pop
out
jnp
pop
cmp
xorb
add
jo
mov
pop
or
bound
cmp
inc
out
or
xor
fs
add
cmp
or
push
mov
or
call
push
cwtl
xchg
stos
lock
add
inc
imul
sbb
or
leave
pop
rcr
rclb
divl
data16
movsl
mov
and
jl
mov
sub
push
cmp
in
std
ja
sbb
pop
push
inc
andl
or
outsl
mov
jno
lock
lret
cmc
xlat
add
in
pop
cmc
xchg
filds
in
dec
sub
sub
fisttpl
adc
xchg
sub
mov
cmp
test
jmp
ret
int3
int3
and
scas
ja
dec
and
test
push
pushl
std
inc
and
stc
cmp
jb
neg
and
jno
push
ljmp
rorl
cli
bound
roll
mov
and
jmp
stos
cmp
and
cmp
ds
pop
pop
add
jle
mov
clc
inc
push
movsb
and
into
call
ss
imul
add
sti
or
jne
or
add
or
add
add
out
movb
and
cmp
decb
add
int
jns
jmp
add
jmp
pop
lods
pop
pop
std
jmp
cld
pusha
or
sbb
in
pop
sbb
inc
out
insl
pop
cmp
cltd
int
outsb
imul
xor
divb
ret
pop
cmp
imul
cmp
data16
inc
cwtl
insl
leave
or
or
mov
jae
adcb
sub
imul
adc
in
inc
add
adc
insl
ss
jg
jl
dec
in
js
push
fstpl
int3
sbb
and
sub
out
jnp
movb
add
mov
fsts
lods
imul
negl
adc
pop
inc
cmp
or
cmc
inc
mov
jmp
ret
adc
jne
lea
mov
dec
sub
aas
add
loopne
xchg
xor
mov
shrb
je
jmp
das
xor
ret
jo
xorb
inc
decl
movl
jp
int3
fsts
test
pop
lea
mov
test
push
sub
ja
insb
jecxz
sub
push
or
jo
loope
jne
aaa
adc
pop
test
fneni(8087
cmp
adc
cmp
sub
adc
lret
imul
fisubrs
cmpl
and
popf
or
add
rclb
aad
push
cli
push
or
pop
popa
mov
test
xlat
mov
jae
inc
pop
loope
mov
add
fimull
rclb
adc
rclb
arpl
sbb
es
outsb
and
das
cmpb
adc
loope
cmp
jb
rep
jmp
lea
sbbb
xor
xor
add
enter
jge
lea
roll
sbb
adc
add
or
rorl
mov
add
xchg
mov
int3
lea
jns
gs
and
in
into
es
and
inc
aas
mov
push
insb
add
sti
mov
cmp
inc
mov
mov
pop
cmpsb
imul
imul
cs
add
sub
lock
or
negl
lods
rclb
idivb
pop
popa
pop
in
popf
or
mov
xchg
sub
cmp
mov
and
std
jecxz
ja
and
adc
sarb
mov
stc
sub
jg
popa
xor
nop
cmp
pop
add
stc
mov
pop
dec
push
mov
xchg
xor
dec
pop
mov
fidivs
nop
daa
and
sub
stos
sub
mov
pop
aam
faddl
mov
in
hlt
cld
add
pop
adc
int
xchg
sbb
sbb
dec
shll
or
and
xor
or
fwait
scas
cmp
xor
orb
or
mov
jae
adcl
jae
or
jns
or
insl
test
fcomps
out
push
mov
or
push
dec
push
pop
loop
mov
rclb
cli
movzbl
push
test
push
mov
rcll
insl
mov
mov
or
aaa
mov
adc
inc
jmp
adc
mov
test
lods
lods
push
sub
movaps
fldt
inc
or
cmp
add
pop
fwait
lea
push
pop
mov
xor
iret
cmp
lret
add
cmpsl
mov
mov
ss
pop
aam
cli
sbb
cmp
add
add
or
cmp
and
movsl
mov
out
sbb
lods
cmp
sub
popf
or
or
shrb
nop
shrb
clc
shl
inc
ret
fwait
ret
pop
mov
cmc
add
jmp
add
pop
xor
lret
fs
shl
mov
jo
leave
and
mov
xor
inc
in
rol
add
std
cld
loopne
scas
mov
cmp
adc
xchg
mov
out
outsb
subb
test
pop
jae
fs
adc
mov
add
mov
xlat
pop
mov
xchg
cltd
and
push
jl
flds
mov
xchg
cmp
jae
test
bound
lds
cmp
xor
adc
adc
mov
inc
dec
lods
sbb
sbb
and
push
or
inc
or
inc
je
pop
mov
fnstsw
test
sbb
xchg
jmp
adcl
xchg
sarb
jne
mov
iret
adc
sbb
or
push
mov
mov
push
or
jo
rol
out
js
xchg
add
ljmp
dec
add
or
or
orl
push
in
dec
inc
pop
cli
cmp
sub
push
mov
or
movsl
mov
sub
ret
push
xchg
xor
mov
jns
scas
mov
addl
cmc
push
scas
inc
out
dec
mov
or
pop
dec
sbb
cld
xchg
adc
xor
sbb
jp
ja
add
ja
adc
adcl
dec
test
lcall
add
push
scas
adc
sarl
aas
loope
mull
sbb
fisttpl
std
lea
and
iret
push
pop
sub
pop
inc
pop
cmp
inc
or
in
xchg
movsb
push
sbb
add
or
cmp
je
icebp
pop
sti
adc
clc
nop
clc
mov
lea
add
mov
int
ret
lahf
sub
pop
sub
add
test
shr
shlb
mov
or
ret
pop
inc
insl
mov
xor
jp
outsb
fbld
xor
fstpl
or
jmp
mov
lds
cmp
adc
pop
mov
fsubr
jne
sub
pop
add
lods
pop
add
push
in
arpl
fdivrl
movsl
loop
subl
jnp
fisttpl
jo
or
rcr
pop
xor
and
sub
fsubrl
cmpps
mov
sub
ret
clc
in
mov
ret
xchg
jbe
dec
add
jnp
imul
ja
sub
or
in
and
cld
movsl
test
pop
sub
sbb
sub
push
jne
or
jno,pt
mov
cmp
or
sub
jbe
jb
scas
testb
movl
pop
adc
adc
das
neg
sbb
mov
mov
adc
mov
das
inc
and
clc
test
pop
fists
stc
mov
nop
lea
inc
cwtl
push
add
rorb
and
es
push
cmp
mov
xor
je
mov
repz
test
leave
cmp
cli
ret
ja
xchg
dec
dec
not
rcrb
orl
push
sub
lea
push
adc
push
sbb
sti
divl
mov
inc
cmp
je
push
outsl
mov
or
nop
ret
shl
push
or
aaa
inc
sarl
stc
xor
push
in
loopne
or
or
cld
push
xor
or
jne
int
jb
inc
cld
cmp
mov
addl
fmul
test
cltd
or
faddl
into
cmp
xchg
sub
push
rcrl
xchg
std
cld
lret
push
outsb
cmc
out
cli
mov
lea
rep
push
sbb
mov
mov
sahf
and
push
add
jecxz
inc
add
adc
push
jo
in
jecxz
enter
adc
daa
negb
pop
out
pop
sub
jecxz
mov
dec
xor
fildl
inc
data16
or
push
not
bound
sub
shl
and
pop
clc
and
sub
pop
lret
mov
testb
pop
out
cmp
add
mov
add
or
loop
in
fisubrl
ret
mov
cld
xor
lods
xchg
fwait
mov
push
add
or
imul
mov
or
push
fdivs
adc
dec
sbb
je
je
or
icebp
pop
insl
adc
push
pop
pop
aaa
mov
shr
rcr
shr
rcr
or
pop
mov
sbb
push
cmp
out
and
or
sub
sub
outsb
jmp
sbb
adc
or
outsl
rolb
imul
sbb
int3
fcomp
sbb
mov
shr
inc
adcb
nop
lds
les
or
mul
adcl
or
add
popa
shrb
jb
bound
scas
rolb
mov
rcrw
scas
push
sbb
stc
enter
or
adc
adc
jo
ficoml
jbe
mov
cmp
scas
inc
mov
and
insl
rorl
or
sub
aam
enter
neg
pop
mov
les
lret
jle
inc
aaa
loopne
mov
adc
popa
sub
mov
or
xor
sub
cmp
stos
mov
lods
movsb
adc
rclb
sub
dec
loopne
push
rcrb
sub
sbb
pop
cmp
outsb
adcl
mov
in
scas
or
in
lcall
jne
push
push
loop
shrb
insl
mov
push
outsb
out
inc
sub
xchg
push
das
inc
int3
xchg
and
and
xchg
pushf
pop
push
scas
add
pop
adc
insl
mov
jmp
lods
push
add
adc
mov
leave
dec
or
pop
mov
loope
push
loopne
orl
add
pop
adc
jo
testl
fwait
nop
jne
outsl
imul
sub
mull
or
push
je
inc
loopne
jle
jle
sub
lea
push
pop
sbb
decl
loopne
adc
mov
in
lods
mov
push
xor
lret
sar
cs
pop
sbb
pop
shll
push
aad
cmpsb
dec
sub
enter
jbe
rcr
add
pusha
and
in
add
mov
test
cltd
in
mov
mov
jmp
add
push
cmp
push
popa
xor
or
lcall
mov
nop
fstps
add
add
stos
mov
mov
inc
dec
lock
add
in
inc
stos
mov
adc
sbb
push
daa
cltd
push
lcall
mov
and
jge
jl
add
adc
js
push
push
mov
xchg
dec
psadbw
lahf
insb
cli
jbe
out
cltd
clc
pop
xchg
les
xchg
or
add
inc
repz
mov
push
adc
fsubr
ss
cld
aam
test
dec
sub
mov
add
je
cs
dec
dec
je
outsb
scas
push
in
cmpsb
inc
cmp
or
add
adc
addb
sub
stos
pushf
fstpl
insl
jge
or
cld
fsubs
mov
sti
jbe
test
shr
jmp
jp
push
clc
pop
mov
xor
cmp
push
das
outsl
insl
xor
dec
mov
insb
je
push
jnp
sub
or
mov
ret
or
xor
ss
jle
xor
xchg
push
ror
addb
rol
add
aam
mulb
sub
add
jae
test
add
sbb
jo
push
push
mov
mov
outsl
gs
xchg
sbb
mov
adc
fwait
xchg
pop
call
aad
fs
add
push
sbb
fsubs
sub
cli
mov
xchg
mov
or
hlt
data16
insb
dec
sbb
xor
jo
or
add
mov
add
andl
xlat
js
or
jmp
and
add
adc
inc
gs
mov
inc
sbb
mov
mov
sarb
cmpb
xchg
add
push
scas
push
adc
mov
sti
push
je
xor
mov
add
adc
jge
je
dec
jge
add
les
sub
and
and
push
mov
dec
add
sub
int3
data16
pop
pop
shr
jecxz
out
mov
adc
test
mov
rcr
ds
insl
adc
xor
mov
fsubl
jle
pop
add
add
jo
rcrb
mov
push
jmp
rcl
push
cmc
and
lcall
xchg
sbb
dec
mov
pushl
inc
jne
call
sbbb
jnp
mov
sbb
pop
mov
out
adc
pop
aas
sub
adc
xorl
pop
ret
mov
rolb
add
mov
test
mov
and
mov
sub
sar
inc
sbb
adc
call
or
es
insl
xchg
repz
int
outsl
mov
adc
inc
ljmp
mov
or
inc
jmp
inc
and
cmp
push
cld
push
push
and
inc
jae
fsubrl
mov
add
enter
pushl
ljmp
je
cmp
xor
pop
cli
inc
cmp
fs
pusha
pop
cwtl
sub
rcrb
jmp
and
or
or
cwtl
sbb
jg
jl
jae
mov
rorb
loopne
cmc
pushf
jnp
fs
in
push
or
mov
add
add
ljmp
imul
xchg
mov
or
sbb
jmp
push
das
ljmp
js
push
loop
jg
sbb
push
aad
jp
mov
mov
js
or
sbb
rcr
ret
xor
jns
sti
cmp
add
das
fistpl
inc
hlt
hlt
mov
jmp
push
sub
fidivs
fidivl
sbb
adc
je
and
shufps
aam
add
sbb
vmaxsd
cld
test
es
mov
sub
jmp
sti
xchg
lods
out
je
and
jne
add
sbb
mov
add
test
arpl
ljmp
sub
or
add
mov
insb
inc
mov
imul
inc
cmp
mov
lea
testl
fldl
push
inc
adc
xor
add
pop
pop
mov
dec
fistl
adc
adc
pop
and
ja
test
lods
lods
shll
insl
sub
aaa
shlb
pop
pop
add
dec
test
xchg
repnz
mov
lea
push
popf
aam
sub
data16
mov
pop
decl
js
adc
hlt
ss
pop
out
jmp
pop
or
sbb
clc
stc
pop
mov
insl
sbbl
fldcw
int
jle
inc
sbb
or
jecxz
add
cmpl
and
jg
data16
or
sub
xor
xchg
insl
jle
cmp
xor
push
inc
sbb
ss
aas
xchg
imul
dec
loop
fiadds
xor
mov
arpl
leave
inc
mov
fisttpll
sbb
pop
addb
stc
pushl
mov
ja
sub
and
add
sar
rcl
dec
pop
andb
push
gs
xor
into
std
repnz
or
stos
or
adc
add
add
mov
enter
and
xchg
icebp
addr16
ss
cmpw
ljmp
sub
cmp
add
mov
mov
mov
mov
cmp
inc
add
adc
push
ljmp
andl
sarl
add
jb
mov
sti
or
mov
xorl
or
and
xor
lea
roll
add
cmp
jl
cmp
jg
sub
add
mov
in
inc
push
loopne,pt
dec
xchg
cmpsb
in
xchg
sbb
dec
push
mov
push
fsubrs
inc
dec
adc
push
push
xor
inc
jno
jge
pusha
pop
je
push
sbb
shlb
xor
enter
arpl
dec
sarl
mov
jmp
repnz
bound
xor
mov
mov
sbb
inc
lods
add
test
mov
push
pushf
xchg
and
test
int
xlat
fadds
pop
xor
push
fisttps
mov
mov
sub
in
daa
outsb
flds
int
xchg
pusha
and
lods
repnz
pop
lock
add
mov
ret
push
cmp
add
and
mov
mov
sub
out
cmp
jg
add
add
push
lea
decb
clc
fsubs
shll
sub
cmp
in
and
pop
int
jmp
jbe
cmp
cmp
xchg
cli
aaa
sub
cld
sub
shr
iret
imul
inc
cltd
cmp
push
dec
lcall
add
lea
dec
push
cld
call
jbe
into
mov
test
pop
fidivrs
cli
add
cmp
decb
pop
mov
cmp
push
inc
mov
mov
push
mov
jmp
xchg
test
jg
xchg
shll
pop
mov
sub
sub
and
pushf
mov
int
push
pop
jo
pop
das
jge
pop
jmp
pop
push
mov
add
pop
add
xchg
mov
push
movsl
lcall
pop
mov
shlb
cmp
jbe
sti
add
mov
pop
cmp
pushf
mov
inc
adc
adc
cmp
lret
mov
fidivl
mov
jno
cmp
or
xchg
mov
and
add
jg
xor
pop
lea
mov
in
jl
push
inc
dec
cltd
pop
fwait
adc
or
sub
cmpsb
hlt
je
or
pop
roll
lods
mov
xor
cs
add
or
push
push
paddd
mov
jae
cmpsl
cmpps
lea
insl
mov
pop
inc
lods
or
sub
movsb
sub
mov
ljmp
test
pusha
push
jno
xor
div
sbb
or
fwait
pop
fdivr
add
lsl
push
jo
adc
jnp
push
fwait
pop
xor
push
or
cmp
fimuls
mov
lea
inc
or
hlt
adc
sbbl
incb
sbb
test
pop
adc
adc
cmc
mov
adc
mov
enter
xchg
add
insb
in
adc
mov
inc
inc
or
jbe
scas
mov
insl
or
push
xchg
dec
push
cmc
mov
clc
adc
ja
andb
push
lea
sub
xor
and
and
and
add
addb
cmp
jge
test
inc
lods
sub
jmp
shr
ret
not
call
dec
pop
or
mov
sbb
mov
lods
loopne
cmp
sub
decb
iret
imul
cmp
std
outsb
xlat
pop
sbb
pop
jne
mov
cmp
es
add
pop
and
iret
into
cmp
scas
jnp
aas
adc
jmp
es
fisubs
or
dec
push
push
rorl
sub
mov
pop
adc
cmp
pop
idiv
push
push
sti
mov
cli
add
xor
mov
pop
jl
inc
mov
mov
jo
push
cs
push
inc
or
add
xchg
xor
pop
addl
xor
and
or
je
mov
jmp
subl
cmp
inc
xlat
and
pop
iret
jl
shl
inc
mov
testl
xchg
jmp
incb
aas
jle
xchg
movsl
out
negl
dec
popa
dec
or
iret
call
loope
push
repz
and
mov
add
pcmpeqw
jns
and
jmp
bound
leave
dec
adc
xchg
adc
test
sub
cwtl
and
push
call
jns
jne
or
or
out
dec
mov
icebp
icebp
mov
fdiv
outsb
sub
popf
movsl
ror
mov
push
decb
jge
rcll
std
adc
mov
shr
or
pop
mov
or
das
sub
fcmovnb
ds
sub
mov
lods
inc
popa
mov
push
test
xchg
and
sub
mov
mov
cld
mov
ret
outsl
mov
and
adc
cld
lahf
jecxz
pop
add
and
sbb
sbb
shll
cmp
subl
lea
adc
dec
xchg
or
or
jo
pop
jne
pop
mov
inc
jp
adc
mov
and
lcall
push
ret
les
or
lea
sub
push
repz
push
jae
mov
lock
mov
dec
clc
add
cmp
pop
imul
lds
jle
mov
inc
xor
or
add
push
loopne
test
mov
jno
inc
cmp
dec
loopne
ret
aaa
imul
sbbl
or
add
dec
push
sti
test
out
insb
and
adc
or
shll
cmpsl
lea
add
cmp
imul
ja
jl
mov
pmuludq
inc
cld
lock
xchg
pusha
xor
out
bound
movl
lock
lock
popa
sbbb
jb
or
add
cmp
mov
lods
or
inc
mov
out
mov
enter
jp
dec
inc
sbb
jl
js
add
cltd
ljmp
loop
fsubrs
out
cs
add
int3
mov
push
mov
fs
test
cmp
out
adc
sub
aad
sahf
mov
mov
add
inc
push
shlb
jp
pop
repz
mov
push
jno
mov
mov
mov
pop
imul
jne
xor
lea
jae
jns
adc
inc
sbb
aas
jp
jle
or
rolb
std
mov
ret
rorl
mov
dec
popf
adcl
jl
adc
fidivrl
or
clc
jae
orb
jg
cmp
movl
mov
repz
fcoml
jmp
push
cld
adc
subb
stos
je
sub
daa
mov
sub
xor
xor
jmp
add
mov
mov
inc
mov
scas
test
mov
or
insl
inc
add
ss
jbe
jo
adc
aas
push
aas
mov
test
into
push
add
jns
insb
push
test
or
mov
push
pusha
loopne
fistpll
outsb
or
das
sub
jmp
rolb
push
push
mov
je
cmpl
enter
push
inc
and
or
push
cli
roll
pop
xor
push
sub
jno
icebp
push
adc
call
cmc
aaa
jbe
sbbl
mov
leave
je
pushw
fcomps
test
xor
or
xchg
sbb
jb
dec
fmuls
lea
add
data16
test
in
lock
push
int
js
sub
pop
push
sub
sub
dec
or
icebp
pop
mov
enter
mov
add
and
arpl
sub
cmp
push
hlt
xor
cli
gs
dec
fstl
xchg
inc
pop
pop
pop
rolb
mov
xchg
lahf
jle
mov
pop
std
jbe
popl
mov
stc
icebp
mov
cmp
jl
cmp
jbe
push
sbb
xchg
lods
movsb
jne
sbb
xor
push
add
mov
enter
inc
popf
pop
jle
ljmp
jae
mov
inc
push
loop
jnp
sbb
out
mov
mov
es
cmpl
jbe
cmp
rolb
cmp
arpl
xchg
mov
or
pop
aam
add
or
lcall
add
imul
xchg
gs
mov
xor
testl
push
add
jle
add
inc
xchg
fneni(8087
xor
pop
divb
loopne
fcompl
add
push
mov
repnz
inc
sub
mov
push
mov
mov
je
sbb
orb
cld
mov
fcompl
sbb
aam
stc
dec
cmp
jae
cmp
sbb
mov
or
inc
or
pop
test
adc
pop
or
add
pop
mov
rclb
pop
xchg
mov
sbb
or
pop
mov
jne
rcrl
adc
push
sbb
xchg
arpl
add
mov
jnp
inc
or
lea
aad
xchg
popa
jb
pop
mov
push
jae
add
sub
jae
aas
sub
test
mov
inc
jno
mov
xor
add
aam
add
repz
sbb
fistpll
pop
add
cmp
inc
inc
dec
push
mov
dec
cmp
add
fdivrl
push
mov
cltd
jno
ret
jmp
ljmp
jne
mov
push
adc
push
xor
jbe
push
cwtl
inc
push
pop
add
push
lahf
pop
and
sub
in
insl
stos
sbb
xor
jle
jmp
ret
sub
jb
out
jmp
jae
jge
cmp
lock
aaa
push
ret
push
pop
inc
rorb
leave
xchg
test
test
add
cmp
jne
outsl
test
sbb
mull
mov
roll
add
or
pop
call
cs
pop
je
arpl
xchg
sbbb
cs
insb
add
pop
cmp
inc
inc
shrb
es
xlat
xor
or
mov
mov
pop
andb
je
push
adc
sbbl
adc
mov
mov
adc
or
mov
and
fdivrs
sbb
clc
push
data16
sti
lcall
inc
pop
sub
imull
pop
out
or
pop
adc
dec
rcr
xchg
psadbw
inc
inc
lahf
addl
or
push
xchg
mov
dec
jne
popf
fistl
enter
outsb
incb
test
mov
jle
je
lcall
test
xchg
orl
xorb
sbb
jmp
popf
or
xor
fwait
test
or
fs
testb
push
add
push
cmp
lock
mov
mov
cmp
jecxz
xor
jne
push
mov
scas
js
mov
mov
sub
and
insb
sbb
or
inc
cmp
push
mov
jo
popf
stos
andb
and
fcmove
push
sbb
inc
or
out
cwtl
popl
add
xor
mov
xor
imul
test
jbe
push
stos
push
aaa
xor
ret
xor
iret
stc
ljmp
out
dec
jne
sar
cmp
cmp
jmp
mov
mov
and
dec
sub
popa
mov
xor
call
dec
lock
and
sub
dec
addr16
xchg
lods
fidivl
adc
mov
daa
add
inc
jge
sub
sbb
cmp
pop
sbb
jb
cmp
and
mov
add
and
or
jmp
mov
or
cltd
pop
mov
inc
cmp
add
and
pop
shll
mov
insb
clc
push
jg
pusha
sub
je
add
mov
in
je
push
xlat
dec
dec
lods
pop
nop
fstps
mov
or
jmp
adc
adc
mov
testb
or
cwtl
scas
jne
pop
jl
fcmovnbe
pop
cld
lar
mov
out
jne
or
test
bound
insl
mov
clts
mov
rcrb
adc
push
les
mov
xor
sub
pop
mov
mov
push
cmp
or
subb
daa
push
movsb
mov
mov
add
sbb
sub
addb
dec
mov
mov
push
in
fistps
add
add
or
mov
mov
pop
cld
cmp
cmp
mov
jle
mov
mov
mov
fisubrl
popf
push
inc
xor
jl
jmp
mov
xor
push
adc
je
inc
loope
add
mov
icebp
cmp
mov
je
jbe
cmc
out
inc
mov
insb
xchg
and
jbe
add
xchg
mov
enter
call
clc
lds
popa
mov
enter
aaa
mov
pop
mov
jne
loop
popa
jl
push
idivb
cmpsb
mov
jle
pusha
fs
icebp
jge
rolb
push
imul
mov
mov
or
nop
clc
sar
jp
enter
add
add
or
add
push
xlat
call
push
lcall
jno
test
inc
push
dec
and
or
add
add
or
pop
xchg
pop
cmp
xchg
cmc
sub
jge
fldl
in
fldl
fsubl
inc
ja
mov
push
call
sbb
loopne
nop
in
push
mov
adc
push
insb
xor
and
ret
lods
dec
daa
sbb
ret
sbb
add
dec
push
leave
es
push
jno
cmp
inc
cmp
repnz
add
push
daa
std
pop
and
aam
or
inc
mov
mov
mov
sbb
mov
jne
mov
mov
push
loope
or
ficompl
sub
or
int
sbb
inc
in
xchg
dec
cmpb
je
cmp
jne
insl
and
add
adc
mov
testb
daa
fcmovnu
add
push
jb
push
pop
add
je
hlt
sbb
sbbl
push
xchg
fs
adc
orl
cld
icebp
mov
cmpb
daa
pop
mov
and
push
fisttpl
das
push
mov
lahf
rcll
sub
fcomps
repnz
adcb
push
outsb
or
push
mov
xor
mov
cmp
rolb
lret
jo
popf
sbb
movb
inc
sbb
add
or
dec
mov
inc
jbe
pushaw
mov
aaa
push
sub
div
xchg
js
add
inc
push
cs
or
add
inc
clc
ret
es
pop
add
jns
neg
adc
adc
cld
or
idiv
add
push
mov
insl
or
jmp
add
xchg
mov
add
pop
push
fwait
xchg
mov
pop
pop
pop
xor
or
cltd
inc
pop
mov
mov
rclb
jmp
cmp
data16
or
cmp
pop
mov
lds
jp
jg,pn
jne
movb
jg
icebp
daa
sub
aam
push
pop
movb
pop
inc
xchg
sbb
add
sbb
adc
in
ljmp
aad
rcr
mov
scas
add
add
fidivrs
lahf
sub
push
sbb
adc
jne
aas
and
pop
mov
add
dec
mov
sbb
ljmp
aas
idivb
setl
mov
dec
pop
mov
inc
sbb
or
mov
and
push
pusha
xchg
fildl
mov
adc
xor
mov
mov
add
andb
sub
or
xchg
sbb
and
ja
arpl
inc
xor
bound
and
into
lds
adc
mov
jns
sub
sub
push
clc
push
adc
test
pop
push
adc
fcomps
shlb
jmp
cmp
addl
shrb
movsb
mov
andb
add
pop
sub
push
out
insl
lods
cld
and
movsb
pop
lea
inc
add
or
or
sarb
push
adc
mov
out
mov
mov
lcall
icebp
xor
lods
add
mov
in
loopne
xchg
push
push
mov
and
inc
pop
mov
add
lret
rep
adc
incl
inc
hlt
jmp
popa
in
mov
dec
jg
je
push
sub
shrl
dec
je
dec
cmp
arpl
inc
inc
test
jne
add
add
mov
and
add
sub
repnz
daa
and
jmp
ss
xchg
lret
je
icebp
jmp
cmp
sti
jmp
decb
sti
pop
or
fiaddl
mov
jmp
pop
aam
nop
adc
add
push
jo
xor
adc
push
push
call
dec
cmp
je
cmp
jmp
dec
add
jnp
push
mov
sti
popf
outsb
inc
les
rol
push
pop
std
into
les
jo
femms
rolb
xchg
decl
push
insl
movsl
fidivrl
icebp
stos
add
or
pop
outsl
pop
add
or
arpl
sub
fs
add
mov
add
cmp
xchg
jo
add
sub
push
and
add
test
xchg
in
cmc
push
mov
insl
sub
in
cmp
outsb
movsb
out
adc
mov
sbb
mov
add
pop
insb
adc
hlt
push
aad
mov
movsb
cmpsb
push
cmpsl
mov
test
or
loopne
pushl
jle
or
pop
adc
add
outsl
pop
sub
and
mov
fs
mov
data16
or
pop
and
sti
sub
enter
test
pop
icebp
shll
cmp
jbe
push
gs
sbb
add
popa
daa
es
sub
and
enter
dec
dec
insl
xor
xchg
lahf
push
xchg
insl
ret
mov
fistpl
dec
or
int3
andb
movsl
addb
sub
pop
sbb
mov
cmp
notl
pop
out
clc
cmp
mov
ljmp
jae
and
incb
pop
mov
call
enter
or
fsubrl
add
cmpsb
jl
dec
add
sub
mov
mov
scas
xchg
lds
popa
sub
stc
or
aas
pop
and
sti
faddl
les
mov
js
pop
inc
icebp
add
push
dec
cmp
or
pop
cwtl
pop
inc
sbb
sbb
das
pop
pop
inc
bnd
jnp
insb
aaa
push
pop
pop
cmpsl
pop
cs
test
test
cmp
fistps
pop
insb
inc
inc
push
cltd
add
js
iret
movups
call
das
pushf
inc
fdivr
push
jp
jnp
lds
or
and
add
mov
add
pop
inc
cmp
insl
test
test
cmp
pushl
pop
call
jmp
ret
cmp
ja
cmc
fisttps
sub
inc
mov
mov
jmp
inc
outsl
pushf
pop
mov
lret
sbb
jne
fs
jmp
stc
mov
lock
jl
inc
jnp
fwait
jne
add
add
sub
sbb
scas
cmp
shl
inc
xchg
push
lcall
in
cmpl
dec
mov
out
fs
sub
shl
arpl
add
dec
or
pusha
sti
lock
je
into
jne
add
push
nop
or
insl
xchg
lea
or
jae
cmp
jne
push
add
shl
popa
ret
ja
ret
inc
jmp
sbb
mov
in
sti
sahf
sub
add
cmp
add
loop
push
or
testb
cmc
and
mov
dec
jno
xchg
lcall
and
cmp
jae
add
mov
jbe
jne
xchg
push
xchg
lahf
or
sbb
fadd
pop
push
loop
push
insb
push
ja
add
push
jmp
divb
adc
dec
add
inc
rcrl
mov
stc
jne
dec
pop
enter
rcrb
xchg
fcompl
add
sub
in
cmpl
push
popf
mov
test
push
neg
mov
cmp
add
mul
mov
aas
add
je
aam
iret
xor
insb
shl
jmp
lea
shl
fcomps
add
push
xor
inc
cmp
mov
dec
push
test
je
neg
mov
push
or
icebp
lret
into
ljmp
push
pop
adc
int3
mov
test
fsubrl
lea
aad
lods
add
add
jmp
or
arpl
shlb
inc
mov
pop
mov
cmpsl
mov
sbb
push
push
and
sahf
fsubl
pusha
inc
add
into
scas
push
jne
test
push
mov
pop
add
cwtl
mov
or
and
pop
int
cmp
and
xor
jle
push
pushf
push
jno
sbbl
pop
mov
mov
or
or
or
push
push
jnp
lock
ja
push
or
dec
push
xchg
test
rorb
sahf
xor
and
push
sbb
lret
mov
or
sbb
lods
or
and
pop
sub
push
shrb
inc
inc
inc
mov
fiaddl
xor
movsb
ss
scas
fimuls
or
outsb
add
add
push
cmp
jge
lea
sub
add
sub
es
or
mov
testb
mov
xor
or
fstl
ffreep
add
cmp
enter
cmp
xchg
or
iret
addb
iret
cmp
cmp
xchg
or
orb
or
or
push
cmp
or
jecxz
or
lock
mov
outsb
mov
xchg
in
mov
push
mov
je
jmp
rorb
push
cmp
jne
lea
pop
add
je
add
sbb
push
pop
xor
pop
xlat
sub
ficoms
mov
pop
and
sub
imul
lock
jecxz
and
inc
insl
or
testl
ja
mov
psubsw
push
mov
sub
neg
sbb
pop
pop
or
jmp
cmp
fildll
add
pop
lea
add
sarl
jg
or
fcoms
mov
mov
cmp
inc
in
push
and
bound
and
mov
and
jge,pn
jnp
and
and
insl
jp
incl
sar
or
test
loop
enter
sub
daa
dec
test
mov
add
xlat
mov
loope
push
sub
rcrb
insb
pop
push
add
aam
mov
xlat
inc
repz
inc
ret
out
and
push
push
xor
push
mov
shlb
lods
fsubs
dec
dec
sbb
push
push
andl
les
add
xor
or
mov
in
sub
or
dec
cmp
inc
cmp
sub
pop
pop
je
pop
testb
arpl
push
mov
add
inc
inc
or
scas
mov
or
sub
mov
outsb
sbb
inc
push
add
call
sbbl
jle
sbb
pop
jae
je
or
or
je
pop
andb
mov
sbb
sti
lcall
sub
sarb
enter
or
add
mov
ret
and
clc
pop
rolb
sub
pop
pop
mov
insl
or
sub
jecxz
ret
sbb
rcrb
sbb
xchg
ret
aam
add
shr
mov
dec
in
inc
mov
pop
inc
mov
cmpb
and
lea
ret
scas
je
sub
dec
cwtl
xor
push
pop
sbb
sbbl
add
loop
femms
mov
add
loopne
daa
add
sub
mov
inc
cmpsb
mov
or
ss
popf
add
push
or
shlb
and
pop
loopne
cmp
inc
lods
test
sbb
xor
sbb
mov
aas
daa
ret
push
mov
jmp
inc
or
jne
push
mov
pop
cli
repnz
das
je
sar
mov
xchg
mov
pop
add
xor
xchg
mov
mov
pcmpeqb
xor
mov
adc
and
xorb
push
cli
cltd
test
daa
pop
add
push
or
iret
call
mov
test
insl
sbb
cmp
add
sub
inc
rorl
dec
fisubrl
into
stos
sti
shrl
jnp
cmpsl
jp
push
cmp
lds
stos
sbb
popa
fsub
adc
gs
inc
movsl
dec
sbb
xor
mov
cmp
jae
orb
mov
xchg
cmc
or
aam
rcrl
data16
inc
jne
shl
mov
lods
mov
sbb
idivl
sbb
ret
lock
gs
push
mov
int
std
lods
mov
mov
jae
andb
or
lret
mov
cltd
arpl
aad
jl
jmp
mov
or
sarl
add
loop
dec
add
jle
xchg
or
rcrb
lds
sbb
or
jg
scas
xchg
das
mov
inc
inc
add
cmp
jl
push
pop
sub
pop
in
cmp
push
fadds
orb
cmp
add
or
ds
negb
mov
dec
lods
shl
aam
lcall
data16
std
lock
xlat
add
ljmp
les
je
jl
mov
fsubrs
mov
push
sub
ret
in
clc
sub
in
pop
std
mov
inc
push
hlt
or
inc
add
mov
js
push
mov
mov
arpl
pushf
push
push
lods
ret
xor
rcrl
and
fisubrl
push
and
popf
je
in
mov
mov
and
mov
dec
pop
jl
add
imulb
adc
mov
call
pushf
jecxz
jmp
popl
notl
fs
jno
rcr
pop
clc
push
imul
fwait
mov
pop
rol
mov
xor
cli
pop
fisttpl
inc
xchg
imul
ret
sarl
adc
inc
xor
pop
inc
xor
or
sbb
or
inc
mov
in
lock
sub
icebp
pop
mov
jae
or
popa
jge
ja
pushl
push
push
lea
test
pop
pop
inc
repnz
inc
or
les
fldl
ss
leave
push
add
or
icebp
popf
jmp
or
sbb
mov
in
sbb
jmp
pop
push
aas
pop
push
xchg
xchg
mov
inc
sbb
mov
sbb
loope
push
push
add
loop
or
cmpl
mov
mov
jno
dec
mov
das
cs
movsb
test
mov
add
in
pop
add
icebp
pop
icebp
flds
call
sbb
insb
xorb
jo
push
inc
or
cli
jne
icebp
xor
push
pop
aaa
mov
adc
cmp
inc
mov
mov
mov
daa
inc
shr
sub
sbb
icebp
das
jo
clc
or
add
push
fs
dec
adc
inc
dec
mov
sbb
testl
adc
pushl
xor
adc
daa
add
cmp
sbb
pop
jmp
sub
xor
sahf
shll
hlt
lahf
cmpsb
lods
and
push
cmp
lods
ljmp
repnz
push
cmp
psadbw
and
andb
dec
stos
jmp
xchg
push
adc
push
enter
pop
xchg
int3
dec
add
lret
lock
mov
add
sub
lods
cmp
pop
cmp
and
or
out
cmp
test
adc
jge
iret
sub
push
lock
es
ret
test
push
cld
push
push
jno
insl
push
or
shll
mov
add
test
jecxz
xchg
push
in
sti
pop
sub
xor
sub
lods
xor
or
mov
cmp
clc
ja
xchg
sub
lret
push
int3
negl
test
es
xor
jp
inc
in
lods
pusha
and
or
fidivs
insb
fs
into
jb
mov
add
mov
pop
push
adc
sub
pop
and
xor
and
sbb
outsl
mov
lea
fildl
fs
sub
cmpsl
loopne
add
cmp
in
inc
sbb
scas
xor
ret
int
imul
and
insb
jmp
lahf
lock
movsb
addl
inc
inc
mov
sbb
jle
daa
mov
dec
or
movl
mov
adc
adc
ja
fcoms
mov
mov
add
mov
xor
mov
mov
and
sub
push
push
pop
pop
test
stos
roll
adc
aad
pop
mov
imul
int
sbb
xlat
fs
sbb
adc
adc
in
or
mov
mov
dec
cld
sbb
mov
es
lock
ret
push
mov
mov
mov
shrb
aam
mov
xor
mov
add
aas
sbb
push
fstps
aad
pusha
adcl
data16
adc
push
mov
adc
adc
push
sub
jecxz
cmp
mov
pop
push
fs
push
or
xchg
sub
pop
or
out
enter
inc
dec
aam
lds
in
pop
xchg
outsb
push
rolb
pop
and
mov
lds
dec
pop
mov
inc
rcl
sbb
push
lods
and
add
adcb
in
xchg
mov
fistpl
dec
sbb
mov
sub
int
inc
and
dec
fs
add
stos
jo
mov
arpl
call
xchg
and
outsb
push
je
rorb
or
int3
adc
dec
mov
test
dec
test
sub
push
push
push
lods
cbtw
xlat
mov
mov
mov
and
add
iret
lahf
adc
mov
push
and
lret
addb
ror
inc
pop
addb
pop
int3
push
or
pop
pop
int3
aas
dec
imul
sbb
add
cmpsb
adc
int3
iret
scas
sti
inc
or
push
jo
jl
sbb
add
int3
iret
lock
nop
xchg
add
pop
notl
push
int
in
enter
lock
aaa
pop
sub
push
lods
add
int3
aam
int
or
and
pop
adc
add
into
icebp
pusha
add
iret
add
jl
adc
xor
dec
mov
out
lods
or
cmp
jb
shrl
sbb
jnp
add
inc
adc
mov
ret
sbb
data16
pop
lret
jbe
adc
movsb
into
or
fnsave
addl
add
aas
rolb
lea
jecxz
push
mov
or
or
sub
clc
mov
push
out
and
sub
cmp
jmp
mov
mov
xor
fimull
sarb
js
stos
push
adc
bound
jmp
shl
fbld
inc
and
int
into
mov
nop
test
cmpl
ss
and
fbld
dec
je
dec
ja
jns
rclb
jmp
add
jmp
imulb
cld
pop
pop
mov
out
mov
nop
mov
or
push
sub
std
test
aaa
pop
xor
lods
aam
pop
push
or
dec
icebp
xchg
out
push
push
push
orl
mov
adc
testb
shll
add
pusha
ds
sub
loop
shrl
in
popa
mov
rclb
adc
es
or
mov
inc
vmovsldup
and
mov
inc
aad
cmp
test
mov
test
sahf
adc
adc
out
fiaddl
in
lods
push
push
iret
je
pop
ljmp
pushf
sbb
jmp
outsb
scas
push
or
inc
dec
add
dec
or
ficoml
jb
cwtl
mov
lcall
es
pop
and
insl
scas
ret
cs
sub
add
push
mov
out
mov
clc
or
push
push
sti
mov
std
dec
rclb
fs
xor
mov
sbb
scas
jg
push
inc
call
pop
jbe
cmp
inc
pop
inc
ficompl
and
or
jg
mov
add
pop
movb
inc
inc
jmp
lret
pusha
into
insb
loope
test
aam
mov
or
je
xlat
jl
inc
dec
pop
adc
std
ret
mov
inc
mov
inc
jne
cmpb
mov
push
or
sbb
scas
lds
push
mov
jb
popa
mov
jae
xchg
cmova
adc
pop
out
scas
je
push
test
in
push
sub
inc
cmpsb
dec
and
sbb
pop
push
pop
rolb
lock
push
nop
or
pop
pop
test
call
fisubl
rcr
mov
xor
jle
ss
adcb
cmp
pop
fwait
jo
incl
mov
icebp
pop
and
sub
sub
add
sbb
mov
imul
jmp
adcb
adc
and
je
add
xchg
or
imul
adc
push
mov
push
jnp
lcall
arpl
enter
lret
je
mov
sbbl
mov
inc
clc
aaa
mov
add
pop
sbb
inc
cmpsb
imul
push
lods
push
jecxz
add
lods
ret
adc
mov
adc
mov
or
lock
and
aaa
or
ret
xor
xchg
call
or
dec
or
mov
and
test
push
or
pop
or
iret
jnp
inc
jae
fwait
adc
pop
fwait
adc
loopne
push
adcl
rclb
dec
ss
rcrb
or
dec
add
or
pop
and
incl
or
pop
les
adc
or
insb
mov
outsl
add
repnz
add
js
fs
in
je
clc
add
ljmp
lock
xor
mov
adc
call
mov
bt
mov
std
jge
adc
pop
lock
rcrb
adc
aad
aas
xchg
rcrb
sbb
rolb
push
data16
sbb
dec
pop
dec
xor
mov
mov
mov
fstpt
push
xchg
mov
inc
stos
push
mov
in
sbb
nop
or
cmp
and
mov
dec
fs
adc
jbe
xchg
mov
xchg
pop
test
adc
sbb
cmp
adc
dec
aam
leave
movl
jae
enter
aam
and
add
fwait
stos
pop
adc
sbb
test
inc
fadd
jmp
shll
adc
leave
fisubrl
and
pop
int3
jne
dec
in
sbb
sub
xchg
pop
xor
mov
je
ds
mov
aad
sbb
in
jg
fidivl
inc
repnz
jmp
pop
mov
sub
fsubrl
loopne
jnp
popf
mov
pop
jge
je
push
fs
je
fstpl
int
mov
add
push
mov
inc
cli
and
aad
sbb
xor
insl
mov
out
jno
fwait
pop
cmpb
dec
mov
or
or
cmpl
andl
fldcw
mov
or
divl
push
or
or
lock
push
popf
out
push
cmp
or
fldcw
fwait
cmp
adc
call
mov
pushf
or
mov
lds
or
insb
lea
or
shrb
les
xor
cmc
xlat
mov
jnp
fwait
or
mov
mov
rcrb
pop
adc
mov
cmp
sbb
xchg
or
add
scas
push
mov
inc
jo
push
jae
outsl
ss
pop
test
pop
pop
cmp
cmc
jp
pop
mov
imul
push
and
ret
mov
sbb
add
cmp
and
jnp
clc
xor
or
lret
cltd
lods
cs
jbe
jne
mov
pop
dec
orb
add
addr16
inc
jl
mov
or
jge
ret
add
cmp
jle
push
xchg
or
inc
nop
or
cltd
add
gs
or
sbb
xchg
pop
xchg
sbb
mov
rcll
nop
push
mov
add
cli
scas
cmp
mov
sub
push
sub
cltd
sbb
pushl
lret
call
loop
shlb
push
add
add
mov
jl
lcall
cmp
rorl
mov
mov
rclb
mov
xlat
repz
push
enter
js
sbb
push
sub
out
sarb
add
rcrl
pop
cmp
pop
inc
pop
add
sub
mov
orb
decb
fldt
repnz
mov
mov
pop
shlb
or
icebp
pop
cmp
push
lret
cld
pop
pop
in
scas
loopne
jmp
mov
mov
pushf
and
fpatan
stos
test
dec
imul
pop
xor
add
add
push
insl
sbb
jae
cwtl
cmp
and
add
pusha
fwait
into
sarl
pop
mov
jae
popf
ret
xor
cld
or
cld
inc
orb
sub
not
fcmovne
fstpl
xor
and
ficoml
call
adc
mov
dec
mov
pop
and
ja
cmpl
or
add
xadd
cs
or
test
adc
orb
test
push
loopne
add
mov
dec
rcr
cli
lret
mov
jo
cli
dec
push
add
fwait
push
or
and
testl
rolb
test
sub
mov
push
lret
inc
pop
add
cwtl
mov
adc
aaa
pop
push
fs
pusha
int
adc
sbb
ja
and
nop
push
mov
mov
inc
add
sub
mov
call
fdivrs
mov
and
popa
pop
sbb
push
dec
pop
int
fldcw
or
and
xchg
mov
int3
push
cmp
jl
push
xor
mov
jnp
testl
fbld
push
adc
jg
add
dec
mov
and
inc
test
jg
xchg
pushf
div
ret
mov
das
or
or
cltd
in
push
sub
clc
int3
mov
mov
sbb
inc
push
sbb
shlb
insb
out
lret
jmp
adc
fdivl
jno
add
cmp
xchg
pmaxsw
jb
jbe
pop
and
sub
push
push
mov
mov
push
jle
movb
test
addr16
inc
jne
pop
das
mov
push
das
outsl
inc
stc
mov
mov
adc
ss
jp
sti
daa
jl
cmpb
mov
cmp
sbb
cmc
incb
push
je
fstpt
xor
incl
adc
add
push
je
cmp
jle
xlat
fldenv
into
mov
scas
pop
ss
push
adc
cld
movsl
movsl
movsw
mov
mov
jnp
mov
mov
mov
inc
cmp
pushf
scas
sbb
mov
es
mov
mov
mov
add
ss
iret
fnstenv
sbb
aas
in
bswap
cwtl
sub
mov
add
daa
mov
call
roll
cs
sete
data16
dec
push
push
fldenv
add
adc
pop
mov
pusha
ret
add
loop
ror
into
mov
out
or
add
mov
shr
or
lea
mov
add
rcll
dec
dec
or
jp
test
sbb
xor
push
ret
pop
mov
xchg
adc
dec
inc
popa
xorl
sbb
jecxz
in
jne
cmp
push
or
pop
data16
add
sbb
loope
rcl
cmp
lods
jle
cmp
add
das
xchg
aaa
xchg
roll
mov
pop
jg
in
or
sub
popf
sub
cmp
jne
arpl
addl
shrb
idivb
dec
inc
add
add
add
mov
adc
lods
sbb
jae
add
jae
movsl
ret
or
loope
mov
or
or
lock
mov
fldenv
xchg
or
xor
frstor
pop
push
movsl
or
add
inc
mov
imulb
ret
push
pop
cmp
test
adc
dec
jo
mov
dec
incl
and
add
cmp
push
push
sarl
rorl
dec
popa
or
aam
adc
sub
ficoms
loopne
mov
leave
and
xchg
xorb
push
cltd
xor
roll
add
or
loopne
aas
sarb
je
and
inc
cmp
mov
in
mov
pop
and
and
inc
mov
loopne
cmpl
push
fisubs
jmp
mov
lods
cli
and
into
mov
or
cmc
roll
fdivr
lea
ja
outsl
lret
xchg
xchg
push
dec
lea
iret
arpl
sub
sahf
mov
inc
or
add
test
sbb
add
jo
or
pop
fistpll
jbe
inc
inc
or
cmp
outsb
mov
iret
or
sbb
cmp
jne
mov
lods
or
push
lea
cvtps2pd
std
pop
out
mov
inc
aaa
cmpsl
int
pop
add
mov
fnstcw
push
sub
push
xor
mov
fcomip
mov
adc
push
add
and
adc
add
and
insb
test
jmp
push
inc
mov
fcompl
dec
sub
fisubrs
je
add
sub
aam
je
mov
push
js
in
or
adc
inc
mov
jo
insb
stos
mov
stos
pop
mov
mov
test
into
sti
add
push
mov
out
push
xor
test
add
mov
cld
sbb
jb
mov
xor
and
rclb
mov
add
pop
pop
mov
ja
sarl
pop
daa
and
lret
mov
rep
inc
inc
mov
ret
pop
push
pop
xchg
stos
notl
xor
int
xchg
in
mov
and
sbb
leave
push
push
xor
and
and
inc
rcrb
pop
push
dec
mov
adc
push
cli
hlt
fidivrs
loopne
xchg
add
enter
je
mov
ja
and
mov
sbb
cmp
mov
cmpsb
adcb
mov
jg
dec
enter
mov
jb
fwait
xchg
xchg
adc
push
and
and
loopne
pop
test
mov
pop
jle
adc
or
pop
cld
push
push
stos
aas
lahf
mov
mov
push
push
xor
mov
push
xchg
movsb
out
rcr
mov
je
xchg
adc
mov
test
mov
mov
push
rolb
push
mov
adc
xchg
dec
push
or
clc
sbb
and
push
popf
adc
xor
addl
pop
ja
xor
inc
mov
and
add
aam
mov
or
into
xchg
pushf
adc
and
push
or
add
call
and
sbb
fwait
xor
cmc
and
stos
test
pop
int
in
mov
in
add
add
das
testb
aad
dec
or
pop
dec
add
adc
pop
and
xor
rorb
es
and
add
loop
push
sti
mov
pusha
repnz
push
inc
sbb
repnz
lea
enter
ret
sbb
les
xchg
nop
addr16
or
jmp
adc
pusha
sub
push
lods
test
lock
xor
mov
out
push
loopne
push
cmp
clc
jge
sub
andb
or
dec
sbb
xlat
xorl
or
adc
dec
movsw
mov
aas
adc
pop
loope
mov
xchg
sub
xor
daa
neg
sbb
add
mov
or
inc
inc
and
ja
sbb
inc
add
cmp
sub
xor
push
cmp
xor
jb
cmp
jae
je
popa
pop
dec
pop
mov
outsl
test
in
aas
pop
push
adc
cmpsb
int3
shlb
sub
pushl
adc
pop
bound
pop
or
xor
pop
or
loop
bound
inc
stos
xor
fisubs
into
add
xor
cmpsl
mov
icebp
jle
xlat
mov
rcl
xchg
ljmp
xor
push
mov
or
cs
sbb
or
fstp
into
mov
shr
pop
sub
cmp
fistpl
mov
adc
mov
or
dec
inc
inc
jge
inc
rcll
push
add
or
push
mov
fimuls
lea
jl
fdivs
add
push
push
unpcklps
gs
sbb
add
and
sbb
shrl
push
out
dec
add
push
adc
mov
add
add
shl
sarl
xor
jae
sti
mov
sarl
gs
pop
xor
sbb
je
inc
sub
data16
or
cmp
addr16
lds
push
call
lock
loopne
shl
sbb
cmp
push
aam
adc
je
or
inc
shl
or
jne
out
sub
mov
push
or
ja
jp
notb
cmp
inc
sti
xor
cmp
dec
aam
push
mov
fsubrl
add
stos
js
push
add
push
push
sub
aam
shlb
sub
ss
mov
inc
insl
hlt
int
cmpsl
icebp
psubusw
int
or
add
mov
xchg
movsl
dec
mov
sub
addr16
push
add
jle
int
or
jnp
psubusb
mov
jge
push
pop
andl
ja
push
pop
or
mov
les
stc
ret
jmp
cmp
add
jmp
ljmp
pop
xor
add
aad
sbb
jne
mov
push
mov
inc
cmp
xchg
jmp
or
pop
pop
mov
add
jne
pusha
arpl
repz
and
push
sbb
inc
and
mov
fsubr
shrl
jne
jne
mov
fsubl
decb
adc
je
fbstp
into
gs
loopne
add
xor
jl
jmp
jnp
and
or
pop
dec
xchg
push
inc
jmp
int3
add
jbe
jae
insb
lcall
adc
pop
bound
test
mov
rolb
pop
cs
insl
jecxz
pop
or
jg
movsb
xchg
sub
out
adc
pop
fisttpll
or
cmc
add
mov
cmp
push
adc
jg
mov
pop
xorl
adc
stc
sbb
inc
cmp
insb
cmp
fstps
xor
mov
xchg
cld
jbe
jge
add
mov
push
or
add
mov
mov
rclb
adc
int
sub
jp
xor
sti
cmp
cmp
and
loopne
pop
sbb
call
inc
sbb
sarl
cmp
add
mov
add
pusha
mov
cmpsl
leave
jb
fdivp
test
fwait
pop
cmp
lock
imul
fstpt
cmp
dec
ret
lods
sub
cmp
cmp
pushf
jmp
or
pop
roll
adc
mov
das
dec
jno
loop
stos
xchg
pop
pop
jno
pop
enter
jbe
pop
mov
ljmp
test
sub
mov
fisubl
add
sarl
lods
inc
mov
loop
mov
int
int
lock
and
add
out
dec
shll
call
xchg
dec
shr
in
out
sti
out
aas
in
adc
inc
add
outsl
es
dec
shlb
mov
and
and
and
sbb
add
add
insb
loopne
data16
faddl
push
mov
lret
push
popl
maskmovq
cli
scas
out
ss
aam
jmp
xchg
je
sbbl
push
sub
pop
and
sbb
pop
ror
xor
scas
push
js
enter
loope
mov
iret
mov
lock
jmp
dec
lods
out
or
or
sahf
mov
push
cli
imul
in
and
add
add
xor
mov
mov
cs
lcall
fdivrs
push
and
inc
sbb
outsb
jecxz
mov
add
je
jge
xor
in
jnp
or
sub
jle
adc
adc
sub
add
cli
and
inc
cmpl
xchg
ret
fsubl
insb
and
subb
fldenv
sub
movsl
mov
sbb
push
stc
adc
jne
push
or
dec
push
mov
sbb
or
adc
sti
mov
xchg
js
mov
mov
push
inc
stos
mov
mov
loop
xchg
mov
jl
jb
out
mov
jl
dec
jmp
insl
inc
decw
add
ret
sub
mov
mov
sbb
das
or
int
push
mov
add
inc
aad
add
andb
rorl
cmp
mov
pop
es
loopne
push
rorl
dec
hlt
inc
inc
loop
mov
mov
cmp
pop
xor
and
push
sbbl
call
insl
mov
and
sub
data16
dec
add
nop
repz
jbe
adc
push
into
in
in
jmp
mov
ret
and
inc
mov
adc
fs
int3
mov
adc
daa
jg
std
mov
aas
ja
loop
call
mov
pop
in
stos
test
rolb
mov
push
loope
jecxz
jl
movsl
or
sub
push
push
cmp
jecxz
into
lret
ljmp
push
and
notl
outsb
out
add
jle
add
push
pop
roll
ds
lods
inc
inc
add
shrl
cld
push
xor
xor
adc
cmpsb
enter
or
insl
hlt
add
call
lods
jp
or
or
jg
sbb
add
int3
bound
into
out
bswap
sub
data16
and
adc
xor
cmc
push
xchg
add
adc
fadd
shr
inc
shlb
ljmp
sbb
mov
push
and
ss
sub
xor
sbb
or
add
loop
lret
rclb
add
out
or
cmp
dec
mov
cmpsb
sub
pop
rcll
sbb
jmp
loop
fisubrs
cmpsb
jae
out
fimuls
movl
add
adc
fidivs
addl
mov
jo
sbb
mov
cmp
jmp
cmp
mov
stos
adc
outsl
push
adc
cmp
sbb
sub
ret
push
enter
clc
in
cmpsb
inc
add
daa
cmpl
push
pop
adcl
hlt
movsl
add
test
add
pop
mov
arpl
jne
push
popa
scas
push
jmp
stos
test
sub
aas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
lods
xor
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
sahf
mov
add
and
or
adc
stos
sbb
data16
call
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
jmp
stc
add
mov
push
loope
or
insl
or
pop
arpl
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
jg
pop
popa
mov
into
cmp
mov
inc
movsl
fisttps
xchg
fsubs
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
mov
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
lcall
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
lcall
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
ljmp
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
lcall
inc
insl
jge
call
pop
or
adc
jg
lcall
clc
sar
imul
push
js
or
push
addl
inc
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
inc
push
cmp
aaa
push
scas
mov
fidivrs
mov
std
pushl
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
out
std
add
fnstenv
outsl
insl
outsb
ss
aaa
fwait
or
imul
je
jae
outsl
jb
adc
and
imul
add
outsb
jae
arpl
gs
iret
mov
je
jo
popa
je
sub
dec
outsl
fs
pushl
outsl
je
sub
and
gs
imul
xor
repz
pop
inc
dec
pop
sub
pushl
mov
add
add
add
add
push
add
add
add
ljmp
and
cmp
pop
or
aaa
xor
push
push
pop
mov
jl
scas
or
or
pusha
add
jo
js
pop
adc
pop
add
add
lahf
mull
mov
add
insb
add
jns
outsb
jne
insb
or
jg
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
pop
dec
push
push
inc
hlt
mov
enter
lock
mov
jle
push
or
roll
jae
mov
outsl
arpl
xor
jb
fcomp
insl
lods
prefetch
or
inc
push
dec
inc
xor
lret
cmp
sub
pop
popa
popa
jmp
jne
imul
mov
or
push
push
adc
insb
sti
cmp
push
dec
dec
inc
add
outsl
dec
adc
xor
cmp
sub
insb
je
push
imul
or
mov
aaa
outsb
mov
mov
jne
push
mov
data16
mov
imul
in
in
jae
fs
sbb
jbe
jb
and
movsl
arpl
and
insb
sub
mov
in
pop
sub
leave
pop
jnp
das
pop
push
fsub
pop
inc
jae
fdivs
cmp
outsl
jo
pop
xor
jle
loopne
lods
dec
inc
and
stos
nop
jl
loope
push
and
sbb
insl
lods
je
mov
or
sub
das
pop
pop
jae
shll
add
and
add
addr16
insl
and
das
test
insl
ss
xor
dec
xor
inc
sub
iret
sub
popa
mov
clc
sub
xor
shrw
add
pop
loope
mov
dec
sub
jecxz
ficoms
inc
sub
and
dec
imul
mov
jns
or
insb
jnp
and
push
aam
pop
cs
xchg
add
cmp
loopne
sub
ds
push
mov
jns
cwtl
pop
mov
jne
inc
fdivrl
sbb
xlat
cmp
dec
mov
push
sub
jbe
fidivs
adc
push
lds
jbe
rclb
cmpl
sti
lret
xchg
xchg
jae
imul
and
inc
dec
pop
rorb
add
pop
or
pop
push
add
and
mov
inc
add
in
push
dec
ds
or
add
mov
and
faddl
les
ss
rcrl
sub
and
cmpsb
pop
nop
inc
call
je
rorl
loopne
cmp
mov
ljmp
jae
arpl
mov
or
imul
lods
push
int
popa
jbe
and
mov
xchg
mov
pushl
fs
jo
xor
xor
and
arpl
xor
cmp
and
bound
mov
shll
push
daa
gs
dec
jb
push
mov
pop
and
bound
xor
push
push
sbb
xor
das
xor
xor
cmp
aaa
cmp
xor
dec
and
xor
cmp
inc
mov
adc
popa
jb
fs
xor
mov
push
adc
cmp
outsl
jae
lods
pop
or
addr16
dec
push
mov
xor
push
bound
insl
sbb
outsb
push
cmp
ja
inc
int3
jo
insb
sti
inc
arpl
cmp
push
das
das
ja
cs
in
mov
and
add
inc
pop
or
or
insl
xor
out
and
mov
pop
bound
ficompl
jl
and
punpckldq
popa
ja
pxor
je
outsl
push
popa
outsb
and
jbe
sub
outsl
outsl
sti
imulb
jae
or
insl
jo
or
fisubs
je
fwait
jmp
push
jno
bound
dec
insb
xlat
pop
imul
imul
js
aaa
xor
repnz
bound
mulb
js
popf
je
pop
or
jae
out
ret
popa
popa
and
fsubl
cmp
push
cs
or
adc
and
mov
mov
outsb
and
sbb
sbb
mov
or
jb
xor
pop
ss
pop
mov
dec
popa
jb
gs
mov
mov
xor
mov
je
push
sub
cmp
sbb
push
imul
or
mov
popa
in
and
insl
adc
push
clc
push
jnp
push
inc
adcb
cs
ljmp
push
and
inc
dec
sub
aaa
jge
mov
cmp
and
das
sub
sub
or
xor
cs
xchg
sub
mov
sub
add
inc
mov
iret
xchg
out
ret
inc
cmp
daa
pop
clc
and
popa
inc
pop
popf
jae
inc
jne
jb
jne
loopne
subps
xchg
cmp
jae
pop
clc
xchg
sub
jo
je
outsl
pop
push
fadds
sbb
dec
add
jbe,pn
lock
es
outsl
jp
inc
das
xor
stos
push
sbb
mov
ja
gs
pop
aad
or
pop
imul
fucomi
fidivl
push
mov
data16
imul
gs
jg
out
in
inc
imul
sub
cmpsb
cli
push
pop
dec
push
outsl
sbb
mov
shll
cmp
fwait
or
dec
test
jae
or
jne
sub
das
push
cmp
mov
je
lock
mov
push
add
and
stc
inc
dec
scas
imul
or
add
mov
push
inc
push
push
lret
jge
ljmp
imul
xchg
push
pop
push
daa
pop
pusha
leave
adc
or
aad
pop
bound
jle
shrb
mov
jae,pn
push
jae
mov
and
arpl
scas
inc
movsl
inc
mov
mov
sub
and
nop
add
adc
jns
inc
dec
push
ret
popa
xor
dec
in
adc
ret
pushf
cs
fildl
jecxz
addb
inc
dec
dec
add
dec
dec
inc
xor
push
fmul
xor
cmp
dec
pop
shll
adc
sbb
insb
and
lea
out
cs
and
inc
sarl
out
add
mov
xor
es
push
sbb
xor
daa
pop
and
sbb
inc
adc
jmp
cmpsl
insl
outsl
jbe
or
add
testl
rcrl
inc
dec
mov
cmp
mov
inc
insb
cwtl
ljmp
jae
inc
push
hlt
jl,pn
fisttpll
push
inc
inc
or
push
dec
and
pop
out
arpl
ss
ret
push
dec
gs
jb
or
jmp
push
adc
lods
mov
xchg
addr16
inc
dec
inc
push
pop
dec
rcll
push
fwait
jb
inc
cmpsl
je
sbb
mov
add
add
pop
enter
add
inc
xlat
fcoms
loope
push
sub
fwait
jb
sbb
push
cmc
push
mov
icebp
jns
jb
mov
insb
push
mov
aas
add
mov
data16
jns
add
pop
mov
pop
mov
push
jmp
fnstenv
ret
dec
inc
dec
mov
out
sub
mov
pop
dec
addr16
insl
mov
ja
jecxz
or
jne
out
lods
inc
fmuls
jae
mov
xchg
sbb
dec
or
mov
inc
cld
or
fnstcw
dec
inc
push
dec
push
xor
push
gs
dec
dec
push
loop
add
hlt
jae
imul
xchg
imul
insl
data16
push
bound
pop
add
push
dec
mov
cltd
pop
nop
in
xor
fcoms
push
pop
adc
sbb
je
je
orl
jnp
orl
jl
out
jnp
jnp
dec
mov
pop
cmp
jne
xor
cmpl
mov
adc
or
adc
aad
inc
push
divl
push
or
dec
xchg
xchg
pop
incl
mov
pop
inc
xchg
push
jp
lea
ret
mov
in
mov
adc
push
push
inc
push
inc
pop
dec
sub
pop
test
outsb
mov
in
sbb
inc
push
inc
dec
mov
cltd
sbb
xor
outsl
pop
xor
inc
sub
lret
dec
push
sbb
mov
je
push
enter
outsl
xchg
mov
push
and
inc
dec
popa
jg
test
pop
add
imul
push
cwtl
add
add
adc
xor
loopne
xchg
cmpsb
xchg
subb
pop
add
mov
xor
sub
dec
push
mov
pop
mov
scas
call
sub
and
nop
cmp
out
add
les
out
push
hlt
jnp
daa
je
mov
int
popw
sub
lret
data16
push
mov
jo
sub
sub
push
aaa
mov
xor
dec
mov
insl
xor
push
lcall
mov
cmp
jl
orl
stos
or
fisttps
xor
pop
dec
lret
pop
inc
call
add
movsl
outsb
add
add
in
fwait
test
adc
out
arpl
bound
testl
push
and
jb
sarl
pusha
imul
inc
mov
inc
mov
sbb
or
ljmp
sub
nop
push
xor
xchg
xchg
cmp
jmp
stos
inc
stos
popa
jns
insl
call
sub
aas
pop
push
cmp
lahf
cvtpi2ps
add
push
dec
dec
mov
add
or
pop
push
inc
les
sbb
outsb
push
fwait
mov
testl
test
mov
pop
sbbl
or
lcall
jmp
testl
or
fiadds
addr16
inc
adc
push
shrl
and
lcall
jb
jo
or
aas
cmp
fdivr
or
or
jo
or
or
not
or
or
cs
pop
arpl
dec
scas
sbb
jo
aaa
jne
js
fs
arpl
arpl
or
fistl
insl
pop
inc
jbe
addr16
and
jb
add
pop
sub
inc
pop
inc
aaa
loope
jecxz
repz
dec
in
aam
xchg
or
push
fidivs
mov
idivl
arpl
icebp
add
daa
add
js
ret
jae
add
fsubp
push
or
ud2
fcmovnu
ja
dec
pop
xor
insl
add
fucomip
jb
popa
ja
jo
idivb
and
jns
test
lock
or
or
in
and
sub
push
push
adc
scas
shl
js
outsb
sti
adc
das
repz
and
push
cmp
gs
test
and
sub
jmp
sub
sbb
add
sbb
mov
into
lods
adc
inc
mov
jb
xlat
arpl
or
sub
jno
scas
mov
cmovno
push
dec
orb
add
fidivrs
mov
add
jg
imul
inc
inc
dec
add
or
out
rolb
cmp
aam
sub
js
pop
pushf
inc
jae
jae
icebp
sbb
jbe
pop
inc
mov
mov
enter
push
push
mov
jo
pop
sbb
sbb
pop
fadd
pop
add
cmp
insl
add
sbb
add
lcall
addr16
iret
sbb
test
arpl
mov
add
or
neg
fdiv
xchg
xchg
jne
movsl
jb
pop
xchg
outsb
cmp
sbb
or
rorl
inc
sahf
lcall
push
scas
push
dec
inc
dec
push
xor
out
and
add
out
adc
mov
imul
xchg
sarl
into
adc
arpl
push
loope
and
leave
ss
xor
pop
pop
and
mov
sub
outsl
or
sbb
jl
lods
out
pop
imul
fs
adc
push
push
call
ja
or
inc
sub
popa
out
sbb
dec
push
les
push
sbb
imul
jb
and
and
adc
jne
bound
jnp
in
outsb
dec
aas
jnp
sbb
add
cwtl
pop
or
inc
or
add
or
loop
or
xor
add
into
cmc
inc
stos
cmpsb
pop
jge
addl
pop
lahf
and
aaa
int3
or
pop
xor
or
push
and
dec
fisttpl
mov
push
mov
mov
daa
xor
test
pop
pop
add
mov
add
dec
mov
inc
dec
sbb
xor
push
sub
inc
xorl
xor
fidivs
aas
or
je
popa
add
add
cmp
jnp
sbb
jg
mov
or
mov
dec
sbb
sbb
inc
movntq
mov
lea
data16
outsl
pop
add
push
mov
xor
fsubr
outsb
lret
and
out
insl
sbb
fldenv
dec
pop
adc
mov
jb
bound
mov
je
inc
inc
imul
mov
insb
jne
mov
pop
sub
adc
cmp
push
hlt
test
inc
dec
push
push
lock
jp
inc
dec
inc
ret
js
jo
sub
fidivs
dec
adc
add
pop
enter
aas
mov
xlat
jmp
sub
mov
mov
stos
add
hlt
and
outsb
fmuls
fbstp
add
data16
xchg
adc
lea
pop
rorl
add
sub
imul
arpl
dec
dec
jp
push
push
dec
int
xor
inc
xor
or
pop
mov
or
push
sbb
rcll
adc
mov
lret
ret
mov
mov
push
or
jne
dec
or
cmp
pop
xor
inc
cmp
pop
mov
xchg
or
adc
and
or
in
and
aad
in
mov
fwait
mov
fs
inc
sbb
fsubs
popa
or
sub
dec
and
adc
sbb
or
nop
push
sub
and
add
std
xor
mov
es
pop
sub
pop
dec
pop
and
sub
and
mov
cmc
sub
sub
popf
dec
dec
mov
aas
insl
or
push
les
sbb
jae
mov
jne
movb
xchg
add
mov
sub
loope
inc
mull
outsb
popa
stos
add
dec
movsb
add
mov
scas
loope
iret
inc
loope
hlt
fsubl
mov
das
adc
lock
dec
dec
pop
mov
andl
add
stos
pop
xchg
adc
ret
cvtps2pd
adc
fs
arpl
inc
inc
and
sub
add
xor
push
fdivs
push
aas
stos
pop
mov
imul
dec
pop
add
jne
jae
test
cwtl
mov
scas
pop
sbb
dec
jbe
cmpsb
add
fadds
enter
cltd
in
push
lds
sub
cltd
dec
push
add
adc
addl
adc
add
out
stos
lret
add
pop
push
adc
adc
push
sbb
xor
call
add
int3
icebp
add
popa
or
or
imul
jle
and
sub
dec
xor
insl
add
add
xor
xor
add
and
xor
je
add
pop
or
or
add
xor
push
les
aaa
cwtl
pop
or
dec
rorl
dec
adc
cmpsb
imul
cmpsb
imul
mov
sbb
pop
sbb
js
xor
rcll
shlb
cwtl
inc
inc
add
call
fmul
es
mov
sbb
add
add
mov
aad
imul
push
das
push
arpl
or
orl
sbb
in
jnp
and
pop
xorps
adc
add
and
xor
ss
push
pop
push
or
push
pop
pop
jnp
dec
shll
insl
stos
and
jb
idivb
mov
ss
sbbb
test
xchg
sub
push
movsb
add
mov
leave
inc
sbb
xlat
or
pop
jnp
stos
xchg
mov
leave
out
inc
xchg
add
lods
pop
ret
lahf
add
addr16
sti
outsb
movsb
sub
jns
and
cmpsb
filds
mov
movsl
sbbl
in
adc
icebp
shll
pop
sbb
sbb
inc
mov
inc
inc
out
push
mov
iret
mov
in
call
jge
jle
push
add
pop
pop
fisubrl
xor
jg
rcr
fsubp
stc
cmp
jle
cmp
xchg
add
add
repnz
pushf
or
ret
paddb
adc
mov
out
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
incl
adc
mov
decl
js
inc
outsl
loopne
jmp
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
dec
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
jmp
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
decl
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
and
jle
int
add
sti
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
and
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
loop
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
sti
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sub
ficomps
frstor
lret
push
adc
mov
or
add
fs
add
nop
inc
add
add
xorl
adc
add
add
inc
add
xchg
lock
je
outsl
fs
push
add
adc
inc
popf
push
inc
lock
outsl
popa
fs
cld
push
imul
pop
in
inc
js
sub
push
popa
or
outsl
jb
imul
dec
dec
push
adc
inc
stos
add
jne
js
gs
push
add
insl
outsl
fistl
sbb
jno
sbb
or
insl
adc
je
and
addw
call
inc
inc
adc
je
xorb
lcall
fwait
dec
stos
out
or
inc
pop
adc
or
dec
push
add
adc
cmc
and
xchg
add
or
in
dec
gs
pushf
jns
push
or
gs
mov
mov
outsl
push
imul
int3
in
or
push
adc
or
sti
outsl
mov
gs
data16
dec
push
jg
mov
loop
dec
inc
dec
inc
push
or
pop
push
dec
outsb
inc
test
sub
out
cmp
push
pop
mov
add
mov
adc
jb
mov
insb
jo
push
jns
addb
and
push
loope
push
outsl
jo
xor
mov
ret
pop
and
pop
push
add
pop
push
jle
or
pusha
cltd
push
jns
gs
or
enter
cmp
mov
je
sub
outsl
inc
sbb
aaa
push
fimuls
sbb
es
pop
rorb
call
cmp
sbb
push
lea
cwtl
jae
dec
mov
xlat
stos
or
or
cwtl
mov
push
daa
lods
rcrb
test
mov
push
popa
popa
bound
popf
or
imul
xchg
sbb
popa
pop
pop
mov
inc
jo
inc
push
ja
daa
and
je
fadds
fists
fcmovnu
imul
dec
mov
push
enter
or
insb
pop
adc
and
popf
push
pop
and
insb
push
pop
inc
push
rcl
push
dec
adc
lods
pop
xor
inc
sub
adcl
push
push
jo
inc
push
pop
adc
js
push
inc
inc
cmp
pop
or
je
sub
sbb
add
or
push
push
clc
xor
push
jb
adc
cmpsb
jmp
adc
push
or
sub
mov
adc
or
push
inc
push
push
imul
or
or
xchg
gs
or
xchg
gs
xchg
je
push
add
pop
gs
pop
adc
mov
and
je
inc
loope
fwait
in
xchg
sidtl
add
or
dec
add
pop
mov
inc
xchg
insb
int
sbb
pop
mov
out
sub
add
adc
pop
repnz
push
mov
add
mov
push
int3
add
insb
xlat
shrl
je
adc
nop
jmp
fcomps
add
and
jb,pn
nop
fwait
and
daa
jbe
mov
cs
pop
xor
and
dec
inc
add
jo
dec
or
adc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
sub
sub
jb
shl
mov
inc
xor
je
push
pop
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
push
pop
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
test
je
push
pop
jns
movzwl
inc
push
inc
mov
push
call
test
je
mov
add
jmp
call
popa
jmp
